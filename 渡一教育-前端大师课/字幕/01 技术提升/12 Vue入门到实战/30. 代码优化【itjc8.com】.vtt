WEBVTT

00:00.940 --> 00:03.220
上级客戴码我看着有点不爽

00:03.820 --> 00:05.780
然后我强迫真犯了

00:06.100 --> 00:09.140
我强迫真一犯我就得对他下手了

00:10.060 --> 00:12.340
不爽呢 有重复戴码了这里

00:13.020 --> 00:14.020
在这

00:14.940 --> 00:15.940
detail

00:16.700 --> 00:18.300
就是这个

00:18.820 --> 00:20.940
今后呢也可能会有一些组件

00:20.940 --> 00:23.020
他这么有一些滚动条

00:23.500 --> 00:25.380
那他有了一些主动条的话

00:25.380 --> 00:28.420
他就不得不断的去触发这个事件

00:28.940 --> 00:29.940
你看吧

00:30.100 --> 00:31.580
我得在这呢

00:31.900 --> 00:32.900
去

00:33.420 --> 00:34.420
注册

00:34.700 --> 00:35.700
就是

00:37.540 --> 00:39.540
怎么说 在注册的滚动事件

00:39.740 --> 00:42.540
滚动事件里边我去向事件

00:42.980 --> 00:44.460
总线里边触发事件

00:44.740 --> 00:45.740
然后呢

00:45.940 --> 00:47.940
销毁的时候呢 我又得注销事件

00:48.340 --> 00:50.060
对吧 像这个有滚动条吗

00:50.260 --> 00:51.460
像这个玩意儿不得

00:52.220 --> 00:53.860
这我上级客戴码呢

00:56.340 --> 00:57.580
在这

00:57.940 --> 00:59.580
block list

00:59.780 --> 01:00.780
在这里边

01:01.020 --> 01:03.500
这里边 你看 我不得也得这样做

01:03.500 --> 01:05.500
所以说 我把这个代码优化一下

01:05.700 --> 01:07.020
就优化方式呢

01:07.700 --> 01:10.700
大家都懂 上级客戴码我一提到了就是混合

01:11.340 --> 01:12.420
我在混合里边呢

01:12.420 --> 01:15.580
因为这些代码分散在不同的生命周期函数里边

01:15.580 --> 01:17.740
对吧 所以说呢 我这里也一起混合吧

01:19.260 --> 01:21.100
等下去个名字叫做

01:21.100 --> 01:22.620
MadeScroll

01:23.540 --> 01:24.380
GIS

01:24.860 --> 01:27.380
就专门来处理主滚动条的

01:27.660 --> 01:29.460
来吧 这里边我导出什么呢

01:29.500 --> 01:32.900
因为我们混合的话 本质上就是导出一个主键配置对象

01:33.900 --> 01:36.220
那么我如果说直接导出一个主键配置对象的话

01:36.220 --> 01:38.740
问题就出现在哪了 就出现在这儿

01:39.340 --> 01:41.620
你看吧 出现在哪儿 出现在

01:45.940 --> 01:46.740
出现在哪儿

01:47.060 --> 01:47.940
出现在这儿啊

01:48.140 --> 01:51.460
就是个Rift的值呢 我不已经知道

01:51.660 --> 01:53.140
我不知道Rift的值是啥

01:53.540 --> 01:54.820
对不对 所以说呢

01:55.140 --> 01:57.460
我这个对象里边呢 要处理

01:57.580 --> 02:00.180
你需要告诉我这Rift的值 我才能进行处理

02:00.500 --> 02:02.460
那怎么办呢 那里一个 我就写个函数呗

02:03.020 --> 02:04.300
函数 你告诉我

02:04.740 --> 02:07.020
Rift的值是啥

02:07.380 --> 02:09.860
然后呢 我给你调问这个函数 我给你返回个对象

02:10.100 --> 02:10.980
就写这么一个东西

02:11.420 --> 02:13.060
以为这个东西过后呢 我在

02:13.340 --> 02:15.220
这些有滚动条的主键里边

02:15.740 --> 02:17.740
而且呢 要做那种类似处理的方式

02:17.740 --> 02:20.900
比方说 我触发滚动条的事件 滚动事件

02:21.100 --> 02:23.580
那么像这种主键里边呢 我就去导入这个混合

02:23.860 --> 02:26.020
让这个混合里边就帮我处理它

02:26.020 --> 02:27.100
提取一下重复带吧

02:27.460 --> 02:33.420
MazeCrop from MixedCrop

02:34.900 --> 02:36.460
然后这里边呢 它是一个函数啊

02:36.460 --> 02:38.260
你看混合不是一个数组吗 对吧

02:38.260 --> 02:41.580
我之前有一个混合 然后现在再加一个混合

02:41.940 --> 02:43.700
对吧 各自搞个各自玩各自的

02:44.060 --> 02:45.860
然后这里边呢 有一个参数

02:45.860 --> 02:48.460
参数什么呢 就是它的Rift值

02:48.660 --> 02:50.300
那Rift的值呢 你给它传进去

02:51.100 --> 02:52.180
给它传进去就完事了

02:52.580 --> 02:54.100
那么我希望它能给我返回对象

02:54.100 --> 02:55.940
一个返回的对象呢 就是一个混合的东西

02:56.740 --> 02:58.460
我希望呢 有了这个对象之后呢

02:58.460 --> 03:00.220
这个Before Destroy啊 我就不写了

03:01.100 --> 03:01.940
不写这个玩意儿了

03:02.620 --> 03:04.100
还有什么我可以不写的呢

03:04.100 --> 03:05.860
这个Mounty的我可以不写了

03:06.900 --> 03:08.620
然后MazeCrop里边呢 我这个Hand

03:09.940 --> 03:10.500
Handle

03:11.220 --> 03:12.020
Handle Score

03:12.420 --> 03:14.020
还有这个两个我都可以不写了

03:14.740 --> 03:17.220
对吧 你就玩 你就搞你自己的事情就完事了

03:17.660 --> 03:19.580
其他的事情呢 我带混合里边就做完了

03:20.020 --> 03:22.620
当然如果说你现在这样写的肯定没有效果

03:22.620 --> 03:24.260
因为现在这样子写的过后呢

03:26.420 --> 03:27.780
这个Top就出不来了 对吧

03:28.220 --> 03:28.820
就出不来了

03:29.500 --> 03:30.420
就这么个意思啊

03:30.740 --> 03:33.060
那么现在呢 我要去做这件事 怎么去做呢

03:33.060 --> 03:35.500
其实我就把刚才代码放到这儿

03:35.500 --> 03:36.420
首先一个Mounty的

03:39.580 --> 03:41.260
在这里边呢 我要干嘛呀

03:41.260 --> 03:43.540
我要去就把刚才代码拿过来啊

03:43.780 --> 03:44.660
之前的代码拿过来

03:44.940 --> 03:46.300
Mounty的时候呢 就这两行

03:48.980 --> 03:49.580
这两行代码

03:49.980 --> 03:50.940
这两行代码干嘛呢

03:50.940 --> 03:52.380
一个向事件总线里边

03:53.180 --> 03:56.220
注册一个事件 监听一个事件

03:56.220 --> 03:57.700
什么事件呢 就SetsMazeCrop

03:58.100 --> 03:58.700
这个事件

03:59.140 --> 04:00.580
当这个事件发生的时候

04:01.100 --> 04:03.220
说明一定有人触发了

04:04.060 --> 04:06.220
设置滚动高度的事件

04:06.460 --> 04:08.620
那么触发过后呢 我就是去设置滚动高度

04:09.060 --> 04:10.700
对吧 比方说点了一个

04:11.340 --> 04:12.100
到底步

04:12.900 --> 04:14.540
那么这样子呢 他就设置了一个滚动高度

04:14.540 --> 04:16.540
他会触发这个事件 那么我这里去监听

04:16.860 --> 04:17.740
监听这个事件呢

04:18.220 --> 04:19.100
我这里写个方法

04:19.100 --> 04:19.740
Message

04:21.900 --> 04:23.020
HandSetsMazeCrop

04:24.140 --> 04:25.100
当然了 这样子呢

04:25.500 --> 04:27.860
有没有一些隐患啊 当然肯定会有隐患

04:28.100 --> 04:29.460
隐患就是这个方法重名

04:29.740 --> 04:32.260
比方那个方法里边 跟组件里边又有同名方法

04:32.260 --> 04:33.940
肯定会使用组件里边的

04:33.940 --> 04:34.900
这个方法就失效了

04:35.340 --> 04:36.980
会有这么一个问题存在

04:37.740 --> 04:39.500
但是呢 我们说一个方法呢

04:39.500 --> 04:40.660
就尽量设置的

04:41.180 --> 04:42.780
含义就比较特殊一点啊

04:42.780 --> 04:43.740
去把设置权利一点

04:45.140 --> 04:46.580
名字吧 设置长一点

04:46.900 --> 04:48.620
含义特殊一点 尽量不要重名

04:48.620 --> 04:50.420
这也是混合比较麻烦的地方

04:50.420 --> 04:52.420
将来VU3会解决这个问题的

04:53.780 --> 04:55.740
好 那么这个含书里边我们干嘛呢

04:55.740 --> 04:56.780
就像之前写的

04:57.260 --> 04:59.300
handle six square

04:59.300 --> 04:59.980
就这个玩意儿

04:59.980 --> 05:00.740
这个玩意儿我们干嘛

05:00.740 --> 05:02.020
就是去设置

05:03.140 --> 05:04.260
去设置这个

05:04.580 --> 05:05.340
滚动高度

05:05.580 --> 05:06.460
设置谁的滚动高度

05:06.460 --> 05:07.860
设置多米元素的滚动高度

05:07.860 --> 05:09.140
那么多米元素是谁呢

05:09.140 --> 05:10.820
就是来自于Rave 对不对

05:10.820 --> 05:12.540
那么这个Rave的值是不是来自于它

05:12.540 --> 05:13.300
说这个地方呢

05:13.300 --> 05:14.660
我们要有一个动态属性

05:14.660 --> 05:15.860
取什么呢 取它的值

05:17.880 --> 05:18.560
就是这个

05:18.560 --> 05:19.880
好吧 这个件事情搞定

05:20.920 --> 05:21.800
好 同样的道理呢

05:21.800 --> 05:23.080
就是这个Mounty里边

05:23.080 --> 05:26.160
我们要写个before destroyed

05:26.720 --> 05:27.400
扶植一下吧

05:28.360 --> 05:29.160
before destroyed

05:29.600 --> 05:30.600
要写这么一个玩意儿

05:31.920 --> 05:33.040
这个玩意儿起什么作用呢

05:33.040 --> 05:35.680
就是当我这个组建销毁的时候

05:35.680 --> 05:37.440
我就不再去监听它了

05:37.440 --> 05:38.480
因为之前我监听了它

05:38.480 --> 05:39.400
现在我组建都销毁了

05:39.400 --> 05:41.560
那肯定不需要再去监听它了

05:41.560 --> 05:42.440
那我怎么办呢

05:42.440 --> 05:43.440
就把这个玩意儿

05:44.440 --> 05:45.680
拿过来 写个off

05:48.630 --> 05:49.430
好 登过来

05:49.430 --> 05:50.510
就玩完了 对不对

05:50.510 --> 05:51.950
好 那么正是这个时间

05:51.950 --> 05:53.270
就设置滚动高度的时间

05:53.270 --> 05:55.270
我在这里就处理完了

05:55.270 --> 05:57.070
那么还有就是我自身滚动

05:57.070 --> 05:59.110
自身滚动的时候我要发出事件

05:59.110 --> 05:59.590
对不对

05:59.630 --> 06:01.950
那么首先我要添加一个滚动事件

06:01.950 --> 06:02.870
那么就在这

06:02.870 --> 06:05.350
这个地方是不是也得动态属性

06:05.350 --> 06:07.830
我在Mounty的时候生存了动物元素

06:07.830 --> 06:08.990
动物元素里面

06:08.990 --> 06:10.110
在找到这个动物元素

06:10.110 --> 06:12.230
然后给它监听一个事件screw

06:12.230 --> 06:13.270
当滚动的时候

06:13.270 --> 06:14.190
我运行这个函数

06:16.680 --> 06:20.220
我将会运行这个函数

06:20.220 --> 06:22.140
这个函数里边我干嘛呀

06:22.140 --> 06:23.740
我要做的事情就跟之前一样

06:23.740 --> 06:26.460
我去在事件总线上去触发了一个事件

06:26.460 --> 06:28.060
当我在事件总线上去触发的时候

06:28.060 --> 06:29.540
别的逐渐就可以监听到了

06:29.540 --> 06:32.260
别的甚至别的介石模块也可以监听到了

06:32.340 --> 06:33.740
于是我在这里边

06:33.740 --> 06:37.380
我把这个办法闷过来

06:37.380 --> 06:38.820
这里是Maze Core

06:41.100 --> 06:41.820
触发这个事件

06:41.820 --> 06:43.420
然后Ref的值来自于这

06:44.780 --> 06:45.380
RefValue

06:47.300 --> 06:48.380
对不对

06:48.380 --> 06:50.060
那么这是这个东西搞定的

06:50.060 --> 06:52.300
同样到底在beforeDistroy的时候

06:52.300 --> 06:55.060
我要把这个事件移除掉

06:55.060 --> 06:56.660
不再监听它了

06:56.660 --> 06:58.460
这里用RemoveEventLesson

07:01.980 --> 07:02.260
OK

07:03.580 --> 07:05.620
那么甚至我把这个方法写再写长一点吧

07:05.660 --> 07:06.180
并不过

07:06.180 --> 07:07.620
就怕地面重迷

07:09.740 --> 07:11.980
处理主滚动条的滚动事件

07:13.380 --> 07:13.580
好了

07:13.580 --> 07:14.580
那么这些写完了之后

07:14.580 --> 07:16.620
就剩下最后一个点就是这个

07:17.580 --> 07:19.900
当我要销毁本身组建的时候

07:19.900 --> 07:22.700
我得通知其他监听者

07:22.700 --> 07:24.180
我这个组建都被销毁了

07:24.180 --> 07:25.900
你们要做什么去做什么

07:25.900 --> 07:27.180
我不给你穿动物对象了

07:27.180 --> 07:28.780
说明我的动物对象已经不存在了

07:28.780 --> 07:30.220
已经销毁掉了

07:30.220 --> 07:32.300
我就把这些提到混合里边

07:32.300 --> 07:33.340
提到混合里边过后

07:33.820 --> 07:36.660
刚才我们BlogDist这个组建里边

07:36.660 --> 07:38.060
我们只用了混合

07:38.060 --> 07:39.820
他自己没有去写这一代

07:40.700 --> 07:41.780
然后我们在这里看一下

07:42.780 --> 07:44.420
这个Distroy其实也就已经有效果了

07:47.140 --> 07:47.580
没效果

07:47.580 --> 07:49.100
那可能哪个地方爆错了

07:50.100 --> 07:50.660
有没有爆错

07:52.660 --> 07:53.020
放心

07:53.020 --> 07:53.540
再来一次

07:56.300 --> 07:56.980
没这个效果

07:56.980 --> 07:57.540
是吧

07:57.540 --> 08:00.220
等一下我们来看一下哪个地方写错了

08:00.860 --> 08:02.180
MazeCrawl里边这个东西

08:02.180 --> 08:03.820
这个地方肯定是运行的

08:03.820 --> 08:04.980
咱们要输出一下盲题的

08:07.490 --> 08:08.730
你看肯定是运行的

08:09.730 --> 08:10.930
当他去监听

08:11.650 --> 08:14.370
他是监听这个滚动时间

08:15.410 --> 08:16.650
那么每次滚动的时候

08:16.650 --> 08:17.490
这个地方写错了

08:18.570 --> 08:19.450
MazeCrawl

08:24.480 --> 08:25.800
你看Totop出来了

08:25.800 --> 08:26.760
点击Totop

08:26.760 --> 08:27.800
这里有问题

08:28.400 --> 08:30.960
他说ScrawlTop is not undefined

08:32.000 --> 08:33.800
他说这个东西是未定义的

08:35.940 --> 08:37.980
这个地方来自于参数

08:40.460 --> 08:40.780
对吧

08:40.780 --> 08:41.860
别人出发事件的时候

08:41.860 --> 08:43.340
他会传递一个参数过来

08:43.540 --> 08:45.780
就是我希望设置的滚动调高度是多少

08:45.780 --> 08:47.540
那么我就设置成你的高度

08:48.660 --> 08:49.260
这样子再来

08:51.060 --> 08:51.580
还有问题

08:52.140 --> 08:55.740
他说无法设置属性ScrawlTop of undefined

08:55.740 --> 08:57.020
他说这个东西是undefined

08:57.660 --> 08:59.100
我这里写成字不错了

08:59.100 --> 08:59.900
你看这些问题

09:01.940 --> 09:02.260
再来

09:04.500 --> 09:04.980
往下拉

09:05.420 --> 09:06.140
Totop出来了

09:06.140 --> 09:06.660
回去

09:06.660 --> 09:07.100
OK

09:07.100 --> 09:07.660
那么就搞定了

09:07.660 --> 09:08.020
对吧

09:08.020 --> 09:09.700
这样子我们就把写到混合里边了

09:09.700 --> 09:11.540
那同样的道理在Detail这个组件里边

09:11.540 --> 09:12.700
我们也可以倒入混合

09:13.380 --> 09:13.980
Import

09:14.980 --> 09:15.860
MadeScrawl

09:18.060 --> 09:19.260
那么之后就比较方便了

09:19.260 --> 09:21.060
之后像其他的页面

09:21.060 --> 09:21.980
其他的组件里边

09:21.980 --> 09:22.860
他也有滚动调

09:22.860 --> 09:23.980
也要做同样的事情的话

09:23.980 --> 09:25.420
我们直接用这个混合就完事了

09:26.780 --> 09:27.340
同样的

09:27.340 --> 09:28.820
我们再去

09:29.420 --> 09:30.100
倒入这个混合

09:30.100 --> 09:31.140
加入这个混合

09:31.140 --> 09:32.940
那么他的Ref的值

09:32.940 --> 09:34.180
也是madeScrawl

09:34.180 --> 09:34.900
madecontain

09:36.780 --> 09:37.580
是这个吧

09:37.580 --> 09:38.260
OK

09:38.260 --> 09:40.060
那我就把这些东西删除掉了

09:40.060 --> 09:41.180
这个不要了

09:41.180 --> 09:42.060
Mounted不要了

09:42.100 --> 09:43.620
P4D说也不要了

09:43.620 --> 09:45.580
你看这样简单码就剪辑了很多了

09:46.420 --> 09:48.060
我们进入一个Detail也看一下

09:48.060 --> 09:48.580
有没有问题

09:49.860 --> 09:50.900
往下拉

09:50.900 --> 09:51.340
没问题

09:51.340 --> 09:54.620
你看看这边激活样式都没问题了

09:54.620 --> 09:55.700
然后我们点Totop

09:56.620 --> 09:57.100
没问题

09:57.100 --> 09:58.140
然后我们下拉

09:58.140 --> 09:59.180
找了个这里

09:59.180 --> 09:59.980
这里没问题

10:01.340 --> 10:01.860
有没问题

10:02.820 --> 10:03.100
看一下

10:05.100 --> 10:05.820
到最后一页

10:09.130 --> 10:09.690
没了

10:09.690 --> 10:12.620
没数据了

10:12.620 --> 10:13.420
OK

10:13.420 --> 10:13.660
好

10:13.660 --> 10:15.660
那么这是这一块

10:17.100 --> 10:17.420
好了

10:17.420 --> 10:18.900
那么这期课我们就讲到这

10:18.900 --> 10:20.220
把代码优换一下

