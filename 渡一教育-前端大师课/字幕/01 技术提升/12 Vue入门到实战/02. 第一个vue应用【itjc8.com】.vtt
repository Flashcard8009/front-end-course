WEBVTT

00:00.000 --> 00:02.400
好 这一块咱们少说概念

00:02.800 --> 00:06.800
直接用5u来做这么一个小的一个东西

00:07.000 --> 00:11.000
呃 来体验一下5u开发页面是一种什么样的开发方式

00:11.000 --> 00:13.600
它跟我们过去呢 传统的开发页面的方式呢

00:13.600 --> 00:15.000
到底有什么样的不一样

00:15.400 --> 00:18.200
首先呢 我们这里去建立一个页面吧

00:18.200 --> 00:19.400
就应该是一天秒

00:19.600 --> 00:22.000
然后页面上呢 我们去写这么一个DIV

00:22.000 --> 00:23.200
给他一个ID App

00:23.200 --> 00:25.800
那这个ID呢 也可以随便给其他的

00:25.800 --> 00:28.400
也可以不用给ID啊 给一些别的那样子都可以

00:28.600 --> 00:31.200
好 我们这接下来呢 去引用5u的GS

00:31.200 --> 00:33.000
我们把个5u的GS拿过来啊

00:33.000 --> 00:34.400
这是个压迫过后的GS

00:35.800 --> 00:38.000
这一刻呢 很多东西呢 大家可能不太明白啊

00:38.000 --> 00:40.200
没关系 我们后边会一一讲解的

00:40.200 --> 00:41.600
我们去先来体验一下

00:42.800 --> 00:44.400
好 引用至GS过后呢

00:44.400 --> 00:46.600
这个GS里边给我们提供了一个构造函数

00:46.600 --> 00:48.200
名字就叫做5u

00:48.600 --> 00:50.800
啊 构造函数里边呢 有一个对象

00:50.800 --> 00:52.400
这个对象里表什么意思呢

00:52.400 --> 00:54.200
表示对5u的配置

00:54.400 --> 00:56.400
那么这样子呢 就会产生一个5u的实力

00:57.000 --> 00:58.600
我们知道 就是创建一个构造函数啊

00:58.600 --> 01:01.200
通过这个函数创建对象呢 无非就得到一个

01:01.400 --> 01:02.400
就是一个实力对象

01:02.400 --> 01:04.200
对吧 我们可以把个实力对象接受一下

01:04.200 --> 01:06.400
不过那个接受的值呢 我们目前也不用

01:06.400 --> 01:08.800
当然你可以不用去接受它 都无所谓的

01:08.800 --> 01:11.000
它也能 也能实现效果啊

01:11.000 --> 01:12.400
我们先不着急接受它吧

01:13.600 --> 01:16.600
那个配置对象里边呢 有很多很多东西可以配置

01:16.800 --> 01:19.200
将来呢 我们会一步一步去学习啊

01:19.200 --> 01:21.600
我们这里首先写这么一个配置 叫做eO

01:21.600 --> 01:22.400
它什么意思呢

01:22.400 --> 01:25.000
它表示的说 也要创建一个5u的应用

01:25.200 --> 01:27.600
那么这个应用呢 应该控制页面的哪个区域

01:27.600 --> 01:30.000
换句话说呢 5u它不是说

01:30.800 --> 01:32.200
直接去控制整个页面的

01:32.600 --> 01:34.200
虽然说我们经常这样干

01:34.400 --> 01:36.800
但是呢 它实际上是可以只控制页面

01:36.800 --> 01:38.400
其中一个小区域的

01:38.800 --> 01:40.800
不过呢 我们希望呢 它就控制整个页面

01:41.000 --> 01:42.800
我们页面中就只有一个DIB

01:42.800 --> 01:45.000
那么我就希望它能控制整个DIB

01:45.600 --> 01:47.800
我们给它一个ID选择器啊

01:47.800 --> 01:49.400
这里面写的是CES的选择器

01:49.400 --> 01:52.000
当然如果说这里ID ID是别的值

01:52.000 --> 01:53.200
那么就写别的值

01:53.200 --> 01:54.800
如果说内选择器的话 你就用点

01:55.000 --> 01:56.000
都行

01:56.000 --> 01:57.000
那么这样子进来的话

01:57.000 --> 01:59.800
这个5u去控制的页面中的这个DIB

01:59.800 --> 02:01.400
好 我们来首先打开页面看一下

02:02.000 --> 02:03.800
目前看不到任何的效果 为什么呢

02:03.800 --> 02:06.200
因为它5u它虽然控制了这个DIB

02:06.200 --> 02:09.600
但它并不知道这个DIB里面要显示什么内容

02:09.600 --> 02:12.200
那我们这个DIB里面可以给它写上一些东西

02:12.600 --> 02:14.400
比如说我们这里可以写上一个HE元数

02:14.400 --> 02:15.200
一个标题

02:15.200 --> 02:19.800
就是My First 5u App

02:19.800 --> 02:21.400
就是我的第一个5u应用

02:22.400 --> 02:24.000
我们这里写到好 写好了之后

02:24.000 --> 02:26.600
我们可以看到页面上就多了一个HE标题

02:26.600 --> 02:28.000
因为它说那这样子有什么意义呢

02:28.000 --> 02:29.000
好像没有什么意义啊

02:29.000 --> 02:31.400
你不用5u它还不是照样能够显示出来

02:31.400 --> 02:33.800
好了 接下来我们来玩一点有意识的

02:33.800 --> 02:35.000
在5u的配置里面呢

02:35.000 --> 02:36.200
它除了这个配置之外

02:36.200 --> 02:37.800
还有一个配置叫做data

02:39.000 --> 02:40.200
这个配置呢

02:40.200 --> 02:41.700
可以把它配置为一个对象

02:41.700 --> 02:45.000
表示说我们页面中要使用的数据

02:45.000 --> 02:48.100
页面中要使用的数据

02:48.100 --> 02:49.200
就有哪些数据呢

02:49.200 --> 02:51.200
我们不要在页面上使用

02:51.200 --> 02:53.000
好 我们这里可以写上这么一个数据

02:54.000 --> 02:56.000
表示我的页面上有一个标题

02:56.000 --> 02:58.000
当然这个属性名字你自己命名

02:58.000 --> 03:00.000
把它配置到data里面就可以了

03:00.000 --> 03:02.000
我们把这个标题配置到这里面

03:05.000 --> 03:06.000
好了 那么现在呢

03:06.000 --> 03:09.000
我们要显示的数据已经到这了

03:09.000 --> 03:10.000
我们的页面上

03:10.000 --> 03:13.000
如何把这个数据动态的拿过来呢

03:13.000 --> 03:14.000
以前我们用传统的方式

03:14.000 --> 03:16.000
是不是用动物选择器

03:16.000 --> 03:17.000
拿到这个HE

03:17.000 --> 03:19.000
然后设置它的Inner AT秒

03:19.000 --> 03:21.000
但是现在有了5u过后不用了

03:21.000 --> 03:24.000
当我们5u去控制这个元素过后

03:24.000 --> 03:27.000
这个元素的所有东西变成了模板

03:27.000 --> 03:29.000
变成了5u模板

03:29.000 --> 03:32.000
模板是不会直接显示到页面上的

03:32.000 --> 03:35.000
虽然说大家最后看到页面上好像有这个东西

03:35.000 --> 03:37.000
但是实际上它是经过了一个过程

03:37.000 --> 03:39.000
最后的转换成AT秒显示出来的

03:39.000 --> 03:40.000
所以说呢

03:40.000 --> 03:41.000
我们有一个基本的概念

03:41.000 --> 03:43.000
模板它会交给5u

03:43.000 --> 03:48.000
然后5u它才会把它转换成真实的动物元素

03:48.000 --> 03:50.000
它是有个过程的

03:50.000 --> 03:52.000
只不过了一开始的这个过程

03:52.000 --> 03:54.000
模板是这个东西

03:54.000 --> 03:55.000
真实的动物也是这个东西

03:55.000 --> 03:57.000
所以说看上去是一样的

03:57.000 --> 03:59.000
那么今天这个模板里边可以写啥呀

03:59.000 --> 04:00.000
我们可以在元素里边

04:00.000 --> 04:02.000
就是元素内容的部分

04:02.000 --> 04:03.000
使用一个特殊的语法

04:03.000 --> 04:06.000
比如说我们一个标题

04:06.000 --> 04:08.000
后面我们要显示这个title的值

04:08.000 --> 04:10.000
把它放到这儿

04:10.000 --> 04:12.000
就有点像拼接一个字母刷一样

04:12.000 --> 04:14.000
那么我们可以使用一个语法

04:14.000 --> 04:16.000
这个语法叫做Mustach

04:16.000 --> 04:18.000
叫这个语法

04:19.000 --> 04:20.000
Mustach

04:20.000 --> 04:22.000
我们把它叫做大胡子语法

04:22.000 --> 04:24.000
那么我们现在怎么来做呢

04:24.000 --> 04:26.000
其实就是两个大括号

04:26.000 --> 04:28.000
然后两个大括号结尾

04:28.000 --> 04:30.000
那么中间就写的是GS表达式

04:30.000 --> 04:32.000
这里面写的是GS

04:32.000 --> 04:33.000
那么这个GS呢

04:33.000 --> 04:34.000
读取的是怎么呢

04:34.000 --> 04:36.000
读取的就是5u实例里边

04:36.000 --> 04:37.000
可以用的东西

04:37.000 --> 04:38.000
什么东西可以用呢

04:38.000 --> 04:39.000
这些数据可以用

04:39.000 --> 04:41.000
那么我们可以直接再写个title

04:41.000 --> 04:42.000
这啥意思呀

04:42.000 --> 04:44.000
就表示说把这个数据显示到这儿

04:44.000 --> 04:46.000
接下来我们再看一下保存

04:46.000 --> 04:48.000
刷新 你看是不是显示出来了

04:48.000 --> 04:50.000
就这么神奇

04:50.000 --> 04:52.000
那么我们在5u这里面写的是模办

04:52.000 --> 04:54.000
然后我们可以把这个数据

04:54.000 --> 04:56.000
替换掉模办里面某一些值

04:56.000 --> 04:58.000
那有个东西说

04:58.000 --> 05:00.000
这样子又有什么意义呢

05:00.000 --> 05:02.000
如果说我要显示这个东西的话

05:02.000 --> 05:04.000
我直接把它写到这儿不就完了吗

05:04.000 --> 05:05.000
你看啊

05:05.000 --> 05:07.000
当我们把它变成5u的数据之后呢

05:07.000 --> 05:08.000
它有一个特点

05:08.000 --> 05:09.000
数据是可以变化的

05:09.000 --> 05:11.000
当数据发生变化之后呢

05:11.000 --> 05:13.000
这个模办会重新生成

05:13.000 --> 05:15.000
会重新渲染

05:15.000 --> 05:17.000
它会自动的把这个模办的

05:17.000 --> 05:19.000
渲染成重新渲染成增设多

05:19.000 --> 05:21.000
那么怎么来体验这一点呢

05:21.000 --> 05:22.000
我们首先

05:22.000 --> 05:23.000
这里创建那个5u实力

05:23.000 --> 05:25.000
我们把它接收一下

05:25.000 --> 05:27.000
放到一个变量VM里面

05:27.000 --> 05:28.000
于是呢

05:28.000 --> 05:29.000
我们在页面上就可以用检查

05:29.000 --> 05:31.000
看一下这个VM

05:31.000 --> 05:35.400
看一下这个VM

05:35.400 --> 05:36.400
那么这个VM就是

05:36.400 --> 05:38.400
通过5u创建的对象

05:38.400 --> 05:40.400
这个对象里面有一个属性

05:40.400 --> 05:42.400
往下找叫做title属性

05:42.400 --> 05:43.400
这title属性是哪来的呢

05:43.400 --> 05:44.400
它就是这里

05:44.400 --> 05:46.400
它会把这个属性提到这里面

05:46.400 --> 05:47.400
这是5u自动完成的

05:47.400 --> 05:48.400
那么我们要做的事情

05:48.400 --> 05:50.400
比方说我们要改动title

05:50.400 --> 05:52.400
我们只需要去改动这个title

05:52.400 --> 05:53.400
比方说改成abc

05:53.400 --> 05:55.400
因为发现我们只需要去改数据

05:55.400 --> 05:57.400
界面就会跟着数据变化

05:57.400 --> 06:00.400
这就是5u开发的最核心最核心的贺点

06:00.400 --> 06:02.400
我们平时开发的时候

06:02.400 --> 06:04.400
我们只需要关注数据的变化

06:04.400 --> 06:06.400
而不需要关注页面的变化

06:06.400 --> 06:08.400
就是说我整个页面

06:08.400 --> 06:09.400
有哪些东西

06:09.400 --> 06:10.400
不要用户点击了

06:10.400 --> 06:11.400
或者是发生了一件什么事

06:11.400 --> 06:12.400
或者是隔一段时间

06:12.400 --> 06:14.400
有哪些数据会变化

06:14.400 --> 06:18.400
而我们的页面写出来的是一个模板

06:18.400 --> 06:22.400
模板是根据页面的数据生成的

06:22.400 --> 06:24.400
就是我们数据生成模板

06:24.400 --> 06:26.400
我们之后只需要关注

06:26.400 --> 06:28.400
数据的变化就OK了

06:28.400 --> 06:30.400
那么现在我们来继续体验这些东西

06:30.400 --> 06:32.400
比方说我们这个页面

06:32.400 --> 06:33.400
要显示一些

06:33.400 --> 06:36.400
比方说我们显示的是商品管理系统

06:36.400 --> 06:38.400
当然我们目前的

06:38.400 --> 06:40.400
我这样子写的

06:40.400 --> 06:42.400
只为了大家

06:42.400 --> 06:45.400
来体验一下5U的功能

06:45.400 --> 06:46.400
实际上像这种情况

06:46.400 --> 06:47.400
这个title实际上

06:47.400 --> 06:49.400
是没有必要把它写成数据的

06:49.400 --> 06:52.400
为什么没有必要把它写成数据呢

06:52.400 --> 06:54.400
是因为我这个数据

06:54.400 --> 06:55.400
它是不会变化的

06:55.400 --> 06:56.400
那如果说你的标题

06:56.400 --> 06:57.400
它会变化的话

06:57.400 --> 06:58.400
那就应该把它写成数据

06:58.400 --> 06:59.400
不会变化的东西

06:59.400 --> 07:01.400
其实你可以直接写实

07:01.400 --> 07:02.400
像这种数据变化

07:02.400 --> 07:05.400
导致了模板重新渲染

07:05.400 --> 07:06.400
那么这个功能

07:06.400 --> 07:07.400
其实叫做数据相应式

07:07.400 --> 07:09.400
这是5U的一大特点

07:10.400 --> 07:11.400
数据相应式

07:11.400 --> 07:12.400
什么叫数据相应式

07:12.400 --> 07:14.400
就是数据变化

07:14.400 --> 07:17.400
会影响到重新渲染

07:17.400 --> 07:19.400
它会自动重新渲染

07:19.400 --> 07:21.400
就是数据发生的变化的时候

07:21.400 --> 07:22.400
它会收到一个通知

07:22.400 --> 07:24.400
它会立刻做出一些响应

07:24.400 --> 07:25.400
那就这么个意思

07:25.400 --> 07:26.400
好那么这里呢

07:26.400 --> 07:28.400
我重新把这个标题放到这

07:28.400 --> 07:32.400
给它改为一个商品管理系统

07:32.400 --> 07:34.400
因为这个标题是不会变化的

07:34.400 --> 07:38.610
好那么接下来呢

07:38.610 --> 07:41.610
我要展示一些商品

07:41.610 --> 07:42.610
那么商品是有可能会变化的

07:42.610 --> 07:44.610
比方说库存可能会变化

07:44.610 --> 07:45.610
比方说价格呀

07:45.610 --> 07:47.610
商品名字都有可能会变化

07:47.610 --> 07:48.610
那么这个时候呢

07:48.610 --> 07:50.610
我们就可以首先考虑

07:50.610 --> 07:52.610
我应该写什么样的数据

07:52.610 --> 07:53.610
商品呢

07:53.610 --> 07:54.610
我们这里可以写上一个数据

07:54.610 --> 07:55.610
比方说我们这里呢

07:55.610 --> 07:57.610
写上一个Product

07:59.610 --> 08:00.610
这么一个数据

08:00.610 --> 08:02.610
数据里面每一项是一个对象

08:02.610 --> 08:03.610
比方说我们这里的

08:03.610 --> 08:04.610
第一个商品

08:04.610 --> 08:06.610
Name为iPhone

08:06.610 --> 08:08.610
Stalk表示库存

08:08.610 --> 08:09.610
库存的话是10

08:09.610 --> 08:10.610
接下来多写几个

08:11.610 --> 08:13.610
然后这里小米

08:13.610 --> 08:15.610
这里呢

08:15.610 --> 08:16.610
华为

08:18.610 --> 08:19.610
就

08:19.610 --> 08:21.610
好啊随便写一页

08:21.610 --> 08:22.610
好这下我们数据里面

08:22.610 --> 08:23.610
准备了三个商品

08:23.610 --> 08:25.610
但是呢页面上并没有显示

08:25.610 --> 08:26.610
为什么没有显示呢

08:26.610 --> 08:27.610
因为你还没有书写模办

08:27.610 --> 08:29.610
他不知道怎么把这个数据

08:29.610 --> 08:30.610
显示到页面上

08:30.610 --> 08:31.610
那么我们怎么来显示呢

08:31.610 --> 08:32.610
其实我们很简单

08:32.610 --> 08:33.610
我们也需要生成一个

08:33.610 --> 08:34.610
UI元素

08:34.610 --> 08:35.610
当然你可以生成

08:35.610 --> 08:37.610
任何的别的元素

08:37.610 --> 08:38.610
但是这个UI元素呢

08:38.610 --> 08:40.610
我们需要去循环这个数组

08:40.610 --> 08:41.610
给它显示出来

08:41.610 --> 08:43.610
那怎么来去循环它呢

08:43.610 --> 08:44.610
我们可以用UIU里边

08:44.610 --> 08:46.610
一个特殊的语法这种指令

08:46.610 --> 08:48.610
我们可以用起个vfo

08:48.610 --> 08:49.610
什么意思呢

08:49.610 --> 08:51.610
表示循环一个数组的意思

08:51.610 --> 08:52.610
好这个vfo里边

08:52.610 --> 08:53.610
有一个特殊的语法啊

08:53.610 --> 08:54.610
就是

08:54.610 --> 08:55.610
印关键字

08:55.610 --> 08:57.610
后面写上一个数组的名字

08:57.610 --> 08:58.610
说大个字

08:58.610 --> 08:59.610
表示什么意思

08:59.610 --> 09:00.610
我要循环数组

09:00.610 --> 09:02.610
把循环的每一项

09:02.610 --> 09:03.610
放到一个变量

09:03.610 --> 09:04.610
Item里边

09:04.610 --> 09:05.610
当这个变量的名字

09:05.610 --> 09:06.610
你可以随便取

09:06.610 --> 09:07.610
你可以取个abc

09:07.610 --> 09:08.610
可以取任何东西

09:08.610 --> 09:09.610
但是这个印不能改变

09:09.610 --> 09:10.610
循环这个数组

09:10.610 --> 09:11.610
把每一项

09:11.610 --> 09:12.610
放到个变量这里边

09:12.610 --> 09:13.610
我们这一刻呢

09:13.610 --> 09:14.610
只是来做体验啊

09:14.610 --> 09:15.610
很多地方

09:15.610 --> 09:16.610
不是很清楚的话

09:16.610 --> 09:17.610
没关系

09:17.610 --> 09:18.610
我们后面会详细讲解

09:18.610 --> 09:19.610
那么这样子的一来的话

09:19.610 --> 09:20.610
我们可以看到

09:20.610 --> 09:21.610
印面上就生成了

09:21.610 --> 09:22.610
三个UI

09:22.610 --> 09:23.610
看呗

09:24.610 --> 09:25.610
说生成三个UI

09:25.610 --> 09:26.610
但这个UI里边

09:26.610 --> 09:27.610
是不是没有东西啊

09:27.610 --> 09:28.610
没有任何东西

09:28.610 --> 09:29.610
那么现在我在UI里边

09:29.610 --> 09:30.610
去显示一些东西

09:30.610 --> 09:31.610
我显示啥呀

09:31.610 --> 09:32.610
我要第1个

09:32.610 --> 09:34.610
我显示商品名称

09:35.610 --> 09:36.610
名称

09:36.610 --> 09:37.610
名称说啥呀

09:37.610 --> 09:38.610
我们可以把这个

09:38.610 --> 09:39.610
每一项

09:39.610 --> 09:40.610
每一项拿到是不是

09:40.610 --> 09:41.610
一个对象

09:41.610 --> 09:42.610
把每一项的商品呢

09:42.610 --> 09:43.610
它的item呢

09:43.610 --> 09:45.610
用大虎之语法啊

09:45.610 --> 09:46.610
拿到这个对象

09:46.610 --> 09:47.610
对象里边

09:47.610 --> 09:48.610
我们可以读取它的属性

09:48.610 --> 09:49.610
内

09:49.610 --> 09:50.610
这里边写的是

09:50.610 --> 09:51.610
介石表达式啊

09:51.610 --> 09:52.610
因此呢

09:52.610 --> 09:53.610
介石里边是不是

09:53.610 --> 09:54.610
拿到这个对象

09:54.610 --> 09:55.610
对象里边

09:55.610 --> 09:56.610
是不是可以读取它的属性

09:56.610 --> 09:57.610
对吧

09:57.610 --> 09:58.610
保存

09:58.610 --> 09:59.610
你看

09:59.610 --> 10:00.610
商品名称是不是出来了

10:00.610 --> 10:01.610
这样子非常轻松的

10:01.610 --> 10:02.610
来渲染出一个东西的

10:02.610 --> 10:03.610
那你想以前

10:03.610 --> 10:04.610
是不是你还要去手动

10:04.610 --> 10:05.610
的操作动

10:05.610 --> 10:06.610
在开发过程中

10:06.610 --> 10:08.610
绝大部分情况下

10:08.610 --> 10:09.610
你是不需要去手动

10:09.610 --> 10:10.610
操作动物的

10:10.610 --> 10:11.610
你只需要提供数据

10:11.610 --> 10:12.610
然后呢

10:12.610 --> 10:13.610
定义模板

10:13.610 --> 10:15.610
模板里边该怎么样

10:15.610 --> 10:16.610
用目前的数据

10:16.610 --> 10:17.610
把它渲染出来

10:17.610 --> 10:18.610
好 现在我们继续体验啊

10:18.610 --> 10:19.610
除了有商品名称之外呢

10:19.610 --> 10:21.610
还有一个商品库存

10:21.610 --> 10:22.610
商品库存呢

10:22.610 --> 10:23.610
我们可以读取属性

10:23.610 --> 10:24.610
item

10:24.610 --> 10:27.240
stop

10:28.240 --> 10:29.240
好 保存

10:29.240 --> 10:30.240
你看

10:30.240 --> 10:32.240
库存是不是也显出来了

10:32.240 --> 10:33.240
而且我告诉大家

10:33.240 --> 10:34.240
这里数据里边的东西

10:34.240 --> 10:36.240
全部都是想用式的

10:36.240 --> 10:37.240
数据

10:37.240 --> 10:38.240
它就有数据想用式

10:38.240 --> 10:39.240
怎么意思呢

10:39.240 --> 10:40.240
也就是说我们可以通过

10:40.240 --> 10:41.240
这个VM

10:41.240 --> 10:42.240
找到这个product

10:42.240 --> 10:43.240
你看

10:43.240 --> 10:44.240
是不是可以拿到

10:44.240 --> 10:45.240
你找到一个数据

10:45.240 --> 10:46.240
这数据里面有三项

10:46.240 --> 10:47.240
对吧

10:47.240 --> 10:48.240
name stock

10:48.240 --> 10:49.240
那么我们可以去改变它

10:49.240 --> 10:50.240
比方说我们往这里边

10:50.240 --> 10:51.240
product里面

10:51.240 --> 10:52.240
后写一个

10:52.240 --> 10:53.240
加入一个商品

10:53.240 --> 10:54.240
一个对象

10:54.240 --> 10:55.240
比方说这里呢

10:55.240 --> 10:56.240
我给它一个name

10:57.240 --> 11:01.240
这里是vivo stock

11:01.240 --> 11:02.240
二十

11:02.240 --> 11:03.240
好 又回车

11:03.240 --> 11:04.240
你会发现

11:04.240 --> 11:05.240
我往数据里边

11:05.240 --> 11:06.240
它真的能够收到通知

11:06.240 --> 11:08.240
重新渲染这个界面

11:08.240 --> 11:09.240
是不是很神奇

11:09.240 --> 11:10.240
对吧

11:10.240 --> 11:11.240
我们不用去操作任何的

11:11.240 --> 11:12.240
只需要去控制数据

11:12.240 --> 11:13.240
就完事了

11:14.240 --> 11:15.240
相信学到这呢

11:15.240 --> 11:16.240
大家同学们

11:16.240 --> 11:17.240
对这个5u

11:17.240 --> 11:18.240
已经非常感兴趣了

11:18.240 --> 11:19.240
像这一框架的出现

11:19.240 --> 11:20.240
它不是给我们带来麻烦的

11:20.240 --> 11:21.240
尽管我们学习

11:21.240 --> 11:22.240
它需要花费一定时间

11:22.240 --> 11:24.240
但它目的是为了

11:24.240 --> 11:25.240
让我们的开发变得

11:25.240 --> 11:26.240
更加简单

11:26.240 --> 11:27.240
好 接下来

11:27.240 --> 11:29.240
我们继续往后看

11:29.240 --> 11:30.240
那么我们现在

11:30.240 --> 11:31.240
在控制台里边

11:31.240 --> 11:32.240
去改变数据的

11:32.240 --> 11:33.240
对不对

11:33.240 --> 11:35.240
我们能不能去

11:35.240 --> 11:36.240
做一个东西

11:36.240 --> 11:38.240
能够在界面上

11:38.240 --> 11:40.240
然后去设置一些东西

11:40.240 --> 11:41.240
能够改变数据呢

11:41.240 --> 11:42.240
我们可以这样去做

11:42.240 --> 11:43.240
比方说

11:43.240 --> 11:45.240
我们现在手动去改变一下

11:45.240 --> 11:46.240
Projects

11:46.240 --> 11:47.240
找到它第一个商品

11:48.240 --> 11:49.240
然后给它Stalk

11:49.240 --> 11:50.240
设置为

11:51.240 --> 11:52.240
佳佳

11:52.240 --> 11:53.240
表示什么意思呢

11:53.240 --> 11:54.240
表示找到第一个商品

11:54.240 --> 11:55.240
找它的属性Stalk

11:55.240 --> 11:56.240
给它加一

11:56.240 --> 11:58.240
地线上面是iPhone

11:58.240 --> 11:59.240
它的库存目前是10

11:59.240 --> 12:00.240
加一过后

12:00.240 --> 12:01.240
就变成11

12:01.240 --> 12:02.240
你看这样的数据

12:02.240 --> 12:03.240
变化它都能够

12:03.240 --> 12:04.240
收到通知

12:04.240 --> 12:05.240
于是那我打算

12:05.240 --> 12:07.240
在每一个商品库存之前

12:07.240 --> 12:08.240
加一个按钮

12:08.240 --> 12:09.240
button

12:10.240 --> 12:11.240
解

12:11.240 --> 12:12.240
后边加一个按钮

12:12.240 --> 12:13.240
button

12:13.240 --> 12:14.240
加

12:14.240 --> 12:15.240
好 接下来

12:15.240 --> 12:16.240
我们给按钮注册事件

12:16.240 --> 12:17.240
那么在伍佑里边

12:17.240 --> 12:18.240
怎么注册事件呢

12:18.240 --> 12:19.240
你不能这样子写

12:19.240 --> 12:20.240
这样子写的

12:20.240 --> 12:21.240
是GS的写法

12:21.240 --> 12:22.240
你应该用伍佑

12:22.240 --> 12:23.240
因为这里边

12:23.240 --> 12:24.240
不是一个普通的

12:24.240 --> 12:25.240
ATMEL

12:25.240 --> 12:26.240
它是一个伍佑的模板

12:26.240 --> 12:27.240
你看我们这样子写的过后

12:27.240 --> 12:28.240
它说的还是这个样子

12:28.240 --> 12:29.240
对吧 是不一样的

12:29.240 --> 12:30.240
它是伍佑的模板

12:30.240 --> 12:31.240
你必须按照

12:31.240 --> 12:32.240
伍佑的语法来写

12:32.240 --> 12:33.240
我们后边会详细的说

12:33.240 --> 12:35.240
在给按钮注册事件

12:35.240 --> 12:36.240
注册事件使用一个

12:36.240 --> 12:37.240
特殊符号

12:37.240 --> 12:38.240
叫做ATMEL

12:38.240 --> 12:39.240
后边写上事件的名字

12:39.240 --> 12:40.240
比方说我们这里

12:40.240 --> 12:41.240
事件的名字就是

12:41.240 --> 12:42.240
click

12:42.240 --> 12:43.240
点击事件

12:43.240 --> 12:44.240
点击的时候干嘛呀

12:44.240 --> 12:46.240
这里边写的是GS代码

12:47.240 --> 12:48.240
那么怎么写呢

12:48.240 --> 12:49.240
所以就把这个

12:49.240 --> 12:50.240
item

12:50.240 --> 12:51.240
这个商品的

12:51.240 --> 12:52.240
打个数项

12:52.240 --> 12:53.240
stop

12:53.240 --> 12:54.240
减减

12:54.240 --> 12:55.240
就完事了

12:55.240 --> 12:56.240
另外一边呢

12:56.240 --> 12:57.240
我们给它加上一个click

12:57.240 --> 12:58.240
item stop

12:58.240 --> 12:59.240
加加

12:59.240 --> 13:00.240
你看这个很有意思

13:00.240 --> 13:01.240
进化生成一个li

13:01.240 --> 13:02.240
那么li里边

13:02.240 --> 13:03.240
每一项呢

13:03.240 --> 13:04.240
它有这么一些东西

13:04.240 --> 13:05.240
每一项都有两个按钮

13:05.240 --> 13:06.240
点击个按钮

13:06.240 --> 13:07.240
当前这一项的

13:07.240 --> 13:08.240
库存减移

13:08.240 --> 13:10.240
点这个按钮的库存加移

13:10.240 --> 13:11.240
你会发现

13:11.240 --> 13:12.240
功能就已经OK了

13:13.240 --> 13:14.240
功能是怎么OK的

13:14.240 --> 13:15.240
因为我们改变了数据

13:15.240 --> 13:16.240
数据只要一变

13:16.240 --> 13:18.240
界面就会重新宣了

13:18.240 --> 13:19.240
就会自动重新宣了

13:19.240 --> 13:20.240
就这么神奇

13:21.240 --> 13:22.240
好 那么先让我们

13:22.240 --> 13:23.240
继续来玩这个事情

13:23.240 --> 13:24.240
比方那个数据

13:24.240 --> 13:25.240
减到一定程度

13:25.240 --> 13:26.240
它是不能减的

13:26.240 --> 13:28.240
比方它不能减到复数

13:28.240 --> 13:29.240
那怎么办呢

13:29.240 --> 13:30.240
那么我们可以

13:30.240 --> 13:31.240
做一些约束

13:31.240 --> 13:32.240
判断一下它是不是

13:32.240 --> 13:33.240
减到复数了

13:33.240 --> 13:34.240
减到复数的话

13:34.240 --> 13:35.240
我只能减到0

13:35.240 --> 13:36.240
于是为了做这个约束

13:36.240 --> 13:37.240
这里代码最好

13:37.240 --> 13:38.240
不要写得太多

13:38.240 --> 13:39.240
它最好就只能写一个

13:39.240 --> 13:40.240
接着是表达式

13:40.240 --> 13:41.240
因此我们要做一些

13:41.240 --> 13:42.240
更多的事情

13:42.240 --> 13:44.240
我可以写一些方法

13:44.240 --> 13:45.240
我们在配置里边

13:45.240 --> 13:46.240
加上一个配置

13:46.240 --> 13:47.240
叫masters

13:48.240 --> 13:49.240
对象里边

13:49.240 --> 13:50.240
可以提供很多方法

13:50.240 --> 13:51.240
比如说我们这里

13:51.240 --> 13:52.240
我们给它取个方法

13:52.240 --> 13:54.680
叫ChangeStalk

13:54.680 --> 13:56.680
表示改变库存

13:56.680 --> 13:57.680
你给我传一个

13:57.680 --> 13:58.680
新的库存进来

13:59.680 --> 14:00.680
然后我来改变库存

14:00.680 --> 14:01.680
这个方法要做的事情

14:01.680 --> 14:02.680
很简单

14:02.680 --> 14:03.680
我判断一下你

14:03.680 --> 14:04.680
给我传的新的库存

14:04.680 --> 14:05.680
是不是小于0的

14:05.680 --> 14:06.680
如果说小于0的话

14:06.680 --> 14:07.680
我就给它设置为0

14:07.680 --> 14:08.680
表示说

14:08.680 --> 14:10.680
你不能小于0

14:10.680 --> 14:11.680
复数的库存没有意义

14:12.680 --> 14:13.680
这样子有了

14:13.680 --> 14:14.680
这个约束过后

14:14.680 --> 14:15.680
这个纸

14:15.680 --> 14:17.680
它一定是大于等于0的

14:17.680 --> 14:19.680
因此我这里再放心的

14:19.680 --> 14:20.680
把这个纸

14:20.680 --> 14:22.680
设置到相应的

14:22.680 --> 14:23.680
商品对象里边去

14:23.680 --> 14:24.680
但是我这里

14:24.680 --> 14:25.680
拿不到商品对象

14:25.680 --> 14:26.680
到底是哪一个商品对象

14:26.680 --> 14:27.680
不知道

14:28.680 --> 14:29.680
比方说我这里

14:29.680 --> 14:30.680
你给我传一个Item

14:31.680 --> 14:32.680
或者就是Product

14:35.680 --> 14:36.680
你给我传一个商品

14:36.680 --> 14:37.680
我把这个商品的库存

14:37.680 --> 14:38.680
改为这个库存

14:38.680 --> 14:39.680
那怎么弄呢

14:39.680 --> 14:40.680
这里非常简单

14:40.680 --> 14:42.680
就是把Product

14:43.680 --> 14:44.680
Stalk

14:44.680 --> 14:46.680
设置为NewStalk

14:47.680 --> 14:48.680
就这么简单

14:49.680 --> 14:50.680
好 接下来

14:50.680 --> 14:51.680
我们来看一下

14:52.680 --> 14:53.680
这里边

14:53.680 --> 14:54.680
我们点击的时候

14:54.680 --> 14:55.680
就不是直接写这个

14:56.680 --> 14:57.680
而是调用一个方法

14:58.680 --> 14:59.680
ChangeStalk

14:59.680 --> 15:01.680
你看 这里可以直接调用方法

15:01.680 --> 15:02.680
当你点击的时候

15:02.680 --> 15:03.680
去调用这个方法

15:03.680 --> 15:04.680
它有两个参数

15:04.680 --> 15:05.680
第一个参数是哪呀

15:05.680 --> 15:06.680
第一个参数

15:06.680 --> 15:07.680
要传一个当前的商品

15:07.680 --> 15:08.680
改变哪个商品

15:08.680 --> 15:09.680
改变了是不是它

15:09.680 --> 15:10.680
好 新的库存是什么呢

15:10.680 --> 15:12.680
是不是这个商品的当前库存

15:12.680 --> 15:13.680
减1

15:13.680 --> 15:14.680
对吧

15:14.680 --> 15:15.680
我给你传一个新的库存

15:16.680 --> 15:17.680
这是当前商品

15:17.680 --> 15:18.680
给你传一个新的库存

15:18.680 --> 15:19.680
比方说当前库存是10

15:19.680 --> 15:20.680
减1过后就是9

15:20.680 --> 15:21.680
那么就

15:21.680 --> 15:22.680
商品传进来

15:22.680 --> 15:23.680
九传进来

15:23.680 --> 15:24.680
然后判断一下

15:24.680 --> 15:25.680
然后再重新复制

15:25.680 --> 15:27.680
这个地方是数据小硬式

15:27.680 --> 15:28.680
数据变化

15:29.680 --> 15:30.680
因为我们给这个

15:31.680 --> 15:32.680
这个数据

15:32.680 --> 15:33.680
以发生变化

15:33.680 --> 15:34.680
而这个数据哪来的

15:34.680 --> 15:35.680
来自于它

15:35.680 --> 15:36.680
对吧

15:36.680 --> 15:37.680
它一变化

15:37.680 --> 15:38.680
我们有数据小硬式

15:38.680 --> 15:39.680
一面就会重新宣

15:40.680 --> 15:41.680
好 现在我们再看一下

15:41.680 --> 15:42.680
减1

15:43.680 --> 15:44.680
所以减1就不能减了

15:44.680 --> 15:45.680
对吧

15:45.680 --> 15:46.680
因为就有这个函数的功能

15:47.680 --> 15:48.680
加的话也没问题

15:48.680 --> 15:49.680
加的话

15:49.680 --> 15:50.680
我们其实也可以用这个方法

15:50.680 --> 15:51.680
那么自然而然

15:51.680 --> 15:52.680
这里就是加1

15:56.720 --> 15:57.720
好了 现在我们有了

15:57.720 --> 15:58.720
商品的减少

15:58.720 --> 16:00.720
和商品的增加

16:00.720 --> 16:01.720
这个时候

16:01.720 --> 16:02.720
我们可能又会想一些问题

16:03.720 --> 16:05.720
如果说商品等于0的时候

16:05.720 --> 16:06.720
库存等于0的时候

16:06.720 --> 16:08.720
我们希望显示一些

16:08.720 --> 16:09.720
别的东西

16:09.720 --> 16:11.720
比方说我们显示

16:11.720 --> 16:12.720
两个字

16:12.720 --> 16:13.720
无过

16:14.720 --> 16:16.720
那么这个时候又怎么办呢

16:16.720 --> 16:18.720
我们这里其实可以

16:18.720 --> 16:19.720
用一个三目运算符

16:19.720 --> 16:20.720
因为这里边

16:20.720 --> 16:21.720
写的是技艺式表达式

16:21.720 --> 16:22.720
我们可以用个

16:22.720 --> 16:23.720
三目运算符

16:23.720 --> 16:24.720
这个stock

16:25.720 --> 16:26.720
有值吗

16:26.720 --> 16:27.720
有值的话

16:27.720 --> 16:29.720
我就显示item.stock

16:29.720 --> 16:30.720
没有值的话

16:30.720 --> 16:31.720
我就显示两个字

16:31.720 --> 16:32.720
无过

16:33.720 --> 16:34.720
好 库存

16:35.720 --> 16:36.720
你看啊 现在

16:37.720 --> 16:38.720
是不是显示无货

16:38.720 --> 16:39.720
这两个字的

16:39.720 --> 16:40.720
特别特别简单

16:40.720 --> 16:41.720
用个三目运算符

16:41.720 --> 16:42.720
就可以搞定了

16:43.720 --> 16:44.720
好 今天我们继续看

16:44.720 --> 16:45.720
这个时候

16:45.720 --> 16:47.720
我们可能还会需要

16:47.720 --> 16:49.720
显示一个商品的增加

16:49.720 --> 16:50.720
在这里

16:50.720 --> 16:51.720
好 我们接下来

16:51.720 --> 16:54.720
在一个UL下面写一个P元素

16:55.720 --> 16:56.720
不是总价

16:56.720 --> 16:57.720
总库存

16:57.720 --> 16:58.720
总库存

16:59.720 --> 17:00.720
这边我们要显示一个东西

17:00.720 --> 17:01.720
那么总库存

17:01.720 --> 17:02.720
你知道

17:02.720 --> 17:03.720
它是应该是根据

17:03.720 --> 17:04.720
目前的这些商品

17:04.720 --> 17:05.720
是不是算出来的

17:05.720 --> 17:06.720
对不对

17:06.720 --> 17:07.720
你最好不要在data里面

17:07.720 --> 17:09.720
写个头头 总库存

17:09.720 --> 17:10.720
你这样子写

17:10.720 --> 17:11.720
比较说这里有多少

17:11.720 --> 17:12.720
10加9

17:12.720 --> 17:13.720
19加上8

17:14.720 --> 17:15.720
27

17:17.720 --> 17:18.720
如果说你这样子写的话

17:18.720 --> 17:19.720
这里用一个头头的话

17:19.720 --> 17:20.720
那么就会出现一个问题

17:20.720 --> 17:21.720
当我们的商品

17:21.720 --> 17:23.720
库存变化的时候

17:23.720 --> 17:24.720
总库存

17:24.720 --> 17:25.720
因为这个数据没有变

17:25.720 --> 17:27.720
总库存是不变的

17:27.720 --> 17:28.720
这个跟我们围护了

17:28.720 --> 17:29.720
造成一些困难

17:29.720 --> 17:30.720
我们最好

17:30.720 --> 17:31.720
就是希望

17:31.720 --> 17:32.720
总库存是根据

17:32.720 --> 17:33.720
这些东西算出来的

17:33.720 --> 17:34.720
那怎么办

17:34.720 --> 17:35.720
我们这里可以写一个

17:35.720 --> 17:37.720
另外一个配置叫computing

17:38.720 --> 17:39.720
这什么意思呢

17:39.720 --> 17:40.720
叫做记忆算属性

17:40.720 --> 17:41.720
就是这里边的东西

17:41.720 --> 17:42.720
它是根据

17:42.720 --> 17:44.720
已有的数据算出来的

17:45.720 --> 17:46.720
好 这里下来

17:46.720 --> 17:47.720
我们怎么来写的

17:47.720 --> 17:48.720
这里边每一个

17:48.720 --> 17:49.720
可以把写成个方法

17:50.720 --> 17:52.720
这个总库存怎么算出来的

17:52.720 --> 17:54.720
就是通过这个数据

17:54.720 --> 17:56.720
里边的所有库存相加

17:56.720 --> 17:57.720
对不对

17:57.720 --> 17:59.720
那么我们怎么拿到这个数据呢

17:59.720 --> 18:00.720
注意在维尤里边

18:00.720 --> 18:02.720
无论是计算属性

18:02.720 --> 18:03.720
还是这些方法

18:03.720 --> 18:04.720
它里边的z

18:04.720 --> 18:06.720
都指向的是它

18:06.720 --> 18:07.720
指向的是维尤实力

18:08.720 --> 18:09.720
那么我们只需要通过

18:09.720 --> 18:10.720
维尤实力里边

18:10.720 --> 18:11.720
是不是有这些东西

18:11.720 --> 18:12.720
刚才我们看到了

18:13.720 --> 18:14.720
是不是有这些东西

18:14.720 --> 18:16.720
我们只需要通过z

18:17.720 --> 18:19.720
然后是不是可以拿到这个数据

18:19.720 --> 18:20.720
接下来我们可以非常简单的

18:20.720 --> 18:22.720
来算出来的球合了

18:22.720 --> 18:23.720
对吧

18:23.720 --> 18:24.720
就用一个reduce

18:26.720 --> 18:29.860
reduce

18:29.860 --> 18:30.860
球合

18:30.860 --> 18:31.860
里边传一个微调韩束

18:31.860 --> 18:32.860
A和B这个东西

18:32.860 --> 18:33.860
也没这么好说的

18:33.860 --> 18:35.860
我不再去说这件事情

18:35.860 --> 18:36.860
stock

18:36.860 --> 18:37.860
或者是从0开始

18:37.860 --> 18:38.860
球合

18:38.860 --> 18:39.860
当然如果说你这个

18:39.860 --> 18:40.860
我还要实在不习惯的话

18:40.860 --> 18:41.860
你可以去循环球合

18:41.860 --> 18:42.860
也可以

18:42.860 --> 18:43.860
这样子我们就可以

18:43.860 --> 18:44.860
拿到一个头了

18:44.860 --> 18:45.860
有了这个计算属性过后

18:45.860 --> 18:47.860
我们在页面中使用的时候

18:47.860 --> 18:49.860
可以把它当成一个属性来使用

18:49.860 --> 18:51.860
把它当一个数据来使用

18:51.860 --> 18:52.860
直接使用那个头头放这

18:52.860 --> 18:53.860
不要用方法调用

18:53.860 --> 18:54.860
现在不能这样子写

18:54.860 --> 18:55.860
直接这样子写

18:55.860 --> 18:56.860
那么它就会调用这个方法

18:56.860 --> 18:58.860
来拿到这个算出这个词

18:59.860 --> 19:00.860
保存

19:00.860 --> 19:01.860
我们来看一下

19:02.860 --> 19:03.860
是不是27

19:03.860 --> 19:05.860
接下来我们改变任何数据

19:05.860 --> 19:07.860
它都会重新计算

19:07.860 --> 19:08.860
改变任何数据

19:08.860 --> 19:09.860
它就会重新计算

19:09.860 --> 19:11.860
因为数据是相对似的

19:11.860 --> 19:12.860
那么这样子

19:12.860 --> 19:13.860
总共存的就非常好维护

19:13.860 --> 19:14.860
对吧

19:14.860 --> 19:15.860
它的数据跟这边是统一的

19:15.860 --> 19:16.860
没意思吧

19:16.860 --> 19:17.860
那么这就是

19:17.860 --> 19:19.860
加了一个总共存进去了

19:19.860 --> 19:22.860
接下来我们继续来玩上它

19:22.860 --> 19:23.860
接下来我们想在后边

19:23.860 --> 19:25.860
做一个删除按钮

19:25.860 --> 19:26.860
可以把这件商品删除掉

19:26.860 --> 19:27.860
也非常简单

19:27.860 --> 19:28.860
我们可以在加号后边

19:28.860 --> 19:29.860
加上一个按钮

19:29.860 --> 19:30.860
button

19:30.860 --> 19:31.860
delete

19:31.860 --> 19:32.860
然后来删除

19:32.860 --> 19:34.860
我们希望点击删除的时候

19:34.860 --> 19:36.860
把商品删除掉

19:36.860 --> 19:38.860
那么这个东西又怎么做呢

19:38.860 --> 19:40.860
其实我们一定要从数据出发

19:40.860 --> 19:42.860
做为用的时候

19:42.860 --> 19:43.860
不要去想

19:43.860 --> 19:44.860
点删除的时候

19:44.860 --> 19:45.860
是不是要找这个Li

19:45.860 --> 19:46.860
把Li移除不是的

19:46.860 --> 19:48.860
Vivus是这样去思考问题的

19:48.860 --> 19:49.860
我们点删除什么意思

19:49.860 --> 19:52.860
从数据里边删除这一下

19:52.860 --> 19:54.860
所以我们可以写个方法

19:54.860 --> 19:56.860
接下来我们来写个方法

19:56.860 --> 19:58.860
叫做delete

19:58.860 --> 20:00.860
或者叫remove

20:00.860 --> 20:01.860
remove

20:01.860 --> 20:04.860
你给我一个要删除的商品

20:04.860 --> 20:05.860
我把它删除掉另外一事

20:05.860 --> 20:07.860
那我怎么来删除它呢

20:07.860 --> 20:09.860
或者是你给我一个什么

20:09.860 --> 20:10.860
index

20:10.860 --> 20:11.860
商品的锁印

20:11.860 --> 20:12.860
我来进行删除

20:12.860 --> 20:13.860
都可以

20:13.860 --> 20:14.860
我来删除它呢

20:14.860 --> 20:16.860
我们是不是有了锁印过后

20:16.860 --> 20:17.860
我们是不是可以拿到

20:17.860 --> 20:18.860
这里边的类似

20:18.860 --> 20:20.860
指向的是这个Vivus实力

20:20.860 --> 20:22.860
因此我们可以拿到

20:22.860 --> 20:24.860
ProBug数据

20:24.860 --> 20:25.860
splash

20:25.860 --> 20:26.860
对吧

20:26.860 --> 20:28.860
splash

20:28.860 --> 20:29.860
下标

20:29.860 --> 20:30.860
删除一下

20:30.860 --> 20:31.860
就完事了

20:31.860 --> 20:32.860
接下来我们来再看一下

20:32.860 --> 20:34.860
接下来我们在这里点击

20:34.860 --> 20:35.860
按钮的时候

20:35.860 --> 20:36.860
给它出一个时间

20:36.860 --> 20:38.860
叫remove

20:38.860 --> 20:39.860
删除了锁印

20:39.860 --> 20:40.860
那么问题是这里

20:40.860 --> 20:41.860
怎么拿到锁印呢

20:41.860 --> 20:42.860
我们这里只可以拿到

20:42.860 --> 20:43.860
这个商品对象

20:43.860 --> 20:44.860
拿不到它的锁印

20:44.860 --> 20:45.860
锁印是第几个呢

20:45.860 --> 20:46.860
我们可以在

20:46.860 --> 20:47.860
其实这里Vivus

20:47.860 --> 20:48.860
它可以支持

20:48.860 --> 20:50.860
写个货号

20:50.860 --> 20:51.860
第一项呢

20:51.860 --> 20:53.860
表示的是商品对象

20:53.860 --> 20:55.860
就是每一个循环里边

20:55.860 --> 20:56.860
每一项

20:56.860 --> 20:57.860
有点像4O对吧

20:57.860 --> 20:58.860
第二项呢

20:58.860 --> 20:59.860
就是拿到它的锁印

20:59.860 --> 21:00.860
这个锁印呢

21:00.860 --> 21:01.860
你可以用个便量来

21:01.860 --> 21:02.860
接受一下

21:02.860 --> 21:03.860
我们需要写个i

21:03.860 --> 21:04.860
接下来我们这里的

21:04.860 --> 21:05.860
我会把这个i

21:05.860 --> 21:06.860
给它穿进去

21:06.860 --> 21:07.860
保存

21:07.860 --> 21:08.860
好你看

21:09.860 --> 21:10.860
27

21:10.860 --> 21:11.860
删除

21:11.860 --> 21:12.860
商品删除了过后

21:12.860 --> 21:13.860
数据变化了

21:14.860 --> 21:15.860
见面重新选了

21:15.860 --> 21:16.860
同时呢

21:16.860 --> 21:17.860
计算属性也重新计算

21:19.860 --> 21:20.860
看到没

21:20.860 --> 21:22.860
这就是这么一个简单的

21:22.860 --> 21:23.860
这么一个页面

21:23.860 --> 21:24.860
当然一个添加商品

21:24.860 --> 21:25.860
我就不做了

21:25.860 --> 21:26.860
通过这一刻呢

21:26.860 --> 21:27.860
我们可以体验到

21:27.860 --> 21:28.860
初步体验到

21:28.860 --> 21:29.860
Vivus

21:29.860 --> 21:30.860
它是用一种

21:30.860 --> 21:31.860
什么样的方式

21:31.860 --> 21:32.860
来开发我们的页面的

21:32.860 --> 21:33.860
我们的关注点

21:33.860 --> 21:34.860
从此以后

21:34.860 --> 21:35.860
不再是多么操作

21:35.860 --> 21:36.860
你看这里边

21:36.860 --> 21:37.860
一行多么操作都没有

21:37.860 --> 21:38.860
我们的关注点

21:38.860 --> 21:39.860
变成了

21:39.860 --> 21:40.860
我们有哪些数据

21:40.860 --> 21:42.860
整个操作过程中

21:42.860 --> 21:43.860
数据是怎么变化的

21:43.860 --> 21:45.860
然后再关注

21:45.860 --> 21:47.860
我的数据是这个样子

21:47.860 --> 21:48.860
我应该显示一个

21:48.860 --> 21:49.860
什么样的见面

21:49.860 --> 21:50.860
就是模板

21:50.860 --> 21:52.860
模板根据数据生成

21:52.860 --> 21:53.860
我们只需要控制

21:53.860 --> 21:54.860
数据就可以了

21:54.860 --> 21:55.860
好吧

21:55.860 --> 21:56.860
我们这一刻呢

21:56.860 --> 21:57.860
就体验到这

21:57.860 --> 21:58.860
就OK了

21:58.860 --> 21:59.860
后边这些东西

21:59.860 --> 22:00.860
到底是啥

22:00.860 --> 22:02.860
我们再慢慢去讲解

22:02.860 --> 22:04.860
好这一刻就到这了

