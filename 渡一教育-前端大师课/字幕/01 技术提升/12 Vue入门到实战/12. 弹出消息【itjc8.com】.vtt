WEBVTT

00:02.540 --> 00:08.940
这些课咱们来学习四个比较独立的知识点

00:09.460 --> 00:11.500
目标是为了做出这么一个效果

00:14.170 --> 00:15.690
看着 这个弹窗

00:15.950 --> 00:17.750
弹出消息 就这个玩意儿

00:18.010 --> 00:19.290
弹出来又消失了

00:19.550 --> 00:20.310
再看一次

00:23.140 --> 00:24.940
就在做这么一个玩意儿

00:25.460 --> 00:28.520
要做这么一个玩意儿就必须要知道四个

00:28.780 --> 00:31.080
知识点 每个知识点并不复杂

00:31.340 --> 00:32.620
但是你必须要知道

00:32.880 --> 00:35.180
第一个就是使用CSS Module

00:35.700 --> 00:36.980
那么这个是什么玩意儿呢

00:37.480 --> 00:38.760
给大家演示一下

00:39.280 --> 00:40.560
咱们在五月工程里边

00:40.820 --> 00:41.840
我这里还没安装依赖

00:45.420 --> 00:46.960
在我们的五月工程里边

00:47.980 --> 00:51.560
大部分时候你是不需要去使用什么CSS Module的

00:52.080 --> 00:53.360
为什么呢 因为

00:53.860 --> 00:57.960
我们的组建里边本身就为了避免内民重复 就做了一些事情的

00:58.220 --> 01:00.000
然后组建里边就用了 做到什么了

01:00.260 --> 01:01.040
组建

01:01.540 --> 01:02.820
随便找一个吧

01:03.340 --> 01:04.620
组建里边我们是不是可以用Sculpt

01:04.820 --> 01:06.620
对吧 作用预逐件

01:06.880 --> 01:08.420
那么这样子呢 它的

01:08.680 --> 01:10.980
CSS本来就是不可能重复的

01:11.740 --> 01:15.060
但是我们有的时候呢 可能

01:15.320 --> 01:17.880
会需要用到CSS Module 那怎么办呢

01:18.140 --> 01:20.700
举个例子啊 举个例子 比方说

01:21.220 --> 01:23.260
我这里呢 新建了一个文件

01:24.280 --> 01:26.320
给他叫做Message吧

01:27.860 --> 01:28.380
Gearless

01:30.180 --> 01:33.240
好 我们这里写上一个内样式

01:33.500 --> 01:34.020
Message

01:35.080 --> 01:37.120
就写个 随便写个内样式吧

01:37.380 --> 01:37.900
Red

01:38.660 --> 01:39.380
红色

01:39.940 --> 01:40.980
然后呢

01:41.740 --> 01:43.780
来个固定定位局中嘛 好吧

01:44.560 --> 01:46.340
我们这里导入那个

01:46.860 --> 01:47.620
Import

01:48.400 --> 01:49.420
导入

01:49.940 --> 01:50.700
Mexic

01:50.960 --> 01:53.000
我们之前不是写过这么一个Mexic吗

01:53.260 --> 01:54.020
Self

01:54.540 --> 01:55.060
Center

01:55.820 --> 01:57.100
固定定位Fixed

01:57.360 --> 01:57.860
局中

01:59.100 --> 02:01.200
好 文字是红色

02:01.460 --> 02:02.740
然后呢 这个是个Ring那个色吧

02:02.980 --> 02:03.900
Ring那个色

02:04.260 --> 02:04.780
9999

02:06.660 --> 02:08.220
就比方说有这么一个内样式啊

02:08.460 --> 02:09.740
然后呢 我现在

02:09.980 --> 02:12.060
哎呦 我怎么把这个玩意扔过来了

02:12.820 --> 02:14.700
我们在Made.js里面去

02:14.980 --> 02:18.180
现在我们用纯粹的JS来创建一个动物元素

02:19.060 --> 02:19.740
然后呢

02:19.980 --> 02:22.300
动物元素的内样式呢 就是这个样式

02:23.060 --> 02:25.620
好了 怎么办呢 比方说 我们现在来测试一下啊

02:26.380 --> 02:28.420
测试一下内样式

02:29.380 --> 02:30.220
就是

02:30.980 --> 02:32.020
纯动物操作

02:34.420 --> 02:35.780
因为我们在无忧里边

02:36.540 --> 02:41.420
偶尔 非常非常少的时候呢 可能要用到纯动物操作 不用无忧那个主线

02:41.700 --> 02:42.420
好 来吧

02:42.700 --> 02:44.900
纯动操作很简单啊 就是Documents

02:45.140 --> 02:46.020
你们都学过的

02:46.540 --> 02:47.820
CreateElement

02:48.580 --> 02:49.620
创建个DV

02:51.140 --> 02:52.940
这个DV呢 给他设置一个

02:53.180 --> 02:55.500
给他加入到Documents body里面去

02:55.740 --> 02:57.300
Append Child

02:57.540 --> 02:58.300
加进去

02:59.060 --> 03:01.900
好 来吧 就先写到这 我们先一点点来看吧

03:02.900 --> 03:04.900
npn装设

03:05.900 --> 03:08.900
npn装设

03:09.780 --> 03:11.300
npn装设

03:18.460 --> 03:19.260
运行出来

03:20.340 --> 03:21.140
看一下啊

03:21.660 --> 03:25.140
你看这里是不是多了个DV了 我们 body里边加个DV

03:26.460 --> 03:29.100
然后这个DV呢 我给他设置一些文本吧

03:29.340 --> 03:30.420
InnerText

03:30.660 --> 03:31.660
随便设一些文本

03:32.940 --> 03:34.220
不就文本了吗 对吧

03:34.220 --> 03:36.100
不过呢 目前呢 被上面这个DV折除了

03:36.140 --> 03:38.340
上面这个DV呢 是一个固定定位

03:38.340 --> 03:39.780
把整个网页盖住了的

03:40.140 --> 03:42.460
然后呢 我就给这个DV的一个内样式

03:42.700 --> 03:43.420
ClassName

03:44.100 --> 03:46.540
给这个内样式 给什么样式呢 我想给这个Message

03:47.340 --> 03:48.100
给这个样式

03:48.460 --> 03:51.220
但是为了避免内名跟其他样式重复啊

03:51.220 --> 03:53.460
我希望使用CertiorModule

03:53.700 --> 03:54.500
那怎么办呢

03:54.500 --> 03:56.900
我就可以按照以前的做法啊

03:56.900 --> 04:00.020
是不是可以导入你们学过的那个WePack对吧

04:00.020 --> 04:02.500
那么这里里面我们肯定是接触过那个

04:02.900 --> 04:03.780
CertiorModule的

04:04.060 --> 04:05.580
导入这个Styles

04:06.580 --> 04:09.380
来自于Styles里面的Message

04:09.900 --> 04:10.740
导入这个

04:10.740 --> 04:13.220
然后呢 我们把我们期望的是这个Style里面

04:13.220 --> 04:14.900
来提供一个属性叫Message

04:14.900 --> 04:16.140
那么这个属性值呢

04:16.140 --> 04:19.460
就是一个开启了CertiorModule的唯一内流

04:20.260 --> 04:23.060
但是结果了 我这样子一写是不是就完蛋了啊

04:23.060 --> 04:24.340
就变成undefined了

04:24.580 --> 04:25.580
为什么变成undefined呢

04:25.580 --> 04:27.140
因为我再输出一下Styles

04:28.540 --> 04:30.300
输出一下 一个空对一下

04:30.740 --> 04:31.260
为什么呢

04:31.260 --> 04:33.500
因为默认情况像这种文件啊

04:33.500 --> 04:35.260
它是没有开启CertiorModule的

04:35.740 --> 04:38.940
因此呢 你这里得不到这个唯一的那样式

04:39.380 --> 04:40.820
那怎么办呢 怎么让它开启呢

04:40.820 --> 04:41.900
其实很简单啊

04:41.900 --> 04:45.220
我在Wilkley搭建的工程里面

04:45.220 --> 04:47.460
前提是Wilkley搭建的工程里面

04:47.980 --> 04:50.260
你在写上这么一个文件名

04:50.260 --> 04:51.700
你看我这个给他写了

04:51.700 --> 04:54.420
文件名必须是它随便一个前序

04:54.420 --> 04:55.980
加上中间必须是一个module

04:56.460 --> 04:57.540
后边是一个后卷名

04:57.980 --> 04:59.460
比如说我这个文件名都改成什么了

04:59.460 --> 05:03.180
Message.module.less

05:03.740 --> 05:04.620
改成这个东西

05:04.700 --> 05:05.860
然后呢 我们在这边来去

05:06.500 --> 05:09.220
Styles.message.module

05:09.860 --> 05:10.740
这样去导入

05:11.340 --> 05:12.700
导入过后呢 你看现在就可以了

05:14.460 --> 05:15.300
你看是不是居中了

05:15.620 --> 05:16.780
对吧 你看看这边

05:17.340 --> 05:18.620
它的内样式变成这个东西了

05:19.500 --> 05:22.060
对吧 然后呢 我们看一下得到Styles这个对象

05:22.420 --> 05:24.100
所以Message是这样的一个内名

05:24.100 --> 05:25.180
变成个唯一内名了

05:25.180 --> 05:26.260
避免内名冲突

05:26.980 --> 05:28.820
这就是开启CertiorModule

05:28.820 --> 05:30.900
简单简单 特别简单 并不复杂

05:31.740 --> 05:32.780
这是这一块

05:35.240 --> 05:37.200
把这一块注射掉了

05:38.880 --> 05:41.000
这是第一个小的知识点

05:41.280 --> 05:42.240
第二个小的知识点呢

05:42.240 --> 05:43.400
这个知识点很神奇

05:43.400 --> 05:46.040
我敢说90%的开发者

05:46.040 --> 05:47.680
不怕5.6开发者做了好几年的

05:47.680 --> 05:48.520
他应该都

05:49.000 --> 05:50.840
没搞清楚 不知道至少

05:51.360 --> 05:52.520
因为我没办法

05:52.520 --> 05:54.080
我本来不想讲这个东西的

05:54.080 --> 05:55.200
平时也不怎么会用到

05:55.200 --> 05:56.760
但是呢 我们这里就用到了

05:56.760 --> 05:57.520
那怎么办呢

05:57.960 --> 05:58.720
那就得来

05:59.120 --> 06:01.560
就是要得到一个组建渲染的动物元素

06:01.960 --> 06:02.800
啥意思呢

06:02.880 --> 06:05.000
就是说我希望了有这么一个

06:05.520 --> 06:07.400
我希望了有这么一个函数

06:07.960 --> 06:10.560
这个函数的传入一个组建

06:10.840 --> 06:11.680
组建对象

06:12.360 --> 06:15.120
再传入一个组建的属性

06:15.120 --> 06:17.200
他就给我得到了反回了什么呢

06:17.200 --> 06:19.760
反回了是这个组建生成了动物元素

06:20.760 --> 06:22.000
有点抽象是吧

06:22.360 --> 06:23.000
啥意思啊

06:23.000 --> 06:25.320
我给大家先演示一下这个函数

06:29.840 --> 06:32.160
得到组建生成的

06:33.160 --> 06:34.160
跟动

06:34.160 --> 06:36.600
跟动

06:38.600 --> 06:39.880
就这么一个函数

06:41.240 --> 06:42.400
那么这个函数怎么用呢

06:42.400 --> 06:43.880
我们先不着急去解释这个函数

06:43.880 --> 06:45.320
到底是怎么回事啊

06:45.320 --> 06:46.960
我来先说一下这个函数怎么用

06:47.440 --> 06:48.960
比方说吧我举个例子

06:48.960 --> 06:50.480
我这里导入一个组建

06:50.480 --> 06:51.680
导入一个什么组建呢

06:51.680 --> 06:53.480
我就随便瞎导入一个组建啊

06:54.480 --> 06:55.760
瞎导入一个组建

06:55.760 --> 06:58.160
就导入一个icon组建吧

06:58.160 --> 06:59.320
icon组建

07:00.160 --> 07:01.960
compolence icon

07:04.200 --> 07:05.960
我们来首先输出一下这个icon组建

07:07.840 --> 07:09.160
这个icon组建不就是个对象吗

07:09.160 --> 07:09.680
对不对

07:09.680 --> 07:11.080
我们在这里icon导出了

07:11.080 --> 07:12.680
导出了是不是一个对象

07:12.680 --> 07:14.160
你看导出了是一个对象吗

07:14.160 --> 07:16.040
所以这个模块他导出的就是个对象

07:16.040 --> 07:17.960
我们这里得到的就是个组建配置对象

07:17.960 --> 07:19.000
好 咱们来看一下

07:19.000 --> 07:19.840
放心

07:19.840 --> 07:21.440
这就是icon导出了对象

07:21.440 --> 07:22.600
就有疑问了

07:22.600 --> 07:25.120
哎 这个对象为什么跟我们导出的不一样啊

07:26.840 --> 07:27.880
回忆一下啊

07:27.880 --> 07:30.040
我们又来回忆一下基础知识

07:30.040 --> 07:32.480
在维尤克力里面是不是可以用单文件组建

07:32.520 --> 07:34.200
这个玩意是不是单文件组建

07:34.200 --> 07:36.320
单文件组建是不是会经过编译

07:36.320 --> 07:36.880
对不对

07:36.880 --> 07:40.160
把我们的模板编译成Render函数

07:40.160 --> 07:40.440
对不对

07:40.440 --> 07:42.600
所以说你看到了真正导出的对象

07:42.600 --> 07:43.920
实际上是这个

07:43.920 --> 07:45.320
还有一个Render函数

07:45.320 --> 07:47.200
Propos是我们自己写的对吧

07:47.200 --> 07:48.640
Propos是我们自己写的吗

07:48.640 --> 07:49.360
这个对象

07:49.360 --> 07:52.120
然后computed是我们自己写的吧

07:52.120 --> 07:52.600
对吧

07:52.600 --> 07:54.240
然后其他的我们先不用管啊

07:54.240 --> 07:55.600
这是以后的东西

07:55.600 --> 07:56.960
然后这个Render

07:56.960 --> 07:57.800
所以一个Render函数

07:57.800 --> 08:00.360
他把我们的模板变成了Render函数了

08:00.360 --> 08:02.160
就是这么一个配置对象

08:02.200 --> 08:03.560
那么我要做的就是

08:03.560 --> 08:04.800
雕用这个函数啊

08:04.800 --> 08:07.320
我可以把这个组建对象传进去

08:07.320 --> 08:07.960
然后呢

08:07.960 --> 08:09.480
这个组建不是有些属性吗

08:09.480 --> 08:10.400
以前我们是怎么用的

08:10.400 --> 08:12.080
以前我们是在模板里面的吧

08:12.080 --> 08:13.840
模板里面是这样子使用的

08:13.840 --> 08:15.440
把属性这样子传进的

08:15.440 --> 08:17.440
但是个模板最终会编一层Render

08:17.440 --> 08:18.040
那么现在呢

08:18.040 --> 08:19.120
我们就不用模板了

08:19.120 --> 08:21.640
直接直接把属性传进去

08:21.640 --> 08:22.720
属性呢是一个对象

08:22.720 --> 08:23.360
对象里面呢

08:23.360 --> 08:24.560
比方说传一个属性

08:24.560 --> 08:26.480
icon不是一个属性叫type吗

08:26.480 --> 08:26.880
对吧

08:28.080 --> 08:30.200
你看这个为什么就照组建属性

08:30.200 --> 08:32.120
你看这个东西是个对象的属性吗

08:32.160 --> 08:33.080
type的指示呢

08:33.080 --> 08:34.320
我们随便团一个home嘛

08:35.600 --> 08:38.120
于是这个函数它就会返回一个动物

08:40.280 --> 08:41.560
这个动物就是真实的动物

08:42.320 --> 08:43.040
保存

08:45.920 --> 08:47.320
你看返回了一个I元素

08:47.320 --> 08:49.360
这就是个组建渲染出来的I元素

08:49.640 --> 08:50.720
这个组建再不在页面上了

08:50.720 --> 08:51.440
不在页面上

08:52.640 --> 08:53.920
它只是给我们得到了这个组建

08:53.920 --> 08:55.560
渲染出来的一个元素

08:56.320 --> 08:58.280
这个就是函数做的事情

08:58.640 --> 09:00.040
那么这个函数很神奇啊

09:00.040 --> 09:00.960
它怎么做到的呢

09:00.960 --> 09:01.560
这个函数

09:02.280 --> 09:03.600
不要去管这个函数

09:03.600 --> 09:04.720
为什么会写这个函数啊

09:04.720 --> 09:05.760
我们这几颗会用到的

09:06.320 --> 09:08.240
到时候你会发现一个地方没办法了

09:08.240 --> 09:09.360
只能用这个函数

09:10.000 --> 09:11.600
那么这个函数是怎么做到的呢

09:11.600 --> 09:12.840
其实它并不复杂

09:13.040 --> 09:13.800
我们来看一下吧

09:16.510 --> 09:17.430
首先我们这里呢

09:17.430 --> 09:18.590
这是一个组建对象

09:18.830 --> 09:21.150
我无非就是要把这个组建对象渲染出来

09:21.150 --> 09:21.510
对吧

09:21.510 --> 09:22.430
渲染一个组建

09:22.430 --> 09:24.750
渲染一个组建我们是不是写过的

09:25.350 --> 09:26.190
哪里写过的

09:28.570 --> 09:29.610
这不就在渲染组建吗

09:30.330 --> 09:32.450
你说这个地方是不是在渲染组建吗

09:32.930 --> 09:33.850
不就在渲染组建吗

09:33.850 --> 09:34.210
对吧

09:34.850 --> 09:37.290
我创建一个无诱实力渲染

09:37.290 --> 09:38.210
渲染的是什么呢

09:38.210 --> 09:39.890
我们通过直接渲染虚拟节点

09:39.890 --> 09:40.490
渲染的是什么

09:40.490 --> 09:41.730
渲染的是一个组建

09:41.730 --> 09:42.930
那我这里也一样

09:42.930 --> 09:43.890
留一个无诱

09:43.890 --> 09:45.050
设置一下Render

09:45.050 --> 09:45.770
渲染

09:46.210 --> 09:46.730
渲染的是什么

09:46.730 --> 09:47.330
渲染个组建

09:47.330 --> 09:48.850
只不过这个组建有些属性

09:48.850 --> 09:50.450
我要把这个属性传过去

09:50.970 --> 09:51.650
看到没

09:51.890 --> 09:53.210
就通过这种方式来传递

09:53.210 --> 09:54.210
还记得很早以前

09:54.210 --> 09:55.690
我讲过了个虚拟节点的渲染吧

09:55.690 --> 09:56.090
对吧

09:56.090 --> 09:57.410
就通过这个S函数

09:57.850 --> 09:59.250
来渲染一个东西

09:59.250 --> 10:01.650
东推的有什么样的信息

10:01.650 --> 10:02.330
然后那个东西

10:02.330 --> 10:03.370
后边还有一个第三个参数

10:03.370 --> 10:05.650
就是这个东西里边有什么样的指援数

10:05.650 --> 10:06.210
对吧

10:06.210 --> 10:07.410
可以通过这种方式来宣

10:08.410 --> 10:08.690
好了

10:08.690 --> 10:09.690
我们把属性传递去

10:11.050 --> 10:12.330
这个对象里边可以配置很多

10:12.330 --> 10:13.130
可以配置事件

10:13.130 --> 10:14.010
可以配置属性

10:14.010 --> 10:15.370
那么这里配置一个属性

10:15.930 --> 10:16.170
好了

10:16.170 --> 10:17.370
就生成一个无诱实力

10:17.370 --> 10:18.730
然后这个无诱实力能Mount

10:19.250 --> 10:19.890
为什么要Mount

10:19.890 --> 10:20.610
因为要挂载

10:20.610 --> 10:21.170
不挂载的话

10:21.170 --> 10:23.130
生成不出来的一个动物元素

10:23.130 --> 10:24.410
真实的动物生成不出来

10:24.730 --> 10:25.690
必须要去挂载

10:25.690 --> 10:26.770
挂载完了过后

10:26.770 --> 10:28.890
这个实力里边就有一个属性叫EO

10:29.610 --> 10:31.090
我们把个实力打印一下吧

10:31.570 --> 10:32.090
VN

10:32.530 --> 10:33.770
这是很早以前我们看过的

10:34.410 --> 10:35.770
实力里边不是一个EO吗

10:35.770 --> 10:37.450
这个EO就是它的渲染出来的动物

10:38.090 --> 10:40.490
所以说我们这一块有个新的东西

10:40.490 --> 10:41.770
实力成员里边

10:41.770 --> 10:43.330
我们现在又接出了一个叫EL

10:43.730 --> 10:44.890
尽管这个东西很少用

10:45.330 --> 10:47.370
表示渲染出来的动物跟元素

10:47.730 --> 10:48.570
是真实的动物

10:48.570 --> 10:49.770
这个是就不是虚的动物了

10:50.410 --> 10:51.450
因为挂载完了过后

10:51.450 --> 10:52.570
它就形成了真实的动物

10:53.650 --> 10:55.970
我们把个真实的动物返回就完事了

10:56.410 --> 10:57.490
就形成了这么一个函数

10:58.050 --> 10:58.490
看呗

10:58.490 --> 11:00.250
这就是我们这个小知识

11:01.250 --> 11:02.330
OK

11:02.330 --> 11:03.450
这是第二个

11:04.330 --> 11:06.810
第三个指使是扩展无忧实力

11:07.370 --> 11:08.490
这又是啥意思呢

11:09.050 --> 11:11.050
就是我们在无忧实力里边

11:11.050 --> 11:12.490
比方说我们这里的一个无忧实力

11:17.820 --> 11:18.020
好

11:18.020 --> 11:18.380
保存

11:20.380 --> 11:21.300
这是个无忧实力吗

11:21.620 --> 11:24.140
刚才其中我们在这个函数里边也看到无忧实力了

11:24.580 --> 11:25.380
这都是无忧实力

11:25.380 --> 11:27.020
这是无忧实力卷成出来的根结点

11:27.020 --> 11:27.340
对吧

11:27.340 --> 11:27.940
一个DIV

11:27.940 --> 11:28.460
你看

11:28.460 --> 11:29.860
卷成出来的根结点是不是这个东西

11:29.860 --> 11:31.220
只不过它把挂载到一个

11:31.220 --> 11:33.180
挂载到一个真实的动物元素里边去了

11:33.180 --> 11:34.380
刚才我这里挂载了

11:34.420 --> 11:37.020
只是它做一个挂载行为

11:37.020 --> 11:39.340
它并不挂载到真实的一个动物元素里边去

11:39.860 --> 11:40.620
主要的目的呢

11:40.620 --> 11:42.060
是为了生成它的根元素

11:42.700 --> 11:45.380
但是并不把这个根元素放到页面里边去

11:45.700 --> 11:47.940
但是这里就挂载到页面上的一个元素里面去了

11:48.940 --> 11:49.580
这是挂载

11:50.180 --> 11:51.020
挂载完了过后呢

11:51.020 --> 11:53.580
我们可以得到就是这么一个组建实力

11:53.940 --> 11:55.380
这个组建实力呢

11:56.820 --> 11:57.740
刚才说的话不对

11:57.740 --> 11:59.260
不是说挂载完了才有组建实力

11:59.260 --> 12:00.540
组建实力一开始就有了

12:00.540 --> 12:01.860
在组建实力里边进行挂载

12:02.460 --> 12:03.700
拿到这个组建实力里边

12:03.740 --> 12:04.820
它有很多的信息

12:05.100 --> 12:05.980
我们之前讲过

12:05.980 --> 12:07.140
以多了开头的

12:07.140 --> 12:08.780
以下滑线开头的

12:09.300 --> 12:10.580
还有我们自己提取的

12:10.580 --> 12:11.220
什么data

12:11.220 --> 12:11.860
prox

12:11.860 --> 12:12.500
computed

12:13.020 --> 12:15.020
这些messages都会提取到实力里边去

12:15.020 --> 12:17.420
不仅仅是维又实力

12:17.420 --> 12:19.460
还有一些组建实力的也是一样的

12:20.460 --> 12:21.140
有的时候

12:21.140 --> 12:23.380
我希望往实力里边加一些方法

12:23.740 --> 12:24.700
加一些东西

12:24.700 --> 12:25.900
那怎么来加呢

12:26.940 --> 12:27.820
其实很简单

12:27.820 --> 12:29.500
这就是一个普通的介绍

12:29.860 --> 12:31.220
一个指示

12:32.220 --> 12:34.980
你要往这个对象里边加通用的东西

12:34.980 --> 12:37.580
是不是往它的原型里边加

12:38.340 --> 12:38.940
对不对

12:38.940 --> 12:40.100
所以说第三个

12:41.580 --> 12:42.180
这是

12:42.860 --> 12:45.780
注入额外的

12:46.180 --> 12:47.540
向实力注入成员

12:47.540 --> 12:49.020
注入实力成员

12:50.580 --> 12:51.860
向实力注入成员

12:54.820 --> 12:56.020
无论是组建实力

12:56.020 --> 12:57.060
还是维又实力

12:57.060 --> 12:58.460
只要你写了这么一句话

12:59.300 --> 12:59.820
维又

13:00.180 --> 13:01.060
proto type

13:01.300 --> 13:02.620
比方说给它随便写一个吧

13:03.700 --> 13:04.860
share hello

13:06.860 --> 13:07.580
写个函数吧

13:09.790 --> 13:10.950
输出一个share hello

13:10.950 --> 13:12.550
你就不要去想什么

13:12.550 --> 13:13.590
想什么五六了

13:13.590 --> 13:14.910
你就想既然是基础

13:17.400 --> 13:19.680
既然是基础里面往构造函数里边加

13:19.680 --> 13:21.360
它的原型里边加了一个成员

13:21.360 --> 13:23.920
那么是不是所有的实力里边都会有这个成员

13:24.400 --> 13:26.680
那么这个维也里面里边又会不会有这个成员

13:26.960 --> 13:28.360
那么来输出一下share hello

13:28.840 --> 13:29.560
看有没有啊

13:30.760 --> 13:31.240
保存

13:31.960 --> 13:32.680
输出了哈喽

13:33.280 --> 13:35.440
所以不仅仅这里有

13:35.920 --> 13:38.280
将那些组建里边是不是也会有啊

13:38.720 --> 13:40.160
组建里边这个race啊

13:41.160 --> 13:41.920
随便找个组建吧

13:41.920 --> 13:43.000
随便下车的组建啊

13:43.360 --> 13:44.840
就找一个home 组建

13:46.120 --> 13:46.760
home 组建

13:47.320 --> 13:48.920
这个组建里面我们该写个按钮吧

13:53.710 --> 13:54.110
保存

13:55.750 --> 13:56.230
click

13:57.990 --> 13:58.870
随便下写个啊

13:59.110 --> 13:59.550
click

14:00.310 --> 14:01.150
handle

14:04.280 --> 14:04.960
message

14:06.240 --> 14:06.960
handle

14:07.120 --> 14:07.600
click

14:07.880 --> 14:08.840
那么这里边

14:09.440 --> 14:09.920
我们调

14:10.160 --> 14:10.720
这是race

14:10.720 --> 14:12.240
race表示什么组建实力

14:12.480 --> 14:14.200
组建实力是不是也会

14:14.440 --> 14:17.240
最终它的它的原型链上也会是有这个无忧

14:17.240 --> 14:19.320
因为我们说过组建实力跟那个无忧实力

14:19.320 --> 14:21.320
实际上是本质上是一个东西啊

14:22.000 --> 14:22.600
有点区别

14:22.600 --> 14:23.560
但是本质上的

14:23.840 --> 14:25.320
它们的原型上的是一个

14:25.560 --> 14:26.120
是一个东西

14:26.120 --> 14:26.520
因此呢

14:26.520 --> 14:26.880
它

14:27.480 --> 14:29.320
它也会指向这个无忧的原型

14:29.560 --> 14:29.880
因此呢

14:29.880 --> 14:30.920
原型里边有的东西

14:30.920 --> 14:32.240
所有的组建全部具有了

14:32.760 --> 14:33.240
share hello

14:34.080 --> 14:34.520
这个东西呢

14:34.520 --> 14:36.560
非常可以非常方便的来扩展

14:37.280 --> 14:37.800
组建的

14:39.600 --> 14:40.040
点击

14:40.720 --> 14:41.000
你看

14:41.280 --> 14:43.440
可以非常方便来扩展组建的功能

14:44.640 --> 14:46.640
这就是往组建里面注入实力

14:47.000 --> 14:47.960
但注入实力的话

14:47.960 --> 14:49.400
有个小的细节注意一下

14:49.640 --> 14:51.320
就尽量的给这个实力

14:51.320 --> 14:54.200
这个成员前面加上一个特殊的符号区分一下

14:54.360 --> 14:55.120
你不区分的话

14:55.120 --> 14:56.720
因为组建本身它要提取

14:56.720 --> 14:57.680
比方说这里有个data

14:57.880 --> 14:59.040
data里边要提取

14:59.320 --> 15:00.680
有一个什么share hello

15:00.680 --> 15:01.960
那是不是名字又冲突了

15:02.200 --> 15:03.080
把这个东西

15:03.080 --> 15:04.760
data要提取到实力里边去

15:05.280 --> 15:06.760
我们的原型上有一个东西

15:07.040 --> 15:08.240
那么它最终就用的是它

15:08.240 --> 15:08.800
它就没了

15:09.120 --> 15:09.360
对吧

15:09.360 --> 15:12.120
所以说我们还是给它区分一下

15:12.120 --> 15:12.600
怎么区分

15:12.600 --> 15:14.400
我们通常来说会给它加上一个多的

15:15.520 --> 15:15.840
对吧

15:15.840 --> 15:16.280
多了过后

15:16.280 --> 15:17.560
那这边是不是要使用多了

15:19.520 --> 15:20.000
点击

15:21.000 --> 15:21.560
点击

15:22.160 --> 15:22.880
是没问题的

15:23.320 --> 15:23.720
OK

15:23.720 --> 15:25.320
就这一个小的知识

15:27.860 --> 15:28.740
这是这一块

15:32.710 --> 15:33.270
扔着吧

15:34.510 --> 15:35.910
把这个先注写掉

15:37.270 --> 15:37.510
好

15:37.510 --> 15:38.470
这是这一块小的知识

15:38.630 --> 15:39.830
下面这一个叫Ref

15:41.390 --> 15:43.430
其实今天我们这四个知识呢

15:43.870 --> 15:45.310
用的都不是很多

15:45.510 --> 15:46.590
但是它一并不复杂

15:46.590 --> 15:48.150
所以说三眼有两语

15:48.150 --> 15:48.990
就讲清楚了

15:49.630 --> 15:51.110
下面这个是Ref

15:51.870 --> 15:52.990
Ref是什么玩意儿呢

15:52.990 --> 15:54.150
它就是有的时候

15:54.230 --> 15:55.950
我们在组件里边可能会

15:56.430 --> 15:57.750
想要用到

15:59.470 --> 16:00.870
要用到一些

16:01.390 --> 16:02.350
dome元素

16:03.030 --> 16:04.110
我要把这个

16:04.270 --> 16:05.590
组件里边dome元素得到

16:05.950 --> 16:06.670
那么怎么办呢

16:06.670 --> 16:08.790
我们来演示一下

16:08.790 --> 16:09.870
新建议物件夹头了

16:10.550 --> 16:10.910
demo

16:12.670 --> 16:14.310
我们这边写一个直注键

16:14.510 --> 16:16.750
child.com.vue

16:18.900 --> 16:19.500
vue

16:20.100 --> 16:22.350
child.com

16:22.470 --> 16:22.910
OK

16:23.350 --> 16:25.790
然后我们再建一个组件

16:26.630 --> 16:28.150
叫做app.vue吧

16:28.310 --> 16:29.270
许多人接两个

16:30.430 --> 16:31.470
我们把app.vue

16:31.470 --> 16:32.190
那就把个代码

16:32.350 --> 16:33.550
这个测试代码拿过来

16:34.230 --> 16:34.550
好

16:34.550 --> 16:35.830
咱们来看一下这个测试代码

16:35.830 --> 16:37.190
这个测试代码其实并不复杂

16:38.030 --> 16:38.550
什么意思呢

16:38.550 --> 16:39.510
我这个

16:39.510 --> 16:41.550
这个app这个组件里边有三个东西

16:41.870 --> 16:43.030
一个P元素

16:43.670 --> 16:44.910
一个child.com

16:44.910 --> 16:45.630
是不是直注键

16:45.630 --> 16:45.870
对吧

16:45.870 --> 16:46.950
我这里注册的

16:47.830 --> 16:48.670
一个直注键

16:48.870 --> 16:49.830
然后有个button

16:50.670 --> 16:52.750
现在的我希望在这个组件里边

16:52.750 --> 16:54.830
有可能会出现这种情况

16:54.830 --> 16:58.470
我希望我能够直接拿到这个P元素

17:00.150 --> 17:03.430
或者是我直接希望直接拿到这个直注键的实力

17:05.030 --> 17:05.990
你看

17:05.990 --> 17:07.830
这种说法我们是不是以前都没做过

17:08.830 --> 17:09.990
以前我们都是说

17:09.990 --> 17:13.510
在vue组件里边应该尽量用数据去宣揽dome

17:13.510 --> 17:15.110
不要直接去操作dome

17:15.350 --> 17:15.910
对吧

17:16.830 --> 17:18.030
我们以前也说过

17:18.030 --> 17:18.710
我们

17:18.710 --> 17:21.430
直注键里面的数据是属于直注键的

17:21.430 --> 17:23.670
你副组件是不能去干预的

17:24.670 --> 17:26.390
所以说我们在直注键里面拿到的

17:26.390 --> 17:27.990
他自己的实力直接使用Z

17:27.990 --> 17:28.550
就会拿到

17:28.550 --> 17:29.470
非常简单

17:29.750 --> 17:32.390
但是你在副组件里面去拿直注键的实力

17:32.390 --> 17:34.030
也好像发生一些困难

17:34.550 --> 17:35.670
但实际上是可以拿到的

17:36.150 --> 17:36.630
通过什么呢

17:36.630 --> 17:37.390
通过这个ref

17:37.750 --> 17:39.270
这个ref有什么用呢

17:39.270 --> 17:40.870
你只要写了这个ref

17:41.990 --> 17:44.310
它就会往当前组件里边

17:45.270 --> 17:47.590
加入一个引用

17:47.590 --> 17:48.230
啥意思

17:49.590 --> 17:51.430
当前组件里边有一个属性

17:51.430 --> 17:53.030
一个特殊的属性叫做refs

17:53.430 --> 17:54.470
它是一个空对象

17:55.030 --> 17:58.020
然后我在这个组

17:58.020 --> 17:59.860
当前组件里边写了一个ref

18:00.420 --> 18:01.140
它附着在哪儿

18:01.140 --> 18:02.260
附着在P元数差

18:02.260 --> 18:04.500
于是这个对象里边就会多一个属性

18:04.500 --> 18:05.220
叫做parrow

18:05.620 --> 18:06.980
名字跟我们这里写的名字一样

18:06.980 --> 18:07.460
随便写

18:08.340 --> 18:09.300
那么parrow是什么呢

18:09.300 --> 18:10.260
parrow就是P元数

18:11.220 --> 18:12.260
它是一个真实的动物

18:13.460 --> 18:14.820
如果说我在这个组件

18:15.300 --> 18:17.380
这个直组件不是动物元数了

18:17.380 --> 18:19.700
是直组件里边加上一个ref

18:19.700 --> 18:20.740
表示一个引用

18:20.740 --> 18:22.420
那么它的这里又会多一个属性

18:22.420 --> 18:22.820
叫com

18:23.300 --> 18:23.780
它是什么呢

18:23.780 --> 18:26.820
就是直组件的实力

18:28.660 --> 18:30.580
那么refs最终就变成这个样子

18:30.580 --> 18:31.060
因此呢

18:31.060 --> 18:31.860
我们来看一下

18:31.860 --> 18:33.700
当我们点击这个按钮的时候

18:33.700 --> 18:35.060
我们输出这个refs

18:35.060 --> 18:35.540
得到什么呢

18:35.540 --> 18:36.900
得到实际上就是个对象

18:36.900 --> 18:37.540
就这么一个玩意儿

18:38.100 --> 18:38.340
好

18:38.340 --> 18:38.980
咱们来试一下吧

18:40.580 --> 18:41.780
这东西都没有什么用啊

18:41.780 --> 18:44.020
感觉好像都好像什么用都没有

18:44.100 --> 18:45.540
但是这里很不着急啊

18:45.540 --> 18:46.500
学习不要着急

18:47.060 --> 18:48.020
我们慢慢听

18:48.020 --> 18:50.100
这里就和讲完了就知道了

18:50.100 --> 18:51.940
这些东西有的时候还是挺有用的

18:55.300 --> 18:56.260
运行出来看一下啊

19:01.110 --> 19:01.830
点击

19:01.830 --> 19:03.110
你看是不是拿到一个对象了

19:03.110 --> 19:05.910
对象的parrow这个东西是不是一个P元数

19:05.910 --> 19:06.310
对吧

19:06.310 --> 19:08.470
你看这个玩意儿是不是就纯粹了一个动物元数

19:08.470 --> 19:09.990
这个玩意儿很熟悉吧

19:10.710 --> 19:11.030
是吧

19:11.030 --> 19:12.230
一个纯粹的动物元数

19:13.110 --> 19:13.350
好

19:13.350 --> 19:13.670
然后呢

19:13.670 --> 19:14.550
这个comp呢

19:14.550 --> 19:16.390
我们把refs付出在comp上呢

19:17.030 --> 19:18.150
那么拿到的就是一个

19:19.190 --> 19:20.390
直出件的实力

19:20.470 --> 19:20.870
你看

19:20.870 --> 19:22.150
这个是不是一个直出件的实力

19:23.030 --> 19:23.270
对吧

19:24.070 --> 19:24.550
没问题吧

19:25.670 --> 19:25.910
好

19:25.910 --> 19:26.550
那么现在呢

19:26.550 --> 19:27.030
你看一下

19:27.030 --> 19:28.550
还有些神奇的事情

19:29.110 --> 19:31.750
尽管了这些下面我讲的这些神奇的事情

19:31.990 --> 19:32.870
本节课都用不到

19:33.270 --> 19:33.990
我们来看一下吧

19:33.990 --> 19:35.830
比方直出件里面有一个data

19:36.470 --> 19:38.150
data里面有a

19:39.110 --> 19:39.510
有d

19:40.630 --> 19:42.390
再来随便来一个方法吧

19:42.390 --> 19:43.750
me

19:44.390 --> 19:45.830
输出me

19:48.040 --> 19:48.200
好

19:48.200 --> 19:48.600
OK啊

19:48.600 --> 19:49.240
我们现在呢

19:49.240 --> 19:50.040
把这个组件呢

19:50.040 --> 19:50.840
稍微设置一下啊

19:51.640 --> 19:52.120
那种呢

19:52.120 --> 19:52.520
a

19:53.480 --> 19:53.640
a

19:54.600 --> 19:54.920
d

19:55.720 --> 19:55.960
d

19:56.840 --> 19:57.240
好

19:57.240 --> 19:57.800
没问题吧

19:58.360 --> 19:59.000
你看啊

19:59.000 --> 20:00.440
现在这个两个数据是哪的

20:00.440 --> 20:01.480
是直出件里面了

20:01.480 --> 20:02.120
对吧

20:02.120 --> 20:03.000
按道理来说

20:03.000 --> 20:04.360
副组件是不能拿的

20:04.360 --> 20:05.480
是不能用的

20:05.480 --> 20:06.360
更加不可能改

20:06.360 --> 20:07.160
拿都拿不到

20:07.160 --> 20:07.960
更加不可能改

20:07.960 --> 20:09.480
但是有了ref过后就可以了

20:10.520 --> 20:11.720
你看有了ref过后

20:11.720 --> 20:12.120
我看一下

20:13.640 --> 20:14.440
可以做什么事情

20:16.620 --> 20:17.580
我就可以这样子

20:19.530 --> 20:20.570
thisrefs

20:22.010 --> 20:22.970
这不是一个对象吗

20:23.690 --> 20:24.650
通过这个对象的

20:24.650 --> 20:25.610
什么comp

20:25.610 --> 20:27.370
是不是可以拿到这个组件的实力

20:27.850 --> 20:28.890
拿到实力里边

20:28.890 --> 20:29.690
我们来看

20:30.730 --> 20:31.770
输出一下这个实力啊

20:33.610 --> 20:35.130
thisrefs

20:35.130 --> 20:35.610
comp

20:36.330 --> 20:37.370
一输出这个实力

20:37.930 --> 20:38.570
一点击

20:39.370 --> 20:41.130
看什么拿到直出件的实力了

20:41.130 --> 20:42.890
那这个a和b是不是可以拿到了

20:42.890 --> 20:43.370
嘿嘿

20:43.930 --> 20:45.850
可以通过这种方式来拿到啊

20:45.850 --> 20:46.650
输出a

20:48.730 --> 20:49.050
this

20:50.330 --> 20:50.730
this

20:51.690 --> 20:52.250
refs

20:52.890 --> 20:53.370
comp

20:53.690 --> 20:54.250
输出b

20:54.810 --> 20:55.370
你来啊

20:56.090 --> 20:57.770
点击是不是拿到a和b了

20:58.090 --> 20:59.690
不仅可以拿到还可以改

20:59.690 --> 21:00.090
你看

21:00.090 --> 21:01.530
你拿到达到实力了

21:01.530 --> 21:01.690
对吧

21:01.690 --> 21:02.490
你在直出件里边

21:03.130 --> 21:05.530
不也是通过this.a来更改吧

21:05.530 --> 21:06.970
this.b来更改吗

21:06.970 --> 21:07.610
对吧

21:07.610 --> 21:10.010
也本质上就是通过实力来更改吗

21:10.010 --> 21:11.530
那么这边副组件已经拿到实力

21:11.530 --> 21:12.250
拿到随便改

21:13.050 --> 21:13.930
refs

21:13.930 --> 21:14.410
comp

21:14.410 --> 21:15.370
达a等于

21:15.370 --> 21:15.850
3

21:16.250 --> 21:16.570
this

21:17.130 --> 21:17.610
refs

21:18.170 --> 21:18.810
comp

21:18.810 --> 21:19.690
b等于4

21:20.490 --> 21:20.970
好你看

21:21.450 --> 21:22.010
点击

21:22.010 --> 21:22.970
这变成3合适了

21:24.250 --> 21:25.290
拿到了对吧

21:25.290 --> 21:26.570
还可以调判的方法

21:26.570 --> 21:26.970
this

21:27.530 --> 21:28.010
refs

21:28.010 --> 21:30.090
因为方法也会提到实力里面去对吧

21:30.090 --> 21:30.490
mg

21:33.240 --> 21:34.360
你看是不是可以拿到方法

21:35.160 --> 21:35.880
对吧

21:35.880 --> 21:37.880
拿到实力就可以做所有的事情了

21:37.880 --> 21:40.520
就相对对这个组件可以完全的控制了

21:41.560 --> 21:42.520
那这就是ref

21:42.520 --> 21:45.160
当然我们这里可能不会把它用到直出件里面去

21:45.160 --> 21:46.120
用了就多么对象

21:47.000 --> 21:49.240
那主要是目的呢是或许多么对象

21:50.120 --> 21:51.160
好refs这一块呢

21:51.160 --> 21:52.360
我再要单说一下啊

21:53.320 --> 21:54.680
这个玩意呢

21:54.680 --> 21:56.440
无论你是拿多么对象

21:56.440 --> 21:57.960
还是拿直出件的实力

21:58.680 --> 22:00.120
它都不符合

22:00.120 --> 22:01.800
5u的射精理念

22:02.360 --> 22:02.920
为什么呢

22:02.920 --> 22:04.200
5u的射精理念是啥呀

22:06.200 --> 22:06.680
我的

22:07.080 --> 22:08.680
我不要直接去操作dome

22:08.680 --> 22:11.080
我的dome呢是根据数据渲染出来的

22:11.080 --> 22:12.760
你不同的数据我就渲染不同的东西

22:12.760 --> 22:13.080
对吧

22:13.080 --> 22:13.640
不同的状态

22:14.280 --> 22:15.320
我就渲染不同的dome

22:15.320 --> 22:16.280
渲染不同的样式

22:17.560 --> 22:18.760
不要直接去操作dome

22:19.640 --> 22:21.240
而且还有个理念是什么呢

22:21.320 --> 22:23.000
谁的数据谁负责

22:23.640 --> 22:24.920
你是直出件的数据

22:24.920 --> 22:27.000
那么只有在直出件里面自己去使用

22:27.960 --> 22:29.320
数据是属于谁的

22:29.320 --> 22:31.160
谁就有权力去控制它

22:32.760 --> 22:35.480
那么这个A和B不是属于我们这个组件的

22:35.480 --> 22:37.000
是属于它的这个组件的

22:37.000 --> 22:39.160
那么在这个组件里面就不要去控制A和B

22:39.400 --> 22:39.800
对吧

22:39.800 --> 22:41.960
这是不符合5u理念的

22:42.680 --> 22:44.120
除非是迫不得已

22:44.120 --> 22:45.800
因此呢你不要去使用refs

22:46.520 --> 22:47.800
refs呢会把整个

22:48.360 --> 22:49.720
这个5u的射精都打乱

22:50.600 --> 22:52.040
不要轻易去使用它

22:52.040 --> 22:53.160
尽量的不要使用

22:53.160 --> 22:54.040
除非迫不得已

22:54.040 --> 22:56.280
这里可我们自然有迫不得已的理由

22:57.400 --> 22:57.720
OK

22:57.720 --> 22:59.800
这就是我们这里和了4个新的知识

22:59.800 --> 23:00.920
因此我们这里总结一下

23:02.280 --> 23:04.040
模办这一块新增了什么知识呢

23:04.760 --> 23:06.200
我们之前学过一个特殊属性

23:06.200 --> 23:06.760
叫key

23:06.760 --> 23:08.680
说过了以前就讲过了

23:08.680 --> 23:10.440
有在循环渲染的时候呢

23:10.440 --> 23:11.960
为了提高渲染效率

23:11.960 --> 23:13.640
给它给每个渲染的元素

23:13.640 --> 23:15.400
一个唯一的稳定的值

23:16.760 --> 23:18.200
这里后我们新学了一个叫refs

23:18.920 --> 23:21.240
这个玩意呢会往当前组建的refs

23:21.880 --> 23:24.360
dolarrefs里面加入一个引用

23:26.200 --> 23:28.040
然后呢组建通信这里

23:28.040 --> 23:29.240
我们之前学过的是

23:30.520 --> 23:32.920
副组件向指数件传递数据是个通信

23:32.920 --> 23:33.960
通信就是传数据

23:34.840 --> 23:36.520
指数件往副组件扔数据呢

23:36.520 --> 23:37.480
是触发事件

23:37.480 --> 23:37.800
对吧

23:37.800 --> 23:39.240
高速副组件发生了一件事

23:39.880 --> 23:40.840
然后还有一种的

23:40.840 --> 23:43.400
比较恐怖的通信方式就是refs

23:44.280 --> 23:46.360
通过refs呢直接拿到指数件的实力

23:46.360 --> 23:47.320
可以做任何事情

23:48.440 --> 23:49.480
拿到指数件的数据

23:50.040 --> 23:51.240
改动指数件的数据

23:51.240 --> 23:52.360
调用指数件的方法

23:52.360 --> 23:52.920
都可以做

23:54.040 --> 23:55.480
然后实力成员这一块呢

23:55.480 --> 23:56.760
我们这一块呢学了两个

23:56.760 --> 23:57.400
一个是eL

23:57.960 --> 23:59.160
可以拿到一个组件

23:59.160 --> 24:00.440
或者是一个不用实力里面

24:00.440 --> 24:01.640
确定出来的根源数

24:02.600 --> 24:03.160
refs

24:04.280 --> 24:05.480
这个玩意呢是拿到

24:06.440 --> 24:07.480
目前这个组件里面

24:07.480 --> 24:08.760
持有的所用引用

24:08.760 --> 24:09.400
对吧

24:09.400 --> 24:10.440
这个引用来自于哪呢

24:10.440 --> 24:12.120
来自于refs指定的引用

24:13.960 --> 24:15.080
好好举出了一下啊

24:15.800 --> 24:16.520
知识讲完了

24:17.480 --> 24:18.120
回到这

24:18.680 --> 24:21.400
我们要干嘛呀

24:21.400 --> 24:22.200
回到这啊

24:22.600 --> 24:23.720
关掉了

24:24.280 --> 24:27.860
现在我们这里要做一个效果

24:28.580 --> 24:29.380
就做这个效果

24:30.020 --> 24:32.500
谈出这个消息体式的效果

24:33.940 --> 24:35.540
为什么要讲这么多新知识啊

24:36.420 --> 24:38.340
因为我不打算把他做成一个组件

24:39.540 --> 24:40.900
我不打算把他做成一个组件

24:41.380 --> 24:43.300
为什么不想不把他做成一个组件呢

24:44.420 --> 24:46.100
不管不管这个组件怎么做吧

24:46.420 --> 24:47.700
如果说你把他做成一个组件

24:47.700 --> 24:48.820
我要咋用他你说

24:49.780 --> 24:51.460
我每一次要谈出消息

24:51.460 --> 24:52.420
我在干嘛呀

24:52.980 --> 24:54.340
我得去导入吧

24:54.340 --> 24:55.220
我的导入组件吧

24:55.700 --> 24:56.500
导入是个什么

24:56.500 --> 24:57.860
比方说组件名字叫Message啊

24:57.860 --> 24:58.820
是不是导入组件

24:59.940 --> 25:00.500
导入组件

25:01.060 --> 25:02.420
导入玩意过后是不是得注册

25:02.420 --> 25:03.860
component 注册

25:04.740 --> 25:05.620
注册这个组件

25:06.820 --> 25:07.380
Message

25:07.940 --> 25:08.740
好注册玩意过后

25:08.740 --> 25:09.780
是不是要在模板里边

25:09.780 --> 25:11.220
把组件写进去

25:11.220 --> 25:12.020
你看麻不麻烦

25:12.580 --> 25:13.460
特别麻烦对吧

25:13.460 --> 25:14.580
本来谈出消息呢

25:14.580 --> 25:16.100
以前在传统的介绍里面

25:16.100 --> 25:17.140
都是很简单的

25:17.140 --> 25:18.500
用一些插件都是很简单的

25:18.900 --> 25:20.340
结果现在搞得这么麻烦

25:20.340 --> 25:21.940
伍佑反而把他变麻烦了

25:22.820 --> 25:23.700
伍佑大部分时候呢

25:23.700 --> 25:24.980
都是把问题变简单

25:24.980 --> 25:25.460
但是呢

25:25.940 --> 25:26.580
有的时候呢

25:26.580 --> 25:27.620
像这种东西

25:27.620 --> 25:28.900
他反而把问题变麻烦了

25:29.380 --> 25:30.740
我是不是得用这个组件

25:30.740 --> 25:31.940
还要给他加上一个vif

25:31.940 --> 25:32.580
他有的时候

25:32.580 --> 25:34.420
什么什么数据的时候显示啊

25:34.420 --> 25:35.220
比方说一个数据叫

25:35.220 --> 25:35.940
修message

25:36.820 --> 25:37.140
修

25:37.860 --> 25:38.420
修的时候呢

25:38.420 --> 25:39.460
他才显示这个组件

25:40.740 --> 25:42.340
没有修为force的时候呢

25:42.340 --> 25:43.380
还就不显示这个组件

25:43.860 --> 25:44.420
对吧

25:44.420 --> 25:45.860
要写一大堆

25:45.860 --> 25:47.940
美国就为了谈一个消息出来啊

25:48.020 --> 25:48.900
有这个必要吗

25:49.380 --> 25:51.140
我希望了在组件里边

25:51.140 --> 25:53.780
使用这个消息就调用一个方法就完事了

25:53.780 --> 25:55.060
直接来一个修message

25:55.860 --> 25:56.580
我要谈消息了

25:56.580 --> 25:57.460
我也调用一个方法

25:57.460 --> 25:57.700
对吧

25:57.700 --> 25:58.820
这个是不是符合直觉

25:59.700 --> 26:00.820
谈个消息啊

26:00.820 --> 26:01.220
成功了

26:02.100 --> 26:03.460
传一个消息内容

26:04.180 --> 26:05.620
消息有成功有失败

26:05.620 --> 26:07.220
有消息有内形

26:07.220 --> 26:08.020
再传个内形吧

26:08.020 --> 26:09.060
不要内形是xs

26:10.020 --> 26:10.740
成功消息

26:11.300 --> 26:12.740
有失败有警告啊

26:14.020 --> 26:14.500
然后呢

26:16.020 --> 26:17.060
我再喘一个东西

26:17.220 --> 26:18.020
因为这个消息呢

26:18.500 --> 26:20.260
它有可能是在屏幕正中间

26:20.820 --> 26:22.900
因为你看刚才看到好像在屏幕中间

26:22.900 --> 26:23.700
实际上不是的

26:24.580 --> 26:25.780
你看在这里看一下

26:28.140 --> 26:29.020
它在这里提示了

26:29.980 --> 26:30.620
然后在这

26:32.300 --> 26:32.620
看一下

26:34.380 --> 26:35.500
它在这里提示了

26:35.500 --> 26:37.100
也就是说我们把它总结一下

26:37.100 --> 26:39.260
就说这个消息的显示位置

26:40.540 --> 26:43.180
它应该显示在某个元素的

26:44.140 --> 26:45.260
中间对吧

26:45.260 --> 26:46.860
你不然你把这个DIV

26:46.860 --> 26:48.140
你把这个DIV给他

26:48.300 --> 26:49.740
那么他就显示到这个DIV中间

26:50.460 --> 26:51.260
就这么个意思

26:52.140 --> 26:55.740
你把整个页面给他

26:55.740 --> 26:56.860
而且显示到页面的中间

26:57.740 --> 26:59.180
就这么个意思

26:59.180 --> 27:00.460
所以说给他一个容器

27:01.020 --> 27:01.740
给他个容器

27:02.380 --> 27:04.220
那么他就会显示到这个容器的中间

27:04.540 --> 27:06.140
那么我们就写这么一个函数

27:06.140 --> 27:08.460
有了这个函数谈消息是不是特别方便了

27:08.460 --> 27:09.660
比方说我做了一些事啊

27:09.660 --> 27:10.140
成功了

27:10.140 --> 27:11.900
我就调用这个方法去谈出消息了

27:12.860 --> 27:14.380
我也就是说了

27:14.380 --> 27:15.660
说了再直办一点

27:15.660 --> 27:17.340
就说这个方法呢

27:17.500 --> 27:19.420
我要让它脱离5U组件

27:20.620 --> 27:21.500
这组件没关系

27:22.300 --> 27:24.780
这种纯粹的用最传统最传统的

27:24.780 --> 27:27.900
你们刚刚学乘哥的ATM和CSS1CS过后

27:27.900 --> 27:29.820
听了咱们的一些公开直播课

27:29.820 --> 27:30.780
那种方式来去说

27:32.140 --> 27:33.420
在5U里边是可以做的

27:33.420 --> 27:35.020
不是说在5U里面只能用组件

27:35.020 --> 27:36.380
那我们来看一下自己可怎么来做

27:38.380 --> 27:38.860
接下来呢

27:38.860 --> 27:41.420
我在这个SRC里边去新建一个文件夹

27:41.420 --> 27:42.300
因为他就

27:42.300 --> 27:43.180
你说把他放哪吧

27:43.740 --> 27:44.620
我这个方法放哪吧

27:44.620 --> 27:45.740
你不能放组件里面吧

27:45.820 --> 27:46.620
你不能放Rotor吧

27:46.620 --> 27:47.500
不能放Styles吧

27:47.500 --> 27:48.780
不能放5U是吧

27:48.780 --> 27:50.060
那只能去新一个文件夹

27:50.060 --> 27:51.180
我们把它叫做Utils

27:52.460 --> 27:53.420
工具

27:53.420 --> 27:55.180
这里边提供有很多工具的方法

27:55.980 --> 27:57.580
比方说我们提供一个工具方法

27:57.580 --> 27:58.140
叫做

27:58.140 --> 27:59.500
chill message

28:00.140 --> 28:00.700
叫JS

28:02.940 --> 28:03.500
好来吧

28:04.220 --> 28:05.580
这个方法里面我们就导出一个

28:06.220 --> 28:06.540
default

28:07.420 --> 28:08.700
chill message

28:08.700 --> 28:09.260
里面方形

28:10.300 --> 28:11.980
这个方形有几个参数呢

28:12.540 --> 28:13.500
有这么几个参数

28:13.500 --> 28:15.180
一个是消息内容

28:17.900 --> 28:19.180
一个是消息内容

28:20.780 --> 28:21.740
一个是容器

28:26.100 --> 28:26.500
接下来呢

28:26.500 --> 28:27.300
我们打成主事

28:29.670 --> 28:30.470
谈出消息

28:33.210 --> 28:34.490
第一个参数什么意思

28:34.490 --> 28:35.210
消息内容

28:36.490 --> 28:37.210
第一个参数什么

28:37.210 --> 28:38.250
消息内容

28:38.250 --> 28:39.610
消息内容我们规定一下

28:39.610 --> 28:40.490
就这么几个内容

28:40.490 --> 28:41.130
一个Stanger

28:42.170 --> 28:43.050
或者Error

28:43.050 --> 28:43.850
Error

28:43.850 --> 28:44.570
错误消息

28:46.890 --> 28:47.370
info

28:47.370 --> 28:48.090
普通消息

28:49.610 --> 28:50.410
普通消息

28:50.970 --> 28:51.770
错误消息

28:52.490 --> 28:53.210
是个s

28:54.010 --> 28:54.970
成功消息

28:54.970 --> 28:56.250
还有我警告消息

28:56.970 --> 28:57.690
有这么一些内容

28:57.690 --> 28:58.730
你给我传个支付串过来

28:59.210 --> 29:00.170
这个是一个支付串

29:01.370 --> 29:02.570
这个也是一个支付串

29:04.090 --> 29:04.970
好这个呢

29:04.970 --> 29:06.250
这个是一个容器

29:06.250 --> 29:07.690
就是一个atmr element

29:09.450 --> 29:11.450
这是容器

29:12.250 --> 29:16.650
消息会显示到该容器的正宗

29:19.320 --> 29:20.520
可以不传

29:20.520 --> 29:21.480
如果不传

29:22.200 --> 29:24.200
不传这个第三个参数

29:24.200 --> 29:27.400
则显示到页面正宗

29:27.880 --> 29:28.360
OK

29:28.360 --> 29:31.500
就写上这么一个方法

29:32.620 --> 29:33.900
好为了测试方便呢

29:33.900 --> 29:35.340
我在Media.js里边

29:35.340 --> 29:35.980
把这个方法

29:35.980 --> 29:37.660
把这个sume message导入进来

29:38.940 --> 29:39.580
import

29:40.540 --> 29:41.740
sume message

29:41.740 --> 29:43.100
主要是为了测试

29:44.140 --> 29:44.940
Utils

29:45.580 --> 29:46.540
sume message

29:46.540 --> 29:47.740
我们把它保存到window里边

29:47.740 --> 29:48.780
方便我们在

29:48.780 --> 29:51.100
方便我们在浏览器里面测试

29:51.180 --> 29:52.220
浏览器里面测试

29:52.940 --> 29:54.540
就是普通的以前的做法了

29:55.100 --> 29:55.740
看一下吧

29:55.740 --> 29:56.300
刷新

29:57.020 --> 29:58.700
然后这里也不有一个sume设计吗

29:59.340 --> 30:00.380
不就是这个方法吧

30:00.780 --> 30:01.980
好咱们来写这个方法

30:03.660 --> 30:04.380
这个方法呢

30:04.380 --> 30:07.100
首先我肯定是要创建一个元素

30:07.100 --> 30:07.420
对吧

30:07.420 --> 30:08.540
我要创建个元素

30:08.540 --> 30:09.340
谈出一个消息

30:09.340 --> 30:10.540
这个消息肯定是个元素

30:10.540 --> 30:11.500
保护起来了

30:11.500 --> 30:12.140
对不对

30:12.140 --> 30:13.340
那么我们创建一个元素

30:15.340 --> 30:17.340
创建消息元素

30:18.540 --> 30:19.100
好来吧

30:21.450 --> 30:21.930
div

30:22.650 --> 30:23.290
document

30:23.290 --> 30:24.330
create element

30:24.970 --> 30:25.850
创建一个div

30:26.570 --> 30:27.930
这个div里边呢

30:27.930 --> 30:28.330
我们

30:28.970 --> 30:30.810
寺标设置一些inner item

30:31.690 --> 30:32.090
对不对

30:34.100 --> 30:35.300
寺标设置inner item

30:36.100 --> 30:37.780
那么这个inner怎么设置呢

30:37.780 --> 30:38.820
我们来可以看一下

30:38.820 --> 30:39.620
看一下这边

30:39.620 --> 30:41.060
我们的消息大概是什么样子

30:41.940 --> 30:42.340
提交

30:45.320 --> 30:45.880
是不是这样子

30:47.160 --> 30:48.280
对 还有个参数

30:48.760 --> 30:49.720
它多久消失

30:50.280 --> 30:51.000
还有个参数

30:51.000 --> 30:51.640
多久消失

30:53.960 --> 30:54.680
deal racing

30:54.760 --> 30:56.280
我们给它一些默认值吧

30:56.280 --> 30:57.880
然后这个type的默认值呢

30:57.880 --> 30:59.800
是info

31:01.080 --> 31:02.200
deal racing

31:02.200 --> 31:03.000
多久消失

31:04.840 --> 31:06.200
0的话就不消失了

31:06.200 --> 31:07.400
0的话就不消失

31:08.120 --> 31:10.040
默认了为2秒钟

31:10.040 --> 31:10.440
2000

31:11.720 --> 31:12.360
大概是10

31:14.550 --> 31:15.670
当然也可以把这一参数

31:15.670 --> 31:16.550
合并成一个对象

31:16.550 --> 31:17.350
来进行配置

31:19.110 --> 31:19.990
这是number

31:21.430 --> 31:22.150
deal racing

31:23.030 --> 31:24.870
这是消失

31:25.830 --> 31:28.710
多久后消失

31:29.590 --> 31:31.190
0为不消失

31:36.060 --> 31:36.620
问题吧

31:38.700 --> 31:39.900
好像我们这个系统里面

31:39.900 --> 31:41.260
好像也不存在不消失

31:41.260 --> 31:42.140
不消失懒得做了

31:42.140 --> 31:43.260
免得把问题搞复杂

31:43.820 --> 31:44.460
多久后消失

31:44.460 --> 31:45.100
过了2000

31:46.140 --> 31:46.540
好来吧

31:46.540 --> 31:47.180
继续啊

31:47.180 --> 31:48.300
我们再看一下

31:48.300 --> 31:49.340
我们现在目前要是要写

31:49.340 --> 31:50.540
这个deav的内容

31:51.020 --> 31:52.060
看一下这个消息

31:53.180 --> 31:53.980
不就是一个图标

31:53.980 --> 31:54.700
一个文本吧

31:54.700 --> 31:55.100
对不对

31:55.100 --> 31:56.540
所以说deav里面有一个图标

31:56.540 --> 31:57.100
一个文本

31:57.660 --> 31:58.700
第一个问题就出现

31:59.660 --> 32:00.540
第一个问题

32:01.740 --> 32:03.020
这个实变

32:03.020 --> 32:04.460
比较的一个实变元素里面

32:04.460 --> 32:05.580
包含了什么图标

32:06.620 --> 32:07.260
图标打写

32:08.300 --> 32:08.780
你看吧

32:08.780 --> 32:09.980
这些问题为什么我们上

32:09.980 --> 32:10.860
这节课要讲

32:10.860 --> 32:12.300
这四个字小得知识

32:13.180 --> 32:13.820
图标打写

32:14.460 --> 32:15.660
没说图标好写啊

32:15.660 --> 32:16.140
对不对

32:16.140 --> 32:17.180
怎么能用写图标呢

32:17.180 --> 32:18.620
是不是写个i元素

32:18.620 --> 32:20.460
来写个什么class这个东西

32:21.180 --> 32:23.930
是不是可以写写图标

32:24.250 --> 32:24.730
但是呢

32:24.730 --> 32:25.610
你可以想一想啊

32:25.610 --> 32:27.370
我们是不是做了一个图标组建啊

32:28.650 --> 32:29.690
你这个组建你不来

32:29.850 --> 32:31.530
用你这里又去写个class

32:32.010 --> 32:34.250
那么这个组建是把这个class封装了的

32:34.250 --> 32:35.610
你现在又暴露在外面去了

32:36.250 --> 32:37.130
并不好

32:37.130 --> 32:37.610
因此呢

32:37.610 --> 32:38.970
我们这里希望是什么呢

32:38.970 --> 32:39.530
希望是

32:40.090 --> 32:41.530
将图标组建

32:42.410 --> 32:43.130
渲染的

32:43.770 --> 32:44.330
atm表

32:44.810 --> 32:45.530
放到这里

32:46.570 --> 32:47.610
我们是不是要做这么一件事

32:48.090 --> 32:49.290
把图标组建渲染

32:49.290 --> 32:50.410
atm表放到这里

32:50.410 --> 32:51.050
那怎么呢

32:51.050 --> 32:51.610
那么问题是

32:51.610 --> 32:53.370
我们这里是个原生的节词啊

32:54.490 --> 32:56.570
这个存非常纯净的节词

32:56.570 --> 32:58.170
那在节词里面怎么来渲染

32:58.730 --> 32:59.690
图标组建呢

33:01.980 --> 33:03.180
将组建渲染

33:03.580 --> 33:04.860
得到一个动物元素

33:04.860 --> 33:05.660
拿到动物元素

33:05.660 --> 33:07.020
你拿到atm还不方便吗

33:07.900 --> 33:09.420
所以我们是不是可以用到这了

33:09.420 --> 33:10.780
因此我们把这个方法拿过来

33:14.100 --> 33:15.300
真正的我们可以把这个方法

33:15.300 --> 33:16.340
单独写个文件还刷了吗

33:18.710 --> 33:20.150
啊单独写个文件得了

33:20.150 --> 33:21.350
还是单独写个文件吧

33:21.830 --> 33:23.190
给components如此多

33:26.020 --> 33:26.580
解释

33:28.180 --> 33:28.820
export

33:29.300 --> 33:30.180
defort

33:30.180 --> 33:31.620
那万一以后要用到

33:31.620 --> 33:32.820
我现在也说不准

33:32.820 --> 33:34.660
因为我这个时候跟大家讲的

33:34.660 --> 33:35.620
讲的课呢

33:35.700 --> 33:36.820
给我之前写的个案例

33:36.820 --> 33:38.340
之前的写的案例我就瞎写了

33:38.340 --> 33:39.460
怎么快怎么来

33:39.460 --> 33:40.340
我根本不考虑

33:40.340 --> 33:41.300
因为我时间有限

33:42.020 --> 33:44.020
根本不考虑可维护性的东西

33:44.020 --> 33:44.900
没什么考虑

33:44.900 --> 33:46.180
所以我现在都考虑一下吧

33:46.180 --> 33:48.100
万一我后边还要用到这个函数呢

33:48.500 --> 33:49.860
那么我们把函数试了

33:55.210 --> 33:56.250
好了有这个函数

33:56.250 --> 33:56.890
我帮忙过后呢

33:56.890 --> 33:58.170
我这也是可以导入这个函数

33:59.050 --> 33:59.530
啊这里边

33:59.530 --> 34:01.770
那这个函数肯定要导入一个无诱啊

34:01.770 --> 34:02.810
为什么要导入有有

34:02.810 --> 34:03.930
因为这要用到无诱啊

34:07.590 --> 34:08.070
好了

34:08.070 --> 34:09.590
那么这边我们是导入这个函数

34:09.590 --> 34:11.110
getcomponents

34:11.750 --> 34:12.310
root

34:12.310 --> 34:12.630
动

34:13.510 --> 34:13.910
转

34:16.570 --> 34:17.130
好

34:17.130 --> 34:18.170
调用这个函数

34:19.690 --> 34:21.530
是不是可以拿到一个元素啊

34:21.530 --> 34:22.570
调用这个函数

34:22.570 --> 34:23.370
把什么传进去

34:23.370 --> 34:25.210
把icon图标组件传进去

34:25.210 --> 34:26.810
那不是要导入图标组件

34:26.810 --> 34:27.850
input icon

34:29.610 --> 34:31.290
components

34:34.090 --> 34:35.370
把图标组件传进去

34:35.930 --> 34:36.890
还要把什么传进去呢

34:36.890 --> 34:37.690
还要把属性

34:37.690 --> 34:38.890
还有什么属性呢

34:38.890 --> 34:39.690
属性的内形

34:39.690 --> 34:41.210
那图标的内形又是啥呢

34:42.410 --> 34:43.370
图标的内形

34:43.370 --> 34:45.690
你会发现图标内形就是消息内形

34:45.690 --> 34:46.570
再对比一下吧

34:47.850 --> 34:49.210
把主件稳当拿到了

34:49.930 --> 34:50.490
图标

34:50.490 --> 34:51.690
我们之前写过稳当的

34:51.690 --> 34:52.010
对吧

34:52.650 --> 34:53.210
然后呢

34:53.210 --> 34:53.930
我们来看一下吧

35:00.650 --> 35:01.130
对比一下

35:01.930 --> 35:02.410
info

35:02.410 --> 35:03.850
所以对比到这

35:04.410 --> 35:04.890
error

35:06.010 --> 35:06.490
error

35:06.490 --> 35:07.050
对对

35:07.050 --> 35:07.450
到这

35:07.450 --> 35:08.090
对吧

35:08.090 --> 35:08.970
success

35:08.970 --> 35:09.370
到这

35:15.900 --> 35:16.300
对吧

35:16.300 --> 35:16.700
所以说呢

35:16.700 --> 35:17.740
它这个消息内形呢

35:17.740 --> 35:19.020
其实就是图标内形啊

35:19.020 --> 35:20.380
把这个消息内形

35:21.020 --> 35:21.420
type

35:21.420 --> 35:21.820
放到这

35:22.540 --> 35:23.340
props

35:23.340 --> 35:23.660
type

35:23.660 --> 35:24.220
放到这

35:24.220 --> 35:25.420
因为图标的属性名

35:26.380 --> 35:27.660
那么这里的参数名呢

35:27.660 --> 35:28.060
也是type

35:28.060 --> 35:28.780
就直接放过来了

35:29.660 --> 35:31.500
是不是拿到一个图标的元素

35:31.500 --> 35:33.180
把生成出来的动物元素

35:33.180 --> 35:34.140
真实的动物元素

35:34.140 --> 35:34.540
也有

35:35.260 --> 35:35.820
我看一下吧

35:35.820 --> 35:36.380
打印出来

35:37.660 --> 35:38.620
show message

35:38.620 --> 35:39.340
随便调用一个

35:43.050 --> 35:45.370
macy required prog type

35:45.930 --> 35:46.890
哎 type 我传了呀

35:48.570 --> 35:51.530
它说我缺少了一个必要的属性type

35:52.490 --> 35:53.770
但是type 我传了呀

35:55.530 --> 35:56.570
哦哦哦

35:56.650 --> 35:57.130
这样子

35:57.130 --> 35:57.610
这样子的

35:59.980 --> 36:00.860
同状过的对吧

36:01.820 --> 36:02.300
再来

36:03.340 --> 36:04.300
你看是不是生成了一个

36:04.300 --> 36:04.940
I元素了

36:04.940 --> 36:05.820
这是个动物元素

36:05.820 --> 36:06.700
动物对象

36:06.700 --> 36:08.380
那么我们无非就拿到个动物对象了

36:08.380 --> 36:08.620
什么

36:08.620 --> 36:09.820
outer 80秒

36:09.820 --> 36:10.860
就拿到整个80秒

36:10.860 --> 36:11.420
对吧

36:11.420 --> 36:12.220
所以我们拿到这个

36:13.980 --> 36:14.780
icon

36:14.780 --> 36:15.180
dome

36:15.900 --> 36:16.780
这里是不是拼接

36:18.220 --> 36:18.940
icon

36:18.940 --> 36:19.580
dome的

36:19.580 --> 36:20.700
outer 80秒

36:22.710 --> 36:23.110
好

36:23.110 --> 36:24.550
我们这里输出一下一个DMV

36:25.350 --> 36:25.590
好

36:25.590 --> 36:26.070
保存

36:26.070 --> 36:26.630
你看一下

36:28.790 --> 36:29.270
也有

36:29.270 --> 36:30.150
哦不是也有了

36:31.910 --> 36:32.390
看来

36:33.110 --> 36:34.150
你看是拿到一个dmv

36:34.150 --> 36:35.110
dmv里边有span

36:35.110 --> 36:35.830
span里边是吧

36:35.830 --> 36:36.390
I元素

36:37.750 --> 36:38.390
看没

36:38.390 --> 36:39.110
生成出来了吧

36:39.990 --> 36:41.350
好那么这个图标有了

36:41.350 --> 36:42.710
图标有了过后还需要一个什么呢

36:42.710 --> 36:43.350
还需要一个

36:43.910 --> 36:44.790
再来个dmv吧

36:44.790 --> 36:45.990
再在dmv里边放存

36:45.990 --> 36:47.270
放内容

36:47.270 --> 36:48.710
它觉得就是原生的解释

36:50.070 --> 36:50.630
好再来看

36:52.070 --> 36:53.270
这就生成了一个dmv

36:53.270 --> 36:54.550
dmv里边有span

36:54.550 --> 36:55.270
有内容对吧

36:55.270 --> 36:56.150
这是什么想要的

36:58.090 --> 36:59.210
我们肯定还没完

36:59.210 --> 36:59.850
我得

36:59.850 --> 37:01.690
现在还有很多事要做啊

37:01.690 --> 37:03.690
我得把这个dmv加到哪去呢

37:03.690 --> 37:05.050
就加到容器里边去

37:05.050 --> 37:06.730
但是容器有可能不传递

37:07.290 --> 37:07.690
所以说呢

37:07.690 --> 37:09.930
我们现在要添加把dmv加到容器中啊

37:10.570 --> 37:13.530
将dmv加入到容器中

37:14.250 --> 37:14.970
怎么加入呢

37:15.530 --> 37:16.970
判断一下容器有没有

37:17.610 --> 37:19.130
如果说容器没有的话

37:21.130 --> 37:22.490
容器没有的话

37:22.490 --> 37:23.450
那么我这里呢

37:23.450 --> 37:24.410
就给这个容器呢

37:24.410 --> 37:26.250
复制复制为什么呢

37:26.250 --> 37:27.210
document body

37:27.210 --> 37:28.250
我就加到body里边去

37:29.050 --> 37:30.170
容器没有我就加到body

37:30.810 --> 37:32.170
容器有的话我就加到容器

37:32.890 --> 37:33.210
对吧

37:36.490 --> 37:38.010
然后现在接下来的问题就是

37:38.730 --> 37:40.410
那如果说在这里边

37:42.570 --> 37:44.090
如果说容器有的话

37:44.730 --> 37:46.810
那么我这个容器

37:47.450 --> 37:49.130
我要在容器里边居中

37:49.130 --> 37:50.090
那是不是得决定定位

37:50.090 --> 37:51.610
那dmv肯定得决定定位嘛

37:52.410 --> 37:53.050
比方说啊

37:53.050 --> 37:54.330
我们这里有一个容器

37:54.330 --> 37:55.530
我要在这个容器里边居中

37:56.090 --> 37:57.770
那这个dmv是不是得决定定位

37:58.250 --> 38:00.490
这个里边的消息框

38:00.490 --> 38:01.370
比方这个消息框

38:01.370 --> 38:02.650
我要在这里边居中

38:02.650 --> 38:03.850
那它肯定是决定定位

38:04.410 --> 38:05.450
那它的决定定位的话

38:05.450 --> 38:06.810
容器是不是得相对定位啊

38:07.450 --> 38:08.650
容器可以不相对定位

38:08.650 --> 38:10.490
容器也可以是决定定位

38:10.490 --> 38:11.130
对吧

38:11.130 --> 38:12.890
总之的容器不能是静态为止

38:13.370 --> 38:14.170
那个pration啊

38:14.170 --> 38:15.850
容器的pration必须要改动过

38:16.810 --> 38:17.130
对不对

38:17.130 --> 38:18.330
是不是有这么个逻辑在里面

38:19.370 --> 38:20.650
好那么这个东西又怎么办呢

38:20.650 --> 38:22.010
那我就判断一下呗

38:22.010 --> 38:24.090
我看一下容器的pration有没有改动

38:24.650 --> 38:25.770
容器的pration

38:26.650 --> 38:27.210
是否

38:28.490 --> 38:29.210
改动过

38:30.010 --> 38:31.370
改动过的话我就不动了

38:31.370 --> 38:32.410
没有改动过的话

38:33.690 --> 38:35.130
我就要把它改成relative

38:35.930 --> 38:37.130
那么怎么来看容器的pration

38:37.130 --> 38:37.690
是不是改动过了

38:37.690 --> 38:39.210
这些都是纯粹的介石啊

38:39.930 --> 38:41.530
传统手艺不能丢啊

38:41.530 --> 38:42.890
你不能说你学到5u了

38:42.890 --> 38:43.690
之前就不要了

38:44.410 --> 38:45.450
那肯定是不行的

38:46.490 --> 38:47.930
介石computed

38:47.930 --> 38:49.130
得到它最终的样式

38:49.610 --> 38:50.250
扛天道

38:51.050 --> 38:51.850
拿到它什么是

38:51.850 --> 38:53.290
拿到它的pration

38:53.290 --> 38:55.130
看是不是等于 static

38:56.250 --> 38:57.530
如果说是静态的

38:57.610 --> 38:58.810
那么自然而来

38:58.810 --> 38:59.450
去中

39:00.250 --> 39:00.570
对吧

39:00.570 --> 39:00.970
对吧

39:00.970 --> 39:01.770
container

39:01.770 --> 39:03.210
设置它的style

39:03.210 --> 39:04.810
设置它的什么pration

39:04.810 --> 39:05.210
为什么

39:06.010 --> 39:06.490
为那个

39:07.530 --> 39:08.090
relative

39:12.390 --> 39:12.950
没问题吧

39:14.470 --> 39:14.790
好了

39:14.790 --> 39:15.190
咱们来

39:16.950 --> 39:17.590
测试一下吧

39:18.710 --> 39:19.350
咋测试啊

39:19.990 --> 39:21.030
你说我咋测试啊

39:23.190 --> 39:24.070
我们这里呢

39:24.070 --> 39:24.550
首先

39:26.970 --> 39:27.450
这样吧

39:28.330 --> 39:29.210
然后最终还要

39:29.210 --> 39:30.010
还有一件事

39:30.010 --> 39:31.450
就把加到container里面去

39:31.450 --> 39:32.410
Apply the child

39:33.210 --> 39:34.650
加到这个DL

39:36.010 --> 39:36.330
好

39:36.330 --> 39:36.730
首先呢

39:36.730 --> 39:37.290
我们看一下

39:37.290 --> 39:38.010
直接加到

39:38.010 --> 39:39.370
直接不写容器

39:39.370 --> 39:40.410
不给容器

39:40.410 --> 39:41.450
这没给容器吗

39:41.450 --> 39:42.170
没给容器的话

39:42.170 --> 39:42.890
是不是加到这了

39:43.690 --> 39:44.250
对吧

39:44.250 --> 39:45.690
直接加到这了

39:45.690 --> 39:46.170
没问题吧

39:46.730 --> 39:47.690
这是一个

39:47.690 --> 39:49.610
那如果说我给容器呢

39:49.610 --> 39:50.090
比较说

39:50.090 --> 39:51.530
就随便下给个容器啊

39:51.530 --> 39:53.210
这个容器就给这个

39:54.330 --> 39:55.130
class we made

39:58.810 --> 39:59.610
给它个id吗

40:00.570 --> 40:01.370
我给它一个id

40:04.420 --> 40:05.940
id等于test

40:07.780 --> 40:08.420
好来吧

40:09.220 --> 40:10.660
我show message

40:11.620 --> 40:12.820
写些东西

40:12.820 --> 40:13.540
然后呢

40:13.540 --> 40:15.060
我再写个消息内行

40:15.060 --> 40:16.340
内行的话

40:16.340 --> 40:17.380
内行info嘛

40:18.260 --> 40:18.820
再写个

40:19.860 --> 40:20.900
持续时间

40:20.900 --> 40:22.340
持续时间2秒嘛

40:22.340 --> 40:22.660
好

40:22.660 --> 40:23.300
容器

40:23.300 --> 40:24.180
我给个容器

40:24.180 --> 40:24.820
容器的话

40:24.820 --> 40:25.540
我就给test

40:27.460 --> 40:28.180
这里没有呢

40:30.250 --> 40:30.650
test

40:31.930 --> 40:32.490
哦有啊

40:33.770 --> 40:34.410
它

40:34.410 --> 40:35.210
回车

40:35.770 --> 40:37.290
你看是不是加到这个容器里边去了

40:38.330 --> 40:39.370
是不是加了一个div

40:39.370 --> 40:40.730
你看这div加进去了

40:40.730 --> 40:41.210
同时

40:41.210 --> 40:42.570
因为它发现这个d

40:42.570 --> 40:43.610
它的容器啊

40:43.610 --> 40:44.570
加的是

40:44.570 --> 40:45.690
它发现这个容器

40:45.690 --> 40:47.530
praysing的值为static

40:47.530 --> 40:47.930
因此呢

40:47.930 --> 40:49.050
后来把它改成

40:49.050 --> 40:49.850
verdative

40:50.970 --> 40:51.370
对吧

40:52.090 --> 40:53.690
这些东西是不是都做到了

40:53.690 --> 40:54.890
那么接下来的问题呢

40:54.890 --> 40:55.770
就是说这个

40:55.770 --> 40:57.130
显示出来这个div啊

40:58.890 --> 41:00.010
它没有样式

41:00.010 --> 41:01.130
哦就在这

41:02.090 --> 41:05.860
我这里没打印出来

41:05.860 --> 41:06.980
说出来的div

41:06.980 --> 41:10.600
它没样式

41:10.600 --> 41:11.320
你看

41:11.320 --> 41:14.820
它没有样式

41:14.820 --> 41:15.380
看没

41:15.380 --> 41:17.540
那怎么让它有样式呢

41:17.540 --> 41:18.900
是不是要给它内样式啊

41:18.900 --> 41:20.740
那内样式肯定不能写到这

41:20.740 --> 41:22.260
肯定写到样式文件里面去

41:22.260 --> 41:22.820
对吧

41:22.820 --> 41:24.100
那我写到哪呢

41:24.100 --> 41:25.060
哎我就写

41:25.060 --> 41:26.260
写在这里写吧

41:26.260 --> 41:27.780
因为它是局部的

41:27.780 --> 41:29.380
show message

41:29.380 --> 41:30.980
deless

41:30.980 --> 41:34.300
好那么这里呢

41:34.300 --> 41:35.500
我们写上一个样式

41:35.500 --> 41:37.740
等下写个内样式啊

41:37.740 --> 41:38.780
就是del message

41:38.860 --> 41:39.740
其实呢

41:39.740 --> 41:41.820
我现在都难得去

41:41.820 --> 41:42.540
演示了啊

41:42.540 --> 41:44.540
我就直接把这个内样式呢

41:44.540 --> 41:46.220
改成什么叫module了

41:46.220 --> 41:47.500
道理呢就是个道理

41:47.500 --> 41:48.940
因为我要使用share是module

41:48.940 --> 41:50.140
为了避免那名冲突

41:51.260 --> 41:52.140
没问题吧

41:52.140 --> 41:53.980
我把这个message啊

41:53.980 --> 41:54.780
待会就扶着过来

41:56.540 --> 41:57.180
到了mix呢

41:57.180 --> 41:58.780
要回上节目了

41:58.780 --> 41:59.260
styles

42:00.540 --> 42:01.580
styles

42:01.580 --> 42:02.300
mix

42:02.300 --> 42:02.860
deless

42:03.740 --> 42:05.420
文字颜色先不要搜紫啊

42:07.020 --> 42:08.620
好那么有了这个的样式过

42:08.620 --> 42:10.060
然后我们到js里面

42:10.060 --> 42:11.900
是不是可以把个样式导入进来

42:11.900 --> 42:12.620
import

42:12.620 --> 42:13.580
styles

42:13.580 --> 42:14.460
frock

42:16.380 --> 42:17.420
components

42:21.260 --> 42:22.620
当前目录下面的

42:24.140 --> 42:25.020
show message

42:25.020 --> 42:25.980
module.ness

42:26.620 --> 42:27.660
好这个styles

42:31.620 --> 42:33.140
就是设置样式

42:34.820 --> 42:35.460
styles

42:35.460 --> 42:36.100
哎呗

42:36.100 --> 42:36.900
div

42:36.900 --> 42:37.700
class name

42:38.340 --> 42:38.980
为什么呢

42:39.540 --> 42:40.580
with styles

42:40.660 --> 42:41.380
message

42:42.980 --> 42:44.020
好保存

42:44.020 --> 42:44.580
你看一下

42:45.540 --> 42:47.380
现在消息

42:47.380 --> 42:47.940
是不是居东了

42:48.740 --> 42:49.220
你看一下

42:49.220 --> 42:50.660
这个生存的div

42:50.660 --> 42:51.780
是不是这个内样式啊

42:51.780 --> 42:53.460
保证了名字不冲突

42:53.460 --> 42:54.100
是不是居东了

42:54.100 --> 42:54.740
居东了

42:54.740 --> 42:56.100
当然这里还有很多样式

42:56.100 --> 42:56.980
要去设置啊

42:56.980 --> 42:57.540
不着急

42:57.540 --> 42:58.020
慢慢来

42:59.940 --> 43:00.980
他现在是居东了

43:00.980 --> 43:01.300
然后呢

43:01.300 --> 43:03.300
我要给他去设置一个

43:05.460 --> 43:06.980
设置一个阴影

43:08.260 --> 43:08.900
盒子阴影

43:09.540 --> 43:10.340
来吧

43:10.420 --> 43:11.220
来设置一下吧

43:14.120 --> 43:14.600
fox

43:15.240 --> 43:15.720
shadow

43:16.760 --> 43:17.160
零

43:18.440 --> 43:19.480
我这个阴影呢

43:19.480 --> 43:21.800
就靠左靠下

43:21.800 --> 43:23.800
靠右靠下靠左靠下吧

43:23.800 --> 43:24.600
随便来吧

43:24.600 --> 43:25.640
两个2ps

43:26.520 --> 43:28.520
靠下靠下的话2ps

43:28.520 --> 43:29.560
然后来个扩散

43:29.560 --> 43:29.880
啊

43:30.600 --> 43:31.240
5ps

43:31.800 --> 43:32.520
rgpa

43:33.320 --> 43:34.920
我就瞎写一些样式啊

43:34.920 --> 43:37.560
好来

43:37.560 --> 43:37.880
再来

43:39.400 --> 43:40.200
就这样子了对吧

43:41.160 --> 43:41.560
然后呢

43:41.560 --> 43:43.720
再给他写上一个圆角边框吧

43:44.680 --> 43:45.640
for the writers

43:46.200 --> 43:46.840
5个相处

43:50.060 --> 43:50.860
出来了

43:50.860 --> 43:52.460
然后再给他写个panning吧

43:52.460 --> 43:54.300
就把这一份稍微修饰一下啊

43:54.300 --> 43:55.100
panning

43:55.100 --> 43:55.980
panning的话

43:55.980 --> 43:56.700
上下为

43:58.940 --> 43:59.900
15个相处

43:59.900 --> 44:01.100
左右呢为30个相处

44:05.030 --> 44:06.070
左右30

44:06.070 --> 44:07.670
上下为15

44:08.470 --> 44:10.550
上下为15好像也有点大了

44:11.270 --> 44:12.550
上下为10个相处吧

44:12.550 --> 44:13.750
然后给他设置个night height

44:14.550 --> 44:15.030
v2

44:16.550 --> 44:17.190
设置个防高

44:18.390 --> 44:18.950
v1

44:20.550 --> 44:22.390
其实一行的话还差不多

44:22.390 --> 44:24.230
接下来我要把他变成一行

44:24.230 --> 44:25.190
怎么变成一行呢

44:25.190 --> 44:25.990
display flakes

44:27.110 --> 44:27.830
flakes

44:27.830 --> 44:28.790
不就变成一行了吗

44:31.560 --> 44:32.360
对吧

44:32.360 --> 44:33.880
然后垂直去中嘛

44:34.520 --> 44:35.320
align center

44:38.570 --> 44:39.210
对不对

44:39.210 --> 44:39.610
对呀

44:39.610 --> 44:40.250
图标

44:40.250 --> 44:40.970
样式

44:40.970 --> 44:41.290
好

44:41.290 --> 44:43.130
然后图标和样式

44:43.130 --> 44:43.930
图标和那个

44:44.410 --> 44:45.290
这个之间呢

44:45.290 --> 44:46.330
要隔一段距离啊

44:46.330 --> 44:48.250
首先我给图标设置个class吧

44:49.370 --> 44:50.090
设置个class

44:51.530 --> 44:51.850
好

44:51.850 --> 44:53.290
也是在这里啊

44:53.290 --> 44:54.410
给他一个icon样式

44:54.890 --> 44:55.610
我们在这里

44:55.610 --> 44:56.250
拼接一个

44:58.410 --> 45:00.010
要避免内临重复啊

45:00.010 --> 45:01.610
所以说要用cs module

45:01.610 --> 45:02.970
给他一个图标样式啊

45:02.970 --> 45:03.690
图标样式的话

45:03.690 --> 45:04.890
我给他设置个found size

45:06.490 --> 45:07.370
26个相处吧

45:08.090 --> 45:08.570
来

45:08.570 --> 45:11.140
看一下吧

45:11.140 --> 45:11.700
show message

45:12.500 --> 45:12.820
好

45:12.820 --> 45:13.380
图标出来了

45:13.940 --> 45:14.900
这图标

45:14.900 --> 45:16.020
图标样式看呗

45:16.020 --> 45:17.220
内临唯一

45:17.220 --> 45:18.420
26好像有点大了

45:20.420 --> 45:22.420
为了我们方便测试的话就

45:22.420 --> 45:24.100
就把这里雕容一下吧

45:24.100 --> 45:24.660
media

45:24.660 --> 45:25.780
就在这里雕容一次

45:26.420 --> 45:27.060
show message

45:28.100 --> 45:28.660
给我们一下

45:34.200 --> 45:34.440
好

45:34.440 --> 45:35.480
一看是不是出来了

45:35.480 --> 45:36.440
图标样式有点大啊

45:37.480 --> 45:38.280
稍微控制一下

45:39.720 --> 45:40.680
这个地方就不要了

45:43.460 --> 45:44.500
20个相处吧

45:46.940 --> 45:47.580
差不多

45:47.580 --> 45:49.180
然后呢再设置一个martial right

45:50.220 --> 45:51.260
里右边呢有

45:52.780 --> 45:53.340
7个相处

45:56.280 --> 45:57.000
差不多了

45:57.000 --> 45:58.120
差不多有这么个意思了啊

45:58.840 --> 45:59.720
你看是不是就出来了

46:02.010 --> 46:02.250
哎

46:02.250 --> 46:03.770
那图标说背景颜色呢

46:04.330 --> 46:05.050
背景颜色

46:05.690 --> 46:06.650
背景颜色的话

46:06.650 --> 46:08.170
它要分成4种

46:08.170 --> 46:08.810
对不对

46:08.810 --> 46:09.690
有4种背景

46:10.170 --> 46:11.690
接下来呢我要做的事情是这个

46:12.330 --> 46:12.810
看着啊

46:13.850 --> 46:14.970
接下来我要做这么一件事

46:17.060 --> 46:19.380
哦我要做的是啥事呢

46:19.380 --> 46:21.220
我要做的就是这个div啊

46:21.220 --> 46:22.260
哎跑哪去了

46:22.260 --> 46:23.460
这个div的class name

46:26.070 --> 46:28.150
它里边除了有这个样式之外

46:28.150 --> 46:28.950
它还有一些

46:28.950 --> 46:29.750
还有一个样式

46:30.550 --> 46:31.590
除了有这个样式之外

46:32.870 --> 46:33.830
还有一个样式

46:33.830 --> 46:34.950
就是它内形

46:34.950 --> 46:36.150
这里是内形样式

46:37.030 --> 46:37.990
就是如果说

46:37.990 --> 46:40.230
假设啊假设它是一个成功的

46:40.230 --> 46:40.710
图标

46:40.710 --> 46:41.830
就是内形为成功的

46:41.830 --> 46:43.190
也就是为消息内形

46:43.190 --> 46:44.550
的话我要给它写上这个东西

46:45.270 --> 46:46.390
呃message

46:48.310 --> 46:49.350
呃横杠

46:49.990 --> 46:50.630
message

46:51.030 --> 46:51.990
呃怎么办

46:52.870 --> 46:54.390
message info

46:56.070 --> 46:56.550
是这样的

46:58.230 --> 46:59.030
没意思吧

46:59.030 --> 46:59.590
我就这样去

47:00.390 --> 47:02.230
好如果说是它是那个

47:02.950 --> 47:04.630
它是那个error呢

47:06.230 --> 47:07.110
我就这样去

47:09.690 --> 47:11.370
啊这样吧加个横杠

47:11.370 --> 47:11.770
info

47:12.570 --> 47:12.970
error

47:13.530 --> 47:14.650
啊这样是统一

47:14.730 --> 47:15.610
这个命名

47:15.610 --> 47:16.250
sys

47:17.770 --> 47:18.410
sys

47:19.130 --> 47:19.850
呃or

47:21.050 --> 47:21.850
对吧我就想

47:21.850 --> 47:23.450
就想给它加上这个样式

47:24.010 --> 47:24.890
但是这个样式名字

47:24.890 --> 47:25.610
肯定是唯一的

47:25.610 --> 47:27.530
肯定是通过sys码组出来的

47:27.530 --> 47:28.570
也就是说我们在这边

47:28.570 --> 47:29.450
lens的时候啊

47:30.090 --> 47:32.010
是不是还要提供四个样式

47:32.010 --> 47:33.290
什么四个样式呢

47:33.290 --> 47:33.930
message

47:34.890 --> 47:35.290
info

47:36.010 --> 47:36.570
一个样式

47:37.130 --> 47:37.770
message

47:38.330 --> 47:38.810
icon

47:38.810 --> 47:39.370
明白

47:39.370 --> 47:40.010
sys

47:40.410 --> 47:41.370
一个样式

47:41.370 --> 47:42.410
还有什么message

47:42.890 --> 47:43.290
呃

47:44.010 --> 47:45.210
我们一个样式

47:45.210 --> 47:46.570
还有什么message

47:47.290 --> 47:48.010
呃

47:49.210 --> 47:50.010
还有啥

47:50.010 --> 47:52.570
还有一个就是error

47:52.570 --> 47:54.010
需要提供这么四个样式

47:54.810 --> 47:55.850
那么这四个样式呢

47:55.850 --> 47:56.570
都有个前处

47:56.570 --> 47:57.450
也message很高

47:58.010 --> 47:58.570
对不对

47:58.570 --> 48:00.250
哎那这个东西怎么来减一些呢

48:00.250 --> 48:00.810
我就

48:00.810 --> 48:01.450
其实这个东西

48:01.450 --> 48:01.930
你直接

48:01.930 --> 48:03.450
直接这样子写也没有什么问题啊

48:03.450 --> 48:04.330
一点问题都没有

48:04.890 --> 48:05.930
啊只是呢为了

48:05.930 --> 48:07.290
为了给你们强行

48:07.290 --> 48:08.490
讲一些东西啊

48:08.490 --> 48:09.210
一些技巧

48:09.210 --> 48:10.650
我还是给他说一下

48:10.650 --> 48:12.330
你可以利用lens里边的

48:12.890 --> 48:14.090
这个and符号

48:14.090 --> 48:16.330
这个and符号是不是接着写的意思啊

48:16.330 --> 48:17.850
在前面这个样式的基础上

48:17.850 --> 48:19.130
接着往后写

48:19.130 --> 48:21.210
比方说and.abc

48:21.210 --> 48:21.850
那么写出来

48:21.850 --> 48:23.530
它最终生成的样式就什么呢

48:23.530 --> 48:24.410
生成的样式就是

48:25.130 --> 48:26.730
del message

48:26.730 --> 48:28.170
接着写del abc

48:29.050 --> 48:29.370
明白吧

48:29.370 --> 48:31.450
它是不是生成这样的一个样式

48:31.450 --> 48:32.250
样式选择器

48:32.730 --> 48:34.810
哎那如果说你这里写的不是del abc

48:34.810 --> 48:36.890
写的是一个衡杠info呢

48:37.930 --> 48:39.530
它生成出来就是message

48:40.650 --> 48:41.130
衡杠

48:43.290 --> 48:44.570
是不是可以省略钱费了

48:45.290 --> 48:46.890
就是这么一个小的技巧啊

48:48.010 --> 48:50.650
然后这里写个衡杠sks呢

48:51.290 --> 48:52.250
那么这里就写

48:52.250 --> 48:53.210
这里出来就是

48:53.210 --> 48:54.410
用一个样式的啊

48:54.410 --> 48:55.530
message接着写

48:56.250 --> 48:56.810
sks

48:58.010 --> 48:59.210
明白的意思吧

48:59.210 --> 49:00.170
就这么个意思啊

49:00.170 --> 49:00.970
咱们来试一下吧

49:01.690 --> 49:02.810
说了半天都没用

49:02.810 --> 49:03.850
试一下是最管用的

49:04.730 --> 49:05.130
and

49:06.010 --> 49:06.330
or

49:08.330 --> 49:09.370
and error

49:10.010 --> 49:10.890
咱们来写一下啊

49:10.890 --> 49:11.530
背景颜色

49:12.170 --> 49:12.810
背景颜色的话

49:12.810 --> 49:14.890
我们就是把背景颜色变一下

49:14.890 --> 49:16.410
白光的背景颜色

49:16.410 --> 49:17.690
背景颜色为什么呢

49:17.690 --> 49:19.050
我在导入背景颜色啊

49:19.050 --> 49:19.530
import

49:21.820 --> 49:22.380
styles

49:22.940 --> 49:23.340
var

49:23.820 --> 49:24.300
点s

49:26.410 --> 49:27.050
背景颜色呢

49:27.050 --> 49:28.730
这里就是info是什么背景颜色呢

49:28.730 --> 49:29.770
我就用primary吧

49:30.410 --> 49:31.770
你们自己看一下这个颜色啊

49:31.770 --> 49:32.330
primary

49:33.130 --> 49:33.690
这个sks呢

49:33.690 --> 49:36.170
我就用那个sks这个颜色

49:36.650 --> 49:38.090
or我就用or那个颜色

49:38.970 --> 49:40.650
error我就用danger那个颜色

49:41.770 --> 49:42.010
好

49:42.650 --> 49:43.770
就写上这样的样式

49:43.930 --> 49:46.010
好 接下来我们来打印出这个styles

49:46.010 --> 49:47.210
你看得很清楚

49:47.210 --> 49:49.290
很清楚很清楚的styles

49:49.290 --> 49:49.930
打印出来

49:51.610 --> 49:52.090
好 你看

49:54.680 --> 49:56.440
所以我们的样式里面就多了icon

49:56.440 --> 49:57.400
我们之前写的对吧

49:57.400 --> 49:58.040
message

49:58.280 --> 49:59.320
是不是多了这些样式了

49:59.720 --> 50:00.600
message error

50:00.600 --> 50:01.400
这些属性名啊

50:01.400 --> 50:02.360
这些都是属性名

50:03.400 --> 50:04.680
好 那么这里边

50:04.680 --> 50:05.960
我这个地方要写什么呢

50:05.960 --> 50:07.080
你不能直接这样子写啊

50:08.040 --> 50:08.520
应该写什么呢

50:08.520 --> 50:09.080
有时候

50:09.080 --> 50:10.360
谁能不能这样子写

50:13.020 --> 50:13.740
能不能这样子写

50:16.790 --> 50:17.830
不行啊

50:17.830 --> 50:18.550
不行

50:18.630 --> 50:21.750
你这样子写的话是直接使用它原式的内名

50:21.750 --> 50:24.310
但最终生成出来编印出来是不是原式的内名

50:24.310 --> 50:26.150
它是开启了sys module的

50:26.150 --> 50:27.350
比如说这里是info

50:27.350 --> 50:29.510
利用的内名就是message 横桿info

50:29.510 --> 50:30.710
但是是这个内名吗

50:30.710 --> 50:31.110
不是

50:31.750 --> 50:32.550
它是这个内名

50:33.190 --> 50:34.950
它生存出来是唯一的内名

50:34.950 --> 50:36.310
注意哦 一定要注意啊

50:36.310 --> 50:39.350
所以说我们这里应该是用这个东西作为属性名

50:40.070 --> 50:41.110
从哪里读

50:41.110 --> 50:43.110
是不是从styles里边读啊

50:43.110 --> 50:44.790
因此呢我们这里应该是这样子写的啊

50:48.010 --> 50:48.810
看着啊

50:48.810 --> 50:49.930
这里应该是这样子写的

50:52.170 --> 50:52.810
styles

50:52.890 --> 50:53.770
属性名是啥

50:54.330 --> 50:55.210
属性名是

50:57.130 --> 50:59.130
message

51:00.170 --> 51:00.650
横桿

51:01.450 --> 51:02.170
拼接

51:02.170 --> 51:02.970
拼接什么了

51:03.690 --> 51:04.730
这里边是整个

51:04.730 --> 51:06.570
这里边整个是一个介石表达式啊

51:06.570 --> 51:07.930
整个就是一个介石表达式

51:08.810 --> 51:09.930
注意看清楚

51:11.450 --> 51:13.770
那么这里边要写个表达式作为属性名

51:13.770 --> 51:15.610
如果说你直接时间绕不清楚

51:15.610 --> 51:16.490
实在绕不清楚的话

51:16.490 --> 51:18.330
你就在这里边先把写好的再说

51:20.490 --> 51:22.490
就是info class

51:23.450 --> 51:25.860
不是

51:25.860 --> 51:26.580
Type class

51:29.510 --> 51:30.550
类型

51:30.550 --> 51:31.190
央视

51:32.470 --> 51:35.030
那么这里先把这个东西弄出来再说

51:37.240 --> 51:39.800
这里边你就可以用这个符号了

51:39.800 --> 51:41.240
就是我这要给个属性名

51:41.240 --> 51:41.960
属性名是什么

51:41.960 --> 51:43.640
message横桿什么什么什么

51:43.640 --> 51:45.080
这个什么什么什么来自于

51:46.040 --> 51:46.520
Type

51:48.840 --> 51:51.720
这些东西跟5U都没有关系啊

51:51.720 --> 51:52.680
没有一毛钱的关系

51:52.680 --> 51:53.800
就全是你们的基础

51:54.280 --> 51:55.800
就看你们的基础咋不咋识了

51:58.310 --> 51:59.270
保存啊

51:59.670 --> 52:00.230
你看

52:00.390 --> 52:01.670
这样样子是不是设置出来了

52:02.470 --> 52:03.830
你看样子是不是出来了

52:05.980 --> 52:07.100
实变你看现在是

52:07.820 --> 52:09.020
呃这个是个实变

52:09.020 --> 52:09.500
哎

52:09.500 --> 52:09.900
好像

52:10.540 --> 52:11.900
这个DIV呢是info

52:11.900 --> 52:12.140
对吧

52:12.140 --> 52:12.860
这个样式

52:12.860 --> 52:15.020
那如果说我可以我可以换一个样式啊

52:16.060 --> 52:16.540
把这个

52:17.820 --> 52:18.620
换一个样式啊

52:18.620 --> 52:19.580
比方说我换成

52:20.300 --> 52:20.940
是个sys

52:23.100 --> 52:23.500
保存

52:24.300 --> 52:25.100
这边这个样式

52:26.060 --> 52:26.780
对不对

52:26.780 --> 52:27.740
好里边的文字

52:27.740 --> 52:28.540
无论是什么样式

52:28.540 --> 52:29.500
它的里边的文字呢

52:29.500 --> 52:30.220
应该是白色

52:31.100 --> 52:32.220
把文字撤成白色

52:34.250 --> 52:34.890
对吧

52:34.890 --> 52:35.850
所以效果就出来了

52:37.050 --> 52:37.290
好

52:37.290 --> 52:38.410
咱们咱们再试一下啊

52:38.410 --> 52:39.210
往这里边谈

52:39.210 --> 52:40.810
往某一个区域中间谈

52:40.810 --> 52:42.810
比方说我就往这个区域中间谈吧

52:43.450 --> 52:44.330
往这个区域

52:44.330 --> 52:45.530
这个区域呢给他加个id

52:47.690 --> 52:48.410
id

52:48.410 --> 52:48.810
test

52:50.570 --> 52:50.810
好

52:50.810 --> 52:51.530
现在让我们

52:51.530 --> 52:52.650
修message

52:54.410 --> 52:54.970
啊就这个

52:57.370 --> 52:57.770
好

52:57.770 --> 52:58.330
往这里谈

52:59.610 --> 53:00.810
哎好像有出了问题对吧

53:02.410 --> 53:03.050
出了问题

53:04.010 --> 53:05.130
哦明白了

53:05.210 --> 53:06.650
我这里使用的是fix

53:06.650 --> 53:07.290
应该是股

53:07.290 --> 53:08.170
应该是绝对定位

53:09.130 --> 53:09.290
好

53:09.290 --> 53:09.610
再来

53:10.890 --> 53:11.770
id没有加上

53:12.730 --> 53:13.450
加个id

53:17.580 --> 53:17.980
好

53:17.980 --> 53:19.020
你看是不是显示到这了

53:19.660 --> 53:20.860
显示到刚才这个id

53:20.860 --> 53:21.820
这个底也被整中了

53:22.380 --> 53:22.620
对吧

53:22.620 --> 53:23.340
你给他的容器

53:23.340 --> 53:24.300
他就显示到容器整中

53:24.300 --> 53:25.100
你没有给他容器

53:25.900 --> 53:27.420
你看现在就显示到这了

53:27.420 --> 53:28.300
没有给他容器了

53:28.300 --> 53:29.580
他就显示到页面整中

53:30.060 --> 53:30.220
对吧

53:30.220 --> 53:31.020
就非常灵活

53:32.700 --> 53:33.580
而且可以调整

53:34.540 --> 53:35.020
样式

53:35.020 --> 53:35.740
那么最后就是

53:36.300 --> 53:38.540
出现和消失

53:39.900 --> 53:40.300
对不对

53:40.300 --> 53:41.500
不就是出现和消失吗

53:43.020 --> 53:43.980
来怎么出现呢

53:44.940 --> 53:45.660
怎么出现呢

53:48.460 --> 53:50.620
我可以让他一开始的时候

53:51.500 --> 53:52.060
我看着啊

53:52.060 --> 53:53.500
我把这个这个元素拿到

53:54.700 --> 53:55.660
就这个玩意儿

53:55.660 --> 53:57.180
我可以让他一开始的时候

53:57.180 --> 53:57.820
是这个样子

53:58.860 --> 53:59.100
全

54:00.940 --> 54:01.340
全

54:02.140 --> 54:02.460
4

54:03.500 --> 54:04.460
全是nate

54:05.020 --> 54:05.340
y

54:06.060 --> 54:07.660
比方说我把它靠下一点啊

54:07.980 --> 54:09.740
比方是15个像素吧

54:10.540 --> 54:11.660
一开始从0个像素

54:11.660 --> 54:12.860
比方说看0个像素啊

54:13.500 --> 54:14.620
我让他靠下一点

54:18.280 --> 54:18.840
div

54:18.840 --> 54:19.800
他为什么跑到来了

54:21.000 --> 54:22.040
全是nate y

54:23.240 --> 54:24.040
哦哦哦

54:24.040 --> 54:25.080
这边还有个全是fone

54:25.880 --> 54:27.080
这边还有个全是fone

54:31.240 --> 54:33.480
到我还要把之前的全是fone

54:33.480 --> 54:35.080
还要把这个东西加上啊

54:35.080 --> 54:37.720
因为他之前那个G中啊

54:37.720 --> 54:39.640
他G中是用这种方式来G中的

54:40.920 --> 54:42.360
那我还得把之前的加上

54:42.360 --> 54:43.160
让我加上吧

54:51.190 --> 54:52.230
之前在正中吧

54:52.230 --> 54:52.950
对不对

54:52.950 --> 54:53.990
是在正中

54:53.990 --> 54:54.470
好然后呢

54:54.470 --> 54:55.590
我再把全是nate y

54:56.550 --> 54:57.110
移动一下

54:58.550 --> 55:00.230
像下一动10个像素

55:00.230 --> 55:01.510
或者是15个像素

55:02.470 --> 55:02.870
然后呢

55:02.870 --> 55:03.830
最开始的时候

55:03.830 --> 55:04.550
opacity

55:05.830 --> 55:07.270
为理由

55:08.150 --> 55:08.870
完全透明

55:10.630 --> 55:11.270
懂的意思吧

55:13.350 --> 55:13.910
然后呢

55:13.910 --> 55:15.670
我把这个东西加进去

55:15.750 --> 55:16.230
接下来呢

55:16.230 --> 55:17.430
我再把这个全是

55:17.430 --> 55:18.550
全是nate y呢

55:18.550 --> 55:18.950
变成

55:21.030 --> 55:21.430
0

55:21.430 --> 55:22.390
就把这个东西去掉

55:23.510 --> 55:23.830
然后呢

55:23.830 --> 55:25.270
把opacity0也去掉

55:26.310 --> 55:27.830
是不是显示到上面来了

55:27.830 --> 55:28.230
无分了

55:28.230 --> 55:30.070
就是给他加上一个全是性过渡嘛

55:30.070 --> 55:31.510
先给他加上全是性过渡

55:32.310 --> 55:32.790
全是性

55:35.080 --> 55:38.200
比方说是0.3s

55:38.760 --> 55:39.560
啊0.3秒钟

55:40.360 --> 55:41.400
来咱们来看一下啊

55:41.960 --> 55:42.840
就这个玩意吧

55:42.840 --> 55:43.960
咱们来看一下

55:43.960 --> 55:46.520
我们首先要做的事情是

55:47.080 --> 55:48.280
加入到容器的时候

55:49.160 --> 55:50.520
他一开始的样式

55:50.520 --> 55:51.320
啊一开始的样式

55:51.320 --> 55:52.280
我们给他设置一下

55:52.280 --> 55:53.320
全是4

55:56.070 --> 55:57.030
全是nate

55:58.790 --> 56:00.070
负的50%

56:01.270 --> 56:02.150
负的50%

56:02.150 --> 56:03.190
为了居中嘛

56:03.190 --> 56:03.590
然后呢

56:03.590 --> 56:04.870
再往下往下移

56:05.270 --> 56:06.070
全是nate y

56:06.710 --> 56:07.430
15个像素

56:08.310 --> 56:09.270
一开始是这个样子

56:09.830 --> 56:10.230
然后呢

56:10.230 --> 56:10.630
opacity

56:10.630 --> 56:11.030
为你了

56:14.390 --> 56:15.190
加进去

56:15.190 --> 56:16.230
先把加进去再说

56:16.950 --> 56:17.750
加进去了

56:17.750 --> 56:18.710
过后呢

56:18.710 --> 56:19.350
你看啊

56:19.350 --> 56:20.390
先把加进去

56:20.390 --> 56:21.190
加进去了

56:21.190 --> 56:21.990
过后

56:21.990 --> 56:23.350
让他强行渲染一次

56:23.350 --> 56:23.910
还渲染出来

56:23.910 --> 56:24.950
才有动画效果嘛

56:24.950 --> 56:25.910
让他强行渲染

56:26.790 --> 56:27.430
强行

56:28.230 --> 56:28.870
然后先不写

56:28.870 --> 56:29.430
强行渲染

56:31.830 --> 56:32.550
回归到

56:33.750 --> 56:34.550
正常位置

56:36.150 --> 56:37.110
怎么回到正常位置

56:37.110 --> 56:38.230
找到的div style

56:39.670 --> 56:40.470
opacity

56:40.470 --> 56:41.350
首先要设为0

56:42.150 --> 56:42.710
设为1

56:43.270 --> 56:43.910
然后呢

56:43.910 --> 56:45.590
div style

56:46.550 --> 56:47.110
transform

56:49.400 --> 56:51.000
就是transnate

56:52.120 --> 56:52.920
负的50%

56:53.480 --> 56:54.200
负的50%

56:54.760 --> 56:55.000
对吧

56:55.000 --> 56:56.360
那就不要那个

56:56.360 --> 56:57.240
transnate y了

56:57.240 --> 56:58.520
就不要往下移动了

56:58.520 --> 56:59.560
是不是回到正常位置

56:59.560 --> 57:00.520
居中的位置

57:00.520 --> 57:01.160
对吧

57:01.160 --> 57:01.560
好

57:01.560 --> 57:02.200
来看一下啊

57:02.840 --> 57:03.960
那这样子是不是没动画

57:04.760 --> 57:05.560
为什么没动画

57:05.560 --> 57:06.040
因为

57:06.040 --> 57:06.760
我们的是

57:06.760 --> 57:08.200
浏览器渲染

57:08.200 --> 57:09.080
它是异步的

57:09.080 --> 57:09.560
它要等我们

57:09.560 --> 57:10.280
待把执行完了

57:10.280 --> 57:11.400
过后才渲染

57:11.400 --> 57:12.120
它不会说

57:12.120 --> 57:12.760
执行到这儿

57:12.760 --> 57:13.640
渲染了出来

57:13.640 --> 57:14.040
然后呢

57:14.040 --> 57:15.800
再把它回归到正常位置

57:15.800 --> 57:17.560
那这样就又有动画了

57:17.720 --> 57:19.800
就是因为它这里

57:19.800 --> 57:20.920
加入了div过后

57:20.920 --> 57:21.800
它浏览器实际上

57:21.800 --> 57:23.080
还看不见这个div

57:23.080 --> 57:24.120
还没有渲染出来

57:24.120 --> 57:24.520
然后呢

57:24.520 --> 57:25.720
你又把属性改了

57:25.720 --> 57:26.840
那么它最终渲染的时候

57:26.840 --> 57:27.960
就按照这个属性来渲染

57:28.680 --> 57:31.080
我们要形成过渡效果

57:31.080 --> 57:31.800
一定要让它

57:32.840 --> 57:34.760
浏览器先试一个状态

57:34.760 --> 57:36.280
然后再变成另一个状态

57:36.280 --> 57:37.640
才会有过渡效果

57:37.640 --> 57:38.520
如果说

57:38.520 --> 57:39.800
待把运行完这句话

57:39.800 --> 57:41.880
浏览器都还没有出现那个div

57:42.840 --> 57:43.960
它是异步渲染的吧

57:43.960 --> 57:44.360
对吧

57:44.360 --> 57:45.880
它没有出现这个div

57:45.960 --> 57:46.360
然后呢

57:46.360 --> 57:47.640
你把属性改成这个样子的

57:47.640 --> 57:48.760
它最终只渲染一次

57:48.760 --> 57:50.200
它就把只渲染这个东西

57:51.320 --> 57:52.600
大致就是这么个意思

57:52.600 --> 57:53.080
所以说呢

57:53.960 --> 57:56.360
这里我让它浏览器强行渲染一遍

57:56.360 --> 57:57.560
浏览器强行渲染

57:58.440 --> 57:59.480
怎么让它强行渲染的

57:59.480 --> 58:00.680
其实非常简单啊

58:00.680 --> 58:02.280
你只要读取这个元素的

58:03.080 --> 58:04.680
位置啊尺寸啊

58:04.680 --> 58:05.000
这些东西

58:05.000 --> 58:06.760
像比方说Client Heist啊

58:06.760 --> 58:07.640
这些东西

58:07.640 --> 58:08.840
就会导致强行渲染

58:10.040 --> 58:10.600
导致什么

58:10.600 --> 58:11.240
导致Reflow

58:12.600 --> 58:13.000
重排

58:15.030 --> 58:15.350
好

58:15.350 --> 58:15.750
保存

58:16.710 --> 58:18.470
你看是不是有个效果了

58:19.030 --> 58:19.750
0.3秒

58:19.750 --> 58:21.830
0.3秒好像有点太快了

58:23.110 --> 58:24.710
0.4秒吧

58:27.740 --> 58:27.900
好

58:27.900 --> 58:28.620
就这么个意思

58:28.620 --> 58:28.860
你看

58:28.860 --> 58:29.500
就是升起来了

58:30.300 --> 58:30.620
好

58:30.620 --> 58:31.420
升起来那过后

58:31.420 --> 58:32.380
你没完啊

58:32.380 --> 58:33.340
要等一会儿

58:34.540 --> 58:35.660
等一会儿消失

58:38.500 --> 58:41.940
等一段时间消失

58:41.940 --> 58:42.660
等多久了

58:42.660 --> 58:43.620
是不是前面一个参数

58:44.420 --> 58:45.060
Duration

58:46.340 --> 58:46.580
好

58:46.580 --> 58:46.980
于是呢

58:46.980 --> 58:47.860
我们这里Set Timeout

58:48.500 --> 58:49.140
Duration

58:49.940 --> 58:51.140
等一段时间消失

58:51.140 --> 58:51.940
怎么消失呢

58:52.980 --> 58:53.780
怎么消失

58:53.780 --> 58:55.700
你是不是又往上移动消失

58:55.700 --> 58:56.180
还不现在

58:56.180 --> 58:57.860
还不是直接把个移除啊

58:57.860 --> 58:59.860
还是是往上移动消失

58:59.860 --> 59:00.260
所以说呢

59:00.260 --> 59:01.140
我们这里呢

59:01.140 --> 59:03.060
又把DIV Style Opacity

59:03.060 --> 59:03.860
设为0

59:04.820 --> 59:06.100
又把这个Transform呢

59:06.100 --> 59:07.380
又设为往上移动

59:09.620 --> 59:11.620
继续Transnet Y

59:12.340 --> 59:13.540
附的15个相处

59:14.660 --> 59:14.820
好

59:14.820 --> 59:15.220
你看啊

59:16.820 --> 59:17.300
2秒钟

59:18.660 --> 59:19.540
是不是往上消失了

59:20.980 --> 59:21.540
升起

59:22.820 --> 59:23.380
消失

59:23.380 --> 59:23.780
你看

59:24.500 --> 59:24.900
升起

59:26.020 --> 59:26.500
消失

59:26.500 --> 59:27.940
如果说你做这15

59:27.940 --> 59:28.740
还不

59:28.740 --> 59:29.620
看不出来什么效果了

59:29.620 --> 59:30.340
就25倍

59:30.340 --> 59:31.460
你自己去调一下

59:31.460 --> 59:32.740
调一下这个偏移量

59:33.540 --> 59:34.500
调到一个合适的值

59:35.940 --> 59:36.340
升起

59:37.460 --> 59:37.860
消失

59:39.140 --> 59:39.860
就很舒服了

59:39.860 --> 59:40.340
2秒钟

59:41.620 --> 59:42.340
但是消失过后

59:42.340 --> 59:43.940
那个元素是不是还在

59:43.940 --> 59:45.220
你得把元素移除掉吧

59:45.220 --> 59:45.540
最后

59:46.820 --> 59:48.500
那么消失的时间是多久了

59:48.500 --> 59:49.620
是0.4秒

59:49.620 --> 59:49.940
对吧

59:50.020 --> 59:50.740
那么这个时候呢

59:50.740 --> 59:52.420
我给他注册一个这个时间吧

59:52.420 --> 59:54.260
DIV ADD Event Listener

59:54.260 --> 59:55.940
注册一个全世界N的时间

59:56.900 --> 01:00:00.260
当我们的过渡结束过后

01:00:00.260 --> 01:00:01.220
然后就可以消失了

01:00:02.740 --> 01:00:03.140
放心

01:00:03.780 --> 01:00:05.540
这个时间实际上只触发一次就够了

01:00:06.180 --> 01:00:07.940
我们怎么让它只触发一次

01:00:07.940 --> 01:00:09.300
你看全是基础

01:00:09.300 --> 01:00:10.260
基本功啊

01:00:10.260 --> 01:00:11.860
在基本功里不能丢啊

01:00:11.860 --> 01:00:12.900
第三个参数

01:00:12.900 --> 01:00:13.940
是不是可以写个1

01:00:14.500 --> 01:00:15.140
把他设为Q

01:00:15.620 --> 01:00:16.020
对吧

01:00:16.020 --> 01:00:17.540
那么这个时间只触发一次

01:00:18.740 --> 01:00:19.780
那么这个时间触发的时候

01:00:19.780 --> 01:00:20.740
DIV Remove

01:00:23.690 --> 01:00:24.010
好

01:00:24.010 --> 01:00:24.330
再来

01:00:25.530 --> 01:00:25.850
你看

01:00:25.850 --> 01:00:26.810
这个DIV是不是消失了

01:00:27.930 --> 01:00:28.330
出现

01:00:29.290 --> 01:00:29.690
消失

01:00:31.780 --> 01:00:32.180
对不对

01:00:33.220 --> 01:00:33.860
没问题吧

01:00:36.980 --> 01:00:37.140
好

01:00:37.140 --> 01:00:37.540
OK啊

01:00:40.420 --> 01:00:40.740
好

01:00:40.740 --> 01:00:42.900
那么目前的这个函数是不是做出来了

01:00:42.900 --> 01:00:44.020
有了这个函数过后

01:00:44.020 --> 01:00:45.700
将来我们要弹出消息

01:00:45.700 --> 01:00:47.300
是不是最简单了

01:00:47.300 --> 01:00:48.580
最简单弹出消息了

01:00:48.580 --> 01:00:50.340
比方说我们举个例子啊

01:00:50.340 --> 01:00:51.860
在我们的Home主见里边

01:00:52.660 --> 01:00:53.540
Home主见里边

01:00:53.540 --> 01:00:54.740
我们现在要弹出消息

01:00:55.300 --> 01:00:57.220
我们来写上这么一个样式吧

01:00:57.220 --> 01:00:58.500
这个Home Container

01:01:00.660 --> 01:01:01.220
Sculpt

01:01:03.400 --> 01:01:04.920
Home Container

01:01:06.280 --> 01:01:07.480
给它个背景颜色

01:01:07.480 --> 01:01:08.520
可以看得很清楚啊

01:01:10.360 --> 01:01:10.920
Nice Blue

01:01:16.300 --> 01:01:17.900
我们在媒体介石里面就去掉了

01:01:19.850 --> 01:01:20.810
这个按钮去掉了

01:01:20.810 --> 01:01:21.770
这都是测试的

01:01:22.410 --> 01:01:24.170
加解课了我就把这个主使删掉了

01:01:25.210 --> 01:01:26.250
在Home里边

01:01:26.250 --> 01:01:27.850
我们希望点击这个按钮的时候

01:01:27.850 --> 01:01:28.730
它就弹出来

01:01:28.730 --> 01:01:30.010
点击一个按钮它就弹出来

01:01:30.730 --> 01:01:31.450
原理是吧

01:01:31.450 --> 01:01:32.170
而且在哪里弹

01:01:32.170 --> 01:01:33.290
就在这个地方弹

01:01:33.290 --> 01:01:34.170
在Home里边弹

01:01:34.170 --> 01:01:35.850
我们把个Home主的这个东西再设置一下

01:01:35.850 --> 01:01:38.250
环度600个像素

01:01:38.250 --> 01:01:43.220
Border EPS Solid

01:01:43.220 --> 01:01:44.020
然后margin

01:01:44.900 --> 01:01:47.140
上下了为50个像素

01:01:47.140 --> 01:01:47.540
凹凸

01:01:48.980 --> 01:01:49.780
把放到这儿来

01:01:50.900 --> 01:01:52.020
高度再设置一下吧

01:01:52.020 --> 01:01:52.500
高度了

01:01:54.980 --> 01:01:55.620
布盖的像素

01:01:57.140 --> 01:01:58.660
OK 我希望在这个区域里面弹

01:02:00.180 --> 01:02:01.300
环度再设置一下

01:02:01.460 --> 01:02:02.020
300个像素

01:02:02.740 --> 01:02:03.860
我希望在这个区域里面弹

01:02:04.820 --> 01:02:05.780
点击过后

01:02:05.780 --> 01:02:06.500
那怎么弄呢

01:02:06.500 --> 01:02:06.980
你看啊

01:02:06.980 --> 01:02:08.100
我们是不是可以把导入进来

01:02:08.740 --> 01:02:09.620
Import

01:02:09.620 --> 01:02:11.300
导入Show Message

01:02:11.300 --> 01:02:11.700
其实呢

01:02:11.700 --> 01:02:12.820
我们像这个UTO

01:02:12.820 --> 01:02:13.860
还有一个小技巧

01:02:13.860 --> 01:02:14.740
这里边可能将来

01:02:14.740 --> 01:02:16.260
那个工具函数越来越多

01:02:16.260 --> 01:02:17.380
所以说我刚刚写一个

01:02:17.380 --> 01:02:18.660
Index的解释

01:02:18.660 --> 01:02:19.860
这个解释没有别的用处

01:02:19.860 --> 01:02:21.780
就把这些工具函数全部导出

01:02:22.420 --> 01:02:23.460
这么怎么写

01:02:23.460 --> 01:02:24.020
Export

01:02:25.460 --> 01:02:26.100
导出什么呢

01:02:26.100 --> 01:02:27.620
导出Show Message

01:02:28.580 --> 01:02:30.100
输了

01:02:30.100 --> 01:02:32.100
点Show Message

01:02:32.100 --> 01:02:32.740
对吧

01:02:35.300 --> 01:02:36.260
Export

01:02:36.260 --> 01:02:37.860
Default

01:02:37.860 --> 01:02:39.380
S

01:02:39.380 --> 01:02:41.220
能看懂吗

01:02:41.220 --> 01:02:41.860
能看懂吗

01:02:41.860 --> 01:02:42.500
兄弟们

01:02:44.660 --> 01:02:45.300
这个什么

01:02:45.300 --> 01:02:46.020
导入导出

01:02:46.020 --> 01:02:47.620
把这个把这个模块

01:02:47.620 --> 01:02:49.140
导入这个模块

01:02:49.140 --> 01:02:50.020
把这个模块的

01:02:50.020 --> 01:02:51.460
导入的东西的Default

01:02:51.460 --> 01:02:53.220
就是它默认导入的东西

01:02:53.220 --> 01:02:53.780
导出

01:02:53.780 --> 01:02:55.300
给它改个名字

01:02:55.300 --> 01:02:56.100
叫Show Message

01:02:57.780 --> 01:02:58.580
这个东西

01:02:58.580 --> 01:03:00.340
这一行单就相当于是

01:03:00.340 --> 01:03:02.980
你导入一个Show Message

01:03:04.180 --> 01:03:04.900
From

01:03:05.860 --> 01:03:07.940
Default Show Message

01:03:07.940 --> 01:03:09.460
然后再Export

01:03:09.460 --> 01:03:10.420
Show Message

01:03:10.420 --> 01:03:11.780
相当于是两句话的组合

01:03:14.260 --> 01:03:15.460
然后再Export

01:03:16.180 --> 01:03:17.540
另外一个也是一样

01:03:17.540 --> 01:03:18.740
FromDefault

01:03:18.740 --> 01:03:19.380
Components

01:03:19.380 --> 01:03:19.860
Ruston

01:03:20.580 --> 01:03:21.540
那么就把Default

01:03:21.540 --> 01:03:22.980
它默认导入了

01:03:22.980 --> 01:03:23.460
改为

01:03:24.260 --> 01:03:24.980
这东西导出

01:03:25.620 --> 01:03:26.900
这样子的好处在什么地方

01:03:27.140 --> 01:03:27.780
好处在于

01:03:27.780 --> 01:03:28.820
我们就可以

01:03:28.820 --> 01:03:30.100
再用Utl里边的

01:03:30.100 --> 01:03:31.380
Utl的时候

01:03:31.380 --> 01:03:32.500
我就直接说

01:03:34.260 --> 01:03:35.220
就写一个Utl

01:03:37.220 --> 01:03:38.420
那么直接得到

01:03:38.420 --> 01:03:39.300
Show Message

01:03:39.300 --> 01:03:39.940
是不是

01:03:39.940 --> 01:03:40.900
通过这个函数

01:03:40.900 --> 01:03:41.940
当我们点击的时候

01:03:41.940 --> 01:03:42.900
我就调用这个函数

01:03:42.900 --> 01:03:44.500
就可以生成东西了

01:03:45.860 --> 01:03:46.660
Show Message

01:03:47.300 --> 01:03:48.180
内容就是

01:03:49.060 --> 01:03:49.700
注册成功

01:03:49.700 --> 01:03:50.420
比方说

01:03:50.420 --> 01:03:51.860
水面或者是评论成功

01:03:54.540 --> 01:03:55.420
内想是个Says

01:03:57.020 --> 01:03:58.140
时间就两秒钟

01:03:59.020 --> 01:04:00.060
这些都有摸凳子

01:04:03.660 --> 01:04:05.020
我没点解释好像又改了

01:04:05.020 --> 01:04:05.660
又不行了吗

01:04:07.100 --> 01:04:07.580
怎么来

01:04:11.400 --> 01:04:12.360
找不到Utl

01:04:12.360 --> 01:04:13.240
Utl是

01:04:13.240 --> 01:04:13.960
像S

01:04:15.910 --> 01:04:16.310
好

01:04:16.310 --> 01:04:16.710
点击

01:04:17.910 --> 01:04:19.990
目前是在屏幕正中坦出的

01:04:19.990 --> 01:04:21.590
目前是在屏幕正中坦出的

01:04:22.870 --> 01:04:23.830
我们希望的是

01:04:23.830 --> 01:04:25.430
在某这个区域里边坦出

01:04:25.430 --> 01:04:25.670
所以说

01:04:25.670 --> 01:04:26.630
我要把这个区域的

01:04:26.630 --> 01:04:27.830
动物元素是不是给它

01:04:27.830 --> 01:04:28.470
给它容器

01:04:29.110 --> 01:04:29.590
那么是不是

01:04:29.590 --> 01:04:30.310
这些可以学到东西

01:04:30.310 --> 01:04:31.190
又可以用到了

01:04:31.190 --> 01:04:31.670
我怎么来

01:04:31.670 --> 01:04:32.630
获取这个区域的

01:04:32.630 --> 01:04:33.190
动物元素呢

01:04:33.190 --> 01:04:34.470
你看这就是没办法

01:04:34.470 --> 01:04:35.590
这就是属于没办法

01:04:36.470 --> 01:04:37.270
我是不是得吧

01:04:37.270 --> 01:04:38.310
用个Ref

01:04:38.310 --> 01:04:39.030
拿到这个什么

01:04:39.030 --> 01:04:39.670
Containment吧

01:04:39.670 --> 01:04:41.270
随便给它一个Ref

01:04:42.630 --> 01:04:43.430
这个不是ID

01:04:43.430 --> 01:04:44.950
你不用去考虑什么重复不重复

01:04:44.950 --> 01:04:45.510
这不是ID

01:04:46.070 --> 01:04:46.790
这是个引用

01:04:48.790 --> 01:04:49.590
那么容器是不是

01:04:49.590 --> 01:04:51.830
传ZRef里边的什么

01:04:51.830 --> 01:04:52.470
Containment

01:04:52.470 --> 01:04:53.670
是把这个动物元素给它

01:04:53.670 --> 01:04:55.430
那么它就在这个区域里边坦出了

01:04:55.430 --> 01:04:55.990
保存

01:04:57.110 --> 01:04:57.430
点击

01:04:58.310 --> 01:04:58.630
刷新

01:04:59.110 --> 01:04:59.510
点击

01:05:00.390 --> 01:05:01.350
所以在这里被坦出了

01:05:02.150 --> 01:05:02.790
这里被坦出了

01:05:03.510 --> 01:05:04.710
为什么变成这个样子呢

01:05:04.710 --> 01:05:05.750
因为这个宽度不够

01:05:08.470 --> 01:05:09.030
我这样吧

01:05:10.390 --> 01:05:14.280
这样你们看得很清楚

01:05:14.280 --> 01:05:15.000
怎么回事呢

01:05:15.000 --> 01:05:16.440
是因为这个DIV

01:05:16.440 --> 01:05:17.480
它有一个全是缝

01:05:17.480 --> 01:05:18.680
如果说不全是缝的话

01:05:19.800 --> 01:05:20.920
没有全是缝的话

01:05:20.920 --> 01:05:21.320
看一下

01:05:22.200 --> 01:05:23.080
没有全是缝的话

01:05:25.160 --> 01:05:25.640
全是缝

01:05:26.280 --> 01:05:27.480
它是这个样子

01:05:27.480 --> 01:05:28.120
因为它是

01:05:29.080 --> 01:05:31.320
这个玩意它就导致它的宽度被挤一样

01:05:31.960 --> 01:05:32.520
原来的意思吧

01:05:32.520 --> 01:05:33.640
它的宽度被挤一样

01:05:33.640 --> 01:05:34.760
那这个问题怎么解决呢

01:05:34.760 --> 01:05:36.280
你可以给它加上一个Wise Space

01:05:37.000 --> 01:05:37.480
No Wap

01:05:39.320 --> 01:05:40.440
加上一个No Wap

01:05:40.440 --> 01:05:41.560
那么加上一个No Wap

01:05:41.560 --> 01:05:42.440
我们就在这边

01:05:44.970 --> 01:05:45.690
样式这里

01:05:45.690 --> 01:05:46.330
再加上一个

01:05:50.070 --> 01:05:51.350
全是缝

01:05:52.390 --> 01:05:53.110
不

01:05:53.110 --> 01:05:54.070
Wise Space

01:05:54.070 --> 01:05:54.790
No Wap

01:05:54.790 --> 01:05:55.350
所以说呢

01:05:55.350 --> 01:05:56.070
这个居中啊

01:05:57.670 --> 01:05:59.110
最好的方式就是弹性盒

01:05:59.110 --> 01:06:00.790
给附荣器设置弹性盒

01:06:00.790 --> 01:06:01.270
但是呢

01:06:01.270 --> 01:06:02.390
给附荣器设置弹性盒

01:06:02.390 --> 01:06:03.430
有个不好的地方在于

01:06:03.430 --> 01:06:04.550
它会影响其他元素

01:06:05.510 --> 01:06:06.870
这里的我不希望

01:06:06.870 --> 01:06:07.590
因为这个东西

01:06:07.590 --> 01:06:08.550
影响到其他元素

01:06:08.550 --> 01:06:09.190
所以说没办法

01:06:10.070 --> 01:06:10.470
OK

01:06:10.470 --> 01:06:11.270
就用这种方式

01:06:12.550 --> 01:06:13.030
放心

01:06:16.700 --> 01:06:17.500
就两秒钟吧

01:06:23.430 --> 01:06:24.390
说得很舒服了

01:06:24.390 --> 01:06:25.350
那还没完啊

01:06:25.350 --> 01:06:26.470
最后一点点啊

01:06:26.470 --> 01:06:27.350
不着急

01:06:27.350 --> 01:06:28.230
还有一件事就是

01:06:28.230 --> 01:06:29.750
我希望呢

01:06:29.750 --> 01:06:31.590
弹出了消息过后啊

01:06:31.590 --> 01:06:32.710
弹出了消息过后

01:06:34.390 --> 01:06:35.590
消息就是

01:06:35.590 --> 01:06:36.710
就是两秒钟过后

01:06:37.590 --> 01:06:39.270
消息消失了

01:06:39.270 --> 01:06:39.990
消失过后呢

01:06:39.990 --> 01:06:41.750
有个毁掉函数要运行

01:06:42.550 --> 01:06:43.510
你看这个参数

01:06:43.510 --> 01:06:44.390
是不是传得越来越多

01:06:44.390 --> 01:06:45.190
越来越多

01:06:45.190 --> 01:06:45.510
好

01:06:45.510 --> 01:06:46.790
那么这里稍微改造一下吧

01:06:46.790 --> 01:06:47.830
我之前没打算改造的

01:06:48.070 --> 01:06:49.350
那还是改造一下吧

01:06:49.350 --> 01:06:49.990
我这里呢

01:06:49.990 --> 01:06:50.950
干脆把这个东西呢

01:06:50.950 --> 01:06:51.910
OB形式

01:06:51.910 --> 01:06:53.430
写成对相得了

01:06:54.150 --> 01:06:54.870
好吧

01:06:54.870 --> 01:06:55.590
把它写成对相

01:06:56.630 --> 01:06:57.270
那么这里呢

01:06:57.270 --> 01:06:58.550
我们就写上一个OB形式

01:07:00.310 --> 01:07:01.190
OB形式

01:07:01.190 --> 01:07:01.830
写成对相

01:07:01.830 --> 01:07:02.790
默认为空对相

01:07:06.020 --> 01:07:06.420
来吧

01:07:07.460 --> 01:07:08.420
OB形式里边呢

01:07:08.420 --> 01:07:09.700
我们去分别得到

01:07:09.700 --> 01:07:10.420
什么content啊

01:07:10.420 --> 01:07:11.220
这些东西啊

01:07:11.220 --> 01:07:11.780
content

01:07:12.740 --> 01:07:13.300
content

01:07:14.260 --> 01:07:15.460
来自于OB形式

01:07:16.100 --> 01:07:17.300
叫content

01:07:17.300 --> 01:07:18.260
如果说没有的话

01:07:18.260 --> 01:07:19.300
那就是空之不错

01:07:22.300 --> 01:07:22.700
Type

01:07:22.700 --> 01:07:23.740
消息内行

01:07:23.740 --> 01:07:24.780
来自于OB形式

01:07:26.620 --> 01:07:26.940
Type

01:07:29.190 --> 01:07:29.750
没有的话

01:07:29.750 --> 01:07:31.110
我就给它设置为info

01:07:32.790 --> 01:07:33.030
好

01:07:33.030 --> 01:07:33.510
然后呢

01:07:33.510 --> 01:07:34.630
是duration

01:07:34.630 --> 01:07:36.070
多久后消失

01:07:36.070 --> 01:07:36.710
OB形式

01:07:36.710 --> 01:07:37.670
来自于duration

01:07:38.310 --> 01:07:38.950
那没有的话

01:07:38.950 --> 01:07:39.990
我就给它设置2000

01:07:42.090 --> 01:07:42.250
好

01:07:42.250 --> 01:07:43.290
然后是content

01:07:43.290 --> 01:07:44.570
content下面有处理啊

01:07:47.770 --> 01:07:48.730
content

01:07:48.730 --> 01:07:49.610
直接写了吧

01:07:49.610 --> 01:07:50.250
OB形式

01:07:50.810 --> 01:07:51.690
content

01:07:51.690 --> 01:07:52.570
如果说

01:07:52.570 --> 01:07:53.210
没有的话

01:07:53.290 --> 01:07:54.330
它没有给我传content了

01:07:54.330 --> 01:07:56.010
那么content就是document

01:07:56.890 --> 01:07:58.810
那么下面就不用去判断了

01:07:59.290 --> 01:08:00.010
不用去判断了

01:08:00.010 --> 01:08:01.450
我就直接在这里来了

01:08:05.540 --> 01:08:05.940
下面

01:08:06.580 --> 01:08:06.820
好

01:08:06.820 --> 01:08:07.780
然后还有个回调

01:08:07.780 --> 01:08:09.060
还可以给我传一个回调

01:08:09.060 --> 01:08:10.340
就当我消失的时候

01:08:11.060 --> 01:08:11.700
我这里呢

01:08:11.700 --> 01:08:13.140
要运行回调函数

01:08:13.140 --> 01:08:14.660
运行回调函数

01:08:15.220 --> 01:08:15.860
判断一下

01:08:15.860 --> 01:08:16.660
如果说

01:08:16.660 --> 01:08:18.100
它给我传的回调函数

01:08:18.100 --> 01:08:18.900
OB形式

01:08:18.900 --> 01:08:19.780
有这个callback

01:08:21.140 --> 01:08:22.340
有回调函数

01:08:22.340 --> 01:08:23.780
那么我就运行回调函数

01:08:26.890 --> 01:08:27.930
如果说有回调函数

01:08:27.930 --> 01:08:29.050
我就运行回调函数

01:08:32.070 --> 01:08:32.710
好了

01:08:32.710 --> 01:08:34.470
那么现在我们这边来看一下

01:08:34.470 --> 01:08:35.910
传递的时候就不是这样传递了

01:08:35.910 --> 01:08:37.350
传递的时候就方便多了

01:08:38.070 --> 01:08:40.390
传递的时候是什么content

01:08:40.390 --> 01:08:41.510
内容是什么呢

01:08:41.510 --> 01:08:42.150
评论成功

01:08:43.110 --> 01:08:44.230
其他都默认

01:08:44.230 --> 01:08:45.990
还有内容为sys

01:08:47.430 --> 01:08:48.070
容器

01:08:48.070 --> 01:08:52.390
容器为zriff的content

01:08:54.150 --> 01:08:55.590
用这种模式来传递的

01:08:55.590 --> 01:08:56.310
效果是一样的

01:08:59.210 --> 01:09:00.090
效果是一样的

01:09:00.090 --> 01:09:00.970
你不传这个type

01:09:00.970 --> 01:09:01.770
它就有默认值

01:09:02.490 --> 01:09:04.490
那么这里可以传回调

01:09:04.490 --> 01:09:05.290
callback

01:09:05.290 --> 01:09:08.150
就是消失过后

01:09:09.750 --> 01:09:11.930
完成

01:09:11.930 --> 01:09:12.970
我们输出一个

01:09:12.970 --> 01:09:15.530
将来如果说它这个提示完成过后

01:09:15.530 --> 01:09:16.810
我们可能会挑战一面

01:09:16.810 --> 01:09:18.250
如果说有这样的事情

01:09:18.250 --> 01:09:19.370
我们可以去做一些事

01:09:19.370 --> 01:09:20.010
callback

01:09:20.010 --> 01:09:20.970
没调用

01:09:22.170 --> 01:09:28.500
那么我们就做出来

01:09:28.500 --> 01:09:34.100
这么一个函数了对吧

01:09:34.660 --> 01:09:35.140
好

01:09:35.140 --> 01:09:36.740
但是最后还是有一点不完美

01:09:36.740 --> 01:09:37.620
不完美的地方

01:09:37.620 --> 01:09:39.540
在于我们每次都倒入一下去使用

01:09:39.540 --> 01:09:40.740
我们的组建里面

01:09:40.740 --> 01:09:41.940
可能到处会出现

01:09:41.940 --> 01:09:43.460
我们的组建里面

01:09:43.620 --> 01:09:45.860
可能到处会用到修message

01:09:45.860 --> 01:09:46.740
可能都会用到

01:09:47.620 --> 01:09:48.820
那怎么办呢

01:09:48.820 --> 01:09:50.340
以为有更好的方式来

01:09:50.340 --> 01:09:52.180
方便我们去使用这个修message呢

01:09:53.060 --> 01:09:54.180
还有更好的方式

01:09:54.180 --> 01:09:54.980
看着

01:09:54.980 --> 01:09:56.420
我在Media.js里面

01:09:56.420 --> 01:09:57.300
把它导入进来

01:10:03.140 --> 01:10:04.500
在这里把它导入进来

01:10:04.500 --> 01:10:06.020
然后接下来我做这么一件事

01:10:06.020 --> 01:10:07.300
vue prototype

01:10:08.340 --> 01:10:09.460
修message

01:10:12.250 --> 01:10:13.130
是不是就可以把它加到

01:10:13.130 --> 01:10:13.930
vue实力里面去

01:10:13.930 --> 01:10:15.610
注入到vue实力里面去了

01:10:15.610 --> 01:10:16.570
所有的vue实力

01:10:16.570 --> 01:10:17.370
包括组建实力

01:10:17.370 --> 01:10:18.250
都可以用这个函数了

01:10:18.730 --> 01:10:19.850
因此到组建里面

01:10:19.850 --> 01:10:21.370
就特别特别方便了

01:10:21.370 --> 01:10:22.250
我这句话都不要了

01:10:23.850 --> 01:10:24.730
这里怎么写

01:10:24.730 --> 01:10:26.330
z修message

01:10:27.290 --> 01:10:29.210
你要谈的地方就是z点

01:10:29.210 --> 01:10:30.170
多了修message

01:10:31.050 --> 01:10:31.770
就可以谈出了

01:10:32.730 --> 01:10:32.970
好

01:10:33.850 --> 01:10:35.370
好 小心

01:10:37.210 --> 01:10:38.170
你看是不是很舒服

01:10:39.290 --> 01:10:40.490
OK 这一刻我们就做出了

01:10:40.490 --> 01:10:41.210
这么一个玩意儿

01:10:41.770 --> 01:10:42.730
这种玩意儿里边

01:10:43.210 --> 01:10:45.530
用到了很多很多的基础知识

01:10:45.530 --> 01:10:46.730
全是基础知识

01:10:46.730 --> 01:10:47.930
很多地方跟vue本质

01:10:47.930 --> 01:10:49.610
没有本质的关系

01:10:50.250 --> 01:10:51.930
跟vue有关系的地方都比较简单

01:10:54.200 --> 01:10:56.120
所以说传统手艺不能丢

01:10:56.920 --> 01:10:58.360
OK 那么这就是这一刻的内容

01:10:58.920 --> 01:11:00.200
这一刻好好去消化一下

01:11:00.200 --> 01:11:01.880
把这个东西写出来

