WEBVTT

00:00.820 --> 00:04.920
这节课咱们把博客的详情页就开始来弄了

00:04.920 --> 00:07.480
这个页面是有一些难度的

00:07.480 --> 00:12.080
这个页面一旦完成 整个项目也就八九不离十了

00:12.080 --> 00:13.360
来吧

00:13.360 --> 00:16.180
详情页的这一课做简单一点

00:16.180 --> 00:19.260
这一课我们把它弄成就把它个API搞定

00:19.260 --> 00:22.320
API 魔力数据 以及路由这些东西

00:22.320 --> 00:23.860
这些比较简单的地方搞定

00:23.860 --> 00:26.420
下一课我们再来去做组建

00:26.420 --> 00:28.460
好 来吧

00:29.460 --> 00:33.320
详情页 我们首先来写这个API

00:33.320 --> 00:35.620
不用进文件了 在这

00:35.620 --> 00:38.700
获取博客分类 我们来看一下我们的

00:38.700 --> 00:43.560
接口文档 接口文档是公司里边上级部门会给你提供的

00:43.560 --> 00:49.460
详情页 也就是三个API嘛 一个是获取单个博客

00:49.460 --> 00:50.980
一个是提交评论

00:50.980 --> 00:55.340
一个是分页获取评论 因为每一篇文章它是有一些评论的

00:55.900 --> 00:58.940
好 来吧 我们来写这么三个函数

01:00.940 --> 01:04.220
彻底可没什么技术含量 你们可以自己弄都可以

01:04.220 --> 01:08.030
获取单个博客

01:08.030 --> 01:12.510
你看 路径就是这个接口文档要会看

01:12.510 --> 01:15.070
路径里边它有一个地方就是博客ID

01:15.070 --> 01:20.590
那么这种写法就是跟view rotor的路由是不是写法差不多

01:20.590 --> 01:24.070
对不对 其实这种是一种比较普遍的写法

01:24.070 --> 01:25.590
就这一部分是动态的

01:25.670 --> 01:28.310
好 那么我们要写个帮法名字

01:28.310 --> 01:33.070
gate blog 没有s吧 之前是不是有个s

01:33.070 --> 01:35.910
获取多篇博客 那么现在获取单个博客

01:35.910 --> 01:38.630
你给我一个啥呀 给我一个博客ID

01:38.630 --> 01:42.390
对吧 一般来说通过获取单个数据呢

01:42.390 --> 01:44.110
一般来说通过组件

01:44.110 --> 01:45.870
不是组件 可能听不懂

01:45.870 --> 01:49.190
就是通过那个编号 唯一编号去获取

01:49.190 --> 01:51.590
给我传个ID

01:51.590 --> 01:53.470
然后就请求这个地址完事了

01:53.470 --> 01:55.070
好 来吧 来请求呗

01:55.110 --> 01:58.230
request get

01:58.230 --> 01:59.230
请求什么地址呢

01:59.230 --> 02:01.670
请求api blog

02:01.670 --> 02:02.830
后边要写上博客ID

02:02.830 --> 02:04.390
那么这里我们拼接一下

02:04.390 --> 02:06.470
拼接这个ID

02:06.470 --> 02:09.230
那么这是远程用阿迪克斯请求来获取博客

02:09.230 --> 02:11.590
维特就完事了

02:11.590 --> 02:15.350
好 这是这个api 再来 下一个

02:15.350 --> 02:17.190
下一个是提交评论

02:17.190 --> 02:18.790
这是一个post请求

02:18.790 --> 02:22.910
好 来吧 提交评论就是

02:22.950 --> 02:25.150
add comment

02:25.150 --> 02:26.630
或者是post comment

02:26.630 --> 02:28.630
提交评论吧

02:28.630 --> 02:31.230
打个说事

02:31.230 --> 02:33.030
提交评论

02:33.030 --> 02:34.830
提交评论的时候你传的不是ID

02:34.830 --> 02:37.110
你传的是一个评论对象

02:37.110 --> 02:38.790
你看 告诉你 body里边

02:38.790 --> 02:41.790
请求体里边要传递一个评论对象

02:41.790 --> 02:42.310
搞清楚了

02:42.310 --> 02:44.710
现在我们跟没有没有什么关系

02:44.710 --> 02:48.990
这是comment info

02:48.990 --> 02:49.910
评论信息

02:49.910 --> 02:52.630
一个对象给我传进来

02:52.630 --> 02:54.870
这是

02:54.870 --> 02:55.590
然后我们现在呢

02:55.590 --> 02:58.030
我们去请求post请求

02:58.030 --> 02:59.070
请求怎么地址呢

02:59.070 --> 03:04.040
这地址就是请求这个地址

03:04.040 --> 03:06.160
请求体里边的数据呢

03:06.160 --> 03:06.640
数据呢

03:06.640 --> 03:07.640
我们就作为第二个产数

03:07.640 --> 03:09.520
跟那个接chrism差不多的

03:09.520 --> 03:11.280
第二个产数作为请求数据

03:11.280 --> 03:11.720
数据呢

03:11.720 --> 03:14.240
就是我们的comment info

03:14.240 --> 03:16.000
就完了 还有啥呀

03:16.000 --> 03:17.600
这是提交评论

03:17.600 --> 03:18.360
提交评论的时候

03:18.360 --> 03:21.440
他告诉你这里要传三个数据

03:21.440 --> 03:23.520
就是你的里程

03:23.560 --> 03:25.000
因为我们这里的提交评论

03:25.000 --> 03:26.960
是任何用户都可以提交的

03:26.960 --> 03:27.960
他不需要登录

03:27.960 --> 03:29.320
我们做的比较简单

03:29.320 --> 03:30.360
他不需要登录的话

03:30.360 --> 03:31.400
他需要填一个里程

03:31.400 --> 03:33.080
到底你是谁对吧

03:33.080 --> 03:34.160
评论内容

03:34.160 --> 03:35.160
一个纯文本

03:35.160 --> 03:35.520
然后呢

03:35.520 --> 03:38.080
博客ID你评论的是哪一篇博客

03:38.080 --> 03:39.840
就完事了

03:39.840 --> 03:40.120
好

03:40.120 --> 03:40.840
那么这里呢

03:40.840 --> 03:44.080
就提交评论了啊

03:44.080 --> 03:45.400
这是提交评论

03:45.400 --> 03:46.240
当然呢

03:46.240 --> 03:47.760
还有一个函数

03:47.760 --> 03:50.280
还有一个接口

03:50.280 --> 03:53.000
是分页获取评论

03:53.080 --> 03:54.240
就获取所有人的评论

03:54.240 --> 03:57.600
针对某一篇博客的所有评论

03:57.600 --> 03:58.920
好 来吧

03:58.920 --> 04:00.400
我们这里呢

04:00.400 --> 04:02.000
get comment

04:02.000 --> 04:03.120
写了这么一个方法

04:03.120 --> 04:04.800
那么要传什么参数呢

04:04.800 --> 04:07.240
你要告诉我是第几页吧

04:07.240 --> 04:08.200
每页想做到条吧

04:08.200 --> 04:09.280
因为是分页获取

04:09.280 --> 04:11.400
评论的数量也有可能很多

04:11.400 --> 04:12.360
还有就是查询制度算

04:12.360 --> 04:13.000
查询制度算了

04:13.000 --> 04:14.240
我们这里用不到

04:14.240 --> 04:16.120
因为我们在界面上不需要查询

04:16.120 --> 04:17.240
还有就是博客ID

04:17.240 --> 04:18.480
如果说我一富一的话

04:18.480 --> 04:20.160
那么就是

04:20.160 --> 04:21.560
我要获取的评论不许

04:21.600 --> 04:22.760
可以

04:22.760 --> 04:24.400
无视任何文章

04:24.400 --> 04:25.440
比较多有10篇文章

04:25.440 --> 04:27.680
每篇文章有20条评论

04:27.680 --> 04:28.440
那么我就

04:28.440 --> 04:29.880
如果说传富一的话

04:29.880 --> 04:31.080
最终我们就获取的是

04:31.080 --> 04:33.720
在这200条评论里面就获取

04:33.720 --> 04:34.560
这么个意思

04:34.560 --> 04:35.680
如果说你不是富一的话

04:35.680 --> 04:39.160
那就得到了是某一篇文章的评论

04:39.160 --> 04:39.880
对不对

04:39.880 --> 04:41.400
那么我们这里的自然的

04:41.400 --> 04:43.200
给我PageInlimit

04:43.200 --> 04:44.280
给我一个BlogID

04:44.280 --> 04:45.600
因为我们这个系统里面

04:45.600 --> 04:48.680
是不涉及到说

04:48.680 --> 04:50.520
不涉及说

04:50.560 --> 04:51.960
你要获取所有评论的

04:51.960 --> 04:53.040
所有文章的评论的

04:53.040 --> 04:55.000
你只能获取当篇文章的评论

04:55.000 --> 04:56.240
所以这个富一对我们来说

04:56.240 --> 04:57.640
也没有什么意义

04:57.640 --> 04:59.320
将来我们做开发后台系统的时候

04:59.320 --> 05:00.880
可能会有一些意义

05:00.880 --> 05:03.360
那么给我们传辑这些参数

05:03.360 --> 05:04.840
给他一个默认值

05:04.840 --> 05:05.760
1

05:06.960 --> 05:08.040
10

05:08.040 --> 05:09.240
BlogID呢

05:09.240 --> 05:10.240
BlogID算了吧

05:10.240 --> 05:13.520
BlogID是必须向前面

05:13.520 --> 05:14.840
BlogID

05:14.840 --> 05:15.240
好了

05:15.240 --> 05:17.960
那么我们这里拒请求

05:17.960 --> 05:19.080
Request

05:19.080 --> 05:20.160
Get请求

05:20.200 --> 05:23.480
请求这个地址

05:23.480 --> 05:25.680
传递一些参数

05:25.680 --> 05:26.440
Pirates

05:26.440 --> 05:29.040
这里的Pirates就不是动态

05:29.040 --> 05:30.920
给这个56Rotor区分开

05:30.920 --> 05:33.680
这里的Pirates指的是地址南里边

05:35.680 --> 05:39.000
指的是地址南里边

05:39.000 --> 05:40.320
问号后边的东西

05:40.320 --> 05:41.480
这是Pirates

05:42.480 --> 05:46.320
那么这里能给他传递一个BlogID

05:46.320 --> 05:48.840
给他传递一个Page

05:48.840 --> 05:49.680
Page

05:49.680 --> 05:51.880
给他传递一个Limit

05:51.920 --> 05:54.040
好了就写了这么三个方法

05:54.040 --> 05:55.160
有了这三个方法之后

05:55.160 --> 05:58.160
我们在Made.js里面去测试一下

05:58.160 --> 05:58.680
一个一个来

06:00.760 --> 06:02.800
随便测试一下接口

06:04.320 --> 06:08.360
导入BlogAPI

06:10.120 --> 06:11.400
APIBlog

06:13.720 --> 06:14.520
首先看一下这个

06:16.400 --> 06:18.960
GetBlog得到单篇博客

06:18.960 --> 06:19.760
你给我一个ID

06:19.760 --> 06:20.720
那ID我随便传吧

06:20.720 --> 06:21.680
反正是测试嘛

06:21.880 --> 06:22.200
对不对

06:22.200 --> 06:23.440
现在服务器都没有

06:23.440 --> 06:24.240
测试服务器都没有

06:24.240 --> 06:24.960
都没做好

06:24.960 --> 06:27.160
那么我们一会儿还不得用测试数据

06:28.640 --> 06:29.720
得到响应结果

06:29.720 --> 06:31.120
输出响应结果

06:31.120 --> 06:32.520
那么现在我们在

06:33.240 --> 06:34.680
需要给他写个我们魔力数据

06:34.680 --> 06:36.400
因为他并不服务器并没有

06:36.400 --> 06:36.680
对吧

06:36.680 --> 06:38.160
然后给他写个魔力数据

06:38.160 --> 06:40.000
魔力数据我们到这边来

06:40.000 --> 06:42.800
之前我们魔力了两个数据了

06:42.800 --> 06:44.520
现在我们继续魔力

06:44.520 --> 06:45.960
当我们请求什么地址的时候

06:45.960 --> 06:47.640
我们要去南间了

06:47.640 --> 06:50.320
当我们请求这样地址的时候

06:50.320 --> 06:51.760
APIBlog一个写纲

06:51.760 --> 06:53.160
后边跟了一个ID

06:53.160 --> 06:53.520
对不对

06:53.520 --> 06:55.040
那么我们这个写合证的表达是了

06:56.040 --> 06:56.680
开始

06:56.680 --> 06:58.720
然后以API开头

06:58.720 --> 07:00.480
然后Blog

07:00.480 --> 07:04.590
这里要转移啊

07:04.590 --> 07:06.910
然后Blog后边还有东西

07:06.910 --> 07:08.110
有什么东西呢

07:08.110 --> 07:09.750
只要不是写纲就行了

07:09.750 --> 07:10.990
就后边你写的是ID

07:10.990 --> 07:11.150
对吧

07:11.150 --> 07:12.070
ID是啥的

07:12.070 --> 07:12.710
随便

07:12.710 --> 07:13.950
但是只要不是写纲

07:13.950 --> 07:14.750
那就可以了

07:14.750 --> 07:17.470
所以说我们这里写个这个符号

07:18.790 --> 07:20.310
只要你不是写纲

07:20.310 --> 07:21.750
你啥都行

07:21.750 --> 07:22.670
非写纲的数据

07:23.830 --> 07:24.510
知道吧

07:24.510 --> 07:26.670
那么这里出现一次多次

07:26.670 --> 07:28.110
最后就结束

07:28.110 --> 07:28.310
好

07:28.310 --> 07:30.470
那么我们来测试一下这个证的表达是了

07:30.470 --> 07:31.710
写证的表是最好测试一下

07:31.710 --> 07:33.390
免得写错了

07:33.390 --> 07:36.430
看一下这个APIBlog能匹配吗

07:36.430 --> 07:38.510
好像是不能匹配的啊

07:38.510 --> 07:39.550
不能匹配啊

07:39.550 --> 07:40.870
然后我们这里写个这个

07:40.870 --> 07:41.870
是不是可以匹配了啊

07:41.870 --> 07:42.190
对吧

07:42.190 --> 07:43.190
写这个还不能匹配

07:43.190 --> 07:44.350
写这个可以匹配了

07:44.350 --> 07:45.270
那如果再写个写纲了

07:45.270 --> 07:46.510
又不能匹配了

07:46.510 --> 07:47.950
就这么个意思

07:47.950 --> 07:48.110
好

07:48.110 --> 07:50.190
那么请匹配这样的地址

07:50.190 --> 07:53.660
这样把关了

07:53.700 --> 07:54.620
盖着琴球

07:55.780 --> 07:57.620
后面让我们直接给他一个对象吧

07:57.620 --> 07:58.860
一个对象一个模板

07:58.860 --> 08:00.140
然后来模拟数据

08:00.140 --> 08:01.740
单篇博客的数据呢

08:01.740 --> 08:02.620
我们这里

08:02.620 --> 08:04.620
大家可以自己去写一些测试数据啊

08:04.620 --> 08:06.380
我这里已经拿着自己写了

08:06.380 --> 08:07.820
这里有一个测试数据

08:07.820 --> 08:09.460
单个博客的测试数据

08:09.460 --> 08:09.660
好

08:09.660 --> 08:10.380
扔过来

08:10.380 --> 08:12.060
这个数据的道理写什么格式呢

08:12.060 --> 08:13.540
有哪些属性写什么格式呢

08:13.540 --> 08:15.140
要按照的接口文档来

08:15.140 --> 08:17.420
要跟接口文档的格式一模一样

08:17.420 --> 08:18.100
你看这个格式

08:18.100 --> 08:19.940
告诉你有博客的ID

08:19.940 --> 08:20.780
博客的标题

08:20.780 --> 08:21.620
博客的分类

08:21.620 --> 08:22.620
博客的流量次数

08:22.660 --> 08:23.340
评论次数

08:23.340 --> 08:24.020
博客的描述

08:24.020 --> 08:24.980
创建日期

08:24.980 --> 08:25.820
博客的目录

08:25.820 --> 08:26.820
这个博客的目录

08:26.820 --> 08:27.820
是一个数组

08:27.820 --> 08:30.060
看来是个数组表示

08:30.060 --> 08:31.260
章节目录

08:31.260 --> 08:32.740
目录的第一个目录

08:32.740 --> 08:34.060
章节1

08:34.060 --> 08:35.300
anchor什么意思呢

08:35.300 --> 08:36.540
就表示因为每个章节

08:36.540 --> 08:38.140
它是一个H元数

08:38.140 --> 08:39.580
它会生成一个H元数

08:39.580 --> 08:40.820
比方H1

08:40.820 --> 08:41.420
H2

08:41.420 --> 08:42.140
H3

08:42.140 --> 08:44.300
会生成一些标题元数

08:44.300 --> 08:45.100
那么标题元数

08:45.100 --> 08:46.740
这个 anchor表示的是

08:46.740 --> 08:48.740
它的某点链接的ID

08:48.740 --> 08:49.300
啥意思呢

08:49.300 --> 08:51.540
你比方你看这里啊

08:51.580 --> 08:53.500
下面是博客内容

08:53.500 --> 08:54.460
atm content

08:54.460 --> 08:56.380
表示博客的atm内容

08:56.380 --> 08:59.100
上面是博客的缩列图地址

08:59.100 --> 09:00.060
这些都是以前都有的

09:00.060 --> 09:00.820
对吧

09:00.820 --> 09:03.060
看一下吧

09:03.060 --> 09:03.980
这是博客内容

09:03.980 --> 09:06.820
我们往上翻一翻

09:06.820 --> 09:08.980
sump

09:08.980 --> 09:11.140
这个缩列图好像没写

09:11.140 --> 09:13.060
缩列图好像没写

09:13.060 --> 09:13.580
缩列图没写

09:13.580 --> 09:15.180
把它写上得了

09:15.180 --> 09:16.260
sump

09:16.260 --> 09:17.300
缩列图

09:17.300 --> 09:18.620
跟之前一样的

09:18.620 --> 09:19.220
缩列图

09:19.220 --> 09:20.100
我们在博客详细

09:20.180 --> 09:21.260
也好像也用不到

09:23.660 --> 09:24.260
OK

09:24.260 --> 09:25.380
就把它弄上吧

09:26.660 --> 09:27.460
跟那个

09:28.460 --> 09:30.660
请求的规格一模一样

09:31.380 --> 09:32.580
如果说你请求这样的地址

09:32.580 --> 09:33.820
我就给你磨了一个数据

09:34.580 --> 09:35.300
博客的ID

09:35.300 --> 09:36.820
现在我就随便下写了一个

09:36.820 --> 09:37.940
随便下写了一个ID

09:38.540 --> 09:40.060
或者是用GUDID也行

09:40.060 --> 09:41.460
随便随机生成一个

09:42.180 --> 09:42.820
下写一个

09:43.900 --> 09:45.740
然后后边是博客的标题

09:45.740 --> 09:46.620
博客的分类

09:46.620 --> 09:48.060
分类我就随机的生产

09:48.340 --> 09:49.020
分类的ID

09:49.020 --> 09:50.500
分类的名字

09:50.500 --> 09:51.860
随机产生一个

09:51.860 --> 09:53.180
然后博客的描述

09:53.180 --> 09:54.060
随机产生

09:54.060 --> 09:55.740
博客的浏览量

09:55.740 --> 09:56.900
0到11万

09:56.900 --> 09:57.940
博客的评论数

09:57.940 --> 09:58.780
0到100

09:58.780 --> 09:59.740
创建的日期

09:59.740 --> 10:02.260
我随机一个日期

10:02.260 --> 10:03.420
博客的

10:03.420 --> 10:05.660
就是博客的说内徒

10:05.660 --> 10:06.780
这是博客的目录

10:06.780 --> 10:07.860
然后博客的内容

10:07.860 --> 10:09.260
内容是一个ATM文档

10:10.260 --> 10:11.780
因为博客里边有图片

10:11.780 --> 10:12.460
有段落

10:12.460 --> 10:13.020
有标题

10:13.020 --> 10:13.260
对吧

10:13.260 --> 10:14.620
你肯定用纯文本

10:14.620 --> 10:15.540
肯定是不行的

10:15.540 --> 10:17.580
那肯定是带元素的ATM文档

10:17.780 --> 10:19.380
那这就是他的ATM文档

10:21.020 --> 10:22.060
然后这里边有些

10:22.060 --> 10:22.700
你看话

10:22.700 --> 10:24.220
他比方说有标题

10:24.220 --> 10:26.540
标题是一个H元素

10:26.540 --> 10:27.260
要找一找啊

10:28.260 --> 10:29.220
找一找吧

10:29.220 --> 10:30.100
H1

10:30.100 --> 10:30.620
还有没有

10:30.620 --> 10:31.260
你看

10:31.260 --> 10:33.020
不是有一个H元素吗

10:33.020 --> 10:33.940
那么这个H元素

10:33.940 --> 10:34.460
那些标题

10:34.460 --> 10:36.220
我们堆堆到这边

10:36.220 --> 10:38.140
你看这些是不是标题

10:38.140 --> 10:38.540
对不对

10:40.220 --> 10:41.260
这是H1

10:42.380 --> 10:43.940
需要预检的请求

10:43.940 --> 10:45.660
你看在这

10:45.660 --> 10:46.300
H1

10:46.300 --> 10:47.060
H1元素

10:47.580 --> 10:49.740
那么H1元素它是有个ID的

10:49.740 --> 10:51.220
那么这个ID怎么生成出来的

10:51.220 --> 10:52.100
它是服务器的事情

10:52.100 --> 10:53.820
跟你现在没有关系

10:53.820 --> 10:54.420
里面将来

10:55.780 --> 10:57.100
把后台一完成

10:57.100 --> 10:58.260
把服务器那边一完成

10:58.260 --> 10:59.660
基本上就知道是什么回事

10:59.660 --> 11:00.900
总之这个服务器给力的

11:00.900 --> 11:02.180
它会带一个ID

11:02.180 --> 11:03.580
那么这个ID是什么意思呢

11:03.580 --> 11:04.820
这个ID就堆到这

11:06.140 --> 11:08.420
堆到这里的TOC里边的Anker

11:09.620 --> 11:10.620
堆到这

11:10.620 --> 11:12.540
那么这里就堆那个ID

11:12.540 --> 11:13.620
为什么要堆那个ID呢

11:13.620 --> 11:16.740
你看这是一个TOC就是这个目录

11:18.060 --> 11:20.220
那么只有把这个这个信息告诉他

11:20.220 --> 11:20.940
他点了一下

11:20.940 --> 11:22.940
你看是不是会产生某链接

11:22.940 --> 11:24.660
你看这里会不会产生某链接

11:24.660 --> 11:26.540
看没

11:26.540 --> 11:27.540
那么点概述

11:27.540 --> 11:29.420
你看是不是会产生某链接

11:29.420 --> 11:30.100
所以说呢

11:30.100 --> 11:31.940
我要把这个信息带过去

11:31.940 --> 11:32.380
原理是吧

11:32.380 --> 11:35.340
这个信息就对应那个博鹤内容里边的

11:35.340 --> 11:37.940
标题的那个元素ID

11:37.940 --> 11:38.660
就是Anker

11:41.540 --> 11:42.620
这是目录

11:42.620 --> 11:43.460
第一个目录

11:43.460 --> 11:44.020
第二个目录

11:44.020 --> 11:45.340
第二个目录里边有指目录

11:45.340 --> 11:46.340
看到没

11:46.420 --> 11:47.660
看出来又指目录

11:47.660 --> 11:49.980
这些东西都是服务器给你给你弄好的

11:49.980 --> 11:51.020
发给你的

11:51.020 --> 11:51.220
好了

11:51.220 --> 11:52.500
总之就是这么一个数据的

11:54.260 --> 11:54.420
好

11:54.420 --> 11:56.220
以为这个数据这是

11:56.220 --> 11:57.580
我们来测试一下吧

11:57.580 --> 12:03.110
还是测试一下

12:03.110 --> 12:03.910
看一下控制台

12:05.590 --> 12:05.990
诶

12:05.990 --> 12:07.550
数据拿到了

12:07.550 --> 12:09.150
你看是不是拿到测试数据了

12:09.150 --> 12:10.230
把这一顿拿到了

12:10.230 --> 12:10.670
OK

12:10.670 --> 12:12.670
这个东西就调试成功了

12:12.670 --> 12:13.830
接下来我们下一个

12:13.830 --> 12:15.550
下一个是提交评论

12:15.550 --> 12:16.230
提交评论呢

12:16.230 --> 12:18.190
我们这里就Post

12:18.230 --> 12:20.150
comment

12:21.150 --> 12:24.410
这个删除

12:24.410 --> 12:25.810
blog api

12:25.810 --> 12:26.370
post

12:26.370 --> 12:26.850
comment

12:26.850 --> 12:27.650
提交一个评论

12:27.650 --> 12:29.610
那么这里要传一个评论对象进去

12:29.610 --> 12:30.730
评论对象呢

12:30.730 --> 12:32.130
按照我们的接客文档里边

12:33.850 --> 12:34.970
提交评论

12:34.970 --> 12:36.650
他要传递这么一个对象

12:36.650 --> 12:37.130
这个对象呢

12:37.130 --> 12:37.930
我就随便传一个吧

12:37.930 --> 12:38.650
随便下传一个

12:39.530 --> 12:40.890
反正是测试

12:40.890 --> 12:42.450
随便下传一个

12:42.450 --> 12:43.010
博客ID

12:43.010 --> 12:44.650
那我评论了哪篇博客

12:44.650 --> 12:45.170
哪篇博客

12:45.170 --> 12:45.810
就随便写

12:45.810 --> 12:46.290
一二三吧

12:46.290 --> 12:48.010
随便写一个啊

12:48.010 --> 12:48.130
好

12:48.130 --> 12:49.290
那么评论完了过后呢

12:49.290 --> 12:50.650
服务器会响应一个结果

12:50.650 --> 12:52.570
那么这个响应结果是什么样子呢

12:52.570 --> 12:53.610
输出啊

12:53.610 --> 12:54.130
响应结果呢

12:54.130 --> 12:55.370
按照接客文档的描述啊

12:55.370 --> 12:56.650
他就是

12:56.650 --> 12:57.530
你提交一个评论

12:57.530 --> 12:59.130
实际上服务器那边就会记录

12:59.130 --> 13:00.690
就把这个数据记录下来

13:00.690 --> 13:02.210
那么他会产生一个ID

13:02.210 --> 13:04.890
其他的都差不多啊

13:04.890 --> 13:07.370
你的你传递过来的里程

13:07.370 --> 13:09.210
你传递过来的内容啊

13:09.210 --> 13:11.530
他会自动给你生成一个唯一编号

13:11.530 --> 13:11.930
然后呢

13:11.930 --> 13:13.850
你评论的是哪篇博客

13:13.850 --> 13:14.530
凭哪篇博客

13:14.530 --> 13:16.210
他会把它变成一个对象啊

13:16.210 --> 13:17.010
博客的ID

13:17.010 --> 13:18.490
博客的标题

13:18.490 --> 13:18.930
好

13:18.970 --> 13:19.290
然后呢

13:19.290 --> 13:21.290
一个评论的创建时间

13:21.290 --> 13:23.650
还有就是你的投向的随机地址

13:23.650 --> 13:24.450
因为

13:24.450 --> 13:25.090
评论的时候

13:25.090 --> 13:26.530
是不是需要你自己去选

13:26.530 --> 13:27.090
选投向的

13:27.090 --> 13:28.210
因为没有登录系统嘛

13:28.210 --> 13:29.010
没有用户系统

13:30.370 --> 13:31.690
所以说呢

13:31.690 --> 13:32.930
他这个投向了

13:32.930 --> 13:35.050
是服务器那边给你随机生成的

13:35.050 --> 13:36.010
也就说

13:36.010 --> 13:36.930
啥意思呢

13:36.930 --> 13:37.930
这边你评论的时候

13:37.930 --> 13:40.330
我们来看一下我们最终效果里边

13:40.330 --> 13:40.850
评论啊

13:40.850 --> 13:41.930
我们随便来个评论啊

13:41.930 --> 13:42.330
这个头

13:44.170 --> 13:44.530
提交

13:46.770 --> 13:47.370
评论成功了

13:48.210 --> 13:48.930
给

13:50.090 --> 13:50.570
下来

13:51.570 --> 13:53.170
你看多了一个多一套数据

13:53.170 --> 13:53.690
那有同学说

13:53.690 --> 13:55.770
这个数据跟刚才写的数据不一样啊

13:55.770 --> 13:57.530
因为都是测试数据

13:57.530 --> 13:58.490
你提交什么东西

13:58.490 --> 14:00.050
本来服务器应该

14:00.050 --> 14:02.010
按照你提交的信息给你返回的

14:02.010 --> 14:02.690
但是呢

14:02.690 --> 14:04.410
因为我们现在没有服务器

14:04.410 --> 14:05.370
都是模拟数据

14:05.370 --> 14:06.970
模拟数据随机给你返回的东西

14:08.090 --> 14:09.010
就这么个意思

14:09.010 --> 14:09.570
那么这个数

14:09.570 --> 14:10.850
这个头像是随机生成的

14:10.850 --> 14:11.970
是服务器那边随机生成的

14:11.970 --> 14:12.810
一个头像

14:13.730 --> 14:13.930
好

14:13.930 --> 14:15.090
当然你们以后呢

14:15.090 --> 14:16.170
如果说觉得这个不爽

14:16.210 --> 14:17.610
你可以自己去选择

14:17.610 --> 14:18.610
头像也行

14:19.210 --> 14:19.930
也行

14:19.930 --> 14:21.050
但是那要把服务器

14:21.050 --> 14:21.930
选完了之后

14:21.930 --> 14:23.450
你们才能去自主的操作

14:24.250 --> 14:24.770
好了

14:25.090 --> 14:26.890
现在我们就按照这种方式来做吧

14:26.890 --> 14:27.410
那么接下来

14:27.410 --> 14:28.610
我们来模拟数据了啊

14:30.620 --> 14:31.100
默克

14:31.700 --> 14:32.140
默克

14:33.700 --> 14:34.300
模拟什么

14:34.300 --> 14:35.900
请拦接什么地址呢

14:35.900 --> 14:37.540
还是以API开头

14:38.580 --> 14:40.020
然后是

14:41.700 --> 14:43.340
请用这个地址APIcomment

14:44.900 --> 14:46.220
那么我们就不用这么表达

14:46.220 --> 14:46.780
是吧

14:47.580 --> 14:48.860
APIcomment

14:49.460 --> 14:51.260
当你请求这样的地址的时候

14:52.460 --> 14:54.420
如果你是get请求

14:55.140 --> 14:56.300
那么我给你拦接

14:56.300 --> 14:58.900
拦接过后给你返回一个模拟的数据

14:59.700 --> 15:00.940
这个模拟的数据呢

15:00.940 --> 15:01.980
这边也有啊

15:01.980 --> 15:02.780
我直接

15:03.500 --> 15:04.420
就这个地方啊

15:04.420 --> 15:05.780
也有直接弄过来了

15:07.980 --> 15:08.780
就这个数据

15:09.420 --> 15:10.060
没啥问题吧

15:10.860 --> 15:12.060
就叫生成一个id

15:12.060 --> 15:13.660
就是服务器给你返回啊

15:13.660 --> 15:14.620
你提交成功了

15:14.620 --> 15:15.140
成功了

15:15.140 --> 15:15.540
过后呢

15:15.540 --> 15:16.220
我给你生成了

15:16.220 --> 15:17.940
默克的编号是这个

15:17.980 --> 15:18.740
里程呢

15:18.740 --> 15:19.900
其实按理说

15:19.900 --> 15:21.020
里程你提交的是什么

15:21.020 --> 15:22.140
你这是Pose

15:22.860 --> 15:24.100
你提交的是什么里程

15:24.100 --> 15:25.140
那这里就是什么里程

15:25.140 --> 15:25.420
但是呢

15:25.420 --> 15:27.660
我这里就给他随机的里程

15:27.660 --> 15:28.340
无所谓的

15:28.340 --> 15:29.300
反正是测试数据嘛

15:30.220 --> 15:31.180
就像简单一点

15:31.180 --> 15:32.900
然后这创建的时间

15:32.900 --> 15:34.500
这是头像

15:34.500 --> 15:35.100
头像呢

15:35.100 --> 15:36.220
在这些头像

15:36.220 --> 15:38.100
图片里边随机选一个

15:38.100 --> 15:38.980
这是

15:38.980 --> 15:40.340
这头像图片哪来的呢

15:40.340 --> 15:42.580
是我一个学生的博客里边

15:42.580 --> 15:43.740
我去找了他一下

15:43.740 --> 15:45.980
他的头像图片随便找了几张

15:45.980 --> 15:46.300
OK

15:46.300 --> 15:47.260
反正是测试数据

15:48.140 --> 15:48.900
好了

15:48.900 --> 15:50.260
保存在这

15:50.260 --> 15:51.180
那么接下来我来看一下

15:51.180 --> 15:52.980
这边的测试情况啊

15:55.420 --> 15:55.980
刷新

15:55.980 --> 15:56.140
诶

15:56.140 --> 15:56.860
这里出现了

15:56.860 --> 15:57.260
报错了

15:57.260 --> 15:57.780
他说什么呢

15:57.780 --> 15:58.380
意思呢

15:58.380 --> 15:58.700
我有

15:58.700 --> 15:59.380
这是啥错误

16:00.540 --> 16:03.020
build module build field

16:03.020 --> 16:04.180
模块儿

16:04.180 --> 16:04.980
构建失败

16:06.500 --> 16:06.860
诶

16:06.860 --> 16:08.180
这个错误信息

16:08.180 --> 16:10.100
还看不出来什么玩意儿

16:10.100 --> 16:10.740
模块儿

16:10.740 --> 16:14.340
构建失败

16:14.340 --> 16:14.900
为什么会

16:14.900 --> 16:15.300
哦

16:15.300 --> 16:16.340
这个语法错误

16:18.220 --> 16:18.460
好

16:18.460 --> 16:21.060
保存啊

16:21.060 --> 16:21.380
诶

16:21.380 --> 16:22.220
这不达到了吗

16:22.260 --> 16:23.260
说提交成功了

16:23.260 --> 16:23.580
对吧

16:23.580 --> 16:24.100
他告诉你

16:24.100 --> 16:24.300
诶

16:24.300 --> 16:26.420
这个博客已经在服务器记录下来了

16:27.540 --> 16:27.780
好

16:27.780 --> 16:30.300
这是提交博客

16:31.380 --> 16:33.420
提交评论

16:33.420 --> 16:34.580
然后再来一个啊

16:34.580 --> 16:36.380
还有最后一个就是

16:36.380 --> 16:37.420
获取评论

16:37.420 --> 16:38.220
get comment

16:39.260 --> 16:40.540
传入博客id

16:41.420 --> 16:42.540
id的话随便传一个吧

16:44.540 --> 16:45.620
夜马

16:45.620 --> 16:49.740
夜马夜龙量产的传了

16:49.740 --> 16:50.740
获取服务器的结果

16:52.340 --> 16:53.540
获取这个博客的结果

16:53.540 --> 16:55.660
那么这里质量上也得模拟数据

16:57.100 --> 16:58.060
那么这种模拟数据呢

16:58.060 --> 17:02.700
跟之前模拟分页获取博客的差不多

17:02.700 --> 17:03.180
对不对

17:03.180 --> 17:04.100
只不过它请求地址呢

17:04.100 --> 17:05.060
是这个地址

17:05.060 --> 17:05.660
comment

17:05.660 --> 17:07.300
用的是get请求

17:07.300 --> 17:08.540
咱们看一下吧

17:08.540 --> 17:09.340
分页获取评论

17:09.340 --> 17:10.300
请求这个地址get请求

17:10.300 --> 17:12.740
不过它又会有一些参数

17:12.740 --> 17:14.260
会有一些参数列表

17:14.260 --> 17:14.540
因此呢

17:14.540 --> 17:17.950
我们还是用这种表的是

17:17.950 --> 17:19.110
这些反正都是测试数据

17:19.110 --> 17:21.030
不用那么那么在意啊

17:21.030 --> 17:22.110
你只要能够

17:22.110 --> 17:23.150
你知道自己在测试啥

17:23.150 --> 17:23.590
就想吧

17:24.470 --> 17:24.750
好

17:24.750 --> 17:26.310
这个政策表达是

17:28.310 --> 17:31.540
以这个开头

17:31.540 --> 17:32.780
这边的结尾

17:32.780 --> 17:32.980
好

17:32.980 --> 17:33.820
结尾的时候呢

17:33.820 --> 17:35.660
它有可能是直接在这就结尾了

17:38.500 --> 17:39.260
直接在这

17:40.380 --> 17:40.900
不行啊

17:40.900 --> 17:42.420
你得传递一个

17:42.420 --> 17:42.900
算了

17:42.900 --> 17:43.540
就这样吧

17:43.540 --> 17:45.100
反正是测试

17:45.100 --> 17:46.900
有可能直接在这就结尾了

17:46.900 --> 17:47.260
然后呢

17:47.260 --> 17:49.700
也有可能会传递一些参数

17:49.700 --> 17:50.740
所以我们这里呢

17:50.740 --> 17:51.500
扩起来

17:51.500 --> 17:53.180
这里边有可能会传递一些参数

17:53.180 --> 17:54.620
这个参数有可能出现凌次

17:54.620 --> 17:55.820
或疑似

17:55.820 --> 17:57.260
有这里边的东西

17:57.260 --> 17:58.020
这边有什么东西

17:58.020 --> 17:59.660
首先有一个问号

17:59.660 --> 18:00.740
问号后面是什么东西

18:00.740 --> 18:02.700
他任意似乎出现多次

18:02.700 --> 18:03.900
就这样了

18:03.900 --> 18:05.060
我们再可以测试一下

18:05.060 --> 18:06.820
这个政策表达是

18:06.820 --> 18:08.260
他能匹配这个吗

18:08.260 --> 18:09.260
comment

18:09.260 --> 18:10.980
可以匹配

18:10.980 --> 18:12.580
他能匹配这个吗

18:12.580 --> 18:13.420
这个不能匹配

18:13.420 --> 18:14.860
这个不能匹配的话

18:14.860 --> 18:16.780
我们这里的还是该加上一个

18:16.780 --> 18:19.140
这个鞋杠可以出现凌次或疑似

18:19.140 --> 18:20.180
可以的没问题的

18:20.180 --> 18:21.060
那么这个可以匹配

18:21.060 --> 18:22.620
这个也可以匹配

18:22.620 --> 18:24.380
这个东西不能匹配

18:24.420 --> 18:26.660
也可以匹配什么问号

18:26.660 --> 18:27.460
这种东西

18:27.460 --> 18:28.940
这样配几等于一

18:28.940 --> 18:30.900
他也可以匹配

18:30.900 --> 18:31.940
好了

18:31.940 --> 18:33.300
就没了

18:33.300 --> 18:33.820
那现在呢

18:33.820 --> 18:36.300
我们这里的就做的差不多了

18:36.300 --> 18:36.540
哦

18:36.540 --> 18:37.980
这还有还有这个

18:37.980 --> 18:38.980
这个地方

18:38.980 --> 18:41.260
我们也可以把之前的代码

18:41.260 --> 18:42.860
超过来得了

18:42.860 --> 18:44.100
把之前这个代码

18:44.100 --> 18:47.120
分页或许的个代码

18:47.120 --> 18:49.080
超过来得了

18:49.080 --> 18:52.580
复制一下

18:52.580 --> 18:53.620
三天后来

18:53.620 --> 18:55.420
用一个函数来返回

18:55.420 --> 18:56.780
我们就可以通过这个

18:56.780 --> 18:58.540
UIL地址里面获取这个

18:58.540 --> 18:59.540
Carry

18:59.540 --> 19:00.860
那么这里边

19:00.860 --> 19:02.060
他可能会传夜容量

19:02.060 --> 19:02.300
对吧

19:02.300 --> 19:03.660
我们需要这个数据

19:03.660 --> 19:04.580
评论的总数呢

19:04.580 --> 19:05.740
我就随机一个吧

19:05.740 --> 19:08.340
比方说50到200

19:08.340 --> 19:10.380
随机一个评论总数

19:10.380 --> 19:11.180
Rose

19:11.180 --> 19:13.980
看一下这个规格啊

19:13.980 --> 19:14.780
Rose

19:14.780 --> 19:16.980
当前页的列表数据

19:16.980 --> 19:19.140
那么这个就是你传递的夜容量

19:19.140 --> 19:20.500
没有传递夜容量的时候呢

19:20.500 --> 19:22.140
我就使用10

19:22.140 --> 19:22.820
那么这里边呢

19:22.820 --> 19:24.500
就生成每一篇博客

19:24.500 --> 19:25.060
每一篇博客呢

19:25.060 --> 19:28.300
我们就用之前的模范

19:28.300 --> 19:29.100
不复杂吧

19:29.100 --> 19:32.700
这一块我讲的都没劲啊

19:32.700 --> 19:36.500
没有什么难度的

19:36.500 --> 19:39.340
诶写错了

19:39.340 --> 19:41.220
把这个地方复制一下

19:41.220 --> 19:41.820
暂停一下

19:41.820 --> 19:44.060
好了就没啥了

19:44.060 --> 19:47.380
先看看这个测试结果吧

19:47.380 --> 19:48.620
总数115

19:48.620 --> 19:49.660
当前页的数据呢

19:49.660 --> 19:50.500
就这些

19:50.500 --> 19:52.620
就是博客数据

19:52.620 --> 19:54.100
好了

19:54.100 --> 19:54.580
我们最后呢

19:54.580 --> 19:55.540
我们把这个都好了过后

19:55.540 --> 19:57.340
我们搞定一下路由啊

19:57.340 --> 19:58.020
上节课呢

19:58.020 --> 20:02.180
我们做到了blog这个页面

20:02.180 --> 20:03.660
这个页面呢

20:03.660 --> 20:04.340
这个组件啊

20:04.340 --> 20:06.260
这个组件里面有些超链接

20:06.260 --> 20:06.980
你看到没

20:06.980 --> 20:09.980
有些超链接把这些超链接处理一下

20:09.980 --> 20:12.540
上节课我们把有些超链接还没有处理

20:12.540 --> 20:13.860
首先是这个地方的超链接

20:13.860 --> 20:15.180
这个分类的超链接

20:15.180 --> 20:16.700
这个分类的超链接点了过后呢

20:16.700 --> 20:18.300
它其实跟这个分类8

20:18.300 --> 20:20.060
跟点这个分类8是一样的

20:20.060 --> 20:21.900
也就挑转一个路由

20:21.900 --> 20:22.660
那么这里是

20:22.660 --> 20:23.740
通过超链接来挑转

20:23.940 --> 20:25.420
自然而然可以使用什么

20:25.420 --> 20:26.740
rotolink

20:30.740 --> 20:34.650
好那么这里的一个属性2

20:34.650 --> 20:36.010
到哪个地址去

20:36.010 --> 20:38.090
我说class不要了

20:38.090 --> 20:39.250
2

20:39.250 --> 20:40.090
到哪个地址去呢

20:40.090 --> 20:41.290
我们用个命名路由

20:41.290 --> 20:42.850
因为这是挑转到某一个分类

20:42.850 --> 20:44.690
所以说我们的路由名字是什么

20:44.690 --> 20:46.490
所以前条件之前在写过啊

20:46.490 --> 20:48.090
cast query

20:48.090 --> 20:49.610
blog

20:49.610 --> 20:50.410
er

20:50.410 --> 20:51.610
carrance

20:51.610 --> 20:53.690
我们有一个cast query id

20:53.690 --> 20:54.330
要传过去

20:54.370 --> 20:55.170
这些不解释了啊

20:55.170 --> 20:56.650
上里可学过的

20:56.650 --> 20:58.010
id是什么呢

20:58.010 --> 21:02.930
是不是来自于当前对象的cast query id

21:02.930 --> 21:03.610
对不对

21:03.610 --> 21:05.730
就是我们的路由地址

21:05.730 --> 21:06.770
好行了啊

21:06.770 --> 21:09.900
这边我们刷新看一下

21:09.900 --> 21:10.980
对这是啥呀

21:10.980 --> 21:13.140
哦好这里不能用刷新也好

21:13.140 --> 21:17.130
经常都会出这个问题

21:17.130 --> 21:19.290
好好说

21:19.290 --> 21:20.250
点击分类1

21:20.250 --> 21:22.810
你看不得挑转到分类1吗

21:22.810 --> 21:24.010
点击分类9

21:24.010 --> 21:25.770
你看是不得挑转到分类9

21:25.770 --> 21:26.930
还有同学又想问的

21:26.970 --> 21:28.330
你不上显示分类9吗

21:28.330 --> 21:29.690
为什么这里有分类6呢

21:29.690 --> 21:30.970
这些都是测试数据啊

21:30.970 --> 21:31.970
全是测试数据

21:31.970 --> 21:33.290
不一定不是真的

21:33.290 --> 21:35.330
谈个效果得了

21:35.330 --> 21:37.810
好然后是这边

21:37.810 --> 21:40.210
因为我们现在有一个博客详情页面了

21:40.210 --> 21:40.610
对吧

21:40.610 --> 21:42.050
所以说我们这个blog文件甲里面

21:42.050 --> 21:44.330
会有多一个组件叫做

21:44.330 --> 21:46.010
detail

21:46.010 --> 21:46.970
有没有

21:46.970 --> 21:47.770
那么这里的

21:47.770 --> 21:48.650
这里的显示是什么

21:48.650 --> 21:50.130
博客详情

21:50.130 --> 21:53.290
博客详情

21:53.290 --> 21:55.450
或者叫文章详情都行

21:55.450 --> 21:56.450
好有这么一个组件

21:56.450 --> 21:58.050
那么我们是不是得多一些路由

21:58.090 --> 21:59.930
给他配置一些路由规则

21:59.930 --> 22:02.690
Rotor里面配置一些路由规则

22:02.690 --> 22:03.490
再加一个路由规则

22:05.370 --> 22:08.330
叫做blog detail

22:09.770 --> 22:13.250
主线请求路心的就是article

22:13.250 --> 22:16.850
article后边跟上一个article的id

22:16.850 --> 22:18.290
跟上一个id

22:18.290 --> 22:19.530
就是我们访问这样的地址

22:21.010 --> 22:22.330
访问这样的地址的时候

22:22.330 --> 22:24.170
那么这个地方就是article的id

22:24.170 --> 22:26.410
就文章的id或者叫博客的id

22:26.450 --> 22:28.530
那么这样子的就会调整到博客详情

22:28.530 --> 22:29.610
详情就根据这个id

22:29.610 --> 22:30.570
拿到这个博客信息

22:30.570 --> 22:31.530
把它显示出来

22:31.530 --> 22:32.690
跟这个博客相关的评论

22:32.690 --> 22:33.810
也把它显示出来

22:33.810 --> 22:35.290
就这么个意思

22:35.290 --> 22:38.730
那么组件的自然要导入一个组件

22:38.730 --> 22:40.890
叫做blog detail

22:40.890 --> 22:42.690
for views

22:46.530 --> 22:48.210
blog detail

22:49.330 --> 22:51.090
就这么个组件

22:51.090 --> 22:52.410
缺点这个组件

22:52.410 --> 22:52.730
行了

22:52.730 --> 22:54.210
咱们试验一下吧

22:54.210 --> 22:55.690
保存试验一下

22:55.730 --> 22:57.570
现在我们访问这个地址

22:57.570 --> 22:58.970
是不是调到博客详情呢

22:58.970 --> 22:59.370
对不对

22:59.370 --> 23:01.050
访问这个地址是不是调到列表

23:02.650 --> 23:04.530
分类都没问题

23:04.530 --> 23:06.050
然后我们这里调到博客详情

23:07.450 --> 23:07.970
好

23:07.970 --> 23:09.810
那么有了这个路由归者之后

23:09.810 --> 23:11.210
我们现在无非就是挑转了

23:11.210 --> 23:11.850
点击这个

23:11.850 --> 23:14.290
点击这个都会调转到博客详情

23:15.250 --> 23:15.410
好

23:15.410 --> 23:15.770
来吧

23:15.770 --> 23:16.890
来挑转呗

23:16.890 --> 23:17.370
就这个地方

23:17.370 --> 23:18.050
我们使用什么

23:18.050 --> 23:20.650
rotor link

23:22.490 --> 23:23.650
你可以用短横线命迷法

23:23.650 --> 23:25.370
也可以用像我这么大

23:25.650 --> 23:26.530
大头风命迷法

23:27.410 --> 23:29.930
挑转的命迷路由是什么呢

23:29.930 --> 23:32.170
是blog detail

23:33.170 --> 23:34.370
有一个动态部分

23:34.370 --> 23:34.690
对吧

23:34.690 --> 23:36.530
所以说要给他传一个parallels

23:36.530 --> 23:37.570
动态部分呢

23:37.570 --> 23:38.810
有一个id

23:38.810 --> 23:40.010
你看

23:40.010 --> 23:41.250
所以得有个id

23:41.250 --> 23:43.130
那么这个id给他传一个什么呢

23:43.130 --> 23:45.770
传一个就是当前的文章id

23:46.970 --> 23:47.530
传过去玩

23:48.810 --> 23:51.890
这个是说的图点击过是这样

23:51.890 --> 23:53.930
那么这边也应该也是一样

23:55.650 --> 23:56.930
点标题也是一样的效果

23:58.090 --> 23:58.810
保存

23:58.810 --> 24:00.610
现在我们来看一下这个点击效果

24:00.610 --> 24:02.050
点击过是跳转到博客详情

24:02.050 --> 24:04.250
并且把这个文章id带过去了

24:06.490 --> 24:07.010
点这个

24:07.010 --> 24:07.930
对这个也是一样

24:07.930 --> 24:08.330
你看

24:08.330 --> 24:09.650
你跳过去了

24:09.650 --> 24:09.770
好

24:09.770 --> 24:11.770
这就和我们就玩这么一点点的东西

24:11.770 --> 24:13.170
非常简单

24:13.170 --> 24:14.210
也没什么好说的

24:14.210 --> 24:16.130
你可能都听得不耐烦了

24:16.130 --> 24:17.250
这样你把它完成就行了

