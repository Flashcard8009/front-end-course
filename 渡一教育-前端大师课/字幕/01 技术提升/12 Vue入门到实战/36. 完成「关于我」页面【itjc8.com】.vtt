WEBVTT

00:00.240 --> 00:04.080
还有几个页面没完成 咱们一次完成就完事了

00:04.340 --> 00:08.680
首先是关于我的页面 关于我的页面是这样子

00:08.940 --> 00:13.040
这个页面我打算的就是你们将来可以去展示一个

00:13.300 --> 00:14.580
在线的页面简历

00:15.080 --> 00:20.720
这个页面简历你可以用原生的动物操作来做 也可以用那个什么杰克尔也传统的方式

00:20.980 --> 00:21.740
或者就是

00:22.000 --> 00:25.840
用伍佑或者是以后学习的react都可以做 随便利用什么样的做

00:26.100 --> 00:29.420
做完了过后你把它部署到服务器 将来你们会有个部署课程

00:29.740 --> 00:32.500
把它部署到服务器过后了 就会生成一个url地址

00:32.760 --> 00:34.540
就是通过这个地址的去访问这个页面

00:35.060 --> 00:38.900
那么我们把它集中在这个个人空间里边呢 主要就是

00:39.160 --> 00:40.420
便于集中展示

00:40.680 --> 00:43.240
在这个地方实际上这里就是一个ifreem元素

00:44.780 --> 00:45.800
就是一个ifreem

00:46.320 --> 00:50.420
这个元素里面一个src地址就链接到这个页面就完事了 就是一个空架页

00:50.920 --> 00:52.720
所以说这里边比较简单啊

00:52.980 --> 00:55.020
我们这里有个杰克文档

00:56.000 --> 00:59.580
这里有个杰克文档 杰克文档就跟我们之前的杰克文档是一样的

00:59.840 --> 01:02.400
这个杰克文档里面呢 就是关于

01:02.660 --> 01:05.720
我的这个页面呢 你只需要通过一个阿迦克斯请求

01:05.980 --> 01:08.020
去请求他就会拿到一个url地址

01:08.280 --> 01:10.080
当然现在只能是模拟啊

01:10.340 --> 01:14.180
因为你们现在可能还没有这个页面 或者是现在还没有做后台

01:14.440 --> 01:17.760
也没有做服务器 服务端都没有做 所以我只能模拟

01:18.000 --> 01:21.840
随便模拟一个网页吧 将来呢 就会替换成你们的那个真实的地址

01:22.100 --> 01:24.920
做了后台 做了服务器之后 就会替换成真实的地址

01:25.480 --> 01:29.580
那么现在呢 我们就玩这个秩序请求 拿到这么一个url地址就完事了啊

01:30.100 --> 01:31.580
这边呢 为了

01:32.340 --> 01:35.580
避免浪费时间 我这里就直接把这个API就写好了

01:36.240 --> 01:38.020
请求这个地址 完事了啊

01:38.280 --> 01:40.080
然后在moke里边

01:40.580 --> 01:41.620
模拟了一下数据

01:42.120 --> 01:46.940
我就模拟了这么一个地址啊 这个地址呢 我是我在网上去随便收了一个网页简历

01:47.200 --> 01:50.060
做了还挺还可以啊 大家看一下吧 挺不错的

01:52.260 --> 01:53.300
就是

01:54.280 --> 02:00.940
打开看一下吧 然后打开吧 我们再接着看一下我们的代码 这里模拟了一个数据啊 然后在index里边去导弱这个about

02:02.300 --> 02:07.740
呃 然后呢 我们在made.js里边看一下有没有什么东西啊 然后仓库里边

02:08.100 --> 02:14.940
我在仓库里边加了一个about.js 为什么要加这个呢 他道理呢 跟那个首页是一样的 首页这一块是不是也在仓库里边

02:15.300 --> 02:16.060
为了就是避免

02:16.780 --> 02:21.700
重新切换到首页的时候重复夹展啊 我们把提出去 只需要夹展一次就行了 单独提出去啊

02:22.700 --> 02:25.380
你看就这么一个在线简历

02:26.460 --> 02:29.500
呃 这里边下边我们把这个放小一点

02:31.500 --> 02:33.340
下面有一个跳过动画

02:34.460 --> 02:39.340
跳过动画过后一遍是这样子的 啊 上面是一个mockdown 一个简历的mockdown 这边呢 是一个

02:40.020 --> 02:44.980
这个这个好也没什么用啊 呃 右边这个呢 是他的一些样式 就是做随便你

02:45.620 --> 02:51.700
这以后怎么去做啊 无所谓 看你做成一个什么样的页面 我们就把这个地址呢 就做一个模拟数据啊 返回

02:52.580 --> 02:57.700
呃 为了达到跟首页一样的效果呢 就是为了避免重复夹展呢 我还是把提去到仓库里边

02:58.380 --> 03:04.500
呃 像有些页面呢 就不需要提去到仓库 比方说像文章 因为每一次进文章的话 我们都希望读取最新的文章啊

03:05.300 --> 03:10.380
然后呢 因为文章本身还有分页嘛 数据量比较大 放了仓库呢 也不太合适 但是像这个

03:11.380 --> 03:19.940
像这个东西呢 数据量比较小 首页呢 数据量比较小 像这些数据呢 而且呢 又必 又希望不要重复取下载 我们就可以把提起到仓库里边啊

03:21.060 --> 03:29.220
好 现在我们看一下仓库的代码 仓库代码也非常简单 是否正在加载中 然后呢 这就是我们的data啊 就是那个uil地址 默认是空的

03:29.980 --> 03:32.220
这边有一个set loading 一个set data

03:32.980 --> 03:37.500
跟之前的差不多啊 然后呢 读取这个关于我的那个页面地址

03:37.860 --> 03:44.900
那么这里呢 我判断了一下啊 如果说已经读了的话 我就不要再读了 没有读的话 我就把它楼顶设为去 然后去通过

03:45.620 --> 03:50.780
这个api 去得得到这个about的一个地址 然后再把它楼顶设为force 再把数据设进去

03:51.020 --> 03:55.260
就完事了啊 然后在index里边呢 我把这个仓库呢 模困了加进去了

03:56.180 --> 04:00.780
好了 我们就写到这了啊 然后接下来我们要做的事情就是到viu里边 这里有个about

04:01.260 --> 04:05.780
这是我们的页面 对吧 这个页面里边呢 我们要做的事情就是设置一个iframe

04:06.620 --> 04:11.820
设置一个iframe元素 我们来吧 直接来啊 直接来个iframe元素

04:12.980 --> 04:15.900
它的src地址呢 我们给它 首先给它一个样式吧

04:17.300 --> 04:21.380
跟着我们还是用div套一下的div 这是about

04:22.340 --> 04:24.340
康廷的 里边一个iframe

04:25.540 --> 04:28.220
给它个内样式吧 class

04:30.580 --> 04:31.060
叫做

04:31.060 --> 04:31.560
我

04:33.180 --> 04:33.700
about

04:34.740 --> 04:35.220
content

04:36.020 --> 04:38.340
关于我的页面的内容 然后呢 我这里scout

04:41.060 --> 04:41.460
yes

04:43.260 --> 04:44.540
首先呢 我对这个about

04:45.540 --> 04:47.180
康廷的呢 做一个内样式

04:47.980 --> 04:49.100
宽高百分之百

04:51.750 --> 04:52.750
然后overflow height

04:54.830 --> 04:58.910
好 接下来呢 里边这个iframe呢 给它一个样式 about content

05:00.670 --> 05:01.670
宽高也是百分之百

05:05.120 --> 05:08.000
把变成快和吧 因为iframe的model上很和

05:08.880 --> 05:11.120
然后呢 设置一个bots sizing bot box

05:13.510 --> 05:19.310
好 行了啊 咱们差不多就这样了 然后这个src读什么呢 读的是不是有仓库里边的那个路径呀

05:19.950 --> 05:22.230
你看我们之前不是写了个仓库吗 在这

05:23.270 --> 05:29.190
读的就是这个东西 对吧 好 我们来读一下啊 还是用computed 用maps state来得到

05:30.230 --> 05:30.630
import

05:31.830 --> 05:33.030
from views

05:33.750 --> 05:35.590
这边呢 我们使用maps state

05:37.910 --> 05:38.710
maps state

05:39.510 --> 05:41.350
呃 命名空间 about

05:42.230 --> 05:43.830
数据呢 我们就读data

05:44.790 --> 05:45.590
啊 读这个数据

05:46.390 --> 05:50.390
行了啊 当然也可以改一下名字 比方说我们的页面的

05:51.910 --> 05:57.350
src啊 改一下名字也可以啊 我这难得改了 改名字可以用这种方式来改啊 给他写个对象

05:57.670 --> 05:59.830
对象呢 比方说我们要改成src

06:00.470 --> 06:03.190
他读的是什么呢 读的是data 他就可以用这种方式来改

06:04.070 --> 06:07.430
没问题吧 然后呢loading呢 我们读的就是loading

06:08.630 --> 06:11.990
啊 这个名字不变 就是把这个data改为src

06:11.990 --> 06:14.790
那么这边呢 src 那就读的是什么 读的是src

06:15.510 --> 06:17.910
对不对 然后loading呢 我们在这里写个loading吧

06:18.470 --> 06:19.030
vloading

06:20.230 --> 06:21.270
vloading

06:22.150 --> 06:23.830
好 保存啊 现在呢

06:24.550 --> 06:27.910
我们在什么时候去触发一下呢 在monkey的里边啊 或者crate的里边

06:28.470 --> 06:31.110
去触发一下 this storm

06:31.910 --> 06:32.470
dispatch

06:33.910 --> 06:35.110
触发 about

06:35.990 --> 06:36.470
fetch

06:37.350 --> 06:37.830
about

06:38.630 --> 06:41.350
好 保存啊 现在我们来看一下 欢迎我

06:43.440 --> 06:46.640
是吧 就读出来了 好 再接着我们来检查一下啊

06:48.980 --> 06:51.220
呃 检查一下 然后我们在这边

06:52.260 --> 06:58.260
看一下这个loading刚才那个位置好像看上去不是很对啊 我们再来试一下啊

06:59.300 --> 06:59.700
刷新

07:00.740 --> 07:02.740
这个loading的位置好像不是很对啊

07:03.860 --> 07:04.660
这个iframe

07:05.780 --> 07:08.100
哦 这个iframe我们做个判断吧 vif

07:08.660 --> 07:09.780
因为它一开始并不

07:11.380 --> 07:13.860
我想想啊 对 vif公共做个判断

07:14.180 --> 07:18.100
只有等到这个src读出来的过后呢 我们再去显示这个iframe

07:18.100 --> 07:21.060
否则的话不显示啊 不然的话它把位置给我们占掉了

07:21.780 --> 07:22.580
好 刷新

07:23.620 --> 07:26.580
好 还是没对啊 还是没对 我们这里把mock的

07:27.300 --> 07:29.700
这个值调高一点吧 我们来看一下这个loading

07:30.020 --> 07:31.780
看为什么位置不是很对

07:33.910 --> 07:35.270
好 现在我们看一下个loading啊

07:36.390 --> 07:39.750
这个是哦 我们没有设置这个plation-relative对吧

07:39.750 --> 07:40.790
好 我们把设置上啊

07:43.090 --> 07:45.490
plation-relative

07:46.210 --> 07:47.730
好 保存 哎 这个位置对了

07:48.290 --> 07:51.570
好 那么等它把这个数据加载出来了之后呢

07:51.570 --> 07:54.930
那么它就会显示一个iframe框架器

07:56.770 --> 07:57.410
好 来吧

07:58.450 --> 07:58.850
显示

08:00.370 --> 08:03.650
好 那么这里呢有一个小的 非常非常小的问题啊

08:03.810 --> 08:05.250
就是这个iframe已经显示出来了

08:05.250 --> 08:07.330
但是它读这个地址呢需要一段时间

08:07.330 --> 08:09.170
因为它需要去链接这个地址对吧

08:09.170 --> 08:10.770
它需要一段时间才能读出来

08:10.770 --> 08:12.770
啊 这个时候已经链接不上了啊

08:14.290 --> 08:16.050
因为毕竟我用的是别人的网页嘛

08:16.770 --> 08:18.370
那个网站呢 这好 也比较卡

08:19.170 --> 08:19.810
也有点卡

08:22.450 --> 08:22.930
看一下吧

08:23.650 --> 08:26.370
这个iframe 要等它去链接啊 它要去读

08:27.490 --> 08:29.330
而且有些网站呢 它是有那个的

08:31.170 --> 08:33.570
它是有一些防盗链的啊

08:33.730 --> 08:37.410
如果说发现你可能再从别的网页上去链接它的时候呢

08:37.410 --> 08:40.850
它可能链接几十个 它就不给力了

08:40.850 --> 08:42.210
不给力这个网页了

08:42.210 --> 08:44.050
都是有可能会发生的啊

08:44.050 --> 08:46.530
所以说呢 我随便再另外找一个吧

08:47.090 --> 08:48.370
再另外找一个网站吧

08:50.050 --> 08:51.890
关于我就用这个地址吧

08:51.890 --> 08:52.930
我之前用那个地址

08:54.610 --> 08:55.410
再去模拟一下啊

08:55.410 --> 08:56.450
反正都是模拟数据啊

08:56.450 --> 08:57.970
不用太过于些在意

08:57.970 --> 08:59.010
只是做一个效果出来

09:00.370 --> 09:01.250
这是另外一个啊

09:03.590 --> 09:05.030
那么下面的这个iframe呢

09:05.030 --> 09:06.470
就是已经已经出来了

09:14.290 --> 09:14.770
已经出来了

09:14.770 --> 09:17.170
但是那个样式一些样式呢

09:17.170 --> 09:18.610
和介石好像没加载出来啊

09:18.610 --> 09:19.650
也有包错了啊

09:19.650 --> 09:22.690
里边是一些样式和4S也是没有加载出来

09:22.690 --> 09:23.730
然后这个东西没办法

09:23.730 --> 09:25.490
是因为我们读的是别人的网站

09:25.490 --> 09:27.330
读了稍微会遇到一些问题

09:27.330 --> 09:29.090
将来呢我们会替换成自己的网页啊

09:29.090 --> 09:31.810
只要我们后台和服务器开发完成过后就ok了

09:31.810 --> 09:33.810
那么现在我们只是做一个模拟效果

09:34.370 --> 09:35.490
有这么个意识就想了

09:36.210 --> 09:37.730
然后这里呢

09:37.730 --> 09:39.090
有一个小的问题什么小的问题呢

09:39.090 --> 09:40.290
就是我这边呢

09:40.850 --> 09:43.810
虽然我阿加克斯把这个地址拿到了

09:43.810 --> 09:45.490
但是呢用iframe去拿这个地址

09:45.490 --> 09:46.450
是不是需要一段时间啊

09:47.090 --> 09:48.450
是需要一段时间的哦

09:49.090 --> 09:49.890
那么这个问题

09:50.530 --> 09:51.250
怎么解决呢

09:51.250 --> 09:52.930
我们就是就是希望的是

09:54.050 --> 09:55.890
我们希望做成一个什么样的效果

09:55.890 --> 09:56.930
我们希望的是

09:57.570 --> 09:58.930
这个loading效果啊

09:58.930 --> 09:59.810
你不要消失

09:59.810 --> 10:00.850
你就一直在那

10:00.850 --> 10:01.890
不要消失

10:01.890 --> 10:05.090
等你把这个iframe里面的网页

10:05.090 --> 10:06.290
加载完了过后

10:06.290 --> 10:07.330
你再去消失

10:08.370 --> 10:09.170
你还要的意思吧

10:09.170 --> 10:10.530
我们把这个loading的

10:10.530 --> 10:13.570
就说loading的它不仅仅是数据加载期间

10:13.570 --> 10:15.330
这个阿加克斯请求期间

10:15.330 --> 10:16.370
你要显示出来

10:17.650 --> 10:18.690
然后请求完了过

10:18.690 --> 10:19.730
你还不能停

10:19.730 --> 10:20.690
你要等到什么呢

10:20.690 --> 10:21.730
等到我们这个

10:22.770 --> 10:24.930
网页加载完成之后才能停

10:24.930 --> 10:26.770
也就是说这个这个loading效果

10:26.770 --> 10:28.450
取决于两个状态

10:28.450 --> 10:31.010
一个是阿加克斯要加载完成

10:31.010 --> 10:33.490
另外一个呢这个网页也要加载完成

10:33.570 --> 10:35.730
所以说我们这里呢可以用这种方式来处理

10:37.010 --> 10:38.210
我可以写一个data

10:38.850 --> 10:39.650
返回一个数据

10:39.650 --> 10:41.570
网页是否加载完成

10:41.570 --> 10:44.930
就是我们的src loaded

10:45.650 --> 10:47.410
一开始肯定是force对不对

10:48.690 --> 10:51.250
那么这个网页什么时候加载完成了

10:51.250 --> 10:52.290
什么时候加载完成

10:52.290 --> 10:52.850
是不是要等到

10:54.290 --> 10:55.970
这个iframe触发这个时间

10:56.770 --> 10:57.970
load的时间

10:57.970 --> 10:58.610
load的时间的时候

10:58.610 --> 11:00.610
我们是不是把src loaded

11:00.610 --> 11:01.490
设置为什么

11:01.810 --> 11:03.730
表示我们的网页加载完成了

11:03.730 --> 11:05.010
好那么这个loading效果呢

11:05.010 --> 11:05.650
什么时候

11:05.650 --> 11:07.090
什么时候显示loading呢

11:07.090 --> 11:08.370
只要有loading为q

11:09.570 --> 11:10.370
这个时候是

11:11.650 --> 11:13.250
src loaded的为q

11:13.250 --> 11:15.090
loading为q并且呢

11:16.290 --> 11:21.730
或者是src loaded为force

11:22.690 --> 11:25.410
就是我阿加克斯正在加载中

11:25.410 --> 11:28.370
或者是我们的网页还没有加载完成

11:28.370 --> 11:30.290
这个时候都要显示loading效果

11:30.370 --> 11:30.690
对吧

11:30.690 --> 11:31.890
然后我们现在再看一下

11:33.170 --> 11:34.450
那你看阿加克斯完了过了

11:34.450 --> 11:36.130
他仍然会一直在转

11:36.130 --> 11:37.250
直到网页加载完成

11:37.250 --> 11:38.690
但是这个网页好像加载不完

11:39.410 --> 11:41.330
这些人一次页车就读出来了

11:41.330 --> 11:41.890
要等他读

11:42.770 --> 11:43.810
要等他读一段时间

11:47.700 --> 11:48.660
这是别人的网站

11:48.660 --> 11:50.180
那我换一个再换一个网页吧

11:50.740 --> 11:51.540
我换成一个

11:53.060 --> 11:54.500
换成百度中雄了吧

11:56.500 --> 11:57.780
不知道百度允不允许

12:03.190 --> 12:04.310
百度是可以的

12:04.310 --> 12:05.350
就随便换一个网页

12:05.510 --> 12:06.550
就是这么个意思

12:06.550 --> 12:08.230
就是说我这里有一个网页

12:08.230 --> 12:10.710
将来我们会把它写成一个在线

12:11.190 --> 12:11.910
在线简历

12:11.910 --> 12:13.030
这个东西你们就自己写

12:13.030 --> 12:14.470
你们在网上可以去收一收

12:15.430 --> 12:16.470
网页简历

12:16.470 --> 12:17.590
有没有什么比较漂亮的

12:17.590 --> 12:19.190
你们可以去仿造做一个

12:19.190 --> 12:19.910
做一个网页

12:19.910 --> 12:20.390
做在哪

12:20.390 --> 12:21.670
以后学了福奇部署过后

12:21.670 --> 12:22.630
就可以把它部署上去

12:23.270 --> 12:24.150
你们以前

12:24.150 --> 12:25.670
将来好像学习一个

12:25.670 --> 12:26.870
比较简单的部署方式

12:26.870 --> 12:28.790
就是把它部署到github上面

12:28.790 --> 12:30.470
那么这里就给这个地址就OK了

12:31.110 --> 12:33.190
好 关于我这个页面就做出来了

12:33.190 --> 12:34.230
我这里就随便弄了一个

12:34.230 --> 12:36.310
OK 就是这一块

