WEBVTT

00:00.000 --> 00:03.640
OK 这节课咱们就把这个首页给他弄完

00:04.280 --> 00:07.880
最后点东西了啊 最后这些东西就是跟这个图片相关的

00:07.880 --> 00:09.760
我们要做一个什么样的效果呢

00:10.320 --> 00:11.440
看这张图啊

00:12.160 --> 00:15.320
就是说我们目前呢是这样

00:15.880 --> 00:19.200
里边的图片啊 给我们这个外层的DIV呢

00:19.200 --> 00:21.440
大小是一样的 所以它不会动

00:22.400 --> 00:25.360
我们希望呢里边的图片呢要稍微大一些

00:25.360 --> 00:27.800
那大多少呢呢你自己去定吧

00:27.800 --> 00:29.240
比方说大1.1倍

00:29.720 --> 00:30.640
要稍微大一些

00:31.440 --> 00:31.760
好吧

00:33.280 --> 00:35.520
然后呢 我们的鼠标移动的时候呢

00:35.520 --> 00:37.560
比方说往这边移动 图片就往这边移动

00:38.240 --> 00:40.440
就这么一个意识 我们要实现

00:40.440 --> 00:43.560
鼠标移动到这儿来呢 图片就应该是这个样子

00:45.320 --> 00:47.400
你不能出现摆边啊 这样子

00:48.000 --> 00:50.440
对吧 我们就要做这么一个效果

00:50.440 --> 00:53.000
为了便于我们去调试啊

00:53.000 --> 00:56.120
所以说呢 我们这里呢 暂时先把那个Home

00:56.280 --> 00:58.760
主键啊 给他稍微的修改一下

00:59.600 --> 01:01.440
就这个主键 怎么修改呢

01:01.440 --> 01:03.480
因为如果说这个Home主键是全屏的话

01:03.480 --> 01:04.920
我们就啥都看不清楚

01:04.920 --> 01:07.480
我就把这个Home主键呢 设置为一个固定的宽度啊

01:07.480 --> 01:09.000
以后再 之后再改回来吧

01:10.480 --> 01:11.720
之后啊 这是测试

01:12.720 --> 01:13.040
测试

01:15.040 --> 01:18.680
宽度呢 给他设置一个比方说400个像素

01:18.680 --> 01:20.600
高度呢 给他设置一个300个像素

01:21.560 --> 01:26.560
然后呢 再来一个Overflow围热过吧

01:26.560 --> 01:29.080
一出显示 让看的非常清楚

01:29.080 --> 01:32.040
Border Gasol这个边框Solid

01:34.760 --> 01:36.680
好久没有用过这个颜色了

01:36.680 --> 01:37.400
好 来吧

01:38.560 --> 01:40.040
这样子一设置呢 我们来看一下

01:40.040 --> 01:41.960
这个图片 这个变成这样子的啊 你看

01:43.160 --> 01:47.320
等一下啊 我们这里还要处理一下就是Margin

01:47.320 --> 01:49.560
让他居中吧 那个像素O2

01:51.480 --> 01:52.200
好 发现一下啊

01:54.570 --> 01:57.450
你看 变成这样子的 没问题吧

01:58.330 --> 02:00.170
我们先把他做成这个样子再说

02:01.930 --> 02:03.450
做成了这个样子过后了

02:04.330 --> 02:07.210
里边啊 我们先暂时不要三张图

02:07.210 --> 02:08.010
一张图就够了

02:08.570 --> 02:11.530
Mock在Banner里边把这些图片给他注册掉

02:12.730 --> 02:15.370
一张图就够了 这样子呢 我们看上去更加清楚一点

02:16.890 --> 02:18.330
耶 这么还是三张图呢

02:20.760 --> 02:22.040
这是什么话说的

02:22.760 --> 02:23.640
ok 一张图了

02:24.760 --> 02:28.280
好 接下来呢 我现在要做的事情一件一件做啊

02:28.280 --> 02:32.200
我首先要把这里边的图片呢 设置的稍微大一点

02:32.200 --> 02:33.640
那怎么设置呢 我们到

02:34.600 --> 02:35.000
那个

02:35.960 --> 02:36.520
这里边去

02:37.480 --> 02:38.520
就单张换成片

02:39.080 --> 02:40.600
那么这里边 我们把

02:41.240 --> 02:42.360
这里边的图片啊

02:42.360 --> 02:43.720
Cyrus有Image

02:44.360 --> 02:45.800
之前是设置的百分之百对吧

02:45.800 --> 02:46.840
刚好充满容器

02:46.840 --> 02:48.600
歪成的容器又是百分之百

02:48.600 --> 02:51.080
歪成的容器到时候我们可以保持不变

02:51.400 --> 02:52.680
里边的这个东西呢

02:52.680 --> 02:54.360
我们给他设置为百分之一百一

02:54.360 --> 02:55.480
比较放大1.1倍

02:57.560 --> 02:58.520
你看说放大了

02:59.720 --> 03:01.240
我现在边框看不见了

03:01.240 --> 03:03.000
对吧 那我们这里再这样吧

03:03.960 --> 03:05.720
因为这个玩意儿肯定得绝对定位

03:05.720 --> 03:07.880
你看吧 你这个玩意儿就蓝色区域

03:08.600 --> 03:10.360
里边的图片这个区域 什么蓝色区域

03:10.360 --> 03:11.320
他肯定得绝对定位

03:11.320 --> 03:13.080
他Left的时候得变动啊

03:13.080 --> 03:13.720
对不对

03:13.720 --> 03:14.760
好 那么我们这里呢

03:14.760 --> 03:17.000
就干脆给他直接设置为绝对定位吧

03:17.640 --> 03:18.200
Preshing

03:19.480 --> 03:19.960
Absolute

03:21.240 --> 03:22.040
Absolute

03:22.600 --> 03:23.160
绝对定位

03:25.340 --> 03:26.300
好 绝对定位过后了

03:26.300 --> 03:28.300
我们再把Z Index 设置为附一

03:28.940 --> 03:30.460
主要是为了调试

03:31.260 --> 03:31.740
附一

03:33.260 --> 03:33.820
好 这样子呢

03:33.820 --> 03:35.020
我们就可以看到一个边框了

03:35.020 --> 03:35.340
对吧

03:36.460 --> 03:37.100
这么个意思

03:38.140 --> 03:39.580
好了 那么我们目前呢

03:39.580 --> 03:40.380
就做成这个样子了

03:40.380 --> 03:41.740
你看 就是这个样子

03:42.780 --> 03:43.820
接下来呢

03:43.820 --> 03:44.700
无非就是

03:44.700 --> 03:47.180
因为这个宽高始终是根据

03:47.740 --> 03:48.300
一百一嘛

03:48.300 --> 03:50.380
始终是根据外层容器的宽高来定的

03:51.100 --> 03:52.780
我们就有这个宽高不用去管它

03:53.260 --> 03:54.060
我们现在要做的是

03:54.060 --> 03:56.140
无非就是根据这些信息

03:56.940 --> 03:57.740
来设置

03:58.540 --> 04:00.860
它里边的Left和Top值

04:00.860 --> 04:02.060
也就是这个元素啊

04:02.060 --> 04:03.900
它的Left和Top值呢

04:03.900 --> 04:05.180
是要靠界也是来

04:05.740 --> 04:06.940
去设置的

04:07.740 --> 04:08.940
也就是我们这里呢

04:08.940 --> 04:10.540
肯定是需要这么一个计算

04:11.820 --> 04:12.460
计算属下

04:12.940 --> 04:13.420
Compute

04:17.110 --> 04:17.590
设置什么呢

04:17.590 --> 04:18.070
设置它的

04:21.030 --> 04:22.710
图片的位置

04:23.910 --> 04:24.390
Image

04:25.350 --> 04:25.910
Perlation

04:27.670 --> 04:28.390
图片的位置

04:29.510 --> 04:31.110
那么这个图片的位置呢

04:31.110 --> 04:32.550
我们是要算出来的啊

04:32.550 --> 04:33.590
比方说我们这里呢

04:33.590 --> 04:36.150
反回一个Left为0

04:37.990 --> 04:38.230
0

04:39.350 --> 04:41.590
Top或者是随便写一个吧

04:41.590 --> 04:44.310
比方说副的20个相处

04:45.670 --> 04:46.310
Top值呢

04:47.510 --> 04:50.630
副的20个相处

04:50.630 --> 04:51.590
举个例子啊

04:51.670 --> 04:53.590
那么有了这个计算属性过后

04:53.590 --> 04:55.430
当然现在不是

04:55.430 --> 04:56.550
现在是假的数据啊

04:56.550 --> 04:57.510
没有计算的

04:57.510 --> 04:59.270
我们就可以把这个东西绑定到哪呢

04:59.270 --> 05:00.310
绑定到这里边去了

05:01.350 --> 05:03.190
是不是可以绑定到这个Style里面去

05:03.750 --> 05:04.150
对吧

05:04.150 --> 05:05.190
设置它的位置

05:05.190 --> 05:06.390
把这个对象绑定进去

05:07.110 --> 05:08.390
好有了这个绑定对象过后

05:08.390 --> 05:09.030
我们来看一下

05:09.030 --> 05:10.630
你看是不是设置到20个相处了

05:11.670 --> 05:14.550
当然我们肯定不是写实的20个相处

05:14.550 --> 05:15.350
我们要算的

05:16.390 --> 05:18.230
好首先我们说来怎么来算

05:18.710 --> 05:19.430
那要算的话

05:19.430 --> 05:21.110
我们首先肯定要知道一些信息

05:21.110 --> 05:21.990
什么信息呢

05:21.990 --> 05:23.750
就是这个区域的宽度

05:24.230 --> 05:25.190
你说他要不要知道

05:25.190 --> 05:26.070
你自己感觉啊

05:26.070 --> 05:27.750
你虽然你还不知道怎么去算

05:27.750 --> 05:28.870
但是你感觉

05:28.870 --> 05:30.310
这个地方的宽度要不要知道

05:31.430 --> 05:32.790
那肯定得知道吧

05:32.790 --> 05:34.630
因为这个地方的宽度会影响

05:35.270 --> 05:36.150
他的宽度啊

05:36.150 --> 05:37.030
就他的宽度

05:38.150 --> 05:39.750
会影响到他的宽度

05:41.350 --> 05:43.430
而他的宽度

05:43.430 --> 05:46.310
他的宽度又影响到他的坐标

05:46.310 --> 05:46.870
对不对

05:46.870 --> 05:49.750
你看啊如果说他的宽度大一点

05:49.830 --> 05:52.870
那么他的Left值是不是有可能取得

05:52.870 --> 05:53.990
取得的值就大一点

05:53.990 --> 05:55.430
他肯定会有影响的

05:55.430 --> 05:56.870
所以说这两个区域啊

05:56.870 --> 05:58.550
就是外层容器的宽高

05:58.550 --> 06:00.950
和里层容器放大过后的宽高

06:02.390 --> 06:03.110
都要获取

06:03.990 --> 06:05.030
好来吧

06:05.030 --> 06:05.670
都要获取

06:06.710 --> 06:08.870
我们这里呢就写上两个属性

06:08.870 --> 06:11.190
一个是容器container

06:12.070 --> 06:13.270
container size

06:14.470 --> 06:15.270
莫等为到吧

06:15.910 --> 06:18.070
这是外层容器的尺寸

06:19.030 --> 06:21.430
外层容器的尺寸

06:22.870 --> 06:23.830
就这个这个容器

06:24.550 --> 06:25.670
好里边的呢

06:25.670 --> 06:26.470
inner size

06:28.470 --> 06:28.950
也为那

06:29.670 --> 06:34.150
这是里层图片的尺寸

06:34.150 --> 06:35.510
放大过后的图片的尺寸

06:37.430 --> 06:39.030
好那么这两个一开始是

06:39.030 --> 06:40.470
那我一开始确实不知道

06:41.350 --> 06:43.190
接下来怎么来复制呢

06:43.190 --> 06:44.710
我们就在monkey的里面去复制

06:45.670 --> 06:46.390
对不对

06:46.390 --> 06:47.350
我们在这里去复制

06:48.470 --> 06:50.070
那么这里怎么复制呢

06:50.070 --> 06:52.230
无非就是我们在这里呢

06:52.230 --> 06:54.710
去给他一个riff

06:54.710 --> 06:55.990
这里给给个riff

06:55.990 --> 06:57.110
比方说container

06:57.110 --> 06:59.030
那么这个这里呢给个riff

06:59.030 --> 07:00.230
比方说是image

07:01.190 --> 07:01.670
先说

07:04.020 --> 07:05.860
ok我们在monkey的里边呢

07:05.860 --> 07:06.980
我们怎么来处理呢

07:06.980 --> 07:08.260
用这种方式啊

07:08.260 --> 07:10.180
就是我们这里呢可以给设置

07:12.180 --> 07:13.140
container size

07:15.340 --> 07:15.820
一个对象

07:17.420 --> 07:19.260
他的neft值等于多少呢

07:19.740 --> 07:21.180
他的宽度等于多少呢

07:21.180 --> 07:22.380
就是容器的宽度啊

07:22.380 --> 07:24.060
就是this riffs

07:24.060 --> 07:26.300
container client width

07:27.420 --> 07:28.860
他的高度呢

07:28.860 --> 07:31.020
就等于this riffs

07:31.020 --> 07:33.420
container client height

07:34.060 --> 07:34.540
对不对

07:34.540 --> 07:36.140
宽高呢就给他复制了

07:37.020 --> 07:38.780
因为必须要在monkey的里边

07:38.780 --> 07:41.260
因为这个时候才有这个动物对象

07:41.900 --> 07:43.260
好然后另外一个呢就是

07:44.940 --> 07:45.660
inner size

07:47.100 --> 07:47.820
inner size

07:48.780 --> 07:49.100
yes

07:49.100 --> 07:49.980
又是个对象

07:49.980 --> 07:50.780
宽度呢

07:50.780 --> 07:52.460
是this riffs

07:53.900 --> 07:56.780
image client width

07:57.660 --> 07:58.300
高度呢

07:58.940 --> 08:00.780
this riffs

08:01.660 --> 08:04.220
image client height

08:05.900 --> 08:06.380
对不对

08:06.380 --> 08:08.860
要给这两个数据重新复制

08:10.540 --> 08:11.740
好了那么重新复制过后

08:11.740 --> 08:12.460
是不是有数据了

08:12.460 --> 08:13.500
我们再输出一下啊

08:13.500 --> 08:16.060
this container size

08:16.780 --> 08:19.100
this inner size

08:19.100 --> 08:19.820
好输出

08:19.820 --> 08:20.220
你看

08:21.340 --> 08:22.700
宽高是有了

08:22.700 --> 08:23.980
这里边宽高放大之后

08:23.980 --> 08:25.100
你看放大了10%

08:26.380 --> 08:27.180
说都有了

08:27.180 --> 08:28.460
那么这些信息就有了

08:28.460 --> 08:29.100
就具备了

08:31.240 --> 08:32.200
好那么如果

08:32.200 --> 08:33.880
我们这里还多考虑一点啊

08:33.880 --> 08:36.440
就是说这个信息有没有可能会变化呢

08:36.440 --> 08:38.360
一般来说是不会变化的

08:38.360 --> 08:39.320
但是保不齐

08:39.320 --> 08:41.720
因为我这里改动这个窗口大小

08:41.720 --> 08:42.600
如果说这里边

08:42.600 --> 08:43.960
这里边不是设置的定宽

08:43.960 --> 08:45.320
因为定宽我们是测试的嘛

08:45.320 --> 08:47.000
测试的给他设置定宽

08:47.080 --> 08:48.200
有可能是有百分比的

08:48.200 --> 08:51.240
比方说宽度了60%

08:52.360 --> 08:54.120
高度了50%

08:54.120 --> 08:54.840
取个例子啊

08:54.840 --> 08:55.480
下取个例子

08:56.280 --> 08:57.640
那么如果说是这样子的话

08:58.680 --> 09:01.160
高度了30%吧

09:01.800 --> 09:02.360
取个例子啊

09:03.640 --> 09:04.760
如果说是这样子的话

09:04.760 --> 09:05.480
那么宽

09:05.480 --> 09:08.120
我们那种窗口的宽高变化

09:08.120 --> 09:09.720
是不是也会导致他的宽高变化

09:10.440 --> 09:11.000
对不对

09:11.000 --> 09:12.040
那么变化过后

09:12.040 --> 09:14.120
他的指是不是也会跟着变

09:14.120 --> 09:14.520
所以说呢

09:14.520 --> 09:16.120
我们为了避免

09:16.120 --> 09:18.040
为了把它做得更加完善一点

09:18.760 --> 09:19.480
我们这一块呢

09:19.480 --> 09:20.360
把这个玩意儿呢

09:20.360 --> 09:21.400
提取成一个方法

09:21.400 --> 09:24.040
当我们窗口的尺寸变化之后呢

09:24.040 --> 09:25.240
他们也要重新

09:25.240 --> 09:26.280
重新复制一次

09:27.160 --> 09:27.560
好OK

09:27.560 --> 09:28.440
我们这里的

09:28.440 --> 09:30.200
没事只能再写一个方法

09:30.200 --> 09:32.200
叫做set size

09:32.840 --> 09:34.200
设置各种尺寸

09:35.320 --> 09:35.640
来吧

09:35.640 --> 09:36.680
设置各种尺寸呗

09:36.680 --> 09:37.960
那么就是把这两个东西

09:37.960 --> 09:39.160
直接复制过来

09:39.160 --> 09:40.040
就完事了呗

09:40.040 --> 09:41.240
那么这里去调用它

09:41.240 --> 09:42.360
也是set size

09:43.320 --> 09:43.560
好

09:43.720 --> 09:44.040
然后呢

09:44.040 --> 09:45.400
我们这里注册一个

09:45.400 --> 09:46.680
注册一个实践

09:46.680 --> 09:47.720
window

09:47.720 --> 09:49.080
add event listener

09:49.080 --> 09:50.360
resize实践

09:50.360 --> 09:52.040
当我们的窗口尺寸变化之后

09:52.920 --> 09:54.280
调用这个set size

09:54.280 --> 09:55.080
重新调用一下

09:56.120 --> 09:56.360
好

09:56.360 --> 09:56.600
然后呢

09:56.600 --> 09:58.520
我们如果说组件被销毁了

09:58.520 --> 09:59.640
那么自然而然

09:59.640 --> 10:00.760
就像这种注册组件啊

10:01.480 --> 10:02.600
这注册实践啊

10:02.600 --> 10:03.800
一定要去把它销毁掉

10:04.440 --> 10:06.600
window remove event listener

10:06.600 --> 10:07.080
resize

10:08.040 --> 10:09.720
我们先把这准备工作先做好

10:12.890 --> 10:13.210
好了

10:14.090 --> 10:15.210
接下来我们来看一下啊

10:15.210 --> 10:16.570
我们把这个输出放到这吧

10:18.330 --> 10:18.730
放到这

10:21.510 --> 10:22.070
好来看一下

10:23.590 --> 10:23.990
放心

10:26.020 --> 10:26.100
好

10:26.100 --> 10:26.900
一开始

10:26.900 --> 10:27.620
multi的的时候

10:27.620 --> 10:28.340
是不是运行的

10:28.340 --> 10:29.060
运行的一次

10:31.140 --> 10:32.420
不然输出了这两个吧

10:33.380 --> 10:33.540
好

10:33.540 --> 10:33.940
然后呢

10:33.940 --> 10:35.460
我如果说我们窗口尺寸变化

10:36.180 --> 10:37.620
变化是不是又重新复制了

10:38.420 --> 10:38.900
不然你看

10:39.380 --> 10:40.260
又重新复制了

10:40.820 --> 10:41.700
没意思吧

10:41.700 --> 10:43.540
始终保证这两个值是正确的

10:44.420 --> 10:45.380
没问题吧

10:45.380 --> 10:45.620
好

10:45.620 --> 10:45.940
OK

10:45.940 --> 10:47.220
那么我们现在始终保证了

10:47.220 --> 10:48.100
这两个值是正确的

10:48.180 --> 10:50.420
那么我们后边又可以大胆的去使用这两个值了

10:51.860 --> 10:52.180
好

10:52.180 --> 10:53.060
怎么来使用呢

10:53.700 --> 10:55.540
我们又回到我们的计算属性这里

10:56.340 --> 10:57.700
这是我们要设置图片位置

10:58.980 --> 11:01.940
得到图片坐标

11:02.980 --> 11:03.700
来吧

11:03.700 --> 11:04.580
这图片坐标

11:06.100 --> 11:07.140
看一下信息够不够

11:07.700 --> 11:08.740
我们现在知道什么信息

11:08.740 --> 11:09.540
知道这个框框

11:10.180 --> 11:11.860
这个容器的宽高已经知道了

11:12.420 --> 11:12.980
在哪呢

11:12.980 --> 11:13.300
在这

11:14.340 --> 11:14.820
关掉了

11:16.340 --> 11:16.900
在这

11:17.620 --> 11:18.500
container size

11:18.980 --> 11:19.620
对象里边

11:20.740 --> 11:21.380
另外一个呢

11:21.380 --> 11:23.940
就是这个这个东西里边的图片的宽高

11:23.940 --> 11:24.900
我也知道了

11:24.900 --> 11:25.540
在哪呢

11:25.540 --> 11:26.020
在这

11:26.020 --> 11:27.220
而且始终是正确的

11:27.220 --> 11:27.540
对吧

11:27.540 --> 11:29.940
始终是根据那个真实的宽高来的

11:31.460 --> 11:32.500
这两个都知道

11:32.500 --> 11:32.740
哎

11:32.740 --> 11:33.620
怎么又打开了

11:34.980 --> 11:35.700
知道了过后了

11:35.700 --> 11:36.820
现在就它的位置了

11:36.820 --> 11:38.980
位置无非就是left值和top值嘛

11:38.980 --> 11:39.300
对不对

11:40.180 --> 11:41.620
left值肯定是复数嘛

11:41.620 --> 11:42.180
你看

11:42.180 --> 11:44.340
这个left值这一段肯定是复数嘛

11:44.980 --> 11:46.340
top值呢也肯定是复数

11:46.900 --> 11:48.420
最多也最大的也就是零

11:49.780 --> 11:50.020
对吧

11:50.020 --> 11:50.900
它不可能是正数

11:50.900 --> 11:52.340
正数的话就跑到这来

11:52.340 --> 11:53.460
那肯定是不行

11:53.460 --> 11:54.420
它肯定是复数

11:56.020 --> 11:57.380
那么我们怎么办呢

11:57.380 --> 11:58.260
这个一看一下

11:58.820 --> 11:59.620
这个位置啊

11:59.620 --> 12:00.820
它的位置

12:00.820 --> 12:04.020
除了跟这两个容器的宽高有关系

12:04.020 --> 12:05.140
还跟什么有关系

12:06.100 --> 12:08.020
是不是还跟鼠标位置有关系啊

12:08.980 --> 12:10.340
鼠标在哪个哪个地方

12:10.340 --> 12:12.820
是不是它就要控制到哪个地方去

12:12.820 --> 12:13.140
对吧

12:13.140 --> 12:14.660
跟鼠标还有关系

12:14.660 --> 12:15.060
因此呢

12:15.060 --> 12:16.660
我这里是不是还要记住鼠标位置

12:17.540 --> 12:17.860
对不对

12:18.420 --> 12:18.980
好来吧

12:18.980 --> 12:20.340
我们来记住一下鼠标位置

12:22.180 --> 12:23.380
mouse x

12:24.180 --> 12:25.540
这鼠标的横坐标

12:26.820 --> 12:28.500
鼠标的横坐标

12:30.660 --> 12:32.180
还有一个就是mouse y

12:32.980 --> 12:33.940
鼠标的重坐标

12:34.500 --> 12:35.540
鼠标的重坐标

12:36.740 --> 12:36.980
对吧

12:36.980 --> 12:37.700
我们写两个坐标

12:37.700 --> 12:38.820
这个坐标相对于谁的

12:38.820 --> 12:39.940
鼠标肯定是鼠标

12:41.140 --> 12:42.900
相对于这个容器的对吧

12:42.900 --> 12:44.580
我们在鼠标容器人里边移动吧

12:45.540 --> 12:47.460
那肯定是相对于这个容器来移动

12:47.460 --> 12:48.580
没问题吧

12:49.220 --> 12:50.260
这是鼠标的坐标

12:50.740 --> 12:51.940
那么这个鼠标的坐标呢

12:51.940 --> 12:53.140
根据我们传统的知识

12:53.140 --> 12:54.420
其实已经很好算了

12:54.420 --> 12:55.940
就是注册一个鼠标移动事件

12:55.940 --> 12:56.500
给谁注册

12:56.500 --> 12:57.300
给容器注册

12:57.940 --> 12:59.220
给他注册一个mouse

13:00.740 --> 13:01.700
mouse

13:02.340 --> 13:02.900
handle

13:03.460 --> 13:04.340
mouse

13:04.340 --> 13:04.740
mouse

13:05.860 --> 13:06.260
好

13:06.260 --> 13:07.460
没有要这么一个事件

13:07.460 --> 13:08.900
那么这个事件里面要做的事情

13:08.900 --> 13:09.460
就一件

13:09.460 --> 13:10.740
就是给你这两个同性负责

13:11.860 --> 13:12.260
来吧

13:12.260 --> 13:12.820
mouse里面

13:13.380 --> 13:14.100
再加上一个

13:15.540 --> 13:16.420
handlemouse路

13:16.420 --> 13:17.300
一个事件参数义

13:18.980 --> 13:20.020
顺便再说一下

13:20.020 --> 13:21.300
你要获取事件参数义的话

13:21.300 --> 13:22.420
你这里得

13:22.900 --> 13:23.460
别跑了一下

13:23.460 --> 13:24.100
再这样解

13:24.100 --> 13:25.460
直接写个函数名字

13:25.460 --> 13:27.220
如果说你要写弄调用格式的话

13:27.220 --> 13:29.140
你要手动的传事件参数进去

13:29.140 --> 13:29.780
手动的传的话

13:29.780 --> 13:30.740
你要传这个

13:30.740 --> 13:33.300
都是一个局部辨量

13:33.300 --> 13:34.180
在注册事件的时候

13:34.180 --> 13:35.060
一个局部辨量

13:35.060 --> 13:36.020
就是事件参数

13:36.980 --> 13:38.340
我们这里就不用这种方式了

13:40.280 --> 13:40.520
好

13:40.520 --> 13:41.160
那么这样子

13:41.160 --> 13:42.760
可以拿到这个事件参数

13:42.760 --> 13:43.640
我们来输出一下

13:43.640 --> 13:44.440
事件参数义

13:47.740 --> 13:48.700
你看数标一动的时候

13:48.700 --> 13:50.060
是不是拿到数标的参数了

13:50.620 --> 13:51.500
然后参数过后

13:51.500 --> 13:53.180
我们一般来说是怎么来获取

13:53.180 --> 13:56.780
这一段的就是坐标的

13:57.340 --> 13:58.860
是不是就是数标的

13:59.980 --> 14:00.700
横坐标

14:00.700 --> 14:01.820
相对于页面的横坐标

14:02.620 --> 14:04.540
或者是相对于四口的横坐标

14:04.540 --> 14:05.980
我们这里就用四口吧

14:05.980 --> 14:07.580
client left

14:08.780 --> 14:09.580
好像是这个

14:11.580 --> 14:12.780
赏迪范的吗

14:12.780 --> 14:13.980
我看一下这个数标里面

14:13.980 --> 14:14.940
相对于是

14:14.940 --> 14:15.580
client x

14:16.860 --> 14:17.740
client x

14:19.020 --> 14:20.940
和client y

14:20.940 --> 14:23.420
是不是相对于四口的横坐标出来了

14:24.620 --> 14:25.100
对吧

14:25.100 --> 14:26.540
相对于四口的横坐标

14:26.540 --> 14:29.740
然后减去这个容器

14:30.300 --> 14:33.180
这个容器相对于四口的横坐标

14:33.180 --> 14:35.340
是不是就是相对于这个容器的

14:35.340 --> 14:36.620
也就是说数标在这

14:36.620 --> 14:38.620
然后呢数标横坐标

14:38.620 --> 14:40.940
减拿到这一段就是client x

14:41.660 --> 14:44.860
减去这个容器的这一段

14:45.580 --> 14:47.420
不就是这一段吗

14:47.420 --> 14:48.300
对吧

14:48.300 --> 14:48.940
所以说呢

14:48.940 --> 14:50.460
我们这要拿到容器的

14:51.660 --> 14:52.780
横坐标

14:52.780 --> 14:53.820
容器的横坐标呢

14:53.820 --> 14:55.180
相对来说比较固定

14:55.180 --> 14:57.020
我没有必要在每一次数标移动的时候

14:57.020 --> 14:57.660
重新获取

14:57.660 --> 14:59.100
这样子比较浪费效率

14:59.100 --> 15:00.620
它的基本上是比较固定的

15:00.620 --> 15:01.340
对吧

15:01.340 --> 15:01.980
当然了

15:01.980 --> 15:03.180
如果说像我这种情况呢

15:03.180 --> 15:05.020
也有一种也有一种

15:05.020 --> 15:05.660
也有一种

15:05.660 --> 15:06.540
对不对

15:06.540 --> 15:07.580
这里有什么问题的

15:09.100 --> 15:10.060
client y

15:10.060 --> 15:11.180
property of undefined

15:14.890 --> 15:15.290
this

15:16.170 --> 15:16.970
宽度

15:17.050 --> 15:18.650
我看一下这里出问题了

15:20.650 --> 15:21.290
出什么问题

15:26.410 --> 15:27.210
carousel

15:29.050 --> 15:29.770
他说什么呢

15:30.570 --> 15:31.370
这什么问题

15:31.370 --> 15:32.170
我看

15:32.170 --> 15:35.050
他说这个client waste of undefined

15:35.850 --> 15:37.450
他说这个东西是undefined

15:37.450 --> 15:38.890
哎这个东西为什么是undefined

15:40.250 --> 15:40.970
我看一下啊

15:41.850 --> 15:43.450
这个玩意儿 waste of undefined

15:43.450 --> 15:43.690
的呢

15:45.050 --> 15:45.770
不应该呀

15:46.810 --> 15:47.850
rev

15:48.730 --> 15:49.530
都有rev啊

15:50.490 --> 15:51.610
哎等一下啊

15:51.610 --> 15:52.970
我先把这个八个解决了

15:52.970 --> 15:55.130
我这个改变尺寸

15:56.810 --> 15:57.850
改变尺寸

15:58.570 --> 15:59.290
他都抱错了

16:00.810 --> 16:01.930
现在也没抱错了

16:02.650 --> 16:03.770
那以后抱错再说吧

16:04.650 --> 16:06.170
还用不了一个错误场景了

16:06.170 --> 16:06.730
来

16:06.730 --> 16:07.290
好

16:07.290 --> 16:08.170
咱们说回来啊

16:09.290 --> 16:10.330
你看说到哪了

16:11.770 --> 16:13.770
现在我们要拿这个数标位置

16:14.890 --> 16:16.410
数标位置已经拿到了

16:16.410 --> 16:17.690
相对于四口的位置

16:17.850 --> 16:19.290
那么我们现在要拿这个元数

16:19.290 --> 16:20.410
相对于四口的位置了

16:21.130 --> 16:22.330
那就看你怎么想了

16:22.330 --> 16:24.090
如果说你觉得这个元数的位置呢

16:24.090 --> 16:24.810
比较固定

16:24.810 --> 16:26.010
它相对于四口的位置呢

16:26.010 --> 16:27.850
是不会怎么变化的

16:28.490 --> 16:29.290
那么ok

16:29.290 --> 16:31.050
那就无所谓了

16:31.050 --> 16:33.530
那就你一开始就获取

16:33.530 --> 16:35.130
那如果说你的元数的位置

16:35.130 --> 16:35.850
是有变化的

16:35.850 --> 16:37.530
还是每一次数标一种获取吧

16:37.530 --> 16:38.890
那我就就在这里获取吧

16:39.450 --> 16:40.010
那么怎么呢

16:40.010 --> 16:41.930
获取这个元数的相对位置呢

16:41.930 --> 16:43.210
首先是哪个元数的相对位置

16:43.210 --> 16:44.410
是不是这个容器的

16:44.410 --> 16:46.570
这个容器的相对于四口的位置

16:47.290 --> 16:48.410
那这么这里我们来

16:48.970 --> 16:51.690
拿到这个容器的位置

16:52.650 --> 16:53.370
一个举行

16:53.930 --> 16:54.570
还记得吗

16:54.570 --> 16:55.050
怎么写的

16:55.610 --> 16:56.010
Rivs

16:56.570 --> 16:57.530
容器container

16:57.530 --> 16:58.330
就是个动物元数

16:58.330 --> 16:58.650
对吧

16:58.650 --> 16:59.850
动物元数里面有一个方法

16:59.850 --> 17:02.730
把叫做Galaxy bounding

17:02.730 --> 17:03.610
Client Rig

17:03.610 --> 17:05.050
就拿到一个举行

17:05.050 --> 17:06.970
这个举行有一些属性

17:06.970 --> 17:08.170
你看一下Rigs

17:08.170 --> 17:08.970
输出吧

17:08.970 --> 17:10.090
那么这个东西就不要了

17:13.260 --> 17:13.740
好你看

17:13.740 --> 17:14.460
这个举行

17:14.460 --> 17:15.500
举行里面有Left

17:15.500 --> 17:17.180
有Top值

17:17.180 --> 17:18.700
就是它的相对于四口的位置

17:19.180 --> 17:20.540
好那么我们这里呢

17:20.540 --> 17:21.500
是不是可以拿到

17:21.500 --> 17:22.700
通过有这个东西的

17:22.700 --> 17:23.740
有这两个东西的

17:23.740 --> 17:24.380
那么怎么来

17:25.260 --> 17:27.180
鼠标的横坐标

17:27.180 --> 17:28.540
Z mouse X

17:28.540 --> 17:29.500
等于什么呢

17:29.500 --> 17:32.300
等于鼠标的相对于四口的横坐标

17:32.300 --> 17:33.900
减去这个举行

17:33.900 --> 17:34.700
相对于四口的

17:34.700 --> 17:35.500
就是容器

17:35.500 --> 17:37.020
相对于四口的横坐标

17:37.020 --> 17:37.580
对吧

17:37.580 --> 17:38.540
这个Left

17:39.740 --> 17:41.180
好然后拿Mouse Y

17:42.860 --> 17:44.700
E的Client Y

17:44.700 --> 17:47.100
减去Rigs Top值

17:47.180 --> 17:49.740
来输出一下Z mouse X

17:49.740 --> 17:51.260
Z mouse Y

17:53.880 --> 17:54.200
看吧

17:58.280 --> 17:58.760
你看呀

17:59.880 --> 18:00.600
这里是0吗

18:01.160 --> 18:01.480
对吧

18:02.280 --> 18:03.080
0

18:03.080 --> 18:03.400
这边

18:04.040 --> 18:04.760
这没问题了

18:05.720 --> 18:06.520
好那么这个

18:06.520 --> 18:09.800
鼠标相对于这个容器的位置就出来了

18:09.800 --> 18:11.640
为了让你们看到更加清楚呢

18:11.640 --> 18:13.800
我打算在这里写个Diva吧

18:15.320 --> 18:15.880
Test

18:15.880 --> 18:18.200
这个Diva里面就显示横坐标

18:19.960 --> 18:20.760
鼠标的横坐标

18:21.720 --> 18:24.680
显示这个Mouse X

18:24.680 --> 18:27.160
因为在VU里面很容易就用这种方式来测试

18:27.160 --> 18:27.800
重坐标

18:28.520 --> 18:29.720
不着急啊慢慢做

18:29.720 --> 18:31.560
因为这一块呢还是有点绕的

18:32.200 --> 18:32.840
Mouse Y

18:34.520 --> 18:34.920
来吧

18:34.920 --> 18:36.440
这两个显示出来啊

18:36.440 --> 18:37.560
横坐标重坐标呢

18:37.560 --> 18:38.520
我们一开始呢

18:38.520 --> 18:40.200
在这里写个写上这么一个元素啊

18:40.200 --> 18:40.920
Test

18:40.920 --> 18:41.880
然后呢给它一个

18:46.740 --> 18:47.300
Placement

18:48.020 --> 18:49.380
Apps Note

18:49.380 --> 18:51.060
然后Left 0

18:51.060 --> 18:51.860
Top值0

18:53.540 --> 18:54.580
Fount Size

18:55.540 --> 18:56.900
1.2AM

18:56.900 --> 18:57.460
2AM

18:58.180 --> 18:58.500
白色

18:59.140 --> 18:59.940
好就写到这

19:00.980 --> 19:02.660
你看坐标是不是出来了

19:04.180 --> 19:04.980
重坐标

19:04.980 --> 19:05.540
重坐标

19:05.540 --> 19:06.580
你看是不是都出来了

19:08.100 --> 19:11.220
好那么我们把这个容器稍微再改大一点

19:11.220 --> 19:12.020
40%

19:13.220 --> 19:13.460
OK

19:15.380 --> 19:16.260
好行了啊

19:16.260 --> 19:17.540
这个坐标现在有了

19:17.540 --> 19:18.980
你看这信息是不是全了已经

19:19.540 --> 19:20.900
鼠标的位置已经有了

19:21.780 --> 19:22.980
鼠标的位置已经有了

19:22.980 --> 19:25.700
然后呢鼠标的那个两个容器

19:25.700 --> 19:26.740
两个元素

19:26.740 --> 19:27.460
一个是图片

19:27.460 --> 19:28.980
一个是容器的宽高

19:28.980 --> 19:29.860
我们也有了

19:29.860 --> 19:31.620
这些信息呢都在data里边记录了

19:32.420 --> 19:35.620
而且呢都始终是保证跟那个动物元素是对应的

19:35.620 --> 19:35.940
对吧

19:36.580 --> 19:37.540
都已经记录好了

19:38.980 --> 19:39.860
还有鼠标位置

19:39.860 --> 19:40.820
在这边啊

19:40.820 --> 19:41.140
这边

19:44.760 --> 19:45.240
上面啊

19:46.120 --> 19:46.680
尺寸

19:46.680 --> 19:47.800
尺寸鼠标位置

19:47.800 --> 19:48.280
都有了

19:48.280 --> 19:49.160
那么现在呢

19:49.160 --> 19:50.600
就是怎么算的问题了

19:51.720 --> 19:53.080
怎么来根据鼠标位置

19:53.080 --> 19:55.800
跟和这两个东西来算出图片的坐标呢

19:56.440 --> 19:57.720
那我们来捋捋啊

19:58.280 --> 20:00.200
首先我就其实像像算这些东西啊

20:00.200 --> 20:00.920
你就找规律

20:01.880 --> 20:03.800
找一些极端的情况

20:04.680 --> 20:05.240
比方说

20:06.440 --> 20:10.360
我们如果说鼠标在这儿

20:10.360 --> 20:11.640
我们去先看横坐标啊

20:12.120 --> 20:13.080
鼠标在这儿

20:13.080 --> 20:14.680
那么这个东西是不得在这儿吗

20:16.040 --> 20:18.120
这是鼠标能够移动的最远距离的对吧

20:18.920 --> 20:20.440
是不是鼠标能够移动的最远距离

20:21.400 --> 20:22.840
这个最远距离是多少呢

20:23.320 --> 20:24.360
是不是就是这个宽度的

20:24.360 --> 20:25.400
就是这个宽度啊

20:26.040 --> 20:28.360
也就是说鼠标等于

20:31.320 --> 20:33.000
鼠标等于宽度的时候

20:34.200 --> 20:35.080
鼠标的距离啊

20:35.080 --> 20:36.440
就是鼠标的位置

20:37.640 --> 20:38.760
鼠标位置

20:40.680 --> 20:41.400
好一个就是

20:42.120 --> 20:44.360
那个图片坐标

20:44.360 --> 20:45.320
坐标

20:45.320 --> 20:46.520
我们只看横坐标啊

20:46.520 --> 20:47.480
一种坐标是一样的

20:48.200 --> 20:48.920
鼠标位

20:48.920 --> 20:51.160
鼠标的位置是宽度的时候

20:51.160 --> 20:52.120
容器宽度

20:52.680 --> 20:54.200
container点位置的时候

20:55.960 --> 20:57.160
是不是鼠标的位置

20:57.720 --> 20:59.720
好那么图片的坐标是多少呢

20:59.720 --> 21:00.600
都是图片的坐标

21:01.640 --> 21:02.840
这个图片的坐标

21:02.840 --> 21:03.560
naps值

21:04.280 --> 21:05.720
应该肯定是个复数嘛

21:05.720 --> 21:06.440
复多少呢

21:08.600 --> 21:10.920
是不是复的多出来的一部分宽度啊

21:11.480 --> 21:12.760
好那么多出来这部分宽度

21:12.760 --> 21:14.520
我们实际上是可以算的啊

21:14.520 --> 21:14.920
来算

21:16.040 --> 21:17.240
多出来这部分宽度

21:19.740 --> 21:20.860
就是extra

21:22.300 --> 21:23.020
位置

21:23.100 --> 21:24.380
多出来这部分宽度啊

21:24.380 --> 21:25.980
多出的宽度

21:25.980 --> 21:26.700
是不是就是

21:27.820 --> 21:29.420
this inner size

21:29.420 --> 21:30.220
就这个玩意儿

21:31.180 --> 21:31.820
点什么呢

21:31.820 --> 21:32.540
点位置

21:32.540 --> 21:33.740
我们之前说的对象啊

21:34.300 --> 21:34.780
减去

21:37.370 --> 21:39.530
减去this container size

21:39.530 --> 21:40.090
点位置

21:40.810 --> 21:41.610
那么多出来宽度

21:41.610 --> 21:42.330
到同样的道理

21:42.330 --> 21:44.090
以后肯定需要多出的高度啊

21:44.490 --> 21:44.890
height

21:45.850 --> 21:47.290
this inner size

21:47.290 --> 21:48.250
这两个东西

21:48.250 --> 21:50.250
都是基本上比较横定的

21:50.810 --> 21:52.890
container size height

21:53.690 --> 21:54.730
就多出了高度

21:56.090 --> 21:57.210
多出的宽度

21:58.250 --> 21:58.970
好一个多出了

21:58.970 --> 22:00.170
反对一个多出了高度

22:00.170 --> 22:00.970
我们来输出一下

22:00.970 --> 22:01.530
看一下吧

22:01.530 --> 22:02.010
extra

22:02.650 --> 22:03.050
位置

22:03.930 --> 22:04.490
extra

22:05.530 --> 22:05.930
height

22:10.600 --> 22:11.000
哎

22:11.000 --> 22:12.120
这又爆出了啊

22:13.480 --> 22:14.520
他又说这个

22:14.520 --> 22:15.480
无法读取

22:15.480 --> 22:17.080
client with undefined

22:17.880 --> 22:18.840
无法读取

22:22.790 --> 22:23.430
怎么回事

22:27.850 --> 22:29.530
this container size

22:29.850 --> 22:34.250
一开始的时候啊

22:34.250 --> 22:35.050
一开始的时候

22:35.050 --> 22:36.090
这两个还没值呢

22:37.290 --> 22:38.330
这两个玩意儿还没有

22:38.330 --> 22:38.970
还没有值

22:38.970 --> 22:40.170
所以说我们这也要判断一下吧

22:40.170 --> 22:40.970
这两个得有值

22:40.970 --> 22:41.450
得有值

22:41.450 --> 22:42.650
我们才能玩这件事情

22:42.650 --> 22:43.130
没有值

22:43.130 --> 22:44.570
我不了这件事情

22:45.770 --> 22:46.090
然后呢

22:46.090 --> 22:46.970
我们这里比方说

22:46.970 --> 22:48.170
如果说this

22:49.370 --> 22:50.250
inner size

22:51.210 --> 22:51.930
没有值

22:51.930 --> 22:53.050
或者是this

22:54.410 --> 22:55.290
container size

22:55.290 --> 22:56.250
这两个都还没有值

22:56.250 --> 22:57.210
因为什么时候有一个值

22:57.210 --> 22:58.970
是不知道元素挂在上去过

22:59.930 --> 23:01.450
因为元素挂在上去过后

23:01.450 --> 23:02.650
才会运行mounted

23:02.650 --> 23:04.330
mounted里面才会给他设置

23:04.330 --> 23:05.370
尺寸复制

23:05.370 --> 23:06.250
如果他没有值的话

23:06.250 --> 23:07.530
说明元素还没有挂在

23:07.530 --> 23:08.730
那我就返回一个空队箱吧

23:09.450 --> 23:11.450
空队箱因为这边要用样式嘛

23:11.450 --> 23:12.730
或者返回undefined也可以

23:12.730 --> 23:14.010
undefined的话就啥都没有

23:14.730 --> 23:15.130
都行

23:16.730 --> 23:17.850
得让他先有值

23:17.850 --> 23:19.050
你看有值到过

23:19.050 --> 23:20.890
是不是重新运行这个计算所向

23:20.890 --> 23:21.930
有值到过就重新运行

23:21.930 --> 23:23.130
因为他一旦像变化了

23:23.690 --> 23:24.810
那么得到了

23:24.810 --> 23:25.770
额外的宽高

23:25.770 --> 23:26.810
是不是4632

23:27.610 --> 23:27.930
对吧

23:27.930 --> 23:28.570
额外的宽高

23:29.930 --> 23:30.170
好

23:30.170 --> 23:31.050
那么我们再回到这

23:31.610 --> 23:32.570
我们再回到刚才这

23:34.490 --> 23:36.650
我们鼠标是最远的情况下

23:37.290 --> 23:39.610
就是鼠标的位置是container位置

23:40.730 --> 23:41.930
这就最大了吧

23:41.930 --> 23:42.170
对吧

23:42.810 --> 23:44.090
那么这种情况下

23:44.090 --> 23:45.450
也就是说我们这一段

23:46.170 --> 23:46.810
这一段度

23:51.400 --> 23:52.040
换个颜色

23:53.160 --> 23:55.080
换成绿色

23:56.120 --> 23:57.240
绿色早就看不见了

23:57.960 --> 23:59.160
换成白色吧

23:59.160 --> 23:59.880
就这一段度

24:00.840 --> 24:01.480
比上

24:02.120 --> 24:03.720
就跟这一段度的比例

24:03.720 --> 24:04.600
应该是一致

24:06.200 --> 24:06.760
这一段度

24:06.760 --> 24:07.640
我给他换个颜色

24:08.440 --> 24:09.240
换个红色吧

24:10.680 --> 24:12.360
是不是有关系的

24:13.160 --> 24:14.520
这一段度跟这一段度

24:14.520 --> 24:15.480
是不是有关系的

24:15.480 --> 24:15.720
好

24:15.720 --> 24:16.280
它呢

24:16.280 --> 24:17.400
就是鼠标位

24:17.400 --> 24:19.640
就是整个容器的宽度

24:20.280 --> 24:21.560
那么这个图片的坐标

24:21.560 --> 24:22.680
如果是这种情况下的

24:22.680 --> 24:23.800
图片的坐标是什么呢

24:23.800 --> 24:24.840
图片的坐标就是

24:25.560 --> 24:26.040
负的

24:27.880 --> 24:28.520
extra

24:29.480 --> 24:29.880
位置

24:31.000 --> 24:31.720
是不是

24:31.720 --> 24:32.440
你看是不是

24:33.240 --> 24:34.440
图片的坐标是不是应该是这个

24:35.960 --> 24:37.400
那么换而言之

24:37.400 --> 24:38.920
如果说我鼠标在

24:39.400 --> 24:39.800
在这

24:41.400 --> 24:42.840
那么这一段距离

24:43.400 --> 24:44.040
是不是这一段

24:46.860 --> 24:48.060
这一段距离的话

24:48.060 --> 24:50.300
那么这边是不是没有移动那么多

24:50.300 --> 24:51.500
移动的少了一点

24:51.980 --> 24:52.300
对吧

24:52.300 --> 24:53.580
移动的少了一点

24:53.580 --> 24:54.300
那么这一段

24:54.300 --> 24:55.420
就是相当于是这段距离

24:55.980 --> 24:56.460
你看吧

24:57.100 --> 24:58.140
是不是有个比例关系

24:59.180 --> 25:01.180
这个玩意儿比这个玩意儿

25:01.180 --> 25:02.780
跟这个玩意儿比这个玩意儿

25:02.780 --> 25:03.660
是不是应该相等的

25:04.300 --> 25:04.620
对不对

25:04.620 --> 25:05.580
那么这个玩意儿是不是

25:05.580 --> 25:07.020
就是我要求的呀

25:07.020 --> 25:08.540
我要求的neft值

25:08.540 --> 25:09.020
所以说呢

25:09.020 --> 25:09.980
我们的neft值

25:09.980 --> 25:11.020
就是我们的extra

25:11.020 --> 25:12.300
我要求的东西

25:12.300 --> 25:13.340
比上什么呢

25:13.340 --> 25:14.860
比上鼠标位置

25:14.860 --> 25:15.740
extra

25:15.740 --> 25:16.700
就应该等于

25:18.380 --> 25:18.940
负的

25:19.820 --> 25:20.540
这个玩意儿

25:21.660 --> 25:24.620
比上container的位置

25:24.620 --> 25:25.740
你看是不是相等的

25:25.820 --> 25:26.780
那么x的球法

25:26.780 --> 25:27.580
是不是在成义

25:27.580 --> 25:28.700
这边成义一个mouse

25:28.700 --> 25:29.580
x就完成了

25:30.300 --> 25:30.860
对吧

25:30.860 --> 25:31.980
所以说我们的横坐标

25:31.980 --> 25:33.100
是不是就出来了

25:33.100 --> 25:34.140
横坐标怎么来算的

25:37.500 --> 25:38.220
横坐标

25:38.940 --> 25:39.660
neft值

25:42.660 --> 25:43.540
就应该等于

25:47.380 --> 25:47.940
等于啥呀

25:49.460 --> 25:50.740
等于这个extra

25:50.740 --> 25:52.740
位置额外的宽度

25:53.540 --> 25:54.580
负的extra

25:54.580 --> 25:54.980
位置

25:56.100 --> 25:56.900
额外的宽度

25:57.620 --> 25:58.660
处于比上

25:59.220 --> 26:01.540
那个thiscontainer size

26:03.700 --> 26:05.380
container size

26:05.380 --> 26:05.860
位置

26:06.660 --> 26:07.620
在成义

26:07.620 --> 26:08.740
this mouse

26:08.740 --> 26:09.060
x

26:09.780 --> 26:10.260
对不对

26:10.980 --> 26:11.220
好

26:11.220 --> 26:12.260
然后那top值呢

26:14.500 --> 26:15.220
top值呢

26:15.220 --> 26:17.300
就应该是负的extra

26:17.300 --> 26:17.620
height

26:18.500 --> 26:20.340
处于thiscontainer size

26:21.380 --> 26:21.700
height

26:22.340 --> 26:23.940
成义this mouse

26:24.500 --> 26:24.820
y

26:25.780 --> 26:26.660
好那么neft

26:26.660 --> 26:27.220
出来了

26:27.220 --> 26:28.260
那么就是neft

26:28.260 --> 26:29.220
拼接上px

26:29.780 --> 26:30.660
top出来了

26:30.660 --> 26:31.220
就top

26:31.220 --> 26:32.180
拼接上px

26:32.820 --> 26:33.300
对不对

26:34.180 --> 26:34.980
好那么这个位置

26:34.980 --> 26:36.100
是不是就搞定了

26:36.100 --> 26:36.660
我来看一下

26:39.940 --> 26:40.980
一开始

26:40.980 --> 26:41.620
鼠标

26:41.620 --> 26:42.420
横坐标

26:42.420 --> 26:43.380
重坐标是0

26:43.380 --> 26:43.620
对吧

26:43.620 --> 26:44.100
鼠标位置

26:44.100 --> 26:45.060
我们就假设是0嘛

26:45.060 --> 26:45.380
一开始

26:45.380 --> 26:45.940
因为一开始

26:45.940 --> 26:46.660
我设置的是0嘛

26:46.660 --> 26:47.220
鼠标位置

26:48.100 --> 26:48.420
你看

26:48.980 --> 26:50.020
显示的是0嘛

26:50.020 --> 26:50.420
然后呢

26:50.420 --> 26:51.620
我们鼠标不断的移动

26:51.620 --> 26:52.340
你看

26:52.340 --> 26:52.980
移动到这

26:53.460 --> 26:54.100
移动到这

26:54.580 --> 26:55.220
移动到这

26:55.220 --> 26:56.100
不就出来了吗

26:56.100 --> 26:56.740
移动到这

26:57.220 --> 26:57.860
移动到这

26:58.580 --> 26:59.460
就出来了

26:59.460 --> 27:00.420
这个效果就出来了

27:01.140 --> 27:01.540
看没

27:03.060 --> 27:03.620
没问题吧

27:04.260 --> 27:04.500
好

27:04.500 --> 27:04.820
然后呢

27:04.820 --> 27:06.180
我们把三张图片都加上了

27:06.180 --> 27:06.580
你看一下

27:07.460 --> 27:08.580
我们去先看这个效果

27:09.700 --> 27:10.660
看一下就没问题啊

27:13.640 --> 27:13.960
看这

27:14.520 --> 27:15.880
上面这张图被折除了

27:15.880 --> 27:16.280
没关系

27:17.320 --> 27:17.880
没问题吧

27:17.880 --> 27:18.920
我们看一下下一张图

27:20.200 --> 27:21.000
没问题吧

27:21.000 --> 27:21.720
是不是都没问题

27:22.680 --> 27:23.480
在下张图

27:24.200 --> 27:25.000
你看是不是没问题

27:25.480 --> 27:26.120
都没问题吧

27:26.760 --> 27:27.160
只不过呢

27:27.160 --> 27:28.360
到时候加个overflow

27:28.360 --> 27:29.160
还等有隐藏

27:29.480 --> 27:30.360
就看不到外面

27:30.360 --> 27:31.080
移出了一部分了

27:33.720 --> 27:33.960
好

27:33.960 --> 27:35.160
我们再用一张图来测试

27:36.200 --> 27:36.520
好

27:36.520 --> 27:38.360
外面还是有些细节

27:38.360 --> 27:39.320
有些细节呢

27:39.320 --> 27:40.120
我们要关注

27:40.120 --> 27:40.920
什么细节呢

27:40.920 --> 27:42.680
就是一开始的时候

27:42.680 --> 27:43.560
最开始的时候

27:44.280 --> 27:45.480
你不能是这个样子吧

27:46.520 --> 27:47.320
最开始的时候

27:47.320 --> 27:48.280
得是什么样子呢

27:48.920 --> 27:50.200
我希望了你的

27:51.480 --> 27:53.160
就是鼠标位置呢

27:53.160 --> 27:54.440
得在中间

27:54.440 --> 27:55.320
对不对

27:55.320 --> 27:56.360
一开始的鼠标位置呢

27:56.360 --> 27:58.120
我们不希望是0和0

27:58.120 --> 27:59.000
你得在中间

27:59.720 --> 28:01.240
哪怕你鼠标没有移入

28:01.240 --> 28:02.200
没有在上面移动

28:02.200 --> 28:03.320
你都应该在中间

28:03.320 --> 28:04.440
因为鼠标在中间是不是

28:04.440 --> 28:05.640
刚好是这个样子

28:05.640 --> 28:06.440
也比较好一点

28:07.080 --> 28:07.880
没什么意思吧

28:07.880 --> 28:08.360
所以说呢

28:08.360 --> 28:09.320
我们一开始呢

28:09.800 --> 28:11.240
做这么一个处理啊

28:11.240 --> 28:12.200
我就写个函数吧

28:14.680 --> 28:15.640
让鼠标位置

28:18.680 --> 28:19.960
我们首先要知道

28:19.960 --> 28:21.400
中间的坐标是啥

28:21.400 --> 28:21.880
中间的坐标

28:21.880 --> 28:22.920
那我们可以用个计算属性

28:22.920 --> 28:23.880
就可以求出来

28:23.880 --> 28:24.600
因为中间的坐标

28:24.600 --> 28:25.320
是不是特别简单

28:26.120 --> 28:26.840
center x

28:27.400 --> 28:27.880
center吧

28:30.340 --> 28:31.220
返回

28:31.220 --> 28:31.940
横坐标

28:31.940 --> 28:32.580
neft

28:32.580 --> 28:33.140
等于什么呢

28:33.140 --> 28:34.500
中间的坐标啊

28:34.500 --> 28:35.620
就是鼠标坐标啊

28:35.620 --> 28:36.580
或者就是x嘛

28:39.300 --> 28:40.340
中间的坐标呢

28:40.340 --> 28:41.620
就是宽度

28:41.620 --> 28:42.740
容器宽度除一二

28:43.460 --> 28:44.580
这个很简单吧

28:44.580 --> 28:45.540
container size

28:45.540 --> 28:46.980
宽度除一二

28:46.980 --> 28:47.460
然后呢

28:47.460 --> 28:48.100
y坐标呢

28:48.100 --> 28:49.860
就是this container size

28:49.860 --> 28:51.780
叫height除一二

28:51.780 --> 28:52.100
对吧

28:52.100 --> 28:53.140
中间坐标

28:53.140 --> 28:54.820
那么最开始的时候呢

28:54.820 --> 28:55.540
我们就把这个

28:55.540 --> 28:56.180
mouse x

28:56.180 --> 28:56.660
mouse y

28:56.660 --> 28:57.860
那设为中间坐标

28:57.860 --> 28:58.740
那么什么时候

28:58.820 --> 29:00.580
就是你在设置size的过后啊

29:00.580 --> 29:01.140
这些东西

29:01.140 --> 29:02.020
我们在这个时候

29:02.020 --> 29:02.980
就初识化一下啊

29:08.020 --> 29:10.260
this mouse x

29:10.260 --> 29:12.020
等于this center

29:12.020 --> 29:13.780
我们计算属性点x

29:13.780 --> 29:15.700
this mouse y

29:15.700 --> 29:19.140
等于this center y

29:20.340 --> 29:20.980
好了

29:20.980 --> 29:21.540
那你看

29:21.540 --> 29:22.740
一开始是不是自动就把

29:22.740 --> 29:23.780
鼠标的位置就设为

29:23.780 --> 29:24.180
mouse x

29:24.180 --> 29:24.660
mouse y

29:24.660 --> 29:25.300
就设为中间了

29:25.300 --> 29:26.340
你看鼠标都没有移入

29:28.100 --> 29:28.580
对吧

29:29.540 --> 29:31.300
那么现在还有一些小的问题啊

29:31.300 --> 29:32.180
比方说

29:32.180 --> 29:32.900
一开始在这

29:33.540 --> 29:34.500
我鼠标移入进去的时候

29:34.500 --> 29:35.780
是不是抖了一下

29:35.780 --> 29:36.500
它从一个位置

29:36.500 --> 29:37.940
突然变到另外一个位置了

29:37.940 --> 29:38.980
因为鼠标

29:38.980 --> 29:39.620
它不是

29:39.620 --> 29:40.260
如果说鼠标

29:40.260 --> 29:40.820
你进去的时候

29:40.820 --> 29:41.540
是在中间

29:41.540 --> 29:42.580
那么就是比较平滑的

29:42.580 --> 29:43.460
后面跟着鼠标移动

29:43.460 --> 29:44.180
比较平滑

29:44.180 --> 29:45.060
但是如

29:45.060 --> 29:46.420
图片一开始在中间

29:46.420 --> 29:46.980
而我鼠标

29:46.980 --> 29:48.420
从这里移入的话

29:48.420 --> 29:49.300
那么是不是

29:49.300 --> 29:50.580
这个图片马上要出现到

29:50.580 --> 29:51.140
另外一个位置

29:51.860 --> 29:52.900
所以有个抖动啊

29:52.900 --> 29:53.700
那么这个地方呢

29:53.700 --> 29:55.700
我们可以这样的来处理吧

29:55.700 --> 29:56.500
给它加上一个

29:57.060 --> 29:57.620
全session

29:59.540 --> 30:00.180
这里

30:00.180 --> 30:01.300
再加在这里

30:01.300 --> 30:02.020
让它个全session

30:03.060 --> 30:04.340
比方说三秒钟吧

30:04.340 --> 30:04.980
零点三秒

30:06.020 --> 30:07.060
主要移入进去的时候

30:07.060 --> 30:07.540
哎

30:07.540 --> 30:07.860
你看

30:08.980 --> 30:09.700
这样子

30:09.700 --> 30:10.260
有好多

30:10.820 --> 30:11.140
对啊

30:11.140 --> 30:11.860
好多多

30:11.860 --> 30:12.340
其实这里

30:12.340 --> 30:13.940
我们为了提高效率的话

30:13.940 --> 30:15.140
慢慢的优化啊

30:15.140 --> 30:16.420
为了提高效率的话

30:16.420 --> 30:17.620
我这这一块呢

30:17.620 --> 30:19.060
最好不用left和top

30:19.860 --> 30:20.500
就这一块

30:20.500 --> 30:21.860
最好不用left top

30:21.860 --> 30:22.340
用什么呢

30:22.340 --> 30:23.460
用transform比较好一点

30:24.180 --> 30:24.660
transform

30:25.380 --> 30:26.980
因为left和top

30:26.980 --> 30:28.260
会引起重排

30:28.260 --> 30:28.980
对不对

30:28.980 --> 30:29.780
所以我们这里呢

30:29.780 --> 30:30.580
用什么呢

30:30.580 --> 30:32.980
用那个transnet

30:34.580 --> 30:35.780
x方向就是

30:35.780 --> 30:36.740
凭借上什么

30:37.460 --> 30:38.180
left

30:38.740 --> 30:39.140
px

30:39.140 --> 30:41.060
中向那就凭借上top

30:41.780 --> 30:42.340
px

30:42.340 --> 30:42.980
对吧

30:42.980 --> 30:44.100
那么left top

30:44.100 --> 30:45.940
left top只能就不变

30:45.940 --> 30:47.940
用transform来改动位置

30:47.940 --> 30:49.380
left top只能就直接是

30:49.380 --> 30:50.580
固定为零和零

30:52.580 --> 30:53.860
这样子的效率更高一点

30:54.820 --> 30:56.180
更加平滑一点

30:56.180 --> 30:57.700
看上去更加舒服一点

31:00.500 --> 31:01.060
好了

31:01.060 --> 31:02.180
搞定了吧

31:03.140 --> 31:03.620
好

31:03.620 --> 31:04.740
然后还有什么呢

31:04.740 --> 31:06.420
当我们鼠标移出的时候

31:06.420 --> 31:07.380
还要处理一下

31:07.380 --> 31:08.980
鼠标移出的时候呢

31:08.980 --> 31:09.700
我希望呢

31:09.700 --> 31:10.580
它又回到中间

31:10.900 --> 31:12.180
这个事情就很好

31:12.180 --> 31:12.900
很简单的

31:12.900 --> 31:13.860
我们这里是不是给大家

31:13.860 --> 31:14.740
做这个事件啊

31:14.740 --> 31:15.300
在这里

31:15.300 --> 31:17.220
mouse nil

31:17.220 --> 31:18.420
鼠标移出的时候

31:18.420 --> 31:20.740
我们handle mouse nil

31:20.740 --> 31:22.340
这个事情特别简单

31:22.660 --> 31:24.660
就是handle mouse nil

31:25.140 --> 31:25.700
然后呢

31:25.700 --> 31:27.140
我们自己发称两句话

31:27.140 --> 31:28.500
mouse x

31:28.500 --> 31:30.500
等于zcenter

31:30.500 --> 31:31.300
叫x

31:31.300 --> 31:33.300
mouse y

31:33.300 --> 31:35.300
等于zcenter

31:35.300 --> 31:36.100
叫y

31:36.100 --> 31:36.500
对吧

31:36.500 --> 31:37.220
回到中间

31:37.220 --> 31:37.940
你看啊

31:37.940 --> 31:38.980
进去

31:38.980 --> 31:40.260
滑动滑动

31:40.260 --> 31:40.900
离开

31:40.900 --> 31:42.100
出回来了

31:42.100 --> 31:44.100
滑动离开

31:44.100 --> 31:45.380
回来了

31:45.380 --> 31:47.380
也是不是就很舒服了

31:47.380 --> 31:48.420
对不对

31:48.420 --> 31:49.060
ok

31:49.060 --> 31:50.260
那么这一块

31:50.980 --> 31:51.540
OK

31:51.540 --> 31:52.260
那么这一块

31:52.260 --> 31:53.540
是不是完成了

31:53.540 --> 31:54.420
完成了

31:54.980 --> 31:56.100
好

31:56.100 --> 31:57.060
完成了之后呢

31:57.060 --> 31:58.180
我们就把这些测试代码

31:58.180 --> 31:59.060
就扔掉了啊

31:59.060 --> 31:59.940
像这个什么

31:59.940 --> 32:00.980
人家的负疑啊

32:00.980 --> 32:02.900
这些东西就没有必要要了啊

32:02.900 --> 32:04.660
这task也没必要要了啊

32:04.660 --> 32:05.860
这个地方task这个

32:06.740 --> 32:08.020
测试dm也删掉了

32:09.700 --> 32:11.620
到手游里面去

32:11.620 --> 32:12.820
手游里面的样式呢

32:12.820 --> 32:14.260
这些测试的样式也去掉了啊

32:14.900 --> 32:15.380
该去掉

32:16.020 --> 32:16.740
测试的样式

32:18.500 --> 32:18.900
去掉

32:19.620 --> 32:20.500
一遍这个样子

32:22.460 --> 32:23.180
没问题吧

32:24.700 --> 32:25.900
你看都没问题啊

32:26.620 --> 32:27.020
往下

32:28.540 --> 32:30.140
我只有一张图片啊

32:31.500 --> 32:32.220
把图片加上

32:37.380 --> 32:39.460
下面有点问题了

32:40.660 --> 32:41.780
下面这张图片有点问题了

32:41.780 --> 32:43.220
下面这张图片冒出来了

32:43.220 --> 32:45.940
是因为没有overflow height

32:45.940 --> 32:47.460
我刚才忘了加了

32:48.180 --> 32:48.900
这里

32:48.900 --> 32:50.500
我加个overflow height

32:50.500 --> 32:52.660
下面图片一出来跑到这张图片

32:52.660 --> 32:54.180
该被盖住了

32:54.340 --> 32:54.660
ok

32:56.500 --> 32:56.980
听好了

32:56.980 --> 32:57.460
对吧

32:58.020 --> 32:58.900
好那么手页呢

32:58.900 --> 32:59.540
我们就做完了

32:59.540 --> 33:00.580
手页一般来做什么呢

33:00.580 --> 33:01.540
我们这个网站里边

33:01.540 --> 33:03.540
手页是用来展示自己的啊

33:03.540 --> 33:05.540
我这里是随便瞎加了几张图片

33:05.540 --> 33:06.020
将来呢

33:06.020 --> 33:07.780
我们把后台一完善

33:07.780 --> 33:09.060
那就后边的事情呢

33:09.060 --> 33:10.100
还要跟豆豆相关

33:11.060 --> 33:12.420
把后台一完善的这些东西呢

33:12.420 --> 33:14.100
都可以上传一些真实的图片

33:14.100 --> 33:14.900
那就是

33:14.900 --> 33:17.060
比方说来展示你自己的一些东西

33:17.860 --> 33:19.060
手页雕鱼嘛

33:19.780 --> 33:21.700
好咱们就把手页做完了

33:21.700 --> 33:22.740
那么大家呢

33:23.220 --> 33:24.180
还是要跟上进度

33:24.980 --> 33:27.380
可能有些地方可能比较麻烦一点啊

33:27.380 --> 33:28.260
但是不要怕麻烦

33:28.260 --> 33:29.700
我咱们是在做项目

33:29.700 --> 33:30.660
项目没有麻烦

33:30.660 --> 33:32.340
那才是真正的大麻烦

33:32.340 --> 33:33.140
有些同学呢

33:33.140 --> 33:35.940
只是只是特别想规避困难

33:35.940 --> 33:38.020
你千万不要规避规避困难

33:38.020 --> 33:39.860
你如果说规避了所有的困难的话

33:40.580 --> 33:41.700
你就没有任何进步了

33:42.340 --> 33:43.620
你所有的进步

33:43.620 --> 33:46.980
一定要去战胜困难才能得到的

33:46.980 --> 33:48.260
你没有战胜困难过

33:48.260 --> 33:49.540
那就你不可能是有

33:49.540 --> 33:50.900
不可能有进步的

33:50.980 --> 33:52.500
听老师讲吗

33:52.500 --> 33:53.860
听老师讲不就解决了吗

33:54.420 --> 33:55.460
你光听老师讲

33:55.460 --> 33:56.580
你自己不去做的话

33:57.700 --> 33:59.700
那是老师进步了

33:59.700 --> 34:00.980
老师在不断战胜困难

34:00.980 --> 34:01.460
你没有

34:02.340 --> 34:03.460
所以说呢不要怕困难

34:03.460 --> 34:04.260
困难是好事

34:04.260 --> 34:04.980
战胜他就行了

34:05.540 --> 34:07.300
OK把这个做成这个样子

