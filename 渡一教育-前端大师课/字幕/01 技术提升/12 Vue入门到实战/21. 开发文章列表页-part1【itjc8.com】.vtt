WEBVTT

00:00.500 --> 00:03.780
咱们的文章列表也就可以开动了

00:03.780 --> 00:06.020
因为这个组建完成了

00:06.020 --> 00:08.180
然后这边那个列表组建呢

00:08.180 --> 00:10.820
近在掌控中 因为它比较简单

00:10.820 --> 00:12.660
所以说直接开干吧

00:12.660 --> 00:15.620
文章列表首先就涉及到一个远程数据

00:15.620 --> 00:19.220
那么我们是不是又要打开之前的那个个人空间

00:19.220 --> 00:21.620
前台页面接口打开啊

00:21.620 --> 00:25.220
我们的接口里面的服务器啊之前的接口文章呢

00:25.220 --> 00:26.740
告诉我们服务器那边呢

00:26.740 --> 00:30.580
它会给我们提供一个一些关于博客文章的接口

00:30.580 --> 00:32.580
包括获取所有分类啊

00:32.580 --> 00:35.860
包括获取分页获取博客的接口它都会给我们提供

00:35.860 --> 00:38.260
只不过呢目前的可能服务器那边

00:38.260 --> 00:39.300
还没有开发完成

00:39.300 --> 00:41.220
那将来呢肯定会开发完成的

00:41.220 --> 00:42.500
就是开发完成之前呢

00:42.500 --> 00:45.140
我们可以暂时用模拟数据来搞定

00:45.140 --> 00:46.900
好来吧老规矩啊

00:46.900 --> 00:48.260
没什么好说的

00:48.260 --> 00:51.300
照这个API里边去新增一个blog

00:52.580 --> 00:55.220
来跟博客相关的东西啊

00:55.220 --> 00:56.580
放进去

00:57.300 --> 00:59.780
首先还是导致我们自己写的这个request

01:01.620 --> 01:03.780
说说一定要跟着我写不写的话

01:03.780 --> 01:05.380
这之前写的啥都忘了

01:05.380 --> 01:07.620
就这个东西我们封装的request对不对

01:08.900 --> 01:10.580
然后呢我们这里提供一些方法吧

01:11.940 --> 01:12.740
提供一些方法

01:13.620 --> 01:15.620
比方说得到getBlogs

01:17.840 --> 01:18.480
这是什么呢

01:18.480 --> 01:19.600
这是获取博客

01:20.160 --> 01:20.960
获取博客

01:22.080 --> 01:22.960
列表数据

01:24.240 --> 01:25.760
那么这个获取博客的时候呢

01:25.760 --> 01:27.040
我们可以看到这里啊

01:27.120 --> 01:29.200
它是可能会传递一些参数的

01:30.800 --> 01:31.600
获取博客啊

01:32.080 --> 01:34.080
这个结果它可能会传递一些参数

01:34.720 --> 01:35.360
哪些参数呢

01:35.360 --> 01:36.560
这里告诉你Patches列表

01:36.560 --> 01:37.600
就是参数的列表

01:37.600 --> 01:39.440
它可能会传递配级就第几页

01:40.000 --> 01:42.480
然后呢传递Namets每一件多少条夜容量

01:43.040 --> 01:44.960
然后呢哪个分类啊分类的

01:44.960 --> 01:46.560
如果说是附一的话

01:46.560 --> 01:47.920
就表示是全部分类

01:48.560 --> 01:49.840
然后呢是个keyword

01:50.880 --> 01:52.560
这个是查询的关键字

01:52.560 --> 01:53.680
不过我们这个页面上呢

01:53.680 --> 01:55.840
还不设计查询啊没有查询

01:56.000 --> 01:56.720
所以说是查询的

01:56.720 --> 01:58.080
你们要做自己去做啊

01:58.080 --> 01:59.120
我这里就不弄了

01:59.120 --> 02:00.880
所以说你这边给我传啥呢

02:00.880 --> 02:02.320
传递页嘛

02:02.320 --> 02:03.360
默认为一

02:03.360 --> 02:04.240
Namets呢

02:04.240 --> 02:05.360
默认为十

02:05.360 --> 02:06.080
啊可以

02:06.080 --> 02:06.880
给他个默认字嘛

02:06.880 --> 02:07.760
可以不传递

02:07.760 --> 02:08.960
然后Catcury ID

02:10.480 --> 02:12.480
这个呢默认为附一嘛

02:13.360 --> 02:15.120
就等于这些东西给我传过来

02:16.320 --> 02:17.920
传过来之后呢

02:17.920 --> 02:18.640
我们这边

02:19.520 --> 02:20.960
就直接是通过阿迪克斯

02:20.960 --> 02:22.400
去获取玩的事了

02:22.400 --> 02:22.640
get

02:23.840 --> 02:25.040
请求什么地址呢

02:25.200 --> 02:26.640
请求这这个地址

02:26.640 --> 02:27.360
API blog

02:28.320 --> 02:30.080
因为我们这里的有代理对不对

02:31.520 --> 02:32.000
有代理

02:32.000 --> 02:32.880
凡是一API开头的

02:32.880 --> 02:35.360
还会转发到我们的这个测试服务器

02:35.360 --> 02:36.560
不过呢我们目前测试服务器

02:36.560 --> 02:37.680
还没有出来而已

02:37.680 --> 02:38.320
将来出来了

02:38.320 --> 02:40.320
过后呢把默可数据一删

02:40.320 --> 02:41.120
代理就生效了

02:41.920 --> 02:44.240
好请求这个地址啊

02:44.240 --> 02:46.080
然后呢给他一些参数

02:46.080 --> 02:47.120
参数怎么配置呢

02:47.120 --> 02:48.000
参数在这里配置

02:48.880 --> 02:50.080
一个小时里边参数

02:50.080 --> 02:52.000
可以通过这个Pirals来进行配置

02:52.640 --> 02:53.440
有哪些参数呢

02:54.400 --> 02:55.680
有Limit

02:55.680 --> 02:57.440
有KatakoryID

02:57.440 --> 02:58.800
这个keyword就算了吧

02:58.800 --> 03:00.640
keyword呢我们反正这个页面有用不到

03:01.200 --> 03:02.000
好那么最终呢

03:02.000 --> 03:03.760
他会返回给我们一个结果

03:03.760 --> 03:05.120
好我们直接锐上就行了

03:05.840 --> 03:07.440
getBlogs就写完了

03:07.440 --> 03:08.640
获取博客列表

03:08.640 --> 03:10.800
然后呢还有一个就是获取博客的分类

03:11.680 --> 03:13.200
获取博客分类

03:14.400 --> 03:15.520
getBlogTypes

03:17.760 --> 03:19.440
分类的话他就没有什么参数了

03:19.440 --> 03:20.320
直接获取完成了

03:20.320 --> 03:22.080
因为分类的他毕竟数量有限

03:22.160 --> 03:24.720
你不可能整个成千上万的分类吧

03:24.720 --> 03:26.720
对吧所以说这一块呢我就不分页了

03:26.720 --> 03:28.400
就哪些分页哪些不分页呢

03:28.400 --> 03:29.600
就一般来说数量

03:29.600 --> 03:31.760
他在数量级比较小的东西

03:31.760 --> 03:32.720
他就不用分页了啊

03:32.720 --> 03:33.760
全部扔过来就完事了

03:34.800 --> 03:36.400
如果说数量级比较大的

03:36.400 --> 03:38.560
不可控的将来增加的比较

03:38.560 --> 03:39.680
可能比较多的

03:39.680 --> 03:41.920
那么像这种东西呢就需要行分页

03:43.120 --> 03:45.520
这边就去请求那个BlogType

03:46.080 --> 03:46.800
请求这个地址

03:48.160 --> 03:49.120
然后呢有没有参数呢

03:49.120 --> 03:50.160
没有什么参数传统

03:50.160 --> 03:51.280
那直接行去就完事了

03:52.560 --> 03:53.360
请求完了过后呢

03:53.360 --> 03:56.240
他响应的就是会响应一些分类的数据

03:56.240 --> 03:57.440
我们以后再看响应吧

03:58.000 --> 03:58.800
好了保存

03:58.800 --> 04:00.240
那么这是获取博客分类

04:00.240 --> 04:01.920
那写完了过后自然的测试一下

04:01.920 --> 04:03.680
呗目前写的代码了

04:03.680 --> 04:05.920
跟这个维有没有什么关系啊

04:05.920 --> 04:06.800
来测试一下

04:07.280 --> 04:08.480
导媒的接试里边去

04:08.480 --> 04:09.840
随便找个地方测试一下

04:09.840 --> 04:11.920
随便测试一下

04:13.600 --> 04:14.160
然后导入

04:16.000 --> 04:17.280
导入 from

04:19.360 --> 04:20.480
API blog

04:23.220 --> 04:24.180
就全部导入进来吧

04:25.060 --> 04:26.260
BlogAPI

04:27.700 --> 04:31.220
好BlogAPI首先来获取所有的博客分类

04:35.010 --> 04:35.410
输出

04:35.970 --> 04:36.930
博客分类

04:37.970 --> 04:38.210
R

04:38.690 --> 04:41.410
然后呢再获取分页来获取博客

04:42.130 --> 04:43.330
BlogGizBlogs

04:45.170 --> 04:46.130
分页获取博客

04:46.690 --> 04:47.010
好

04:47.010 --> 04:48.050
然后呢这边

04:48.050 --> 04:50.130
博客要传一些参数吧

04:50.130 --> 04:51.890
第二页每页显示20条

04:52.450 --> 04:53.170
呃

04:53.170 --> 04:53.890
内别呢

04:53.890 --> 04:54.370
维三

04:54.370 --> 04:55.090
随便

04:55.090 --> 04:56.130
内别id维三

04:56.130 --> 04:56.770
随便写吧

04:56.770 --> 04:57.810
就是瞎写

04:57.810 --> 04:58.210
呃

04:58.210 --> 04:59.650
然后呢得到博客

05:00.530 --> 05:01.410
反正是测试嘛

05:02.210 --> 05:03.490
接下来我们来看一下界面啊

05:06.960 --> 05:07.280
这边

05:08.320 --> 05:09.440
点击右键检查

05:10.320 --> 05:11.280
控制台刷新

05:12.320 --> 05:13.600
哎我们发现了一个

05:13.600 --> 05:14.960
500的错误对吧

05:14.960 --> 05:16.960
为什么出错了呢

05:19.890 --> 05:21.330
啊对了的啊对了的

05:21.330 --> 05:21.730
呃

05:23.570 --> 05:24.050
这边

05:24.050 --> 05:25.250
哎等一下啊等一下

05:25.330 --> 05:26.850
这边默可接触是500

05:27.810 --> 05:29.010
为什么是500呢

05:29.010 --> 05:29.490
我看一下

05:29.490 --> 05:31.090
默可接触他没有拦截他呀

05:32.130 --> 05:32.530
blog

05:34.370 --> 05:34.930
blog

05:36.210 --> 05:37.330
API banner

05:37.330 --> 05:38.370
我们拦截了的

05:39.250 --> 05:40.610
哎他为什么会

05:40.610 --> 05:41.650
导致500呢

05:44.640 --> 05:46.240
是默可接触给我发出的

05:46.800 --> 05:48.000
给我发出了500

05:48.000 --> 05:49.360
实际上请求是没有发出去

05:49.360 --> 05:50.400
哦请求发出去了

05:51.840 --> 05:52.800
请求发出去了

05:55.780 --> 05:57.700
他说我无法代理请求

05:58.420 --> 06:00.580
从8081到这个

06:01.140 --> 06:01.940
哦明白了

06:01.940 --> 06:04.020
就是不是默可接触是这个

06:04.020 --> 06:04.500
这个东西

06:05.060 --> 06:06.660
这个东西这个服务器呢

06:06.660 --> 06:07.620
是不存在的对不对

06:07.620 --> 06:08.740
我们这里是不存在的

06:08.740 --> 06:09.220
所以说呢

06:10.820 --> 06:12.260
这也请求发不出去啊

06:12.260 --> 06:13.540
导致了产生500错误

06:13.540 --> 06:14.260
那么这个地方呢

06:14.260 --> 06:15.860
我们因为我们的测试服务器

06:15.860 --> 06:16.500
并没有完成

06:17.300 --> 06:18.660
模拟真实情况嘛

06:19.300 --> 06:20.260
前后端一起开发

06:20.260 --> 06:21.860
后端还没有完成测试服务器

06:21.860 --> 06:22.740
说这一块呢

06:22.740 --> 06:24.580
我们暂时需要模拟数据啊

06:24.580 --> 06:25.380
模拟数据的时候呢

06:25.380 --> 06:27.060
我们当时已经导入了这个blog

06:27.540 --> 06:28.580
就这个空文件

06:28.580 --> 06:30.020
那么这里不要让我们模拟的

06:30.020 --> 06:31.380
跟这边是差不多的

06:31.380 --> 06:32.580
好我们一个个模拟

06:32.580 --> 06:33.620
首先呢模拟这个

06:35.940 --> 06:36.900
博客类行吧

06:36.900 --> 06:37.700
博客分类

06:37.700 --> 06:39.060
先把博客分类模拟出来

06:39.700 --> 06:40.340
好来吧

06:40.340 --> 06:41.380
我们模拟博客分类

06:43.540 --> 06:44.340
blog

06:45.220 --> 06:46.020
好我们把这边

06:47.140 --> 06:47.940
复制一下吧

06:47.940 --> 06:48.500
扔过来

06:50.720 --> 06:51.760
好博客分类呢

06:51.760 --> 06:52.960
我们也是一样啊

06:52.960 --> 06:55.120
首先匹配的是url地址

06:55.120 --> 06:56.640
当我们请求这样的地址的时候

06:56.640 --> 06:57.280
blog type

06:58.000 --> 06:59.360
当我们请求这样的地址的时候呢

06:59.360 --> 07:00.480
我给他一个模办

07:00.480 --> 07:02.400
你去帮我生成一个模拟数据

07:02.400 --> 07:03.920
好那么这里的数组呢

07:03.920 --> 07:06.000
data是一个数组

07:06.000 --> 07:08.080
这个数组里边有几条呢

07:08.080 --> 07:09.360
分类呢我们就随便写

07:09.360 --> 07:10.080
下写几条吧

07:11.840 --> 07:12.400
模拟嘛

07:13.120 --> 07:14.720
10条啊10个分类

07:15.520 --> 07:16.960
或者是10到20个分类

07:16.960 --> 07:17.840
你随随随便来

07:20.160 --> 07:20.960
然后这里边呢

07:20.960 --> 07:21.520
每一个分类呢

07:21.520 --> 07:22.560
它实际上是一个对象啊

07:22.560 --> 07:23.920
那么这个对象的格式是长了

07:23.920 --> 07:24.880
就这个就需要跟

07:24.880 --> 07:26.080
跟我们的接口稳当来了

07:26.640 --> 07:27.280
blog分类

07:27.280 --> 07:28.720
它告诉我们的这个对象格式

07:28.720 --> 07:29.600
那大概是这个样子

07:33.490 --> 07:34.770
首先呢有个id

07:34.770 --> 07:36.130
就是分类的文一编号

07:36.130 --> 07:37.010
这个文一编号呢

07:37.010 --> 07:38.050
我们干脆去自征呗

07:39.090 --> 07:39.490
加1

07:41.250 --> 07:41.730
自征呗

07:42.690 --> 07:43.330
加个数线

07:44.530 --> 07:45.490
那么也就说出对

07:45.490 --> 07:46.530
从一个数字开始自征

07:47.810 --> 07:49.810
然后呢name的blog的分类名字呢

07:49.810 --> 07:51.170
就是分类

07:51.170 --> 07:52.210
然后呢我们这边呢

07:52.210 --> 07:53.330
就把id带过去吧

07:54.610 --> 07:57.890
id把id把这个id的值放到这个位置

07:57.970 --> 07:59.970
就是把它做成分类的名字

07:59.970 --> 08:01.330
也反正这是测试数据

08:01.330 --> 08:02.130
无所谓的

08:02.130 --> 08:04.290
将来呢就会变成正式的数据啊

08:04.290 --> 08:06.610
articleCort表示的是

08:06.610 --> 08:08.450
该分类下文章的数量

08:08.450 --> 08:09.250
那么这个数量呢

08:09.250 --> 08:10.130
我们随机一可不

08:11.170 --> 08:12.210
随机一个数量

08:12.210 --> 08:13.010
然后实了

08:15.330 --> 08:17.410
或者是0到3半

08:17.410 --> 08:19.010
随便下随机一个

08:19.570 --> 08:20.610
随便写个数字就行了

08:20.610 --> 08:23.010
那么它就会在数字之间进随机

08:23.010 --> 08:25.010
order order来表示的是顺序

08:25.970 --> 08:27.250
就是分类的顺序

08:27.410 --> 08:28.050
这个顺序呢

08:28.050 --> 08:29.810
我们目前这个界面上是没用的

08:29.810 --> 08:31.410
对服务端那边可能会有用

08:31.410 --> 08:32.930
或者是对后台管理或者有用

08:32.930 --> 08:34.850
就目前这个网页上是没有用的

08:34.850 --> 08:35.970
这个order是什么意思呢

08:35.970 --> 08:37.090
就是有的时候呢

08:37.090 --> 08:38.370
像这种分类数据啊

08:38.370 --> 08:39.330
哪个显示在前边

08:39.330 --> 08:40.210
哪个显示在后边呢

08:40.210 --> 08:41.490
它需要一个排序

08:41.490 --> 08:42.050
那么正的

08:42.050 --> 08:43.650
我们用这个从小到大进行排序

08:44.130 --> 08:45.730
这个网上我们目前没用啊

08:45.730 --> 08:46.290
没用的话

08:46.290 --> 08:47.810
我甚至不要都可以

08:47.810 --> 08:49.170
因为反正界面上没用吧

08:49.170 --> 08:51.170
实际上服务器那边会给我们传过来

08:51.170 --> 08:52.450
但是实际上我们这边没用

08:52.450 --> 08:54.370
那既然没用的话我就随便弄

08:55.090 --> 08:56.210
我们就去自征呗

08:56.770 --> 08:57.170
整理

08:57.890 --> 08:58.210
好

08:58.210 --> 08:58.850
行了

08:58.850 --> 09:00.690
我们来看一下这个分类的数据能不能拿到

09:01.410 --> 09:02.770
分类的数据什么拿到了

09:02.770 --> 09:03.810
分类一二三四

09:03.810 --> 09:04.130
你看

09:04.770 --> 09:05.410
差不多了

09:05.410 --> 09:05.730
对不对

09:06.450 --> 09:07.890
分类的数据就模拟出来了

09:08.690 --> 09:10.690
接下来我们再来模拟那个文章

09:13.790 --> 09:14.670
再来模拟博客

09:14.670 --> 09:16.270
博客现在模拟数据还是有问题

09:16.270 --> 09:18.190
那么我们到了这边来模拟博客数据

09:19.390 --> 09:20.510
模拟博客数据的时候呢

09:20.510 --> 09:21.630
有一个小的问题

09:21.630 --> 09:22.910
我们先把先写出来

09:23.470 --> 09:25.070
API blog

09:25.470 --> 09:26.830
就是首先是这个地方

09:27.550 --> 09:28.270
这个地方呢

09:28.270 --> 09:30.030
我们请求这样的地址的时候呢

09:30.030 --> 09:30.430
要去

09:32.030 --> 09:32.590
拦截

09:32.590 --> 09:33.550
拦截这个请求

09:33.550 --> 09:34.750
然后模拟博客

09:34.750 --> 09:35.230
但是呢

09:35.230 --> 09:36.830
这个他有可能会带参数的呀

09:37.630 --> 09:38.350
对不对

09:38.350 --> 09:39.230
因为他这里呢

09:39.230 --> 09:40.830
地址哪里面可能会带参数

09:42.270 --> 09:43.230
他是不是会带参数

09:43.230 --> 09:43.950
也就是他的地址呢

09:43.950 --> 09:45.390
还有可能不是这个地址

09:45.390 --> 09:46.590
他有可能地址是这个样子

09:47.470 --> 09:48.510
你光哪些这个不够

09:48.510 --> 09:49.470
还要去拦戒什么呢

09:49.470 --> 09:50.830
还要去拦戒这种地址

09:50.830 --> 09:51.710
配级等于

09:52.590 --> 09:53.710
三nm等于

09:54.430 --> 09:54.830
多少

09:54.830 --> 09:54.990
对吧

09:54.990 --> 09:56.430
你们学过这个moke的

09:56.430 --> 09:57.150
那么自然知道

09:57.150 --> 09:57.870
这里应该用什么

09:57.870 --> 09:58.910
政策表达式

09:58.910 --> 10:00.510
就说我可以拦戒这个地址

10:00.510 --> 10:02.350
也可以拦戒后边带问号的

10:02.350 --> 10:02.750
都行

10:02.750 --> 10:04.270
都会都要进行拦戒

10:04.270 --> 10:05.470
你说我们政策表达式

10:05.470 --> 10:06.350
应该怎么写呢

10:06.350 --> 10:06.670
就是

10:08.270 --> 10:08.990
就写到这吧

10:12.480 --> 10:14.320
下面我们来写个政策表达式啊

10:16.620 --> 10:17.420
地址开始

10:17.420 --> 10:18.460
那个开始

10:18.460 --> 10:19.020
然后呢

10:20.700 --> 10:21.580
出现一个鞋杠

10:22.380 --> 10:23.180
鞋杠要转移啊

10:23.180 --> 10:24.140
又写个那这种表达式

10:24.140 --> 10:25.100
没有特殊意识

10:25.100 --> 10:26.300
然后有个API

10:26.300 --> 10:27.340
然后又出现一个鞋杠

10:27.820 --> 10:29.020
然后呢有一个blog

10:29.740 --> 10:30.860
前面都是这样子

10:31.420 --> 10:32.940
后面呢有可能有问号

10:32.940 --> 10:33.980
有可能没有啊

10:33.980 --> 10:34.700
没有问号的话

10:34.700 --> 10:35.820
就直接结束了

10:35.820 --> 10:36.860
对吧

10:36.860 --> 10:38.220
有问号的情况下呢

10:38.220 --> 10:38.860
那么这里呢

10:38.860 --> 10:39.900
我们把它拖起来啊

10:39.900 --> 10:41.660
就看一下有问号的情况

10:41.660 --> 10:42.860
有问号的情况呢

10:42.860 --> 10:43.980
就是出现一个问号

10:43.980 --> 10:45.100
问号主要要转移啊

10:45.100 --> 10:46.700
因为问号有特殊意识

10:46.700 --> 10:47.580
有可能有个问号

10:47.580 --> 10:48.700
问号出现几次呢

10:48.700 --> 10:50.540
出现零次或一次

10:51.260 --> 10:51.660
对吧

10:51.660 --> 10:52.780
你看两个问号的意思啊

10:52.780 --> 10:53.980
第一个问号是普通制服

10:53.980 --> 10:54.940
转移过后的

10:54.940 --> 10:55.580
那么这个普通

10:55.580 --> 10:57.020
前面的普通制服出现几次呢

10:57.020 --> 10:57.980
凌次或一次

10:58.460 --> 11:00.460
好凌次或一次后边呢

11:00.460 --> 11:01.260
问号后边呢

11:01.260 --> 11:01.740
就可以

11:01.740 --> 11:02.220
我就没认为

11:02.220 --> 11:03.420
他是任意制服了吧

11:03.420 --> 11:05.980
任意制服出现一次或多次

11:06.540 --> 11:08.700
那么整个这一块的整体呢

11:08.700 --> 11:09.820
就整体这一块呢

11:09.820 --> 11:12.140
出现零次或一次

11:12.700 --> 11:13.900
能理解这个意思吧

11:13.900 --> 11:14.620
就这一坨呢

11:14.620 --> 11:15.500
他可能不出现

11:16.060 --> 11:17.020
就直接结束了

11:17.020 --> 11:18.620
有可能出现过后啊

11:18.620 --> 11:19.260
出现的出现

11:19.260 --> 11:19.820
出现什么东西

11:19.820 --> 11:20.540
他出现这一坨

11:21.340 --> 11:22.300
然后呢再结束

11:22.940 --> 11:24.540
好写完了正的表的是呢

11:24.540 --> 11:25.820
我们可以测试一下啊

11:25.900 --> 11:27.500
这里可以测试一下正的表的是

11:27.500 --> 11:28.380
不过这个测试呢

11:28.380 --> 11:30.060
需要安装一个vscode的插件

11:30.060 --> 11:31.100
这个插件名字啊

11:31.100 --> 11:31.820
实在不好意思

11:31.820 --> 11:33.420
我实在记不住了

11:33.420 --> 11:33.980
这个插件名字

11:34.940 --> 11:36.300
这个插件名字是啥呀

11:39.980 --> 11:41.740
我实在不知道这个插件有啥名字了

11:41.740 --> 11:42.460
你可以去

11:44.540 --> 11:45.180
收一下吧

11:45.740 --> 11:46.780
摆度去摆度一下啊

11:46.780 --> 11:48.700
就是vscode的表的正的表的是

11:48.700 --> 11:49.500
测试的插件

11:50.540 --> 11:50.940
好

11:50.940 --> 11:51.900
那么我们来试一下

11:53.020 --> 11:54.780
那么必须要以API开头

11:54.780 --> 11:55.660
然后呢一blog

11:56.220 --> 11:56.860
这个是可以

11:56.860 --> 11:57.340
看

11:57.340 --> 11:58.460
这个东西是可以匹配的

11:59.100 --> 11:59.980
啊有个背景颜色

12:00.620 --> 12:01.900
啊如果这样子呢

12:01.900 --> 12:03.500
哎这样子为什么可以匹配

12:04.060 --> 12:05.340
这样子是不能匹配的呀

12:06.620 --> 12:07.580
好看一下吧

12:07.580 --> 12:09.420
这样子他为什么说可以匹配呢

12:10.940 --> 12:11.580
blog

12:12.220 --> 12:13.260
首先看能不能

12:13.260 --> 12:14.700
看能不能这样子能不能匹配

12:17.170 --> 12:18.370
啊这样子是可以匹配的

12:19.010 --> 12:20.690
哎这样子他为什么可以匹配

12:20.690 --> 12:21.330
我看一下啊

12:23.820 --> 12:24.780
哦应该是没

12:26.380 --> 12:27.500
blog

12:27.500 --> 12:28.780
然后后边是

12:30.220 --> 12:30.620
哦

12:31.580 --> 12:32.700
有这个东西啊

12:33.420 --> 12:34.460
有这个东西

12:34.460 --> 12:36.940
哦那么这个问号就必须要出现一次了

12:36.940 --> 12:38.300
必须要出现一次问号

12:38.300 --> 12:41.100
啊因为我整个这个整体是出现零次和一次

12:41.100 --> 12:41.500
对吧

12:41.500 --> 12:42.620
所以这个问号呢

12:42.620 --> 12:43.900
如果说要出现的话

12:43.900 --> 12:45.100
就必须要出现一个问号

12:45.100 --> 12:46.700
啊那么这个东西现在就不能匹配了

12:46.700 --> 12:47.260
看到没

12:47.260 --> 12:49.260
啊这个这个是可以匹配的

12:49.660 --> 12:50.700
这个是不能匹配的

12:50.700 --> 12:51.820
啊加上问号

12:53.340 --> 12:54.540
哎加上问号后面有东西

12:54.540 --> 12:55.580
那是可以匹配的

12:55.580 --> 12:57.820
对吧那么就匹配这样的地址啊

12:57.820 --> 12:58.940
匹配好了过后呢

13:00.780 --> 13:02.700
接下来呢是get寻求啊

13:02.700 --> 13:03.820
寻求方法是get

13:03.820 --> 13:05.100
然后呢我们是不是给他一个模板

13:05.980 --> 13:06.620
模板数据

13:06.620 --> 13:07.980
那么给他什么模板数据呢

13:07.980 --> 13:08.940
我们看一下我们的

13:10.460 --> 13:11.340
API文档

13:12.300 --> 13:13.740
我们的模板数据里边

13:13.740 --> 13:15.260
够的message都很简单

13:15.260 --> 13:16.220
关键是这个data

13:16.220 --> 13:17.100
啊我们看一下吧

13:17.100 --> 13:19.180
模板数据我们现在还是给他一个message

13:19.580 --> 13:20.220
coded

13:20.220 --> 13:21.340
固定为0

13:21.340 --> 13:22.780
message为一个控制不算

13:22.780 --> 13:23.900
表示没有错误

13:23.900 --> 13:24.460
data呢

13:24.940 --> 13:26.220
他不是一个数组

13:26.220 --> 13:26.940
他是一个对象

13:27.500 --> 13:28.220
这个data呢

13:28.220 --> 13:29.900
我们看一下他是个对象啊

13:29.980 --> 13:32.060
对象里边哪些属性的一个偷偷种数

13:32.060 --> 13:33.580
就表示一共有多少文章

13:33.580 --> 13:33.820
对吧

13:33.820 --> 13:34.940
总记录数

13:34.940 --> 13:35.900
那么一共多少文章啊

13:35.900 --> 13:36.860
这个可以随机

13:37.660 --> 13:38.460
这个很简单

13:39.100 --> 13:39.660
可以随机

13:40.940 --> 13:42.060
比方说我们

13:43.180 --> 13:44.860
2000到3000条吧

13:45.980 --> 13:47.420
3000个文章

13:47.420 --> 13:48.620
那么就随便写个数字

13:49.180 --> 13:50.860
表生成随机生成一个数字

13:50.860 --> 13:51.820
然后这个rose

13:53.580 --> 13:54.780
rose是一个数组

13:54.780 --> 13:57.180
表示当前页的文章数据

13:57.180 --> 13:59.020
那么关键是这个数组有多少箱呢

14:01.300 --> 14:02.660
关键是个数组

14:02.660 --> 14:03.380
有10箱

14:03.940 --> 14:04.500
有20箱

14:05.140 --> 14:06.100
那么取决于什么

14:06.100 --> 14:08.260
取决于一个传递过去的这个nimate

14:08.740 --> 14:09.140
对不对

14:09.140 --> 14:10.020
夜容量

14:10.020 --> 14:11.220
夜容量传递的是10

14:11.220 --> 14:12.100
那么每夜10条

14:12.100 --> 14:13.380
那自然返回的数组里边

14:14.180 --> 14:14.820
就有10个

14:15.380 --> 14:16.580
当然最后一夜出来

14:16.580 --> 14:17.780
最后一夜不管它

14:17.780 --> 14:18.820
反正是测试数据吧

14:18.820 --> 14:19.940
不用测试的那么严格

14:20.820 --> 14:21.940
如果说你刚传递到20

14:21.940 --> 14:23.060
那表示每夜有20条

14:23.060 --> 14:24.660
那么这个数据就应该有20个

14:25.300 --> 14:26.100
当然那里可以

14:26.100 --> 14:27.300
你说反正是测试数据

14:27.300 --> 14:27.860
无所谓

14:27.860 --> 14:29.060
管它够传递什么nimate

14:29.060 --> 14:29.940
我都给它返回的

14:30.660 --> 14:31.940
是20个数据

14:31.940 --> 14:33.060
反正是测试

14:33.060 --> 14:34.500
但是那如果说你要想

14:34.500 --> 14:36.020
你要想尽量的

14:36.740 --> 14:38.740
贴合实际情况

14:38.740 --> 14:40.500
该传多少nimate

14:40.500 --> 14:41.940
那么就返回多少个数据

14:41.940 --> 14:43.700
那么这个玩意这个地方是不是动态的了

14:44.260 --> 14:46.340
动态的话你就不能写这个静态模板了

14:46.900 --> 14:47.620
那怎么办了

14:47.620 --> 14:48.660
如果说你写静态模板

14:48.660 --> 14:49.540
模板其实也没事

14:49.540 --> 14:50.420
反正是测试

14:50.420 --> 14:51.860
但是如果说你希望

14:51.860 --> 14:53.220
更加贴合实际情况

14:53.220 --> 14:54.820
那么这个地方是应该是动态的

14:54.820 --> 14:56.660
要根据它传过来的那个nimate

14:57.380 --> 14:58.980
来得到它的数据

14:59.060 --> 15:00.180
那这个玩意怎么动了

15:00.740 --> 15:01.940
我们就可以这样子

15:01.940 --> 15:03.300
因为我们知道默可见识里面

15:03.300 --> 15:05.300
它第三个是可以写了函数的

15:06.020 --> 15:07.860
把函数的返回结果作为模板

15:08.420 --> 15:09.540
函数里面有个参数

15:09.540 --> 15:10.340
就op形式

15:10.340 --> 15:11.540
这个op形式是啥

15:11.540 --> 15:12.340
就随时就是

15:14.420 --> 15:15.860
请求了一些相关信息

15:15.860 --> 15:17.380
我们来输出一下这个op形式吧

15:18.180 --> 15:19.220
这是你们学过的

15:19.220 --> 15:21.060
然后最终返回的是一个模板

15:21.540 --> 15:22.660
那么先比较说

15:22.660 --> 15:24.500
随便来个20条数据

15:24.500 --> 15:25.220
一个空对象

15:26.020 --> 15:26.740
先随便来一个

15:27.540 --> 15:29.380
让它不要爆错

15:29.380 --> 15:31.860
好 你看博客数据

15:31.860 --> 15:34.420
博客数据为什么变成这样子

15:35.460 --> 15:36.740
看一下

15:36.740 --> 15:38.260
博客数据

15:38.260 --> 15:40.500
这个应该是用这种方式

15:40.500 --> 15:42.340
Moke

15:42.340 --> 15:44.340
模拟一个数据

15:44.340 --> 15:45.460
你这个返回什么

15:45.460 --> 15:46.980
它就是得到了什么数据

15:46.980 --> 15:49.380
所以说我们这里要模拟一个数据出来

15:55.330 --> 15:56.450
这个博客

15:56.450 --> 15:57.490
你看啊

15:59.250 --> 16:00.370
偷偷 对吧

16:00.530 --> 16:01.090
Rose

16:04.080 --> 16:05.600
现在是20条数据

16:05.600 --> 16:06.880
那么它不一定是20条

16:08.720 --> 16:10.000
哎呦 我数标没电了

16:10.000 --> 16:11.280
没电 我就用滑板

16:11.280 --> 16:11.840
出锋板吧

16:12.640 --> 16:13.600
它不一定是20条

16:13.600 --> 16:14.480
那么我们这里呢

16:14.480 --> 16:17.920
希望通过它传入了这个nm

16:18.560 --> 16:20.880
来设置它的数量

16:20.880 --> 16:22.080
那传入了nm在哪呢

16:22.080 --> 16:23.120
这个op形式里面

16:23.120 --> 16:24.720
你看是不是一个UIL

16:24.720 --> 16:26.720
这个UIL里面是不是包含这个nm

16:27.280 --> 16:27.920
对不对

16:27.920 --> 16:29.360
那么这个nm怎么来获取呢

16:29.360 --> 16:30.800
我们只能拿到这个UIL

16:30.880 --> 16:32.400
我们如何把这个UIL

16:32.400 --> 16:34.240
等nm可提取出来了

16:34.240 --> 16:35.280
那么这个地方呢

16:35.280 --> 16:37.040
可以用第三方库

16:37.040 --> 16:38.480
比方说我们用这个第三方库啊

16:39.760 --> 16:41.680
叫做query stream

16:42.400 --> 16:43.680
非常简单的一个地上方库

16:43.680 --> 16:46.000
专门来处理这个地址南参数的

16:47.120 --> 16:47.680
你看吧

16:47.680 --> 16:48.560
就这个地上方库

17:00.580 --> 17:01.940
它没有什么文档

17:01.940 --> 17:03.860
其实也不用去看它这么文档

17:03.860 --> 17:04.820
这个

17:04.820 --> 17:06.420
因为它这个query stream

17:06.500 --> 17:07.460
跟那个loader.js

17:07.460 --> 17:10.260
query stream的功能是一样的

17:10.260 --> 17:11.540
只不过它在流浪器里面

17:11.540 --> 17:12.340
缓进去而执行了

17:12.340 --> 17:12.820
不过呢

17:12.820 --> 17:13.860
大家还没有学习过

17:13.860 --> 17:14.340
你这loader

17:14.340 --> 17:15.380
那我就说一下吧

17:15.380 --> 17:16.420
它没有什么文档

17:17.060 --> 17:18.180
那我就把它停止

17:18.180 --> 17:22.340
先安装npm iquery stream

17:25.120 --> 17:25.920
非常简单啊

17:25.920 --> 17:26.800
非常非常简单

17:31.900 --> 17:32.140
好

17:32.140 --> 17:33.100
然后那我们再运行

17:35.660 --> 17:36.300
这里

17:36.300 --> 17:37.820
我们首先导入这个query stream

17:37.820 --> 17:39.260
qs吧

17:39.260 --> 17:41.020
query stream

17:41.020 --> 17:42.060
导入进来

17:42.220 --> 17:43.020
然后这边呢

17:43.020 --> 17:44.860
我们是不是可以通过它的url

17:44.860 --> 17:46.620
来拿到它的url地址

17:46.620 --> 17:47.740
那么query stream里边呢

17:47.740 --> 17:48.540
有一个东西啊

17:48.540 --> 17:50.540
就是qs里边有一个东西叫pulse

17:52.460 --> 17:53.420
就是格式化

17:53.420 --> 17:54.620
你把一个字不算给它

17:54.620 --> 17:55.420
它进行格式化

17:55.420 --> 17:57.020
我来看一下格式化的最终结果

17:58.380 --> 17:59.260
输出这个query

18:00.540 --> 18:00.860
好

18:00.860 --> 18:01.340
保存啊

18:02.060 --> 18:02.460
然后呢

18:02.460 --> 18:03.420
我们这边再看

18:05.700 --> 18:06.100
小心

18:10.580 --> 18:11.060
拿到了

18:11.060 --> 18:11.620
你看

18:11.620 --> 18:12.740
拿到了就是是不是

18:12.740 --> 18:13.460
拿到这个里面

18:13.460 --> 18:14.340
不过在前面

18:14.340 --> 18:16.580
把问号前面的东西

18:16.660 --> 18:17.860
也给我们夹入进去了

18:17.860 --> 18:19.220
不过我们不用管它

18:19.220 --> 18:20.180
因为它最好给

18:20.180 --> 18:20.820
给它的时候呢

18:20.820 --> 18:22.260
最好是问号后边的东西

18:22.260 --> 18:22.580
其实呢

18:22.580 --> 18:22.900
我们

18:23.780 --> 18:25.620
也可以把它问号切割一下吧

18:25.620 --> 18:26.020
不用

18:26.020 --> 18:26.820
不过不用管它

18:26.820 --> 18:27.220
其实

18:27.220 --> 18:28.420
我们最多的目的

18:28.420 --> 18:29.380
就说拿这个玩意吧

18:29.380 --> 18:30.580
只要拿到就行了

18:30.580 --> 18:30.740
好

18:30.740 --> 18:31.380
拿到过后呢

18:31.380 --> 18:32.180
我们把这个nims

18:34.290 --> 18:35.250
nims放哪呢

18:35.250 --> 18:35.810
是不是放这

18:36.290 --> 18:36.370
好

18:36.370 --> 18:37.570
所以说我们这个属性呢

18:37.570 --> 18:38.610
用个模板支付刷呗

18:40.610 --> 18:41.330
把个nims

18:42.690 --> 18:43.170
query

18:43.890 --> 18:44.530
nims

18:44.530 --> 18:45.250
放这个位置

18:46.290 --> 18:46.850
对吧

18:47.250 --> 18:47.650
如果说

18:47.650 --> 18:48.690
它没有没有里面层的

18:48.690 --> 18:49.970
我就默认为是吗

18:50.770 --> 18:51.410
默认为是

18:54.670 --> 18:54.830
好

18:54.830 --> 18:55.070
ok

18:55.070 --> 18:55.550
啊

18:55.550 --> 18:56.030
拿到了

18:57.710 --> 18:58.750
为什么要爆出呢

19:00.510 --> 19:00.990
等一下啊

19:01.710 --> 19:02.910
我看这个属性名

19:02.910 --> 19:03.710
为什么要爆出

19:06.270 --> 19:06.910
Rose

19:08.750 --> 19:09.070
哎

19:09.070 --> 19:09.950
哪里写出来啊

19:16.480 --> 19:17.600
这是哪里写出来

19:18.640 --> 19:19.440
我看一下是

19:20.240 --> 19:20.880
这个地方

19:22.240 --> 19:22.480
哎

19:22.480 --> 19:23.920
这个地方有鱼发错误

19:29.010 --> 19:30.050
就起得乖了

19:34.320 --> 19:34.880
等一下啊

19:36.320 --> 19:37.680
这是哪里写错了呀

19:40.450 --> 19:41.170
这个没错吗

19:43.780 --> 19:44.500
哦

19:44.500 --> 19:45.140
明白了

19:45.140 --> 19:46.180
我这用了表达式

19:46.180 --> 19:46.500
哎呀

19:46.500 --> 19:47.620
这写的写的写蒙了

19:47.620 --> 19:48.340
我用了表达式

19:48.340 --> 19:49.460
应该把应该用属性

19:49.460 --> 19:50.340
表达式的鱼发

19:52.020 --> 19:53.060
写的写的写蒙了

19:53.700 --> 19:54.020
好

19:54.020 --> 19:55.620
那么这个生成多少行了

19:55.620 --> 19:55.860
好

19:55.860 --> 19:56.900
先让我们来看一下啊

19:56.900 --> 19:57.300
保存

19:58.580 --> 19:58.980
这边

19:58.980 --> 20:00.020
到你的留言器边

20:01.700 --> 20:02.740
现在是多少个呢

20:02.740 --> 20:03.780
现在是20个

20:03.780 --> 20:04.100
好

20:04.100 --> 20:04.820
那么我们接下来

20:04.820 --> 20:05.620
我们来测试一下

20:05.620 --> 20:06.580
媚角接试里边

20:06.580 --> 20:07.860
去改动一下这个

20:07.860 --> 20:08.500
liments

20:08.500 --> 20:08.980
改动

20:08.980 --> 20:09.620
改动为10

20:12.270 --> 20:13.630
你看是不是就10条数据了

20:14.350 --> 20:15.070
就就10了

20:15.070 --> 20:15.950
那么这就是根据

20:16.910 --> 20:18.190
根据他传过来的liments

20:18.190 --> 20:20.350
给他生成多少条测试数据

20:20.350 --> 20:20.510
好

20:20.510 --> 20:22.030
那么接下来就是这个对象里面了

20:22.030 --> 20:23.710
对象里面就是生成一些

20:23.710 --> 20:24.430
模拟数据了

20:25.070 --> 20:25.390
来吧

20:25.390 --> 20:26.750
我们把这个复制一下

20:27.630 --> 20:28.270
对象里面

20:29.150 --> 20:30.110
每一篇文章啊

20:30.110 --> 20:31.310
都应该有这么一些数据

20:32.350 --> 20:33.390
一个来吧

20:33.390 --> 20:34.510
首先是文章的id

20:34.510 --> 20:36.590
那么你可以用数字id

20:36.590 --> 20:38.110
就顺便说一下另外一种id

20:38.110 --> 20:38.750
另外一种id

20:38.750 --> 20:40.110
那叫做g有id

20:40.110 --> 20:41.310
就是全局唯一id

20:42.350 --> 20:43.870
它其实因为A塔开头

20:43.870 --> 20:45.790
就表示那个Moke里面有个函数

20:45.790 --> 20:46.110
对不对

20:47.550 --> 20:48.030
是一个函数

20:48.030 --> 20:49.390
叫g有id这个函数

20:49.390 --> 20:51.070
那么通过函数来生成一个id

20:51.070 --> 20:51.870
那么这种id呢

20:52.430 --> 20:53.630
就是个很长的字幕串

20:53.630 --> 20:55.070
它是一个全局唯一的字幕串

20:57.230 --> 20:57.950
不过很累

20:57.950 --> 20:58.270
这边

20:59.070 --> 21:00.670
好 你看是不是这样的id

21:00.670 --> 21:01.390
也可以

21:01.390 --> 21:02.590
我们生成这样的id

21:02.590 --> 21:04.030
总之保证id唯一就行了

21:04.990 --> 21:06.110
好 博客标题呢

21:06.110 --> 21:07.230
其实我们就可以用这个

21:08.030 --> 21:09.550
用这个c台头

21:11.310 --> 21:13.310
生成一个中文的标题

21:21.220 --> 21:21.780
好 你看

21:21.780 --> 21:22.420
生成一个台头

21:22.980 --> 21:23.940
好 没问题吧

21:23.940 --> 21:24.740
好 接下来继续

21:25.700 --> 21:26.580
描述呢

21:26.580 --> 21:27.060
描述呢

21:27.060 --> 21:27.780
我们用一个

21:28.820 --> 21:32.660
叫做cparagraph

21:32.660 --> 21:33.300
好像是这个

21:34.820 --> 21:36.260
有多少句话呢

21:36.260 --> 21:37.540
有一到十句话

21:38.500 --> 21:40.740
中文的段落

21:40.740 --> 21:41.380
一到十个

21:41.940 --> 21:43.860
生成一个中文的段落

21:43.860 --> 21:45.220
一到十个句子

21:46.420 --> 21:47.220
好 咱们来看一下

21:47.940 --> 21:48.660
博客分类

21:52.420 --> 21:53.540
好 这是回不起是不是有了

21:54.100 --> 21:54.420
对不对

21:54.980 --> 21:56.660
生成一些句子

21:56.660 --> 21:57.380
一到十条

21:57.380 --> 21:57.940
十个句子

21:58.500 --> 21:59.460
好 又来啊

21:59.460 --> 22:00.580
category

22:00.580 --> 22:03.060
就是这个博客的锁鼠分类

22:04.740 --> 22:05.700
一个是分类的id

22:05.700 --> 22:07.220
那么这个分类的id就水积了

22:07.220 --> 22:09.140
因为我们前面不是有分类的id吗

22:09.540 --> 22:10.340
那么这个分类的id

22:10.340 --> 22:11.700
我就干脆水积得了

22:11.700 --> 22:12.500
就水积得了

22:12.500 --> 22:13.380
我拿得去弄了

22:15.460 --> 22:17.380
水积就零到十

22:17.380 --> 22:18.500
一到十

22:18.500 --> 22:19.140
随便来一个

22:20.180 --> 22:21.140
分类id呢

22:21.140 --> 22:22.660
就是一个数字

22:22.660 --> 22:23.700
好分类的名称呢

22:23.700 --> 22:25.220
我们就用这个分类id吧

22:25.940 --> 22:26.580
分类id

22:28.020 --> 22:28.740
好 保存

22:28.740 --> 22:29.300
那就看一下

22:29.300 --> 22:30.740
现在的模拟情况

22:31.860 --> 22:32.420
博客

22:32.420 --> 22:34.180
这都没有什么技术含量的

22:34.180 --> 22:35.540
你们自己慢慢去弄

22:35.540 --> 22:36.180
分类id

22:36.660 --> 22:37.940
分类信息

22:38.020 --> 22:40.340
然后呢就是scan number

22:40.340 --> 22:41.220
就是浏览量

22:41.220 --> 22:43.780
这个博客被浏览了多少次

22:43.780 --> 22:45.700
那么这里水积生成一个数字就完事了

22:48.900 --> 22:50.340
零到三千

22:52.430 --> 22:53.390
随便一个数字

22:53.950 --> 22:56.110
好 然后这边是评论数量

22:56.110 --> 22:56.990
也水积生成了

22:57.630 --> 22:59.950
评论数量零到三百

23:00.830 --> 23:01.550
随便生成一个

23:01.550 --> 23:02.830
反正后边写数字就完事了

23:02.830 --> 23:03.150
对吧

23:04.030 --> 23:04.510
然后呢

23:04.510 --> 23:05.470
缩裂图地址

23:05.470 --> 23:06.350
那么缩裂图地址呢

23:06.350 --> 23:08.030
我们这里想水积生成一个图片的了

23:08.750 --> 23:10.270
生成图片的话

23:10.270 --> 23:11.630
我记得默可捷是里面是有的

23:12.270 --> 23:12.990
生成图片

23:16.740 --> 23:17.140
文档

23:23.650 --> 23:24.130
image

23:25.410 --> 23:26.050
生成图片

23:29.360 --> 23:30.160
这里呢

23:30.160 --> 23:32.080
我们就文字

23:33.040 --> 23:33.840
就这个吧

23:33.840 --> 23:34.320
就这个

23:36.590 --> 23:37.390
那么我这里呢

23:37.390 --> 23:38.190
就调用这个函数

23:39.950 --> 23:40.670
redo

23:40.670 --> 23:41.150
image

23:41.950 --> 23:43.550
也就是调用这个image函数

23:44.910 --> 23:45.870
调一个image函数

23:48.030 --> 23:48.910
这里呢

23:48.910 --> 23:49.630
尺寸

23:49.710 --> 23:50.590
图片的尺寸

23:51.710 --> 23:52.510
竟然图片的话

23:52.510 --> 23:53.470
都是一张图片的吧

23:53.470 --> 23:54.590
这样生成出来都是一张图片

23:54.590 --> 23:56.430
那我直接在这里这样调用

23:59.570 --> 23:59.970
moke

24:01.010 --> 24:01.410
redo

24:02.370 --> 24:02.850
image

24:03.970 --> 24:04.450
moke

24:04.450 --> 24:04.930
redo

24:04.930 --> 24:05.810
image

24:05.810 --> 24:06.770
图片的尺寸

24:06.770 --> 24:07.250
这里呢

24:07.250 --> 24:08.290
要用的格式呢

24:08.290 --> 24:08.690
是这个

24:09.570 --> 24:10.850
多少乘多少

24:10.850 --> 24:13.490
那我就三零三百乘二百五吧

24:13.490 --> 24:14.130
也不知道

24:14.130 --> 24:14.690
随便用

24:14.690 --> 24:15.250
随便来吧

24:16.050 --> 24:16.770
背景颜色

24:16.770 --> 24:17.170
背景颜色

24:17.170 --> 24:18.290
我刚去用黑色的了

24:18.850 --> 24:19.970
零零黑色的了

24:20.530 --> 24:21.890
前景色

24:21.890 --> 24:22.610
前景色的话

24:22.610 --> 24:23.250
用白色吧

24:24.050 --> 24:25.170
文字就这里呢

24:25.170 --> 24:26.370
就写个水击图片

24:26.930 --> 24:28.530
好像好像不太知识中文

24:28.530 --> 24:29.570
我们就写个redo

24:31.410 --> 24:31.810
image

24:33.490 --> 24:33.730
好

24:33.730 --> 24:34.370
行了

24:34.370 --> 24:35.490
我们来生成一张图片

24:37.170 --> 24:37.410
好

24:37.410 --> 24:37.650
OK

24:37.650 --> 24:39.330
我们到这边来看一下

24:42.510 --> 24:43.150
boke

24:45.390 --> 24:45.870
图片

24:45.870 --> 24:46.430
图片有了

24:46.430 --> 24:47.070
你看呗

24:47.070 --> 24:47.230
好

24:47.230 --> 24:48.830
我们把个地址复制一下啊

24:48.830 --> 24:49.710
复制一下这个地址

24:56.140 --> 24:56.460
取掉

24:57.420 --> 24:58.060
复控不了

24:58.060 --> 24:58.700
太不习惯了

25:00.700 --> 25:01.580
看一下

25:01.580 --> 25:02.220
真正的图片

25:03.260 --> 25:04.620
三百乘二百五

25:04.620 --> 25:05.420
怎么那么卡呢

25:06.140 --> 25:06.700
变这样子

25:07.500 --> 25:08.940
前景色不是白色吗

25:09.580 --> 25:11.260
前景色我不是说的白色吗

25:11.260 --> 25:12.380
他为什么变成红色

25:12.380 --> 25:13.100
难得管他了

25:13.100 --> 25:14.140
这都无所谓

25:14.140 --> 25:15.420
可以看一下文字

25:15.420 --> 25:16.220
到底哪里出问题

25:17.900 --> 25:19.340
然后这里还有一个数据

25:19.340 --> 25:20.620
就是创建时间

25:20.620 --> 25:22.140
就博客的发布时间

25:22.140 --> 25:22.780
发布日期呢

25:22.780 --> 25:23.660
它是个时间戳

25:23.660 --> 25:25.100
像服务器跟客户端之间

25:25.100 --> 25:26.460
哪里会传到这个时间啊

25:26.460 --> 25:27.180
不管是什么时间

25:27.180 --> 25:28.620
它一般都会传时间戳

25:28.620 --> 25:29.420
那么时间戳的话

25:29.420 --> 25:32.060
我们就生成一个随机时间吧

25:32.700 --> 25:33.260
用dead

25:34.220 --> 25:35.500
日期格式呢

25:35.500 --> 25:36.620
就是写个t

25:36.620 --> 25:38.220
t就表示time-stand

25:38.220 --> 25:39.180
时间戳

25:39.180 --> 25:39.980
好保存啊

25:39.980 --> 25:40.300
再来

25:41.740 --> 25:42.140
博客

25:44.820 --> 25:45.380
时间戳

25:46.100 --> 25:47.700
time-quit-dead

25:48.820 --> 25:49.700
我得把它转换成

25:50.260 --> 25:53.380
转换成那个数字啊

25:53.940 --> 25:54.980
我得把它转成数字

25:54.980 --> 25:55.700
因为这里是

25:57.220 --> 25:58.180
这里是那个

26:00.580 --> 26:01.700
这里还不好转换

26:02.260 --> 26:02.980
还不好转换

26:03.540 --> 26:04.980
因为我这里

26:04.980 --> 26:06.340
要是在这里转换的话

26:08.420 --> 26:09.220
它这个模板

26:09.220 --> 26:11.300
它得写成一个制服圈啊

26:11.940 --> 26:12.580
我还

26:12.580 --> 26:14.180
一时半会不知道怎么去转换它

26:14.180 --> 26:14.900
转换成数字

26:15.700 --> 26:16.420
不管它吧

26:16.420 --> 26:16.900
不管它

26:16.900 --> 26:17.940
反正管它了

26:17.940 --> 26:18.900
就这样吧

26:18.900 --> 26:19.220
OK

26:19.220 --> 26:20.340
反正都是测试数据

26:20.340 --> 26:21.700
好测试出来就得了

26:21.700 --> 26:22.420
里面那边

26:23.460 --> 26:24.580
看一下也可以去查一下

26:24.580 --> 26:25.700
怎么把它弄成数字

26:27.220 --> 26:27.860
好

26:27.940 --> 26:28.900
数据模拟出来了

26:28.900 --> 26:29.940
截口也打通了

26:30.660 --> 26:31.300
那就OK了

26:31.300 --> 26:32.740
那么我们的远程数据呢

26:32.740 --> 26:34.020
就准备好了

26:34.020 --> 26:34.500
这节课呢

26:34.500 --> 26:36.180
跟那个五幼没有什么关系

26:36.180 --> 26:37.300
我先打通远程数据

26:38.020 --> 26:38.260
好

26:38.260 --> 26:39.220
这节课我们到这儿啊

