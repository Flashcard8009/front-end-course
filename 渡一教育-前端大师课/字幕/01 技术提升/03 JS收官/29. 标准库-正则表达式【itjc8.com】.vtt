WEBVTT

00:01.580 --> 00:11.580
好 同学们 我们这节可能来学习政策表达式

00:12.380 --> 00:20.380
同学们看一下这个表单 这个表单里边也可能会让用户输入邮箱 然后呢 我就随便写了一些哈 然后输入的库存

00:21.180 --> 00:24.700
应该是一个整数 然后输入单价 单价呢是

00:25.660 --> 00:28.460
整数部分无所谓 小数部分的只有两位

00:29.180 --> 00:33.900
那么像这些文闷荒 我们可能需要验证用户输的这么正确

00:34.700 --> 00:38.460
那么我怎么来知道它的邮箱格式 然后随便下写一个

00:38.940 --> 00:41.100
我怎么知道它这个邮箱格式就是错误的呢

00:41.900 --> 00:43.900
那原来说我就验证有没有这个 add

00:45.260 --> 00:46.220
那这个 add 呢

00:47.100 --> 00:51.900
也不行啊 你这个邮箱格式也是错误的 对吧 它邮箱格式呢可能是丰富多样的

00:52.060 --> 00:57.820
那么比方说这里的还必须要一个抵抗 有的人还可能有抵抗的啊都有可能

00:58.220 --> 01:02.540
那么我怎么知道它的邮箱格式是正确的 这是一个

01:03.180 --> 01:07.020
那么库存这里也是一样 包括这个单价也是一样

01:07.580 --> 01:11.420
就是我们这些课学习的政策表达式就是来做这个事的

01:12.540 --> 01:16.220
什么叫政策表达式 就是来验证或者说匹配

01:16.860 --> 01:20.540
某一个制服串是否满足某一个规则

01:21.260 --> 01:26.540
比方说这个邮箱 这是一个制服串 它是不是满足一个规则

01:27.180 --> 01:30.220
这个规则就是政策表达式

01:31.420 --> 01:36.140
政策表达式这个东西呢 它不属于某一个语言

01:36.140 --> 01:39.580
不说 诶 诫言式的政策表达式 加法的政策表达式

01:39.820 --> 01:41.580
不是的 不能有这样的说法

01:42.540 --> 01:46.220
政策表达式是一个脱离语言的一套规范

01:46.620 --> 01:50.060
就所有语言你只要支持政策表达式

01:50.220 --> 01:52.380
那么你都应该遵循这套规范

01:53.180 --> 01:57.100
什么规范呢 就是规则该如何来书写

01:57.500 --> 02:00.460
我怎么来描述一个规则 什么要描述一个规则

02:00.860 --> 02:03.420
诶 比方说我用中文来描述一个规则

02:03.740 --> 02:06.140
就是说邮箱的规则就是这样子的

02:06.140 --> 02:08.780
前面有一些制服

02:09.740 --> 02:12.780
然后跟上 跟上

02:14.940 --> 02:18.700
一个 一个 add add

02:19.180 --> 02:23.900
然后呢 再跟上一些制服

02:25.020 --> 02:28.460
再跟上 然后跟上一个 d 二

02:29.500 --> 02:33.260
然后又有几个制服

02:33.420 --> 02:34.540
这就是规则

02:34.780 --> 02:38.060
懂了意思吗 政策表达式就是要通过某一种标准

02:38.300 --> 02:39.500
来定义这个规则

02:39.500 --> 02:41.100
当你定义规则的时候

02:41.100 --> 02:42.860
你不能用这种中文这种方式

02:42.860 --> 02:44.460
很模糊的这种方式来写

02:44.780 --> 02:46.700
应该用一套统一的规范来写

02:46.780 --> 02:49.420
我们学习政策表达式就是学习这个玩意儿

02:49.420 --> 02:51.420
该如何来描述这个规则

02:52.220 --> 02:54.940
所有的语言只要支持政策表达式

02:54.940 --> 02:56.780
它的规则的书写都是一样的

02:57.420 --> 03:00.380
因此呢 你们现在学借识来学习政策表达式

03:00.700 --> 03:02.300
将来如果说机缘巧合

03:02.300 --> 03:04.140
你们又想搞一个什么全战

03:04.940 --> 03:06.700
进入到后端

03:07.660 --> 03:08.780
就学习其他语言

03:08.780 --> 03:10.780
那么其他语言的规则也是这种写法

03:10.780 --> 03:12.060
所以政策表达式

03:12.460 --> 03:15.260
你的人生当中只需要学习一次

03:15.980 --> 03:17.980
但是呢 政策表达式它东西很多

03:18.620 --> 03:20.620
它不是说一点一点的

03:20.620 --> 03:22.700
一点的那个书写规则

03:22.700 --> 03:23.900
然后又讲完了 不是的

03:24.540 --> 03:27.740
完整的政策表达式的规则书写方式

03:28.380 --> 03:29.980
在我另外一个课程里面

03:29.980 --> 03:31.980
就是借识详细版里面

03:32.540 --> 03:33.820
当时呢 我讲了三节课

03:34.940 --> 03:36.460
把他所有的政策表达式

03:36.460 --> 03:38.460
规则的书写方式都给大家讲到了

03:39.580 --> 03:42.140
但是呢 我们这节课不会讲的那么的详细

03:42.380 --> 03:46.700
我们只是讲解政策表达式最基本最基本的用法

03:47.260 --> 03:48.460
因为这个玩意儿呢

03:48.460 --> 03:51.020
其实我们一年下来用不到几次

03:51.580 --> 03:53.580
你别看它功能好像很强大的样子

03:53.900 --> 03:56.540
但是实际上呢 你们以后开发中就会知道了

03:56.940 --> 03:59.100
一年下来可能就接触那么一两次

03:59.740 --> 04:01.740
但是你没有这个知识也不行

04:02.460 --> 04:03.980
不然那一两次接触到了

04:03.980 --> 04:05.500
那你完全束手无策

04:05.980 --> 04:07.340
所以说我们还得学

04:07.660 --> 04:10.300
但是呢 由于它接触的用的太少

04:11.260 --> 04:13.100
所以说我们只学习它最核心的

04:13.100 --> 04:14.060
最常见的

04:14.300 --> 04:15.900
本身一年就用那么一两次

04:16.700 --> 04:19.100
那一两次里面我们就学它最常见的

04:19.900 --> 04:21.900
如果说将来同学们在开发过程中

04:21.900 --> 04:23.900
遇到了那些比较特殊的

04:24.700 --> 04:27.260
我们这个这节课里面没讲到的怎么办

04:27.740 --> 04:30.220
我有另外一个借识详细版

04:30.220 --> 04:32.620
里面有完整的政策表达式的规则介绍

04:32.860 --> 04:34.860
那一块当然就比较复杂了

04:34.860 --> 04:36.220
这一课还是比较简单的

04:36.780 --> 04:38.460
好 那么我们这一课学习政策表达式

04:38.460 --> 04:39.420
就是学习它的规则

04:40.380 --> 04:41.420
那我们来看一下

04:41.740 --> 04:43.420
首先同学们要了解一个

04:43.420 --> 04:47.420
就是在介识里面如何来创建一个政策表达式

04:48.380 --> 04:51.820
政策表达式其实在介识里面表现为一个对象

04:51.820 --> 04:53.660
它有两种创建方式

04:53.900 --> 04:56.540
第一种就是通过一个new 一个勾着函数

04:57.420 --> 04:58.940
叫做read expression

05:00.460 --> 05:02.460
里面写上两个参数

05:02.460 --> 05:04.460
一个参数呢都是制服串

05:04.700 --> 05:05.820
一个参数呢是规则

05:05.820 --> 05:07.340
就是我们刚才描述的这一坨

05:08.060 --> 05:09.020
就这一块儿坡

05:09.500 --> 05:10.940
它不是这样的写法

05:11.420 --> 05:13.020
就是把以后我们就会学习这个规则

05:13.020 --> 05:13.820
把规则写这

05:14.220 --> 05:15.740
第二个呢是标识

05:15.740 --> 05:17.100
标识是啥意思呢

05:17.100 --> 05:19.100
我给大家简单写一下

05:20.860 --> 05:21.820
好 比方说

05:22.140 --> 05:22.940
我们这里呢

05:22.940 --> 05:25.180
我要书写一个政策表达式在介识里面

05:25.180 --> 05:25.820
怎么写呢

05:25.820 --> 05:28.140
new 一个什么read expression

05:29.820 --> 05:31.340
第一个参数写上规则

05:31.660 --> 05:33.340
那么我们这里先随便写个规则

05:33.660 --> 05:34.460
就写一个a

05:34.860 --> 05:36.380
介绍一下这什么意思

05:36.380 --> 05:37.180
表示说

05:38.140 --> 05:39.260
规则用来干嘛呢

05:39.980 --> 05:41.180
是不是验证制服串呢

05:41.980 --> 05:44.220
我要验证那个制服串里面

05:44.220 --> 05:46.380
必须要包含一个制服a

05:46.780 --> 05:47.740
就这么个意思

05:48.300 --> 05:50.140
好 我们来这样得到一个对象了

05:50.140 --> 05:50.700
对吧

05:50.700 --> 05:52.220
这个对象里面呢有一个

05:53.180 --> 05:53.580
方法

05:54.060 --> 05:54.700
叫做test

05:56.540 --> 05:57.340
这个方法呢

05:57.340 --> 05:58.380
你看我们下面

05:58.380 --> 05:59.820
郑德的常用方法 test

06:00.220 --> 06:01.660
你传入一个制服串

06:01.660 --> 06:03.020
它就会返回一个结果

06:03.020 --> 06:04.220
告诉你这个制服串

06:04.220 --> 06:05.820
是否满足这个规则

06:06.140 --> 06:07.660
比方说我给他传一个制服串

06:08.220 --> 06:09.180
随便写一些数字

06:09.180 --> 06:10.060
然后里面有个a

06:10.540 --> 06:12.060
那么你看一下这个制服串

06:12.540 --> 06:14.140
是不是满足这个规则呢

06:14.620 --> 06:15.340
所以满足

06:15.740 --> 06:17.100
满足它里面包含a嘛

06:17.340 --> 06:19.180
因此它就会返回一个结果

06:19.180 --> 06:20.220
就会返回q

06:23.150 --> 06:24.270
看没 都会返回q

06:24.510 --> 06:25.230
就这么个意思

06:25.230 --> 06:26.670
那如果说不包含这个a呢

06:27.550 --> 06:28.670
它就会返回force

06:29.550 --> 06:30.350
就这么个意思

06:31.310 --> 06:33.310
那么第二个参数是咋意思呢

06:33.470 --> 06:34.830
第二个参数表示标识

06:34.830 --> 06:35.790
可传可不传

06:35.790 --> 06:37.310
不传的话就没有标识

06:37.950 --> 06:39.310
第二个参数表示标识

06:39.310 --> 06:40.990
标识呢有几种

06:40.990 --> 06:41.870
其中一种呢

06:41.870 --> 06:42.670
就是i

06:42.670 --> 06:43.630
一个小写的i

06:43.950 --> 06:46.270
那么如果说你传递的这个标识的话

06:46.270 --> 06:47.870
表示说我这个规则啊

06:47.870 --> 06:50.030
匹配的时候是不区分大小写的

06:51.150 --> 06:51.790
我们来看一下

06:51.790 --> 06:53.470
我这里如果有一个大写的a

06:53.630 --> 06:54.830
它也能匹配上

06:54.990 --> 06:56.750
那如果说你没有这个i的话

06:56.830 --> 06:59.150
那么它就就是严格匹配

06:59.790 --> 07:00.910
区分大小写

07:00.910 --> 07:02.830
那么这个时候的匹配出来就是force

07:03.950 --> 07:05.470
标识就做这个用的

07:05.710 --> 07:08.030
它就表示匹配的匹配的时候

07:08.030 --> 07:09.470
一些小的细节啊

07:09.470 --> 07:10.590
标识很简单

07:10.590 --> 07:11.630
就那么一两个

07:12.510 --> 07:12.830
好

07:12.830 --> 07:13.310
朋友们

07:13.310 --> 07:14.750
这是我们刚才学习的

07:14.750 --> 07:15.470
第一种

07:15.470 --> 07:17.150
政则表达式的创建方式

07:17.150 --> 07:18.030
创建一个对象

07:18.750 --> 07:20.350
其实这种写法呢

07:20.350 --> 07:22.910
可以等效的写成下边这种格式

07:23.710 --> 07:24.750
写成这种格式

07:24.750 --> 07:26.830
这叫字面亮书写方式

07:26.830 --> 07:27.870
把规则写这儿

07:27.870 --> 07:29.310
两个写杠规则写这儿

07:29.310 --> 07:31.150
然后呢标识写这儿

07:31.950 --> 07:33.070
好 先让我们来看一下啊

07:33.070 --> 07:34.910
如果说我们刚才这个东西

07:34.990 --> 07:36.750
写成字面亮的书写方式

07:37.310 --> 07:38.510
就是字面亮的书写方式

07:38.510 --> 07:39.630
就是一个语法堂

07:39.630 --> 07:41.790
让你书写的比较简单而已

07:41.790 --> 07:43.950
它本质上还是给你溜了一个这个东西

07:43.950 --> 07:45.630
就好比说我们对象对吧

07:45.630 --> 07:47.550
对象里边可以写两个大过号

07:47.550 --> 07:48.510
来创建一个对象

07:48.510 --> 07:50.190
其实本质上就相当于是溜了

07:50.190 --> 07:51.070
一个Object的车

07:51.070 --> 07:52.030
那么这里

07:52.030 --> 07:53.150
政则表达式也是一样

07:53.150 --> 07:54.350
我这种写法呢

07:54.350 --> 07:56.190
可以把它替换为下边这种写法

07:56.190 --> 08:00.100
规则写这儿

08:00.100 --> 08:01.140
然后呢

08:01.140 --> 08:02.660
标识写这儿

08:02.660 --> 08:04.260
当然你没有标识的话就结束了

08:04.260 --> 08:04.740
是吧

08:04.740 --> 08:06.100
好 你看

08:06.180 --> 08:07.300
效果是完全一样的

08:08.420 --> 08:09.220
等效的

08:09.220 --> 08:10.420
完全等效的

08:10.420 --> 08:11.300
就这么个意思

08:12.740 --> 08:13.940
那么这里呢说到这儿

08:13.940 --> 08:14.580
同学们

08:14.580 --> 08:17.860
我推荐大家安装一个VS Code的插件

08:19.060 --> 08:19.700
什么插件

08:19.700 --> 08:20.260
叫做

08:21.300 --> 08:22.740
搜一下regist

08:22.740 --> 08:23.700
以后我们在单

08:23.700 --> 08:24.660
我们在这个

08:24.660 --> 08:25.620
看一些文献

08:25.620 --> 08:27.060
看一些资料的时候

08:27.060 --> 08:28.900
你只要看到这个单词regist

08:29.540 --> 08:30.980
或者是partner

08:31.700 --> 08:33.380
那么都表示的说

08:33.380 --> 08:35.220
是一个政则表达式规则

08:35.300 --> 08:36.660
都表示政则表达式的意思

08:37.220 --> 08:38.020
那么我们这里呢

08:38.020 --> 08:39.140
搜索一个regist

08:39.140 --> 08:39.940
这里有一个插件

08:39.940 --> 08:41.940
叫regist previewer

08:41.940 --> 08:42.980
那么这个插件是

08:42.980 --> 08:44.180
起个什么样的作用呢

08:44.180 --> 08:44.740
把安装

08:45.860 --> 08:46.660
安装之后

08:46.660 --> 08:47.540
你在代码里边

08:47.540 --> 08:48.980
你只要出现这种

08:48.980 --> 08:50.420
政则表达式的质面量

08:50.420 --> 08:51.940
你只要出现这么一个格式

08:51.940 --> 08:52.980
它上面就会多出来

08:52.980 --> 08:53.940
这么一个功能

08:53.940 --> 08:55.060
叫做test

08:55.060 --> 08:57.620
测试政则表达式regist

08:57.620 --> 08:58.820
是不是测试

08:58.820 --> 08:59.620
然后我们点一下

09:00.980 --> 09:01.780
点一下之后呢

09:01.780 --> 09:02.580
你会在右边

09:03.460 --> 09:04.820
看到有一段文本

09:04.900 --> 09:06.580
它给你随机生征从的一段文本

09:06.580 --> 09:07.860
那么这段文本里边

09:07.860 --> 09:08.580
它告诉你

09:08.580 --> 09:09.780
你这个政则表达式

09:10.340 --> 09:11.940
能不能匹配这个文本

09:12.820 --> 09:14.180
或者说这个文本

09:14.180 --> 09:15.620
能不能满足这个规则

09:15.940 --> 09:16.900
满足的时候呢

09:16.900 --> 09:18.340
是哪一个地方满足的

09:18.740 --> 09:19.700
那么你可以看到

09:19.700 --> 09:21.380
非常清晰的告诉你

09:21.380 --> 09:22.420
这个A是不是

09:22.420 --> 09:22.980
出现了A

09:23.380 --> 09:24.900
是满足这个规则的

09:24.900 --> 09:25.940
非常的方便

09:25.940 --> 09:27.540
可以帮我们来做一些调试

09:28.020 --> 09:29.380
看我们来检查一下

09:29.380 --> 09:30.580
自己的政则表达式

09:30.580 --> 09:31.540
是不是写得正确的

09:32.100 --> 09:32.500
因此呢

09:32.500 --> 09:33.060
我们这里呢

09:33.060 --> 09:34.020
就不用再去用什么

09:34.020 --> 09:35.540
console log来进行调试了

09:35.540 --> 09:36.580
非常方便

09:36.580 --> 09:37.380
启程了一个作用

09:38.580 --> 09:40.180
那么这个文本是可以改的

09:40.180 --> 09:41.140
比方说你这里随便改

09:41.700 --> 09:42.100
你看

09:42.100 --> 09:42.740
随便改了之后

09:42.740 --> 09:43.540
你还要告诉你

09:43.540 --> 09:44.740
它能够满足规则

09:45.140 --> 09:45.700
而且呢

09:45.700 --> 09:46.660
哪个地方满足呢

09:47.780 --> 09:49.060
是不是这个地方匹配到了

09:49.860 --> 09:50.900
哎呀 人家说不对

09:50.900 --> 09:52.020
我这个制服创里边

09:52.020 --> 09:53.300
不是出现了多个A吗

09:53.300 --> 09:53.620
对吧

09:53.620 --> 09:55.700
那为什么剩下的A没有匹配到了

09:56.180 --> 09:58.020
是因为它默认的情况下

09:58.020 --> 10:00.100
它只匹配第一个规则

10:00.100 --> 10:01.780
就是第一个满足规则的位置

10:02.260 --> 10:03.860
它不会匹配所有

10:04.340 --> 10:06.580
如果说你希望匹配所有的话

10:06.580 --> 10:08.100
你需要加上一个标识

10:08.100 --> 10:08.580
叫g

10:09.300 --> 10:09.940
那么这里呢

10:09.940 --> 10:11.060
也要写上一个g

10:12.180 --> 10:13.060
g表示什么意思

10:13.060 --> 10:13.460
表示

10:14.020 --> 10:15.060
顺便说一下

10:15.060 --> 10:15.780
i表示什么意思

10:15.780 --> 10:16.580
i表示一个log

10:17.460 --> 10:18.900
忽略大小写

10:18.900 --> 10:21.540
g表示Global全局匹配

10:22.180 --> 10:23.540
那么这里写上一个g

10:23.540 --> 10:24.820
表示全局匹配

10:24.820 --> 10:27.220
它要匹配所有满足条件的

10:27.220 --> 10:28.500
就是满足规则的地方

10:29.060 --> 10:30.020
知道这个意思了

10:30.020 --> 10:30.820
非常简单

10:31.540 --> 10:32.580
那么我们这里呢

10:32.580 --> 10:33.620
我们就把i去掉吧

10:34.260 --> 10:34.740
i去掉

10:34.740 --> 10:36.260
那么就表示不匹配那条鞋

10:36.260 --> 10:37.460
继续掉那里表示

10:37.460 --> 10:38.580
不进行全局匹配

10:38.580 --> 10:39.540
怎么个意思

10:40.580 --> 10:41.140
好了

10:41.140 --> 10:42.020
那么这就是

10:42.020 --> 10:42.980
政则表达是

10:43.620 --> 10:45.620
它最基本的用法

10:46.020 --> 10:46.420
其实呢

10:46.420 --> 10:47.380
我们除了有的时候

10:47.380 --> 10:49.540
除了我们要测试一个制服串

10:49.540 --> 10:51.620
是否满足规则之外

10:52.180 --> 10:53.060
我们有的时候呢

10:53.060 --> 10:55.460
还可能会对满足规则的地方

10:55.460 --> 10:56.260
来进行替换

10:56.740 --> 10:58.100
就是我们之前学的

10:58.100 --> 10:59.300
制服串里面一个方法

10:59.300 --> 11:00.020
叫replace

11:00.980 --> 11:01.300
对吧

11:01.300 --> 11:01.780
这个方法

11:02.340 --> 11:02.900
这个方法

11:02.900 --> 11:03.540
第一个参数呢

11:03.620 --> 11:04.500
我们之前

11:04.500 --> 11:05.060
我们来看一下

11:05.620 --> 11:06.020
第一个方

11:06.020 --> 11:07.540
我们之前的比方说

11:07.540 --> 11:09.140
我们这里写上一个STR

11:14.640 --> 11:14.880
好

11:15.920 --> 11:16.720
我比方说

11:16.720 --> 11:17.920
要把这个制服串里面的

11:17.920 --> 11:20.320
e替换成a

11:21.360 --> 11:22.480
我要替换成a

11:22.480 --> 11:24.160
我们以前会怎么写呢

11:24.160 --> 11:25.360
会写个replace

11:26.000 --> 11:26.480
对吧

11:26.480 --> 11:28.960
把这个e替换成a

11:28.960 --> 11:29.920
是不是可以这样子写

11:31.440 --> 11:32.720
它会返回一个新制服串

11:33.920 --> 11:34.560
来输出一下

11:39.740 --> 11:41.740
你看是不是把所有的e的位置

11:42.220 --> 11:43.100
替换成

11:43.100 --> 11:44.220
只替换了第一个对吧

11:44.220 --> 11:44.860
我们当时还说

11:45.500 --> 11:47.260
它这个玩意只能替换第一个

11:47.260 --> 11:48.860
那如果说你要替换所有呢

11:48.860 --> 11:49.820
使用replace all

11:51.020 --> 11:52.700
这个我这个漏的节式里面

11:53.260 --> 11:54.140
它还没有

11:54.140 --> 11:55.420
因为这个是新方法

11:55.420 --> 11:57.500
新的好像是去年刚出的标准

11:57.500 --> 11:58.620
所以说我这个漏的节式

11:58.620 --> 11:59.500
版本有点忙了

11:59.500 --> 12:00.380
它不支持这个

12:00.380 --> 12:02.060
在浏览器里面是可以支持的

12:02.060 --> 12:03.580
就是替换所有对吧

12:03.580 --> 12:05.100
replace它只能替换一个

12:05.660 --> 12:06.300
当时我说

12:06.300 --> 12:07.340
我后边会告诉大家

12:07.340 --> 12:09.660
如何来用这个方法来替换所有

12:09.660 --> 12:11.020
那如果来替换所有呢

12:11.180 --> 12:12.220
告诉大家的同学们

12:12.220 --> 12:13.420
这个第一个参数

12:13.980 --> 12:16.380
它实际上是应该传一个

12:16.380 --> 12:17.580
政者表达式的

12:18.540 --> 12:20.220
实际上应该传一个政者表达式

12:20.860 --> 12:23.100
当然它可以支持传制服串

12:23.100 --> 12:25.660
它只会替换第一个

12:26.380 --> 12:28.380
那么我们这里可以传一个政者表达式

12:28.380 --> 12:29.340
传什么政者表达式呢

12:29.340 --> 12:30.540
就是把一个对象传过来

12:32.540 --> 12:33.580
把这个对象传过来

12:34.700 --> 12:36.300
那么我们这个规则是什么

12:36.300 --> 12:37.580
规则是e对吧

12:37.580 --> 12:38.780
我要匹配e

12:38.780 --> 12:40.460
那么它现在我们来替换

12:40.620 --> 12:42.380
它就会把满足规则的地方

12:42.380 --> 12:43.740
那我们把这个字幕创

12:43.740 --> 12:45.020
看一看 咱们替过来

12:45.020 --> 12:46.220
看一看目前

12:46.220 --> 12:48.780
它是不是只会替换第一个e

12:48.780 --> 12:51.020
那如果说我要替换所有e怎么办

12:51.020 --> 12:52.380
是不是在这里写个g

12:52.380 --> 12:54.060
对吧 它就会替换所有e了

12:54.060 --> 12:55.580
你看 是不是这里是不是

12:55.580 --> 12:57.740
所有的e的位置都会被匹配到

12:57.740 --> 12:58.780
然后匹配之后呢

12:58.780 --> 13:01.260
它就会替换这个a

13:01.260 --> 13:02.460
那么我们现在看一下

13:03.100 --> 13:05.900
是不是所有的e的地方全部替换成了a

13:05.900 --> 13:07.340
对吧 没问题吧

13:08.220 --> 13:10.620
你说我们写这个replace的时候

13:10.620 --> 13:14.460
如果说希望来匹配所有来进行替换

13:14.460 --> 13:16.060
那么就要写上一个参数计

13:16.060 --> 13:17.260
这个标识计

13:17.260 --> 13:19.100
当然我们根据表达式的知识

13:19.100 --> 13:21.340
我们完全可以把这个表达式

13:21.340 --> 13:23.420
这个字面量直接写到这

13:23.420 --> 13:24.700
对吧 不需要别的量了

13:24.700 --> 13:26.220
是不是可以 没问题吧

13:27.020 --> 13:27.980
效果是一样的

13:29.580 --> 13:31.100
好 这人我顺便再说一下

13:31.100 --> 13:32.300
这个replace

13:32.300 --> 13:33.740
它其实第二个参数

13:33.740 --> 13:35.980
除了替换成一个固定的制服之外

13:36.700 --> 13:39.900
它还可以写成一个函数

13:41.180 --> 13:42.620
我们把函数先写出来

13:44.300 --> 13:45.580
那么我这里反回一个a

13:46.220 --> 13:48.220
好 那么既然我们这个是啥意思呢

13:49.260 --> 13:50.460
我们来看一下这个正的表达式

13:51.980 --> 13:53.660
它是不是匹配到了多个地方

13:54.220 --> 13:54.860
匹配到了这儿

13:55.900 --> 13:57.020
第一个匹配到了地方

13:57.020 --> 13:58.540
于是它会调用函数

13:58.540 --> 14:00.460
把这个e传给这个s

14:02.940 --> 14:05.100
然后它就会运行这个函数

14:05.820 --> 14:07.740
这个函数的返回结果是啥

14:08.300 --> 14:09.820
那么它就会替换成啥

14:09.820 --> 14:10.700
返回结果是a

14:11.340 --> 14:12.780
它就会替换成a

14:15.180 --> 14:16.540
然后第二个地方

14:16.540 --> 14:17.740
它又会把它传进来

14:17.740 --> 14:18.700
作为参数传进来

14:18.700 --> 14:19.500
调用这个函数

14:20.140 --> 14:21.580
看你的返回结果是啥

14:21.580 --> 14:22.540
返回结果是啥

14:22.540 --> 14:23.820
它就会替换成啥

14:23.820 --> 14:25.100
那同样说这个没什么意义

14:25.980 --> 14:28.060
你这样子写还不是全部替换成a

14:28.060 --> 14:29.580
现在是没有什么意义

14:29.580 --> 14:31.260
一会它就有意义了

14:31.900 --> 14:33.340
因为我们目前是

14:33.340 --> 14:34.700
匹配到是固定的制服

14:35.660 --> 14:37.340
那么一会我们这一块规则

14:37.340 --> 14:38.620
你学了更多的知识之后

14:38.620 --> 14:39.900
你会知道这一块

14:39.900 --> 14:42.620
这个s它每一次的值是不一样的

14:43.420 --> 14:44.780
有可能是不一样的

14:44.780 --> 14:47.180
我们这里先多的讨讨了解一下

14:48.300 --> 14:51.660
接下来就是要学习的标识

14:51.660 --> 14:52.700
我们刚才学了两个标识

14:52.700 --> 14:53.180
一个是i

14:53.180 --> 14:53.660
一个是g

14:53.660 --> 14:55.100
其实还有一个标识叫m

14:55.100 --> 14:57.100
那么这个玩意我们就不用去考虑了

14:57.100 --> 14:58.060
这个很少用到的

14:59.020 --> 15:00.940
好 我们接下来就是重点来了

15:00.940 --> 15:02.140
就是说它里边的规则

15:02.860 --> 15:04.620
其实你要了解一个规则的话

15:04.700 --> 15:05.900
也就是了解这一块

15:06.460 --> 15:08.540
本质上也就是这一块

15:09.420 --> 15:10.860
你怎么来描述这个规则

15:11.980 --> 15:14.780
规则里边我们把它分为三块东西来讲

15:14.780 --> 15:17.020
三块东西你不用一个个去备

15:17.020 --> 15:17.820
千万不要去备

15:18.380 --> 15:19.820
你只需要理解过后了

15:19.820 --> 15:21.900
我们理解它们的逻辑关系

15:22.380 --> 15:25.820
理解之后我们就可以在查阅这个文档

15:26.540 --> 15:27.980
来输一些规则了

15:27.980 --> 15:29.580
完整的规则在这里

15:29.580 --> 15:30.940
在MDN上面

15:30.940 --> 15:32.620
那么这里我就不多扯了

15:32.780 --> 15:34.940
我们只列出了一些常见的一些规则

15:35.740 --> 15:37.740
第一个就是制服匹配规则

15:38.540 --> 15:39.740
这个你要首先理解

15:39.740 --> 15:40.940
什么叫制服匹配规则

15:41.420 --> 15:43.180
表示说我写的一个规则

15:43.180 --> 15:44.860
它只匹配一个制服

15:45.340 --> 15:46.380
它不会匹配很多个人

15:47.100 --> 15:48.060
它只匹配一个

15:48.300 --> 15:50.220
当然如果说你使用全局的话

15:50.540 --> 15:52.620
那就把所有的标识这里写个1

15:52.620 --> 15:53.260
是什么意思呢

15:53.580 --> 15:55.660
它不是说我要匹配多个

15:55.660 --> 15:56.540
不是这个意思

15:56.780 --> 15:58.140
我就匹配一个1

15:58.540 --> 16:00.540
但是由于我写的是全局匹配

16:01.020 --> 16:03.820
整个制服戳里面反而是满足的规则的

16:03.820 --> 16:04.940
我都不会匹配上

16:05.260 --> 16:07.100
那么表示说

16:07.340 --> 16:09.180
我这个地方满足这个规则

16:09.180 --> 16:11.100
我这个地方满足这个制服规则

16:11.100 --> 16:12.220
我这个地方也满足

16:12.220 --> 16:13.180
这个地方也满足

16:13.180 --> 16:13.980
懂的意思吧

16:13.980 --> 16:15.420
这是全局的意思

16:16.300 --> 16:17.980
那么规则有哪些书写方式呢

16:18.700 --> 16:19.820
第一种方式就最简单的

16:19.820 --> 16:21.820
就是直接书写一个普通制服

16:22.860 --> 16:24.780
那么就是匹配书写的制服就完成了

16:25.820 --> 16:27.420
咱们来看一下这个是什么意思

16:32.960 --> 16:33.760
这什么意思呢

16:33.760 --> 16:34.720
比方这里写个a

16:34.720 --> 16:36.000
它就匹配所有的a

16:36.000 --> 16:38.160
这里面有a它就匹配a对吧

16:39.120 --> 16:40.080
它不是匹配多个

16:40.080 --> 16:40.880
我再重生一次

16:40.880 --> 16:42.080
我干脆把这个记去掉

16:42.080 --> 16:42.960
免得造成误解

16:44.080 --> 16:46.640
它只匹配一个制服

16:47.040 --> 16:48.400
写个b它就匹配b

16:48.400 --> 16:49.440
写个1就匹配1

16:49.440 --> 16:50.480
写个2就匹配2

16:50.480 --> 16:51.840
就这么简单

16:51.840 --> 16:54.400
这就是直接书写一个制服

16:55.120 --> 16:57.120
第二种写法就是写个中国号

16:57.680 --> 16:59.680
这里边写上制服规则

17:00.480 --> 17:01.360
那么匹配什么呢

17:01.520 --> 17:04.480
匹配中国号中出现的所有制服规则

17:04.480 --> 17:05.280
啥意思呢

17:05.280 --> 17:06.080
就是说

17:06.080 --> 17:07.520
比方我这里写个中国号

17:08.080 --> 17:09.440
写个123

17:10.000 --> 17:10.640
啥意思呢

17:11.040 --> 17:13.120
我可以匹配1

17:13.120 --> 17:14.480
也可以匹配2

17:14.480 --> 17:15.760
也可以匹配3

17:15.760 --> 17:18.800
当然整个它只匹配一个制服

17:18.800 --> 17:20.080
一定要搞清楚

17:20.080 --> 17:22.160
不是说我要匹配一个连续的123

17:22.160 --> 17:24.240
如果说你要匹配连续的一个123的话

17:24.240 --> 17:24.960
你就这样子写

17:25.680 --> 17:27.280
它就匹配一个连续的123

17:28.240 --> 17:30.640
但是你加上中共号它只匹配一个制服

17:30.800 --> 17:31.600
要么就是1

17:31.600 --> 17:32.160
要么就是12

17:32.160 --> 17:32.800
要么就是3

17:32.800 --> 17:34.640
你看现在这个20分匹配到了

17:34.640 --> 17:35.200
1

17:35.200 --> 17:36.480
让它只匹配一个

17:36.480 --> 17:37.760
如果说你要匹配所有的

17:38.640 --> 17:39.360
加上一个G

17:40.480 --> 17:41.680
所有的满足规则的

17:41.680 --> 17:42.560
它匹配了几次

17:43.680 --> 17:45.040
有多少个地方匹配到了

17:45.440 --> 17:47.440
一个地方两个地方三个地方

17:48.240 --> 17:50.080
四个地方五个地方六个地方

17:50.720 --> 17:51.280
7

17:51.280 --> 17:51.840
8

17:51.840 --> 17:52.240
9

17:52.240 --> 17:52.480
10

17:52.480 --> 17:52.880
11

17:52.880 --> 17:53.040
对吧

17:53.040 --> 17:54.880
有11个地方都匹配上了这个规则

17:55.520 --> 17:56.080
懂了意思吧

17:56.080 --> 17:56.400
这是

17:56.960 --> 17:57.920
用中国号

17:57.920 --> 17:59.760
中国号里边还可以写这样子写

17:59.840 --> 18:00.560
0到9

18:01.360 --> 18:02.560
就相当于是

18:02.560 --> 18:04.880
0123456789

18:05.600 --> 18:06.800
那么就相当于匹配什么

18:06.800 --> 18:08.000
匹配所有的数字

18:08.640 --> 18:09.680
是不是匹配所有的数字

18:10.240 --> 18:11.040
要么就是0

18:11.040 --> 18:11.440
数字嘛

18:11.440 --> 18:12.000
要么就是0

18:12.000 --> 18:12.480
要么就是1

18:12.480 --> 18:13.040
要么就是2

18:13.040 --> 18:14.160
要么就是这些东西

18:14.800 --> 18:17.600
那么这种写法可以减写为0到9

18:19.520 --> 18:20.240
没了意思吧

18:20.240 --> 18:21.360
说可以减写为0到9

18:21.840 --> 18:23.120
那么这些是不是全部匹配了

18:24.640 --> 18:26.080
我们现在再回过头来看

18:26.080 --> 18:28.640
这个东西就有意义了

18:29.520 --> 18:30.880
比方说我有这么一个需求

18:31.440 --> 18:34.000
我要这个字幕刷是这样子的

18:36.700 --> 18:37.740
我要做这么一件事

18:38.300 --> 18:40.220
我要给每一个数字

18:41.260 --> 18:42.540
左右两边

18:42.940 --> 18:45.100
就对每一个数字左边加上一个

18:46.780 --> 18:47.260
这样子吧

18:47.820 --> 18:49.500
我要对每一个数字加上这么一个东西

18:49.500 --> 18:50.540
左边加上一个大语符号

18:50.540 --> 18:51.180
右边加上一个

18:52.140 --> 18:52.940
左边加上一个小语

18:52.940 --> 18:53.820
右边加上一个大语

18:53.820 --> 18:55.180
对每一个数字要做这样的事

18:55.900 --> 18:57.340
你看现在呢

18:58.300 --> 18:59.420
你在这里能

18:59.420 --> 19:00.380
不用函数的话

19:00.380 --> 19:01.100
你能写吗

19:01.100 --> 19:01.900
你又写不了了

19:02.860 --> 19:03.900
你看是不是写不了了

19:04.300 --> 19:05.100
你咋写啊这个

19:06.060 --> 19:07.660
要么你就只能这样子

19:07.660 --> 19:10.140
我先来匹配一个0

19:10.140 --> 19:11.660
给0左右加上那个

19:11.660 --> 19:12.540
然后再匹配一个1

19:12.540 --> 19:13.900
就不好写了现在

19:13.900 --> 19:15.820
那么现在如果说用函数的话

19:15.820 --> 19:16.860
就很好写

19:16.860 --> 19:18.380
为什么说函数好写呢

19:18.380 --> 19:18.860
你看

19:20.300 --> 19:21.820
现在是不是匹配他组所有的数字

19:22.220 --> 19:23.500
他把第一个匹配的

19:24.220 --> 19:25.020
传进来

19:25.660 --> 19:26.860
是不是传了一个二进来

19:27.980 --> 19:28.700
然后呢

19:28.700 --> 19:29.740
再把一匹配上了

19:29.740 --> 19:31.100
又把一又传进来

19:31.660 --> 19:31.980
对吧

19:32.700 --> 19:34.060
这些由于匹配不上

19:34.060 --> 19:35.180
他就不会传进

19:35.180 --> 19:36.380
他就不会凋用函数

19:36.380 --> 19:37.580
他只会把匹配的

19:38.220 --> 19:39.260
东西凋用这个函数

19:39.260 --> 19:40.940
把匹配的结果传进来

19:40.940 --> 19:43.260
那你只需要在这个结果左右两边

19:43.260 --> 19:43.820
加上一个

19:44.620 --> 19:45.820
左边加上一个小语

19:47.340 --> 19:47.900
然后呢

19:47.900 --> 19:49.260
拼接上s

19:52.140 --> 19:52.940
拼接上s

19:53.500 --> 19:54.700
在右边加上一个大语

19:57.490 --> 19:57.810
s

19:58.370 --> 19:59.010
拼接一下

19:59.570 --> 20:00.290
所以可以了

20:00.770 --> 20:02.290
给这个s比方说2

20:02.290 --> 20:03.970
给这个2左右两边加上一个

20:03.970 --> 20:05.090
左边加上一个小语

20:05.090 --> 20:06.050
右边加上一个大语

20:06.530 --> 20:09.170
把这个反回的结果作为替换的目标

20:09.170 --> 20:11.170
把2替换成这个样子

20:11.970 --> 20:13.170
一个小语2

20:13.170 --> 20:13.810
然后一个大语

20:14.450 --> 20:15.250
那么这样子一来

20:15.250 --> 20:15.810
我们来看一下

20:16.690 --> 20:17.650
所以每一个数字

20:18.530 --> 20:19.810
左右两边都加上了

20:19.810 --> 20:20.130
对吧

20:20.130 --> 20:21.090
这就是函数的一

20:22.450 --> 20:23.570
好理解一下

20:23.570 --> 20:24.530
我们再说回来

20:24.530 --> 20:26.210
说到这里综合号还没说完

20:26.210 --> 20:27.970
那如果说我要匹配字母呢

20:28.770 --> 20:29.730
所有字母呢

20:30.210 --> 20:31.970
然后这里我们有一些字母

20:32.770 --> 20:33.250
ab

20:34.770 --> 20:35.090
c

20:36.210 --> 20:36.450
q

20:39.760 --> 20:40.080
好

20:40.080 --> 20:40.560
那如果说

20:42.080 --> 20:44.000
那如果说我要匹配所有的字母的话

20:44.000 --> 20:45.840
那设计是不是也应该这样写

20:45.840 --> 20:47.680
abcdefg

20:47.680 --> 20:48.880
这样子这样子写

20:48.880 --> 20:50.960
那么我们其实可以减一些为a到z

20:52.400 --> 20:52.960
是不是可以了

20:53.520 --> 20:54.640
说减一些为a到z

20:55.120 --> 20:56.720
就可以匹配所有字母

20:56.720 --> 20:57.280
那么现在呢

20:57.280 --> 20:57.680
我们看

20:57.680 --> 20:59.040
给字母又加上了一个

20:59.760 --> 21:00.240
这些东西

21:00.640 --> 21:01.040
看不看

21:01.040 --> 21:02.000
这都是匹配的结果

21:03.520 --> 21:06.080
那如果说我要匹配所有的小写字母

21:06.080 --> 21:07.120
和大写字母了

21:07.120 --> 21:07.760
两种方式

21:07.760 --> 21:09.040
这里要么就这里加上i

21:10.160 --> 21:10.560
对吧

21:10.560 --> 21:11.840
那么大写字母也可以匹配

21:19.410 --> 21:20.690
我这里和这里变了

21:20.690 --> 21:21.170
这里

21:21.170 --> 21:21.810
这里变了

21:23.570 --> 21:23.810
好

21:23.810 --> 21:24.210
你看

21:24.210 --> 21:25.490
小大写字母也可以匹配

21:26.290 --> 21:27.010
这种方式

21:27.010 --> 21:28.130
除了用这种方式之外

21:28.130 --> 21:29.010
我们还可以这样子写

21:29.570 --> 21:31.010
a到z

21:31.570 --> 21:33.010
那这种写法相当于是什么呢

21:33.090 --> 21:36.130
相当于是你写了一个abcdefg

21:36.130 --> 21:37.250
a一直写到z

21:37.250 --> 21:39.970
然后呢又写一个abcdefg

21:39.970 --> 21:40.930
然后一直写到z

21:41.490 --> 21:41.890
对吧

21:41.890 --> 21:43.810
那就前面就前面不就是a到z吗

21:45.730 --> 21:48.210
后面不就是a到z吗

21:48.210 --> 21:49.170
再重生一次

21:49.810 --> 21:50.610
这个中央

21:50.610 --> 21:52.210
他只匹配一个字母

21:52.210 --> 21:53.330
他不会匹配多个的

21:54.290 --> 21:55.570
要么他要么就是小写

21:55.570 --> 21:56.370
要么就是大写

21:56.370 --> 21:57.090
对吧

21:57.090 --> 21:57.810
就这么的意思

21:58.690 --> 22:01.410
那如果说我要匹配所有的字母

22:01.410 --> 22:02.050
小写字母

22:02.050 --> 22:02.610
大写字母

22:02.690 --> 22:03.810
还要包括数字呢

22:03.810 --> 22:04.770
来继续写呗

22:05.970 --> 22:07.570
现在每一个地方都可以匹配了

22:08.370 --> 22:09.330
就这么个意思

22:09.810 --> 22:10.450
能看懂吗

22:13.200 --> 22:14.480
这就是这一块

22:14.480 --> 22:15.120
其实我们这里

22:15.120 --> 22:16.480
中国号里面还有一种用法

22:17.040 --> 22:18.160
就是我要匹配

22:18.160 --> 22:19.120
比方说这里小写

22:19.920 --> 22:22.960
我要匹配所有的非小写字母

22:24.000 --> 22:25.200
什么叫非小写字母

22:25.200 --> 22:26.800
只要你不是小写字母就小

22:26.800 --> 22:27.680
那可能是数字

22:27.680 --> 22:28.480
可能是空格

22:28.480 --> 22:30.480
可能是那个换行回车

22:30.480 --> 22:31.840
可能是那个大写字母

22:32.480 --> 22:34.640
你只需要在这个规则前边加上一个

22:35.200 --> 22:35.680
这个符号

22:35.680 --> 22:36.320
我都不知道叫啥

22:37.600 --> 22:38.960
数字6上面那个符号

22:38.960 --> 22:39.440
按shift

22:41.280 --> 22:42.080
那么这样子是不是

22:42.080 --> 22:43.280
除了小写字母之外

22:43.280 --> 22:43.920
都可以匹配

22:44.480 --> 22:45.120
对吧

22:45.120 --> 22:46.240
这就是中国号的用法

22:47.840 --> 22:48.080
好

22:48.080 --> 22:48.880
那么我们继续看

22:50.400 --> 22:51.040
支付规则

22:51.040 --> 22:51.680
那么就表示

22:51.680 --> 22:52.640
中国号里面出现了

22:52.640 --> 22:53.840
所有规则中匹配

22:53.840 --> 22:55.200
任意一个都可以匹配

22:55.760 --> 22:57.120
加上一个尖尖

22:58.400 --> 22:59.520
然后就表示这里边

23:00.240 --> 23:01.280
不满足这个规则的

23:01.360 --> 23:01.840
才匹配

23:03.280 --> 23:04.640
然后接下来我们看一下后边的

23:04.640 --> 23:05.600
后边的就比较简单了

23:05.600 --> 23:06.640
我们再简单看一下

23:07.200 --> 23:09.280
这个底表示匹配任意制服

23:10.240 --> 23:11.120
如果说你这里

23:11.120 --> 23:12.080
不是用融合号

23:12.080 --> 23:12.720
用的是底

23:13.440 --> 23:14.560
表示匹配任意制服

23:14.560 --> 23:15.840
所有制服包括空格

23:17.440 --> 23:19.040
包括那个字母

23:19.040 --> 23:20.560
汉字这些都可以匹配

23:20.560 --> 23:21.280
全都可以匹配

23:22.080 --> 23:23.040
这任意制服

23:24.080 --> 23:25.760
那这里就会出现一个问题

23:25.760 --> 23:26.560
如果说

23:27.440 --> 23:29.360
我要匹配的就是一个底

23:30.320 --> 23:30.800
那怎么办

23:30.880 --> 23:31.840
比方说这里有一个底

23:31.840 --> 23:33.200
我要匹配的就是这个底

23:33.200 --> 23:33.760
我要咋办

23:34.800 --> 23:35.280
咋办呢

23:36.400 --> 23:37.360
你得转移

23:37.360 --> 23:39.360
就跟那个支付规则里边转移服一样

23:39.360 --> 23:40.560
你得转移

23:40.560 --> 23:41.200
这样子的话

23:41.200 --> 23:43.200
它就表示匹配一个普通的底

23:44.240 --> 23:45.040
懂得意思吗

23:45.040 --> 23:46.880
不然的话底有特殊含义

23:46.880 --> 23:47.280
对吧

23:47.280 --> 23:48.560
底是有特殊含义的

23:49.280 --> 23:49.840
那就说了

23:49.840 --> 23:51.840
说到这就又一个新的问题出现了

23:51.840 --> 23:53.760
那如果说我要匹配一个斜缸呢

23:54.640 --> 23:56.080
我要匹配一个斜缸呢

23:56.080 --> 23:57.040
你这样子写是不行

23:57.040 --> 23:58.160
他就看直接爆错了

23:58.160 --> 23:58.800
为什么呢

23:58.800 --> 23:59.760
因为他觉得

23:59.920 --> 24:01.040
因为这个政策表的是

24:01.040 --> 24:02.480
写缸是有特殊含义的

24:02.480 --> 24:03.520
表示转移的意思

24:03.520 --> 24:04.160
比方说你看这

24:05.040 --> 24:07.680
把后边的一个底来进行转移

24:08.240 --> 24:08.560
对吧

24:08.560 --> 24:10.560
说一个写缸是有特殊含义的

24:10.560 --> 24:11.200
因此呢

24:11.200 --> 24:13.200
也这里如果说你要写写缸的话

24:13.200 --> 24:14.480
你要写两个写缸

24:15.440 --> 24:16.560
来匹配一个写缸

24:16.560 --> 24:17.840
这个字不算是一样的

24:17.840 --> 24:18.320
对吧

24:18.800 --> 24:19.520
是不是一样的道理

24:20.560 --> 24:21.200
那你这里

24:21.760 --> 24:22.560
这个是转移

24:22.880 --> 24:24.640
对后边这个进行转移

24:24.640 --> 24:26.240
后边这个本来是有特殊含义的

24:26.240 --> 24:27.680
但是一转移就表示

24:28.560 --> 24:29.440
一个普通写缸了

24:29.920 --> 24:31.600
包括那个左鞋杠也是一样

24:32.160 --> 24:33.360
左鞋杠你这样子写的话

24:33.360 --> 24:34.400
那个格式都错了

24:34.400 --> 24:34.960
对吧

24:34.960 --> 24:36.160
那你要这样子写

24:36.160 --> 24:37.600
表示匹配一个左鞋杠

24:39.600 --> 24:40.160
懂了意思吧

24:40.720 --> 24:42.400
我这里就懒得去替换了

24:42.400 --> 24:44.320
我就直接把这个政策

24:46.420 --> 24:46.980
写下来

24:54.140 --> 24:54.940
这是转移

24:57.840 --> 24:58.160
好

24:58.160 --> 24:59.120
那么我们继续往后看

24:59.760 --> 25:01.040
这些东西他就不用去备了

25:01.040 --> 25:01.920
你只需要知道

25:01.920 --> 25:03.600
这个综扩号是什么意思就行了

25:04.080 --> 25:06.560
不要那个鞋杠地表示匹配数字

25:06.560 --> 25:08.320
等价于这个

25:10.080 --> 25:11.920
鞋杠搭起的地表示匹配

25:11.920 --> 25:12.560
匪数字

25:12.560 --> 25:13.280
那等价是什么

25:13.280 --> 25:14.640
等价就在这里加了一个尖尖

25:17.680 --> 25:20.480
鞋杠S匹配所有的空白制服

25:20.480 --> 25:22.400
包括空格回车换行制表

25:22.400 --> 25:23.200
它都可以匹配

25:23.680 --> 25:24.800
那么也就是说什么意思呢

25:25.440 --> 25:26.160
S

25:26.160 --> 25:26.960
那么它可以匹配

25:27.600 --> 25:28.960
这里是不是空格可以匹配

25:28.960 --> 25:30.240
那如果是权具匹配的话

25:30.240 --> 25:31.440
你看这里是不是都可以匹配

25:32.400 --> 25:32.880
换行

25:33.600 --> 25:33.920
你看

25:35.360 --> 25:36.560
其实换行这里也可以匹配

25:36.560 --> 25:38.320
只差没法给你框出来了

25:38.400 --> 25:39.760
换行这里也是可以匹配的

25:40.160 --> 25:41.600
那么这些地方都可以匹配

25:42.000 --> 25:42.560
什么意思

25:43.680 --> 25:45.680
这就是那个鞋杠S

25:45.920 --> 25:47.120
那么鞋杠搭起的S

25:47.120 --> 25:49.680
就是匹配所有非空白制服

25:52.080 --> 25:52.720
就这个意思

25:54.560 --> 25:57.680
鞋杠W表示匹配的单词制服

25:57.680 --> 25:59.360
等价于A到Z

25:59.360 --> 26:01.040
小鞋的A到Z0到9

26:01.040 --> 26:02.080
还加上一个下滑线

26:02.800 --> 26:03.520
这些制服

26:03.520 --> 26:05.200
注意不是匹配单词

26:05.200 --> 26:06.800
是匹配单词制服

26:08.800 --> 26:11.040
加上不加这个G

26:11.760 --> 26:12.960
它可以匹配数字

26:12.960 --> 26:14.000
可以匹配字母

26:14.000 --> 26:15.920
比方说这里写一个W2

26:15.920 --> 26:17.840
它只会匹配第一个制服

26:17.840 --> 26:19.280
它都是匹配制服的

26:19.280 --> 26:20.400
我们这里讲的是什么

26:20.880 --> 26:22.480
制服匹配规则

26:22.480 --> 26:24.160
它都是匹配一个制服的

26:25.120 --> 26:27.600
搭起的W表示匹配的是

26:28.240 --> 26:29.040
就区个反

26:29.040 --> 26:29.520
对吧

26:29.760 --> 26:31.200
所有的非单词制服

26:31.680 --> 26:32.400
不要去背

26:32.400 --> 26:33.360
长文档就行了

26:33.920 --> 26:36.000
然后这个尖尖

26:36.000 --> 26:36.800
这个有意思

26:36.960 --> 26:38.640
这个匹配的是制服出来的开始

26:41.120 --> 26:42.320
但是它写的位置

26:42.320 --> 26:44.080
必须要写到规则开始的位置

26:44.560 --> 26:45.440
比方说什么意思呢

26:46.080 --> 26:47.520
比方说我这里写上一个尖尖

26:49.280 --> 26:50.160
这啥意思呢

26:50.160 --> 26:51.680
表示我要匹配的是谁

26:51.680 --> 26:54.400
匹配的是制服出来的开始的

26:54.960 --> 26:56.000
那个单词制服

26:57.040 --> 26:58.240
那你不写这个尖尖

26:58.240 --> 26:59.440
有什么区别呢

26:59.440 --> 27:00.960
比方说像这样的一个制服

27:00.960 --> 27:03.440
比方说我这里写了D码数字

27:04.080 --> 27:06.000
你看我们这里的中间加一些数字

27:06.080 --> 27:06.720
能不能匹配

27:06.720 --> 27:07.440
能匹配

27:07.440 --> 27:09.040
但是如果说我这里加上一个尖尖

27:09.040 --> 27:10.000
它就匹配不了了

27:10.000 --> 27:10.800
为什么呢

27:10.800 --> 27:11.920
因为表示了说

27:11.920 --> 27:13.600
我前边是制服算开始

27:14.400 --> 27:15.520
制服说开始过后

27:15.520 --> 27:17.040
马上就要跟一个数字

27:17.600 --> 27:18.880
那这个肯定是不满足

27:18.880 --> 27:19.360
对吧

27:19.360 --> 27:20.160
制服说开始的时候

27:20.160 --> 27:21.200
它跟的是一个什么

27:21.200 --> 27:22.400
跟的是一个字母

27:23.040 --> 27:23.840
它不是数字

27:24.800 --> 27:26.320
这个数字匹配能匹配上吗

27:26.320 --> 27:27.200
不能匹配上

27:27.200 --> 27:28.160
因为这个数字

27:28.160 --> 27:29.680
不在制服算的开始

27:30.160 --> 27:30.880
就这么一个意思

27:31.520 --> 27:32.560
好那么同样道理

27:32.560 --> 27:33.200
另外一个呢

27:33.200 --> 27:34.160
另外一个符号

27:34.160 --> 27:35.520
叫做Dollar

27:35.680 --> 27:36.880
表示制服算的结束

27:37.840 --> 27:38.960
好再看一下

27:38.960 --> 27:40.400
比方说我这里写上一个Dollar

27:41.040 --> 27:42.080
它能匹配它呢

27:42.080 --> 27:43.840
能匹配一个数字

27:43.840 --> 27:44.800
然后马上就结束了

27:45.360 --> 27:46.160
这是一个数字

27:46.160 --> 27:47.840
然后马上就制服算结束了

27:47.840 --> 27:48.960
它这个能匹配

27:48.960 --> 27:50.640
那如果说你是这种解法

27:51.200 --> 27:52.240
它就匹配不了

27:52.240 --> 27:53.280
为什么匹配不了呢

27:53.280 --> 27:55.840
因为没有办法满足这个规则

27:55.840 --> 27:56.000
对吧

27:56.000 --> 27:56.720
规则是什么

27:56.720 --> 27:57.440
有一个数字

27:57.440 --> 27:58.400
然后制服算结束了

27:59.520 --> 28:00.400
就没法满足

28:01.680 --> 28:02.720
好这是这一个

28:04.320 --> 28:04.880
然后再看

28:05.840 --> 28:06.480
后边就没啥了

28:06.480 --> 28:06.720
对吧

28:06.720 --> 28:08.960
这就是匹配单个制服

28:10.000 --> 28:11.920
同学们可以看张表

28:12.240 --> 28:13.920
来写一些制服串

28:14.480 --> 28:16.000
打开这个测试

28:16.000 --> 28:17.200
来练习一下

28:17.920 --> 28:19.040
体会一下这些规则

28:20.800 --> 28:21.520
给点时间

28:22.560 --> 28:22.800
OK

28:22.800 --> 28:24.000
我们接下来继续往后讲

28:24.480 --> 28:24.880
那么接下来

28:24.880 --> 28:26.640
我们了解了熟悉了

28:27.360 --> 28:28.960
单个制服的匹配规则之后

28:28.960 --> 28:30.640
我们来看一下连续的规则

28:31.280 --> 28:32.080
因为我们很多时候

28:32.080 --> 28:33.440
像什么邮箱验证

28:33.440 --> 28:33.840
对吧

28:33.840 --> 28:34.800
它都是连续的

28:34.960 --> 28:35.520
先有啥

28:35.520 --> 28:36.080
再有啥

28:36.080 --> 28:36.640
再有啥

28:37.520 --> 28:38.800
我们单个制服的规则

28:38.800 --> 28:40.320
是可以连续书写的

28:40.320 --> 28:43.520
可以用于匹配多个制服

28:43.520 --> 28:44.880
比方说像这种书写方式

28:46.400 --> 28:47.680
那么这个玩意是不是写了两

28:47.680 --> 28:49.600
其实我们现在就写了两个规则了

28:49.600 --> 28:50.400
这个玩意匹配它

28:50.400 --> 28:51.440
匹配一个数字

28:51.440 --> 28:51.760
对吧

28:51.760 --> 28:52.800
然后这个玩意匹配它

28:52.800 --> 28:53.520
匹配结束

28:53.520 --> 28:54.240
就是一个数字

28:54.240 --> 28:55.280
紧根就是结束了

28:55.840 --> 28:56.480
那么这里呢

28:56.480 --> 28:57.840
其实我们完全可以粘着写

28:57.840 --> 28:58.960
然后这个匹配它

28:58.960 --> 29:00.240
匹配有一个数字

29:00.240 --> 29:02.560
数字后边跟了一个字母

29:04.000 --> 29:04.400
对吧

29:05.280 --> 29:06.240
那我们看一下是不是匹配

29:06.240 --> 29:07.840
刚好匹配到的3A

29:07.840 --> 29:08.240
对不对

29:09.200 --> 29:09.920
就这么意思

29:11.600 --> 29:12.880
注意我现在不是全匹配

29:13.360 --> 29:14.960
它是一个规则

29:14.960 --> 29:16.400
刚好就匹配了一次

29:16.400 --> 29:17.280
匹配到的3A

29:17.920 --> 29:18.480
懂了意思吧

29:19.040 --> 29:20.240
它是可以连续书写的

29:20.800 --> 29:23.760
那比方说我要书写的是这么一个东西

29:23.760 --> 29:27.040
比方说制服开始了

29:27.040 --> 29:28.960
然后接下来就应该是一个数字

29:29.520 --> 29:32.560
书字后边要跟一个字母

29:33.120 --> 29:33.920
字母的话

29:33.920 --> 29:35.520
我们就用A到Z

29:36.800 --> 29:37.520
小写字母

29:38.320 --> 29:40.000
然后再跟一个数字

29:40.000 --> 29:41.200
然后字母说要结束

29:41.760 --> 29:42.720
那这个是匹配什么了

29:42.720 --> 29:44.480
这个玩意肯定是不是匹配不到了

29:44.480 --> 29:45.520
但它可以匹配什么

29:46.560 --> 29:48.720
开始的时候是一个数字

29:50.160 --> 29:51.600
然后跟一个字母

29:52.320 --> 29:53.840
然后再跟一个数字

29:53.840 --> 29:55.200
你看是这个匹配上了

29:56.240 --> 29:57.120
刚好匹配上这个

29:57.120 --> 29:58.240
然后字母说要结束了

29:58.240 --> 29:59.600
那如果说这里再多加一个

29:59.600 --> 30:00.560
又匹配不上了

30:00.720 --> 30:02.560
因为这个数字完了过后

30:02.560 --> 30:03.760
字母说应该结束

30:04.640 --> 30:05.200
懂了意思吧

30:05.200 --> 30:06.800
那如果说你把它结束服去掉

30:06.800 --> 30:08.080
是不是可以匹配上了

30:09.840 --> 30:10.720
就这么个意思

30:12.080 --> 30:14.960
那么如果说我有些规则是

30:15.440 --> 30:16.640
就是有多种规则

30:16.640 --> 30:18.160
就这样子写也可以

30:18.160 --> 30:19.760
另外一种写法也可以

30:20.480 --> 30:22.400
那么你就用或者把它割开

30:22.800 --> 30:23.920
那这又是啥意思呢

30:25.120 --> 30:25.680
看一下啊

30:27.680 --> 30:28.400
看一下这个例子

30:28.880 --> 30:29.760
这个例子是什么意思

30:30.400 --> 30:33.520
表示这套规则和这套规则

30:34.720 --> 30:35.760
取一个货则

30:36.240 --> 30:38.000
你要么满足它可以

30:38.400 --> 30:40.400
你满足它也可以

30:40.960 --> 30:41.760
那我来看一下

30:42.240 --> 30:44.000
你要么满足左边那个

30:44.000 --> 30:45.760
有一个数字在跟上

30:45.760 --> 30:46.800
就前面随便想

30:46.800 --> 30:47.600
因为我们也写开始

30:48.640 --> 30:49.840
前面跟上一个数字

30:49.840 --> 30:51.200
然后呢有一个字母

30:54.880 --> 30:55.280
你看

30:56.400 --> 30:57.920
它这里就已经匹配了

30:57.920 --> 30:59.520
一个字母跟上一个数字

30:59.520 --> 31:00.400
你看是不是可以匹配

31:00.960 --> 31:03.120
字母跟上一个数字可以匹配

31:03.440 --> 31:04.400
我这写个G嘛

31:06.000 --> 31:06.480
全局

31:08.560 --> 31:12.400
那如果说你是一个数字加字母

31:12.400 --> 31:13.200
你也可以匹配

31:13.600 --> 31:14.000
你看

31:16.780 --> 31:18.780
这个规则是不是可以匹配这二

31:19.100 --> 31:20.140
数字加字母

31:21.580 --> 31:22.620
另外一个

31:23.340 --> 31:25.500
这个规则是不是可以匹配这二

31:25.980 --> 31:26.300
对吧

31:26.300 --> 31:28.060
也是是字母加数字

31:28.060 --> 31:29.420
用两个规则都行

31:29.420 --> 31:31.420
就是用或者用一个数线

31:32.140 --> 31:32.620
好吧

31:32.620 --> 31:33.820
这就是连续的规则

31:33.820 --> 31:34.860
不复杂吧

31:34.860 --> 31:37.020
就你只要学会了单个规则之后

31:37.020 --> 31:38.220
后面就简单了

31:38.220 --> 31:39.100
连续的规则

31:39.100 --> 31:41.100
就是把多个规则连起来就完事了

31:41.900 --> 31:42.540
好 接下来

31:43.100 --> 31:44.620
规则是可以重复的

31:44.620 --> 31:45.420
那么这个东西呢

31:45.420 --> 31:47.180
我们一个专业名词叫做量词

31:47.740 --> 31:48.540
什么叫量词

31:49.900 --> 31:50.460
一个

31:50.460 --> 31:51.180
一条

31:51.180 --> 31:51.900
一张

31:51.900 --> 31:52.220
对吧

31:52.220 --> 31:53.180
就是量词

31:53.180 --> 31:54.780
量词就是表示数量的意思

31:56.620 --> 31:58.780
一个或者一段规则之后

31:58.780 --> 32:00.460
它都可以紧跟一个量词

32:00.540 --> 32:02.380
表示前面规则出现了次数

32:02.380 --> 32:03.180
比方说像这个

32:06.930 --> 32:07.810
这个表什么意思呢

32:09.170 --> 32:13.170
表示的是前边这个规则出现几次

32:13.170 --> 32:14.130
出现三次

32:16.210 --> 32:17.970
这个规则出现三次

32:18.770 --> 32:19.970
注意不是整个前边

32:19.970 --> 32:22.770
就紧挨着上一个规则出现三次

32:22.770 --> 32:23.970
那么它匹配的是什么

32:23.970 --> 32:24.850
匹配的就是说

32:24.850 --> 32:26.450
有前边有一个字母

32:27.090 --> 32:28.530
然后有一个数字

32:28.530 --> 32:30.130
数字要出现三次

32:31.330 --> 32:32.290
你看是不是可以匹配上

32:33.010 --> 32:33.410
对吧

32:33.890 --> 32:35.250
后边就匹配不上了

32:35.250 --> 32:35.970
前边

32:35.970 --> 32:37.170
就是有一个字母

32:37.170 --> 32:39.490
字母后边有出现了三次的数字

32:40.210 --> 32:40.930
就这么个意思

32:41.330 --> 32:43.170
但是如果说你把前边扩起来

32:43.170 --> 32:44.290
用个小扩号扩起来

32:48.880 --> 32:50.080
这样表示什么意思呢

32:50.080 --> 32:52.640
表示整个前面的规则出现三次

32:53.200 --> 32:53.840
那就什么意思

32:54.240 --> 32:56.400
那就是一个字母跟一个数字

32:56.400 --> 32:57.600
一个字母跟一个数字

32:57.600 --> 32:58.960
一个字母跟一个数字

32:59.440 --> 33:00.400
那这样可以匹配

33:00.400 --> 33:00.720
对吧

33:00.720 --> 33:02.240
只要是一个字母跟一个数字

33:02.240 --> 33:03.120
它都可以匹配

33:03.120 --> 33:04.240
那么就刚好匹配上了

33:04.240 --> 33:04.800
把这个东西

33:07.540 --> 33:08.020
懂了意思吗

33:08.820 --> 33:09.540
就这么个意思

33:10.100 --> 33:10.900
这是量词

33:10.900 --> 33:12.500
那么量词有哪些写法呢

33:12.500 --> 33:13.380
你可以这样子写

33:14.340 --> 33:16.660
两个大扩号里边写上次数

33:16.660 --> 33:18.580
那就是前面的规则出现多少次

33:19.140 --> 33:20.020
也可以这样子写

33:20.340 --> 33:21.940
那么就出现n到m次

33:21.940 --> 33:22.900
比方说你写个2

33:23.300 --> 33:23.780
写个3

33:23.780 --> 33:24.980
那就出现2到3次

33:25.380 --> 33:27.220
或者是写个2到6次

33:27.220 --> 33:27.540
对吧

33:27.540 --> 33:28.020
都可以写

33:28.420 --> 33:29.540
那么如果说你写个

33:29.540 --> 33:30.420
这个东西一个兜号

33:30.420 --> 33:31.300
后边不写的话

33:31.300 --> 33:33.220
就表示至少出现n次

33:33.220 --> 33:34.100
那比方说你写的

33:34.100 --> 33:35.060
这里写的是2

33:35.380 --> 33:37.060
就至少出现2次

33:38.660 --> 33:40.740
3次4次5次6次100次

33:40.740 --> 33:41.220
都可以

33:42.340 --> 33:42.980
新号呢

33:42.980 --> 33:44.660
如果说你写的是新号呢

33:44.660 --> 33:46.100
它等同于这种写法

33:46.580 --> 33:48.820
出现0次或多次

33:49.220 --> 33:50.260
写个温号呢

33:50.260 --> 33:51.220
表示01

33:51.220 --> 33:53.620
表示出现1次或0次

33:53.860 --> 33:54.660
写个加号呢

33:54.660 --> 33:56.980
表示出现1次或多次

33:57.380 --> 33:58.100
那就量词

33:59.460 --> 34:00.500
那么至此呢

34:01.060 --> 34:02.740
整个政策表达是

34:03.940 --> 34:06.100
它的基本最核心的东西

34:06.100 --> 34:06.660
就完了

34:07.220 --> 34:09.380
我们平时开发要用的东西

34:09.380 --> 34:11.140
也就这么些核心的东西了

34:12.020 --> 34:13.540
我们就可以使用这个政策表达

34:13.540 --> 34:15.620
是来完成各种的样的验证

34:16.340 --> 34:16.500
好

34:16.500 --> 34:17.380
我们来接着

34:17.380 --> 34:20.260
进入今天的那个练习题

34:23.540 --> 34:23.700
好

34:23.700 --> 34:24.100
练习题

34:24.100 --> 34:25.300
我们有两道练习题

34:30.450 --> 34:31.250
我们看第一题

34:31.890 --> 34:32.530
第一题呢

34:32.530 --> 34:33.250
是一个表达

34:33.250 --> 34:34.290
那个表达的验证呢

34:34.290 --> 34:35.250
我们之前是做过的

34:35.250 --> 34:35.570
对吧

34:35.570 --> 34:36.370
那么这节课呢

34:36.370 --> 34:37.810
我们要做的就是

34:37.810 --> 34:38.850
完成这个GS

34:38.850 --> 34:40.610
GS里边就像填空一样

34:40.610 --> 34:41.810
其他地方我都给你写好了

34:42.290 --> 34:43.890
你不需要再重复的去写了

34:43.890 --> 34:44.690
有兴趣的同学呢

34:44.690 --> 34:45.330
可以看一下

34:45.330 --> 34:46.930
我把它稍微封装了一下

34:47.730 --> 34:48.290
不重要

34:48.290 --> 34:49.810
我们重要的是要写这两个地方

34:50.850 --> 34:52.530
一个是验证邮箱

34:52.530 --> 34:53.410
一个是验证库存

34:53.410 --> 34:54.290
一个是验证价格

34:54.290 --> 34:55.410
这三个地方要验证

34:55.970 --> 34:56.210
好

34:56.210 --> 34:57.090
这里是一个函数

34:57.890 --> 34:59.330
我只是告诉你怎么写就行了

34:59.330 --> 35:00.290
你不用去管

35:00.290 --> 35:01.810
其他地方怎么实现的

35:01.810 --> 35:02.770
如果说有兴趣的话

35:02.770 --> 35:03.650
单独去看一下

35:03.650 --> 35:04.690
我们学一块知识呢

35:04.690 --> 35:07.090
就单独去专注于那一块知识

35:07.090 --> 35:07.810
就够了

35:09.810 --> 35:11.170
这个函数是什么意思

35:11.330 --> 35:12.210
它要进行验证

35:13.170 --> 35:14.610
验证的东西给你传进来了

35:15.170 --> 35:16.370
这个Value给你传进来了

35:16.370 --> 35:17.810
比方说我们在打印一下Value

35:19.970 --> 35:20.690
我们来看一下

35:23.870 --> 35:24.830
这是验证邮箱

35:25.950 --> 35:27.230
我们这里写上一个

35:27.710 --> 35:28.990
你看是不是把这个Value

35:28.990 --> 35:30.750
它不停的在运行这个函数

35:30.750 --> 35:33.230
只要应该进行验证的时候

35:33.230 --> 35:34.910
它就会自动的运行这个函数

35:35.710 --> 35:36.830
然后这个函数呢

35:36.830 --> 35:38.830
它会把这个文奔框的值给你传进来

35:42.530 --> 35:42.930
是吧

35:42.930 --> 35:44.450
把这些东西全部给你传进来

35:44.530 --> 35:46.770
你要做的事情就是验证这个东西

35:46.770 --> 35:47.730
是不是正确了

35:48.610 --> 35:50.610
也就是验证这个Value是不是正确的

35:51.810 --> 35:53.410
正确的话你就啥也不返回

35:53.410 --> 35:55.490
或者是返回一个那或者是返回一个空置不串

35:55.490 --> 35:57.010
都可以错误的话

35:57.010 --> 35:58.690
你要返回一个错误消息

35:58.690 --> 36:00.850
比方说我这里返回一个错了

36:02.610 --> 36:03.250
好我们来看一下

36:03.810 --> 36:04.850
这样子它就里边就会

36:04.850 --> 36:06.210
只要你返回了错误消息

36:06.210 --> 36:07.090
就表示有错误

36:08.050 --> 36:08.610
懂的意思吧

36:08.610 --> 36:09.250
所以说你现在

36:09.650 --> 36:11.170
其他地方不用关注

36:11.170 --> 36:13.490
注意力集中站这里

36:13.650 --> 36:15.650
我如何知道它是正确的还是错误的

36:16.210 --> 36:17.330
那么这里呢就涉及到

36:17.330 --> 36:18.610
当然我们首先可以看一下

36:18.610 --> 36:20.050
你有没有写对吧

36:20.050 --> 36:21.170
如果你写都没有写

36:21.810 --> 36:22.450
这个Value

36:23.250 --> 36:24.130
你都没有写邮箱

36:24.130 --> 36:25.410
那我给你返回一个错误

36:25.410 --> 36:26.850
请输入邮箱

36:28.290 --> 36:28.850
比方说这里

36:29.330 --> 36:29.890
你都没有写

36:30.850 --> 36:31.970
那就请输入邮箱

36:31.970 --> 36:32.930
那这个没有什么问题

36:33.570 --> 36:35.090
那现在如果说你写了呢

36:35.570 --> 36:36.450
如果说你写了

36:36.450 --> 36:38.290
我要看你的邮箱写的这么正确

36:39.090 --> 36:40.050
是不是要用这么的表达式

36:40.530 --> 36:43.010
我们来写一个邮箱的这么的表达式

36:43.330 --> 36:45.010
Mail

36:46.450 --> 36:47.010
怎么写的

36:47.010 --> 36:48.210
有它这么大的时候是什么呢

36:49.490 --> 36:49.890
是什么

36:50.690 --> 36:52.610
我们首先来看一下邮箱

36:52.610 --> 36:53.570
它有哪些特点

36:54.130 --> 36:55.730
首先是制服的开始

36:55.730 --> 36:57.490
因为我要匹配整个制服串

36:57.490 --> 36:59.810
不是说我要匹配制服串中包含什么

37:00.370 --> 37:01.810
我要匹配的是整个制服串

37:02.690 --> 37:03.330
看一下邮箱

37:04.290 --> 37:06.130
前边有一些制服

37:07.170 --> 37:08.930
邮箱前边有什么制服呢

37:10.050 --> 37:11.330
有可能有数字

37:11.330 --> 37:12.450
有可能有字母

37:12.610 --> 37:14.210
有可能有下滑线

37:14.770 --> 37:15.730
就是单词制服

37:16.290 --> 37:17.490
邮箱的其实是写法用

37:17.490 --> 37:18.850
这么的表达式的写法有很多

37:18.850 --> 37:19.890
我写一个最基本的

37:22.420 --> 37:24.660
前边一开始会有一个单词制服

37:24.660 --> 37:26.580
我们在这里先测试好了过

37:26.580 --> 37:27.140
再拿过去

37:33.460 --> 37:35.220
你看这里应该有邮箱

37:38.050 --> 37:38.450
对吧

37:38.450 --> 37:40.770
看一下这里边还有没有其他邮箱

37:42.770 --> 37:45.010
那么前边其实还不一定是单词制服

37:45.010 --> 37:46.770
还有可能会包含点

37:48.610 --> 37:50.130
就是它邮箱里边

37:50.290 --> 37:51.490
我们刚才用这种方式来写

37:53.330 --> 37:55.490
前边那一坨有可能是什么呢

37:56.050 --> 37:56.850
有可能是

37:56.850 --> 37:58.050
我就用任意制服吧

37:58.610 --> 38:00.450
用任意制服出现几次呢

38:01.010 --> 38:03.090
出现一次或多次

38:03.090 --> 38:04.850
就这一坨是不是一次或多次

38:04.850 --> 38:06.050
随便它制服都可以

38:06.690 --> 38:07.570
一次或多次

38:07.570 --> 38:09.650
当我用什么量次加号

38:11.410 --> 38:13.250
任意制服出现一次或多次

38:13.250 --> 38:15.650
然后紧跟上了一个什么AIT

38:16.690 --> 38:17.730
你看是不是匹配到这了

38:18.530 --> 38:21.250
任意制服出现一次或多次

38:21.250 --> 38:22.370
然后跟上了一个AIT

38:22.370 --> 38:23.410
匹配到这了

38:24.450 --> 38:25.890
然后接下来又是什么

38:25.890 --> 38:29.890
接下来又是任意制服出现一次或多次

38:30.610 --> 38:31.570
就这一段

38:31.570 --> 38:32.450
我要匹配这一段

38:33.970 --> 38:36.290
任意制服出现一次或多次

38:37.330 --> 38:37.810
第二

38:39.090 --> 38:39.730
那么现在呢

38:39.730 --> 38:41.890
因为这个底本身也包含任意制服

38:42.450 --> 38:43.810
本身也包含任意制服

38:43.810 --> 38:46.450
所以说这个底也匹配进去了

38:46.450 --> 38:46.930
没关系

38:47.810 --> 38:49.090
那么接下来是这一部分

38:49.730 --> 38:51.170
就这一部分我已经匹配完了

38:51.170 --> 38:52.290
那么这一部分

38:52.290 --> 38:53.890
这一部分就是一个底跟上

38:56.050 --> 38:57.410
任意制服一次多次

38:58.770 --> 38:59.410
我们这里

39:00.050 --> 39:00.930
又匹配一个

39:00.930 --> 39:01.890
注意底要转移啊

39:01.890 --> 39:03.890
这里是表示匹配一个底要转移

39:06.800 --> 39:07.600
匹配一个底

39:08.240 --> 39:10.560
然后了任意制服出现一次或多次

39:13.360 --> 39:14.080
干脆我这里

39:15.360 --> 39:15.920
我看一下

39:15.920 --> 39:16.880
这后边的就

39:16.880 --> 39:18.240
这后边的干脆这样子

39:18.320 --> 39:19.200
我把这个地方

39:20.000 --> 39:21.280
匹翼消除一下

39:21.280 --> 39:22.240
这个底

39:22.240 --> 39:24.000
这是任意制服匹配一次或多次

39:24.000 --> 39:26.240
那么它目前是匹配到到后边所有的了

39:26.240 --> 39:26.720
对吧

39:26.720 --> 39:27.760
就匹配到后边所有的

39:27.760 --> 39:28.960
因为底也是任意制服

39:29.360 --> 39:30.880
那我如果说要做到这样子

39:33.120 --> 39:33.680
任意

39:35.600 --> 39:36.880
非空制服

39:36.880 --> 39:37.920
你不能是有空格

39:37.920 --> 39:38.080
对吧

39:38.080 --> 39:39.440
你后面不能来一个空格

39:39.440 --> 39:40.240
那是不行的

39:40.960 --> 39:42.080
空格要除外

39:42.080 --> 39:43.200
底儿也要除外

39:43.200 --> 39:45.280
就是我叫精确的匹配到这里一块

39:46.240 --> 39:47.360
第二除外

39:47.360 --> 39:48.560
空格除外

39:48.560 --> 39:50.240
那这个东西怎么写呢

39:50.240 --> 39:51.120
你可以这样子写

39:51.920 --> 39:52.560
到了A塔了

39:52.560 --> 39:53.120
看到没

39:53.120 --> 39:54.320
那么接下来我用个中货号

39:55.440 --> 39:56.800
非空制服用啥

39:56.800 --> 39:58.320
用鞋杠上大写的S

39:59.600 --> 40:00.640
只要你不是空格

40:00.640 --> 40:02.560
回车换行

40:03.280 --> 40:03.680
制表

40:04.960 --> 40:08.000
只要不是空白制服就行

40:10.720 --> 40:11.360
然后

40:11.360 --> 40:12.000
看是这样子吧

40:12.880 --> 40:13.760
空白制服

40:13.920 --> 40:14.800
鞋杠S

40:14.800 --> 40:15.760
然后加上一个

40:16.640 --> 40:17.040
底儿

40:18.240 --> 40:18.800
鞋杠底儿

40:20.240 --> 40:20.720
取个

40:21.120 --> 40:21.680
取个反

40:22.240 --> 40:23.040
是不是可以这样子

40:23.680 --> 40:25.360
我不要匹配就是

40:25.360 --> 40:26.880
就是除了空白制服

40:26.880 --> 40:28.560
除了底儿之外的

40:28.560 --> 40:29.360
其他制服

40:31.280 --> 40:31.920
能看到吗

40:32.720 --> 40:33.200
A塔

40:33.200 --> 40:35.360
就A塔后边的制服

40:35.360 --> 40:36.480
它不能是空白

40:36.480 --> 40:37.680
也不能是底儿

40:37.680 --> 40:38.880
就是我把底儿写出来

40:38.880 --> 40:39.600
空白写出来

40:39.600 --> 40:40.320
然后取个反

40:41.600 --> 40:42.240
好接下来

40:42.240 --> 40:44.000
这种规则出现几次呢

40:44.000 --> 40:45.520
出现一次多次

40:45.520 --> 40:46.400
准备匹配到这了

40:48.000 --> 40:48.640
好接下来

40:48.640 --> 40:49.440
继续往后匹配

40:50.320 --> 40:51.280
继续往后匹配

40:51.280 --> 40:52.240
后边是什么呢

40:52.240 --> 40:54.080
后边是有一个底儿

40:55.040 --> 40:55.360
对吧

40:55.360 --> 40:56.400
看是不是匹配到底儿了

40:56.960 --> 40:57.440
一个底儿

40:57.440 --> 40:58.800
然后又是一个

41:00.080 --> 41:01.680
这个规则出现一次多次

41:05.070 --> 41:05.870
准备匹配到这了

41:06.670 --> 41:07.710
那么后边这一坨

41:07.710 --> 41:08.510
是不是又可以来

41:08.510 --> 41:08.990
对吧

41:08.990 --> 41:09.790
又是这一团

41:10.270 --> 41:10.750
一串

41:10.750 --> 41:11.470
好那这里呢

41:11.470 --> 41:12.830
其实同学们注意一下

41:12.830 --> 41:13.870
就是我现在用鼠标

41:13.870 --> 41:14.830
它框住这一部分

41:14.830 --> 41:15.790
就这一部分

41:15.790 --> 41:16.910
那么它匹配的实际上

41:16.910 --> 41:18.030
是这种格式的

41:18.590 --> 41:20.270
那么这种格式在邮箱里边

41:20.270 --> 41:22.110
有可能最后出现一次

41:22.670 --> 41:24.270
也有可能会出现两次

41:24.270 --> 41:24.830
就这一个

41:25.390 --> 41:26.110
这个东西

41:26.110 --> 41:27.230
它可能会出现一次

41:27.230 --> 41:28.590
也可能会出现两次

41:28.910 --> 41:29.310
对吧

41:29.310 --> 41:30.430
所以中文这里的可以这样

41:30.910 --> 41:32.750
把这一部分的扩起来

41:36.240 --> 41:37.280
然后给它加个量词

41:38.080 --> 41:39.360
一次或两次

41:40.080 --> 41:41.120
那这样子依然了

41:42.160 --> 41:43.600
它这个东西一出现一次

41:43.600 --> 41:44.160
可以匹配

41:44.160 --> 41:45.840
出现两次也可以匹配

41:46.560 --> 41:47.200
好我这里就

41:47.200 --> 41:48.880
然后随总整个制服室结束

41:48.880 --> 41:50.960
以后不要再跟我加一些乱七八糟的东西了

41:51.360 --> 41:52.240
整个制服室结束了

41:53.440 --> 41:54.960
好那么这就是一个邮箱的

41:55.440 --> 41:56.480
证则表达式的匹配

41:57.440 --> 41:58.320
我们来看一下

41:58.720 --> 41:59.200
看一下这个

42:01.920 --> 42:02.800
哦这就换好了

42:03.280 --> 42:04.480
好就匹配上了

42:05.920 --> 42:07.200
以后的这个证则表达式之后

42:07.200 --> 42:08.400
我们是不是可以验证了

42:08.400 --> 42:08.880
对吧

42:08.880 --> 42:10.800
这个mail rig来进行验证

42:11.440 --> 42:12.320
怎么验证到test

42:12.880 --> 42:13.760
验证哪个制服室

42:13.760 --> 42:14.720
验证这个value

42:15.600 --> 42:17.360
它一下验证有没有通过

42:17.360 --> 42:19.440
如果说验证通过了就ok

42:19.440 --> 42:21.280
如果说验证没有通过的话

42:22.080 --> 42:23.520
那么就是邮箱格式有错误

42:23.520 --> 42:25.120
我就反回一个错误消息

42:25.120 --> 42:26.720
邮箱格式错误

42:28.480 --> 42:29.280
好我们来看一下

42:29.840 --> 42:30.880
现在我们写这个邮箱

42:31.440 --> 42:33.200
你看现在目前是邮箱格式错误的

42:33.680 --> 42:35.360
然后只有怎么证券呢

42:35.360 --> 42:36.240
哎这样是正确了

42:37.040 --> 42:37.440
对吧

42:37.840 --> 42:38.640
这样是错误了

42:39.120 --> 42:39.600
看到没

42:39.600 --> 42:41.040
这就可以验证邮箱格式了

42:41.840 --> 42:42.800
好这是第一个啊

42:43.280 --> 42:44.160
验证邮箱格式

42:44.240 --> 42:44.880
验证邮箱格式呢

42:44.880 --> 42:47.440
以前我觉得我不知道现在怎么样了

42:47.440 --> 42:49.760
以前还经常好面试题的

42:50.160 --> 42:51.840
让你写个邮箱证的表达式

42:51.840 --> 42:52.880
当然这样子写出来

42:53.120 --> 42:54.080
就每个人写法呢

42:54.080 --> 42:55.120
也有很多的差异

42:55.440 --> 42:56.480
大体上差不多就行了

42:57.440 --> 42:58.240
验证库存

42:59.360 --> 43:00.240
库存这一块呢

43:00.480 --> 43:01.280
它是什么规则呢

43:01.280 --> 43:02.320
它必须是一个准数

43:04.000 --> 43:05.920
这个准数不能以零开头

43:05.920 --> 43:06.320
对吧

43:06.320 --> 43:07.360
你不能这样子写啊

43:08.000 --> 43:08.960
它得是一个准数

43:09.760 --> 43:10.960
也不可能是附属对吧

43:10.960 --> 43:12.320
它不能以零开头

43:13.040 --> 43:14.880
也就是说这个表达式就比较好写了

43:14.880 --> 43:15.760
首先来判断一下

43:15.760 --> 43:17.440
如果说你没有写库存的话

43:17.440 --> 43:20.480
我就反回请田写库存

43:20.800 --> 43:22.640
然后我接下来用证则表达式来验证

43:27.490 --> 43:28.290
库存的写法

43:28.290 --> 43:29.250
至于说要开始

43:29.250 --> 43:30.210
至于说要结束

43:30.210 --> 43:31.010
先把这个写出来

43:32.050 --> 43:33.410
至于说要开始和结束

43:33.410 --> 43:34.290
然后呢

43:34.290 --> 43:36.050
不能以零开始怎么写呢

43:36.850 --> 43:37.490
是不是这样子写

43:38.050 --> 43:38.610
非零

43:39.250 --> 43:40.530
它不是以零开始的

43:41.490 --> 43:44.770
应该这样子写吧

43:44.770 --> 43:45.890
一到九

43:45.890 --> 43:48.770
它是用一到九的数字开头

43:48.770 --> 43:49.730
到这里开

43:50.530 --> 43:51.810
所以二就可以匹配

43:51.810 --> 43:52.370
对吧

43:52.370 --> 43:53.650
零就不能匹配

43:53.650 --> 43:54.450
匹配不上

43:54.450 --> 43:55.810
一可以匹配

43:55.810 --> 43:56.610
二可以匹配

43:56.610 --> 43:57.330
三可以匹配

43:57.330 --> 43:58.130
九可以匹配

43:58.130 --> 44:00.610
所以说它是一到九开头

44:01.490 --> 44:04.290
然后后边呢跟上数字

44:04.290 --> 44:06.290
是不是跟上任何的数字都可以

44:06.290 --> 44:07.970
后边跟上写杠地

44:07.970 --> 44:08.690
数字

44:09.410 --> 44:10.130
但那个数字呢

44:10.130 --> 44:12.130
可能会出现零次或多次

44:12.130 --> 44:13.650
为什么会出现零次或多次呢

44:13.650 --> 44:15.090
因为一光写一个一

44:15.090 --> 44:16.210
是不是也可以

44:16.210 --> 44:17.090
光写一个一的话

44:17.090 --> 44:18.610
那这里是不是匹配上了

44:18.610 --> 44:19.650
那后边无所谓

44:19.650 --> 44:20.690
后边可以没有数字

44:20.690 --> 44:21.650
比较库存为一

44:21.650 --> 44:22.850
是不是也可以

44:22.850 --> 44:23.570
就这一部分呢

44:23.570 --> 44:24.850
是零次到多次

44:24.850 --> 44:26.130
也就是说这里呢可以写

44:26.130 --> 44:26.930
一二

44:26.930 --> 44:27.650
一一

44:27.650 --> 44:28.450
一零

44:28.450 --> 44:29.410
一零九

44:29.410 --> 44:30.530
写多次可以

44:30.530 --> 44:31.170
但是呢

44:31.170 --> 44:32.770
也可以写零次

44:32.770 --> 44:34.850
就是这个一后边跟上零次或多次

44:34.850 --> 44:36.050
就完事了

44:36.050 --> 44:36.770
我就返回

44:36.770 --> 44:37.410
我就判断

44:38.130 --> 44:39.410
如果说test

44:39.410 --> 44:40.210
匹配

44:40.210 --> 44:40.610
value

44:41.410 --> 44:42.290
能不能匹配

44:42.290 --> 44:43.570
如果说不能匹配的话

44:43.570 --> 44:44.450
那么就表示

44:45.490 --> 44:46.530
库存

44:46.530 --> 44:47.330
格式

44:47.330 --> 44:48.290
错误

44:48.290 --> 44:48.930
当然呢

44:48.930 --> 44:50.450
根据这个我们表达式的知识

44:50.450 --> 44:52.130
这个字面量是不是也可以直接放这

44:53.250 --> 44:54.690
这可以直接放这

44:54.690 --> 44:55.970
没问题的

44:55.970 --> 44:56.450
好了

44:56.450 --> 44:57.010
我们来看一下

44:57.730 --> 44:58.690
库存这里

44:58.690 --> 44:59.810
库存格式错误

44:59.810 --> 45:00.450
零

45:00.450 --> 45:01.090
格式错误

45:02.210 --> 45:02.610
一

45:02.610 --> 45:03.170
没问题

45:03.170 --> 45:04.290
这些都没问题

45:04.290 --> 45:04.930
你写个第二

45:04.930 --> 45:05.410
大不行

45:05.410 --> 45:06.450
现在库存是整组数

45:08.370 --> 45:08.690
好

45:08.690 --> 45:09.970
接下来单价

45:11.250 --> 45:12.290
价格

45:12.290 --> 45:12.850
还是一样

45:12.850 --> 45:14.050
我们来判断一下

45:14.050 --> 45:15.730
如果说这个白领没有值

45:15.730 --> 45:16.930
那就返回

45:16.930 --> 45:19.410
就是请输入价格

45:20.370 --> 45:20.610
好

45:20.610 --> 45:21.490
接下来

45:21.490 --> 45:22.690
如果说输入了

45:23.970 --> 45:25.490
什么价格是正确的

45:27.090 --> 45:28.050
什么价格是正确的呢

45:29.010 --> 45:29.890
前边

45:29.890 --> 45:30.930
你要么呢

45:30.930 --> 45:32.130
就这么写

45:33.330 --> 45:34.290
就要么就这么写

45:34.290 --> 45:34.850
就是

45:34.850 --> 45:36.770
所谓分成两分成两段

45:37.730 --> 45:38.530
小数点

45:38.530 --> 45:39.330
因为价格必须

45:40.290 --> 45:40.930
价格呢

45:40.930 --> 45:42.770
必须是那个两位数

45:42.770 --> 45:43.970
必须就小数点

45:43.970 --> 45:45.010
后边必须要写两位

45:45.010 --> 45:45.570
比方说

45:45.570 --> 45:47.170
你哪怕写的是整数

45:47.170 --> 45:48.690
那后边都要写两位

45:48.690 --> 45:49.810
懂了意思吧

45:49.810 --> 45:51.010
就比方说

45:51.010 --> 45:52.370
我这里是这样要求的

45:52.370 --> 45:53.810
比方说我这里要这样要求

45:54.690 --> 45:55.170
那么

45:55.170 --> 45:57.170
我这要分成两两部分来判断

45:57.170 --> 45:58.290
一个是左边这部分

45:59.090 --> 46:01.010
左边这个部分是不是整数

46:01.010 --> 46:01.730
但是不过呢

46:01.730 --> 46:03.650
这个整数是可以直接写个零的

46:04.370 --> 46:06.050
但是你不能写零零

46:06.210 --> 46:07.650
你可以写一个零

46:07.650 --> 46:08.610
零点

46:08.610 --> 46:09.650
零点五

46:09.650 --> 46:10.610
这样子是可以的

46:11.410 --> 46:12.930
就左边这个不整数呢

46:12.930 --> 46:14.530
你是可以直接写零的

46:15.570 --> 46:16.450
也就是说呢

46:16.450 --> 46:18.050
我们这个正转表达是

46:18.050 --> 46:19.490
跟上面那个整数部分

46:19.490 --> 46:20.610
就前边那一部分

46:20.610 --> 46:22.290
跟上面那个整数部分是不是一样的

46:27.580 --> 46:28.620
这是一种情况

46:29.180 --> 46:30.220
是不是这是一种情况

46:31.580 --> 46:31.980
好

46:31.980 --> 46:32.860
还有一种情况呢

46:32.860 --> 46:33.820
就是直接写了一个零

46:35.420 --> 46:35.740
是不是

46:36.780 --> 46:37.980
这样的可以匹配吧

46:37.980 --> 46:38.380
然后呢

46:38.380 --> 46:39.260
这样子

46:39.260 --> 46:39.900
也可以匹配

46:40.700 --> 46:41.740
这样子就不能匹配了

46:42.940 --> 46:43.900
这样子不能匹配

46:43.900 --> 46:45.100
你看目前只能匹配到这

46:45.100 --> 46:45.820
比方说我们这里

46:46.780 --> 46:47.340
现在整数

46:47.900 --> 46:48.620
这里就结束了

46:49.980 --> 46:50.300
好了

46:50.300 --> 46:51.020
这样子匹配不了

46:51.660 --> 46:52.380
一可以匹配

46:53.340 --> 46:54.300
一零可以匹配

46:55.260 --> 46:56.060
零可以匹配

46:56.780 --> 46:58.300
零一就不能匹配了

46:58.300 --> 46:59.100
对吧

46:59.100 --> 46:59.980
就是这一套

47:00.780 --> 47:01.420
这个东西

47:01.980 --> 47:02.780
和这个东西

47:02.780 --> 47:03.660
取任何一个

47:04.220 --> 47:04.380
好

47:04.380 --> 47:05.340
这是左边那一部分

47:05.820 --> 47:06.060
好

47:06.060 --> 47:06.620
左边那部分

47:06.620 --> 47:07.660
我们把它扩起来

47:07.660 --> 47:08.380
为什么要扩起来

47:08.380 --> 47:08.940
因为

47:08.940 --> 47:09.420
不然的话

47:09.420 --> 47:10.460
我们后边再写规则

47:10.540 --> 47:11.260
它会受到这个

47:11.260 --> 47:12.460
或者符号的影响

47:12.460 --> 47:13.500
导致一些错乱

47:13.500 --> 47:14.460
那么我们把扩起来

47:14.460 --> 47:15.420
表示一个整体

47:15.420 --> 47:16.300
左边那一块

47:16.300 --> 47:16.860
跑厅了

47:16.860 --> 47:18.220
就这么一个样子了

47:19.100 --> 47:19.340
好

47:19.340 --> 47:20.300
接下来是一个什么

47:20.300 --> 47:21.420
是不是一个小数点

47:22.620 --> 47:23.580
是不是匹配这么一个东西

47:24.060 --> 47:25.020
是不是有个点

47:25.500 --> 47:27.500
第二后边是不是两位小数

47:28.380 --> 47:29.500
第二后边是两位小数

47:29.500 --> 47:30.620
管理是什么两位小数

47:30.620 --> 47:31.820
反正是必须要两位小数

47:32.380 --> 47:33.180
写杠D

47:33.740 --> 47:34.380
出现几次

47:34.380 --> 47:35.100
出现二次

47:36.380 --> 47:37.180
是不是这样子写

47:37.820 --> 47:38.380
对吧

47:38.380 --> 47:39.020
零零

47:39.500 --> 47:40.940
假设我们就是这样的要求

47:41.660 --> 47:43.260
于是这个真的比较是一些好了

47:43.260 --> 47:43.900
判断一下

47:43.900 --> 47:44.780
reg test

47:46.620 --> 47:47.820
如果说我匹配不上

47:48.540 --> 47:49.420
那么我就告诉你

47:51.340 --> 47:52.940
价格格式错误

47:52.940 --> 47:54.380
当然我这个格式要求的

47:54.380 --> 47:55.340
有点太严格了

47:55.980 --> 47:57.340
比方说后边必须要至少

47:57.340 --> 47:58.540
必须要有两位小数

47:59.020 --> 47:59.820
多一位不行

47:59.820 --> 48:00.700
少一位也不行

48:00.700 --> 48:02.700
哪怕是零零一的必须要写出来

48:02.700 --> 48:04.140
有点太过于严格了

48:04.140 --> 48:04.700
不过没关系

48:04.700 --> 48:05.900
我觉得就用这种来练习

48:06.460 --> 48:10.460
那么这里写19.55

48:10.460 --> 48:11.260
没问题

48:11.260 --> 48:13.820
这里就这些都是错误

48:13.820 --> 48:15.180
OK

48:15.180 --> 48:17.340
这就是政策表达式

48:17.340 --> 48:18.700
第一题的练习

48:18.700 --> 48:20.620
第二题

48:20.620 --> 48:25.980
第二题是什么呢

48:25.980 --> 48:27.500
是我在网上呢

48:27.500 --> 48:30.460
去找了一篇一个小数的其中

48:30.460 --> 48:32.140
一个章节

48:32.140 --> 48:34.140
现在呢

48:34.140 --> 48:35.340
我把这个章节的内容呢

48:35.340 --> 48:36.780
全部放到一个DIV里面

48:36.780 --> 48:38.380
就是缘分不通的

48:38.380 --> 48:39.100
直接放在里面

48:39.420 --> 48:41.340
在一面上的格式就不是很好看

48:45.020 --> 48:46.780
它的格式不是很好看

48:46.780 --> 48:48.220
我现在要做什么事呢

48:51.680 --> 48:53.040
我现在要做的事情是这样

48:54.240 --> 48:56.400
我要在这个介石里面让你写断代吧

48:57.600 --> 48:59.760
因为我的文章里面

48:59.760 --> 49:00.480
你看

49:00.480 --> 49:01.760
我的文章里面

49:01.760 --> 49:04.320
它其实观察这个文章是有一些特征的

49:05.120 --> 49:06.080
这里有很多文本

49:06.080 --> 49:06.400
对啊

49:06.400 --> 49:07.280
全是纯文本

49:07.920 --> 49:09.840
我要在每一个找到每一个段落

49:09.840 --> 49:10.960
比方说这个是一个段落

49:11.040 --> 49:11.760
我要在前

49:11.760 --> 49:13.680
我要把它用一个P元数包裹一下

49:14.880 --> 49:16.080
我就要做这么一件事

49:16.080 --> 49:16.960
我看到它是个段落

49:16.960 --> 49:17.360
于是呢

49:17.360 --> 49:18.160
我用一个P元数

49:19.200 --> 49:20.080
把它包裹一下

49:20.960 --> 49:21.760
发现一个段落

49:21.760 --> 49:23.120
就用P元数把它包裹一下

49:24.400 --> 49:24.800
对吧

49:24.800 --> 49:26.160
那么现在就问题就在于

49:26.160 --> 49:27.840
我怎么样知道它是一个段落

49:28.880 --> 49:29.200
好

49:29.200 --> 49:31.040
首先我把整个这个字幕上拿到

49:31.040 --> 49:31.680
拿到再说

49:32.240 --> 49:33.120
我首先通过这个

49:34.320 --> 49:35.040
container

49:35.040 --> 49:36.320
拿到这个bocument

49:36.320 --> 49:37.200
query

49:38.080 --> 49:38.960
query

49:38.960 --> 49:39.680
snegator

49:41.680 --> 49:42.240
这啥

49:43.120 --> 49:43.760
container

49:45.760 --> 49:46.080
好

49:46.080 --> 49:47.120
拿到一个容器

49:47.120 --> 49:48.720
容器里边是不是可以拿到它的文本

49:49.920 --> 49:50.560
container

49:52.780 --> 49:53.260
inner

49:53.260 --> 49:53.900
atm

49:54.300 --> 49:54.860
输出一下

49:57.180 --> 49:58.860
我是不是拿到一个很长的字幕串

50:03.100 --> 50:03.500
看一下

50:04.780 --> 50:06.060
拿到一个很长的字幕串

50:06.060 --> 50:06.380
对吧

50:07.740 --> 50:08.540
这个字幕串呢

50:08.540 --> 50:09.900
我现在就要找到这个字幕串

50:09.900 --> 50:11.020
哪些是段落

50:11.020 --> 50:11.820
那么来观察一下

50:11.820 --> 50:13.100
段落的特征是什么

50:13.820 --> 50:15.020
你会发现段落了

50:15.020 --> 50:16.380
在这个字幕串里边

50:16.380 --> 50:17.580
表现为

50:17.580 --> 50:20.300
它有连续的多个换行服

50:20.300 --> 50:22.060
不是多个的空白制服

50:23.580 --> 50:25.500
它是以多个空白制服开始

50:26.540 --> 50:27.260
然后呢

50:28.140 --> 50:29.260
到下一个

50:30.300 --> 50:31.260
空白制服

50:32.140 --> 50:32.620
结束

50:33.740 --> 50:34.220
是不是这样

50:34.860 --> 50:36.860
以多个空白制服开始

50:36.860 --> 50:37.340
然后呢

50:38.460 --> 50:40.540
再下一个空白制服结束

50:41.260 --> 50:42.460
那么也就是说

50:42.460 --> 50:44.380
我这里政客表达是该怎么写呢

50:45.020 --> 50:47.810
怎么写

50:48.850 --> 50:50.610
以空白制服开始

50:51.890 --> 50:55.490
中间是任意制服出现一次或多次

50:56.770 --> 50:57.810
或者是

50:57.810 --> 50:59.330
首先来这样的

50:59.330 --> 51:00.610
以空白制服

51:01.650 --> 51:04.210
任意数量的空白制服

51:04.210 --> 51:05.970
一个或多个空白制服开始

51:06.770 --> 51:07.250
然后像这样

51:07.250 --> 51:09.570
一个或多个空白制服开始

51:09.810 --> 51:10.610
然后呢

51:10.610 --> 51:11.890
任意制服出现

51:12.450 --> 51:14.450
接下来就紧跟任意制服了

51:15.010 --> 51:17.490
任意制服出现一次或多次

51:19.730 --> 51:21.250
是不是一次或多次

51:21.250 --> 51:23.570
然后以某一个空白制服结束

51:25.490 --> 51:27.170
而任意制服出现一次或多次

51:28.050 --> 51:30.610
以一个空白制服结束

51:31.810 --> 51:32.610
全局匹配

51:32.610 --> 51:33.970
我们先匹配一部分

51:34.930 --> 51:35.810
来试一下

51:35.810 --> 51:36.770
试一下行不行

51:45.120 --> 51:46.000
好 你看这

51:46.000 --> 51:46.800
是不是可以了

51:46.800 --> 51:48.160
这一部分是不是匹配到了

51:48.160 --> 51:50.000
以任意的空白制服开始

51:50.240 --> 51:50.880
好 我们看一下

51:51.440 --> 51:52.720
那么这是不是一个断落就匹配到了

51:53.040 --> 51:54.240
那么我们加上一个G

51:57.060 --> 51:57.460
是不是

51:58.020 --> 51:59.460
第一个断落匹配到了

51:59.460 --> 52:00.580
第二个断落也匹配到了

52:00.580 --> 52:01.860
第三个断落也匹配到了

52:01.860 --> 52:03.940
但是第四个断落是不是没有匹配到

52:05.620 --> 52:06.100
对吧

52:06.740 --> 52:08.580
是不是第四个断落没有匹配到

52:08.980 --> 52:09.700
那么这里呢

52:09.700 --> 52:11.700
我们就可能还要去想一想

52:11.700 --> 52:12.740
别的办法了

52:13.620 --> 52:14.580
那我试着不给

52:14.580 --> 52:16.420
最后一个最后一个空白制服不给了

52:16.900 --> 52:17.780
哎 这样就可以了

52:18.980 --> 52:19.620
这样就可以了

52:20.180 --> 52:20.900
你看哈

52:20.980 --> 52:22.180
我们这里不加这个G

52:24.020 --> 52:24.740
这匹配到这

52:25.220 --> 52:25.700
对吧

52:25.700 --> 52:27.460
一个空白制服开始

52:28.020 --> 52:32.340
任意的制服出现一次或多次

52:33.780 --> 52:34.100
对吧

52:34.100 --> 52:35.620
如果说我要全局匹配的话

52:36.020 --> 52:36.500
那么就是

52:37.220 --> 52:38.580
以一个空白制服开始

52:39.140 --> 52:40.660
任意制服出现一次或多次

52:41.460 --> 52:41.780
好了

52:41.780 --> 52:43.220
那有了这个证则表达式之后

52:43.620 --> 52:45.060
证则表达式还是比较简单的

52:45.060 --> 52:45.460
这一块

52:45.780 --> 52:47.220
我们主要是练习这个replace

52:48.020 --> 52:49.220
有了一个证则表达式之后

52:49.300 --> 52:50.580
那么我们可以使用replace

52:50.580 --> 52:52.660
把这个证则表达式对象传过来

52:52.660 --> 52:54.100
或者是直接把这个玩意传过来

52:55.060 --> 52:56.340
那接着我是不是要替换

52:59.280 --> 53:00.480
我们来打印一下s

53:02.080 --> 53:02.880
打印一下s

53:04.320 --> 53:04.720
看一下

53:07.180 --> 53:08.780
你看我们这里是不是打印了多次

53:08.780 --> 53:10.220
每一次是不是就是一个断落

53:10.700 --> 53:11.020
对吧

53:11.020 --> 53:11.980
每一次就是一个断落

53:12.300 --> 53:13.420
每一次就是一个断落

53:13.420 --> 53:13.820
看到没

53:14.380 --> 53:14.620
好

53:14.620 --> 53:16.460
我要把每一个断落里边的

53:17.020 --> 53:18.460
空白制服全部去掉

53:19.900 --> 53:20.060
好

53:20.060 --> 53:20.700
我们来去一下

53:21.100 --> 53:22.380
s等于sreplace

53:22.460 --> 53:23.980
再来一个替换

53:24.220 --> 53:25.660
替换他所谓的空白制服

53:29.010 --> 53:30.690
替换成空制服

53:31.970 --> 53:33.090
这是一种常见的方式

53:33.090 --> 53:34.290
替换空白制服的方式

53:35.010 --> 53:35.970
我找到这个制服串

53:35.970 --> 53:37.410
你看每一个制服串里边不是有

53:37.890 --> 53:39.090
刚才每一个制服串里边

53:39.810 --> 53:41.090
不是有很多的空白制服吗

53:41.090 --> 53:42.450
你看这前边是空白制服

53:42.770 --> 53:44.210
我要把这空白制服全部去掉

53:45.010 --> 53:46.050
那我这里怎么办呢

53:46.050 --> 53:47.410
我就找到每一个制服串

53:47.410 --> 53:50.450
再来把它的每一个空白制服替换成这个

53:52.290 --> 53:53.090
再去掉

53:53.090 --> 53:54.450
好去掉之后我们再来看

53:55.410 --> 53:57.250
是不是这样子拿到的每一个s

53:57.730 --> 53:58.690
就没有空白制服了

53:59.090 --> 54:02.210
然后再给这个s左右两边加上一个p元数

54:04.990 --> 54:05.310
再来

54:08.140 --> 54:09.740
等于这个东西

54:13.010 --> 54:14.210
在拼接上s

54:14.450 --> 54:15.490
在拼接上这个东西

54:16.770 --> 54:17.570
好看一下

54:17.730 --> 54:19.010
这样子是不是给每一个p

54:19.410 --> 54:20.370
加上一个p元数了

54:21.010 --> 54:22.290
然后再返回s

54:23.650 --> 54:25.570
这样子替换的结果是不是就出来了

54:29.070 --> 54:30.590
得到一个新的atm文本

54:34.180 --> 54:34.740
好看一下

54:35.700 --> 54:36.660
就可以出来了

54:36.660 --> 54:39.940
那么接下来我把这个新的文本重新给它的应当atm复述

54:43.380 --> 54:43.860
6

54:44.740 --> 54:47.060
好这样子我们就通过正轮表达式的方式

54:47.460 --> 54:51.860
让整个这篇文章看上去格式更加清楚了

54:51.860 --> 54:53.700
我们来看一下目前的远处结构

54:56.770 --> 54:58.690
你看它这边就有很多的p元数了

55:00.690 --> 55:01.890
OK那么这就是

55:03.250 --> 55:04.770
这个小说是那个

55:04.770 --> 55:06.370
我还挺喜欢那个小说的

55:07.330 --> 55:08.370
它里边

55:08.370 --> 55:09.730
我很喜欢那个章节

55:11.010 --> 55:12.290
好了那就完事了

55:12.290 --> 55:14.050
其实正轮表达式我再重申一次

55:14.050 --> 55:15.330
那种多不多多

55:15.330 --> 55:16.610
有一点绕

55:17.650 --> 55:19.170
但是呢这一块一年

55:19.170 --> 55:20.210
它用不到几次

55:20.850 --> 55:21.730
用的时候呢

55:22.610 --> 55:24.930
很多东西啊你平时不用就很快忘了

55:24.930 --> 55:26.850
包括同学们跟同学们说一下

55:26.850 --> 55:28.770
让我接触正轮表达式

55:29.170 --> 55:29.650
是在

55:30.290 --> 55:31.650
我是大一大二还是

55:32.210 --> 55:33.010
什么时候接触的

55:33.010 --> 55:34.290
反正很早很早以前了

55:35.010 --> 55:36.610
因为有没有用呢

55:36.610 --> 55:38.370
再用每天用那么几次

55:39.410 --> 55:41.970
如果说你要让我去那个

55:41.970 --> 55:43.250
书写

55:43.250 --> 55:47.090
做跟正轮表达式相关的一些练习啊

55:47.090 --> 55:48.610
或者是一些项目啊

55:49.650 --> 55:51.970
常见的我还能记得住

55:51.970 --> 55:53.250
因为用的比较多

55:53.250 --> 55:55.330
虽然说用的频率没有那么高

55:55.330 --> 55:57.330
但是每年都要用的还行

55:57.330 --> 56:00.130
如果说你稍微给我加了一些

56:00.130 --> 56:01.810
比较特殊的我也忘了

56:01.810 --> 56:03.970
我干嘛呢我只能去查文档

56:04.370 --> 56:06.130
所以同学们这一块不用担心

56:06.130 --> 56:09.090
很多东西呢你有那么一点印象就可以了

56:09.090 --> 56:10.770
真正需要你把能够

56:10.770 --> 56:12.690
把今天的练习题做完

56:13.250 --> 56:14.210
后边随便忘

56:14.210 --> 56:15.250
忘就忘了

56:15.250 --> 56:18.290
然后呢到时候再来查文档或者回看我的视频

56:18.290 --> 56:19.090
都可以

56:19.090 --> 56:21.010
你只要查过那么一两次

56:21.010 --> 56:22.610
你自然而然就记住了

56:22.610 --> 56:24.930
更多的正轮表达式的用法呢

56:24.930 --> 56:26.690
有兴趣的同学可以看我

56:26.690 --> 56:29.570
介绍详细版里面的讲解啊三节课

56:29.570 --> 56:32.130
好正轮表达式这一会说到这了

