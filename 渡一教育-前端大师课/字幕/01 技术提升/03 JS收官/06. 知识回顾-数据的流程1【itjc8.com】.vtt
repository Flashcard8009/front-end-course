WEBVTT

00:00.820 --> 00:04.420
好 同学们学到现在呢 应该有所体会了 对吧

00:04.420 --> 00:08.420
咱们程序呢 开发无非就是玩的什么 玩的数据

00:08.420 --> 00:11.620
包括你们之后接触了界面 那也是数据啊

00:11.620 --> 00:14.220
只不过那个数据呢 比较特殊 它也没有什么特殊的

00:14.220 --> 00:18.420
它就是把这个数据 它会影响到界面而已 其实没啥

00:18.420 --> 00:22.820
所以说你数据玩会了 学啥都觉得简单

00:22.820 --> 00:24.620
你玩不会 你学啥都觉得复杂

00:24.620 --> 00:28.020
所以说咱们会多花一点时间在数据这一块啊

00:28.020 --> 00:30.420
其实除了数据还有啥 就没啥东西了

00:30.420 --> 00:34.620
所有东西都是跟数据相关的 比方讲咱们前面之前复杂的

00:34.620 --> 00:39.720
我们世界上的一些信息 在从学里边该怎么来表示呢

00:39.720 --> 00:44.120
这就是数据的表达 对吧 这不算数字 数组 对象

00:44.120 --> 00:47.920
这些不就是数据的表达吗 对不对

00:47.920 --> 00:49.620
包括我们那个 有的时候呢

00:49.620 --> 00:52.620
我们需要把这些数据拿过来进行一下运算

00:52.620 --> 00:57.620
包括数学运算 比较大小 相等还是不相等

00:57.620 --> 01:03.220
包括逻辑 对吧 并且或者 这些都是对数据的运算

01:03.220 --> 01:07.620
那么我们之后结构开始 来学习什么呢 来复习什么呢

01:07.620 --> 01:11.320
数据的流程 什么叫数据的流程呢

01:11.320 --> 01:16.220
就是我们要去做一些事 那这些事可能会有些步骤

01:16.220 --> 01:18.820
第一步做啥 第二步做啥 第三步做啥 对吧

01:18.820 --> 01:22.320
比方说把大象挪冰箱 第一步打开冰箱门

01:22.320 --> 01:25.920
第二步把大象放进去 第三步把冰箱门关上

01:25.920 --> 01:28.920
它留一个步骤的 这就是流程

01:28.920 --> 01:31.220
那么这个流程在程序里边一共

01:31.220 --> 01:34.220
其实流程也是跟数据相关的 对吧

01:34.220 --> 01:37.420
第一步做啥 把那个有一个数据叫冰箱

01:37.420 --> 01:41.620
把那个状态变成打开 不就是在动数据吗 对不对

01:41.620 --> 01:44.620
第二步做啥 把大象安冰箱里边

01:44.620 --> 01:48.420
是把大象那个数据放到冰箱那个数据里边

01:48.420 --> 01:50.020
把它关联起来

01:50.020 --> 01:51.620
第三步做啥 把冰箱门关上

01:51.620 --> 01:54.620
把冰箱那个数据的状态变成关闭

01:54.620 --> 01:57.420
也是在玩数据 它每一步是在玩数据

01:57.420 --> 01:59.820
只不过我们把它按照一定的流程走下来

01:59.820 --> 02:02.320
就可以完成一个有意义的事情

02:02.320 --> 02:04.020
那就是流程

02:04.020 --> 02:07.920
那么这个流程在我们程序里边就这么几种

02:07.920 --> 02:11.420
哪几种呢 第一种就非常简单的线性流程

02:11.420 --> 02:16.120
从上到下运行就结束了 就这种流程

02:16.120 --> 02:18.920
那么第二种是什么呢 分支

02:18.920 --> 02:21.420
就是我们从上到下流到一块

02:21.420 --> 02:23.920
这一块有一个EOS

02:23.920 --> 02:26.120
或者是EOS

02:26.120 --> 02:29.220
然后分支可以有一个 可以有多个 可以有三个

02:29.220 --> 02:30.720
等等等等

02:30.720 --> 02:32.120
那么这种分支呢

02:32.120 --> 02:33.520
那么比方说流到这儿了

02:33.520 --> 02:37.220
我们的程序里边可能就有一个拐弯的

02:37.220 --> 02:38.920
你可以从这儿走

02:38.920 --> 02:44.220
对吧 也可以从这里走

02:44.220 --> 02:45.920
对吧 根据你的条件嘛

02:45.920 --> 02:48.720
也可以从这里走 是吧

02:48.720 --> 02:50.220
它不是有分支吗

02:50.220 --> 02:51.720
然后分支完了之后

02:51.720 --> 02:53.520
你总归走到有一个点 对吧

02:53.520 --> 02:54.920
一个点走到了过后呢

02:54.920 --> 02:57.520
我们就接着继续往后走

02:57.520 --> 02:59.720
这就是分支

02:59.720 --> 03:03.020
还有第三种流程 第三种流程叫循环

03:03.020 --> 03:05.020
从上往下走 走到这儿

03:05.020 --> 03:07.920
走到这儿有个条件 看条件满不满足啊

03:07.920 --> 03:10.420
那满足的话你就继续走一段

03:10.420 --> 03:13.120
走一段 换个颜色

03:13.120 --> 03:16.520
然后条件满足你就继续往下走一段

03:16.520 --> 03:18.320
好 走了一段之后呢

03:18.420 --> 03:22.020
你又从头回过去 看一下条件还满不满足

03:22.020 --> 03:25.420
又回过去看一下 条件还满不满足

03:25.420 --> 03:26.820
满足的话又走一段

03:26.820 --> 03:28.120
条件还满足又走一段

03:28.120 --> 03:30.220
就叫循环是一个圈 对吧

03:30.220 --> 03:31.820
左转 左转 左转

03:31.820 --> 03:34.420
好像是一个圈 就是这个意思

03:34.420 --> 03:36.420
直到有一天条件不满足了

03:36.420 --> 03:39.520
那我们要继续往后云行

03:39.520 --> 03:40.820
流程不就是玩这个顺吗

03:40.820 --> 03:44.620
就这三个流程就可以解决程序里边的所有问题了

03:44.620 --> 03:46.220
还有啥流程呢 没有啥流程

03:46.320 --> 03:48.520
就这个流程

03:48.520 --> 03:51.220
好 所以说我们这节课开始

03:51.220 --> 03:54.120
玩的是什么呢 玩的就是数据的流程

03:54.120 --> 03:55.120
那么这个玩的流程

03:55.120 --> 03:56.620
我就不跟你们讲什么大道理的

03:56.620 --> 03:58.120
讲大道理没什么用

03:58.120 --> 04:00.920
这一块是整个程序开发里面的一个难点

04:00.920 --> 04:02.120
那确实是难点

04:02.120 --> 04:04.320
我不说你们之前接触过GS

04:04.320 --> 04:05.320
多多少少接触过一些

04:05.320 --> 04:06.820
你也知道这一块是个难点 对吧

04:06.820 --> 04:08.120
因为它有循环

04:08.120 --> 04:10.120
判断这一块的都还好一点

04:10.120 --> 04:11.720
就循环这一块肯定是个难点

04:11.720 --> 04:13.020
这毫无疑问

04:13.020 --> 04:15.020
那怎么来突破呢

04:15.820 --> 04:17.720
没有别的路可以走了

04:17.720 --> 04:19.220
就是说题

04:19.220 --> 04:20.520
一天不够 两天不够

04:20.520 --> 04:23.220
三天不够 四天四天不够一周

04:23.220 --> 04:24.420
反正就是说题

04:24.420 --> 04:26.720
做到什么程度为止呢

04:26.720 --> 04:28.220
做到你麻了

04:28.220 --> 04:29.520
不要让你写CSS

04:29.520 --> 04:30.620
你做完一个项目

04:30.620 --> 04:31.720
多多少少一点麻了

04:31.720 --> 04:33.420
一麻了就对了

04:33.420 --> 04:34.220
什么叫麻了呢

04:34.220 --> 04:35.620
就是你没感觉了

04:35.620 --> 04:37.220
麻不了 随便来啊

04:37.220 --> 04:39.820
我反正心态一放平了

04:39.820 --> 04:41.220
不是说躺平

04:41.220 --> 04:43.520
我觉得这个题我已经过关了

04:43.520 --> 04:45.320
OK了 我已经麻了

04:45.320 --> 04:47.320
我做完它也没有什么兴奋感了

04:47.320 --> 04:48.820
那么这种情况下呢

04:48.820 --> 04:50.020
就OK了

04:50.020 --> 04:51.320
那只能大量做题

04:51.320 --> 04:52.220
所以说这结果呢

04:52.220 --> 04:54.020
不是说你一天能搞得定

04:54.020 --> 04:55.420
因为它题呢

04:55.420 --> 04:58.120
你知道袁老师是比较狠的

04:58.120 --> 05:00.320
他题肯定是比较多的

05:00.320 --> 05:02.120
这不是六道题

05:02.120 --> 05:04.620
是每个里边有好几道题的

05:04.620 --> 05:07.020
包括这里边你自己看一下

05:07.020 --> 05:08.320
这里边题很多的

05:08.320 --> 05:09.420
不用不着急

05:09.420 --> 05:12.120
咱们不是一天搞定它

05:12.120 --> 05:13.820
一天搞定一点

05:13.820 --> 05:15.320
从简单到复杂

05:15.320 --> 05:16.520
循序渐进的

05:16.520 --> 05:18.020
把这些循环啊

05:18.020 --> 05:19.220
循环加判断啊

05:19.220 --> 05:20.320
循环加数组啊

05:20.320 --> 05:21.720
循环加数组加对象啊

05:21.720 --> 05:22.920
等等等等

05:22.920 --> 05:24.720
综合起来训练一下

05:24.720 --> 05:25.820
训练过后呢

05:25.820 --> 05:27.220
你这一块就不害怕了

05:27.220 --> 05:27.920
不害怕

05:27.920 --> 05:29.520
咱们后边的就好办了

05:29.520 --> 05:31.020
咋弄都好办

05:31.020 --> 05:32.220
就是你这一块不过关

05:32.220 --> 05:33.320
那就后边就麻烦了

05:33.320 --> 05:35.020
要死

05:35.020 --> 05:36.220
好 那我们来呗

05:36.220 --> 05:37.020
说话不多说

05:37.020 --> 05:38.120
就直接来整题啊

05:38.120 --> 05:40.020
这个这一块没什么好说的啊

05:40.020 --> 05:40.820
不给你废话了

05:40.820 --> 05:42.220
咱们直接来吧

05:42.220 --> 05:43.820
第一道题

05:43.820 --> 05:45.720
输出这些题呢

05:45.720 --> 05:48.420
同学们可以先做

05:48.420 --> 05:50.420
就是有信有点信心的同学啊

05:50.420 --> 05:52.420
可以先做尝试一下啊

05:52.420 --> 05:53.520
然后做完一道题

05:53.520 --> 05:55.020
来听一下我讲一道题

05:55.020 --> 05:56.620
不要全部做完了再听我讲啊

05:56.620 --> 05:58.220
要做完一道题就听我讲

05:58.220 --> 05:59.420
做不出来没关系

05:59.420 --> 06:00.020
反正呢

06:00.020 --> 06:00.920
你听完了过后

06:00.920 --> 06:02.720
你还是得自己做

06:02.720 --> 06:03.320
做的过程中

06:03.320 --> 06:05.220
千万不要边看边做啊

06:05.220 --> 06:07.120
千万不要边看边做

06:07.120 --> 06:08.220
你不叫做题

06:08.320 --> 06:10.320
大家要抄

06:10.320 --> 06:11.320
抄有什么作用呢

06:11.320 --> 06:11.920
有作用

06:11.920 --> 06:13.620
他联系里的打字速度

06:13.620 --> 06:15.420
除此之外毫无意义

06:15.420 --> 06:17.120
抄了半天就好

06:17.120 --> 06:19.120
根本就没有达到锻炼的效果

06:19.120 --> 06:20.620
哪怕你听完之后

06:20.620 --> 06:22.220
听完之后做题没问题

06:22.220 --> 06:24.020
但是一定要关的视频

06:24.020 --> 06:25.020
也不要去背啊

06:25.020 --> 06:27.020
原来是这个地方写上一个字符

06:27.020 --> 06:28.020
这个地方用的是分号

06:28.020 --> 06:29.020
这个地方用的是小语

06:29.020 --> 06:30.420
没有用小语等于

06:30.420 --> 06:31.820
它这个没意义的

06:31.820 --> 06:33.520
一定要理解

06:33.520 --> 06:35.920
想通了原来是为什么这么写

06:35.920 --> 06:38.520
然后再去自己把它写出来

06:38.520 --> 06:40.120
这才有意义

06:40.120 --> 06:41.120
知道吧

06:41.120 --> 06:42.020
然后多说一点啊

06:42.020 --> 06:43.620
跟你说的详细点

06:43.620 --> 06:45.120
该怎么去学这一块

06:45.120 --> 06:46.820
不管你是做完一道题来听

06:46.820 --> 06:48.220
还是听完再做的没问题

06:48.220 --> 06:50.820
但是一道题一道题来啊

06:50.820 --> 06:51.620
好

06:51.620 --> 06:53.520
第一道题

06:53.520 --> 06:54.420
输出一个

06:54.420 --> 06:56.420
输出100个Hello World

06:56.420 --> 06:57.720
那你可以怎么输出呢

06:57.720 --> 06:59.120
你可以这样子的输出

06:59.120 --> 07:00.320
输出一个Hello World

07:00.320 --> 07:01.920
是吧

07:01.920 --> 07:03.720
然后再一数呗

07:03.720 --> 07:05.220
总共可以输到100好吗

07:05.220 --> 07:07.120
有些同学很聪明看前面的行号

07:07.120 --> 07:07.920
是吧

07:07.920 --> 07:08.920
也在100行

07:08.920 --> 07:09.620
这样子可不可以呢

07:09.620 --> 07:10.320
当然可以啊

07:10.320 --> 07:10.820
但是呢

07:10.820 --> 07:12.420
这样子有点傻

07:12.420 --> 07:14.020
那如果说我输出一万个呢

07:14.020 --> 07:15.120
那又不是崩溃了吗

07:15.120 --> 07:17.620
所以说这一块最好不要去这样做啊

07:17.620 --> 07:18.520
那应该怎么做呢

07:18.520 --> 07:19.620
我们应该用循环

07:19.620 --> 07:22.420
它不就再重复的去处理一个流程吗

07:22.420 --> 07:24.220
所以说用循环

07:24.220 --> 07:26.620
那么循环这是一个固定次数的循环

07:26.620 --> 07:28.120
像我们有的时候

07:28.120 --> 07:30.820
这些题都是精心设计的

07:30.820 --> 07:33.920
都是我们以后在开发中经常会遇到的

07:34.020 --> 07:37.620
涵盖了我们以将来开发的90%的情况

07:37.620 --> 07:39.620
它绝大部分情况都涵盖

07:39.620 --> 07:41.820
所以说这些题是非常有必要练习啊

07:41.820 --> 07:44.220
那么这里就是输出100个Hello World

07:44.220 --> 07:44.920
什么意思呢

07:44.920 --> 07:47.520
就是一个固定次数的循环

07:47.520 --> 07:50.220
它是一个固定次数的循环

07:50.220 --> 07:52.020
固定次数

07:52.020 --> 07:54.720
就是这个循环多少次是知道的

07:54.720 --> 07:55.820
那么这个时候呢

07:55.820 --> 07:57.120
我们可以用固定次数循环

07:57.120 --> 07:58.020
那怎么循环呢

07:58.020 --> 07:59.120
非常简单

07:59.120 --> 07:59.920
迫循环可以考虑

07:59.920 --> 08:02.120
其实我们在写循环的时候

08:02.120 --> 08:04.520
绝大部分情况下都是迫循环

08:04.520 --> 08:06.520
很少使用Wild

08:06.520 --> 08:08.520
有没有情况有情况

08:08.520 --> 08:13.220
但是我们大部分情况都是Four

08:13.220 --> 08:15.520
就这样写

08:15.520 --> 08:17.320
那么我们来研究一下

08:17.320 --> 08:20.720
为什么这样的写就可以达到循环100次呢

08:20.720 --> 08:21.320
那你看啊

08:21.320 --> 08:23.320
我们这个迫循环是怎么运作的

08:23.320 --> 08:24.720
先来运行这个

08:24.720 --> 08:28.320
运行一次I-0

08:28.320 --> 08:31.320
I-0

08:31.520 --> 08:32.120
然后呢

08:32.120 --> 08:32.920
判断条件

08:32.920 --> 08:35.320
0是不是小V100的条件成立

08:35.320 --> 08:38.320
条件成立的运行一次循环题

08:38.320 --> 08:39.720
这里边不管你写的是

08:39.720 --> 08:41.120
不管你写的是输出

08:41.120 --> 08:42.520
我写的是输出嘛

08:42.520 --> 08:42.920
但是呢

08:42.920 --> 08:43.520
将来可能可以

08:43.520 --> 08:46.620
这里可以替换成任何代码

08:46.620 --> 08:46.920
对不对

08:46.920 --> 08:48.620
是不是可以替换成任何代码

08:48.620 --> 08:49.520
那么这样子呢

08:49.520 --> 08:52.820
我们这个代码就可以运行很多很多次

08:52.820 --> 08:54.120
那么I-0开始

08:54.120 --> 08:56.120
留小V100运行一次

08:56.120 --> 08:56.420
然后呢

08:56.420 --> 08:58.120
I加加加来运行照

08:58.120 --> 08:59.720
I加加是不是I变成1啦

08:59.820 --> 09:02.320
I变成1过后又来判断条件

09:02.320 --> 09:04.120
是不是还是小V100的

09:04.120 --> 09:05.320
是不是又运行一次

09:05.320 --> 09:07.120
好我们就I从0开始

09:07.120 --> 09:09.320
一直到N从0

09:09.320 --> 09:10.320
然后呢变1

09:10.320 --> 09:11.520
然后变2运行一次

09:11.520 --> 09:12.520
变3运行一次

09:12.520 --> 09:13.420
变4运行一次

09:13.420 --> 09:15.120
一直到多少

09:15.120 --> 09:16.020
到多少

09:16.020 --> 09:18.520
是不是一直到99啊

09:18.520 --> 09:19.720
I到99的时候

09:19.720 --> 09:21.720
判断条件还能成立

09:21.720 --> 09:22.220
对吧

09:22.220 --> 09:24.420
然后又运行了一次

09:24.420 --> 09:25.920
所以又运行了一次

09:25.920 --> 09:27.320
好于是呢

09:27.420 --> 09:30.320
最后I加加到了100的时候

09:30.320 --> 09:31.520
是不是条件不成立了

09:31.520 --> 09:33.420
100是不小于100的

09:33.420 --> 09:35.020
所以条件不成立了就结束了

09:36.420 --> 09:37.120
因此呢

09:37.120 --> 09:38.420
你不要觉得袁老师多说好

09:38.420 --> 09:39.820
我给你们说好好听

09:40.620 --> 09:42.420
因此我们认为

09:42.420 --> 09:45.620
这个科循环I的取值范围是多少啊

09:45.620 --> 09:48.420
是不是0到99啊

09:48.420 --> 09:49.120
为什么到99

09:49.120 --> 09:51.420
因为真的用的是小于对吧

09:51.420 --> 09:52.920
是不是0到99

09:52.920 --> 09:56.020
那么I的取值的次数是不是100次

09:56.020 --> 10:00.420
因此这就刚好是一个固定次数的循环

10:00.420 --> 10:03.420
将来遇到固定次数的循环就是这种格式

10:03.420 --> 10:05.420
从0开始到这个次数

10:05.420 --> 10:07.820
次数是100那就100

10:07.820 --> 10:09.620
或者是我们看I的取值范围

10:09.620 --> 10:11.020
I是0到99

10:11.020 --> 10:11.520
对吧

10:11.520 --> 10:13.420
因为1到99是99个数嘛

10:13.420 --> 10:15.120
加上0是不是100个数

10:15.120 --> 10:16.520
刚好是100个数

10:16.520 --> 10:16.920
因此呢

10:16.920 --> 10:20.220
这样子我们就认为它循环了100次

10:20.220 --> 10:21.820
所以说我们同意可知

10:21.820 --> 10:23.220
如果说我这里写个1

10:23.220 --> 10:24.720
这里写小于等于

10:24.720 --> 10:27.720
那么I的取值范围是不是1到100啊

10:27.720 --> 10:30.020
那是不是还是取了100次

10:30.020 --> 10:30.520
对吧

10:30.520 --> 10:32.020
I取1运行一次

10:32.020 --> 10:33.420
I取2运行一次

10:33.420 --> 10:35.320
I取3运行一次

10:35.320 --> 10:35.620
对吧

10:35.620 --> 10:37.120
所以还是运行了100次

10:37.120 --> 10:41.020
因此这些写法都是可以的

10:41.020 --> 10:42.620
那里面右侧

10:42.620 --> 10:42.820
对吧

10:42.820 --> 10:44.720
这都是运行了100次

10:44.720 --> 10:46.120
都是没问题的

10:46.120 --> 10:46.320
好

10:46.320 --> 10:47.920
但是如果说你写个0

10:47.920 --> 10:49.620
那这里写小于等于100

10:49.620 --> 10:50.420
行不行呢

10:50.420 --> 10:51.620
那运行到多少次呢

10:51.620 --> 10:53.120
那非常容易得到一个结论

10:53.120 --> 10:54.520
就是0到多少呢

10:54.520 --> 10:55.120
0到100

10:55.120 --> 10:56.020
因为它是小于等于

10:56.020 --> 10:57.920
把它可以取到100

10:57.920 --> 10:59.120
那就是101次了

10:59.120 --> 11:01.720
这样子懂得意思吗

11:01.720 --> 11:02.720
所以这一块

11:02.720 --> 11:04.720
你现在第一开始写循环的时候

11:04.720 --> 11:05.820
你可能要详细分析啊

11:05.820 --> 11:07.820
先运行这个再运行

11:07.820 --> 11:10.120
他判断这个再进入这个

11:10.120 --> 11:10.920
然后再加加

11:10.920 --> 11:12.220
要一次一次分析

11:12.220 --> 11:13.520
才能分析得清楚

11:13.520 --> 11:15.020
好 OK没问题

11:15.020 --> 11:16.220
你就分析

11:16.220 --> 11:18.120
分析完一次过后

11:18.120 --> 11:19.720
你就会发现规律了

11:19.720 --> 11:20.720
这个复询循环啊

11:20.720 --> 11:22.620
无非就是这个I的取值范围

11:22.620 --> 11:23.820
对吧

11:23.920 --> 11:25.220
我只需要看哪里呢

11:25.220 --> 11:26.920
只需要看这儿和这儿

11:26.920 --> 11:28.220
一般是I加加这里

11:28.220 --> 11:29.520
没有什么变动的

11:29.520 --> 11:30.720
前面没什么变动的

11:30.720 --> 11:32.120
我只需要看这儿和这儿

11:32.120 --> 11:34.420
还有这里是小于还是小于等于

11:34.420 --> 11:36.720
我是不是又能确定I的取值范围

11:36.720 --> 11:37.120
对吧

11:37.120 --> 11:39.820
所以说你只要第一次能看懂这个循环

11:39.820 --> 11:41.520
那么后边就马上形成个印象

11:41.520 --> 11:43.720
哦我只要知道I的取值范围

11:43.720 --> 11:45.220
是0到多少

11:45.220 --> 11:47.320
0到100

11:47.320 --> 11:48.420
对吧

11:48.420 --> 11:49.120
那我就知道了

11:49.120 --> 11:50.320
他要循环101

11:50.320 --> 11:50.820
他要循环

11:50.820 --> 11:53.120
这个代码会运行101次

11:53.120 --> 11:53.920
0运行一次

11:53.920 --> 11:54.720
1运行一次

11:54.720 --> 11:55.420
2运行一次

11:55.420 --> 11:57.420
100运行一次

11:57.420 --> 11:58.920
懂了意思吧

11:58.920 --> 12:01.420
要很快的形成

12:01.420 --> 12:03.720
这个样的一个固定的印象

12:03.720 --> 12:04.820
就是我看科学环

12:04.820 --> 12:05.720
我不用去想

12:05.720 --> 12:06.920
我一开始做什么

12:06.920 --> 12:07.620
然后再比较什么

12:07.620 --> 12:08.620
不用去想这个

12:08.620 --> 12:11.720
我只要看I的取值范围就可以了

12:11.720 --> 12:13.120
I取一个值运行一次

12:13.120 --> 12:15.520
I取第二个值运行一次

12:15.520 --> 12:16.520
别看这个题简单

12:16.520 --> 12:18.620
这里面是有深刻道理的

12:18.620 --> 12:21.720
地道题就做完了

12:21.820 --> 12:23.420
那么至于这个循环里边

12:23.420 --> 12:25.320
到底写啥你写啥都可

12:25.320 --> 12:26.620
你想写啥写啥

12:26.620 --> 12:28.020
你写一句代码可以

12:28.020 --> 12:29.320
你写实际代码可以

12:29.320 --> 12:30.520
你写输出可以

12:30.520 --> 12:32.120
你写判断循环

12:32.120 --> 12:33.820
在这里边再写循环无所谓

12:33.820 --> 12:34.620
反正这里边的代码

12:34.620 --> 12:35.320
我来一个

12:35.320 --> 12:37.220
来一个100次

12:37.220 --> 12:37.720
对吧

12:37.720 --> 12:39.320
我当然这里要写巧遇啊

12:39.320 --> 12:40.420
来一个100次

12:40.420 --> 12:41.320
0运行一次

12:41.320 --> 12:43.120
1运行一次

12:43.120 --> 12:44.820
我要不停的把这些东西灌输给你

12:44.820 --> 12:47.320
让你麻麻了就对了

12:47.320 --> 12:48.120
第二道题

12:48.120 --> 12:50.820
输出100到200

12:50.820 --> 12:52.120
那怎么输出呢

12:52.120 --> 12:53.420
我输出100

12:53.420 --> 12:55.320
然后再输出101

12:55.320 --> 12:57.320
那不就是变化这个玩意吗

12:57.320 --> 12:59.220
是不是我就来一个循环

12:59.220 --> 13:00.620
i等于100

13:00.620 --> 13:02.220
i小于等于200

13:02.220 --> 13:03.320
i加加

13:03.320 --> 13:04.620
所以你就不要去背

13:04.620 --> 13:06.220
说我这里什么时候该用小于

13:06.220 --> 13:07.020
什么时候该用等于

13:07.020 --> 13:09.720
你就把i过弄个范围出来

13:09.720 --> 13:13.020
这样的范围是不是就100到200

13:13.020 --> 13:13.320
对吧

13:13.320 --> 13:14.020
是不是有个例子

13:14.020 --> 13:16.120
i的曲子是不是刚好就是100到200

13:16.120 --> 13:18.520
那就就是我们刚才的规律

13:18.520 --> 13:19.120
什么规律呢

13:19.120 --> 13:20.120
i100运行一次

13:20.220 --> 13:21.120
101运行一次

13:21.120 --> 13:22.220
102运行一次

13:22.220 --> 13:22.620
对吧

13:22.620 --> 13:23.420
那这里该写啥

13:23.420 --> 13:25.220
不就输出i吗

13:25.220 --> 13:26.220
不就输出i吗

13:26.220 --> 13:27.320
i100运行一次

13:27.320 --> 13:28.220
那就输出101

13:28.220 --> 13:30.220
i101又输出又运行一次

13:30.220 --> 13:31.420
就输出101

13:31.420 --> 13:31.920
对吧

13:31.920 --> 13:35.120
一直到输出200

13:35.120 --> 13:37.120
对不对

13:37.120 --> 13:38.320
是不是发现这个循环

13:38.320 --> 13:39.420
还是挺简单的对不对

13:39.420 --> 13:40.920
还是说还是挺简单的

13:40.920 --> 13:41.820
你只要把这个

13:41.820 --> 13:43.720
其实我们这里所有的题

13:43.720 --> 13:45.520
这些循环题

13:45.520 --> 13:47.420
都是在不断的加强里这个印象

13:47.420 --> 13:48.120
不断的加强

13:48.120 --> 13:49.520
不断的加强

13:49.520 --> 13:51.220
加强到你后边真的是麻了

13:51.320 --> 13:52.520
那就ok了

13:52.520 --> 13:53.920
你其实就看这个i的曲子范围

13:55.120 --> 13:55.920
对吧

13:55.920 --> 13:56.920
好 这要继续做完了

13:58.320 --> 13:59.720
第三题

13:59.720 --> 14:02.720
创建一个包含1到100的数组

14:04.320 --> 14:06.520
创建一个1到100的数组

14:06.520 --> 14:08.020
那说说的是什么呢

14:08.020 --> 14:10.120
那我就创建一个数组

14:10.120 --> 14:11.120
数组是空的

14:11.120 --> 14:11.520
然后呢

14:11.520 --> 14:13.620
我一开始给他铺写一个1

14:13.620 --> 14:14.120
然后呢

14:14.120 --> 14:15.720
然后给他铺写一个2

14:15.720 --> 14:16.620
铺写一个3

14:16.620 --> 14:17.920
是不是

14:17.920 --> 14:18.620
以后呢

14:18.620 --> 14:19.520
那我在这里写份

14:19.520 --> 14:20.020
那可以啊

14:20.120 --> 14:21.520
我给你写1到1万

14:21.520 --> 14:22.520
我一定要让你崩溃

14:22.520 --> 14:24.120
那你写吧

14:24.120 --> 14:25.220
然后你觉得你还能写

14:25.220 --> 14:26.120
我给你写100万

14:26.120 --> 14:27.320
那你写吧

14:27.320 --> 14:27.920
你没法写了

14:27.920 --> 14:29.620
这件最好用循环来解决

14:29.620 --> 14:31.120
就是我们找到一个共同的

14:31.120 --> 14:32.320
共同的一个重复的事情

14:32.320 --> 14:34.320
就是不断的加吗

14:34.320 --> 14:36.320
就是不断的加就完事了

14:36.320 --> 14:37.420
因此的我这1 2 3

14:37.420 --> 14:38.620
那我们就是在这里的变动

14:38.620 --> 14:38.920
对吧

14:38.920 --> 14:40.520
于政府就是个货循环

14:40.520 --> 14:41.820
那i的曲子范围多少呢

14:41.820 --> 14:43.320
我就就1到100嘛

14:43.320 --> 14:45.320
说这一块到底写小鱼

14:45.320 --> 14:47.620
还是小鱼等于不重要

14:47.920 --> 14:50.420
i的曲子范围是多少

14:50.420 --> 14:51.220
对吧

14:51.220 --> 14:52.420
1到100

14:52.420 --> 14:53.420
那1到100的话

14:53.420 --> 14:55.420
每一次一运行一次

14:55.420 --> 14:56.220
二运行一次

14:56.220 --> 14:57.020
三运行一次

14:57.020 --> 14:57.820
那里懂了

14:57.820 --> 14:58.220
对吧

14:58.220 --> 14:59.520
每次要运行啥

14:59.520 --> 15:02.020
不就是铺鞋爱吗

15:02.020 --> 15:03.420
那么最终的这个数据

15:03.420 --> 15:05.620
不就是1到100吗

15:05.620 --> 15:07.120
懂了意思吧

15:07.120 --> 15:08.820
好运行啊

15:08.820 --> 15:09.920
那就是1到100

15:09.920 --> 15:11.220
我就迅速的构建出了

15:11.220 --> 15:14.460
一个1到100的数据

15:14.460 --> 15:16.160
好再来

15:16.160 --> 15:17.560
就这里边写啥

15:17.560 --> 15:18.960
无所谓的

15:19.060 --> 15:22.060
重要的是你要能够确定

15:22.060 --> 15:24.060
i的曲子范围是多少

15:24.060 --> 15:26.060
好我们再来

15:26.060 --> 15:28.060
定一个数组

15:28.060 --> 15:30.060
遍地它的每一项

15:30.060 --> 15:32.060
这就是数组的遍地

15:32.060 --> 15:34.060
很多人对数组的遍地的

15:34.060 --> 15:36.060
脑袋有点绵绵的

15:36.060 --> 15:38.060
咱们看一下数组的遍地有多麻烦

15:38.060 --> 15:39.060
我们这里一个数组

15:39.060 --> 15:40.060
随便来个数组

15:40.060 --> 15:44.060
比如说数字数组也可以

15:44.060 --> 15:46.060
然后再来个部

15:46.060 --> 15:48.060
加上一个部位也可以随便

15:48.160 --> 15:49.160
还有对象都可以

15:49.160 --> 15:50.160
无所谓的

15:50.160 --> 15:51.160
数组是啥都无所谓

15:51.160 --> 15:53.160
不能说一个数组只能是数字

15:53.160 --> 15:54.160
没有这个说法

15:54.160 --> 15:55.160
遍地数组

15:55.160 --> 15:56.160
什么叫遍地

15:56.160 --> 15:59.160
一次拿出数组的每一项

15:59.160 --> 16:01.160
拿出来做啥

16:01.160 --> 16:02.160
无所谓的

16:02.160 --> 16:03.160
比方说我们这里就做输出

16:03.160 --> 16:05.160
做啥无所谓的

16:05.160 --> 16:06.160
反正一个个拿出来

16:06.160 --> 16:07.160
先拿出第一项

16:07.160 --> 16:08.160
再拿出第二项

16:08.160 --> 16:10.160
那我们怎么来拿这个输出的第一项呢

16:10.160 --> 16:12.160
比方说就输出

16:12.160 --> 16:14.160
输出的输出的第一项不就是0吗

16:14.160 --> 16:16.160
输出的输出的第二项不就是1吗

16:16.260 --> 16:17.260
2

16:17.260 --> 16:19.260
一直输出到多少了

16:19.260 --> 16:20.260
一直要输出

16:20.260 --> 16:22.260
是不是长度减1

16:22.260 --> 16:24.260
是不是AR的长度减1

16:24.260 --> 16:26.260
它最大下标嘛

16:26.260 --> 16:28.260
有朋友说这个最大下标

16:28.260 --> 16:30.260
应该是数一下

16:30.260 --> 16:32.260
0 1 2 3 4 5

16:32.260 --> 16:34.260
那就应该写个5

16:34.260 --> 16:35.260
对不对

16:35.260 --> 16:37.260
那这里是不是0到5

16:37.260 --> 16:39.260
但是可以没问题的

16:39.260 --> 16:41.260
结果是没问题的

16:41.260 --> 16:43.260
然后这里写3

16:43.260 --> 16:45.260
这里写4

16:45.360 --> 16:47.360
这样的结果肯定是没问题的

16:47.360 --> 16:49.360
只不过了不好

16:49.360 --> 16:51.360
为啥不好了

16:51.360 --> 16:53.360
将来这个数组比较多了一项

16:53.360 --> 16:55.360
多了一项过后

16:55.360 --> 16:57.360
你下半代码是不是要再改

16:57.360 --> 16:59.360
你不改代码

16:59.360 --> 17:01.360
肯定是只能输出前面这几项

17:01.360 --> 17:03.360
或者是将来一天少了一项

17:03.360 --> 17:05.360
你下半代码是不是也得改

17:05.360 --> 17:07.360
不然最后一项是Undefined

17:07.360 --> 17:09.360
它会有一个代码的影响

17:09.360 --> 17:11.360
还有另外一件事就是

17:11.360 --> 17:13.360
有的时候你这个数组有多少项

17:13.360 --> 17:15.360
这个数组不是你定义的

17:15.360 --> 17:17.360
是别人定义的

17:17.360 --> 17:19.360
比方说你的同事给他的一个数字

17:19.360 --> 17:20.360
你问他有多少项

17:20.360 --> 17:21.360
他都不知道

17:21.360 --> 17:22.360
他忘了

17:22.360 --> 17:24.360
或者将来你们学了网络之后

17:24.360 --> 17:26.360
这个通信是从网络那边传过来的

17:26.360 --> 17:28.360
你都不知道他有多少项

17:28.360 --> 17:30.360
所以就是这个地方你没法写

17:30.360 --> 17:31.360
就不知道多少项

17:31.360 --> 17:32.360
所以最好呢

17:32.360 --> 17:34.360
文拓的写法是写什么

17:34.360 --> 17:35.360
AR.n-1

17:35.360 --> 17:37.360
中间一直循环

17:37.360 --> 17:38.360
输出

17:38.360 --> 17:39.360
一次到这

17:39.360 --> 17:40.360
所以完了

17:40.360 --> 17:42.360
因此我们可以知道i的范围是多少

17:42.360 --> 17:43.360
变化的不就是i吗

17:43.360 --> 17:45.360
i的范围是多少

17:45.360 --> 17:47.360
i的范围不就是0到

17:47.360 --> 17:48.360
0到多少

17:48.360 --> 17:51.360
到数组的n-1

17:51.360 --> 17:53.360
是不是就到这个范围

17:53.360 --> 17:55.360
那就写

17:55.360 --> 17:57.360
i等于0开始

17:57.360 --> 17:58.360
我只确定i的范围

17:58.360 --> 17:59.360
你现在就不要去想

17:59.360 --> 18:01.360
先运行这个再去比较

18:01.360 --> 18:02.360
想都不去想这个时候

18:02.360 --> 18:04.360
我只需要确定i的范围就行了

18:04.360 --> 18:05.360
从0开始

18:05.360 --> 18:08.360
小于等于AR.n-1

18:08.360 --> 18:10.360
i加加

18:10.360 --> 18:11.360
不就是这个范围吗

18:11.360 --> 18:12.360
从这儿

18:12.360 --> 18:13.360
取到这儿

18:13.360 --> 18:15.360
每一次i等于0运行一次

18:15.360 --> 18:17.360
i等于2运行一次

18:17.360 --> 18:18.360
i等于3运行一次

18:18.360 --> 18:19.360
对不对

18:19.360 --> 18:20.360
那就不是输出每一个

18:20.360 --> 18:23.360
每一项吧对吧

18:23.360 --> 18:25.360
就是输出每一项最关键了

18:25.360 --> 18:26.360
i等于0运行一次

18:26.360 --> 18:27.360
这里就是0

18:27.360 --> 18:28.360
i等于1运行一次

18:28.360 --> 18:29.360
这里就是1

18:29.360 --> 18:30.360
当然我们现在看的

18:30.360 --> 18:32.360
比较更多的一个变利格式

18:32.360 --> 18:34.360
这种写法一定是没有任何问题的

18:34.360 --> 18:36.360
变利格式就是

18:36.360 --> 18:37.360
它比较简洁一些

18:37.360 --> 18:38.360
就这里不写等于

18:38.360 --> 18:40.360
写小于

18:40.360 --> 18:41.360
小于.n-1

18:41.360 --> 18:42.360
不是一样的道理吗

18:42.360 --> 18:43.360
那这样的话

18:43.360 --> 18:44.360
是不是还是i等于0

18:44.360 --> 18:45.360
到这个简移

18:45.360 --> 18:46.360
对吧

18:46.360 --> 18:47.360
还取不到这个吗

18:47.360 --> 18:48.360
小于还取不到这个

18:48.360 --> 18:50.360
这就是一个输出的变利

18:50.360 --> 18:51.360
那至于说

18:51.360 --> 18:52.360
你把这个输出的

18:52.360 --> 18:53.360
每一项拿出来

18:53.360 --> 18:55.360
这是个表达式

18:55.360 --> 18:56.360
我们之前讲过了

18:56.360 --> 18:57.360
这是个表达式

18:57.360 --> 18:58.360
你把这个表达式

18:58.360 --> 18:59.360
拿过来输出

18:59.360 --> 19:01.360
还是要去玩一些别的事情

19:01.360 --> 19:02.360
随便你

19:02.360 --> 19:04.360
不重要

19:04.360 --> 19:07.360
是我们要确定这个i的范围

19:07.360 --> 19:08.360
懂的意思吗

19:08.360 --> 19:09.360
这是第一个

19:09.360 --> 19:10.360
大题

19:10.360 --> 19:11.360
里边有很多小题

19:11.360 --> 19:12.360
这些小题

19:12.360 --> 19:14.360
都在不断的告诉你

19:14.360 --> 19:15.360
循环的本质

19:15.360 --> 19:17.360
特别是for循环的本质

19:17.360 --> 19:20.360
就是在确定它的范围

19:20.360 --> 19:21.360
找到一个范围

19:21.360 --> 19:23.360
我们就可以在范围里边去玩了

19:23.360 --> 19:25.360
范围一开始做什么事

19:25.360 --> 19:27.360
然后到下一个指读说什么事

19:27.360 --> 19:30.360
反正就是在不停地做

19:30.360 --> 19:31.360
这是第一个

19:31.360 --> 19:33.360
代码很简单

19:33.360 --> 19:34.360
道理也很简单

19:34.360 --> 19:36.360
需要大家去编写代码

19:36.360 --> 19:38.360
不断地去加深印象

19:39.360 --> 19:40.360
然后第二道题

19:40.360 --> 19:41.360
二点解释

19:41.360 --> 19:42.360
还是一样的

19:42.360 --> 19:44.360
做一道题

19:44.360 --> 19:46.360
反正你自己要写完一道题

19:46.360 --> 19:47.360
再看下一个

19:47.360 --> 19:50.990
第一道题

19:50.990 --> 19:53.990
输出一到一百的所有基数

19:54.990 --> 19:56.990
输出一到一百的所有基数

19:56.990 --> 19:58.990
那我们有之前的经验

19:58.990 --> 20:00.990
输出一到一百的所有数字

20:00.990 --> 20:01.990
是不是很简单

20:01.990 --> 20:03.990
我就确定一个i的范围都行了

20:03.990 --> 20:05.990
i等于1

20:05.990 --> 20:07.990
i小于等于100

20:08.990 --> 20:09.990
i加加

20:09.990 --> 20:10.990
不就是一个范围

20:10.990 --> 20:11.990
i的范围就出来了吗

20:11.990 --> 20:13.990
那我每次把i输出

20:13.990 --> 20:15.990
不就是先1来运行一次

20:15.990 --> 20:16.990
2来运行一次

20:16.990 --> 20:17.990
3来运行一次

20:17.990 --> 20:19.990
不就是一输出一到一百了

20:19.990 --> 20:21.990
但是我只要基数就行了

20:21.990 --> 20:23.990
一说我偶数不管的

20:23.990 --> 20:25.990
我这个代码什么时候执行

20:25.990 --> 20:27.990
下边代码只有基数的时候才执行

20:27.990 --> 20:28.990
谁是基数的时候

20:28.990 --> 20:30.990
不就是i是基数的时候吗

20:32.990 --> 20:33.990
你是怎么写

20:33.990 --> 20:34.990
判断一个数是不是基数

20:34.990 --> 20:35.990
我判断谁是不是基数

20:35.990 --> 20:36.990
判断i是不是基数

20:36.990 --> 20:37.990
i是不基数怎么判断

20:37.990 --> 20:39.990
i除以2的余书不等于理容就是基数

20:39.990 --> 20:41.990
注意等好我再强调一次

20:41.990 --> 20:46.370
不能写这种形式

20:46.370 --> 20:50.370
一定要写严格相等和严格不相等

20:50.370 --> 20:54.090
就写完了

20:55.090 --> 20:56.090
那这个代码又怎么理解的

20:56.090 --> 20:57.090
有些人会看

20:57.090 --> 20:58.090
复物循环加上异服

20:58.090 --> 20:59.090
好复杂

20:59.090 --> 21:00.090
有啥复杂的

21:00.090 --> 21:01.090
一把折起来

21:01.090 --> 21:02.090
看都不要看它

21:02.090 --> 21:03.090
注射掉

21:04.090 --> 21:05.090
i等于1的时候运行一次

21:05.090 --> 21:06.090
i等于2的时候运行一次

21:06.090 --> 21:08.090
i等于3的时候运行一次

21:09.090 --> 21:11.090
也就是这里面代码是分开的

21:11.090 --> 21:12.090
这个复合它是分开的

21:14.090 --> 21:15.090
i等于1的时候管它这里面

21:15.090 --> 21:17.090
写了一行还是十行

21:17.090 --> 21:19.090
还是一千行还是一万行

21:19.090 --> 21:20.090
都不重要

21:20.090 --> 21:21.090
反正i等于1的时候运行一次

21:21.090 --> 21:22.090
i等于2的时候运行一次

21:23.090 --> 21:25.090
所以这个代码你就只需要搞定什么

21:25.090 --> 21:29.090
搞定i是基数的时候

21:29.090 --> 21:31.090
我输出它就行了

21:32.090 --> 21:33.090
i代不断的变化

21:33.090 --> 21:34.090
i可能是基数可能是偶数

21:34.090 --> 21:36.090
我要输出的是所有的基数

21:36.090 --> 21:37.090
我只要它是基数

21:37.090 --> 21:38.090
我就输出就完成

21:39.090 --> 21:41.090
只要看到它是基数

21:41.090 --> 21:42.090
我就输出

21:42.090 --> 21:43.090
那偶数怎么办呢

21:43.090 --> 21:44.090
偶数这里的代码

21:44.090 --> 21:46.090
就判断进不去

21:46.090 --> 21:47.090
判断进不去的话

21:47.090 --> 21:49.090
它就继续下一次循环了

21:49.090 --> 21:51.090
i等于2的时候一看

21:51.090 --> 21:52.090
i等于2的时候判断进不去

21:52.090 --> 21:53.090
这里就结束了

21:54.090 --> 21:55.090
这件事做没

21:55.090 --> 21:56.090
做了呀

21:56.090 --> 21:57.090
但是它判断没进去

21:57.090 --> 21:58.090
这件事做不了

21:58.090 --> 21:59.090
懂得意思吗

21:59.090 --> 22:00.090
要好好去理一下

22:01.090 --> 22:02.090
没有那么复杂的

22:02.090 --> 22:03.090
其实你把它看

22:03.090 --> 22:04.090
你把循环里边的东西

22:04.090 --> 22:05.090
看成一个整体

22:06.090 --> 22:08.090
反正就是不停的做

22:08.090 --> 22:09.090
不停的做同一件事

22:12.170 --> 22:13.170
下面的倒题

22:13.170 --> 22:15.170
它们还没运行是吧

22:15.170 --> 22:16.170
那我们运行一下吧

22:16.170 --> 22:17.170
给它点面子

22:17.170 --> 22:18.170
不认为写完了

22:19.170 --> 22:20.170
一三五七九

22:20.170 --> 22:22.610
这个毫无疑问的

22:22.610 --> 22:23.610
好 下一个

22:23.610 --> 22:24.610
第二题

22:24.610 --> 22:26.610
定义一个数组

22:26.610 --> 22:28.610
输出数组中所有的

22:28.610 --> 22:29.610
基数

22:30.610 --> 22:31.610
有啥区别呢

22:31.610 --> 22:32.610
我就不知道

22:32.610 --> 22:34.610
难忘一个数组嘛

22:34.610 --> 22:35.610
Num

22:35.610 --> 22:36.610
Numverse

22:36.610 --> 22:37.610
所以要一天命名规范

22:37.610 --> 22:39.610
数组一般命名为副书

22:40.610 --> 22:41.610
比方说随便写个吧

22:41.610 --> 22:42.610
随便写

22:42.610 --> 22:43.610
自己随便瞎写

22:43.610 --> 22:44.610
无所谓的

22:46.610 --> 22:50.260
就这些数字

22:51.260 --> 22:52.260
这些数字

22:52.260 --> 22:53.260
我也不知道数组是否多少

22:53.260 --> 22:54.260
我可以变

22:54.260 --> 22:55.260
当然都可以变化的

22:55.260 --> 22:56.260
输出数组中

22:56.260 --> 22:57.260
所有的基数

22:58.260 --> 22:59.260
输出数组中

22:59.260 --> 23:00.260
所有的数字

23:00.260 --> 23:01.260
是不是很好办

23:01.260 --> 23:02.260
我确定个i的范围

23:02.260 --> 23:03.260
i的多少

23:03.260 --> 23:05.260
不是这个范围吗

23:05.260 --> 23:06.260
0

23:06.260 --> 23:07.260
到它吗

23:07.260 --> 23:08.260
到它的下表减1

23:09.260 --> 23:10.260
i的范围去领了

23:10.260 --> 23:11.260
那么这样子

23:11.260 --> 23:12.260
我们每一次循环

23:12.260 --> 23:13.260
是不是就可以拿到

23:13.260 --> 23:15.260
它的每一个数字

23:15.260 --> 23:16.260
每个数字怎么拿

23:16.260 --> 23:17.260
不就这样拿吧

23:17.260 --> 23:18.260
比方我们之前还输出过了

23:18.260 --> 23:19.260
对吧

23:19.260 --> 23:20.260
这不就是便利吗

23:20.260 --> 23:22.260
便利数组的每一项

23:23.260 --> 23:25.260
这个用我们编程的话来说

23:25.260 --> 23:27.260
用我们IT的数语来说

23:27.260 --> 23:29.260
便利数组的每一项

23:29.260 --> 23:30.260
什么叫便利

23:30.260 --> 23:31.260
就是把它一项一项拿出来看

23:31.260 --> 23:32.260
不就是便利吗

23:32.260 --> 23:33.260
你看

23:33.260 --> 23:35.260
我现在不就一项一项拿出来了吗

23:35.260 --> 23:36.260
我只是不想输出

23:36.260 --> 23:37.260
现在要输出吗

23:37.260 --> 23:38.260
我现在不输出

23:39.260 --> 23:41.260
便利它的每一项

23:41.260 --> 23:43.260
看一下那一项是不是极数

23:43.260 --> 23:45.260
是极数我就输出

23:45.260 --> 23:46.260
这样也不就打到目的了吗

23:46.260 --> 23:47.260
我就不是

23:47.260 --> 23:48.260
最重要的是输出它的所有极数

23:48.260 --> 23:49.260
对吧

23:49.260 --> 23:50.260
我就一项一项看

23:50.260 --> 23:51.260
它是极数吗

23:51.260 --> 23:52.260
不是

23:52.260 --> 23:53.260
不是算了

23:53.260 --> 23:54.260
它是极数吗

23:54.260 --> 23:55.260
是

23:55.260 --> 23:56.260
我就输出

23:56.260 --> 23:57.260
它是极数吗

23:57.260 --> 23:58.260
不是

23:58.260 --> 23:59.260
不是算了

23:59.260 --> 24:00.260
那么最终是不是输出了

24:00.260 --> 24:01.260
所有的极数

24:01.260 --> 24:02.260
因此我要判断

24:02.260 --> 24:03.260
现在我要判断的谁

24:03.260 --> 24:04.260
有的时候你分不清

24:04.260 --> 24:05.260
就打出4

24:05.260 --> 24:06.260
在每一次循环里边

24:07.260 --> 24:08.260
判断的是不是I

24:08.260 --> 24:09.260
不是

24:09.260 --> 24:10.260
判断的是那么是I

24:10.260 --> 24:11.260
就是你现在要做啥

24:11.260 --> 24:12.260
你要清楚

24:12.260 --> 24:13.260
判断那么是I

24:13.260 --> 24:14.260
是不是极数

24:16.260 --> 24:17.260
如果是

24:17.260 --> 24:18.260
就输出

24:18.260 --> 24:19.260
所以说你刚才判断的极数

24:19.260 --> 24:20.260
判断的是I

24:20.260 --> 24:21.260
现在判断的是在

24:21.260 --> 24:22.260
判断的是那么是I

24:23.260 --> 24:25.260
判断它是不是极数

24:25.260 --> 24:26.260
如果说是极数

24:26.260 --> 24:30.340
那我就输出

24:30.340 --> 24:31.340
那最终

24:31.340 --> 24:32.340
就这样了

24:33.340 --> 24:34.340
一判断它

24:34.340 --> 24:35.340
这里就写它

24:36.340 --> 24:39.980
不要把循环和判断

24:39.980 --> 24:40.980
一起来看

24:40.980 --> 24:42.980
不要一起来看

24:42.980 --> 24:43.980
一开始学习的势力

24:43.980 --> 24:44.980
可以把它分开

24:44.980 --> 24:45.980
反正就是I

24:45.980 --> 24:46.980
对于0的时候来一次

24:46.980 --> 24:47.980
I对于1的时候来一次

24:47.980 --> 24:48.980
I对于2的时候来一次

24:48.980 --> 24:49.980
就这样子想

24:51.980 --> 24:52.980
好 第三题

24:52.980 --> 24:53.980
定义一个数组

24:53.980 --> 24:55.980
找出所有的极数

24:55.980 --> 24:58.980
放到一个新数组中

24:59.980 --> 25:00.980
就这个数组

25:07.640 --> 25:08.640
我要导致

25:08.640 --> 25:09.640
导致它所有的极数

25:09.640 --> 25:10.640
比方说这里一个数字

25:10.640 --> 25:11.640
也就是我现在

25:11.640 --> 25:12.640
准备一个新数组

25:14.640 --> 25:15.640
然后呢

25:15.640 --> 25:16.640
这里11

25:16.640 --> 25:18.640
我要拿到一个极数

25:18.640 --> 25:19.640
我现在不是要输出

25:19.640 --> 25:20.640
我要拿一个新

25:20.640 --> 25:21.640
我要把它放到

25:21.640 --> 25:22.640
把所有的极数

25:22.640 --> 25:23.640
放到新数组里边

25:23.640 --> 25:25.640
23399

25:26.640 --> 25:27.640
所以我一个新数组

25:27.640 --> 25:28.640
最重要长这个样子

25:28.640 --> 25:29.640
我说我去了

25:29.640 --> 25:31.640
我不改动原数组

25:32.640 --> 25:34.640
那么这个题有怎么玩呢

25:35.640 --> 25:36.640
这个题

25:36.640 --> 25:37.640
我是不是得一开始

25:37.640 --> 25:38.640
在循环之前

25:38.640 --> 25:40.640
我就得准备好一个

25:40.640 --> 25:41.640
新数组

25:42.640 --> 25:43.640
对不对

25:43.640 --> 25:44.640
就好别说邓哥

25:44.640 --> 25:46.640
去吃那个自助餐

25:47.640 --> 25:48.640
自助餐的时候

25:48.640 --> 25:49.640
他要去拿菜

25:49.640 --> 25:50.640
有很多很多的菜品

25:50.640 --> 25:51.640
但是他不是所有的菜品

25:51.640 --> 25:52.640
他都需要

25:52.640 --> 25:53.640
他需要的是什么呢

25:54.640 --> 25:55.640
香菜

25:55.640 --> 25:56.640
秋葵

25:56.640 --> 25:57.640
对不对

25:57.640 --> 25:58.640
现在需要这些菜

25:58.640 --> 25:59.640
老虎菜

25:59.640 --> 26:00.640
辣椒

26:00.640 --> 26:01.640
番茄

26:01.640 --> 26:02.640
吃自助餐吗

26:04.640 --> 26:05.640
因此他是不是一开始

26:05.640 --> 26:06.640
要拿一个篮子

26:06.640 --> 26:07.640
或者拿一个盘子

26:07.640 --> 26:08.640
往里盘子里边装

26:08.640 --> 26:09.640
满足邀请

26:09.640 --> 26:10.640
往盘子里边装

26:10.640 --> 26:11.640
那于是呢

26:11.640 --> 26:13.640
我们在一开始的时候

26:13.640 --> 26:15.640
就应该准备好一个新数组

26:18.530 --> 26:19.530
准备好一个新数组

26:19.530 --> 26:20.530
然后是不是把

26:20.530 --> 26:22.530
原数组一个一个拿出来看

26:22.530 --> 26:23.530
看偶数算了

26:23.530 --> 26:25.530
击数我就把它往里边装

26:25.530 --> 26:27.530
击数我就把它往里边装

26:27.530 --> 26:28.530
对不对

26:28.530 --> 26:29.530
那是不是还是要便利谁

26:29.530 --> 26:31.530
便利的是原数组

26:31.530 --> 26:32.530
把原数组

26:32.530 --> 26:33.530
什么叫便利

26:33.530 --> 26:35.530
就是把它一个一个拿出来看

26:35.530 --> 26:37.530
拿哪个数组出来看

26:37.530 --> 26:38.530
拿他的东西出来看

26:38.530 --> 26:39.530
因此我循环的是谁

26:39.530 --> 26:41.530
循环的还是原数组

26:43.530 --> 26:44.530
这个逻辑就出来了

26:44.530 --> 26:45.530
那原数组里边

26:45.530 --> 26:46.530
我要做啥呢

26:46.530 --> 26:47.530
你搞不清楚

26:47.530 --> 26:49.530
你就写个大个注释

26:49.530 --> 26:51.530
我要判断哪个东西

26:51.530 --> 26:52.530
那么是I

26:52.530 --> 26:53.530
是不是判断

26:53.530 --> 26:54.530
数组的每一项

26:55.530 --> 26:57.530
这个代码会反复的运行

26:57.530 --> 26:58.530
A-0运行一次

26:58.530 --> 26:59.530
A-1运行一次

26:59.530 --> 27:00.530
一直到它下标解一

27:00.530 --> 27:01.530
运行到它最后一项

27:01.530 --> 27:03.530
判断这个玩意

27:03.530 --> 27:06.530
是不是G1-1

27:06.530 --> 27:08.530
如果是

27:09.530 --> 27:10.530
把它

27:10.530 --> 27:12.530
加入到

27:12.530 --> 27:13.530
六Num's中

27:13.530 --> 27:14.530
是不是要做这件事

27:14.530 --> 27:15.530
你现在不看代码

27:15.530 --> 27:16.530
你先把这个注释

27:16.530 --> 27:19.530
理解清楚

27:19.530 --> 27:21.530
这个注释理解清楚了之后

27:21.530 --> 27:22.530
你的后边的代码

27:22.530 --> 27:23.530
再写

27:23.530 --> 27:24.530
那么就要去

27:24.530 --> 27:25.530
把这个逻辑

27:25.530 --> 27:26.530
对应到代码

27:26.530 --> 27:27.530
你就能理解了

27:27.530 --> 27:28.530
所以说

27:28.530 --> 27:29.530
你要判断它是不是技术

27:29.530 --> 27:30.530
是不是你做过的

27:30.530 --> 27:31.530
Num's I

27:31.530 --> 27:32.530
是不是技术

27:32.530 --> 27:33.530
除以2的运数不等于0

27:33.530 --> 27:34.530
对吧

27:34.530 --> 27:35.530
这表达是吗

27:35.530 --> 27:36.530
你判断这个表达

27:36.530 --> 27:37.530
是不是技术

27:38.530 --> 27:39.530
是技术

27:39.530 --> 27:40.530
当然有时候

27:40.530 --> 27:41.530
你看不懂

27:41.530 --> 27:42.530
它一定要把

27:42.530 --> 27:43.530
这个东西放到一个

27:43.530 --> 27:44.530
变量里边

27:44.530 --> 27:46.530
然后再把变量放过来

27:47.530 --> 27:48.530
那也行吧

27:48.530 --> 27:50.530
但是我反复强调

27:50.530 --> 27:51.530
之前任何可以写

27:51.530 --> 27:52.530
数据的地方

27:52.530 --> 27:53.530
是不是都可以写

27:53.530 --> 27:54.530
变量至变量表达是

27:55.530 --> 27:56.530
对吧

27:56.530 --> 27:57.530
于方常都没问题

27:57.530 --> 27:58.530
这样子写的

27:58.530 --> 27:59.530
真要简洁一点

27:59.530 --> 28:01.530
它是一个技术怎么办

28:01.530 --> 28:02.530
我现在不是要输出

28:02.530 --> 28:03.530
我要把它做什么

28:03.530 --> 28:04.530
把它加入到

28:04.530 --> 28:05.530
六Num's中

28:05.530 --> 28:06.530
那现在要想一想

28:06.530 --> 28:07.530
怎么把这个东西

28:07.530 --> 28:09.530
加入到这个里边

28:09.530 --> 28:10.530
怎么加入呢

28:10.530 --> 28:11.530
往数据里面加一下

28:11.530 --> 28:12.530
不就是

28:12.530 --> 28:13.530
图习吗

28:14.530 --> 28:15.530
对吧

28:15.530 --> 28:16.530
往数据里面加一下

28:16.530 --> 28:17.530
Num's I

28:18.530 --> 28:19.530
加谁

28:19.530 --> 28:20.530
为什么这里写的是

28:20.530 --> 28:21.530
不是I写的是这个

28:21.530 --> 28:22.530
因为我就说

28:22.530 --> 28:23.530
加它

28:23.530 --> 28:24.530
它是谁

28:24.530 --> 28:25.530
不就是它吗

28:25.530 --> 28:26.530
不就是这个玩意吗

28:26.530 --> 28:27.530
它是技术

28:27.530 --> 28:28.530
我就把它

28:28.530 --> 28:29.530
加进去

28:29.530 --> 28:30.530
对吧

28:30.530 --> 28:31.530
不要去背

28:31.530 --> 28:32.530
千万不要去背

28:32.530 --> 28:33.530
程序是

28:33.530 --> 28:35.530
特别像

28:35.530 --> 28:36.530
最后的东西

28:36.530 --> 28:37.530
它有个特点

28:37.530 --> 28:38.530
第一个不能背

28:38.530 --> 28:39.530
比方说

28:39.530 --> 28:42.530
你们以前学那个加建成熟

28:42.530 --> 28:43.530
唯一需要背一点点的

28:43.530 --> 28:44.530
不就是那个

28:44.530 --> 28:45.530
加法表

28:45.530 --> 28:46.530
成法表对吧

28:46.530 --> 28:47.530
九九成法表

28:47.530 --> 28:48.530
九九加法表

28:48.530 --> 28:49.530
或者是

28:49.530 --> 28:50.530
没有九九加法表

28:50.530 --> 28:51.530
就是那个

28:51.530 --> 28:52.530
十亿内的

28:52.530 --> 28:53.530
加法

28:54.530 --> 28:55.530
是不是加法表

28:55.530 --> 28:56.530
我忘了

28:56.530 --> 28:57.530
本力只需要

28:57.530 --> 28:58.530
记住十亿内的加法

28:58.530 --> 28:59.530
是不是

28:59.530 --> 29:00.530
剩下的都快按着

29:00.530 --> 29:01.530
这个逻辑

29:01.530 --> 29:02.530
来推到出

29:02.530 --> 29:03.530
这个世间万物

29:03.530 --> 29:04.530
所有的加法

29:04.530 --> 29:05.530
你不需要去背吧

29:05.530 --> 29:06.530
你不需要去背

29:06.530 --> 29:07.530
十加十等于多少

29:07.530 --> 29:08.530
十加十亿等于多少

29:08.530 --> 29:09.530
十加十二等于多少

29:09.530 --> 29:10.530
然后再背

29:10.530 --> 29:11.530
十一加

29:11.530 --> 29:12.530
二十等于多少

29:12.530 --> 29:13.530
十一加

29:13.530 --> 29:14.530
二十一等于多少

29:14.530 --> 29:15.530
你不要去背这个东西吧

29:15.530 --> 29:17.530
哪里背到现在都背不完

29:17.530 --> 29:18.530
我们只需要

29:18.530 --> 29:19.530
抓住它的要领就可以了

29:19.530 --> 29:20.530
所以程序就是

29:20.530 --> 29:21.530
这种感觉

29:21.530 --> 29:23.530
你只要找到它的要领

29:24.530 --> 29:25.530
那么你不需要

29:25.530 --> 29:26.530
去背任何东西

29:27.530 --> 29:28.530
拿到任何东西

29:28.530 --> 29:29.530
不管你见过还是没见过

29:29.530 --> 29:30.530
你都可以用

29:30.530 --> 29:31.530
同样的方式去分析

29:32.530 --> 29:33.530
达到这样的

29:33.530 --> 29:36.530
达到这样的一个状态

29:36.530 --> 29:37.530
那么程序就没问题了

29:37.530 --> 29:38.530
就过关了

29:39.530 --> 29:40.530
好

29:40.530 --> 29:41.530
然后这里不就完了吗

29:41.530 --> 29:42.530
这里

29:42.530 --> 29:43.530
好循环

29:43.530 --> 29:44.530
这个循环一结束

29:44.530 --> 29:45.530
是不是这里面

29:45.530 --> 29:46.530
就放了所有的技术

29:46.530 --> 29:47.530
我们最终输出一下

29:49.530 --> 29:50.530
那你看不就是

29:50.530 --> 29:51.530
所有的技术吗

29:52.530 --> 29:53.530
对不对

29:54.530 --> 29:55.530
OK

29:55.530 --> 29:57.530
这是

29:58.530 --> 29:59.530
这一块

30:00.530 --> 30:02.530
然后就差不多了吧

30:02.530 --> 30:03.530
好吧

30:05.530 --> 30:06.530
这间课就差不多了

30:06.530 --> 30:07.530
就坐到这吧

30:07.530 --> 30:08.530
一二把坐完

