WEBVTT

00:00.000 --> 00:14.940
好 这就看了咱们来讲这个Switch开关

00:15.200 --> 00:18.260
开关 这个单词呢也是开关的意思啊

00:18.780 --> 00:20.060
这个东西呢

00:20.580 --> 00:25.700
没这么用 说实话没这么用 平时我们开发的时候不太会使用这个Switch

00:25.960 --> 00:31.320
甚至呢有些公司里边还不允许的使用它 必须要让你把它变成另外的格式

00:31.840 --> 00:33.620
因为Switch这个东西啊

00:34.080 --> 00:43.340
Switch的语法啊 始终可以使用义服结构替代啊 始终可以使用义服结构替代

00:43.860 --> 00:48.980
所以说呢这个Switch呢它没有不是很有用 但是呢我们既然讲到这个流程控制啊

00:49.240 --> 00:53.840
它也是属于流程控制的一部分 咱们还是来讲一讲 尽管了我们后边不太会用它

00:54.360 --> 00:56.400
好 它的结构是怎么呢 简单讲一下啊

00:57.940 --> 00:58.960
它的结构是这样子

00:59.220 --> 00:59.740
Switch

01:00.460 --> 01:04.560
两个小过号这里写表达式 当然可以写个变量 对吧 可以写个变量

01:04.820 --> 01:10.060
也可以写一个什么是字面量也可以写一个表达式 随便你啊 总之你写个表达式

01:10.700 --> 01:14.800
好 然后呢两个大过号 下边写的这个东西啊 这个东西case

01:15.560 --> 01:17.360
case呢这里写值啊 值

01:19.660 --> 01:21.400
值就数据啊 数据

01:21.960 --> 01:22.220
1

01:22.900 --> 01:23.500
好 帽号

01:24.180 --> 01:26.460
然后呢这里是代码块啊 代码块

01:27.180 --> 01:29.980
注意 这里没有大过号啊 没有花过号 代码块

01:31.460 --> 01:32.140
好case

01:32.740 --> 01:33.700
数据2

01:35.140 --> 01:35.860
好 代码块

01:38.040 --> 01:42.360
好 然后呢 后边可以写多个啊 可以写多个我就不写了啊 可以写多个case

01:42.760 --> 01:43.880
后边写上个default

01:45.640 --> 01:46.160
帽号

01:47.200 --> 01:47.640
代码块

01:48.880 --> 01:52.120
好 它什么意思呢 它是这样子 它的 它的含义是这样子

01:52.920 --> 01:53.280
啊

01:54.080 --> 01:57.240
计算表达式的返回值

01:58.040 --> 02:01.040
把表达式的值算出来 算出来之后呢

02:01.600 --> 02:05.800
一次和case后面的数据

02:06.360 --> 02:06.840
进行

02:08.240 --> 02:10.840
进行严格相等的比较

02:12.320 --> 02:15.720
也就是说它比判断的是啥 判断的是表达式 是不是等于数据1

02:15.720 --> 02:19.440
表达式是不是等于数据2啊 严格相等就三个等号

02:20.720 --> 02:21.800
好 这样子判断出来

02:22.320 --> 02:23.120
如果

02:24.120 --> 02:31.400
某个相等啊 某个相等停止比较啊 就跟一符l是一符差不多啊 只不过它比较的是相等

02:32.120 --> 02:33.040
停止比较

02:33.480 --> 02:35.240
然后运行

02:36.480 --> 02:39.720
其啊 其内部的代码块

02:40.600 --> 02:45.520
比方说这个表达式跟数据1 相等了 于是呢 就运行这个代码块

02:46.800 --> 02:48.560
再然后 再然后

02:49.160 --> 02:55.080
一次一次运行啊 因此运行之后的所有代码块

02:56.400 --> 02:59.440
看一下什么意思啊 好 举个例子啊 看一下什么意思

03:00.800 --> 03:02.480
好 这里新建议文件啊 test

03:03.200 --> 03:03.400
一

03:05.480 --> 03:06.800
啊 我们这里写个这么个代码

03:08.040 --> 03:16.280
好 所以就直接来个变量吧 随便来个变量啊 变量的话 比方说等于一个二十啊 就随便写 写写啊

03:16.880 --> 03:17.280
switch

03:18.280 --> 03:19.960
好 这里边呢 我们写上x

03:20.840 --> 03:29.760
好 case case的话 比方说一啊 一好 咱们呢 就输出啊 输出啊 一啊 输出一

03:30.560 --> 03:34.240
好 然后再来 case 啊 然后呢 二十

03:35.640 --> 03:43.520
哎 就输出什么呢 输出二十啊 二十就说 瞎写啊 然后呢 case 呢 输三十

03:44.520 --> 03:47.360
啊 然后就输出啊 三十

03:49.360 --> 03:56.760
好 然后default 啊default 输出啊 啊default 好 看一下啊 看一下

03:58.760 --> 04:05.040
啊 大家平时啊 写代码的时候呢 尽量的啊 写一个代码呢 按住 alt 下f 格式画一下啊

04:06.040 --> 04:07.480
好 咱们来看一下啊 他输出啥

04:07.760 --> 04:23.460
啊f12啊 刷新 他输出了二十三十和default 为什么呢 他是这样子啊 他把这个表达是算出来 算出来是多少呢 就是二十

04:23.900 --> 04:31.540
然后一次比较 跟他比较相等吗 不相等 对吧 不相等 然后比较下一个比较他相等吗 是不是相等

04:32.100 --> 04:41.340
相等的话 停止比较 不再比较了 然后运行这里边的代码块啊 这里代码的块呢 可以是一句代码 可以是多句代码啊 都可以

04:41.940 --> 04:49.900
好 运行这个代码块 然后呢 运行完了过还没完 还要接着往后边运行 后面就不比较了啊 后边就不比较了

04:50.100 --> 04:55.060
就一次直接运行完事了啊 运行他运行他运行他啊 就这么回事

04:56.020 --> 05:05.780
他呢 就相当于是一个啥呢 就一个电路图啊 就相当于是个电路图啊 当这个电路连通了之后呢 就畅同无阻的运行就完事了

05:06.900 --> 05:12.820
跟他相比 相等的 相等的这个电路就连通了 然后一次往后边运行 把运行完就完事了

05:13.380 --> 05:18.100
就这么简单 这就是开关这个结构 但是呢 我们很多时候啊

05:19.060 --> 05:27.620
我们很多时候 很多时候呢 都是希望的是啥呢 希望的是他比较成功之后只运行这一块代码块

05:28.340 --> 05:33.060
只运行这个代码块 那怎么办呢 好 这给大家介绍一个啊 一个关键字

05:34.420 --> 05:39.460
关键字啊 使用啊 就在case分支内部

05:40.420 --> 05:48.580
使用break语剧啊 使用break语剧可以立即停止switch

05:49.460 --> 05:53.300
结构啊 可以立即停止 就是跳出这个switch结构

05:54.180 --> 05:57.060
好 比方说我们这里可以这样写啊 这里写个break

05:57.860 --> 06:02.500
啊 这里写个break啊 每一个代码块里边呢 给他加上一个break

06:03.300 --> 06:09.140
啊 default呢就无所谓了啊 因为default里边后面也没啥东西了啊 default可以不加 但是我们习惯上呢也给他加上

06:09.620 --> 06:13.300
习惯上也给他加上 好 这样子我们再来看一下他输出什么

06:14.340 --> 06:22.900
他就只输出了20 怎么回事呢啊 来看一下啊 20来比较 他不想等对吧 不想等不运行这块啊 不运行

06:23.380 --> 06:28.420
好 跟20比较相等 相等的话是不是运行对吧 运行好 运行了过后

06:29.060 --> 06:35.380
他遇到了break break好像是切断电路啊 把这个电路给他切断 整个结构立即结束

06:35.860 --> 06:39.620
后边不看了啊 后边不运行了 直接结束 整个结构结束了

06:40.420 --> 06:44.900
明儿这一次吧 ok啊 整个结构就结束了 然后就继续往后面运行运行

06:46.180 --> 06:52.100
啊 所以说加上个break呢 才是我们平常啊 习惯上的写法 当然这种写法是不是用判断可以搞定

06:52.500 --> 06:58.420
对吧 判断20这个x是不等于1 等于1怎么样 是不等于20等于20怎么样 是不可以用判断搞定

06:59.060 --> 07:01.700
啊 因此这个数位情况平时很少用啊 用的不多

07:02.180 --> 07:06.580
好 然后再说一个啊 就是这个switch里边default

07:07.540 --> 07:12.340
可以省略啊 可以省略 default表示什么意思呢啊 表示什么意思呢

07:13.140 --> 07:21.860
他表示啊 表示前面的所有case都不满足啊 都不匹配

07:23.300 --> 07:29.700
匹配使运行啊 前面的所有的case都不匹配的时候运行default

07:29.940 --> 07:35.780
就相当于是啊呢 相当于是衣服判断里边的 else 是可以不写的 可以不写

07:36.900 --> 07:43.140
ok啊 这就是switch结构 了解一下就行了啊 我们平时用的很少啊 了解一下就行了 我也不举什么例子的啊

07:43.860 --> 07:44.820
ok 这是switch

