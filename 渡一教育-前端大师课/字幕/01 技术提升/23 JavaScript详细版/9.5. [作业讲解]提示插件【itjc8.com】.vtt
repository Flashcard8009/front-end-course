WEBVTT

00:00.000 --> 00:17.040
好 我来讲一下这个提示这个东西啊 这个功能怎么来做

00:17.680 --> 00:25.640
就上一课的作业 本来这一块呢 是比较的简单的 我们就写一个div嘛 对吧 固定定位嘛

00:26.040 --> 00:36.760
好 把它充满整个 充满整个四口 然后中间放一个一个小的div 对吧 点击的时候呢 把它显示出来就完事了 本来是很简单的啊

00:37.720 --> 00:41.680
但是呢 我这里呢 这里头的名字叫做提示插件

00:43.120 --> 00:50.840
什么叫插件呢 插件的就是增强功能 就是打补丁啊 补丁或者是外挂啊 给他增强功能的意思

00:51.600 --> 00:57.240
插件呢 他有一个特点啊 我们这里竟然说到第一次说到插件 我们讲一讲插件的特点

00:59.500 --> 01:05.780
就是如果你要做一个插件的话 事情就不简单了啊 你要没头一皱了 发现事情并不简单

01:06.380 --> 01:09.740
因为插件呢 他有个特点就是要考虑通用性

01:11.020 --> 01:19.710
通用性 就是我要写的功能啊 不仅是在这个页面 这种场景下可以用

01:20.230 --> 01:27.230
凡是类似的场景都可以用 他要适应各种各样的情况 他要考虑通用性 还要考虑什么意义用性

01:29.230 --> 01:34.510
好不好用 就用起来麻不麻烦啊 尽量的简单让使用的人尽量的简单

01:35.310 --> 01:39.910
所以说我们写插件了 叫考虑这么两个地方啊 还有就是与

01:41.750 --> 01:47.590
尽量 就是不要与其他功能冲突

01:48.350 --> 01:57.990
就是你要考虑到污染权具变量的问题 你写的变 污染的权具变量越多 就越可能与其他的插件或者是与其他的功能造成冲突

01:58.310 --> 02:00.830
其实我们要写一个页面 需要用到很多很多的插件

02:01.550 --> 02:11.630
你们现在呢 还没有学习介石库 就是别人做好的介石库啊 写好的功能 一般的都是我们自己写对吧 其实你们学到后边的话 也会发现别人已经做好了很多很多的功能

02:11.870 --> 02:17.550
包括我们这里什么提示插件不早就能做了 那为什么我要写呢 就是我们必须要锻炼自己

02:18.270 --> 02:25.670
写这个插件的能力啊 以后呢你们到公司里边不一定有些功能了 他不必定说就一定是有

02:26.390 --> 02:33.950
有可能 那公司还请什么开发者呢 对吧 都有现成的 为什么还要请开发者呢 他为什么要请这么多开发人员 就是因为有些东西别人没有

02:34.230 --> 02:39.030
目前市面上没有必须要让你自己做 就说你必须要学会制作这个插件

02:39.590 --> 02:45.110
就是要做一个通用性的东西出来 那么以后呢 什么什么场地都可以用了 啊 值得是这么一个意思

02:46.030 --> 02:50.030
好 所以说呢 我们这里可能做的是提示涉及到插件这两个字的

02:50.630 --> 02:53.750
那肯定不简单 因为你只要考虑到通用性

02:54.470 --> 02:59.630
复杂度 层层标准啊 而且你还要考虑到异用性 那复杂度又要标准

03:00.310 --> 03:06.110
所以说可能很多同学听到这几颗笑容得凝固了啊 不过没关系 我们第一次接触插件

03:07.270 --> 03:17.390
有一点那个老伙是正常的啊 正常的 但是呢 我们必须要接触 不然的话怎么办呢 以后你到公司里边 你要想哪个好心或者是你要成为一个核心的开发人员

03:18.110 --> 03:21.710
那你必须要会写插件 要写要会写一些通用性的东西

03:22.790 --> 03:28.310
关于后边 我们后面还会讲那个解释进阶 解释进阶里边的很多知识都是在告诉你

03:28.630 --> 03:32.430
你要怎么样去写一些通用性的东西 并且呢 尽量把代码写得优雅

03:33.350 --> 03:39.710
好 这里呢 我们先不说那么远啊 先说这个插件 我在这里呢 我专门来建一个文件夹来存放插件

03:40.230 --> 03:48.510
普朗迹 普朗迹 普朗迹表示插件的意思啊 我建这么一个文件夹 专门用以来存放插件 我们后边呢 可能还会写一些其他的插件

03:49.030 --> 03:58.870
ok 我们在这里呢 先建一个文件 我们这一颗做的是什么 做的是提示插件 专门来提示 比方说提示一个东西成功失败啊 或者是提示一个

03:59.510 --> 04:03.590
就是确认取消的东西啊 总是是一个提示性的东西

04:04.110 --> 04:12.710
好吧 我们这里这一颗来写这么一个插件 好 提示呢 就是啊 我们用propt 提示啊 解释

04:13.870 --> 04:17.350
我们写这么一个解释 外部文件啊 插件肯定都是外部文件

04:18.190 --> 04:24.550
因为要通用嘛 别的页面 所有的页面都可以用 我们这里建一个页面 这个页面呢 主要是用于测试啊 主要是用于测试

04:25.750 --> 04:31.670
好 看着啊 我们主要是关注我们写插件的过程中 会考虑到哪些东西 考虑的肯定很深

04:32.630 --> 04:34.950
考虑到 考虑到 考虑到 考虑到 考虑到 考虑到 考虑到 考虑到 考虑到肯定很多

04:35.830 --> 04:44.480
好 咱们呢 去写 就是去那个 引用一下这个解释啊 一旦设计到插件了 肯定不简单了

04:45.600 --> 04:55.280
好 我首先呢 写插件的时候 我首先做这么一个思考 我最终有效果呢 是这个效果对吧 这个效果啊 一个提示 那我们这里尽量解放

04:55.280 --> 04:57.280
就是confer

04:57.280 --> 04:59.780
confer表示确证取消

04:59.780 --> 05:01.280
我们就写这个

05:01.280 --> 05:03.280
把范围说小一点

05:03.280 --> 05:06.280
最终的目的是要弹出这么一个玩意儿

05:06.280 --> 05:08.280
那么我希望怎么用呢

05:08.280 --> 05:09.780
就是你写插件的时候

05:09.780 --> 05:12.280
你在希望就有一个大概的思路

05:12.280 --> 05:15.280
就是说假设它已经写好了

05:15.280 --> 05:18.280
我怎么去用它

05:18.280 --> 05:20.280
那么比方说我可以认为

05:20.280 --> 05:23.280
这个插件它给你提供了这么一个函数

05:23.280 --> 05:24.780
这个插件就给你提供了一个函数

05:24.780 --> 05:26.780
它不会污染其他的全局变量

05:26.780 --> 05:28.780
它只会给你提供一个函数

05:28.780 --> 05:30.780
这个函数的名字叫做

05:30.780 --> 05:32.780
openconfer

05:32.780 --> 05:34.780
或者就叫做confer

05:34.780 --> 05:36.780
但是这样的confer

05:36.780 --> 05:37.780
它会污染什么

05:37.780 --> 05:39.780
它会把那个window.confer

05:39.780 --> 05:41.780
给你就是覆盖掉了

05:41.780 --> 05:42.780
但是这样子不行

05:42.780 --> 05:45.780
因为尽量不要去替换掉

05:45.780 --> 05:46.780
覆盖掉其他任何东西

05:46.780 --> 05:48.780
我们把它叫做取名为

05:48.780 --> 05:50.780
open

05:50.780 --> 05:52.780
open

05:52.780 --> 05:54.780
confer

05:54.780 --> 05:56.780
打开一个确认对话框

05:56.780 --> 05:58.780
打开一个确认对话框

05:58.780 --> 06:00.780
假设我们希望写有这么一个函数

06:00.780 --> 06:01.780
提供给我

06:01.780 --> 06:02.780
那么我只要一调用

06:02.780 --> 06:04.780
它就出来了一个打开对话框

06:04.780 --> 06:08.780
打开一个确认对话框

06:08.780 --> 06:10.780
我们先按照这样的思路来写

06:10.780 --> 06:11.780
假设这个介石里面

06:11.780 --> 06:12.780
给我们提供了一个函数

06:12.780 --> 06:14.780
叫做openconfer

06:14.780 --> 06:17.780
于是这个介石里面会怎么写呢

06:17.780 --> 06:19.780
我们就直接写一个函数

06:19.780 --> 06:20.780
这是要做什么

06:20.780 --> 06:22.780
openconfer

06:22.780 --> 06:23.780
直接写这么一个函数

06:23.780 --> 06:24.780
这个函数做什么呢

06:24.780 --> 06:26.780
我这里打成个注释

06:26.780 --> 06:27.780
就表示的是

06:27.780 --> 06:29.780
打开一个

06:29.780 --> 06:32.780
打开一个

06:32.780 --> 06:34.780
确认对话框

06:34.780 --> 06:36.780
打开这么一个东西

06:36.780 --> 06:37.780
好

06:37.780 --> 06:38.780
那么这个函数里面

06:38.780 --> 06:39.780
要做什么事呢

06:39.780 --> 06:41.780
你要打开一个确认对话框

06:41.780 --> 06:43.780
那么是不是要创建一些元素啊

06:43.780 --> 06:45.780
我们的确认对话框里面

06:45.780 --> 06:47.780
你看一下有哪些元素要创建

06:47.780 --> 06:48.780
首先点击过后

06:48.780 --> 06:49.780
是不是一个灰色的

06:49.780 --> 06:50.780
把整个一面折住了

06:50.780 --> 06:51.780
对吧

06:51.780 --> 06:52.780
一个灰色的东西

06:52.780 --> 06:53.780
把整个一面折住了

06:53.780 --> 06:54.780
对吧

06:54.780 --> 06:55.780
没问题吧

06:55.780 --> 06:56.780
所以说你首先再创建一个元素

06:56.780 --> 06:58.780
把整个一面折起来

06:58.780 --> 06:59.780
折起来

06:59.780 --> 07:00.780
甭管这个一面上有啥东西

07:00.780 --> 07:01.780
你再把折起来

07:01.780 --> 07:03.780
比方说一面上有些按钮

07:03.780 --> 07:04.780
以后我点击按钮的时候

07:04.780 --> 07:08.780
我要打开一个确认对话框

07:08.780 --> 07:09.780
比方说我到时候用的时候

07:09.780 --> 07:10.780
怎么用呢

07:10.780 --> 07:11.780
我就找到这个按钮

07:11.780 --> 07:12.780
找到这个按钮

07:13.780 --> 07:16.780
document query selector

07:16.780 --> 07:18.780
找到这个按钮button

07:18.780 --> 07:20.780
然后onclick

07:21.780 --> 07:23.780
有一位同学开始想了

07:23.780 --> 07:24.780
因为你们第一次做插件

07:24.780 --> 07:25.780
我讲的细一点

07:25.780 --> 07:26.780
有一位同学可能开始想了

07:26.780 --> 07:28.780
我这里有个按钮

07:28.780 --> 07:29.780
那能不能把这个按钮注册

07:29.780 --> 07:31.780
实现的功能写到插件里面了

07:31.780 --> 07:32.780
能不能这样做呢

07:33.780 --> 07:34.780
你如果这样做的话

07:34.780 --> 07:35.780
就不满足通用心了

07:35.780 --> 07:36.780
你怎么知道

07:36.780 --> 07:38.780
它是点击一个按钮打开的呢

07:38.780 --> 07:39.780
你怎么知道

07:39.780 --> 07:40.780
它点了哪个按钮打开的呢

07:40.780 --> 07:42.780
你怎么知道是点击按钮

07:42.780 --> 07:43.780
而不是鼠标以上就打开的呢

07:43.780 --> 07:44.780
你不知道

07:44.780 --> 07:45.780
所以说你不能考虑这么

07:45.780 --> 07:47.780
你要考虑到这个问题的话

07:47.780 --> 07:50.780
你不能去做这种假设

07:50.780 --> 07:51.780
总之我能处理的功能

07:51.780 --> 07:53.780
不做任何什么事件处理

07:53.780 --> 07:55.780
我就做打开对话框

07:55.780 --> 07:56.780
就做这么一件事

07:57.780 --> 07:59.780
打开对话框的时候要干嘛

07:59.780 --> 08:00.780
要干嘛呢

08:00.780 --> 08:02.780
是不是要创建一个div

08:02.780 --> 08:03.780
对吧

08:03.780 --> 08:04.780
要创建一个div

08:04.780 --> 08:05.780
把整个页面折起来

08:05.780 --> 08:06.780
对不对

08:06.780 --> 08:07.780
好 那么我们自己创建div

08:07.780 --> 08:08.780
那么创建div

08:08.780 --> 08:09.780
要把整个页面折起来

08:09.780 --> 08:11.780
是不是要用到很多很多的东西

08:11.780 --> 08:12.780
对不对

08:12.780 --> 08:14.780
要用到很多很多的那个

08:15.780 --> 08:16.780
函数

08:16.780 --> 08:18.780
要用到很多很多的函数

08:18.780 --> 08:19.780
所以说这里呢

08:19.780 --> 08:21.780
我们可以用这种方式来处理

08:21.780 --> 08:22.780
第一种方式

08:22.780 --> 08:24.780
就是直接在这个函数

08:24.780 --> 08:25.780
里表写函数

08:25.780 --> 08:27.780
比方说初始化

08:27.780 --> 08:29.780
引力车初始化div

08:29.780 --> 08:31.780
初始化div

08:31.780 --> 08:33.780
初始化element

08:33.780 --> 08:37.350
初始化所有的元素

08:37.350 --> 08:40.350
初始化元素

08:40.350 --> 08:41.350
对吧

08:41.350 --> 08:43.350
我为什么要把函数写里边

08:43.350 --> 08:44.350
而为什么不写外边呢

08:44.350 --> 08:46.350
因为你写外边会不会影响

08:46.350 --> 08:48.350
就是污染权娱边量

08:48.350 --> 08:50.350
对吧 会污染吧

08:50.350 --> 08:51.350
而我们需要的是什么

08:51.350 --> 08:53.350
外边需要用的只有这个

08:53.350 --> 08:54.350
它不需要这个东西

08:54.350 --> 08:56.350
外边也不需要让它掉用这个东西

08:56.350 --> 08:58.350
就尽量不要污染权娱边量

08:58.350 --> 08:59.350
所以说我们这里

08:59.350 --> 09:00.350
写这么一个就够了

09:00.350 --> 09:02.350
写这么一个东西就够了

09:02.350 --> 09:04.350
你看这个意思吧

09:04.350 --> 09:05.350
甚至呢

09:05.350 --> 09:06.350
有的时候呢

09:06.350 --> 09:07.350
还有这种写法

09:07.350 --> 09:09.350
把几种写法都提供给你们

09:09.350 --> 09:11.350
这是一种写法

09:11.350 --> 09:13.350
还有一种写法的是这样子

09:13.350 --> 09:14.350
是这样子

09:14.350 --> 09:15.350
给大家看一下

09:15.350 --> 09:17.350
就是

09:17.350 --> 09:19.350
我们把整个的代码呢

09:19.350 --> 09:21.350
写到一个

09:21.350 --> 09:23.350
写到一个立即执行函数里边

09:23.350 --> 09:25.350
因为我知道立即执行函数

09:25.350 --> 09:26.350
是不是一定不会污染权娱边量

09:26.350 --> 09:27.350
对吧

09:27.350 --> 09:28.350
它都是立民的函数

09:28.350 --> 09:29.350
用一次就完了

09:29.350 --> 09:30.350
对吧

09:30.350 --> 09:31.350
一个立即执行函数

09:31.350 --> 09:33.350
它一定不会污染权娱边量

09:33.350 --> 09:35.350
我们把整个函数写里边

09:35.350 --> 09:36.350
那么这个时候就无所谓了

09:36.350 --> 09:38.350
你这个东西是不是可以写出来

09:38.350 --> 09:39.350
对不对

09:39.350 --> 09:40.350
是可以写出来吧

09:40.350 --> 09:41.350
没问题吧

09:41.350 --> 09:42.350
这个东西就可以写出来了

09:42.350 --> 09:44.350
因为反正在这个函数里边

09:44.350 --> 09:45.350
它都不会污染的

09:45.350 --> 09:46.350
但是现在会有一个问题

09:46.350 --> 09:47.350
什么问题呢

09:47.350 --> 09:49.350
就是你这样的一写

09:49.350 --> 09:52.350
会导致外边用不了这个函数了

09:52.350 --> 09:53.350
对吧

09:53.350 --> 09:54.350
因为它在立即执行函数里边

09:54.350 --> 09:55.350
因为这个东西没有污染

09:55.350 --> 09:56.350
任何权娱边量

09:56.350 --> 09:57.350
污染权娱边量呢

09:57.350 --> 09:59.350
有时候并不是一定

09:59.350 --> 10:00.350
一定是坏事

10:00.350 --> 10:01.350
因为它可能要提供一些函数

10:01.350 --> 10:02.350
供外边使用

10:02.350 --> 10:03.350
你不污染的话

10:03.350 --> 10:04.350
外边怎么使用呢

10:04.350 --> 10:05.350
对吧

10:05.350 --> 10:06.350
外边现在使用不了这个函数了

10:06.350 --> 10:08.350
比方说咱们console log

10:08.350 --> 10:09.350
open

10:09.350 --> 10:10.350
比方说打印一个东西

10:12.350 --> 10:14.350
然后我们这里运行看一下

10:14.350 --> 10:15.350
能不能使用这个函数

10:17.350 --> 10:18.350
所以不能使用

10:18.350 --> 10:20.350
它说这个没有定义

10:20.350 --> 10:21.350
是无法使用的

10:21.350 --> 10:22.350
看到没

10:22.350 --> 10:23.350
它无法使用

10:24.350 --> 10:25.350
那么这里该怎么来处理呢

10:25.350 --> 10:26.350
我们就这样来处理

10:26.350 --> 10:28.350
你这个函数不是可以

10:28.350 --> 10:29.350
供外面使用吗

10:29.350 --> 10:30.350
而这个函数不行

10:30.350 --> 10:31.350
那么我们这里

10:31.350 --> 10:32.350
最后

10:32.350 --> 10:33.350
这个函数本身

10:33.350 --> 10:35.350
这个立即执行函数本身

10:35.350 --> 10:36.350
反挥啥

10:36.350 --> 10:37.350
反挥这个open

10:37.350 --> 10:38.350
confer

10:38.350 --> 10:39.350
把这个函数返回

10:40.350 --> 10:41.350
这样子

10:41.350 --> 10:42.350
这个函数运行

10:42.350 --> 10:43.350
它会把这个返回

10:43.350 --> 10:44.350
那么现在这里

10:44.350 --> 10:45.350
在调用函数

10:45.350 --> 10:46.350
你看两个小国号

10:46.350 --> 10:47.350
在调用这个函数

10:47.350 --> 10:48.350
那么整个表达是

10:48.350 --> 10:49.350
得到的结果

10:49.350 --> 10:50.350
是不是就是这个结果

10:50.350 --> 10:51.350
整个表达是

10:51.350 --> 10:52.350
得到的结果就是这个结果

10:52.350 --> 10:53.350
因为这里在调用函数

10:53.350 --> 10:54.350
调用函数

10:54.350 --> 10:55.350
它会返回这个东西

10:55.350 --> 10:56.350
于是

10:56.350 --> 10:57.350
我们可以用个辩量来接收

10:57.350 --> 10:58.350
对吧

10:58.350 --> 10:59.350
用个辩量来接收

10:59.350 --> 11:00.350
open

11:00.350 --> 11:01.350
confer

11:01.350 --> 11:02.350
这也是一种比较流行的写法

11:02.350 --> 11:03.350
这种写法

11:03.350 --> 11:04.350
和之前那种写法

11:04.350 --> 11:05.350
之前直接写函数的

11:05.350 --> 11:06.350
对吧

11:06.350 --> 11:07.350
把这个函数写里面都行

11:07.350 --> 11:08.350
都行

11:09.350 --> 11:10.350
咱们来看一下

11:10.350 --> 11:11.350
看一下

11:11.350 --> 11:12.350
保存看一下

11:12.350 --> 11:13.350
这边点击

11:15.350 --> 11:16.350
这里

11:16.350 --> 11:18.350
这里改成confer

11:18.350 --> 11:19.350
再来

11:19.350 --> 11:20.350
点击

11:20.350 --> 11:21.350
你看

11:21.350 --> 11:22.350
是不是可以运行

11:22.350 --> 11:23.350
对吧

11:23.350 --> 11:24.350
好

11:24.350 --> 11:25.350
这是这一种写法

11:25.350 --> 11:26.350
两种写法都可以

11:26.350 --> 11:27.350
然后这里

11:27.350 --> 11:28.350
我再提供给大家

11:28.350 --> 11:29.350
一种

11:29.350 --> 11:30.350
特别高级的写法

11:31.350 --> 11:33.350
就是如果你

11:33.350 --> 11:34.350
这样的写了

11:34.350 --> 11:35.350
看上去没什么问题

11:35.350 --> 11:36.350
但是如果你考虑到

11:36.350 --> 11:37.350
以后

11:37.350 --> 11:39.350
我们还要做很多的插件

11:39.350 --> 11:40.350
这是一个

11:40.350 --> 11:41.350
将来我们还有可能

11:41.350 --> 11:42.350
在这个文件夹里面

11:42.350 --> 11:43.350
加一些插件

11:43.350 --> 11:44.350
加很多的插件

11:44.350 --> 11:45.350
那么会导致一个问题

11:45.350 --> 11:46.350
每一个GSE文件

11:46.350 --> 11:47.350
污染一个权局辩量

11:47.350 --> 11:49.350
每一个污染一个

11:49.350 --> 11:51.350
这样子刷下来也挺恐怖的

11:51.350 --> 11:52.350
也污染了不少了

11:52.350 --> 11:53.350
那怎么办呢

11:54.350 --> 11:55.350
我们可以用这种方式

11:55.350 --> 11:57.350
我们把这里的函数

11:57.350 --> 11:58.350
每一个GSE文件里边

11:58.350 --> 12:00.350
你要做的污染的函数

12:01.350 --> 12:02.350
我们把它放到一个对象里边

12:02.350 --> 12:03.350
我们以前学过

12:03.350 --> 12:04.350
单对象模式对吧

12:04.350 --> 12:05.350
就是一个GSE文件里面

12:05.350 --> 12:06.350
提供一个对象

12:06.350 --> 12:08.350
污染一个权局辩量

12:08.350 --> 12:09.350
那么现在呢

12:09.350 --> 12:10.350
我们来看另外一种做法

12:10.350 --> 12:12.350
就是多个GSE文件

12:12.350 --> 12:14.350
它只污染一个权局辩量

12:14.350 --> 12:16.350
那怎么来做呢

12:16.350 --> 12:17.350
我们看着可以用这种写法

12:17.350 --> 12:19.350
并没有什么特别的

12:19.350 --> 12:20.350
我们用这种写法

12:20.350 --> 12:22.350
判断一下

12:22.350 --> 12:24.350
如果温斗对象里边

12:24.350 --> 12:25.350
权局辩量

12:25.350 --> 12:26.350
肯定在温斗里边

12:26.350 --> 12:27.350
对吧

12:27.350 --> 12:28.350
权局辩量肯定在温斗里边

12:28.350 --> 12:30.350
温斗对象里边

12:30.350 --> 12:32.350
比方说有一个Mine Plonging

12:32.350 --> 12:33.350
这个属性

12:33.350 --> 12:34.350
如果它没有的话

12:34.350 --> 12:35.350
看一下

12:35.350 --> 12:37.350
就是我们打算污染的就是这个东西

12:37.350 --> 12:39.350
我们想在温斗对象上面

12:39.350 --> 12:41.350
挂一个属性叫Mine Plonging

12:41.350 --> 12:42.350
Plonging就是插件的意思

12:42.350 --> 12:43.350
我的插件吧

12:43.350 --> 12:45.350
看一下有没有这个属性

12:45.350 --> 12:47.350
如果没有的话

12:47.350 --> 12:48.350
Mine Plonging

12:48.350 --> 12:50.350
给它复制为一个空对象

12:50.350 --> 12:51.350
如果你没有

12:51.350 --> 12:53.350
我就给你复制为一个空对象

12:53.350 --> 12:54.350
没什么意思吧

12:54.350 --> 12:56.350
好那么下边的话

12:56.350 --> 12:57.350
下边的话

12:57.350 --> 12:58.350
我们这样子来处理

12:58.350 --> 13:00.350
直接把它挂到哪呢

13:00.350 --> 13:02.350
挂到Mine Plonging里边

13:03.350 --> 13:04.350
没问题吧

13:04.350 --> 13:05.350
你看

13:05.350 --> 13:08.350
因为运行到第五行的时候

13:08.350 --> 13:09.350
是不是它一定有

13:09.350 --> 13:11.350
这个东西一定有值的

13:11.350 --> 13:12.350
我往它里边加一个属性

13:12.350 --> 13:13.350
Open Confer

13:13.350 --> 13:14.350
好那么以后

13:14.350 --> 13:15.350
我要写其他插件

13:15.350 --> 13:17.350
比方说Azer

13:17.350 --> 13:18.350
其他插件

13:18.350 --> 13:19.350
又是一个插件了

13:19.350 --> 13:20.350
那么

13:20.350 --> 13:21.350
那么我们可以用

13:21.350 --> 13:22.350
类似的同样的写法

13:22.350 --> 13:23.350
同样的写法

13:23.350 --> 13:24.350
比方说

13:24.350 --> 13:25.350
Mine Plonging

13:25.350 --> 13:26.350
如果没有的话

13:26.350 --> 13:27.350
再加上

13:27.350 --> 13:28.350
如果没有的话

13:28.350 --> 13:30.350
比方说给它复制一个属性ABC

13:30.350 --> 13:31.350
等于123

13:31.350 --> 13:32.350
比方说另外的插件

13:32.350 --> 13:34.350
你看整个两个介石

13:34.350 --> 13:35.350
是不是只不让人一个权力变两

13:35.350 --> 13:36.350
就是Mine Plonging

13:36.350 --> 13:37.350
对吧

13:37.350 --> 13:38.350
只不让人一个权力变两

13:39.350 --> 13:40.350
好然后呢

13:40.350 --> 13:41.350
我们在单码里边看一下

13:41.350 --> 13:42.350
我们到时候用的时候

13:42.350 --> 13:43.350
就怎么用的

13:43.350 --> 13:44.350
Mine Plonging

13:44.350 --> 13:45.350
对吧

13:45.350 --> 13:46.350
第二Open Confer

13:46.350 --> 13:47.350
你看你变成这样子用的

13:47.350 --> 13:48.350
点击

13:48.350 --> 13:49.350
你看可以运行

13:49.350 --> 13:50.350
并且呢

13:50.350 --> 13:51.350
我们还可以得到

13:51.350 --> 13:53.350
还有另外一个插件

13:53.350 --> 13:54.350
对吧

13:54.350 --> 13:55.350
我们写了两个插件

13:55.350 --> 13:56.350
另外一个插件是

13:56.350 --> 13:57.350
这里边

13:57.350 --> 13:59.350
我们也可以使用那个

13:59.350 --> 14:00.350
Mine Plonging

14:00.350 --> 14:01.350
加了这个插件过后了

14:01.350 --> 14:02.350
它里边就多了一个什么ABC

14:02.350 --> 14:04.350
多了一个ABC

14:04.350 --> 14:05.350
看一下

14:05.350 --> 14:06.350
看是不是多了一个ABC

14:06.350 --> 14:07.350
对吧

14:07.350 --> 14:09.350
好如果这个插件注释掉

14:09.350 --> 14:10.350
注释掉没有加这个插件

14:10.350 --> 14:11.350
那个ABC就不存在

14:11.350 --> 14:12.350
还没

14:12.350 --> 14:13.350
这样子就做成了一个

14:13.350 --> 14:14.350
这个插件

14:14.350 --> 14:15.350
它是可以做成了一个

14:15.350 --> 14:17.350
可以把握插状效果

14:17.350 --> 14:18.350
而且没有任何额外的

14:18.350 --> 14:20.350
权聚变量污染

14:20.350 --> 14:21.350
全部在这里边

14:21.350 --> 14:23.350
这是一种巧妙的写法

14:23.350 --> 14:24.350
所以说一下

14:25.350 --> 14:27.350
好现在回到这

14:27.350 --> 14:29.350
接下来我们把格式写出来过后了

14:29.350 --> 14:30.350
接下来我们来开始来

14:30.350 --> 14:31.350
搞定这个函数了

14:31.350 --> 14:32.350
这个函数呢

14:32.350 --> 14:33.350
先要做啥

14:33.350 --> 14:35.350
先要做初始化元素对吧

14:35.350 --> 14:36.350
初始化元素呢

14:36.350 --> 14:37.350
这里面肯定有不少的元素

14:37.350 --> 14:38.350
有不少的元素

14:38.350 --> 14:40.350
有哪些元素呢

14:40.350 --> 14:41.350
比方说

14:41.350 --> 14:42.350
这里边有什么

14:42.350 --> 14:44.350
有那个

14:45.350 --> 14:46.350
这里点击过后了

14:46.350 --> 14:47.350
有一个背景

14:47.350 --> 14:48.350
半透明的背景

14:48.350 --> 14:49.350
覆盖整个颜面

14:49.350 --> 14:50.350
还有一个元素呢

14:50.350 --> 14:51.350
是这个元素对吧

14:51.350 --> 14:52.350
是中间这个元素

14:52.350 --> 14:53.350
我们先来初始化

14:53.350 --> 14:55.350
覆盖整个颜面的元素

14:55.350 --> 14:56.350
现在初始化这个

14:56.350 --> 14:57.350
我们把这个元素

14:57.350 --> 14:58.350
叫做蒙层

14:58.350 --> 14:59.350
蒙层

14:59.350 --> 15:00.350
我们这里一个个来

15:00.350 --> 15:02.350
初始化蒙层

15:02.350 --> 15:04.350
初始化蒙层

15:04.350 --> 15:06.350
这里我们来写一下

15:08.350 --> 15:09.350
model

15:09.350 --> 15:10.350
初始化

15:10.350 --> 15:12.350
model就是蒙层的意思

15:12.350 --> 15:13.350
初始化蒙层

15:13.350 --> 15:15.350
OK我们这里写一样

15:15.350 --> 15:16.350
init

15:16.350 --> 15:17.350
model

15:17.350 --> 15:18.350
初始化蒙层的时候

15:18.350 --> 15:19.350
是不是创建DIV对吧

15:19.350 --> 15:20.350
创建一个DIV

15:20.350 --> 15:21.350
来吧

15:21.350 --> 15:22.350
document

15:22.350 --> 15:23.350
crease

15:23.350 --> 15:24.350
animate

15:24.350 --> 15:25.350
创建DIV

15:25.350 --> 15:26.350
这里

15:26.350 --> 15:27.350
一个DIV

15:27.350 --> 15:28.350
model

15:28.350 --> 15:29.350
创建DIV

15:29.350 --> 15:31.350
创建好了之后

15:31.350 --> 15:32.350
我们干嘛呢

15:32.350 --> 15:33.350
我要把这个

15:33.350 --> 15:34.350
DIV里面

15:34.350 --> 15:35.350
给它设置一些样式

15:35.350 --> 15:36.350
对不对

15:36.350 --> 15:37.350
设置一些样式

15:37.350 --> 15:38.350
然后让它充满整个窗口

15:38.350 --> 15:39.350
然后把这个DIV

15:39.350 --> 15:40.350
加到哪

15:40.350 --> 15:42.350
加到body元素里面

15:42.350 --> 15:43.350
最后把这个DIV

15:43.350 --> 15:44.350
document

15:44.350 --> 15:46.350
body

15:46.350 --> 15:47.350
append

15:47.350 --> 15:48.350
child

15:48.350 --> 15:49.350
DIV

15:49.350 --> 15:50.350
model

15:50.350 --> 15:51.350
把这个蒙层

15:51.350 --> 15:52.350
加到body里面

15:52.350 --> 15:53.350
咱们来看一下

15:54.350 --> 15:55.350
点击过后

15:55.350 --> 15:56.350
你看一下

15:56.350 --> 15:57.350
我们页面里面

15:57.350 --> 15:58.350
已经有个DIV了

15:58.350 --> 15:59.350
看到没

15:59.350 --> 16:00.350
这个DIV加进来了

16:00.350 --> 16:01.350
好

16:01.350 --> 16:02.350
然后给这个DIV

16:02.350 --> 16:03.350
加一些CSS样式

16:03.350 --> 16:04.350
加一些样式

16:04.350 --> 16:05.350
这个DIV里面

16:05.350 --> 16:06.350
有哪些样式呢

16:06.350 --> 16:07.350
model

16:07.350 --> 16:08.350
style里面

16:08.350 --> 16:09.350
首先它的定位方式

16:09.350 --> 16:10.350
Application等于什么

16:10.350 --> 16:12.350
Apps and Notes

16:12.350 --> 16:13.350
Apps and Notes

16:13.350 --> 16:14.350
等于这个

16:15.350 --> 16:16.350
然后DIV

16:16.350 --> 16:17.350
model

16:17.350 --> 16:18.350
style

16:18.350 --> 16:19.350
然后

16:20.350 --> 16:22.350
给它设置

16:22.350 --> 16:23.350
不是Apps

16:23.350 --> 16:24.350
而是fixed

16:24.350 --> 16:25.350
固定定位

16:25.350 --> 16:26.350
把整个窗口称满

16:26.350 --> 16:27.350
对吧

16:27.350 --> 16:28.350
设置个背景颜色

16:28.350 --> 16:29.350
设置个背景颜色

16:29.350 --> 16:30.350
background

16:30.350 --> 16:31.350
背景颜色

16:31.350 --> 16:32.350
我们这里设置为红色

16:32.350 --> 16:33.350
看着见的

16:33.350 --> 16:35.350
然后宽度

16:35.350 --> 16:36.350
宽度称满

16:36.350 --> 16:37.350
那肯定是

16:37.350 --> 16:38.350
style weights

16:38.350 --> 16:39.350
等于什么

16:39.350 --> 16:40.350
100%

16:40.350 --> 16:41.350
高度

16:41.350 --> 16:42.350
DIVmodel

16:42.350 --> 16:43.350
然后我这里

16:43.350 --> 16:44.350
高度就直接设置了

16:44.350 --> 16:45.350
DIVmodel

16:45.350 --> 16:46.350
DIV

16:46.350 --> 16:47.350
style

16:48.350 --> 16:49.350
就是 weights

16:49.350 --> 16:50.350
高度

16:50.350 --> 16:51.350
高度

16:51.350 --> 16:53.350
高度和宽度都等于100%

16:53.350 --> 16:54.350
保存

16:54.350 --> 16:55.350
再看一下

16:55.350 --> 16:56.350
那看

16:56.350 --> 16:57.350
蒙称是不是出来了

16:57.350 --> 16:58.350
对吧

16:58.350 --> 16:59.350
蒙称出来了

16:59.350 --> 17:00.350
还有 weights

17:00.350 --> 17:01.350
DIVmodel

17:01.350 --> 17:02.350
style

17:03.350 --> 17:04.350
top

17:04.350 --> 17:05.350
left

17:05.350 --> 17:07.350
和DIVmodel

17:07.350 --> 17:08.350
style

17:08.350 --> 17:09.350
top

17:09.350 --> 17:10.350
都等于0

17:11.350 --> 17:12.350
点击

17:12.350 --> 17:13.350
你看

17:13.350 --> 17:14.350
是不是称满的

17:14.350 --> 17:15.350
整个页面一定是称满的

17:15.350 --> 17:16.350
这个DIV创建好了

17:16.350 --> 17:17.350
看没

17:18.350 --> 17:19.350
那么这里

17:19.350 --> 17:20.350
你要考虑到另外一个问题

17:20.350 --> 17:22.350
我们先把背景收透明

17:22.350 --> 17:23.350
收透明

17:23.350 --> 17:25.350
白光的是RGB

17:25.350 --> 17:26.350
RGB

17:26.350 --> 17:27.350
零

17:27.350 --> 17:28.350
零

17:28.350 --> 17:29.350
零

17:29.350 --> 17:30.350
零

17:30.350 --> 17:31.350
零

17:31.350 --> 17:32.350
零

17:32.350 --> 17:33.350
零

17:33.350 --> 17:34.350
零

17:34.350 --> 17:35.350
零

17:35.350 --> 17:36.350
零

17:36.350 --> 17:37.350
零

17:37.350 --> 17:38.350
零

17:38.350 --> 17:39.350
零

17:39.350 --> 17:40.350
零

17:40.350 --> 17:41.350
零

17:41.350 --> 17:42.350
零

17:42.350 --> 17:43.350
零

17:43.350 --> 17:44.350
零

17:44.350 --> 17:45.350
零

17:45.350 --> 17:46.350
零

17:46.350 --> 17:47.350
零

17:47.350 --> 17:48.350
零

17:48.350 --> 17:49.350
零

17:49.350 --> 17:50.350
零

17:50.350 --> 17:51.350
零

17:51.350 --> 17:52.350
零

17:52.350 --> 17:53.350
零

17:53.350 --> 17:54.350
零

17:54.350 --> 17:55.350
零

17:55.350 --> 17:56.350
零

17:56.350 --> 17:57.350
零

17:57.350 --> 17:58.350
零

17:58.350 --> 17:59.350
零

17:59.350 --> 18:00.350
零

18:00.350 --> 18:01.350
零

18:01.350 --> 18:02.350
零

18:02.350 --> 18:03.350
零

18:03.350 --> 18:04.350
零

18:04.350 --> 18:05.350
零

18:05.350 --> 18:06.350
零

18:06.350 --> 18:07.350
零

18:07.350 --> 18:08.350
零

18:08.350 --> 18:09.350
零

18:09.350 --> 18:10.350
零

18:10.350 --> 18:11.350
零

18:11.350 --> 18:12.350
零

18:12.350 --> 18:13.350
零

18:13.350 --> 18:14.350
一开始没有职嘛

18:14.350 --> 18:15.350
对吧

18:15.350 --> 18:16.350
一开始没有职

18:16.350 --> 18:17.350
说明他从来没有创建过这个蒙城

18:17.350 --> 18:19.350
这个蒙城是从来没创建过的

18:19.350 --> 18:20.350
他表示蒙城

18:21.350 --> 18:22.350
蒙城

18:23.350 --> 18:25.350
这个蒙城如果没有创建过

18:25.350 --> 18:27.350
OK 我给你创建一遍

18:27.350 --> 18:28.350
我这里不定义了

18:28.350 --> 18:30.350
直接给外面那个副职

18:30.350 --> 18:31.350
我如果没有职的话

18:31.350 --> 18:32.350
我给你创建

18:32.350 --> 18:33.350
如果你有职的话

18:33.350 --> 18:34.350
我就不再创建了

18:34.350 --> 18:35.350
就不再创建了

18:35.350 --> 18:37.350
就避免了什么

18:37.350 --> 18:39.350
避免了你反复掉用这个函数的时候

18:39.350 --> 18:40.350
创建多个蒙城

18:40.350 --> 18:41.350
你看你要考虑通用性的话

18:41.350 --> 18:42.350
就不得了

18:42.350 --> 18:43.350
对吧

18:43.350 --> 18:45.350
要考虑到这些问题

18:45.350 --> 18:46.350
好 比方说

18:46.350 --> 18:47.350
那咱们来试一下

18:47.350 --> 18:49.350
现在我们刁问函数

18:49.350 --> 18:50.350
open

18:50.350 --> 18:51.350
open啥

18:51.350 --> 18:52.350
open

18:52.350 --> 18:53.350
confer

18:53.350 --> 18:54.350
confer

18:54.350 --> 18:55.350
对不对

18:55.350 --> 18:56.350
买蒙城

18:56.350 --> 18:57.350
买蒙城

18:57.350 --> 18:59.350
买蒙城

18:59.350 --> 19:00.350
open

19:00.350 --> 19:01.350
confer

19:01.350 --> 19:02.350
刁问这个

19:02.350 --> 19:03.350
你看

19:03.350 --> 19:04.350
好 再这样一次

19:04.350 --> 19:05.350
再这样一次

19:05.350 --> 19:07.350
还有效果吗

19:07.350 --> 19:08.350
只有一个

19:08.350 --> 19:09.350
对吧 只有一个

19:09.350 --> 19:10.350
他不会额外创建的

19:10.350 --> 19:11.350
不会额外创建的

19:11.350 --> 19:13.350
但是呢 这里有一点要注意

19:13.350 --> 19:14.350
一会儿呢

19:14.350 --> 19:15.350
我们会关闭这个蒙城

19:15.350 --> 19:16.350
对吧 关闭

19:16.350 --> 19:17.350
关闭是什么意思

19:17.350 --> 19:18.350
不是把它

19:18.350 --> 19:19.350
不是删除它

19:19.350 --> 19:20.350
不是删除它

19:20.350 --> 19:22.350
而是怎么样的

19:22.350 --> 19:24.350
而是把它隐藏掉

19:24.350 --> 19:25.350
一会儿点击过关闭

19:25.350 --> 19:27.350
是把它隐藏掉

19:27.350 --> 19:28.350
所以说呢 这里呢

19:28.350 --> 19:29.350
甭管你是不是新创建的

19:29.350 --> 19:31.350
你得把它显示出来

19:31.350 --> 19:33.350
这个代码很简单对吧

19:33.350 --> 19:34.350
divmode

19:34.350 --> 19:35.350
style

19:35.350 --> 19:36.350
display

19:36.350 --> 19:37.350
block

19:37.350 --> 19:38.350
如果你没有的话

19:38.350 --> 19:39.350
给你创建

19:39.350 --> 19:40.350
如果你有的话

19:41.350 --> 19:43.350
这是初始化蒙城

19:43.350 --> 19:44.350
再看一下

19:44.350 --> 19:46.350
没问题吧

19:46.350 --> 19:47.350
这里的半透明

19:47.350 --> 19:49.350
好像有点太过了

19:49.350 --> 19:50.350
0.2吧

19:50.350 --> 19:51.350
0.2

19:51.350 --> 19:53.350
差不多了

19:53.350 --> 19:55.350
好 接下来蒙城有了

19:55.350 --> 19:56.350
对吧 蒙城有了

19:56.350 --> 19:57.350
一个半透明的东西有了

19:57.350 --> 19:59.350
那么是中间这一块

19:59.350 --> 20:00.350
中间这一块

20:00.350 --> 20:02.350
中间这一块的话

20:02.350 --> 20:03.350
我们

20:03.350 --> 20:05.350
是不是一个div 对吧

20:05.350 --> 20:06.350
一个div 中间的div

20:06.350 --> 20:08.350
好 我们这里再写个函数

20:08.350 --> 20:09.350
放个型

20:09.350 --> 20:10.350
init

20:10.350 --> 20:11.350
center

20:11.350 --> 20:12.350
div

20:12.350 --> 20:14.350
初始化中间这个div

20:14.350 --> 20:15.350
是不是一样的速度

20:15.350 --> 20:18.350
初始化中间的div

20:18.350 --> 20:19.350
有人说

20:19.350 --> 20:20.350
为什么我不把这些div

20:20.350 --> 20:21.350
直接写到页面上

20:21.350 --> 20:22.350
为什么呢

20:22.350 --> 20:23.350
因为我做的是插件

20:23.350 --> 20:24.350
如果你不做插件的话

20:24.350 --> 20:25.350
就在这里

20:25.350 --> 20:26.350
把功能干实现的话

20:26.350 --> 20:27.350
那就OK

20:27.350 --> 20:28.350
写上去就没事了

20:28.350 --> 20:29.350
但是我做的是插件

20:29.350 --> 20:31.350
因此我希望这些东西

20:31.350 --> 20:33.350
要考虑到意义用性

20:33.350 --> 20:34.350
就是用的时候

20:34.350 --> 20:35.350
最简单

20:35.350 --> 20:36.350
我只要一调用这个

20:36.350 --> 20:37.350
太打开了

20:37.350 --> 20:39.350
太打开这个对话框了

20:39.350 --> 20:40.350
所以说我这里

20:40.350 --> 20:41.350
要考虑到这么一个问题

20:41.350 --> 20:42.350
要考虑到这么一个问题

20:42.350 --> 20:44.350
因此我这里

20:44.350 --> 20:46.350
需要就是

20:48.350 --> 20:50.350
用这种方式

20:50.350 --> 20:51.350
需要用这种方式来进行处理

20:51.350 --> 20:53.350
用介石来创建

20:53.350 --> 20:56.350
初始化中间的div

20:56.350 --> 20:58.350
初始化中间的div

20:58.350 --> 21:00.350
那么做什么事情呢

21:00.350 --> 21:01.350
初始化中间的div

21:01.350 --> 21:02.350
就是创建一个div

21:02.350 --> 21:04.350
然后里边给大家加一些元素 对吧

21:04.350 --> 21:06.350
咱们来创建一个div

21:06.350 --> 21:07.350
document

21:07.350 --> 21:08.350
还是一样的 对吧

21:08.350 --> 21:09.350
一样的模式

21:09.350 --> 21:10.350
我们这里

21:10.350 --> 21:14.430
给它写一个div

21:14.430 --> 21:15.430
div是什么

21:15.430 --> 21:17.430
center

21:17.430 --> 21:19.430
它是中间的div

21:19.430 --> 21:21.430
中间的容器

21:21.430 --> 21:22.430
判断一下

21:22.430 --> 21:25.430
如果这个divcenter没有纸

21:25.430 --> 21:26.430
没有纸

21:26.430 --> 21:27.430
那么没有纸的话

21:27.430 --> 21:28.430
给它创建一个

21:28.430 --> 21:30.430
创建一个divcenter

21:30.430 --> 21:32.430
等于 document

21:32.430 --> 21:34.430
quase element

21:34.430 --> 21:35.430
div

21:35.430 --> 21:36.430
创建一个

21:36.430 --> 21:38.430
然后给它设置一些样式

21:38.430 --> 21:40.430
它要在整个盟城里边居中

21:40.430 --> 21:42.430
那么你肯定要把它加到盟城里边

21:42.430 --> 21:44.430
所以到时候divmode

21:44.430 --> 21:45.430
跑不了的

21:45.430 --> 21:47.430
append child

21:47.430 --> 21:48.430
divcenter

21:48.430 --> 21:49.430
要把它加进去

21:49.430 --> 21:51.430
然后它在盟城里边居中

21:51.430 --> 21:52.430
是不是得绝对定位 对吧

21:52.430 --> 21:53.430
绝对定位

21:53.430 --> 21:54.430
divcenter

21:54.430 --> 21:56.430
这些是

21:56.430 --> 21:58.430
pration

21:58.430 --> 22:01.430
把它设置为absolute

22:01.430 --> 22:02.430
设置为绝对定位

22:02.430 --> 22:04.430
然后divcenter

22:05.430 --> 22:07.430
以后你们学到CSS3

22:07.430 --> 22:09.430
你可以不定宽高也能居中

22:09.430 --> 22:10.430
但是现在没办法

22:10.430 --> 22:12.430
得定一个宽高

22:12.430 --> 22:14.430
好 宽高的话

22:14.430 --> 22:15.430
这一块 对吧

22:15.430 --> 22:16.430
宽高的话 这一块

22:16.430 --> 22:17.430
我们大概量一下

22:17.430 --> 22:19.430
就260×160

22:19.430 --> 22:21.430
260×160

22:21.430 --> 22:23.430
宽度

22:23.430 --> 22:24.430
这里写错了 是吧

22:24.430 --> 22:26.430
宽度

22:26.430 --> 22:28.430
260

22:28.430 --> 22:30.430
然后divcenter

22:30.430 --> 22:31.430
style

22:31.430 --> 22:32.430
高度

22:33.430 --> 22:35.430
160

22:36.430 --> 22:37.430
好了

22:37.430 --> 22:38.430
宽高设置好了

22:38.430 --> 22:40.430
然后它有个背景颜色 对吧

22:40.430 --> 22:41.430
有个背景颜色

22:41.430 --> 22:42.430
背景颜色的话

22:42.430 --> 22:43.430
整体上

22:43.430 --> 22:44.430
我们让它是白色

22:44.430 --> 22:45.430
整体上是白色

22:45.430 --> 22:47.430
不然它背景颜色是透明的

22:47.430 --> 22:48.430
这样子不太好

22:48.430 --> 22:49.430
因为后边

22:49.430 --> 22:51.430
本来它的复原处就有个背景颜色

22:51.430 --> 22:53.430
所以说设置一下它的背景颜色

22:53.430 --> 22:55.430
background 为白色

22:55.430 --> 22:57.430
设置好

22:57.430 --> 22:58.430
保存 看一下

22:58.430 --> 23:00.430
点击

23:00.430 --> 23:03.430
myplugin is not defined

23:03.430 --> 23:05.430
它说myplugin现在也包错了

23:05.430 --> 23:07.430
看一下哪里出了问题

23:07.430 --> 23:09.430
unuspected 有语法错误

23:09.430 --> 23:10.430
有语法错误

23:10.430 --> 23:11.430
哪个地方有语法错误

23:11.430 --> 23:13.430
openconfer

23:13.430 --> 23:14.430
这里写的都好 对吧

23:14.430 --> 23:17.430
这里写的都好 应该是分号结束

23:17.430 --> 23:18.430
点击

23:18.430 --> 23:19.430
咱们来看一下

23:19.430 --> 23:21.430
看一下我们的div

23:21.430 --> 23:22.430
全部存在的

23:22.430 --> 23:24.430
我现在还没运行这个还说

23:24.430 --> 23:28.430
initcenterdiv

23:28.430 --> 23:29.430
保存 再来

23:29.430 --> 23:31.430
这个div出来了

23:31.430 --> 23:32.430
我这里放大了

23:32.430 --> 23:34.430
没放大的话就这样子

23:34.430 --> 23:36.430
让它居中

23:36.430 --> 23:37.430
让它居中

23:37.430 --> 23:38.430
怎么居中呢

23:38.430 --> 23:39.430
让它居中

23:39.430 --> 23:42.430
divcenter

23:42.430 --> 23:45.430
然后这里写上style

23:45.430 --> 23:47.430
什么left

23:47.430 --> 23:49.430
等于divcenter

23:49.430 --> 23:50.430
style

23:50.430 --> 23:52.430
什么right

23:52.430 --> 23:55.430
等于divcenter

23:55.430 --> 23:57.430
就这几个是一样的

23:57.430 --> 23:58.430
style

23:59.430 --> 24:02.430
等于divcenter

24:02.430 --> 24:04.430
style

24:04.430 --> 24:05.430
button

24:05.430 --> 24:07.430
把全部设为0

24:07.430 --> 24:09.430
然后把divcenter

24:09.430 --> 24:10.430
它的margin

24:10.430 --> 24:11.430
设为什么

24:11.430 --> 24:12.430
out to

24:12.430 --> 24:13.430
你定了宽高

24:13.430 --> 24:14.430
然后再把margin设为out to

24:14.430 --> 24:15.430
上下左右全部设为0

24:15.430 --> 24:16.430
或者50%

24:16.430 --> 24:18.430
那么它自然就居中了

24:18.430 --> 24:20.430
怎么样 居中了

24:20.430 --> 24:21.430
没问题吧

24:21.430 --> 24:22.430
好 这一块就做出来了

24:22.430 --> 24:24.430
对吧 这一块就做出来了

24:24.430 --> 24:25.430
divcenter就做出来了

24:25.430 --> 24:26.430
好 没完

24:26.430 --> 24:27.430
没完

24:27.430 --> 24:28.430
因为它里边是不是还有内容

24:28.430 --> 24:29.430
对不对

24:29.430 --> 24:31.430
还有divcenter里边是不是还有内容

24:31.430 --> 24:32.430
好

24:32.430 --> 24:34.430
divcenter里边是不是得分成三块

24:34.430 --> 24:36.430
现在我们得用js来构建

24:36.430 --> 24:37.430
得用js来构建

24:37.430 --> 24:39.430
一个是这一块对吧

24:39.430 --> 24:41.430
然后一个是这一块对不对

24:41.430 --> 24:42.430
然后一个是下面的按钮

24:42.430 --> 24:43.430
分成三块的对吧

24:43.430 --> 24:45.430
里边还有三个div

24:45.430 --> 24:46.430
还有三个div

24:46.430 --> 24:47.430
因此我这里呢

24:47.430 --> 24:49.430
干脆用一个函数

24:49.430 --> 24:50.430
干脆用一个函数

24:50.430 --> 24:52.430
来出实化这个div的内部

24:52.430 --> 24:54.430
你看这件事情就变得

24:54.430 --> 24:55.430
复杂和麻烦了

24:55.430 --> 24:57.430
如果你直接用HMMC

24:57.430 --> 24:58.430
这些写的话当然好

24:58.430 --> 25:00.430
但是以后用起来就麻烦

25:00.430 --> 25:02.430
那为什么我们要给自己

25:02.430 --> 25:03.430
找这些麻烦呢

25:03.430 --> 25:04.430
是这样子

25:04.430 --> 25:06.430
你要么就是招一件东西的时候

25:06.430 --> 25:08.430
招起来麻烦 用着轻松

25:08.430 --> 25:10.430
要么就是招一件东西

25:10.430 --> 25:11.430
招着轻松 用着麻烦

25:11.430 --> 25:12.430
你自己选

25:12.430 --> 25:13.430
你自己选

25:13.430 --> 25:15.430
总之这些事情得做

25:15.430 --> 25:17.430
如果你希望用着轻松的话

25:17.430 --> 25:19.430
如果你是用的场景很多

25:19.430 --> 25:20.430
比方说我招一个东西

25:20.430 --> 25:22.430
可能后面要用几千几万次

25:22.430 --> 25:24.430
好 那么这个时候你

25:24.430 --> 25:26.430
招着招的时候你麻烦一点

25:26.430 --> 25:27.430
没关系

25:27.430 --> 25:28.430
以后用着就轻松了

25:28.430 --> 25:30.430
因为用的 后面用的次数

25:30.430 --> 25:33.430
肯定比这个做的次数要多得多

25:33.430 --> 25:35.430
做只需要一次 对吧

25:35.430 --> 25:37.430
那如果你可能做的一个东西

25:37.430 --> 25:38.430
可能只用一两次

25:38.430 --> 25:39.430
那就没必要去做了

25:39.430 --> 25:41.430
但是我们现在在学习

25:41.430 --> 25:43.430
你的学会怎么去做

25:43.430 --> 25:45.430
Inlet DiV Center

25:45.430 --> 25:47.430
内部 content

25:47.430 --> 25:50.430
来出实化它的内部

25:50.430 --> 25:52.430
我们调用这个函数来搞定

25:52.430 --> 25:53.430
调用这个函数来搞定

25:53.430 --> 25:56.430
Inlet DiV Center

25:56.430 --> 25:57.430
内部

25:57.430 --> 26:01.430
出实化中间 DiV的内部东西

26:01.430 --> 26:07.430
出实化 DiV内部的东西

26:07.430 --> 26:09.430
好 怎么来出实化呢

26:09.430 --> 26:10.430
出实化内部的东西

26:10.430 --> 26:11.430
出实化内部的东西

26:11.430 --> 26:12.430
是不是要创建了

26:12.430 --> 26:14.430
对吧 又要创建元素了

26:14.430 --> 26:15.430
又要创建元素了

26:15.430 --> 26:16.430
然后这个内部里边

26:16.430 --> 26:18.430
不是有三个 DiV吗

26:18.430 --> 26:19.430
对吧

26:19.430 --> 26:20.430
一次创建夹进去

26:20.430 --> 26:22.430
一次创建夹进去

26:23.430 --> 26:25.430
那么这里我们来创建一下

26:25.430 --> 26:27.430
一个 DiV document

26:27.430 --> 26:29.430
第一个打开注释

26:29.430 --> 26:33.430
创建内部的

26:33.430 --> 26:37.430
第一个标题 DiV

26:37.430 --> 26:41.430
创建一个 DiV document

26:41.430 --> 26:42.430
create elements

26:42.430 --> 26:43.430
创建一个 DiV

26:43.430 --> 26:45.430
然后最终肯定是要把它夹进去

26:45.430 --> 26:46.430
DiV mode

26:46.430 --> 26:47.430
Append Child

26:47.430 --> 26:49.430
把这个 DiV夹进去

26:49.430 --> 26:51.430
这个 DiV里边有哪些东西呢

26:51.430 --> 26:52.430
这个 DiV里边

26:52.430 --> 26:53.430
我们来看一下

26:53.430 --> 26:55.430
先看一下结构有没有创建出来

26:55.430 --> 26:56.430
先看结构

26:56.430 --> 26:58.430
好 找到这个 DiV

26:58.430 --> 27:00.430
这个 DiV里边

27:00.430 --> 27:01.430
我们可以看到

27:01.430 --> 27:03.430
它里边看

27:03.430 --> 27:04.430
这一部分

27:04.430 --> 27:05.430
这里写错了

27:05.430 --> 27:07.430
DiV应该是

27:07.430 --> 27:09.430
center

27:09.430 --> 27:11.430
再来点击

27:11.430 --> 27:13.430
它内部

27:13.430 --> 27:15.430
看到了

27:15.430 --> 27:16.430
对吧 没问题吧

27:16.430 --> 27:18.430
这是我们刚刚创建的

27:18.430 --> 27:19.430
好 这个 DiV

27:19.430 --> 27:20.430
给它一个高度

27:20.430 --> 27:22.430
它会有一个高度的

27:22.430 --> 27:24.430
标题来的

27:24.430 --> 27:25.430
这个高度

27:25.430 --> 27:27.430
给它设为40个相处

27:27.430 --> 27:28.430
宽度就成满

27:28.430 --> 27:30.430
高度给它设为40个相处

27:30.430 --> 27:32.430
DiV style

27:32.430 --> 27:34.430
高度

27:34.430 --> 27:36.430
40个相处

27:36.430 --> 27:37.430
有个背景颜色

27:37.430 --> 27:38.430
DiV style

27:38.430 --> 27:40.430
Background

27:40.430 --> 27:41.430
有个背景颜色

27:41.430 --> 27:43.430
背景颜色我们来看一下

27:44.430 --> 27:46.430
看一下它的背景颜色是多少

27:47.430 --> 27:51.380
背景颜色为这个

27:51.380 --> 27:52.380
不对 它是Border

27:52.380 --> 27:54.380
背景颜色

27:54.380 --> 27:56.380
我们看一下这一块的背景颜色

27:56.380 --> 27:57.380
在上面

27:57.380 --> 27:58.380
不对 在这

27:58.380 --> 28:00.380
背景颜色

28:00.380 --> 28:02.380
Background color

28:02.380 --> 28:03.380
这个

28:03.380 --> 28:04.380
248

28:04.380 --> 28:05.380
248

28:05.380 --> 28:06.380
248

28:06.380 --> 28:07.380
行吧

28:07.380 --> 28:09.380
我这怎么这么个卡呢

28:09.380 --> 28:10.380
这里直接创建吧

28:10.380 --> 28:11.380
RGB

28:11.380 --> 28:13.380
我们自己这样子写吧

28:13.380 --> 28:14.380
这样子写

28:14.380 --> 28:15.380
直接写CCC

28:15.380 --> 28:16.380
差不多了

28:16.380 --> 28:17.380
或者是

28:18.380 --> 28:20.380
就已经接近白色了

28:20.380 --> 28:22.380
好 点击

28:22.380 --> 28:24.380
你看 背景颜色出来了

28:24.380 --> 28:25.380
背景颜色出来了

28:25.380 --> 28:27.380
好 继续

28:27.380 --> 28:28.380
然后这个DiV里面

28:28.380 --> 28:29.380
是不是有分成两块

28:29.380 --> 28:30.380
左标一个文字

28:30.380 --> 28:31.380
右标一个文字

28:31.380 --> 28:32.380
对吧

28:32.380 --> 28:33.380
左标一个文字

28:33.380 --> 28:34.380
右标一个文字

28:34.380 --> 28:35.380
右标其实是个图标

28:35.380 --> 28:37.380
其实是一个图标

28:37.380 --> 28:38.380
图标这里

28:38.380 --> 28:39.380
我没有这个图标

28:39.380 --> 28:40.380
没有这个图标

28:40.380 --> 28:42.380
我们这里以后就下载一个

28:42.380 --> 28:43.380
这个无所谓

28:43.380 --> 28:44.380
这个简单

28:44.380 --> 28:45.380
咱们把这个

28:45.380 --> 28:46.380
加进去

28:46.380 --> 28:48.380
这里边又有两个元素

28:48.380 --> 28:49.380
我们这里直接设置

28:49.380 --> 28:51.380
直接设置它的内文本

28:51.380 --> 28:53.380
InnerItem

28:53.380 --> 28:54.380
InnerItem

28:54.380 --> 28:56.380
设置它的内文本

28:56.380 --> 28:57.380
内文本是啥呢

28:57.380 --> 28:58.380
我们就直接写了

28:58.380 --> 29:00.380
这里边有一个

29:00.380 --> 29:02.380
左边有一个什么

29:02.380 --> 29:03.380
有一个Span元素

29:03.380 --> 29:05.380
左边有一个Span元素

29:05.380 --> 29:07.380
右边也有一个Span元素

29:07.380 --> 29:09.380
左右两边都有一个Span元素

29:09.380 --> 29:11.380
左边这个Span元素

29:11.380 --> 29:13.380
我们给它一个Style

29:13.380 --> 29:14.380
给它一个Style

29:14.380 --> 29:16.380
样式是

29:16.380 --> 29:17.380
左浮动

29:17.380 --> 29:18.380
Float

29:18.380 --> 29:19.380
Nap

29:19.380 --> 29:20.380
左浮动

29:20.380 --> 29:22.380
然后里边写上一个文字

29:22.380 --> 29:23.380
文字是啥

29:23.380 --> 29:25.380
信息

29:25.380 --> 29:26.380
我们先写

29:26.380 --> 29:27.380
后边再说

29:27.380 --> 29:30.380
其实这些文字都应该可以配置的

29:30.380 --> 29:31.380
Float

29:31.380 --> 29:32.380
Ride

29:32.380 --> 29:34.380
这里有一个图标

29:34.380 --> 29:36.380
图标的话

29:36.380 --> 29:38.380
我们就用一个1米几放这

29:38.380 --> 29:40.380
用一个1米几放这

29:40.380 --> 29:42.380
用个图片

29:42.380 --> 29:43.380
其实也可以用自己图标

29:43.380 --> 29:45.380
我之前的atmos cc是讲过自己图标

29:45.380 --> 29:47.380
但是我这里担心有些图标没见过

29:47.380 --> 29:49.380
这里我们就用一个图片

29:49.380 --> 29:51.380
图片的话我们这里

29:51.380 --> 29:52.380
就找一张图片

29:52.380 --> 29:53.380
在icon放着

29:53.380 --> 29:55.380
这上面可以找各种各样的图标

29:55.380 --> 29:57.380
在上面找一张图片

29:57.380 --> 29:59.380
这里我们找到一个

29:59.380 --> 30:01.380
关闭

30:01.380 --> 30:02.380
搜索一下

30:02.380 --> 30:04.380
这有很多的关闭图片

30:04.380 --> 30:06.380
比方说我们这里用一个关闭

30:06.380 --> 30:08.380
它这里是黑色

30:08.380 --> 30:09.380
黑色

30:09.380 --> 30:11.380
下载一个

30:12.380 --> 30:13.380
行了 又下载这个吧

30:13.380 --> 30:14.380
这个图片

30:14.380 --> 30:15.380
不需要这么大

30:15.380 --> 30:16.380
448

30:16.380 --> 30:17.380
448差不多了

30:17.380 --> 30:18.380
差不多了

30:18.380 --> 30:20.380
然后我们这里下载一个

30:20.380 --> 30:21.380
png

30:22.380 --> 30:23.380
放到桌面关闭

30:23.380 --> 30:24.380
这个图片

30:24.380 --> 30:25.380
我们到时候怎么用的问题是

30:25.380 --> 30:27.380
这个图片又不在我们工程目录里面

30:27.380 --> 30:28.380
你不能要求

30:28.380 --> 30:29.380
你要用这个插件

30:29.380 --> 30:30.380
你先把图片加进去

30:30.380 --> 30:31.380
那不太先使对吧

30:31.380 --> 30:32.380
也不太先使

30:32.380 --> 30:34.380
所以说这个东西该怎么用的

30:34.380 --> 30:35.380
我们可以把这个图片

30:35.380 --> 30:37.380
转成bass64的格式

30:38.380 --> 30:40.380
我们之前在atmos cc是讲过

30:40.380 --> 30:42.380
就图片了它的格式

30:42.380 --> 30:44.380
它的这个src路径

30:44.380 --> 30:46.380
它不一定可以链接文件

30:46.380 --> 30:47.380
还可以链接一个数据

30:47.380 --> 30:48.380
就是直接把图片数据写在

30:48.380 --> 30:50.380
直接把你的图片数据写在

30:50.380 --> 30:52.380
我们这里往上搜一下

30:52.380 --> 30:53.380
bass64

30:53.380 --> 30:54.380
64

30:54.380 --> 30:55.380
转换

30:56.380 --> 30:57.380
图片

30:58.380 --> 31:00.380
bass64转换

31:00.380 --> 31:01.380
这里有一个工具

31:01.380 --> 31:02.380
栽线工具

31:02.380 --> 31:04.380
咱们来处理一下

31:06.380 --> 31:07.380
开始做图

31:08.380 --> 31:09.380
不考虑啥

31:10.380 --> 31:12.380
真的是广告我的天

31:12.380 --> 31:13.380
真有恶心

31:14.380 --> 31:15.380
这里

31:15.380 --> 31:17.380
我们这里选择一个bass64的图片

31:17.380 --> 31:19.380
选择一个就把图片拿过来

31:19.380 --> 31:20.380
拿过来

31:20.380 --> 31:21.380
然后生成

31:22.380 --> 31:23.380
生成出来了

31:23.380 --> 31:24.380
我们把复制就行了

31:24.380 --> 31:25.380
复制一下

31:26.380 --> 31:27.380
复制一下放这

31:28.380 --> 31:30.380
那么图片的bass64格式就出来了

31:31.380 --> 31:32.380
咱们来看一下

31:34.880 --> 31:36.880
你看图片是不是出来了

31:36.880 --> 31:38.880
接下来调样式

31:38.880 --> 31:39.880
这个图片肯定有个尺寸

31:39.880 --> 31:41.880
尺寸的话大概就是

31:42.880 --> 31:43.880
18×18

31:43.880 --> 31:44.880
图片的尺寸

31:44.880 --> 31:45.880
给它设置一下

31:46.880 --> 31:47.880
style

31:48.880 --> 31:49.880
位置

31:50.880 --> 31:51.880
18

31:51.880 --> 31:52.880
高度了

31:52.880 --> 31:53.880
18个相处

31:53.880 --> 31:54.880
保存看一下

31:55.880 --> 31:56.880
点击

31:57.880 --> 31:58.880
尺寸差不多了

31:58.880 --> 31:59.880
尺寸差不多了

31:59.880 --> 32:00.880
然后鼠标样式

32:00.880 --> 32:02.880
鼠标样式我们这里就在这里设置吧

32:02.880 --> 32:03.880
cursor

32:03.880 --> 32:04.880
pointer

32:04.880 --> 32:05.880
鼠标样式

32:07.880 --> 32:08.880
没问题了

32:08.880 --> 32:09.880
没问题了

32:09.880 --> 32:11.880
然后左右panning和航高

32:11.880 --> 32:12.880
左右panning

32:12.880 --> 32:14.880
或者航高就算了

32:14.880 --> 32:15.880
左右panning就行了

32:15.880 --> 32:17.880
左右panning我们给它设置

32:17.880 --> 32:18.880
给di basin

32:18.880 --> 32:20.880
就是给这个title标题的设置

32:20.880 --> 32:21.880
是它的样式

32:21.880 --> 32:22.880
di style

32:22.880 --> 32:24.880
然后panning

32:24.880 --> 32:26.880
上下来为0

32:26.880 --> 32:27.880
上下来为

32:27.880 --> 32:29.880
上下设置一个吧

32:29.880 --> 32:30.880
要不然设置一个

32:30.880 --> 32:32.880
上下的话为

32:32.880 --> 32:34.880
10个相处

32:34.880 --> 32:35.880
10个相处

32:35.880 --> 32:36.880
上下为0

32:36.880 --> 32:37.880
左右为20

32:37.880 --> 32:39.880
左右为20个相处

32:39.880 --> 32:40.880
看一下吧

32:40.880 --> 32:41.880
打开

32:41.880 --> 32:43.880
左右的panning

32:43.880 --> 32:44.880
差不多了

32:44.880 --> 32:45.880
差不多有这么个意思的

32:45.880 --> 32:46.880
然后这两个

32:46.880 --> 32:48.880
这两个都设置个margin top

32:48.880 --> 32:50.880
margin top

32:51.880 --> 32:52.880
margin top

32:52.880 --> 32:54.880
那么或者是设置这个的

32:54.880 --> 32:55.880
上内边距

32:55.880 --> 32:56.880
上内边距

32:56.880 --> 32:58.880
上左右

32:58.880 --> 33:00.880
下边为0

33:00.880 --> 33:01.880
上边为

33:01.880 --> 33:03.880
20个相处

33:03.880 --> 33:04.880
看一下

33:04.880 --> 33:05.880
这样子

33:05.880 --> 33:06.880
这样子的整体高度变高了

33:06.880 --> 33:07.880
整体高度变高了

33:07.880 --> 33:08.880
因为多了panning了

33:08.880 --> 33:09.880
那我们给它设置一下

33:09.880 --> 33:10.880
di style

33:10.880 --> 33:11.880
设置一下

33:11.880 --> 33:13.880
它的box sizing

33:13.880 --> 33:14.880
为什么

33:14.880 --> 33:15.880
border box

33:15.880 --> 33:17.880
之前说过很多次了

33:17.880 --> 33:19.880
看一下

33:19.880 --> 33:20.880
20有多了

33:20.880 --> 33:22.880
10个相处呢

33:22.880 --> 33:24.880
10个相处差不多了

33:24.880 --> 33:25.880
差不多了

33:25.880 --> 33:26.880
好吧

33:26.880 --> 33:27.880
那这里是不是做完了

33:27.880 --> 33:28.880
对吧

33:28.880 --> 33:29.880
就做完了

33:29.880 --> 33:30.880
这一回就做完了

33:30.880 --> 33:31.880
当然也可以统一设置一下

33:31.880 --> 33:32.880
自己大小

33:32.880 --> 33:33.880
统一设置一下

33:33.880 --> 33:34.880
di

33:34.880 --> 33:35.880
就是在外面设置

33:35.880 --> 33:36.880
在这里设置

33:36.880 --> 33:37.880
给di v center

33:37.880 --> 33:38.880
统一这个区域

33:38.880 --> 33:39.880
设置一下自己大小

33:39.880 --> 33:40.880
style

33:40.880 --> 33:41.880
found size

33:41.880 --> 33:43.880
设置为14个相处

33:45.880 --> 33:46.880
打开

33:46.880 --> 33:47.880
OK 差不多了

33:47.880 --> 33:48.880
对吧

33:48.880 --> 33:49.880
好

33:49.880 --> 33:50.880
然后第1个di v完成

33:50.880 --> 33:52.880
接下来我们来做第2个di v

33:52.880 --> 33:54.880
第2个di v

33:54.880 --> 33:58.200
好 这第1个

33:58.200 --> 34:00.200
第2个

34:00.200 --> 34:01.200
创建什么di v呢

34:01.200 --> 34:03.200
创建

34:03.200 --> 34:04.200
创建

34:04.200 --> 34:05.200
内容di v

34:05.200 --> 34:06.200
内容di v

34:06.200 --> 34:07.200
就是提示文本di v

34:07.200 --> 34:10.200
创建提示文本di v

34:10.200 --> 34:12.200
这个di v里面

34:12.200 --> 34:13.200
就直接写文字就完成了

34:13.200 --> 34:14.200
直接写文字就完成了

34:14.200 --> 34:15.200
来 创建一个

34:15.200 --> 34:17.200
把这个复制过来

34:17.200 --> 34:19.200
直接写文本就完成了

34:19.200 --> 34:21.200
这里创建个di v

34:21.200 --> 34:22.200
高度呢

34:22.200 --> 34:23.200
高度我们来

34:23.200 --> 34:24.200
要精确计算一下

34:24.200 --> 34:26.200
高度的话

34:26.200 --> 34:28.200
我们之前这里用了

34:28.200 --> 34:29.200
40的高度对吧

34:29.200 --> 34:30.200
总高度160

34:30.200 --> 34:31.200
高度160-40

34:31.200 --> 34:32.200
就是120

34:32.200 --> 34:34.200
120还要给下面留一点

34:34.200 --> 34:35.200
给下面留一点

34:35.200 --> 34:36.200
下面留个

34:36.200 --> 34:38.200
留个50嘛

34:38.200 --> 34:39.200
下面留个50

34:39.200 --> 34:40.200
120-50

34:40.200 --> 34:41.200
70

34:41.200 --> 34:42.200
高度为70

34:42.200 --> 34:43.200
高度为70个相处

34:43.200 --> 34:44.200
好

34:44.200 --> 34:45.200
然后呢

34:45.200 --> 34:46.200
这里边写上背景颜色

34:46.200 --> 34:47.200
背景颜色不用写了

34:47.200 --> 34:48.200
不用写了

34:48.200 --> 34:49.200
然后呢

34:49.200 --> 34:50.200
写上文字

34:50.200 --> 34:51.200
文字

34:51.200 --> 34:52.200
文字

34:52.200 --> 34:53.200
文字

34:53.200 --> 34:54.200
这里

34:54.200 --> 34:55.200
这个加上嘛

34:55.200 --> 34:56.200
因为以后我还要設置平底

34:56.200 --> 34:57.200
平底的话

34:57.200 --> 34:58.200
上下为10

34:58.200 --> 35:00.200
左右为20

35:01.200 --> 35:02.200
然后这里边是文字

35:02.200 --> 35:04.200
文字的话

35:04.200 --> 35:05.200
我们就这里

35:05.200 --> 35:06.200
确定三处嘛

35:06.200 --> 35:07.200
我们以后再说一些文字

35:07.200 --> 35:09.200
确定三处嘛

35:09.200 --> 35:10.200
好

35:10.200 --> 35:11.200
比方说

35:11.200 --> 35:13.200
我们把这个di v加进去

35:13.200 --> 35:14.200
加进去

35:14.200 --> 35:15.200
好再看

35:15.200 --> 35:16.200
再看效果

35:16.200 --> 35:17.200
打开

35:17.200 --> 35:18.200
所以有了

35:18.200 --> 35:19.200
文字有了

35:19.200 --> 35:20.200
对吧

35:20.200 --> 35:21.200
文字有了

35:21.200 --> 35:22.200
好像这个panning还不太够

35:22.200 --> 35:23.200
panning那上

35:23.200 --> 35:24.200
上边

35:24.200 --> 35:25.200
上下都20嘛

35:25.200 --> 35:27.200
上下左右都20

35:27.200 --> 35:28.200
这样子

35:28.200 --> 35:29.200
看一下

35:29.200 --> 35:30.200
差不多了

35:30.200 --> 35:31.200
好

35:31.200 --> 35:32.200
下面还在留一些空间

35:32.200 --> 35:33.200
还在留一些空间

35:33.200 --> 35:34.200
好

35:34.200 --> 35:35.200
接下来呢

35:35.200 --> 35:36.200
是下边

35:36.200 --> 35:37.200
下边有按钮

35:37.200 --> 35:38.200
对吧

35:38.200 --> 35:39.200
下边有按钮

35:39.200 --> 35:40.200
好

35:40.200 --> 35:41.200
OK

35:41.200 --> 35:42.200
我们给下边设置按钮

35:42.200 --> 35:43.200
好

35:43.200 --> 35:44.200
这里呢

35:44.200 --> 35:45.200
我们这里

35:45.200 --> 35:46.200
跑哪去了

35:46.200 --> 35:47.200
这里

35:47.200 --> 35:48.200
创建

35:48.200 --> 35:49.200
创建按钮

35:50.200 --> 35:51.200
大概做一下

35:51.200 --> 35:52.200
创建按钮

35:53.200 --> 35:54.200
di v

35:54.200 --> 35:55.200
按钮里边是不是有两个按钮

35:55.200 --> 35:56.200
对吧

35:56.200 --> 35:57.200
我们这里

35:57.200 --> 35:58.200
创建一个di v

35:58.200 --> 35:59.200
这里

35:59.200 --> 36:00.200
复制过来

36:00.200 --> 36:01.200
创建按钮

36:01.200 --> 36:02.200
好

36:02.200 --> 36:03.200
创建一个di v

36:03.200 --> 36:04.200
然后呢

36:04.200 --> 36:05.200
给他设置一个高度

36:05.200 --> 36:06.200
高度呢

36:06.200 --> 36:07.200
为50

36:07.200 --> 36:08.200
我们之前说过的

36:08.200 --> 36:09.200
对吧

36:09.200 --> 36:10.200
说过的50

36:10.200 --> 36:11.200
好

36:11.200 --> 36:12.200
然后呢

36:12.200 --> 36:13.200
再设置什么box

36:13.200 --> 36:14.200
sideboard box

36:14.200 --> 36:15.200
panning

36:15.200 --> 36:16.200
panning还需要吗

36:16.200 --> 36:17.200
我看一下按钮

36:17.200 --> 36:18.200
panning还也需要

36:18.200 --> 36:19.200
需要上下的panning

36:19.200 --> 36:20.200
和左右的panning

36:20.200 --> 36:21.200
左右的panning

36:21.200 --> 36:22.200
为20

36:22.200 --> 36:23.200
上下的panning

36:23.200 --> 36:24.200
为10

36:24.200 --> 36:25.200
对吧

36:25.200 --> 36:26.200
就为10

36:26.200 --> 36:27.200
行了

36:27.200 --> 36:28.200
button

36:29.200 --> 36:30.200
有两个按钮

36:30.200 --> 36:33.720
一个按钮

36:35.720 --> 36:36.720
两个按钮

36:36.720 --> 36:37.720
这里面的是

36:37.720 --> 36:38.720
一个是啥

36:38.720 --> 36:39.720
一个是确定

36:39.720 --> 36:40.720
确定

36:40.720 --> 36:42.720
一个是取消

36:42.720 --> 36:43.720
取消

36:43.720 --> 36:44.720
有两个按钮

36:44.720 --> 36:45.720
夹进去

36:45.720 --> 36:46.720
再看

36:46.720 --> 36:47.720
点击

36:47.720 --> 36:48.720
按钮是不是出来了

36:48.720 --> 36:49.720
对吧

36:49.720 --> 36:50.720
按钮出来了

36:50.720 --> 36:51.720
然后呢

36:51.720 --> 36:52.720
我们这里

36:52.720 --> 36:53.720
这个ps

36:53.720 --> 36:54.720
加上

36:54.720 --> 36:55.720
按钮出来了

36:55.720 --> 36:56.720
让这个按钮靠右

36:56.720 --> 36:57.720
靠右

36:57.720 --> 36:58.720
这个靠右很简单

36:58.720 --> 36:59.720
靠右的话

36:59.720 --> 37:00.720
我们直接写什么

37:00.720 --> 37:01.720
因为按钮是

37:01.720 --> 37:02.720
行类元素

37:02.720 --> 37:03.720
所以说靠右的话

37:03.720 --> 37:04.720
写什么

37:04.720 --> 37:07.720
写

37:07.720 --> 37:08.720
为什么

37:08.720 --> 37:09.720
靠右

37:09.720 --> 37:10.720
你看

37:10.720 --> 37:11.720
全是靠介石生成

37:11.720 --> 37:12.720
靠右

37:13.720 --> 37:14.720
好

37:14.720 --> 37:15.720
一样子就懒得弄了

37:15.720 --> 37:16.720
就懒得弄了

37:16.720 --> 37:17.720
差不多就行了

37:17.720 --> 37:18.720
一样子

37:18.720 --> 37:19.720
我以后再说怎么弄

37:20.720 --> 37:21.720
好

37:21.720 --> 37:22.720
接下来就写到这了

37:22.720 --> 37:23.720
写到这了

37:23.720 --> 37:24.720
那么接下来

37:24.720 --> 37:26.720
我们要做的事情

37:26.720 --> 37:28.720
一看这个文字

37:28.720 --> 37:30.720
这个文字一定是信息吗

37:30.720 --> 37:31.720
不一定吧

37:31.720 --> 37:33.720
一定是确认删除吗

37:33.720 --> 37:34.720
这个信息

37:34.720 --> 37:36.720
这个文字不一定吧

37:36.720 --> 37:37.720
好

37:37.720 --> 37:38.720
这个按钮的文字一定是

37:38.720 --> 37:40.720
确定和取消吗

37:40.720 --> 37:41.720
不一定吧

37:41.720 --> 37:43.720
按钮的文本不一定是这个吧

37:43.720 --> 37:45.720
按钮的央视

37:45.720 --> 37:47.720
一定是没有央视吗

37:47.720 --> 37:48.720
一定是

37:48.720 --> 37:49.720
有没有可能有别的央视呢

37:49.720 --> 37:50.720
有没有可能呢

37:50.720 --> 37:51.720
也有可能

37:51.720 --> 37:52.720
所以说这些东西

37:52.720 --> 37:54.720
需要可能需要用户配置

37:54.720 --> 37:56.720
它每一次打开这一块

37:56.720 --> 37:57.720
它可能配置都不一样

37:57.720 --> 37:59.720
可能配置都不一样

37:59.720 --> 38:00.720
明白这个意思吧

38:00.720 --> 38:02.720
它是需要用户配置的

38:02.720 --> 38:03.720
也就按钮的文本

38:03.720 --> 38:04.720
这里的文本

38:04.720 --> 38:06.720
按钮的央视

38:06.720 --> 38:08.720
比如说我们能配置哪些东西

38:08.720 --> 38:09.720
我这里记录一下

38:09.720 --> 38:12.720
按钮文本和央视

38:12.720 --> 38:14.720
按钮的文本和央视

38:14.720 --> 38:15.720
需要理配置

38:15.720 --> 38:17.720
比如说按钮的内央视

38:17.720 --> 38:19.720
央视这里指的内央视

38:20.720 --> 38:21.720
需要理配置

38:21.720 --> 38:22.720
好

38:22.720 --> 38:23.720
另外还有什么配置

38:23.720 --> 38:25.720
提示文本需要配置

38:25.720 --> 38:27.720
对于打开这个窗口的时候

38:27.720 --> 38:28.720
你需要配置提示文本

38:28.720 --> 38:31.720
还有什么提示标题需要配置

38:31.720 --> 38:32.720
对吧

38:32.720 --> 38:33.720
这些东西都需要配置

38:33.720 --> 38:34.720
有很多东西都要配置

38:34.720 --> 38:35.720
那么我们以后

38:35.720 --> 38:36.720
学到更多的知识过后

38:36.720 --> 38:38.720
我们还会加重更多的配置

38:38.720 --> 38:40.720
然后我们在进阶部分

38:40.720 --> 38:42.720
可以使用一些特别的技巧

38:42.720 --> 38:43.720
你如果不配置的话

38:43.720 --> 38:44.720
我给你默认值

38:44.720 --> 38:45.720
如果你要配置的话

38:45.720 --> 38:46.720
我就使用你的配置

38:46.720 --> 38:47.720
那现在我们先不管

38:47.720 --> 38:50.720
先假设这些东西都要配置

38:50.720 --> 38:52.720
假设这些东西都要配置

38:52.720 --> 38:53.720
好

38:53.720 --> 38:54.720
那么现在怎么来做呢

38:54.720 --> 38:56.720
这个事情

38:56.720 --> 38:57.720
这些东西全是要配置的

38:57.720 --> 38:58.720
对吧

38:58.720 --> 38:59.720
全是要配置的

38:59.720 --> 39:01.720
因此这一课

39:01.720 --> 39:02.720
我们这样子来处理

39:02.720 --> 39:03.720
这样子来处理

39:04.720 --> 39:05.720
你看这个文字

39:05.720 --> 39:06.720
是不是要配置的

39:06.720 --> 39:07.720
那你这里能写识吗

39:07.720 --> 39:08.720
是不能写识

39:08.720 --> 39:10.720
你这里确定删除这个文字

39:10.720 --> 39:11.720
是不是不能写识

39:11.720 --> 39:12.720
对吧

39:12.720 --> 39:13.720
不能写识

39:13.720 --> 39:14.720
你咋知道它里边是啥

39:14.720 --> 39:15.720
这些东西都不能随便乱写的

39:15.720 --> 39:17.720
不能乱写的

39:17.720 --> 39:19.720
你这里的按钮能写识吗

39:19.720 --> 39:20.720
是不能写识

39:20.720 --> 39:21.720
你不能写识的

39:21.720 --> 39:22.720
对吧

39:22.720 --> 39:23.720
也就是说这里呢

39:23.720 --> 39:25.720
初始化了我只初始化这些元素

39:25.720 --> 39:27.720
然后初始化完了过后

39:27.720 --> 39:28.720
每一次打开

39:28.720 --> 39:29.720
如果你没有这个DIV

39:29.720 --> 39:31.720
我跟你创建DIV

39:31.720 --> 39:32.720
如果你有这个DIV了

39:32.720 --> 39:34.720
甭管你最后肯定有了吧

39:34.720 --> 39:35.720
对吧

39:35.720 --> 39:36.720
肯定有了

39:36.720 --> 39:37.720
然后接下来干嘛了

39:37.720 --> 39:38.720
初始化

39:38.720 --> 39:40.720
设置

39:40.720 --> 39:42.720
就是配置的内容

39:42.720 --> 39:43.720
设置配置的内容

39:43.720 --> 39:44.720
你做到哪些配置

39:44.720 --> 39:46.720
我找到DIV里边的相关元素

39:46.720 --> 39:48.720
把这些配置写进来

39:48.720 --> 39:50.720
好那么配置怎么来传定呢

39:50.720 --> 39:51.720
肯定要通过传输传递边

39:51.720 --> 39:53.720
这里不是反悔这个函数吗

39:53.720 --> 39:54.720
这个函数他要接受一个传输

39:54.720 --> 39:56.720
叫做Options就是配置

39:56.720 --> 39:58.720
我们先这里先不考虑

39:58.720 --> 40:00.720
你没有写配置的情况

40:00.720 --> 40:03.720
我这里先认为你的配置一定是写完了的

40:03.720 --> 40:05.720
我先认为你一定是写完了的

40:05.720 --> 40:07.720
不然的话我倒是算了

40:07.720 --> 40:09.720
我们还是可以考虑

40:09.720 --> 40:11.720
还是可以考虑他没有写的情况

40:11.720 --> 40:13.720
可以考虑他没有写的情况

40:13.720 --> 40:15.720
那行吧我倒是一个一个判断

40:15.720 --> 40:16.720
一个一个判断

40:16.720 --> 40:17.720
就是比较麻烦

40:17.720 --> 40:18.720
后面我们进阶部分学了过后

40:18.720 --> 40:19.720
你就知道

40:19.720 --> 40:21.720
这里有一个很简单的方式

40:21.720 --> 40:22.720
来处理这个情况

40:22.720 --> 40:23.720
现在还不知道

40:23.720 --> 40:24.720
那没关系我们现在

40:24.720 --> 40:26.720
考虑吧考虑进去

40:26.720 --> 40:28.720
我这里做的这么一件事

40:28.720 --> 40:29.720
如果你这个地方

40:29.720 --> 40:30.720
你没有给我传配置

40:30.720 --> 40:31.720
啥都没传

40:31.720 --> 40:32.720
配置啥都没传

40:32.720 --> 40:33.720
那我这个配置呢

40:33.720 --> 40:37.720
初始化我有一个空对象

40:37.720 --> 40:41.720
默认为一个空对象

40:41.720 --> 40:43.720
为什么我要用对象来表示配置呢

40:43.720 --> 40:44.720
因为只有对象里面

40:44.720 --> 40:46.720
才可以加各种各样的内容

40:46.720 --> 40:47.720
那比方说

40:47.720 --> 40:48.720
到时候我调用的时候

40:48.720 --> 40:49.720
可以这样调用看着

40:49.720 --> 40:51.720
我可以这样的写

40:51.720 --> 40:52.720
title表示标题

40:52.720 --> 40:54.720
标题的话就是

40:54.720 --> 40:56.720
删除提示

40:56.720 --> 40:58.720
删除的提示

40:58.720 --> 41:00.720
就是标题

41:00.720 --> 41:02.720
内容content表示

41:02.720 --> 41:04.720
配置的就是

41:04.720 --> 41:07.720
请问真的要删除吗

41:07.720 --> 41:08.720
对吧我把这些配置

41:08.720 --> 41:09.720
全部告诉你

41:09.720 --> 41:11.720
然后还可以什么按钮文本

41:11.720 --> 41:12.720
按钮有两个

41:12.720 --> 41:13.720
一个是确定的文本

41:13.720 --> 41:15.720
一个是取消的文本

41:15.720 --> 41:16.720
confirm

41:16.720 --> 41:17.720
confirm就确定

41:17.720 --> 41:19.720
确定的文本

41:19.720 --> 41:20.720
confirm text

41:20.720 --> 41:23.720
就是ok

41:23.720 --> 41:25.720
然后取消的文本

41:25.720 --> 41:27.720
cancel text

41:27.720 --> 41:28.720
为什么

41:28.720 --> 41:30.720
cancel

41:30.720 --> 41:31.720
比方说

41:31.720 --> 41:32.720
这都可以配置的

41:32.720 --> 41:33.720
比方说

41:33.720 --> 41:35.720
还有什么按钮的内名

41:35.720 --> 41:37.720
confirm class

41:37.720 --> 41:38.720
按钮的内名

41:38.720 --> 41:40.720
内名为confirm

41:40.720 --> 41:42.720
然后cancel的内名

41:42.720 --> 41:44.720
这些都可以配置的

41:44.720 --> 41:46.720
cancel

41:46.720 --> 41:48.720
这就是可以配置的

41:48.720 --> 41:49.720
这东西是可以配置的

41:49.720 --> 41:50.720
那就是配置完了

41:50.720 --> 41:51.720
好那到这边

41:51.720 --> 41:52.720
到这边

41:52.720 --> 41:54.720
它要根据不同的配置

41:54.720 --> 41:56.720
根据不同的配置来进行处理

41:56.720 --> 41:58.720
我们这里可以这样子来处理

41:58.720 --> 42:00.720
我们这里把这个配置

42:00.720 --> 42:01.720
保存到外边

42:01.720 --> 42:02.720
经过这个函数

42:02.720 --> 42:04.720
把配置保存到外边

42:04.720 --> 42:06.720
比方说

42:06.720 --> 42:08.720
这里就不能重名了

42:08.720 --> 42:09.720
重名的话

42:09.720 --> 42:10.720
这里这个名称

42:10.720 --> 42:11.720
然后这样子

42:11.720 --> 42:12.720
这里用这个名称

42:12.720 --> 42:13.720
这里把这个名称占用

42:13.720 --> 42:14.720
占用这个名称

42:14.720 --> 42:16.720
那这里就用另外一个

42:16.720 --> 42:17.720
opts

42:17.720 --> 42:18.720
用这个名称

42:18.720 --> 42:20.720
用这个名称

42:20.720 --> 42:21.720
把它处理出还有一个对象

42:21.720 --> 42:22.720
然后把这个参数的值

42:22.720 --> 42:23.720
复制给谁

42:23.720 --> 42:25.720
复制给opx

42:25.720 --> 42:27.720
复制到opx变量里面来

42:27.720 --> 42:28.720
你可以把它理解为全体变量

42:28.720 --> 42:30.720
尽管它是函数里面了

42:30.720 --> 42:31.720
函数内部可以使用

42:31.720 --> 42:33.720
函数外乘的东西

42:33.720 --> 42:34.720
给它复制

42:34.720 --> 42:35.720
没问题吧

42:35.720 --> 42:36.720
好

42:36.720 --> 42:38.720
那么这里就有了配置的

42:38.720 --> 42:39.720
我们这里的标

42:39.720 --> 42:40.720
就是我们这里

42:40.720 --> 42:41.720
设置配置的内容

42:41.720 --> 42:42.720
为什么要在这里设置

42:42.720 --> 42:43.720
不在这里设置呢

42:43.720 --> 42:45.720
因为你要考虑到之后

42:45.720 --> 42:46.720
已经存在的是

42:46.720 --> 42:47.720
这个东西是不存在

42:47.720 --> 42:48.720
这个DIV的时候创建的

42:48.720 --> 42:49.720
对吧

42:49.720 --> 42:50.720
那以后存在的时候

42:50.720 --> 42:51.720
你是不是要修改配置内容

42:51.720 --> 42:52.720
对吧

42:52.720 --> 42:53.720
总共都要修改的

42:53.720 --> 42:54.720
所以说你来这里

42:54.720 --> 42:55.720
重新设置配置内容

42:55.720 --> 42:56.720
好

42:56.720 --> 42:57.720
哪些东西要配置

42:57.720 --> 42:58.720
第一个spaN

42:58.720 --> 42:59.720
对吧

42:59.720 --> 43:00.720
spaN

43:00.720 --> 43:01.720
好

43:01.720 --> 43:02.720
找到这个spaN

43:02.720 --> 43:03.720
找到这个spaN

43:03.720 --> 43:04.720
给它一个特殊的标记

43:04.720 --> 43:05.720
比方说

43:05.720 --> 43:06.720
用id肯定不合适

43:06.720 --> 43:07.720
id怕跟页面的

43:07.720 --> 43:08.720
其他东西冲突

43:08.720 --> 43:10.720
这里最好不要用id

43:10.720 --> 43:11.720
比方说

43:11.720 --> 43:13.720
给它一个自定义属性

43:13.720 --> 43:15.720
自定义属性来做标识

43:15.720 --> 43:17.720
用来做标识

43:17.720 --> 43:18.720
自定义属性

43:18.720 --> 43:19.720
比方说

43:19.720 --> 43:21.720
dataID

43:21.720 --> 43:22.720
dataID

43:22.720 --> 43:23.720
这个标识什么

43:23.720 --> 43:24.720
title

43:24.720 --> 43:25.720
title

43:29.720 --> 43:30.720
然后

43:30.720 --> 43:32.720
这样子我尽量写特殊一点

43:32.720 --> 43:33.720
买plugin

43:33.720 --> 43:35.720
买plugin

43:35.720 --> 43:36.720
id为title

43:36.720 --> 43:37.720
这样尽量特殊一点

43:37.720 --> 43:38.720
防止跟其他的

43:38.720 --> 43:40.720
基本上其他的东西冲突

43:40.720 --> 43:41.720
这个呢

43:41.720 --> 43:42.720
这个是按钮对吧

43:42.720 --> 43:43.720
按钮都把关键点的

43:43.720 --> 43:44.720
做个标识

43:44.720 --> 43:45.720
标识

43:45.720 --> 43:46.720
按钮就是关闭

43:46.720 --> 43:47.720
close

43:47.720 --> 43:48.720
关闭

43:49.720 --> 43:50.720
然后呢

43:50.720 --> 43:51.720
下面的这个按钮

43:51.720 --> 43:52.720
来也做个标识

43:52.720 --> 43:54.720
用自定义属性做个标识

43:54.720 --> 43:56.720
这个是confer

43:56.720 --> 43:58.720
这个是cancel

43:58.720 --> 44:00.720
做一个标识

44:00.720 --> 44:01.720
好

44:01.720 --> 44:02.720
因此呢

44:02.720 --> 44:03.720
我在这边就好得到了

44:03.720 --> 44:04.720
对吧

44:04.720 --> 44:05.720
通过这个div什么center

44:05.720 --> 44:06.720
来得到什么

44:06.720 --> 44:07.720
querysnake

44:07.720 --> 44:08.720
querysnake

44:08.720 --> 44:09.720
得到啥呢

44:09.720 --> 44:10.720
得到它里边的

44:10.720 --> 44:12.720
它里边的这个

44:12.720 --> 44:14.720
data sets属相

44:14.720 --> 44:15.720
data

44:15.720 --> 44:16.720
data

44:16.720 --> 44:18.720
myplugin

44:18.720 --> 44:19.720
id

44:19.720 --> 44:20.720
这个属相

44:20.720 --> 44:21.720
等于啥呢

44:21.720 --> 44:22.720
等于

44:22.720 --> 44:23.720
看一下

44:23.720 --> 44:24.720
等于title

44:24.720 --> 44:25.720
等于title

44:25.720 --> 44:26.720
终于可以得到了

44:26.720 --> 44:27.720
我来看一下

44:27.720 --> 44:28.720
能不能得到

44:28.720 --> 44:29.720
能不能得到这个按钮

44:30.720 --> 44:31.720
不是

44:31.720 --> 44:32.720
这个spantitle

44:32.720 --> 44:33.720
spantitle

44:33.720 --> 44:34.720
能不能得到

44:34.720 --> 44:35.720
输出

44:35.720 --> 44:37.720
spantitle

44:37.720 --> 44:39.720
你看一旦是设计到

44:39.720 --> 44:40.720
从通用性的话

44:40.720 --> 44:41.720
很多地方都要考虑

44:41.720 --> 44:42.720
都要考虑了

44:42.720 --> 44:43.720
这里有个地方

44:43.720 --> 44:44.720
又有地方写错了

44:44.720 --> 44:45.720
又是dota

44:45.720 --> 44:46.720
分号

44:46.720 --> 44:47.720
保存

44:47.720 --> 44:48.720
打开

44:48.720 --> 44:49.720
所以可以得到了

44:49.720 --> 44:50.720
没问题吧

44:50.720 --> 44:51.720
span可以得到了

44:51.720 --> 44:52.720
可以得到了

44:52.720 --> 44:53.720
好

44:53.720 --> 44:54.720
那么这里呢

44:54.720 --> 44:55.720
就往span里边添东西

44:55.720 --> 44:56.720
对吧

44:56.720 --> 44:57.720
添啥东西

44:57.720 --> 44:58.720
spantitle

44:58.720 --> 44:59.720
我们可以用一个

44:59.720 --> 45:00.720
三目运算服

45:00.720 --> 45:01.720
in the text

45:01.720 --> 45:02.720
三目运算服

45:04.720 --> 45:05.720
就是看一下

45:05.720 --> 45:06.720
option配置里边

45:06.720 --> 45:07.720
有没有

45:07.720 --> 45:08.720
option是

45:08.720 --> 45:09.720
这个配置里边

45:09.720 --> 45:10.720
有没有什么

45:10.720 --> 45:11.720
title

45:11.720 --> 45:12.720
有没有配置这个东西

45:12.720 --> 45:13.720
如果你有配置的话

45:13.720 --> 45:14.720
我就使用你这个

45:14.720 --> 45:15.720
使用你这个

45:18.480 --> 45:19.480
option是

45:19.480 --> 45:20.480
点title

45:20.480 --> 45:21.480
如果你有的话

45:21.480 --> 45:22.480
就使用你这个

45:22.480 --> 45:23.480
如果你没有的话

45:23.480 --> 45:24.480
如果没有的话

45:24.480 --> 45:25.480
我给你个默认字

45:25.480 --> 45:26.480
提示

45:26.480 --> 45:27.480
提示

45:27.480 --> 45:28.480
保存

45:28.480 --> 45:29.480
看一下

45:29.480 --> 45:30.480
点击

45:30.480 --> 45:31.480
你看

45:31.480 --> 45:32.480
没有的话

45:32.480 --> 45:33.480
就得到提示

45:33.480 --> 45:34.480
对吧

45:34.480 --> 45:35.480
没有的话就得到提示

45:35.480 --> 45:36.480
那现在不是有吗

45:36.480 --> 45:37.480
我看一下

45:37.480 --> 45:38.480
我这里应该没保存

45:38.480 --> 45:39.480
我就是说

45:39.480 --> 45:40.480
点击

45:40.480 --> 45:41.480
你看

45:41.480 --> 45:42.480
你给我传

45:42.480 --> 45:43.480
我就用你传递的

45:43.480 --> 45:44.480
如果你没有传递

45:44.480 --> 45:45.480
如果你没有传递的话

45:45.480 --> 45:47.480
我就用默认的

45:47.480 --> 45:48.480
这样是不是很智能

45:48.480 --> 45:49.480
对不对

45:49.480 --> 45:50.480
然后继续看

45:50.480 --> 45:51.480
继续看

45:51.480 --> 45:52.480
那这里其实也可以

45:52.480 --> 45:54.480
也可以用另外一种写法

45:54.480 --> 45:56.480
用什么写法呢

45:56.480 --> 45:57.480
这种写法

45:57.480 --> 45:58.480
是不是可以

45:58.480 --> 45:59.480
对吧

45:59.480 --> 46:00.480
是不是也可以

46:00.480 --> 46:01.480
它有值就取它

46:01.480 --> 46:02.480
它没值的话

46:02.480 --> 46:03.480
就往后边看

46:03.480 --> 46:04.480
这就是配置的span

46:04.480 --> 46:05.480
标题配置

46:05.480 --> 46:06.480
这种部分是不是也要配置

46:06.480 --> 46:07.480
好

46:07.480 --> 46:08.480
那种部分

46:08.480 --> 46:09.480
创建的DIV

46:09.480 --> 46:10.480
这个DIV

46:10.480 --> 46:11.480
我给它加一个自定义属性

46:11.480 --> 46:12.480
加一个自定义属性

46:12.480 --> 46:13.480
好

46:13.480 --> 46:14.480
DIV.DataSets

46:14.480 --> 46:15.480
DataSets

46:15.480 --> 46:16.480
自定义属性

46:16.480 --> 46:17.480
什么

46:17.480 --> 46:18.480
刚才说的Data

46:18.480 --> 46:20.480
刚才说的MapLounge

46:20.480 --> 46:21.480
MapLounge

46:21.480 --> 46:22.480
然后 ID

46:22.480 --> 46:23.480
对不对

46:23.480 --> 46:24.480
ID

46:24.480 --> 46:25.480
等于啥呢

46:25.480 --> 46:26.480
等于

46:26.480 --> 46:27.480
这个是内容

46:27.480 --> 46:28.480
contents

46:28.480 --> 46:29.480
看一下

46:29.480 --> 46:30.480
看一下这个结构

46:32.480 --> 46:33.480
打开

46:33.480 --> 46:34.480
这个DIV

46:34.480 --> 46:35.480
DIV展开

46:35.480 --> 46:36.480
那么这里看

46:36.480 --> 46:37.480
MapLounge

46:37.480 --> 46:38.480
ID是不是contents

46:38.480 --> 46:39.480
对吧

46:39.480 --> 46:40.480
它会把投锋命名法

46:40.480 --> 46:42.480
转换成短红线命名法

46:42.480 --> 46:43.480
好

46:43.480 --> 46:44.480
那么这里继续

46:44.480 --> 46:45.480
那这里呢

46:45.480 --> 46:46.480
我就直接写了

46:46.480 --> 46:47.480
虽然这个语句长了一点

46:47.480 --> 46:48.480
但是写起来了

46:48.480 --> 46:50.480
更加方便了

46:50.480 --> 46:51.480
这样子直接写了

46:51.480 --> 46:52.480
直接写

46:52.480 --> 46:53.480
好

46:53.480 --> 46:54.480
这边也是

46:54.480 --> 46:55.480
DIV

46:55.480 --> 46:56.480
找到它里边的东西

46:56.480 --> 46:57.480
找到它里边的东西

46:57.480 --> 46:58.480
Data.plounge.id

46:58.480 --> 46:59.480
等于什么

46:59.480 --> 47:00.480
contents

47:00.480 --> 47:01.480
它的什么

47:01.480 --> 47:02.480
Inatex

47:02.480 --> 47:03.480
复制为啥

47:03.480 --> 47:05.480
复制为它里边的内容

47:05.480 --> 47:06.480
如果有的话

47:06.480 --> 47:07.480
就有

47:07.480 --> 47:08.480
没有的话

47:08.480 --> 47:09.480
那我给你显示啥了

47:09.480 --> 47:10.480
我给你显示啥了

47:10.480 --> 47:11.480
我也不知道显示啥了

47:11.480 --> 47:12.480
我也不知道显示啥了

47:12.480 --> 47:13.480
所以我直接

47:13.480 --> 47:14.480
那就显示一个空置不错

47:14.480 --> 47:15.480
我也不知道显示啥了

47:15.480 --> 47:16.480
因为内容

47:16.480 --> 47:17.480
我真的不知道怎么显示

47:17.480 --> 47:18.480
好

47:18.480 --> 47:19.480
下面再来

47:19.480 --> 47:20.480
然后按钮的文本

47:20.480 --> 47:21.480
按钮的文本

47:21.480 --> 47:22.480
按钮的话

47:22.480 --> 47:23.480
这里要处理

47:23.480 --> 47:24.480
还要那样式

47:24.480 --> 47:25.480
所以说我们

47:25.480 --> 47:26.480
得到吧

47:26.480 --> 47:27.480
先得到

47:27.480 --> 47:28.480
bit.conf

47:28.480 --> 47:29.480
得到一个什么

47:29.480 --> 47:30.480
先得到按钮

47:30.480 --> 47:31.480
现在得到按钮

47:31.480 --> 47:32.480
按钮的话

47:32.480 --> 47:33.480
conf

47:33.480 --> 47:34.480
得到按钮

47:34.480 --> 47:35.480
得到按钮过后

47:35.480 --> 47:36.480
它要设置两个东西

47:36.480 --> 47:37.480
一个是

47:37.480 --> 47:38.480
class name

47:38.480 --> 47:39.480
对吧

47:39.480 --> 47:40.480
class name

47:40.480 --> 47:41.480
等于啥呢

47:41.480 --> 47:42.480
看一下你这个options

47:42.480 --> 47:43.480
配置里边

47:43.480 --> 47:44.480
有没有什么

47:44.480 --> 47:45.480
confir的class

47:45.480 --> 47:46.480
有没有这个值

47:46.480 --> 47:48.480
如果有的话就取立

47:48.480 --> 47:49.480
如果没有的话

47:49.480 --> 47:50.480
就给你取个空置不错

47:50.480 --> 47:51.480
啥都没有

47:51.480 --> 47:52.480
它的文本

47:52.480 --> 47:53.480
按钮文本

47:53.480 --> 47:54.480
如果

47:54.480 --> 47:55.480
InnerText

47:55.480 --> 47:57.480
如果你这个有值

47:57.480 --> 47:58.480
options

47:58.480 --> 47:59.480
confir

47:59.480 --> 48:00.480
text

48:00.480 --> 48:01.480
有值

48:01.480 --> 48:02.480
否则的话就用什么

48:02.480 --> 48:03.480
确定

48:03.480 --> 48:04.480
确定

48:04.480 --> 48:06.480
然后bit.conf

48:06.480 --> 48:07.480
Inner

48:08.480 --> 48:09.480
cancel

48:09.480 --> 48:10.480
还cancel

48:10.480 --> 48:11.480
复制一下

48:13.480 --> 48:15.480
bit.cancel

48:15.480 --> 48:18.120
这里

48:19.120 --> 48:20.120
bit.cancel

48:20.120 --> 48:21.120
甚至呢

48:21.120 --> 48:22.120
我们可以把这些变量都保存起来

48:22.120 --> 48:23.120
对吧

48:23.120 --> 48:24.120
何可以保存起来

48:24.120 --> 48:25.120
保存到这

48:25.120 --> 48:26.120
保存到这

48:26.120 --> 48:27.120
后面用起来更加方便

48:27.120 --> 48:28.120
算了

48:28.120 --> 48:29.120
保存到这

48:29.120 --> 48:30.120
span

48:30.120 --> 48:31.120
title

48:32.120 --> 48:33.120
span

48:33.120 --> 48:34.120
close

48:34.120 --> 48:35.120
都保存在这

48:35.120 --> 48:36.120
都保存在这

48:36.120 --> 48:38.120
然后span

48:43.120 --> 48:44.120
content

48:45.120 --> 48:46.120
然后按钮

48:46.120 --> 48:47.120
bit.confir

48:47.120 --> 48:49.120
bit.confir

48:49.120 --> 48:50.120
bit.cancel

48:50.120 --> 48:52.120
把这些动物对象都保存到这

48:53.120 --> 48:54.120
OK

48:54.120 --> 48:55.120
没了吧

48:55.120 --> 48:56.120
没了吧

48:57.120 --> 48:59.120
关闭标题

48:59.120 --> 49:00.120
关闭标题

49:00.120 --> 49:01.120
内容

49:01.120 --> 49:02.120
还有什么

49:02.120 --> 49:04.120
还有这个确定按钮和取消按钮

49:04.120 --> 49:05.120
都是这些了

49:05.120 --> 49:07.120
所以说我们这里就直接

49:07.120 --> 49:08.120
直接设置了

49:08.120 --> 49:10.120
直接把东西保存进来

49:10.120 --> 49:11.120
再来

49:11.120 --> 49:13.120
bit.confir

49:13.120 --> 49:14.120
cancel

49:14.120 --> 49:15.120
来吧

49:15.120 --> 49:16.120
再来来弄

49:17.120 --> 49:18.120
体力活了

49:19.120 --> 49:21.680
cancel

49:21.680 --> 49:22.680
然后

49:22.680 --> 49:24.680
bit.confir

49:25.680 --> 49:29.530
复制

49:30.530 --> 49:31.530
这里是confer

49:31.530 --> 49:32.530
好

49:32.530 --> 49:33.530
再来

49:35.530 --> 49:36.530
divcenter

49:36.530 --> 49:37.530
divcenter有了

49:38.530 --> 49:39.530
然后使用

49:39.530 --> 49:40.530
这两个按钮有了

49:40.530 --> 49:41.530
这两个按钮有了

49:41.530 --> 49:42.530
就不需要得到了

49:42.530 --> 49:43.530
不需要得到了

49:43.530 --> 49:44.530
直接复制就完事了

49:45.530 --> 49:46.530
直接复制就完事了

49:47.530 --> 49:48.530
还有什么

49:48.530 --> 49:49.530
还有这个

49:50.530 --> 49:51.530
span title

49:52.530 --> 49:53.530
span title

49:55.530 --> 49:56.530
span close

49:57.530 --> 49:59.530
close的话这里没写

49:59.530 --> 50:00.530
close

50:00.530 --> 50:01.530
还有div

50:01.530 --> 50:03.530
div content

50:03.530 --> 50:04.530
content

50:04.530 --> 50:05.530
复制

50:05.530 --> 50:08.040
OK

50:08.040 --> 50:09.040
我们把这些东西全部得到

50:09.040 --> 50:10.040
全部得到

50:10.040 --> 50:11.040
好

50:11.040 --> 50:12.040
咱们来

50:14.040 --> 50:16.040
这东西其实我们可以创建之后就得到

50:16.040 --> 50:17.040
创建之后得到

50:17.040 --> 50:18.040
我们不用等这么久

50:18.040 --> 50:20.040
创建之后就得到

50:20.040 --> 50:21.040
不用每一次

50:21.040 --> 50:23.040
每一次打开的时候都重新得到一次

50:23.040 --> 50:24.040
没必要

50:24.040 --> 50:25.040
创建之后就得到

50:25.040 --> 50:26.040
好

50:26.040 --> 50:27.040
然后这里设置什么

50:28.040 --> 50:30.040
这里设置的是div

50:30.040 --> 50:31.040
span title

50:31.040 --> 50:33.040
span title

50:33.040 --> 50:35.040
这里设置的是div content

50:35.040 --> 50:36.040
content

50:37.040 --> 50:38.040
div content

50:40.040 --> 50:41.040
好了来看一下吧

50:41.040 --> 50:42.040
看一下

50:42.040 --> 50:43.040
打开

50:44.040 --> 50:45.040
怎么是两个

50:45.040 --> 50:46.040
OK

50:46.040 --> 50:47.040
这里是cancel

50:48.040 --> 50:50.040
cancel

50:50.040 --> 50:51.040
text

50:52.040 --> 50:53.040
好看一下

50:54.040 --> 50:55.040
你看是完全可以配置的

50:55.040 --> 50:56.040
对吧

50:56.040 --> 50:57.040
这东西就完全可以配置的

50:57.040 --> 50:59.040
我就是想要这样的效果

50:59.040 --> 51:00.040
并且你看按钮

51:00.040 --> 51:01.040
你看一下注意看按钮

51:01.040 --> 51:03.040
按钮是不是有一个class的

51:03.040 --> 51:04.040
有class的

51:04.040 --> 51:05.040
class这里写出了

51:05.040 --> 51:06.040
这里是cancel class

51:07.040 --> 51:08.040
cancel class

51:08.040 --> 51:09.040
你看

51:09.040 --> 51:11.040
按钮我们可以给它设置那样式的

51:11.040 --> 51:12.040
就是不同的弹框

51:12.040 --> 51:14.040
我们可以用不同的那样式

51:14.040 --> 51:16.040
你看是不是可以设置的

51:16.040 --> 51:18.040
可以设置那样式的

51:18.040 --> 51:19.040
那么我们这里就可以看

51:19.040 --> 51:21.040
非常轻松的可以看按钮加上那样式

51:21.040 --> 51:22.040
比方说我们这里

51:22.040 --> 51:23.040
style

51:24.040 --> 51:25.040
style

51:25.040 --> 51:26.040
我们不是给它配置的那样式是啥

51:26.040 --> 51:27.040
是confer吗

51:27.040 --> 51:29.040
confer给它配置的那样式

51:29.040 --> 51:30.040
比方举个例子

51:30.040 --> 51:31.040
比方举个例子

51:31.040 --> 51:33.040
我当然我这里难得写了

51:33.040 --> 51:34.040
比方说背景颜色

51:34.040 --> 51:35.040
为红色

51:35.040 --> 51:36.040
保存

51:36.040 --> 51:37.040
你看一下打开过后

51:37.040 --> 51:39.040
你看这个按钮背景颜色是不是变了

51:39.040 --> 51:40.040
对吧

51:40.040 --> 51:41.040
有兴趣的同学自己去写

51:41.040 --> 51:42.040
我这里不写了

51:42.040 --> 51:43.040
就是我们这里可以配置

51:43.040 --> 51:44.040
当然是可以不可以

51:44.040 --> 51:45.040
可不可以不传

51:45.040 --> 51:46.040
不传可以

51:46.040 --> 51:47.040
不传可以

51:47.040 --> 51:48.040
不传它就没有那样式

51:48.040 --> 51:49.040
它这一刻就没有那样式

51:49.040 --> 51:50.040
你看

51:50.040 --> 51:51.040
它没有class

51:52.040 --> 51:53.040
能不能不传ok cancel

51:53.040 --> 51:54.040
也可以

51:54.040 --> 51:55.040
不传的话它就默认值

51:55.040 --> 51:56.040
确定

51:56.040 --> 51:57.040
确定和取消

51:57.040 --> 51:58.040
我这里写错了

51:58.040 --> 51:59.040
取消

52:00.040 --> 52:01.040
好

52:01.040 --> 52:02.040
那么你看

52:02.040 --> 52:03.040
它就是两个确定和取消

52:03.040 --> 52:04.040
对吧

52:04.040 --> 52:05.040
那这些文字是不是

52:05.040 --> 52:06.040
这个文字是不是有默认值

52:06.040 --> 52:07.040
对吧

52:07.040 --> 52:08.040
就做出来了

52:08.040 --> 52:09.040
对不对

52:09.040 --> 52:10.040
就做出来了

52:10.040 --> 52:11.040
好

52:11.040 --> 52:12.040
那么接下来

52:12.040 --> 52:13.040
是来实现功能

52:13.040 --> 52:14.040
现在开始实现功能

52:14.040 --> 52:15.040
把样子搞定了

52:15.040 --> 52:16.040
来实现功能

52:16.040 --> 52:17.040
好

52:17.040 --> 52:19.040
功能的话是这样子

52:19.040 --> 52:20.040
我们要注册事件

52:20.040 --> 52:21.040
要注册事件

52:21.040 --> 52:22.040
就在这里注册

52:24.730 --> 52:25.730
方形

52:25.730 --> 52:26.730
注册事件

52:27.730 --> 52:28.730
ok

52:29.730 --> 52:31.730
初始化完成过后才注册事件

52:31.730 --> 52:33.730
初始化完成之后才注册事件

52:33.730 --> 52:34.730
就是

52:34.730 --> 52:35.730
如果你之前注册过的事件

52:35.730 --> 52:36.730
你就不要再注册了

52:36.730 --> 52:37.730
就不要再注册了

52:37.730 --> 52:38.730
这注册一试就行了

52:38.730 --> 52:40.730
那么我们这里可以用个变量

52:40.730 --> 52:41.730
ease

52:41.730 --> 52:42.730
rig

52:42.730 --> 52:43.730
event

52:43.730 --> 52:44.730
是否注册过事件

52:44.730 --> 52:45.730
给它设置为force

52:45.730 --> 52:47.730
一开始是没有注册事件的

52:47.730 --> 52:50.730
是否注册过事件

52:50.730 --> 52:51.730
是否注册过事件

52:51.730 --> 52:53.730
一开始是没有注册事件的

52:53.730 --> 52:54.730
好

52:54.730 --> 52:55.730
那么现在呢

52:55.730 --> 52:56.730
我们在这里

52:56.730 --> 52:57.730
注册事件

52:57.730 --> 52:58.730
几个函数

52:58.730 --> 52:59.730
专门来注册事件

52:59.730 --> 53:00.730
rig

53:00.730 --> 53:01.730
event

53:01.730 --> 53:04.240
event

53:04.240 --> 53:05.240
这里

53:05.240 --> 53:06.240
rig

53:06.240 --> 53:07.240
event

53:07.240 --> 53:08.240
写这么个函数

53:08.240 --> 53:09.240
下面写一个

53:09.240 --> 53:10.240
方形

53:10.240 --> 53:11.240
rig

53:11.240 --> 53:12.240
event

53:12.240 --> 53:13.240
注册事件

53:13.240 --> 53:15.240
那么有哪些事件要注册呢

53:15.240 --> 53:16.240
有哪些事件

53:16.240 --> 53:18.240
点击这个东西是不是关闭

53:18.240 --> 53:19.240
点关闭

53:19.240 --> 53:20.240
点取消是不是都是关闭

53:20.240 --> 53:21.240
点这个东西

53:21.240 --> 53:22.240
点这个东西是不是都是关闭

53:22.240 --> 53:24.240
那么这两个是不是要注册事件

53:24.240 --> 53:25.240
ok

53:25.240 --> 53:26.240
来吧

53:26.240 --> 53:28.240
就是点击关闭按钮

53:28.240 --> 53:29.240
点击span

53:29.240 --> 53:30.240
close

53:30.240 --> 53:31.240
叫什么

53:31.240 --> 53:32.240
close

53:32.240 --> 53:34.240
unclick

53:34.240 --> 53:35.240
和什么

53:35.240 --> 53:36.240
和取消按钮

53:36.240 --> 53:37.240
btn

53:37.240 --> 53:38.240
cancel

53:38.240 --> 53:39.240
unclick

53:39.240 --> 53:40.240
点击这两个的时候

53:40.240 --> 53:41.240
是不是都要关闭

53:41.240 --> 53:42.240
对吧

53:42.240 --> 53:43.240
都要关闭

53:43.240 --> 53:44.240
关闭呢

53:44.240 --> 53:45.240
怎么关闭呢

53:45.240 --> 53:46.240
就是

53:46.240 --> 53:47.240
div

53:47.240 --> 53:48.240
mode

53:48.240 --> 53:49.240
整个猛场

53:49.240 --> 53:50.240
style

53:50.240 --> 53:51.240
display

53:51.240 --> 53:52.240
干嘛

53:52.240 --> 53:53.240
把它设置为

53:53.240 --> 53:54.240
run

53:54.240 --> 53:55.240
出去关闭了

53:55.240 --> 53:56.240
保存看一下

53:56.240 --> 53:57.240
点击

53:57.240 --> 53:58.240
关闭了

53:58.240 --> 53:59.240
点击取消

53:59.240 --> 54:00.240
关闭了

54:00.240 --> 54:01.240
点那个叉叉是不是

54:01.240 --> 54:02.240
也可以关闭

54:02.240 --> 54:03.240
对吧

54:03.240 --> 54:04.240
也可以关闭

54:04.240 --> 54:05.240
没问题吧

54:05.240 --> 54:06.240
点取消和这个东西

54:06.240 --> 54:07.240
都可以关闭

54:07.240 --> 54:08.240
那么点确定

54:08.240 --> 54:09.240
是不是也得关闭了

54:09.240 --> 54:10.240
点确定

54:10.240 --> 54:12.240
点确定其实也得关闭

54:12.240 --> 54:13.240
也得关闭

54:13.240 --> 54:14.240
那么还有什么

54:14.240 --> 54:16.240
还有点这个猛场

54:16.240 --> 54:17.240
点这个猛场

54:17.240 --> 54:18.240
它也得关闭

54:18.240 --> 54:20.240
也得关闭

54:20.240 --> 54:21.240
这不是常态吗

54:21.240 --> 54:22.240
对不对

54:22.240 --> 54:23.240
点猛场也得关闭

54:23.240 --> 54:24.240
那么点猛场

54:24.240 --> 54:25.240
我们看一下

54:25.240 --> 54:26.240
我们这样子

54:26.240 --> 54:28.240
猛场的话是div mode

54:28.240 --> 54:29.240
给div mode

54:29.240 --> 54:30.240
组成一个onclick

54:30.240 --> 54:31.240
onclick

54:31.240 --> 54:33.240
点猛场的时候

54:33.240 --> 54:34.240
但是你要注意

54:34.240 --> 54:35.240
你不能

54:35.240 --> 54:36.240
因为猛场是

54:36.240 --> 54:37.240
事件会冒泡的

54:37.240 --> 54:38.240
事件是会冒泡的

54:38.240 --> 54:40.240
当你点了这里的过后

54:40.240 --> 54:41.240
它也会冒泡到猛场

54:41.240 --> 54:42.240
那么点这里

54:42.240 --> 54:43.240
是不能关闭的

54:43.240 --> 54:45.240
所以说点猛场关闭

54:45.240 --> 54:46.240
你得考虑这么一个情况

54:46.240 --> 54:47.240
就是什么了

54:47.240 --> 54:48.240
这里很简单

54:48.240 --> 54:49.240
你得判断一下

54:49.240 --> 54:50.240
就是判断啥

54:50.240 --> 54:51.240
判断的是

54:51.240 --> 54:52.240
这个e

54:52.240 --> 54:53.240
它的target

54:53.240 --> 54:55.240
它的事件元

54:55.240 --> 54:56.240
就等于zs

54:56.240 --> 54:58.240
是不是等于当前这个猛场

54:58.240 --> 54:59.240
如果是的话

54:59.240 --> 55:01.240
就说明你直接点了猛场

55:01.240 --> 55:02.240
你直接点了这些区域

55:02.240 --> 55:03.240
你点的不是这里边的区域

55:03.240 --> 55:04.240
你要这个意思吧

55:04.240 --> 55:05.240
好

55:05.240 --> 55:06.240
那么这个时候才把关闭

55:06.240 --> 55:08.240
才把关闭

55:08.240 --> 55:09.240
对吧

55:09.240 --> 55:10.240
好

55:10.240 --> 55:11.240
那么看一下

55:11.240 --> 55:12.240
点这个关闭

55:12.240 --> 55:13.240
看没

55:13.240 --> 55:14.240
点这个猛场也可以关闭

55:14.240 --> 55:15.240
点这个就不行了

55:15.240 --> 55:16.240
点取消可以关闭

55:16.240 --> 55:18.240
点这个可以关闭

55:18.240 --> 55:20.240
没问题吧

55:20.240 --> 55:21.240
好

55:21.240 --> 55:22.240
现在关键是

55:22.240 --> 55:23.240
问题是点确定怎么办

55:23.240 --> 55:24.240
关闭好说

55:24.240 --> 55:25.240
点确定怎么办

55:25.240 --> 55:26.240
DIV

55:26.240 --> 55:28.240
Btn

55:28.240 --> 55:30.240
确定

55:30.240 --> 55:31.240
onclick

55:31.240 --> 55:33.240
点击确定的时候干嘛呢

55:33.240 --> 55:35.240
能干嘛呢

55:35.240 --> 55:36.240
我也不知道能干嘛

55:36.240 --> 55:37.240
我也不知道

55:37.240 --> 55:38.240
我要干嘛

55:38.240 --> 55:39.240
对不对

55:39.240 --> 55:40.240
我也不知道我能干嘛

55:40.240 --> 55:42.240
现在真的复杂在这

55:42.240 --> 55:43.240
点确定的时候

55:43.240 --> 55:44.240
我也不知道干嘛

55:44.240 --> 55:46.240
我这个是写的是通用的插件

55:46.240 --> 55:48.240
是通用性的

55:48.240 --> 55:49.240
那我怎么知道你要干嘛

55:49.240 --> 55:50.240
我不知道

55:50.240 --> 55:52.240
因此需要你来处理

55:52.240 --> 55:53.240
你来处理

55:53.240 --> 55:55.240
是不是得写毁掉寒暑

55:55.240 --> 55:56.240
这里注册完事件

55:56.240 --> 55:57.240
我会把它设置为

55:57.240 --> 55:58.240
IsRig

55:58.240 --> 56:00.240
event把它设置为True

56:00.240 --> 56:01.240
把它设置为True

56:01.240 --> 56:02.240
我自己先判断一下

56:02.240 --> 56:04.240
如果没有注册过时间

56:04.240 --> 56:05.240
我再去注册

56:05.240 --> 56:07.240
每次都去重新注册时间了

56:07.240 --> 56:10.680
影响效率

56:10.680 --> 56:12.680
到时也不会影响功能

56:12.680 --> 56:14.680
因为我是直接用这种方式复辞的

56:14.680 --> 56:16.680
它会把之前的事件覆盖掉

56:16.680 --> 56:17.680
如果你没有注册过时间

56:17.680 --> 56:18.680
我给你注册时间

56:18.680 --> 56:19.680
给注册这些时间

56:19.680 --> 56:21.680
注册一次就行了

56:21.680 --> 56:23.680
现在关键是

56:23.680 --> 56:24.680
我点击确定过干嘛

56:24.680 --> 56:26.680
是不是要传毁掉寒暑

56:26.680 --> 56:27.680
因为我不知道要干嘛

56:27.680 --> 56:29.680
所以说这里应该这样子传过来

56:29.680 --> 56:31.680
就是on

56:31.680 --> 56:33.680
比方说按照世界的那种

56:33.680 --> 56:35.680
习惯性的书写

56:35.680 --> 56:37.680
on什么什么

56:37.680 --> 56:38.680
当什么时候发生呢

56:38.680 --> 56:40.680
当confer

56:40.680 --> 56:42.680
unconfer

56:42.680 --> 56:43.680
运行的时间

56:43.680 --> 56:44.680
对吧

56:44.680 --> 56:46.680
我们这里表示

56:46.680 --> 56:48.680
点击了确定

56:48.680 --> 56:50.680
点击了确定

56:50.680 --> 56:52.680
然后

56:52.680 --> 56:53.680
这里on

56:53.680 --> 56:55.680
cancel

56:55.680 --> 56:56.680
方形

56:56.680 --> 56:59.680
这里表示点击了取消

56:59.680 --> 57:02.680
点击了取消

57:02.680 --> 57:04.680
对吧

57:04.680 --> 57:05.680
点击了确定

57:05.680 --> 57:06.680
点击了取消

57:06.680 --> 57:07.680
对吧

57:07.680 --> 57:09.680
这两个都要触发

57:09.680 --> 57:10.680
都要触发这两个时间

57:10.680 --> 57:11.680
给它注册这两个时间

57:11.680 --> 57:12.680
好

57:12.680 --> 57:14.680
那么这边怎么办呢

57:14.680 --> 57:15.680
这么来怎么办呢

57:15.680 --> 57:17.680
不是取消

57:17.680 --> 57:19.680
on close

57:19.680 --> 57:21.680
on cancel

57:21.680 --> 57:22.680
好

57:22.680 --> 57:23.680
那这边怎么在处理呢

57:23.680 --> 57:25.680
点确定的时候

57:25.680 --> 57:27.680
我自己处理不了任何事情

57:27.680 --> 57:28.680
我只能判断

57:28.680 --> 57:29.680
判断你的配置里边

57:29.680 --> 57:32.680
有没有啥on confer

57:32.680 --> 57:35.680
有没有这个东西

57:35.680 --> 57:37.680
如果有的话

57:37.680 --> 57:38.680
我给你调用一个函数

57:38.680 --> 57:39.680
调用你这个函数

57:39.680 --> 57:40.680
我只能这样处理

57:40.680 --> 57:41.680
对吧

57:41.680 --> 57:42.680
这是毁调函数

57:42.680 --> 57:43.680
我把当的函数来调用

57:43.680 --> 57:44.680
它是不是函数

57:44.680 --> 57:45.680
它肯定是函数

57:45.680 --> 57:46.680
它传了一个函数过来

57:46.680 --> 57:47.680
通过这个属性

57:47.680 --> 57:48.680
传了一个函数过来

57:48.680 --> 57:49.680
那么我这里调用这个函数

57:50.680 --> 57:51.680
我们这样子来处理

57:51.680 --> 57:53.680
包括取消是不一样的

57:53.680 --> 57:54.680
取消这个我们要单独写

57:54.680 --> 57:55.680
因为取消的时候

57:55.680 --> 57:56.680
要触发事件的

57:57.680 --> 57:59.680
好取消这里也是一样

58:01.680 --> 58:03.680
当我点击取消按钮的时候

58:03.680 --> 58:05.680
我当然肯定要把它关闭

58:05.680 --> 58:06.680
肯定要把它关闭

58:06.680 --> 58:08.680
这里点确定也肯定要把它关闭

58:08.680 --> 58:09.680
也肯定要关闭

58:09.680 --> 58:11.680
那么点取消的时候

58:11.680 --> 58:14.680
如果你关闭了

58:14.680 --> 58:16.680
如果你点了取消

58:16.680 --> 58:18.680
我要触发这个事件

58:18.680 --> 58:21.680
就是如果你给我传了一个oncastle

58:22.680 --> 58:23.680
oncastle

58:23.680 --> 58:24.680
来看一下这边的字

58:25.680 --> 58:26.680
你给我传了这么一个东西

58:27.680 --> 58:29.680
那么我要干嘛

58:29.680 --> 58:30.680
我要把它取消掉

58:31.680 --> 58:32.680
没问题吧

58:33.680 --> 58:34.680
就做完了

58:34.680 --> 58:36.680
我们用插件的形式把它做出来了

58:36.680 --> 58:37.680
写了一百多行代码

58:37.680 --> 58:39.680
本来这个代码很少很少的

58:39.680 --> 58:41.680
但是我们要把它写成插件的话

58:41.680 --> 58:42.680
事情就变得复杂了

58:43.680 --> 58:44.680
好 现在我们来看

58:44.680 --> 58:45.680
看一下

58:45.680 --> 58:50.010
好 这里点击

58:50.010 --> 58:51.010
点取消

58:51.010 --> 58:53.010
我这里可以监听到他点了取消

58:53.010 --> 58:54.010
对吧 点确定

58:54.010 --> 58:55.010
我就可以监听到他点了确定

58:55.010 --> 58:57.010
并且这个里边的所有东西

58:57.010 --> 58:58.010
是不是可以配置的

58:59.010 --> 59:01.010
好 虽然我们做了这么多麻烦的事情

59:01.010 --> 59:03.010
但是有没有意义呢

59:03.010 --> 59:04.010
绝对是有意义的

59:04.010 --> 59:06.010
你看这边的事情变得多简单

59:06.010 --> 59:07.010
我要谈个框框

59:07.010 --> 59:08.010
任何情况我要谈框

59:08.010 --> 59:10.010
我只需要去调用这个函数

59:10.010 --> 59:11.010
就会谈框

59:11.010 --> 59:13.010
并且我可以做各种配置

59:13.010 --> 59:14.010
做各种配置

59:15.010 --> 59:16.010
没问题吧

59:16.010 --> 59:17.010
我们再来测试一下

59:17.010 --> 59:18.010
比方说这个变量

59:18.010 --> 59:19.010
变量N

59:19.010 --> 59:21.010
N 等于0

59:21.010 --> 59:23.010
好 每一次点击到N++

59:23.010 --> 59:24.010
N++

59:24.010 --> 59:25.010
然后我这里

59:25.010 --> 59:26.010
把这个N放这

59:26.010 --> 59:27.010
凭借上N

59:27.010 --> 59:28.010
看一下能不能

59:28.010 --> 59:29.010
能不能让每一次

59:29.010 --> 59:30.010
弹框的内容都不一样

59:31.010 --> 59:32.010
凭借到这

59:33.010 --> 59:34.010
好 看一下

59:34.010 --> 59:35.010
点击

59:35.010 --> 59:36.010
1

59:36.010 --> 59:37.010
点击

59:37.010 --> 59:38.010
2 看没

59:38.010 --> 59:39.010
每次都可以不一样

59:39.010 --> 59:40.010
看到没

59:40.010 --> 59:41.010
而且它有事件的

59:41.010 --> 59:43.010
就是我们自己写的事件的

59:43.010 --> 59:44.010
事件是什么

59:44.010 --> 59:45.010
就是毁掉函数

59:45.010 --> 59:46.010
就是毁掉函数

59:46.010 --> 59:47.010
就是我看你给我传的函数

59:47.010 --> 59:48.010
我在合适的时候

59:48.010 --> 59:49.010
去调用它就完事了

59:50.010 --> 59:51.010
那么这里有事件

59:51.010 --> 59:53.010
因此你可以通过注册事件

59:54.010 --> 59:55.010
所以说事件的本质

59:55.010 --> 59:56.010
就是毁掉函数

59:56.010 --> 59:57.010
就是一个毁掉函数

59:58.010 --> 01:00:00.010
你可以通过这个注册事件

01:00:00.010 --> 01:00:01.010
来处理各种事情

01:00:01.010 --> 01:00:02.010
你点了确定过后我要干吗

01:00:02.010 --> 01:00:03.010
你点了取消过后我要干吗

01:00:03.010 --> 01:00:05.010
是不是可以做事情呢

01:00:06.010 --> 01:00:07.010
就写了这么一个

01:00:07.010 --> 01:00:08.010
通用的插件出来

01:00:09.010 --> 01:00:10.010
尝试一下

01:00:10.010 --> 01:00:12.010
后面我们会写很多的插件

01:00:12.010 --> 01:00:13.010
一旦设立到插件

01:00:13.010 --> 01:00:15.010
那肯定是问题不简单

01:00:15.010 --> 01:00:16.010
它考虑到通用性

01:00:16.010 --> 01:00:17.010
意用性

01:00:17.010 --> 01:00:19.010
我们用的时候非常简单

01:00:19.010 --> 01:00:20.010
非常简单

01:00:20.010 --> 01:00:21.010
甚至我可不可以不传

01:00:21.010 --> 01:00:23.010
我只需要谈出来一个东西

01:00:23.010 --> 01:00:24.010
我啥谈出来都可以不传

01:00:24.010 --> 01:00:25.010
它仍然可以谈出来

01:00:25.010 --> 01:00:27.010
但是这些地方没有纸

01:00:27.010 --> 01:00:28.010
因为我不知道你要干吗

01:00:28.010 --> 01:00:30.010
你设置了什么东西

01:00:30.010 --> 01:00:31.010
甚至我们还可以

01:00:31.010 --> 01:00:32.010
做得更加简单一点

01:00:32.010 --> 01:00:34.010
比方说这里可不可以传自布串呢

01:00:34.010 --> 01:00:36.010
比方说这里我传一个自布串

01:00:36.010 --> 01:00:37.010
我直接把自布串作为文本

01:00:37.010 --> 01:00:38.010
可不可以呢

01:00:38.010 --> 01:00:40.010
我这里判断一下就完事了

01:00:41.010 --> 01:00:42.010
如果它没有纸

01:00:42.010 --> 01:00:45.010
给它复制为一个空对象

01:00:46.010 --> 01:00:48.010
如果它的纸

01:00:49.010 --> 01:00:50.010
这样子

01:00:50.010 --> 01:00:54.010
如果Type OPTS

01:00:54.010 --> 01:00:55.010
它是一个自布串

01:00:55.010 --> 01:00:57.010
它是一个自布串

01:00:58.010 --> 01:00:59.010
如果它是自布串的话

01:00:59.010 --> 01:01:00.010
我干吗呢

01:01:00.010 --> 01:01:02.010
我把OPTS改一下

01:01:02.010 --> 01:01:04.010
改成一个对象

01:01:04.010 --> 01:01:05.010
对象里面的什么title

01:01:05.010 --> 01:01:06.010
等于什么

01:01:06.010 --> 01:01:07.010
等于OPTS

01:01:07.010 --> 01:01:08.010
没问题吧

01:01:08.010 --> 01:01:09.010
它是一个自布串

01:01:09.010 --> 01:01:10.010
我就把它自布串

01:01:10.010 --> 01:01:11.010
作为一个对象的属性

01:01:11.010 --> 01:01:12.010
title

01:01:12.010 --> 01:01:14.010
然后把对象重新给它复制回去

01:01:14.010 --> 01:01:15.010
那是不是就完了

01:01:15.010 --> 01:01:17.010
那就把它转换成对象格式了

01:01:17.010 --> 01:01:18.010
你传的时候

01:01:18.010 --> 01:01:20.010
我可以允许你传自布串

01:01:20.010 --> 01:01:22.010
但是我最终会把它转换成对象

01:01:22.010 --> 01:01:23.010
看一下

01:01:23.010 --> 01:01:24.010
我的表体

01:01:24.010 --> 01:01:26.010
应该是内容

01:01:26.010 --> 01:01:29.010
content

01:01:29.010 --> 01:01:31.010
就是让用后来用起来更加方便

01:01:31.010 --> 01:01:32.010
你看

01:01:32.010 --> 01:01:33.010
更加方便

01:01:33.010 --> 01:01:34.010
有的时候

01:01:34.010 --> 01:01:35.010
我只需要得到

01:01:35.010 --> 01:01:37.010
我只需要配置一下内容就行了

01:01:37.010 --> 01:01:39.010
所以说我这里就非常简单了

01:01:41.010 --> 01:01:43.010
你考虑到异用性过后

01:01:43.010 --> 01:01:44.010
你要做的事情有很多了

01:01:44.010 --> 01:01:47.010
但是以后用起来就非常非常舒服

01:01:47.010 --> 01:01:48.010
第一次

01:01:48.010 --> 01:01:50.010
大家体会一下

01:01:50.010 --> 01:01:52.010
这个插件该怎么去做

01:01:52.010 --> 01:01:53.010
下来把它完成

01:01:53.010 --> 01:01:54.010
咱们这一张

01:01:54.010 --> 01:01:55.010
BOOM 结束了

01:01:55.010 --> 01:01:56.010
那么自此

01:01:56.010 --> 01:01:58.010
浏览器的所有东西全部结束了

01:01:58.010 --> 01:01:59.010
全部结束了

01:01:59.010 --> 01:02:00.010
后面我们讲的是啥了

01:02:00.010 --> 01:02:01.010
都讲的是

01:02:01.010 --> 01:02:03.010
解释进阶部分的内容了

01:02:03.010 --> 01:02:04.010
那都是面试体也好

01:02:04.010 --> 01:02:05.010
或者说

01:02:05.010 --> 01:02:06.010
做插件的时候

01:02:06.010 --> 01:02:07.010
都要用到了知识

