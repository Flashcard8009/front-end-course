WEBVTT

00:00.000 --> 00:16.880
咱们试见这个章节就快要进入尾声了

00:16.880 --> 00:20.760
试见一学习完就意味着多么就学习完了

00:20.760 --> 00:25.760
多么一学习完基本上好多好多效果都可以做了

00:25.760 --> 00:28.760
然后还差一点BOM的知识

00:28.760 --> 00:30.760
差一点BOM的知识一讲了过后了

00:30.760 --> 00:33.760
基本上所有的知识你就全部解锁了

00:33.760 --> 00:37.760
以后看到网页上各种奇葩的效果呢

00:37.760 --> 00:39.760
至少有这么一个失怒了

00:39.760 --> 00:41.760
至少你知道你的知识是够了的

00:41.760 --> 00:43.760
你可以做的

00:43.760 --> 00:45.760
这些课咱们来补充一些事件

00:45.760 --> 00:49.760
其实事件最核心的就是两大块事件

00:49.760 --> 00:51.760
一个是鼠标事件 一个是键盘事件

00:51.760 --> 00:53.760
其他都没有啥了

00:53.760 --> 00:55.760
但是还有一些其他忘记拔刀的事件

00:55.760 --> 00:57.760
我也不知道该怎么去归类

00:57.760 --> 00:59.760
所以说我就这里直接把它补充进来

00:59.760 --> 01:03.760
第一个部分是关于也不说交代事件

01:03.760 --> 01:05.760
就是说表单事件

01:05.760 --> 01:07.760
这样子好一点

01:07.760 --> 01:08.760
表单事件这里有三个

01:08.760 --> 01:10.760
沙布美刺

01:10.760 --> 01:13.760
我把沙布美刺放上来

01:13.760 --> 01:16.760
无所谓 怎么去分内无所谓

01:16.760 --> 01:19.760
我就统一交到其他事件吧

01:19.760 --> 01:21.760
第一个 Focus

01:21.760 --> 01:23.760
Focus这个事件叫做聚焦事件

01:23.760 --> 01:26.760
聚焦的时候出发

01:26.760 --> 01:29.760
元素聚焦的时候出发

01:29.760 --> 01:31.760
聚焦什么意思呢

01:31.760 --> 01:32.760
大家应该知道的吧

01:32.760 --> 01:34.760
你们学过ATM和CSS

01:34.760 --> 01:37.760
表单元素它是能够聚焦的

01:37.760 --> 01:39.760
往往表单元素 当然不只表单元素

01:39.760 --> 01:41.760
像什么A元素

01:41.760 --> 01:44.760
A元素 什么一些video元素

01:44.760 --> 01:45.760
这些都会聚焦

01:45.760 --> 01:49.760
就是能够与用户发生交互的元素

01:49.760 --> 01:55.760
能与用户发生交互的元素

01:55.760 --> 01:56.760
都可以聚焦

01:56.760 --> 01:58.760
DIV这些就不能聚焦了

01:58.760 --> 02:00.760
它是个区域 它不能聚焦了

02:00.760 --> 02:02.760
这就是Focus

02:02.760 --> 02:04.760
好 咱们来看一下

02:04.760 --> 02:06.760
Focus这个事件

02:06.760 --> 02:11.580
Test1

02:11.580 --> 02:13.580
这里有个DIV

02:13.580 --> 02:15.580
然后里面有一个Input元素

02:15.580 --> 02:17.580
然后呢 给它

02:17.580 --> 02:18.580
给它什么呢

02:18.580 --> 02:21.580
我们直接给它注册聚焦事件

02:21.580 --> 02:22.580
聚焦事件

02:22.580 --> 02:24.580
当它获得焦点的时候

02:24.580 --> 02:26.580
获得焦点的时候会出发这个事件

02:26.580 --> 02:28.580
这个事件还蛮有用的

02:28.580 --> 02:30.580
这里我们得到这个Input元素

02:30.580 --> 02:31.580
Documents

02:32.580 --> 02:35.580
Input

02:35.580 --> 02:37.580
然后呢 给它注册聚焦事件

02:37.580 --> 02:39.580
Unfocus

02:39.580 --> 02:41.580
当聚焦的时候

02:41.580 --> 02:47.540
触发聚焦

02:47.540 --> 02:49.540
右键

02:49.540 --> 02:53.230
聚焦

02:53.230 --> 02:54.230
你看 是不是触发这个事件了

02:54.230 --> 02:55.230
对吧 聚焦事件

02:55.230 --> 02:57.230
有的时候不一定是用鼠标

02:57.230 --> 02:58.230
不一定是用鼠标

02:58.230 --> 03:00.230
我们按键盘的Type键来切换

03:00.230 --> 03:01.230
也可以聚焦

03:01.230 --> 03:03.230
你看 是不是也聚焦了

03:03.230 --> 03:04.230
也触发了

03:05.230 --> 03:06.230
再来一次

03:06.230 --> 03:07.230
Type键切换

03:07.230 --> 03:08.230
你看 是不是也聚焦了

03:08.230 --> 03:10.230
总之呢 它获得焦点之后

03:10.230 --> 03:12.230
你看这个光标在里面闪

03:12.230 --> 03:13.230
它获得这个焦点

03:13.230 --> 03:15.230
获得焦点之后

03:15.230 --> 03:16.230
它就会触发这个事件

03:16.230 --> 03:17.230
Focus这个事件

03:17.230 --> 03:19.230
好 我们再看一下这个DIV

03:19.230 --> 03:20.230
再看一下这个DIV

03:20.230 --> 03:22.230
好 我们得到

03:22.230 --> 03:24.230
虽然 我们说DIV

03:24.230 --> 03:26.230
本身没有聚焦事件

03:26.230 --> 03:28.230
那么我们看一下这个聚焦事件

03:28.230 --> 03:30.230
能不能冒泡到它上面呢

03:31.230 --> 03:33.230
它本身没有聚焦事件

03:33.230 --> 03:34.230
Focus

03:37.230 --> 03:38.230
Document

03:39.230 --> 03:40.230
Document

03:41.230 --> 03:42.230
Curious

03:43.230 --> 03:44.230
写啥呢 我在

03:45.230 --> 03:46.230
然后这里输出

03:48.230 --> 03:49.230
DIV聚焦

03:50.230 --> 03:51.230
DIV聚焦

03:52.230 --> 03:53.230
保存

03:53.230 --> 03:54.230
聚焦

03:55.230 --> 03:56.230
DIV聚焦

03:56.230 --> 03:57.230
DIV有没有聚焦事件

03:57.230 --> 03:58.230
你看 有没有

03:58.230 --> 03:59.230
DIV有没有聚焦

03:59.230 --> 04:00.230
没有

04:01.230 --> 04:03.230
并且同时说明了一个问题

04:03.230 --> 04:05.230
这个聚焦事件

04:05.230 --> 04:06.230
它没有什么

04:06.230 --> 04:07.230
没有冒泡

04:08.230 --> 04:09.230
Focus

04:11.230 --> 04:12.230
该事件

04:12.230 --> 04:13.230
不会冒泡

04:14.230 --> 04:15.230
不会冒泡

04:15.230 --> 04:16.230
其实你要看一个事件

04:16.230 --> 04:17.230
不会不会冒泡

04:17.230 --> 04:18.230
你这样子来测试

04:18.230 --> 04:19.230
就非常清楚了

04:19.230 --> 04:20.230
就什么 我们之前说过了

04:20.230 --> 04:21.230
对吧 说过了

04:21.230 --> 04:22.230
就是

04:22.230 --> 04:23.230
会不会冒泡了

04:23.230 --> 04:25.230
一把参数一里边

04:25.230 --> 04:26.230
对象一里边

04:26.230 --> 04:27.230
一个bubbles

04:28.230 --> 04:29.230
bubbles

04:29.230 --> 04:30.230
是不是会冒泡

04:30.230 --> 04:32.230
它就反映在这个数据里边

04:32.230 --> 04:33.230
如果能冒泡的话

04:33.230 --> 04:34.230
它就是去

04:34.230 --> 04:35.230
如果不能冒泡的话

04:35.230 --> 04:36.230
它就是force

04:36.230 --> 04:37.230
好 看一下

04:37.230 --> 04:38.230
force

04:38.230 --> 04:39.230
这个事件是不能冒泡的

04:39.230 --> 04:41.230
大家可以通过这个东西来测试

04:42.230 --> 04:43.230
这是

04:44.230 --> 04:45.230
第一个 Focus

04:45.230 --> 04:47.230
好 第二个是blur

04:47.230 --> 04:48.230
blur

04:48.230 --> 04:49.230
blur是什么意思呢

04:49.230 --> 04:51.230
就是失去焦点

04:51.230 --> 04:52.230
一开就是blur

04:52.230 --> 04:53.230
元素

04:53.230 --> 04:54.230
失去

04:55.230 --> 04:56.230
失去焦点

04:57.230 --> 04:58.230
焦点

04:59.230 --> 05:00.230
失出发

05:01.230 --> 05:03.230
那么这个事件也一样的

05:03.230 --> 05:04.230
该事件

05:04.230 --> 05:06.230
不会冒泡

05:06.230 --> 05:07.230
不会冒泡

05:07.230 --> 05:08.230
保存看一下

05:08.230 --> 05:09.230
看一下

05:09.230 --> 05:10.230
我们看一下这个事件

05:11.230 --> 05:12.230
然后我们这里给它注册

05:14.230 --> 05:15.230
input

05:15.230 --> 05:16.230
on

05:16.230 --> 05:17.230
blur

05:17.230 --> 05:18.230
blur

05:18.230 --> 05:19.230
它失去焦点的时候

05:19.230 --> 05:20.230
干嘛呢

05:20.230 --> 05:21.230
它失去焦点的时候

05:21.230 --> 05:23.230
我们输出这么多东西

05:23.230 --> 05:24.230
失去焦点

05:26.230 --> 05:27.230
失去焦点

05:28.230 --> 05:29.230
这啥呀

05:30.230 --> 05:31.230
保存

05:32.230 --> 05:33.230
看一下

05:33.230 --> 05:34.230
聚焦

05:35.230 --> 05:36.230
失去焦点

05:36.230 --> 05:37.230
你看 是不是都不会冒泡

05:37.230 --> 05:38.230
而且都出发的时间

05:38.230 --> 05:39.230
聚焦

05:40.230 --> 05:41.230
失去焦点

05:41.230 --> 05:43.230
你看 是不是都不会出发

05:43.230 --> 05:44.230
这个事件

05:44.230 --> 05:45.230
没问题吧

05:45.230 --> 05:46.230
OK

05:46.230 --> 05:48.230
这是聚焦和失去焦点

05:48.230 --> 05:49.230
那么利用这个东西

05:49.230 --> 05:50.230
可以做啥呢

05:50.230 --> 05:51.230
可以做个啥呢

05:51.230 --> 05:53.230
我们可以做这么一个件事

05:53.230 --> 05:54.230
就是

05:55.230 --> 05:56.230
比方说

05:56.230 --> 05:58.230
我们的网站上的网络会

05:58.230 --> 05:59.230
有这么一个文本框

05:59.230 --> 06:00.230
比方说

06:01.230 --> 06:02.230
搜索的时候

06:02.230 --> 06:03.230
比方说它是个搜索的文本框

06:03.230 --> 06:04.230
对吧

06:04.230 --> 06:06.230
它里边一开始有一些文字

06:06.230 --> 06:08.230
一开始有一些文字

06:08.230 --> 06:10.230
请输入

06:10.230 --> 06:11.230
请输入

06:13.230 --> 06:14.230
一个

06:14.230 --> 06:16.230
请输入关键字

06:16.230 --> 06:17.230
请输入关键字

06:17.230 --> 06:18.230
保存

06:19.230 --> 06:20.230
我们聚焦的时候

06:20.230 --> 06:22.230
把这个文字给移除掉

06:22.230 --> 06:24.230
把这个文字给移除掉

06:24.230 --> 06:26.230
然后失去焦点的时候

06:26.230 --> 06:27.230
再把这个文字给加回来

06:27.230 --> 06:28.230
对吧

06:28.230 --> 06:29.230
我们往往会做这么一件事

06:29.230 --> 06:30.230
其实这个功能

06:31.230 --> 06:32.230
以前都是这样做的

06:32.230 --> 06:34.230
以前都是用介石来控制的

06:34.230 --> 06:35.230
但是现在的这个功能

06:35.230 --> 06:37.230
是不是可以被Placeholder期待取代了

06:37.230 --> 06:38.230
对吧

06:38.230 --> 06:39.230
被这个玩意儿取代了

06:39.230 --> 06:40.230
对不对

06:40.230 --> 06:41.230
这个玩意你不用写任何的介石

06:41.230 --> 06:42.230
它本身就支持了

06:42.230 --> 06:43.230
对不对

06:43.230 --> 06:44.230
但是以前

06:45.230 --> 06:47.230
是得用这种方式来做的

06:47.230 --> 06:49.230
以前得用这种方式来做

06:49.230 --> 06:51.230
好 接下来怎么来做呢

06:51.230 --> 06:53.230
关键是咋做呢

06:53.230 --> 06:54.230
它是这样子

06:55.230 --> 06:57.230
我们还把做完

06:57.230 --> 06:58.230
把这个效果做完

06:58.230 --> 07:00.230
这是今天一个作业

07:00.230 --> 07:01.230
今天第一个作业

07:01.230 --> 07:02.230
第一个作业就说一下

07:03.230 --> 07:04.230
作业1

07:05.230 --> 07:06.230
就是

07:07.230 --> 07:08.230
这个应该叫啥呢

07:08.230 --> 07:09.230
应该叫啥呢

07:10.230 --> 07:11.230
作业1

07:11.230 --> 07:12.230
就这样子写吧

07:12.230 --> 07:13.230
我都不知道该叫啥

07:13.230 --> 07:14.230
作业1

07:17.230 --> 07:18.230
算了算了算了

07:18.230 --> 07:19.230
你干脆这样子

07:19.230 --> 07:20.230
我这里讲完之后

07:20.230 --> 07:22.230
你马上不要看暂停视频

07:22.230 --> 07:23.230
你直接把它做一遍

07:23.230 --> 07:24.230
直接把它做一遍

07:24.230 --> 07:25.230
一定要去练习一下

07:25.230 --> 07:26.230
一定要去练习一下

07:26.230 --> 07:28.230
不要多给它个样式

07:28.230 --> 07:29.230
给它个样式

07:29.230 --> 07:31.230
它一开始的默认样式呢

07:31.230 --> 07:32.230
比方说

07:32.230 --> 07:33.230
class

07:34.230 --> 07:35.230
low input

07:35.230 --> 07:37.230
就是没有就是

07:37.230 --> 07:39.230
没有就是那个

07:39.230 --> 07:40.230
什么

07:40.230 --> 07:43.540
没有输入文字的时候

07:43.540 --> 07:44.540
没有输入文字的时候

07:44.540 --> 07:45.540
它有这么一个样式

07:45.540 --> 07:46.540
low input

07:46.540 --> 07:47.540
这个样式

07:47.540 --> 07:49.540
这个样式就把它的文字颜色

07:49.540 --> 07:51.540
文字颜色变成CCC

07:52.540 --> 07:54.540
变成一个很淡的颜色

07:54.540 --> 07:55.540
一个很淡的颜色

07:55.540 --> 07:56.540
看没

07:56.540 --> 07:57.540
没问题吧

07:57.540 --> 07:58.540
好 接下来

07:58.540 --> 07:59.540
我们要做这么一件事

07:59.540 --> 08:01.540
当它聚焦的时候

08:01.540 --> 08:03.540
当它聚焦的时候

08:03.540 --> 08:04.540
干嘛呢

08:05.540 --> 08:06.540
看着

08:06.540 --> 08:08.540
当它聚焦的时候

08:08.540 --> 08:10.540
我把它的文字全部清空

08:10.540 --> 08:11.540
可以吗

08:11.540 --> 08:12.540
是不是可以

08:12.540 --> 08:13.540
非常简单对吧

08:13.540 --> 08:14.540
res点

08:15.540 --> 08:16.540
把它全部清空

08:16.540 --> 08:17.540
是不是完事了

08:17.540 --> 08:18.540
对不对

08:18.540 --> 08:19.540
把它聚焦的时候

08:20.540 --> 08:21.540
文字全部清空了

08:21.540 --> 08:22.540
对吧

08:22.540 --> 08:23.540
再输入文字

08:23.540 --> 08:24.540
但是再输入文字的颜色不太对

08:24.540 --> 08:25.540
对吧

08:25.540 --> 08:27.540
所以说我把那个内样式给它去掉

08:27.540 --> 08:28.540
内样式给它去掉

08:29.540 --> 08:31.540
res的class name

08:31.540 --> 08:32.540
等于空的

08:32.540 --> 08:33.540
没有内样式

08:33.540 --> 08:34.540
聚焦的时候

08:34.540 --> 08:35.540
文字清空

08:35.540 --> 08:36.540
然后

08:36.540 --> 08:37.540
内样式给它去掉

08:38.540 --> 08:39.540
你看

08:40.540 --> 08:42.540
好 然后移开的时候干嘛呢

08:43.540 --> 08:44.540
移开的时候

08:44.540 --> 08:45.540
我们先说这个聚焦

08:45.540 --> 08:47.540
那么现在我写了一些文字之后

08:47.540 --> 08:48.540
过后再举一脚

08:48.540 --> 08:50.540
是不是也给我清空了

08:50.540 --> 08:51.540
因此你是不是得判断

08:51.540 --> 08:52.540
对吧

08:52.540 --> 08:53.540
得判断

08:53.540 --> 08:54.540
什么情况要清空呢

08:54.540 --> 08:55.540
就是

08:55.540 --> 08:56.540
如果

08:56.540 --> 08:57.540
当前的文字

08:57.540 --> 08:58.540
等于了啥呢

08:58.540 --> 09:00.540
所以等于这段文字

09:00.540 --> 09:01.540
只有是这段文字的时候

09:01.540 --> 09:02.540
我才清空

09:02.540 --> 09:03.540
就是它的等于

09:03.540 --> 09:05.540
默认文字的时候才清空

09:05.540 --> 09:06.540
才清空

09:08.540 --> 09:09.540
保存

09:09.540 --> 09:10.540
看一下

09:10.540 --> 09:12.540
只有等于默认文字的时候清空

09:12.540 --> 09:13.540
不是默认文字的时候

09:13.540 --> 09:14.540
不清空

09:14.540 --> 09:15.540
对吧

09:15.540 --> 09:16.540
就不清空

09:16.540 --> 09:17.540
你看这意思吧

09:19.540 --> 09:20.540
其实这里呢

09:20.540 --> 09:21.540
你不用写词

09:21.540 --> 09:23.540
因为在文文框里边

09:23.540 --> 09:24.540
它还有一个属性叫做

09:24.540 --> 09:26.540
Default Value

09:26.540 --> 09:28.540
文文框里边有这么一个属性

09:28.540 --> 09:29.540
Default Value

09:29.540 --> 09:30.540
表示它默认的Value值

09:30.540 --> 09:31.540
就是一开始

09:31.540 --> 09:33.540
你在这里设置的Value值

09:33.540 --> 09:35.540
在这里设置的Value值

09:35.540 --> 09:37.540
你可以用这个东西来定

09:37.540 --> 09:38.540
是不是一样的

09:38.540 --> 09:39.540
一样的

09:40.540 --> 09:42.540
你可以用这个东西来判定

09:42.540 --> 09:44.540
你不用把它文字写词

09:44.540 --> 09:45.540
Default Value值

09:45.540 --> 09:46.540
Default Value值

09:46.540 --> 09:48.540
是它默认情况下的Value值

09:48.540 --> 09:49.540
其实也可以用啥呢

09:49.540 --> 09:50.540
也可以用我们之前

09:50.540 --> 09:51.540
用法很多

09:51.540 --> 09:53.540
Galaxy HB值

09:53.540 --> 09:54.540
对吧

09:54.540 --> 09:55.540
这东西你得到的是啥

09:55.540 --> 09:56.540
得到的是是不是在这里

09:56.540 --> 09:57.540
书写的东西

09:57.540 --> 09:58.540
对不对

09:58.540 --> 09:59.540
在这个属性里边

09:59.540 --> 10:00.540
书写的东西

10:00.540 --> 10:01.540
Galaxy HB值Value

10:01.540 --> 10:02.540
这个也行

10:02.540 --> 10:03.540
也行

10:03.540 --> 10:04.540
你看看

10:04.540 --> 10:05.540
也行

10:06.540 --> 10:07.540
这几种方式都行

10:07.540 --> 10:09.540
我们用Default Value

10:09.540 --> 10:10.540
好

10:10.540 --> 10:11.540
然后还有个什么功能呢

10:11.540 --> 10:12.540
就是

10:12.540 --> 10:13.540
如果你写了半天

10:13.540 --> 10:14.540
你啥都没写

10:15.540 --> 10:16.540
然后又移开

10:16.540 --> 10:17.540
又移开的话

10:17.540 --> 10:18.540
是不是

10:18.540 --> 10:19.540
得怎么样

10:19.540 --> 10:21.540
是不是得把它变回来

10:21.540 --> 10:22.540
对不对

10:22.540 --> 10:23.540
得把它变回来

10:23.540 --> 10:24.540
咱们来看一下

10:24.540 --> 10:25.540
是不是要注册Blur时间

10:25.540 --> 10:26.540
对吧

10:26.540 --> 10:27.540
Unblur时间

10:27.540 --> 10:30.540
就是失去焦点的时候

10:30.540 --> 10:31.540
判断一下

10:31.540 --> 10:33.540
如果你没有文本

10:33.540 --> 10:34.540
失去焦点的时候

10:34.540 --> 10:35.540
如果你没有文本

10:35.540 --> 10:36.540
判断

10:36.540 --> 10:37.540
If this value

10:38.540 --> 10:39.540
如果

10:39.540 --> 10:40.540
为空

10:40.540 --> 10:41.540
对吧

10:41.540 --> 10:42.540
空之物算

10:42.540 --> 10:43.540
判定为Force

10:43.540 --> 10:44.540
对吧

10:44.540 --> 10:45.540
如果你没有文本

10:45.540 --> 10:46.540
如果你没有文本

10:46.540 --> 10:47.540
咋样呢

10:47.540 --> 10:48.540
咋样呢

10:48.540 --> 10:49.540
我是不是

10:49.540 --> 10:51.540
又得把你这个Value值变回去

10:51.540 --> 10:52.540
对不对

10:52.540 --> 10:53.540
又得把你的Value

10:53.540 --> 10:55.540
我这个Value值变回去

10:55.540 --> 10:56.540
变成啥呢

10:56.540 --> 10:57.540
变成

10:58.540 --> 10:59.540
Default Value

10:59.540 --> 11:00.540
对吧

11:00.540 --> 11:01.540
Yes

11:01.540 --> 11:02.540
Default Value

11:03.540 --> 11:04.540
把它变回去

11:04.540 --> 11:05.540
然后class name

11:05.540 --> 11:06.540
是不是要把它加回去

11:06.540 --> 11:07.540
对吧

11:07.540 --> 11:08.540
No input

11:08.540 --> 11:09.540
No input

11:09.540 --> 11:11.540
把它加回去

11:12.540 --> 11:13.540
保存看一下

11:14.540 --> 11:15.540
聚焦

11:15.540 --> 11:16.540
如果你啥都没写

11:16.540 --> 11:17.540
一些几个空格都想

11:17.540 --> 11:19.540
但是如果你啥都没写的话

11:19.540 --> 11:20.540
再移开

11:20.540 --> 11:21.540
它又给你变回去了

11:22.540 --> 11:23.540
这就是以前的

11:23.540 --> 11:24.540
就是这种

11:24.540 --> 11:25.540
这种效果的做法

11:26.540 --> 11:27.540
但这个效果呢

11:27.540 --> 11:28.540
会有个bug

11:28.540 --> 11:29.540
会有个bug

11:29.540 --> 11:30.540
什么bug呢

11:30.540 --> 11:31.540
就是在你这里

11:31.540 --> 11:32.540
你就是这样子写

11:32.540 --> 11:33.540
请输入

11:34.540 --> 11:35.540
关键字

11:36.540 --> 11:37.540
移开

11:38.540 --> 11:39.540
回去

11:40.540 --> 11:43.540
请输入关键字

11:43.540 --> 11:44.540
关键字

11:44.540 --> 11:45.540
它为什么会有

11:45.540 --> 11:46.540
这样的bug呢

11:46.540 --> 11:47.540
没办法

11:47.540 --> 11:48.540
因为你这里写了文字

11:48.540 --> 11:49.540
对吧

11:49.540 --> 11:50.540
你写了文字

11:50.540 --> 11:52.540
你一会儿再聚焦的时候

11:52.540 --> 11:53.540
你一会儿再聚焦的时候

11:53.540 --> 11:54.540
它

11:54.540 --> 11:56.540
跟这个Default Value

11:56.540 --> 11:57.540
相等的

11:57.540 --> 11:58.540
它不知道

11:58.540 --> 11:59.540
它不知道

11:59.540 --> 12:00.540
到底是怎么回事

12:00.540 --> 12:01.540
它不知道你

12:01.540 --> 12:02.540
到底是怎么回事

12:02.540 --> 12:03.540
这个东西到底有没有

12:03.540 --> 12:04.540
就是

12:04.540 --> 12:05.540
有没有就是那个

12:06.540 --> 12:07.540
是不是你自己

12:07.540 --> 12:08.540
它不知道

12:08.540 --> 12:09.540
自己写的呢

12:09.540 --> 12:10.540
还是一开始

12:10.540 --> 12:11.540
你就没改动过

12:11.540 --> 12:12.540
它并不知道

12:12.540 --> 12:13.540
并不知道

12:13.540 --> 12:14.540
所以说呢

12:14.540 --> 12:15.540
它这个地方没有处理

12:15.540 --> 12:16.540
那如果要处理的话

12:16.540 --> 12:17.540
能不能处理这一块

12:17.540 --> 12:19.540
那肯定是可以处理的

12:19.540 --> 12:20.540
肯定是可以处理的

12:20.540 --> 12:22.540
怎么来处理呢

12:22.540 --> 12:23.540
怎么来处理呢

12:24.540 --> 12:25.540
咋处理

12:26.540 --> 12:27.540
咋处理呢

12:27.540 --> 12:28.540
你就

12:28.540 --> 12:29.540
监测什么

12:29.540 --> 12:30.540
那个

12:31.540 --> 12:32.540
keyprice

12:32.540 --> 12:33.540
监测keyprice

12:33.540 --> 12:36.540
如果你按了键盘的按键之后

12:36.540 --> 12:37.540
如果你按了按键的话

12:37.540 --> 12:38.540
把它记录一个布耳直

12:38.540 --> 12:40.540
把它记录一个布耳直

12:40.540 --> 12:41.540
那处理鞋比较复杂

12:41.540 --> 12:43.540
就在这里边按了按键过后

12:43.540 --> 12:45.540
里边记录一个布耳直

12:45.540 --> 12:46.540
记录布耳直过后

12:46.540 --> 12:48.540
如果再离开的时候

12:48.540 --> 12:49.540
再离开的时候

12:49.540 --> 12:50.540
那么

12:50.540 --> 12:51.540
在进入的时候

12:51.540 --> 12:52.540
你看一下之前有没有按按键

12:52.540 --> 12:54.540
如果之前是有按按键的话

12:54.540 --> 12:56.540
说明那个字是打出来的

12:56.540 --> 12:57.540
是打出来的

12:57.540 --> 12:58.540
没有这个意思吧

12:58.540 --> 13:00.540
那或者是你根据这个classname

13:00.540 --> 13:01.540
判断也行

13:01.540 --> 13:03.540
根据这个classname判断也行

13:03.540 --> 13:04.540
比方说

13:05.540 --> 13:07.540
你再判断这个classname

13:07.540 --> 13:08.540
并且呢

13:08.540 --> 13:09.540
叫classname

13:09.540 --> 13:10.540
等于啥呢

13:10.540 --> 13:12.540
等于no input

13:13.540 --> 13:15.540
通过classname来判断也行

13:15.540 --> 13:16.540
对吧

13:16.540 --> 13:18.540
因为你自己打了文字

13:18.540 --> 13:19.540
你自己打了文字

13:19.540 --> 13:21.540
它是没有改变那个classname的

13:21.540 --> 13:23.540
classname是怎么改时候改变的

13:23.540 --> 13:24.540
就是

13:24.540 --> 13:25.540
如果你它是默认文字

13:25.540 --> 13:26.540
你进去要过后

13:26.540 --> 13:29.540
它会把它classname给你清掉

13:29.540 --> 13:30.540
给你清掉

13:30.540 --> 13:32.540
然后呢

13:32.540 --> 13:33.540
你离开的时候

13:33.540 --> 13:34.540
你离开的时候

13:34.540 --> 13:36.540
除非你啥都没有写

13:36.540 --> 13:38.540
我才会给你加这个no input

13:38.540 --> 13:39.540
单凡你写的东西

13:39.540 --> 13:40.540
它的classname都是空

13:40.540 --> 13:41.540
对吧

13:41.540 --> 13:43.540
你可以通过这个classname来控制

13:43.540 --> 13:44.540
比方说啊

13:44.540 --> 13:45.540
这种情况

13:45.540 --> 13:47.540
进去你写的东西的时候

13:47.540 --> 13:48.540
你写的东西的时候

13:48.540 --> 13:49.540
它的classname

13:49.540 --> 13:52.540
它一定不再是no input了

13:52.540 --> 13:53.540
你写的东西

13:53.540 --> 13:54.540
因为之前

13:54.540 --> 13:55.540
你聚焦的时候

13:55.540 --> 13:56.540
就把classname给你清空掉了

13:56.540 --> 13:57.540
你看一下

13:57.540 --> 13:58.540
这个元素嘛

14:00.540 --> 14:01.540
你看classname

14:01.540 --> 14:02.540
看这

14:03.540 --> 14:04.540
是不是没了

14:04.540 --> 14:05.540
那样是没了

14:05.540 --> 14:07.540
然后在这里边写东西

14:07.540 --> 14:09.540
它写东西也不会改变那样式啊

14:09.540 --> 14:11.540
请输入关键字

14:11.540 --> 14:13.540
也不会改变那样式啊

14:13.540 --> 14:14.540
离开

14:14.540 --> 14:15.540
那个是

14:15.540 --> 14:16.540
那样式是不是没变化

14:16.540 --> 14:17.540
对吧

14:17.540 --> 14:18.540
那样式没有变化

14:18.540 --> 14:19.540
它是正常的一个那样式

14:19.540 --> 14:21.540
因为你写的文字

14:21.540 --> 14:22.540
那样式

14:22.540 --> 14:23.540
只有一种情况会变回去

14:23.540 --> 14:24.540
就是你啥都没写

14:24.540 --> 14:25.540
啥都没写的话

14:25.540 --> 14:26.540
那样式会变回去

14:26.540 --> 14:27.540
只要你写的东西

14:27.540 --> 14:28.540
那样式是不会变的

14:28.540 --> 14:29.540
那么这个时候

14:29.540 --> 14:30.540
你再聚焦的时候

14:30.540 --> 14:31.540
它不会变化回去

14:31.540 --> 14:32.540
因为它那样式正确了

14:32.540 --> 14:34.540
也可以通过那个那样式来判定

14:34.540 --> 14:35.540
都行

14:35.540 --> 14:36.540
总之可以搞

14:36.540 --> 14:37.540
也是可以搞定的

14:37.540 --> 14:39.540
只是有的时候

14:39.540 --> 14:40.540
不太会想到这一点

14:40.540 --> 14:41.540
不太会想到这一点

14:41.540 --> 14:42.540
其实这一点

14:42.540 --> 14:43.540
你不做和不做

14:43.540 --> 14:44.540
无所谓的

14:44.540 --> 14:45.540
真的无所谓的

14:45.540 --> 14:46.540
因为谁会吃多了

14:46.540 --> 14:48.540
去跑去写这个玩意呢

14:48.540 --> 14:49.540
我不是吃饱了撑着吗

14:49.540 --> 14:50.540
对不对

14:50.540 --> 14:51.540
没有必要

14:51.540 --> 14:52.540
没有必要

14:52.540 --> 14:53.540
其实你看很多网站

14:53.540 --> 14:54.540
它都没有咋处理

14:54.540 --> 14:55.540
对吧

14:55.540 --> 14:57.540
成功的视频里边也说了这个点

14:57.540 --> 14:58.540
你看咱们新浪

14:58.540 --> 14:59.540
对吧

14:59.540 --> 15:00.540
新浪

15:01.540 --> 15:02.540
很大的网站了

15:02.540 --> 15:03.540
对不对

15:03.540 --> 15:05.540
然后点击

15:05.540 --> 15:07.540
这里请输入关键字

15:07.540 --> 15:09.540
请输入关键字

15:09.540 --> 15:10.540
点击继续没了

15:10.540 --> 15:11.540
然后我们这里就是

15:11.540 --> 15:15.540
请输入关键字

15:15.540 --> 15:16.540
移开

15:16.540 --> 15:17.540
再进去

15:17.540 --> 15:18.540
所以也没了

15:18.540 --> 15:20.540
我们自己打了文字也没了

15:20.540 --> 15:21.540
所以它这里

15:21.540 --> 15:22.540
就直接是这样判断的

15:22.540 --> 15:23.540
那么它写到哪儿的

15:23.540 --> 15:24.540
它以前

15:24.540 --> 15:25.540
很多开发者

15:25.540 --> 15:26.540
他喜欢写到这

15:26.540 --> 15:28.540
写到这个Input的

15:28.540 --> 15:30.540
就是用Dom0的这种方式

15:30.540 --> 15:32.540
把这个世界当成属性写到这

15:32.540 --> 15:33.540
写到这

15:33.540 --> 15:34.540
能不能写呢

15:34.540 --> 15:35.540
当然可以写

15:35.540 --> 15:36.540
当然可以写

15:36.540 --> 15:37.540
而且它写的

15:37.540 --> 15:38.540
真的是比较丑

15:38.540 --> 15:39.540
真的是比较丑

15:39.540 --> 15:41.540
真的你不要去看那些大厂

15:41.540 --> 15:43.540
大厂里边感觉好像很牛的一样子

15:43.540 --> 15:44.540
里面全是技术大神

15:44.540 --> 15:45.540
没有

15:45.540 --> 15:46.540
没有

15:46.540 --> 15:47.540
真的没有那么多的技术大神

15:47.540 --> 15:48.540
我真的不想吐槽了

15:48.540 --> 15:50.540
就不想吐槽了

15:50.540 --> 15:51.540
混水摸鱼的

15:51.540 --> 15:52.540
多的要命

15:52.540 --> 15:54.540
真的是多的要命

15:54.540 --> 15:56.540
而且

15:56.540 --> 15:57.540
算了

15:57.540 --> 15:58.540
就说说吧

15:58.540 --> 15:59.540
这也没啥

15:59.540 --> 16:02.540
都是行内的都知道的

16:02.540 --> 16:04.540
就是很多大厂里边

16:04.540 --> 16:06.540
不少的大厂有很多的那种

16:06.540 --> 16:07.540
我就不点名了

16:07.540 --> 16:09.540
就很多的官僚作风

16:09.540 --> 16:10.540
就咋了

16:10.540 --> 16:14.540
就是高层管理层

16:14.540 --> 16:16.540
或者是中层

16:16.540 --> 16:18.540
那帮人他们只负责什么

16:18.540 --> 16:20.540
只负责提前译

16:20.540 --> 16:21.540
或者是做规划

16:21.540 --> 16:22.540
他不做事了

16:22.540 --> 16:23.540
他完全是不做事了

16:23.540 --> 16:24.540
现在喊口号

16:24.540 --> 16:25.540
然后真正做事的

16:25.540 --> 16:26.540
其实

16:26.540 --> 16:27.540
相当于是

16:27.540 --> 16:29.540
相当于我们大学里时候的学生会

16:29.540 --> 16:31.540
就检查卫生

16:31.540 --> 16:33.540
一个人检查卫生

16:33.540 --> 16:34.540
然后

16:34.540 --> 16:35.540
就一个人直到

16:35.540 --> 16:36.540
对吧

16:36.540 --> 16:37.540
一个人直到

16:37.540 --> 16:38.540
一个人做笔记

16:38.540 --> 16:39.540
一个人问话

16:39.540 --> 16:40.540
一个人负责敲门

16:40.540 --> 16:42.540
然后最后一个人负责检查卫生

16:42.540 --> 16:44.540
真正做事的就那么几个人

16:44.540 --> 16:45.540
别看一大堆人

16:45.540 --> 16:47.540
其实好多人他不做事的

16:47.540 --> 16:48.540
就喊口号的

16:48.540 --> 16:51.540
关到气氛还是蛮严重的

16:51.540 --> 16:52.540
特别是那种大厂

16:52.540 --> 16:54.540
很容易出现这个问题

16:54.540 --> 16:56.540
真的很容易出现这个问题

16:57.540 --> 16:58.540
好

16:58.540 --> 17:00.540
这个就是

17:00.540 --> 17:01.540
它是这样子写的

17:01.540 --> 17:02.540
它是在这里判断

17:02.540 --> 17:03.540
是不是一样的

17:03.540 --> 17:04.540
Race Value等于啥啥

17:04.540 --> 17:05.540
把Class Name改掉

17:05.540 --> 17:06.540
对吧

17:06.540 --> 17:07.540
跟我们这里格式是一样的

17:07.540 --> 17:09.540
只不过它把这个格式写到哪儿了

17:09.540 --> 17:10.540
它写到哪儿了

17:10.540 --> 17:12.540
它写到这儿了

17:12.540 --> 17:14.540
它把这个代码写到哪儿了

17:14.540 --> 17:16.540
它把这个代码写到这儿了

17:16.540 --> 17:18.540
Unfocus写到这儿了

17:18.540 --> 17:19.540
那好不好

17:19.540 --> 17:20.540
不是说别人大成用了就好

17:20.540 --> 17:21.540
肯定是好的

17:21.540 --> 17:22.540
好个屁

17:22.540 --> 17:23.540
肯定不能这样做

17:23.540 --> 17:24.540
肯定不能这样做

17:24.540 --> 17:26.540
这种做法太low了

17:26.540 --> 17:28.540
你把介绍代码和这个什么

17:28.540 --> 17:29.540
一些代码混在一起

17:29.540 --> 17:30.540
不要这样做

17:30.540 --> 17:31.540
别人大成用

17:31.540 --> 17:33.540
因为它为了图方便

17:33.540 --> 17:34.540
就这么几句代码

17:34.540 --> 17:35.540
它懒得去

17:35.540 --> 17:36.540
Screeper元素里边写了

17:36.540 --> 17:37.540
在这里边写了

17:37.540 --> 17:38.540
它直接在这里写了

17:38.540 --> 17:39.540
不要去这样做

17:39.540 --> 17:40.540
尽管很多地方都这样

17:40.540 --> 17:41.540
很多时候都

17:41.540 --> 17:42.540
他们在这里

17:42.540 --> 17:44.540
一些简单代码就在这里写了

17:44.540 --> 17:45.540
但是不要这样做

17:45.540 --> 17:46.540
好吧

17:46.540 --> 17:47.540
好

17:47.540 --> 17:49.540
这是这个聚焦

17:49.540 --> 17:51.540
和失去焦点的时间

17:51.540 --> 17:52.540
然后下一个时间

17:52.540 --> 17:54.540
下个时间叫submit

17:54.540 --> 17:55.540
submit

17:55.540 --> 17:58.540
表示提交表单时间

17:58.540 --> 18:00.540
提交表单时间

18:00.540 --> 18:02.540
就是表单触发提交的时候

18:02.540 --> 18:03.540
它会触发这个时间

18:03.540 --> 18:04.540
那么这个时间

18:04.540 --> 18:08.540
指负就是仅占

18:08.540 --> 18:12.540
forum元素上优效

18:12.540 --> 18:13.540
其他元素哪有什么提交

18:13.540 --> 18:14.540
对吧

18:14.540 --> 18:15.540
按钮提交

18:15.540 --> 18:17.540
比如说有提交按钮

18:17.540 --> 18:18.540
点提交按钮的时候

18:18.540 --> 18:19.540
提交的是啥

18:19.540 --> 18:21.540
提交的是整个forum表单

18:21.540 --> 18:24.540
也会触发forum表单的提交时间

18:24.540 --> 18:25.540
是这么个意思

18:25.540 --> 18:26.540
这么个意思

18:26.540 --> 18:27.540
比方说

18:27.540 --> 18:31.540
比方说咱们的TES2

18:31.540 --> 18:35.540
这里一个表单

18:35.540 --> 18:36.540
forum表单

18:36.540 --> 18:37.540
一个表单

18:37.540 --> 18:38.540
然后表单里边

18:38.540 --> 18:39.540
啥都没有

18:39.540 --> 18:40.540
就几个按钮

18:40.540 --> 18:42.540
按钮1

18:42.540 --> 18:45.540
按钮2

18:45.540 --> 18:46.540
按钮2

18:46.540 --> 18:47.540
对吧

18:47.540 --> 18:48.540
然后上面再写一个那个

18:48.540 --> 18:51.860
写个文门框

18:51.860 --> 18:54.860
文门框

18:54.860 --> 18:55.860
现在都用这个了

18:55.860 --> 18:58.860
请输入账号

18:58.860 --> 18:59.860
请输入账号

18:59.860 --> 19:00.860
下面提交吧

19:00.860 --> 19:01.860
提交

19:01.860 --> 19:02.860
对不对

19:02.860 --> 19:03.860
接下来

19:03.860 --> 19:04.860
我们来做这么一个练习

19:04.860 --> 19:06.860
非常非常小的练习

19:06.860 --> 19:07.860
刚才说了

19:07.860 --> 19:08.860
我讲了过

19:08.860 --> 19:09.860
马上去做一遍

19:09.860 --> 19:10.860
马上去做一遍

19:10.860 --> 19:11.860
客常练习

19:11.860 --> 19:12.860
不要等

19:12.860 --> 19:14.860
然后下面这个

19:14.860 --> 19:17.860
我们这里也是个客常练习

19:17.860 --> 19:18.860
非常简单练习一下

19:18.860 --> 19:19.860
因为这个东西

19:19.860 --> 19:20.860
还蛮常用的

19:20.860 --> 19:21.860
关键是

19:21.860 --> 19:22.860
特别是在表达这一块

19:22.860 --> 19:23.860
处理的时候蛮常用的

19:23.860 --> 19:25.860
表达验证

19:25.860 --> 19:27.860
如果你这一块

19:27.860 --> 19:29.860
你没有写东西

19:29.860 --> 19:30.860
没有写东西的话

19:30.860 --> 19:31.860
我给你提示

19:31.860 --> 19:32.860
请输入账号

19:32.860 --> 19:33.860
如果你没有写的话

19:33.860 --> 19:34.860
是不允许你提交的

19:34.860 --> 19:35.860
那目前这个情况

19:35.860 --> 19:37.860
你是肯定是阻止不了的

19:37.860 --> 19:38.860
目前这个情况

19:38.860 --> 19:39.860
你肯定是阻止不了的

19:39.860 --> 19:40.860
点按钮1

19:40.860 --> 19:41.860
你看刷新没

19:41.860 --> 19:42.860
你看刷新没

19:42.860 --> 19:43.860
你看刷新没

19:43.860 --> 19:44.860
你看不到刷新

19:44.860 --> 19:45.860
那我们把提交到

19:45.860 --> 19:46.860
另外一个网页

19:46.860 --> 19:47.860
提交到淘宝

19:47.860 --> 19:48.860
淘宝帮我来处理一下

19:48.860 --> 19:49.860
这个账号

19:49.860 --> 19:50.860
给你处理啥

19:50.860 --> 19:51.860
不会给你处理的

19:51.860 --> 19:52.860
不会给你处理的

19:52.860 --> 19:53.860
只不过呢

19:53.860 --> 19:54.860
我们可以看到效果

19:54.860 --> 19:55.860
你点击过后

19:55.860 --> 19:56.860
就跑到淘宝去了

19:56.860 --> 19:57.860
对吧

19:57.860 --> 19:59.860
那么现在的账号都没有写

19:59.860 --> 20:00.860
能提交吗

20:00.860 --> 20:01.860
肯定不能提交

20:01.860 --> 20:02.860
我要验证的

20:02.860 --> 20:03.860
既也是出现了

20:03.860 --> 20:04.860
最开始

20:04.860 --> 20:06.860
既也是出现了目的

20:06.860 --> 20:08.860
就是为了做这些验证

20:08.860 --> 20:09.860
真的

20:09.860 --> 20:10.860
真的

20:10.860 --> 20:11.860
不骗你

20:11.860 --> 20:12.860
他就是为了做这些验证

20:12.860 --> 20:14.860
这是他最核心的目的

20:14.860 --> 20:15.860
那么

20:15.860 --> 20:16.860
我们这里要做验证

20:16.860 --> 20:17.860
怎么办呢

20:17.860 --> 20:19.860
我就要在他提交之前

20:19.860 --> 20:21.860
看一看

20:21.860 --> 20:23.860
你账号是不是合法的

20:23.860 --> 20:25.860
如果不合法的话

20:25.860 --> 20:26.860
我就不允许的提交了

20:26.860 --> 20:27.860
那应该怎么做呢

20:27.860 --> 20:28.860
有些人说

20:28.860 --> 20:30.860
我们是注册这个按钮点击事件

20:30.860 --> 20:31.860
可不可以

20:31.860 --> 20:32.860
当然可以

20:32.860 --> 20:33.860
但是这不好

20:33.860 --> 20:34.860
为什么不好呢

20:34.860 --> 20:36.860
因为你按钮可能比较多

20:36.860 --> 20:38.860
有可能他提交的方式比较多

20:38.860 --> 20:39.860
有可能这里要点提交

20:39.860 --> 20:41.860
有可能点这个按钮

20:41.860 --> 20:42.860
也会提交

20:42.860 --> 20:43.860
有可能一会

20:43.860 --> 20:45.860
还会用别的方式提交

20:45.860 --> 20:46.860
他提交的方式很多

20:46.860 --> 20:47.860
他会很多

20:47.860 --> 20:49.860
那么这里的最好是用什么

20:49.860 --> 20:51.860
在源头上控制

20:51.860 --> 20:52.860
你无论怎么提交

20:52.860 --> 20:54.860
提交的始终是这个form

20:54.860 --> 20:55.860
对吧

20:55.860 --> 20:56.860
提交的始终始终的表单

20:56.860 --> 20:57.860
好

20:57.860 --> 20:58.860
我给这个表单注册事件

20:58.860 --> 20:59.860
什么事件呢

20:59.860 --> 21:00.860
找这个表单

21:01.860 --> 21:03.860
document query

21:03.860 --> 21:04.860
我们之前说过

21:04.860 --> 21:05.860
这个表单

21:05.860 --> 21:06.860
或许他表单元素

21:06.860 --> 21:07.860
你还可以用这个

21:07.860 --> 21:09.860
这是动名的方式

21:09.860 --> 21:10.860
forms

21:10.860 --> 21:11.860
forms

21:11.860 --> 21:12.860
得到所有的表单

21:12.860 --> 21:13.860
然后取他第一个

21:13.860 --> 21:14.860
对吧

21:14.860 --> 21:15.860
如果页面上

21:15.860 --> 21:16.860
不了的话

21:16.860 --> 21:17.860
可以用这种方式

21:17.860 --> 21:18.860
有的时候

21:18.860 --> 21:19.860
你在公司里面

21:19.860 --> 21:20.860
会看到这样的代码

21:20.860 --> 21:21.860
我不太喜欢这样的代码

21:22.860 --> 21:23.860
纯粹是不喜欢

21:23.860 --> 21:24.860
这个东西没有什么好和坏

21:24.860 --> 21:25.860
纯粹是不喜欢

21:26.860 --> 21:27.860
这里

21:27.860 --> 21:28.860
form

21:28.860 --> 21:29.860
给他注册事件

21:29.860 --> 21:30.860
unsubmit

21:31.860 --> 21:33.860
当提交的时候干嘛

21:33.860 --> 21:34.860
提交的时候干嘛

21:36.860 --> 21:37.860
提交的时候

21:37.860 --> 21:38.860
比方说

21:38.860 --> 21:39.860
比方说

21:39.860 --> 21:40.860
我这里验证失败了

21:40.860 --> 21:41.860
你没有输账号

21:41.860 --> 21:42.860
没有输账号

21:42.860 --> 21:43.860
不允许的提交

21:43.860 --> 21:44.860
那怎么办

21:44.860 --> 21:45.860
非常简单

21:45.860 --> 21:46.860
return force

21:47.860 --> 21:48.860
return force

21:48.860 --> 21:49.860
返回force

21:49.860 --> 21:50.860
来看一下

21:50.860 --> 21:51.860
那现在能提交吗

21:51.860 --> 21:53.860
那现在随便怎么样都提交不了了

21:53.860 --> 21:54.860
随便怎么玩

21:54.860 --> 21:55.860
你想提交表单

21:55.860 --> 21:56.860
那对不起

21:56.860 --> 21:58.860
因为我要触发表单事件

21:58.860 --> 21:59.860
只要一提交

21:59.860 --> 22:00.860
我就会触发表单事件

22:00.860 --> 22:01.860
看着

22:01.860 --> 22:04.680
表单

22:04.680 --> 22:05.680
正在

22:05.680 --> 22:06.680
被提交

22:07.680 --> 22:08.680
他会触发表单事件

22:08.680 --> 22:09.680
看没

22:09.680 --> 22:12.180
他会触发表单事件

22:12.180 --> 22:13.180
那么我这里

22:13.180 --> 22:14.180
在这个事件里边

22:14.180 --> 22:15.180
return force表示什么意思

22:15.180 --> 22:17.180
表示阻止默认行为

22:17.180 --> 22:18.180
你默认行为

22:18.180 --> 22:19.180
不是要传统到服务器吗

22:19.180 --> 22:20.180
对吧

22:20.180 --> 22:21.180
你把这些数据

22:21.180 --> 22:23.180
发送到服务器

22:23.180 --> 22:24.180
OK

22:24.180 --> 22:25.180
那么我这里

22:25.180 --> 22:26.180
不允许的发送

22:26.180 --> 22:27.180
不允许的发送

22:27.180 --> 22:29.180
或者用1.

22:29.180 --> 22:31.180
prevent default

22:31.180 --> 22:32.180
是一样的

22:32.180 --> 22:34.180
不允许的发送

22:34.180 --> 22:35.180
你看

22:35.180 --> 22:37.180
他只触发这个事件

22:37.180 --> 22:38.180
他不会发送

22:38.180 --> 22:39.180
没有这些

22:39.180 --> 22:40.180
好

22:40.180 --> 22:41.180
那么在这里边

22:41.180 --> 22:42.180
是不是可以判断的

22:42.180 --> 22:43.180
对吧

22:43.180 --> 22:45.180
判断一下

22:45.180 --> 22:46.180
来吧

22:46.180 --> 22:47.180
让他写一下

22:47.180 --> 22:48.180
得到这个input元素

22:48.180 --> 22:49.180
刚刚一个表单里面

22:49.180 --> 22:50.180
肯定是不止一个

22:50.180 --> 22:51.180
不止一个

22:51.180 --> 22:53.180
我这里就简略的写一下

22:53.180 --> 22:54.180
input元素

22:55.180 --> 22:56.180
好

22:56.180 --> 22:57.180
怎么样了

22:57.180 --> 22:59.180
判断一下

22:59.180 --> 23:00.180
如果

23:00.180 --> 23:01.180
没有值

23:01.180 --> 23:02.180
没有值

23:02.180 --> 23:03.180
就是input value

23:03.180 --> 23:04.180
这是他的

23:04.180 --> 23:05.180
就是文闷框的值

23:05.180 --> 23:06.180
对吧

23:06.180 --> 23:07.180
然后再把它区泥一下

23:07.180 --> 23:08.180
去掉所谓空格

23:08.180 --> 23:09.180
因为有的时候

23:09.180 --> 23:10.180
特别是用户输的时候

23:10.180 --> 23:11.180
你搞不起

23:11.180 --> 23:12.180
有些用户

23:12.180 --> 23:14.180
我不知道是不是近5团玩多了

23:14.180 --> 23:15.180
他每去进一个文闷框

23:15.180 --> 23:16.180
啪啪啪

23:16.180 --> 23:18.180
先抢几个空格再说

23:18.180 --> 23:20.180
因为了防止这种用户

23:20.180 --> 23:22.180
你把所谓空格给它去掉

23:22.180 --> 23:23.180
所谓空格去掉

23:23.180 --> 23:24.180
去掉之后来再判断

23:24.180 --> 23:25.180
是不是个文闷框

23:25.180 --> 23:26.180
还没有值

23:26.180 --> 23:27.180
如果还没有值的话

23:27.180 --> 23:28.180
干嘛呢

23:28.180 --> 23:30.180
阻止默认行为

23:30.180 --> 23:31.180
验证失败

23:31.180 --> 23:32.180
对吧

23:32.180 --> 23:33.180
验证失败

23:33.180 --> 23:34.180
那么有值的话

23:34.180 --> 23:35.180
就正常提交了

23:35.180 --> 23:37.180
输出

23:37.180 --> 23:39.180
请输入账号

23:39.180 --> 23:40.180
我当然

23:40.180 --> 23:41.180
就在这里输出了

23:41.180 --> 23:43.180
我就在这里输出了

23:43.180 --> 23:44.180
好

23:44.180 --> 23:45.180
看一下

23:45.180 --> 23:46.180
点击

23:46.180 --> 23:48.180
有问题对吧

23:48.180 --> 23:49.180
有问题

23:49.180 --> 23:50.180
这里包错了

23:50.180 --> 23:51.180
看一下怎么回事

23:51.180 --> 23:52.180
看怎么回事

23:54.180 --> 23:56.180
我这里一铺子

23:56.180 --> 23:58.620
保存

23:58.620 --> 23:59.620
点击

23:59.620 --> 24:00.620
寻书账号

24:00.620 --> 24:01.620
你看验证失败了

24:01.620 --> 24:02.620
它提交不了

24:02.620 --> 24:03.620
提交不了

24:03.620 --> 24:04.620
如果你写得正常的值的话

24:04.620 --> 24:05.620
点击

24:05.620 --> 24:06.620
是不是可以提交了

24:06.620 --> 24:08.620
这是个基础的表达验证

24:08.620 --> 24:09.620
这个错误不是我的

24:09.620 --> 24:10.620
不管我的时候

24:10.620 --> 24:12.620
这个错误是淘宝的

24:12.620 --> 24:13.620
有错误很正常

24:13.620 --> 24:14.620
这是一个

24:14.620 --> 24:15.620
应该是个

24:16.620 --> 24:17.620
看管我啥事

24:17.620 --> 24:18.620
管我啥事

24:18.620 --> 24:19.620
管我屁事

24:19.620 --> 24:20.620
对不对

24:22.620 --> 24:23.620
这是

24:25.620 --> 24:26.620
我们换的就是

24:26.620 --> 24:27.620
表达的提交事件

24:27.620 --> 24:28.620
提交事件

24:30.620 --> 24:31.620
还有什么事件

24:31.620 --> 24:32.620
表达事件我们再多说一点

24:32.620 --> 24:34.620
表达事件还有这么一些

24:36.620 --> 24:37.620
这里先说一下

24:37.620 --> 24:38.620
先说一下

24:38.620 --> 24:39.620
Submit

24:39.620 --> 24:40.620
它会不会冒泡了

24:40.620 --> 24:42.620
Submit的事件

24:42.620 --> 24:43.620
看一下

24:43.620 --> 24:44.620
把它打印出来

24:44.620 --> 24:46.620
打印出来的console.log

24:46.620 --> 24:48.620
ed.bubbles

24:48.620 --> 24:50.620
看一下它会不会冒泡

24:50.620 --> 24:52.620
这里

24:52.620 --> 24:53.620
点击

24:53.620 --> 24:54.620
可以冒泡

24:54.620 --> 24:55.620
可以冒泡

24:55.620 --> 24:56.620
也就意味着啥

24:56.620 --> 24:57.620
意味着什么

24:57.620 --> 24:58.620
复原书

24:58.620 --> 24:59.620
Body

24:59.620 --> 25:00.620
它是不是也可以注册这个事件

25:00.620 --> 25:01.620
Body document

25:01.620 --> 25:02.620
Body

25:02.620 --> 25:03.620
是不是也可以注册这个事件

25:03.620 --> 25:04.620
Submit

25:04.620 --> 25:05.620
对吧

25:05.620 --> 25:06.620
看一下

25:06.620 --> 25:07.620
是不是也是一样的

25:07.620 --> 25:08.620
它会冒泡

25:08.620 --> 25:10.620
它就可以这样做

25:10.620 --> 25:11.620
下一个

25:11.620 --> 25:12.620
除非我没有

25:12.620 --> 25:13.620
除非我有特别说明

25:13.620 --> 25:14.620
否则的话

25:14.620 --> 25:15.620
这个事件都会冒泡了

25:15.620 --> 25:16.620
下一个

25:17.620 --> 25:18.620
迁迹事件

25:18.620 --> 25:19.620
什么事件

25:19.620 --> 25:20.620
它指的是

25:20.620 --> 25:22.620
文本改变事件

25:22.620 --> 25:24.620
改变事件

25:25.620 --> 25:26.620
迁迹事件

25:26.620 --> 25:28.620
这个往往用在表单元素里边

25:28.620 --> 25:29.620
什么input元素

25:29.620 --> 25:31.620
textal real元素

25:31.620 --> 25:32.620
什么

25:33.620 --> 25:34.620
snext元素

25:34.620 --> 25:36.620
这些都是改变事件

25:36.620 --> 25:37.620
选项改变

25:37.620 --> 25:38.620
看一下

25:38.620 --> 25:40.620
比方说这里有个表单

25:40.620 --> 25:41.620
然后

25:41.620 --> 25:42.620
当然这个可以不用表达了

25:42.620 --> 25:43.620
用不用表达都无所谓

25:43.620 --> 25:44.620
是表单元素

25:44.620 --> 25:46.620
一个是那个词

25:46.620 --> 25:47.620
是那个词

25:47.620 --> 25:48.620
给它个id

25:48.620 --> 25:49.620
sell

25:50.620 --> 25:52.620
然后里边有些opin

25:52.620 --> 25:53.620
10个

25:53.620 --> 25:54.620
noring

25:55.620 --> 25:56.620
然后我们这里

25:59.620 --> 26:00.620
再打一个文本框

26:00.620 --> 26:01.620
一个文本框

26:01.620 --> 26:03.620
然后再打一个textal real

26:03.620 --> 26:04.620
都行

26:04.620 --> 26:06.620
文本框给了个id

26:07.620 --> 26:08.620
txt

26:08.620 --> 26:09.620
txt

26:10.620 --> 26:11.620
textal real

26:11.620 --> 26:12.620
给它个id

26:14.620 --> 26:15.620
txt2

26:15.620 --> 26:16.620
txt1

26:16.620 --> 26:17.620
txt2

26:17.620 --> 26:18.620
好

26:18.620 --> 26:19.620
我们这里

26:19.620 --> 26:21.620
这里为了测试方便

26:21.620 --> 26:22.620
我懒得去什么document

26:22.620 --> 26:23.620
get elements by id

26:23.620 --> 26:25.620
我直接用id来获取吧

26:25.620 --> 26:26.620
我们首先注册

26:26.620 --> 26:27.620
这个snext

26:27.620 --> 26:28.620
sell的

26:28.620 --> 26:29.620
on

26:29.620 --> 26:30.620
on缺集事件

26:30.620 --> 26:32.620
当它改变的时候

26:32.620 --> 26:33.620
被用户

26:33.620 --> 26:34.620
它是选中项

26:34.620 --> 26:35.620
被改变的时候

26:35.620 --> 26:36.620
我们打印什么了

26:36.620 --> 26:37.620
打印什么了

26:37.620 --> 26:38.620
打印sell的by6

26:38.620 --> 26:39.620
我们之前说过对吧

26:39.620 --> 26:40.620
下拉地表的by6

26:40.620 --> 26:41.620
指的是什么

26:41.620 --> 26:42.620
指的是这里的by6值

26:42.620 --> 26:43.620
指的是这里的by6值

26:43.620 --> 26:44.620
by6值的话

26:44.620 --> 26:45.620
我也给它设置一个吧

26:46.620 --> 26:47.620
不行

26:48.620 --> 26:50.620
它的by6值等于

26:50.620 --> 26:51.620
noring

26:54.620 --> 26:55.620
不行

26:55.620 --> 26:56.620
by6值好像不能写

26:56.620 --> 26:57.620
noring

26:58.620 --> 26:59.620
也不行

26:59.620 --> 27:00.620
那行了

27:00.620 --> 27:01.620
by6值

27:01.620 --> 27:02.620
我们就用多了

27:02.620 --> 27:03.620
多了

27:03.620 --> 27:05.620
下面的noring

27:05.620 --> 27:06.620
OK

27:06.620 --> 27:07.620
保存

27:07.620 --> 27:08.620
看一下

27:08.620 --> 27:10.620
当它选中项发生改变的时候

27:10.620 --> 27:12.620
选中项发生改变的时候

27:12.620 --> 27:14.620
那么它会不会出发的时间

27:14.620 --> 27:15.620
改变

27:15.620 --> 27:16.620
你看是不是会出发

27:16.620 --> 27:17.620
并且得到它的什么

27:17.620 --> 27:18.620
得到它的by6值

27:18.620 --> 27:19.620
对吧

27:19.620 --> 27:20.620
得到它的by6值

27:20.620 --> 27:21.620
如果你要得到文本值

27:21.620 --> 27:23.620
是不是之前做过的

27:23.620 --> 27:24.620
做过的

27:24.620 --> 27:26.620
没做过吗

27:26.620 --> 27:27.620
你是不是循环

27:27.620 --> 27:28.620
它里边的所有的选项

27:28.620 --> 27:29.620
判了这个选项

27:29.620 --> 27:30.620
有没有被选中

27:30.620 --> 27:31.620
然后得到它的文本

27:31.620 --> 27:32.620
只能这样子玩

27:32.620 --> 27:33.620
对不对

27:33.620 --> 27:34.620
只能这样子玩

27:34.620 --> 27:35.620
好吧

27:35.620 --> 27:36.620
这是

27:36.620 --> 27:37.620
是那个

27:38.620 --> 27:39.620
其实这里还有另外一种方式

27:39.620 --> 27:40.620
另外一种方式

27:40.620 --> 27:41.620
我好像没有讲到

27:42.620 --> 27:43.620
当时说了

27:43.620 --> 27:44.620
循环的切封准

27:44.620 --> 27:45.620
对吧

27:45.620 --> 27:46.620
另外一种方式

27:46.620 --> 27:47.620
我再说一下

27:47.620 --> 27:48.620
另外一种方式

27:48.620 --> 27:49.620
比如说我要打赢它的

27:49.620 --> 27:50.620
选中项的值

27:50.620 --> 27:51.620
这文本

27:51.620 --> 27:52.620
我要得到它的文本

27:52.620 --> 27:53.620
它其实有这么一个属性

27:53.620 --> 27:54.620
叫做

27:54.620 --> 27:56.620
selected indexed

27:56.620 --> 27:57.620
这个表示啥呢

27:57.620 --> 28:00.620
表示选中项的锁印

28:00.620 --> 28:01.620
就哪一项被选中了

28:01.620 --> 28:03.620
它的指援数不是option

28:03.620 --> 28:04.620
对吧

28:04.620 --> 28:05.620
哪一项被选中了

28:05.620 --> 28:06.620
它的锁印

28:06.620 --> 28:07.620
把它option

28:07.620 --> 28:08.620
当成一个数组

28:08.620 --> 28:09.620
那么可以得到它的锁印

28:09.620 --> 28:10.620
看一下

28:10.620 --> 28:11.620
那么是不是

28:11.620 --> 28:13.620
下标为一的这一项选中了

28:13.620 --> 28:14.620
对吧

28:14.620 --> 28:15.620
下标为

28:15.620 --> 28:16.620
三的这一项选中了

28:16.620 --> 28:17.620
对吧

28:17.620 --> 28:18.620
可以得到它的锁印

28:18.620 --> 28:19.620
然后它还有一个属性

28:19.620 --> 28:20.620
还有一个属性

28:20.620 --> 28:22.620
叫做option式

28:22.620 --> 28:23.620
就得到它下标的

28:23.620 --> 28:24.620
所有的选项

28:24.620 --> 28:25.620
跟切封准差不多

28:25.620 --> 28:27.620
它下标的所有的选项

28:27.620 --> 28:28.620
它也是

28:28.620 --> 28:29.620
它是一个伪数组

28:29.620 --> 28:30.620
看一下

28:31.620 --> 28:32.620
你看

28:32.620 --> 28:33.620
它是一个伪数组

28:33.620 --> 28:34.620
好

28:34.620 --> 28:35.620
那么我们就可以利用这个东西

28:35.620 --> 28:36.620
利用这个东西

28:36.620 --> 28:37.620
因为这个锁印的话

28:37.620 --> 28:38.620
它如果没有一项

28:38.620 --> 28:39.620
被选中的话

28:39.620 --> 28:40.620
锁印呢

28:40.620 --> 28:41.620
为-1

28:41.620 --> 28:42.620
它自然得不到任何东西

28:42.620 --> 28:43.620
那么如果

28:43.620 --> 28:45.620
当然你可以先判断一下

28:45.620 --> 28:46.620
可以先判断一下

28:46.620 --> 28:47.620
有没有一项被选中

28:47.620 --> 28:49.620
如果有一项被选中的话

28:49.620 --> 28:50.620
你可以这样子来写

28:50.620 --> 28:51.620
这是个数组

28:51.620 --> 28:52.620
对吧

28:52.620 --> 28:53.620
把这个锁印放进去

28:53.620 --> 28:54.620
锁印放进去

28:54.620 --> 28:56.620
是不是得到选中那一项的option

28:56.620 --> 28:57.620
对吧

28:57.620 --> 28:58.620
得到选中那一项的option

28:58.620 --> 29:00.620
然后得到option的是吗

29:00.620 --> 29:01.620
inner

29:02.620 --> 29:04.620
可以这样子来写

29:04.620 --> 29:05.620
可以这样子来写

29:05.620 --> 29:06.620
保存看一下

29:07.620 --> 29:08.620
你看

29:08.620 --> 29:09.620
可以这样子写

29:09.620 --> 29:10.620
没问题吧

29:10.620 --> 29:12.620
这是这一块

29:12.620 --> 29:13.620
下了列表

29:13.620 --> 29:14.620
那么这些文闷框

29:14.620 --> 29:15.620
是一样的

29:15.620 --> 29:17.620
文闷框TST1

29:17.620 --> 29:18.620
unchanged

29:19.620 --> 29:20.620
等于TST2

29:20.620 --> 29:22.620
unchanged

29:22.620 --> 29:24.620
给它复制一个

29:25.620 --> 29:27.620
处理程序

29:28.620 --> 29:29.620
然后输出啥

29:29.620 --> 29:30.620
输出this.value

29:30.620 --> 29:33.620
当前这一项的值

29:33.620 --> 29:34.620
当前这一项的值

29:34.620 --> 29:36.620
你看这里就只能用this

29:36.620 --> 29:37.620
对吧

29:37.620 --> 29:38.620
你也不知道是TST1触发的

29:38.620 --> 29:39.620
还是TST2触发的

29:39.620 --> 29:40.620
它们用的是同一个函数

29:40.620 --> 29:41.620
只能用this

29:41.620 --> 29:42.620
this表示

29:42.620 --> 29:43.620
谁注册的事件

29:43.620 --> 29:45.620
我就触发谁

29:45.620 --> 29:46.620
然后这里顺便看一下

29:46.620 --> 29:47.620
顺便看一下

29:47.620 --> 29:48.620
它能不能冒泡

29:48.620 --> 29:49.620
顺便看一下

29:49.620 --> 29:51.620
1.8boss

29:51.620 --> 29:53.620
保存

29:53.620 --> 29:55.620
我们这里改变文闷框

29:55.620 --> 29:56.620
触发这个事件了吗

29:56.620 --> 29:57.620
是没触发

29:57.620 --> 29:58.620
对吧

29:58.620 --> 29:59.620
没触发

29:59.620 --> 30:00.620
这个事件它怎么触发的呢

30:00.620 --> 30:02.620
它是这样子触发的

30:02.620 --> 30:03.620
你这里正在写的时候

30:03.620 --> 30:04.620
它不会触发的

30:04.620 --> 30:05.620
不会触发的

30:05.620 --> 30:06.620
它要等到什么时候触发

30:06.620 --> 30:09.620
它要等到你离开的时候触发

30:09.620 --> 30:10.620
它可以冒泡

30:10.620 --> 30:11.620
对吧

30:11.620 --> 30:12.620
可以冒泡

30:12.620 --> 30:13.620
它等到你离开的时候触发

30:13.620 --> 30:14.620
你看

30:14.620 --> 30:16.620
它是这样子触发的

30:16.620 --> 30:18.620
但是跟blur时间

30:18.620 --> 30:19.620
还有点区别

30:19.620 --> 30:20.620
跟focus

30:20.620 --> 30:21.620
和blur

30:21.620 --> 30:22.620
就是聚焦和失去焦点的时间

30:22.620 --> 30:23.620
还有点区别

30:23.620 --> 30:24.620
就是如果你啥都没写

30:24.620 --> 30:25.620
啥都没改变

30:25.620 --> 30:26.620
你再离开

30:26.620 --> 30:27.620
是不是没有触发的时间

30:27.620 --> 30:28.620
看没有

30:28.620 --> 30:30.620
只有你改变了文本过后才触发

30:30.620 --> 30:31.620
比方说你改变过后

30:31.620 --> 30:32.620
你这样子改变

30:32.620 --> 30:34.620
改变过后是不是触发了

30:34.620 --> 30:36.620
但是如果你这样子改变

30:36.620 --> 30:37.620
5个6嘛

30:37.620 --> 30:38.620
对吧

30:38.620 --> 30:39.620
1 2 3 4 5

30:39.620 --> 30:40.620
就是还是没改变

30:40.620 --> 30:41.620
还是没改变

30:41.620 --> 30:42.620
是不是也不会触发

30:42.620 --> 30:43.620
只要跟之前的文本是一样的

30:43.620 --> 30:44.620
它就不会触发

30:44.620 --> 30:46.620
它这么一种触发方式

30:46.620 --> 30:48.620
这针对文本框是这样子触发的

30:49.620 --> 30:50.620
好

30:50.620 --> 30:51.620
然后文本里边

30:51.620 --> 30:53.620
还有一个事件叫做input

30:54.620 --> 30:56.620
它也是文本改变事件

30:57.620 --> 30:58.620
input什么意思

30:58.620 --> 31:00.620
input就是打字

31:00.620 --> 31:02.620
在里面打字的事件

31:02.620 --> 31:06.620
它是也叫做文本改变事件

31:06.620 --> 31:11.000
这个事件它是及时触发

31:11.000 --> 31:15.000
及时触发

31:15.000 --> 31:17.000
就是你每一次没改变一点

31:17.000 --> 31:18.000
它都会触发

31:18.000 --> 31:19.000
触发一次

31:19.000 --> 31:20.000
好

31:20.000 --> 31:21.000
咱们来看一下

31:21.000 --> 31:23.000
如果我注册的不是on-chain

31:23.000 --> 31:24.000
而是input

31:24.000 --> 31:26.000
而是input这个事件

31:26.000 --> 31:27.000
看一下

31:27.000 --> 31:28.000
它触发的时候

31:32.000 --> 31:33.000
我这里写错了吗

31:33.000 --> 31:34.000
应该是on-input

31:34.000 --> 31:36.000
我是用的是动灵的方式

31:37.000 --> 31:38.000
看一下

31:38.000 --> 31:39.000
是不是可以触发

31:39.000 --> 31:41.000
你及时写的时候就可以触发

31:41.000 --> 31:43.000
就可以触发这个事件

31:43.000 --> 31:44.000
还没有

31:44.000 --> 31:46.000
这个东西可以用来做什么

31:46.000 --> 31:48.000
可以用来做那个

31:48.000 --> 31:50.000
就是验证

31:50.000 --> 31:52.000
就是有的时候

31:52.000 --> 31:54.000
上网的时候会发现

31:55.000 --> 31:56.000
你只要把它一删完

31:56.000 --> 31:58.000
它就马上出现一个提示的

31:58.000 --> 31:59.000
请输入账号

31:59.000 --> 32:00.000
请输入密码

32:00.000 --> 32:01.000
对吧

32:01.000 --> 32:02.000
它马上会提示你

32:02.000 --> 32:04.000
它怎么来控制这个事件的

32:04.000 --> 32:06.000
就是靠这个input的事件

32:06.000 --> 32:07.000
只要它里边改变了东西

32:07.000 --> 32:08.000
任何东西它都会触发一个事件

32:08.000 --> 32:09.000
不停的触发

32:09.000 --> 32:10.000
不停的触发

32:10.000 --> 32:11.000
你没写一点就触发一次

32:11.000 --> 32:13.000
哪怕你复制粘贴

32:13.000 --> 32:14.000
它都会触发

32:14.000 --> 32:15.000
它们都会触发

32:15.000 --> 32:16.000
只要你改变它里边的东西

32:16.000 --> 32:17.000
它一定会触发

32:17.000 --> 32:18.000
你用鼠标右键

32:18.000 --> 32:19.000
鼠标右键

32:19.000 --> 32:20.000
剪切

32:20.000 --> 32:21.000
你看

32:21.000 --> 32:22.000
是不是也会触发

32:22.000 --> 32:23.000
对吧

32:24.000 --> 32:25.000
鼠标右键

32:26.000 --> 32:27.000
粘贴

32:27.000 --> 32:28.000
是不是也会触发

32:28.000 --> 32:29.000
也会触发

32:30.000 --> 32:31.000
但是这个事件

32:31.000 --> 32:32.000
你是阻止不了的

32:32.000 --> 32:33.000
你是阻止不了的

32:33.000 --> 32:34.000
你看e-default

32:34.000 --> 32:35.000
prevent

32:36.000 --> 32:37.000
default

32:37.000 --> 32:38.000
它一定是改变之后

32:38.000 --> 32:39.000
才触发这个事件

32:39.000 --> 32:40.000
就是文本已经显示

32:40.000 --> 32:41.000
出来过后再触发这个事件

32:41.000 --> 32:42.000
所以说你这个东西

32:42.000 --> 32:43.000
是阻止不了的

32:43.000 --> 32:44.000
我知道你在想什么

32:44.000 --> 32:45.000
你在想上解课

32:46.000 --> 32:48.000
我们讲的那个就是

32:48.000 --> 32:49.000
键盘一下事件

32:49.000 --> 32:50.000
它只能写数字

32:50.000 --> 32:51.000
如何来防止粘贴

32:51.000 --> 32:52.000
这个还控制不了

32:52.000 --> 32:53.000
因为你是防不了的

32:53.000 --> 32:54.000
它粘贴

32:54.000 --> 32:56.000
你阻止不了这个东西

32:56.000 --> 32:57.000
所以这个东西还不行

32:57.000 --> 32:58.000
还不行

33:00.000 --> 33:01.000
这是这个事件

33:02.000 --> 33:03.000
那我们来试一下吧

33:03.000 --> 33:04.000
比方说判断一下

33:04.000 --> 33:06.000
is there a value

33:06.000 --> 33:07.000
tune

33:07.000 --> 33:08.000
如果没有值

33:08.000 --> 33:10.000
如果你没写任何东西

33:10.000 --> 33:12.000
没写任何东西干嘛呢

33:12.000 --> 33:14.000
我就给你输出

33:14.000 --> 33:16.000
请输入内容

33:16.000 --> 33:18.000
请输入内容

33:18.000 --> 33:19.000
然后结束

33:19.000 --> 33:20.000
还输结束

33:21.000 --> 33:22.000
如果你写的东西

33:22.000 --> 33:24.000
我就把你文本输出

33:24.000 --> 33:26.000
保存看一下

33:26.000 --> 33:27.000
空格空格你看

33:27.000 --> 33:28.000
请输入内容是吧

33:28.000 --> 33:29.000
是在触发验证的

33:29.000 --> 33:30.000
在触发验证

33:30.000 --> 33:31.000
我这里写内容

33:31.000 --> 33:33.000
OK就正常的

33:33.000 --> 33:34.000
然后我把它删完

33:34.000 --> 33:36.000
是不是又触发验证了

33:36.000 --> 33:38.000
就跟这个逻辑

33:38.000 --> 33:39.000
就跟我们以后

33:39.000 --> 33:40.000
在网上看到的

33:40.000 --> 33:42.000
别的验证逻辑是不一样

33:42.000 --> 33:43.000
你没写一点东西

33:43.000 --> 33:45.000
它就会触发一次验证

33:45.000 --> 33:46.000
这是这一块

33:47.000 --> 33:48.000
有没有说

33:48.000 --> 33:50.000
这样子写会不会影响效率

33:50.000 --> 33:52.000
我的天啊

33:52.000 --> 33:54.000
不会的

33:54.000 --> 33:56.000
我们这些单一码的直凶

33:56.000 --> 33:59.000
它是用微妙记的

33:59.000 --> 34:02.000
一毫秒对人念而言

34:02.000 --> 34:04.000
一点感觉都没有

34:04.000 --> 34:05.000
你只有超过了多少了

34:05.000 --> 34:06.000
超过了

34:06.000 --> 34:08.000
100毫秒

34:08.000 --> 34:09.000
超过了100毫秒过后

34:09.000 --> 34:10.000
你现在会感觉到

34:10.000 --> 34:12.000
就是有这个延迟

34:12.000 --> 34:14.000
有这个卡顿

34:14.000 --> 34:16.000
一毫秒一时完全没有感觉的

34:16.000 --> 34:17.000
而它是用微妙来记的

34:17.000 --> 34:19.000
连一毫秒都不到

34:19.000 --> 34:20.000
可能几微妙

34:20.000 --> 34:21.000
所以说这种

34:21.000 --> 34:22.000
你完全不用担心

34:22.000 --> 34:24.000
完全不用担心

34:24.000 --> 34:26.000
我想起了一个人

34:26.000 --> 34:28.000
不知道大家知不知道

34:28.000 --> 34:29.000
英雄联盟这个游戏

34:29.000 --> 34:30.000
你们知不知道

34:30.000 --> 34:32.000
他不是有个faker吗

34:32.000 --> 34:33.000
对吧

34:33.000 --> 34:35.000
一个职业玩家

34:35.000 --> 34:37.000
faker

34:37.000 --> 34:38.000
这个人很神奇

34:38.000 --> 34:39.000
他能够感受到

34:39.000 --> 34:41.000
就是20毫秒的延迟

34:41.000 --> 34:43.000
他都能感受到

34:43.000 --> 34:45.000
我们的话是完全感受不到的

34:45.000 --> 34:47.000
他在玩游戏的时候

34:47.000 --> 34:48.000
如果那个游戏延迟

34:48.000 --> 34:49.000
超过了10

34:49.000 --> 34:51.000
他就感觉有点不舒服了

34:51.000 --> 34:53.000
他必须要要求

34:53.000 --> 34:55.000
延迟要控制在几毫秒类

34:55.000 --> 34:57.000
你这么变态了

34:57.000 --> 34:58.000
就是一些职业玩家

34:58.000 --> 35:00.000
他可能对这种延迟比较敏感

35:00.000 --> 35:02.000
但是对普通人来说的话

35:02.000 --> 35:03.000
100毫秒的延迟

35:03.000 --> 35:04.000
根本就感受不到

35:04.000 --> 35:06.000
感受不到的

35:06.000 --> 35:09.000
这是这个事件

35:09.000 --> 35:11.000
还有啥呢

35:11.000 --> 35:13.000
表达事件里边

35:13.000 --> 35:15.000
想不出来了

35:15.000 --> 35:17.000
就这么写了

35:17.000 --> 35:19.000
这是表达事件

35:19.000 --> 35:20.000
那想到吧

35:20.000 --> 35:22.000
咱们把它切分一下

35:22.000 --> 35:24.000
表达事件的一块

35:24.000 --> 35:25.000
专门拿一些课

