WEBVTT

00:00.000 --> 00:13.990
好 那来呗

00:14.750 --> 00:16.030
这个拼图游戏

00:16.790 --> 00:23.190
公开课我讲了讲过的 但是公开课的效果呢有一些细微的差别啊 因为公开课的时候呢

00:23.450 --> 00:28.570
加入了一些css3的效果 我这里呢把这个css3的效果去掉了 就是没有一个

00:29.350 --> 00:31.150
没有这个小块的移动过程

00:31.650 --> 00:35.750
不过呢 整体的思路呢是完全一样的啊 完全一样的

00:36.750 --> 00:45.230
好 我这里说一下啊 就是关于这个效果 你拿到以后呢 你们拿到一些看上去就感觉比较复杂的效果的时候

00:45.990 --> 00:50.350
你先别着急 千万不要想着 首先心态要摆正啊

00:50.850 --> 00:55.470
千万不要想着一下 说 把写完了 几分钟就把写完了 不可能的

00:56.230 --> 00:59.030
肯定是一个小时起步下 最少一个小时

00:59.830 --> 01:04.150
之前公开课的时候呢 我记得这个这一块呢 我讲了多久了 讲了一个半小时

01:04.630 --> 01:12.670
我光还是讲啊 讲了一个半小时 如果是我来写的话 可能半个小时40分钟 如果你们来写的话 可能在两三个小时

01:13.070 --> 01:20.550
非常正常 极其正常 所以心态千万不要复杂啊 千万不要复杂 如果你思路没有理清楚的话 你不要说两个小时

01:20.550 --> 01:23.070
那你一天都写不完啊 就这么一个简单的效果

01:24.230 --> 01:27.310
好 那么拿到这些东西的时候呢 你首先第一步

01:28.750 --> 01:30.430
要做一个大体的分析

01:31.270 --> 01:32.230
怎么来分析呢

01:33.070 --> 01:40.430
首先你要想到啊 我们这里呢 有是九成一九的啊 三成一三的方块 对吧 那么每一个方块是什么呢

01:41.030 --> 01:44.150
每个方块是啥呢 有一个人说啊 每个方块是个一密集元素

01:45.070 --> 01:50.590
不对 那你这样子 你这个图片 你这个图片不好办啊 你这个图片真的不好办

01:50.990 --> 01:57.710
因为你看一下我们那个图片啊 你可以看到这个效果里边 他那个一密集文件脚 下面那个图片 他是一个整张图片 对吧

01:57.950 --> 02:04.230
以整张图片 那么这里的每一个小块呢 肯定不能用一密集元素 一密集元素连接出来就是一整张图片

02:04.990 --> 02:10.630
所以说呢 这里用用什么好了 肯定用用个div或者是其他元素 给他设置背景图片

02:11.350 --> 02:14.550
哎 背景图片是不是可以设置位置 对吧 我们学过雪壁图

02:15.150 --> 02:21.750
哎 背景图片是不是可以设置位置 ok 我们用背景图片来控制他的位置 让每一个小的块呢这个div

02:22.270 --> 02:27.910
他得到了是不同 这个背同一张背景图片的不同位置 我们要这样子来处理 原来这意思吧

02:28.910 --> 02:36.630
好吧 这是第一个啊 你要先思考的 第二个呢 就是说 这里是三层三的格子 你说我们要生成多少个div啊

02:37.230 --> 02:41.430
当然空空一块嘛 空一块 那假设不空的话 那么是不是

02:42.150 --> 02:44.630
9个div 对不对 要生成9个div

02:45.710 --> 02:51.710
好 那么这个9个div里边 他每个背景图还有不同的位置 那是不是要用js来控制 你样式好控制吗

02:51.990 --> 02:57.670
肯定不好控制啊 这个背景图的位置呢 是要先过计算的 需要用js来帮我们计算

02:58.790 --> 03:08.830
另外呢 你还要考虑到 就是说这里呢 是三层三 那有一天啊 比方说我们在网页中 可能以后在项目里边加了这么一个小游戏啊 一个拼图的小游戏

03:09.830 --> 03:15.910
比方搞活动嘛 一个活动里面拼图的小游戏啊 拼完了过后给你一些奖励 好他的难度呢 可能会不断的增加

03:16.630 --> 03:22.350
那比方说以后呢 要不是三层一三的 也要做成九层一九 二十层一二十 一百层一百

03:23.390 --> 03:30.150
那你这里是不是以后一个 如果你把它写死了的话 就按照三层一三来写的话 那是不是后面要出问题

03:30.790 --> 03:41.350
对不对 后面改一下一步很不方便 因此呢 我们最好的是可以配置的啊 先三层一三吧啊 我们以后呢 如果要把它改成九层一九五层一五

03:41.950 --> 03:45.750
改动几个变量的值 或者是几个属性的值就完事了

03:46.510 --> 03:47.510
要非常容易更改

03:48.710 --> 03:55.310
所以说你要考虑到各种各样的问题啊 包括整个区域的大小 包括整个这个区域

03:57.470 --> 04:02.310
整个这个区域的大小也是应该可以配置的啊 也是应该能够配置的

04:03.310 --> 04:07.510
所以说 终合考虑这么一些问题呢 我最终又得到一个结论

04:08.350 --> 04:13.150
什么呢 就是我们页面上的不要去写什么样式的啊 就不要去写样式的

04:14.310 --> 04:15.470
页面上的不要写样式的

04:17.620 --> 04:22.780
咱们页面上的什么样式都不写 只给他提供一个div 这个div呢给他个id game

04:23.700 --> 04:23.900
game

04:24.940 --> 04:28.740
这个div里边肯当然是个容器啊 他表示一个容器就整个这个区域

04:29.260 --> 04:34.940
这个div表示整个这个区域啊 很多朋友说开举一个div对吧 好整个这个区域就表示个div

04:35.300 --> 04:40.980
好 这个div里边是不是有各种各样的div 小的div对吧 这小的div呢 到时候还要能够移动

04:41.260 --> 04:45.580
当然那个移动是什么 移动就是绝对定位呗 点击过后改变他的位置

04:46.140 --> 04:47.140
无非就是做这么一件事

04:48.420 --> 04:52.900
好 那么我给了这个div之后 这个div里边所有要生成的东西

04:53.900 --> 05:01.860
我们都使用介石来完成 也就是说我们现在页面写完了 央视代码一行都没有 剩下的事全部靠介石来完成

05:02.380 --> 05:05.220
为什么要这样子呢 这样这样做的好处是在于

05:06.060 --> 05:14.740
灵活啊灵活 将来呢 比方说你全部用央视来写啊 全部用央视来写就会遇到很多问题 比方说这个每一个小块的宽度是多少

05:15.380 --> 05:20.580
你能写死吗 央视里面肯定只能写死 对吧 写死了之后要调整是不是很不好调了

05:21.300 --> 05:25.460
对吧 因为以后呢 这个宽度是应该可以刷出来的 比方说总宽度

05:26.180 --> 05:29.860
比方说啊 总宽度是900 那么每一个小块的宽度是不是300

05:30.340 --> 05:35.180
对吧 总宽度是900 那如果以后要设置10乘以10的格子

05:35.940 --> 05:41.540
那么每一个小块的宽高是不是 900除以10 对不对 他要能够经过计算

05:41.940 --> 05:50.340
所以说只有介石才能达到这样的效果 因此呢 我们这里到此为止啊 页面 央视 什么都没有 页面上只提供一个div

05:50.700 --> 05:53.660
剩下的事情呢 让介石完全来控制

05:54.620 --> 05:58.660
好 当然了 这里在代码很多 所以说呢 代码一多的时候呢

05:59.820 --> 06:04.260
特别是你们以后做项目的时候啊 代码介石代码多的时候 千万不要在这里去写了

06:05.260 --> 06:08.180
这样的写呢 以不好阅读 页面代码

06:09.020 --> 06:14.540
如果有css的话 跟css代码 以及呢 跟介石代码混杂在一起 很不好阅读

06:14.900 --> 06:16.900
所以说 建议大家呢 尽量用什么

06:17.620 --> 06:22.060
就是单独一个介石文件 我们这里建一个介石文件 或者是专门的建个文件夹

06:23.100 --> 06:29.100
script 啊 这里面呢 去放入我们的介石文件 应该是有点介石

06:30.100 --> 06:34.900
ok啊 那咱们这一块呢 就直接去使用这个介石文件

06:36.460 --> 06:41.860
好吧 好 我们这里边把它运行出来啊 边运行边看啊 边运行边看

06:43.620 --> 06:46.020
好了 那咱们来做一下吧 做一下

06:47.020 --> 06:51.620
首先呢 我们在这个介石里面首先写啥了 你最先想到的是啥

06:52.300 --> 06:54.980
最先想到的我还 这里面可能思维极其

06:55.580 --> 07:02.980
复杂 因为你可能会想到各种样的效果 点击时间又怎么样怎么样 背景图片怎么样 但是我想到的不是这些

07:03.420 --> 07:05.700
我先想到的是整个这个区域

07:07.300 --> 07:10.260
就整个这个区域 我们先不看这里边的什么东西

07:10.820 --> 07:16.100
整个这个区域有哪些地方是可以配置的 我想的是这么些玩意啊 想的是这个东西

07:17.060 --> 07:20.660
好 整个这个区域呢 我可以怎么办呢 我可以把它写成一个对象

07:21.380 --> 07:29.820
整个这个区域呢 把它写成个对象 好 我们这里写个对象啊 给他取个名字嘛 给他取个名字叫做gameconfig

07:31.220 --> 07:34.820
表示的是游戏配置啊 游戏配置 打成个注释啊

07:36.500 --> 07:44.260
游戏配置 这里面的配置是一个对象 因为他有很多东西需要配置 比方说几乘一几的格子啊 有多少个方块

07:44.980 --> 07:50.740
整个区域的宽高是多少 我们先用一个对象来进行配置 那么我们后边在书写代码的时候呢

07:51.060 --> 07:54.660
就可以依赖这些配置啊 就把这些配置的东西取出来来使用

07:55.300 --> 08:03.140
比方说整个的宽度啊 整个的宽度 面板宽度是多少呢 我们可以看一下这个图片啊 这个东西当然根据这个图片来啊

08:03.540 --> 08:06.180
图片换了过程了 它的宽高也会跟着变化

08:06.980 --> 08:14.580
这个图片是500×500 500×500的图片 咱们这里宽度是多少 500 高度是多少 500

08:16.260 --> 08:22.500
这个东西不用打注是吧 表示整个就整个区域的宽高 整个区域的宽高500×500

08:23.380 --> 08:28.420
没问题吧 没问题吧 这是这一块 那么还有哪些东西要配置呢

08:29.380 --> 08:36.140
几乘一几的方块 对吧 几乘一几的方块 那么目前是三乘一三 ok 我们就可以这样子写

08:37.140 --> 08:41.380
几乘一几呢 就是ros 有几行 三行

08:42.340 --> 08:48.820
有几列呢 kaos clumb 啊 clumb的单词表示列啊 kaos简写啊

08:49.620 --> 08:53.780
有三列啊 这里我打成个座式 这是行数

08:54.820 --> 09:00.340
这是列数 以后这样子 这样写的好处在于以后呢 我只要一改这个东西 是不是全部改完了

09:00.820 --> 09:04.580
对吧 就全部改完了啊 因此呢 我们这样子来处理 行数和列数

09:04.740 --> 09:12.420
先把这些配置写好 还有啥呢 还是不是背景图片的位置 对吧 背景图片的位置

09:12.980 --> 09:17.860
背景图路径啊 background 就是unit url

09:18.820 --> 09:28.100
图片路径啊 图片路径 当然当然是个制度创的吧 图片路径 这样子的好处在于我们以后可以替换啊 只需要在配置里面 把重新配置一下就完事了

09:28.580 --> 09:33.700
其他地方就不用改了 把这些有可能会发生变化的东西都放到这

09:34.900 --> 09:40.740
好 图片路径这里写啥呢 图片路径 好 图片路径呢 首先这里的路径应该写啥

09:41.380 --> 09:45.300
啊 有些人看两个答案啊 这是第一个答案 第一个路径

09:46.100 --> 09:51.860
png 对吧 一米几文件下下的l 路啊路啊 点png 好 那么还有一种答案是

09:52.420 --> 09:55.060
点点返回上级目录 该写哪一个呢

09:55.940 --> 10:00.180
该写哪一个呢 有同学可能觉得应该写第二个 因为这个介石文件呢

10:00.660 --> 10:06.980
在这个目录下面应该返回上级目录 但是不对啊不对 这里的路径呢是相对于页面的路径

10:07.540 --> 10:14.500
啊 所以大家注意一下啊 我们介石里边使用的路径 由于这个介石代码最终是在页面上运行

10:15.220 --> 10:19.380
我们的相对路径是什么 相对路径指的是运行的资源

10:19.780 --> 10:24.100
相对于的是运行的资源 运行的是谁 运行的是这个atmail

10:24.660 --> 10:28.900
运行的是这个 运在最终是在页面上运行 你看页面上的引用它嘛

10:29.620 --> 10:36.580
因此这个介石代码是在页面上运行的 应该是相对于页面的路径啊 应该是相对于页面的路径 这里要注意一下啊

10:37.380 --> 10:44.660
注意 相对的是页面路径 因为它是看在哪个运行 相对于是运行的资源

10:45.940 --> 10:52.980
好吧 好 图片路径有了 行数有了 行列有了 那么通过这个东西是不是可以算出一些东西啊

10:53.540 --> 11:00.900
每一张每一个div啊 这是不是可以算出每一个div的什么了 每一个div的宽度和高度 是不是可以算出来了

11:01.620 --> 11:06.900
啊 有行数有列 有行数有列数有宽高 是不是可以算出来每一个div的宽度和高度

11:07.380 --> 11:11.700
好 那么这个东西肯定有用对吧 肯定有用 那么我们来算呗啊 就来算

11:12.340 --> 11:12.580
好

11:13.860 --> 11:20.580
我们可以 那么我们比方说啊 我们 我们在这里写啊 这些东西都是经验啊 如果离开是不熟悉很正常

11:20.900 --> 11:27.060
后面慢慢就熟悉了 就是如果你在这里写的话会出问题 就是piece啊 piece 表示一块啊 一小块

11:27.460 --> 11:32.180
一小块的宽度 是不是可以算算啥 是不是500

11:33.300 --> 11:38.500
除以多少宽度吗 500除以列数对不对 是不是500除以列数

11:39.380 --> 11:44.900
啊 有多少列吗 有三列吗 500除以列数 是不是每一小块的宽度

11:45.220 --> 11:48.340
但是你这样子写不好 为什么不好呢 你把写死了

11:49.060 --> 11:54.260
将来你要把它宽度变化变成1500要把它变成1500的时候是不是这里也要变

11:54.580 --> 12:00.580
就是我们以后呢 改变一个东西的时候 希望只改变了一块就行了 其他就不要变了 那这里怎么办了

12:01.300 --> 12:09.940
啊 有人说这里我们去写宽度能这样子写吗 你这样写的话 相当于用的是什么 用的是一个变量 变量的名字呢 叫位置 你看一下吧 现在已经爆错了

12:10.900 --> 12:15.620
你看一下 诶 这边啊 刷新 你看 它说宽度不存在

12:16.180 --> 12:23.300
位置已升到defend 由于我们是视频课程 所以说我讲课的时候就没有公开课那么着急了啊 我就好好把讲清楚讲透

12:24.020 --> 12:29.140
好 那么这里呢 我们不能使用这个变量 对吧 好有同学说能不能这样子写呢 z 底而wish

12:29.620 --> 12:36.820
我们之前交过z 是吧 表示当前对象 但是你要注意 z5 当时说的是写到哪儿的 是写到函数里边的

12:37.620 --> 12:44.180
它意味着这个函数是谁调用的 谁调用这个函数 z 是指向谁 那这里是不是函数 他不是函数

12:44.660 --> 12:50.100
那不是函数里边 你写的不是函数里边 那这个z 是指向谁 指向的是全局对象

12:50.740 --> 12:53.460
啊 那仍然需要出问题 你看 z 是位置

12:55.060 --> 12:58.100
位置是没有的 让我咱们把它打印出来嘛 把这个变量啊

12:58.980 --> 12:59.940
gameconfig 你看

13:00.660 --> 13:05.460
这个 peacewish 是nan 为什么是nan 因为这个东西是 undefined

13:06.100 --> 13:10.020
它这一时指向的是温度对象 所以这里咋写的不对 你咋写的不对

13:10.340 --> 13:11.380
因此呢 我

13:11.860 --> 13:17.700
当然有些念过你马上就反映过来了啊 那么这里该怎么写呢 我们得把这个对象写好之后

13:18.100 --> 13:20.900
给这个对象里边去加属性啊 加属性

13:21.460 --> 13:22.100
啊 peace

13:22.580 --> 13:23.060
位置

13:24.740 --> 13:25.540
加一个属性

13:26.020 --> 13:29.620
加什么属性 就是加什么属性呢 就是每一块的宽度 对吧

13:30.020 --> 13:36.020
每一块的宽度 每一块的宽度等于多少呢 等于这个gameconfig的宽度

13:36.340 --> 13:41.700
总宽度处于多少呢 处于gameconfig的caus 列属

13:42.180 --> 13:44.820
啊 这个表示每一块的宽高啊 每一块的宽度

13:45.300 --> 13:48.980
每一个小块的宽高

13:49.620 --> 13:51.220
这是宽度 那么高度是不是一样的

13:51.780 --> 13:55.300
对吧 高度是一样的啊 peace height height

13:55.780 --> 13:56.900
高度 那么就是

13:57.860 --> 14:00.500
它的总高度处于什么 处于航数 是不是

14:01.860 --> 14:02.340
没问题吧

14:03.700 --> 14:07.460
好 我就顺便多想一些啊 多想一些 就是可能会用到的都写上

14:07.780 --> 14:14.980
好 比方说div的数量有三行三列对不对 三行三列 那么div的数量我们怎么办呢

14:15.780 --> 14:16.740
div的数量

14:17.700 --> 14:21.060
啊 有可能说可能要空一个 我们先不考虑空空白啊

14:21.380 --> 14:24.100
先不会考虑空白 那么div的数量呢 我们直接

14:25.060 --> 14:29.460
啊 就是设置一下啊 就是number peace

14:30.420 --> 14:38.340
peace就是一小块啊 peace of cake啊小case对不对啊 就是小小块的意思啊 peace number

14:39.060 --> 14:41.860
就是div的数量啊 就小块的数量

14:44.160 --> 14:48.480
小块小块的数量 是吧 把这些东西全部刷出来啊 刷出来我们之后可能会用

14:49.040 --> 14:52.720
啊 那么拿拿到啊 拿到 当然你开始想不到这些很正常

14:53.040 --> 14:58.720
如果你想不到这些你后边写着写着你会发现 我如果在配置里面有这么一些东西就很好用了

14:59.200 --> 15:08.320
就说这里配置里边呢 有些东西那是刷出来的啊 rose 成一啥 是不是行对吧 chaos 对不对 两个相承是不是小块的数量

15:09.200 --> 15:10.400
好 小块的数量也有了

15:11.440 --> 15:17.680
还需要啥东西呢 还需要啥东西呢 我觉得呢还可以把这个动物对象得到啊 把这个对象得到

15:18.000 --> 15:25.040
这个对 就是这个动物对象啊 这个元素 把这个元素拿到过后呢 我们之后呢往里边加东西呢就非常方便了啊 就不用反复就获取了

15:25.360 --> 15:29.760
反复获取的话也挺影响效率的 所以我们这里再再给他配置一个动

15:30.560 --> 15:36.160
啊 就是整个游戏的容器啊 容器动物对象是哪呢 document

15:37.200 --> 15:41.760
get element by id啊 这里呢填啥呢 填这个game对吧

15:43.280 --> 15:46.320
好 这是啊 游戏的动物对象

15:48.640 --> 15:53.200
好 就把配置写好了啊 我们把打印出来看一下啊 这些配置先看一下有没有问题

15:53.760 --> 15:57.920
就是你写写的时候千万不要着急 你越着急越写不出来

15:58.640 --> 16:03.840
好 先打印出来看一下啊 这一块有没有问题 我们每一次玩一个完成一个小目标就完事了

16:04.720 --> 16:09.120
没问题啊 你是自己回去验证一下啊 这一块的东西呢 现在目前是没问题的

16:10.400 --> 16:15.360
好 那么这个地方写好了对吧 写好了之后 那么我们现在接着来

16:16.320 --> 16:20.720
写好了游戏配置之后呢 我们这里要开始做事了对吧 要开始做事了

16:21.120 --> 16:27.280
首先呢 我们要做什么事呢 我都还不会去考虑这个 里边什么乱七八糟的玩意都还不去会去考虑

16:27.680 --> 16:30.560
我先考虑啥呢 先考虑外边这个div

16:31.200 --> 16:34.000
就是个游戏这个div啊 就这个div

16:35.120 --> 16:38.400
就这个玩意儿啊 这个玩意儿呢 我给他设置

16:38.880 --> 16:42.400
比方说设置一些样式 比方说他有边框对吧 有一个看有一个

16:42.800 --> 16:47.040
灰色的边框 对不对 还有个啥呢 还有就是他的框高 是不是都要设置的

16:47.280 --> 16:49.760
都要设置 ok 那么我们这里呢

16:50.720 --> 16:53.600
写一个函数 名叫做inlet

16:54.000 --> 16:58.160
inlet是啥意思 表示初始化啊 就初始化整个

16:58.960 --> 17:00.880
功能 初始化游戏

17:02.160 --> 17:03.840
初始化游戏

17:05.120 --> 17:09.120
有的时候呢 其实很多游戏一初始化就已经结束了 就已经完成了

17:09.840 --> 17:10.640
初始化游戏

17:11.200 --> 17:12.880
好 初始化游戏里边

17:13.280 --> 17:16.320
有哪些事情要做呢 慢慢来梳理啊 一点点来梳理

17:16.800 --> 17:22.240
一开始的时候 是不是要设置 y 成的div 对吧 我们先不考虑里边啊 先考虑 y 成

17:22.880 --> 17:26.320
y 成这个div啊 他是不是有个边框一个框高对吧

17:26.800 --> 17:30.960
好 那么我们来初始化游戏的时候 首先遇到的第一个问题就是初始化

17:31.920 --> 17:34.400
初始化游戏的容器

17:35.440 --> 17:37.440
就这个div 初始化这个div

17:38.080 --> 17:42.800
好 那么我们专门来写个函数啊 当然你可以把这个代码直接写到这 但是我不推荐这样做

17:43.200 --> 17:45.760
因为这里边的代码肯定很多啊 肯定很多

17:46.160 --> 17:51.120
所以说你可以想象得到啊 你做了之后有经验过后就会想象得到 这里面代码肯定很多

17:51.360 --> 17:53.840
因此呢 我专门来写个函数来做这件事

17:55.040 --> 17:57.840
当然了 甚至呢 我可以把这个函数直接写到这里边也可以

17:58.080 --> 18:03.920
可不可以 当然可以啊 那么写到这里边的话 那么外边只能调用引力车 他不能调用这里边的函数

18:04.400 --> 18:09.120
就是 我这里边的函数呢 是来辅助他完成的初始化的

18:09.520 --> 18:12.640
明白这个意思吧 当然我可以这样做啊 就是有很多种做法

18:13.120 --> 18:16.160
好 这里呢 我们英列词game 动

18:17.360 --> 18:18.160
达三个注释啊

18:19.200 --> 18:23.760
那么下面这个函数呢 他只能在这里边使用 这个表示初始化啥呢

18:24.160 --> 18:26.480
初始化游戏啊

18:26.960 --> 18:30.240
面板啊 就是游戏容器嘛 游戏容器

18:30.960 --> 18:33.920
好 那这里去干嘛呢 去调用这个英列词game 多对吧

18:34.400 --> 18:36.160
去调用这个函数 没问题吧

18:36.720 --> 18:39.280
啊 下面我们提供一个函数 在这里去调用

18:39.680 --> 18:42.480
就是这样子写了 主要是让这个结构更加清晰

18:42.960 --> 18:48.240
而不要去把这个代码全部按在这 一大堆代码按在这 才把游戏面板初始化完成

18:48.640 --> 18:53.280
到所以读代码的时候 到处秘密码码的代码 但是现在读代码的话 你把这个这个函数一折叠

18:53.280 --> 18:58.560
你看上面 上面的代码极其简单 而且函数的名字英列词初始化什么游戏动

18:58.960 --> 19:00.400
是不是就很清晰了 这个结构

19:01.760 --> 19:06.160
好 然后下边 我们这个这个函数里边就开始写了 现在我们目光爽一脑罩

19:06.560 --> 19:08.720
就是写这个代码的时候 你就不要去想其他的

19:09.120 --> 19:14.880
你千万不要去想这个游戏里面啊 一会怎么去移动 强都不要去想这些 你现在就搞定搞定外层的div

19:15.840 --> 19:22.160
外层的div有哪些东西要搞定了 首先我们要获得外层的div 怎么获得了 是不是gameconfig里边有个dome

19:22.800 --> 19:27.680
啊 一个dome 属性 对吧 你看我们之前配置过这个dome属性 这个dome属性是不是这个

19:27.920 --> 19:31.280
dome对象 对吧 你看设置啥 设置跨宽度

19:32.400 --> 19:37.040
宽度为啥 宽度为啥 是不是就之前配置里边的宽度

19:37.680 --> 19:41.040
拼接上px 对吧 没问题吧

19:42.080 --> 19:46.080
是它的宽度 我也就是之前配置的宽度加上个px

19:46.880 --> 19:51.280
然后在干嘛呢 在设置它的高度啊 高度

19:52.560 --> 19:57.520
gameconfig啊 高度为拼接上一个px 对吧 不要忘记拼接px啊

19:57.760 --> 20:00.640
要有单位的 还有啥呢 是不是还有

20:01.360 --> 20:06.640
那个边框 对吧 border border 比方说这里是几个箱数啊

20:07.680 --> 20:07.840
就

20:09.360 --> 20:18.080
就几个箱数啊 就一个箱数啊 两个箱数啊 两个箱数 sorry的啊 边框颜色的话 给它设置一个比方说ccc

20:19.680 --> 20:23.760
好 保存咱们来看一下 看这个游戏面板有没有出事发出来 看是不是出事发出来了

20:24.160 --> 20:30.240
这个游戏面板 一个灰色的边框出现出现了 而且宽高已经设置好了 对吧 宽高已经设置好了

20:32.000 --> 20:37.920
那么以后呢 你看一下这个就很舒服 以后宽度高度要调整 比方说调整成800 你随便调

20:38.480 --> 20:41.600
你随便调就行了 因为后边全是根据算出来的

20:42.320 --> 20:48.880
后边全是根据这个属性来算出来的 你看呗 直接调整就完事了 就非常非常方便啊 你不要把它写死

20:49.840 --> 20:55.680
这是一个解代码的小技巧啊 不要小技巧了 就要叫做习惯和规则规范

20:57.040 --> 21:03.840
啊 这个地方就歪成了dav 是不是搞定了 其实还有一个东西啊 你可能现在想不到 没关系啊 你之后想到了再往里面加

21:04.480 --> 21:10.240
啊 一开始可能想不完 那么其实还有些东西 还有个啥呢 就是因为它里边的这个

21:10.960 --> 21:14.000
我把外面往里边关了干嘛 他里边的这个

21:14.560 --> 21:20.400
我刚才说一下啊 就是在谷歌流量器里边 你按住ctrl加shift加t啊 你可以

21:21.280 --> 21:25.040
我怎么把刚才看到的房子打开了啊

21:26.000 --> 21:29.680
按住ctrl加t啊 就可以打开之前关闭的页面

21:30.720 --> 21:38.800
好吧 好 那么现在呢 我们就是设置好了 y 成的dav 啊 有什么弄的 怎么大小不一样的 是因为我这边放大的啊

21:39.520 --> 21:44.640
设置好了 我好了 y 成大小的dav 过后了 里边这些dav 是不是绝对定位的 他一定是绝对定位的

21:45.040 --> 21:48.720
因为他要移动嘛 对不对 他要移动 移动是设置什么 设置作标 对不对

21:49.360 --> 21:56.080
所以说呢 由于他里边的是绝对定位 那么他 y 成dav 是不是要把他位置设为相对定位 对吧

21:56.960 --> 21:58.880
dom style position

21:59.360 --> 22:00.000
为啥呢

22:01.040 --> 22:02.000
为relative

22:02.720 --> 22:05.760
对吧 把设置为这个啊 方便后边使用绝对定位

22:06.480 --> 22:12.560
当然了 你开始想不到没关系 后边想到你在这里加上就行了 就这个函数 他专门来做容器的初始化

22:13.680 --> 22:14.400
好 看一下啊

22:15.600 --> 22:20.640
你看咱们dav 这个dav 你看这个style里边 所以加了各种样的样式了啊 你看这边

22:22.240 --> 22:24.640
所以加了各种各样的样式了 那就加进去了啊

22:25.520 --> 22:32.640
好了啊 那咱们就加了样式之后啊 接下来我们来初始化里边的dav啊 初始化里边的dav

22:33.440 --> 22:34.240
好 第二步

22:34.880 --> 22:42.240
干嘛呢 初始化小方块啊 就是里边的小方块 这里边的小方块一个方块是一个啥

22:42.560 --> 22:46.720
一个方块是不是就是一个dav 对吧 他一个方块就是一个dav 有啥特别的呢

22:47.600 --> 22:52.800
好 那么这里呢 初始化小方块的时候呢 咱们遇到一个问题啥问题呢

22:53.600 --> 22:58.960
就是说 我们这里呢 最好有这么一个数组啊 最好有一个数组

22:59.680 --> 23:05.040
这个数组里边呢 记录了每一个dav的信息啊 它的相关信息

23:06.160 --> 23:14.320
比方说它的 它是第几个dav 它的图片啊 它的 它的就是图片的位置在哪等等等等啊 我们应该记录每一个

23:14.720 --> 23:22.720
dav的相关信息 你看这意思吧 就是说我们这里呢 最好准备好一个数组 有了这个数组的话 初始化这些dav就很方便了

23:23.040 --> 23:28.240
因为你到时候初始化这个dav的时候 你要创建dav吗 这里面没有dav 对不对 你是不得创建

23:28.720 --> 23:35.680
好 你创建好了dav 你是不是得设置什么背景图的位置这些东西 对吧 你得设置背景图的位置 没问题吧

23:36.560 --> 23:39.920
好 那么你既然得设置背景图的位置 那背景图位置设置为啥呢

23:40.800 --> 23:48.400
是不是不好办了 对吧 所以说这里呢 我会想到这么一个东西 就是初始化小方块的时候呢 我们需要先准备好一个数组

23:50.080 --> 23:50.480
准备

23:52.000 --> 23:54.400
准备好一个一个数组

23:55.360 --> 24:02.880
这个数组中 数组的每一项是一个对象 记录了每一个小方块

24:03.760 --> 24:07.440
其实这也也带了一点面向对象的编程

24:08.320 --> 24:10.800
怎么样面向对象编程 就是把每一个东西看成一个对象

24:11.760 --> 24:16.400
把每一个信息的集合看成一个对象 记录了每一个小方块的信息

24:17.680 --> 24:21.280
比方说吧 我们最后准备的数组呢 可能是这个样子的

24:21.840 --> 24:24.800
可能是这个样子的 我就在这里写啊

24:25.920 --> 24:29.040
反正视频缴程 我慢慢讲 我觉得挺爽的

24:31.120 --> 24:36.480
一个对象 这个对象 数组里面每一项是个对象 整体上是一个数组 整体上是一个数组

24:40.400 --> 24:41.360
整体上是一个数组

24:43.230 --> 24:49.950
数组里面每一项是个对象 比方说 第一个小方块啊 我就设置什么呢

24:50.350 --> 24:55.950
设置它的X坐标 就是横坐标啊 就是Left的字啊 就相当于是Left的字 对吧

24:56.270 --> 25:00.590
比方说设置为你啊 它的Top值呢 设置为你啊

25:01.150 --> 25:05.790
比方说啊 就这么一些信息 明白这个意思吧 我们准备好一个对象

25:06.350 --> 25:09.390
然后呢 它的背景图位置 背景图位置

25:09.870 --> 25:16.750
背景图的位置啊 应该说BGX嘛

25:17.950 --> 25:27.230
BGX 比方说是负的166啊 就随便瞎写吧 我这里就举这么个意思啊 负的166背景图的位置

25:27.470 --> 25:29.950
好 有了这么一个数组过后 你想一想这个道理

25:30.590 --> 25:38.030
有了这么一个数组过后啊 这数组的第一项啊 数组的第二项被Left166比方说Top166啊

25:38.590 --> 25:41.710
啊 背景图的位置呢 是啊 比方说负的

25:42.430 --> 25:46.350
277啊 就随便写吧 好 有了这个数组过后

25:46.910 --> 25:49.390
那么到时候我要出什么小方块 是不是很方便了

25:50.030 --> 25:58.670
循环这个数组 每循环一次创建一个DIV 把这些信息给这些DIV设置样式就完成了 对吧 利用这些信息设置样式就完成了

25:59.150 --> 26:04.510
所以说我们首先得有这么一个数组 你把这个问题先要想通啊 先要想通 我们

26:05.070 --> 26:12.430
有了这个数组过后 后面是不是写写就很方便了 就是你面对一些复杂问题的时候 你先不要去考虑整体怎么去完成

26:12.830 --> 26:13.710
先把进行拆分

26:14.430 --> 26:21.150
拆分成一些小的小功能 然后一个功能一个功能去完成 这样子呢 你才你做起来呢 才有就是有一个

26:21.630 --> 26:23.790
合适的路径啊 才有条路可以走

26:24.430 --> 26:25.390
如果你一开始

26:26.350 --> 26:30.430
就想了很复杂的一个东西 一个整体的东西 你是很难完成的 你把先把进拆分

26:30.750 --> 26:36.910
我先把这个就是我要初始化小方块 最终肯定是要生成DIV 但是呢 我一开始的时候呢 我这里

26:37.470 --> 26:43.230
先啊 得到这么一个数组 把数据准备好 然后呢 再来生成DIV

26:43.710 --> 26:50.830
所以说在第一步的时候呢 我先不着急去生成什么DIV 先准备好一个数组 数组的每一项是个对象 记住每个小方块的信息

26:52.350 --> 26:53.550
好 这个数组呢

26:54.430 --> 27:01.230
这个数组呢 我们又可以放到哪儿了 就比方说放到gameconfig里边也可以啊 也可以专门来用一个辨量来存放也行

27:02.430 --> 27:02.830
blocks

27:04.030 --> 27:12.510
就一个数组啊 这是包含小方块信息的数组啊 包含小方块信息的数组

27:13.390 --> 27:17.390
明白的意思吧 好 我们先准备好一个数组啊 准备好一个数组

27:18.190 --> 27:20.990
好 接下来呢 我们就是给这个数组进行初始化

27:21.630 --> 27:26.990
往这个数组里面填东西了 对吧 往这个数组里边填东西 好 接下来呢 我们专门来写个函数

27:27.710 --> 27:34.030
你看 我们就把用函数来解决这个问题 叫做因利者 初始化有很多细节的初始化 每个细节都是一个初始化

27:34.750 --> 27:36.190
因利者什么呢 blocks

27:37.550 --> 27:42.270
初始化小方块数组啊 初始化小方块数组

27:43.390 --> 27:46.510
就这么个意思啊 初始化一个小方块数组

27:47.230 --> 27:48.590
好 这里打行一个注释啊

27:49.230 --> 27:53.790
它表示什么意思呢 表示初始化一个小方块的数组

27:54.270 --> 28:00.430
我们现在是视频课程啊 如果你觉得节奏有点快 有点跟不上的话 你最好暂停 你好好想一想

28:00.670 --> 28:03.870
每一个点一定要想同 不然的话你后边的节奏你是不太理解的

28:04.590 --> 28:08.510
好 初始化一个小方块数组 那么这里呢 我们就去因利者呗 调容呗

28:10.030 --> 28:13.390
初始化一个小方块数 就是初始化这个边量 给这个边量负责

28:14.110 --> 28:14.590
就完了

28:15.790 --> 28:20.430
好 那么也就是说 我这里要依次给这个变量里面去加东西 对吧 加几个方块

28:21.630 --> 28:23.550
加几个方块 加几个

28:24.670 --> 28:32.510
我们之前不是算过吗 这是方块的数量 对吧 加这么多方块就完事了 对不对 好 那么这里呢 我们就给它循环

28:33.070 --> 28:38.110
循环多少次呢 循环多少次 小鱼多少

28:38.590 --> 28:45.150
小鱼多少 或者说我们这样子吧 循环行循环列嘛 对吧 循环行循环列

28:45.470 --> 28:53.870
循环行 i小鱼多少呢 就是game config rose 对吧 循环行嘛 i加加

28:54.910 --> 28:58.190
没问题吧 好 然后里边再循环列

28:59.070 --> 29:05.390
循环列 每一行有几列呢 每一行有这么多的 不能假设为三列啊 每一行有这么多的借佳佳

29:05.950 --> 29:12.190
好 那么这里呢 是不是得到i就表示行号 对不对 借呢表示什么 列号

29:13.470 --> 29:19.630
啊 列号 所以开始循环了 对吧 行号列号 我们之前做过99成法表 不就这么个意思吗

29:20.590 --> 29:25.470
啊 进行循环 每次循环干嘛呢 每次循环是不是往这里边加东西

29:25.950 --> 29:29.070
push 往这个数组里边加一下 对吧 push一个对象进去

29:29.950 --> 29:31.470
好 一个个来啊 一个个来

29:32.430 --> 29:39.790
这个对象里边 有哪些信息呢 我刚才刚才分析过啊 这个对象里边有他自己的位置

29:40.830 --> 29:42.830
有他自己的位置 left

29:44.350 --> 29:47.470
他自己的位置 他自己的位置是啥呢

29:48.350 --> 29:49.630
他自己的位置是啥呢

29:50.670 --> 29:53.070
left 他离左边的位置啊 你左边的位置

29:53.710 --> 29:56.670
是啥呢 看一下啊 看一下这边 假设

29:57.950 --> 29:59.790
假设 这是第一个小方块

30:00.670 --> 30:08.910
那他离左边 他的坐标离左边是多少 是不是你啊 你上边是不是你啊 好 咱们呢 理一下 梳理一下这个位置啊 先看这个left值

30:09.790 --> 30:15.230
如果I的值为你啊 接的值为你啊 那么他的left值为多少呢

30:15.950 --> 30:18.350
啊 看着啊 我们这样子来找一下规律

30:19.310 --> 30:22.190
I表示第几行 接的表示第几列

30:22.670 --> 30:26.270
I如果是第一行 接如果是第一列 那么他的left值是多少

30:27.070 --> 30:32.350
是不是你啊 他的top值 我们就顺便说一起算了嘛 top值是不是你也是你啊 对吧

30:32.830 --> 30:33.950
也是你嘛 没问题吧

30:35.310 --> 30:37.950
IG left top 没问题吧

30:39.710 --> 30:40.750
好 再来啊 再来

30:41.710 --> 30:44.590
好 这是 I和G他的left top

30:45.150 --> 30:47.710
然后呢 如果是 怎么样了 如果是

30:49.150 --> 30:54.270
第二行第一列 那么left值第二行第一列你看一下 这一列对吧

30:54.510 --> 30:56.830
那么left值是不是还是你啊 top值为多少

30:57.390 --> 31:00.110
为多少 嘿 top值为多少

31:01.070 --> 31:04.670
是不是一个小方块的高度啊 比方说我们用H

31:05.310 --> 31:07.310
比方说啊 我们用H来代表

31:08.030 --> 31:10.590
一个小方块的高度

31:11.150 --> 31:18.830
用W呢 代表一个小方块的宽度 就千万不要着急啊 你一着急 你老实在想 哇 怎么这么复杂

31:19.390 --> 31:23.470
还要做 后边还有那么多功能 你如果这样的心态的话 你是玩不成了

31:23.550 --> 31:26.270
你永远玩不成 任何一个稍微复杂的项目都玩不成

31:27.070 --> 31:31.470
你千万不要着急 你现在就满脑子就想了一个 我怎么来算left top

31:31.870 --> 31:33.630
怎么来算这个 你其他的啥都不要想

31:34.750 --> 31:38.030
啊 你做程序做开发 其实不光是做事

31:38.350 --> 31:41.790
做程序 你人生中做任何事情都应该有这样的心态

31:42.270 --> 31:46.670
你就把眼前的事情搞定 你只要确定我的整个方向 我的目标没有问题

31:46.830 --> 31:49.790
那么你就把眼前的事情搞定 一步一步踏踏实实往前走

31:50.270 --> 31:54.350
千万不要耗高无缘 千万不要这一块都还没做完 就想到另一块的东西

31:55.070 --> 31:56.590
我现在我们目标就是算这个东西

31:57.310 --> 32:03.630
一个是left值 一个是top值 好 那么左边的距离是0 上面的距离是不是一个H 对吧

32:03.790 --> 32:08.430
一个H吧 好 然后再来 第二行第一列

32:08.830 --> 32:11.870
left值是多少 一个W 对吧 一个W

32:12.270 --> 32:15.470
一个H 没问题吧 那如果是第三行

32:16.430 --> 32:21.950
第三行 第三列 那么left值是不是2W

32:22.670 --> 32:27.710
top值是不是2H 来找到规律没 找到规律没啊

32:28.430 --> 32:31.950
我相信大家应该能够找到规律啊 这里我写错了是吧

32:33.230 --> 32:36.270
我这里写错了啊 写错了吗

32:37.150 --> 32:40.430
没写错 没写错都要的嘛 都要的 再来吧 再来

32:40.750 --> 32:47.870
2 1 那么left值是多少 第三行第二列 第三行这里就这一列 这一列

32:47.870 --> 32:52.110
left值是多少 是不是1W 对吧 2H 对吧

32:53.310 --> 32:56.990
没写错吧 没写错啊 那么我现在问你

32:57.950 --> 33:02.670
I的值不确定 接的值不确定 那么如何通过I和G来算出left top

33:03.630 --> 33:07.950
如何来算出 IG 他不确定 那么left值等于多少呢

33:08.910 --> 33:15.230
能看出来吗 那么等于多少 等于G乘以W 对吧 G乘以W

33:15.950 --> 33:23.630
没问题吧 好他不值等于多少呢 他不值等于多少 是不等于I乘以H

33:24.510 --> 33:32.510
没问题吧 好是不是出来了 G乘以W W是啥 就是每一个

33:33.470 --> 33:41.310
就是每一个小方块的piece weight 每一个小方块的宽度 我们之前算出来的

33:41.310 --> 33:47.230
对吧 好那么top值呢 等于什么呢 等于I乘以G config

33:48.270 --> 33:53.150
就是每一个小方块的高度piece height 每一个小方块的高度

33:53.150 --> 34:01.150
left top值算出来了 横坐标 这个是横坐标 这个是啥 这个是重坐标

34:01.790 --> 34:07.390
重坐标 重坐标 所以可以算出来了 没问题吧

34:09.950 --> 34:13.630
好 横坐标是不是就算出来了 算出来了呗

34:14.910 --> 34:19.630
然后怎么样了 然后还有啥呢 看着啊 这边

34:21.230 --> 34:28.830
还有啥呢 除了横坐标之外 还有什么背景图的位置 对吧 背景图的位置 好背景图的位置

34:28.990 --> 34:34.350
是咱们的 又来看一下啊 这一块呢 要稍微绕一点啊 要稍微的绕一点 背景图的位置

34:35.230 --> 34:37.310
好 比方说啊 比方说

34:38.590 --> 34:40.270
咱们呢 来看一下

34:41.710 --> 34:42.510
看这个图片啊

34:43.870 --> 34:45.470
看这个图片 假设

34:46.270 --> 34:47.470
第一个div

34:48.910 --> 34:51.150
第一个div 它的背景图的位置

34:52.030 --> 34:53.390
是一定是0和0吗

34:54.830 --> 34:56.190
是不是一定是0和0

34:57.150 --> 34:59.870
背景图的位置是不是一定是0和0 第一个div

35:00.270 --> 35:04.590
有的人说是啊 第一个div 它的背景图位置就一定是0和0

35:04.830 --> 35:06.510
那咱们来看一下这个地方

35:08.660 --> 35:10.900
刷新啊 这是第一个div

35:14.480 --> 35:15.600
这是第一个div

35:16.720 --> 35:19.840
这个div 它的背景图位置一定是0和0吗

35:20.400 --> 35:24.800
你看呀 这个图片在原图了哪个位置啊 它在原图了这个位置

35:25.760 --> 35:27.840
也就是它的顺序是不是要打乱的将来

35:28.160 --> 35:29.840
是不是要打乱 对不对

35:30.640 --> 35:34.240
好 那么你好好想一想 这个背景图的位置是跟什么相关的

35:35.680 --> 35:38.640
这个背景图的位置是跟什么相关的

35:39.440 --> 35:40.560
是跟什么相关的

35:41.760 --> 35:43.600
跟啥相关的这个背景图位置

35:44.560 --> 35:46.000
跟这个div

35:46.800 --> 35:51.040
它正确的位置是相关的

35:51.440 --> 35:52.640
跟这个相关的

35:53.360 --> 35:55.200
好 也就是说啥呢

35:56.080 --> 36:02.480
这里面你不分析者一分析的话就知道了 这里面还有更细的一些逻辑

36:03.120 --> 36:08.960
这个level 和top 表示了当前的横坐标

36:09.600 --> 36:12.000
和当前的重坐标

36:12.800 --> 36:15.040
什么叫当前的横坐标 当前的重坐标

36:15.600 --> 36:18.480
每张图片 每个不是图片啊

36:18.480 --> 36:21.120
每个div 的横重坐标是不是可以会变化的

36:21.840 --> 36:26.880
到时候变化变化的是啥 变化的是这个对吧 变化的是横坐标和重坐标

36:27.200 --> 36:28.880
到时候变化的是这么一个玩意儿

36:29.200 --> 36:30.000
能明白这个意思吗

36:30.960 --> 36:34.240
它变化的是这么一个玩意儿 就是横重坐标 变化的是它

36:35.040 --> 36:35.920
能理解吗

36:37.120 --> 36:40.800
每个div 它的横重坐标是可以变化的

36:40.800 --> 36:42.800
它当前的横重坐标 你看这个

36:43.360 --> 36:46.640
这个脑袋 这个脑袋这个横重坐标是可以变化对吧

36:47.120 --> 36:48.240
它变化的是这个

36:48.960 --> 36:51.200
但是还有一个隐含的逻辑

36:51.600 --> 36:55.280
就是什么呢 就是它正确位置的横重坐标

36:56.320 --> 36:58.320
你看这个脑袋 它的正确位置是不是在这

36:58.640 --> 36:59.200
是不是在这

36:59.840 --> 37:00.400
没问题吧

37:00.800 --> 37:02.160
它的正确位置是不是在这

37:03.760 --> 37:06.640
它是指的是它正确位置的横重坐标

37:07.760 --> 37:08.560
能理解这个意思吗

37:09.680 --> 37:12.880
变化的是它当前的横重坐标

37:12.880 --> 37:16.240
但是呢 它的正确位置在这

37:17.200 --> 37:18.160
它已经在这

37:18.560 --> 37:20.400
无论怎么去改这个div的位置

37:20.400 --> 37:22.000
它的正确位置是不是始终在这

37:22.240 --> 37:24.160
对吧 它的正确位置始终在这

37:24.480 --> 37:25.920
也就是说一个div

37:26.480 --> 37:29.120
它的横重坐标是可以变化的

37:29.440 --> 37:32.320
但它正确位置的横重坐标是不是不能变化

37:32.640 --> 37:33.600
它一定是固定的

37:33.920 --> 37:35.040
一定是固定的

37:36.080 --> 37:38.000
所以说我们这里还差两个属性

37:38.400 --> 37:39.760
一个是create

37:40.320 --> 37:41.440
就是create

37:41.840 --> 37:44.480
正确位置的横重坐标

37:45.200 --> 37:46.640
正确位置的横重坐标

37:47.200 --> 37:48.800
那么我们可以认为

37:49.040 --> 37:50.640
正确位置的横重坐标呢

37:50.640 --> 37:51.920
一开始的时候

37:51.920 --> 37:53.600
还没有打乱 现在还没有打乱顺序吧

37:54.080 --> 37:55.760
现在目前还没有打乱顺序

37:56.080 --> 37:57.760
在没有打乱顺序之前

37:58.880 --> 38:00.320
在打乱顺序之前

38:00.560 --> 38:01.920
那么这个横重

38:02.000 --> 38:03.520
正确位置的横重坐标呢

38:03.600 --> 38:05.280
跟它这个横重坐标是不是一样的

38:06.000 --> 38:06.720
是不是一样的

38:07.680 --> 38:08.400
能理解吗

38:08.880 --> 38:09.600
能不能理解

38:10.080 --> 38:12.000
一开始的时候 最开始的时候

38:12.240 --> 38:13.040
我还没有打乱

38:13.040 --> 38:14.400
如果不打乱顺序的话

38:14.640 --> 38:16.080
假设不打乱顺序

38:16.400 --> 38:18.800
那么跟它这个横重坐标的位置

38:19.040 --> 38:19.840
是不是一样的

38:20.240 --> 38:21.120
那就是一样的

38:21.440 --> 38:22.400
就是一样的

38:23.200 --> 38:24.000
明白这个意思吗

38:25.280 --> 38:25.840
能明白吗

38:26.320 --> 38:27.280
那么这里呢

38:27.280 --> 38:28.240
我们是不是又要来

38:28.240 --> 38:31.200
等于ZS.Fs能这样的写吗

38:32.000 --> 38:32.400
不能

38:32.400 --> 38:33.280
那你这样的写的话

38:33.280 --> 38:34.080
是不是又重复了

38:34.080 --> 38:34.720
又重复了

38:34.720 --> 38:36.320
当然你可以先建一个对象

38:36.320 --> 38:37.200
建对象之后呢

38:37.200 --> 38:39.840
我们再来进行重新设置这个属性

38:40.640 --> 38:41.520
跟之前一样

38:42.000 --> 38:42.640
我们现在呢

38:42.640 --> 38:43.440
既然我们知道了

38:43.680 --> 38:45.360
这里面怎么有这么多属性

38:46.160 --> 38:47.520
这么多属性好麻烦啊

38:47.520 --> 38:50.160
感觉有这么多属性挺麻烦的

38:50.160 --> 38:51.200
那怎么样了

38:51.200 --> 38:52.560
我们就可以利用这种方式

38:53.600 --> 38:54.080
还记得吗

38:54.080 --> 38:55.040
我们之前学习过的

38:55.840 --> 38:56.480
学习过的

38:56.480 --> 38:57.120
什么方式

38:58.960 --> 39:00.320
用构造函数

39:01.120 --> 39:02.800
用构造函数的方式

39:03.840 --> 39:04.320
Peace

39:05.280 --> 39:05.680
Peace

39:07.440 --> 39:09.040
就是创建一个block

39:09.360 --> 39:09.920
一个block

39:10.480 --> 39:11.600
用一个构造函数

39:11.600 --> 39:12.880
你给我传一个什么信呢

39:13.520 --> 39:14.480
你给我传一个啥呢

39:14.880 --> 39:16.400
你给我传一个就是

39:16.800 --> 39:17.840
呃就是

39:19.040 --> 39:20.240
I和界啊

39:20.240 --> 39:21.120
I和界

39:22.080 --> 39:23.520
你给我传一个I和界进来

39:23.520 --> 39:25.840
或者是你给我传一个就传一个横众作标吧

39:25.840 --> 39:28.160
啊你给我传一个横众作标进来

39:28.880 --> 39:31.360
我来帮你来生成一个block对象

39:32.000 --> 39:33.840
啊就他用构造函数来调用

39:34.800 --> 39:35.680
好也就是说这里呢

39:35.680 --> 39:36.720
我要怎么来调用呢

39:36.720 --> 39:38.000
我可以用这种方式来调用

39:38.000 --> 39:38.560
看着啊

39:40.400 --> 39:41.600
我可以用这种方式

39:41.600 --> 39:42.240
blocks

39:42.880 --> 39:43.280
push

39:43.760 --> 39:44.640
添加一个对象吧

39:44.640 --> 39:45.600
六一个什么

39:45.600 --> 39:46.240
六一个block

39:46.880 --> 39:47.360
啊这样子呢

39:47.360 --> 39:48.560
我们创建起来方便一点

39:49.040 --> 39:49.680
好横作标

39:51.360 --> 39:51.840
这个对吧

39:52.320 --> 39:53.440
中作标这个

39:55.120 --> 39:55.680
对吧

39:55.680 --> 39:56.800
横作标创建了

39:56.800 --> 39:57.280
对吧

39:57.280 --> 39:57.840
创建好了

39:59.200 --> 40:00.000
啊你看一下

40:01.040 --> 40:02.880
我用这种方式来创建

40:02.880 --> 40:03.600
六一个block

40:04.080 --> 40:04.880
横作标传进去

40:04.880 --> 40:05.680
中作标传进去

40:05.680 --> 40:06.880
那么剩下的事情交给他

40:06.880 --> 40:07.520
你看这些东西

40:08.080 --> 40:09.120
要让我想的话

40:09.120 --> 40:11.360
我不可能一开始就全部想到的

40:12.080 --> 40:14.240
我就是写着写到的时候才会发现

40:14.240 --> 40:15.760
发现这里代码太复杂了

40:15.760 --> 40:16.400
太多了

40:16.400 --> 40:18.320
好我专门来一个构造函数来做这个事

40:19.040 --> 40:20.000
好你给我一个横作标

40:20.000 --> 40:20.640
我来帮你搞定

40:21.200 --> 40:22.800
好剩下的就是这个对象的

40:22.800 --> 40:24.160
left等于left

40:24.160 --> 40:24.960
这个对象的top

40:25.760 --> 40:26.480
等于什么top

40:26.960 --> 40:27.280
对吧

40:27.280 --> 40:28.400
我们就把这些东西写好

40:28.400 --> 40:29.840
好那么这里就可以写了

40:29.840 --> 40:30.720
想写啥写啥

40:30.720 --> 40:31.600
是不是很舒服了

40:31.600 --> 40:32.400
没有什么限制的

40:33.280 --> 40:34.080
就是correct

40:35.840 --> 40:36.640
correct

40:36.640 --> 40:37.520
写的correct

40:38.480 --> 40:38.880
left

40:39.440 --> 40:41.200
正确的横作标

40:41.520 --> 40:43.040
那么默认情况下

40:43.040 --> 40:45.040
正确的横作标就等于他的left字

40:45.680 --> 40:49.200
这是正确的横作标

40:50.160 --> 40:51.200
正确的横作标

40:51.200 --> 40:52.480
好那么这里是

40:52.480 --> 40:53.600
thiscorrect

40:55.040 --> 40:55.440
top

40:56.000 --> 40:57.680
正确的重作标

40:59.920 --> 41:01.840
正确的重作标

41:04.740 --> 41:05.220
作标

41:06.100 --> 41:07.300
好咱们先来看一下

41:07.300 --> 41:08.100
先来看一下

41:08.100 --> 41:09.380
肯定看不到任何效果

41:09.380 --> 41:11.380
但是我们经过这个函数之后

41:11.380 --> 41:12.900
我们可以得到一个数组了

41:12.980 --> 41:15.460
这个数组里面就包含了blogs

41:16.020 --> 41:18.740
包含了所有的这些小放块

41:20.740 --> 41:21.220
看一下

41:24.740 --> 41:26.420
好像进入死循环的感觉

41:27.220 --> 41:28.580
好像进入了死循环了

41:28.580 --> 41:29.060
blogs

41:29.060 --> 41:29.620
看一下

41:30.340 --> 41:30.900
blogs

41:32.500 --> 41:33.140
打不出来了

41:33.140 --> 41:34.020
进入到死循环

41:34.020 --> 41:35.620
我看一下哪个地方死循环了

41:37.220 --> 41:37.780
戒等

41:37.780 --> 41:38.900
这里用的是i

41:38.900 --> 41:39.780
该用戒对吧

41:39.780 --> 41:40.340
该用戒

41:45.170 --> 41:45.650
看一下

41:45.650 --> 41:46.370
打印出来的结果

41:46.690 --> 41:48.290
你看

41:48.290 --> 41:49.730
是不是9个方块

41:49.730 --> 41:50.930
每个方块

41:50.930 --> 41:51.490
你看

41:51.490 --> 41:52.690
重作标

41:52.690 --> 41:53.090
横作标

41:53.090 --> 41:53.890
是不是全部出来了

41:53.890 --> 41:55.010
每个方块的重作标

41:55.010 --> 41:56.050
横作标全部出来了

41:56.050 --> 41:57.410
没问题吧

41:57.410 --> 41:58.770
没问题吧

41:58.770 --> 42:01.490
那么这样作标就全部出来了

42:01.490 --> 42:03.250
correct top

42:03.250 --> 42:03.810
你看

42:03.810 --> 42:05.330
目前

42:05.330 --> 42:06.850
他目前的位置

42:06.850 --> 42:08.450
跟他正确的位置是重合的

42:08.450 --> 42:09.490
是重合的

42:09.490 --> 42:11.090
因为我们现在还没有打乱

42:11.090 --> 42:11.570
对吧

42:11.570 --> 42:12.690
还没有打乱这种数组

42:12.690 --> 42:13.890
不着急

42:13.890 --> 42:14.450
不着急

42:14.450 --> 42:15.890
横作标出来了

42:16.050 --> 42:17.890
那么正确的横作标出来了

42:17.890 --> 42:19.650
然后现在再回到我们之前的问题

42:21.250 --> 42:23.090
一个小方块

42:23.090 --> 42:24.770
他背景图的位置

42:25.890 --> 42:26.770
跟什么有关

42:27.490 --> 42:31.090
是跟他当前的横作标有关

42:31.090 --> 42:33.410
还是跟他正确的横作标有关

42:33.410 --> 42:34.450
也好好想象这个问题

42:35.250 --> 42:36.050
一个小方块

42:36.050 --> 42:37.410
他背景图

42:37.410 --> 42:39.570
在这个小方块中的哪个位置

42:39.570 --> 42:41.010
我们肯定要用学毕图嘛

42:41.010 --> 42:41.250
对吧

42:41.250 --> 42:42.370
background placing

42:43.410 --> 42:45.090
那么这个background placing

42:45.170 --> 42:46.210
他跟什么有关呢

42:46.210 --> 42:48.050
他是跟他当前那个作标

42:48.050 --> 42:49.810
当前那个小方块的位置

42:49.810 --> 42:50.530
有关

42:50.530 --> 42:53.410
还是说跟这个小方块正确的位置有关

42:54.690 --> 42:56.290
是不是肯定是正确的位置

42:57.090 --> 42:57.650
对吧

42:57.650 --> 42:59.090
肯定是正确的位置

42:59.090 --> 43:00.050
比方说这个小方块

43:00.690 --> 43:01.410
他解除

43:01.410 --> 43:03.090
解出来在这应该在这对吧

43:03.090 --> 43:03.890
应该在这

43:03.890 --> 43:05.330
那么这个正确的位置在这

43:05.330 --> 43:06.210
那么他的背景图

43:06.210 --> 43:07.730
肯定是跟这个位置有关

43:07.730 --> 43:10.210
哪怕把这个小方块移动到这

43:10.930 --> 43:11.730
没关系

43:11.730 --> 43:13.090
他仍然显示的是这一部分

43:14.130 --> 43:14.930
能力也有意思吧

43:15.730 --> 43:17.810
就是个小方块的背景图位置

43:17.810 --> 43:20.690
跟他的正确位置有关

43:22.850 --> 43:25.410
那么现在你想一想这个道理

43:25.410 --> 43:26.290
就很简单了

43:26.290 --> 43:27.010
现在就已经

43:27.810 --> 43:28.530
什么道理呢

43:29.810 --> 43:30.450
你看着

43:32.450 --> 43:36.130
然后这是小方块的横坐标

43:36.130 --> 43:36.930
不要横坐标

43:36.930 --> 43:37.330
到这

43:38.610 --> 43:39.730
你看刚才的小方块

43:39.730 --> 43:40.370
这个小方块

43:40.930 --> 43:41.650
这一部分

43:41.650 --> 43:42.290
看过鼠标

43:42.290 --> 43:43.410
从这到这

43:43.410 --> 43:44.210
有他的横坐标

43:44.210 --> 43:44.450
对吧

43:45.090 --> 43:46.530
然后他的背景图位置

43:46.530 --> 43:47.730
是不是负的这个桌标

43:48.130 --> 43:48.610
对吧

43:48.610 --> 43:49.650
背景图向左移动

43:50.290 --> 43:51.490
负的这个桌标就完成了

43:51.970 --> 43:53.250
那么中桌标也是

43:53.250 --> 43:54.610
那么比方的小方块在这

43:55.410 --> 43:56.530
他的正确位置在这

43:56.530 --> 43:58.450
假设他的正确位置在这

43:58.850 --> 44:00.050
那么就意味着

44:00.050 --> 44:01.250
他的中桌标是什么呢

44:01.890 --> 44:03.730
他中桌标是从这里到这里

44:03.730 --> 44:04.130
对吧

44:04.130 --> 44:05.170
从这里到这里

44:05.170 --> 44:06.370
那么他的背景图位置

44:06.370 --> 44:07.650
是不是负的这个中桌标

44:09.650 --> 44:10.210
其实这里呢

44:10.210 --> 44:12.130
我们就已经可以直接创建

44:12.130 --> 44:12.770
动物对象了

44:13.730 --> 44:14.770
我们就把他动物对象

44:14.770 --> 44:15.650
作为他的一个属性

44:15.650 --> 44:16.610
就跟之前的

44:16.610 --> 44:17.570
Gaming Config一样

44:17.570 --> 44:18.290
把动物对象

44:18.290 --> 44:19.090
作为他的一个属性

44:19.650 --> 44:20.450
他的动物对象

44:20.450 --> 44:21.410
他对应的动物对象

44:21.810 --> 44:22.290
是什么呢

44:22.930 --> 44:23.490
Document

44:23.970 --> 44:24.530
Create

44:24.530 --> 44:25.330
Element

44:25.330 --> 44:26.610
创建一个什么DIV

44:26.610 --> 44:26.930
对吧

44:26.930 --> 44:27.810
创建一个DIV

44:28.210 --> 44:28.450
好

44:28.450 --> 44:28.770
当然了

44:28.770 --> 44:29.810
这个里面可以要设置

44:29.810 --> 44:30.370
设置很多东西

44:30.850 --> 44:32.370
什么DIV的宽度

44:32.930 --> 44:33.890
宽度等于啥

44:33.890 --> 44:34.370
这些东西

44:34.370 --> 44:35.170
这些都是很简单

44:35.730 --> 44:36.530
之前配置好的

44:36.930 --> 44:37.250
Peace

44:38.290 --> 44:39.250
Peace Width

44:40.290 --> 44:41.170
拼接上Peace

44:41.650 --> 44:42.050
宽度

44:42.530 --> 44:43.650
Zestom

44:43.650 --> 44:44.610
Dial Style

44:44.610 --> 44:45.810
点Height

44:45.810 --> 44:46.370
等于什么

44:46.370 --> 44:47.410
Gaming Config

44:47.410 --> 44:48.530
Peace

44:48.530 --> 44:49.170
Height

44:49.890 --> 44:50.850
拼接上Peace

44:50.850 --> 44:51.170
对吧

44:51.170 --> 44:52.370
这些东西是很简单

44:52.370 --> 44:53.330
主要是设置什么

44:53.330 --> 44:54.610
背景图和背景图位置

44:55.090 --> 44:55.970
Background

44:57.970 --> 44:58.770
Background

44:59.330 --> 44:59.970
背景

45:00.290 --> 45:02.050
这里面就一起设置了吧

45:02.050 --> 45:04.930
一起设置背景图的图片和位置

45:04.930 --> 45:05.970
好图片在哪呢

45:05.970 --> 45:07.170
图片是不是配置好了的

45:07.170 --> 45:08.210
Image URL

45:08.210 --> 45:08.850
对吧

45:08.850 --> 45:10.370
图片直接配置好了的

45:11.330 --> 45:12.530
来自于哪呢

45:12.530 --> 45:13.570
来自于哪个图片呢

45:13.570 --> 45:14.370
来自于

45:14.370 --> 45:15.570
这里拼接一下

45:15.570 --> 45:17.090
来自Gaming Config

45:17.090 --> 45:18.770
点Image URL

45:18.770 --> 45:20.130
背景图拼接好

45:20.130 --> 45:21.570
好背景图的位置

45:21.570 --> 45:23.490
位置是不是直接来

45:23.490 --> 45:24.290
位置是啥

45:24.930 --> 45:25.650
位置是啥

45:26.450 --> 45:27.570
位置是不是就是这个

45:28.850 --> 45:30.290
它的就是正确的坐标

45:30.290 --> 45:30.610
对吧

45:30.610 --> 45:32.290
它正确的坐标就代表它的位置

45:33.410 --> 45:34.450
位置是在哪呢

45:34.450 --> 45:35.170
位置是在

45:35.970 --> 45:36.850
背景图的位置

45:36.850 --> 45:37.410
就两个嘛

45:37.410 --> 45:37.890
对吧

45:37.890 --> 45:39.410
两个一般在这里写个

45:39.570 --> 45:40.530
这里写个空格

45:40.530 --> 45:41.330
这里写个对吧

45:41.330 --> 45:41.810
两个

45:41.810 --> 45:43.170
好我们再来拼接

45:43.170 --> 45:44.530
第一个背景图的位置

45:44.530 --> 45:45.330
是不是附的

45:45.330 --> 45:46.770
前面加个附号嘛

45:46.770 --> 45:47.650
附的什么

45:47.650 --> 45:50.050
附的Z is correct left

45:52.210 --> 45:53.490
好那么这边呢

45:53.490 --> 45:54.210
写的是什么呢

45:54.210 --> 45:58.290
附的Z is correct top

45:58.850 --> 45:59.410
注意

45:59.410 --> 46:01.890
一定是正确位置的轰转坐标

46:03.410 --> 46:04.690
好我们把正确位置设置好

46:05.330 --> 46:07.250
它就就完了对吧

46:07.250 --> 46:08.050
还干嘛呢

46:08.050 --> 46:08.850
好甚至

46:08.850 --> 46:11.810
甚至我们现在就直接把这个动物对象放到哪

46:12.370 --> 46:14.290
我们直接把这个动物对象就放到这个

46:14.290 --> 46:15.490
容器里边去

46:15.490 --> 46:15.730
对吧

46:15.730 --> 46:16.450
放到这里边去

46:16.450 --> 46:17.490
啊这个是个数组对吧

46:17.490 --> 46:19.650
记录了所有的所有的这个对象

46:19.650 --> 46:19.810
好

46:19.810 --> 46:21.970
我们直接直接放进去玩事了啊

46:21.970 --> 46:22.770
就是Z is什么

46:24.690 --> 46:25.970
game configure

46:25.970 --> 46:26.450
里边什么

46:27.010 --> 46:27.570
container

46:27.570 --> 46:28.050
哎呗

46:28.050 --> 46:28.290
dom

46:29.570 --> 46:30.290
append

46:30.930 --> 46:31.410
child

46:31.970 --> 46:32.610
Z is still

46:32.610 --> 46:32.770
dom

46:33.570 --> 46:34.130
对吧

46:34.130 --> 46:35.330
把当前那个生存

46:35.330 --> 46:36.850
创建新创建的那个动物对象

46:36.850 --> 46:38.450
不直接放过去玩事了

46:38.530 --> 46:38.930
对不对

46:38.930 --> 46:40.130
放过去就完事了

46:40.130 --> 46:40.370
好

46:40.370 --> 46:41.250
保存看一下啊

46:41.970 --> 46:42.610
那么你看到

46:44.210 --> 46:45.010
我们这里呢

46:45.010 --> 46:46.610
里边就加了很多的DIV了

46:46.610 --> 46:47.010
看到没

46:47.730 --> 46:48.370
你看一下啊

46:51.010 --> 46:52.290
看一下这个DIV展开

46:52.290 --> 46:53.730
你看是不是加了很多的DIV了

46:53.730 --> 46:54.050
对吧

46:54.050 --> 46:55.010
加了很多的DIV了

46:55.810 --> 46:56.370
好

46:56.370 --> 46:56.610
好

46:56.610 --> 46:57.890
那么我们看一下第一个DIV

46:57.890 --> 46:59.010
第一个DIV背景图

47:00.450 --> 47:01.330
背景图的位置

47:01.330 --> 47:01.810
没问题

47:01.810 --> 47:02.690
是这一块的吧

47:02.690 --> 47:03.330
是这一块

47:03.330 --> 47:03.650
啊

47:03.650 --> 47:04.130
一个肩肩

47:04.610 --> 47:05.330
看一下啊

47:05.330 --> 47:06.610
说个肩肩没问题吧

47:06.610 --> 47:06.930
好

47:07.010 --> 47:08.450
第二个DIV为什么出问题了呢

47:08.450 --> 47:09.170
我们来看一下啊

47:09.170 --> 47:10.130
到底是哪里出问题了

47:10.850 --> 47:11.090
好

47:11.090 --> 47:11.890
第二个DIV

47:11.890 --> 47:12.450
我们发现

47:12.450 --> 47:14.050
他没有设置这个Background

47:14.770 --> 47:15.010
啊

47:15.730 --> 47:16.370
第二个DIV

47:16.370 --> 47:18.130
他没有设置这个Background

47:18.130 --> 47:19.330
那怎么回事呢

47:19.330 --> 47:19.970
我们看一下啊

47:20.690 --> 47:21.330
第二个DIV

47:21.330 --> 47:23.730
他为什么没有去设置这个Background

47:25.250 --> 47:25.570
呃

47:26.290 --> 47:26.770
这里呢

47:26.770 --> 47:27.890
那是这里出了问题

47:29.010 --> 47:30.130
我们把这个打印出来啊

47:30.130 --> 47:30.850
打印出this

47:32.370 --> 47:33.090
打印出this

47:33.810 --> 47:34.450
看说log

47:35.090 --> 47:35.650
this

47:35.650 --> 47:36.290
把这个this

47:36.290 --> 47:37.490
当前对象打印出来

47:37.490 --> 47:38.370
还打印了多少次

47:38.930 --> 47:39.650
每次都打印的

47:39.650 --> 47:39.810
好

47:39.810 --> 47:41.250
咱们来关注一下第二次的问题

47:41.250 --> 47:41.730
第二次

47:42.370 --> 47:43.490
correct left

47:44.450 --> 47:44.850
哦

47:44.850 --> 47:45.490
明白了

47:45.490 --> 47:46.050
明白了

47:46.050 --> 47:46.850
你没加啥呢

47:46.850 --> 47:48.370
你没有加答案位对吧

47:48.370 --> 47:49.010
没有加答案位

47:49.010 --> 47:49.810
PX

47:49.810 --> 47:52.210
我们只是把数字部分放这

47:52.690 --> 47:53.570
数字部分放这

47:53.570 --> 47:54.370
单位里不要忘了

47:54.850 --> 47:55.490
PX

47:55.490 --> 47:57.010
总之这个是制服算拼接

47:57.010 --> 47:57.970
这个没啥好说

47:57.970 --> 47:59.010
没啥好想的

47:59.010 --> 47:59.970
就是把有变

47:59.970 --> 48:01.570
有来自于变量计算的部分

48:01.570 --> 48:02.450
把它替换掉

48:03.570 --> 48:04.050
好

48:04.050 --> 48:04.450
保存

48:06.530 --> 48:06.690
好

48:06.690 --> 48:07.490
你看到

48:07.570 --> 48:09.410
所以每一个小方法都有东西了

48:09.410 --> 48:09.730
对吧

48:09.730 --> 48:10.290
都有东西了

48:11.490 --> 48:11.730
好

48:11.730 --> 48:13.090
那么现在就是设置位置

48:13.090 --> 48:13.250
啊

48:13.250 --> 48:14.130
就是设置位置

48:15.250 --> 48:16.370
设置位置的话

48:16.370 --> 48:17.250
那你想一想

48:17.250 --> 48:18.690
以后的位置是不是经常会变

48:18.690 --> 48:18.930
对吧

48:18.930 --> 48:19.730
经常会变

48:19.730 --> 48:20.290
那么这里呢

48:20.290 --> 48:21.490
我可以把它写成一个函数

48:22.050 --> 48:22.610
写成一个函数

48:22.610 --> 48:23.330
就设置位置

48:23.330 --> 48:23.730
当然

48:23.730 --> 48:25.090
他肯定是要得绝对定位嘛

48:25.090 --> 48:25.730
对吧

48:25.730 --> 48:27.090
先把它设置为绝对定位

48:27.090 --> 48:27.730
style

48:27.730 --> 48:28.130
pration

48:28.930 --> 48:29.570
设置为什么

48:29.570 --> 48:30.610
apps and loads

48:30.610 --> 48:31.170
绝对定位

48:31.970 --> 48:32.370
然后呢

48:32.370 --> 48:33.490
这里我们再写一个函数

48:34.450 --> 48:36.130
给当前对象的加个函数

48:36.210 --> 48:37.650
就是show

48:37.650 --> 48:37.970
show

48:39.810 --> 48:40.850
加个函数

48:40.850 --> 48:41.890
这个函数干嘛呢

48:41.890 --> 48:43.010
这个函数是根据啥

48:44.210 --> 48:44.690
根据

48:45.410 --> 48:48.290
当前的neft值和top值

48:48.290 --> 48:49.170
这是当前位置

48:49.170 --> 48:49.410
对吧

48:49.410 --> 48:50.130
这是正确位置

48:50.130 --> 48:51.730
正确位置是不能动的

48:51.730 --> 48:52.930
根据当前位置

48:54.130 --> 48:57.090
重新设置div的位置

48:58.850 --> 48:59.170
好

48:59.170 --> 49:00.690
那么这里怎么写呢

49:00.690 --> 49:01.570
它就非常简单

49:01.570 --> 49:02.370
dom style

49:02.370 --> 49:03.010
什么neft

49:03.010 --> 49:03.810
等于啥

49:03.810 --> 49:05.090
z点neft

49:05.090 --> 49:06.130
拼接上px

49:06.130 --> 49:06.690
对吧

49:06.690 --> 49:08.130
把当前的neft值

49:08.130 --> 49:09.970
这表示当前的neft值

49:09.970 --> 49:11.810
当前的横坐标

49:14.610 --> 49:16.290
当前的重坐标

49:18.130 --> 49:18.370
好

49:19.090 --> 49:20.370
neft值设为这个

49:20.370 --> 49:20.930
然后呢

49:20.930 --> 49:22.450
再来dom style

49:22.450 --> 49:23.650
点top值

49:24.210 --> 49:25.170
rest点top

49:25.170 --> 49:27.170
就是重新设置一下的动物元素

49:27.170 --> 49:29.650
它的这些信息

49:29.650 --> 49:30.130
对应上

49:30.130 --> 49:30.930
这是我们的数据

49:30.930 --> 49:31.250
对吧

49:31.250 --> 49:32.610
它不在动物元素上面

49:32.610 --> 49:33.490
那么把这些数据呢

49:33.490 --> 49:34.770
重新设置到动物元素上面

49:35.250 --> 49:35.650
好了

49:36.210 --> 49:37.330
那么我这里干嘛呢

49:37.330 --> 49:38.530
调这个函数不就完了吗

49:38.530 --> 49:38.770
对吧

49:38.770 --> 49:39.330
rest秀

49:40.450 --> 49:41.490
调这个函数就完了

49:42.610 --> 49:44.290
但这里还没有复制

49:45.490 --> 49:45.650
哦

49:45.650 --> 49:46.930
这里运行到这里的时候

49:46.930 --> 49:47.890
这个秀还没有复制

49:47.890 --> 49:47.970
好

49:47.970 --> 49:48.690
我们在下面调用

49:49.410 --> 49:49.970
下面调用

49:50.530 --> 49:51.090
rest秀

49:52.690 --> 49:53.170
就完了

49:53.810 --> 49:54.530
保存看一下

49:55.170 --> 49:55.570
看一下

49:58.180 --> 49:58.740
你看

49:58.740 --> 50:00.980
其实你看到的是一张完整图片

50:00.980 --> 50:02.580
你看到了的是一张完整图片

50:02.580 --> 50:03.220
但是

50:03.220 --> 50:04.020
但是你看一下

50:04.580 --> 50:05.460
你看一下

50:05.540 --> 50:07.060
所以一块一块拼接成的

50:07.060 --> 50:07.780
你无非呢

50:07.780 --> 50:08.740
给它加上一个什么了

50:08.740 --> 50:10.020
加上一个波段对吧

50:10.020 --> 50:10.900
给它加上一个波段

50:10.900 --> 50:11.380
那加呗

50:12.660 --> 50:14.260
这些都是样什么

50:14.260 --> 50:15.140
自己夹就完了

50:15.140 --> 50:15.540
波段

50:16.020 --> 50:16.660
等于什么了

50:16.660 --> 50:17.540
等于一个像素

50:17.540 --> 50:18.420
稍微的白色

50:19.540 --> 50:20.340
加上一个边框

50:21.220 --> 50:21.540
对吧

50:21.540 --> 50:22.420
加上一个边框

50:22.420 --> 50:23.060
这就出来了

50:24.020 --> 50:25.060
每一个地方是个DIV

50:25.060 --> 50:25.300
看没

50:26.740 --> 50:28.580
每个DIV有不同的作标

50:28.580 --> 50:31.060
先把目前这一块代码搞清楚

50:31.780 --> 50:33.380
一定要先把目前的代码搞清楚

50:33.380 --> 50:34.340
这些代码都没搞清楚

50:34.340 --> 50:35.700
你后面不要想了

50:36.180 --> 50:37.460
好好看慢慢磨

50:37.460 --> 50:38.580
一开始你接触一个代码

50:38.580 --> 50:39.700
肯定是非常非常老火的

50:39.700 --> 50:40.900
我能体会到你们

50:40.900 --> 50:41.700
这种心情

50:41.700 --> 50:42.580
这种感觉

50:42.580 --> 50:45.300
但是每一个同学都必须要经历这个阶段

50:45.300 --> 50:46.260
必须要经历

50:46.260 --> 50:46.740
不然的话

50:46.740 --> 50:48.420
你们永远只能做一些小效果

50:48.420 --> 50:50.100
你完不成一个完整的练习

50:51.620 --> 50:51.940
好

50:51.940 --> 50:53.460
这就完事了对吧

50:53.460 --> 50:54.340
但是加拿波的过后

50:54.340 --> 50:55.220
大家注意啊

50:55.220 --> 50:56.980
它的整个尺寸变了

50:56.980 --> 50:57.780
整个尺寸变了

50:57.780 --> 50:58.340
因为波段

50:58.340 --> 51:00.340
它也会计算到尺寸里面的对吧

51:00.340 --> 51:02.340
波段也会计算到尺寸里面的

51:02.340 --> 51:02.900
这个波段

51:03.860 --> 51:04.580
所以说呢

51:04.580 --> 51:05.140
这一块呢

51:05.140 --> 51:06.100
我们要怎么来处理呢

51:07.060 --> 51:08.180
你们应该应该懂吧

51:08.180 --> 51:09.220
叫做Borderbox

51:10.020 --> 51:11.140
Borderbox

51:11.140 --> 51:11.540
为什么

51:12.980 --> 51:13.940
这个BoxSizing

51:15.060 --> 51:15.940
Sizing

51:15.940 --> 51:17.140
为什么Borderbox

51:18.100 --> 51:18.900
Borderbox

51:18.900 --> 51:20.660
这里怎么能用短鞋杠了

51:20.660 --> 51:21.540
这里是指

51:21.540 --> 51:22.420
只是一个字幕刷

51:22.420 --> 51:24.020
字幕刷里面写啥都行

51:24.020 --> 51:25.140
这里可以无所谓的

51:25.140 --> 51:25.620
你随便用

51:27.300 --> 51:28.500
这个能力也吧

51:28.500 --> 51:29.060
所以说呢

51:30.020 --> 51:30.820
你们学东西

51:30.820 --> 51:32.580
真的就看都一的课程

51:32.980 --> 51:33.860
看都一的课程

51:34.500 --> 51:36.180
这些东西就不用我再重新解释了

51:36.180 --> 51:38.260
这个表示的是

51:38.260 --> 51:40.420
表示的是合适尺寸的计算模式

51:40.980 --> 51:41.940
你这样子写的之后

51:41.940 --> 51:43.460
把它设为Borderbox之后呢

51:43.460 --> 51:44.660
它就变成了边框盒

51:44.660 --> 51:45.540
什么叫边框盒

51:45.540 --> 51:46.820
就是包含边框

51:46.820 --> 51:47.940
包含Pending

51:47.940 --> 51:49.460
包含内容部分

51:50.020 --> 51:51.540
就是如果你这样子设置之后

51:51.540 --> 51:53.140
你之后设置的宽度高度

51:53.700 --> 51:55.780
它是连着边框一起算的

51:55.780 --> 51:56.420
不然的话

51:56.420 --> 51:57.540
你设置的宽度和高度

51:57.540 --> 51:58.740
它只算内容部分

51:59.940 --> 52:01.060
就是目前

52:01.060 --> 52:01.780
摸的情况下

52:01.780 --> 52:02.660
你看我刚设置的宽度

52:03.380 --> 52:04.580
本来是166的

52:04.580 --> 52:05.540
你看宽度

52:05.540 --> 52:07.540
算出来本来是166的

52:07.540 --> 52:08.980
但它最多的宽度是多少

52:08.980 --> 52:09.700
164

52:09.700 --> 52:10.180
为什么

52:10.180 --> 52:11.460
因为它考虑到了边框

52:12.020 --> 52:13.140
它为什么要考虑边框

52:13.140 --> 52:14.420
因为我这样子设置了

52:15.300 --> 52:17.380
你看一下我的课程里边

52:17.380 --> 52:18.180
它关于那个

52:18.180 --> 52:19.620
我记得那一张节叫什么名字

52:20.820 --> 52:21.620
叫啥名字

52:21.620 --> 52:23.460
是关于这个合模型的应用

52:23.460 --> 52:25.540
合模型的应用那个章节

52:25.540 --> 52:26.580
我讲到这个问题

52:26.580 --> 52:27.220
可以去看一下

52:28.580 --> 52:29.300
好了

52:29.300 --> 52:30.500
那是不是就排好了

52:30.500 --> 52:30.900
对吧

52:30.900 --> 52:31.380
排好了

52:31.380 --> 52:32.420
先把这个看懂

52:32.580 --> 52:33.620
好 接下来再来思考

52:35.220 --> 52:36.660
有一块是缺失的

52:37.940 --> 52:39.060
有一块是缺失的

52:40.100 --> 52:41.540
最后这一块是缺失的

52:42.340 --> 52:42.580
好

52:42.580 --> 52:44.740
缺失的怎么处理

52:46.100 --> 52:46.980
缺失的怎么处理

52:48.900 --> 52:49.940
缺失的咋处理呢

52:51.060 --> 52:51.780
缺失的

52:52.260 --> 52:52.740
这一件事

52:53.460 --> 52:55.940
你就让这个DIV看不见就完事了

52:55.940 --> 52:59.220
你只需要让这个DIV看不见就完事了

52:59.860 --> 53:00.660
就完事了

53:00.660 --> 53:02.260
就这个DIV是看不见的

53:02.340 --> 53:02.820
但他在不在

53:02.820 --> 53:03.220
他在

53:03.860 --> 53:04.580
DIV在

53:04.580 --> 53:05.700
但他是看不见的

53:06.340 --> 53:06.820
就完了

53:07.380 --> 53:07.860
就完了

53:08.900 --> 53:09.380
好

53:09.380 --> 53:11.220
那么我们现在要做的是啥呢

53:11.220 --> 53:12.980
就是让这个DIV看不见

53:13.540 --> 53:14.340
看不见是什么

53:14.340 --> 53:15.140
Display and down

53:15.620 --> 53:16.020
对不对

53:16.500 --> 53:18.020
好 那么哪个DIV看不见了

53:18.020 --> 53:18.660
最后一个

53:19.220 --> 53:20.820
好 谁知道是不是最后一个呢

53:21.380 --> 53:22.260
他知不知道

53:22.260 --> 53:22.900
他不知道

53:22.900 --> 53:24.020
他只知道一个Left

53:24.020 --> 53:24.580
一个Top

53:24.580 --> 53:25.700
他也不知道是不是最后一个

53:26.180 --> 53:27.460
他不知道是不是最后一个

53:28.100 --> 53:29.220
因此谁知道呢

53:29.620 --> 53:30.820
谁知道他是不是最后一个呢

53:31.300 --> 53:33.220
你创建的时候是不是非常清楚

53:33.460 --> 53:33.860
对吧

53:34.100 --> 53:35.860
最后一行 最后一列是不是最后一个

53:36.260 --> 53:36.740
对不对

53:36.740 --> 53:37.380
所以说这里呢

53:37.380 --> 53:38.980
我给他给他一个参数

53:39.140 --> 53:39.940
一个参数

53:40.100 --> 53:40.500
叫做

53:41.140 --> 53:42.420
意思Visible

53:42.980 --> 53:44.020
是不是可见的

53:44.660 --> 53:45.700
这个参数表示的是

53:46.900 --> 53:47.380
这是

53:48.260 --> 53:49.460
小方块的

53:52.000 --> 53:55.440
这个是小方块的勾招函数

53:55.840 --> 53:57.680
好 这个意思Visible表示的是

53:57.680 --> 53:58.640
是否可见

53:59.120 --> 53:59.840
是否可见

54:00.080 --> 54:01.520
只有一个是不可见的

54:01.760 --> 54:03.680
只有一个小方块是不可见的

54:04.560 --> 54:05.280
原来的意思吧

54:05.920 --> 54:07.520
这个表示是否可见

54:08.240 --> 54:10.080
好 那么接下来我们创建的时候呢

54:10.320 --> 54:11.440
比方说创建

54:13.520 --> 54:14.080
创建

54:14.320 --> 54:15.680
那么到底是否可见呢

54:15.680 --> 54:17.520
我们这里的最后用个变量嘛

54:17.680 --> 54:18.400
用个变量

54:22.320 --> 54:23.360
isVisible

54:23.840 --> 54:24.560
是否可见

54:24.560 --> 54:25.600
默认是可见的

54:25.840 --> 54:27.280
那么如果什么情况下不可见

54:27.280 --> 54:28.560
那就最后一行 最后一列

54:28.880 --> 54:31.280
I等于最后一行 Game Config

54:31.680 --> 54:33.520
Rose-1

54:33.840 --> 54:34.720
最后一行嘛

54:34.720 --> 54:35.280
对不对

54:35.280 --> 54:36.560
I从0开始的

54:36.800 --> 54:38.560
并且接等于什么呢

54:38.720 --> 54:39.760
Game Config

54:40.400 --> 54:43.280
Rose-1

54:43.280 --> 54:44.240
是不是最后一列

54:44.800 --> 54:45.680
如果是最后一行

54:45.680 --> 54:46.400
最后一列的话

54:46.400 --> 54:47.600
isVisible等于什么

54:47.600 --> 54:48.000
Force

54:48.720 --> 54:50.000
好 我把分行写吧

54:50.000 --> 54:51.200
分行写看得清楚一点

54:52.480 --> 54:54.000
好 那么我们建立一个小方块

54:54.640 --> 54:55.680
创建一个小方块

54:56.720 --> 54:58.400
那么小方块的就是

54:58.400 --> 54:59.760
横坐标 中坐标

54:59.760 --> 55:00.240
然后呢

55:00.240 --> 55:01.280
还就是是否可见

55:01.600 --> 55:02.320
isVisible

55:02.640 --> 55:03.440
是否可见

55:04.240 --> 55:05.920
好 那么把这个小方块加进去

55:05.920 --> 55:07.200
加到这个数组里边去

55:07.200 --> 55:08.800
数组留在我们之后要用的

55:10.320 --> 55:11.200
好 那么这边

55:11.200 --> 55:12.400
我们就可以根据这个参数

55:12.400 --> 55:13.760
isVisible这个参数来

55:14.160 --> 55:14.960
设置它的样式了

55:14.960 --> 55:16.080
如果

55:16.240 --> 55:17.120
isVisible

55:17.600 --> 55:19.280
如果它不可见

55:19.760 --> 55:20.400
相反的

55:20.400 --> 55:21.600
如果它不可见

55:21.600 --> 55:22.800
就是加个感叹号

55:22.800 --> 55:23.760
那怎么样呢

55:23.760 --> 55:24.960
就是不是设置什么

55:25.360 --> 55:26.240
设置这个

55:27.920 --> 55:29.120
那个Style

55:29.120 --> 55:29.920
Display

55:30.160 --> 55:30.880
为啥

55:30.880 --> 55:31.760
文郎

55:31.760 --> 55:33.200
对吧 看不见嘛 对吧

55:33.200 --> 55:34.400
看不见就完事了

55:35.120 --> 55:36.240
保存 你看一下

55:36.240 --> 55:37.760
那最后一个是不是看不见了

55:37.760 --> 55:38.480
对不对

55:38.480 --> 55:39.760
还有个鼠标样式

55:39.760 --> 55:41.040
鼠标样式再设置一下

55:41.040 --> 55:42.080
这些都很简单

55:42.080 --> 55:43.200
就设置样式

55:43.200 --> 55:44.400
合设 对吧

55:44.400 --> 55:45.120
通过这个链型的

55:45.120 --> 55:45.600
也可以

55:45.600 --> 55:47.920
链起了很多关于样式相关的东西

55:47.920 --> 55:48.560
Pointer

55:49.760 --> 55:50.240
你看

55:50.240 --> 55:51.760
变成小手了嘛 对吧

55:52.400 --> 55:53.120
没问题吧

55:54.240 --> 55:55.840
好 这里是不是就做完了

55:56.480 --> 55:58.000
这一块区是不是就做完了

55:58.000 --> 55:59.840
好 接下来是打乱顺序

56:00.800 --> 56:02.480
打乱顺序

56:03.200 --> 56:05.120
就是除了最后一个小方块不动之外

56:05.120 --> 56:06.160
其他的顺序呢

56:06.160 --> 56:07.440
完全打乱

56:07.440 --> 56:08.560
完全打乱

56:09.680 --> 56:11.360
那怎么来打乱顺序呢

56:11.360 --> 56:11.920
问题是

56:12.560 --> 56:13.600
打乱顺序

56:13.600 --> 56:16.560
是不是就把这个数组重新排列一下

56:16.560 --> 56:17.200
就完事了

56:18.000 --> 56:18.880
把这个数组

56:18.880 --> 56:20.400
你现在不是准备好了一个数组吗

56:20.400 --> 56:20.640
对吧

56:20.640 --> 56:21.600
数组已经拿到了

56:21.600 --> 56:23.040
你把这个数组的顺序打乱

56:23.040 --> 56:24.080
你是不是就完事了

56:24.080 --> 56:24.640
对不对

56:24.640 --> 56:25.200
没问题吧

56:26.000 --> 56:27.760
你把这个数组的顺序打乱就完事了

56:28.720 --> 56:30.640
好 那么现在呢我们

56:33.360 --> 56:35.200
这里呢我们就可以把名字换一下

56:35.200 --> 56:36.880
不用这个init block array了

56:36.880 --> 56:37.920
直接就是init

56:38.960 --> 56:39.600
也差不多

56:39.600 --> 56:40.000
也差不多

56:42.320 --> 56:42.720
然后呢

56:43.440 --> 56:45.920
第二部分就是打乱数组

56:47.200 --> 56:48.720
就数组洗牌

56:48.720 --> 56:50.240
数组洗牌是不是我过很多次了

56:51.280 --> 56:52.160
你不说很多次嘛

56:52.160 --> 56:53.360
至少我们玩过了对吧

56:53.360 --> 56:54.720
什么sort对吧

56:54.720 --> 56:56.560
直接来洗牌怎么写

56:56.560 --> 56:57.040
怎么写

56:57.200 --> 56:58.880
我们专门用个函数吧

56:58.880 --> 57:00.000
专门来写个函数

57:01.280 --> 57:02.000
soft

57:02.000 --> 57:02.720
soft什么意思

57:02.720 --> 57:03.600
就是洗牌的意思

57:07.120 --> 57:09.360
给blocks数组洗牌

57:10.320 --> 57:10.960
洗牌的意思

57:11.680 --> 57:13.200
好 怎么来洗牌呢

57:13.200 --> 57:14.800
是不是就是blocks

57:15.520 --> 57:16.400
blocks

57:16.400 --> 57:17.120
干嘛

57:17.120 --> 57:18.000
sort

57:18.000 --> 57:18.240
sort

57:19.760 --> 57:20.480
写过了对吧

57:20.480 --> 57:21.280
return什么

57:21.280 --> 57:22.720
mys.radon

57:22.720 --> 57:24.720
减去0.5

57:25.280 --> 57:26.160
所以数组洗牌

57:26.880 --> 57:28.880
好 数组洗完牌之后

57:29.840 --> 57:31.120
洗完牌就就完了吗

57:31.120 --> 57:31.760
就完了吗

57:31.760 --> 57:32.640
我们来看一下啊

57:32.640 --> 57:33.600
如果真的就完了

57:33.600 --> 57:34.320
我们来看一下

57:35.840 --> 57:38.800
它只是改变了数组的顺序对吧

57:38.800 --> 57:40.480
它改变的是数组的顺序

57:40.480 --> 57:41.280
它有没有动这些

57:41.280 --> 57:43.200
怎么left值和top值

57:43.200 --> 57:43.680
有没有动

57:44.480 --> 57:46.320
是不是还是没动对吧

57:46.320 --> 57:48.240
它只是改变了数组的顺序

57:48.240 --> 57:49.920
只是改变了数组的顺序而已

57:50.560 --> 57:51.040
因此呢

57:51.040 --> 57:52.480
我这里是不是还在来一次

57:53.040 --> 57:53.760
对不对

57:53.760 --> 57:55.520
还在去循环一下这个数组

57:56.880 --> 57:57.760
重新

57:57.760 --> 58:00.480
重新给它的left值和top值负质

58:01.760 --> 58:02.800
没问题吧

58:02.800 --> 58:04.560
我在循环数组

58:04.560 --> 58:06.480
重新给它的left值和top值负质

58:07.040 --> 58:09.120
我这里只是改变了数组的顺序

58:09.120 --> 58:10.480
我要改变的是什么

58:10.480 --> 58:12.160
我要改变的是每一个df

58:12.160 --> 58:13.680
就是每数组里面每一个对象

58:14.240 --> 58:14.880
对象的是啊

58:14.880 --> 58:17.120
对象的left和top属性

58:17.120 --> 58:18.320
我要改的是这个东西

58:19.120 --> 58:20.320
改的是这个东西

58:20.320 --> 58:21.040
你看这意思吧

58:21.760 --> 58:23.040
我要改的是这个东西

58:23.680 --> 58:24.400
因此呢

58:25.120 --> 58:26.960
这种方式在洗牌

58:26.960 --> 58:27.920
合适吗

58:27.920 --> 58:29.120
好像就不太合适了

58:29.120 --> 58:30.240
你只改不了数组的顺序

58:30.240 --> 58:31.520
我要改数组的顺序干嘛呢

58:31.520 --> 58:33.120
我改这个东西有啥意义呢

58:33.120 --> 58:36.640
我要改变的是left和top值

58:36.640 --> 58:37.920
我要改的是这个东西

58:38.800 --> 58:39.360
好

58:39.360 --> 58:39.840
来吧

58:39.840 --> 58:40.480
想吧

58:40.480 --> 58:41.360
这里该怎么来做

