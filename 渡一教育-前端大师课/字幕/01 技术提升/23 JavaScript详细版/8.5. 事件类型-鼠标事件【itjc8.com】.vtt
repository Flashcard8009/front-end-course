WEBVTT

00:00.000 --> 00:17.700
好 从这个开始呢 我们就开始学习事件的类型

00:18.400 --> 00:24.200
事件类型一学习完 咋办事件这一张就结束了啊 就没啥了 因为怎么注射事件我们知道了

00:24.700 --> 00:33.100
事件在处理函数里边怎么来获取事件对象 事件对象里边有哪些东西可以得到可以用啊 我们也知道了

00:33.700 --> 00:36.820
那么就剩下事件类型了 就是有哪些事件我们可以处理

00:37.420 --> 00:43.020
我们之前说有鼠标 有键盘 对吧 还先忘记发到的事件 好 我们接下来几节课啊 就来讲这么个东西

00:43.740 --> 00:48.940
好 这节课呢 我们来学习鼠标事件 鼠标事件呢 有哪些呢 就这么一些东西

00:49.460 --> 00:57.660
好 就这么一些东西 都比较常见啊 都比较常见 可能少数几个了 就这个东西不太常见而已 好一个个说吧 第一个

00:58.620 --> 01:03.020
用户单click 说见过的 写了很多次了 对吧 点击事件

01:03.660 --> 01:12.380
它指的是什么 指的是用户单击 鼠标 主按钮 什么叫主按钮 一般都是左键啊 这个系统可以配置的啊 系统是可以配置

01:12.940 --> 01:22.700
主键在左按钮还是右按钮是可以配置的啊 但是一般都没有人去配置 无所谓吧 我们也不管去去管用户怎么去配置 无所谓 只要他单击的主按钮

01:23.420 --> 01:31.900
那么或者是在聚焦时按一下回车键 以后我们演示可以看一下啊 他就会触发这个click事件 好 比方说啊 举个例子啊

01:32.860 --> 01:33.500
click事件

01:35.340 --> 01:39.260
看一下啊 比方说我们这里呢 有一个

01:40.220 --> 01:46.060
有个啥的 就一个div 或者你不要加一个按钮吗 button 啊 点击

01:47.100 --> 01:53.820
啊 不一定是按钮啊 可以是别的什么玩意都行啊 然后呢我们得到按钮啊 给他注册点击事件啊 document query

01:54.780 --> 01:57.660
省那个点啊 然后button

01:58.700 --> 02:06.460
得到按钮 给他注册啊 或者是dome2的方式 对吧adv是你是哪都一样的啊 onclick 事件名称是click

02:07.100 --> 02:13.820
好 注册事件啊 注册事件 然后我们来输出了被点击了 被点击了 看一下什么情况下会触发啊

02:15.020 --> 02:18.300
啊 点右键 运行出来啊 看着啊

02:18.620 --> 02:20.380
f12

02:21.660 --> 02:35.260
现在呢 我们点击按钮是不是触发了 然后我们鼠标按下去不动 是不是没有触发 对吧 鼠标抬起来才算是被点击了 对吧 这家要触发 点击就是按下抬起啊 按下抬起 按下抬起 按下抬起

02:36.140 --> 02:43.340
如果你按下去 你移开了啊 移开了抬起了 会不会触发 他不会触发 一定是在这个元素上面按下抬起

02:44.300 --> 02:51.100
按下去你稍微移动一点 还是在这个元素上移开能不能触发 能触发 这就是点击啊 点击的意思就是这个意思

02:51.740 --> 02:56.060
还有种情况就是你按太不见啊 按太不见你看 把它聚焦

02:56.940 --> 02:58.620
聚焦过后按一下回车 你看

02:59.660 --> 03:03.260
所以也会触发 对吧 也会触发 他也是点击啊 也相当于是点击了

03:03.980 --> 03:08.940
简不简单 超级简单 没啥好说的啊 这是click 好下一个

03:09.900 --> 03:15.980
呃 db click 什么意思呢 他指的是用户双击主数标按钮的时候触发

03:16.380 --> 03:23.420
那么双击的频率呢 取决于系统的配置啊 你甭管用户是怎么配置的 总之呢 系统他知道他是双击了 他就会触发这个

03:24.060 --> 03:32.380
事件 好 咱们来看一下吧 就这个事件 再换一下吧 换一下这个事件名字啊 把把复制一下吧 把复制一下 三天过来

03:33.100 --> 03:33.500
啊

03:34.940 --> 03:45.020
这里是被 这里被双击啊 被双击了 好 这里面事件名字呢 给他换一下啊 啊 db l click

03:46.060 --> 03:55.100
啊 保存看一下啊 点击他是被点击了 对吧 双击啊 你看 他除了触发了两次被点击了 还要触发一个双击事件

03:55.420 --> 03:57.580
那如果你双击比较慢了 我们看一下

03:58.140 --> 03:59.580
12

04:00.380 --> 04:06.300
有没有反应双击是没有反应的 对吧 他的频率取决于系统配置啊 系统里边是可以配置的啊 我们不用去管

04:07.100 --> 04:14.380
管他用户咋配置呢 跟我们有什么什么关系呢 没有什么关系 对吧 我们只要系统判定他双击了 我们就认为他双击了

04:15.340 --> 04:25.660
好 下一个啊 这是鼠标按一下的时候触发啊 按一下的时候会触发这个事件啊 毛斯阿普呢 是鼠标抬起的时候会触发 就一起说了啊 咱们来看啊

04:27.930 --> 04:28.090
啊

04:29.290 --> 04:38.490
我们这就在这吧啊 这里是on mouse down mouse的就是鼠标的意思 当了就是按下去了啊 按下

04:40.250 --> 04:40.570
按下

04:41.610 --> 04:46.410
好 另外一个呢 是抬起对吧 抬起啊 我们这里干脆先把这个按钮得到嘛 比天

04:47.050 --> 04:49.850
document query selector啊 先把这个按钮得到

04:50.170 --> 05:01.260
下边呢 就全部使用这个辩量了 全部使用这个辩量啊 这是按下的时候触发 然后呢 还有抬起啊 mouse up

05:02.140 --> 05:07.980
当鼠标抬起的时候会触发啊concentrate抬起 好 咱们来看一下啊

05:08.860 --> 05:13.340
保存看一下这里的触发顺序啊 按下去看是不是触发按下

05:14.060 --> 05:21.100
抬起来先触发什么抬起再触发什么被点击了 看没有 这事件他的事件触发顺序 再来啊

05:21.420 --> 05:21.900
按下

05:23.020 --> 05:30.460
抬起先触发抬起再触发被点击了 那如果你是双击呢 我们看双击啊 是不是一样的啊 一样的

05:30.700 --> 05:37.500
双击他永远是最后触发啊 是最后触发 看没有 按下先触发抬起再触发 然后呢被被点击了再触发

05:38.620 --> 05:41.020
啊 都是按下和抬起没啥好说的啊

05:41.740 --> 05:50.060
然后呢 下面这个 mouse move啊 mouse move 这个触发的非常频繁了 你的鼠标在元素上移动的时候 它会触发这个事件

05:50.940 --> 05:53.020
鼠标在元素上移动的时候会触发

05:53.420 --> 05:57.580
一天啊 mouse 啊move 啊move

05:59.580 --> 06:08.780
看一下啊console.log 就是鼠标移动表示鼠标移动事件 鼠标在元素上移动的时候会触发啊 你没有移动它就不触发

06:09.340 --> 06:17.500
好 看着啊 这个触发的是非常非常频繁的 我现在不点任何按钮 我这个录屏呢 大家可以看到我的点击鼠标的左键和右键是可以看得见的啊

06:18.060 --> 06:27.660
嗯 看一下啊 我们在移动的时候是不是在触发 你看我现在不动了什么没触发了 对吧 好在移动是不是在触发 它触发的非常非常快啊 它的触发频率

06:28.300 --> 06:35.340
它取决于系统的配置啊取决于系统的配置啊 所以说这个触发频率我们是没法控制的啊 好这是移动触发

06:36.700 --> 06:38.300
好再看啊

06:39.020 --> 06:47.900
呃 mouse move mouse over 鼠标进入元素的时候触发 鼠标 mouse out 鼠标离开元素的时候触发

06:48.220 --> 06:49.180
好就这两个事件

06:49.980 --> 06:59.660
一天啊 mouse啊 mouse over啊 mouse over 这是进入元素啊进入元素啊 over

07:01.100 --> 07:02.220
over进入元素啊

07:02.780 --> 07:13.500
第一天啊 um mouse out啊 um mouse out 这是离开元素啊一个是over over是在什么之上对吧 在什么之上

07:13.500 --> 07:21.020
它进入跑到元素上边去了就进入元素 out out 指的是什么出去了啊离开元素啊出去了

07:21.660 --> 07:27.340
离开元素触发啊这是 out 好保存看一下啊

07:28.220 --> 07:37.020
好我们鼠标移上去你看是不是出发了一个进入元素over对吧离开是不是 out对吧 out离开这个元素区域了

07:38.140 --> 07:46.700
好然后呢我们再看下面两个事件 mouse enter enter 什么意思也是进入的意思对吧 over 是在什么之上 enter 是进入啊

07:47.020 --> 07:51.820
差不多的意思一个是 mouse leave leave 是离开对吧 leave 是离开

07:52.140 --> 07:58.780
这两个呢也是进入元素触发离开元素是触发但是注意这两个的特点它是不会冒泡的

07:59.660 --> 08:05.900
它是不会冒泡一会我们来专门来区别一下这个over out 和 enter leave 啊特别注意一下这个点

08:06.940 --> 08:13.820
我们这里再先先看先看一下吧 mouse enter 这里是 enter

08:14.380 --> 08:26.780
好这里 mouse leave leave 离开啊离开好咱们看一下啊 enter 我这里输出我们这里输出 enter

08:28.620 --> 08:32.220
enter 这个是 leave 好咱们看一下触发顺序

08:32.940 --> 08:43.820
进入好进入元素它先触发的是 over 然后再触发什么 enter 然后离开的时候先触发什么 out 再触发 leave

08:44.380 --> 08:49.260
啊再触发 leave 也就是说这个 over out 这是一对对吧 over 和 out 是一对

08:49.660 --> 08:56.460
那么他们是先触发的先于 enter 和 leave 触发 enter leave 呢他又是一对一个是进入一个是离开他会后触发

08:57.180 --> 09:05.740
好吧这是关于这两两对事件这两对事件呢要特别注意他们的区别啊我们这里专业专门来说一下啊这个是区别

09:07.020 --> 09:13.500
专门说一下这个进入离开的区别好这里比方说我们这里呢这么来干

09:14.460 --> 09:18.700
给他div 一个样式啊给div 一个样式啊

09:19.740 --> 09:25.580
宽度了300个相处高度了300个相处给他设个背景颜色啊 nice blue

09:26.620 --> 09:34.140
好接下来呢我们来看一下啊我们给div注册点击事件二不是点击事件了啊鼠标进入和离开的时间

09:35.500 --> 09:37.500
鼠标进入和离开的时间div

09:39.420 --> 09:47.020
document document query selector 找到div 然后给他注册on mouse over

09:48.140 --> 09:50.380
on mouse over 时间咱们来看一下

09:51.820 --> 09:55.580
console log 进入 over

09:56.780 --> 10:00.060
好然后呢on mouse out

10:01.980 --> 10:06.060
on mouse out对了啊然后呢这个是

10:07.580 --> 10:15.020
离开啊离开over好我们来看一下这两个事件注意我是写到哪的写到div上面去的

10:15.580 --> 10:22.040
看着啊放小一点啊放小一点

10:22.760 --> 10:24.840
刷新好接下来看注意看控制台

10:25.560 --> 10:27.400
进入看是不是触发了over

10:27.880 --> 10:30.280
然后我们现在在鼠标把他移动到按钮上去你看

10:32.200 --> 10:37.960
他出发了什么他先又触发了离开over又触发了进入over

10:38.520 --> 10:43.800
这是怎么回事呢这怎么回事呢你看一下啊我们可以要这样子理解他怎么回事啊

10:46.470 --> 10:53.030
等一下啊这里进入over离开进入离开没问题吧这个没问题吧进入离开啊这个没问题啊

10:53.430 --> 10:59.430
好进入接下来我们移动到按钮上移动到按钮上相当于是离开了这个div对吧

10:59.830 --> 11:03.510
没问题吧进入到按钮上是不是相当于离开这个div对不对

11:03.910 --> 11:07.110
好那么他先触发的是离开事件啊离开事件

11:07.750 --> 11:11.670
然后呢为什么又触发了进入事件呢是因为这个按钮啊

11:12.230 --> 11:14.230
这个按钮他触发了

11:15.030 --> 11:19.510
他触发了什么 mouse over 时间这个按钮是不是触发了 mouse over 时间对吧

11:19.670 --> 11:26.310
即管我没有没有给他注册事件处理程序嘛但是呢他确实是触发了 mouse over 时间我们鼠标移动到了按钮上去

11:26.550 --> 11:31.030
按钮按钮上面去了然后这个按钮呢他把这个事件冒泡向上冒泡

11:31.350 --> 11:33.750
冒泡到哪呢冒泡到了副元素div

11:34.230 --> 11:37.110
你看这意思吧他冒泡到了副元素的div

11:37.590 --> 11:43.430
是这么个意思啊是这么个意思好那么这里呢我们可以怎么来处理呢比方说我给这个按钮呢

11:44.070 --> 11:46.950
让他阻止他冒泡 get element

11:48.150 --> 11:50.550
query selector query selector

11:51.350 --> 11:52.550
阻止这个按钮冒泡

11:53.590 --> 11:53.990
看着啊

11:55.270 --> 11:57.590
btn mouse over

11:58.230 --> 12:02.310
看着我们可以使用啊e to stop the pro

12:03.990 --> 12:04.630
pro

12:04.630 --> 12:05.590
pargation

12:06.630 --> 12:07.670
阻止事件冒泡

12:08.470 --> 12:09.510
好咱们再来看一下

12:10.230 --> 12:12.470
进入到div没问题触发div的over

12:12.470 --> 12:16.630
然后进入到按钮你看只触发了离开看没有离开了这个div

12:16.630 --> 12:21.750
看没有啊这个over呢相当于是只管自己啊只管自己

12:22.230 --> 12:26.550
就是你进入他的进入到他的指元数他也认为离开了这个div

12:26.550 --> 12:29.110
这是over这是一些细节啊这些细节

12:31.110 --> 12:32.950
接下来我们来看一下enter

12:32.950 --> 12:33.590
啊enter

12:33.590 --> 12:37.670
当然出去也是一样啊出去也是一样啊进入离开over对吧

12:38.390 --> 12:43.990
对了啊进入离开over啊因为他进入到按钮他相当于是离开了div

12:43.990 --> 12:45.270
然后呢我们再离开这个

12:46.070 --> 12:49.670
离开这个按钮是不是又触发了一次离开对吧又触发了一次离开

12:49.670 --> 12:53.270
为什么因为离开事件他也会冒泡啊如果你把这个按钮

12:53.830 --> 12:56.630
离开事件也给他处理掉 mouse out

12:57.350 --> 13:01.590
把离开鼠胶离开事件也阻止他冒泡那么现在就是一个纯粹的div

13:02.070 --> 13:06.390
他的进入和进入和离开了看进入离开没问题吧进入

13:07.110 --> 13:10.710
好这边离开到按钮上面相当于是离开了div

13:10.710 --> 13:15.270
然后呢又进入他没有over又离开了又进入了div

13:15.270 --> 13:18.870
over是什么意思在什么之上他就这个意思

13:19.430 --> 13:22.550
你刚才呢是在按钮之上了已经不在div之上了

13:22.550 --> 13:24.470
所以说他触发了离开事件

13:25.030 --> 13:29.430
没有意思吧啊out是跑出去了对吧出去了

13:29.430 --> 13:34.310
进入这个按钮相当于出了这个div了啊这是over和out啊over和out

13:35.270 --> 13:39.590
啊哦这里写错了啊应该是out离开out

13:41.190 --> 13:45.910
out没问题吧好那么注意啊这个事件它是会冒泡的啊

13:45.910 --> 13:48.630
这个事件是会冒泡的我这里只不过阻止了冒泡

13:49.670 --> 13:55.110
好然后再看一下另外一个再看一下另外一个enter和leave

13:56.150 --> 13:59.910
div on mouse enter enter

14:00.630 --> 14:07.750
方形啊输出啊鼠标进入进入他是enter

14:08.870 --> 14:11.510
然后div on mouse leave

14:13.670 --> 14:19.430
leave好鼠标离开啊鼠标离开leave

14:21.700 --> 14:23.860
好看一下啊看一下这两个事件有什么区别

14:24.500 --> 14:29.300
进入离开这个没啥问题吧这个是一样的对吧好进入

14:29.460 --> 14:35.380
到按钮上面去看一下有没有变化没有变化也就是说进入他的指援数呢

14:35.860 --> 14:42.180
哎等一下啊我这里刷新重来啊进入到按钮上有没有变化没变化对吧刚才我移出去了啊

14:42.660 --> 14:49.380
没变化对吧说明了这个东西进入指援数他不考虑他认为指援数呢仍然算他的一部分

14:50.180 --> 14:55.940
不管这个这个指援数在哪他都算他的一部分说我们这里就他的本质区别啊本质区别

14:56.420 --> 14:58.500
就是over和out呢

15:00.180 --> 15:00.580
区别

15:03.140 --> 15:04.660
over和out

15:05.460 --> 15:08.580
不考虑指援数啊不考虑指援数

15:09.220 --> 15:16.660
他认为从负援数移动到指援数对于负援数而言仍然算是离开啊从负援数

15:17.540 --> 15:22.100
移动到指援数对于负援数而言

15:22.820 --> 15:27.460
仍然算做离开啊

15:27.860 --> 15:34.580
然后从指援数呢到负援数呢对负援数而言他仍然算做进入对吧他不考虑不考虑指援去了

15:34.900 --> 15:35.940
不考虑指援数

15:37.220 --> 15:39.540
这是第一个啊好另外一对呢

15:39.940 --> 15:43.300
就是enter和leaf

15:44.100 --> 15:46.660
他是考虑指援数的啊考虑指援数的

15:47.620 --> 15:55.860
在指就是指援数仍然是负援数的一部分

15:56.420 --> 16:03.140
enter是什么进入啊进到这个房间这个房子里边所有东西就是他的指援数对吧都算是我的东西啊他是这么来考虑的

16:03.460 --> 16:07.620
就是这两个世界这两对世界啊要看具体情况啊看具体情况

16:07.940 --> 16:10.980
如果你到时候鼠标的世界呢你只关心这个div

16:11.540 --> 16:12.500
不管那个div

16:12.820 --> 16:20.900
就是不管那个div里面有什么指援数啊都算是进入了这个div只希望触发一次那么ok你使用enter和leaf

16:21.700 --> 16:29.540
如果你考虑的是啊你不考你不考虑这个div的指援数啊你不考虑这个div的指援数就是你只管

16:30.340 --> 16:34.660
鼠标进入这个div本身的翻车的话你要用over or out

16:35.140 --> 16:39.460
对吧这里要根据具体情况啊具体来这要根据案例具体来啊

16:39.860 --> 16:45.620
但是这两个事件我一定会告诉你们啊另外呢就是会不会冒泡的问题啊会不会冒泡的问题

16:46.900 --> 16:51.860
就是说啊这个mouse啊enter和mouse

16:52.500 --> 16:54.340
div啊不会冒泡

16:55.300 --> 16:55.700
冒泡

16:57.380 --> 17:01.860
其实你要看一个事件会不会冒泡了一个非常简单的方式啊就是在

17:02.820 --> 17:08.900
就是在事件里边呢他不是一个事件参数一吗对吧事件对象你可以打印出这个事件对象的这个东西

17:09.620 --> 17:10.740
1.8buzz

17:11.620 --> 17:12.180
buzz

17:12.980 --> 17:14.740
我写对没有看一下啊看一下

17:15.940 --> 17:16.580
indefine

17:17.300 --> 17:20.260
1.8我看一下啊

17:20.820 --> 17:22.420
他叫做mouse event

17:24.340 --> 17:26.180
你有一个mouse event

17:26.820 --> 17:34.460
好不行

17:35.180 --> 17:38.060
嗯叫啥名字这个冒泡我看一下一个单词啊

17:38.700 --> 17:40.700
8buzz啊好像是8buzz

17:41.260 --> 17:44.300
啊对肥皂泡啊7泡啊这个这个单词

17:46.220 --> 17:47.420
8buzz

17:47.980 --> 17:48.540
8buzz

17:49.100 --> 17:55.980
好啊你可以看到他是force对吧force表示他不会冒泡啊你可以通过这个参数来看到这个事件会不会冒泡

17:56.780 --> 18:03.500
通过这个参数可以看到那么这里也是一样啊我们把他打印出来啊mouse enter和mouse div呢他是不会冒泡的

18:03.980 --> 18:09.500
啊你看他是不会冒泡的也就是说我这里本来应该冒泡对吧进入了这个按钮

18:10.140 --> 18:16.300
他触发的按钮的mouse enter那么他会往上冒泡冒泡到复原数啊复原数也会出发但是他没有出发

18:16.620 --> 18:20.540
啊所以这个事件他不会冒泡的啊不会冒泡的话他就不会造成这样的问题了

18:21.180 --> 18:27.660
啊这是鼠标的这些事件啊特别注意这两个事件的区别这两个事件区别容易面试容易考

18:28.060 --> 18:29.820
啊容易考所以说给大家写出来

18:31.180 --> 18:37.660
好接下来本节课的重点来了啊这些事件都很简单非常非常简单你只需要认识一下他们的名字就行了啊

18:37.900 --> 18:44.460
mouse表示什么也鼠标当按下up抬起目无移动over跑到什么账面去了out了跑出去了

18:44.700 --> 18:49.660
interna进入leave的离开啊这事件好理解现在关键是事件对象

18:50.300 --> 18:54.940
我们在鼠标事件里边啊就所有的鼠标是所有的鼠标

18:55.660 --> 18:56.060
事件

18:57.180 --> 18:58.220
事件处理

18:59.180 --> 19:04.300
程序中的事件对象就是那个参数亿啊这个事件对象呢

19:05.020 --> 19:09.580
都为同一种对象叫做mouse event啊

19:10.380 --> 19:14.060
mouse event就表示鼠标事件啊鼠标事件对象

19:14.700 --> 19:18.860
也就是这个东西这个e啊它是个鼠标事件对象我们把e打印出来看一下

19:20.940 --> 19:26.860
打印出来看一下所以mouse event对吧这里是构造函数的名称对吧构造函数的名称mouse event

19:27.420 --> 19:32.620
好我们来看一下啊这个构造函数里边这个鼠标事件对象里边它给你提供了哪些东西

19:33.340 --> 19:33.980
东西很多

19:34.380 --> 19:34.860
相当弩

19:35.500 --> 19:37.260
好我们来看一下提供了哪些东西

19:37.900 --> 19:42.380
先看一些啊不是很常见但是有可能会用到的啊

19:43.420 --> 19:49.900
一个叫做alt key啊alt key表示触发事件时啊触发事件时

19:50.620 --> 19:58.540
是是是否按下了键盘的 alt键就是比较说啊有一些按键啊

19:59.180 --> 20:02.540
有一些鼠标按键你需要可能需要搭配一些键盘

20:02.860 --> 20:07.340
不要说按住键盘的console点鼠标左键按住键盘的alt键点鼠标左键对吧

20:08.220 --> 20:16.300
那么他通过这个属性呢判断你是不是按下了一些功能键那么到时候呢你可能会做一些区分啊比方说举个例子啊举个例子

20:18.300 --> 20:22.710
举个例子一啊

20:23.750 --> 20:25.830
这里呢还是个按钮啊还是个按钮

20:29.350 --> 20:37.350
然后呢我们这里注册个事件啊btn document query selector啊button

20:37.830 --> 20:42.790
好然后btn呢注册什么事件了unclick啊unclick

20:44.710 --> 20:50.630
好e我们来输出啊输出e点alt key啊alt key

20:52.230 --> 20:54.470
好看一下啊这里有点运行出来

20:55.190 --> 21:01.670
就是我这个按钮呢可能我可能得判断一下他有没有按下alt键来点击按下alt键点点

21:01.990 --> 21:04.870
按住alt键点击呢可能效果不太一样啊不太一样

21:05.510 --> 21:11.190
按住alt键点击你看是不是true对吧true好如果不按alt键点击呢他就是force

21:11.510 --> 21:16.150
怎么样啊我刚才按了一次按了一次没按你看不见而已你看不见我只能跟你说

21:16.950 --> 21:21.110
啊那么对应的呢对应的还有这些什么console

21:21.590 --> 21:35.510
key对吧是是否按下键盘的console键啊console键还有啥呢还有shaft key对吧这些都很简单啊出发的事件的时候是否按下了键盘的

21:36.070 --> 21:42.790
shaft键啊就是有的时候呢你要做一些功能键的时候你可以用这种这种方式来处理啊怎么

21:43.350 --> 21:54.950
继续打一码啊alt control key然后呢什么e.shaft key啊看一下吧

21:55.670 --> 22:00.550
好我现在按住alt键你看后边两个是force按住console键啊这个是true

22:00.870 --> 22:10.710
然后按住shaft键啊这个是true如果alt control一起按下了就前两个是true啊懂这个意思吗三个键一起按下三个键都是true

22:10.950 --> 22:22.070
就这么个意思啊有的时候呢可能会有一些用因为我发现了之前呢有个同学呢他在公司里面去做一个什么东西他当时又有个需求就是点一个按键的时候他要根据

22:22.470 --> 22:25.910
他有不同的方式同一个按键啊按住不同的键他有不同的功能

22:26.310 --> 22:30.550
所以说呢他要把判断他是不知道怎么判断到处到处去找资料啊

22:31.110 --> 22:34.790
后来我发现就因为我觉得这个东西很少用我当时我就没有讲

22:35.270 --> 22:40.630
所以说我现在就把他提一下啊又万一以后你遇到了过后能力你至少有这么个印象他是可以做的啊

22:41.030 --> 22:46.070
尽管我们很少用啊这是这三个属性啊下面这个啊bottom

22:46.870 --> 22:49.510
表示的是触发事件时啊

22:50.550 --> 22:52.470
按下的鼠标

22:53.830 --> 22:57.270
按键内行啊按下的鼠标按键内行

22:57.830 --> 23:02.950
触发事件的时候按下的鼠标按下内行那么他是一个数字啊我们来看一下这个数字吗

23:03.830 --> 23:05.190
啊这里还是onclick吧

23:06.470 --> 23:08.630
我们打印出什么1点bottom

23:09.830 --> 23:10.790
啊保存看一下

23:12.310 --> 23:15.750
啊我们这里用这个啊on mouse

23:16.150 --> 23:20.070
当啊当鼠标当鼠标按下的时候触发这个事件啊

23:20.070 --> 23:22.070
鼠标按下的时候触发按下

23:22.630 --> 23:27.670
得到的是0按中键得到的是1按右键得到的是2

23:28.470 --> 23:28.870
对不对

23:29.270 --> 23:36.470
也就是说他的数字他是一个数字啊数字零啊表示啥呢表示的是左键啊

23:36.710 --> 23:39.670
1呢表示的是中键鼠标中键是可以按的啊

23:39.990 --> 23:41.510
2呢是表示的是右键

23:42.390 --> 23:48.950
啊这是个bottom表示鼠标的按键啊有的时候可能会有用啊但是这里的大家注意一下啊

23:49.350 --> 23:53.830
啊在什么鼠标移动事件里面我们再去打印啊啊mouse

23:55.430 --> 23:56.230
五啊

23:57.190 --> 24:01.030
鼠标移动事件里面去打印他只能得到0啊他只能得到0

24:01.430 --> 24:04.950
好像说等到你等得到0好像是按的按的是鼠标左键对吧

24:05.270 --> 24:09.830
好像是按的鼠标左键但是我现在有没有按键根本就没有按键啊他得到的是0

24:09.990 --> 24:14.390
就大家注意一下啊像这种东西啊就像这个什么按下时的

24:14.950 --> 24:22.150
按键他肯定要有鼠标按一下的事件对吧要有鼠标按一下的事件或者说鼠标抬起的事件

24:22.870 --> 24:23.030
啊

24:23.910 --> 24:28.150
鼠标抬起的事件说也可能是鼠标抬起啊抬起也可以

24:28.790 --> 24:29.430
mouse art

24:30.950 --> 24:36.230
啊按下抬起零中键按下抬起一右键按下抬起二啊

24:37.670 --> 24:43.190
总之呢你鼠标移动的时候就不要搞这个东西啊鼠标移动啊鼠标进入的时候就不要去用这个东西了

24:43.910 --> 24:49.030
好吧啊这是关于鼠标的按键啊鼠标的按键啊再说一下如果你是

24:49.590 --> 24:50.630
clic事件的话

24:51.270 --> 24:58.470
是不是只有一种情况对吧只有零对吧因为一点右键还不会触发这个事件点中键也不会触发啊只有点左键会触发

24:58.470 --> 25:00.870
所以他只有可能是零啊只有可能是零

25:01.430 --> 25:04.390
ok啊这是关于关于这个属性

25:06.150 --> 25:16.230
好下面接着来啊下面这一串属性呢就是跟那个鼠标的位置相关了这个属性比较多而且呢非常容易搞混淆

25:16.870 --> 25:24.550
也不需要大家去背平时用多了的话你自然就记住了如果你用的不太熟悉的话到时候呢再回过头来查

25:25.670 --> 25:31.910
好第一个位置他的位置相因为位置他一定涉及到相对的坐标系他是相对于哪个坐标系的

25:32.310 --> 25:39.110
因此这个位置呢他有很多的属性一个是呢跟配级相关的啊他提供了两个属性啊一个是配级x

25:39.670 --> 25:44.550
一个是配级y一个是横坐标一个是重坐标他指的是什么呢指的是

25:46.310 --> 25:53.030
当前鼠标啊距离页面的横重坐标啊横重

25:54.310 --> 25:57.830
坐标距离页面的横重坐标好比方说

25:59.030 --> 25:59.830
这里看一下例子

26:00.870 --> 26:08.040
新鲜的文件啊位置啊我们这里边呢有这么一个东西

26:09.080 --> 26:14.520
一个div div里边呢有一个P元素啊咱们来设置一下样式啊

26:15.480 --> 26:20.680
嗯这个div呢我给他一个border两个像素solid

26:22.600 --> 26:27.480
然后呢div有个背景颜色啊背景颜色 background nice blue

26:28.280 --> 26:33.960
好一个宽度宽度呢为500高度呢为500啊500成500

26:34.360 --> 26:37.880
然后呢有一个panning啊panning的为50个像素

26:38.840 --> 26:40.920
好我把这些都写全啊都给他写全

26:41.720 --> 26:46.120
好然后里边呢这个P元素呢也给他设置一个border啊两个像素solid

26:47.000 --> 26:51.720
然后背景颜色呢为红色啊红色稍微调浅一点啊

26:52.120 --> 26:58.040
晃眼睛呢好红色好然后呢写上宽度宽度为100

26:58.760 --> 27:03.640
高度呢为100啊panning呢为50啊50

27:05.240 --> 27:15.300
好了写好了啊然后呢把运行出来看一下啊f12啊

27:17.460 --> 27:22.260
看一下啊啊现在呢我们注册这个鼠标的

27:22.980 --> 27:28.420
什么事件呢移动事件吧啊鼠标移动事件啊这些鼠标事件都一样啊都可以

27:29.220 --> 27:30.740
得到这个P元素

27:31.620 --> 27:34.900
P元素 document gets element by by

27:35.220 --> 27:37.380
就是query's lector啊query's lector

27:39.480 --> 27:45.080
P元素然后再得到这个div元素备用啊以后我们要用query's lector div

27:45.560 --> 27:50.120
好现在呢我们暂时不用用不到这个div给P元素呢注册on mouse

27:51.160 --> 27:59.240
物物事件当鼠标移动的事件好我们来输出啥呢输出e的配级x和e的

27:59.800 --> 28:05.240
配级y啊注意大小写啊好为了我们方便我们看到效果呢

28:05.240 --> 28:11.800
我们上面呢再给他加一个黑点元素嘛啊黑点元素里边多写些文字把一面撑开啊把一面撑开一点

28:12.520 --> 28:16.440
一万两千个文字啊两千个文字把滚动条弄出来

28:17.320 --> 28:20.600
滚动条出来了对吧好接下来我们来看一下啊

28:21.320 --> 28:25.720
啊我们这里输出的是啊ok没问题好现在我们在P元素上面移动

28:26.200 --> 28:32.200
看我们输出的是什么配级x配级y你看一下他的y座标是不是非常非常大

28:33.160 --> 28:37.960
y座标是不是非常大指的是什么呢指的是看一下啊在头脑里面照当像

28:38.280 --> 28:41.800
你在头脑里面照当像目前这个鼠标位置看着啊

28:42.200 --> 28:46.600
他指的是目前这个鼠标位置到哪呢到页面的最顶部

28:47.560 --> 28:49.960
页面的最顶部啊到这个位置

28:50.760 --> 28:51.400
他的距离

28:52.120 --> 28:59.640
你要这意思吧啊页面的最顶部的距离指的是这么个意思啊这是配级啊配级y和配级x

28:59.880 --> 29:02.680
那如果有横向滚动条了是不是也是一样的对吧

29:03.080 --> 29:05.400
从这个位置到页面最左边的距离

29:05.800 --> 29:09.640
这是这么个意思啊这是配级x和配级y

29:10.760 --> 29:12.040
好这是这两个座标

29:13.080 --> 29:20.680
好下一对座标座标都是一对一对出现的啊有有x有y好下一对座标我们来看一下叫做client

29:22.200 --> 29:27.640
啊他的座标是client x和client y啊client x和client y

29:28.120 --> 29:32.200
好那么这个座标是相对于谁的呢他指的是鼠标

29:33.160 --> 29:43.560
相对于四口的座标什么叫四口就是可视窗口比方说我们这个页面啊我们这个页面可视窗口在哪呢

29:43.960 --> 29:45.400
可视窗口就是这一部分对吧

29:46.200 --> 29:49.800
这一部分就是可视窗口注意跟整个页面是有区别的啊

29:50.040 --> 29:54.600
整个页面还有很多看不见的地方比方滚动条上边还属于页面的范畴对吧

29:54.680 --> 29:57.880
但是四口始终不变化啊始终没有变化

29:58.680 --> 30:03.080
我们之前学习的和css的时候不是有一个固定定位吗对吧fixed

30:03.560 --> 30:05.880
固定定位固定定位就是相对于四口的

30:06.360 --> 30:07.000
明白这个意思吧

30:07.800 --> 30:12.920
那么这个时候呢他的座标是相对于四口的啊就是如果你用这种方式来得到得到位置的话

30:13.160 --> 30:16.200
他指的是相对于四口的座标系他的位置

30:16.840 --> 30:20.920
好比方说啊这里呢我们把他这个注释掉输出的是另外一个

30:21.640 --> 30:25.000
1点client x和1点client y

30:25.720 --> 30:27.560
输出这么个东西看一下啊

30:28.600 --> 30:29.160
我们来看一下

30:29.720 --> 30:33.640
这里呢你看没得到的是60

30:34.680 --> 30:38.280
60横座标是60重座标是178

30:38.760 --> 30:42.520
好横座标60是指啥呢指的是这一部分距离对吧

30:42.920 --> 30:46.200
这一部分距离是60没问题吧你看是不是60对吧

30:46.680 --> 30:48.520
178呢指的是这一部分距离

30:49.080 --> 30:51.480
四口到这到这的距离啊

30:52.200 --> 30:55.320
刚才点点到哪了啊我这里应该框多了啊框多了

30:55.960 --> 30:56.600
从这里开始

30:57.640 --> 31:04.760
178啊差不多对吧178啊指的是这么一部分距离是这个意思啊这么个意思

31:05.080 --> 31:11.720
他始终是相相对于四口的啊这是这个啊这两个数项client

31:13.000 --> 31:14.520
好下一个啊下一个

31:15.240 --> 31:16.280
叫做offset

31:17.640 --> 31:23.480
它里边也有两个啊都是成对的offset x和offset y

31:24.440 --> 31:28.280
他们表示的是什么呢是鼠标相对于

31:29.000 --> 31:31.000
四件圆的

31:31.400 --> 31:33.080
作标啊应该说

31:33.480 --> 31:37.800
严格来说应该是鼠标相对于四件圆的那一边距的作标

31:38.280 --> 31:40.120
啊那一边距的作标啥意思

31:40.440 --> 31:42.280
这是啥意思好看着啊

31:43.240 --> 31:44.520
我们这里呢

31:45.160 --> 31:46.440
把注册掉啊输出

31:47.240 --> 31:53.080
console log 1.offset x和1.offset y

31:53.640 --> 31:55.080
好保存看一下啊

31:56.120 --> 31:56.600
这边来

31:57.480 --> 31:58.120
看着输出

31:59.400 --> 32:01.560
说输出零对吧零你看

32:02.120 --> 32:04.680
相对的是谁相对的是这个区域

32:05.240 --> 32:05.640
看没有

32:05.960 --> 32:08.600
这是四件圆嘛对吧我们给他注册的四件啊

32:08.840 --> 32:11.800
然后呢他也是最里程的元素这是四件圆对不对

32:12.280 --> 32:14.840
啊那么相对于是这个区域这个区域的是啥

32:15.160 --> 32:17.320
填充盒什么叫填充盒

32:17.720 --> 32:21.880
就是只判定内容啊这一部分组成了只盒子

32:22.040 --> 32:24.840
叫做填充盒包含判定内边距包含内容

32:25.160 --> 32:28.120
所以说他是按照内边距来算的啊不是从内容区开始算的

32:28.360 --> 32:31.160
因为他有了50个像素的边距的对吧我们刚是设置了的

32:31.640 --> 32:34.200
设置了他的50像50个像素的内边距

32:34.760 --> 32:37.880
啊我当时为什么要设置就是为了让大家能够理解这个效果啊

32:38.040 --> 32:40.680
他是有内边距的看到没他是有内边距的

32:41.400 --> 32:45.160
好我们这样子吧这样子看得更清楚我把背景延伸了给他设置一下范围

32:45.560 --> 32:48.840
啊一个属性叫做 background clip啊我的课程里面讲到的

32:49.160 --> 32:52.840
就是把它设为content bogus就是让背景的只覆盖内容盒

32:53.240 --> 32:56.840
就是他背景的只在内容区域看到没这个背景只在内容区域

32:57.080 --> 32:58.840
那么我们只知道这只到这你看他

32:59.320 --> 33:02.600
这部分区域是填充区域他填充区域也算的啊你看没

33:03.000 --> 33:07.240
他填充区域也算的看没没问题吧啊没问题吧

33:07.480 --> 33:10.520
啊当然如果你移动到边框上面去是不是就变成附属了啊

33:10.760 --> 33:14.040
他相对的是填充区域啊相对的是填充区域

33:15.160 --> 33:17.000
好另外一个呢你要理解啥呢

33:17.320 --> 33:21.320
你要理解的就是世界目标啊世界目标啥意思啊

33:21.560 --> 33:22.760
好现在div用起来

33:23.560 --> 33:26.920
我们现在注册的不是P元素了是给div注册事件

33:27.560 --> 33:30.440
啊给div注册啊mouse mu事件看一下啊

33:31.480 --> 33:33.560
好你看一下这个div这个事件没问题吧

33:33.560 --> 33:36.200
大家在这没问题吧相对的是div的

33:36.760 --> 33:37.720
填充盒对吧

33:38.600 --> 33:39.880
包含内边距的填充盒

33:40.200 --> 33:41.720
然后我们现在移动到这个P元素

33:42.280 --> 33:43.720
你看是不是又变成0了你看

33:44.360 --> 33:45.880
移动到P元素是不是又变成0了

33:46.040 --> 33:49.640
它始终相对于事件圆就是事件目标的距离

33:49.960 --> 33:54.040
就是鼠标在事件圆的位置

33:54.280 --> 33:56.200
它的坐标是这么个意思啊

33:56.360 --> 34:00.600
当然坐标一切都是向右增向右x是增加对吧

34:01.160 --> 34:05.800
向下了x向下了y增加啊它是个导的坐标系啊

34:06.120 --> 34:09.400
远点永远在左上角坐标的远点永远在左上角

34:09.400 --> 34:12.360
左上角是0向右x增加向下 y增加

34:12.520 --> 34:13.320
啊是这么回事

34:13.320 --> 34:15.080
但是这个坐标远点在哪呢

34:15.080 --> 34:17.240
那就关键是相对于谁

34:17.480 --> 34:19.560
它始终是相对于事件圆的

34:19.560 --> 34:20.600
那现在的事件圆

34:20.600 --> 34:22.120
虽然我们注册的是div的事件

34:22.120 --> 34:23.880
但是现在的事件圆是不是P元素

34:24.040 --> 34:25.160
那就相对于是P元素了

34:25.640 --> 34:26.440
没有这个意思吧

34:26.760 --> 34:29.400
哎呀你这要搞清楚啊一定要搞清楚

34:29.560 --> 34:30.680
好这是这一块啊

34:30.680 --> 34:33.720
这是容易搞造成混淆的offset

34:34.600 --> 34:35.080
好吧

34:36.120 --> 34:37.560
好下一个啊下一个

34:38.200 --> 34:40.280
呃是screen

34:40.680 --> 34:41.400
啊screen

34:41.560 --> 34:44.440
那么他又提供了两个啊screen这个用的少一点啊

34:44.520 --> 34:45.560
这个用的很少了

34:45.960 --> 34:47.480
screen完了解一下就行了啊

34:47.480 --> 34:50.200
它是鼠标相对于屏幕

34:50.920 --> 34:51.400
哎

34:52.360 --> 34:54.360
整个你的电脑屏幕的距离啊

34:54.360 --> 34:55.800
相对的是整个电脑屏幕

34:56.040 --> 34:57.240
好这个我们看一下吧

34:57.640 --> 34:59.480
好这个东西它就不存在什么

34:59.800 --> 35:00.440
呃

35:02.280 --> 35:02.920
就是

35:03.720 --> 35:05.000
指援数还是复原数呢

35:05.000 --> 35:05.640
不存在了

35:05.800 --> 35:07.400
因为它们都是相对的是屏幕了

35:08.040 --> 35:09.160
好保存看一下

35:10.600 --> 35:11.080
你看

35:11.320 --> 35:12.680
相对的始终是屏幕啊

35:12.680 --> 35:13.480
我们把这个说小

35:14.040 --> 35:14.920
把屏幕放到这来

35:15.320 --> 35:16.040
把这个关了

35:16.040 --> 35:16.280
啊

35:17.080 --> 35:18.600
哎我关了就看不见了对吧

35:18.840 --> 35:19.640
关了就看不见了

35:20.040 --> 35:21.080
好看一下

35:21.800 --> 35:23.400
哎我的我的东西呢

35:24.360 --> 35:25.000
哦在这

35:25.640 --> 35:26.600
稍微放大一点嘛

35:29.960 --> 35:30.840
好你看一下啊

35:31.000 --> 35:32.280
我一动到这左上角看

35:32.280 --> 35:33.800
你看还有400多像素对吧

35:33.800 --> 35:35.640
为什么它是相对于屏幕的啊

35:35.800 --> 35:38.440
这是screen啊screen是屏幕的意思啊

35:39.160 --> 35:40.520
ok这是关于

35:40.760 --> 35:41.960
这里位置啊

35:41.960 --> 35:43.880
位置有这么一些东西可以使用

35:44.200 --> 35:45.320
那么还有一个啊

35:45.320 --> 35:46.040
其实还有一个

35:46.840 --> 35:47.960
叫做movement

35:47.960 --> 35:49.240
哦还有一个就是x和y

35:50.280 --> 35:50.920
x和y

35:51.240 --> 35:52.360
它是它是

35:53.160 --> 35:54.120
等同于

35:54.680 --> 35:56.360
等同于client x

35:57.000 --> 35:58.280
和client y

35:58.600 --> 35:59.480
等同于这两个

36:00.120 --> 36:01.880
啊所以说你倒是用x和y

36:02.040 --> 36:04.040
跟这个用client x和x和client y

36:04.040 --> 36:05.560
是一样的啊是一样的

36:06.840 --> 36:08.440
好然后再下一个啊

36:09.240 --> 36:10.760
再下一个是movement

36:11.720 --> 36:15.000
movement x和movement

36:15.000 --> 36:20.360
啊它两个movement x和movement y

36:20.360 --> 36:21.560
这两个属性呢

36:21.560 --> 36:22.280
只在

36:23.400 --> 36:25.960
鼠标移动事件中有效

36:25.960 --> 36:27.320
其他事件是无效的啊

36:27.320 --> 36:29.320
只在鼠标移动事件中有效

36:31.320 --> 36:33.400
好那么这个东西是指责是什么呢

36:33.560 --> 36:34.200
指责是

36:34.680 --> 36:37.080
相对于上一次

36:37.640 --> 36:38.680
鼠标移动

36:39.640 --> 36:41.640
相对于上一次鼠标位置

36:42.040 --> 36:43.240
就是移动事件我们知道

36:43.240 --> 36:44.600
它是不断的触发的对吧

36:44.840 --> 36:46.040
它是不断的触发

36:46.040 --> 36:49.080
触发的频率呢是受到系统配置的

36:49.480 --> 36:49.960
影响

36:50.680 --> 36:52.280
可能你电脑配置越高

36:52.680 --> 36:54.840
那么它可能触发的频率越高

36:54.840 --> 36:56.120
你电脑配置低一点

36:56.120 --> 36:57.720
那么它触发的频率就低一点

36:57.720 --> 36:59.800
有可能你的浏览器版本低一点

36:59.800 --> 37:01.960
它的触发频率也会相对于低一点

37:02.280 --> 37:03.320
它都是有可能的

37:03.320 --> 37:05.720
你不知道它触发的频率到底有多少

37:06.200 --> 37:08.680
同样一个浏览器在不同的操作系统上

37:08.680 --> 37:09.480
可能不一样

37:09.720 --> 37:10.600
同样的操作系统

37:10.600 --> 37:12.200
同样的浏览器在不同的电脑配置上

37:12.200 --> 37:13.080
有可能不一样

37:13.080 --> 37:13.960
所以它输不准的

37:14.280 --> 37:15.800
输不准它触发的频率是多少

37:15.800 --> 37:16.760
它总归要触发

37:17.240 --> 37:17.960
那么它指的

37:17.960 --> 37:19.320
就是说鼠标移动事件

37:19.320 --> 37:20.680
它是一次一次触发的

37:21.000 --> 37:23.400
上一次鼠标在这个位置移动过后

37:23.400 --> 37:25.640
像下一次鼠标在另外一个位置的对吧

37:25.800 --> 37:27.400
下一次鼠标在另外一个位置的

37:27.400 --> 37:29.560
它这个两个属性的得到了是

37:29.800 --> 37:31.720
相对于上一次鼠标位置

37:32.760 --> 37:34.040
偏移的距离

37:35.800 --> 37:37.240
指的是这么一个意思

37:37.480 --> 37:37.720
好

37:37.720 --> 37:38.520
咱们来看一下吧

37:38.520 --> 37:39.320
看一下就明白了

37:40.200 --> 37:40.920
输出

37:41.320 --> 37:43.720
1. movement x

37:43.720 --> 37:44.120
好

37:44.120 --> 37:46.360
1. movement y

37:46.680 --> 37:47.080
好

37:47.080 --> 37:47.960
说出这两个

37:48.360 --> 37:48.920
看一下

37:49.480 --> 37:49.960
移动

37:51.640 --> 37:52.120
你看

37:52.280 --> 37:53.160
基本上都是负一

37:53.160 --> 37:53.720
负一对吧

37:53.720 --> 37:54.280
负一负一

37:54.280 --> 37:54.680
是吗

37:54.680 --> 37:56.520
负一零负一零是什么意思啊

37:56.760 --> 37:57.880
就是这一次触发

37:57.880 --> 37:58.920
相对于上一次

37:58.920 --> 38:00.600
我移动了负一个像素

38:01.400 --> 38:02.360
负一个像素怎么意思

38:02.360 --> 38:04.040
就是往左边移动了负一个像素

38:04.360 --> 38:04.600
好

38:04.600 --> 38:05.320
我移动快一点

38:05.320 --> 38:05.880
你看

38:06.280 --> 38:07.080
移动快一点

38:07.080 --> 38:07.960
它触发了多少次

38:07.960 --> 38:08.920
它触发了就是

38:09.880 --> 38:11.080
那么相对于上一次

38:12.680 --> 38:13.240
看着吧

38:13.560 --> 38:15.480
相对于上一次移动了51个像素

38:15.480 --> 38:17.320
y座标上移动了三个像素

38:17.720 --> 38:18.920
横座标移动了75

38:18.920 --> 38:20.600
众座标移动了5个像素

38:21.640 --> 38:22.520
我再说一次

38:22.520 --> 38:24.280
它为什么会造成这样的现象

38:24.440 --> 38:25.320
因为有些同学的

38:25.320 --> 38:26.200
他老是认为

38:26.200 --> 38:27.320
他是这样子认为的

38:27.640 --> 38:29.880
只要我鼠标在上面移动一个像素

38:30.040 --> 38:31.400
他就会触发一次这个时间

38:31.400 --> 38:32.440
实际上不是的

38:33.400 --> 38:34.040
实际上不是的

38:34.040 --> 38:35.080
我给大家看一下这个东西

38:35.400 --> 38:36.440
我给大家看一下这个东西

38:37.320 --> 38:38.280
我这样子来做

38:39.000 --> 38:40.840
我这里有个n

38:40.840 --> 38:41.560
变量n

38:42.440 --> 38:43.240
从0开始

38:43.640 --> 38:45.160
每一次鼠标移动

38:45.800 --> 38:46.920
我就把n加加

38:47.240 --> 38:48.360
我就把n加加

38:48.680 --> 38:49.320
然后呢

38:50.440 --> 38:52.040
每一次鼠标移动我就把n加加

38:52.040 --> 38:52.360
好

38:52.360 --> 38:53.240
然后输出这个n

38:54.840 --> 38:56.760
每次鼠标移动n加加输出这个n

38:56.760 --> 38:57.800
我们来看一下触发的

38:57.800 --> 38:58.840
触发了多少次

38:59.080 --> 39:00.360
这个时间触发了多少次

39:00.360 --> 39:01.880
我给大家看一下两个场景

39:02.680 --> 39:04.440
把页面

39:04.680 --> 39:05.480
这样子关掉

39:06.040 --> 39:07.720
我们下面加一些文字

39:07.720 --> 39:09.000
下面再加一些文字

39:09.000 --> 39:09.560
Futter

39:11.800 --> 39:13.480
Norway 1100

39:13.640 --> 39:14.280
1000嘛

39:14.760 --> 39:16.200
下面再加一些文字

39:16.600 --> 39:16.840
好

39:16.840 --> 39:18.040
把这个DIB居中

39:18.040 --> 39:18.680
居中

39:19.320 --> 39:20.440
给大家看得清楚一点

39:22.120 --> 39:22.760
DIB

39:22.760 --> 39:23.560
Marking

39:24.120 --> 39:24.680
0

39:24.680 --> 39:25.160
O2

39:25.160 --> 39:25.640
居中

39:26.360 --> 39:26.600
好

39:26.600 --> 39:27.160
看着啊

39:27.800 --> 39:28.680
把控制台打开

39:30.790 --> 39:31.590
打开控制台

39:33.110 --> 39:33.430
好

39:33.430 --> 39:34.070
刷新

39:34.230 --> 39:34.710
看着

39:35.350 --> 39:36.710
我慢慢的移动过去

39:37.110 --> 39:38.310
都是移动同样的距离

39:38.310 --> 39:38.870
看着啊

39:38.870 --> 39:40.070
我慢慢的移动过去

39:41.990 --> 39:42.550
慢慢移动

39:43.110 --> 39:43.750
慢慢移动

39:45.350 --> 39:45.990
把穿透

39:46.870 --> 39:47.750
触发了多少次

39:47.750 --> 39:49.430
332次对吧

39:49.430 --> 39:50.550
332次

39:50.950 --> 39:51.750
咱们重新刷新

39:52.950 --> 39:53.750
瞬间移动过来

39:53.750 --> 39:54.710
是不是只触发了三次

39:55.430 --> 39:56.470
只触发了三次

39:57.110 --> 39:58.310
所以说它不是说

39:58.310 --> 39:59.750
我们在上面移动一个像素

39:59.750 --> 40:00.630
它叫触发一次

40:00.630 --> 40:01.190
不是的

40:02.070 --> 40:02.710
它是

40:03.190 --> 40:04.150
你鼠标在移动

40:04.150 --> 40:05.590
它知道它知道你来移动

40:05.590 --> 40:07.430
但是它不一定给你触发这个事件

40:07.430 --> 40:08.150
不一定的

40:08.150 --> 40:09.110
因为它如果觉得

40:09.110 --> 40:10.870
它这个事件触发的太频繁的话

40:11.270 --> 40:12.870
会造成浏览器的卡顿

40:12.870 --> 40:14.550
因为这个事件它太频繁了

40:14.550 --> 40:16.310
它会造成浏览器卡顿

40:16.310 --> 40:17.910
所以说它不会那么快的触发

40:17.910 --> 40:19.190
它有一个频率的限制

40:19.190 --> 40:20.150
它知道你在移动

40:20.150 --> 40:21.910
但它可能不会触发这个事件

40:21.910 --> 40:22.950
明白这个意思吧

40:22.950 --> 40:24.630
它是触发两个事件触发之间

40:24.630 --> 40:26.230
它是有一段间隔时间的

40:26.230 --> 40:28.150
这个间隔时间它说不准

40:28.150 --> 40:28.710
说不准

40:28.710 --> 40:29.830
它也说不准是多少

40:29.830 --> 40:32.070
它是经过一系列的算法来算的

40:35.110 --> 40:37.030
因此我们可以通过这个属相

40:37.030 --> 40:38.790
这两个属相可以得到

40:38.790 --> 40:42.070
这一次触发相对于上一次触发

40:42.630 --> 40:43.910
偏移的距离

40:43.910 --> 40:45.030
偏移的距离

40:45.030 --> 40:46.630
是指的是这么个意思

40:46.630 --> 40:47.350
这么个意思

40:47.350 --> 40:48.550
我们再来说说看一下

40:51.590 --> 40:52.790
把这个人去掉了

40:54.150 --> 40:54.630
去掉

40:56.570 --> 40:57.370
再看一下

40:59.400 --> 40:59.960
你看

40:59.960 --> 41:01.800
它指的是它偏移的距离

41:01.800 --> 41:02.440
偏移的距离

41:02.440 --> 41:03.080
这一次触发

41:03.080 --> 41:03.800
你上一次触发

41:03.800 --> 41:04.520
偏移的距离

41:05.480 --> 41:06.360
好吧

41:06.360 --> 41:06.760
好

41:06.760 --> 41:07.800
那么这个东西

41:07.800 --> 41:09.320
其实我们讲

41:09.320 --> 41:10.600
这一刻知识就讲完了

41:10.600 --> 41:11.640
讲完就这么一些了

41:11.640 --> 41:13.000
鼠标事件还有啥呢

41:13.000 --> 41:13.960
也没啥了

41:13.960 --> 41:15.880
我们就可以来做一个效果

41:16.520 --> 41:17.800
比方说拖拽效果

41:19.560 --> 41:20.280
拖拽效果

41:21.480 --> 41:22.600
这个效果我要讲一下

41:22.600 --> 41:23.000
不讲的话

41:23.000 --> 41:24.600
你们很难做得出来

41:24.600 --> 41:25.880
比方说这里有个DIV

41:26.680 --> 41:28.920
我给它设置一下样式

41:29.560 --> 41:31.560
DIV给它设置什么样式呢

41:31.640 --> 41:32.760
宽度100

41:34.120 --> 41:35.080
高度100

41:35.080 --> 41:36.520
把它变成一个圆

41:36.520 --> 41:37.640
50%

41:37.640 --> 41:38.680
一个圆

41:38.680 --> 41:39.160
好

41:39.160 --> 41:40.280
一个背景颜色

41:40.280 --> 41:41.240
background

41:41.240 --> 41:42.280
背景颜色回红色

41:44.310 --> 41:45.030
换一个颜色

41:45.030 --> 41:45.670
稍微淡一点

41:47.110 --> 41:48.230
一个红色

41:48.230 --> 41:49.270
然后呢

41:49.270 --> 41:51.030
给它设置一个鼠标样式

41:51.030 --> 41:52.070
cursor

41:52.070 --> 41:52.710
木

41:52.710 --> 41:53.590
鼠标样式为木

41:54.550 --> 41:55.190
运行出来

41:56.870 --> 41:57.590
我的圆呢

41:59.590 --> 42:00.790
为什么不是个圆呢

42:00.790 --> 42:01.990
border radius

42:02.390 --> 42:03.270
是个圆

42:03.270 --> 42:03.990
好吧

42:03.990 --> 42:05.990
那么现在我希望这个DIV是可以拖动的

42:05.990 --> 42:06.550
你看

42:06.550 --> 42:07.910
按住鼠标都左键不动

42:07.910 --> 42:09.270
然后就可以进行拖动

42:09.270 --> 42:09.670
好

42:09.670 --> 42:10.710
那怎么来做呢

42:10.710 --> 42:11.750
那么首先呢

42:11.750 --> 42:13.270
肯定是得是一个什么

42:13.270 --> 42:14.390
绝对定位嘛

42:14.390 --> 42:14.870
对吧

42:14.870 --> 42:16.390
你肯定得绝对定位才能拖动嘛

42:16.390 --> 42:16.870
对吧

42:16.870 --> 42:17.590
要设置什么

42:17.590 --> 42:18.470
left和top

42:18.470 --> 42:18.870
对不对

42:18.870 --> 42:19.910
left先暂时

42:19.910 --> 42:20.790
先刚设为100

42:20.790 --> 42:21.990
top设为100嘛

42:22.710 --> 42:23.270
好吧

42:23.270 --> 42:23.750
好

42:23.750 --> 42:24.710
先这样子设置啊

42:24.710 --> 42:25.350
好

42:25.350 --> 42:26.710
那么现在我们要可以拖动

42:26.710 --> 42:28.550
按住鼠标左键不动

42:28.550 --> 42:29.430
然后呢

42:29.430 --> 42:30.150
一动

42:30.150 --> 42:30.790
就可以

42:30.950 --> 42:32.390
就可以是可以拖动了

42:32.390 --> 42:34.710
我们可以按照这样的模式来做

42:34.710 --> 42:34.950
好

42:34.950 --> 42:36.630
接下来我们来写这个介石代码

42:36.630 --> 42:37.270
看一下怎么写

42:38.710 --> 42:38.950
好

42:38.950 --> 42:40.070
我们可以用这样的识录

42:40.070 --> 42:41.510
首先得到这个DIV

42:41.510 --> 42:42.230
document

42:42.230 --> 42:42.950
curry

42:42.950 --> 42:43.510
selector

42:45.910 --> 42:46.470
DIV

42:46.470 --> 42:46.870
拿到

42:48.390 --> 42:51.830
当我们鼠标左键按下的时候

42:51.830 --> 42:52.790
怎么样怎么样怎么样

42:52.790 --> 42:54.870
那是不是要注册鼠标按下的时间

42:54.870 --> 42:55.670
对不对

42:55.670 --> 42:56.150
好

42:56.150 --> 42:57.990
来注册鼠标按下的时间

42:57.990 --> 42:58.470
arm

42:58.470 --> 42:59.030
mouse

42:59.030 --> 42:59.430
怎么

42:59.430 --> 42:59.830
down

43:00.790 --> 43:01.830
arm

43:01.830 --> 43:02.310
mouse

43:02.310 --> 43:02.470
down

43:03.670 --> 43:05.990
当鼠标按一下的时候的时间

43:05.990 --> 43:06.390
当然了

43:06.390 --> 43:09.350
我们只考虑鼠标左键按下

43:09.350 --> 43:11.430
只考虑鼠标左键按下

43:11.430 --> 43:11.910
所以说了

43:11.910 --> 43:12.870
这一块该怎么做呢

43:12.870 --> 43:14.630
这一块我们来判断一下

43:14.630 --> 43:15.910
如果1的button

43:15.910 --> 43:17.910
判断一下鼠标的按键

43:17.910 --> 43:19.190
如果不等于啥

43:19.990 --> 43:21.030
不等于啥呢

43:21.030 --> 43:24.070
如果鼠标的按键不等于0

43:24.790 --> 43:26.070
是不是不是左键

43:26.070 --> 43:27.510
不是左键还处理啥啊

43:27.510 --> 43:28.470
就不处理了

43:28.470 --> 43:29.190
return结束

43:29.270 --> 43:30.630
这个事件结束了

43:30.630 --> 43:32.150
啥都不要处理了

43:32.150 --> 43:34.150
如果不是鼠标左键

43:34.150 --> 43:36.630
如果不是鼠标左键

43:38.810 --> 43:39.130
好

43:39.130 --> 43:40.810
接下来怎么办呢

43:40.810 --> 43:42.410
接下来我们可以用这种模式

43:43.530 --> 43:45.850
当鼠标按一下的时候

43:45.850 --> 43:47.850
我们给它注册事件

43:47.850 --> 43:49.690
一个是鼠标移动时间

43:49.690 --> 43:50.810
arm mouse move

43:53.130 --> 43:55.050
给它注册鼠标移动时间

43:55.050 --> 43:56.570
然后再给它注册什么

43:57.290 --> 43:58.570
arm mouse

44:01.290 --> 44:01.690
up

44:03.530 --> 44:04.490
注册这两个事件

44:04.490 --> 44:04.970
为什么

44:04.970 --> 44:05.530
我先说一下

44:06.330 --> 44:08.570
就是你只有鼠标按一下的时候

44:08.570 --> 44:10.090
你才具备这个事件

44:10.090 --> 44:11.130
你鼠标没有按一下

44:11.130 --> 44:12.170
它是没有这个事件的

44:12.170 --> 44:13.130
我是这么个意思

44:13.130 --> 44:15.050
就是你鼠标没有按下的时候

44:15.050 --> 44:16.250
你鼠标随便怎么移动

44:16.250 --> 44:17.130
都无所谓的

44:17.130 --> 44:18.250
随便怎么移动都无所谓

44:18.250 --> 44:19.290
我不管你

44:19.290 --> 44:20.730
你只有鼠标按一下的时候

44:20.730 --> 44:22.490
我才给你注册这个事件

44:22.490 --> 44:24.330
而当你鼠标抬起之后了

44:24.330 --> 44:24.970
怎么样了

44:24.970 --> 44:26.570
我就把你这个事件给你取消掉

44:27.770 --> 44:29.290
arm mouse up

44:30.090 --> 44:31.050
把它设为nau

44:31.050 --> 44:32.010
把它设为nau

44:32.890 --> 44:34.170
arm mouse move把它设为nau

44:34.810 --> 44:38.810
就是移除鼠标移动时间

44:39.370 --> 44:40.970
因为我们以后要拖

44:40.970 --> 44:42.090
拖肯定鼠标移动

44:42.090 --> 44:42.570
对不对

44:42.570 --> 44:44.010
但是如果你鼠标没有按下

44:44.010 --> 44:45.370
鼠标抬起来了

44:45.370 --> 44:46.570
当然我可以判断一下

44:46.570 --> 44:48.410
如果你抬起的是左键的话

44:48.410 --> 44:49.930
你别有一会抬起一个右键

44:49.930 --> 44:51.850
也不给我把事件取消掉了

44:51.850 --> 44:53.850
如果你抬起的是左键的话

44:53.850 --> 44:56.010
那么我把这个事件给你取消掉

44:56.570 --> 44:58.570
我们来看一下

44:58.570 --> 45:00.570
看一下输出移动

45:00.570 --> 45:02.570
能不能实现这样的效果

45:02.570 --> 45:03.610
保存

45:03.610 --> 45:05.050
右键检查

45:05.050 --> 45:06.970
其实这样拖出来的效果

45:06.970 --> 45:08.570
有很多很多的实现方式

45:08.570 --> 45:10.570
有超级多的实现方式

45:10.570 --> 45:11.770
鼠标移动

45:11.770 --> 45:13.210
你看现在没有触发事件对吧

45:13.210 --> 45:14.170
为什么没有触发

45:14.170 --> 45:15.770
因为现在没有注册这个事件

45:15.770 --> 45:17.530
它有没有这个事件

45:17.530 --> 45:17.770
有

45:17.770 --> 45:19.770
但是我没有注册这个事件

45:19.770 --> 45:21.530
只有当鼠标按下去的时候

45:21.530 --> 45:22.570
我才注册这个事件

45:22.570 --> 45:23.610
我们可以用这种模式

45:23.610 --> 45:25.450
但是无论用什么方式

45:26.010 --> 45:28.010
这个模式基本上都是这种模式

45:28.010 --> 45:30.010
鼠标按下的时候站在移动

45:30.010 --> 45:31.610
你看是不是触发移动事件

45:31.610 --> 45:32.810
鼠标抬起来

45:32.810 --> 45:33.850
抬起之后再移动

45:33.850 --> 45:35.850
是不是没了事件给你移出掉了

45:35.850 --> 45:37.850
我们把这个模式先写出来

45:37.850 --> 45:39.850
那么接下来的问题就是

45:39.850 --> 45:41.850
这里边

45:41.850 --> 45:43.850
鼠标移动

45:43.850 --> 45:45.850
鼠标移动的时候

45:45.850 --> 45:47.850
这里还有一个问题

45:47.850 --> 45:49.850
就是如果你按下去过后

45:49.850 --> 45:51.850
鼠标移动

45:51.850 --> 45:52.650
可以移动对吧

45:52.650 --> 45:53.450
可以移动

45:54.450 --> 45:56.450
但是我移动出来了

45:56.450 --> 45:57.450
再抬起

45:57.450 --> 45:59.450
再抬起有没有触发

45:59.450 --> 46:00.450
这个时候抬起的话

46:00.450 --> 46:02.450
有没有触发那个抬起事件

46:02.450 --> 46:03.450
就没有

46:03.450 --> 46:04.450
它跑出去了再抬起了

46:04.450 --> 46:06.450
然后我们再在鼠标左边左键不按下

46:06.450 --> 46:08.450
鼠标左键左键不按下

46:08.450 --> 46:09.450
然后再移动过去

46:09.450 --> 46:11.450
看移动事件还在触发

46:11.450 --> 46:12.450
看到没有

46:12.450 --> 46:13.450
移动事件还在触发

46:13.450 --> 46:14.450
它会有这么一个问题

46:14.450 --> 46:16.450
就是我再万一不要去抬起鼠标

46:16.450 --> 46:18.450
它会导致

46:18.450 --> 46:19.450
它会导致什么呢

46:19.450 --> 46:22.450
没有就是触发这个mouseup事件

46:22.450 --> 46:24.450
比如说这里我们可以再多写一个

46:24.450 --> 46:25.450
DIV

46:25.450 --> 46:27.450
mouseleave

46:27.450 --> 46:29.450
当鼠标移出去过后

46:29.450 --> 46:31.450
移出去过后也给它移出了

46:31.450 --> 46:33.450
咱们看一下这样子会不会有问题

46:33.450 --> 46:35.450
mouseleave

46:35.450 --> 46:36.450
当鼠标移出去过后

46:36.450 --> 46:38.450
也把这个事件给它移出了

46:38.450 --> 46:40.450
再来鼠标按下移动移动没问题

46:40.450 --> 46:41.450
移出去

46:41.450 --> 46:42.450
抬起

46:42.450 --> 46:43.450
再移动过去

46:43.450 --> 46:44.450
没问题了对吧

46:44.450 --> 46:45.450
再来

46:45.450 --> 46:46.450
多测试一次

46:46.450 --> 46:48.450
按住动移动移动移动移动

46:48.450 --> 46:49.450
移出去

46:49.450 --> 46:50.450
抬起

46:50.450 --> 46:51.450
所以没问题了

46:51.450 --> 46:52.450
没问题了

46:52.450 --> 46:53.450
没问题了

46:54.450 --> 46:55.450
这是

46:55.450 --> 46:56.450
这一个部分

46:57.450 --> 46:58.450
好

46:58.450 --> 47:00.450
接下来我们来看这里边

47:00.450 --> 47:02.450
移动事件该怎么来写

47:02.450 --> 47:04.450
这里有很多种写的办法

47:04.450 --> 47:05.450
有很多写的办法

47:06.450 --> 47:07.450
怎么来写呢

47:07.450 --> 47:08.450
其实这个移动事件

47:08.450 --> 47:10.450
我这里给告诉大家一种办法

47:10.450 --> 47:12.450
大家当然可以去百度搜索一下

47:12.450 --> 47:14.450
有很多很多的办法

47:14.450 --> 47:16.450
这里我介绍一种办法

47:16.450 --> 47:17.450
这种办法是

47:18.450 --> 47:21.450
就是我个人觉得

47:21.450 --> 47:23.450
是能够处理各种场景的

47:24.450 --> 47:25.450
以后我再说一下别的

47:25.450 --> 47:26.450
谁说一下别的办法

47:26.450 --> 47:27.450
以及这种办法

47:27.450 --> 47:29.450
为什么它能处理各种场景

47:29.450 --> 47:30.450
好

47:30.450 --> 47:32.450
这里移动事件我这样子来做

47:32.450 --> 47:33.450
怎么来做呢

47:33.450 --> 47:34.450
看着

47:34.450 --> 47:36.450
我这样子来处理

47:36.450 --> 47:37.450
就是

47:37.450 --> 47:39.450
我先得到啥呢

47:39.450 --> 47:41.450
得到它的偏移的

47:41.450 --> 47:42.450
偏移的x

47:42.450 --> 47:44.450
就是相对于上一次移动

47:44.450 --> 47:46.450
偏移的x和偏移的y

47:47.450 --> 47:49.450
就是x

47:49.450 --> 47:50.450
偏移的x

47:50.450 --> 47:52.450
这是偏移的x

47:52.450 --> 47:53.450
得到什么

47:53.450 --> 47:54.450
movement

47:54.450 --> 47:55.450
movementx

47:55.450 --> 47:56.450
和movementy

47:56.450 --> 47:57.450
或者以后我们直接

47:57.450 --> 47:59.450
直接通过它来得到

47:59.450 --> 48:00.450
通过这个东西

48:00.450 --> 48:01.450
是不是可以得到

48:01.450 --> 48:02.450
距离上一次移动

48:02.450 --> 48:04.450
你x偏移了多少

48:04.450 --> 48:05.450
距离上一次移动

48:05.450 --> 48:06.450
你的y偏移了多少

48:06.450 --> 48:07.450
对吧

48:07.450 --> 48:08.450
是不是可以得到这个东西

48:09.450 --> 48:11.450
那么鼠标的

48:11.450 --> 48:13.450
距离上一次的偏移量

48:13.450 --> 48:15.450
是不是就应该是这个div

48:15.450 --> 48:18.450
它的left和top值的偏移量

48:18.450 --> 48:19.450
对吧

48:19.450 --> 48:20.450
鼠标往右边移动了

48:20.450 --> 48:21.450
三个项目

48:21.450 --> 48:22.450
是不是left要加3

48:22.450 --> 48:23.450
鼠标往下边移动了

48:23.450 --> 48:24.450
五个项目

48:24.450 --> 48:25.450
是不是top要加5

48:26.450 --> 48:27.450
对吧

48:27.450 --> 48:28.450
那么鼠标的偏移量

48:28.450 --> 48:29.450
就是他们的偏移量

48:29.450 --> 48:30.450
因此我这里用个

48:30.450 --> 48:31.450
最简单的办法

48:31.450 --> 48:32.450
怎么样呢

48:32.450 --> 48:33.450
就是得到它

48:33.450 --> 48:36.450
之前的left值和top值

48:36.450 --> 48:37.450
之前的left

48:37.450 --> 48:38.450
等于

48:38.450 --> 48:41.450
等于get completed style

48:41.450 --> 48:42.450
div

48:42.450 --> 48:43.450
对吧

48:43.450 --> 48:44.450
或者是this

48:44.450 --> 48:46.450
得到它之前的偏移量

48:46.450 --> 48:47.450
或者是dm

48:48.450 --> 48:49.450
它之前的

48:50.450 --> 48:51.450
style

48:52.450 --> 48:53.450
先得到style

48:53.450 --> 48:54.450
然后得到left

48:54.450 --> 48:55.450
left等于什么

48:55.450 --> 48:58.450
等于posed int

48:58.450 --> 49:00.450
或者posed float

49:00.450 --> 49:01.450
精确一点

49:01.450 --> 49:02.450
posed float

49:03.450 --> 49:05.450
把这个style点

49:05.450 --> 49:06.450
left拿到

49:06.450 --> 49:07.450
对吧

49:07.450 --> 49:08.450
然后再top

49:08.450 --> 49:10.450
把float

49:10.450 --> 49:12.450
style点top拿到

49:12.450 --> 49:14.450
把它之前的left值和top值拿到

49:14.450 --> 49:16.450
拿到之后怎么样呢

49:16.450 --> 49:18.450
重新给它复制

49:18.450 --> 49:19.450
重新给left的复制

49:19.450 --> 49:20.450
left的等于啥

49:20.450 --> 49:22.450
等于它之前的left

49:22.450 --> 49:24.450
加上鼠标

49:24.450 --> 49:26.450
s方向的偏移量

49:26.450 --> 49:28.450
再拼接上posed

49:28.450 --> 49:30.450
再拼接上posed

49:30.450 --> 49:31.450
然后呢

49:31.450 --> 49:32.450
style

49:32.450 --> 49:33.450
top

49:33.450 --> 49:34.450
等于啥呢

49:34.450 --> 49:35.450
等于top值

49:35.450 --> 49:36.450
之前的top值

49:36.450 --> 49:37.450
movement

49:37.450 --> 49:38.450
y

49:38.450 --> 49:40.450
再拼接上posed

49:40.450 --> 49:41.450
对吧

49:41.450 --> 49:42.450
是不是这样的道理

49:42.450 --> 49:43.450
是不是这样的逻辑

49:43.450 --> 49:44.450
对吧

49:44.450 --> 49:45.450
我们就可以实现移动了

49:45.450 --> 49:46.450
保存看一下

49:46.450 --> 49:47.450
按住不动

49:47.450 --> 49:48.450
拖动

49:48.450 --> 49:49.450
是没问题了

49:49.450 --> 49:50.450
没问题了

49:50.450 --> 49:51.450
然后拖动

49:51.450 --> 49:52.450
没问题了

49:52.450 --> 49:53.450
拖动

49:53.450 --> 49:55.950
慢一点

49:55.950 --> 49:56.950
再慢一点

49:56.950 --> 49:57.950
拖动

49:58.950 --> 49:59.950
是没问题了

49:59.950 --> 50:00.950
没问题了

50:00.950 --> 50:01.950
没问题了

50:01.950 --> 50:03.950
但是现在你只能慢一点拖动

50:03.950 --> 50:05.950
你拖快了不行

50:05.950 --> 50:06.950
因为这个

50:06.950 --> 50:07.950
它是一个效率问题

50:07.950 --> 50:09.950
一个效率问题的

50:09.950 --> 50:11.950
你拖快了不行

50:11.950 --> 50:13.950
你比方说你拖快了

50:13.950 --> 50:14.950
当然我这个效率问题

50:14.950 --> 50:15.950
可以优化

50:15.950 --> 50:16.950
可以优化

50:16.950 --> 50:17.950
比方说

50:17.950 --> 50:18.950
这个left值和top值

50:18.950 --> 50:19.950
我们一开始有记录

50:19.950 --> 50:21.950
一开始有记录

50:21.950 --> 50:22.950
比方说在这里

50:22.950 --> 50:23.950
在最开始的就把

50:23.950 --> 50:25.950
left值和top值记录下来

50:25.950 --> 50:26.950
记录下来

50:26.950 --> 50:27.950
记录下来过后

50:27.950 --> 50:28.950
我们这里

50:28.950 --> 50:29.950
每一次改变

50:29.950 --> 50:30.950
每一次改变之前

50:30.950 --> 50:32.950
我们把left值先改变

50:32.950 --> 50:33.950
加等于

50:33.950 --> 50:36.950
加等于这个1.movementx

50:36.950 --> 50:37.950
top值呢

50:37.950 --> 50:40.950
加等于1.movementy

50:40.950 --> 50:42.950
然后这里直接复制

50:42.950 --> 50:43.950
一个手腕

50:43.950 --> 50:44.950
这样做的好处在于

50:44.950 --> 50:45.950
可以节省效率

50:45.950 --> 50:46.950
可以节省效率

50:46.950 --> 50:47.950
为什么

50:47.950 --> 50:48.950
因为最开始的

50:48.950 --> 50:49.950
不用每一次拖开的时候

50:49.950 --> 50:50.950
重新得到

50:50.950 --> 50:51.950
重新计算它的最重要是

50:51.950 --> 50:52.950
因为计算最重要是

50:52.950 --> 50:53.950
需要时间的

50:53.950 --> 50:54.950
需要时间

50:54.950 --> 50:55.950
我们一开始

50:55.950 --> 50:56.950
把最重要是记录下来

50:56.950 --> 50:57.950
把它的计算结构

50:57.950 --> 50:59.950
保存到两个变量里边来

50:59.950 --> 51:00.950
然后拖动的时候

51:00.950 --> 51:01.950
只改变这两个变量的

51:01.950 --> 51:02.950
自己完事了

51:02.950 --> 51:03.950
这样子的效率要高一些

51:03.950 --> 51:05.950
效率要高一些

51:05.950 --> 51:07.950
我还怎么回事

51:07.950 --> 51:08.950
我还怎么回来

51:08.950 --> 51:09.950
我看一下

51:09.950 --> 51:10.950
Y怎么回事

51:10.950 --> 51:13.950
top值是怎么回事呢

51:13.950 --> 51:15.950
我把这个Y打印出来

51:15.950 --> 51:16.950
把这个top值打印出来

51:16.950 --> 51:17.950
看一下

51:17.950 --> 51:19.950
看一下怎么回事

51:19.950 --> 51:21.950
明白了

51:21.950 --> 51:22.950
明白了

51:22.950 --> 51:23.950
因为window里边

51:23.950 --> 51:25.950
全具对象里边有个top值

51:25.950 --> 51:26.950
它有个top值

51:26.950 --> 51:27.950
它有个top值

51:27.950 --> 51:28.950
所以这个属性

51:28.950 --> 51:29.950
我们不用管

51:29.950 --> 51:30.950
这个属性

51:30.950 --> 51:32.950
我们这里名字重复了

51:32.950 --> 51:33.950
因为top值是

51:33.950 --> 51:34.950
不能修改的

51:34.950 --> 51:35.950
它是只读的

51:35.950 --> 51:36.950
那么你这句话

51:36.950 --> 51:37.950
相当于是在修改

51:37.950 --> 51:38.950
window对象里面的top

51:38.950 --> 51:39.950
我们这里把

51:39.950 --> 51:40.950
编一下名字

51:40.950 --> 51:42.950
div left

51:42.950 --> 51:43.950
div top

51:43.950 --> 51:44.950
这样子改变一下

51:44.950 --> 51:45.950
那么这里呢

51:45.950 --> 51:47.950
div left

51:47.950 --> 51:48.950
div top

51:48.950 --> 51:49.950
这里也是

51:49.950 --> 51:51.950
div left

51:51.950 --> 51:52.950
div top

51:52.950 --> 51:53.950
这样子来处理一下

51:53.950 --> 51:55.950
保存看一下

51:55.950 --> 51:56.950
那是不是现在可以通通了

51:56.950 --> 51:57.950
但是呢

51:57.950 --> 51:58.950
如果你速度更快

51:58.950 --> 52:00.950
对你鼠标移动得太快了

52:00.950 --> 52:01.950
瞬间出去了

52:01.950 --> 52:03.950
你在现在在外边移动

52:03.950 --> 52:04.950
在外边移动

52:04.950 --> 52:05.950
有没有影响到它

52:05.950 --> 52:06.950
没有

52:06.950 --> 52:07.950
它没有触发这个事件

52:07.950 --> 52:08.950
它在外边移动瞬间出去了

52:08.950 --> 52:10.950
然后我们放开

52:10.950 --> 52:11.950
回来倒是没什么问题

52:11.950 --> 52:13.950
但是如果你鼠标移动够快

52:13.950 --> 52:14.950
通常就出去了

52:14.950 --> 52:15.950
它还来不及触发这个事件

52:15.950 --> 52:17.950
后续的事件触发

52:17.950 --> 52:18.950
是不是跟它没关系了

52:18.950 --> 52:20.950
跟它就没什么关系了

52:20.950 --> 52:21.950
所以说这一块

52:21.950 --> 52:23.950
我们可以这样处理

52:23.950 --> 52:25.950
我把这个地方

52:25.950 --> 52:27.950
给它改成window

52:27.950 --> 52:28.950
整个window什么

52:28.950 --> 52:29.950
全具对象

52:29.950 --> 52:30.950
全具对象

52:30.950 --> 52:32.950
它仍然可以注册时间的

52:32.950 --> 52:33.950
你可以认为

52:33.950 --> 52:35.950
它整个窗口也是一个节点

52:35.950 --> 52:36.950
它也有这些时间

52:36.950 --> 52:37.950
这里顺便说一下

52:37.950 --> 52:39.950
我给整个窗口注册

52:39.950 --> 52:41.950
你刚才的问题不就是

52:41.950 --> 52:42.950
一出去过后要出问题吗

52:42.950 --> 52:43.950
对吧

52:43.950 --> 52:44.950
一出去过后要出问题

52:44.950 --> 52:45.950
OK

52:45.950 --> 52:46.950
那我就给整个网页注册

52:46.950 --> 52:47.950
整个网页注册

52:47.950 --> 52:49.950
就整个窗口注册

52:49.950 --> 52:50.950
那么你就是

52:50.950 --> 52:51.950
这个事件

52:51.950 --> 52:52.950
它是无论如何都会触发的

52:52.950 --> 52:54.950
除非你鼠标跑到浏览器外边去了

52:54.950 --> 52:55.950
否则的话

52:55.950 --> 52:57.950
它一定会触发这个事件

52:57.950 --> 52:58.950
那么同样的道理

52:58.950 --> 53:00.950
当鼠标在整个窗口里边抬起

53:00.950 --> 53:02.950
当鼠标在整个窗口里边

53:02.950 --> 53:03.950
离开的时候

53:03.950 --> 53:04.950
然后把事件给它移出

53:04.950 --> 53:06.950
把整个窗口的事件移出

53:06.950 --> 53:08.950
我们可以用这种方式来处理

53:08.950 --> 53:10.950
看一下

53:10.950 --> 53:11.950
你看

53:11.950 --> 53:13.950
说没问题了

53:13.950 --> 53:14.950
怎么移动

53:14.950 --> 53:15.950
随便你怎么甩

53:15.950 --> 53:16.950
移动的再快都没问题

53:16.950 --> 53:17.950
都没问题

53:17.950 --> 53:18.950
都可以

53:18.950 --> 53:20.950
没有任何问题

53:20.950 --> 53:22.950
这就是鼠标移动实现

53:22.950 --> 53:25.950
为什么我用这种方式来做呢

53:25.950 --> 53:27.950
因为这种方式不容易出问题

53:27.950 --> 53:28.950
比方说

53:28.950 --> 53:29.950
比方说

53:29.950 --> 53:31.950
这个DIV当量败成量败

53:31.950 --> 53:33.950
比方说量败成量败

53:33.950 --> 53:35.950
这个DIV里边还有一个P元素

53:35.950 --> 53:36.950
比方说吧

53:36.950 --> 53:37.950
有个P元素

53:37.950 --> 53:38.950
我们看着

53:38.950 --> 53:40.950
给这个P元素也设置一样式

53:40.950 --> 53:41.950
100

53:41.950 --> 53:42.950
高度为100

53:42.950 --> 53:45.950
背景颜色为量蓝色

53:45.950 --> 53:46.950
好

53:46.950 --> 53:47.950
看着

53:47.950 --> 53:49.950
哪怕里边有个P元素

53:49.950 --> 53:50.950
我点击这个P元素

53:50.950 --> 53:51.950
是不是也可以

53:51.950 --> 53:53.950
也是一切正常的

53:53.950 --> 53:54.950
因为它变化的是啥

53:54.950 --> 53:55.950
我们始终

53:55.950 --> 53:56.950
根据什么计算的

53:56.950 --> 53:57.950
根据

53:57.950 --> 53:59.950
离商一次鼠标移动的位置

53:59.950 --> 54:00.950
来进行计算的

54:00.950 --> 54:01.950
根据的是

54:01.950 --> 54:02.950
离商一次鼠标移动的位置

54:02.950 --> 54:03.950
来进行计算的

54:03.950 --> 54:04.950
所以说

54:04.950 --> 54:05.950
这样子怎么都不会出问题

54:05.950 --> 54:06.950
好

54:06.950 --> 54:07.950
这里我再说一下

54:07.950 --> 54:08.950
别的做法吧

54:08.950 --> 54:09.950
多提供一些思路

54:09.950 --> 54:10.950
还有一种做法

54:10.950 --> 54:11.950
也比较常见

54:11.950 --> 54:13.950
它就没有使用这两个属性

54:13.950 --> 54:14.950
我看到比较多的是

54:14.950 --> 54:16.950
使用配级X和配级Y

54:16.950 --> 54:17.950
好

54:17.950 --> 54:18.950
我再说一下

54:18.950 --> 54:19.950
这两种做法

54:19.950 --> 54:20.950
它指的是什么呢

54:20.950 --> 54:22.950
当我鼠标按下的时候

54:22.950 --> 54:23.950
我记录

54:23.950 --> 54:24.950
记录两个东西

54:24.950 --> 54:25.950
一个是鼠标

54:25.950 --> 54:28.950
相对于整个网页的作标

54:28.950 --> 54:30.950
相对于的是整个网页

54:30.950 --> 54:31.950
这个地方

54:31.950 --> 54:33.950
或者用Client X也可以

54:33.950 --> 54:34.950
总之是

54:34.950 --> 54:35.950
相对于的是

54:35.950 --> 54:36.950
要么是四口

54:36.950 --> 54:37.950
要么是整个网页

54:37.950 --> 54:38.950
总之记录一下

54:38.950 --> 54:39.950
相对于整个网页的作标

54:39.950 --> 54:40.950
一个X一个Y

54:40.950 --> 54:42.950
按下去的时候记录

54:42.950 --> 54:43.950
比方说

54:43.950 --> 54:44.950
这里

54:44.950 --> 54:45.950
我们把这个复制一下

54:45.950 --> 54:46.950
我写一下这个代码

54:46.950 --> 54:47.950
因为以后

54:47.950 --> 54:48.950
你们的公司里面

54:48.950 --> 54:49.950
可能看到别的做法

54:49.950 --> 54:50.950
都想啊

54:50.950 --> 54:51.950
其实都想

54:51.950 --> 54:52.950
思路都是差不多的

54:52.950 --> 54:53.950
那么就没有

54:53.950 --> 54:54.950
这一部分就在这了

54:54.950 --> 54:55.950
就在这

54:55.950 --> 54:56.950
我先把这一部分注释掉

54:56.950 --> 54:58.950
当鼠标按下的时候干嘛呢

54:58.950 --> 54:59.950
鼠标按下的时候

54:59.950 --> 55:00.950
记录配级X

55:00.950 --> 55:01.950
等于啥

55:01.950 --> 55:03.950
等于1.配级X

55:03.950 --> 55:04.950
把级录一下

55:04.950 --> 55:05.950
记录下来

55:05.950 --> 55:06.950
然后那配级Y

55:06.950 --> 55:07.950
1.配级Y

55:07.950 --> 55:08.950
把级录下来

55:08.950 --> 55:09.950
记录一下

55:09.950 --> 55:10.950
按一下的时候

55:10.950 --> 55:11.950
鼠标的位置

55:11.950 --> 55:13.950
然后同时再记录

55:13.950 --> 55:14.950
鼠标按下的时候

55:14.950 --> 55:15.950
这个元素

55:15.950 --> 55:17.950
它的Left和Top

55:17.950 --> 55:18.950
鼠标按下的时候

55:18.950 --> 55:19.950
这个元素的Left和Top

55:19.950 --> 55:20.950
再把级录下来

55:20.950 --> 55:21.950
在这里记录

55:21.950 --> 55:22.950
按一下的时候

55:22.950 --> 55:23.950
记录

55:25.950 --> 55:26.950
记录一下这个

55:26.950 --> 55:28.950
元素的Left和Top

55:29.950 --> 55:31.950
然后怎么办呢

55:31.950 --> 55:32.950
记录了X和Y

55:32.950 --> 55:34.950
记录了Left和Top

55:34.950 --> 55:35.950
记到元素的

55:35.950 --> 55:36.950
那么接下来

55:36.950 --> 55:38.950
鼠标移动过程中

55:38.950 --> 55:40.950
它相对于一开始

55:40.950 --> 55:41.950
按一下的距离

55:41.950 --> 55:42.950
比方说

55:42.950 --> 55:44.950
鼠标按下过后在这

55:44.950 --> 55:46.950
移动到这了

55:46.950 --> 55:47.950
那么鼠标是不是移动到

55:47.950 --> 55:48.950
这么一部分距离

55:48.950 --> 55:49.950
对吧

55:49.950 --> 55:50.950
把它相对于

55:50.950 --> 55:52.950
按一下的时候的距离算出来

55:52.950 --> 55:53.950
那么这个距离

55:53.950 --> 55:54.950
是不是就该是

55:54.950 --> 55:55.950
元素移动的距离

55:55.950 --> 55:56.950
对吧

55:56.950 --> 55:57.950
就是元素的Left

55:57.950 --> 55:58.950
移动的距离

55:58.950 --> 55:59.950
就这么个意思

55:59.950 --> 56:00.950
这样子也可以

56:00.950 --> 56:01.950
也可以

56:01.950 --> 56:02.950
来吧

56:02.950 --> 56:03.950
我们来算出一下

56:03.950 --> 56:04.950
用Ds

56:04.950 --> 56:05.950
DsX

56:05.950 --> 56:06.950
表示它的偏移量

56:06.950 --> 56:07.950
鼠标

56:07.950 --> 56:08.950
移动的距离

56:08.950 --> 56:09.950
就是什么1点配几X

56:09.950 --> 56:10.950
还是1点配几X来算

56:10.950 --> 56:12.950
当前的配几X

56:12.950 --> 56:13.950
减去啥呢

56:13.950 --> 56:14.950
一开始记录的配几X

56:14.950 --> 56:15.950
就按下的时候

56:15.950 --> 56:16.950
记录的东西

56:16.950 --> 56:17.950
然后呢

56:17.950 --> 56:18.950
DsY

56:18.950 --> 56:19.950
配几Y

56:19.950 --> 56:20.950
减去

56:20.950 --> 56:21.950
配几Y

56:21.950 --> 56:22.950
对吧

56:22.950 --> 56:23.950
那么就是它移动的距离

56:23.950 --> 56:24.950
对不对

56:24.950 --> 56:25.950
好

56:25.950 --> 56:26.950
那么这个移动的距离

56:26.950 --> 56:28.950
DivLeft

56:28.950 --> 56:29.950
加上

56:29.950 --> 56:30.950
加上啥

56:30.950 --> 56:31.950
加上那个

56:31.950 --> 56:33.950
就是DsX

56:33.950 --> 56:34.950
对不对

56:34.950 --> 56:35.950
Top

56:35.950 --> 56:36.950
加上

56:36.950 --> 56:38.950
DsY

56:38.950 --> 56:39.950
DsY

56:39.950 --> 56:40.950
是吧

56:40.950 --> 56:41.950
鼠标移动的距离

56:41.950 --> 56:43.950
我这里就移动的距离

56:43.950 --> 56:44.950
这两个东西

56:44.950 --> 56:46.950
这一对东西

56:46.950 --> 56:47.950
和这一对东西

56:47.950 --> 56:48.950
都是记录的是

56:48.950 --> 56:50.950
鼠标按下的时候

56:50.950 --> 56:51.950
它的距离

56:51.950 --> 56:52.950
记录的是

56:52.950 --> 56:53.950
按下的时候的

56:53.950 --> 56:54.950
座标位置

56:54.950 --> 56:55.950
那么鼠标移动了多少

56:55.950 --> 56:56.950
那么这个东西就移动多少

56:56.950 --> 56:58.950
这样子也可以

56:58.950 --> 56:59.950
你看

56:59.950 --> 57:00.950
是不是也可以

57:00.950 --> 57:01.950
对吧

57:01.950 --> 57:02.950
有一说一

57:02.950 --> 57:03.950
有一说一

57:03.950 --> 57:04.950
这种方式的

57:04.950 --> 57:05.950
兼容性更好

57:05.950 --> 57:06.950
那肯定的

57:06.950 --> 57:08.950
我刚才使用的是Movement X

57:08.950 --> 57:09.950
那种兼容性

57:09.950 --> 57:10.950
稍微差一点

57:10.950 --> 57:11.950
不过它现在也成为标准了

57:11.950 --> 57:12.950
不过它兼容性

57:12.950 --> 57:13.950
稍微差一点

57:13.950 --> 57:14.950
因为就版本的轮转器

57:14.950 --> 57:15.950
不支持

57:15.950 --> 57:16.950
先说一下这个问题

57:16.950 --> 57:17.950
都行

57:17.950 --> 57:19.950
两种方式都行

57:19.950 --> 57:21.950
思路和逻辑都是一样的

57:21.950 --> 57:22.950
但是你这个

57:22.950 --> 57:23.950
做的过程中

57:23.950 --> 57:24.950
你千万不要去

57:24.950 --> 57:26.950
就千万不要去用这个

57:26.950 --> 57:27.950
老了

57:27.950 --> 57:28.950
跑哪去了

57:28.950 --> 57:29.950
千万不要去用这个

57:29.950 --> 57:30.950
因为它是相对于

57:30.950 --> 57:32.950
事件源的那一边距

57:32.950 --> 57:33.950
那有边框的话又麻烦了

57:33.950 --> 57:34.950
如果它不是

57:34.950 --> 57:36.950
你注册的元素

57:36.950 --> 57:37.950
它不是事件源

57:37.950 --> 57:38.950
那又麻烦了

57:38.950 --> 57:40.950
说尽量不要去用这个玩意儿

57:40.950 --> 57:42.950
尽量不要去用这个就行了

57:42.950 --> 57:43.950
好

57:43.950 --> 57:44.950
这是这一块

57:44.950 --> 57:45.950
这一块

57:45.950 --> 57:46.950
那还有啥呢

57:46.950 --> 57:47.950
是不是就没了

57:47.950 --> 57:48.950
就没了

57:48.950 --> 57:49.950
就这么一些了

57:49.950 --> 57:51.950
那接下来就是作业了

57:51.950 --> 57:52.950
作业

57:53.950 --> 57:55.950
这个作业一共用三道题

57:55.950 --> 57:57.950
第一个是拖载效果

57:57.950 --> 57:58.950
这个没啥好说的

57:58.950 --> 57:59.950
我可能上已经说过了

57:59.950 --> 58:00.950
所以说你把它

58:00.950 --> 58:02.950
课堂上的说的完成就行了

58:02.950 --> 58:04.950
这个东西我也不再讲了

58:04.950 --> 58:06.950
拖载效果一定要去做一遍

58:06.950 --> 58:07.950
一定要去做一遍

58:07.950 --> 58:09.950
好 第二道题是新兴评分

58:09.950 --> 58:11.950
新兴评分

58:11.950 --> 58:13.950
看一下

58:13.950 --> 58:14.950
就这个东西

58:14.950 --> 58:15.950
就这个东西

58:15.950 --> 58:16.950
实现这么个效果

58:16.950 --> 58:17.950
这么个效果

58:18.950 --> 58:19.950
你看一下就明白了

58:19.950 --> 58:20.950
新兴评分

58:20.950 --> 58:22.950
第三个是放大镜

58:23.950 --> 58:25.950
放大镜这一块

58:25.950 --> 58:26.950
我这里

58:26.950 --> 58:27.950
不要去看这一代码

58:27.950 --> 58:29.950
这代码都不是我写的

58:29.950 --> 58:30.950
不要去看

58:30.950 --> 58:31.950
你看这个放大镜

58:31.950 --> 58:32.950
我们看一下效果就行了

58:32.950 --> 58:33.950
这个放大镜

58:33.950 --> 58:35.950
后来发现它有点问题

58:35.950 --> 58:37.950
这个效果写的有点问题

58:37.950 --> 58:38.950
我随便找了

58:38.950 --> 58:39.950
我还没有写

58:40.950 --> 58:41.950
我这里说一下

58:41.950 --> 58:43.950
它这个效果肯定是有问题的

58:43.950 --> 58:45.950
你看一下我们这个框框

58:45.950 --> 58:46.950
这个黄色的框框

58:46.950 --> 58:48.950
这个黄色框框框住这一部分

58:48.950 --> 58:50.950
那么右边就应该显示哪一部分

58:50.950 --> 58:52.950
它是不是显示多了右边

58:52.950 --> 58:53.950
对吧

58:53.950 --> 58:54.950
右边显示多了

58:54.950 --> 58:56.950
理解这个逻辑吗

58:56.950 --> 58:58.950
就是我这个黄色框框框住的是哪一部分

58:58.950 --> 58:59.950
它就应该

58:59.950 --> 59:01.950
右边就应该显示哪一部分

59:01.950 --> 59:03.950
它右边显示现在显示的有点多

59:03.950 --> 59:04.950
明白了意思吧

59:04.950 --> 59:05.950
它显示有点多

59:05.950 --> 59:06.950
但是呢

59:06.950 --> 59:08.950
效果类似于这样子

59:08.950 --> 59:09.950
类似于这样子

59:09.950 --> 59:10.950
好

59:10.950 --> 59:11.950
你可以好好去思考一下

59:11.950 --> 59:12.950
其实你可以参照啥呢

59:12.950 --> 59:14.950
参照京东嘛

59:14.950 --> 59:15.950
随便找一个

59:15.950 --> 59:16.950
京东淘宝都有对吧

59:16.950 --> 59:18.950
芳大京效果到处是

59:18.950 --> 59:19.950
随便找一个吧

59:19.950 --> 59:20.950
就到这个

59:21.950 --> 59:22.950
这个

59:22.950 --> 59:26.520
看一下啊

59:26.520 --> 59:27.520
看一下这个

59:29.520 --> 59:30.520
你看

59:30.520 --> 59:31.520
就这个

59:31.520 --> 59:32.520
你看右边

59:32.520 --> 59:33.520
右边那个

59:33.520 --> 59:34.520
我这里框是哪一部分

59:34.520 --> 59:35.520
对吧

59:35.520 --> 59:36.520
右边就显示哪一部分

59:36.520 --> 59:37.520
你参照这个效果来做

59:37.520 --> 59:39.520
参照这个效果来做

59:40.520 --> 59:41.520
这里面有逻辑的

59:41.520 --> 59:42.520
是有逻辑的

59:42.520 --> 59:43.520
你再好好想一想

59:43.520 --> 59:44.520
再好好想一想

59:44.520 --> 59:45.520
这里面有逻辑

59:45.520 --> 59:46.520
它是有两张图片

59:46.520 --> 59:47.520
一张是大图

59:47.520 --> 59:48.520
一张是小图

59:48.520 --> 59:49.520
一张是大

59:49.520 --> 59:50.520
这是大图

59:50.520 --> 59:51.520
这是小图

59:51.520 --> 59:52.520
其实呢

59:52.520 --> 59:53.520
我们这里

59:53.520 --> 59:54.520
我们这里

59:54.520 --> 59:55.520
就是你可以在这里去

59:55.520 --> 59:57.520
重新下载两张图片

59:57.520 --> 59:58.520
无所谓吧

59:58.520 --> 59:59.520
就这个嘛

59:59.520 --> 01:00:00.520
其实这里呢

01:00:00.520 --> 01:00:01.520
应该是这样子

01:00:01.520 --> 01:00:02.520
就是说

01:00:02.520 --> 01:00:04.520
你这个框框的大小呢

01:00:04.520 --> 01:00:07.520
取决于大图和小图的比例

01:00:07.520 --> 01:00:09.520
如果大图和小图的比例差不多

01:00:09.520 --> 01:00:10.520
那么你这个框框的大小

01:00:10.520 --> 01:00:11.520
也就差不多

01:00:11.520 --> 01:00:12.520
你看这个是吧

01:00:12.520 --> 01:00:14.520
你的框框大小就差不多

01:00:14.520 --> 01:00:15.520
那么这里

01:00:15.520 --> 01:00:17.520
比方说我这里找不到就是

01:00:17.520 --> 01:00:18.520
一个大图小图比例

01:00:18.520 --> 01:00:19.520
比较差别比较大的

01:00:19.520 --> 01:00:20.520
我们再找一个看一下

01:00:20.520 --> 01:00:22.520
看一下这个

01:00:22.520 --> 01:00:24.520
这个框框大小呢

01:00:24.520 --> 01:00:25.520
也差不多

01:00:25.520 --> 01:00:27.520
有没有它比例差得比较远的

01:00:27.520 --> 01:00:28.520
差得比较大的

01:00:28.520 --> 01:00:29.520
我看一下

01:00:29.520 --> 01:00:31.520
这个也差不多

01:00:31.520 --> 01:00:32.520
总之呢

01:00:32.520 --> 01:00:34.520
它就是个框框的尺寸

01:00:34.520 --> 01:00:35.520
框框的尺寸

01:00:35.520 --> 01:00:38.520
它不一定是固定的

01:00:38.520 --> 01:00:40.520
它不一定是固定的尺寸

01:00:40.520 --> 01:00:42.520
就是你这里面有逻辑

01:00:42.520 --> 01:00:43.520
你得好好去思考一下

01:00:43.520 --> 01:00:44.520
你思考过后了

01:00:44.520 --> 01:00:45.520
我这里不能说太多

01:00:45.520 --> 01:00:46.520
说太多也知道

01:00:46.520 --> 01:00:47.520
就全部告诉你了

01:00:47.520 --> 01:00:49.520
所以说你这里要下去好好思考

01:00:49.520 --> 01:00:50.520
好好思考

01:00:50.520 --> 01:00:51.520
就是大图和小图之间

01:00:51.520 --> 01:00:52.520
肯定是有个比例

01:00:52.520 --> 01:00:54.520
那么那个比例呢

01:00:54.520 --> 01:00:56.520
跟这个框框的大小有什么关系

01:00:56.520 --> 01:00:57.520
有什么关系

01:00:57.520 --> 01:00:59.520
你好好去思考一下

01:00:59.520 --> 01:01:00.520
把这个问题想通

01:01:00.520 --> 01:01:01.520
总之呢你

01:01:01.520 --> 01:01:03.520
不管你能不能做出来吧

01:01:03.520 --> 01:01:04.520
总之呢你去思考过后

01:01:04.520 --> 01:01:06.520
肯定对后边你听我讲解

01:01:06.520 --> 01:01:07.520
肯定是有帮助的

01:01:07.520 --> 01:01:08.520
好吧

01:01:08.520 --> 01:01:09.520
去做一遍

01:01:09.520 --> 01:01:10.520
新鲜评分放达劲

01:01:10.520 --> 01:01:12.520
拖载效果拖载效果是一定要

01:01:12.520 --> 01:01:13.520
把它做出来的

01:01:13.520 --> 01:01:14.520
因为我讲过的

01:01:14.520 --> 01:01:15.520
好吧

01:01:15.520 --> 01:01:16.520
这就是这一刻的内容

01:01:16.520 --> 01:01:17.520
下一口我来讲你作业

