WEBVTT

00:00.000 --> 00:16.730
第八章 第八章 咱们来讲动物事件

00:17.250 --> 00:23.390
其实呢 我们的介石啊 介石在浏览器环境里面的大部分时候啊

00:23.650 --> 00:27.230
都是为了做一些交互效果 提高用户体验的

00:27.490 --> 00:32.090
也就是说用户做了一些操作 然后呢 我们要去做一些事情 对吧

00:32.350 --> 00:35.170
其实用户做些这些操作的时候

00:35.430 --> 00:38.750
我们在页面上怎么知道用户做操作了

00:39.230 --> 00:40.790
这就需要靠事件

00:41.310 --> 00:45.150
而事件这一块的知识呢 他是内容比较多

00:45.410 --> 00:47.970
所以说呢 我们这里专门来一个章节来进行讲解

00:48.730 --> 00:53.350
这个这一节课啊 咱们先来看一下动物事件里面的一些基础概念

00:53.610 --> 00:56.150
就是一关于认识他一些术语啊

00:56.410 --> 00:58.710
认识他一些基本的事件模型啊

00:58.970 --> 01:03.330
把这些概念知道之后呢 我们后边的学习呢 就会轻松很多

01:03.550 --> 01:04.050
好吧

01:04.570 --> 01:06.350
首先第一个部分啊

01:06.610 --> 01:08.910
第一个部分 我们说一下基本的术语

01:10.190 --> 01:15.570
就是我们后续的课程 就是在咱们第八章以及后边的课程里边呢 我经常会用到这些

01:15.830 --> 01:16.090
术语

01:16.350 --> 01:19.150
所以说了以后呢 我说到之后呢 你要知道是什么意思啊

01:19.670 --> 01:21.470
首先是第一个术语 就是事件

01:21.710 --> 01:22.750
什么叫做事件

01:22.990 --> 01:24.530
事件呢 就是

01:25.050 --> 01:26.070
发生一件事

01:26.310 --> 01:27.090
发生一件事

01:27.850 --> 01:28.630
就是事件

01:28.890 --> 01:31.950
就是事件本身这个概念呢 非常非常简单啊 我们说

01:32.170 --> 01:35.170
某个事件啊 点击事件 就是发生了点击这么一件事

01:35.990 --> 01:41.890
然后呢 比方说 鼠标移入事件 就鼠标呢 移动到了某个元素里边 就发生了这么一件事

01:42.150 --> 01:46.490
比方说键盘按下事件 就是按到键盘 发生了按到键盘这么一件事

01:46.750 --> 01:51.110
总之呢 事件呢 就发 指的是发生了一件事啊 这个很简单

01:51.870 --> 01:55.190
然后呢 接下来是这么一个概念 叫做事件内词

01:55.450 --> 01:56.470
事件内词

01:56.730 --> 01:58.530
什么叫做事件内词呢

01:58.790 --> 01:59.810
事件内词呢 就是

02:00.070 --> 02:01.850
发生事情的内词

02:01.970 --> 02:04.310
发生了什么事 啊 发生了什么事

02:04.570 --> 02:09.530
就是跟那个事件一时内事啊 发生了什么样的事 我有的时候呢 会说

02:09.830 --> 02:14.070
啊 某个内词的事件啊 就是指的是 发生了某一件

02:14.330 --> 02:15.570
某一个特殊的事情

02:15.990 --> 02:16.490
比方说

02:17.010 --> 02:22.890
啊 事件内词 事件内词有哪些呢 比方说举个例子啊 比方说点击啊 什么鼠标

02:23.150 --> 02:25.570
按下啊 鼠标抬起

02:26.210 --> 02:27.050
啊 什么

02:27.490 --> 02:28.650
鼠标移入

02:29.650 --> 02:30.330
啊 移入

02:30.770 --> 02:31.770
啊 鼠标

02:32.110 --> 02:32.790
移出

02:33.390 --> 02:36.750
我们后边会挨在地讲啊 然后呢 什么键盘

02:37.010 --> 02:38.810
键盘按下对吧

02:39.070 --> 02:40.510
然后呢 键盘

02:40.770 --> 02:41.630
啊 抬起

02:42.130 --> 02:47.510
等等等等 像这些呢 都是属于事件内词啊 他指的是什么意思呢 他指的就是

02:47.770 --> 02:49.050
发生事情的内词

02:49.310 --> 02:51.050
啊 发生什么 发生

02:51.310 --> 02:52.390
什么事情

02:52.890 --> 02:54.170
就发生了什么事情

02:54.430 --> 02:59.550
就是我们后边学习的时候呢 会有一专门哪一节课啊 会讲解 就是 好像拿

02:59.710 --> 03:03.850
应该会拿几节课时间啊 来讲解这个事件内词 有哪些事情可以发生

03:04.110 --> 03:05.990
我们有哪些事情呢 可以处理

03:06.870 --> 03:08.710
啊 这是关于事件的内词

03:09.830 --> 03:10.630
好 下面

03:11.390 --> 03:14.710
就是处理程序啊 事件处理程序

03:15.270 --> 03:19.990
事件处理程序呢 我们之前解释过是什么意思呢 他指的是一个函数啊

03:20.430 --> 03:21.870
啊 用于就是

03:22.150 --> 03:26.270
当某件事情 就是当某个事情发生的时候啊

03:27.270 --> 03:29.550
发生死 死情

03:30.830 --> 03:31.830
发生死

03:32.350 --> 03:32.950
运行

03:33.390 --> 03:41.070
啊 当某件事情发生的时候呢 他会运行这样 这样一个函数 那么这个函 如果像这种函数啊 我们把它叫做事件处理程序

03:41.830 --> 03:46.470
啊 明白这意思了啊 叫事件处理程序 好 下面还有一个概念叫做事件注册

03:47.230 --> 03:50.790
啊 事件注册 要事件注册呢 也叫做注册事件

03:51.310 --> 03:54.190
啊 他是一个动作 指的是将一个

03:54.590 --> 03:57.950
事件处理程序啊 就是

03:59.110 --> 04:01.950
挂载道 挂载

04:03.630 --> 04:06.150
挂载道 某个事件上

04:07.150 --> 04:11.790
这就是事件处理程序 这是我们比较用的比较多的词 叫做事件注册 指的是

04:12.270 --> 04:16.390
我给某一个事件 当发生文件事情的时候 我要做什么 我把整个连接起来

04:16.710 --> 04:19.350
好 这样我们之前写了个代码啊 一个非常简单的代码

04:20.390 --> 04:20.790
看一下吧

04:21.790 --> 04:26.910
我们来分析一下啊 这个代码里面包含了 就是我们会怎么来说 怎么来描述这个代码

04:27.750 --> 04:30.110
比方说 一个id嘛 随便给一个

04:31.590 --> 04:32.070
div1

04:33.950 --> 04:38.310
啥都没有啊 啥都没有 我就说一下这个东西 document get the element by id div1

04:39.750 --> 04:41.710
这是个动物元素 对吧 这是个动物对象

04:43.190 --> 04:48.590
然后呢 给他注册点击事件啊 这里我们就会这样子说 注册一个点击事件

04:48.830 --> 04:54.750
是什么意思呢 注册点击事件的意思就是 事件内行是点击事件 是click 点击事件

04:55.430 --> 04:59.790
好 事件处理程序呢 是一个函数 把这个函数跟点击事件关联起来

05:00.390 --> 05:04.510
这就要注册点击事件 这就要做事件注册 你看这意思吧

05:05.310 --> 05:09.350
好 这是关于前边的啊 说几个数语

05:10.590 --> 05:12.030
好 下面这个啊 下面这个

05:13.230 --> 05:17.470
下面这个就很重要了 叫做事件流 事件流

05:19.310 --> 05:24.350
事件流 这个东西呢 就是说发生一件事的时候 我们页面上的元素

05:24.910 --> 05:29.550
会做出哪些反应 哪些元素会监听到这个事件

05:30.430 --> 05:36.950
啊 什么叫监听事件 就好必说有个有个人啊 一个人一直盯着这个网页 当然这是

05:37.230 --> 05:41.190
是浏览器内核啊 你可以把他想成介石执行引擎或者是浏览器内核

05:41.590 --> 05:47.550
浏览器内核呢 就一直看啊 就盯着一个元素看啊 我这个元素有没有被点击啊 我这个元素有没有被点击

05:47.750 --> 05:52.030
哎 突然被点击了 他就监听到了啊 他就发 他就知道我发生了这么一件事了

05:52.550 --> 05:58.590
这么个意思啊 叫监听事件 就是有一个东西他一直在盯着每一个元素 看他发生了什么事

05:59.390 --> 06:05.110
什么叫事件流呢 指的是将某 当某一件事情啊 当某一件

06:06.190 --> 06:08.910
跟某个事件发生的时候

06:10.270 --> 06:14.590
哪些元素会监听到

06:15.590 --> 06:18.110
该事件发生 该事件发生

06:20.510 --> 06:23.750
这些元素啊 发生

06:25.230 --> 06:29.350
该事件的顺序 就是是就是事件流

06:32.200 --> 06:41.560
好 举个例子吧啊 比方说啊 咱们这个div1这个div对吧 比方说我们咱们还有一个div2啊 咱们div2

06:42.200 --> 06:46.440
还有一个div3啊 比方有三个div 那么我这里呢 这里

06:46.880 --> 06:55.040
当他点击的时候 我这里得到是div1对吧 当他点击的时候 我输出一二三 那你想想这个道理啊 那这个div和这个div点击的时候

06:55.600 --> 07:02.560
点击div1的时候 点击div1的时候 div2和div3会不会发生这件事了

07:03.200 --> 07:09.600
会发生这件事了 他不会发生 因为他们是不可相干的 对吧 咱们这一部分呢就研究出 研究出是这个东西

07:09.840 --> 07:12.240
当我们做出一个动作的时候 哪些元素

07:13.040 --> 07:14.480
会监听到这个事件

07:15.120 --> 07:21.920
当然有可能那个事件没有注册 就是你什么事情 你什么都没有做 但是他一定监听到了 这是两码事 对吧 这是两码事

07:22.840 --> 07:26.640
比方说啊 比方说啊 我在这里代码啥都没写 啥都没有写

07:27.160 --> 07:33.680
我们就用鼠标点了这个div1 他有没有监听到这个事件 有 他有监听到这个事件 但是呢他只是

07:34.200 --> 07:38.240
他没有事情可以做 我们没有告诉他做什么事情 他没有事情可以做

07:38.440 --> 07:47.480
但他一定监听到这个事件了 明白这个意思吗 但是当我们点击div1的时候 div2和div3他是没有没有监听到这个事件的 他不知道发生了这件事

07:48.120 --> 07:51.800
是这么个意思啊 是这么个意思 能力下吧 我再说一次啊

07:52.560 --> 07:59.080
我这里啥代码都没有写 我点击用鼠标在页面上去点击这个div1点他的时候

07:59.920 --> 08:05.520
div1实际上是监听到了这个事件发生了 就是有鼠标点击他了

08:06.240 --> 08:08.600
但是div2和div3是没有监听到的

08:09.520 --> 08:17.240
而div1监听到之后呢 他就会触发这个事件啊 他就会运行这个事件的处理函数 但是他由于我们这里没有写任何代码

08:17.560 --> 08:20.440
因此他啥事情都没有做 但他一定监听到了

08:21.240 --> 08:27.960
这是我们要讲解的 就是我们发生某一个动作的时候 比方说点击啊 因为我们现在还没有介绍其他的事件类型

08:28.360 --> 08:31.160
比方说点击 当我们去做出一个动作的时候

08:31.880 --> 08:35.480
有哪些元素会监听到我们发生事件

08:36.080 --> 08:42.680
那么这些元素他们的监听的事件的发生的流程是什么 它的顺序是什么 我们讲的是这么个东西

08:44.000 --> 08:48.440
在最早的时候呢 实际上是没有这个概念的 实际上没有事件留这个概念的 就像我们最

08:48.920 --> 08:51.840
最容易理解的样子 当我们点击div1的时候呢

08:52.480 --> 08:57.600
只有他发生这个事件 其他都没有发生 都没有发生任何点击啊 只有他发生了点击

08:58.320 --> 09:05.920
这是比较容易理解的 但是后来呢 他们发现啊 就是当时很早很早的时候啊 是微软跟那个

09:07.120 --> 09:11.800
王锦啊 这两个流量器不在竞争嘛 对吧 阿姨和来不给头 这两个在竞争

09:13.040 --> 09:17.000
好 竞争的时候呢 他们就同时不约而同的发现了一个现象就是

09:17.600 --> 09:22.280
那如果我们页面上啊 就比方说不说页面啊 我们就说这个逻辑

09:23.080 --> 09:25.640
呃 比方说我们一张纸上

09:26.600 --> 09:29.520
有很多的圆圈啊 他们就开始讨论这个问题

09:30.720 --> 09:33.080
有很多的圆圈 这是一些同心圆

09:34.240 --> 09:40.640
当我把手把我的手指 你可以做这个操作啊 把手指按照这个圆芯上边

09:41.280 --> 09:44.760
你把手指按到这 按到这的时候 那么他

09:45.680 --> 09:49.480
这里的现象就很浪漫的是 就是我到底按的是哪一个圆呢

09:50.400 --> 09:54.200
是最里边那个圆呢 还是中间那个圆的 还是最外层那个圆的

09:55.160 --> 10:03.720
是不是都可以说的同 对不对 当我按照这个圆芯的时候 那么实际上这我手指同时出于这三个圆的正中心

10:04.240 --> 10:08.320
没有这意思吧 于是呢 他们基于这样的一个逻辑理论

10:09.600 --> 10:16.200
他就搞出来世界流这么个东西 几乎是不约而同搞出来的啊 只不过呢当时呢在

10:17.000 --> 10:24.120
i流浪器里边和王继流浪器里边 他们对世界流的理解是有一些差异的啊 以后呢我会讲他们的差异

10:25.000 --> 10:26.840
事件也就是说我们目前的

10:27.480 --> 10:33.480
至少他们又都达成这么一个共识 当我们对某一个元素做出操作的时候

10:34.120 --> 10:38.760
做出某当一个元素发生一件事的时候 就出发一个事件的时候

10:39.480 --> 10:43.280
那么他的歪成元素也会触发该事件

10:44.080 --> 10:47.120
至少呢我们达成他达成这么一个共识 就是当

10:48.440 --> 10:52.360
一个元素发生了某个事件时

10:53.120 --> 10:59.760
比方说点击事件 当然也包括后边的什么键盘事件 什么鼠标移入事件等等 所有的事件都是一样的啊

11:00.520 --> 11:03.840
所以他们就打出这么一个共识 一个元素如果发生了某件事

11:05.080 --> 11:09.480
那该元素的所有祖先元素

11:11.160 --> 11:11.920
祖先元素

11:13.560 --> 11:16.000
都发生了该事件

11:17.600 --> 11:24.880
于是他们打出这么一个规则 就像刚才这样子 同心元这里 我点了这个中间的元 那么外面的元好像应该是也是被点击了

11:25.480 --> 11:30.280
所以说外边的元素也会监听到事件的发生 明白这个意思吧

11:31.000 --> 11:32.120
好 举个例子啊

11:33.080 --> 11:37.320
咱们举个例子 比方TESTV2里边 我们这样子写DIV

11:38.200 --> 11:40.240
DIV里边有一个button 一个button

11:40.840 --> 11:42.480
button里边来写一个点击我

11:43.840 --> 11:44.520
点击我

11:45.240 --> 11:49.560
好 这个时候呢 我们做这么一件事 给这个找到个button 啊

11:50.160 --> 11:52.960
button 我们这样子来吧 啊document

11:53.560 --> 11:57.120
curry is negative 给button的注册点击事件啊

11:57.560 --> 11:58.040
unclick

11:58.720 --> 12:03.960
能看到吗 这个没问题吧 啊 找到个button给他注册点击事件啊 输出button

12:04.440 --> 12:09.040
表示button没点击了 然后呢 我们继续注册啊 给DIV注册点击事件

12:09.720 --> 12:12.520
DIV注册点击事件 那么我们输出DIV

12:13.000 --> 12:17.080
那么同样道理呢 我们可以给什么 body 注册点击事件啊DIV的副元素

12:18.120 --> 12:19.600
body 注册点击事件

12:20.520 --> 12:23.840
啊 这种方式啊 动物灵的方式来获取这个body 输出body

12:24.640 --> 12:29.720
然后呢 我们再给什么 给atm 注册点击事件啊 document element 注册点击事件

12:31.320 --> 12:33.160
好 然后呢 输出atmail

12:34.240 --> 12:38.440
atm元素 表示这个元素发生了事件 好 最后呢 我们甚至

12:39.040 --> 12:41.520
啊 甚至给document来吧

12:43.040 --> 12:46.000
onclick啊 给document注册点击事件

12:47.120 --> 12:52.320
可以的啊 可以的 然后呢 给整个文档注册点击事件 然后输出document

12:53.320 --> 12:55.800
来看一下吧 好 我们运行出来看一下啊

12:56.840 --> 13:00.520
你看我们只做了一次点击 你会发现他很多地方都监听到了这个事件

13:00.960 --> 13:07.240
他只剩了很多时候呢 我们没有去注册那么多事件处理程序啊 他就算监听到了 他没有做任何操作而已

13:07.440 --> 13:10.240
但他一定监听到了啊 等一下啊 刷新

13:11.240 --> 13:16.840
好 看着 当我们点这个按钮的时候 你看 所有的出出了

13:17.720 --> 13:20.320
也就是说他认为 就像一个同性员一样

13:20.840 --> 13:26.440
bottom 被点击了 说明div 被点击了 div 被点击了 body 给点击了 atm 给点击了 document 给点击了

13:27.000 --> 13:34.320
原来这个意思吧 啊 这就是啊 这个是 这就是这么一套规则啊 当某个元素发生某个事件的时候 那么这个元素所有的主宣元素

13:35.080 --> 13:37.960
都发生了这个事件 只不过呢 比方说啊 这个

13:38.680 --> 13:48.800
body 这一块 就是下面三个了 我没有注册事件 我没有注册事件 他有没有发生 他有发生 只是我们没有处理啊 没有去处理 没敢写处理的函数 没有去处理他

13:49.200 --> 13:56.240
但他一定发生了 不要认为他 这里只输出了两个 就好像是外甥没有发生这个事情啊 他发生了 只是我们没有处理

13:56.800 --> 14:02.320
没有这个意思吧 好 但是有的时候呢 你不要被视觉效果所欺骗了 就比方说啊

14:03.320 --> 14:12.720
比方说 咱们给他写个样式啊 找到这个div div呢 给他个宽度啊 宽度为100个像素啊 高度为100个像素 然后给他个背景颜色啊

14:13.520 --> 14:21.920
白光的 比方说红色嘛啊 给他个背景颜色啊 然后play scene啊relative 下面的button呢 给他个样式啊play scene

14:22.920 --> 14:26.880
play scene 啊absolute 绝对定位啊 然后呢

14:27.880 --> 14:31.880
run一程呢 为多少呢?run一程为-200个像素

14:33.280 --> 14:36.080
好 咱们来看一下啊 看一下保存

14:37.440 --> 14:43.920
看一下这个button在哪 button在这 那我现在点这个按钮的时候 还会div还会发生点击吗

14:44.840 --> 14:50.760
不要被他的视觉效果所欺骗了啊 我这里有没有说视觉效果没有 我说的是元素结构

14:51.360 --> 14:54.840
这个元素 所有的主线元素都发生了这件事

14:55.480 --> 15:00.920
所以一样的啊 无论他的样式怎么变化 这个这个现象是不会变的 原来的意思吧

15:01.680 --> 15:04.800
好 这就是啊 那么现在再问一下这个问题啊

15:05.800 --> 15:10.080
那比方说 另外一个啊 另外一个p元素 那这个p元素有没有发生这件事

15:10.520 --> 15:15.680
有没有发生 那就没有了啊 点按钮跟点按钮的时候 跟这个p元素没有任何关系

15:16.440 --> 15:22.040
query是negator 看一下吧negator 跟这个p元素是没有任何关系的啊

15:23.440 --> 15:23.760
看一下

15:28.090 --> 15:34.490
打印出来啊 保存看一下啊 点击 跟这p元素有没有关系 没有关系啊 是没有任何关系的

15:34.890 --> 15:45.890
ok 啊 这是关于这个点 好 那么他们都触发了这个事件 那如果你写了注册 就是写了这个处理函数过后 你得清楚他们的运行顺序是什么

15:46.530 --> 15:53.690
运行顺序是什么 就是先运行谁的事件 就是我们这里都都注册的事件 对吧 都注册的事件 那么到底先运行谁的

15:54.010 --> 16:00.610
好像杆子上 好像谁先注册运行谁的 这叫注册事件 对吧 这叫注册事件 谁先注册运行谁的 实际上不是的

16:01.210 --> 16:11.410
实际上不是的 那么他是怎么运行的呢 这里呢 在当时i1浏览器呢 跟那个火壶浏览 不是火壶啊 这个王继浏览器呢 发生了分歧

16:12.370 --> 16:21.170
i1浏览器认为呢 事件呢 它是先运行最理成的 然后一次往上运行 他把这个东西呢 叫做事件包袍

16:22.490 --> 16:27.570
i1认为了事件适应包袍的形式存在的 就是先运行

16:28.290 --> 16:33.970
最理成的 最理成的事件啊 就是元素 就是先触发

16:34.770 --> 16:45.970
就是最理成的元素 先监听到这个事件 先触发最理成的元素 然后再触发外层元素 在一次触发外层元素

16:46.970 --> 16:53.250
这种方式呢 叫做事件冒泡 然后那个王继浏览器呢 他不这样认为 他认为是刚好相反的

16:53.810 --> 16:59.090
他认为叫做这个事件的顺序呢 应该叫做事件补货啊 应该叫做事件补货

16:59.650 --> 17:01.810
那么他是指的是 先触发

17:02.690 --> 17:06.610
歪层的 就从外向内进行触发 先触发歪层的元素

17:08.130 --> 17:13.810
然后再一次触发理成元素 一直到最里边的元素

17:17.120 --> 17:26.280
元素 那么这两种方式到了目前为止啊 当然他们谁也谁也不服输 对吧 都要坚持自己的理念

17:26.680 --> 17:33.800
其实这个东西不用去纠结 但大家就追行同一套标准就完事了 那当时呢标准呢又没有出来 所以说他们就相互争执

17:34.440 --> 17:41.000
好 这那后边呢 后来标准出来了 标准说啊 闹行了 你们也别争了 我两个都支持啊 两个都支持

17:41.480 --> 17:47.800
所以说目前的标准是这样子的啊 目前他的标准是这样子 标准规定

17:48.760 --> 17:57.640
啊 默认情况下 事件是冒泡的啊 他是冒泡的方式啊的方式触发

17:59.880 --> 18:06.360
他是以冒泡的方式触发 默认情况下啊 事件是以冒泡的方式触发 但是这个东西可以改 我们后来会说怎么改

18:06.680 --> 18:12.600
这节课不涉及啊 不涉及 但是我们要理解啊 还有一种方式叫做事件补货啊 事件补货

18:13.080 --> 18:20.920
于是呢 我们可以看到啊 说说刚才的情况可以看到 无论我们的注册事件的顺序是怎么样的顺序 无论是怎么样的顺序

18:21.880 --> 18:27.240
因为他默认情况下是按照事件冒泡的方式 他总是从最理层出发到外层

18:27.800 --> 18:35.040
所以说无论我们的顺序是什么 当我点击按钮的时候 一定是从 看 点击的是最理层的 对吧 理层的是最理层的是啥 是疤腾对吧 是疤腾

18:35.200 --> 18:45.920
好 八层到DIV到保底调 ATML到Documents 我们的事件处理程序会通过事件处理程序会发现 这些事件的触发顺序是从内向外的

18:46.600 --> 18:55.240
没意思吧 那如果我点击的是DIV呢 点击的是DIV呢 跟这个八层也还有没关系就没关系了啊 那么点击的是如果是DIV的话 把这

18:55.720 --> 19:01.120
取消掉啊 点击这个DIV的话 那么你可以看到 跟这个八层里面是关系的 最理层就是这个DIV了

19:01.520 --> 19:08.480
它里边已经没有任何元素可以跟我们点击了 明白这个意思吧 它永远是从最理层触发到最外层

19:08.960 --> 19:15.520
这叫事件冒泡 这里有张图啊 大家可以通过这个图了 就会非常清楚的看到这个事件的整个流程

19:16.440 --> 19:17.160
看一下这个图啊

19:18.080 --> 19:21.120
这个事件整个流程里边呢 会分为三个阶段

19:21.960 --> 19:25.440
哪三个阶段呢 第一个阶段叫做事件补货阶段

19:26.440 --> 19:35.240
如果我们后边讲了事件补货 就是如何来用在事件补货阶段来处理问题的话 那么你后边会知道啊 事件补货呢 我们可以进行一下测试

19:35.800 --> 19:37.280
它会在补货阶段进行运行

19:38.320 --> 19:41.920
明白这个意思吧 首先呢 是从Y层到里层

19:42.560 --> 19:49.600
先触发document的事件补货阶段的事件 再触发了atm这个元素的事件补货阶段的事件

19:49.920 --> 19:55.240
然后再触发包底事件补货的阶段的事件 再触发DIV事件补货阶段的事件

19:56.440 --> 20:01.520
好 好 这个触发完了过后 到了最理成元素 我们把它叫做事件目标阶段

20:02.320 --> 20:07.200
啊 就是在最理成了啊 没法再往细分了 那么在这个阶段呢 我们认为

20:08.000 --> 20:09.800
它的顺序呢 是事件目标阶段

20:10.920 --> 20:16.440
好 那么就是最理成的元素了 触发啊 触发这个事件 然后呢 就一次向上冒泡啊 冒泡

20:16.960 --> 20:23.240
那么冒泡就像一个小水泡 从最底 从水的最深处啊 冒到水面 就是个冒泡啊

20:23.720 --> 20:29.680
一次呢 往上又来触发啊 又来触发啊 就是它的 就是这种模型啊 这种模型

20:30.480 --> 20:40.360
明白的意思吧 好 那么我们刚刚才就是这样的场景 对吧 刚才点击八层的时候 刚才呢 我们没有处理什么事件补货 对吧 没有处理事件补货 因此呢 我们点击八层的时候

20:41.760 --> 20:46.760
先运行的是它 先触发的是它的事件 然后往上冒泡 触发DIV 触发包底 触发

20:47.360 --> 20:50.160
AteMill 触发Dockument 因为默认情况下是事件冒泡

20:51.160 --> 21:01.040
好吧 那么这里呢 有一个数语呢 大家要注意啊 有一个数语要注意 我们后边呢 还会看到这个图 我们先把这个概念也清楚 一个数语叫做事件园

21:02.400 --> 21:07.840
事件园也叫做事件目标啊 也叫做事件目标

21:09.440 --> 21:15.560
我们就把它平时呢 就把它统称为事件园 指的是什么呢 事件目标阶段

21:16.560 --> 21:22.560
的元素 事件目标阶段只有一个元素 它肯定是最里程的元素 它不可能有多个元素的

21:23.360 --> 21:28.240
猫跑阶段和补货阶段可能会设计到多个元素 但是在事件目标阶段就最里程的元素

21:28.760 --> 21:33.880
就是你触发事件最直接那个元素 就像我们刚才的同心园一样 就最里程的圆圈

21:34.560 --> 21:39.520
就是事件目标元素 那么这个元素呢 我们把它称之为事件园啊 事件园

21:40.520 --> 21:42.360
好了 就这么个概念啊 就这么个概念

21:43.360 --> 21:52.160
ok 这就是关于事件流 先有这么一个印象啊 不光要有印象 而且要知道什么叫事件补货 它们它的运行顺序是什么 什么要事件冒泡

21:52.560 --> 21:58.760
那么它的运行顺序是什么 这个要清楚啊 一个从外到内 一个从内到外 然后中间讲一个事件目标阶段

21:59.840 --> 22:03.160
好 先把这个概念认识清楚我们后边会用到的 ok 那咱们

22:03.760 --> 22:09.600
目前呢 就完了就没了啊 就没了 这是基础部分的概念 了解的概念呢 都我们后边的学习所帮助

