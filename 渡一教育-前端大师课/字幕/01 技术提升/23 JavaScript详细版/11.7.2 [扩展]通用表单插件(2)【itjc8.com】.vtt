WEBVTT

00:00.000 --> 00:17.800
了解了这些规则之后 咱们现在开始来写这个介石代码

00:19.240 --> 00:23.640
首先我们看这个构造函数啊 构造函数里面是不是现在得有一个参数 对不对

00:24.080 --> 00:30.160
什么参数啊 我刚才说了啊 这构造函数呢 它要配置什么呢 它要配置的是这个

00:32.040 --> 00:37.800
跑一下下面啊 就是一个是表达的动物对象 一个呢是表达的验证规则 对不对

00:38.160 --> 00:45.120
那有可能将来还会配置一些乱七八糟的其他玩意儿 所以说呢 我们把这个整个构造函数呢 它的参数呢 就是一个配置对象

00:45.840 --> 00:46.840
它就是一个配置对象

00:48.400 --> 00:56.520
啊 不行 好吧 那么这个配置对象里面要传什么东西呢 一个是表达的动物对象 一个是呢 表达的验证规则

00:57.280 --> 01:02.600
好 那么如果你没有传 怎么办 没有传的话我给你默认值 好 所以说呢 我们这里呢

01:03.040 --> 01:11.000
先得到一个默认值啊 表达验证的就是配置的默认值啊 默认值的话就很简单的啊 就很简单的

01:12.600 --> 01:14.920
啊 我们这里呢 default defaults option

01:15.920 --> 01:23.080
这是默认配置啊 默认配置呢 是一个对象啊 一个对象里边的form的表达的动物元素 就是form动

01:24.400 --> 01:26.160
啊 就整个表达的form动物元素

01:27.760 --> 01:30.960
如果你没有配置的话 我怎么办呢 我就找这个页面上

01:31.160 --> 01:33.360
第一个form元素

01:34.840 --> 01:39.120
啊 我们不是就这个属性吗 对吧 找第一个用 第一个form元素啊 就是form元素

01:39.600 --> 01:46.400
还有找第一个 但找不到他就不管我的事了啊 你反正你一个没配置 那怎么办呢 对不对啊 总之呢 我就这样子来处理

01:47.000 --> 01:55.240
啊 这是formform元素啊form元素 当然呢 表达验证它不一定是form元素啊 我这里只是默认值啊 这是默认配置

01:56.240 --> 02:07.840
嗯 默认配置 好 下边呢 我们还不是还有个配置吗 是吗 就是验证规则对吧 叫做form表单规则啊 表单规则 我们用form

02:11.040 --> 02:16.840
啊 form入 表示验证规则 验证规则的话 我就给你一个空对象 我还能怎么办呢

02:17.360 --> 02:23.160
啊 还能怎么办呢 我只只有给你一个空对象啊 表示验证 就是表单规则啊 表单规则

02:24.160 --> 02:30.360
好 这默认配置 然后呢 这是我们用户传令的配置 那么到时候呢 用户肯定要使用这个ges 对吧

02:30.760 --> 02:36.160
所以说呢 我们这里会会把这个表单规则呢 给我传进来啊 给我传进来 比方这里啊 我们把他写完吧

02:37.160 --> 02:42.760
两个密码相等就是验证通过啊 否则的话有验证 所以就是两次密码

02:44.480 --> 02:51.520
密码输入不一致啊 这就是这就是表单规则啊 写好之后呢 我们就可以调那个

02:52.080 --> 02:58.760
就是form validator new一个什么myplugin

03:00.640 --> 03:02.720
form validator

03:04.160 --> 03:11.720
把这个什么 一个传个对象进去嘛 一个是form dome啊 动物对象是哪呢 就是来自于这啊 来自于这document

03:12.040 --> 03:16.200
啊 我这里就配置给他配置一下啊 document query 是那个头啊 就是

03:17.160 --> 03:22.040
form 是吧 把这个form对象啊 就表单元素给他配置进去

03:22.840 --> 03:28.200
然后呢 再配置什么呢 再配置这个form入 啊 封入的话就是个辩量啊 把个辩量拿过来

03:28.640 --> 03:33.400
对吧 这样子呢 我们就创建了这么一个对象 剩下的事情交给他了啊 我现在把这些东西都告诉你的

03:33.680 --> 03:37.640
并且呢 我在议员上还书写了制定属性 所以说剩下的事情呢就交给你的

03:38.640 --> 03:38.920
好了

03:40.080 --> 03:45.600
好 那么这里呢 我们就需要把这两个对象进入混合 对吧 混合 混合不是以前做过的 对不对

03:46.120 --> 03:51.080
好 最终呢 我们这个option 最终我们的option里边就会保存什么了 保存这个

03:52.400 --> 03:55.520
objects assign 啊 混合一个新对象

03:56.920 --> 04:03.160
把defaultsoption放这儿 然后把option放这儿 然后那option里边的对象里边的东西呢 就是把它覆盖掉了

04:03.880 --> 04:05.720
对吧 就是这样子啊 这样子来处理

04:06.920 --> 04:11.600
好 当然呢 肯定是要要求你传递的啊 肯定是要求你传递的 但是这里还有种处理方式

04:12.000 --> 04:16.720
就是判断 如果你没有给我传递这个东西 我就给你报错 还记得报错吗

04:17.520 --> 04:25.120
srow 什么new 什么 比方说给他报一个type error错误 就是你没有传递相应的数据呢 我就给你报错 这也是一种常见的做法

04:26.800 --> 04:29.480
好 这里我们就把它混合起来 形成一个配置

04:31.280 --> 04:32.680
形成 啊 就是混合

04:34.240 --> 04:36.120
形成 最终的配置

04:37.200 --> 04:41.560
好 这里呢 就把配置搞定了啊 我来看一下啊 现在验证一下这个配置是不是正确

04:42.200 --> 04:48.720
不行 验证一下这个配置是不正确的 当然我们这里应该把它保存到z里面啊 z 额不行里面

04:49.360 --> 04:53.280
表示 这保存到这里边配置 好 这里运行啊 看一下

04:55.660 --> 04:56.340
好 f12

04:57.380 --> 05:05.460
好 看一下啊 这个对象 好 没问题了啊 没问题了 你看 这样子配置 是不是各种配置都进来了 对吧 这里面配置啊 这个password 都没配置

05:06.180 --> 05:10.860
好了 这个配置进来了 好 以后呢 我们还可以肯定还会用到这里 这些东西

05:11.660 --> 05:18.300
还会用到页面上的这些东西啊 就这些自定义属性 对吧 我们要根据不同的自定义属性的名字

05:18.740 --> 05:27.220
去找找一些东西啊 根据不同的自定义属性的名字去找 那么这些自定义属性的名字呢 我们要考虑一点 为了以后程序

05:27.780 --> 05:36.820
不要弄我们的插件 升级方便 以后肯定要升级嘛 对吧 有可能要做出一些改动 有可能呢 以后呢 我们要改一下这个自定义属性的名字对吧

05:37.260 --> 05:46.020
有可能呢 以后还要让用户来配置这个自定义属性的名字 总之呢 我们这里呢 最好不要在这个代码里边 最好不要把他写死

05:46.940 --> 05:52.420
所以说呢 我们这里呢 专门来写一个对象啊 来保存这个自定义属性的配置 好 我们这里

05:53.780 --> 05:56.740
我们放这吧啊 把它放到这个韩 这个构造韩数的

05:57.500 --> 06:05.500
把它放到这个构造韩数的这个静态属性里边啊 这个构造韩数嘛 对吧 构造韩数韩数是对象 对吧 韩数它也是对象

06:06.500 --> 06:13.660
因此在韩数里边它也可以有属性啊 这个属性呢 是所有的对象通用的啊 功用的 因为它放到构造韩数里边去了

06:14.300 --> 06:20.740
因为所有的属性都一样嘛 无论是哪个表单 它的配置都是一样的 它不可能出现差异 所以说我们这里呢

06:21.900 --> 06:25.580
嗯 把它放到静 把它放到这吧 把它放到这 给它取个名字啊

06:26.620 --> 06:27.820
就是自定义属性

06:28.660 --> 06:32.140
自定义属性 我们给它取个名字 就是data

06:33.020 --> 06:37.750
config 表示自定义属性的名字

06:40.150 --> 06:49.550
自定义属性的名字 自定义属性的名字 好 有哪些自定义属性的 我们来看一下啊 一个看 我们之前写过这个文档的 好 一个是

06:51.750 --> 06:59.550
一个是什么呢 一个是错误的内名 对不对 默认情况下为field error 错误的内名 就是error

07:00.670 --> 07:03.310
error class 错误的内名

07:04.190 --> 07:15.270
好 错误的内名的话 哦 对了 对了 对了 他这里呢 还要配置错误的内名 这里还没有配置错误的内名啊 我这里还要配置错误的内名 错误的内名

07:16.790 --> 07:18.430
内名 默认为

07:19.870 --> 07:23.310
默认为field error 默认为这个

07:25.030 --> 07:31.750
field error 好 那么这里 我们还要配置这个东西啊 默就是错误的内名 那么比方说啊 我们这里配置

07:32.110 --> 07:38.190
error class 错误的内名 那么我们这里的错误的内名是 has error 对不对 has error 是这个内名

07:39.070 --> 07:47.550
那么我们刚才这里呢 是field error 是field error 所以说我们这里 刚才这里就是默认配置这里还要写一个东西啊 就错误的内名

07:48.310 --> 07:53.550
error class 错误的内名是啥呢 默认配置为这个

07:54.310 --> 08:05.190
错误的内名啊 如果你配置了就会把它覆盖 所以说 这里跟这里就没什么关系了啊 跟这里就没什么关系了 这里主要是配置的是啥呢 配置的是自定义属性的名称

08:06.270 --> 08:15.710
配置的主要是自定义属性的名称 比方说啊 这里 这些这些自定义属性 data field container 对吧 data field container 就是我们这里配置一下吧

08:16.310 --> 08:24.510
就是field container 这里的内名就叫什么呢 叫这个啊 叫自定义属性的名字叫这个 就把配置进来

08:24.830 --> 08:29.510
这样子的好处在于 将来如果我要改这个自定义属性的内名的话 我这里就直接把它改了

08:30.750 --> 08:38.990
没有意思吧 我们之后就用这个属性来获取 就不要把它写死了 写死了很危险的 到时候改的起来非常不方便 好 这是

08:39.990 --> 08:54.270
这个自断容器 就是表单域容器 表单自断容器的自定义属性名 是这个 好吧 好下一个内名啊 下一个内名

08:55.150 --> 08:59.230
好 data field 就是表单自断的自定义属性名字

08:59.550 --> 09:16.110
data field 这样子写吧 field 它的名字呢是data field 表示表单自断的自定义属性名 表单自断的自定义属性名 好 再来啊 再来

09:17.470 --> 09:26.110
再看啊 还有这个data field prop data field prop data field prop

09:27.070 --> 09:35.380
这个是要验证的表单自断的属性名

09:37.500 --> 09:45.900
表单自断自定义属性名 就是哪个是表单自断 然后分析了这两个啊 一个是这个表单自断 这个表单自断我要验证它的哪个属性 要验证的

09:46.220 --> 09:54.260
表单自断的属性名 要验证哪个属性 那么这个有个默认值 对吧 这个有个默认值 默认值能为value 就是我们把这些配置全部写好

09:54.860 --> 10:11.060
data field prop default 或者是default prop 默认的属性名 如果你没有提供这个自定属性的话 我要使用一个默认的属性名 默认的属性名是什么呢 默认的属性名是value

10:14.140 --> 10:22.460
要验证的表单自断默认的属性名 就把这些配置全部写好 我们之后就在这里去读啊 在这里去读

10:23.380 --> 10:31.940
好 再来啊 刚才我这样子写吧 把它写成一个啊 这样子文档注释 文档注释的好处在于我们之后呢 就不用去打太多注释了啊

10:32.500 --> 10:36.300
大家看一下啊 用了文档注释之后呢 我们这里 这样子写 看着

10:37.700 --> 10:39.660
好 这里 field 你看

10:41.100 --> 10:42.500
field

10:43.540 --> 10:48.020
content 啊 这里打不出来啊 打不出来 那它这里

10:49.260 --> 10:52.140
这个地方它没有提示啊 提示不出来

10:53.340 --> 10:56.020
所以说我们为什么后边要讲那个type script呢

10:57.100 --> 11:04.540
type script type script就这里面就不会遇到这样的问题了啊 因为介石是弱类型预言 它对智能体制的要求很高很难很难处理的

11:05.100 --> 11:10.300
啊 这里智能体制提示不出来 那没办法了啊 没办法 行吧啊行吧 那我就

11:11.060 --> 11:15.700
那就用之前的注释吧 之前那种注释的写法 用之前那种注释的写法

11:17.820 --> 11:20.140
知道什么意思就行了啊 那我们一会多打注释嘛

11:20.940 --> 11:27.140
啊 这是这一块啊 先不着急啊 先不着急 写剧的功能还找得很 我们先把这些配置全部搞定 有这么多配置

11:27.580 --> 11:30.180
还有就是要监听的事件啊 要监听的事件

11:31.700 --> 11:32.300
啊 这就是

11:33.700 --> 11:34.820
data field

11:36.020 --> 11:39.740
nation 啊 要监听的事件 它的制定属性名是这个

11:42.340 --> 11:47.020
要监听的事件的制定义属性名

11:48.020 --> 11:56.220
啊 它是这个 好 那么现在呢 我们这里需要 还要配置个啥 监听的默认事件 对吧 监听的默认事件

11:56.820 --> 11:57.500
data field

11:59.060 --> 12:01.500
default listen 啊 default listen 啊

12:02.740 --> 12:04.020
好 ok 配置一下啊

12:05.780 --> 12:07.540
啊 监听的默认事件是什么 change

12:09.740 --> 12:12.060
要监听的默认事件

12:13.020 --> 12:21.820
好 change 好 再来看一下啊 把这种全部配置好 以后呢 方便就是以后 方便我们可以很方便的进行修改

12:22.660 --> 12:30.620
好 要触发的验证啊 要触发的验证 默认情况下 这个东西为空对吧 默认情况下为空啊 这是我们要触发的验证

12:31.180 --> 12:31.780
好 来吧

12:32.820 --> 12:33.980
data field trigger

12:35.620 --> 12:38.620
啊 trigger 它的属性名呢 就是data field trigger

12:40.220 --> 12:40.900
啊 这里是

12:41.900 --> 12:46.340
要触发的啊 要额外触发的

12:47.740 --> 12:48.900
触发的验证制断

12:50.620 --> 12:57.340
那么它有默认值啊 它有默认值 默认是没有啊 default trigger 默认是没有一个空数组啊 一个空数组

12:57.740 --> 13:03.700
默认是没有 或者是一个控制 控制不算嘛 默认是没有 没有要触发的就是验证制断

13:03.700 --> 13:17.940
默认就是要触发 要额外触发的验证制断的默认值 就是不触发 不触发 一个空的

13:19.060 --> 13:31.460
好 然后继续啊 继续 还有什么呢 还有就是错误消息的元素啊 错误消息的元素啊 哪个错误就是制定属性

13:31.860 --> 13:36.100
通过这个制定属性来得到错误消息的元素 data field error

13:37.460 --> 13:41.940
error 那么默认的属性 制定属性名是啥 默认的制定属性名就是这个

13:44.460 --> 13:49.460
错误消息的元素 是哪个元素

13:50.380 --> 13:57.140
好 它有个默认值 默认值是寻找内名 对吧 寻找内名 内名为这个东西的 default error

13:57.860 --> 14:03.140
它的寻找的内名是 内名是什么 内名是这个

14:04.420 --> 14:17.780
内样式 error 默认寻找这个内样式 error 好了 就是错误消息的默认元素的内名为 error

14:18.380 --> 14:26.780
好 写完了 写完了 写完了 配置之后呢 我们以后呢 要经通过这个用户的配置

14:27.020 --> 14:33.540
以前呢 我们这里就是一些制定属性的配置 制定属性的名称 我们就挨在这里去找我们想要的东西

14:34.300 --> 14:40.020
好吧 ok 我们现在完成了配置 并且呢把配置保存到哪儿了 保存到了

14:40.580 --> 14:49.900
我们当前的一个属性里边 配置属性里边 那么接下来呢 我们先先来写啥呢 你会发现这里牵头万绪 根本你动不了手 你都不知道先写啥

14:50.740 --> 14:54.900
好 于是呢 往往遇到我们这这样子遇到一种复杂场景的情况下

14:55.660 --> 15:04.340
我们不知道从哪里下手 我们就给他开始给他照罗斯丁啊 这是我以前给他说过的啊 你是我比较喜欢的一种做法

15:04.940 --> 15:09.180
照什么罗斯丁呢 就是从一些最基本的功能开始来照一些罗斯丁

15:10.220 --> 15:19.100
好 那么比方说啊 举个例子 举个例子 我们这里呢 先照这么一个罗斯丁 因为我们也要验证的话 一定会有一个场景

15:19.780 --> 15:25.300
就是要得到这个数据 对吧 数据都得不到 怎么验证了 对不对 得到我要验证的数据

15:26.220 --> 15:29.340
一定会有这么一个场景 得到我要验证的数据

15:30.540 --> 15:33.900
好 那么我们怎么来得到我们要验证的数据呢 我们先把这个功能做了

15:34.900 --> 15:42.220
好 我们这里呢 肯定要有一个方法 对不对 要有一个方法 于是呢 我打这里呢 打算把这个方法写到哪呢 写到这里 它的圆形方法里边

15:43.020 --> 15:46.620
window myplunging for myleadar

15:48.380 --> 15:57.220
给它的圆形里边portal type 加上一个方法 什么方法呢 当然我这里可以不用window了啊 因为反正是全具对象嘛 对不对 也可以不用window了

15:59.020 --> 16:04.340
这前面已经复制了就不用window了 好 给它的圆形里边加一个方法 什么方法呢

16:05.340 --> 16:14.060
我们给它取个名字啊 叫做getfielddata

16:15.060 --> 16:21.300
得到一个表单域 就是一个表单制断的值数据 得到一个表单制断的数据

16:22.340 --> 16:27.580
好 那么这个方法你要给我传什么参数呢 要给我传什么东西呢 要不要传东西 我打个注是啊

16:28.580 --> 16:37.700
得到一个表单制断的数据 你肯定要给我传东西嘛 不然我怎么得到了 得到一个表单制断的数据

16:38.300 --> 16:46.860
好 那么我们这里写到圆形上 是不是到处都可以用了 对不对 到这里肯定有一个问题啊 就是这个对象能不能使用这个方法 肯定可以使用 因为写到圆形上的

16:47.300 --> 16:51.380
但是我们之前说的是 我们只希望向外部暴露这么两个方法

16:52.100 --> 17:04.020
啊 这个东西怎么办了 这个东西目前呢 可以可以做啊 但是不是很好办啊 不是很好办 你们要学到es6过后呢 它会出现这么一个东西 es6里面一个symbol

17:04.820 --> 17:10.500
symbol 有了这个东西过后呢 才能做一些私有的方法 私有的属性 就只能自己用 别的用不了

17:11.740 --> 17:20.740
到了es6才行啊 那现在呢我们不好办啊不好办 他怎么办了 只能暴露出去啊 暴露出去 那么外面呢 可以用 反正用也不会造成什么太大的影响

17:21.300 --> 17:37.340
得到一个表单制断的数据 那你是不是要给我一个表单制断名字啊 比方说我要得到账号的数据 账号你填的是啥 我得把数据拿到吧 数据都拿不到还说啥呢 对吧 我得把数据拿到 你得给我一个表单制断的名字啊 我才能去拿这个数据嘛 对不对

17:37.780 --> 17:47.700
好 要给我个啥 field name 就是field嘛 这个参数 我这里详细的打算注释啊 他是个支付创类型 field

17:48.700 --> 17:56.620
表示什么意思呢 表示表单制断名啊 制断名 他对应到啥 对应到页面上这个地方 他对应的是这个东西啊 对应的是这个东西

17:57.380 --> 18:00.060
比方说我要拿账号的数据 那么我们调用这个方法

18:01.580 --> 18:02.700
测试嘛啊 比方测试

18:03.980 --> 18:10.900
我们在页面上测试一下啊 这里能不能拿到这个东西了 我们就可以调用form 我们一会在一会在浏览器里边测试啊

18:11.620 --> 18:13.380
以后呢 我们在浏览器里边 我们就可以这样做

18:15.220 --> 18:17.780
form validator 诶 他怎么没出来呢

18:19.300 --> 18:21.620
这个浏览器诶 是是这个页面啊

18:22.660 --> 18:25.940
哦 这里写错了啊 写错了 缝啊 缝

18:27.500 --> 18:33.100
好 那么就是form validator 然后调用的是什么get field的data开面 调用这个

18:33.660 --> 18:39.100
把制断名称传进去 把制断名称传进去 比方说传locking id 那么我们就得到locking id的数据 对吧

18:39.140 --> 18:40.860
它返回locking id的数据 就这么简单

18:42.020 --> 18:47.180
先照螺丝钉啊 照到螺丝钉过后呢 我们再来慢慢慢慢去扩展它的功能

18:48.380 --> 18:56.340
好 给我一个表达制断名 我来去找 找他呢 找这个 找这个玩意啊 找这个 找他对应的数据 好 怎么找呢

18:57.540 --> 19:05.060
首先我们是不是要找到这个东西 通过表达制断名找到啥 找到他这个表达制断容器 对吧 把他的容器找到 对不对

19:05.740 --> 19:13.300
找到这个容器 然后再从容器里边找到我们想要的东西 好 首先 寻找表达制断容器

19:14.220 --> 19:18.780
首先寻找表达制断容器 好 甚至到这个东西 我们也可以专门来写个方法

19:19.740 --> 19:22.780
寻找表达制断容器 专门来写个方法来做这件事

19:23.740 --> 19:29.220
好 那么我们来吧 专门来写个方法myplunging foam 就尽量把拆分细一点

19:30.060 --> 19:32.020
因为这里面可能功能很多 而且呢

19:32.860 --> 19:40.100
他们功能有交叉 到时候可能这个功能又会 又会用到这个函数 所以说我们尽量把它写细一点 getfield container

19:41.300 --> 19:44.940
得到表达制断的容器 你看我们写着写着就会发现有新的方法出来了

19:47.660 --> 19:51.420
得到一个表达制断容器 容器

19:54.300 --> 19:59.580
好 换一个表达制断名进来 我给你得到一个表达制断容器 那这里怎么写 怎么写呢 这里

20:00.340 --> 20:09.340
怎么来得到表达制断容器呢 是不是 我们 我们要从表单里面去找 千万不要用document去找啊 不要找整个网页啊 因为你不知道这个网页里面有多少个表达

20:09.820 --> 20:15.340
你一定要通过什么去找 通过这个表达的动物对象 啊 一个动物对象去找 所以说怎么找呢

20:15.700 --> 20:16.940
defor 就是this

20:17.580 --> 20:24.420
opsy 里边 不是有个form 多么吗 不是有这个这么个东西吗 通过他去找他里边的crary selector

20:25.300 --> 20:30.580
啊 找他里边的什么了 找他里边的制定的属性啊 我这里这样子写

20:31.140 --> 20:38.300
找他里边的什么 制定属性哪个制定属性 是不是这里有配置的 对吧 就这个制定属性应该等于啥

20:38.940 --> 20:43.580
等于是不是等于这个 等于这个field 对吧 把field放进来 对不对

20:44.860 --> 20:48.260
把这个field放进来 我要去找这个东西啊 去找这个东西

20:48.980 --> 20:52.780
把我们表达制定属性 比方说这里是login id嘛 是不是这里要传login id 对不对

20:53.740 --> 21:01.380
把这个东西放进来 去找这个东西 找这个东西 好 那么前面这个名字呢 你不要把它写死 我刚刚当时写这个配置就是为了防止你把它写死

21:01.860 --> 21:09.260
到时候改起来不好改 那么这里呢 我们该写啥呢 写啥 写这个form validator 这个构造韩数的静态属性

21:09.660 --> 21:15.980
data config的什么field data field container 把这个属性的值放进来

21:16.740 --> 21:19.020
看一看 写通用插件一切都不一样了

21:20.020 --> 21:25.980
都要考虑一个通用性 好 这样子呢 我们得到之后啊 得到之后 直接把这个返回

21:26.700 --> 21:33.180
对吧 把它稍微封装一下啊 这个韩数稍微封装一下 好 于是呢 我们这里呢 就可以通过这个韩数 就是

21:34.220 --> 21:39.500
因为它在原型上吧 它是个原型方法 所以说我们这里就直接通过这个原型方法来得到它的容器了

21:40.300 --> 21:44.820
好 接下来我们就来写啊 那么这里container啊 就是field的container嘛

21:45.740 --> 21:49.820
尽量把名字命名标准点啊 因为这里我们写的东西不简单啊

21:49.820 --> 21:55.180
let's get field container 把field传进去 对吧 得到表达这段容器 好 咱们

21:55.900 --> 22:01.380
输出一下啊 field container 看能不能输出啊 能不能输出 保存 看一下啊 我们这里

22:01.820 --> 22:06.180
login id 啊 它说什么form validator is not defined

22:07.060 --> 22:09.940
form validator is not defined 它哪一行报错了 我看一下啊

22:10.820 --> 22:14.820
一点点来测试啊form validator 它说is not defined

22:15.940 --> 22:22.100
哦 它在这里边啊 它在买pronging里面啊 买pronging里面啊 在这里边啊 在这里边

22:23.620 --> 22:26.060
好 保存啊 看着啊

22:27.780 --> 22:33.220
好 是不是得到了 对吧 我给id传进去 是吧 把这个容器得到了 那比方说传一个什么 传一个密码

22:33.940 --> 22:38.580
password 好 你看一下 是不是得到这个 对吧 这个就把这个东西得到了

22:39.140 --> 22:44.980
好 我们总归要得到一个表单的容器 那么有没有可能没得到 一共传了乱七八糟的东西 是不是没得到 对不对

22:45.460 --> 22:52.260
没得到 我还能得到数据吗 肯定得不到数据了啊 得不到 表单这段都拿不到了 肯定拿不到数据了 所以说这里判断一下吧

22:52.740 --> 23:02.020
如果拿不到 拿不到这个东西 啊 拿不到这种东西怎么办呢 就反直接返回了啊 返回了 返回了 就是 嗯滴蛋的 拿不到 拿不到这个东西

23:02.980 --> 23:06.900
好 接下来如果是拿到了这个容器了 是不是要在容器里边继续找

23:07.460 --> 23:11.220
找啥 在容器里边继续找 是找表单预狱啊

23:11.940 --> 23:15.780
所以找这个东西 在容器里面我们拿数据嘛 对吧 是不是找这个东西

23:16.180 --> 23:19.380
包含有这个东西的关键字的这个东西 对不对 所以拿这个东西

23:20.020 --> 23:25.540
好 那么我们是不是又要写个函数 去拿这些东西 这些元素了 对不对

23:26.100 --> 23:30.340
去拿他的表单 制断元素啊 好 我们再来几个函数啊

23:31.060 --> 23:40.500
这叫一定要拆分系啊 一定要拆分系 form, vaginal, prototype, guess, field, element

23:43.110 --> 23:45.990
得到表单制断元素

23:50.070 --> 23:55.430
得到表单制断元素 你给我传一个什么呢 给我传一个干脆

23:55.990 --> 24:00.150
呃干脆呢 你也别传了啊 你别传了 你就把表单名称给我传进来去呢

24:00.230 --> 24:04.870
你还这么传吗 传一个表单的容器啊 给我传一个容器 干脆呢

24:05.670 --> 24:11.750
你把表单容器传给我 那么我来帮你通过这个容在容器里面去找 我要找着表单元素

24:12.550 --> 24:18.630
啊 这个是啊 这个参数是表单容器啊 表单预容器

24:20.390 --> 24:26.070
预容器 你把容器给我 我来给你在这个容器里面去找找什么找元素

24:26.870 --> 24:29.270
好 那么这里找到的元素是不是只有可能有一个

24:30.310 --> 24:35.590
那不一定的 我们之前说了多选框可能有多个对吧 可能有多个 所以说它不一定是一个啊

24:35.910 --> 24:42.070
它不一定是一个 它有可能会出现多个啊 有可能会出现多个 所以说你这里该怎么找呢 field content

24:42.070 --> 24:43.030
的query

24:44.150 --> 24:45.670
selecter all

24:46.470 --> 24:53.990
对吧 通过query,selecter all来这里 这样子来寻找 寻找多个表单元素啊 寻找多个表单元素

24:54.950 --> 24:58.710
好 那么这里寻找啥呢 寻找是不是有自定义属性

25:00.630 --> 25:08.630
寻找有自定义属性哪个呢 我们这里呢 这样子写啊 就是找到它里边的啥呢 它的data field就具有这个属性的

25:09.590 --> 25:12.390
元素 对吧 找到具有这个属性的元素

25:13.350 --> 25:20.390
好 这里是不是找到多个 有可能会找到多个对吧 也有可能会找到0个 它没有写嘛 没有写 它自己失误了 对不对 没有写找到0个

25:21.590 --> 25:25.910
总之呢 我们这样去寻找啊 但是这里不能写死啊 不能写死 是不是又要来

25:26.630 --> 25:33.190
拼接啥 拼接这个myplugin的data 就是form

25:33.910 --> 25:36.950
mydata data config data config

25:37.910 --> 25:42.310
拼接这个东西 拼接它里边的哪个属性的data field

25:43.110 --> 25:47.030
拼接这个属性啊 因为这里可以配置的嘛 对吧 将来可以配置的

25:47.670 --> 25:51.190
好 这样子呢 我们就找到了一堆元素啊 找到了一堆元素

25:52.150 --> 25:55.110
animate else

25:55.830 --> 25:59.670
好 然后呢 我们这里把这个元素的宿主返回

26:00.950 --> 26:02.230
把这个元素的宿主返回

26:03.350 --> 26:09.110
好了 接下来呢 剩下的事情交给它了啊 那么它这里呢 得到表单容器

26:09.110 --> 26:13.350
然后得到容器之后呢 又得通过容器来得到它里边的元素啊 else

26:14.230 --> 26:17.910
通过找到它里边的元素啊 this get field

26:18.870 --> 26:25.430
animate 找到它里边的元素 好 元素呢 我们这种要传个参数的啊 参数是什么 参数是容器

26:26.710 --> 26:31.110
好 为了让为了测试啊 为了测试这里边的效果 我会在这里边呢

26:31.430 --> 26:36.390
再写一些就是复选框啊 再写一些复选框的元素 为了测试嘛 对不对

26:36.710 --> 26:39.270
好 我们这里复制一个吧 复制一个 比方说

26:41.430 --> 26:47.670
爱好 爱好 然后呢 这里又不是闷框了啊 就是复选框 切个boss

26:48.150 --> 26:53.670
啊 切个boss啊 这里呢 给他一个value值嘛 value值啊 就是

26:54.630 --> 26:59.670
复制boss啊 复制boss得到它的value值 然后呢 这是足球啊 足球

27:00.310 --> 27:02.390
啊 我们用个label把包起来吧 label

27:03.350 --> 27:05.510
就是怎么样的元素结构其实无所谓的啊

27:06.390 --> 27:10.390
因为我们是用这个自定义属性来标记的 所以说 怎么样的元素是无所谓的

27:10.790 --> 27:12.950
足球啊 蓝球

27:14.550 --> 27:17.430
蓝球 然后呢 是音乐

27:18.230 --> 27:18.710
音乐

27:21.020 --> 27:22.620
然后是电影

27:23.500 --> 27:24.380
然后是其他

27:25.340 --> 27:31.420
其他 随便写个吧 随便写几个 好 给他value值呢 重新复制 复制一下啊 给他value值重新复制一下

27:31.980 --> 27:35.420
复制为 这个是蓝球boss kids ball

27:36.380 --> 27:37.500
啊 然后这个是music

27:38.540 --> 27:40.060
这个是电影movie

27:41.260 --> 27:42.540
啊 其他other

27:45.020 --> 27:46.380
保存啊 我们来看一下页面吧

27:47.340 --> 27:51.340
因为我们的样式没有考虑多选框啊 样式没有考虑多选框 行吧

27:51.580 --> 27:55.980
那我们把样式稍微热设置一下吧 看起来太受不了了啊 有点受不了

27:56.620 --> 28:02.060
嗯 音符者我们这里 给他加上一个这个嘛 加上一个属性选择器啊

28:02.620 --> 28:05.020
type 等于 text

28:05.980 --> 28:06.620
或者是

28:07.980 --> 28:08.300
都好

28:09.420 --> 28:10.700
type 呢 等于 password

28:12.460 --> 28:15.260
啊 加上一个啊 原来就是属性

28:15.980 --> 28:19.100
啊 这里呢 加上一个属性啊 type 等于 text

28:20.220 --> 28:22.940
啊 这个算了算了 focus 又不管了啊 focus 又不管了

28:23.580 --> 28:25.580
还有什么 差不多了啊 看一下啊

28:26.700 --> 28:30.140
好 行了啊行了 那么这里有多选框了对吧 有多选框了

28:31.020 --> 28:36.140
好 边框不管啊 这些我们不重要 样式不是重点啊 样我们是重点是这个介式

28:37.020 --> 28:40.140
好了 现在呢 我们 哎好 这里还要设置一下那个

28:41.420 --> 28:43.260
还要设置一下这个 loves

28:44.220 --> 28:44.540
爱好

28:45.260 --> 28:50.940
对吧 要考虑多选方的情况 当然下个列表呢 你也得考虑啊 下个列表啊 以后再说吧啊 以后再说

28:51.900 --> 28:57.180
好 然后这边呢 我们得到所有的元素对吧 所有的元素啊 咱们把这个元素输出

28:57.260 --> 29:01.740
我们看一下得到的元素这么准确 我们咱们写慢一点啊 因为这个地方有点复杂

29:02.220 --> 29:06.220
好 我们这里呢 来得到什么 password 看一下

29:06.940 --> 29:11.260
对吧 得到的是一个数组对不对 一个数组 一个音符者啊 一个音符者的

29:11.740 --> 29:15.020
文本框 然后呢 再来得到什么 loves

29:16.060 --> 29:23.100
得到就是爱好 然后你看是不是五个 五个音符者对吧 你看一面上 五个音符者啊 所以都得到 对不对

29:23.340 --> 29:29.740
我们要验证的数据都在这里面啊 都在这里面 好 接下来我们要组合数据了啊 要组合数据

29:31.180 --> 29:33.260
好 怎么来组合数据呢 是这样子

29:34.700 --> 29:39.260
我们要去循环啊 我们要建立一个数组啊 建立一个数组data

29:39.900 --> 29:45.420
建一个数据 因为它里边肯定它是一个数组嘛 对吧 我们要把它每一个元素的数据拿出来

29:45.900 --> 29:50.780
要把它里边的每一个元素的数据拿出来 把它放到数组里边啊 这里是

29:51.660 --> 30:01.020
要验证的表单元素 好 这里是数据数据 把数据数据数据

30:01.500 --> 30:04.460
我们把每一个元素的数据放进来 放到这里边来

30:05.420 --> 30:09.500
好 然后是不是循环了 对吧 要循环 好 来吧 循环吧

30:09.900 --> 30:12.220
l是for一起 用这种方式来循环啊 我

30:13.420 --> 30:15.660
放个型 element

30:16.620 --> 30:22.460
aliment 好 每一个呢 循环数组 每一项呢 它就是一个元素 对不对 是一个元素

30:22.860 --> 30:24.780
好 元素这里边

30:25.740 --> 30:29.100
它是不是要判断各种情况 对不对 要判断各种情况

30:29.500 --> 30:33.500
就是我们要取这个元素的是什么 先把这个元素白柳纸取出来嘛

30:33.900 --> 30:38.460
咱们先把这个元素的value 纸取出来 但是呢 你要知道 它不一定取的是value

30:39.020 --> 30:42.860
因为这个东西是可以配置的 我们默认情况下是取的value 对吧

30:43.180 --> 30:46.940
但是呢 实际上它是有可能 它要经过这个配置 它配置的的话

30:47.580 --> 30:51.740
我们要去取它配置的结果 对吧 我们要去取它配置的结果

30:52.140 --> 30:56.620
就是你这里不是可以通过它的配置吗 可以通过这个制定属性 data field of probe

30:56.940 --> 31:00.060
你要取这个元素的哪一个属性值来进行验证

31:00.700 --> 31:02.540
因此呢 我要把这个东西堵塗出来 对不对

31:02.860 --> 31:06.060
好 那么我们首先判断啥 判断这个元素啊

31:06.860 --> 31:10.140
它的data set里边 我们制定属性用data set来获取嘛 对吧

31:10.780 --> 31:13.900
data set里边有没有这个制定属性 哪个制定属性

31:14.780 --> 31:15.260
是不是这个

31:17.020 --> 31:19.820
对对对对 这个啊 field of probe 对不对

31:20.380 --> 31:23.100
field of probe 好 那么这里呢 我们就不能这样的配置的啊

31:23.660 --> 31:25.740
这个地方就不能这样的配置的 应该怎么配置的

31:26.060 --> 31:29.340
就这样子 field of probe 把它写成属性的格式

31:29.740 --> 31:34.220
你要这意思吧 因为为什么 因为如果用这种格式的话 我们还在处理

31:34.460 --> 31:38.300
要把这个data 横杆去掉 要把这个什么这个东西去掉 对不对

31:38.540 --> 31:41.900
这个东西去掉 变成这个样子 然后还不如直接配置这个样子

31:42.140 --> 31:44.700
因为我们要一会要读的时候是不是读这个读这个东西啊

31:44.940 --> 31:45.740
是不是读这个东西

31:45.980 --> 31:51.100
因为短横线命名法到了GS里面会变成小陀封命名法 对吧

31:52.380 --> 31:54.940
所以说这一块的 这一块我们之前没想到

31:55.180 --> 31:56.220
所以说这里稍微处理一下

31:56.380 --> 32:00.780
但是我们之前的这样子写的话 就把它写死了 就把它写死了

32:01.020 --> 32:04.380
我们注意好了 是通过这个属性值

32:05.180 --> 32:07.180
通过这个属性值

32:07.740 --> 32:10.060
把这个东西读出来 作为它的属性名

32:10.300 --> 32:11.580
听懂这个意思吗

32:11.820 --> 32:15.420
我们把这个属性值读出来 读出来这个制服串

32:15.660 --> 32:17.980
把这个制服串作为它的属性名

32:18.220 --> 32:19.260
因为这因此呢 这里是动态的

32:19.500 --> 32:20.540
要用个属性表达式

32:20.780 --> 32:24.380
这个属性的名字是啥呢 这个属性的名字来自于

32:24.380 --> 32:29.500
MapFunding,ForeignVariator,DataConfig里面的什么

32:29.740 --> 32:33.340
叫做DataFieldProb

32:33.580 --> 32:37.180
取这个 取这个 取这个玩意儿

32:38.220 --> 32:41.660
好 那么看一下这个东西 有没有值 取出来的东西有没有

32:42.060 --> 32:45.900
因为它有可能没有配置这个属性 对吧 有可能是没有配置这个属性的

32:46.140 --> 32:48.700
好 来得到它的属性值

32:49.980 --> 32:51.500
它的属性值

32:52.220 --> 32:55.820
好 有没有可能它没有了 它没有配置呢 有可能它没有配置 对吧

32:56.060 --> 32:57.100
它没有配置这个属性嘛

32:57.340 --> 32:58.620
所以说我们判断一下啊

32:58.860 --> 33:00.620
如果对这个东西它没有配置的话

33:01.900 --> 33:03.180
它没有配置这个属性的话

33:03.980 --> 33:06.300
那么怎么样呢 就或者是这样的水吧

33:06.540 --> 33:08.620
vow 等于什么 undefend

33:08.860 --> 33:09.580
undefend

33:11.420 --> 33:14.620
明白这个意思吧 或者是我们先 如果代码太长了

33:14.780 --> 33:16.620
太长了 我们这样吧 这样

33:18.060 --> 33:19.500
我们这里problet

33:20.460 --> 33:21.580
得到它的属性名

33:21.820 --> 33:22.940
得到属性名

33:23.660 --> 33:25.260
得到属性名

33:25.580 --> 33:28.460
好 然后通过属性名去获取 对吧

33:28.620 --> 33:29.740
通过属性名去获取

33:30.220 --> 33:32.780
当然这样的我们也可以这样的判断啊 也可以这样的判断

33:32.940 --> 33:34.220
判断一下这个属性名

33:35.340 --> 33:36.860
是不是在这个对象里边

33:37.020 --> 33:39.100
是不是在这个Element

33:39.340 --> 33:41.260
DataSet里边也可以这样的判断

33:41.900 --> 33:43.420
如果它不在这个对象里边

33:43.420 --> 33:45.340
我们把它的属性名是用默认值

33:46.860 --> 33:47.980
好 我们这样的判断吧

33:48.620 --> 33:51.420
如果这个属性名它不在这个对象里边

33:51.420 --> 33:52.700
这个对象里面没有这个属性

33:52.700 --> 33:55.180
说明说明什么 说明用户没有配置这个东西

33:55.180 --> 33:55.900
没有配置东西

33:55.900 --> 33:57.580
我们是不是有默认值读它在

33:57.580 --> 33:59.580
读Value对吧 读Value

33:59.580 --> 34:01.900
因此呢 我们把这个属性名呢 就重新复制

34:02.220 --> 34:03.420
重新复制为啥

34:03.420 --> 34:05.420
mypng for mydata

34:06.620 --> 34:08.060
然后data.config

34:08.860 --> 34:10.780
然后使用什么 使用那个

34:12.700 --> 34:13.260
这个叫什么

34:15.580 --> 34:17.180
data.field default prop

34:18.940 --> 34:22.700
这里是使用默认属性名

34:23.820 --> 34:25.340
好了 我们就使用bidata

34:25.660 --> 34:27.100
然后再读出它的值

34:27.100 --> 34:29.180
对吧 我们就可以把值直接获取到了

34:29.180 --> 34:30.460
直接获取到它的值了

34:31.420 --> 34:32.460
值怎么获取呢

34:33.180 --> 34:34.940
属性名

34:34.940 --> 34:36.140
还不行啊

34:37.100 --> 34:38.460
我看一下 我看一下

34:39.100 --> 34:40.780
这是得到的

34:40.780 --> 34:41.820
这个得到的是

34:43.020 --> 34:43.900
看一下

34:45.180 --> 34:46.060
我看一下

34:46.060 --> 34:47.740
如果它有值

34:47.820 --> 34:48.940
这里写的还不太对

34:50.780 --> 34:52.220
如果在这个对象中

34:52.780 --> 34:54.220
在这个对象中的话

34:54.220 --> 34:55.420
那么它的属性名

34:56.300 --> 34:57.580
属性名呢

34:57.580 --> 35:00.140
应该等于animate data set

35:01.980 --> 35:02.620
data set

35:03.340 --> 35:05.180
Hunger prop.net

35:05.180 --> 35:06.540
应该是这么个意思啊

35:06.540 --> 35:07.820
应该是这么个意思

35:07.820 --> 35:10.620
我们要把它的属性的名字得到

35:10.620 --> 35:11.100
对不对

35:11.100 --> 35:13.020
因为这里面这个自定义属性里边

35:13.020 --> 35:14.620
它配置的是属性名字

35:14.620 --> 35:15.340
就这里啊

35:15.340 --> 35:16.460
就data.field

35:17.020 --> 35:18.620
proper

35:18.620 --> 35:20.220
这边配置的是属性的名字

35:20.220 --> 35:21.580
还不是属性值

35:21.580 --> 35:23.260
它配置的是属性的名字

35:23.260 --> 35:24.620
如果有这个东西的话

35:24.620 --> 35:26.300
我们把这个属性的名字读出来

35:26.940 --> 35:29.100
我要取的是哪个属性的名字

35:29.100 --> 35:30.540
把这个属性的名字读出来

35:30.540 --> 35:31.820
应该是这么个意思

35:31.820 --> 35:32.620
这里写法

35:32.620 --> 35:33.660
刚才有问题啊

35:33.660 --> 35:34.300
刚才有问题

35:35.580 --> 35:37.740
好 如果这个属性名在这里存在的话

35:37.740 --> 35:38.620
在存在的话

35:38.620 --> 35:39.900
就是这个自定义属性

35:39.900 --> 35:40.780
你配置了的话

35:41.580 --> 35:42.780
得到自定义属性名

35:42.780 --> 35:43.660
这是

35:43.660 --> 35:44.620
自定义属性名

35:45.500 --> 35:45.980
然后呢

35:45.980 --> 35:46.860
我们就怎么样呢

35:46.860 --> 35:49.020
我们就把这个属性的名字取出来

35:49.020 --> 35:49.980
你配置了自定义属性

35:49.980 --> 35:51.900
我们把属性的名字取出来

35:51.900 --> 35:52.220
好

35:52.220 --> 35:53.420
如果你没有配置的话

35:53.420 --> 35:55.020
那么我们就使用默认的属性名

35:55.660 --> 35:57.420
这里要这样子判断一下对了的

35:58.300 --> 35:58.460
好

35:58.460 --> 35:59.660
这一块有点糟啊

35:59.660 --> 36:00.140
有点糟

36:01.500 --> 36:03.740
就是我要先得到自定义的属性名

36:04.540 --> 36:06.940
就自定义属性名在这里面

36:07.900 --> 36:09.500
先得到自定义属的属性名

36:09.500 --> 36:12.060
看一下你有没有配置自定义属性名

36:12.060 --> 36:13.580
如果你有配置的话

36:13.660 --> 36:15.820
那么我们通过这个自定义属性的名字

36:15.820 --> 36:17.980
把你要读的属性的名字

36:17.980 --> 36:19.660
就元素的属性名字得拿到

36:20.780 --> 36:20.940
好

36:20.940 --> 36:22.140
如果你没有配置的话

36:22.140 --> 36:24.140
元素的属性名字就从这里读

36:24.140 --> 36:25.020
就是value对吧

36:25.020 --> 36:25.580
就是value

36:26.460 --> 36:26.860
好

36:26.860 --> 36:28.140
这样子的经过这段代码

36:28.140 --> 36:31.420
我就把元素的属性名字什么拿到了

36:31.420 --> 36:33.020
就把元素的属性名字拿到了

36:33.020 --> 36:34.460
我们再通过这个属性的名字

36:34.460 --> 36:35.420
去取出属性字

36:36.620 --> 36:38.140
通过不是这样的取了

36:38.860 --> 36:39.260
这样的去

36:39.900 --> 36:43.020
通过元素的属性名

36:43.100 --> 36:44.540
取出属性字

36:45.420 --> 36:46.540
把属性的名字取出来

36:47.660 --> 36:47.740
好

36:47.740 --> 36:48.620
看一下吧

36:48.620 --> 36:49.580
咱们来看一下

36:49.580 --> 36:52.300
把属性的名字直接加到data里面

36:53.100 --> 36:53.500
看一下吧

36:55.100 --> 36:56.940
cancel log

36:58.620 --> 36:59.500
保存

36:59.500 --> 37:01.980
一边cancel log就是data

37:03.260 --> 37:04.060
保存

37:04.060 --> 37:04.620
看一下吧

37:05.980 --> 37:08.300
拿到navs里面的所有的名字

37:08.300 --> 37:08.700
看到没有

37:08.700 --> 37:09.260
是不是拿到了

37:09.260 --> 37:09.900
全部拿到了

37:10.700 --> 37:10.940
好

37:10.940 --> 37:12.940
如果我其中一个配置的是这样子

37:13.580 --> 37:15.020
配置的是这样子的切个车

37:15.020 --> 37:16.140
配置的是这个东西

37:16.140 --> 37:17.420
那你要读的属性名字是什么

37:17.420 --> 37:18.060
切个车

37:18.060 --> 37:18.860
读的是这个属性

37:19.580 --> 37:20.060
你看一下

37:20.060 --> 37:20.940
第一个就是force

37:20.940 --> 37:21.820
表示没有选中

37:21.820 --> 37:23.500
你看我读的属性就是变了

37:23.500 --> 37:23.660
对吧

37:23.660 --> 37:24.460
就非常的灵活

37:24.460 --> 37:25.900
我们到时候配置就完事了

37:25.900 --> 37:27.020
你要读什么属性

37:27.020 --> 37:28.700
我就给你什么属性

37:28.700 --> 37:29.340
比方说

37:29.340 --> 37:30.540
我这里还有一个emg

37:30.540 --> 37:31.580
还可以图片元素

37:32.140 --> 37:34.220
它也是一个什么data field

37:34.220 --> 37:35.580
它也是个data field

37:35.580 --> 37:35.980
并且呢

37:35.980 --> 37:37.340
我刚配置了一下

37:37.340 --> 37:38.380
它就不是value了

37:38.380 --> 37:39.100
肯定不是value了

37:39.100 --> 37:39.740
对吧

37:39.820 --> 37:41.980
那读的属性的名字是什么

37:41.980 --> 37:42.940
src

37:42.940 --> 37:43.900
读的是src

37:43.900 --> 37:45.660
src我们随便写一个吧

37:45.660 --> 37:46.300
随便写一个

37:47.100 --> 37:47.980
哈士奇又来了

37:51.420 --> 37:51.980
就这个嘛

37:52.700 --> 37:53.580
复制图片地址

37:55.610 --> 37:56.170
看一下

37:56.810 --> 37:57.210
保存

37:58.890 --> 37:59.690
然后那么这里

37:59.690 --> 38:00.330
拿到

38:00.330 --> 38:01.770
你看是不是拿到属性指示

38:01.770 --> 38:02.570
拿到这个东西

38:02.570 --> 38:02.810
对吧

38:03.370 --> 38:04.970
就是我们可以拿到任何东西

38:04.970 --> 38:06.330
可以拿到任何东西

38:06.330 --> 38:07.130
就这么个意思

38:11.400 --> 38:12.600
当然这里不是切个车

38:12.760 --> 38:13.480
不是切个车

38:14.440 --> 38:15.240
好看一下啊

38:17.160 --> 38:17.400
好

38:17.400 --> 38:17.800
现在呢

38:17.800 --> 38:18.840
我们可以通过这种

38:18.840 --> 38:20.360
把这个输组是不是搞定了

38:20.360 --> 38:21.960
但是这里有个情况

38:21.960 --> 38:22.920
啊有个情况

38:23.240 --> 38:24.920
按照国际标准

38:24.920 --> 38:26.520
哈说的夸张一点

38:26.520 --> 38:27.880
按照国际标准

38:29.400 --> 38:31.960
多选框和单选框

38:31.960 --> 38:32.280
啊

38:32.280 --> 38:33.960
无论是你是多选框也好

38:33.960 --> 38:35.400
还是单选框也好

38:35.880 --> 38:37.560
我只会取什么呢

38:37.560 --> 38:39.400
只会取你选中的

38:40.040 --> 38:41.720
不会取你没有选中的

38:42.280 --> 38:43.320
没有选中的

38:43.320 --> 38:45.000
不在我们考虑范围之列

38:45.880 --> 38:46.920
你知道这意思吧

38:46.920 --> 38:48.360
我们只会看你

38:48.360 --> 38:48.600
啊

38:48.600 --> 38:49.160
些情况

38:49.160 --> 38:50.840
就只会看你选中的

38:50.840 --> 38:52.280
不会看你没有选中的

38:53.000 --> 38:53.480
好

38:53.480 --> 38:54.680
根据这个情况呢

38:54.680 --> 38:56.200
我们要单独来判断一下

38:56.200 --> 38:57.800
多选框和负选框的情况

38:58.360 --> 38:58.600
啊

38:58.600 --> 39:01.000
如果这个 element 是一个单选框

39:01.000 --> 39:02.360
或者是负选框的话

39:02.360 --> 39:03.880
那么我们呢

39:03.880 --> 39:05.080
要判断一下

39:05.080 --> 39:06.520
你有没有选中

39:06.520 --> 39:07.880
你选中了过后呢

39:07.880 --> 39:09.480
我再把它加到输组里面

39:09.480 --> 39:10.760
如果你没有选中的话

39:10.840 --> 39:12.360
我是不会加的

39:12.360 --> 39:14.360
所以说我们这里要单独处理

39:14.360 --> 39:15.720
单独处理

39:15.720 --> 39:17.800
单选和负选的情况

39:19.640 --> 39:20.920
就是看一下你这个负选框

39:20.920 --> 39:22.520
单选框有没有被选中

39:22.520 --> 39:22.760
好

39:22.760 --> 39:24.760
咱们来判断一下啊

39:24.760 --> 39:25.160
判断一下

39:26.440 --> 39:26.680
好

39:26.680 --> 39:27.160
判断

39:28.280 --> 39:31.880
如果你这个 element 是单选框

39:31.880 --> 39:32.920
或者是负选框

39:32.920 --> 39:33.800
那怎么来判断

39:33.800 --> 39:35.320
它是单选框还是负选框呢

39:35.320 --> 39:36.040
怎么来判断呢

39:37.080 --> 39:37.160
啊

39:37.160 --> 39:37.800
怎么来判断呢

39:38.760 --> 39:39.080
看着

39:39.800 --> 39:41.320
get a field

39:43.320 --> 39:44.120
container

39:44.120 --> 39:45.080
animate

39:45.080 --> 39:45.960
animate

39:45.960 --> 39:46.360
nogs

39:46.360 --> 39:47.160
yeah

39:47.160 --> 39:48.360
what

39:48.360 --> 39:49.160
container

39:49.160 --> 39:49.480
oh

39:49.480 --> 39:51.320
oh 这里对

39:51.320 --> 39:53.480
我们这样得到吧

39:53.480 --> 39:55.240
get element

39:55.240 --> 39:56.440
container

39:56.440 --> 39:57.400
container

39:57.400 --> 39:59.560
啊或者这样吧

39:59.560 --> 39:59.960
这样吧

39:59.960 --> 40:01.160
我们来得到一个就是

40:01.160 --> 40:02.120
input

40:02.120 --> 40:03.240
document

40:03.240 --> 40:04.200
query

40:04.200 --> 40:04.680
snegator

40:04.680 --> 40:06.120
来看一下吧

40:06.120 --> 40:08.280
它是个input的元素

40:08.440 --> 40:10.280
然后它的type 等于

40:10.280 --> 40:11.480
checkbox

40:11.480 --> 40:12.280
checkbox

40:13.160 --> 40:13.560
看一下

40:14.360 --> 40:15.240
我们如何来判断

40:15.240 --> 40:16.120
它是不是单选了

40:16.120 --> 40:18.120
其实刚刚搞那么复杂呢

40:18.120 --> 40:20.040
我是想用那个对象的名字来判断

40:20.040 --> 40:21.960
我是想用那个对象的名字来判断

40:21.960 --> 40:24.760
就是这个对象的构造函数那一型来判断

40:24.760 --> 40:25.720
其实也没有那么复杂

40:25.720 --> 40:27.400
我们直接判断 type 属性不就完了吗

40:27.400 --> 40:28.040
对不对

40:28.040 --> 40:29.960
直接判断 type 属性就完事了

40:29.960 --> 40:30.600
那我们行吧

40:30.600 --> 40:32.040
我们直接判断 type 属性

40:32.040 --> 40:33.320
如果这个 element 的 type

40:34.200 --> 40:35.960
type 属性等于那啥

40:35.960 --> 40:37.640
等于那单 checkbox

40:39.240 --> 40:40.280
或者是

40:41.640 --> 40:42.440
这个 element

40:43.080 --> 40:45.640
element 它的 type 属性等于那

40:46.280 --> 40:46.760
radio

40:48.680 --> 40:50.920
单选和复选的情况

40:50.920 --> 40:51.320
对吧

40:51.320 --> 40:52.680
单选和复选的情况

40:53.560 --> 40:55.400
那么像这种情况下呢

40:55.400 --> 40:56.440
我们只会

40:57.400 --> 40:58.520
只判断

40:58.520 --> 40:59.800
如果你选中了

40:59.800 --> 41:00.840
我才加进去

41:00.840 --> 41:01.560
没有选中

41:01.560 --> 41:02.360
我不会加的

41:02.920 --> 41:03.800
我不会加的

41:03.800 --> 41:04.040
好

41:04.040 --> 41:05.080
判断一下

41:05.080 --> 41:06.280
如果你选中了

41:06.280 --> 41:06.680
check

41:07.080 --> 41:08.120
表示选中了

41:08.120 --> 41:09.160
如果你选中了

41:09.160 --> 41:11.480
我才会把你的属性值加进去

41:12.520 --> 41:13.560
l 我就不会加了

41:13.560 --> 41:14.200
就不处理了

41:14.920 --> 41:15.080
好

41:15.080 --> 41:16.440
如果你不是单选框

41:16.440 --> 41:17.560
也不是复选框的话

41:17.560 --> 41:18.520
那么我一定加

41:18.520 --> 41:19.480
一定加这个属性

41:20.120 --> 41:20.920
是这么回事

41:21.640 --> 41:21.800
好

41:21.800 --> 41:22.840
我们现在再来看

41:22.840 --> 41:23.560
再来看这个数据

41:24.440 --> 41:24.760
看一下

41:25.320 --> 41:25.880
我们这里呢

41:26.840 --> 41:27.320
拿到这个

41:28.760 --> 41:29.960
data 拿到数据

41:29.960 --> 41:30.280
你看一下

41:30.280 --> 41:30.920
是不是空的

41:30.920 --> 41:31.320
对吧

41:31.320 --> 41:32.680
那如果我选中两个

41:32.680 --> 41:33.400
你看一下

41:33.400 --> 41:35.400
拿到是不是basketball music

41:35.400 --> 41:35.640
对吧

41:36.440 --> 41:36.680
看没

41:37.560 --> 41:39.080
我们单选框和复选框

41:39.080 --> 41:40.040
要单独处理

41:40.040 --> 41:41.000
其他的无所谓

41:41.000 --> 41:42.040
其他的无所谓

41:42.040 --> 41:44.040
单选和复选框得单独处理

41:45.240 --> 41:45.400
好

41:45.400 --> 41:46.200
都是这一块

41:46.200 --> 41:46.760
这一块

41:48.520 --> 41:48.760
好

41:48.760 --> 41:49.320
接下来呢

41:49.320 --> 41:50.520
我们拿到这个数据过后

41:51.080 --> 41:52.840
还要进行进一步处理

41:52.840 --> 41:54.600
有没有可能的数据是空的

41:54.600 --> 41:55.640
有没有可能

41:55.640 --> 41:56.360
对吧

41:56.360 --> 41:57.560
有没有可能这个数据是空的

41:58.360 --> 41:59.240
空的数据

41:59.240 --> 42:00.120
那空的数据呢

42:00.120 --> 42:01.400
我就不要返回数据了

42:01.400 --> 42:02.840
免得后边不好处理

42:02.840 --> 42:03.880
我返回啥呢

42:03.880 --> 42:05.160
返回undefend

42:05.160 --> 42:06.360
或者是返回now

42:06.440 --> 42:07.160
都行

42:07.160 --> 42:07.880
都行

42:07.880 --> 42:09.000
如果你没有东西

42:09.000 --> 42:09.720
你没有东西

42:09.720 --> 42:10.600
这个数据是空的

42:10.600 --> 42:11.880
那么我就返回一个now

42:12.440 --> 42:13.400
你要这个意思吧

42:13.400 --> 42:13.640
好

42:13.640 --> 42:15.480
那你说文闷框会不会是空的呢

42:15.480 --> 42:16.680
文闷框绝对不是空的

42:16.680 --> 42:18.440
比方说我们看一下locking id

42:18.440 --> 42:19.640
去拿locking id的

42:20.440 --> 42:22.120
去拿locking id的数据

42:22.120 --> 42:22.680
你会拿到

42:22.680 --> 42:23.880
有这个数据有一下

42:23.880 --> 42:24.440
看到没

42:24.440 --> 42:25.400
有一下

42:25.400 --> 42:26.360
就是个空之不串嘛

42:26.360 --> 42:26.680
对不对

42:26.680 --> 42:27.400
就是空之不串

42:28.520 --> 42:29.560
你要这个意思吧

42:29.560 --> 42:30.040
所以说呢

42:30.040 --> 42:32.040
如果这个数据是空的

42:32.040 --> 42:32.760
表示呢

42:32.760 --> 42:34.840
我们没有拿到任何数据

42:34.840 --> 42:35.560
文闷框啊

42:36.120 --> 42:37.640
下来表都不会拿到空的

42:38.280 --> 42:40.040
通常是单选框和多选框

42:40.040 --> 42:41.000
它会拿到空的

42:41.000 --> 42:43.320
或者是你这里面根本压根就没有写任何东西

42:43.320 --> 42:45.160
就没有表单元素

42:45.160 --> 42:46.280
或者是有表单元素

42:46.280 --> 42:47.720
你没有给我做这个标记

42:47.720 --> 42:48.920
是不是都会拿到空的

42:48.920 --> 42:50.520
拿到空的的话我就给你返回

42:51.320 --> 42:53.160
如果判断一下data是the length

42:54.200 --> 42:54.680
等于你

42:55.400 --> 42:56.600
输出没有东西

42:56.600 --> 42:57.560
那么返回啥

42:57.560 --> 42:58.920
返回undefend

42:58.920 --> 42:59.880
或者是返回now

42:59.880 --> 43:00.520
随便

43:00.520 --> 43:01.080
返回now

43:01.800 --> 43:02.600
打个标注吧

43:03.560 --> 43:05.960
如果没有拿到

43:05.960 --> 43:08.760
拿到任何表单数据

43:08.760 --> 43:10.920
这返回now

43:10.920 --> 43:11.960
返回now

43:13.080 --> 43:13.560
好

43:13.560 --> 43:15.960
那么还有一种情况就是拿到了表单数据

43:15.960 --> 43:17.720
但是拿到只有一个表单数据

43:17.720 --> 43:19.400
只有一个表单数据

43:20.520 --> 43:23.000
那么如果你只有一个表单数据的话

43:23.000 --> 43:25.160
如果你只有一个表单数据的话

43:25.160 --> 43:26.440
那么这种情况下

43:26.440 --> 43:27.480
我们看一下啊

43:27.480 --> 43:28.360
把这折起来

43:29.240 --> 43:31.160
如果你只有一个表单数据的话

43:32.120 --> 43:32.440
那么

43:33.160 --> 43:33.880
我给你

43:33.880 --> 43:35.560
直接把这一个数据返回就行了

43:35.560 --> 43:36.920
比方说我得到文闷框

43:36.920 --> 43:37.960
我得到文闷框的数据

43:37.960 --> 43:39.400
给我个数主干嘛呢

43:39.400 --> 43:40.040
我疯了啊

43:40.040 --> 43:40.760
我要这个数主

43:41.720 --> 43:42.920
我要干嘛呢

43:42.920 --> 43:43.800
对不对

43:43.800 --> 43:44.520
也说这里呢

43:44.520 --> 43:46.040
如果这个表单预议下边

43:46.040 --> 43:47.400
只有一个表单元数

43:47.400 --> 43:49.720
就是你指标系的一个表单元数

43:49.720 --> 43:51.880
我们只需要验证一个表单元数就行了

43:51.880 --> 43:53.080
那么我就直接给你返回

43:53.080 --> 43:54.280
数主的第一项就完事了

43:54.920 --> 43:56.440
返回数主的第一项就完事了

43:56.440 --> 43:57.800
好判断一下吧

43:57.800 --> 43:57.960
好

43:57.960 --> 43:58.440
如果

43:59.240 --> 44:00.520
如果你这个表单元数

44:01.160 --> 44:02.440
我们这里判断的是表单元数

44:02.440 --> 44:03.400
而不是它

44:03.400 --> 44:05.640
我们主要关注表单元数是不是一个

44:05.640 --> 44:07.880
如果这个表单元数是一个

44:07.880 --> 44:09.640
是只有一个表单元数

44:09.640 --> 44:11.560
那么我直接返回这个数主的第一项

44:12.280 --> 44:13.080
数主的第一项

44:13.960 --> 44:17.160
只有一个表单元数的情况

44:17.160 --> 44:18.440
那我给你数主干嘛呢

44:18.440 --> 44:20.040
你只有有多个表单元数的时候

44:20.040 --> 44:21.240
我才给你数主才有意义

44:21.240 --> 44:21.800
对吧

44:21.800 --> 44:22.360
才有意义

44:23.080 --> 44:23.800
明白这个意思吧

44:24.760 --> 44:26.680
我们把这些情况全部处理好

44:26.680 --> 44:28.200
最后来就返回整个数主

44:28.200 --> 44:29.560
返回整个数主

44:29.560 --> 44:30.440
好来看一下啊

44:30.520 --> 44:31.560
现在就特别有意思的

44:31.560 --> 44:32.760
我们这个函数就写完了

44:32.760 --> 44:33.640
得到一个表

44:33.640 --> 44:35.160
得到一个表单域的数据

44:35.160 --> 44:36.920
那你看我们后面很方便了

44:36.920 --> 44:38.040
我要得到账号

44:38.040 --> 44:39.560
比方说账号我们随便写一些吧

44:40.040 --> 44:41.000
得到账号你看

44:41.000 --> 44:41.800
就得到了

44:41.800 --> 44:42.920
这账号的数据

44:42.920 --> 44:44.840
然后呢我还得到就是爱号

44:45.080 --> 44:46.920
爱号比方随便选中两个吧

44:47.160 --> 44:48.440
他得到的是一个什么

44:48.440 --> 44:49.240
得到的是一个数主

44:49.240 --> 44:49.800
看到没

44:50.360 --> 44:50.760
对吧

44:50.760 --> 44:52.680
我就把这些数据呢是不是全部拿到了

44:53.800 --> 44:54.040
好

44:54.040 --> 44:57.000
这是得到一个表单表单数据

44:58.200 --> 44:58.520
好

44:58.520 --> 45:00.760
那么写了得到一个表单数据

45:01.560 --> 45:03.320
我们是不是可以写得到多个了

45:03.960 --> 45:04.360
对不对

45:04.920 --> 45:06.840
可以写得到多个表单数据了

45:07.480 --> 45:09.880
我们之前说明里面不是有一个提供了什么方法

45:09.880 --> 45:10.360
get

45:10.360 --> 45:11.400
诶这些错了啊

45:11.400 --> 45:13.080
get form data 方法

45:13.080 --> 45:15.560
这个方法是可以返回整个表单对象

45:15.560 --> 45:17.160
可以返回整个表单对象

45:17.800 --> 45:18.040
好

45:18.040 --> 45:19.880
那么我们就可以返回整个表单对象了

45:20.440 --> 45:20.600
好

45:20.600 --> 45:21.640
接下来我们来看啊

45:23.000 --> 45:23.640
这里呢

45:23.640 --> 45:24.840
我们再写个函数

45:24.840 --> 45:26.360
myplugin form

45:27.320 --> 45:28.840
form value data

45:31.960 --> 45:32.600
my data

45:32.600 --> 45:33.560
好proto type

45:34.280 --> 45:36.440
好get form data

45:36.440 --> 45:38.040
得到整个表单数据

45:38.680 --> 45:39.160
field

45:42.410 --> 45:45.130
得到整个表单数据

45:45.690 --> 45:46.090
对吧

45:46.890 --> 45:48.250
我们就可以这样子来处理的啊

45:48.250 --> 45:49.770
得到所有的表单数据

45:50.330 --> 45:52.810
那么如何来得到整个表单数据呢

45:53.210 --> 45:54.010
如何来得到整个

45:54.010 --> 45:55.290
诶这没有参数啊

45:55.290 --> 45:55.850
没有参数

45:56.490 --> 45:58.250
如何来得到整个表单数据呢

45:58.330 --> 45:59.930
是不是拿到所有的

46:00.490 --> 46:01.530
所有的啥

46:01.530 --> 46:02.730
所有的这个div

46:03.690 --> 46:04.970
是拿到所有的div

46:05.610 --> 46:06.650
然后这个啊

46:07.210 --> 46:08.970
所有有这个标记的div对吧

46:09.690 --> 46:11.290
所有有这个标记的div

46:11.290 --> 46:12.650
拿到所有的标记

46:12.650 --> 46:14.410
然后来循环对不对

46:14.410 --> 46:15.290
然后它的值嘛

46:15.290 --> 46:17.210
然后来循环就完事了

46:17.210 --> 46:18.410
好来吧来吧

46:19.290 --> 46:19.930
我们这里呢

46:21.210 --> 46:22.810
就是containers容器

46:24.330 --> 46:25.130
等于什么呢

46:25.130 --> 46:26.170
等于document

46:26.170 --> 46:27.450
不是document

46:27.530 --> 46:28.650
是zoption

46:29.770 --> 46:30.650
表单对象

46:30.650 --> 46:31.530
表单动物对象

46:31.530 --> 46:32.810
然后来querysnackt.o

46:33.690 --> 46:34.170
找啥

46:35.130 --> 46:35.930
找属性

46:36.730 --> 46:36.970
属性

46:36.970 --> 46:37.530
哪个属性

46:38.730 --> 46:39.610
等于

46:39.610 --> 46:40.970
就是有这个属性的就行了

46:41.370 --> 46:41.930
哪个属性

46:41.930 --> 46:42.490
是不是下面这个

46:42.970 --> 46:43.290
对吧

46:44.330 --> 46:44.810
找这个

46:45.530 --> 46:46.250
找这个属性

46:46.810 --> 46:47.130
对不对

46:47.930 --> 46:49.290
拿到这些div

46:49.290 --> 46:50.730
把这些div全部拿到

46:50.730 --> 46:52.010
我们来输出看一下

46:52.010 --> 46:53.050
看一下是不是拿到了所有的

46:53.050 --> 46:53.850
这些div

46:55.050 --> 46:55.770
保存啊

46:55.770 --> 46:56.170
看一下

46:56.890 --> 46:58.570
这里呢formvendator

46:59.530 --> 47:01.770
getformdata

47:02.970 --> 47:03.610
好看一下

47:03.610 --> 47:04.650
所以拿到了所有的

47:04.650 --> 47:05.530
这个div了

47:05.530 --> 47:06.250
对吧

47:06.250 --> 47:08.250
所有的div是不是全部拿到了

47:08.250 --> 47:09.530
好拿到之后呢

47:09.530 --> 47:10.410
是不是来循环它

47:10.970 --> 47:11.370
对不对

47:11.370 --> 47:12.490
来循环这个div

47:13.050 --> 47:13.850
好循环吧

47:14.730 --> 47:16.570
containers for each

47:18.170 --> 47:18.650
放个型

47:19.450 --> 47:20.650
containers.com嘛

47:21.850 --> 47:22.890
循环所有的div

47:22.890 --> 47:24.410
这句话是拿到

47:25.370 --> 47:26.330
所有

47:27.290 --> 47:29.370
所有的表单域容器

47:30.330 --> 47:31.530
然后循环这些

47:31.530 --> 47:32.250
这个容器

47:33.210 --> 47:34.970
循环的时候干嘛呢

47:35.290 --> 47:36.090
是不是要

47:36.090 --> 47:37.370
通过这个容器去拿啥

47:38.170 --> 47:39.450
通过这个容器去拿

47:39.450 --> 47:40.810
拿到他的自定义属性

47:40.810 --> 47:41.770
这个login id对吧

47:41.770 --> 47:43.770
循环到第一个去拿到login id

47:43.770 --> 47:46.090
然后循环到第二个去拿他的labs对吧

47:46.090 --> 47:47.850
去拿到这个表单域的自断名

47:47.850 --> 47:48.490
对不对

47:48.490 --> 47:49.290
拿自断名

47:49.690 --> 47:50.970
那么怎么拿自断名呢

47:51.530 --> 47:52.410
怎么拿自断名

47:52.730 --> 47:53.690
是不是我们要把这个

47:54.410 --> 47:56.010
这个东西属性拿到对不对

47:56.010 --> 47:57.690
这是我们的自定义属性的名称

47:58.410 --> 47:59.850
这是自定义属性的名称

48:01.050 --> 48:01.530
field

48:02.090 --> 48:03.450
就是应该这样说

48:03.450 --> 48:03.850
data

48:05.050 --> 48:05.850
那叫啥名字

48:08.090 --> 48:09.450
自定义属性的data.net

48:10.010 --> 48:10.650
data.net

48:10.650 --> 48:12.170
拿到这个自定义属性的名称

48:12.730 --> 48:14.010
那么这里呢我们就这样子写了

48:14.570 --> 48:14.890
把这个

48:15.450 --> 48:17.530
只要找到这些有这个名称的

48:17.530 --> 48:18.890
自定义属性的div

48:18.890 --> 48:20.570
找到把这些容器找到

48:20.570 --> 48:22.570
找到过后我们循环这些容器

48:22.570 --> 48:24.330
然后这就是属性的名称对吧

48:24.410 --> 48:25.930
那么我们可以通过什么

48:25.930 --> 48:28.090
这个多目对象的data set

48:28.090 --> 48:29.450
是不是把这个名称传进去

48:29.450 --> 48:31.050
是不是可以拿到这个自定属性的值

48:31.690 --> 48:32.090
对吧

48:32.090 --> 48:33.610
可以拿到这个自定属性的值

48:33.610 --> 48:35.290
这样子就比较绕啊写起来

48:35.290 --> 48:37.210
因为我现在是把它做了配置的

48:37.690 --> 48:39.530
但是好处是显示意见的

48:39.530 --> 48:41.770
我们一将将来只要改了配置就行了

48:41.770 --> 48:43.130
就其他地方一个不改

48:43.130 --> 48:44.970
你看其他地方全部都没有写实

48:44.970 --> 48:45.610
看没有

48:45.610 --> 48:46.490
全部都没有写实

48:47.850 --> 48:49.450
我们这里呢就可以拿到什么

48:49.450 --> 48:50.970
拿到这个自定属性的名称

48:51.530 --> 48:52.650
拿到名称之后

48:52.650 --> 48:53.850
我们是不是就可以通过名称

48:53.850 --> 48:55.130
去拿它的值了

48:55.130 --> 48:55.530
对吧

48:55.530 --> 48:56.730
data值剩下

48:56.730 --> 48:58.010
是不是之前写了个函数

48:58.010 --> 48:58.730
对不对

48:58.730 --> 48:59.290
哪个函数

48:59.290 --> 49:00.490
这个函数getfield

49:00.490 --> 49:01.050
data

49:01.050 --> 49:01.450
但是呢

49:01.450 --> 49:02.730
我们这里怎么去调一个函数呢

49:02.730 --> 49:04.170
就遇到问题了

49:04.170 --> 49:05.050
怎么去调这个函数呢

49:05.050 --> 49:06.650
这里能不能使用这一次

49:06.650 --> 49:07.050
不能

49:07.050 --> 49:08.090
你在这个函数里边

49:08.890 --> 49:10.010
在这个函数里边

49:10.010 --> 49:10.570
看没有

49:10.570 --> 49:12.010
它不能使用这一次

49:12.010 --> 49:13.210
不能使用这一次

49:13.210 --> 49:14.410
那怎么办呢

49:14.410 --> 49:15.850
是不是又来了这个问题

49:15.850 --> 49:17.850
rat保存一下这一次

49:17.850 --> 49:19.450
这里边使用必包嘛

49:19.450 --> 49:21.530
rat来获取到什么

49:21.610 --> 49:24.650
获取到getfielddata

49:24.650 --> 49:26.490
把field传进去

49:26.490 --> 49:26.650
好

49:26.650 --> 49:28.490
拿到这是拿到自断名

49:28.490 --> 49:29.610
自断名

49:29.610 --> 49:30.570
这打到自断值

49:31.690 --> 49:32.330
自断值

49:32.330 --> 49:32.490
好

49:32.490 --> 49:33.930
咱们来输出看一下

49:33.930 --> 49:36.010
fielddata

49:36.010 --> 49:36.650
我们来循环它

49:36.650 --> 49:37.210
输出看一下

49:39.050 --> 49:39.930
刷新

49:39.930 --> 49:40.410
你看一下

49:41.450 --> 49:43.450
我们这里的账号123

49:43.450 --> 49:44.170
选两个吧

49:44.170 --> 49:45.370
足球篮球

49:45.370 --> 49:46.490
密码随便写

49:47.530 --> 49:49.290
再次输出密码随便写

49:49.290 --> 49:50.170
手机号手机号

49:50.170 --> 49:51.370
我这里好像没有写这个东西

49:51.370 --> 49:51.930
随便写吧

49:53.450 --> 49:53.850
看一下

49:55.050 --> 49:55.770
全是undefined

49:56.570 --> 49:57.290
这里出问题了

49:58.010 --> 49:59.130
为什么全是undefined

50:00.410 --> 50:00.970
data.net

50:01.610 --> 50:01.770
好

50:01.770 --> 50:02.570
这里输出一下

50:02.570 --> 50:03.450
输出一下data.net

50:05.910 --> 50:06.390
data.net

50:07.270 --> 50:08.390
我这里是不是拿错了

50:11.540 --> 50:12.820
data.field的container

50:12.820 --> 50:13.620
没问题

50:14.340 --> 50:14.740
没问题

50:16.020 --> 50:17.220
data.field的container

50:17.220 --> 50:17.700
没问题

50:18.340 --> 50:19.140
然后它为什么

50:19.140 --> 50:20.420
这里得到的是undefined

50:20.420 --> 50:20.900
就是这里

50:21.460 --> 50:22.740
它得到的是undefined

50:23.460 --> 50:24.980
data.set

50:24.980 --> 50:26.100
data.net

50:26.100 --> 50:27.380
我们打印出这个

50:27.380 --> 50:28.660
打印出data.set

50:29.540 --> 50:30.660
看它怎么回事

50:31.220 --> 50:34.180
打印出这个元素的data.set

50:35.540 --> 50:36.020
保存

50:36.740 --> 50:40.630
data.set有个field的container

50:40.630 --> 50:42.390
明白了

50:42.390 --> 50:42.790
明白了

50:42.790 --> 50:44.390
因为它的属性名字

50:44.390 --> 50:46.150
它的属性名字是经过处理过的

50:46.150 --> 50:47.990
它是把data.hengang去掉了

50:47.990 --> 50:50.230
然后变成了小头奉命迷迷法

50:50.230 --> 50:52.150
变成了小头奉命迷法

50:53.110 --> 50:55.430
这里我们还得写个辅助函数

50:55.430 --> 50:56.710
没办法

50:56.710 --> 50:58.710
你还得写个辅助函数

50:58.710 --> 50:59.750
我真是吃多了

50:59.750 --> 51:01.190
我当时为什么要用这种难度

51:01.190 --> 51:02.310
折磨你们了

51:02.310 --> 51:04.310
但是无所谓

51:04.310 --> 51:05.910
反正是扩展课程

51:05.910 --> 51:09.910
留给那些愿意受折磨的同学写的

51:09.910 --> 51:10.790
看的

51:10.790 --> 51:11.510
那行吧

51:11.510 --> 51:14.310
我之前就是不怕这个麻烦

51:14.310 --> 51:15.750
不想把它进行转换

51:15.750 --> 51:16.790
那行了

51:16.790 --> 51:19.190
还得把它转换成小头奉命迷法

51:19.190 --> 51:21.670
还得转换成小头奉命迷迷法

51:22.150 --> 51:22.870
那行吧

51:22.870 --> 51:24.150
那我来转换一下吧

51:24.150 --> 51:24.710
转换一下

51:26.710 --> 51:27.910
或者这样子吧

51:27.910 --> 51:29.670
或者这样子不转换也行

51:29.670 --> 51:30.390
不转换也行

51:30.390 --> 51:31.750
我们不用data.hengang

51:31.750 --> 51:32.230
用这个

51:33.350 --> 51:33.670
用这个

51:34.310 --> 51:34.870
get

51:34.870 --> 51:36.150
hb

51:36.150 --> 51:36.790
我们之前学过的

51:38.390 --> 51:39.110
用这个玩意

51:39.830 --> 51:41.990
得到自定义属性的名字

51:41.990 --> 51:42.870
data.name

51:42.870 --> 51:43.670
data.name

51:43.670 --> 51:45.750
然后就行了

51:45.750 --> 51:46.230
就行了

51:46.230 --> 51:46.950
用这个也行

51:49.240 --> 51:49.960
主要是名字

51:50.600 --> 51:52.600
因为它之前是用独玩运线命迷法

51:53.720 --> 51:54.680
这样子你看

51:54.680 --> 51:55.800
输拿到了

51:55.800 --> 51:56.600
对吧

51:56.600 --> 51:57.400
拿到了吧

51:57.400 --> 51:57.640
好

51:57.640 --> 51:58.440
我们来看一下

51:58.440 --> 51:59.240
再来看一下

51:59.240 --> 52:00.120
账号123

52:00.120 --> 52:00.760
随便写

52:00.760 --> 52:01.640
这里两个

52:01.640 --> 52:03.160
选择两个密码随便写

52:03.160 --> 52:04.760
确诊密码随便写

52:04.760 --> 52:05.000
好

52:05.000 --> 52:05.480
手机号

52:08.040 --> 52:08.200
好

52:08.200 --> 52:08.440
你看

52:08.440 --> 52:08.920
输拿到了

52:10.280 --> 52:11.960
手机号这里为什么没拿到了

52:11.960 --> 52:14.120
因为手机号这里我没有去标注

52:14.120 --> 52:15.640
标注它我也得它feel的

52:15.640 --> 52:16.600
抗填那没有标注

52:16.600 --> 52:17.960
所以它直接忽略掉了

52:19.000 --> 52:19.560
没有意思吧

52:20.200 --> 52:20.440
OK

52:21.240 --> 52:21.400
好

52:21.400 --> 52:22.440
我就把数据拿到了

52:23.160 --> 52:23.560
那行吧

52:23.640 --> 52:25.240
那之前我这里也把改一下

52:25.240 --> 52:27.240
改还是改成小头蜂命迷法

52:27.240 --> 52:29.160
还是改成短红线命迷法

52:29.160 --> 52:31.080
datafeel的prob

52:31.880 --> 52:32.280
prob

52:32.840 --> 52:33.000
好

52:33.000 --> 52:35.320
那么这里还是改成小头蜂命迷

52:35.320 --> 52:37.000
就是使用get attribute

52:37.960 --> 52:39.320
这里getfeel的data

52:41.320 --> 52:41.480
好

52:41.480 --> 52:42.440
看一下之前写哪了

52:44.600 --> 52:45.160
写哪了呢

52:47.560 --> 52:48.280
getfeel的data

52:48.280 --> 52:49.320
getfoamdata

52:49.320 --> 52:50.840
然后get这里

52:53.240 --> 52:54.280
我写哪了呢

52:54.360 --> 52:55.960
这不是

52:55.960 --> 52:57.720
这是得到整个表达数据

52:57.720 --> 52:59.000
这是得到单个表达数据

52:59.960 --> 53:01.080
得到单个表达数据

53:01.080 --> 53:02.760
这是得到得到元数

53:02.760 --> 53:04.040
得到元数

53:04.040 --> 53:05.000
get elements

53:05.960 --> 53:06.840
得到元数

53:08.680 --> 53:09.560
我看一下

53:09.560 --> 53:10.600
我看一下我之前写哪了

53:13.780 --> 53:14.500
就data set

53:14.500 --> 53:16.180
我们查到一下data set

53:17.060 --> 53:18.500
在这在这

53:18.500 --> 53:20.180
那我们这里就不用data set了

53:20.180 --> 53:21.060
不用data set了

53:21.700 --> 53:22.660
我们就用那个

53:23.540 --> 53:26.260
就用那个就是get attribute

53:26.340 --> 53:27.220
get attribute

53:28.100 --> 53:28.500
好吧

53:28.500 --> 53:29.860
我们就用get attribute

53:30.740 --> 53:30.900
好

53:30.900 --> 53:33.620
那么这里我们是输写get attribute

53:35.780 --> 53:36.340
prob.net

53:37.380 --> 53:38.020
拿到这个东西

53:38.820 --> 53:39.620
拿到这个东西

53:39.620 --> 53:39.860
好

53:39.860 --> 53:41.380
我们这里这样直接去拿

53:41.380 --> 53:41.940
直接去拿

53:42.580 --> 53:43.380
直接去拿

53:43.380 --> 53:44.740
拿出来如果是undefined的

53:44.740 --> 53:45.780
如果没有拿到

53:45.780 --> 53:46.580
如果没有拿到

53:47.860 --> 53:49.380
他没有写没有写东西

53:49.380 --> 53:49.860
没有拿到

53:52.410 --> 53:53.690
没有拿到的话

53:55.370 --> 53:55.850
然后呢

53:55.850 --> 53:57.210
我们这里就使用默认

53:57.210 --> 53:57.930
默认属性名

53:58.890 --> 54:00.090
这样子来写

54:00.090 --> 54:01.290
我们就不用data set了

54:01.290 --> 54:03.290
因为data set它会改变命名方式

54:03.290 --> 54:04.410
它会把它变成

54:04.410 --> 54:05.530
小图封命名法

54:05.530 --> 54:06.650
而我们这里配置的时候

54:06.650 --> 54:08.170
配置的是短横线命名法

54:10.340 --> 54:11.300
我真的是吃多了

54:11.300 --> 54:12.180
干嘛去

54:12.820 --> 54:13.300
折磨你

54:14.660 --> 54:16.180
但是实际上写它现在就得这么写

54:16.180 --> 54:16.820
没办法

54:16.820 --> 54:17.300
就得这么写

54:17.300 --> 54:18.340
你得考虑通用性

54:18.740 --> 54:19.620
你不考虑通用性的话

54:19.620 --> 54:21.220
到时候要改一下就熬活了

54:22.180 --> 54:23.620
你现在现在现在麻烦一点

54:23.620 --> 54:24.740
但是将来就舒服了

54:25.860 --> 54:26.500
好

54:26.500 --> 54:27.460
是不是拿到表单数据了

54:28.020 --> 54:28.180
好

54:28.260 --> 54:28.740
好ok

54:28.740 --> 54:30.260
我们拿到表单数据之后

54:30.260 --> 54:31.380
get是formdata

54:33.060 --> 54:34.580
拿到整个表单数据

54:34.580 --> 54:35.220
每一个数据

54:35.220 --> 54:37.380
它的字段名和字段值

54:37.380 --> 54:38.340
是不是拿到了

54:38.340 --> 54:39.620
把它封装到对象里面

54:40.980 --> 54:41.620
formdata

54:42.660 --> 54:43.620
写个对象

54:43.620 --> 54:45.220
然后每一次循环

54:45.220 --> 54:46.420
从对象里面去

54:46.420 --> 54:47.700
把数据放进去

54:47.700 --> 54:48.820
放到对象里面去

54:48.820 --> 54:50.020
它的属性名feal

54:50.820 --> 54:52.260
它的属性值data

54:52.260 --> 54:52.660
对吧

54:52.660 --> 54:53.860
放到对象里面去

54:53.860 --> 54:54.260
返回

54:55.620 --> 54:56.340
返回对象

54:57.140 --> 54:58.260
returnformdata

54:59.220 --> 54:59.460
好

54:59.460 --> 54:59.780
看一下

55:00.500 --> 55:00.820
看一下

55:00.820 --> 55:01.940
现在我们这个函数据写完了

55:02.820 --> 55:02.980
好

55:02.980 --> 55:03.860
接下来我们来得到

55:04.740 --> 55:05.540
来再来

55:05.540 --> 55:06.260
选中两个

55:06.260 --> 55:06.820
选中两个

55:06.820 --> 55:07.780
这里随便写个

55:08.340 --> 55:09.460
确定密码随便写一个

55:09.460 --> 55:10.340
密码随便写一个

55:11.140 --> 55:11.460
好

55:11.460 --> 55:12.180
你看一下

55:12.180 --> 55:12.980
从拿到一个对象

55:12.980 --> 55:14.260
对象里面就记录了

55:14.260 --> 55:15.940
表单里面的所有数据

55:15.940 --> 55:17.140
passworder again不对

55:17.540 --> 55:18.820
passworder again好像出问题了

55:19.460 --> 55:19.620
好

55:19.620 --> 55:20.260
看一下再看一下

55:21.060 --> 55:22.580
passworder again好像出问题了

55:22.580 --> 55:23.300
那么咱们看一下

55:23.300 --> 55:24.020
passworder again

55:24.020 --> 55:25.060
为什么出问题

55:25.060 --> 55:26.180
它怎么出问题的

55:26.260 --> 55:27.700
我们这里是getfield的data

55:27.700 --> 55:28.660
把field传进去

55:29.140 --> 55:30.180
那么我们这里看一下

55:30.740 --> 55:31.460
怎么出问题的

55:31.860 --> 55:32.740
它是怎么出问题的

55:33.780 --> 55:34.980
看passworder again里面

55:34.980 --> 55:36.420
它有没有标记

55:36.420 --> 55:37.140
怪不得

55:37.140 --> 55:37.860
datafield的

55:39.140 --> 55:39.940
那不是我们的问题

55:39.940 --> 55:40.820
是使用者的问题

55:40.820 --> 55:41.060
对吧

55:41.540 --> 55:42.180
确定密码

55:42.180 --> 55:42.580
我们再看一下

55:44.260 --> 55:44.900
OK拿到了

55:44.900 --> 55:45.220
对吧

55:45.220 --> 55:45.620
拿到了

55:46.980 --> 55:47.220
好

55:47.220 --> 55:48.500
我们现在就可以拿到

55:48.500 --> 55:49.780
整个表单数据了

55:50.260 --> 55:51.460
整个本来数据就可以拿到了

55:52.660 --> 55:53.060
行了

55:53.060 --> 55:53.780
要不休息会吧

55:54.180 --> 55:54.900
一个消化一下

55:55.540 --> 55:56.900
也已经写了不少函数了

55:56.900 --> 55:57.860
我再过一遍吧

55:57.860 --> 55:58.340
过一遍

55:59.060 --> 56:00.580
首先我们做了一个配置

56:00.580 --> 56:01.940
配置进行混合

56:01.940 --> 56:02.820
形成了最终的配置

56:02.820 --> 56:03.860
这个没啥好说的

56:03.860 --> 56:05.060
然后给它加了一个方法

56:05.060 --> 56:05.700
我们当时

56:05.700 --> 56:07.220
主要的目的是加这个方法

56:07.220 --> 56:08.500
给我一个表单制断

56:08.500 --> 56:10.260
我能够通过这个表单制断

56:10.260 --> 56:10.980
来得到

56:11.940 --> 56:12.900
这个制断的值

56:12.900 --> 56:13.300
对吧

56:13.300 --> 56:14.340
得到这个制断的值

56:14.340 --> 56:15.380
但是写这个方法的时候

56:15.380 --> 56:16.100
我们发现

56:16.100 --> 56:17.380
我再有一个什么方法呢

56:17.380 --> 56:19.140
得到一个表断容器的方法

56:19.140 --> 56:20.820
因为我要从容器里边去找到

56:20.820 --> 56:22.340
它的哪个元素

56:22.740 --> 56:24.420
要找到元素才能获取元素的值

56:25.060 --> 56:26.180
整个过程就是

56:26.180 --> 56:27.380
先找容器

56:27.380 --> 56:29.460
再在容器里边去找元素

56:29.460 --> 56:32.100
再在元素里边去找最对应的属性

56:32.100 --> 56:33.700
再从对应的属性里面去取持

56:34.340 --> 56:35.300
最多把数据拿到

56:35.940 --> 56:37.060
所以说我们得写一个方法

56:37.060 --> 56:38.020
得到容器

56:38.020 --> 56:39.380
后来我们又写一个方法

56:39.380 --> 56:40.100
得到元素

56:40.100 --> 56:41.300
因为元素有可能是多个

56:41.780 --> 56:42.580
有可能是多个

56:42.980 --> 56:43.460
所以说呢

56:44.020 --> 56:45.380
我们这里写成这个样子了

56:45.860 --> 56:46.660
还有可能是多个

56:47.460 --> 56:48.180
对吧

56:48.180 --> 56:48.900
写成这个样子

56:50.900 --> 56:53.140
这里得到了是那个

56:53.940 --> 56:55.860
得到了是一个伪术组

56:55.860 --> 56:56.660
伪术组

56:56.660 --> 56:57.700
那么伪术组里边

56:57.700 --> 56:58.820
它为什么会有佛意习呢

56:58.820 --> 56:59.300
你看

56:59.300 --> 57:00.340
刚才我们在这里

57:01.220 --> 57:02.260
得到的是一个伪术组

57:02.260 --> 57:03.860
伪术组里面是为什么有佛意习的

57:03.860 --> 57:04.500
这个佛意习

57:04.500 --> 57:06.020
它不是书组里边的佛意习

57:06.260 --> 57:07.860
它不是书组里边的佛意习

57:07.860 --> 57:08.500
比方说

57:08.500 --> 57:09.380
那么document

57:10.420 --> 57:11.220
query

57:11.220 --> 57:11.780
snext

57:13.220 --> 57:14.180
比方说div

57:14.980 --> 57:16.100
所以拿了很多div

57:16.100 --> 57:16.260
好

57:16.260 --> 57:17.220
我们看一下每一个

57:17.700 --> 57:18.980
这个伪术组里边

57:19.460 --> 57:21.780
它的是个load list

57:21.780 --> 57:23.380
它里边也提供了一个佛意习

57:23.380 --> 57:24.180
类似于书组

57:24.180 --> 57:25.380
但是跟书组是不一样的

57:25.780 --> 57:26.500
是不太一样的

57:27.700 --> 57:28.820
只是个名字一样而已

57:28.820 --> 57:30.740
它也能实现一样的功能

57:30.740 --> 57:31.700
但是跟书组里边

57:31.700 --> 57:32.340
它的地址

57:32.340 --> 57:33.940
两个函数的地址肯定是不一样的

57:34.660 --> 57:34.900
好

57:34.900 --> 57:36.100
所以它也可以使用佛意习

57:36.100 --> 57:36.980
来循环

57:36.980 --> 57:38.180
循环完了过后

57:38.180 --> 57:39.940
每次循环去找它的数据

57:39.940 --> 57:40.180
对吧

57:40.180 --> 57:41.060
但是我们考虑到了

57:41.060 --> 57:42.580
单选方和复选方的情况

57:43.220 --> 57:43.700
好吧

57:43.700 --> 57:45.060
我们目前来写成这个样子了

57:46.420 --> 57:46.660
好

57:46.660 --> 57:47.540
我要带码了

57:47.540 --> 57:48.340
给大家慢慢过一遍

57:48.740 --> 57:49.380
大家看一遍

57:51.860 --> 57:52.980
拿到某一个字段的是

57:54.020 --> 57:54.580
找容器

57:55.220 --> 57:56.420
通过容器找元素

57:56.820 --> 57:58.500
然后准备好一个数组来接收数据

58:00.580 --> 58:02.020
这是一个表单向的数据

58:02.740 --> 58:04.900
然后看这个表单向里边有哪些元素

58:05.540 --> 58:07.060
得到什么自定义属性的名字

58:07.060 --> 58:07.540
你看

58:07.540 --> 58:08.420
主要是附在这

58:08.740 --> 58:09.220
因为我想

58:09.700 --> 58:10.820
我希望的是将来

58:11.380 --> 58:13.300
我能够很方便地进行配置

58:13.300 --> 58:14.900
所以说我们全部要动态过去

58:14.900 --> 58:15.620
不能写死

58:16.020 --> 58:17.380
你看这地方我都没有写死

58:18.420 --> 58:20.100
拿到这个自定义属性的名字

58:20.100 --> 58:21.300
通过自定义属性的名字

58:21.300 --> 58:23.460
去拿自定义属性配置的

58:23.460 --> 58:24.740
也要读哪个属性名

58:25.540 --> 58:26.020
然后呢

58:26.420 --> 58:27.060
拿到这个

58:27.060 --> 58:28.580
如果他没有得到属性的名字

58:29.220 --> 58:31.380
那么我们就使用默认的属性名

58:31.380 --> 58:33.780
就是通过属性名去拿到他的属性字

58:33.780 --> 58:35.940
但是如果他是单选方和

58:35.940 --> 58:37.140
或者是多选方的话

58:37.140 --> 58:38.580
那么他只有选中的情况下

58:38.580 --> 58:39.620
我才把指甲到数组

58:40.580 --> 58:42.340
其他情况都直接加数组

58:42.340 --> 58:44.100
为了后边就是用起来方便

58:44.100 --> 58:45.220
如果不数组长度为0

58:45.220 --> 58:46.020
我得到是0

58:46.580 --> 58:48.020
没有拿到任何数据

58:48.340 --> 58:48.900
得到是0

58:49.620 --> 58:50.740
如果长度为1的话

58:50.900 --> 58:53.700
我要得到的元素长度为1的话

58:53.700 --> 58:54.660
他只有一个数据

58:54.660 --> 58:55.540
我拿

58:56.100 --> 58:58.900
得到是个数组的第一项就行了

58:59.460 --> 59:01.860
然后其他情况下就直接返回数组

59:01.940 --> 59:02.340
对吧

59:02.820 --> 59:04.660
把这个展开给大家过一遍

59:05.780 --> 59:06.980
得到整个表单

59:06.980 --> 59:07.940
得到整个表单的话

59:07.940 --> 59:09.060
我先拿到什么

59:09.060 --> 59:11.780
拿到这个表单的就是自定义属性的名字

59:12.740 --> 59:13.940
自定义属性的名字

59:13.940 --> 59:14.980
容器的名字

59:14.980 --> 59:16.180
然后通过的容器的名字

59:16.180 --> 59:17.380
去拿到所有的容器

59:18.180 --> 59:20.660
然后循环这个所有的容器

59:20.980 --> 59:21.860
循环所有的容器

59:21.860 --> 59:22.740
然后干嘛呢

59:22.740 --> 59:24.020
每一循环一个容器

59:24.020 --> 59:25.860
得到通过一个自定义属性

59:25.860 --> 59:28.900
得到它的对应的制断名

59:28.900 --> 59:31.540
然后通过制断名去得到它的制断值

59:31.540 --> 59:33.380
然后加到对象里边返回

59:34.180 --> 59:35.220
整个过程就是这样子

59:35.780 --> 59:37.300
主要是下面那个配置比较复杂

59:38.340 --> 59:40.420
因为我们现在就不能再写死了

59:40.420 --> 59:41.220
不能再写死了

59:42.100 --> 59:42.420
好

59:42.420 --> 59:43.460
那么这一块就完成了

59:45.540 --> 59:46.020
真的是

59:49.700 --> 59:50.420
听这个课的

59:50.820 --> 59:51.700
同学们

59:51.700 --> 59:53.940
有没有那天我讲那个表达

59:53.940 --> 59:57.300
表达那个公开课的时候来听我课的

59:57.300 --> 59:59.060
你说你是不是自己折磨自己吗

59:59.060 --> 01:00:00.820
我是不是自己折磨自己吗

01:00:00.820 --> 01:00:02.260
本来快快乐的生活

01:00:02.260 --> 01:00:03.540
本来快快乐的写代码

01:00:03.540 --> 01:00:04.580
干嘛去写这个东西呢

01:00:05.620 --> 01:00:07.780
不过你通过写这个东西你会有

01:00:07.780 --> 01:00:08.820
非常大的提高

01:00:08.820 --> 01:00:10.660
如果你真的能把这个东西写出来

01:00:10.660 --> 01:00:11.700
我的天了

01:00:11.700 --> 01:00:14.180
你的思维层次已经跟别人不一样了

01:00:14.180 --> 01:00:15.140
你思考问题的

01:00:15.860 --> 01:00:17.140
思考的会非常非常深

01:00:18.100 --> 01:00:19.620
考虑的会非常非常细

01:00:19.620 --> 01:00:20.260
而不再是

01:00:20.260 --> 01:00:22.980
就是为了直接把这个效果做出来就完事

01:00:22.980 --> 01:00:24.420
你会考虑到很常运的东西

01:00:25.140 --> 01:00:26.980
这种思路其实对你们以后

01:00:26.980 --> 01:00:30.180
特别是对你们提升自己的待遇

01:00:30.180 --> 01:00:32.740
就是提升自己的职位是非常非常有帮助的

01:00:33.700 --> 01:00:34.180
好吧

01:00:34.180 --> 01:00:35.780
那么先休息会吧

01:00:35.780 --> 01:00:36.580
下期会再来继续

