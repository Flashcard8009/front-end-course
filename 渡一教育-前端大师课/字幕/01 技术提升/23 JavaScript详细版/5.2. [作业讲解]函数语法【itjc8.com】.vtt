WEBVTT

00:00.000 --> 00:14.180
好 来吧 看一下这套题

00:15.200 --> 00:20.560
第一题呢 就是这些题啊 里边这些函数啊 我都把名字给你写好了啊

00:20.820 --> 00:24.420
其实以后呢 我肯定不会提示你的 那现在呢 我可以提示你

00:24.680 --> 00:29.280
主要是给大家看一下啊 一个正确的函数命名 该怎么去命名

00:29.780 --> 00:35.420
函数的名字呢 我们一定要做到 就是看到这个名字呢 就能够知道这个函数是什么意思啊

00:35.660 --> 00:40.180
至少能够大概猜到这个函数是什么意思 这是最好的啊 第一个啊

00:40.980 --> 00:45.700
他说写一个函数啊 该函数呢 用于判断某个数 是不是激素 是不是写过了

00:46.100 --> 00:53.460
啊 我这里说一下啊 我这里讲作业的时候呢 这一节课的作业啊 我是放到这儿的啊 我是放到这儿的 我就赶紧说一下吧啊

00:53.940 --> 00:54.460
说一下啊

00:56.420 --> 01:03.420
作业答案 作业答案 也不要答案了啊 叫参考答案 这个没有标准的啊

01:03.740 --> 01:11.580
没有标准的 他有参考答案 作业参考答案呢 是在位置在那个跟目录 跟目录 跟目录

01:12.460 --> 01:13.260
下边的这个

01:13.900 --> 01:14.220
command

01:15.620 --> 01:20.180
my function 要解释啊 如果你看的话 看一下这里

01:21.300 --> 01:28.340
啊 第一个啊 新建一个解释文件啊 就这个文件啊 编写一下函数 第一个函数呢 用于判断某个数字的激素 做过了

01:28.820 --> 01:33.020
已经做了 对吧 已经做了啊 我们也测试了 所以说不用看了啊 第一个地道铁完了

01:33.660 --> 01:40.540
第二个地道铁 该函数呢 用于判断某个数字的数数 是做过的 对吧 马上快速写一遍啊 快速写一遍方许

01:40.980 --> 01:42.420
isprank啊 isprank

01:43.660 --> 01:49.940
给我一个数n啊 给我一个数n 那么我来判断一下 他是不是数数 那么这个n跟这个n有没有冲突啊

01:50.860 --> 01:56.620
有没有冲突 是没有冲突 他们是不同的函数啊 函数内部的东西呢 外面是没法使用的啊

01:56.940 --> 02:03.700
所以说这个东西呢 跟外面 跟这个东西没有冲突啊 没有冲突 打上一个文档注释啊 这个是要判断的数字

02:04.420 --> 02:06.900
这个就不大注释啊 就大家这个 判断

02:08.020 --> 02:10.460
一个数 是不是 数数

02:11.780 --> 02:20.260
好 我们来快速写一下啊 如果n的只能小于了2啊 如果小于2 因为数数呢 还一定是大于等于2的啊 如果小于2的话 就直接返回force

02:20.780 --> 02:23.580
一定不是数数 好 然后呢 再来判断

02:24.540 --> 02:24.820
啊

02:26.140 --> 02:29.660
一个循环 循环 从二开始小于n-1

02:31.580 --> 02:42.700
看一下二到n-1之间啊 比方说数字8 看一下二到七之间 有没有一个数字能种出他啊 因为一个数数的话 只能是一到一和自生啊 能够被一和自生种出

02:43.580 --> 02:45.420
如果二到他自成简一之间

02:46.420 --> 02:51.620
啊 应该是小于小于等于简一 对吧 小于n 应该是小于 其实也无所谓了啊

02:51.860 --> 02:56.140
他一定不能处于n-1 一定不能就是出境的啊 小于n 小于n

02:57.460 --> 03:03.500
二到n-1之间啊 如果能找到一个数能种出n的话啊 如果找到一个数能种出n的话 那么

03:04.740 --> 03:08.100
他就不是数数啊 如果发现了一个数能够整出n

03:08.900 --> 03:10.980
啊 能够整出n 那么他就一定不是数数

03:11.900 --> 03:16.740
换而言之 如果出了这个循环 都还没有结束这个函数的话 说明没有进这个衣服

03:17.140 --> 03:24.100
那么你就没有找到任何一个数能种出他 最后就是数数啊 判断数数的代码就写完了

03:24.660 --> 03:32.820
来测试一下呗 测试一下啊 我们来引用啊 引用这个介石

03:34.980 --> 03:37.460
毁藏机目落 毁藏机目落 然后common

03:38.180 --> 03:45.380
介石 引用他 注意要先引用他啊 因为这里边有函数的你先引用他之后呢 我们才能使用他里边的这些函数

03:46.100 --> 03:50.260
好 然后呢 这里边写上啊 isprime 输出啊 输出

03:51.060 --> 03:56.740
isprime 测试一下啊 看一下二是不输出呢 然后再测试一下 isprime

03:57.620 --> 04:03.510
看一下十是不是输出呢 随便写两个吧 运行啊

04:08.740 --> 04:14.580
好 看一下啊 啊 第一个是输出 第二个呢 不是输出 没问题吧啊 正确的啊 正确的

04:15.540 --> 04:20.980
好 这都知道题啊 下一个写一个函数呢 用于该函数呢 用于对

04:21.540 --> 04:26.980
数组求和 所以写过了 对吧 写过了 ok 马上来写啊 sun number sun number re

04:29.860 --> 04:32.500
放个行 放个行

04:33.220 --> 04:41.220
sum 上表示和的意思 二什么的和呢 一个数组的和啊 你看尽量啊 用用这种标准的命名法

04:41.780 --> 04:47.220
啊 用这种合适的命名法啊 可以看到这个名字呢 就可以知道这个函数的意思

04:47.860 --> 04:53.700
好 给我一个啥 如果要你要对数组求和的话 你是吧 给我一个数组 对吧 要给我一个数组啊

04:54.260 --> 04:58.260
所以说给我一个数组啊 我这个数组呢 进行求和打个注释

05:00.020 --> 05:06.420
对数组求和 那求和之后 你是吧 把结果返回啊 把得到的结果返回啊

05:06.900 --> 05:17.620
啊 一个定个辨量啊 定个辨量来来求和 然后循环这个数组 i等于0 i小于 air darlings i加加

05:19.300 --> 05:28.380
然后呢 每一次循环了 加上加上什么了 加上这个 i 对吧 上 发挥 好 这是对数组求和

05:29.500 --> 05:34.940
好 接下来我们测试一下啊 这是数数 我们注释掉啊 然后看一下求和

05:35.660 --> 05:39.020
那求和 比方说随便给一个数组啊 3的

05:39.740 --> 05:51.690
二位 随便给个数组 随便给一个啊 看一下和这么准确 啊 合的话是3加477加71414加620

05:52.810 --> 05:55.370
啊 看一下 嗯 保存

05:56.570 --> 06:00.730
20没问题啊 说明求和也没问题了 好下一个啊

06:01.690 --> 06:05.210
写一个函数 该函数呢 用于得到数组中的最大值

06:06.250 --> 06:12.890
ok 好 这里写个函数 方形 呃 最大值 max max

06:13.930 --> 06:19.770
二位 一个数组中的最大值啊 给我一个数组 我来得到这个数组中的最大值

06:21.370 --> 06:25.370
得到数组中的最大值

06:26.090 --> 06:30.890
好 最大值怎么得到啊 是吧 我们之前 我记得好像在那个什么

06:31.450 --> 06:33.690
呃 在数组那个章节啊 数组那个

06:34.650 --> 06:39.290
课的时候呢 好像讲过这个最大值 对吧 最大值怎么办呢 你首先呢

06:39.610 --> 06:43.210
判断一下啊 对吧 这个数组有没有 这个长度是不是为凝的 对吧

06:43.850 --> 06:48.570
这数组有没有东西 如果里边一个东西都没有 那怎么求最大值呢 肯定是求不了啊

06:48.810 --> 06:52.730
它里边有没有东西 如果数组的长度为凝 有没有最大值啊

06:53.130 --> 06:58.090
没有最大值啊 这是特殊情况啊 特殊情况呢 我给他说明啊 给他说明

06:58.730 --> 07:04.090
如果数组长度为凝啊 则返回 on the fan

07:04.410 --> 07:09.130
啊 就在函数上说明 因为你数组长度都为凝的啊 那你肯定没有最大值了

07:09.530 --> 07:13.530
所以说这里呢 如果长度为凝的话 他没有最大值啊 on the fan

07:14.090 --> 07:18.890
直接返回 on the fan 或者是呢 直接返回 return 啊 直接返回啊 直接结束

07:19.210 --> 07:21.930
因为你后边不写 on the fan的话 他返回的就是 on the fan

07:22.890 --> 07:29.610
啊 这是长度为凝的情况 那么后边东西呢 就就是正常的情况了啊 正常的情况呢 就是我得到数组的第一项

07:30.330 --> 07:32.410
max 得到数组的第一项

07:33.770 --> 07:38.330
然后怎么办呢 从第二项开始循环啊 从第二项开始循环

07:40.570 --> 07:45.290
吧i等于1 这个下标从1开始循环 然后循环整个数组

07:45.450 --> 07:54.810
啊 每一循环一次呢 比较一下 看一下之前保存的这个数啊 跟这一项相比哪个大

07:55.530 --> 08:01.210
啊 如果我发现了这个数组的这一项的数据呢 比我之前保存的那个还要大

08:01.850 --> 08:05.930
那是不是要重新记录 对吧 要重新记录 重新记录这个

08:07.290 --> 08:13.930
重新记录 这就完了 对吧 这样子循环结束过后呢 这里边记录的一定是最大值

08:14.410 --> 08:21.770
因为它不可能记录比它一个稍微小一点的值 不可能记录到这 因为只要有比它大的 它就会重新记录

08:24.650 --> 08:27.770
返回 是吗 最大值 所以最后要返回 最大值

08:29.690 --> 08:34.330
好 就想完了啊 就想完了 好 那么这是得到最大值 测试一下呗

08:35.450 --> 08:39.930
啊 有了这个函数过后了 以后我们凡是要求数组的最大值呢 我们就可以利用这个函数了啊

08:40.890 --> 08:49.210
二位 好 给一个数组啊 随便写 随便写 保存应该是这个最大值 对吧

08:50.650 --> 08:59.290
啊 没问题啊 最大值的是啊 最小值呢啊 有下面一个最小值啊 最小值是一样的啊 最小值是一样的啊

09:00.170 --> 09:02.330
复制啊 直接复制一下

09:03.770 --> 09:11.290
好 下面 粘贴过来啊 这个把它改成命 表示最小值啊 最小值得到数中的最小值

09:12.250 --> 09:19.770
啊 如果数组长度为0呢 这返回 on defined 是一样的啊 是一样的 只是把这里的大语呢 变成小语啊 变成小语

09:20.890 --> 09:26.650
好 把这个max改一下名字啊 f2 点击啊 键盘的 f2 可以重新命名

09:27.210 --> 09:31.050
好 这里把它命名成命啊 你看 这些地方又全部跟着改了

09:32.250 --> 09:34.490
好吧 这是数组的最小值 来测试一下啊

09:35.450 --> 09:41.240
嗯 这个地方啊 说一下啊 按住shift

09:42.120 --> 09:46.680
按住shift 加二者键 可以复制这一行 你看 可以复制这一行

09:47.560 --> 09:48.200
这么个意思

09:49.320 --> 09:52.920
好 然后呢 这里把它改成最小值 看一下啊 最小值

09:54.360 --> 09:59.960
最小值呢 应该是1 对吧 保存看一下啊 最大值22 最小值呢 1

10:00.520 --> 10:04.040
好 那么现在最小值和最大值都出来了 下一个啊

10:05.000 --> 10:07.000
写一个函数

10:08.200 --> 10:12.680
这个函数呢 用于判断一个数组啊 它是不是牺松数组

10:13.240 --> 10:16.200
什么叫牺松数组呢 就是里边啊 它有些

10:16.920 --> 10:21.640
它的它的下标是不点去的啊 有些下标是缺失的 这就是牺松数组

10:22.040 --> 10:25.240
啊 我们函数名字呢 已经告诉你的啊 你看这个名字

10:25.800 --> 10:28.600
就很舒服的 你知道吗 你看这个名字

10:29.320 --> 10:29.800
嗯

10:30.680 --> 10:31.320
has

10:31.560 --> 10:32.840
有没有empty

10:33.400 --> 10:35.400
表示空的位置 in array

10:35.640 --> 10:36.440
啊 in array

10:36.920 --> 10:42.440
在数组中有没有空的位置啊 那么有的话就是牺松数组对吧 反回来应该是什么

10:42.760 --> 10:45.800
反回来 首先说参数啊 参数应该告诉我什么

10:46.760 --> 10:48.920
判断一个数组是不是牺松数组

10:49.480 --> 10:50.760
那参数应该告诉我什么

10:51.480 --> 10:54.360
所以给我一个数组对吧 你得给我一个数组啊

10:54.840 --> 10:58.090
好 那么这里

10:58.490 --> 11:00.490
大概就是啊 判断一个数组

11:01.690 --> 11:03.450
是不是牺松数组

11:06.230 --> 11:08.550
那么它反回的应该是什么呢

11:09.430 --> 11:12.230
啊 反回内详应该是什么呢 反回内详是啥意思

11:12.870 --> 11:15.510
就是反回值的内详

11:15.990 --> 11:17.350
它反回内详应该是啥呢

11:18.710 --> 11:21.590
是不是应该是布尔对吧 应该是布尔布林

11:22.310 --> 11:26.230
啊 反回内详呢 它是不是啊 是不是就是个布尔

11:26.470 --> 11:28.310
如果是牺松数组呢 就反回去

11:29.030 --> 11:31.190
如果不是牺松数组呢 就反回force

11:31.750 --> 11:35.750
就是反回什么东西 参数有什么东西 含书的名字是啥

11:35.910 --> 11:37.990
这些呢是根据含书的功能来定的

11:38.230 --> 11:39.430
你把含书的功能

11:40.390 --> 11:42.950
权力先定下来 那么它的反回内详呢

11:43.270 --> 11:46.150
它的参数有哪些呢 它的名字是什么呢

11:46.310 --> 11:47.510
就一定定下来了

11:47.830 --> 11:50.150
所以说你一定要认真读题 这个功能是什么

11:50.470 --> 11:52.390
它判断的是一个数组是不是牺松数组

11:52.870 --> 11:55.590
OK 那我们怎么来判定一个数组

11:55.670 --> 11:56.710
它是不是牺松数组呢

11:57.350 --> 11:58.790
牺松数组的特点是什么

11:59.350 --> 12:00.150
牺松数组

12:00.950 --> 12:05.110
牺松数组的特点是下标连续

12:05.430 --> 12:06.630
它是从零开始

12:07.190 --> 12:09.750
下标是从零开始 它是连续的

12:10.070 --> 12:11.190
下标是连续的

12:12.950 --> 12:16.390
好 那么下标是连续的话

12:17.190 --> 12:19.670
我记得我之前讲过一个东西没

12:20.230 --> 12:23.190
我记得在数组这一块 我看一下啊

12:23.750 --> 12:25.190
有没有讲过那个语法不中

12:25.590 --> 12:26.550
对 讲过了 对吧

12:26.790 --> 12:28.310
讲过的 硬关键字

12:28.630 --> 12:29.510
硬关键字

12:29.990 --> 12:31.270
好 那我就得了

12:31.590 --> 12:32.310
我怎么办呢

12:32.790 --> 12:36.310
我从零开始进行循环

12:37.750 --> 12:40.550
从零开始 下标从零开始进行循环

12:41.110 --> 12:42.310
小于点那样子

12:42.550 --> 12:43.350
挨家家

12:44.790 --> 12:47.590
循环每一个下标 每一个下标

12:48.150 --> 12:50.230
然后呢 把一个个下标拿出来看

12:50.470 --> 12:52.390
下标是不是数组的数相

12:52.710 --> 12:53.270
还记得吗

12:53.830 --> 12:55.990
下标是不是数组的数相

12:56.310 --> 12:56.710
对吧

12:57.270 --> 12:58.070
比方说啊

12:58.310 --> 12:59.830
数组比方说啊

13:01.110 --> 13:02.550
这个数组呢 长度为5

13:02.870 --> 13:04.150
比方说一个数组

13:04.150 --> 13:05.350
AR2.5

13:05.830 --> 13:06.630
长度为5

13:06.950 --> 13:08.070
那么这个数组的下标

13:08.070 --> 13:09.270
它的这个数组是个对象

13:09.270 --> 13:10.390
它的数相是不是零

13:10.390 --> 13:11.670
一 二 三 四

13:11.670 --> 13:12.150
对吧

13:12.150 --> 13:13.430
这才是它正常的数相

13:13.830 --> 13:15.110
如果是希冲数组的话

13:15.110 --> 13:16.310
是不是缺失了一些东西

13:16.310 --> 13:17.190
比方说零没了

13:18.070 --> 13:19.270
二 三没了对吧

13:19.270 --> 13:20.310
这是希冲数组

13:21.030 --> 13:22.710
那我要判断它是不是希冲数组

13:22.710 --> 13:24.550
我下标就从零开始循环

13:25.270 --> 13:26.630
就从零开始循环零

13:26.630 --> 13:27.910
一 二 三 四

13:28.150 --> 13:29.030
挨摘的循环

13:29.350 --> 13:30.470
把这个下标拿到

13:30.710 --> 13:31.590
看一下什么

13:31.830 --> 13:33.110
看一下这个下标

13:33.110 --> 13:35.030
是不是数组的一个数相

13:35.190 --> 13:35.670
对吧

13:35.670 --> 13:36.550
我把零拿到

13:36.550 --> 13:37.910
看一下这个对象里面

13:37.910 --> 13:39.030
有没有零这个数相

13:39.190 --> 13:39.430
对吧

13:39.430 --> 13:40.550
有没有零这个数相

13:40.710 --> 13:41.510
看一下一拿到

13:41.510 --> 13:43.030
一个这个对象里面

13:43.030 --> 13:43.990
有没有一这个数相

13:44.630 --> 13:45.110
没问题吧

13:45.670 --> 13:46.310
啊 这就是

13:46.710 --> 13:47.910
判断它有没有这个数相

13:47.910 --> 13:48.870
如果没有这个数相

13:48.950 --> 13:50.470
只要有一个数相缺失

13:50.710 --> 13:51.670
是不是就希冲数组

13:51.910 --> 13:52.950
它一定是希冲数组

13:53.110 --> 13:53.510
对吧

13:54.230 --> 13:55.270
它的下标范围

13:55.430 --> 13:56.230
少了一些

13:56.390 --> 13:57.350
这就是希冲数组

13:58.150 --> 13:58.470
好

13:58.790 --> 13:59.350
比方说

13:59.350 --> 14:00.550
那咱们就来怎么来判断

14:00.550 --> 14:01.750
数相存不存在呢

14:01.750 --> 14:02.950
我们之前不是有吗

14:03.750 --> 14:04.630
硬关键字

14:04.630 --> 14:05.510
硬关键字

14:05.510 --> 14:06.310
数相名

14:06.310 --> 14:07.350
硬对象

14:07.670 --> 14:07.990
对吧

14:07.990 --> 14:08.630
在对象里面

14:08.630 --> 14:09.590
一个数相存不存在

14:10.070 --> 14:10.390
好

14:10.390 --> 14:11.030
判断一下

14:11.350 --> 14:12.230
如果i

14:12.230 --> 14:12.710
硬

14:13.110 --> 14:13.670
而为

14:13.910 --> 14:14.790
说明什么呢

14:16.390 --> 14:16.870
这样子

14:16.870 --> 14:17.590
啊 这样子

14:17.990 --> 14:19.510
啊 加个感叹号

14:19.510 --> 14:20.630
啊 加个感叹号

14:21.830 --> 14:23.190
感叹号加感叹号是什么

14:23.350 --> 14:23.990
什么意思

14:23.990 --> 14:24.870
取反对吧

14:25.030 --> 14:25.830
表示的是

14:26.470 --> 14:28.470
i在这个数组中不存在

14:28.470 --> 14:29.350
啊 不存在

14:29.350 --> 14:30.950
就是数组没有这个数相

14:30.950 --> 14:31.910
没有这个下标

14:31.910 --> 14:32.790
啊 加上i

14:32.790 --> 14:33.750
加上感叹号

14:33.750 --> 14:34.790
感叹号表示什么意思

14:34.790 --> 14:36.070
表示没有的意思

14:36.390 --> 14:37.750
后边为什么要扩起来了

14:37.750 --> 14:38.870
因为你不扩起来的话

14:38.870 --> 14:40.150
这个i表示的是

14:40.150 --> 14:41.350
对这个东西取反

14:41.350 --> 14:41.750
啊

14:41.750 --> 14:42.630
对这个东西

14:42.630 --> 14:43.750
布尔直取反

14:44.150 --> 14:44.790
啊

14:44.790 --> 14:46.390
对后边整个这个取反

14:47.110 --> 14:49.430
对后边整个判定结果取反

14:49.830 --> 14:50.550
什么意思呢

14:50.550 --> 14:50.950
就是

14:51.750 --> 14:53.910
数组里边没有这个下标

14:53.910 --> 14:54.950
啊 没有下标

14:55.670 --> 14:56.950
好 如果没有这个下标

14:56.950 --> 14:57.990
是不是其中数组

14:57.990 --> 14:59.270
那就返回处去玩事了

14:59.270 --> 14:59.990
对吧

14:59.990 --> 15:01.830
只要找到一个就不用看了啊

15:01.830 --> 15:02.470
他没有

15:02.470 --> 15:03.910
他不是一个其中数组

15:03.910 --> 15:05.270
啊 不是一个其中数组

15:05.830 --> 15:06.390
好

15:06.390 --> 15:08.070
如果循环结束

15:08.550 --> 15:10.310
啊 如果循环结束

15:10.310 --> 15:11.830
都还没有返回

15:11.830 --> 15:12.230
说明

15:12.950 --> 15:14.230
下标是不是全部都在

15:14.870 --> 15:16.150
下标全部都在

15:16.630 --> 15:17.990
返回一个force

15:18.950 --> 15:19.670
表示

15:19.670 --> 15:21.110
下标全部都在

15:21.110 --> 15:22.310
不是其中数组

15:23.990 --> 15:24.710
能看懂吗

15:25.350 --> 15:25.830
好

15:26.150 --> 15:26.950
那么这里呢

15:26.950 --> 15:27.750
有些同学呢

15:27.750 --> 15:28.470
之前有

15:28.470 --> 15:29.750
我在收获的时候

15:29.750 --> 15:30.470
有朋友在问

15:31.110 --> 15:32.870
就说这里能不能反这些

15:34.150 --> 15:35.030
能不能反这些

15:35.590 --> 15:36.310
大家想一想啊

15:36.310 --> 15:37.270
这个逻辑啊

15:37.270 --> 15:38.390
能不能反这些呢

15:39.270 --> 15:40.310
他不能反这些

15:40.630 --> 15:42.150
为啥不能反这些呢

15:42.150 --> 15:43.190
你想个道理

15:44.150 --> 15:46.390
你现在的逻辑是什么

15:46.390 --> 15:47.430
现在你这个代码啊

15:47.430 --> 15:48.310
他表达的

15:48.310 --> 15:49.910
表达的逻辑是这样子的

15:50.630 --> 15:51.190
他说

15:51.990 --> 15:53.030
我循环下标

15:53.990 --> 15:55.910
只要下标在数组里边

15:55.910 --> 15:57.430
只要看到一个下标

15:58.390 --> 15:59.590
在数组里边存在

16:00.150 --> 16:01.750
他就一定不是其中数组

16:02.310 --> 16:02.870
再来一次啊

16:03.670 --> 16:05.830
只要数组里边存在一个下标

16:06.950 --> 16:08.310
他就一定不是其中数

16:08.310 --> 16:09.190
其中数组

16:09.190 --> 16:09.910
是这样子吗

16:10.790 --> 16:11.670
是这样子吗

16:11.830 --> 16:13.350
第1个下标数组里面不存在

16:13.350 --> 16:14.310
不管他

16:14.310 --> 16:15.190
看第2个下标

16:15.190 --> 16:17.270
第1个下标在数组里面存在

16:17.270 --> 16:17.670
ok

16:17.670 --> 16:18.630
他不是其中数组

16:19.430 --> 16:20.070
是这个意思吗

16:20.710 --> 16:21.830
肯定这个逻辑有问题

16:21.830 --> 16:22.070
对吧

16:22.070 --> 16:22.790
逻辑有问题

16:23.350 --> 16:24.230
我们的其中数组

16:24.230 --> 16:24.710
只要

16:24.710 --> 16:25.990
其中数组的逻辑是

16:25.990 --> 16:27.670
只要有一个下标不存在

16:27.670 --> 16:28.790
他就是其中数组

16:28.790 --> 16:29.430
所以说

16:29.430 --> 16:31.350
我们应该判判的是不存在的情况

16:31.910 --> 16:33.430
只要有一个不存在

16:33.430 --> 16:34.630
那么他就是其中数组

16:35.350 --> 16:35.910
反之呢

16:36.710 --> 16:37.590
没有没有结束

16:37.590 --> 16:38.630
那么出了循环

16:38.630 --> 16:39.510
出了循环说明

16:39.510 --> 16:40.710
说明没有返回

16:40.710 --> 16:41.430
没有返回的话

16:41.670 --> 16:42.870
他就一定是其中数组

16:43.750 --> 16:45.030
他就一定不是其中数组

16:47.110 --> 16:47.830
还说写完了

16:47.830 --> 16:48.550
来测试一下

16:48.550 --> 16:49.190
测试一下

16:51.220 --> 16:51.380
好

16:51.380 --> 16:51.780
照理呢

16:51.780 --> 16:53.140
我去建立一个

16:54.020 --> 16:55.620
其中数组和一个非其中数组

16:58.180 --> 16:58.740
再来吧

17:00.900 --> 17:01.380
Ease

17:02.020 --> 17:02.820
Has

17:02.820 --> 17:03.380
Amity

17:03.860 --> 17:04.580
Amity

17:04.580 --> 17:04.980
In

17:04.980 --> 17:05.380
Array

17:06.020 --> 17:08.020
虽然好像这个函数的名字很长

17:08.020 --> 17:08.340
但是呢

17:08.340 --> 17:09.860
其实这个函数很好记忆的

17:09.860 --> 17:10.100
对吧

17:10.100 --> 17:10.900
四个单词

17:10.900 --> 17:11.380
而且呢

17:11.380 --> 17:12.420
他语句是通顺的

17:13.700 --> 17:15.060
数组给他

17:15.060 --> 17:15.780
数组给他

17:15.780 --> 17:16.980
比方说六一个Array

17:16.980 --> 17:18.260
六一个Array

17:18.260 --> 17:18.580
3

17:19.540 --> 17:19.860
好

17:20.580 --> 17:21.700
长对3的Array

17:21.700 --> 17:22.820
那这个肯定是其中数组

17:22.820 --> 17:23.460
对吧

17:23.460 --> 17:23.620
好

17:23.620 --> 17:23.940
看一下

17:25.940 --> 17:26.500
去

17:26.500 --> 17:27.460
是一个其中数组

17:28.100 --> 17:28.580
好

17:28.580 --> 17:28.980
然后呢

17:28.980 --> 17:29.540
我给他一个

17:30.740 --> 17:31.780
给他一个正常的数组

17:34.500 --> 17:35.220
正常的数组呢

17:35.220 --> 17:35.540
有的时候

17:35.540 --> 17:36.820
把它叫做紧密数组

17:37.380 --> 17:37.860
就里边

17:38.500 --> 17:39.140
下标呢

17:39.140 --> 17:39.620
秘密码吧

17:39.620 --> 17:40.180
都有东西

17:40.180 --> 17:41.060
每个下标位置呢

17:41.060 --> 17:41.620
都有东西

17:42.340 --> 17:42.660
好

17:42.660 --> 17:43.220
看一下啊

17:44.100 --> 17:44.580
force

17:44.580 --> 17:45.540
它不是其中数组

17:46.260 --> 17:46.820
好

17:46.820 --> 17:47.460
测试一下啊

17:47.460 --> 17:48.180
稍微测试一下

17:48.180 --> 17:48.660
没问题的

17:49.780 --> 17:49.940
好

17:49.940 --> 17:50.820
这是关于

17:50.820 --> 17:51.940
是否是其中数组

17:51.940 --> 17:52.180
啊

17:54.500 --> 17:54.660
好

17:54.660 --> 17:55.540
有同学在说啊

17:55.540 --> 17:56.340
在说这个问题

17:57.860 --> 17:58.580
我们这边呢

17:58.580 --> 17:59.380
是打了注释的

17:59.380 --> 18:00.020
你看没

18:00.020 --> 18:00.660
打了注释的

18:01.860 --> 18:02.580
为啥

18:03.700 --> 18:04.500
为啥这边

18:05.060 --> 18:05.860
看不到注释呢

18:06.580 --> 18:07.940
为啥这边看不到注释呢

18:08.820 --> 18:09.620
这个没办法

18:09.620 --> 18:10.260
没办法

18:10.820 --> 18:11.860
嗯

18:11.860 --> 18:13.060
以后呢

18:13.060 --> 18:14.420
咱们学了

18:14.420 --> 18:16.100
前端学了更多的东西过后

18:16.100 --> 18:16.900
可以办到

18:16.900 --> 18:17.780
啊可以办到

18:17.780 --> 18:19.220
在不同的文件里边

18:19.220 --> 18:20.980
他们之间相互关联之后啊

18:20.980 --> 18:22.500
引用了另外一个文件之后

18:22.500 --> 18:23.460
我们也可以看到

18:23.460 --> 18:24.500
他的注释

18:24.500 --> 18:24.660
啊

18:24.660 --> 18:25.620
他的智能提示

18:26.340 --> 18:27.060
啊这里呢

18:27.060 --> 18:28.100
现在没办法啊

18:28.100 --> 18:28.900
现在没办法

18:28.900 --> 18:29.300
以后呢

18:29.300 --> 18:30.340
我们可以做到啊

18:30.340 --> 18:31.540
以后需要更多的知识

18:32.660 --> 18:32.980
啊

18:33.620 --> 18:34.340
这是这个题啊

18:35.780 --> 18:36.660
第七题

18:36.660 --> 18:37.700
写一个函数

18:37.700 --> 18:39.140
判断该年呢

18:39.140 --> 18:41.060
是不是润年

18:41.060 --> 18:42.020
啊判断该年

18:42.020 --> 18:42.740
是不是润年

18:43.380 --> 18:43.860
好来呗

18:44.420 --> 18:44.740
来呗

18:45.620 --> 18:46.020
方形

18:46.660 --> 18:47.220
啊

18:47.220 --> 18:47.860
isn't it

18:48.420 --> 18:48.500
啊

18:48.500 --> 18:49.060
isn't it

18:50.180 --> 18:50.420
啊

18:50.900 --> 18:52.340
表示是不是润年

18:52.340 --> 18:53.140
好首先想一想

18:53.140 --> 18:53.860
有没有参数

18:54.580 --> 18:55.860
这个函数有没有参数呢

18:56.980 --> 18:57.780
有没有参数啊

18:59.140 --> 19:00.260
肯定有参数了

19:00.260 --> 19:01.300
一把这个函数呢

19:01.300 --> 19:02.180
想象成立自己

19:02.980 --> 19:03.540
啊

19:03.540 --> 19:04.500
你再来

19:04.500 --> 19:06.020
你来帮我判断一个

19:06.020 --> 19:06.820
判断是不是润年

19:06.820 --> 19:07.060
来

19:07.060 --> 19:07.940
告诉我是不是润年

19:08.660 --> 19:09.860
你没法判断

19:09.860 --> 19:10.340
为啥呢

19:10.340 --> 19:12.180
我还没给你一个年对吧

19:12.180 --> 19:13.060
年都没给你

19:13.060 --> 19:13.940
你怎么能判断呢

19:15.220 --> 19:16.180
所以说这里呢

19:16.180 --> 19:17.460
有一个参数就是年

19:18.820 --> 19:20.420
你把年给我

19:20.420 --> 19:22.420
我来帮你判断这个年呢

19:22.420 --> 19:23.300
是不是润年

19:23.300 --> 19:24.420
当然返回的是什么

19:24.420 --> 19:25.300
返回的是不

19:25.300 --> 19:26.580
啊你看这个描述

19:26.580 --> 19:28.260
什么返回是不是

19:28.260 --> 19:30.020
有没有存不存在

19:30.020 --> 19:30.900
这些都是不

19:30.900 --> 19:31.700
而对吧

19:31.700 --> 19:32.100
啊

19:32.100 --> 19:32.820
返回的是不

19:33.780 --> 19:34.580
好那么这里呢

19:35.220 --> 19:35.780
怎么显呢

19:35.780 --> 19:37.140
就是判断

19:37.700 --> 19:38.260
某年

19:38.980 --> 19:41.380
某年是不是润年

19:42.500 --> 19:43.700
好怎么判断呢

19:43.700 --> 19:44.820
就是连给力了

19:44.820 --> 19:45.300
对吧

19:45.300 --> 19:46.180
连给力了

19:46.180 --> 19:47.620
我来判断他是不是润年

19:47.620 --> 19:48.900
润年之前怎么说的啊

19:49.540 --> 19:50.900
四年一润

19:51.860 --> 19:53.700
然后百年不润

19:56.420 --> 19:56.740
不润

19:57.380 --> 19:57.940
然后呢

19:57.940 --> 19:59.220
四百年一润

20:00.100 --> 20:00.660
换句话说

20:00.660 --> 20:01.540
就是两个条件

20:01.540 --> 20:04.180
两个条件取获责

20:04.180 --> 20:04.500
对吧

20:04.500 --> 20:05.460
取获责

20:05.460 --> 20:06.420
第一个条件呢

20:06.500 --> 20:07.300
条件一啊

20:07.300 --> 20:08.980
条件一是

20:08.980 --> 20:12.340
连了储益式的余数等于零

20:12.340 --> 20:13.380
就能被试整出

20:13.380 --> 20:14.820
四年一润嘛

20:14.820 --> 20:15.220
并且呢

20:15.220 --> 20:16.100
百年是不润的

20:16.100 --> 20:17.540
就是储益百的余数呢

20:17.540 --> 20:18.660
是不能等于零的

20:20.180 --> 20:20.260
好

20:20.260 --> 20:21.540
这是第一个条件

20:21.540 --> 20:21.700
好

20:21.700 --> 20:22.340
好第一个条件

20:22.340 --> 20:24.100
跟第二个条件之间取获责

20:24.100 --> 20:24.740
啊

20:24.740 --> 20:25.300
有

20:25.300 --> 20:26.340
运算虎优先级呢

20:26.340 --> 20:27.540
他是他要高一些

20:27.540 --> 20:28.580
他要低一些

20:28.580 --> 20:28.660
啊

20:28.660 --> 20:30.580
所以说他会先算他啊

20:30.580 --> 20:31.860
他当成一个整体的算

20:31.860 --> 20:33.460
算完了过后再取获责

20:33.460 --> 20:34.180
好获责了

20:34.180 --> 20:36.340
另一个条件就是四百年一润

20:36.660 --> 20:38.180
除以四百的余数呢

20:38.180 --> 20:38.660
等于零

20:39.540 --> 20:40.580
好

20:40.580 --> 20:42.580
如果这个条件满足

20:42.580 --> 20:43.540
整个条件满足

20:43.540 --> 20:44.740
是不是润连

20:44.740 --> 20:45.380
对吧

20:45.380 --> 20:46.100
润连吧

20:46.100 --> 20:46.660
返回啥

20:46.660 --> 20:47.220
返回去

20:47.220 --> 20:47.460
对吧

20:48.260 --> 20:49.060
返回去

20:49.060 --> 20:49.620
然后呢

20:49.620 --> 20:50.260
不是润连

20:50.260 --> 20:51.300
返回force

20:51.300 --> 20:52.340
不用写ls

20:52.340 --> 20:53.540
不用写ls

20:53.540 --> 20:54.340
为啥不用写

20:54.340 --> 20:55.620
因为金的一幅

20:55.620 --> 20:57.220
他就一定结束了

20:57.220 --> 20:58.660
会运行后边的

20:58.660 --> 20:59.220
金的一幅

20:59.220 --> 20:59.940
他就一定结束

20:59.940 --> 21:01.380
整个汉数了

21:01.380 --> 21:01.860
反之呢

21:01.860 --> 21:02.420
没有金的一幅

21:02.420 --> 21:04.180
他就一定返回force

21:04.180 --> 21:05.220
对吧

21:05.220 --> 21:05.940
其实这样子写

21:05.940 --> 21:07.060
我之前说过

21:07.060 --> 21:08.660
在公司里面是要m2的

21:08.660 --> 21:09.460
是要m2的

21:09.460 --> 21:10.500
不要这样子写

21:10.500 --> 21:11.620
你看这个表达式

21:11.620 --> 21:12.980
你这个处

21:12.980 --> 21:14.660
跟这个表达式是不一样的

21:14.660 --> 21:15.220
对吧

21:15.220 --> 21:16.260
是一致的

21:16.260 --> 21:16.900
它的结果

21:16.900 --> 21:18.100
它这个表达式为处

21:18.100 --> 21:18.740
它就返回处

21:18.740 --> 21:21.140
那你直接把这个表达式返回不完了吗

21:21.140 --> 21:21.780
对吧

21:21.780 --> 21:23.620
你直接把这个表达式返回就完了

21:24.580 --> 21:26.260
这判断是不是润连

21:26.260 --> 21:27.540
虽然代码很简单

21:27.540 --> 21:28.420
只有一行

21:28.420 --> 21:29.620
但是那以后判断润连

21:29.620 --> 21:31.300
我们是不是邪法上

21:31.300 --> 21:32.420
更加舒服了

21:32.420 --> 21:33.700
以后你判断润连的时候

21:33.700 --> 21:34.820
你看一下

21:34.900 --> 21:36.820
以后我们判断润连的时候

21:39.940 --> 21:41.220
用这种邪法

21:41.220 --> 21:42.260
用这种邪法

21:42.260 --> 21:42.980
判断一个连

21:42.980 --> 21:45.060
比方说2000年是不是润连

21:45.060 --> 21:46.340
一直是leap

21:46.340 --> 21:48.660
2000年

21:48.660 --> 21:49.700
你看一下这个代码

21:49.700 --> 21:50.420
是不是

21:50.420 --> 21:51.940
真的好舒服

21:51.940 --> 21:52.980
是不是

21:52.980 --> 21:54.580
更加容易阅读了

21:54.580 --> 21:56.420
一直是不是leap

21:56.420 --> 21:58.180
润连2000

21:58.180 --> 21:59.780
2000是不是润连

21:59.780 --> 22:01.140
它这样子写

22:01.140 --> 22:02.020
就比例

22:02.020 --> 22:03.220
到时候这样子写

22:03.300 --> 22:05.300
舒服太多太多了

22:05.300 --> 22:06.980
到时候你看这个代码

22:06.980 --> 22:08.260
你能一眼看出

22:08.260 --> 22:09.380
它在干嘛

22:09.380 --> 22:10.500
你看不出来

22:10.500 --> 22:10.980
对吧

22:10.980 --> 22:12.180
而且很繁琐

22:12.180 --> 22:13.620
很容易写错

22:13.620 --> 22:14.740
但是这个代码

22:14.740 --> 22:15.620
很舒服

22:15.620 --> 22:16.420
又好阅读

22:16.420 --> 22:17.300
又简单

22:17.300 --> 22:18.980
而且以后判断润连的时候

22:18.980 --> 22:20.660
反复使用就行了

22:20.660 --> 22:22.260
它可以解决重复代码

22:22.260 --> 22:23.540
可以反复的用这个函数

22:25.380 --> 22:26.340
看一下

22:27.140 --> 22:27.860
2000年

22:27.860 --> 22:28.500
是润连

22:28.500 --> 22:29.220
看不看

22:31.220 --> 22:31.940
有些人说

22:31.940 --> 22:33.540
那我要输出

22:33.540 --> 22:34.980
是润连咋办

22:34.980 --> 22:35.940
我的天啊

22:36.740 --> 22:38.580
真的有可能有同学有这个问题

22:38.580 --> 22:39.300
is leap

22:39.300 --> 22:40.660
自己输出完了

22:40.660 --> 22:40.900
对吧

22:40.900 --> 22:43.140
它反回来是q或者是force

22:43.140 --> 22:44.500
如果是润连

22:44.500 --> 22:45.460
你看这个读

22:45.460 --> 22:46.340
这个代码读出来

22:46.340 --> 22:47.540
读起来都舒服

22:47.540 --> 22:51.060
如果是一个润连

22:52.100 --> 22:53.060
你看这个

22:53.060 --> 22:54.660
包括函数秘密

22:54.660 --> 22:56.340
为什么我要这样秘密

22:56.340 --> 22:58.020
你看这个读出来是不是很舒服

22:58.020 --> 22:59.300
if is leap

23:00.260 --> 23:02.020
如果是一个润连

23:02.020 --> 23:03.620
我们清个礼器

23:03.620 --> 23:05.220
韩语的读法

23:05.220 --> 23:08.020
韩语的韩语英语的读法

23:08.020 --> 23:09.780
都可以把它读出来

23:09.780 --> 23:11.460
2000年如果是一个润连

23:11.460 --> 23:12.740
我们就输出是润连

23:12.740 --> 23:14.420
是润连

23:14.420 --> 23:16.740
那润连

23:16.740 --> 23:18.180
else呢

23:18.180 --> 23:20.100
就是我们输出视频连

23:20.100 --> 23:21.380
视频连

23:22.900 --> 23:24.020
保存

23:24.020 --> 23:25.620
你看我们用法了

23:25.620 --> 23:26.820
就非常非常灵活

23:26.820 --> 23:29.220
因为函数它本来就具有通用性

23:29.300 --> 23:30.740
它可以用在各种地方

23:30.740 --> 23:32.020
可以用在各种地方

23:32.020 --> 23:34.020
它这里边并没有去关心什么输出

23:34.020 --> 23:34.580
对吧

23:34.580 --> 23:35.860
输出输入都没关心

23:35.860 --> 23:36.660
你给我一个东西

23:36.660 --> 23:38.500
我来帮你判断是不是润连

23:39.460 --> 23:41.300
那如果让用户输入一个连份

23:41.300 --> 23:42.660
来判断是不是润连的

23:42.660 --> 23:43.940
你看着

23:43.940 --> 23:45.460
我就这样子写呗

23:45.460 --> 23:46.820
就是你走

23:46.820 --> 23:48.100
这个东西从哪来的

23:48.100 --> 23:49.620
这个数字从哪来的

23:49.620 --> 23:50.980
没关系

23:50.980 --> 23:52.340
一点关系都没有

23:55.460 --> 23:58.740
请输入一个连份

23:58.820 --> 23:59.700
看着

24:00.820 --> 24:02.260
连份输出输了

24:02.260 --> 24:03.460
2000年

24:03.460 --> 24:04.740
十准年

24:04.740 --> 24:05.140
对吧

24:05.140 --> 24:06.020
没问题吧

24:06.020 --> 24:08.180
2004年十准年

24:08.180 --> 24:10.180
2005年

24:10.180 --> 24:11.140
嗯

24:11.140 --> 24:12.820
2005年有问题是吧

24:12.820 --> 24:13.940
哦这里哦

24:13.940 --> 24:15.780
这里没有传这个参数进去

24:15.780 --> 24:16.660
把这个

24:16.660 --> 24:18.500
把这个变量传过去

24:18.500 --> 24:19.220
不就完了吗

24:19.220 --> 24:19.780
对吧

24:19.780 --> 24:21.140
2005年

24:21.140 --> 24:22.020
视频连

24:22.020 --> 24:22.580
啊

24:22.580 --> 24:24.740
2004年

24:24.740 --> 24:25.780
是不是

24:25.780 --> 24:27.940
2004应该是2004

24:28.020 --> 24:29.220
2004

24:29.220 --> 24:30.020
视频连

24:30.020 --> 24:30.900
好这里有问题啊

24:30.900 --> 24:31.860
这里有问题

24:31.860 --> 24:33.300
2004的话

24:33.300 --> 24:34.100
isn't it

24:34.100 --> 24:35.780
isn't it

24:35.780 --> 24:37.620
看一下啊

24:39.620 --> 24:40.900
2004

24:40.900 --> 24:42.180
我们这里输出一下啊

24:42.180 --> 24:43.220
调试一下

24:43.220 --> 24:44.820
把这个连份输出啊

24:44.820 --> 24:45.300
输出

24:45.300 --> 24:47.220
看一下得到的是啥

24:47.220 --> 24:49.060
2004

24:49.060 --> 24:51.060
它得到的结果是频连

24:51.060 --> 24:52.180
那么这里的参数呢

24:52.180 --> 24:52.980
就是有的时候啊

24:52.980 --> 24:54.020
我们之前

24:54.020 --> 24:55.220
嗯

24:55.220 --> 24:56.820
好像有一个章节没有讲调试

24:56.820 --> 24:56.980
对吧

24:56.980 --> 24:57.700
没有讲调试

24:57.700 --> 24:59.060
ok 我后面补入一个章节

24:59.060 --> 25:00.580
放到前边讲一下调试

25:00.580 --> 25:01.700
调试的话就是

25:01.700 --> 25:02.980
你在控制台里边啊

25:02.980 --> 25:03.380
可以

25:03.380 --> 25:04.580
其中有有两种方式对吧

25:04.580 --> 25:05.220
我当时说的

25:05.220 --> 25:05.940
一个是控制台

25:05.940 --> 25:06.820
一个是打断点啊

25:06.820 --> 25:07.220
都可以

25:07.220 --> 25:07.940
都可以

25:07.940 --> 25:08.660
啊我这里很简单

25:08.660 --> 25:09.140
难得

25:09.140 --> 25:10.500
难得去弄断点了

25:10.500 --> 25:11.220
嗯这里呢

25:11.220 --> 25:11.620
调试

25:13.060 --> 25:14.340
就是我们在这里呢

25:14.340 --> 25:15.540
可以得到啊

25:15.540 --> 25:16.100
连份

25:16.100 --> 25:17.300
它传怪的数据

25:17.300 --> 25:18.580
看一下数据这么正确

25:18.580 --> 25:19.860
数据是正确的对吧

25:19.860 --> 25:21.700
数据是2004年

25:21.700 --> 25:22.420
2004年

25:22.420 --> 25:23.540
应该是一个润年啊

25:23.540 --> 25:24.260
是一个润年

25:24.260 --> 25:25.300
而且它怎么判断出来

25:25.300 --> 25:26.260
是这个样子呢

25:26.340 --> 25:27.460
好我们来看一下啊

25:27.460 --> 25:29.700
2004除一4的余数

25:29.700 --> 25:31.300
啊等于0

25:31.300 --> 25:33.060
啊哦这里写错了对吧

25:33.060 --> 25:34.100
怎么等于10了

25:34.100 --> 25:35.220
啊怎么等于10了

25:35.220 --> 25:36.180
应该是等于0

25:36.180 --> 25:37.460
啊这里写错了

25:37.460 --> 25:39.300
好保存看一下啊

25:39.300 --> 25:40.100
2004

25:41.220 --> 25:42.420
还有问题

25:42.420 --> 25:43.620
还有问题刷新识啊

25:43.620 --> 25:44.660
应该是没刷新

25:44.660 --> 25:45.860
2004

25:45.860 --> 25:47.140
好还有问题

25:47.140 --> 25:49.780
2004除一4的余数是等于0的

25:49.780 --> 25:51.940
2004除100的余数

25:52.820 --> 25:53.860
呃是

25:54.820 --> 25:56.180
百年补润啊

25:56.180 --> 25:56.900
百年补润

25:56.900 --> 25:57.780
这里是不等于

25:57.780 --> 25:58.580
啊这里写错了

25:59.620 --> 26:00.180
好保存

26:01.220 --> 26:02.420
啊2004

26:02.420 --> 26:03.140
十准连了

26:03.140 --> 26:03.780
啊没问题了

26:03.780 --> 26:05.300
啊刚才有一个地方写错了

26:05.300 --> 26:05.940
啊是平面

26:07.220 --> 26:07.940
好你看

26:07.940 --> 26:09.220
这样子是不是写完了

26:09.220 --> 26:09.860
写完了过后呢

26:09.860 --> 26:10.980
你看你想啊

26:10.980 --> 26:12.660
就这里面可以传真和东西

26:13.540 --> 26:14.580
能不能传一个表达式

26:15.300 --> 26:16.580
可不可以传一个表达式

26:16.580 --> 26:17.140
可以

26:18.180 --> 26:20.260
我甚至可以把这个玩意都传进来

26:20.260 --> 26:20.820
可不可以

26:21.620 --> 26:22.180
可以

26:22.820 --> 26:23.380
可以的

26:24.180 --> 26:24.820
什么意思呢

26:25.380 --> 26:27.140
判断是不是说连判断谁呢

26:27.140 --> 26:29.620
判断用户输入的结果啊

26:29.620 --> 26:30.900
先让用户输入

26:30.900 --> 26:31.620
先运行这个

26:32.500 --> 26:34.660
好运行完了过后把用户的输入转成

26:34.660 --> 26:35.300
转成什么了

26:35.300 --> 26:36.020
转成数字

26:36.020 --> 26:37.220
作为参数传进去

26:37.940 --> 26:39.140
可以咋传都可以

26:39.700 --> 26:40.100
保存

26:40.900 --> 26:41.300
你看着

26:41.940 --> 26:43.060
是一样的啊

26:43.060 --> 26:43.940
一样的

26:43.940 --> 26:44.500
两千年

26:46.790 --> 26:47.430
一样的啊

26:48.310 --> 26:49.670
啊这是关于这一块啊

26:50.230 --> 26:51.190
就是灵活运用

26:51.190 --> 26:52.870
因为我们有表达式的知识

26:52.870 --> 26:53.590
我们说

26:53.590 --> 26:54.630
函数的调用

26:54.630 --> 26:55.590
他就是个表达式

26:55.590 --> 26:56.470
没什么特别的

26:57.670 --> 26:58.390
好下一个啊

26:59.430 --> 27:01.190
写写一个函数

27:01.510 --> 27:02.710
得到某连

27:03.670 --> 27:04.470
某月的

27:05.110 --> 27:05.670
天数

27:06.070 --> 27:07.750
得到某连某月的天数

27:08.630 --> 27:09.270
好ok

27:09.270 --> 27:10.230
我们写这么一个函数

27:12.780 --> 27:13.820
一个函数啊

27:14.300 --> 27:16.140
给他取个名字叫做get this

27:16.140 --> 27:16.860
get this

27:17.660 --> 27:19.340
得到某连某月的天数

27:19.340 --> 27:19.660
好

27:20.140 --> 27:20.700
来吧

27:20.700 --> 27:22.300
你把你自己想象成这个函数

27:23.100 --> 27:24.220
我让你来做这个事

27:24.380 --> 27:25.820
来你告诉我有多少天

27:26.220 --> 27:27.580
来马上回答我多少天

27:28.380 --> 27:29.180
没法回答

27:29.180 --> 27:30.140
你少了什么东西

27:30.940 --> 27:31.900
少了什么信息

27:32.700 --> 27:33.740
是不是一个连

27:34.060 --> 27:35.020
一个月啊

27:35.500 --> 27:37.100
你告诉我连和月

27:37.100 --> 27:38.940
我才能确定这个月的天数

27:39.260 --> 27:41.100
你都不告诉我我怎么来确定的

27:41.100 --> 27:41.580
对吧

27:41.740 --> 27:43.980
所以说你他需要两个参数

27:43.980 --> 27:46.620
一个是连一个是月啊

27:46.780 --> 27:48.140
一个是连一个是月

27:49.180 --> 27:49.500
好

27:50.460 --> 27:54.460
得到某连某月的天数

27:54.460 --> 27:56.300
得到某连某月的天数

27:57.100 --> 27:57.500
好

27:57.500 --> 27:58.300
怎么来判断呢

27:58.300 --> 27:59.820
一年就12个月

27:59.820 --> 28:01.500
不能跑出第13个月吧

28:01.500 --> 28:02.940
他也不能少于12个月吧

28:02.940 --> 28:03.340
对吧

28:03.340 --> 28:04.860
一年只能是12个月

28:04.860 --> 28:05.980
只能是12个月

28:06.540 --> 28:06.780
好

28:06.780 --> 28:08.380
那么我们这里呢

28:08.380 --> 28:09.420
就分几种情况

28:09.420 --> 28:09.820
因为

28:10.860 --> 28:11.980
2月比较特殊嘛

28:11.980 --> 28:12.220
对吧

28:12.220 --> 28:13.100
2月比较特殊

28:13.100 --> 28:14.700
所以说我们先判断2月的情况

28:15.420 --> 28:16.220
如果

28:17.100 --> 28:17.900
是2月

28:18.220 --> 28:19.340
如果是2月

28:19.980 --> 28:21.260
这是2月的情况

28:21.580 --> 28:24.060
2月里边是不是有两种情况了

28:24.060 --> 28:25.580
有两种情况对吧

28:25.580 --> 28:26.380
一个是

28:26.940 --> 28:27.820
一个是润年

28:27.820 --> 28:28.620
一个是平年

28:29.740 --> 28:30.300
对不对

28:30.300 --> 28:31.020
一个是润年

28:31.020 --> 28:31.740
一个是平年

28:31.740 --> 28:32.060
好

28:32.060 --> 28:32.540
如果

28:33.820 --> 28:34.780
他是润年

28:34.780 --> 28:35.020
好

28:35.020 --> 28:37.180
润年的话是不是又得重新判断一次呢

28:37.980 --> 28:39.500
是不是又得重新判断一次呢

28:39.500 --> 28:40.460
不用

28:40.460 --> 28:41.980
你之前不有个函数吗

28:41.980 --> 28:42.620
对吧

28:42.620 --> 28:44.540
函数里边就可以

28:44.540 --> 28:45.980
就可以把个函

28:45.980 --> 28:47.260
就是用这个函数

28:47.260 --> 28:47.580
啊

28:47.580 --> 28:48.700
一生立

28:48.860 --> 28:50.380
我们之前刚刚不写那个函数吗

28:50.380 --> 28:51.580
来判断一个把连给他

28:51.580 --> 28:52.540
把连给他

28:53.100 --> 28:53.820
连给你

28:53.820 --> 28:54.060
来

28:54.060 --> 28:55.420
你来帮我判断是不是润年

28:55.980 --> 28:57.740
你看有了函数是不是很简单了

28:57.740 --> 28:58.700
不用重新去

28:58.700 --> 29:00.140
重新去写一次啊

29:00.140 --> 29:01.180
有人说

29:01.180 --> 29:02.380
能这样调用吗

29:02.380 --> 29:03.420
能这样子调用吗

29:03.420 --> 29:04.620
凭什么不能啊

29:04.620 --> 29:06.700
有说函数里边能调用函数吗

29:06.700 --> 29:08.460
那你函数里边能不能写这个呢

29:08.460 --> 29:09.580
你告诉我能不能写这个

29:10.060 --> 29:11.260
那这个不就是函数吗

29:11.740 --> 29:12.780
这不是函数是啥呢

29:13.660 --> 29:14.460
只是这个函数呢

29:14.460 --> 29:15.340
我们现在还没有讲啊

29:15.340 --> 29:16.540
他是放到对象里边的

29:16.540 --> 29:17.740
那他就是个函数啊

29:17.820 --> 29:19.100
他有啥特别的呢

29:19.500 --> 29:19.980
啊

29:19.980 --> 29:21.500
那你都能比调用这个函数

29:21.500 --> 29:23.180
凭什么不能调用自己写的函数呢

29:23.180 --> 29:23.900
是可以的啊

29:23.900 --> 29:24.620
可以的

29:24.620 --> 29:24.860
好

29:24.860 --> 29:25.900
判断一下

29:25.900 --> 29:28.140
如果你是润年啊

29:28.140 --> 29:28.940
连传进去

29:29.580 --> 29:29.740
啊

29:29.740 --> 29:31.660
如果你是如果是二月的情况下啊

29:31.660 --> 29:33.020
大前提是二月

29:33.020 --> 29:33.260
好

29:33.260 --> 29:34.540
如果你是润年的话

29:34.540 --> 29:35.180
怎么样了

29:35.180 --> 29:35.900
多少天

29:35.900 --> 29:37.100
直接返回天数啊

29:37.100 --> 29:38.380
直接返回天数

29:38.380 --> 29:38.940
多少天了

29:38.940 --> 29:39.900
29天

29:39.900 --> 29:40.620
对吧

29:40.620 --> 29:41.660
else呢

29:41.660 --> 29:42.780
返回多少天了

29:42.780 --> 29:44.460
是不是28天啊

29:44.460 --> 29:46.060
不是润年就返回28天

29:46.780 --> 29:47.660
哎

29:47.660 --> 29:49.500
这里有没有更加简洁的写法呢

29:49.500 --> 29:52.100
看着啊

29:52.100 --> 29:56.550
啊

29:56.550 --> 29:59.030
连传进去是不是润年

29:59.030 --> 30:01.990
三目运算服

30:01.990 --> 30:05.030
更加简洁对吧

30:05.030 --> 30:05.670
哎

30:05.670 --> 30:06.710
这东西要用起来啊

30:06.710 --> 30:08.070
如果是润年

30:08.070 --> 30:09.430
你给我返回29天

30:09.430 --> 30:10.470
如果不是润年的话

30:10.470 --> 30:11.590
你给我返回28天

30:11.590 --> 30:13.350
就是返回这个表达式的值

30:13.350 --> 30:14.470
而这个表达式

30:14.470 --> 30:15.670
是不是根据情况来定的

30:15.670 --> 30:16.150
啊

30:16.150 --> 30:17.030
这个表达式的值

30:17.030 --> 30:18.230
是根据情况来定的

30:18.230 --> 30:19.030
如果是润年

30:19.030 --> 30:19.830
得到29

30:20.070 --> 30:21.110
如果是平年

30:21.110 --> 30:21.830
得到28

30:21.830 --> 30:23.430
总之把这个表达式返回

30:23.430 --> 30:25.990
把这个表达式的结果返回

30:25.990 --> 30:27.510
这是2月的情况

30:27.510 --> 30:27.990
好

30:27.990 --> 30:28.870
2月的情况完了

30:28.870 --> 30:29.430
过后了

30:29.430 --> 30:30.550
然后再看什么了

30:30.550 --> 30:32.790
再看其他大月小月对吧

30:32.790 --> 30:33.990
大月小月

30:33.990 --> 30:35.590
小月有哪些

30:35.590 --> 30:37.190
先说

30:37.190 --> 30:38.230
先说大的吧

30:38.230 --> 30:38.950
大月

30:38.950 --> 30:40.070
大月有哪些呢

30:40.070 --> 30:40.870
剩下的就是小月了

30:40.870 --> 30:41.270
对吧

30:41.270 --> 30:43.110
2和大月和小月

30:43.110 --> 30:48.470
大月呢是1 3 5 7 8

30:49.270 --> 30:49.750
10

30:51.030 --> 30:51.590
12

30:51.590 --> 30:52.310
对吧

30:52.310 --> 30:53.590
有这么一些

30:53.590 --> 30:54.390
换句话说了

30:54.390 --> 30:56.150
小大月有哪些呢

30:56.150 --> 30:57.430
就31天的月

30:57.430 --> 30:59.830
就是小于小于8的时候

30:59.830 --> 31:00.630
是基数

31:00.630 --> 31:02.150
大于等于8的时候是偶数

31:02.150 --> 31:02.390
对吧

31:02.390 --> 31:03.910
这样判断起来方便一点

31:03.910 --> 31:05.190
你挨着这些等号的话

31:05.190 --> 31:05.830
也可以啊

31:05.830 --> 31:06.950
就写得多一点

31:06.950 --> 31:08.390
我们可以这样子写

31:08.390 --> 31:10.870
就是约了小于8的时候

31:10.870 --> 31:13.270
并且约是一个基数

31:13.270 --> 31:14.230
除以2

31:14.230 --> 31:15.510
基数是不是判断

31:15.510 --> 31:16.790
基数是不是前面有函数

31:16.790 --> 31:17.110
对吧

31:17.110 --> 31:18.390
1是2的

31:18.390 --> 31:19.670
Mouse

31:19.670 --> 31:21.990
它是一个基数

31:21.990 --> 31:24.790
大于小于8的时候

31:24.790 --> 31:26.070
月份小于8的时候

31:26.070 --> 31:27.350
是一个基数

31:27.350 --> 31:28.630
你看这个读法

31:28.630 --> 31:31.190
小于8并且1是2的是基数

31:31.190 --> 31:32.470
这是第一个条件

31:32.470 --> 31:34.550
或者是什么情况呢

31:34.550 --> 31:36.310
是大于等于8

31:36.310 --> 31:37.590
是偶数

31:37.590 --> 31:38.870
也就说不是基数

31:38.870 --> 31:40.390
感叹号1是2的

31:40.390 --> 31:41.910
有一个人在问

31:41.910 --> 31:43.990
为什么没有判断偶数的

31:43.990 --> 31:45.030
基数判断出来了

31:45.030 --> 31:46.550
偶数是取个感叹号就完事了

31:47.030 --> 31:48.310
不是基数

31:48.310 --> 31:49.910
不是基数

31:49.910 --> 31:51.030
那么这个是不是大约

31:51.030 --> 31:51.590
对吧

31:51.590 --> 31:52.790
Return 31

31:52.790 --> 31:54.310
是不是大约

31:54.310 --> 31:54.790
好

31:54.790 --> 31:56.710
生产的情况是不是小约

31:56.710 --> 31:59.670
Return 30

31:59.670 --> 32:00.550
这样子

32:00.550 --> 32:01.510
这个函数就能

32:01.510 --> 32:02.710
根据不同的情况

32:02.710 --> 32:04.470
来得到不同的结果

32:04.470 --> 32:06.630
得到某年某月的天数

32:06.630 --> 32:07.910
咱们来试一下

32:07.910 --> 32:08.870
有了这个函数过后

32:08.870 --> 32:09.670
后来后面

32:09.670 --> 32:15.030
可以帮我们解决一些问题

32:15.030 --> 32:16.630
得到某年某月的天数

32:16.790 --> 32:18.070
给Dance

32:18.070 --> 32:18.870
测试一下

32:20.470 --> 32:21.030
这里面

32:23.030 --> 32:23.910
写上一个

32:23.910 --> 32:25.190
2000年的2月

32:25.190 --> 32:26.950
那肯定是29天对吧

32:26.950 --> 32:28.230
29天

32:28.230 --> 32:29.110
因为它是润年

32:29.110 --> 32:29.750
对吧

32:29.750 --> 32:30.550
润年

32:30.550 --> 32:32.150
然后了2001年的2月

32:33.110 --> 32:33.670
28天

32:34.950 --> 32:36.390
然后2001年的1月

32:36.390 --> 32:37.350
是不是大约

32:37.350 --> 32:38.310
大约31天

32:40.150 --> 32:42.070
得到某一个月的天数

32:42.070 --> 32:42.790
函数就写好了

32:44.630 --> 32:45.670
你可以感觉到

32:45.830 --> 32:46.710
咱们做函数

32:46.710 --> 32:48.150
相当于是在写啥呢

32:48.150 --> 32:51.030
相当于是在开发一个零件

32:51.030 --> 32:51.350
对吧

32:51.350 --> 32:52.470
开发一些零件

32:52.470 --> 32:53.910
这些零件将来

32:53.910 --> 32:55.350
有一天我们要拼凑起来

32:55.350 --> 32:56.870
就可以把它做成一个有用的东西

32:58.070 --> 32:59.270
就是一些常用的功能

32:59.270 --> 33:00.150
我们可以把

33:00.150 --> 33:01.030
做成函数之后

33:01.030 --> 33:03.030
我们以后用起来就非常方便了

33:03.030 --> 33:03.670
就很舒服

33:04.550 --> 33:05.030
第九题

33:05.990 --> 33:07.110
写一个函数

33:07.110 --> 33:08.070
得到某个数字

33:09.510 --> 33:11.030
得到某个数字数组中

33:11.030 --> 33:13.750
出现次数最多的数字和频率

33:14.070 --> 33:16.150
这个题有点难度

33:16.150 --> 33:18.070
其实就是我们之前做的一个题

33:18.950 --> 33:20.950
就是我们之前做的一个题

33:20.950 --> 33:22.470
就是我们之前在数组里边

33:23.350 --> 33:24.310
数组应用的时候

33:24.310 --> 33:25.590
讲作业的时候

33:25.590 --> 33:26.870
不是有这个玩意吗

33:26.870 --> 33:28.790
可能一些数字找出频率最高的数字

33:28.790 --> 33:29.750
你要得到这个数字

33:29.750 --> 33:30.790
和它出现的频率

33:30.790 --> 33:31.430
对吧

33:31.430 --> 33:32.470
这么之前讲过的

33:33.990 --> 33:34.470
拿来边

33:34.470 --> 33:35.350
我再快速写一遍

33:35.910 --> 33:36.630
再快速写一遍

33:39.820 --> 33:40.300
这个函数

33:41.340 --> 33:42.060
看个名字

33:42.060 --> 33:43.580
get得到top

33:44.220 --> 33:45.820
表示最高的

33:45.820 --> 33:46.860
最高的

33:46.860 --> 33:48.060
这个是减写

33:48.060 --> 33:48.940
frequency

33:48.940 --> 33:50.060
frequency

33:50.060 --> 33:52.140
表示的是频率

33:52.140 --> 33:53.020
频率

33:53.020 --> 33:54.460
innery

33:54.460 --> 33:55.820
表示在数组中

33:55.820 --> 33:57.660
得到数组中出现最高的频率

33:59.180 --> 34:00.060
来写个函数

34:05.450 --> 34:05.690
好

34:05.690 --> 34:06.890
然后打个注射

34:06.890 --> 34:07.770
有没有参数

34:07.770 --> 34:08.810
等下想想有没有参数

34:10.090 --> 34:11.290
有没有参数呢

34:11.290 --> 34:12.250
那肯定的有参数

34:12.250 --> 34:13.690
你得告诉我数组5

34:13.690 --> 34:14.970
你得把数组5告诉我吧

34:15.530 --> 34:15.770
啊

34:16.650 --> 34:18.330
由于这个题我之前是讲过的

34:18.330 --> 34:20.010
只是现在我把它写到函数里边

34:20.010 --> 34:21.370
所以说它的实现过程

34:21.370 --> 34:22.570
我不再细讲了

34:22.570 --> 34:23.450
我就快速写了

34:24.170 --> 34:24.650
得到

34:24.650 --> 34:25.610
如果你不太清楚

34:25.610 --> 34:26.410
它怎么实现的话

34:26.410 --> 34:28.250
你可以查一下之前的啊

34:28.250 --> 34:29.690
咱们在哪里呢

34:29.690 --> 34:30.890
是在数组

34:30.890 --> 34:32.010
数组应用啊

34:32.010 --> 34:33.130
作业讲解这一块

34:33.130 --> 34:34.090
我讲到这道题的

34:34.970 --> 34:36.170
好得到数组中

34:37.370 --> 34:40.090
数组中出现频率

34:40.090 --> 34:42.650
最高的数字和什么

34:43.690 --> 34:44.010
得到

34:44.730 --> 34:47.450
频率出现频率最高的数字和频率

34:47.450 --> 34:48.730
就是我既要得到

34:48.730 --> 34:51.050
哪个数字出现出现最多

34:51.050 --> 34:52.570
又要得到它出现了多少次

34:53.210 --> 34:54.330
我得到这两个东西

34:55.130 --> 34:55.770
一个是要得到

34:56.410 --> 34:57.930
它的哪个数字出现了

34:57.930 --> 34:58.970
频率最高

34:58.970 --> 34:59.450
另外呢

34:59.450 --> 35:00.570
我还要得到什么

35:00.570 --> 35:01.130
还要得到

35:01.690 --> 35:03.210
就是它出现了多少次

35:03.930 --> 35:04.490
哎

35:04.490 --> 35:06.170
我怎么返回两个东西呢

35:07.050 --> 35:08.490
我怎么返回两个东西啊

35:09.370 --> 35:10.810
我没办法返回两个东西

35:11.450 --> 35:13.690
函数是不可能返回两个东西的啊

35:13.770 --> 35:14.650
它只能返回一个

35:15.370 --> 35:17.210
那现在我要返回两个东西怎么办呢

35:17.210 --> 35:18.090
来想一想

35:18.090 --> 35:19.050
先把这个问题想通

35:19.050 --> 35:20.410
先别说怎么去实现

35:21.130 --> 35:22.570
先别说怎么去实现函数

35:22.570 --> 35:23.610
什么叫实现函数

35:23.610 --> 35:25.530
就是开始编写这个函数的内部代码

35:26.730 --> 35:28.330
先不要着急去实现函数啊

35:28.330 --> 35:29.610
咱们先把这个问题想通

35:29.610 --> 35:30.890
我怎么返回两个东西

35:32.650 --> 35:33.210
怎么办呢

35:34.090 --> 35:35.290
有一位很聪明啊

35:35.290 --> 35:36.250
他说返回数组

35:36.970 --> 35:38.170
有一位说返回对象

35:38.890 --> 35:40.010
如果你能想到这个就

35:40.010 --> 35:41.290
非常非常不错了

35:41.290 --> 35:41.850
就这么做

35:41.850 --> 35:42.730
就这么做

35:42.890 --> 35:44.010
通常呢我们这里呢

35:44.010 --> 35:45.050
因为这两个

35:45.050 --> 35:46.970
这两个东西的意识是不一样的

35:46.970 --> 35:48.650
一个是数字一个是频率

35:48.650 --> 35:50.010
它的含义是不一样的

35:50.010 --> 35:51.770
所以说我们通常不用数组

35:51.770 --> 35:54.810
数组呢是把含义相同的放到一起

35:54.810 --> 35:56.570
比方说全班每个同学的分数

35:56.570 --> 35:57.210
对吧

35:57.210 --> 35:58.490
这个东西可以用数组

35:59.370 --> 36:01.050
所有的同学每个同学是个对象

36:01.050 --> 36:01.930
这个可以用数组

36:01.930 --> 36:03.530
把含义相同的放到数组里边

36:03.530 --> 36:05.290
像这种含义是不一样的

36:05.290 --> 36:06.650
一个是数字一个是频率的

36:06.650 --> 36:07.610
我们最好用啥呢

36:08.730 --> 36:09.370
用对象

36:09.690 --> 36:12.810
反回一个对象

36:12.810 --> 36:14.010
反回一个对象

36:17.370 --> 36:19.850
这个对象里边有属性对吧

36:19.850 --> 36:20.650
有属性

36:20.650 --> 36:24.170
属性呢是一个数字

36:24.170 --> 36:25.130
一个频率

36:25.770 --> 36:26.810
好来吧

36:27.930 --> 36:28.730
对象能不能反悔

36:28.730 --> 36:29.450
当然可以反悔

36:29.450 --> 36:30.490
有什么特殊的呢

36:30.490 --> 36:32.010
对象还不是数据对吧

36:32.010 --> 36:32.890
当然可以反悔

36:32.890 --> 36:33.930
当然可以反悔

36:34.650 --> 36:34.970
好

36:34.970 --> 36:36.730
然后呢我们这里来判断

36:36.730 --> 36:37.770
这里边的东西

36:37.770 --> 36:39.130
首先呢我们用一个变量

36:39.130 --> 36:40.250
records

36:40.250 --> 36:41.690
来记录一个对象

36:41.850 --> 36:42.330
来记录

36:44.250 --> 36:46.250
记录出现频率

36:46.250 --> 36:46.970
出现频率

36:46.970 --> 36:48.170
每个数字的出现频率

36:49.370 --> 36:50.410
循环这个数组

36:50.410 --> 36:51.290
循环这个数组

36:56.900 --> 36:58.340
i小于ar.nance

36:58.900 --> 36:59.380
i加加

37:02.780 --> 37:03.500
判断一下

37:04.060 --> 37:05.020
判断一下什么

37:05.020 --> 37:06.780
这个数组的当前这一项

37:06.780 --> 37:07.820
当前这一项

37:07.820 --> 37:07.980
n

37:09.340 --> 37:11.420
把这个n作为属性的名字

37:11.420 --> 37:12.780
作为属性的名字

37:12.780 --> 37:14.380
就把数组的这一个数字拿到

37:14.860 --> 37:15.580
把这个数字呢

37:15.580 --> 37:17.020
作为这个对象的名字

37:17.020 --> 37:18.220
看个名字是不能存在

37:18.700 --> 37:19.660
records

37:19.660 --> 37:20.300
n

37:20.300 --> 37:21.660
这个名字是不能存在

37:22.380 --> 37:24.460
如果这个名字不存在

37:24.460 --> 37:25.260
如果个名

37:25.260 --> 37:26.620
这个属性它不存在

37:26.620 --> 37:27.900
它没有这个属性

37:27.900 --> 37:28.860
它没有这个属性

37:28.860 --> 37:29.980
或者是这样说

37:29.980 --> 37:30.860
这个

37:30.860 --> 37:31.900
就这样子写

37:31.900 --> 37:33.100
这个没有这个属性

37:33.100 --> 37:33.820
没有这个属性

37:35.500 --> 37:37.100
如果没有这个属性的话

37:37.100 --> 37:38.540
是不是给它复制为1

37:38.540 --> 37:38.860
对吧

37:40.540 --> 37:41.180
records

37:41.980 --> 37:43.900
把这个属性的复制为1

37:43.900 --> 37:44.620
它出现了1

37:44.620 --> 37:45.260
第一次

37:45.260 --> 37:46.060
第一次出现

37:46.060 --> 37:47.580
于是呢它现在就有这个属性了

37:49.260 --> 37:50.700
之前我好像不是这样写的对吧

37:50.700 --> 37:51.740
所以说每次呢

37:51.740 --> 37:52.780
你的想法不一样了

37:52.780 --> 37:53.900
其他代码都不太一样

37:53.900 --> 37:56.060
但是整体诗路是一样的

37:56.060 --> 37:57.500
之前我好像是这么写的

37:57.500 --> 37:58.380
好这么写的

37:58.380 --> 37:59.740
就什么时候加1

37:59.740 --> 38:01.420
什么时候频率加1

38:01.420 --> 38:04.140
是这个n存在

38:04.140 --> 38:05.260
存在

38:05.260 --> 38:06.220
并且呢

38:07.260 --> 38:07.660
什么呢

38:09.100 --> 38:09.900
等一下

38:09.900 --> 38:12.060
好像就是这个n它存在

38:12.060 --> 38:12.940
它存在

38:13.580 --> 38:14.700
是这样写吧

38:14.700 --> 38:16.060
然后这里呢

38:16.060 --> 38:17.260
就把n加一下

38:18.620 --> 38:19.820
是这样的没问题吧

38:19.820 --> 38:20.460
也想一想

38:21.420 --> 38:23.100
有没有什么地方没考虑到的

38:23.900 --> 38:25.180
应该是没问题

38:25.180 --> 38:27.260
如果这个属性存在的话

38:27.260 --> 38:28.860
如果这个属性的存在的话

38:28.860 --> 38:29.740
它就加加

38:29.740 --> 38:31.020
如果不存在的话

38:31.020 --> 38:32.060
它就等于1

38:32.060 --> 38:33.260
它就等于1

38:33.260 --> 38:34.620
就看一下这个属性呗

38:36.060 --> 38:37.500
用来记录出现频率的

38:38.140 --> 38:39.100
如果你忘了

38:39.660 --> 38:40.780
其实你不会忘的

38:41.340 --> 38:42.140
如果你忘了

38:42.140 --> 38:43.100
你说明啥了

38:43.100 --> 38:43.900
这个地方

38:43.900 --> 38:44.860
说明了啥

38:44.860 --> 38:48.060
说明了你之后没有自己去把做过一遍

38:48.060 --> 38:49.340
听完了就是扔掉了

38:49.340 --> 38:50.620
你觉得听懂了

38:50.620 --> 38:51.100
听懂了

38:51.100 --> 38:51.580
你后边

38:51.580 --> 38:52.620
如果你这里出现

38:52.620 --> 38:54.220
默默糊糊不懂的情况

38:54.220 --> 38:55.100
你感觉有点晕

38:55.820 --> 38:57.820
那你说明之前没有出去自己去做一遍

38:57.820 --> 38:58.540
你不要骗我

38:59.100 --> 39:00.700
我上过那么多班了

39:00.700 --> 39:01.580
教过这么多学生了

39:01.580 --> 39:03.020
我一定了解你们的心理

39:03.020 --> 39:04.940
你觉得可能听着听着就听懂了

39:04.940 --> 39:06.060
你又没去做一遍

39:06.060 --> 39:06.860
那现在我来

39:06.860 --> 39:07.340
我现在

39:08.060 --> 39:09.020
就是不是在提醒你

39:09.660 --> 39:10.460
别看了

39:10.460 --> 39:11.420
兄弟真的别看了

39:11.420 --> 39:13.100
你把之前的东西搞清楚吧

39:13.100 --> 39:14.060
搞清楚再往后看

39:14.540 --> 39:14.860
好吧

39:16.700 --> 39:17.660
记录出现的频率

39:18.220 --> 39:19.100
如果你做过了

39:19.100 --> 39:21.100
你独立的把它做出来了

39:21.660 --> 39:23.100
那么你有点忘了

39:23.100 --> 39:23.900
那个都没关系

39:23.900 --> 39:25.500
你看一下你马上就回忆写了

39:25.500 --> 39:27.100
因为你自己把做了一遍了

39:27.100 --> 39:28.300
当然做的过程中

39:28.300 --> 39:29.340
做作业的过程中

39:29.340 --> 39:31.180
千万不要像我之前说的那种

39:31.180 --> 39:32.860
就是你老在脑袋里面想

39:32.860 --> 39:33.740
老是怎么写的

39:33.740 --> 39:35.340
当时怎么代码怎么写的

39:35.340 --> 39:36.620
写的有没有写衣服

39:36.620 --> 39:37.420
有没有写 else

39:38.140 --> 39:39.500
你如果这样去完成

39:39.500 --> 39:41.420
我建议你还不如不做

39:41.420 --> 39:42.700
你还不如不做这道题

39:42.700 --> 39:43.820
浪费时间

39:43.820 --> 39:44.620
没有什么意义

39:45.580 --> 39:48.700
你一定要按照思维去把它完成

39:48.700 --> 39:50.460
就是我老是告诉你思维了

39:50.460 --> 39:51.420
思维是什么样子

39:51.420 --> 39:52.300
怎么第一步做什么

39:52.300 --> 39:53.100
第二步做什么

39:53.100 --> 39:54.300
这是思维

39:54.300 --> 39:55.980
思维告诉你拿过后

39:55.980 --> 39:57.180
你把它转换成大一码

39:57.180 --> 39:58.140
这才是最重要的

39:58.780 --> 39:59.580
一开始慢

39:59.580 --> 40:00.620
恼火正常

40:00.620 --> 40:01.980
非常非常非常正常

40:01.980 --> 40:02.540
但是呢

40:02.540 --> 40:04.380
你必须要去经历过这个阶段

40:04.380 --> 40:05.260
必须要去经历

40:07.660 --> 40:08.860
就完了就完了

40:09.420 --> 40:10.940
那么我告诉大家

40:10.940 --> 40:11.980
能不能这样子写

40:11.980 --> 40:12.780
能不能看懂

40:12.780 --> 40:13.260
可不可以

40:13.260 --> 40:14.140
虽然说可不可以

40:14.620 --> 40:15.420
看着啊

40:15.420 --> 40:16.700
我把这个表达式

40:16.700 --> 40:17.900
直接放到这来

40:19.260 --> 40:20.060
可不可以

40:21.100 --> 40:21.820
可不可以

40:22.380 --> 40:23.180
当然可以

40:23.180 --> 40:24.460
为什么不可以呢

40:24.460 --> 40:25.660
为什么不可以呢

40:25.660 --> 40:27.900
把这个表达式的结果

40:27.900 --> 40:29.260
作为属性名

40:29.260 --> 40:31.660
属性名这里用的是属性表达式对吧

40:31.660 --> 40:32.780
综合号码

40:32.780 --> 40:35.340
属性表达式可以写任何东西

40:35.340 --> 40:37.180
它只要刷出来对正确的就行了

40:37.180 --> 40:38.860
只是刚才那种写法呢

40:38.860 --> 40:39.660
不太容易

40:39.660 --> 40:41.180
不太容易阅读这个代码

40:41.180 --> 40:42.460
所以说没有那样的写

40:43.420 --> 40:43.980
好

40:44.060 --> 40:44.700
这样子呢

40:44.700 --> 40:45.500
运行完之后呢

40:45.500 --> 40:47.260
这个我里边得到了什么呢

40:47.260 --> 40:49.340
这个里边我们编写编测试嘛

40:49.340 --> 40:50.300
编写编测试

40:51.340 --> 40:52.300
这里边呢就得到了

40:52.300 --> 40:52.940
把输出啊

40:52.940 --> 40:54.380
编写编测试

40:54.380 --> 40:55.820
好这里边呢就得到了是什么

40:55.820 --> 40:56.620
记录对吧

40:56.620 --> 40:57.580
记录

40:57.580 --> 40:58.620
好咱们来看一下啊

40:59.660 --> 41:00.620
测试一下这个函数

41:02.540 --> 41:04.300
我们直接在这里测试吧

41:04.300 --> 41:05.100
直接在这里测试

41:05.100 --> 41:06.300
get top frequency

41:07.180 --> 41:08.060
给个输出

41:08.060 --> 41:08.860
随便写个

41:08.860 --> 41:09.420
随便写个

41:14.790 --> 41:15.910
好随便写个啊

41:15.910 --> 41:16.790
保存看一下啊

41:17.910 --> 41:18.870
雕用这个函数啊

41:18.870 --> 41:19.910
雕用这个函数

41:19.910 --> 41:20.870
那它里边又输出

41:21.510 --> 41:22.150
得到了

41:22.150 --> 41:23.590
二出现两次啊

41:23.590 --> 41:25.190
二是不是出现两次啊

41:25.190 --> 41:26.150
二出现两次啊

41:26.150 --> 41:26.550
没问题

41:27.670 --> 41:28.470
三出现一次

41:28.470 --> 41:29.190
四出现三次

41:29.190 --> 41:29.990
五出现一次

41:29.990 --> 41:30.950
六出现四次

41:30.950 --> 41:31.750
二十三啊

41:31.750 --> 41:32.310
没问题啊

41:32.310 --> 41:32.630
没问题

41:33.750 --> 41:34.550
好吧

41:34.550 --> 41:36.230
好那么这个记录记录得到了

41:36.230 --> 41:37.270
好接下来干啥

41:38.550 --> 41:39.110
接下来干啥

41:39.110 --> 41:40.390
想一想回忆一下啊

41:40.390 --> 41:41.510
顺便我也回忆一下

41:41.510 --> 41:42.230
我也忘了啊

41:42.230 --> 41:42.630
我也忘了

41:42.630 --> 41:43.110
正常的

41:43.110 --> 41:45.030
但是你之前只要做过的啊

41:45.030 --> 41:45.830
只要你做过的

41:45.830 --> 41:46.950
你就不用怕他

41:47.030 --> 41:48.070
因为你之前都把他做完了

41:48.790 --> 41:49.590
好接下来干啥呢

41:50.710 --> 41:51.190
干嘛了

41:51.910 --> 41:52.550
我想想

41:53.270 --> 41:53.990
我想想

41:53.990 --> 41:54.550
接下来干嘛

41:55.910 --> 41:56.710
接下来

41:56.710 --> 41:57.830
哦对对对对

41:57.830 --> 41:58.870
我用一个对象啊

41:58.870 --> 41:59.910
得到一个对象

41:59.910 --> 42:00.790
对象里边呢

42:01.670 --> 42:02.710
先是ND犯啊

42:02.710 --> 42:03.590
先是ND犯

42:03.590 --> 42:05.510
然后一个一个去记录啊

42:05.510 --> 42:06.790
只要他值比他大的

42:06.790 --> 42:08.070
那么就重新记录一下

42:08.950 --> 42:10.390
啊就是球队大致相当于是

42:11.190 --> 42:12.230
但是这个球队大致呢

42:12.230 --> 42:13.270
跟上面那个不太一样啊

42:13.270 --> 42:14.150
我这里是用对象

42:15.350 --> 42:15.910
Results

42:16.630 --> 42:17.590
一个对象啊

42:17.590 --> 42:18.150
ND犯

42:19.590 --> 42:20.710
这是用来记录的啊

42:20.710 --> 42:23.030
记录最终结果的

42:23.030 --> 42:25.030
最终结果的对象

42:25.030 --> 42:25.430
最后呢

42:25.430 --> 42:27.350
我们返回的时候就返回这个对象啊

42:27.350 --> 42:29.270
到时候我们返回的时候就返回了对象

42:29.270 --> 42:30.230
记录最终结果

42:31.110 --> 42:31.830
好了来呗

42:33.190 --> 42:34.630
好这个对象拿到了

42:34.630 --> 42:35.750
然后呢怎么办呢

42:35.750 --> 42:37.110
我就去循环啊

42:37.110 --> 42:39.030
循环这个这个对象啊

42:39.030 --> 42:39.750
循环这个对象

42:40.550 --> 42:41.910
循环这个records

42:41.910 --> 42:43.830
就是这个记录这个对象啊

42:43.830 --> 42:45.110
用for in循环

42:45.190 --> 42:47.350
循环它的每一个属性啊每一个属性

42:48.550 --> 42:49.110
records

42:51.720 --> 42:53.160
循环这里的每一个属性

42:53.880 --> 42:55.720
好循环的时候呢

42:57.560 --> 42:58.920
然后我要干嘛呢

42:58.920 --> 43:01.160
如果这个results呢

43:01.160 --> 43:02.920
什么情况要给它重新复制

43:02.920 --> 43:04.520
就给这个results重新复制呢

43:04.520 --> 43:05.480
就它不存在

43:05.480 --> 43:06.840
它没东西啊

43:06.840 --> 43:08.520
这个对象是空的啊

43:08.520 --> 43:09.320
没东西

43:09.320 --> 43:10.200
如果它不存在

43:10.920 --> 43:12.520
或者是什么情况呢

43:12.520 --> 43:14.120
或者是它存在

43:14.120 --> 43:14.840
但是呢

43:14.920 --> 43:17.160
现在呢这个基督里边的什么

43:17.160 --> 43:18.600
这个属性值

43:18.600 --> 43:19.880
它出现的次数

43:19.880 --> 43:21.000
大于了

43:22.040 --> 43:23.480
这个对象里边的什么

43:23.480 --> 43:25.080
frequency

43:26.200 --> 43:27.000
frequency

43:28.200 --> 43:29.000
这样写的

43:29.000 --> 43:29.960
frequency

43:29.960 --> 43:30.760
比较大于了

43:30.760 --> 43:31.880
大于了它的频率

43:31.880 --> 43:33.320
大于它的频率

43:33.320 --> 43:34.600
那么这种情况下呢

43:34.600 --> 43:36.120
我就给它重新复制

43:36.120 --> 43:37.080
复制为一个对象

43:37.080 --> 43:37.640
看没

43:37.640 --> 43:39.160
给变量复制为一个对象

43:39.160 --> 43:40.600
对象里边记录什么

43:40.600 --> 43:41.720
记录它数字

43:41.720 --> 43:43.240
数字是什么呢

43:43.240 --> 43:45.480
数字是prob

43:46.440 --> 43:47.480
就这个属性就是数字

43:47.480 --> 43:47.720
对吧

43:47.720 --> 43:49.160
二出现二次

43:49.160 --> 43:50.280
三出现一次

43:50.280 --> 43:51.000
啊

43:51.000 --> 43:52.680
这个属性就是它的数字

43:52.680 --> 43:53.000
然后呢

43:53.000 --> 43:55.640
它的它的出现频率frequency

43:55.640 --> 43:56.680
它的是什么呢

43:57.640 --> 43:59.000
出现频率是多少呢

43:59.000 --> 44:01.000
是这个属性的值

44:01.000 --> 44:02.120
属性的值

44:02.680 --> 44:04.200
这一块要好好理一下啊

44:05.000 --> 44:05.160
啊

44:05.160 --> 44:05.640
当然呢

44:05.640 --> 44:06.520
这是之前的东西啊

44:06.520 --> 44:08.120
我又不再挤人多扯了

44:08.120 --> 44:08.840
好就完了啊

44:08.840 --> 44:09.160
最后呢

44:09.160 --> 44:10.120
我们返回这个是吧

44:10.120 --> 44:11.160
返回这个results

44:11.640 --> 44:12.200
return

44:12.200 --> 44:12.760
results

44:13.480 --> 44:13.880
返回

44:15.080 --> 44:17.160
其实我们就可以在这里测试对吧

44:17.160 --> 44:18.440
可以直接在这里测试

44:18.440 --> 44:19.320
算了还是写过来吧

44:20.760 --> 44:21.000
好

44:21.960 --> 44:23.080
得到啊

44:23.080 --> 44:23.480
这是

44:24.760 --> 44:25.400
叫它名字

44:25.400 --> 44:26.440
叫它名字

44:26.440 --> 44:28.680
get top frequency in array

44:29.400 --> 44:30.120
给它个数组啊

44:30.120 --> 44:30.760
给它个数组

44:30.760 --> 44:31.480
随便写一个

44:31.480 --> 44:32.040
随便写一个

44:33.000 --> 44:33.560
给它个数组

44:34.680 --> 44:34.920
好

44:34.920 --> 44:35.320
保存

44:35.320 --> 44:36.440
看一下得到的结果

44:36.440 --> 44:37.240
你看得到的结果

44:37.240 --> 44:38.200
它告诉你得到了

44:38.200 --> 44:38.920
结果呢

44:38.920 --> 44:40.040
是一个数字4

44:40.200 --> 44:41.160
数字4

44:41.160 --> 44:41.640
然后呢

44:42.680 --> 44:43.880
出现次数为4

44:44.440 --> 44:45.880
好这里还有个小问题就是

44:45.880 --> 44:46.520
这个数字呢

44:46.520 --> 44:47.560
它是字不串啊

44:47.560 --> 44:48.520
它字不串的也行

44:48.520 --> 44:49.880
我给你稍微转换一下

44:50.760 --> 44:51.560
稍微转换一下

44:52.120 --> 44:52.920
前面写个加号

44:52.920 --> 44:53.480
是不是就完了

44:53.480 --> 44:53.960
对吧

44:53.960 --> 44:54.600
加号

44:54.600 --> 44:55.800
来把它转换成数字

44:56.440 --> 44:56.760
好

44:56.760 --> 44:57.240
保存

44:57.240 --> 44:57.560
看一下

44:59.000 --> 44:59.240
OK

44:59.960 --> 45:00.760
就完事了

45:00.760 --> 45:01.640
好

45:01.640 --> 45:03.320
这里面出现次数最多的

45:03.320 --> 45:04.280
就是4

45:04.280 --> 45:05.320
它出现了4次

45:06.840 --> 45:07.160
好了

45:07.160 --> 45:08.200
这是这道题

45:10.360 --> 45:11.000
函数啊

45:11.000 --> 45:12.600
咱们这个就写完了

45:12.600 --> 45:12.920
对吧

45:12.920 --> 45:13.720
就写完了

45:13.720 --> 45:14.840
第一题就做完了

45:14.840 --> 45:16.280
第一个大题就做完了

45:16.280 --> 45:16.600
好

45:16.600 --> 45:17.320
第二个题

45:17.320 --> 45:19.960
第二个题没有让你去新建这个介石的

45:19.960 --> 45:21.480
没有让你去新建介石

45:21.480 --> 45:23.080
让你用之前的函数

45:23.080 --> 45:24.120
就写的这些函数

45:24.760 --> 45:26.040
然后来完成一些例子

45:27.000 --> 45:27.880
你会发现了

45:28.520 --> 45:30.040
一些以前看来

45:31.240 --> 45:32.200
很复杂的事情

45:32.760 --> 45:34.120
现在变得最简单了

45:34.840 --> 45:34.920
好

45:34.920 --> 45:35.400
咱们来看

45:35.400 --> 45:36.040
做一下做一个

45:36.600 --> 45:37.080
第一道题

45:38.520 --> 45:38.920
看一下啊

45:39.400 --> 45:40.520
哥德巴哈猜想

45:42.120 --> 45:42.840
以前呢

45:43.400 --> 45:44.680
跟大家说一下啊

45:44.680 --> 45:45.880
我以前我家授课的时候

45:46.520 --> 45:48.760
我会故意的在学函数之前

45:48.760 --> 45:50.920
让他们去做一下哥德巴哈猜想

45:50.920 --> 45:51.160
哇

45:51.160 --> 45:52.840
那个真的是十一大篇人

45:54.280 --> 45:55.480
感觉比登天还难

45:56.680 --> 45:57.320
为什么呢

45:57.320 --> 45:58.680
因为判断字数

45:58.680 --> 45:59.320
判断一个数

45:59.320 --> 46:01.400
是不是数数就已经很难了

46:01.400 --> 46:03.000
就已经很难了

46:03.000 --> 46:03.560
然后呢

46:03.560 --> 46:06.120
再加上什么数数与数数相加

46:06.120 --> 46:07.080
得到什么结果

46:07.080 --> 46:08.200
加上这些逻辑

46:08.920 --> 46:10.520
所以就特别特别难

46:10.520 --> 46:11.720
特别特别难

46:11.720 --> 46:13.160
而且代码很多

46:13.160 --> 46:14.440
揉在一起

46:14.440 --> 46:15.640
很复杂写起来

46:16.440 --> 46:18.440
但是现在有了函数过后

46:19.160 --> 46:20.440
判断数数还难吗

46:20.440 --> 46:20.920
现在

46:20.920 --> 46:22.840
你告诉我判断数数还难吗

46:24.440 --> 46:25.160
判断一个数

46:25.160 --> 46:26.360
是不是数数

46:26.360 --> 46:27.000
还难吗

46:27.800 --> 46:28.840
一点都不难了

46:29.400 --> 46:31.480
而且代码极度容易阅读

46:31.480 --> 46:32.520
非常非常容易阅读

46:33.480 --> 46:35.560
而且代码的量非常非常少

46:35.560 --> 46:37.320
因为很多事情都被函数搞定了

46:37.880 --> 46:38.360
因此呢

46:38.360 --> 46:39.320
你再去做得到的地方

46:39.320 --> 46:40.280
它很简单

46:41.320 --> 46:42.520
什么叫做哥德巴还在想

46:43.400 --> 46:45.160
任何一个大于2的偶数

46:46.280 --> 46:48.120
都可以写成两个字数之合

46:49.000 --> 46:49.560
比方说8

46:50.280 --> 46:51.160
大于2的偶数

46:51.160 --> 46:51.400
对吧

46:51.960 --> 46:53.000
等于3加5

46:53.000 --> 46:53.720
等于3加5

46:54.680 --> 46:55.720
好让用户呢

46:55.720 --> 46:57.560
输入一个大于2的偶数

46:57.560 --> 46:58.520
整数

46:58.520 --> 46:58.920
输出

46:59.800 --> 47:02.440
输出期等于哪两个数数相加

47:02.440 --> 47:03.960
比方说用户输入8

47:03.960 --> 47:05.400
那么你输出3加5

47:06.360 --> 47:07.400
好怎么来做呢

47:11.990 --> 47:13.190
提示用户啊

47:13.190 --> 47:14.390
一开始提示用户

47:14.390 --> 47:15.110
首先我们把这个

47:15.670 --> 47:17.670
肯定要用到之前写的一些函数对吧

47:17.670 --> 47:19.830
所以说我们先把这个之前的函数引用进来

47:19.830 --> 47:21.430
你看我们只需要写一次就完事了

47:21.430 --> 47:22.310
不用重复去写

47:24.630 --> 47:26.070
然后呢得到用户的输入啊

47:26.070 --> 47:26.630
Lumber

47:26.630 --> 47:27.430
用户输入的数字

47:27.990 --> 47:28.790
把转换成数字

47:30.630 --> 47:35.590
请输入一个大于2的偶数

47:35.590 --> 47:36.870
大于2的偶数

47:37.590 --> 47:40.070
它潜力条件必须要是个大于2的偶数

47:40.070 --> 47:42.230
好了来判断一下输入是不正确的

47:42.230 --> 47:43.590
如果你是NAN

47:44.630 --> 47:45.750
或者是什么呢

47:45.750 --> 47:47.270
或者是NAM

47:47.270 --> 47:49.430
小娱乐等于了2

47:49.430 --> 47:50.390
或者是什么呢

47:50.390 --> 47:51.430
或者是NAM

47:51.430 --> 47:52.550
它不是偶数对吧

47:52.550 --> 47:53.430
它就是击数

47:53.430 --> 47:55.030
是击数是不是1是2的对吧

47:55.590 --> 47:56.070
传进去

47:56.710 --> 47:57.590
它是一个击数

47:57.590 --> 47:59.910
上这些情况是不是都是有问题的对吧

47:59.910 --> 48:00.630
都是有问题的

48:00.630 --> 48:01.190
我们输出

48:01.750 --> 48:02.470
输入有误

48:02.870 --> 48:03.510
输入有误

48:05.190 --> 48:05.750
没问题吧

48:06.710 --> 48:08.470
这样子先把这个判断写好

48:08.470 --> 48:09.110
看一下啊

48:09.110 --> 48:09.750
边写边看

48:13.060 --> 48:14.580
输入一个大于2的偶数

48:14.580 --> 48:16.100
我们这里输入1

48:16.740 --> 48:17.700
输入有误

48:17.700 --> 48:19.060
再来输入2

48:19.620 --> 48:20.340
2也不行

48:20.340 --> 48:21.460
必须大于2的偶数

48:21.460 --> 48:22.100
3不行

48:22.100 --> 48:22.740
它是击数

48:23.540 --> 48:24.180
然后了4

48:24.740 --> 48:25.300
4没问题

48:26.180 --> 48:26.740
ok

48:26.740 --> 48:27.940
先把这个搞定

48:27.940 --> 48:28.180
好

48:28.180 --> 48:28.580
Ls

48:30.420 --> 48:31.220
那么就是什么

48:31.940 --> 48:32.340
就是什么

48:32.980 --> 48:33.620
有一个朋友说

48:33.620 --> 48:34.660
那能不能在这样子

48:34.660 --> 48:36.100
这里写个绿套结束

48:36.100 --> 48:36.500
结束

48:36.580 --> 48:37.940
然后就可以直接运行后面了

48:37.940 --> 48:38.340
兄弟

48:38.820 --> 48:39.380
兄弟

48:39.380 --> 48:40.340
这里的绿套

48:40.900 --> 48:42.500
它不是在函数里边

48:42.500 --> 48:44.020
绿套必须要写到函数里边

48:44.020 --> 48:44.980
这哪有函数

48:44.980 --> 48:45.780
没有这个函数

48:46.180 --> 48:46.820
我倒是想起

48:46.820 --> 48:47.700
我真的这样子想

48:47.700 --> 48:48.180
想着这样子写

48:48.740 --> 48:49.060
其实呢

48:49.060 --> 48:49.940
你也可以怎么样呢

48:49.940 --> 48:51.780
你也可以专门来写个函数来办这个事

48:51.780 --> 48:52.180
对吧

48:52.180 --> 48:53.140
专门来写个函数

48:53.540 --> 48:53.940
表示

48:55.540 --> 48:55.940
毕竟

48:56.260 --> 48:56.660
开始

48:57.380 --> 48:57.780
开始

48:57.940 --> 48:59.380
专门来写个函数来办这个事

48:59.620 --> 49:01.060
把这个东西全部写到函数里边

49:01.060 --> 49:01.700
可不可以呢

49:01.700 --> 49:02.420
当然可以

49:02.420 --> 49:03.780
那这样子就可以使用绿套了

49:03.780 --> 49:04.100
对吧

49:04.580 --> 49:06.100
这样子可以使用绿套了

49:06.740 --> 49:08.740
这也是我比较喜欢的做法

49:08.980 --> 49:10.580
如果输入有误的话直接结束

49:10.580 --> 49:11.700
我就不写ls了

49:11.700 --> 49:12.820
我就不写ls了

49:12.820 --> 49:13.060
好

49:13.060 --> 49:14.100
这里去调用这个函数

49:14.820 --> 49:15.700
调用这个函数

49:15.700 --> 49:17.860
你看函数之间可以相互调用的

49:17.860 --> 49:19.220
函数里边可以调用函

49:19.220 --> 49:20.180
可以调用这个函数

49:20.180 --> 49:21.380
也可以调用这个函数

49:21.380 --> 49:22.260
可以相互调用的

49:22.820 --> 49:23.380
毕竟

49:24.900 --> 49:26.260
那么这样子就可以这样写了

49:27.460 --> 49:27.700
好

49:27.700 --> 49:28.500
接下来再看

49:29.060 --> 49:30.500
如果这个函数没有结束

49:30.500 --> 49:31.380
说明输入正确了

49:31.380 --> 49:31.620
对吧

49:31.620 --> 49:32.340
输入正确

49:33.060 --> 49:34.420
输入正确

49:35.380 --> 49:35.700
好

49:35.700 --> 49:36.500
输入正确的话

49:36.500 --> 49:36.980
干嘛呢

49:37.700 --> 49:38.740
格德巴还有猜想

49:39.860 --> 49:40.260
好

49:41.140 --> 49:43.060
它可以任何一个大于二的偶数

49:43.060 --> 49:44.660
都可以显得两个字数之合

49:44.660 --> 49:45.780
就是两个数数之合

49:46.740 --> 49:48.740
那么现在我给力了这个偶数

49:49.140 --> 49:50.340
给力了这个偶数

49:50.340 --> 49:51.220
你给我啥呢

49:52.100 --> 49:53.540
比方说我给力一个偶数吧

49:54.260 --> 49:55.380
你要给我一个啥呢

49:55.380 --> 49:56.420
给我一个三加五

49:57.380 --> 49:58.420
输出三加五

49:58.420 --> 49:59.380
那么怎么来输出的

49:59.380 --> 49:59.860
你看着

49:59.860 --> 50:00.660
我们是这样做的

50:01.620 --> 50:03.380
任何一个偶数

50:03.380 --> 50:04.900
都可以得到两个数数

50:04.900 --> 50:05.780
相加

50:05.780 --> 50:07.300
那么我们就来看这样子

50:08.660 --> 50:10.980
我首先从二开始循环

50:12.100 --> 50:13.380
从二开始循环

50:14.100 --> 50:15.380
二是最小的字数

50:15.380 --> 50:15.780
对吧

50:15.780 --> 50:16.980
二是最小的数数

50:16.980 --> 50:18.420
从二开始循环

50:18.980 --> 50:20.260
然后把二拿出来

50:20.260 --> 50:21.460
二拿出来是不是另一个数

50:21.860 --> 50:22.420
另一个数

50:22.420 --> 50:23.540
要相加等于八的话

50:23.540 --> 50:24.580
另一个数是不是六

50:24.580 --> 50:24.900
对吧

50:25.940 --> 50:26.980
先循环二

50:27.460 --> 50:28.820
那么另一个数就可以算出来了

50:28.820 --> 50:29.140
对吧

50:29.140 --> 50:30.020
算出来等于六

50:30.180 --> 50:31.700
八简缺二就是六

50:31.700 --> 50:32.020
对吧

50:32.740 --> 50:33.700
八简缺二就是六

50:34.340 --> 50:35.220
判断啥

50:35.220 --> 50:35.940
判断

50:35.940 --> 50:36.740
看

50:37.140 --> 50:37.940
看什么

50:37.940 --> 50:41.220
二和六是否都是数数

50:42.740 --> 50:46.100
看二和六是否都是数数

50:46.100 --> 50:46.660
没问题吧

50:47.380 --> 50:49.220
如果都是是不是就结束了

50:49.220 --> 50:50.100
就完成了对吧

50:50.660 --> 50:52.420
如果都是数数是不是就完成了

50:53.300 --> 50:54.020
好

50:54.020 --> 50:54.740
然后再来

50:54.740 --> 50:55.220
再来

50:55.940 --> 50:57.060
如果它不是

50:57.060 --> 50:58.100
如果有一个不是

50:58.100 --> 50:58.980
是不是还得继续

50:58.980 --> 50:59.220
对吧

50:59.220 --> 50:59.780
还得继续

51:00.180 --> 51:01.620
用来把三拿出来

51:01.620 --> 51:03.220
二循环到三

51:03.220 --> 51:03.780
对吧

51:03.780 --> 51:04.820
循环到三

51:04.820 --> 51:06.340
然后八简三等于五

51:06.900 --> 51:07.700
然后看什么

51:07.700 --> 51:11.380
看三和五是否都是数数

51:11.380 --> 51:12.500
是不是就完了

51:12.500 --> 51:13.140
对吧

51:13.140 --> 51:14.180
如果还不是

51:14.180 --> 51:15.300
那就继续往后看

51:15.300 --> 51:16.340
继续往后看

51:16.340 --> 51:17.220
看到什么为止

51:18.420 --> 51:19.940
看到它简一为止

51:19.940 --> 51:20.980
看到它简二为止

51:21.380 --> 51:22.340
看到它简二为止

51:22.340 --> 51:23.140
对吧

51:23.140 --> 51:24.260
或者是看到它为止

51:24.260 --> 51:26.100
因为它中间一定能找到的

51:26.100 --> 51:27.300
这是哥德巴还猜想

51:27.300 --> 51:28.260
目前的计创机

51:28.820 --> 51:29.460
算出来了

51:29.460 --> 51:31.620
所有的数字都是满足的

51:31.620 --> 51:32.580
都是满足的

51:32.580 --> 51:34.980
所以说都没问题的

51:36.820 --> 51:39.380
所以说我们是直接从二循环到它就完事了

51:39.380 --> 51:40.020
对吧

51:40.020 --> 51:41.460
二循环到它就完事了

51:42.180 --> 51:43.140
所以说循环到它简二

51:43.700 --> 51:44.660
循环到它简二

51:45.460 --> 51:46.980
因为循环到六的时候

51:46.980 --> 51:48.340
是不是就已经倒过来了

51:48.340 --> 51:48.500
对吧

51:49.060 --> 51:49.780
就已经倒过来了

51:49.780 --> 51:50.980
所以说它简二就够了

51:50.980 --> 51:52.340
循环到它简二就够了

51:53.380 --> 51:53.780
好

51:53.780 --> 51:54.180
来呗

51:54.820 --> 51:55.780
那怎么写的这个代码

51:56.500 --> 51:57.060
咋写的

51:58.260 --> 51:58.820
嗯

52:00.340 --> 52:00.980
徿佛循环

52:01.780 --> 52:02.900
i从几开始

52:02.900 --> 52:04.500
从二开始最小的数数

52:05.060 --> 52:06.260
i小于什么了

52:07.780 --> 52:08.660
i小于三了

52:09.380 --> 52:10.820
i小于等于

52:11.380 --> 52:12.020
这个是吧

52:12.820 --> 52:13.700
i小于等于

52:15.060 --> 52:15.700
那么

52:16.820 --> 52:17.620
那么简二

52:18.740 --> 52:19.380
那么简二

52:20.100 --> 52:21.620
二到它简二之间

52:22.260 --> 52:22.980
比方说八

52:22.980 --> 52:25.140
就是循环从二到六之间

52:25.140 --> 52:26.420
为什么不看七呢

52:26.420 --> 52:27.540
因为如果是七的话

52:27.540 --> 52:29.220
另一个数字一定不是数数

52:29.220 --> 52:29.540
对吧

52:29.540 --> 52:30.100
它是一

52:30.100 --> 52:31.140
一不是数数

52:31.140 --> 52:32.420
所以七不用看了

52:32.820 --> 52:33.540
七不用看了

52:34.020 --> 52:34.740
就这样看

52:35.620 --> 52:36.820
二到六之间就够了

52:37.860 --> 52:38.180
好

52:38.900 --> 52:39.620
然后呢

52:39.620 --> 52:40.100
怎么样呢

52:40.980 --> 52:41.380
当然呢

52:41.940 --> 52:43.140
你可以认为二和六

52:43.140 --> 52:44.260
六和二是一样的

52:44.260 --> 52:44.580
对吧

52:44.580 --> 52:44.980
是一样的

52:44.980 --> 52:45.300
你可以

52:45.860 --> 52:47.300
你可以不去留

52:47.300 --> 52:48.340
无所谓

52:48.340 --> 52:49.060
我们就去吧

52:50.260 --> 52:51.940
小于那么简二

52:52.580 --> 52:53.220
i加加

52:53.700 --> 52:54.260
i加加

52:55.940 --> 52:57.140
因为毕竟你要考虑一下

52:57.220 --> 52:57.940
四的情况

52:57.940 --> 52:58.180
对吧

52:58.180 --> 52:58.820
四的情况

53:00.260 --> 53:01.540
是这个数字呢

53:01.540 --> 53:03.460
如果你小于那么简二的话

53:03.460 --> 53:04.180
就小于了二

53:04.740 --> 53:05.140
小于的二

53:05.140 --> 53:06.020
就进不了循环

53:06.820 --> 53:07.060
好

53:07.860 --> 53:08.980
那么每一次数字

53:08.980 --> 53:10.420
是不是第一个数就拿出来了

53:10.420 --> 53:11.380
第一个数字拿出来了

53:11.380 --> 53:11.780
就是i

53:12.260 --> 53:14.180
第二个数字数字就可以算出来

53:14.180 --> 53:15.460
第二个数字用借嘛

53:15.460 --> 53:16.020
用借

53:16.020 --> 53:16.660
可以算出来

53:16.660 --> 53:17.220
怎么算

53:17.220 --> 53:18.420
是不是那么简i

53:18.420 --> 53:18.740
对吧

53:19.300 --> 53:19.940
那么简i

53:19.940 --> 53:21.540
是不是可以把第二个数字算出来

53:21.540 --> 53:22.660
接下来要判断的是啥

53:24.340 --> 53:26.580
判断两个数字

53:26.660 --> 53:28.580
是否都是数数

53:29.140 --> 53:30.020
这一简单

53:30.580 --> 53:31.300
isprime

53:32.340 --> 53:34.020
以前做的预先预始

53:34.420 --> 53:35.540
现在这一简单

53:35.540 --> 53:36.260
isprime

53:36.660 --> 53:37.140
解

53:38.580 --> 53:40.020
如果这个数是数数

53:40.020 --> 53:41.700
因为这个表达是反回的是布尔

53:41.700 --> 53:41.940
对吧

53:41.940 --> 53:42.980
它会怎么运行

53:43.300 --> 53:44.100
它会怎么运行的

53:44.340 --> 53:45.140
在判断这里

53:45.620 --> 53:46.580
它看到这个东西

53:46.580 --> 53:48.740
它先会去运行是这个函数

53:49.300 --> 53:50.980
把这个函数的运行结果放到这

53:50.980 --> 53:52.420
比方说它运行的结果

53:52.420 --> 53:53.620
这个函数运行一遍

53:53.940 --> 53:55.060
整个运行一遍

53:55.060 --> 53:56.660
运行一遍不是一个反回结果吗

53:56.660 --> 53:57.060
对吧

53:57.060 --> 53:58.100
要么是去

53:58.100 --> 53:59.140
要么是force

53:59.140 --> 54:00.580
比方说是去

54:00.580 --> 54:01.700
比方说是去

54:01.700 --> 54:02.500
放到这

54:02.500 --> 54:04.020
然后再去运行这个表达是

54:04.020 --> 54:04.980
又是个函数调用

54:04.980 --> 54:06.340
它又去把这个函数运行一遍

54:06.340 --> 54:07.460
把戒传进去

54:07.460 --> 54:08.500
得到的是force

54:08.500 --> 54:09.060
比方说

54:09.060 --> 54:10.740
然后再来判断这个表达是的结果

54:10.740 --> 54:11.860
它会这么运行

54:11.860 --> 54:13.060
所以直接写就完事了

54:14.180 --> 54:15.540
如果is数数

54:15.540 --> 54:16.500
戒也是数数

54:16.500 --> 54:17.460
数就完了对吧

54:17.460 --> 54:18.100
就完了

54:18.100 --> 54:19.380
直接输出就完事了

54:20.180 --> 54:20.820
直接输出

54:20.820 --> 54:22.580
你看现在这个题就贼简单了

54:23.220 --> 54:23.940
输出什么了

54:25.380 --> 54:27.140
这个number

54:27.140 --> 54:28.260
等于什么了

54:28.260 --> 54:32.100
等于i加上戒

54:32.100 --> 54:35.940
是不是就结束了

54:35.940 --> 54:36.820
这个函数可以结束了

54:36.820 --> 54:37.380
找到一个了

54:37.380 --> 54:37.780
对吧

54:37.780 --> 54:38.420
找到一个

54:38.420 --> 54:40.420
驴头我就没有用break

54:40.420 --> 54:42.740
什么结束循环没必要了

54:42.740 --> 54:44.260
我们直接就结束整个函数

54:44.260 --> 54:45.140
找到一个就够了

54:46.180 --> 54:47.060
好看一下

54:47.060 --> 54:48.580
你看这个函数是没有反回之的

54:48.580 --> 54:49.620
它反回的是undefined

54:49.620 --> 54:50.820
因为我不需要它反回之

54:50.820 --> 54:52.020
它只需要输出就完事了

54:52.980 --> 54:53.700
保存看一下

54:55.300 --> 54:55.940
输入一个8

54:57.780 --> 54:58.740
刷新词

54:58.740 --> 54:59.380
输入一个8

55:00.420 --> 55:00.980
3加5

55:01.780 --> 55:03.300
输入一个1442

55:04.260 --> 55:05.380
3加1439

55:06.420 --> 55:08.500
输入一个非常非常大的偶数

55:09.780 --> 55:10.580
它要运行一会

55:10.580 --> 55:11.220
它要运行一会

55:11.220 --> 55:12.020
这个数字太大了

55:12.500 --> 55:13.220
数字太大了

55:15.540 --> 55:16.020
卡住了

55:16.020 --> 55:16.820
卡住了

55:16.820 --> 55:17.860
看一直在运行

55:17.860 --> 55:18.260
你看没有

55:18.900 --> 55:19.620
一直在运行

55:22.420 --> 55:22.900
算了

55:22.900 --> 55:23.460
算了

55:23.460 --> 55:24.260
重新来

55:24.260 --> 55:24.820
我卡住了

55:24.820 --> 55:25.220
卡住了

55:25.220 --> 55:26.020
卡住了

55:26.020 --> 55:27.380
为什么去数字这么大个数字

55:28.020 --> 55:28.660
我重新来一次

55:29.380 --> 55:29.940
关了

55:29.940 --> 55:30.340
关了

55:33.140 --> 55:33.860
稍微大一点

55:34.420 --> 55:38.180
输出一个23326

55:38.180 --> 55:39.140
23326

55:39.940 --> 55:40.180
你看

55:41.060 --> 55:41.300
好

55:41.300 --> 55:43.780
如果你想把所有的情况都输出了

55:43.780 --> 55:44.660
你就不要return

55:44.660 --> 55:45.380
不要return

55:45.380 --> 55:46.900
它就可以把所有的情况全部输出

55:47.940 --> 55:48.740
保存重新来一次

55:49.940 --> 55:50.980
输入一个132

55:51.620 --> 55:51.940
你看

55:51.940 --> 55:52.740
这些箱子都可以

55:53.380 --> 55:53.780
都可以

55:55.380 --> 55:56.100
好了

55:56.100 --> 55:57.620
这就是哥德帮他猜想

55:57.620 --> 55:58.020
你看一下

55:58.020 --> 55:59.620
这个东西以前做起来

55:59.620 --> 56:00.340
有点牢火

56:00.580 --> 56:01.380
真的有点牢火

56:02.660 --> 56:02.900
好

56:02.900 --> 56:03.540
下面这个

56:04.180 --> 56:05.700
让用户输入一个年份

56:05.700 --> 56:07.620
输出该年每个月的天数

56:08.180 --> 56:08.660
这一简单

56:09.220 --> 56:10.100
现在有了函数过后

56:10.100 --> 56:10.500
这一简单

56:11.620 --> 56:12.020
这里

56:14.570 --> 56:14.730
好

56:14.730 --> 56:15.050
看着

56:21.990 --> 56:22.390
这里呢

56:22.390 --> 56:23.110
我们还是一样

56:23.110 --> 56:23.830
跟刚才一样

56:23.830 --> 56:24.790
我们还是写个函数

56:25.270 --> 56:26.710
请输入一个年份

56:27.030 --> 56:27.510
年份

56:28.470 --> 56:28.870
年份

56:29.510 --> 56:31.430
如果是NIN或者是年份

56:32.310 --> 56:33.910
比方说规定的范围吧

56:34.230 --> 56:35.190
规定的范围

56:35.350 --> 56:36.950
你不能捧还那个公元钱

56:36.950 --> 56:37.430
都过来了

56:37.990 --> 56:39.030
1990年

56:39.590 --> 56:39.910
到

56:41.670 --> 56:42.550
210年

56:43.430 --> 56:45.030
如果小于了1990

56:45.830 --> 56:47.350
如果小于了1990

56:48.070 --> 56:48.870
我们之前说过

56:48.870 --> 56:50.230
连这里是比较特殊的

56:50.630 --> 56:51.670
连这里比较特殊

56:51.670 --> 56:53.030
我们通常的连的是

56:53.030 --> 56:54.230
把它当成数字来看的

56:54.230 --> 56:55.270
尽管读的时候

56:55.270 --> 56:56.950
是把它按制服说来读的

56:58.310 --> 56:58.550
好

56:58.550 --> 56:59.750
这些情况都是输入有误

56:59.750 --> 56:59.990
对吧

56:59.990 --> 57:00.790
都是输入有误

57:01.110 --> 57:01.270
好

57:01.270 --> 57:02.390
输入正确的时候呢

57:03.110 --> 57:04.390
输入正确的时候干嘛呢

57:04.550 --> 57:07.110
我要输出这一年每个月的天数

57:07.110 --> 57:08.230
连我们达到了

57:08.230 --> 57:08.630
对吧

57:08.630 --> 57:09.590
连我们达到了

57:09.590 --> 57:10.630
改一下这个名字

57:10.790 --> 57:11.670
改一下这个名字

57:12.230 --> 57:12.710
一二

57:12.870 --> 57:13.670
连我们达到了

57:13.670 --> 57:14.950
我们要输出这个年里面

57:14.950 --> 57:16.310
每个月的天数

57:16.470 --> 57:17.510
每个月的天数

57:17.750 --> 57:17.910
好

57:17.910 --> 57:18.790
怎么来输出呢

57:18.790 --> 57:20.870
我们之前不是有一个函数吗

57:21.990 --> 57:23.750
得到某连某月的天数

57:24.710 --> 57:26.550
我们要输出每个月的天数

57:26.550 --> 57:27.830
那就循环不安了

57:27.830 --> 57:28.870
一共有多少个月

57:29.190 --> 57:30.150
是不是12个月

57:30.150 --> 57:32.150
I从一开始I小于等于12

57:33.110 --> 57:35.190
或者把这个变量I改成M

57:35.190 --> 57:36.390
M表示Mouse

57:36.790 --> 57:39.190
从一开始小于等于12

57:39.190 --> 57:40.070
M加加

57:41.110 --> 57:42.550
你看这是循环月对吧

57:42.550 --> 57:43.270
循环月

57:43.590 --> 57:43.910
好

57:43.910 --> 57:45.590
那么我们得到这个月的天数

57:45.590 --> 57:46.310
天数

57:46.310 --> 57:47.030
等于什么呢

57:47.030 --> 57:47.910
等于之前

57:47.910 --> 57:48.870
get status

57:48.870 --> 57:49.830
这个函数

57:49.830 --> 57:51.030
连给它

57:51.030 --> 57:51.830
月给它

57:52.630 --> 57:53.830
你看天数是不是得到了

57:54.230 --> 57:55.270
天数就得到了

57:55.270 --> 57:56.470
然后直接输出

57:56.870 --> 57:57.590
直接输出

58:01.110 --> 58:01.590
那个

58:04.630 --> 58:05.190
这样子

58:05.190 --> 58:05.990
我们拼借一下

58:06.790 --> 58:07.830
哪一年呢

58:07.830 --> 58:08.870
一二这一年

58:10.390 --> 58:10.950
年

58:10.950 --> 58:12.070
几月呢

58:12.070 --> 58:12.790
M月

58:13.670 --> 58:14.390
天数呢

58:14.870 --> 58:15.830
天数是多少呢

58:16.390 --> 58:16.950
DS

58:17.430 --> 58:17.830
DS

58:19.030 --> 58:19.750
你看

58:19.750 --> 58:20.710
这就完了

58:20.710 --> 58:21.350
对吧

58:21.350 --> 58:22.150
非常非常简单

58:22.150 --> 58:22.950
现在这个题

58:22.950 --> 58:23.670
保存看一下

58:24.550 --> 58:25.270
一个年份

58:25.270 --> 58:27.990
比方说现在我们2019年吧

58:27.990 --> 58:28.790
2019年

58:29.750 --> 58:30.550
一月

58:30.550 --> 58:30.950
二月

58:30.950 --> 58:31.190
三月

58:31.190 --> 58:31.510
四月

58:31.510 --> 58:32.230
一到十二月

58:32.230 --> 58:33.030
是不是就全部出来了

58:33.030 --> 58:33.590
加上个月

58:34.870 --> 58:36.630
当然了你也可以

58:36.630 --> 58:39.030
能不能把这个表达是放到这

58:39.030 --> 58:40.070
能不能放到这

58:40.070 --> 58:41.590
当然可以

58:41.590 --> 58:43.430
表达是可以放到任何地方

58:43.430 --> 58:44.150
只要放到

58:44.150 --> 58:44.790
只要

58:44.790 --> 58:46.230
这个东西有啥区别呢

58:46.230 --> 58:47.990
你把表达是的值保存到它

58:47.990 --> 58:49.030
把它放过来

58:49.030 --> 58:50.390
和把表达是直接放过来

58:50.390 --> 58:51.350
是一样的

58:51.350 --> 58:52.070
是一样的

58:52.070 --> 58:54.390
表达是可以放到任何出现数据的地方

58:54.390 --> 58:55.910
就完事了

58:56.710 --> 58:57.510
也可以

58:57.510 --> 58:58.470
这样子写也可以

58:59.510 --> 59:00.390
然后年份

59:00.390 --> 59:01.430
比方说2000年

59:01.430 --> 59:02.070
二月是

59:02.790 --> 59:03.350
时训年

59:06.570 --> 59:09.210
以前的感觉很复杂的体现在变得非常简单了

59:09.850 --> 59:11.050
都是函数的功了

59:11.690 --> 59:13.210
那么这是关于这一块的作业

59:13.770 --> 59:14.730
好好去体会一下

59:14.730 --> 59:16.010
大家好好去体会一下

59:16.650 --> 59:17.770
函数这一块很重要

59:18.330 --> 59:19.610
为什么前面两节课了

59:19.610 --> 59:20.490
花了这么多时间了

59:20.490 --> 59:22.250
因为前面我们先把基础打好

59:22.250 --> 59:23.530
因为后边函数还有

59:23.530 --> 59:25.370
介石里边函数还有很多很多

59:26.410 --> 59:27.610
很多很多的知识链

59:27.610 --> 59:29.290
所以说先把前面的基础打好

59:29.290 --> 59:29.690
至少呢

59:29.690 --> 59:31.690
你现在经过这两节课

59:31.690 --> 59:32.810
就是愚法和

59:32.890 --> 59:33.770
关于这个作业

59:33.770 --> 59:34.970
经过这两节课之后

59:34.970 --> 59:37.290
你至少能要能够达到什么效果了

59:37.290 --> 59:38.890
我给你一个功能

59:38.890 --> 59:40.010
你能把它写成函数

59:40.570 --> 59:41.290
就是我

59:41.290 --> 59:42.330
我这样子说

59:42.330 --> 59:43.130
不要说

59:43.130 --> 59:44.010
我给你说

59:44.010 --> 59:45.130
你去写这么一个函数

59:45.130 --> 59:46.410
这个函数的功能是啥

59:46.410 --> 59:48.250
你能把它这个函数写出来

59:48.250 --> 59:50.010
这是你目前要达到的效果

59:50.010 --> 59:51.530
你能够达到这个效果之后

59:51.530 --> 59:53.050
我们再继续往后看

59:53.050 --> 59:53.610
好吧

59:53.610 --> 59:55.370
这是关于这个作业

