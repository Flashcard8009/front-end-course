WEBVTT

00:00.000 --> 00:15.270
来看一下 上级课的作业

00:16.030 --> 00:20.390
其实我讲课的话 我是蛮喜欢讲作业 讲练习的

00:20.890 --> 00:23.450
讲一些应用效果出来了 有意思一点啊

00:23.970 --> 00:28.070
知识呢 它比较枯燥 可能你们听课呢 不太一样 你们听课的话

00:28.330 --> 00:31.130
可能觉得知识部分呢 更加有新鲜感一些

00:31.650 --> 00:34.470
所以我喜欢讲作业啊 我觉得讲作业挺有意思的

00:35.490 --> 00:38.310
好 那咱们来吧 看一下上级课的作业

00:39.070 --> 00:47.010
一下练习呢 我说可以使用之前书写的通用函数 就这里的函数啊 我们之前的函数啊 是可以用的啊 可以把它用起来

00:47.790 --> 00:49.070
好 咱们来看一下啊

00:49.830 --> 00:53.150
我们这里呢 新建一个文件啊 地道题

00:53.930 --> 00:54.950
地道题

00:56.490 --> 00:57.510
看一下地道题啊

00:59.050 --> 01:04.410
其实我这个作业题里边呢 有不少的都是面试题啊 我是把它混杂起来的

01:04.670 --> 01:08.010
有的时候呢 我自己出了一些题 自己出了一些题呢

01:08.210 --> 01:11.810
它能够练习一些知识点 并且夹杂了一些面试题

01:12.310 --> 01:13.590
好 第一个就是个面试题

01:14.110 --> 01:20.510
找到某个制服创中出现次数最多的制服 打印这个制服呢 和它出现了次数

01:20.770 --> 01:21.790
其实这道题呢

01:22.050 --> 01:27.930
有点啥呢 有点类似于我们之前写的那个函数 对吧 我们之前是不是写过一个函数啊

01:28.190 --> 01:28.950
怎么函数

01:29.470 --> 01:32.550
啊 我这个说一下啊 你们下来一定要把这个函数写一遍啊

01:32.790 --> 01:36.390
这个随机数这个函数以后经常要用的啊 一定要去写一遍

01:36.630 --> 01:37.150
好吧

01:37.610 --> 01:41.930
我们之前写过这么一个函数 叫做get top freak

01:42.290 --> 01:47.090
in a way 啊 得到一个数组中的所有出现次数最高的

01:48.090 --> 01:52.330
得到数中出现频率最高的数字和频率啊 数字和频率

01:52.650 --> 01:57.890
当时呢 我们做了这么一个函数 当时我们用的是啥 用的是数字对吧 用的是数字

01:58.090 --> 01:58.970
那么这里呢

01:59.490 --> 02:04.850
把它换成制服创可不可以 当然可以 没有任何问题啊 没有任何问题

02:05.150 --> 02:12.110
实际上这个函数不一定是数字 可能是数字 也可能是数字或制服创啊 或制服创

02:12.830 --> 02:18.230
都可以啊 没有什么问题的 没有什么问题 你看吧 我们之前记录出现频率的时候

02:18.670 --> 02:25.590
是把数字当成属性来记录 对吧 是把数字当成属性来记录 那么把制服创当成属性来记录 可不可以呢

02:25.990 --> 02:28.390
当然可以啊 当然可以 没有任何问题的

02:28.910 --> 02:33.270
好吧 所以说呢 我们这里呢 完全可以直接使用制服创来进行处理

02:33.850 --> 02:37.490
也就是说呢 我们比方说有这么一个制服创啊 有个制服创

02:38.570 --> 02:40.130
就随便写一些吧 随便写一些

02:41.170 --> 02:46.850
好 在这个制服创里边 我们要找到出现次数最多的制服 那么我们要做的事情是很简单

02:47.090 --> 02:52.730
我们只需要把这个制服创转换成数组 然后去雕用这个函数就完事了

02:53.290 --> 02:57.330
只需要去转换成数组 然后雕用这个函数完事就完事了

02:58.130 --> 03:02.730
好 那么咱们来把它变成数组啊 将s变成数组

03:04.130 --> 03:10.650
怎么把它变成数组呢 有没有办法 把这个制服创变成数组 我们说过制服创是一个伪数组 对吧

03:11.010 --> 03:17.570
伪数组变成真数组 怎么变了 怎么变 你是不是就直接使用了啊

03:18.250 --> 03:25.570
我们之前学学学习过的 而瑞弗朗对吧 把伪数组变成真数组啊

03:26.250 --> 03:31.400
打印出这个数组看一下啊 运行 看一下

03:32.220 --> 03:38.820
也不十二 转到第一 刷新 你看一下 得到了是不是这个真数组 没问题吧 对吧

03:39.220 --> 03:45.940
然后我们去雕用之前写过那个函数就完事了 真的就完事了 啊 这简单到底

03:46.420 --> 03:51.180
当然你要把这个函数重新写一遍 当然也可以啊 我这里就不重新写了啊 因为之前讲过了

03:51.740 --> 03:57.980
好 那么雕用之前的函数啊 my functions 第二什么这个函数的名字叫做get top frequent

03:58.640 --> 03:59.240
innery

04:00.120 --> 04:05.120
把二位传进去啊 它会得到一个反回一个什么了 反回一个对象啊 一个对象

04:05.600 --> 04:11.000
好 我们要打印这个对象看一下啊 打印这个对象 它得到了就是出现频率最高的制服

04:11.600 --> 04:12.160
好 你看一下

04:13.080 --> 04:20.760
打印出来好 这个Number呢 是NAN 对吧 这个Number是NAN 是因为我们这个函数里边呢 我这里用了个加号

04:21.480 --> 04:23.680
用了个加号 把这个制服创了要转换成

04:24.180 --> 04:30.540
要转换成数字 那这里呢 我们其实可以把这个加号去掉 因为这个地方呢 其实可以是个通用的 对吧

04:30.780 --> 04:33.420
可以是个通用的 它不一定是数字 不一定是数字

04:34.100 --> 04:41.100
好吧 保存看一下 那里看 是不是得到啊 a 这个制服出现了次数最多10次

04:41.740 --> 04:48.660
最完事了 对不起就完事了 以后呢 你们面试体的时候 遇到这种体呢 最多就是把这个函数重新写一遍

04:49.280 --> 04:53.440
这个函数一定要会写啊 一定要会写 记录出现频率最高的制服

04:55.280 --> 05:01.680
ok 就完事了 对吧 就完事了 这是把那个找到一个制服创中出现频率最高的制服就说出来了

05:02.520 --> 05:04.840
好 这是这一块啊 好 第二道题

05:06.720 --> 05:14.720
第二道题 将一个制服创中单词之间的空格去掉 然后呢 把每个单词的首字母转换成大解

05:15.500 --> 05:19.820
这道题呢 它其实也是一道面试题 这道面试题它原题是这样子

05:20.220 --> 05:24.740
就是给你任何一串 就是一个句子 或者是一个单词的组合

05:25.540 --> 05:32.420
单词之间可能会有空格 你要把它转换成大陀封命名法 你看这个东西是不是大陀封命名法

05:33.980 --> 05:41.580
大陀封命名法 把它转换成一个变量的名称 或者是一个属性的名称 当然呢

05:42.000 --> 05:51.120
有些题呢 它可能会稍微变化一下 把它变成小屠封命名法 就第一个单词的首字母消息都差不多 都差不多 咱们来看一下吧 怎么来做 这个题怎么来做

05:52.640 --> 05:58.400
首先呢 它是让你把单词之间的空格去掉 把单词之间的空格去掉

05:59.160 --> 06:07.200
那么这里怎么来处理呢 这里我告诉大家啊 我知道挺的 我用两种诗路来解决 并且呢 我都会把这两种诗路做一遍

06:08.140 --> 06:13.580
第一种诗路就是比较奔得诗路 其实大家做题的时候啊 不要牢去想着取巧

06:14.100 --> 06:20.780
你首先得学会用奔办法来做 因为奔办法呢 就是你的逻辑基点 逻辑基础

06:21.380 --> 06:30.500
你学会奔办法了之后呢 我们再用一些取巧的方式啊 如果有的话啊 如果你能够想到的话 再用一些取巧的方式来做 一开始不要想去

06:30.980 --> 06:33.580
取巧的方案啊 我们先用奔办法来做一遍

06:34.320 --> 06:38.480
什么叫奔办法呢 奔办法就很简单啊 比方说有个制服串啊 有个制服串

06:40.040 --> 06:42.040
啊 这个Hello world

06:45.000 --> 06:51.120
解释啊 随便吧 随便 然后呢 我们用这种奔办法 我就是新建一个制服串

06:52.120 --> 06:52.840
空白制服串

06:54.040 --> 06:57.880
然后去循环原来的制服串啊 去循环原来的制服串

06:58.740 --> 07:03.540
如果发现有空格啊 就不往新制服串里边加

07:04.420 --> 07:11.220
如果不是空格了 就往新制服串里边加就完事了 对吧 好 咱们来循环啊 循环原来的制服串

07:11.700 --> 07:14.620
小i小于s.nance i加加

07:15.420 --> 07:19.020
制服串可不可以循环 可以 因为制服串就是个伪术主 他有下标的

07:19.460 --> 07:26.900
因此他可以循环啊 好 如果发现啊 这个地方他不是一个空制服串啊 他不是一个空白的制服串

07:27.200 --> 07:34.600
也就是说这个s 这个位置的制服呢 他不是空格啊 如果他不等于空格 那怎么办了

07:35.200 --> 07:42.720
好 那怎么办了 好 那么这个时候呢 我们就把这个制服呢 加到这个result里边 加到这个制服串里边

07:43.320 --> 07:46.560
好 result 拼接上si

07:47.600 --> 07:53.800
把这个制服拼接到这个制服串里边 那么最后呢 我们来输出这个制服串 你看 空白制服就全部去掉了

07:54.420 --> 07:59.810
看一下啊 刷新 诶

08:00.730 --> 08:05.370
拼接这个result 哦 这里写错了啊 一个空格啊 找了一个空格保存

08:06.090 --> 08:11.810
好 你看 空格是不是全部去掉了 对吧 好 如果他要求你还要去掉换行服

08:12.810 --> 08:19.410
啊 还要去掉换行服什么制表服 对吧 比方说啊 这里可能会有个制表服 这里可能是有个换行服

08:19.810 --> 08:25.450
还有一些空格啊 他可能是在这种情况 你像这个东西也是空白制服 对不对 空白制服

08:26.350 --> 08:30.950
包括呢 还有一些什么斜杠R 斜杠R 表示回车 表示回车 回车服

08:31.870 --> 08:36.510
那么像这些呢 都属于空白制服 都属于空白制服 因此呢

08:37.150 --> 08:43.030
我们也可以 也可以怎么办呢 继续来判断对吧 如果不等于这个 并且呢si

08:43.910 --> 08:48.150
他不等于什么 斜杠T 并且呢si

08:48.950 --> 08:55.190
他不等于什么斜杠N 并且呢si 他也不等于什么斜杠

08:56.270 --> 09:02.870
斜杠R 对吧 把这些情况都考虑进去 只要你不是空白制服 那么我就把这个制服呢 拼接进去

09:03.190 --> 09:06.550
保存看一下啊 你看 如果你不加这些判断的话

09:07.270 --> 09:15.230
不加这些判断 判断空格的话 那么就意味着这些什么制表服啊 回车啊换行啊之类的 他也会被拼接进去

09:15.790 --> 09:20.350
你看这个意思吧 顺便说一下这个回车服啊 这个回车服呢

09:20.770 --> 09:29.610
在Windows是Windows操作系统 这个他提倡出来的啊 实际上在Ninux操作系统里面是不太用这个东西的 包括苹果操作系统也不太用的

09:31.010 --> 09:36.810
Windows操作系统 它Windows操作系统里边 它换行是一个斜杠R 斜杠N 先回车再换行

09:37.370 --> 09:45.810
它是这么回事啊 那么这个地方的回车服呢 其实在很多 在其他的操作系统里边 特别是服务器呢 我们是不用考虑的 我这里简单说一下就行了

09:46.790 --> 09:54.270
然后呢 我们这里把这个情况加上 对吧 那么这里其实还有一种邪法 更加优雅的邪法 这种邪法呢

09:54.750 --> 09:59.750
看上去不太舒服啊 我们这可以用另外一种邪法 什么怎么邪法呢 叫Amity's

10:01.590 --> 10:04.310
我定一个制服串数组啊 或者是定一个制服串

10:05.470 --> 10:15.470
这个制服串里边呢 就专门来包含一些空白制服 什么空格啊 什么斜杠T啊 斜杠R 斜杠N啊 就是包含这些空白制服啊 这里记录

10:16.430 --> 10:18.110
所有的空白制服

10:19.590 --> 10:23.790
所有的空白制服就这么一些 对吧 好然后呢 我这里呢 这样子判断

10:24.910 --> 10:28.710
看一下Amity's里边是不是includes si 可不可以

10:29.910 --> 10:36.830
可不可以 是不是也可以 对吧 我们之前学过的includes 表示的是这个制服串里边是否包含

10:37.470 --> 10:44.110
猛个制服串啊 把这个制服串传进去 把这个位置的制服传进去 那么让他来看一下这个制服串里面是否包含

10:44.410 --> 10:51.770
如果他不包含的话 加个感叹号啊 如果他不包含的话 那么就是一个正常的制服给他拼接进去 保存看一下

10:52.250 --> 10:59.490
你看 是不是也可以 对不对 也可以啊 当然我们也可以呢 怎么样呢 把他这个东西写成一个函数啊 写个函数

11:00.170 --> 11:01.970
remove 啊 应该叫做

11:03.490 --> 11:10.730
big 大陀峰吧 camera 是这样写吧 骆驼是这样写吧 看下一个单词啊

11:13.790 --> 11:17.590
不是 这个是什么 财经学 不是 我翻译一下啊 骆驼

11:19.510 --> 11:20.230
骆驼

11:21.710 --> 11:27.310
啊 camera 啊 差不多嘛 对吧 我有这么个印象啊 有这么个印象

11:27.750 --> 11:33.070
camel big camel 把一个制服串呢 转换成大陀峰命迷法

11:34.150 --> 11:38.990
那么这里呢 传入一个制服串啊 传入一个制服串 我们就把个代码写进来啊 写进来

11:39.650 --> 11:42.930
好 最后呢 我们把这个 result 返回 把它写成一个函数也可以

11:43.770 --> 11:48.970
好 那么这里呢 我就去调用这个函数 big camel 把s 传进去 看他得到的结果

11:49.570 --> 11:54.330
可不可以 当然可以啊 把它写成函数以后就可以通用了啊 保存看一下啊

11:54.890 --> 12:00.810
这边是一样的 对吧 但是呢 现在还有一个问题就是手字母呢 他没有大写 对吧 手字母没有大写

12:01.170 --> 12:04.890
好 也就是说 我们这里拼接的时候呢 要还要判断一个东西

12:05.350 --> 12:09.830
判断这个s-i 是否是手字母

12:10.630 --> 12:12.190
怎么来判断 他是不是手字母了

12:13.070 --> 12:15.950
怎么来判断 这个玩意儿 他是不是手字母了

12:16.590 --> 12:25.030
手字母有个特点 手字母的前边一定是一个空白制服 对吧 手字母的前边一定是一个空白制服

12:25.910 --> 12:29.710
因此呢 我们这里可以这样子判断啊 判断啥呢 判断

12:31.190 --> 12:31.990
啊 这个

12:32.590 --> 12:33.190
amity

12:33.850 --> 12:36.250
啊 就是判断这个s

12:37.450 --> 12:42.810
s i-1 就是前边这个制服是否是空白制服

12:43.290 --> 12:50.290
如果前边这个制服是空白制服的话 那么说明他是手字母 对吧 所以说我们这里可以这样判断 if

12:51.290 --> 12:53.090
amities include

12:54.210 --> 12:54.610
s

12:55.930 --> 13:02.170
i-1 什么意思啊 表示的是 s i-1呢 他出现在这个制服圈里边 说明

13:02.510 --> 13:09.630
他之前那个制服是空白制服 如果是空白制服怎么样了 如果是空白制服我们拼接的时候呢 怎么样

13:10.030 --> 13:15.070
我就要把这个制服圈 你看 这个是不是一个制服圈 得到这个制服圈的其中一个制服圈

13:15.830 --> 13:19.270
得到其中一位制服 那么他也是个制服圈 to

13:19.990 --> 13:26.310
arprice 对吧 我们利用这个制服圈的函数 把它转上大写就完事了 else呢 就直接拼接

13:26.830 --> 13:28.230
else就直接拼接就完事了

13:28.970 --> 13:31.530
你看 我们这样子写啊 保存看一下啊

13:32.410 --> 13:40.290
看一下 那么好 你看这个手这么说大写了 这个手这么说大写了 那第一个为什么没大写了 是不是第一个他前边是

13:40.610 --> 13:50.250
undefined的 对吧 第一个前边I等于0的时候就第一个制服 第一个制服前边是不是undefined的 对吧 所以说第一个制服呢 第一个制服呢 我们还要加上判断

13:50.750 --> 13:58.670
或者 或者是呢 I等于0 I本来就是第一个制服 第一个制服我们单独处理一下 保存看一下

13:59.790 --> 14:07.670
你看是不是出来了 结果 你变成大头奉命兵法了 对吧 这是第一种做法啊 第一种做法好 这里说了第一种做法呢

14:08.270 --> 14:14.590
第一种的话首先要理解啊 首先要理解第一种做法 好 第一种做法呢 我们讲了之后呢 我们再讲一讲巧妙的第二种做法

14:15.170 --> 14:22.970
看着啊 big camel 但是呢 你不要只学习什么取巧的办法 你首先在学习就是最基础的办法

14:23.410 --> 14:35.370
就基础 因为这个东西包含里边的包含的逻辑对我们训练程序的思维是非常非常有帮助的啊 所以说你必须要理解这种做法 取巧的做法你不理解都还好 但是这种做法一定要理解

14:36.350 --> 14:40.350
好 第二个啊 就大头奉命兵法 好 我们可以这样子来做 你看着啊

14:41.430 --> 14:47.030
我把传入的这个制服串啊 不要认为这里写的s和这里写个s好像冲突了 有冲突吗

14:47.630 --> 14:56.790
之前讲过了 有冲突没 没有 函数里边的参数啊 他是在函数的作用域里边 跟外边东西没有任何冲突啊 好 咱们来这么来做 看着啊

14:57.830 --> 15:05.190
单词是啥 单词是不是就是空白制服 对吧 ok 我们这里呢

15:05.510 --> 15:14.310
就按照空白制服来进行分割啊 按照空白制服来进行分割啊 怎么来分割呢 我们这样子写

15:14.870 --> 15:23.950
s split split是什么 分割对不对 分割啊 分割这里呢 我们按照空白制服分割 空白制服呢

15:24.630 --> 15:34.750
写个空格啊 按照空格来进行分割 就完事了 对吧 是不是就完事了啊 按照空白制服进行分割啊 就完事了

15:35.910 --> 15:45.230
但是有些同学会问了 那空白制服呢 他不一定是空格啊 他有可能是斜杠T 斜杠N 斜杠R 他这也是空白制服啊 那这怎么办了

15:45.750 --> 15:53.070
好 这里呢 我给大家说一下啊 目前呢 我们没办法 用这种取巧的办法呢 我们目前呢 找不到一种很好的办法

15:53.470 --> 16:00.590
但是以后呢 我们学到正着表达式之后 我们就有办法了 现在我们没有办法啊 但是以后我们会有办法的

16:00.970 --> 16:10.570
那么现在呢 我们现在只考虑啊 只考虑空格啊 只考虑空格 好 我们就按空格分割 分割之后呢 是不是一个数组

16:11.610 --> 16:19.690
是不是一个数组 没问题吧 好 咱们呢 输出一个返回 就直接把这个返回看一下啊 就把这个分割之后的结果返回 你看一下

16:20.450 --> 16:27.290
输出 输出结果你看一下 是不是就是那个数组了 对不对 就是数组了

16:28.030 --> 16:35.550
分割成一个一个的数组啊 因为有些地方呢 他有两个空格 对吧 有两个空格 那么这两个空格之间呢 他会一些空白制服串 你看

16:36.110 --> 16:46.790
空制服串啊 分割出来会空制服串啊 为了 这里啊 由于这里我们目前只能处理空格 对吧 所以说把这个钢N啊 怎么钢R呢 这应该去掉啊 该去掉

16:47.390 --> 16:53.070
把钢N钢R该去掉 好 保存重新来看一下啊 好 你看分割出来就这个样子

16:54.050 --> 16:58.770
分割出来了之后啊 分割出来之后 这里还刚剃 刚剃也去掉

16:59.890 --> 17:04.850
分割出来了之后 我们再把这个数组里边空白的制服是不是该去掉

17:05.570 --> 17:13.170
把空白的制服该去掉 你看一下这个玩意儿 这个玩意儿是个数组吧 对吧 是个数组 我们在这个数组里边进行筛选

17:13.650 --> 17:19.210
筛选出什么呢 筛选出那些非就是正常的制服 说白了

17:19.910 --> 17:25.510
我们要的是什么东西 要的是这个数组里边 制服创长度大于零的

17:26.950 --> 17:33.830
数组相 对不对 制服创长度大于零的元素 你看这个制服创大于零 要这个制服创大于零 要你看其他的

17:34.350 --> 17:40.550
空白的分割分割出来是空白的地方 那么就不要了 他为什么会空白制服 因为我们这里有多个空格 你看

17:41.110 --> 17:46.110
你看 用空格进行分割嘛 这个是一个一向 对不对 这个空格分割了

17:47.090 --> 17:56.090
中间这个 就是我现在光标这个位置 他又把它分割成一向 我这样来看吧 有一种可能不太理解 为什么会有空白制服 如果我这里只写了一个空格的话 他就没有空白制服

17:56.610 --> 18:04.530
你看着啊 我们这里只写了一个空格的话 你看 是不是没有空白制服 没有空白制服 那我这里呢 他到底是怎么分割的 我再说一下吧

18:06.210 --> 18:13.520
好看着啊 主要是空格了 你们看不清楚 这里是有两个空格啊 两个空格啊 这里是有三个空格

18:14.020 --> 18:21.700
好 看下他怎么分割的 好 首先他看到第一个空格 好 然后呢 素主的第一项就出来了啊 就左边这一项出来了

18:22.300 --> 18:26.180
哈喽 啊 出来了 好 这第一个空格啊 好

18:27.020 --> 18:37.380
好 把这个空格右边这一项呢 右边这一项呢 就是空置五串啊 右边这一项是个空置五串啊 你可以认为右边这一项再来进一分割啊 再来进一分割 那么

18:38.360 --> 18:45.600
比方说啊 我们左边把这个这个空格 它分割成两个部分 一个是哈喽第一项 对吧 一个是哈喽第一项

18:46.000 --> 18:48.840
然后呢 一个是右边这一部分 好 现在剩下右边这一部分

18:49.640 --> 18:57.160
右边这一部分 好 然后呢 右按这个空格来进一分割 空格进一分割 左边是不是有一项 好 左边是一个空白制服

18:57.840 --> 19:02.040
左边啥都没有 对吧 这个空格左边啥都没有 右边是不是这一坨 ok

19:02.780 --> 19:11.540
好 就第二 右边是这一坨 好 右边来继续来进一分割 好 右边找到第一个空格就这个空格 空格左边是啥 空格左边是world

19:12.620 --> 19:15.660
好 空格左边是world对吧 好 ok

19:16.740 --> 19:23.540
好 空格右边是这一坨对吧 好 这一坨里边 右按空格进一分割啊 右按空格进一分割 空格左边是不是空置五串

19:24.320 --> 19:32.680
对吧 空格左边是冲置五串 右边那是这一坨 好 那么这个空格也分割完了 好 接下来再按空格进一分割 它又有一个空格

19:33.000 --> 19:38.040
又有一个空格 好 这个空格左边是不是制服串 空制服串 右边那是不是gs

19:38.600 --> 19:46.560
gs就剩下就没了 就没了 对吧 分割出来就这样子 由于有连续的空格 所以说它分割出来的可能可能会带有空白制服串

19:46.960 --> 19:49.280
分割出来是这个样子 好 看一下吧

19:50.260 --> 19:57.180
你看 分割出来是这个样子 那么我们现在要做的就是 在这个数组里边呢 只找到那些

19:58.020 --> 20:01.500
制服串长度大于0的 那这个还不简单吗 怎么找

20:02.380 --> 20:04.700
是不是filter 对吧 我们之前学过的filter

20:06.180 --> 20:09.660
来进行筛选 筛选它呢 筛选这个制服串长度

20:10.580 --> 20:13.660
大于0的制服 筛选这个条件

20:14.320 --> 20:20.200
这是它筛选的条件 返回个布尔吧 表示是否满足条件 我们只要这一部分

20:20.880 --> 20:29.560
保存看一下 我们把这个字一看 这样子呢 你无论多好个空格 筛选出来的都是分割好的 看没

20:30.560 --> 20:40.560
保存 看 这得到的数组 好 然后再怎么样呢 把数组的每一个单词手字母大写 对吧 把数组的每一个单词手字母大写

20:40.980 --> 20:47.260
这是一个数组啊 把想象整个整体 这个整体就是这个样子 已经分割好了 那么你现在呢 我们要做的就是

20:48.060 --> 20:57.100
找这个数组使用map 硬设 就是把每一项硬设成新的一项 硬设成新的一项 方可行

20:58.300 --> 21:05.260
拿到数组里边每一个制服串 好 返回一个什么呢 返回这个数 把这个制服串的手字母

21:06.240 --> 21:13.440
有些同学说 那这里万一制服串长度为0 怎么办 你这个下标是不是超出边界了 不可能 因为前面我们筛选过的

21:14.160 --> 21:22.360
筛选过的 他长度不可能为0 所以说大胆的去取第一个制服 取到这个制服串的第一个制服 把它怎么样呢 to uppercase

21:23.240 --> 21:28.040
把它转换成大写 对吧 我们一个一个制服串拿到 你看 我们拿到第一个制服串

21:29.020 --> 21:32.260
拿到第一个制服串 把第一个制服串手字母变成大写

21:32.980 --> 21:38.860
然后再拼接上这个制服串的剩下部分 对吧 拼接上这个制服串的剩下部分 那怎么来拼接剩下部分

21:39.580 --> 21:47.860
是不是找到制服串 调用函数 sub stream 对吧 sub stream sub strsnice都可以啊都可以 比方 sub stream

21:48.620 --> 21:52.180
我们这里填什么 填1 就是从下标1开始取

21:52.760 --> 21:59.400
从这个位置开始去 当然如果这个制服串只有一位 那他取不到 取不到就无所谓了 他就不会 他得到的是通制服串 无所谓

22:00.160 --> 22:03.680
好 把它剩下的部分拼接过来 对吧 把它剩下的部分拼接过来

22:04.720 --> 22:06.120
好 保存看一下啊 看一下

22:07.200 --> 22:13.240
你看 现在我们得到了一个新的数组 就通过map 硬设之后 得到一个新的数组 手字母数全部大写了

22:13.720 --> 22:19.920
对不对 全部大写了 甚至呢你还可以把剩下的单 剩下的东西呢全部变成小写 to lowercase

22:20.780 --> 22:22.780
lowercase

22:24.380 --> 22:30.540
当然你可以这样做啊 把剩下的东西全部变成小写 那比方做啊 这里一个r大写的 中间一个文字大写的

22:30.820 --> 22:35.140
你通过这样子一处理过后了 这个r也变成小写了 看没 r变成小写了

22:35.860 --> 22:42.700
没问题吧 就是手字母大写 剩下的东西呢全部小写 你看 这是全是练识编程 看没 把它得到

22:43.200 --> 22:49.840
指它的解决制服串 解决它的一段 这个表达是 仍然是一个制服串 然后对这个制服串呢 在板台边转换成小写

22:50.360 --> 22:56.400
拼接起来返回 那么这样子每一项就经过了这么一个处理 处理过后呢变成这个样子

22:57.360 --> 23:01.360
剩下的事情是不是很简单了 剩下我们用啥呢 用交印

23:02.120 --> 23:07.920
把这个制服串用一个空白制服连接起来 用一个空制服串连接起来 就中间不不间隔任何东西

23:08.780 --> 23:10.580
把这个整个数组连成一个制服串

23:11.420 --> 23:21.260
这没完了 这样子呢是一种非常非常巧妙的办法啊 当然以后学习了 郑则表达是之后 这里可以处理各种空格的情况 各种空白制服的情况

23:22.140 --> 23:25.700
好吧 没问题吧 这里是用这种取巧的方式啊

23:27.100 --> 23:33.140
我希望大家两种方式都学会 因为第二种方式呢 可以让你清楚的回忆一下之前的这些函数 什么split

23:33.160 --> 23:40.240
filter,mapper,join,trop,upcase,substream 你看用到了很多函数 还有这个属性lens 我们都可以复习一下啊

23:41.120 --> 23:42.400
好 这是关于这道题

23:43.840 --> 23:47.520
好 下面这道题啊 书写一个函数 产生一个

23:48.480 --> 23:50.000
指定长度的

23:50.840 --> 23:52.040
随机制服串

23:53.040 --> 23:56.640
制服串中只能包含大写字母 小写字母和数字

23:58.120 --> 24:02.280
好 来呗 写这么一个函数 其实我们做题的时候 不要举例于这个

24:03.020 --> 24:08.420
到底要不要写函数 有些同学呢 看到题 题上没有说要写函数 我就不写函数了 那不一定啊 你需要

24:08.820 --> 24:15.140
你只要把个功能完成就行了啊 管理写不写函数 所以后边的题呢 我都不会明确的说 要不要到底要不要写函数

24:16.180 --> 24:18.260
好 我们写个函数啊 来帮我们去做这个事

24:19.140 --> 24:22.860
指定一个长度的随机制服串get ridem stream

24:24.420 --> 24:26.380
那么这里传一个参数

24:27.380 --> 24:31.940
根据你指定的长度来产生一个随机制服串 以后要返回 返回一个随机制服串

24:32.420 --> 24:35.300
好 最后呢 我们来为了炒测试啊 我们去调用这个函数

24:36.660 --> 24:38.580
比方说产生六位的随机制服串

24:39.900 --> 24:44.700
好 把数出 好 接下来呢 我们来看一下啊 看一下这个函数 里边怎么写

24:45.380 --> 24:50.580
那么长度告诉你了 那么你要去产生一个随机的制服串啊 你要去产生一个

24:52.420 --> 24:58.220
跑去了 我这里 坐下 产生一个随机的制服串 那么我们其实可以用这样的思路

24:59.040 --> 25:01.040
可以用这样的思路 什么思路呢

25:02.160 --> 25:03.720
就是说我这里呢

25:05.240 --> 25:07.680
我先写一个模板制服串 template

25:08.520 --> 25:14.200
这个制服串里边就包含所有可能会出现的制服 什么abcdefg

25:14.800 --> 25:20.640
higlmnopqrstuvw

25:21.400 --> 25:23.240
xyz

25:24.360 --> 25:28.200
这是小写字母吗 还有大写字母 对吧 再来写一遍 然后再把数字写

25:28.760 --> 25:31.960
把所有可能出现的制服全部写到这个字母串里边

25:32.800 --> 25:38.800
然后怎么样呢 然后我们数一击的在这个制服串里边取六次

25:39.960 --> 25:42.680
来把它拼接到一个新的制服串里边 最晚了

25:43.880 --> 25:46.120
我们数一击的在这个制服串里边取六次

25:47.200 --> 25:52.400
比方第一次取一个j 第二次呢 取一个w 然后把拼接起来 拼接成六个

25:52.880 --> 25:56.320
拼接成一个长度为六的制服串 返回就完事了 对吧 这就是我们的思路

25:57.100 --> 26:03.420
好 所以说我们按照这样的思路来做的话 那么这个模板制服串啊 这个模板制服串 我们该怎么来拼接呢

26:03.980 --> 26:13.140
怎么把它拼接成一个模板制服串了 我们当然可以熟悉啊 熟悉完全没问题 再写一次大写呗 abcdefg再写一次呗 对吧 但是很麻烦

26:14.540 --> 26:18.140
我们呢 可以用这种方式啊 我们之前学过的这种方式啊

26:19.180 --> 26:26.300
不用自己熟悉 熟悉的话还经常容易写错 对吧 还经常容易写错 但是熟悉也没问题啊 也没有多少啊 也没有多少 你自己写也可

26:27.020 --> 26:37.700
我们可以用什么呢 可以用我们之前学过的那种方式 就是用制服编码来进行拼接啊 用制服编码来进行拼接啊 什么制服编码呢 我们之前不是

26:38.740 --> 26:46.820
在讲那个上一节课的时候就说过嘛 对吧 比方说啊6565的制服编码就是大写字母a

26:47.460 --> 26:53.700
就是大写字母a 好 那么小一多好呢 65加上26对吧 26个英文字母嘛

26:54.000 --> 27:02.800
好 然后每一循环一次往这个制服车里边去拼接拼接啥呢 拼接什么一个静态的方法

27:02.800 --> 27:08.640
什么from char code from char code 这里呢 挨传进去

27:09.880 --> 27:16.600
把编码传进去 然后呢 它返回一个制服串给的 返回对应编码的制服串给的 然后呢 把它拼接进去

27:17.100 --> 27:26.740
拼接运行完事了 最后呢 我们这里输出啊 输出template看一下呗 保存啊 你看一下 我没运行啊

27:29.460 --> 27:32.900
看一下啊 你看输出了是不是大全 全部是大

27:34.220 --> 27:40.980
输出了是不是全部是大写字母 对吧 没问题吧 后边的undefine 后边的undefine是输出了这个函数的返回结果 函数现在我们还没有返回

27:41.940 --> 27:45.060
你看 不是搞定的 好 那么小写字母呢

27:45.880 --> 27:53.200
小写字母是不是继续来拼接一次啊 小写字母是从90多少啊 我有点忘了啊

27:54.000 --> 28:01.040
95开始试一下吧 95开始啊 96 95 97啊 97开始

28:02.000 --> 28:07.320
是从97开始的啊 小写字母 a 好你看一下 那么是不是小写字母小写字母也搞定了

28:07.960 --> 28:13.560
好 然后是数字啊 拼接数字 数字的编码呢是从多少到多少

28:14.180 --> 28:17.260
是从好像是41啊 41加上

28:18.300 --> 28:21.780
加上10嘛 一共10个数字 看一下是不是41啊

28:22.740 --> 28:28.620
不对不对 我又记错了啊 4 1 4 2 3 4 5 4 6 7 4 8啊 是从48开始的

28:31.220 --> 28:36.300
一共10个字 十个字 十个字符吗啊 十个数字 4 8 4 9 20

28:37.280 --> 28:44.560
5451 1 0到9 0到9就拼接起来了啊 你可以用循环来进行拼接 当然你觉得如果你觉得这个循环写下来

28:44.560 --> 28:52.240
反而麻烦一点啊 你直接在这里写还方便点 无所谓 因为这里反正东西也不多啊 东西也不多 你可以这样子随便写

28:53.000 --> 28:59.760
好吧 那么就拼接好了一个模板字母创了啊 拼接好了模板字母创过后呢 我们现在从模板中

29:00.700 --> 29:14.100
随机取出取出一位制符啊 来进行拼接 也就是说呢 我们这里要准备好一个最终的结果 这个结果呢是一个空制符创

29:14.740 --> 29:22.820
好 然后循环从这个循环从这个模板中去取出制符 拼接到这个结果中 怎么来循环取呢 循环多少次呢

29:23.740 --> 29:28.980
你制符创长度也多少就循环多少次 对吧 比方说我们模板制符创是这个样子 对不对

29:29.440 --> 29:34.480
那么我要拼 我要比方说找六个制符拼接起来 ok 我就从这里边随机取六个制符

29:35.040 --> 29:39.600
于是呢 我们这里写个循环啊 循环多少次呢 循环

29:41.360 --> 29:43.040
循环嫩这个次数

29:44.400 --> 29:50.960
这个参数是多少 我就循环多少次 每次循环干嘛呢 从模板中随机取出一位制符

29:51.880 --> 29:57.760
好 那么这里是不是要用到随机数 对不对 好 我们之前是不是写过这么一个东西 这个东西可以用起来的啊

29:57.780 --> 30:01.780
get random 就可以用起来的 这个函数非常非常好用的啊 大家一定要会写

30:02.900 --> 30:10.390
啊 就可以用起来了 那么这里呢 我们产生一个随机数 my functions

30:11.230 --> 30:12.310
get random

30:13.990 --> 30:16.430
随机数里边要传一个最小值和最大值

30:17.910 --> 30:25.390
最小值是多少呢 最小值是不是这个下标为年 对吧 我们要产生一个随机的 就是产生一个随机的下标

30:25.930 --> 30:32.170
一把这个数一把这个制符出来当成一个数组 我要产生一个随机的下标 从这个下标呢 去取出一个制符

30:32.930 --> 30:38.690
这个下标是不是从零开始的 下标是从零开始的 所以说最小值的为零好 最大值呢

30:39.930 --> 30:44.610
下标的最大值是不是长度减1啊 这个模板制符出来的长度

30:45.850 --> 30:49.770
长度减1就它的最大值 产生一个随机的下标

30:50.750 --> 30:58.790
产生个随机的下标 拿到这个下标之后 我是不是可以从这个 用这个下标 从这个模板中去取出一个制符 给它拼接进去了

30:59.510 --> 31:06.670
对吧 我就从 用这个下标 从这个模板里边取出一个制符 比方说产生的下标为3

31:07.430 --> 31:14.750
随机的下标啊 那么零一二三 就取出这个制符地 把这个制符地呢 拼接到results里边

31:15.150 --> 31:19.350
你看这样子循环六次过后 是不是就拼接完了 最后呢 我们把这个results返回一碗事

31:20.750 --> 31:21.750
results

31:22.630 --> 31:27.490
保存看一下 你感觉这就是个随机的制符串 看没

31:28.610 --> 31:31.970
啊 这个随机的制符串也是蛮有用的啊 这个这边的还可以就是

31:32.690 --> 31:35.690
换数字啊 这个东西还是蛮好用的啊 比方说20

31:36.570 --> 31:40.610
长度也20的随机制符串啊 有的是蛮有用的

31:41.450 --> 31:44.770
啊 特别是做一些什么编号啊 之类的东西啊 挺有用的

31:45.730 --> 31:46.730
啊 这就是这道题啊

31:47.710 --> 31:49.190
好 这是第三题

31:50.190 --> 32:00.510
第四题 将制符串按照制符编码的顺序重新生序排序 啥意思呢 到底搞清楚啥意思啊

32:01.830 --> 32:09.750
嗯 我们比方说啊 有这么一个制符串啊 有这么一个制符串啊 比方说 随便去吧啊 随便去

32:10.430 --> 32:15.670
我希望他 这个制符串重新排序啊 重新排序 怎么重新排序呢

32:15.970 --> 32:23.410
就是把这个制符串编码小的 就制符编码小的 排前边 制符编码大的呢 排后边 就是做这么一件事

32:24.290 --> 32:27.090
那这个事怎么做呢 你回忆一下

32:28.250 --> 32:33.570
咱们以前学的数组里边那个sort 啊 数组的实力方法

32:35.130 --> 32:41.050
sort 他是不是就是干这个事的 对吧 一个数组的他排序的是 就是按照制符编码生序排序的

32:41.650 --> 32:45.370
所以说我这里要做的事情很简单 就是把它转换成数组就完了 对吧

32:45.730 --> 32:49.010
把它转换成数组来吧array from

32:50.410 --> 32:53.050
哎死 什么把它转换成数组了 没问题吧

32:53.650 --> 32:58.490
好 转换成数组之后 转换成数组之后 数组里边是不是就有一个函数sort了

32:59.650 --> 33:02.490
还需要我们自己写吗 不需要了吧 对吧

33:03.410 --> 33:09.450
他就会自动的就把进行排序啊 按照制符的编码进行排序啊 把它转换成数组然后呢

33:10.330 --> 33:15.330
这就是一个一个制符就是个数组的一项 一个制符就数组的一项 把这个数组的按照制符编码

33:15.690 --> 33:18.050
来进行排序啊 他默认就是按照编码排序

33:19.690 --> 33:25.450
排序完了之后怎么样了 排序完了之后是不是在用胶引又把它重新连接成一个数组

33:25.970 --> 33:31.890
这是不是就写完了 对不对啊 熟练的运用之前的知识可以

33:32.730 --> 33:38.850
极大程度上降低我们写单码的负担啊 你看一句话就写完了 输出结果就完事

33:39.770 --> 33:45.060
好 看一下 好 你看 他一直规规矩矩的啊 排出来了

33:45.920 --> 33:50.480
没问题吧 这就是这道题 看一下下一题

33:53.380 --> 34:00.220
从一个 第四题顺便再说一下啊 如果是僵虚了 如果是僵虚了

34:02.620 --> 34:09.380
然后 僵虚是不是我要传什么回调啊 这里可以传回调嘛 对吧 没必要 没必要

34:10.360 --> 34:18.000
这不是僵虚吗 这是不是僵虚 对吧 僵虚过后 当前是僵虚 然后来来一个reverse

34:18.640 --> 34:22.360
所以变成僵虚了 没问题吧 这就是僵虚排序

34:24.560 --> 34:30.320
没问题吧 reverse就反转嘛 反转整个数组 他目前是僵虚 反转过后就是僵虚了

34:31.280 --> 34:37.680
好 下一道题啊 从一个标准的身份证号中 取出一个东西啊 取出生日信息和性别

34:37.980 --> 34:44.460
得到一个对象啊 对象里面要保存这么一些东西啊 对象里面有四个属相啊 这里呢我们可以用一个函数来搞定嘛

34:46.500 --> 34:52.660
这个这个东西也蛮有用的 就是啊 有的时候你上网的时候 你输一个身份证号也可以发现 他性别告诉你的 性别出来了

34:52.980 --> 34:58.940
还有什么生日的信息也出来了啊 还有自动出来了 你就少可以少填写一些东西啊 方个性

35:00.140 --> 35:06.580
get info 得到信息 from PID PID 表示personal identity 表示

35:07.580 --> 35:15.180
身份证号啊 用户的唯一编号 传入一个身份证号啊 根据身份证号呢 得到得到一些信息啊 get info 得到信息

35:16.120 --> 35:24.080
好 身份证号呢 我们比方说啊 这里来测试一下啊 测试一下get info from PID 给他传一个身份证号嘛 就随便写一个

35:24.280 --> 35:31.030
就这个身份证上拿过去吧 好 看一下他输出的结果是啥啊 这里运行出来

35:32.030 --> 35:38.150
啊 这些题呢 其实是不难啊 主要是让你去练习一下 呃 这些常见的一次不错 处理函数

35:38.910 --> 35:44.870
好 那么我们这里呢 首先呢 要得到生日的信息 对吧 生日的信息是不是在这儿 对不对

35:45.550 --> 35:50.590
连在这儿吧 对不对 连在这儿 月在这儿 日在这儿 对吧 没问题吧

35:51.190 --> 35:54.910
啊 ok 我们其实都可以直接返回了 说说实话啊 都会直接返回个对象

35:55.710 --> 35:58.750
直接返回个对象 这个对象呢 什么他有哪些属性

35:59.550 --> 36:08.110
birth year birth year啊 表示的是出生连啊 连份 连份是不是在这儿 对不对 来数一下

36:09.110 --> 36:15.230
在身份证号里边 连份肯定是位置是固定的啊 位置是固定的 那么他连的骑士位置在哪呢

36:15.750 --> 36:24.350
0123456啊 下标为6的这个位置开始取长度也多少 长度为4

36:24.670 --> 36:27.070
因此呢 我们可以这样子来处理 sub str

36:28.470 --> 36:33.510
下标为6开始取4个 取4个 看一下 打印出来

36:34.430 --> 36:42.830
这个对象里边 这个属性就已经搞定了 看没1997 但是他不是数字 对吧 他不是数字 ok 你可以把它转换成数字 转换数字的方式呢

36:43.310 --> 36:50.470
可以用加号 对吧 可以用加号啊 这样子就直接转换了啊 这样是最方便的 转换数字 当然了也可以用我们学习的

36:50.750 --> 36:58.870
Number里边的posed in 把转换成数字也可以posed in 成的也可以 专门是用于把字幕上转成数字的

36:59.710 --> 37:02.110
没问题吧 对吧 很简单啊 很简单

37:03.030 --> 37:10.270
好 然后呢 我们再写啊 下面一个出生的月birth month 出生的月 月是哪儿呢

37:11.070 --> 37:14.110
月是哪儿了 是不是这里是多少位啊 多少位

37:14.870 --> 37:24.950
6 数一下吧 这是6 7 8 9 10啊 从第10位开始啊 从第10位开始

37:26.670 --> 37:32.790
第10位开始取几位了 取长度为2啊 这个subr str 后边第二参数时写的是长度

37:33.310 --> 37:36.990
保存看一下 那month 是不是出来了 对吧 month 出来了 3

37:37.710 --> 37:42.990
好 然后再来啊 还有是天啊 天哪一天出生的

37:43.590 --> 37:47.710
那么就是取12位开始 对吧 有经验了 对不对 12位开始取两位

37:49.270 --> 37:56.270
天是不是出来了 2 天就出来了 好 最后呢是性别尖道 性别

37:57.590 --> 38:03.750
性别这一块呢 我们这里取倒数第二位 取倒数第二位 看一下倒数第二位

38:04.750 --> 38:10.230
他这个三数是基数还是偶数 基数的话 那么就是男 否则的话就是

38:10.950 --> 38:12.310
女啊 就是女

38:13.230 --> 38:20.670
好 那么这里呢 我们就可以用这种方式来做 PID 取他这一位嘛 对吧 就是倒数第二位 怎么来表示倒数第二位

38:21.230 --> 38:24.030
长度减 长度减2

38:25.310 --> 38:29.430
没问题吧 这个单词我不一起写 我还写不出来了

38:30.190 --> 38:33.550
长度减2 长度减1是最后一位嘛 长度减2就倒数第二位

38:34.110 --> 38:43.470
倒数第二位 看一下他处一二 你看他虽然是字不错 但是他这一位一定是数字 可以直接用数学运算 数学运算的话 他会自动把它转成数字

38:44.750 --> 38:47.750
然后把它处一二 看一下是不是等于0

38:48.630 --> 38:53.430
如果是等于0的话 就是偶数 偶数是什么呢 就是女 否则的话就是男

38:54.110 --> 38:54.750
就这么简单

38:55.790 --> 39:01.630
包存看一下 用个三目运算符嘛 把这个三目运算符的值负责给这个简短 你看一句话就写出来

39:02.630 --> 39:07.190
那么给他身份证号 他就能帮你分析出这个身份证号中 晕含的这些信息

39:08.670 --> 39:09.390
好 这是这道题

39:10.870 --> 39:17.950
就完了 对吧 就完了 这个做作业 下去好好练一下 好好消化一下 这是我们之前学了这么多的API

39:18.670 --> 39:28.550
如果不去用一下的话 很快就会忘记 其实现在的用的也比较少 对吧 现在我们学标准库这个章节呢 用的可能不多 但是后边学到网页过后就是会大量的使用了

39:28.550 --> 39:38.230
但是我们先有一个印象 不至于后边学的使用的时候了 完全不知道至少至少得有这么一个印象 好吧 下去把这些作业好好消化一下

