WEBVTT

00:00.000 --> 00:16.540
这些课呢 咱们来开始书写第一个GS程序

00:17.060 --> 00:21.160
好 书写程序之前呢 我们首先还再一次重生一下这个概念啊

00:21.420 --> 00:23.200
就咱们的GS代码呢

00:23.720 --> 00:24.480
它是一个

00:24.740 --> 00:26.020
语言标准

00:26.280 --> 00:28.320
它可以在任何环境里边执行

00:28.580 --> 00:32.680
不仅可以在浏览器环境里边执行 也可以在其他环境里边执行

00:33.180 --> 00:35.240
只不过呢 我们这门课

00:35.500 --> 00:37.540
学习的是在浏览器环境里边执行

00:37.840 --> 00:41.380
但是无论在什么环境执行 它必须要有一个竖竹环境

00:41.900 --> 00:43.940
没有竖竹环境的话 你看不到效果

00:44.200 --> 00:48.040
你到时的代码写出来 到时可以写出来 你看不到效果

00:48.300 --> 00:50.080
因为没有执行引擎

00:50.340 --> 00:51.880
没法执行的话 你看不到效果

00:52.380 --> 00:55.460
所以说 我们选择在浏览器里边去执行我们的GS程序

00:55.720 --> 00:57.760
只不过呢 我们前期啊

00:58.020 --> 00:59.300
前期学习的时候

00:59.820 --> 01:00.840
就是没有

01:01.600 --> 01:03.660
不过多的去设计浏览器的东西

01:03.880 --> 01:05.920
只是通过这个浏览器这个载体

01:06.180 --> 01:07.460
来学习介式语言

01:07.720 --> 01:10.780
把这个语言学完了之后 需要经过很多章节

01:11.040 --> 01:14.120
这是其中一个章节 我们这个章节呢 叫做语法基础

01:14.360 --> 01:15.380
讲它的基础语法

01:15.640 --> 01:16.920
讲了之后呢 还有一些章节

01:17.180 --> 01:18.720
我们需要经过好几个章节

01:18.980 --> 01:20.500
才能把整个语言的

01:20.760 --> 01:22.300
语言这一部分学完

01:22.560 --> 01:25.620
学完之后呢 我们再去具体的设计浏览器的其他东西

01:25.880 --> 01:27.940
好啊 这是我们学习的过程

01:28.440 --> 01:31.520
首先我们这一课呢 做一个第一个介式程序

01:31.740 --> 01:34.300
这里呢 我们先随便写一个啊 先随便写一个

01:34.560 --> 01:37.360
点击右键 这里新建议 新建议文件

01:37.880 --> 01:39.160
取个名字

01:40.440 --> 01:41.200
叫TES-1

01:41.460 --> 01:42.220
听到没有

01:43.240 --> 01:45.040
好 大家也可以跟着我做啊

01:45.800 --> 01:48.880
像我上课的时候写的这一代码 大家下来都可以跟着写一遍

01:49.640 --> 01:50.680
加上一下印象

01:51.180 --> 01:52.160
好 这里边呢

01:53.080 --> 01:54.260
就是一个普通的页面

01:54.520 --> 01:57.320
这个页面里边我们不用去写什么CSS

01:57.580 --> 01:58.860
也不用去写页面内容啊

01:59.120 --> 02:00.660
这不是我们现在关心的

02:00.980 --> 02:02.260
我们在下边呢

02:02.500 --> 02:04.180
给它加上一个script元素

02:04.860 --> 02:06.220
这是个特殊的元素

02:06.660 --> 02:09.140
这个元素的内部写的是啥呢

02:09.700 --> 02:11.420
这里边写的就是gesstime

02:12.300 --> 02:13.220
写的就是gesstime

02:13.940 --> 02:16.780
好 咱们来先随便写一个啊 先随便写一个

02:17.140 --> 02:18.220
就document

02:18.900 --> 02:19.420
write

02:19.700 --> 02:21.300
你看有智能提示的啊

02:21.820 --> 02:24.020
然后呢 给它写上一个hello

02:24.580 --> 02:25.180
gesst

02:26.340 --> 02:27.500
ok 写完了

02:28.060 --> 02:30.220
好 写完了 咱们来运行一下啊 运行一下

02:30.900 --> 02:34.020
右键在浏览器中在服务器里边打开

02:34.300 --> 02:35.060
点击

02:36.780 --> 02:37.780
好 那可以看到

02:38.460 --> 02:40.300
页面上是不是出来的这个玩意儿 对不对

02:40.340 --> 02:41.180
是不是出来的这个玩意儿

02:41.500 --> 02:43.420
啊 我们还可以变化很多啊

02:43.460 --> 02:44.700
比方说我们这里呢

02:44.700 --> 02:46.580
我们可以看到右键检查

02:47.220 --> 02:47.740
你看

02:47.860 --> 02:49.300
body元素里边 展开啊

02:49.300 --> 02:51.620
body元素里边就出来一个helloges

02:51.620 --> 02:51.940
对吧

02:52.060 --> 02:53.220
helloges出现这个

02:53.340 --> 02:54.940
于是呢 浏览器把它却展出来了

02:55.180 --> 02:57.580
好 咱们还可以给它输出另外一些东西啊

02:57.580 --> 02:58.620
在页面上输出

02:58.700 --> 03:00.980
这句话的意思就是在页面上输写一个东西

03:01.980 --> 03:03.620
还可以输写另外一些东西啊

03:03.620 --> 03:05.420
比方说输写个p元素可不可以呢

03:05.420 --> 03:06.460
我们来看一下啊

03:07.180 --> 03:08.300
输写个p元素

03:08.540 --> 03:09.340
好 保存

03:09.900 --> 03:10.940
好 看一下页面

03:11.260 --> 03:12.660
你看是不是多了一个p元素了

03:12.900 --> 03:14.220
对不对 多个p元素了

03:14.420 --> 03:15.700
我们还可以怎么样呢

03:15.940 --> 03:18.700
给这个p元素里边加一些样式啊

03:18.700 --> 03:19.700
加一些样式

03:19.700 --> 03:20.940
注意这里用单引号啊

03:20.940 --> 03:23.020
我们以后再说 这里用单引号

03:23.260 --> 03:25.340
好 这里呢 比方说color red

03:26.860 --> 03:28.020
好 保存

03:28.660 --> 03:29.340
你看一下

03:29.540 --> 03:31.260
页面上是不是出了一个p元素

03:31.260 --> 03:33.780
你看它的颜色color red

03:33.780 --> 03:34.820
红色 对吧

03:35.220 --> 03:37.340
就是我们可以输出任何东西啊

03:37.340 --> 03:39.180
甚至呢 我们可以输出一个数字

03:39.620 --> 03:40.380
我们这里

03:41.780 --> 03:43.460
把这个这样子写

03:43.460 --> 03:44.780
我们以后再解释啊

03:45.340 --> 03:46.300
这要注释啊

03:46.300 --> 03:48.860
这个两个写杠 叫注释

03:49.420 --> 03:51.700
你们以前学过atema和CSS 对吧

03:51.820 --> 03:53.700
也学过注释这个概念

03:53.900 --> 03:55.020
我们以后再说吧

03:55.180 --> 03:57.300
好 这里呢 我们先输出一个数字

03:57.340 --> 03:59.020
看一下 保存1

03:59.700 --> 04:02.140
你看 页面上是不是多了一个1 数字1

04:02.380 --> 04:03.620
OK 非常简单

04:03.980 --> 04:06.220
好 这就是我们第一个gesstime

04:06.740 --> 04:08.740
好 首先呢 我要一个个说明

04:08.740 --> 04:11.420
一个个说明 这里面有哪些地方要注意

04:12.380 --> 04:12.980
第一个

04:13.700 --> 04:15.540
就是代码书写位置

04:16.260 --> 04:17.300
啊 书写位置

04:17.460 --> 04:18.580
严格来说

04:19.140 --> 04:20.060
应该这样说

04:20.340 --> 04:22.180
浏浪器环境中

04:22.460 --> 04:24.300
啊 浏浪器环境中

04:25.060 --> 04:26.180
代码书写位置

04:26.660 --> 04:28.860
我们只讨论在浏浪器环境里边

04:28.860 --> 04:29.940
代码的书写位置

04:30.220 --> 04:31.820
好 浏浪器环境里边

04:31.820 --> 04:33.500
代码的书写位置呢 有两种

04:33.500 --> 04:36.980
第一种呢 是直接书写到

04:36.980 --> 04:39.140
啊 页面 页面中

04:39.300 --> 04:40.900
因为我们运行的都是页面

04:40.900 --> 04:43.380
啊 所以说在页面中呢 书写gesstime

04:43.540 --> 04:44.820
把书写到页面里边

04:45.380 --> 04:47.580
好 那么写 写的怎么写呢

04:47.580 --> 04:49.140
具体的做法就是啊

04:50.380 --> 04:53.300
直接书写到页面中的script元素中

04:53.300 --> 04:54.940
啊 元素的内部

04:56.220 --> 04:58.580
好 以前呢 我们学习过一个元素叫做style

04:58.580 --> 05:00.740
对吧 style 这个元素

05:00.740 --> 05:01.900
这里边写的是啥呢

05:01.900 --> 05:03.460
写的是 css 代码

05:03.460 --> 05:04.820
写的是 css 代码

05:04.820 --> 05:06.860
这里边 css 代码

05:07.300 --> 05:10.020
而页面里边呢 可以写什么

05:10.020 --> 05:11.220
script元素

05:11.500 --> 05:12.860
啊 这里边写的是啥呢

05:13.020 --> 05:15.860
这里边写的就是 gs 代码

05:17.860 --> 05:18.820
啊 非常简单

05:18.820 --> 05:20.180
这是第一种书写方式

05:20.900 --> 05:23.060
好 还有另外一种书写方式

05:23.060 --> 05:23.820
是什么呢

05:24.060 --> 05:26.780
是书写到 书写到

05:26.820 --> 05:28.900
外部的 gs 文件

05:29.900 --> 05:31.620
书写到单独的 gs 文件里边

05:31.620 --> 05:33.140
就有点像 css 对吧

05:33.140 --> 05:35.260
书写到一个单独的 css 文件里边

05:36.460 --> 05:37.940
然后在页面中

05:38.900 --> 05:40.980
引用 引用这个文件

05:41.740 --> 05:43.380
好 这里呢 比方说啊 举个例子

05:43.580 --> 05:44.940
我这里新建一个文件

05:44.940 --> 05:45.860
新建一个文件

05:45.860 --> 05:48.620
比方说给他命名为 tes2 的 gs

05:49.260 --> 05:50.100
好 你看

05:50.620 --> 05:53.100
就一个后维名为 gs 的文件

05:53.620 --> 05:55.180
好 这里面呢 我们书写一个

05:55.180 --> 05:56.140
一样的写法

05:56.220 --> 05:57.460
document write

05:58.580 --> 05:59.180
你好

06:00.060 --> 06:00.420
好

06:01.140 --> 06:01.660
保存

06:02.660 --> 06:03.220
保存

06:03.580 --> 06:05.220
好 接下来呢 我们新建一个页面

06:05.220 --> 06:06.060
新建一个页面

06:06.340 --> 06:08.740
右键新建 tes2.0

06:10.260 --> 06:11.940
好 这个页面里边呢 我们在这里

06:12.180 --> 06:13.420
用一个 scripts 元素

06:14.060 --> 06:16.660
这个元素里边呢 通过 src

06:16.660 --> 06:17.820
这个属性属不属性

06:18.020 --> 06:18.940
是非常属性的

06:19.180 --> 06:21.300
表示资源地址 对吧

06:21.500 --> 06:22.780
表示资源地址

06:23.060 --> 06:25.180
好 那么这里呢 我们引用这个 gs

06:25.580 --> 06:26.180
src

06:26.900 --> 06:31.100
但是通常呢 我们都是把 gs 放在一个专门的文件夹

06:31.340 --> 06:32.820
新建个文件夹 script

06:34.580 --> 06:35.340
表示的是

06:35.660 --> 06:37.980
底边存放的全是 gs 文件

06:37.980 --> 06:39.820
当然可能有很多个 gs 文件

06:40.020 --> 06:40.900
我们把它移进去

06:42.780 --> 06:45.180
好 那么这样子呢 这里稍微改一下路径

06:45.180 --> 06:46.380
通常我们都是这样做的

06:46.780 --> 06:48.140
就是在做真实的项目里边

06:48.140 --> 06:49.540
我们都通常是这样做的

06:49.740 --> 06:50.740
好 看一下这个页面

06:51.260 --> 06:52.460
右键运行出来

06:53.380 --> 06:55.860
你会发现 代码仍然得到了执行

06:56.060 --> 06:58.540
对吧 代码仍然能够得到执行

06:59.260 --> 07:00.460
好 这是这第二种做法

07:00.660 --> 07:01.300
第二种做法

07:02.060 --> 07:03.900
那么哪种做法更好了

07:06.100 --> 07:08.860
肯定是第二种 第二种做法推荐

07:10.300 --> 07:11.340
具体的原因

07:11.500 --> 07:14.340
跟 css 那一块是一样的 是一样的

07:14.660 --> 07:16.300
你把它写成外部文件了

07:16.300 --> 07:19.180
更加有利于流烂器缓存

07:19.500 --> 07:21.340
另外呢 更加有利于

07:21.540 --> 07:23.620
就是我们这里有个这么一个说法

07:24.420 --> 07:25.540
叫做代码分离

07:26.620 --> 07:27.620
什么代码分离呢

07:27.900 --> 07:29.460
就是页面内容

07:30.820 --> 07:33.100
样式和功能

07:33.620 --> 07:34.660
三者分离

07:36.060 --> 07:36.940
内容是什么

07:37.220 --> 07:38.940
内容就是 etym 的元素 对吧

07:38.940 --> 07:39.940
就是元素

07:40.060 --> 07:41.820
那么我们在 etym 的文件里面

07:41.820 --> 07:43.780
写上元素 各种各样的元素

07:44.220 --> 07:45.700
好 样式是什么

07:45.820 --> 07:47.700
样式是不是 css 代码

07:47.820 --> 07:48.340
对不对

07:48.340 --> 07:49.660
我们专门拿一个文件

07:49.700 --> 07:51.540
来书写 css 代码

07:52.140 --> 07:54.460
那么在页面里面去引用就完事了

07:55.740 --> 07:56.660
功能是什么

07:56.660 --> 07:58.140
功能就是 js 代码

07:58.500 --> 07:59.700
js 代码

07:59.700 --> 08:03.020
我们通常也是把它放到不同的文件里面

08:03.100 --> 08:04.580
然后在页面上去使用

08:05.180 --> 08:06.500
这样的好处在于什么呢

08:06.500 --> 08:08.740
好处在于更加容易维护

08:09.740 --> 08:10.900
容易维护

08:12.100 --> 08:13.060
和阅读

08:13.460 --> 08:14.620
就是我要改代码

08:14.620 --> 08:16.620
我要改功能 直接去 js 文件

08:16.940 --> 08:19.380
我要改样式 直接去 css 文件

08:19.380 --> 08:23.140
要改要改标签 改元素 直接去 etym 文件

08:23.580 --> 08:24.900
这样子我们要改什么东西

08:24.900 --> 08:26.460
直接去找到现在的文件就完事了

08:26.660 --> 08:28.740
就不用去一个文件里面到处去找

08:28.860 --> 08:30.140
这样更加容易维护

08:30.220 --> 08:32.340
阅读起来由于把它分开了

08:32.340 --> 08:35.300
每个文件里面的东西相对来说就减少了很多

08:35.500 --> 08:36.860
阅读起来也好阅读

08:37.100 --> 08:39.020
所以说这是有这么一个好处

08:39.140 --> 08:41.460
并且从效率上来讲

08:41.780 --> 08:43.100
把它做成外部文件过后

08:43.100 --> 08:46.020
更加有利于浏览器缓存这个文件

08:46.140 --> 08:49.100
那么可以减少跟网络之间的交互速度

08:49.140 --> 08:51.220
交互次数

08:52.020 --> 08:55.020
这是关于这一块

08:55.180 --> 08:56.740
我们推荐使用外部文件

08:56.860 --> 08:58.620
但是我们在商科的时候

08:58.900 --> 08:59.780
这里要说到了

08:59.980 --> 09:03.540
我们在商科的时候通常使用的是地种方式

09:03.740 --> 09:07.340
因为地种方式更加容易变于大家看得清楚

09:07.540 --> 09:09.940
页面在这 然后接下来在这

09:10.140 --> 09:12.780
前期上课的时候 特别是前期上课的时候

09:13.060 --> 09:17.020
我们更加使用这种做法 地种做法

09:17.740 --> 09:20.980
好 这是关于代码的书写位置

09:21.580 --> 09:24.500
好 这里面我要额外说一点

09:25.060 --> 09:25.820
要说什么呢

09:25.940 --> 09:31.100
就是页面上有可能会出现多个script元素

09:31.980 --> 09:32.860
就这里页面上

09:33.100 --> 09:36.020
我们这里只写了一个script元素

09:36.020 --> 09:36.420
对吧

09:36.620 --> 09:38.500
但是它有可能会出现多个

09:38.660 --> 09:39.460
比方说

09:40.980 --> 09:42.620
下面再写一个script元素

09:42.620 --> 09:45.020
好 这里面我就不用外部链接了

09:45.060 --> 09:46.980
不去链接什么介石文件了

09:47.180 --> 09:48.820
直接把代码输写到这

09:49.340 --> 09:50.820
好 比方说我们这里这样子写

09:51.220 --> 09:53.820
document write 2

09:55.020 --> 09:56.020
输出一个2

09:56.220 --> 09:57.420
在页面上输出一个2

09:57.620 --> 10:00.500
好 那么这个介石里边把它写上1

10:01.420 --> 10:02.020
写上1

10:02.620 --> 10:03.700
好 你看一下这个页面

10:03.820 --> 10:07.220
是不是用了两个script元素

10:08.220 --> 10:09.620
好 还能不能写呢

10:09.620 --> 10:11.020
还可以写

10:14.220 --> 10:14.900
好 那看

10:15.020 --> 10:16.220
我们写了三个 对吧

10:16.420 --> 10:18.820
一个介石 第二个介石 第三个介石

10:19.020 --> 10:20.420
好 那么运行出来的话

10:20.420 --> 10:21.620
它会输出什么呢

10:21.820 --> 10:23.820
它会输出1还是2还是3的

10:23.820 --> 10:24.620
咱们来看一下

10:25.620 --> 10:26.620
看一下这边就行了

10:27.620 --> 10:29.020
它输出了1 2 3

10:29.420 --> 10:32.220
说明它说明是不是都运行了

10:32.420 --> 10:36.020
而且运行的顺序是不是从上到下运行

10:36.220 --> 10:38.420
对吧 是从上到下运行

10:39.420 --> 10:41.220
如果我把顺序叼换一下呢

10:41.220 --> 10:42.620
比方说这个东西写前边

10:43.020 --> 10:44.020
这东西写前边

10:44.220 --> 10:45.220
那又会怎么样呢

10:45.620 --> 10:46.620
好 这样子一来的话

10:46.620 --> 10:49.220
它就会输出2 1 3

10:49.620 --> 10:51.420
咱们这个介石里边写的是1

10:52.220 --> 10:53.820
好 那么输出就是2 1 3

10:53.820 --> 10:54.420
保存

10:55.620 --> 10:56.820
所以这个地方很简单

10:56.820 --> 10:57.820
非常非常简单

10:58.020 --> 11:03.420
就是页面中可以存在多个script元素

11:06.020 --> 11:07.620
它页面的直行顺序

11:08.620 --> 11:10.420
好 直行顺序

11:11.420 --> 11:12.620
从上到下

11:13.420 --> 11:14.620
从上到下

11:15.620 --> 11:17.820
就是按照这个元素的输写顺序

11:18.020 --> 11:20.020
从上到下进行执行

11:20.620 --> 11:21.620
其实这个非常常见

11:21.620 --> 11:22.620
随便找一个网站

11:22.620 --> 11:23.420
所一遍找

11:23.620 --> 11:24.420
比方说就淘宝吧

11:26.820 --> 11:28.020
好 咱们来看一下

11:28.220 --> 11:30.620
这个淘宝页面里边点击右键

11:30.620 --> 11:31.620
这里检查

11:33.420 --> 11:37.020
我们来看一下淘宝页面里边有多少个script元素

11:37.620 --> 11:40.620
这里按ctrl加f查找

11:40.620 --> 11:43.220
查找这里边我们输入script

11:43.620 --> 11:44.420
好 你看

11:44.620 --> 11:46.220
找多好个 你看一下自己看

11:46.820 --> 11:48.620
找到了我们这样的鞋吧

11:48.820 --> 11:51.020
把鞋权script元素

11:51.420 --> 11:52.620
加在左边的监控号

11:52.820 --> 11:54.020
找到了50个

11:54.020 --> 11:55.620
找到了50个 你看

11:56.220 --> 11:59.220
就是页面上的script元素可能会很多

11:59.420 --> 12:00.620
可能会很多很多

12:01.420 --> 12:03.820
这是关于script元素

12:05.020 --> 12:06.620
可以写多个 从上到下执行

12:07.220 --> 12:09.820
好 另外一个注意的地方就是关于这个

12:10.820 --> 12:13.020
如果一个script元素

12:13.620 --> 12:14.620
引用了

12:15.620 --> 12:17.420
外部文件

12:18.020 --> 12:22.020
内部不能输写任何代码

12:22.820 --> 12:23.420
什么意思呢

12:23.820 --> 12:24.620
就比方说这

12:25.020 --> 12:26.220
这个script元素

12:26.220 --> 12:27.620
它是不是引用了外部文件

12:27.820 --> 12:29.220
对吧 引用的是外部文件

12:29.420 --> 12:31.020
OK 那么这个外部文件

12:31.020 --> 12:33.420
就这个script元素里边

12:33.620 --> 12:35.020
它是不能写任何东西的

12:35.220 --> 12:37.220
比方说咱们在这里边写一个东西

12:37.620 --> 12:38.820
写个Hello

12:39.220 --> 12:41.020
好 咱们来看一下页面 保存

12:42.420 --> 12:43.220
有这个Hello吗

12:43.620 --> 12:44.220
是不是没有

12:44.420 --> 12:45.420
对吧 没有吧

12:45.620 --> 12:46.820
所以说你这里写的东西

12:46.820 --> 12:48.220
它会直接给你忽略掉

12:48.420 --> 12:49.220
就当你没写

12:49.420 --> 12:50.220
就当你没写

12:50.820 --> 12:51.620
明白这个意思吗

12:52.020 --> 12:54.420
OK 这是关于这一块

12:54.620 --> 12:56.220
就是你如果以后

12:56.620 --> 12:58.220
这个script元素

12:58.420 --> 13:00.020
引用了外部的文件

13:00.220 --> 13:01.420
引用了外部的文件

13:01.420 --> 13:03.820
那么你就里边是不能输写任何东西的

13:04.220 --> 13:06.220
你的代码必须要输写到文件里边

13:06.620 --> 13:07.420
它不认的

13:08.420 --> 13:10.020
好 另外一个就是

13:10.020 --> 13:10.620
还有一个点

13:10.620 --> 13:13.820
就是script元素

13:14.020 --> 13:16.820
有一个可选的属性

13:17.020 --> 13:18.020
叫做type

13:18.220 --> 13:19.020
叫做type

13:19.820 --> 13:21.020
好 这个属性

13:21.420 --> 13:26.820
该属性用于指定代码的类型

13:27.820 --> 13:28.820
咱们来看一下

13:29.220 --> 13:31.220
就这个type属性可以写可以不写

13:31.220 --> 13:32.020
不写的话

13:32.020 --> 13:34.220
默认你的代码就是解释

13:35.020 --> 13:36.020
也就是说

13:36.420 --> 13:38.220
页面上实际上

13:38.620 --> 13:41.820
还不仅仅是可以直写解释代码

13:41.820 --> 13:42.820
还可以写别的

13:43.020 --> 13:44.020
还可以写别的

13:44.220 --> 13:45.020
特别是过去

13:45.020 --> 13:46.520
我们之前介绍过榴弹期大战

13:46.520 --> 13:47.020
对吧

13:47.420 --> 13:48.220
榴弹期大战里边

13:48.220 --> 13:50.220
微卵不是出了什么解释script吗

13:50.620 --> 13:52.820
不是出了什么vbscript吗

13:52.820 --> 13:53.220
对吧

13:53.820 --> 13:55.220
它还可以写别的代码

13:55.420 --> 13:57.620
所以说以前是要要求

13:57.820 --> 13:59.420
特别是在榴弹期大战的时候

13:59.620 --> 14:00.620
要要求大家

14:00.820 --> 14:03.020
必须要输写上type属性

14:04.020 --> 14:05.820
这个属性给它指定一下

14:06.420 --> 14:08.620
就是这里代码的类型是啥

14:09.420 --> 14:10.620
那么现在不用指定了

14:10.620 --> 14:12.020
因为默认就是解释

14:12.220 --> 14:12.420
好

14:12.420 --> 14:13.720
如果你要指定的话

14:13.720 --> 14:14.620
怎么指定的

14:14.820 --> 14:16.220
这样子写text

14:16.720 --> 14:18.220
写杠加vastcript

14:18.620 --> 14:19.420
这个是啥

14:19.420 --> 14:21.720
如果你听过我们的

14:22.420 --> 14:25.220
我讲的atema和css课程的话

14:25.220 --> 14:27.820
那么你知道这个东西叫做mime

14:28.820 --> 14:35.620
该属性值是mime格式

14:36.020 --> 14:37.020
应该知道这个格式

14:37.220 --> 14:38.420
如果你没有听过之前的课程

14:38.420 --> 14:38.820
没关系

14:38.820 --> 14:39.620
很简单

14:40.020 --> 14:41.420
就表示的是这是介石代

14:41.420 --> 14:42.220
就介石代

14:42.820 --> 14:44.020
mime是什么

14:44.020 --> 14:46.020
表示的是一个标准的制服串

14:46.020 --> 14:47.620
用一个标准的制服

14:47.620 --> 14:49.420
来表示的一个类型

14:49.420 --> 14:50.620
一个东西的类型

14:50.620 --> 14:52.020
比方图片是什么图片

14:52.020 --> 14:54.420
png还是gpg有一个标准的类型

14:56.020 --> 14:56.920
可以写可以不写

14:56.920 --> 14:57.920
现在都可以不用写了

14:57.920 --> 14:58.920
都可以不用写了

15:00.120 --> 15:00.320
好

15:00.320 --> 15:01.120
这就这一块

15:01.520 --> 15:03.320
介石代码书写的位置

15:03.520 --> 15:05.520
当然在不同的环境里边

15:05.520 --> 15:06.720
它的书写位置有不一样

15:06.720 --> 15:07.320
比方说以后

15:07.320 --> 15:09.320
你们要学习漏道介石

15:09.520 --> 15:11.120
漏道介石肯定没有这个东西的

15:11.120 --> 15:11.520
对吧

15:11.520 --> 15:13.320
漏道介石它是不存在页面的

15:13.320 --> 15:15.120
页面肯定没有这些东西的

15:15.120 --> 15:15.920
那又不一样了

15:15.920 --> 15:16.920
又不一样了

15:16.920 --> 15:18.920
它又是专门只能书写文件

15:19.320 --> 15:19.920
不一样的

15:20.320 --> 15:21.120
而看情况

15:21.120 --> 15:22.320
看你的环境是什么

15:22.520 --> 15:24.320
目前我们只是讨论浏览器环境

15:24.520 --> 15:25.120
就这么回事

15:26.920 --> 15:28.120
这是关于这一块

15:28.720 --> 15:29.120
好

15:29.120 --> 15:36.080
接下来认识基本语法

15:36.880 --> 15:38.080
认识基本语法

15:39.080 --> 15:40.680
就是介石代码里边

15:41.880 --> 15:43.480
它的基本语法是什么

15:43.680 --> 15:44.880
首先第一条

15:45.280 --> 15:45.880
第一条

15:47.080 --> 15:48.080
语法部分

15:49.080 --> 15:52.880
语法部分必须都是英文符号

15:54.080 --> 15:55.880
就是如果你要写一些符号的话

15:55.880 --> 15:57.280
必须要是英文符号

15:57.680 --> 15:59.280
比如说这里有个句号

15:59.680 --> 16:01.480
你千万不要写个中文句号在这

16:01.680 --> 16:03.280
千万不要写个中文句号在这

16:03.480 --> 16:04.880
我发现有些开发

16:04.880 --> 16:06.480
就是有些同学很聪明

16:07.080 --> 16:09.280
他下来过后就直接去调那个输入法

16:09.880 --> 16:12.480
让中文句号就是中文的符号一个都出不来

16:12.880 --> 16:14.080
可以调的

16:14.080 --> 16:14.880
你可以去摆度一下

16:14.880 --> 16:15.880
我没去调过

16:16.280 --> 16:17.280
我觉得这个挺聪明的

16:17.480 --> 16:18.480
就防止自己写错

16:18.680 --> 16:19.880
防止自己写错

16:19.880 --> 16:21.280
因为我们写习惯了

16:21.480 --> 16:23.080
中文和英文一下就区分开了

16:23.280 --> 16:26.280
大家可以区分开中文句号和英文句号

16:26.280 --> 16:29.080
但是有些符号大家可能不太容易区分开

16:29.080 --> 16:30.080
特别是初学者

16:30.080 --> 16:30.880
比方那个兜号

16:31.080 --> 16:32.480
这个兜号是中文还是英文的

16:33.080 --> 16:33.680
是中文的

16:33.680 --> 16:34.880
我一看就知道是中文的

16:35.680 --> 16:36.680
英文兜号是这个样子

16:36.880 --> 16:37.280
这个样子

16:37.280 --> 16:37.680
看没

16:38.280 --> 16:39.480
当然这里不能写兜号

16:39.680 --> 16:40.880
就是该写兜号的时候

16:40.880 --> 16:42.680
你也只能用英文兜号

16:42.880 --> 16:43.480
原来这个意思

16:44.280 --> 16:46.080
所以说第一个基本语法

16:46.080 --> 16:47.780
都必须要是英文符号

16:48.080 --> 16:48.880
不能是中文

16:49.280 --> 16:50.480
包括这里的分号看没

16:50.480 --> 16:51.980
分号也是个英文的

16:51.980 --> 16:52.780
不能写个中文

16:53.280 --> 16:54.280
几个中文号出错的

16:55.180 --> 16:55.580
好

16:55.580 --> 16:55.980
这里

16:55.980 --> 16:56.980
你看刚才就出错了

16:56.980 --> 16:57.380
对吧

16:57.380 --> 16:57.980
出错了

16:57.980 --> 16:59.080
出错还会提示的

16:59.080 --> 16:59.580
你看

16:59.780 --> 17:00.980
这个文件夹下面的

17:00.980 --> 17:01.680
这个文件夹

17:01.680 --> 17:02.380
这个文件夹下面的

17:02.380 --> 17:03.180
这个文件夹

17:03.280 --> 17:05.180
这个文件里边的第一行

17:05.180 --> 17:05.580
看没

17:05.580 --> 17:06.880
第一行有错误

17:07.080 --> 17:07.980
这是行号

17:08.080 --> 17:09.480
第一行有错误

17:10.080 --> 17:10.680
ok

17:12.280 --> 17:12.580
好

17:12.580 --> 17:14.680
这是第1个规则

17:14.980 --> 17:16.080
第1个语法规则

17:16.380 --> 17:17.180
第2个语法规则

17:17.780 --> 17:19.980
就是介绍由

17:21.380 --> 17:21.980
代码

17:22.280 --> 17:22.880
由

17:23.880 --> 17:25.880
多条语句构成

17:26.280 --> 17:27.680
多条语句构成

17:28.180 --> 17:29.480
每个语句

17:30.180 --> 17:33.180
用英文分号结束

17:34.580 --> 17:36.180
用英文分号结束

17:36.980 --> 17:38.080
这也是个规则

17:38.380 --> 17:38.880
好

17:39.180 --> 17:39.880
咱们比方说

17:39.880 --> 17:40.280
这里

17:40.280 --> 17:41.780
我们可以写多条语句

17:42.080 --> 17:42.980
比方说这一条

17:43.380 --> 17:43.880
这一条

17:43.880 --> 17:44.280
这一条

17:44.280 --> 17:44.780
这一条

17:45.180 --> 17:45.780
比方说这里

17:45.780 --> 17:46.380
我们写个

17:48.180 --> 17:49.080
这里就从

17:50.180 --> 17:50.880
这样子写吧

17:51.480 --> 17:51.980
7

17:52.380 --> 17:52.980
8

17:53.080 --> 17:53.680
9

17:54.680 --> 17:55.380
789

17:55.380 --> 17:55.880
3个

17:56.180 --> 17:56.380
好

17:56.380 --> 17:57.080
保存一下

17:57.180 --> 17:57.880
看一下页面

17:58.380 --> 17:59.180
你看789

17:59.180 --> 18:00.580
是不是全部输出来了

18:00.980 --> 18:01.380
对吧

18:01.380 --> 18:02.180
非常简单

18:02.580 --> 18:03.780
那么也就是说介绍代码

18:03.780 --> 18:05.480
可以有多条语句组成

18:05.780 --> 18:06.980
每个语句后边

18:07.280 --> 18:08.580
加上英文分号

18:08.580 --> 18:09.180
但是

18:09.180 --> 18:10.580
它没有强制要求

18:12.380 --> 18:13.780
并非强制要求

18:13.780 --> 18:15.680
介绍里边有很多的地方

18:15.680 --> 18:17.580
它的要求都比较松散

18:18.380 --> 18:19.680
并非强制要求

18:20.280 --> 18:21.880
也就是说这个分号

18:21.880 --> 18:23.080
你可以不写

18:23.280 --> 18:24.380
是可以不写的

18:24.580 --> 18:26.780
但是我不建议大家不写

18:27.480 --> 18:28.380
不建议大家不写

18:29.480 --> 18:31.580
初学者一定要把这个分号加上

18:31.780 --> 18:32.880
一定要把个分号加上

18:32.880 --> 18:34.380
表示这个语句结束

18:34.580 --> 18:36.980
一条语句就表示要做一件事

18:37.080 --> 18:38.480
一条语句做一件事

18:38.680 --> 18:39.380
比方说这里

18:39.480 --> 18:41.480
第一条语句输出一个7

18:41.580 --> 18:42.880
在页面上输出一个7

18:42.980 --> 18:44.280
第二条语句输出一个8

18:44.280 --> 18:45.580
第三条语句输出一个9

18:46.080 --> 18:47.480
每条语句表示一件事

18:47.780 --> 18:49.380
我建议初学者

18:49.480 --> 18:50.880
一定要把这个分号加上

18:50.980 --> 18:52.980
尽管它并非强制要求

18:53.980 --> 18:55.680
这个地方我要顺便说一下

18:55.680 --> 18:57.080
以后你们到了公司里边

18:57.080 --> 18:58.980
公司每个公司有自己的规范

18:59.880 --> 19:01.880
绝大部分公司里边的

19:02.080 --> 19:03.880
规范里边都有一条

19:04.080 --> 19:05.580
绝大部分不是说所有

19:05.880 --> 19:07.580
绝大部分公司里边都有一条

19:08.080 --> 19:08.980
介石代码

19:09.080 --> 19:11.180
每句话后边把分号加上

19:11.480 --> 19:12.280
分号加上

19:12.380 --> 19:13.480
它没有强制要求的

19:13.480 --> 19:15.580
但是有这么一个规范来约束

19:15.780 --> 19:17.680
公司内部会有这么一个规范来约束

19:18.180 --> 19:19.080
避免出问题

19:19.380 --> 19:20.080
避免出问题

19:20.580 --> 19:22.880
让这个介石执行引擎清楚的知道

19:22.880 --> 19:24.180
这是一个一条语句

19:24.680 --> 19:25.080
好了

19:25.180 --> 19:26.080
这是关于这一点

19:26.080 --> 19:26.780
非常简单

19:27.480 --> 19:28.080
第三点的

19:28.480 --> 19:29.180
刚才已经说到了

19:29.180 --> 19:30.580
就是介石代码

19:30.980 --> 19:32.280
从上到下

19:33.180 --> 19:34.180
执行

19:35.180 --> 19:37.080
从上到下一条语句

19:37.180 --> 19:38.480
一条语句执行

19:38.780 --> 19:40.780
上一条语句没有执行完

19:40.780 --> 19:42.380
下一条语句等着

19:42.780 --> 19:43.380
等着

19:44.180 --> 19:45.380
并且是同步执行

19:46.580 --> 19:48.180
我们先以后有异部

19:48.180 --> 19:49.880
我们以后说到异部的

19:49.880 --> 19:51.580
内容再详细的说

19:51.580 --> 19:54.780
但是现在都是从上到下

19:54.780 --> 19:55.580
一次执行

19:55.980 --> 19:56.780
同步执行

19:56.980 --> 19:58.580
就是上一条代码没有执行完

19:58.580 --> 19:59.780
下一条代码不能执行

20:01.380 --> 20:03.780
这是关于它的基本语法

20:03.780 --> 20:04.780
非常简单

20:04.780 --> 20:05.580
非常简单

20:05.980 --> 20:07.380
注意一下这个就行了

20:07.580 --> 20:10.580
就是所有的地方都必须是英文符号

20:10.580 --> 20:11.780
包括这个扩号

20:11.780 --> 20:12.780
包括这里的扩号

20:13.780 --> 20:15.480
还有一点

20:17.180 --> 20:18.380
介石语言

20:19.680 --> 20:21.680
大小写敏感

20:21.980 --> 20:23.180
什么叫大小写敏感

20:23.880 --> 20:25.580
就是如果一个字母

20:25.580 --> 20:26.980
它是大写和小

20:27.280 --> 20:28.780
和这个字母是小写

20:29.180 --> 20:30.380
意思是不一样的

20:30.480 --> 20:31.380
是不一样的

20:31.480 --> 20:32.380
比方说这里

20:32.680 --> 20:34.880
要向页面上输出东西

20:35.280 --> 20:36.380
我们这里用的是啥呢

20:36.480 --> 20:37.380
用的是write对吧

20:37.380 --> 20:38.580
document表示文档

20:38.780 --> 20:40.080
就是整个页面的文档

20:40.780 --> 20:41.780
write什么意思呢

20:41.780 --> 20:43.180
表示的是书写对吧

20:43.180 --> 20:43.980
写个啥呢

20:43.980 --> 20:44.780
写个酒

20:45.280 --> 20:46.080
很好理解吧

20:46.180 --> 20:46.580
好

20:46.680 --> 20:48.080
那么比方说我把这个w

20:48.580 --> 20:50.280
w变成大写

20:50.680 --> 20:51.180
你看一下

20:51.180 --> 20:53.080
还能能打印出这个酒吗

20:53.180 --> 20:53.780
保存

20:55.380 --> 20:56.380
打印不出来了

20:56.480 --> 20:56.880
对吧

20:56.980 --> 20:57.880
打印不出来了

20:58.180 --> 20:58.480
好

20:58.480 --> 21:00.380
咱们右键检查一下

21:00.980 --> 21:01.780
你看这里的

21:01.780 --> 21:02.580
他给你包了一个错

21:02.580 --> 21:03.180
看到没

21:03.480 --> 21:04.180
有个错

21:04.680 --> 21:05.880
这个错怎么看呢

21:06.180 --> 21:06.780
点击这

21:07.180 --> 21:07.880
控制台

21:08.280 --> 21:09.680
console控制台

21:09.980 --> 21:11.180
控制台里边就告诉你

21:11.880 --> 21:12.680
他说啥呢

21:12.980 --> 21:14.080
说这个write

21:14.080 --> 21:15.080
他不是一个方形

21:15.080 --> 21:16.580
我们现在还不知道方形是啥

21:16.580 --> 21:17.580
是函数的意思

21:17.780 --> 21:18.580
函数的意思

21:18.980 --> 21:19.780
他表示的说

21:19.780 --> 21:20.280
这个东西

21:20.280 --> 21:21.480
地方总之写错了

21:21.580 --> 21:22.580
总之你写错了

21:23.080 --> 21:23.980
哪里写错了呢

21:23.980 --> 21:25.080
这里可以点击一下

21:25.080 --> 21:26.980
你看谷歌的调试起来很方便

21:27.280 --> 21:28.080
点击一下这

21:28.380 --> 21:29.780
你看他告诉你在这里写错了

21:30.680 --> 21:31.580
那么你检查一下

21:31.580 --> 21:32.080
你会发现

21:32.080 --> 21:32.980
原来这里

21:33.880 --> 21:34.780
应该是小写

21:34.980 --> 21:35.880
应该是小写

21:36.780 --> 21:37.180
好吧

21:37.180 --> 21:39.180
就是有些错误需要在运行的时候

21:39.180 --> 21:40.080
看得见

21:40.280 --> 21:41.880
有些错误是要在运行的时候

21:41.880 --> 21:42.480
在看得见

21:42.980 --> 21:44.480
一开始编写单码的时候呢

21:44.480 --> 21:45.880
有些错误是看不见的

21:46.880 --> 21:47.180
好

21:47.180 --> 21:47.880
这是

21:48.980 --> 21:49.580
这一条啊

21:49.580 --> 21:50.480
大小写敏感

21:50.580 --> 21:51.480
所以大家一定要注意

21:51.480 --> 21:52.680
区分一下大小写

21:53.180 --> 21:53.680
好了

21:53.780 --> 21:54.580
这是基本语法

21:54.580 --> 21:55.280
没什么好说的

21:55.280 --> 21:56.280
非常非常简单

21:56.780 --> 21:57.880
后边还有一些语法

21:57.880 --> 21:59.380
我们遇到的时候再说

21:59.980 --> 22:00.580
然后呢

22:00.580 --> 22:01.380
下面一个

22:01.980 --> 22:02.980
认识

22:03.380 --> 22:04.480
输出语句

22:06.180 --> 22:07.180
输出语句

22:07.580 --> 22:07.980
好

22:08.080 --> 22:09.780
接下来我要介绍几个语句

22:09.880 --> 22:11.880
是用来输出到界面上

22:11.880 --> 22:13.580
编语我们查看结果的

22:13.780 --> 22:15.280
因为我们编程的话

22:15.280 --> 22:17.080
一开始学习本来就枯燥

22:17.980 --> 22:19.280
就是学习很多逻辑概念

22:19.280 --> 22:20.480
其实你学进去的话

22:20.680 --> 22:21.780
你会觉得很有意思

22:21.880 --> 22:23.580
其实你只要充分理解了

22:23.580 --> 22:24.580
这里边的含义的话

22:24.580 --> 22:25.580
会觉得很有意思

22:26.180 --> 22:26.880
只不过一开始

22:26.880 --> 22:28.080
我们看不到什么效果

22:28.080 --> 22:28.480
因此呢

22:28.480 --> 22:29.980
我们必须要把我们的结果

22:29.980 --> 22:31.080
比方说我们算一个东西

22:31.080 --> 22:31.980
算算算算算算

22:32.080 --> 22:32.880
算完了之后呢

22:32.880 --> 22:35.080
我要把这个结果打印出来

22:35.280 --> 22:36.580
就是显示出来

22:36.580 --> 22:37.780
把编语给我查看

22:37.980 --> 22:38.780
那么这个时候呢

22:38.780 --> 22:40.280
就要用到输出语句

22:40.380 --> 22:41.180
好这里呢

22:41.280 --> 22:42.580
我这里首先说明一下

22:44.380 --> 22:45.480
所有的

22:45.780 --> 22:47.180
我干嘛要打猪似呢

22:47.180 --> 22:47.780
我的天

22:49.850 --> 22:51.850
所有的输出语句

22:53.250 --> 22:54.350
都不是

22:55.650 --> 22:56.350
Ackman

22:56.350 --> 22:57.650
就是ES标准

22:58.950 --> 23:01.050
我们以后会介绍很多的输出语句

23:01.450 --> 23:03.050
什么输出到界面啊

23:03.050 --> 23:04.850
输出到控制台啊等等等等

23:05.050 --> 23:07.250
他都不是ES标准

23:07.650 --> 23:09.050
ES标准里边

23:09.250 --> 23:11.350
都没有设计到任何的输出语句

23:11.550 --> 23:12.350
明远都意思吧

23:13.250 --> 23:15.250
为什么他不设计到这些输出语句呢

23:15.250 --> 23:16.850
因为不同的环境

23:17.050 --> 23:17.950
他的输出

23:18.250 --> 23:19.450
显示的地方都不一样

23:19.450 --> 23:21.350
我凭什么能够制定标准呢

23:21.450 --> 23:23.850
我也无法预测将来这个介事语言

23:23.850 --> 23:25.250
他能用到哪些环境里边

23:25.250 --> 23:26.250
我无法预测的

23:26.450 --> 23:28.850
所以说在ES标准里边是没有

23:29.450 --> 23:31.650
说我们输出语句在介事里面干什么些

23:31.650 --> 23:32.050
没有

23:32.250 --> 23:34.450
这些都是环境给你做出来的

23:34.450 --> 23:35.550
比方说我们现在

23:35.750 --> 23:37.250
在这个浏览器环境里边

23:37.250 --> 23:38.450
那么浏览器环境里边

23:38.450 --> 23:40.650
给你准备好了一些输出语句

23:40.650 --> 23:41.350
你可以用

23:41.750 --> 23:43.250
但是拖累了这个浏览器环境

23:43.250 --> 23:44.150
就不一定能用了

23:44.150 --> 23:45.550
就不一定能用了

23:45.950 --> 23:47.450
所以我们这里说的输出语句

23:47.950 --> 23:49.250
都不是ES标准

23:49.550 --> 23:49.650
好

23:49.650 --> 23:50.650
我们这里一个个说

23:51.250 --> 23:51.850
首先

23:53.350 --> 23:54.850
是这个 document

23:55.650 --> 23:56.450
delete

23:56.750 --> 23:57.450
delete

23:58.950 --> 24:00.250
该语句呢

24:00.450 --> 24:02.550
用于将内容

24:03.150 --> 24:03.850
将内容

24:04.050 --> 24:05.450
准确的说将数据

24:06.050 --> 24:07.250
输出到

24:07.850 --> 24:08.450
页面

24:08.650 --> 24:09.450
输出到页面

24:10.050 --> 24:10.450
好

24:10.450 --> 24:11.050
简单说一下

24:11.050 --> 24:12.250
我们以后用的很少

24:12.250 --> 24:13.250
这东西用的很少

24:13.250 --> 24:14.950
就前期学习的时候看一下

24:15.650 --> 24:15.950
好

24:15.950 --> 24:16.650
就是这个东西

24:16.950 --> 24:17.650
document

24:17.650 --> 24:18.050
del

24:18.050 --> 24:19.050
最英文句号

24:19.050 --> 24:20.050
del right

24:20.050 --> 24:21.050
两个小课号

24:21.250 --> 24:22.250
小课号里边

24:22.250 --> 24:23.350
写上你的数据

24:23.550 --> 24:24.450
你要输出什么

24:24.450 --> 24:26.050
如果你要输出一段文字的话

24:26.050 --> 24:27.250
你要写上双引号

24:27.750 --> 24:28.850
两个英文双引号

24:28.850 --> 24:29.950
输出一段文字

24:30.850 --> 24:31.450
保存

24:32.250 --> 24:32.850
看一下

24:33.050 --> 24:34.050
文字就输出出来了

24:35.250 --> 24:36.250
如果你要输出文字的话

24:36.250 --> 24:37.450
记得要写上双引号

24:38.450 --> 24:38.650
好

24:38.650 --> 24:39.650
这是这一块

24:40.950 --> 24:41.850
document is right

24:42.550 --> 24:42.750
好

24:42.750 --> 24:43.450
另外一个

24:43.450 --> 24:44.050
另外一个

24:44.050 --> 24:44.950
叫做unlocked

24:45.350 --> 24:45.950
unlocked

24:46.750 --> 24:47.950
这个该语句呢

24:49.350 --> 24:51.250
用于将数据

24:52.050 --> 24:53.650
用弹框

24:53.650 --> 24:55.050
弹窗的形式

24:58.050 --> 24:58.650
显示

24:58.650 --> 24:59.550
显示到页面

25:01.950 --> 25:02.450
到页面

25:03.050 --> 25:03.350
好

25:03.350 --> 25:03.950
比方说

25:04.150 --> 25:04.750
比方说

25:05.050 --> 25:06.450
这个我们以后也会讲

25:07.050 --> 25:07.750
很简单

25:07.850 --> 25:08.750
非常非常简单

25:09.050 --> 25:10.450
这里我们新建个文件

25:10.950 --> 25:12.450
test3.1

25:13.650 --> 25:14.850
这里右车关闭

25:16.150 --> 25:16.850
比方说

25:16.950 --> 25:18.250
这里我们写一个script

25:18.850 --> 25:19.450
这里里面

25:19.450 --> 25:21.250
我们写个unlocked

25:21.850 --> 25:23.050
我这里顺便说一下

25:24.450 --> 25:25.150
就是有的时候

25:25.150 --> 25:26.250
jastime写乱了

25:26.250 --> 25:28.250
比方说这个元素乱了

25:28.450 --> 25:30.450
这里边的jastime也跟着乱了

25:30.450 --> 25:31.850
比方说我们写个unlocked

25:32.550 --> 25:33.450
unlocked

25:33.650 --> 25:34.250
hello

25:35.450 --> 25:37.650
然后这里我又写个document

25:38.050 --> 25:38.850
delrite

25:39.350 --> 25:40.150
delrite

25:43.050 --> 25:43.650
比方说

25:43.650 --> 25:44.650
代码写乱了

25:44.650 --> 25:45.450
怎么办呢

25:45.450 --> 25:48.450
按住键盘的alt shift

25:48.950 --> 25:49.650
加f

25:50.650 --> 25:51.450
格式化代码

25:53.550 --> 25:55.850
alt shift

25:56.750 --> 25:57.250
f

25:58.350 --> 25:59.750
用于格式化

26:00.650 --> 26:01.150
代码

26:01.750 --> 26:02.350
这个操作呢

26:02.350 --> 26:03.150
平时大家

26:03.450 --> 26:04.550
养成习惯吧

26:04.550 --> 26:05.150
养成习惯

26:05.150 --> 26:05.850
经常做

26:05.850 --> 26:06.650
我每次呢

26:06.650 --> 26:07.150
我写个代码

26:07.150 --> 26:08.350
写一两句话叫按一下

26:08.350 --> 26:09.750
写一两句话叫按一下

26:10.150 --> 26:10.950
格式一下

26:11.150 --> 26:12.350
把这个代码好看一点

26:13.150 --> 26:13.550
好

26:13.550 --> 26:14.150
保存一下

26:14.550 --> 26:15.850
看一下这个有什么作用

26:16.450 --> 26:17.650
我们点击右键

26:17.650 --> 26:18.350
运行出来

26:18.750 --> 26:19.250
你看

26:20.250 --> 26:20.750
hello

26:20.950 --> 26:21.750
就显示出来了

26:21.950 --> 26:22.450
对吧

26:22.450 --> 26:23.150
显示出来了

26:23.750 --> 26:24.550
这就是

26:24.950 --> 26:25.950
这个东西

26:26.050 --> 26:27.250
这个你看到的东西

26:27.450 --> 26:28.450
就是啥呢

26:28.550 --> 26:30.150
就是这个的语句的作用

26:30.950 --> 26:33.050
把它用弹窗的形式显示出来

26:33.850 --> 26:34.550
就是这个东西

26:35.350 --> 26:36.350
大家看到没有

26:36.550 --> 26:38.450
现在这句代码有没有运行

26:38.750 --> 26:39.550
有没有运行

26:40.350 --> 26:41.150
你看一下页面

26:41.550 --> 26:43.050
有没有是没有

26:43.450 --> 26:45.550
也就是说这句代码还没有运行

26:45.650 --> 26:46.350
为什么呢

26:46.750 --> 26:48.850
因为这句代码还没有运行完

26:49.150 --> 26:51.550
还正在等着等啥呢

26:51.650 --> 26:52.750
等你点击确定

26:53.150 --> 26:54.850
你只有点击了确定过后

26:54.950 --> 26:56.850
程序才会继续运行

26:56.850 --> 26:57.850
运行后边东西

26:58.050 --> 26:59.850
这就叫做同步执行

27:00.050 --> 27:01.250
你前边都没完

27:01.250 --> 27:02.550
后边一直一直要等

27:03.050 --> 27:04.850
咱们的时间线是一致的

27:04.850 --> 27:05.650
这就是同步

27:06.150 --> 27:06.950
明白这个意思吧

27:08.050 --> 27:09.450
你看我点了确定过后

27:09.650 --> 27:10.850
页面上才显示这个东西

27:11.450 --> 27:12.150
明白这个意思吧

27:12.350 --> 27:12.950
ok

27:13.050 --> 27:14.950
这是关于 alert

27:15.150 --> 27:15.750
比方说

27:15.850 --> 27:17.650
那咱们现在再写个 alert

27:19.150 --> 27:20.350
比方说这里输出1

27:20.550 --> 27:21.350
这里输出2

27:22.250 --> 27:23.350
好大家想一想

27:23.550 --> 27:24.750
页面上的话

27:25.250 --> 27:26.950
页面上我们输出了三句话

27:28.050 --> 27:28.750
再来一次

27:29.550 --> 27:30.250
输出了三句话

27:31.050 --> 27:32.150
我们把页面关掉

27:32.250 --> 27:32.950
关了重来

27:33.850 --> 27:35.950
大家想一想页面上的情况

27:36.350 --> 27:38.450
他是打印出直接打印出123

27:38.850 --> 27:41.350
还是先打印1点确定过后再打印2

27:41.350 --> 27:42.450
再点确定打印3

27:42.450 --> 27:44.050
哪种第一种还有第二种

27:44.850 --> 27:45.550
是不是第二种

27:45.950 --> 27:46.550
看一下吧

27:46.750 --> 27:48.350
先打印1点确定

27:48.350 --> 27:49.150
然后打印2

27:49.150 --> 27:50.550
看没打印3

27:50.650 --> 27:51.750
看没然后结束

27:52.850 --> 27:54.250
程序总是这样运行的

27:54.350 --> 27:55.750
上一句代码没有运行完

27:55.750 --> 27:57.050
下一句代码一定要等着

27:57.050 --> 27:57.950
一定要等着

27:58.150 --> 27:59.850
而这个 alert 他会弹个窗

27:59.950 --> 28:01.350
你只有点了确定过后

28:01.450 --> 28:02.750
才会继续运行

28:03.050 --> 28:03.750
用的很少啊

28:03.750 --> 28:04.550
聊一下就行了

28:05.350 --> 28:06.050
好后边呢

28:06.050 --> 28:07.750
我们再说第三种输出语句

28:07.750 --> 28:09.050
用的是最多的

28:09.750 --> 28:11.250
因为我们前期的话

28:11.450 --> 28:13.650
不会往页面上去写什么东西

28:14.350 --> 28:15.950
也不会用 alert 弹框

28:15.950 --> 28:17.050
那个也挺难看的

28:17.050 --> 28:17.950
你觉得好看吗

28:18.350 --> 28:19.250
挺难看的啊

28:19.450 --> 28:20.650
你见过你上网的时候

28:20.650 --> 28:21.650
见过打印里面去

28:21.650 --> 28:22.950
用这种方式来弹窗了

28:22.950 --> 28:24.450
他弹的窗一般都是很漂亮的

28:24.450 --> 28:25.050
自己做的

28:25.050 --> 28:26.550
我们以后就会知道怎么做了

28:27.250 --> 28:29.250
现在我们不太会用前面两种方案

28:29.450 --> 28:30.850
一般是用的是第三种

28:30.950 --> 28:31.950
叫做 console

28:32.450 --> 28:32.950
log

28:33.850 --> 28:34.550
这个语句

28:35.050 --> 28:36.150
该语句呢

28:36.350 --> 28:39.650
用于将数据显示到

28:40.650 --> 28:41.450
控制台

28:41.950 --> 28:43.250
这控制台在哪呢

28:46.610 --> 28:47.310
关了吧

28:48.710 --> 28:49.110
好

28:49.310 --> 28:50.110
新鲜的页面啊

28:50.410 --> 28:51.110
特色4

28:54.430 --> 28:55.530
这里写个接时代码

28:56.730 --> 28:57.330
接时代码

28:59.130 --> 29:00.030
好这里面呢

29:00.030 --> 29:01.130
我们写上这么一个东西

29:01.130 --> 29:02.030
console

29:02.330 --> 29:02.830
log

29:03.630 --> 29:04.030
1

29:05.030 --> 29:05.730
console

29:05.830 --> 29:06.330
log

29:06.330 --> 29:08.230
数字的话你可以直接写

29:08.530 --> 29:09.830
数字的话你可以直接写

29:10.230 --> 29:10.630
3

29:11.130 --> 29:12.430
比方说consolelog

29:12.430 --> 29:12.830
123

29:12.830 --> 29:13.930
然后忘了加分号了

29:13.930 --> 29:14.230
对吧

29:14.230 --> 29:14.830
加分号

29:15.130 --> 29:15.530
加上

29:16.530 --> 29:16.930
好

29:17.230 --> 29:18.330
写好了之后呢

29:18.330 --> 29:19.230
我们点击右键

29:19.230 --> 29:19.830
运行

29:20.130 --> 29:20.930
预请这个页面

29:22.970 --> 29:23.970
好大家看一下啊

29:24.370 --> 29:25.470
页面上有没有东西

29:25.870 --> 29:26.670
说啥都没有

29:27.570 --> 29:29.670
我们不希望在页面上去显示啥

29:29.670 --> 29:31.070
我们现在目前这个阶段

29:31.070 --> 29:32.470
也不会去控制什么页面

29:32.670 --> 29:34.070
我们要看的是啥呢

29:34.370 --> 29:35.670
看的是控制台

29:36.170 --> 29:38.170
按鍵盘的f12

29:38.370 --> 29:39.570
转到控制台

29:40.170 --> 29:41.770
你看一下啊

29:42.070 --> 29:42.970
下面这些错误啊

29:42.970 --> 29:44.170
这些错误什么连接错误

29:44.170 --> 29:44.870
这些不用管啊

29:44.870 --> 29:46.570
你可以点这点这个设置

29:46.570 --> 29:47.970
看到没点这个设置

29:48.270 --> 29:49.170
把什么这个

29:49.570 --> 29:50.570
连接错误啊

29:50.570 --> 29:51.570
我这里关闭了的啊

29:51.570 --> 29:53.670
连接错误不要关闭了啊

29:53.970 --> 29:55.270
什么网络的连接错误

29:55.270 --> 29:56.270
把关闭了啊

29:56.270 --> 29:56.970
这里能我们

29:57.070 --> 29:57.770
我们这样子吧

29:57.770 --> 29:59.270
重新刷新一遍啊

29:59.270 --> 29:59.870
刷新一遍

30:00.170 --> 30:01.970
好你可以看到我们这里123

30:01.970 --> 30:02.670
就出来了

30:03.170 --> 30:05.370
我们在这里去查看我们的数据结果

30:05.670 --> 30:07.470
所以说我们前期这个阶段啊

30:07.470 --> 30:08.670
前面这个阶段

30:08.670 --> 30:10.170
基本上不会去看页面

30:10.270 --> 30:11.270
就看控制台

30:11.470 --> 30:12.570
我们研究的是啥

30:12.570 --> 30:14.370
研究的是它的语法规则

30:14.470 --> 30:16.270
我们有的时候刷一些东西啊

30:16.270 --> 30:16.870
刷了完

30:16.870 --> 30:18.470
刷完之后把它输出出来

30:18.470 --> 30:20.470
就输出到控制台

30:20.870 --> 30:22.870
在控制台里边去查看我们的结果

30:23.570 --> 30:24.970
在这里面去研究就行了

30:25.070 --> 30:26.270
不会去动页面的啊

30:26.270 --> 30:27.470
我们后边啊

30:27.470 --> 30:28.670
都会使用这种方式

30:28.670 --> 30:29.470
console log

30:30.170 --> 30:31.270
好再说一次啊

30:31.270 --> 30:32.870
这三个这些东西啊

30:32.870 --> 30:33.770
这三个东西

30:33.870 --> 30:36.570
都是浏览器这个环境给我们的

30:36.770 --> 30:38.070
到了其他环境里边

30:38.070 --> 30:39.170
它就不一定有了

30:39.170 --> 30:40.070
不一定有了

30:41.070 --> 30:42.970
这里我们说一下这个问题

30:43.170 --> 30:44.970
好这是输出语句啊

30:44.970 --> 30:45.870
输出语句

30:47.070 --> 30:47.970
好下一个

30:49.970 --> 30:52.070
认识输入语句

30:52.770 --> 30:54.270
认识输入语句

30:55.070 --> 30:56.670
好这个输入语句

30:56.670 --> 30:58.170
它也是啊

30:58.370 --> 31:00.170
所有的输入语句

31:00.470 --> 31:01.370
都不是

31:01.670 --> 31:02.670
yes 标准

31:03.070 --> 31:03.670
都不是标准

31:03.670 --> 31:05.070
都是浏览器环境给我们的

31:05.470 --> 31:07.270
好这个输入语句有什么用呢

31:07.270 --> 31:08.770
以后一点用都没有

31:08.770 --> 31:09.270
告诉你们

31:09.270 --> 31:10.470
以后一点用都没有

31:10.570 --> 31:12.870
但是在浅标我们学习这个语言

31:12.870 --> 31:13.970
语言部分的时候呢

31:13.970 --> 31:14.770
有点用啊

31:14.770 --> 31:17.470
有的时候我们来做一些小的效果出来啊

31:17.470 --> 31:18.470
为了做一些效果出来

31:18.470 --> 31:19.270
可能会用到啊

31:19.270 --> 31:20.170
因为目前呢

31:20.170 --> 31:22.170
我们暂时没有别的办法了啊

31:22.170 --> 31:23.370
比方说用户要输入

31:23.370 --> 31:23.870
对吧

31:23.870 --> 31:24.470
我们的程序

31:24.470 --> 31:26.670
总归要跟用户之间进行交互嘛

31:26.670 --> 31:28.570
不能永远不跟用户进行交互吧

31:28.770 --> 31:30.370
所以说总归要输入啊

31:30.370 --> 31:31.270
那么这个输入呢

31:31.270 --> 31:33.070
我们暂时用一下这个输入语句

31:33.370 --> 31:33.570
好

31:33.570 --> 31:34.870
这个输入语句是啥呢

31:36.170 --> 31:36.970
输入语句

31:36.970 --> 31:37.870
我们来看一下啊

31:38.470 --> 31:39.570
这里新鲜的一面

31:39.770 --> 31:41.270
test 5.7

31:43.880 --> 31:44.780
script

31:46.080 --> 31:46.380
好

31:46.380 --> 31:47.180
输入语句呢

31:47.180 --> 31:48.880
就是propped

31:49.380 --> 31:50.180
propped

31:51.180 --> 31:51.680
好

31:51.780 --> 31:52.580
这里面呢

31:52.580 --> 31:53.280
写啥呢

31:53.580 --> 31:54.680
写一个制服串

31:55.080 --> 31:56.080
写一个制服串

31:56.980 --> 31:57.680
一个制服串

31:57.680 --> 31:57.880
好

31:57.880 --> 31:58.580
比方说啊

31:58.580 --> 31:59.280
比方说

31:59.480 --> 32:00.180
嗯

32:00.680 --> 32:01.480
啊

32:02.280 --> 32:06.580
请输入你的年龄啊

32:06.580 --> 32:08.080
请输入你的年龄

32:08.480 --> 32:08.780
好

32:08.780 --> 32:09.480
分号结束

32:10.180 --> 32:11.880
看一下有什么样的效果

32:12.180 --> 32:12.980
点击右键

32:13.180 --> 32:13.880
运行出来

32:14.580 --> 32:15.080
看没

32:15.280 --> 32:16.580
他弹出来这么个东西啊

32:16.580 --> 32:17.580
弹出来这么个东西

32:17.880 --> 32:18.980
同样的道理

32:18.980 --> 32:21.680
你必须要点击确定之后啊

32:21.780 --> 32:23.680
你必须要点击确定之后

32:23.680 --> 32:25.380
才会继续运行啊

32:25.380 --> 32:26.780
比方说我们这里呢

32:26.880 --> 32:27.380
嗯

32:28.180 --> 32:29.980
我们这里写一个console log

32:30.180 --> 32:31.180
console log

32:31.680 --> 32:32.180
123

32:32.180 --> 32:32.880
随便写吧

32:33.180 --> 32:33.580
好

32:33.580 --> 32:34.280
保存啊

32:34.580 --> 32:35.980
咱们看一下f12打开

32:36.080 --> 32:37.280
打开控制台看一下

32:37.580 --> 32:39.280
现在控制台里面有没有东西

32:39.480 --> 32:40.180
是没有

32:40.380 --> 32:40.680
对吧

32:40.680 --> 32:40.980
没有

32:40.980 --> 32:42.480
为什么还在等着

32:42.680 --> 32:43.680
等着你填东西

32:43.680 --> 32:44.980
然后点确定啊

32:45.180 --> 32:46.480
你只有点了确定

32:46.980 --> 32:49.080
当然点取消也会预写后面的啊

32:49.180 --> 32:50.580
我们这里随便输入一个年龄吧

32:50.580 --> 32:52.180
随便输入一个好点确定

32:52.580 --> 32:53.880
哎我这里重新刷新一次啊

32:53.880 --> 32:55.380
重新刷新一次啊

32:55.580 --> 32:56.980
年龄随便输入一个点确定

32:56.980 --> 32:58.580
你看是不是还输出出来

32:58.980 --> 33:00.280
当然重新刷新一次啊

33:00.380 --> 33:01.280
重新刷新

33:01.580 --> 33:03.180
然后点取消啊

33:03.280 --> 33:04.480
也会接着接着执行

33:04.680 --> 33:05.580
你看这个意思吧

33:05.880 --> 33:06.480
ok啊

33:06.980 --> 33:08.080
现在先别管啊

33:08.180 --> 33:09.380
现在先别管

33:09.680 --> 33:11.980
如何去得到用户的输入

33:11.980 --> 33:12.880
先别管啊

33:12.980 --> 33:15.380
我们先把这个有有这么有这么个印象啊

33:15.380 --> 33:16.980
这是输入语句啊

33:16.980 --> 33:18.380
当然他不是也是标准

33:18.380 --> 33:20.380
以后呢我们也不太会用这个东西啊

33:20.380 --> 33:22.180
暂时的临时的用一下啊

33:22.280 --> 33:24.380
就前期学习的时候临时用一下

33:24.980 --> 33:25.380
好吧

33:25.480 --> 33:27.680
这是关于输入语句

33:28.680 --> 33:30.080
好接下来认识一下注释

33:31.580 --> 33:32.980
认识注释

33:33.880 --> 33:36.380
什么叫注释注释的话啊

33:36.880 --> 33:39.080
是提供给单码

33:39.480 --> 33:42.880
阅读者使用的

33:45.080 --> 33:46.980
不会参与执行

33:47.480 --> 33:49.880
就是油烂器会直接忽略掉注释

33:49.880 --> 33:50.880
就跟看不见一样

33:50.980 --> 33:52.180
他不会直接执行啊

33:52.180 --> 33:53.080
不会执行他

33:53.180 --> 33:53.980
他只是看什么呢

33:53.980 --> 33:54.880
给什么看的呢

33:55.180 --> 33:56.380
有的是我们代码写多了

33:56.380 --> 33:58.180
比方说写了几半行几千行

33:58.580 --> 33:59.780
如果你没有注释的话

33:59.780 --> 34:02.180
你很快就会忘记这些代码什么意思的

34:02.580 --> 34:04.880
比方说或者是你把这个代码给别人看

34:04.980 --> 34:06.980
别人就压根不知道你是写的是什么东西

34:07.180 --> 34:08.780
所以说一定要把注释写好啊

34:08.780 --> 34:09.680
我上课的时候呢

34:09.680 --> 34:11.080
特别是做一些功能的时候

34:11.180 --> 34:12.980
一般都会写详细的注释

34:13.180 --> 34:14.180
如果你听过

34:14.180 --> 34:16.480
如果你听过我的公开直播课的话

34:16.480 --> 34:17.380
应该知道啊

34:17.380 --> 34:19.880
我是特别在上课的时候是特别爱写注释的

34:20.380 --> 34:22.680
注释在介石里面有两种书写方式

34:22.880 --> 34:24.080
第一种书写方式是

34:24.580 --> 34:25.480
双鞋杠

34:26.580 --> 34:27.280
双鞋杠

34:28.180 --> 34:29.880
好双鞋杠注释怎么写的两个鞋杠

34:30.280 --> 34:31.580
两个鞋杠就这样写

34:32.280 --> 34:32.780
好

34:32.880 --> 34:34.280
这叫做单行注释

34:35.980 --> 34:37.080
单行注释

34:37.080 --> 34:38.080
他只能写一行

34:38.080 --> 34:39.580
换一行就没用了啊

34:39.580 --> 34:40.380
比方说啊

34:41.780 --> 34:43.980
这个意思就是在控制台

34:45.080 --> 34:48.980
在控制台中输出内容啊

34:48.980 --> 34:51.680
这是我们在前面加上两个双鞋杠

34:52.380 --> 34:54.080
这个空格只是为了好看一点

34:54.080 --> 34:55.080
加上的可以不加

34:55.080 --> 34:55.880
可以不加

34:56.280 --> 34:57.880
这就是一个注释

34:57.980 --> 34:58.780
这就是个注释

34:58.780 --> 35:00.080
他不会参与执行的

35:00.180 --> 35:01.080
执行的时候呢

35:01.080 --> 35:02.380
他压个就看不见

35:02.580 --> 35:03.580
咱们运行看一下

35:04.780 --> 35:05.280
你看

35:05.980 --> 35:07.880
看不见任何跟注释相关的东西

35:08.480 --> 35:10.080
也不是你看看不见了

35:10.080 --> 35:10.580
看呗

35:11.180 --> 35:11.780
ok啊

35:11.780 --> 35:13.380
这就是注释

35:13.980 --> 35:15.580
但是注释的他是单行的

35:15.580 --> 35:17.380
如果你换一行你还能接着写注释吗

35:17.380 --> 35:18.180
肯定不行了

35:18.480 --> 35:20.380
如果你这一块人仍然是注释的话

35:20.380 --> 35:21.780
你还要写两个鞋杠

35:21.780 --> 35:22.280
对吧

35:22.280 --> 35:24.080
这是单行注释

35:25.880 --> 35:26.080
好

35:26.080 --> 35:26.880
接下来的是

35:28.680 --> 35:30.580
就叫什么叫多行注释

35:30.980 --> 35:31.880
多行注释

35:32.580 --> 35:33.380
把这个去掉了

35:33.880 --> 35:35.180
多行注释很简单

35:35.180 --> 35:37.080
一个鞋杠一个新号开头

35:37.180 --> 35:39.180
然后一个新号一个鞋杠结束

35:39.680 --> 35:41.280
中间就写注释内容

35:41.280 --> 35:42.280
他可以换行的

35:42.280 --> 35:43.280
可以写很多行的

35:43.580 --> 35:44.480
比方说这里

35:45.080 --> 35:47.180
我们可以把它写成个多行注释

35:47.380 --> 35:48.180
就第一个吧

35:48.280 --> 35:48.980
比方说这个

35:49.180 --> 35:50.180
这是个单行对吧

35:50.280 --> 35:50.980
这是个单行

35:51.780 --> 35:52.680
我们看一下呗

35:53.480 --> 35:53.980
这一块

35:53.980 --> 35:54.480
这一块

35:56.620 --> 35:57.420
我们写一个

35:57.920 --> 35:59.220
写个写杠一个新号

35:59.820 --> 36:00.520
一个新号

36:01.920 --> 36:03.220
一个新号一个写杠

36:03.520 --> 36:03.920
好

36:04.020 --> 36:05.520
这里边我们就可以写注释了

36:05.520 --> 36:06.420
一看全是注释

36:06.420 --> 36:07.220
全是注释

36:07.720 --> 36:08.820
都不会参与执行的

36:08.920 --> 36:09.920
这就是多行注释

36:10.320 --> 36:11.720
当然也可以这样子写

36:12.220 --> 36:13.420
也可以把它写成单行

36:13.420 --> 36:13.820
对吧

36:13.920 --> 36:14.920
如果你只有一行的话

36:14.920 --> 36:15.820
也可以把它写成单行

36:15.820 --> 36:16.320
都可以

36:16.320 --> 36:17.120
很灵活的

36:17.220 --> 36:17.920
很灵活的

36:17.920 --> 36:19.220
这是多行注释

36:19.420 --> 36:20.220
多行注释

36:21.120 --> 36:22.620
非常非常简单对吧

36:22.720 --> 36:23.720
非常非常简单

36:24.020 --> 36:24.320
然后呢

36:24.320 --> 36:25.520
我再介绍一下啊

36:25.620 --> 36:26.920
在vscode中

36:27.220 --> 36:27.820
在

36:29.120 --> 36:31.120
vscode中

36:33.930 --> 36:35.330
使用快捷键

36:36.730 --> 36:37.830
快捷键

36:37.930 --> 36:38.430
怎么呢

36:38.530 --> 36:39.330
concert

36:40.430 --> 36:41.730
加上写杠

36:42.330 --> 36:42.830
看一下

36:43.230 --> 36:44.630
看一下键盘的写杠在哪

36:45.030 --> 36:46.330
concert加写杠

36:46.630 --> 36:47.330
可以

36:47.930 --> 36:48.730
快速

36:49.230 --> 36:50.030
添加

36:50.330 --> 36:50.830
和

36:51.630 --> 36:52.430
取消

36:52.730 --> 36:53.830
单行注释

36:55.130 --> 36:55.830
什么意思呢

36:55.930 --> 36:56.930
大家看这里啊

36:56.930 --> 36:57.930
比方说门证

36:58.630 --> 36:59.630
你看这是不个注释

36:59.630 --> 36:59.930
对吧

36:59.930 --> 37:00.730
一个注释吧

37:01.130 --> 37:01.430
好

37:01.530 --> 37:03.030
concert加写杠取消了

37:03.330 --> 37:05.730
concert加写杠注释出来了啊

37:06.330 --> 37:07.030
取消出来

37:07.030 --> 37:07.730
出来

37:07.730 --> 37:08.030
对吧

37:08.030 --> 37:08.830
非常简单

37:09.130 --> 37:09.930
啊比方说

37:09.930 --> 37:11.230
我们有多行代码啊

37:11.230 --> 37:11.730
多行代码

37:11.730 --> 37:12.530
这个这个代码

37:12.930 --> 37:14.530
全部选中啊全部选中

37:14.730 --> 37:15.930
然后写杠啊

37:15.930 --> 37:17.230
concert加写杠全部注释

37:17.630 --> 37:18.930
写杠取消对吧

37:19.230 --> 37:20.030
是非常简单

37:20.130 --> 37:20.530
对不对

37:20.530 --> 37:21.230
非常简单

37:21.930 --> 37:22.130
好

37:22.130 --> 37:22.730
这是

37:23.030 --> 37:24.330
借Facecode里面

37:24.330 --> 37:26.030
快捷键取消单行注释

37:26.830 --> 37:27.030
好

37:27.030 --> 37:28.530
那多行注释呢

37:28.730 --> 37:29.230
啊

37:29.530 --> 37:30.930
使用快捷键

37:32.230 --> 37:32.930
啊

37:33.230 --> 37:34.230
是ort

37:35.330 --> 37:35.830
ort

37:36.530 --> 37:37.630
加上shift

37:38.130 --> 37:39.130
加上a

37:39.330 --> 37:40.630
啊加上键盘的a

37:41.030 --> 37:42.330
可以快速

37:42.730 --> 37:44.630
添加和取消

37:44.730 --> 37:45.930
多行注释

37:46.230 --> 37:46.730
但是呢

37:46.730 --> 37:48.130
这个由于它的按键啊

37:48.130 --> 37:49.130
不是很好按啊

37:49.130 --> 37:50.430
所以说我用的比较少

37:50.630 --> 37:51.730
当然了不排除

37:52.230 --> 37:53.730
你们有一些特殊的执法

37:53.730 --> 37:54.330
对吧

37:54.330 --> 37:56.130
我觉得我这个手按这样子按

37:56.130 --> 37:57.030
不是很方便啊

37:57.030 --> 37:57.830
不是很舒服

37:57.830 --> 38:00.530
所以说我平时很少用这个这个多行注释

38:01.130 --> 38:02.130
比方说这个代码啊

38:02.130 --> 38:03.130
这个代码啊

38:03.130 --> 38:04.530
把它全部选中啊

38:04.730 --> 38:05.730
ortshiftA

38:05.730 --> 38:08.130
你看多行注释给加上了啊

38:08.430 --> 38:10.530
然后再按一次取消了啊

38:11.030 --> 38:12.130
这样子也可以啊

38:12.130 --> 38:13.530
就看你们好不好按啊

38:14.230 --> 38:15.630
愿意用哪种用哪种啊

38:15.630 --> 38:16.530
这个无所谓的

38:16.930 --> 38:17.430
好吧

38:17.430 --> 38:19.630
其实还有一种注释叫做文档注释

38:19.630 --> 38:20.630
我们以后再说啊

38:20.630 --> 38:21.230
现在不管

38:21.630 --> 38:21.930
ok

38:21.930 --> 38:23.230
这就是注释这一块啊

38:23.930 --> 38:24.930
好其他就没啥了啊

38:24.930 --> 38:26.730
我们简单的写了一个gestite

38:26.730 --> 38:28.130
那么接下来作业了

38:28.330 --> 38:29.130
作业啊

38:30.330 --> 38:30.930
好作业

38:31.630 --> 38:32.030
之后呢

38:32.030 --> 38:33.530
凡是在合适的位置啊

38:33.630 --> 38:34.330
凡是有

38:34.330 --> 38:36.230
就是每节课之后凡是有作业

38:36.230 --> 38:37.530
我都会规定作业的

38:37.930 --> 38:38.430
这个作业呢

38:38.430 --> 38:39.130
我很简单

38:39.130 --> 38:40.530
所以说不不平讲了啊

38:40.530 --> 38:41.530
这个作业不平讲

38:41.730 --> 38:42.930
这作业做说做什么呢

38:43.630 --> 38:45.230
建立一个啊

38:45.930 --> 38:47.430
就是第一个作业啊

38:48.230 --> 38:49.530
在网页中

38:50.130 --> 38:53.530
书写多个script元素啊

38:54.130 --> 38:54.830
然后呢

38:55.130 --> 38:56.730
在元素内部

38:58.030 --> 38:58.730
书写

38:59.630 --> 39:01.730
多种输出语句

39:02.130 --> 39:03.030
秩序完成一下

39:03.030 --> 39:04.730
就是练习一下输出语句

39:04.730 --> 39:07.330
练习一下这个script元素的书写啊

39:07.530 --> 39:09.130
多多种输出语句

39:09.330 --> 39:11.330
然后运行页面

39:11.730 --> 39:12.630
查看效果

39:12.730 --> 39:13.630
必须要做啊

39:13.630 --> 39:14.730
千万不要有幻觉

39:15.130 --> 39:15.730
你不听吗

39:15.730 --> 39:16.330
不听呢

39:16.330 --> 39:17.130
这个课后面

39:17.330 --> 39:18.430
越学越学不懂

39:18.530 --> 39:19.430
一定要去做啊

39:19.630 --> 39:20.330
哪怕再简单

39:20.330 --> 39:21.330
你觉得这个很简单

39:21.330 --> 39:22.430
但是一定要去做一遍

39:22.530 --> 39:23.730
几分钟时间就做完了

39:24.030 --> 39:25.430
然后第二个作业啊

39:25.730 --> 39:26.330
将

39:26.830 --> 39:31.530
代码提取到一个独立的介石文件中

39:32.130 --> 39:34.130
然后在页面中

39:35.130 --> 39:37.330
在页面中使用

39:37.630 --> 39:39.330
因为我也检查不了你的作业

39:39.330 --> 39:40.830
我也不知道你的完成情况

39:40.830 --> 39:42.030
但是这个作业很简单

39:42.030 --> 39:43.130
我们可能上都讲了的

39:43.130 --> 39:44.730
但是你一定要去完成一遍

39:44.730 --> 39:45.530
不要偏自己

39:45.530 --> 39:46.430
千万不要偏自己

39:46.430 --> 39:46.830
好吧

39:47.030 --> 39:47.930
我们既然在学习

39:48.030 --> 39:49.730
既然花了这么多时间来学习

39:50.030 --> 39:51.830
那一定要达到一个好的学习效果

39:51.930 --> 39:52.930
我在那求求你们了

39:52.930 --> 39:53.830
去做一下作业吧

39:54.030 --> 39:54.530
好吧

39:54.930 --> 39:56.330
啊那其他别啥了啊

39:56.630 --> 39:57.730
这一课就到这了啊

39:57.930 --> 39:58.730
嗯拜拜

