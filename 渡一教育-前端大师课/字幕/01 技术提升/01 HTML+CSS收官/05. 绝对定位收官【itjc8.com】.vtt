WEBVTT

00:01.200 --> 00:04.400
好 同学们 我们前边做了一些练习

00:04.400 --> 00:08.200
但这些练习呢 没有怎么去练到这个绝对定位

00:08.200 --> 00:12.600
所以我们这一刻呢 对这个绝对定位做一个强化的练习

00:12.600 --> 00:16.800
我们先对绝对定位做一个简单的总结

00:16.800 --> 00:19.800
首先是什么时候我们要使用绝对定位

00:19.800 --> 00:24.200
这里总结了一下 下面三个条件

00:24.200 --> 00:29.000
满足任何一个的时候 我们都可以选择使用绝对定位

00:29.200 --> 00:32.400
我们一个看法 任何一个 不是说全部要满足

00:32.400 --> 00:38.000
第一个呢 就是元素它出现在一个天马行空的位置

00:38.000 --> 00:42.600
这是什么意思呢 就是我们啊 正常的情况下

00:42.600 --> 00:45.600
我们的元素呢 排列无非就两种形式

00:45.600 --> 00:49.000
哪两种形式呢 一个呢 我给大家画一下啊

00:49.000 --> 00:53.400
一个就是这种形式 从上到下进行排列

00:53.400 --> 00:56.000
对吧 这种形式比较常见的

00:56.200 --> 01:00.600
我们网页呢 都是大结构都是从上到下进行排列的

01:00.600 --> 01:02.800
那么这种结构呢 就是一个常规流

01:02.800 --> 01:05.400
就是说你用一个DIV也好 用一个P元素也好

01:05.400 --> 01:11.000
反正就是它默认情况下 在这个区域里边都会从上到下一次排列

01:11.000 --> 01:13.400
这种情况你们不用觉得定位了

01:13.400 --> 01:17.300
还有一种是什么情况呢 就是这个元素它是横向排列的

01:17.300 --> 01:20.500
那么这一块我们现在已经知道了 用什么 用浮动 对吧

01:20.500 --> 01:23.600
那么这一块也不需要定位 就正常排列啊

01:23.600 --> 01:27.000
包括排不下的 自动换行 这些都不需要使用绝对定位

01:28.300 --> 01:31.000
那什么时候使用绝对定位呢 就是那个元素啊

01:31.000 --> 01:33.000
我都说不清楚它怎么排列的了

01:33.000 --> 01:36.600
比方说一个元素突然出现在这 换个颜色吧

01:40.400 --> 01:42.800
比方说它出现在这 那么像这种情况

01:42.800 --> 01:45.800
这个元素啊 那只能绝对定位了

01:45.800 --> 01:49.200
因为它既不是从上到下排列 也不是从左到右排列

01:49.200 --> 01:51.400
它出现在一个莫名其妙的位置

01:51.600 --> 01:56.200
或者呢 它出现在这 就是同级的 它出现在这

01:56.200 --> 02:01.100
那么绝对定位 就是出现在一个天马行空的一个位置

02:01.100 --> 02:03.700
你都说不清楚它怎么说它好

02:03.700 --> 02:07.700
比方说我们看一个网页啊 这里有个故宫青少年网站

02:07.700 --> 02:10.000
这个网站里边有很多很多的绝对定位

02:10.000 --> 02:14.200
你看这个小铃铛 看那边在荒来荒去的一个小铃铛

02:14.200 --> 02:16.800
那么这个就是一个图片元素 对吧

02:16.800 --> 02:19.600
你说这个元素你怎么说它嘛

02:19.600 --> 02:24.600
从上到下排列 说不好 从左到右这个也说不好

02:24.600 --> 02:28.200
这一块绝对定位更好 懂了意思吧

02:28.200 --> 02:32.800
好 比方说那个在来啊 你像这些元素 你看这里

02:32.800 --> 02:36.000
这三个元素就是 这三个元素做一个整体啊

02:36.000 --> 02:38.900
它做一个整体 那么像这个元素

02:38.900 --> 02:43.400
它排列到一个网 始终排列到一个窗口的右下角

02:43.400 --> 02:47.400
这个地方你就不 你就没法说它是什么

02:47.400 --> 02:51.200
这个元素或者是浮动了 它绝对定位

02:51.200 --> 02:55.000
就是它出现在一个非常规的位置

02:55.000 --> 02:57.400
那么就是绝对定位 再比方说像这个

02:57.400 --> 03:00.400
你看这些图片 对吧

03:00.400 --> 03:03.400
这些图片呢 我画一下啊

03:03.400 --> 03:06.400
这个图片 图片 图片 你看

03:06.400 --> 03:10.400
那么这些图片呢 显而易见它是一个绝对定位

03:10.400 --> 03:12.900
出现在一个天马行空的位置

03:12.900 --> 03:17.300
这是第种情况 第种情况是元素是否存在

03:17.300 --> 03:20.300
它不影响其他元素的排列

03:20.300 --> 03:22.300
就是有的时候啊 你一面上有些元素啊

03:22.300 --> 03:25.100
看上去挺正常的 但是那你会发现

03:25.100 --> 03:29.900
这个它有点特殊就是这个元素啊 跟别的其他元素

03:29.900 --> 03:32.100
没有任何关系 什么意思呢

03:32.100 --> 03:34.100
比方说你看那个王者荣耀

03:34.100 --> 03:36.800
王者荣耀的导航蓝那边的鼠标纸上去

03:36.800 --> 03:39.500
有一个区域 就这个区域

03:39.500 --> 03:41.900
这个区域呢 看上去挺正常的 对吧

03:41.900 --> 03:45.100
它跟上面那个导航蓝呢 从上到下一式排列

03:45.100 --> 03:49.900
上面有一个导航蓝嘛 导航蓝下边的有一个纸菜单

03:49.900 --> 03:54.100
那么这个纸菜单这一块呢 好像是一个正常的元素

03:54.100 --> 03:55.900
骑士能力仔细观察发现

03:55.900 --> 04:00.400
这个纸菜单它完全不影响下边的东西

04:00.400 --> 04:04.500
懂了意思吧 你这个纸菜单打开了和没有了

04:04.500 --> 04:07.800
跟下边的元素有没有关系啊 没有任何关系

04:07.800 --> 04:10.200
那么这一块的元素的排列啊

04:10.200 --> 04:13.400
完全不影响页面中其他的元素

04:13.400 --> 04:16.600
那么这一块呢 我们也可以使用绝对定位

04:16.600 --> 04:19.700
为什么呢 因为绝对定位啊 它有一个特点

04:19.700 --> 04:23.400
像我们浮动的话 会导致那个高度塌陷对吧

04:23.400 --> 04:27.000
复元素的高度塌陷 因为复元素觉得自己还是非常天上去了

04:27.000 --> 04:30.200
不想震塌 那绝对定位的话 那就

04:30.200 --> 04:33.800
不仅是导致高度塌陷的问题了

04:33.800 --> 04:37.500
是所有的元素都不会震塌的

04:37.500 --> 04:40.300
像我们浮动的一块还可以做清楚浮动 对吧

04:40.300 --> 04:43.900
来一个兄弟 来一个兄弟 来兄弟去震他们

04:43.900 --> 04:46.200
但是绝对定位是绝对不可能的

04:46.200 --> 04:50.400
从来不会出现什么清除绝对定位这个说法 没有人

04:50.400 --> 04:53.100
绝对定位的话 你这个元素绝对定位了

04:53.100 --> 04:55.400
那就是跟我们完全没关系了

04:55.400 --> 04:57.700
这有点像啥呢 我这里有个图片啊

04:57.700 --> 05:00.500
有点像我们的合同里边

05:00.500 --> 05:02.800
就是写合同 写完之后

05:02.800 --> 05:05.600
你看合同排列的整整齐齐的都是正常元素 对吧

05:05.600 --> 05:09.200
那么写完之后啪啪两个工章给它带上去

05:09.200 --> 05:11.800
那两个工章就是绝对定位

05:11.800 --> 05:14.300
它跟其他的元素没有任何关系

05:14.300 --> 05:17.900
就是给它想盖哪盖哪 那么它就是一个绝对定位

05:17.900 --> 05:20.700
懂得意思吗 那你看这个有这个工章跟没这个工章

05:20.700 --> 05:24.300
跟这个其他的元素有没有关系 没有任何关系

05:24.300 --> 05:28.000
像这种情况下那么也是绝对定位

05:28.000 --> 05:32.200
就是这个元素它出现和不出现对其他元素没影响

05:32.200 --> 05:36.200
好 第三个情况就是一个比较特殊的情况

05:36.200 --> 05:39.000
就是我发现了有一个区里边有一个元素

05:39.000 --> 05:44.000
它处在这个区域的正中间 垂直横向都居中

05:44.000 --> 05:47.500
那么这个时候也可以考虑使用绝对定位

05:47.500 --> 05:52.000
这个例子比方说我们在王者荣耀里边看吧

05:52.000 --> 05:54.300
我们看到这个鼠标纸上去的时候

05:54.300 --> 05:58.000
你看这里是不是有一个播放的图片 对吧

05:58.000 --> 06:01.500
一个播放的图片 那么这个播放的图片

06:01.500 --> 06:06.000
它在这个区域的正中间 水平 垂直都居中

06:06.000 --> 06:09.500
那么这个播放的图片就可以使用绝对定位

06:09.500 --> 06:14.500
因为你用其他形式你可以搞定水平居中垂直居中可不好吧

06:14.500 --> 06:16.000
所以说我们可以使用绝对定位

06:16.000 --> 06:20.000
因为绝对定位的话是比较容易做出水平垂直居中的

06:20.000 --> 06:24.500
注意是单个元素出现在某一个区域的正中间

06:24.500 --> 06:27.000
像这三种情况我们都可以使用绝对定位

06:27.000 --> 06:28.500
我们先做一个简论的总结

06:28.500 --> 06:33.000
总结之后我们做两个练习就特地新出了

06:33.000 --> 06:36.000
在使用绝对定位的时候还有一个问题

06:36.000 --> 06:38.500
就是问的比较多的就是Fixed

06:38.500 --> 06:41.000
因为我们知道绝对定位有两种 对吧

06:41.000 --> 06:44.000
一个是Perlation都是设置Perlation

06:44.000 --> 06:46.500
为Absolute 绝对定位

06:46.500 --> 06:51.000
还有就是Perlation等于Fixed 固定定位

06:51.000 --> 06:53.500
那么这两种有什么样的一个区别呢

06:53.500 --> 06:55.500
以前的面试题还挺喜欢问的

06:55.500 --> 06:58.500
现在问的少了 因为都觉得是一个基础知识了

06:58.500 --> 07:00.000
那么这个有什么区别呢

07:00.500 --> 07:02.500
首先你要知道这个固定定位

07:02.500 --> 07:05.000
它其实就是绝对定位的其中一种

07:05.000 --> 07:07.000
因为一个元素绝对定位之后

07:07.000 --> 07:10.000
调整它的位置就可以随意的调整它的位置

07:10.000 --> 07:12.000
通过Left 通过这么几个东西

07:12.000 --> 07:16.000
Left, Top, Right, Button

07:16.000 --> 07:18.500
用的比较多的就是Left, Top

07:18.500 --> 07:20.000
前面两个

07:20.000 --> 07:23.500
那么通过这些来调整元素的位置

07:23.500 --> 07:26.500
关键是参考谁来调整呢

07:26.500 --> 07:29.500
然后我们参考是整个流量器窗口呢

07:29.500 --> 07:31.500
还是参考body呢

07:31.500 --> 07:33.000
还参考atmail呢

07:33.000 --> 07:35.500
还参考了一个某一个DNA呢

07:35.500 --> 07:38.000
到底是调它的参考系在哪

07:38.000 --> 07:40.000
对吧 参考系不一样 那就肯定不一样

07:40.000 --> 07:44.000
比方说我这个设置Left为50个像素

07:44.000 --> 07:46.500
设置Top为50个像素

07:46.500 --> 07:48.000
那比方说我这样的设置

07:48.000 --> 07:50.000
那这个元素是参考谁呢

07:50.000 --> 07:52.000
比方说我们在页面上

07:52.000 --> 07:55.000
那如果说它是参考这个语

07:55.500 --> 07:57.000
那50个像素

07:57.000 --> 07:59.000
我这样画一下吧

08:02.450 --> 08:04.450
比方说参考这个区域

08:04.450 --> 08:05.950
参考这个区域的话

08:05.950 --> 08:09.450
那50×50 那它的位置应该在这

08:09.450 --> 08:11.450
对吧 比方说我换个颜色吧

08:11.450 --> 08:15.100
颜色

08:15.100 --> 08:17.100
50×50 它应该在这

08:17.100 --> 08:18.600
也就是说什么的意思呢

08:18.600 --> 08:21.100
前边这一块是50

08:21.100 --> 08:23.100
这一块也是50

08:23.100 --> 08:25.100
那如果说是参考整个流量器窗口呢

08:25.100 --> 08:26.600
那就不一样了

08:26.600 --> 08:28.100
参考整个流量器窗口的话

08:28.100 --> 08:30.100
它就应该在这

08:30.100 --> 08:32.100
它就应该在这

08:32.100 --> 08:34.100
那么这里呢

08:34.100 --> 08:36.100
这一边是50

08:36.100 --> 08:38.100
懂了意思吧

08:38.100 --> 08:40.100
参考谁是一个问题

08:40.100 --> 08:42.100
那么也就是说我们固定定位

08:42.100 --> 08:44.100
和绝对定位他们的区别呢

08:44.100 --> 08:46.100
主要就在于

08:46.100 --> 08:48.100
他们的参考系不一样

08:48.100 --> 08:50.100
绝对定位的参考系

08:50.100 --> 08:53.100
就是absolute参考的系是什么呢

08:53.100 --> 08:55.100
是它有定位的复原数

08:55.100 --> 08:57.100
比方说我们有个千套结构

08:57.100 --> 08:59.100
DIV里边有一个DIV

08:59.100 --> 09:01.100
DIV里边又有一个DIV

09:01.100 --> 09:03.100
DIV里边最外面是AT面嘛

09:03.100 --> 09:05.100
然后呢是body

09:05.100 --> 09:08.470
然后是DIV

09:08.470 --> 09:10.470
然后是DIV

09:10.470 --> 09:12.470
好 然后呢下边有一个

09:12.470 --> 09:14.470
比方说有个P元数

09:14.470 --> 09:16.470
假设这个P元数是决定位

09:16.470 --> 09:18.470
那它参考谁呢

09:18.470 --> 09:20.470
参考是不是复原数 那不一定

09:20.470 --> 09:22.470
它要参考的

09:22.470 --> 09:24.470
就前面全是它的复原数对吧

09:24.470 --> 09:26.470
那参考谁啊 参考有定位的复原数

09:26.470 --> 09:28.470
比方说这个参考先找它

09:28.470 --> 09:30.470
DIV是不是定位的

09:30.470 --> 09:32.470
什么叫有定位呢 就是你设置的Pretting

09:32.470 --> 09:34.470
不管你设置的是啥

09:34.470 --> 09:36.470
你设置absolute还是叫有定位

09:36.470 --> 09:38.470
设置fixed叫有定位

09:38.470 --> 09:40.470
还有一种情况叫设置Pretting

09:40.470 --> 09:42.470
Renative

09:42.470 --> 09:44.470
Renative这一块比较特殊

09:44.470 --> 09:46.470
它不会改变元数的排列

09:46.470 --> 09:48.470
就是说嘛 元数以前是浮动

09:48.470 --> 09:50.470
现在还是浮动

09:50.470 --> 09:52.470
不会因为它是变成了Pretting

09:52.470 --> 09:54.470
就导致呢

09:54.470 --> 09:56.470
它变成绝对定位的

09:56.470 --> 09:58.470
它不是绝对定位

09:58.470 --> 10:00.470
它是正常排列的

10:00.470 --> 10:02.470
但是它仍然叫做有定位元数

10:02.470 --> 10:04.470
就是

10:04.470 --> 10:06.470
我们参考复原数 看复原数有没有设置Pretting

10:06.470 --> 10:08.470
没有设置就继续找复原数

10:08.470 --> 10:10.470
它有没有设置Pretting

10:10.470 --> 10:12.470
比方说它设置了一个Pretting

10:12.470 --> 10:14.470
Pretting

10:14.470 --> 10:16.470
Renative

10:16.470 --> 10:18.470
那么这个元数

10:18.470 --> 10:20.470
就是这个P元数绝对定位的参考系

10:20.470 --> 10:22.470
比方P元数是absolute

10:22.470 --> 10:24.470
那么它就是参考了这个DIV

10:24.470 --> 10:26.470
来注意它的参考系

10:26.470 --> 10:28.470
如果说一直没有找到的话

10:28.470 --> 10:30.470
那么就找到ATM元数

10:30.470 --> 10:32.470
懂了意思吧 这是绝对定位的它的参考系

10:32.470 --> 10:34.470
所以我们常说

10:34.470 --> 10:36.470
绝对定位这一块有一个口诀

10:36.470 --> 10:38.470
叫做直觉复向

10:38.470 --> 10:40.470
因为我们设置绝对定位的时候

10:40.470 --> 10:42.470
往往都希望它的参考系就是复原数

10:42.470 --> 10:44.470
这个比较符合直觉

10:44.470 --> 10:46.470
所以说我们往往说

10:46.470 --> 10:48.470
你要把它设为绝对定位之的时候呢

10:48.470 --> 10:50.470
你要顺便把复原数

10:50.470 --> 10:52.470
设为相对定位

10:52.470 --> 10:53.470
其实把复原数

10:53.470 --> 10:54.470
设为绝对定位也可以

10:54.470 --> 10:55.470
只不过呢

10:55.470 --> 10:56.470
你如果说把复原数

10:56.470 --> 10:57.470
设为绝对定位的话

10:57.470 --> 10:59.470
那复原数改动就太大了

10:59.470 --> 11:00.470
所以说我们往往把它

11:00.470 --> 11:01.470
设为相对定位

11:01.470 --> 11:03.470
不影响它的排列

11:03.470 --> 11:04.470
它之前是咋样子

11:04.470 --> 11:05.470
现在还是咋样子

11:05.470 --> 11:06.470
因为你把它设为

11:06.470 --> 11:07.470
绝对定位的话

11:07.470 --> 11:08.470
那可能对整个页面的布局

11:08.470 --> 11:09.470
都会造成影响

11:09.470 --> 11:11.470
本来它不希望绝对定位的

11:11.470 --> 11:12.470
它是正常排列的

11:12.470 --> 11:13.470
只它里边的东西

11:13.470 --> 11:14.470
是绝对定位的

11:14.470 --> 11:15.470
懂了意思吧

11:15.470 --> 11:16.470
所以我们一个口诀叫

11:16.470 --> 11:17.470
直觉复向

11:17.470 --> 11:19.470
直元数是绝对定位

11:20.470 --> 11:22.470
这是Absolute

11:22.470 --> 11:23.470
它的参考系

11:23.470 --> 11:24.470
那么fix成了

11:24.470 --> 11:26.470
就没有这些乱七八糟的事情了

11:26.470 --> 11:27.470
你只要把一个元数

11:27.470 --> 11:29.470
设为fix的这种定位方式

11:29.470 --> 11:32.470
那么它的参考系始终是试口

11:32.470 --> 11:33.470
试口还有一个单词

11:33.470 --> 11:34.470
这个单词大家

11:34.470 --> 11:35.470
要有这么一个印象

11:35.470 --> 11:37.470
叫viewport

11:38.470 --> 11:39.470
试口是什么呢

11:39.470 --> 11:40.470
试口就是我们的

11:40.470 --> 11:42.470
浏览器窗口

11:42.470 --> 11:44.470
浏览器窗口

11:44.470 --> 11:46.470
就这个窗口

11:46.470 --> 11:47.470
好 大家看一下

11:47.470 --> 11:49.470
我们现在滑动那个

11:49.470 --> 11:50.470
这个滚轮

11:50.470 --> 11:52.470
我们来滚动这个

11:52.470 --> 11:53.470
就是滚动条

11:53.470 --> 11:55.470
你看一下这个窗口有变化吗

11:55.470 --> 11:57.470
窗口的尺寸和位置

11:57.470 --> 11:58.470
有变化吗

11:58.470 --> 11:59.470
那个有变化

11:59.470 --> 12:00.470
我看一面在变

12:00.470 --> 12:02.470
那是一面在变化

12:02.470 --> 12:03.470
窗口没变啊

12:03.470 --> 12:05.470
窗口

12:05.470 --> 12:06.470
这就是窗口

12:06.470 --> 12:07.470
它尺寸还是这么大

12:07.470 --> 12:08.470
滑来滑去

12:08.470 --> 12:09.470
都还是这么大

12:09.470 --> 12:10.470
窗口的位置

12:10.470 --> 12:11.470
还是这个位置

12:11.470 --> 12:12.470
就被动了

12:12.470 --> 12:13.470
动都没动

12:13.470 --> 12:14.470
窗口的位置

12:14.470 --> 12:15.470
是没有变化的

12:15.470 --> 12:16.470
那么

12:16.470 --> 12:17.470
什么时候

12:17.470 --> 12:19.470
窗口的位置和尺寸会变化

12:19.470 --> 12:20.470
你把这个浏览器

12:20.470 --> 12:21.470
这样子

12:21.470 --> 12:23.470
拖动它的尺寸

12:23.470 --> 12:24.470
把浏览器拖过来拖过去

12:24.470 --> 12:25.470
这个时候

12:25.470 --> 12:26.470
窗口会变化

12:26.470 --> 12:27.470
那这个东西

12:27.470 --> 12:28.470
我们就不用考虑了

12:28.470 --> 12:29.470
所以说

12:29.470 --> 12:30.470
我们可以认为

12:30.470 --> 12:32.470
尺寸是不会变化的

12:32.470 --> 12:33.470
是尺寸是固定的

12:33.470 --> 12:35.470
不会变化的

12:35.470 --> 12:36.470
所以说

12:36.470 --> 12:37.470
这个FIX元素

12:37.470 --> 12:38.470
它不管出现在哪

12:38.470 --> 12:39.470
它相对的

12:39.470 --> 12:40.470
永远是尺寸

12:40.470 --> 12:41.470
比方说

12:41.470 --> 12:42.470
我刚才又来个例子

12:42.470 --> 12:43.470
ATMAR

12:43.470 --> 12:44.470
里边有一个BOD

12:44.470 --> 12:45.470
BOD里边有个DIV

12:45.470 --> 12:46.470
DIV里边

12:46.470 --> 12:47.470
DIV里边有个P

12:47.470 --> 12:49.470
它是固定定位

12:49.470 --> 12:51.470
然后浮源数是

12:51.470 --> 12:52.470
PLAYSING

12:52.470 --> 12:53.470
RENATING

12:53.470 --> 12:54.470
相对定位

12:54.470 --> 12:56.470
那么它参考了谁

12:56.470 --> 12:58.470
跟它有关系吗

12:58.470 --> 12:59.470
没关系

12:59.470 --> 13:00.470
它参考了谁

13:00.470 --> 13:02.470
它参考的还是尺寸

13:02.470 --> 13:04.470
还是整个浏览器窗口

13:04.470 --> 13:05.470
那么这种情况下

13:05.470 --> 13:06.470
那么我们来看一下

13:06.470 --> 13:07.470
具体的场景

13:07.470 --> 13:09.470
什么时候有使用固定定位

13:09.470 --> 13:11.470
什么时候使用绝对定位呢

13:11.470 --> 13:12.470
你看

13:12.470 --> 13:13.470
我们这里

13:13.470 --> 13:14.470
你看

13:14.470 --> 13:15.470
这里边一个小的按钮

13:15.470 --> 13:16.470
那么这个按钮

13:16.470 --> 13:17.470
你可以写这样子想吧

13:17.470 --> 13:18.470
这个按钮是不是参考了

13:18.470 --> 13:19.470
整个浏览器窗口

13:19.470 --> 13:20.470
肯定不是嘛

13:20.470 --> 13:22.470
它参考的是某一个区域

13:22.470 --> 13:23.470
对吧

13:23.470 --> 13:24.470
参考的是这个区域

13:24.470 --> 13:25.470
来进行定位的

13:25.470 --> 13:26.470
那么它肯定是

13:26.470 --> 13:27.470
这个小图标

13:27.470 --> 13:29.470
肯定是一个绝对定位

13:29.470 --> 13:30.470
好

13:30.470 --> 13:31.470
然后我们再看这个

13:31.470 --> 13:32.470
比方说像我们这里

13:32.470 --> 13:33.470
这里有一个

13:33.470 --> 13:34.470
就这个区域

13:34.470 --> 13:35.470
这个区域

13:35.470 --> 13:36.470
这个区域

13:36.470 --> 13:37.470
它始终没有变化

13:37.470 --> 13:38.470
就是我们滚动

13:38.470 --> 13:39.470
滚动条

13:39.470 --> 13:40.470
始终没有变化

13:40.470 --> 13:41.470
而我们浏览器窗口变了

13:41.470 --> 13:42.470
它会跟着变

13:42.470 --> 13:43.470
对吧

13:43.470 --> 13:44.470
那么像这个区域

13:44.470 --> 13:46.470
很明显参考的是谁

13:46.470 --> 13:48.470
参考的就是浏览器的市口

13:48.470 --> 13:50.470
所以说它是一个固定定位

13:50.470 --> 13:51.470
对吧

13:51.470 --> 13:52.470
就这么一个东西

13:52.470 --> 13:53.470
好再比方说

13:53.470 --> 13:54.470
我们点击这个登录

13:54.470 --> 13:56.470
不弹出来的东西吗

13:56.470 --> 13:57.470
这个东西是不是单个元素

13:57.470 --> 13:58.470
有一个元素

13:58.470 --> 14:00.470
它在某一个区域内

14:00.470 --> 14:01.470
水平区垂直区中

14:01.470 --> 14:02.470
我们应该是用决定定位

14:02.470 --> 14:03.470
对吧

14:03.470 --> 14:04.470
那么到底是决定定位

14:04.470 --> 14:05.470
还是固定定位呢

14:05.470 --> 14:07.470
那你看它参考的是谁

14:07.470 --> 14:08.470
参考的是谁

14:08.470 --> 14:10.470
那明显它参考的区域

14:10.470 --> 14:11.470
肯定是整个窗口

14:11.470 --> 14:12.470
在窗口里边区域中

14:12.470 --> 14:15.470
那么它应该是一个固定定位

14:15.470 --> 14:16.470
懂得意思吗

14:16.470 --> 14:17.470
就这么个意思

14:17.470 --> 14:19.470
这就是那个决定定位

14:19.470 --> 14:21.470
和固定定位该怎么去看

14:21.470 --> 14:23.470
OK 那么我们简单的了解一下

14:23.470 --> 14:25.470
我们就开始来做两个练习

14:25.470 --> 14:27.470
把这两个练习完成之后

14:27.470 --> 14:28.470
我们决定定位和固定定位

14:28.470 --> 14:29.470
那就差不多了

14:29.470 --> 14:30.470
好 第一个练习

14:30.470 --> 14:31.470
我们来看一下

14:31.470 --> 14:33.470
就做这么一个效果

14:33.470 --> 14:35.470
好 咱们来做

14:35.470 --> 14:37.470
来 我们找到这里

14:37.470 --> 14:40.470
新建一个文件牙

14:41.470 --> 14:42.470
里面看到的效果

14:42.470 --> 14:44.470
第一个效果 第二个效果

14:44.470 --> 14:46.470
我们先来做第一个效果

14:49.470 --> 14:50.470
然后呢

14:50.470 --> 14:51.470
同学们把这个效果里面

14:51.470 --> 14:53.470
有个文件牙叫RCS

14:53.470 --> 14:54.470
表示资源文件牙

14:54.470 --> 14:55.470
这里面有些图片

14:55.470 --> 14:57.470
你把它复制过来

14:59.470 --> 15:00.470
我们在这里面

15:00.470 --> 15:01.470
再新建一个文件牙

15:01.470 --> 15:02.470
CSS

15:02.470 --> 15:04.470
再写上一个DEMO1

15:04.470 --> 15:06.470
CSS

15:06.470 --> 15:09.470
我们在页面上去引用它

15:09.470 --> 15:11.470
DEMO1

15:11.470 --> 15:13.470
引用一下

15:13.470 --> 15:17.870
CSS

15:17.870 --> 15:19.870
DEMO1.CSS

15:19.870 --> 15:20.870
好 接下来

15:20.870 --> 15:21.870
我们来看一下

15:21.870 --> 15:22.870
这个页面怎么实现

15:22.870 --> 15:23.870
这个页面东西很多

15:23.870 --> 15:25.870
看好多东西对吧

15:25.870 --> 15:28.870
其实是这样子的

15:28.870 --> 15:29.870
这些东西

15:29.870 --> 15:30.870
我们都难得去练的

15:30.870 --> 15:31.870
因为我们练习的重点

15:31.870 --> 15:32.870
是绝对定位

15:32.870 --> 15:33.870
这些玩意

15:33.870 --> 15:35.870
我们写完了过后

15:35.870 --> 15:36.870
可能就一周了

15:36.870 --> 15:37.870
所以说没有必要

15:37.870 --> 15:39.870
因此我做了这么一个事

15:39.870 --> 15:41.870
就做了一个配级的GPG

15:41.870 --> 15:43.870
它就是一张图片

15:43.870 --> 15:44.870
做了一张图片

15:44.870 --> 15:46.870
因为我练习的并不是它

15:46.870 --> 15:47.870
我们这里面

15:47.870 --> 15:48.870
就直接用一个IMIGI元素

15:48.870 --> 15:50.870
应该写的那样是配级

15:50.870 --> 15:52.870
然后图片的路清

15:52.870 --> 15:55.870
就在RCS配级里边

15:55.870 --> 15:56.870
OK

15:56.870 --> 16:01.020
我们打开看一下

16:01.020 --> 16:02.020
好 差不多

16:02.020 --> 16:03.020
就这样子

16:03.020 --> 16:04.020
就是一张图片

16:04.020 --> 16:05.020
就整个一张图片

16:05.020 --> 16:06.020
我把图片的宽高

16:06.020 --> 16:08.020
给它设置一下

16:08.020 --> 16:10.020
照CSS里面去

16:11.020 --> 16:12.020
首先来一个

16:12.020 --> 16:16.030
清除各种样式

16:16.030 --> 16:19.030
Border Box

16:20.030 --> 16:22.030
我把这个放过来

16:22.030 --> 16:23.030
接下来

16:23.030 --> 16:24.030
我们找到这个配级

16:24.030 --> 16:25.030
就是图片

16:25.030 --> 16:26.030
给它设置宽度

16:26.030 --> 16:27.030
一百分之百

16:27.030 --> 16:29.030
就是设置充满副元素

16:29.030 --> 16:30.030
副元素的保底

16:30.030 --> 16:31.030
那么这样就出来了

16:32.030 --> 16:33.030
好 接下来

16:33.030 --> 16:35.030
我们主要是要做这一块

16:37.030 --> 16:38.030
练习

16:39.030 --> 16:40.030
主要是做这一块

16:40.030 --> 16:41.030
中间这一块

16:41.030 --> 16:42.030
好 这一块

16:42.030 --> 16:43.030
我们用一个

16:43.030 --> 16:44.030
它其实也是一张图片

16:44.030 --> 16:45.030
在这

16:46.030 --> 16:47.030
图片在哪呢

16:47.030 --> 16:48.030
在

16:50.030 --> 16:51.030
login

16:51.030 --> 16:52.030
有这么一张图片

16:52.030 --> 16:53.030
就是我要做的事情

16:53.030 --> 16:55.030
就是把图片

16:55.030 --> 16:57.030
放到中间就可以了

16:57.030 --> 16:58.030
但是

16:58.030 --> 16:59.030
就是有可能就马上想

16:59.030 --> 17:00.030
我能不能

17:00.030 --> 17:01.030
这样子写

17:01.030 --> 17:02.030
就写个图片就完了

17:02.030 --> 17:03.030
对吧

17:03.030 --> 17:04.030
因为我这一块

17:04.030 --> 17:05.030
其实它不应该是图片

17:05.030 --> 17:06.030
应该是个DAV

17:06.030 --> 17:07.030
里面有些内容

17:07.030 --> 17:08.030
还要实现登录功能

17:08.030 --> 17:09.030
只不过我们现在

17:09.030 --> 17:10.030
目前练习的是绝对定位

17:10.030 --> 17:11.030
因此呢

17:11.030 --> 17:13.030
我们不去做这些考虑了

17:13.030 --> 17:14.030
然后我们就这个情况

17:14.030 --> 17:16.030
那我就可以使得这个图片

17:16.030 --> 17:17.030
而sets

17:18.030 --> 17:19.030
login

17:19.030 --> 17:20.030
把放中间不就完了吗

17:20.030 --> 17:21.030
对吧

17:21.030 --> 17:22.030
我们把它就

17:22.030 --> 17:23.030
定位

17:23.030 --> 17:24.030
然后把它放中间

17:24.030 --> 17:25.030
但是呢

17:26.030 --> 17:27.030
现在目前在下面

17:27.030 --> 17:28.030
但是你如果说

17:28.030 --> 17:29.030
你这样做的话

17:29.030 --> 17:31.030
你会发现有点区别在什么呢

17:32.030 --> 17:33.030
你看这个页面

17:33.030 --> 17:34.030
是不是要暗一些

17:34.030 --> 17:35.030
对不对

17:35.030 --> 17:36.030
你看这四周

17:36.030 --> 17:37.030
是不是要暗一些

17:37.030 --> 17:39.030
那这是怎么做出来的呢

17:39.030 --> 17:40.030
这种会变暗了

17:41.030 --> 17:42.030
变暗了只是一个表象

17:42.030 --> 17:43.030
它是这样子的

17:45.340 --> 17:46.340
当我们做一些

17:46.340 --> 17:47.340
那个登录啊

17:47.340 --> 17:48.340
或者是一些

17:48.340 --> 17:49.340
这个窗口局中的

17:49.340 --> 17:51.340
一些弹窗之类的事情的时候

17:51.340 --> 17:53.340
我们往往都会这么做

17:53.340 --> 17:55.340
就是来一个DAV

17:56.340 --> 17:57.340
这个DAV呢

17:57.340 --> 17:58.340
把这个四口啊

17:58.340 --> 17:59.340
把这个整个浏览器

17:59.340 --> 18:01.340
窗口给它盖住

18:01.340 --> 18:02.340
这个DAV是一个

18:02.340 --> 18:05.340
是一个背景半透明的

18:05.340 --> 18:06.340
我们往往把这个DAV呢

18:06.340 --> 18:08.340
叫做猛城

18:08.340 --> 18:09.340
猛城

18:11.980 --> 18:15.860
猛猛农农的

18:15.860 --> 18:16.860
然后呢

18:16.860 --> 18:18.860
半透明的给它盖住

18:18.860 --> 18:20.860
然后DAV里边呢

18:20.860 --> 18:22.860
给它一个东西让它居中

18:22.860 --> 18:23.860
是这么一种结构啊

18:23.860 --> 18:24.860
也就是说

18:24.860 --> 18:25.860
再来一次啊

18:25.860 --> 18:26.860
整个一个DAV

18:26.860 --> 18:28.860
把整个窗口盖住

18:28.860 --> 18:29.860
然后呢

18:29.860 --> 18:31.860
是一个背景半透明

18:31.860 --> 18:33.860
这个DAV里边呢

18:33.860 --> 18:34.860
有一个东西啊

18:34.860 --> 18:35.860
处在最中间

18:35.860 --> 18:37.860
是这么个意思

18:37.860 --> 18:38.860
所以说呢

18:38.860 --> 18:39.860
我们这一块的元素结构的话

18:39.860 --> 18:40.860
应该是这样子的

18:40.860 --> 18:41.860
一个DAV

18:41.860 --> 18:42.860
给它写上一个model

18:42.860 --> 18:44.860
表示猛城

18:44.860 --> 18:45.860
然后里边呢

18:45.860 --> 18:47.860
是一个图片啊

18:47.860 --> 18:49.860
当然也可以是一个DAV

18:49.860 --> 18:51.860
就是让这里边的东西居中

18:51.860 --> 18:52.860
是这么个意思啊

18:52.860 --> 18:53.860
那么这里用图片

18:53.860 --> 18:55.860
把它跟那样式

18:55.860 --> 18:57.860
比较老给

18:57.860 --> 18:58.860
元素结构

18:58.860 --> 19:00.860
其实就写完了

19:00.860 --> 19:02.860
好 接下来让我们来看

19:02.860 --> 19:03.860
样式怎么写的

19:03.860 --> 19:04.860
目前那个样式的

19:04.860 --> 19:05.860
肯定是这样子的

19:05.860 --> 19:06.860
在最下边

19:06.860 --> 19:07.860
因为它正常排列嘛

19:07.860 --> 19:08.860
上面一个图片

19:08.860 --> 19:09.860
下面一个东西在最下边

19:09.860 --> 19:11.860
好 我们再写它的CSS

19:11.860 --> 19:13.860
首先找到这个model

19:13.860 --> 19:15.860
猛城

19:15.860 --> 19:16.860
那么首先看一下

19:16.860 --> 19:17.860
它是不是决定定位

19:17.860 --> 19:18.860
就这个玩意儿

19:18.860 --> 19:20.860
整个这个猛城

19:20.860 --> 19:21.860
把整个页面盖住的

19:21.860 --> 19:23.860
那肯定是

19:23.860 --> 19:24.860
对吧

19:24.860 --> 19:25.860
它跟其他的

19:25.860 --> 19:26.860
其他的正常排列元素

19:26.860 --> 19:27.860
没有关系

19:27.860 --> 19:28.860
直接盖上去

19:28.860 --> 19:29.860
一个盖工章一样

19:29.860 --> 19:30.860
就盖在那个合同里边

19:30.860 --> 19:31.860
盖工章一样

19:31.860 --> 19:32.860
直接盖上去了

19:32.860 --> 19:33.860
只不过它的宽高很高

19:33.860 --> 19:34.860
很宽很高

19:34.860 --> 19:35.860
把撑满了

19:35.860 --> 19:36.860
所以说

19:36.860 --> 19:38.860
它应该是一个决定位

19:38.860 --> 19:39.860
它应该是决定定位

19:39.860 --> 19:41.860
还是固定定位呢

19:41.860 --> 19:43.860
那就看它的参考系了

19:43.860 --> 19:44.860
它是参考的是

19:44.860 --> 19:45.860
某一个元素呢

19:45.860 --> 19:46.860
还是参考的是

19:46.860 --> 19:48.860
整个窗口呢

19:48.860 --> 19:49.860
就整个这个猛城

19:49.860 --> 19:51.860
它参考的肯定是窗口

19:51.860 --> 19:52.860
对吧

19:52.860 --> 19:53.860
所以说我们这里

19:53.860 --> 19:54.860
它的定位方式

19:54.860 --> 19:56.860
应该是fixed

19:56.860 --> 19:58.860
pressionfixed

19:58.860 --> 19:59.860
好

19:59.860 --> 20:00.860
然后呢

20:00.860 --> 20:02.860
我为了让你们看到效果

20:02.860 --> 20:03.860
我这里给它设置一个背景

20:03.860 --> 20:06.860
给它设置为红色吧

20:06.860 --> 20:07.860
目前跑了哪去了

20:07.860 --> 20:09.860
目前在最下边看不见

20:09.860 --> 20:10.860
那么现在呢

20:10.860 --> 20:12.860
我来设置它的位置

20:12.860 --> 20:13.860
首先呢

20:13.860 --> 20:15.860
它应该出现在left

20:15.860 --> 20:16.860
就在窗

20:16.860 --> 20:17.860
现在我们的定位方式

20:17.860 --> 20:18.860
是固定定位

20:18.860 --> 20:19.860
因此呢

20:19.860 --> 20:20.860
它参考的是什么

20:20.860 --> 20:21.860
参考的是窗口

20:21.860 --> 20:22.860
它左边

20:22.860 --> 20:24.860
离窗口的左边是0

20:24.860 --> 20:25.860
上边离窗口的

20:25.860 --> 20:28.860
上边也是0

20:28.860 --> 20:29.860
然后呢

20:29.860 --> 20:30.860
它的宽度呢

20:30.860 --> 20:31.860
是百分之百

20:31.860 --> 20:32.860
高度呢

20:32.860 --> 20:33.860
是百分之百

20:33.860 --> 20:35.860
百分比相对于谁

20:35.860 --> 20:36.860
相对于它的参考系

20:36.860 --> 20:38.860
它的参考系是谁

20:38.860 --> 20:40.860
整个浏览器窗口

20:40.860 --> 20:41.860
是吧

20:41.860 --> 20:42.860
那么它里边有张图片

20:42.860 --> 20:43.860
里边

20:43.860 --> 20:44.860
然后整个就是红色了

20:44.860 --> 20:46.860
如果说你把图片去掉

20:46.860 --> 20:47.860
注释掉

20:47.860 --> 20:48.860
你会看到一个红色

20:48.860 --> 20:50.860
覆盖到整个窗口

20:50.860 --> 20:51.860
对吧

20:51.860 --> 20:52.860
好,我们接着继续

20:52.860 --> 20:54.860
但是它背景不是红色

20:54.860 --> 20:56.860
应该是一个什么半透明的

20:56.860 --> 20:57.860
黑色

20:57.860 --> 20:58.860
那么半透明怎么做

20:58.860 --> 21:00.860
是不是RGBA

21:00.860 --> 21:01.860
对吧

21:01.860 --> 21:02.860
零零零

21:02.860 --> 21:04.860
我们知道是黑色

21:04.860 --> 21:06.860
后面有个半透明的黑色

21:06.860 --> 21:08.860
那么就写了个R法通道了

21:08.860 --> 21:10.860
零是完全透明

21:10.860 --> 21:12.860
那就跟写一样

21:12.860 --> 21:14.860
一是完全不透明

