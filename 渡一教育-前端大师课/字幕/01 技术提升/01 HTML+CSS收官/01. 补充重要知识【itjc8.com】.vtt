WEBVTT

00:00.430 --> 00:02.430
同学们大家好,我是袁老师

00:02.430 --> 00:07.430
这些课我们为了让后边的课程学习的顺利

00:07.430 --> 00:09.430
为后边的课程少轻一些障碍

00:09.430 --> 00:14.430
所以说我们这几课需要给大家补充一些简单且重要的知识

00:14.430 --> 00:18.430
这些知识同学们在前面的学习中可能没有怎么去涉及到

00:18.430 --> 00:21.430
所以说我们在这几课集中来补充一下

00:21.430 --> 00:25.430
一共就有四个知识,而且它代码也非常简单

00:25.430 --> 00:29.430
而且知识也比较好理解,我们快速把过一下

00:29.430 --> 00:32.430
第一个我把它叫做防脱发神器

00:32.430 --> 00:34.430
因为它真的可以解决脱发的问题

00:34.430 --> 00:37.430
咱们成全的法治是不是很重要的

00:37.430 --> 00:39.430
好,我们来看一下到底是一个什么样的知识

00:39.430 --> 00:43.430
其实这一块讲了半天,讲完之后就这么一句话

00:43.430 --> 00:48.430
就是你学了这一块之后,你们在写CSS的时候

00:48.430 --> 00:52.430
在最开始的位置,加上一个新号,选中所有元素

00:52.430 --> 00:55.430
然后给它设置Margining,Pendinging

00:55.430 --> 00:59.430
干嘛呀?是不是清除流氧性的默认样式,这大家都学过了

00:59.430 --> 01:04.430
再加上鱼,包塞丁,BorderBoss就可以了

01:04.430 --> 01:07.430
那么之后就不需要再加它了,不需要管它了

01:07.430 --> 01:13.430
这样子,只要你做了这件事,你的掉头发的问题就可以解决了

01:13.430 --> 01:16.430
那怎么回事呢?我们来看一下这个知识到底是怎么回事

01:16.430 --> 01:21.430
就是我们每一个元素或者叫标圈,在页面上都会形成一个合模型

01:21.430 --> 01:27.430
包括什么Margin外边距,Border,边框,Pending,内边距

01:27.430 --> 01:31.430
还有就是内容区域,对吧?会形成一个合模型

01:31.430 --> 01:35.430
那这个合模型里边,我们如果说去设置宽高

01:35.430 --> 01:39.430
比方说我们这得设置宽高,我们设置是啥呀?

01:39.430 --> 01:44.430
到底是啥呀?啥的宽高呢?其实这有一点反直觉

01:44.430 --> 01:48.430
它实际上设置的是什么?内容区域,就这个区域

01:48.430 --> 01:52.430
内容区域的宽高100×100,它是不包含Pending

01:52.430 --> 01:56.430
不包含Border的,这就是默认情况

01:56.430 --> 01:59.430
我们这里有Pending,有Border,那么也就是说

01:59.430 --> 02:04.430
我们虽然设置的宽高是100×100,但是加上Pending

02:04.430 --> 02:08.430
加上Border之后,是不是这个盒子会超出这个100×100?

02:08.430 --> 02:11.430
对吧?这个盒子会变得更大一些

02:11.430 --> 02:15.430
这样子会造成一个什么问题呢?这样子就造成了

02:15.430 --> 02:18.430
脱发的问题了,比方说我们随便找一个网站吧

02:18.430 --> 02:21.430
随便找一个网站,比方说我们现在做一个王者荣耀

02:21.430 --> 02:25.430
王者荣耀我想做这个区域,于是我在页面上

02:25.430 --> 02:28.430
或者是通过一些工具,量一量,一量的话会发现

02:28.430 --> 02:33.430
它的宽度358,高度342,这样一量出来

02:33.430 --> 02:37.430
好,量出来过后我就马上去设置宽高,宽358

02:37.430 --> 02:41.430
高342,好看是没什么问题

02:41.430 --> 02:44.430
但是一会儿我在做这个区域的时候,我们可能会给它加上一个Border

02:44.430 --> 02:48.430
可能会给它加上一个Pending,这样子一加就完蛋了

02:48.430 --> 02:52.430
因为这个盒子的尺寸就会超过这个尺寸了

02:52.430 --> 02:56.430
懂得意思吧?因为我们设置的宽高呢,实际上是设置的是什么?

02:56.430 --> 03:00.430
设置的是那个内容区的宽高

03:00.430 --> 03:04.430
因此呢,这样子呢,又会造成很多麻烦的问题

03:04.430 --> 03:08.430
就是我们要去精确的计算,精确的计算它的尺寸

03:08.430 --> 03:12.430
内容部分尺寸是多少,然后再去设置宽高

03:12.430 --> 03:16.430
因为我们要去减去,我们用刚才那个尺寸去减去Border

03:16.430 --> 03:19.430
减去Pending,要精确的计算,非常的麻烦

03:19.430 --> 03:23.430
这是默认情况下,默认情况下相当于是

03:23.430 --> 03:28.430
就写了这么一个属性,Boss什么意思?盒子

03:28.430 --> 03:33.430
Siden的尺寸,后面有一个字叫content box

03:33.430 --> 03:37.430
content什么意思?内容,就是这部分,内容区域

03:37.430 --> 03:41.430
内容的盒子,也就是我们默认情况下

03:41.430 --> 03:45.430
或者是你直接写这句话,你写不写这句话,就是

03:45.430 --> 03:48.430
都是这个词,默认就是这个词

03:48.430 --> 03:51.430
你写了这句话,或者是你不写这句话,默认情况下

03:51.430 --> 03:55.430
那么它设置宽高呢,设置的是内容区

03:55.430 --> 03:59.430
这样子会造成很多问题,因此呢,我们想把它改一下

03:59.430 --> 04:03.430
改成Border Boss,那么这样子一改的话

04:03.430 --> 04:07.430
我们再去设置宽高,再去设置高度的时候呢

04:07.430 --> 04:11.430
它就变成了设置的是边框盒,就是包含边框在内

04:11.430 --> 04:15.430
包含内边距,包含内容部分,那总共是

04:15.430 --> 04:19.430
一百成一百,然后呢内容区域是多少呢

04:19.430 --> 04:22.430
它会自动进行运转,比方你设置的潘景石

04:22.430 --> 04:26.430
Border四五,那内容区域一挤压,是不是变成七十了

04:26.430 --> 04:30.430
它始终保证边框这个整个这个区域呢

04:30.430 --> 04:34.430
是一百成一百,这样子是比较符合我们的

04:34.430 --> 04:38.430
直觉的,这样子会解决很多很多的问题

04:38.430 --> 04:42.430
所以说,听懂了吧,解决了半天,我们要做的事情就是

04:42.430 --> 04:47.430
在一个网站中,找到我们网站中的所有元素

04:47.430 --> 04:50.430
给它设置一个Border Boss

04:50.430 --> 04:54.430
像一些比较新的网站啊,比方说像那个

04:54.430 --> 04:59.430
什么呢,B站,你看一下,他们都会去这样做

05:00.430 --> 05:04.430
你看,B站里面,我们找到这个

05:04.430 --> 05:07.430
找一下,你看这里是不是有一个信号

05:07.430 --> 05:11.430
Border Boss,这样子就会解决一面上很多的问题了

05:11.430 --> 05:15.430
这是第一个要补充的小知识,对单码的影响并不大

05:15.430 --> 05:18.430
只需要加上这句话就完事了

05:18.430 --> 05:22.430
好,第二个小知识,叫做颜色的Alpha通道

05:22.430 --> 05:26.430
这个说的好像挺高拉上的样子,其实非常简单

05:26.430 --> 05:29.430
这个Alpha通道是什么呢,因为我们知道颜色

05:29.430 --> 05:32.430
这个东西不是三元色吗,红绿蓝,对吧

05:32.430 --> 05:36.430
通过这三种颜色,然后就可以组装成很多很多的颜色

05:36.430 --> 05:39.430
那么这个颜色里面其实还有一个值

05:39.430 --> 05:42.430
这个值表示颜色的透明度

05:42.430 --> 05:46.430
它是一个0到1之间的取值,0表示完全透明

05:46.430 --> 05:50.430
1表示完全不透明,这个字我写错了,要改一下

05:50.430 --> 05:53.430
我先去改一下

05:53.430 --> 05:59.430
这里1,0表示完全透明

05:59.430 --> 06:03.430
1表示完全不透明

06:03.430 --> 06:05.430
OK,这就是Alpha通道

06:05.430 --> 06:08.430
那么到底我们怎么写的,注意啊

06:08.430 --> 06:12.430
是任何有可以写颜色的地方,哪些可以写颜色

06:12.430 --> 06:14.430
背景颜色是不是可以写颜色

06:14.430 --> 06:16.430
文字颜色是不是可以写颜色

06:17.430 --> 06:20.430
包括边框颜色

06:20.430 --> 06:24.430
凡是可以写颜色的地方,都可以使用颜色的Alpha通道

06:24.430 --> 06:27.430
那具体咋写呢,我这里取了个例子

06:27.430 --> 06:31.430
比方说你写的是文字颜色,文字颜色

06:31.430 --> 06:34.430
那么我们过去都是使用了什么RGB

06:34.430 --> 06:37.430
或者是16进制的那种写法,一个警号开头都可以

06:37.430 --> 06:41.430
那么写的时候呢,我们如果说要做一个半透明的效果

06:41.430 --> 06:45.430
那么我们可以加上一个A,RGBA,A是什么

06:45.430 --> 06:47.430
A就是Alpha

06:47.430 --> 06:50.430
那么前面就是颜色,红绿蓝

06:50.430 --> 06:54.430
然后最后一个呢,就是Alpha通道,0表示完全透明

06:54.430 --> 06:57.430
1呢,表示完全不透明

06:57.430 --> 07:00.430
比方说你这里最后一个写0,那最后一个写0的话

07:00.430 --> 07:03.430
那就,这句话前面三个写啥都无所谓了

07:03.430 --> 07:05.430
对吧,因为它已经完全透明了

07:05.430 --> 07:07.430
那么就相当于是这样,这样一个代码呢

07:07.430 --> 07:09.430
就相当于是Transparent

07:09.430 --> 07:12.430
这个关键字,使用这个关键字呢,就相当于是

07:12.430 --> 07:13.430
也就是完全透明

07:13.430 --> 07:16.430
如果说你要做一个完全不透明的话

07:16.430 --> 07:19.430
那比方说RGBA,前面是零零零黑色嘛

07:19.430 --> 07:22.430
然后后面一个1,表示完全不透明的黑色

07:22.430 --> 07:25.430
那就相当于就是没有写这个Alpha

07:25.430 --> 07:27.430
因为没有写Alpha的话

07:27.430 --> 07:29.430
那就是完全不透明

07:29.430 --> 07:31.430
对吧,如果说你要做一个半透明的呢

07:31.430 --> 07:33.430
那就这个东西就有用了

07:33.430 --> 07:35.430
前面是你的三元色

07:35.430 --> 07:38.430
后面就写一个0.5或者0.3,0.7

07:38.430 --> 07:40.430
就看你的透明程度了

07:40.430 --> 07:43.430
那这里呢,得到一个半透明的黑色

07:43.430 --> 07:44.430
我给大家举个例子吧

07:44.430 --> 07:46.430
比方说这里呢,为了让你们看到效果

07:46.430 --> 07:49.430
我这里随便下载一张图片

07:51.430 --> 07:52.430
我这里随便下载一张

07:52.430 --> 07:55.430
然后我在桌面上保存一下,笔记

07:57.430 --> 07:59.430
这里呢,我把它保存一下

08:01.430 --> 08:03.430
在VSCode里面打开

08:03.430 --> 08:06.430
这里找一个文件夹吧

08:06.430 --> 08:09.740
然后把它放到文件夹里边

08:09.740 --> 08:11.740
比方说我们这里有一个页面

08:13.740 --> 08:14.740
一半

08:19.680 --> 08:21.680
然后这里有一个

08:22.680 --> 08:24.680
给body设置一个背景

08:25.680 --> 08:26.680
body

08:26.680 --> 08:34.440
背景是urlbg.jpg

08:34.440 --> 08:35.440
repeat

08:35.440 --> 08:36.440
不重复

08:36.440 --> 08:38.440
好,我们打开这个页面看一下

08:38.440 --> 08:41.880
或者就在VSCode里面打开

08:41.880 --> 08:43.880
不就是这个页面吧,对吧

08:43.880 --> 08:46.880
好,接下来呢,我们来设置一个div

08:46.880 --> 08:48.880
div item

08:49.880 --> 08:51.880
然后呢,找到这个item的那样式

08:51.880 --> 08:53.880
给它设置一个宽高

08:53.880 --> 08:55.880
宽度是100个像素

08:55.880 --> 08:56.880
或者是300个像素吧

08:56.880 --> 08:57.880
看得清楚一点啊

08:57.880 --> 08:59.880
高度了200个像素

08:59.880 --> 09:02.880
好,给它一个背景是红色,看一下啊

09:03.880 --> 09:05.880
相当于是这个非常

09:06.880 --> 09:08.880
一个大的一个红块

09:08.880 --> 09:10.880
然后把整个背景就遮住了,对不对

09:10.880 --> 09:12.880
因为它不是透明的

09:12.880 --> 09:13.880
它没有透明

09:13.880 --> 09:15.880
那如果说你设置的不是红色呢

09:15.880 --> 09:17.880
那如果说你设置的是transparent呢

09:17.880 --> 09:19.880
它就是完全透明的,对吧

09:19.880 --> 09:20.880
背景是完全透明的

09:20.880 --> 09:22.880
所以是眼睛透过去

09:22.880 --> 09:24.880
看到了背景的图片了

09:24.880 --> 09:26.880
好,那接下来我给它设置一个

09:26.880 --> 09:28.880
半透明的颜色,你看一下啊

09:28.880 --> 09:29.880
rgba

09:29.880 --> 09:30.880
比方说就红色吧

09:30.880 --> 09:32.880
红色是红绿蓝吧

09:32.880 --> 09:33.880
红第一个是255

09:33.880 --> 09:34.880
第二个是0

09:34.880 --> 09:35.880
第三个是0

09:36.880 --> 09:37.880
如果说我这里设置0的话

09:37.880 --> 09:38.880
最后一个写0的话

09:38.880 --> 09:40.880
就相当于是完全透明

09:40.880 --> 09:42.880
对吧,跟transparent是一样的

09:42.880 --> 09:44.880
如果说是设置1的话

09:44.880 --> 09:46.880
就相当于是没有写这个A

09:46.880 --> 09:48.880
就相当于是rgb红色

09:48.880 --> 09:50.880
对不对,就相当于是这个

09:50.880 --> 09:52.880
但是我可以给中间指

09:52.880 --> 09:54.880
比方说给它一个0.5

09:54.880 --> 09:56.880
你看是不是一个半透明的红色

09:56.880 --> 09:58.880
对吧,然后在0.2

09:58.880 --> 09:59.880
是不是更加透明一点的

09:59.880 --> 10:00.880
你看清楚吧

10:00.880 --> 10:01.880
然后0.8

10:01.880 --> 10:03.880
又变得有点不透明的

10:03.880 --> 10:05.880
这就是一个半透明的颜色

10:05.880 --> 10:06.880
好,有的人就想问了

10:06.880 --> 10:09.880
那这个玩意跟那个opacity有什么区别呢

10:09.880 --> 10:11.880
好,我们来看一下opacity

10:11.880 --> 10:12.880
这不是说透明度吗

10:12.880 --> 10:14.880
它不是也是一个小数吗

10:14.880 --> 10:15.880
不要让我0.8

10:15.880 --> 10:17.880
opacity,我把这个注射掉

10:18.880 --> 10:20.880
背景还是用红色吧

10:23.900 --> 10:24.900
红色

10:24.900 --> 10:25.900
那你看

10:25.900 --> 10:26.900
0.8

10:26.900 --> 10:27.900
那跟刚才那个不是一样的吧

10:27.900 --> 10:28.900
有什么区别呢

10:28.900 --> 10:30.900
你看,我们把这个注射

10:30.900 --> 10:31.900
把上面那个取

10:31.900 --> 10:33.900
你看是不是完全一样的

10:33.900 --> 10:35.900
是不是没有区别呢

10:35.900 --> 10:36.900
是有区别的

10:36.900 --> 10:39.900
opacity表示的是整个元素

10:39.900 --> 10:41.900
里面的所有东西

10:41.900 --> 10:43.900
反而是可以在页面上显示的东西

10:43.900 --> 10:45.900
里面包括它里面的文字啊

10:45.900 --> 10:47.900
所有东西它全部整体是

10:47.900 --> 10:49.900
0.8的透明度

10:49.900 --> 10:50.900
但是这一块呢

10:50.900 --> 10:52.900
只表示这个背景的颜色

10:52.900 --> 10:53.900
是半透明的

10:53.900 --> 10:55.900
那我们来具体说一下

10:55.900 --> 10:57.900
比方说它里面有一段文字

10:57.900 --> 10:58.900
有一段P元素

10:58.900 --> 10:59.900
有一段文字

10:59.900 --> 11:01.900
我随便写一段文字吧

11:02.900 --> 11:03.900
同学们看

11:03.900 --> 11:05.900
如果说我用的是那个

11:05.900 --> 11:07.900
白光的这种颜色的半透明的话

11:07.900 --> 11:09.900
那么它只有背景颜色

11:09.900 --> 11:10.900
是半透明的

11:10.900 --> 11:11.900
对吧

11:11.900 --> 11:12.900
那文字有没有半透明的

11:12.900 --> 11:14.900
我把自己放大一点

11:16.900 --> 11:17.900
21M吧

11:17.900 --> 11:18.900
两倍

11:18.900 --> 11:20.900
文字它并没有透明

11:20.900 --> 11:21.900
对不对

11:21.900 --> 11:22.900
但是如果说你用的是

11:22.900 --> 11:24.900
下边这种方式的话

11:25.900 --> 11:26.900
你看文字是不是

11:26.900 --> 11:28.900
也变得有点半透明了

11:28.900 --> 11:30.900
如果说把它设小一点啊

11:30.900 --> 11:31.900
设成0.3

11:31.900 --> 11:33.900
你看文字是不是也变成半透明了

11:33.900 --> 11:34.900
如果说你用上边那种方式

11:34.900 --> 11:40.700
你用0.3

11:40.700 --> 11:41.700
你看文字是不透明的

11:41.700 --> 11:43.700
只有背景是半透明的

11:43.700 --> 11:44.700
就它们的区别

11:44.700 --> 11:46.700
因此这种邪法

11:46.700 --> 11:48.700
有的时候更加灵活

11:48.700 --> 11:49.700
比这个opacity

11:49.700 --> 11:51.700
其实我们在实际开发中

11:51.700 --> 11:53.700
这个opacity用的其实

11:53.700 --> 11:55.700
远远没有这种

11:55.700 --> 11:57.700
Alpha通道用的多

11:57.700 --> 11:58.700
就是因为Alpha通道

11:58.700 --> 12:00.700
它控制得更加精细

12:00.700 --> 12:01.700
它可以控制背景是半透明的

12:01.700 --> 12:03.700
或者是背景不透明

12:03.700 --> 12:04.700
文字是半透明的

12:04.700 --> 12:06.700
可以做各种各样的控制

12:06.700 --> 12:07.700
非常精细的控制

12:07.700 --> 12:09.700
opacity就比较粗暴一点

12:09.700 --> 12:11.700
去所有东西全部满透明

12:11.700 --> 12:13.700
这就是这一块的知识

12:13.700 --> 12:14.700
Alpha通道

12:14.700 --> 12:15.700
其实Alpha通道这一块

12:15.700 --> 12:17.700
我们可还可以有多种邪法

12:17.700 --> 12:18.700
其他邪法了解一下就行了

12:18.700 --> 12:19.700
我们用的最多的

12:19.700 --> 12:20.700
就是这种RGB

12:20.700 --> 12:21.700
这种比较好写一点

12:21.700 --> 12:22.700
还可以写为什么呢

12:22.700 --> 12:23.700
还可以写为

12:23.700 --> 12:24.700
现在一种新式的邪法

12:24.700 --> 12:25.700
就是RGB

12:25.700 --> 12:27.700
前边写三元色

12:27.700 --> 12:28.700
红绿蓝

12:28.700 --> 12:29.700
然后后边一个鞋杠

12:29.700 --> 12:30.700
后边写Alpha通道

12:30.700 --> 12:32.700
0%就是完全透明

12:32.700 --> 12:34.700
100%就是完全不透明

12:34.700 --> 12:36.700
就是前边这个颜色

12:36.700 --> 12:38.700
它占据的百分比是多少

12:38.700 --> 12:39.700
我们这里写50%

12:39.700 --> 12:41.700
就相当于是这里写了0.5%

12:41.700 --> 12:42.700
这是一种邪法

12:42.700 --> 12:44.700
还可以写成16进质

12:44.700 --> 12:47.700
你看前边是不是六位书

12:47.700 --> 12:48.700
六位书

12:48.700 --> 12:50.700
那就是一个16进质的邪法

12:50.700 --> 12:51.700
后边加上两位书

12:51.700 --> 12:52.700
来表示透明度

12:52.700 --> 12:54.700
从零零到FF

12:54.700 --> 12:56.700
不过这种邪法用的很少

12:56.700 --> 12:58.700
因为是16进质不好换算

12:58.700 --> 12:59.700
所以这种邪法

12:59.700 --> 13:00.700
我们写的少一点

13:00.700 --> 13:03.700
最常见的就是写这种邪法

13:03.700 --> 13:05.700
这是Alpha通道

13:05.700 --> 13:06.700
当我们一个区

13:06.700 --> 13:07.700
需要一个半透明效果的时候

13:07.700 --> 13:08.700
特别是背景

13:08.700 --> 13:10.700
需要一个半透明的背景的时候

13:10.700 --> 13:12.700
那么我们就可以使用这个东西

13:12.700 --> 13:14.700
好 这是第二个小知识

13:14.700 --> 13:16.700
第三个小知识是

13:16.700 --> 13:18.700
叫做尺寸的百分比

13:18.700 --> 13:19.700
就有的时候

13:19.700 --> 13:20.700
我们一个元素

13:20.700 --> 13:21.700
它的尺寸

13:21.700 --> 13:22.700
它的宽高

13:22.700 --> 13:24.700
或者是一些别的尺寸

13:24.700 --> 13:27.700
我们可能不是绝对的

13:27.700 --> 13:28.700
比方说什么意思呢

13:28.700 --> 13:29.700
比方说

13:29.700 --> 13:32.700
我现在去新建一个页面

13:32.700 --> 13:33.700
这个页面中

13:33.700 --> 13:35.700
我们有一个元素

13:35.700 --> 13:36.700
这个元素

13:36.700 --> 13:41.700
它要占据复元素的百分之

13:41.700 --> 13:43.700
比方说我们这里写一个康天的

13:43.700 --> 13:44.700
一个容器

13:44.700 --> 13:47.700
这个容器我们给它一个样式吧

13:47.700 --> 13:49.700
康天上

13:49.700 --> 13:50.700
一个高度

13:50.700 --> 13:54.700
高度为300个阳数

13:54.700 --> 13:56.700
一个背景吧

13:56.700 --> 13:58.700
背景为红色

13:58.700 --> 13:59.700
我们这里呢

13:59.700 --> 14:00.700
看它

14:00.700 --> 14:02.700
目前是这个阳子

14:02.700 --> 14:03.700
这个鬼阳子

14:04.700 --> 14:05.700
那我们现在需要这样

14:05.700 --> 14:07.700
我们再加一个 Margining

14:13.210 --> 14:14.210
我现在需要这样

14:14.210 --> 14:16.210
就这个元素呢

14:16.210 --> 14:19.210
我希望让它占据

14:19.210 --> 14:24.210
就是占据整个页面的百分之八十

14:24.210 --> 14:25.210
那怎么做呢

14:25.210 --> 14:26.210
也就是它的宽度

14:26.210 --> 14:28.210
它不是固定的

14:28.210 --> 14:30.210
它是占据百分比的

14:30.210 --> 14:31.210
那么这里宽度

14:31.210 --> 14:33.210
我就可以干涉一个百分之八十

14:34.210 --> 14:35.210
这就是百分比

14:35.210 --> 14:37.210
那么这样的好处在什么呢

14:37.210 --> 14:39.210
它好处是会随着

14:39.210 --> 14:40.210
复元素的变化而变化的

14:40.210 --> 14:41.210
比方说复元素

14:41.210 --> 14:43.210
包底变宽了

14:43.210 --> 14:44.210
它又会跟着变宽

14:44.210 --> 14:45.210
对吧

14:45.210 --> 14:46.210
你看到没

14:46.210 --> 14:47.210
这就是百分比

14:47.210 --> 14:50.210
就这一块我要说的就是百分比

14:50.210 --> 14:52.210
那么这个百分比

14:52.210 --> 14:53.210
有一个重要的问题

14:53.210 --> 14:54.210
因为百分比是相对单位

14:54.210 --> 14:56.210
它相对某一个东西是百分比

14:56.210 --> 14:58.210
百分之多少

14:58.210 --> 15:00.210
那这个相对

15:00.210 --> 15:02.210
它相对于谁呢

15:03.210 --> 15:04.210
看清楚啊

15:04.210 --> 15:06.210
百分比是一个相对单位

15:06.210 --> 15:09.210
它相对于元素的参考系

15:10.210 --> 15:12.210
那啥又叫参考系呢

15:13.210 --> 15:15.210
这里给大家规定的两点

15:15.210 --> 15:18.210
普通元素的参考系

15:18.210 --> 15:22.210
就是复元素的内容区域

15:23.210 --> 15:24.210
看到没

15:24.210 --> 15:25.210
普通元素的参考系

15:25.210 --> 15:28.210
为复元素的内容区域

15:28.210 --> 15:30.210
这个玩意是不是一个普通的元素

15:30.210 --> 15:31.210
啥叫普通元素

15:31.210 --> 15:33.210
就是没有定位的元素

15:33.210 --> 15:34.210
就是普通元素

15:34.210 --> 15:36.210
普通元素的参考系

15:36.210 --> 15:38.210
就是复元素的内容区域

15:38.210 --> 15:40.210
那么复元素的body

15:40.210 --> 15:41.210
就是一个body

15:41.210 --> 15:43.210
那么复元素的内容区域

15:43.210 --> 15:45.210
是不是就这个内容区域

15:45.210 --> 15:46.210
对吧

15:46.210 --> 15:48.210
它是相对于这个的

15:48.210 --> 15:50.210
那比方说我们这里边

15:50.210 --> 15:52.210
还有一个DIV

15:53.210 --> 15:55.210
那么这下面这个DIV的百分比

15:55.210 --> 15:56.210
是相对于谁呢

15:56.210 --> 15:57.210
比方说我给他设置一个高度

15:57.210 --> 15:59.210
200个相数

15:59.210 --> 16:00.210
然后

16:01.210 --> 16:02.210
再给他一个背景

16:02.210 --> 16:03.210
nice blue

16:04.210 --> 16:06.210
就里边的DIV

16:07.210 --> 16:08.210
默认情况下

16:08.210 --> 16:09.210
像这种普通元素

16:09.210 --> 16:11.210
默认情况下的宽度是100%

16:11.210 --> 16:12.210
撑满的

16:12.210 --> 16:13.210
对不对

16:13.210 --> 16:14.210
那么这个100%相对于谁呢

16:14.210 --> 16:16.210
相对于就是复元素的内容区域

16:16.210 --> 16:18.210
你看这个复元素就这么宽

16:18.210 --> 16:19.210
就内容区域就100%

16:19.210 --> 16:20.210
那我给他设置宽度

16:20.210 --> 16:22.210
比方说50%

16:23.210 --> 16:24.210
那看是不是就这么点了

16:24.210 --> 16:25.210
对吧

16:25.210 --> 16:26.210
我给他举个中

16:27.210 --> 16:28.210
盆顶

16:29.210 --> 16:30.210
或者布局中

16:30.210 --> 16:31.210
布局中也没上

16:32.210 --> 16:33.210
这样子是不是没问题吧

16:33.210 --> 16:35.210
相对于复元素的

16:35.210 --> 16:36.210
不是一定

16:36.210 --> 16:37.210
有的人可能觉得

16:37.210 --> 16:38.210
这个百分比是不是一定相对于

16:38.210 --> 16:39.210
这个屏幕的

16:39.210 --> 16:40.210
不是的

16:40.210 --> 16:42.210
是相对于复元素的内容区域

16:42.210 --> 16:44.210
那么怎么来理解内容区域呢

16:44.210 --> 16:45.210
你看比方说复元素

16:45.210 --> 16:46.210
我给他加上一个盆顶

16:47.210 --> 16:48.210
注意看

16:48.210 --> 16:49.210
我给他加了盆顶过后

16:49.210 --> 16:51.210
里边的DIV没有变窄

16:51.210 --> 16:55.540
100个相数的盆顶

16:56.540 --> 16:58.540
好加上

16:58.540 --> 17:00.540
我就再加了一个box sizing

17:03.300 --> 17:04.300
box sizing

17:05.300 --> 17:06.300
box

17:06.300 --> 17:07.300
好看一下

17:07.300 --> 17:09.300
我没有加这个盆顶的时候

17:09.300 --> 17:10.300
看里边的DIV

17:10.300 --> 17:11.300
没有加这个盆顶的时候

17:11.300 --> 17:12.300
它是这么宽

17:12.300 --> 17:13.300
只看宽度

17:13.300 --> 17:14.300
它这么宽

17:14.300 --> 17:15.300
然后加这个盆顶过后

17:15.300 --> 17:17.300
里边的DIV变成了

17:17.300 --> 17:18.300
只有这么宽

17:18.300 --> 17:19.300
那这又怎么理解呢

17:19.300 --> 17:21.300
我们就在内容区域里边打开

17:21.300 --> 17:23.300
看一下就理解了

17:23.300 --> 17:27.060
我们找到把弄过来

17:27.060 --> 17:29.060
找到这一块合模型

17:29.060 --> 17:30.060
你看

17:30.060 --> 17:31.060
我们要看这个元素的宽度

17:31.060 --> 17:32.060
宽度是多少

17:32.060 --> 17:33.060
50%

17:33.060 --> 17:34.060
这个50%相对于谁

17:34.060 --> 17:38.060
相对于的是复元素的内容区域

17:38.060 --> 17:40.060
怎么叫内容区域啊

17:40.060 --> 17:41.060
是不是这个区域

17:41.060 --> 17:43.060
这是不是复元素的内容

17:43.060 --> 17:44.060
这周围是pending对吧

17:44.060 --> 17:45.060
周围是pending

17:45.060 --> 17:46.060
里面是内容对吧

17:46.060 --> 17:47.060
内容是多少

17:47.060 --> 17:48.060
420

17:48.060 --> 17:50.060
420的50%是多少

17:50.060 --> 17:51.060
210

17:51.060 --> 17:53.060
看一下这管是不是210

17:53.060 --> 17:54.060
对吧

17:54.060 --> 17:56.060
它不是整个复元素的边框部分

17:56.060 --> 17:58.060
是内容区域的

17:58.060 --> 18:00.060
这一块要注意

18:00.060 --> 18:03.060
内容区域是它的参考系

18:03.060 --> 18:05.060
这是普通元素

18:05.060 --> 18:07.060
那么绝对定位元素

18:07.060 --> 18:10.060
它的参考系为复元素

18:10.060 --> 18:11.060
第一个定位元素

18:11.060 --> 18:12.060
这个讲过了对吧

18:12.060 --> 18:14.060
它首先找复元素是不是定位的

18:14.060 --> 18:15.060
不是再找复元素

18:15.060 --> 18:16.060
是不是定位的

18:16.060 --> 18:17.060
一定要找到第一个定位元素

18:17.060 --> 18:19.060
找到第一个定位元素的

18:19.060 --> 18:20.060
注意

18:20.060 --> 18:22.060
绝对定位是pending区域

18:22.060 --> 18:24.060
是它的参考系

18:24.060 --> 18:26.060
你要理解百分比

18:26.060 --> 18:28.060
你首先得找到它参考系

18:28.060 --> 18:29.060
参考谁对吧

18:29.060 --> 18:30.060
它是一个相对单位

18:30.060 --> 18:32.060
它得有个参考

18:32.060 --> 18:34.060
它相对谁呀

18:34.060 --> 18:35.060
普通元素就相对于

18:35.060 --> 18:36.060
复元素的内容区域

18:36.060 --> 18:38.060
绝对定位的相对于的是

18:38.060 --> 18:39.060
第一个定位元素

18:39.060 --> 18:40.060
对吧

18:40.060 --> 18:41.060
往上找这个是一样的

18:41.060 --> 18:42.060
所以我们有一个口诀

18:42.060 --> 18:43.060
叫直觉复向

18:43.060 --> 18:44.060
对不对

18:44.060 --> 18:46.060
找到第一个定位元素的

18:46.060 --> 18:47.060
pending区域

18:47.060 --> 18:48.060
不是内容区域

18:48.060 --> 18:49.060
是pending区域

18:49.060 --> 18:50.060
就包含pending

18:50.060 --> 18:52.060
包含内容这一部分

18:52.060 --> 18:53.060
比方说又来

18:53.060 --> 18:55.060
那现在我就做这么一件

18:55.060 --> 18:56.060
简单的事

18:56.060 --> 18:57.060
我把这个元素

18:57.060 --> 18:58.060
做一件事就行了

18:58.060 --> 18:59.060
把它变成绝对定位

18:59.060 --> 19:00.060
你看一下

19:04.060 --> 19:05.060
所以一下就变宽了

19:05.060 --> 19:06.060
为什么呢

19:06.060 --> 19:07.060
我要研究一下

19:08.060 --> 19:09.060
当然这个复元素

19:09.060 --> 19:10.060
直觉复向

19:10.060 --> 19:12.060
复元素得变成pending区域

19:13.060 --> 19:14.060
来看

19:14.060 --> 19:15.060
我们直元素

19:15.060 --> 19:16.060
没有绝对定位的时候

19:16.060 --> 19:17.060
是不是要短一点

19:17.060 --> 19:19.060
变成绝对定位就变宽了

19:19.060 --> 19:20.060
那这又是怎么回事呢

19:20.060 --> 19:21.060
我们来看一下

19:21.060 --> 19:22.060
它是绝对定位

19:22.060 --> 19:23.060
它直觉复向吧

19:23.060 --> 19:24.060
复元素是不是相对定位

19:24.060 --> 19:25.060
那么也是相对

19:25.060 --> 19:27.060
复元素也是它的参考器对吧

19:27.060 --> 19:28.060
那复元素哪个区域

19:28.060 --> 19:29.060
是它的参考器呢

19:30.060 --> 19:31.060
普通元素就看复元素

19:31.060 --> 19:33.060
什么内容区域

19:34.060 --> 19:36.060
那绝对定位看的是什么呢

19:36.060 --> 19:38.060
看的是pending区域

19:38.060 --> 19:39.060
就是pending家内容

19:39.060 --> 19:40.060
pending家内容是多少

19:40.060 --> 19:42.060
那不就是620吗

19:42.060 --> 19:43.060
对不对

19:43.060 --> 19:44.060
620的50%

19:45.060 --> 19:46.060
是不是310

19:47.060 --> 19:48.060
对吧

19:48.060 --> 19:49.060
这是不一样的

19:49.060 --> 19:50.060
这不一样

19:50.060 --> 19:51.060
这就是参考器

19:51.060 --> 19:53.060
就是你看这个百分比之后

19:54.060 --> 19:56.060
你把这个玩意习以为常之后

19:56.060 --> 19:58.060
有时候说这个玩意是不是太麻烦了

19:59.060 --> 20:00.060
那我以后写代码的时候

20:00.060 --> 20:01.060
是不是脑袋里边一叫啥

20:01.060 --> 20:02.060
要我这个东西

20:02.060 --> 20:03.060
它的参考器在哪

20:04.060 --> 20:06.060
元老师早就没想这个问题了

20:07.060 --> 20:09.060
你们也会很早就不会想这个问题了

20:09.060 --> 20:10.060
为什么呢

20:11.060 --> 20:13.060
因为你只要写过一个项目

20:13.060 --> 20:14.060
只要写过一个项目

20:14.060 --> 20:16.060
我们后面会写一个项目

20:16.060 --> 20:17.060
马上就会写

20:18.060 --> 20:19.060
你只要写过一个

20:19.060 --> 20:21.060
这个问题就早就解决了

20:21.060 --> 20:22.060
已经在你头脑里面

20:22.060 --> 20:24.060
形成更生地固的影响了

20:24.060 --> 20:25.060
所以说

20:25.060 --> 20:27.060
完全不用担心这个问题

20:27.060 --> 20:29.060
但是这里我讲的话

20:29.060 --> 20:30.060
我要把它讲来细节

20:30.060 --> 20:31.060
是这么回事

20:31.060 --> 20:33.060
就是你要找到它参考器

20:33.060 --> 20:35.060
那接下来就是百分比了

20:35.060 --> 20:37.060
参考器的百分比就是宽度

20:37.060 --> 20:38.060
它参考的是谁呢

20:38.060 --> 20:40.060
参考的是参考系的宽度

20:40.060 --> 20:41.060
百分之一百

20:41.060 --> 20:44.060
那宽度就是参考系的百分之百

20:44.060 --> 20:46.060
那如果说你是普通元素

20:47.060 --> 20:48.060
参考系就是什么

20:48.060 --> 20:49.060
普通元素的内容区

20:49.060 --> 20:50.060
内容区的百分之百

20:50.060 --> 20:52.060
那就是成满

20:52.060 --> 20:54.060
好 高度是参考系的高度

20:54.060 --> 20:56.060
只是高度这一块

20:56.060 --> 20:58.060
同学们要注意一下

20:58.060 --> 21:00.060
如果说参考系的高度

21:00.060 --> 21:01.060
受本身影响的话

21:01.060 --> 21:02.060
设置无效

21:02.060 --> 21:04.060
这说的是啥意思

21:04.060 --> 21:06.060
比方说

21:06.060 --> 21:08.060
我这个container

21:08.060 --> 21:10.060
我不设置高度

21:10.060 --> 21:12.060
我不设置高度

21:12.060 --> 21:14.060
然后item呢

21:14.060 --> 21:16.060
我也不设置高度

21:17.060 --> 21:19.060
我把高度设为百分之百

21:20.060 --> 21:22.060
你觉得这个能有效吗

21:22.060 --> 21:24.060
这个玩意儿

21:24.060 --> 21:26.060
能有效吗

21:26.060 --> 21:28.060
我把排你再一去

21:28.060 --> 21:32.080
你这个玩意儿能有效吗

21:32.080 --> 21:34.080
肯定没有效啊

21:34.080 --> 21:35.080
为什么呢

21:35.080 --> 21:36.080
那你看吧

21:36.080 --> 21:38.080
我这个百分之高度

21:38.080 --> 21:39.080
要做多少啊

21:39.080 --> 21:40.080
百分之百

21:40.080 --> 21:41.080
很多人就会这里犯错误

21:41.080 --> 21:43.080
我高度要百分之百

21:44.080 --> 21:45.080
相对于谁啊

21:45.080 --> 21:47.080
相对于服务元素的内容区

21:48.080 --> 21:49.080
对吧

21:49.080 --> 21:51.080
那服务元素的内容区是多少呢

21:51.080 --> 21:52.080
是零啊

21:52.080 --> 21:53.080
为什么是零

21:53.080 --> 21:56.080
因为服务元素是要被指元素撑开的

21:56.080 --> 21:57.080
对吧

21:57.080 --> 21:58.080
你指元素的高度

21:58.080 --> 22:00.080
又要来自于服务元素

22:00.080 --> 22:02.080
那这个玩意儿就玩不下去了

22:02.080 --> 22:03.080
这个事儿

22:03.080 --> 22:07.030
这个事儿是不是玩不下去了

22:07.030 --> 22:08.030
这就有点像啥呢

22:08.030 --> 22:09.030
就有点像

22:09.030 --> 22:11.030
咱们这几年疫情的

22:11.030 --> 22:12.030
比方说

22:12.030 --> 22:14.030
疫情刚刚爆发的时候

22:14.030 --> 22:16.030
你家里边没有准备口罩

22:16.030 --> 22:18.030
那你再出去买口罩啊

22:19.030 --> 22:20.030
你不戴口罩

22:20.030 --> 22:21.030
你是不能出门的

22:21.030 --> 22:23.030
但是我没有口罩

22:23.030 --> 22:25.030
我就是要出去买口罩啊

22:25.030 --> 22:26.030
是啊

22:26.030 --> 22:27.030
你戴着口罩

22:27.030 --> 22:28.030
才能出去买口罩啊

22:28.030 --> 22:29.030
所以这个事情

22:29.030 --> 22:30.030
玩不下去了对吧

22:30.030 --> 22:31.030
那就这么个意思

22:31.030 --> 22:33.030
你这个服务元素

22:33.030 --> 22:34.030
你这个服务元素说

22:34.030 --> 22:36.030
你又多高

22:36.030 --> 22:37.030
就可以把我撑开

22:37.030 --> 22:38.030
你又多高

22:38.030 --> 22:39.030
我就有多高

22:39.030 --> 22:40.030
那指元素说

22:40.030 --> 22:41.030
你又多高

22:41.030 --> 22:43.030
我就是你的高度的百分之五十

22:43.030 --> 22:44.030
百分之一百

22:44.030 --> 22:45.030
你又多高

22:45.030 --> 22:46.030
那这两个玩意儿

22:46.030 --> 22:47.030
一直在吵架

22:47.030 --> 22:48.030
说这种情况下

22:48.030 --> 22:49.030
你设置百分比

22:49.030 --> 22:50.030
是无效的

22:51.030 --> 22:52.030
懂的意思吧

22:52.030 --> 22:53.030
就这么个意思

22:54.030 --> 22:55.030
好

22:55.030 --> 22:56.030
就是

22:56.030 --> 22:57.030
里边再加一个元素

22:57.030 --> 22:59.030
然后再加一个item1

22:59.030 --> 23:00.030
那么这个item1

23:00.030 --> 23:02.030
设置高度也行不行呢

23:03.030 --> 23:04.030
我们来看一下

23:04.030 --> 23:05.030
给item1设置高度

23:05.030 --> 23:07.030
高度为

23:07.030 --> 23:09.030
比方说你100个像素

23:09.030 --> 23:10.030
然后给他一个背景

23:10.030 --> 23:12.030
背景为预设吧

23:13.030 --> 23:15.030
那这样子行不行呢

23:15.030 --> 23:16.030
你会发现

23:16.030 --> 23:17.030
item还是零

23:17.030 --> 23:18.030
为什么呢

23:18.030 --> 23:19.030
到底是一样的

23:19.030 --> 23:20.030
对吧

23:20.030 --> 23:22.030
那这个怎么弄的

23:22.030 --> 23:24.030
那个复元素说

23:24.030 --> 23:25.030
我的高度是你

23:25.030 --> 23:27.030
他加上他

23:27.030 --> 23:29.030
他的高度我能确定是100

23:29.030 --> 23:31.030
那他的高度是多少呢

23:31.030 --> 23:32.030
那就算他的高度了

23:32.030 --> 23:34.030
他的高度又来了

23:34.030 --> 23:35.030
你复元素有多高

23:35.030 --> 23:36.030
我又多高

23:36.030 --> 23:37.030
那复元素说

23:37.030 --> 23:38.030
我现在都不知道

23:38.030 --> 23:39.030
我又多高

23:39.030 --> 23:40.030
我要把你加上之后

23:40.030 --> 23:41.030
才能知道我又多高

23:41.030 --> 23:42.030
总之就是

23:42.030 --> 23:43.030
这个问题

23:43.030 --> 23:44.030
所以说

23:44.030 --> 23:45.030
我们高度百分比

23:45.030 --> 23:47.030
这一块一定要注意

23:47.030 --> 23:48.030
高度百分比

23:48.030 --> 23:49.030
我们往往是什么时候

23:49.030 --> 23:50.030
说是百分比

23:50.030 --> 23:51.030
是复元素的高度能确定

23:51.030 --> 23:52.030
就是有没有他

23:52.030 --> 23:53.030
他都能确定

23:53.030 --> 23:54.030
那么这个时候

23:54.030 --> 23:56.030
说是百分比有效

23:56.030 --> 23:58.030
那有他高度一个值

23:58.030 --> 23:59.030
没有他高度另外一个值

23:59.030 --> 24:00.030
复元素

24:00.030 --> 24:01.030
那肯定是

24:01.030 --> 24:02.030
这个百分比是确定不了的

24:02.030 --> 24:04.030
就这么个意思

24:04.030 --> 24:05.030
宽度百分比没问题

24:05.030 --> 24:08.030
高度百分比要注意一下

24:08.030 --> 24:09.030
然后剩下几个

24:09.030 --> 24:11.030
pending border margin

24:11.030 --> 24:12.030
这个玩意呢

24:12.030 --> 24:13.030
我们一般不太回去

24:13.030 --> 24:14.030
说是百分比

24:14.030 --> 24:15.030
但是大家有一个小的

24:15.030 --> 24:16.030
地方注意一下

24:16.030 --> 24:18.030
就像他们的百分比

24:18.030 --> 24:19.030
全部是相对于

24:19.030 --> 24:21.030
参考系的宽度

24:21.030 --> 24:23.030
全部是相对于宽度的

24:23.030 --> 24:24.030
我们一般不回去

24:24.030 --> 24:25.030
设置百分比

24:25.030 --> 24:27.030
但是设置的时候

24:27.030 --> 24:28.030
如果说有一天

24:28.030 --> 24:30.030
万一你十来年

24:30.030 --> 24:31.030
十来年的开发

24:31.030 --> 24:33.030
那总归有一天

24:33.030 --> 24:35.030
万一要设置他的百分比

24:35.030 --> 24:36.030
那这个时候

24:36.030 --> 24:37.030
你要注意

24:37.030 --> 24:39.030
它是相对的宽度

24:39.030 --> 24:40.030
那是什么意思呢

24:40.030 --> 24:42.030
就是比方说

24:42.030 --> 24:44.030
我这个item 1

24:44.030 --> 24:47.030
item 1我设置一个multi

24:47.030 --> 24:49.030
top

24:49.030 --> 24:52.030
或者是pending top

24:52.030 --> 24:53.030
我这个pending top

24:53.030 --> 24:55.030
比方设置百分之十

24:55.030 --> 24:59.430
那么它的pending是多少呢

24:59.430 --> 25:01.430
你看这里是62

25:01.430 --> 25:03.430
那怎么会是62呢

25:03.430 --> 25:04.430
你看复原数

25:04.430 --> 25:06.430
复原数的高度是多少

25:06.430 --> 25:08.430
复原数的高度是那个

25:08.430 --> 25:09.430
100对吧

25:09.430 --> 25:11.430
是不是高度为100

25:11.430 --> 25:12.430
那10%不应该是

25:13.430 --> 25:15.430
它为什么是62呢

25:15.430 --> 25:17.430
你去pending border margin

25:17.430 --> 25:19.430
不管你是设置哪个方向的

25:19.430 --> 25:20.430
横向的 中向的

25:20.430 --> 25:22.430
它全部是相对于宽度的

25:22.430 --> 25:23.430
复原是宽度的

25:23.430 --> 25:25.430
这是这一块小注意一下

25:25.430 --> 25:27.430
其实也没什么好注意的

25:27.430 --> 25:28.430
平时也不这么去写

25:28.430 --> 25:30.430
平时我用了最多的百分比就是宽高

25:30.430 --> 25:32.430
好 这是尺寸的百分比

25:32.430 --> 25:34.430
这一块没问题吧

25:34.430 --> 25:36.430
好 最后来一个

25:36.430 --> 25:37.430
最大最小宽度

25:37.430 --> 25:38.430
那这个玩意说什么呢

25:38.430 --> 25:40.430
就是说我们有这么四个

25:40.430 --> 25:41.430
四个世界的属性

25:41.430 --> 25:43.430
我们学过的宽高对吧

25:43.430 --> 25:45.430
位置和height

25:45.430 --> 25:47.430
其实还有两个对应的

25:47.430 --> 25:49.430
一个是最小的宽度

25:49.430 --> 25:51.430
一个是最大的宽度

25:51.430 --> 25:52.430
一个是最小的高度

25:52.430 --> 25:53.430
一个是最大的高度

25:53.430 --> 25:55.430
最小的单子叫min

25:55.430 --> 25:57.430
最大的单子叫max

25:57.430 --> 25:59.430
加上个max加上个min

25:59.430 --> 26:02.430
加上个max就完事了

26:02.430 --> 26:05.430
那么这个玩意有什么用呢

26:05.430 --> 26:07.430
就当一个原数的尺寸

26:07.430 --> 26:09.430
会自动变化的时候

26:09.430 --> 26:12.430
什么原数的尺寸会自动变化

26:12.430 --> 26:14.430
你设置百分比的尺寸

26:14.430 --> 26:16.430
或者是你没有设置宽度的时候

26:16.430 --> 26:18.430
它占满对吧 占满副原数

26:18.430 --> 26:20.430
那副原数变了它可以跟这边

26:20.430 --> 26:22.430
比方说我们看刚才那个

26:22.430 --> 26:25.740
第一个对吧

26:25.740 --> 26:28.740
第二个

26:28.740 --> 26:30.740
你看我屏幕变宽了

26:30.740 --> 26:32.740
那个副原数是不是也跟着变宽了

26:32.740 --> 26:33.740
这个原数是不是也跟着变宽了

26:33.740 --> 26:34.740
对吧 它宽度

26:34.740 --> 26:36.740
它会自动变化的时候

26:36.740 --> 26:37.740
还有什么时候呢

26:37.740 --> 26:39.740
还有就是图片的时候

26:39.740 --> 26:40.740
你写图片的时候

26:40.740 --> 26:42.740
比方说我们再来一个图片

26:46.740 --> 26:47.740
过来

26:47.740 --> 26:52.020
比方说我一个DIV

26:52.020 --> 26:54.020
扛天那里边有一张图片

26:54.020 --> 26:56.020
这个图片我具有那个BG吧

26:56.020 --> 26:58.020
BG

26:58.020 --> 26:59.020
那么设置这个图片的时候

26:59.020 --> 27:01.020
它的宽高是不是自动的

27:01.020 --> 27:04.020
它是去适应图片的宽高

27:04.020 --> 27:05.020
对吧

27:05.020 --> 27:07.020
你都不知道这个图片有多宽多高

27:07.020 --> 27:09.020
对吧 你保存的这个

27:10.020 --> 27:12.020
我明明先说

27:12.020 --> 27:13.020
是不是

27:13.020 --> 27:14.020
那么这个E美举

27:14.020 --> 27:16.020
它就适应这个图片宽高去了

27:16.020 --> 27:18.020
就像这种情况下

27:18.020 --> 27:21.020
它的尺寸会自动变化的时候

27:21.020 --> 27:23.020
那么我们去通过

27:23.020 --> 27:24.020
设置最大最小宽高

27:24.020 --> 27:26.020
可以让它的尺寸

27:26.020 --> 27:28.020
不至于变得过小或过大

27:28.020 --> 27:30.020
这一块对我们实际开发

27:30.020 --> 27:32.020
有两个作用

27:32.020 --> 27:33.020
第一个作用就是

27:33.020 --> 27:36.020
给整个网页加上一个最小宽度

27:36.020 --> 27:37.020
为什么呢

27:37.020 --> 27:39.020
因为我们的网页是根据设计稿

27:39.020 --> 27:41.020
设计稿是一个宽度的

27:41.020 --> 27:43.020
设计师在做设计稿

27:43.020 --> 27:44.020
做完设计稿之后

27:44.020 --> 27:46.020
他会设计稿是有一个宽度的

27:46.020 --> 27:48.020
比方说通常在PC端的网页的

27:48.020 --> 27:49.020
一般就是1200

27:49.020 --> 27:51.020
或者是1226

27:51.020 --> 27:53.020
它会有一个宽度

27:53.020 --> 27:56.020
那么我们不希望

27:56.020 --> 27:58.020
我们在浏览页面的时候

27:58.020 --> 27:59.020
因为浏览页面的时候

27:59.020 --> 28:01.020
用户会缩小这个框

28:01.020 --> 28:02.020
知道吧

28:02.020 --> 28:03.020
是不是会缩小这个

28:03.020 --> 28:05.020
有可能

28:05.020 --> 28:08.020
就是缩小这个就是浏览器的窗口

28:08.020 --> 28:10.020
但是如果说窗口说的太小

28:10.020 --> 28:12.020
它已经小于的设计稿了

28:12.020 --> 28:14.020
这个设计玩不了了

28:14.020 --> 28:16.020
更小的就是更小的屏幕

28:16.020 --> 28:17.020
需要单独的去设计

28:17.020 --> 28:18.020
比方就是移动暖了

28:18.020 --> 28:20.020
那是另外一套东西了

28:20.020 --> 28:21.020
我们现在所谓学的是

28:21.020 --> 28:23.020
PC端的网页

28:23.020 --> 28:25.020
因此它小于PC端的

28:25.020 --> 28:27.020
这个设计稿的尺寸的时候

28:27.020 --> 28:29.020
就玩不下去了

28:29.020 --> 28:32.020
所以说我们往往会做这么一件事

28:32.020 --> 28:34.020
给它设置一个最小宽度

28:34.020 --> 28:39.540
比方说我们看B站有没有这样的设置

28:39.540 --> 28:41.540
B站它没有设置到这儿

28:41.540 --> 28:42.540
它没有设置到这儿

28:42.540 --> 28:45.540
它可能设置到里边的DIV那边去了

28:45.540 --> 28:49.560
我看一下AT面

28:49.560 --> 28:50.560
B站没有设置

28:50.560 --> 28:56.070
我们看一下百度吧

28:56.070 --> 29:01.620
百度Body

29:01.620 --> 29:04.620
百度它也没有在这里设置

29:04.620 --> 29:06.620
它一定是在某一个地方设置的

29:06.620 --> 29:08.620
要么就是设置一个固定宽度

29:08.620 --> 29:12.620
要么就是设置了这个名位置

29:12.620 --> 29:15.620
它是设置到这儿的

29:15.620 --> 29:17.620
设置到给整个

29:17.620 --> 29:20.620
包括整个页面的DIV那边去设置

29:20.620 --> 29:21.620
一个名位置

29:21.620 --> 29:26.620
那么说明百度的设计稿宽度为1250个像素

29:26.620 --> 29:30.320
我们看一下王者荣耀

29:30.320 --> 29:33.320
它一定是有个地方设置的

29:33.320 --> 29:36.320
要找到那个

29:36.320 --> 29:38.320
你看它是给每一个具体的元素设置的

29:38.320 --> 29:40.320
这里是1300名位置

29:40.320 --> 29:42.320
其实我们这里最简单的办法

29:42.320 --> 29:44.320
就是找到整个页面AT面

29:44.320 --> 29:46.320
给它设置一个最小宽度100

29:46.320 --> 29:48.320
就是一个设计稿的宽度

29:48.320 --> 29:50.320
那么这样子好处是什么呢

29:50.320 --> 29:52.320
当我们的窗口小于这个宽度的时候

29:52.320 --> 29:53.320
你看啊

29:53.320 --> 29:56.320
我把这个拿过来点

29:56.320 --> 29:57.320
好 你看 注意看下边

29:57.320 --> 29:59.320
有没有出现滚动条

29:59.320 --> 30:01.320
你看是不是出现滚动条了

30:01.320 --> 30:03.320
因为这个页面不能再缩小了

30:03.320 --> 30:05.320
再缩小 这个元素就不知道怎么排列了

30:05.320 --> 30:08.320
因为设计稿 设计师没有说怎么排列了

30:08.320 --> 30:10.320
所以说它最小到了这个宽度过后

30:10.320 --> 30:12.320
就被呈开了

30:12.320 --> 30:14.320
看它就不动了

30:14.320 --> 30:16.320
这个意思 你看百度

30:16.320 --> 30:18.320
变小的时候是不是出现了滚动条

30:18.320 --> 30:20.320
这是PC端的网页

30:20.320 --> 30:22.320
最常见的做法

30:22.320 --> 30:24.320
这就是第一个对我们代码的影响

30:24.320 --> 30:26.320
也就是这一点了

30:26.320 --> 30:28.320
找到AT面或者是保底元素

30:28.320 --> 30:30.320
给它设置一个min位置

30:30.320 --> 30:32.320
最小宽度多少

30:32.320 --> 30:34.320
还有一个地方会用那个最小最大

30:34.320 --> 30:36.320
还有什么地方呢 比方图片

30:36.320 --> 30:38.320
比方说啊 我们这里

30:38.320 --> 30:40.320
有这么一个DIV 我给它一个container

30:40.320 --> 30:42.320
我这里呢去设置一个它的内央室

30:42.320 --> 30:44.320
不要让我们给它设置一个宽度

30:44.320 --> 30:46.320
为300个相处

30:46.320 --> 30:48.320
高度呢为300个相处

30:50.320 --> 30:52.320
给它一个包袋吧

30:52.320 --> 30:56.720
一个相处solid

30:58.720 --> 31:00.720
两个相处吧solid

31:00.720 --> 31:02.720
看到没 这个黑色的或者是加上一个颜色吧

31:02.720 --> 31:04.720
边框这一块不加颜色的话

31:04.720 --> 31:06.720
它就是文字颜色

31:06.720 --> 31:08.720
红色

31:08.720 --> 31:10.720
目前就这样子

31:10.720 --> 31:12.720
我可以过来再加上一个pending

31:12.720 --> 31:16.480
然后10个相处

31:16.480 --> 31:20.110
你可以看到这个图片

31:20.110 --> 31:22.110
明显是超过了这个区域了

31:22.110 --> 31:24.110
因为图片的宽高是自动的

31:24.110 --> 31:26.110
它适应图片内容的

31:26.110 --> 31:28.110
那怎么办呢 我们往往会做这么一件事

31:28.110 --> 31:30.110
找到这个图片

31:30.110 --> 31:32.110
然后给它设置一个

31:32.110 --> 31:34.110
最大的宽度

31:34.110 --> 31:36.110
你不能太夸张了

31:36.110 --> 31:38.110
高度这一块我可以自动吗

31:38.110 --> 31:40.110
宽度这一块你最大宽度呢

31:40.110 --> 31:42.110
就是100%

31:42.110 --> 31:45.490
你不能超过这个元素

31:45.490 --> 31:47.490
就是你可能那个图片很小

31:47.490 --> 31:49.490
可能那个图片很小的话就没问题

31:49.490 --> 31:51.490
比方说我们就随便找个图片吧

31:51.490 --> 31:53.490
那个二十几

31:53.490 --> 31:56.800
有没有小一点的图片

31:56.800 --> 32:04.910
我看一下

32:04.910 --> 32:06.910
就这个吧 这个图片比较

32:06.910 --> 32:08.910
看上去比较窄一点

32:08.910 --> 32:14.270
八十七

32:14.270 --> 32:16.270
那我们这里比方说换一张图片

32:16.270 --> 32:18.270
八十七

32:20.270 --> 32:22.270
那我们把宽度换成500吧

32:22.270 --> 32:24.270
哇 这个图片有这么大吗

32:24.270 --> 32:26.270
这个图片有这么大

32:26.270 --> 32:28.270
我把它放小一点

32:28.270 --> 32:30.270
我把它放小一点

32:39.710 --> 32:41.710
打不开呢

32:41.710 --> 32:43.710
打开方式

32:43.710 --> 32:45.710
我就说吧 我就说吧

32:45.710 --> 32:47.710
我这里要找一张小图

32:47.710 --> 32:52.620
找一张小图

32:52.620 --> 32:54.620
全部尺寸

32:54.620 --> 32:56.620
好 这个图片

32:56.620 --> 33:00.190
我们随便找到小图

33:00.190 --> 33:05.420
OK 那我现在看

33:05.420 --> 33:07.420
这个图片目前的宽度

33:07.420 --> 33:09.420
只有这么宽

33:09.420 --> 33:11.420
为什么呢

33:11.420 --> 33:13.420
因为它现在我这里只是约定了

33:13.420 --> 33:15.420
它最大宽度是百分之百

33:15.420 --> 33:17.420
最小有没有约定

33:17.420 --> 33:19.420
没有约定 那它自己有多少就多少

33:19.420 --> 33:21.420
就小可以 没问题

33:21.420 --> 33:23.420
大你不能超出这个区域

33:23.420 --> 33:25.420
这就是这一块的

33:25.420 --> 33:27.420
常见应用

33:27.420 --> 33:29.420
无论是小还是大 我都要扎满怎么办

33:29.420 --> 33:36.190
不就完了吗

33:36.190 --> 33:38.190
对吧

33:38.190 --> 33:42.660
不就完了吗

33:42.660 --> 33:44.660
它无论是大还是小都是扎满

33:44.660 --> 33:46.660
就这一块

33:46.660 --> 33:48.660
好了 那就没了

33:48.660 --> 33:50.660
本节课要补充的就这么试个点

33:50.660 --> 33:52.660
每个点还是很简单的

33:52.660 --> 33:54.660
射到代码也不多

33:54.660 --> 33:56.660
一个人就是

33:56.660 --> 33:58.660
这个玩意儿就直接写它就完事了

33:58.660 --> 34:00.660
然后是alpha通道

34:00.660 --> 34:02.660
我们需要半透明的时候

34:02.660 --> 34:04.660
就写就完事了

34:04.660 --> 34:06.660
还有一个尺寸的百分比

34:06.660 --> 34:08.660
有的时候它的宽高尺寸不是固定的

34:08.660 --> 34:10.660
是用它

34:10.660 --> 34:12.660
然后就是最小宽高

34:12.660 --> 34:14.660
那么最大的宽高

34:14.660 --> 34:16.660
那这一块一般应用就是这两个地方

34:16.660 --> 34:18.660
一个是给页面设置

34:18.660 --> 34:20.660
一个是给图片设置

34:20.660 --> 34:22.660
就没了

34:22.660 --> 34:24.660
把这一块的姿势总结一下

34:24.660 --> 34:26.660
然后就会顺利进入后边的学习了

