WEBVTT

00:00.000 --> 00:06.560
OK 这些课的话 咱们来看一下 就在使用批量的时候 它的一些最佳实践

00:07.200 --> 00:12.080
然后我们在对之前讲的一些东西 咱们做一个补充 增加一些补充内容

00:12.640 --> 00:20.760
好吧 这边的话有道面是提 他问你在目前的这个view应用中使用状态管理库进行这个状态管理室

00:21.080 --> 00:28.760
有哪些这个最佳实践 让你列举一到那么两条 ok 他这边的话问的是 就是使用状态管理

00:29.000 --> 00:34.360
这个管理库的时候 啊 使用状态管理库的话 我们知道最早的话用的是views

00:34.920 --> 00:38.440
啊 那现在的话 已经官方已经过渡到什么 已经过渡到这个批量了

00:39.120 --> 00:46.360
对不对啊 说这边的话 最佳实践的话 实际上其中有一条就是选择使用这个批量来进行这个状态管理

00:46.800 --> 00:51.840
OK 来 咱们这边一点一点 把它裸裂出来吧 咱们这几颗的话会分成两个

00:52.520 --> 00:54.720
两个部分 首先第一个是最佳实践

00:55.720 --> 00:58.320
第二个是什么 第二个是补充内容

01:00.040 --> 01:05.520
我们一个一个来看 首先的话 这个最佳实践 最佳实践的话 我这边裸裂了这么几条

01:06.880 --> 01:12.280
这边我把拿过来 ok 大致的话有这么一些 首先第一个

01:12.720 --> 01:20.080
分离这个状态逻辑和业务逻辑 实际上这个就是我们使用这个状态管理库的这个目的

01:20.800 --> 01:22.920
对不对啊 实际上

01:23.800 --> 01:29.400
这个就是我们使用这个状态管理库的这个目的

01:30.080 --> 01:35.960
啊 我们使用这种状态管理库的话 就是要把什么 是不是要把主件的这个状态分离出来

01:36.720 --> 01:40.800
对不对 我们使用状态管理库

01:41.600 --> 01:46.320
就是为了将什么呢 将主件的状态

01:47.040 --> 01:47.760
分离出来

01:48.720 --> 01:58.000
啊 然后这样可以方便我们什么 是不是方便我们维护对不对 也方便什么 也方便主件

01:58.880 --> 02:02.960
之间进行状态的共享

02:03.920 --> 02:08.320
对吧 你如果这个使用 就是你如果没有使用这个状态管理库

02:09.280 --> 02:10.320
没有使用

02:11.120 --> 02:12.480
状态管理库

02:13.280 --> 02:20.640
你如果是小型的项目的话还好 如果大型的项目的话 你这个主件一多 那主件和主件之间进行这个

02:21.280 --> 02:26.400
这个状态共享的时候 他是不是就是会涉及到一层一层的进行这个传递

02:27.280 --> 02:33.120
对不对啊 这个图 然后这边放上图过来啊 这张图的话 实际上之前的话 是给大家看过的

02:33.600 --> 02:40.960
啊 如果之前有同学听过我的这个react的课程啊 这张图是给大家看过的 啊 但如果你没有听过我的react课程的话

02:41.440 --> 02:46.480
啊 那这张图你是第一次看啊 这个图的话 你看这边 这个的话是我们一个组件数

02:47.200 --> 02:52.560
那组件数的话 这边会涉及到什么呢 啊 这边一个一个的这个员 他就是一个一个的这个组件

02:53.200 --> 02:59.920
那这边的话 你组件和组件之间在进行这个状态共享的时候 他就会涉及到什么呢 就会涉及到这个层层传递

03:00.560 --> 03:05.120
对不对 比如说我这边呢 这个组件上面有个状态 然后接下来我要就他

03:06.080 --> 03:11.360
他要共享啊 他要使用到你这个组件上面的状态 那你就得干嘛呢 你得一层一层的传过来

03:11.920 --> 03:15.360
对不对 通过了一个props 一层一层传过来 而比如说他

03:16.000 --> 03:18.640
他的这个状态 然后和他要进行共享

03:19.200 --> 03:25.440
那你咋办啊 你这边得一层一层的 对不对 传 传 传 传到上面 然后加在一层一层的传下来

03:26.000 --> 03:30.240
啊 那这个的话 你组件不多啊 如果就只有两三层的话 其实还好

03:30.720 --> 03:35.360
那你组件的这个签到成数一旦多了的话 那这个呢就其实就非常复杂了

03:35.920 --> 03:42.800
对不对 非常不方便啊 那么使用 使用这个状态管理库之后

03:43.600 --> 03:47.760
啊 那我们的这个图他就变成什么样子呢 他就变成这个样子

03:50.160 --> 03:54.240
ok 你看这边呢 是不是就单就是专门有一个这个仓库

03:55.120 --> 04:00.320
啊 专门有个仓库来管理所有组件的这个状态啊 那接下来我所有的组件只需要什么

04:00.480 --> 04:04.320
是不是只需要从这个仓库去获取这个最新的这个状态

04:04.880 --> 04:10.960
而比如说我这边这边有这个组件 他把这个状态更新了 然后接下来干嘛 是不是提交给这个仓库

04:11.360 --> 04:17.760
对了 仓库里面进行更新就可以了啊 这个就是你使用这个状态管理库啊 他的一个好处

04:18.400 --> 04:25.120
ok 但是有一点你要注意啊 不是说所有的这个应用都需要使用这个状态管理库

04:25.600 --> 04:31.280
这个的话取决于你就是你这个开发应用就开发的这个应用他的一个规模的这个大小

04:31.920 --> 04:37.600
啊 你如果只是这个小规模的这个应用的话 你使用这个状态管理库其实反而更麻烦一些

04:38.080 --> 04:42.960
ok 这个要注意啊 但是需要注意一点

04:43.920 --> 04:47.200
并非所有的这个view

04:48.320 --> 04:50.320
应用都需要

04:51.120 --> 04:55.040
这个都需要使用状态管理库

04:55.680 --> 05:05.360
ok 这个取决于什么呢 取决于我们所开发的应用的规模大小

05:06.480 --> 05:09.360
啊 如果只是这个小规模

05:10.640 --> 05:13.280
如果只是小规模的这个view

05:14.320 --> 05:17.200
应用啊 使用这个状态管理库

05:17.920 --> 05:21.600
状态管理库反而显得更麻烦

05:25.620 --> 05:30.580
ok 这就看你这个你这个应用的规模大小啊 如果你就是一个小型的应用

05:30.820 --> 05:35.860
一共也就那么几个组件对吧 四五个组件啊 那你这个的话其实就没有必要使用状态管理库

05:36.340 --> 05:42.260
啊 你就普通的这种就是状态传递的话反而更方便一些啊 就一切这个技术是灵活的

05:42.420 --> 05:46.260
大家记住一点啊 技术是灵活的啊 不是说一定要使用

05:46.740 --> 05:49.700
哪个东西一定不使用那个东西 不是这样子的

05:50.420 --> 05:52.660
知道吧啊 技术是很灵活的

05:52.900 --> 05:59.140
ok 啊 这是首先第一点啊 这个就是这个其实解释就是为什么要使用状态管理库 对吧

05:59.780 --> 06:04.660
好 那第二点 第二点的话就是我们刚所说的 就是选择什么呢 选择这个平仰

06:05.460 --> 06:12.340
来进行这个状态管理啊 那这个平仰的话它是什么呢 它你可以把它理解为这个views的这个

06:13.060 --> 06:16.580
啊 继承 什么继承啊 就是下一代views

06:17.300 --> 06:22.980
对不对啊 继承者 我刚才只想说继承者啊 你可以把理解成是下一代的这个views

06:23.380 --> 06:29.460
对吧 现在官方的话已经就是开始推荐你使用这个平仰来管理这个views了 那个就是

06:30.020 --> 06:34.900
啊 就是来代替这个views了 来管理这个view应用中组件的这个状态

06:36.580 --> 06:38.500
目前这个view

06:39.380 --> 06:44.260
官方已经推荐什么呢 推荐开发者

06:45.380 --> 06:51.060
开发者使用平仰来替代这个views

06:51.940 --> 06:59.470
作为这个状态管理库 对吧啊 你可以将这个平仰

07:00.670 --> 07:03.950
看作是什么呢 看作是这个views

07:05.550 --> 07:09.630
5点差 对吧 这个时间我们在之前的话是讲过的

07:10.190 --> 07:18.190
那这边的话就是平仰的话 你代替这个views 那平仰的话 这边自然而然就会涉及到一个平仰的话 他相比这个views

07:18.430 --> 07:22.270
他有哪些这个优点啊 实际上我觉得有个最大的一点就是他小

07:23.070 --> 07:24.190
对不对啊 相比

07:25.230 --> 07:26.430
相比这个views

07:27.070 --> 07:31.790
平仰真的 真的啊 真的很轻量

07:34.060 --> 07:34.540
轻量

07:35.820 --> 07:36.780
对吧 大小

07:37.740 --> 07:39.660
只有什么呢 只有一kb左右

07:40.540 --> 07:43.340
一kb左右啊 基本上可以忽略

07:44.540 --> 07:46.700
基本上可以忽略

07:47.420 --> 07:52.460
对不对 你一kb基本上可以忽略这个大小啊 但他这边的话他还有一些这个

07:53.020 --> 07:55.020
其他的一些这个优点啊

07:56.060 --> 08:00.060
当然相比之前的这个views

08:00.620 --> 08:07.500
还有一些其他的这个优点啊 那这些优点的话 我们在之前的课程中 我们实际上已经介绍过了

08:07.980 --> 08:10.220
实际上应该是在第一节课就介绍过

08:10.860 --> 08:15.260
对不对啊 比如他这边没有motation啊 把那个荣誉的motation给他去除了

08:15.660 --> 08:21.900
同步一步的话 都在action室里面啊 还有一些其他的啊 你这边那具体的话 你可以参与这个官网啊

08:23.100 --> 08:24.140
这官网在

08:25.100 --> 08:33.070
看一下 这边拼啊 我这边是卡住了吗 稍等啊 我这边网络

08:34.430 --> 08:38.830
好像卡住了 稍等 稍等 哎呀 还真的是卡住了

08:40.270 --> 08:42.110
哎呦 这这这网络咋回事

08:43.550 --> 08:46.910
啊 我直接把这个链接 这边有个链接 我直接把他拿过来

08:47.950 --> 08:49.230
这个是官网的链接

08:50.590 --> 08:52.190
啊 直接把这个我把他拿过来

08:52.910 --> 08:57.150
ok 我看我这边能不能打开吗 不知道为什么突然就打开 哎 又打开了

08:57.790 --> 08:58.350
啊 在这里

08:59.230 --> 09:04.030
这边呢 是对比这个vix 啊 这边他官方自己罗列了 看了没有

09:04.590 --> 09:09.390
对比这个vix 3.x 4.x 3.x 他是适配这个v2的

09:09.790 --> 09:14.430
4.x 他是适配这个v3的 这个其实也是经常同学们遇到了一个问题

09:15.390 --> 09:21.790
啊 这样同学们的话 然后这个装装的是这个vix 4.x 但是他应用了又是这个v2

09:22.350 --> 09:24.110
啊 然后加这个版本就爆错了

09:24.670 --> 09:29.230
你一定要注意啊 就是你这边在装 就是装依赖的时候一定要注意这个版本问题

09:29.790 --> 09:33.710
啊 这个你如果是装的vix 3.x 他是只适配这个v2

09:34.270 --> 09:39.470
4.x 他是适配这个v3 啊 但现在的话你就最好就用平仰 平仰的话他

09:39.950 --> 09:45.310
既就是可以适配这个v2 也可以适配这个v3 你看这个是不是也是他的一个优点

09:46.190 --> 09:49.550
对不对 我管你是v2还是v3 我都可以使用平仰

09:50.430 --> 09:56.510
对不对啊 他这边还有一些这个其他的这些优点啊 你这边的话可以看一下啊 另外就是如果

09:57.950 --> 09:58.270
另外

09:59.550 --> 10:02.190
如果你之前的项目

10:03.470 --> 10:06.270
使用的是vix

10:07.070 --> 10:12.590
那么你可以看一下什么呢 看一下这个官方的这个迁移指南

10:15.010 --> 10:18.210
迁移

10:19.170 --> 10:20.450
迁移指南

10:21.410 --> 10:29.250
ok 那官方的话是提供了一个这个迁移指南的在这里啊 你如果现在的话你要转化成这个平仰 这边他是有一个这个迁移指南的

10:30.690 --> 10:35.650
可不可以啊 他一步一步的教你如何进行一个迁移啊 这个我就不花时间讲了

10:36.210 --> 10:42.930
好吧啊 你这个能力应该是有的 对吧 人家这一步一步给你写清楚了的啊 从目录 从这个目录结构开始教你

10:43.490 --> 10:46.690
对不对啊 我把这个链接放到这个笔记里面

10:48.370 --> 10:54.370
ok啊 这是关于这个第二点啊 选择这个平仰来进行这个状态管理

10:55.090 --> 10:56.370
好 接下来第三点

10:58.050 --> 11:03.570
第三点的话 实际上在之前的话 我也提过啊 当时我们在写的时候我们也提过

11:03.970 --> 11:06.530
就是我们这个平仰你在使用的时候 你会发现

11:06.850 --> 11:12.770
你从这个仓库里面 你直接把这个数据你把它解构出来 然后你会发现你是可以直接操作他的

11:13.490 --> 11:17.650
对不对啊 你比如说解构一个比如假设啊 假设比如说有一个这个

11:18.930 --> 11:19.250
number

11:20.210 --> 11:22.210
对吧 有个技术器或者叫做 counter

11:22.690 --> 11:27.330
好 让你从十多里面结构出来 那你可以在主线里面直接加加减减 这不都可以

11:27.810 --> 11:34.050
对不对啊 但是这边的话会有一个这个最佳实践就是什么呢 那你避免直接操作十多的这个

11:34.530 --> 11:38.530
状态啊 就虽然我们可以

11:39.650 --> 11:46.450
直接操作十多的状态啊 但是在平仰中

11:47.170 --> 11:49.170
啊 在平仰中

11:50.210 --> 11:58.690
在平仰中 我们最好还是什么呢 还是避免直接操作十多

12:00.290 --> 12:02.770
啊 十多里面的这个状态

12:03.410 --> 12:08.530
而是通过什么呢 通过对应的这个getter

12:09.570 --> 12:10.290
getters

12:10.930 --> 12:11.570
来读取

12:12.290 --> 12:15.170
来读取 然后这个action是

12:15.890 --> 12:17.730
action是来修改

12:18.770 --> 12:24.210
对吧啊 这样子的话其实更加方便你的维护 因为你所有的这个数据更改都来于什么

12:24.290 --> 12:30.850
所以都来于你的这个action里面 对不对啊 比如说你之前啊 假设啊 你之前有这么一个代码

12:32.690 --> 12:34.050
不要这边有个bar turn

12:35.010 --> 12:36.450
啊 这个是我们之前写过的啊

12:37.650 --> 12:40.130
这边有个按钮对吧 然后接下来这边

12:42.160 --> 12:45.600
这边 这边拿过来 这个其实就我们之前写的代码

12:47.200 --> 12:49.840
你看 你之前的话 这边是不是就是直接这边

12:50.480 --> 12:57.040
number加加 对不对 或者这边的话 这个这个是我们之前写的那个代办事项啊 这个这个是我们之前写的那个

12:57.760 --> 12:59.280
写的那个那个技术器

13:01.460 --> 13:05.300
技术器啊 就在这里啊 项目都还起着的 在这里

13:05.700 --> 13:10.020
就我们之前写的技术器啊 我们之前写的技术器 我们这边是不可以直接这样子number加加

13:10.740 --> 13:12.420
对不对啊 这是技术器

13:14.980 --> 13:18.500
呃 这个注射 html的注射应该是这样子的 是吧

13:19.220 --> 13:22.820
ok 啊 这是技术器啊 这个是那个就是代办事项

13:25.120 --> 13:26.640
代办事项

13:28.080 --> 13:31.760
ok 代办事项的话 你看我们这边 我们这边是不是也是在直接针对这个 你看这边

13:32.160 --> 13:34.640
这个new item 我看不是啊 是这个 是这个

13:35.040 --> 13:38.720
你看这边这个list.value.items啊 直接铺起

13:38.960 --> 13:41.440
你看这边是不是也是在针对这个数据 直接进行操作

13:42.240 --> 13:45.520
对不对 这边也是在直接操作

13:46.240 --> 13:48.000
store的这个状态

13:48.800 --> 13:53.280
对不对啊 那你应该避免这样子的形式啊 与其对应的

13:54.480 --> 13:56.800
与其对应的应该

13:58.720 --> 14:04.000
使用什么呢 使用getters和什么呢 和action set

14:04.800 --> 14:06.080
等这个api

14:06.880 --> 14:13.040
来这个处理啊 处理这个状态的这个读取和修改

14:13.760 --> 14:17.520
对吧 那也就是说上面的代码的话 你这边的时间应该是改成这个样子

14:18.640 --> 14:25.870
就这边 这边的话应该是改成这样子 你看这边呢 是不是很明显就是对应的这个action

14:26.510 --> 14:31.550
对不对啊 包括就是我们的那个代办事项啊 代办事项的话 这边也是

14:33.470 --> 14:38.830
这里的话应该是这样子 你看这边 这边的话这个end item这个很明显就是什么 是不是从这个

14:39.390 --> 14:44.910
就是action里面对应的方法 对不对啊 这样子的话可以让你的这个整个代码

14:45.230 --> 14:47.790
就是更利于维护啊

14:48.750 --> 14:49.950
这样做的好处

14:51.390 --> 14:55.550
这样做的好处在于就是提高了

14:56.510 --> 14:58.830
代码的这个可维护性

15:00.510 --> 15:02.510
啊 因为数据的改变

15:03.230 --> 15:05.230
数据的改变

15:06.350 --> 15:11.630
始终是什么 是不是始终来自于action的方法

15:12.990 --> 15:14.750
对不对 而不是

15:15.310 --> 15:16.350
分散于

15:17.150 --> 15:18.990
组建的各个部分

15:21.600 --> 15:24.960
对不对 你看之前 之前的话你有可能是在这个template里面

15:25.440 --> 15:30.160
对啊 可能做了这个数据的这个修改 也可能是在这个jess里面做了数据的修改

15:30.320 --> 15:31.200
它是散的

15:32.000 --> 15:38.160
对 它是散的 但现在的话 你的数据的修改是不是始终来源于什么 是不是始终来源于这个action是方法

15:38.880 --> 15:41.680
对不对啊 提高了你代码的可维护性

15:43.040 --> 15:44.000
啊 这是这一条

15:44.640 --> 15:49.040
而下一条 下一条的话使用这个type script这个就不用多说了

15:49.600 --> 15:54.400
啊 这个就不用多说了啊 你这个拼码的话本身它就是使用ts来编写的

15:54.880 --> 16:01.520
啊 所说你在这个使用拼码的时候你是可以非常方便的非常自然的融入这个ts的

16:03.040 --> 16:08.080
拼码本身就是使用这个type script

16:09.680 --> 16:12.880
这个编写的啊 因此我们在

16:13.440 --> 16:17.760
使用拼码的时候啊 能够非常

16:18.480 --> 16:19.200
方便的

16:20.160 --> 16:22.480
然后非常自然的

16:24.000 --> 16:26.480
自然的使用这个type script

16:29.060 --> 16:32.740
ok 那使用这个type script的好处这个就不用我再多说了

16:32.740 --> 16:38.100
你type script可以提供什么 是不是可以提供更好的这个类型检查和这个代码提示

16:38.820 --> 16:41.620
对不对啊 使用type script

16:42.580 --> 16:45.620
可以更好的提供

16:46.420 --> 16:47.780
类型检查

16:48.980 --> 16:55.220
和这个代码提示啊 然后让我们的这个代码更加

16:55.940 --> 16:56.740
这个可靠

16:58.260 --> 16:59.780
和意语维护

17:02.240 --> 17:03.440
意语维护

17:03.440 --> 17:04.240
ok

17:04.240 --> 17:08.480
那有了同学会说了 那这边的话既然这个使用type script更好

17:08.800 --> 17:11.440
那为什么我们这边讲拼码的时候 我们这边没有

17:12.160 --> 17:13.280
讲这个ts呢

17:13.680 --> 17:17.360
因为这个ts呢 实际上这个不属于拼码的姿势

17:18.080 --> 17:19.360
你要理解清楚这一点

17:20.000 --> 17:24.240
对不对 你如果你会用这个ts的话 那你自然而然在拼码

17:24.480 --> 17:29.280
就是你在写这个拼码的时候 你自然而然你就可以使用这个ts的语法来写

17:29.840 --> 17:31.440
它不属于拼码的姿势

17:31.840 --> 17:35.040
这个你要理清楚这个姿势的这个边界

17:35.520 --> 17:36.160
喵喵

17:36.640 --> 17:39.200
啊啊 你这边的话实际上你这里这个

17:39.920 --> 17:42.800
啊你这边他这边看你这边看得到 我看是在哪里

17:43.520 --> 17:44.720
这边type script

17:45.600 --> 17:51.120
对不对啊 你这边只要只要你就是会用这个ts的话 那这些语法你是自然而然看得懂的

17:51.840 --> 17:54.160
对不对 这个实际上是属于ts的姿势了

17:54.400 --> 17:56.400
它不是说是属于这个拼码的姿势

17:56.720 --> 17:58.160
然后把这个链接放到这里吧

17:59.120 --> 18:00.560
把这个链接放到文档里面

18:02.660 --> 18:04.340
啊然后官方

18:05.540 --> 18:06.980
文档对应

18:09.010 --> 18:09.810
对应部分

18:11.170 --> 18:11.650
对应

18:12.530 --> 18:13.010
啊这边

18:13.810 --> 18:16.770
这边就给个链接啊 这边你可以自己去看一下

18:17.010 --> 18:18.210
OK使用ts

18:18.930 --> 18:19.570
啊下一个

18:20.130 --> 18:24.290
下一个的话就是将这个状态划分为多个这个仓库

18:25.490 --> 18:28.050
那么如果在一个大型应用中啊

18:28.290 --> 18:31.650
你如果将所有的这个组件的状态你放在一起的话

18:32.130 --> 18:35.490
实际上你的那个状态仓库虽然你也是使用了状态仓库

18:36.370 --> 18:38.530
对吧 不是说你没使用 你也使用了

18:38.850 --> 18:42.450
但是你的那个状态仓库是不是就是会显得比较庸重

18:43.410 --> 18:47.890
对不对啊 在一个大型应用中

18:48.770 --> 18:58.930
如果啊将所有组件的状态放置在一个这个状态

18:59.650 --> 19:00.290
仓库中

19:01.090 --> 19:03.170
那么会显得

19:04.450 --> 19:05.410
该状态

19:06.210 --> 19:07.730
仓库非常的

19:08.610 --> 19:09.490
这个勇种

19:10.530 --> 19:13.810
啊因此一般在这个大型

19:14.610 --> 19:15.170
项目中

19:16.530 --> 19:17.490
是一定

19:18.290 --> 19:21.090
会将什么呢 会将这个状态

19:21.730 --> 19:23.890
仓库进行这个拆分的

19:24.610 --> 19:25.970
哎 这个是一定的啊

19:26.370 --> 19:28.690
那么在早期这个viux的时候

19:29.010 --> 19:30.210
它就已经支持了

19:30.450 --> 19:34.530
对不对 你可以按照这个不同的这个功能模块进行划分

19:35.090 --> 19:36.610
啊 在早期

19:37.890 --> 19:40.690
在早期的这个viux中

19:41.970 --> 19:45.330
viux中就已经支持

19:46.210 --> 19:48.770
这个将状态仓库

19:49.810 --> 19:55.490
状态仓库按照什么呢 按照这个不同的这个功能模块

19:56.210 --> 19:58.770
模块进行拆分

19:59.650 --> 20:00.530
啊只不过

20:01.650 --> 20:03.890
在这个viux时期

20:04.850 --> 20:06.370
这个状态仓库

20:07.810 --> 20:09.650
仓库状态

20:10.530 --> 20:12.290
仓库拆分时

20:14.050 --> 20:16.930
拆分时按照的是什么

20:17.810 --> 20:19.810
按照的是这个这个这个嵌套

20:21.090 --> 20:22.130
嵌套的方式

20:25.200 --> 20:25.840
嵌套

20:27.520 --> 20:29.120
嵌套的方式

20:30.080 --> 20:32.320
进行代码组织的

20:34.540 --> 20:35.980
代码组织的

20:36.620 --> 20:37.260
对不对

20:37.260 --> 20:39.260
啊 然后在这个拼样里面

20:39.580 --> 20:41.180
它的话就不再是像那样

20:41.180 --> 20:43.980
就是不再像viux那样是进行这个嵌套了

20:45.260 --> 20:46.380
啊 我们这边换一下吧

20:48.700 --> 20:50.220
啊 在拼样中

20:51.420 --> 20:52.860
拼样中

20:54.700 --> 20:55.180
组织

20:57.100 --> 20:59.260
组织这个状态

20:59.980 --> 21:02.300
仓库的这种形式

21:03.340 --> 21:03.820
不再

21:04.940 --> 21:07.980
不再采用像这个viux

21:08.780 --> 21:10.220
一样的这种嵌套

21:11.180 --> 21:12.220
而是什么呢

21:12.220 --> 21:16.140
而是采用的是这个扁平式的设计

21:18.880 --> 21:20.880
扁平化的这个设计

21:22.640 --> 21:23.280
对吧

21:23.280 --> 21:24.000
啊 每一个

21:24.880 --> 21:26.000
每一个状态

21:26.720 --> 21:28.800
仓库都是独立的

21:30.160 --> 21:30.640
对不对

21:30.720 --> 21:32.880
这个其实也是它这个名字的来源

21:33.680 --> 21:37.040
这个其实也是拼样

21:38.240 --> 21:40.000
这个名字的来源

21:42.320 --> 21:42.720
对不对

21:42.720 --> 21:43.840
它拼样它名字

21:43.840 --> 21:45.040
它那个西班牙语吗

21:45.040 --> 21:46.080
它叫波罗吗

21:46.080 --> 21:47.920
波罗上面是不是就是一块一块的

21:47.920 --> 21:48.400
对不对

21:48.400 --> 21:50.000
每一个它是这个独立的

21:50.000 --> 21:51.280
啊 相互不影响的

21:51.840 --> 21:52.240
对不对

21:53.200 --> 21:54.240
这边这个拼样

21:54.240 --> 21:55.680
拼样它相比这个viux

21:56.160 --> 21:57.200
它在组织这个

21:58.080 --> 21:58.960
这个仓库

21:59.440 --> 22:01.360
仓库的这种形式上面

22:01.360 --> 22:02.400
其实更好一些

22:02.400 --> 22:02.640
对吧

22:02.640 --> 22:04.320
它不存在那个像viux

22:04.320 --> 22:05.760
viux里面它采用的是什么

22:05.760 --> 22:07.280
就采用的是那个模仿式

22:08.000 --> 22:08.480
对不对

22:08.480 --> 22:10.560
它存在一个那种嵌套的那种关系

22:11.040 --> 22:11.360
OK

22:12.480 --> 22:15.600
这是将这个状态化分成多个模块

22:16.160 --> 22:17.600
大致的话就是这么一些

22:18.480 --> 22:19.040
对吧

22:19.040 --> 22:20.000
大致就是这么一些

22:20.400 --> 22:21.360
这是关于这个

22:21.360 --> 22:22.160
其实主要是这一条

22:22.560 --> 22:22.880
对吧

22:22.880 --> 22:25.280
避免直接操作这个store状态

22:25.680 --> 22:25.920
OK

22:27.600 --> 22:28.000
好

22:28.080 --> 22:29.120
然后接下来的话

22:29.120 --> 22:30.880
我们来看一下这个补充内容

22:31.760 --> 22:32.560
补充内容的话

22:32.560 --> 22:33.840
补充一点就是之前

22:33.840 --> 22:35.520
我们在讲这个拼样的时候

22:35.760 --> 22:37.200
我们遗漏的一些这个知识

22:37.760 --> 22:38.400
因为当时的话

22:38.400 --> 22:39.360
我们是以什么

22:39.360 --> 22:40.960
我们是以这个功能为主

22:41.840 --> 22:42.320
对不对

22:42.320 --> 22:43.840
我们当时的话做了一个这个

22:44.880 --> 22:46.240
做了一个技术器

22:46.240 --> 22:47.600
做了一个代办事项

22:48.080 --> 22:49.520
咱们这个技术器的话

22:49.520 --> 22:51.200
采用的是这个option store

22:51.680 --> 22:53.600
这个代办事项的话采用的是这个

22:54.640 --> 22:55.520
这个什么

22:55.520 --> 22:56.720
就是那个setup store

22:57.120 --> 22:57.600
对不对

22:57.680 --> 22:59.200
我们以这个也是功能为主

22:59.200 --> 23:00.640
遗漏了部分知识

23:00.640 --> 23:02.320
我们这边把它补充上

23:02.320 --> 23:03.360
要补充这么几个

23:04.720 --> 23:06.560
首先第一个是关于辅助函数

23:07.600 --> 23:07.920
OK

23:08.320 --> 23:09.440
在这个拼量里面的话

23:09.440 --> 23:11.360
它也提供了一些辅助函数

23:12.160 --> 23:13.760
这边你在我看在哪里

23:13.760 --> 23:14.400
你可以看到

23:15.360 --> 23:17.120
辅助函数这里

23:18.080 --> 23:19.760
它也提供了比如map state

23:20.720 --> 23:21.520
map action

23:22.080 --> 23:23.360
把这些我们把它看一下

23:24.000 --> 23:24.640
第二就是什么呢

23:24.640 --> 23:25.600
第二个就是订阅

23:26.560 --> 23:28.400
订阅这个state

23:29.120 --> 23:31.280
以及这个action

23:33.280 --> 23:34.320
就是你在这个

23:34.880 --> 23:35.600
拼量里面

23:35.600 --> 23:37.760
你是可以订阅这个state的变化

23:37.760 --> 23:38.800
它和那个views

23:38.800 --> 23:40.720
那个subscript有点类似

23:42.080 --> 23:42.640
有点类似

23:43.120 --> 23:44.240
subscript是不是也是订阅

23:44.720 --> 23:45.200
对不对

23:45.200 --> 23:46.080
差不多就是那个意思

23:47.120 --> 23:47.440
好

23:47.440 --> 23:48.240
然后还有个什么呢

23:48.240 --> 23:49.600
还有个是插件选项

23:51.680 --> 23:52.800
插件选项

23:53.600 --> 23:54.400
还记不记得

23:54.560 --> 23:56.000
我们那个上一节课

23:56.640 --> 23:59.360
上一节课我们讲那个插件的时候

23:59.360 --> 24:00.960
我们这边把代码打开

24:03.870 --> 24:04.190
这边

24:05.070 --> 24:06.990
上一节课我们再讲插件的时候

24:06.990 --> 24:07.390
我看一下

24:09.310 --> 24:09.630
这里

24:10.910 --> 24:12.750
这里你看我们在定义这个store的时候

24:12.750 --> 24:14.270
我们这边是不是多传了一下

24:14.910 --> 24:15.230
对不对

24:15.230 --> 24:16.110
包括这边也是

24:16.990 --> 24:19.230
这边这个是setup风格的

24:19.230 --> 24:20.030
setup风格的话

24:20.030 --> 24:20.910
你看这边是不是

24:20.910 --> 24:22.350
多了一个第三个参数

24:22.990 --> 24:23.550
对不对

24:23.550 --> 24:25.070
第三个参数它这个实际上

24:25.070 --> 24:26.270
就是传递给谁呢

24:26.270 --> 24:27.470
传递给这个插件的

24:28.750 --> 24:30.830
这个我们把它称之为插件选项

24:31.630 --> 24:32.350
所以我们这边的话

24:33.630 --> 24:36.670
这里再把这个插件选项给大家介绍一下

24:39.970 --> 24:41.410
那么我们一个一个来

24:41.410 --> 24:43.810
我们首先先来看辅助函数

24:43.810 --> 24:45.330
我们这边的话还是写个例子

24:45.330 --> 24:47.170
通过这个例子来入手

24:47.170 --> 24:48.530
我们现在的话这边的话

24:49.250 --> 24:51.970
这边的话是有技术器代办事项

24:51.970 --> 24:52.450
对吧

24:52.450 --> 24:53.730
我们这边我们再来加一个

24:54.370 --> 24:54.930
好吧

24:54.930 --> 24:55.970
再加一个

24:56.050 --> 24:58.130
这边我们再加一个这个购物车

24:59.010 --> 25:00.370
这边的话我们这边APP

25:00.930 --> 25:01.570
添加一个

25:02.450 --> 25:03.090
把这个关了

25:05.940 --> 25:07.780
这边的话有一个购物车

25:10.020 --> 25:10.420
好

25:10.420 --> 25:12.660
购物车人家这边我们就叫做这个shopping

25:14.340 --> 25:15.300
shopping cart

25:16.580 --> 25:17.620
OK购物车

25:17.620 --> 25:17.940
好

25:17.940 --> 25:20.500
那既然你这边的话是不是应该添加这么一个主件

25:21.140 --> 25:22.020
我们来到这边

25:22.020 --> 25:23.060
components这边

25:23.060 --> 25:24.580
我们添加一个主件

25:24.580 --> 25:26.180
这个主件就叫做shopping cart

25:28.020 --> 25:28.580
shopping

25:29.380 --> 25:31.300
cart.bu

25:31.540 --> 25:32.100
OK

25:32.100 --> 25:33.300
然后这边的话你还得

25:33.940 --> 25:35.940
这边首先我们先把它创建起来

25:36.900 --> 25:37.300
这边

25:38.100 --> 25:38.740
我们采用

25:39.780 --> 25:40.580
采用这种形式

25:41.060 --> 25:42.660
有同学可能会觉得很奇怪

25:42.660 --> 25:43.860
你为什么要采用这种形式

25:43.860 --> 25:45.300
这个不是VR的写法吗

25:45.300 --> 25:45.540
对

25:45.540 --> 25:47.220
它这个辅助函数其实就是

25:47.220 --> 25:48.420
针对于这个VR的

25:49.860 --> 25:50.100
好

25:50.100 --> 25:52.100
然后接下来在路由这边

25:52.100 --> 25:53.860
我们这边先随便写一点

25:53.860 --> 25:56.420
这个是购物车

25:57.060 --> 25:57.380
好

25:57.460 --> 25:59.540
然后接下来在这个路由这边

26:00.900 --> 26:02.580
路由这边的话你就需要

26:02.580 --> 26:03.780
是不是做一下这个配置

26:04.420 --> 26:06.260
我们这边把它引进来一下

26:06.260 --> 26:07.940
这边的话叫做shopping cart

26:10.130 --> 26:11.810
shopping cart

26:13.170 --> 26:13.730
对吧

26:13.730 --> 26:13.970
好

26:13.970 --> 26:14.690
这边呢就是

26:15.570 --> 26:16.290
这个主件

26:18.290 --> 26:18.610
好

26:18.610 --> 26:20.290
大家这边添加一个配置箱

26:23.060 --> 26:24.580
这边我们就叫做shopping cart

26:26.420 --> 26:27.620
shopping cart

26:28.260 --> 26:29.860
对应的是这个主件

26:32.340 --> 26:32.820
好

26:32.820 --> 26:33.780
这边配置好了

26:34.660 --> 26:35.460
配置好了之后

26:35.460 --> 26:36.980
大家我们这边来看一下

26:36.980 --> 26:37.860
这边是不是有了

26:37.860 --> 26:38.180
对不对

26:38.180 --> 26:38.820
购物车

26:38.820 --> 26:40.100
这边能够切换过来了

26:40.740 --> 26:41.700
切换过来之后

26:41.700 --> 26:42.340
然后接下来

26:42.340 --> 26:43.300
我们来到这边

26:43.300 --> 26:44.420
来到这个shopping cart

26:45.220 --> 26:46.260
来到这个主件

26:46.260 --> 26:46.900
这个主件的话

26:46.900 --> 26:48.500
我首先还是先把这个样式

26:48.500 --> 26:49.460
我先把拿过来

26:50.020 --> 26:51.300
这个样式没什么好说的

26:53.330 --> 26:55.250
把样式拿过来

26:55.890 --> 26:57.810
稍微格式画一下

26:58.370 --> 26:58.690
好

26:58.690 --> 27:01.250
然后这个样式我就把它折叠起来了

27:01.250 --> 27:01.490
好

27:01.490 --> 27:02.450
折起来了之后

27:02.450 --> 27:03.090
然后接下来的话

27:03.090 --> 27:04.290
你可以看到这里

27:04.290 --> 27:05.890
这里的话很明显是什么

27:05.890 --> 27:07.330
很明显是不是v2的写法

27:08.050 --> 27:08.450
对不对

27:08.450 --> 27:09.570
export default

27:09.570 --> 27:10.850
然后回头我们会在这里面

27:10.850 --> 27:12.050
我们来写一些选项

27:12.050 --> 27:14.130
比如说会写这个computed

27:15.890 --> 27:16.610
OK

27:16.610 --> 27:17.330
会写什么呢

27:17.330 --> 27:18.930
会写这个message

27:21.740 --> 27:22.700
这个就是典型什么

27:22.700 --> 27:24.220
是不是典型的这个v2的写法

27:24.940 --> 27:29.980
v2的这个写法

27:31.100 --> 27:31.660
对不对

27:31.660 --> 27:33.020
它这个辅助函数的话

27:33.020 --> 27:35.340
实际上就是应用于这种情况的

27:35.340 --> 27:36.860
你看它这边还有说明

27:38.460 --> 27:40.300
我看一下在哪里

27:40.300 --> 27:40.700
这里

27:41.500 --> 27:44.940
如果你不能使用组合式API

27:45.660 --> 27:46.220
什么意思

27:46.220 --> 27:48.220
就是它这里指的就是view里面

27:48.780 --> 27:50.700
如果你现在使用的这个view版本

27:50.700 --> 27:53.340
不能使用这个组合式API

27:53.340 --> 27:54.860
那意味着你就是这个v2

27:55.420 --> 27:55.900
对不对

27:55.900 --> 27:56.780
v2的话

27:56.780 --> 27:57.500
让你可以使用什么

27:57.500 --> 27:59.020
你可以使用这个computed

27:59.020 --> 28:00.620
message这些你是可以用的

28:00.620 --> 28:01.100
对不对

28:01.100 --> 28:02.620
那么你可以使用什么呢

28:02.700 --> 28:04.860
可以使用这个map state

28:04.860 --> 28:06.300
这个辅助函数

28:06.300 --> 28:08.220
来把这个state属性

28:08.220 --> 28:10.940
硬设为止读的计算属性

28:12.060 --> 28:12.860
怎么样

28:12.860 --> 28:14.300
然后现在这边还有一些其他的

28:14.940 --> 28:16.220
还有一些其他的在

28:16.780 --> 28:17.180
在这里

28:17.740 --> 28:19.900
这里不使用setup的用法

28:21.420 --> 28:21.900
怎么样

28:21.900 --> 28:22.220
这边呢

28:22.220 --> 28:23.820
它就是有这个map stores

28:23.820 --> 28:25.020
map state

28:25.020 --> 28:25.980
map write

28:25.980 --> 28:27.340
这个writebox data

28:27.340 --> 28:28.620
map action

28:28.620 --> 28:29.660
以前的话有什么呢

28:29.660 --> 28:31.180
有这个map getters

28:31.260 --> 28:32.380
但现在的话它要

28:32.380 --> 28:34.220
就让你就是你统一就使用什么

28:34.220 --> 28:35.260
就使用map state

28:36.940 --> 28:37.740
怎么样

28:37.740 --> 28:38.060
好

28:38.060 --> 28:39.340
然后接下来我们这里的话

28:39.340 --> 28:40.460
我们就来呗

28:40.460 --> 28:41.100
我们首先的话

28:41.100 --> 28:42.860
我们先创建一个仓库

28:43.580 --> 28:44.540
我们来到这边

28:44.540 --> 28:45.900
我们创建一个

28:45.900 --> 28:48.620
叫做user cart store

28:49.820 --> 28:50.540
点js

28:52.140 --> 28:53.420
创建一个仓库

28:53.420 --> 28:53.580
好

28:53.580 --> 28:54.620
创建一个仓库之后

28:54.620 --> 28:56.220
然后接下来我们这边来写一下

28:56.220 --> 28:57.180
首先import

28:58.220 --> 28:59.660
然后front

28:59.740 --> 29:01.500
这边的话是pinion

29:03.580 --> 29:03.980
好

29:03.980 --> 29:05.820
然后接下来这边的话这个define

29:06.700 --> 29:07.740
define store

29:09.660 --> 29:10.380
OK

29:10.380 --> 29:10.700
好

29:10.700 --> 29:12.780
然后接下来这边的话一个sport

29:12.780 --> 29:13.900
然后const

29:14.540 --> 29:15.980
user一个cart

29:16.780 --> 29:17.500
cart store

29:18.620 --> 29:20.540
等于一个define store

29:24.050 --> 29:24.370
好

29:24.370 --> 29:25.010
这里的话

29:25.010 --> 29:26.210
我们给它取个名字

29:26.210 --> 29:27.010
叫做cart

29:28.690 --> 29:29.170
对吧

29:29.170 --> 29:29.330
好

29:29.330 --> 29:30.530
我们这边就用选项式了

29:30.530 --> 29:31.090
哈

29:31.090 --> 29:31.250
好

29:31.250 --> 29:32.690
我们这边呢有一个state

29:33.970 --> 29:35.890
state对呢是一个函数

29:37.810 --> 29:38.050
好

29:38.050 --> 29:38.690
里面有个什么呢

29:38.690 --> 29:39.970
有一个叫做cart data

29:42.000 --> 29:42.880
cart data就是什么

29:42.880 --> 29:44.080
就是你购物车的数据

29:44.800 --> 29:45.840
这个就是你购物车

29:47.600 --> 29:48.320
购物车

29:49.120 --> 29:49.600
里面

29:52.080 --> 29:53.120
里面的东西

29:53.680 --> 29:53.920
对吧

29:53.920 --> 29:55.360
你购物车里面放了哪些东西

29:56.000 --> 29:56.320
好

29:56.320 --> 29:58.400
然后接下来我就把这就拿过来了

29:58.400 --> 29:58.720
哈

29:58.720 --> 30:00.160
这边有一些这个对象

30:00.160 --> 30:01.120
我就把他拿过来

30:06.690 --> 30:06.930
OK

30:06.930 --> 30:07.650
好

30:07.650 --> 30:08.290
可以看一下哈

30:08.290 --> 30:10.290
这边每一个东西就是一个对象

30:10.370 --> 30:11.010
这里面的话

30:11.010 --> 30:12.050
他有id

30:12.050 --> 30:13.810
有这个东西的名字

30:13.810 --> 30:14.770
有它的价格

30:14.770 --> 30:15.890
有对应的这个图片

30:15.890 --> 30:16.450
图片的话

30:16.450 --> 30:17.570
我这边已经放过来了

30:18.770 --> 30:19.410
看到没有

30:19.410 --> 30:20.450
是一些水果

30:20.450 --> 30:21.810
一些水果

30:21.810 --> 30:22.610
OK

30:22.610 --> 30:23.010
好

30:23.010 --> 30:24.370
回到我们这边

30:24.370 --> 30:25.170
把这个关了

30:25.170 --> 30:26.050
回到我们这边

30:26.050 --> 30:26.290
好

30:26.290 --> 30:27.090
那我们现在的话

30:27.090 --> 30:28.130
我们第一件事情

30:28.770 --> 30:29.570
第一件事情的话

30:29.570 --> 30:32.530
我们这边就是先把这个仓库里面的这个数据

30:32.530 --> 30:34.210
我们先把它渲染出来

30:34.210 --> 30:35.010
好吧

30:35.010 --> 30:35.890
回到我们这边

30:37.570 --> 30:38.210
这边的话

30:38.210 --> 30:39.170
我们就用一个什么呢

30:39.250 --> 30:40.770
这边我们就用一个table

30:40.770 --> 30:42.450
这边首先div

30:42.450 --> 30:44.050
点container

30:44.050 --> 30:45.730
样式类是写好了的

30:45.730 --> 30:47.890
然后接下来这边一个table

30:47.890 --> 30:48.530
table

30:48.530 --> 30:49.730
然后接下来表头

30:49.730 --> 30:51.330
thead

30:51.330 --> 30:52.930
这个是表头

30:52.930 --> 30:53.890
表格嘛

30:53.890 --> 30:54.290
对吧

30:54.290 --> 30:55.650
表格有这个表头

30:55.650 --> 30:56.690
表头

30:56.690 --> 30:58.530
然后接下来这边th

30:58.530 --> 31:01.490
这边商品名

31:01.490 --> 31:03.730
商品名

31:03.730 --> 31:06.050
然后这边单价

31:06.050 --> 31:08.050
然后数量

31:08.770 --> 31:10.930
然后这边小计

31:10.930 --> 31:15.250
小计就多少钱

31:15.250 --> 31:15.570
好

31:15.570 --> 31:17.330
然后接下来这边这个操作

31:17.330 --> 31:17.730
操作呢

31:17.730 --> 31:19.090
就是一个三处操作

31:19.090 --> 31:19.970
OK

31:19.970 --> 31:20.850
好

31:20.850 --> 31:21.810
这是表头

31:21.810 --> 31:23.250
然后接下来这个是

31:23.250 --> 31:23.570
比较

31:24.210 --> 31:25.810
这叫这个tbody

31:25.810 --> 31:27.010
叫什么来着

31:27.010 --> 31:27.730
啊

31:27.730 --> 31:28.530
tbody

31:28.530 --> 31:30.130
表内容吗

31:30.130 --> 31:30.930
OK

31:30.930 --> 31:31.170
好

31:31.170 --> 31:32.850
这边就tbody

31:34.530 --> 31:35.090
OK

31:35.090 --> 31:36.050
好tbody的话

31:36.050 --> 31:37.650
然后接下来这边这个tr

31:38.450 --> 31:39.250
好

31:39.250 --> 31:40.690
这边的话我们就应该是什么呢

31:40.690 --> 31:41.970
这边是个tr

31:41.970 --> 31:43.970
是不是就是应该是循环生产

31:43.970 --> 31:44.690
对不对

31:44.690 --> 31:46.130
循环因为你这个有多少行

31:46.130 --> 31:47.010
这个取决于什么

31:47.010 --> 31:48.850
是不是取决于你这个歌舞车里面

31:48.850 --> 31:50.690
有多少个数据

31:50.690 --> 31:51.410
对不对

31:51.410 --> 31:51.650
啊

31:51.650 --> 31:52.370
说是接下来的话

31:52.370 --> 31:53.970
我们在这里

31:53.970 --> 31:55.010
在这边啊

31:55.010 --> 31:56.290
我们这边import

31:57.890 --> 31:59.170
import from

32:00.050 --> 32:02.700
pn

32:02.700 --> 32:03.820
然后这边把什么呢

32:03.820 --> 32:05.660
把这个map state

32:05.660 --> 32:07.100
把它引入

32:07.100 --> 32:07.500
OK

32:07.500 --> 32:07.820
注意哦

32:07.820 --> 32:09.660
这边的话是从pn里面引的

32:09.660 --> 32:09.900
啊

32:09.900 --> 32:11.180
然后接下来这边还要把什么呢

32:11.180 --> 32:12.060
还要把这个仓库

32:12.620 --> 32:13.260
把它引入

32:14.300 --> 32:15.100
import

32:15.980 --> 32:17.740
这边这个use store

32:18.380 --> 32:19.660
or use cart

32:19.660 --> 32:20.620
use cart store

32:21.900 --> 32:22.540
对吧

32:22.540 --> 32:23.260
啊 from

32:25.420 --> 32:26.220
这边的话是

32:27.020 --> 32:29.740
tr下面的这个store

32:29.740 --> 32:31.740
下面的这个use cart

32:32.460 --> 32:33.500
use cart store

32:35.620 --> 32:36.100
引进来

32:36.660 --> 32:36.900
好

32:36.900 --> 32:37.700
引进来之后

32:37.700 --> 32:38.980
然后接下来在这边

32:38.980 --> 32:39.540
这边的话

32:39.540 --> 32:40.420
你就可以通过什么了

32:40.500 --> 32:41.940
可以通过点点点

32:42.660 --> 32:44.020
map state

32:44.980 --> 32:46.340
啊这个呢把它扩展开

32:46.740 --> 32:47.060
好

32:47.060 --> 32:47.700
然后接下来

32:47.700 --> 32:49.140
你看一下它的这个用法

32:49.140 --> 32:50.580
它在这边实际上写的有的

32:52.260 --> 32:52.660
OK

32:52.660 --> 32:53.860
在在在这里

32:54.420 --> 32:54.740
这边啊

32:54.740 --> 32:55.780
这里写的有的啊

32:55.780 --> 32:56.100
这边呢

32:56.100 --> 32:57.140
你这个是

32:57.140 --> 32:58.420
这个use counter store

32:58.420 --> 32:59.460
use counter store是不是就是

33:00.340 --> 33:01.300
从你的那个store

33:01.300 --> 33:02.580
导出这个函数这边

33:02.580 --> 33:03.460
是不是引入进来的

33:04.020 --> 33:04.500
对不对

33:04.500 --> 33:05.220
然后接下来第二个

33:05.220 --> 33:05.700
第二个的话

33:05.700 --> 33:07.060
它这边就是你要什么参数

33:08.020 --> 33:08.580
那我们这边呢

33:08.580 --> 33:09.620
就是应该是

33:09.700 --> 33:10.740
use cart store

33:14.430 --> 33:15.470
啊use cart store

33:15.470 --> 33:16.510
然后接下来这边

33:16.510 --> 33:17.310
这边的话是

33:17.870 --> 33:19.550
我们的那个数据叫什么

33:19.550 --> 33:20.350
是不是叫做这个

33:21.150 --> 33:21.710
card data

33:24.260 --> 33:24.900
对不对

33:24.900 --> 33:25.620
那回头的话

33:25.620 --> 33:26.100
你这边呢

33:26.100 --> 33:26.900
就会得到一个什么

33:26.900 --> 33:29.060
得到一个card data的一个状态

33:29.060 --> 33:29.780
啊那接下来

33:29.780 --> 33:30.100
这边呢

33:30.100 --> 33:30.740
你就可以用

33:31.300 --> 33:32.340
啊这边我们就通过什么呢

33:32.340 --> 33:33.380
通过这个wagon4

33:35.220 --> 33:36.420
wagon4

33:36.420 --> 33:37.140
等于一个

33:38.980 --> 33:39.620
啊这边的话

33:39.620 --> 33:41.060
我们是it

33:41.060 --> 33:42.660
然后index

33:42.660 --> 33:43.380
然后引

33:43.860 --> 33:45.060
这个card data

33:45.620 --> 33:47.300
啊给一个这个下标

33:47.300 --> 33:47.700
对吧

33:47.700 --> 33:47.940
key

33:48.660 --> 33:49.300
啊给个key

33:49.300 --> 33:50.580
不是给下标

33:50.580 --> 33:51.540
key index

33:52.580 --> 33:53.220
对不对

33:53.220 --> 33:54.340
啊通过这种方式

33:54.340 --> 33:55.700
你就可以一行一行的

33:55.700 --> 33:57.140
把这个数据啊

33:57.140 --> 33:58.580
这边让我们把它这个

33:58.580 --> 33:59.860
就你这边有多少个数据

34:00.420 --> 34:00.820
对吧

34:00.820 --> 34:02.100
你这边有多少个数据

34:02.100 --> 34:02.980
每一个数据

34:02.980 --> 34:04.420
大家我们这边生成什么

34:04.420 --> 34:05.540
生成什么表格的一行

34:06.180 --> 34:06.740
对不对

34:06.740 --> 34:08.180
啊表格的一行里面有什么呢

34:08.180 --> 34:09.460
好我们一个一个来呗

34:09.460 --> 34:10.740
首先这边的话会有什么呢

34:10.740 --> 34:11.300
会有这个

34:12.180 --> 34:12.500
嗯

34:13.700 --> 34:14.740
你的名字

34:14.740 --> 34:15.300
it

34:16.420 --> 34:17.060
点name

34:18.740 --> 34:19.300
对不对

34:19.300 --> 34:20.900
啊名字然后既然我这边还有什么呢

34:20.900 --> 34:21.700
还有这个图片

34:22.180 --> 34:22.900
啊还有图片

34:24.260 --> 34:26.100
啊这边这个给个class

34:27.060 --> 34:28.740
class是一个name

34:29.860 --> 34:31.380
啊这个在下面写好了的啊

34:31.380 --> 34:32.340
在这里面写好了的

34:32.900 --> 34:34.100
好人家这边这边呢

34:34.100 --> 34:36.020
是你这个商品的名字

34:36.020 --> 34:37.540
人家这边我再给个图片

34:38.500 --> 34:39.460
图片src

34:40.660 --> 34:42.180
src就来自于什么呢

34:42.180 --> 34:44.900
来自于it点image

34:45.220 --> 34:46.100
啊就这里

34:46.100 --> 34:47.540
这里不是有个image吗

34:47.540 --> 34:47.860
对吧

34:47.860 --> 34:49.620
我们这边用了name和image

34:49.620 --> 34:51.860
一会还会用到price和counter

34:51.860 --> 34:52.180
啊

34:52.980 --> 34:55.940
啊然后这边这边其他的话就没什么了

34:55.940 --> 34:56.980
啊这边有个class

34:58.100 --> 34:59.780
class这边是image

35:00.500 --> 35:00.820
ok

35:01.780 --> 35:03.300
啊你这边可以看一下

35:03.300 --> 35:04.340
来看一下什么生效

35:08.880 --> 35:10.960
呃这边我看一下啊

35:10.960 --> 35:12.240
这边没出来是吧

35:13.600 --> 35:14.960
在这边理论上来讲的话

35:14.960 --> 35:17.520
这边应该是ok的

35:17.520 --> 35:18.400
让我看一下啊

35:20.640 --> 35:21.840
这边理论上来讲的话

35:21.840 --> 35:23.200
这边东西应该是

35:23.200 --> 35:25.200
这边没出来啊

35:25.200 --> 35:26.400
没出来啊

35:26.400 --> 35:27.520
我看一下这边怎么回事

35:29.680 --> 35:32.160
啊这里的话我看一下啊

35:32.160 --> 35:34.560
这边呃这边没什么问题

35:34.560 --> 35:35.520
我看他报的什么错

35:36.480 --> 35:37.520
他说这边的话

35:37.520 --> 35:38.720
to raves的

35:38.720 --> 35:41.120
希望是一个响应式的对象

35:41.120 --> 35:43.680
但是接受到的是一个playin

35:44.160 --> 35:46.400
一个普通的比演评化的这个对象

35:47.200 --> 35:48.640
难道是我们仓库有问题吗

35:49.200 --> 35:50.960
啊我们仓库仓库这边还真有问题

35:51.600 --> 35:52.640
啊这边应该是什么

35:52.640 --> 35:53.760
这边是不是应该是返回

35:54.560 --> 35:54.960
对不对

35:54.960 --> 35:56.880
这边应该是返回一个对象

35:57.520 --> 35:59.040
啊在对象里面干嘛

35:59.040 --> 36:00.480
对象里面是不是这个数据

36:01.360 --> 36:01.680
对不对

36:02.400 --> 36:03.680
嗯ok把把这个

36:04.960 --> 36:05.840
啊格式画一下

36:06.400 --> 36:06.880
啊保存

36:07.520 --> 36:08.320
保存了之后

36:08.320 --> 36:10.000
然后现在这边刷新一下

36:10.000 --> 36:10.640
出出来了

36:11.920 --> 36:13.360
对不对啊这里就出来了

36:13.440 --> 36:15.040
把这个稍微再移过来一点

36:15.040 --> 36:16.080
啊好

36:16.080 --> 36:18.240
然后接下来我们这边继续啊

36:18.240 --> 36:19.600
这边你一个写好了之后

36:19.600 --> 36:21.120
后面是不是就好办了

36:21.120 --> 36:21.440
对不对

36:21.440 --> 36:22.720
这个呢是商品名

36:25.440 --> 36:25.760
商

36:27.680 --> 36:28.000
商

36:29.120 --> 36:30.720
商品名

36:31.280 --> 36:32.880
那这样我们这边还会写什么呢

36:32.880 --> 36:34.640
啊我们这边的话还会写就是

36:35.760 --> 36:36.640
你的我看一下

36:37.840 --> 36:40.560
还会写单价数量小计和操作

36:41.200 --> 36:43.840
啊这边

36:43.840 --> 36:45.920
单价小计

36:45.920 --> 36:47.600
啊单价数量

36:47.600 --> 36:49.280
好每个一个来吧

36:49.280 --> 36:50.320
首先这个单价

36:50.320 --> 36:51.840
单价这边td

36:51.840 --> 36:54.670
td

36:54.670 --> 36:55.870
啊这边呢就是

36:57.790 --> 36:58.510
it

36:58.510 --> 36:59.630
点price

36:59.630 --> 37:01.310
对吧

37:01.310 --> 37:02.750
你这边呢有这个price

37:02.750 --> 37:04.750
有这个price

37:04.750 --> 37:07.150
啊然后接下来的话是数量

37:07.150 --> 37:09.470
数量的话这边的话

37:09.470 --> 37:11.230
数量的话我们是可以加和减的

37:12.190 --> 37:13.230
啊这个td

37:13.230 --> 37:15.230
这边呢给了一个class

37:15.230 --> 37:16.510
对应该是td

37:16.510 --> 37:18.030
啊这边呢会有一个button

37:19.310 --> 37:20.910
button啊左边是减

37:21.630 --> 37:23.310
右边是加

37:23.310 --> 37:24.030
啊中间

37:24.830 --> 37:26.350
中间是it

37:26.350 --> 37:26.590
点

37:27.710 --> 37:28.030
count

37:28.990 --> 37:30.110
ok好

37:30.110 --> 37:32.430
然后加这边呢回头会给他绑这个实践

37:32.430 --> 37:33.870
加和减的实践

37:33.870 --> 37:35.710
好然后接下来啊这边这个小计

37:37.070 --> 37:38.990
小计的话这边td

37:38.990 --> 37:39.630
点td

37:40.350 --> 37:40.670
啊

37:41.230 --> 37:42.510
这个就应该是等于什么

37:42.510 --> 37:45.070
这边是不是应该是it点price

37:45.070 --> 37:47.630
成一个it点

37:47.630 --> 37:48.910
count

37:50.190 --> 37:51.470
对不对

37:51.470 --> 37:54.030
好然后最后一个最后一个是操作

37:54.030 --> 37:56.590
操作然后接下来这里

37:56.590 --> 37:57.870
这里呢是一个button

37:57.870 --> 38:00.430
button这边是一个删除

38:00.430 --> 38:01.710
ok

38:01.710 --> 38:02.990
啊格式画一下

38:02.990 --> 38:04.030
啊保存

38:04.030 --> 38:05.790
保存了之后过来看一下

38:05.790 --> 38:07.470
这边出来了

38:07.470 --> 38:08.750
对

38:08.750 --> 38:09.630
出来了

38:09.950 --> 38:10.910
这是这个

38:10.910 --> 38:13.470
风扇想起来了

38:13.470 --> 38:14.990
我们这边的效果就出来了

38:14.990 --> 38:18.350
出来了之后然后接下来这边还会有一个总价

38:18.350 --> 38:19.870
下面还会有个总价

38:19.870 --> 38:23.710
啊我们这边这个总价总价的话我们在这里

38:23.710 --> 38:26.270
我们在这里的话我们再来提供一个

38:26.270 --> 38:29.070
提供一个什么呢提供一个专门算这个总价的

38:29.070 --> 38:31.390
啊我们这边提供一个这个getters

38:31.390 --> 38:33.710
这边state

38:33.710 --> 38:35.230
提供一个getters

38:36.190 --> 38:40.350
啊你这边总价无外乎就是对所有的数据是不做二次计算

38:40.350 --> 38:43.550
对不对我们反复说过getter就是对数据做二次计算

38:43.550 --> 38:46.510
你这边这个总价实际上就是对这里的数据

38:46.510 --> 38:48.030
是不数据其实没变

38:48.030 --> 38:49.550
数据还是这些数据

38:49.550 --> 38:52.510
对不对啊price count数据还是这些数据

38:52.510 --> 38:55.150
只不过我要对这些数据做一个二次计算

38:55.150 --> 38:58.910
对不对啊我这边呢这个toto

38:58.910 --> 39:00.990
toto price

39:00.990 --> 39:04.990
toto price啊对应是一个函数

39:05.070 --> 39:07.230
好然后在这边他会把这个store

39:07.230 --> 39:10.430
传过来啊我这边解构把这个card data

39:10.430 --> 39:12.030
解构出来

39:12.030 --> 39:14.430
解构出来之后然后接下来注意看哦

39:14.430 --> 39:16.670
我这边的话我要使用这个

39:16.670 --> 39:18.190
首先我这边return

39:18.190 --> 39:19.950
我要计算总价

39:19.950 --> 39:21.550
这边该怎么计算

39:21.550 --> 39:23.630
啊有同学说你可以使用 for 循环嘛

39:23.630 --> 39:26.030
啊他这个数组嘛你去便利他嘛

39:26.030 --> 39:29.550
对不对啊但for 循环的话他是那种命令式变成

39:29.550 --> 39:32.750
显得比较麻烦啊我这边的话使用这种

39:32.830 --> 39:36.750
生命式变成啊这边呢就是card data

39:36.750 --> 39:39.230
他是数组对吧然后掉reduce

39:40.430 --> 39:43.230
ok reduce 然后接下来的话这边

39:43.230 --> 39:45.630
他返回一个什么返回一个

39:45.630 --> 39:47.230
就是里面传入个函数

39:47.230 --> 39:50.190
函数然后他这边第一个参数是函数

39:50.190 --> 39:51.950
那接下来的话这边这个函数的话

39:51.950 --> 39:55.790
他第一个值是什么第一个值是上一次计算的这个结果

39:55.790 --> 39:57.790
对不对好第二个参数是什么呢

39:57.790 --> 39:59.150
是这一次的值

39:59.230 --> 40:00.430
然后返回什么呢

40:00.430 --> 40:03.230
返回就上一次你计算的总价

40:03.230 --> 40:04.910
加上我这一次

40:04.910 --> 40:07.470
我这边这个item.price

40:07.470 --> 40:11.630
然后乘以一个item.hunt

40:12.830 --> 40:15.630
看到没有啊大家这边一开始的总价是多少

40:15.630 --> 40:16.910
一开始的总价是0

40:17.550 --> 40:19.230
看到没有我是不是一行就写完了

40:19.950 --> 40:22.110
啊其实通过这些细节的话

40:22.110 --> 40:24.990
大家也可以体会到这种生命式变成

40:24.990 --> 40:27.310
相比以前的那种命令式变成

40:27.470 --> 40:30.030
确实的话就是要简洁很多

40:30.750 --> 40:34.750
但是他这个的话就是难度要高一些

40:35.390 --> 40:37.950
对不对你命令式变成的话实际上是比较简单的

40:37.950 --> 40:39.950
比如我这边如果我写一个for循环的话

40:39.950 --> 40:41.710
可能大多数同学都看得懂

40:41.710 --> 40:43.470
对不对for循环有谁看不懂吗

40:43.470 --> 40:45.950
对不对但是你这边的话你如果是写成这种

40:46.990 --> 40:49.470
使用这种函数式变成了这种写法

40:49.470 --> 40:52.430
可能有了同学的话可能就稍微有点吃力了

40:52.430 --> 40:55.390
你可以把这个再看一下啊把这个再看一下啊

40:55.470 --> 40:56.430
有一个意思

40:56.430 --> 40:59.070
OK只不过这边就一行带嘛就搞定了

41:00.030 --> 41:02.990
好搞定之后然后加这边这个total price

41:02.990 --> 41:04.910
你回到你的这个shopping cart

41:05.470 --> 41:07.310
啊这边的话我们就也需要把他

41:07.870 --> 41:12.830
是不是拿出来说这边呢就直接在这里再添加一个total price

41:13.790 --> 41:16.350
对不对啊他是getter的吗getter属于以前的话

41:16.350 --> 41:19.150
你是要这个点点点map getter

41:19.150 --> 41:21.470
但是他现在就是合并在一起了

41:22.270 --> 41:24.430
啊他让你就都用这个map state

41:24.910 --> 41:28.190
OK好然后接下来的话我们在这个table下面

41:29.790 --> 41:34.110
在table下面table下面的话我们这边啊这边有个class

41:34.110 --> 41:36.670
他是一个total price

41:39.760 --> 41:50.560
total price啊总价总价啊这边是不是应该是total price啊

41:50.560 --> 41:55.920
大家这里员对吧啊保存一下啊过来看一下

41:56.880 --> 41:58.480
刷新一下

41:58.480 --> 42:02.080
就出来了对不对啊这里就出来了

42:02.080 --> 42:04.880
OK啊这个总价就我刷出来了

42:04.880 --> 42:07.440
好然后在这边呢有个这个加有个减

42:07.440 --> 42:11.040
啊有个加有个减有个加有个减我们刚才讲那个

42:11.040 --> 42:14.480
就最佳时间的时候我们说过不要在这直接加直接减

42:14.480 --> 42:16.160
啊但我们这个比较简单

42:16.160 --> 42:20.240
对不对我们这个比较简单我们这个也没有啥我就

42:20.240 --> 42:22.560
图个方便我就不在这里写action了

42:23.120 --> 42:27.120
好吧还是写吧还是写明明刚刚才才讲了最佳时间是吧

42:27.680 --> 42:28.880
啊在这里写吧

42:30.240 --> 42:33.440
好我们在这里这里的话我们来写这边呢就是有个action

42:36.770 --> 42:42.450
action啊啊我们这边呢就是啊 and item

42:43.650 --> 42:45.330
啊我们叫这个吗increement吗

42:47.170 --> 42:47.970
increement

42:51.010 --> 42:56.690
increement对吧啊这边让他接受一个什么接受一个下标

42:57.330 --> 43:00.610
啊然后接下接受这个下标之后然后接下来的话

43:01.330 --> 43:05.970
对应下标的是不增加对不对啊这边就是应该是card

43:07.730 --> 43:08.690
这边通过this

43:09.570 --> 43:15.010
this点card他拿到这个数组数组然后接下对应的这一项

43:15.010 --> 43:16.290
这一项的什么东西呀

43:16.930 --> 43:20.850
这一项的他的这个啊 count

43:21.970 --> 43:23.410
点count

43:24.050 --> 43:24.690
是加加

43:25.730 --> 43:26.450
对不对

43:26.610 --> 43:30.930
看着加加好我们来这边这边写了之后刚好这边我写了这个action

43:30.930 --> 43:36.530
我这边的话我讲一下就是map action啊好这里这里的话你就应该是使用这个map action

43:36.850 --> 43:38.130
这边把那个map action

43:38.930 --> 43:39.890
把他引进来

43:40.610 --> 43:41.730
map actions

43:42.130 --> 43:44.930
好map actions引进来之后然后接下来在这里

43:45.330 --> 43:46.450
这里的话你就可以

43:47.330 --> 43:50.050
点点点map actions

43:51.410 --> 43:55.890
把那个对应的action把它解构出来啊这边仍然是第一个参数是你的这个

43:56.210 --> 43:57.250
use the card store

43:58.130 --> 44:02.770
啊第二个参数呢我们这边就是一个数组数组里面我们这边就叫做increment

44:05.920 --> 44:10.640
这边没有这个ok increment好那回头的话你在这边在

44:12.080 --> 44:17.680
呃这里这里的话是不是就可以使用对不对这边圈啊这边是click

44:18.640 --> 44:20.640
等于一个increment

44:21.200 --> 44:23.200
大家这边把什么是把这个下标

44:24.160 --> 44:26.880
把他传过去了对吧好我们保存一下

44:27.520 --> 44:32.720
保存了之后让家我们这边看一下加啊这边抱错了啊看一下

44:34.160 --> 44:35.920
key is not function

44:37.940 --> 44:38.660
刷新一下了

44:39.860 --> 44:44.260
啊可以了对吧刷新一下你看这边是不是就ok了你看这边数量在

44:44.260 --> 44:46.660
数量在加的同时这边这边是不是也在增加

44:47.140 --> 44:49.380
这边在增加的同时这边是不是也在变

44:50.820 --> 44:53.300
对对不对啊这边就ok了啊

44:53.940 --> 44:58.740
好然后接下来这个是加然后接下来这边是剪啊这边是剪

44:58.740 --> 45:00.980
剪你主要剪的话你要做个判断

45:01.620 --> 45:07.060
这边仍然是接受一个index index这边要判断啊

45:07.060 --> 45:11.780
e符什么呢e符 this点这个cult

45:13.380 --> 45:18.100
然后index然后他的什么呢他的如果这个

45:18.420 --> 45:26.000
他的这个cult如果已经等于e了啊如果已经等于一个e

45:26.000 --> 45:28.560
我们就不让他再剪了我们就直接return

45:29.600 --> 45:33.680
对吧你至少要有一个嘛你要么就删除对不对啊否则的话

45:33.680 --> 45:36.240
这边就干嘛呢否则这边就剪剪

45:37.520 --> 45:42.540
否则这边就剪剪

45:42.540 --> 45:45.100
ok好然后接下来这里

45:45.340 --> 45:47.660
这里我们把它拿过来

45:48.940 --> 45:53.970
对吧拿过来之后然后接下来这边

45:53.970 --> 45:56.770
在这边啊这边这边是一样的

45:58.050 --> 46:00.130
true click等于一个

46:01.250 --> 46:04.930
然后这边index对吧啊保存

46:06.450 --> 46:08.210
保存了之后来在这边刷新一下

46:09.010 --> 46:12.610
那比方我剪啊对吧这边的话变成70了

46:12.610 --> 46:17.810
这边814啊这边再剪1再剪就剪不动了对吧

46:17.810 --> 46:21.650
只有一个了ok啊这是加和剪啊

46:22.210 --> 46:25.010
啊你看这边这边你就按照这个最佳实践走啊

46:25.010 --> 46:28.050
你这边就写到这里啊这个这个就是方法嘛

46:28.050 --> 46:29.250
方法就写到ax里面

46:29.810 --> 46:31.890
所有对针对于你这个数据

46:32.450 --> 46:34.850
做操作的这个方法是不是都集中在这里

46:35.570 --> 46:38.130
对不对他就不会像你之前这样子分散在

46:38.130 --> 46:40.530
这个分散在组建的各个地方对吧

46:40.530 --> 46:42.370
有些是在这个地方改的数据

46:42.370 --> 46:44.610
有些是在这个这个地方改的数据

46:45.170 --> 46:45.410
ok

46:46.930 --> 46:47.730
啊这是这个

46:48.290 --> 46:50.690
好我们把那个最后一个删除我们也把它一起做了吧

46:51.410 --> 46:54.210
啊删除的话实际上是一样的啊在这里

46:55.570 --> 46:57.250
啊我们这边给他绑定一个

46:57.250 --> 46:58.210
这边圈

46:58.930 --> 47:03.650
click等于一个啊这边delete handle

47:04.530 --> 47:06.610
啊把这个index穿过去

47:07.570 --> 47:10.370
好然后接下来我们在这下面下面我们写一个

47:11.890 --> 47:13.810
这边这边的话应该是逗好

47:14.370 --> 47:16.690
对吧他点点点展开是一个一个的这个项目

47:16.690 --> 47:19.250
他这个是个对象吧对吧他是个对象

47:19.250 --> 47:22.690
展开的话是一个一个项目好然后在这边的话delete handle

47:23.330 --> 47:24.370
这边index

47:25.730 --> 47:29.330
对吧好然后在这边呢就是询问一下啊window

47:30.130 --> 47:31.170
点这个confirm

47:32.290 --> 47:37.010
稍微询问一下啊是否要删除

47:38.130 --> 47:41.010
这个当前购物车

47:42.370 --> 47:43.970
购物车这一箱

47:45.570 --> 47:48.370
对吧啊询问一下啊如果他点这个是

47:49.010 --> 47:49.970
这边呢就是if

47:52.560 --> 47:55.040
ok如果这边进来进来的话咱们就删除

47:55.040 --> 47:58.720
删除的话那你在这边是不是就又应该增加一个这个方法

47:59.600 --> 48:01.280
对不对啊我们这边增加一个

48:02.160 --> 48:03.760
增加一个删除的方法

48:04.720 --> 48:06.720
这边呢就是delete

48:07.280 --> 48:08.480
delete item

48:09.520 --> 48:11.120
那接收一个index

48:12.080 --> 48:15.120
啊接收一个index这边就是应该是z点card

48:15.760 --> 48:20.080
data啊人家这边调什么他是数组数组我们调splice

48:20.160 --> 48:23.680
对吧删除这个index对应的这一项

48:24.320 --> 48:28.240
啊把它删除好然后接下来这边这边的话

48:28.240 --> 48:30.400
然后把它拿过来

48:32.080 --> 48:34.320
对吧拿过来之后然后加这边就干嘛

48:34.320 --> 48:36.320
这边是不是直接就调了就可以了

48:37.040 --> 48:41.360
对吧啊说你这边就直接写delete item

48:42.560 --> 48:46.000
啊这边应该是z啊z点delete item

48:46.000 --> 48:48.960
然后把这个index穿过去

48:49.520 --> 48:50.640
啊格式换一下

48:51.600 --> 48:52.560
啊这边保存

48:53.120 --> 48:55.120
保存之后然后加这边来看一下

48:55.120 --> 48:58.320
删新一下啊这边呢比如说点击删除

48:58.880 --> 49:01.120
啊是否要删除这一项点击确定

49:01.680 --> 49:04.000
是不搞定了对不对比如我们这边删除

49:05.040 --> 49:06.960
确定对吧删除

49:07.760 --> 49:08.720
确定

49:08.720 --> 49:10.400
OK啊这个删除

49:11.040 --> 49:12.880
确定对吧OK

49:14.080 --> 49:14.960
啊没有问题

49:15.680 --> 49:18.400
OK啊这个的话就是关于这个

49:18.480 --> 49:19.200
辅助函数

49:20.320 --> 49:23.600
OK这就是关于辅助函数啊现在是简单

49:23.600 --> 49:24.880
就和那个之前那个

49:25.600 --> 49:28.320
哇之前好像也是mux提供的对不对

49:28.320 --> 49:32.000
就和之前mux的那个mapStatemapAction这些是一样的

49:33.360 --> 49:35.040
好然后接下来我们这边来看第二个

49:36.320 --> 49:41.120
第二个啊第二个的话是关于这个订阅State和订阅这个Action

49:41.680 --> 49:44.000
啊这边的话你是可以做一个这个订阅的

49:44.720 --> 49:47.920
OK我们来看一下啊在这里

49:50.100 --> 49:52.980
在这里我们先来看订阅State啊

49:52.980 --> 49:56.980
类似于mux的这个subscript方法

49:57.540 --> 50:01.940
你可以通过什么呢可以通过store的这个downerscript方法

50:01.940 --> 50:05.220
真听这个State极其变化

50:06.020 --> 50:10.340
啊比起普通的这个瓦奇它的好处的话是这个patch后只出发一次

50:10.340 --> 50:11.380
我们来看一下它的用法

50:11.940 --> 50:15.940
它这边首先拿到一个store拿到store之后人家这边有个downerscript

50:16.820 --> 50:19.220
对不对人家这边接受一个回调函数

50:19.380 --> 50:21.940
在回调函数里面它会传入multation和State

50:22.500 --> 50:24.420
multation你看multation它这边会有三个

50:25.140 --> 50:27.940
multation的话它这边的话就是有三个属性一个是type

50:27.940 --> 50:29.940
一个是store id一个是payload

50:30.740 --> 50:33.060
type是什么呢type是你这次改变的方式

50:33.540 --> 50:39.060
你是直接改的还是通过patch改的啊是patch object还是patch function

50:40.340 --> 50:45.780
啊这边这个是store id啊你这个store啊它对应id啊这边呢是payload

50:45.940 --> 50:50.180
它对应了这个如果你是通过patch来改的话啊你这边传的这个对象

50:50.900 --> 50:54.260
对吧那接下来当这个状态发生变化之后你要做什么事情

50:54.580 --> 50:55.700
好来我们这边来看一下嘛

50:56.580 --> 50:57.860
我们这边就在store里面吧

50:58.580 --> 51:00.900
就在store里面store里面我们之前这边

51:01.380 --> 51:04.340
我把这个注释掉了啊这个是之前讲插件的时候

51:04.340 --> 51:07.060
我们看那个插件那个属性有没有放上去

51:07.060 --> 51:08.020
我把这个注释了

51:08.660 --> 51:11.060
注释了之后然后接下来这边这个store

51:12.020 --> 51:15.060
好我们在这边store我们这边的话就store

51:15.060 --> 51:16.420
啊我们这边就是监听

51:19.410 --> 51:23.890
监听什么呢监听这个state的这个变化

51:23.890 --> 51:26.930
啊那接下来这边我们叫做store是吧store

51:27.570 --> 51:31.090
点downer subscript

51:33.570 --> 51:34.850
ok就这么简单

51:35.570 --> 51:37.730
就这么简单你就这样子的话它就监听了

51:38.210 --> 51:40.290
ok只问你这边呢你这个监听了之后

51:40.290 --> 51:41.410
接下来你要做什么事情

51:41.410 --> 51:43.330
所以你需要传一个回调函数

51:43.890 --> 51:45.890
回调函数里面它这边会干嘛呢

51:45.890 --> 51:48.050
它这边可以接收两个东西

51:48.050 --> 51:49.810
一个是multation

51:50.450 --> 51:52.130
一个是state

51:53.330 --> 51:55.410
啊一个是multation一个是state

51:55.410 --> 51:56.850
好然后接下来这个multation

51:56.850 --> 52:00.290
multation记住multation是一个对象

52:04.220 --> 52:11.660
是一个对象啊记录了这一次变化的一些信息

52:12.700 --> 52:14.220
什么信息呢啊就是这边

52:14.300 --> 52:17.100
就是你的这个type store id payload

52:17.100 --> 52:18.700
啊不用把它打印出来看一下吧

52:20.300 --> 52:22.140
这边打印这个multation

52:23.900 --> 52:25.660
multation

52:26.220 --> 52:27.660
multation它有一个什么

52:29.260 --> 52:31.500
type对吧

52:31.500 --> 52:32.700
然后接下来这个store

52:33.580 --> 52:34.460
store id

52:35.100 --> 52:36.220
还有一个什么 payload

52:38.770 --> 52:39.410
payload

52:39.410 --> 52:40.450
我们再前面加一下

52:41.570 --> 52:42.770
这边这个是type

52:45.760 --> 52:47.040
啊然后这个

52:49.410 --> 52:51.650
这个是store id

52:54.080 --> 52:55.200
啊这个是payload

52:57.040 --> 52:58.080
payload

53:00.480 --> 53:02.720
ok好然后这边我们再来打印什么了

53:02.720 --> 53:03.840
再来打一下这个state

53:05.520 --> 53:07.040
再来打印一下state

53:10.750 --> 53:12.590
ok好来我们这边我们来看一下

53:13.230 --> 53:13.630
保存

53:14.350 --> 53:15.230
保存了之后

53:15.230 --> 53:17.070
然后接下来我们到这边来

53:17.070 --> 53:18.270
啊这个是刚写了购物车

53:18.270 --> 53:19.310
我们到这边来

53:19.310 --> 53:20.510
好看这里

53:20.510 --> 53:21.790
这边我比较增加

53:21.790 --> 53:23.150
增加的话你看这边type的话

53:23.150 --> 53:23.710
它就是什么

53:24.030 --> 53:26.590
direct直接改的对不对

53:26.590 --> 53:29.870
啊这个store id是什么container对不对

53:29.870 --> 53:31.150
这个payload是没有

53:31.150 --> 53:33.790
为什么因为你这边那是直接改的啊

53:33.790 --> 53:35.230
啊state state就是什么

53:35.230 --> 53:38.190
state就是你当前最新的这个状态对不对

53:38.190 --> 53:41.790
104对不对105 106

53:41.790 --> 53:43.710
ok好然后如果我是这个

53:43.710 --> 53:44.830
通过这个parch方法

53:45.390 --> 53:47.070
啊比方我传一个200

53:47.870 --> 53:48.190
设置

53:48.910 --> 53:51.070
你看这次payload是不是就有值了

53:51.070 --> 53:52.350
对不对它就是个对象啊

53:52.430 --> 53:53.550
大家这边这个type

53:53.550 --> 53:54.350
type的话就是什么

53:54.350 --> 53:55.630
so patch object

53:56.910 --> 53:58.510
看到没有啊这个呢就是

53:59.150 --> 54:01.550
这个状态的这个监听很简单啊

54:01.550 --> 54:02.110
很简单

54:02.110 --> 54:03.950
就每次这个state变化的时候

54:03.950 --> 54:05.470
啊你这边可以监听它的变化

54:05.470 --> 54:06.190
监听了之后

54:06.190 --> 54:07.230
然后加你后面

54:07.230 --> 54:08.670
后面是不是就可以做其他的事情

54:09.710 --> 54:11.150
做其他的事情

54:11.950 --> 54:12.430
对不对

54:12.430 --> 54:13.950
根据你这个状态的变化

54:13.950 --> 54:15.310
啊不用我要做一些其他的事情

54:15.870 --> 54:18.270
这是关于这个监听state的变化

54:18.270 --> 54:19.790
除了监听这个state变化

54:19.790 --> 54:20.830
它还可以干嘛呢

54:20.910 --> 54:22.430
它还可以监听这个action

54:24.640 --> 54:25.120
看这里

54:26.880 --> 54:29.040
这边这个订阅action

54:29.600 --> 54:30.480
啊我们这边来看一下

54:31.280 --> 54:32.640
你可以通过什么呢

54:32.640 --> 54:35.360
可以通过store点downer onaction

54:35.760 --> 54:38.480
来监听action和他们的这个结果

54:38.960 --> 54:40.560
好这边要注意一点啊

54:40.560 --> 54:43.760
它会在传递给它的这个回调函数

54:43.760 --> 54:45.920
啊就传递给它的回调函数

54:45.920 --> 54:48.480
会在action本身之前执行

54:49.680 --> 54:50.800
这边要注意哦

54:50.800 --> 54:51.840
啊我们这边来看一下

54:52.960 --> 54:54.000
好吧这个注释掉了啊

54:55.120 --> 54:56.800
啊这是监听state的变化

54:56.800 --> 54:57.920
好我们这边呢是监听

54:59.200 --> 55:00.400
监听action

55:01.760 --> 55:02.960
啊监听action的时候

55:02.960 --> 55:05.200
然后有一点啊这个

55:05.200 --> 55:06.560
这个很重要

55:06.560 --> 55:08.000
它的执行的这个时机

55:08.560 --> 55:09.600
它是在什么呢

55:09.600 --> 55:11.280
它就传递给它的回调函数

55:11.280 --> 55:14.400
是在执行action之前执行的

55:15.120 --> 55:17.600
啊那下这边就是store点

55:17.600 --> 55:18.400
看它怎么写的

55:19.120 --> 55:21.360
是不是这边downer onaction

55:24.420 --> 55:25.460
对不对啊

55:25.460 --> 55:27.060
掉这个方法就可以了

55:27.060 --> 55:28.100
它会有个返回值

55:28.660 --> 55:30.500
它这个返回值到你来这边接收

55:30.500 --> 55:32.980
接收到它这个叫做un subscript

55:33.460 --> 55:35.700
啊你猜都猜得到这个返回值是拿来干嘛的

55:36.260 --> 55:37.700
是不是拿来这个取消监听的

55:38.660 --> 55:40.020
对不对啊像它后面

55:41.220 --> 55:43.380
后面这边啊它返回的是个函数

55:43.380 --> 55:44.660
函数然后回头你调一下

55:44.660 --> 55:46.020
调一下它就取消监听了

55:46.420 --> 55:47.780
啊好

55:47.780 --> 55:48.980
然后接下来这边呢它

55:49.460 --> 55:52.580
它这边呢接收一个回调函数

55:52.660 --> 55:53.780
这个回调函数

55:53.780 --> 55:56.260
这个函数的话会在这个执行action之前

55:56.820 --> 55:58.180
啊那进行执行

55:58.180 --> 56:00.820
好大家这边呢就是它会得到一些这个参数

56:01.380 --> 56:02.980
啊比如这边有什么name啊

56:02.980 --> 56:04.020
有store啊

56:04.020 --> 56:06.260
有这个args after an error啊这些

56:06.260 --> 56:07.620
啊我们就看前三个就可以了

56:09.570 --> 56:11.650
OK啊这边的话name

56:11.650 --> 56:13.810
name就是你action的名称 store

56:14.450 --> 56:16.210
啊就是你是哪个仓库

56:16.770 --> 56:19.250
啊接下来这边是你传递过去的这个参数

56:19.730 --> 56:21.330
好我们这边的话我们也不做什么

56:21.330 --> 56:22.450
啊我们这边就打印一下

56:25.120 --> 56:26.560
打印一下啊name

56:27.920 --> 56:28.880
这边对应了name

56:29.600 --> 56:30.640
啊这边的话store

56:32.900 --> 56:33.700
对应的store

56:34.420 --> 56:35.460
啊这边args

56:36.820 --> 56:37.940
对应的args

56:39.380 --> 56:40.580
啊我们这边保存一下

56:41.300 --> 56:42.180
保存了之后

56:42.180 --> 56:43.460
然后接下这边过来看一下

56:43.460 --> 56:44.180
啊刷新一下

56:44.740 --> 56:45.780
啊不用增加

56:46.260 --> 56:47.300
增加的话你看这里

56:48.020 --> 56:48.740
啊你看这里

56:48.740 --> 56:49.780
这里的话这个name

56:49.780 --> 56:51.220
name的话这边是不是increment

56:51.940 --> 56:52.340
对不对

56:52.340 --> 56:53.060
我这边减

56:53.060 --> 56:53.620
减的话

56:54.580 --> 56:55.060
哎

56:57.180 --> 56:57.820
等一下啊

56:57.820 --> 56:59.180
我这减减怎么没出啊

57:01.140 --> 57:02.260
哦减我没用

57:02.740 --> 57:03.300
是不是没用

57:03.860 --> 57:04.980
啊我突然想起来了啊

57:04.980 --> 57:06.420
在这边的话这个加

57:06.420 --> 57:07.540
加的话这边是不是

57:07.540 --> 57:08.580
掉的是action

57:08.580 --> 57:10.660
减的话我们当时是不是直接减减了

57:10.660 --> 57:11.140
对不对

57:11.140 --> 57:12.340
我就说怎么回事

57:12.340 --> 57:14.260
啊这边加加的话你看这边

57:14.260 --> 57:15.780
你的这个action是不是increment

57:16.340 --> 57:17.380
啊这边就对应什么

57:17.380 --> 57:18.900
是不是对应你具体的这个store

57:19.460 --> 57:20.740
啊人家这边这个args

57:21.540 --> 57:22.740
args这个是啥呀

57:24.260 --> 57:26.340
这个有点像是时间对象一样

57:26.980 --> 57:28.020
是不是有点像是时间对象

57:28.660 --> 57:29.140
对不对

57:29.540 --> 57:31.220
啊这边看一下它的这个说明呢

57:32.340 --> 57:32.820
args

57:33.300 --> 57:36.020
啊传递给action的参数数组

57:36.020 --> 57:38.820
啊就你如果有这个参数传递给这个action的话

57:38.820 --> 57:40.100
啊他这边呢会有个数组

57:40.820 --> 57:41.860
啊我们这边看一下呢

57:41.860 --> 57:42.820
我们这边在这里

57:43.380 --> 57:43.940
在这边

57:45.140 --> 57:47.940
这边但是这边我没有获取到那个store是吧

57:47.940 --> 57:48.820
没获取到store

57:48.820 --> 57:50.100
我们看一下能不能监听啊

57:50.100 --> 57:52.740
我这边const一个store

57:52.740 --> 57:54.900
等于一个use car store

57:56.580 --> 57:57.860
好然后接下来的话

57:57.860 --> 57:59.300
我们这边把刚才那个

58:01.650 --> 58:02.530
刚才那个在哪里

58:03.490 --> 58:04.130
在这边

58:05.890 --> 58:07.330
这边监听他的变化

58:07.730 --> 58:08.930
啊把他拿过来

58:11.170 --> 58:12.210
啊我们这边我们看一下

58:15.120 --> 58:15.840
啊歌舞车

58:17.840 --> 58:19.040
啊我们这边刷新一下

58:19.920 --> 58:21.040
啊他这边不行

58:21.760 --> 58:22.640
啊他这边不行

58:22.640 --> 58:24.160
他这边get active pinia

58:24.160 --> 58:26.160
was called with no active pinia

58:26.160 --> 58:27.360
did you for god

58:27.360 --> 58:29.680
for god forget to install pinia

58:29.680 --> 58:30.720
啊这种方式不行

58:31.520 --> 58:32.000
ok

58:32.720 --> 58:34.560
说你这边呢这个viewer的这种写法

58:34.560 --> 58:35.680
啊他这边不得行

58:36.000 --> 58:36.880
他把这删了吧

58:39.200 --> 58:39.840
ok

58:39.840 --> 58:41.040
啊反正这里的话这里的话

58:41.040 --> 58:42.400
你能够理解啊

58:42.400 --> 58:44.480
能够理解他这边就是传递给action

58:44.480 --> 58:45.520
你在调用action的时候

58:45.520 --> 58:47.760
你可能会涉及到一些参数传递给他嘛

58:48.480 --> 58:49.440
对不对啊这边呢

58:49.440 --> 58:50.720
就是可以拿到这个参数

58:51.120 --> 58:52.720
啊啊除此之外的话

58:52.720 --> 58:53.600
这边还有些什么

58:54.080 --> 58:55.280
我们这边把刷新一下

58:59.860 --> 59:01.460
啊除此之外的话

59:01.460 --> 59:02.820
这边还有些什么

59:02.820 --> 59:03.940
还有一个after

59:05.140 --> 59:08.980
这个是在action返回或解决后的一个钩子

59:08.980 --> 59:10.980
啊就你能那个action那个函数

59:10.980 --> 59:12.020
啊执行完之后

59:12.020 --> 59:13.460
他的一个钩子函数

59:13.460 --> 59:14.500
啊on error

59:14.500 --> 59:16.100
on error 顾名思义就是什么

59:16.100 --> 59:17.460
是抛出错误的时候

59:17.940 --> 59:18.580
对不对

59:18.580 --> 59:19.860
啊这些都很简单

59:20.180 --> 59:23.460
啊啊这是关于这个action的这个监听

59:25.220 --> 59:28.340
啊这是关于订阅state和这个action

59:28.340 --> 59:29.380
啊最后一个

59:29.380 --> 59:32.340
最后一个是关于这个插件选项

59:32.740 --> 59:34.580
啊这个插件选项是什么意思

59:36.020 --> 59:37.300
啊这边的话是这样子的

59:37.860 --> 59:40.580
就大家还记不记得我们之前在用这个

59:40.580 --> 59:42.180
第三方插件的时候

59:42.180 --> 59:43.940
我们当时用了一个什么插件

59:43.940 --> 59:44.980
我们当时用了一个这个

59:46.180 --> 59:47.380
penia prugging

59:47.380 --> 59:49.140
啊这个precisted

59:49.140 --> 59:51.780
precisted的这个state

59:51.780 --> 59:53.380
就是做这个持久化的这个

59:53.940 --> 59:55.540
啊然后当时我们在用这个的时候

59:55.540 --> 59:56.580
然后我们这边

59:57.780 --> 59:58.900
我看是哪里呢

01:00:00.180 --> 01:00:01.300
是常库

01:00:01.940 --> 01:00:03.220
啊对常库这边

01:00:03.220 --> 01:00:03.860
常库这边的话

01:00:03.940 --> 01:00:06.500
你看我们这边是不是传入了这个第三个阐述

01:00:07.140 --> 01:00:07.940
对不对啊

01:00:07.940 --> 01:00:08.580
我们这边呢

01:00:08.580 --> 01:00:09.860
传入了这个第三个阐述

01:00:09.860 --> 01:00:11.300
如果你是这个setup的话

01:00:11.300 --> 01:00:12.580
这边它是第三个阐述

01:00:13.220 --> 01:00:15.460
如果你是这个OptionSAPI的话

01:00:15.460 --> 01:00:16.660
这边就直接写在什么

01:00:16.660 --> 01:00:17.860
这不写在这个对象里面了

01:00:18.340 --> 01:00:18.980
对不对

01:00:18.980 --> 01:00:19.860
那这个的话

01:00:19.860 --> 01:00:22.420
你插件实际上是可以拿得到的

01:00:23.540 --> 01:00:24.260
没有吧

01:00:24.260 --> 01:00:25.620
插件是可以拿得到的

01:00:25.620 --> 01:00:27.300
比如说你看我们之前写的插件

01:00:28.740 --> 01:00:30.980
我们之前比如说就以这个为例嘛

01:00:30.980 --> 01:00:31.540
啊这个边的话

01:00:31.540 --> 01:00:32.180
我们之前的话

01:00:32.180 --> 01:00:33.620
这个第一个插件是没有接收

01:00:34.020 --> 01:00:34.660
任何参数

01:00:35.140 --> 01:00:35.460
对不对

01:00:35.460 --> 01:00:36.180
然后第二个插件呢

01:00:36.180 --> 01:00:37.860
我们这边是接收了一个context

01:00:38.420 --> 01:00:39.140
好这边的话

01:00:39.140 --> 01:00:40.500
实际上你还可以干嘛呢

01:00:40.500 --> 01:00:41.460
还可以结构

01:00:42.180 --> 01:00:42.660
啊结构

01:00:42.660 --> 01:00:43.540
然后接下来这边呢

01:00:43.540 --> 01:00:45.060
它实际上有一个是干嘛

01:00:45.060 --> 01:00:46.020
有个OptionS

01:00:47.060 --> 01:00:47.780
OK好

01:00:47.780 --> 01:00:49.300
然后在这边你可以打印一下

01:00:51.140 --> 01:00:52.900
我们这边打印一下OptionS

01:00:55.700 --> 01:00:57.620
啊这边OptionS

01:00:59.620 --> 01:01:01.220
OptionS

01:01:01.780 --> 01:01:02.260
OK

01:01:02.260 --> 01:01:03.780
我们打印一下你这边你就知道了

01:01:04.340 --> 01:01:04.580
好

01:01:04.580 --> 01:01:05.700
我们这边让我们来看一下

01:01:06.500 --> 01:01:07.060
你看这里

01:01:08.020 --> 01:01:08.820
你看这里

01:01:08.820 --> 01:01:09.540
这里OptionS

01:01:09.540 --> 01:01:10.820
你看这边可以拿到什么

01:01:10.820 --> 01:01:12.100
什么action is getter

01:01:12.100 --> 01:01:12.740
你看这边的话

01:01:12.740 --> 01:01:13.620
是不是就可以拿到

01:01:14.340 --> 01:01:15.780
你的这个参数啊

01:01:15.780 --> 01:01:16.180
对不对

01:01:16.180 --> 01:01:17.220
啊如果是代办事项

01:01:18.020 --> 01:01:18.820
代办事项的话

01:01:18.820 --> 01:01:19.380
你看这边

01:01:19.380 --> 01:01:20.660
这边让我这边action是

01:01:20.660 --> 01:01:21.780
大家这边是不是可以拿到

01:01:22.340 --> 01:01:23.060
你的这个选项

01:01:23.780 --> 01:01:24.340
对不对

01:01:24.340 --> 01:01:26.420
啊也就是说这边让这个插件选项的话

01:01:26.420 --> 01:01:27.620
实际上就简单

01:01:27.620 --> 01:01:28.020
说了一下

01:01:28.020 --> 01:01:29.380
就是你在插件里面

01:01:29.380 --> 01:01:31.060
如何去获取

01:01:31.060 --> 01:01:33.140
它传递给插件的这些参数

01:01:34.740 --> 01:01:35.540
插件选项

01:01:38.100 --> 01:01:40.100
插件选项

01:01:40.820 --> 01:01:41.220
主要

01:01:42.420 --> 01:01:44.340
主要就是介绍

01:01:44.900 --> 01:01:46.100
在插件中

01:01:47.380 --> 01:01:48.580
插件中

01:01:48.580 --> 01:01:50.340
如何获取

01:01:51.940 --> 01:01:55.540
传递给插件的这个数据

01:01:56.660 --> 01:01:57.220
OK

01:01:57.220 --> 01:01:58.340
就这个意思

01:01:58.340 --> 01:01:59.220
啊就这个意思

01:01:59.220 --> 01:02:00.900
比如说我们这边我们再用这个

01:02:01.780 --> 01:02:03.460
我们这边再用这个插件的时候

01:02:04.020 --> 01:02:05.780
我们这个是不是就传递给那个插件的吗

01:02:06.580 --> 01:02:07.300
是不是传递给

01:02:07.940 --> 01:02:09.380
传递给这个插件的

01:02:09.380 --> 01:02:10.740
是不是传递给他的

01:02:10.740 --> 01:02:11.060
对不对

01:02:11.060 --> 01:02:12.180
那接下来就有个问题

01:02:12.180 --> 01:02:14.500
那你这个插件里面如何获取到它

01:02:15.220 --> 01:02:15.540
对不对

01:02:15.540 --> 01:02:17.060
我们之前自己写插件的时候

01:02:17.060 --> 01:02:18.580
我们这边的话就是没有

01:02:18.580 --> 01:02:19.700
就是没有想的

01:02:19.700 --> 01:02:20.900
就是当时没有介绍

01:02:20.900 --> 01:02:22.340
啊如何获取到这个数据

01:02:22.340 --> 01:02:23.060
实际上很简单

01:02:23.060 --> 01:02:24.660
这边就通过OP拼式

01:02:24.660 --> 01:02:26.980
啊这个的话在它的官网这边是

01:02:26.980 --> 01:02:27.540
介绍了的

01:02:28.660 --> 01:02:29.620
在插件

01:02:30.340 --> 01:02:31.220
插件这边

01:02:31.220 --> 01:02:32.180
增加新的选项

01:02:33.140 --> 01:02:34.020
看到没有

01:02:34.020 --> 01:02:34.660
啊这边

01:02:34.660 --> 01:02:36.500
这边的话比如说你定义了这个选项

01:02:36.500 --> 01:02:38.900
它这边是使用的是这个Option Store

01:02:38.900 --> 01:02:41.060
Option Store它接下来它这边是写到这里的

01:02:41.700 --> 01:02:42.660
写到这里的时候

01:02:42.660 --> 01:02:44.340
然后接下来你这边怎么获取呢

01:02:44.340 --> 01:02:47.060
啊你这边其实这边的话就是这个插件

01:02:47.060 --> 01:02:49.060
啊这边结构拿到什么呢

01:02:49.060 --> 01:02:50.260
拿到这个Option

01:02:50.980 --> 01:02:51.300
看到没有

01:02:51.300 --> 01:02:53.620
拿到Option是在这边就可以获取到

01:02:54.740 --> 01:02:55.700
获取到这个

01:02:55.700 --> 01:02:56.900
你这边定义了这个对象

01:02:57.540 --> 01:02:58.340
啊就这个意思

01:02:58.980 --> 01:03:00.180
把这个链接

01:03:02.340 --> 01:03:02.980
放到这里吧

01:03:06.340 --> 01:03:07.140
放这里啊

01:03:08.980 --> 01:03:09.380
官网

01:03:10.500 --> 01:03:11.380
官网介绍

01:03:12.660 --> 01:03:13.540
这里

01:03:13.540 --> 01:03:14.260
ok

01:03:14.260 --> 01:03:15.780
通过这种方式就可以拿到

01:03:17.300 --> 01:03:20.500
啊这就是关于这个整个补充内容

01:03:20.500 --> 01:03:21.700
啊整个补充内容

01:03:21.700 --> 01:03:22.500
其实主要讲了一下

01:03:22.500 --> 01:03:24.420
关于这个辅助函数

01:03:24.420 --> 01:03:26.020
啊这辅助函数其实也很简单

01:03:26.820 --> 01:03:29.380
啊我们写了一个购物车对吧

01:03:29.380 --> 01:03:31.060
剩下的两个的话其实也很简单

01:03:32.340 --> 01:03:34.580
啊这是关于这几颗的内容啊

01:03:34.580 --> 01:03:36.900
最佳实践和补充内容

01:03:36.900 --> 01:03:38.340
好那最后的话这道面试题

01:03:38.980 --> 01:03:40.180
最后这道面试题

01:03:40.980 --> 01:03:42.580
呃有哪些最佳实践

01:03:42.580 --> 01:03:44.580
请你列举一到两条

01:03:44.580 --> 01:03:46.100
啊那我这边我就直接把拿过来了

01:03:46.740 --> 01:03:48.580
实际上就是我们刚才上面说写的那些

01:03:51.520 --> 01:03:54.000
对不对啊就我们上面说写的那些啊这边

01:03:54.720 --> 01:03:58.080
使用专门的状况来管理逐渐的状态

01:03:58.080 --> 01:04:00.320
啊大家这边使用这个拼鸭啊

01:04:00.320 --> 01:04:02.720
人家这边呢就是避免直接操作这个store

01:04:03.280 --> 01:04:04.800
使用贴饰

01:04:04.800 --> 01:04:07.440
还有就是根据这个不同的功能模块

01:04:07.440 --> 01:04:10.240
创建独立的状态场面对不对

01:04:10.880 --> 01:04:14.800
ok好这就是关于这几颗的内容啊

01:04:14.800 --> 01:04:17.440
大家下来的话可以把这几颗内容自己再看一下

01:04:18.080 --> 01:04:20.320
好我们这几颗就到这里啊再见

