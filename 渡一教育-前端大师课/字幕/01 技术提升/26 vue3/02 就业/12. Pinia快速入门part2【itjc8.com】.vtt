WEBVTT

00:00.000 --> 00:02.000
OK 欢迎回来

00:02.000 --> 00:04.500
上节课的话我们讲了这个拼鸭

00:04.500 --> 00:06.500
相关的这个快速入门

00:06.500 --> 00:09.500
当时的话我们讲的是这个选项式风格

00:09.500 --> 00:10.500
对吧

00:10.500 --> 00:12.500
好 这节课的话我们就来

00:12.500 --> 00:14.500
说一下它的另外一种风格

00:14.500 --> 00:16.500
就它的这个组合式风格

00:17.500 --> 00:19.500
OK 这边的话

00:19.500 --> 00:21.500
组合式

00:21.500 --> 00:23.500
组合式风格

00:23.500 --> 00:25.500
好 组合式风格的话

00:25.500 --> 00:26.500
那我们这边的话

00:26.500 --> 00:28.500
把上节课的那个代码把它打开

00:28.500 --> 00:30.500
在这里

00:30.500 --> 00:33.500
上节课的话我们这边的话是写了一个技术器

00:33.500 --> 00:35.500
是吧 这边这个container

00:35.500 --> 00:37.500
写了一个技术器

00:37.500 --> 00:38.500
这个技术器的话

00:38.500 --> 00:40.500
然后我们这边它对应的仓库

00:40.500 --> 00:42.500
对应的是这个

00:42.500 --> 00:43.500
这关了

00:43.500 --> 00:44.500
对应的是这个

00:44.500 --> 00:46.500
这边Use Container Store

00:46.500 --> 00:47.500
对应是这个

00:47.500 --> 00:48.500
这个的话我们采用的就是什么

00:48.500 --> 00:50.500
采用的是不是就是OPIN API

00:50.500 --> 00:52.500
对不对 选项式的风格

00:52.500 --> 00:53.500
好 那接下来的话

00:53.500 --> 00:56.500
这节课的话我们就来写这个to do list

00:56.500 --> 00:58.500
这个呢是那个代办事项

00:58.500 --> 01:01.500
这个的话我们会采用这种组合式的风格

01:01.500 --> 01:02.500
好 这边呢仍然是

01:02.500 --> 01:04.500
首先我把那个

01:04.500 --> 01:06.500
就是先把那个样式我先把它拿过来

01:06.500 --> 01:08.500
样式就不带着写了

01:08.500 --> 01:10.500
把这个样式把它过来

01:10.500 --> 01:14.130
好 放到这里

01:14.130 --> 01:16.130
这里的话都是一些很常规的样式

01:16.130 --> 01:18.130
好 这边让我把它折起来

01:18.130 --> 01:19.130
好 折起来之后

01:19.130 --> 01:21.130
然后接下来来到这边

01:22.130 --> 01:24.130
这边的话首先

01:24.130 --> 01:26.130
DIV.container

01:26.130 --> 01:27.130
这里一样的

01:27.130 --> 01:30.130
如果我这边没有做这个任何特殊的说明

01:30.130 --> 01:33.130
那这边这个样式的话就是来源于这里的

01:33.130 --> 01:34.130
OK

01:34.130 --> 01:37.130
说起来我这边的话就是这里这个style

01:37.130 --> 01:38.130
style.css

01:38.130 --> 01:40.130
我这边做了一个全局的样式

01:40.130 --> 01:42.130
这边把Fontweight设置成200

01:42.130 --> 01:44.130
然后在这个main.js这边

01:44.130 --> 01:45.130
这边引入了

01:45.130 --> 01:47.130
OK 这个样式就一句

01:47.130 --> 01:48.130
这个没有什么

01:48.130 --> 01:50.130
好 来到这里

01:50.130 --> 01:52.130
好 这边的话

01:52.130 --> 01:54.130
我们来做这个代办事项

01:54.130 --> 01:55.130
代办事项的话

01:55.130 --> 01:57.130
首先我们先把仓库建起来吧

01:57.130 --> 01:58.130
好吧

01:58.130 --> 02:01.640
好 这边这个它又想起来了

02:01.640 --> 02:02.640
好 我们这边呢

02:02.640 --> 02:03.640
我们新创建一个文件

02:03.640 --> 02:06.640
这边呢 叫做use

02:06.640 --> 02:10.640
use.liststore.js

02:10.640 --> 02:12.640
你可以看到我们这边呢

02:12.640 --> 02:13.640
不同的这个功能模块

02:13.640 --> 02:15.640
我们这边就创建这个不同的这个store

02:15.640 --> 02:16.640
就可以了

02:16.640 --> 02:17.640
好 在这边

02:17.640 --> 02:22.640
这边的话首先 import from this pin

02:22.640 --> 02:24.640
这边的话我们先引入什么呢

02:24.640 --> 02:27.640
这边我们先引入这个define

02:27.640 --> 02:28.640
definestore

02:28.640 --> 02:29.640
对不对

02:29.640 --> 02:30.640
先把它引入

02:30.640 --> 02:31.640
引入之后

02:31.640 --> 02:32.640
然后下这边

02:32.640 --> 02:34.640
使用这个definestore

02:34.640 --> 02:35.640
通过它

02:35.640 --> 02:37.640
是不是来创建一个这个称库

02:37.640 --> 02:38.640
对不对

02:38.640 --> 02:39.640
好 我们这边的话

02:39.640 --> 02:40.640
export

02:40.640 --> 02:42.640
然后const

02:42.640 --> 02:44.640
const一个什么呢

02:44.640 --> 02:46.640
这边use.liststore

02:46.640 --> 02:49.400
等于这个

02:49.400 --> 02:50.400
OK 回头了

02:50.400 --> 02:52.400
把这个把它导出出去

02:52.400 --> 02:53.400
好 在这边

02:53.400 --> 02:54.400
这边的话

02:54.400 --> 02:55.400
首先第一个

02:55.400 --> 02:56.400
当然是它的这个

02:56.400 --> 02:57.400
唯一的这个id

02:57.400 --> 02:58.400
我们这边就叫做list

02:58.400 --> 03:00.400
好 人家第二个

03:00.400 --> 03:01.400
第二个的话

03:01.400 --> 03:02.400
我们这边就是一个

03:02.400 --> 03:04.400
函数

03:04.400 --> 03:05.400
看到没有

03:05.400 --> 03:06.400
第二个的话

03:06.400 --> 03:07.400
这边是个箭头函数

03:07.400 --> 03:09.400
在箭头函数里面的话

03:09.400 --> 03:10.400
然后接下来

03:10.400 --> 03:11.400
我们这边的话

03:11.400 --> 03:13.400
就要使用这种组合

03:13.400 --> 03:15.400
组合API风格

03:15.400 --> 03:16.400
那和刚才

03:16.400 --> 03:17.400
刚才的那个是

03:17.400 --> 03:19.400
选项是API的风格

03:19.400 --> 03:20.400
对不对

03:20.400 --> 03:21.400
它这边呢

03:21.400 --> 03:22.400
它是个对象

03:22.400 --> 03:23.400
对象里面的

03:23.400 --> 03:24.400
选项

03:24.400 --> 03:25.400
对不对

03:25.400 --> 03:26.400
好 那在这边

03:26.400 --> 03:27.400
这边它就是组合式的风格

03:27.400 --> 03:28.400
那接下来

03:28.400 --> 03:29.400
我们首先呢

03:29.400 --> 03:31.400
要创建一个这个数据

03:31.400 --> 03:32.400
创建个数据的话

03:32.400 --> 03:33.400
我们这边使用什么呢

03:33.400 --> 03:34.400
使用reactive

03:34.400 --> 03:35.400
那这边呢

03:35.400 --> 03:36.400
首先要import

03:38.400 --> 03:41.400
import一个reactive

03:41.400 --> 03:42.400
然后from

03:42.400 --> 03:43.400
这边呢

03:43.400 --> 03:44.400
是从view里面

03:44.400 --> 03:45.400
引入

03:45.400 --> 03:46.400
引入reactive

03:46.400 --> 03:47.400
好 人家这边呢

03:47.400 --> 03:51.030
是创建

03:51.030 --> 03:52.030
创建

03:52.030 --> 03:54.030
仓库数据

03:54.030 --> 03:55.030
类似于什么呢

03:55.030 --> 03:57.030
类似于state

03:57.030 --> 03:59.030
这边我们const

03:59.030 --> 04:00.030
一个list

04:00.030 --> 04:05.300
等于一个reactive

04:05.300 --> 04:07.300
reactive

04:07.300 --> 04:08.300
reactive

04:08.300 --> 04:09.300
然后接下来这里

04:09.300 --> 04:11.300
这里的话是一个对象

04:11.300 --> 04:13.300
对象里面的items

04:13.300 --> 04:15.300
对应的是一个数据

04:15.300 --> 04:16.300
数据里面

04:16.300 --> 04:17.300
然后有一些这个

04:17.300 --> 04:18.300
默认的一些

04:18.300 --> 04:20.300
这个就是代办事项

04:20.300 --> 04:22.300
直接把这个我把它拿过来

04:22.300 --> 04:26.830
再把它拿过来

04:27.830 --> 04:28.830
OK

04:28.830 --> 04:30.830
这边list下面有个items

04:30.830 --> 04:31.830
items对应是个数据

04:31.830 --> 04:32.830
数据里面就有

04:32.830 --> 04:34.830
一项一项的代办事项

04:34.830 --> 04:36.830
这个第一个是学习评论

04:36.830 --> 04:37.830
这边有一个

04:37.830 --> 04:38.830
easy completed

04:38.830 --> 04:39.830
是否完成

04:39.830 --> 04:40.830
如果是q的话

04:40.830 --> 04:41.830
它就完成了

04:41.830 --> 04:42.830
如果是false的话

04:42.830 --> 04:43.830
它就没有完成

04:43.830 --> 04:44.830
OK

04:44.830 --> 04:45.830
好 然后完事之后

04:45.830 --> 04:46.830
你就需要干嘛呢

04:46.830 --> 04:48.830
你就需要把它倒出出去

04:48.830 --> 04:49.830
OK

04:49.830 --> 04:50.830
所以这边呢

04:50.830 --> 04:52.830
就是需要return

04:52.830 --> 04:53.830
return

04:53.830 --> 04:55.830
然后把这个list

04:56.830 --> 04:58.830
把它返回出去

04:58.830 --> 04:59.830
OK

04:59.830 --> 05:00.830
这个的话就是使用

05:00.830 --> 05:02.830
这种组合API的这种风格

05:02.830 --> 05:04.830
好 那回头的话

05:04.830 --> 05:05.830
我们在这边

05:05.830 --> 05:06.830
在to-do list这边

05:06.830 --> 05:07.830
这边我们就来用一下

05:07.830 --> 05:08.830
这边的话

05:08.830 --> 05:09.830
用法实际上是

05:09.830 --> 05:11.830
和之前那个组件

05:11.830 --> 05:12.830
实际上是一样的

05:12.830 --> 05:13.830
对不对

05:13.830 --> 05:14.830
首先我们这边

05:14.830 --> 05:16.830
首先import

05:16.830 --> 05:20.830
import一个use list store

05:22.830 --> 05:23.830
front

05:23.830 --> 05:24.830
这边呢是

05:24.830 --> 05:26.830
下面的store

05:26.830 --> 05:31.830
下面的这个use list store.js

05:32.830 --> 05:33.830
先把它引入进来

05:33.830 --> 05:34.830
引入进来之后呢

05:34.830 --> 05:35.830
它是一个方法

05:35.830 --> 05:36.830
对吧

05:36.830 --> 05:38.830
因为你这边倒出的是个方法

05:38.830 --> 05:39.830
对不对

05:39.830 --> 05:40.830
这边倒出的相当于是

05:40.830 --> 05:42.830
倒出的是这个define这个方法

05:42.830 --> 05:43.830
好 大家这边

05:43.830 --> 05:44.830
你调用一下

05:44.830 --> 05:45.830
use store

05:46.830 --> 05:47.830
好 这边是不是

05:47.830 --> 05:48.830
可以得到一个仓库

05:48.830 --> 05:50.830
const一个store

05:50.830 --> 05:51.830
得到仓库

05:52.830 --> 05:53.830
好

05:53.830 --> 05:55.830
获取

05:55.830 --> 05:58.830
获取到仓库

05:58.830 --> 05:59.830
那获取到仓库之后

05:59.830 --> 06:00.830
然后接下来

06:00.830 --> 06:01.830
我就可以从仓库里面干嘛

06:01.830 --> 06:03.830
是不是解构这个数据出来

06:03.830 --> 06:04.830
但你注意

06:04.830 --> 06:05.830
注意你这边

06:05.830 --> 06:06.830
仍然是应该是使用什么呢

06:06.830 --> 06:09.830
使用这个store to refs

06:09.830 --> 06:11.830
所以我们这边import

06:11.830 --> 06:15.830
import一个store to refs

06:15.830 --> 06:17.830
然后front这个pn

06:17.830 --> 06:18.830
好 大家这边

06:18.830 --> 06:19.830
从仓库

06:20.830 --> 06:22.830
从仓库

06:22.830 --> 06:23.830
解构

06:23.830 --> 06:26.830
解构数据出来

06:26.830 --> 06:28.830
那这边const

06:28.830 --> 06:30.830
const一个list

06:30.830 --> 06:33.830
等于一个store to refs

06:33.830 --> 06:35.830
把这个store

06:35.830 --> 06:36.830
把它进去

06:36.830 --> 06:37.830
好 那这个数据

06:37.830 --> 06:39.830
实际上就已经就拿到了

06:39.830 --> 06:40.830
已经就拿到了

06:40.830 --> 06:41.830
好 拿到之后

06:41.830 --> 06:42.830
然后这样我们在这边

06:42.830 --> 06:43.830
我们把它渲染出来

06:43.830 --> 06:44.830
好吧

06:44.830 --> 06:45.830
好 这边的话

06:45.830 --> 06:47.830
我们这边代办四项

06:47.830 --> 06:48.830
代办四项实际上

06:48.830 --> 06:49.830
应该分成两个部分

06:49.830 --> 06:50.830
一般来讲

06:50.830 --> 06:51.830
就是上面是添加的

06:51.830 --> 06:52.830
对吧

06:52.830 --> 06:53.830
这边有个输入框

06:53.830 --> 06:54.830
这边有个按钮

06:54.830 --> 06:55.830
下面的话

06:55.830 --> 06:57.830
一条一条的代办四项

06:57.830 --> 06:58.830
对不对

06:58.830 --> 06:59.830
所以这边分成两个部分

06:59.830 --> 07:01.830
一个是添加

07:02.830 --> 07:06.830
添加新的代办四项

07:06.830 --> 07:07.830
好 一个是什么呢

07:07.830 --> 07:15.320
一个是代办四项列表

07:15.320 --> 07:16.320
代办四项列表

07:16.320 --> 07:17.320
OK

07:17.320 --> 07:18.320
好 那我们这边

07:18.320 --> 07:22.320
DIV.input container

07:22.320 --> 07:25.320
这边认识下面写好的样式列

07:25.320 --> 07:26.320
好 然后在这边

07:26.320 --> 07:30.320
input text

07:30.320 --> 07:31.320
然后这边的话

07:31.320 --> 07:32.320
给了一个class

07:32.320 --> 07:35.320
叫做nam input

07:35.320 --> 07:36.320
OK

07:36.320 --> 07:37.320
Name和id

07:37.320 --> 07:39.320
这个我们就不要了

07:39.320 --> 07:40.320
好 然后这边

07:40.320 --> 07:42.320
这边有个button

07:42.320 --> 07:47.160
button这边是一个添加

07:47.160 --> 07:48.160
添加

07:48.160 --> 07:50.160
好 这边有一个class

07:50.160 --> 07:51.160
等于一个button

07:51.160 --> 07:53.160
这个是上面

07:53.160 --> 07:56.160
上面这个就是添加新的代办四项

07:56.160 --> 07:57.160
好 下面

07:57.160 --> 07:58.160
下面的话是这个列表

07:58.160 --> 08:01.160
把这个列表我们把它选择出来

08:01.160 --> 08:02.160
这边list

08:02.160 --> 08:04.160
list然后下这边DIV

08:04.160 --> 08:05.160
DIV的话

08:05.160 --> 08:10.630
这边就应该是w-4

08:10.630 --> 08:11.630
w-4

08:11.630 --> 08:14.630
这边是it index

08:14.630 --> 08:18.630
然后in list.items

08:18.630 --> 08:19.630
对吧

08:19.630 --> 08:20.630
list.items

08:20.630 --> 08:21.630
对了吗

08:21.630 --> 08:22.630
这边是items

08:22.630 --> 08:24.630
对的是数组

08:24.630 --> 08:26.630
这边应该是便利items

08:26.630 --> 08:27.630
然后接下来

08:27.630 --> 08:29.630
这边的话给它一个key

08:29.630 --> 08:30.630
key的话就取什么

08:30.630 --> 08:32.630
就取index

08:32.630 --> 08:33.630
好吧

08:33.630 --> 08:34.630
这边class

08:34.630 --> 08:35.630
class 这边items

08:35.630 --> 08:37.630
下面写好的

08:37.630 --> 08:38.630
好 然后里面

08:38.630 --> 08:40.630
里面的话就分成两个

08:40.630 --> 08:41.630
一个是它的内容

08:41.630 --> 08:43.630
然后一个是后面的插插

08:43.630 --> 08:45.630
一个是内容

08:45.630 --> 08:47.630
一个是内容

08:47.630 --> 08:49.630
一个是删除

08:49.630 --> 08:50.630
分成这两个部分

08:50.630 --> 08:51.630
那接下来的话

08:51.630 --> 08:53.630
这边就是DIV

08:53.630 --> 08:55.630
DIV

08:55.630 --> 08:57.630
这边it

08:57.630 --> 08:59.630
it.txt

08:59.630 --> 09:00.630
对吧

09:00.630 --> 09:01.630
你看一下这里

09:01.630 --> 09:03.630
这边是不是txt

09:03.630 --> 09:04.630
好

09:04.630 --> 09:05.630
然后接下来

09:05.630 --> 09:06.630
这边有一个删除很有

09:06.630 --> 09:08.630
DIV.cruz

09:08.630 --> 09:11.630
这边是一个插

09:11.630 --> 09:12.630
ok

09:12.630 --> 09:13.630
好 写完之后

09:13.630 --> 09:14.630
然后保存一下

09:14.630 --> 09:15.630
保存了

09:15.630 --> 09:16.630
然后先我们这边来看一下

09:16.630 --> 09:17.630
我们一点点来玩玩

09:17.630 --> 09:19.630
点击代办十项

09:20.630 --> 09:21.630
对不对

09:21.630 --> 09:22.630
这边出来了

09:22.630 --> 09:23.630
出来了之后

09:23.630 --> 09:25.630
让我们一点一点来玩玩

09:25.630 --> 09:26.630
首先第一个

09:26.630 --> 09:27.630
这边的话就是关于

09:27.630 --> 09:29.630
你那个完成和未完成

09:29.630 --> 09:30.630
你看我们这边

09:30.630 --> 09:31.630
是有这个不同的

09:31.630 --> 09:32.630
这个状态的

09:32.630 --> 09:33.630
把这个关了

09:33.630 --> 09:34.630
我们这边是有不同的

09:34.630 --> 09:35.630
状态的

09:35.630 --> 09:36.630
比如第1个和第3个

09:36.630 --> 09:38.630
它是完成了的

09:38.630 --> 09:40.630
这个是没有完成的

09:40.630 --> 09:41.630
如果完成的话

09:41.630 --> 09:42.630
理论上来讲

09:42.630 --> 09:43.630
我这边给他什么

09:43.630 --> 09:44.630
我给他稍微

09:44.630 --> 09:46.630
比如画个横线

09:46.630 --> 09:47.630
对不对

09:47.630 --> 09:48.630
我给他画个横线

09:48.630 --> 09:50.630
好 那接下来这边

09:50.630 --> 09:51.630
这边的话

09:51.630 --> 09:53.630
样式类实际上已经写好了

09:54.630 --> 09:56.630
再我看一下完成

09:57.630 --> 09:58.630
在这里

09:58.630 --> 09:59.630
样式类已经写好了

09:59.630 --> 10:00.630
那这边的话

10:00.630 --> 10:01.630
无外乎是什么

10:01.630 --> 10:02.630
这边无外乎就是

10:02.630 --> 10:03.630
你这边

10:03.630 --> 10:04.630
如何把这个样式类

10:04.630 --> 10:05.630
把它挂上去

10:05.630 --> 10:06.630
就有些他会挂

10:06.630 --> 10:07.630
有些他不会挂

10:07.630 --> 10:08.630
对不对

10:08.630 --> 10:09.630
说这边的话

10:09.630 --> 10:11.630
我们这边冒号 class

10:11.630 --> 10:13.630
冒号 class 等于个什么呢

10:13.630 --> 10:16.630
这边取决于你 it 点

10:16.630 --> 10:19.630
completed

10:19.630 --> 10:20.630
取决于你这个字

10:20.630 --> 10:22.630
这个字如果是 true

10:22.630 --> 10:24.630
让我这边把 dair 挂上去

10:24.630 --> 10:25.630
否则的话

10:25.630 --> 10:26.630
我这边就不挂

10:26.630 --> 10:27.630
对不对

10:27.630 --> 10:29.630
来 我这边来看一下

10:29.630 --> 10:30.630
保存

10:30.630 --> 10:32.630
是不是出来了

10:32.630 --> 10:33.630
对不对

10:33.630 --> 10:34.630
就出来了

10:34.630 --> 10:36.630
好 那我们这边的话

10:36.630 --> 10:38.630
首先这个代办事项

10:38.630 --> 10:40.630
我们这边就已经写出来了

10:40.630 --> 10:41.630
写出来了之后

10:41.630 --> 10:42.630
然后接下来

10:42.630 --> 10:43.630
我们一步一步来完成它

10:43.630 --> 10:45.630
那首先第一步

10:45.630 --> 10:46.630
第一步的话就是我这里

10:46.630 --> 10:47.630
这里的话

10:47.630 --> 10:48.630
我在点击添加之后

10:48.630 --> 10:50.630
比如说我新增一个

10:50.630 --> 10:52.630
新增一个比较复习

10:52.630 --> 10:53.630
复习为优异

10:53.630 --> 10:54.630
好 那点击添加

10:54.630 --> 10:55.630
点击添加之后

10:55.630 --> 10:57.630
你这边是不是应该是新增

10:57.630 --> 10:59.630
就有一项新增的这个项目

10:59.630 --> 11:01.630
说过来

11:01.630 --> 11:02.630
对不对

11:02.630 --> 11:03.630
那接下来

11:03.630 --> 11:04.630
我们这边

11:04.630 --> 11:06.630
给它绑定一个点击事件

11:06.630 --> 11:09.630
click 等于一个

11:09.630 --> 11:13.630
and handle

11:13.630 --> 11:14.630
好 那接下来

11:14.630 --> 11:15.630
下面的话

11:15.630 --> 11:18.630
这边就应该对应有这么一个function

11:18.630 --> 11:19.630
对不对

11:19.630 --> 11:20.630
and handle

11:20.630 --> 11:24.580
这个的话是添加

11:24.580 --> 11:29.580
添加新的代办事项

11:29.580 --> 11:30.580
OK

11:30.580 --> 11:32.580
好 来这边来盘一下这里的逻辑

11:32.580 --> 11:34.580
自己来理一下这里的逻辑

11:34.580 --> 11:35.580
这里应该是什么

11:35.580 --> 11:41.590
是不是首先

11:41.590 --> 11:46.590
首先拿到用户的输入

11:46.590 --> 11:47.590
对不对

11:47.590 --> 11:48.590
然后接下来干嘛

11:48.590 --> 11:50.590
来着是不是添加到

11:50.590 --> 11:53.590
仓库里面的这个状态里面

11:53.590 --> 11:56.590
仓库里面

11:56.590 --> 11:57.590
对不对

11:57.590 --> 12:00.590
添加到这个状态仓库

12:00.590 --> 12:01.590
啊 添加到这里面

12:01.590 --> 12:03.590
好 那一步一步来呗

12:03.590 --> 12:05.590
那首先拿到用户的输入

12:05.590 --> 12:06.590
用户的输入

12:06.590 --> 12:07.590
用户在哪里输入

12:07.590 --> 12:09.590
用户是不是在这个input这里输入

12:09.590 --> 12:12.030
对不对

12:12.030 --> 12:13.030
用户在这里输入

12:13.030 --> 12:14.030
这里输入的话

12:14.030 --> 12:15.030
我想要拿到用户的字

12:15.030 --> 12:16.030
那这边做一个什么

12:16.030 --> 12:17.030
是做一个这个

12:17.030 --> 12:19.030
这个双手绑定

12:19.030 --> 12:22.030
vigamodel等于一个

12:22.030 --> 12:25.720
这个new item

12:25.720 --> 12:26.720
这边多了一个

12:26.720 --> 12:27.720
等于一个new item

12:27.720 --> 12:29.720
那你在下面

12:29.720 --> 12:30.720
这边我们首先

12:30.720 --> 12:33.720
import一个

12:33.720 --> 12:35.720
ref

12:35.720 --> 12:37.720
from这个view

12:37.720 --> 12:38.720
ok 好

12:38.720 --> 12:39.720
然后在这边呢

12:39.720 --> 12:40.720
是不是创建一个

12:40.720 --> 12:42.720
const一个new item

12:42.720 --> 12:44.720
等于一个ref

12:44.720 --> 12:45.720
而一开始是什么呢

12:45.720 --> 12:46.720
一开始是空置串

12:46.720 --> 12:48.720
这个的话是和

12:48.720 --> 12:50.720
和这个输入框

12:50.720 --> 12:53.720
做这个双向绑定

12:53.720 --> 12:56.680
对不对

12:56.680 --> 12:57.680
和输入框做双向绑定的

12:57.680 --> 12:58.680
那回头的话

12:58.680 --> 12:59.680
你直接通过什么

12:59.680 --> 13:00.680
是不是直接通过

13:00.680 --> 13:01.680
这个new item

13:01.680 --> 13:03.680
点这个value

13:03.680 --> 13:04.680
所以就可以拿到

13:04.680 --> 13:05.680
用户输入的字

13:05.680 --> 13:06.680
这个的话

13:06.680 --> 13:07.680
不是太大的问题

13:07.680 --> 13:09.680
好 拿到这个值之后

13:09.680 --> 13:10.680
然后接下来

13:10.680 --> 13:11.680
我们这边的话

13:11.680 --> 13:12.680
要进行一个添加

13:12.680 --> 13:13.680
要进行一个添加的话

13:13.680 --> 13:14.680
你可以直接干嘛呢

13:14.680 --> 13:16.680
直接在这个list.items

13:16.680 --> 13:17.680
里面

13:17.680 --> 13:18.680
直接推入

13:18.680 --> 13:20.680
这个是可以的

13:20.680 --> 13:21.680
拿到 拿到之后

13:21.680 --> 13:22.680
然后接下来的话

13:22.680 --> 13:23.680
我们这边记一下

13:23.680 --> 13:24.680
通过

13:24.680 --> 13:29.400
通过这个new item

13:29.400 --> 13:30.400
new item.value

13:30.400 --> 13:33.400
就可以拿到

13:33.400 --> 13:36.400
用户所输入的这个

13:36.400 --> 13:37.400
值

13:37.400 --> 13:38.400
对不对

13:38.400 --> 13:39.400
好 拿到之后

13:39.400 --> 13:40.400
然后接下来

13:40.400 --> 13:41.400
你这边

13:41.400 --> 13:42.400
你可以做个判断

13:42.400 --> 13:43.400
稍微做个判断

13:43.400 --> 13:46.400
一副new item.value

13:46.400 --> 13:47.400
就如果它这个

13:47.400 --> 13:48.400
有值

13:48.400 --> 13:49.400
我们是不是猜

13:49.400 --> 13:51.400
进行这个添加操作

13:51.400 --> 13:52.400
对吧

13:52.400 --> 13:54.400
for the else

13:54.400 --> 13:57.400
这边我们window.alert

13:57.400 --> 13:58.400
这边的话

13:58.400 --> 13:59.400
我们弹出

13:59.400 --> 14:00.400
这里的话就是

14:00.400 --> 14:01.400
请填写

14:01.400 --> 14:05.400
请填写新增项目

14:05.400 --> 14:06.400
给它一个提示

14:06.400 --> 14:07.400
好 那接下来

14:07.400 --> 14:08.400
这边添加

14:08.400 --> 14:09.400
添加的话

14:09.400 --> 14:10.400
这边的话

14:10.400 --> 14:11.400
建议还是什么呢

14:11.400 --> 14:12.400
建议还是你在这里

14:12.400 --> 14:13.400
在action里面

14:13.400 --> 14:15.400
写那么一个方法

14:15.400 --> 14:16.400
OK

14:16.400 --> 14:17.400
在action里面写一个方法

14:17.400 --> 14:18.400
所以我们在这边

14:18.400 --> 14:20.400
这边我们就要来写

14:20.400 --> 14:21.400
但是我们这边的话

14:21.400 --> 14:22.400
现在不是那种

14:22.400 --> 14:24.400
选项式了

14:24.400 --> 14:25.400
之前选项式的话

14:25.400 --> 14:26.400
这边是怎么写的

14:26.400 --> 14:29.400
这边都在action式

14:29.400 --> 14:30.400
对象里面

14:30.400 --> 14:31.400
这里是一个一个的

14:31.400 --> 14:32.400
这个方法

14:32.400 --> 14:33.400
好 那你这边

14:33.400 --> 14:34.400
这边这种

14:34.400 --> 14:35.400
组合一篇的话

14:35.400 --> 14:37.400
这边你就直接写就可以了

14:37.400 --> 14:41.540
这边方形

14:41.540 --> 14:42.540
方形

14:42.540 --> 14:45.540
这边比如end item

14:45.540 --> 14:46.540
接受一个什么呢

14:46.540 --> 14:47.540
接受一个你

14:47.540 --> 14:50.540
传入的这个新的item

14:50.540 --> 14:51.540
接受 接受了之后

14:51.540 --> 14:52.540
然后接下来的话

14:52.540 --> 14:54.540
这边就list

14:54.540 --> 14:55.540
list.items

14:55.540 --> 14:57.540
注意这边没有this

14:57.540 --> 14:58.540
这边没有this

14:58.540 --> 15:00.540
这边就直接这边list

15:00.540 --> 15:01.540
拿到 拿到之后

15:01.540 --> 15:02.540
然后再点items

15:02.540 --> 15:05.540
然后点push

15:05.540 --> 15:06.540
新推入一个什么

15:06.540 --> 15:08.540
是不是新推入一个对象

15:08.540 --> 15:10.540
对象的这个text

15:10.540 --> 15:13.540
对应的是new item

15:13.540 --> 15:14.540
对不对

15:14.540 --> 15:15.540
好 大家默认的

15:15.540 --> 15:16.540
这个状态是什么

15:16.540 --> 15:18.540
默认的状态是force

15:18.540 --> 15:19.540
对不对

15:19.540 --> 15:20.540
回到的话你这边

15:20.540 --> 15:23.540
把他导出出去

15:23.540 --> 15:24.540
可没有

15:24.540 --> 15:25.540
通过这种方式

15:25.540 --> 15:26.540
把他导出出去

15:26.540 --> 15:27.540
导出出去之后

15:27.540 --> 15:28.540
然后接下来的话

15:28.540 --> 15:29.540
来到你这边

15:29.540 --> 15:30.540
这边的话仍然是什么

15:30.540 --> 15:31.540
仍然是什么

15:31.540 --> 15:32.540
拿到这个对应的方法

15:32.540 --> 15:34.540
这边是从仓库

15:34.540 --> 15:35.540
这个仓库

15:35.540 --> 15:36.540
解构数据出来

15:36.540 --> 15:37.540
然后接下来

15:37.540 --> 15:39.540
这边从仓库

15:39.540 --> 15:41.540
解构方法

15:41.540 --> 15:42.540
出来

15:42.540 --> 15:45.540
好 这边那就是const

15:45.540 --> 15:48.540
const

15:48.540 --> 15:50.540
这边的话应该是什么

15:50.540 --> 15:52.540
这边应该是拿这个方法

15:52.540 --> 15:56.620
这个and item

15:56.620 --> 15:57.620
拿这个方法

15:57.620 --> 15:58.620
这个方法的话

15:58.620 --> 16:00.620
这边等于一个store

16:00.620 --> 16:02.620
从store里面

16:02.620 --> 16:03.620
拿到

16:03.620 --> 16:04.620
拿到之后

16:04.620 --> 16:06.620
然后接下来在这里

16:06.620 --> 16:08.620
这里是不是直接就调这个方法

16:08.620 --> 16:09.620
调这个方法

16:09.620 --> 16:11.620
然后把new item new

16:11.620 --> 16:12.620
这个venue

16:12.620 --> 16:14.620
传过去

16:14.620 --> 16:15.620
对不对

16:15.620 --> 16:17.620
好 来我们这边保存一下

16:17.620 --> 16:18.620
保存了之后

16:18.620 --> 16:19.620
然后接下来我们这边来看一下

16:19.620 --> 16:20.620
好不好是

16:20.620 --> 16:21.620
直接点添加

16:21.620 --> 16:23.620
是不是请填写新增项目

16:23.620 --> 16:27.620
我们这边有复习

16:27.620 --> 16:29.620
复习 没有意义

16:29.620 --> 16:30.620
添加

16:30.620 --> 16:31.620
这边的话

16:31.620 --> 16:32.620
添加没有效果

16:32.620 --> 16:33.620
我们看一下

16:33.620 --> 16:34.620
这边是报错了

16:34.620 --> 16:35.620
怎么回事

16:35.620 --> 16:39.570
这边就这样子吧

16:39.570 --> 16:42.880
看一下控制台

16:42.880 --> 16:45.880
and item is not function

16:45.880 --> 16:47.880
这边估计得刷新一下

16:47.880 --> 16:49.880
刷新一下

16:49.880 --> 16:50.880
复习

16:50.880 --> 16:52.880
没有意义

16:52.880 --> 16:53.880
添加

16:53.880 --> 16:54.880
这不搞定了

16:54.880 --> 16:55.880
对不对

16:55.880 --> 16:56.880
这边搞定了之后

16:56.880 --> 16:58.880
你可以把那个清空一下

16:58.880 --> 17:00.880
这边这个new item

17:00.880 --> 17:03.880
new item 点value

17:03.880 --> 17:05.880
把它清空

17:05.880 --> 17:06.880
好

17:06.880 --> 17:08.880
好 这边再来

17:08.880 --> 17:10.880
这边复习

17:10.880 --> 17:11.880
复习

17:11.880 --> 17:12.880
没有意义

17:12.880 --> 17:13.880
走

17:13.880 --> 17:14.880
是OK的

17:14.880 --> 17:15.880
对不对

17:15.880 --> 17:17.880
这些比如说react

17:17.880 --> 17:18.880
走

17:18.880 --> 17:19.880
是OK的

17:19.880 --> 17:22.880
我们新增这一项就搞定了

17:22.880 --> 17:24.880
新增搞定了之后

17:24.880 --> 17:25.880
接下来

17:25.880 --> 17:27.880
这边的话我要切换这个状态

17:27.880 --> 17:30.880
比如说我这边复习

17:30.880 --> 17:31.880
我这边已经做完了

17:31.880 --> 17:33.880
做完之后我这边点一下

17:33.880 --> 17:34.880
点一下之后

17:34.880 --> 17:35.880
它可以切换一个状态

17:35.880 --> 17:36.880
接下来

17:36.880 --> 17:37.880
我们这边就是

17:37.880 --> 17:38.880
应该是针对什么

17:38.880 --> 17:40.880
针对这边

17:40.880 --> 17:41.880
这个

17:41.880 --> 17:42.880
这个是你的内容

17:42.880 --> 17:43.880
对不对

17:43.880 --> 17:44.880
针对这个

17:44.880 --> 17:45.880
给它绑定一个世界

17:45.880 --> 17:46.880
圈

17:46.880 --> 17:47.880
click

17:48.880 --> 17:49.880
等于一个什么呢

17:49.880 --> 17:51.880
等于一个complete

17:51.880 --> 17:54.880
complete handle

17:54.880 --> 17:55.880
OK

17:55.880 --> 17:56.880
人家这边传一个什么呢

17:56.880 --> 17:58.880
把你的下标传过去

17:58.880 --> 17:59.880
好

17:59.880 --> 18:01.880
那接下来在这下面

18:01.880 --> 18:02.880
在这下面

18:02.880 --> 18:03.880
下面的话

18:03.880 --> 18:05.880
这边就是切换

18:05.880 --> 18:09.880
切换是否完成的状态

18:09.880 --> 18:12.320
好

18:12.320 --> 18:13.320
这边呢

18:13.320 --> 18:14.320
方形

18:14.320 --> 18:15.320
方形

18:15.320 --> 18:16.320
complete handle

18:16.320 --> 18:17.320
好

18:17.320 --> 18:18.320
它这边接收一个什么

18:18.320 --> 18:21.320
是否接收一个index

18:21.320 --> 18:22.320
对不对

18:22.320 --> 18:23.320
接收一个index

18:23.320 --> 18:24.320
好

18:24.320 --> 18:25.320
那接下来的话

18:25.320 --> 18:26.320
你在你这边

18:26.320 --> 18:27.320
这边的话

18:27.320 --> 18:28.320
我们是不是就说

18:28.320 --> 18:30.320
需要书写这么一个方法

18:30.320 --> 18:31.320
对不对

18:31.320 --> 18:32.320
好

18:32.320 --> 18:33.320
来我们这边

18:33.320 --> 18:34.320
把这个稍微注释一下

18:34.320 --> 18:38.640
这个是添加新的四项

18:38.640 --> 18:39.640
好

18:39.640 --> 18:40.640
这个是切换

18:40.640 --> 18:43.640
切换这个四项

18:43.640 --> 18:47.640
对应的这个完成状态

18:47.640 --> 18:48.640
OK

18:48.640 --> 18:49.640
好

18:49.640 --> 18:50.640
我们这边呢

18:50.640 --> 18:51.640
方形

18:51.640 --> 18:52.640
我们这边

18:52.640 --> 18:54.640
我们这边也叫complete

18:54.640 --> 18:55.640
或者我们在这边切换了

18:55.640 --> 18:56.640
然后一会的话

18:56.640 --> 18:57.640
这里

18:57.640 --> 18:59.640
这边就不用写了

18:59.640 --> 19:01.640
这边就不用写了

19:01.640 --> 19:02.640
我们直接在这里

19:02.640 --> 19:03.640
这里的方形

19:03.640 --> 19:05.640
complete

19:05.640 --> 19:06.640
complete

19:06.640 --> 19:09.650
这个handle

19:09.650 --> 19:10.650
接收一个什么

19:10.650 --> 19:12.650
接收一个index

19:12.650 --> 19:13.650
我们这边首先看一下

19:13.650 --> 19:14.650
看一下这个index

19:14.650 --> 19:15.650
拿到没有

19:15.650 --> 19:16.650
好

19:16.650 --> 19:17.650
把这个方法的话

19:17.650 --> 19:18.650
把它导出出去

19:18.650 --> 19:19.650
好

19:19.650 --> 19:20.650
导出出去之后

19:20.650 --> 19:22.650
然后接下来在这边

19:22.650 --> 19:24.650
这边是不是

19:24.650 --> 19:25.650
这边是不是

19:25.650 --> 19:26.650
把它解构出来

19:26.650 --> 19:27.650
解构出来之后

19:27.650 --> 19:28.650
然后加这边直接

19:28.650 --> 19:30.650
直接是不是绑零到这里

19:30.650 --> 19:31.650
对不对

19:31.650 --> 19:32.650
直接绑零到这里

19:32.650 --> 19:33.650
然后加我们这边

19:33.650 --> 19:34.650
我们来看一下

19:34.650 --> 19:36.650
刷新一下

19:36.650 --> 19:37.650
点击

19:37.650 --> 19:38.650
就拿到了

19:38.650 --> 19:39.650
对不对

19:39.650 --> 19:40.650
拿到了的话

19:40.650 --> 19:41.650
这边就很好办了

19:41.650 --> 19:42.650
接下来

19:42.650 --> 19:43.650
这里就很好办了

19:43.650 --> 19:44.650
这里就干嘛

19:44.650 --> 19:45.650
这边是不是就是

19:45.650 --> 19:47.650
做你的切换就完事了

19:47.650 --> 19:48.650
对不对

19:48.650 --> 19:50.650
所以这边就是list

19:50.650 --> 19:51.650
点items

19:51.650 --> 19:53.650
你要切换哪一个

19:53.650 --> 19:55.650
切换下标为index的

19:55.650 --> 19:56.650
你要切换什么

19:56.650 --> 19:58.650
你要把它的easy complete

19:58.650 --> 19:59.650
给它干嘛

19:59.650 --> 20:01.650
取一个反

20:01.650 --> 20:02.650
对不对

20:02.650 --> 20:05.650
这边要给它取一个反

20:05.650 --> 20:06.650
保存

20:06.650 --> 20:07.650
保存了之后

20:07.650 --> 20:08.650
这边看一下

20:08.650 --> 20:09.650
这边

20:09.650 --> 20:11.650
搞定了吗

20:11.650 --> 20:12.650
是不是搞定了

20:12.650 --> 20:13.650
对不对

20:13.650 --> 20:14.650
包括你这个新增的

20:14.650 --> 20:15.650
不要复习

20:15.650 --> 20:17.650
复习

20:19.650 --> 20:21.650
学习

20:21.650 --> 20:22.650
react

20:22.650 --> 20:23.650
OK

20:23.650 --> 20:25.650
准备任何问题

20:25.650 --> 20:26.650
对不对

20:26.650 --> 20:28.650
这是关于这个切换

20:28.650 --> 20:29.650
好

20:29.650 --> 20:30.650
然后接下来的话

20:30.650 --> 20:32.650
还有一个

20:32.650 --> 20:33.650
还有一个就是什么呢

20:33.650 --> 20:34.650
还有一个就是这边

20:34.650 --> 20:35.650
这个三处

20:35.650 --> 20:36.650
这里

20:36.650 --> 20:37.650
这里我们点击这个三处

20:37.650 --> 20:38.650
点击三处之后

20:38.650 --> 20:39.650
它这边的话

20:39.650 --> 20:40.650
应该是有一个这个弹框

20:40.650 --> 20:41.650
首先一个弹框

20:41.650 --> 20:43.650
问你是否要删除

20:43.650 --> 20:44.650
如果要删除的话

20:44.650 --> 20:45.650
那接下来我们从那个

20:45.650 --> 20:46.650
仓库里面

20:46.650 --> 20:47.650
我们把它删除掉

20:47.650 --> 20:48.650
OK

20:48.650 --> 20:49.650
接下来我们这边

20:49.650 --> 20:51.650
应该对应的是主键

20:51.650 --> 20:52.650
这边

20:52.650 --> 20:53.650
close

20:53.650 --> 20:54.650
对不对

20:54.650 --> 20:55.650
close

20:55.650 --> 20:56.650
然后接下来我们这边

20:56.650 --> 20:59.160
click

20:59.160 --> 21:01.160
click等于一个这个delete

21:01.160 --> 21:02.160
handle

21:02.160 --> 21:03.160
同样这边

21:03.160 --> 21:04.160
把这个index

21:04.160 --> 21:06.160
把它传过去

21:06.160 --> 21:07.160
这个delete handle

21:07.160 --> 21:08.160
这边的话

21:08.160 --> 21:10.160
因为会涉及到那个

21:10.160 --> 21:11.160
就是寻问

21:11.160 --> 21:12.160
你是否要删除

21:12.160 --> 21:13.160
所以我们在这边

21:13.160 --> 21:14.160
我们写这么一个方法

21:14.160 --> 21:19.350
三处

21:19.350 --> 21:21.350
三处

21:21.350 --> 21:22.350
这个代办思想

21:22.350 --> 21:26.260
OK

21:26.260 --> 21:27.260
好我们这边

21:27.260 --> 21:28.260
这边就方形

21:29.260 --> 21:31.260
方形delete handle

21:31.260 --> 21:33.260
这边接受一个index

21:35.260 --> 21:36.260
对不对

21:36.260 --> 21:37.260
好这边你做一个这个

21:37.260 --> 21:38.260
询问

21:38.260 --> 21:39.260
这边window

21:39.260 --> 21:41.260
点这个confirm

21:41.260 --> 21:46.710
做一个询问

21:46.710 --> 21:47.710
好这边就是

21:47.710 --> 21:48.710
是否

21:50.710 --> 21:52.710
是否要删除

21:52.710 --> 21:54.710
当前的项目

21:57.020 --> 21:58.020
这边的话

21:58.020 --> 21:59.020
换一行

21:59.020 --> 22:00.020
好然后在这边

22:00.020 --> 22:01.020
哪个项目呢

22:01.020 --> 22:03.020
这边的话就是list

22:04.020 --> 22:05.020
list

22:05.020 --> 22:07.020
然后接下来点value

22:07.020 --> 22:08.020
有时候就说

22:08.020 --> 22:09.020
这边为什么要value

22:09.020 --> 22:10.020
为什么要点value

22:10.020 --> 22:11.020
这边你看你这边

22:11.020 --> 22:12.020
解构出来list

22:12.020 --> 22:13.020
因为你这边

22:13.020 --> 22:14.020
把它转成了一个什么

22:14.020 --> 22:16.020
就转成了个refs

22:16.020 --> 22:17.020
对不对

22:17.020 --> 22:18.020
你这边把它转成了refs

22:18.020 --> 22:20.020
所以这边这个点value

22:20.020 --> 22:21.020
点value

22:21.020 --> 22:23.020
然后接下来点

22:23.020 --> 22:24.020
items

22:24.020 --> 22:26.020
items它拿到那个数组

22:26.020 --> 22:28.020
数组对应的这个index

22:28.020 --> 22:29.020
对不对

22:29.020 --> 22:31.020
再加点text

22:31.020 --> 22:32.020
ok

22:32.020 --> 22:33.020
好再加这边

22:34.020 --> 22:35.020
换行

22:35.020 --> 22:37.020
好然后接下来完成状态

22:39.590 --> 22:41.590
完成状态

22:41.590 --> 22:43.590
完成状态为什么呢

22:43.590 --> 22:44.590
也是这边

22:45.590 --> 22:46.590
拿过来

22:46.590 --> 22:47.590
拿过来之后

22:47.590 --> 22:49.590
这边就不是这个text

22:49.590 --> 22:51.590
这边的话我想想

22:51.590 --> 22:52.590
这边应该是

22:52.590 --> 22:54.590
看你的这个 is complete

22:54.590 --> 22:56.590
is completed

22:56.590 --> 22:57.590
对不对

22:57.590 --> 22:58.590
如果这个的话

22:58.590 --> 22:59.590
它是 true

22:59.590 --> 23:00.590
那这边我们就写

23:00.590 --> 23:05.180
写这个已完成

23:05.180 --> 23:06.180
否则的话

23:06.180 --> 23:07.180
我们这边就什么了

23:07.180 --> 23:09.180
这边就是未完成

23:09.180 --> 23:10.180
怎么样这样子

23:10.180 --> 23:11.180
对不对

23:11.180 --> 23:12.180
然后整个这个

23:12.180 --> 23:13.180
整个这个呢

23:13.180 --> 23:14.180
它会有一个这个弹框

23:14.180 --> 23:15.180
我这边来看一下

23:16.180 --> 23:17.180
对不对

23:17.180 --> 23:18.180
点击

23:18.180 --> 23:19.180
会有这么一个弹框

23:19.180 --> 23:20.180
对不对

23:20.180 --> 23:21.180
是否删除当前的项目

23:21.180 --> 23:22.180
学习拼纳

23:22.180 --> 23:23.180
完成状态

23:23.180 --> 23:24.180
未完成

23:24.180 --> 23:25.180
这个弹框的话

23:25.180 --> 23:26.180
然后下这边

23:26.180 --> 23:28.180
这边会有一个这个选项

23:28.180 --> 23:29.180
选项的话

23:29.180 --> 23:30.180
取消的话

23:30.180 --> 23:32.180
它这边就是返回是个 false

23:32.180 --> 23:33.180
点击这个确定的话

23:33.180 --> 23:34.180
它返回的就是 true

23:34.180 --> 23:35.180
所以说我们这边的话

23:35.180 --> 23:36.180
意符

23:36.180 --> 23:39.810
加上一个 if

23:39.810 --> 23:41.810
ok 就你如果用户选择

23:41.810 --> 23:42.810
那是 true

23:42.810 --> 23:44.810
那是不是说明的是要删除

23:44.810 --> 23:45.810
要删除的话

23:45.810 --> 23:46.810
那接下来

23:46.810 --> 23:47.810
我们在这边

23:47.810 --> 23:51.190
我们就进行一个删除

23:51.190 --> 23:52.190
这里的话

23:52.190 --> 23:53.190
来到这边

23:53.190 --> 23:54.190
来到这边

23:54.190 --> 23:56.190
这边那就是删除

23:56.190 --> 23:59.190
删除这个代办实相

23:59.190 --> 24:01.190
代办实相

24:01.190 --> 24:04.190
对应下标

24:04.190 --> 24:08.560
对应下标的某一项

24:08.560 --> 24:09.560
对吧

24:09.560 --> 24:10.560
好

24:10.560 --> 24:11.560
这边的话

24:11.560 --> 24:12.560
方形

24:12.560 --> 24:13.560
方形这边有一个

24:13.560 --> 24:14.560
比如说 delete

24:14.560 --> 24:16.560
delete item

24:16.560 --> 24:17.560
接收一个什么

24:17.560 --> 24:18.560
接收一个下标

24:18.560 --> 24:20.560
接收一个下标之后

24:20.560 --> 24:21.560
然后下这边 list

24:21.560 --> 24:23.560
点 items

24:23.560 --> 24:25.560
然后下它是拿到一个数组

24:25.560 --> 24:26.560
对吧

24:26.560 --> 24:28.560
这个数组之后人家这边

24:28.560 --> 24:29.560
super nice

24:29.560 --> 24:30.560
super nice

24:30.560 --> 24:31.560
然后下这边

24:31.560 --> 24:32.560
删除了一个

24:32.560 --> 24:33.560
删除这个

24:33.560 --> 24:34.560
这边的话

24:34.560 --> 24:35.560
一个

24:35.560 --> 24:36.560
对不对

24:36.560 --> 24:37.560
人家这边

24:37.560 --> 24:39.560
把它导出出去

24:40.560 --> 24:41.560
好 导出出去之后

24:41.560 --> 24:42.560
然后接下来这边

24:42.560 --> 24:44.560
这边你把它

24:44.560 --> 24:45.560
结构出来

24:45.560 --> 24:46.560
结构出来之后

24:46.560 --> 24:47.560
然后接下来在这里

24:47.560 --> 24:48.560
这里的话是不

24:48.560 --> 24:49.560
进行个调用

24:50.560 --> 24:51.560
对不对

24:51.560 --> 24:52.560
把这个index

24:52.560 --> 24:53.560
把它传过去

24:53.560 --> 24:54.560
好

24:54.560 --> 24:55.560
接下来

24:55.560 --> 24:56.560
看一下

24:56.560 --> 24:59.070
好不好使

24:59.070 --> 25:01.070
好 我们这边刷新一下

25:01.070 --> 25:02.070
然后下这边

25:02.070 --> 25:04.070
不要把这个玩游戏这个

25:04.070 --> 25:06.070
是否要删除当前的项目玩游戏

25:06.070 --> 25:07.070
完成状态

25:07.070 --> 25:08.070
已完成

25:08.070 --> 25:09.070
点确定

25:09.070 --> 25:10.070
就搞定了

25:10.070 --> 25:11.070
对不对

25:11.070 --> 25:12.070
不要新增一下

25:12.070 --> 25:13.070
复习

25:13.070 --> 25:14.070
view

25:14.070 --> 25:16.640
学习

25:16.640 --> 25:18.640
react

25:19.640 --> 25:20.640
这边

25:20.640 --> 25:22.640
删除不要改状态

25:22.640 --> 25:23.640
对不对

25:23.640 --> 25:25.640
人家这边比较删除

25:25.640 --> 25:26.640
学习react

25:26.640 --> 25:27.640
对吧

25:27.640 --> 25:28.640
打羽毛球

25:28.640 --> 25:29.640
未完成

25:29.640 --> 25:30.640
OK

25:30.640 --> 25:31.640
怎么搞定了

25:31.640 --> 25:32.640
对不对

25:32.640 --> 25:33.640
OK

25:33.640 --> 25:35.640
这个的话就是关于带办事项

25:35.640 --> 25:37.640
我们这边就使用的是什么

25:37.640 --> 25:38.640
使用的是

25:38.640 --> 25:39.640
这里

25:39.640 --> 25:41.640
我们这边使用的就是这个组合API

25:41.640 --> 25:42.640
OK

25:42.640 --> 25:43.640
整体来讲的话

25:43.640 --> 25:45.640
实际上也非常简单

25:45.640 --> 25:46.640
对不对

25:46.640 --> 25:47.640
也非常简单

25:47.640 --> 25:48.640
好 然后回头的话

25:48.640 --> 25:49.640
我们这边

25:49.640 --> 25:50.640
我们来它官网看一下

25:51.640 --> 25:52.640
这边我们这个

25:52.640 --> 25:53.640
setup store

25:53.640 --> 25:54.640
这边这个

25:54.640 --> 25:55.640
这个的话我们也看了

25:55.640 --> 25:57.640
我们刚才这边是不是就这样写了

25:57.640 --> 25:58.640
对

25:58.640 --> 25:59.640
它这边需要这个return

25:59.640 --> 26:01.640
return把它导出出去

26:01.640 --> 26:02.640
人家这边有一个

26:02.640 --> 26:04.640
有一个就是关于getters

26:04.640 --> 26:06.640
getters该怎么做

26:06.640 --> 26:07.640
getters的话

26:07.640 --> 26:08.640
这边的话

26:08.640 --> 26:09.640
它可以通过什么呢

26:09.640 --> 26:11.640
可以通过computed

26:11.640 --> 26:13.640
可以通过computed

26:13.640 --> 26:14.640
来我们这边的话

26:14.640 --> 26:15.640
我们加一个

26:15.640 --> 26:17.640
加个getter

26:17.640 --> 26:18.640
我们比如说在这里

26:18.640 --> 26:20.640
这里是list

26:20.640 --> 26:21.640
然后加我们这边

26:21.640 --> 26:22.640
我们再加一个

26:22.640 --> 26:24.640
const

26:24.640 --> 26:25.640
const一个什么呢

26:25.640 --> 26:27.640
我们这边这样子

26:28.640 --> 26:29.640
我们这边list

26:29.640 --> 26:30.640
这边有items

26:30.640 --> 26:31.640
对应是个输足

26:31.640 --> 26:32.640
然后接下来我们这边

26:32.640 --> 26:33.640
再来一个什么呢

26:33.640 --> 26:34.640
再来一个container

26:35.640 --> 26:37.640
container是从这个100开始的

26:38.640 --> 26:39.640
OK

26:39.640 --> 26:40.640
好 然后接下来

26:40.640 --> 26:41.640
这边这个double

26:41.640 --> 26:45.780
doublecontainer

26:46.780 --> 26:47.780
然后加这边

26:47.780 --> 26:48.780
我要做这个两倍

26:48.780 --> 26:49.780
那之前的话

26:49.780 --> 26:50.780
两倍的话

26:50.780 --> 26:51.780
你这里是怎么写的

26:51.780 --> 26:52.780
这边这个double count

26:53.780 --> 26:54.780
是不是直接就是

26:54.780 --> 26:55.780
这里的话

26:55.780 --> 26:57.780
它对应了写的getters里面

26:57.780 --> 26:58.780
对不对

26:58.780 --> 26:59.780
getters里面

26:59.780 --> 27:00.780
对应是一个函数

27:00.780 --> 27:01.780
这边

27:01.780 --> 27:02.780
这边它就使用什么呢

27:02.780 --> 27:04.780
它使用计算属性

27:05.780 --> 27:09.780
使用view里面的计算属性

27:11.780 --> 27:12.780
来做什么呢

27:12.780 --> 27:13.780
来做getters

27:14.780 --> 27:15.780
因为我们本来就说了

27:15.780 --> 27:17.780
就是你的getter

27:17.780 --> 27:18.780
就是你那个

27:18.780 --> 27:19.780
状态仓库里面的getter

27:19.780 --> 27:20.780
其实本身

27:20.780 --> 27:21.780
本质上来讲

27:21.780 --> 27:23.780
是不是其实就是和计算属性

27:23.780 --> 27:24.780
非常相似

27:24.780 --> 27:25.780
它就是对数据做什么

27:25.780 --> 27:26.780
是不是做20计算

27:26.780 --> 27:27.780
我们的计算属性

27:27.780 --> 27:29.780
是不是也是对数据做20计算

27:30.780 --> 27:31.780
对不对

27:31.780 --> 27:32.780
所以你这边

27:32.780 --> 27:33.780
你得引一下

27:33.780 --> 27:34.780
这边

27:34.780 --> 27:36.780
把computed

27:37.780 --> 27:38.780
引入一下

27:38.780 --> 27:39.780
引入一下之后

27:39.780 --> 27:40.780
然而这边

27:40.780 --> 27:41.780
computed

27:41.780 --> 27:42.780
调这个方法

27:42.780 --> 27:43.780
在这个方法里面

27:43.780 --> 27:44.780
方法里面

27:44.780 --> 27:45.780
然后这边

27:47.780 --> 27:48.780
一个函数

27:48.780 --> 27:49.780
函数然而这边return

27:50.780 --> 27:51.780
返回

27:52.780 --> 27:53.780
返回什么呢

27:53.780 --> 27:54.780
返回这个list

27:55.780 --> 27:56.780
点这个container

27:56.780 --> 27:57.780
我们乘一个

27:57.780 --> 27:58.780
比如说两倍

27:59.780 --> 28:00.780
对吧

28:00.780 --> 28:01.780
乘一个两倍

28:01.780 --> 28:02.780
ok

28:02.780 --> 28:03.780
好 这边仍然是

28:03.780 --> 28:04.780
把它导出出去

28:06.780 --> 28:08.780
放到list后面

28:08.780 --> 28:09.780
把它导出出去

28:09.780 --> 28:10.780
导出出去之后

28:10.780 --> 28:11.780
然后现在在这边

28:11.780 --> 28:12.780
这边呢

28:12.780 --> 28:13.780
是不是就是

28:13.780 --> 28:14.780
在这边

28:14.780 --> 28:15.780
解构数据这边

28:15.780 --> 28:16.780
是把它拿到

28:17.780 --> 28:18.780
对吧

28:18.780 --> 28:19.780
拿到之后

28:19.780 --> 28:20.780
然后现在我们这边

28:20.780 --> 28:21.780
我们把它用一下

28:21.780 --> 28:22.780
我们把它放到哪呢

28:22.780 --> 28:24.780
我们把它放到这上面吧

28:25.780 --> 28:26.780
放到这上面

28:26.780 --> 28:27.780
这边的话

28:27.780 --> 28:28.780
div

28:29.780 --> 28:30.780
点input

28:30.780 --> 28:32.780
然后container

28:32.780 --> 28:36.160
这边有个p

28:36.160 --> 28:38.160
点这个nam input

28:39.160 --> 28:41.160
这边是自己

28:41.160 --> 28:43.160
仓库的数据

28:43.160 --> 28:46.720
仓库的getter数据

28:46.720 --> 28:53.150
这边就是导入的

28:53.150 --> 28:55.150
doublecontainer

28:56.150 --> 28:57.150
对不对

28:57.150 --> 28:58.150
doublecontainer

28:59.150 --> 29:00.150
保存

29:00.150 --> 29:01.150
保存了之后

29:01.150 --> 29:03.650
然后在这边来看一下

29:03.650 --> 29:04.650
这边没拿到是吧

29:04.650 --> 29:05.650
刷新一下

29:05.650 --> 29:06.650
ok了

29:06.650 --> 29:07.650
这边有了

29:07.650 --> 29:08.650
对不对

29:08.650 --> 29:09.650
这边就拿到了

29:09.650 --> 29:10.650
拿到之后

29:10.650 --> 29:11.650
然后接下来你这边

29:11.650 --> 29:12.650
这边让你比如说

29:12.650 --> 29:13.650
做加一这些也是没问题的

29:13.650 --> 29:14.650
比我们这边

29:14.650 --> 29:16.650
barter

29:16.650 --> 29:18.650
做一个加一操作

29:18.650 --> 29:20.650
class

29:20.650 --> 29:22.650
这边对应是一个btn

29:22.650 --> 29:23.650
好

29:23.650 --> 29:24.650
然后这里

29:24.650 --> 29:28.160
这里我们要让它加一

29:28.160 --> 29:29.160
那这里的话

29:29.160 --> 29:30.160
trick

29:30.160 --> 29:31.160
click

29:31.160 --> 29:32.160
等于

29:32.160 --> 29:34.160
好这边你要让它的这个加一

29:34.160 --> 29:35.160
加一的话

29:35.160 --> 29:37.160
这边实际上是去改的什么

29:37.160 --> 29:38.160
你这边的话

29:38.160 --> 29:39.160
你的这个计算属性

29:39.160 --> 29:40.160
doublecontainer

29:40.160 --> 29:41.160
是基于什么

29:41.160 --> 29:42.160
基于这个container

29:42.160 --> 29:43.160
是基于这个数据

29:43.160 --> 29:44.160
所以我们针对这个数据

29:44.160 --> 29:45.160
加一就可以了

29:45.160 --> 29:47.160
所以这边那就是

29:47.160 --> 29:50.160
list.container

29:50.160 --> 29:51.160
加加

29:52.160 --> 29:53.160
对不对

29:53.160 --> 29:54.160
好我们这边保存一下

29:54.160 --> 29:55.160
保存了之后

29:55.160 --> 29:56.160
人家这边看一下

29:56.160 --> 29:57.160
说搞定了

29:57.160 --> 29:58.160
对不对

29:58.160 --> 29:59.160
每次的话我这边加一

29:59.160 --> 30:01.160
这边的话是双数走

30:01.160 --> 30:02.160
因为它是乘以

30:02.160 --> 30:04.160
乘以了一个2

30:04.160 --> 30:05.160
对不对

30:05.160 --> 30:06.160
乘一个2

30:06.160 --> 30:07.160
这个是

30:07.160 --> 30:08.160
就是你自己倡扩的

30:08.160 --> 30:09.160
getter数据

30:09.160 --> 30:11.160
这个也是没问题的

30:11.160 --> 30:13.160
这是关于这一点

30:13.160 --> 30:15.160
然后还有就是我想想

30:15.160 --> 30:18.160
其实基本上就差不多了

30:18.160 --> 30:19.160
基本就差不多了

30:19.160 --> 30:20.160
整个定义store

30:20.160 --> 30:21.160
state

30:21.160 --> 30:22.160
getter

30:22.160 --> 30:23.160
action

30:23.160 --> 30:24.160
整个这一块

30:24.160 --> 30:25.160
基本就差不多了

30:25.160 --> 30:26.160
我们下节课来讲

30:26.160 --> 30:27.160
这个插件

30:27.160 --> 30:29.160
插件下节课来讲

30:29.160 --> 30:30.160
还有一个

30:30.160 --> 30:31.160
还有就是他这边

30:31.160 --> 30:32.160
在讲getter的时候

30:32.160 --> 30:33.160
他这边讲到了一个

30:33.160 --> 30:36.160
就是访问其他store的getter

30:36.160 --> 30:37.160
看到没有

30:37.160 --> 30:38.160
对你这边的话

30:38.160 --> 30:39.160
你可以使用

30:39.160 --> 30:41.160
另外一个store的getter

30:41.160 --> 30:42.160
一般来讲

30:42.160 --> 30:43.160
我们仓库是独立的

30:43.160 --> 30:44.160
你这个仓库的话

30:44.160 --> 30:45.160
是你这个仓库的数据

30:45.160 --> 30:46.160
另外一个仓库的话

30:46.160 --> 30:48.160
是另外一个仓库

30:48.160 --> 30:49.160
它对应的

30:49.160 --> 30:51.160
这个功能模块的数据

30:51.160 --> 30:52.160
一般来讲是独立的

30:52.160 --> 30:53.160
但它这边上

30:53.160 --> 30:54.160
也可以访问

30:54.160 --> 30:55.160
也可以访问

30:55.160 --> 30:56.160
我们来看它怎么访问

30:56.160 --> 30:59.160
首先就是把对应的仓库

30:59.160 --> 31:01.160
先把它引进来

31:01.160 --> 31:02.160
对不对

31:02.160 --> 31:04.160
先把它引进来

31:04.160 --> 31:05.160
引进来之后

31:05.160 --> 31:07.160
接下来这边有个getters

31:07.160 --> 31:08.160
getters

31:08.160 --> 31:10.160
接下来这边的话

31:10.160 --> 31:14.160
它是首先use store

31:14.160 --> 31:15.160
拿到store之后

31:15.160 --> 31:16.160
让它这边干嘛

31:16.160 --> 31:17.160
这边返回

31:17.160 --> 31:19.160
这边返回就用

31:19.160 --> 31:20.160
你拿到了getter之后

31:20.160 --> 31:21.160
让它这边

31:21.160 --> 31:22.160
你就可以使用

31:22.160 --> 31:23.160
我们这边来

31:23.160 --> 31:24.160
我们来试一下

31:24.160 --> 31:28.160
回到这边

31:28.160 --> 31:29.160
这边的话

31:29.160 --> 31:30.160
现在的话

31:30.160 --> 31:31.160
这个是我们

31:31.160 --> 31:33.160
当前这个to do list的store

31:33.160 --> 31:34.160
好

31:34.160 --> 31:35.160
我们在这边的话

31:35.160 --> 31:37.160
引入另外一个store

31:37.160 --> 31:40.160
引入另外一个

31:40.160 --> 31:43.160
引入其他仓库

31:43.160 --> 31:44.160
OK

31:44.160 --> 31:46.160
我们这边就import

31:46.160 --> 31:47.160
from

31:47.160 --> 31:49.160
这个是当前目录下面

31:49.160 --> 31:50.160
当前目录下面

31:50.160 --> 31:53.160
还有一个use container store

31:53.160 --> 31:54.160
对不对

31:54.160 --> 31:55.160
好

31:55.160 --> 31:56.160
然后现在我们这边

31:56.160 --> 31:57.160
这边的话

31:57.160 --> 31:59.160
我们use

31:59.160 --> 32:03.160
use这个container store

32:03.160 --> 32:04.160
OK

32:04.160 --> 32:05.160
好

32:05.160 --> 32:06.160
然后完事之后

32:06.160 --> 32:07.160
接下来的话

32:07.160 --> 32:08.160
我们在这里

32:08.160 --> 32:09.160
在这里

32:09.160 --> 32:10.160
我们再来创建一个

32:10.160 --> 32:11.160
计算属性

32:11.160 --> 32:12.160
接下来

32:12.160 --> 32:17.160
我们再来创建一个getter

32:17.160 --> 32:19.160
该getter

32:19.160 --> 32:21.160
该getter

32:21.160 --> 32:23.160
使用的是

32:23.160 --> 32:27.160
其他仓库的数据

32:27.160 --> 32:28.160
OK

32:28.160 --> 32:29.160
好

32:29.160 --> 32:30.160
我们这边const

32:30.160 --> 32:31.160
一个

32:31.160 --> 32:32.160
比如other

32:32.160 --> 32:35.160
othercontainer

32:35.160 --> 32:36.160
它等于什么呢

32:36.160 --> 32:38.160
等于一个computed

32:38.160 --> 32:41.160
这边return

32:41.160 --> 32:42.160
return

32:42.160 --> 32:43.160
然后接下来

32:43.160 --> 32:44.160
你这边

32:44.160 --> 32:45.160
我看一下

32:45.160 --> 32:47.160
这边你首先use container store

32:47.160 --> 32:48.160
然后接下来

32:48.160 --> 32:49.160
你这边的话

32:49.160 --> 32:50.160
你得创建一下

32:50.160 --> 32:53.160
这边const

32:53.160 --> 32:55.160
container store

32:55.160 --> 33:00.160
等于一个use container store

33:00.160 --> 33:01.160
对不对

33:01.160 --> 33:03.160
首先获取到其他仓库

33:03.160 --> 33:04.160
这边调用这个方法

33:04.160 --> 33:05.160
拿到这个仓库

33:05.160 --> 33:07.160
拿到这个仓库之后

33:07.160 --> 33:08.160
接下来你这边

33:08.160 --> 33:09.160
就可以拿到什么

33:09.160 --> 33:10.160
是不是你这个仓库

33:10.160 --> 33:11.160
比我们这个仓库

33:11.160 --> 33:12.160
里面有些啥

33:12.160 --> 33:13.160
我们这个仓库里面

33:13.160 --> 33:14.160
getter

33:14.160 --> 33:15.160
是不是这边有个double count

33:15.160 --> 33:16.160
对不对

33:16.160 --> 33:17.160
那我们这边

33:17.160 --> 33:19.160
就是返回double count

33:19.160 --> 33:21.160
我们再稍微做一点变化

33:21.160 --> 33:22.160
就乘一个3

33:22.160 --> 33:23.160
OK

33:23.160 --> 33:24.160
好

33:24.160 --> 33:25.160
然后加这边

33:25.160 --> 33:26.160
把这个othercontainer

33:26.160 --> 33:27.160
把它同样

33:27.160 --> 33:28.160
把它干嘛

33:28.160 --> 33:29.160
把它导出出去

33:29.160 --> 33:31.160
放到这里吧

33:31.160 --> 33:32.160
把它导出出去

33:32.160 --> 33:33.160
导出出去之后

33:33.160 --> 33:34.160
然后接下来

33:34.160 --> 33:36.160
来到你的to do list

33:36.160 --> 33:37.160
这边你把它干嘛

33:37.160 --> 33:39.160
是把它引入

33:39.160 --> 33:40.160
在我们这边是数据

33:40.160 --> 33:42.160
数据在这个位置

33:42.160 --> 33:43.160
把引入

33:43.160 --> 33:44.160
引入了之后

33:44.160 --> 33:45.160
然后接下来

33:45.160 --> 33:46.160
我们在这边

33:46.160 --> 33:48.160
这边我们就来

33:48.160 --> 33:49.160
看一下

33:50.160 --> 33:51.160
这个就不要了

33:52.160 --> 33:53.160
这边就是other

33:55.160 --> 33:56.160
othercontainer

33:58.980 --> 33:59.980
othercontainer

33:59.980 --> 34:00.980
对不对

34:00.980 --> 34:03.610
这个是其他仓库

34:03.610 --> 34:05.610
其他仓库的getter数据

34:05.610 --> 34:06.610
来我们来看一下

34:06.610 --> 34:07.610
能不能拿得到

34:07.610 --> 34:11.080
刷新一下

34:11.080 --> 34:13.080
这边爆错了

34:13.080 --> 34:14.080
这边的话是

34:15.080 --> 34:16.080
get active pinia

34:16.080 --> 34:18.080
was called with no active pinia

34:19.080 --> 34:21.080
did you forgot to install pinia

34:22.080 --> 34:23.080
它这边的话是

34:23.080 --> 34:25.080
它说的是这边

34:25.080 --> 34:26.080
你是否忘记

34:26.080 --> 34:28.080
是用create pinia

34:28.080 --> 34:29.080
那很明显我们这边

34:29.080 --> 34:30.080
不是这个错误

34:31.080 --> 34:32.080
不这个错误

34:32.080 --> 34:33.080
我们这边来看一下

34:33.080 --> 34:34.080
这边是怎么回事

34:36.900 --> 34:37.900
我这边我想起来了

34:37.900 --> 34:38.900
这边的话你在

34:39.900 --> 34:40.900
调用这个方法

34:40.900 --> 34:41.900
获取仓库的时候

34:41.900 --> 34:42.900
这一句的话

34:42.900 --> 34:43.900
你要放在什么呢

34:43.900 --> 34:44.900
你要放在这个

34:44.900 --> 34:45.900
就是defy

34:45.900 --> 34:46.900
defy这个方法里面

34:47.900 --> 34:48.900
放到这个方法里面

34:49.900 --> 34:50.900
我们这边个字画一下

34:50.900 --> 34:51.900
看到没有

34:51.900 --> 34:52.900
不要放到它这边

34:52.900 --> 34:53.900
这个外面

34:53.900 --> 34:55.900
放在这个defy store外面

34:55.900 --> 34:56.900
放在这里面

34:56.900 --> 34:57.900
不然它获取不到

34:57.900 --> 34:59.900
获取不到这个store

34:59.900 --> 35:00.900
我们这边再来看一下

35:00.900 --> 35:01.900
刷新

35:01.900 --> 35:03.900
你要这边是不是就ok了

35:03.900 --> 35:04.900
对不对

35:04.900 --> 35:05.900
我们来看一下

35:05.900 --> 35:06.900
比如说我们这边加

35:06.900 --> 35:07.900
随便加什么

35:07.900 --> 35:08.900
比如说现在这边是6

35:08.900 --> 35:09.900
6的话

35:09.900 --> 35:11.900
然后它这边的gator

35:11.900 --> 35:13.900
gator是12

35:13.900 --> 35:14.900
12然后接下来

35:14.900 --> 35:15.900
12然后将我们这边

35:15.900 --> 35:17.900
获取到12这个值

35:17.900 --> 35:19.900
然后我们这边还做了什么

35:19.900 --> 35:20.900
是不是还诚意了一个3

35:20.900 --> 35:22.900
就应该是36

35:22.900 --> 35:23.900
我们来看一下

35:23.900 --> 35:24.900
是不是36

35:24.900 --> 35:25.900
对吧

35:25.900 --> 35:26.900
对吧

35:26.900 --> 35:27.900
这边

35:27.900 --> 35:28.900
比如20

35:28.900 --> 35:30.900
20的话这边就应该是60

35:30.900 --> 35:31.900
是不是60

35:31.900 --> 35:32.900
这就是其他倉库的

35:32.900 --> 35:33.900
这个gator数据

35:33.900 --> 35:35.900
就拿到了

35:35.900 --> 35:36.900
对不对

35:36.900 --> 35:37.900
ok

35:37.900 --> 35:38.900
好

35:38.900 --> 35:39.900
然后其他的话

35:39.900 --> 35:41.900
就没什么了

35:41.900 --> 35:42.900
其他话就没什么了

35:42.900 --> 35:44.900
大家这几颗下来的话

35:44.900 --> 35:45.900
可以把整个这一块

35:45.900 --> 35:47.900
就是这个pina

35:47.900 --> 35:48.900
这个介绍什么的

35:48.900 --> 35:49.900
就不用说了

35:49.900 --> 35:50.900
介绍的话我们其实

35:50.900 --> 35:51.900
上上几颗

35:51.900 --> 35:52.900
已经介绍了

35:52.900 --> 35:54.900
这边你可以把这几个

35:54.900 --> 35:55.900
这几个核心概念

35:55.900 --> 35:58.900
核心概念里面的这几个

35:58.900 --> 36:00.900
这几个定义store

36:00.900 --> 36:01.900
使用这个state

36:01.900 --> 36:02.900
gator

36:02.900 --> 36:03.900
action

36:03.900 --> 36:04.900
这几个的话

36:04.900 --> 36:05.900
你就可以看一下

36:05.900 --> 36:07.900
基本上我们讲的就差不多了

36:07.900 --> 36:08.900
ok

36:08.900 --> 36:09.900
这个其实就是

36:09.900 --> 36:11.900
你把这几个看完之后

36:11.900 --> 36:12.900
你可以做一个

36:12.900 --> 36:14.900
快速的上手

36:14.900 --> 36:15.900
对不对

36:15.900 --> 36:17.900
我们这边就快速的写了

36:17.900 --> 36:19.900
快速的写了个案例

36:19.900 --> 36:20.900
一个是技术器 that

36:20.900 --> 36:21.900
我们是option is api

36:21.900 --> 36:23.900
一个代办事项的这个案例

36:23.900 --> 36:25.900
使用的是composition api

36:25.900 --> 36:26.900
对不对

36:26.900 --> 36:27.900
ok

36:28.900 --> 36:30.900
这是关于这个批量的这个演示

36:30.900 --> 36:31.900
好

36:31.900 --> 36:32.900
然后回头的话

36:32.900 --> 36:33.900
来到我们的这边

36:33.900 --> 36:34.900
我们的这个笔记

36:34.900 --> 36:36.900
我们这边把这个笔记记一下吧

36:36.900 --> 36:37.900
刚才之前的话

36:37.900 --> 36:39.900
那个选项是api

36:39.900 --> 36:40.900
我们说它和了一个views

36:40.900 --> 36:42.900
使用是非常相似的

36:42.900 --> 36:44.900
那选项是风格

36:44.900 --> 36:45.900
选项是风格的话

36:45.900 --> 36:49.600
选项是

36:49.600 --> 36:50.600
这个不叫选项是

36:50.600 --> 36:51.600
这个叫组合式

36:51.600 --> 36:52.600
组合式风格

36:52.600 --> 36:54.600
组合式风格

36:54.600 --> 36:56.600
就和

36:56.600 --> 36:58.600
就和这个view3

36:58.600 --> 37:01.600
view3中的这个使用

37:01.600 --> 37:04.600
方法是一样的

37:04.600 --> 37:05.600
对不对

37:05.600 --> 37:06.600
通过什么呢

37:06.600 --> 37:07.600
通过这个ref

37:07.600 --> 37:10.600
或者reactive

37:10.600 --> 37:11.600
来什么

37:11.600 --> 37:12.600
来定义数据

37:12.600 --> 37:15.600
来定义仓库数据

37:15.600 --> 37:16.600
对不对

37:16.600 --> 37:17.600
然后接下来

37:17.600 --> 37:18.600
通过什么呢

37:18.600 --> 37:20.600
通过普通的方法

37:20.600 --> 37:23.600
来这个操作

37:23.600 --> 37:26.600
操作这个仓库数据

37:26.600 --> 37:28.600
仓库数据

37:28.600 --> 37:29.600
那无论

37:29.600 --> 37:33.970
无论是数据

37:33.970 --> 37:35.970
还是这个方法

37:35.970 --> 37:37.970
最终需要什么呢

37:37.970 --> 37:39.970
需要导出出去

37:39.970 --> 37:43.970
需要导出出去

37:43.970 --> 37:44.970
对不对

37:44.970 --> 37:45.970
我们这边把这个例子

37:45.970 --> 37:47.970
我们把它拿过来

37:47.970 --> 37:49.970
在这边

37:50.970 --> 37:54.600
把拿过来

37:54.600 --> 37:55.600
整个这一块

37:55.600 --> 37:58.600
其他的还有没有什么好说的

37:58.600 --> 38:00.600
其他的好像没有什么好说的

38:00.600 --> 38:01.600
对不对

38:01.600 --> 38:02.600
这边反正就是你对应

38:02.600 --> 38:04.600
写对应的这个方法就可以了

38:04.600 --> 38:05.600
写了对应的方法

38:05.600 --> 38:07.600
然后接下来这边的话

38:07.600 --> 38:09.600
这边是通过reactive

38:09.600 --> 38:10.600
创建数据

38:10.600 --> 38:11.600
还有一个

38:11.600 --> 38:13.600
还有一个是通过这个computed

38:13.600 --> 38:15.600
来做getter

38:15.600 --> 38:17.600
通过什么呢

38:17.600 --> 38:19.600
通过computed

38:19.600 --> 38:21.600
通过computed

38:21.600 --> 38:22.600
来做什么呢

38:22.600 --> 38:24.600
来做getter

38:24.600 --> 38:25.600
对不对

38:25.600 --> 38:27.600
通过这个来做getter

38:27.600 --> 38:29.600
action就不存在什么 action

38:29.600 --> 38:30.600
这边就直接你正常的写

38:30.600 --> 38:32.600
这个方法就可以了

38:32.600 --> 38:33.600
然后接下来

38:33.600 --> 38:35.600
这边你是可以使用

38:35.600 --> 38:37.600
其他仓库的getter的

38:37.600 --> 38:42.110
在一个仓库中

38:42.110 --> 38:44.110
可以使用

38:44.110 --> 38:47.110
其他仓库的getter

38:47.110 --> 38:50.110
getter数据

38:50.110 --> 38:51.110
对不对

38:51.110 --> 38:53.110
这个在官方网站

38:53.110 --> 38:54.110
这边也有

38:54.110 --> 38:55.110
这边

38:55.110 --> 38:57.110
访问另外一个

38:57.110 --> 38:59.110
访问其他仓库的getter

38:59.110 --> 39:00.110
对不对

39:00.110 --> 39:02.110
你无论是选项式API

39:02.110 --> 39:04.110
还是组合式API

39:04.110 --> 39:05.110
它都可以

39:05.110 --> 39:08.110
它官方给的是组合式API的

39:08.110 --> 39:09.110
这种例子

39:09.110 --> 39:10.110
但是我们这边

39:10.110 --> 39:11.110
我们用的是什么

39:11.110 --> 39:12.110
我们这边用的是

39:12.110 --> 39:14.110
它官方给的是选项式API

39:14.110 --> 39:15.110
对吧

39:15.110 --> 39:17.110
官方给的是选项式API的例子

39:17.110 --> 39:18.110
那我们这边是什么

39:18.110 --> 39:19.110
我们这边是不是

39:19.110 --> 39:21.110
组合API的例子

39:21.110 --> 39:22.110
对不对

39:22.110 --> 39:24.480
都可以

39:24.480 --> 39:25.480
回到这边

39:25.480 --> 39:28.480
可以使用其他仓库的数据

39:28.480 --> 39:30.480
两种模式

39:30.480 --> 39:32.480
两种模式都可以

39:32.480 --> 39:34.480
都可以使用

39:34.480 --> 39:36.480
无论你是选项式的风格

39:36.480 --> 39:37.480
还是组合式的风格

39:37.480 --> 39:39.480
两种风格

39:39.480 --> 39:42.480
两种风格都可以使用

39:42.480 --> 39:43.480
OK

39:43.480 --> 39:46.480
其他的话就没什么了

39:46.480 --> 39:47.480
其他的话就没什么了

39:47.480 --> 39:50.480
这是关于这个拼鸭的一个快速入门

39:50.480 --> 39:53.480
好那接下来回头你来打一下这道面试题

39:53.480 --> 39:55.480
是否使用过拼鸭

39:55.480 --> 39:59.480
简单谈一下关于这个拼鸭的使用

39:59.480 --> 40:00.480
OK

40:00.480 --> 40:04.120
那我这边就把这个

40:04.120 --> 40:05.120
把这个参考单

40:05.120 --> 40:08.750
我把它拿过来

40:08.750 --> 40:09.750
这里

40:09.750 --> 40:10.750
在拼鸭中

40:10.750 --> 40:11.750
核心概念

40:11.750 --> 40:13.750
核心概念就这三个

40:13.750 --> 40:15.750
State, Getters, and Actions

40:15.750 --> 40:16.750
对吧

40:16.750 --> 40:17.750
你这边你看到的这个官网

40:18.750 --> 40:20.750
State, Getter, and Action

40:20.750 --> 40:21.750
对吧

40:21.750 --> 40:22.750
那他这边还有个定义Store

40:22.750 --> 40:23.750
定义Store的话

40:23.750 --> 40:24.750
这个就不用说了

40:24.750 --> 40:25.750
就定义仓库

40:25.750 --> 40:26.750
好

40:26.750 --> 40:27.750
然后接下来这个State

40:27.750 --> 40:29.750
它是仓库的核心

40:29.750 --> 40:32.750
主要用于维护这个仓库的数据

40:32.750 --> 40:33.750
而这个Gator

40:33.750 --> 40:36.750
Gator它就是对数据做20计算的

40:36.750 --> 40:37.750
对吧

40:37.750 --> 40:39.750
它就等同于对这个Store的这个State

40:39.750 --> 40:41.750
做这个20计算

40:41.750 --> 40:42.750
那这个Actions

40:42.750 --> 40:44.750
Actions是对这个仓库状态

40:44.750 --> 40:46.750
进行操作的一些方法

40:46.750 --> 40:48.750
各种各样的这种方法

40:48.750 --> 40:49.750
好

40:49.750 --> 40:50.750
相比这个ViewX的话

40:50.750 --> 40:51.750
拼亮的话

40:51.750 --> 40:52.750
它没有这个Motation

40:52.750 --> 40:54.750
同步方法和这个异步方法

40:54.750 --> 40:56.750
都放在这个Actions里面

40:56.750 --> 40:57.750
拼亮的话

40:57.750 --> 40:59.750
同时支持View2和View3

40:59.750 --> 41:00.750
内部的话

41:00.750 --> 41:02.750
支持两种这个编码风格

41:02.750 --> 41:04.750
分别就是这个选项式API

41:04.750 --> 41:06.750
和组合式API

41:06.750 --> 41:09.750
那如果你使用这种选项式API的话

41:09.750 --> 41:11.750
那基本上就是0门槛

41:11.750 --> 41:12.750
对

41:12.750 --> 41:13.750
没有什么门槛

41:13.750 --> 41:14.750
就直接就可以上手了

41:14.750 --> 41:15.750
因为它的这个编码风格的话

41:15.750 --> 41:17.750
基本就和之前的这个ViewX

41:17.750 --> 41:19.750
基本就一模一样

41:19.750 --> 41:21.750
而这个组合式

41:21.750 --> 41:22.750
组合式API的话

41:22.750 --> 41:23.750
它的编码风格的话

41:23.750 --> 41:26.750
就和这个View3是非常相似的

41:26.750 --> 41:28.750
你使用这个Ref

41:28.750 --> 41:29.750
或者这个Reactive

41:29.750 --> 41:31.750
来定义你的这个仓库数据

41:31.750 --> 41:33.750
使用这个Computed

41:33.750 --> 41:34.750
来做什么呢

41:34.750 --> 41:35.750
来做这个Gatres

41:35.750 --> 41:37.750
那这个Actions里面的这个方法

41:37.750 --> 41:38.750
Actions里面的方法

41:38.750 --> 41:39.750
你是不是直接写就可以了

41:39.750 --> 41:40.750
对不对

41:40.750 --> 41:41.750
就像这里一样

41:41.750 --> 41:42.750
直接写就可以了

41:42.750 --> 41:43.750
写完了之后

41:43.750 --> 41:44.750
最后的话将数据和方法

41:44.750 --> 41:45.750
通过什么

41:45.750 --> 41:46.750
就通过return

41:46.750 --> 41:48.750
就把它导出出去

41:48.750 --> 41:49.750
对不对

41:49.750 --> 41:50.750
ok

41:50.750 --> 41:52.750
这就是关于这个拼压的

41:52.750 --> 41:54.750
一个快速入门

41:54.750 --> 41:55.750
大家下去的话

41:55.750 --> 41:57.750
可以把我们这两节课

41:57.750 --> 41:59.750
写的这么一个这个实例

41:59.750 --> 42:00.750
就这边这个实例

42:00.750 --> 42:02.750
一个是技术器

42:02.750 --> 42:04.750
一个是代办实相

42:04.750 --> 42:05.750
把这两个实例的话

42:05.750 --> 42:07.750
自己把它写一写

42:07.750 --> 42:08.750
好吧

42:08.750 --> 42:09.750
这节课就到这里

42:09.750 --> 42:10.750
再见

