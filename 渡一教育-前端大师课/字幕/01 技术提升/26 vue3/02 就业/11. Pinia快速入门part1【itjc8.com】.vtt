WEBVTT

00:00.300 --> 00:05.940
OK 上节课的话我们介绍了一下关于拼鸭的一个基本的概念

00:06.460 --> 00:13.300
那么我们这一节课的话我们就来看一下 关于这个拼鸭 它具体的一些使用啊 方便的

00:14.060 --> 00:20.340
实际上你之前如果大家用过这个vix的话 实际上要这个上手这个拼鸭的话 实际上是很快的

00:21.140 --> 00:25.620
对吧 因为它这个拼鸭的话 本身就被称之为是这个新版本的这个vix

00:26.260 --> 00:33.620
所以它的这个用法的话 和之前的vix 肯定是八九不历十的 可能会有一些这个细微上面的一些区别

00:34.180 --> 00:39.860
但大致的话 实际上是很相似的 就你用过vix的话 你很快就能够上手

00:40.380 --> 00:48.300
OK 而这边的话 有道面试题 它问你是否使用过拼鸭 简单谈一下这个拼鸭的这个使用

00:49.180 --> 00:53.980
那么目前来讲的话 这个拼鸭相关的面试题的话 实际上就主要还是问就是

00:54.740 --> 00:58.860
你是否使用过啊 然后如何使用这一类的 不会问得太深

00:59.340 --> 01:03.660
ok 说我们这些课的话 我们把这个拼鸭 我们把他这个用法 我把它过一遍

01:04.260 --> 01:11.460
ok 好 我这边的话 我现在的话已经创建好一个这个项目了啊 这个的话是用wit搭建了一个项目

01:12.020 --> 01:13.820
好 然后将我们这边来看一下项目效果

01:15.100 --> 01:18.620
而这边呢 是拼鸭也是安利啊 这边的话 我们到时候会做两个

01:19.020 --> 01:23.660
一个是技术器 一个是代办事项啊 这边他可以做一个这个切换

01:24.980 --> 01:27.980
可不可以好 然后接下来在这边

01:29.100 --> 01:34.940
这边的话 我们有一个components components里面的话 这边就有两个主介 一个是这个container

01:35.340 --> 01:40.380
这个是做技术器的 一个是to do list 这个是做那个代办事项的

01:41.060 --> 01:45.340
好 我们上集课的话 我们再介绍这个拼鸭的时候 我们说过 拼鸭里面它有个特点

01:46.220 --> 01:49.300
就是它的仓库的话 是什么 是不是一个一个独立的

01:49.780 --> 01:56.340
扁平化的 对不对啊 说我们回头的话 我们会有两个仓库 一个是container的仓库 一个是to do list的仓库

01:57.300 --> 02:05.260
ok 好 然后接下来我们这边首先来到这里啊 来到这里 这里的话 我们首先的话 我先把这个样式

02:06.180 --> 02:12.020
我们先来写container啊 好 先把这个样式 我先把它拿过来 样式的话 我这边就不带着写了

02:12.980 --> 02:14.660
好 过来

02:16.420 --> 02:21.140
好 这边是样式 样式的话 都是一些很常见的样式啊 这个就不说了啊

02:21.700 --> 02:28.020
好 然后把它折起来 这是我们的样式 好 然后接下来来到这边啊 那我们这边的话就

02:28.900 --> 02:36.420
把具体这个具体的这个结构 我们把它写一下DIV点这个container 这个是最外层的容器

02:36.900 --> 02:45.700
好 然后这边这个classcontainer这个的话 后期我如果没有做特殊这个说明的话 那这个样式内的话 都是这下面提前写好了的

02:46.500 --> 02:48.900
好吧 都是下面提前写好了的啊

02:49.540 --> 02:54.660
好 然后这里面这里面的话 我们对应有一组一组的啊 我们首先先来看我们的第一组

02:57.660 --> 03:00.780
第一组 第一组这边p p点这个girl

03:01.740 --> 03:02.780
girl

03:04.380 --> 03:06.620
ok啊 这个呢是普通增加

03:08.730 --> 03:12.170
普通增加 这边一个div div一个btn

03:17.060 --> 03:20.180
好 然后里面里面的话 然后接下来有这个barton

03:21.540 --> 03:27.460
barton这边class等于一个btn啊 这个是-这个是-

03:28.260 --> 03:30.500
好 然后中间中间的话会有一个lumber

03:30.980 --> 03:36.580
ok 这个我们先写个1啊 先写个1啊 保存 保存之后过来看一下

03:37.780 --> 03:39.860
啊 技术器啊 这边是不是出来了

03:40.820 --> 03:46.820
对 普通增加啊 这边点加 点加之后这边它就应该增加 点减这边的话就应该减少

03:47.460 --> 03:56.260
好 那接下来这边这个1 这个1的话 我们这边 我们就希望这个数字这个数据来源于什么呢 来源于这个状态仓库

03:56.980 --> 03:57.860
啊 这里

03:59.460 --> 04:00.820
我们希望

04:02.020 --> 04:03.380
这个数据

04:05.300 --> 04:08.260
来源于状态仓库

04:09.060 --> 04:11.860
那我们现在的话 我们这个状态仓库都还没有

04:12.500 --> 04:16.820
对不对啊 那我们首先第一步的话 我们需要安装我们的这个状态仓库

04:17.300 --> 04:18.420
那接下来来到这边

04:19.780 --> 04:22.580
这边这个pnya 我们来看一下这边get a start

04:23.460 --> 04:27.540
好 这边呢 首先通过npmon install pnya 是不可以进行一个安装

04:28.260 --> 04:30.100
对不对啊 我们这边来到这里

04:31.140 --> 04:32.740
我们这边首先把它安装一下

04:34.740 --> 04:43.700
啊 走啊 这边已经安装好了啊 然后我们这边可以到这个package.json这边 我们可以来看一下

04:44.260 --> 04:47.940
啊 这边pnya啊 2.0.33对吧 最新版本的

04:48.340 --> 04:51.620
ok 安装好了之后 然后接下来的话 下一步

04:52.020 --> 04:57.940
下一步我们来看一下啊 下一步的话 首先你需要干嘛呢 首先你需要定义一个这个store

04:58.980 --> 05:02.820
知道吧 啊 所说我们在这里 我们在src下面

05:03.460 --> 05:06.020
创建一个名为store的目录

05:06.900 --> 05:09.060
啊 我的这个电脑怎么突然想起来了呢

05:11.640 --> 05:17.880
啊 然后在这个store啊 这个目录里面 然后我们就创建一个我们的这个仓库啊 我们这边呢 叫做use

05:18.440 --> 05:21.720
use container container store

05:22.200 --> 05:23.240
点这个json

05:24.040 --> 05:26.200
ok 这个的话就是我们的仓库文件

05:28.810 --> 05:30.010
仓库文件

05:30.570 --> 05:36.250
好 在仓库文件里面 然后接下来我们做什么呢 首先第一步第一步的话 你从这个pnya里面

05:36.490 --> 05:40.010
啊 说起来我们这边这个pnya还没有挂在啊 我们这边需要这边挂在一下

05:40.490 --> 05:44.570
我们这边现在是这样子的对不对啊 你这边需要把这个pnya挂在一下

05:45.130 --> 05:46.090
所以我们这边的话

05:47.210 --> 05:52.090
首先 import 这边引入一个叫做create pnya

05:53.610 --> 05:56.490
啊 然后 from 从哪里引呢 从这个pnya

05:57.210 --> 06:01.370
从这边引过来 引过来之后 然后接下来这边的话创建

06:02.250 --> 06:03.930
pnya的这个实力

06:05.930 --> 06:12.090
创建pnya实力啊 这边const一个pnya等于一个create pnya

06:13.050 --> 06:17.210
ok 创建完了之后 然后接下来的话 你这边需要干嘛 需要把他

06:17.930 --> 06:20.250
通过优质方法是把他挂在上去

06:21.610 --> 06:23.290
对吧 这边点pnya

06:24.170 --> 06:28.890
ok 把他挂在上去 好 挂在上去之后 然后接下来的话在这边

06:29.770 --> 06:32.570
这边的话我们就可以来创建我们的这个仓库了

06:33.130 --> 06:34.970
好 首先的话这边 import

06:36.010 --> 06:38.410
import 然后from这个pnya

06:38.970 --> 06:43.130
这边的话你可以引入一个什么呢 引入一个叫做define

06:45.130 --> 06:51.290
define 然后store 可以引入这么一个方法啊 这个方法呢 顾名思义就是什么

06:51.850 --> 06:57.690
顾名思义是不是就是用来创建这个仓库的 对不对啊 回头的话 你这边就可以通过这个define store

06:58.010 --> 07:01.130
调用这个方法来创建一个这个仓库

07:01.850 --> 07:06.970
好 这个仓库的话 然后接下来你这边给他取一个名字啊 你注意他这边啊

07:06.970 --> 07:10.650
他官网这边实际上是写的有的 这边他有一个这个第一个这个参数

07:11.290 --> 07:15.050
第一个参数是什么呢 第一个参数他这边的话他是会作为一个id

07:15.610 --> 07:17.130
把这个切换一下 切换成中文吧

07:18.890 --> 07:24.090
这边啊 就这边第一个名字 第一个名字他是什么呢 他是这个store的一个id

07:24.570 --> 07:25.850
唯一的一个id

07:26.570 --> 07:32.650
ok 那pnya的话将用他来连接store和你的这个devtools 这个是我们做调试的

07:33.450 --> 07:35.290
对不对 这是我们做调试的啊

07:35.690 --> 07:39.690
这这边的话就是你给他一个id 我们这边id的话就叫做什么呢 就叫做container

07:40.570 --> 07:45.690
好吧 这是第一个参数 好第二个参数 第二个参数的话一般就是一个对象

07:46.250 --> 07:50.810
啊对象的话里面的话他就是支持两种风格啊 注意第二个参数

07:53.540 --> 07:57.940
第二个参数支持两种风格

07:59.980 --> 08:03.100
哪两种风格呢 一种是opinx api

08:03.820 --> 08:10.460
那opinx api 是不是就是我们这个view里面最经典的那种 api 的这种形式啊 对不对 选项式的

08:10.940 --> 08:13.260
以及什么呢 以及这个composition

08:14.460 --> 08:16.700
composition api

08:17.500 --> 08:22.460
啊 这个呢就是这个组合api 就view3 啊view3所推出的组合api

08:22.700 --> 08:24.860
他这边的话这两种风格他都支持

08:25.580 --> 08:31.100
啊 都支持 所以我们这边的话我们就我们先用这个opinx嘛 我们一会不是还有一个那个

08:31.580 --> 08:35.740
代办四项吗 我们代办四项我们就用这个opinx这个composition api

08:36.140 --> 08:43.260
好吧 ok 好 那接下来第二个选项 第二个选项的话 然后接下来这边你就可以定义什么呢 定义你的这么几个东西

08:43.740 --> 08:44.940
你的state

08:46.460 --> 08:49.260
ok 你的state state 他一般对应的是一个函数

08:51.290 --> 08:55.130
啊函数 在函数里面 然后加这边你返回你的一个状态

08:55.450 --> 08:58.490
不用我们这边那么对应的是一个0

08:59.290 --> 09:00.570
啊对应的是个0

09:01.210 --> 09:04.250
ok 好 然后接下来的话你通过这个defy

09:04.890 --> 09:11.450
这个defy store这个方法 你这边就创建了一个这个仓库 那接下来的话我们这边把这个仓库把存储一下

09:12.250 --> 09:15.050
const 啊我们取名叫做什么叫做use

09:15.850 --> 09:16.890
container store

09:18.010 --> 09:23.290
好 关于这个命名的话我要说一下 这个命名的话这个也是就是官方有这个推荐的

09:23.690 --> 09:27.690
啊 这边的话是在我看是在哪个位置啊 是在state

09:28.650 --> 09:29.690
啊 是不是在state

09:30.250 --> 09:31.770
好像是在定义store这边

09:34.380 --> 09:34.540
你

09:35.500 --> 09:36.860
啊 这里这里对了啊

09:37.260 --> 09:42.140
你可以对这个defy store的返回值进行任意的命名 他指的就是这个字

09:42.620 --> 09:45.340
啊 但最好使用什么呢 使用store的名字

09:45.900 --> 09:48.620
同时以什么呢 同时以use开头

09:48.940 --> 09:50.220
instore结尾

09:50.620 --> 09:54.060
比如说啊 你让他这边 比如说use user store

09:54.380 --> 09:57.740
use card store啊 use这个product store

09:58.700 --> 10:05.100
可不可以啊 他这边实际上实际上是有这个官方推荐的这个标准的啊 说说我们这边呢就叫做什么叫做use

10:05.420 --> 10:08.140
container store和这边这个id是不是也就对应着的

10:08.860 --> 10:12.300
对不对 好 然后回头的话你把这个store你把它干嘛呢 你把它

10:12.860 --> 10:19.180
倒出出去啊 这边我们把它倒出出去 好 那接下来我们这边的话我们这个store

10:19.580 --> 10:20.780
我们就创建好了

10:21.740 --> 10:24.860
好 创建好了之后 然后接下来来到我们的这个组件

10:25.900 --> 10:27.420
来到我们的这个container这边

10:27.820 --> 10:30.460
好 这边的话我们是不是就是 现在呢你这边是写实的

10:30.860 --> 10:35.580
对不对 那现在呢我希望从我的仓库来获取我的这个数据

10:36.140 --> 10:37.820
啊 那接下来这边首先第一步

10:40.220 --> 10:42.140
首先第一步 这边的话import

10:45.300 --> 10:50.980
import一个什么呢 这边use这个container store

10:52.180 --> 10:53.300
然后front

10:54.180 --> 10:56.580
这边呢是圈下面的这个store

10:57.700 --> 11:00.180
下面的这个use container

11:02.550 --> 11:08.390
usecontainerstore.js

11:09.030 --> 11:12.550
对吧 首先先把这个store先把它引入进来 你注意这个圈

11:13.350 --> 11:15.830
圈的话我这边是指向的src

11:16.550 --> 11:19.510
啊 这个的话是在wet里面配置了的

11:20.310 --> 11:24.310
看到没有 你如果是新搭建的这个wet项目你这个是没有的

11:25.030 --> 11:28.550
你这边的话你直接用的话是会爆错的啊 这边需要在wet里面

11:28.870 --> 11:33.430
在这个wet.config.js里面你这边需要配置一下啊 你看这边这个

11:33.510 --> 11:36.310
ant符号 它这边指向这个src目录

11:36.950 --> 11:38.790
看到没有啊 你需要配置一下啊

11:39.350 --> 11:43.430
好 这边首先引入 引入的话引入了就是什么 引入了是不是就是这个

11:44.470 --> 11:45.590
对不对 是不是就这个方法

11:46.470 --> 11:49.430
对不对 好 然后接下来我们这边我们拿到这个store

11:50.710 --> 11:53.430
这边 const一个这个store

11:53.990 --> 11:56.230
等于一个usecontainerstore

11:56.950 --> 11:57.910
啊 我们这边执行

11:59.510 --> 12:01.430
OK 这边呢就是拿到仓库

12:03.750 --> 12:07.030
拿到仓库之后 然后接下来我们就可以从仓库干嘛呢

12:07.030 --> 12:09.990
从仓库的话我们就可以去解构这个数据

12:10.630 --> 12:12.070
OK 好 接下来

12:16.230 --> 12:18.790
接下来我们需要

12:19.910 --> 12:24.630
就是啊 我们可以从仓库中解构

12:27.130 --> 12:27.610
解构

12:28.730 --> 12:29.850
这个数据出来

12:30.490 --> 12:35.290
OK 解构数据的话注意 我们这边的话我们希望这个数据它是响应式的

12:35.450 --> 12:38.010
说它这边呢它拼了的话它给你提供了一个方法

12:39.050 --> 12:42.250
这边是在state 我看这边是应该是在访问

12:43.530 --> 12:44.250
我找一下啊

12:45.450 --> 12:46.490
这边的话

12:47.690 --> 12:52.010
啊 这边收一下 它这边呢应该是有一个方法叫做这个store

12:52.890 --> 12:53.770
然后to

12:54.970 --> 12:55.770
这个ref

12:58.380 --> 13:01.740
啊 这儿没有 这儿没有的话那就是在我看是不是在定一store这边

13:03.660 --> 13:04.780
定一store这边

13:05.740 --> 13:07.260
哎 我找一下啊

13:08.620 --> 13:09.980
我记得它这边的话是

13:11.260 --> 13:14.620
有写的 就你这边想要你的数据是响应式的话

13:15.340 --> 13:20.570
这边你得通过 我看一下store

13:21.050 --> 13:21.930
computed

13:24.680 --> 13:25.560
嗯 这里这里

13:27.720 --> 13:29.560
这里的话你看它这边的话是

13:30.680 --> 13:33.400
这里你看这边的话你首先是不是拿到这个store

13:33.960 --> 13:37.640
对了 拿到store之后你看它这边是直接从store里面解构什么

13:37.640 --> 13:38.600
是不是解构这个数据

13:39.320 --> 13:41.560
对不对 它这个的话它是没有响应式的 你看它这边

13:41.960 --> 13:42.760
this is what

13:43.160 --> 13:45.080
这个this is want to work

13:45.400 --> 13:46.760
对吧 because it breaks

13:47.080 --> 13:48.360
这个reactivity

13:48.680 --> 13:50.920
就这边的话它破坏了这个响应式

13:51.400 --> 13:52.680
啊 这里这里 这里有

13:52.680 --> 13:53.480
因为它这边

13:53.720 --> 13:54.840
它这边明明有 它这边

13:55.480 --> 13:56.760
显示的是0啊 这边

13:57.160 --> 14:00.840
好 为了从什么呢 为了从store中提取属性时

14:01.080 --> 14:03.000
保持起响应式

14:03.400 --> 14:06.760
你需要使用什么呢 你需要使用store to refs

14:07.480 --> 14:09.320
看到没有 你这边呢需要像这个样子

14:09.960 --> 14:11.000
store to refs

14:11.000 --> 14:14.520
然后从这个store里面啊 解构出这个数据里面出来

14:15.240 --> 14:17.160
看到没有啊 说说这边的话

14:18.120 --> 14:20.680
这个这个它来源于哪里呢 这个它来源于平仰

14:21.320 --> 14:23.320
啊 这个方法它来源于平仰

14:23.480 --> 14:24.840
所以这边你从平仰里面

14:25.240 --> 14:27.320
你这边来把它解构出来 解构出来之后

14:27.320 --> 14:28.440
然后在这边你const

14:29.240 --> 14:30.920
const 然后加一个nam

14:31.640 --> 14:32.600
等于一个

14:33.320 --> 14:34.520
store to refs

14:34.520 --> 14:35.560
然后把这个store

14:36.840 --> 14:37.720
把这个store

14:38.040 --> 14:39.000
拿过去

14:39.640 --> 14:40.200
对不对

14:40.600 --> 14:43.240
ok 那这边我们就拿到这个nam了

14:43.240 --> 14:44.680
而且这个它是一个什么呢

14:44.680 --> 14:46.040
它是一个响应式的

14:46.600 --> 14:48.520
ok 好 然后加这边 这边呢

14:48.520 --> 14:49.800
我们这边把它这个

14:50.840 --> 14:52.440
呃 这边我们就不写词了

14:52.440 --> 14:53.400
我们这边就写什么

14:53.400 --> 14:54.600
什么就写这个nam

14:55.400 --> 14:56.600
对啊 保存

14:57.160 --> 14:58.200
看到有没有什么问题

14:58.600 --> 14:59.720
啊 没有问题 没有问题

14:59.720 --> 15:01.160
那要来到我们的页面来看一下

15:02.520 --> 15:03.320
这边是个0

15:03.800 --> 15:05.240
对呀 我们一开始应该是0吧

15:06.200 --> 15:07.640
我们这边定义了是0

15:07.640 --> 15:08.520
是否搞定了

15:09.400 --> 15:09.880
对不对

15:09.880 --> 15:11.800
那我们现在的话就从这个倉库

15:11.800 --> 15:14.360
我们就成功的拿到这个数据了

15:14.360 --> 15:15.880
拿到这个数据之后

15:15.880 --> 15:16.600
然后接下来的话

15:16.600 --> 15:18.360
你要让它这个加加减减

15:18.360 --> 15:19.080
然后这边的话

15:19.080 --> 15:20.360
你可以直接什么呢

15:20.360 --> 15:21.880
直接在这个nam上面

15:22.440 --> 15:23.160
进行操作

15:23.160 --> 15:25.480
ok 那比如说我们这边来绑定实践

15:26.040 --> 15:27.080
ture click

15:27.880 --> 15:29.320
我们这边就直接干嘛呢

15:29.320 --> 15:30.680
直接让它这个nam

15:31.400 --> 15:31.880
减减

15:34.490 --> 15:35.850
ok 这边ture

15:36.810 --> 15:37.370
click

15:37.930 --> 15:38.650
等于

15:38.650 --> 15:40.890
这边直接让这个nam加加

15:41.770 --> 15:42.250
好 保存

15:42.810 --> 15:43.530
保存了之后

15:43.530 --> 15:45.050
让我们这边来看一下

15:45.050 --> 15:45.450
你看

15:46.330 --> 15:46.970
是不是就ok了

15:47.770 --> 15:48.330
对不对

15:48.330 --> 15:49.930
你看这边一个响应式的数据

15:49.930 --> 15:51.850
我们这边针对这个响应式的数据

15:51.850 --> 15:52.730
做这个操作

15:52.730 --> 15:54.250
你看这边是没有任何问题

15:55.130 --> 15:55.450
对不对

15:55.450 --> 15:56.170
你看我们这边一个

15:56.170 --> 15:57.290
最简单的这个技术器

15:57.850 --> 15:58.970
我们就实现了

16:00.090 --> 16:01.450
好 那我们这边回到笔记

16:01.450 --> 16:02.650
我们这边来记录一下

16:02.650 --> 16:03.450
首先第一步

16:04.410 --> 16:06.810
第一步的话是安装

16:06.810 --> 16:07.290
批鸟

16:09.690 --> 16:10.330
安装

16:11.450 --> 16:11.930
批鸟

16:12.570 --> 16:12.970
首先

16:14.010 --> 16:17.930
第一步需要安装这个批鸟

16:19.130 --> 16:20.330
可以通过

16:21.130 --> 16:22.650
下面的这个命令

16:24.170 --> 16:24.650
命令

16:25.610 --> 16:27.050
进行这个安装

16:29.210 --> 16:30.730
这边就是npmon install

16:31.770 --> 16:32.250
批鸟

16:33.050 --> 16:33.770
对不对

16:33.770 --> 16:34.170
好

16:34.250 --> 16:35.290
然后安装完毕后

16:36.970 --> 16:38.410
安装完毕后

16:38.970 --> 16:39.530
可以什么

16:40.010 --> 16:41.290
这就是需要

16:42.330 --> 16:44.170
需要在这个应用中

16:44.890 --> 16:45.770
在你的这个view

16:46.490 --> 16:47.370
应用中

16:47.370 --> 16:48.170
是挂载

16:49.130 --> 16:49.690
对不对

16:49.690 --> 16:51.450
挂载你的这个批鸟

16:51.450 --> 16:52.330
那挂载的话

16:52.330 --> 16:52.650
这边

16:54.170 --> 16:54.970
就是在哪里

16:54.970 --> 16:56.730
是不是在这个闷点阶势里面

16:56.730 --> 16:58.170
首先到你这边把它引入

16:58.170 --> 16:59.690
引入之后创建这个实力

17:01.830 --> 17:02.230
对不对

17:02.230 --> 17:02.950
创建实力

17:02.950 --> 17:04.230
创建了实力完了之后

17:04.310 --> 17:04.870
然后接下来

17:04.870 --> 17:05.510
这边在

17:05.510 --> 17:05.990
干嘛

17:05.990 --> 17:07.110
这边是不是在进行挂载

17:09.300 --> 17:10.660
这边在进行挂载

17:10.660 --> 17:11.700
U字这个批鸟

17:11.700 --> 17:12.500
把这个加粗吧

17:15.820 --> 17:16.540
我好像

17:16.540 --> 17:18.620
好像局部好像还没办法加粗

17:18.620 --> 17:19.020
我看一下

17:19.980 --> 17:20.380
哦

17:21.260 --> 17:22.380
这里还没办法加粗

17:22.380 --> 17:25.100
这个这个是在那个这个代码片段里面

17:25.580 --> 17:26.700
我弄成这这里了

17:27.500 --> 17:28.620
那反正你就知道嘛

17:28.620 --> 17:29.500
这边要挂载

17:29.500 --> 17:30.060
对不对

17:30.060 --> 17:31.260
好挂载完了之后

17:31.260 --> 17:32.380
然后接下来的话

17:32.380 --> 17:34.220
在这个src目录下面

17:35.260 --> 17:36.300
在src

17:37.020 --> 17:38.060
目录下面

17:38.060 --> 17:39.500
然后创建什么

17:39.500 --> 17:41.180
是不是创建这个仓库文件

17:42.700 --> 17:43.340
对不对

17:43.340 --> 17:43.660
啊

17:43.660 --> 17:43.980
这边

17:43.980 --> 17:44.620
仓库文件

17:45.500 --> 17:46.620
仓库目录啊

17:46.620 --> 17:47.340
仓库目录

17:47.900 --> 17:48.300
store

17:48.940 --> 17:49.420
啊这个的话

17:49.420 --> 17:50.940
一般就是固定都叫store

17:51.500 --> 17:51.740
对不对

17:51.740 --> 17:53.020
就好比你那个路由样

17:53.020 --> 17:54.220
路由的话都叫rotor

17:54.220 --> 17:55.100
你叫其他名字

17:55.100 --> 17:55.740
可不可以呢

17:55.740 --> 17:56.620
也可以

17:56.620 --> 17:56.780
啊

17:56.780 --> 17:57.500
但是一般的话

17:57.500 --> 17:58.540
这个是一个就是

18:00.460 --> 18:02.140
就是一个约定嘛

18:02.860 --> 18:03.500
对不对

18:03.500 --> 18:03.980
一般的话

18:03.980 --> 18:04.540
就是路由的话

18:04.540 --> 18:05.580
都叫做rotor

18:05.820 --> 18:06.540
这边仓库的话

18:06.540 --> 18:08.220
一般就都叫做这个store

18:08.220 --> 18:08.460
好

18:08.460 --> 18:09.500
那你这边创建这个

18:09.500 --> 18:10.780
仓库目录store

18:10.780 --> 18:11.100
啊

18:11.100 --> 18:11.740
然后在下面

18:13.020 --> 18:15.100
在该目录下面

18:16.940 --> 18:19.420
在该目录下面

18:19.420 --> 18:23.100
创建对应的这个仓库文件

18:25.100 --> 18:26.060
注意

18:26.060 --> 18:26.460
名字

18:27.900 --> 18:28.460
名字

18:31.290 --> 18:33.130
一般是什么呢

18:33.130 --> 18:35.050
一般是这个user

18:35.050 --> 18:36.250
然后叉叉叉

18:36.250 --> 18:36.890
然后store

18:38.170 --> 18:38.730
对不对

18:38.730 --> 18:38.970
啊

18:38.970 --> 18:40.090
你这边的话就和

18:40.090 --> 18:41.690
就和这里面是对应着的

18:41.690 --> 18:43.450
就比方你这边use container store

18:43.450 --> 18:45.050
人家这边这边就对应着的

18:45.690 --> 18:46.010
对不对

18:48.170 --> 18:48.490
好

18:48.490 --> 18:49.450
然后接下来的话

18:49.450 --> 18:50.810
在这个仓库文件中

18:51.690 --> 18:54.730
在仓库文件中

18:55.370 --> 18:56.490
我们可以

18:58.010 --> 18:58.730
通过什么呢

18:58.730 --> 19:00.090
通过这个defy

19:00.810 --> 19:01.210
对不对

19:01.210 --> 19:02.330
通过这个defystore

19:03.930 --> 19:06.330
通过defystore

19:06.890 --> 19:07.850
来这个创建

19:11.030 --> 19:12.870
来创建一个这个

19:12.870 --> 19:14.150
创建一个这个pina

19:15.030 --> 19:15.350
仓库

19:16.870 --> 19:17.190
入下

19:19.800 --> 19:20.040
好

19:20.040 --> 19:21.640
这边就把这个代码把拿过来

19:26.140 --> 19:26.460
好

19:26.460 --> 19:28.220
然后创建的时候支持两种风格

19:33.450 --> 19:35.290
创建的时候

19:35.290 --> 19:37.690
支持两种风格

19:38.730 --> 19:39.290
对不对

19:39.290 --> 19:40.570
分别是这个选项

19:41.930 --> 19:42.650
选项是

19:44.250 --> 19:45.530
选项是

19:47.900 --> 19:49.820
选项是这个api

19:50.380 --> 19:51.340
以及是吗

19:51.420 --> 19:52.300
这个组合式

19:53.420 --> 19:54.620
组合式

19:54.620 --> 19:55.100
api

19:55.900 --> 19:56.300
对不对

19:56.300 --> 19:57.020
那我们这边呢

19:57.020 --> 19:58.300
先用这个选项是

19:59.180 --> 20:00.220
先用选项是

20:00.220 --> 20:02.060
我们一会做那个代码事项的时候

20:02.060 --> 20:03.820
我们再来用这个组合式

20:04.540 --> 20:04.780
OK

20:05.660 --> 20:05.900
好

20:05.900 --> 20:06.620
那我们现在的话

20:06.620 --> 20:08.540
一个这个最基本的这个应用

20:08.540 --> 20:09.580
这边就出来了

20:09.580 --> 20:09.820
好

20:09.820 --> 20:10.540
那在这边的话

20:10.540 --> 20:11.180
你也可以什么呢

20:11.180 --> 20:11.580
这边的话

20:11.580 --> 20:13.980
你也可以在这个actions里面

20:13.980 --> 20:15.820
通过方法来增加它

20:15.820 --> 20:17.020
那比如说我们这边的话

20:17.020 --> 20:17.660
我们在这里

20:19.020 --> 20:20.620
我们新增一个actions

20:21.820 --> 20:23.340
它对应的也是个对象

20:23.340 --> 20:23.580
好

20:23.580 --> 20:24.220
那你在这边上

20:24.220 --> 20:25.260
你就可以书写

20:25.260 --> 20:26.700
比如说我们书写个同步的方法

20:28.890 --> 20:30.570
比如说我们这边就是increlement

20:33.620 --> 20:34.260
OK

20:34.260 --> 20:35.300
而这increment呢

20:35.300 --> 20:37.060
它这边要让这个number加加

20:37.060 --> 20:38.020
那我们这边就直接

20:38.020 --> 20:40.580
z.num加加

20:42.580 --> 20:43.220
对不对

20:43.220 --> 20:44.020
我们在这边呢

20:44.020 --> 20:46.020
定义了这么一个方法

20:46.020 --> 20:46.260
好

20:46.260 --> 20:47.700
定义了这么一个方法之后

20:47.700 --> 20:48.660
然后接下来的话

20:48.660 --> 20:50.420
回到你的这个组建这边

20:50.420 --> 20:50.660
好

20:50.660 --> 20:51.300
组建这边的话

20:51.300 --> 20:52.660
你就可以从仓库

20:52.660 --> 20:53.860
把这个方法解构出来

20:54.740 --> 20:54.980
啊

20:54.980 --> 20:55.860
仍然是从仓库

20:58.410 --> 20:59.370
从仓库

21:00.170 --> 21:02.410
将方法解构

21:05.420 --> 21:06.700
解构出来

21:07.340 --> 21:07.580
好

21:07.580 --> 21:08.300
这边const

21:09.020 --> 21:10.140
这边我们刚才定义了一个

21:10.140 --> 21:11.260
叫做increment

21:12.940 --> 21:14.940
然后接下来这边increment

21:16.860 --> 21:17.820
increment

21:17.820 --> 21:21.020
然后等于这边store

21:22.460 --> 21:22.940
对

21:22.940 --> 21:23.580
你这个方法

21:23.580 --> 21:23.980
方法呢

21:23.980 --> 21:25.980
就不需要这个什么store to riffs了

21:25.980 --> 21:27.500
这个就不需要包裹了

21:27.580 --> 21:28.220
ok

21:28.220 --> 21:28.540
好

21:28.540 --> 21:29.340
然后接下来的话

21:29.340 --> 21:30.060
你在这边

21:30.060 --> 21:31.740
这边你加加的时候

21:31.740 --> 21:32.220
你这边呢

21:32.220 --> 21:34.060
就可以直接写这个increment

21:36.410 --> 21:37.130
increment

21:38.090 --> 21:38.490
保存

21:39.290 --> 21:39.610
保存

21:40.170 --> 21:40.890
保存了之后

21:40.890 --> 21:41.850
让一下这边来看一下

21:42.570 --> 21:43.370
重新刷新一下

21:43.930 --> 21:44.170
走

21:44.730 --> 21:45.610
是不是仍然是ok的

21:46.250 --> 21:46.730
对不对

21:46.730 --> 21:47.370
啊刷新一下

21:47.930 --> 21:48.570
不是仍然ok

21:49.450 --> 21:50.170
对不对

21:50.170 --> 21:50.890
但有的同学说

21:50.890 --> 21:52.490
你这样子麻烦了吗

21:52.490 --> 21:52.730
对吧

21:52.730 --> 21:53.690
我这边直接浪板

21:53.690 --> 21:54.890
减减就搞定了事情

21:54.890 --> 21:56.490
你非要非要这样子写

21:56.490 --> 21:57.450
搞得很麻烦

21:57.450 --> 21:58.330
但是你这边呢

21:58.330 --> 22:00.090
那只是因为你数据变化很简单

22:00.970 --> 22:01.450
对不对

22:01.450 --> 22:03.290
你如果数据变化很麻烦的话

22:03.290 --> 22:04.650
是不是还是推荐什么

22:04.650 --> 22:05.610
是不是还是推荐

22:06.170 --> 22:06.810
使用这种

22:06.810 --> 22:08.330
就是在action上面

22:08.330 --> 22:10.570
来定义这个修改数据的方法

22:10.570 --> 22:12.090
然后接下来在主键里面干嘛

22:12.090 --> 22:13.290
在主键里面是不是调用

22:13.770 --> 22:15.770
调用这个仓库缅的方法来进行修改

22:16.570 --> 22:17.050
对吧

22:17.050 --> 22:18.250
还是推荐这种方式

22:18.970 --> 22:19.770
包括我们后面

22:19.770 --> 22:21.370
我们后面会讲那个

22:21.930 --> 22:24.890
就是你使用这个拼压的时候的一个最佳实践

22:25.450 --> 22:28.010
啊那这边这个到时候讲这个最佳实践的时候

22:28.330 --> 22:29.930
其中有一条就是

22:29.930 --> 22:30.970
统一使用什么呢

22:30.970 --> 22:33.450
统一使用这个就是action式里面的方法

22:33.450 --> 22:34.730
来修改这个

22:34.730 --> 22:36.010
仓库的这个状态

22:36.010 --> 22:36.570
ok

22:36.570 --> 22:38.810
这个我们后面讲这个最佳实践的时候我们再说

22:39.690 --> 22:40.010
ok

22:40.730 --> 22:42.410
啊这个是第一组

22:42.410 --> 22:42.810
啊

22:43.370 --> 22:43.530
好

22:43.530 --> 22:44.250
然后接下来的话

22:44.250 --> 22:45.130
这边第二组

22:45.130 --> 22:46.810
第二组我们来看一下这个getters

22:49.690 --> 22:50.970
接下来这边第二组

22:56.220 --> 22:57.180
第二组

22:57.180 --> 22:58.060
啊第二组的话

22:58.060 --> 22:58.540
我们这边呢

22:58.540 --> 23:00.220
我们来看一下关于这个getters

23:03.260 --> 23:05.180
还有啊这边是

23:05.980 --> 23:06.540
getters

23:09.180 --> 23:10.700
这边是getters

23:11.260 --> 23:11.660
数据

23:15.830 --> 23:16.230
ok

23:16.230 --> 23:17.990
啊这边认一个div

23:19.030 --> 23:19.910
然后btn

23:19.910 --> 23:21.030
啊把这个这个复制一份

23:23.290 --> 23:24.890
把这个复制一份

23:24.890 --> 23:25.850
这边拿过来

23:26.890 --> 23:27.770
拿过来之后

23:27.770 --> 23:28.810
然后接下来这边

23:29.530 --> 23:30.970
这边我们就不再是那么了

23:30.970 --> 23:33.050
啊我们在这边的话定义一个这个getters

23:34.810 --> 23:35.370
ok

23:35.370 --> 23:36.570
啊在这里

23:36.570 --> 23:37.370
getters

23:38.330 --> 23:39.610
对应是一个对象

23:40.490 --> 23:41.130
啊

23:41.130 --> 23:42.330
好在这个这里面

23:42.410 --> 23:43.370
这里这个getters

23:43.370 --> 23:44.170
这个getters的话

23:44.170 --> 23:44.890
实际上大家的话

23:44.890 --> 23:46.650
应该是比较熟悉的

23:46.650 --> 23:48.010
因为这个东西的话

23:48.010 --> 23:49.290
之前在那个views里面

23:49.290 --> 23:50.650
是不是也是有的

23:50.650 --> 23:51.770
它主要是做什么

23:51.770 --> 23:52.570
它是不是针对

23:54.010 --> 23:55.610
针对这个上面

23:56.570 --> 23:58.570
state的这个数据

23:59.210 --> 24:00.090
做一个什么

24:00.090 --> 24:01.130
是不是做一个二次计算

24:02.170 --> 24:02.810
对不对

24:02.810 --> 24:03.210
可以

24:04.250 --> 24:06.570
看作是计算属性

24:08.090 --> 24:08.970
是不是可以看作是

24:08.970 --> 24:10.090
主前里面的计算属性

24:10.890 --> 24:11.610
对不对

24:11.610 --> 24:12.970
依赖于上面的这个数据

24:12.970 --> 24:14.650
然后做一个二次计算

24:14.650 --> 24:15.690
好比如说我们这边呢

24:15.690 --> 24:17.690
就是写一个这个double

24:19.050 --> 24:19.930
比较double count

24:22.760 --> 24:23.400
ok

24:23.400 --> 24:24.680
好它对应的是什么呢

24:24.680 --> 24:25.800
对应的是一个函数

24:28.310 --> 24:29.270
对应是个函数

24:29.270 --> 24:30.150
好这个函数的话

24:30.150 --> 24:32.470
大家我们这边拿到这个state

24:32.470 --> 24:33.030
拿到之后

24:33.030 --> 24:34.230
我们这边就直接返回

24:34.790 --> 24:36.950
state.那么

24:36.950 --> 24:38.070
我们乘以1-2

24:39.110 --> 24:41.590
我们相当于把这个数是不是变成了两倍

24:42.550 --> 24:43.190
对不对

24:43.190 --> 24:44.150
好这边我看一下

24:44.230 --> 24:45.110
这边应该是

24:45.110 --> 24:45.910
这边应该是double count

24:46.790 --> 24:47.510
ok

24:47.510 --> 24:49.750
好把这个呢变成了这个两倍

24:49.750 --> 24:50.470
ok

24:50.470 --> 24:51.750
好然后完成之后

24:51.750 --> 24:52.950
然后接下来你在这边

24:54.630 --> 24:55.350
你在这边的话

24:55.350 --> 24:56.630
你就可以把它引入

24:57.910 --> 24:58.630
这边的话

24:58.630 --> 24:59.270
这里

24:59.270 --> 24:59.990
这里你刚才

25:00.870 --> 25:01.910
这边从这个store

25:01.910 --> 25:03.270
结构出来的纳姆对吧

25:03.270 --> 25:04.390
然后在这边的getters

25:04.390 --> 25:05.270
也是属于数据

25:05.270 --> 25:06.470
所以这边在这边引入

25:06.470 --> 25:09.350
同样这边要需要通过这个store to riffs

25:10.070 --> 25:11.750
保持它的这个响应式

25:12.550 --> 25:13.190
ok

25:13.190 --> 25:14.070
好然后在这边

25:14.070 --> 25:14.630
在这里

25:14.630 --> 25:16.150
这里我们就不是纳姆

25:16.150 --> 25:18.390
而是这个double count

25:19.110 --> 25:20.310
来我们这边来看一下

25:20.310 --> 25:20.710
好不好

25:20.710 --> 25:20.950
是

25:22.230 --> 25:22.870
来到这边

25:23.750 --> 25:25.030
这边数据没出来是吧

25:25.030 --> 25:25.830
我们来看一下这边

25:25.830 --> 25:27.030
数据为什么没出来

25:28.070 --> 25:28.790
这边的话

25:29.830 --> 25:30.950
是哪里没对吗

25:32.630 --> 25:34.310
这边的话getters

25:34.310 --> 25:35.190
double count

25:36.470 --> 25:37.590
然后这边的话

25:39.350 --> 25:40.150
double count

25:42.230 --> 25:43.110
double count

25:43.110 --> 25:43.750
稍等啊

25:43.910 --> 25:44.390
我看一下

25:46.310 --> 25:47.350
这边保存一下

25:47.350 --> 25:48.390
我重新刷新一下呢

25:49.910 --> 25:50.870
出来了

25:50.870 --> 25:51.590
这边有些时候

25:51.590 --> 25:53.030
你需要重新刷新一下

25:53.030 --> 25:54.070
我们来看一下

25:54.070 --> 25:55.110
你看这边是不是就两倍

25:55.830 --> 25:56.150
对不对

25:56.150 --> 25:57.670
你让我这边这个纳姆增加的时候

25:57.670 --> 25:58.630
这边始终是什么

25:58.630 --> 25:59.510
是不是始终是两倍

26:00.150 --> 26:01.190
包括你下面

26:01.190 --> 26:02.070
下面也一样

26:02.070 --> 26:02.390
为什么

26:02.390 --> 26:03.270
因为你下面的这个

26:04.390 --> 26:05.590
下面的这个两个按钮

26:05.590 --> 26:06.550
本身就是改的什么

26:06.550 --> 26:08.070
这本身改的就是纳姆

26:08.070 --> 26:08.390
对不对

26:08.390 --> 26:09.990
无论是他也好还是他也好

26:09.990 --> 26:11.110
本身改的就是纳姆

26:11.830 --> 26:13.590
这是关于getters数据

26:15.590 --> 26:16.630
这是第二组

26:16.630 --> 26:18.230
通过这个好几个势力

26:18.230 --> 26:19.110
我们来进行说明

26:19.830 --> 26:20.550
大家会发现

26:20.550 --> 26:21.350
整体来讲的话

26:21.350 --> 26:23.030
这个上手其实还是比较简单的

26:23.750 --> 26:24.070
对不对

26:25.110 --> 26:25.670
这第二组

26:26.230 --> 26:27.110
第二组完了之后

26:27.110 --> 26:28.470
人家这边我们来看第三组

26:29.510 --> 26:31.270
这个每一组我把隔一下

26:31.270 --> 26:31.590
这样子

26:33.670 --> 26:34.710
这边的话第三组

26:37.880 --> 26:38.600
第三组的话

26:38.600 --> 26:40.040
这边我们就是来看一下什么呢

26:40.680 --> 26:41.240
第三组的话

26:41.240 --> 26:42.680
我们来看一下这个异步的增加

26:46.140 --> 26:47.820
异步的增加

26:50.010 --> 26:50.730
ok

26:50.730 --> 26:51.850
那异步的增加的话

26:51.850 --> 26:52.490
这边的话

26:53.130 --> 26:54.330
仍然是把这个

26:54.330 --> 26:55.290
把它过来

26:56.650 --> 26:57.770
放到这里

26:57.770 --> 26:58.970
这边仍然是什么呢

26:58.970 --> 27:00.010
仍然是nam

27:00.650 --> 27:01.770
好了那异步的增加的话

27:01.770 --> 27:02.970
那我们在这边

27:02.970 --> 27:04.730
这边我们就需要来写这个

27:04.730 --> 27:06.170
异步的这个方法

27:06.170 --> 27:07.850
我们刚才这边写的这个increment

27:07.850 --> 27:09.130
它是同步的方法

27:09.130 --> 27:11.130
那接下来我们这边写一下

27:11.130 --> 27:11.850
异步的方法

27:13.210 --> 27:13.850
异步方法

27:14.570 --> 27:15.210
异步方法呢

27:15.210 --> 27:16.090
我们这边写两个

27:16.810 --> 27:17.290
sync

27:18.250 --> 27:20.650
这边叫做syncincrement

27:22.650 --> 27:24.330
这电脑转得胡思胡思的

27:25.130 --> 27:25.530
好

27:25.530 --> 27:26.650
然后接下来这边

27:26.650 --> 27:27.130
await

27:27.930 --> 27:29.610
这边我们写个这个promise

27:32.300 --> 27:33.420
promise

27:33.420 --> 27:34.380
然后接下来这边呢

27:34.380 --> 27:37.020
就是newpromise

27:37.020 --> 27:37.900
这边resolve

27:39.740 --> 27:40.620
reject不选

27:41.740 --> 27:42.620
然后接下来这边呢

27:42.620 --> 27:44.380
是set timeout

27:45.820 --> 27:47.020
这边resolve

27:47.100 --> 27:48.940
然后在一秒钟之后

27:51.480 --> 27:52.200
ok

27:52.200 --> 27:52.680
好

27:52.680 --> 27:53.640
然后等待一秒钟

27:53.640 --> 27:54.600
等待一秒钟之后

27:54.600 --> 27:55.480
然后再这边调用

27:55.480 --> 27:57.160
this.increment

27:58.200 --> 27:58.600
ok

27:58.600 --> 28:00.120
这是异步的这个增加

28:00.680 --> 28:01.000
好

28:01.000 --> 28:02.120
然后异步的这个减少

28:02.920 --> 28:03.240
sync

28:04.040 --> 28:05.160
sync decrement

28:08.100 --> 28:09.060
decrement

28:09.060 --> 28:10.500
同样这边我们让它增加

28:12.340 --> 28:12.980
增加之后

28:12.980 --> 28:13.940
然后一秒钟之后

28:13.940 --> 28:14.660
然后再加我们这边

28:15.300 --> 28:15.780
decrement

28:16.820 --> 28:18.340
这边我们新增一个嘛

28:18.340 --> 28:19.300
新增一个 decrement

28:22.150 --> 28:23.270
这个就是减减

28:25.450 --> 28:26.250
对不对

28:26.250 --> 28:27.370
减减

28:27.370 --> 28:27.690
好

28:27.690 --> 28:29.370
然后加这边我们有两个异步方法

28:29.370 --> 28:30.890
这两个异步方法分别是什么

28:30.890 --> 28:31.930
是不是等待一秒钟

28:32.650 --> 28:33.290
对不对

28:33.290 --> 28:33.770
这边呢

28:34.570 --> 28:34.970
等待

28:36.250 --> 28:36.810
一秒钟

28:39.740 --> 28:39.980
好

28:39.980 --> 28:40.700
等待一秒钟

28:40.700 --> 28:41.420
一秒钟之后

28:41.420 --> 28:43.100
然后加这边进行增加

28:43.100 --> 28:44.380
你想这边是异步的

28:44.380 --> 28:45.020
你想它现在呢

28:45.020 --> 28:46.300
就放在一起了

28:46.300 --> 28:47.340
同步和异步

28:47.340 --> 28:49.100
都是在action里面定义

28:49.660 --> 28:49.900
好

28:49.900 --> 28:50.460
回头的话

28:50.460 --> 28:51.980
回到你的这个container

28:52.540 --> 28:53.500
container这边的话

28:53.500 --> 28:54.300
你这边解构

28:54.380 --> 28:55.820
是不是就是可以把这两个方法

28:55.820 --> 28:56.620
把它解构出来

28:58.900 --> 28:59.300
对不对

28:59.300 --> 29:00.660
一个叫做async

29:01.780 --> 29:03.380
async increment

29:05.300 --> 29:07.940
一个叫做async decrement

29:10.390 --> 29:11.190
OK

29:11.190 --> 29:11.510
好

29:11.510 --> 29:12.390
然后加这边

29:12.390 --> 29:13.350
这边的话

29:13.350 --> 29:15.430
增加增加对应的是这个

29:16.150 --> 29:16.710
然后接下来

29:16.710 --> 29:17.590
然后这边减少

29:17.590 --> 29:19.910
减少的话对应的是这个

29:22.950 --> 29:23.270
OK

29:23.990 --> 29:24.390
好

29:24.390 --> 29:24.710
来

29:24.710 --> 29:25.830
我们这边来看一下

29:25.830 --> 29:26.870
这是关于异步

29:27.990 --> 29:28.150
好

29:28.150 --> 29:29.030
这边刷新一下

29:30.150 --> 29:30.470
好

29:30.470 --> 29:30.710
走

29:32.070 --> 29:32.710
搞定秒

29:32.710 --> 29:33.030
对不对

29:33.030 --> 29:34.230
是不是等待了一秒钟

29:34.230 --> 29:34.470
走

29:35.990 --> 29:36.710
你看

29:36.710 --> 29:38.710
这是关于这个异步的操作

29:38.710 --> 29:39.670
那异步的操作的话

29:39.670 --> 29:40.710
这边你就知道了

29:40.710 --> 29:42.230
那实际上的话就是干嘛

29:42.230 --> 29:43.590
因为它这边是不是更加简单了

29:44.310 --> 29:44.950
对不对

29:44.950 --> 29:45.750
你这边异步的话

29:45.750 --> 29:47.430
就也放在这个action里面

29:47.430 --> 29:48.790
它反正它是属于方法嘛

29:49.830 --> 29:50.630
对不对

29:50.630 --> 29:52.150
这是关于这个异步的操作

29:52.870 --> 29:53.190
好

29:53.190 --> 29:54.550
然而这样我看一下还有什么

29:55.030 --> 29:56.470
基本上其实就是这些

29:56.470 --> 29:57.510
这边定义store

29:58.150 --> 29:58.710
定义实作

29:58.710 --> 29:59.750
它这边说了有两种

29:59.750 --> 30:00.790
一种是option store

30:00.790 --> 30:02.230
一种是setup store

30:02.230 --> 30:03.510
我们现在用的是option

30:04.630 --> 30:05.590
我们先用的是这种

30:06.950 --> 30:07.990
setup

30:07.990 --> 30:09.430
我们一会儿讲那个代办事项

30:09.430 --> 30:10.630
这个代办事项的时候

30:10.630 --> 30:11.510
我们再来用

30:11.510 --> 30:11.830
好

30:11.830 --> 30:12.470
再加上我们这边

30:12.470 --> 30:14.070
我们现在看了这个state

30:15.350 --> 30:15.990
state

30:15.990 --> 30:17.510
然后我们这边访问state

30:18.070 --> 30:19.670
访问state这个没问题

30:19.670 --> 30:20.710
再加这边重置

30:20.710 --> 30:21.910
对它这边有几个方法

30:21.910 --> 30:24.230
一个是这个downer reset

30:25.270 --> 30:26.470
downer reset

30:26.470 --> 30:27.350
那还有什么呢

30:27.430 --> 30:29.030
还有就是关于这个

30:29.030 --> 30:29.510
看一下

30:30.070 --> 30:31.510
还有一个是downer patch

30:32.070 --> 30:32.390
这里

30:32.950 --> 30:34.070
downer patch

30:34.070 --> 30:35.350
把这两个方法讲一下

30:36.550 --> 30:36.790
OK

30:37.670 --> 30:37.910
好

30:37.910 --> 30:38.790
我们这边再来两组

30:40.390 --> 30:41.430
这是第三组

30:47.460 --> 30:47.780
好

30:47.780 --> 30:48.260
这边

30:48.260 --> 30:49.220
这边是第三组

30:49.220 --> 30:50.260
再加这边第四组

30:53.770 --> 30:54.490
第四组的话

30:54.490 --> 30:55.690
我们这边来演示一下

30:56.810 --> 30:59.850
演示一下这个store.downer reset方法

31:01.370 --> 31:03.370
store.downer reset

31:03.530 --> 31:04.090
reset

31:06.970 --> 31:08.170
好这个方法是干嘛的呢

31:08.170 --> 31:09.850
这个方法一看名字就是什么

31:09.850 --> 31:10.490
是不是重置

31:11.210 --> 31:11.690
对不对

31:11.690 --> 31:15.370
你可以通过store的这个downer reset方法

31:15.370 --> 31:16.970
将这个reset

31:16.970 --> 31:19.770
将这个state重置为初始字

31:20.330 --> 31:20.650
OK

31:20.650 --> 31:21.210
那来呗

31:21.850 --> 31:22.650
那我们这边的话

31:23.290 --> 31:23.850
这里面

31:23.850 --> 31:25.290
这里面的话就是一个什么

31:25.290 --> 31:26.970
是不是就是一个这个button就可以啊

31:29.690 --> 31:30.250
对吧

31:30.250 --> 31:31.610
这里面就是一个button

31:33.290 --> 31:34.410
button给个样式

31:34.970 --> 31:35.370
btn

31:36.090 --> 31:36.490
好

31:36.570 --> 31:37.610
然后接下来这里

31:37.610 --> 31:38.730
这里的话是重置

31:40.730 --> 31:41.450
重置

31:41.450 --> 31:41.690
好

31:41.690 --> 31:43.530
这边ture click

31:44.330 --> 31:45.370
等于一个什么呢

31:45.370 --> 31:45.610
好

31:45.610 --> 31:46.090
在这边呢

31:46.090 --> 31:49.210
你就直接调用store.downer reset

31:50.330 --> 31:51.930
直接调这个方法就可以了

31:51.930 --> 31:52.330
OK

31:52.330 --> 31:53.290
那我们来看一下好不好使

31:55.050 --> 31:55.370
好

31:55.370 --> 31:56.010
回到这里

31:56.810 --> 31:57.290
刷新一下

31:57.930 --> 31:58.250
好

31:58.250 --> 31:58.650
这边呢

31:58.650 --> 31:59.770
我们这边走走走走

32:00.330 --> 32:01.450
现在目前为止没问题

32:01.450 --> 32:01.770
对吧

32:01.770 --> 32:02.810
大家我们这边重置

32:03.370 --> 32:03.930
怎么搞定了

32:04.490 --> 32:05.210
对不对

32:05.370 --> 32:07.530
这边就重置为这个初始数据了

32:08.090 --> 32:09.050
我们再来看一下什么呢

32:09.050 --> 32:09.770
再来看一下这个

32:10.970 --> 32:13.450
那个那个downer patch方法

32:17.350 --> 32:18.310
这边第五组

32:22.440 --> 32:23.880
这边我们看一下这个patch

32:29.460 --> 32:30.260
patch方法

32:30.260 --> 32:31.140
啊patch方法的话

32:31.140 --> 32:31.620
我们这边

32:32.900 --> 32:33.540
patch我们呢

32:33.540 --> 32:34.980
首先来看一下它是做什么呢

32:36.420 --> 32:36.980
patch

32:37.860 --> 32:39.380
它是做一个变更

32:40.020 --> 32:40.420
对不对

32:40.420 --> 32:40.980
你看

32:40.980 --> 32:43.940
除了用这个store.cont++

32:43.940 --> 32:45.700
直接修改这个store

32:45.780 --> 32:46.980
你还可以调用什么呢

32:46.980 --> 32:48.740
还可以调用downer patch方法

32:49.300 --> 32:50.740
它允许你用一个什么呢

32:50.740 --> 32:53.700
允许你用一个这个state的补定对象

32:53.700 --> 32:56.260
在同一时间更改多个属性

32:56.260 --> 32:58.260
啊这边你看一下它大致的用法

32:58.260 --> 33:00.580
这边store.downer patch接收一个对象

33:01.220 --> 33:02.980
对象里面就是你要修改的这个

33:04.100 --> 33:04.900
属性对吧

33:04.900 --> 33:06.500
修改属性对应新的这个字

33:07.140 --> 33:07.380
啊

33:07.940 --> 33:08.100
好

33:08.100 --> 33:08.900
那你也可以干嘛呢

33:08.900 --> 33:10.100
也可以就传一个这个

33:10.980 --> 33:12.500
这个函数过去

33:12.500 --> 33:14.980
在函数里面再拿到这个state

33:15.060 --> 33:15.940
拿到state之后

33:15.940 --> 33:17.380
然后就在这边做这个修改

33:18.180 --> 33:18.580
ok

33:18.580 --> 33:20.420
这是关于这个downer patch方法

33:20.420 --> 33:21.700
好来我们这边我们来试一下呗

33:23.300 --> 33:26.340
这边div.btn group

33:28.740 --> 33:29.380
好在这边

33:29.380 --> 33:30.420
这边我们写个input

33:31.140 --> 33:31.860
这input的话

33:31.860 --> 33:33.940
我们这边给它一个class

33:34.740 --> 33:36.740
等于一个nummyput

33:38.020 --> 33:39.700
那将我们这边给它一个双向绑定

33:40.260 --> 33:42.020
model等于一个new num

33:43.220 --> 33:43.700
ok

33:43.780 --> 33:44.740
那既然你在这边

33:44.740 --> 33:46.500
这边你是不是就需要定义这么一个数据

33:47.300 --> 33:48.420
啊这边input

33:50.340 --> 33:51.460
input rift

33:52.260 --> 33:53.300
那from

33:53.300 --> 33:55.060
这个是来源于spevue的

33:55.940 --> 33:56.340
对不对

33:56.740 --> 33:57.060
好

33:57.060 --> 33:59.460
然后在这边你在这边定一个const

33:59.460 --> 34:00.980
一个new num

34:03.340 --> 34:03.980
等于一个

34:04.860 --> 34:05.180
ref

34:06.460 --> 34:07.420
啊一开始是什么呢

34:07.420 --> 34:09.100
一开始是空之串

34:09.100 --> 34:09.740
对不对啊

34:09.740 --> 34:10.540
这个呢是和

34:11.100 --> 34:12.460
输入框做双向绑定

34:13.420 --> 34:14.380
那这个数据

34:15.100 --> 34:16.460
和输入框

34:17.260 --> 34:18.700
做双向绑定

34:22.260 --> 34:23.540
啊做了双向绑定之后

34:23.540 --> 34:25.540
然后再回头用户在这个输入框里面

34:25.540 --> 34:27.060
输入了任何这个数据

34:27.060 --> 34:28.100
我通过这个new num

34:28.660 --> 34:29.380
是不可以拿得到

34:29.940 --> 34:30.580
对不对

34:30.580 --> 34:31.300
好拿到之后

34:31.300 --> 34:31.940
然后既然呢

34:31.940 --> 34:32.340
我这边呢

34:32.340 --> 34:33.540
我再来一个方法

34:34.580 --> 34:35.540
啊再来个按钮

34:36.100 --> 34:36.820
按钮

34:36.820 --> 34:38.660
好然后这边呢是设置

34:41.210 --> 34:42.570
好大家这边class

34:44.250 --> 34:45.610
等于一个bitn

34:45.610 --> 34:47.290
啊这边给它绑定一个世界

34:47.770 --> 34:48.890
tron click

34:49.850 --> 34:52.170
等于一个啊比如这边set handle

34:55.620 --> 34:56.580
set handle

34:56.580 --> 34:58.020
好那接下来在下面

34:58.020 --> 34:59.540
下面你是不是需要写这么一个

35:00.260 --> 35:00.660
方法

35:01.140 --> 35:02.820
对方形set handle

35:03.860 --> 35:05.780
好那在这个set handle里面

35:05.780 --> 35:06.580
我们做什么事情

35:07.380 --> 35:08.660
这边是不是就是拿到

35:09.940 --> 35:10.500
用户

35:11.860 --> 35:13.700
在这个输入框

35:13.700 --> 35:14.900
输入的这个值

35:15.460 --> 35:17.300
然后修改什么

35:17.300 --> 35:18.420
或者说设置

35:18.740 --> 35:19.700
设置为

35:19.700 --> 35:20.980
是不是仓库的值

35:22.260 --> 35:23.540
是不是要做的就这件事情

35:24.340 --> 35:24.820
对不对

35:24.820 --> 35:25.620
好那接下来

35:25.620 --> 35:27.140
然后你这边要拿这个

35:27.140 --> 35:28.260
用户输的值

35:28.260 --> 35:28.900
简不简单

35:28.900 --> 35:30.420
你这边做了双向绑定的

35:30.420 --> 35:32.500
直接通过这个new num

35:33.780 --> 35:34.820
然后点value

35:35.700 --> 35:36.580
是不是就可以拿到

35:36.580 --> 35:37.140
对不对

35:37.140 --> 35:38.180
只不过它拿到是制服创意

35:38.180 --> 35:39.140
你这边还可以转一下

35:39.140 --> 35:39.940
通过飘飘

35:40.500 --> 35:41.540
把它转成那个

35:42.580 --> 35:42.980
数字

35:42.980 --> 35:43.700
好

35:43.700 --> 35:44.820
然后接下来这边的话

35:45.540 --> 35:46.340
调用什么呢

35:46.340 --> 35:47.220
调用store

35:47.780 --> 35:49.540
store.downerpatch

35:52.550 --> 35:53.110
对不对

35:53.110 --> 35:54.150
调downerpatch

35:54.150 --> 35:55.350
调downerpatch之后

35:55.350 --> 35:56.710
然后叫我们这边设置什么

35:56.710 --> 35:57.430
设置纳姆

35:57.430 --> 35:58.630
纳姆对应的值

35:58.630 --> 35:59.190
是不是就是它

35:59.990 --> 36:00.790
对不对

36:00.790 --> 36:00.950
好

36:00.950 --> 36:01.910
来我们这边来看一下

36:04.330 --> 36:05.450
好回到这边

36:05.450 --> 36:06.170
好这边的话

36:06.170 --> 36:08.490
我们这边随便先增加一点

36:08.490 --> 36:09.130
好现在的话

36:09.130 --> 36:10.170
我要把它设置成什么呢

36:10.170 --> 36:12.090
设置成100点击设置

36:12.650 --> 36:13.210
搞定没有

36:13.770 --> 36:14.490
是不是搞定了

36:15.290 --> 36:15.770
对不对

36:15.770 --> 36:16.490
这搞定了

36:16.490 --> 36:16.890
搞定了

36:16.890 --> 36:18.570
你最好把那给给那个掉

36:19.210 --> 36:20.490
这边这个new num

36:22.090 --> 36:23.690
new num.value

36:23.690 --> 36:25.690
重新把它这个重置为空

36:26.810 --> 36:28.090
我们这边来看一下

36:30.090 --> 36:32.570
这边把它设置成400

36:33.610 --> 36:34.170
设置

36:34.170 --> 36:34.970
是不OK

36:34.970 --> 36:35.850
对不对

36:35.850 --> 36:38.170
这是关于这个downerpatch方法

36:38.170 --> 36:39.130
OK

36:39.130 --> 36:39.770
好

36:39.770 --> 36:40.490
那我们这边的话

36:40.490 --> 36:42.570
就通过这个技术器的这个势力

36:42.570 --> 36:44.410
然后我们这边写了这么几组

36:44.410 --> 36:44.810
对吧

36:44.810 --> 36:46.730
一组两组三组四组五组

36:46.730 --> 36:48.250
写了这么几组

36:48.250 --> 36:50.730
然后这边给大家演示了一下

36:50.890 --> 36:52.730
关于这个pnr

36:53.370 --> 36:55.370
它的一个就是如何使用

36:55.370 --> 36:56.090
整体来讲的话

36:56.090 --> 36:57.130
其实这样还是比较简单

36:57.770 --> 36:58.090
对不对

36:58.090 --> 36:59.690
你让我们这边都没写多少代码

37:00.490 --> 37:00.650
好

37:00.650 --> 37:01.930
那我们这边把我们的笔记

37:01.930 --> 37:02.810
我们把它完善一下

37:03.610 --> 37:03.850
OK

37:04.810 --> 37:06.570
创建的时候支持两种风格

37:06.570 --> 37:06.890
好

37:06.890 --> 37:07.530
人家这边

37:08.250 --> 37:09.050
这边第二个

37:10.250 --> 37:11.530
第二个就这边就是

37:12.810 --> 37:13.610
选项式风格

37:18.010 --> 37:18.890
选项式

37:21.190 --> 37:22.070
选项式

37:22.470 --> 37:22.790
风格

37:23.590 --> 37:24.070
OK

37:24.070 --> 37:25.110
选项式风格的话

37:25.990 --> 37:26.630
该风格

37:27.030 --> 37:27.830
该风格

37:30.650 --> 37:32.250
基本上和什么

37:32.250 --> 37:34.730
和之前的这个vulx

37:35.450 --> 37:37.850
是非常相似的

37:39.290 --> 37:39.770
对不对

37:39.770 --> 37:41.450
只不过没有什么

37:41.450 --> 37:42.730
是没有multi-sync的

37:44.170 --> 37:44.570
对不对

37:45.210 --> 37:47.690
无论是同步的方法

37:48.330 --> 37:49.930
同步的方法

37:51.370 --> 37:53.210
还是异步的方法

37:56.230 --> 37:56.950
都写在什么

37:57.510 --> 37:59.190
都写在

38:00.870 --> 38:03.270
都写在这个action上面

38:05.270 --> 38:05.830
对不对

38:05.830 --> 38:07.750
把这个笔记稍微记一下

38:09.030 --> 38:09.190
好

38:09.190 --> 38:09.670
我们这边

38:11.190 --> 38:12.630
我整个整个拿过来吧

38:13.350 --> 38:13.990
好吧

38:13.990 --> 38:14.950
我整个把我拿过来

38:15.750 --> 38:16.390
在这里

38:17.110 --> 38:18.790
Gatres也没什么好说的

38:18.790 --> 38:20.230
Gatres和之前是一样的

38:20.230 --> 38:21.910
这边主要就是这边action

38:21.910 --> 38:23.270
支持同步和异步

38:23.270 --> 38:23.510
好

38:23.510 --> 38:24.790
人家这边还有一个注意点

38:25.350 --> 38:26.710
在这个主键中

38:27.430 --> 38:30.310
在主键中使用

38:30.710 --> 38:32.550
倉库数据时

38:34.150 --> 38:37.110
如果是要获取数据

38:37.830 --> 38:39.990
如果是要获取数据

38:39.990 --> 38:41.670
为了保持

38:43.270 --> 38:46.150
为了保持数据的这个响应式

38:47.110 --> 38:48.070
应该使用什么

38:48.070 --> 38:49.430
是不是应该使用

38:50.230 --> 38:50.790
这个

38:50.790 --> 38:52.150
它叫什么名字来着

38:52.150 --> 38:54.790
叫做Store to Rifts方法

38:57.560 --> 38:58.360
是不是应该是

38:58.360 --> 39:00.040
应该使用Store to Rifts方法

39:00.520 --> 39:01.080
对吧

39:01.240 --> 39:01.800
把这边

39:02.680 --> 39:03.160
记一下

39:04.200 --> 39:05.320
这边是在这里

39:08.680 --> 39:09.080
哪里

39:09.080 --> 39:09.400
下面

39:10.520 --> 39:11.240
下面这边

39:14.470 --> 39:14.870
对不对

39:15.830 --> 39:18.150
在主键中使用倉库数据时

39:18.150 --> 39:19.590
我们这边记详细点嘛

39:19.590 --> 39:20.870
使用倉库数据时

39:20.870 --> 39:21.430
首先

39:23.510 --> 39:24.630
首先引入倉库

39:26.710 --> 39:29.270
首先引入倉库

39:29.910 --> 39:30.630
并执行

39:32.390 --> 39:33.590
并执行这个

39:34.310 --> 39:35.750
首先引入倉库方法

39:36.950 --> 39:38.390
并执行该方法

39:41.480 --> 39:41.880
对不对

39:41.880 --> 39:43.880
我们首先第一步第一步是这边

39:43.880 --> 39:45.400
先把它引入

39:47.000 --> 39:47.880
先把它引入

39:47.880 --> 39:48.600
引入了之后

39:48.600 --> 39:49.320
然后加这边

39:49.320 --> 39:50.360
是不是拿到这个倉库

39:51.640 --> 39:51.960
对不对

39:52.760 --> 39:54.200
那如果是要获取数据

39:54.200 --> 39:55.240
为了保持响应式

39:55.240 --> 39:56.600
这边你应该是使用这个

39:56.600 --> 39:57.880
Store to Rifts

39:57.880 --> 39:59.000
但Store to Rifts

39:59.000 --> 40:00.120
仍然这边你需要干嘛

40:00.760 --> 40:01.960
这边你需要引入一下

40:01.960 --> 40:02.680
从批量里面

40:03.400 --> 40:04.280
是把它引入一下

40:06.230 --> 40:06.630
对不对

40:07.430 --> 40:08.470
好如果是方法

40:09.590 --> 40:10.070
如果

40:12.380 --> 40:15.180
如果是获取方法

40:16.300 --> 40:16.860
获取

40:18.620 --> 40:19.820
获取方法

40:21.100 --> 40:21.500
直接

40:22.380 --> 40:25.740
直接从这个Store里面解构

40:26.780 --> 40:28.300
解构出来即可

40:29.820 --> 40:30.380
对不对

40:30.380 --> 40:32.140
你如果是这个方法的话

40:32.140 --> 40:33.020
你这边让我们这边

40:33.020 --> 40:33.820
是不是直接

40:33.820 --> 40:35.340
从这个倉库里面解构

40:36.860 --> 40:37.900
是不是就OK了

40:37.900 --> 40:38.700
对不对

40:38.700 --> 40:39.100
OK

40:39.100 --> 40:40.940
这是关于这个基本的使用

40:41.900 --> 40:42.860
人家这个倉库

40:42.860 --> 40:43.340
倉库的话

40:43.340 --> 40:44.620
它提供了两个

40:45.180 --> 40:46.460
比较好用的这个API

40:47.740 --> 40:48.060
另外

40:49.740 --> 40:51.580
另外这个倉库

40:51.580 --> 40:55.260
还提供了两个好用的API

40:57.020 --> 40:57.580
什么呢

40:57.580 --> 40:59.340
分别是一个是这个Store

41:00.140 --> 41:02.060
点DownerReset

41:04.220 --> 41:05.100
这个是用来什么

41:05.100 --> 41:06.060
用来重置

41:07.020 --> 41:08.220
另外一个还有Store

41:08.780 --> 41:09.420
点Downer

41:09.820 --> 41:10.460
是Patch

41:11.580 --> 41:11.900
对吧

41:11.900 --> 41:13.020
这个是用来什么

41:13.020 --> 41:14.300
这个是用来

41:14.300 --> 41:15.260
那个官方叫做什么

41:15.820 --> 41:16.940
官方那个名词

41:16.940 --> 41:18.380
叫做变更

41:18.380 --> 41:18.780
是吧

41:18.780 --> 41:19.820
用来变更State

41:21.850 --> 41:23.210
这个是用来变更

41:24.730 --> 41:26.490
变更State

41:26.490 --> 41:28.890
这个是用来重置State

41:29.770 --> 41:30.170
OK

41:30.730 --> 41:32.650
其他的话就没什么了

41:32.650 --> 41:35.050
这是关于这个选项式风格

41:35.050 --> 41:35.850
大家下去的话

41:35.850 --> 41:36.970
可以先把这个例子

41:36.970 --> 41:37.850
把它写一写

41:38.410 --> 41:39.130
好吧

41:39.210 --> 41:40.090
我们下节课的话

41:40.090 --> 41:41.130
我们来写这个

41:41.130 --> 41:41.850
TodoList

41:42.410 --> 41:42.890
下节课的话

41:42.890 --> 41:43.690
我们来讲这个

41:44.250 --> 41:46.330
就是那个CompositionAPI

41:46.330 --> 41:47.530
使用那种风格

41:47.530 --> 41:48.250
如何来写

41:48.810 --> 41:49.530
好吧

41:49.530 --> 41:50.010
OK

41:50.010 --> 41:50.890
好那这节课的话

41:50.890 --> 41:52.090
就先到这里

41:52.090 --> 41:52.730
OK

41:52.730 --> 41:53.210
再见

