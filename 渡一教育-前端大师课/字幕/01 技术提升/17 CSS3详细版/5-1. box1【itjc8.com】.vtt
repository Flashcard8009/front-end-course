WEBVTT

00:00.300 --> 00:03.100
来好了 同学们 大家靠住面 咱们来开始今天的课程

00:03.100 --> 00:06.900
Licen 5 今天咱们主要讲述的内容是这个合模型

00:06.900 --> 00:09.900
其实一提到这个合模型 咱们可能立马就能联想到 是吧

00:09.900 --> 00:12.900
在这个 CS2 里面咱们花了多少篇幅和这样的一个经历

00:12.900 --> 00:14.700
来介绍这样 CS2 的合模型

00:14.700 --> 00:18.100
在那个 CS2 里面咱们的合模型又是有多么重要

00:18.100 --> 00:19.900
当然了 来到咱们 CS3 之后

00:19.900 --> 00:22.700
咱们的合模型依然依然非常重要

00:22.700 --> 00:25.300
C3 给咱们提供了几种新的合模型

00:25.300 --> 00:28.300
那么这堂课咱们就来介绍一下这些新的合模型

00:28.300 --> 00:30.700
它到底有什么样的功能 有什么样的一个作用

00:30.700 --> 00:33.100
以及它多么多么的重要 好吧

00:33.100 --> 00:36.300
那么提到这个合模型的重要 我想给大家多说一嘴

00:36.300 --> 00:37.700
这块呢 我不知道能不能理解得上去

00:37.700 --> 00:39.500
但我要跟你说一下

00:39.500 --> 00:42.500
这个合模型咱们来想一下它为什么那么重要呢

00:42.500 --> 00:43.300
它为什么那么重要

00:43.300 --> 00:46.700
所以说了 整个合模型它没有的不行

00:46.700 --> 00:49.300
确实没有的不行是它重要的一个方式 是吧

00:49.300 --> 00:51.700
那看看还有没有什么其他的非常重要的点

00:51.700 --> 00:53.100
咱们来总结总结 是吧

00:53.100 --> 00:55.900
来看一看能不能提升一下咱们一个四位高度

00:56.100 --> 00:58.500
我跟大家说这么一句 有不知道能不能理解得上去

00:58.500 --> 00:59.900
你好好听的

00:59.900 --> 01:03.500
我说一个合模型它功能的强弱与否

01:03.500 --> 01:07.700
直接就决定了咱们在布局上是否简洁

01:07.700 --> 01:08.900
我再说一遍

01:08.900 --> 01:12.300
就是这个合模型它提供的功能是否强

01:12.300 --> 01:16.500
它就能决定我们布局上是否能够简洁一些

01:16.500 --> 01:18.700
比如说咱们这个合模型给咱们提供的功能

01:18.700 --> 01:20.900
合模型是CSS部分 是不是CSS的部分

01:20.900 --> 01:22.500
布局是ATM部分 对吧

01:22.500 --> 01:24.300
比如说咱们想实现一个功能

01:24.300 --> 01:26.500
想实现一个这样的一个结构样式

01:26.500 --> 01:28.500
然后这个合模型功能非常强大

01:28.500 --> 01:30.100
它这也能干 那也能干

01:30.100 --> 01:31.700
啥啥都能干 但凡我们需要的

01:31.700 --> 01:32.900
它基本上都能解决

01:32.900 --> 01:34.100
那这样的情况下

01:34.100 --> 01:36.500
是不是我们在布局这个HTML的时候

01:36.500 --> 01:37.900
就变得非常简单了

01:37.900 --> 01:39.700
因为你随便一写往那块一铺

01:39.700 --> 01:40.700
是不是咱们一个合模型

01:40.700 --> 01:42.300
就能帮咱们去处理

01:42.300 --> 01:43.700
来划分这样的一个结构

01:43.700 --> 01:45.100
来产生这样一个功能

01:45.100 --> 01:46.100
能明白有意思吗

01:46.100 --> 01:47.700
比如说咱们的合模型这也不行

01:47.700 --> 01:49.400
那也不行 啥啥都不能干

01:49.400 --> 01:51.200
那咱们想实现同样的功能的话

01:51.300 --> 01:54.500
是不是就要在HTML上多花一些功夫了

01:54.500 --> 01:57.100
怎么来从这个结构上给你划分划分的

01:57.100 --> 01:57.800
是不是

01:57.800 --> 01:59.900
可能还要利用一些结构来实现一些功能

01:59.900 --> 02:01.000
这都不好说 是吧

02:01.000 --> 02:02.500
所以说结构可能说在写起来

02:02.500 --> 02:05.000
就非常的复杂 是不是这样的一个情况

02:05.000 --> 02:07.400
所以说一个合模型它功能的强与弱

02:07.400 --> 02:09.800
直接就能决定咱们布局上是否简洁

02:09.800 --> 02:10.400
是吧

02:10.400 --> 02:11.900
而布局上是否简洁

02:11.900 --> 02:13.600
它又直接的影响到了

02:13.600 --> 02:16.500
咱们后期的编程是否复杂

02:16.500 --> 02:18.200
咱们的网页 说归到底

02:18.200 --> 02:19.200
就是三个部分过程

02:19.200 --> 02:21.000
无论咱们学了多少种前传的技术

02:21.000 --> 02:23.000
那编写的肯定都是三个结构

02:23.000 --> 02:24.600
那编写的肯定都是三个部分

02:24.600 --> 02:26.000
要么你就是编写结构的

02:26.000 --> 02:27.400
要么就是编写样式的

02:27.400 --> 02:28.600
要么就是编写行为的

02:28.600 --> 02:31.200
你逃不出去这三个部分 是吧

02:31.200 --> 02:32.500
无论学什么语言

02:32.500 --> 02:34.200
那么咱们在编写这三个部分的时候

02:34.200 --> 02:35.200
谁是开头

02:35.200 --> 02:36.300
肯定是结构是开头

02:36.300 --> 02:37.600
结构是一切的基础 是吧

02:37.600 --> 02:38.700
咱们在结构的基础上

02:38.700 --> 02:40.400
来建立这样的一个编程 是吧

02:40.400 --> 02:42.600
所以说结构编写的是否简洁

02:42.600 --> 02:44.900
就直接决定了咱们后面的代码

02:44.900 --> 02:47.700
后面的代码是否这样的一个复杂和简洁

02:47.700 --> 02:49.300
如果你前面结构写得非常好

02:49.300 --> 02:51.300
后面编写起来是不是也非常的容易

02:51.300 --> 02:52.700
是否非常的整洁 是吧

02:52.700 --> 02:54.500
非常的可维护 是吧

02:54.500 --> 02:57.700
所以说这个合模型它的重要程度去乃至

02:57.700 --> 03:00.300
它直接就导致了最后咱们产生的结果

03:00.300 --> 03:01.700
是否复杂的一个问题

03:01.700 --> 03:04.500
它直接甚至说能简洁的影响到咱们的行为

03:04.500 --> 03:06.900
咱们一个js立刻编写的一个复杂程度

03:06.900 --> 03:07.700
能懂我意思吗

03:07.700 --> 03:11.300
因为它在决定的影响的咱们结构的复杂程度

03:11.300 --> 03:13.900
那么结构的复杂程度就直接影响了你结构

03:13.900 --> 03:15.500
js是操作来结构的 是吧

03:15.500 --> 03:16.700
操作这个dome的 是吧

03:16.700 --> 03:18.100
所以就直接决定你这个js

03:18.100 --> 03:19.500
怎么来操作这个dome结构的一个问题

03:19.500 --> 03:21.500
然后就能影响全局 是吧

03:21.500 --> 03:23.600
所以说这个合模型再次跟大家衬衬一下

03:23.600 --> 03:25.500
合模型真的非常非常的重要

03:25.500 --> 03:26.700
因为它作用的

03:26.700 --> 03:29.500
它影响的不只是ATMR那么简单

03:29.500 --> 03:30.900
它说白了 声化一点

03:30.900 --> 03:34.300
它影响的是咱们的一个结构的写法 是吧

03:34.300 --> 03:35.300
它的功能强弱

03:35.300 --> 03:38.300
直接就决定了咱们结构的写法是否简洁

03:38.300 --> 03:39.300
明白我意思吗

03:39.300 --> 03:40.700
这是决定不局的

03:40.700 --> 03:43.800
这个不局在整个这个盖楼磨天大厦里面

03:43.800 --> 03:45.200
那是非常非常的重要的

03:45.200 --> 03:46.400
行了

03:46.400 --> 03:48.300
那咱们来开始今天的课程

03:48.300 --> 03:50.500
今天的课程简数一下

03:50.500 --> 03:52.200
分为两大重点部分

03:52.200 --> 03:54.300
因为盒子一共css3

03:54.300 --> 03:56.600
就给咱们提供了两大重点的盒子

03:56.600 --> 03:59.500
一个是IE6的混杂模式的盒子

03:59.500 --> 04:03.700
一个是咱们新增的flex这样的一个弹性盒子

04:03.700 --> 04:05.200
这档客分为两个部分

04:05.200 --> 04:08.200
第一个部分咱们来介绍IE6混杂模式的盒子

04:08.200 --> 04:09.400
以及一些小点

04:09.400 --> 04:10.200
这是第一个部分

04:10.200 --> 04:13.900
第二个部分主要就是介绍这个flex弹性盒子

04:13.900 --> 04:15.300
课程的笔众上

04:15.300 --> 04:17.400
第二小节可能说稍稍偏重一点

04:17.400 --> 04:19.300
因为第一小节不代表它不重要

04:19.300 --> 04:20.500
第一小节它比较简单

04:20.500 --> 04:21.400
你好理解

04:21.400 --> 04:22.300
最关键的是什么呢

04:22.300 --> 04:23.500
我在之前讲s的時候

04:23.500 --> 04:24.500
我给你渗透过

04:24.500 --> 04:26.300
而且以你们的聪明材质

04:26.300 --> 04:27.800
虽然里面不怎么聪明的

04:27.800 --> 04:28.600
开玩笑

04:28.600 --> 04:30.200
以你们的聪明材质

04:30.200 --> 04:31.000
理解这个东西

04:31.000 --> 04:32.800
那简直就是一点就同是吧

04:32.800 --> 04:34.400
我一点你要不同的话

04:34.400 --> 04:36.000
你就回去拿这个墓鱼

04:36.000 --> 04:37.300
那个bump敲到自己脑袋

04:37.300 --> 04:38.500
你看看是不是嗅住了

04:38.500 --> 04:39.300
就这么简单的东西

04:39.300 --> 04:40.200
怎么可能呢

04:40.200 --> 04:41.900
医学补挥呢是吧

04:41.900 --> 04:43.200
那咱来开始今天

04:43.200 --> 04:44.900
简洁的一个部分的讲解

04:44.900 --> 04:46.600
就是简单的部分的讲解

04:46.600 --> 04:48.800
就是i6混杂模式的盒子

04:48.800 --> 04:49.900
那提到一个新盒子

04:49.900 --> 04:52.100
咱们就要跟原来的盒子产生一个对比

04:52.100 --> 04:53.100
说新的盒子

04:53.100 --> 04:54.700
尤其这个i6混杂模式盒子

04:54.700 --> 04:56.900
跟原来这个盒子有什么样的一同呢

04:56.900 --> 04:58.200
我给大家简数一下

04:58.200 --> 04:59.300
听我说原来的盒子

04:59.300 --> 05:00.200
咱们可以有几个部分

05:00.200 --> 05:01.200
原来的盒模型有几个部分

05:01.200 --> 05:02.500
四个部分margin是最外面的

05:02.500 --> 05:02.800
是吧

05:02.800 --> 05:04.400
但margin不算盒子的部分是吧

05:04.400 --> 05:06.000
盒子的部分分为那三个

05:06.100 --> 05:07.700
是不是有这样的最外围是border

05:07.700 --> 05:08.500
然后padding

05:08.500 --> 05:09.700
然后有content是吧

05:09.700 --> 05:12.100
这是原来标准模式的盒模型是吧margin

05:12.100 --> 05:14.200
那咱们i6的混杂模式的盒子

05:14.200 --> 05:15.600
也就是咱们今天新介绍的

05:15.600 --> 05:16.800
第一个指点的盒子

05:16.800 --> 05:19.000
到底发生了什么样的变化呢

05:19.000 --> 05:20.600
从这四个部分上

05:20.600 --> 05:21.600
听我说同学们

05:21.600 --> 05:22.800
没变化

05:22.800 --> 05:25.100
它还是那个盒子也

05:25.100 --> 05:25.900
也支持margin

05:25.900 --> 05:27.000
也支持border

05:27.000 --> 05:27.900
也支持padding

05:27.900 --> 05:29.500
也支持这样的内容区

05:29.500 --> 05:30.100
没有问题

05:30.100 --> 05:31.600
那是不是新增了啥呢

05:31.600 --> 05:32.600
啥也没新增

05:32.600 --> 05:34.100
就还是这部分

05:34.100 --> 05:35.000
说那不对啊

05:35.000 --> 05:37.200
那怎么还叫一个新盒子呢

05:37.200 --> 05:38.200
重点在这啊

05:38.200 --> 05:38.800
同学们

05:38.800 --> 05:40.300
它叫新盒子

05:40.300 --> 05:41.700
主要就是一个原因

05:41.700 --> 05:43.000
也是唯一一个原因

05:43.000 --> 05:46.600
就是它的计算方式跟咱们原来不一样

05:46.600 --> 05:47.400
哎

05:47.400 --> 05:49.300
这一块就是i6混杂模式

05:49.300 --> 05:51.400
跟咱们原来的盒子的唯一的

05:51.400 --> 05:53.800
也是最重要的区别啊

05:53.800 --> 05:54.900
就是因为这个区别

05:54.900 --> 05:56.800
它产生了一种新的用法

05:56.800 --> 05:58.300
也带来一种新的便捷

05:58.300 --> 05:59.600
那咱们一会来讲它的功能

05:59.600 --> 06:00.900
我先来给大家看一看

06:00.900 --> 06:02.100
它到底怎么来使是吧

06:02.100 --> 06:04.500
到底哪块是怎么回事啊

06:04.500 --> 06:06.800
它到底这个唯一的区别到底是啥呢

06:06.800 --> 06:08.600
计算方式卖了这么长时间关子是吧

06:08.600 --> 06:09.700
咱说一说啊

06:09.700 --> 06:11.200
咱说原来这个盒子

06:11.200 --> 06:13.400
咱们想计算一个盒子的真实大小

06:13.400 --> 06:14.900
比如说计算这个宽吧

06:14.900 --> 06:16.700
想计算这个盒子的真实的宽度

06:16.700 --> 06:18.000
咱怎么来计算呢

06:18.000 --> 06:19.500
比如说这个real ways

06:19.500 --> 06:21.300
比如说或者box ways是吧

06:21.300 --> 06:21.800
等于啥呢

06:21.800 --> 06:24.300
是不等于首先的content ways是吧

06:24.300 --> 06:27.000
就是咱们设置那个手动设置这个位置

06:27.000 --> 06:27.600
加上什么

06:27.600 --> 06:30.000
加上二倍的balder加上二倍的排顶

06:30.000 --> 06:31.800
假设它有balder和排顶的话是吧

06:31.800 --> 06:32.900
这是它这个计算公式吧

06:32.900 --> 06:35.900
这是一个盒子真实的宽与高没问题吧

06:35.900 --> 06:38.700
那咱们ie6混杂模式

06:38.700 --> 06:41.800
也就是咱们接下来要讲的这个新的和模型

06:41.800 --> 06:44.000
它的计算方式是什么样的呢

06:44.000 --> 06:47.500
它的box ways啊就等于啊

06:47.500 --> 06:48.700
就等于等于啊

06:48.700 --> 06:49.100
挺好啊

06:49.100 --> 06:52.000
就等于哈一个哎非常非常啊

06:52.000 --> 06:53.500
这个简单的一个显法

06:53.500 --> 06:55.500
就等于这个位置啊

06:55.500 --> 06:56.300
就等于位置

06:58.100 --> 06:59.600
也就是说啊

06:59.600 --> 07:01.400
我们在ie6听我说啊

07:01.400 --> 07:05.100
也就是说我们在ie6混杂模式的和模型下

07:05.100 --> 07:06.600
设置的这个位置

07:06.600 --> 07:09.500
直接就是盒子的整体的宽度

07:09.500 --> 07:11.500
那如果在这个前提下

07:11.500 --> 07:14.300
我们想求这个盒子的内容区的宽度

07:14.300 --> 07:15.300
那怎么来求呢

07:15.300 --> 07:17.500
比如content的位置等于啥呢

07:17.500 --> 07:19.500
是不是就等于啊

07:19.500 --> 07:20.400
这个位置

07:20.400 --> 07:23.100
减去它的balder和这个

07:23.100 --> 07:24.900
啊减去它的balder

07:24.900 --> 07:26.300
可能有的话啊

07:26.300 --> 07:28.700
然后再减去它的排顶是吧

07:28.700 --> 07:30.800
就等于它content的一个位置是吧

07:30.800 --> 07:32.400
内容区的一个宽度啊

07:32.400 --> 07:36.000
所以说这两个和模型根本的区别

07:36.000 --> 07:37.100
也是唯一的区别

07:37.100 --> 07:42.000
就在于这个宽高的一个真实大小上

07:42.000 --> 07:44.500
啊就在宽高的一个计算值上啊

07:44.500 --> 07:45.700
就是它的尺寸的计算值

07:45.700 --> 07:46.800
才是他们一个真实的区别

07:46.800 --> 07:49.800
就比如说哈我给大家举个例子啊

07:49.800 --> 07:51.800
比如说这是咱们正常的一个div

07:51.800 --> 07:53.800
正常的一个div

07:53.800 --> 07:55.300
然后呢正常div

07:55.300 --> 07:58.000
我们想比如说来一个宽度

07:58.000 --> 07:58.800
来一个高度

07:58.800 --> 08:00.700
来一个白光的color是吧

08:00.700 --> 08:02.000
来个right啊

08:02.000 --> 08:03.600
刷新这是正常的一个盒子是吧

08:03.600 --> 08:05.600
然后给正常盒子加宽度加balder

08:05.600 --> 08:06.000
10

08:07.200 --> 08:07.800
solid

08:07.800 --> 08:09.800
然后加个排顶10

08:09.800 --> 08:12.200
那现在哈这个盒子总的大小的多少

08:12.200 --> 08:13.300
是不是横着来算哈

08:13.300 --> 08:15.600
是不是10加10加100加10加10是吧

08:15.600 --> 08:16.800
这是它的总大小哈

08:16.800 --> 08:19.300
那如果咱们想换成把这个合模型哈

08:19.300 --> 08:21.400
把这个元素遵从这个合模型

08:21.400 --> 08:23.600
换成i16的混杂模式的合模型

08:23.600 --> 08:25.400
它遵从那个合模型的一个规则

08:25.400 --> 08:26.400
那这个盒子变成什么了

08:26.400 --> 08:27.500
比如说咱设置一个位置

08:27.500 --> 08:28.300
设置一个

08:28.300 --> 08:29.500
哎balder是10

08:29.500 --> 08:31.200
设置一个pading是10是吧

08:31.200 --> 08:34.800
那它真实的最后的内容区的这个宽度

08:34.800 --> 08:36.200
是不是就不可能等100了

08:36.200 --> 08:37.700
它肯定是等于100

08:37.700 --> 08:40.100
减去两个10再减去两个10

08:40.100 --> 08:41.400
应该等于多少

08:41.400 --> 08:43.000
应该等于这样60

08:43.000 --> 08:43.900
能懂我意思吗

08:43.900 --> 08:46.200
啊那咱们都讲到这了

08:46.200 --> 08:47.400
那咱就实现一下吧

08:47.400 --> 08:48.800
那这个合模型咱介绍这么多

08:48.800 --> 08:50.100
这个合模型怎么来使用呢

08:50.100 --> 08:51.600
其实非常简单啊

08:51.600 --> 08:54.400
这个合模型的使用首先得需要触发

08:54.400 --> 08:55.300
比如说什么叫触发呢

08:55.300 --> 08:57.000
比如说这个盒子我这么来写的话

08:57.000 --> 08:59.100
这个盒子遵从的肯定还是咱们的

08:59.100 --> 09:01.200
W3C标准的合模型是吧

09:01.200 --> 09:03.900
那我想让它遵从另一种合模型的话

09:03.900 --> 09:05.200
啊就这个合模型的使用方式

09:05.200 --> 09:06.800
就是在特定元素上触发

09:06.800 --> 09:08.000
触发的那个之后

09:08.000 --> 09:10.500
这个元素就遵从那个合模型了

09:10.500 --> 09:12.500
哈那个合模型怎么来触发呢

09:12.500 --> 09:14.500
这块有一个属性叫box sizing

09:14.500 --> 09:15.300
啊box sizing

09:15.300 --> 09:17.300
是不是看过啊一提他是不是看过啊

09:17.300 --> 09:18.600
一会来看一下坚定性的问题啊

09:18.600 --> 09:19.100
挺好的

09:19.700 --> 09:21.200
box sizing里面有两个值

09:21.200 --> 09:23.100
默认值是quantant box

09:23.100 --> 09:24.800
啊默认值是quantant box

09:24.900 --> 09:26.300
这这个quantant box这个值啊

09:26.300 --> 09:27.700
大家也是没看过是吧

09:27.700 --> 09:29.900
他的i16合模型

09:29.900 --> 09:32.700
i6混蓝模式的合模型的里面的一个值

09:32.700 --> 09:35.700
啊就是你想触发i6混蓝模式的合模型的话

09:35.700 --> 09:37.300
换句话说想触发咱们

09:37.300 --> 09:38.700
这个讲的合模型的话

09:38.700 --> 09:40.400
你要写上borderbox

09:40.400 --> 09:41.500
啊你要写上borderbox

09:41.500 --> 09:43.100
也就是说你想用这个属性的话

09:43.100 --> 09:45.800
基本上你要写也就写这个borderbox

09:45.800 --> 09:47.600
明白我意思吧啊写着borderbox

09:47.600 --> 09:49.500
一旦你写上borderbox之后

09:49.500 --> 09:51.000
这个盒子的计算方式

09:51.000 --> 09:54.200
就符合i6混蓝模式的合模型的计算方式了

09:54.200 --> 09:57.400
那也就是说这个位置就是这个盒子最终的一个宽度

09:57.400 --> 10:00.100
那他内容区的宽度是不是往下减减他

10:00.100 --> 10:01.800
然后再减再减他

10:01.800 --> 10:02.800
没有问题吧同学们

10:02.800 --> 10:04.200
我刷新你看一看

10:04.200 --> 10:06.500
是不是他总的宽度等于100了是吧

10:06.500 --> 10:07.700
总的高度是不是100了

10:07.700 --> 10:10.100
然后内容区是不是被减减减去的

10:10.100 --> 10:12.200
然后剩下的是他内容区的一个大小

10:12.200 --> 10:13.200
能懂我意思吗

10:13.200 --> 10:15.300
这个就是i6混蓝模式的合模型

10:15.300 --> 10:18.200
然后基础的概念我带给大家回顾一遍哈

10:18.200 --> 10:20.900
呃这种盒子哈就是这种

10:20.900 --> 10:23.000
这个就这种位置啊border啊

10:23.000 --> 10:27.300
margin计算形式不同的这个盒子一共就两种啊

10:27.300 --> 10:29.700
第一种呢就是咱们一个w3c标准的合模型

10:29.700 --> 10:31.800
叫standards mode啊standards mode

10:31.800 --> 10:34.300
就是正常情况下咱们正常计算就是位置啊

10:34.300 --> 10:36.200
他设置位置就是内容区的宽

10:36.200 --> 10:40.500
然后加排定加保德尔才等于真实的这个最后盒子的一个宽度哈

10:40.500 --> 10:42.800
i6混蓝模式也叫怪异模式哈

10:42.800 --> 10:45.500
这这个mode叫quirks mode啊quirks mode

10:45.500 --> 10:47.800
i6怪异模式的模子啊这个这样的一个盒子

10:47.800 --> 10:49.400
他的计算形式呢符合什么

10:49.400 --> 10:51.900
就是你设置这个位置就是盒子最终的这个宽度

10:51.900 --> 10:55.300
然后内容区的宽度是你最终这个宽度减去啊

10:55.300 --> 10:56.600
这个border再减去排定

10:56.600 --> 10:58.500
得出内容区的这个宽度哈

10:58.500 --> 11:00.400
也就是说i6混蓝模式的盒子

11:00.400 --> 11:04.100
更关注的是不是盒子的整体的大小是吧

11:04.100 --> 11:05.900
那我们w3c标准这个盒子

11:05.900 --> 11:07.800
是不是关注的是内容区这个大小

11:07.800 --> 11:10.200
然后其他的排定border你自己再去加

11:10.200 --> 11:11.300
然后自己再去算是吧

11:11.300 --> 11:12.100
这个意思啊

11:12.100 --> 11:13.200
然后i6呢就关注啊

11:13.200 --> 11:14.900
我整体这个宽度高度是什么样的

11:14.900 --> 11:16.400
就关注点不一样是吧

11:16.400 --> 11:19.000
为啥说他叫i6混蓝模式的盒子呢

11:19.000 --> 11:21.500
这不是c3给咱们提供的一个属性box sizing吗

11:21.500 --> 11:22.900
难道之前就有吗

11:22.900 --> 11:24.900
这个属性确实之前没有

11:24.900 --> 11:25.600
我给大家介绍一下

11:25.600 --> 11:26.200
带用去脉哈

11:26.200 --> 11:27.400
这个属性之前确实没有

11:27.400 --> 11:29.200
这是c3提供一个属性

11:29.200 --> 11:32.400
但是呢在i6混蓝模式的情况下

11:32.400 --> 11:34.000
这种合模型的标准呢

11:34.000 --> 11:36.300
就在i6那块已经存在了

11:36.300 --> 11:38.400
后来也就是说i6混蓝模式的下

11:38.400 --> 11:41.700
他就i6混蓝模式的浏览器运行状态下

11:41.700 --> 11:44.600
他的所有的盒子都遵从这样的一个标准

11:44.600 --> 11:47.400
就是你设置位置就是盒子的整体的宽度

11:47.400 --> 11:49.000
后来w3c标准一看说哎呀

11:49.000 --> 11:50.300
你这个盒子也不错哈

11:50.300 --> 11:50.900
要不这样吧

11:50.900 --> 11:53.700
我在c3标准里面增加一个盒子的模型

11:53.700 --> 11:55.100
就把你这种模型引入一下

11:55.100 --> 11:55.800
你看怎么样哎

11:55.800 --> 11:57.000
就说行了那可以啊

11:57.000 --> 11:57.300
是吧

11:57.300 --> 11:58.000
然后就引入了

11:58.000 --> 11:58.600
引入完之后呢

11:58.600 --> 12:01.500
各大浏览器厂商争先恐后的来实现了

12:01.500 --> 12:04.100
那实现完之后怎么来触发这种合模型呢

12:04.100 --> 12:06.400
就是你哪个元素想使用这种合模型

12:06.400 --> 12:08.700
你就在哪个元素上使用box sizing

12:08.700 --> 12:09.200
border box

12:10.300 --> 12:11.600
讲解的够明白吧

12:11.600 --> 12:12.500
就是这么一个原因

12:12.500 --> 12:13.500
然后再看一看

12:13.500 --> 12:14.500
他的一个兼容性的问题

12:14.500 --> 12:17.100
然后紧接着咱们来说他的适用场景哈

12:17.100 --> 12:18.100
为了说这种合模型

12:18.100 --> 12:18.900
他值得用呢

12:18.900 --> 12:20.600
为了说这种合模型也不错呢

12:20.600 --> 12:21.100
是吧

12:21.100 --> 12:23.900
因为他确实有的时候很方便啊

12:23.900 --> 12:26.700
就是当你关注这个盒子整体宽度的时候

12:26.700 --> 12:28.200
只关注整体宽度的时候

12:28.200 --> 12:30.000
他就变得非常非常方便啊

12:30.000 --> 12:31.500
然后呢给大家看一下啊

12:31.500 --> 12:32.900
盒子啊盒子

12:33.900 --> 12:35.500
盒子在哪呢

12:35.500 --> 12:37.600
盒子啊咱找box box box

12:39.500 --> 12:39.900
嗯

12:44.450 --> 12:47.250
哎算了我在这总标里搜吧啊不好找啊

12:48.250 --> 12:48.950
box sizing

12:49.950 --> 12:51.050
ok在这呢啊

12:51.050 --> 12:53.250
用户键面里面那上边照去

12:53.550 --> 12:55.250
一共俩只摸认值是content box

12:55.250 --> 12:57.050
所以说你要写摸认值的话没意思了是吧

12:57.050 --> 12:58.550
没劲了一般就写border box

12:58.550 --> 13:00.150
就是你用的话就写border box

13:00.150 --> 13:01.150
然后兼容性呢

13:01.150 --> 13:02.950
兼容性看看是不都还不错是吧

13:02.950 --> 13:03.650
啊都还不错啊

13:03.650 --> 13:04.750
在最新的这些版本里面

13:04.750 --> 13:05.950
你谷歌10点零

13:05.950 --> 13:07.850
以上就不用写了kick了

13:07.850 --> 13:09.250
我现在用的是70点零啊

13:09.250 --> 13:10.950
谷歌这个更新特别快啊

13:11.350 --> 13:12.350
然后这个也是啊

13:12.350 --> 13:14.050
这个火湖的也是好多好多版本了

13:14.050 --> 13:14.750
这些都是啊

13:14.750 --> 13:17.150
基本上在这些浏览器里面都是可以用的

13:17.150 --> 13:19.750
所以这个水性现在基本上可以被同用的

13:19.750 --> 13:20.850
ok 没有问题吧 朋友们

13:21.150 --> 13:22.450
那这个属性啊

13:22.450 --> 13:25.050
究竟是有什么样的一个作用和这个功能呢

13:25.050 --> 13:26.750
为啥说有的时候这么用

13:26.750 --> 13:28.450
反而变于咱们的操作呢

13:28.650 --> 13:29.550
因为是这样的啊

13:29.550 --> 13:30.750
咱们之前在编程的时候呢

13:30.750 --> 13:31.750
普遍都关注什么呢

13:31.750 --> 13:33.250
我这内容区要宽高是多少

13:33.250 --> 13:35.050
然后在此基础上我在哎

13:35.050 --> 13:35.650
我再怎么到

13:35.650 --> 13:37.550
我再弄一个这个border和这个packing

13:37.750 --> 13:38.750
这个普遍来说

13:38.750 --> 13:40.750
在那种形式的编程情况下

13:40.750 --> 13:41.550
一定听我说啊

13:41.650 --> 13:44.150
普遍形式在那种情况的编程形式下

13:44.150 --> 13:46.050
我们不太爱去关注

13:46.050 --> 13:47.350
盒子整体的宽度

13:47.550 --> 13:49.650
对于盒子整体宽度的一个应用呢

13:49.750 --> 13:50.750
也是比较少的

13:50.750 --> 13:51.550
即使有的话

13:51.550 --> 13:54.250
咱们也是利用几块的那些方法来求是吧

13:54.350 --> 13:56.350
来求一下这盒子真实的宽度是多少啊

13:56.350 --> 13:58.450
或者js 问点人来回家是吧

13:58.650 --> 14:02.150
那么咱们在编程的时候是一定会遇到那种

14:02.150 --> 14:06.650
我们特别特别关注盒子整体宽度的情况下啊

14:06.650 --> 14:08.050
就是特别一定会遇到那种

14:08.050 --> 14:09.550
我特别关注盒子整体的宽度

14:09.550 --> 14:10.550
至于内容啊

14:10.550 --> 14:11.750
其实我反倒不关注

14:11.950 --> 14:12.750
内容区大小呢

14:12.750 --> 14:13.250
我也不太关注

14:13.250 --> 14:15.050
比如说就关注盒子整体啊

14:15.050 --> 14:17.650
以及这个盒子是否有这样的一个派对啊

14:17.650 --> 14:18.650
在这种情况下

14:18.650 --> 14:20.250
一般情况下就是啊

14:20.250 --> 14:21.050
在这种情况下

14:21.050 --> 14:22.350
我们这个box sensing啊

14:22.350 --> 14:23.350
这个border box啊

14:23.350 --> 14:24.550
就闪亮灯场了哈

14:24.550 --> 14:25.750
提几种需求啊

14:25.750 --> 14:27.050
也是工作中真实的一个需求

14:27.050 --> 14:27.850
大家看一下

14:28.950 --> 14:29.650
第一种需求呢

14:29.650 --> 14:30.150
就是什么呢

14:30.150 --> 14:32.750
就是总共的需求基本上也就是这一个类别的哈

14:32.750 --> 14:33.450
就是什么呢

14:33.750 --> 14:34.950
首先来说啊

14:34.950 --> 14:36.750
就是第一种情况下就是什么呢

14:37.950 --> 14:39.250
宽度或者说高度哈

14:39.250 --> 14:40.350
我拿宽度来举例子了

14:40.350 --> 14:41.050
宽度不固定

14:41.550 --> 14:42.450
宽度不固定

14:42.750 --> 14:43.350
然后呢

14:43.350 --> 14:44.150
但是什么

14:44.350 --> 14:45.450
但是哎

14:45.450 --> 14:46.650
内边具固定

14:47.650 --> 14:48.750
内边具固定

14:49.050 --> 14:49.550
哎

14:50.350 --> 14:51.250
这种需求啊

14:51.250 --> 14:52.650
咱们之前是不是遇到比较少

14:52.650 --> 14:53.750
但是你肯定会遇到过

14:53.750 --> 14:54.650
一旦你遇到的话

14:54.650 --> 14:55.550
哎你就抓着脑塞啊

14:55.550 --> 14:56.150
非常难受

14:56.150 --> 14:57.150
你就不知道怎么来处理了

14:57.150 --> 14:58.550
比如说给大家举个例子啊

14:58.550 --> 14:59.350
是这样的

15:00.850 --> 15:01.150
比如说呢

15:01.150 --> 15:02.950
我一个div叫dupper啊

15:02.950 --> 15:04.150
我要举好几个例子啊

15:04.150 --> 15:06.150
给大家充分的看一看这个东西怎么来用

15:06.550 --> 15:08.450
因为本来他的写法比较简单啊

15:08.450 --> 15:10.050
他这个用起来还是

15:10.450 --> 15:11.150
也挺简单

15:11.150 --> 15:12.650
只要你明白之后也挺简单啊

15:13.150 --> 15:13.650
ok

15:14.550 --> 15:15.650
保存刷新哈

15:15.650 --> 15:16.450
这是一个rapper

15:16.450 --> 15:17.850
里面有两个这样的一个div

15:17.850 --> 15:18.850
然后呢rapper

15:18.850 --> 15:20.050
我给他设一个宽度啊

15:20.050 --> 15:21.450
这个宽度可能说是

15:22.150 --> 15:22.850
啊300

15:22.850 --> 15:24.350
然后高度300是吧

15:24.350 --> 15:25.550
然后给他设一个balder

15:25.950 --> 15:27.350
他是正常的盒子是吧

15:27.350 --> 15:28.050
正常的盒子

15:28.050 --> 15:28.150
哈

15:28.150 --> 15:29.650
所以说他这个balder会

15:29.850 --> 15:30.350
哎

15:30.950 --> 15:32.750
会加到他这个整体计算里面去

15:32.750 --> 15:33.150
是吧

15:33.250 --> 15:35.350
所以最后301302302是吧

15:35.350 --> 15:36.250
这是一个正常的盒子

15:36.250 --> 15:36.950
大家能看清吗

15:36.950 --> 15:37.450
这个盒子

15:37.450 --> 15:38.150
没有问题吧

15:38.350 --> 15:39.250
啊没有问题啊

15:39.450 --> 15:40.050
然后现在呢

15:40.050 --> 15:41.250
我在他这个里面啊

15:41.250 --> 15:42.350
这两个content啊

15:42.350 --> 15:44.150
我要给他俩设一个宽度

15:44.150 --> 15:45.850
这个宽度呢是50%

15:45.850 --> 15:47.050
啊这个宽度50%

15:47.050 --> 15:47.450
哈

15:47.850 --> 15:49.350
虽说我给他的副级

15:49.350 --> 15:51.250
定义了一个这样的一个宽度啊

15:51.250 --> 15:51.850
但是呢

15:51.850 --> 15:53.150
我这个副级的宽度

15:53.150 --> 15:55.050
可能说在真实的项目需求里面

15:55.050 --> 15:55.750
还不确定

15:56.050 --> 15:56.950
不一定是300

15:56.950 --> 15:57.650
所以你这块呢

15:57.650 --> 15:58.850
还必须得添50%

15:58.850 --> 15:59.850
可能说这会300

15:59.850 --> 16:00.550
一会400的

16:00.750 --> 16:01.650
或者说他的副级

16:01.650 --> 16:02.650
干脆我就不设宽度

16:02.650 --> 16:03.850
或者说宽度就是100

16:04.250 --> 16:05.850
啊或者说宽度就是100%

16:05.850 --> 16:06.450
那就这样

16:06.650 --> 16:07.450
就100%

16:07.450 --> 16:09.050
就等于我这个可视区

16:09.050 --> 16:09.950
屏幕的一个宽

16:09.950 --> 16:10.650
行吧

16:10.650 --> 16:11.750
就像一个移动端的一个

16:11.750 --> 16:13.250
这样的一个div一样哈

16:13.350 --> 16:14.350
就等于这样的一个宽

16:14.450 --> 16:14.950
好了

16:15.850 --> 16:16.550
然后现在哈

16:16.550 --> 16:17.550
非常有意思一点

16:17.550 --> 16:18.450
听好同学们

16:18.450 --> 16:19.150
非常有意思

16:19.650 --> 16:21.150
这个有意思有意思在哪呢

16:21.250 --> 16:22.350
我这个盒子啊

16:22.350 --> 16:23.350
里面的两个盒子啊

16:23.350 --> 16:25.250
我都想让他高度100

16:25.250 --> 16:25.750
但是呢

16:25.750 --> 16:26.950
宽度50%

16:26.950 --> 16:28.950
给他是一个背景颜色啊

16:28.950 --> 16:29.350
Yellow

16:31.660 --> 16:32.360
就Color啊

16:32.360 --> 16:32.860
Yellow

16:33.360 --> 16:33.960
然后呢

16:33.960 --> 16:35.660
我让他成为第一个紫元素

16:35.660 --> 16:36.160
行吧

16:36.560 --> 16:39.260
叫什么叫first off of type

16:40.160 --> 16:40.660
off type

16:40.660 --> 16:41.960
因为我想给两个背景颜色

16:41.960 --> 16:42.660
是不一样哈

16:42.660 --> 16:44.160
大家是不是看起来好看一些

16:44.160 --> 16:44.660
是吧

16:45.160 --> 16:45.560
啊

16:45.960 --> 16:46.560
然后呢

16:46.560 --> 16:47.360
他啊

16:47.360 --> 16:48.060
白光的

16:48.660 --> 16:49.360
这个

16:50.960 --> 16:51.760
color什么

16:51.960 --> 16:52.860
color是right

16:52.860 --> 16:53.360
ok

16:53.560 --> 16:53.960
然后呢

16:53.960 --> 16:56.060
他也是50%

16:57.560 --> 16:58.660
他50%啊

16:58.660 --> 17:00.060
hide100%

17:00.060 --> 17:00.460
相速

17:00.460 --> 17:00.760
ok

17:00.760 --> 17:01.260
双星

17:01.960 --> 17:02.460
嗯哼

17:03.660 --> 17:03.960
啊

17:03.960 --> 17:04.860
这怎么加冒号了

17:04.860 --> 17:05.360
双星啊

17:05.360 --> 17:05.960
双星啊

17:05.960 --> 17:07.160
是不是两个这样的元素

17:07.360 --> 17:08.860
现在我想干一件这样的一个事啊

17:08.860 --> 17:10.560
因为因为他俩为什么不能横排展示

17:10.560 --> 17:11.760
因为他们都是div是吧

17:11.760 --> 17:11.960
啊

17:11.960 --> 17:13.560
数列罗的是正常的是吧

17:13.860 --> 17:15.060
我在他们的身上

17:15.060 --> 17:16.260
是不是加一个follow的

17:16.260 --> 17:17.460
加一个浮动啊

17:17.460 --> 17:18.460
他俩加一个浮动

17:18.460 --> 17:19.960
是不是他俩就跑一排去了

17:20.060 --> 17:20.560
没有问题吧

17:20.560 --> 17:21.160
同学们

17:21.760 --> 17:22.560
都没有问题

17:22.760 --> 17:25.160
这不他俩的尺寸也刚好能构成一排

17:25.160 --> 17:26.060
没有问题吧

17:26.260 --> 17:26.560
哎

17:26.560 --> 17:27.860
大家看到这是不是都没有问题

17:27.860 --> 17:28.260
你看哈

17:28.260 --> 17:29.860
其乐融融里面的一家

17:30.260 --> 17:30.660
哎

17:30.760 --> 17:33.060
每一家的这样的一个宽度都是多少

17:33.260 --> 17:34.760
是不是都等于150是吧

17:34.760 --> 17:35.660
都等于150啊

17:35.660 --> 17:36.860
就是调一个这样的一个哎

17:36.860 --> 17:37.560
这样的位置哎

17:37.560 --> 17:38.460
现在都挺好的吧

17:38.560 --> 17:40.060
里面你150我150

17:40.260 --> 17:41.860
现在问题来了哈

17:42.160 --> 17:42.760
现在

17:43.060 --> 17:44.760
我想给第一个content

17:45.060 --> 17:46.060
加一个border

17:46.660 --> 17:47.460
听我说哈

17:47.660 --> 17:48.760
他俩的宽度

17:48.760 --> 17:50.860
我想一家每家都150

17:50.860 --> 17:51.360
然后呢

17:51.360 --> 17:52.160
想让他哎

17:52.160 --> 17:53.360
实际形成一个这样的布局

17:53.360 --> 17:53.860
现在呢

17:53.860 --> 17:55.060
我想给第一个

17:55.260 --> 17:55.960
加一个border

17:55.960 --> 17:56.960
或者加一个packing

17:57.160 --> 17:57.960
你看怎么办

17:57.960 --> 17:58.760
现在是不是就是

17:59.760 --> 18:00.460
现在是什么

18:00.460 --> 18:02.160
现在是不是宽度不固定

18:02.260 --> 18:04.760
但是我想让他的布局固定

18:04.760 --> 18:06.960
然后我还想让他里面的一个

18:07.060 --> 18:07.960
那边距固定

18:07.960 --> 18:08.960
或者说border固定

18:09.060 --> 18:09.460
就是啥呢

18:09.460 --> 18:10.660
我想实现这样一个布局

18:10.660 --> 18:11.060
然后呢

18:11.060 --> 18:12.860
宽度还不固定是10%

18:12.860 --> 18:14.060
时刻都是计算的是吧

18:14.160 --> 18:15.160
就是你不可能

18:15.160 --> 18:17.360
你现在很难通过人为的计算方式

18:17.360 --> 18:18.860
能求来他多少像素

18:18.960 --> 18:20.860
因为屏幕的宽度随着畸形的不一样

18:20.860 --> 18:22.260
他不一定能弄一次吧

18:22.360 --> 18:22.660
然后呢

18:22.660 --> 18:24.060
我还想要站的布局

18:24.160 --> 18:25.360
他的宽度就是50%

18:25.360 --> 18:26.560
是一个不确定的一个值

18:26.560 --> 18:28.260
然后现在最可恶的一点是什么呢

18:28.360 --> 18:29.160
border固定

18:29.260 --> 18:30.260
或者说packing固定

18:30.260 --> 18:31.060
里面有border

18:31.060 --> 18:31.660
或者有packing

18:31.660 --> 18:32.560
这个是写死的

18:32.760 --> 18:33.860
啊产品经理告诉的

18:34.260 --> 18:35.260
然后最可恶的一点

18:35.260 --> 18:36.560
哎宽度还不固定

18:36.660 --> 18:37.460
那怎么来写呢

18:37.460 --> 18:37.960
这么情况下

18:37.960 --> 18:39.560
比如说咱们知道一个宽度的话

18:39.560 --> 18:40.360
比如说这块啊

18:40.360 --> 18:41.560
这块比如说整体容器

18:41.560 --> 18:43.260
比如说啊容器600啊

18:43.260 --> 18:44.960
然后他俩呢一家占300

18:45.060 --> 18:46.260
我们要知道这样的宽度的话

18:46.260 --> 18:47.460
还可以通过人为的计算是吧

18:47.460 --> 18:48.960
不是这块这个这个

18:48.960 --> 18:50.760
内容区可能是298是吧

18:50.860 --> 18:51.960
然后那个border来个1

18:51.960 --> 18:52.660
是不是这样的话

18:52.660 --> 18:53.960
就圆过去了没问题吧

18:54.160 --> 18:54.760
关键是什么呢

18:54.760 --> 18:56.160
现在你不知道

18:56.560 --> 18:58.860
你不知道他的宽度到底是多少

18:59.060 --> 18:59.960
所以你也求不出来

18:59.960 --> 19:01.260
你也不能说用求来那个值

19:01.260 --> 19:02.360
再加什么border什么的

19:02.460 --> 19:04.160
然后你还得实现这样的布局

19:04.260 --> 19:05.160
那怎么办呢

19:05.160 --> 19:06.460
是不这种情况下

19:06.460 --> 19:07.860
我们就写上

19:09.360 --> 19:10.060
box sizing

19:10.060 --> 19:12.360
border box是一个最佳的解决方案

19:12.360 --> 19:13.260
就比如说咱不写

19:13.360 --> 19:13.960
咱们不写

19:13.960 --> 19:14.860
你试一下呗

19:15.160 --> 19:16.460
那我这块我加一个

19:16.960 --> 19:17.960
我加一个拍定

19:18.860 --> 19:19.660
我加一个拍定

19:20.060 --> 19:21.960
比如说上下是零左右是十

19:21.960 --> 19:23.060
我就给他加一个拍定

19:23.060 --> 19:23.660
那你可以看

19:23.660 --> 19:25.160
你看看他会变成什么样的效果

19:25.160 --> 19:25.760
一刷新

19:25.760 --> 19:26.860
他是不是跑这来了

19:26.960 --> 19:27.360
因为啥

19:27.360 --> 19:28.360
因为他占的宽度

19:28.360 --> 19:29.260
是不是比原来

19:29.360 --> 19:31.060
咱们预想的50%要大了

19:31.360 --> 19:31.860
对吧

19:32.160 --> 19:33.760
啊因为你看你宽度10%

19:33.760 --> 19:34.860
整体内容区10%是吧

19:34.860 --> 19:36.360
那我再加一个拍定的话

19:36.360 --> 19:38.660
那肯定是在面容区的基础上增加

19:38.660 --> 19:40.860
所以说两个一行是不是容大不了俩了

19:40.860 --> 19:41.960
那你肯定第二个串毫

19:41.960 --> 19:43.960
是不是破坏咱原来想实现那种布局了

19:44.160 --> 19:44.960
你明白我意思吧

19:44.960 --> 19:46.560
是这种情况下是很难办到

19:46.560 --> 19:47.860
能真个难谈计算一下吧

19:47.960 --> 19:50.060
那你告诉我的位置应该添多少啊

19:50.360 --> 19:51.960
啊你告诉我应该添多少

19:51.960 --> 19:53.760
是不是除了百分数你也不好添呢

19:53.760 --> 19:54.060
是吧

19:54.060 --> 19:55.260
你也不能添一个具体值啊

19:55.260 --> 19:56.460
因为宽度不固定是吧

19:56.660 --> 19:58.160
所以就是这样的一个情况哈

19:58.260 --> 19:59.260
那基于这样的一个情况

19:59.260 --> 20:00.760
我还想给他加加那个拍定

20:00.760 --> 20:03.060
或者说加一个加那个border怎么办呢

20:03.160 --> 20:05.860
是不是咱们一个border box sizing

20:06.860 --> 20:10.560
border box就登场了

20:10.660 --> 20:12.360
我再刷新是不是上去了

20:12.460 --> 20:14.760
哎你的总宽度没问题是吧

20:14.760 --> 20:15.760
还是百分之五十

20:15.860 --> 20:17.660
里面呢是不是拍定也有了

20:17.960 --> 20:19.860
一般一个时是不是其各种

20:19.860 --> 20:22.260
真正的达到了没有问题的一个状态

20:22.460 --> 20:23.060
能懂我意思吧

20:23.060 --> 20:24.760
就是这种情况下

20:24.760 --> 20:27.060
一般情况下我们都用

20:27.260 --> 20:29.760
哎border box来解决这样的问题

20:30.060 --> 20:30.660
明白了吧

20:31.360 --> 20:33.260
哎这首先是第一种需求哈

20:33.560 --> 20:34.660
比如说第二种需求

20:34.660 --> 20:36.360
也是跟他其实差不多哈

20:36.360 --> 20:36.960
差不多

20:37.160 --> 20:39.260
比如说呢还是一个这样的一个

20:39.260 --> 20:40.460
全局的一个场景

20:41.960 --> 20:42.660
哪儿去了

20:43.260 --> 20:44.560
啊我把都傻了是吧

20:44.760 --> 20:46.660
都傻了还是一个这样的全局的场景

20:48.970 --> 20:50.970
然后啊里面我添一个输入框啊

20:50.970 --> 20:51.970
里面添一个输入框

20:52.870 --> 20:54.870
比如说还是他的负极的宽度不确定啊

20:54.870 --> 20:56.370
导致他自己的宽度也不确定

20:56.770 --> 20:57.970
像添一个输入框

20:58.170 --> 20:59.270
然后呢这个输入框

20:59.570 --> 21:00.770
我想这个输入框啊

21:00.970 --> 21:02.870
这个大小刚好就拉伸到

21:02.870 --> 21:05.470
他的容器的一个大小的程度

21:05.470 --> 21:07.370
那是不是他的位置要添成百分百

21:07.570 --> 21:09.170
因为他是阴烂blog是吧

21:09.470 --> 21:11.970
添完百分百之后杀心你会看到

21:12.370 --> 21:14.470
不太对劲哈为啥说不太对劲呢

21:14.470 --> 21:16.670
我把这个盒子给你缩小我不这么大了

21:17.270 --> 21:19.370
因为到边上你看不到我把他缩小

21:19.370 --> 21:21.170
缩小成三百箱所以你就能看到啊

21:21.370 --> 21:23.170
哪块不对劲呢是不是他出去了

21:24.570 --> 21:25.970
你看是不是里面这个

21:26.670 --> 21:28.070
里面这个input出去了

21:28.170 --> 21:29.470
你知道为啥会出去吗

21:29.670 --> 21:30.870
因为这个input呀

21:30.970 --> 21:32.570
他是不天生戴border的

21:32.770 --> 21:34.270
他上下左右border都戴个2

21:34.370 --> 21:35.870
所以他出去了四相速吧

21:36.170 --> 21:37.570
是不是没有问题啊

21:37.570 --> 21:39.570
因为啥你给他设置了一个宽度百分百

21:39.570 --> 21:40.770
他里面的内容区的宽度

21:40.770 --> 21:42.770
就等于附近容器的这样的一个宽度

21:42.770 --> 21:44.070
然后你又给他来了一个border

21:44.070 --> 21:45.470
他就抄了是不是出去了

21:45.670 --> 21:47.870
那我现在不想让他出去怎么来办呢

21:48.070 --> 21:50.470
是不是还是最好的解决办法啊

21:50.870 --> 21:52.470
这是border box是吧

21:52.470 --> 21:53.270
border box

21:53.770 --> 21:55.870
哎什么呀box sizing border box是吧

21:56.470 --> 21:58.570
box sizing border box ok

21:59.270 --> 22:00.870
保存刷新是不是进去了

22:01.070 --> 22:01.870
没有问题吧

22:01.870 --> 22:02.970
其实一般情况下哈

22:02.970 --> 22:03.970
我们想添加那个输入矿

22:03.970 --> 22:04.770
就一般情况下

22:04.770 --> 22:06.670
我们想先想添加那个输入矿的话

22:07.070 --> 22:10.570
咱们都不太关注这个输入矿的内容区

22:10.570 --> 22:11.270
到底多大

22:11.270 --> 22:13.170
就比如说我正常想添一个输入矿

22:13.170 --> 22:14.470
就不考虑这种情况了

22:14.770 --> 22:16.070
我正常想添一个输入矿

22:16.070 --> 22:17.570
你看看咱们正常的考虑问题的时候

22:17.570 --> 22:18.570
是不是这么来考虑的

22:18.670 --> 22:20.470
然后你再看看是不是这个box sizing

22:20.770 --> 22:21.970
确实他很方便

22:22.270 --> 22:23.670
不是正常这个输入矿是吧

22:23.870 --> 22:24.670
这个输入矿呢

22:24.670 --> 22:25.870
我们在产品需求上

22:26.070 --> 22:27.070
想达到这样的一个效果

22:27.070 --> 22:28.270
就是输入矿哎

22:28.270 --> 22:29.070
产品里头告诉你

22:29.070 --> 22:29.970
这个输入矿呢

22:30.070 --> 22:31.570
咱们要求它的宽度是吧

22:31.870 --> 22:32.870
要求它的宽度呢

22:33.770 --> 22:35.270
哎咱们就是三百强速

22:35.770 --> 22:36.670
产品给你告诉你了

22:36.670 --> 22:38.570
这个输入矿的宽度是三百强速

22:39.170 --> 22:39.770
然后呢

22:39.870 --> 22:41.170
他说里面这个文字啊

22:41.170 --> 22:43.770
最好实现一个上下左右这样的一个边距

22:43.770 --> 22:45.570
有10个像素的这样的一个空隙

22:45.770 --> 22:46.970
大家有10个像素这样的空隙

22:46.970 --> 22:48.470
或者是一两个像素这样的空隙

22:48.570 --> 22:48.970
然后呢

22:48.970 --> 22:50.770
这个input的宽度告诉你了

22:50.770 --> 22:52.270
有一个空隙这个需求告诉你了

22:52.470 --> 22:54.170
然后我们去理解这件事的时候

22:54.670 --> 22:57.370
我们很难说正常那个四位要把它拆分出来

22:57.370 --> 22:59.070
说这个输入矿里面那个内容区

22:59.470 --> 23:00.570
然后它的排定多大

23:00.770 --> 23:01.870
然后最后包点多大

23:01.970 --> 23:03.170
是不是我们理想的效果就是

23:03.170 --> 23:04.970
你告诉我一个输入矿到底多大

23:04.970 --> 23:07.670
那我就让这个输入矿真实的就应该多大

23:07.770 --> 23:08.270
是吧

23:08.270 --> 23:11.170
然后你告诉我它上下的边距是多少

23:11.470 --> 23:11.870
然后呢

23:11.870 --> 23:13.270
我在里面调台的边距

23:13.370 --> 23:15.070
是不是就这样的一个正常的思维

23:15.370 --> 23:16.670
因为他因为说白了

23:16.670 --> 23:17.770
他是一个输入矿啊

23:17.770 --> 23:19.470
我们很少的把这个输入矿里面

23:19.470 --> 23:22.270
就是哎就是在这个输入矿里面

23:22.270 --> 23:23.470
去想盒子那几个部分

23:23.470 --> 23:24.870
什么排定什么一个部分是吧

23:24.870 --> 23:26.070
但实际上这个输入矿

23:26.070 --> 23:27.070
还是拿这个排定来

23:27.070 --> 23:28.570
还是拿这个盒子来实现的啊

23:28.570 --> 23:29.970
就是说了半天说什么意思吗

23:29.970 --> 23:30.770
就是我怎么来写一下

23:30.770 --> 23:31.470
你看一下啊

23:31.970 --> 23:32.770
这个输入矿比如说

23:32.770 --> 23:34.270
哎它是300像素啊

23:34.470 --> 23:34.870
然后呢

23:34.870 --> 23:36.270
我给这个输入矿的高呢

23:36.270 --> 23:37.170
调一点高

23:37.170 --> 23:39.170
比如说这个产品给咱们一个需求

23:39.170 --> 23:40.170
是50像素啊

23:40.170 --> 23:41.370
50像素的一个高

23:41.570 --> 23:42.470
然后产品给你说了

23:42.570 --> 23:43.670
说你这里面写字啊

23:43.670 --> 23:44.570
你最好是这样的

23:44.570 --> 23:46.270
就是你前后左右上下呢

23:46.270 --> 23:47.470
你控制了点距离

23:47.670 --> 23:49.170
就是你这个字的前和后

23:49.170 --> 23:50.170
你控制了点距离

23:50.170 --> 23:52.070
不能说一开始让它贴着边起

23:52.270 --> 23:53.370
最好让他在这块开始

23:53.370 --> 23:54.470
就可以去编辑是吧

23:54.670 --> 23:55.270
但是产品里

23:55.270 --> 23:56.370
他不会去知道

23:56.370 --> 23:58.070
说你这里面到底是拿啥实现的

23:58.070 --> 23:59.470
他可能觉得你未必是拿什么

23:59.470 --> 24:00.070
拍顶来实现

24:00.070 --> 24:00.870
因为他不懂是吧

24:00.970 --> 24:02.770
他会告诉你在里面最好控制了距离

24:02.970 --> 24:04.270
而我们真实实现他的时候

24:04.270 --> 24:06.070
是不是拿拍顶来实现的对吧

24:06.570 --> 24:07.470
但是一般情况下

24:07.470 --> 24:09.870
我们不太会去问这个产品经理

24:09.870 --> 24:11.470
你到底内容区域多大呀

24:11.470 --> 24:11.770
是吧

24:11.770 --> 24:12.970
你到底内容区域多大

24:13.170 --> 24:14.270
然后这个拍顶多大

24:14.270 --> 24:16.170
然后最后我来钻一下这个盒子多大

24:16.170 --> 24:16.570
是吧

24:16.770 --> 24:17.870
一般产品经理都会告诉你

24:17.870 --> 24:18.370
这个盒子多大

24:18.370 --> 24:19.370
然后拍顶多大

24:19.370 --> 24:21.470
所以按照这种需求来写的话

24:21.670 --> 24:23.770
我们一般情况下拿什么来写呢

24:23.870 --> 24:24.870
按照正常顺序的话

24:24.870 --> 24:26.470
我们是不是拿Baller box来写

24:26.670 --> 24:28.470
这样的话是不是就满足这样的一个

24:28.670 --> 24:30.070
需求提供的形式

24:30.070 --> 24:30.570
还比较容易

24:30.570 --> 24:31.670
当然你自己计算也可以

24:31.670 --> 24:32.670
就是这么来写

24:32.670 --> 24:33.470
为大家说一个道理

24:33.470 --> 24:35.670
就是他满足需求提供的形式

24:35.670 --> 24:38.370
就是人家告诉你的是输入框的整体宽度

24:38.570 --> 24:38.870
是吧

24:38.870 --> 24:40.670
又告诉你前面空几个格

24:40.870 --> 24:42.870
或者说直接把这个输入框的Baller

24:42.870 --> 24:43.870
都告诉你了是吧

24:43.970 --> 24:44.770
我们来编写的时候

24:44.770 --> 24:46.670
最好就是咱先求出来一个输入框

24:46.870 --> 24:48.270
你到底多大呀

24:48.970 --> 24:50.970
比如说给咱们一个需求这个输入框

24:51.170 --> 24:51.770
就是什么呢

24:52.770 --> 24:54.770
比如说给咱们一个需求

24:54.770 --> 24:56.370
就是这个300强速是吧

24:56.570 --> 24:57.370
就是300强速

24:57.370 --> 24:58.170
咱们来实现了

24:58.370 --> 25:00.170
然后里面需要加这个拍顶

25:00.370 --> 25:01.970
前后都空来10个是吧

25:02.170 --> 25:02.670
没问题

25:02.670 --> 25:03.570
我就加上

25:03.570 --> 25:04.370
是不是加上完之后

25:04.370 --> 25:05.970
依然不影响整体的一个宽度

25:06.170 --> 25:08.370
我不再用去计算这个宽度

25:08.370 --> 25:09.770
到底是280还是多少

25:09.770 --> 25:10.970
然后再加拍顶了是吧

25:11.170 --> 25:12.070
是不是直接这么来写

25:12.070 --> 25:14.470
更符合咱们接收需求的这样的形式

25:14.770 --> 25:15.170
对吧

25:15.170 --> 25:15.870
所以说这块

25:15.870 --> 25:17.870
你说这三块写是不是没问题了

25:18.170 --> 25:18.970
对吧没问题吧

25:18.970 --> 25:20.870
然后Baller的问题是不是也包进去了

25:20.870 --> 25:22.470
这个Input的天生的包含问题

25:22.470 --> 25:23.370
是不是也包进去了

25:23.570 --> 25:25.070
然后是不是也保持了

25:25.070 --> 25:26.470
它整体的宽度不变

25:26.670 --> 25:27.070
对吧

25:27.870 --> 25:31.170
所以说这更符合一个需求接收的一个形式

25:31.970 --> 25:33.270
大家能不能理解是吧

25:33.270 --> 25:33.770
这么来讲

25:33.770 --> 25:34.970
是不是没什么太大的问题

25:35.970 --> 25:36.670
反正正常来说

25:36.670 --> 25:38.370
没有人就是拿到人需求之后

25:38.370 --> 25:39.170
就是一般情况下

25:39.170 --> 25:41.170
对于这个尤其对于Input来讲

25:41.270 --> 25:43.070
没有太多人去拿到这个需求之后

25:43.070 --> 25:44.070
又反着去检的

25:44.470 --> 25:45.970
一般情况就正的去编了

25:46.170 --> 25:46.870
你反着去检

25:46.870 --> 25:48.070
就给你一个整体的宽度

25:48.070 --> 25:49.770
就给你一个这样的固定的一个拍定

25:49.970 --> 25:51.070
然后你刚刚大家一顿检

25:51.070 --> 25:52.470
减完之后都是来一个结论是吧

25:52.470 --> 25:53.370
宽度276

25:53.370 --> 25:54.670
然后再往上往回再加

25:54.670 --> 25:55.670
然后拍定多少多少

25:55.670 --> 25:56.670
就正常的核模型了

25:56.870 --> 25:58.070
是不是显得比较麻烦是吧

25:58.270 --> 25:59.270
那你在这种情况下

25:59.270 --> 26:00.170
与其那么来写

26:00.170 --> 26:00.970
你就不如说

26:00.970 --> 26:02.670
你不自己去人工检了是吧

26:02.870 --> 26:03.470
你缩完之后

26:03.470 --> 26:04.170
直接往里去写

26:04.170 --> 26:05.070
让系统帮你写

26:05.070 --> 26:05.470
对吧

26:05.470 --> 26:07.070
再用IE6混乱模式的核模型

26:07.070 --> 26:08.270
是不是显得更方便一些

26:08.470 --> 26:09.170
明白我意思吧

26:09.170 --> 26:09.670
同学们

26:10.170 --> 26:12.870
这是一个经验性的一个写法

26:12.870 --> 26:14.170
一个经验性的一个用法

26:14.370 --> 26:14.770
OK

26:15.470 --> 26:17.070
但是它其实主要的功能

26:17.070 --> 26:18.670
还是说针对那些百分比

26:18.670 --> 26:19.370
一个定位

26:19.370 --> 26:21.270
比如说这个盒子百分比

26:21.270 --> 26:22.570
它就占30%的宽度

26:22.570 --> 26:23.770
然后它还需要有边框

26:23.770 --> 26:24.570
固定边框

26:24.570 --> 26:25.770
还需要固定那边距

26:25.770 --> 26:27.170
那这个时候一般情况下

26:27.170 --> 26:28.570
我们的border box box sizing

26:28.570 --> 26:29.210
box sizing

26:29.210 --> 26:30.370
border box就登场了

26:30.370 --> 26:31.170
明白我意思吧

26:31.170 --> 26:32.970
然后再有一种特殊情况就是什么呢

26:32.970 --> 26:33.770
我们这个盒子

26:34.470 --> 26:36.470
我现在都不知道它的宽度是多少

26:36.670 --> 26:37.970
它不是不固定的问题了

26:37.970 --> 26:38.770
我都不知道

26:38.970 --> 26:40.770
这个宽度是后端工程师

26:40.770 --> 26:41.470
传给我们的

26:41.470 --> 26:43.070
或者说是用户自定义的

26:43.170 --> 26:43.970
用户可以自定义

26:43.970 --> 26:44.970
这个盒子的宽度

26:44.970 --> 26:46.070
用户自定义

26:46.570 --> 26:48.070
或者说后端传的

26:48.670 --> 26:49.470
后端传的

26:49.970 --> 26:51.170
传给咱们一个啥呢

26:51.170 --> 26:53.170
直接给咱们一个盒子这个宽度

26:53.370 --> 26:54.870
然后产品经理有告诉咱们

26:54.870 --> 26:56.270
这个盒子里面要掂起的内容

26:56.270 --> 26:57.170
必须要美观

26:57.170 --> 26:58.070
美观的前提是

26:58.070 --> 26:59.170
packing和border

26:59.170 --> 27:00.370
必须给咱们固定一个值

27:00.370 --> 27:00.770
是吧

27:00.970 --> 27:01.870
那现在已知的就是

27:01.870 --> 27:03.270
packing和border是固定的

27:03.270 --> 27:04.870
然后后面的这个盒子

27:05.070 --> 27:05.670
到底多宽

27:05.670 --> 27:06.870
等待别人给咱们传

27:07.270 --> 27:08.170
就是总的宽度

27:08.270 --> 27:09.870
那现在是不是依然是知道了总宽度

27:09.870 --> 27:11.070
知道packing知道border

27:11.070 --> 27:12.870
然后不太去关注内容区

27:12.870 --> 27:14.070
到底多大是吧

27:14.070 --> 27:15.170
那这种情况下

27:15.270 --> 27:17.370
是不是也天然的符合咱们一个

27:17.670 --> 27:19.370
border box的一个编写形式

27:19.570 --> 27:20.570
能明白我意思吗

27:20.570 --> 27:21.570
所以这种情况下

27:22.070 --> 27:22.470
哎

27:22.570 --> 27:24.470
我们就用border box来编写

27:24.470 --> 27:25.170
就可以了

27:25.170 --> 27:26.070
明白我意思吧

27:26.070 --> 27:28.170
啊就是顺着这个思路来哈

27:28.170 --> 27:29.270
就是怎么方便怎么来

27:29.270 --> 27:29.570
当然了

27:29.570 --> 27:31.170
你要说非得反正来做

27:31.370 --> 27:32.370
这种情况能不能做

27:32.370 --> 27:32.870
也行

27:32.870 --> 27:33.970
那你用js算吧

27:33.970 --> 27:34.770
人传应多少

27:34.770 --> 27:35.970
你减去packing border

27:36.070 --> 27:37.870
然后得出一个正常和盟型的位置

27:37.870 --> 27:38.870
然后再加上packing border

27:38.870 --> 27:39.270
是吧

27:39.270 --> 27:40.170
我不恶心了

27:40.170 --> 27:40.970
就恶心了啊

27:41.570 --> 27:42.170
所以说啊

27:42.170 --> 27:43.670
这个混杂模式的和盟型

27:43.670 --> 27:44.370
在日后啊

27:44.370 --> 27:45.570
应用场景非常非常多

27:45.970 --> 27:46.970
哎就有些时候啊

27:46.970 --> 27:48.370
比如说咱们写这个

27:48.370 --> 27:49.470
一些小的练习

27:49.470 --> 27:50.270
小的项目的时候啊

27:50.270 --> 27:51.270
比如说我写个div

27:51.470 --> 27:52.470
啊我写个div

27:54.070 --> 27:54.670
比如说呢

27:55.370 --> 27:56.370
比如说我写个div啊

27:56.370 --> 27:57.670
redupper啊为大家

27:57.870 --> 27:59.370
为大家随手就写一个场景啊

27:59.370 --> 28:01.170
你看你是不是存在过这样一个场景

28:01.470 --> 28:01.970
比如说呢

28:01.970 --> 28:03.070
我们想实现一个这样的

28:03.070 --> 28:04.570
一个浮动的布局是吧

28:04.770 --> 28:05.870
然后给这个dupper

28:05.970 --> 28:07.470
啊给这个dupper定一个

28:08.170 --> 28:08.670
哎

28:08.770 --> 28:10.570
这个宽度300是吧

28:10.570 --> 28:11.570
这个定一个宽

28:11.570 --> 28:12.770
这个宽度100

28:13.170 --> 28:14.170
啊也是300

28:14.170 --> 28:15.070
宽度300啊

28:15.070 --> 28:15.870
然后baller

28:16.170 --> 28:16.970
一向素

28:17.170 --> 28:17.770
solid

28:18.470 --> 28:18.970
right

28:19.170 --> 28:19.770
然后现在呢

28:19.770 --> 28:20.970
里面的小盒子啊

28:20.970 --> 28:21.570
都是什么呢

28:21.570 --> 28:22.770
都是100向素的

28:22.770 --> 28:24.070
然后100向素的

28:24.970 --> 28:25.870
啊然后呢

28:25.970 --> 28:27.070
黑色的背景

28:27.470 --> 28:27.970
是吧

28:29.070 --> 28:29.870
黑色的背景

28:30.970 --> 28:31.370
然后呢

28:31.370 --> 28:32.970
给他们加一个这样的浮动

28:32.970 --> 28:34.470
flow left

28:34.570 --> 28:35.770
ok 保存刷新

28:35.770 --> 28:36.770
是不是这样一个需求了

28:36.770 --> 28:37.870
但是现在我们一看啊

28:37.870 --> 28:39.770
这区分不了盒子和盒子是吧

28:39.770 --> 28:40.470
这一大坨

28:40.470 --> 28:41.470
咱都不知道是一横横

28:41.470 --> 28:42.270
一个元素黑了

28:42.270 --> 28:43.670
还是说三个盒子是吧

28:43.870 --> 28:44.870
所以这个时候我们想干嘛呢

28:44.870 --> 28:45.770
我们一般想加一个

28:45.770 --> 28:47.570
这样的白色编线的一个border是吧

28:47.770 --> 28:48.570
加一个border

28:48.670 --> 28:49.770
但是一般加border的时候

28:49.770 --> 28:50.470
咱们就犹豫了

28:50.470 --> 28:51.070
说一看哎呀

28:51.070 --> 28:51.470
不对呀

28:51.470 --> 28:52.470
加完border之后

28:52.770 --> 28:54.170
这个盒子不就大了吗

28:54.170 --> 28:55.770
大了之后就不符合咱们原来

28:55.770 --> 28:56.570
展示的样子了

28:56.570 --> 28:57.470
所以说最初咱们一看

28:57.470 --> 28:58.270
那这块我改吧

28:58.270 --> 28:59.270
改成98吧

28:59.370 --> 28:59.970
最后改吧

28:59.970 --> 29:00.770
改成98吧

29:00.770 --> 29:01.770
是不是也行

29:01.870 --> 29:03.170
是不是也能变成这个样子是吧

29:03.170 --> 29:05.070
也能展示这样的一个白线的一个

29:05.370 --> 29:05.970
这样的一个

29:05.970 --> 29:06.870
哎 这样的一个界线

29:06.870 --> 29:07.770
没 没意思吧

29:07.970 --> 29:09.670
但你这么写是不是就麻烦呢

29:09.870 --> 29:10.870
那你与其这样的话

29:10.870 --> 29:12.870
咱们直接就写上一个border box

29:12.870 --> 29:13.470
多好啊

29:13.470 --> 29:13.970
是吧

29:14.170 --> 29:15.070
丑着也整结

29:15.070 --> 29:16.870
咱们来直接求他的一个宽度的话

29:16.870 --> 29:17.370
也好求

29:17.370 --> 29:18.670
直接就是100了是吧

29:18.970 --> 29:20.170
我总写错啊

29:20.170 --> 29:21.870
一说可以写box sizing

29:21.870 --> 29:23.370
写一个border box

29:25.380 --> 29:26.180
是不是这样的话

29:26.180 --> 29:27.080
哎就更好了

29:27.080 --> 29:28.580
你直接设的就是100是吧

29:28.580 --> 29:29.480
然后里面呢

29:29.780 --> 29:30.480
你这个

29:30.880 --> 29:31.680
哎里面什么

29:31.680 --> 29:32.680
里面你这个border

29:32.680 --> 29:34.480
是不是也都哎该设都设了

29:34.580 --> 29:35.580
对吧该设都设了

29:35.680 --> 29:36.680
然后哎

29:36.680 --> 29:37.680
这样的一个情况

29:37.680 --> 29:38.880
就更加好计算一些

29:38.880 --> 29:39.980
包括你取这个值的时候

29:39.980 --> 29:40.980
你取这个位置的时候

29:40.980 --> 29:41.980
是不是直接一取一取

29:41.980 --> 29:43.380
就是盒子整体的一个宽度

29:43.380 --> 29:43.880
对吧

29:43.980 --> 29:45.080
而且有的时候也是哈

29:45.280 --> 29:45.980
当你

29:46.180 --> 29:48.680
当你需要取这个元素的值的时候

29:48.780 --> 29:50.580
你显然取值变得简洁

29:50.580 --> 29:51.780
并且要取这个

29:51.880 --> 29:53.780
这个盒子的真实的宽度的时候

29:53.780 --> 29:55.180
为了方便以后的计算啊

29:55.280 --> 29:56.680
或者方便下一个元素的布局

29:56.680 --> 29:58.080
要取这个盒子真实的宽度的时候

29:58.080 --> 29:58.780
方便取

29:58.980 --> 30:00.980
你也可以把这个盒子设成box sizing

30:00.980 --> 30:01.780
border box

30:01.980 --> 30:02.680
明白我意思吧

30:02.680 --> 30:03.080
啊

30:03.180 --> 30:04.880
这是这几大用法啊

30:04.880 --> 30:06.480
关于这样的一个border box

30:06.880 --> 30:07.480
没有问题吧

30:07.480 --> 30:08.880
同学们是不是没有问题

30:09.980 --> 30:10.680
没有问题的话

30:10.680 --> 30:12.280
咱们来开启这节课的

30:12.280 --> 30:13.880
下面几个小点的一个讲解

30:14.080 --> 30:15.680
关于这个border box

30:15.680 --> 30:17.280
往后应用的场景太多了

30:17.280 --> 30:18.580
随着用随着行使

30:18.580 --> 30:19.880
你就更加熟悉了

30:20.080 --> 30:21.480
更加能掌握他的一个用法

30:21.480 --> 30:22.680
就平时的说你也多用用

30:22.680 --> 30:24.280
体会体会这个东西的一个好处

30:24.280 --> 30:24.680
哈

30:24.780 --> 30:26.580
尤其连城你必须得自己上手

30:26.780 --> 30:28.180
听懂了真未必会

30:28.180 --> 30:28.780
他就跟

30:28.880 --> 30:30.580
就跟其实我们有的时候自己也是

30:30.680 --> 30:32.380
我们在研究一些新的东西的时候也是

30:32.580 --> 30:33.480
看完之后明白了

30:33.480 --> 30:33.780
对吧

30:33.780 --> 30:34.480
单一上手

30:34.780 --> 30:35.680
就有点懵哈

30:35.680 --> 30:36.780
当你上手练完了之后

30:36.780 --> 30:37.980
你马上就有种感觉

30:37.980 --> 30:39.480
忽然开脑会了是吧

30:39.680 --> 30:40.180
就这样的感觉

30:40.180 --> 30:41.080
一定要练一练啊

30:41.080 --> 30:41.680
一样练一练

30:41.980 --> 30:42.580
然后接下来

30:42.580 --> 30:43.380
咱们讲两个值

30:43.580 --> 30:44.180
这两个值

30:44.180 --> 30:45.880
是跟和谋型有点关系

30:45.880 --> 30:47.180
但没什么太大关系

30:47.380 --> 30:48.380
一个是offload是吧

30:48.380 --> 30:49.480
把这个值给弄出来

30:49.480 --> 30:50.380
一个是resize

30:50.380 --> 30:51.080
resize

30:53.260 --> 30:54.860
就是他也是关于盒子的一些属性

30:54.860 --> 30:56.260
关于盒子的一些属性

30:56.460 --> 30:57.460
这个offload

30:57.460 --> 30:58.860
咱们之前讲过是吧

30:58.860 --> 31:00.260
offload是有header是吧

31:00.260 --> 31:00.960
然后头一阵

31:00.960 --> 31:02.860
我给大家讲了一个值是screw是吧

31:02.960 --> 31:03.860
然后咱们来看一下

31:03.860 --> 31:05.660
文档里面还给咱们提供什么其他的值了

31:05.660 --> 31:06.060
是吧

31:07.060 --> 31:08.760
我们来看一下

31:11.720 --> 31:12.420
ok

31:12.820 --> 31:13.420
然后呢

31:13.420 --> 31:15.220
就大家查这个表在这个总表里面

31:15.820 --> 31:16.720
ctrl f

31:16.720 --> 31:18.620
或者你麦克电脑是come on f

31:18.620 --> 31:19.920
这个offload

31:19.920 --> 31:20.820
offload

31:22.020 --> 31:23.020
flow ok

31:23.020 --> 31:24.820
在上面就是这个就是

31:24.820 --> 31:25.220
ok

31:25.220 --> 31:26.620
点开之后咱们来看

31:26.720 --> 31:28.420
里面一共几个值呢

31:28.620 --> 31:30.820
其实这个offload正常来写的话

31:30.820 --> 31:33.420
它是相当于两个显法的一个合集

31:33.420 --> 31:34.320
它是相当于什么呢

31:34.320 --> 31:35.520
相当于一个offload x

31:35.520 --> 31:36.420
和这offload y

31:37.420 --> 31:38.020
offload x

31:38.020 --> 31:39.720
和这个offload y

31:40.520 --> 31:41.720
所以你可以分开写

31:41.720 --> 31:42.520
这块加一个x

31:42.520 --> 31:43.320
这块加一个y

31:43.320 --> 31:44.120
没有问题

31:44.120 --> 31:44.920
这都没有问题

31:44.920 --> 31:46.220
然后里面的值再研究一下

31:46.220 --> 31:47.420
这个clip这个值

31:47.420 --> 31:48.020
你可以

31:48.020 --> 31:49.120
你可以了解一下

31:49.120 --> 31:50.020
但其实它不兼容

31:50.520 --> 31:51.720
你看下面其实不兼容

31:51.720 --> 31:52.620
没有什么特大用

31:53.820 --> 31:54.920
然后它也比较好理解

31:54.920 --> 31:55.820
剩下的就是什么

31:55.820 --> 31:57.720
header scroll和这个auto是吧

31:57.720 --> 31:58.520
和这个auto

31:58.520 --> 31:59.220
其实呢

31:59.220 --> 32:00.920
能介绍的真的不多

32:00.920 --> 32:03.620
这个auto跟这个screw差不太多

32:03.620 --> 32:05.420
auto跟这个screw差不太多

32:06.320 --> 32:07.220
我给大家看一下

32:07.220 --> 32:08.220
因为这个东西比较简单

32:08.220 --> 32:09.320
直接拿它咱们来讲

32:09.320 --> 32:09.720
没有问题吧

32:09.720 --> 32:10.120
同学们

32:10.620 --> 32:11.720
然后它没讲到的东西

32:11.720 --> 32:12.620
我给你补充补充

32:13.120 --> 32:14.620
这个header一处部分隐藏

32:14.620 --> 32:15.620
这玩意我不用说了吧

32:15.620 --> 32:17.520
visible一处部分显示

32:17.520 --> 32:18.720
这个东西是它默认值

32:18.720 --> 32:19.420
默认值

32:19.720 --> 32:21.020
然后这块就多了一个什么

32:21.020 --> 32:22.820
咱们可以设置单独设置offload x

32:22.820 --> 32:23.720
和offload y

32:23.720 --> 32:25.020
这个是可以单独设置的

32:26.220 --> 32:27.720
然后再说一下offload scroll

32:27.720 --> 32:28.720
就是一处部分

32:28.720 --> 32:30.220
拿这个滚动条来显示

32:30.220 --> 32:31.720
就是由滚动条来显示了

32:31.720 --> 32:32.820
这个auto

32:32.820 --> 32:34.220
它看起来更强大点

32:34.220 --> 32:36.020
就是当你这个内容不易出的时候

32:36.020 --> 32:37.420
不出现滚动条

32:37.420 --> 32:39.020
当你这个内容易出的时候

32:39.020 --> 32:40.220
出现滚动条

32:40.820 --> 32:43.320
其实你设置成offload scroll

32:43.320 --> 32:45.820
它不易出的时候也没有滚动条

32:45.820 --> 32:49.020
至少在Mac电脑和一些新的Windows的

32:49.820 --> 32:51.920
这些浏览器上

32:51.920 --> 32:52.620
我试了一下

32:52.620 --> 32:53.720
没有出现那样的滚动条

32:53.720 --> 32:54.120
都一样

32:54.120 --> 32:55.020
其实它俩都一样

32:55.020 --> 32:56.120
但如果你为了标准的话

32:56.120 --> 32:57.120
你还是写这个auto

32:57.120 --> 32:58.420
还是写这个auto

32:58.420 --> 32:59.520
它是不是显得更标准点

32:59.520 --> 33:00.820
至少人标准这么制定了是吧

33:00.820 --> 33:01.820
别管浏览器怎么实现

33:01.820 --> 33:03.020
这样人这么制定了

33:03.020 --> 33:04.320
在Tex array里面

33:04.320 --> 33:05.120
也有这个offload

33:05.220 --> 33:06.220
就是天然在offload

33:06.220 --> 33:07.720
它里面的默认值就是这个auto

33:07.720 --> 33:08.720
闹动为止吧

33:08.720 --> 33:10.920
就这个元素里面的默认值是这个auto

33:10.920 --> 33:13.120
Tex array就是一个输入框

33:13.120 --> 33:13.620
大的输入框

33:13.620 --> 33:14.820
咱之前介绍过

33:14.820 --> 33:15.420
这个比较简单

33:15.420 --> 33:16.920
没有必要单独拿去详细介绍

33:17.820 --> 33:18.920
clave用不了

33:18.920 --> 33:21.020
唯一一个C3里面提供的

33:21.020 --> 33:21.620
就没实现

33:21.620 --> 33:22.820
它是干嘛的呢

33:22.820 --> 33:23.720
就是一出部分

33:25.220 --> 33:27.920
你看也是被用来一出容器的内容

33:27.920 --> 33:29.020
起不出现滚动条了

33:29.020 --> 33:30.120
不同在于什么呢

33:30.120 --> 33:32.920
在于它是一个完全禁止滚动的容器

33:32.920 --> 33:33.720
完全禁止滚动容器

33:33.720 --> 33:34.920
比如说你在一个方向

33:34.920 --> 33:37.220
设置一个offload x

33:37.220 --> 33:37.520
是吧

33:37.520 --> 33:38.220
有滚动条

33:38.220 --> 33:38.820
offload y

33:38.820 --> 33:39.720
这个可以吧

33:39.720 --> 33:40.920
那个就完全滚动不了了

33:40.920 --> 33:41.520
但是不好使

33:41.520 --> 33:42.120
但是不好使

33:43.020 --> 33:44.720
就是你看一下就可以了

33:44.720 --> 33:45.920
就这个功能了没被实现

33:46.920 --> 33:48.920
那实现的功能还是说

33:48.920 --> 33:50.220
这个头几个是吧

33:50.220 --> 33:51.920
我比如说我写一个这样的

33:51.920 --> 33:53.120
我写个这样div

33:53.120 --> 33:54.020
这个div呢

33:54.020 --> 33:55.720
我试一下摆咱们就是吧

33:55.720 --> 33:56.720
给大家看一看

33:56.720 --> 33:57.520
一个wrapper

33:57.520 --> 33:58.620
然后里面一个div

33:58.620 --> 34:00.020
这个div叫content

34:01.620 --> 34:03.720
content里面保存的内容是吧

34:03.720 --> 34:05.120
来点内容来个新闻

34:05.120 --> 34:06.220
买看看有啥

34:08.320 --> 34:09.820
来个新闻是吧

34:09.820 --> 34:11.020
活活帅

34:13.420 --> 34:13.720
ok

34:15.320 --> 34:16.020
看一下

34:16.020 --> 34:17.320
这样我这么多

34:19.420 --> 34:19.920
少来点

34:19.920 --> 34:20.420
少来点

34:21.820 --> 34:22.320
太多了

34:22.320 --> 34:22.720
不行

34:24.020 --> 34:24.420
放心

34:26.220 --> 34:27.720
这个应该是可以了

34:27.720 --> 34:28.020
是吧

34:28.020 --> 34:28.420
然后呢

34:28.420 --> 34:29.420
我把这个

34:30.420 --> 34:30.720
诶

34:31.520 --> 34:33.020
我把这个我把这个content

34:33.720 --> 34:36.220
设定一个宽度300像素

34:36.220 --> 34:36.920
然后这个呢

34:40.400 --> 34:41.100
500像素

34:41.100 --> 34:41.900
他俩都500吧

34:43.400 --> 34:44.400
然后我来个border

34:44.400 --> 34:45.300
我看一下

34:45.300 --> 34:46.300
border一像素

34:46.800 --> 34:47.300
solid

34:49.700 --> 34:50.100
好

34:51.100 --> 34:52.300
今天这手怎么了

34:52.300 --> 34:53.300
刷新啊

34:53.300 --> 34:54.200
是一个这样的一个宽度

34:54.200 --> 34:55.000
还是有点多是吧

34:55.000 --> 34:57.000
我把他把他多拿出来点

34:57.000 --> 34:57.800
这样

34:57.800 --> 34:58.200
ok

34:58.200 --> 34:59.100
是不是他进去了

34:59.100 --> 34:59.500
然后呢

34:59.500 --> 35:00.500
他的那个副级

35:00.500 --> 35:01.700
副级是不是一个wrapper

35:01.700 --> 35:02.400
这个wrapper呢

35:02.400 --> 35:03.300
我让他这么来

35:03.300 --> 35:04.500
这个wrapper

35:04.500 --> 35:06.000
我让他成为一个

35:06.800 --> 35:08.200
最后一个显示层

35:08.200 --> 35:09.200
他的宽度呢

35:09.200 --> 35:10.500
是300 x 300

35:13.420 --> 35:14.020
然后呢

35:14.920 --> 35:16.220
他也来一个border是吧

35:16.220 --> 35:17.520
他的border一像素

35:18.820 --> 35:19.420
solid

35:19.420 --> 35:20.020
alright

35:20.620 --> 35:20.920
哎

35:20.920 --> 35:21.620
他变成这样啊

35:21.620 --> 35:22.820
然后他设置offload

35:23.020 --> 35:23.420
最后呢

35:23.420 --> 35:24.820
咱们不直接offloadhiden

35:24.820 --> 35:26.020
hiden你直接清楚啊

35:26.020 --> 35:26.520
设一下吧

35:26.520 --> 35:27.520
hiden是并藏了

35:27.620 --> 35:28.420
我们这样哈

35:28.520 --> 35:29.520
我们给他offload

35:30.520 --> 35:31.220
offload

35:31.720 --> 35:32.920
比如说来一个screw

35:33.220 --> 35:34.220
啊咱先不设着x

35:34.220 --> 35:34.720
我摆着哈

35:34.720 --> 35:35.420
咱来screw

35:35.620 --> 35:37.120
是不是你往下就可以移了

35:37.120 --> 35:38.220
往左右是不是也可以

35:38.220 --> 35:39.320
这两个可能条都出来了

35:39.320 --> 35:39.920
没问题吧

35:40.220 --> 35:40.920
然而呢

35:40.920 --> 35:42.220
他是可以这么来设置的

35:42.220 --> 35:43.120
不用设置auto

35:43.320 --> 35:44.220
啊你设置auto

35:44.620 --> 35:45.120
刷新

35:45.420 --> 35:46.120
一样的吧

35:46.120 --> 35:46.620
是吧

35:47.320 --> 35:48.120
那是不是一样的

35:48.220 --> 35:49.220
看一样的吧

35:49.220 --> 35:49.820
没有问题吧

35:49.820 --> 35:50.220
好

35:50.520 --> 35:51.120
没问题哈

35:51.620 --> 35:52.520
这个我把这个

35:52.520 --> 35:52.720
对啊

35:52.720 --> 35:54.120
黑烂器跳到正常的一个比例

35:54.120 --> 35:54.820
给我一挪

35:54.820 --> 35:55.720
他就断气等来动

35:55.720 --> 35:56.420
就不好了

35:57.520 --> 35:57.920
ok

35:58.120 --> 35:59.320
那我们分开来设哈

35:59.320 --> 36:00.320
就是offload

36:00.520 --> 36:01.320
offload

36:01.820 --> 36:03.620
这个x啊offloadx

36:03.620 --> 36:04.620
然后呢screw

36:05.520 --> 36:06.420
保存刷新

36:06.420 --> 36:07.020
看看啊

36:07.420 --> 36:09.420
是不是他的横向就有滚动条了

36:09.620 --> 36:11.120
哎一设横向滚动条就说了

36:11.120 --> 36:13.120
哎成个你这纵向这咋回事啊

36:13.120 --> 36:13.920
这纵向这个

36:14.120 --> 36:15.520
哎纵向这个哈

36:15.620 --> 36:16.920
一会我再跟你说咋回事

36:17.020 --> 36:19.420
我们先给纵向设一个值行不行

36:19.620 --> 36:21.420
我们设一个比如offload y

36:21.720 --> 36:23.720
那y咱添screw是不没啥意思了

36:23.720 --> 36:25.120
那和你直接添的offload

36:25.120 --> 36:26.320
这个这个screw什么区别

36:26.320 --> 36:27.420
没啥两个螺丝是吧

36:27.620 --> 36:29.320
咱咱这个设就没意思了哈

36:29.420 --> 36:30.820
比如说纵向我设成hidden

36:31.720 --> 36:32.120
哎

36:32.320 --> 36:34.520
纵向呢滚动不了对吧

36:34.520 --> 36:36.520
横向呢可以滚动能懂我意思吧

36:36.520 --> 36:37.620
这也是可以的哈

36:37.620 --> 36:38.820
是不是这个需求挺有意思啊

36:38.820 --> 36:39.620
哈挺好玩吧

36:39.820 --> 36:40.820
纵向滚动不了哈

36:42.020 --> 36:43.520
那咱们刚才说一下哈

36:43.720 --> 36:46.620
就是如果我假设指设一个方向的话

36:46.620 --> 36:48.720
为什么那个纵向的也可以跟着滚动呢

36:48.720 --> 36:51.120
因为这个offload上有一个特殊的点

36:51.620 --> 36:55.120
只要这个x或者y设置了一个非

36:55.320 --> 36:56.120
visible的值

36:56.120 --> 36:57.520
也就是说设置了一个

36:57.820 --> 36:59.020
非默认的值

36:59.020 --> 37:00.220
就是默认值是visible

37:00.320 --> 37:00.920
王东意思吧

37:00.920 --> 37:01.920
默认值是visible

37:02.120 --> 37:03.120
就是设置成一个

37:03.220 --> 37:05.320
但凡不是visible的值啊

37:05.320 --> 37:06.520
比如说scroll啊

37:06.920 --> 37:07.420
然后呢

37:07.420 --> 37:08.220
另一个值

37:08.220 --> 37:10.820
它都会跟着发生改变

37:11.020 --> 37:11.920
改变成啥呢

37:11.920 --> 37:13.220
改变成auto啊

37:13.220 --> 37:14.020
改变成auto

37:14.020 --> 37:15.020
你看这块写了哈

37:15.020 --> 37:15.920
我看写没写啊

37:15.920 --> 37:16.520
写了是吧

37:16.520 --> 37:18.020
就除了当你这个东西

37:18.020 --> 37:18.920
设置这个东西啊

37:19.220 --> 37:20.420
除了你设置就是

37:20.620 --> 37:23.020
只要你设置非visible的这样一个属性

37:23.020 --> 37:24.420
就是除了你设置visible以外啊

37:24.420 --> 37:26.520
你设置但凡另一个什么东西都行啊

37:26.920 --> 37:29.020
而另一个属性就会被哎

37:29.020 --> 37:29.620
就会将什么

37:29.620 --> 37:31.620
就会将它的默认值变成这个auto

37:31.820 --> 37:33.920
也就是说我在这块设置一个它的话

37:34.320 --> 37:35.420
是不是这块默认的

37:35.420 --> 37:36.820
它就把那个offload

37:37.920 --> 37:40.220
offload这个干Y给变成啥了

37:40.220 --> 37:41.020
变成auto是吧

37:41.020 --> 37:42.320
原来默认值啥visible吧

37:42.420 --> 37:44.920
但你这一看人家一看你这块设的不是visible是吧

37:44.920 --> 37:46.020
但凡你设的不是visible

37:46.020 --> 37:47.520
我就把这个的visible改成什么

37:47.520 --> 37:48.120
改成auto

37:48.320 --> 37:49.520
默认的给你感受这个

37:49.520 --> 37:50.620
所以说是不是你横下的

37:50.620 --> 37:51.620
属下的都能够

37:51.620 --> 37:52.620
哎这样的一个转动了

37:52.620 --> 37:54.120
就你设置一个那个不设的话

37:54.120 --> 37:54.820
它也是一样的

37:54.820 --> 37:56.020
也就相当于这样设置了

37:56.020 --> 37:56.620
auto了

37:56.720 --> 37:57.920
能动我一次吗

37:57.920 --> 37:58.720
这个没问题

37:58.720 --> 38:00.520
把这是offload的一个应用哈

38:00.620 --> 38:01.820
这个offload的一个应用啊

38:01.820 --> 38:02.320
可能说陈哥

38:02.320 --> 38:03.820
你说这个东西是不是一出不分

38:03.820 --> 38:04.720
可以滚动条啊

38:04.720 --> 38:06.220
它有什么太大的应用吗

38:06.420 --> 38:06.920
我跟你讲

38:06.920 --> 38:07.620
我不跟你说

38:07.620 --> 38:08.720
你可能还真不知道啊

38:09.420 --> 38:10.620
我给你描述一个场景

38:11.020 --> 38:12.820
比如说咱们在使这个手机移动端的时候

38:12.820 --> 38:13.820
咱搜一个关键词

38:13.820 --> 38:14.420
这个关键词

38:14.420 --> 38:16.520
下面出现了很多这个连想图片哈

38:16.520 --> 38:17.920
比如说你搜一个谁是谁明星

38:17.920 --> 38:19.320
下面来一个这块来一个谁

38:19.320 --> 38:19.820
这块来一个谁

38:19.820 --> 38:20.520
这块来一个谁

38:20.720 --> 38:21.720
然后呢这些个明星

38:21.720 --> 38:23.520
成一个很横向滚动的一个状态

38:23.520 --> 38:24.920
随着你手指的脱动

38:25.120 --> 38:27.220
它会朝左朝右站的横向滚动

38:27.420 --> 38:28.220
我跟你讲啊

38:28.220 --> 38:30.820
这样的一个看起来非常复杂的功能

38:30.820 --> 38:33.420
就是用了一个非常简单的属性来实现的

38:33.420 --> 38:35.320
毛js都没用啊

38:35.320 --> 38:36.820
乱js都没用啊

38:36.820 --> 38:38.020
我给你看一下哈

38:38.720 --> 38:39.520
看什么呢

38:40.820 --> 38:42.020
看一个真实的例子吧

38:42.020 --> 38:42.420
哈

38:42.620 --> 38:43.620
就是我就不给你写了

38:43.620 --> 38:44.820
写起来怪复杂的哈

38:45.220 --> 38:47.220
这个因为那个东西铺垫功能比较多

38:47.220 --> 38:49.020
但是你看你一眼就明白了

38:49.420 --> 38:50.320
明白我意思吧

38:50.920 --> 38:51.720
一眼就明白了

38:51.720 --> 38:52.520
我给你找一个

38:52.820 --> 38:55.120
哥曾经开发的模块明星模块哎

38:55.120 --> 38:55.820
这行

38:56.820 --> 38:57.520
搜他吧

38:57.520 --> 38:58.520
想搜他就的话

38:58.720 --> 39:00.420
搜完之后往下搜搜搜啊

39:00.420 --> 39:01.520
给点力啊兄弟啊

39:01.520 --> 39:03.320
哎哎你看真有哈在这看好啊

39:03.320 --> 39:04.220
这是

39:04.620 --> 39:07.120
这是什么的更无厌的一个一个结构哈

39:07.120 --> 39:07.720
看这哈

39:07.720 --> 39:09.620
是不是随着我鼠标的这样的一个拖拽

39:09.620 --> 39:11.320
它是呈现一个这样的一个效果是吧

39:11.320 --> 39:12.720
一大堆这样的一个明星啊

39:12.720 --> 39:14.220
随着滚动可以去这样的滚是吧

39:14.520 --> 39:16.320
原来让你实现这样的功能

39:16.320 --> 39:17.420
你得黑多大劲

39:17.420 --> 39:19.520
哎你这个说这玩意咋实现的成果

39:19.520 --> 39:21.320
你这东西是不是还有计算鼠标拖动的

39:21.320 --> 39:22.320
这样的一个距离啊

39:22.320 --> 39:23.520
抬起的这样的距离啊

39:23.520 --> 39:25.320
然后再设置这样后面的一个

39:25.320 --> 39:27.620
哎这样的一个列表的一个轮廓的距离啊

39:27.620 --> 39:27.920
是吧

39:27.920 --> 39:28.720
你是不是这么来做

39:28.720 --> 39:29.920
就那但凡这种功能的话

39:29.920 --> 39:31.920
你是不是在考虑那种方法来做是吧

39:32.120 --> 39:33.320
其实我跟你讲

39:33.520 --> 39:34.920
异常的容易啊

39:35.620 --> 39:36.620
拿啥来写呢

39:36.620 --> 39:37.120
想到了吗

39:37.120 --> 39:38.320
同学们拿啥来写

39:38.720 --> 39:39.520
off low

39:40.020 --> 39:40.820
ax

39:41.120 --> 39:41.620
是吧

39:41.720 --> 39:42.820
auto是不是实现了

39:42.820 --> 39:44.720
或者说ax pro是不是实现了

39:44.720 --> 39:45.620
比如说那他

39:46.620 --> 39:48.320
他我看是最终的层吗

39:48.720 --> 39:49.520
他不是最终层

39:49.520 --> 39:50.620
他是最终的层吗

39:51.820 --> 39:53.020
我给你找一下最终的层哈

39:53.120 --> 39:54.220
看他是不是这么写的

39:54.420 --> 39:55.820
我给你打保票肯定是哈

39:56.120 --> 39:57.620
我们来找找我们来找找啊

39:58.420 --> 39:59.520
谁是他的容器层呢

39:59.520 --> 40:01.120
我得找到容器层

40:03.100 --> 40:04.000
这个是容器层吗

40:04.000 --> 40:04.800
这不是容器层

40:04.800 --> 40:05.400
这又不是

40:06.000 --> 40:06.700
这个是吗

40:07.100 --> 40:07.900
这个是吗

40:08.200 --> 40:09.700
我再往下是不是他是啊

40:10.000 --> 40:11.000
他是的话我们来看看哎

40:11.000 --> 40:11.900
是不是在这的后面吧

40:11.900 --> 40:12.600
看这的吧

40:12.600 --> 40:14.800
是不是overflow x auto

40:14.900 --> 40:15.800
是不是就是他

40:15.800 --> 40:18.000
他就是这作为这个图片的那个内容区吧

40:18.000 --> 40:19.100
你把他勾选掉

40:19.100 --> 40:20.500
你看你挪还能挪吗

40:20.700 --> 40:21.600
是不是挪不了了

40:21.700 --> 40:22.800
你把他勾选上

40:22.800 --> 40:24.000
是不是可以随便挪了

40:24.100 --> 40:25.600
所以说这样的一个功能实现起来

40:25.600 --> 40:26.700
你说容不容易

40:26.900 --> 40:27.700
非常容易吧

40:27.700 --> 40:28.600
学到这个属性之后

40:28.600 --> 40:29.600
是不是告诉你用途

40:29.600 --> 40:31.200
你才知道他多么的强大

40:31.200 --> 40:31.900
明白我意思吧

40:32.000 --> 40:33.700
所以overflow x overflow这个

40:33.900 --> 40:34.700
Yy

40:34.900 --> 40:35.600
不太常用

40:35.600 --> 40:36.500
因为数肘的

40:36.500 --> 40:38.400
咱们这个浏览的顺域就是从两脑下哈

40:38.700 --> 40:40.400
所以说一般都是横肘的这样

40:40.400 --> 40:42.000
是给咱们留操作空间的

40:42.000 --> 40:43.400
送肘的不太操作啊

40:43.700 --> 40:44.900
所以一般你看咱们这个位置

40:44.900 --> 40:46.700
和这个hat这个操作的空间上

40:46.700 --> 40:47.900
还是位置高一些是吧

40:48.000 --> 40:49.700
hat一般情况下我们都不太操作啊

40:50.400 --> 40:51.000
都是这样

40:51.200 --> 40:52.600
明白我意思吧同学们啊

40:52.600 --> 40:54.600
所以这样ok overflow x

40:54.600 --> 40:55.400
overflow x

40:55.800 --> 40:56.300
ok

40:56.400 --> 40:57.700
他那咱们就告一段落

40:57.900 --> 40:59.300
然后咱们再说一个东西啊

40:59.300 --> 40:59.900
说什么呢

41:01.000 --> 41:02.000
说一个东西之前呢

41:02.000 --> 41:03.900
我们先把他先弄出来是吧

41:03.900 --> 41:04.500
弄出来

41:04.800 --> 41:05.400
然后现在呢

41:05.400 --> 41:06.600
把把这个

41:06.900 --> 41:08.100
把他给干掉啊

41:08.100 --> 41:08.600
他干掉

41:08.600 --> 41:09.900
然后现在还回到这里

41:10.200 --> 41:11.100
好吧回到这里

41:11.200 --> 41:12.300
然后再说一个属性啊

41:12.300 --> 41:13.400
叫这个ruise size哈

41:13.400 --> 41:14.800
ruise size这个属性特别有意思啊

41:14.800 --> 41:15.600
他能干嘛呢

41:15.800 --> 41:18.400
他能帮咱们调解啊元素的一个大小

41:18.600 --> 41:21.500
就是让用户给用户占了一个接口哈

41:21.500 --> 41:22.700
或者说给用户占了一个功能

41:23.000 --> 41:23.700
让用户呢

41:23.700 --> 41:25.000
可以调解咱们元素大小

41:25.000 --> 41:25.700
这个ruise size

41:26.000 --> 41:27.800
比如说我们在这块

41:28.000 --> 41:30.600
在他的附集上设置一个ruise size

41:30.600 --> 41:31.500
ruise size

41:31.700 --> 41:33.200
里面呢可以写一些值哈

41:33.200 --> 41:34.400
他的默认值是non啊

41:34.400 --> 41:35.500
然后可以写bose

41:35.700 --> 41:36.700
和这个叫什么

41:36.900 --> 41:38.400
这个叫horizontal

41:38.400 --> 41:39.900
是不是给大家讲了水平的吧

41:39.900 --> 41:40.700
horizontal是吧

41:40.700 --> 41:42.700
这官方英语啊水平的horizontal

41:42.700 --> 41:44.300
这个叫vortical垂直的是吧

41:45.000 --> 41:46.800
就是水平方向可以调解大小

41:47.000 --> 41:49.600
垂直方向可以调解大小

41:49.600 --> 41:51.400
或者说两个方向都可以调解大小

41:51.500 --> 41:52.300
这个东西啊

41:52.300 --> 41:53.500
其实你是见过的

41:53.500 --> 41:55.200
你觉得很调解大小多么神秘啊

41:55.200 --> 41:56.900
就是你要让用户可以调解大小

41:56.900 --> 41:57.800
你说是啥玩意呢

41:58.100 --> 41:59.100
比如说我添一个bose

41:59.400 --> 41:59.900
添一个bose

41:59.900 --> 42:01.600
然后我在我页面里面看一下哈

42:01.600 --> 42:02.800
他什么时间这样的功能

42:03.500 --> 42:04.700
我刷新啊

42:04.700 --> 42:06.300
你看是不是咱这儿也不好使

42:06.300 --> 42:07.300
好像没时间是吧

42:07.300 --> 42:09.000
是不是就做这个东西没好使呢

42:09.000 --> 42:09.200
是吧

42:09.200 --> 42:09.700
同学们

42:10.300 --> 42:11.900
这个大家看一看说没好使的

42:12.200 --> 42:13.200
是不是真没好使是吧

42:13.400 --> 42:14.500
为啥没好使的

42:14.500 --> 42:17.000
因为这个属性有一个非常特殊的点啊

42:17.000 --> 42:18.300
这个好像在哪里没写啊

42:18.300 --> 42:19.100
我给大家说一下

42:19.600 --> 42:20.800
这个属性不能单独使

42:20.900 --> 42:22.200
如果你想要生效的话

42:22.200 --> 42:24.500
你必须得加上offload的属性

42:24.900 --> 42:26.200
offload是必须得加的

42:26.200 --> 42:27.200
无论你是加hide

42:27.200 --> 42:27.900
还加什么东西

42:27.900 --> 42:29.300
你必须得加不加不行

42:29.700 --> 42:30.700
比如说我加上scroll

42:30.800 --> 42:31.500
我刷新

42:32.600 --> 42:34.400
然后他是不是可以这样的一个哎

42:34.400 --> 42:35.600
scroll是不生效了

42:35.700 --> 42:36.900
然后你观察哈

42:37.100 --> 42:38.200
你观察哪呢

42:38.400 --> 42:39.900
你观察下面这个角这块

42:39.900 --> 42:41.400
是不是有一个这样的一个

42:41.500 --> 42:42.500
你个小符号啊

42:42.500 --> 42:44.000
这个符号你点着你拖拽

42:44.000 --> 42:45.000
他是不是可以拖拽了

42:45.000 --> 42:45.600
你看看

42:46.000 --> 42:48.300
哎这个就是bose在水平方向

42:48.300 --> 42:49.400
和垂直方向上

42:49.400 --> 42:51.000
都可以任我们去拖拽

42:51.000 --> 42:53.100
让用户去改变这个元素的大小

42:53.300 --> 42:54.100
明白我意思吧

42:54.500 --> 42:55.500
这是bose

42:55.600 --> 42:57.500
当然你可以填holesanto和这个vortical

42:57.500 --> 42:58.700
你可以回去自己试一下

42:58.700 --> 42:59.500
比如vortical

42:59.800 --> 43:00.600
vortical啊

43:00.800 --> 43:01.900
vortical就不行了

43:01.900 --> 43:02.400
vortical

43:02.600 --> 43:03.000
然后呢

43:03.000 --> 43:04.000
这个时候怎么着

43:04.200 --> 43:05.000
你是不是可以

43:05.700 --> 43:06.200
哎呦

43:06.800 --> 43:07.500
你看vortical

43:07.500 --> 43:08.700
你是不是可以往下去拖

43:08.700 --> 43:09.500
但是保水平拖

43:09.500 --> 43:10.400
你看是保水

43:10.500 --> 43:11.600
往下拖就可以了吧

43:11.800 --> 43:12.500
这是vortical

43:12.900 --> 43:14.800
所以这是这个属性的一个功能

43:14.800 --> 43:15.900
这是这个属性功能

43:16.100 --> 43:17.200
然而这个属性

43:17.200 --> 43:18.500
首先他是不可以填

43:18.500 --> 43:19.160
继承值的

43:19.160 --> 43:19.700
inherit

43:19.700 --> 43:20.100
不可以的

43:20.100 --> 43:21.100
你奔下是不是不可以

43:21.100 --> 43:22.200
这玩意咋继承啊

43:22.800 --> 43:23.300
然后呢

43:23.300 --> 43:23.900
再有一点

43:23.900 --> 43:24.700
就是这个属性

43:24.700 --> 43:25.900
其实它不太常用啊

43:25.900 --> 43:26.600
就是一般情况下

43:26.600 --> 43:27.000
当然了

43:27.000 --> 43:27.900
这个功能是有的

43:28.000 --> 43:28.700
你可以发挥一下

43:28.700 --> 43:29.500
自己的显示空间

43:29.500 --> 43:30.300
看把它用在哪

43:30.400 --> 43:31.400
但是我可以说一下呢

43:31.500 --> 43:34.000
就是一旦你把这个元素

43:35.200 --> 43:36.100
比如说bose

43:36.400 --> 43:37.000
你说哈

43:37.000 --> 43:38.900
让用户给用户提供一个这样的

43:38.900 --> 43:39.400
一个功能

43:39.400 --> 43:40.800
然后用户可以自行的

43:40.800 --> 43:42.100
去随意的改变

43:42.100 --> 43:43.700
这样的一个道目元素的大小

43:43.700 --> 43:45.000
你觉得是好事吗

43:45.500 --> 43:46.600
是不是不是好事啊

43:46.800 --> 43:47.700
因为假如说后面

43:47.700 --> 43:48.700
我还有很多元素的话

43:48.700 --> 43:49.600
是不是后面的元素

43:49.600 --> 43:50.600
随着它的改变

43:50.600 --> 43:52.600
会时刻的进行位置的变化

43:52.600 --> 43:53.800
并且重新汇制

43:54.000 --> 43:56.100
这是产生的重构和重排吧

43:56.300 --> 43:56.700
是吧

43:56.700 --> 43:58.300
这是产生的重构和重汇吧

43:58.300 --> 43:58.600
是吧

43:58.600 --> 44:00.000
或者重排和重汇吧

44:00.100 --> 44:00.600
都一样的哈

44:00.600 --> 44:01.800
重构重排一本事啊

44:02.000 --> 44:02.800
这产生这样的一个

44:02.800 --> 44:04.000
非常大的一个性能消耗

44:04.000 --> 44:05.000
你每动一下

44:05.000 --> 44:06.300
是不是都是重新再渲染

44:06.500 --> 44:07.300
所以这种东西

44:07.300 --> 44:08.300
千万千万啊

44:08.300 --> 44:09.300
一定要慎重

44:09.500 --> 44:10.400
一般情况下

44:10.400 --> 44:11.200
你也看到了

44:11.200 --> 44:12.100
正常的网站里面

44:12.100 --> 44:13.300
哪有说用户可以调整

44:13.300 --> 44:14.100
这玩意大小的

44:14.100 --> 44:15.000
很少很少是吧

44:15.100 --> 44:16.000
很少很少啊

44:16.200 --> 44:17.600
所以说基本上能控制控制

44:17.600 --> 44:18.400
就控制控制啊

44:18.600 --> 44:20.400
除非你是有特殊的需求

44:20.600 --> 44:21.700
当然你有特殊需求的话

44:21.700 --> 44:22.600
你也把这样的一个

44:22.600 --> 44:23.700
它可以控制的范围

44:23.700 --> 44:25.200
你给的调解开啊

44:25.200 --> 44:26.600
就到一定的范围就可以了

44:26.600 --> 44:28.200
然后那比如说这块花一个线

44:28.300 --> 44:29.000
这个线一下

44:29.000 --> 44:30.300
你再来排列其他结构

44:30.300 --> 44:31.900
最线以上就让它随便可以玩的

44:31.900 --> 44:32.300
是吧

44:32.300 --> 44:33.500
就让它随便可以玩的哈

44:34.100 --> 44:34.600
OK

44:34.700 --> 44:36.400
这个是这个Resize啊

44:36.400 --> 44:37.300
这个是Resize

44:37.600 --> 44:39.400
那么关于这样的一个

44:39.600 --> 44:42.100
这个i6混打模式的一个合模型啊

44:42.100 --> 44:43.400
跟这个两个小点

44:43.400 --> 44:44.200
咱们第一小节

44:44.200 --> 44:45.100
就介绍完了

44:45.400 --> 44:46.400
那咱们这一块呢

44:46.400 --> 44:47.800
就先告一段落哈

44:47.800 --> 44:48.300
这一小节

44:48.300 --> 44:49.300
咱们就先结束

44:49.300 --> 44:50.000
暂停一下

44:50.000 --> 44:51.000
然后咱下一小节呢

44:51.000 --> 44:53.200
回来接着来学那个Flex不举

44:53.200 --> 44:53.400
哈

44:53.400 --> 44:54.200
那是一个大节

44:54.200 --> 44:54.600
好吧

44:54.800 --> 44:56.000
那在讲那大节之前呢

44:56.000 --> 44:57.000
咱们先把这一节

44:57.000 --> 44:58.200
我讲过的这些知识点

44:58.200 --> 44:59.800
那乃至于我说这些

45:00.000 --> 45:01.300
习惯性的坚信用法

45:01.400 --> 45:02.600
赶紧记在笔记上

45:02.600 --> 45:03.500
好好复习复习

45:03.500 --> 45:04.500
然后咱们再开启

45:04.500 --> 45:05.700
下一小节的讲解

45:06.100 --> 45:06.700
好吧 朋友们

45:06.700 --> 45:08.100
那咱们就先到这了啊

