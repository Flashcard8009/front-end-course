WEBVTT

00:00.500 --> 00:05.500
好了 来看桌面 我是陈哥 华语最帅的男将师 你们懂的

00:05.500 --> 00:09.500
一直以来都希望给大家上一上后期技术的一个课程

00:09.500 --> 00:12.500
今天终于穿着这个机会如愿以偿了 是吧

00:12.500 --> 00:16.500
那么接下来一段时间就由我来给大家带来CNC3的讲解

00:16.500 --> 00:20.500
我一个人 也希望在这段时间里面给大家共同度过

00:20.500 --> 00:23.500
咱共同成长 但主要其实还是我带你成长 是吧

00:23.500 --> 00:26.500
这么一说完全是为了谦虚 是吧

00:27.500 --> 00:30.500
其实后期的课程 其实我有参与

00:30.500 --> 00:33.500
无论是后期面试指导还是笔指导

00:33.500 --> 00:35.500
还是咱们的人生不只有技术课 是吧

00:35.500 --> 00:38.500
但那个课算是说更新的断断续续 但我一直会更新下去的

00:38.500 --> 00:41.500
那一课确实是我的一个兴趣所在 是吧

00:41.500 --> 00:44.500
也希望把我的一些所见所闻所感传递给大家

00:44.500 --> 00:47.500
希望这点小的经验能在你身上发挥出价值

00:47.500 --> 00:49.500
给你一个台阶 是吧

00:49.500 --> 00:53.500
其实咱话说回来 人生确实不只有技术 是吧

00:53.500 --> 00:56.500
但是你得先汇一个技术 这是本人 是吧

00:56.500 --> 00:58.500
你不能本末道志

00:58.500 --> 01:01.500
所以咱们这堂课就与技术为这个视角

01:01.500 --> 01:04.500
来探究 探究这个CS3到底是一个什么东西

01:04.500 --> 01:06.500
怎么来运用 CS3这个系列课上

01:06.500 --> 01:09.500
讲我来陪大家一起来度过 走完

01:09.500 --> 01:10.500
OK 没有问题吧

01:10.500 --> 01:14.500
那咱们接下来开始就开始讲出CS3的第一节政课

01:14.500 --> 01:17.500
再讲这个政课之前 咱先看一下这个PPT

01:17.500 --> 01:19.500
你先看着这个PPT 发现这个PPT

01:19.500 --> 01:21.500
上面一些重点的一些内容 是吧

01:21.500 --> 01:24.500
然后你听我给你叙述一下咱们这堂课的一个课程

01:24.500 --> 01:25.500
咱们这个系列课的一个课程不属

01:25.500 --> 01:28.500
这个系列课是CS3的系列课

01:28.500 --> 01:30.500
这个课程是CS3顾名思义

01:30.500 --> 01:31.500
它是有很多这样的一个

01:31.500 --> 01:33.500
它就是CS2的一个升级版本

01:33.500 --> 01:35.500
CS2你都知道 很多这方面的CS3属性

01:35.500 --> 01:37.500
很多 特别特别多

01:37.500 --> 01:39.500
CS3也是在CS2的系组上增加了

01:39.500 --> 01:40.500
很多这方面的属性

01:40.500 --> 01:42.500
咱们讲的东西就是这些东西

01:42.500 --> 01:43.500
所以说比较多

01:43.500 --> 01:45.500
所以说这系列课我会拆分成很多个小姐

01:45.500 --> 01:47.500
一块一块去把它录制好

01:47.500 --> 01:49.500
然后你去看就可以了

01:49.500 --> 01:52.500
我们第一堂课是CS3的介绍部分

01:52.500 --> 01:54.500
当我提到这个介绍的时候

01:54.500 --> 01:55.500
你千万别直接关了

01:55.500 --> 01:56.500
直接开启下一节

01:56.500 --> 01:57.500
你听我说这个介绍

01:57.500 --> 01:59.500
跟你想象那个不一样

01:59.500 --> 02:00.500
是完全完全不一样的

02:00.500 --> 02:02.500
如果你诚哥讲啥你都能猜到的话

02:02.500 --> 02:03.500
那你诚哥还是你诚哥吗

02:03.500 --> 02:04.500
是吧 那肯定不是

02:04.500 --> 02:05.500
我跟你讲

02:05.500 --> 02:07.500
这堂课里面的内容指示点非常非常重要

02:07.500 --> 02:09.500
乃至于说可能在整个CS3里面

02:09.500 --> 02:11.500
我认为它都是举足轻重的

02:11.500 --> 02:13.500
甚至说有可能都是最重要的一集

02:13.500 --> 02:15.500
因为它乘上起下

02:15.500 --> 02:18.500
关键是起的这个下起的太重要了

02:18.500 --> 02:20.500
这堂课你要是不听的话

02:20.500 --> 02:22.500
没关系 它不妨碍你成为一个前段功能师

02:22.500 --> 02:23.500
但你要是不听的话

02:23.500 --> 02:25.500
它一定妨碍你成为一个优秀的前段功能师

02:25.500 --> 02:26.500
也说听完之后

02:26.500 --> 02:27.500
你会成为一个优秀的前段功能师

02:27.500 --> 02:28.500
能弄一次吗

02:28.500 --> 02:31.500
那么这一系列课我都会放慢我的语速

02:31.500 --> 02:33.500
都会把我的语速和语调

02:33.500 --> 02:34.500
调整到一个非常舒适的状态

02:34.500 --> 02:37.500
来方便你去听这样的一个课程

02:37.500 --> 02:38.500
来方便你去集中你的注意力

02:38.500 --> 02:40.500
你都知道你成个语速比较快是吧

02:40.500 --> 02:42.500
没关系 我回到施当的时候

02:42.500 --> 02:43.500
放慢放慢我的语速

02:43.500 --> 02:46.500
但正常我听到的反馈

02:46.500 --> 02:48.500
没有人说因为我语速快

02:48.500 --> 02:49.500
还是听不懂那个状态是吧

02:49.500 --> 02:51.500
成个语速掌握的还是比较不错的是吧

02:51.500 --> 02:54.500
这个身为华语最帅男讲师

02:54.500 --> 02:57.500
一个名识的基本素养是吧

02:57.500 --> 02:59.500
现在咱们今天就开始

02:59.500 --> 03:00.500
咱们CSS3的一个介绍

03:00.500 --> 03:02.500
这个CSS3介绍主要分分两个部分

03:02.500 --> 03:04.500
一个是CSS3圈里面的一些介绍

03:04.500 --> 03:05.500
这个圈里面的一些介绍

03:05.500 --> 03:07.500
也不是笼统的给它都介绍完

03:07.500 --> 03:08.500
其实就两点

03:08.500 --> 03:09.500
一个CSS3是啥

03:09.500 --> 03:11.500
CSS2的一个升级版本是吧

03:11.500 --> 03:13.500
一个是CSS3的一些演化史

03:13.500 --> 03:14.500
这个演化史里面

03:14.500 --> 03:15.500
带出来一个信息

03:15.500 --> 03:17.500
就是我要讲的这个兼容性的

03:17.500 --> 03:18.500
这个信息很重要

03:18.500 --> 03:20.500
然后第二部分要讲

03:20.500 --> 03:23.500
CSS3的一些演化出来的一些信息

03:23.500 --> 03:25.500
演化出了CSS4这个东西

03:25.500 --> 03:26.500
叫CSSNext这个东西

03:26.500 --> 03:29.500
包括咱们要讲的pre-processor

03:29.500 --> 03:31.500
和posed processor

03:31.500 --> 03:33.500
这个东西叫预处理器

03:33.500 --> 03:34.500
和这个后处理器

03:34.500 --> 03:35.500
这个东西

03:35.500 --> 03:36.500
这个才是我真正想

03:36.500 --> 03:37.500
抛出来的一个东西

03:37.500 --> 03:38.500
所以这个东西你听到这

03:38.500 --> 03:40.500
你肯定听不懂了是吧

03:40.500 --> 03:41.500
你不知道那什么东西吧

03:41.500 --> 03:43.500
所以说你赶紧虚心的给我听下去

03:44.500 --> 03:45.500
这堂课我跟你讲

03:45.500 --> 03:46.500
篇幅还不小

03:46.500 --> 03:47.500
也许你看这个课的时候

03:47.500 --> 03:48.500
看时间你会清楚

03:48.500 --> 03:49.500
但是我录到这时候

03:49.500 --> 03:50.500
我就跟你说了

03:50.500 --> 03:52.500
这堂课一定短不了是吧

03:52.500 --> 03:54.500
好了咱们就开始今天这个介绍

03:54.500 --> 03:56.500
首先你要仔细的看一下

03:56.500 --> 03:57.500
第一页的一个PVT

03:57.500 --> 03:58.500
因为这里面

03:58.500 --> 03:59.500
有一个非常重要的一个信息

03:59.500 --> 04:00.500
贯穿了咱们整个课程

04:00.500 --> 04:01.500
是吧

04:01.500 --> 04:03.500
陈哥最帅是吧

04:03.500 --> 04:05.500
然后咱们来开始

04:05.500 --> 04:06.500
第一页证实一个内容

04:06.500 --> 04:07.500
然后再说一下

04:07.500 --> 04:09.500
我这一系列课都争取

04:09.500 --> 04:11.500
用全英文的这样的一个资料

04:11.500 --> 04:12.500
去给你展示

04:12.500 --> 04:13.500
为了是什么

04:13.500 --> 04:14.500
不是为了炫技

04:14.500 --> 04:15.500
只是为了给你培养

04:15.500 --> 04:18.500
一个好的一个学习的一个环境

04:18.500 --> 04:19.500
因为你平时我知道

04:19.500 --> 04:20.500
你们德国且过

04:20.500 --> 04:21.500
能拿中文看

04:21.500 --> 04:22.500
拿中文看

04:22.500 --> 04:23.500
其实我跟你讲

04:23.500 --> 04:24.500
一些新出现的一些技术

04:24.500 --> 04:25.500
一些最新的文档

04:25.500 --> 04:26.500
全是英文的

04:26.500 --> 04:27.500
你要不培养这个能力

04:27.500 --> 04:28.500
你对它时刻的抱着恐惧的话

04:28.500 --> 04:30.500
你永远的不可能成长

04:30.500 --> 04:31.500
最快的那一个是

04:31.500 --> 04:32.500
就是你永远的

04:32.500 --> 04:33.500
不可能成长那么快

04:33.500 --> 04:35.500
你要想成为这个行业

04:35.500 --> 04:36.500
你们的领军

04:36.500 --> 04:37.500
你必须得先适应

04:37.500 --> 04:38.500
你不能适应这个环境

04:38.500 --> 04:39.500
其实英文也没什么

04:39.500 --> 04:40.500
我简单给你介绍一下

04:40.500 --> 04:41.500
这些歌讲的主要是什么

04:41.500 --> 04:42.500
看叫

04:42.500 --> 04:43.500
Brave Introduction of CSS3

04:43.500 --> 04:44.500
是吧

04:44.500 --> 04:45.500
叫Brave是简短

04:45.500 --> 04:46.500
Introduction

04:46.500 --> 04:47.500
我给你翻译一下介绍是吧

04:47.500 --> 04:48.500
CSS3的一个简短的介绍

04:48.500 --> 04:49.500
是吧

04:49.500 --> 04:50.500
就是按那个东西

04:50.500 --> 04:51.500
但是简约而不简单

04:51.500 --> 04:53.500
然后这些单词

04:53.500 --> 04:54.500
我先给你翻译一下

04:54.500 --> 04:55.500
然后再讲这个东西

04:55.500 --> 04:56.500
Upgrade Word

04:56.500 --> 04:57.500
Upgrade Word

04:57.500 --> 04:58.500
你知道什么意思吗

04:58.500 --> 04:59.500
升级的版本是吧

04:59.500 --> 05:00.500
升级的版本

05:00.500 --> 05:01.500
然后CSS

05:01.500 --> 05:02.500
Compatible

05:02.500 --> 05:03.500
Compat

05:03.500 --> 05:04.500
你知道什么意思吗

05:04.500 --> 05:05.500
Compatel在讲的时候

05:05.500 --> 05:06.500
Compatel在讲

05:06.500 --> 05:07.500
这个原生JS的时候

05:07.500 --> 05:08.500
我是不是说

05:08.500 --> 05:09.500
它是兼容性的意思

05:09.500 --> 05:10.500
那Compatible呢

05:10.500 --> 05:11.500
是不是就是兼容

05:11.500 --> 05:12.500
兼容得

05:12.500 --> 05:13.500
对吧

05:13.500 --> 05:14.500
兼容得

05:14.500 --> 05:15.500
兼容性得

05:15.500 --> 05:16.500
历史

05:16.500 --> 05:17.500
兼容性的历史

05:17.500 --> 05:18.500
这是咱们

05:18.500 --> 05:19.500
这一堂课

05:19.500 --> 05:20.500
第一部分的一个重要内容

05:20.500 --> 05:21.500
然后这边

05:21.500 --> 05:22.500
Perfects

05:22.500 --> 05:23.500
什么Perfects

05:23.500 --> 05:24.500
Perfects

05:24.500 --> 05:25.500
Perfects

05:25.500 --> 05:26.500
一会咱们要讲的

05:26.500 --> 05:27.500
Ultra Perfects

05:27.500 --> 05:29.500
Perfects是这个前追的

05:29.500 --> 05:30.500
Broser是这个浏览器的意思

05:30.500 --> 05:31.500
剩下这些东西

05:31.500 --> 05:32.500
你应该都知道吧

05:32.500 --> 05:33.500
Webkit

05:33.500 --> 05:34.500
这个是Muzzillar

05:34.500 --> 05:35.500
这个锁鞋

05:35.500 --> 05:36.500
MS,Microsoft

05:36.500 --> 05:37.500
Appro

05:37.500 --> 05:38.500
这个锁鞋

05:38.500 --> 05:39.500
好了

05:39.500 --> 05:40.500
我给大家讲述

05:40.500 --> 05:41.500
这样的一个CSS2

05:41.500 --> 05:42.500
一个简短的介绍

05:42.500 --> 05:43.500
好吧

05:43.500 --> 05:44.500
首先来说一下

05:44.500 --> 05:45.500
CSS3

05:45.500 --> 05:46.500
CSS3是什么

05:46.500 --> 05:47.500
我觉得CSS3是什么

05:47.500 --> 05:48.500
这个东西

05:48.500 --> 05:49.500
根本就不需要

05:49.500 --> 05:50.500
过多去强调

05:50.500 --> 05:51.500
你猜也能猜得出来

05:51.500 --> 05:52.500
是CSS2的一个

05:52.500 --> 05:53.500
升级的版本

05:53.500 --> 05:55.500
叫Upgrade Warson是吧

05:55.500 --> 05:56.500
升级带来了什么呢

05:56.500 --> 05:57.500
肯定带来了

05:57.500 --> 05:58.500
新的属性

05:58.500 --> 05:59.500
带来那些新的功能是吧

05:59.500 --> 06:00.500
但是我跟你讲

06:00.500 --> 06:01.500
带来这些新的属性

06:01.500 --> 06:02.500
和这功能的格式

06:02.500 --> 06:03.500
跟CSS2

06:03.500 --> 06:04.500
也没差多少

06:04.500 --> 06:05.500
基本上就那些东西

06:05.500 --> 06:06.500
语法格式

06:06.500 --> 06:07.500
都差不多

06:07.500 --> 06:08.500
我给你多介绍了

06:08.500 --> 06:09.500
称了那CSS3

06:09.500 --> 06:10.500
到底带来了

06:10.500 --> 06:11.500
什么样的一个新增的功能

06:11.500 --> 06:12.500
之前为大家

06:12.500 --> 06:13.500
演示过一个小的一个模方

06:13.500 --> 06:14.500
那是用CSS3的

06:14.500 --> 06:16.500
一部分新增的功能来实现的

06:16.500 --> 06:17.500
就是带动态效果

06:17.500 --> 06:18.500
那样的一个小模方

06:18.500 --> 06:19.500
CSS3

06:19.500 --> 06:20.500
最重要的一个突破

06:20.500 --> 06:21.500
是吧

06:21.500 --> 06:22.500
在CSS2的基础上

06:22.500 --> 06:23.500
可以实现动画了

06:23.500 --> 06:24.500
不用JS可以实现动画

06:24.500 --> 06:25.500
非常厉害

06:25.500 --> 06:26.500
CSS3也作为后期

06:26.500 --> 06:27.500
跟JS配合的

06:27.500 --> 06:28.500
一个主要的一个存在

06:28.500 --> 06:29.500
实现一些

06:29.500 --> 06:30.500
JS要实现的动画

06:30.500 --> 06:32.500
因为CSS3配合JS的

06:32.500 --> 06:33.500
一些事件

06:33.500 --> 06:34.500
来操作这个动画的话

06:34.500 --> 06:35.500
效率最高

06:35.500 --> 06:36.500
用几块也可以操作动画

06:36.500 --> 06:38.500
但是和CSS3相比

06:38.500 --> 06:39.500
就稍微显得

06:39.500 --> 06:40.500
逐渐坚重了

06:40.500 --> 06:41.500
OK

06:41.500 --> 06:42.500
所以CSS3还是作为

06:42.500 --> 06:43.500
这个动画

06:43.500 --> 06:44.500
实现一个主要存在的部分

06:44.500 --> 06:45.500
当然了

06:45.500 --> 06:46.500
它不只有这个

06:46.500 --> 06:47.500
动画的实现功能

06:47.500 --> 06:48.500
还有很多实现功能

06:48.500 --> 06:49.500
一会咱们

06:49.500 --> 06:50.500
咱们接下来的

06:50.500 --> 06:51.500
一系列课

06:51.500 --> 06:52.500
咱再慢慢的说

06:52.500 --> 06:53.500
我把这CSS3所有的功能

06:53.500 --> 06:54.500
给你显出一遍之后

06:54.500 --> 06:55.500
这一系列课

06:55.500 --> 06:56.500
基本上就过去了

06:56.500 --> 06:57.500
因为咱后期

06:57.500 --> 06:58.500
主要讲的就是

06:58.500 --> 06:59.500
它增加了什么功能

06:59.500 --> 07:00.500
有什么样的用处

07:00.500 --> 07:02.500
那么CSS3的一些介绍

07:02.500 --> 07:03.500
我就不多介绍了

07:03.500 --> 07:04.500
这个东西

07:05.500 --> 07:06.500
到底升级了啥

07:06.500 --> 07:07.500
就是咱们要讲内容

07:07.500 --> 07:08.500
那就不多说了

07:08.500 --> 07:09.500
好吧

07:09.500 --> 07:10.500
然后我说一下

07:10.500 --> 07:11.500
CSS3的一个历史

07:11.500 --> 07:13.500
它是怎么来的

07:13.500 --> 07:14.500
这个怎么来的里面

07:14.500 --> 07:15.500
就含了一个信息

07:15.500 --> 07:16.500
叫做兼容性的问题

07:16.500 --> 07:17.500
这个兼容性的问题

07:17.500 --> 07:18.500
就将揭开咱们

07:18.500 --> 07:20.500
今天主要内容那个面上

07:20.500 --> 07:21.500
非常重要

07:22.500 --> 07:23.500
兼容性这块

07:23.500 --> 07:24.500
我不夸张的说

07:24.500 --> 07:25.500
我跟你讲

07:25.500 --> 07:26.500
就是这块

07:26.500 --> 07:27.500
加不加前队这样的

07:27.500 --> 07:28.500
一个写法

07:28.500 --> 07:29.500
就有很多人

07:29.500 --> 07:30.500
甚至说90%的工程师

07:30.500 --> 07:31.500
加上90%的老师

07:31.500 --> 07:32.500
都不知道

07:32.500 --> 07:34.500
这块应该去怎么写

07:34.500 --> 07:35.500
大家也没这个注意

07:35.500 --> 07:36.500
大家觉得这个东西

07:36.500 --> 07:37.500
你看凭什么写的这么写了

07:37.500 --> 07:38.500
是吧

07:38.500 --> 07:39.500
实在是先查

07:39.500 --> 07:40.500
实际上没有几个人知道

07:40.500 --> 07:41.500
为什么去这么写

07:41.500 --> 07:42.500
为什么

07:42.500 --> 07:43.500
就在什么情况下加前队

07:43.500 --> 07:44.500
什么情况下不加前队

07:44.500 --> 07:45.500
就这个都区别

07:45.500 --> 07:46.500
就你问一个人

07:46.500 --> 07:47.500
这个属性

07:47.500 --> 07:48.500
到底加不加前队

07:48.500 --> 07:49.500
这个事

07:49.500 --> 07:50.500
没有几个人可以

07:50.500 --> 07:51.500
给你区分的清楚的

07:51.500 --> 07:52.500
我希望在这块的时候

07:52.500 --> 07:53.500
不希望给你的学习

07:53.500 --> 07:54.500
带来太多阻碍

07:54.500 --> 07:55.500
是吧

07:55.500 --> 07:56.500
所以我把它给你

07:56.500 --> 07:57.500
介绍得清楚一点

07:57.500 --> 07:59.940
我喝口水

08:01.940 --> 08:02.940
当然了

08:02.940 --> 08:03.940
喝口水

08:03.940 --> 08:04.940
不耽误一个老师的

08:04.940 --> 08:05.940
我也是人做的

08:05.940 --> 08:06.940
我也是肉做的

08:08.940 --> 08:09.940
然后咱们来说

08:09.940 --> 08:11.940
一个属性的问题

08:11.940 --> 08:12.940
咱们先说

08:12.940 --> 08:13.940
CSS3的过渡

08:13.940 --> 08:14.940
CSS3肯定是什么

08:14.940 --> 08:15.940
肯定是CSS2的

08:15.940 --> 08:16.940
一个升级版本

08:16.940 --> 08:17.940
CSS2的一个升级版本

08:17.940 --> 08:19.940
到这个CSS3

08:19.940 --> 08:20.940
那么CSS3肯定有个

08:20.940 --> 08:21.940
权威的组织

08:21.940 --> 08:22.940
提出这样的一个

08:22.940 --> 08:23.940
CSS3的一个语法标准

08:23.940 --> 08:24.940
是吧

08:24.940 --> 08:25.940
比如说一个权威组织

08:25.940 --> 08:26.940
CSS3的一个组织

08:26.940 --> 08:27.940
它提出一个

08:27.940 --> 08:28.940
权威的一个标准

08:28.940 --> 08:29.940
然后跟各大浏览器

08:29.940 --> 08:30.940
厂商去说

08:30.940 --> 08:31.940
跟他们说

08:31.940 --> 08:32.940
说这样

08:32.940 --> 08:33.940
我们现在

08:33.940 --> 08:34.940
从CSS2升级到了

08:34.940 --> 08:35.940
CSS3

08:35.940 --> 08:36.940
新增了这些个功能

08:36.940 --> 08:37.940
然后把功能的一些

08:37.940 --> 08:38.940
这样一个文档

08:38.940 --> 08:39.940
给你们发过去

08:39.940 --> 08:40.940
你们各大浏览器厂商

08:40.940 --> 08:41.940
看看给不够面子吧

08:41.940 --> 08:42.940
是吧

08:42.940 --> 08:43.940
给我面子的话

08:43.940 --> 08:44.940
赶紧升级一下是吧

08:44.940 --> 08:45.940
你们自己实现这样的功能

08:45.940 --> 08:46.940
是吧

08:46.940 --> 08:47.940
反正我把这个功能

08:47.940 --> 08:48.940
定义好了

08:48.940 --> 08:49.940
我是权威

08:49.940 --> 08:50.940
是吧

08:50.940 --> 08:51.940
我是规范是吧

08:51.940 --> 08:52.940
然后这些浏览器厂商

08:52.940 --> 08:53.940
一看说行

08:53.940 --> 08:54.940
那我们就实现吧

08:54.940 --> 08:55.940
是吧

08:55.940 --> 08:56.940
反正升级这个东西

08:56.940 --> 08:57.940
对我们未来展示

08:57.940 --> 08:58.940
这样一个页面

08:58.940 --> 08:59.940
是有好处的是吧

08:59.940 --> 09:00.940
然后大家就争先恐后的

09:00.940 --> 09:02.940
但是咱再把这个时间给他

09:02.940 --> 09:03.940
给他拉长

09:03.940 --> 09:04.940
或者说把这个时间

09:04.940 --> 09:05.940
咱们再

09:05.940 --> 09:06.940
详细的看一下

09:06.940 --> 09:08.940
这样的一个进化的历史

09:09.940 --> 09:10.940
就是肯定是

09:10.940 --> 09:11.940
从CSS2演化来的

09:11.940 --> 09:12.940
提出了一些

09:12.940 --> 09:14.940
提出了一些新的一个标准

09:14.940 --> 09:15.940
然后大家都实现这个标准

09:15.940 --> 09:16.940
肯定是这样的一个历程

09:16.940 --> 09:17.940
但是呢

09:17.940 --> 09:19.940
咱们再细一点去看

09:19.940 --> 09:20.940
在这个实现标准的时候

09:20.940 --> 09:21.940
比如说这个浏览器

09:21.940 --> 09:22.940
有很多浏览器

09:22.940 --> 09:23.940
比如说Prom

09:23.940 --> 09:24.940
很多主流浏览器Prom Safari

09:24.940 --> 09:25.940
False IE

09:25.940 --> 09:26.940
和Opro是吧

09:26.940 --> 09:27.940
那么他们针对

09:27.940 --> 09:29.940
一些属性的实现

09:29.940 --> 09:30.940
这个先后的过程

09:30.940 --> 09:31.940
肯定是不一样的

09:31.940 --> 09:32.940
比如说咱们又提一个

09:32.940 --> 09:33.940
咱之前接触过的

09:33.940 --> 09:34.940
CSS3的属性

09:34.940 --> 09:35.940
其实有一些CSS3属性

09:35.940 --> 09:36.940
支持得比较好的

09:36.940 --> 09:38.940
咱们跟CSS2的界线

09:38.940 --> 09:39.940
是比较模糊的

09:39.940 --> 09:40.940
因为这个东西没有必要了

09:40.940 --> 09:42.940
没有必要太区别

09:42.940 --> 09:43.940
什么是CSS3的

09:43.940 --> 09:44.940
什么是CSS2的

09:44.940 --> 09:45.940
只要它兼容性

09:45.940 --> 09:46.940
它没有什么太大的问题

09:46.940 --> 09:47.940
其实它就是CSS的属性

09:47.940 --> 09:48.940
是吧

09:48.940 --> 09:49.940
咱们这个东西

09:49.940 --> 09:50.940
没有必要太区别

09:50.940 --> 09:51.940
但是一旦去区别

09:51.940 --> 09:52.940
什么是CSS3

09:52.940 --> 09:53.940
什么是CSS2

09:53.940 --> 09:54.940
除非就是两种情况

09:54.940 --> 09:55.940
第一种情况就是

09:55.940 --> 09:56.940
功能太强大了

09:56.940 --> 09:57.940
就是咱们用于强调一下

09:57.940 --> 09:58.940
这是CSS3的属性

09:58.940 --> 09:59.940
是吧

09:59.940 --> 10:00.940
用于强调它的功能强大

10:00.940 --> 10:01.940
另一方面

10:01.940 --> 10:02.940
最主要的方面

10:02.940 --> 10:03.940
还是说强调这个东西

10:03.940 --> 10:04.940
是CSS3的属性

10:04.940 --> 10:05.940
CSS3的属性

10:05.940 --> 10:06.940
它太新了

10:06.940 --> 10:07.940
对吧

10:07.940 --> 10:08.940
界线性有问题

10:08.940 --> 10:09.940
咱们注意一下

10:09.940 --> 10:10.940
一般到这两点

10:10.940 --> 10:11.940
咱们之前

10:11.940 --> 10:12.940
其实我给你们介绍过

10:12.940 --> 10:13.940
一个属性叫什么

10:13.940 --> 10:14.940
叫这个Bauder Radius

10:14.940 --> 10:15.940
就是个Bauder Radius

10:15.940 --> 10:16.940
其实这个Bauder Radius

10:16.940 --> 10:18.940
它不是CSS2的属性

10:18.940 --> 10:19.940
它是CSS3的属性

10:19.940 --> 10:20.940
比如这样来写

10:20.940 --> 10:21.940
这个Bauder Radius是吧

10:21.940 --> 10:22.940
这个Bauder Radius

10:22.940 --> 10:23.940
这个Bauder Radius

10:23.940 --> 10:24.940
是一个实现圆角的意思

10:24.940 --> 10:26.940
它其实是CSS3的属性

10:26.940 --> 10:27.940
咱就拿它举个例子

10:27.940 --> 10:28.940
咱来看一看

10:28.940 --> 10:29.940
这些浏览器的一个发展历程

10:29.940 --> 10:31.940
以及它们介绍性的一个变化

10:34.940 --> 10:35.940
从这个一开始

10:35.940 --> 10:36.940
提出这个Bauder Radius的时候

10:36.940 --> 10:37.940
可能说

10:37.940 --> 10:38.940
这个CSS3

10:38.940 --> 10:39.940
这块CSS3权威组织

10:39.940 --> 10:40.940
说提出一个标准

10:40.940 --> 10:41.940
叫Bauder Radius

10:41.940 --> 10:42.940
是吧

10:42.940 --> 10:43.940
你们要实现这个功能

10:43.940 --> 10:44.940
然后呢

10:44.940 --> 10:45.940
有一些大的浏览器厂商

10:45.940 --> 10:46.940
肯定实现的比较快

10:46.940 --> 10:47.940
像这个Google

10:47.940 --> 10:48.940
像这个Sephora

10:48.940 --> 10:49.940
是吧

10:49.940 --> 10:50.940
像这个Sephora

10:50.940 --> 10:51.940
它们可能实现的比较快

10:51.940 --> 10:53.940
包括FairFox

10:53.940 --> 10:54.940
这些浏览器

10:54.940 --> 10:55.940
它还没有实现

10:55.940 --> 10:56.940
包括Openg

10:56.940 --> 10:57.940
它还没有实现

10:57.940 --> 10:59.940
只有它实现了这样的功能

10:59.940 --> 11:00.940
它后来看说

11:00.940 --> 11:02.940
只有我来实现这样的功能

11:02.940 --> 11:03.940
只有我实现了

11:03.940 --> 11:04.940
现在用户在用的时候

11:04.940 --> 11:05.940
也就在我这块能用

11:05.940 --> 11:06.940
它基本上

11:06.940 --> 11:08.940
就成为了我的一个自由属性了

11:08.940 --> 11:09.940
我必须对这个属性

11:09.940 --> 11:10.940
做一下标记

11:10.940 --> 11:11.940
我不能就

11:11.940 --> 11:13.940
直接写Bauder Radius

11:13.940 --> 11:14.940
就可以用

11:14.940 --> 11:15.940
我要做一个标记

11:15.940 --> 11:16.940
怎么标记呢

11:17.940 --> 11:19.940
Google和Sephora

11:19.940 --> 11:21.940
这系列的浏览器

11:21.940 --> 11:22.940
基本上那个内核

11:22.940 --> 11:23.940
都是Wi-Pack系列的

11:23.940 --> 11:24.940
Bluinga

11:24.940 --> 11:25.940
Wi-Pack系列的

11:25.940 --> 11:26.940
它们就拿这样的一个单词

11:26.940 --> 11:27.940
做一个标记

11:27.940 --> 11:28.940
说这个属性

11:28.940 --> 11:29.940
你要在我这儿

11:29.940 --> 11:30.940
来得以应用的话

11:30.940 --> 11:31.940
你必须得加一个前綴

11:31.940 --> 11:32.940
GunWi-Pack

11:32.940 --> 11:33.940
Wi-Pack

11:34.940 --> 11:35.940
GunWi-Pit

11:35.940 --> 11:36.940
才可以使

11:36.940 --> 11:37.940
然后就这样

11:37.940 --> 11:38.940
形成了

11:38.940 --> 11:40.940
它的一个属性的一个应用形式

11:40.940 --> 11:41.940
也就是说

11:41.940 --> 11:42.940
在那个时间下

11:42.940 --> 11:43.940
比如说在Google

11:43.940 --> 11:44.940
Sephora

11:44.940 --> 11:45.940
这系列浏览器

11:45.940 --> 11:46.940
实现了Bauder Radius

11:46.940 --> 11:47.940
这个功能的前提下

11:47.940 --> 11:48.940
你想在他们的浏览器下

11:48.940 --> 11:49.940
用这个Bauder Radius的话

11:49.940 --> 11:51.940
你直接写是不行的

11:51.940 --> 11:52.940
是不可以使别的

11:52.940 --> 11:54.940
你必须在前面加一个Wi-Pit

11:54.940 --> 11:56.940
这样的一个前綴才可以

11:56.940 --> 11:58.940
这是一个前綴的由来

11:58.940 --> 12:01.940
然后随着各大浏览器厂商

12:01.940 --> 12:04.940
逐渐的把属性给实现了

12:04.940 --> 12:06.940
然后它慢慢的

12:06.940 --> 12:07.940
变成了更多这种写法

12:07.940 --> 12:08.940
比如说它先实现了

12:08.940 --> 12:09.940
它说

12:09.940 --> 12:10.940
你看我做一个独特性的标记

12:10.940 --> 12:11.940
加Wi-Pit

12:11.940 --> 12:12.940
它也说

12:12.940 --> 12:13.940
我也实现了

12:13.940 --> 12:14.940
我就比你满一点

12:14.940 --> 12:15.940
其他人都没实现

12:15.940 --> 12:16.940
所以说

12:16.940 --> 12:17.940
我也做一个特殊性标记

12:17.940 --> 12:18.940
作为这个

12:18.940 --> 12:19.940
跟大家说

12:19.940 --> 12:20.940
这个是我Ie实现的一个功能

12:20.940 --> 12:21.940
是吧

12:21.940 --> 12:22.940
你在我Ie上用的话

12:22.940 --> 12:23.940
你必须加一个GarMis

12:23.940 --> 12:24.940
叫Maprosoft

12:24.940 --> 12:25.940
是吧

12:25.940 --> 12:26.940
然后Bauder Radius

12:26.940 --> 12:27.940
Bauder Radius

12:27.940 --> 12:28.940
然后后来

12:28.940 --> 12:29.940
依次类推

12:29.940 --> 12:30.940
欧鸿说

12:30.940 --> 12:31.940
那我也实现了

12:31.940 --> 12:32.940
我也实现了

12:32.940 --> 12:33.940
我也实现了

12:33.940 --> 12:34.940
怎么办

12:34.940 --> 12:35.940
你就讲GarO

12:35.940 --> 12:36.940
这样的一个东西

12:36.940 --> 12:37.940
然后FairFox说

12:37.940 --> 12:38.940
我也实现了

12:38.940 --> 12:39.940
FairFox 怎么着

12:39.940 --> 12:40.940
Mozileer

12:40.940 --> 12:41.940
Mozileer

12:41.940 --> 12:42.940
Mozileer

12:42.940 --> 12:43.940
这个知道吧

12:43.940 --> 12:44.940
和公司

12:44.940 --> 12:45.940
Mozileer

12:45.940 --> 12:46.940
Mozileer

12:46.940 --> 12:47.940
Bauder Radius

12:48.940 --> 12:49.940
你在他们实现

12:49.940 --> 12:50.940
就是这些浏览

12:50.940 --> 12:52.940
就是在这个Bauder Radius

12:52.940 --> 12:54.940
还没有达到完全的普及应用的时候

12:54.940 --> 12:55.940
这些个主流浏览

12:55.940 --> 12:56.940
气一下

12:56.940 --> 12:57.940
你在他们这块

12:57.940 --> 12:59.940
想调用这个Bauder Radius的话

12:59.940 --> 13:00.940
你必须得给GarMis

13:00.940 --> 13:02.940
加一个这样的一个钱税

13:02.940 --> 13:04.940
加一个这样的钱税才行

13:04.940 --> 13:05.940
这个钱税

13:05.940 --> 13:06.940
我再特殊的说一下

13:06.940 --> 13:07.940
虽然说这个显然意见

13:07.940 --> 13:08.940
但是我还是提一嘴

13:08.940 --> 13:10.940
怕你产生一些奇异

13:10.940 --> 13:11.940
就比如说

13:11.940 --> 13:12.940
我写webkit

13:12.940 --> 13:13.940
这样的一个钱税

13:13.940 --> 13:17.940
我再FairFox这个浏览器下能用吗

13:17.940 --> 13:18.940
肯定是用不了的

13:18.940 --> 13:19.940
因为FairFox说了

13:19.940 --> 13:22.940
我这只能识别这样的一个Muzir这样的一个浅队

13:22.940 --> 13:24.940
是吧 阿姨说了我只能识别MS

13:24.940 --> 13:26.940
欧彭说我只能识别这个O的是吧

13:26.940 --> 13:29.940
所以你这个写webkit就只能针对这个webkit的那盒

13:29.940 --> 13:31.940
这样浏览器去使用是吧

13:31.940 --> 13:32.940
是这样的一个情况

13:32.940 --> 13:34.940
就是这样的一个发展史

13:34.940 --> 13:36.940
然后到最后到最后呢

13:36.940 --> 13:39.940
基本上所有的主流浏览器啊

13:39.940 --> 13:41.940
就是市面上99%这样的浏览器

13:41.940 --> 13:43.940
都把border radios给实现了

13:43.940 --> 13:44.940
然后这个时候

13:44.940 --> 13:46.940
这个时候有一些流浏器

13:46.940 --> 13:49.940
像这个Google的流浏器

13:49.940 --> 13:50.940
它又升级了一个版本

13:50.940 --> 13:52.940
比如说现在是30.0版本

13:52.940 --> 13:54.940
后来升级到了31.0版本的时候

13:54.940 --> 13:55.940
他一看说

13:55.940 --> 13:57.940
我这个属性

13:57.940 --> 13:59.940
原来还只有我能实现的

13:59.940 --> 14:00.940
后来你们都能实现了

14:00.940 --> 14:02.940
这玩意也不算什么太私有的一个东西了

14:02.940 --> 14:03.940
然后后来说

14:03.940 --> 14:04.940
那这样吧 我改进一下

14:04.940 --> 14:05.940
我现在呢

14:05.940 --> 14:08.940
不但支持这种GalWiP的一个写法

14:08.940 --> 14:09.940
在我这上能实现

14:09.940 --> 14:11.940
我还支持你单纯的

14:11.940 --> 14:12.940
不加前队这个写法

14:12.940 --> 14:15.940
在我这块也能够被调用

14:15.940 --> 14:16.940
就这样

14:16.940 --> 14:18.940
然后随着时代的发展

14:18.940 --> 14:19.940
然后每个流浏器

14:19.940 --> 14:21.940
基本上都升级成了这样子

14:21.940 --> 14:23.940
比如爱意 从9到10

14:23.940 --> 14:24.940
10的时候可能忽然一开枪了

14:24.940 --> 14:25.940
说那行吧

14:25.940 --> 14:26.940
我也支持这种形式了

14:26.940 --> 14:28.940
对吧 咱都别写这个前队了 是吧

14:28.940 --> 14:29.940
他说是行

14:29.940 --> 14:30.940
那我也是这种形式吧

14:30.940 --> 14:31.940
除了前队以外

14:31.940 --> 14:32.940
我这一种也能写 是吧

14:32.940 --> 14:33.940
然后他说也是

14:33.940 --> 14:34.940
来吧

14:34.940 --> 14:36.940
就一起大家一起支持 是吧

14:36.940 --> 14:37.940
然后就发展成了

14:37.940 --> 14:38.940
今天这个样子

14:38.940 --> 14:40.940
基本上每一个流浏器

14:40.940 --> 14:42.940
都支持这种干净的写法了

14:42.940 --> 14:44.940
所以说咱们现在想写

14:44.940 --> 14:46.940
任何一个流浏器都兼容的

14:46.940 --> 14:48.940
都能实现的Border Reduce的话

14:48.940 --> 14:51.940
也就直接这么写就可以了

14:51.940 --> 14:53.940
直接这么写

14:53.940 --> 14:55.940
就可以了

14:55.940 --> 14:56.940
这比如说写一个50%

14:56.940 --> 14:57.940
因为这个Border Reduce

14:57.940 --> 14:59.940
现在确实也是一个这样的属性

14:59.940 --> 15:00.940
就是各家流浏器

15:00.940 --> 15:01.940
实现的都比较好

15:01.940 --> 15:02.940
所以说你直接写就完事了

15:02.940 --> 15:03.940
用不着写那么多

15:03.940 --> 15:05.940
但是

15:05.940 --> 15:07.940
在这个过程的发展历程中

15:07.940 --> 15:08.940
听懂发展什么样的过程吧

15:08.940 --> 15:10.940
CSS3提出标准

15:10.940 --> 15:11.940
然后CSS2的流浏器

15:11.940 --> 15:13.940
慢慢朝着CSS3去过渡

15:13.940 --> 15:14.940
但是过渡的时间节点

15:14.940 --> 15:15.940
参差不齐

15:15.940 --> 15:17.940
比如说他升级了一个新版本

15:17.940 --> 15:19.940
实现了Border Reduce

15:19.940 --> 15:20.940
他升级了一个新版本

15:20.940 --> 15:21.940
还在观望 是吧

15:21.940 --> 15:23.940
然后等到一个流浏器

15:23.940 --> 15:24.940
升级了一个版本之后

15:24.940 --> 15:25.940
等到一个流浏器

15:25.940 --> 15:26.940
都从这个

15:26.940 --> 15:28.940
能实现Border Reduce的一个版本

15:28.940 --> 15:29.940
过渡到了

15:29.940 --> 15:30.940
它能通用的

15:30.940 --> 15:32.940
接受这种写法的时候

15:32.940 --> 15:33.940
可能另一些流浏器

15:33.940 --> 15:34.940
还在支持这种

15:34.940 --> 15:35.940
GalMX这种写法

15:35.940 --> 15:36.940
还没有它这么先进

15:36.940 --> 15:37.940
是吧

15:37.940 --> 15:39.940
是存在这样的一个发展历程的

15:39.940 --> 15:40.940
所以说

15:40.940 --> 15:41.940
咱们回顾一下

15:41.940 --> 15:42.940
如果说

15:42.940 --> 15:43.940
我们升载

15:43.940 --> 15:45.940
或者说我们工作在

15:45.940 --> 15:46.940
你成格就是

15:46.940 --> 15:47.940
我就工作在

15:47.940 --> 15:48.940
从这个

15:48.940 --> 15:49.940
从这个

15:49.940 --> 15:50.940
大家都没实现标准

15:50.940 --> 15:52.940
到大家逐步都实现

15:52.940 --> 15:54.940
这样一个标准的一个过程中

15:54.940 --> 15:55.940
我工作在那个年线

15:55.940 --> 15:56.940
随到那个时候

15:56.940 --> 15:57.940
特别坑

15:57.940 --> 15:58.940
你比如说

15:58.940 --> 15:59.940
比如说这个什么

15:59.940 --> 16:01.940
比如说Border Reduce这个东西

16:01.940 --> 16:02.940
YP的流浏器

16:02.940 --> 16:03.940
举例子

16:03.940 --> 16:04.940
就拿它来说

16:04.940 --> 16:05.940
当然它不是

16:05.940 --> 16:06.940
它时间比较快

16:06.940 --> 16:07.940
比如说

16:07.940 --> 16:08.940
就拿它的举例子

16:08.940 --> 16:09.940
到那个时间接电

16:09.940 --> 16:10.940
YP的内核的

16:10.940 --> 16:12.940
支持YP的写法

16:12.940 --> 16:15.940
同时也支持Border Reduce的写法

16:15.940 --> 16:16.940
这都支持

16:16.940 --> 16:17.940
它一看说

16:17.940 --> 16:18.940
大家都实现差不多了

16:18.940 --> 16:19.940
那我支持吧

16:19.940 --> 16:20.940
是吧

16:20.940 --> 16:21.940
但是你像IE流浏器

16:21.940 --> 16:22.940
它们就后织后绝

16:22.940 --> 16:23.940
是吧

16:23.940 --> 16:24.940
它就能支持到这

16:24.940 --> 16:26.940
它就不支持这种写法

16:26.940 --> 16:27.940
所以说

16:27.940 --> 16:28.940
你想写一个

16:28.940 --> 16:29.940
让大家都成立的

16:29.940 --> 16:31.940
或者说在所有流浏器下

16:31.940 --> 16:32.940
都好使的一个Border Reduce

16:32.940 --> 16:33.940
这样一个属性的话

16:33.940 --> 16:34.940
你需要怎么写

16:34.940 --> 16:35.940
你看着

16:35.940 --> 16:36.940
就需要这么写

16:36.940 --> 16:37.940
当然这个东西

16:37.940 --> 16:38.940
你得查这个文档

16:38.940 --> 16:39.940
这个文档里面标注的很清楚

16:39.940 --> 16:40.940
当前情况下

16:40.940 --> 16:42.940
大家对属性的一个支持情况

16:42.940 --> 16:43.940
支持到了什么程度

16:43.940 --> 16:45.940
是这个流浏器里面

16:45.940 --> 16:46.940
有没有属性

16:46.940 --> 16:47.940
如果有属性的话

16:47.940 --> 16:48.940
是支持这种写法

16:48.940 --> 16:49.940
还是支持

16:49.940 --> 16:51.940
是那种写法

16:51.940 --> 16:52.940
你都得查一遍

16:52.940 --> 16:53.940
查完之后

16:53.940 --> 16:54.940
基本上那个时候写的属性

16:54.940 --> 16:55.940
就这么写

16:55.940 --> 16:56.940
让一个属性在所有流浏器下

16:56.940 --> 16:57.940
都好使

16:57.940 --> 16:58.940
怎么写

16:58.940 --> 16:59.940
你看看多恶心

16:59.940 --> 17:00.940
所以说

17:00.940 --> 17:01.940
你生了一个

17:01.940 --> 17:02.940
非常幸福的年代

17:02.940 --> 17:03.940
比如说

17:03.940 --> 17:04.940
还得这样

17:04.940 --> 17:05.940
刚好bypeat

17:05.940 --> 17:06.940
因为是这样的

17:06.940 --> 17:07.940
bypeat流浏器

17:07.940 --> 17:08.940
它不是

17:08.940 --> 17:10.940
bypeat是一系列内壳的一个总成

17:10.940 --> 17:11.940
包括什么

17:11.940 --> 17:12.940
布林克系列

17:12.940 --> 17:13.940
bypeat系列是吧

17:13.940 --> 17:14.940
你看什么都bypeat

17:14.940 --> 17:15.940
iOS流浏

17:15.940 --> 17:16.940
iOS手机bypeat

17:16.940 --> 17:17.940
安卓可能说

17:17.940 --> 17:18.940
比如说

17:18.940 --> 17:19.940
iOS系统下的

17:19.940 --> 17:20.940
一部分流浏器

17:20.940 --> 17:21.940
bypeat的

17:21.940 --> 17:22.940
安卓的系统下

17:22.940 --> 17:23.940
一部分流浏器

17:23.940 --> 17:24.940
bypeat

17:24.940 --> 17:25.940
googlebypeat

17:25.940 --> 17:26.940
safaribypeat

17:26.940 --> 17:27.940
还有一系列多bypeat

17:27.940 --> 17:28.940
但是不见得

17:28.940 --> 17:29.940
每个bypeat都那么先进

17:29.940 --> 17:30.940
因为可能说

17:30.940 --> 17:31.940
safari在升级

17:31.940 --> 17:32.940
一个版本的时候

17:32.940 --> 17:33.940
就没升级

17:33.940 --> 17:34.940
然后safari升级完之后

17:34.940 --> 17:35.940
支持这样的一个写法

17:35.940 --> 17:36.940
google没升级

17:36.940 --> 17:37.940
就只支持这样的一个写法

17:37.940 --> 17:38.940
是吧

17:38.940 --> 17:39.940
所以说你在想

17:39.940 --> 17:40.940
兼容所有的流浏器的时候

17:40.940 --> 17:41.940
那个写法

17:41.940 --> 17:42.940
你知道多恶心

17:43.940 --> 17:44.940
就得怎么写

17:44.940 --> 17:45.940
你知道吗

17:45.940 --> 17:46.940
就得

17:46.940 --> 17:47.940
比如说一开始

17:47.940 --> 17:48.940
刚好bypeat

17:48.940 --> 17:49.940
bypeat

17:49.940 --> 17:50.940
来吧

17:51.940 --> 17:52.940
然后

17:52.940 --> 17:53.940
mys

17:53.940 --> 17:54.940
bypeat

17:54.940 --> 17:55.940
就得全堵死

17:55.940 --> 17:56.940
知道吧

17:56.940 --> 17:57.940
查完了之后

17:57.940 --> 17:58.940
就看

17:58.940 --> 17:59.940
都不怎么兼容

17:59.940 --> 18:00.940
就得全堵死

18:00.940 --> 18:01.940
然后这块

18:02.940 --> 18:03.940
然后

18:07.940 --> 18:08.940
然后没完

18:08.940 --> 18:09.940
最后再加一个这样的一个写法

18:09.940 --> 18:11.940
为了接触所有的这个情况

18:11.940 --> 18:12.940
为了接触所有的这个情况

18:12.940 --> 18:13.940
来这么来写

18:13.940 --> 18:15.940
那个时候基本上写一个属性

18:15.940 --> 18:16.940
就一大串

18:16.940 --> 18:17.940
写一个属性就一大串

18:17.940 --> 18:18.940
当然了

18:18.940 --> 18:20.940
有些属性支持的情况

18:20.940 --> 18:21.940
比较好

18:21.940 --> 18:22.940
可能说火狐这块

18:22.940 --> 18:23.940
一看

18:23.940 --> 18:24.940
比如说火狐这块

18:24.940 --> 18:26.940
它这个也支持

18:26.940 --> 18:27.940
下面这种干净的写法了

18:27.940 --> 18:28.940
那你火狐这块

18:28.940 --> 18:29.940
就不如写这个

18:29.940 --> 18:30.940
可能变成这样了

18:30.940 --> 18:32.940
就是各种写法不一而同

18:32.940 --> 18:33.940
就是都不一样

18:33.940 --> 18:34.940
有的写的是最长的这样的

18:34.940 --> 18:36.940
有可能是少点这样的

18:36.940 --> 18:37.940
有可能再少点这样的

18:37.940 --> 18:38.940
总的来说

18:38.940 --> 18:39.940
基本上就没有一个

18:39.940 --> 18:40.940
特别干净的一个写法

18:40.940 --> 18:41.940
只写一个的一个情况

18:41.940 --> 18:42.940
在那个年代里

18:42.940 --> 18:44.940
就这样的一个状态

18:44.940 --> 18:46.940
直到现在

18:46.940 --> 18:48.940
有部分属性

18:48.940 --> 18:50.940
也没有达到所有的浏览器

18:50.940 --> 18:51.940
都支持

18:51.940 --> 18:52.940
所以说直到现在

18:52.940 --> 18:53.940
有部分属性

18:53.940 --> 18:54.940
还是在

18:54.940 --> 18:55.940
刚才咱们描述了一个

18:55.940 --> 18:56.940
发展的历程中

18:56.940 --> 18:58.940
发展的历程中

18:58.940 --> 18:59.940
甚至说有部分属性

18:59.940 --> 19:00.940
是这样的

19:00.940 --> 19:01.940
有部分属性

19:01.940 --> 19:03.940
只有wibe key的内核支持

19:03.940 --> 19:05.940
只有wibe key内核支持

19:05.940 --> 19:07.940
现在还是这样的一个状态

19:07.940 --> 19:08.940
比原来好很多

19:08.940 --> 19:09.940
现在基本上是

19:09.940 --> 19:10.940
你常用的一些属性

19:10.940 --> 19:11.940
你直接写就完事了

19:11.940 --> 19:12.940
不用写这个前队了

19:12.940 --> 19:13.940
但是对于一些属性的话

19:13.940 --> 19:15.940
你还得写这样的一个前队

19:15.940 --> 19:16.940
因为这样的

19:16.940 --> 19:17.940
不是说浏览器发展的迟还

19:17.940 --> 19:18.940
不是说

19:18.940 --> 19:19.940
各家这个标准统一的比较迟还

19:19.940 --> 19:20.940
因为有些属性是这样的

19:20.940 --> 19:21.940
有些属性是

19:21.940 --> 19:22.940
只有wibe key的内核

19:22.940 --> 19:23.940
它能支持

19:23.940 --> 19:24.940
你比如说

19:24.940 --> 19:25.940
就这样的一个属性

19:25.940 --> 19:26.940
叫什么呢

19:26.940 --> 19:29.940
叫text fuel color

19:29.940 --> 19:31.940
它就只有wibe key内核能办到

19:31.940 --> 19:33.940
其他内核都办不到

19:33.940 --> 19:34.940
那这个属性

19:34.940 --> 19:35.940
基本上就成了

19:35.940 --> 19:36.940
wibe key内核的一个私有属性

19:36.940 --> 19:37.940
直到现在也是

19:37.940 --> 19:38.940
其他内核就是办不到

19:38.940 --> 19:39.940
这个事

19:39.940 --> 19:40.940
那这样的一个东西

19:40.940 --> 19:42.940
它这个前队的肯定去不掉

19:42.940 --> 19:43.940
因为大家没有统一

19:43.940 --> 19:44.940
实现这样的一个标准

19:44.940 --> 19:45.940
是吧

19:45.940 --> 19:46.940
它必须得加一个标注

19:46.940 --> 19:47.940
告诉大家这是我的私有属性

19:47.940 --> 19:48.940
这个东西

19:48.940 --> 19:49.940
只有在wibe key内核下

19:49.940 --> 19:50.940
能实现是吧

19:50.940 --> 19:51.940
只能这样

19:51.940 --> 19:52.940
所以说

19:52.940 --> 19:53.940
这个东西还是被保留下来是吧

19:53.940 --> 19:54.940
然后有一些

19:54.940 --> 19:55.940
有一些情况

19:55.940 --> 19:56.940
是safari支持了

19:56.940 --> 19:58.940
然后safari

19:58.940 --> 19:59.940
这个啊

19:59.940 --> 20:00.940
比如说有些情况

20:00.940 --> 20:01.940
是这个google啊

20:01.940 --> 20:02.940
支持了

20:02.940 --> 20:03.940
这样的一个

20:03.940 --> 20:04.940
不加这个前队的写法

20:04.940 --> 20:05.940
就比如说

20:05.940 --> 20:06.940
再拿border

20:06.940 --> 20:07.940
举个例子

20:07.940 --> 20:08.940
因为这个属性吧

20:08.940 --> 20:09.940
这个很多啊

20:09.940 --> 20:10.940
这个特殊的属性

20:10.940 --> 20:11.940
这个比较那什么

20:11.940 --> 20:12.940
比较难找

20:12.940 --> 20:13.940
我就拿它举个例子

20:13.940 --> 20:14.940
比如说

20:14.940 --> 20:15.940
google啊

20:15.940 --> 20:16.940
支持它了

20:16.940 --> 20:17.940
然后safari呢

20:17.940 --> 20:18.940
没支持它

20:18.940 --> 20:19.940
safari还支持这样的一个写法

20:19.940 --> 20:21.940
那你就只能这么来写

20:21.940 --> 20:23.940
那其他浏览器都支持了

20:23.940 --> 20:24.940
其他东西都支持这个是吧

20:24.940 --> 20:25.940
就只能这么来写

20:25.940 --> 20:26.940
各种写法都有是吧

20:26.940 --> 20:27.940
那具体这个东西

20:27.940 --> 20:28.940
怎么来写呢

20:28.940 --> 20:29.940
怎么来辩认呢

20:29.940 --> 20:30.940
我领大家来看一看啊

20:30.940 --> 20:32.940
有这么几个网站

20:32.940 --> 20:33.940
我现在刚才这个过程

20:33.940 --> 20:34.940
是不是大家都听懂了

20:34.940 --> 20:35.940
这个发展历史是吧

20:35.940 --> 20:36.940
它为什么可以去

20:36.940 --> 20:37.940
不加这个前队

20:37.940 --> 20:38.940
它为什么有的情况

20:38.940 --> 20:39.940
必须加这个前队是吧

20:39.940 --> 20:40.940
都听得差不多了吧

20:40.940 --> 20:42.940
然后我领大家看一个网站

20:42.940 --> 20:43.940
大家来看一看

20:43.940 --> 20:44.940
这是一个官方的一个文档

20:44.940 --> 20:45.940
通过这个文档

20:45.940 --> 20:47.940
咱们可以去看一下

20:47.940 --> 20:49.940
这个东西怎么来去看

20:49.940 --> 20:50.940
参照这个文档

20:50.940 --> 20:51.940
怎么来写啊

20:51.940 --> 20:52.940
读一下你基本上就懂了

20:52.940 --> 20:54.940
里面有两个这样的文档

20:54.940 --> 20:55.940
一个wraffence menu

20:55.940 --> 20:56.940
这样的website

20:56.940 --> 20:58.940
是这个一个css

20:58.940 --> 21:00.940
一个手册叫wraffence menu

21:00.940 --> 21:01.940
是这个css手册

21:01.940 --> 21:02.940
这个手册里面标志很清楚

21:02.940 --> 21:03.940
哪些属性

21:03.940 --> 21:05.940
有什么样的一个兼容性

21:05.940 --> 21:06.940
这个里面写得很清楚

21:06.940 --> 21:07.940
其实支持乱乱七

21:07.940 --> 21:08.940
还不只是那些乱乱七

21:08.940 --> 21:09.940
咱看一下这个东西

21:09.940 --> 21:10.940
然后一会咱们再看一下

21:10.940 --> 21:12.940
这个下面这个东西

21:12.940 --> 21:13.940
下面这个就是

21:13.940 --> 21:14.940
比较权威的一个

21:14.940 --> 21:15.940
所所的一个网站

21:15.940 --> 21:16.940
叫这个connect use

21:16.940 --> 21:18.940
这样的一个网站

21:19.940 --> 21:21.940
来咱打开这个东西

21:21.940 --> 21:22.940
ok

21:23.940 --> 21:27.400
这个英文单词

21:27.400 --> 21:29.400
是不是大家不太懂啊

21:29.400 --> 21:30.400
这个英文单词

21:30.400 --> 21:31.400
这个英文单词

21:31.400 --> 21:32.400
是权威的

21:33.400 --> 21:37.400
叫assortive inquiry website

21:37.400 --> 21:39.400
权威的查找网站

21:39.400 --> 21:40.400
权威的查找网站

21:40.400 --> 21:41.400
咱先看这个

21:41.400 --> 21:42.400
先看这个参考手册

21:42.400 --> 21:43.400
这个东西

21:43.400 --> 21:44.400
我先把英文给你翻一下

21:44.400 --> 21:45.400
我怕你不懂

21:45.400 --> 21:47.400
权威的这个参考手册

21:47.400 --> 21:49.400
这个是参考手册

21:49.400 --> 21:51.400
这个是参考手册

21:51.400 --> 21:52.400
这个是参考的意思

21:52.400 --> 21:53.400
这是手册

21:53.400 --> 21:55.400
这是权威的

21:55.400 --> 21:56.400
这个是权威的

21:56.400 --> 21:57.400
这个是查找

21:57.400 --> 21:58.400
这个是网站

21:58.400 --> 21:59.400
咱们先看这个

21:59.400 --> 22:00.400
咱们先看这个

22:00.400 --> 22:02.400
这个参考手册

22:02.400 --> 22:03.400
我先给你打开

22:03.400 --> 22:06.100
ok

22:06.100 --> 22:07.100
咱们打开

22:07.100 --> 22:08.100
我们来看一下

22:08.100 --> 22:09.100
这样的一个属性

22:10.100 --> 22:11.100
比如说

22:11.100 --> 22:12.100
就拿它来看一下

22:12.100 --> 22:13.100
手册里面

22:13.100 --> 22:14.100
下面有一个

22:14.100 --> 22:15.100
你看这儿

22:15.100 --> 22:16.100
有一个only web page

22:16.100 --> 22:17.100
only web page

22:17.100 --> 22:18.100
就是这些东西

22:18.100 --> 22:19.100
只在 web page 上的实现

22:19.100 --> 22:20.100
那显然它写起来

22:20.100 --> 22:22.100
你必须得加这个 web page 前队了

22:22.100 --> 22:24.100
你看这个属性在标注的时候

22:24.100 --> 22:25.100
你看其他这个属性

22:25.100 --> 22:26.100
我给大家介绍一下

22:26.100 --> 22:28.100
这个黄色的代表

22:28.100 --> 22:29.100
橙色的代表

22:29.100 --> 22:30.100
CS3的新增属性

22:30.100 --> 22:31.100
也就是说

22:31.100 --> 22:32.100
这些属性一般情况下

22:32.100 --> 22:33.100
存在一些兼容性的问题

22:33.100 --> 22:35.100
下面都会你标注很清楚

22:35.100 --> 22:36.100
你看这些属性

22:36.100 --> 22:37.100
基本上没有加前队

22:37.100 --> 22:39.100
去列在这个列表里面吧

22:39.100 --> 22:40.100
你看只有这儿

22:40.100 --> 22:41.100
直接加了一个前队列在列表里面

22:41.100 --> 22:42.100
今天意思就告诉你

22:42.100 --> 22:43.100
所以你也别考虑了

22:43.100 --> 22:44.100
你想用它

22:44.100 --> 22:45.100
必须加前队

22:45.100 --> 22:47.100
所以把前队直接给你写这儿了

22:47.100 --> 22:48.100
然后有omai的

22:48.100 --> 22:49.100
omai的这个东西

22:51.100 --> 22:52.100
像CS3的属性

22:52.100 --> 22:53.100
写内写内

22:53.100 --> 22:54.100
我给你看一看

22:54.100 --> 22:55.100
比如说这个transition

22:55.100 --> 22:56.100
transition

22:56.100 --> 22:57.100
打开

22:57.100 --> 22:58.100
然后你看下面这个

22:58.100 --> 22:59.100
有一些简单的讲解

22:59.100 --> 23:00.100
但这个东西我给你讲

23:00.100 --> 23:01.100
你不用猜看这个东西

23:01.100 --> 23:02.100
然后看这儿

23:02.100 --> 23:04.100
这块有一个

23:04.100 --> 23:05.100
它的一个支持情况

23:05.100 --> 23:07.100
就基本的一个支持情况

23:07.100 --> 23:08.100
这个IE

23:08.100 --> 23:09.100
你看这块红色的

23:09.100 --> 23:11.100
这个身粉色的

23:11.100 --> 23:12.100
代表不支持

23:12.100 --> 23:13.100
就前粉色代表支持

23:13.100 --> 23:14.100
能看清吗

23:14.100 --> 23:15.100
然后这个绿色代表支持

23:15.100 --> 23:16.100
但这个支持

23:16.100 --> 23:17.100
还分两种支持

23:17.100 --> 23:19.100
一个是加上前队的支持

23:19.100 --> 23:21.100
就是你正常写的一个支持

23:21.100 --> 23:22.100
然后这个图

23:22.100 --> 23:23.100
我带大家去看一下

23:23.100 --> 23:24.100
你看完之后

23:24.100 --> 23:25.100
你就知道怎么去

23:25.100 --> 23:27.100
识别这个东西了

23:27.100 --> 23:29.100
IE这个6到9的版本不支持

23:29.100 --> 23:30.100
10加

23:30.100 --> 23:31.100
包括IEA是支持的

23:31.100 --> 23:32.100
而且是那种

23:32.100 --> 23:33.100
无条件的支持

23:33.100 --> 23:35.100
不需要加GunMS的支持

23:35.100 --> 23:36.100
比如说在IE上

23:36.100 --> 23:37.100
你想写这个东西的话

23:37.100 --> 23:38.100
你直接是不是写

23:38.100 --> 23:39.100
transition就可以了

23:39.100 --> 23:40.100
是吧

23:40.100 --> 23:42.100
4.0到15.0

23:42.100 --> 23:43.100
这样的一个版本里面

23:43.100 --> 23:44.100
是支持的

23:44.100 --> 23:45.100
但是你必须得加前队

23:45.100 --> 23:47.100
不加前队是不行的

23:47.100 --> 23:48.100
是吧

23:48.100 --> 23:50.100
4.0以上的一个版本里面

23:50.100 --> 23:51.100
它是完全支持的

23:51.100 --> 23:52.100
你可以不加这个前队

23:52.100 --> 23:53.100
明白有意思吧

23:53.100 --> 23:54.100
Chrome同理

23:54.100 --> 23:55.100
4.0到25

23:55.100 --> 23:57.100
是这个BIBKIT的支持

23:57.100 --> 23:58.100
就是

23:58.100 --> 23:59.100
就怎么说呢

23:59.100 --> 24:00.100
就是你加前队的支持是吧

24:00.100 --> 24:01.100
这属于这个

24:01.100 --> 24:02.100
这个还没那么充分的支持

24:02.100 --> 24:03.100
到这个26以后

24:03.100 --> 24:04.100
他一看

24:04.100 --> 24:05.100
这个东西大家都支持了

24:05.100 --> 24:06.100
是吧

24:06.100 --> 24:07.100
那我就不用加前队

24:07.100 --> 24:08.100
我也支持了

24:08.100 --> 24:09.100
当然这个情况是这样的

24:09.100 --> 24:10.100
就是

24:10.100 --> 24:11.100
到这个版本的时候

24:11.100 --> 24:13.100
就是你不加前队好使

24:13.100 --> 24:14.100
但是你加了前队

24:14.100 --> 24:15.100
依然好使

24:15.100 --> 24:16.100
能懂我意思吗

24:16.100 --> 24:17.100
就是这样的一个规律

24:17.100 --> 24:18.100
我给大家说好

24:18.100 --> 24:19.100
比如说一个属性

24:19.100 --> 24:21.100
一个属性

24:21.100 --> 24:22.100
他呢

24:22.100 --> 24:23.100
一个属性

24:23.100 --> 24:25.100
他本身好使

24:25.100 --> 24:26.100
那你加了

24:26.100 --> 24:28.100
特定浏览器的这个前队

24:28.100 --> 24:30.100
是一定就好使的

24:30.100 --> 24:31.100
能懂我意思吗

24:31.100 --> 24:32.100
但是呢

24:32.100 --> 24:33.100
反过来说

24:33.100 --> 24:35.100
你这个属性加了前队好使

24:35.100 --> 24:36.100
但是他去了前队

24:36.100 --> 24:37.100
在这里面

24:37.100 --> 24:38.100
就不一定好使

24:38.100 --> 24:39.100
这给你的浏览器的版本

24:39.100 --> 24:40.100
有很大的关系

24:40.100 --> 24:41.100
OK

24:41.100 --> 24:42.100
能懂我意思吗

24:42.100 --> 24:43.100
然后Chrome

24:43.100 --> 24:44.100
safari这个是吧

24:44.100 --> 24:45.100
这个支持

24:45.100 --> 24:46.100
分为两种支持

24:46.100 --> 24:47.100
能懂我意思吧

24:47.100 --> 24:48.100
这个东西

24:48.100 --> 24:49.100
然后到时候你对应的

24:49.100 --> 24:50.100
写就完事

24:50.100 --> 24:51.100
你看看你编程

24:51.100 --> 24:52.100
到底设计到哪些个浏览器

24:52.100 --> 24:53.100
比如说你只设计到

24:53.100 --> 24:54.100
你看这个东西

24:54.100 --> 24:55.100
你只设计到

24:55.100 --> 24:56.100
i10.0

24:56.100 --> 24:57.100
这个火乎

24:57.100 --> 24:58.100
是10.0加

24:58.100 --> 24:59.100
是吧

24:59.100 --> 25:00.100
然后Google的这个

25:00.100 --> 25:01.100
然后的这个是吧

25:01.100 --> 25:02.100
再加上这个

25:02.100 --> 25:03.100
那你就直接写

25:03.100 --> 25:04.100
比如说你有一些

25:04.100 --> 25:05.100
低版本浏览器

25:05.100 --> 25:06.100
需要兼容的话

25:06.100 --> 25:07.100
需要兼容这个safari的话

25:07.100 --> 25:08.100
那你就写一个

25:08.100 --> 25:09.100
这个写个bipad 是吧

25:09.100 --> 25:10.100
那你就写一个

25:10.100 --> 25:12.100
比如说穿

25:12.100 --> 25:13.100
是transition

25:13.100 --> 25:14.100
这个

25:14.100 --> 25:15.100
是transition

25:15.100 --> 25:16.100
transition

25:16.100 --> 25:17.100
然后呢你再写一个

25:17.100 --> 25:18.100
google web pit

25:18.100 --> 25:20.100
google web pit

25:20.100 --> 25:21.100
transition

25:21.100 --> 25:23.660
甚至没有问题

25:23.660 --> 25:24.660
就是这样去写

25:24.660 --> 25:25.660
就这样去写

25:25.660 --> 25:26.660
然后呢

25:26.660 --> 25:27.660
咱们还有一个

25:27.660 --> 25:28.660
权威力的网站

25:28.660 --> 25:29.660
说什么你说

25:29.660 --> 25:30.660
这个参考手册

25:30.660 --> 25:31.660
有没有一些智候性

25:31.660 --> 25:32.660
比如说他

25:32.660 --> 25:33.660
他会不会发生

25:33.660 --> 25:34.660
那种不实实的情况

25:34.660 --> 25:35.660
比如说这块

25:35.660 --> 25:36.660
明明支持吧

25:36.660 --> 25:37.660
他那么来写了

25:37.660 --> 25:38.660
是吧

25:38.660 --> 25:39.660
他们是更新不及时

25:39.660 --> 25:40.660
是吧

25:40.660 --> 25:41.660
你要这么说的话

25:41.660 --> 25:42.660
确实有点这方面风险

25:42.660 --> 25:43.660
因为每一个

25:43.660 --> 25:44.660
这样的一个网站

25:44.660 --> 25:45.660
都是一个机构

25:45.660 --> 25:46.660
是吧

25:46.660 --> 25:47.660
他万一就偷懒了

25:47.660 --> 25:48.660
是吧

25:48.660 --> 25:49.660
这个有可能的时候

25:49.660 --> 25:50.660
咱们就不及时

25:50.660 --> 25:51.660
是吧

25:51.660 --> 25:52.660
但是呢

25:52.660 --> 25:53.660
为了要提供一个

25:53.660 --> 25:54.660
非常权威的一个

25:54.660 --> 25:55.660
这样的一个网址

25:55.660 --> 25:56.660
在提供之前

25:56.660 --> 25:57.660
其实我想让你看一下

25:57.660 --> 25:58.660
第一页

25:58.660 --> 25:59.660
第一页

25:59.660 --> 26:00.660
你在看

26:00.660 --> 26:01.660
看这个简介的时候

26:01.660 --> 26:02.660
你会发现

26:02.660 --> 26:03.660
咱是不是下过一个

26:03.660 --> 26:04.660
css.chm

26:04.660 --> 26:05.660
是吧

26:05.660 --> 26:06.660
chm

26:06.660 --> 26:07.660
就是

26:07.660 --> 26:08.660
这个

26:08.660 --> 26:09.660
其实你说

26:09.660 --> 26:10.660
你说他权不权威

26:10.660 --> 26:11.660
当然他人确实给你写了

26:11.660 --> 26:12.660
我更新时间

26:12.660 --> 26:13.660
刚才18年4月10号是吧

26:13.660 --> 26:14.660
那这个

26:14.660 --> 26:15.660
还算有点这样延迟性吧

26:15.660 --> 26:16.660
但是有一个

26:16.660 --> 26:17.660
特别权威的网站

26:17.660 --> 26:18.660
他是绝对

26:18.660 --> 26:19.660
你要说

26:19.660 --> 26:20.660
他都不太实实的话

26:20.660 --> 26:21.660
那也没什么太多

26:21.660 --> 26:22.660
实实的东西了

26:22.660 --> 26:23.660
这个权威的网站

26:23.660 --> 26:24.660
啊

26:24.660 --> 26:25.660
这个

26:25.660 --> 26:26.660
css.chm

26:26.660 --> 26:27.660
css.chm

26:27.660 --> 26:28.660
incredible web site

26:28.660 --> 26:29.660
是什么呢

26:29.660 --> 26:30.660
是这个

26:30.660 --> 26:31.660
can i use 这样一个网站

26:31.660 --> 26:32.660
这个网站在意内

26:32.660 --> 26:33.660
那是相当的出名了

26:33.660 --> 26:34.660
是吧

26:34.660 --> 26:35.660
就是针对咱们

26:35.660 --> 26:36.660
那个css

26:36.660 --> 26:37.660
这样的一个存在的

26:37.660 --> 26:38.660
can i use

26:38.660 --> 26:39.660
比如说

26:39.660 --> 26:40.660
打开这样的网址

26:40.660 --> 26:41.660
是吧

26:41.660 --> 26:42.660
can i use

26:42.660 --> 26:43.660
比如说写一个

26:43.660 --> 26:44.660
刚才写那个transition

26:44.660 --> 26:45.660
是吧

26:45.660 --> 26:46.660
transition

26:46.660 --> 26:47.660
你在这边直接写

26:47.660 --> 26:48.660
transition

26:48.660 --> 26:49.660
transition

26:49.660 --> 26:50.660
然后呢

26:50.660 --> 26:51.660
transition

26:51.660 --> 26:52.660
归车

26:52.660 --> 26:53.660
transition

26:53.660 --> 26:54.660
啊 这呢

26:54.660 --> 26:55.660
transition

26:55.660 --> 26:56.660
他

26:56.660 --> 26:57.660
你可以往下找

26:57.660 --> 26:58.660
他可以往下找

26:58.660 --> 26:59.660
他就不一定

26:59.660 --> 27:00.660
第一个就是

27:00.660 --> 27:01.660
往下找

27:01.660 --> 27:02.660
transition

27:02.660 --> 27:03.660
是吧

27:03.660 --> 27:04.660
然后这块还有transition

27:04.660 --> 27:05.660
每一个里面

27:05.660 --> 27:06.660
他会定规定好了

27:06.660 --> 27:07.660
你看啊

27:07.660 --> 27:08.660
iE

27:08.660 --> 27:09.660
他从哪到哪

27:09.660 --> 27:10.660
这是不支持是吧

27:10.660 --> 27:11.660
这是不支持

27:11.660 --> 27:12.660
我就没了是吧

27:12.660 --> 27:13.660
然后你看啊

27:13.660 --> 27:14.660
这块有个

27:14.660 --> 27:15.660
it's party

27:15.660 --> 27:16.660
是吧

27:16.660 --> 27:17.660
他不支持iE 6到9是吧

27:17.660 --> 27:18.660
刚刚跟刚才的那个说法一致的

27:18.660 --> 27:20.660
然后10和11是没问题的是吧

27:20.660 --> 27:21.660
然后iE 8

27:21.660 --> 27:22.660
12到17

27:22.660 --> 27:23.660
然后这18是没问题

27:23.660 --> 27:24.660
firefox

27:24.660 --> 27:25.660
2到3.6不支持

27:25.660 --> 27:26.660
然后

27:26.660 --> 27:27.660
4

27:27.660 --> 27:28.660
你看有一个这样一个颜色

27:28.660 --> 27:29.660
有个这样一个颜色

27:29.660 --> 27:30.660
嗯

27:30.660 --> 27:31.660
这样一个颜色呢

27:31.660 --> 27:32.660
看啥

27:32.660 --> 27:33.660
嗯

27:33.660 --> 27:34.660
往这吧

27:34.660 --> 27:35.660
这个是半支持

27:35.660 --> 27:36.660
这个你就

27:36.660 --> 27:37.660
这个这个颜色

27:37.660 --> 27:38.660
你不用太考虑

27:38.660 --> 27:39.660
那是一些特殊的篮契

27:39.660 --> 27:40.660
不跟你多讲

27:40.660 --> 27:41.660
你看下面这块就完全支持吧

27:41.660 --> 27:42.660
哎

27:42.660 --> 27:43.660
这块这个5到15

27:43.660 --> 27:44.660
这个支持的话

27:44.660 --> 27:45.660
为什么画一个小杠呢

27:45.660 --> 27:46.660
这个小杠就代表

27:46.660 --> 27:47.660
他要加杠 潜坠

27:47.660 --> 27:48.660
就这里面支持

27:48.660 --> 27:51.660
但是必须你看supported with

27:51.660 --> 27:52.660
prefix

27:52.660 --> 27:53.660
prefix什么意思啊

27:53.660 --> 27:54.660
prefix就是潜坠的意思啊

27:54.660 --> 27:55.660
就是支持

27:55.660 --> 27:56.660
但是你必须得加这样一个潜坠

27:56.660 --> 27:57.660
ok

27:57.660 --> 27:58.660
然后再看这哈

27:58.660 --> 27:59.660
是不是这个啊

27:59.660 --> 28:00.660
可能我们是不是

28:00.660 --> 28:01.660
4到25万万也支持

28:01.660 --> 28:02.660
但必须加在p 是吧

28:02.660 --> 28:03.660
一系列的这样的东西

28:03.660 --> 28:04.660
你会看就完事了

28:04.660 --> 28:05.660
你会看就完事了

28:05.660 --> 28:06.660
哎

28:06.660 --> 28:07.660
这个东西

28:07.660 --> 28:08.660
你如果不放心的话

28:08.660 --> 28:09.660
你就到这里面去找啊

28:09.660 --> 28:10.660
就是咱们后期

28:10.660 --> 28:11.660
有一个这样的一个

28:11.660 --> 28:13.660
给咱们补充好的一个

28:13.660 --> 28:15.660
叫什么呢

28:15.660 --> 28:16.660
叫这样的一个插件

28:16.660 --> 28:17.660
就是给咱们

28:19.660 --> 28:21.660
叫这个后处理器

28:21.660 --> 28:22.660
后处理器里面有插件

28:22.660 --> 28:25.660
叫这个outfixer

28:25.660 --> 28:27.660
outprefixer

28:27.660 --> 28:28.660
哎

28:28.660 --> 28:29.660
里面

28:29.660 --> 28:31.660
它给咱们补充好的这样的

28:31.660 --> 28:32.660
一个添充器

28:32.660 --> 28:34.660
就是我这么简单跟你说一下

28:34.660 --> 28:36.660
这个outprefixer

28:36.660 --> 28:37.660
它能干嘛呢

28:37.660 --> 28:38.660
它能让咱们编程的时候

28:38.660 --> 28:39.660
非常省心

28:39.660 --> 28:40.660
比如说现在这个CSSI

28:40.660 --> 28:41.660
是不介绍性层次不起的

28:41.660 --> 28:42.660
你现在有考虑

28:42.660 --> 28:43.660
要不要加这个bypeat 是吧

28:43.660 --> 28:44.660
你不用管的事了

28:44.660 --> 28:45.660
有它之后

28:45.660 --> 28:46.660
你直接写这样的完事了

28:46.660 --> 28:47.660
如果你需要加bypeat的话

28:47.660 --> 28:49.660
这个插件会帮你加的

28:49.660 --> 28:50.660
它基于什么加的

28:50.660 --> 28:52.660
它就基于这个canite use

28:52.660 --> 28:53.660
去加的

28:53.660 --> 28:54.660
它会以canite use

28:54.660 --> 28:55.660
作为这个

28:55.660 --> 28:56.660
作为这样的一个

28:56.660 --> 28:58.660
就是这样的一个

28:58.660 --> 28:59.660
信息的一个基础

28:59.660 --> 29:00.660
权为这个基础

29:00.660 --> 29:01.660
然后在人家说

29:01.660 --> 29:02.660
这里面canite use说

29:02.660 --> 29:03.660
这个版本的轮廉器

29:03.660 --> 29:04.660
你要加

29:04.660 --> 29:05.660
那你它对应

29:05.660 --> 29:07.660
在执行的时候

29:07.660 --> 29:08.660
要看你这个轮廉器

29:08.660 --> 29:09.660
是不是轮廉器

29:09.660 --> 29:10.660
如果是的话

29:10.660 --> 29:11.660
它就帮你加上

29:11.660 --> 29:12.660
就是这样的一个

29:12.660 --> 29:14.660
auto pre-fixer

29:14.660 --> 29:15.660
这样的东西

29:15.660 --> 29:16.660
OK 是不是没有问题了

29:16.660 --> 29:17.660
所以这一块

29:17.660 --> 29:18.660
给大家讲解的是

29:18.660 --> 29:19.660
够透彻了 是吧

29:19.660 --> 29:20.660
够透彻了

29:20.660 --> 29:21.660
所以说这个兼容性

29:21.660 --> 29:22.660
这个东西

29:22.660 --> 29:23.660
兼容性这一块

29:23.660 --> 29:25.660
到底应不应该写bypeat

29:25.660 --> 29:26.660
应该写这个东西

29:26.660 --> 29:27.660
到底是什么样的游来

29:27.660 --> 29:28.660
是给大家讲的很清楚了

29:28.660 --> 29:29.660
所以这一块

29:29.660 --> 29:30.660
没有问题了吧 同学们

29:30.660 --> 29:31.660
这块没有问题了

29:31.660 --> 29:32.660
咱们也引出

29:32.660 --> 29:33.660
下一个知识点

29:33.660 --> 29:34.660
下一个知识点

29:34.660 --> 29:36.660
才是我最最想讲的一个东西

29:36.660 --> 29:37.660
对大家现在来说

29:37.660 --> 29:38.660
稍稍有点超纲

29:38.660 --> 29:39.660
但没关系

29:39.660 --> 29:40.660
你一旦听懂了

29:40.660 --> 29:41.660
对咱后期学习

29:41.660 --> 29:42.660
哪怕是学习bypeat那一块

29:42.660 --> 29:44.660
都有一个非常大的帮助

29:44.660 --> 29:46.660
你就是现在就记住它

29:46.660 --> 29:47.660
对你来说

29:47.660 --> 29:48.660
都是一个职业素养的提升

29:48.660 --> 29:50.660
OK 既然说

29:50.660 --> 29:51.660
刚才已经说到

29:51.660 --> 29:53.660
这个auto pre-fixer

29:53.660 --> 29:55.660
我就拿它来说这样的一个事

29:55.660 --> 29:56.660
其实

29:56.660 --> 29:57.660
现在比如说

29:57.660 --> 29:58.660
你说诚哥

29:58.660 --> 29:59.660
现在这个编程的时候

29:59.660 --> 30:00.660
是我要不要考虑那么多

30:00.660 --> 30:01.660
在这个网站里面查一查去的

30:01.660 --> 30:02.660
才知道这个属性怎么来写

30:02.660 --> 30:03.660
是吧

30:03.660 --> 30:04.660
你说333属性这么老足

30:04.660 --> 30:05.660
我这个有的时候

30:05.660 --> 30:06.660
这个全得查的

30:06.660 --> 30:07.660
你浪费多少时间呢

30:07.660 --> 30:08.660
确实

30:08.660 --> 30:09.660
你要没有什么其他插件的话

30:09.660 --> 30:11.660
你确实就得这么来写

30:11.660 --> 30:13.660
但这么来写

30:13.660 --> 30:14.660
也没什么太大所谓

30:14.660 --> 30:15.660
因为你能用到的

30:15.660 --> 30:16.660
CR3属性

30:16.660 --> 30:18.660
其实还是能查到的

30:18.660 --> 30:19.660
其实就那么几个

30:19.660 --> 30:20.660
就那么几个

30:20.660 --> 30:22.660
你要说这么几个

30:22.660 --> 30:23.660
多少个

30:23.660 --> 30:24.660
三四十个是吧

30:24.660 --> 30:25.660
但是你从这个

30:25.660 --> 30:26.660
你既也能记得过来了

30:26.660 --> 30:27.660
而且你在编程的时候

30:27.660 --> 30:28.660
基本上你在公司

30:28.660 --> 30:29.660
开发的手里面向

30:29.660 --> 30:30.660
现在也基本上

30:30.660 --> 30:32.660
都是一些高版本的乱七

30:32.660 --> 30:33.660
兼容性不太存在问题

30:33.660 --> 30:34.660
但是可能依然存在问题

30:34.660 --> 30:35.660
依然存在问题

30:36.660 --> 30:37.660
存在问题的话

30:37.660 --> 30:38.660
你就查一查

30:38.660 --> 30:39.660
看看工作经验什么的

30:39.660 --> 30:40.660
你随着写

30:40.660 --> 30:41.660
随着测试

30:41.660 --> 30:42.660
四十出问题之后

30:42.660 --> 30:43.660
你就把它补上

30:43.660 --> 30:44.660
然后你记载下来

30:44.660 --> 30:45.660
像是在写的时候

30:45.660 --> 30:46.660
注意一下的完事了

30:46.660 --> 30:47.660
是吧

30:47.660 --> 30:48.660
这有点麻烦是吧

30:48.660 --> 30:49.660
有没有什么时候

30:49.660 --> 30:50.660
更好的一个方式

30:50.660 --> 30:51.660
有

30:51.660 --> 30:52.660
用插件

30:52.660 --> 30:54.660
插件就能足够支持你

30:54.660 --> 30:55.660
直接写CR3

30:55.660 --> 30:56.660
那属性就完事了

30:56.660 --> 30:57.660
你写完属性

30:57.660 --> 30:58.660
它给你补

30:58.660 --> 30:59.660
你写完属性

30:59.660 --> 31:00.660
它给你补

31:00.660 --> 31:02.660
这个插件叫什么名字

31:02.660 --> 31:05.660
插件叫Auto Prefixer

31:05.660 --> 31:06.660
Auto Prefixer

31:06.660 --> 31:07.660
这个插件

31:07.660 --> 31:08.660
你可以不用记住

31:08.660 --> 31:10.660
但是基于这个插件

31:10.660 --> 31:11.660
我要扩展的一系列

31:11.660 --> 31:12.660
跟你讲说这方面的信息

31:12.660 --> 31:14.660
你必须要记住

31:14.660 --> 31:15.660
你必须要记住

31:15.660 --> 31:16.660
这个插件非常厉害

31:16.660 --> 31:17.660
比如说

31:17.660 --> 31:18.660
比如说

31:18.660 --> 31:19.660
比如说

31:19.660 --> 31:21.660
我给你举个例子吧

31:21.660 --> 31:22.660
我给你举个例子

31:27.660 --> 31:28.660
在这里面看吧

31:28.660 --> 31:29.660
看啥呢

31:29.660 --> 31:30.660
box saddle

31:30.660 --> 31:31.660
box saddle

31:33.660 --> 31:34.660
box saddle

31:34.660 --> 31:35.660
往下看一看

31:35.660 --> 31:36.660
我好得全兼容

31:36.660 --> 31:37.660
你看

31:37.660 --> 31:38.660
这找也不好了是吧

31:38.660 --> 31:39.660
再找一找

31:39.660 --> 31:40.660
找哪个呢

31:40.660 --> 31:41.660
找这个

31:41.660 --> 31:42.660
你看

31:42.660 --> 31:43.660
obcity

31:43.660 --> 31:44.660
其实都是CR3的属性

31:45.660 --> 31:46.660
比如说

31:46.660 --> 31:47.660
这个件是比较好的一些东西吧

31:47.660 --> 31:48.660
咱也没有必要做区分了

31:48.660 --> 31:49.660
能用就行

31:49.660 --> 31:50.660
然后再往下看

31:50.660 --> 31:51.660
看哪个呢

31:51.660 --> 31:52.660
同学们

31:52.660 --> 31:53.660
看哪个呢

31:55.660 --> 31:56.660
我拿

31:56.660 --> 31:58.660
拿一个东西来说一说

31:58.660 --> 31:59.660
拿一个东西来说一说

32:00.660 --> 32:01.660
我看flex行不行

32:01.660 --> 32:02.660
flex

32:07.410 --> 32:08.410
flex

32:08.410 --> 32:09.410
flex全都是byp

32:09.410 --> 32:10.410
是吧

32:10.410 --> 32:11.410
反正也行吧

32:11.410 --> 32:12.410
也行吧

32:12.410 --> 32:14.410
那就displayflex吧

32:16.410 --> 32:17.410
就比如说

32:17.410 --> 32:18.410
就比如说他能办到什么样的事呢

32:24.410 --> 32:25.410
不拿他来说

32:25.410 --> 32:26.410
他不太好

32:26.410 --> 32:27.410
不太好

32:27.410 --> 32:28.410
太简单了

32:28.410 --> 32:29.410
这个东西

32:29.410 --> 32:30.410
那咱们拿这个transition来说吧

32:30.410 --> 32:31.410
好吧

32:31.410 --> 32:32.410
拿这个transition来说

32:32.410 --> 32:33.410
transition假如说

32:33.410 --> 32:35.410
要兼容这个flex和这个clone

32:35.410 --> 32:36.410
是吧

32:36.410 --> 32:37.410
所以说这块得写什么

32:37.410 --> 32:38.410
得写这个

32:38.410 --> 32:39.410
写这个moseller

32:39.410 --> 32:41.410
这个头和写这个byp的一个头了

32:41.410 --> 32:42.410
是吧

32:42.410 --> 32:43.410
然后再兼容一个ie

32:43.410 --> 32:44.410
是吧

32:44.410 --> 32:45.410
然后比如说

32:45.410 --> 32:46.410
现在我要兼容那么些东西

32:46.410 --> 32:47.410
我现在要写个transition

32:47.410 --> 32:48.410
transition

32:48.410 --> 32:50.410
这么写的话肯定不行

32:50.410 --> 32:51.410
是不是正常写法来说

32:51.410 --> 32:52.410
我应该考虑一下

32:52.410 --> 32:53.410
这样的我先查好

32:53.410 --> 32:54.410
然后写这样的

32:54.410 --> 32:55.410
然后再写一个byp的

32:55.410 --> 32:56.410
这样的东西是吧

32:56.410 --> 32:57.410
有了这个插件之后

32:57.410 --> 32:58.410
你就不用管那么多的事了

32:58.410 --> 32:59.410
这个插件

32:59.410 --> 33:00.410
会在你这个代码

33:00.410 --> 33:01.410
写完了之后

33:01.410 --> 33:03.410
会给你扫一下这个代码

33:03.410 --> 33:04.410
扫完之后

33:04.410 --> 33:05.410
它会帮你加上

33:05.410 --> 33:07.410
它会帮你加上

33:07.410 --> 33:08.410
就是它帮你弄完之后

33:08.410 --> 33:10.410
就相当于你这个transition里面

33:10.410 --> 33:11.410
又写了一个这个

33:11.410 --> 33:12.410
又写了一个

33:12.410 --> 33:15.410
这个又写了一个byp

33:15.410 --> 33:16.410
写了这样的东西

33:16.410 --> 33:17.410
就太长了

33:17.410 --> 33:18.410
我就不写了

33:18.410 --> 33:19.410
扶植一下

33:19.410 --> 33:20.410
这个植

33:20.410 --> 33:21.410
我也想不准写

33:21.410 --> 33:22.410
是植标符的

33:22.410 --> 33:24.410
因为这个transition

33:24.410 --> 33:25.410
这个植植

33:25.410 --> 33:26.410
不是一党个植

33:26.410 --> 33:27.410
这个东西

33:27.410 --> 33:28.410
还是有说的了

33:28.410 --> 33:29.410
到这来说

33:29.410 --> 33:30.410
你先看这个储�

33:30.410 --> 33:31.410
这个

33:31.410 --> 33:33.410
Auto Prefixer

33:33.410 --> 33:34.410
Prefixer

33:34.410 --> 33:36.410
它会帮咱们补习

33:36.410 --> 33:37.410
这样的一个东西

33:37.410 --> 33:39.410
这个Auto Prefixer

33:39.410 --> 33:41.410
它代表的是什么东西呢

33:41.410 --> 33:43.410
它代表的是一个后处理器

33:43.410 --> 33:44.410
叫后处理器

33:44.410 --> 33:46.410
从这个后处理器这块

33:46.410 --> 33:47.410
我要把这个

33:47.410 --> 33:49.410
预处理器

33:49.410 --> 33:50.410
和这个后处理器

33:50.410 --> 33:51.410
来集中来说一说

33:51.410 --> 33:52.410
然后说一说

33:52.410 --> 33:53.410
它俩的一些区别

33:53.410 --> 33:54.410
和一些用途

33:54.410 --> 33:55.410
简单给大家介绍介绍

33:55.410 --> 33:56.410
你这块

33:56.410 --> 33:57.410
就当做一个职业素养

33:57.410 --> 33:58.410
来听的

33:58.410 --> 33:59.410
这块对你

34:00.410 --> 34:02.410
非常有帮助

34:02.410 --> 34:03.410
而且对你

34:03.410 --> 34:04.410
对一些

34:04.410 --> 34:05.410
特别牛的一些CSS

34:05.410 --> 34:06.410
这些写法

34:06.410 --> 34:07.410
也特别有帮助

34:07.410 --> 34:08.410
一会大家说一下

34:08.410 --> 34:09.410
这个CSS Max这些东西

34:09.410 --> 34:10.410
行了

34:10.410 --> 34:11.410
这个Auto Prefixer

34:11.410 --> 34:12.410
是不是

34:12.410 --> 34:13.410
大家是不是都懂了

34:13.410 --> 34:14.410
没问题吧

34:14.410 --> 34:15.410
就相当于Auto Prefixer

34:15.410 --> 34:16.410
相当于

34:16.410 --> 34:17.410
它给咱们提供一个环境

34:17.410 --> 34:18.410
咱们在这个环境里面

34:18.410 --> 34:20.410
写咱们想写的一些东西

34:20.410 --> 34:21.410
然后它会

34:21.410 --> 34:22.410
把咱们这个东西

34:22.410 --> 34:23.410
给补习的

34:23.410 --> 34:24.410
能懂我意思吗

34:24.410 --> 34:25.410
它就相当于

34:25.410 --> 34:26.410
补习的一个作用

34:26.410 --> 34:27.410
OK

34:27.410 --> 34:28.410
那这是Auto Prefixer

34:29.410 --> 34:30.410
它其实是什么呢

34:30.410 --> 34:31.410
它其实是

34:31.410 --> 34:32.410
后处理器的

34:32.410 --> 34:33.410
一个

34:33.410 --> 34:34.410
一个这样的一个插件

34:34.410 --> 34:35.410
后处理器里面

34:35.410 --> 34:36.410
一个插件

34:36.410 --> 34:37.410
然后说一下

34:37.410 --> 34:38.410
预处理器和后处理器吧

34:38.410 --> 34:39.410
英文是啥呢

34:39.410 --> 34:42.410
英文是prefixer

34:43.410 --> 34:44.410
prefixer

34:44.410 --> 34:45.410
pre是什么

34:45.410 --> 34:46.410
previous 是吧

34:46.410 --> 34:47.410
然后这块是Post

34:47.410 --> 34:48.410
过去的

34:49.410 --> 34:50.410
processor

34:50.410 --> 34:51.410
processor

34:51.410 --> 34:52.410
这是预处理器

34:52.410 --> 34:53.410
这是后处理器

34:53.410 --> 34:54.410
OK

34:54.410 --> 34:55.410
这个预处理器

34:55.410 --> 34:56.410
这个典型

34:56.410 --> 34:57.410
src

34:58.410 --> 34:59.410
然后还有

34:59.410 --> 35:01.410
cssnext

35:01.410 --> 35:02.410
cssnext

35:03.410 --> 35:04.410
这样的东西

35:04.410 --> 35:05.410
我来挨个

35:05.410 --> 35:06.410
把这个东西介绍介绍

35:06.410 --> 35:07.410
但这个lesrs

35:07.410 --> 35:08.410
cssnext

35:08.410 --> 35:09.410
包括prefixer

35:09.410 --> 35:10.410
包括一会

35:10.410 --> 35:11.410
咱们要讲

35:11.410 --> 35:12.410
css post的东西

35:12.410 --> 35:13.410
都需要安装

35:13.410 --> 35:14.410
甚至说需要

35:14.410 --> 35:15.410
wiped安装

35:15.410 --> 35:16.410
所以说我就

35:16.410 --> 35:17.410
不那么麻烦了

35:17.410 --> 35:18.410
我带你安装一遍的话

35:18.410 --> 35:19.410
我预处理器

35:19.410 --> 35:20.410
那我相当于

35:20.410 --> 35:21.410
把wiped都讲了

35:21.410 --> 35:22.410
不那么麻烦了

35:22.410 --> 35:23.410
我通过这样介绍

35:23.410 --> 35:24.410
你就能理解

35:24.410 --> 35:25.410
它是干啥的

35:25.410 --> 35:26.410
pact的时候

35:26.410 --> 35:27.410
到那个时候

35:27.410 --> 35:28.410
咱们的小总老师

35:28.410 --> 35:29.410
会领你们应应一下

35:29.410 --> 35:30.410
这个东西的

35:31.410 --> 35:33.410
就是现在你现在听懂了

35:33.410 --> 35:34.410
你基本上就明白

35:34.410 --> 35:35.410
它是什么东西的

35:35.410 --> 35:36.410
就是我现在需要你了解的

35:36.410 --> 35:37.410
就是你对它的一个

35:37.410 --> 35:38.410
了解程度

35:38.410 --> 35:39.410
这个属于

35:39.410 --> 35:40.410
一个超级纸点

35:40.410 --> 35:41.410
所以说

35:41.410 --> 35:42.410
不是讲cssnext吗

35:42.410 --> 35:43.410
这东西也是

35:43.410 --> 35:44.410
cssnext的一部分

35:44.410 --> 35:45.410
它属于cssnext

35:45.410 --> 35:46.410
一个辅助工具

35:46.410 --> 35:47.410
是cssnext

35:47.410 --> 35:48.410
cssnext的一个

35:48.410 --> 35:49.410
上升的一层

35:49.410 --> 35:50.410
它不太属于

35:50.410 --> 35:51.410
cssnext里面的一个纸点

35:51.410 --> 35:52.410
但是我希望把这个东西

35:52.410 --> 35:53.410
去讲述给你

35:53.410 --> 35:54.410
OK

35:54.410 --> 35:55.410
处理器和这个

35:55.410 --> 35:56.410
后处理器

35:56.410 --> 35:57.410
我先说一下

35:57.410 --> 35:58.410
它俩是什么

35:58.410 --> 35:59.410
比如说

35:59.410 --> 36:00.410
这个cssnext

36:00.410 --> 36:01.410
其实cssnext

36:01.410 --> 36:02.410
和cssnext的协法

36:02.410 --> 36:03.410
基本上都是一致的

36:03.410 --> 36:04.410
比如说这话

36:04.410 --> 36:05.410
就是这个div的话

36:05.410 --> 36:06.410
是吧

36:06.410 --> 36:07.410
我想试试这个div的一个

36:07.410 --> 36:08.410
像什么这个

36:08.410 --> 36:09.410
这个这个这个

36:09.410 --> 36:10.410
cover什么的

36:10.410 --> 36:11.410
这些东西

36:11.410 --> 36:12.410
这都是一个cssnext的协法

36:12.410 --> 36:13.410
比如说我试试

36:13.410 --> 36:14.410
一个transition

36:14.410 --> 36:15.410
什么一个东西

36:15.410 --> 36:16.410
也都是一个cssnext的协法

36:16.410 --> 36:17.410
就无论是

36:17.410 --> 36:18.410
就是区别就是cssnext2的属性

36:18.410 --> 36:19.410
和cssnext3的属性

36:19.410 --> 36:20.410
是吧

36:20.410 --> 36:21.410
但这个无所谓的

36:21.410 --> 36:22.410
一个事

36:22.410 --> 36:23.410
然后再来说

36:23.410 --> 36:24.410
这么来看看

36:24.410 --> 36:25.410
其实就是咱们

36:25.410 --> 36:26.410
正常在编写

36:26.410 --> 36:27.410
cssnext2的时候

36:27.410 --> 36:28.410
是比较麻烦的

36:28.410 --> 36:29.410
比如说我想

36:29.410 --> 36:31.410
编辑这个div下面的

36:31.410 --> 36:32.410
一个span是吧

36:32.410 --> 36:33.410
然后span里面

36:33.410 --> 36:34.410
可能说div下面

36:34.410 --> 36:35.410
可能还有一个p标签

36:35.410 --> 36:36.410
然后现在我什么都不写

36:36.410 --> 36:37.410
不写钥匙的话

36:37.410 --> 36:39.410
不写这样的一个class的话

36:39.410 --> 36:40.410
是不是我想选这个span

36:40.410 --> 36:41.410
和这个p标签

36:41.410 --> 36:42.410
规范性的协法

36:42.410 --> 36:43.410
是不是挺费劲的是吧

36:43.410 --> 36:44.410
如果不规范写的话

36:44.410 --> 36:45.410
也不利于维护是吧

36:45.410 --> 36:46.410
必须规范写

36:46.410 --> 36:47.410
规范写是不是div下面的span

36:47.410 --> 36:48.410
是吧

36:48.410 --> 36:49.410
然后div下面的p是吧

36:49.410 --> 36:50.410
然后还存在一些情况

36:50.410 --> 36:52.410
就比如说这里面

36:52.410 --> 36:53.410
我用到一个color

36:53.410 --> 36:54.410
color是right

36:54.410 --> 36:55.410
这里面用到一个color

36:55.410 --> 36:57.410
也是right是吧

36:57.410 --> 36:58.410
这个东西不相当于重复了

36:58.410 --> 36:59.410
如果

36:59.410 --> 37:00.410
比如说重复一个东西

37:00.410 --> 37:02.410
比如说现在我想改变

37:02.410 --> 37:03.410
这个div里面

37:03.410 --> 37:04.410
或者说我想改变

37:04.410 --> 37:06.410
这个特定结构里面的

37:06.410 --> 37:08.410
一个字体的一个颜色

37:08.410 --> 37:09.410
现在都是right的

37:09.410 --> 37:10.410
比如说写错了

37:10.410 --> 37:11.410
我想变成yellow

37:11.410 --> 37:12.410
代码少的情况下

37:12.410 --> 37:13.410
咱们一击中选中

37:13.410 --> 37:14.410
反正也没啥是吧

37:14.410 --> 37:16.410
但是代码结构一多

37:16.410 --> 37:18.410
你是多文件夹下开发

37:18.410 --> 37:19.410
或者说多人协作开发的话

37:19.410 --> 37:20.410
你这么一改的话

37:20.410 --> 37:21.410
我跟你讲

37:21.410 --> 37:22.410
杂件盘这些都有了

37:22.410 --> 37:24.410
所以这是一个非常复杂的东西

37:24.410 --> 37:25.410
那怎么能简化一下它呢

37:25.410 --> 37:27.410
有没有更高级的变成方式呢

37:27.410 --> 37:28.410
是有的

37:28.410 --> 37:31.410
咱们基于CSS3

37:31.410 --> 37:32.410
咱们产生了

37:32.410 --> 37:33.410
这系列的这样的一个

37:33.410 --> 37:35.410
预处理器这样的工具

37:35.410 --> 37:36.410
这叫预处理器的工具

37:36.410 --> 37:37.410
叫什么呢

37:37.410 --> 37:38.410
叫less和sars

37:38.410 --> 37:39.410
咱就拿这个sars

37:39.410 --> 37:40.410
来举个例子吧

37:40.410 --> 37:41.410
它能干嘛呢

37:41.410 --> 37:42.410
首先这个sars需要安装

37:42.410 --> 37:43.410
安装完之后

37:43.410 --> 37:44.410
就是它会把咱们

37:44.410 --> 37:47.410
编写的sars文件

37:47.410 --> 37:48.410
编意一下

37:48.410 --> 37:50.410
然后变成一个这样的一个CSS

37:50.410 --> 37:52.410
然后咱们最后会执行

37:52.410 --> 37:53.410
这样的一个CSS

37:53.410 --> 37:54.410
什么意思呢

37:54.410 --> 37:55.410
就是它提供了

37:55.410 --> 37:56.410
这个sars提供了

37:56.410 --> 37:57.410
一系列语法

37:57.410 --> 37:58.410
我们可以按照它的语法

37:58.410 --> 37:59.410
去编辑

37:59.410 --> 38:00.410
然后它会把咱们

38:00.410 --> 38:03.410
按照它语法编辑的这样的一个

38:03.410 --> 38:04.410
这样的一个代码

38:04.410 --> 38:05.410
去生成成一个

38:05.410 --> 38:06.410
标准的CSS

38:06.410 --> 38:07.410
这个sars

38:07.410 --> 38:08.410
它不是一个

38:08.410 --> 38:10.410
怎么说呢

38:10.410 --> 38:11.410
它只是

38:11.410 --> 38:12.410
变于咱们写的

38:12.410 --> 38:13.410
一个这样的一个工具

38:13.410 --> 38:14.410
它不是一个

38:14.410 --> 38:15.410
真正的一个

38:15.410 --> 38:16.410
真正的一个语言

38:16.410 --> 38:17.410
咱们写了一个

38:17.410 --> 38:18.410
一处理新的工具

38:18.410 --> 38:19.410
就是这个sars上面

38:19.410 --> 38:20.410
定义了一些语法

38:20.410 --> 38:21.410
让咱们这个CSS写起来

38:21.410 --> 38:22.410
会非常方便

38:22.410 --> 38:23.410
比如说DIV

38:23.410 --> 38:24.410
我下面直接可以写死板

38:24.410 --> 38:25.410
这个东西你没见过吗

38:25.410 --> 38:27.410
这个就相当于DIV

38:27.410 --> 38:28.410
下面这个死板

38:28.410 --> 38:29.410
但正常来说

38:29.410 --> 38:30.410
它肯定不是

38:30.410 --> 38:31.410
一个新的语言了

38:31.410 --> 38:32.410
它只不过是咱借助

38:32.410 --> 38:33.410
这个sars的工具

38:33.410 --> 38:34.410
可以这么来编辑

38:34.410 --> 38:35.410
然后这个sars

38:35.410 --> 38:36.410
会帮咱们

38:36.410 --> 38:37.410
把这个东西生成成

38:37.410 --> 38:38.410
会把它生成成这样的

38:38.410 --> 38:40.410
死板这样的一个写法

38:40.410 --> 38:41.410
是吧

38:41.410 --> 38:42.410
然后咱下面

38:42.410 --> 38:43.410
还可以定义一些变调

38:43.410 --> 38:44.410
什么都可以定义

38:44.410 --> 38:45.410
我们要这个通篇

38:45.410 --> 38:47.410
要设置一个fond stock

38:47.410 --> 38:48.410
就比如说

38:48.410 --> 38:49.410
想设置一个

38:49.410 --> 38:51.410
怎么说呢

38:51.410 --> 38:52.410
设置一个字体

38:52.410 --> 38:53.410
字体一个样式

38:53.410 --> 38:54.410
一个酷

38:54.410 --> 38:55.410
然后这自己样式酷

38:55.410 --> 38:56.410
第一个肯定写选

38:56.410 --> 38:57.410
这个areal是吧

38:57.410 --> 38:58.410
然后呢

38:58.410 --> 38:59.410
第二个可能说

38:59.410 --> 39:00.410
咱们要写一个

39:00.410 --> 39:01.410
什么什么其他这个东西

39:01.410 --> 39:02.410
因为这个字体family

39:02.410 --> 39:03.410
那个东西知道吧

39:03.410 --> 39:04.410
可以写多个的

39:04.410 --> 39:05.410
第一个没有的话

39:05.410 --> 39:06.410
选后面那个

39:06.410 --> 39:07.410
然后咱可以编辑好

39:07.410 --> 39:08.410
这样的一个酷是吧

39:08.410 --> 39:09.410
咱可以编辑一个

39:09.410 --> 39:10.410
比如说

39:10.410 --> 39:11.410
编辑一个

39:11.410 --> 39:12.410
咱们想要的一个颜色

39:12.410 --> 39:13.410
叫situation

39:13.410 --> 39:15.410
就我的场景下的一个颜色

39:15.410 --> 39:16.410
比如说叫这个

39:16.410 --> 39:18.410
333

39:18.410 --> 39:19.410
ok

39:19.410 --> 39:20.410
然后呢

39:20.410 --> 39:21.410
我们想要这个颜色的时候

39:21.410 --> 39:22.410
怎么来写

39:22.410 --> 39:23.410
比如说div下面的span

39:23.410 --> 39:26.410
直接写color

39:26.410 --> 39:27.410
my situation color

39:27.410 --> 39:28.410
就ok了

39:28.410 --> 39:30.410
然后比如说div下面的

39:30.410 --> 39:31.410
p标签

39:31.410 --> 39:32.410
你想怎么来改的话

39:32.410 --> 39:33.410
或者说在其他什么结构下面

39:33.410 --> 39:34.410
是吧

39:34.410 --> 39:35.410
这个什么什么这个

39:35.410 --> 39:36.410
div什么结构下面

39:36.410 --> 39:37.410
比如说还可以写

39:37.410 --> 39:39.410
这个

39:39.410 --> 39:40.410
写什么东西

39:40.410 --> 39:41.410
都可以

39:41.410 --> 39:42.410
比如说这样的一个情况

39:42.410 --> 39:46.410
然后div

39:46.410 --> 39:47.410
然后下面也有这个color

39:47.410 --> 39:48.410
然后写什么东西

39:48.410 --> 39:50.410
比如说吧

39:50.410 --> 39:51.410
就这样啊

39:51.410 --> 39:52.410
或者说这样

39:52.410 --> 39:53.410
我给你举一个这样的

39:53.410 --> 39:54.410
这个例子是吧

39:54.410 --> 39:55.410
就另一个结构了

39:55.410 --> 39:56.410
我就不多写了

39:56.410 --> 39:57.410
就给你举个例子

39:57.410 --> 39:58.410
这里面很多的很多种写法

39:58.410 --> 39:59.410
这个sars

39:59.410 --> 40:00.410
咱后面有单独一枪刻

40:00.410 --> 40:01.410
我给你说一下

40:01.410 --> 40:02.410
它这个链接性

40:02.410 --> 40:03.410
然后这里面还可以写

40:03.410 --> 40:04.410
这个my situation

40:04.410 --> 40:05.410
这样的color

40:05.410 --> 40:06.410
把这个东西引入进来

40:06.410 --> 40:07.410
是吧

40:07.410 --> 40:08.410
这个f1的里面

40:08.410 --> 40:09.410
比如说有个f1

40:09.410 --> 40:10.410
是吧

40:10.410 --> 40:11.410
然后这块添一个

40:11.410 --> 40:12.410
f1-sars的

40:12.410 --> 40:13.410
就把这个东西引入过来了

40:13.410 --> 40:14.410
这可以当作一个变调

40:14.410 --> 40:15.410
来定义

40:15.410 --> 40:16.410
当你想改变这个颜色的时候

40:16.410 --> 40:17.410
你直接改变它

40:17.410 --> 40:18.410
就完事了

40:18.410 --> 40:19.410
这是个非常方便的存在

40:19.410 --> 40:20.410
是吧

40:20.410 --> 40:21.410
当然等等这系列功能

40:21.410 --> 40:22.410
有很多

40:22.410 --> 40:23.410
总的来说

40:23.410 --> 40:24.410
就是sars

40:24.410 --> 40:25.410
给咱们提供的

40:25.410 --> 40:26.410
语法基础

40:26.410 --> 40:27.410
语法堂

40:27.410 --> 40:29.410
然后咱们按照它这个语法

40:29.410 --> 40:30.410
然后写

40:30.410 --> 40:31.410
它里面规定的一些

40:31.410 --> 40:32.410
语法格是一个代码

40:32.410 --> 40:33.410
它会帮咱们

40:33.410 --> 40:34.410
把这个代码

40:34.410 --> 40:35.410
生成成一个标准的

40:35.410 --> 40:36.410
css去执行

40:36.410 --> 40:37.410
就这个东西

40:37.410 --> 40:38.410
放到css里面

40:38.410 --> 40:39.410
它是执行不了的

40:41.410 --> 40:42.410
然后sars

40:42.410 --> 40:43.410
给咱们解析成

40:43.410 --> 40:44.410
正常的css代码

40:44.410 --> 40:45.410
咱们才可以执行

40:45.410 --> 40:46.410
那这个东西

40:46.410 --> 40:47.410
在执行的层面上

40:47.410 --> 40:48.410
重新说

40:48.410 --> 40:49.410
整个执行的不足够

40:49.410 --> 40:50.410
还是这个css

40:50.410 --> 40:51.410
这个执行层面上

40:51.410 --> 40:52.410
效率没怎么高

40:52.410 --> 40:53.410
确实

40:53.410 --> 40:54.410
但是方便咱们

40:54.410 --> 40:55.410
编写代码

40:55.410 --> 40:56.410
和管理代码

40:56.410 --> 40:57.410
这一点上

40:57.410 --> 40:58.410
给咱们省了很大的

40:58.410 --> 40:59.410
一个时间

40:59.410 --> 41:00.410
所以这样

41:00.410 --> 41:01.410
这个过程

41:01.410 --> 41:02.410
就相当于什么

41:02.410 --> 41:03.410
同学们

41:03.410 --> 41:04.410
就相当于什么

41:04.410 --> 41:05.410
是不是相当于

41:05.410 --> 41:06.410
咱们先

41:06.410 --> 41:07.410
怎么着

41:07.410 --> 41:08.410
先按照

41:08.410 --> 41:10.410
人家的代码来写

41:10.410 --> 41:11.410
先按照

41:11.410 --> 41:13.410
最快我给大家总结一下

41:13.410 --> 41:14.410
就是

41:14.410 --> 41:15.410
它叫预处理器

41:15.410 --> 41:16.410
sars这样的一个形式

41:16.410 --> 41:17.410
叫预处理器

41:17.410 --> 41:18.410
就是

41:18.410 --> 41:19.410
我们先按照

41:19.410 --> 41:21.410
人家的语法来写

41:21.410 --> 41:22.410
然后最后生成

41:22.410 --> 41:23.410
css

41:23.410 --> 41:24.410
这样的一个处理器

41:24.410 --> 41:25.410
叫什么呢

41:25.410 --> 41:26.410
叫预处理器

41:26.410 --> 41:27.410
它是帮咱们

41:27.410 --> 41:28.410
能简化操作的

41:28.410 --> 41:29.410
叫预处理器

41:29.410 --> 41:30.410
就是sars

41:30.410 --> 41:31.410
和class

41:31.410 --> 41:32.410
包括咱一会

41:32.410 --> 41:33.410
给你设计

41:33.410 --> 41:34.410
css next

41:34.410 --> 41:35.410
都是什么

41:35.410 --> 41:36.410
都是人家定义了

41:36.410 --> 41:37.410
一套语法规则

41:37.410 --> 41:38.410
然后咱们按照

41:38.410 --> 41:39.410
人家的语法规则

41:39.410 --> 41:41.410
然后人家会按照

41:41.410 --> 41:42.410
符合了人家这个

41:42.410 --> 41:44.410
语法规则的一个代码

41:44.410 --> 41:45.410
就是咱们写的

41:45.410 --> 41:46.410
符合了人家的语法规则

41:46.410 --> 41:47.410
这个代码

41:47.410 --> 41:48.410
来把咱们的代码

41:48.410 --> 41:49.410
生成成css

41:49.410 --> 41:50.410
这个意思吧

41:50.410 --> 41:51.410
这叫预处理器

41:51.410 --> 41:52.410
然后咱们来说一下

41:52.410 --> 41:53.410
什么叫后处理器

41:53.410 --> 41:54.410
后处理器就有点

41:54.410 --> 41:55.410
像这个auto prefixer

41:55.410 --> 41:56.410
auto prefixer

41:56.410 --> 41:57.410
什么意思呢

41:57.410 --> 41:58.410
就是咱们在一开始

41:58.410 --> 41:59.410
在写的时候

41:59.410 --> 42:01.410
没遵循谁的语法规则

42:01.410 --> 42:02.410
我们写的就是

42:02.410 --> 42:03.410
css代码

42:03.410 --> 42:04.410
比如说我里面

42:04.410 --> 42:05.410
写个border radius

42:05.410 --> 42:06.410
我们写的

42:06.410 --> 42:07.410
就是这样的一个css代码

42:07.410 --> 42:08.410
而这个auto prefixer

42:08.410 --> 42:09.410
怎么回事呢

42:09.410 --> 42:10.410
它相当于提供一个环境

42:10.410 --> 42:11.410
这个环境下

42:11.410 --> 42:12.410
让我可以

42:12.410 --> 42:13.410
让我们可以随意的

42:13.410 --> 42:14.410
写这样的一个css代码

42:14.410 --> 42:15.410
然后呢

42:15.410 --> 42:16.410
我们写完了之后

42:16.410 --> 42:18.410
它会把我们的css代码

42:18.410 --> 42:19.410
给补齐

42:19.410 --> 42:20.410
它会生成一个

42:20.410 --> 42:21.410
这样的东西

42:21.410 --> 42:22.410
给补齐

42:22.410 --> 42:24.410
auto prefixer

42:24.410 --> 42:26.410
它会生成一个这样的

42:26.410 --> 42:27.410
然后呢

42:28.410 --> 42:30.410
然后再来一个wp

42:30.410 --> 42:31.410
wp

42:31.410 --> 42:32.410
OK

42:32.410 --> 42:33.410
可能说还有一个

42:33.410 --> 42:34.410
这样的一个muzilier

42:34.410 --> 42:35.410
是吧

42:35.410 --> 42:36.410
muzilier

42:36.410 --> 42:37.410
border radius

42:40.850 --> 42:41.850
border radius

42:41.850 --> 42:42.850
是这样的一个东西

42:42.850 --> 42:43.850
就是咱们一开始

42:43.850 --> 42:44.850
先补按照别人的

42:44.850 --> 42:45.850
语法规则来写

42:45.850 --> 42:46.850
咱们从头到尾

42:46.850 --> 42:47.850
也没涉及到

42:47.850 --> 42:48.850
别人的语法规则

42:48.850 --> 42:49.850
咱们就是按正常

42:49.850 --> 42:50.850
自己的一个想法去写

42:50.850 --> 42:51.850
只不过不用考虑

42:51.850 --> 42:52.850
监狱性的情况

42:52.850 --> 42:53.850
因为是在人家的

42:53.850 --> 42:54.850
环境下吧 是吧

42:54.850 --> 42:55.850
然后在人家的

42:55.850 --> 42:56.850
环境下去写完

42:56.850 --> 42:57.850
这个东西之后

42:57.850 --> 42:58.850
怎么着

42:58.850 --> 42:59.850
人家会把咱们

42:59.850 --> 43:00.850
这个东西给补齐

43:00.850 --> 43:01.850
是吧

43:01.850 --> 43:02.850
就是一开始

43:02.850 --> 43:03.850
咱们按照

43:03.850 --> 43:04.850
css的语法规则来写

43:04.850 --> 43:05.850
然后后来

43:05.850 --> 43:06.850
就这样一系列的

43:06.850 --> 43:07.850
这样的一个插件

43:07.850 --> 43:08.850
因为

43:08.850 --> 43:09.850
后处理器

43:09.850 --> 43:10.850
不只有这一个插件

43:10.850 --> 43:11.850
语处理器

43:11.850 --> 43:12.850
也不只有这么多个东西

43:12.850 --> 43:13.850
还有很多

43:13.850 --> 43:14.850
包括Lets

43:14.850 --> 43:15.850
SARS

43:15.850 --> 43:16.850
和CSSNex

43:16.850 --> 43:17.850
它都是

43:17.850 --> 43:18.850
语处理器的一个机制

43:18.850 --> 43:19.850
这种情况叫语处理器

43:19.850 --> 43:20.850
这种情况叫

43:20.850 --> 43:21.850
后处理器

43:21.850 --> 43:22.850
那东西是吧

43:22.850 --> 43:23.850
叫后处理器

43:25.850 --> 43:26.850
然后咱们可以

43:26.850 --> 43:27.850
做一下这样的区别

43:27.850 --> 43:28.850
语处理器

43:28.850 --> 43:29.850
什么样的情况

43:29.850 --> 43:30.850
就是我再总结一下

43:30.850 --> 43:31.850
语处理器

43:31.850 --> 43:32.850
什么样的情况

43:32.850 --> 43:33.850
语处理器

43:33.850 --> 43:34.850
是先按照

43:34.850 --> 43:35.850
css代码

43:35.850 --> 43:36.850
去执行

43:36.850 --> 43:37.850
生成一个

43:37.850 --> 43:38.850
css代码去执行

43:38.850 --> 43:39.850
然后

43:39.850 --> 43:40.850
后处理器是什么情况

43:40.850 --> 43:41.850
后处理器是

43:41.850 --> 43:42.850
我们本来写的

43:42.850 --> 43:43.850
就是css代码

43:43.850 --> 43:44.850
然后他们

43:44.850 --> 43:46.850
会在咱们写完了之后

43:46.850 --> 43:47.850
会怎么到

43:47.850 --> 43:48.850
会帮咱们补充

43:48.850 --> 43:49.850
这个css

43:49.850 --> 43:50.850
这样的代码

43:50.850 --> 43:51.850
补充好了之后

43:51.850 --> 43:52.850
然后再去执行

43:52.850 --> 43:53.850
是这样的一个情况

43:53.850 --> 43:54.850
就是

43:54.850 --> 43:55.850
先处理

43:55.850 --> 43:56.850
和后处理

43:56.850 --> 43:57.850
扎了一个区别

43:57.850 --> 43:58.850
先处理

43:58.850 --> 43:59.850
后处理

43:59.850 --> 44:00.850
扎了一个区别

44:00.850 --> 44:01.850
就是我先按照

44:01.850 --> 44:02.850
语法写

44:02.850 --> 44:03.850
还是你后处理

44:03.850 --> 44:04.850
当然

44:04.850 --> 44:05.850
这个东西

44:05.850 --> 44:06.850
没有什么太大的所谓

44:06.850 --> 44:07.850
因为无论你是

44:07.850 --> 44:08.850
续处理

44:08.850 --> 44:09.850
还是这个后处理

44:09.850 --> 44:10.850
最终都是要执行

44:10.850 --> 44:11.850
这个css的

44:11.850 --> 44:12.850
是吧

44:12.850 --> 44:13.850
你不可能在执行

44:13.850 --> 44:14.850
css的之后

44:14.850 --> 44:15.850
还干到什么事

44:15.850 --> 44:16.850
这是不现实的

44:16.850 --> 44:17.850
是吧

44:17.850 --> 44:18.850
所以说

44:18.850 --> 44:19.850
这只是

44:19.850 --> 44:20.850
这两个这个

44:20.850 --> 44:21.850
语处理

44:21.850 --> 44:22.850
pre processor

44:22.850 --> 44:23.850
和pose processor

44:23.850 --> 44:25.850
只是区别于咱们

44:25.850 --> 44:26.850
这样的一个

44:26.850 --> 44:27.850
两种操作

44:27.850 --> 44:28.850
而且这样的一个名字

44:28.850 --> 44:29.850
其实没什么

44:29.850 --> 44:30.850
太多大不了的一事

44:30.850 --> 44:31.850
明白我意思吗

44:31.850 --> 44:32.850
然后说一下

44:32.850 --> 44:33.850
autoprofixer

44:33.850 --> 44:34.850
它怎么来用

44:34.850 --> 44:35.850
这样的一个东西

44:35.850 --> 44:36.850
通过这个怎么来用

44:36.850 --> 44:37.850
我要引入一个

44:37.850 --> 44:38.850
这样一个工具

44:38.850 --> 44:39.850
这个autoprofixer

44:39.850 --> 44:40.850
它是一个什么

44:40.850 --> 44:42.850
它是一个插件

44:42.850 --> 44:43.850
它是一个插件

44:43.850 --> 44:44.850
这个css next

44:44.850 --> 44:46.850
它也是一个插件

44:46.850 --> 44:48.850
它也是个插件

44:48.850 --> 44:49.850
然后我说一下

44:49.850 --> 44:50.850
这俩东西怎么来用

44:50.850 --> 44:51.850
然后我引入一个东西

44:51.850 --> 44:52.850
这个东西叫什么

44:52.850 --> 44:54.850
叫posed css

44:54.850 --> 44:55.850
就是这俩插件

44:55.850 --> 44:56.850
独立字本

44:56.850 --> 44:57.850
它用不了

44:57.850 --> 44:58.850
它需要先经过

44:58.850 --> 44:59.850
posed css

44:59.850 --> 45:00.850
跟它去相配合

45:00.850 --> 45:01.850
它才能用

45:01.850 --> 45:03.850
这个posed css

45:03.850 --> 45:04.850
很多人对它

45:04.850 --> 45:05.850
可能会有了解

45:05.850 --> 45:06.850
但是了解的不深入

45:06.850 --> 45:07.850
我希望我今天的了解

45:07.850 --> 45:09.850
我希望我今天的讲解

45:09.850 --> 45:10.850
能把这个东西

45:10.850 --> 45:11.850
给你讲的透彻

45:11.850 --> 45:12.850
你能明白它到底

45:12.850 --> 45:13.850
是什么东西

45:13.850 --> 45:14.850
也避免一些

45:14.850 --> 45:15.850
它身上会存在的

45:15.850 --> 45:16.850
一些普遍性的起义

45:16.850 --> 45:17.850
好

45:17.850 --> 45:18.850
很多人都说

45:18.850 --> 45:19.850
posed css

45:19.850 --> 45:20.850
它是一个后处理器

45:20.850 --> 45:21.850
其实不是

45:21.850 --> 45:23.850
它只是一个工具

45:23.850 --> 45:24.850
这个工具是干嘛的

45:24.850 --> 45:25.850
我跟他说一下

45:25.850 --> 45:29.850
这个工具是用gss

45:29.850 --> 45:30.850
听我说

45:30.850 --> 45:31.850
gss实现的

45:31.850 --> 45:32.850
css

45:32.850 --> 45:33.850
啊

45:33.850 --> 45:34.850
叫

45:34.850 --> 45:35.850
叫抽象

45:35.850 --> 45:36.850
实现的css的

45:36.850 --> 45:38.850
抽象的

45:38.850 --> 45:40.850
抽象的语法

45:40.850 --> 45:41.850
语法数

45:41.850 --> 45:42.850
这个抽象的语法数

45:42.850 --> 45:43.850
啊

45:43.850 --> 45:44.850
叫什么呢

45:44.850 --> 45:45.850
叫

45:45.850 --> 45:46.850
叫a

45:46.850 --> 45:47.850
啊

45:47.850 --> 45:48.850
叫a对

45:48.850 --> 45:49.850
st

45:49.850 --> 45:50.850
啊

45:50.850 --> 45:51.850
叫abstract

45:51.850 --> 45:53.850
abstract

45:53.850 --> 45:54.850
哎abstract

45:54.850 --> 45:55.850
sin

45:55.850 --> 45:56.850
x

45:56.850 --> 45:57.850
3

45:58.850 --> 45:59.850
哎

46:00.850 --> 46:01.850
就是posed css

46:01.850 --> 46:02.850
它是用gss

46:02.850 --> 46:03.850
实现的抽象语法数

46:03.850 --> 46:04.850
什么意思

46:04.850 --> 46:05.850
就是抽象的语法数

46:05.850 --> 46:07.850
我再为大家解释一下

46:07.850 --> 46:08.850
它是这样的

46:08.850 --> 46:09.850
就是posed css

46:09.850 --> 46:10.850
它会和很多这样的

46:10.850 --> 46:11.850
插件相配合

46:11.850 --> 46:13.850
其中两个最典型的插件

46:13.850 --> 46:14.850
就是css max

46:14.850 --> 46:15.850
和这个autoplay fixer

46:15.850 --> 46:16.850
啊

46:16.850 --> 46:17.850
这两个东西

46:17.850 --> 46:18.850
posed css

46:18.850 --> 46:20.850
它做了前一部分的事

46:20.850 --> 46:21.850
就是它什么

46:21.850 --> 46:22.850
它把这个css

46:22.850 --> 46:23.850
就是它把你原来

46:23.850 --> 46:24.850
这个css

46:24.850 --> 46:25.850
给你解析成一个

46:25.850 --> 46:26.850
拿这个gss

46:26.850 --> 46:27.850
给你解析成一个语法数

46:27.850 --> 46:28.850
这个语法数

46:28.850 --> 46:29.850
非常的复杂

46:29.850 --> 46:30.850
非常的强大

46:30.850 --> 46:31.850
你至于在这个

46:31.850 --> 46:32.850
语法数上

46:32.850 --> 46:33.850
你可以编辑很多

46:33.850 --> 46:34.850
你想要的一些功能

46:34.850 --> 46:36.850
来实现一些

46:36.850 --> 46:37.850
就是

46:37.850 --> 46:38.850
怎么说的

46:38.850 --> 46:39.850
你至于你在这个

46:39.850 --> 46:40.850
语法数上

46:40.850 --> 46:41.850
你可以

46:41.850 --> 46:42.850
自己去定义一些

46:42.850 --> 46:43.850
这样的一个功能

46:43.850 --> 46:44.850
来实现你的

46:44.850 --> 46:45.850
这样的一个插件功能

46:45.850 --> 46:46.850
所以说

46:46.850 --> 46:47.850
posed css

46:47.850 --> 46:49.850
它只实现了前半步

46:49.850 --> 46:50.850
就是它形成了一个

46:50.850 --> 46:52.850
它形成了一个ast

46:52.850 --> 46:53.850
它形成了

46:53.850 --> 46:54.850
这样的一个语法数

46:54.850 --> 46:55.850
然后呢

46:55.850 --> 46:56.850
后续

46:56.850 --> 46:57.850
就是

46:57.850 --> 46:58.850
我这么来说

46:58.850 --> 46:59.850
它实现了一个语法数

46:59.850 --> 47:00.850
然后剩下的事

47:00.850 --> 47:01.850
它

47:01.850 --> 47:02.850
也挺厉害

47:02.850 --> 47:03.850
传手掌柜的

47:03.850 --> 47:04.850
叫什么叫

47:04.850 --> 47:05.850
留给后人来做了

47:05.850 --> 47:06.850
剩下的事

47:06.850 --> 47:07.850
剩下的事

47:07.850 --> 47:08.850
留给

47:08.850 --> 47:10.850
后人来做了

47:10.850 --> 47:11.850
它就不管了

47:11.850 --> 47:12.850
它说

47:12.850 --> 47:13.850
第一步posed css

47:13.850 --> 47:14.850
它就帮咱们

47:14.850 --> 47:15.850
实现了一个

47:15.850 --> 47:16.850
这样的一个ast

47:16.850 --> 47:17.850
这样的语法数

47:17.850 --> 47:18.850
然后基于这个

47:18.850 --> 47:19.850
语法数

47:19.850 --> 47:20.850
很多插件

47:20.850 --> 47:21.850
就是很多插件

47:21.850 --> 47:22.850
基于这个语法数

47:22.850 --> 47:23.850
进行了一些

47:23.850 --> 47:24.850
功能的编写

47:24.850 --> 47:25.850
就形成了

47:25.850 --> 47:26.850
不同类型的插件

47:27.850 --> 47:28.850
就包括这个

47:28.850 --> 47:29.850
autoprefixer

47:29.850 --> 47:30.850
再包括 css next

47:30.850 --> 47:32.850
都是基于posed css

47:32.850 --> 47:33.850
形成这样的一个

47:33.850 --> 47:34.850
语法数

47:34.850 --> 47:35.850
抽象的一个

47:35.850 --> 47:36.850
语法数来进行

47:36.850 --> 47:37.850
接下来的一个编写的

47:37.850 --> 47:38.850
也就是说

47:38.850 --> 47:39.850
它

47:39.850 --> 47:41.850
如果说posed css

47:41.850 --> 47:42.850
加上这样的插件

47:42.850 --> 47:43.850
是一个完整的部分的话

47:43.850 --> 47:44.850
posed css

47:44.850 --> 47:45.850
完成了就是

47:45.850 --> 47:46.850
一个

47:46.850 --> 47:47.850
完成了就是

47:47.850 --> 47:48.850
一个前半部分

47:49.850 --> 47:50.850
posed css

47:50.850 --> 47:51.850
就是完成了

47:51.850 --> 47:52.850
一个这样的

47:52.850 --> 47:53.850
实现语法数的

47:53.850 --> 47:54.850
前半部分

47:54.850 --> 47:55.850
然后后面的部分

47:55.850 --> 47:56.850
就是说

47:56.850 --> 47:57.850
它的设计

47:57.850 --> 47:58.850
是不是

47:58.850 --> 47:59.850
它的设计是什么

48:00.850 --> 48:01.850
就是posed css

48:01.850 --> 48:02.850
这个设计

48:02.850 --> 48:03.850
是不是充分体现了

48:04.850 --> 48:05.850
充分体现了

48:05.850 --> 48:06.850
咱们的一个

48:07.850 --> 48:08.850
变成了一个扩展性

48:08.850 --> 48:09.850
扩展性

48:09.850 --> 48:10.850
而现在确实

48:10.850 --> 48:11.850
posed css

48:11.850 --> 48:12.850
插件

48:12.850 --> 48:13.850
都有200多个了

48:14.850 --> 48:15.850
所以说

48:15.850 --> 48:16.850
posed css

48:16.850 --> 48:17.850
是一个灵活的

48:17.850 --> 48:18.850
插板

48:18.850 --> 48:19.850
是这样的一个功能

48:19.850 --> 48:20.850
它主要做的

48:20.850 --> 48:21.850
就是把這個ast给形成了

48:21.850 --> 48:22.850
然后接下来

48:22.850 --> 48:23.850
后面去瞧接

48:23.850 --> 48:24.850
各种东西

48:24.850 --> 48:25.850
posed css

48:25.850 --> 48:26.850
这个东西

48:26.850 --> 48:27.850
可以安装到

48:27.850 --> 48:28.850
咱们的一个

48:28.850 --> 48:29.850
集成化购电工具

48:29.850 --> 48:30.850
这个wipepad里面去

48:30.850 --> 48:31.850
跟它去一起

48:32.850 --> 48:33.850
在这个wipepad里面

48:33.850 --> 48:34.850
给loader上

48:34.850 --> 48:35.850
loader完之后

48:35.850 --> 48:36.850
在这个wipepad里面

48:36.850 --> 48:38.850
就可以用posed css

48:38.850 --> 48:39.850
wipad是一个

48:39.850 --> 48:40.850
进化的工具

48:40.850 --> 48:41.850
进化购电工具

48:41.850 --> 48:42.850
这个东西

48:42.850 --> 48:43.850
到咱们后期

48:43.850 --> 48:44.850
会给大家去详细讲解

48:44.850 --> 48:45.850
这个东西

48:45.850 --> 48:46.850
我就先说一嘴

48:46.850 --> 48:47.850
就到咱的wipepad里面

48:47.850 --> 48:49.850
可以用到posed css

48:49.850 --> 48:50.850
当然你用到posed css

48:50.850 --> 48:51.850
说你要了解

48:51.850 --> 48:52.850
它的一个机制是什么

48:52.850 --> 48:53.850
它没有

48:53.850 --> 48:54.850
做后面插件的事

48:54.850 --> 48:56.850
它只做了前半部分

48:56.850 --> 48:57.850
形成了一个抽象的

48:57.850 --> 48:58.850
语法数

48:58.850 --> 48:59.850
然后插件

48:59.850 --> 49:00.850
去基于它的语法数

49:00.850 --> 49:01.850
来实现

49:01.850 --> 49:02.850
每一个插件独特的功能

49:02.850 --> 49:03.850
插件里面最典型的

49:03.850 --> 49:04.850
两个插件

49:04.850 --> 49:05.850
一个是autoprefixer

49:05.850 --> 49:06.850
autoprefixer

49:06.850 --> 49:07.850
就是布齐的

49:07.850 --> 49:08.850
它是一个后处理器

49:08.850 --> 49:09.850
然后还有一个

49:09.850 --> 49:10.850
预处理器里面的

49:10.850 --> 49:11.850
一个插件

49:11.850 --> 49:12.850
叫cssnex的

49:12.850 --> 49:14.850
这个cssnex的

49:14.850 --> 49:15.850
有人说

49:15.850 --> 49:16.850
它是一个

49:16.850 --> 49:17.850
更加简化

49:17.850 --> 49:18.850
精炼版的一个lens

49:18.850 --> 49:19.850
和sars

49:19.850 --> 49:20.850
这也确实差不多

49:20.850 --> 49:21.850
也有人说它是什么

49:21.850 --> 49:22.850
说它是

49:22.850 --> 49:23.850
4.0的一个标准

49:23.850 --> 49:24.850
确实

49:24.850 --> 49:25.850
咱们的css

49:25.850 --> 49:26.850
可能说

49:26.850 --> 49:27.850
未来发展发展发展

49:27.850 --> 49:28.850
就会朝着cssnex

49:28.850 --> 49:29.850
这样的一个方式去发展

49:29.850 --> 49:30.850
我先给大家介绍一下

49:30.850 --> 49:31.850
这个cssnex

49:31.850 --> 49:32.850
是什么样的东西

49:32.850 --> 49:33.850
它确实是代表了

49:33.850 --> 49:34.850
css一个成长的方向

49:34.850 --> 49:35.850
所以现在

49:35.850 --> 49:36.850
你看很多人

49:36.850 --> 49:37.850
可能在炫技的时候

49:37.850 --> 49:38.850
写了一些css

49:38.850 --> 49:39.850
非常过分

49:39.850 --> 49:40.850
你说

49:40.850 --> 49:41.850
怎么能css

49:41.850 --> 49:42.850
还能这么写

49:42.850 --> 49:43.850
但确实这是一个

49:43.850 --> 49:44.850
css一个发展方向

49:44.850 --> 49:45.850
现在

49:45.850 --> 49:46.850
到css3的时候

49:46.850 --> 49:47.850
css还不具备

49:47.850 --> 49:48.850
基本的一个

49:48.850 --> 49:49.850
编程的功能

49:49.850 --> 49:50.850
什么叫编程功能

49:50.850 --> 49:51.850
都有变量

49:51.850 --> 49:52.850
够负值

49:52.850 --> 49:53.850
都有这样一个

49:53.850 --> 49:54.850
整体的一个

49:54.850 --> 49:55.850
能编成一些东西

49:55.850 --> 49:56.850
什么数据结构

49:56.850 --> 49:57.850
这样一个方法

49:57.850 --> 49:58.850
引用这样的东西

49:58.850 --> 49:59.850
自定义一些东西

49:59.850 --> 50:01.850
这个cssnex的

50:01.850 --> 50:03.850
它实现了这些功能

50:03.850 --> 50:04.850
它实现了这些功能

50:04.850 --> 50:06.850
我先跟大家说一下

50:06.850 --> 50:07.850
首先

50:07.850 --> 50:08.850
它还是一个插件

50:08.850 --> 50:09.850
它还是一个插件

50:09.850 --> 50:10.850
然后的插件

50:10.850 --> 50:11.850
能做哪些事

50:11.850 --> 50:12.850
其实跟lase

50:12.850 --> 50:13.850
和sars差不多

50:13.850 --> 50:14.850
只不过

50:14.850 --> 50:15.850
它的一些定义的功能

50:15.850 --> 50:16.850
比lase

50:16.850 --> 50:17.850
和sars定义的

50:17.850 --> 50:18.850
更加精准

50:18.850 --> 50:19.850
和强悍

50:19.850 --> 50:20.850
但是有一些部分

50:20.850 --> 50:21.850
确实比这个cssnex

50:21.850 --> 50:22.850
要强一些

50:22.850 --> 50:23.850
因为cssnex

50:23.850 --> 50:24.850
刚出现的

50:24.850 --> 50:25.850
sars

50:25.850 --> 50:26.850
经过今年哪月的

50:26.850 --> 50:27.850
积累了

50:27.850 --> 50:28.850
它的功能也很强的

50:28.850 --> 50:29.850
只不过

50:29.850 --> 50:30.850
这个cssnex

50:30.850 --> 50:31.850
出来之后

50:31.850 --> 50:32.850
它的功能

50:32.850 --> 50:33.850
比较高精端

50:33.850 --> 50:34.850
这样的一个情况

50:34.850 --> 50:35.850
所以说cssnex

50:35.850 --> 50:36.850
被一度炒为

50:36.850 --> 50:37.850
是下一个cssn

50:37.850 --> 50:38.850
四点人的版本

50:38.850 --> 50:39.850
我先给大家简单的

50:39.850 --> 50:40.850
写两个cssnex

50:40.850 --> 50:41.850
能实现的一些东西

50:41.850 --> 50:42.850
你来充景一下

50:42.850 --> 50:43.850
而且

50:43.850 --> 50:44.850
你看到别人

50:44.850 --> 50:45.850
这么来写的时候

50:45.850 --> 50:46.850
你别慌张

50:46.850 --> 50:47.850
它其实就是一个插件

50:47.850 --> 50:48.850
来

50:48.850 --> 50:49.850
然后我写一下

50:50.850 --> 50:51.850
比如说cssnex

50:51.850 --> 50:52.850
里面

50:52.850 --> 50:53.850
它也可以定一些辨量

50:53.850 --> 50:54.850
定一些辨量

50:54.850 --> 50:55.850
的话比较简单

50:55.850 --> 50:56.850
它定一些辨量

50:56.850 --> 50:57.850
先是杠杠开头

50:57.850 --> 50:58.850
比如说我现在写一个

50:58.850 --> 50:59.850
root跟标签

50:59.850 --> 51:00.850
在这跟标签里面

51:00.850 --> 51:01.850
定一些辨量

51:01.850 --> 51:02.850
这个root

51:02.850 --> 51:03.850
本恐惧

51:03.850 --> 51:04.850
它相当于在RTML里面

51:04.850 --> 51:05.850
就相当于

51:05.850 --> 51:06.850
RTML选择器

51:06.850 --> 51:07.850
相当于RTML选择器

51:07.850 --> 51:08.850
在RTML里面没区别

51:08.850 --> 51:09.850
当然讲到

51:09.850 --> 51:10.850
它的时候

51:10.850 --> 51:11.850
会注意讲的

51:11.850 --> 51:12.850
它的一些设想

51:13.850 --> 51:14.850
这个里面

51:14.850 --> 51:15.850
比如说定一个辨量

51:15.850 --> 51:16.850
定一个辨量

51:16.850 --> 51:17.850
什么呢

51:17.850 --> 51:19.850
高量

51:19.850 --> 51:20.850
高量的一个color

51:20.850 --> 51:21.850
高量color

51:21.850 --> 51:22.850
流射等于

51:22.850 --> 51:23.850
还是等于

51:23.850 --> 51:25.850
高量的话

51:25.850 --> 51:26.850
算了33吧

51:26.850 --> 51:27.850
是吧

51:27.850 --> 51:29.850
然后我们也想

51:29.850 --> 51:30.850
定义一下

51:30.850 --> 51:31.850
我们想定义什么

51:31.850 --> 51:32.850
定义一个这样的一个

51:32.850 --> 51:33.850
你就看下就可以了

51:33.850 --> 51:34.850
这块不需要你记

51:34.850 --> 51:35.850
你就知道

51:35.850 --> 51:36.850
它多强大也可以了

51:36.850 --> 51:38.850
这个是自定义的一个

51:38.850 --> 51:39.850
这个杠杆的一个形式

51:39.850 --> 51:41.850
就这里面自定义一个

51:41.850 --> 51:43.850
自定义一个这样的一个

51:43.850 --> 51:45.850
自定义下一个辨量

51:45.850 --> 51:46.850
定义一个这样的一个值

51:46.850 --> 51:48.850
它的一个这样的一个写法

51:48.850 --> 51:49.850
这里面

51:49.850 --> 51:50.850
有的是想定义一个这样的一个

51:50.850 --> 51:51.850
选择器

51:51.850 --> 51:52.850
定义一个这样的选择器

51:52.850 --> 51:53.850
也可以这么来写

51:53.850 --> 51:54.850
比如说这里面写一个

51:54.850 --> 51:55.850
什么呢

51:56.850 --> 51:57.850
写一个handline

51:57.850 --> 51:58.850
handline

51:59.850 --> 52:00.850
写一个这样的handline

52:00.850 --> 52:03.850
然后h1 h2 h3 h4

52:04.850 --> 52:05.850
h5 是吧

52:05.850 --> 52:06.850
h6 h6

52:06.850 --> 52:07.850
然后OK

52:07.850 --> 52:08.850
OK 有没有h7

52:08.850 --> 52:09.850
是没有 是吧

52:09.850 --> 52:10.850
然后现在我想

52:10.850 --> 52:11.850
实现一个功能

52:11.850 --> 52:12.850
我想实现什么功能

52:12.850 --> 52:14.850
就现在我想让这个

52:15.850 --> 52:17.850
这是自己定义的一个选择器

52:17.850 --> 52:18.850
这个选择器包含什么

52:18.850 --> 52:20.850
包含后面的所有的这些东西

52:20.850 --> 52:21.850
就是我把这些个选择器

52:21.850 --> 52:22.850
打包成它了

52:22.850 --> 52:23.850
你直接这么来调它

52:23.850 --> 52:24.850
其实就相当于

52:24.850 --> 52:25.850
调用了那么些东西

52:25.850 --> 52:27.850
然后在里面写一个

52:27.850 --> 52:28.850
比如说color

52:28.850 --> 52:29.850
color等于啥

52:29.850 --> 52:30.850
color等于杠杆

52:30.850 --> 52:31.850
handline color

52:31.850 --> 52:32.850
OK

52:32.850 --> 52:33.850
但是这么的写不行

52:33.850 --> 52:34.850
你还得加一个东西

52:34.850 --> 52:35.850
加一个什么

52:35.850 --> 52:36.850
加一个word

52:36.850 --> 52:37.850
这个强大强大到这个word

52:37.850 --> 52:38.850
这里面

52:38.850 --> 52:39.850
一个word可以引用

52:39.850 --> 52:40.850
上面的辨量

52:40.850 --> 52:41.850
然后这样的一个形式

52:41.850 --> 52:42.850
就可以编辑它了

52:42.850 --> 52:43.850
当然了

52:43.850 --> 52:44.850
这个

52:44.850 --> 52:46.850
这就是它一个功能的一个

52:46.850 --> 52:47.850
简单的一个小一个LM

52:47.850 --> 52:48.850
它就相当于什么

52:48.850 --> 52:49.850
当然什么叫

52:49.850 --> 52:50.850
你看

52:50.850 --> 52:51.850
这块是不是叫

52:51.850 --> 52:52.850
它叫预处理器

52:52.850 --> 52:53.850
预处理器什么样的形式

52:53.850 --> 52:54.850
就是咱们按照

52:54.850 --> 52:55.850
人家语法先编辑

52:55.850 --> 52:56.850
人家会怎么着

52:56.850 --> 52:57.850
会帮咱们

52:57.850 --> 52:59.850
把它转化成

52:59.850 --> 53:01.850
正常意义下的一个CSS

53:01.850 --> 53:02.850
这么来编程

53:02.850 --> 53:03.850
有这样的一个辨量

53:03.850 --> 53:04.850
是一个编程

53:04.850 --> 53:05.850
肯定是怎么着

53:05.850 --> 53:06.850
肯定是方便的

53:06.850 --> 53:08.850
那方便的一个结果就是啥

53:08.850 --> 53:09.850
人家得帮咱们

53:09.850 --> 53:10.850
去转换这样的CSS代码

53:10.850 --> 53:11.850
毕竟CSS

53:11.850 --> 53:12.850
现在的一个标

53:12.850 --> 53:13.850
准还不是这样的

53:13.850 --> 53:14.850
为啥叫可能是

53:14.850 --> 53:15.850
下一个CSS4

53:15.850 --> 53:16.850
因为CSS4

53:16.850 --> 53:17.850
现在还没提出来的

53:17.850 --> 53:18.850
至少现在

53:18.850 --> 53:19.850
这个东西

53:19.850 --> 53:21.850
还没有被广泛的使用的

53:21.850 --> 53:23.850
还没有被广泛的浏览器

53:23.850 --> 53:24.850
还没有被所有的浏览器

53:24.850 --> 53:25.850
所广泛接受的

53:25.850 --> 53:26.850
是吧

53:26.850 --> 53:27.850
所以说还得需要这个转换

53:27.850 --> 53:28.850
还得需要这个转换

53:30.850 --> 53:31.850
所以说它会帮咱们

53:31.850 --> 53:32.850
转换成这样的一个写法

53:32.850 --> 53:33.850
就是h1

53:33.850 --> 53:34.850
h2

53:34.850 --> 53:35.850
h3

53:35.850 --> 53:36.850
h4

53:36.850 --> 53:37.850
h4

53:37.850 --> 53:39.850
h5

53:39.850 --> 53:40.850
h5

53:40.850 --> 53:41.850
然后h6

53:41.850 --> 53:42.850
是吧

53:42.850 --> 53:43.850
转换一下正常写法

53:43.850 --> 53:44.850
正常写法是吧

53:44.850 --> 53:45.850
就是这个color

53:45.850 --> 53:47.850
就等于CSS3了

53:47.850 --> 53:49.850
可能说这么大一点代码

53:49.850 --> 53:50.850
你感觉可能

53:50.850 --> 53:51.850
上面这个大费周章是吧

53:51.850 --> 53:53.850
你等这个代码量多了之后

53:53.850 --> 53:54.850
你等这个东西可以反复使用之后

53:54.850 --> 53:56.850
你就知道这种写法多简变了

53:56.850 --> 53:57.850
当然

53:57.850 --> 53:58.850
这个CSS9的

53:58.850 --> 53:59.850
不只有这种写法

53:59.850 --> 54:00.850
还有很多很多这种写法

54:00.850 --> 54:01.850
没关系

54:01.850 --> 54:02.850
到时候咱们脚把派个手

54:02.850 --> 54:04.850
你把这个CSS9下载过来

54:04.850 --> 54:05.850
到时候咱们再来

54:05.850 --> 54:06.850
探究一下那个东西

54:06.850 --> 54:07.850
到底怎么来写

54:07.850 --> 54:08.850
其实这个东西

54:08.850 --> 54:09.850
开一下文档基本上就明白了

54:09.850 --> 54:10.850
CSS9学这个东西

54:10.850 --> 54:11.850
非常非常容易

54:12.850 --> 54:13.850
OK

54:13.850 --> 54:14.850
这是CSS9的

54:14.850 --> 54:15.850
然后我再说一下

54:15.850 --> 54:16.850
CSS9的

54:16.850 --> 54:17.850
它的一个所指是什么

54:17.850 --> 54:19.850
就多给你了解一下吧

54:19.850 --> 54:21.850
CSS9的这个东西

54:22.850 --> 54:24.850
它是用来

54:24.850 --> 54:26.850
实现一些

54:26.850 --> 54:28.850
未来的标准的

54:29.850 --> 54:30.850
换句话说

54:30.850 --> 54:32.850
未完全

54:32.850 --> 54:33.850
通过

54:33.850 --> 54:35.850
未完全在各大

54:35.850 --> 54:36.850
浏览器

54:36.850 --> 54:37.850
实现的

54:37.850 --> 54:39.850
实现的功能

54:39.850 --> 54:40.850
就说未来

54:40.850 --> 54:42.850
比如说CSS4定义了一些功能

54:42.850 --> 54:43.850
然后CSS9说

54:43.850 --> 54:44.850
那我先实现

54:44.850 --> 54:45.850
这个CSS4的一些功能吧

54:45.850 --> 54:47.850
至少让你写起来

54:47.850 --> 54:49.850
看起来像CSS4的一个标准

54:49.850 --> 54:50.850
但是真正实现起来

54:50.850 --> 54:52.850
其实还是用CSS3来实现的

54:52.850 --> 54:53.850
它会在内部

54:53.850 --> 54:54.850
帮咱们去转一下

54:54.850 --> 54:55.850
这样的东西

54:55.850 --> 54:56.850
但在写法上

54:56.850 --> 54:57.850
是不是咱更高级了

54:57.850 --> 54:58.850
更方便了是吧

54:58.850 --> 54:59.850
就这样一个东西

54:59.850 --> 55:00.850
CSS9的

55:00.850 --> 55:01.850
所以这是浴触理器

55:01.850 --> 55:03.850
和这个后触理器

55:03.850 --> 55:04.850
但是我要讲一下

55:04.850 --> 55:05.850
浴触理器和后触理器的

55:05.850 --> 55:06.850
一些区别

55:06.850 --> 55:07.850
这个区别是什么的

55:07.850 --> 55:08.850
首先

55:08.850 --> 55:09.850
第一个区别

55:09.850 --> 55:10.850
这个东西我觉得

55:10.850 --> 55:11.850
应该显而易见

55:11.850 --> 55:12.850
第一个区别

55:12.850 --> 55:13.850
是不是像它这个应用的区别

55:13.850 --> 55:14.850
浴触理器是

55:14.850 --> 55:15.850
比如说我要用SARS

55:15.850 --> 55:17.850
比如说我要用CSS9

55:17.850 --> 55:18.850
你要用它

55:18.850 --> 55:19.850
你就要接受它的

55:19.850 --> 55:20.850
一个语法形式

55:20.850 --> 55:21.850
咱是不是在写的时候

55:21.850 --> 55:22.850
听我说

55:22.850 --> 55:23.850
我这块不写了

55:23.850 --> 55:24.850
你就是

55:24.850 --> 55:25.850
浴触理器

55:25.850 --> 55:26.850
你要用它

55:26.850 --> 55:27.850
你就必须要接受

55:27.850 --> 55:28.850
它的一个语法形式

55:28.850 --> 55:30.850
就是你就必须得用

55:30.850 --> 55:31.850
人家的语法

55:31.850 --> 55:32.850
去编写这样的一个代码

55:32.850 --> 55:33.850
然后人家帮你去

55:33.850 --> 55:34.850
把这个代码

55:34.850 --> 55:35.850
转成CSS

55:35.850 --> 55:36.850
这样的一个过程

55:36.850 --> 55:37.850
这是浴触理器

55:37.850 --> 55:38.850
然后后触理器

55:38.850 --> 55:39.850
后触理器其实是在

55:39.850 --> 55:40.850
人家提供的一个环境下

55:40.850 --> 55:41.850
我们进行编写

55:41.850 --> 55:42.850
然后这个环境

55:42.850 --> 55:43.850
最后会帮咱们

55:43.850 --> 55:44.850
把这个代码来补齐

55:44.850 --> 55:45.850
是吧

55:45.850 --> 55:46.850
形成一个新的文件

55:46.850 --> 55:47.850
这个文件里面

55:47.850 --> 55:48.850
是补齐的一个CSS代码

55:48.850 --> 55:49.850
然后实现

55:49.850 --> 55:50.850
执行的一个文件

55:50.850 --> 55:51.850
就可以了

55:51.850 --> 55:52.850
这是后触理器

55:52.850 --> 55:53.850
所以这是它俩

55:53.850 --> 55:54.850
执行逻辑上的一个不同

55:54.850 --> 55:55.850
或者编写

55:55.850 --> 55:56.850
这样的一个形式

55:56.850 --> 55:57.850
上的不同

55:57.850 --> 55:58.850
大家说一下

55:58.850 --> 55:59.850
就是后触理器

55:59.850 --> 56:00.850
比浴触理器

56:00.850 --> 56:01.850
好在哪

56:01.850 --> 56:02.850
其实它俩正常

56:03.850 --> 56:04.850
就是浴触理器也有

56:04.850 --> 56:05.850
后触理器也有

56:05.850 --> 56:06.850
咱们都配合来使用的

56:06.850 --> 56:07.850
这个东西

56:07.850 --> 56:08.850
就是后触理器

56:08.850 --> 56:09.850
会比浴触理器好在哪

56:09.850 --> 56:10.850
因为它俩

56:10.850 --> 56:11.850
可能在实现一些功能上

56:11.850 --> 56:12.850
都可以实现

56:12.850 --> 56:13.850
比如说这个

56:13.850 --> 56:15.850
比如说这个

56:15.850 --> 56:16.850
比如说这个

56:16.850 --> 56:18.850
这个Auto Prefixer

56:18.850 --> 56:19.850
Auto Prefixer

56:19.850 --> 56:20.850
这个后触理器

56:20.850 --> 56:21.850
可能是实现的方便一点

56:21.850 --> 56:22.850
当然拿这个LetsperSARS

56:22.850 --> 56:23.850
订一些变量

56:23.850 --> 56:24.850
Mix-in一个混入

56:24.850 --> 56:25.850
其实也可以

56:25.850 --> 56:27.850
能姜巴的实现这个东西

56:27.850 --> 56:28.850
比如Mix-in

56:28.850 --> 56:29.850
可以订一个这样的一个

56:29.850 --> 56:30.850
哎呀

56:30.850 --> 56:31.850
不写了

56:31.850 --> 56:32.850
就Mix-in

56:32.850 --> 56:33.850
这样的一个混入

56:33.850 --> 56:34.850
这样的东西

56:34.850 --> 56:35.850
就是它也可以

56:35.850 --> 56:36.850
把那个兼容性的东西

56:36.850 --> 56:37.850
给咱们封脑好

56:37.850 --> 56:38.850
然后下次咱们

56:38.850 --> 56:39.850
再调用的时候

56:39.850 --> 56:40.850
就直接调用人家

56:40.850 --> 56:41.850
上面那个变量

56:41.850 --> 56:42.850
封脑好的变量

56:42.850 --> 56:43.850
就可以了

56:43.850 --> 56:44.850
相当一个方法

56:44.850 --> 56:45.850
这个方法里面

56:45.850 --> 56:46.850
把一些兼容性

56:46.850 --> 56:47.850
什么什么杠耳

56:47.850 --> 56:48.850
什么杠耳那些东西

56:48.850 --> 56:49.850
都写完了

56:49.850 --> 56:50.850
它也可以实现

56:50.850 --> 56:51.850
但是这个

56:51.850 --> 56:52.850
就说这样的个事

56:52.850 --> 56:53.850
就是浴触理器

56:53.850 --> 56:54.850
跟这个后触理器

56:54.850 --> 56:55.850
哎

56:55.850 --> 56:56.850
这个

56:56.850 --> 56:57.850
这个第二点

56:57.850 --> 56:58.850
这个后触理器

56:58.850 --> 56:59.850
到底比浴触理器

56:59.850 --> 57:00.850
好在哪

57:00.850 --> 57:01.850
就比如说

57:02.850 --> 57:03.850
咱们这个后触理器

57:03.850 --> 57:06.850
是现在写CSS的代码

57:06.850 --> 57:07.850
然后呢

57:07.850 --> 57:08.850
它帮咱们

57:08.850 --> 57:09.850
把这个兼容性给补齐

57:09.850 --> 57:10.850
是不是这样的个事

57:10.850 --> 57:11.850
就是

57:11.850 --> 57:12.850
如果有一天

57:12.850 --> 57:14.850
这个兼容性的问题

57:14.850 --> 57:15.850
不是问题了

57:15.850 --> 57:17.850
那我们这个CSS

57:17.850 --> 57:18.850
就是这样

57:18.850 --> 57:19.850
如果有一天

57:19.850 --> 57:20.850
我从说一遍

57:20.850 --> 57:22.850
就是后触理器是这样的

57:22.850 --> 57:25.850
我们在写这个CSS代码的时候

57:25.850 --> 57:27.850
只管按照正常的要求去写

57:27.850 --> 57:28.850
不用考虑兼容性的问题

57:28.850 --> 57:29.850
是吧

57:29.850 --> 57:30.850
然后后触理器

57:30.850 --> 57:31.850
会把咱们的兼容性的问题

57:31.850 --> 57:32.850
给咱们补齐

57:32.850 --> 57:33.850
是不是这样一个状况

57:33.850 --> 57:34.850
然后

57:34.850 --> 57:35.850
如果到未来某一天

57:35.850 --> 57:36.850
咱们的浏览器

57:36.850 --> 57:37.850
忽然都升级了

57:37.850 --> 57:38.850
升级成了什么样子

57:38.850 --> 57:40.850
所有的浏览器

57:40.850 --> 57:41.850
都不用写

57:41.850 --> 57:42.850
那个兼容性的情况了

57:42.850 --> 57:43.850
兼容性

57:43.850 --> 57:44.850
一片大同

57:44.850 --> 57:45.850
是吧

57:45.850 --> 57:46.850
大同社会了

57:46.850 --> 57:47.850
就是你直接写

57:47.850 --> 57:48.850
一个属性就可以了

57:48.850 --> 57:49.850
用不着去补齐

57:49.850 --> 57:50.850
那些兼容性的东西了

57:50.850 --> 57:51.850
那这个时候

57:51.850 --> 57:52.850
是不是相应的

57:52.850 --> 57:53.850
咱们之前写过的代码

57:53.850 --> 57:54.850
要根据

57:54.850 --> 57:55.850
现在的新的浏览器

57:55.850 --> 57:56.850
要维护升级

57:57.850 --> 57:58.850
现在咱考虑一下

57:58.850 --> 57:59.850
原来写的代码

57:59.850 --> 58:00.850
是不是什么样子的

58:00.850 --> 58:01.850
原来写的代码

58:01.850 --> 58:02.850
是不是就是已经

58:02.850 --> 58:03.850
就相当于是

58:03.850 --> 58:04.850
已经升级好的代码了

58:04.850 --> 58:06.850
就是不用改代码了

58:06.850 --> 58:07.850
不是 原来一开始

58:07.850 --> 58:09.850
一开始我写这个DIV的时候

58:09.850 --> 58:10.850
写这个Baudel Radius

58:10.850 --> 58:11.850
然后我拿这个后触理器

58:11.850 --> 58:12.850
来帮我来处理了

58:13.850 --> 58:14.850
他可能说

58:14.850 --> 58:15.850
把这个什么东西都补齐了

58:15.850 --> 58:16.850
把这个什么Wi-Pi都补齐了

58:16.850 --> 58:17.850
啥的

58:17.850 --> 58:18.850
是吧

58:18.850 --> 58:19.850
都这样一个

58:19.850 --> 58:20.850
把这个Wi-Pi都补齐了

58:20.850 --> 58:21.850
然后到现在

58:21.850 --> 58:22.850
过了几年之后

58:22.850 --> 58:23.850
人说这个速度暖气

58:23.850 --> 58:24.850
都支持了

58:24.850 --> 58:25.850
不用补这个东西了

58:25.850 --> 58:26.850
那我们现在

58:26.850 --> 58:28.850
还用维护升级的代码吧

58:28.850 --> 58:30.850
是不是就不用维护升级了

58:30.850 --> 58:31.850
用原来这个CSL

58:31.850 --> 58:32.850
是不是就可以了

58:32.850 --> 58:33.850
这是一个后触理器

58:33.850 --> 58:34.850
那个好处吧

58:34.850 --> 58:35.850
对吧 后触理器的好处吧

58:35.850 --> 58:36.850
就是你看

58:36.850 --> 58:37.850
现在还没实现的东西

58:37.850 --> 58:38.850
你看

58:38.850 --> 58:39.850
你就正常来编写

58:39.850 --> 58:40.850
你都当他来实现了

58:40.850 --> 58:41.850
然后我来帮你补齐

58:41.850 --> 58:42.850
是吧

58:42.850 --> 58:43.850
如果有一天

58:43.850 --> 58:44.850
这些东西都实现了

58:44.850 --> 58:45.850
那正好你就代码不用改了

58:45.850 --> 58:46.850
我直接把我后触理器撤掉

58:46.850 --> 58:47.850
你不用他不就完事了吗

58:47.850 --> 58:48.850
对吧

58:48.850 --> 58:49.850
你还用原来的CSL文件

58:49.850 --> 58:50.850
就可以了 是吧

58:50.850 --> 58:51.850
这是一个往后的

58:51.850 --> 58:52.850
一个可维护性

58:52.850 --> 58:53.850
更好一些

58:53.850 --> 58:55.850
而那个lites和sars

58:55.850 --> 58:56.850
假如说你用那个metzine

58:56.850 --> 58:57.850
来写那样的一个兼容的话

58:57.850 --> 58:58.850
其实用metzine

58:58.850 --> 58:59.850
还是写了一个这样的一个混入

58:59.850 --> 59:01.850
然后来编写这样的一个

59:01.850 --> 59:03.850
符合sars语法形式的一个

59:03.850 --> 59:05.850
这样的一个兼容性的一个代码

59:05.850 --> 59:06.850
对吧

59:06.850 --> 59:08.850
然后他把它给你生成这样的一个CSL

59:08.850 --> 59:09.850
对吧

59:09.850 --> 59:11.850
生成一个这样的一个CSL

59:11.850 --> 59:13.850
那是最终的执行的CSL是谁

59:13.850 --> 59:14.850
最终就是

59:14.850 --> 59:15.850
你编写的这个文件

59:15.850 --> 59:17.850
是这个sars文件

59:17.850 --> 59:18.850
然后给你生成的

59:18.850 --> 59:20.850
是给你转化好的

59:20.850 --> 59:21.850
这样的一个点

59:21.850 --> 59:22.850
CSL文件

59:22.850 --> 59:23.850
就是所有的兼容性

59:23.850 --> 59:24.850
都考虑好这个点

59:24.850 --> 59:25.850
CSL文件

59:25.850 --> 59:26.850
这两个文件

59:26.850 --> 59:29.850
如果说在时代的

59:29.850 --> 59:31.850
变化更替的过程中

59:31.850 --> 59:32.850
那个兼容性的问题

59:32.850 --> 59:34.850
已经不需要去考虑了

59:34.850 --> 59:35.850
那么这两个文件

59:35.850 --> 59:37.850
没有一个符合未来预期的

59:37.850 --> 59:38.850
因为未来预期的是

59:38.850 --> 59:40.850
你不用写兼容性的

59:40.850 --> 59:41.850
这样的一个内容

59:41.850 --> 59:43.850
因为我现在兼容性

59:43.850 --> 59:44.850
都已经实现了

59:44.850 --> 59:45.850
那你生成这个

59:45.850 --> 59:46.850
具备高复杂性的

59:46.850 --> 59:47.850
一个点

59:47.850 --> 59:48.850
CSL文件

59:48.850 --> 59:49.850
是不是太容易了

59:49.850 --> 59:51.850
原来写那个sars

59:51.850 --> 59:52.850
这个东西

59:52.850 --> 59:53.850
也没有什么太大用了

59:53.850 --> 59:54.850
是吧

59:54.850 --> 59:55.850
你还得改这个sars

59:55.850 --> 59:56.850
是吧

59:56.850 --> 59:57.850
所以说这样的一个情况

59:57.850 --> 59:58.850
对于未来的可维护性

59:58.850 --> 01:00:00.850
是不是后处理器

01:00:00.850 --> 01:00:01.850
这样的一个形式

01:00:01.850 --> 01:00:02.850
看起来要比

01:00:02.850 --> 01:00:03.850
预处理器要好一些

01:00:03.850 --> 01:00:05.850
能懂我这个意思吗

01:00:05.850 --> 01:00:06.850
反正说刚才说的

01:00:06.850 --> 01:00:07.850
比较啰嗦一些

01:00:07.850 --> 01:00:08.850
但我都是为了让你

01:00:08.850 --> 01:00:09.850
更多的同学

01:00:09.850 --> 01:00:10.850
能听懂这个东西

01:00:10.850 --> 01:00:11.850
我多摸一把句

01:00:11.850 --> 01:00:12.850
你听懂同学了

01:00:12.850 --> 01:00:13.850
你就这个耐心点

01:00:13.850 --> 01:00:14.850
没听懂同学

01:00:14.850 --> 01:00:15.850
你赶紧好好再听一听

01:00:15.850 --> 01:00:16.850
我这个东西

01:00:16.850 --> 01:00:17.850
是不是产术了

01:00:17.850 --> 01:00:18.850
还可以

01:00:18.850 --> 01:00:19.850
介绍一下

01:00:19.850 --> 01:00:20.850
预处理器和这个后处理器

01:00:20.850 --> 01:00:21.850
然后再说一个Pose的

01:00:21.850 --> 01:00:22.850
CSL这个东西

01:00:22.850 --> 01:00:23.850
然后这也跟咱们完事吧

01:00:23.850 --> 01:00:25.850
Pose的CSL这个东西

01:00:25.850 --> 01:00:26.850
有挺挺有意思

01:00:26.850 --> 01:00:27.850
刚才我们说了

01:00:27.850 --> 01:00:28.850
Pose的CSL

01:00:28.850 --> 01:00:29.850
是不是他做了一半的事

01:00:29.850 --> 01:00:30.850
他是一个工具

01:00:30.850 --> 01:00:31.850
是吧

01:00:31.850 --> 01:00:32.850
但是很多人就认为

01:00:32.850 --> 01:00:33.850
Pose的CSL

01:00:33.850 --> 01:00:34.850
就是后处理器

01:00:34.850 --> 01:00:35.850
这个代表

01:00:35.850 --> 01:00:36.850
实际上是吗

01:00:36.850 --> 01:00:37.850
不是

01:00:37.850 --> 01:00:38.850
Pose的CSL

01:00:38.850 --> 01:00:39.850
只是一个工具

01:00:39.850 --> 01:00:40.850
工具后面

01:00:40.850 --> 01:00:41.850
可以加很多个插件

01:00:41.850 --> 01:00:42.850
插件到底

01:00:42.850 --> 01:00:43.850
做了什么样的功能

01:00:43.850 --> 01:00:44.850
就代表着Pose的CSL

01:00:44.850 --> 01:00:45.850
加上这样的插件

01:00:45.850 --> 01:00:46.850
是整体实现了

01:00:46.850 --> 01:00:47.850
什么样的功能

01:00:47.850 --> 01:00:49.850
它最典型的两个插件

01:00:49.850 --> 01:00:50.850
就是一个是预处理器的

01:00:50.850 --> 01:00:51.850
一个是后处理器的

01:00:51.850 --> 01:00:53.850
所以说Pose的CSL

01:00:53.850 --> 01:00:55.850
你不可以把它说成是

01:00:55.850 --> 01:00:56.850
完全的

01:00:56.850 --> 01:00:57.850
就是你不能说

01:00:57.850 --> 01:00:58.850
它是绝对的后处理器

01:00:58.850 --> 01:00:59.850
是吧

01:00:59.850 --> 01:01:00.850
因为它CSL is next

01:01:00.850 --> 01:01:01.850
它是一个预处理器

01:01:01.850 --> 01:01:02.850
一个东西

01:01:02.850 --> 01:01:03.850
所以说Pose的CSL

01:01:03.850 --> 01:01:05.850
不能把它化成

01:01:05.850 --> 01:01:06.850
一个什么什么处理器

01:01:06.850 --> 01:01:07.850
因为它只做了

01:01:07.850 --> 01:01:08.850
准确的来讲

01:01:08.850 --> 01:01:09.850
它只做了一半的事

01:01:09.850 --> 01:01:10.850
它得加上插件

01:01:10.850 --> 01:01:11.850
才能变成一个

01:01:11.850 --> 01:01:12.850
什么什么处理器

01:01:12.850 --> 01:01:13.850
能懂我意思吗

01:01:13.850 --> 01:01:15.850
它加上Auto Prefixer

01:01:15.850 --> 01:01:16.850
它就是后处理器

01:01:16.850 --> 01:01:18.850
它加上CSL is next

01:01:18.850 --> 01:01:19.850
它就是预处理器

01:01:19.850 --> 01:01:20.850
能懂我意思吗

01:01:20.850 --> 01:01:21.850
所以预处理器

01:01:21.850 --> 01:01:22.850
和后处理器的概念

01:01:22.850 --> 01:01:23.850
大家要清楚

01:01:23.850 --> 01:01:24.850
然后它俩的一点

01:01:24.850 --> 01:01:25.850
小区别大家要清楚

01:01:25.850 --> 01:01:26.850
但是在应用的时候

01:01:26.850 --> 01:01:27.850
其实是预处理器

01:01:27.850 --> 01:01:28.850
和后处理器

01:01:28.850 --> 01:01:30.850
一般情况它都一起来用

01:01:30.850 --> 01:01:32.850
就把它加到一起来用

01:01:32.850 --> 01:01:33.850
这样的一个形式

01:01:33.850 --> 01:01:35.850
把插件其实有很多

01:01:35.850 --> 01:01:36.850
还有200多个

01:01:36.850 --> 01:01:37.850
就200多个插件

01:01:37.850 --> 01:01:38.850
其实能用到的

01:01:38.850 --> 01:01:39.850
其实也不是那么太多

01:01:39.850 --> 01:01:40.850
你可以自己了解一下

01:01:40.850 --> 01:01:41.850
上网上搜一搜

01:01:41.850 --> 01:01:43.850
这个东西还比较简单的

01:01:43.850 --> 01:01:45.850
那么关于这堂课

01:01:45.850 --> 01:01:47.850
咱们对CSS的一些介绍

01:01:47.850 --> 01:01:49.850
包括Pre-Processor

01:01:49.850 --> 01:01:51.850
Post-Processor这样的介绍

01:01:51.850 --> 01:01:52.850
就先到这

01:01:52.850 --> 01:01:53.850
然后下堂课

01:01:53.850 --> 01:01:54.850
咱们正式开启

01:01:54.850 --> 01:01:56.850
咱们CSS3的内容的一个讲解

01:01:56.850 --> 01:01:57.850
那么这堂课的介绍

01:01:57.850 --> 01:01:58.850
咱们就先到这了

01:01:58.850 --> 01:01:59.850
好吧 朋友们

01:01:59.850 --> 01:02:00.850
如果有不太懂的一个问题

01:02:00.850 --> 01:02:01.850
可以私下来问我

01:02:01.850 --> 01:02:02.850
那么这堂课

01:02:02.850 --> 01:02:04.850
咱们暂时没有作业

01:02:04.850 --> 01:02:05.850
有一个作业

01:02:05.850 --> 01:02:06.850
您去把这个东西

01:02:06.850 --> 01:02:07.850
好好复习一下

01:02:07.850 --> 01:02:08.850
写个笔记

01:02:08.850 --> 01:02:09.850
学习不要糊弄自己

01:02:09.850 --> 01:02:10.850
好吧

01:02:10.850 --> 01:02:11.850
咱们这堂课可以先到这

01:02:11.850 --> 01:02:12.850
下堂课咱们继续

