WEBVTT

00:00.690 --> 00:03.090
好 这就可能给大家介绍一下

00:03.090 --> 00:07.490
ES6里面用的非常非常多的一个功能

00:07.490 --> 00:09.290
就是模板制服串

00:09.290 --> 00:12.690
我们在ES6之前呢

00:12.690 --> 00:16.090
要实现下面两个功能的时候呢

00:16.090 --> 00:18.090
都显得比较繁琐

00:18.090 --> 00:30.590
就是ES6之前处理制服串繁琐的两个方面

00:31.390 --> 00:32.890
哪两个方面呢

00:32.890 --> 00:36.090
第一个就是多航制服串

00:36.090 --> 00:37.590
就是有的时候我们要写个制服串

00:37.590 --> 00:39.190
它有很多航

00:39.190 --> 00:40.190
你怎么处理呢

00:40.190 --> 00:42.190
你想想你以前咋处理

00:42.190 --> 00:44.290
以前我们的代码我们用八码

00:44.290 --> 00:45.890
以前代码我们咋处理呢

00:45.890 --> 00:47.690
比方说这第一航

00:47.690 --> 00:53.990
第一航就邓哥喜欢秋葵

00:53.990 --> 00:55.990
然后我们想换一个航

00:55.990 --> 00:56.990
换一个航怎么处理呢

00:56.990 --> 00:58.790
你是不是得加上写杠人啊

00:58.790 --> 00:59.390
对吧

00:59.390 --> 01:04.790
然后再写个邓哥也喜欢韭菜

01:06.790 --> 01:07.990
你是不是得这样子写

01:07.990 --> 01:09.190
那你以前能不能这样子写呢

01:09.190 --> 01:10.390
能不能直接换航呢

01:10.390 --> 01:12.190
你直接换航的话要抱错了

01:12.190 --> 01:14.190
尽管在ES5里面呢

01:14.190 --> 01:15.590
它提供了这么一种方式

01:15.590 --> 01:16.590
允许你直接换航

01:16.590 --> 01:18.090
就你加个写杠

01:18.090 --> 01:19.290
你加个写杠呢

01:19.290 --> 01:20.390
你后边直接写

01:20.390 --> 01:22.390
直接在原代码里边挑换航

01:22.390 --> 01:24.290
他认为是一个写杠

01:24.290 --> 01:25.790
那么这样子写也可以

01:25.790 --> 01:26.590
不过呢

01:26.590 --> 01:27.790
你如果说航多了

01:27.790 --> 01:30.290
是不是也得出现很多很多的写杠

01:30.290 --> 01:30.490
对吧

01:30.490 --> 01:32.090
这是以前的写法

01:32.090 --> 01:32.690
要不然的话

01:32.690 --> 01:34.290
以前还喜欢这么写

01:34.290 --> 01:36.090
我给大家演示一下

01:36.090 --> 01:37.690
以前如果说有很多航的话

01:37.690 --> 01:38.990
还喜欢这么写

01:38.990 --> 01:40.490
写多个字母串

01:40.490 --> 01:42.490
这是第一个字母串

01:43.690 --> 01:44.890
再来一个

01:44.890 --> 01:45.990
第二个字母串

01:45.990 --> 01:47.390
然后这些字母串之间呢

01:47.390 --> 01:51.090
用换航服拼接起来就写杠

01:51.090 --> 01:53.390
这也是以前的一种写法

01:53.390 --> 01:55.390
比较常见的一种写法

01:55.390 --> 01:55.990
总归呢

01:55.990 --> 01:57.190
你不管用什么写法呢

01:57.190 --> 01:59.590
总显得比较繁朔

01:59.590 --> 02:00.590
比较繁朔

02:00.590 --> 02:02.790
最好的写法是什么呢

02:02.790 --> 02:04.090
就是你直接这样子写

02:05.390 --> 02:06.390
你直接这样子写

02:06.390 --> 02:08.290
这不是最自然的写法吗

02:08.290 --> 02:09.690
但是以前打不到

02:09.690 --> 02:10.790
这是第一个问题

02:10.790 --> 02:13.290
处理多航字母串的比较繁朔

02:13.290 --> 02:15.090
第二个问题是字母串拼接

02:16.390 --> 02:18.090
拼接起来是比较繁朔的

02:18.090 --> 02:19.790
就是说如果在你在字母串里边

02:19.790 --> 02:21.290
要拼接一些变量

02:21.290 --> 02:22.990
你怎么拼接呢

02:22.990 --> 02:24.290
你是不是在这里呢

02:24.290 --> 02:26.290
用一个字母串结尾

02:26.290 --> 02:27.690
然后呢写两个加号

02:27.690 --> 02:30.390
如果说一旦拼接的东西很多了

02:30.390 --> 02:31.890
那你这里写上去了

02:31.890 --> 02:34.290
代码是不是看的非常非常不舒服

02:34.290 --> 02:35.890
看的非常非常混乱

02:37.090 --> 02:38.290
特别是碰到什么

02:38.290 --> 02:39.690
在中货号啊

02:39.690 --> 02:40.590
大货号啊

02:40.590 --> 02:41.690
或者是兜号啊

02:41.690 --> 02:42.290
单引号

02:42.290 --> 02:43.590
双引号之间啊

02:43.590 --> 02:44.890
来进行拼接的时候

02:44.890 --> 02:46.390
就显得特别特别繁朔

02:46.390 --> 02:48.390
如果说你之前写过类册代码的话

02:48.390 --> 02:49.790
你一定知道我来说什么

02:49.790 --> 02:50.890
你没有写过类册代码

02:50.890 --> 02:51.990
你也感觉到

02:51.990 --> 02:53.490
拼接字母串那一块呢

02:53.490 --> 02:55.290
也显得比较麻烦

02:55.290 --> 02:56.790
好到了es6之后呢

02:56.790 --> 02:57.490
这两个问题呢

02:57.490 --> 02:59.490
都得到了非常好的解决

02:59.490 --> 03:00.790
因为es6里边呢

03:00.790 --> 03:02.090
给你提供了一种

03:02.090 --> 03:04.490
字符串的新型的书写方式

03:04.490 --> 03:06.190
叫做母版字符串啊

03:06.190 --> 03:07.790
母版字符串是什么呢

03:07.790 --> 03:08.590
在es6中

03:09.790 --> 03:11.290
es6中啊

03:11.290 --> 03:15.090
提供了母版字符串的书写

03:15.090 --> 03:19.690
可以非常方便的啊

03:19.690 --> 03:23.490
方便的换行和拼接啊

03:23.590 --> 03:25.790
那么母版字符串怎么来书写呢

03:25.790 --> 03:28.790
要做的紧式

03:28.790 --> 03:31.790
要做的紧紧式

03:31.790 --> 03:34.190
将字符串

03:34.190 --> 03:38.590
字符串的开始

03:38.590 --> 03:41.390
或结为

03:41.390 --> 03:42.590
改为

03:42.590 --> 03:43.890
不再使用双引号

03:43.890 --> 03:44.890
或者是单引号

03:44.890 --> 03:45.790
改为什么呢

03:45.790 --> 03:48.190
改为这个符号

03:48.190 --> 03:49.590
我这里怎么写呢

03:49.590 --> 03:52.990
改为这个符号

03:53.090 --> 03:54.890
这叫反斜杠符号

03:54.890 --> 03:55.990
改为这个符号就行了

03:55.990 --> 03:57.490
也就是说我们要实现这个换行

03:57.490 --> 03:58.090
怎么做

03:58.090 --> 03:59.490
是不是直接改成反斜杠

03:59.490 --> 03:59.890
完了

03:59.890 --> 04:01.490
你看就直接换行了

04:01.490 --> 04:02.390
啊

04:02.390 --> 04:04.090
你看看着吧

04:04.090 --> 04:05.490
Texas的输出啊

04:05.490 --> 04:08.630
我们这里运行出来

04:08.630 --> 04:09.930
啊

04:09.930 --> 04:10.730
你看

04:11.930 --> 04:14.430
是不是就变成了有换行的字符串了

04:14.430 --> 04:14.930
对吧

04:14.930 --> 04:16.430
就特别特别简单啊

04:16.430 --> 04:17.730
只不过你换行的时候

04:17.730 --> 04:18.530
你要注意一下啊

04:18.530 --> 04:19.030
这里

04:19.030 --> 04:20.330
尽量不要加type键

04:20.330 --> 04:21.730
如果你加type键的话

04:21.730 --> 04:22.730
那么这里有空格

04:22.730 --> 04:23.230
对吧

04:23.230 --> 04:24.730
那么形成的字符串里边呢

04:24.730 --> 04:26.030
这里也会有空格啊

04:26.030 --> 04:27.430
也会有空格

04:27.430 --> 04:28.630
明白的意思吧

04:28.630 --> 04:30.230
就说你这里写的什么字符呢

04:30.230 --> 04:31.830
你这里原代码敲的换行

04:31.830 --> 04:32.630
敲的空格呢

04:32.630 --> 04:35.030
他都会反映到字符串里边

04:35.030 --> 04:35.130
啊

04:35.130 --> 04:36.230
这是关于换行

04:36.230 --> 04:37.830
换行是不是很轻松就解决了

04:37.830 --> 04:38.830
那么另外一个问题

04:38.830 --> 04:40.430
字符串拼接怎么办呢

04:40.430 --> 04:41.230
拼接的话

04:41.230 --> 04:42.930
你能不能使用原来的方式拼接呢

04:42.930 --> 04:43.830
也可以啊

04:43.830 --> 04:45.430
比方说我们这里呢

04:45.430 --> 04:45.930
呃

04:45.930 --> 04:46.830
写两个辩量啊

04:46.830 --> 04:48.030
navi

04:48.030 --> 04:50.030
这是丘奎

04:50.030 --> 04:50.730
啊

04:50.730 --> 04:51.430
然后呢

04:51.530 --> 04:52.130
再来一个啊

04:52.130 --> 04:53.630
navi 2

04:53.630 --> 04:54.630
这是呢

04:54.630 --> 04:54.930
呃

04:54.930 --> 04:56.030
香菜

04:56.030 --> 04:57.130
啊

04:57.130 --> 04:57.230
好

04:57.230 --> 04:58.030
那么我们这里呢

04:58.030 --> 05:00.030
想把这两个东西拼接到字符串里边

05:00.030 --> 05:00.630
怎么拼接呢

05:00.630 --> 05:03.030
我们也可以使用之前的方式啊

05:03.030 --> 05:04.230
来进行拼接

05:04.230 --> 05:05.430
就是navi 1

05:05.430 --> 05:05.730
对吧

05:05.730 --> 05:06.230
但是呢

05:06.230 --> 05:07.530
这样子显得就太low了

05:07.530 --> 05:09.230
因为你既然用了模板字符

05:09.230 --> 05:11.530
错过后拼接已经变得非常简单了

05:11.530 --> 05:13.030
拼接的时候怎么拼接呢

05:13.030 --> 05:14.330
啊

05:21.430 --> 05:24.530
一个表达式不管是辩量也好还是一个运算也好啊

05:24.530 --> 05:27.330
总之里把介式表达式拼接到字符串里边

05:27.330 --> 05:29.730
那么非常简单只需要

05:30.830 --> 05:34.630
在模板字符串中使用

05:34.630 --> 05:37.630
下面那个代码多了两个大括号

05:37.630 --> 05:38.030
然后呢

05:38.030 --> 05:40.030
这里边写上介式

05:41.430 --> 05:43.830
比较达式就完了啊

05:43.830 --> 05:45.130
也就是说我们在这里呢

05:45.130 --> 05:47.830
比方说这里这一块要拼接navi的内容

05:47.830 --> 05:49.230
那么我们这里在这里怎么写呢

05:49.230 --> 05:50.830
写上一个多了

05:50.830 --> 05:52.030
两个大括号

05:52.030 --> 05:55.030
那么这个两个大括号里边写的就是介式表达式

05:55.030 --> 05:56.430
比方说navi

05:56.430 --> 05:57.430
那么这样子一来呢

05:57.430 --> 06:00.430
他会把这个navi 这个表达式的计算结果

06:00.430 --> 06:02.230
直接放到这一块

06:02.230 --> 06:03.430
啊直接放到这一块

06:03.430 --> 06:05.030
替换掉这个位置

06:05.030 --> 06:07.390
啊比方说这里啊喜欢香菜

06:07.390 --> 06:08.430
navi 2

06:08.430 --> 06:08.630
对吧

06:08.630 --> 06:09.630
是不是这样的拼接就完了

06:09.630 --> 06:10.630
这儿了

06:10.630 --> 06:12.130
啊保存

06:12.130 --> 06:12.630
你看一下

06:12.630 --> 06:13.430
是不是拼接最后

06:13.430 --> 06:14.530
最后形成的字符串

06:14.530 --> 06:16.130
是不是变成个拼接的结果了

06:16.130 --> 06:16.330
对吧

06:16.330 --> 06:19.430
他会把这个表达式就直接放到这里

06:20.430 --> 06:21.030
嗯

06:21.030 --> 06:22.430
你们明白这个意思吗

06:22.430 --> 06:23.730
啊不仅如此呢

06:23.730 --> 06:24.630
这个表达式

06:24.630 --> 06:25.430
他既然可以

06:25.430 --> 06:26.230
他可以是变量

06:26.230 --> 06:27.730
也可以是任何东西啊

06:27.730 --> 06:30.130
表达式啊

06:30.130 --> 06:32.330
可以是任何

06:32.330 --> 06:34.630
有意义的数据

06:34.630 --> 06:36.030
啊比方说我们这里呢

06:36.030 --> 06:38.130
写上这么一个表达式啊比方说啊

06:38.130 --> 06:39.430
1加3乘1

06:39.430 --> 06:41.530
2减除以0.5

06:41.530 --> 06:43.130
啊随便写一个啊随便写一个

06:43.130 --> 06:44.430
那么他会把这个表达式呢

06:44.430 --> 06:45.230
计算结果呢

06:45.230 --> 06:46.130
也会拼接到这

06:46.130 --> 06:47.230
所以是表达式啊

06:47.230 --> 06:48.030
不是语句

06:48.030 --> 06:48.830
你不能在这里过写

06:48.830 --> 06:50.730
什么义父判断之类的啊

06:50.730 --> 06:51.830
好保存啊

06:51.830 --> 06:52.230
你看

06:53.230 --> 06:53.630
是吧

06:53.630 --> 06:55.030
是不是拼放到这个位置的

06:55.030 --> 06:57.230
他会把这个东西替换掉这个位置

06:57.230 --> 06:57.430
对吧

06:57.430 --> 06:57.830
以后呢

06:57.830 --> 06:58.430
拼接字符串

06:58.430 --> 07:00.430
是不是变得非常非常容易

07:00.430 --> 07:01.830
而且容易阅读了

07:01.830 --> 07:03.030
对不对

07:03.030 --> 07:03.630
而且呢

07:03.630 --> 07:05.630
这个表达式还可以嵌套啊

07:05.630 --> 07:08.330
表达式是可以嵌套的

07:08.330 --> 07:09.430
这个东西不用我说

07:09.430 --> 07:10.430
那你都应该明白

07:10.430 --> 07:12.030
比方说我们在多了里边

07:12.030 --> 07:13.230
再写上一个什么呢

07:13.230 --> 07:14.330
再写上一个

07:14.330 --> 07:15.430
你看既然是表达式

07:15.430 --> 07:18.030
是不是这里是不是可以写个字符串啊

07:18.030 --> 07:18.530
对吧

07:18.630 --> 07:20.830
你看这个在这里边是借识代码啊

07:20.830 --> 07:21.830
你们看到这里边

07:21.830 --> 07:23.130
这里边是不是借识代码

07:23.130 --> 07:24.630
借识代码里边写字符串

07:24.630 --> 07:26.430
是不是也可以写模板字符串

07:26.430 --> 07:26.730
对吧

07:26.730 --> 07:28.930
在这里边写上一个模板字符串啊

07:28.930 --> 07:31.130
借就是表达式

07:32.130 --> 07:34.130
中的模板字符串

07:34.130 --> 07:35.830
是不是也可以这样的写啊

07:35.830 --> 07:36.730
这个写没什么意义

07:36.730 --> 07:37.630
你还不如直接

07:37.630 --> 07:39.030
如果说你是一个常量的话

07:39.030 --> 07:40.130
你还不如直接把这个

07:40.130 --> 07:40.930
换到这个位置

07:40.930 --> 07:41.530
对吧

07:41.530 --> 07:42.930
是不是一样的

07:42.930 --> 07:43.930
这样子写和这样子写

07:43.930 --> 07:44.730
是不是一样的

07:44.730 --> 07:45.230
对吧

07:45.230 --> 07:46.830
你这个地方借识里边

07:46.830 --> 07:47.630
是不是

07:47.630 --> 07:49.730
也可以写个模板字符串啊

07:49.730 --> 07:50.130
你看

07:50.930 --> 07:51.530
没问题吧

07:52.430 --> 07:53.030
没问题吧

07:53.030 --> 07:55.630
是不是也可以写上一个模板字符串

07:55.630 --> 07:56.630
你看吧

07:56.630 --> 07:57.830
是没问题啊

07:57.830 --> 07:59.430
就是把这个借识代码了

07:59.430 --> 08:01.030
这个也是借识代码嘛

08:01.030 --> 08:02.030
也是借识表达式

08:02.030 --> 08:02.930
它是一个字符串嘛

08:02.930 --> 08:04.430
把这个字符串字面亮了

08:04.430 --> 08:05.830
替换掉这个位置

08:05.830 --> 08:06.630
是一样的

08:06.630 --> 08:07.030
不过呢

08:07.030 --> 08:09.830
在这里边是不是也可以继续继续来写

08:09.830 --> 08:10.730
对吧

08:10.730 --> 08:11.730
不要在这里边啊

08:13.130 --> 08:14.530
表达式动的模板字符串

08:14.530 --> 08:15.930
然后来在这里边继续

08:15.930 --> 08:17.030
是不是可以继续

08:17.130 --> 08:18.630
在这个模板字符串里边

08:18.630 --> 08:19.830
在这个模板字符串里边

08:19.830 --> 08:22.930
是不是继续可以写上这个借识表达式

08:22.930 --> 08:23.830
对吧

08:23.830 --> 08:24.830
我们来看一下啊

08:24.830 --> 08:25.630
比方说

08:26.230 --> 08:27.830
那五一啊

08:28.730 --> 08:29.830
平阶上啊

08:29.830 --> 08:31.830
那五二啊

08:31.830 --> 08:33.330
是不是可以这样子写

08:33.330 --> 08:33.830
你看呀

08:33.830 --> 08:35.030
是不是就形成了千套了

08:35.030 --> 08:35.830
秋葵香餐

08:35.830 --> 08:37.030
他怎么运作的啊

08:37.030 --> 08:38.330
那么他读到这里的时候

08:38.330 --> 08:39.630
你看他看到这么一个东西

08:39.630 --> 08:41.230
他要计算这个表达式

08:41.230 --> 08:42.630
这个表达式计算的时候

08:42.630 --> 08:44.030
他又是个模板字符串

08:44.030 --> 08:45.630
他要把这个东西计算出来

08:45.630 --> 08:46.530
这个东西计算出来

08:46.530 --> 08:47.530
是不是秋葵香餐

08:47.530 --> 08:48.030
对吧

08:48.030 --> 08:49.230
这个东西计算出来了过后

08:49.230 --> 08:50.630
是不是替换掉这个位置

08:50.630 --> 08:50.830
哎

08:50.830 --> 08:51.230
这个位置

08:51.230 --> 08:52.530
这个字不出来就形成出来了

08:52.530 --> 08:53.530
这个这个字不出来

08:53.530 --> 08:55.430
又替换掉这个位置啊

08:55.430 --> 08:56.930
他可以继续千套的

08:56.930 --> 08:58.230
明白的意思吗

08:58.230 --> 08:58.430
啊

08:58.430 --> 08:58.830
你看一下

08:58.830 --> 08:59.330
这个读起来

08:59.330 --> 09:00.330
也非常非常好读

09:00.330 --> 09:00.830
对吧

09:00.830 --> 09:01.830
非常非常容易越读

09:01.830 --> 09:04.530
一读都知道是什么意思啊

09:04.530 --> 09:07.230
这就是模板字符串啊

09:07.230 --> 09:08.530
他给我们以后呢

09:08.530 --> 09:10.130
书写字符串拼接啊

09:10.130 --> 09:11.930
多行字符串带来的变化

09:11.930 --> 09:12.530
那么以后呢

09:12.530 --> 09:14.530
我们反而是遇到字符串拼接

09:14.530 --> 09:16.430
或者是多行字符串的地方呢

09:16.430 --> 09:18.930
我们都可以大胆的去使用模板字符串

09:18.930 --> 09:21.130
用起来非常非常方便

09:21.130 --> 09:21.730
另外一个呢

09:21.730 --> 09:23.030
就是在模板字符串里边

09:23.030 --> 09:24.930
如果说你能不能写转译符呢

09:24.930 --> 09:26.130
也可以写转译符啊

09:26.130 --> 09:29.130
比方说我们这里要换多换几个行啊

09:29.130 --> 09:30.830
写个n啊

09:30.830 --> 09:31.730
这里是一个

09:31.730 --> 09:33.730
要一个字符串啊

09:33.730 --> 09:34.730
你看这里是不是换行了

09:34.730 --> 09:35.530
是一样的啊

09:35.530 --> 09:36.430
是一样的

09:36.430 --> 09:36.930
另外呢

09:36.930 --> 09:37.970
如果说你在字符

09:37.970 --> 09:40.430
模板字符串里边要写上

09:40.430 --> 09:42.230
如果说你要使用一些特殊字符

09:42.230 --> 09:43.670
比方说我们这里有个特殊字符

09:43.670 --> 09:45.870
就是多了两个大伙号的组合

09:45.870 --> 09:46.470
对吧

09:46.470 --> 09:48.270
当然如果说你前面再写个多了的话

09:48.270 --> 09:48.670
这个多了

09:48.670 --> 09:49.670
一看颜色都知道

09:49.670 --> 09:51.070
这是个普通字符串

09:51.070 --> 09:51.470
但是呢

09:51.470 --> 09:53.070
如果说你这样子写的话

09:53.070 --> 09:54.770
是不是就变成了

09:54.770 --> 09:56.170
要进行插纸了

09:56.170 --> 09:58.770
在字符串里边插入一个介式表达式了

09:58.770 --> 10:00.070
那么如果说你在字符串里边

10:00.070 --> 10:01.670
要打印出这么一个东西啊

10:01.670 --> 10:03.670
比方说这个啊

10:03.670 --> 10:04.670
我们要这样子输出

10:04.670 --> 10:07.970
在模板字符串中啊

10:07.970 --> 10:10.270
使用这个玩意儿啊

10:10.270 --> 10:12.270
介式表达式啊

10:12.270 --> 10:14.470
可以进行插纸

10:14.470 --> 10:17.570
就在把一些介式的纸插入到表达式里边

10:17.570 --> 10:19.070
但是这样子写肯定要不行

10:19.070 --> 10:22.970
因为它会把它解读成为一个特殊的意思啊

10:22.970 --> 10:25.270
如果说你要把它变成一个普通的字符串的话

10:25.270 --> 10:27.770
你只需要给多了加上个转移啊

10:27.770 --> 10:28.670
把多了转移

10:28.670 --> 10:30.070
因为多了一转移的话

10:30.070 --> 10:32.470
由于前面不存在一个多了特殊字符了

10:32.470 --> 10:34.270
它变成多了变成一个普通字符了

10:34.270 --> 10:36.470
那么后边大伙号自然不起任何作用了

10:36.470 --> 10:38.070
那么你看一下

10:38.070 --> 10:40.270
那你看这个字笔远方不如那种输出了

10:40.270 --> 10:40.670
对吧

10:40.670 --> 10:41.970
就特别特别简单啊

10:42.070 --> 10:43.070
特别简单

10:43.070 --> 10:43.270
好

10:43.270 --> 10:46.470
这就是关于模板字符串的核心功能

10:46.470 --> 10:49.170
其实模板字符串的还有一些不太常见的功能

10:49.170 --> 10:51.470
我们留到下节课扩展课程里边再说吧

10:51.470 --> 10:51.770
好吧

