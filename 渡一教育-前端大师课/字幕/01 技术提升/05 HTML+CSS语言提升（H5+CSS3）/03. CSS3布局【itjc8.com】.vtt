WEBVTT

00:00.300 --> 00:05.300
好了 同学们 我们这节课来学习CSS3的布局

00:06.300 --> 00:11.800
布局这一块应该说是CSS3给我们带来的一个巨大的变化

00:12.300 --> 00:16.800
你看我们过去的布局的方案 无外乎就是这么几种

00:16.800 --> 00:21.300
一个是常规流 这个常规流你就是不用去管它

00:21.300 --> 00:24.300
它本身默认就是常规流 从上到下一式排列

00:24.300 --> 00:29.300
每一个盒子占益行叫DIV 叫什么P元素啊 对吧 就占益行

00:30.300 --> 00:34.300
常规流布局 然后呢 我们还有一个浮动布局

00:35.300 --> 00:39.300
然后还有一个定位 定位这个我们跑开啊 这个定位这个没有什么变化

00:39.300 --> 00:44.300
到了CSS3的话 还是可以使用定位 而且还使用的还是比较常见的

00:44.300 --> 00:48.300
定位没有什么变化 我们跑开 我们当看这个常规流把跑开

00:49.300 --> 00:53.300
我们当开这个浮动 这个浮动布局一般我们什么时候用的

00:53.300 --> 00:59.300
其实就是我们需要把这个盒子摆成一行 对不对 并排排列

00:59.300 --> 01:03.300
那么这个时候呢 我们通常会使用浮动 但是这个浮动布局

01:03.300 --> 01:08.300
它有很多很多的问题 其中最常见的问题呢 就是一个高度的坍塌

01:09.300 --> 01:14.300
对不对 因为浮动起来过后外面的盒子 它是不是就高度就没了

01:14.300 --> 01:18.300
如果说你不去设置高度 不去解决这个问题的话 它高度就会坍塌

01:19.300 --> 01:23.300
这是浮动带来的问题 为什么会浮动布局 为什么说不好呢

01:23.300 --> 01:26.300
是因为浮动布局 它本身就不是用来做布局的 知道吧

01:27.300 --> 01:33.300
浮动这个东西 它最早的时候出来 它的原因呢 是来做这种文字环绕的

01:33.300 --> 01:37.300
就有一张图片 你把它做浮动 那么后边的文字它就会自动环绕这个图片

01:37.300 --> 01:42.300
它本意是来做这个事情的 结果呢 由于当时呢CSS2

01:42.300 --> 01:47.300
它没有什么布局方案的 所以说有些人呢 就搞把个浮动拿出来布局

01:48.300 --> 01:52.300
于是就形成了 你们前边学到了这种布局方案 就浮动

01:52.300 --> 01:56.300
其实它不是用来不做布局的 只是以前没有办法 没有别的布局方案的

01:56.300 --> 02:02.300
那有些人说 像这个 这种布局行不行呢 就是Display

02:02.300 --> 02:10.740
Inline Block 用这种方式来并排排列可不可以呢 最好不要

02:10.740 --> 02:14.740
为什么呢 因为用这种方案呢 会导致有空白折叠

02:14.740 --> 02:18.740
举个例子吧 比方说你这里有个DV

02:18.740 --> 02:25.740
这里再写个DV 那么这两个DV你把它做成Inline Block 是不是并排了

02:25.740 --> 02:31.740
但是并排过后呢 你可以自己去试试啊 这个玩意儿也是基础部分的内容

02:31.740 --> 02:37.740
并排之后呢 它会导致这两个DV之间呢 有一个空隙 你看

02:37.740 --> 02:42.740
这么一个空隙 那么这个空隙哪来的 就是因为这里有个换行

02:42.740 --> 02:47.740
这里有个换行 一个换行就导致了 这里面相当于是一个空格

02:47.740 --> 02:53.740
就会导致这个问题 这个问题也没多严重啊 这个问题很严重的

02:53.740 --> 03:01.740
因为这就会导致你这个页面上的展现效果跟你的原码格式产生了关联

03:01.740 --> 03:06.740
结果会找出什么样子呢 你如果说你为了消除这个空白 那么你可能

03:06.740 --> 03:11.740
可能会在这样子写 把这个两个DV写成一行

03:12.740 --> 03:17.740
写成一行的话 代码不是很好看 一不利于代码格式化 一个格式化的话 它又会给你换行

03:17.740 --> 03:22.740
那你写在代码 那就换行呗 那我就摸着它有一个空格吧

03:22.740 --> 03:27.740
我设置Modernabs,Modernright 然后可以消除这个空格 把它设成复书

03:27.740 --> 03:31.740
或者是怎么样怎么样 我总之还是有办法把它消除掉的

03:31.740 --> 03:35.740
但是如果说有一天你用了一些工具 把这个原代码一压缩

03:35.740 --> 03:39.740
它又把这个换行给你去掉了 压缩过一个换行给你去掉了

03:39.740 --> 03:42.740
那这个空白又没了 总之会导致各种各样的问题

03:42.740 --> 03:46.740
所以说一句话 Enamlog 不能用 根本就不能用

03:46.740 --> 03:50.740
至少你不能用它做布局 知道这个意思吗

03:50.740 --> 03:54.740
所以说我们并排排列 没办法 以前只能用浮动

03:54.740 --> 03:58.740
当然这个浮动就会带来一系列的问题 简单说一下

03:58.740 --> 04:02.740
那么我们到了SES3 它肯定是要解决这个问题了

04:02.740 --> 04:07.740
怎么解决的 它就说行了 你们也别乱来了

04:07.740 --> 04:12.740
过去我知道你们没办法 浮动本来就不是用来做布局的

04:12.740 --> 04:16.740
它是用来做文字环绕的 你要做布局的话

04:16.740 --> 04:21.740
如果说常规刘不行 定位不行 那你要做一个排列的布局

04:21.740 --> 04:25.740
那么你可以使用SES3里边新出来的两个东西

04:25.740 --> 04:28.740
一个是弹性盒 一个是广哥 简单来说

04:28.740 --> 04:34.740
弹性盒用来做什么布局呢 用来做单行或者是单列的布局

04:35.740 --> 04:40.740
当然它可不可以做多行的 可以 但是做多行的更好的是广哥

04:40.740 --> 04:44.740
弹性盒做单行 做多行布局 不要排列成这个样子

04:44.740 --> 04:47.740
那么就可以用弹性盒 非常非常方便

04:47.740 --> 04:51.740
然后排列成这个样子的 多行多列 那就是用广哥

04:51.740 --> 04:55.740
所以说我们这节课主要就是讲弹性盒和广哥

04:55.740 --> 04:58.740
当然我们讲的讲法还是跟过去一样

04:59.740 --> 05:02.740
以查阅文档为目标

05:02.740 --> 05:06.740
就是说我们讲的讲课的目标就是让你能够查阅文档

05:06.740 --> 05:10.740
因为这个文档里边有些概念 你不学习这些概念的话

05:10.740 --> 05:14.740
你的文档的目录都看不懂 所以说我们目的就是让你看懂这个目录

05:14.740 --> 05:18.740
然后在做的时候 做提到时候来查阅这个文档

05:18.740 --> 05:22.740
好 我们首先来说弹性盒 说完了之后我们会做一些练习

05:22.740 --> 05:25.740
跟之前那个讲法是一样的

05:25.740 --> 05:29.740
弹性盒里边有一些基础的概念

05:29.740 --> 05:32.740
当然像详细的文档可以见MDN 还有一个小游戏

05:32.740 --> 05:34.740
小游戏我们一会再说

05:34.740 --> 05:37.740
弹性盒里边有一些比较重要的概念

05:37.740 --> 05:39.740
什么叫弹性盒呢

05:39.740 --> 05:44.740
只要你把一个元素设置成为Display Flex

05:44.740 --> 05:46.740
那么它就变成了一个弹性盒

05:46.740 --> 05:50.740
然后它里边的所有的指元素

05:50.740 --> 05:52.740
就会变成弹性项目 听概念

05:52.740 --> 05:55.740
不要去着急想什么代码怎么写

05:55.740 --> 05:59.740
一把干净听懂了过后 查阅文档解决问题就完事

05:59.740 --> 06:03.740
好 然后这里有一个DIV

06:03.740 --> 06:05.740
然后这里边有一些SPAN元素

06:05.740 --> 06:08.740
随便什么元素都行 无所谓

06:08.740 --> 06:10.740
再有一些P元素

06:10.740 --> 06:13.740
只要你把这个DIV的Display设为Flex

06:13.740 --> 06:16.740
那么它里边的所有的指元素

06:16.740 --> 06:18.740
注意是指元素

06:19.740 --> 06:21.740
像你这里 如果说SPAN里边

06:21.740 --> 06:24.740
你还有一个SWON元素

06:24.740 --> 06:26.740
那么这个元素是不是弹性项目

06:26.740 --> 06:28.740
它不是啊 指元素啊

06:28.740 --> 06:32.740
这些元素就会自动的变成弹性项目

06:32.740 --> 06:38.380
叫做Flex Atom

06:38.380 --> 06:40.380
这发现成弹性项目了

06:40.380 --> 06:42.380
好像也不知道怎么翻译的

06:42.380 --> 06:43.380
都发现成弹性项目了

06:43.380 --> 06:45.380
那么我们也使用弹性项目

06:45.380 --> 06:47.380
这是第一个概念

06:47.380 --> 06:49.380
弹性盒弹性项目

06:49.380 --> 06:50.380
弹性盒副元素

06:50.380 --> 06:52.380
弹性项目指元素

06:52.380 --> 06:55.380
然后当一个盒子变成弹性盒之后

06:55.380 --> 06:58.380
它会自动生成两个方向

06:58.380 --> 07:01.380
这两个方向它不会显示到界面上

07:01.380 --> 07:02.380
但是你心里边要知道

07:02.380 --> 07:04.380
一定要形成这么一张图

07:04.380 --> 07:05.380
有两个方向

07:05.380 --> 07:07.380
一个方向叫做主轴方向

07:07.380 --> 07:09.380
它是从左到右的

07:09.380 --> 07:11.380
一个方向叫做撤轴方向

07:11.380 --> 07:14.380
它是从上到下的

07:14.380 --> 07:16.380
默认情况下

07:16.380 --> 07:18.380
所有的弹性项目

07:18.380 --> 07:21.380
沿着主轴一次排列

07:21.380 --> 07:23.380
在撤轴上进行拉伸

07:23.380 --> 07:25.380
好,我们来看一下效果

07:25.380 --> 07:28.380
这里我给它去

07:28.380 --> 07:30.380
来写一个

07:30.380 --> 07:32.380
写一个小的DEMO

07:32.380 --> 07:38.610
然后把它打开

07:38.610 --> 07:45.160
我们这里边就写一个ULLI

07:45.160 --> 07:47.160
或者是就是一个DIV

07:47.160 --> 07:48.160
DIV抗天了

07:48.160 --> 07:51.160
然后这里边有一些小的DIV

07:51.160 --> 07:54.160
成一个5

07:54.160 --> 07:56.160
我们在这里设置一下样式

07:56.160 --> 07:59.160
我们把抗天了设置一个宽高

07:59.160 --> 08:03.160
宽度就100%

08:03.160 --> 08:08.160
高度200个像素

08:08.160 --> 08:12.860
然后给它个背景颜色

08:12.860 --> 08:14.860
弓色

08:14.860 --> 08:15.860
单一点

08:15.860 --> 08:22.690
好,那么这是一个DIV

08:22.690 --> 08:24.690
接下来我们在

08:24.690 --> 08:27.690
找到它里面的ITEM

08:27.690 --> 08:29.690
把它设置一个宽度

08:29.690 --> 08:31.690
高度我不设置了

08:31.690 --> 08:33.690
宽度的话

08:33.690 --> 08:34.690
50个像素

08:34.690 --> 08:36.690
背景颜色的话

08:36.690 --> 08:39.690
给它设置一个F40

08:39.690 --> 08:42.690
然后给它设置一个Border

08:42.690 --> 08:46.690
EPS Solid CCG

08:46.690 --> 08:48.690
好,目前是这个样子

08:48.690 --> 08:49.690
目前是常规流

08:49.690 --> 08:51.690
一次往下排列

08:51.690 --> 08:53.690
我们现在就做这么一件事

08:53.690 --> 08:56.690
把外面的容器变成一个弹性盒

08:56.690 --> 08:57.690
做一件事就行了

08:58.690 --> 08:59.690
它就变成这样子了

08:59.690 --> 09:01.690
是不是横向排列了

09:01.690 --> 09:02.690
我给它写上一个数字

09:05.690 --> 09:07.690
是不是横向排列了

09:07.690 --> 09:08.690
就这么简单

09:08.690 --> 09:10.690
这个盒子叫弹性盒

09:10.690 --> 09:13.690
这里面的自动变成弹性项目

09:13.690 --> 09:14.690
弹性项目

09:14.690 --> 09:18.690
它会沿着弹性盒的主轴方向

09:18.690 --> 09:19.690
横向

09:19.690 --> 09:20.690
这是侧轴

09:20.690 --> 09:25.060
沿着主轴方向

09:26.060 --> 09:28.060
这是主轴方向

09:28.060 --> 09:29.060
这是侧轴方向

09:29.060 --> 09:31.060
沿着主轴方向依次排列

09:31.060 --> 09:34.060
在侧轴方向自动拉伸

09:34.060 --> 09:35.060
拉伸的原因是

09:35.060 --> 09:37.060
因为我们这里没有设置高度

09:37.060 --> 09:39.060
我只设置了宽度

09:39.060 --> 09:40.060
如果说我设置高度的话

09:40.060 --> 09:41.060
那就没法拉伸了

09:41.060 --> 09:44.060
它按照我们设置的高度来

09:44.060 --> 09:46.060
我们设置一个高度

09:46.060 --> 09:48.060
50个像素

09:48.060 --> 09:49.060
它就没法拉伸了

09:50.060 --> 09:51.060
拉伸的原因是

09:51.060 --> 09:52.060
因为我们没有设置高度

09:52.060 --> 09:54.060
这就是它的排列方式

09:55.060 --> 09:56.060
这里面是要概念是什么

09:56.060 --> 09:57.060
弹性盒

09:57.060 --> 09:58.060
弹性项目

09:58.060 --> 09:59.060
以及主轴和侧轴

10:01.060 --> 10:02.060
没了

10:02.060 --> 10:03.060
弹性盒我就讲这么多

10:03.060 --> 10:04.060
剩下的事情

10:04.060 --> 10:06.060
我们来换一束的浏览一下

10:06.060 --> 10:08.060
不用去看具体的属性

10:08.060 --> 10:09.060
不用去看具体的代码

10:09.060 --> 10:10.060
换一束的浏览一下

10:10.060 --> 10:11.060
这个目录

10:12.060 --> 10:13.060
目录里边更改方向

10:13.060 --> 10:14.060
你觉得它在说啥

10:15.060 --> 10:17.060
更改方向的意识就是

10:17.060 --> 10:19.060
改变主轴方向

10:20.060 --> 10:21.060
你看这个主轴方向

10:21.060 --> 10:22.060
默认是这样子的

10:22.060 --> 10:23.060
侧轴是这样子的

10:23.060 --> 10:24.060
那么你可以改成这样子

10:25.060 --> 10:27.060
它的排列方式就是这样的排列

10:27.060 --> 10:29.060
沿着主轴依次排列

10:29.060 --> 10:31.060
你可以把主轴方向改成这样子

10:31.060 --> 10:33.060
它的排列方式是1234

10:33.060 --> 10:35.060
你可以把主轴方向改成这样子

10:35.060 --> 10:37.060
它的排列就是1234

10:37.060 --> 10:39.060
它的方向是可以变的

10:39.060 --> 10:40.060
当然我们很少

10:40.060 --> 10:41.060
一般来说

10:41.060 --> 10:42.060
不太会去变它的方向

10:42.060 --> 10:44.060
但是有的时候也会遇到这种情况

10:44.060 --> 10:45.060
如果说你要变方向

10:45.060 --> 10:46.060
你就参考着

10:47.060 --> 10:48.060
所以我们应该

10:48.060 --> 10:49.060
用这种方式来学习代码

10:49.060 --> 10:51.060
不用去看它具体的

10:51.060 --> 10:52.060
怎么去写

10:52.060 --> 10:53.060
那个无所谓

10:53.060 --> 10:55.060
你只要知道它干什么就行了

10:55.060 --> 10:56.060
要改方向

10:57.060 --> 10:59.060
好,主轴排列

10:59.060 --> 11:01.060
默认情况下在主轴上依次排列

11:01.060 --> 11:03.060
那么它还有很多的排列方式

11:03.060 --> 11:05.060
就是不改变方向

11:05.060 --> 11:06.060
主轴方向不变

11:06.060 --> 11:08.060
那么它在主轴上有很多排列方式

11:08.060 --> 11:10.060
默认了依次排列

11:10.060 --> 11:11.060
还有这种排列

11:11.060 --> 11:13.060
从主轴末尾排过来

11:14.060 --> 11:15.060
还有就是这种排列

11:15.060 --> 11:16.060
还有这种排列

11:16.060 --> 11:17.060
这种排列

11:17.060 --> 11:18.060
还有这种排列

11:18.060 --> 11:20.060
这两种排列

11:20.060 --> 11:21.060
可以做个对比

11:21.060 --> 11:23.060
这种排列就是

11:23.060 --> 11:25.060
叫做那个

11:25.060 --> 11:27.060
我都不知道怎么翻译

11:27.060 --> 11:29.060
你看就这个位置

11:29.060 --> 11:31.060
我现在鼠标画这个位置

11:34.020 --> 11:35.020
刚好是这里的一半

11:36.020 --> 11:37.020
然后这个排列

11:37.020 --> 11:39.020
就是完全是等据的

11:39.020 --> 11:41.020
他们这两个排列的区别

11:41.020 --> 11:43.020
就在于第1个和最后一个

11:43.020 --> 11:44.020
它的兼具

11:44.020 --> 11:46.020
里边的兼具

11:46.020 --> 11:47.020
就这么一个回事

11:47.020 --> 11:49.020
如果说你需要

11:49.020 --> 11:52.020
改变在主轴上的排列方式

11:53.020 --> 11:54.020
看照

11:54.020 --> 11:56.020
那么如果说你要改变

11:56.020 --> 11:57.020
在车轴上的排列方式

11:57.020 --> 11:58.020
看照

12:00.020 --> 12:01.020
默认是这种情况

12:01.020 --> 12:02.020
对不对

12:02.020 --> 12:03.020
拉伸在车轴上

12:03.020 --> 12:04.020
没有高度于拉伸

12:04.020 --> 12:05.020
当然了

12:05.020 --> 12:06.020
也可以使用这种方式

12:06.020 --> 12:07.020
在车轴

12:07.020 --> 12:08.020
车轴就是绿色轴跟线

12:08.020 --> 12:10.020
车轴上

12:10.020 --> 12:11.020
在车轴的最开始

12:11.020 --> 12:13.020
在车轴的中间

12:13.020 --> 12:15.020
在车轴的底部

12:15.020 --> 12:17.020
一个是主轴

12:17.020 --> 12:18.020
一个是车轴

12:19.020 --> 12:22.020
然后再来看弹性项目伸缩

12:22.020 --> 12:23.020
这是啥意思呢

12:23.020 --> 12:24.020
这个弹性项目

12:24.020 --> 12:26.020
这个图好像很复杂

12:26.020 --> 12:28.020
因为我们在排列弹性项目的时候

12:28.020 --> 12:30.020
说这里不要去关注写代码

12:30.020 --> 12:32.020
就一定要看这些目录在做什么

12:32.020 --> 12:34.020
编语理之后查阅

12:34.020 --> 12:36.020
弹性项目伸缩是什么意思呢

12:36.020 --> 12:37.020
就是当我们一个盒子

12:37.020 --> 12:38.020
刚才我们排列过后

12:38.020 --> 12:40.020
是不是有一些剩余空间

12:40.020 --> 12:41.020
对不对

12:41.020 --> 12:42.020
那么这个剩余空间

12:42.020 --> 12:43.020
怎么处理

12:43.020 --> 12:45.020
他就要说这个事情

12:45.020 --> 12:46.020
我们来看一下

12:46.020 --> 12:48.020
大概看一下

12:48.020 --> 12:50.020
这里是有一个剩余空间

12:50.020 --> 12:52.020
那么默认情况下

12:52.020 --> 12:53.020
它不管

12:53.020 --> 12:56.020
我这个盒子就这么50的宽度

12:56.020 --> 12:57.020
所以剩余空间

12:57.020 --> 12:58.020
它伸了就伸了

12:58.020 --> 12:59.020
我不管

12:59.020 --> 13:00.020
但是实际上是可以

13:00.020 --> 13:01.020
做其他处理的

13:01.020 --> 13:02.020
怎么处理的

13:02.020 --> 13:03.020
那么这个时候

13:03.020 --> 13:05.020
你要去设置弹性项目

13:05.020 --> 13:06.020
设置它的拉伸比例

13:06.020 --> 13:08.020
它默认情况下

13:08.020 --> 13:10.020
不是默认情况下

13:10.020 --> 13:11.020
就这样子写的时候

13:11.020 --> 13:13.020
是零零一百

13:13.020 --> 13:14.020
不用去看具体

13:14.020 --> 13:15.020
不用去

13:15.020 --> 13:16.020
就是特别关注具体的代码

13:16.020 --> 13:17.020
但是我们关注

13:17.020 --> 13:18.020
第一个数字零

13:18.020 --> 13:19.020
表示的是不拉伸

13:19.020 --> 13:20.020
然后这个盒子

13:20.020 --> 13:22.020
我给它设成一

13:22.020 --> 13:23.020
你要知道

13:23.020 --> 13:24.020
设置的是谁

13:24.020 --> 13:26.020
设置的是弹性项目

13:26.020 --> 13:28.020
前边都是设置的是什么

13:28.020 --> 13:29.020
弹性盒子

13:29.020 --> 13:30.020
弹性盒

13:30.020 --> 13:31.020
外面的容器

13:31.020 --> 13:32.020
这里边是设置

13:32.020 --> 13:33.020
里边的弹性项目

13:33.020 --> 13:34.020
第一个弹性项目

13:34.020 --> 13:35.020
我把它设置为不拉伸

13:35.020 --> 13:37.020
默认就是不拉伸

13:37.020 --> 13:38.020
好

13:38.020 --> 13:39.020
第二个我把它设成一

13:39.020 --> 13:40.020
拉伸比例为一

13:40.020 --> 13:42.020
第三个我把它设成二

13:42.020 --> 13:43.020
拉伸比例为二

13:43.020 --> 13:44.020
啥意思呢

13:44.020 --> 13:46.020
那么这一个剩余空间

13:46.020 --> 13:48.020
当出现剩余空间的时候

13:48.020 --> 13:49.020
这个盒子

13:49.020 --> 13:50.020
这个盒子

13:50.020 --> 13:51.020
和这个盒子

13:51.020 --> 13:54.020
就会按照一比二的比例

13:54.020 --> 13:57.020
去吃掉这个剩余空间

13:57.020 --> 13:58.020
吃掉完了过了

13:58.020 --> 13:59.020
你看就变成这个样子了

13:59.020 --> 14:00.020
对吧

14:00.020 --> 14:01.020
有一部分剩余空间

14:01.020 --> 14:03.020
也给你一个一份

14:03.020 --> 14:04.020
给你两份

14:04.020 --> 14:05.020
也就把这个剩余空间

14:05.020 --> 14:06.020
平均分成三份

14:06.020 --> 14:07.020
给你一份

14:07.020 --> 14:08.020
给你两份

14:08.020 --> 14:09.020
一比二的比例

14:09.020 --> 14:10.020
去吃掉剩余空间

14:10.020 --> 14:11.020
这就是拉伸

14:11.020 --> 14:12.020
懂的意思吗

14:12.020 --> 14:14.020
看图一图剩迁眼

14:14.020 --> 14:15.020
好

14:15.020 --> 14:16.020
那么压缩呢

14:16.020 --> 14:17.020
有拉伸就有压缩

14:17.020 --> 14:18.020
你看

14:18.020 --> 14:19.020
当我们有的时候

14:19.020 --> 14:21.020
弹性盒子还很宽

14:21.020 --> 14:23.020
它超过了这个容器

14:23.020 --> 14:24.020
它不会换行的

14:24.020 --> 14:25.020
它不会换行

14:25.020 --> 14:28.020
那么它会导致空间不足

14:28.020 --> 14:30.020
空间不足的情况下

14:30.020 --> 14:31.020
默认情况下

14:31.020 --> 14:33.020
它们是都要压缩的

14:33.020 --> 14:34.020
但是那我们可以去

14:34.020 --> 14:35.020
控制压缩比例

14:35.020 --> 14:36.020
比方说我们把

14:36.020 --> 14:37.020
第一个设为理由

14:37.020 --> 14:38.020
就是不压缩

14:38.020 --> 14:39.020
第二个呢

14:39.020 --> 14:40.020
第二个呢

14:40.020 --> 14:41.020
就是设为一

14:41.020 --> 14:42.020
压缩比例为一

14:42.020 --> 14:43.020
第三个呢

14:43.020 --> 14:44.020
设为二

14:44.020 --> 14:46.020
那么结果就是

14:46.020 --> 14:48.020
它会把多出来的就是

14:48.020 --> 14:50.020
这个盒子不动

14:50.020 --> 14:51.020
不压缩

14:51.020 --> 14:52.020
然后呢空间不足

14:52.020 --> 14:53.020
多了

14:53.020 --> 14:55.020
就是少了这么一部分空间

14:55.020 --> 14:56.020
那么你

14:56.020 --> 14:57.020
拿出来一点

14:57.020 --> 14:58.020
你也拿出来一点

14:58.020 --> 14:59.020
拿出的比例是

14:59.020 --> 15:00.020
你拿少一点

15:00.020 --> 15:02.020
你拿多一点

15:02.020 --> 15:03.020
两分

15:03.020 --> 15:04.020
把这个空间

15:04.020 --> 15:05.020
平均分成三分

15:05.020 --> 15:07.020
你出一份

15:07.020 --> 15:08.020
你出两份

15:08.020 --> 15:09.020
你看

15:09.020 --> 15:11.020
压缩会变这样子了

15:11.020 --> 15:13.020
这就是弹性盒的

15:13.020 --> 15:14.020
项目伸缩

15:14.020 --> 15:15.020
拉伸和压缩

15:16.020 --> 15:18.020
默认情况下呢是

15:18.020 --> 15:19.020
不拉伸

15:19.020 --> 15:20.020
但是

15:20.020 --> 15:21.020
都要压缩

15:21.020 --> 15:23.020
按照一比一比一的比例压缩

15:23.020 --> 15:24.020
当然你可以变化

15:24.020 --> 15:26.020
你可以通过这个属性去改变

15:26.020 --> 15:27.020
我们需要用到的时候

15:27.020 --> 15:28.020
再去控制它

15:28.020 --> 15:29.020
不需要用到的时候

15:29.020 --> 15:30.020
管得不管

15:30.020 --> 15:31.020
那么最后一个表示什么意思呢

15:31.020 --> 15:32.020
表示它

15:32.020 --> 15:34.020
初始的宽度

15:34.020 --> 15:36.020
就初始的尺寸

15:36.020 --> 15:38.020
因为它要吃空间

15:38.020 --> 15:40.020
它是在初始的尺寸

15:40.020 --> 15:41.020
基础上去吃这个空间

15:41.020 --> 15:42.020
对吧

15:42.020 --> 15:43.020
它要让出空间

15:43.020 --> 15:44.020
它也是在初始的

15:44.020 --> 15:45.020
起始尺寸基础上

15:45.020 --> 15:46.020
把生育的尺寸

15:46.020 --> 15:47.020
拿来去出账

15:47.020 --> 15:48.020
明白这个意思吧

15:48.020 --> 15:49.020
那么这是初始尺寸

15:49.020 --> 15:50.020
一般

15:50.020 --> 15:52.020
设置为Outdoor的话就是自动

15:52.020 --> 15:54.020
那么设置为具体的尺寸的话

15:54.020 --> 15:56.020
那么初始尺寸具体的尺寸

15:56.020 --> 15:57.020
对吧

15:57.020 --> 15:58.020
这是项目的

15:58.020 --> 16:00.020
弹性项目的伸缩

16:00.020 --> 16:01.020
这个目录能看懂吗

16:01.020 --> 16:02.020
看懂目录就行了

16:02.020 --> 16:03.020
你知道这个目录

16:03.020 --> 16:04.020
在干什么就行了

16:04.020 --> 16:05.020
好

16:05.020 --> 16:06.020
下面这个组织换行

16:06.020 --> 16:08.020
默认情况下呢

16:08.020 --> 16:09.020
在组织方向上

16:09.020 --> 16:10.020
它是不换行的

16:10.020 --> 16:12.020
如果说排不下了

16:12.020 --> 16:13.020
那就压缩

16:13.020 --> 16:14.020
对不对

16:14.020 --> 16:15.020
如果说你不要说

16:15.020 --> 16:16.020
那就超出

16:16.020 --> 16:17.020
它说它不换行的

16:17.020 --> 16:18.020
但是你可以通过

16:18.020 --> 16:21.020
设置弹性容器的FlexWipe

16:21.020 --> 16:23.020
就设置复原数的这个

16:23.020 --> 16:24.020
设置为Wipe

16:24.020 --> 16:25.020
那么就可以换行了

16:25.020 --> 16:26.020
不用去记这些单词

16:26.020 --> 16:28.020
你只需要做弹性换行

16:28.020 --> 16:29.020
在干什么事情

16:29.020 --> 16:30.020
组织换行在干什么事

16:30.020 --> 16:31.020
就可以了

16:31.020 --> 16:33.020
但是这个组织换行

16:33.020 --> 16:36.020
以前没有网格布局的时候

16:36.020 --> 16:37.020
我们使用弹性盒

16:37.020 --> 16:38.020
也可以做多行多列

16:38.020 --> 16:40.020
就是因为还可以换行

16:40.020 --> 16:41.020
但是呢

16:41.020 --> 16:42.020
现在有了网格之后

16:42.020 --> 16:44.020
网格是最好最好的

16:44.020 --> 16:46.020
多行多列布局

16:46.020 --> 16:48.020
那么这是关于弹性盒

16:48.020 --> 16:49.020
能看懂目录吗

16:49.020 --> 16:50.020
现在

16:50.020 --> 16:51.020
能看懂目录

16:51.020 --> 16:52.020
能看懂目录就ok

16:52.020 --> 16:54.020
接下来我们直接做题

16:54.020 --> 16:56.020
来

16:56.020 --> 16:57.020
直接做题

16:57.020 --> 16:58.020
一边查阅文档

16:58.020 --> 16:59.020
一边做题

16:59.020 --> 17:01.020
一定要养成这个习惯

17:01.020 --> 17:02.020
弹性盒练习

17:02.020 --> 17:04.020
我们这里面建立一个

17:04.020 --> 17:05.020
合同带

17:09.350 --> 17:11.350
首先我们把这个复制过来

17:11.350 --> 17:12.350
一共八道题

17:12.350 --> 17:13.350
都很简单

17:14.350 --> 17:15.350
好

17:15.350 --> 17:16.350
地道题

17:16.350 --> 17:17.350
来看一下

17:18.350 --> 17:19.350
我们目前的样子

17:20.350 --> 17:21.350
目前这个样子

17:21.350 --> 17:22.350
目前是为什么这个样子的

17:22.350 --> 17:23.350
因为它是个常规流

17:23.350 --> 17:25.350
item设置了宽高

17:25.350 --> 17:26.350
一个背景颜色

17:26.350 --> 17:27.350
没什么好说的

17:27.350 --> 17:28.350
然后这边就是个

17:28.350 --> 17:29.350
我们的元素结构

17:29.350 --> 17:31.350
现在我要把它排列成这个样子

17:32.350 --> 17:33.350
是吧

17:33.350 --> 17:34.350
可以用浮动吗

17:34.350 --> 17:35.350
用浮动也可以

17:35.350 --> 17:36.350
但是不要用浮动了

17:36.350 --> 17:38.350
用弹性盒去做这种排列

17:38.350 --> 17:39.350
那么怎么做呢

17:39.350 --> 17:40.350
我们要做的事情

17:40.350 --> 17:42.350
就是把这个container

17:43.350 --> 17:44.350
把它变成弹性盒

17:44.350 --> 17:45.350
弹性容器

17:45.350 --> 17:46.350
那么怎么变

17:46.350 --> 17:47.350
插越这儿

17:47.350 --> 17:48.350
生成弹性容器

17:48.350 --> 17:49.350
弹性项目

17:49.350 --> 17:50.350
只需要把复元素display

17:50.350 --> 17:51.350
作为flex就可以了

17:51.350 --> 17:52.350
好

17:52.350 --> 17:53.350
我们只需要把display

17:53.350 --> 17:54.350
作为flex

17:54.350 --> 17:56.350
它就变成了弹性盒

17:57.350 --> 17:59.350
你看是不是在主軸上

17:59.350 --> 18:01.350
从左到右依次排列

18:01.350 --> 18:03.350
但是我们要排列成这个样子

18:03.350 --> 18:05.350
应该查文档了哪个地方

18:06.350 --> 18:07.350
你不要说

18:07.350 --> 18:08.350
不要告诉我什么属性

18:08.350 --> 18:10.350
你告诉我查文档了哪个地方

18:10.350 --> 18:13.180
哪个地方

18:14.180 --> 18:16.180
这个主轴的排列方式

18:16.180 --> 18:17.180
横向的排列方式有变

18:17.180 --> 18:18.180
对吧

18:18.180 --> 18:19.180
那么要查什么

18:19.180 --> 18:20.180
主轴的排列方式

18:20.180 --> 18:21.180
主轴的排列方式

18:21.180 --> 18:22.180
怎么来排列成这个样子

18:22.180 --> 18:23.180
把这个代码

18:23.180 --> 18:26.180
直接看到这个图片

18:26.180 --> 18:27.180
挑出来就完事了

18:27.180 --> 18:30.180
justify content space between

18:30.180 --> 18:31.180
就完事了

18:31.180 --> 18:32.180
你都不用去管它

18:32.180 --> 18:33.180
什么意思

18:33.180 --> 18:34.180
你挑出来就完事了

18:34.180 --> 18:36.180
那管有什么好管的呢

18:37.180 --> 18:38.180
它本来就是

18:38.180 --> 18:39.180
做这个事情的

18:40.180 --> 18:41.180
是不是排列好了

18:41.180 --> 18:42.180
就是地道亭

18:42.180 --> 18:43.180
懂这意思吧

18:43.180 --> 18:44.180
你要知道

18:44.180 --> 18:45.180
怎么去查语文档

18:45.180 --> 18:46.180
这是注意关键的

18:46.180 --> 18:47.180
不要去记遮写玩笑

18:47.180 --> 18:48.180
这一玩意好

18:48.180 --> 18:49.180
什么好记得

18:49.180 --> 18:50.180
你写多了

18:50.180 --> 18:51.180
你自然就知道了

18:51.180 --> 18:52.180
看着眼熟了

18:52.180 --> 18:53.180
对吧

18:53.180 --> 18:54.180
看着眼熟了

18:54.180 --> 18:55.180
看久了就有感情了

18:55.180 --> 18:56.180
对不对

18:56.180 --> 18:57.180
一开始很陌生

18:57.180 --> 18:58.180
有感情的过后

18:58.180 --> 18:59.180
你自然就记住了

18:59.180 --> 19:00.180
这是一个自然而然的过程

19:01.180 --> 19:02.180
好的第一题

19:02.180 --> 19:03.180
就做完了

19:03.180 --> 19:04.180
第二题

19:05.180 --> 19:07.180
这是我们要写的代码

19:08.180 --> 19:09.180
然后看一下效果

19:10.180 --> 19:11.180
第二题

19:11.180 --> 19:12.180
一个居中效果

19:12.180 --> 19:13.180
又来了

19:13.180 --> 19:14.180
我们上

19:14.180 --> 19:15.180
我们昨天是不是学过

19:15.180 --> 19:17.180
一个居中方案

19:17.180 --> 19:18.180
叫做那个

19:26.600 --> 19:27.600
是不是用那个

19:27.600 --> 19:28.600
决定位的居中

19:28.600 --> 19:29.600
那么这个时候

19:29.600 --> 19:30.600
我们不用决定位

19:30.600 --> 19:31.600
看能不能居中

19:44.310 --> 19:45.310
好

19:45.310 --> 19:46.310
咱们来看一下

19:46.310 --> 19:47.310
这个盒子要居中

19:47.310 --> 19:48.310
但是

19:48.310 --> 19:49.310
它不是一个决定位

19:49.310 --> 19:50.310
你不要把它

19:51.310 --> 19:52.310
它不是决定位

19:52.310 --> 19:53.310
那么怎么来居中呢

19:53.310 --> 19:54.310
好

19:54.310 --> 19:55.310
接下来你会接触到

19:55.310 --> 19:57.310
咱们将来在开发中

19:57.310 --> 19:58.310
居中的

19:59.310 --> 20:00.310
不好意思

20:00.310 --> 20:01.310
刚才第一条题

20:01.310 --> 20:02.310
没有做完了

20:02.310 --> 20:03.310
暂停视面

20:03.310 --> 20:04.310
把地牢题做完

20:04.310 --> 20:05.310
移到地牢题

20:05.310 --> 20:06.310
我继续往后听

20:08.310 --> 20:09.310
你们会学习到

20:09.310 --> 20:11.310
咱们在将来的开发中

20:11.310 --> 20:12.310
注意常见的

20:12.310 --> 20:14.310
两种居中方案

20:14.310 --> 20:16.310
一种就是绝对定位

20:17.310 --> 20:18.310
绝对定位的盒子

20:18.310 --> 20:19.310
或者是固定定位

20:19.310 --> 20:20.310
都一样

20:20.310 --> 20:21.310
它要居中的话

20:21.310 --> 20:22.310
就是

20:22.310 --> 20:23.310
labs 50%

20:23.310 --> 20:25.310
top 50%

20:25.310 --> 20:27.310
然后设置一个transnate

20:27.310 --> 20:28.310
对吧

20:28.310 --> 20:29.310
往左边偏移

20:29.310 --> 20:30.310
自身宽度的一半

20:30.310 --> 20:31.310
往上偏移

20:31.310 --> 20:32.310
自身高度的一半

20:32.310 --> 20:33.310
这是我们昨天学习的

20:34.310 --> 20:35.310
那么如果说

20:35.310 --> 20:36.310
不是绝对定位

20:36.310 --> 20:37.310
普通

20:38.310 --> 20:39.310
普通盒子

20:39.310 --> 20:40.310
那么怎么来居中呢

20:40.310 --> 20:42.310
我们是用弹性盒

20:42.310 --> 20:43.310
弹性盒

20:43.310 --> 20:44.310
应该说是

20:44.310 --> 20:46.310
目前CSS里边

20:46.310 --> 20:48.310
最好的居中方案

20:48.310 --> 20:49.310
其他的居中方案

20:49.310 --> 20:50.310
都有一些

20:50.310 --> 20:51.310
过多过少的一些小问题

20:51.310 --> 20:52.310
包括这个

20:52.310 --> 20:53.310
都有一些小问题

20:54.310 --> 20:55.310
只要大家

20:55.310 --> 20:56.310
遇到这种问题的

20:56.310 --> 20:57.310
几率比较小

20:57.310 --> 20:58.310
它是有些小问题的

20:58.310 --> 21:00.310
但是弹性盒

21:00.310 --> 21:01.310
它的居中方案

21:01.310 --> 21:02.310
是没有任何问题的

21:02.310 --> 21:03.310
但是潜力条件

21:03.310 --> 21:04.310
它不能是绝对定位

21:04.310 --> 21:05.310
如果说

21:05.310 --> 21:06.310
你要绝对定位的话

21:06.310 --> 21:07.310
还是只能用它

21:08.310 --> 21:09.310
咱们来看一下

21:09.310 --> 21:10.310
弹性盒的居中

21:10.310 --> 21:12.310
那么弹性盒怎么来居中呢

21:13.310 --> 21:14.310
当然

21:14.310 --> 21:15.310
既然是弹性盒居中

21:15.310 --> 21:16.310
我们肯定是要把它

21:16.310 --> 21:17.310
变成弹性盒

21:18.310 --> 21:19.310
变成弹性盒

21:20.310 --> 21:21.310
那我们来想一想

21:22.310 --> 21:23.310
因为它这里是定的宽高的

21:24.310 --> 21:25.310
为什么没有拉伸

21:25.310 --> 21:27.310
因为我定了宽高的

21:27.310 --> 21:28.310
如果说没有高度的话

21:28.310 --> 21:29.310
就拉伸了

21:30.310 --> 21:31.310
我要把它居中

21:32.310 --> 21:33.310
怎么居中呢

21:34.310 --> 21:35.310
居中无非就是

21:35.310 --> 21:37.310
在主轴上居中

21:37.310 --> 21:39.310
然后在车轴上居中

21:39.310 --> 21:40.310
不就玩那么多

21:40.310 --> 21:41.310
就这么简单

21:41.310 --> 21:42.310
所以说你要查文章怎么查

21:42.310 --> 21:44.310
首先查主轴上怎么居中

21:44.310 --> 21:45.310
主轴上如说

21:45.310 --> 21:46.310
有多个盒子

21:46.310 --> 21:47.310
它怎么居中呢

21:47.310 --> 21:48.310
当然我这里只有一个盒子

21:49.310 --> 21:50.310
justified content center

21:51.310 --> 21:52.310
对不对

21:52.310 --> 21:53.310
好,我们来看一下

21:53.310 --> 21:54.310
可以使用

21:54.310 --> 21:57.310
这个代码justified content center

21:59.310 --> 22:00.310
又能说到

22:00.310 --> 22:01.310
为什么不给我们

22:01.310 --> 22:03.310
做什么一个文字

22:03.310 --> 22:04.310
我好复制

22:04.310 --> 22:06.310
你自己瞧一下

22:06.310 --> 22:07.310
瞧一下加深一点印象

22:07.310 --> 22:09.310
也不用需要你刻意去记

22:09.310 --> 22:10.310
多瞧一下

22:10.310 --> 22:11.310
本身这个代码

22:11.310 --> 22:13.310
编辑器里面就有智能提示

22:13.310 --> 22:14.310
主轴上是不是居中了

22:14.310 --> 22:16.310
然后车轴上去怎么居中

22:16.310 --> 22:17.310
车轴是不是查这

22:17.310 --> 22:18.310
车轴就怎么居中

22:18.310 --> 22:19.310
看看

22:19.310 --> 22:20.310
什么看这

22:20.310 --> 22:23.310
align items center

22:23.310 --> 22:25.310
车轴写过来

22:25.310 --> 22:27.310
align items center

22:27.310 --> 22:28.310
这些代码你不知道

22:28.310 --> 22:30.310
这一辈子要写多好吃

22:30.310 --> 22:32.310
写无种式是这种

22:32.310 --> 22:34.310
这是最好的举动方案

22:34.310 --> 22:36.310
他需不需要定宽高呢

22:36.310 --> 22:37.310
不需要

22:37.310 --> 22:38.310
我这里定宽高

22:38.310 --> 22:39.310
市长你们看清楚

22:39.310 --> 22:40.310
因为这个盒子没内容

22:40.310 --> 22:41.310
他不需要定宽高

22:41.310 --> 22:43.310
你把宽高去了

22:44.310 --> 22:45.310
他也在中间

22:45.310 --> 22:46.310
还有一个边框

22:46.310 --> 22:48.310
他也在中间

22:48.310 --> 22:50.310
有时候说你宽高去了

22:50.310 --> 22:51.310
不是会拉伸吗

22:51.310 --> 22:52.310
但是我们

22:52.310 --> 22:54.310
现在就没有拉伸了

22:54.310 --> 22:56.310
因为之前的align items

22:56.310 --> 22:58.310
它的指示是卷起拉伸

22:58.310 --> 23:00.310
默认值是卷起拉伸

23:00.310 --> 23:01.310
所以说它会拉伸

23:01.310 --> 23:02.310
但是你把身上过来

23:02.310 --> 23:03.310
它就不会拉伸了

23:03.310 --> 23:05.310
宽高是自动的

23:05.310 --> 23:08.310
这是最好的一种举动方案

23:08.310 --> 23:10.310
好 这是第二题

23:10.310 --> 23:12.310
把第二题好好做一下

23:12.310 --> 23:18.310
好 第三题

23:18.310 --> 23:23.440
看效果

23:23.440 --> 23:25.440
好 第三题要做成这个样子

23:25.440 --> 23:27.440
也是排成一行

23:27.440 --> 23:29.440
做成这个样子的话

23:29.440 --> 23:31.440
这里边有一个item

23:31.440 --> 23:32.440
当中间这个item

23:32.440 --> 23:33.440
这个dm也比较特殊

23:33.440 --> 23:35.440
加了一个特殊的人的样子

23:35.440 --> 23:37.440
好 我们首先把它排成一行

23:37.440 --> 23:38.440
排成一行有什么呢

23:38.440 --> 23:39.440
用弹性盒

23:39.440 --> 23:42.440
container display flex

23:42.440 --> 23:44.440
弹性盒

23:44.440 --> 23:46.440
不就排成一行了吧

23:46.440 --> 23:47.440
对吧

23:47.440 --> 23:48.440
好

23:49.440 --> 23:53.610
拿下来吧

23:53.610 --> 23:54.610
然后排成一行之后

23:54.610 --> 23:55.610
我要做的事情

23:55.610 --> 23:57.610
就是让中间这个盒子

23:57.610 --> 24:00.610
吃掉剩余空间

24:00.610 --> 24:01.610
查什么呢

24:01.610 --> 24:04.610
就是查弹性项目的声说

24:04.610 --> 24:05.610
对不对

24:05.610 --> 24:07.610
我怎么样让其中有一个盒子

24:07.610 --> 24:10.610
吃掉剩余空间

24:10.610 --> 24:11.610
默认情况下

24:11.610 --> 24:13.610
这些盒子是不会拉伸的

24:13.610 --> 24:15.610
就不会吃掉这个剩余空间

24:15.610 --> 24:16.610
你看默认情况下

24:16.610 --> 24:17.610
它第一个值是0

24:17.610 --> 24:20.610
flex 0

24:20.610 --> 24:22.610
那么我们这里呢

24:22.610 --> 24:23.610
找到中间这个盒子

24:23.610 --> 24:24.610
其他盒子你不要吃

24:24.610 --> 24:26.610
你反正默认就不吃

24:26.610 --> 24:27.610
中间的盒子我让你吃

24:27.610 --> 24:28.610
怎么吃呢

24:28.610 --> 24:29.610
flex

24:29.610 --> 24:31.610
第一个值是不是写个1

24:31.610 --> 24:32.610
或者是写任何这个值就行了

24:32.610 --> 24:34.610
因为它没有其他盒子

24:34.610 --> 24:35.610
跟它做比例关系

24:35.610 --> 24:36.610
你只要吃就行

24:36.610 --> 24:38.610
因为其他盒子都不吃

24:38.610 --> 24:39.610
你吃一份 吃两份

24:39.610 --> 24:40.610
反正全部都吃你

24:40.610 --> 24:41.610
所以说写个1

24:41.610 --> 24:43.610
第二就是要不要压缩

24:43.610 --> 24:45.610
这个我们就写联补压缩

24:45.610 --> 24:46.610
然后它的宽度呢

24:46.610 --> 24:47.610
宽度无所谓

24:47.610 --> 24:49.610
你保持自动宽度就行

24:50.610 --> 24:52.610
这个自动宽度基础上去

24:52.610 --> 24:53.610
吃掉生云空间

24:53.610 --> 24:54.610
就完事了

24:54.610 --> 24:55.610
其实啊

24:55.610 --> 24:57.610
这个玩意儿是一个数学属性

24:57.610 --> 24:59.610
它里边是有好几个属性

24:59.610 --> 25:01.610
组成的弹性增长

25:01.610 --> 25:03.610
弹性压缩

25:03.610 --> 25:05.610
和弹性的基准尺寸

25:05.610 --> 25:06.610
那么这里呢

25:06.610 --> 25:08.610
其实你可以直接使用

25:08.610 --> 25:10.610
flex 0

25:10.610 --> 25:12.610
弹性的增长

25:12.610 --> 25:14.610
增长比例1

25:14.610 --> 25:15.610
效果是一样的

25:15.610 --> 25:17.610
这个值其实就是设施它

25:18.610 --> 25:20.610
好 这道题

25:20.610 --> 25:23.920
好 下一道题

25:24.920 --> 25:25.920
你跳做啊

25:25.920 --> 25:26.920
你不要觉得听懂了

25:26.920 --> 25:27.920
就可以不用做了

25:27.920 --> 25:28.920
你听懂了

25:28.920 --> 25:29.920
你不做的话

25:29.920 --> 25:30.920
就一点影响都没有了

25:31.920 --> 25:38.070
你想去做

25:38.070 --> 25:39.070
好 这道题啊

25:46.390 --> 25:48.390
目前是这个样子

25:49.390 --> 25:51.390
就是我们左边一半

25:51.390 --> 25:53.390
我们拉伸一下看一下

25:53.390 --> 25:55.390
拉伸一下这个盒子

25:55.390 --> 25:56.390
你看

25:56.390 --> 25:58.390
拉伸一下这个就是

25:58.390 --> 25:59.390
我们浏览器的话

25:59.390 --> 26:00.390
你会发现

26:00.390 --> 26:01.390
这个盒子啊

26:01.390 --> 26:02.390
左边这个盒子是不动的

26:02.390 --> 26:04.390
就好像是一个側边蓝一样

26:04.390 --> 26:06.390
然后右边这个红色的盒子呢

26:06.390 --> 26:09.390
它是会随着容器的增长和增长的

26:10.390 --> 26:12.390
那么他们两个盒子并排排列

26:12.390 --> 26:14.390
那并排排列先想都不用去想

26:14.390 --> 26:15.390
直接拿一个弹性盒

26:15.390 --> 26:17.390
display

26:17.390 --> 26:18.390
弹性盒

26:18.390 --> 26:19.390
对吧

26:19.390 --> 26:20.390
那你看

26:20.390 --> 26:21.390
所以并排排列了

26:21.390 --> 26:22.390
然后呢

26:22.390 --> 26:23.390
左边这个盒子

26:23.390 --> 26:24.390
它有固定的宽度

26:24.390 --> 26:25.390
就有点类似于

26:25.390 --> 26:27.390
我们网站的左右两栏布局

26:27.390 --> 26:28.390
对吧

26:28.390 --> 26:29.390
左边栏和主区域

26:29.390 --> 26:30.390
它有固定的宽度

26:30.390 --> 26:31.390
宽度固定

26:31.390 --> 26:32.390
然后呢

26:32.390 --> 26:33.390
右边这个盒子呢

26:33.390 --> 26:34.390
它没有宽度

26:34.390 --> 26:35.390
但是呢

26:35.390 --> 26:36.390
它要把它撑慢

26:36.390 --> 26:37.390
它把剩余空间撑慢

26:37.390 --> 26:38.390
那怎么说

26:38.390 --> 26:39.390
是不是又来

26:39.390 --> 26:41.390
妹这个盒子

26:41.390 --> 26:42.390
flex

26:42.390 --> 26:44.390
撑慢是不是吃掉剩余空间

26:44.390 --> 26:45.390
你看剩余空间吧

26:45.390 --> 26:46.390
对吧

26:46.390 --> 26:47.390
红色这个盒子你看很

26:47.390 --> 26:48.390
宽度就没有

26:48.390 --> 26:49.390
自动宽度

26:49.390 --> 26:51.390
那么还要吃掉剩余空间

26:51.390 --> 26:52.390
写个1

26:52.390 --> 26:53.390
那要不要压缩呢

26:53.390 --> 26:54.390
压缩呢

26:54.390 --> 26:55.390
就是外面这个

26:55.390 --> 26:56.390
灰色的就是容器啊

26:56.390 --> 26:57.390
它容器宽度是80%

26:57.390 --> 26:59.390
随着窗口的变化而变化

26:59.390 --> 27:01.390
那容器宽度不够的时候

27:01.390 --> 27:02.390
压缩它吗

27:02.390 --> 27:03.390
要压缩

27:03.390 --> 27:04.390
压缩比例也是1

27:04.390 --> 27:05.390
然后呢

27:05.390 --> 27:06.390
这是为了要求

27:06.390 --> 27:08.830
那么于是呢

27:08.830 --> 27:10.830
我们就看到了这么一个效果

27:10.830 --> 27:11.830
对吧

27:11.830 --> 27:12.830
它吃掉了剩余空间

27:12.830 --> 27:13.830
空间充足的时候

27:13.830 --> 27:14.830
吃掉剩余空间

27:14.830 --> 27:16.830
空间不足的时候

27:16.830 --> 27:18.830
那么它会有压缩

27:18.830 --> 27:20.830
原来这意思吧

27:20.830 --> 27:21.830
好

27:21.830 --> 27:22.830
这是这道题

27:22.830 --> 27:23.830
做一下啊

27:23.830 --> 27:37.130
下一道题

27:37.130 --> 27:39.130
第第几题了

27:39.130 --> 27:41.130
第五题了

27:41.130 --> 27:43.570
好

27:44.570 --> 27:47.570
要做成这样子

27:47.570 --> 27:51.200
那么这个结构是什么呢

27:51.200 --> 27:52.200
外面的容器啊

27:52.200 --> 27:53.200
这是外面灰色的

27:53.200 --> 27:54.200
这个边框就外面的容器

27:54.200 --> 27:56.200
然后里边一个in there

27:56.200 --> 27:57.200
in there就是黄色的

27:57.200 --> 27:59.200
然后呢item

27:59.200 --> 28:00.200
橙色的啊

28:00.200 --> 28:01.200
item里面是个红色的

28:01.200 --> 28:03.200
item里边又有个in there

28:03.200 --> 28:05.200
in there就是黄色的

28:05.200 --> 28:06.200
item里边

28:07.200 --> 28:08.200
又是红色的

28:08.200 --> 28:09.200
就一个套一个

28:09.200 --> 28:10.200
套一个

28:10.200 --> 28:11.200
要做成这个样子

28:11.200 --> 28:12.200
目前的

28:12.200 --> 28:13.200
它是这个样子

28:13.200 --> 28:14.200
对吧

28:14.200 --> 28:15.200
常规流

28:15.200 --> 28:16.200
那么这个玩意

28:16.200 --> 28:17.200
也能用弹性盒吗

28:17.200 --> 28:18.200
你这样子看吧

28:18.200 --> 28:19.200
一层一层的看

28:19.200 --> 28:21.200
首先这个container

28:21.200 --> 28:22.200
我们可以把它做成一个弹性盒

28:22.200 --> 28:24.200
然后它的指源数局中

28:24.200 --> 28:25.200
这是不可以做到

28:25.200 --> 28:26.200
我们之前做过的

28:26.200 --> 28:27.200
对不对

28:27.200 --> 28:28.200
它的指源数局中

28:28.200 --> 28:29.200
好

28:29.200 --> 28:30.200
咱们来试一下啊

28:30.200 --> 28:31.200
那么我们这里找到这个container

28:31.200 --> 28:34.200
把它变成display flex

28:34.200 --> 28:35.200
它的指源数是不是个in there

28:35.200 --> 28:36.200
我们把in there局中

28:36.200 --> 28:37.200
是不是设置

28:38.200 --> 28:39.200
产业文档

28:39.200 --> 28:40.200
container center

28:40.200 --> 28:41.200
然后呢

28:41.200 --> 28:42.200
item是center

28:43.200 --> 28:44.200
是不是这个盒子局中了

28:46.200 --> 28:47.200
然后同样的道理

28:47.200 --> 28:48.200
那么这个盒子

28:48.200 --> 28:50.200
它里面有一个指源数item

28:50.200 --> 28:51.200
我们要让这个元数

28:51.200 --> 28:52.200
在它里面局中

28:53.200 --> 28:54.200
就是让这个元数

28:55.200 --> 28:56.200
就让这个元数

28:56.200 --> 28:57.200
是不是在这个

28:57.200 --> 28:58.200
黄色的盒子里面局中

28:58.200 --> 28:59.200
那么是不是又来一个

28:59.200 --> 29:00.200
是吗

29:00.200 --> 29:01.200
那么这个in there

29:02.200 --> 29:03.200
直接套in there

29:04.200 --> 29:06.640
是不是

29:06.640 --> 29:07.640
那么这个凡是在in there

29:07.640 --> 29:08.640
这种盒子

29:08.640 --> 29:09.640
这种盒子

29:09.640 --> 29:10.640
这个盒子

29:10.640 --> 29:11.640
这个盒子

29:11.640 --> 29:12.640
它里面的指源数

29:12.640 --> 29:13.640
是不是都局中了

29:13.640 --> 29:14.640
对吧

29:14.640 --> 29:15.640
那么还有一个就是item

29:15.640 --> 29:17.640
这个item这个盒子

29:17.640 --> 29:18.640
item这个盒子里面

29:18.640 --> 29:19.640
也有指源数

29:19.640 --> 29:20.640
那么它一直指源数

29:20.640 --> 29:21.640
也要在它里面局中

29:21.640 --> 29:22.640
那是不是

29:22.640 --> 29:24.640
再来一个item

29:25.640 --> 29:26.640
对吧

29:26.640 --> 29:27.640
就完事了

29:28.640 --> 29:29.640
其实就是再练

29:29.640 --> 29:30.640
再练习的一次局中

29:30.640 --> 29:31.640
然后呢

29:31.640 --> 29:32.640
通过这个例子

29:32.640 --> 29:33.640
可以告诉大家

29:33.640 --> 29:34.640
可以套弹性盒

29:34.640 --> 29:35.640
没有任何问题的

29:36.640 --> 29:37.640
那么像这样

29:37.640 --> 29:38.640
像这种情况下

29:38.640 --> 29:39.640
这个in there

29:39.640 --> 29:40.640
它本身是弹性容器

29:40.640 --> 29:41.640
但是呢

29:41.640 --> 29:42.640
相对于这个弹性盒

29:42.640 --> 29:43.640
它又是它的弹性项目

29:43.640 --> 29:44.640
对不对

29:44.640 --> 29:45.640
就好像绝对定位元数

29:45.640 --> 29:46.640
里面也可以有绝对定位

29:46.640 --> 29:47.640
对吧

29:47.640 --> 29:48.640
它是它的弹性项目

29:48.640 --> 29:49.640
同时呢

29:49.640 --> 29:50.640
它本身里

29:50.640 --> 29:51.640
它也是个弹性容器

29:51.640 --> 29:52.640
然后呢

29:52.640 --> 29:53.640
这个item

29:53.640 --> 29:54.640
是它的弹性项目

29:54.640 --> 29:55.640
同时item

29:55.640 --> 29:56.640
也是个弹性容器

29:56.640 --> 29:57.640
弹性容器

29:57.640 --> 29:58.640
固定了

29:58.640 --> 29:59.640
它里边的弹性项目

29:59.640 --> 30:00.640
如何排列

30:01.640 --> 30:02.640
好

30:02.640 --> 30:03.640
这一块

30:03.640 --> 30:04.640
那下一道题

30:04.640 --> 30:05.640
一共就这么几道题

30:05.640 --> 30:07.640
每道题都还是非常简单的

30:11.040 --> 30:12.040
这道题呢

30:12.040 --> 30:13.040
需要我们写一点带

30:15.040 --> 30:16.040
要写成这个样子

30:16.040 --> 30:17.040
你看现在我们用这种方

30:17.040 --> 30:19.040
用弹性盒来做这种布局

30:19.040 --> 30:20.040
就特别特别的方便

30:20.040 --> 30:21.040
好

30:21.040 --> 30:22.040
咱们来看一下吧

30:22.040 --> 30:23.040
咱们来写成这个布局

30:24.040 --> 30:25.040
目前呢

30:25.040 --> 30:26.040
就是个div

30:26.040 --> 30:27.040
这些A元数

30:27.040 --> 30:28.040
这些乱七八糟的东西

30:28.040 --> 30:29.040
就没写好了

30:29.040 --> 30:30.040
你只需要把它做成弹性布局

30:30.040 --> 30:31.040
就完事了

30:31.040 --> 30:34.040
其他我们做了一些央视的清除

30:34.040 --> 30:35.040
再加上一个

30:35.040 --> 30:37.040
我们上几个学的

30:37.040 --> 30:38.040
这个还没学过

30:40.040 --> 30:41.040
来

30:41.040 --> 30:42.040
我们来做呗

30:42.040 --> 30:43.040
完成作业

30:43.040 --> 30:45.040
首先我们给整个容器

30:45.040 --> 30:47.040
有一个背景颜色

30:47.040 --> 30:48.040
对吧

30:48.040 --> 30:49.040
慢慢来做吧

30:49.040 --> 30:51.040
一个容器有个背景颜色

30:51.040 --> 30:52.040
背景颜色我就用黑色吧

30:52.040 --> 30:54.040
随便用一个颜色

30:56.040 --> 30:57.040
黑色吧

30:57.040 --> 30:58.040
然后文字颜色

30:58.040 --> 30:59.040
把它设为

30:59.040 --> 31:00.040
颜色的无所谓

31:00.040 --> 31:02.040
尺寸的无所谓

31:02.040 --> 31:03.040
关键是布局

31:03.040 --> 31:04.040
我们要终点关注布局

31:05.040 --> 31:06.040
变成这样子了

31:06.040 --> 31:07.040
那么接下来

31:07.040 --> 31:08.040
它里面有几个指援数

31:08.040 --> 31:09.040
有三个

31:09.040 --> 31:10.040
A元数

31:10.040 --> 31:11.040
nogo

31:11.040 --> 31:12.040
div

31:12.040 --> 31:13.040
终点的导航

31:13.040 --> 31:14.040
就这一块

31:16.040 --> 31:17.040
这一块

31:17.040 --> 31:18.040
然后呢

31:18.040 --> 31:19.040
percent

31:19.040 --> 31:21.040
那么就是这一块

31:22.040 --> 31:23.040
现在我们要做的事情

31:23.040 --> 31:24.040
就是把这三个玩意儿

31:24.040 --> 31:25.040
并排排列

31:25.040 --> 31:26.040
以前要搞浮动

31:26.040 --> 31:28.040
要去清除浮动

31:28.040 --> 31:30.040
要解决高度弹

31:30.040 --> 31:31.040
它现在需要这样的吗

31:31.040 --> 31:32.040
不需要

31:32.040 --> 31:33.040
直接来就完事了

31:33.040 --> 31:34.040
然后呢

31:34.040 --> 31:35.040
直接来container

31:35.040 --> 31:36.040
display

31:37.040 --> 31:38.040
flex

31:39.040 --> 31:40.040
完了

31:40.040 --> 31:42.040
那是不是并排排列了

31:42.040 --> 31:43.040
然后呢

31:43.040 --> 31:44.040
我们现在去给它

31:44.040 --> 31:45.040
其实你这个时候

31:45.040 --> 31:46.040
可以看一下

31:46.040 --> 31:47.040
我们的元数结构

31:47.040 --> 31:48.040
元数里面

31:48.040 --> 31:49.040
你看它就是个弹性盒

31:49.040 --> 31:51.040
看到这个虚线没

31:51.040 --> 31:52.040
这里面是有虚线的

31:52.040 --> 31:53.040
我们把个flex

31:53.040 --> 31:54.040
点一下

31:54.040 --> 31:56.040
你看这里是有线啊

31:56.040 --> 31:57.040
这个线就是目前

31:57.040 --> 31:58.040
里面的弹性项目

31:58.040 --> 31:59.040
它的排列

32:00.040 --> 32:01.040
目前是

32:01.040 --> 32:03.040
高度上拉伸

32:03.040 --> 32:04.040
直升的

32:04.040 --> 32:05.040
这有些声语空间

32:05.040 --> 32:06.040
然后呢

32:06.040 --> 32:07.040
我们横向上

32:07.040 --> 32:08.040
主轴上并排排列

32:08.040 --> 32:09.040
后面这个

32:09.040 --> 32:10.040
这个线什么意思呢

32:10.040 --> 32:11.040
表示声语空间

32:11.040 --> 32:12.040
多了空间

32:12.040 --> 32:13.040
没有人吸收

32:14.040 --> 32:15.040
那么我们现在要

32:15.040 --> 32:16.040
做什么事情呢

32:16.040 --> 32:17.040
我要让中间这个

32:18.040 --> 32:19.040
我现在要做一件事

32:19.040 --> 32:20.040
让中间这个

32:20.040 --> 32:21.040
把声语空间给我吸收完

32:22.040 --> 32:23.040
那么于是呢

32:23.040 --> 32:24.040
我就

32:24.040 --> 32:26.040
设置这个中间这个line

32:26.040 --> 32:28.040
给我吸收声语空间

32:28.040 --> 32:29.040
flex grow

32:30.040 --> 32:32.040
光用机它就去查文道

32:33.040 --> 32:34.040
就吸收完了

32:34.040 --> 32:35.040
现在我们再来看

32:35.040 --> 32:37.670
你看

32:38.670 --> 32:39.670
看那个线

32:39.670 --> 32:40.670
能看清楚啊

32:40.670 --> 32:41.670
中间那个盒子

32:41.670 --> 32:42.670
吸收了声语空间

32:42.670 --> 32:43.670
对不对

32:43.670 --> 32:44.670
那么接下来就是

32:44.670 --> 32:45.670
做一些微调

32:45.670 --> 32:46.670
其实整个布局就已经完成了

32:46.670 --> 32:48.670
做一些微调就完事了

32:48.670 --> 32:49.670
怎么微调呢

32:49.670 --> 32:51.670
首先我给整个外面的容器

32:51.670 --> 32:52.670
设一个panning

32:52.670 --> 32:53.670
左右的panning

32:53.670 --> 32:54.670
这样子左边

32:54.670 --> 32:56.670
左边和右边有一点距离

32:56.670 --> 32:57.670
上边为0

32:57.670 --> 32:58.670
左右为

32:58.670 --> 32:59.670
20个像素吧

33:00.670 --> 33:01.670
设置个panning

33:01.670 --> 33:02.670
然后呢

33:02.670 --> 33:03.670
flex

33:03.670 --> 33:04.670
那么它就在中间

33:04.670 --> 33:05.670
就除了

33:05.670 --> 33:06.670
除开这个panning

33:06.670 --> 33:07.670
在里边那种区域排阶了

33:08.670 --> 33:09.670
然后我们再

33:09.670 --> 33:10.670
做一个line height

33:10.670 --> 33:12.670
给它设置高度

33:12.670 --> 33:13.670
高度的话

33:14.670 --> 33:15.670
50个像素

33:16.670 --> 33:17.670
line height

33:17.670 --> 33:21.070
50个像素

33:22.070 --> 33:23.070
来个局中

33:24.070 --> 33:25.070
然后我们再让中间

33:25.070 --> 33:26.070
这个盒子呢

33:26.070 --> 33:28.070
你左边

33:28.070 --> 33:29.070
有一点距离

33:29.070 --> 33:30.070
这个也很简单

33:30.070 --> 33:31.070
或者是这个node

33:31.070 --> 33:32.070
你右边有点距离

33:33.070 --> 33:34.070
所以我们这里

33:34.070 --> 33:35.070
设置node

33:35.070 --> 33:36.070
margin

33:36.070 --> 33:37.070
node

33:37.070 --> 33:38.070
为20个像素

33:39.070 --> 33:40.070
那么有了点距离

33:40.070 --> 33:41.070
出来了

33:41.070 --> 33:42.070
非常简单

33:43.070 --> 33:44.070
然后我们再站来看一下

33:44.070 --> 33:45.070
还有什么细节

33:45.070 --> 33:46.070
我们要去处理

33:46.070 --> 33:47.070
这个node里边

33:47.070 --> 33:48.070
有一些A元素

33:48.070 --> 33:49.070
就是这里的导航

33:49.070 --> 33:50.070
那么这个A元素

33:50.070 --> 33:51.070
目前

33:51.070 --> 33:52.070
它是一个航河

33:52.070 --> 33:54.070
于是它会出现一个空白

33:54.070 --> 33:55.070
空白老来的

33:55.070 --> 33:56.070
空白折叠

33:56.070 --> 33:58.070
这里是个空格的

33:58.070 --> 33:59.070
这种排队方式

33:59.070 --> 34:00.070
肯定是不好的

34:00.070 --> 34:01.070
过去我们得

34:01.070 --> 34:02.070
变成浮动

34:02.070 --> 34:03.070
来消除这个空白

34:03.070 --> 34:04.070
我们用margin

34:04.070 --> 34:05.070
来设置它的间隙

34:05.070 --> 34:06.070
不应该用空格

34:07.070 --> 34:08.070
所以说我们这里

34:08.070 --> 34:09.070
但是我们现在

34:09.070 --> 34:10.070
不需要浮动了

34:10.070 --> 34:11.070
这里边

34:11.070 --> 34:12.070
也就是这个DIV里边

34:12.070 --> 34:14.070
它也需要并排排列

34:14.070 --> 34:15.070
它也可以把它做成弹性盒

34:21.070 --> 34:22.070
弹性盒

34:22.070 --> 34:23.070
你看弹性盒过后了

34:23.070 --> 34:24.070
它里边就没有间隙了

34:24.070 --> 34:26.070
没有间隙很简单

34:26.070 --> 34:27.070
我设置一下A元素

34:27.070 --> 34:28.070
margin

34:28.070 --> 34:30.070
左右的上下为0

34:31.070 --> 34:33.070
左右的margin

34:33.070 --> 34:35.070
为1元

34:35.070 --> 34:37.070
太夸张了

34:37.070 --> 34:39.070
太多了

34:39.070 --> 34:40.070
左右为0

34:40.070 --> 34:42.070
左边右边为6个项素

34:44.070 --> 34:45.070
差不多

34:45.070 --> 34:46.070
就这么一样子

34:46.070 --> 34:48.070
设置左右的margin

34:48.070 --> 34:49.070
那有些人说

34:49.070 --> 34:50.070
我为什么不去

34:50.070 --> 34:51.070
设置主轴的排列方式呢

34:51.070 --> 34:52.070
你可以去参业文档

34:52.070 --> 34:53.070
参业文档

34:53.070 --> 34:54.070
你翻来翻去

34:54.070 --> 34:55.070
好像没有一个

34:55.070 --> 34:56.070
方式比较适合

34:56.070 --> 34:57.070
它其实就是这种排列

34:57.070 --> 35:00.450
然后多一点间隙而已

35:00.450 --> 35:01.450
这是这一块

35:01.450 --> 35:03.450
那么还有一种激活样式

35:03.450 --> 35:04.450
像这个东西就是选中的

35:04.450 --> 35:05.450
目前正式手艺

35:05.450 --> 35:06.450
目前正式手艺

35:06.450 --> 35:08.450
所以说它有多那个那样式

35:08.450 --> 35:09.450
class

35:09.450 --> 35:10.450
这种做法很常见的

35:10.450 --> 35:12.450
那么我们自己设置就完事了

35:12.450 --> 35:13.450
那么active

35:13.450 --> 35:14.450
它的那样式

35:14.450 --> 35:15.450
我们给它设置一个

35:15.450 --> 35:17.450
设置一个特殊的颜色

35:17.450 --> 35:18.450
就完事了

35:18.450 --> 35:21.450
不用去在意这些颜色

35:21.450 --> 35:23.450
这也无所谓的

35:23.450 --> 35:26.820
就完事了

35:26.820 --> 35:27.820
这间隙还不够

35:27.820 --> 35:28.820
间隙不够

35:28.820 --> 35:29.820
加一点点

35:33.800 --> 35:34.800
OK

35:34.800 --> 35:37.800
这里应该是耐无下面的

35:37.800 --> 35:38.800
那么同样的道理

35:38.800 --> 35:39.800
这个登陆注册

35:39.800 --> 35:41.800
是不是也应该是用弹性盒

35:41.800 --> 35:42.800
对吧

35:42.800 --> 35:43.800
然后直接

35:43.800 --> 35:45.800
直接斗好吧

35:45.800 --> 35:49.180
Hershen

35:49.180 --> 35:51.180
下面的A元素也一样

35:51.180 --> 35:53.180
然后这里登陆注册

35:53.180 --> 35:54.180
Hershen

35:54.180 --> 35:56.180
它也是要变成弹性盒

35:56.180 --> 35:57.180
这个式

35:57.180 --> 35:59.180
不能用航空

35:59.180 --> 36:01.180
或者是航空和栏布局

36:01.180 --> 36:02.180
那就是完了

36:02.180 --> 36:04.180
短短的这么一点点代码

36:04.180 --> 36:06.180
就完成了这个头部布局了

36:06.180 --> 36:08.180
弹性盒是非常方便的

36:09.180 --> 36:11.180
真正影响布局的地方

36:11.180 --> 36:13.180
其实就这么几行态

36:13.180 --> 36:14.180
弹性盒

36:14.180 --> 36:15.180
弹性盒

36:15.180 --> 36:16.180
弹性盒

36:16.180 --> 36:17.180
这个

36:17.180 --> 36:19.180
就下里没了

36:19.180 --> 36:20.180
好

36:20.180 --> 36:21.180
这是第六题

36:21.180 --> 36:22.180
完成

36:22.180 --> 36:23.180
我做一道题

36:23.180 --> 36:24.180
你们跟着去做一道

36:24.180 --> 36:25.180
最好是我做之前

36:25.180 --> 36:26.180
你们自己去尝试一下

36:26.180 --> 36:27.180
能不能做出来

36:27.180 --> 36:28.180
好

36:28.180 --> 36:29.180
这是一个分业的布局

36:29.180 --> 36:30.180
这也是一种非常常见的布局

36:34.090 --> 36:35.090
看一下这个分业的布局

36:36.090 --> 36:37.090
目前是这个样子

36:37.090 --> 36:38.090
为什么呢

36:38.090 --> 36:39.090
因为外面一个容器

36:39.090 --> 36:40.090
Pager

36:40.090 --> 36:41.090
你看那个Pager

36:41.090 --> 36:42.090
它里面有一些

36:42.090 --> 36:43.090
十边元素

36:43.090 --> 36:44.090
这十边元素

36:44.090 --> 36:45.090
从来到外

36:45.090 --> 36:46.090
航空排列嘛

36:46.090 --> 36:47.090
它们之间有个间隙

36:47.090 --> 36:48.090
有间隙的原因

36:48.090 --> 36:49.090
是因为它们是航空

36:49.090 --> 36:50.090
它们有空白折叠

36:50.090 --> 36:51.090
中间这个玩意是空格

36:51.090 --> 36:52.090
肯定是不好的

36:52.090 --> 36:53.090
那么现在呢

36:53.090 --> 36:54.090
我们的目标

36:54.090 --> 36:55.090
是把它并排排列

36:55.090 --> 36:56.090
而是要在这个Pager里面

36:56.090 --> 36:57.090
居中

36:57.090 --> 36:58.090
对吧

36:58.090 --> 36:59.090
整体居中

36:59.090 --> 37:01.090
那么这个一下就想到了

37:01.090 --> 37:02.090
我们这里应该怎么做

37:02.090 --> 37:03.090
把容器并排排列

37:03.090 --> 37:04.090
毫无疑问

37:04.090 --> 37:05.090
把它变成弹性盒

37:05.090 --> 37:06.090
这个是

37:07.090 --> 37:08.090
是吧

37:08.090 --> 37:09.090
所以说空白折叠

37:09.090 --> 37:10.090
全部没了

37:10.090 --> 37:11.090
没了是好事

37:11.090 --> 37:12.090
以后我们用margin来设置

37:12.090 --> 37:13.090
然后

37:13.090 --> 37:15.090
把它全部居中

37:15.090 --> 37:16.090
全部居中

37:17.090 --> 37:18.090
好

37:18.090 --> 37:19.090
它有一个那个什么

37:19.090 --> 37:20.090
有一个高度

37:20.090 --> 37:21.090
有一个高度就高度

37:21.090 --> 37:22.090
高度的话

37:22.090 --> 37:24.090
我们来个60个像素

37:24.090 --> 37:25.090
然后再来个男孩子

37:26.090 --> 37:27.090
60个像素

37:27.090 --> 37:28.090
然后呢

37:28.090 --> 37:29.090
给他个杯颜色

37:29.090 --> 37:30.090
然后说

37:30.090 --> 37:31.090
全来一个

37:32.090 --> 37:33.090
这是我们的容器

37:33.090 --> 37:34.090
把它变成弹性盒

37:34.090 --> 37:35.090
它里边的东西呢

37:35.090 --> 37:37.090
你看目前是怎么样子

37:37.090 --> 37:38.090
看到没

37:38.090 --> 37:39.090
这是目前的样子

37:40.090 --> 37:41.090
弹性项目

37:41.090 --> 37:43.090
后面是声语空间

37:43.090 --> 37:44.090
然后让我把这些项目

37:44.090 --> 37:45.090
全部居中

37:45.090 --> 37:47.090
其实你看浏览器里面

37:47.090 --> 37:48.090
它都可以调的

37:48.090 --> 37:49.090
Display Flux

37:49.090 --> 37:50.090
然后呢

37:50.090 --> 37:51.090
这里边

37:51.090 --> 37:52.090
它告诉你有哪些排列方式

37:52.090 --> 37:53.090
我们有些东西

37:53.090 --> 37:54.090
我们没有学

37:54.090 --> 37:55.090
平时用的很少就没有学

37:55.090 --> 37:57.090
我们关注重点

37:57.090 --> 37:58.090
just to be content

37:58.090 --> 37:59.090
我要居中

37:59.090 --> 38:00.090
你看这里有几种方式

38:00.090 --> 38:01.090
这里有居中

38:03.090 --> 38:04.090
它是自动给你加上的

38:04.090 --> 38:06.090
just to be content center

38:06.090 --> 38:07.090
你把它复制一下

38:09.090 --> 38:10.090
你看这里有居中的

38:10.090 --> 38:11.090
然后接下来要做的事情

38:11.090 --> 38:12.090
特别简单的

38:12.090 --> 38:13.090
我设置一下

38:13.090 --> 38:14.090
它里边的

38:14.090 --> 38:16.090
会不会跟海象就没关系了

38:16.090 --> 38:17.090
它里边的span元素

38:18.090 --> 38:19.090
要设置一下margin

38:19.090 --> 38:20.090
左右呢

38:20.090 --> 38:21.090
为eam

38:21.090 --> 38:22.090
太多了

38:23.090 --> 38:24.090
8个像素

38:24.090 --> 38:25.090
上下为0

38:27.090 --> 38:28.090
上下左右

38:28.090 --> 38:29.090
这是0

38:29.090 --> 38:30.090
是8个像素

38:31.090 --> 38:32.090
差不多

38:32.090 --> 38:33.090
然后呢

38:33.090 --> 38:34.090
再设置一个颜色

38:34.090 --> 38:35.090
这个颜色啥颜色

38:35.090 --> 38:36.090
颜色无所谓

38:36.090 --> 38:37.090
你们看着来就行了

38:37.090 --> 38:38.090
Color

38:38.090 --> 38:40.090
设置一个颜色

38:40.090 --> 38:41.090
Blu

38:41.090 --> 38:42.090
稍微调一下

38:49.680 --> 38:50.680
就这个吧

38:50.680 --> 38:52.680
有这么意思就行了

38:52.680 --> 38:53.680
然后呢

38:53.680 --> 38:54.680
一个激活样式

38:54.680 --> 38:55.680
Pager

38:55.680 --> 38:56.680
Spand

38:56.680 --> 38:57.680
Activ

38:58.680 --> 38:59.680
当它激活的时候

38:59.680 --> 39:00.680
它是这个颜色

39:00.680 --> 39:02.680
给它换一个颜色

39:02.680 --> 39:03.680
Color

39:06.680 --> 39:12.130
就随便来吧

39:12.130 --> 39:13.130
这个颜色无所谓

39:13.130 --> 39:14.130
现在我们不去关注颜色

39:14.130 --> 39:15.130
就这么意思

39:15.130 --> 39:16.130
你们随便来

39:16.130 --> 39:17.130
好 这是制导题

39:17.130 --> 39:18.130
那么最后导题

39:18.130 --> 39:19.130
第八题

39:20.130 --> 39:21.130
做啊 要跟着做啊

39:28.600 --> 39:30.600
现在我们要把它排队成这个样子

39:31.600 --> 39:32.600
首先看一下

39:32.600 --> 39:33.600
这里有几个盒子

39:33.600 --> 39:34.600
首先我们关注

39:34.600 --> 39:35.600
先不关注这个item

39:35.600 --> 39:36.600
这个item室里边

39:36.600 --> 39:37.600
里边这个小盒子

39:37.600 --> 39:39.600
先不关注不用关注这个item

39:40.600 --> 39:41.600
关注这个Inner

39:41.600 --> 39:42.600
和Container的关系

39:42.600 --> 39:44.600
就这个黄色和外面那个

39:44.600 --> 39:45.600
白色盒子的关系

39:46.600 --> 39:47.600
那么它是什么关系呢

39:47.600 --> 39:48.600
它要举动

39:48.600 --> 39:49.600
那怎么说

39:49.600 --> 39:51.600
是不是要设置这个Container

39:51.600 --> 39:52.600
把它变成弹性盒

39:52.600 --> 39:53.600
Display Flakes

39:54.600 --> 39:56.600
然后呢justify contents

39:56.600 --> 39:58.600
justify contents center

39:59.600 --> 40:01.600
然后呢items center

40:03.600 --> 40:04.600
它举动了吧

40:04.600 --> 40:05.600
黄色盒子举动了吧

40:05.600 --> 40:07.600
然后在黄色盒子内部

40:07.600 --> 40:08.600
黄色要这样子排列

40:09.600 --> 40:10.600
是不是单行排列

40:10.600 --> 40:11.600
它还是单行排列

40:11.600 --> 40:12.600
还是弹性盒

40:12.600 --> 40:13.600
所以说这个盒子

40:13.600 --> 40:15.600
对于这个Inner

40:15.600 --> 40:16.600
这个盒子而言

40:16.600 --> 40:17.600
它也是弹性盒

40:20.600 --> 40:21.600
它也是弹性盒

40:21.600 --> 40:22.600
直播它变成这个样子

40:22.600 --> 40:23.600
怎么变

40:23.600 --> 40:24.600
怎么变

40:24.600 --> 40:25.600
首先呢

40:27.600 --> 40:29.600
它要到下面去

40:29.600 --> 40:30.600
这是怎么排列

40:30.600 --> 40:31.600
撤走排列

40:31.600 --> 40:32.600
对吧

40:33.600 --> 40:34.600
默正情况下

40:34.600 --> 40:35.600
主軸是这个方向

40:35.600 --> 40:36.600
撤走是这个方向

40:36.600 --> 40:37.600
比如说它排到下面去

40:37.600 --> 40:38.600
是不是撤走排列

40:38.600 --> 40:39.600
看轮到

40:39.600 --> 40:40.600
撤走排列

40:40.600 --> 40:41.600
是不是这个

40:41.600 --> 40:46.170
align items Flakes End

40:48.170 --> 40:49.170
align items

40:49.170 --> 40:50.170
不要对这些单词

40:50.170 --> 40:51.170
产生什么样的感情

40:51.170 --> 40:53.170
你就写就完事了

40:53.170 --> 40:54.170
它说怎么这样

40:54.170 --> 40:55.170
就可以达到这样的效果

40:55.170 --> 40:57.170
你只要知道

40:57.170 --> 40:59.170
这个玩意它可以达到

40:59.170 --> 41:00.170
它可以达成

41:00.170 --> 41:01.170
就是在撤走上套下

41:01.170 --> 41:03.170
就靠到撤走的末尾

41:03.170 --> 41:04.170
就行了

41:05.170 --> 41:06.170
然后接下来

41:06.170 --> 41:07.170
变成这个样子怎么变

41:07.170 --> 41:09.170
是不是吃掉剩余空间

41:09.170 --> 41:10.170
每个人都去吃

41:10.170 --> 41:11.170
一人一份

41:12.170 --> 41:16.380
找到它下面的items

41:16.380 --> 41:18.380
然后去吃flakes

41:18.380 --> 41:21.880
都去吃剩余空间

41:21.880 --> 41:22.880
就完事了

41:22.880 --> 41:24.880
就排列成这个样子吧

41:24.880 --> 41:27.880
OK 这是关于这个弹性盒

41:27.880 --> 41:29.880
那么弹性盒

41:29.880 --> 41:30.880
我这里就讲完了

41:30.880 --> 41:31.880
朋友们

41:31.880 --> 41:33.880
把这些弹性盒的练习题

41:33.880 --> 41:34.880
做完

41:34.880 --> 41:35.880
然后呢

41:35.880 --> 41:36.880
这里呢

41:36.880 --> 41:37.880
我给大家去介绍

41:37.880 --> 41:38.880
这么一个小游戏

41:38.880 --> 41:39.880
弹性盒

41:39.880 --> 41:41.880
小游戏还挺有意思的

41:41.880 --> 41:43.880
但是这个网站呢

41:43.880 --> 41:45.880
现在出来了

41:45.880 --> 41:46.880
好像是一个英文对吧

41:46.880 --> 41:48.880
你们那边可以点字

41:48.880 --> 41:50.880
setting

41:50.880 --> 41:56.560
把它变成中文

41:56.560 --> 41:57.560
那么这里呢

41:57.560 --> 41:58.560
它有很多关卡

41:58.560 --> 41:59.560
一共24关

41:59.560 --> 42:00.560
但它没有把弹性盒的

42:00.560 --> 42:01.560
所有注射练完

42:01.560 --> 42:02.560
但是呢

42:02.560 --> 42:03.560
它里边主要是

42:03.560 --> 42:04.560
完成一个小游戏

42:04.560 --> 42:05.560
主要注射会练到

42:05.560 --> 42:06.560
然后呢

42:06.560 --> 42:07.560
我们客厂上有些东西

42:07.560 --> 42:08.560
它里边

42:08.560 --> 42:09.560
没有讲的

42:09.560 --> 42:10.560
它也会涉及

42:10.560 --> 42:12.560
很简单的一个小游戏

42:12.560 --> 42:13.560
什么意思呢

42:13.560 --> 42:14.560
比方说

42:14.560 --> 42:15.560
它会给你介绍

42:15.560 --> 42:16.560
然后呢

42:16.560 --> 42:17.560
在这里写代码

42:17.560 --> 42:18.560
把这个轻弯

42:18.560 --> 42:19.560
放到这个

42:19.560 --> 42:20.560
你们自己去看

42:20.560 --> 42:21.560
反正可以说

42:21.560 --> 42:23.560
这是个弹性盒的小游戏

42:23.560 --> 42:24.560
这个小游戏

42:24.560 --> 42:25.560
现在也不要早点去玩

42:25.560 --> 42:26.560
先把我们的政客讲完

42:26.560 --> 42:27.560
学完

42:27.560 --> 42:28.560
学完了下来过后

42:28.560 --> 42:30.560
有精力的话

42:30.560 --> 42:31.560
然后再去玩一个小游戏

42:31.560 --> 42:32.560
因为小游戏里边

42:32.560 --> 42:33.560
用到了一些指使呢

42:33.560 --> 42:35.560
平时就是不是那么常见的

42:35.560 --> 42:37.560
它也会在里边用到

42:37.560 --> 42:39.560
现在不用去看

42:39.560 --> 42:40.560
下来有时间

42:40.560 --> 42:41.560
去看弹性盒小游戏

42:41.560 --> 42:43.560
把我们的练习题做完

42:43.560 --> 42:44.560
做完过后

42:44.560 --> 42:45.560
你可以休息一会

42:45.560 --> 42:46.560
休息一会呢

42:46.560 --> 42:48.560
咱们来听网格的讲解

42:48.560 --> 42:49.560
好

42:49.560 --> 42:51.560
咱们谈下一个话题

42:51.560 --> 42:52.560
网格

42:52.560 --> 42:54.560
网格就是网格

42:54.560 --> 42:55.560
它不是表格

42:55.560 --> 42:56.560
表格

42:56.560 --> 42:57.560
别用表格布局

42:57.560 --> 42:59.560
多年前就被抛弃掉了

42:59.560 --> 43:00.560
你看看

43:00.560 --> 43:01.560
浮动那么差的布局

43:01.560 --> 43:02.560
都可以替代网格

43:02.560 --> 43:03.560
都可以替代表格

43:03.560 --> 43:04.560
不要用表格布局

43:04.560 --> 43:06.560
现在最高级的

43:06.560 --> 43:07.560
多行多列布局方式

43:07.560 --> 43:08.560
叫网格

43:08.560 --> 43:09.560
官方的说法

43:09.560 --> 43:10.560
网格是

43:10.560 --> 43:12.560
多行多列布局方式的

43:12.560 --> 43:14.560
终极解决方案

43:14.560 --> 43:16.560
没有比它更好的了

43:16.560 --> 43:18.560
咱们来看一下这个网格

43:18.560 --> 43:20.560
网格里边有给大家提供了

43:20.560 --> 43:21.560
这么几个文档

43:21.560 --> 43:22.560
一个是MDN的详细文档

43:22.560 --> 43:23.560
还有一个是

43:23.560 --> 43:25.560
软易风的网格布局

43:25.560 --> 43:26.560
应该是目前

43:26.560 --> 43:27.560
所谓博客里边讲的

43:27.560 --> 43:28.560
最好的网格布局

43:28.560 --> 43:29.560
他讲的非常详细

43:29.560 --> 43:30.560
因为他详细了

43:30.560 --> 43:31.560
所以他东西多

43:31.560 --> 43:32.560
你们记不住

43:32.560 --> 43:33.560
所以说我们这里

43:33.560 --> 43:34.560
还是给大家写的

43:34.560 --> 43:35.560
一个比较简约的

43:35.560 --> 43:36.560
这么一个网格布局

43:36.560 --> 43:37.560
平时开发中

43:37.560 --> 43:38.560
绝大部分网格布局

43:38.560 --> 43:39.560
就已经完全都用了

43:39.560 --> 43:40.560
如果说你不够用的话

43:40.560 --> 43:41.560
你可以

43:41.560 --> 43:42.560
没事的时候

43:42.560 --> 43:43.560
可以看一下这个教程

43:43.560 --> 43:44.560
然后这里一个

43:44.560 --> 43:45.560
网格布局小游戏

43:45.560 --> 43:46.560
好像是一个拔萝卜

43:46.560 --> 43:47.560
还是什么样子

43:47.560 --> 43:48.560
你可以下来有时间

43:48.560 --> 43:49.560
可以去玩一玩

43:49.560 --> 43:51.560
但是先把作业完成

43:52.560 --> 43:53.560
网格布局

43:54.560 --> 43:55.560
咱们来看一下

43:55.560 --> 43:56.560
网格布局

43:56.560 --> 43:57.560
就是生成一个

43:57.560 --> 43:58.560
多行多列的格子

43:58.560 --> 43:59.560
我们的纸元素

43:59.560 --> 44:00.560
就往格子里边放

44:00.560 --> 44:01.560
它自动往里边放

44:01.560 --> 44:02.560
就这么简单

44:02.560 --> 44:03.560
那么怎么来生成

44:03.560 --> 44:04.560
网格布局呢

44:05.560 --> 44:06.560
先大开看一下文档

44:06.560 --> 44:07.560
然后我们来做练习

44:08.560 --> 44:09.560
Display Grid

44:09.560 --> 44:10.560
Grid就是网格的意思

44:12.560 --> 44:13.560
那么富元素

44:13.560 --> 44:14.560
去设置这个东西

44:14.560 --> 44:15.560
它就生成了一个

44:15.560 --> 44:16.560
网格布局了

44:16.560 --> 44:17.560
就表示它是一个

44:17.560 --> 44:18.560
Grid Container

44:18.560 --> 44:19.560
网格容器

44:19.560 --> 44:20.560
它里面的纸元素

44:20.560 --> 44:22.560
就变成了网格项目

44:22.560 --> 44:23.560
跟那个弹性和

44:23.560 --> 44:25.560
那个说法是一样的

44:25.560 --> 44:26.560
那网格布局

44:26.560 --> 44:27.560
你要去设置它的列

44:27.560 --> 44:29.560
不然它只有一列

44:29.560 --> 44:30.560
你看一下

44:30.560 --> 44:31.560
我们来做一个

44:31.560 --> 44:33.560
写个小的例子

44:34.560 --> 44:35.560
demo

44:35.560 --> 44:36.560
二

44:37.560 --> 44:38.560
来吧

44:38.560 --> 44:40.560
来写个小的例子

44:40.560 --> 44:41.560
还一样

44:41.560 --> 44:42.560
DIV Container

44:42.560 --> 44:44.560
里面有一些DIV Item

44:44.560 --> 44:45.560
乘以十个

44:45.560 --> 44:46.560
乘以二十个吧

44:47.560 --> 44:48.560
然后我们这里边

44:48.560 --> 44:49.560
写个Stand

44:49.560 --> 44:50.560
Item

44:51.560 --> 44:53.560
给它设置一个背景颜色

44:54.560 --> 44:55.560
背景颜色为

44:55.560 --> 44:56.560
Air不是你吗

44:56.560 --> 44:57.560
Border

44:57.560 --> 44:58.560
一个相处

44:58.560 --> 44:59.560
solid CTC

45:01.560 --> 45:02.560
打开看一下

45:04.560 --> 45:06.870
然后给它

45:06.870 --> 45:08.870
容器的设置一个

45:09.870 --> 45:10.870
设置一个

45:11.870 --> 45:12.870
设置一个啥

45:12.870 --> 45:13.870
设置一个

45:13.870 --> 45:14.870
也没什么好设置的

45:14.870 --> 45:16.870
设置一个Border吧

45:16.870 --> 45:17.870
一个相处

45:17.870 --> 45:18.870
solid

45:22.870 --> 45:23.870
你看

45:23.870 --> 45:24.870
外面那个盒子

45:24.870 --> 45:25.870
就变成了网格

45:26.870 --> 45:27.870
里面的盒子

45:27.870 --> 45:28.870
为什么

45:28.870 --> 45:30.870
只有这么几个呢

45:30.870 --> 45:31.870
不是只有这么几个

45:31.870 --> 45:32.870
是因为

45:32.870 --> 45:33.870
它的格子很多

45:33.870 --> 45:34.870
我给它设置一个高度

45:34.870 --> 45:36.870
这个高度你看得清楚一点

45:36.870 --> 45:37.870
三十个相处

45:38.870 --> 45:40.870
实际上是有二十个了

45:42.870 --> 45:43.870
你看这个容器

45:44.870 --> 45:45.870
我们现在还没有变成网格

45:45.870 --> 45:46.870
把它变成网格

45:46.870 --> 45:47.870
Display

45:47.870 --> 45:48.870
Grid

45:49.870 --> 45:50.870
它变成网格了

45:50.870 --> 45:51.870
好像没有什么变化

45:51.870 --> 45:52.870
你看一下

45:52.870 --> 45:53.870
它变成Grid

45:53.870 --> 45:54.870
点一下

45:54.870 --> 45:55.870
有些数字

45:55.870 --> 45:56.870
这个数字不用管

45:56.870 --> 45:57.870
你看

45:57.870 --> 45:58.870
它是不是有一个格子

45:58.870 --> 45:59.870
它现在只有一列

45:59.870 --> 46:00.870
所以只有一列

46:00.870 --> 46:01.870
默认情况下

46:01.870 --> 46:02.870
那么这些

46:02.870 --> 46:04.870
纸元数就往个格子里边排

46:04.870 --> 46:06.870
第一行第一列排一个

46:06.870 --> 46:07.870
第二行第二列排一个

46:07.870 --> 46:08.870
第三第四第五

46:08.870 --> 46:09.870
一次排

46:10.870 --> 46:11.870
默认情况下就是这样子

46:11.870 --> 46:13.870
但是我们可以去设置

46:13.870 --> 46:14.870
它的列数

46:14.870 --> 46:15.870
已经每列降的宽度

46:15.870 --> 46:16.870
比方说我们这样的设置

46:16.870 --> 46:18.870
Grid template columns

46:18.870 --> 46:19.870
不用去设置个单词

46:19.870 --> 46:20.870
五十五十五十

46:20.870 --> 46:21.870
啥意思

46:21.870 --> 46:23.870
就表示这个网格

46:23.870 --> 46:24.870
生成三列

46:24.870 --> 46:25.870
每列宽度为五十

46:25.870 --> 46:27.870
好 咱们来试一下

46:28.870 --> 46:29.870
我们现在去设置一下

46:29.870 --> 46:30.870
这个

46:31.870 --> 46:35.760
就在这里弄

46:35.760 --> 46:36.760
注意要是副元数

46:36.760 --> 46:37.760
这是副元数

46:37.760 --> 46:40.760
Grid template columns

46:40.760 --> 46:41.760
五十个相数

46:41.760 --> 46:42.760
五十个相数

46:42.760 --> 46:44.760
五十个相数

46:45.760 --> 46:46.760
你看

46:46.760 --> 46:47.760
你看这个

46:47.760 --> 46:48.760
现在的网格

46:48.760 --> 46:49.760
就变成

46:49.760 --> 46:51.760
把个数字去掉

46:51.760 --> 46:52.760
指着它你看

46:52.760 --> 46:53.760
现在的格子

46:53.760 --> 46:54.760
是不是这样的格子

46:54.760 --> 46:55.760
对吧

46:55.760 --> 46:56.760
三列

46:56.760 --> 46:57.760
然后三列里边

46:57.760 --> 46:59.760
一次排列

46:59.760 --> 47:00.760
格子在里边

47:00.760 --> 47:01.760
重做到右

47:01.760 --> 47:02.760
重上到下

47:02.760 --> 47:03.760
一次排列

47:03.760 --> 47:04.760
我们比方说在这里

47:04.760 --> 47:05.760
item来给它生成一个数字

47:05.760 --> 47:06.760
看得清楚一点

47:06.760 --> 47:07.760
DIV item

47:07.760 --> 47:08.760
生成一个

47:08.760 --> 47:09.760
成一二十

47:09.760 --> 47:13.140
生成一个数字

47:13.140 --> 47:15.140
然后给它变成

47:16.140 --> 47:18.140
Grid template columns

47:18.140 --> 47:19.140
五十

47:20.140 --> 47:21.140
五十

47:21.140 --> 47:22.140
五十

47:23.140 --> 47:24.140
对吧

47:24.140 --> 47:25.140
你看就这样排列了

47:25.140 --> 47:26.140
就这么简单

47:27.140 --> 47:28.140
你不用去设置行

47:28.140 --> 47:29.140
行的话

47:29.140 --> 47:30.140
它不够

47:30.140 --> 47:31.140
它会自动增加

47:31.140 --> 47:32.140
这就是网格

47:32.140 --> 47:33.140
当你可以设置行

47:33.140 --> 47:35.140
比方说我现在不设置别了

47:35.140 --> 47:36.140
我设置行

47:36.140 --> 47:37.140
可不可以呢

47:37.140 --> 47:38.140
也可以

47:40.140 --> 47:41.140
我地也设置

47:41.140 --> 47:42.140
行也设置

47:42.140 --> 47:43.140
比方说我这里再设置一个多

47:43.140 --> 47:46.140
Grid template rows

47:47.140 --> 47:49.140
比方说我行的话

47:49.140 --> 47:50.140
我多设置一点

47:50.140 --> 47:51.140
一二三四五六七

47:51.140 --> 47:52.140
设置个八行

47:52.140 --> 47:55.090
一百个相数

47:55.090 --> 47:56.090
一百个相数

47:56.090 --> 47:57.090
一百个相数

47:57.090 --> 47:58.090
一百个相数

47:58.090 --> 47:59.090
一百个相数

47:59.090 --> 48:00.090
就四行了

48:00.090 --> 48:04.510
八行

48:04.510 --> 48:05.510
现在我们带来看

48:06.510 --> 48:07.510
Grid

48:08.510 --> 48:09.510
列宽

48:09.510 --> 48:10.510
五十

48:10.510 --> 48:11.510
行高

48:11.510 --> 48:12.510
八十

48:13.510 --> 48:14.510
然后这个时候

48:14.510 --> 48:15.510
其实你可以

48:15.510 --> 48:16.510
里边的项目

48:16.510 --> 48:17.510
里边的元素

48:17.510 --> 48:18.510
你可以不用设置宽高

48:18.510 --> 48:19.510
它会自动

48:19.510 --> 48:20.510
没有设置宽高的话

48:20.510 --> 48:21.510
它会自动称满个盒子

48:21.510 --> 48:22.510
称满大原格

48:24.510 --> 48:25.510
它会自动称满

48:27.510 --> 48:28.510
这就是

48:28.510 --> 48:29.510
那么这就是目前的情况

48:29.510 --> 48:30.510
中间为什么有空隙

48:30.510 --> 48:31.510
没有空隙

48:31.510 --> 48:32.510
这是border

48:32.510 --> 48:33.510
这是border

48:33.510 --> 48:34.510
border一去

48:35.510 --> 48:38.510
这就是这么一个情况

48:38.510 --> 48:39.510
那时候

48:39.510 --> 48:40.510
大家如果说

48:40.510 --> 48:41.510
这个航不够怎么办

48:41.510 --> 48:42.510
航不够的话

48:42.510 --> 48:43.510
它会自动增加

48:43.510 --> 48:44.510
不过它增加的

48:44.510 --> 48:46.510
它新增的航

48:46.510 --> 48:48.510
新增的航它的高度

48:48.510 --> 48:49.510
它就是自动高度

48:50.510 --> 48:52.510
这就是这么一个情况

48:52.510 --> 48:53.510
真正网格布局

48:53.510 --> 48:54.510
基本的情况

48:54.510 --> 48:55.510
就这么一个情况

48:55.510 --> 48:57.510
然后概念的话就是

48:57.510 --> 48:58.510
外面的复原素

48:58.510 --> 48:59.510
叫做网格容器

48:59.510 --> 49:00.510
里边的纸元素

49:00.510 --> 49:01.510
叫做网格项目

49:02.510 --> 49:03.510
那么接下来

49:03.510 --> 49:05.510
这些文档了

49:05.510 --> 49:06.510
我来快速的浏览一下

49:06.510 --> 49:07.510
定义航和列

49:07.510 --> 49:08.510
通过这个玩意

49:08.510 --> 49:09.510
就刚才我们写的

49:09.510 --> 49:10.510
定义航

49:10.510 --> 49:11.510
通过它来定义列

49:11.510 --> 49:12.510
你看

49:12.510 --> 49:13.510
语法是一样的

49:13.510 --> 49:14.510
写法都完全一样的

49:14.510 --> 49:15.510
下面我就用列的方式

49:15.510 --> 49:16.510
来举例子

49:16.510 --> 49:17.510
51150

49:17.510 --> 49:18.510
就表示有3列

49:18.510 --> 49:19.510
第1列50

49:19.510 --> 49:20.510
第2列100

49:20.510 --> 49:21.510
第3列150

49:22.510 --> 49:23.510
这里还有一种特殊写法

49:23.510 --> 49:24.510
叫repeat

49:24.510 --> 49:25.510
这是个函数

49:25.510 --> 49:26.510
叫重复

49:26.510 --> 49:27.510
有的是一个个写的话

49:27.510 --> 49:28.510
列很多

49:28.510 --> 49:29.510
一个个写很麻烦

49:29.510 --> 49:30.510
那就是repeat3

49:30.510 --> 49:31.510
100项素

49:31.510 --> 49:32.510
啥意思

49:32.510 --> 49:33.510
一共有3列

49:33.510 --> 49:35.510
统一为列宽为100

49:35.510 --> 49:37.510
就看就看明白了

49:37.510 --> 49:39.510
我们这里写一下吧

49:40.510 --> 49:42.510
我们这里能使用

49:42.510 --> 49:44.510
列的话

49:44.510 --> 49:46.510
列的话我们就用repeat

49:48.510 --> 49:49.510
有

49:49.510 --> 49:51.510
每列50个宽度

49:52.510 --> 49:53.510
那就5列的

49:54.510 --> 49:55.510
就这么简单

49:55.510 --> 49:56.510
好

49:56.510 --> 49:57.510
然后继续看

49:57.510 --> 49:59.510
还可以这样子写

49:59.510 --> 50:00.510
这个是EFR

50:00.510 --> 50:01.510
EFR

50:01.510 --> 50:02.510
这啥意思呢

50:02.510 --> 50:03.510
又是持剩余空间

50:03.510 --> 50:04.510
好

50:04.510 --> 50:06.510
第1列占50个像素

50:06.510 --> 50:07.510
那么后边是有剩余空间

50:07.510 --> 50:08.510
对吧

50:08.510 --> 50:09.510
第1列占了50

50:09.510 --> 50:10.510
那么后边的剩余空间

50:10.510 --> 50:11.510
是不是这一部分

50:11.510 --> 50:12.510
这一部分呢

50:13.510 --> 50:14.510
EFR

50:14.510 --> 50:15.510
EFR就是

50:15.510 --> 50:16.510
这两列

50:16.510 --> 50:18.510
吃掉剩余空间

50:18.510 --> 50:19.510
1比1的比例去吃

50:19.510 --> 50:21.510
FR叫fragment

50:21.510 --> 50:22.510
就是片段

50:22.510 --> 50:23.510
就爬了离间

50:23.510 --> 50:24.510
成比例就完事了

50:24.510 --> 50:25.510
1比1的比例

50:25.510 --> 50:26.510
去吃这个剩余空间

50:26.510 --> 50:27.510
所以说这一列

50:27.510 --> 50:28.510
这一列他们的等宽的

50:28.510 --> 50:29.510
就这么简单

50:29.510 --> 50:30.510
好

50:30.510 --> 50:31.510
再看这后边

50:31.510 --> 50:33.510
repeat3EFR

50:33.510 --> 50:35.510
那么就是没有固定的列宽

50:35.510 --> 50:36.510
整个都是剩余空间

50:36.510 --> 50:38.510
整个都是剩余空间的话

50:38.510 --> 50:40.510
分成3列

50:40.510 --> 50:42.510
每列比例都是1EFR

50:42.510 --> 50:44.510
那么就是平均分成3分

50:44.510 --> 50:46.510
就这么简单

50:46.510 --> 50:47.510
那么这个愚法

50:47.510 --> 50:49.510
对于行也是同样适用的

50:51.510 --> 50:52.510
好

50:52.510 --> 50:53.510
然后改变列的方向

50:53.510 --> 50:54.510
改变列的方向呢

50:54.510 --> 50:56.510
就叫做grid

50:56.510 --> 50:57.510
就排列方向

50:57.510 --> 50:58.510
不是改变列的方向

50:58.510 --> 50:59.510
改变排列方向

50:59.510 --> 51:00.510
默认情况下

51:00.510 --> 51:01.510
那是1

51:01.510 --> 51:02.510
是这样排列的

51:02.510 --> 51:05.510
1 2 3 4 5 6 7 8

51:05.510 --> 51:06.510
对吧

51:06.510 --> 51:07.510
是这样排列的

51:07.510 --> 51:08.510
那么你可以改变它排列方向

51:08.510 --> 51:09.510
通过的grid

51:09.510 --> 51:10.510
outflow

51:10.510 --> 51:11.510
不用管它的单词

51:11.510 --> 51:12.510
无所谓

51:12.510 --> 51:13.510
你把它改成color

51:13.510 --> 51:15.510
那就可以按列来排放

51:15.510 --> 51:16.510
啥意思

51:16.510 --> 51:17.510
比方说这里有个例子

51:17.510 --> 51:18.510
有3列

51:18.510 --> 51:20.510
有3行

51:20.510 --> 51:21.510
3行

51:21.510 --> 51:22.510
每一行

51:22.510 --> 51:23.510
占一个比例

51:23.510 --> 51:26.510
你把容器吃满

51:26.510 --> 51:28.510
如果说容器有高度的话

51:28.510 --> 51:30.510
把容器的高度

51:30.510 --> 51:31.510
全部吃掉

51:31.510 --> 51:32.510
1比1的比例

51:32.510 --> 51:34.510
分成3行

51:34.510 --> 51:35.510
然后

51:35.510 --> 51:38.510
gridoutflow

51:38.510 --> 51:40.510
把它变成clone的方式

51:40.510 --> 51:42.510
它就不但按行来排列的

51:42.510 --> 51:44.510
按列来排列

51:44.510 --> 51:46.510
它这样排列的

51:46.510 --> 51:48.510
如果要做这样的效果的话

51:48.510 --> 51:50.510
就可以用这种方式

51:50.510 --> 51:51.510
往下面

51:51.510 --> 51:52.510
单元格之间的渐细

51:52.510 --> 51:55.510
你看目前的单元格之间

51:55.510 --> 51:56.510
是没有渐细的

51:56.510 --> 51:57.510
你是可以设置渐细的

51:57.510 --> 51:58.510
怎么设置呢

51:58.510 --> 51:59.510
非常简单

51:59.510 --> 52:00.510
设置grid

52:00.510 --> 52:01.510
第一个表示

52:01.510 --> 52:02.510
行的渐细

52:02.510 --> 52:03.510
第二个表示列的渐细

52:03.510 --> 52:05.510
好,咱们来试一下

52:05.510 --> 52:08.510
这里就是grid

52:08.510 --> 52:10.510
行的渐细比方10个像素

52:10.510 --> 52:12.510
列的渐细20个像素

52:12.510 --> 52:14.510
不就完了吗

52:14.510 --> 52:16.510
行10个像素的渐细

52:16.510 --> 52:17.510
列20个像素的渐细

52:17.510 --> 52:19.510
那么这个其实是一个数学属性

52:19.510 --> 52:21.510
你要知道它是不是数学属性

52:21.510 --> 52:22.510
非常简单

52:22.510 --> 52:25.510
你看一下这里有没有这个玩意

52:25.510 --> 52:27.510
你看这个border是不是数学属性

52:27.510 --> 52:29.510
它是有这么东西组成的

52:29.510 --> 52:31.510
然后这里也是数学属性

52:31.510 --> 52:33.510
概谱

52:33.510 --> 52:34.510
所以row概谱

52:34.510 --> 52:35.510
行的渐细

52:35.510 --> 52:36.510
clang概谱

52:36.510 --> 52:37.510
列的渐细

52:37.510 --> 52:38.510
不用去记这个单词,无所谓的

52:38.510 --> 52:39.510
你只要知道

52:39.510 --> 52:40.510
这个可以设置渐细就完事了

52:40.510 --> 52:41.510
忘了就差

52:41.510 --> 52:43.510
单元格内部的对析

52:43.510 --> 52:44.510
默认情况下

52:44.510 --> 52:45.510
它是里边的元素

52:45.510 --> 52:47.510
在单元格里边是充满的

52:47.510 --> 52:48.510
充满单元格的

52:48.510 --> 52:49.510
就是你没有设置宽高

52:50.510 --> 52:51.510
咱们来看一下吧

52:51.510 --> 52:52.510
默认情况下

52:52.510 --> 52:54.510
是不是每一个格子

52:55.510 --> 52:57.510
你看这个网格

52:57.510 --> 52:58.510
你看一个网格

52:59.510 --> 53:00.510
网格里边

53:05.870 --> 53:09.590
这样子

53:09.590 --> 53:11.590
你看这个地方

53:11.590 --> 53:12.590
是不是就是空隙

53:12.590 --> 53:14.590
这种格式的就是空隙

53:14.590 --> 53:16.590
好,那么现在网格里边

53:16.590 --> 53:17.590
每个格子

53:17.590 --> 53:18.590
它是不是里边的元素

53:18.590 --> 53:19.590
把格子充满的

53:19.590 --> 53:21.590
如果说我把设置多一点

53:21.590 --> 53:22.590
50个像素

53:22.590 --> 53:23.590
100个像素

53:25.590 --> 53:28.590
GridTemplateRoseRepeat

53:29.590 --> 53:30.590
有势力吗

53:30.590 --> 53:31.590
就用势力

53:32.590 --> 53:33.590
势力

53:33.590 --> 53:35.590
每件也是100个像素

53:35.590 --> 53:36.590
你看是不是充满的

53:36.590 --> 53:37.590
充满格子的

53:37.590 --> 53:39.590
我们把这个渐细训练

53:40.590 --> 53:42.590
然后现在我们可以

53:42.590 --> 53:43.590
可以去设置

53:43.590 --> 53:44.590
在每一个单元格里边

53:44.590 --> 53:45.590
它这个元素

53:45.590 --> 53:47.590
在单元格里边的排列方式

53:47.590 --> 53:48.590
就这么个意思

53:48.590 --> 53:49.590
单元格内部的对析

53:49.590 --> 53:51.590
那么它有哪些对析的

53:52.590 --> 53:55.590
它可以这样的写

53:55.590 --> 53:57.590
justifyItems

53:57.590 --> 53:59.590
设置的是

53:59.590 --> 54:01.590
属于移平方向的排列方式

54:01.590 --> 54:03.590
alignItems

54:03.590 --> 54:04.590
是设置的是

54:04.590 --> 54:05.590
处移直方向的排列方式

54:05.590 --> 54:06.590
就这个意思

54:07.590 --> 54:08.590
比方说

54:08.590 --> 54:09.590
我们这里去设置

54:09.590 --> 54:11.590
justifyItemsCenter

54:11.590 --> 54:13.590
alignItemsStart

54:13.590 --> 54:14.590
啥意思呢

54:14.590 --> 54:16.590
就表示属于移平上

54:16.590 --> 54:17.590
center什么意思

54:17.590 --> 54:18.590
居中

54:18.590 --> 54:19.590
然后呢

54:20.590 --> 54:22.590
处移直方向上Start

54:22.590 --> 54:23.590
再去开始

54:23.590 --> 54:24.590
然后来设置一下

54:25.590 --> 54:26.590
比方说我们这里

54:26.590 --> 54:27.590
去设置

54:28.590 --> 54:33.590
justifyItemsCenter

54:34.590 --> 54:35.590
你看

54:35.590 --> 54:36.590
属于移平方向

54:36.590 --> 54:37.590
它就不再称满了

54:37.590 --> 54:38.590
是居中的

54:38.590 --> 54:41.590
然后就是alignItemsCenter

54:41.590 --> 54:42.590
所以全部是居中

54:42.590 --> 54:44.590
在每一个单元格里边居中

54:45.590 --> 54:47.590
就这么个意思

54:49.900 --> 54:50.900
默认都是拿伸

54:50.900 --> 54:51.900
水平拿伸

54:51.900 --> 54:52.900
垂直也拿伸

54:52.900 --> 54:53.900
如果说你要设置

54:53.900 --> 54:54.900
这个玩意的话

54:54.900 --> 54:55.900
你就查这个

54:55.900 --> 54:56.900
不用去记这些单词

54:56.900 --> 54:57.900
一个都不用记

54:57.900 --> 54:58.900
网格项目定位

54:58.900 --> 54:59.900
这是啥意思呢

54:59.900 --> 55:01.900
这个就有意思了

55:03.900 --> 55:04.900
就是说

55:04.900 --> 55:06.900
我们目前的

55:06.900 --> 55:07.900
情况就是

55:07.900 --> 55:09.900
每一个网格项目

55:09.900 --> 55:11.900
就是每一个指边数

55:11.900 --> 55:12.900
它占一个格子

55:13.900 --> 55:14.900
而且都是一式排列

55:14.900 --> 55:16.900
实际上它可以

55:16.900 --> 55:17.900
做一些非常特别的事情

55:18.900 --> 55:19.900
你可以让它占多个格子

55:19.900 --> 55:21.900
而且不用一式排列

55:21.900 --> 55:23.900
可以排列到别的地方

55:23.900 --> 55:24.900
那么怎么来做呢

55:24.900 --> 55:26.900
这里边有一些概念

55:26.900 --> 55:27.900
有一些小的概念

55:27.900 --> 55:28.900
我们这里

55:28.900 --> 55:30.900
为了让你们看得清楚

55:30.900 --> 55:31.900
我这里设置一个

55:31.900 --> 55:32.900
五行五列的

55:32.900 --> 55:34.900
夜宽都是一样的

55:34.900 --> 55:39.070
看一下

55:39.070 --> 55:41.070
我们现在里边有一个

55:41.070 --> 55:43.070
item这么一个盒子

55:43.070 --> 55:45.070
看一下吧

55:45.070 --> 55:46.070
网格

55:46.070 --> 55:48.070
目前是这个样子

55:48.070 --> 55:49.070
看格子

55:49.070 --> 55:50.070
接下来我们

55:50.070 --> 55:51.070
它默认情况下

55:51.070 --> 55:52.070
就是一式排列

55:52.070 --> 55:53.070
一个占一个格子

55:53.070 --> 55:54.070
那么接下来

55:54.070 --> 55:57.070
我想把它占这个区域

55:57.070 --> 55:59.070
我希望它占这个区域

55:59.070 --> 56:01.070
该怎么来做

56:01.070 --> 56:03.070
好 怎么做呢

56:03.070 --> 56:05.070
你把这个点开

56:05.070 --> 56:07.070
它会有一些数字

56:07.070 --> 56:09.070
这个数字是啥意思呢

56:09.070 --> 56:12.070
表示网格线的编号

56:12.070 --> 56:14.070
就这么一个数字

56:14.070 --> 56:15.070
网格线的编号

56:15.070 --> 56:16.070
其实你看这个图

56:16.070 --> 56:17.070
看的不是很清楚

56:17.070 --> 56:18.070
你看我一个图

56:18.070 --> 56:19.070
还看得清楚一点

56:19.070 --> 56:21.070
每一个网格线都有编号

56:21.070 --> 56:23.070
你看列线编号

56:23.070 --> 56:25.070
是第一个线

56:25.070 --> 56:26.070
主要不是格子

56:26.070 --> 56:27.070
是线的编号

56:27.070 --> 56:29.070
第二根线

56:29.070 --> 56:31.070
线的编号第三根线

56:31.070 --> 56:33.070
第四根线

56:33.070 --> 56:34.070
然后行的编号

56:34.070 --> 56:36.070
第二根线

56:36.070 --> 56:37.070
第三根线

56:37.070 --> 56:38.070
第四根线

56:38.070 --> 56:39.070
还有线有编号

56:39.070 --> 56:40.070
那么刚才看到的

56:40.070 --> 56:42.070
其实就是个线的编号

56:42.070 --> 56:43.070
编号可以有正数

56:43.070 --> 56:44.070
可以用副书

56:44.070 --> 56:45.070
我们用正数

56:45.070 --> 56:46.070
正数好理解

56:46.070 --> 56:47.070
都一样的

56:47.070 --> 56:48.070
所以设置它

56:48.070 --> 56:49.070
占这个区域呢

56:49.070 --> 56:51.070
非常简单

56:51.070 --> 56:52.070
你先给它一个行线

56:52.070 --> 56:53.070
就是第一根线

56:53.070 --> 56:55.070
和第二根列线的交集

56:55.070 --> 56:56.070
就这个点

56:56.070 --> 56:58.070
到这根线

56:58.070 --> 56:59.070
和这根线的交集

56:59.070 --> 57:00.070
就这个点

57:00.070 --> 57:01.070
你把这两个点

57:01.070 --> 57:02.070
一给出来

57:02.070 --> 57:03.070
它就知道了

57:03.070 --> 57:04.070
它怎么去占这个空间

57:04.070 --> 57:05.070
那怎么给呢

57:05.070 --> 57:06.070
非常简单

57:08.070 --> 57:10.070
这两个一二表示

57:10.070 --> 57:12.070
行线为一

57:12.070 --> 57:13.070
列线为二

57:13.070 --> 57:15.070
就这个点

57:15.070 --> 57:17.070
这个三四表示的是

57:17.070 --> 57:19.070
行线为三

57:19.070 --> 57:20.070
列线为四

57:20.070 --> 57:21.070
这个点

57:21.070 --> 57:22.070
就这样

57:22.070 --> 57:23.070
就这样子写

57:23.070 --> 57:24.070
the grid array

57:24.070 --> 57:26.070
当然它也是一个数学属性

57:26.070 --> 57:27.070
它是有很多属性组成的

57:27.070 --> 57:28.070
无所谓

57:28.070 --> 57:29.070
我们就用它

57:29.070 --> 57:30.070
非常方便

57:30.070 --> 57:31.070
那么咱们来看一下

57:31.070 --> 57:32.070
我们这里该怎么写

57:32.070 --> 57:33.070
我们现在要

57:33.070 --> 57:34.070
做的事情

57:34.070 --> 57:35.070
是占这个空间

57:35.070 --> 57:36.070
对吧

57:36.070 --> 57:37.070
我让这个盒子

57:37.070 --> 57:38.070
这个盒子

57:38.070 --> 57:39.070
占这个空间

57:39.070 --> 57:40.070
那怎么写呢

57:40.070 --> 57:41.070
我们就可以

57:41.070 --> 57:42.070
使用看它的行线

57:42.070 --> 57:43.070
行线这个为二

57:43.070 --> 57:44.070
列线为三

57:44.070 --> 57:45.070
是不是这个点

57:45.070 --> 57:46.070
二三

57:46.070 --> 57:48.070
然后这个点

57:48.070 --> 57:49.070
行线为四

57:49.070 --> 57:50.070
列线为五

57:50.070 --> 57:51.070
四五

57:51.070 --> 57:52.070
二三四五

57:52.070 --> 57:53.070
所以说

57:53.070 --> 57:54.070
我们这里

57:54.070 --> 57:55.070
要做的事情

57:55.070 --> 57:56.070
就设置个item

57:56.070 --> 57:57.070
给它设置为

57:57.070 --> 57:59.070
Grid array

57:59.070 --> 58:00.070
区域

58:00.070 --> 58:01.070
二

58:01.070 --> 58:02.070
三

58:02.070 --> 58:03.070
四

58:03.070 --> 58:04.070
五

58:04.070 --> 58:06.830
它就占这个空间

58:06.830 --> 58:07.830
对吧

58:07.830 --> 58:08.830
没问题吧

58:09.830 --> 58:10.830
这就是

58:10.830 --> 58:11.830
这么一个

58:11.830 --> 58:12.830
情况

58:12.830 --> 58:13.830
可以占

58:13.830 --> 58:15.830
指定的一个区域

58:15.830 --> 58:16.830
好

58:16.830 --> 58:17.830
那么就没啥了

58:17.830 --> 58:18.830
这就是咱们

58:18.830 --> 58:19.830
网格布局

58:19.830 --> 58:20.830
就讲完了

58:20.830 --> 58:22.830
我们这两种方式

58:22.830 --> 58:24.830
一个是浮动

58:24.830 --> 58:26.830
这是之前学习过的

58:26.830 --> 58:27.830
做文字环绕的

58:27.830 --> 58:28.830
弹性盒

58:28.830 --> 58:29.830
做南方布局

58:29.830 --> 58:30.830
网格做多方布局

58:30.830 --> 58:31.830
好 接下来我们来做练习

58:31.830 --> 58:32.830
网格练习

58:32.830 --> 58:33.830
这里有这么几个

58:33.830 --> 58:36.530
合同代码

58:36.530 --> 58:38.530
当然我还是鼓励大家

58:38.530 --> 58:40.530
在听我讲练习之前

58:40.530 --> 58:42.530
尝试着自己去做一下

58:43.530 --> 58:44.530
它并不复杂

58:45.530 --> 58:46.530
你采约文档去解决

58:46.530 --> 58:47.530
只要听到我们这些概念

58:47.530 --> 58:49.530
你采约文档一定是能解决的

58:50.530 --> 58:51.530
好 这里的第一个效果

58:52.530 --> 58:53.530
实在不行

58:53.530 --> 58:54.530
来听我讲

58:54.530 --> 58:55.530
没关系的

58:56.530 --> 58:57.530
我要排列成这个样子

58:57.530 --> 58:58.530
这个样子

58:58.530 --> 58:59.530
就是一个普通的网格排列

58:59.530 --> 59:00.530
对吧

59:00.530 --> 59:01.530
那我们来排一杯

59:01.530 --> 59:03.530
好 找到我们的客厂代码

59:03.530 --> 59:05.530
我们在这里吸血

59:05.530 --> 59:06.530
无非就是把这个容器

59:06.530 --> 59:07.530
因为它是多行多列布局

59:07.530 --> 59:09.530
随时我们把这个容器的

59:09.530 --> 59:10.530
改成Display

59:11.530 --> 59:12.530
Grid

59:13.530 --> 59:14.530
网格

59:14.530 --> 59:16.530
那么它目前就变成单行单列了

59:16.530 --> 59:17.530
就是

59:17.530 --> 59:18.530
所以只有一列

59:18.530 --> 59:19.530
对吧

59:19.530 --> 59:20.530
行的话自动生成

59:20.530 --> 59:21.530
现在我们要把它变成几列

59:21.530 --> 59:22.530
是不是4列

59:22.530 --> 59:24.530
那么我们这里可以使用

59:24.530 --> 59:25.530
GridTemplates

59:25.530 --> 59:26.530
Clump

59:26.530 --> 59:27.530
当然你要查文档

59:27.530 --> 59:28.530
当时记不住的你们

59:28.530 --> 59:29.530
因为我写的太多了

59:29.530 --> 59:30.530
Clump

59:30.530 --> 59:31.530
Repeat

59:32.530 --> 59:33.530
几行呢

59:33.530 --> 59:34.530
几列呢

59:34.530 --> 59:35.530
4列

59:36.530 --> 59:37.530
每列的宽度一样

59:37.530 --> 59:38.530
然后就用E

59:38.530 --> 59:39.530
FR

59:39.530 --> 59:40.530
就出来了

59:40.530 --> 59:41.530
好 咱们来看一下

59:41.530 --> 59:42.530
目前是什么情况

59:43.530 --> 59:44.530
Clumps

59:44.530 --> 59:45.530
为什么有空隙呢

59:45.530 --> 59:46.530
空隙哪来的呢

59:46.530 --> 59:47.530
是因为这个Item

59:47.530 --> 59:48.530
我刚才是把宽高的

59:48.530 --> 59:50.530
不是宽高的话就撑满的

59:50.530 --> 59:52.530
不是宽高它就撑满的

59:53.530 --> 59:54.530
目前是这个样子

59:55.530 --> 59:57.530
然后让我们给它去

59:57.530 --> 59:59.530
设置一个行的键系

59:59.530 --> 01:00:00.530
行的键系

01:00:00.530 --> 01:00:01.530
来吧

01:00:01.530 --> 01:00:02.530
就是

01:00:03.530 --> 01:00:04.530
RowGag

01:00:04.530 --> 01:00:05.530
或者就是Gag

01:00:05.530 --> 01:00:07.530
列没有键系

01:00:07.530 --> 01:00:08.530
行

01:00:08.530 --> 01:00:09.530
20个项书吧

01:00:09.530 --> 01:00:10.530
列没有键系

01:00:10.530 --> 01:00:12.530
或者就是RowGag

01:00:12.530 --> 01:00:13.530
长了键系

01:00:13.530 --> 01:00:14.530
20个项书

01:00:14.530 --> 01:00:17.220
差不多

01:00:17.220 --> 01:00:18.220
然后呢

01:00:18.220 --> 01:00:19.220
它现在有一个排列的问题

01:00:19.220 --> 01:00:20.220
就是在

01:00:20.220 --> 01:00:22.220
盒子在单元隔离一边

01:00:23.220 --> 01:00:25.220
盒子在单元隔离一边

01:00:26.220 --> 01:00:28.220
把单元隔拔弄出来

01:00:28.220 --> 01:00:30.220
单元隔离一边是居中

01:00:30.220 --> 01:00:31.220
在这点

01:00:31.220 --> 01:00:32.220
这是我们的

01:00:33.220 --> 01:00:34.220
盒子在单元隔离一边

01:00:34.220 --> 01:00:35.220
它不是居中的

01:00:35.220 --> 01:00:36.220
看到没

01:00:36.220 --> 01:00:37.220
这是一个单元隔

01:00:37.220 --> 01:00:38.220
它没有居中

01:00:39.220 --> 01:00:40.220
那么我们把居中就完事了

01:00:40.220 --> 01:00:42.220
那么怎么来看哪个居中呢

01:00:42.220 --> 01:00:44.220
插网格插纳列

01:00:44.220 --> 01:00:46.220
单元隔内部的堆齐

01:00:46.220 --> 01:00:47.220
水平方向上居中

01:00:47.220 --> 01:00:49.220
justify items

01:00:53.690 --> 01:00:54.690
完了

01:00:55.690 --> 01:00:56.690
就完事了

01:00:56.690 --> 01:00:57.690
这这一道题

01:00:57.690 --> 01:00:58.690
大家听视频

01:00:58.690 --> 01:00:59.690
把它做一下

01:00:59.690 --> 01:01:03.000
好 下一道题

01:01:04.000 --> 01:01:05.000
怎么开了这么多

01:01:06.000 --> 01:01:07.000
第二题

01:01:14.830 --> 01:01:15.830
第二题呢

01:01:15.830 --> 01:01:16.830
它也是一个网格

01:01:16.830 --> 01:01:17.830
也是多行多列

01:01:17.830 --> 01:01:18.830
只不过它的排列方式呢

01:01:18.830 --> 01:01:20.830
是从上到下的排列的

01:01:20.830 --> 01:01:21.830
就是按列来排列的

01:01:21.830 --> 01:01:22.830
对吧

01:01:22.830 --> 01:01:24.830
你知道我们有这个功能就行了

01:01:24.830 --> 01:01:25.830
然后知道怎么去查稳当

01:01:25.830 --> 01:01:26.830
你忘了属性都没关系

01:01:26.830 --> 01:01:28.830
先把它变成网格再说

01:01:34.830 --> 01:01:36.830
那么有多少行呢

01:01:36.830 --> 01:01:37.830
按列排列的话

01:01:37.830 --> 01:01:38.830
你要规定个行

01:01:38.830 --> 01:01:39.830
不然然后一直往下面排

01:01:39.830 --> 01:01:40.830
规定个行数

01:01:40.830 --> 01:01:41.830
有多少行呢

01:01:41.830 --> 01:01:42.830
一共有13行

01:01:42.830 --> 01:01:45.830
那我们就把这里的变成13行

01:01:45.830 --> 01:01:46.830
叫做

01:01:53.830 --> 01:01:54.830
好 那么现在变成13行了

01:01:54.830 --> 01:01:56.830
那为什么还会往下面排的

01:01:56.830 --> 01:01:58.830
因为它现在只有一列

01:01:58.830 --> 01:01:59.830
它排不下

01:01:59.830 --> 01:02:00.830
因为它是按

01:02:00.830 --> 01:02:01.830
现在是按行那排列的

01:02:01.830 --> 01:02:03.830
就是先排第一行

01:02:03.830 --> 01:02:04.830
然后再排第二行

01:02:04.830 --> 01:02:05.830
从头到右

01:02:05.830 --> 01:02:06.830
从头到右

01:02:06.830 --> 01:02:08.830
排到第13行的时候

01:02:08.830 --> 01:02:09.830
发现行不够了

01:02:09.830 --> 01:02:10.830
自动生成

01:02:10.830 --> 01:02:11.830
它是这种排列方式

01:02:11.830 --> 01:02:13.830
你要把它变成按列来排列

01:02:13.830 --> 01:02:14.830
那么它就是

01:02:14.830 --> 01:02:15.830
从上到下来排列了

01:02:15.830 --> 01:02:17.830
排到13行

01:02:17.830 --> 01:02:18.830
已经够了

01:02:18.830 --> 01:02:19.830
到了13行

01:02:19.830 --> 01:02:20.830
已经够了

01:02:20.830 --> 01:02:21.830
然后接下来

01:02:21.830 --> 01:02:22.830
换列

01:02:22.830 --> 01:02:23.830
下一定

01:02:23.830 --> 01:02:24.830
从上到下排列

01:02:24.830 --> 01:02:25.830
要改变它的排列方式

01:02:25.830 --> 01:02:27.830
那么准备改变排列方式呢

01:02:27.830 --> 01:02:28.830
查

01:02:28.830 --> 01:02:30.830
改变排列方向

01:02:30.830 --> 01:02:31.830
去把它这个

01:02:31.830 --> 01:02:33.830
Grid Outune Columns

01:02:33.830 --> 01:02:35.830
复制一下

01:02:35.830 --> 01:02:36.830
我都记不住一个单词

01:02:36.830 --> 01:02:37.830
这么长

01:02:37.830 --> 01:02:38.830
好 保存

01:02:39.830 --> 01:02:40.830
这就完了

01:02:40.830 --> 01:02:42.830
然后再来干嘛呢

01:02:42.830 --> 01:02:43.830
再来去做一些微调

01:02:43.830 --> 01:02:44.830
什么行的渐息啊

01:02:44.830 --> 01:02:45.830
对吧

01:02:45.830 --> 01:02:46.830
来 做一个行的渐息

01:02:46.830 --> 01:02:47.830
Row Gap

01:02:47.830 --> 01:02:49.830
二十个项书吧

01:02:49.830 --> 01:02:50.830
行的渐息

01:02:50.830 --> 01:02:51.830
然后再来做一个

01:02:51.830 --> 01:02:53.830
单元格内部的对齐

01:02:53.830 --> 01:02:55.830
你看一下一个单元格内部

01:02:55.830 --> 01:02:56.830
它没有居宗

01:02:56.830 --> 01:02:57.830
对吧

01:02:57.830 --> 01:02:58.830
我们横向上它居宗

01:02:58.830 --> 01:03:00.830
就用来justify items

01:03:02.830 --> 01:03:03.830
完事

01:03:03.830 --> 01:03:04.830
好 这第二题

01:03:04.830 --> 01:03:05.830
去做一下

01:03:05.830 --> 01:03:06.830
你要做

01:03:06.830 --> 01:03:07.830
好 最后一道题

01:03:07.830 --> 01:03:08.830
第三题

01:03:09.830 --> 01:03:10.830
目前是这个样子

01:03:13.340 --> 01:03:14.340
第三题

01:03:14.340 --> 01:03:16.340
其实第三题没有难度

01:03:16.340 --> 01:03:17.340
它没有什么难度

01:03:17.340 --> 01:03:19.340
就是我们要慢慢去算这个

01:03:19.340 --> 01:03:20.340
线

01:03:20.340 --> 01:03:22.340
要把它排列成这个样子

01:03:22.340 --> 01:03:23.340
一点点来吧

01:03:23.340 --> 01:03:24.340
首先变成网格

01:03:24.340 --> 01:03:26.340
这肯定是个多行多列的

01:03:26.340 --> 01:03:28.340
所以把它变成一个网格

01:03:29.340 --> 01:03:30.340
Display

01:03:34.340 --> 01:03:36.340
把它变成网格再说

01:03:36.340 --> 01:03:37.340
它变出来了

01:03:37.340 --> 01:03:38.340
然后呢

01:03:38.340 --> 01:03:40.340
给它设置一个列的渐息

01:03:40.340 --> 01:03:41.340
和行的渐息吧

01:03:42.340 --> 01:03:44.340
都为十个项书吧

01:03:44.340 --> 01:03:45.340
再一个

01:03:45.340 --> 01:03:46.340
十个项书

01:03:46.340 --> 01:03:47.340
那你先设置一个的话

01:03:47.340 --> 01:03:48.340
就是列的渐息和行的渐息

01:03:48.340 --> 01:03:49.340
都为十个项书

01:03:50.340 --> 01:03:51.340
好 接下来排了

01:03:51.340 --> 01:03:52.340
一个个来排

01:03:52.340 --> 01:03:54.340
首先这个item1

01:03:55.340 --> 01:03:56.340
它要

01:03:56.340 --> 01:03:59.340
首先我们要定这个整个网格

01:03:59.340 --> 01:04:00.340
它几行几列

01:04:00.340 --> 01:04:01.340
你们就看这个最终效果

01:04:01.340 --> 01:04:02.340
它有几行几列

01:04:02.340 --> 01:04:04.340
你不用几行几列比较好

01:04:04.340 --> 01:04:07.290
几行呢

01:04:07.290 --> 01:04:08.290
一 二

01:04:08.290 --> 01:04:09.290
一 二 三 四

01:04:09.290 --> 01:04:10.290
四行

01:04:10.290 --> 01:04:11.290
对吧

01:04:11.290 --> 01:04:12.290
几列呢

01:04:12.290 --> 01:04:13.290
一 二 三 四 五 五列

01:04:13.290 --> 01:04:14.290
所以说我们这里呢

01:04:14.290 --> 01:04:15.290
read

01:04:15.290 --> 01:04:16.290
templates

01:04:16.290 --> 01:04:17.290
clamps

01:04:17.290 --> 01:04:18.290
repeats

01:04:18.290 --> 01:04:19.290
几行

01:04:19.290 --> 01:04:20.290
几列呢

01:04:20.290 --> 01:04:21.290
五列

01:04:21.290 --> 01:04:22.290
dfr

01:04:23.290 --> 01:04:24.290
然后呢

01:04:24.290 --> 01:04:25.290
rows

01:04:25.290 --> 01:04:26.290
repeats

01:04:26.290 --> 01:04:27.290
几行

01:04:30.820 --> 01:04:31.820
好 那么就是

01:04:33.820 --> 01:04:34.820
四行五列

01:04:34.820 --> 01:04:35.820
目前是这个样子

01:04:35.820 --> 01:04:37.820
但是这个样子肯定不符合我的要求

01:04:37.820 --> 01:04:38.820
一点点来

01:04:39.820 --> 01:04:40.820
好 怎么弄呢

01:04:40.820 --> 01:04:41.820
首先找到第一个盒子

01:04:41.820 --> 01:04:42.820
item1

01:04:46.980 --> 01:04:47.980
先打开

01:04:48.980 --> 01:04:49.980
找到item1

01:04:49.980 --> 01:04:50.980
我要让item1呢

01:04:50.980 --> 01:04:51.980
变成这个样子

01:04:52.980 --> 01:04:53.980
这个样子

01:04:53.980 --> 01:04:54.980
所以独占一行

01:04:54.980 --> 01:04:56.980
怎么让它独占一行呢

01:04:56.980 --> 01:04:57.980
是不是就设置那个

01:04:58.980 --> 01:04:59.980
忘了就查

01:04:59.980 --> 01:05:00.980
项目

01:05:00.980 --> 01:05:01.980
定位

01:05:01.980 --> 01:05:02.980
gridarea

01:05:02.980 --> 01:05:03.980
对吧

01:05:03.980 --> 01:05:04.980
占据的

01:05:04.980 --> 01:05:06.980
占据的就是那个标号

01:05:06.980 --> 01:05:11.790
哪个线

01:05:12.790 --> 01:05:13.790
行线为一

01:05:13.790 --> 01:05:14.790
列线为一

01:05:14.790 --> 01:05:15.790
从这个点

01:05:15.790 --> 01:05:16.790
到这个点

01:05:16.790 --> 01:05:18.790
这个点是二 六

01:05:18.790 --> 01:05:19.790
也可以用复数

01:05:19.790 --> 01:05:20.790
这个复数不用管

01:05:20.790 --> 01:05:21.790
我们用正数的话

01:05:21.790 --> 01:05:22.790
复数也可以

01:05:22.790 --> 01:05:24.790
你直接写复数也是这个点

01:05:24.790 --> 01:05:26.790
它是从下到上算

01:05:26.790 --> 01:05:27.790
还是从右往左算

01:05:27.790 --> 01:05:28.790
还是从左往右算

01:05:28.790 --> 01:05:29.790
从上往下算

01:05:31.790 --> 01:05:32.790
一

01:05:32.790 --> 01:05:33.790
一

01:05:33.790 --> 01:05:34.790
到哪个点

01:05:34.790 --> 01:05:35.790
二

01:05:35.790 --> 01:05:36.790
六

01:05:36.790 --> 01:05:39.680
你看这个线就行了

01:05:39.680 --> 01:05:40.680
少许个写吧

01:05:41.680 --> 01:05:42.680
说完就写完了

01:05:43.680 --> 01:05:44.680
对不对

01:05:44.680 --> 01:05:45.680
好 这是这个

01:05:45.680 --> 01:05:47.680
好 接下来我们下一个

01:05:47.680 --> 01:05:48.680
下一个是这个

01:05:48.680 --> 01:05:49.680
这个第二个盒子

01:05:49.680 --> 01:05:50.680
第二个盒子呢

01:05:53.380 --> 01:05:54.380
item2

01:05:54.380 --> 01:05:55.380
没什么好说的

01:05:55.380 --> 01:05:56.380
要不你们自己去弄吧

01:05:57.380 --> 01:05:58.380
好吧 你们自己去弄吧

01:05:58.380 --> 01:06:00.380
你们把这个线点开

01:06:00.380 --> 01:06:01.380
你们自己去弄得

01:06:01.380 --> 01:06:02.380
我拿着写的

01:06:02.380 --> 01:06:03.380
拿着在课堂上讲

01:06:03.380 --> 01:06:04.380
你们自己去弄

01:06:04.380 --> 01:06:05.380
就是算那个线

01:06:05.380 --> 01:06:06.380
然后如果说

01:06:06.380 --> 01:06:07.380
写不出来的话

01:06:07.380 --> 01:06:08.380
这边带吧

01:06:08.380 --> 01:06:09.380
就完事了

01:06:09.380 --> 01:06:10.380
OK

01:06:10.380 --> 01:06:11.380
那么这一刻就没了

01:06:11.380 --> 01:06:12.380
这一刻讲两个

01:06:12.380 --> 01:06:13.380
一个是弹性盒

01:06:13.380 --> 01:06:14.380
一个是网格

01:06:14.380 --> 01:06:15.380
然后的话

01:06:15.380 --> 01:06:17.380
我这边就这样吧

01:06:17.380 --> 01:06:18.380
把这个效果里面

01:06:18.380 --> 01:06:19.380
给他拿过来

01:06:19.380 --> 01:06:20.380
你们自己弄

01:06:20.380 --> 01:06:22.380
你们自己看那个效果

01:06:22.380 --> 01:06:24.380
来来来去看那个线

01:06:24.380 --> 01:06:26.380
去弄效果就这样子

01:06:27.380 --> 01:06:28.380
然后呢

01:06:28.380 --> 01:06:30.380
最后就没什么了

01:06:30.380 --> 01:06:31.380
网格弹性盒就讲完了

01:06:31.380 --> 01:06:32.380
那么这是CS3

01:06:32.380 --> 01:06:33.380
给我们提供的

01:06:33.380 --> 01:06:34.380
两种布局方案

01:06:34.380 --> 01:06:36.380
有了这两种布局方案之后呢

01:06:36.380 --> 01:06:38.380
我们再也不用去用浮动布局了

01:06:38.380 --> 01:06:40.380
浮动布局已经说白白了

01:06:40.380 --> 01:06:41.380
说白白了

01:06:41.380 --> 01:06:42.380
除非你们以后将来去

01:06:42.380 --> 01:06:44.380
维护一些非常老的一个项目

01:06:44.380 --> 01:06:45.380
才会用到浮动布局

01:06:45.380 --> 01:06:46.380
那有的人说

01:06:46.380 --> 01:06:48.380
这个兼容性问题怎么办

01:06:48.380 --> 01:06:50.380
如果说在过去两年

01:06:50.380 --> 01:06:52.380
我可能会担心这个兼容性问题

01:06:52.380 --> 01:06:53.380
在现在呢

01:06:53.380 --> 01:06:54.380
我不是很担心的

01:06:54.380 --> 01:06:55.380
因为绝大部分的网纸

01:06:55.380 --> 01:06:57.380
都支持网格弹性盒布局了

01:06:57.380 --> 01:06:58.380
没有什么问题

01:06:58.380 --> 01:06:59.380
大胆的用

01:06:59.380 --> 01:07:01.380
除非公司做的东西

01:07:01.380 --> 01:07:02.380
非常特殊

01:07:02.380 --> 01:07:03.380
比如说

01:07:03.380 --> 01:07:04.380
政府部门的项目

01:07:05.380 --> 01:07:06.380
IE

01:07:06.380 --> 01:07:07.380
IE7

01:07:07.380 --> 01:07:10.260
IE6

01:07:10.260 --> 01:07:11.260
那用浮动吧

01:07:11.260 --> 01:07:12.260
那没办法

01:07:13.260 --> 01:07:14.260
好 这是

01:07:14.260 --> 01:07:15.260
咱们CS3

01:07:15.260 --> 01:07:16.260
根本提供的布局方式

01:07:16.260 --> 01:07:17.260
作业就是把我们

01:07:17.260 --> 01:07:20.260
这里的作业完成就完事

01:07:20.260 --> 01:07:21.260
如果说

01:07:21.260 --> 01:07:23.260
你有兴趣有时间

01:07:23.260 --> 01:07:24.260
那下面还有解课

01:07:24.260 --> 01:07:25.260
还有解课

01:07:25.260 --> 01:07:26.260
把今天的课学完之后

01:07:26.260 --> 01:07:27.260
作业做完之后

01:07:27.260 --> 01:07:28.260
还有时间

01:07:28.260 --> 01:07:29.260
你觉得还有

01:07:29.260 --> 01:07:30.260
还需要再练一练

01:07:30.260 --> 01:07:32.260
那么就可以去玩一玩

01:07:32.260 --> 01:07:33.260
那个弹性盒的小游戏

01:07:33.260 --> 01:07:34.260
和网格的小游戏

01:07:34.260 --> 01:07:35.260
网格的小游戏

01:07:35.260 --> 01:07:36.260
它是个把萝卜方式

01:07:38.260 --> 01:07:39.260
而对的就是个萝卜

01:07:39.260 --> 01:07:41.260
给萝卜浇水

01:07:41.260 --> 01:07:42.260
你可以看到

01:07:42.260 --> 01:07:43.260
这里可以搜索它的语言

01:07:43.260 --> 01:07:45.260
搜索怎么解听中文

01:07:45.260 --> 01:07:46.260
你可以看到

01:07:46.260 --> 01:07:47.260
它会焦礼

01:07:47.260 --> 01:07:48.260
一关一关的也会焦礼

01:07:48.260 --> 01:07:49.260
怎么去做

01:07:51.260 --> 01:07:53.260
好了 那么这是咱们

01:07:53.260 --> 01:07:54.260
这里和的内容

