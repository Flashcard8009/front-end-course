WEBVTT

00:00.690 --> 00:02.690
继续往下说

00:02.690 --> 00:03.690
这节课咱们来说

00:03.690 --> 00:05.690
DateZoom这个组件了

00:05.690 --> 00:08.690
这个组件我在这需要强调一点

00:08.690 --> 00:10.690
它相对来说

00:10.690 --> 00:12.690
我们之前所学习的这些组件

00:12.690 --> 00:15.690
DateZoom当中的这些配置参数

00:15.690 --> 00:17.690
可能会稍微的复杂一些

00:17.690 --> 00:19.690
稍微的难理解一些

00:19.690 --> 00:21.690
所以这个地方我希望各位同学

00:21.690 --> 00:24.690
一定要认真仔细的去听

00:24.690 --> 00:25.690
仔细的去听

00:25.690 --> 00:26.690
不行你就多看几遍

00:26.690 --> 00:29.690
然后在重点的一些东西

00:29.690 --> 00:31.690
当中还有一些难以理解的地方

00:31.690 --> 00:33.690
我都会放慢与速

00:33.690 --> 00:35.690
然后着重的去强调一下

00:35.690 --> 00:38.690
好 这个咱提前声明一下

00:38.690 --> 00:40.690
然后接着咱们就进入

00:40.690 --> 00:43.690
正题来说一下DateZoom这个组件

00:43.690 --> 00:44.690
DateZoom这个组件

00:44.690 --> 00:47.690
官方给出的解释是这样的

00:47.690 --> 00:49.690
它是用于区域缩放

00:49.690 --> 00:51.690
然后从而能够自由关注

00:51.690 --> 00:53.690
细节的数据信息

00:53.690 --> 00:54.690
啥意思

00:54.690 --> 00:55.690
可能比较绘色

00:55.690 --> 00:56.690
比较难懂

00:56.690 --> 00:57.690
是不是我解释一下

00:57.690 --> 01:00.690
拿一个例子咱们去解释一下

01:00.690 --> 01:03.690
比如说现在我统计了

01:03.690 --> 01:05.690
一年当中365天

01:05.690 --> 01:07.690
每一天的天气情况

01:07.690 --> 01:10.690
我把所有的数据都已经统计完了

01:10.690 --> 01:11.690
统计完了之后

01:11.690 --> 01:13.690
现在我就需要通过图表

01:13.690 --> 01:14.690
给它展示出来

01:14.690 --> 01:17.690
那图表它的尺寸是一定的

01:17.690 --> 01:18.690
就好比比如说

01:18.690 --> 01:20.690
我的尺寸就这么大

01:20.690 --> 01:22.690
然后我需要把所有的数据

01:22.690 --> 01:24.690
都放到这个上面

01:24.690 --> 01:26.690
大家想想这个场景

01:26.690 --> 01:27.690
你看在是不是说

01:27.690 --> 01:29.690
在一个狭小的空间内

01:29.690 --> 01:31.690
要把很多的数据

01:31.690 --> 01:33.690
全部都展示出来

01:33.690 --> 01:34.690
那这样的话

01:34.690 --> 01:36.690
会是一种什么情况呢

01:36.690 --> 01:38.690
数据紧挨着紧挨着

01:38.690 --> 01:39.690
非常的近

01:39.690 --> 01:40.690
然后是不是有的

01:40.690 --> 01:41.690
甚至会重叠起来

01:41.690 --> 01:42.690
这样的话

01:42.690 --> 01:44.690
你能够很清晰的看出来

01:44.690 --> 01:45.690
这些数据的变化吗

01:45.690 --> 01:47.690
是不是就很费劲

01:47.690 --> 01:48.690
那比如说

01:48.690 --> 01:51.690
你想看某一天的这个数据

01:51.690 --> 01:52.690
那类似呢

01:52.690 --> 01:53.690
你也看不懂

01:53.690 --> 01:54.690
因为所有的东西

01:54.690 --> 01:55.690
有重叠

01:55.690 --> 01:56.690
叠在了一起

01:56.690 --> 01:57.690
所以我们就无能为力了

01:57.690 --> 01:58.690
对不对

01:58.690 --> 01:59.690
那好

01:59.690 --> 02:00.690
这次我们这个组建

02:00.690 --> 02:02.690
它其实就是用来解决这个问题的

02:02.690 --> 02:04.690
那用了这个组建之后

02:04.690 --> 02:07.690
我们就可以把这个某一个部分

02:07.690 --> 02:09.690
或者说某一个区域的数据

02:09.690 --> 02:10.690
给它进行一个缩放

02:10.690 --> 02:11.690
放大也好

02:11.690 --> 02:13.690
缩小也行

02:13.690 --> 02:14.690
然后比如说放大

02:14.690 --> 02:15.690
那放大的话

02:15.690 --> 02:16.690
我们就可以比如说

02:16.690 --> 02:17.690
我们想看5月份

02:17.690 --> 02:18.690
那我就可以

02:18.690 --> 02:19.690
把5月份的数据

02:19.690 --> 02:20.690
给它放大

02:20.690 --> 02:21.690
放大之后

02:21.690 --> 02:22.690
可能他们所有的数据

02:22.690 --> 02:23.690
是不是都分开了

02:23.690 --> 02:25.690
那我们就能够清晰的看出来

02:25.690 --> 02:26.690
他们的区别了

02:26.690 --> 02:27.690
好吧

02:27.690 --> 02:29.690
这个就是Betzoom组建

02:29.690 --> 02:30.690
它的一个作用

02:31.690 --> 02:32.690
那这个组建

02:32.690 --> 02:34.690
就是它分为三个类型

02:34.690 --> 02:35.690
我们来看

02:35.690 --> 02:37.690
第一个就是内置型数据区域

02:37.690 --> 02:38.690
缩放组建

02:38.690 --> 02:39.690
这个东西

02:39.690 --> 02:40.690
就是它是内置于

02:40.690 --> 02:42.690
坐标系当中的

02:42.690 --> 02:43.690
也就是说这个功能

02:43.690 --> 02:44.690
其实我们是通过操作

02:44.690 --> 02:46.690
坐标系来实现的

02:46.690 --> 02:47.690
都有哪些功能

02:47.690 --> 02:48.690
其实还是非常的丰富的

02:48.690 --> 02:49.690
你看

02:49.690 --> 02:50.690
比如说用户

02:50.690 --> 02:51.690
可以在坐标系当中的

02:51.690 --> 02:52.690
咱们通过鼠标

02:52.690 --> 02:53.690
进行一个拖拽

02:53.690 --> 02:55.690
然后滚轮进行一个缩放

02:55.690 --> 02:56.690
然后在移动端

02:56.690 --> 02:58.690
咱手指还可以滑动

02:58.690 --> 02:59.690
是吧

02:59.690 --> 03:00.690
来

03:00.690 --> 03:01.690
我们就拿这个例子官网

03:01.690 --> 03:02.690
这个例子

03:02.690 --> 03:03.690
演示一下

03:03.690 --> 03:04.690
编辑一下势力

03:04.690 --> 03:05.690
把它放大

03:05.690 --> 03:06.690
好

03:06.690 --> 03:07.690
那先来看

03:07.690 --> 03:08.690
第一个就是内置型数据区域的

03:08.690 --> 03:09.690
缩放组建

03:09.690 --> 03:11.690
它的表现形式是这样的

03:11.690 --> 03:13.690
就是它是放在坐标系当中的

03:13.690 --> 03:15.690
目前我们是一个直角坐标系

03:15.690 --> 03:16.690
对不对

03:16.690 --> 03:18.690
那你就可以在这个地方点击

03:18.690 --> 03:19.690
然后拖

03:19.690 --> 03:20.690
有没有发现

03:20.690 --> 03:21.690
是不是可以移动

03:21.690 --> 03:22.690
你看移动

03:22.690 --> 03:24.690
你想看哪个地方的数据

03:24.690 --> 03:26.690
那你就往哪个地方去移动

03:26.690 --> 03:27.690
就可以了

03:27.690 --> 03:28.690
这是一个

03:28.690 --> 03:29.690
然后另外一个就是

03:29.690 --> 03:31.690
你在直角坐标系当中

03:31.690 --> 03:33.690
你可以通过滚轮的滚动

03:33.690 --> 03:35.690
进行一个缩放

03:35.690 --> 03:37.690
来走滚动滚动

03:37.690 --> 03:39.690
然后滚动滚动

03:39.690 --> 03:40.690
这是往上走

03:40.690 --> 03:42.690
这是往下滚动

03:42.690 --> 03:43.690
看没看到

03:43.690 --> 03:44.690
往下滚动的时候

03:44.690 --> 03:45.690
你看越来越密

03:45.690 --> 03:46.690
越来越密

03:46.690 --> 03:47.690
这个时候可能你就看不清了

03:47.690 --> 03:48.690
是吧

03:48.690 --> 03:49.690
你比如说我想看

03:49.690 --> 03:50.690
这个点

03:50.690 --> 03:51.690
是不是放到这

03:51.690 --> 03:52.690
你看看

03:52.690 --> 03:53.690
有没有它四周的数据

03:53.690 --> 03:55.690
是不是都分散开了

03:55.690 --> 03:56.690
这个放大了

03:56.690 --> 03:57.690
是吧

03:57.690 --> 03:58.690
放大之后

03:58.690 --> 03:59.690
我们就看得清晰了

03:59.690 --> 04:01.690
这个就是什么

04:01.690 --> 04:04.690
内置型数据区域的一个缩放

04:04.690 --> 04:06.690
这是它的第1个类型

04:06.690 --> 04:07.690
然后第2个类型

04:07.690 --> 04:09.690
就是滚动条型的

04:09.690 --> 04:10.690
数据区域缩放组建

04:10.690 --> 04:11.690
这个东西

04:11.690 --> 04:12.690
其实就是看到没有

04:12.690 --> 04:13.690
这有一个条

04:13.690 --> 04:14.690
这有一个条

04:14.690 --> 04:15.690
我们来看

04:15.690 --> 04:16.690
这个条你看

04:16.690 --> 04:18.690
我其实是可以进行拖动的

04:18.690 --> 04:20.690
当我去拖拽这个条的时候

04:20.690 --> 04:22.690
其实我们是进行一个评仪

04:22.690 --> 04:23.690
去移动这个

04:23.690 --> 04:24.690
现在数据的一个区域

04:24.690 --> 04:25.690
对不对

04:25.690 --> 04:26.690
然后这个条

04:26.690 --> 04:27.690
你看左右也可以拖

04:27.690 --> 04:29.690
上下也可以拖

04:29.690 --> 04:30.690
然后同时

04:30.690 --> 04:32.690
这个条你不光可以去拖拽

04:32.690 --> 04:33.690
它的一个位置

04:33.690 --> 04:34.690
还可以去拖拽

04:34.690 --> 04:35.690
它的一个尺寸

04:35.690 --> 04:36.690
你看放到这走

04:36.690 --> 04:38.690
那拖拽尺寸的时候

04:38.690 --> 04:39.690
它其实进行了

04:39.690 --> 04:40.690
就是一个缩放了

04:40.690 --> 04:41.690
进行了一个缩放

04:41.690 --> 04:44.690
然后拖动这个位置的时候

04:44.690 --> 04:46.690
它其实是进行了一个评仪

04:46.690 --> 04:47.690
这个就是

04:47.690 --> 04:48.690
第二种

04:48.690 --> 04:49.690
第二种

04:49.690 --> 04:51.690
华动调行数据区域

04:51.690 --> 04:52.690
缩放组建

04:52.690 --> 04:53.690
然后第三种

04:53.690 --> 04:55.690
就是匡选型数据区域

04:55.690 --> 04:57.690
做缩放组建

04:57.690 --> 04:58.690
这个组建

04:58.690 --> 04:59.690
它有一些特殊

04:59.690 --> 05:00.690
就它特殊

05:00.690 --> 05:01.690
跟其他的不一样

05:01.690 --> 05:02.690
特殊在哪里

05:02.690 --> 05:03.690
这个东西

05:03.690 --> 05:04.690
它的配置像

05:04.690 --> 05:06.690
并不是放在deadzoom当中

05:06.690 --> 05:08.690
而是放在了哪里

05:08.690 --> 05:10.690
放在了一个toolbox当中

05:10.690 --> 05:11.690
toolbox

05:11.690 --> 05:12.690
在哪里

05:12.690 --> 05:13.690
在这里边

05:13.690 --> 05:14.690
放到了它

05:14.690 --> 05:15.690
这个toolbox

05:15.690 --> 05:16.690
是一个单独的一个组建

05:16.690 --> 05:17.690
这个东西

05:17.690 --> 05:18.690
我们会放到

05:18.690 --> 05:19.690
后边

05:19.690 --> 05:20.690
依次的Egg

05:20.690 --> 05:21.690
详细的去说它

05:21.690 --> 05:22.690
详细的去说它

05:22.690 --> 05:23.690
所以说

05:23.690 --> 05:24.690
在这个地方

05:24.690 --> 05:25.690
咱们这节课讲的

05:25.690 --> 05:27.690
只会去讲前两种

05:27.690 --> 05:28.690
那第三种

05:28.690 --> 05:30.690
是放到这个组建当中

05:30.690 --> 05:31.690
再去说它toolbox

05:31.690 --> 05:32.690
放到这儿

05:32.690 --> 05:33.690
再去讲它

05:33.690 --> 05:34.690
好不好

05:34.690 --> 05:35.690
那在这个地方

05:35.690 --> 05:36.690
先跟大家去演示一下

05:36.690 --> 05:37.690
这个

05:37.690 --> 05:38.690
这种的框选型的

05:38.690 --> 05:40.690
到底它的表现形式

05:40.690 --> 05:41.690
点开

05:41.690 --> 05:43.690
然后往上走

05:43.690 --> 05:44.690
那看到吗

05:44.690 --> 05:45.690
toolbox

05:45.690 --> 05:46.690
这个toolbox

05:46.690 --> 05:47.690
其实就是说

05:47.690 --> 05:48.690
这些功能看到没有

05:48.690 --> 05:49.690
比如说

05:49.690 --> 05:50.690
我们把这个图表保存

05:50.690 --> 05:51.690
为一张图片

05:51.690 --> 05:52.690
是不是

05:52.690 --> 05:53.690
好等等吧

05:53.690 --> 05:54.690
咱们到时候再去说

05:54.690 --> 05:56.690
那这个框选型的

05:56.690 --> 05:57.690
区域缩放

05:57.690 --> 05:58.690
是怎么回事

05:58.690 --> 05:59.690
是这儿

05:59.690 --> 06:00.690
大家来看

06:00.690 --> 06:01.690
这有一个区域缩放

06:01.690 --> 06:02.690
你看没有

06:02.690 --> 06:03.690
我鼠标放了之后

06:03.690 --> 06:04.690
是不是区域缩放

06:04.690 --> 06:05.690
然后还有区域缩放还原

06:05.690 --> 06:06.690
来

06:06.690 --> 06:07.690
咱点击一下

06:07.690 --> 06:08.690
它之后

06:08.690 --> 06:09.690
你就可以在里边

06:09.690 --> 06:10.690
画一个区域

06:10.690 --> 06:11.690
你看

06:11.690 --> 06:12.690
随着鼠标的拖动

06:12.690 --> 06:13.690
画一个区域

06:13.690 --> 06:14.690
然后松开鼠标

06:14.690 --> 06:15.690
看见没有

06:15.690 --> 06:16.690
这片区域

06:16.690 --> 06:17.690
是不是数据被放大了

06:17.690 --> 06:18.690
被放大了吧

06:18.690 --> 06:19.690
甚至你可以再来

06:19.690 --> 06:20.690
我放大它

06:20.690 --> 06:21.690
你看

06:21.690 --> 06:22.690
是不是放大了

06:22.690 --> 06:23.690
放大之后

06:23.690 --> 06:24.690
你可以还原

06:24.690 --> 06:25.690
点击这个

06:25.690 --> 06:27.690
那这个功能就是它俩

06:27.690 --> 06:28.690
好

06:28.690 --> 06:29.690
那这个功能

06:29.690 --> 06:30.690
咱们再去说这个data

06:30.690 --> 06:32.690
说这个toolbox的时候

06:32.690 --> 06:33.690
再去详细的去讲

06:33.690 --> 06:34.690
好吧

06:34.690 --> 06:35.690
再回过头

06:35.690 --> 06:36.690
咱们再回到

06:36.690 --> 06:37.690
回到

06:37.690 --> 06:38.690
回到data zoom

06:38.690 --> 06:39.690
回到这儿

06:40.690 --> 06:41.690
好

06:41.690 --> 06:42.690
这样的话

06:42.690 --> 06:43.690
我们是说了一下

06:43.690 --> 06:44.690
三种类型

06:44.690 --> 06:45.690
缩放组件的

06:45.690 --> 06:46.690
一个类型

06:46.690 --> 06:47.690
好吧

06:47.690 --> 06:48.690
这个三种缩放的

06:48.690 --> 06:49.690
组件的类型

06:49.690 --> 06:51.690
它其实是通过一个Type

06:51.690 --> 06:52.690
这条属性

06:52.690 --> 06:53.690
就能够决定的

06:53.690 --> 06:54.690
一会再去演示

06:54.690 --> 06:55.690
行吧

06:55.690 --> 06:56.690
然后咱们再来说一下

06:56.690 --> 06:57.690
就是刚才

06:57.690 --> 06:58.690
咱们看到的

06:58.690 --> 06:59.690
这个官方给出的

06:59.690 --> 07:00.690
这么一个例子

07:00.690 --> 07:01.690
是不是

07:01.690 --> 07:02.690
这个例子当中

07:02.690 --> 07:04.690
大家需要去注意一点

07:04.690 --> 07:05.690
是什么

07:05.690 --> 07:06.690
就是你看

07:06.690 --> 07:07.690
这样的话

07:07.690 --> 07:08.690
我们用了这个组件之后

07:08.690 --> 07:09.690
是不是非常的灵活

07:09.690 --> 07:10.690
我们去查看数据

07:10.690 --> 07:12.690
就变得非常灵活了

07:12.690 --> 07:13.690
可以去拖拽

07:13.690 --> 07:14.690
也可以去滑

07:14.690 --> 07:16.690
还可以去进行滚轮滚动

07:16.690 --> 07:17.690
是吧

07:17.690 --> 07:18.690
进行一个缩放

07:18.690 --> 07:19.690
需要注意的是什么

07:19.690 --> 07:22.690
就是我们的data zoom的组件

07:22.690 --> 07:23.690
也就是刚才的

07:23.690 --> 07:24.690
几种类型的组件

07:24.690 --> 07:26.690
他们其实只能控制

07:26.690 --> 07:27.690
一条肘

07:27.690 --> 07:28.690
啥意思

07:28.690 --> 07:29.690
也就是看这儿

07:29.690 --> 07:31.690
我现在在这儿

07:31.690 --> 07:32.690
是不是只控制了外肘

07:32.690 --> 07:33.690
所以说

07:33.690 --> 07:34.690
当我去拖动的时候

07:34.690 --> 07:36.690
改变的是外肘

07:36.690 --> 07:37.690
身上的一些数据

07:37.690 --> 07:38.690
X肘

07:38.690 --> 07:39.690
有没有动

07:39.690 --> 07:40.690
它没有动

07:40.690 --> 07:41.690
看到吗

07:41.690 --> 07:43.690
这儿其实也是可以的

07:43.690 --> 07:44.690
也是可以的

07:44.690 --> 07:45.690
懂吗

07:45.690 --> 07:46.690
所以在这个地方

07:46.690 --> 07:47.690
大家需要注意的是什么

07:47.690 --> 07:49.690
data zoom这个组件

07:49.690 --> 07:52.690
它只能够控制一条肘

07:52.690 --> 07:53.690
你想要控制多条肘

07:53.690 --> 07:54.690
怎么办

07:54.690 --> 07:55.690
放多个

07:55.690 --> 07:57.690
放多个这个组件

07:57.690 --> 07:58.690
就可以了

07:58.690 --> 07:59.690
好

07:59.690 --> 08:00.690
这个地方需要注意的

08:01.690 --> 08:02.690
行

08:02.690 --> 08:03.690
接下来

08:03.690 --> 08:04.690
咱们就正式

08:04.690 --> 08:06.690
来写一下代码

08:06.690 --> 08:08.690
用代码去演示一下

08:08.690 --> 08:09.690
在这儿

08:09.690 --> 08:10.690
打开我们的便利器

08:10.690 --> 08:11.690
首先

08:11.690 --> 08:12.690
就是这个

08:12.690 --> 08:14.690
要写的这个粒子

08:14.690 --> 08:15.690
就是官方网站

08:15.690 --> 08:16.690
给出的这么一个粒子

08:16.690 --> 08:17.690
咱们就写它

08:17.690 --> 08:18.690
好吧

08:18.690 --> 08:19.690
这个粒子是一个什么的

08:19.690 --> 08:20.690
气泡图

08:20.690 --> 08:21.690
或者说三点图

08:21.690 --> 08:22.690
对吧

08:22.690 --> 08:23.690
三点图

08:23.690 --> 08:24.690
然后可以看出来

08:24.690 --> 08:25.690
它们总共有三个系列

08:25.690 --> 08:26.690
是不是

08:26.690 --> 08:27.690
series总共有三个

08:27.690 --> 08:28.690
三个

08:28.690 --> 08:29.690
它的认识为三

08:29.690 --> 08:30.690
所以说

08:30.690 --> 08:31.690
在这儿

08:31.690 --> 08:32.690
我需要去给出

08:32.690 --> 08:33.690
三个气泡

08:33.690 --> 08:35.690
所对应的这个数据

08:35.690 --> 08:36.690
是吧

08:36.690 --> 08:37.690
这个数据

08:37.690 --> 08:39.690
我们在这儿来写一下

08:39.690 --> 08:40.690
首先咱先把这个

08:40.690 --> 08:42.690
气泡图给它搞出来

08:42.690 --> 08:43.690
那我在这儿

08:43.690 --> 08:44.690
就声明

08:44.690 --> 08:45.690
变量

08:45.690 --> 08:46.690
声明三个变量

08:46.690 --> 08:47.690
data1

08:47.690 --> 08:48.690
data1

08:48.690 --> 08:50.690
等于一个数组

08:50.690 --> 08:51.690
然后同时

08:51.690 --> 08:52.690
data2,data3

08:52.690 --> 08:53.690
是不是

08:53.690 --> 08:54.690
把这个删掉

08:54.690 --> 08:56.690
data2

08:56.690 --> 09:00.690
data2,data3

09:00.690 --> 09:02.690
总共是三个数据

09:02.690 --> 09:03.690
那三个数据

09:03.690 --> 09:04.690
对应的就是

09:04.690 --> 09:05.690
三个系列

09:05.690 --> 09:06.690
三个系列

09:06.690 --> 09:07.690
好

09:07.690 --> 09:08.690
然后这个数据

09:09.690 --> 09:10.690
是这样的

09:10.690 --> 09:11.690
这些数据

09:11.690 --> 09:13.690
我都需要随机的生成出来

09:13.690 --> 09:14.690
然后随机

09:14.690 --> 09:16.690
大家也不要想得很复杂

09:16.690 --> 09:17.690
其实也非常的简单

09:17.690 --> 09:18.690
我在这个地方

09:18.690 --> 09:19.690
写上一个函数

09:19.690 --> 09:22.130
叫random

09:22.130 --> 09:23.130
然后这个函数

09:23.130 --> 09:24.130
去接收一个参数

09:24.130 --> 09:25.130
叫max

09:25.130 --> 09:26.130
max

09:26.130 --> 09:27.130
什么意思

09:27.130 --> 09:28.130
就是我要随机

09:28.130 --> 09:29.130
一个最大的值

09:29.130 --> 09:31.130
你就传上一个最大的值

09:31.130 --> 09:33.130
然后通过调用这个方法之后

09:33.130 --> 09:34.130
它随机出来的

09:34.130 --> 09:35.130
就是从0开始

09:35.130 --> 09:37.130
到这个值的一个范围

09:37.130 --> 09:38.130
所以在这儿

09:38.130 --> 09:39.130
我直接return

09:39.130 --> 09:40.130
return什么呢

09:40.130 --> 09:41.130
return这个max

09:41.130 --> 09:42.130
点

09:42.130 --> 09:43.130
random

09:43.130 --> 09:44.130
调一下这个方法

09:44.130 --> 09:45.130
是不是

09:45.130 --> 09:46.130
拿这个方法干嘛

09:46.130 --> 09:48.130
我乘上你传进来的max

09:48.130 --> 09:50.130
然后由于随机数

09:50.130 --> 09:52.130
它后面跟了很多的小数点

09:52.130 --> 09:53.130
是不是

09:53.130 --> 09:54.130
那这个小数点

09:54.130 --> 09:55.130
我需要

09:55.130 --> 09:56.130
但是不需要那么多

09:56.130 --> 09:58.130
我给它保留成三位

09:58.130 --> 09:59.130
那怎么办

09:59.130 --> 10:01.130
我们来拿上它的一个结果

10:01.130 --> 10:02.130
拿上这个结果

10:02.130 --> 10:03.130
干嘛

10:03.130 --> 10:05.130
这个数字身上

10:05.130 --> 10:06.130
是不是有一个方法

10:06.130 --> 10:07.130
toFact

10:07.130 --> 10:08.130
这个方法

10:08.130 --> 10:10.130
它就是用来保留

10:10.130 --> 10:11.130
现在数据

10:11.130 --> 10:12.130
后面的小数点的位数

10:12.130 --> 10:13.130
我们给上一个3

10:13.130 --> 10:14.130
那就表示

10:14.130 --> 10:16.130
现在它给我保留

10:16.130 --> 10:17.130
每一个数据都会保留

10:17.130 --> 10:19.130
三个小数点

10:19.130 --> 10:20.130
好

10:20.130 --> 10:22.130
这个就是用来生成数据的

10:22.130 --> 10:23.130
生成数据的

10:23.130 --> 10:25.130
那用来生成数据的话

10:25.130 --> 10:26.130
那在这儿

10:26.130 --> 10:27.130
咱们就要去说一下

10:27.130 --> 10:28.130
这个数据的格式了

10:28.130 --> 10:29.130
以及

10:29.130 --> 10:30.130
还需要去介绍一下

10:30.130 --> 10:32.130
这个维度的这个概念

10:33.130 --> 10:35.130
那关于这个维度的概念

10:35.130 --> 10:36.130
其实在前面

10:36.130 --> 10:37.130
有详细的去说过

10:37.130 --> 10:38.130
对吧

10:38.130 --> 10:40.130
这个概念其实很重要

10:40.130 --> 10:41.130
在我们后边的课程

10:41.130 --> 10:43.130
还会去用得到

10:43.130 --> 10:44.130
还会用得到

10:44.130 --> 10:45.130
甚至我们后边

10:45.130 --> 10:46.130
还有专门一节课

10:46.130 --> 10:48.130
再去介绍它

10:48.130 --> 10:50.130
那这里边咱们就介绍这个机会

10:50.130 --> 10:51.130
再去说一下

10:51.130 --> 10:52.130
这个维度

10:52.130 --> 10:55.130
那现在咱们使用的是气泡图

10:55.130 --> 10:56.130
是不是

10:56.130 --> 10:57.130
气泡图

10:57.130 --> 10:59.130
它对于这个数据是有要求的

10:59.130 --> 11:01.130
它的格式是有要求的

11:01.130 --> 11:02.130
懂吧

11:02.130 --> 11:04.130
那它至少需要有三个数

11:04.130 --> 11:06.130
至少应该有两个数据

11:06.130 --> 11:08.130
那这个数据到底是怎么展示

11:08.130 --> 11:09.130
是这样展示的

11:10.130 --> 11:12.130
也就是我们的这个data当中

11:12.130 --> 11:14.130
它放的格式是怎样的

11:14.130 --> 11:15.130
是这样的

11:15.130 --> 11:16.130
那这个气泡图

11:16.130 --> 11:19.130
首先它需要有一个x轴的一个坐标

11:19.130 --> 11:20.130
比如说这个坐标

11:20.130 --> 11:22.130
我们现在都是一个做算

11:22.130 --> 11:25.130
比如说10.209

11:25.130 --> 11:26.130
咱就匹配它

11:26.130 --> 11:27.130
好不好

11:27.130 --> 11:28.130
总共后边有三个

11:28.130 --> 11:29.130
我就随便去写

11:29.130 --> 11:30.130
行吧

11:30.130 --> 11:31.130
那这是第一个数据

11:31.130 --> 11:32.130
第一个数据

11:32.130 --> 11:33.130
然后第二个数据

11:33.130 --> 11:34.130
是外轴的一个坐标

11:34.130 --> 11:35.130
比如说

11:36.130 --> 11:37.130
随便给的

11:37.130 --> 11:40.130
6.245

11:40.130 --> 11:41.130
这是随便给的

11:41.130 --> 11:43.130
这是外轴的这个数据

11:43.130 --> 11:44.130
点的一个坐标

11:44.130 --> 11:45.130
然后

11:45.130 --> 11:47.130
这两个是一个必须的

11:47.130 --> 11:49.130
这是两个必须的一个数据

11:49.130 --> 11:52.130
然后其实还有第三个数据

11:52.130 --> 11:54.130
那这个第三个数据是这样的

11:54.130 --> 11:55.130
就是

11:57.130 --> 11:58.130
我先写

11:59.130 --> 12:04.130
比如说30.369

12:05.130 --> 12:06.130
解释一下

12:06.130 --> 12:07.130
那这个数据对应的是什么

12:07.130 --> 12:10.130
其实就是气泡它的一个半径

12:10.130 --> 12:11.130
但是这条数据

12:11.130 --> 12:14.130
它并不是一个必须的一个数据

12:14.130 --> 12:15.130
也就是前两个数据

12:15.130 --> 12:16.130
是必须要给的

12:16.130 --> 12:17.130
后边这个数据

12:17.130 --> 12:19.130
其实你可以通过其他的方式

12:19.130 --> 12:21.130
我们有气泡图

12:21.130 --> 12:23.130
它里头有配置

12:23.130 --> 12:24.130
配置像

12:24.130 --> 12:25.130
有一项叫symbolsize

12:25.130 --> 12:26.130
通过那个

12:26.130 --> 12:27.130
我们就可以不使用

12:27.130 --> 12:29.130
它就能够去设置一个

12:29.130 --> 12:30.130
气泡半径的一个大小了

12:30.130 --> 12:31.130
好吧

12:31.130 --> 12:33.130
在这咱们就给它写上

12:33.130 --> 12:34.130
就行了

12:34.130 --> 12:35.130
那这样的话

12:35.130 --> 12:36.130
这个才是一个完整的

12:36.130 --> 12:37.130
一个气泡图

12:37.130 --> 12:39.130
所要求的数据的格式

12:39.130 --> 12:40.130
这是x

12:40.130 --> 12:41.130
这是外斗

12:41.130 --> 12:42.130
然后这是一个半径

12:42.130 --> 12:43.130
好

12:43.130 --> 12:45.130
那我们这块气泡

12:45.130 --> 12:47.130
气泡点我需要500个气泡点

12:47.130 --> 12:49.130
需要500个气泡点的话

12:49.130 --> 12:51.130
那其实那我的data当中

12:51.130 --> 12:52.130
它的展示形式

12:52.130 --> 12:54.130
可能就是这个样子了

12:54.130 --> 12:56.130
1234567

12:56.130 --> 12:57.130
随便给随便给的

12:57.130 --> 12:59.130
然后那后边咱们就点点点

12:59.130 --> 13:00.130
代替代替了

13:00.130 --> 13:01.130
好不好

13:01.130 --> 13:02.130
算说他们一样无所谓

13:02.130 --> 13:03.130
那其实这种形式

13:03.130 --> 13:05.130
就是放在哪里的data1当中

13:05.130 --> 13:07.130
而data1最终是不是要

13:07.130 --> 13:09.130
给series点data

13:09.130 --> 13:10.130
给它是不是

13:10.130 --> 13:11.130
那也就是说

13:11.130 --> 13:12.130
这个就是人家要求的

13:12.130 --> 13:13.130
这种数据的格式

13:13.130 --> 13:14.130
好

13:14.130 --> 13:15.130
那这种数据的格式

13:15.130 --> 13:17.130
我需要去说一下

13:17.130 --> 13:18.130
我们需要去说一下

13:18.130 --> 13:20.130
这个维度的这个概念

13:21.130 --> 13:22.130
那是这样的

13:22.130 --> 13:23.130
就是这种形式

13:23.130 --> 13:25.130
其实我们的每一列数据

13:25.130 --> 13:26.130
从这开始

13:26.130 --> 13:27.130
这是一列

13:27.130 --> 13:28.130
是不是好

13:28.130 --> 13:29.130
这是一列

13:29.130 --> 13:30.130
这一列数据看到没有

13:30.130 --> 13:31.130
这一列数据

13:31.130 --> 13:33.130
它就代表一个维度

13:33.130 --> 13:34.130
然后

13:34.130 --> 13:35.130
这一列数据

13:35.130 --> 13:36.130
它也代表

13:38.130 --> 13:40.130
那这一列数据

13:40.130 --> 13:41.130
也代表一个维度

13:41.130 --> 13:42.130
然后同时

13:42.130 --> 13:43.130
这一列数据

13:45.950 --> 13:46.950
现在

13:46.950 --> 13:48.950
这一列数据

13:48.950 --> 13:50.950
它也代表一个维度

13:50.950 --> 13:51.950
一列数据

13:51.950 --> 13:52.950
就是一个维度

13:52.950 --> 13:53.950
那第1个维度

13:53.950 --> 13:54.950
第0个维度

13:54.950 --> 13:55.950
它的下标为0

13:55.950 --> 13:56.950
第0个维度

13:56.950 --> 13:58.950
对应的是x走的

13:58.950 --> 13:59.950
身上的数据

13:59.950 --> 14:00.950
那第1列

14:00.950 --> 14:01.950
第1列

14:01.950 --> 14:03.950
也就是第1个维度

14:03.950 --> 14:04.950
数据对应的是

14:04.950 --> 14:06.950
x走身上的数据

14:06.950 --> 14:07.950
然后第2个维度

14:07.950 --> 14:08.950
所对应的数据

14:08.950 --> 14:09.950
是什么

14:09.950 --> 14:11.950
半径身上的数据

14:11.950 --> 14:12.950
明白吗

14:12.950 --> 14:13.950
好

14:13.950 --> 14:14.950
这个地方

14:14.950 --> 14:15.950
大家目前理解

14:15.950 --> 14:16.950
这就够了

14:16.950 --> 14:18.950
咱只需要去记住这个维度

14:18.950 --> 14:19.950
到底是什么意思

14:19.950 --> 14:20.950
就行了

14:20.950 --> 14:21.950
好不好

14:22.950 --> 14:23.950
然后接下来

14:23.950 --> 14:24.950
我们就去添数据了

14:24.950 --> 14:25.950
添数据

14:25.950 --> 14:26.950
然后一个fold循环

14:27.950 --> 14:28.950
fold循环

14:28.950 --> 14:29.950
等一个0

14:30.950 --> 14:31.950
按小于多少

14:32.950 --> 14:33.950
刚才已经说过

14:33.950 --> 14:34.950
是500条

14:34.950 --> 14:36.950
所以说按小于500

14:36.950 --> 14:37.950
然后按加加

14:37.950 --> 14:39.950
在这我们就

14:39.950 --> 14:41.950
data1.push

14:41.950 --> 14:42.950
push是什么

14:42.950 --> 14:44.950
它是一个二维的一个数组

14:44.950 --> 14:46.950
那么这个里头放的

14:46.950 --> 14:47.950
就是这个

14:47.950 --> 14:48.950
其实就是这样的

14:48.950 --> 14:49.950
就是我们的

14:49.950 --> 14:50.950
eChars图表当中的

14:50.950 --> 14:52.950
这些图表

14:52.950 --> 14:53.950
他们其实

14:53.950 --> 14:55.950
这个数据都是差不多

14:55.950 --> 14:56.950
一般情况都是一个

14:56.950 --> 14:57.950
二维的这种数据

14:57.950 --> 14:58.950
一般情况下

14:58.950 --> 15:00.950
很多图表都是这样的

15:00.950 --> 15:01.950
那么好

15:01.950 --> 15:02.950
这个里边

15:02.950 --> 15:03.950
我们这么去放

15:03.950 --> 15:04.950
第一个参数

15:04.950 --> 15:05.950
第一个参数

15:05.950 --> 15:06.950
是不是

15:06.950 --> 15:07.950
我们就去调一下Random

15:07.950 --> 15:08.950
然后传一个值

15:08.950 --> 15:10.950
这个值随便给我

15:10.950 --> 15:11.950
给上一个15

15:11.950 --> 15:12.950
然后这个值

15:12.950 --> 15:13.950
咱们跟官网

15:13.950 --> 15:14.950
给出的那个例子是一样的

15:14.950 --> 15:15.950
好不好

15:15.950 --> 15:16.950
然后第二个维度

15:16.950 --> 15:17.950
第二个维度

15:17.950 --> 15:18.950
我们给上一个10

15:18.950 --> 15:19.950
然后再来

15:19.950 --> 15:20.950
第三个维度

15:20.950 --> 15:21.950
第三个维度

15:21.950 --> 15:22.950
我们给上一个1

15:22.950 --> 15:23.950
这个半径

15:23.950 --> 15:24.950
我需要

15:24.950 --> 15:25.950
这个东西

15:25.950 --> 15:26.950
咱需要最后再去处理它

15:26.950 --> 15:27.950
好吧

15:27.950 --> 15:28.950
再去处理它

15:28.950 --> 15:29.950
然后这是data1

15:29.950 --> 15:30.950
data2

15:30.950 --> 15:31.950
data2

15:31.950 --> 15:32.950
然后data3

15:32.950 --> 15:33.950
data3

15:33.950 --> 15:34.950
data3

15:34.950 --> 15:35.950
然后比如说

15:35.950 --> 15:36.950
这个地方咱改一下

15:36.950 --> 15:37.950
改成一个10

15:37.950 --> 15:38.950
改成10

15:38.950 --> 15:39.950
好不好

15:39.950 --> 15:40.950
这个数据你随便给

15:40.950 --> 15:41.950
随便给

15:41.950 --> 15:42.950
怎么开心怎么来

15:42.950 --> 15:43.950
好

15:43.950 --> 15:44.950
没讲究

15:44.950 --> 15:45.950
行

15:45.950 --> 15:46.950
这样的话

15:46.950 --> 15:47.950
我就给他们三天上了

15:47.950 --> 15:48.950
500条数据

15:48.950 --> 15:49.950
是不是

15:49.950 --> 15:50.950
然后接下来

15:50.950 --> 15:51.950
咱们就真正的图表

15:51.950 --> 15:52.950
图表的话

15:52.950 --> 15:53.950
我在这

15:53.950 --> 15:54.950
生命一个变

15:54.950 --> 15:55.950
实力化一个东西

15:55.950 --> 15:56.950
mychart

15:56.950 --> 15:59.390
mychart

15:59.390 --> 16:00.390
等于什么

16:00.390 --> 16:01.390
eChars

16:02.390 --> 16:03.390
eChars掉下

16:03.390 --> 16:05.390
他身上的init

16:05.390 --> 16:06.390
这个方法是吧

16:07.390 --> 16:11.340
我这个eChars拼得对吗

16:11.340 --> 16:12.340
好拼得对的

16:12.340 --> 16:13.340
掉下这个init

16:13.340 --> 16:14.340
这个方法

16:14.340 --> 16:15.340
然后在这个init

16:15.340 --> 16:16.340
这个方法当中

16:16.340 --> 16:17.340
我要传一个参数

16:17.340 --> 16:18.340
是不是

16:19.340 --> 16:20.340
傻了我

16:20.340 --> 16:22.340
这个里边咱给的是什么

16:22.340 --> 16:25.340
document.getElementById

16:25.340 --> 16:27.340
我们给的是一个动物元素

16:27.340 --> 16:28.340
这个动物元素

16:29.340 --> 16:30.340
Chart1

16:30.340 --> 16:31.340
ok

16:31.340 --> 16:33.340
它应该是一个加上引号

16:33.340 --> 16:34.340
好

16:34.340 --> 16:35.340
然后这个实力就有了

16:35.340 --> 16:36.340
是吧

16:36.340 --> 16:37.340
有了之后

16:37.340 --> 16:39.340
是不是实力需要去掉一下

16:39.340 --> 16:40.340
这个方法

16:40.340 --> 16:41.340
sideOption

16:42.340 --> 16:43.340
这个方法

16:43.340 --> 16:44.340
对不对

16:44.340 --> 16:45.340
然后这个sideOption当中

16:45.340 --> 16:46.340
咱们再给上一个对象

16:46.340 --> 16:47.340
然后这个对象当中

16:47.340 --> 16:49.340
放的就是一些配置参数

16:49.340 --> 16:50.340
是不是

16:50.340 --> 16:51.340
好

16:51.340 --> 16:52.340
这个里头

16:52.340 --> 16:53.340
我需要给什么配置参数

16:53.340 --> 16:54.340
是这样的

16:54.340 --> 16:55.340
首先

16:55.340 --> 16:56.340
图例

16:56.340 --> 17:00.320
对吧

17:00.320 --> 17:01.320
然后这个图例

17:01.320 --> 17:02.320
咱什么东西都不用给

17:02.320 --> 17:04.320
到时候让他自己去取

17:04.320 --> 17:06.320
他去谁里边去取

17:06.320 --> 17:08.320
去series当中

17:08.320 --> 17:09.320
去取

17:09.320 --> 17:10.320
好吧

17:10.320 --> 17:11.320
我们给上dim之后

17:11.320 --> 17:12.320
他就能够取到正确的值了

17:12.320 --> 17:13.320
这是图例

17:13.320 --> 17:14.320
然后

17:14.320 --> 17:15.320
x走

17:15.320 --> 17:16.320
xA

17:17.320 --> 17:18.320
x

17:18.320 --> 17:19.320
xS

17:20.320 --> 17:21.320
它也不需要给

17:21.320 --> 17:22.320
走默认

17:22.320 --> 17:23.320
然后

17:23.320 --> 17:24.320
外走

17:24.320 --> 17:25.320
走默认

17:25.320 --> 17:27.320
外走也要走默认

17:27.320 --> 17:28.320
一会我告诉大家

17:28.320 --> 17:29.320
这个默认都有什么东西

17:29.320 --> 17:30.320
好不好

17:30.320 --> 17:32.320
然后接着咱们把这个series

17:33.320 --> 17:34.320
把它

17:34.320 --> 17:35.320
要写出来

17:35.320 --> 17:36.320
当然人家有三个系列

17:36.320 --> 17:37.320
所以说

17:37.320 --> 17:39.320
我就需要给上一个数组了

17:39.320 --> 17:40.320
是不是

17:40.320 --> 17:41.320
三个系列的话

17:41.320 --> 17:42.320
第一个系列

17:42.320 --> 17:44.320
是一个对象

17:44.320 --> 17:45.320
第二个系列

17:45.320 --> 17:46.320
咱一会复制

17:46.320 --> 17:47.320
他们都是一个对象

17:47.320 --> 17:48.320
是不是

17:48.320 --> 17:49.320
然后这个对象当中

17:49.320 --> 17:50.320
首先有一个参数

17:50.320 --> 17:51.320
就是name

17:51.320 --> 17:52.320
比如说这个name

17:52.320 --> 17:53.320
我们给上一个

17:53.320 --> 17:54.320
钢�

17:54.320 --> 17:55.320
钢�

17:55.320 --> 17:57.320
随便给的这个数据

17:57.320 --> 17:59.320
它的类型需要给type

17:59.320 --> 18:02.080
skater

18:02.080 --> 18:03.080
这个类型

18:03.080 --> 18:04.080
指的就是

18:04.080 --> 18:05.080
气泡图

18:05.080 --> 18:06.080
它的一个类型

18:06.080 --> 18:07.080
然后数据必须要给

18:07.080 --> 18:08.080
代理

18:08.080 --> 18:09.080
代理

18:09.080 --> 18:10.080
对应的就是

18:10.080 --> 18:11.080
这个数组当中的

18:11.080 --> 18:12.080
这个数据

18:12.080 --> 18:13.080
好吧

18:13.080 --> 18:14.080
来 继续

18:14.080 --> 18:16.080
然后还有另外一个东西

18:16.080 --> 18:17.080
这个东西就是

18:17.080 --> 18:18.080
刚才我所说的symbol

18:23.080 --> 18:24.080
symbolsize

18:24.080 --> 18:25.080
它是一个什么

18:25.080 --> 18:26.080
是一个faction

18:26.080 --> 18:30.100
然后symbolsize

18:30.100 --> 18:31.100
就是用来决定

18:31.100 --> 18:32.100
现在气泡

18:32.100 --> 18:33.100
它的一个半径的

18:33.100 --> 18:34.100
它的一个半径的

18:34.100 --> 18:35.100
然后这里

18:35.100 --> 18:36.100
传一个参数

18:36.100 --> 18:37.100
传一个参数

18:37.100 --> 18:38.100
这个参数代表的是啥

18:38.100 --> 18:40.100
就是每一条数据

18:40.100 --> 18:41.100
每一条数据

18:41.100 --> 18:42.100
明白吗

18:42.100 --> 18:43.100
这个半径

18:43.100 --> 18:44.100
我们说过

18:44.100 --> 18:45.100
就是用最后一个维度

18:45.100 --> 18:46.100
是吧

18:46.100 --> 18:47.100
最后一个维度

18:47.100 --> 18:48.100
其实

18:48.100 --> 18:49.100
这个地方

18:49.100 --> 18:50.100
我们应该这么写

18:50.100 --> 18:51.100
return

18:51.100 --> 18:52.100
Val

18:52.100 --> 18:53.100
最后一个维度

18:53.100 --> 18:54.100
它的一个锁引是几

18:54.100 --> 18:55.100
是不是012的2

18:55.100 --> 18:57.100
这是012

18:57.100 --> 18:58.100
是不是

18:58.100 --> 18:59.100
第二个

18:59.100 --> 19:00.100
第二个之后

19:00.100 --> 19:01.100
我拿这个东西

19:01.100 --> 19:02.100
乘上一个40

19:02.100 --> 19:04.100
也就是利用

19:04.100 --> 19:05.100
最后的一个维度

19:05.100 --> 19:06.100
它的一个数值

19:06.100 --> 19:08.100
然后我把它变大一点

19:08.100 --> 19:09.100
就乘上一个40

19:09.100 --> 19:10.100
就行了

19:10.100 --> 19:11.100
好

19:11.100 --> 19:12.100
那这样的话

19:12.100 --> 19:14.100
我们一个系列就写完了

19:14.100 --> 19:16.100
然后第二个系列

19:16.100 --> 19:22.480
我们改上一个石油

19:22.480 --> 19:24.480
然后第三个系列

19:24.480 --> 19:27.480
我们改上一个煤炭

19:28.480 --> 19:29.480
煤炭

19:29.480 --> 19:30.480
好吧

19:30.480 --> 19:31.480
煤炭

19:31.480 --> 19:32.480
然后里边的这个

19:32.480 --> 19:33.480
好了

19:33.480 --> 19:34.480
这是第二个

19:34.480 --> 19:36.480
然后这个是第三个

19:36.480 --> 19:38.480
剩下的这些内容

19:38.480 --> 19:39.480
其实咱们不用管了

19:39.480 --> 19:40.480
不用管之后

19:40.480 --> 19:41.480
来打开页面

19:41.480 --> 19:42.480
先看一下

19:42.480 --> 19:43.480
好

19:43.480 --> 19:45.480
数据就出来了

19:45.480 --> 19:46.480
数据出来了

19:46.480 --> 19:47.480
数据出来之后

19:47.480 --> 19:48.480
你看这里头

19:48.480 --> 19:49.480
是不是这么多

19:49.480 --> 19:50.480
密密麻麻的

19:50.480 --> 19:52.480
你想看某一块区域的数据

19:52.480 --> 19:53.480
是不是非常的费劲

19:53.480 --> 19:54.480
我们就是为了

19:54.480 --> 19:56.480
要让它显示多

19:56.480 --> 19:58.480
为了要让它显示多

19:58.480 --> 19:59.480
好

19:59.480 --> 20:00.480
那显示多之后

20:00.480 --> 20:01.480
接下来

20:01.480 --> 20:02.480
进入咱们今天

20:02.480 --> 20:03.480
课程的一个政体了

20:03.480 --> 20:04.480
就是说

20:04.480 --> 20:05.480
咱需要去解释

20:05.480 --> 20:06.480
我们要去演示

20:06.480 --> 20:07.480
DateZoom这个组建

20:07.480 --> 20:08.480
行

20:08.480 --> 20:09.480
DateZoom

20:09.480 --> 20:10.480
来

20:10.480 --> 20:12.480
DateZoom咱们再强调一点

20:12.480 --> 20:13.480
它总共三个类型

20:13.480 --> 20:14.480
第三个类型

20:14.480 --> 20:16.480
咱们是放到TourBox当中去讲

20:16.480 --> 20:17.480
所以说

20:17.480 --> 20:19.480
这节课咱们只讲两个类型

20:19.480 --> 20:20.480
那先来看

20:20.480 --> 20:22.480
第一个类型就是内置型的

20:22.480 --> 20:23.480
内置型的

20:23.480 --> 20:24.480
点开这个东西

20:24.480 --> 20:27.480
内置型的缩放组建

20:27.480 --> 20:30.480
他们都需要去放到DateZoom当中

20:30.480 --> 20:33.480
所以我在这需要来上一个配置参数

20:33.480 --> 20:35.480
DateZoom放到这

20:35.480 --> 20:36.480
然后它是一个什么

20:36.480 --> 20:38.480
是一个数组

20:38.480 --> 20:40.480
因为我们说过

20:40.480 --> 20:43.480
每一个缩放组建

20:43.480 --> 20:45.480
它对应的都是一条轴

20:45.480 --> 20:46.480
你想要多条轴的话

20:46.480 --> 20:48.480
你就需要给多个组建

20:48.480 --> 20:49.480
能吗

20:49.480 --> 20:50.480
所以这个里头

20:50.480 --> 20:52.480
你就可以无限制的去添加

20:52.480 --> 20:54.480
只要能够对应哪一条轴

20:54.480 --> 20:55.480
就可以了

20:55.480 --> 20:56.480
好

20:56.480 --> 20:57.480
在这我们先来添加

20:57.480 --> 20:58.480
第一个

20:58.480 --> 20:59.480
是什么

20:59.480 --> 21:00.480
就是Inside

21:00.480 --> 21:02.480
Inside就是Type的职位

21:02.480 --> 21:04.480
Inside就能够决定

21:04.480 --> 21:06.480
它的类型是内置型的

21:06.480 --> 21:07.480
好

21:07.480 --> 21:09.480
在这咱们把这条给它加上

21:09.480 --> 21:11.480
Type等于Inside

21:11.480 --> 21:18.480
给上之后

21:18.480 --> 21:19.480
我们先来看一下

21:19.480 --> 21:21.480
在这个图上有没有变化

21:21.480 --> 21:22.480
刷新一下

21:22.480 --> 21:26.480
图上帽子没有任何的变化

21:26.480 --> 21:27.480
但是其实

21:27.480 --> 21:29.480
它就具备了一个功能

21:29.480 --> 21:30.480
什么功能

21:30.480 --> 21:31.480
你看我在这

21:31.480 --> 21:33.480
鼠标滚轮滚动

21:33.480 --> 21:34.480
你有没有发现

21:34.480 --> 21:35.480
它其实已经动了

21:35.480 --> 21:36.480
好

21:36.480 --> 21:38.480
如果说我把这条给它注视掉

21:38.480 --> 21:39.480
咱们再来看

21:39.480 --> 21:40.480
刷新一下

21:40.480 --> 21:41.480
我现在鼠标滚轮

21:41.480 --> 21:42.480
走走走

21:42.480 --> 21:44.480
我一直在走

21:44.480 --> 21:45.480
对吧

21:45.480 --> 21:46.480
好

21:46.480 --> 21:47.480
一直在走

21:47.480 --> 21:48.480
它下面出现了一条

21:48.480 --> 21:49.480
是不是

21:49.480 --> 21:50.480
整个注视掉

21:50.480 --> 21:51.480
刷新一下

21:51.480 --> 21:52.480
好

21:52.480 --> 21:53.480
没有了

21:53.480 --> 21:55.480
在这咱们来看

21:55.480 --> 21:56.480
我在这个地方

21:56.480 --> 21:58.480
鼠标滚轮滚滚滚动

21:58.480 --> 21:59.480
你使劲的去滚动

21:59.480 --> 22:00.480
都是没有效果的

22:00.480 --> 22:02.480
但是当咱们加上这个之后

22:02.480 --> 22:03.480
你看

22:03.480 --> 22:04.480
你在滚动的时候

22:04.480 --> 22:05.480
其实是不是有没有发现

22:05.480 --> 22:07.480
其实已经动摊了

22:07.480 --> 22:08.480
动摊了吧

22:08.480 --> 22:09.480
好

22:09.480 --> 22:11.480
这个其实就是内置型数据

22:11.480 --> 22:12.480
缩放组件

22:12.480 --> 22:13.480
它的一个表现形式

22:13.480 --> 22:15.480
咱们其实在刚才已经说过了

22:15.480 --> 22:17.480
它在pc端

22:17.480 --> 22:18.480
就是说我们鼠标放在

22:18.480 --> 22:20.480
坐标系内滚动滚轮

22:20.480 --> 22:21.480
可以进行一个缩放

22:21.480 --> 22:22.480
然后

22:22.480 --> 22:24.480
我们在这个坐标系当中

22:24.480 --> 22:26.480
现在点着拖拽

22:26.480 --> 22:28.480
是可以平移的

22:28.480 --> 22:29.480
可以平移的

22:29.480 --> 22:30.480
明白吧

22:30.480 --> 22:31.480
平移的

22:31.480 --> 22:32.480
然后在移动端

22:32.480 --> 22:34.480
就是双指进行缩放

22:34.480 --> 22:36.480
单指进行平移

22:36.480 --> 22:38.480
那给完这个type之后

22:38.480 --> 22:40.480
我们就能够进行这种操作了

22:40.480 --> 22:42.480
就进行这种操作了

22:42.480 --> 22:43.480
好吧

22:43.480 --> 22:44.480
然后这个东西

22:44.480 --> 22:45.480
这个东西

22:45.480 --> 22:47.480
是不是看上去很神奇

22:47.480 --> 22:48.480
是吧

22:48.480 --> 22:49.480
我们给上一条属性

22:49.480 --> 22:50.480
它就有了

22:50.480 --> 22:51.480
其实这个东西

22:51.480 --> 22:52.480
就是夹了一个拖拽

22:52.480 --> 22:54.480
它把数据进行了一个缩放

22:54.480 --> 22:55.480
我们一会要去讲

22:55.480 --> 22:57.480
它缩放的一个原理

22:57.480 --> 22:58.480
我们继续往下

22:58.480 --> 22:59.480
继续往下

22:59.480 --> 23:00.480
来

23:00.480 --> 23:01.480
这条属性咱们就不说了

23:01.480 --> 23:02.480
好不好

23:02.480 --> 23:03.480
type

23:03.480 --> 23:04.480
然后关于这个ID也不说了

23:04.480 --> 23:05.480
disable

23:05.480 --> 23:06.480
disable的这个东西

23:06.480 --> 23:08.480
演示一下吧

23:08.480 --> 23:09.480
演示一下

23:09.480 --> 23:10.480
disable

23:10.480 --> 23:12.480
是否停止组建的一个功能

23:12.480 --> 23:14.480
那这个东西就是

23:14.480 --> 23:15.480
你给上一个处

23:15.480 --> 23:16.480
那就是说

23:16.480 --> 23:18.480
现在你其实不能够使用

23:18.480 --> 23:19.480
这个组建的功能了

23:19.480 --> 23:21.480
你看我鼠标在滚动滚动滚动

23:21.480 --> 23:22.480
滚动

23:22.480 --> 23:23.480
它其实是没有效果的

23:23.480 --> 23:25.480
我们给上一个force的话

23:25.480 --> 23:26.480
就是开启这个功能

23:26.480 --> 23:28.480
那鼠标在去滚动的时候

23:28.480 --> 23:29.480
其实就有效果了

23:29.480 --> 23:30.480
好

23:30.480 --> 23:31.480
disable的

23:31.480 --> 23:32.480
往下走

23:32.480 --> 23:33.480
咱们说一下

23:33.480 --> 23:34.480
x-axis index

23:34.480 --> 23:35.480
这个东西是不是

23:35.480 --> 23:36.480
四层相识

23:36.480 --> 23:37.480
很熟悉吧

23:37.480 --> 23:39.480
好

23:39.480 --> 23:40.480
在前面

23:40.480 --> 23:41.480
我们讲x轴外轴的时候

23:41.480 --> 23:42.480
有说道过

23:42.480 --> 23:43.480
对不对

23:43.480 --> 23:44.480
因为这个坐标轴

23:44.480 --> 23:46.480
它其实可以有多条

23:46.480 --> 23:47.480
那你的数据

23:47.480 --> 23:48.480
你的某一个组建

23:48.480 --> 23:49.480
要对应哪个坐标轴

23:49.480 --> 23:52.480
是不是需要通过x-axis index

23:52.480 --> 23:55.480
以及这个y-axis index

23:55.480 --> 23:57.480
通过它俩来控制

23:57.480 --> 23:58.480
好

23:58.480 --> 23:59.480
那这个东西

23:59.480 --> 24:01.480
它跟前面的余法也是一样的

24:01.480 --> 24:03.480
它同时可以有一个数字的一个值

24:03.480 --> 24:05.480
也可以有一个什么的

24:05.480 --> 24:07.480
array的这么一个值

24:07.480 --> 24:08.480
那有一个数字的这个值

24:08.480 --> 24:09.480
就表示

24:09.480 --> 24:11.480
现在就是我们disable这个组建

24:11.480 --> 24:13.480
到底是控制哪一条轴

24:13.480 --> 24:16.480
我们一直在反复的强调

24:16.480 --> 24:17.480
它控制

24:17.480 --> 24:19.480
它需要去控制一条轴是吧

24:19.480 --> 24:20.480
那这条轴是谁

24:20.480 --> 24:23.480
我就可以通过这个x-axis

24:23.480 --> 24:24.480
去指定

24:24.480 --> 24:25.480
你比如说现在

24:25.480 --> 24:27.480
我给上一个值为0

24:27.480 --> 24:28.480
给上一个值为0

24:28.480 --> 24:30.480
表示的意思是什么

24:30.480 --> 24:31.480
表示的意思就是说

24:31.480 --> 24:36.480
现在它控制第0个x-axis

24:36.480 --> 24:38.480
那由于我们在这

24:38.480 --> 24:39.480
这个x-axis

24:39.480 --> 24:40.480
你看大家看

24:40.480 --> 24:42.480
这我们并没有去写多个

24:42.480 --> 24:43.480
所以默认它就是一个

24:43.480 --> 24:44.480
是吧

24:44.480 --> 24:45.480
那如果说有多个的话

24:45.480 --> 24:48.480
你看人家官方给出的这个例子

24:48.480 --> 24:51.480
比如说现在它写出了4条x-axis

24:51.480 --> 24:52.480
那现在

24:53.480 --> 24:55.480
要控制哪一个

24:55.480 --> 24:57.480
你可以给上一个3

24:57.480 --> 24:58.480
给上一个3

24:58.480 --> 25:01.480
就表示现在你的disable这个组建

25:01.480 --> 25:02.480
控制的是哪一条轴

25:02.480 --> 25:04.480
0,1,2,3

25:04.480 --> 25:06.480
控制的是这一条轴

25:06.480 --> 25:08.480
那如果说你给上一个数组的话

25:08.480 --> 25:10.480
那其实0跟2

25:10.480 --> 25:11.480
那也就表示

25:11.480 --> 25:12.480
现在你的这个组建

25:12.480 --> 25:13.480
控制的是

25:13.480 --> 25:14.480
第0个轴

25:14.480 --> 25:15.480
第0个x-axis

25:15.480 --> 25:17.480
以及还有第2个x-axis

25:17.480 --> 25:20.480
同时控制它俩

25:20.480 --> 25:21.480
这个东西

25:21.480 --> 25:22.480
再说一遍

25:22.480 --> 25:24.480
其实之前已经说过很多次了

25:24.480 --> 25:25.480
那现在

25:25.480 --> 25:26.480
我们给上一个0

25:26.480 --> 25:27.480
来看一下

25:27.480 --> 25:29.480
它控制的是不是x-axis

25:29.480 --> 25:30.480
来走

25:30.480 --> 25:31.480
你有没有发现

25:31.480 --> 25:32.480
其实它只会两边

25:32.480 --> 25:34.480
发现只有左右在动

25:34.480 --> 25:35.480
那其实就是控制的

25:35.480 --> 25:37.480
就是x-axis

25:37.480 --> 25:38.480
控制的就是x-axis

25:38.480 --> 25:39.480
那如果说

25:39.480 --> 25:40.480
你给上一个什么

25:40.480 --> 25:41.480
当外走

25:41.480 --> 25:42.480
给上一个外走

25:42.480 --> 25:44.480
然后把这个当注射掉

25:44.480 --> 25:45.480
那我们再来看

25:45.480 --> 25:46.480
会是什么效果

25:46.480 --> 25:47.480
来刷新一下

25:47.480 --> 25:48.480
来控制走

25:48.480 --> 25:49.480
看到没有

25:49.480 --> 25:50.480
它是不是上下边

25:50.480 --> 25:51.480
上下边

25:51.480 --> 25:53.480
那其实默认它控制的

25:53.480 --> 25:54.480
就是一个外了

25:54.480 --> 25:56.480
它就不是一个x走了

25:56.480 --> 25:57.480
明白吧

25:57.480 --> 25:58.480
好

25:58.480 --> 25:59.480
这个地方

25:59.480 --> 26:00.480
咱们就

26:00.480 --> 26:01.480
我在这儿

26:01.480 --> 26:02.480
就给上这个

26:02.480 --> 26:03.480
好吧

26:03.480 --> 26:04.480
给上这个

26:04.480 --> 26:05.480
然后同时

26:05.480 --> 26:06.480
在这儿

26:06.480 --> 26:07.480
咱解决一个问题

26:07.480 --> 26:08.480
就是目前

26:08.480 --> 26:09.480
如果说咱这么去写的话

26:09.480 --> 26:11.480
它只能够左右的变

26:11.480 --> 26:12.480
那我想让

26:12.480 --> 26:13.480
你看拖动也是

26:13.480 --> 26:14.480
只能左右的拖

26:14.480 --> 26:16.480
那我想让它干嘛呢

26:16.480 --> 26:17.480
我想让它

26:17.480 --> 26:18.480
上下也要变

26:18.480 --> 26:19.480
怎么办

26:19.480 --> 26:20.480
那其实也就是

26:20.480 --> 26:21.480
我再来上一个

26:21.480 --> 26:22.480
这个什么

26:22.480 --> 26:24.480
DateZoom的组件

26:24.480 --> 26:25.480
然后

26:25.480 --> 26:26.480
这个东西

26:26.480 --> 26:27.480
里边我给上什么

26:27.480 --> 26:29.480
不要控制x了

26:29.480 --> 26:30.480
我给上一个

26:30.480 --> 26:31.480
控制y

26:31.480 --> 26:32.480
那这个y

26:32.480 --> 26:33.480
咱变种形式

26:33.480 --> 26:35.480
我们用一个中扩号

26:35.480 --> 26:36.480
取个下标

26:36.480 --> 26:37.480
行不行

26:37.480 --> 26:38.480
来看一下

26:38.480 --> 26:39.480
刷新一下

26:39.480 --> 26:40.480
走

26:40.480 --> 26:41.480
然后这个时候

26:41.480 --> 26:42.480
你没有发现

26:42.480 --> 26:43.480
它其实是不是

26:43.480 --> 26:44.480
四周都在动

26:44.480 --> 26:45.480
四周都在动

26:45.480 --> 26:46.480
然后这个里头

26:46.480 --> 26:47.480
有一个动画

26:47.480 --> 26:48.480
是吧

26:48.480 --> 26:50.480
这个动画

26:50.480 --> 26:52.480
我把它取消掉

26:52.480 --> 26:54.480
我把它取消掉

26:54.480 --> 26:55.480
就是在这

26:55.480 --> 26:58.820
Animation

26:58.820 --> 26:59.820
Animation这个值

26:59.820 --> 27:01.820
给上一个force

27:01.820 --> 27:02.820
这个就是

27:02.820 --> 27:03.820
不开启动画

27:03.820 --> 27:08.320
不开启动画

27:08.320 --> 27:09.320
好

27:09.320 --> 27:11.320
因为我这个地方

27:11.320 --> 27:12.320
数据比较多

27:12.320 --> 27:13.320
所以说我就不需要

27:13.320 --> 27:14.320
让它开动画了

27:14.320 --> 27:15.320
你看这样的话

27:15.320 --> 27:16.320
就比较流畅了一些

27:16.320 --> 27:18.320
那关于这个参数

27:18.320 --> 27:19.320
我们后边

27:19.320 --> 27:20.320
还会去说它

27:20.320 --> 27:21.320
还会去说

27:21.320 --> 27:23.320
来 继续往下

27:23.320 --> 27:24.320
继续往下

27:24.320 --> 27:25.320
那这样的话

27:25.320 --> 27:26.320
其实我们给了两个

27:26.320 --> 27:28.320
DateZoom的组件

27:28.320 --> 27:29.320
分别控制了

27:29.320 --> 27:31.320
X周跟Y周

27:31.320 --> 27:32.320
控制了Y周

27:32.320 --> 27:33.320
这样的话

27:33.320 --> 27:34.320
我们四个方向当中

27:34.320 --> 27:35.320
你都可以随意的

27:35.320 --> 27:36.320
进行一个切换了

27:36.320 --> 27:37.320
是不是

27:37.320 --> 27:38.320
随意的进行了

27:38.320 --> 27:39.320
一个切换

27:39.320 --> 27:40.320
然后继续往下看

27:40.320 --> 27:41.320
然后接下来

27:41.320 --> 27:43.320
就是这两个参数了

27:43.320 --> 27:44.320
Radio Excess Index

27:44.320 --> 27:45.320
还有一个

27:45.320 --> 27:47.320
Angle Excess Index

27:47.320 --> 27:48.320
这两个东西

27:48.320 --> 27:49.320
其实是什么呢

27:49.320 --> 27:50.320
是极作标当中的

27:51.320 --> 27:53.320
是极作标器当中的

27:53.320 --> 27:54.320
这个什么概念

27:54.320 --> 27:55.320
是吧

27:55.320 --> 27:56.320
那这条轴是什么

27:56.320 --> 27:57.320
是一个

27:57.320 --> 27:58.320
它是一个镜像轴

27:58.320 --> 27:59.320
然后这条轴

27:59.320 --> 28:00.320
是一个角度轴

28:00.320 --> 28:01.320
是不是

28:01.320 --> 28:02.320
Polar咱们之前

28:02.320 --> 28:04.320
所讲的Polar极作标器

28:04.320 --> 28:05.320
对吧

28:05.320 --> 28:06.320
不要忘了

28:06.320 --> 28:07.320
好

28:07.320 --> 28:08.320
那在这

28:08.320 --> 28:09.320
他们两个的意思

28:09.320 --> 28:10.320
跟上面的意思

28:10.320 --> 28:11.320
是一模一样的

28:11.320 --> 28:12.320
一模一样的

28:12.320 --> 28:13.320
就是两条轴而已

28:13.320 --> 28:15.320
咱们就不再去说了

28:15.320 --> 28:16.320
好吧

28:16.320 --> 28:17.320
一个意思

28:17.320 --> 28:18.320
但是在这我吐槽一下

28:18.320 --> 28:19.320
来看一下

28:20.320 --> 28:21.320
这个外走

28:21.320 --> 28:22.320
是不是

28:23.320 --> 28:24.320
是什么呢

28:24.320 --> 28:26.320
是极作标器当中的概念

28:26.320 --> 28:27.320
没有问题吧

28:27.320 --> 28:28.320
没有问题

28:28.320 --> 28:29.320
但是这个地方

28:29.320 --> 28:30.320
你看

28:30.320 --> 28:31.320
Radio Store

28:31.320 --> 28:32.320
也就是镜像轴

28:32.320 --> 28:33.320
镜像轴

28:33.320 --> 28:36.320
也是极作标器当中的概念吗

28:36.320 --> 28:38.320
这不胡扯吗

28:38.320 --> 28:39.320
是不是

28:39.320 --> 28:40.320
这绝对是胡扯

28:40.320 --> 28:41.320
它是谁

28:41.320 --> 28:42.320
哪个作标器

28:42.320 --> 28:44.320
Polar是什么呢

28:44.320 --> 28:45.320
极作标器

28:45.320 --> 28:46.320
你看

28:46.320 --> 28:48.320
在这就开始

28:49.320 --> 28:50.320
耍流氓了

28:50.320 --> 28:52.320
就直接复制

28:52.320 --> 28:53.320
复制过来

28:53.320 --> 28:54.320
你看

28:54.320 --> 28:55.320
没有一点责任心

28:55.320 --> 28:56.320
改都不改

28:56.320 --> 28:58.320
咱们吐槽一下

28:58.320 --> 29:00.320
有问题咱就要指出来

29:00.320 --> 29:01.320
好

29:01.320 --> 29:02.320
继续往下

29:02.320 --> 29:04.320
这个阶段咱们说完了

29:04.320 --> 29:06.320
接下来咱们要进行另外一个

29:06.320 --> 29:07.320
非常重要的阶段

29:07.320 --> 29:08.320
在这

29:08.320 --> 29:09.320
大家一定要注意

29:09.320 --> 29:10.320
一定要注意

29:10.320 --> 29:12.320
这个东西很重要

29:12.320 --> 29:13.320
而且

29:13.320 --> 29:15.320
它很难理解

29:15.320 --> 29:16.320
好吧

29:16.320 --> 29:17.320
我接下来

29:17.320 --> 29:18.320
就仔细

29:18.320 --> 29:20.320
慢慢的去解释一下

29:20.320 --> 29:22.320
Fuelter Mode

29:22.320 --> 29:23.320
这个参数

29:23.320 --> 29:24.320
解释它的话

29:24.320 --> 29:25.320
我们来这

29:25.320 --> 29:26.320
人家官方在一上来的时候

29:26.320 --> 29:28.320
其实是给出了一些

29:28.320 --> 29:30.320
可参考的这些内容

29:30.320 --> 29:31.320
就是在这个地方

29:31.320 --> 29:34.320
我们在这就说一下

29:34.320 --> 29:35.320
说一下

29:35.320 --> 29:36.320
Date Zoom

29:36.320 --> 29:37.320
需要去说一下

29:37.320 --> 29:39.320
它的核心的一些原理

29:39.320 --> 29:41.320
它之所以能够实现缩放

29:41.320 --> 29:43.320
它的原理是什么呢

29:43.320 --> 29:44.320
它的原理是这样的

29:44.320 --> 29:46.320
我们可以把这个东西

29:46.320 --> 29:48.320
把这个坐标系

29:48.320 --> 29:50.320
我们把它看成一个

29:50.320 --> 29:53.320
数据展示的窗口

29:53.320 --> 29:55.320
当我们操作的时候

29:55.320 --> 29:56.320
其实这个窗口

29:56.320 --> 29:58.320
它会进行一个缩放

29:58.320 --> 29:59.320
一定要注意

29:59.320 --> 30:01.320
这种缩放

30:01.320 --> 30:03.320
并不是把尺寸

30:03.320 --> 30:05.320
把这个窗口大小

30:05.320 --> 30:06.320
进行了一个缩放

30:06.320 --> 30:07.320
而是

30:07.320 --> 30:09.320
把数据展示的范围

30:09.320 --> 30:11.320
进行了缩放

30:11.320 --> 30:13.320
数据展示的范围

30:13.320 --> 30:14.320
数据展示的范围

30:14.320 --> 30:16.320
是由谁决定的呢

30:16.320 --> 30:17.320
其实就是由

30:17.320 --> 30:19.320
轴决定的

30:19.320 --> 30:20.320
两条轴

30:20.320 --> 30:21.320
一条X轴

30:21.320 --> 30:22.320
当中的刻度

30:22.320 --> 30:23.320
跟一条Y轴

30:23.320 --> 30:25.320
当中的这个刻度

30:25.320 --> 30:27.320
由他们来决定的

30:27.320 --> 30:29.320
其实我们的缩放

30:29.320 --> 30:30.320
缩放指的是啥

30:30.320 --> 30:32.320
就是改变了

30:32.320 --> 30:33.320
两条轴

30:33.320 --> 30:35.320
当中的数据展示的范围

30:35.320 --> 30:36.320
你看到没有

30:36.320 --> 30:37.320
你看到没有

30:37.320 --> 30:38.320
当我在去变的时候

30:38.320 --> 30:39.320
你们发现

30:39.320 --> 30:40.320
其实下面是变化的

30:40.320 --> 30:41.320
以及左边这个值

30:41.320 --> 30:43.320
都是有变化的

30:43.320 --> 30:44.320
看到吧

30:44.320 --> 30:45.320
是不是都是有变化的

30:45.320 --> 30:46.320
其实这个缩放

30:46.320 --> 30:47.320
缩放的是什么

30:47.320 --> 30:48.320
就是缩放了

30:48.320 --> 30:49.320
两条轴

30:49.320 --> 30:52.320
当中的数据区域

30:52.320 --> 30:54.320
缩放的就是它

30:54.320 --> 30:55.320
好

30:55.320 --> 30:56.320
这是其一

30:56.320 --> 30:57.320
然后其二

30:57.320 --> 30:59.320
你说

30:59.320 --> 31:01.320
这些数据范围之外的

31:01.320 --> 31:03.320
那些数据哪去了呢

31:03.320 --> 31:05.320
范围以外的

31:05.320 --> 31:06.320
或者说你可以简单粗暴

31:06.320 --> 31:07.320
认为这个方框

31:07.320 --> 31:09.320
我们的作标器之外的那些

31:09.320 --> 31:11.320
原点哪去了呢

31:12.320 --> 31:14.320
这个很天真

31:14.320 --> 31:15.320
并不是

31:15.320 --> 31:16.320
是怎样

31:16.320 --> 31:18.320
它是被过滤掉了

31:18.320 --> 31:19.320
过滤掉了

31:19.320 --> 31:20.320
这个过滤掉

31:20.320 --> 31:21.320
怎么过滤呢

31:21.320 --> 31:23.320
使用的就是咱们要说的

31:23.320 --> 31:25.320
feel the mode

31:25.320 --> 31:27.320
这个参数来过滤的

31:27.320 --> 31:28.320
过滤掉了

31:28.320 --> 31:30.320
那我们举一个例子

31:30.320 --> 31:31.320
举一个例子

31:31.320 --> 31:33.320
咱们简单说一下

31:33.320 --> 31:34.320
这个过滤好不好

31:34.320 --> 31:36.320
比如说我们统计了

31:36.320 --> 31:38.320
一年当中的温度

31:38.320 --> 31:39.320
统计了一年当中

31:39.320 --> 31:40.320
每一天的温度

31:40.320 --> 31:41.320
那由于这个图表

31:41.320 --> 31:43.320
它的大小就那么点

31:43.320 --> 31:44.320
也就这么大

31:44.320 --> 31:46.320
但是默认情况下

31:46.320 --> 31:47.320
会展示出所有的数据

31:47.320 --> 31:48.320
是不是一年当中

31:48.320 --> 31:50.320
所有数据都会展示出来

31:50.320 --> 31:51.320
那当咱们去进行

31:51.320 --> 31:52.320
一个缩放的时候

31:52.320 --> 31:53.320
其实

31:53.320 --> 31:54.320
这个范围

31:54.320 --> 31:55.320
当然我们如果说

31:55.320 --> 31:56.320
用温度的话

31:56.320 --> 31:57.320
其实他们这个轴

31:57.320 --> 31:59.320
就是一个内幕轴了

31:59.320 --> 32:00.320
内幕轴

32:00.320 --> 32:01.320
你比如说我们现在

32:01.320 --> 32:03.320
显示的

32:03.320 --> 32:04.320
08年

32:04.320 --> 32:05.320
09年

32:05.320 --> 32:06.320
10年

32:06.320 --> 32:07.320
12年

32:07.320 --> 32:08.320
13年

32:08.320 --> 32:09.320
这个数据

32:09.320 --> 32:10.320
当你去缩放的时候

32:10.320 --> 32:12.320
那它可能就会变成了

32:12.320 --> 32:14.320
08年的月份了

32:14.320 --> 32:15.320
这个内幕轴当中

32:15.320 --> 32:17.320
显示的就不是年份了

32:17.320 --> 32:18.320
就是一个月份

32:18.320 --> 32:19.320
那你在缩放的时候

32:19.320 --> 32:21.320
它可能变成了星期了

32:21.320 --> 32:22.320
你甚至在缩放

32:22.320 --> 32:23.320
它可能会变成天安

32:23.320 --> 32:25.320
然后甚至还可能变成

32:25.320 --> 32:26.320
小时

32:26.320 --> 32:27.320
几点钟

32:27.320 --> 32:28.320
几点钟

32:28.320 --> 32:29.320
懂吧

32:30.320 --> 32:31.320
好那这里边

32:31.320 --> 32:33.320
其实我们是可以对这个

32:33.320 --> 32:34.320
数据窗口

32:34.320 --> 32:35.320
它的范围

32:35.320 --> 32:37.320
以及过滤的模式

32:37.320 --> 32:38.320
进行设置的

32:38.320 --> 32:39.320
这个是

32:39.320 --> 32:41.320
我们是有这个权利的

32:41.320 --> 32:42.320
那分别来说一下

32:42.320 --> 32:43.320
咱们先来说一下

32:43.320 --> 32:45.320
这个过滤模式

32:45.320 --> 32:46.320
过滤模式

32:47.320 --> 32:48.320
那这个过滤模式

32:48.320 --> 32:49.320
其实在

32:49.320 --> 32:50.320
这个组件当中

32:50.320 --> 32:52.320
它给咱们提供了

32:52.320 --> 32:54.320
总共有四种的过滤模式

32:54.320 --> 32:55.320
需要大家知道

32:55.320 --> 32:56.320
这个过滤的模式

32:56.320 --> 32:59.320
那通过什么参数去设置呢

32:59.320 --> 33:00.320
就是通过这个

33:00.320 --> 33:02.320
filter mode的这个参数呢

33:02.320 --> 33:04.320
去进行一个设置

33:04.320 --> 33:05.320
那第一个值

33:05.320 --> 33:06.320
就是一个filter

33:07.320 --> 33:09.320
filter解释一下

33:09.320 --> 33:12.320
当前数据窗口外的数据

33:12.320 --> 33:14.320
它会被过滤掉

33:14.320 --> 33:15.320
及

33:15.320 --> 33:16.320
会影响

33:16.320 --> 33:18.320
其他轴的一个数据范围

33:18.320 --> 33:20.320
你看它把这个会呢

33:20.320 --> 33:22.320
给咱们标的一个加粗

33:22.320 --> 33:23.320
是吧黑体的

33:23.320 --> 33:24.320
然后

33:24.320 --> 33:25.320
每个数据像

33:25.320 --> 33:27.320
只要有一个维度

33:27.320 --> 33:29.320
在数据窗口外

33:29.320 --> 33:30.320
整个数据像

33:30.320 --> 33:32.320
就会被过滤掉

33:32.320 --> 33:33.320
这句话就是

33:33.320 --> 33:34.320
如果说咱们

33:34.320 --> 33:35.320
这么去看的话

33:35.320 --> 33:36.320
其实很难懂

33:36.320 --> 33:37.320
不要啥意思

33:37.320 --> 33:38.320
是吧

33:38.320 --> 33:39.320
那我就来解释一下

33:39.320 --> 33:40.320
这个filter

33:40.320 --> 33:41.320
它的一个

33:41.320 --> 33:43.320
具体的一个表现

33:43.320 --> 33:44.320
是这样的

33:44.320 --> 33:45.320
我们来看

33:45.320 --> 33:47.320
还来看这张图

33:47.320 --> 33:48.320
这张图啊

33:48.320 --> 33:49.320
我们就拿这个官网的

33:49.320 --> 33:50.320
这个例子来讲

33:50.320 --> 33:51.320
那如果说

33:51.320 --> 33:52.320
现在啊

33:52.320 --> 33:54.320
我只拖动这个x轴

33:54.320 --> 33:55.320
然后呢

33:55.320 --> 33:56.320
这个外轴并没有动

33:56.320 --> 33:57.320
那我比如说

33:57.320 --> 33:58.320
咱们来看这个点

33:58.320 --> 33:59.320
这个气泡

33:59.320 --> 34:01.320
好不好看这个气泡啊

34:01.320 --> 34:03.320
换一个气泡啊

34:03.320 --> 34:04.320
嘿

34:10.730 --> 34:11.730
这个吧

34:11.730 --> 34:12.730
我们来说这个红色的

34:12.730 --> 34:13.730
好不好

34:13.730 --> 34:14.730
这个气泡

34:14.730 --> 34:15.730
大家注意啊

34:15.730 --> 34:16.730
现在呢

34:16.730 --> 34:17.730
你看啊

34:17.730 --> 34:18.730
我往右边走

34:18.730 --> 34:19.730
他到这了

34:19.730 --> 34:20.730
是不是

34:20.730 --> 34:21.730
那当我在走

34:21.730 --> 34:22.730
有没有发现

34:22.730 --> 34:23.730
那个气泡已经没有了

34:23.730 --> 34:24.730
消失了吧

34:25.730 --> 34:26.730
对不对

34:26.730 --> 34:27.730
那好

34:27.730 --> 34:28.730
他消失了

34:28.730 --> 34:29.730
为什么

34:29.730 --> 34:30.730
因为他是不是超过了

34:30.730 --> 34:32.730
我的x轴的一个范围了

34:32.730 --> 34:34.730
是不是超过这个范围了

34:34.730 --> 34:35.730
超过这个范围之后呢

34:35.730 --> 34:36.730
就显示不了了

34:36.730 --> 34:37.730
那这个时候

34:37.730 --> 34:38.730
我问一下大家

34:38.730 --> 34:40.730
这个范围有没有超过

34:40.730 --> 34:43.730
他有没有超过外轴的范围

34:43.730 --> 34:46.730
外轴压根就没有动

34:46.730 --> 34:47.730
你说他

34:47.730 --> 34:48.730
也就是说

34:48.730 --> 34:49.730
从上往下

34:49.730 --> 34:50.730
这个区域当中

34:50.730 --> 34:52.730
所有的这些原点

34:52.730 --> 34:54.730
都在我的范围之内

34:54.730 --> 34:56.730
甭管左边离的有多远

34:56.730 --> 34:57.730
右边离的有多远

34:57.730 --> 34:59.730
他都在我的外轴

34:59.730 --> 35:00.730
外轴是不是

35:00.730 --> 35:02.730
上下的这么一个范围啊

35:02.730 --> 35:03.730
所以说

35:03.730 --> 35:04.730
外轴不动的情况下

35:04.730 --> 35:05.730
你动x轴

35:05.730 --> 35:07.730
那当前

35:07.730 --> 35:09.730
你所看到的这些数据

35:09.730 --> 35:10.730
以及左边

35:10.730 --> 35:12.730
走过的这些数据

35:12.730 --> 35:13.730
以及右边

35:13.730 --> 35:15.730
还没有进来的这些数据

35:15.730 --> 35:17.730
他们外轴范围

35:17.730 --> 35:18.730
绝对都在

35:18.730 --> 35:20.730
都在外轴的范围

35:20.730 --> 35:21.730
只不过现在

35:21.730 --> 35:23.730
x轴的范围

35:23.730 --> 35:24.730
x轴

35:24.730 --> 35:25.730
是不是从左边

35:25.730 --> 35:26.730
到右边

35:26.730 --> 35:27.730
那现在这个原点

35:27.730 --> 35:28.730
你超过这条线

35:28.730 --> 35:29.730
你是不是

35:29.730 --> 35:31.730
就不在我这个范围之内了

35:31.730 --> 35:32.730
所以这个

35:32.730 --> 35:34.730
就是第一种形式

35:34.730 --> 35:35.730
第一种形式

35:35.730 --> 35:36.730
是啥样的

35:36.730 --> 35:37.730
它的给出的这个解释

35:37.730 --> 35:38.730
就是

35:38.730 --> 35:40.730
但凡有一个维度

35:40.730 --> 35:41.730
有一个维度

35:41.730 --> 35:42.730
我们说过

35:42.730 --> 35:43.730
是不是x轴是一个维度

35:43.730 --> 35:44.730
外轴是一个维度

35:44.730 --> 35:45.730
有一个轴的维度

35:45.730 --> 35:47.730
它不在范围之内了

35:47.730 --> 35:48.730
那也就是说

35:48.730 --> 35:50.730
我现在拖动x轴

35:50.730 --> 35:51.730
那这个红色的点

35:51.730 --> 35:53.730
走走走走走走走

35:53.730 --> 35:54.730
走到这之后

35:54.730 --> 35:55.730
它的哪个维度

35:55.730 --> 35:56.730
不在范围内了

35:56.730 --> 35:57.730
是不是x轴

35:57.730 --> 35:58.730
已经过去了

35:58.730 --> 35:59.730
到这了吧

35:59.730 --> 36:00.730
到这了

36:00.730 --> 36:01.730
但是它的外轴

36:01.730 --> 36:02.730
还在范围内吗

36:02.730 --> 36:04.730
还在这个范围内

36:04.730 --> 36:05.730
所以这个时候

36:05.730 --> 36:06.730
有一个维度

36:06.730 --> 36:08.730
超过了范围了

36:08.730 --> 36:10.730
那就过滤掉

36:10.730 --> 36:11.730
那这个过滤

36:11.730 --> 36:13.730
它到底是怎么过滤呢

36:13.730 --> 36:14.730
是这样的

36:14.730 --> 36:15.730
我们来看人家给出的

36:15.730 --> 36:16.730
一个具体的例子

36:16.730 --> 36:17.730
好不好

36:17.730 --> 36:18.730
你比如说咱们再去拖动

36:18.730 --> 36:19.730
是不是

36:19.730 --> 36:21.730
假设用户拖动的是x走

36:21.730 --> 36:22.730
咱们不去动这个外轴

36:22.730 --> 36:23.730
然后导致了

36:23.730 --> 36:25.730
现在Value Window

36:25.730 --> 36:26.730
这个东西

36:26.730 --> 36:27.730
其实你说

36:27.730 --> 36:28.730
它

36:28.730 --> 36:30.730
就不得不再吐槽一下它了

36:30.730 --> 36:32.730
什么叫什么Value Window

36:32.730 --> 36:34.730
什么叫Value Window

36:34.730 --> 36:35.730
这个东西

36:35.730 --> 36:37.730
就是一个数据的窗口

36:37.730 --> 36:39.730
就是一个数据的窗口

36:39.730 --> 36:40.730
可爱什么

36:40.730 --> 36:42.730
搞一些灰色的词了

36:42.730 --> 36:44.730
数据的窗口指的

36:44.730 --> 36:45.730
大家就认为x走

36:45.730 --> 36:47.730
从这开始到这

36:47.730 --> 36:48.730
那么好

36:48.730 --> 36:50.730
你看拖x走

36:50.730 --> 36:51.730
拖着拖

36:51.730 --> 36:53.730
窗口范围变了

36:53.730 --> 36:55.730
我们刚才已经说了

36:55.730 --> 36:56.730
你在拖动的时候

36:56.730 --> 36:57.730
是不是说

36:57.730 --> 36:59.730
x走当中的范围

36:59.730 --> 37:00.730
它是会变的

37:00.730 --> 37:02.730
它拖到的一个范围是多少

37:02.730 --> 37:04.730
是一个2-50的这么一个范围了

37:04.730 --> 37:05.730
数值

37:05.730 --> 37:06.730
好

37:06.730 --> 37:07.730
然后这个时候

37:07.730 --> 37:08.730
它就会去看

37:08.730 --> 37:10.730
serious data当中的

37:10.730 --> 37:11.730
第一列

37:11.730 --> 37:12.730
也就是x

37:12.730 --> 37:13.730
或者说

37:13.730 --> 37:14.730
第一个维度

37:14.730 --> 37:15.730
不是第一列

37:15.730 --> 37:16.730
第零列

37:16.730 --> 37:18.730
它的维度是吧

37:18.730 --> 37:20.730
看这块所有的数据

37:20.730 --> 37:21.730
然后就去找

37:21.730 --> 37:22.730
这里头

37:22.730 --> 37:23.730
所有的数据

37:23.730 --> 37:25.730
看看是否在2-50之间

37:25.730 --> 37:27.730
它这么一笔的话

37:27.730 --> 37:28.730
会发现90

37:28.730 --> 37:30.730
超过50了

37:30.730 --> 37:31.730
超过50

37:31.730 --> 37:32.730
啥意思

37:32.730 --> 37:33.730
其实就是还是在右侧

37:33.730 --> 37:35.730
还没有进入到人家的数据窗口

37:35.730 --> 37:36.730
懂吗

37:36.730 --> 37:37.730
好

37:37.730 --> 37:39.730
它不在这个范围之内

37:39.730 --> 37:40.730
怎么办

37:40.730 --> 37:41.730
过滤掉

37:41.730 --> 37:42.730
怎么办

37:42.730 --> 37:44.730
直接把这条数据给它干掉

37:44.730 --> 37:45.730
然后接着

37:45.730 --> 37:46.730
3在这个范围吗

37:46.730 --> 37:47.730
在

37:47.730 --> 37:48.730
对吧

37:48.730 --> 37:49.730
好

37:49.730 --> 37:50.730
不管

37:50.730 --> 37:51.730
然后发现了一个1

37:51.730 --> 37:52.730
1在这个范围吗

37:52.730 --> 37:53.730
它不在

37:53.730 --> 37:54.730
那1表示啥意思

37:54.730 --> 37:55.730
其实就是说

37:55.730 --> 37:56.730
走过了

37:56.730 --> 37:57.730
在左边的

37:57.730 --> 37:58.730
走到这了

37:58.730 --> 37:59.730
懂吗

37:59.730 --> 38:00.730
所以这样的话

38:00.730 --> 38:01.730
数据

38:01.730 --> 38:02.730
它也不在范围了

38:02.730 --> 38:03.730
不在范围怎么办

38:03.730 --> 38:04.730
过滤掉

38:04.730 --> 38:05.730
怎么过滤掉了

38:05.730 --> 38:07.730
直接把它删掉

38:07.730 --> 38:09.730
直接把它删掉

38:09.730 --> 38:10.730
所以说

38:10.730 --> 38:13.730
当我们拖动到2-50范围之内的

38:13.730 --> 38:14.730
我们的serious data

38:14.730 --> 38:16.730
它其实就变成这个德性了

38:16.730 --> 38:17.730
假设说

38:17.730 --> 38:18.730
本身有4条数据

38:18.730 --> 38:19.730
现在

38:19.730 --> 38:22.730
它是不是就变成了2条数据了

38:22.730 --> 38:23.730
2条数据了吧

38:23.730 --> 38:24.730
这个就是什么

38:24.730 --> 38:26.730
就是一个过滤

38:26.730 --> 38:27.730
好吧

38:27.730 --> 38:28.730
这是第一种情况

38:28.730 --> 38:29.730
它就是

38:29.730 --> 38:31.730
当我的职位filter的时候

38:31.730 --> 38:32.730
它的过滤情况

38:32.730 --> 38:34.730
它的过滤原理是这样的

38:34.730 --> 38:35.730
然后第二个

38:35.730 --> 38:36.730
weak filter

38:36.730 --> 38:38.730
看到跟这个东西很像

38:38.730 --> 38:39.730
是不是

38:39.730 --> 38:40.730
那其实当咱们理解了

38:40.730 --> 38:41.730
这个

38:41.730 --> 38:42.730
第一个filter的时候

38:42.730 --> 38:44.730
那你再去理解什么

38:44.730 --> 38:45.730
理解这个weak filter

38:45.730 --> 38:47.730
就很简单了

38:47.730 --> 38:49.730
咱来说一下

38:49.730 --> 38:50.730
说一下

38:50.730 --> 38:52.730
人家标中的

38:52.730 --> 38:53.730
过滤掉

38:53.730 --> 38:54.730
刚才解释清楚了吧

38:54.730 --> 38:55.730
什么叫过滤掉

38:55.730 --> 38:56.730
就是把数据删除了

38:56.730 --> 38:57.730
就叫过滤掉

38:57.730 --> 38:58.730
然后呢

38:58.730 --> 39:00.730
会影响其他走的数据范围

39:00.730 --> 39:02.730
这个刚才忘说了

39:02.730 --> 39:03.730
来说一下

39:03.730 --> 39:05.730
会影响其他走的数据范围

39:05.730 --> 39:06.730
啥意思呢

39:06.730 --> 39:07.730
其实我们在这

39:07.730 --> 39:08.730
我们在这操作的

39:08.730 --> 39:10.730
是不是只操作的是x走

39:10.730 --> 39:12.730
但是由于filter

39:12.730 --> 39:14.730
他直接把数据给人删掉了

39:14.730 --> 39:16.730
那是不是就代表

39:16.730 --> 39:17.730
这条数据一删掉

39:17.730 --> 39:18.730
它不光

39:18.730 --> 39:19.730
第一个维度没了

39:19.730 --> 39:20.730
第二个

39:20.730 --> 39:21.730
第三个维度

39:21.730 --> 39:22.730
是不是也没了

39:22.730 --> 39:23.730
那第二个维度

39:23.730 --> 39:24.730
对应的是不是外轴

39:24.730 --> 39:25.730
那你看

39:25.730 --> 39:26.730
外轴的数据

39:26.730 --> 39:27.730
这条也没有了

39:27.730 --> 39:28.730
那外轴的范围

39:28.730 --> 39:30.730
是不是减小了

39:30.730 --> 39:31.730
是不是就减小了

39:31.730 --> 39:32.730
那这个半径

39:32.730 --> 39:33.730
他的一个范围

39:33.730 --> 39:35.730
是不是也减小了

39:35.730 --> 39:37.730
因为他是把整条数据过滤掉了

39:37.730 --> 39:38.730
他过滤的同时

39:38.730 --> 39:40.730
他不光过滤掉自己

39:40.730 --> 39:41.730
那其他的维度

39:41.730 --> 39:42.730
他也过滤掉了

39:42.730 --> 39:43.730
所以说就是什么呢

39:43.730 --> 39:44.730
他会影响

39:44.730 --> 39:46.730
其他走的一个数据范围

39:46.730 --> 39:48.730
就是这么一个意思

39:48.730 --> 39:49.730
然后呢

39:49.730 --> 39:51.730
再来说一下这个wakefilter

39:51.730 --> 39:52.730
那wakefilter

39:52.730 --> 39:53.730
其实理解了filter之后

39:53.730 --> 39:55.730
这个东西呢很简单

39:55.730 --> 39:56.730
当前数据窗口外的数据

39:56.730 --> 39:58.730
前半句话其实都一样

39:58.730 --> 39:59.730
最重要在哪里呢

39:59.730 --> 40:01.730
就是只有当全部的维度

40:01.730 --> 40:03.730
在数据窗口同侧外部

40:03.730 --> 40:04.730
整个数据像

40:04.730 --> 40:06.730
才会被过滤掉

40:06.730 --> 40:07.730
什么意思呢

40:07.730 --> 40:09.730
如果说你使用了

40:09.730 --> 40:11.730
使用了这个wakefilter的话

40:11.730 --> 40:14.730
那其实我们拿这个例子来说

40:14.730 --> 40:16.730
我们拿这个例子

40:18.730 --> 40:19.730
我的这个气泡

40:19.730 --> 40:20.730
对不对

40:20.730 --> 40:22.730
那再往右边走的时候呢

40:22.730 --> 40:23.730
没了是吧

40:23.730 --> 40:24.730
但是

40:24.730 --> 40:26.730
你的只给的是wakefilter的话

40:26.730 --> 40:27.730
那其实呢

40:27.730 --> 40:28.730
他并不会说

40:28.730 --> 40:30.730
把这条数据给我删掉

40:30.730 --> 40:31.730
这条数据给我删掉

40:31.730 --> 40:32.730
为啥呢

40:32.730 --> 40:35.730
因为wakefilter比较严谨

40:35.730 --> 40:37.730
他必须是三个维度呢

40:37.730 --> 40:39.730
同时都在窗口外了

40:39.730 --> 40:41.730
你才能把我删掉

40:41.730 --> 40:42.730
那现在呢

40:42.730 --> 40:44.730
他仅仅是x

40:44.730 --> 40:45.730
不是x的

40:45.730 --> 40:46.730
第一个维度

40:46.730 --> 40:47.730
第一个维度

40:47.730 --> 40:48.730
第零个维度啊

40:48.730 --> 40:50.730
第零个维度

40:50.730 --> 40:53.730
他是不是在2跟50之间

40:53.730 --> 40:54.730
外边

40:54.730 --> 40:56.730
是不是超出这个范围了

40:56.730 --> 40:58.730
那他只有他超出范围了

40:58.730 --> 40:59.730
这两个东西呢

40:59.730 --> 41:01.730
他都没有超出范围

41:01.730 --> 41:02.730
我们说了这个外走

41:02.730 --> 41:04.730
他永远是在范围之内的

41:04.730 --> 41:05.730
所以说呢

41:05.730 --> 41:06.730
这条数据呢

41:06.730 --> 41:07.730
就不会被过滤掉

41:07.730 --> 41:10.730
也就不会被删掉

41:10.730 --> 41:11.730
不会被删掉

41:11.730 --> 41:12.730
明白吧

41:12.730 --> 41:13.730
这个呢就是wakefilter

41:13.730 --> 41:14.730
他的一个作用啊

41:14.730 --> 41:15.730
跟他去比的话

41:15.730 --> 41:16.730
他比较严谨

41:16.730 --> 41:17.730
比较严谨

41:17.730 --> 41:19.730
然后要求的比较高

41:19.730 --> 41:20.730
同时所有的维度

41:20.730 --> 41:21.730
全部的维度啊

41:21.730 --> 41:22.730
即使你的xy

41:22.730 --> 41:24.730
维度在范围外了

41:24.730 --> 41:25.730
你的这个

41:25.730 --> 41:26.730
第三个维度

41:26.730 --> 41:27.730
第三个维度呢

41:27.730 --> 41:28.730
是一个半径

41:28.730 --> 41:29.730
这个半径啊

41:29.730 --> 41:30.730
当然咱这个数据当中呢

41:30.730 --> 41:32.730
并没有去展示这个半径

41:32.730 --> 41:33.730
我们这个图表当中呢

41:33.730 --> 41:35.730
仅仅是展示了xy

41:35.730 --> 41:36.730
所以说呢

41:36.730 --> 41:39.730
当我的xy都在范围外

41:39.730 --> 41:41.730
那就会被过滤掉了

41:41.730 --> 41:42.730
好

41:42.730 --> 41:45.730
这个呢就是wakefilter啊

41:45.730 --> 41:46.730
然后第三个呢

41:46.730 --> 41:48.730
就是amperty

41:48.730 --> 41:49.730
amperty

41:49.730 --> 41:50.730
这个东西呢就是

41:50.730 --> 41:51.730
当前数据

41:51.730 --> 41:52.730
外的数据呢

41:52.730 --> 41:54.730
他呢不会被过滤掉

41:54.730 --> 41:56.730
他会被设置为空

41:56.730 --> 41:57.730
他不会影响

41:57.730 --> 41:59.730
其他轴的数据范围

41:59.730 --> 42:00.730
那这个怎么去理解呢

42:00.730 --> 42:01.730
是这样的

42:01.730 --> 42:02.730
我们还拿任意官网的

42:02.730 --> 42:04.730
这个例子啊

42:04.730 --> 42:05.730
当你的这个值呢

42:05.730 --> 42:06.730
是一个啊

42:06.730 --> 42:07.730
什么amperty

42:07.730 --> 42:08.730
amperty

42:08.730 --> 42:09.730
对吧

42:09.730 --> 42:10.730
那好

42:10.730 --> 42:11.730
来注意啊

42:11.730 --> 42:12.730
然后还在走

42:12.730 --> 42:13.730
是不是

42:13.730 --> 42:15.730
还以这个走x的值

42:15.730 --> 42:16.730
做x值的时候呢

42:16.730 --> 42:17.730
然后走走走

42:17.730 --> 42:18.730
走到多少

42:18.730 --> 42:19.730
走到这个2到50了

42:19.730 --> 42:20.730
然后呢

42:20.730 --> 42:21.730
下来他会发现

42:21.730 --> 42:23.730
这个第2个啊

42:23.730 --> 42:24.730
第什么呢

42:24.730 --> 42:25.730
这一列

42:25.730 --> 42:26.730
第一列

42:26.730 --> 42:28.730
下标唯一的这一列

42:28.730 --> 42:29.730
以及最后的这一列

42:29.730 --> 42:31.730
他们是不是不在这个范围了

42:31.730 --> 42:32.730
不在这个范围了

42:32.730 --> 42:33.730
是不是

42:33.730 --> 42:34.730
好

42:34.730 --> 42:36.730
不在这个范围之后怎么办

42:36.730 --> 42:38.730
人家在这用了一个外轴是吧

42:38.730 --> 42:39.730
那好吧

42:39.730 --> 42:42.170
咱们就用这个外轴行吗

42:42.170 --> 42:43.170
那现在呢

42:43.170 --> 42:44.170
咱们拖动的是

42:44.170 --> 42:45.170
外轴

42:45.170 --> 42:47.170
我拖动的并不是z轴

42:47.170 --> 42:48.170
然后呢

42:48.170 --> 42:49.170
把外轴

42:49.170 --> 42:51.170
他的一个坐标轴当中的数据的范围

42:51.170 --> 42:53.170
设置成10到60了

42:53.170 --> 42:54.170
10到60之后呢

42:54.170 --> 42:56.170
那他就会去循环

42:56.170 --> 42:57.170
哪个系列啊

42:57.170 --> 42:59.170
不是哪个维度啊

42:59.170 --> 43:00.170
第一个维度

43:00.170 --> 43:02.170
下标唯一的那个维度

43:02.170 --> 43:03.170
是不是

43:03.170 --> 43:04.170
这个维度啊

43:04.170 --> 43:05.170
这个维度

43:05.170 --> 43:06.170
然后这个维度

43:06.170 --> 43:08.170
发现这个24

43:08.170 --> 43:10.170
他是满足这个范围的

43:10.170 --> 43:11.170
但是呢

43:11.170 --> 43:12.170
80

43:12.170 --> 43:14.170
是不是就不满足这个范围了

43:14.170 --> 43:15.170
怎么办呢

43:15.170 --> 43:16.170
把80

43:16.170 --> 43:18.170
设置成NAN

43:18.170 --> 43:20.610
然后

43:20.610 --> 43:22.610
这条数据仍然在

43:22.610 --> 43:24.610
这个呢就是

43:24.610 --> 43:26.610
amperty

43:26.610 --> 43:28.610
微空

43:28.610 --> 43:29.610
那他呢

43:29.610 --> 43:31.610
也是一种过滤的方式

43:31.610 --> 43:32.610
那可以看出来

43:32.610 --> 43:34.610
我们使用amperty的时候呢

43:34.610 --> 43:35.610
其实我们的数据的

43:35.610 --> 43:37.610
lens的值是不会变的

43:37.610 --> 43:39.610
只不过这儿是一个NAN

43:39.610 --> 43:40.610
但是其他轴的

43:40.610 --> 43:41.610
这个数据呢

43:41.610 --> 43:43.610
他是仍然在的

43:43.610 --> 43:44.610
仍然在

43:44.610 --> 43:45.610
明白吗

43:45.610 --> 43:46.610
好

43:46.610 --> 43:47.610
这个东西呢

43:47.610 --> 43:48.610
他其实是

43:48.610 --> 43:49.610
我们场景的

43:49.610 --> 43:50.610
就是这个场景

43:51.610 --> 43:52.610
来

43:52.610 --> 43:53.610
大家想一想

43:53.610 --> 43:54.610
想一想

43:54.610 --> 43:55.610
假设说

43:55.610 --> 43:57.610
现在我去拖动这个外轴

43:57.610 --> 43:58.610
那

43:58.610 --> 43:59.610
这是一个注壮图

43:59.610 --> 44:00.610
是不是

44:00.610 --> 44:01.610
那注壮图

44:01.610 --> 44:02.610
当我去拖动这个外轴

44:02.610 --> 44:04.610
比如说拖到这个地方

44:04.610 --> 44:05.610
当然人家没这个功能

44:05.610 --> 44:06.610
咱们只是在这儿想

44:06.610 --> 44:08.610
如果说拖到这个地方

44:08.610 --> 44:09.610
那会发现他是不是

44:09.610 --> 44:10.610
这条是不是

44:10.610 --> 44:11.610
已经超出范围了

44:11.610 --> 44:12.610
对不对

44:12.610 --> 44:13.610
超出范围了

44:13.610 --> 44:14.610
那这个东西呢

44:14.610 --> 44:15.610
他按道理

44:15.610 --> 44:16.610
应该是不显示的

44:16.610 --> 44:17.610
那人家x轴

44:17.610 --> 44:18.610
都

44:18.610 --> 44:19.610
有没有变

44:19.610 --> 44:20.610
没有变吧

44:20.610 --> 44:21.610
所以说x轴的数据

44:21.610 --> 44:23.610
他仍然是在的

44:23.610 --> 44:24.610
那整条数据

44:24.610 --> 44:26.610
他是不会被删掉的

44:26.610 --> 44:27.610
不会被删掉

44:27.610 --> 44:28.610
其实也就表示

44:28.610 --> 44:30.610
现在还有站位

44:30.610 --> 44:32.610
只是不显示出来了

44:32.610 --> 44:33.610
不显示出来了

44:33.610 --> 44:34.610
明白吧

44:34.610 --> 44:35.610
好

44:35.610 --> 44:36.610
这个呢就是第三个

44:36.610 --> 44:37.610
amplity

44:37.610 --> 44:38.610
然后

44:38.610 --> 44:39.610
那你看

44:39.610 --> 44:40.610
设置为空

44:40.610 --> 44:41.610
是不是

44:41.610 --> 44:42.610
就是设置成一个n

44:42.610 --> 44:43.610
他不会影响

44:43.610 --> 44:44.610
其他轴的数据范围

44:44.610 --> 44:45.610
是吧

44:45.610 --> 44:46.610
因为其他轴的数据

44:46.610 --> 44:47.610
其他系列的数据

44:47.610 --> 44:48.610
现在呢

44:48.610 --> 44:49.610
什么呀

44:49.610 --> 44:50.610
还在

44:50.610 --> 44:51.610
还在

44:51.610 --> 44:52.610
然后并不会被删掉

44:52.610 --> 44:53.610
整条数据

44:53.610 --> 44:54.610
不会被删掉

44:55.610 --> 44:56.610
然后呢

44:56.610 --> 44:57.610
继续往下

44:57.610 --> 44:58.610
这个amplity

44:58.610 --> 44:59.610
是不是就过了

44:59.610 --> 45:00.610
然后最后一个

45:00.610 --> 45:01.610
就是一个难了

45:01.610 --> 45:02.610
难了

45:02.610 --> 45:03.610
他表示就是不过滤数据

45:03.610 --> 45:04.610
他只改变

45:04.610 --> 45:06.610
这个数轴的一个范围

45:06.610 --> 45:07.610
那这个呢

45:07.610 --> 45:08.610
其实就是跟上面

45:08.610 --> 45:09.610
这个咱一理解就知道

45:09.610 --> 45:10.610
他就是压根

45:10.610 --> 45:11.610
就不过滤这个数据

45:11.610 --> 45:12.610
就不动

45:12.610 --> 45:13.610
数据

45:13.610 --> 45:14.610
没有任何的变化

45:14.610 --> 45:15.610
那这句话

45:15.610 --> 45:16.610
其实

45:16.610 --> 45:17.610
其实一般情况下

45:17.610 --> 45:18.610
用不着

45:18.610 --> 45:19.610
用不着

45:19.610 --> 45:20.610
然后呢

45:20.610 --> 45:21.610
接着往下

45:21.610 --> 45:22.610
那好

45:22.610 --> 45:23.610
那这几种过滤的形式

45:23.610 --> 45:24.610
是不是

45:24.610 --> 45:25.610
那我们到底

45:25.610 --> 45:26.610
该如何去选择呢

45:26.610 --> 45:27.610
咱们应该使用

45:27.610 --> 45:29.610
哪种过滤形式呢

45:29.610 --> 45:30.610
其实官方

45:30.610 --> 45:32.610
给出了咱们的一些建议

45:32.610 --> 45:33.610
也就是说

45:33.610 --> 45:34.610
从经验来讲

45:34.610 --> 45:35.610
他总共分为了

45:35.610 --> 45:36.610
两条

45:36.610 --> 45:37.610
在这也要解释一下

45:37.610 --> 45:38.610
第一条

45:38.610 --> 45:39.610
就是说

45:39.610 --> 45:40.610
只有x轴

45:40.610 --> 45:41.610
或者说只有外轴

45:41.610 --> 45:42.610
受data zoom的控制

45:42.610 --> 45:43.610
什么意思呢

45:43.610 --> 45:44.610
就是说

45:44.610 --> 45:45.610
我们现在

45:45.610 --> 45:46.610
这个图表当中呢

45:46.610 --> 45:47.610
只有一个

45:47.610 --> 45:48.610
只有一个

45:48.610 --> 45:50.610
比如说只控制这个外轴

45:50.610 --> 45:51.610
那没有x轴的

45:51.610 --> 45:52.610
对应的这个

45:52.610 --> 45:54.610
缩放组件

45:54.610 --> 45:55.610
或者说只有x轴

45:55.610 --> 45:56.610
没有外轴

45:56.610 --> 45:57.610
也就是

45:57.610 --> 45:58.610
他俩认选其一

45:58.610 --> 45:59.610
那这个时候呢

45:59.610 --> 46:00.610
我们会使用这个

46:00.610 --> 46:01.610
fuelter

46:01.610 --> 46:03.610
mode只为fuelter

46:03.610 --> 46:04.610
这样的话

46:04.610 --> 46:05.610
其实也就是说

46:05.610 --> 46:06.610
当我们过滤了

46:06.610 --> 46:07.610
当我们一条轴的数据

46:07.610 --> 46:08.610
逃出范围了

46:08.610 --> 46:09.610
那直接把所有的数据

46:09.610 --> 46:10.610
全部干掉

46:10.610 --> 46:12.610
另外一条轴呢

46:12.610 --> 46:13.610
他也能够自动的

46:13.610 --> 46:15.610
适应过滤后的一个范围

46:15.610 --> 46:16.610
是吧

46:16.610 --> 46:17.610
那条数据也没了

46:17.610 --> 46:19.610
就压根就不显示了

46:19.610 --> 46:20.610
这是第一种情况

46:20.610 --> 46:21.610
然后第二种情况呢

46:21.610 --> 46:22.610
就是说

46:22.610 --> 46:23.610
x

46:23.610 --> 46:24.610
x轴跟外轴呢

46:24.610 --> 46:25.610
他们都有

46:25.610 --> 46:26.610
都有

46:26.610 --> 46:27.610
都要受到这个data zoom的控制

46:27.610 --> 46:28.610
也就是说

46:28.610 --> 46:30.610
现在您有两个data zoom的组件

46:30.610 --> 46:31.610
是吧

46:31.610 --> 46:32.610
那这块

46:32.610 --> 46:34.610
也是分两种形式

46:34.610 --> 46:35.610
分两种形式

46:35.610 --> 46:36.610
第一种形式呢

46:36.610 --> 46:37.610
就是说

46:37.610 --> 46:39.610
如果这个x跟y呢

46:39.610 --> 46:40.610
他们其实是

46:40.610 --> 46:41.610
不应该相互影响

46:41.610 --> 46:42.610
同等地位

46:42.610 --> 46:43.610
那啥意思呢

46:43.610 --> 46:44.610
其实也就说

46:44.610 --> 46:45.610
就是我们的这种情况

46:45.610 --> 46:46.610
你看

46:46.610 --> 46:47.610
你走你的

46:47.610 --> 46:48.610
跟我没关系

46:48.610 --> 46:49.610
我走我的

46:49.610 --> 46:50.610
跟你也没关系

46:50.610 --> 46:51.610
明白吧

46:51.610 --> 46:52.610
好

46:52.610 --> 46:53.610
没有关系的时候呢

46:53.610 --> 46:54.610
其实啊

46:54.610 --> 46:55.610
这个时候呢

46:55.610 --> 46:56.610
我们要选择使用的是吗

46:56.610 --> 46:57.610
是一个imperty

46:57.610 --> 46:58.610
为什么呢

46:58.610 --> 46:59.610
因为你看

46:59.610 --> 47:00.610
他俩没有关系

47:00.610 --> 47:01.610
你不能说

47:01.610 --> 47:02.610
因为你走了

47:02.610 --> 47:03.610
你的数据

47:03.610 --> 47:04.610
超出范围了

47:04.610 --> 47:05.610
你把我x

47:05.610 --> 47:06.610
你把整条数据

47:06.610 --> 47:07.610
删掉了

47:07.610 --> 47:08.610
你删掉之后呢

47:08.610 --> 47:09.610
那我x走

47:09.610 --> 47:10.610
是不是就没有了

47:10.610 --> 47:11.610
是不是

47:11.610 --> 47:12.610
他不应该

47:12.610 --> 47:13.610
对不对

47:13.610 --> 47:14.610
所以说呢

47:14.610 --> 47:15.610
你只能把你自己

47:15.610 --> 47:16.610
置为一个

47:16.610 --> 47:17.610
n an

47:17.610 --> 47:18.610
我的数据呢

47:18.610 --> 47:19.610
我仍然还要

47:20.610 --> 47:21.610
还要

47:21.610 --> 47:22.610
好

47:22.610 --> 47:23.610
这是这种情况

47:23.610 --> 47:24.610
然后另外一种情况

47:24.610 --> 47:25.610
就是说

47:25.610 --> 47:26.610
有一种情况就是

47:26.610 --> 47:27.610
x周围主

47:27.610 --> 47:28.610
外周围府

47:28.610 --> 47:29.610
那其实说的

47:29.610 --> 47:30.610
就是什么

47:30.610 --> 47:31.610
咱们这种情况

47:32.610 --> 47:33.610
这种情况

47:33.610 --> 47:34.610
这种情况呢

47:34.610 --> 47:35.610
其实啊

47:35.610 --> 47:36.610
就是目前人家的

47:36.610 --> 47:37.610
这个例子当中呢

47:37.610 --> 47:38.610
他其实对于

47:38.610 --> 47:39.610
外周并没有给一个

47:39.610 --> 47:40.610
这个缩放的一个组建

47:40.610 --> 47:41.610
并没有给啊

47:41.610 --> 47:42.610
如果给的话

47:42.610 --> 47:43.610
其实就是这种情况

47:43.610 --> 47:44.610
啥意思呢

47:44.610 --> 47:45.610
就是我们现在呢

47:45.610 --> 47:47.610
其实主要展示的是

47:47.610 --> 47:48.610
x周的数据

47:49.610 --> 47:50.610
换句话说

47:50.610 --> 47:51.610
你的这个外周

47:51.610 --> 47:53.610
再去拖动的生活呢

47:53.610 --> 47:55.610
你对于我x周的数据呢

47:55.610 --> 47:56.610
不会产生影响

47:57.610 --> 47:59.610
不会产生影响

47:59.610 --> 48:00.610
懂吗

48:00.610 --> 48:01.610
我x周的数据呢

48:01.610 --> 48:02.610
他仍然在

48:03.610 --> 48:04.610
仍然在啊

48:04.610 --> 48:05.610
那这个呢

48:05.610 --> 48:06.610
其实就是一个什么呢

48:06.610 --> 48:07.610
x周围主

48:07.610 --> 48:08.610
然后呢

48:08.610 --> 48:10.610
外周围辅

48:10.610 --> 48:11.610
外周围辅

48:11.610 --> 48:12.610
你看人家这

48:12.610 --> 48:13.610
其实说的也是他啊

48:13.610 --> 48:15.610
我们拖动x周的时候呢

48:15.610 --> 48:17.610
要过滤这个柱子

48:17.610 --> 48:18.610
是不是你看

48:18.610 --> 48:19.610
往左边走左右走的话

48:19.610 --> 48:21.610
柱子是不是被过滤了呀

48:21.610 --> 48:22.610
然后你看拖动

48:22.610 --> 48:23.610
外周的时候呢

48:23.610 --> 48:24.610
其实是改变他的高度

48:24.610 --> 48:25.610
是吧

48:25.610 --> 48:26.610
改变他的一个高度

48:26.610 --> 48:27.610
然后他呢

48:27.610 --> 48:29.610
其实是不用去过滤的

48:29.610 --> 48:31.610
不用去过滤的

48:31.610 --> 48:32.610
所以这个时候呢

48:32.610 --> 48:33.610
就是啊

48:33.610 --> 48:34.610
我们可以啊

48:34.610 --> 48:37.610
把x周设定为filter

48:37.610 --> 48:38.610
也就是说

48:38.610 --> 48:39.610
你外周肯定要

48:39.610 --> 48:41.610
根据我x周的变化

48:41.610 --> 48:42.610
进行一个过滤

48:43.610 --> 48:45.610
那不在我外周范围之内的

48:45.610 --> 48:46.610
通通干掉

48:46.610 --> 48:48.610
不在我x周的数据的

48:48.610 --> 48:49.610
通通干掉

48:50.610 --> 48:51.610
外周要不要干掉

48:51.610 --> 48:53.610
肯定也要干掉啊

48:53.610 --> 48:54.610
那外周呢

48:54.610 --> 48:56.610
就设置成一个amplity

48:56.610 --> 48:58.610
你再去拖动外周的时候呢

48:58.610 --> 49:00.610
我的x周要显示

49:00.610 --> 49:02.610
你不能把数据给我干掉

49:03.610 --> 49:04.610
你只能把自己

49:04.610 --> 49:06.610
设置成一个amplity

49:06.610 --> 49:08.610
设置成一个空

49:08.610 --> 49:09.610
就懂了吧

49:09.610 --> 49:11.610
这个能理解吧

49:11.610 --> 49:14.610
这个地方可能收有些照啊

49:14.610 --> 49:15.610
好

49:15.610 --> 49:16.610
但是是吧

49:16.610 --> 49:17.610
但说话

49:17.610 --> 49:19.610
就怕说但是

49:19.610 --> 49:21.610
但是在这还要去说啊

49:21.610 --> 49:22.610
就是大多数的时候呢

49:22.610 --> 49:25.610
其实咱们没有考虑这么细致

49:25.610 --> 49:27.610
直接就是走人家默认的

49:27.610 --> 49:28.610
默认的是什么呢

49:28.610 --> 49:29.610
就是一个filter

49:29.610 --> 49:32.610
就遇到跟他匹配的情况

49:32.610 --> 49:35.610
非常跟他的所说的这种情况

49:35.610 --> 49:36.610
跟他匹配的时候呢

49:36.610 --> 49:37.610
咱们才会去考虑

49:37.610 --> 49:40.610
到底是x周使用这个filter呢

49:40.610 --> 49:43.610
还是这个外周使用这个amplity

49:43.610 --> 49:44.610
所以这些东西呢

49:44.610 --> 49:46.610
需要根据我们具体的场景呢

49:46.610 --> 49:49.610
到时候具体再去选择性的应用

49:49.610 --> 49:50.610
行吧

49:50.610 --> 49:51.610
好

49:51.610 --> 49:52.610
那这块呢

49:52.610 --> 49:53.610
就是关于这个什么呢

49:53.610 --> 49:54.610
这个组件

49:54.610 --> 49:56.610
对于数据的过滤的

49:56.610 --> 49:57.610
这四种模式

49:57.610 --> 49:59.610
咱们详细的去解释了一下

49:59.610 --> 50:01.610
详细的解释了一下

50:01.610 --> 50:02.610
然后呢

50:02.610 --> 50:03.610
刚才说过啊

50:03.610 --> 50:05.610
这是数据的过滤模式

50:05.610 --> 50:07.610
然后接下来咱们要说的是一个

50:07.610 --> 50:09.610
数据窗口的一个范围

50:09.610 --> 50:11.610
数据窗口的一个范围

50:11.610 --> 50:12.610
那数据窗口这个范围呢

50:12.610 --> 50:14.610
其实我们也是可以进行一个设置的

50:14.610 --> 50:16.610
通过什么去设置呢

50:16.610 --> 50:18.610
其实就是通过这四个参数

50:18.610 --> 50:19.610
12啊

50:19.610 --> 50:20.610
当然不是4个

50:20.610 --> 50:23.610
12345678

50:23.610 --> 50:24.610
然后从这个start

50:24.610 --> 50:25.610
到哪里呢

50:25.610 --> 50:26.610
到这儿

50:26.610 --> 50:27.610
这几个参数呢

50:27.610 --> 50:29.610
是用来设置窗口

50:29.610 --> 50:31.610
他的一个范围的

50:32.610 --> 50:33.610
那这个窗口的范围呢

50:33.610 --> 50:34.610
是这样的

50:34.610 --> 50:35.610
咱们来演示一下啊

50:35.610 --> 50:36.610
第一个呢

50:36.610 --> 50:37.610
就是start

50:37.610 --> 50:39.610
他其实是有两种形式

50:39.610 --> 50:40.610
这个窗口的范围

50:40.610 --> 50:41.610
首先大家要理解

50:41.610 --> 50:42.610
其实就是说

50:42.610 --> 50:43.610
某一条轴

50:43.610 --> 50:44.610
当中呢

50:44.610 --> 50:46.610
数据的一个能够展示的一个区间

50:46.610 --> 50:47.610
这个呢

50:47.610 --> 50:49.610
就是窗口的一个范围

50:49.610 --> 50:50.610
那start呢

50:50.610 --> 50:52.610
对应的就是起始的一个值

50:52.610 --> 50:53.610
然后呢

50:53.610 --> 50:55.610
对应的就是一个结束的值

50:55.610 --> 50:56.610
这个start

50:56.610 --> 50:57.610
也是起始的值

50:57.610 --> 50:58.610
end

50:58.610 --> 50:59.610
也是一个结束的值

50:59.610 --> 51:00.610
只不过他们

51:00.610 --> 51:01.610
两种形式呢

51:01.610 --> 51:03.610
用的是具体的数值

51:03.610 --> 51:04.610
然后这两个呢

51:04.610 --> 51:05.610
给的是一个具体的百分

51:05.610 --> 51:06.610
不是

51:06.610 --> 51:07.610
他给的是一个百分比

51:07.610 --> 51:08.610
所以说呢

51:08.610 --> 51:10.610
这个数据窗口的设置呢

51:10.610 --> 51:12.610
其实是有两种形式

51:12.610 --> 51:14.610
一种呢就是百分比的形式

51:14.610 --> 51:16.610
一种呢就是具体数值的形式

51:16.610 --> 51:17.610
那么

51:17.610 --> 51:18.610
百分比的话

51:18.610 --> 51:19.610
我们通过start

51:19.610 --> 51:20.610
跟end

51:20.610 --> 51:21.610
就能够设置

51:21.610 --> 51:22.610
那你比如说

51:22.610 --> 51:23.610
在这儿呢

51:23.610 --> 51:24.610
我们给上x

51:26.610 --> 51:27.610
给上一个

51:27.610 --> 51:28.610
比如说10%

51:28.610 --> 51:29.610
那就给上一个10%

51:29.610 --> 51:30.610
给上一个10

51:30.610 --> 51:31.610
end

51:31.610 --> 51:32.610
给上一个50%

51:32.610 --> 51:33.610
那就给上一个50%

51:33.610 --> 51:34.610
再来看一下

51:34.610 --> 51:36.610
看一下第八个

51:36.610 --> 51:37.610
来刷新一下

51:37.610 --> 51:38.610
刷新一下

51:38.610 --> 51:39.610
好

51:39.610 --> 51:40.610
我们来看x

51:40.610 --> 51:41.610
因为咱们这儿

51:41.610 --> 51:42.610
是不是设置对应的是x

51:42.610 --> 51:43.610
那来看一下

51:43.610 --> 51:44.610
从1.5

51:44.610 --> 51:45.610
到7.498

51:45.610 --> 51:46.610
是不是

51:46.610 --> 51:47.610
那比如说

51:47.610 --> 51:48.610
我在这儿

51:48.610 --> 51:49.610
给上一个30%

51:49.610 --> 51:50.610
那我们来看一下

51:50.610 --> 51:51.610
刷新

51:51.610 --> 51:52.610
有没有发现

51:52.610 --> 51:54.610
这个起始的值就变了

51:54.610 --> 51:55.610
变了

51:55.610 --> 51:56.610
是不是从30%

51:56.610 --> 51:57.610
到多少

51:57.610 --> 51:58.610
50%

51:58.610 --> 51:59.610
看到没有

51:59.610 --> 52:00.610
这个就是一个起始值

52:00.610 --> 52:02.610
这是一个结束的值

52:02.610 --> 52:03.610
然后接着

52:03.610 --> 52:05.610
接着就是start value

52:05.610 --> 52:06.610
start value

52:06.610 --> 52:09.610
它其实就是一个具体的数值

52:09.610 --> 52:10.610
但是

52:10.610 --> 52:12.610
当我们去使用

52:12.610 --> 52:13.610
使用了start

52:13.610 --> 52:14.610
跟end的时候

52:14.610 --> 52:15.610
你给start value

52:15.610 --> 52:16.610
其实是不起作用的

52:16.610 --> 52:17.610
所以在这儿

52:17.610 --> 52:18.610
先把它注释掉

52:18.610 --> 52:19.610
你比如说

52:19.610 --> 52:20.610
在这儿

52:20.610 --> 52:21.610
我们给上一个2

52:21.610 --> 52:22.610
好

52:22.610 --> 52:23.610
然后end

52:24.610 --> 52:25.610
value

52:25.610 --> 52:26.610
给上一个5

52:26.610 --> 52:27.610
那来看一下

52:27.610 --> 52:28.610
2跟5

52:28.610 --> 52:29.610
刷新一下

52:29.610 --> 52:30.610
看到没有

52:30.610 --> 52:31.610
这是不是就是一个2

52:31.610 --> 52:32.610
这是5

52:32.610 --> 52:33.610
那其实也就是说

52:33.610 --> 52:34.610
我的窗口

52:34.610 --> 52:35.610
现在展示的一个范围

52:35.610 --> 52:36.610
就是数据

52:36.610 --> 52:37.610
从2开始

52:37.610 --> 52:39.610
到5的这么一个范围

52:39.610 --> 52:41.610
满足这个范围数据的

52:41.610 --> 52:42.610
满足这个范围的

52:42.610 --> 52:43.610
这些数据

52:43.610 --> 52:44.610
他们都展示出来

52:44.610 --> 52:45.610
剩下的那些

52:45.610 --> 52:47.610
就过滤掉

52:47.610 --> 52:48.610
过滤掉

52:48.610 --> 52:49.610
懂吗

52:49.610 --> 52:50.610
然后

52:50.610 --> 52:51.610
还有就是

52:51.610 --> 52:52.610
这个

52:52.610 --> 52:53.610
这个东西

52:53.610 --> 52:54.610
这四个

52:54.610 --> 52:56.610
它是用来设置

52:56.610 --> 52:57.610
限制窗口的

52:57.610 --> 52:58.610
最大值跟最小值的

52:58.610 --> 52:59.610
其实没什么卵用

52:59.610 --> 53:00.610
咱们就不说了

53:00.610 --> 53:01.610
然后

53:01.610 --> 53:02.610
说一下

53:02.610 --> 53:03.610
还有另外一个东西

53:03.610 --> 53:04.610
是这个

53:04.610 --> 53:05.610
就是这个

53:05.610 --> 53:06.610
这个东西

53:06.610 --> 53:08.610
其实也是有一些积累

53:08.610 --> 53:09.610
其实有的时候

53:09.610 --> 53:10.610
这个一刹

53:10.610 --> 53:12.610
搞得有点复杂了

53:12.610 --> 53:13.610
想的太细了

53:13.610 --> 53:14.610
它什么意思

53:14.610 --> 53:15.610
它就是说

53:15.610 --> 53:17.610
它能够来决定这个start

53:17.610 --> 53:18.610
跟end

53:18.610 --> 53:19.610
到底是取绝对值

53:19.610 --> 53:21.610
还是取这个百分比

53:21.610 --> 53:22.610
你看吗

53:22.610 --> 53:23.610
就是这种

53:23.610 --> 53:25.610
当我们给上一个value的时候

53:25.610 --> 53:26.610
就表示

53:26.610 --> 53:27.610
现在

53:27.610 --> 53:28.610
它俩取的值是什么

53:28.610 --> 53:30.610
start取的是一个数值

53:30.610 --> 53:31.610
然后

53:31.610 --> 53:33.610
end取的是一个百分比

53:33.610 --> 53:34.610
百分比

53:34.610 --> 53:35.610
那么

53:35.610 --> 53:36.610
这个东西

53:36.610 --> 53:37.610
其实没啥

53:37.610 --> 53:39.610
也没啥太大的作用

53:39.610 --> 53:40.610
好

53:40.610 --> 53:41.610
咱知道有这么一个东西

53:41.610 --> 53:42.610
就行了

53:42.610 --> 53:43.610
行吧

53:43.610 --> 53:44.610
然后

53:44.610 --> 53:45.610
再来就是这个

53:45.610 --> 53:46.610
orant

53:46.610 --> 53:48.610
那这个orant

53:48.610 --> 53:49.610
是这样的

53:49.610 --> 53:50.610
就是这条属性

53:50.610 --> 53:51.610
它其实

53:51.610 --> 53:52.610
是用来决定

53:52.610 --> 53:53.610
这个布局的方式

53:53.610 --> 53:54.610
是横着布局

53:54.610 --> 53:55.610
可能在这呢

53:55.610 --> 53:56.610
有一些懵

53:56.610 --> 53:58.610
对于这种图表

53:58.610 --> 53:59.610
横着布局

53:59.610 --> 54:00.610
跟树着布局

54:00.610 --> 54:01.610
有什么区别吗

54:01.610 --> 54:02.610
那

54:02.610 --> 54:03.610
可能

54:03.610 --> 54:04.610
如果说

54:04.610 --> 54:05.610
大家自己去看的话

54:05.610 --> 54:06.610
你在这比如说

54:06.610 --> 54:07.610
我来上一个orant

54:07.610 --> 54:08.610
然后这个值

54:08.610 --> 54:09.610
横着

54:09.610 --> 54:10.610
是吧

54:10.610 --> 54:11.610
默认的话

54:11.610 --> 54:12.610
我们就横着横的话

54:12.610 --> 54:13.610
给上这个值

54:13.610 --> 54:14.610
然后在这里

54:14.610 --> 54:15.610
来刷新一下

54:15.610 --> 54:17.610
刷新一下之后

54:17.610 --> 54:18.610
好像没有看出来

54:18.610 --> 54:20.610
任何的区别

54:20.610 --> 54:21.610
没有变化

54:21.610 --> 54:22.610
是不是

54:22.610 --> 54:23.610
确实没有变化

54:23.610 --> 54:24.610
那

54:24.610 --> 54:25.610
再来

54:25.610 --> 54:27.610
我给上一个vertical

54:27.610 --> 54:28.610
vertical的话

54:28.610 --> 54:29.610
它是不是就变成一个

54:29.610 --> 54:30.610
树着布局了

54:30.610 --> 54:31.610
再来看刷新走

54:31.610 --> 54:34.610
帽子也没有变化

54:34.610 --> 54:35.610
所以这一块

54:35.610 --> 54:36.610
你就奇怪了

54:36.610 --> 54:37.610
你就纳了闷了

54:37.610 --> 54:38.610
这个东西到底啥意思

54:38.610 --> 54:39.610
是不是

54:39.610 --> 54:40.610
好

54:40.610 --> 54:41.610
那这条属性

54:41.610 --> 54:42.610
你想看到

54:42.610 --> 54:43.610
它的一个作用

54:43.610 --> 54:44.610
其实在我们的内置型的

54:44.610 --> 54:46.610
也就是type way inside的

54:46.610 --> 54:47.610
这个缩放组件当中

54:47.610 --> 54:48.610
是

54:48.610 --> 54:49.610
没法看到

54:49.610 --> 54:50.610
这个东西

54:50.610 --> 54:51.610
只

54:51.610 --> 54:52.610
在哪里

54:52.610 --> 54:53.610
这个slide当中

54:53.610 --> 54:54.610
你才能够看出来

54:54.610 --> 54:55.610
他们的一个效果

54:55.610 --> 54:56.610
这个

54:56.610 --> 54:58.610
咱们一会去说slide的时候

54:58.610 --> 54:59.610
再去讲

54:59.610 --> 55:00.610
行吧

55:00.610 --> 55:01.610
好

55:01.610 --> 55:02.610
继续往下

55:02.610 --> 55:03.610
咱们把剩余的一些东西

55:03.610 --> 55:04.610
说完

55:04.610 --> 55:06.610
然后这个zoom look

55:06.610 --> 55:07.610
这个东西

55:07.610 --> 55:09.610
它是决定

55:09.610 --> 55:11.610
现在是否要锁定

55:11.610 --> 55:12.610
选择区域

55:12.610 --> 55:13.610
它的一个缩放

55:13.610 --> 55:14.610
这个功能

55:14.610 --> 55:15.610
缩放这个功能

55:15.610 --> 55:16.610
也就是说

55:16.610 --> 55:17.610
现在

55:17.610 --> 55:18.610
如果你加上了

55:18.610 --> 55:19.610
这个东西之后

55:19.610 --> 55:20.610
加上这个东西之后

55:20.610 --> 55:21.610
它会是什么样的效果

55:21.610 --> 55:22.610
比如说

55:22.610 --> 55:23.610
我们给上一个处

55:24.610 --> 55:25.610
给上一个处

55:25.610 --> 55:26.610
给上一个处之后

55:26.610 --> 55:27.610
再来看

55:27.610 --> 55:28.610
刷新

55:28.610 --> 55:29.610
好

55:29.610 --> 55:30.610
缩放

55:30.610 --> 55:31.610
鼠标滚动

55:31.610 --> 55:32.610
然后平移

55:32.610 --> 55:33.610
也OK

55:33.610 --> 55:34.610
也没有

55:34.610 --> 55:35.610
没效果

55:35.610 --> 55:36.610
好

55:36.610 --> 55:37.610
其实是这样的

55:37.610 --> 55:38.610
因为我们使用的两条轴

55:38.610 --> 55:39.610
你需要两条轴

55:39.610 --> 55:40.610
同时的去控制

55:40.610 --> 55:41.610
再来看

55:41.610 --> 55:42.610
刷新一下

55:42.610 --> 55:43.610
然后这个时候

55:43.610 --> 55:44.610
你看

55:44.610 --> 55:45.610
我再去滚动

55:45.610 --> 55:46.610
鼠标滚轮的时候

55:46.610 --> 55:47.610
其实是没有作用的

55:47.610 --> 55:48.610
当然大家看不到

55:48.610 --> 55:49.610
是不是

55:49.610 --> 55:50.610
你们到时候

55:50.610 --> 55:51.610
你可以

55:51.610 --> 55:52.610
什么

55:52.610 --> 55:53.610
你可以平移

55:53.610 --> 55:54.610
你可以平移

55:54.610 --> 55:55.610
那么你就不能够滚动了

55:55.610 --> 55:56.610
也就是

55:56.610 --> 55:58.610
它禁止了你的缩放功能

55:58.610 --> 55:59.610
好吧

55:59.610 --> 56:00.610
这个

56:00.610 --> 56:01.610
我们给上一个 false

56:01.610 --> 56:02.610
给上一个 false

56:02.610 --> 56:03.610
就不要禁止

56:03.610 --> 56:04.610
缩放的功能了

56:04.610 --> 56:06.610
然后还有这个东西

56:06.610 --> 56:07.610
这个东西

56:07.610 --> 56:08.610
它是用来设置

56:08.610 --> 56:09.610
这个

56:09.610 --> 56:11.610
这个仕图

56:11.610 --> 56:13.610
然后它的一个刷新的频率的

56:13.610 --> 56:14.610
刷新的频率

56:14.610 --> 56:15.610
是这样的

56:15.610 --> 56:16.610
因为我们现在

56:16.610 --> 56:17.610
就是给的

56:17.610 --> 56:18.610
converse

56:18.610 --> 56:19.610
里边是不是

56:19.610 --> 56:20.610
来个点

56:20.610 --> 56:21.610
500个点相对来说

56:21.610 --> 56:22.610
可能会

56:22.610 --> 56:23.610
要占一些资源

56:23.610 --> 56:24.610
占一些资源

56:24.610 --> 56:25.610
然后

56:25.610 --> 56:26.610
当咱们在去拖动的时候

56:26.610 --> 56:27.610
拖动的时候

56:27.610 --> 56:28.610
你比如说拖动的时候

56:28.610 --> 56:29.610
其实

56:29.610 --> 56:30.610
你走一点

56:30.610 --> 56:31.610
只要有移动

56:31.610 --> 56:32.610
这个图表converse

56:32.610 --> 56:33.610
就需要干嘛

56:33.610 --> 56:34.610
重新汇一次

56:34.610 --> 56:36.610
重新画一遍

56:36.610 --> 56:37.610
懂吗

56:37.610 --> 56:38.610
所以这个时候

56:38.610 --> 56:40.610
就会出现一个性能的一个问题

56:40.610 --> 56:41.610
性能的问题

56:41.610 --> 56:42.610
如果说

56:42.610 --> 56:43.610
你哪次会发现

56:43.610 --> 56:44.610
你在拖的时候

56:44.610 --> 56:45.610
感觉很卡

56:45.610 --> 56:46.610
有卡顿

56:46.610 --> 56:48.610
那可能你的性能就不高了

56:48.610 --> 56:49.610
不高的话

56:49.610 --> 56:50.610
怎么办

56:50.610 --> 56:51.610
你就把这个值

56:51.610 --> 56:52.610
它是用来表示

56:52.610 --> 56:54.610
现在咱们刷新的这么一个频率的

56:54.610 --> 56:55.610
或者说你可以认为

56:55.610 --> 56:57.610
它就是一个汇制的一个频率

56:57.610 --> 56:58.610
是100毫秒

56:58.610 --> 56:59.610
你可以把这个值

56:59.610 --> 57:01.610
它默认就是一个100毫秒

57:01.610 --> 57:03.610
那么你可以把这个值

57:03.610 --> 57:04.610
设得高一点

57:04.610 --> 57:06.610
设得高一点

57:06.610 --> 57:07.610
懂吗

57:07.610 --> 57:08.610
然后人家你看

57:08.610 --> 57:09.610
在这有解释

57:09.610 --> 57:10.610
有解释

57:10.610 --> 57:11.610
大家看一下就行了

57:11.610 --> 57:12.610
这个东西

57:12.610 --> 57:13.610
其实

57:13.610 --> 57:15.610
没什么暖用

57:15.610 --> 57:17.610
可能我没用到

57:17.610 --> 57:19.610
大家到时候自己试一试

57:19.610 --> 57:20.610
行不行

57:20.610 --> 57:21.610
然后继续

57:21.610 --> 57:23.610
往下咱们把这几个说了

57:23.610 --> 57:24.610
这几个

57:24.610 --> 57:25.610
然后这几个

57:25.610 --> 57:27.610
其实就是用来

57:27.610 --> 57:29.610
设置我们现在这个平移

57:29.610 --> 57:30.610
滑动

57:30.610 --> 57:32.610
他们的一些交互的方式

57:32.610 --> 57:33.610
你比如说

57:33.610 --> 57:34.610
这个东西

57:34.610 --> 57:35.610
这个

57:35.610 --> 57:36.610
我把这条删掉了

57:36.610 --> 57:38.610
咱不给了

57:38.610 --> 57:39.610
这个东西

57:39.610 --> 57:40.610
我们来看一下

57:40.610 --> 57:42.610
如何触发缩放

57:42.610 --> 57:43.610
默认情况下

57:43.610 --> 57:44.610
其实就是一个处

57:44.610 --> 57:45.610
就表示你现在

57:45.610 --> 57:46.610
不需要按任何的功能键

57:46.610 --> 57:47.610
鼠标滚轮

57:47.610 --> 57:49.610
是不是就能够触发这个缩放

57:49.610 --> 57:50.610
那如果说你给上一个

57:50.610 --> 57:51.610
False的话就是滚轮

57:51.610 --> 57:53.610
他不能够进行触发缩放了

57:53.610 --> 57:54.610
一般不会给他

57:54.610 --> 57:55.610
我们一般可能会

57:55.610 --> 57:56.610
比如说

57:56.610 --> 57:57.610
我们给上一个Country

57:57.610 --> 57:58.610
Country键

57:58.610 --> 57:59.610
就表示

57:59.610 --> 58:00.610
现在你这个缩放

58:00.610 --> 58:01.610
你看

58:01.610 --> 58:02.610
来刷新一下

58:02.610 --> 58:03.610
这个缩放

58:03.610 --> 58:04.610
你只能

58:04.610 --> 58:05.610
你看我现在

58:05.610 --> 58:06.610
缩放的是不是外轴

58:06.610 --> 58:08.610
因为我的外轴

58:08.610 --> 58:10.610
现在并没有一个Country

58:10.610 --> 58:11.610
对吧

58:11.610 --> 58:13.610
那鼠标滚轮就能够缩放

58:13.610 --> 58:14.610
但是X轴

58:14.610 --> 58:15.610
现在这个

58:15.610 --> 58:17.610
组件当中我控制的是X轴

58:17.610 --> 58:19.610
那他需要按下Country键

58:19.610 --> 58:20.610
才能够缩放

58:20.610 --> 58:22.610
你看我按下Country键之后

58:22.610 --> 58:23.610
是不是就可以缩放了

58:23.610 --> 58:24.610
如果说不按的话

58:24.610 --> 58:26.610
就是他只能缩放上下缩放

58:26.610 --> 58:27.610
明白吧

58:27.610 --> 58:28.610
很简单

58:28.610 --> 58:29.610
Out还有Shift键

58:29.610 --> 58:31.610
就不再掩饰了

58:31.610 --> 58:32.610
然后继续就是这个

58:32.610 --> 58:33.610
如何触发

58:33.610 --> 58:35.610
这个数据窗口的一个评仪

58:35.610 --> 58:36.610
评仪是啥

58:36.610 --> 58:37.610
就是我们在这儿

58:37.610 --> 58:38.610
给上一个处

58:39.610 --> 58:40.610
评仪就是说

58:40.610 --> 58:41.610
现在你移动

58:41.610 --> 58:42.610
移动

58:42.610 --> 58:43.610
默认情况下

58:43.610 --> 58:44.610
也是一个处

58:44.610 --> 58:45.610
这个处

58:45.610 --> 58:46.610
就是表示你不用

58:46.610 --> 58:47.610
按任何的功能键

58:47.610 --> 58:48.610
你现在鼠标直接点着

58:48.610 --> 58:49.610
就去拖

58:49.610 --> 58:50.610
就OK了

58:50.610 --> 58:52.610
那如果说我把它变成一个Shift

58:52.610 --> 58:53.610
字

58:54.610 --> 58:55.610
那Shift的话

58:55.610 --> 58:56.610
那我们来看一下

58:56.610 --> 58:57.610
X轴

58:57.610 --> 58:58.610
X轴

58:58.610 --> 58:59.610
左右他就移不动了

58:59.610 --> 59:00.610
上下

59:00.610 --> 59:01.610
上下也移不动了

59:01.610 --> 59:03.610
那我就按下Shift

59:03.610 --> 59:04.610
好

59:04.610 --> 59:05.610
按下Shift

59:06.610 --> 59:12.290
为什么上下都

59:12.290 --> 59:14.290
上下都移动不了

59:14.290 --> 59:15.290
好

59:15.290 --> 59:16.290
无所谓了

59:19.620 --> 59:20.620
算了

59:20.620 --> 59:21.620
不用管他了

59:21.620 --> 59:22.620
咱们说这个

59:22.620 --> 59:23.620
你看

59:23.620 --> 59:24.620
现在Shift

59:24.620 --> 59:25.620
只有按下Shift

59:25.620 --> 59:27.620
你才可以进行一个拖放

59:27.620 --> 59:28.620
这个

59:28.620 --> 59:30.620
才可以进行一个评议

59:30.620 --> 59:31.620
可以进行一个评议

59:32.620 --> 59:33.620
然后再来

59:33.620 --> 59:34.620
接下来是这个

59:34.620 --> 59:36.620
就是如何触发

59:36.620 --> 59:38.620
这个数据窗口的一个

59:38.620 --> 59:39.620
评仪

59:40.620 --> 59:41.620
评仪

59:45.380 --> 59:46.380
数据窗口

59:46.380 --> 59:51.170
这俩怎么搞的一样

59:52.170 --> 59:53.170
是这样的

59:53.170 --> 59:54.170
这个东西

59:54.170 --> 59:55.170
是这样的

59:55.170 --> 59:56.170
咱给上

59:57.170 --> 01:00:01.590
给上一个处

01:00:01.590 --> 01:00:03.590
我感觉这个对我有影响

01:00:03.590 --> 01:00:04.590
我把它注射掉

01:00:05.590 --> 01:00:06.590
注射掉之后

01:00:06.590 --> 01:00:13.260
再来看一下

01:00:13.260 --> 01:00:14.260
把它

01:00:14.260 --> 01:00:15.260
给上一个处

01:00:16.260 --> 01:00:17.260
给上一个处

01:00:17.260 --> 01:00:19.700
来刷新一下

01:00:20.700 --> 01:00:21.700
这个东西

01:00:21.700 --> 01:00:22.700
我们想要掩饰

01:00:22.700 --> 01:00:23.700
它还必须要给上

01:00:23.700 --> 01:00:24.700
两条

01:00:25.700 --> 01:00:26.700
slide

01:00:27.700 --> 01:00:28.700
给上两条slide

01:00:29.700 --> 01:00:30.700
好

01:00:30.700 --> 01:00:31.700
是这样的

01:00:31.700 --> 01:00:32.700
这个

01:00:32.700 --> 01:00:33.700
就表示现在

01:00:33.700 --> 01:00:35.700
我在鼠标滚轮滚动的时候

01:00:35.700 --> 01:00:36.700
现在

01:00:36.700 --> 01:00:37.700
也就是说

01:00:37.700 --> 01:00:39.700
我鼠标滚轮

01:00:39.700 --> 01:00:40.700
在滚动的时候

01:00:40.700 --> 01:00:41.700
是缩放

01:00:42.700 --> 01:00:44.700
还是说缩放加平移

01:00:44.700 --> 01:00:46.700
还是说缩放加平移

01:00:46.700 --> 01:00:47.700
懂吗

01:00:47.700 --> 01:00:48.700
能理解这个意思吗

01:00:49.700 --> 01:00:50.700
比如说

01:00:50.700 --> 01:00:52.700
我给上一个out键

01:00:52.700 --> 01:00:53.700
out键

01:00:53.700 --> 01:00:54.700
这个必须要给上

01:00:56.700 --> 01:00:57.700
我按一下out键

01:00:58.700 --> 01:00:59.700
也能够看出一些区别

01:01:00.700 --> 01:01:01.700
还是这样的

01:01:01.700 --> 01:01:02.700
来刷新

01:01:02.700 --> 01:01:03.700
你看

01:01:03.700 --> 01:01:04.700
默认情况下

01:01:04.700 --> 01:01:06.700
我们现在给了一个out键

01:01:06.700 --> 01:01:08.700
大家先来看

01:01:08.700 --> 01:01:10.700
我现在在某一个点当中

01:01:10.700 --> 01:01:11.700
鼠标滚轮在滚动

01:01:11.700 --> 01:01:12.700
是不是

01:01:12.700 --> 01:01:13.700
好滚动

01:01:13.700 --> 01:01:14.700
现在它是不是放大缩小

01:01:14.700 --> 01:01:15.700
是不是说

01:01:15.700 --> 01:01:16.700
现在看上去

01:01:16.700 --> 01:01:18.700
向四周方向进行一个发散

01:01:18.700 --> 01:01:19.700
然后

01:01:19.700 --> 01:01:20.700
缩小的时候

01:01:20.700 --> 01:01:21.700
是不是四周

01:01:21.700 --> 01:01:23.700
向中间进行一个发散

01:01:24.700 --> 01:01:26.700
当我按下out键之后

01:01:26.700 --> 01:01:27.700
大家再注意来看

01:01:27.700 --> 01:01:28.700
走

01:01:28.700 --> 01:01:29.700
你有没有发现

01:01:29.700 --> 01:01:30.700
销放的时候

01:01:30.700 --> 01:01:32.700
同时它是整体是往右边走的

01:01:33.700 --> 01:01:34.700
这个就是什么

01:01:34.700 --> 01:01:36.700
当我鼠标滚轮往下滚

01:01:36.700 --> 01:01:38.700
它其实是往左边走了

01:01:38.700 --> 01:01:39.700
这个就是说

01:01:39.700 --> 01:01:41.700
你鼠标滚轮在缩放的时候

01:01:41.700 --> 01:01:42.700
它是否平移

01:01:43.700 --> 01:01:44.700
是否平移

01:01:44.700 --> 01:01:46.700
由于现在我写的是x轴

01:01:46.700 --> 01:01:48.700
当我按下out键的时候

01:01:48.700 --> 01:01:49.700
在我缩放的时候

01:01:49.700 --> 01:01:51.700
它其实是需要进行一个平移的

01:01:53.700 --> 01:01:54.700
明白了吧

01:01:54.700 --> 01:01:55.700
好

01:01:55.700 --> 01:01:56.700
这个

01:01:56.700 --> 01:01:57.700
关于四个

01:01:57.700 --> 01:01:59.700
就是我们控制的方式

01:01:59.700 --> 01:02:00.700
还有另外一个

01:02:00.700 --> 01:02:02.700
就是prevent default most move

01:02:02.700 --> 01:02:05.700
它是用来阻止默认行为的

01:02:05.700 --> 01:02:06.700
默认行为的

01:02:06.700 --> 01:02:07.700
这个东西

01:02:07.700 --> 01:02:09.700
可能嵌套的时候会有用

01:02:09.700 --> 01:02:11.700
默认行为这个东西

01:02:11.700 --> 01:02:13.700
是不是我们讲事件的时候

01:02:13.700 --> 01:02:15.700
大家在学原生GS的时候

01:02:15.700 --> 01:02:16.700
事件的时候

01:02:16.700 --> 01:02:17.700
是不是说过

01:02:17.700 --> 01:02:19.700
会有一个默认的行为

01:02:19.700 --> 01:02:21.700
在这大家知道

01:02:21.700 --> 01:02:22.700
通过这个东西

01:02:22.700 --> 01:02:24.700
就能够去阻止一下

01:02:24.700 --> 01:02:25.700
它的一个默认行为

01:02:25.700 --> 01:02:26.700
就可以了

01:02:27.700 --> 01:02:28.700
好

01:02:28.700 --> 01:02:29.700
行

01:02:29.700 --> 01:02:31.700
咱们这节课就先说到这

01:02:31.700 --> 01:02:32.700
好不好

01:02:32.700 --> 01:02:34.700
关于我们的inside组建

01:02:34.700 --> 01:02:35.700
咱们就学习到这里

01:02:35.700 --> 01:02:36.700
我们下节课

01:02:36.700 --> 01:02:39.700
再继续说slide的组建

