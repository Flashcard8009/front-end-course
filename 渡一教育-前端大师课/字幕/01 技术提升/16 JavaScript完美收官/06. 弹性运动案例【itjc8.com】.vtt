WEBVTT

00:00.000 --> 00:02.440
OK 那咱接下来的话来做这样的一个弹性运动

00:02.440 --> 00:03.760
弹性运动这样的一个小能力

00:03.760 --> 00:06.200
首先咱来看一下这个页面有什么样的一个东西

00:06.200 --> 00:07.160
其实它就是个导航栏

00:07.160 --> 00:10.360
只不过这个导航栏你会发现当你鼠包一入到某个指向的时候

00:10.360 --> 00:12.240
会有这样的一个背景怎么样 弹过来

00:12.240 --> 00:14.080
弹过来 弹过来 对吧

00:14.080 --> 00:15.360
那做这种导航栏的话

00:15.360 --> 00:17.560
我们应该能用什么减购来做呢

00:17.560 --> 00:20.560
只能是用这个UL和RI它来做 对不对

00:20.560 --> 00:21.520
那我们可以这么来写

00:21.520 --> 00:22.480
首先有UL

00:22.480 --> 00:23.920
UL里面有4个RI

00:23.920 --> 00:26.920
4个RI分别代表这个4个指向

00:26.920 --> 00:28.800
但是光这个4个RI还不够 对吧

00:28.800 --> 00:30.200
我们可以再来一个RI

00:30.200 --> 00:31.360
再来一个RI的话

00:31.360 --> 00:34.440
作为这样的一个什么弹入弹出这种背景

00:34.440 --> 00:36.880
有时候这种粉丝的一个背景

00:36.880 --> 00:37.880
那我们在写的时候的话

00:37.880 --> 00:39.880
其实在这块的话已经都写好了

00:39.880 --> 00:41.120
那我来简单跟你说说

00:41.120 --> 00:42.440
有时候首先我写个UL 对吧

00:42.440 --> 00:44.240
UL里面有4个RI 对吧

00:44.240 --> 00:45.400
4个RI的话

00:45.400 --> 00:46.960
有它共同的这种类名

00:46.960 --> 00:49.320
它们代表这种真正的指向 对吧

00:49.320 --> 00:51.400
那每个RI里面有这样的文本内容

00:51.400 --> 00:53.840
比如CST 乘隔 邓隔和大乘隔 对吧 好

00:53.840 --> 00:55.280
那最后再来一个RI

00:55.280 --> 00:56.240
最后再来这个RI

00:56.280 --> 00:56.740
作为什么

00:56.740 --> 00:59.040
作为这样的一个真正弹入弹出的一个背景 对吧

00:59.040 --> 00:59.520
背

00:59.520 --> 01:02.040
作为这样的一个粉色的一个背景

01:02.040 --> 01:02.560
然后呢

01:02.560 --> 01:04.320
给样式的时候的话怎么来给呢

01:04.320 --> 01:05.600
首先也很简单

01:05.600 --> 01:07.960
首先你需要这么来做啊

01:07.960 --> 01:09.360
就是咱不看这个啊

01:09.360 --> 01:10.600
咱看我自己来写的吧

01:10.600 --> 01:11.240
检查一下

01:11.240 --> 01:12.520
我给你打个Browse

01:12.520 --> 01:13.440
首先你要这样

01:13.440 --> 01:17.880
你要让这个UL能足以容纳这4个RI 对吧

01:17.880 --> 01:19.000
怎么足以容纳呢

01:19.000 --> 01:20.200
这时候你要明白一点

01:20.200 --> 01:21.080
你这个每个RI

01:21.080 --> 01:23.840
比如说应该给多宽或者说给多高 对吧

01:23.840 --> 01:25.080
那当然呢

01:25.080 --> 01:25.760
如果说

01:25.760 --> 01:27.480
你要让这样的一个4个RI

01:27.480 --> 01:28.920
变成一横排的形象的话

01:28.920 --> 01:30.280
我们首先注意一点

01:30.280 --> 01:31.200
就是让这个UL

01:31.200 --> 01:33.200
它的宽度能足以容纳什么

01:33.200 --> 01:35.120
足以容纳这个4个RI

01:35.120 --> 01:36.240
变成一横排

01:36.240 --> 01:38.600
那我们现在在这等下规定了

01:38.600 --> 01:39.680
每个RI

01:39.680 --> 01:40.560
你看每个RI

01:40.560 --> 01:41.920
是向左浮动的 对吧

01:41.920 --> 01:43.920
宽度是198像素

01:43.920 --> 01:46.000
还有左右两像素的这个border

01:46.000 --> 01:47.560
那它真实的宽度是200 对不对

01:47.560 --> 01:49.360
所以说那我要给我的UL

01:49.360 --> 01:51.200
什么一个宽度是800

01:51.200 --> 01:52.560
因为我总共有4个RI

01:52.560 --> 01:53.320
变成一横排 对吧

01:53.320 --> 01:54.360
那4×200 对吧

01:54.360 --> 01:58.120
4×200这样的一个

01:58.120 --> 02:00.040
最后让它的附近变成800就可以了

02:00.040 --> 02:01.920
然后它的高度是198 对吧

02:01.920 --> 02:04.760
加上以上下两像素的一个border

02:04.760 --> 02:06.120
最后高度的话也是什么

02:06.120 --> 02:07.200
也是200 对吧

02:07.200 --> 02:08.480
那如果说你觉得这种高度的话

02:08.480 --> 02:09.120
太难看了的话

02:09.120 --> 02:10.760
你可以这样变成一个98 对吧

02:10.760 --> 02:11.760
高度变成100

02:11.760 --> 02:12.680
那这种

02:12.680 --> 02:13.480
那这样的情况下呢

02:13.480 --> 02:15.280
这种我们整个的这个

02:15.280 --> 02:17.640
那我们整个这样的那个高度的话

02:17.640 --> 02:18.680
就变成98加上什么

02:18.680 --> 02:21.880
加上上下的两像素的border变成了200 对吧

02:21.880 --> 02:23.040
然后给你们呈三的背景

02:23.040 --> 02:24.000
然后再来它这样的一个

02:24.000 --> 02:27.040
哎 烂汉的也是98

02:27.040 --> 02:28.320
烂汉的是98以后的话

02:28.320 --> 02:30.480
就是相当于让让这个文本怎么样

02:30.480 --> 02:31.400
水平

02:31.400 --> 02:33.320
让这个文本垂直俱中了 对吧

02:33.320 --> 02:34.600
那文本垂直俱中以后的话

02:34.600 --> 02:36.800
我们要害让它进行水平俱中的话

02:36.800 --> 02:37.360
怎么办呢

02:37.360 --> 02:39.040
让它Teslin是一个center就可以了

02:39.040 --> 02:41.560
OK 那有时候通过

02:41.560 --> 02:42.840
这个一样是做到什么

02:42.840 --> 02:44.680
做到让这个一摇一摇

02:44.680 --> 02:46.160
哎 浮动变成一横排 对吧

02:46.160 --> 02:48.160
宽度200 变成有border 对吧

02:48.160 --> 02:49.320
然后高度呢100 对吧

02:49.320 --> 02:50.560
变成也有border

02:50.560 --> 02:52.440
然后让你们这个文本水平垂直俱中

02:52.440 --> 02:54.000
给它一个背景色

02:54.000 --> 02:55.480
然后通过这个样式怎么样呢

02:55.480 --> 02:58.120
通过这个样式让URI有个样的相对定位

02:58.120 --> 02:58.360
对吧

02:58.360 --> 03:00.520
冰一片的水平方向俱中对吧

03:00.520 --> 03:02.760
有个Magnetop就顶色100 像素

03:02.760 --> 03:03.880
宽度足以容纳

03:03.880 --> 03:05.000
4个RI 平成一横排

03:05.000 --> 03:06.640
高度呢是一个100 行吗

03:06.640 --> 03:07.280
是100

03:07.280 --> 03:09.000
然后那前面这个初始样式

03:09.000 --> 03:10.880
就是让把这个排顶和Magnet和List style

03:10.880 --> 03:12.080
全部都俱到而已

03:12.080 --> 03:13.440
后面在这个bg

03:13.440 --> 03:15.320
这个bg的话咱们再可以来看一下

03:15.320 --> 03:16.440
然后这个bg应该是

03:16.440 --> 03:18.000
以油理他们这种

03:18.000 --> 03:20.400
以油理的方式来去存在于他们之中 对吧

03:20.400 --> 03:22.160
所以说我让它绝对定位

03:22.160 --> 03:23.080
绝对定位以后的话

03:23.080 --> 03:24.640
Lavetop是零像素

03:24.640 --> 03:27.000
然后它的宽度和高度都是什么

03:27.000 --> 03:29.080
宽度和高度是200和100的

03:29.080 --> 03:31.960
我得让它完全能覆盖住每个RI

03:31.960 --> 03:34.080
然后吞噜实际上4对吧

03:34.080 --> 03:36.320
可以让它透过这样的一个bg背景

03:36.320 --> 03:37.520
去看到你们的文本

03:37.520 --> 03:39.120
背景色是个身份色

03:39.120 --> 03:39.760
那这样的话

03:39.760 --> 03:42.360
它就参照于咱们这个URI来定位的

03:42.360 --> 03:42.880
对不对

03:42.880 --> 03:44.360
就说咱们现在来看一下

03:44.360 --> 03:45.160
点击右键

03:45.160 --> 03:46.440
Open点发到Browse一次对吧

03:46.440 --> 03:46.640
好

03:46.640 --> 03:48.160
现在这个样子跟我们一开始

03:48.160 --> 03:49.800
看到按键样子是一样的对吧

03:49.800 --> 03:51.640
然后接下来我做的是用什么呢

03:51.640 --> 03:55.440
就是把我们这样的一个运动的功能对吧

03:55.440 --> 03:57.040
这个弹性运动的功能

03:57.040 --> 03:58.280
可能直到里面去

03:58.280 --> 04:01.160
首先在这我把这个弹性这个函数拿过来

04:01.160 --> 04:02.680
拿过来以后给它解开出示

04:02.680 --> 04:03.520
解开出示

04:03.520 --> 04:04.960
OK 好

04:04.960 --> 04:06.760
那么这一课主要还是以运动

04:06.760 --> 04:09.200
以咱们这样的一个就是GS为主

04:09.200 --> 04:10.760
所以说前面这个小链子

04:10.760 --> 04:12.200
这样的一个样式的话对吧

04:12.200 --> 04:13.360
其实也没多难对吧

04:13.360 --> 04:15.480
而且我给你带你去厨房分析的下

04:15.480 --> 04:17.080
你可以自己回去再去练练

04:17.080 --> 04:18.440
再去写写

04:18.440 --> 04:18.600
好

04:18.680 --> 04:19.280
咱们来看一下

04:19.280 --> 04:21.040
接下来我们来回录到这个GS之后

04:21.040 --> 04:23.600
首先我先握一个OLRE

04:23.600 --> 04:25.840
握完这个OLRE以后的话

04:25.840 --> 04:27.560
通过这个Doctrine的方式来去

04:27.560 --> 04:30.040
怎么样把它全部的混入到对吧

04:30.040 --> 04:31.240
混入到以后你要知道一点

04:31.240 --> 04:32.280
我们这个

04:32.280 --> 04:33.080
混入完以后的话

04:33.080 --> 04:34.840
我们不是给每个LI都保留时间的

04:34.840 --> 04:36.720
而是要给这四个LI保留时间

04:36.720 --> 04:38.880
当你鼠标一入到某个LI的时候的话

04:38.880 --> 04:40.040
让某个背景

04:40.040 --> 04:43.200
谈用到某个LI这样的位置上对吧

04:43.200 --> 04:44.360
所以说在这一块的话

04:44.360 --> 04:47.760
我还要去单独去混入一下这个OLRE

04:48.320 --> 04:49.200
让它等于

04:49.200 --> 04:51.360
它等于这个整个的LI的最后一个

04:51.360 --> 04:52.800
Ctrl C一下在这

04:52.800 --> 04:54.000
写上什么写上一个

04:54.000 --> 04:55.360
它的一个Lans

04:55.360 --> 04:56.320
L1 GTH

04:56.320 --> 04:57.960
L1 N GTH

04:57.960 --> 04:59.400
减去一个1

04:59.400 --> 05:00.000
好

05:00.000 --> 05:00.880
那这样的话

05:00.880 --> 05:01.720
把这个BG

05:01.720 --> 05:04.000
把这个背景BG也获得到了

05:04.000 --> 05:05.480
那接下来我又通过一个循环

05:05.480 --> 05:06.920
来去给每个

05:06.920 --> 05:09.000
还用LRI来保留这样的时间

05:09.000 --> 05:11.080
每个LI的话不包括这个背景

05:11.080 --> 05:11.520
好

05:11.520 --> 05:13.280
那通过这个Ware一个Add的方式

05:13.280 --> 05:14.400
让它等于一个0

05:14.400 --> 05:17.440
然后我们在这让I去小一个OLRE

05:17.840 --> 05:18.800
Lans

05:19.360 --> 05:20.400
减去一个1

05:20.400 --> 05:21.160
因为我们不包括它

05:21.160 --> 05:21.400
对吧

05:21.400 --> 05:21.920
不包括它

05:21.920 --> 05:23.400
需要去减一个1

05:23.400 --> 05:25.480
然后再这个I加加

05:25.480 --> 05:26.080
好

05:26.080 --> 05:27.760
那现在的话

05:27.760 --> 05:31.080
我通过这种OLRE的方式

05:31.080 --> 05:33.800
去给每个这样的一个需要保留时间的LI

05:33.800 --> 05:35.920
来保那个这样的一个叫做

05:35.920 --> 05:36.920
Unmoss

05:36.920 --> 05:37.880
Enter的一个时间

05:37.880 --> 05:39.080
Unmoss Enter

05:39.080 --> 05:40.840
那鼠标碰到某一个

05:40.840 --> 05:43.720
你看鼠标碰到某一个LI的时候的话

05:43.720 --> 05:46.120
我就去调用一个STARM

05:46.120 --> 05:47.160
来告诉我

05:47.160 --> 05:49.760
我要BG进行运动

05:49.760 --> 05:52.880
并且运动到我这个LI的目标

05:52.880 --> 05:54.960
并且运动到我这个LI这样的一个

05:54.960 --> 05:56.560
当前的位置上对不对

05:56.560 --> 05:57.360
那这个当前的位置

05:57.360 --> 05:58.800
作为它的一个运动的目标点了

05:58.800 --> 05:59.800
那咱来看一下

05:59.800 --> 06:02.480
现在能不能实现这样的一个效果

06:02.480 --> 06:02.960
很简单

06:02.960 --> 06:03.880
其实就是怎么样

06:03.880 --> 06:05.040
把结果要实现以后的话

06:05.040 --> 06:06.840
利用我们之前写好的代码

06:06.840 --> 06:07.840
写了它就可以了

06:07.840 --> 06:09.880
然后再办出一下来看一下刷新

06:10.760 --> 06:11.160
OK

06:11.160 --> 06:11.920
这包了个错对吧

06:11.920 --> 06:12.880
应该是包了个错

06:12.880 --> 06:14.400
因为它没有成功运动

06:14.400 --> 06:15.080
我们检查一下

06:15.080 --> 06:16.600
看一下哪包错了

06:16.640 --> 06:17.360
刷新

06:17.360 --> 06:18.440
OK

06:18.440 --> 06:18.880
确实怎么样

06:18.880 --> 06:19.840
没有效果的吧

06:19.840 --> 06:20.680
没有效果是因为什么

06:20.680 --> 06:21.720
咱来看一下

06:21.720 --> 06:23.360
通过外业ID

06:23.360 --> 06:24.000
ID等于它的方式

06:24.000 --> 06:24.840
咱首先来看一下

06:24.840 --> 06:26.600
这个实践到底有没有出发行吗

06:26.600 --> 06:28.680
我通过这种console的方式

06:28.680 --> 06:29.800
console

06:29.800 --> 06:31.240
console

06:31.240 --> 06:32.200
来去看一下

06:32.200 --> 06:34.280
到底有没有出发这样的实践对不对

06:34.280 --> 06:35.760
至好我们也去体验一下

06:35.760 --> 06:37.160
如何去调罢了

06:37.160 --> 06:37.720
点击点击

06:37.720 --> 06:38.680
你会发现怎么样

06:38.680 --> 06:39.240
不点击

06:39.240 --> 06:40.280
一入一入你会发现

06:40.280 --> 06:41.240
没有效果的吧

06:41.240 --> 06:42.680
没有效果的话

06:42.680 --> 06:43.480
咱再来看一下

06:44.480 --> 06:46.560
究竟是因为什么样的一个原因

06:46.560 --> 06:47.160
对不对

06:47.160 --> 06:49.280
那ORI

06:49.280 --> 06:50.520
ORI

06:50.520 --> 06:51.360
点Lens

06:51.360 --> 06:51.920
减1

06:51.920 --> 06:52.360
那我们看一下

06:52.360 --> 06:53.640
这个循环有没有这种

06:53.640 --> 06:54.920
我们一层一层就往上找

06:54.920 --> 06:55.720
行吗

06:55.720 --> 06:57.520
保存下来看一下

06:57.520 --> 06:58.360
有没有这个按

06:58.360 --> 06:59.840
刷新

06:59.840 --> 07:01.760
确实按了4次对吧

07:01.760 --> 07:03.360
然后我给每个ORI

07:03.360 --> 07:04.480
里面只来放

07:04.480 --> 07:06.240
almost enter

07:06.240 --> 07:07.680
almost enter少了个e对不对

07:07.680 --> 07:08.240
OK

07:08.240 --> 07:09.760
那这样的话

07:09.760 --> 07:11.560
我们把这样的Bug找到以后的话

07:11.560 --> 07:12.400
给它调时好

07:12.400 --> 07:13.240
咱再来看一下

07:14.160 --> 07:14.640
OK

07:14.640 --> 07:15.880
刚好Timer没有被定仰

07:15.880 --> 07:16.280
因为什么呢

07:16.280 --> 07:16.720
因为

07:16.720 --> 07:17.280
你看好了

07:17.280 --> 07:18.200
我在这个

07:18.200 --> 07:19.720
写这个弹性运动函数的时候

07:19.720 --> 07:21.040
是你需要一个Timer对不对

07:21.040 --> 07:22.320
在这我再问一个Timer对吧

07:22.320 --> 07:22.840
好了

07:22.840 --> 07:23.640
编程的话就是

07:23.640 --> 07:24.920
你少一个东西

07:24.920 --> 07:25.240
哎

07:25.240 --> 07:26.160
它都不能成功对不对

07:26.160 --> 07:28.120
是说我们还要严谨一点点

07:28.120 --> 07:28.240
好

07:28.240 --> 07:29.200
再来再看一下

07:29.200 --> 07:30.440
稍微一次

07:30.440 --> 07:31.120
OK

07:31.120 --> 07:31.440
OK

07:31.440 --> 07:32.040
OK

07:32.040 --> 07:32.560
怎么样

07:32.560 --> 07:33.600
现在是不是可以

07:33.600 --> 07:35.040
进入这种弹性运动了

07:35.040 --> 07:35.720
对吧

07:35.720 --> 07:36.720
你属标碰到谁

07:36.720 --> 07:37.720
他就谈到哪

07:37.720 --> 07:38.120
碰到谁

07:38.120 --> 07:38.560
谈到哪

07:38.560 --> 07:40.080
碰到谁就谈到哪

07:40.080 --> 07:40.440
OK

07:40.440 --> 07:41.800
那咱们这样的一个小demo

07:41.840 --> 07:42.720
就算是搞定了

07:42.720 --> 07:43.920
其实也没多难对不对

07:43.920 --> 07:45.080
就是利用它

07:45.080 --> 07:46.880
就写这样那个小的应用

07:46.880 --> 07:47.040
好

07:47.040 --> 07:48.280
那咱这些小姐的话就告一段

