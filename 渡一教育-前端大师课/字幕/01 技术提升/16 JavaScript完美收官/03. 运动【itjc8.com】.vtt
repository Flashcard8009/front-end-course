WEBVTT

00:00.180 --> 00:04.180
哈喽 同学们好 今天我们讲这个GS运动的课程

00:04.180 --> 00:09.580
相信学到这里 你们对之前的GS的技术应该有比较好的掌握了

00:09.580 --> 00:13.580
那今天我们通过这一课加强一下我们这样的思维

00:13.580 --> 00:15.580
加上我们这样的思维的逻辑

00:15.580 --> 00:18.780
那说到运动的话 想必很多同学会练养到

00:18.780 --> 00:24.580
比如说打篮球 对吧 踢足球 大远矛球 滑雪游泳等等等等

00:24.580 --> 00:27.180
那我们可以总结一下 什么是运动

00:27.180 --> 00:31.980
其实在我看来 运动就是你的状态 或者是你的这样的一个形状

00:31.980 --> 00:35.780
发生连续的这种改变 发生连续的这种变化

00:35.780 --> 00:38.780
我们可以说统治为叫做运动

00:38.780 --> 00:44.380
那我们GS运动的话 也就是说是通过这个GS去操作一些标签

00:44.380 --> 00:48.380
这个标签的状态 或者是它的一个位置 它的形状 对吧

00:48.380 --> 00:51.880
或者是它的这样的透明度 发生连续的这样的一个变化

00:51.880 --> 00:55.980
那这也是我们这一课 或者说这也是我们这一课这样的一个目的

00:55.980 --> 01:01.980
那今天我们讲这个运动的话 从最基本的 最基本的这样的一个运速运动开始讲起

01:01.980 --> 01:06.180
因为我们想象一下 我们高中的时候可能也学过这种

01:06.180 --> 01:10.280
比如说物理方面的一些运动 对吧 老师讲运动第一课 第一件课的话

01:10.280 --> 01:14.280
一般也都是讲这种运速直线运动 那当然我们这件课

01:14.280 --> 01:19.780
其实也跟咱们这个高中的这些物理的这些知识 有一点这样的相关性

01:19.780 --> 01:23.780
当然如果说你对这个高中的物理不是很了解的话 也没有关系

01:23.780 --> 01:28.380
咱们这一课的不是一道那么深的东西 只不能把一些思想照搬过来

01:28.380 --> 01:33.880
我们用代码去怀援它 我们用我们需要去掌握需要去研究的那一部分

01:33.880 --> 01:38.380
好 那咱们先从咱这样运速运动开始来说起 运速运动

01:38.380 --> 01:44.380
那什么是运速运动呢 运速运动你就可以列成是这个速度不变的运动

01:44.380 --> 01:48.580
具体我们要完成什么那个效果 一会我再来给大家说一说

01:48.580 --> 01:52.380
现在我先把这个页面给你去创建成功 给你创建成功

01:52.380 --> 01:55.180
这个页面是我之前就已经创建完成的

01:55.180 --> 01:59.580
然后我给它拖到这样的VSECO那边去了 我现在通过HTMLM5

01:59.580 --> 02:03.280
把这个整个结构全部都打出来 打出来以后的话

02:03.280 --> 02:06.780
现在我开始在这写一个标签 那接下来我以后做的事情

02:06.780 --> 02:09.980
就是让这个标签运速直线运动

02:09.980 --> 02:17.280
那首先我在这还是引入一个这样的screwed 通过内研的方式来引入这样的GS

02:17.280 --> 02:21.880
那我们这个GS来去操作这个DIV进行运速的直线运动

02:21.880 --> 02:26.180
当然首先我们要注意点 你让这个DIV做这个运速直线运动

02:26.180 --> 02:30.580
首先我们要用户能看得见它 对吧 能看得见它以后呢

02:30.580 --> 02:35.280
我得给这个DIV 给这个标签一个定位 一个决定定位

02:35.280 --> 02:36.980
为什么要给它这样的一个定位呢

02:36.980 --> 02:39.680
因为我们想控制一个物体运动的话

02:39.680 --> 02:42.380
其实就是改变它这样的一个坐标

02:42.380 --> 02:46.380
就是改变它这样的一个left top right 或者说包扯

02:46.380 --> 02:48.580
那如果说你不给它一个定位的话

02:48.580 --> 02:50.480
其实你去改变这样的一个指的话

02:50.480 --> 02:53.980
它也不会发生任何的一个位移 不会发生任何的变化

02:53.980 --> 02:58.780
所以说我们再给这个DIV样式的时候 我们要注意一下

02:58.780 --> 03:02.280
在这首先要选中它 通过一个ways

03:02.280 --> 03:05.080
给它一个100相速的宽动 可以100相速的高度

03:05.080 --> 03:07.980
然后再给它一个比较亮亮的颜色 对吧

03:07.980 --> 03:10.780
比如说一个橙色 然后再给它一个position

03:10.780 --> 03:11.680
给它这样的一个定位

03:11.680 --> 03:14.180
但决定定位的话是比较好的

03:14.180 --> 03:18.580
决定位的话 由于我这样的一个标签

03:18.580 --> 03:21.980
它的负极是一个没有定位的负极 对不对

03:21.980 --> 03:24.580
它会持续去网上找 最后参照由这个浏览器

03:24.580 --> 03:26.180
整个边框来进行定位 对吧

03:26.180 --> 03:28.780
或是参照这个文档来进行这样的定位

03:28.780 --> 03:31.080
从视觉的视觉效果上就是

03:31.080 --> 03:34.480
仿佛是它是在参照这样的浏览器边框进行这样的定位

03:34.480 --> 03:37.280
实际上它是参照这个文档来进行这样的定位的

03:37.280 --> 03:39.280
那现在我给它一个决定位以后的话

03:39.280 --> 03:41.380
那我再给它起始的一个left值

03:41.380 --> 03:43.680
比如说零相速和top 零相速 对吧

03:43.680 --> 03:46.380
那它最后是在这个左上角所呈现出来

03:46.380 --> 03:47.880
咱来看一下刷新 对吧

03:47.880 --> 03:50.180
在左上角呈现出来了

03:50.180 --> 03:51.480
那在这呢

03:51.480 --> 03:54.880
我们已经把这样的样式给你全部都写完了

03:54.880 --> 03:55.980
那接下来我要做的事情呢

03:55.980 --> 03:59.780
就是通过这个GS来让它进行云素职业运动

03:59.780 --> 04:01.580
那让它进行云素职业运动

04:01.580 --> 04:03.180
那首先我得获取到它

04:03.180 --> 04:05.080
那在这的话我通过我一个DIV对吧

04:05.080 --> 04:08.580
让它等于一个Document.getElementBadTechname

04:08.580 --> 04:11.180
通过这种基本的方式来获取这个DIV

04:12.380 --> 04:13.580
来获取这个DIV

04:13.580 --> 04:16.080
那这个DIV我获取完了以后的话好了

04:16.080 --> 04:17.280
那我怎么控制它运动啊

04:17.280 --> 04:18.080
我一会说啊

04:18.080 --> 04:19.380
现在呢我再加一个条件啊

04:19.380 --> 04:21.180
就是我想通过

04:21.180 --> 04:22.780
当我点击完这个button

04:23.980 --> 04:27.480
之后我再让这个DIV开始云素职业运动

04:27.480 --> 04:28.280
那我在这呢

04:28.280 --> 04:30.380
写了一个button这样的一个标签

04:30.380 --> 04:32.080
这个标签给它一个ID

04:32.080 --> 04:33.480
这个ID是btn

04:33.480 --> 04:35.080
并且这个标签里面有个文字

04:35.080 --> 04:36.180
它叫做一个run

04:36.180 --> 04:36.880
我保存一下

04:36.880 --> 04:38.180
咱商讯一下看一看

04:38.180 --> 04:40.580
那你会发现这个标签好像没有显示出来对吧

04:40.580 --> 04:41.280
因为什么呢

04:41.280 --> 04:42.880
因为这个DIV它是绝对因为

04:42.880 --> 04:45.080
Torium的文档流把它覆盖到里面去了

04:45.080 --> 04:46.680
就是把它覆盖上了对吧

04:46.680 --> 04:47.380
那在这的话

04:47.380 --> 04:48.580
我给这个button啊

04:48.580 --> 04:50.080
一个marking top

04:50.080 --> 04:51.080
marking top

04:51.080 --> 04:53.280
我让这个button往下去一一

04:53.280 --> 04:54.880
比如说150样速啊

04:54.880 --> 04:55.280
在这呢

04:55.280 --> 04:55.880
我再刷新一下

04:55.880 --> 04:56.580
你会发现哎

04:56.580 --> 04:58.380
这有个这样那个标签对吧

04:58.380 --> 04:59.280
有这样的按钮

04:59.280 --> 05:02.880
我想让你点完它以后让它进行云素直线运动

05:02.880 --> 05:04.580
云素直线运动

05:04.580 --> 05:06.480
那这个整个的这样那个事情

05:06.480 --> 05:07.980
那个描述就是

05:07.980 --> 05:09.780
我点完它对吧啊

05:09.780 --> 05:11.180
再去让它运动啊

05:11.180 --> 05:13.680
那这个描述的一个过程

05:13.680 --> 05:16.080
就是我们要给它翻成这样的一个代码啊

05:16.080 --> 05:17.380
那从哪开始来做呢

05:17.380 --> 05:18.080
对吧

05:18.080 --> 05:19.480
点击它让它运动对吧

05:19.480 --> 05:21.180
我们已经能获取到它了

05:21.180 --> 05:22.880
那点击它让它运动的

05:22.880 --> 05:24.880
这个一丑就是一个事件这样的事情

05:24.880 --> 05:25.180
对吧

05:25.180 --> 05:28.680
也就是我们需要通过这种事件来进行这样的一个完成啊

05:28.680 --> 05:29.880
那所以说我在这的话

05:29.880 --> 05:31.580
也需要去获取这样的一个btn

05:32.780 --> 05:33.680
通过document的点啊

05:33.680 --> 05:35.380
这回可以通过by id的吧

05:35.380 --> 05:37.480
by id的方式来获取这样的一个按钮

05:37.480 --> 05:38.580
bytn

05:38.580 --> 05:39.880
那在这的话

05:39.880 --> 05:42.380
好我通过这个给btn绑定一个事件啊

05:42.380 --> 05:43.380
因为我们刚才说嘛对吧

05:43.380 --> 05:46.080
点击这个按钮之后再发生一些的事情对吧

05:46.080 --> 05:46.880
让它进行运动

05:46.880 --> 05:49.680
那必然我要给它去绑定这样的一个事件啊

05:49.680 --> 05:50.980
绑定完这个事件以后的话

05:50.980 --> 05:53.680
当它这个事件一旦在它身上触发了对吧

05:53.680 --> 05:55.580
就会直接这个事件处理寒宿

05:55.580 --> 05:58.180
那我在这个里面可以让这个div对吧

05:58.180 --> 06:01.580
哎不停的进行这样的一个运速直言运动啊

06:01.580 --> 06:05.380
好那怎么能让它不停的进行这个运速直言运动呢啊

06:05.380 --> 06:07.780
首先你要明白一个东西啊

06:07.880 --> 06:09.880
就是这个运动我们刚才说了

06:09.880 --> 06:12.380
它是一个状态的连续改变啊

06:12.380 --> 06:14.780
那如果说我有一种方式啊

06:14.780 --> 06:16.480
能让这个div它的一个当前的

06:16.480 --> 06:18.280
比如说live的或top值对吧

06:18.280 --> 06:19.980
来进行连续的变化

06:19.980 --> 06:22.380
还是稳定的进行连续的变化的话

06:22.380 --> 06:24.780
那它最后所呈现出的我们这种视觉状态

06:24.780 --> 06:27.780
一定是这样的一个运速直言运动的啊

06:27.780 --> 06:29.580
那在这的话啊

06:29.580 --> 06:30.680
我们要回一下对吧

06:30.680 --> 06:32.580
我们什么样的一个功能啊

06:32.580 --> 06:35.180
可以去比如说不间断的去

06:35.180 --> 06:36.780
调用这样的一个函数

06:36.780 --> 06:40.180
或者说是不间断的去执行一系列另外一个功能的啊

06:40.180 --> 06:43.380
这个如果你对前面供应课的这个基础啊

06:43.380 --> 06:44.280
讲的比较好的话

06:44.280 --> 06:47.380
我相信你应该能瞬间回出来叫做一个set interval

06:47.380 --> 06:47.780
对吧

06:47.780 --> 06:49.280
是这样的一个函数

06:49.280 --> 06:50.280
这个函数啊

06:50.280 --> 06:51.280
它需要你传递啊

06:51.280 --> 06:52.280
至少两个参数

06:52.280 --> 06:53.080
第一个参数呢

06:53.080 --> 06:54.280
哎是一个函数

06:54.280 --> 06:55.280
那第二个参数呢

06:55.280 --> 06:56.480
是一个好秒数

06:56.480 --> 06:57.880
是个时间间隔

06:57.880 --> 06:59.880
那当我这么喜欢以后是什么意思呢

06:59.880 --> 07:01.280
就是每个三场秒对吧

07:01.280 --> 07:02.480
去执行这个功能

07:02.480 --> 07:05.980
那假如这个功能就是哎让这个div哎

07:05.980 --> 07:08.780
去怎么样去改变一下它这样那个live的值啊

07:08.780 --> 07:09.780
就比如说让它

07:09.780 --> 07:12.880
它让它的这个最新的一个live的这样的作标

07:12.880 --> 07:15.380
等于它当前这个位置上再加上一个1

07:15.380 --> 07:16.180
或再加上2

07:16.180 --> 07:17.980
会再加上任一个数对吧

07:17.980 --> 07:19.680
一旦这个电影器开启以后的话

07:19.680 --> 07:22.480
它就会每个三十毫秒让它去怎么样

07:22.480 --> 07:24.080
去移动固定的一个距离

07:24.080 --> 07:25.680
那最后从视约上来看的话

07:25.680 --> 07:27.580
这就是一个云素直线运动对吧

07:27.580 --> 07:29.780
因为s等于vt对吧

07:29.780 --> 07:32.480
s的vt是云素直线运动的一个公式对不对

07:32.480 --> 07:33.980
那也就是说我们来看一下

07:33.980 --> 07:36.680
就是在相同的时间段内对吧

07:36.680 --> 07:39.180
我们这个距离应该走的是一样的

07:39.180 --> 07:40.780
那只要满足这种情况下的话

07:40.780 --> 07:43.280
你就可以列成是个云素直线运动

07:43.280 --> 07:46.280
那通过这个函数就可以完全达到这样的效果

07:46.280 --> 07:47.980
当然我在这呢

07:47.980 --> 07:50.780
比如说我握一个这样那个基本的一个不不平

07:50.780 --> 07:52.580
或者说我把它列成是个速度

07:52.580 --> 07:53.580
比如说是4

07:53.580 --> 07:55.480
有时候每个三十毫秒我怎么样

07:55.480 --> 07:59.880
我让这个odiv的最新的这个live的值啊

07:59.880 --> 08:03.380
最新的live的值等于当前的

08:03.380 --> 08:04.980
它的一个live的值对吧

08:04.980 --> 08:07.080
加上一个比如说svt的

08:07.080 --> 08:10.780
当然它就需要加上一个像素付给这样的一个航空间样式

08:10.780 --> 08:12.180
那它是什么呢

08:12.180 --> 08:17.280
它就是一个获取这个div的live的坐标的这样的一个属性

08:17.280 --> 08:18.580
这个属性返回的值呢

08:18.580 --> 08:21.780
是一个这样的一个具体的一个number类型的数字

08:21.780 --> 08:23.980
这个属性的话咱们在供应课里面也讲过

08:23.980 --> 08:26.380
如果你不懂的话可以回去看一下

08:26.380 --> 08:28.280
那接下来的话咱们来看一下

08:28.280 --> 08:31.480
咱们看一下现在我能否让这个东西进行这样的一个运动

08:31.580 --> 08:32.780
一点

08:32.780 --> 08:33.880
哎你会发现怎么样

08:33.880 --> 08:35.580
触不及防的开始运动起来了

08:35.580 --> 08:36.380
对吧

08:36.380 --> 08:36.680
好

08:36.680 --> 08:37.480
你说你点完它以后

08:37.480 --> 08:38.280
它确实怎么样

08:38.280 --> 08:40.680
可以进行这样的一个运速之间运动了

08:40.680 --> 08:41.780
但是你会发现一点

08:41.780 --> 08:42.880
我连续点很多次以后

08:42.880 --> 08:44.280
它会越来越快越来越快

08:44.280 --> 08:45.880
这是因为什么呢

08:45.880 --> 08:47.280
这是因为什么呢

08:47.280 --> 08:49.480
这是因为一个很简单的原因

08:49.480 --> 08:51.880
就是你去点了很多次以后的话

08:51.880 --> 08:52.180
怎么样

08:52.180 --> 08:53.680
它会出发多次这个函数

08:53.680 --> 08:55.080
那它出发多次函数以后呢

08:55.080 --> 08:58.080
最后就会多次的去调用这样的一个电源器

08:58.080 --> 08:59.780
那多次调用电源器的话

09:00.180 --> 09:03.180
以前比如说是每个三毫秒让它走这个一次

09:03.180 --> 09:03.380
对吧

09:03.380 --> 09:04.280
那现在呢

09:04.280 --> 09:06.580
可能让它走四次走五次走六次

09:06.580 --> 09:07.480
你点击越多次

09:07.480 --> 09:09.280
它走的可能就是越多的

09:09.280 --> 09:10.980
以后说你点击越多次次的话

09:10.980 --> 09:11.180
好了

09:11.180 --> 09:13.780
那它这个代码可能说在同一时间段内

09:13.780 --> 09:16.380
它所出发的这个次数就会变得更多

09:16.380 --> 09:17.680
那最后从事实上来看的话

09:17.680 --> 09:19.680
它一定是会变得更快的

09:19.680 --> 09:20.180
这一块呢

09:20.180 --> 09:22.480
你想具体的再去深入的了解一下的话

09:22.480 --> 09:23.780
我建议你去看一下

09:23.780 --> 09:25.080
你不知道GS里面

09:25.080 --> 09:27.180
我所讲的那个就是GSGIN机制

09:27.180 --> 09:27.580
对吧

09:27.580 --> 09:28.480
你结合来看一下

09:28.480 --> 09:31.080
你会对这里面对理解会更深入一些

09:31.080 --> 09:34.780
那这里面我们就不做更多的这样的一个讲解了

09:34.780 --> 09:36.380
那我们GSGIN主要是讲这样的运动

09:36.380 --> 09:36.880
对吧

09:36.880 --> 09:39.980
我们把这个所有的经历回回到这个运动上来

09:39.980 --> 09:40.380
好

09:40.380 --> 09:42.780
那如何去把这个问题给它解决掉了

09:42.780 --> 09:43.080
对吧

09:43.080 --> 09:44.980
就是我不想让它点击那么多次

09:44.980 --> 09:46.780
就是我不想让它点击四如越多

09:46.780 --> 09:47.580
它的速度就越快

09:47.580 --> 09:47.980
对吧

09:47.980 --> 09:49.280
我要让你甭管点多少次

09:49.280 --> 09:50.480
它的速度是稳定的

09:50.480 --> 09:51.980
都是一样的

09:51.980 --> 09:52.780
那怎么来做呢

09:52.780 --> 09:53.580
对吧

09:53.580 --> 09:55.380
如果说你对我刚才的描述

09:55.380 --> 09:57.580
有了这样一个基本的理解以后的话

09:57.580 --> 09:58.880
你会发现一个小点

09:58.880 --> 10:00.080
它为什么会变得越快

10:00.080 --> 10:01.080
因为同一时间段

10:01.080 --> 10:02.580
因为同一时间段内对吧

10:02.580 --> 10:04.880
它执行的这个次数变得多了对吧

10:04.880 --> 10:06.280
那再往上推

10:06.280 --> 10:07.980
就是因为同一时间段

10:07.980 --> 10:09.080
就是再往上推的话

10:09.080 --> 10:11.080
那就是因为这个时间对吧

10:11.080 --> 10:12.680
怎么样会平凡执行多次

10:12.680 --> 10:14.780
导致它会执行多次对不对

10:14.780 --> 10:16.880
人说多个它在起作用对吧

10:16.880 --> 10:18.080
其实这就是一个这样的一个

10:18.080 --> 10:19.280
根本性的一个原因

10:19.280 --> 10:20.880
多个它在起作用

10:20.880 --> 10:23.280
那如果说我能通过一些类的这样的一个操作

10:23.280 --> 10:24.980
能让它怎么样

10:24.980 --> 10:26.480
只有一个起作用的话

10:26.480 --> 10:28.480
那是不是就可以解决这样的问题

10:28.480 --> 10:30.180
我可以怎么做呢对吧

10:30.180 --> 10:32.380
我可以在这我握一个 Timer

10:32.380 --> 10:33.680
那握一个 Timer的话

10:33.680 --> 10:34.080
你看好了

10:34.080 --> 10:35.480
我这样接下来

10:35.480 --> 10:37.880
我用这个 Timer让它等于一个它

10:37.880 --> 10:39.380
为什么让它等于它呢对吧

10:39.380 --> 10:40.380
因为你要知道一点

10:40.380 --> 10:41.580
每个电源器开启以后的话

10:41.580 --> 10:43.280
它都会返回一个V的标识

10:43.280 --> 10:44.880
那这个V的标识呢

10:44.880 --> 10:47.280
就可以怎么样

10:47.280 --> 10:51.880
就可以拿到它进行对它这样一个删除

10:51.880 --> 10:53.580
也就是说我们可以通过这个标识

10:53.580 --> 10:55.580
来取消这个电源器的作用

10:55.580 --> 10:58.480
那如果我在这个前面最开始的一句话

10:58.480 --> 11:00.880
写上一个 Clear Interval

11:00.880 --> 11:02.480
轻说一个 Timer

11:02.480 --> 11:03.180
那你看好了

11:03.180 --> 11:04.780
那这个整个代码的逻辑就是

11:04.780 --> 11:06.180
甭往我点击多少次

11:06.180 --> 11:06.880
它都会把什么

11:06.880 --> 11:08.880
它都会先清理一遍这个电源器

11:08.880 --> 11:10.580
再去重新开启一个对吧

11:10.580 --> 11:11.780
如果再点一次呢对吧

11:11.780 --> 11:13.680
它会把上一个

11:13.680 --> 11:16.580
上一次你 Timer 所记录的电源器怎么样

11:16.580 --> 11:17.480
先给清了对吧

11:17.480 --> 11:18.580
再开启新的一个

11:18.580 --> 11:20.280
要说一旦你这么写以后的话

11:20.280 --> 11:21.180
无论你点击多少次

11:21.180 --> 11:23.380
它都会始终保持一个电源器在一起作用

11:23.380 --> 11:24.580
那咱们看一下

11:24.580 --> 11:25.480
OK对吧

11:25.480 --> 11:26.680
不管你点击多少次

11:26.680 --> 11:28.380
它都是这样的一个语音速的直线运动

11:28.380 --> 11:30.580
语音速的直线运动

11:30.580 --> 11:31.180
好

11:31.180 --> 11:32.380
那

11:32.380 --> 11:34.180
那我们光会运动的话对吧

11:34.180 --> 11:37.680
就是其实还是不不足以达成我们这样的一个效果的

11:37.680 --> 11:39.580
运动呢是一个最基本的对吧

11:39.580 --> 11:41.980
运动首先我让它运动起来对吧

11:41.980 --> 11:42.980
那运动起来以后的话

11:42.980 --> 11:45.480
其实我们想要达到一个比较好的运动体验的话

11:45.480 --> 11:47.280
你需要去学会去控制这个运动

11:47.280 --> 11:48.780
学会控制运动的话

11:48.780 --> 11:50.380
有一个比较关键性的一个点

11:50.380 --> 11:53.280
是你学会让这个物体的运动停止

11:53.280 --> 11:54.680
让物体运动停止

11:54.680 --> 11:56.980
就比如说你做了这个效果

11:56.980 --> 11:58.480
确实还蛮好玩的对吧

11:58.480 --> 11:59.280
它在不停的走

11:59.280 --> 12:00.580
它还不停的走

12:00.580 --> 12:01.880
比如说诱惑呢

12:01.880 --> 12:03.480
去看到你这样做那个页面

12:03.480 --> 12:04.780
它觉得这个挺有意思吧

12:04.780 --> 12:05.880
点完它能走

12:05.880 --> 12:07.280
结果它想让它停

12:07.280 --> 12:08.680
它根本就停不了对吧

12:08.680 --> 12:09.880
怎么都不能让它停

12:09.880 --> 12:10.980
并且整个页面

12:10.980 --> 12:11.780
你会发现呢

12:11.780 --> 12:13.180
会伸中滚动条对吧

12:13.180 --> 12:14.480
它会越来越往右走对吧

12:14.480 --> 12:15.980
那整个这个东西

12:15.980 --> 12:18.680
你会发现有点这个丧心病狂了对吧

12:18.680 --> 12:19.880
你完全控制不了的

12:19.880 --> 12:20.880
那这个指定是不行的

12:20.880 --> 12:22.580
诱惑一看就蒙掉了对吧

12:22.580 --> 12:23.380
那怎么办呢

12:23.380 --> 12:24.280
怎么办

12:24.280 --> 12:26.580
就是我需要通过一种方式

12:26.580 --> 12:27.380
让这个物体

12:27.380 --> 12:29.780
比如说具体的精确的停在某个点上

12:29.780 --> 12:31.280
这个是很重要的

12:31.280 --> 12:33.280
那接下来我们就要是做这样的事情

12:33.280 --> 12:35.080
为了让你能更能看清楚一些

12:35.080 --> 12:36.780
在这里我写个这样的死板

12:36.780 --> 12:37.580
那这个死板

12:37.580 --> 12:39.480
我给它一个具体的样式

12:39.480 --> 12:40.880
首先有一个Position

12:40.880 --> 12:41.880
来个Ups Loot

12:41.880 --> 12:44.480
一旦你给了这样的Ups Loot以后的话

12:44.480 --> 12:46.480
我就可以给它设定宽合高了

12:46.480 --> 12:47.480
为什么呢

12:47.480 --> 12:49.480
因为它本来是个行情元素

12:49.480 --> 12:50.680
一旦设置完以后的话

12:50.780 --> 12:52.780
它就有这样的文本的一个特性了

12:52.780 --> 12:53.780
那在这的话

12:53.780 --> 12:55.380
我给它一个YS

12:55.380 --> 12:57.380
是100相速对吧

12:57.380 --> 12:58.180
别100了

12:58.180 --> 12:58.880
一相速对吧

12:58.880 --> 12:59.780
一相速它是个线

12:59.780 --> 13:01.380
一相速

13:01.380 --> 13:04.580
那高度是100相速对吧

13:04.580 --> 13:04.780
好

13:04.780 --> 13:05.380
再来

13:05.380 --> 13:07.780
比如说是一个Background了

13:07.780 --> 13:09.580
Background上是一个长色

13:09.580 --> 13:10.580
不是 是个黑色吧

13:10.580 --> 13:11.580
是个黑色

13:12.980 --> 13:14.180
好 保存一下

13:14.180 --> 13:16.180
那Life值我也再给一个

13:16.180 --> 13:17.780
Life值比如说是一个300

13:17.780 --> 13:18.380
比如说

13:18.380 --> 13:19.880
我就想让这样的一个DIV

13:19.880 --> 13:21.380
最后停在这个Span的身上

13:21.380 --> 13:21.880
对吧

13:21.880 --> 13:23.880
那就是我想让这个DIV的左侧边界

13:23.880 --> 13:25.580
停在这条线上

13:25.580 --> 13:26.880
那也就是说我希望

13:26.880 --> 13:28.980
这个DIV它的Life值变到300的时候

13:28.980 --> 13:29.380
怎么样

13:29.380 --> 13:30.280
OK 停滞

13:30.280 --> 13:31.080
对吧 停滞

13:31.080 --> 13:32.680
但是它我再给它一个0

13:32.680 --> 13:33.580
给它一个0

13:33.580 --> 13:34.680
那咱再看一下

13:34.680 --> 13:36.080
这里面呢

13:36.080 --> 13:36.880
会有个这样的线

13:36.880 --> 13:37.680
如果你看不清的话

13:37.680 --> 13:38.880
可以给你稍微放大一点

13:38.880 --> 13:39.380
对吧

13:39.380 --> 13:40.080
就有这样的条

13:40.080 --> 13:41.280
就有这样的

13:41.280 --> 13:43.080
它这个地方它会有条线

13:43.080 --> 13:44.280
那这个线的话

13:44.280 --> 13:45.980
OK 就是作为我们这样的一个

13:45.980 --> 13:47.280
物体运动的目标点

13:47.280 --> 13:47.880
目标点

13:47.880 --> 13:50.680
希望它最后左侧边界停在这里

13:50.680 --> 13:51.180
那好了

13:51.180 --> 13:52.080
那我点完它以后

13:52.080 --> 13:53.180
你会发现它在不停的走

13:53.180 --> 13:53.580
对吧

13:53.580 --> 13:54.180
现在的话

13:54.180 --> 13:56.080
我没有去写这样一个停止的代码

13:56.080 --> 13:57.280
你会发现它最后会6去

13:57.280 --> 13:57.980
对吧

13:57.980 --> 13:59.980
那我怎么能让它停止呢

13:59.980 --> 14:00.380
想象一下

14:00.380 --> 14:01.780
同学

14:01.780 --> 14:02.780
怎么能让它停止

14:02.780 --> 14:03.380
对吧

14:03.380 --> 14:05.080
有时候你在不停的运动过程中的话

14:05.080 --> 14:07.580
它其实时时刻刻都有可能

14:07.580 --> 14:08.880
是会到目标点的

14:08.880 --> 14:09.380
对吧

14:09.380 --> 14:10.980
那我可以在这个里面

14:10.980 --> 14:12.580
比如说做一个判断

14:12.580 --> 14:13.680
我每隔30秒

14:13.680 --> 14:14.180
对吧

14:14.180 --> 14:15.380
OK 去使用这个函数

14:15.380 --> 14:16.680
这个函数可以让它走

14:16.680 --> 14:17.080
对吧

14:17.080 --> 14:17.580
好了

14:17.580 --> 14:19.380
我去丰富一下这个函数

14:19.380 --> 14:20.380
那比如说

14:20.380 --> 14:21.780
它在每次走的时候

14:21.780 --> 14:22.080
对吧

14:22.080 --> 14:22.880
它都有可能怎么样

14:22.880 --> 14:23.980
已经到达目标点了

14:23.980 --> 14:24.480
对吧

14:24.480 --> 14:26.280
那我在这做一个

14:26.280 --> 14:27.780
做一个F这样的一个判断

14:27.780 --> 14:30.180
我先看一下你这个当前的位置

14:30.180 --> 14:31.880
是否到达目标点了

14:31.880 --> 14:33.180
如果到达怎么办呢

14:33.180 --> 14:34.580
我要去停止你

14:34.580 --> 14:34.880
对吧

14:34.880 --> 14:35.780
我把这个定人器取消

14:35.780 --> 14:36.080
对吧

14:36.080 --> 14:37.280
这个定人器就不要再执行了

14:37.280 --> 14:38.280
对吧

14:38.280 --> 14:39.680
那当然呢

14:39.680 --> 14:40.680
我来一个否则

14:40.680 --> 14:41.880
如果你不来否则的话

14:41.880 --> 14:43.080
其实你取消了定人器

14:43.080 --> 14:43.380
对吧

14:43.380 --> 14:44.380
那整个函数

14:44.380 --> 14:46.780
还是需要再往下去执行的

14:46.780 --> 14:47.480
如果说

14:47.480 --> 14:48.480
你只这么写的情况下的

14:48.480 --> 14:48.680
好

14:48.680 --> 14:48.880
OK

14:48.880 --> 14:49.480
它到达目标点

14:49.480 --> 14:49.680
对吧

14:49.680 --> 14:50.580
把定人器清了吧

14:50.580 --> 14:51.980
它只是下次不执行什么

14:51.980 --> 14:52.480
不执行

14:52.480 --> 14:53.880
这个整体函数了

14:53.880 --> 14:54.780
但这一次这个函数

14:54.780 --> 14:56.280
还是要去执行完的

14:56.280 --> 14:56.780
就说呢

14:56.780 --> 14:58.080
还会怎么样去执行一次它

14:58.080 --> 14:59.280
那它可能就溜过去了

14:59.280 --> 15:00.180
所以说在这一块的话

15:00.180 --> 15:02.880
我需要来AVS的一个区分

15:02.880 --> 15:04.380
其实也是很合理的

15:04.380 --> 15:05.080
你想想

15:05.080 --> 15:06.280
一个物体啊

15:06.280 --> 15:07.680
这段代码是让物体进行运动

15:07.680 --> 15:07.980
对吧

15:07.980 --> 15:08.680
那这个判断呢

15:08.680 --> 15:10.480
是让物体进行停止

15:10.480 --> 15:10.980
对不对

15:10.980 --> 15:11.980
你想想

15:11.980 --> 15:13.080
一个物体

15:13.080 --> 15:14.980
它可能既运动又停止吗

15:14.980 --> 15:15.780
它完全是不可能的

15:15.780 --> 15:16.780
对吧

15:16.780 --> 15:18.180
它要不就是运动

15:18.180 --> 15:19.180
要不然就是怎么样

15:19.180 --> 15:19.980
停止啊

15:19.980 --> 15:20.380
所以说呢

15:20.380 --> 15:21.480
这本身呢

15:21.480 --> 15:22.380
运动和停止

15:22.380 --> 15:23.580
就就是一个悖论

15:23.580 --> 15:24.780
就是我用AVL

15:24.780 --> 15:25.880
所以这样的区分呢

15:25.880 --> 15:27.480
也是理所应当的一件事情啊

15:27.480 --> 15:27.780
好

15:27.780 --> 15:28.480
那咱来看一下

15:28.480 --> 15:29.380
我保存一次

15:29.380 --> 15:33.120
现在它能否停止

15:33.120 --> 15:33.620
OK

15:33.620 --> 15:34.420
你会发现怎么样

15:34.420 --> 15:35.120
它好

15:35.120 --> 15:37.120
确实停在这条线上了

15:37.120 --> 15:37.820
对吧

15:37.820 --> 15:38.020
当然

15:38.020 --> 15:40.220
这个我们写的

15:40.220 --> 15:41.220
就是已经很完美了

15:41.220 --> 15:41.920
对吧

15:41.920 --> 15:43.120
这个东西需要一个

15:43.120 --> 15:43.620
需要什么

15:43.620 --> 15:44.420
需要一个测试

15:44.420 --> 15:45.420
需要一个验证

15:45.420 --> 15:45.920
对吧

15:45.920 --> 15:47.920
那假如我把这样的一个

15:47.920 --> 15:49.720
我把这样的那个SB的

15:49.720 --> 15:50.620
换成一个8

15:50.620 --> 15:52.020
换成一个7

15:52.020 --> 15:53.020
咱来看一下

15:53.020 --> 15:54.120
它还能停止吗

15:54.120 --> 15:54.320
对吧

15:54.320 --> 15:55.220
咱保存一次

15:55.220 --> 15:56.820
刷新一下

15:56.820 --> 15:58.220
点击一下

15:58.220 --> 15:58.920
因为我现在怎么样

15:58.920 --> 16:00.320
它最后会略过去了

16:00.320 --> 16:01.220
会略过去对吧

16:01.220 --> 16:02.320
那为什么会略过去呢

16:02.320 --> 16:02.820
对吧

16:02.820 --> 16:03.720
其实也很简单啊

16:03.720 --> 16:04.520
这个道理

16:04.520 --> 16:05.520
就是因为

16:05.520 --> 16:07.620
这个300不是7的整数倍

16:07.620 --> 16:08.220
为什么这么说呢

16:08.220 --> 16:08.620
对吧

16:08.620 --> 16:09.720
你想象一下

16:09.720 --> 16:11.220
我们这个DiV的一个Live的纸上

16:11.220 --> 16:12.220
是零像送对吧

16:12.220 --> 16:14.920
当你777就往前加的时候

16:14.920 --> 16:15.920
它可能会正好

16:15.920 --> 16:17.020
正好加到300

16:17.020 --> 16:17.520
对吧

16:17.520 --> 16:19.520
如果说它不会正好加到300的话

16:19.520 --> 16:20.720
那这个判断停止的条件

16:20.720 --> 16:21.720
根本就不成立对吧

16:21.720 --> 16:24.420
那你永远都没有办法去停止它

16:24.420 --> 16:25.320
所以说呢

16:25.320 --> 16:28.120
作为这样一个精准的一个判断的话

16:28.120 --> 16:29.720
我这段代码的实现怎么样

16:29.720 --> 16:31.020
是不合理的对吧

16:31.020 --> 16:31.620
是不符合

16:31.620 --> 16:34.220
是没有这样的一个严谨性的

16:34.220 --> 16:35.920
那我怎么能让它

16:35.920 --> 16:38.520
能适应各种速度这样的一个停止呢

16:38.520 --> 16:40.120
就无论你这个速度是多少的话

16:40.120 --> 16:41.320
我通过这个一个判断的话

16:41.320 --> 16:42.120
都能判断

16:42.120 --> 16:42.420
OK

16:42.420 --> 16:43.820
你要停止呢

16:43.820 --> 16:45.020
那这门

16:45.020 --> 16:46.820
怎么可以想象一个场景

16:46.820 --> 16:48.020
可以想象一个场景

16:48.020 --> 16:49.820
就比如说把你凳格搬过来

16:49.820 --> 16:50.820
搬凳格搬到

16:50.820 --> 16:52.420
比如说搬到一个屋子里面去

16:52.420 --> 16:53.120
那这个屋子呢

16:53.120 --> 16:55.220
比如说是从左侧到右侧

16:55.220 --> 16:57.620
这个走需要这样的一个10米

16:57.620 --> 16:57.920
那好了

16:57.920 --> 17:00.220
比如说我规定你凳格一米一米那么走的话

17:00.220 --> 17:01.020
它正好怎么样

17:01.020 --> 17:03.020
能贴到对面的一个墙根

17:03.020 --> 17:03.420
对吧

17:03.420 --> 17:04.320
比如说这个墙根呢

17:04.320 --> 17:05.120
对面的墙根对吧

17:05.120 --> 17:06.620
右侧那个墙根

17:06.620 --> 17:08.320
它就是这样的一个目标点

17:08.320 --> 17:09.620
那你凳格从左相左走

17:09.620 --> 17:10.220
一米一米走的话

17:10.220 --> 17:10.420
对吧

17:10.420 --> 17:11.420
正好10米的吧

17:11.420 --> 17:12.620
走完

17:12.620 --> 17:12.920
好

17:12.920 --> 17:14.520
但是如果说我规定你凳格对吧

17:14.520 --> 17:16.120
你接不过卖大一点

17:16.120 --> 17:17.220
每步都1.2米

17:17.220 --> 17:18.120
1.2米它这么走

17:18.120 --> 17:18.820
或者说1.1米

17:18.820 --> 17:19.520
1.1米这么走

17:19.520 --> 17:19.820
对吧

17:19.820 --> 17:20.520
1.1

17:20.520 --> 17:21.320
1.1

17:21.320 --> 17:23.220
最后走9.9的手军发现

17:23.220 --> 17:25.020
距离那个墙根怎么样

17:25.020 --> 17:26.320
还有0.1米的距离

17:26.320 --> 17:26.720
对不对

17:26.720 --> 17:28.320
那你凳格再往前走的话

17:28.320 --> 17:30.320
直接就穿墙过去了

17:30.320 --> 17:31.520
你凳格的身体是不允许的

17:31.520 --> 17:32.920
你凳格身体是比较虚的

17:32.920 --> 17:34.620
它墙是穿过去的

17:34.620 --> 17:36.020
大家说

17:36.020 --> 17:37.220
如果你凳格不傻的情况下

17:37.220 --> 17:37.420
对吧

17:37.420 --> 17:38.020
它怕疼

17:38.020 --> 17:38.220
对吧

17:38.220 --> 17:40.120
它也了解自己的一个身体状况的话

17:40.120 --> 17:42.020
最后那0.1米它会怎么样

17:42.020 --> 17:43.020
它会

17:43.020 --> 17:44.520
再会

17:44.520 --> 17:46.320
稳稳的走到那个对面

17:46.320 --> 17:46.720
对吧

17:46.720 --> 17:47.620
有时候它最后一步

17:47.620 --> 17:49.820
它不可能会走1.1米那么大

17:49.820 --> 17:50.420
它也就是说

17:50.420 --> 17:51.920
它只能走这个0.1米

17:51.920 --> 17:52.120
对吧

17:52.120 --> 17:53.020
还一正常人的话

17:53.020 --> 17:54.820
它也都会这么走

17:54.820 --> 17:56.120
那这是什么意思呢

17:56.120 --> 17:56.620
对吧

17:56.620 --> 17:58.420
有时候我把我刚才那个场景

17:58.420 --> 18:00.220
给得换到这样的代码之中的话

18:00.220 --> 18:01.720
其实你可以这么来理解

18:01.720 --> 18:03.620
我这个速度不停不停地去加的

18:03.620 --> 18:04.320
不停不停地去加

18:04.320 --> 18:06.120
如果我当前的位置

18:06.120 --> 18:07.520
距离这个目标点

18:07.520 --> 18:09.320
距离这个目标点

18:09.320 --> 18:12.420
小于我一次

18:12.420 --> 18:14.820
这个走的这个距离的话

18:14.820 --> 18:15.820
那有时候就是

18:15.820 --> 18:17.320
我再加这么一次的话

18:17.320 --> 18:18.620
它就要6我去的时候的话

18:18.620 --> 18:19.220
我怎么样

18:19.220 --> 18:21.520
我就让它停止对吧

18:21.520 --> 18:22.620
但是停止以后的话

18:22.620 --> 18:23.120
有时候就说

18:23.120 --> 18:24.720
你不还差那么一点点吗

18:24.720 --> 18:25.120
对吧

18:25.120 --> 18:25.820
就比如说

18:25.820 --> 18:26.920
你这个

18:26.920 --> 18:28.620
比如说你这个

18:28.620 --> 18:29.620
目标点是10对吧

18:29.620 --> 18:31.920
你这1.1 1.1这么加对吧

18:31.920 --> 18:32.620
从0对吧

18:32.620 --> 18:34.520
从0好加1.1

18:34.520 --> 18:35.020
加什么

18:35.020 --> 18:35.820
加1.1对吧

18:35.820 --> 18:37.620
加1.1

18:37.620 --> 18:38.320
这么加对吧

18:38.320 --> 18:39.620
比如说加到9.9了对吧

18:39.620 --> 18:39.920
好

18:39.920 --> 18:41.320
那你再往前走的话

18:41.320 --> 18:41.720
怎么样

18:41.720 --> 18:42.520
就6过去了对不对

18:42.520 --> 18:44.120
要是你当前只是9.9对吧

18:44.120 --> 18:45.420
目标点是10对吧

18:45.420 --> 18:46.720
如果它的差值怎么样

18:46.720 --> 18:48.920
小于你这个1.1了

18:48.920 --> 18:49.320
好了

18:49.320 --> 18:51.020
那证明你再来一步的话

18:51.020 --> 18:51.320
怎么样

18:51.320 --> 18:52.520
就干出去了

18:52.520 --> 18:53.220
那此时

18:53.220 --> 18:54.520
我先不让你干出去

18:54.520 --> 18:55.720
我先让你怎么样

18:55.720 --> 18:56.720
停止对吧

18:56.720 --> 18:58.220
停止以后呢

18:58.220 --> 18:59.420
你还差这个0.1

18:59.420 --> 19:00.320
差了你怎么办的

19:00.320 --> 19:01.020
没关系

19:01.020 --> 19:02.420
我小布挪回去就好了吗

19:02.420 --> 19:02.820
对吧

19:02.820 --> 19:04.420
从事实上你是看不出来的

19:04.420 --> 19:05.120
所以说在这的话

19:05.120 --> 19:07.020
我可以这么来做

19:07.020 --> 19:09.320
就是当目标点

19:09.320 --> 19:09.820
好

19:09.820 --> 19:12.020
当目标点

19:12.020 --> 19:13.120
跟你的这个

19:13.120 --> 19:15.020
当前的一个位置

19:15.020 --> 19:17.320
它的差值小于你这一步的时候

19:17.320 --> 19:19.120
那证明你再来一步就要6过去了对吧

19:19.120 --> 19:20.720
我就请你当你对人气

19:20.720 --> 19:21.420
然后呢

19:21.420 --> 19:24.120
我让你去ODA位置的当前的位置

19:24.120 --> 19:25.720
等于这个目标点的距离

19:25.720 --> 19:26.720
那咱们看一下

19:26.720 --> 19:27.820
现在好不好使

19:27.820 --> 19:28.720
我保存一次

19:28.720 --> 19:29.420
相信一下

19:29.420 --> 19:30.020
来

19:30.020 --> 19:30.520
从事实上

19:30.520 --> 19:32.420
其实你是完全看不出来了对吧

19:32.420 --> 19:32.920
怎么样

19:32.920 --> 19:34.220
它确实也停在这个目标点

19:35.120 --> 19:36.120
那现在的话

19:36.120 --> 19:37.320
我可以通过这套理论

19:37.320 --> 19:39.820
稳稳的让它停在这个目标点上

19:39.820 --> 19:42.020
甭管你的速度是多少

19:42.020 --> 19:43.120
好

19:43.120 --> 19:44.520
那这个东西

19:44.520 --> 19:46.720
基本上我们已经差不多完成了

19:46.720 --> 19:48.620
但是我们再加深一下

19:48.620 --> 19:50.820
就是这个基本的一个物体的匀速运动

19:50.820 --> 19:52.320
以及它这样的一个停止

19:52.320 --> 19:53.420
我们已经完成了对吧

19:53.420 --> 19:55.020
我们再把这个东西再扩展一下

19:55.020 --> 19:56.720
因为刚才也是从左向运动

19:56.720 --> 19:58.520
那现在我让你从右向左运动

19:58.520 --> 19:59.320
再来看一下

19:59.320 --> 20:02.320
我们这种这套代码还可否适用

20:02.320 --> 20:03.220
还可否适用

20:03.220 --> 20:05.620
那我让它这个lab的值变成个500

20:05.620 --> 20:06.020
对吧

20:06.020 --> 20:09.720
那你一开始确实是在这样的目标点右侧

20:09.720 --> 20:12.820
那我现在让你从右向左走的话

20:12.820 --> 20:13.120
好了

20:13.120 --> 20:15.520
那你是不是这个500的网都往回减了

20:15.520 --> 20:15.820
对吧

20:15.820 --> 20:16.420
减7

20:16.420 --> 20:17.020
或者说减几

20:17.020 --> 20:18.120
减减减减减减减

20:18.120 --> 20:20.320
一直减到这个目标点300上

20:20.320 --> 20:21.220
那要减紧的话

20:21.220 --> 20:21.820
这个地方

20:21.820 --> 20:22.920
直接不能是正数了

20:22.920 --> 20:23.420
应该什么

20:23.420 --> 20:24.120
应该是复数

20:24.120 --> 20:24.520
对吧

20:24.520 --> 20:25.320
加一个复数

20:25.320 --> 20:26.320
它就是减

20:26.320 --> 20:26.920
那在这的话

20:26.920 --> 20:28.320
你看我可以做一个判断

20:28.320 --> 20:29.620
怎么来判断呢

20:29.620 --> 20:30.720
就是

20:30.720 --> 20:32.120
我可以先看一下

20:32.220 --> 20:33.820
你这个odiv

20:33.820 --> 20:34.720
它的一个当前的

20:34.720 --> 20:36.720
或者说先看一下你这个目标点

20:36.720 --> 20:38.420
300

20:38.420 --> 20:38.920
这个距离

20:38.920 --> 20:40.820
这个odiv

20:40.820 --> 20:42.020
就这个odiv

20:42.020 --> 20:44.720
它当前的一个位置

20:44.720 --> 20:47.020
是否是小于0的

20:47.020 --> 20:48.120
如果小于0这么什么

20:48.120 --> 20:49.520
证明你在它的左侧对吧

20:49.520 --> 20:49.720
好了

20:49.720 --> 20:51.620
那我要你这个速度是个正值

20:51.620 --> 20:52.020
对吧

20:52.020 --> 20:53.020
你先加过去

20:53.020 --> 20:54.620
如果是

20:54.620 --> 20:55.620
我小于0

20:55.620 --> 20:56.220
是这样的

20:56.220 --> 20:56.820
如果是

20:56.820 --> 20:57.020
对

20:57.020 --> 20:58.620
如果它讲它是小于0下对吧

20:58.620 --> 20:59.220
证明好

20:59.220 --> 21:00.920
你比它小对吧

21:00.920 --> 21:02.720
你在它的一个

21:02.720 --> 21:03.420
不对啊

21:03.420 --> 21:04.120
还是这样的

21:04.120 --> 21:06.920
是如果300减它大于0的时候

21:06.920 --> 21:07.420
错了

21:07.420 --> 21:09.920
如果300减它大于0的时候

21:09.920 --> 21:10.120
好了

21:10.120 --> 21:11.120
就比如说它是290对吧

21:11.120 --> 21:12.120
300减它

21:12.120 --> 21:13.420
等于10对吧

21:13.420 --> 21:13.720
OK

21:13.720 --> 21:14.820
那它一定是在它的什么

21:14.820 --> 21:15.920
一个左侧嘛

21:15.920 --> 21:16.320
对不对

21:16.320 --> 21:17.720
在它的一个左侧

21:17.720 --> 21:18.520
那如果左侧的话

21:18.520 --> 21:19.320
我希望让它怎么样

21:19.320 --> 21:20.220
让它去加

21:20.220 --> 21:20.820
这个div

21:20.820 --> 21:21.220
Left值

21:21.220 --> 21:21.820
不知道去加

21:21.820 --> 21:23.320
加到这个300对吧

21:23.320 --> 21:23.820
那才可以

21:23.820 --> 21:24.620
所以说这里面的速度

21:24.620 --> 21:25.820
应该是个正数

21:25.820 --> 21:26.320
否则

21:26.320 --> 21:27.620
你小于0怎么办呢

21:27.620 --> 21:29.120
你应该就是减呗对不对

21:29.120 --> 21:29.820
所以说你这个值

21:29.820 --> 21:30.520
可能是一开始

21:30.520 --> 21:31.220
就是比较大了对吧

21:31.220 --> 21:32.220
它减它OK怎么样

21:32.220 --> 21:33.120
小于0了

21:33.120 --> 21:34.220
那你让它怎么样

21:34.220 --> 21:34.820
减回去对吧

21:34.820 --> 21:36.620
减到300就OK了嘛

21:36.620 --> 21:37.020
那在这里的话

21:37.020 --> 21:38.820
让它是一个负不起啊

21:38.820 --> 21:39.020
OK

21:39.020 --> 21:39.820
那咱来看一下

21:39.820 --> 21:40.720
现在这个速度

21:40.720 --> 21:42.820
是满足我这样一个

21:42.820 --> 21:44.420
这样一个灵活的一个需求了

21:44.420 --> 21:45.720
不管你是一开始在左门

21:45.720 --> 21:46.520
还是在右门对吧

21:46.520 --> 21:47.220
好了

21:47.220 --> 21:49.520
就是一旦我出发这样一个函数以后

21:49.520 --> 21:51.220
它去支执行的话

21:51.220 --> 21:52.120
它都能怎么样

21:52.120 --> 21:52.920
给它一个

21:52.920 --> 21:55.320
比较正确的一个速度的一个方向

21:55.320 --> 21:56.220
那咱来看一下

21:56.220 --> 21:58.420
现在能否让它

21:58.420 --> 21:59.920
从右向左走

21:59.920 --> 22:01.120
一点就发现

22:01.120 --> 22:01.820
不行对吧

22:01.820 --> 22:04.420
直接跳到这个目标点上了

22:04.420 --> 22:05.520
为什么会这样的对吧

22:05.520 --> 22:06.620
也很简单

22:06.620 --> 22:07.520
你想想一下

22:07.520 --> 22:08.020
你想想一下

22:08.020 --> 22:09.320
现在300减去一个

22:09.320 --> 22:10.220
比如说减轻过500

22:10.220 --> 22:11.720
是个负200的吧

22:11.720 --> 22:14.020
负200小于这个负的这个期

22:14.020 --> 22:15.720
很明显是小于的对不对

22:15.720 --> 22:16.420
也就是说

22:16.420 --> 22:18.020
这个号一旦变了以后的话

22:18.020 --> 22:19.120
其实这个

22:19.120 --> 22:21.420
这个不懂事就不太成立的对不对

22:21.420 --> 22:22.920
那难道说是我们刚才这个

22:22.920 --> 22:25.120
判断停止的逻辑都错了吗

22:25.120 --> 22:27.120
其实没错没错

22:27.120 --> 22:29.120
咱们之前判断停止的逻辑

22:29.220 --> 22:30.820
是不考虑正确号的

22:30.820 --> 22:32.820
只考虑那个数值的

22:32.820 --> 22:33.520
那这个里面

22:33.520 --> 22:35.920
如果说我也是不考虑这个正确号的吧

22:35.920 --> 22:37.320
我只考虑数值的话

22:37.320 --> 22:39.420
那它也能满足我们这样的一个条件

22:39.420 --> 22:40.820
那怎么能不考虑正确号

22:40.820 --> 22:42.720
怎么只考虑数值呢

22:42.720 --> 22:44.220
我们可以用一个MASTER ABS

22:44.220 --> 22:44.820
对吧

22:44.820 --> 22:45.620
取一个决定值吗

22:45.620 --> 22:46.020
对吧

22:46.020 --> 22:47.620
我只看了这个数字的吧

22:47.620 --> 22:48.520
只看你那个数字

22:48.520 --> 22:49.820
而不看你这个正确号

22:49.820 --> 22:51.220
点ABS

22:53.020 --> 22:53.620
那这样的话

22:53.620 --> 22:54.420
咱来看呀

22:54.420 --> 22:57.320
是否能让它很好的停止一点

22:57.320 --> 22:58.020
OK 怎么样

22:58.020 --> 22:59.020
停了吧

22:59.120 --> 23:01.120
是否稳稳的停在这个线下了

23:01.120 --> 23:01.920
图像道理

23:01.920 --> 23:03.920
你再把这样那个LIVE

23:03.920 --> 23:04.920
给它变成一个0

23:04.920 --> 23:06.520
我们再来去测试一下

23:06.520 --> 23:07.520
从它向上走行不行

23:07.520 --> 23:08.520
你会发现

23:08.520 --> 23:09.520
也没问题的吧

23:09.520 --> 23:11.320
也能停在这个里面

23:11.320 --> 23:12.320
那现在的话对吧

23:12.320 --> 23:14.520
对于一个云速运动的一个基本上的一个扩展

23:14.520 --> 23:16.520
我们已经全部搞定了

23:16.520 --> 23:17.520
全部都搞定了

23:17.520 --> 23:19.120
就是这样的办法

23:19.120 --> 23:19.420
OK

23:19.420 --> 23:21.220
你就可以占到任何一个

23:21.220 --> 23:22.720
你想做云速运动的这块

23:22.720 --> 23:24.120
跟我上面去

23:24.120 --> 23:25.520
好了

23:25.520 --> 23:27.220
那说到这的话对吧

23:27.220 --> 23:30.120
我们可以说谈到一定的这样的一个附属性

23:30.120 --> 23:30.920
比如说

23:30.920 --> 23:32.120
你在页面里面

23:32.120 --> 23:34.720
有很多地方如果说需要用到这样的云速运动的话

23:34.720 --> 23:35.220
对吧

23:35.220 --> 23:38.020
那你难道都要把这个代码沾过去吗

23:38.020 --> 23:38.520
对吧

23:38.520 --> 23:40.120
那你就会成为一个copyCirc

23:40.120 --> 23:40.620
对吧

23:40.620 --> 23:41.720
像是说Ctrl C

23:41.720 --> 23:42.820
可成为也没多累啊

23:42.820 --> 23:45.020
但整个代码的容移度也会非常高

23:45.020 --> 23:45.520
那怎么办呢

23:45.520 --> 23:46.120
对吧

23:46.120 --> 23:46.920
那对于这种

23:46.920 --> 23:49.220
对这种可以附用对吧

23:49.220 --> 23:51.120
或者说需要重复使用的功能

23:51.120 --> 23:53.020
我们就莫不如给它Ctrl S下对吧

23:53.020 --> 23:55.020
给它放到一个函数之中

23:55.020 --> 23:55.520
对吧

23:55.520 --> 23:56.620
相信聪明同学

23:56.620 --> 23:58.020
已经想到了

23:58.020 --> 23:59.520
放在一个函数之中

23:59.520 --> 24:00.720
那我们今天最后的目的

24:00.720 --> 24:02.920
也是要封装这种运动函数

24:02.920 --> 24:04.120
运动函数

24:04.120 --> 24:04.720
那在这的话

24:04.720 --> 24:06.620
我把这个运动功能先放到里面去

24:06.620 --> 24:08.820
先放到里面去

24:08.820 --> 24:09.220
等一下

24:11.220 --> 24:11.720
回去啊

24:11.720 --> 24:12.720
Ctrl S

24:12.720 --> 24:13.520
在这

24:13.520 --> 24:19.110
Function

24:19.110 --> 24:19.410
好

24:19.410 --> 24:20.010
沾到门系的吧

24:20.010 --> 24:20.610
好

24:20.610 --> 24:21.510
那我把这个东西

24:21.510 --> 24:22.110
沾到

24:22.110 --> 24:23.710
我把这样的一个

24:23.710 --> 24:25.410
云速运动代码

24:25.410 --> 24:26.510
沾到里面去

24:26.510 --> 24:29.410
那现在的封成这样一个可分的一个函数

24:29.410 --> 24:30.710
那以后说现在啊

24:30.710 --> 24:32.010
当我去点击完这个实践以后的话

24:32.010 --> 24:33.810
我就调用这个Snap Mode

24:33.810 --> 24:34.410
怎么样

24:34.410 --> 24:36.810
就可以完成这样的一些运动

24:36.810 --> 24:37.610
一点

24:37.610 --> 24:39.210
OK是没问题对吧

24:39.210 --> 24:40.210
但是对吧

24:40.210 --> 24:42.410
一旦你考虑到这个运动性以后的话

24:42.410 --> 24:43.410
你喜欢这个代码的话

24:43.410 --> 24:45.610
可以在任何一个需要云速运动的地方

24:45.610 --> 24:46.110
去怎么样

24:46.110 --> 24:48.410
去执行它这个标的功能的话

24:48.410 --> 24:49.210
那你光这么写

24:49.210 --> 24:50.210
其实还不行

24:50.210 --> 24:50.610
因为啥呢

24:50.610 --> 24:52.210
因为你要考虑到一点

24:52.210 --> 24:53.810
这个做云速运动的时候的话

24:53.810 --> 24:56.010
比如我们让一个东西做云速运动的时候

24:56.010 --> 24:58.410
我们可能实际上不同的什么标切

24:58.410 --> 24:59.810
不同的标切

24:59.810 --> 25:01.710
用到不同的地点

25:01.710 --> 25:03.510
那这个场景你需要去考虑到对吧

25:03.510 --> 25:04.610
你不是所有的这个运动

25:04.610 --> 25:06.510
都是让这个ODI运动吧

25:06.510 --> 25:06.910
对吧

25:06.910 --> 25:07.910
你也不是让所有的运动

25:07.910 --> 25:10.410
都是让这个ODI运动到这个300的位置上

25:10.410 --> 25:10.710
对吧

25:10.710 --> 25:11.510
所以说呢

25:11.510 --> 25:12.310
在这一块对吧

25:12.310 --> 25:14.710
谁运动会运动到哪这个问题上

25:14.710 --> 25:15.310
我们让他

25:15.310 --> 25:17.210
我们应该让他变得更灵活一些

25:17.210 --> 25:18.010
那在这的话

25:18.010 --> 25:19.910
我给他一个到

25:19.910 --> 25:20.210
对吧

25:20.210 --> 25:21.910
我再给他一个Target

25:21.910 --> 25:23.910
作为这样的一个行参辩量

25:23.910 --> 25:24.910
也有说未来

25:24.910 --> 25:27.110
我在使用这样那个Snap Mode的时候对吧

25:27.110 --> 25:27.910
我需要啥什么

25:27.910 --> 25:28.910
我需要传递

25:29.010 --> 25:29.610
一个参数

25:29.610 --> 25:30.710
就是先传的一个参数

25:30.710 --> 25:31.410
告诉他

25:31.410 --> 25:32.610
我让谁运动

25:32.610 --> 25:33.310
对吧

25:33.310 --> 25:34.010
再传那个参数

25:34.010 --> 25:35.210
他运动到哪

25:35.210 --> 25:36.610
有时候我需要传递两个参数

25:36.610 --> 25:38.210
一个是告诉这个函数

25:38.210 --> 25:39.110
让谁运动

25:39.110 --> 25:40.410
一个是告诉这个函数

25:40.410 --> 25:41.510
对吧

25:41.510 --> 25:43.610
这个让他运动到哪里

25:43.610 --> 25:44.610
所以说在这里块呢

25:44.610 --> 25:46.310
我需要接受两个行参

25:46.310 --> 25:47.610
但在改代码的时候的话

25:47.610 --> 25:49.910
其实只只只需要把对应的这个

25:49.910 --> 25:50.810
只要把这个对应的一个数

25:50.810 --> 25:51.110
对吧

25:51.110 --> 25:52.910
变成这样的行参辩量就ok了

25:52.910 --> 25:55.410
比如300换成这个Target

25:55.410 --> 25:57.010
300换成Target

25:57.010 --> 25:57.510
这呢

25:57.510 --> 25:58.010
对吧

25:58.010 --> 25:59.910
这换成一个Target

25:59.910 --> 26:00.710
加上一个像素的

26:00.710 --> 26:02.510
作为一个字路刷拼接

26:02.510 --> 26:07.300
那这个DIV全部换成到

26:07.300 --> 26:08.300
ok 再冒算一下

26:08.300 --> 26:10.900
现在的话就可以做到

26:10.900 --> 26:13.300
我可以让很多个不同的标签

26:13.300 --> 26:14.600
运动到不同的目标点上

26:14.600 --> 26:15.200
那这样的话

26:15.200 --> 26:17.200
这个函数会变得更灵活的血

26:17.200 --> 26:18.900
会变得更灵活的血

26:18.900 --> 26:19.600
ok

26:19.600 --> 26:20.700
那到这里为止的话

26:20.700 --> 26:22.000
我们这样那个云瞬运动

26:22.000 --> 26:23.800
已经基本高于段落了

26:23.800 --> 26:24.600
那接下来呢

26:24.600 --> 26:25.900
我们玩一个

26:25.900 --> 26:28.300
玩一个这样那个更好看的运动

26:28.300 --> 26:29.200
因为云瞬运动呢

26:29.200 --> 26:30.400
其实我们只是想让

26:30.400 --> 26:31.700
只是想通过它对吧

26:31.700 --> 26:32.700
让你对一个运动

26:32.700 --> 26:34.100
做一个基本的一个了解

26:34.100 --> 26:35.500
但它的使用性

26:35.500 --> 26:37.200
并不是那么的大

26:37.200 --> 26:38.000
因为呢

26:38.000 --> 26:38.900
这个云瞬运动

26:38.900 --> 26:39.500
毕竟啊

26:39.500 --> 26:40.100
这种

26:40.100 --> 26:40.700
呃

26:40.700 --> 26:41.900
它这样的运动的效果

26:41.900 --> 26:43.600
没那么的好看对吧

26:43.600 --> 26:45.600
我们在前端的时候的话

26:45.600 --> 26:47.300
以为的时候还是比较追求

26:47.300 --> 26:48.800
这样的一个用户填感的啊

26:48.800 --> 26:49.900
那在接下来的话

26:49.900 --> 26:50.300
对吧

26:50.300 --> 26:51.600
我要讲另外一种运动了

26:51.600 --> 26:53.400
叫做缓冲运动啊

26:53.400 --> 26:54.500
缓冲运动

26:54.500 --> 26:54.900
其实呢

26:54.900 --> 26:56.500
基本这样的实际上的方式

26:56.500 --> 26:57.900
跟它也是

26:57.900 --> 26:59.000
大同小异啊

26:59.000 --> 27:01.300
只是在某些点是不太一样的啊

27:01.300 --> 27:02.600
那我们先来分析一下啊

27:02.600 --> 27:03.500
我先不着急来实现

27:03.500 --> 27:04.800
先来分析一下

27:04.800 --> 27:07.200
这个缓冲运动是什么样的一个运动状态啊

27:07.200 --> 27:09.900
是什么样的一个运动过程啊

27:09.900 --> 27:10.600
缓冲对吧

27:10.600 --> 27:11.900
你要理解啊

27:11.900 --> 27:13.600
要说当你速度很大的时候

27:13.600 --> 27:14.800
你想停下来对吧

27:14.800 --> 27:15.800
你不能直接停对吧

27:15.800 --> 27:16.300
你要怎么样

27:16.300 --> 27:17.600
你要缓冲啊

27:17.600 --> 27:19.300
也要说缓冲运动呢

27:19.300 --> 27:21.400
它其实是你的速度在逐渐

27:21.400 --> 27:23.600
怎么逐渐逐渐去减小的运动啊

27:23.600 --> 27:24.300
那比如说

27:24.300 --> 27:27.200
我们在去跑100米的时候对吧

27:27.200 --> 27:27.700
比如说这样

27:27.700 --> 27:28.600
比如说我们

27:28.600 --> 27:29.800
呃

27:29.800 --> 27:30.200
这样吧

27:30.200 --> 27:31.800
比如说我给你一个场景吧

27:31.800 --> 27:32.500
我要你

27:32.500 --> 27:33.400
从这个

27:33.400 --> 27:33.900
呃

27:33.900 --> 27:35.700
从最左侧跑到最右侧对吧

27:35.700 --> 27:36.800
还这个它市民的墙对吧

27:36.800 --> 27:38.700
从最左侧跑到最右侧

27:38.700 --> 27:41.100
那我要求你用最最短的时间啊

27:41.100 --> 27:42.600
那你一定会先加速对吧

27:42.600 --> 27:44.400
先加速加到最高的时候对吧

27:44.400 --> 27:45.200
我跟你讲你这怎么办

27:45.200 --> 27:46.400
你再去减速啊

27:46.400 --> 27:47.700
我们不看你加速那个手中

27:47.700 --> 27:49.400
我们直接去看你最高速度

27:49.400 --> 27:50.200
它那段时间

27:50.200 --> 27:51.500
我们直接看你最高速度

27:51.500 --> 27:52.500
它那个点对吧

27:52.500 --> 27:54.100
从最高速度那个点

27:54.200 --> 27:57.000
再往再往这个最右侧这个目标点上的时候的话

27:57.000 --> 27:58.900
你会发现你的速度会不断的去减小

27:58.900 --> 27:59.500
因为啥啊

27:59.500 --> 28:00.900
因为你再加速的时候

28:00.900 --> 28:01.700
你就停下来了

28:01.700 --> 28:03.300
你会创造这个墙啊

28:03.300 --> 28:04.100
所以说那你要怎么样

28:04.100 --> 28:05.200
你要减速

28:05.200 --> 28:06.900
你要减速逐渐逐渐怎么样

28:06.900 --> 28:08.600
逐渐逐渐把速度降到0

28:08.600 --> 28:09.700
当你降到0的时候呢

28:09.700 --> 28:12.300
也也他也就说你贴到这个目标点上了

28:12.300 --> 28:13.900
就说缓冲运动啊

28:13.900 --> 28:15.600
这个整个的运动过程

28:15.600 --> 28:17.900
你可以减而延续的收成什么呢

28:17.900 --> 28:19.100
收成这个样子啊

28:19.100 --> 28:19.700
我给你看一下

28:21.200 --> 28:22.500
啊减一只收成

28:22.500 --> 28:24.100
这是物体的速度

28:25.700 --> 28:30.500
啊是距离目标点越近

28:31.300 --> 28:32.500
啊怎么样

28:32.500 --> 28:34.500
这个就越小

28:37.500 --> 28:43.500
啊当到达目标点时

28:44.100 --> 28:48.300
啊速度减小为点

28:48.300 --> 28:48.900
对吧

28:48.900 --> 28:49.900
减延续

28:49.900 --> 28:51.800
这个就是缓冲运动

28:51.800 --> 28:52.500
这种哎

28:52.500 --> 28:54.100
这样那个运动那个状态对吧

28:54.400 --> 28:55.700
有时候如果哎

28:55.700 --> 28:57.200
你让一个物体运动起来了

28:57.200 --> 29:01.700
并且速度是按照这种规律来进行变化的

29:01.700 --> 29:03.900
那他就是一个缓冲运动啊

29:03.900 --> 29:05.200
而且这种缓冲运动

29:05.200 --> 29:06.400
他从视约效果上

29:06.400 --> 29:09.600
明显会比这样的一个直线运速直线运动

29:09.600 --> 29:11.000
要好看很多啊

29:11.000 --> 29:11.800
那接下来呢

29:11.800 --> 29:12.500
接下来哎

29:12.500 --> 29:14.100
我还是利用啊

29:14.100 --> 29:15.800
利用这些东西啊

29:15.800 --> 29:18.000
来去完成我们所说这样的一个哎

29:18.000 --> 29:18.900
缓冲运动

29:18.900 --> 29:20.800
也有时候当我点这个按钮以后的话

29:20.800 --> 29:23.600
我让这个div以缓冲用的方式

29:23.600 --> 29:25.900
去停在这个目标点上啊

29:25.900 --> 29:26.800
那接下来的话

29:26.800 --> 29:28.800
我把他给注释起来

29:28.800 --> 29:29.600
注释起来

29:29.600 --> 29:30.400
那现在呢

29:30.400 --> 29:31.800
我来写一下这个缓冲运动啊

29:31.800 --> 29:32.600
缓冲运动

29:32.600 --> 29:33.300
FUNCTION

29:34.600 --> 29:35.400
START

29:35.400 --> 29:36.000
MOO

29:36.000 --> 29:37.200
STARTMOO

29:37.200 --> 29:37.600
好

29:37.600 --> 29:38.800
那在这的话呢

29:38.800 --> 29:39.300
哎

29:39.300 --> 29:41.200
我也是写上两个行参对吧

29:41.200 --> 29:41.800
一个DUM

29:41.800 --> 29:43.000
一个TARGET

29:43.000 --> 29:43.800
那在这呢

29:43.800 --> 29:45.200
我也是上来先去怎么样

29:45.200 --> 29:46.800
先去CLEAR TAMER一下

29:46.800 --> 29:47.600
你会发现呢

29:47.600 --> 29:47.900
哎

29:47.900 --> 29:49.300
一当我把第一个写完以后的话

29:49.300 --> 29:50.400
后面很多地方呢

29:50.400 --> 29:50.900
啊

29:50.900 --> 29:52.500
都会去重复

29:52.500 --> 29:55.000
去写这个同样的一个代代码

29:55.000 --> 29:55.500
好了

29:55.500 --> 29:56.100
那每个

29:56.100 --> 29:57.500
也是每个三个毫秒呢

29:57.500 --> 30:00.860
去执行这个函数

30:00.860 --> 30:01.860
去执行函数啊

30:01.860 --> 30:03.060
那在这个函数里面呢

30:03.060 --> 30:03.360
啊

30:03.360 --> 30:04.960
我们要让这个物体已经运动起来对吧

30:04.960 --> 30:05.760
那提前呢

30:05.760 --> 30:07.660
我先可以先问一个SSB的

30:07.660 --> 30:08.560
先问一个速度

30:08.560 --> 30:09.260
那这个速度呢

30:09.260 --> 30:10.660
我先让它是没有值的

30:10.660 --> 30:12.060
反正它是没有值的

30:12.060 --> 30:12.860
那接下来的话

30:12.860 --> 30:14.260
我们来看一下这个功能啊

30:14.260 --> 30:15.060
怎么来完成

30:15.060 --> 30:16.860
这个功能怎么来完成啊

30:16.860 --> 30:18.460
那首先啊

30:18.460 --> 30:20.260
首先我们要想象一下

30:20.260 --> 30:22.560
这个如何让这个速度啊

30:22.560 --> 30:24.560
能距离用目标点越近

30:24.560 --> 30:24.860
对吧

30:24.860 --> 30:25.960
它就越小呢

30:25.960 --> 30:26.660
啊

30:26.660 --> 30:28.060
那咱假设

30:28.060 --> 30:28.860
假设

30:28.860 --> 30:29.260
哎

30:29.260 --> 30:30.360
后面这代码啊

30:30.360 --> 30:31.860
后面这后面这代码啊

30:31.860 --> 30:33.060
已经怎么样

30:33.060 --> 30:34.060
能让这个物体

30:34.060 --> 30:34.560
哎

30:34.560 --> 30:36.360
越来越靠近这个目标点了

30:36.360 --> 30:36.860
对吧

30:36.860 --> 30:38.660
那我接下来就要考虑到

30:38.660 --> 30:39.460
这个速度

30:39.460 --> 30:41.060
如何来进行这样的变化

30:41.060 --> 30:41.860
啊

30:41.860 --> 30:43.760
那这一块其实我直接啊

30:43.760 --> 30:45.660
去给你这样那个

30:45.660 --> 30:46.860
给你这样一个公式

30:46.860 --> 30:48.160
你先来简单来看一下

30:48.160 --> 30:50.860
我它给它减去这个ODIV

30:51.860 --> 30:53.160
ODIV Outset

30:53.160 --> 30:53.560
啊

30:53.560 --> 30:54.360
这什么意思

30:54.360 --> 30:54.860
啊

30:54.860 --> 30:56.360
这就是目标点

30:56.360 --> 30:57.960
减去这样一个

30:57.960 --> 30:59.260
你当前的位置啊

30:59.260 --> 30:59.760
对吧

30:59.760 --> 31:01.260
如果说我后面这个代码啊

31:01.260 --> 31:02.360
是怎么样

31:02.360 --> 31:03.660
是实现的对吧

31:03.660 --> 31:05.260
就是能让这个物体啊

31:05.260 --> 31:06.260
不断的哎

31:06.260 --> 31:07.760
离目标点越来越近的话

31:07.760 --> 31:08.260
那好了

31:08.260 --> 31:09.160
那你看这

31:09.160 --> 31:09.860
你看这

31:09.860 --> 31:11.560
那每次在执行的时候

31:11.560 --> 31:12.260
你要知道

31:12.260 --> 31:13.060
由于它的话

31:13.060 --> 31:13.460
对吧

31:13.460 --> 31:14.760
目标点都会距离它

31:14.760 --> 31:15.360
而这个

31:15.360 --> 31:16.460
当前时都会距离目标点

31:16.460 --> 31:18.060
会刚刚会更近一步

31:18.060 --> 31:19.560
那你说整个这个差值呢

31:19.560 --> 31:20.760
会变得越来越小

31:20.760 --> 31:21.460
对吧

31:21.460 --> 31:22.660
那现在的话

31:22.660 --> 31:24.160
就正好符合我们所说的

31:24.160 --> 31:26.560
这个速度这样的一个变化的趋势

31:26.560 --> 31:28.460
就是当前这个H

31:28.460 --> 31:29.660
距离目标点越近

31:29.660 --> 31:30.560
这个速度就越小

31:30.560 --> 31:30.960
对吧

31:30.960 --> 31:32.360
那时候我把这样的一个速度

31:32.360 --> 31:32.560
哎

31:32.560 --> 31:33.360
去给什么呢

31:33.360 --> 31:35.260
去给到这样的一个DIV啊

31:35.260 --> 31:35.560
那好了

31:35.560 --> 31:36.560
现在我们来实现一下

31:36.560 --> 31:37.960
我们刚才所说的这个功能代码

31:37.960 --> 31:38.460
对吧

31:38.460 --> 31:39.260
DIV Outset

31:39.260 --> 31:40.460
我让它等于什么呢

31:40.460 --> 31:42.160
让它等于一个ODIV

31:42.160 --> 31:42.960
DIV Outset

31:42.960 --> 31:44.260
等于你的当前值

31:44.260 --> 31:46.260
加上你这样的一个SV的

31:47.860 --> 31:48.260
啊

31:48.260 --> 31:49.660
如果这么去写的话

31:49.660 --> 31:51.660
能否让它做一个缓松运动呢

31:51.660 --> 31:52.660
刷新一下来看一眼

31:52.660 --> 31:53.660
一点

31:53.660 --> 31:54.660
你会发现直接跳到那儿了

31:54.660 --> 31:55.660
因为什么呢

31:55.660 --> 31:56.660
因为很简单的那个道理啊

31:56.660 --> 31:58.660
你的速度是等于什么

31:58.660 --> 31:59.660
等于目标点

31:59.660 --> 32:00.660
减去当前值对吧

32:00.660 --> 32:01.660
正好你的差值

32:01.660 --> 32:03.660
你把这个差值直接付给它的话

32:03.660 --> 32:04.660
你想想

32:04.660 --> 32:05.660
它等于它等于

32:05.660 --> 32:07.660
它等于ODIV Outset Left对吧

32:07.660 --> 32:08.660
你减完以后

32:08.660 --> 32:09.660
它跟它就抵消掉了

32:09.660 --> 32:10.660
最后把这个

32:10.660 --> 32:11.660
它给的目标点就付给它了

32:11.660 --> 32:12.660
它自然而然怎么样

32:12.660 --> 32:13.660
就跳到那个目标点上去了

32:13.660 --> 32:14.660
这时候这一块呢

32:14.660 --> 32:16.660
这么写还不行啊

32:16.660 --> 32:18.660
确实这个趋势啊

32:18.660 --> 32:19.660
这个趋势啊

32:19.660 --> 32:20.660
是我们要的一个趋势

32:20.660 --> 32:21.660
但这个值一开始说

32:21.660 --> 32:22.660
它太大了

32:22.660 --> 32:23.660
它太大了对吧

32:23.660 --> 32:24.660
但太大的话

32:24.660 --> 32:25.660
怎么办呢对吧

32:25.660 --> 32:26.660
这个趋势是我们想要的

32:26.660 --> 32:27.660
那它太大的话

32:27.660 --> 32:28.660
我们就给它除一个数别

32:28.660 --> 32:30.660
比如说除一个7或除一个8

32:30.660 --> 32:31.660
除一个几的话

32:31.660 --> 32:32.660
你自己来定行吧

32:32.660 --> 32:33.660
当你除完一个数以后

32:33.660 --> 32:34.660
咱来看呀

32:34.660 --> 32:35.660
现在你刷新一次

32:35.660 --> 32:36.660
我一点你会发现

32:36.660 --> 32:37.660
OK

32:37.660 --> 32:38.660
现在这个运动怎么样

32:38.660 --> 32:39.660
好看很多吧

32:39.660 --> 32:40.660
好看很多

32:40.660 --> 32:42.660
它是一种缓冲运动的方式

32:42.660 --> 32:43.660
来进行这样的运动

32:43.660 --> 32:44.660
它是先快

32:44.660 --> 32:45.660
后慢的对吧

32:45.660 --> 32:46.660
但是最后

32:46.660 --> 32:48.660
它好像没有稳稳的

32:48.660 --> 32:49.660
停在这个线上

32:49.660 --> 32:51.660
好像差那么几箱速

32:51.660 --> 32:52.660
这是因为啥呢

32:52.660 --> 32:54.660
我们来看一下

32:54.660 --> 32:56.660
去看一下这个控制台

32:56.660 --> 32:57.660
看这个控制台

32:57.660 --> 32:58.660
我在这呢

32:58.660 --> 33:00.660
不断的去打印这个速度

33:00.660 --> 33:04.300
你知道我们这个电线

33:04.300 --> 33:06.300
并没有停止啊

33:06.300 --> 33:07.300
并没有停止

33:07.300 --> 33:08.300
因为我并没有在这边

33:08.300 --> 33:09.300
去写上这样一个

33:09.300 --> 33:10.300
清除电线一个代码对吧

33:10.300 --> 33:11.300
那咱来看一下

33:11.300 --> 33:13.300
刷一次一点

33:13.300 --> 33:14.300
OK

33:14.300 --> 33:15.300
你可以发现这个速度怎么样

33:15.300 --> 33:17.300
最后会变成这个0点几

33:18.300 --> 33:19.300
变成一个小寿的话

33:19.300 --> 33:22.300
为什么不让它进行这样的运动呢

33:22.300 --> 33:23.300
为什么不让它进行运动呢

33:23.300 --> 33:25.300
也很简单一个道理

33:25.300 --> 33:26.300
就是你要知道

33:26.300 --> 33:27.300
我们去赋予的是

33:27.300 --> 33:29.300
赋予的航空间样式

33:29.300 --> 33:30.300
航空间样式最后显示的时候

33:30.300 --> 33:32.300
它确实怎么样

33:32.300 --> 33:34.300
确实是有这样一个小寿的

33:34.300 --> 33:35.300
小寿的像素

33:35.300 --> 33:36.300
但你要知道

33:36.300 --> 33:37.300
无论你是写295.7

33:37.300 --> 33:39.300
还是295.8

33:39.300 --> 33:40.300
还是295.3

33:40.300 --> 33:41.300
还是295.2

33:41.300 --> 33:43.300
无论你写成点几的话

33:43.300 --> 33:44.300
最后所显示的时候

33:44.300 --> 33:46.300
它都是同一个位置

33:46.300 --> 33:49.300
比如说一个小寿的像素

33:49.300 --> 33:51.300
一个小寿的像素

33:51.300 --> 33:53.300
不足以让它在这种视觉效果上

33:53.300 --> 33:54.300
有怎么样

33:54.300 --> 33:55.300
有这样一个偏差

33:55.300 --> 33:57.300
其实我们在往后学到

33:57.300 --> 33:59.300
CSS像素和物理像素的时候

33:59.300 --> 34:00.300
你要知道一点

34:00.300 --> 34:02.300
我们再去给一个物体

34:02.300 --> 34:04.300
这样一个真正的像素

34:04.300 --> 34:05.300
主要的时候的话

34:05.300 --> 34:07.300
就是你是没有必要去给小寿的

34:07.300 --> 34:08.300
因为你给的话

34:08.300 --> 34:09.300
它也会自动忽略掉

34:09.300 --> 34:11.300
懂吧

34:11.300 --> 34:12.300
那这是一点

34:12.300 --> 34:13.300
你从视觉上效果上

34:13.300 --> 34:15.300
这个小寿的像素是不足以让它

34:15.300 --> 34:17.300
怎么样发生这样的一个偏移的

34:17.300 --> 34:18.300
OK

34:18.300 --> 34:19.300
除了这一外的话

34:19.300 --> 34:20.300
还有更重要的一点

34:20.300 --> 34:23.300
就是我这个ODIV.outsage.left

34:23.300 --> 34:25.300
它所获取的值是啥

34:25.300 --> 34:27.300
是一个整数的一个值

34:27.300 --> 34:30.300
没有这样的一个小数

34:30.300 --> 34:32.300
那这个为什么

34:32.300 --> 34:33.300
会对这样的一个

34:33.300 --> 34:34.300
最后就是

34:34.300 --> 34:35.300
它停在那起了

34:35.300 --> 34:37.300
一个很关键的一个因素

34:37.300 --> 34:38.300
就是因为

34:38.300 --> 34:39.300
再来看一下

34:39.300 --> 34:40.300
比如说你现在当前的位置

34:40.300 --> 34:42.300
也就是295.7了

34:42.300 --> 34:43.300
好了

34:43.300 --> 34:45.300
通过这个速度的一个计算

34:45.300 --> 34:46.300
计算完以后

34:46.300 --> 34:47.300
你这SB的

34:47.300 --> 34:48.300
比如说它变成了

34:48.300 --> 34:51.300
它变成了一个0.76

34:51.300 --> 34:54.300
或者说是一个0.71

34:54.300 --> 34:55.300
0.71

34:55.300 --> 34:56.300
比如说这是0.72

34:56.300 --> 34:57.300
好 0.71

34:57.300 --> 34:59.300
那这个0.71

34:59.300 --> 35:00.300
OK

35:00.300 --> 35:01.300
我要怎么来用呢

35:01.300 --> 35:02.300
对吧

35:02.300 --> 35:03.300
我要把这个当前只加它

35:03.300 --> 35:04.300
去付给它

35:04.300 --> 35:05.300
好了

35:05.300 --> 35:06.300
那你再去

35:06.300 --> 35:07.300
后面续签操作的时候

35:07.300 --> 35:09.300
你去获取它这个当前只的时候

35:09.300 --> 35:11.300
你会发现它不是295.72

35:11.300 --> 35:12.300
而是295

35:12.300 --> 35:13.300
好

35:13.300 --> 35:14.300
你加上像素

35:14.300 --> 35:15.300
再去付给它

35:15.300 --> 35:16.300
加上像素

35:16.300 --> 35:17.300
再去付给它

35:17.300 --> 35:18.300
OK

35:18.300 --> 35:19.300
付给它以后

35:19.300 --> 35:20.300
它怎么样

35:20.300 --> 35:21.300
它又会变成

35:21.300 --> 35:23.300
295.75

35:23.300 --> 35:24.300
这种奇迹

35:24.300 --> 35:25.300
奇迹

35:25.300 --> 35:26.300
那你付给它以后的话

35:26.300 --> 35:27.300
好了

35:27.300 --> 35:28.300
这个小数

35:28.300 --> 35:29.300
根本就不足以让它

35:29.300 --> 35:30.300
从设计上发生任何的变化

35:30.300 --> 35:31.300
所以说你还是发现

35:31.300 --> 35:33.300
它还是在原有的位置上的

35:33.300 --> 35:34.300
然后你再去

35:34.300 --> 35:35.300
怎么样计算速度

35:35.300 --> 35:36.300
可能这个速度

35:36.300 --> 35:37.300
最后还是0.71

35:37.300 --> 35:38.300
好了

35:38.300 --> 35:39.300
你再去

35:39.300 --> 35:40.300
怎么样把这个速度

35:40.300 --> 35:41.300
加上它

35:41.300 --> 35:42.300
你会发现

35:42.300 --> 35:43.300
人家还是295

35:43.300 --> 35:44.300
对吧

35:44.300 --> 35:45.300
你再加上0.71

35:45.300 --> 35:46.300
这种循环的方式

35:46.300 --> 35:47.300
你会发现

35:47.300 --> 35:48.300
其实从事源上

35:48.300 --> 35:49.300
就是停在295

35:49.300 --> 35:50.300
这个像素的位置上了

35:50.300 --> 35:51.300
就说这一块的话

35:51.300 --> 35:52.300
怎么样

35:52.300 --> 35:54.300
一个小数的一个像素

35:54.300 --> 35:55.300
结合这种情况

35:55.300 --> 35:57.300
是不足以让它进行运动的

35:57.300 --> 35:58.300
但如何让它

35:58.300 --> 35:59.300
最后能停在目标点呢

35:59.300 --> 36:00.300
对吧

36:00.300 --> 36:01.300
OK

36:01.300 --> 36:02.300
这边我提出一个几个方案

36:02.300 --> 36:03.300
对吧

36:03.300 --> 36:04.300
这个方案就是

36:04.300 --> 36:05.300
你是小数

36:05.300 --> 36:06.300
对吧

36:06.300 --> 36:07.300
你没有办法让它进行运动的话

36:07.300 --> 36:08.300
那我要你怎么样

36:08.300 --> 36:09.300
我要你这个速度

36:09.300 --> 36:10.300
至少是一个1

36:10.300 --> 36:11.300
所以你比如说295

36:11.300 --> 36:12.300
对吧

36:12.300 --> 36:13.300
你加上1

36:13.300 --> 36:14.300
你知道会变成296吧

36:14.300 --> 36:15.300
对吧

36:15.300 --> 36:16.300
有时候你会想要再去

36:16.300 --> 36:17.300
挪动挪动对吧

36:17.300 --> 36:18.300
那在这一块的话

36:18.300 --> 36:19.300
我可以这样

36:19.300 --> 36:20.300
我可以做一个

36:20.300 --> 36:21.300
这样的一个处理

36:21.300 --> 36:22.300
比如说Mass

36:22.300 --> 36:23.300
第二

36:23.300 --> 36:24.300
这个Cell对吧

36:24.300 --> 36:25.300
相上去整对吧

36:25.300 --> 36:26.300
SB

36:26.300 --> 36:27.300
SB的

36:27.300 --> 36:28.300
如果是你是小数的时候

36:28.300 --> 36:29.300
我相上去整

36:29.300 --> 36:30.300
那你就至少是一个1吧

36:30.300 --> 36:31.300
对吧

36:31.300 --> 36:32.300
那我再稍新一次

36:32.300 --> 36:33.300
你看一样

36:33.300 --> 36:34.300
好

36:34.300 --> 36:35.300
点击

36:35.300 --> 36:36.300
它就怎么样

36:36.300 --> 36:37.300
OK

36:37.300 --> 36:38.300
一到了这样一个里面去对吧

36:38.300 --> 36:39.300
最后可能会差一点

36:39.300 --> 36:40.300
那我一向要送

36:40.300 --> 36:41.300
一向要送去帮你加

36:41.300 --> 36:42.300
也让你怎么样

36:42.300 --> 36:43.300
也让你加到这样的那个目标点上了

36:43.300 --> 36:45.300
当你加到目标点上以后的话

36:45.300 --> 36:46.300
OK 它等于它了

36:46.300 --> 36:47.300
它减它是零的

36:47.300 --> 36:48.300
怎么样

36:48.300 --> 36:49.300
就不准让它再运动了

36:49.300 --> 36:50.300
你零再往上去整的话

36:50.300 --> 36:52.300
你依旧是零的

36:52.300 --> 36:53.300
就说你要知道

36:53.300 --> 36:54.300
缓冲运动的话

36:54.300 --> 36:55.300
是不可能六个目标点的

36:55.300 --> 36:56.300
对吧

36:56.300 --> 36:57.300
它怎么样

36:57.300 --> 36:58.300
它最后只能稳稳的

36:58.300 --> 36:59.300
去停在那个目标点上

36:59.300 --> 37:00.300
所以说在判断停止的时候

37:00.300 --> 37:02.300
可以这么来来做

37:02.300 --> 37:03.300
很自信的

37:03.300 --> 37:04.300
去让你怎么样

37:04.300 --> 37:05.300
判断你

37:05.300 --> 37:06.300
是否

37:06.300 --> 37:07.300
等于这个Target

37:07.300 --> 37:08.300
如果等于的话

37:08.300 --> 37:09.300
怎么办呢

37:09.300 --> 37:10.300
我直接可以了

37:10.300 --> 37:11.300
你都不用怎么样

37:11.300 --> 37:12.300
你都不用

37:12.300 --> 37:13.300
再去把它付到目标点上

37:13.300 --> 37:15.300
因为你直接是相等的

37:15.300 --> 37:17.300
否则

37:17.300 --> 37:18.300
我可以做下面这些事

37:18.300 --> 37:19.300
对吧

37:19.300 --> 37:20.300
否则做下面这些事

37:20.300 --> 37:22.300
好 咱保存一下

37:22.300 --> 37:23.300
那

37:23.300 --> 37:24.300
现在的话对吧

37:24.300 --> 37:25.300
我们是让它从走向

37:25.300 --> 37:27.300
做这样缓冲运动

37:27.300 --> 37:28.300
做缓冲运动

37:28.300 --> 37:29.300
那最后

37:29.300 --> 37:30.300
它会稳稳的停在目标点上

37:30.300 --> 37:31.300
对吧

37:31.300 --> 37:32.300
那接下来

37:32.300 --> 37:33.300
我把这样的位置

37:33.300 --> 37:34.300
给你换一下

37:34.300 --> 37:35.300
给你换成500

37:35.300 --> 37:36.300
换成500以后

37:36.300 --> 37:37.300
咱们看一下

37:37.300 --> 37:38.300
我让它从右向走运动

37:38.300 --> 37:40.300
那我是否要把速度

37:40.300 --> 37:42.300
进行这样的一定的改变

37:42.300 --> 37:43.300
让它变化一下

37:43.300 --> 37:45.300
那你考虑一下

37:45.300 --> 37:46.300
这个速度

37:46.300 --> 37:47.300
比如说从右向走运动的话

37:47.300 --> 37:48.300
这个速度应该是一个复制

37:48.300 --> 37:49.300
对吧

37:49.300 --> 37:50.300
那按照我这个公式来的话

37:50.300 --> 37:51.300
对吧

37:51.300 --> 37:52.300
我用去改变它的正方号吗

37:52.300 --> 37:53.300
你会发现

37:53.300 --> 37:54.300
比如说它一开始是300

37:54.300 --> 37:55.300
它是500

37:55.300 --> 37:56.300
300-500

37:56.300 --> 37:57.300
OK是个

37:57.300 --> 37:58.300
正好是个复制

37:58.300 --> 37:59.300
对吧

37:59.300 --> 38:00.300
以后说

38:00.300 --> 38:01.300
什么意思呢

38:01.300 --> 38:02.300
就是

38:02.300 --> 38:03.300
如果它在它的左侧

38:03.300 --> 38:04.300
它减它怎么样

38:04.300 --> 38:05.300
是个正值

38:05.300 --> 38:06.300
如果它在它的右侧的话

38:06.300 --> 38:07.300
它减它是个复制

38:07.300 --> 38:08.300
那SBD正好是个复制

38:08.300 --> 38:09.300
所以说正方号

38:09.300 --> 38:11.300
我们根本就没有必要去管理了

38:11.300 --> 38:13.300
根本就没有必要去管了

38:13.300 --> 38:14.300
所以说

38:14.300 --> 38:16.300
通过这几个公式就能很好

38:16.300 --> 38:17.300
怎么样

38:17.300 --> 38:18.300
去把这样的一个速度

38:18.300 --> 38:19.300
给它算成功

38:19.300 --> 38:21.300
而且还是带方向的这种

38:21.300 --> 38:22.300
但是这一块

38:22.300 --> 38:23.300
我们得做一个稍微的处理

38:23.300 --> 38:24.300
就比如说

38:24.300 --> 38:25.300
它这个速度是复的情况下

38:25.300 --> 38:26.300
它可能是个

38:26.300 --> 38:27.300
最后是复零点几

38:27.300 --> 38:28.300
对吧

38:28.300 --> 38:29.300
那是复零点几的话

38:29.300 --> 38:30.300
可能也不足以让它运动

38:30.300 --> 38:31.300
那怎么办呢

38:31.300 --> 38:33.300
如果说你是复零点几的话

38:33.300 --> 38:34.300
那我要你向下去整

38:34.300 --> 38:35.300
比如说你是复零点凡

38:35.300 --> 38:36.300
对吧

38:36.300 --> 38:37.300
好了

38:37.300 --> 38:38.300
向下去整

38:38.300 --> 38:39.300
变成复一

38:39.300 --> 38:40.300
复一是比零点凡小的

38:40.300 --> 38:41.300
所以就要向下去整

38:41.300 --> 38:42.300
对吧

38:42.300 --> 38:43.300
那在这一块的话

38:43.300 --> 38:44.300
我在处理SBD的时候

38:44.300 --> 38:45.300
我可以这么来

38:45.300 --> 38:46.300
如果你的SBD

38:46.300 --> 38:47.300
大约零的话

38:47.300 --> 38:48.300
对吧

38:48.300 --> 38:49.300
大约零的话

38:49.300 --> 38:50.300
好

38:50.300 --> 38:51.300
用SBD算法

38:51.300 --> 38:52.300
大约零的话

38:52.300 --> 38:53.300
我就Mass cell

38:53.300 --> 38:54.300
把这个SBD

38:54.300 --> 38:55.300
放在那边去

38:55.300 --> 38:56.300
对吧

38:56.300 --> 38:57.300
好

38:57.300 --> 38:58.300
那否则呢

38:58.300 --> 38:59.300
我就Mass therefore

38:59.300 --> 39:00.300
好

39:00.300 --> 39:01.300
我就把SBD也放在那边来

39:01.300 --> 39:02.300
那咱再来看一下

39:02.300 --> 39:03.300
我向左

39:03.300 --> 39:04.300
怎么样做缓冲运动

39:04.300 --> 39:05.300
是没问题的对吧

39:05.300 --> 39:06.300
从向左

39:06.300 --> 39:08.300
确实在做这种缓冲运动

39:08.300 --> 39:09.300
好

39:09.300 --> 39:10.300
这个缓冲运动的功能

39:10.300 --> 39:11.300
我们已经写完了

39:11.300 --> 39:12.300
那接下来

39:12.300 --> 39:14.300
我们来做一个小的demo对吧

39:14.300 --> 39:15.300
我们寻许渐进对吧

39:15.300 --> 39:16.300
寻许渐进

39:16.300 --> 39:17.300
还做一个小的demo

39:17.300 --> 39:18.300
demo是什么呢

39:18.300 --> 39:19.300
我先把这个样式

39:19.300 --> 39:20.300
给你先画出来

39:20.300 --> 39:21.300
不是画出来

39:21.300 --> 39:22.300
给你先写出来

39:22.300 --> 39:24.300
那整个这个代码结构

39:24.300 --> 39:25.300
也是很简单的

39:25.300 --> 39:27.300
就一个rap里面放一个spun

39:27.300 --> 39:28.300
rap里面放个spun

39:28.300 --> 39:29.300
但这种

39:29.300 --> 39:30.300
最后这个demo的用

39:30.300 --> 39:31.300
其实还是比较多的

39:31.300 --> 39:32.300
就比如说

39:33.300 --> 39:34.300
我们看那种

39:34.300 --> 39:35.300
比如说那种悬无窗

39:35.300 --> 39:36.300
对吧

39:36.300 --> 39:37.300
这一开始

39:37.300 --> 39:38.300
一开始

39:38.300 --> 39:39.300
会有一个小的一个块

39:39.300 --> 39:40.300
对吧

39:40.300 --> 39:41.300
好

39:41.300 --> 39:42.300
它是藏在这个

39:42.300 --> 39:43.300
这个浏览器的左

39:43.300 --> 39:44.300
左侧这个里面的

39:44.300 --> 39:45.300
你鼠包一碰

39:45.300 --> 39:46.300
或是鼠包你点的时候

39:46.300 --> 39:47.300
它弹出来对吧

39:47.300 --> 39:48.300
好了

39:48.300 --> 39:49.300
供你去怎么样

39:49.300 --> 39:51.300
供你去进行这样的一个操作

39:51.300 --> 39:52.300
那你鼠包离开

39:52.300 --> 39:53.300
或者说鼠包一出的时候

39:53.300 --> 39:54.300
或者说你再点

39:54.300 --> 39:55.300
再点一次的时候

39:55.300 --> 39:56.300
怎么样

39:56.300 --> 39:57.300
它再弹回去对吧

39:57.300 --> 39:58.300
那这种用的话

39:58.300 --> 39:59.300
其实在很多地方都很常见

39:59.300 --> 40:00.300
之前在Q音乐里面

40:00.300 --> 40:01.300
它有这样一种

40:01.300 --> 40:03.300
比如说播放的控制条

40:03.300 --> 40:04.300
比如说上一曲

40:04.300 --> 40:05.300
下一曲

40:05.300 --> 40:06.300
比如说这个当前音乐的这样的

40:06.300 --> 40:07.300
播放的一个进度

40:07.300 --> 40:08.300
对吧

40:08.300 --> 40:09.300
或者说声音什么的

40:09.300 --> 40:10.300
对吧

40:10.300 --> 40:11.300
它会有这样的一个控制条

40:11.300 --> 40:12.300
一开始这个控制条

40:12.300 --> 40:13.300
是缩在这个里面的

40:13.300 --> 40:15.300
但是它会露出这样的一个

40:15.300 --> 40:16.300
小的按钮

40:16.300 --> 40:17.300
你一点它的话

40:17.300 --> 40:18.300
它就整个弹出来对吧

40:18.300 --> 40:19.300
你点完去

40:19.300 --> 40:20.300
它就整个再缩回去

40:20.300 --> 40:21.300
对吧

40:21.300 --> 40:23.300
它不占用你这样的一个视约的区域

40:23.300 --> 40:24.300
现在我们要做这样的功能

40:24.300 --> 40:25.300
要做这样的功能

40:25.300 --> 40:26.300
首先给这个drapper

40:28.300 --> 40:29.300
来一个wass

40:30.300 --> 40:31.300
wass是100像素

40:31.300 --> 40:32.300
对吧

40:32.300 --> 40:33.300
高度别100了

40:33.300 --> 40:34.300
很小

40:34.300 --> 40:35.300
是一个400像素

40:35.300 --> 40:38.300
那高度是这样的一个80像素

40:38.300 --> 40:39.300
背景色

40:41.300 --> 40:42.300
background

40:42.300 --> 40:43.300
是这样的一个

40:43.300 --> 40:44.300
橙色

40:46.300 --> 40:48.300
然后再来一个Position

40:48.300 --> 40:49.300
Position

40:49.300 --> 40:51.300
P-O-S-I-T-O-N

40:51.300 --> 40:53.300
Position-O-S-Lute

40:53.300 --> 40:54.300
再来一个Left

40:54.300 --> 40:55.300
它是个0像素

40:55.300 --> 40:58.300
它是个LeftBS0

40:59.300 --> 41:01.300
然后top是一个200

41:01.300 --> 41:02.300
好

41:02.300 --> 41:03.300
那这个drapper的里面

41:03.300 --> 41:05.300
我给它来一个span

41:05.300 --> 41:06.300
给span来一个样式

41:06.300 --> 41:07.300
我要希望让这个span的宽度

41:07.300 --> 41:09.300
比如说是50像素

41:09.300 --> 41:11.300
我的高度比如说是820像素

41:11.300 --> 41:12.300
对吧

41:12.300 --> 41:13.300
80

41:13.300 --> 41:14.300
颜色跟它有个区分

41:14.300 --> 41:16.300
比如说是一个红色

41:16.300 --> 41:17.300
它的这样的一个Position

41:17.300 --> 41:18.300
OK

41:18.300 --> 41:20.300
我让它参照它drapper进行定位

41:20.300 --> 41:21.300
对吧

41:21.300 --> 41:22.300
好了

41:22.300 --> 41:23.300
它在一个top值

41:23.300 --> 41:24.300
依旧是0

41:24.300 --> 41:25.300
它的Left在值

41:25.300 --> 41:26.300
我不想给它Left

41:26.300 --> 41:27.300
不想给它Ret

41:27.300 --> 41:28.300
我希望什么

41:28.300 --> 41:30.300
我希望这个span的右侧边界

41:30.300 --> 41:32.300
贴在drapper的左侧边界

41:32.300 --> 41:33.300
那我先让它是个0

41:33.300 --> 41:35.300
让它是0是什么意思

41:35.300 --> 41:37.300
就是这个span的右侧边界

41:37.300 --> 41:38.300
贴在这个drapper的右侧边界

41:38.300 --> 41:39.300
再来看一眼

41:40.300 --> 41:41.300
来看一下

41:41.300 --> 41:42.300
在这

41:42.300 --> 41:43.300
你可以发现

41:43.300 --> 41:44.300
OK

41:44.300 --> 41:45.300
我这个span的drapper是0

41:45.300 --> 41:46.300
它的右侧边界

41:46.300 --> 41:48.300
贴在这个drapper的右侧边界上

41:48.300 --> 41:50.300
它把它值不断地去缩小

41:50.300 --> 41:51.300
缩小

41:51.300 --> 41:52.300
缩小到自身的宽度的时候

41:52.300 --> 41:53.300
这样往下缩

41:53.300 --> 41:54.300
你会发现怎么样

41:54.300 --> 41:55.300
有缝隙对吧

41:55.300 --> 41:56.300
比如说

41:56.300 --> 41:58.300
Ret是负自身的宽度的时候

41:58.300 --> 41:59.300
那这个span的左侧边界

41:59.300 --> 42:01.300
正好贴在这个drapper的右侧边界上

42:01.300 --> 42:02.300
对吧

42:02.300 --> 42:03.300
然后我要这个drapper一开始

42:03.300 --> 42:05.300
是藏在它里面的

42:05.300 --> 42:07.300
藏在左侧它里面的

42:07.300 --> 42:09.300
那让它是一个负的自身的宽度

42:09.300 --> 42:10.300
负400像素对吧

42:10.300 --> 42:11.300
但是说一开始的时候

42:11.300 --> 42:13.300
只有span是漏出来了对吧

42:13.300 --> 42:15.300
那它是可供你这样的一个

42:15.300 --> 42:16.300
这个操作的区域

42:16.300 --> 42:18.300
我希望你鼠标一碰到它的时候

42:18.300 --> 42:20.300
整个drapper弹出来对吧

42:20.300 --> 42:21.300
一离开drapper

42:21.300 --> 42:22.300
或者一离开这个drapper

42:22.300 --> 42:23.300
或它span的时候

42:23.300 --> 42:25.300
整个在弹回去

42:26.300 --> 42:28.300
好了我让它是一个负500对吧

42:28.300 --> 42:29.300
我先把这个样式给你写完

42:29.300 --> 42:30.300
负500和负400

42:30.300 --> 42:32.300
负400我保存一下

42:32.300 --> 42:34.300
好小心下来看一眼

42:34.300 --> 42:35.300
OK是这样的对吧

42:35.300 --> 42:37.300
那接下来那我要做的就是怎么样

42:37.300 --> 42:39.300
把我写好这个缓冲运动的函数

42:39.300 --> 42:42.300
做用到这样的一个drapper里面去对吧

42:42.300 --> 42:44.300
好了那整个这个过程

42:44.300 --> 42:46.300
我刚才已经描述了

42:46.300 --> 42:47.300
就鼠标碰到它

42:47.300 --> 42:49.300
我鼠标碰到它

42:49.300 --> 42:50.300
它怎么样弹出来对吧

42:50.300 --> 42:52.300
鼠标一出再弹回去

42:52.300 --> 42:53.300
那整个这样的过程

42:53.300 --> 42:54.300
确实是这样的

42:54.300 --> 42:55.300
已经毫无疑问了

42:55.300 --> 42:57.300
那接下来我们要怎么把这样的一个

42:57.300 --> 42:59.300
过程用代码感的还原出来呢

42:59.300 --> 43:01.300
OK首先呢

43:01.300 --> 43:03.300
首先我还是要去获取一下这个drapper

43:03.300 --> 43:06.610
先获取下它

43:06.610 --> 43:07.610
放这

43:07.610 --> 43:09.610
OK出示一下

43:09.610 --> 43:10.610
这呢

43:10.610 --> 43:11.610
克车S

43:11.610 --> 43:12.610
放这

43:12.610 --> 43:13.610
这个也出示一下

43:13.610 --> 43:15.610
好那在这呢

43:15.610 --> 43:16.610
好了我首先

43:16.610 --> 43:17.610
还是wore

43:17.610 --> 43:18.610
wore一个ODIV

43:18.610 --> 43:21.610
等于一个document.get

43:21.610 --> 43:23.610
ElementBackClassName

43:23.610 --> 43:25.610
我就是写一个这样的一个drapper

43:25.610 --> 43:27.610
好那我通过这个

43:27.610 --> 43:28.610
我通过这样的那个

43:28.610 --> 43:29.610
给ODIV

43:29.610 --> 43:31.610
来绑定这样的一个

43:31.610 --> 43:33.610
unmossEnter

43:33.610 --> 43:34.610
实践

43:34.610 --> 43:35.610
那有些人说

43:35.610 --> 43:37.610
你给它来绑定的话

43:37.610 --> 43:39.610
那它是隐藏在里面的对吧

43:39.610 --> 43:40.610
你怎么能触发

43:40.610 --> 43:42.610
它这个鼠标一入实践呢

43:42.610 --> 43:43.610
那这里面就是

43:43.610 --> 43:44.610
实践冒泡机制了对吧

43:44.610 --> 43:45.610
当你鼠标碰到

43:45.610 --> 43:46.610
这个spun的时候

43:46.610 --> 43:48.610
由于它结构是千套的对吧

43:48.610 --> 43:50.610
这个spun没有对这个unmossEnter

43:50.610 --> 43:51.610
处理

43:51.610 --> 43:52.610
但是它会把这个实践

43:52.610 --> 43:53.610
冒泡对吧

43:53.610 --> 43:55.610
波及到这个drapper对吧

43:55.610 --> 43:56.610
那这个drapper这个实践

43:56.610 --> 43:57.610
会触发

43:57.610 --> 43:58.610
在drapper里面

43:58.610 --> 43:59.610
让整个这个drapper

43:59.610 --> 44:00.610
想要去移动

44:00.610 --> 44:01.610
它行了吧对吧

44:01.610 --> 44:02.610
那有些人说

44:02.610 --> 44:03.610
那我给spun绑定它行不行啊对吧

44:03.610 --> 44:04.610
行是行

44:04.610 --> 44:06.610
但这个效果非常的不好

44:06.610 --> 44:08.610
因为你给它去绑定的时候

44:08.610 --> 44:09.610
OK

44:09.610 --> 44:10.610
比如说你去绑定

44:10.610 --> 44:11.610
一般是绑定对吧

44:11.610 --> 44:12.610
给它绑定一出实践对吧

44:12.610 --> 44:13.610
你触发一碰它

44:13.610 --> 44:14.610
它确实怎么样

44:14.610 --> 44:16.610
OK可以弹出对吧

44:16.610 --> 44:18.610
但它弹出以后

44:18.610 --> 44:19.610
比如说

44:19.610 --> 44:20.610
你给它也绑定了

44:20.610 --> 44:22.610
这个unmoss6实践的话

44:22.610 --> 44:23.610
unmoss6实践

44:23.610 --> 44:24.610
好了

44:24.610 --> 44:25.610
它弹出以后的话

44:25.610 --> 44:26.610
你要知道这个整个spun的区

44:26.610 --> 44:27.610
就是这么一小点对吧

44:27.610 --> 44:28.610
那它刚刚

44:28.610 --> 44:30.610
不是它刚刚弹出之后的话

44:30.610 --> 44:31.610
可能这个spun

44:31.610 --> 44:32.610
就会略过手标

44:32.610 --> 44:34.610
它要触发它spun的一出实践

44:34.610 --> 44:35.610
我们一出实践的话

44:35.610 --> 44:36.610
实际上这个drapper

44:36.610 --> 44:37.610
移回去对不对

44:37.610 --> 44:38.610
那它刚一出来的话

44:38.610 --> 44:40.610
OK手标一略过这个spun的话

44:40.610 --> 44:41.610
它又移回去对吧

44:41.610 --> 44:42.610
又移回去以后怎么样

44:42.610 --> 44:43.610
又碰到这个spun怎么样

44:43.610 --> 44:44.610
它又再移出去对吧

44:44.610 --> 44:45.610
有时候它会暂时

44:45.610 --> 44:46.610
来回来去移动

44:46.610 --> 44:47.610
它来回去傻

44:47.610 --> 44:48.610
最后这个效果

44:48.610 --> 44:49.610
只有这个效果

44:49.610 --> 44:50.610
它想要的

44:50.610 --> 44:51.610
这时候我们就利用这个

44:51.610 --> 44:52.610
实践帽炮

44:52.610 --> 44:53.610
给这个drapper

44:53.610 --> 44:54.610
来保证实践就可以了

44:54.610 --> 44:56.610
那我在这再来一个叫unmoss6

44:58.610 --> 44:59.610
方式

45:00.610 --> 45:01.610
那在这对吧

45:01.610 --> 45:02.610
手标一一入

45:02.610 --> 45:04.610
我就调这个starm

45:04.610 --> 45:05.610
我让这个div移动

45:05.610 --> 45:06.610
移动到哪呢

45:06.610 --> 45:07.610
从-400移动到0对吧

45:07.610 --> 45:08.610
好了

45:08.610 --> 45:10.610
再去写上这样的一个帽号

45:10.610 --> 45:11.610
对吧

45:11.610 --> 45:12.610
那分号分号

45:12.610 --> 45:13.610
那我再写在这

45:13.610 --> 45:14.610
再写上这个starm

45:14.610 --> 45:15.610
往这传dance

45:15.610 --> 45:16.610
最后变成一个-400

45:16.610 --> 45:17.610
一出

45:17.610 --> 45:18.610
一出的时候变成-400

45:18.610 --> 45:19.610
一入的时候变成一个0

45:19.610 --> 45:20.610
现在咱看一看

45:20.610 --> 45:21.610
刷新一次

45:21.610 --> 45:22.610
一碰

45:22.610 --> 45:23.610
ok 它爆错对吧

45:23.610 --> 45:24.610
一碰

45:24.610 --> 45:25.610
嘿嘿嘿

45:25.610 --> 45:26.610
它爆错对吧

45:26.610 --> 45:27.610
爆错是因为

45:27.610 --> 45:28.610
没有写上一个0

45:28.610 --> 45:29.610
写上一个0

45:29.610 --> 45:30.610
没有正确的

45:30.610 --> 45:31.610
会到这个drapper

45:31.610 --> 45:32.610
刷新一次

45:32.610 --> 45:33.610
再看一下

45:33.610 --> 45:34.610
ok 出来对吧

45:34.610 --> 45:35.610
回去

45:35.610 --> 45:36.610
出来

45:36.610 --> 45:37.610
回去

45:37.610 --> 45:38.610
OK

45:38.610 --> 45:39.610
最后呢

45:39.610 --> 45:40.610
你会发现

45:40.610 --> 45:41.610
它很完美的去完成了

45:41.610 --> 45:42.610
我们这样的效果

45:42.610 --> 45:43.610
一一出

45:43.610 --> 45:44.610
一一入

45:44.610 --> 45:45.610
怎么样

45:45.610 --> 45:46.610
它就出来

45:46.610 --> 45:47.610
一一出

45:47.610 --> 45:48.610
一入出来

45:48.610 --> 45:49.610
就回去

45:49.610 --> 45:50.610
当然你可以把这

45:50.610 --> 45:51.610
变成个点击世界

45:51.610 --> 45:52.610
点击它再出来

45:52.610 --> 45:53.610
再点一次

45:53.610 --> 45:54.610
它再回去

45:54.610 --> 45:55.610
你想怎么操作

45:55.610 --> 45:56.610
你自己订的吧

45:56.610 --> 45:57.610
咱们已经把这个函数

45:57.610 --> 45:58.610
功能都已经写完了

45:58.610 --> 45:59.610
对吧

45:59.610 --> 46:00.610
那我们的目的就达到了

46:00.610 --> 46:01.610
好

46:01.610 --> 46:03.610
这个缓冲的一个运动

46:03.610 --> 46:04.610
咱们基本上

46:04.610 --> 46:05.610
把这个速度

46:05.610 --> 46:06.610
也大体都搞定了

46:06.610 --> 46:07.610
那接下来

46:07.610 --> 46:08.610
我们再来一个

46:08.610 --> 46:09.610
再来一个

46:09.610 --> 46:10.610
叫做

46:11.610 --> 46:12.610
先不来多体运动

46:12.610 --> 46:13.610
讲多体运动之前

46:13.610 --> 46:14.610
我先来说一下

46:14.610 --> 46:15.610
其实

46:15.610 --> 46:16.610
针对于这种

46:16.610 --> 46:17.610
比如说

46:17.610 --> 46:18.610
位置

46:18.610 --> 46:19.610
包括宽高

46:19.610 --> 46:20.610
这样的一种

46:20.610 --> 46:21.610
就是

46:21.610 --> 46:22.610
缓冲腾运动的话

46:22.610 --> 46:23.610
或说运动的话

46:23.610 --> 46:24.610
我们有这种

46:24.610 --> 46:25.610
比较

46:25.610 --> 46:26.610
outside的系列

46:26.610 --> 46:27.610
直接能获取

46:27.610 --> 46:28.610
直接能获取到

46:28.610 --> 46:30.610
它这样的一个当前值

46:30.610 --> 46:31.610
但是针对于这种

46:31.610 --> 46:32.610
透明度的话

46:32.610 --> 46:33.610
对吧

46:33.610 --> 46:34.610
这好像就不太行了

46:34.610 --> 46:35.610
因为你没有手上

46:35.610 --> 46:36.610
能直接去获取到

46:36.610 --> 46:37.610
它这样的一个透明度

46:37.610 --> 46:38.610
所以说

46:38.610 --> 46:39.610
我在这

46:39.610 --> 46:40.610
为了能

46:40.610 --> 46:41.610
比如说

46:41.610 --> 46:42.610
为了之后

46:42.610 --> 46:43.610
我封放一个比较完美的

46:43.610 --> 46:44.610
这样的一个函数

46:44.610 --> 46:45.610
我也要把

46:45.610 --> 46:46.610
用透明度的一个缓冲

46:46.610 --> 46:47.610
也拿出来

46:47.610 --> 46:48.610
来去讲一讲

46:48.610 --> 46:49.610
它来去说一说

46:49.610 --> 46:51.610
怎么来

46:51.610 --> 46:52.610
去获取透明度的

46:52.610 --> 46:53.610
一个当前值

46:53.610 --> 46:54.610
对吧

46:54.610 --> 46:55.610
也很简单

46:55.610 --> 46:56.610
我们之前学过

46:56.610 --> 46:57.610
这样的一个

46:57.610 --> 46:58.610
我们复算过

46:58.610 --> 46:59.610
这样的一个函数

46:59.610 --> 47:00.610
这个函数

47:00.610 --> 47:01.610
本来我想拿来直接用的

47:01.610 --> 47:02.610
但我来写写吧

47:02.610 --> 47:03.610
什么意思呢

47:03.610 --> 47:05.610
我要获取机身样式

47:05.610 --> 47:06.610
在这的话

47:06.610 --> 47:07.610
OK

47:07.610 --> 47:08.610
我做一个判断

47:08.610 --> 47:09.610
如果

47:09.610 --> 47:10.610
这个window

47:10.610 --> 47:11.610
如果你这个当前

47:11.610 --> 47:12.610
运行的这个榴弹耳机

47:12.610 --> 47:13.610
可以使用

47:13.610 --> 47:14.610
这个Galcomputer

47:14.610 --> 47:15.610
我就返回什么

47:15.610 --> 47:17.610
返回window.Galcomputer.style

47:17.610 --> 47:18.610
把DOM传到你们来

47:18.610 --> 47:19.610
这是获取机身样式的一个方法

47:19.610 --> 47:21.610
获取计算样式的一个方法

47:21.610 --> 47:22.610
在这我传给大家

47:22.610 --> 47:23.610
对吧

47:23.610 --> 47:24.610
我不去获取伪烈的样式

47:24.610 --> 47:25.610
我中控號AR

47:25.610 --> 47:27.610
把对应你想获取的样式的值

47:27.610 --> 47:28.610
怎么样

47:28.610 --> 47:29.610
最后返回出来

47:29.610 --> 47:30.610
否则对吧

47:30.610 --> 47:31.610
如果你这个榴弹耳机

47:31.610 --> 47:32.610
不支持Galcomputer.style的话

47:32.610 --> 47:33.610
我直接

47:33.610 --> 47:34.610
返回那个老伴们

47:34.610 --> 47:35.610
IE那个

47:35.610 --> 47:36.610
叫什么

47:36.610 --> 47:37.610
叫做一个DOM

47:37.610 --> 47:38.610
CURENT style

47:38.610 --> 47:40.610
我返回一个中控AR

47:40.610 --> 47:42.610
就把样式给你返回出来

47:42.610 --> 47:43.610
你通过它

47:43.610 --> 47:44.610
获取样式的话

47:44.610 --> 47:45.610
就很EASY了

47:45.610 --> 47:46.610
再可以来看一下

47:46.610 --> 47:47.610
现在

47:47.610 --> 47:48.610
比如说

47:48.610 --> 47:49.610
刷新词

47:49.610 --> 47:50.610
好

47:50.610 --> 47:52.610
我Galus.style

47:52.610 --> 47:53.610
帮你们

47:53.610 --> 47:54.610
比如说放这个

47:54.610 --> 47:55.610
ODIV

47:55.610 --> 47:56.610
我要想看一下

47:56.610 --> 47:57.610
它在这样那个

47:57.610 --> 47:58.610
比如说

47:58.610 --> 47:59.610
Left的值一回车

47:59.610 --> 48:01.610
应该是自动串

48:01.610 --> 48:02.610
自动串

48:02.610 --> 48:03.610
Left的值一回车

48:03.610 --> 48:04.610
多少

48:04.610 --> 48:05.610
是付400对吧

48:05.610 --> 48:06.610
因为它返回的是自动串

48:06.610 --> 48:07.610
比如说我再来一个

48:07.610 --> 48:10.500
YS

48:10.500 --> 48:11.500
怎么样

48:11.500 --> 48:12.500
是400对吧

48:12.500 --> 48:13.500
OK

48:13.500 --> 48:14.500
它也是这样的自动串

48:15.500 --> 48:16.500
OPACI

48:16.500 --> 48:17.500
对吧

48:17.500 --> 48:18.500
是一个自动串

48:18.500 --> 48:19.500
比如说

48:19.500 --> 48:20.500
我再看一下

48:20.500 --> 48:21.500
它那个

48:21.500 --> 48:22.500
BorderWaste

48:22.500 --> 48:23.500
它虽然没有Border

48:23.500 --> 48:24.500
但我也看一下

48:24.500 --> 48:25.500
它的Border宽度是多少

48:25.500 --> 48:26.500
那是0

48:26.500 --> 48:27.500
对不对

48:27.500 --> 48:28.500
有的时候可以通过它

48:28.500 --> 48:29.500
怎么样

48:29.500 --> 48:30.500
很好到来

48:30.500 --> 48:31.500
获取这样的一个计算样式

48:31.500 --> 48:32.500
那有了它以后

48:32.500 --> 48:33.500
怎么样

48:33.500 --> 48:34.500
任何的一个

48:34.500 --> 48:35.500
属性的当前值

48:35.500 --> 48:36.500
怎么样

48:36.500 --> 48:37.500
我都能获取到了

48:37.500 --> 48:38.500
比如说

48:38.500 --> 48:39.500
我们之前在写

48:39.500 --> 48:40.500
这些云速运动

48:40.500 --> 48:41.500
和这个缓存运动的时候

48:41.500 --> 48:42.500
我们在获取这个部体的

48:42.500 --> 48:43.500
当前值的时候

48:43.500 --> 48:44.500
通过这个一个属性

48:44.500 --> 48:45.500
来获取到它

48:45.500 --> 48:46.500
对用的这个

48:46.500 --> 48:47.500
属性的当前值

48:47.500 --> 48:48.500
对吧

48:48.500 --> 48:49.500
并且是一个数字

48:49.500 --> 48:50.500
那接下来

48:50.500 --> 48:51.500
可能说我需要用到它

48:51.500 --> 48:52.500
对吧

48:52.500 --> 48:53.500
这种更清楚的方式

48:53.500 --> 48:55.500
而且是更普世的方式

48:55.500 --> 48:57.500
来获取某个

48:57.500 --> 48:59.500
元素和某个标签

48:59.500 --> 49:00.500
某一个

49:00.500 --> 49:01.500
它的样式的一个值

49:01.500 --> 49:02.500
当然

49:02.500 --> 49:03.500
你的需要把这个值

49:03.500 --> 49:05.500
作为一个后面的处理

49:05.500 --> 49:06.500
因为你获取的是个自动串

49:06.500 --> 49:07.500
我们在操作

49:07.500 --> 49:08.500
操作的时候

49:08.500 --> 49:09.500
就这种数字的方式

49:09.500 --> 49:10.500
来操作

49:10.500 --> 49:11.500
好

49:11.500 --> 49:12.500
接下来

49:12.500 --> 49:13.500
如何来去

49:13.500 --> 49:15.500
把这个透明动作上一个缓冲

49:15.500 --> 49:17.500
那通过STAM

49:17.500 --> 49:18.500
在这我还是写一个

49:18.500 --> 49:20.500
NOM和ATTR

49:20.500 --> 49:22.500
和TARGET

49:22.500 --> 49:23.500
那有这个

49:23.500 --> 49:25.500
想去改变的这个

49:25.500 --> 49:27.500
标签有去箱的

49:27.500 --> 49:28.500
这个坐标

49:28.500 --> 49:30.500
有去箱的一个目标点

49:30.500 --> 49:33.500
那在这我给你去注释一下

49:33.500 --> 49:34.500
注释一下

49:34.500 --> 49:36.500
那在这我也去注释一下

49:36.500 --> 49:37.500
对吧

49:37.500 --> 49:38.500
我们从来一个DMA

49:38.500 --> 49:41.500
来进行这样的一个展示

49:41.500 --> 49:43.500
来进行这样的一个编写

49:43.500 --> 49:44.500
在这的话

49:44.500 --> 49:46.500
我给它去寻来一个注释

49:46.500 --> 49:48.500
给大家注释

49:48.500 --> 49:49.500
那我在这

49:49.500 --> 49:50.500
给一个DIV

49:50.500 --> 49:52.500
给DIV一个相应的样式

49:52.500 --> 49:53.500
宽高还是100相处

49:53.500 --> 49:54.500
那个

49:54.500 --> 49:57.810
并色给你来个红色

49:57.810 --> 50:00.810
并色给它来个红色

50:00.810 --> 50:01.810
红色

50:01.810 --> 50:02.810
那透明动

50:02.810 --> 50:03.810
给你来个1

50:03.810 --> 50:04.810
那这样的话

50:04.810 --> 50:05.810
你可以看到

50:05.810 --> 50:06.810
这样的DIV

50:06.810 --> 50:07.810
那我现在

50:07.810 --> 50:08.810
希望做的事情

50:08.810 --> 50:09.810
就是我点完它以后的话

50:09.810 --> 50:10.810
让它的透明动

50:10.810 --> 50:12.810
1到0.5发生缓冲的变化

50:12.810 --> 50:14.810
发生缓冲的变化

50:14.810 --> 50:15.810
那你要知道

50:15.810 --> 50:16.810
整个透明动它的一个

50:16.810 --> 50:17.810
变化范围是什么

50:17.810 --> 50:19.810
是0到1是0到1

50:19.810 --> 50:21.810
我们之前在写这个代码

50:21.810 --> 50:22.810
你会发现这个速度

50:22.810 --> 50:23.810
只至少是1

50:23.810 --> 50:24.810
如果还

50:24.810 --> 50:25.810
如果说我还是按照

50:25.810 --> 50:26.810
之前的方式来写的话

50:26.810 --> 50:27.810
咱先来看一下

50:27.810 --> 50:28.810
会有什么样的一个效果

50:28.810 --> 50:29.810
对吧

50:29.810 --> 50:30.810
Timer

50:30.810 --> 50:31.810
一个Set interval

50:31.810 --> 50:32.810
比如说

50:32.810 --> 50:33.810
每个三参秒

50:33.810 --> 50:34.810
对吧

50:34.810 --> 50:35.810
我还是去

50:35.810 --> 50:36.810
这个执行一下

50:36.810 --> 50:37.810
这个函数

50:38.810 --> 50:39.810
那这一块

50:40.810 --> 50:43.380
写成

50:44.380 --> 50:45.380
那这一块

50:45.380 --> 50:46.380
粘过来

50:48.380 --> 50:49.380
这一块

50:49.380 --> 50:50.380
我也粘过来

50:50.380 --> 50:53.580
对吧

50:53.580 --> 50:54.580
处理速度的方式

50:54.580 --> 50:55.580
我还是按照之前的方式

50:55.580 --> 50:56.580
它来做

50:56.580 --> 50:57.580
好

50:57.580 --> 50:58.580
但这一块

50:58.580 --> 50:59.580
我不能这么来写了

50:59.580 --> 51:00.580
我要怎么来改

51:00.580 --> 51:01.580
这个地方应该是什么

51:01.580 --> 51:02.580
应该是这个透明动的当前指

51:02.580 --> 51:03.580
对吧

51:03.580 --> 51:04.580
他们在这看了

51:04.580 --> 51:05.580
我再握一个叫Sura

51:05.580 --> 51:06.580
这个Sura代表当前指

51:06.580 --> 51:07.580
它一开始是空的

51:08.580 --> 51:09.580
我在这

51:09.580 --> 51:10.580
比如说可以这么做

51:10.580 --> 51:11.580
我让这个Sura

51:11.580 --> 51:12.580
Galaxy L

51:13.580 --> 51:14.580
Galaxy L

51:14.580 --> 51:15.580
因为每次

51:15.580 --> 51:17.580
每次我去改变这样的一个

51:17.580 --> 51:18.580
比如说它这个

51:18.580 --> 51:19.580
当前那个

51:19.580 --> 51:21.580
我去改变这个标签

51:21.580 --> 51:23.580
最新的这个Obsettia的时候的话

51:23.580 --> 51:24.580
我都要通过它来

51:24.580 --> 51:25.580
护起下它的当前指

51:25.580 --> 51:26.580
来去计算这个速度

51:26.580 --> 51:27.580
对吧

51:27.580 --> 51:28.580
在这的话怎么来写呢

51:28.580 --> 51:29.580
首先把这道目传进来

51:29.580 --> 51:30.580
对吧

51:30.580 --> 51:31.580
再把这样的一个Obsettia

51:31.580 --> 51:32.580
传进去

51:32.580 --> 51:34.580
你回去玩这个Sura的话

51:34.580 --> 51:35.580
你会发现

51:35.580 --> 51:36.580
它回去的是个字幕串

51:36.580 --> 51:37.580
会玩这个是字幕串的话

51:37.580 --> 51:39.580
我有需要通过这个Press

51:39.580 --> 51:40.580
Float

51:40.580 --> 51:41.580
这个字幕串

51:42.580 --> 51:43.580
Obsettia这种字幕串

51:43.580 --> 51:44.580
返回来也可能是小数字幕串

51:44.580 --> 51:45.580
对吧

51:45.580 --> 51:46.580
所以说我用PressFloat

51:46.580 --> 51:49.580
来给它进行这样的一个修改

51:49.580 --> 51:50.580
好了

51:50.580 --> 51:51.580
修改完以后的话

51:51.580 --> 51:52.580
这个Sura

51:52.580 --> 51:53.580
它就是这个当前指

51:53.580 --> 51:54.580
我们在计算的时候的话

51:54.580 --> 51:56.580
用它来计算就可以了

51:56.580 --> 51:57.580
我在后续

51:57.580 --> 51:58.580
比如说做这样一个

51:58.580 --> 52:00.580
判断的时候

52:00.580 --> 52:01.580
做这样一个判断就是

52:01.580 --> 52:02.580
我判断一下

52:02.580 --> 52:03.580
你这个当前指

52:03.580 --> 52:04.580
是否等于目标点的时候

52:04.580 --> 52:05.580
我还是用Sura

52:05.580 --> 52:06.580
进行这样的判断

52:06.580 --> 52:07.580
目标点

52:07.580 --> 52:08.580
如果等于的话

52:08.580 --> 52:09.580
直接Clear into

52:09.580 --> 52:12.340
就可以了

52:12.340 --> 52:13.340
好

52:13.340 --> 52:14.340
否则呢

52:14.340 --> 52:15.340
否则我就要用这个O

52:16.340 --> 52:17.340
就DOM

52:17.340 --> 52:21.340
DOM.sdl.opacit

52:21.340 --> 52:22.340
对吧

52:22.340 --> 52:23.340
DOM等于一个

52:23.340 --> 52:24.340
比如说当前指

52:24.340 --> 52:26.340
加上一个什么SB的

52:26.340 --> 52:27.340
就可以了

52:27.340 --> 52:28.340
你看我这么操作

52:28.340 --> 52:29.340
其实是怎么样

52:29.340 --> 52:31.340
是跟之前是英文模样的一个思路

52:31.340 --> 52:32.340
对吧

52:32.340 --> 52:33.340
思路基本上没有任何的改变

52:33.340 --> 52:34.340
只不过我用的是

52:34.340 --> 52:35.340
这个Galaxy L

52:35.340 --> 52:37.340
来获取这样的一个当前指

52:37.340 --> 52:38.340
之前呢

52:38.340 --> 52:40.340
是用这个属性来获取

52:40.340 --> 52:42.340
这种Left的一个当前指

52:42.340 --> 52:43.340
唯一点区别

52:43.340 --> 52:44.340
它就是这

52:44.340 --> 52:45.340
你看好了

52:45.340 --> 52:46.340
现在我去做一个缓冲运动

52:46.340 --> 52:47.340
看行不行

52:47.340 --> 52:48.340
唯一点

52:48.340 --> 52:49.340
哎

52:49.340 --> 52:50.340
包拾对吧

52:50.340 --> 52:51.340
因为我没有去写这样的那个

52:51.340 --> 52:53.340
时间绑定啊

52:53.340 --> 52:54.340
搞笑对吧

52:54.340 --> 52:55.340
这我给它写个ID

52:55.340 --> 52:57.340
它叫做一个ODIV

52:57.340 --> 52:58.340
叫Test吧

52:58.340 --> 53:00.340
我叫做Demo

53:00.340 --> 53:01.340
那我先在这呢

53:01.340 --> 53:03.340
获取一个ODIV

53:03.340 --> 53:05.340
等于一个Document.id

53:05.340 --> 53:06.340
到后面的

53:06.340 --> 53:08.340
到后面的GalElement.id

53:08.340 --> 53:09.340
好

53:09.340 --> 53:10.340
好

53:10.340 --> 53:11.340
把这个Demo放在里面来

53:11.340 --> 53:12.340
现在呢

53:12.340 --> 53:13.340
再刷新

53:13.340 --> 53:14.340
还不能再刷新

53:14.340 --> 53:15.340
我需要把它

53:15.340 --> 53:16.340
这个ODIV

53:16.340 --> 53:17.340
给把那个实现

53:17.340 --> 53:18.340
就是uncleink

53:18.340 --> 53:20.340
uncleink

53:20.340 --> 53:21.340
sdk对吧

53:21.340 --> 53:22.340
好

53:22.340 --> 53:23.340
等于一个方式

53:23.340 --> 53:24.340
好

53:24.340 --> 53:26.340
I don't start the move

53:26.340 --> 53:28.340
好

53:28.340 --> 53:29.340
好

53:29.340 --> 53:30.340
往这传这个this

53:30.340 --> 53:31.340
好

53:31.340 --> 53:32.340
先来这样的那个

53:32.340 --> 53:33.340
能表点

53:33.340 --> 53:34.340
0.5

53:34.340 --> 53:35.340
好

53:35.340 --> 53:36.340
那么写的吧

53:36.340 --> 53:37.340
如果说这么写

53:37.340 --> 53:38.340
我只是改变这一个地方的话

53:38.340 --> 53:40.340
能满足我后面那个需求吗

53:40.340 --> 53:41.340
刷新一下来看一下

53:41.340 --> 53:42.340
一点

53:42.340 --> 53:43.340
OK

53:43.340 --> 53:44.340
它在闪对吧

53:44.340 --> 53:46.340
在亮下我们的双眼对吧

53:46.340 --> 53:47.340
为什么在闪呢

53:47.340 --> 53:48.340
很简单

53:48.340 --> 53:49.340
咱来看一下

53:49.340 --> 53:50.340
这个地方

53:50.340 --> 53:51.340
其实它不是0

53:51.340 --> 53:52.340
它就是1

53:52.340 --> 53:53.340
为什么不是0

53:53.340 --> 53:54.340
它就是1呢

53:54.340 --> 53:55.340
因为你靠了

53:55.340 --> 53:56.340
我按照我之前这种

53:56.340 --> 53:57.340
这种方式来做的话

53:57.340 --> 53:58.340
这个sb的最小是什么

53:58.340 --> 53:59.340
可能是-1

53:59.340 --> 54:00.340
最大是0对吧

54:00.340 --> 54:01.340
它最大是1对吧

54:01.340 --> 54:02.340
它不是-1

54:02.340 --> 54:03.340
它可能它就是0

54:03.340 --> 54:04.340
它就是

54:04.340 --> 54:05.340
它可能

54:05.340 --> 54:07.340
它不能出现那种

54:07.340 --> 54:08.340
小数的情况对吧

54:08.340 --> 54:10.340
那我们这个透明度的范围是什么

54:10.340 --> 54:11.340
是0-1对吧

54:11.340 --> 54:12.340
是一个小数吧

54:12.340 --> 54:13.340
那你把这样的一个

54:13.340 --> 54:15.340
比如说你把这样的一个

54:15.340 --> 54:17.340
就是-1或-1

54:17.340 --> 54:18.340
或者说甚至

54:18.340 --> 54:20.340
可能会大于1的一个数的话

54:20.340 --> 54:21.340
你付给它的话

54:21.340 --> 54:22.340
那它最后指定怎么样

54:22.340 --> 54:23.340
指定

54:23.340 --> 54:24.340
要不然它就是1

54:24.340 --> 54:25.340
要不然它就是0

54:25.340 --> 54:26.340
有时候它这个透明度

54:26.340 --> 54:27.340
最后要不然它可能

54:27.340 --> 54:28.340
它就是1

54:28.340 --> 54:29.340
要不然可能它就是0

54:29.340 --> 54:30.340
你不信在这

54:30.340 --> 54:31.340
比如说你给它一个10对吧

54:31.340 --> 54:32.340
你看它最后透明度

54:32.340 --> 54:33.340
它是多少对吧

54:33.340 --> 54:34.340
咱保存下来看一眼

54:34.340 --> 54:35.340
一定怎么样

54:35.340 --> 54:36.340
一定

54:36.340 --> 54:37.340
你给它10它最后怎么样

54:37.340 --> 54:38.340
它还就是1的方式

54:38.340 --> 54:39.340
来表现出来

54:39.340 --> 54:40.340
就说在这一块的话

54:40.340 --> 54:41.340
你看好了

54:41.340 --> 54:42.340
我们不能这么去写

54:42.340 --> 54:43.340
我们不能这么去写

54:43.340 --> 54:44.340
那怎么来写呢对吧

54:44.340 --> 54:46.340
我们继续让这个素

54:46.340 --> 54:47.340
和这个sr

54:47.340 --> 54:48.340
它俩一结合

54:48.340 --> 54:51.340
有这种缓冲方式的一个趋势

54:51.340 --> 54:53.340
有这种缓冲运动的

54:53.340 --> 54:54.340
这样的一个变化的

54:54.340 --> 54:55.340
这样的一种情况

54:55.340 --> 54:58.340
变化这样一种体现

54:58.340 --> 54:59.340
那之后呢

54:59.340 --> 55:00.340
我又希望

55:00.340 --> 55:02.340
最后它有一个值

55:02.340 --> 55:03.340
一个合理值

55:03.340 --> 55:04.340
不要怎么样

55:04.340 --> 55:05.340
不要大于1

55:05.340 --> 55:07.340
就说希望它展这个0到1之间

55:07.340 --> 55:08.340
那这个时候

55:08.340 --> 55:09.340
我们该怎么来玩呢

55:09.340 --> 55:10.340
应该怎么来玩呢

55:10.340 --> 55:11.340
你看好了

55:11.340 --> 55:12.340
要知道

55:12.340 --> 55:13.340
我这个缓冲动

55:13.340 --> 55:14.340
它是0到1之间对吧

55:14.340 --> 55:15.340
好了

55:15.340 --> 55:16.340
那我在玩你的时候

55:16.340 --> 55:17.340
比如说我可以

55:17.340 --> 55:18.340
先给你扩它100倍

55:18.340 --> 55:20.340
那给你

55:20.340 --> 55:21.340
你看

55:21.340 --> 55:22.340
给你扩它100倍以后

55:22.340 --> 55:24.340
就说把你的当前值扩它100倍

55:24.340 --> 55:25.340
把你这个目标点

55:25.340 --> 55:26.340
也扩它100倍

55:26.340 --> 55:27.340
那相应呢

55:27.340 --> 55:28.340
你这速度

55:28.340 --> 55:30.340
是不是也是扩它100倍的速度

55:30.340 --> 55:31.340
对吧

55:31.340 --> 55:32.340
那你这个

55:32.340 --> 55:33.340
那你这些都扩它100倍以后的话

55:33.340 --> 55:34.340
好了

55:34.340 --> 55:35.340
那这个整个这个速度

55:35.340 --> 55:37.340
或者说包括它的一个合值

55:37.340 --> 55:38.340
它怎么样

55:38.340 --> 55:39.340
它都是有一个

55:39.340 --> 55:40.340
这样那个

55:40.340 --> 55:41.340
渐进那个变化的

55:41.340 --> 55:42.340
因为它有

55:42.340 --> 55:43.340
扩它100倍以后的话

55:43.340 --> 55:44.340
它有更多的空间

55:44.340 --> 55:45.340
来做这样的什么

55:45.340 --> 55:46.340
来

55:46.340 --> 55:47.340
来做这样一种缓冲的

55:47.340 --> 55:49.340
趋势的一个变化

55:49.340 --> 55:50.340
那

55:50.340 --> 55:51.340
确实有这样的空间

55:51.340 --> 55:52.340
做这种缓冲趋势的一个变化

55:52.340 --> 55:53.340
但是你把它合值

55:53.340 --> 55:55.340
直接付给它行吗

55:55.340 --> 55:56.340
也是不行的

55:56.340 --> 55:57.340
因为什么呢

55:57.340 --> 55:58.340
因为

55:58.340 --> 55:59.340
你是大约1的数对吧

55:59.340 --> 56:00.340
或者说你是小约

56:00.340 --> 56:01.340
连

56:01.340 --> 56:02.340
连那个数对吧

56:02.340 --> 56:03.340
那都不可以

56:03.340 --> 56:04.340
那怎么办呢

56:04.340 --> 56:06.340
在这

56:06.340 --> 56:08.340
我把你

56:09.340 --> 56:11.340
处于一个100

56:11.340 --> 56:13.340
也就是说

56:13.340 --> 56:14.340
我

56:14.340 --> 56:15.340
我考虑到

56:15.340 --> 56:16.340
我考虑到一点

56:16.340 --> 56:17.340
就是你一个特门度

56:17.340 --> 56:18.340
这样的一个区间

56:18.340 --> 56:20.340
是在0到1

56:20.340 --> 56:21.340
是在0到1

56:21.340 --> 56:22.340
按照我之前的方式

56:22.340 --> 56:23.340
来玩的话

56:23.340 --> 56:24.340
最后呢

56:24.340 --> 56:25.340
把这个合值

56:25.340 --> 56:26.340
付给你的时候的话

56:26.340 --> 56:27.340
最后体现

56:27.340 --> 56:28.340
不是这个人就是1了

56:28.340 --> 56:29.340
那不行

56:29.340 --> 56:30.340
那怎么办呢

56:30.340 --> 56:31.340
那我需要

56:31.340 --> 56:32.340
需要把你们整体的

56:32.340 --> 56:33.340
扩大100倍

56:33.340 --> 56:34.340
我们来玩玩

56:34.340 --> 56:35.340
有时候

56:35.340 --> 56:36.340
让你当前

56:36.340 --> 56:37.340
这种当前的透闷度

56:37.340 --> 56:38.340
扩大100倍

56:38.340 --> 56:39.340
显然的目标点

56:39.340 --> 56:41.340
也扩大100倍

56:41.340 --> 56:42.340
那你这个速度

56:42.340 --> 56:45.340
也是扩大100倍的速度

56:45.340 --> 56:46.340
那你再算

56:46.340 --> 56:47.340
SOR

56:47.340 --> 56:48.340
加上这样的一个

56:48.340 --> 56:52.040
SV的时候

56:52.040 --> 56:53.040
怎么样

56:53.040 --> 56:54.040
它也是

56:54.040 --> 56:55.040
0

56:55.040 --> 56:56.040
到

56:56.040 --> 56:57.040
1

56:57.040 --> 56:58.040
到100

56:58.040 --> 56:59.040
这种这样的一个

56:59.040 --> 57:00.040
变化范围

57:00.040 --> 57:01.040
那好了

57:01.040 --> 57:02.040
0到100的这种

57:02.040 --> 57:03.040
变化范围的话

57:03.040 --> 57:04.040
它可变化这个区间

57:04.040 --> 57:05.040
或者说

57:05.040 --> 57:06.040
它这种

57:06.040 --> 57:07.040
渐变的这种趋势

57:07.040 --> 57:08.040
这种缓冲的这种趋势

57:08.040 --> 57:10.040
就变得很明显

57:10.040 --> 57:11.040
那我

57:11.040 --> 57:12.040
但是我把它

57:12.040 --> 57:13.040
直接付给它的话

57:13.040 --> 57:14.040
是不行的

57:14.040 --> 57:15.040
那怎么办呢

57:15.040 --> 57:16.040
最后

57:16.040 --> 57:18.040
我再给你出100

57:18.040 --> 57:19.040
出100

57:19.040 --> 57:20.040
变成一个

57:20.040 --> 57:21.040
0到1之间

57:21.040 --> 57:22.040
这种趋势

57:22.040 --> 57:23.040
变化了

57:23.040 --> 57:24.040
这种小寿

57:24.040 --> 57:25.040
再付给它的话

57:25.040 --> 57:26.040
就可以满足我们

57:26.040 --> 57:27.040
看一下

57:27.040 --> 57:28.040
1点

57:28.040 --> 57:29.040
OK 变成0.5了

57:29.040 --> 57:30.040
对吧

57:30.040 --> 57:31.040
1点

57:31.040 --> 57:32.040
OK 缓冲的话

57:32.040 --> 57:33.040
是变到0.5

57:33.040 --> 57:34.040
那只有透明度

57:34.040 --> 57:35.040
这一块

57:35.040 --> 57:36.040
需要单独的处理

57:36.040 --> 57:37.040
其余的带香素

57:37.040 --> 57:38.040
都不用

57:38.040 --> 57:39.040
单独的来处理

57:39.040 --> 57:40.040
好了

57:40.040 --> 57:41.040
那我们有了

57:41.040 --> 57:42.040
这样的一个技术以后

57:42.040 --> 57:43.040
我们现在

57:43.040 --> 57:44.040
进一步

57:44.040 --> 57:45.040
开始去封装一个

57:45.040 --> 57:46.040
你未来可以

57:46.040 --> 57:47.040
重复去使用的

57:47.040 --> 57:48.040
一个运动寒树

57:48.040 --> 57:49.040
比如说

57:49.040 --> 57:50.040
我们之后

57:50.040 --> 57:51.040
要做Limoto

57:51.040 --> 57:52.040
我们之后

57:52.040 --> 57:53.040
可能要做

57:53.040 --> 57:54.040
其他这种运动

57:54.040 --> 57:55.040
你都可以

57:55.040 --> 57:56.040
封装一个寒树

57:56.040 --> 57:57.040
方便你在

57:57.040 --> 57:58.040
后续的开发

57:58.040 --> 57:59.040
练习中

57:59.040 --> 58:00.040
提高有这样的效率

58:00.040 --> 58:01.040
好

58:01.040 --> 58:02.040
那接下来

58:03.040 --> 58:04.040
我们来看一个PPT

58:04.040 --> 58:05.040
我们要做什么事呢

58:05.040 --> 58:06.040
我们要做的就是

58:06.040 --> 58:08.040
让一个多物体进行运动

58:08.040 --> 58:09.040
因为我们之前

58:09.040 --> 58:10.040
全都是让一个

58:10.040 --> 58:11.040
单独的物体进行运动

58:11.040 --> 58:12.040
那接下来

58:12.040 --> 58:13.040
比如说在这

58:13.040 --> 58:14.040
我先写上4个DIV

58:16.040 --> 58:17.040
4个DIV

58:17.040 --> 58:18.040
4个DIV

58:18.040 --> 58:19.040
比如说我都去

58:19.040 --> 58:20.040
改变

58:20.040 --> 58:21.040
我先写上4个DIV

58:23.040 --> 58:24.040
4个DIV

58:24.040 --> 58:25.040
比如说我都去改变

58:25.040 --> 58:26.040
它这样的一个宽度

58:26.040 --> 58:27.040
都去改变

58:27.040 --> 58:28.040
它这样的一个宽度

58:28.040 --> 58:29.040
那怎么来做呢

58:30.040 --> 58:32.040
把它先注释一下

58:32.040 --> 58:33.040
先注释

58:33.040 --> 58:34.040
那比如我在这

58:34.040 --> 58:35.040
我去握一个

58:35.040 --> 58:36.040
ODIV

58:36.040 --> 58:38.040
ODIV array

58:38.040 --> 58:39.040
让它等于一个

58:39.040 --> 58:41.040
Document.get

58:41.040 --> 58:43.040
Element by TigerName

58:43.040 --> 58:44.040
我把所有DIV

58:44.040 --> 58:45.040
全部都会到

58:45.040 --> 58:46.040
那它是一个类数组

58:46.040 --> 58:47.040
是个类数组

58:47.040 --> 58:48.040
那在这的话

58:48.040 --> 58:49.040
我要搜的DIV

58:49.040 --> 58:50.040
都有这样的一些样式

58:50.040 --> 58:51.040
当然还差一个

58:51.040 --> 58:52.040
我再给它一个

58:52.040 --> 58:53.040
比如说

58:54.040 --> 58:55.040
Marking Top

58:55.040 --> 58:56.040
比如说是一个100像素

58:56.040 --> 58:57.040
那这样的话

58:57.040 --> 58:58.040
所有的DIV之间

58:58.040 --> 58:59.040
别Top了

58:59.040 --> 59:00.040
Bottom

59:00.040 --> 59:01.040
所有的DIV之间

59:01.040 --> 59:02.040
都有我这样的一个

59:02.040 --> 59:04.040
垂直100像素的距离

59:04.040 --> 59:05.040
上线一下

59:05.040 --> 59:06.040
4个DIV

59:06.040 --> 59:07.040
那现在我要搜什么呢

59:07.040 --> 59:09.040
就是我希望碰到它

59:09.040 --> 59:10.040
碰到它

59:10.040 --> 59:11.040
碰到它

59:11.040 --> 59:12.040
碰到它

59:12.040 --> 59:13.040
碰到它们任何

59:13.040 --> 59:14.040
一个的时候的话

59:14.040 --> 59:15.040
它们这样的一个宽度

59:15.040 --> 59:16.040
都从100变到400

59:16.040 --> 59:17.040
那我们移除

59:17.040 --> 59:18.040
某一个的时候

59:18.040 --> 59:19.040
它的宽度

59:19.040 --> 59:20.040
再从400以后

59:20.040 --> 59:21.040
100

59:21.040 --> 59:23.040
所以说在这一块的话

59:23.040 --> 59:24.040
我们就利用

59:24.040 --> 59:26.040
利用原来这样的一个

59:26.040 --> 59:27.040
寒树

59:27.040 --> 59:29.040
来进行这样的一个操作

59:29.040 --> 59:30.040
那有时候也会说了

59:30.040 --> 59:32.040
我们原来这个寒树

59:32.040 --> 59:34.040
好像没有用上

59:34.040 --> 59:35.040
这个Galaxy Note对吧

59:35.040 --> 59:37.040
而且你去改变了

59:37.040 --> 59:39.040
是改变了人家的Lavage的值

59:39.040 --> 59:40.040
那没关系

59:40.040 --> 59:41.040
我只是要稍作修改

59:41.040 --> 59:42.040
就可以

59:42.040 --> 59:43.040
稍作修改

59:43.040 --> 59:44.040
怎么来稍作修改呢

59:44.040 --> 59:45.040
对吧

59:45.040 --> 59:47.040
在这比如说我用SUR

59:47.040 --> 59:48.040
来作为这样一个

59:48.040 --> 59:50.040
比如说宽度的一个当前值

59:50.040 --> 59:52.040
那怎么来去计算这个宽度的当前值呢

59:52.040 --> 59:55.040
我用SUR等于Galaxy Note

59:56.040 --> 59:57.040
去怎么样

59:57.040 --> 59:59.040
去把这个相当于我传进来

59:59.040 --> 01:00:01.040
对应的这个宽度

01:00:01.040 --> 01:00:02.040
首先传到里面去

01:00:02.040 --> 01:00:03.040
它所返回的一定什么

01:00:03.040 --> 01:00:04.040
一定是那种相速

01:00:04.040 --> 01:00:05.040
对吧

01:00:05.040 --> 01:00:06.040
一定是这种相速

01:00:06.040 --> 01:00:08.040
我们之前在这里去测试

01:00:08.040 --> 01:00:09.040
是这种比如说

01:00:09.040 --> 01:00:10.040
几百相速

01:00:10.040 --> 01:00:11.040
是个字幕串

01:00:11.040 --> 01:00:13.040
那我通过这个Pros Int

01:00:13.040 --> 01:00:14.040
Pros Int

01:00:14.040 --> 01:00:15.040
因为相速的话

01:00:15.040 --> 01:00:16.040
我们要整数就ok对吧

01:00:16.040 --> 01:00:17.040
Pros Int

01:00:17.040 --> 01:00:19.040
把它转换成一个数字整数

01:00:19.040 --> 01:00:21.040
那它要是对应的宽度的一个当前值

01:00:21.040 --> 01:00:22.040
我可能说C以后的话

01:00:22.040 --> 01:00:23.040
好了我把这

01:00:23.040 --> 01:00:24.040
粘进来对吧

01:00:24.040 --> 01:00:26.040
每次去计算速度的时候

01:00:26.040 --> 01:00:27.040
我通过这种方式

01:00:27.040 --> 01:00:29.040
来获取下这个宽度的当前值

01:00:29.040 --> 01:00:30.040
对吧

01:00:30.040 --> 01:00:32.040
来去进行这个速度的一个计算

01:00:32.040 --> 01:00:33.040
那在这的话对吧

01:00:33.040 --> 01:00:35.040
我也去进行这样的一个判断

01:00:35.040 --> 01:00:36.040
看一下你这个

01:00:36.040 --> 01:00:38.040
宽度的这个当前值

01:00:38.040 --> 01:00:40.040
师傅等于这个标点对吧

01:00:40.040 --> 01:00:41.040
等于的话就清理

01:00:41.040 --> 01:00:42.040
那最后呢

01:00:42.040 --> 01:00:43.040
我在去复制的时候

01:00:43.040 --> 01:00:45.040
也是把这个宽度当当前值

01:00:45.040 --> 01:00:46.040
和速度一结合

01:00:46.040 --> 01:00:47.040
去费给谁

01:00:47.040 --> 01:00:48.040
去费给这个宽度

01:00:48.040 --> 01:00:49.040
好

01:00:49.040 --> 01:00:50.040
好

01:00:50.040 --> 01:00:51.040
那现在我已经把这个

01:00:51.040 --> 01:00:52.040
STARM已经改完了

01:00:52.040 --> 01:00:53.040
对吧

01:00:53.040 --> 01:00:54.040
改完以后的话

01:00:54.040 --> 01:00:56.040
它就可以去对应的去修改

01:00:56.040 --> 01:00:57.040
哎

01:00:57.040 --> 01:00:59.040
这个是你所传进来的

01:00:59.040 --> 01:01:01.040
这个标签的一个宽度

01:01:01.040 --> 01:01:02.040
那现在呢

01:01:02.040 --> 01:01:04.040
把它一个注释一下

01:01:04.040 --> 01:01:05.040
我来看一下

01:01:05.040 --> 01:01:06.040
在这

01:01:06.040 --> 01:01:08.040
我通过一个放行还

01:01:08.040 --> 01:01:11.040
我去给每一个DIV都绑定时间

01:01:11.040 --> 01:01:13.040
绑定这个on mouse

01:01:13.040 --> 01:01:14.040
on mouse enter时间对吧

01:01:14.040 --> 01:01:15.040
啊

01:01:15.040 --> 01:01:16.040
师傅一如呢

01:01:16.040 --> 01:01:17.040
需要让它有相当的一个反应

01:01:17.040 --> 01:01:19.040
那在这我通过这个oDIV

01:01:19.040 --> 01:01:20.040
array啊

01:01:20.040 --> 01:01:21.040
array.less

01:01:21.040 --> 01:01:24.040
把这个速的元素全部循环出来

01:01:24.040 --> 01:01:25.040
然后呢

01:01:25.040 --> 01:01:27.040
在这我通过这个oDIV array

01:01:27.040 --> 01:01:28.040
好了

01:01:28.040 --> 01:01:29.040
i对吧

01:01:29.040 --> 01:01:31.040
给它绑定这个on mouse enter对吧

01:01:31.040 --> 01:01:32.040
和on mouse leave

01:01:32.040 --> 01:01:34.040
先绑定on mouse enter

01:01:34.040 --> 01:01:36.040
每一个触发这个时间

01:01:36.040 --> 01:01:38.040
我都让它这个标签的目

01:01:38.040 --> 01:01:39.040
然后呢

01:01:39.040 --> 01:01:40.040
把自己传进去

01:01:40.040 --> 01:01:41.040
然后这个宽度呢

01:01:41.040 --> 01:01:42.040
变到400

01:01:42.040 --> 01:01:43.040
变到400对吧

01:01:43.040 --> 01:01:44.040
好

01:01:44.040 --> 01:01:45.040
那一出的时候怎么办呢

01:01:45.040 --> 01:01:46.040
一出的时候怎么办呢

01:01:46.040 --> 01:01:47.040
一出的时候还是啊

01:01:47.040 --> 01:01:49.040
给它绑定一个on mouse leave

01:01:49.040 --> 01:01:50.040
时间

01:01:50.040 --> 01:01:51.040
给它换一个时间来绑定啊

01:01:51.040 --> 01:01:53.040
但是还是把这个so的这个标签

01:01:53.040 --> 01:01:54.040
全部都循环出来

01:01:54.040 --> 01:01:56.040
来进行这样的一个绑定啊

01:01:56.040 --> 01:01:57.040
那这呢

01:01:57.040 --> 01:01:58.040
可能变成一个100对吧

01:01:58.040 --> 01:01:59.040
那说通过一个放行还

01:01:59.040 --> 01:02:01.040
我给所有的标签都绑定了

01:02:01.040 --> 01:02:02.040
on mouse enter和on mouse leave

01:02:02.040 --> 01:02:03.040
时间啊

01:02:03.040 --> 01:02:04.040
并且呢

01:02:04.040 --> 01:02:05.040
对用的这个on mouse enter

01:02:05.040 --> 01:02:06.040
on mouse leave

01:02:06.040 --> 01:02:08.040
时间被触发的时候的话

01:02:08.040 --> 01:02:09.040
它都会让这样的一个

01:02:09.040 --> 01:02:10.040
相应的这个DIV

01:02:10.040 --> 01:02:12.040
这个宽度变成400

01:02:12.040 --> 01:02:13.040
这个宽度变成100

01:02:13.040 --> 01:02:14.040
再来看一下

01:02:14.040 --> 01:02:15.040
现在我上一次

01:02:15.040 --> 01:02:16.040
能不能

01:02:16.040 --> 01:02:18.040
很好的去完成我们所说的

01:02:18.040 --> 01:02:19.040
OK

01:02:19.040 --> 01:02:20.040
包错了对吧

01:02:20.040 --> 01:02:21.040
很给面子

01:02:21.040 --> 01:02:22.040
包错了居然

01:02:22.040 --> 01:02:23.040
为什么会包错呢

01:02:23.040 --> 01:02:24.040
这里吧

01:02:24.040 --> 01:02:25.040
好

01:02:25.040 --> 01:02:26.040
这应该是DIV

01:02:26.040 --> 01:02:27.040
应该是dome

01:02:27.040 --> 01:02:28.040
应该是dome

01:02:28.040 --> 01:02:29.040
好

01:02:29.040 --> 01:02:30.040
咱再来看一下

01:02:30.040 --> 01:02:31.040
刷新词

01:02:31.040 --> 01:02:32.040
一碰

01:02:32.040 --> 01:02:33.040
好

01:02:33.040 --> 01:02:34.040
怎么样

01:02:34.040 --> 01:02:35.040
它可以正常的

01:02:35.040 --> 01:02:36.040
缩

01:02:36.040 --> 01:02:37.040
伸缩

01:02:37.040 --> 01:02:38.040
伸缩

01:02:38.040 --> 01:02:39.040
它可以这样的伸缩

01:02:39.040 --> 01:02:40.040
对吧

01:02:40.040 --> 01:02:41.040
通通道理

01:02:41.040 --> 01:02:42.040
它也是可以的

01:02:42.040 --> 01:02:43.040
对吧

01:02:43.040 --> 01:02:46.040
但是我新同学你会发现一点

01:02:46.040 --> 01:02:47.040
对吧

01:02:47.040 --> 01:02:49.040
我稍微快一点的话

01:02:49.040 --> 01:02:50.040
怎么样

01:02:50.040 --> 01:02:51.040
其他就回不去了

01:02:51.040 --> 01:02:53.040
那这是因为想象的

01:02:53.040 --> 01:02:55.040
也是很简单的一个点

01:02:55.040 --> 01:02:56.040
就是因为

01:02:56.040 --> 01:02:57.040
现在你会发现一点

01:02:57.040 --> 01:02:58.040
我现在手胞一碰它对吧

01:02:58.040 --> 01:02:59.040
OK

01:02:59.040 --> 01:03:00.040
开启个电源器

01:03:00.040 --> 01:03:01.040
让这个物体进行运动

01:03:01.040 --> 01:03:02.040
对吧

01:03:02.040 --> 01:03:03.040
宽度变到400

01:03:03.040 --> 01:03:05.040
我一离开它以后的话

01:03:05.040 --> 01:03:06.040
又开启个电源器

01:03:06.040 --> 01:03:07.040
怎么样

01:03:07.040 --> 01:03:08.040
缩回到100对吧

01:03:08.040 --> 01:03:09.040
但是如果说

01:03:09.040 --> 01:03:10.040
我碰它

01:03:10.040 --> 01:03:11.040
它先有一个电源器

01:03:11.040 --> 01:03:12.040
让它变到400

01:03:12.040 --> 01:03:13.040
我在一出

01:03:13.040 --> 01:03:14.040
而是立马一出

01:03:14.040 --> 01:03:15.040
我是立马一出

01:03:15.040 --> 01:03:16.040
立马一出以后的话

01:03:16.040 --> 01:03:17.040
我手胞又碰到

01:03:17.040 --> 01:03:18.040
这个下一个DIV了

01:03:18.040 --> 01:03:20.040
我立马一出以后的话

01:03:20.040 --> 01:03:21.040
我就会把

01:03:21.040 --> 01:03:22.040
什么我就会把

01:03:22.040 --> 01:03:24.040
一个电源器开启对吧

01:03:24.040 --> 01:03:27.040
让它从400缩到100对吧

01:03:27.040 --> 01:03:28.040
缩100以后的话

01:03:28.040 --> 01:03:29.040
OK我立马要碰到

01:03:29.040 --> 01:03:30.040
第二个DIV的话

01:03:30.040 --> 01:03:31.040
这个第二个DIV

01:03:31.040 --> 01:03:32.040
它上来会把

01:03:32.040 --> 01:03:33.040
上一个电源器清了

01:03:33.040 --> 01:03:34.040
也就是说

01:03:34.040 --> 01:03:36.040
会把让第一个DIV

01:03:36.040 --> 01:03:37.040
往回缩的那个电源器

01:03:37.040 --> 01:03:38.040
清理掉对吧

01:03:38.040 --> 01:03:40.040
清理掉以后的话

01:03:40.040 --> 01:03:41.040
它会重开启一个电源器

01:03:41.040 --> 01:03:43.040
让它自己动弹对吧

01:03:43.040 --> 01:03:44.040
同样道理

01:03:44.040 --> 01:03:45.040
我这么一动

01:03:45.040 --> 01:03:47.040
这么一动都是这样的一回事情

01:03:47.040 --> 01:03:48.040
那有时候这个问题

01:03:48.040 --> 01:03:50.040
跟到底的一个原因是啥

01:03:50.040 --> 01:03:51.040
跟到底的原因是

01:03:51.040 --> 01:03:52.040
因为我现在

01:03:52.040 --> 01:03:53.040
同一些人段怎么样

01:03:53.040 --> 01:03:55.040
只能有一个电源器

01:03:55.040 --> 01:03:56.040
再启作用

01:03:56.040 --> 01:03:57.040
那真的于这种情况

01:03:57.040 --> 01:03:58.040
你会发现

01:03:58.040 --> 01:04:00.040
我碰完它以后

01:04:00.040 --> 01:04:01.040
我立马一到另外一个的话

01:04:01.040 --> 01:04:03.040
我希望它还能回的吧

01:04:03.040 --> 01:04:05.040
那怎么来解决呢

01:04:05.040 --> 01:04:07.040
就是我们要说的一个问题

01:04:07.040 --> 01:04:08.040
也很简单

01:04:08.040 --> 01:04:10.040
就是之前我们说的对吧

01:04:10.040 --> 01:04:11.040
刚才那种情况

01:04:11.040 --> 01:04:12.040
是因为只有一个电源器

01:04:12.040 --> 01:04:13.040
再启作用

01:04:13.040 --> 01:04:14.040
所以会发现这种

01:04:14.040 --> 01:04:15.040
回不去的情况

01:04:15.040 --> 01:04:16.040
但是如果说

01:04:16.040 --> 01:04:17.040
我大方一点

01:04:17.040 --> 01:04:18.040
我给每一个DIV

01:04:18.040 --> 01:04:19.040
都来一个自己的电源器

01:04:19.040 --> 01:04:20.040
对吧

01:04:20.040 --> 01:04:21.040
好了

01:04:21.040 --> 01:04:22.040
当我碰它

01:04:22.040 --> 01:04:23.040
再移走

01:04:23.040 --> 01:04:24.040
让它往回缩的时候

01:04:24.040 --> 01:04:25.040
是它自己的电源器

01:04:25.040 --> 01:04:26.040
对它来起作用

01:04:26.040 --> 01:04:28.040
我在碰它的时候

01:04:28.040 --> 01:04:30.040
它也是清理它自己的电源器

01:04:30.040 --> 01:04:31.040
再开启一个

01:04:31.040 --> 01:04:32.040
它自己的电源器

01:04:32.040 --> 01:04:33.040
它不会去影响到

01:04:33.040 --> 01:04:34.040
它的电源器

01:04:34.040 --> 01:04:35.040
让它自然而然

01:04:35.040 --> 01:04:36.040
就会继续去往回缩了

01:04:36.040 --> 01:04:37.040
对吧

01:04:37.040 --> 01:04:38.040
它们之间会互不影响

01:04:38.040 --> 01:04:39.040
我给它们

01:04:39.040 --> 01:04:40.040
分配一个唯一的电源器

01:04:40.040 --> 01:04:41.040
来控制它们的

01:04:41.040 --> 01:04:42.040
身和足部

01:04:42.040 --> 01:04:43.040
对吧

01:04:43.040 --> 01:04:44.040
我在清理的时候

01:04:44.040 --> 01:04:45.040
也是只清理

01:04:45.040 --> 01:04:46.040
我自己的电源器

01:04:46.040 --> 01:04:47.040
而不是清理别人的

01:04:47.040 --> 01:04:48.040
电源器

01:04:48.040 --> 01:04:49.040
在这的话

01:04:49.040 --> 01:04:50.040
咱来看一下

01:04:50.040 --> 01:04:51.040
如何大方的给它们

01:04:51.040 --> 01:04:52.040
每个标签

01:04:52.040 --> 01:04:53.040
分配一个自己的电源器

01:04:53.040 --> 01:04:54.040
这块也很简单

01:04:54.040 --> 01:04:55.040
在这

01:04:55.040 --> 01:04:56.040
我在开启

01:04:56.040 --> 01:04:57.040
电源器的时候

01:04:57.040 --> 01:04:58.040
我又让这个

01:04:58.040 --> 01:04:59.040
返回的这个标识

01:04:59.040 --> 01:05:00.040
是人家标签

01:05:00.040 --> 01:05:01.040
下面的一个属性

01:05:01.040 --> 01:05:02.040
我在清的时候

01:05:02.040 --> 01:05:03.040
也是清理

01:05:03.040 --> 01:05:04.040
标签下面的一个属性

01:05:04.040 --> 01:05:05.040
清理标签下面的一个属性

01:05:05.040 --> 01:05:06.040
这样的话

01:05:06.040 --> 01:05:07.040
就能达到

01:05:07.040 --> 01:05:09.040
每次在开启电源器的时候

01:05:09.040 --> 01:05:10.040
比如说

01:05:10.040 --> 01:05:11.040
我传递第一个电源器

01:05:11.040 --> 01:05:12.040
比如说

01:05:12.040 --> 01:05:13.040
我在鼠标

01:05:13.040 --> 01:05:14.040
在触碰第一个电源器的时候

01:05:14.040 --> 01:05:15.040
对吧

01:05:15.040 --> 01:05:16.040
我把第一个电源器

01:05:16.040 --> 01:05:17.040
传进来

01:05:17.040 --> 01:05:18.040
我开启电源器的时候

01:05:18.040 --> 01:05:19.040
是拿第一个电源器的 timer

01:05:19.040 --> 01:05:21.040
来去进行这样的记录的

01:05:21.040 --> 01:05:22.040
同样的道理

01:05:22.040 --> 01:05:23.040
我清理的时候

01:05:23.040 --> 01:05:24.040
我只是清理

01:05:24.040 --> 01:05:25.040
你第一个电源器

01:05:25.040 --> 01:05:26.040
比如说

01:05:26.040 --> 01:05:27.040
我鼠标碰到第二个电源器

01:05:27.040 --> 01:05:28.040
你传进来是第二个电源器

01:05:28.040 --> 01:05:29.040
我开启的时候

01:05:29.040 --> 01:05:30.040
也是拿你第二个电源器

01:05:30.040 --> 01:05:32.040
下面的属性来记录

01:05:32.040 --> 01:05:33.040
你在清理的时候

01:05:33.040 --> 01:05:34.040
也是只是清理

01:05:34.040 --> 01:05:35.040
自己的电源器

01:05:35.040 --> 01:05:36.040
你们的电源器

01:05:36.040 --> 01:05:37.040
所以说在这一块的话

01:05:37.040 --> 01:05:38.040
咱们看一下

01:05:38.040 --> 01:05:39.040
一旦我大方了以后的话

01:05:39.040 --> 01:05:40.040
好

01:05:40.040 --> 01:05:42.040
人家各自怎么样都能回得去了

01:05:42.040 --> 01:05:44.040
所以说这是多物体运动的一个

01:05:44.040 --> 01:05:45.040
必须重要的一个点

01:05:45.040 --> 01:05:47.040
你要给每一个

01:05:47.040 --> 01:05:48.040
给每一个标签

01:05:48.040 --> 01:05:50.040
分辨的自己的一个电源器

01:05:50.040 --> 01:05:52.040
如果你这点懂了以后的话

01:05:52.040 --> 01:05:53.040
我们再往下来再看

01:05:53.040 --> 01:05:55.040
把难度再去提升一下

01:05:55.040 --> 01:05:56.040
我们要做一个多物体

01:05:56.040 --> 01:05:58.040
不同职的运动

01:05:58.040 --> 01:05:59.040
这是什么意思呢

01:05:59.040 --> 01:06:00.040
现在你只能让这个

01:06:00.040 --> 01:06:01.040
很多个物体

01:06:01.040 --> 01:06:02.040
怎么样

01:06:02.040 --> 01:06:04.040
某一个属性的进行运动

01:06:04.040 --> 01:06:05.040
比如说

01:06:06.040 --> 01:06:07.040
你没有办法

01:06:07.040 --> 01:06:09.040
让这一个函数怎么样

01:06:09.040 --> 01:06:10.040
可以控制它

01:06:11.040 --> 01:06:12.040
可以控制

01:06:12.040 --> 01:06:14.040
这个DIV不同属性的运动

01:06:14.040 --> 01:06:15.040
就比如说

01:06:15.040 --> 01:06:16.040
在这我给你注释一下

01:06:16.040 --> 01:06:17.040
咱们再来看一下

01:06:17.040 --> 01:06:18.040
比如说我通过

01:06:20.040 --> 01:06:21.040
比如我点击它

01:06:24.040 --> 01:06:25.040
我点击这个

01:06:25.040 --> 01:06:26.040
第一个DIV

01:06:26.040 --> 01:06:28.040
我写上一个中号

01:06:28.040 --> 01:06:29.040
中号一个零

01:06:29.040 --> 01:06:30.040
比如说我点击这个

01:06:30.040 --> 01:06:31.040
第一个DIV

01:06:31.040 --> 01:06:32.040
我让这个

01:06:32.040 --> 01:06:33.040
第一个DIV掉到スターナム

01:06:33.040 --> 01:06:34.040
比如说

01:06:34.040 --> 01:06:36.040
我告诉这个スターナム

01:06:36.040 --> 01:06:38.040
你把这个DIV

01:06:38.040 --> 01:06:40.040
给它的这样一个

01:06:40.040 --> 01:06:41.040
它的这样一个宽度

01:06:41.040 --> 01:06:42.040
发生改变

01:06:42.040 --> 01:06:43.040
改变到哪呢

01:06:43.040 --> 01:06:45.040
改变到这个400的位置

01:06:45.040 --> 01:06:46.040
上面去

01:06:46.040 --> 01:06:47.040
那比如说

01:06:47.040 --> 01:06:48.040
在第二个DIV

01:06:49.040 --> 01:06:50.040
第二个DIV

01:06:50.040 --> 01:06:51.040
好

01:06:51.040 --> 01:06:53.040
我要你改变它的一个高度

01:06:53.040 --> 01:06:54.040
OK

01:06:54.040 --> 01:06:55.040
改变到400

01:06:55.040 --> 01:06:56.040
现在我们的スターナム

01:06:56.040 --> 01:06:57.040
它还是做不到的

01:06:57.040 --> 01:06:58.040
这个我们

01:06:58.040 --> 01:06:59.040
写的这个スターナム

01:06:59.040 --> 01:07:00.040
它还是做不到的

01:07:00.040 --> 01:07:01.040
做不到怎么办呢

01:07:01.040 --> 01:07:02.040
就是我就得

01:07:02.040 --> 01:07:03.040
在这个计数上

01:07:03.040 --> 01:07:04.040
去加上一些功能

01:07:04.040 --> 01:07:05.040
去加上一些功能

01:07:05.040 --> 01:07:06.040
在这我把这个

01:07:06.040 --> 01:07:07.040
Galaxy S一下

01:07:07.040 --> 01:07:08.040
放到这

01:07:09.040 --> 01:07:11.040
我说在这个3目上

01:07:11.040 --> 01:07:12.040
在这个原有的

01:07:12.040 --> 01:07:13.040
スターナム上

01:07:13.040 --> 01:07:14.040
怎么样

01:07:14.040 --> 01:07:15.040
去加上一些功能

01:07:15.040 --> 01:07:16.040
去丰富一下它

01:07:16.040 --> 01:07:17.040
让它能完成

01:07:17.040 --> 01:07:19.040
我们所设想的这个需求

01:07:19.040 --> 01:07:20.040
那么这个

01:07:20.040 --> 01:07:21.040
所设想的需求

01:07:21.040 --> 01:07:22.040
并不是毫无道理的

01:07:22.040 --> 01:07:23.040
因为

01:07:23.040 --> 01:07:24.040
我们之前的这个功能

01:07:24.040 --> 01:07:25.040
还是太单一了

01:07:25.040 --> 01:07:26.040
只能让某个物体

01:07:26.040 --> 01:07:28.040
固定的这个样式

01:07:28.040 --> 01:07:29.040
发生改变

01:07:29.040 --> 01:07:30.040
但现在

01:07:30.040 --> 01:07:31.040
我希望让你

01:07:31.040 --> 01:07:33.040
可以传进来

01:07:33.040 --> 01:07:35.040
可以指定的去传进来

01:07:35.040 --> 01:07:36.040
某一个属性对吧

01:07:36.040 --> 01:07:37.040
让某个属性

01:07:37.040 --> 01:07:39.040
发生相当一个变化

01:07:39.040 --> 01:07:40.040
那这样的话

01:07:40.040 --> 01:07:42.040
这个函数变得会更灵活一些

01:07:42.040 --> 01:07:43.040
那在这的话

01:07:43.040 --> 01:07:44.040
我们把这样的一个

01:07:44.040 --> 01:07:45.040
不同的这样的一个

01:07:46.040 --> 01:07:47.040
就是不同这样的实践

01:07:47.040 --> 01:07:49.040
或者说不同这样的一个

01:07:49.040 --> 01:07:50.040
标签的实践

01:07:50.040 --> 01:07:51.040
对的不同功能

01:07:51.040 --> 01:07:52.040
全部都写完它

01:07:52.040 --> 01:07:53.040
那是01

01:07:53.040 --> 01:07:54.040
这是23

01:07:54.040 --> 01:07:55.040
023

01:07:55.040 --> 01:07:56.040
我让第一个

01:07:56.040 --> 01:07:57.040
我让第一个DiV

01:07:57.040 --> 01:07:58.040
框架变

01:07:58.040 --> 01:07:59.040
我让第二个DiV

01:07:59.040 --> 01:08:01.040
Border

01:08:01.040 --> 01:08:02.040
Vis变

01:08:02.040 --> 01:08:04.040
比如说从一个

01:08:04.040 --> 01:08:05.040
变到了20

01:08:05.040 --> 01:08:06.040
对吧20

01:08:06.040 --> 01:08:07.040
但我现在还没有给什么

01:08:07.040 --> 01:08:08.040
还没有给人家

01:08:08.040 --> 01:08:09.040
这样的一个Border

01:08:09.040 --> 01:08:10.040
对吧

01:08:10.040 --> 01:08:11.040
没有给Border

01:08:11.040 --> 01:08:12.040
这些什么玩意

01:08:13.040 --> 01:08:14.040
DiV参与死

01:08:14.040 --> 01:08:15.040
好

01:08:16.040 --> 01:08:17.040
我要送的这样的DiV

01:08:17.040 --> 01:08:18.040
用Border

01:08:18.040 --> 01:08:19.040
Border

01:08:19.040 --> 01:08:20.040
比如说是无相送

01:08:20.040 --> 01:08:21.040
实现

01:08:21.040 --> 01:08:22.040
来个黑色

01:08:22.040 --> 01:08:23.040
来个黑色

01:08:23.040 --> 01:08:24.040
好

01:08:24.040 --> 01:08:25.040
那我让第三个DiV

01:08:25.040 --> 01:08:26.040
是透明度变

01:08:26.040 --> 01:08:27.040
有的时候

01:08:27.040 --> 01:08:28.040
所有的这个DiV

01:08:28.040 --> 01:08:29.040
可以规定它

01:08:29.040 --> 01:08:30.040
所有的这个样式

01:08:30.040 --> 01:08:31.040
发生这样的一个

01:08:31.040 --> 01:08:32.040
相应的一个变化

01:08:32.040 --> 01:08:33.040
那吞不动

01:08:33.040 --> 01:08:34.040
还是要靠它100倍来玩

01:08:34.040 --> 01:08:35.040
对吧

01:08:35.040 --> 01:08:36.040
从10

01:08:36.040 --> 01:08:37.040
从1变成

01:08:37.040 --> 01:08:38.040
1.5对吧

01:08:38.040 --> 01:08:39.040
来说

01:08:39.040 --> 01:08:40.040
从100变到50

01:08:40.040 --> 01:08:41.040
好

01:08:41.040 --> 01:08:42.040
我怎么来传

01:08:42.040 --> 01:08:43.040
那接下来

01:08:43.040 --> 01:08:44.040
我在写3目的时候

01:08:44.040 --> 01:08:45.040
的话我要注意一点

01:08:45.040 --> 01:08:46.040
对吧

01:08:46.040 --> 01:08:47.040
首先还是按照

01:08:47.040 --> 01:08:48.040
这种多物体

01:08:48.040 --> 01:08:49.040
运动的这种方式

01:08:49.040 --> 01:08:50.040
我给每个电源信

01:08:50.040 --> 01:08:51.040
给每个标签

01:08:51.040 --> 01:08:52.040
再拿开几个电源信

01:08:52.040 --> 01:08:53.040
对吧

01:08:53.040 --> 01:08:54.040
给每个标签

01:08:54.040 --> 01:08:55.040
下面

01:08:55.040 --> 01:08:56.040
因为我这样的

01:08:56.040 --> 01:08:57.040
一个态目的属性

01:08:57.040 --> 01:08:58.040
每个三毫秒

01:08:58.040 --> 01:09:00.040
来去支援这个寒树

01:09:00.040 --> 01:09:01.040
只有这个寒树

01:09:01.040 --> 01:09:02.040
好

01:09:02.040 --> 01:09:03.040
那在这的话

01:09:03.040 --> 01:09:04.040
还是要去

01:09:04.040 --> 01:09:05.040
需要怎么样

01:09:05.040 --> 01:09:06.040
需要算一下这个速度

01:09:06.040 --> 01:09:07.040
对吧

01:09:07.040 --> 01:09:08.040
需要去算这个速度

01:09:08.040 --> 01:09:09.040
去获取一下

01:09:09.040 --> 01:09:11.040
这样的一个当天值

01:09:11.040 --> 01:09:12.040
那这次

01:09:12.040 --> 01:09:13.040
可能有点兴许的不同

01:09:13.040 --> 01:09:14.040
对吧

01:09:14.040 --> 01:09:15.040
因为你再去

01:09:15.040 --> 01:09:16.040
算这个当天值的时候的话

01:09:16.040 --> 01:09:17.040
我要怎么样

01:09:17.040 --> 01:09:19.040
我要去做一个判断

01:09:19.040 --> 01:09:20.040
来看一下

01:09:20.040 --> 01:09:22.040
你要改变这个属性

01:09:22.040 --> 01:09:24.040
它是透明度

01:09:24.040 --> 01:09:25.040
还是还

01:09:25.040 --> 01:09:26.040
还是非透明度

01:09:26.040 --> 01:09:27.040
如果你是透明度的话

01:09:27.040 --> 01:09:28.040
我这个sr

01:09:28.040 --> 01:09:29.040
应该是扩大100倍的

01:09:29.040 --> 01:09:30.040
对吧

01:09:30.040 --> 01:09:31.040
并且用press-float

01:09:31.040 --> 01:09:34.610
来进行这样的使用

01:09:34.610 --> 01:09:35.610
gxl

01:09:35.610 --> 01:09:36.610
gxl

01:09:36.610 --> 01:09:37.610
这是来写一个dom

01:09:37.610 --> 01:09:39.610
这是来写一个箱的atdr

01:09:39.610 --> 01:09:40.610
这写个target

01:09:40.610 --> 01:09:41.610
这写个atdr

01:09:41.610 --> 01:09:42.610
那

01:09:42.610 --> 01:09:44.610
再称一个100

01:09:44.610 --> 01:09:45.610
好

01:09:45.610 --> 01:09:46.610
如果说你不是的话

01:09:46.610 --> 01:09:47.610
怎么办呢

01:09:47.610 --> 01:09:48.610
我就直接通过这个press-int

01:09:48.610 --> 01:09:49.610
你不透明

01:09:49.610 --> 01:09:50.610
我就只用press-int

01:09:50.610 --> 01:09:51.610
来去gxl

01:09:51.610 --> 01:09:52.610
在这写个dom

01:09:52.610 --> 01:09:53.610
来写个atdr

01:09:53.610 --> 01:09:56.110
不可以

01:09:56.110 --> 01:09:57.110
那这样当天值怎么样

01:09:57.110 --> 01:09:59.110
被我以这种方式来区分出来

01:09:59.110 --> 01:10:00.110
你透明度

01:10:00.110 --> 01:10:01.110
你这么来玩

01:10:01.110 --> 01:10:02.110
你不是透明度吗

01:10:02.110 --> 01:10:03.110
你就这么来玩

01:10:03.110 --> 01:10:04.110
那透明度

01:10:04.110 --> 01:10:05.110
那这种sr

01:10:05.110 --> 01:10:06.110
你获取完以后的话

01:10:06.110 --> 01:10:07.110
我既然呢

01:10:07.110 --> 01:10:09.110
要去正式的来算上这个速度了

01:10:09.110 --> 01:10:11.110
这个速度就是这个目标点

01:10:11.110 --> 01:10:12.110
剪去sr

01:10:14.110 --> 01:10:16.810
然后呢

01:10:16.810 --> 01:10:17.810
出一个数

01:10:17.810 --> 01:10:18.810
然后呢

01:10:18.810 --> 01:10:19.810
这个sb的

01:10:19.810 --> 01:10:20.810
我要怎么样

01:10:20.810 --> 01:10:21.810
我要给它向上或向下取整

01:10:21.810 --> 01:10:22.810
我就不麻烦来写了

01:10:22.810 --> 01:10:23.810
直接肯定c一下

01:10:23.810 --> 01:10:24.810
在这

01:10:24.810 --> 01:10:25.810
就肯定v了

01:10:25.810 --> 01:10:26.810
然后再去来一个判断

01:10:26.810 --> 01:10:27.810
判什么呢

01:10:27.810 --> 01:10:28.810
判断还是

01:10:28.810 --> 01:10:29.810
这个sr

01:10:29.810 --> 01:10:31.810
是否等于目标点了

01:10:31.810 --> 01:10:32.810
对吧

01:10:32.810 --> 01:10:33.810
如果等于目标点怎么办

01:10:33.810 --> 01:10:34.810
还是清理电源器

01:10:34.810 --> 01:10:35.810
对不对

01:10:35.810 --> 01:10:36.810
所以说这个东西

01:10:36.810 --> 01:10:37.810
跟之前呢

01:10:37.810 --> 01:10:38.810
基本上是一模一样

01:10:38.810 --> 01:10:39.810
对吧

01:10:39.810 --> 01:10:40.810
大同小异

01:10:40.810 --> 01:10:41.810
dom.timer

01:10:43.810 --> 01:10:44.810
timer

01:10:44.810 --> 01:10:45.810
然后我再去改变

01:10:45.810 --> 01:10:47.810
在改变对那属性值的时候

01:10:47.810 --> 01:10:48.810
你害得来一个判断

01:10:48.810 --> 01:10:49.810
因为啥呢

01:10:49.810 --> 01:10:50.810
因为你得去判断一下

01:10:50.810 --> 01:10:52.810
你这个atdr

01:10:52.810 --> 01:10:53.810
它到底是这个obstity

01:10:53.810 --> 01:10:54.810
对吧

01:10:54.810 --> 01:10:55.810
还是什么

01:10:55.810 --> 01:10:56.810
就是这样的一个

01:10:56.810 --> 01:10:57.810
非obstity一些值

01:10:57.810 --> 01:10:58.810
对不对

01:10:58.810 --> 01:10:59.810
如果是obstity的话

01:10:59.810 --> 01:11:00.810
好

01:11:00.810 --> 01:11:03.440
你就直接让这个dom

01:11:03.440 --> 01:11:04.440
the style

01:11:04.440 --> 01:11:05.440
第二

01:11:05.440 --> 01:11:06.440
这个obstity

01:11:06.440 --> 01:11:07.440
等于什么呢

01:11:07.440 --> 01:11:08.440
等于一个这样的一个

01:11:08.440 --> 01:11:09.440
sr

01:11:09.440 --> 01:11:11.440
加上一个sb

01:11:11.440 --> 01:11:12.440
好

01:11:12.440 --> 01:11:13.440
再处理什么

01:11:13.440 --> 01:11:14.440
再处理100

01:11:14.440 --> 01:11:15.440
就是这一块的话

01:11:15.440 --> 01:11:16.440
我打个括号

01:11:16.440 --> 01:11:17.440
打个括号

01:11:18.440 --> 01:11:19.440
处理100

01:11:19.440 --> 01:11:20.440
那否则呢

01:11:20.440 --> 01:11:21.440
对吧

01:11:21.440 --> 01:11:23.820
否则怎么样

01:11:23.820 --> 01:11:24.820
否则

01:11:24.820 --> 01:11:25.820
我的dom

01:11:25.820 --> 01:11:26.820
要改变这个style

01:11:26.820 --> 01:11:27.820
就不一定是什么值

01:11:27.820 --> 01:11:28.820
那怎么办呢

01:11:28.820 --> 01:11:29.820
我就中号atdr对吧

01:11:29.820 --> 01:11:30.820
你这个里面

01:11:30.820 --> 01:11:31.820
变量是什么值

01:11:31.820 --> 01:11:32.820
我就改变 into style

01:11:32.820 --> 01:11:33.820
你们的什么值对不对

01:11:33.820 --> 01:11:34.820
我让它等于什么

01:11:34.820 --> 01:11:35.820
等于sr

01:11:35.820 --> 01:11:37.820
加上一个sb的

01:11:37.820 --> 01:11:38.820
加上一个px

01:11:38.820 --> 01:11:39.820
像素

01:11:39.820 --> 01:11:40.820
来包存下来开演

01:11:40.820 --> 01:11:41.820
刷新一次

01:11:41.820 --> 01:11:42.820
点它

01:11:42.820 --> 01:11:43.820
宽变

01:11:43.820 --> 01:11:44.820
高变

01:11:44.820 --> 01:11:45.820
border变

01:11:45.820 --> 01:11:46.820
同路变

01:11:46.820 --> 01:11:47.820
说现在

01:11:47.820 --> 01:11:48.820
当我这么来

01:11:48.820 --> 01:11:50.820
稍稍的改进一下以后

01:11:50.820 --> 01:11:51.820
对吧

01:11:51.820 --> 01:11:52.820
我就怎么样了

01:11:52.820 --> 01:11:53.820
我就可以

01:11:53.820 --> 01:11:55.820
让任何的一个标签

01:11:55.820 --> 01:11:56.820
任何一个属性

01:11:56.820 --> 01:11:57.820
有个特点那个值

01:11:57.820 --> 01:11:58.820
对吧

01:11:58.820 --> 01:11:59.820
那现在这个寒树的功能

01:11:59.820 --> 01:12:00.820
是不是比之前那个

01:12:00.820 --> 01:12:02.820
还要更强大一些了

01:12:02.820 --> 01:12:03.820
对吧

01:12:03.820 --> 01:12:04.820
但是不要着急

01:12:04.820 --> 01:12:05.820
还没有完事

01:12:05.820 --> 01:12:06.820
我们接下来

01:12:06.820 --> 01:12:07.820
再去提升一个难度

01:12:07.820 --> 01:12:08.820
提升到这里以后的话

01:12:08.820 --> 01:12:10.820
我们就可以随意所欲的

01:12:10.820 --> 01:12:11.820
拿这个寒树

01:12:11.820 --> 01:12:12.820
去做

01:12:12.820 --> 01:12:14.820
去做运动了

01:12:14.820 --> 01:12:15.820
那我要怎么来做呢

01:12:15.820 --> 01:12:16.820
对吧

01:12:16.820 --> 01:12:17.820
来看这

01:12:17.820 --> 01:12:18.820
接下来我们要做的是什么

01:12:18.820 --> 01:12:20.820
是叫做多物体多值运动

01:12:20.820 --> 01:12:21.820
多物体多值运动的话

01:12:21.820 --> 01:12:22.820
是我们接下来想要

01:12:22.820 --> 01:12:23.820
做的这样的事情

01:12:23.820 --> 01:12:24.820
对不对

01:12:24.820 --> 01:12:25.820
多物体多值运动的话

01:12:25.820 --> 01:12:26.820
是什么意思呢

01:12:26.820 --> 01:12:27.820
是现在

01:12:27.820 --> 01:12:29.820
我是可以让不同的物体

01:12:29.820 --> 01:12:30.820
或者说让多个物体

01:12:30.820 --> 01:12:31.820
不同的值

01:12:31.820 --> 01:12:32.820
发生一些的改变

01:12:32.820 --> 01:12:33.820
对吧

01:12:33.820 --> 01:12:34.820
但是我没有办法让

01:12:34.820 --> 01:12:35.820
诶

01:12:35.820 --> 01:12:36.820
比如说多个值对吧

01:12:36.820 --> 01:12:37.820
它在改变的时候

01:12:37.820 --> 01:12:38.820
不只是改变

01:12:38.820 --> 01:12:39.820
它唯一的一个属性

01:12:39.820 --> 01:12:40.820
比如它只是改变宽

01:12:40.820 --> 01:12:41.820
对吧

01:12:41.820 --> 01:12:42.820
它只是改变高对吧

01:12:42.820 --> 01:12:44.820
这是原来的功能

01:12:44.820 --> 01:12:45.820
那现在我想让它

01:12:45.820 --> 01:12:46.820
比如说

01:12:46.820 --> 01:12:47.820
在变化的时候

01:12:47.820 --> 01:12:48.820
不只是改变宽

01:12:48.820 --> 01:12:49.820
对吧

01:12:49.820 --> 01:12:50.820
它的宽高透明度

01:12:50.820 --> 01:12:51.820
什么LIFTOP值

01:12:51.820 --> 01:12:52.820
一起发生变

01:12:52.820 --> 01:12:53.820
有时候我可以让

01:12:53.820 --> 01:12:54.820
一个物体对吧

01:12:54.820 --> 01:12:55.820
它很多个值

01:12:55.820 --> 01:12:57.820
同时发生改变

01:12:57.820 --> 01:12:58.820
那这个

01:12:58.820 --> 01:13:00.820
是我接下来想做的一件事情

01:13:00.820 --> 01:13:01.820
这个做完以后的话

01:13:01.820 --> 01:13:02.820
基本上任何的一种

01:13:02.820 --> 01:13:03.820
GS运动的话

01:13:03.820 --> 01:13:04.820
我们都可以拿它

01:13:04.820 --> 01:13:06.820
来去完成了

01:13:06.820 --> 01:13:07.820
那

01:13:07.820 --> 01:13:08.820
在不来做的吧

01:13:08.820 --> 01:13:09.820
这是一个

01:13:09.820 --> 01:13:10.820
需要我们考虑的一个问题

01:13:10.820 --> 01:13:11.820
对吧

01:13:11.820 --> 01:13:12.820
那接下来呢

01:13:12.820 --> 01:13:13.820
好

01:13:13.820 --> 01:13:14.820
我先把它都注释一下

01:13:14.820 --> 01:13:15.820
把它都注释一下

01:13:15.820 --> 01:13:16.820
把它再啃上S一下

01:13:16.820 --> 01:13:17.820
放到上面来

01:13:17.820 --> 01:13:20.320
它也注释

01:13:20.320 --> 01:13:23.140
保存

01:13:23.140 --> 01:13:24.140
好

01:13:24.140 --> 01:13:25.140
那

01:13:25.140 --> 01:13:26.140
我在这

01:13:26.140 --> 01:13:27.140
这四个DIV

01:13:27.140 --> 01:13:28.140
直线两个DIV

01:13:28.140 --> 01:13:29.140
对吧

01:13:29.140 --> 01:13:30.140
直线两个DIV就够了

01:13:30.140 --> 01:13:31.140
一个叫做

01:13:31.140 --> 01:13:32.140
ID

01:13:32.140 --> 01:13:35.140
叫做一个topDIV

01:13:35.140 --> 01:13:36.140
再来个DIV

01:13:36.140 --> 01:13:38.140
叫做一个BOTTOM

01:13:38.140 --> 01:13:40.140
BottomDIV

01:13:40.140 --> 01:13:41.140
这两个DIV

01:13:41.140 --> 01:13:42.140
我给它一个样式

01:13:42.140 --> 01:13:43.140
比如说

01:13:43.140 --> 01:13:44.140
这个样式

01:13:44.140 --> 01:13:46.140
基础的是这些

01:13:46.140 --> 01:13:48.140
这个它一个Position

01:13:48.140 --> 01:13:50.140
Obsluge

01:13:50.140 --> 01:13:51.140
Obsluge

01:13:51.140 --> 01:13:53.140
LIFTOP全部是0

01:13:53.140 --> 01:13:55.140
只是这个相应的

01:13:55.140 --> 01:13:56.140
高度可能是必要的

01:13:56.140 --> 01:13:57.140
这个top值可能是必要的

01:13:57.140 --> 01:13:58.140
不是

01:13:58.140 --> 01:13:59.140
它要是200

01:13:59.140 --> 01:14:01.140
这个对应的一个Bottom

01:14:01.140 --> 01:14:02.140
BOTOM

01:14:02.140 --> 01:14:03.140
它呢

01:14:03.140 --> 01:14:05.140
是一个

01:14:05.140 --> 01:14:06.140
比如说

01:14:06.140 --> 01:14:07.140
400

01:14:07.140 --> 01:14:08.140
对吧

01:14:08.140 --> 01:14:09.140
400

01:14:09.140 --> 01:14:10.140
我想这么做

01:14:10.140 --> 01:14:12.140
当我点击这个topDIV的时候

01:14:12.140 --> 01:14:13.140
当我点击topDIV

01:14:13.140 --> 01:14:14.140
我们现在只看这个topDIV

01:14:14.140 --> 01:14:16.140
当我点击这个topDIV的时候

01:14:16.140 --> 01:14:17.140
我让它的宽高

01:14:17.140 --> 01:14:18.140
对吧

01:14:18.140 --> 01:14:19.140
透明度

01:14:19.140 --> 01:14:20.140
和这样的一个

01:14:20.140 --> 01:14:21.140
做标的

01:14:21.140 --> 01:14:22.140
全部发生改变

01:14:22.140 --> 01:14:23.140
怎么来变呢

01:14:23.140 --> 01:14:24.140
我希望人家的

01:14:25.140 --> 01:14:26.140
宽

01:14:27.140 --> 01:14:28.140
WIDT

01:14:28.140 --> 01:14:29.140
也是要宽

01:14:29.140 --> 01:14:30.140
变成啥呢

01:14:30.140 --> 01:14:31.140
变成

01:14:31.140 --> 01:14:33.140
从100变成400

01:14:33.140 --> 01:14:34.140
高呢

01:14:34.140 --> 01:14:36.140
就是从100变成400

01:14:36.140 --> 01:14:37.140
LIFTOP值呢

01:14:37.140 --> 01:14:39.140
比如说从这个0

01:14:39.140 --> 01:14:41.140
变成一个200

01:14:41.140 --> 01:14:42.140
top值呢

01:14:42.140 --> 01:14:44.140
可能从这个200变成300

01:14:44.140 --> 01:14:45.140
透明度呢

01:14:45.140 --> 01:14:48.710
可能从这个

01:14:48.710 --> 01:14:50.710
1变成什么

01:14:50.710 --> 01:14:51.710
变成一个0.5

01:14:51.710 --> 01:14:52.710
对吧

01:14:52.710 --> 01:14:53.710
比如说我同时让它

01:14:53.710 --> 01:14:55.710
这些值发生改变

01:14:55.710 --> 01:14:56.710
那在这一块的话

01:14:56.710 --> 01:14:57.710
好

01:14:57.710 --> 01:14:58.710
我再去按照这个目的

01:14:58.710 --> 01:15:00.710
来去写寒树的时候

01:15:00.710 --> 01:15:01.710
我们就要好好地

01:15:01.710 --> 01:15:03.710
去考虑一下这些点了

01:15:03.710 --> 01:15:04.710
那首先呢

01:15:04.710 --> 01:15:06.710
它应该能介绍一个参数

01:15:06.710 --> 01:15:07.710
就是告诉谁来去运动

01:15:07.710 --> 01:15:08.710
对吧

01:15:08.710 --> 01:15:09.710
就是贴打

01:15:09.710 --> 01:15:10.710
他不动的

01:15:10.710 --> 01:15:11.710
告诉谁来去运动

01:15:11.710 --> 01:15:12.710
除了这一外的话

01:15:12.710 --> 01:15:13.710
如何能一次性的去告诉他

01:15:13.710 --> 01:15:14.710
这么多属性要变化

01:15:14.710 --> 01:15:16.710
并且变化到这些目标点呢

01:15:16.710 --> 01:15:18.710
难道你要这么写吗

01:15:18.710 --> 01:15:20.710
比如说这个ATR1

01:15:20.710 --> 01:15:21.710
ATR2

01:15:22.710 --> 01:15:23.710
比如说Target在1

01:15:23.710 --> 01:15:24.710
ATR2

01:15:24.710 --> 01:15:25.710
Target2

01:15:25.710 --> 01:15:26.710
那这样不行

01:15:26.710 --> 01:15:27.710
因为你也不知道

01:15:27.710 --> 01:15:28.710
你要传递多少个对应的属性

01:15:28.710 --> 01:15:29.710
对吧

01:15:29.710 --> 01:15:30.710
那怎么来做呢

01:15:30.710 --> 01:15:31.710
OK

01:15:31.710 --> 01:15:32.710
你看这种

01:15:32.710 --> 01:15:34.710
我们要改变任何一个属性

01:15:34.710 --> 01:15:35.710
对吧

01:15:35.710 --> 01:15:36.710
它都有它对应的这样的目标点

01:15:36.710 --> 01:15:37.710
对吧

01:15:37.710 --> 01:15:39.710
那如何我把这种属性和目标点

01:15:39.710 --> 01:15:41.710
属性和目标点

01:15:41.710 --> 01:15:42.710
这么多对

01:15:42.710 --> 01:15:43.710
结合到一起

01:15:43.710 --> 01:15:46.710
其实有一个数据结构

01:15:46.710 --> 01:15:47.710
这个数据结构的话

01:15:47.710 --> 01:15:49.710
我们之前其实是很了解的

01:15:49.710 --> 01:15:50.710
我们可以拿来直接去用

01:15:50.710 --> 01:15:51.710
就是这种对象

01:15:51.710 --> 01:15:52.710
当我们给对象

01:15:52.710 --> 01:15:53.710
比如说一个属性的时候

01:15:53.710 --> 01:15:54.710
什么要有这种key值

01:15:54.710 --> 01:15:55.710
对吧

01:15:55.710 --> 01:15:57.710
对我们要有这样的一个value值

01:15:57.710 --> 01:15:58.710
如果说

01:15:58.710 --> 01:15:59.710
如果说

01:15:59.710 --> 01:16:01.710
我把

01:16:01.710 --> 01:16:04.710
我把这样的这种对象传进去

01:16:04.710 --> 01:16:05.710
比如说

01:16:05.710 --> 01:16:06.710
Wise400

01:16:06.710 --> 01:16:07.710
然后这种Hat400

01:16:07.710 --> 01:16:08.710
然后Left呢

01:16:08.710 --> 01:16:09.710
比如说是200

01:16:09.710 --> 01:16:10.710
Top呢

01:16:10.710 --> 01:16:11.710
比如说是300

01:16:11.710 --> 01:16:12.710
反正Obsett呢

01:16:12.710 --> 01:16:14.710
比如说是50

01:16:14.710 --> 01:16:16.710
我把这种值传到里面去去的话

01:16:16.710 --> 01:16:17.710
OK

01:16:17.710 --> 01:16:19.710
那它通过这种Foreign的方式

01:16:19.710 --> 01:16:21.710
就可以把所有的这种属性

01:16:21.710 --> 01:16:22.710
全部拿出来

01:16:22.710 --> 01:16:23.710
并且呢

01:16:23.710 --> 01:16:25.710
也能跟这个属性来去取得这样的属性值

01:16:25.710 --> 01:16:27.710
那是B在这个函数中

01:16:27.710 --> 01:16:28.710
我就知道了

01:16:28.710 --> 01:16:29.710
OK

01:16:29.710 --> 01:16:30.710
你要改变的是哪些属性

01:16:30.710 --> 01:16:32.710
和对象的这个属性的目标点

01:16:32.710 --> 01:16:33.710
它是什么

01:16:33.710 --> 01:16:34.710
就说在这的话

01:16:34.710 --> 01:16:35.710
我就让它直接是什么

01:16:35.710 --> 01:16:36.710
直接是一个叫做

01:16:36.710 --> 01:16:38.710
ATTR object

01:16:38.710 --> 01:16:40.710
就可以了

01:16:40.710 --> 01:16:42.710
obj

01:16:42.710 --> 01:16:43.710
obj

01:16:43.710 --> 01:16:44.710
那在我

01:16:44.710 --> 01:16:46.710
比如说点击这样的一个DIV的时候

01:16:46.710 --> 01:16:47.710
来叫Top

01:16:47.710 --> 01:16:48.710
叫O

01:16:48.710 --> 01:16:49.710
Top

01:16:49.710 --> 01:16:50.710
DIV

01:16:50.710 --> 01:16:51.710
好

01:16:51.710 --> 01:16:53.710
来等于一个Document

01:16:53.710 --> 01:16:54.710
点Get

01:16:55.710 --> 01:16:57.710
GetElementByD的时候

01:16:57.710 --> 01:16:58.710
好

01:16:59.710 --> 01:17:00.710
在这呢

01:17:00.710 --> 01:17:01.710
来写个TopDIV

01:17:01.710 --> 01:17:02.710
TopDIV

01:17:02.710 --> 01:17:03.710
当我去点击它的时候

01:17:03.710 --> 01:17:04.710
我看一下

01:17:04.710 --> 01:17:05.710
先给它绑那个实践

01:17:05.710 --> 01:17:06.710
点击它的时候

01:17:06.710 --> 01:17:07.710
我怎么来做呢

01:17:07.710 --> 01:17:09.710
我要直接来执行一下这个Starm

01:17:10.710 --> 01:17:11.710
Starm

01:17:11.710 --> 01:17:13.710
我要往里面传

01:17:13.710 --> 01:17:15.710
传一下这个this

01:17:15.710 --> 01:17:17.710
来传一下这样的一个对象

01:17:17.710 --> 01:17:18.710
这就是

01:17:18.710 --> 01:17:20.710
让它这么多属性

01:17:20.710 --> 01:17:21.710
改变到这些目标点中

01:17:21.710 --> 01:17:23.710
最好的一种数据

01:17:23.710 --> 01:17:24.710
结构

01:17:24.710 --> 01:17:25.710
最好的这种传入方式

01:17:25.710 --> 01:17:26.710
传入方式

01:17:26.710 --> 01:17:28.710
那在这一块的话

01:17:28.710 --> 01:17:29.710
我只需要

01:17:29.710 --> 01:17:30.710
把它里面所有的纸都拿出来

01:17:30.710 --> 01:17:31.710
就OK了对不对

01:17:31.710 --> 01:17:33.710
我对它来去操作就好了

01:17:33.710 --> 01:17:35.710
那整体的这个还说的大框

01:17:35.710 --> 01:17:36.710
还是首先上来

01:17:36.710 --> 01:17:38.710
我先来清理一下这个电源器

01:17:38.710 --> 01:17:39.710
对吧

01:17:39.710 --> 01:17:40.710
然后对吧

01:17:40.710 --> 01:17:42.710
我再去开启一个电源器

01:17:42.710 --> 01:17:43.710
StandIntel

01:17:44.710 --> 01:17:46.710
每个多长时间

01:17:46.710 --> 01:17:47.710
去执行一下函数

01:17:47.710 --> 01:17:48.710
每个3毫秒

01:17:48.710 --> 01:17:50.710
还是去执行这个函数

01:17:50.710 --> 01:17:53.710
每个3毫秒去执行一下这个函数

01:17:53.710 --> 01:17:56.710
那怎么每个3毫秒来执行这个函数呢

01:17:56.710 --> 01:17:58.710
这个函数怎么来去写写写

01:17:58.710 --> 01:17:59.710
那对吧

01:17:59.710 --> 01:18:00.710
那之前

01:18:00.710 --> 01:18:02.710
在里面去改变的是一个纸

01:18:02.710 --> 01:18:03.710
我们之前是每个3毫秒

01:18:03.710 --> 01:18:04.710
执行这个函数

01:18:04.710 --> 01:18:05.710
在里面去改变一个纸

01:18:05.710 --> 01:18:06.710
但现在

01:18:06.710 --> 01:18:08.710
其实不同往昔不一样了

01:18:08.710 --> 01:18:10.710
然后在里面去改变多个纸

01:18:10.710 --> 01:18:12.710
怎么来改变多个纸呢

01:18:12.710 --> 01:18:13.710
放行还

01:18:13.710 --> 01:18:15.710
我问一个ATTR

01:18:15.710 --> 01:18:16.710
完了之后

01:18:16.710 --> 01:18:18.710
印一个ATTR OBJ

01:18:18.710 --> 01:18:20.710
比如说在这一块的话

01:18:20.710 --> 01:18:21.710
好了

01:18:21.710 --> 01:18:22.710
每个3毫秒去执行函数

01:18:22.710 --> 01:18:23.710
对吧

01:18:23.710 --> 01:18:25.710
我去放行还这个ATTR OBJ

01:18:25.710 --> 01:18:26.710
对象

01:18:26.710 --> 01:18:27.710
这边会执行多少圈

01:18:27.710 --> 01:18:29.710
会根据你这个常用的属性的

01:18:29.710 --> 01:18:30.710
各属的来决定

01:18:30.710 --> 01:18:32.710
那每一圈对应的都是字幕创

01:18:32.710 --> 01:18:33.710
比如说

01:18:33.710 --> 01:18:34.710
都是对应的字幕创

01:18:34.710 --> 01:18:35.710
YS

01:18:35.710 --> 01:18:36.710
汉的这种属性

01:18:36.710 --> 01:18:37.710
对不对

01:18:37.710 --> 01:18:38.710
YS汉的这种属性

01:18:38.710 --> 01:18:39.710
那么在当前那一圈

01:18:39.710 --> 01:18:40.710
对应的去改变

01:18:40.710 --> 01:18:41.710
这个使用的使用值就OK了

01:18:41.710 --> 01:18:42.710
对吧

01:18:42.710 --> 01:18:43.710
这时候每个3毫秒

01:18:43.710 --> 01:18:44.710
去执行函数

01:18:44.710 --> 01:18:45.710
通过放行还

01:18:45.710 --> 01:18:48.710
去改变这一圈属性

01:18:48.710 --> 01:18:50.710
那最后所体现出来的效果

01:18:50.710 --> 01:18:52.710
就是同时去改变了

01:18:52.710 --> 01:18:53.710
所有的属性

01:18:53.710 --> 01:18:54.710
那在这怎么来写呢

01:18:54.710 --> 01:18:55.710
对吧

01:18:55.710 --> 01:18:57.710
OK 还是来做这个判断的

01:18:57.710 --> 01:18:58.710
做判断的话

01:18:58.710 --> 01:19:00.710
其实跟它是比较像的

01:19:00.710 --> 01:19:02.710
把它直接拿过来就可以了

01:19:02.710 --> 01:19:03.710
在这一块对吧

01:19:03.710 --> 01:19:04.710
我去怎么样

01:19:04.710 --> 01:19:06.710
直接去做一个判断

01:19:06.710 --> 01:19:08.710
你这一圈对吧

01:19:08.710 --> 01:19:09.710
这个ATTR

01:19:09.710 --> 01:19:10.710
OBSITED

01:19:10.710 --> 01:19:11.710
还是什么YS HAT

01:19:11.710 --> 01:19:12.710
对吧

01:19:12.710 --> 01:19:13.710
如果你是OBSITED的话

01:19:13.710 --> 01:19:14.710
怎么

01:19:14.710 --> 01:19:15.710
那怎么办呢

01:19:15.710 --> 01:19:16.710
对吧

01:19:16.710 --> 01:19:17.710
我需要在前面

01:19:17.710 --> 01:19:18.710
我还需要

01:19:18.710 --> 01:19:20.710
去握一个这样的速度

01:19:20.710 --> 01:19:21.710
和SER

01:19:21.710 --> 01:19:23.710
我需要用SER

01:19:23.710 --> 01:19:24.710
来去记住一下

01:19:24.710 --> 01:19:25.710
你这样的一个

01:19:25.710 --> 01:19:26.710
吞门度对应的当限值

01:19:26.710 --> 01:19:27.710
就是如果说

01:19:27.710 --> 01:19:28.710
你这个第一圈

01:19:28.710 --> 01:19:29.710
是吞门度的情况下的话

01:19:29.710 --> 01:19:30.710
好了

01:19:30.710 --> 01:19:31.710
我用SER

01:19:31.710 --> 01:19:32.710
来去记住

01:19:32.710 --> 01:19:33.710
吞门度的当限值

01:19:33.710 --> 01:19:34.710
当然是扩大100倍的

01:19:34.710 --> 01:19:35.710
如果你不是吞门度

01:19:35.710 --> 01:19:36.710
我就来记住

01:19:36.710 --> 01:19:37.710
你这样的一个值

01:19:37.710 --> 01:19:38.710
相应的

01:19:38.710 --> 01:19:39.710
用这个对应

01:19:39.710 --> 01:19:40.710
比如说

01:19:40.710 --> 01:19:41.710
对应你要改变

01:19:41.710 --> 01:19:42.710
这个属性的目标点

01:19:42.710 --> 01:19:43.710
来去减去你这个当限值

01:19:43.710 --> 01:19:45.710
然后再出一个起义

01:19:45.710 --> 01:19:46.710
那你对应了

01:19:46.710 --> 01:19:47.710
这个改变属性的目标点

01:19:47.710 --> 01:19:48.710
它是什么呢

01:19:48.710 --> 01:19:50.710
你看你这次的ATTR

01:19:50.710 --> 01:19:51.710
它是属性的吧

01:19:51.710 --> 01:19:52.710
那这个属性

01:19:52.710 --> 01:19:53.710
它对应的这个目标点

01:19:53.710 --> 01:19:54.710
是什么呢

01:19:54.710 --> 01:19:55.710
实际上就是ATTR

01:19:55.710 --> 01:19:56.710
中号

01:19:56.710 --> 01:19:57.710
它对应的这个属性值

01:19:57.710 --> 01:19:58.710
对不对

01:19:58.710 --> 01:19:59.710
如果在这的话

01:19:59.710 --> 01:20:00.710
ATTR OBSITED

01:20:00.710 --> 01:20:01.710
在这中号ATTR的话

01:20:01.710 --> 01:20:03.710
就可以去获取到这个SB的

01:20:03.710 --> 01:20:05.710
然后我还是通过

01:20:05.710 --> 01:20:06.710
这种方式

01:20:06.710 --> 01:20:07.710
把它粘过来

01:20:07.710 --> 01:20:08.710
怎么样呢

01:20:08.710 --> 01:20:10.710
去进行向上去整

01:20:10.710 --> 01:20:13.710
然后我先不去判断一下

01:20:13.710 --> 01:20:14.710
我先不去判断

01:20:14.710 --> 01:20:15.710
它时候说停止

01:20:15.710 --> 01:20:16.710
因为这个停止的判断

01:20:16.710 --> 01:20:17.710
跟之前不太一样

01:20:17.710 --> 01:20:18.710
我来怎么样

01:20:18.710 --> 01:20:19.710
我来先看一下

01:20:19.710 --> 01:20:20.710
你这个ATTR

01:20:20.710 --> 01:20:21.710
是否等于什么

01:20:21.710 --> 01:20:22.710
是否等于这个

01:20:22.710 --> 01:20:24.710
是否等于OBSITED

01:20:24.710 --> 01:20:25.710
我先来做一下

01:20:25.710 --> 01:20:26.710
让你进行这样的一个运动

01:20:26.710 --> 01:20:27.710
对吧

01:20:27.710 --> 01:20:28.710
现在你动起来对吧

01:20:28.710 --> 01:20:29.710
什么时候停止

01:20:29.710 --> 01:20:30.710
一会我再来说

01:20:30.710 --> 01:20:31.710
如果你是它的话

01:20:31.710 --> 01:20:32.710
怎么办呢

01:20:32.710 --> 01:20:34.710
我就直接DOM.STELL.OBSITED

01:20:34.710 --> 01:20:36.710
等于一个

01:20:37.710 --> 01:20:38.710
SUR

01:20:38.710 --> 01:20:39.710
加上一个SB

01:20:39.710 --> 01:20:40.710
我再处理一个意外

01:20:40.710 --> 01:20:41.710
好

01:20:41.710 --> 01:20:42.710
否则呢

01:20:42.710 --> 01:20:48.580
否则我的DOM

01:20:48.580 --> 01:20:50.580
DOM.STELLOBSITED

01:20:50.580 --> 01:20:51.580
中号的ATTR

01:20:51.580 --> 01:20:52.580
对什么呢

01:20:52.580 --> 01:20:54.580
等于一个

01:20:54.580 --> 01:20:56.580
等于一个

01:20:56.580 --> 01:20:57.580
SUR

01:20:57.580 --> 01:20:58.580
加上一个SB

01:20:58.580 --> 01:21:00.580
再加上一个向速

01:21:01.580 --> 01:21:02.580
好

01:21:02.580 --> 01:21:03.580
那现在呢

01:21:03.580 --> 01:21:05.580
是可以让物体运动起来的

01:21:05.580 --> 01:21:06.580
但什么时候来停止呢

01:21:06.580 --> 01:21:07.580
对吧

01:21:07.580 --> 01:21:08.580
看好了

01:21:08.580 --> 01:21:09.580
这回是每个SITED

01:21:09.580 --> 01:21:10.580
它们要去执行什么

01:21:10.580 --> 01:21:11.580
去执行一个函数

01:21:11.580 --> 01:21:12.580
这个函数

01:21:12.580 --> 01:21:13.580
放弃函数

01:21:13.580 --> 01:21:15.580
让所有的属性全部发生一次改变

01:21:15.580 --> 01:21:16.580
对吧

01:21:16.580 --> 01:21:17.580
那我们这门

01:21:17.580 --> 01:21:18.580
同时改变多个属性

01:21:18.580 --> 01:21:19.580
什么时候停止

01:21:19.580 --> 01:21:20.580
这个判断条件

01:21:20.580 --> 01:21:21.580
一定是什么呢

01:21:21.580 --> 01:21:22.580
一定是

01:21:22.580 --> 01:21:23.580
当所有的属性值

01:21:23.580 --> 01:21:24.580
都到达目标点的时候

01:21:24.580 --> 01:21:25.580
才能停

01:21:25.580 --> 01:21:26.580
对吧

01:21:26.580 --> 01:21:27.580
那反而

01:21:27.580 --> 01:21:28.580
延迟的话

01:21:28.580 --> 01:21:29.580
就是反过来说的话

01:21:29.580 --> 01:21:30.580
就是

01:21:30.580 --> 01:21:31.580
如果有一个属性

01:21:31.580 --> 01:21:32.580
没到目标点

01:21:32.580 --> 01:21:33.580
我都不能停

01:21:33.580 --> 01:21:34.580
那这一块的话

01:21:34.580 --> 01:21:35.580
我就可以利用这个

01:21:35.580 --> 01:21:36.580
反过来的思路

01:21:36.580 --> 01:21:38.580
来做这样的一个停止的一个判断

01:21:38.580 --> 01:21:39.580
这样我去执行函数的时候

01:21:39.580 --> 01:21:40.580
我先在这里面

01:21:40.580 --> 01:21:41.580
先假定一下

01:21:41.580 --> 01:21:42.580
对吧

01:21:42.580 --> 01:21:43.580
通过beass up

01:21:43.580 --> 01:21:44.580
让它等一个处

01:21:44.580 --> 01:21:45.580
我先假定一下

01:21:45.580 --> 01:21:46.580
它可以停

01:21:46.580 --> 01:21:47.580
先假定一下

01:21:47.580 --> 01:21:48.580
它可以停

01:21:48.580 --> 01:21:49.580
就是这里面

01:21:49.580 --> 01:21:50.580
它是一个处

01:21:50.580 --> 01:21:51.580
这个处代表它可以停

01:21:51.580 --> 01:21:52.580
现在假定它可以停

01:21:52.580 --> 01:21:54.580
然后通过放循环的方式

01:21:54.580 --> 01:21:55.580
去改变

01:21:55.580 --> 01:21:56.580
所有的属性值

01:21:56.580 --> 01:21:57.580
对吧

01:21:57.580 --> 01:21:58.580
如果

01:21:58.580 --> 01:21:59.580
在这个发生关中

01:21:59.580 --> 01:22:00.580
有某个属性值

01:22:00.580 --> 01:22:01.580
它不等于

01:22:01.580 --> 01:22:02.580
定的目标点

01:22:04.580 --> 01:22:05.580
那是不是

01:22:05.580 --> 01:22:06.580
就是不能停了

01:22:06.580 --> 01:22:07.580
因为有一个没到目标点

01:22:07.580 --> 01:22:08.580
我们就不能停

01:22:08.580 --> 01:22:09.580
所以说

01:22:09.580 --> 01:22:11.580
这个假定的beass up

01:22:11.580 --> 01:22:13.580
应该等于一个false

01:22:13.580 --> 01:22:15.580
那怎么来起作用呢

01:22:15.580 --> 01:22:16.580
在发生关之后

01:22:16.580 --> 01:22:18.580
我来进行一个判断

01:22:18.580 --> 01:22:20.580
判断的beass up

01:22:20.580 --> 01:22:21.580
如果说

01:22:21.580 --> 01:22:22.580
你还是假定

01:22:22.580 --> 01:22:23.580
每次在执行的时候

01:22:23.580 --> 01:22:25.580
我都先假定一下

01:22:25.580 --> 01:22:26.580
beass up是处

01:22:26.580 --> 01:22:27.580
先假定你可以停

01:22:27.580 --> 01:22:28.580
如果发生关

01:22:28.580 --> 01:22:29.580
我可以结束以后

01:22:29.580 --> 01:22:31.580
它没有进过一次

01:22:31.580 --> 01:22:32.580
A判断

01:22:32.580 --> 01:22:34.580
它根本就没有进过

01:22:34.580 --> 01:22:35.580
F判断

01:22:35.580 --> 01:22:36.580
这么受的目标点

01:22:36.580 --> 01:22:38.580
都怎么样

01:22:38.580 --> 01:22:40.580
那么受的当性值

01:22:40.580 --> 01:22:41.580
所有属性的当性值

01:22:41.580 --> 01:22:42.580
都等于目标点了

01:22:42.580 --> 01:22:43.580
对吧

01:22:43.580 --> 01:22:44.580
那就可以停了

01:22:44.580 --> 01:22:45.580
所以说

01:22:45.580 --> 01:22:46.580
这个beass up

01:22:46.580 --> 01:22:47.580
依旧它是处

01:22:47.580 --> 01:22:48.580
但是如果说

01:22:48.580 --> 01:22:49.580
有一个没到目标点的话

01:22:49.580 --> 01:22:50.580
就beass up

01:22:50.580 --> 01:22:51.580
就变成false

01:22:51.580 --> 01:22:52.580
那就停不了了

01:22:52.580 --> 01:22:53.580
在这的话

01:22:53.580 --> 01:22:54.580
我去判断一下

01:22:54.580 --> 01:22:55.580
beass up

01:22:55.580 --> 01:22:56.580
是不是等于处

01:22:56.580 --> 01:22:57.580
如果等于处的话

01:22:57.580 --> 01:22:58.580
我就可以在这去清理掉

01:22:58.580 --> 01:22:59.580
你的刀

01:22:59.580 --> 01:23:00.580
点天门了

01:23:00.580 --> 01:23:01.580
好

01:23:01.580 --> 01:23:02.580
我来释出

01:23:02.580 --> 01:23:03.580
假定over

01:23:04.580 --> 01:23:05.580
点击

01:23:05.580 --> 01:23:06.580
OK

01:23:06.580 --> 01:23:07.580
怎么样

01:23:07.580 --> 01:23:08.580
这门我先不说

01:23:08.580 --> 01:23:09.580
说放一下

01:23:09.580 --> 01:23:11.580
来刷一次来看

01:23:11.580 --> 01:23:12.580
点击

01:23:12.580 --> 01:23:13.580
OK

01:23:13.580 --> 01:23:14.580
怎么样

01:23:14.580 --> 01:23:15.580
是不是所有都怎么样

01:23:15.580 --> 01:23:16.580
都到达目标点了

01:23:16.580 --> 01:23:17.580
所有的这样一个

01:23:17.580 --> 01:23:18.580
看

01:23:18.580 --> 01:23:19.580
所有的这样一个指

01:23:19.580 --> 01:23:20.580
全到目标点了

01:23:20.580 --> 01:23:21.580
并且它怎么样

01:23:21.580 --> 01:23:22.580
也去停止

01:23:22.580 --> 01:23:24.580
也去输这个over了

01:23:24.580 --> 01:23:25.580
好

01:23:25.580 --> 01:23:26.580
那这门

01:23:26.580 --> 01:23:27.580
咱们来看一下

01:23:27.580 --> 01:23:28.580
我们多不体力

01:23:28.580 --> 01:23:29.580
多之运动

01:23:29.580 --> 01:23:30.580
其实是可以去完成的

01:23:30.580 --> 01:23:31.580
对吧

01:23:31.580 --> 01:23:32.580
但这门

01:23:32.580 --> 01:23:33.580
什么意思呢

01:23:33.580 --> 01:23:34.580
它是帮助你

01:23:34.580 --> 01:23:35.580
去感知这个物体

01:23:35.580 --> 01:23:36.580
已经运动结束的

01:23:36.580 --> 01:23:37.580
对吧

01:23:37.580 --> 01:23:38.580
回调是什么意思呢

01:23:38.580 --> 01:23:39.580
对吧

01:23:39.580 --> 01:23:40.580
咱们在后面

01:23:40.580 --> 01:23:41.580
会讲到多种

01:23:41.580 --> 01:23:42.580
这种回调的情况

01:23:42.580 --> 01:23:43.580
node.js里面

01:23:43.580 --> 01:23:44.580
或是我们前段那些

01:23:44.580 --> 01:23:45.580
操作中

01:23:45.580 --> 01:23:46.580
很多里面都用到

01:23:46.580 --> 01:23:48.580
这种回调的这种机制了

01:23:48.580 --> 01:23:49.580
回调到底怎么回事呢

01:23:49.580 --> 01:23:50.580
你现在可以列成

01:23:50.580 --> 01:23:51.580
就是当你

01:23:51.580 --> 01:23:52.580
做完一件事

01:23:52.580 --> 01:23:53.580
出发了某种状态以后

01:23:53.580 --> 01:23:54.580
OK 你能感知到

01:23:54.580 --> 01:23:55.580
然后你要做另外一件事情

01:23:55.580 --> 01:23:56.580
对吧

01:23:56.580 --> 01:23:57.580
那整个这一套

01:23:57.580 --> 01:23:59.580
整个过程

01:23:59.580 --> 01:24:00.580
它就是这种回调的

01:24:00.580 --> 01:24:01.580
一个过程

01:24:01.580 --> 01:24:02.580
那这种机制呢

01:24:02.580 --> 01:24:03.580
对吧

01:24:03.580 --> 01:24:04.580
也叫这种回调的

01:24:04.580 --> 01:24:05.580
一个机制

01:24:05.580 --> 01:24:07.580
那如果说

01:24:07.580 --> 01:24:08.580
我们做A这种事

01:24:08.580 --> 01:24:09.580
对吧

01:24:09.580 --> 01:24:10.580
好 做完以后的话

01:24:10.580 --> 01:24:11.580
能感知到

01:24:11.580 --> 01:24:12.580
在做B这种事

01:24:12.580 --> 01:24:13.580
对吧

01:24:13.580 --> 01:24:14.580
A和B

01:24:14.580 --> 01:24:15.580
都是拿寒兽人来实现的

01:24:15.580 --> 01:24:16.580
那这种B这个寒兽

01:24:16.580 --> 01:24:17.580
我们可以管的

01:24:17.580 --> 01:24:18.580
叫做回调寒兽

01:24:18.580 --> 01:24:19.580
因为

01:24:19.580 --> 01:24:20.580
它是当A做完以后

01:24:20.580 --> 01:24:21.580
对吧

01:24:21.580 --> 01:24:22.580
感知到以后

01:24:22.580 --> 01:24:23.580
再去形容的

01:24:23.580 --> 01:24:24.580
这样的一个功能

01:24:24.580 --> 01:24:25.580
它叫做回调寒兽

01:24:25.580 --> 01:24:26.580
是不是在这一块儿

01:24:26.580 --> 01:24:27.580
能看了

01:24:27.580 --> 01:24:28.580
我在以后

01:24:28.580 --> 01:24:29.580
回到机制的时候

01:24:29.580 --> 01:24:30.580
我让它

01:24:30.580 --> 01:24:31.580
回到寒兽

01:24:31.580 --> 01:24:32.580
它怎么回到反了

01:24:32.580 --> 01:24:33.580
我可以在这个寒兽中

01:24:33.580 --> 01:24:35.580
来去传入这个方式

01:24:35.580 --> 01:24:36.580
这个方式

01:24:36.580 --> 01:24:37.580
OK

01:24:37.580 --> 01:24:38.580
最后

01:24:38.580 --> 01:24:39.580
会被当作实际传授

01:24:39.580 --> 01:24:40.580
传给它

01:24:40.580 --> 01:24:41.580
会被当作实际传授

01:24:41.580 --> 01:24:42.580
传给它

01:24:42.580 --> 01:24:43.580
那我希望它

01:24:43.580 --> 01:24:44.580
什么时候来自实行

01:24:44.580 --> 01:24:45.580
当物体

01:24:45.580 --> 01:24:46.580
受到目标点

01:24:46.580 --> 01:24:47.580
全部运动到

01:24:47.580 --> 01:24:48.580
对的这个值的时候的话

01:24:48.580 --> 01:24:49.580
受到这个当天值

01:24:49.580 --> 01:24:50.580
全部运动到

01:24:50.580 --> 01:24:51.580
这个目标点的时候

01:24:51.580 --> 01:24:52.580
受到当天值

01:24:52.580 --> 01:24:53.580
全部运动到

01:24:53.580 --> 01:24:54.580
这个目标点的时候

01:24:54.580 --> 01:24:55.580
我们再来

01:24:55.580 --> 01:24:56.580
去执行这样的一个

01:24:56.580 --> 01:24:57.580
回调寒兽

01:24:57.580 --> 01:24:59.580
那在这一块儿的话

01:24:59.580 --> 01:25:00.580
我只要在这里面

01:25:00.580 --> 01:25:01.580
去判断一下

01:25:01.580 --> 01:25:02.580
对吧

01:25:02.580 --> 01:25:03.580
因为一旦你

01:25:03.580 --> 01:25:04.580
接到这个F

01:25:04.580 --> 01:25:05.580
判断里面以后的话

01:25:05.580 --> 01:25:06.580
就代表着所有的

01:25:06.580 --> 01:25:07.580
这个属性都运动到

01:25:07.580 --> 01:25:08.580
这样的目标点

01:25:08.580 --> 01:25:09.580
里面去了对吧

01:25:09.580 --> 01:25:10.580
就说我先来看一下

01:25:10.580 --> 01:25:11.580
你有没有Type O

01:25:11.580 --> 01:25:12.580
并且来看一下Type O

01:25:12.580 --> 01:25:13.580
其实是不是等于

01:25:13.580 --> 01:25:14.580
一个寒兽

01:25:14.580 --> 01:25:15.580
对吧

01:25:15.580 --> 01:25:16.580
如果等于一个寒兽的话

01:25:16.580 --> 01:25:17.580
FUNCTLN

01:25:17.580 --> 01:25:18.580
好了

01:25:18.580 --> 01:25:19.580
我就去执行你

01:25:19.580 --> 01:25:20.580
好

01:25:20.580 --> 01:25:21.580
那这个是个逻运算符

01:25:21.580 --> 01:25:22.580
如果前面

01:25:22.580 --> 01:25:23.580
是处的话

01:25:23.580 --> 01:25:24.580
才会去看后面

01:25:24.580 --> 01:25:25.580
对吧

01:25:25.580 --> 01:25:26.580
如果前面是False的话

01:25:26.580 --> 01:25:27.580
后面就不看了对吧

01:25:27.580 --> 01:25:28.580
看后面是什么意思

01:25:28.580 --> 01:25:29.580
就是相当于

01:25:29.580 --> 01:25:31.580
能够去执行一遍它

01:25:31.580 --> 01:25:32.580
对吧

01:25:32.580 --> 01:25:33.580
那也就是说是

01:25:33.580 --> 01:25:34.580
前面成立以后的话

01:25:34.580 --> 01:25:36.580
就去执行它

01:25:36.580 --> 01:25:37.580
这也是满足我们这样的

01:25:37.580 --> 01:25:38.580
逻辑判断

01:25:38.580 --> 01:25:39.580
就是如果你

01:25:39.580 --> 01:25:40.580
Coback

01:25:40.580 --> 01:25:41.580
其实等于一个寒兽的话

01:25:41.580 --> 01:25:42.580
我才去执行你

01:25:42.580 --> 01:25:43.580
好了

01:25:43.580 --> 01:25:44.580
那现在这个回调系统

01:25:44.580 --> 01:25:45.580
咱们已经引入成功了

01:25:45.580 --> 01:25:46.580
那我在这个回调里面

01:25:46.580 --> 01:25:47.580
再去干净事情

01:25:47.580 --> 01:25:48.580
对吧

01:25:48.580 --> 01:25:49.580
再去去执行一次

01:25:49.580 --> 01:25:50.580
这个Summon

01:25:50.580 --> 01:25:52.580
然后我还是传承了

01:25:52.580 --> 01:25:54.580
这回我就不传Dace

01:25:54.580 --> 01:25:55.580
我去传一下

01:25:55.580 --> 01:25:57.580
BottomDIV

01:25:57.580 --> 01:25:58.580
来问一个

01:25:58.580 --> 01:26:01.580
O-B-O-T-T-O-M-DIV

01:26:01.580 --> 01:26:02.580
让它等于一个

01:26:02.580 --> 01:26:05.580
Document.getElementByD

01:26:05.580 --> 01:26:07.580
在这呢

01:26:07.580 --> 01:26:08.580
写上一个叫做

01:26:08.580 --> 01:26:10.580
B-O-T-T-O-M-DIV

01:26:10.580 --> 01:26:11.580
好

01:26:11.580 --> 01:26:12.580
我让这个O-BottomDIV

01:26:12.580 --> 01:26:13.580
作为这样一个

01:26:13.580 --> 01:26:15.580
要改变的一个值

01:26:15.580 --> 01:26:16.580
对吧

01:26:16.580 --> 01:26:18.580
要改变的这样一个标签

01:26:18.580 --> 01:26:20.580
还是把它属性

01:26:20.580 --> 01:26:22.580
全部运动到这个点

01:26:22.580 --> 01:26:24.580
最后再给它来个回调

01:26:24.580 --> 01:26:25.580
再来看一下

01:26:25.580 --> 01:26:27.580
叫做E-O-B-O-T-O-M-DIV

01:26:32.330 --> 01:26:34.330
现在咱们再来看一下

01:26:34.330 --> 01:26:36.330
我通过这个函数

01:26:36.330 --> 01:26:37.330
通过这个函数

01:26:37.330 --> 01:26:39.330
先让这个PubDIV

01:26:39.330 --> 01:26:40.330
全部运动到这

01:26:40.330 --> 01:26:41.330
然后呢

01:26:41.330 --> 01:26:42.330
运动完以后

01:26:42.330 --> 01:26:43.330
有个回调

01:26:43.330 --> 01:26:44.330
回调

01:26:44.330 --> 01:26:45.330
会怎么样 会执行它

01:26:45.330 --> 01:26:47.330
就会让这个O-Bottom

01:26:47.330 --> 01:26:49.330
也全部运动到这

01:26:49.330 --> 01:26:50.330
那Bottom

01:26:50.330 --> 01:26:51.330
运动完以后

01:26:51.330 --> 01:26:52.330
怎么办呢

01:26:52.330 --> 01:26:53.330
最后呢 这个函数回调

01:26:53.330 --> 01:26:54.330
再来执行

01:26:54.330 --> 01:26:55.330
谈一个传承出来

01:26:55.330 --> 01:26:56.330
整个过程咱看

01:26:56.330 --> 01:26:57.330
有没有实现成功

01:26:57.330 --> 01:26:58.330
点击

01:26:58.330 --> 01:27:01.330
点击 不用 再点击一下就行了

01:27:01.330 --> 01:27:03.330
再来一次 点击 对吧

01:27:03.330 --> 01:27:05.330
OK 再谈个双手来

01:27:05.330 --> 01:27:07.330
有时候当第一个DIV运动完事以后的话

01:27:07.330 --> 01:27:09.330
第二个DIV OK

01:27:09.330 --> 01:27:11.330
由于在回到机制里面去写的 对吧

01:27:11.330 --> 01:27:14.330
所以说呢 它会立马的去怎么样进行运动

01:27:14.330 --> 01:27:15.330
它运动完以后呢

01:27:15.330 --> 01:27:18.330
最后那个回掉的那个寒兽会谈一个双手来

01:27:18.330 --> 01:27:21.330
整个好了 整个这样那个运动寒兽

01:27:21.330 --> 01:27:22.330
咱就封上成功了

01:27:22.330 --> 01:27:24.330
有时候多物体多值运动

01:27:24.330 --> 01:27:27.330
加上这种回掉机制的这种多物体多值运动那个寒兽

01:27:27.330 --> 01:27:29.330
就已经搞定了

01:27:29.330 --> 01:27:30.330
那我们用它的话对吧

01:27:30.330 --> 01:27:32.330
可以在我们后续的开发中

01:27:32.330 --> 01:27:35.330
做多种这种运动的一个应用

01:27:35.330 --> 01:27:37.330
就比如说我们后面要讲这个轮摩图是吧

01:27:37.330 --> 01:27:40.330
我希望你这一刻回去至少听两到三遍

01:27:40.330 --> 01:27:43.330
我们把这样的一个思路全部捋清楚

01:27:43.330 --> 01:27:44.330
但那你有更好的想法

01:27:44.330 --> 01:27:45.330
你觉得我这写的不好

01:27:45.330 --> 01:27:47.330
或说你觉得这能写的再好一点的话

01:27:47.330 --> 01:27:49.330
你可以把你的想法融到里面去

01:27:49.330 --> 01:27:51.330
给它变得更完美一些

01:27:51.330 --> 01:27:54.330
然后你拿到这种寒兽对吧

01:27:54.330 --> 01:27:56.330
去把这个轮摩图给它搞定成功

01:27:56.330 --> 01:28:00.330
一旦你有了这种寒兽以后的话

01:28:00.330 --> 01:28:01.330
你再写那么多的话

01:28:01.330 --> 01:28:03.330
你会发现它并没有那么难

01:28:03.330 --> 01:28:04.330
那咱这一刻

01:28:04.330 --> 01:28:06.330
作为咱这个GS运动的第一节

01:28:06.330 --> 01:28:07.330
已经告一段落了

01:28:07.330 --> 01:28:10.330
那我们希望在下一个课

01:28:10.330 --> 01:28:11.330
在开课的时候的话

01:28:11.330 --> 01:28:14.330
是我们下一个运动课的时候的话

01:28:14.330 --> 01:28:18.330
你能把这些课的东西全部都搞定

01:28:18.330 --> 01:28:20.330
你不要说是这一课

01:28:20.330 --> 01:28:22.330
看完以后懂了一半的吧

01:28:22.330 --> 01:28:24.330
你再去看下面它的一节课

01:28:24.330 --> 01:28:25.330
因为这两点课的话

01:28:25.330 --> 01:28:28.330
说实话都是跟运动课相关的

01:28:28.330 --> 01:28:30.330
虽然说稍微有点这样的一个分离

01:28:30.330 --> 01:28:35.330
但是还是有点大同小异的

01:28:35.330 --> 01:28:37.330
如果说你这一课

01:28:37.330 --> 01:28:38.330
美菜里也透的话

01:28:38.330 --> 01:28:40.330
你再听另外一一课来说的话

01:28:40.330 --> 01:28:41.330
可能你还会它去蒙

01:28:41.330 --> 01:28:42.330
就说咱这一块

01:28:42.330 --> 01:28:44.330
我接你还是一步一步来

01:28:44.330 --> 01:28:46.330
先把我这东西全部搞懂之后的话

01:28:46.330 --> 01:28:47.330
再来听我下面的一课

01:28:47.330 --> 01:28:49.330
好了那咱今天先到这了

