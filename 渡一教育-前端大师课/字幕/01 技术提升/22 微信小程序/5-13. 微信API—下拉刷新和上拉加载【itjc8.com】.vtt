WEBVTT

00:00.000 --> 00:07.200
OK 啊 这节课的话 咱们来看一下微信小程序里面一个常见的英勇啊 就是这个下拉刷新

00:07.760 --> 00:14.240
和上拉家载啊 这个的话 基本上你在做这个微信小程序的时候啊 特别涉及到比如像电商这种

00:14.720 --> 00:19.680
是一定会涉及到的 对吧 我如何下拉刷新啊 然后获取到最新的数据

00:20.160 --> 00:26.560
然后以及一个上拉的这个家载 好 那我们这边我们来看个例子啊 这边的话 然后准备了个例子

00:27.040 --> 00:30.480
这个是以前啊 带着学生写的一个豆瓣电影

00:31.280 --> 00:36.400
好 然后接下来这边的话有个查看更多 对不对 好 我们这边呢 我们点击这个查看更多

00:37.360 --> 00:44.240
好 然后过来 过来的话 你看这边的话 是不是就类似于那种列表啊 把这个对应的这个电影把它渲染出来

00:44.800 --> 00:50.480
好 然后接下来换我这边下拉 所谓下拉的话 就是按住啊 不放 然后接下往下拖动

00:51.120 --> 00:57.200
对吧 往下拖动 然后接下来的话 这边开始这个家载 家载之后 然后接下来获取这个最新的数据

00:57.680 --> 01:04.000
当我这边的话没有获取啊 你如果有新的数据的话 你就获取获取完了之后 然后再拼到这个数据前面

01:04.560 --> 01:10.000
对不对 如果有新的数据的话 拼到这个数据前面 那我们是不是就是完成了一个刷新的这个操作

01:10.560 --> 01:18.560
对吧 好 然后接下来的话这个上拉家载 所谓上拉家载的话 然后又被称之为什么呢 又被称之为这个触底家载

01:19.360 --> 01:25.520
就我们这边往下滑啊 往下滑之后 人家快要到底的时候啊 这边开始夹载更多的电影

01:26.040 --> 01:32.320
夹载完了之后 然后接下来这边 后面是不是夹载出来的这个电影 对不对 好 继续往下面走

01:33.200 --> 01:35.560
更多电影 夹载中 好 继续往下

01:36.160 --> 01:43.280
ok 啊 继续夹载 啊 夹载的话 现在已经就是已经到底了 到底了之后呢 他再往下走 这边就可以给他一个提示

01:44.000 --> 01:48.080
没有更多了 或者有些的话 就直接在这里 这里写个提示

01:49.040 --> 01:55.400
对不对 啊 这里的话就显示一个啊 已经没有更多的了 ok 啊 这个的话就是非常常见的

01:56.000 --> 02:00.160
这个需求啊 下拉刷新 一个是下拉刷新 一个是上拉家载

02:00.760 --> 02:05.880
好 这边的话 我这个例子的话是已经写好了啊 所以这边的话我带着大家来看一下

02:06.400 --> 02:10.840
ok 好 这个的话是以前带着学生写的一个这个豆瓣电影

02:11.240 --> 02:18.400
说他这边的话 涉及到了什么的 涉及到了那个豆瓣电影的这个服务器的这个数据啊 所以我这边的话 首先还得给他讲一下

02:18.800 --> 02:26.240
就这边你首先的话得把这个服务器得把它弄出来 ok 好 我们这边笔记里面记下吧一点一点带着大家看一下

02:27.040 --> 02:28.640
好 所谓下拉刷新

02:29.840 --> 02:32.880
下拉刷新 就是用户

02:34.080 --> 02:39.120
按住这个页面 不放 然后往下拖动

02:40.560 --> 02:45.600
对不对 往下拖动 然后这个获取最新的

02:45.840 --> 02:51.520
最新的这个信息啊 然后加所谓什么呢 所谓这个上拉家载

02:52.560 --> 02:54.720
上拉家载又被

02:56.160 --> 02:58.160
称之为什么啊 触底

02:59.280 --> 03:02.000
触底家载啊 就是当这个

03:03.280 --> 03:10.480
用户 拖动到滑动啊 我们一个叫做滑动 滑动到这个底部的时候

03:12.480 --> 03:15.120
啊 然后接下来加载 什么更多的信息

03:17.420 --> 03:22.060
对不对 加载更多的信息这个实际上就相当于以前pc端的分页啊

03:22.940 --> 03:31.180
这个实际上就相当于以前这个pc端的这个分页

03:31.740 --> 03:35.580
啊 以前pc端的话下面是不是有个那个分页对不对 第一页 第二页 第三页

03:35.900 --> 03:43.980
那现在移动端移动端的话没有什么这个分页的逐渐啊 移动端的话一般就是你往下滑 滑的话 然后家就是加载下野的内容

03:44.460 --> 03:48.540
ok啊 然后这个下拉刷新的话就是获取最新的内容啊

03:49.420 --> 03:53.900
ok好 然后接下来的话我这边的话已经写好了 说说我们这边的话这个准备工作

03:55.260 --> 03:59.420
就如果你想要看我这个项目的这个效果啊 实际上这个项目的话你这个

04:00.060 --> 04:03.900
跑不跑起来都无所谓啊 到时候你主要把这个代码看一下就可以了啊

04:04.220 --> 04:07.020
但如果你想看的话我们这边先做一些这个准备工作

04:07.660 --> 04:11.740
就到时候我这边的话我会给你什么呢 我这边的话会给你

04:12.460 --> 04:15.740
我把这个最小画一下啊 这边的话有个豆瓣

04:16.780 --> 04:21.180
看到没有 这是豆瓣 豆瓣的话 然后接下来这边的话就包含两个东西

04:21.740 --> 04:27.260
一个这个豆瓣这个的话就是我们的微信小程序啊 这个的话现在在这已经跑起来了

04:27.740 --> 04:31.740
对这个是我们的微信小程序 还有一个的话是豆瓣server

04:32.140 --> 04:35.100
那这个的话是顾名思义就是什么 是服务器

04:35.660 --> 04:41.580
对服务器这个服务器的话是用那个ka写的啊 好 然后接下的话你这边呢 首先这边

04:41.740 --> 04:48.620
你得把这个数据得把它恢复了 这边用的是这个mango db啊mango db的话什么你接触过好几次了

04:48.940 --> 04:53.340
对吧 大家应该也不陌生了 ok啊 所以我们是首先第一步啊

04:55.100 --> 05:01.900
首先第一步需要将这个豆瓣的这个服务器

05:03.020 --> 05:07.820
跑起来啊 你要跑起来的话那首先需要恢复

05:08.780 --> 05:09.980
呃 数据库

05:10.860 --> 05:19.020
恢复数据库 然后接下来里面有一个什么呢 有一个叫做movice.json的这个文件

05:20.540 --> 05:23.260
ok 你这边你可以看一下 我这边打开了的

05:23.980 --> 05:24.460
在这里

05:26.380 --> 05:32.220
呃movice.json 你看里面的话是不是就全部都是这个接受文件 对不对 这个的话其实就是我们的数据

05:33.340 --> 05:37.740
啊 这个就是我们的数据 好 然后接下来的话我们这边我们要进行一个这个恢复

05:38.060 --> 05:46.420
恢复的话你就用这个命令 就用这个命令啊 这边的话我给你解个图啊 放放到那吧

05:47.060 --> 05:50.980
放到这里面 恢复命令

05:52.740 --> 06:02.300
命令如下 ok 简单解释一下 首先的话你这边的话需要切换到这个冰木炉下面

06:04.380 --> 06:11.020
就这边啊 就这边 这边的话你首先的话你要来到要切换到什么呢 你至少要切换到你这个

06:11.100 --> 06:16.780
mongo DB的这个安装木炉 安装木炉里面有个冰啊 这个恢复数据的话大家之前是恢复的

06:17.100 --> 06:21.420
这个恢复过的 怎么当时我们用的是什么 我们用的是mongo restore

06:22.620 --> 06:29.260
对不对 mongo restore mongo restore的话那是恢复整个这个数据库 它里面的话主要是什么呢 主要是B声

06:30.060 --> 06:35.100
对吧 我们这边的话是全是这个接受啊 这里面的话是一条一条接受

06:35.340 --> 06:38.540
啊 一条一条接受的话那你这边用什么命令呢 这边就用这个

06:39.420 --> 06:42.460
冰下面 这边有一个叫做mongo import

06:44.140 --> 06:50.300
看到没有 mongo import啊 就用这个命令 好用这个命令 然后接下来这边mongo import 然后杠地

06:50.540 --> 06:53.900
然后接下来杠地后面是什么呢 杠地后面是你数据库的名字

06:56.240 --> 06:57.680
这个是数据库的名字

06:59.680 --> 07:06.320
数据库的名字啊 然后接下来的话杠C 杠C的话是这个就是集合的名字

07:06.640 --> 07:10.960
集合的名字啊 可以看到我这边数据库名字叫做豆瓣

07:11.360 --> 07:18.480
好 人家这个集合的名字叫做movice啊 这两个的话你就照着写 你不要改啊 因为你改了的话服务器那边

07:18.720 --> 07:26.560
那个那边还要改挺麻烦的啊 你这边就照着写这个数据库就叫豆瓣 然后接下来这个集合的名字就叫做movice

07:26.960 --> 07:29.600
好 然后杠杠file这个就是你恢复的

07:30.320 --> 07:37.200
就是要恢复的这个接受文件的所在路径

07:38.800 --> 07:46.320
所在路径啊 我这边的话我当时是把它放到桌面上了的啊 这边就是把这个路径把拿过来 你如果是那个

07:47.280 --> 07:55.280
呃 如果是那个这个苹果系统的同学啊 苹果系统和我一样是苹果系统的话 你这边比较方便的是什么呢 比如你把前面的都已经输完了

07:55.760 --> 08:01.440
对吧 前面已经输完了 好 然后接下来的话 你这边呢 你可以直接把它那个拖过来

08:02.480 --> 08:09.360
就这里 这里我把它放到桌面上了 让你直接把拖进来就可以了 拖进来的话 这边就是这个路径 ok 你如果是那个

08:10.880 --> 08:18.640
windows windows的同学的话 你反正就把这边这个路径不要输错了啊 把这个路径输入 输入之后 然后加这边杠杠

08:19.520 --> 08:22.240
type 就是你的类型 类型是一个节省

08:23.280 --> 08:32.080
ok 啊 敲回车 敲回车之后 然后接下来这边啊 你看到这个 这一条就说明恢复成功了 看到没有 这边144条这个文档

08:32.480 --> 08:38.400
imported successfully 是说明就恢复成功了 恢复成功之后 然后接下来你在这边

08:39.200 --> 08:47.120
你可以用这个可视化工具 你自己连一下 连一下自己看一下啊 这边这个豆瓣 豆瓣下面有一个moves moves下面

08:48.080 --> 08:54.480
你看啊 这个数据库里面的数据是不是就恢复成功了 对不对啊 这个是首先第一步

08:55.440 --> 09:06.590
这个准备工作啊 先把这个数据库 数据把它恢复一下 好 然后接下来的话启动启动服务器

09:08.350 --> 09:14.830
啊 启动服务器的话 这边的话使用什么呢 首先装包啊 首先使用np 猛i

09:15.630 --> 09:25.550
命令安装这个依赖啊 总之的话我不不管你用什么 你反正先把这个依赖装了 装了之后 然后接下来你注意这边这个启动 稍微有点不一样

09:26.110 --> 09:28.110
这边这个启动啊 把它停一下

09:30.850 --> 09:36.050
这边这个启动的话 他这边的话有一个这个app.js啊 这边他是改过的

09:36.370 --> 09:39.170
ok 所以你启动的话是什么呢 这边就是note

09:39.730 --> 09:43.810
啊 首先呢 你在这个目录下面啊 在这个目录下面豆瓣server 在这个目录下面

09:44.130 --> 09:46.930
好 让app.js回车

09:47.810 --> 09:54.050
ok 这边就启动成功了啊 你看到这个的话就启动成功了啊 使用这个noteapp.js

09:54.850 --> 10:03.810
然后使用什么呢 使用noteapp.js命令启动这个豆瓣

10:05.090 --> 10:06.930
电影的这个服务器

10:08.370 --> 10:12.450
啊 把它启动 启动完了之后 然后整个这个准备工作就结束了

10:13.010 --> 10:17.570
啊 就结束了 ok 好 然后完事之后 然后这样我们就来到这边

10:18.370 --> 10:22.690
啊 来到这边 这边的话我们主要就来看一下 主要来看一下这个

10:23.330 --> 10:27.090
首先先来看这个下拉吧 这边是哪个页面呢 这边的话是这个

10:27.330 --> 10:32.690
配级室 里面有很多啊 因为这个当时带着学生做啊 包括这个比如说这个详情

10:33.490 --> 10:34.610
详情这边都是做了的

10:38.690 --> 10:41.570
啊 包括这边啊 可以这个看剪接啊 这些

10:42.290 --> 10:45.250
这些你有兴趣 你下去可以自己做一下啊 包括这个搜索

10:46.850 --> 10:50.050
搜索当时也是带着学生做的啊 比如我们搜索一个复仇

10:50.770 --> 10:57.330
这边的话就是啊 复仇者联盟啊 但这边呢还是有一些可以优化的地方 比如刚才搜索的时候 这边是不是可以给个提示

10:58.130 --> 11:04.930
对不对 给个提示 ok 这些就不说了啊 我们这些可主要是看那个 主要是看这边那个就是

11:06.130 --> 11:09.970
下拉刷新和上拉加载啊 这个是哪个页面呢 这个是这个more

11:10.930 --> 11:15.890
more这个页面啊 more这个页面的话 然后接下来我们首先先来说这个下拉刷新

11:17.730 --> 11:21.650
下拉刷新的话 这里啊 把这个我把它干掉吧

11:23.330 --> 11:26.050
把这个干掉啊 带着来写一下

11:28.050 --> 11:30.850
ok好 这边呢 我们先来说这个下拉刷新

11:34.800 --> 11:42.260
下拉刷新 好 下拉刷新的话 他这边的话有一个生命周期啊

11:43.060 --> 11:46.100
有一个生命周期

11:48.100 --> 11:51.540
勾字函数啊 我们知道我们这边的话这个页面

11:52.580 --> 11:57.460
这个页面的话 你比如新建一个这个页面的话 他是不是有很多生命周期勾字函数啊

11:57.460 --> 12:04.020
什么unload的对不对 啊好像还有个on show啊 反正挺多的on hide啊之类的对不对

12:04.020 --> 12:07.700
其中有一个的话就是叫做什么呢 叫做这个on pull down

12:08.500 --> 12:12.020
pull down 然后refresh

12:14.610 --> 12:15.410
refresh

12:16.370 --> 12:17.810
resh

12:18.450 --> 12:24.050
ok 有这么一个生命周期勾字函数啊 这个的话 顾名思义就是什么呢 这个的话是监听

12:25.090 --> 12:27.970
用户的下拉操作

12:29.730 --> 12:33.490
会在用户进行下拉的时候

12:34.530 --> 12:36.770
下拉的时候 然后接下来出发

12:37.730 --> 12:42.690
ok啊 说说我们这边来到这里啊 这边他这边还有注意啊 我这边

12:43.170 --> 12:49.650
还有就是这两句这两句要写 我先把他去除嘛 先把他去除 去除之后 然后接下来我先把他记在这里啊

12:50.930 --> 12:53.330
先把他记在这里 ok

12:57.220 --> 13:03.140
稍等啊 我把这个歌词调一下 ok 好 然后接下来我们先回到这啊 先回到这 好那接下来

13:03.300 --> 13:04.260
我们这边就是on

13:04.980 --> 13:06.020
这个pull down

13:06.980 --> 13:14.100
pull down refresh 是不是已经出来了 对不对 已经出来了啊 这个的话是什么呢 这个的话是下拉

13:15.700 --> 13:16.660
监听下拉

13:18.020 --> 13:24.900
操作的啊 也就是用户进行这个下拉的时候 他这边会出发这个好 然后接下来的话 我们这边来看一下

13:25.540 --> 13:29.940
console.log啊 比如说用户下拉了

13:32.860 --> 13:34.860
好 保存 重新编一下吧

13:36.060 --> 13:44.060
好 然后接下来啊 我们这边我们点击查看更多啊 点击查看更多之后 然后接下来我们这边按住不放 然后往下拉

13:44.540 --> 13:46.060
你会发现你这个是拉不动的

13:47.340 --> 13:57.100
ok 拉不动的 为什么 因为这边的话 你想要下这个就是能够这个下拉 你这边的话还需要在这个当前页面的这个接声里面进行一个配置

13:57.740 --> 13:59.740
啊 这边首先的话是

14:00.700 --> 14:01.980
呃 先把这个记一下

14:03.100 --> 14:07.420
先把这个记一下 记到笔记里面啊

14:11.900 --> 14:16.700
首先我们添加了这么一个声明周期勾字函数 对不对 啊 但是此时

14:18.140 --> 14:23.180
但是此时 我们发现页面还不能够

14:24.940 --> 14:33.580
还不能够进行这个下拉 对不对 啊 因为什么呢 因为还需要在这个该页面

14:34.620 --> 14:40.460
对应的什么 接声文件中进行一个配置

14:41.100 --> 14:49.580
那配置什么呢 配置就是这个 这两个 ok 一个是什么呢 一个是inable pull down refresh 你把这个呃 配置成处

14:50.540 --> 14:53.180
啊 把这个配置成处 我们来到这边

14:54.620 --> 15:00.620
啊 这边把它配置成处 配置成处之后 然后接下来我们这边啊来重新来保存一下

15:01.340 --> 15:04.460
好 然后接下来这边查看更多

15:05.260 --> 15:11.740
过来 过来之后大家我们按住往下 哎 是不可以下拉了 对不对 可以下拉了啊 放手

15:12.380 --> 15:16.940
ok 用户下拉了 对不对 然后过一段时间他就弹回去了 ok

15:17.420 --> 15:23.020
好 然后但是呢 你这边的话啊 这边 你看可以看到这边下拉的时候 这边 是不是啥都没有

15:23.580 --> 15:28.540
对不对 正常来讲的话 是不是 这边的话 你下拉的话 他在加载加载的话 这边 是不是有这个三个点

15:29.340 --> 15:32.460
对不对 好了 这边的话 你可以干嘛呢 这边的话就可以

15:33.500 --> 15:38.060
呃 刚才的这个Bangwon的text style把这个设置为dark

15:39.100 --> 15:40.780
啊 我们来到这边

15:42.300 --> 15:49.340
把这个再设置一下 ok Bangwon的text style dark啊 再保存

15:49.900 --> 15:54.960
保存了之后 然后先让我们这边我们来看一下 好 查看更多

15:55.600 --> 15:56.000
过来

15:56.960 --> 15:59.280
然后往下拉 哎 是不是出来了

16:00.160 --> 16:04.880
对不对啊 这边这个三个点也就出来了 ok 好 那接下来的话 我们在这边

16:05.280 --> 16:07.920
在这边的话 我们是不是就可以做我们这个想做的事情

16:08.480 --> 16:10.400
对不对啊 我这边呢 比如说先微信

16:11.280 --> 16:18.940
微信点修loading loading啊 比如这个呢 是这个啊 数据加载中

16:20.940 --> 16:23.900
啊 就是数据加载中

16:24.860 --> 16:30.060
对不对啊 然后把这个修loading出来之后 然后接下来这边的话 呃 这边封装了一个方法

16:30.460 --> 16:35.500
这边呢 是一个叫做get moves这个方法 这个方法就是拿来获取那个数据的

16:36.060 --> 16:38.780
啊 这边你可以展开看一下 这边就是什么 这就是发请求

16:39.500 --> 16:43.180
可没有 发请求获取这个数据啊 那这边你就可以调用这个方法

16:43.580 --> 16:45.660
对吧 这也是点get moves

16:46.380 --> 16:50.060
调用这个方法啊 获取这个最新的数据

16:51.420 --> 16:52.780
看到没有啊 保存一下

16:54.060 --> 16:55.260
保存了 让我们来看一下

16:56.860 --> 16:58.140
啊 点击查看更多

17:00.620 --> 17:03.980
啊 然后接下来这边往下拉啊 这边数据加载中

17:05.020 --> 17:10.220
对不对啊 加载中 然后回头的话 你这边有了新的数据 让你该做什么处理 你就做什么处理

17:10.620 --> 17:16.540
就ok了 没有没有啊 这个呢 就是关于这个下拉刷新啊 实际上比那个

17:17.340 --> 17:19.500
之前那个rn要方便多了

17:20.140 --> 17:25.180
对吧 你rn以前 我记得我也是讲过 如何下拉刷新啊 以及这个上拉加载

17:26.140 --> 17:32.300
这个rn里面的话要麻烦一些 对不对 他这边他实际上那个微信小程序里面他都给你封装好了

17:32.700 --> 17:39.260
就对应的这个生命周期勾字函数就都封装好了啊 回头的话用户做什么操作 让他这边都监听得到

17:40.140 --> 17:43.660
对不对 监听得到 然后加你只需要做你的业务逻辑就可以了啊

17:44.380 --> 17:51.500
这是关于下拉刷新啊 主要就这两个 一个是这个生命周期勾字函数 一个是注意这边要配置一下啊 把这个inable的

17:51.900 --> 17:54.860
这个inable pull down refresh 配置为q

17:55.660 --> 18:00.380
要把这个配置为dark啊 好 然后再让我们来看一下这个上拉加载

18:02.460 --> 18:10.620
上拉加载啊 上拉加载的话 这边就是加载更多的这个数据 这个上拉加载我说过 这个又被称之为触底加载

18:11.100 --> 18:12.780
对不对 又被

18:14.460 --> 18:15.260
称之为

18:17.020 --> 18:18.780
称之为触底

18:19.740 --> 18:20.780
加载

18:20.780 --> 18:22.300
ok 它这边的话同样是

18:23.100 --> 18:24.220
同样是

18:24.860 --> 18:31.020
有一个生命周期勾字函数 叫做什么呢 叫做unrich

18:32.780 --> 18:34.060
unrich bottom

18:35.500 --> 18:39.340
这个啊 这个的话会在这个触底的时候啊

18:40.220 --> 18:42.940
会在页面触底时

18:43.900 --> 18:45.900
触底时触发

18:46.860 --> 18:48.620
ok 好 来我们这边我们来写一下吧

18:50.380 --> 18:53.420
来到这里啊 把这个pull down 把它折起来

18:54.460 --> 18:56.620
好 这边呢就是unrich bottom

18:59.870 --> 19:04.030
啊 这边呢是页面触底时触发

19:04.910 --> 19:09.070
好 然后这样我们在这边我们来console.log

19:10.670 --> 19:13.950
啊 页面触底了啊 保存

19:15.310 --> 19:17.070
保存了之后然后下这边过来

19:18.030 --> 19:20.910
过来的话 这样注意 我们这边往下翻

19:20.910 --> 19:23.070
往下翻 你看是不是页面触底了

19:23.630 --> 19:25.870
对不对啊 往下翻页面触底了

19:26.350 --> 19:28.350
那接下来这边 既然这个都既然听到了

19:28.350 --> 19:30.190
那后面的事情就很好办了

19:30.190 --> 19:31.790
啊 它还不像那个pull down

19:31.790 --> 19:34.510
pull down的话 你这边的话需要这样子配置一下

19:34.510 --> 19:37.390
对不对啊 你这个就是触底这个不需要

19:37.390 --> 19:41.150
啊 这个的话你就直接在这个对应的这个生命周期勾字函数里面

19:41.150 --> 19:43.710
那你直接写你的这个业务逻辑就可以了

19:43.710 --> 19:45.230
啊 比如说我这边的话我写的

19:46.190 --> 19:54.510
if zs.data.movice.start

19:54.510 --> 20:02.670
啊 如果大于zs.data.movice.toto

20:02.670 --> 20:05.470
啊 这个就完全就是业务逻辑了

20:05.470 --> 20:10.430
啊 然后我们这边呢就vc.show.model

20:10.430 --> 20:12.750
啊 这边呢就是提示

20:13.630 --> 20:16.990
就你已经 你这个start都已经比这个toto大了嘛

20:16.990 --> 20:18.110
啊 我们这边就提示

20:20.340 --> 20:22.100
提示啊 没有更多内容了

20:22.820 --> 20:25.300
没有更多内容了

20:26.020 --> 20:28.820
OK 好 然后既然这边这个

20:28.820 --> 20:31.940
它后面的话会有一个那个就是回调啊

20:31.940 --> 20:34.100
sixth fail还有这个complete

20:34.660 --> 20:37.060
对吧 大家这边这边就是用户点击的取消

20:38.260 --> 20:38.820
用户

20:40.260 --> 20:41.940
console.log

20:42.740 --> 20:43.700
然后用户

20:46.060 --> 20:48.860
用户点击了取消

20:51.380 --> 20:53.860
啊 这边可以监听就是用户的这个点击

20:53.860 --> 20:55.700
啊 这边呢就是用户点击了确定

20:59.070 --> 21:00.670
用户点击了确定

21:00.670 --> 21:03.630
OK 好 大家这边呢首先给这么一个提示

21:03.630 --> 21:05.630
给了之后 然后接下来这边就干嘛

21:06.430 --> 21:08.430
这边呢咱们就直接就return

21:08.430 --> 21:09.550
啊 把这个折起来

21:09.550 --> 21:10.350
这边就return

21:12.640 --> 21:13.120
对不对

21:13.120 --> 21:15.120
好 如果没有进这个上面的衣服

21:15.120 --> 21:16.880
啊 没有进上面的衣服呢我们就干嘛

21:16.880 --> 21:18.000
是不是加载

21:18.080 --> 21:18.560
下一页

21:19.840 --> 21:21.600
加载下一页

21:22.240 --> 21:22.640
数据

21:23.680 --> 21:27.200
对不对啊 所以说我们这边就可以微信点这个修loading

21:29.200 --> 21:30.480
修loading

21:30.480 --> 21:33.120
啊 这边呢就是更多电影加载中

21:35.620 --> 21:36.900
更多电影

21:37.700 --> 21:38.340
加载

21:39.860 --> 21:42.180
加载中啊 然后加这边调用什么

21:42.820 --> 21:45.380
所以调用这个zc.getmovice

21:46.020 --> 21:48.580
啊 这边可以传个参数啊比方每次获取

21:49.940 --> 21:51.300
获取18条数据

21:52.500 --> 21:54.660
对不对啊 每次获取这个18条

21:54.660 --> 21:56.260
OK 好 来我们这边我们来看一下

21:59.810 --> 22:00.850
好 然后过来

22:02.850 --> 22:04.210
好 过来之后注意啊

22:04.210 --> 22:05.730
然后将我们往下滑

22:05.730 --> 22:06.770
往下滑

22:06.770 --> 22:08.290
你看更多电影加载中

22:08.850 --> 22:10.050
对不对 加载出来了

22:10.050 --> 22:11.730
看到没有 下面加载出来了

22:11.730 --> 22:12.690
好 继续往下面

22:13.490 --> 22:15.730
往下面走 更多电影加载中

22:16.290 --> 22:17.410
好 出来了

22:17.410 --> 22:18.130
好 继续走

22:19.250 --> 22:20.450
啊 是不是没了

22:20.450 --> 22:20.930
对不对

22:20.930 --> 22:22.210
好 你这边再往下走

22:22.290 --> 22:23.570
这没有更多内容了

22:23.570 --> 22:24.450
点确定

22:24.450 --> 22:25.730
用户点击了这个确定

22:26.530 --> 22:31.730
OK 这个就是关于这个下拉加载

22:32.530 --> 22:35.730
那整个这个小程序里面的这个下拉刷新

22:35.730 --> 22:36.690
和这个上拉

22:36.690 --> 22:38.770
上拉 刚刚那个是上拉

22:38.770 --> 22:40.290
就是上拉加载

22:40.290 --> 22:41.730
整体来讲的话其实不难

22:42.370 --> 22:42.850
对不对

22:42.850 --> 22:43.970
整体来讲不难

22:43.970 --> 22:45.970
就是这两个生命周期鸽子函数

22:46.610 --> 22:49.010
那回头的话你需要注意一下就是这里

22:49.010 --> 22:51.090
这里就是你下拉刷新的时候

22:51.090 --> 22:52.050
这边要配置

22:52.690 --> 22:53.970
一定要把这个设置为处

22:54.530 --> 22:56.610
不然的话你那个用户是没办法下拉的

22:57.570 --> 22:58.050
没有没有

22:59.330 --> 23:00.370
还有就是你这边的话

23:00.370 --> 23:02.130
如果你想要看这个项目效果的话

23:02.130 --> 23:03.970
你记得就是把这个服务器

23:04.770 --> 23:06.530
把这个服务器你把它跑起来

23:07.330 --> 23:09.410
然后我们刚才是把这个服务器跑起来的

23:09.410 --> 23:11.010
这个服务器我会给你们的

23:11.010 --> 23:12.370
大家怎么跑的话

23:12.370 --> 23:13.970
我这边那就是刚才已经写过了

23:14.770 --> 23:15.090
对不对

23:15.090 --> 23:15.890
先去恢复数据

23:16.530 --> 23:17.890
把这个数据先恢复一下

23:17.890 --> 23:20.450
恢复到你的这个mango的这个数据库里面

23:21.090 --> 23:21.730
恢复了之后

23:21.730 --> 23:24.290
然后在这边启动服务器技术用这个

23:24.850 --> 23:26.850
node app.js用这个来启动

23:27.810 --> 23:28.610
用这个来启动

23:30.370 --> 23:31.890
其他的话就没什么了

23:33.330 --> 23:34.850
这些课的话就到这里

23:34.850 --> 23:37.010
大家下来的话可以把这个例子看一下

23:37.010 --> 23:38.530
你如果就是只看代码的话

23:38.530 --> 23:41.170
你这边其实就直接到这个js这边

23:41.170 --> 23:42.290
就看这个代码就可以了

23:43.330 --> 23:45.650
好这些课就到这里

23:45.650 --> 23:46.130
再见

