WEBVTT

00:00.000 --> 00:03.600
这节课呢 我们继续往下学习Cookie了

00:03.600 --> 00:08.200
在上节课呢 我们详细的去介绍了一下Cookie里边的那些知识点

00:08.200 --> 00:12.200
然后呢 这节课呢 咱们就写一个Cookie的封装方法

00:12.200 --> 00:15.800
然后以及呢 拿这个方法呢 我们去写一个例子

00:15.800 --> 00:17.400
这个例子呢 就是一个拖拽了

00:17.400 --> 00:20.400
拖拽这个东西呢 其实在前面已经讲过很多次了

00:20.400 --> 00:24.400
所以说呢 咱们在这呢 就用它啊 来去结合一下Cookie

00:24.400 --> 00:26.800
看看我们能实现一个什么样的效果

00:27.600 --> 00:31.000
先来说一下这个Cookie的一个操作吧

00:31.000 --> 00:35.000
我们通过上节课的学习啊 是不是发现这个Cookie呢

00:35.000 --> 00:39.100
它确实非常难操作啊 仅仅就是一个Document点Cookie

00:39.100 --> 00:43.000
我们通过这一个API呢 去获取又设置

00:43.000 --> 00:44.600
而且呢 就是获取的时候呢

00:44.600 --> 00:49.200
它取到的是所有 你的这个域名下所有的这些Cookie

00:49.200 --> 00:52.000
那有的时候呢 比如说啊 这里头Cookie有很多

00:52.000 --> 00:54.600
我想取的只是其中的某一个

00:54.600 --> 00:59.600
那这个 我们的原生的那个API呢 是没有办法做到的

00:59.600 --> 01:03.200
以及呢 这个里边呢 有一个Cookie 那这个Cookie呢

01:03.200 --> 01:05.700
我第二次 我想去修改它的值

01:05.700 --> 01:08.200
那个也是没有办法直接去做到的

01:08.200 --> 01:11.200
所以说呢 就是它的一个操作呢 确实是弱爆了

01:11.200 --> 01:13.800
那我们呢 就给它封装上一个方法

01:13.800 --> 01:18.700
然后呢 让大家去用起来操作Cookie会显得非常的简单啊

01:18.700 --> 01:20.700
来 那来怎么看 怎么写呢

01:20.700 --> 01:25.470
首先给上一个script标签

01:25.470 --> 01:27.870
这个封装的方法呢 是这样 声明一个辨量

01:29.670 --> 01:33.450
manage manage cookie

01:33.450 --> 01:36.450
它是一个对象啊 那这个对象呢 就是用来决定

01:36.450 --> 01:39.450
现在咱们操作Cookie的这些方法

01:39.450 --> 01:41.250
这个里头呢 总共有三个方法

01:41.250 --> 01:42.850
第一个呢 就是一个site

01:43.850 --> 01:46.250
这个site呢 它是用来设置

01:48.050 --> 01:49.950
设置 cookie

01:49.950 --> 01:56.140
啊 好 然后还有一个remove

01:56.140 --> 01:59.940
这个remove呢 是不是啊 都知道啊 它是移除

02:01.340 --> 02:06.310
Cookie啊 好 然后呢 还有最后一个方法

02:06.310 --> 02:11.710
就是一个guide

02:11.710 --> 02:14.910
那这个guide呢 是获取

02:16.910 --> 02:19.310
Cookie 好 总共三个方法啊

02:19.310 --> 02:23.910
那其实这三个方法呢 就已经满足咱们所有的操作了啊

02:23.910 --> 02:26.710
好 那接下来呢 就来一个来写啊

02:26.710 --> 02:29.410
那我们先来说一下这个site这个方法

02:29.410 --> 02:33.410
site这个方法呢 它是用来去设置这个Cookie的啊

02:33.410 --> 02:35.410
比如说我们去增加一个Cookie

02:35.410 --> 02:38.110
然后以及呢 我们还可以去修改一个Cookie

02:38.110 --> 02:41.910
那它呢 都是通过这个site这个方法去设置的

02:41.910 --> 02:44.010
那这个方法啊 想要去实现的话

02:44.010 --> 02:46.110
我需要去有一些参数啊

02:46.110 --> 02:48.210
需要哪些参数呢 大家先想一想

02:49.510 --> 02:51.910
我们需要去设置一个Cookie

02:51.910 --> 02:53.610
那这个设置的Cookie的方法呢

02:53.610 --> 02:56.510
肯定还是通过document.cookie

02:56.510 --> 02:57.610
这个呢 是逃不出的

02:58.610 --> 03:01.010
那我当我们去设置的时候呢 是不是说啊

03:01.010 --> 03:04.110
这个Cookie当中呢 至少你需要有一个name啊

03:04.810 --> 03:07.110
还有至少需要有一个value啊

03:07.110 --> 03:08.910
所以啊 这两个东西呢 必须要有

03:08.910 --> 03:09.910
一个呢 是name

03:11.310 --> 03:14.510
然后呢 value name呢 是Cookie它的一个名字

03:14.510 --> 03:17.110
value呢 就是你这个Cookie对应的一个值

03:17.110 --> 03:21.850
那其实呢 还有另外一个就是时间了

03:21.850 --> 03:24.450
时间我们说过 假设说你不给这个时间

03:24.450 --> 03:27.550
那它默认的是不是就是一个绘化级的一个Cookie啊

03:27.550 --> 03:29.350
当你的浏览器关闭之后呢

03:29.350 --> 03:31.750
那它的生命周期呢就已经到头了

03:31.750 --> 03:32.850
就没有了啊

03:32.850 --> 03:33.750
但有的时候呢

03:33.750 --> 03:36.150
我们的Cookie需要长时间的保存

03:36.150 --> 03:36.650
那这个时候呢

03:36.650 --> 03:39.450
就需要去给上一个过期的时间了啊

03:40.650 --> 03:42.350
那这个过期的时间呢

03:42.350 --> 03:43.750
我们在上节课说过啊

03:43.750 --> 03:44.450
总共有两个

03:44.450 --> 03:45.750
一个呢 是express

03:45.750 --> 03:46.750
另外一个呢 是什么呢

03:46.750 --> 03:48.850
是那个max age啊

03:48.850 --> 03:50.950
那这两个他们的设置方法呢

03:50.950 --> 03:51.650
差不多

03:51.650 --> 03:52.550
那我在这呢

03:52.550 --> 03:53.950
就为了方便同学

03:53.950 --> 03:55.450
所以啊两个方法呢

03:55.450 --> 03:56.150
都用一下

03:56.150 --> 03:56.850
好吧 第一个呢

03:56.850 --> 04:00.410
就是express

04:00.410 --> 04:02.410
那如果说我用这个express的话

04:02.410 --> 04:03.310
那怎么办呢

04:03.310 --> 04:04.710
我就需要知道

04:04.710 --> 04:07.010
现在用户丢进来的这个东西呢

04:07.010 --> 04:09.710
是一个时间的节点

04:09.710 --> 04:10.210
所以啊

04:10.210 --> 04:13.210
他要求要求注意啊

04:13.210 --> 04:17.810
要求用户传入的是一个时间节点

04:19.010 --> 04:21.210
然后这个时间节点最好的话

04:21.210 --> 04:22.010
就是一个啊

04:22.010 --> 04:23.310
当然其实也无所谓了啊

04:23.310 --> 04:24.210
我们封装吗

04:24.210 --> 04:26.010
那就是一切为了用户啊

04:26.010 --> 04:26.610
行

04:26.610 --> 04:27.610
那我们来看一下

04:27.610 --> 04:28.910
该如何做呢

04:28.910 --> 04:30.510
首先我需要去声明一个辨量

04:30.510 --> 04:31.010
这个辨量呢

04:31.010 --> 04:31.710
叫什么呢

04:31.710 --> 04:32.610
end data

04:33.910 --> 04:34.510
end data呢

04:34.510 --> 04:35.210
等于什么呢

04:35.210 --> 04:36.310
new data

04:36.310 --> 04:37.210
因为啊

04:37.210 --> 04:39.410
人家要求的是gmt的这种格式

04:39.410 --> 04:39.910
是不是

04:39.910 --> 04:40.510
new data

04:40.510 --> 04:41.210
取到的

04:41.210 --> 04:43.410
就是gmt格式的一个时间

04:43.410 --> 04:44.610
那取到之后呢

04:44.610 --> 04:45.110
接着呢

04:45.110 --> 04:46.210
干嘛啊

04:46.210 --> 04:46.910
接下来

04:46.910 --> 04:50.510
我们其实是需要去设置这个时间的

04:50.510 --> 04:51.310
因为啊

04:51.310 --> 04:52.910
我们最终过期的时间呢

04:52.910 --> 04:54.710
是通过用户丢进来了

04:54.710 --> 04:55.110
所以说呢

04:55.110 --> 04:56.210
这个end data呢

04:56.210 --> 04:57.210
他承载了

04:57.210 --> 04:57.610
是什么呢

04:57.610 --> 04:59.110
就是过期的时间

04:59.110 --> 04:59.910
但是现在呢

04:59.910 --> 05:01.510
咱给的是一个当前的一个时间

05:01.510 --> 05:02.310
肯定不对

05:02.310 --> 05:02.710
所以啊

05:02.710 --> 05:03.210
这个东西呢

05:03.210 --> 05:04.310
我要去设置啊

05:04.310 --> 05:04.710
然后呢

05:04.710 --> 05:07.110
这个参数用户丢进来的是什么呢

05:07.110 --> 05:08.810
是比如说是一个二十

05:08.810 --> 05:10.810
那这个二十代表的是啥

05:10.810 --> 05:11.710
二十天

05:13.010 --> 05:13.610
好吧

05:13.610 --> 05:14.110
然后呢

05:14.110 --> 05:14.610
这里

05:17.820 --> 05:19.820
这里函数莫认规定

05:21.220 --> 05:23.120
传进来的是天数

05:24.920 --> 05:25.420
好

05:26.020 --> 05:27.720
这是data啊

05:27.720 --> 05:28.520
在这标一下

05:28.520 --> 05:29.120
data

05:29.120 --> 05:29.520
好

05:29.520 --> 05:31.720
如果说他传进来的是一个天数啊

05:31.720 --> 05:33.320
比如说他传了一个二十天

05:33.320 --> 05:34.920
那是不是就表示啊

05:34.920 --> 05:37.220
从现在我要去设置一个cookie

05:37.220 --> 05:38.320
那二十天之后呢

05:38.320 --> 05:39.620
是不是就过期了呀

05:39.620 --> 05:41.020
那这个怎么办啊

05:41.020 --> 05:43.020
是不是应该让这个end data

05:43.020 --> 05:44.320
这个日期对象呢

05:44.320 --> 05:45.820
我们要去设置一下

05:45.820 --> 05:46.820
设置什么呢

05:46.820 --> 05:48.620
点side data

05:48.620 --> 05:49.020
这个呢

05:49.020 --> 05:50.020
是用来设置什么呢

05:50.020 --> 05:52.120
天也就是几号几号

05:53.520 --> 05:54.320
然后这个里头呢

05:54.320 --> 05:55.820
我们怎么去传呢

05:55.820 --> 05:57.120
应该先拿到啊

05:57.120 --> 05:58.620
这个对象

05:58.620 --> 05:59.620
日期对象

05:59.620 --> 06:00.620
现在的

06:01.120 --> 06:01.620
data

06:02.620 --> 06:03.620
是不是拿到他

06:03.620 --> 06:04.120
然后呢

06:04.120 --> 06:05.120
再让这个东西呢

06:05.120 --> 06:06.120
加加什么呢

06:06.120 --> 06:08.320
加用户传进来的这个data

06:08.320 --> 06:09.820
就是从设置

06:09.820 --> 06:11.420
cookie的那一刻起

06:11.420 --> 06:11.720
然后呢

06:11.720 --> 06:14.320
加上用户丢进来的这个data

06:14.320 --> 06:14.920
这样的话

06:14.920 --> 06:16.220
我又把这个end data呢

06:16.220 --> 06:19.320
设置成了一个真正的过期

06:19.320 --> 06:20.020
时间了

06:20.020 --> 06:20.920
时间点

06:23.640 --> 06:24.240
行了

06:24.240 --> 06:25.740
设成时间点之后呢

06:25.740 --> 06:26.540
那接下来呢

06:26.540 --> 06:28.540
我们就要去操作这个cookie了

06:28.540 --> 06:29.540
那cookie呢

06:29.540 --> 06:31.540
还是放在document的点

06:32.140 --> 06:34.440
cookie这个属性身上

06:34.440 --> 06:35.640
那他的一个结果呢

06:35.640 --> 06:36.640
是什么呢

06:36.640 --> 06:38.640
首先是不是一个name啊

06:38.640 --> 06:38.940
name呢

06:38.940 --> 06:40.940
就是用户传进来的那个名字

06:40.940 --> 06:41.540
然后呢

06:41.540 --> 06:43.140
他里头是不是建值队啊

06:43.140 --> 06:44.540
但是建值队中间呢

06:44.540 --> 06:47.540
是通过等号去连接的

06:47.540 --> 06:47.940
所以啊

06:47.940 --> 06:49.840
这我要拼刺不赚了

06:49.840 --> 06:51.640
等号加加什么呢

06:51.640 --> 06:53.640
后边加是不是就是value啊

06:53.640 --> 06:55.140
所以就是name

06:55.140 --> 06:55.540
然后呢

06:55.540 --> 06:56.740
等于value

06:56.740 --> 06:57.740
完了之后呢

06:57.740 --> 06:59.940
要注意再来拼字伏串

06:59.940 --> 07:01.140
这个字伏串要注意啊

07:01.140 --> 07:02.640
就是我的第二条属性

07:02.640 --> 07:03.940
跟第一条属性之间呢

07:03.940 --> 07:05.740
是不是应该先分号

07:05.740 --> 07:06.340
完了之后呢

07:06.340 --> 07:07.840
再加上一个空格啊

07:07.840 --> 07:09.040
空格之后呢

07:09.040 --> 07:10.240
后边跟的是什么呢

07:12.040 --> 07:16.120
express错了

07:16.120 --> 07:16.820
express

07:18.420 --> 07:20.020
然后让这个东西呢

07:20.020 --> 07:21.420
在等等什么呢

07:21.420 --> 07:23.220
我们再来连这个字伏串

07:23.220 --> 07:25.220
是不是等于刚才

07:25.220 --> 07:28.020
你给的算出来的这个end data

07:29.020 --> 07:29.820
那你看

07:29.820 --> 07:30.520
这样的话

07:30.520 --> 07:34.020
我们就设置了一条cookie好

07:34.020 --> 07:35.620
那这种设置的方法呢

07:35.620 --> 07:37.420
是通过这个express

07:37.420 --> 07:37.820
然后呢

07:37.820 --> 07:41.460
接下来我把它注释掉

07:41.460 --> 07:43.960
我们在昨天的那不是昨天啊

07:43.960 --> 07:44.460
上节课

07:44.460 --> 07:45.460
咱们说过

07:45.460 --> 07:47.060
这个设置日期

07:47.060 --> 07:47.560
现在呢

07:47.560 --> 07:48.760
大家呃

07:48.760 --> 07:50.660
用的比较多的是max h

07:50.660 --> 07:51.260
那所以说呢

07:51.260 --> 07:51.860
这个方法呢

07:51.860 --> 07:52.760
我就写了

07:52.760 --> 07:53.360
写了之后呢

07:53.360 --> 07:54.460
就丢到这到时候

07:54.460 --> 07:55.360
你想用你就用

07:55.360 --> 07:56.860
不想用你就用那个什么呢

07:56.860 --> 07:58.260
max h啊

07:58.360 --> 07:59.160
这两个东西呢

07:59.160 --> 08:00.160
都一样啊

08:00.160 --> 08:00.560
但是呢

08:00.560 --> 08:01.860
就是这个max h

08:01.860 --> 08:02.360
这个东西呢

08:02.360 --> 08:04.360
要比我们的这个express

08:04.360 --> 08:05.660
要简单的多了啊

08:05.660 --> 08:06.960
他不需要去计算啊

08:06.960 --> 08:08.260
点点什么呢

08:08.260 --> 08:08.960
点cookie

08:10.260 --> 08:10.960
然后这个东西呢

08:10.960 --> 08:11.560
等于什么呢

08:11.560 --> 08:12.660
还是等于name

08:12.660 --> 08:13.060
然后呢

08:13.060 --> 08:15.560
拼等号再拼拼什么呢

08:15.560 --> 08:16.260
value

08:16.260 --> 08:16.860
然后呢

08:16.860 --> 08:18.560
再拼拼什么啊

08:18.560 --> 08:21.560
一个分号空格max h

08:22.660 --> 08:23.960
等于等于什么呢

08:23.960 --> 08:24.960
等于date

08:26.260 --> 08:28.160
那这里要注意了啊

08:28.160 --> 08:29.760
那我的这个date呢

08:31.060 --> 08:35.060
这里要求用户传入的

08:35.460 --> 08:38.860
第三个参数为秒数

08:43.780 --> 08:44.580
过期吧

08:46.080 --> 08:47.480
过期的秒数

08:49.460 --> 08:50.160
行啊

08:50.160 --> 08:51.760
那这个参数啊

08:51.760 --> 08:52.860
你如果说用他

08:52.860 --> 08:54.660
跟用他是不一样的

08:54.760 --> 08:55.860
用他的话

08:55.860 --> 08:57.260
人家这个参数表示的

08:57.260 --> 08:59.360
就是一个时间的一个天数

08:59.360 --> 08:59.660
然后呢

08:59.660 --> 09:02.360
用他的话就是一个秒数

09:02.760 --> 09:03.560
那你看啊

09:03.560 --> 09:04.460
用秒数的话

09:04.460 --> 09:05.860
我们max h是吧

09:05.860 --> 09:06.560
用他的话

09:06.560 --> 09:08.060
是不是就超级简单啊

09:08.060 --> 09:10.160
直接一句话就搞定了啊

09:10.160 --> 09:10.460
行

09:10.460 --> 09:11.560
那这个site

09:11.560 --> 09:12.260
这个方法呢

09:12.260 --> 09:13.160
就已经有了

09:13.160 --> 09:14.160
有了之后呢

09:14.160 --> 09:14.560
这呢

09:14.560 --> 09:16.060
咱来试一下啊

09:16.060 --> 09:16.560
my

09:17.960 --> 09:19.560
manage cookie

09:19.560 --> 09:21.160
点点site

09:21.160 --> 09:21.660
site

09:21.660 --> 09:22.260
什么呢

09:22.260 --> 09:22.660
site

09:22.660 --> 09:23.560
一个

09:23.560 --> 09:24.060
哎

09:24.060 --> 09:24.460
不行

09:24.460 --> 09:25.760
这个位置好像之前有了

09:25.760 --> 09:26.360
我们site

09:26.360 --> 09:27.560
他一个life

09:27.560 --> 09:28.160
走吧

09:28.160 --> 09:28.660
life

09:28.660 --> 09:28.960
然后呢

09:28.960 --> 09:29.760
让他的值呢

09:29.760 --> 09:30.960
等于一个100

09:31.960 --> 09:32.460
site

09:32.460 --> 09:33.260
完之后呢

09:33.260 --> 09:34.560
打开这个页面啊

09:34.560 --> 09:35.560
但是要注意啊

09:35.560 --> 09:36.060
这个页面

09:36.060 --> 09:37.360
一定要是通过我们的

09:37.360 --> 09:38.860
这个http的协议呢

09:38.860 --> 09:39.260
打开

09:39.260 --> 09:39.760
要不然的话

09:39.760 --> 09:41.360
本地你是看不到的啊

09:41.360 --> 09:43.160
然后我们找到这个application

09:43.160 --> 09:43.460
啊

09:43.460 --> 09:44.260
发现没有这呢

09:44.260 --> 09:45.960
是不是已经有了一个life

09:45.960 --> 09:46.360
然后呢

09:46.360 --> 09:47.560
这个life呢

09:47.560 --> 09:48.460
啊

09:48.460 --> 09:48.960
life

09:48.960 --> 09:49.760
我们没有给时间

09:49.760 --> 09:50.260
所以说

09:50.260 --> 09:51.760
他还是一个绘画级别的

09:51.760 --> 09:52.040
是不是

09:52.040 --> 09:52.760
Session啊

09:52.760 --> 09:54.160
我们给他一个

09:54.160 --> 09:57.160
让他的过期时间在在

09:58.560 --> 09:59.960
一万一万秒

09:59.960 --> 10:01.560
一万秒大概的时间呢

10:01.560 --> 10:02.160
是多少

10:02.160 --> 10:03.160
刷新一下

10:03.160 --> 10:03.460
然后呢

10:03.460 --> 10:04.060
你看

10:04.060 --> 10:04.960
是不是有了

10:04.960 --> 10:05.760
有了啊

10:06.760 --> 10:08.060
一万秒的时间呢

10:08.060 --> 10:10.360
大概在三个小时左右吧

10:10.360 --> 10:11.360
你们去算一下

10:11.360 --> 10:13.560
让他除上一个360

10:13.560 --> 10:15.160
得出的就是小时啊

10:16.160 --> 10:16.560
好

10:16.560 --> 10:18.060
那这个life呢

10:18.060 --> 10:19.260
现在就已经有了

10:19.260 --> 10:20.260
有了之后呢

10:20.260 --> 10:21.460
先把他关掉啊

10:21.460 --> 10:22.260
接着呢

10:22.260 --> 10:23.360
这个方法ok了

10:23.360 --> 10:23.860
完之后呢

10:23.860 --> 10:25.660
就是这个remove这个方法了

10:25.660 --> 10:27.560
那这个remove这个方法呢

10:27.560 --> 10:29.560
他是用来移除这个qk的

10:29.560 --> 10:31.660
那移除要移除qk

10:31.660 --> 10:33.260
你至少要给我传一个餐吧

10:33.260 --> 10:34.160
什么餐啊

10:34.160 --> 10:34.760
是不是

10:34.760 --> 10:35.860
你要告诉我

10:35.860 --> 10:37.260
那个qk叫啥名字

10:37.260 --> 10:39.060
我才能够帮你干掉他

10:39.060 --> 10:39.660
是吧

10:39.660 --> 10:40.060
好

10:40.060 --> 10:41.260
怎么去移除呢

10:41.260 --> 10:42.260
简单啊

10:42.260 --> 10:43.860
this is the end site

10:43.860 --> 10:46.460
一拖的还是这个site这个方法

10:46.460 --> 10:47.660
移除

10:47.660 --> 10:51.060
只用把时间给他调到过去

10:51.060 --> 10:53.060
或者说调为0

10:53.060 --> 10:54.360
是不是就移除了呀

10:54.360 --> 10:56.460
我们在上节课有讲过啊

10:56.460 --> 10:57.560
所以啊这个地方

10:57.560 --> 10:58.660
我们调调是不是

10:58.760 --> 11:00.260
还是调这个site

11:00.260 --> 11:00.960
这个site呢

11:00.960 --> 11:01.360
然后呢

11:01.360 --> 11:03.460
名字你还照传传进来了

11:03.460 --> 11:04.460
完了之后呢

11:04.460 --> 11:04.860
接着呢

11:04.860 --> 11:06.560
后边就是他的一个值

11:06.560 --> 11:07.060
这个值呢

11:07.060 --> 11:08.260
咱给上一个空就行了

11:08.260 --> 11:09.560
因为我要删掉他

11:09.560 --> 11:12.160
你给多少给多少个值都行

11:12.160 --> 11:13.160
删掉他啊

11:13.160 --> 11:16.260
然后第三个是关键的配置参数

11:16.260 --> 11:17.060
时间

11:17.060 --> 11:17.860
那这个时间呢

11:17.860 --> 11:19.560
我给多少给上一个0

11:19.560 --> 11:22.160
我们上节课有说过maxh的话

11:22.160 --> 11:23.460
他的值为0

11:23.460 --> 11:26.360
就表示现在已经到期了

11:26.360 --> 11:27.060
到期之后呢

11:27.060 --> 11:28.560
就要删掉了

11:28.560 --> 11:29.160
懂吗

11:29.160 --> 11:29.760
那这个呢

11:29.760 --> 11:31.260
就是移除啊

11:31.260 --> 11:31.860
好

11:31.860 --> 11:33.360
移除完了之后呢

11:33.360 --> 11:37.220
来咱remove一下啊

11:37.220 --> 11:38.820
remove left

11:38.820 --> 11:39.520
left呢

11:39.520 --> 11:41.820
只用给left就行了

11:41.820 --> 11:42.820
然后我们来看啊

11:42.820 --> 11:43.320
这个时候呢

11:43.320 --> 11:44.420
是不是已经没有了

11:44.420 --> 11:45.520
刚才是不是还在啊

11:45.520 --> 11:46.920
现在就已经没了

11:46.920 --> 11:47.520
移除了啊

11:47.520 --> 11:47.820
不行

11:47.820 --> 11:49.520
我们把它注射掉

11:49.520 --> 11:50.320
再来

11:50.320 --> 11:53.220
left有没有有之后呢

11:53.220 --> 11:54.420
保存这时候呢

11:54.420 --> 11:55.620
就没了

11:55.620 --> 11:57.220
好移除ok啊

11:57.220 --> 11:57.820
很简单吧

11:57.820 --> 11:58.920
这个方法啊

11:58.920 --> 12:00.020
然后啊

12:00.020 --> 12:00.620
标一下吧

12:02.620 --> 12:06.820
只需要把时间设置成0

12:06.820 --> 12:08.220
就可以了

12:08.220 --> 12:08.920
ok啊

12:08.920 --> 12:09.320
然后呢

12:09.320 --> 12:09.920
接下来呢

12:09.920 --> 12:11.320
就是获取

12:11.320 --> 12:12.320
那这个获取呢

12:12.320 --> 12:13.920
跟他其实是一样的

12:13.920 --> 12:15.020
你要获取哪个

12:15.020 --> 12:16.520
你得给我一个名字

12:16.520 --> 12:17.120
我知道了

12:17.120 --> 12:19.420
我我才能够给你找到他

12:19.420 --> 12:20.020
是吧

12:20.020 --> 12:21.420
那怎么去获取呢

12:21.420 --> 12:22.320
这个获取

12:22.320 --> 12:22.820
获取呢

12:22.820 --> 12:25.120
是稍微有些麻烦的啊

12:25.120 --> 12:25.720
因为啊

12:25.720 --> 12:27.020
我们的这个cookie呢

12:27.020 --> 12:28.420
咱取的cookie呢

12:28.420 --> 12:30.020
是不是这样

12:30.020 --> 12:30.720
cookies

12:30.720 --> 12:31.520
等于什么呢

12:31.520 --> 12:32.920
document的点

12:32.920 --> 12:33.820
cookie啊

12:33.820 --> 12:35.620
通过他去取的

12:35.620 --> 12:37.120
通过这个方法去取的

12:37.120 --> 12:37.620
然后呢

12:37.620 --> 12:37.820
啊

12:37.820 --> 12:39.120
他没有过号

12:39.120 --> 12:41.720
通过这个属性取到的这个cookie呢

12:41.720 --> 12:42.420
是什么呢

12:42.420 --> 12:43.920
是整个域名下

12:43.920 --> 12:45.720
所有的这些cookie

12:45.720 --> 12:46.320
然后呢

12:46.320 --> 12:46.920
这个cookie

12:46.920 --> 12:47.920
他取到之后呢

12:47.920 --> 12:48.820
是什么样子呢

12:48.820 --> 12:50.020
是不是这个样子啊

12:50.020 --> 12:51.520
比如说我们现在这个啊

12:51.520 --> 12:52.620
来一个内容

12:52.620 --> 12:54.220
当然人人家的这个顺序呢

12:54.220 --> 12:55.820
跟我这个可能不一样啊

12:55.820 --> 12:56.320
开门

12:56.320 --> 12:56.920
然后呢

12:59.420 --> 12:59.920
拍顶

12:59.920 --> 13:01.120
拍顶等于多少

13:01.120 --> 13:02.420
30

13:02.420 --> 13:03.720
30

13:03.720 --> 13:04.720
空格

13:04.720 --> 13:05.320
然后呢

13:05.320 --> 13:06.120
wiz

13:06.120 --> 13:07.020
等于多少呢

13:07.020 --> 13:08.220
40

13:08.220 --> 13:10.520
他取到的可能是这个样子

13:10.520 --> 13:11.520
但是这个顺序呢

13:11.520 --> 13:12.320
就不一定了

13:12.320 --> 13:13.120
其实这个顺序呢

13:13.120 --> 13:14.220
也无所谓啊

13:14.220 --> 13:14.720
好

13:14.720 --> 13:15.620
那行

13:15.620 --> 13:17.320
这是我们通过document的点

13:17.320 --> 13:19.820
cookie所取到的这么一个东西

13:19.820 --> 13:21.620
那是我我要获取

13:21.620 --> 13:23.120
比如说我要获取这个拍顶

13:23.120 --> 13:24.420
那我只需要去

13:24.420 --> 13:25.220
取到什么呢

13:25.220 --> 13:27.320
拍顶后边等号后边的这个数字

13:27.320 --> 13:28.020
就行了

13:28.020 --> 13:28.620
所以这个呢

13:28.620 --> 13:29.520
才是这个方法

13:29.520 --> 13:31.320
要实现的一个目的

13:31.320 --> 13:32.120
理解吧

13:32.120 --> 13:34.320
那这个怎么去实现的呢

13:34.320 --> 13:34.520
哎

13:34.520 --> 13:36.120
稍微有一些麻烦啊

13:36.120 --> 13:37.620
因为他是一个字符串

13:37.620 --> 13:38.120
所以说呢

13:38.120 --> 13:39.920
我们就需要去把字符串呢

13:39.920 --> 13:41.620
进行一顿揉练啊

13:41.620 --> 13:42.420
怎么揉练呢

13:42.420 --> 13:43.220
来

13:43.220 --> 13:44.520
这是字符串是吧

13:44.520 --> 13:44.920
然后呢

13:44.920 --> 13:45.520
split

13:47.320 --> 13:48.920
我把它拆分成数组

13:48.920 --> 13:51.820
我以什么作为拆分的依据吗

13:51.820 --> 13:52.520
依据呢

13:53.920 --> 13:55.820
以他看到吗

13:55.820 --> 13:58.320
他作为一个拆分的依据

13:58.320 --> 13:58.920
然后呢

13:58.920 --> 14:00.420
这样一拆分之后呢

14:00.420 --> 14:01.120
这个结果呢

14:01.120 --> 14:02.520
他是变成什么了

14:02.520 --> 14:04.220
变成一个数组

14:04.220 --> 14:05.020
变成一个数组

14:05.020 --> 14:05.720
知道吗

14:05.720 --> 14:06.320
然后呢

14:06.320 --> 14:07.820
这个name Kevin

14:07.820 --> 14:11.120
他是不是我的拆分符号的左边呀

14:12.220 --> 14:13.020
左边

14:13.020 --> 14:13.520
然后呢

14:13.520 --> 14:15.720
他就被拆成一个数据了

14:15.720 --> 14:16.320
然后呢

14:16.320 --> 14:18.720
这个拆分符号的右边

14:18.720 --> 14:21.620
又被当做成了一个数据拆分了

14:21.620 --> 14:22.120
然后呢

14:22.120 --> 14:22.720
接着呢

14:22.720 --> 14:24.720
这个拆分符号的右边

14:24.720 --> 14:27.320
也被当做了一个数据呢

14:27.320 --> 14:28.320
被拆了

14:28.320 --> 14:28.820
所以啊

14:28.820 --> 14:29.220
你看啊

14:29.220 --> 14:30.920
当我去掉了split之后呢

14:30.920 --> 14:32.220
我得到的一个结果呢

14:32.220 --> 14:33.320
是这样的

14:33.320 --> 14:33.620
他呢

14:33.620 --> 14:35.520
是不是就是一个数组

14:35.520 --> 14:36.920
有了数组之后呢

14:36.920 --> 14:37.820
现在啊

14:37.820 --> 14:40.320
因为我只需要去取一个cookit

14:40.320 --> 14:42.520
那我就需要去follow循环了

14:42.520 --> 14:43.720
i等上一个0

14:43.720 --> 14:44.820
i小于

14:46.020 --> 14:48.320
cookice的lens

14:48.320 --> 14:51.540
i加加

14:51.540 --> 14:53.340
然后再循环

14:53.340 --> 14:54.340
在循环的时候呢

14:54.340 --> 14:55.040
干嘛

14:55.040 --> 14:57.340
我们要找到这个东西

14:58.040 --> 14:58.540
是吧

14:58.540 --> 14:59.540
找到这个东西

14:59.540 --> 15:00.440
那这个东西呢

15:00.440 --> 15:02.640
我们直接是没有办法去找到的

15:03.940 --> 15:04.940
所以啊

15:04.940 --> 15:06.540
我还需要

15:06.540 --> 15:07.440
声明一个变量

15:07.440 --> 15:09.040
atm等于什么呢

15:10.240 --> 15:12.140
cookice的第二个

15:12.140 --> 15:13.140
现在第二个呢

15:13.140 --> 15:14.940
指的是不是某一个

15:14.940 --> 15:15.340
然后呢

15:15.340 --> 15:15.940
干嘛

15:15.940 --> 15:16.840
因为第二个呢

15:16.840 --> 15:18.940
他是这种等号的这种形式

15:18.940 --> 15:20.140
我只需要要啥

15:20.140 --> 15:21.140
要这个东西

15:21.140 --> 15:23.440
所以还是继续再拆分

15:23.440 --> 15:24.740
怎么拆呢

15:25.740 --> 15:26.940
然后这个时候呢

15:26.940 --> 15:28.940
我以什么作为分割符啊

15:28.940 --> 15:32.540
以这个等于号作为分割符

15:32.540 --> 15:33.940
那这个拆完之后呢

15:33.940 --> 15:35.340
他变成什么样子呢

15:35.340 --> 15:37.540
他其实变成了这种二维的数组

15:37.540 --> 15:39.040
就是这个内幕啊

15:39.040 --> 15:40.140
开问是吧

15:40.140 --> 15:42.540
人家以等号作为分割符呢

15:42.540 --> 15:45.440
是不是内幕作为第一个数据

15:45.440 --> 15:46.440
完了之后呢

15:46.440 --> 15:50.810
开问作为第二个数据啊

15:50.810 --> 15:51.610
看到吗

15:51.610 --> 15:51.810
好

15:51.810 --> 15:52.810
这是一组

15:52.810 --> 15:53.610
完了之后呢

15:53.610 --> 15:54.010
再来

15:54.010 --> 15:57.810
这是派定作为第一个数据

15:57.810 --> 15:59.210
然后第二个数据呢

15:59.210 --> 16:00.910
是30

16:00.910 --> 16:02.810
这是第二组数据

16:02.810 --> 16:03.810
第三组数据呢

16:03.810 --> 16:05.210
就是为此

16:06.010 --> 16:06.410
这个呢

16:06.410 --> 16:07.910
作为第一个数据

16:07.910 --> 16:08.510
然后呢

16:08.510 --> 16:10.710
40作为第二个数据

16:11.610 --> 16:12.310
理解吧

16:13.510 --> 16:14.210
这样的话

16:14.210 --> 16:14.910
你看

16:14.910 --> 16:16.110
我们就把这个数组呢

16:16.110 --> 16:18.910
给他拆分成了一个二维的一个数组

16:18.910 --> 16:21.610
那拆分成二维的数组之后呢

16:21.610 --> 16:23.310
那接下来干嘛呀

16:23.310 --> 16:24.710
接下来好

16:24.710 --> 16:26.610
这个循环注意了啊

16:26.610 --> 16:28.010
循环的时候呢

16:28.010 --> 16:28.810
item

16:28.810 --> 16:32.310
那么循环一次拿出来一个

16:32.310 --> 16:34.010
循环一次拿出来一个

16:34.010 --> 16:35.810
循环一次拿出来一个

16:35.810 --> 16:36.310
所以啊

16:36.310 --> 16:37.410
这个item呢

16:37.410 --> 16:38.510
他其实啊

16:38.510 --> 16:41.010
因为这个放到这就不太合适了

16:41.010 --> 16:42.210
他应该是放到这

16:42.210 --> 16:43.610
然后这个item呢

16:43.610 --> 16:46.610
他其实是中间的某一个知道吗

16:46.610 --> 16:48.110
某一个数据

16:48.110 --> 16:48.710
然后呢

16:48.710 --> 16:50.110
某一个数据的话

16:50.110 --> 16:52.510
我们就做一下判断呗

16:53.310 --> 16:54.210
判断什么呢

16:54.210 --> 16:57.610
判断item点点

16:57.610 --> 16:59.110
不不用点啊

16:59.110 --> 16:59.810
用什么呢

16:59.810 --> 17:02.510
用我们的这个数组的下标

17:02.510 --> 17:05.010
item的第0个

17:05.010 --> 17:05.710
0个是不是

17:05.710 --> 17:08.010
就是我们每一个的名字呀

17:08.010 --> 17:09.270
每一个啊

17:09.270 --> 17:10.810
cookie他的一个name啊

17:10.810 --> 17:11.910
如果说这个东西呢

17:11.910 --> 17:13.510
他等于等于谁啊

17:13.510 --> 17:16.410
等于等于用户传进来的那个name

17:16.410 --> 17:18.410
就是用户丢进来的这个name

17:18.410 --> 17:19.910
就证明现在呢

17:19.910 --> 17:21.110
是不是找到了

17:21.110 --> 17:22.310
我在这标一下啊

17:22.310 --> 17:24.810
这个条件成立

17:26.810 --> 17:31.210
说明用户传进来的那个

17:31.210 --> 17:34.310
cookie的名字找到了

17:35.910 --> 17:38.010
那找到了之后呢

17:38.010 --> 17:38.910
怎么办呢

17:38.910 --> 17:40.710
我们要给人家返回

17:40.710 --> 17:42.310
那返回的是什么呢

17:42.310 --> 17:45.210
返回的是item的第几个啊

17:45.210 --> 17:46.110
第一个

17:47.910 --> 17:51.340
这给上一个1

17:51.340 --> 17:52.240
那你看啊

17:52.240 --> 17:53.040
这是第0个

17:53.040 --> 17:54.540
这是第一我们的第一个

17:54.540 --> 17:56.340
是不是永远都是数据啊

17:56.340 --> 17:59.540
其实就是那个k所对应的那个值

17:59.540 --> 18:00.940
理解吧

18:00.940 --> 18:02.340
那guide这个方法呢

18:02.340 --> 18:04.540
就算是已经完成了

18:04.540 --> 18:05.540
完成了之后呢

18:05.540 --> 18:06.040
这样的话

18:06.040 --> 18:07.640
我们的这个manage cookie啊

18:07.640 --> 18:08.240
这个对象呢

18:08.240 --> 18:09.840
就就已经完事了

18:09.840 --> 18:10.840
完事之后呢

18:10.840 --> 18:11.740
那接下来呢

18:11.740 --> 18:13.040
咱们就来那个啥

18:13.040 --> 18:14.540
我来获取一下啊

18:14.540 --> 18:15.340
啊

18:15.340 --> 18:16.340
先不remote了

18:16.340 --> 18:17.440
conce吧

18:17.440 --> 18:18.240
conce log

18:18.240 --> 18:19.040
log什么呢

18:19.040 --> 18:19.740
嗯

18:19.740 --> 18:22.440
这个这个算就就用life吧

18:22.440 --> 18:26.810
logmanage cookie

18:26.810 --> 18:27.410
然后呢

18:28.510 --> 18:29.710
点点呢

18:29.710 --> 18:30.910
点guide

18:31.310 --> 18:32.710
guide left

18:33.710 --> 18:34.810
那我来看一下啊

18:34.810 --> 18:36.310
我们在这设置的一个

18:39.720 --> 18:40.720
缺了一个扩号

18:41.820 --> 18:43.320
我在这设置了一个

18:43.320 --> 18:45.220
cookie他的名字叫life

18:45.220 --> 18:45.720
然后呢

18:45.720 --> 18:46.920
他的值是100

18:46.920 --> 18:48.920
那现在我要去取life

18:48.920 --> 18:50.220
那他的一个值按道理

18:50.220 --> 18:51.620
是不是应该是100啊

18:52.020 --> 18:53.220
我们看一下有没有啊

18:53.220 --> 18:54.720
来刷新一下控制台

18:54.720 --> 18:55.080
哎

18:55.080 --> 18:55.720
结果

18:55.720 --> 18:56.420
有啊

18:56.420 --> 18:57.120
有了

18:57.720 --> 18:58.520
ok啊

18:58.520 --> 19:01.520
所有三个方法manage cookie

19:01.520 --> 19:03.020
当中的这些方法

19:03.020 --> 19:05.620
我们就已经给他写完了啊

19:05.720 --> 19:06.920
那写完了之后呢

19:06.920 --> 19:08.520
那接下来咱要做的事情啊

19:08.520 --> 19:10.620
其实也就是我现在这个课的

19:10.620 --> 19:11.220
第一个部分

19:11.220 --> 19:13.720
我们完成了封装cookie的操作啊

19:13.820 --> 19:14.620
因为这个cookie呢

19:14.620 --> 19:16.720
压根就是没有任何的一些操作

19:16.720 --> 19:18.420
那我通过了这么一个对象

19:18.420 --> 19:19.620
那三个方法

19:19.620 --> 19:22.820
就能够满足咱们日常的一些操作需求了

19:22.820 --> 19:24.220
绝对是没啥问题的

19:24.220 --> 19:24.720
行吧

19:24.820 --> 19:25.520
然后呢接下来

19:25.520 --> 19:27.420
就是我们课程的第二个部分了

19:27.420 --> 19:28.920
咱要实践一下

19:28.920 --> 19:29.920
拖拽应用

19:29.920 --> 19:30.720
拿这个拖拽呢

19:30.720 --> 19:31.620
跟我们的cookie呢

19:31.620 --> 19:32.620
结合一下

19:32.620 --> 19:33.620
看看这个cookie呢

19:33.620 --> 19:34.720
到底啊

19:34.720 --> 19:35.720
有没有问题

19:35.720 --> 19:36.120
所以啊

19:36.120 --> 19:36.920
我现在呢

19:36.920 --> 19:38.620
要写上一个拖拽啊

19:38.620 --> 19:39.720
但这个拖拽呢

19:39.720 --> 19:42.320
就是我们怎么跟那个什么结合呀

19:42.320 --> 19:43.720
跟这个cookie结合呢

19:43.720 --> 19:44.420
是这样的

19:44.420 --> 19:45.120
就是

19:45.120 --> 19:45.620
呃

19:45.620 --> 19:47.420
这个这个我首先啊

19:47.420 --> 19:48.820
先要来上一个div

19:50.020 --> 19:51.420
div id box

19:55.730 --> 19:56.230
嘿

19:57.130 --> 19:58.230
啊啊啊

20:01.640 --> 20:02.240
好

20:02.640 --> 20:03.940
然后写一些样式

20:05.440 --> 20:06.040
box

20:07.640 --> 20:09.940
这个box的宽是100像素

20:09.940 --> 20:10.340
然后呢

20:10.340 --> 20:12.140
高也是一个100像素

20:12.140 --> 20:12.540
然后呢

20:12.540 --> 20:14.740
percision是absolute

20:14.740 --> 20:16.240
left值100像素

20:16.240 --> 20:18.140
然后呢top的值100像素

20:18.140 --> 20:19.240
然后background

20:21.480 --> 20:23.080
是一个绿色好

20:23.080 --> 20:24.280
这个页面我们看一下啊

20:24.280 --> 20:25.780
有这么一个绿色的块啊

20:25.780 --> 20:28.280
那我现在想要实现的一个效果是什么呢

20:28.280 --> 20:29.680
就是这个绿色的块

20:29.680 --> 20:30.980
它是不是要拖拽啊

20:30.980 --> 20:31.680
比方说啊

20:31.680 --> 20:32.980
这个拖拽实现完之后呢

20:33.180 --> 20:34.580
拖到了这个地方

20:34.580 --> 20:35.880
拖到这个地方之后呢

20:35.880 --> 20:37.180
当我去刷新

20:37.180 --> 20:37.980
那我问你啊

20:37.980 --> 20:39.780
这个方块应该在哪里啊

20:39.780 --> 20:40.980
是在原始的位置呢

20:40.980 --> 20:43.480
还是在拖到的这个位置啊

20:43.480 --> 20:45.380
那必然是在原始的位置

20:45.980 --> 20:49.680
因为你的js按照从上到下执行的顺序

20:49.680 --> 20:50.280
是吧

20:50.280 --> 20:53.080
那他先执行的就是上边的内容

20:54.780 --> 20:56.880
那执行上面的内容的话呢

20:56.880 --> 20:59.880
他就能够回到最初的那个位置了

20:59.880 --> 21:00.680
理解吧

21:00.680 --> 21:01.180
好

21:01.180 --> 21:02.680
那我现在想要的是什么呢

21:02.680 --> 21:06.280
就是我拖拖到哪里松手

21:06.280 --> 21:08.780
第二次在刷新页面的时候呢

21:08.780 --> 21:10.480
他仍然是在哪里的

21:11.580 --> 21:12.380
那其实就是说

21:12.380 --> 21:14.780
把数据存储到苦渠身上

21:14.780 --> 21:15.480
第二次的时候呢

21:15.480 --> 21:17.680
我们去取苦渠身上的数值

21:17.680 --> 21:20.080
重新给这个div进行一个复制

21:20.080 --> 21:21.080
那页面一刷新

21:21.080 --> 21:24.880
他是不是就是永远停留在你存储的那个位置啊

21:25.680 --> 21:25.980
这个呢

21:25.980 --> 21:28.080
就是咱们要实现的一个功能啊

21:28.080 --> 21:28.780
好吧

21:28.780 --> 21:29.380
那首先呢

21:29.380 --> 21:31.280
我先来实现这个拖拽啊

21:32.280 --> 21:33.380
这个拖拽呢

21:33.380 --> 21:34.880
其实大家已经非常的熟悉了

21:34.880 --> 21:36.480
来直接去写吧

21:36.480 --> 21:38.380
声明声明一个照个

21:39.480 --> 21:41.280
等上一个对象

21:41.280 --> 21:41.580
然后呢

21:41.580 --> 21:42.480
这个对象当中呢

21:42.480 --> 21:43.580
有很多的方法

21:43.580 --> 21:44.080
init

21:45.680 --> 21:46.580
我把这个拖拽呢

21:46.580 --> 21:47.780
做成一个对象啊

21:47.780 --> 21:48.480
init

21:48.480 --> 21:50.980
init就是用来做初始化的啊

21:50.980 --> 21:51.880
然后这个方法呢

21:51.880 --> 21:53.080
他要接收一个参数

21:53.080 --> 21:56.680
到就是你要让谁能够进行一个拖拽

21:56.680 --> 21:58.580
你需要给我传上一个到绵柱

21:58.580 --> 21:58.880
然后呢

21:58.880 --> 21:59.880
传进来之后呢

21:59.880 --> 22:04.380
我把他存到我的这个对象身上的一条属性上

22:04.380 --> 22:06.280
就是叫这点到

22:06.380 --> 22:07.180
理解吧

22:07.180 --> 22:07.780
完了之后呢

22:07.780 --> 22:08.280
接下来

22:08.280 --> 22:09.480
下面有一个方法

22:09.480 --> 22:10.780
bend event

22:14.250 --> 22:15.150
那这个方法呢

22:15.150 --> 22:17.850
他主要是用来添加一些绑定的一些事件

22:17.850 --> 22:20.950
那当我的这个init初始化之后呢

22:20.950 --> 22:23.050
接下来我要调的就是这个了

22:23.050 --> 22:23.950
但是这个方法

22:23.950 --> 22:25.350
你能这么直接去调吗

22:25.350 --> 22:26.050
肯定不行

22:26.050 --> 22:27.650
你应该加上一个这点

22:28.450 --> 22:29.850
这点是吧

22:29.850 --> 22:30.250
这样的话

22:30.250 --> 22:31.750
我就取到了啊

22:31.750 --> 22:32.450
行吧

22:32.450 --> 22:33.750
取到之后呢

22:33.750 --> 22:34.150
行

22:34.150 --> 22:35.550
那这个init这个方法呢

22:35.550 --> 22:36.350
就已经有了

22:37.550 --> 22:39.050
那有了之后呢

22:39.050 --> 22:42.050
我们就在这个最外边最下边

22:42.050 --> 22:44.350
咱先来上一个招个点init

22:45.350 --> 22:46.950
init要传上一个值

22:46.950 --> 22:52.350
那就是document.element by id这个box呢

22:52.850 --> 22:53.450
放进来

22:54.050 --> 22:55.450
好放下之后呢

22:55.450 --> 22:55.850
行

22:55.850 --> 22:56.350
现在呢

22:56.350 --> 22:59.250
我们接下来要说一下这个bend event

22:59.250 --> 23:00.350
那这个bend event

23:00.450 --> 23:00.950
这个东西呢

23:00.950 --> 23:02.850
他主要是用来添事件的啊

23:02.850 --> 23:03.650
这个事件呢

23:03.650 --> 23:06.050
我们并不是直接的通过这个

23:06.650 --> 23:07.650
复职到这种

23:08.050 --> 23:10.950
函数付给什么事件的这个名字去添加的

23:11.050 --> 23:12.350
而是我使用了

23:12.350 --> 23:15.550
那个我们的函数身上的bend的那个方法

23:15.650 --> 23:16.650
咱也顺带

23:16.850 --> 23:18.050
回顾一下那个方法

23:18.050 --> 23:20.050
好不好看看他如何去用啊

23:20.350 --> 23:23.050
那这个事件肯定是要发生在道母身上

23:23.350 --> 23:25.650
事件都是发生在我们的道母身上啊

23:25.650 --> 23:26.450
所以啊

23:26.450 --> 23:29.750
要拿到这点道母点点什么的啊

23:29.750 --> 23:32.150
我们的拖拽是不是首先要按下去

23:32.250 --> 23:33.350
按下去再拖

23:33.350 --> 23:34.850
然后那鼠标再抬起来

23:34.950 --> 23:37.250
所以第一个事件发生是不是啊

23:37.250 --> 23:39.850
啊啊啊什么的啊

23:40.150 --> 23:41.550
moss down

23:41.850 --> 23:42.650
按下的时候

23:43.950 --> 23:45.350
在按下的时候呢

23:45.850 --> 23:46.750
我干嘛啊

23:46.750 --> 23:48.250
我要给他添加事件是不是

23:48.250 --> 23:49.650
事件的一个处理函数

23:49.750 --> 23:50.950
那事件处理函数呢

23:50.950 --> 23:53.750
我是通过这种方式moss down

23:54.550 --> 23:55.850
点点bend

23:55.950 --> 23:56.750
bend什么的

23:56.750 --> 23:57.350
this

23:58.050 --> 23:58.650
然后呢

23:58.650 --> 24:00.050
这个moss down的是啥

24:00.150 --> 24:01.850
他就是一个方法啊

24:03.250 --> 24:04.950
其实也就是这个样子

24:07.600 --> 24:08.600
看明白了吗

24:08.700 --> 24:09.000
这个呢

24:09.000 --> 24:10.700
其实就是通过bend去添加的

24:10.700 --> 24:12.300
就是我们moss down这个呢

24:12.300 --> 24:14.200
不是直接来上一个方式

24:14.400 --> 24:16.200
我为了就是让他们统一嘛

24:16.200 --> 24:17.200
所有的东西呢

24:17.200 --> 24:18.400
都作为一个函数

24:18.800 --> 24:19.300
然后呢

24:19.300 --> 24:20.900
我想要把这个函数添给他

24:20.900 --> 24:21.900
怎么办啊

24:21.900 --> 24:23.000
通过一个bend

24:23.000 --> 24:23.900
添上去之后呢

24:23.900 --> 24:25.900
这个对象的是不是也就改了呀

24:26.200 --> 24:26.500
好

24:26.500 --> 24:28.600
这是三次不是三次

24:28.600 --> 24:31.400
是那个function身上的这些东西啊

24:31.600 --> 24:32.000
好

24:32.000 --> 24:34.600
那在moss down的时候呢

24:34.600 --> 24:35.300
这个事件呢

24:35.300 --> 24:36.900
已经有了就是moss down

24:37.100 --> 24:38.200
那moss down这块呢

24:38.200 --> 24:39.600
我们需要去用到事件对象

24:39.600 --> 24:40.500
比如说这个意

24:41.800 --> 24:42.800
这个里边呢

24:43.100 --> 24:44.600
要做的事情是什么呢

24:45.100 --> 24:48.200
其实就是我要再添加两个事件

24:48.200 --> 24:49.100
这两个事件呢

24:49.100 --> 24:50.800
一个呢是document的点

24:50.800 --> 24:52.500
on most move

24:52.500 --> 24:53.200
是不是啊

24:53.200 --> 24:54.200
等上一个啊

24:54.200 --> 24:56.200
当然我们不能这么直接去等啊

24:56.400 --> 24:57.200
这是

24:57.900 --> 25:00.100
document身上的一个事件

25:00.100 --> 25:01.500
也就是说手指

25:01.500 --> 25:02.700
鼠标印一下之后呢

25:02.700 --> 25:04.600
接下来是不是要移动了呀

25:04.800 --> 25:05.500
移动的话

25:05.500 --> 25:08.200
是在整个页面当中进行移动吧

25:08.300 --> 25:09.200
那整个页面呢

25:09.200 --> 25:11.000
是不是就是这个document他

25:11.100 --> 25:14.100
所以给他的身上去添加一个moss

25:14.100 --> 25:15.600
move的这个方法啊

25:15.600 --> 25:16.800
那他等于什么呢

25:16.800 --> 25:18.200
跟上面是一样的啊

25:18.200 --> 25:20.500
我们既然要用那就统一些啊

25:20.500 --> 25:21.100
那这呢

25:21.100 --> 25:23.100
对应的不是moss down了

25:23.100 --> 25:25.400
对应的是moss move

25:27.920 --> 25:28.320
move

25:29.120 --> 25:29.720
好吧

25:29.720 --> 25:31.720
这个呢是moss move

25:31.720 --> 25:33.820
还有一个moss up

25:35.760 --> 25:36.360
up

25:36.360 --> 25:38.160
然后moss up的时候呢

25:38.160 --> 25:39.760
这个地方的方法

25:39.760 --> 25:41.360
也是moss up

25:42.660 --> 25:43.260
行

25:43.360 --> 25:44.960
那这俩方法就有了

25:45.060 --> 25:45.760
有了之后呢

25:45.760 --> 25:46.560
我们在这呢

25:46.560 --> 25:47.360
写一下

25:50.260 --> 25:51.260
这是一个

25:51.260 --> 25:51.760
然后呢

25:51.760 --> 25:52.760
moss up

25:56.620 --> 25:57.220
方式

25:58.220 --> 25:58.920
好吧

25:59.120 --> 25:59.520
然后呢

25:59.520 --> 26:00.020
接下来呢

26:00.020 --> 26:01.820
我们就在这两个方法当中呢

26:01.820 --> 26:03.920
咱去写上对应的一个代码

26:04.020 --> 26:05.320
剩下的就简单了

26:05.320 --> 26:06.520
就回到哪里了

26:06.520 --> 26:09.420
回到了我们的拖拽的本身了啊

26:09.420 --> 26:10.320
来你看啊

26:10.320 --> 26:11.720
moss down这个里边呢

26:11.720 --> 26:13.220
首先两个事件添上去了

26:13.220 --> 26:14.820
在鼠标按下的时候呢

26:14.820 --> 26:18.020
我们是需不需要去记录一些点呀

26:18.120 --> 26:18.720
比如说

26:18.720 --> 26:20.820
this点this this x

26:21.620 --> 26:23.320
按下的那个点等于什么呢

26:23.320 --> 26:25.120
是应该等于事件对象

26:25.120 --> 26:25.920
client

26:26.920 --> 26:27.520
x

26:27.520 --> 26:28.320
然后呢

26:28.320 --> 26:29.920
简去什么

26:29.920 --> 26:33.720
是不是this点倒母的offer site

26:33.720 --> 26:34.520
lifter

26:35.620 --> 26:36.620
按下那个点

26:36.620 --> 26:39.720
它里盒子左边的那个距离是不是要简去啊

26:40.820 --> 26:41.720
简去这个

26:41.720 --> 26:42.720
然后一样的

26:42.720 --> 26:44.320
到底this y

26:44.520 --> 26:45.120
这个值呢

26:45.120 --> 26:46.520
应该变成 y

26:47.120 --> 26:48.420
offer site

26:48.520 --> 26:49.120
top

26:50.420 --> 26:51.020
好

26:51.020 --> 26:52.020
按下的时候呢

26:52.020 --> 26:53.820
我记录了两个点

26:53.820 --> 26:54.820
两个点啊

26:54.820 --> 26:55.820
他的一个坐标

26:55.920 --> 26:56.320
然后呢

26:56.320 --> 26:57.420
记录完之后呢

26:57.420 --> 26:59.220
接下来是不是就是move了

26:59.220 --> 27:00.020
move的时候呢

27:00.020 --> 27:02.920
肯定也是需要去用到是一个事件对象的啊

27:02.920 --> 27:03.620
然后呢

27:03.620 --> 27:04.720
这个里头呢

27:04.720 --> 27:05.820
怎么去给呢

27:05.820 --> 27:06.420
move

27:06.420 --> 27:07.320
move的时候呢

27:07.320 --> 27:08.120
我需要

27:08.520 --> 27:10.420
this点new life

27:10.820 --> 27:12.020
这个东西等于什么呢

27:12.020 --> 27:13.220
是不是ev

27:13.220 --> 27:13.720
用e吧

27:13.720 --> 27:14.720
不用v了啊

27:14.720 --> 27:15.720
用e

27:17.120 --> 27:19.420
点client x

27:19.420 --> 27:22.920
这就是鼠标在走的时候的那个坐标简去

27:22.920 --> 27:25.220
你记录下的那个坐标

27:27.200 --> 27:28.600
那这个值是啥

27:28.600 --> 27:31.200
就是现在我的方块

27:31.200 --> 27:32.400
我的那个div

27:32.400 --> 27:34.200
要走的那个值

27:36.710 --> 27:38.010
然后这是x走

27:38.010 --> 27:38.910
y走呢

27:38.910 --> 27:40.710
this new top

27:41.510 --> 27:42.910
client y

27:42.910 --> 27:43.610
然后呢

27:43.610 --> 27:45.610
this y

27:46.810 --> 27:47.310
好

27:48.010 --> 27:48.710
这两个东西呢

27:48.710 --> 27:49.610
我存一下

27:50.310 --> 27:51.510
存一下存完之后呢

27:51.510 --> 27:52.110
接着呢

27:52.110 --> 27:53.310
在下边要用

27:53.310 --> 27:55.510
那就是this咱要复职了

27:55.510 --> 27:55.910
注意啊

27:55.910 --> 27:56.710
复给谁

27:56.710 --> 27:57.910
是不是道目呀

27:57.910 --> 27:59.110
啊一定要注意啊

27:59.110 --> 28:00.410
你复职复职

28:00.410 --> 28:02.710
是复给真正的道目对象啊

28:02.710 --> 28:04.910
道目点style的life

28:04.910 --> 28:06.110
应该等于什么呢

28:06.110 --> 28:08.610
等于this点new life

28:08.610 --> 28:10.010
加上一个p差

28:10.610 --> 28:11.810
然后this点道

28:11.810 --> 28:14.010
道目点style的top

28:14.010 --> 28:16.410
等于this点new top

28:16.410 --> 28:17.810
再加上一个p差

28:19.410 --> 28:22.010
这是才真正给他复了制的

28:22.010 --> 28:22.810
明白吧

28:22.810 --> 28:24.410
好复完职之后呢

28:24.410 --> 28:25.810
在most up的时候呢

28:25.810 --> 28:28.210
我们就清空事件就行了啊

28:28.210 --> 28:31.610
document点onmost move

28:31.610 --> 28:33.610
这个等上一个no

28:33.710 --> 28:38.110
然后以及document点onmost up

28:38.110 --> 28:38.610
然后呢

28:38.610 --> 28:40.810
让他也等于一个no

28:40.810 --> 28:41.310
行了啊

28:41.310 --> 28:42.510
就这个样子

28:42.510 --> 28:43.510
完了之后呢

28:43.510 --> 28:44.710
我们来看一下啊

28:44.710 --> 28:45.710
来看一下

28:46.410 --> 28:50.800
抱错了

28:50.800 --> 28:51.700
抱错了

28:51.700 --> 28:52.500
哪里抱错了

28:59.060 --> 29:01.460
这这这怎么是一个等号呢

29:03.260 --> 29:03.760
再来

29:03.760 --> 29:04.460
行了吧

29:04.460 --> 29:04.760
然后呢

29:04.760 --> 29:06.260
我们看一下能不能拖啊

29:09.970 --> 29:10.570
好

29:10.570 --> 29:11.870
拖不了拖不了

29:11.870 --> 29:12.470
然后呢

29:12.470 --> 29:14.170
那就测试一下呗

29:14.170 --> 29:15.870
在most down的时候

29:17.070 --> 29:17.570
most down

29:17.570 --> 29:18.170
我们先来看

29:18.170 --> 29:20.370
这个事件有没有发生啊

29:20.370 --> 29:21.570
这给上一个1

29:23.170 --> 29:23.370
哎

29:23.370 --> 29:25.170
这个事件没有发生啊

29:25.170 --> 29:26.270
没有发生

29:26.270 --> 29:28.270
那就是mos

29:28.270 --> 29:32.970
most down点on most

29:32.970 --> 29:34.870
onmouse

29:34.870 --> 29:35.470
错了

29:35.470 --> 29:36.370
拼错了

29:36.370 --> 29:37.070
再来看

29:38.070 --> 29:38.370
哎

29:38.370 --> 29:39.470
还还错了

29:39.470 --> 29:41.170
bend 65

29:43.530 --> 29:44.830
this 点

29:45.730 --> 29:46.830
se up

29:47.130 --> 29:52.270
on most

29:53.470 --> 29:54.270
this 点

29:55.170 --> 29:56.570
most up

30:01.230 --> 30:02.130
most啊

30:02.130 --> 30:03.030
没有那个啊

30:05.030 --> 30:05.430
哎

30:05.430 --> 30:06.330
65

30:06.330 --> 30:07.330
还抱错

30:10.370 --> 30:13.770
this 点mos up 点

30:15.070 --> 30:15.770
我看一下啊

30:15.770 --> 30:16.770
most up

30:18.270 --> 30:18.970
哎呀

30:19.070 --> 30:20.570
这个这个这个拼

30:21.270 --> 30:21.870
这样吧

30:23.170 --> 30:24.870
我再确定一下啊

30:25.570 --> 30:27.170
反正我的很多的错误

30:27.170 --> 30:28.370
都是拼的时候呢

30:28.370 --> 30:29.070
拼错了

30:29.070 --> 30:29.470
哎

30:29.470 --> 30:30.970
你看现在是不是可以了

30:30.970 --> 30:31.870
能拖拽了啊

30:31.870 --> 30:33.370
就是我们的整体逻辑

30:33.370 --> 30:33.970
没有问题啊

30:33.970 --> 30:35.270
就是拼错了

30:35.570 --> 30:36.070
行吧

30:36.070 --> 30:36.370
好

30:36.370 --> 30:36.970
这个时候呢

30:36.970 --> 30:38.070
当可以

30:38.370 --> 30:40.070
当我去刷新啊

30:40.070 --> 30:40.670
刷新之后呢

30:40.670 --> 30:41.170
你看

30:41.170 --> 30:42.470
他是不是就跳到这了

30:42.770 --> 30:44.270
那我不想要这个

30:44.270 --> 30:45.470
我想刷新完之后呢

30:45.470 --> 30:47.170
就是他原来在哪里呢

30:47.170 --> 30:48.670
他还到哪里

30:48.670 --> 30:49.770
那这个怎么办呢

30:49.770 --> 30:51.770
我们就需要去借助这个Cookie了啊

30:51.770 --> 30:52.170
来

30:52.170 --> 30:53.070
那看一下啊

30:53.070 --> 30:54.070
最后一个功能

30:54.070 --> 30:55.870
该如何去实现他啊

30:56.670 --> 30:57.770
那我们想想啊

30:57.770 --> 30:59.770
就是当你刷新之后呢

30:59.770 --> 31:01.370
他的位置应该是在这

31:01.370 --> 31:03.370
那是不是意思不就代表说

31:03.670 --> 31:04.570
这个位置

31:04.570 --> 31:05.570
他的一个值

31:05.570 --> 31:07.270
你应该给我记录一下呀

31:07.670 --> 31:08.970
记录完了之后呢

31:08.970 --> 31:10.770
在页面一开始的时候呢

31:10.770 --> 31:11.670
我就看一下

31:11.670 --> 31:12.670
有没有这个值

31:12.670 --> 31:13.970
假设有的话

31:13.970 --> 31:15.970
那我就重新的给他复职

31:15.970 --> 31:17.870
复一个life值跟套不值啊

31:18.270 --> 31:19.970
那整体就是这么一个逻辑

31:19.970 --> 31:20.570
懂吗

31:20.570 --> 31:21.070
好

31:21.070 --> 31:22.770
那我们要存

31:22.770 --> 31:23.570
存完之后呢

31:23.570 --> 31:24.270
再去用

31:24.270 --> 31:25.570
什么时候存呢

31:25.770 --> 31:26.770
什么时候存啊

31:26.970 --> 31:27.970
是不是说

31:27.970 --> 31:30.370
你在鼠标抬起的时候呢

31:30.370 --> 31:31.270
才去存

31:31.270 --> 31:32.070
抬起的时候呢

31:32.070 --> 31:33.770
就证明现在你松开了嘛

31:33.770 --> 31:37.270
有可能你就拖到想要的位置了嘛

31:37.370 --> 31:39.770
那我们就在这给你存一下

31:39.770 --> 31:42.970
那其实就是说在摸丝up的时候呢

31:42.970 --> 31:44.570
我们给你存一下啊

31:44.570 --> 31:45.670
那怎么去存呢

31:45.670 --> 31:46.570
来在这呢

31:47.970 --> 31:49.470
鼠标我标一下啊

31:49.470 --> 31:51.770
鼠标抬起的时候

31:51.770 --> 31:53.770
需要存储一下

31:54.770 --> 31:56.570
啊此刻

31:58.890 --> 31:59.990
此刻啊

31:59.990 --> 32:01.790
这个啊

32:01.790 --> 32:02.890
合字的

32:03.790 --> 32:05.190
合字的位置

32:05.190 --> 32:05.890
信息

32:06.590 --> 32:07.190
好

32:07.190 --> 32:08.790
那怎么去存呢

32:08.790 --> 32:09.590
存储

32:09.590 --> 32:10.790
通过cookie

32:14.140 --> 32:15.040
通过cookie的话

32:15.040 --> 32:16.440
那就需要去调调什么的

32:16.440 --> 32:18.440
调我们上边的这些方法了

32:18.440 --> 32:18.840
那吧

32:18.840 --> 32:19.440
然后这个呢

32:19.440 --> 32:20.240
我就干嘛

32:20.240 --> 32:21.440
我先把它

32:21.440 --> 32:22.340
先把它

32:23.040 --> 32:24.540
注释掉啊注释掉

32:24.540 --> 32:25.640
然后我先看一下

32:25.640 --> 32:28.240
以防他有问题

32:28.240 --> 32:29.940
来我刷新一下

32:30.540 --> 32:32.140
啊把这个life的值呢

32:32.140 --> 32:33.140
给他干掉啊

32:33.140 --> 32:34.340
干掉刷新

32:34.340 --> 32:35.440
没有life的值啊

32:35.440 --> 32:36.540
好啊

32:36.540 --> 32:37.940
那我就在这存

32:37.940 --> 32:39.040
那怎么存呢

32:39.040 --> 32:41.040
我拿到这个manage

32:41.540 --> 32:42.740
拿到我们的这个

32:43.740 --> 32:44.340
cookie

32:44.740 --> 32:46.740
manage存怎么存啊

32:46.740 --> 32:49.340
是不是side掉他身上的这个方法

32:50.240 --> 32:52.040
然后这个方法呢

32:52.440 --> 32:53.640
接收三个参数

32:53.640 --> 32:55.640
第一个参数就是你要存的一个名字

32:55.640 --> 32:56.440
那这个名字呢

32:56.440 --> 32:58.040
我们给上一个new life

32:58.040 --> 32:59.040
new life

33:00.040 --> 33:00.940
不跟刚才一样了

33:00.940 --> 33:01.440
好吧

33:01.440 --> 33:02.540
然后第二个参数呢

33:02.540 --> 33:04.040
就是他的一个值

33:04.040 --> 33:05.640
他的值是啥呢

33:06.040 --> 33:06.940
他的值

33:06.940 --> 33:10.440
不就是这个this new life吗

33:10.440 --> 33:11.040
好

33:11.040 --> 33:12.740
到这你是不是已经知道了

33:12.740 --> 33:14.940
刚才我为什么要把它存起来的

33:14.940 --> 33:16.040
一个原因了呀

33:16.040 --> 33:17.240
如果说你不存起来的话

33:17.240 --> 33:18.640
你在这呢是用不到的

33:18.940 --> 33:19.440
这个呢

33:19.440 --> 33:21.540
就是我存他的一个原因啊

33:21.540 --> 33:22.940
然后呢过期的一个时间

33:22.940 --> 33:24.940
我给上一个一万秒

33:24.940 --> 33:27.340
就是反正就是三个小时左右吧啊

33:27.340 --> 33:28.340
manage

33:29.740 --> 33:30.540
manage

33:30.540 --> 33:32.140
cookie.side

33:33.140 --> 33:34.640
这是new top

33:35.340 --> 33:36.040
然后他的值

33:36.040 --> 33:37.740
this.new top

33:37.940 --> 33:38.940
然后这个时间

33:39.640 --> 33:40.140
一万

33:42.310 --> 33:42.810
行

33:43.310 --> 33:43.810
那好

33:43.810 --> 33:46.510
那在most up的时候呢

33:46.510 --> 33:47.810
我们来看一下啊

33:47.810 --> 33:48.410
刷新一下

33:48.410 --> 33:49.010
注意啊

33:49.110 --> 33:50.010
来这个时候呢

33:50.010 --> 33:51.710
走当我抬起

33:51.910 --> 33:52.510
然后呢

33:52.510 --> 33:53.810
来切一下啊

33:53.810 --> 33:54.510
切一下之后呢

33:54.510 --> 33:55.410
你看到没有

33:55.410 --> 33:56.310
new life

33:56.310 --> 33:57.210
new top

33:57.210 --> 33:58.310
是不是就已经有了

33:58.810 --> 33:59.710
有了之后呢

33:59.710 --> 34:00.410
接下来呢

34:00.410 --> 34:01.010
干嘛

34:01.010 --> 34:02.110
我在哪里呢

34:02.110 --> 34:04.510
在一开始的时候

34:04.510 --> 34:05.610
他不是在这啊

34:05.610 --> 34:07.710
在一开始init

34:07.710 --> 34:09.510
初始化的时候

34:09.510 --> 34:10.910
初始化的时候呢

34:10.910 --> 34:12.210
我们就需要去看一下

34:12.210 --> 34:13.510
这两个值有没有

34:13.510 --> 34:14.410
有的话

34:14.410 --> 34:16.710
我就需要把这个box

34:16.710 --> 34:18.710
他的这个道母吧

34:18.710 --> 34:19.610
把他的life

34:19.610 --> 34:21.710
是跟套值要更新了

34:21.710 --> 34:22.310
懂吗

34:22.310 --> 34:23.010
那所以啊

34:23.010 --> 34:23.510
在这呢

34:23.510 --> 34:25.810
就是我们声明

34:25.810 --> 34:26.610
声明什么呢

34:26.610 --> 34:27.410
声明一个辨量

34:27.410 --> 34:28.810
这个辨量叫l

34:28.810 --> 34:29.510
等于什么呢

34:29.510 --> 34:30.510
你要去取

34:30.510 --> 34:31.910
那就是manage

34:31.910 --> 34:33.610
cookie.guide

34:34.110 --> 34:34.910
guide什么呢

34:34.910 --> 34:37.310
guide这个new life

34:38.310 --> 34:39.810
然后vart

34:40.210 --> 34:41.110
是不等于

34:41.910 --> 34:43.710
manage.guide

34:44.610 --> 34:45.310
new

34:49.240 --> 34:49.740
可以

34:50.540 --> 34:51.740
new top

34:52.140 --> 34:53.140
取到这两

34:54.740 --> 34:56.440
那取到这两个之后呢

34:56.440 --> 34:57.140
接下来

34:57.140 --> 34:58.340
我需要去复职

34:58.340 --> 34:59.240
但是复职

34:59.240 --> 35:01.140
你可不能直接去复啊

35:01.140 --> 35:02.140
因为如果说啊

35:02.140 --> 35:03.540
他没有的话

35:03.540 --> 35:04.340
人家没存

35:04.340 --> 35:05.040
假设说

35:05.040 --> 35:06.140
他没有存下来

35:06.140 --> 35:06.840
没有存下来

35:06.840 --> 35:07.640
你直接去复

35:07.640 --> 35:08.140
这个东西呢

35:08.140 --> 35:08.940
是一个安迪范的

35:08.940 --> 35:09.440
到时候呢

35:09.440 --> 35:11.140
他就出错了啊

35:11.140 --> 35:11.640
所以啊

35:11.640 --> 35:12.340
在这呢

35:12.340 --> 35:13.940
我应该怎么样

35:13.940 --> 35:15.040
我们应该让

35:15.640 --> 35:16.840
this.down

35:20.320 --> 35:22.420
做一个条件的判断

35:22.420 --> 35:23.520
那我使用的是

35:23.520 --> 35:24.720
三目运算服

35:24.720 --> 35:26.020
等life

35:26.020 --> 35:26.920
等于什么呢

35:26.920 --> 35:28.020
等于l

35:28.020 --> 35:28.920
问l

35:28.920 --> 35:30.320
现在有没有值

35:30.320 --> 35:31.220
有的话

35:31.220 --> 35:32.420
我就让l

35:32.420 --> 35:34.120
再加上一个px

35:34.120 --> 35:34.920
复给他

35:34.920 --> 35:35.520
对不对

35:35.520 --> 35:36.620
那否则的话

35:36.620 --> 35:38.220
我就让你还原成

35:38.220 --> 35:39.320
你默认的

35:39.320 --> 35:40.520
默认是不是就是一个

35:40.520 --> 35:41.620
我们在这的

35:41.620 --> 35:42.120
css

35:42.120 --> 35:42.920
写的就是life

35:42.920 --> 35:43.320
跟top

35:43.320 --> 35:45.120
都是一个100像素

35:45.820 --> 35:46.820
然后top

35:46.820 --> 35:48.120
是一样的道理

35:48.620 --> 35:49.020
这儿呢

35:49.020 --> 35:50.320
改成一个t

35:50.820 --> 35:51.320
t

35:52.120 --> 35:52.920
ok啊

35:52.920 --> 35:53.420
行

35:53.520 --> 35:54.920
这样的话就可以了啊

35:54.920 --> 35:55.820
来这个时候呢

35:55.820 --> 35:57.120
我刷新一下啊

35:57.120 --> 35:57.920
刷新一下

35:57.920 --> 35:58.420
这时候呢

35:58.420 --> 35:59.120
你会看到

35:59.120 --> 36:00.020
当我刷新完之后呢

36:00.020 --> 36:00.620
这个东西呢

36:00.620 --> 36:01.420
他始终是不是

36:01.420 --> 36:02.620
就在这个地方

36:02.620 --> 36:03.820
那我们来选中一下

36:03.820 --> 36:04.520
看看啊

36:04.520 --> 36:05.520
来他的身上

36:05.520 --> 36:06.620
是不是262

36:06.620 --> 36:07.820
145

36:07.820 --> 36:09.120
看一下application

36:09.120 --> 36:10.220
当中的这个

36:10.220 --> 36:11.720
242

36:11.720 --> 36:13.120
然后了145

36:13.120 --> 36:13.820
正确吧

36:13.820 --> 36:15.420
来拖到这之后呢

36:15.420 --> 36:17.420
然后我先看一下这个值啊

36:17.420 --> 36:19.420
现在变成了1239

36:19.420 --> 36:20.320
150啊

36:20.320 --> 36:20.720
注意啊

36:20.720 --> 36:22.420
你看这现在

36:22.420 --> 36:22.920
你看人

36:22.920 --> 36:23.920
其实已经有了

36:23.920 --> 36:25.920
哈有了1239

36:25.920 --> 36:26.620
150

36:26.620 --> 36:28.920
来看到吗

36:28.920 --> 36:30.220
有了吧

36:30.220 --> 36:30.720
好

36:32.220 --> 36:32.820
行吧

36:32.820 --> 36:34.220
那这样的话

36:34.220 --> 36:35.020
你看我们的这个

36:35.020 --> 36:36.220
cookie呢

36:36.220 --> 36:38.220
他的风桩函数

36:38.220 --> 36:40.620
以及这个拖拽的一个应用呢

36:40.620 --> 36:41.120
现在呢

36:41.120 --> 36:42.820
是不是就已经完事了

36:42.820 --> 36:43.320
好

36:43.320 --> 36:44.820
那咱们的这节课呢

36:44.820 --> 36:46.020
就说到这里

