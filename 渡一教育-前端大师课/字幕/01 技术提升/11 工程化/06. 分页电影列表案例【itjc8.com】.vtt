WEBVTT

00:00.300 --> 00:05.420
好了 同学们 经过了前边这么长时间的学习 大家很辛苦

00:05.920 --> 00:07.720
不过呢 我们收获也是很大的

00:08.500 --> 00:12.580
至此呢 我们基本上少轻了我们学习框架的障碍

00:12.840 --> 00:16.680
就是我们现在呢 已经没有什么东西可以阻挡我们学习框架了

00:16.940 --> 00:21.040
我们把之前的这些障碍呢 需要我们掌握的知识呢 基本上就全部掌握了

00:21.560 --> 00:25.640
不过不着急啊 我们很快就会进入框架的学习 我们今天呢 最后一天

00:25.900 --> 00:28.460
把我们前边学习的模块化

00:28.660 --> 00:31.260
保管力器以及工程化的东西呢 拿出来

00:31.520 --> 00:34.080
练一练 对吧 我们说话说

00:34.340 --> 00:36.140
光说不练甲罢识

00:36.400 --> 00:39.200
对不对 你觉得这个东西呢 感觉很飘 感觉很虚

00:39.460 --> 00:42.280
我们扎扎实实的做一个效果出来 把它练一练就OK了

00:42.540 --> 00:47.140
这里边有两个地址啊 一个地址呢 是咱们的效果 就是我们要实现的效果在这

00:47.920 --> 00:49.960
这个地址呢 你们打开可能要慢一点

00:50.220 --> 00:55.860
因为我这边有缓存 你们打开这个视频 可能要加载一段时间啊 因为我们那个服务器呢

00:56.580 --> 01:00.420
也存在不了那么多人访问 所以说加载时间慢一点 耐心一下

01:00.940 --> 01:03.240
这里边其实有音乐的啊 这个音乐呢

01:06.220 --> 01:08.780
能听见吗 这里边是有个音乐的啊

01:09.300 --> 01:11.340
然后呢 滑到下面呢 音乐就停止

01:11.600 --> 01:15.680
下面呢 是一个电影列表 接下来最下面呢 是有一个分页啊

01:15.940 --> 01:17.220
这里有一个分页

01:17.740 --> 01:18.760
这里有一个分页

01:19.260 --> 01:22.080
好 滑上去 音乐重新出现

01:22.600 --> 01:25.160
整个过程呢 就是一个单页应用程序 就是

01:25.360 --> 01:27.560
页面上所有的东西全部由

01:28.320 --> 01:32.520
介石创建完成 就是不写一天票 全部由介石来创建完成

01:32.960 --> 01:36.120
那么这些事呢 我们将来学的框架过后呢 可以更加轻松的办到

01:36.640 --> 01:39.240
目前呢 我们还没有学习框架 那我们就用接框

01:39.720 --> 01:43.080
那也可以 也没什么都没到大的问题 因为这个页面本身也比较简单

01:43.640 --> 01:46.720
好 我们今天就用一天的时间来搞定这个页面

01:48.440 --> 01:52.240
然后这里边呢 我们这里边肯定会涉及到一些远程的数据

01:53.120 --> 01:56.640
那么这个数据呢 这里可以通过这个接口地址啊 来查看这个APN文档

01:57.760 --> 02:02.520
这边就这个啊 热门电影列表 那么去请求咋呢 请求这个域名

02:03.040 --> 02:07.880
在这 生产环境 请求这个域名啊 逗一 edu.com

02:08.760 --> 02:12.800
然后边跟上我们的路径啊 APN movies 就可以了 我们这里发送

02:14.520 --> 02:20.280
你看 是不是拿到结果了 对不对啊 你可以去试一下啊 总之呢 这个接口给我们了 然后呢 这里边

02:22.280 --> 02:23.080
有个mp3

02:24.480 --> 02:27.960
有一个mp4啊 这个是没有声音的 它只有一个

02:28.880 --> 02:33.000
影像啊 就这两个东西给我们提供了 素材 接下来我们就把它实现

02:33.880 --> 02:38.600
好 来吧 我们跟随这个文档啊 一步一步去分析 一步一步去做

02:39.160 --> 02:45.240
工程的话 我们不需要理答 这工程呢 就是已经给你们打好了 就是我利用我们上节课

02:46.000 --> 02:51.880
学习的那个工程 你把它复制三天过来就ok 我这里边呢 就是在这个 我刚刚改了个名字叫moviness

02:52.200 --> 02:54.200
电影列表用vscore打开

02:55.320 --> 02:59.560
第一步要做什么呢 入口文件我把清空了啊 这些东西都清了 清除了

03:00.600 --> 03:02.200
第一步呢 肯定是要安装一带

03:02.960 --> 03:04.440
npm 啊 你们跟着我做

03:05.520 --> 03:08.920
就这一共呢 你能不着急自己去做啊 不要着急自己去做 因为

03:09.640 --> 03:12.200
你们第一次接触工程的话 自己做了还是

03:12.760 --> 03:18.440
有点难度的 跟随着我做啊 你跟随着就听到这个课之后 你能能够跟随着我的节奏

03:18.840 --> 03:22.080
把它做完就ok 安装好了一带了 对吧

03:24.200 --> 03:26.080
好 那么就差不多了 接下来我们第一步

03:26.920 --> 03:32.000
首先就是来分析我们的功能模块 因为我们要做一个单页应用程序 而我们的页面呢

03:32.800 --> 03:34.680
啥都没有 就有一个id

03:35.440 --> 03:39.760
对吧 就这么一个div 我们所有的东西就是用介石创建

03:40.320 --> 03:44.840
然后呢 创建好了各种元素过后呢 把它加入到这个div里面去 完成

03:45.840 --> 03:51.160
好 那么我们来如何来划分功能模块呢 功能模块一个人就划分好了 就这样子划分

03:52.040 --> 03:57.560
跟着我来解决啊 把它划分为两个大的区域 第一个大的区域呢 就是封面

03:58.360 --> 04:04.230
就上面这个区域 你看这 封面啊 就这个区域

04:05.030 --> 04:12.270
这个区域呢 它就使用我们使用一个模块来解决 使用这个carver 这个目录下面的index的介石

04:13.030 --> 04:19.670
让这个介石呢 负责创建这个区域 包括这个区域的央视啊 包括这个区域里边 各种各样的

04:20.590 --> 04:28.990
图片啊 还有视频啊 音频啊 都靠这个介石来完成 当然这个介石呢 可能会依赖一些央视文件 可能会依赖一些图片 等等等等啊 无所谓

04:29.430 --> 04:33.990
你自己去做 反正这个文件夹里边 通过这个index的介石 就会创建这个区域

04:34.830 --> 04:40.750
然后另外一个区域呢 就是我们放到这个movey index的介石里边 放这 那么它负责创建下面这个区域

04:42.430 --> 04:45.350
包括分页 包括一个电影列表 把分模块来做

04:46.550 --> 04:52.670
然后我们的入口文件呢 就是Madele介石 Madele介石呢 它做的事情很简单 它就负责去导入

04:54.390 --> 05:01.670
这个movey下面的index介石 去导入carver下面的index介石 它们运行一遍 那么整个区域就完成了

05:02.870 --> 05:08.790
这样就意思吧 我们既然分析出来 可以用这种方式来做的话 我们接下来再建立我们的目录

05:09.590 --> 05:13.510
首先呢 我在这个src里边能建立一个文件夹 叫做movey

05:14.230 --> 05:21.150
再来建立一个文件夹呢 叫做carver啊 封面 好carver里边那么先写上一个index的介石

05:22.790 --> 05:26.150
啊movey里边呢 再写上一个index的介石

05:26.870 --> 05:32.070
好 我们在这里呢 随便先输出一个吧 输出一个carver里面输出一个carver

05:33.350 --> 05:35.910
movey里边呢 输出一个movey

05:36.390 --> 05:43.190
好了 然后我们在movey里边呢 按照我们刚才说的 只需要把它们运行一遍就完成

05:43.710 --> 05:52.470
把那个carver运行一下 然后再把这个movey运行一下 因为我们可以省略后面的index的介石可以省略这个名字

05:53.430 --> 05:56.950
好 接下来我们来试一下啊 看这两句话呢 能不能正常的输出

05:57.950 --> 05:59.670
npm装设 打包

06:02.010 --> 06:03.930
好 运行 打开啊 看一下

06:07.180 --> 06:13.100
呃 这边可以看到啊 这两个输出了 对吧 所以说我们接下来要做的事情呢 就是挨着挨着做这个模块

06:13.500 --> 06:18.460
先把这个模块完成 创建一些元素加入到页面中的这个div里边去

06:19.100 --> 06:23.900
好 然后呢 再把这个东西创建一些元素啊 注册一些事件加入到里边去 就完成

06:24.700 --> 06:29.340
对吧 这我们第一步 把这个工程目录呢 先建好 好 同学们跟着做一下啊

06:30.620 --> 06:32.140
好了没 好 我们继续

06:33.740 --> 06:38.300
接下来我们要谈一个问题 什么问题呢 因为我们现在还没有开始写代码

06:39.100 --> 06:45.660
我们只是把这个结构划分好了 但是到将来我们一定会加入代码的 那么大家可以想一想啊

06:46.460 --> 06:49.500
假设 这是一个比较复杂的应用

06:50.380 --> 06:54.700
那么这里边的代码可能会很多 这里边的代码也可能会很多

06:55.740 --> 07:01.020
然后呢 这还是一个 还有一个入口文件 最终他们打包的时候是不是会进行打包合并啊

07:01.500 --> 07:04.220
他们会把他把他们合并成一个节业室

07:04.860 --> 07:07.340
好 咱们再试一下啊 npm装

07:08.300 --> 07:09.820
6

07:12.500 --> 07:15.300
好 看到这里一个打包目录 你看是不是只有一个节业室的

07:16.020 --> 07:21.060
对不对 当那个节业室里边呢 加着一些乱七八糟的东西啊 不过无所谓 他加了一些监统性代码

07:21.380 --> 07:23.460
啊 其实无所谓的 我们就直接看这个

07:23.860 --> 07:27.940
所以加入了一个console log cover console log movie 是不是把它合并在一起

07:28.900 --> 07:33.460
那么这个合并在一起 不就是我们想要的吗 为什么会有什么样的问题呢

07:34.020 --> 07:35.060
看这里分析啊

07:37.590 --> 07:40.150
一导在里边一定要想 这个代码可能会很多

07:40.710 --> 07:45.750
比方说这个经纪是在节业室里边一块代码 它里边一块代码 然后呢入口文件里边一块代码

07:45.830 --> 07:51.590
我们通过入口文件去找一代关系 那么又会找到他找到他 对不对 就能打包结果是不是合并在一起

07:52.710 --> 07:54.470
好 如果说啊

07:55.350 --> 07:59.990
我们这个GS里面内容比较多的话 那么你想一想 这打包结果是不是很大呀

08:01.350 --> 08:05.430
在真实的项目里边 如果说你不加处理的话 这个打包结果可能会打到

08:05.990 --> 08:09.190
好几招 都有完全有可能啊 这也是非常常见的

08:09.910 --> 08:12.550
因为这里边打包结果里边还会加入一些第三方库

08:13.670 --> 08:14.710
这个打包结果很大

08:15.350 --> 08:19.510
那么打包结果很大会导致什么问题呢 就会导致我们传输的量比较大

08:20.390 --> 08:23.190
对不对 那么会影响我们的传输效率

08:23.670 --> 08:26.950
可是呢 我们仔细一分析 我们会发现啊

08:27.590 --> 08:31.030
我们这个页面中呢 虽然说有两块大的区域

08:31.430 --> 08:35.590
但是呢 并不是说我这两块大的区域必须要在一开始的时候

08:36.230 --> 08:37.430
就必须要夹载出来

08:38.470 --> 08:42.550
哪一个区域一开始必须要夹载出来呢 我们会发现只有这个区域

08:43.670 --> 08:46.550
只有这个区域 因为这个区域是一开始用户就看到的 对不对

08:47.110 --> 08:48.630
用户一开始就看到这个区域

08:49.270 --> 08:50.630
所以只有这个区域

08:51.190 --> 08:52.950
需要我们一开始就夹载出来

08:53.670 --> 08:54.550
好 我们来看一下吧

08:56.550 --> 08:57.190
到这边来

08:59.190 --> 08:59.670
刷新

09:00.630 --> 09:02.630
你看一开始是不是看到这个封面这个区域

09:03.270 --> 09:07.350
对不对 所以说我们只需要在一开始把这个区域夹载出来就完事了

09:08.230 --> 09:10.870
而这个区域呢 我们可以没有那么着急

09:11.430 --> 09:11.990
夹载

09:12.230 --> 09:13.190
它可以慢慢夹载

09:13.670 --> 09:16.550
所以这个区域呢 我希望可以让它进行延迟夹载

09:17.190 --> 09:19.030
因此呢 换句话说什么意思呢

09:19.510 --> 09:21.590
我的打包结果里边 实际上

09:22.150 --> 09:25.190
我一开始只需要夹载这一块打包结果

09:25.990 --> 09:27.990
我不需要夹载这一块打包结果

09:28.870 --> 09:31.590
明白的意思吧 这一块打包结果呢 我会慢慢夹载

09:32.230 --> 09:33.110
这就叫做分包

09:33.670 --> 09:35.110
把它分成两块DS

09:35.670 --> 09:36.710
好 接下来我们来看一下啊

09:37.830 --> 09:38.310
往下

09:39.350 --> 09:41.190
怎么来分包呢 其实非常简单

09:41.990 --> 09:43.670
我们看这个入口文件这里

09:44.070 --> 09:45.910
我这里导入了这个cover 说明啥

09:46.070 --> 09:47.110
说明一开始

09:47.990 --> 09:50.470
叫做静态一代 我们之前学过模块化 对吧

09:50.470 --> 09:52.870
这叫yes module的静态一代

09:53.590 --> 09:54.790
什么意思呢 表示

09:55.670 --> 09:57.750
一开始就需要

09:58.950 --> 10:00.070
就是表示

10:01.270 --> 10:10.070
该模块需要合并到主打包结果中

10:10.630 --> 10:11.750
就是说这个模块呢

10:11.750 --> 10:14.310
它一定会跟这个入口模块一起合并

10:14.310 --> 10:15.350
合并到打包结果

10:15.430 --> 10:16.230
就合并到这里面

10:16.950 --> 10:18.950
然后这一块呢 这个move这个模块呢

10:18.950 --> 10:21.270
我会发现你没有必要合并进来

10:21.270 --> 10:23.910
因为我一开始不着急去运行你的理责代吧

10:23.910 --> 10:25.510
我可以稍后再运行

10:25.510 --> 10:27.670
因此呢 我们可以使用动态的依赖

10:28.790 --> 10:30.150
可以使用这种方式

10:30.150 --> 10:31.270
这叫动态依赖

10:31.750 --> 10:33.990
对吧 Yes 16的动态依赖 我们是讲过的

10:34.550 --> 10:37.750
那么如果说未派可发现你使用了动态依赖

10:38.550 --> 10:40.550
这表示该模块

10:44.250 --> 10:45.770
可以动态加载

10:46.890 --> 10:48.090
那么最终的结果

10:50.250 --> 10:55.770
会导致该模块形成独立的包

10:58.440 --> 11:00.520
啥意思 我可以来运行一下打包迷你

11:00.520 --> 11:01.240
就知道了

11:06.150 --> 11:08.070
运行完了 你看是不是有两个节式呢

11:08.950 --> 11:10.870
一个节式是我们的主模块

11:10.870 --> 11:11.750
这个主模块里边

11:15.510 --> 11:18.310
没事啊 我们找一找那个Concelo的卡位

11:18.310 --> 11:19.430
所以就输出了卡位

11:19.910 --> 11:21.510
这个主模块就输出了卡位

11:21.510 --> 11:22.470
其他的不用管

11:22.470 --> 11:23.590
其他的加了一些辅助代

11:24.790 --> 11:27.110
然后另外一个节式呢

11:27.110 --> 11:28.870
这个节式呢它就负责输出模位

11:29.350 --> 11:30.630
所以是把分成两个包了

11:31.110 --> 11:32.630
那么就起到这么一个作用

11:32.630 --> 11:34.070
那么分成两个包之后呢

11:34.070 --> 11:35.430
我们来看一下它是怎么做的

11:36.070 --> 11:37.750
如果说我们加入了动态的导入代

11:38.230 --> 11:41.110
那么就会导致我们的静态的依赖

11:41.110 --> 11:43.110
就是主模块 入口模块是静态依赖

11:43.670 --> 11:45.030
依赖这个应这个设计的节式

11:45.030 --> 11:46.070
所以说这个

11:47.030 --> 11:49.030
这个和这个

11:49.030 --> 11:51.030
它们会最终形成一个打包结果

11:51.030 --> 11:53.030
就是我们的主打包结果

11:54.070 --> 11:55.030
然后呢这个玩意儿

11:55.030 --> 11:57.030
由于它是一个动态依赖

11:57.030 --> 11:59.030
你看这个虚线箭头

11:59.030 --> 12:01.030
说明它是一个动态依赖

12:01.030 --> 12:03.030
那么这个呢它会形成一个单独的包

12:03.030 --> 12:05.030
一样的意思吧

12:05.030 --> 12:07.030
那么这个单独的包有什么好处呢

12:07.030 --> 12:09.030
是不是会让我们的这个打包结果

12:09.030 --> 12:11.030
会变小一些

12:11.030 --> 12:13.030
那么我们来看一下它有什么好处往下走

12:13.030 --> 12:15.030
当我们的浏览器去请求服务器

12:15.030 --> 12:17.030
拿到页面的时候呢

12:17.030 --> 12:19.030
我们会页面上有一些节式引用

12:19.030 --> 12:21.030
那么首先它们会去引用什么呢

12:21.030 --> 12:23.030
引用这个打包结果1

12:23.030 --> 12:25.030
只需要引用这一块

12:25.030 --> 12:27.030
然后呢拿到一个打包结果1

12:27.030 --> 12:29.030
就这个东西

12:29.030 --> 12:31.030
然后呢去运行它

12:31.030 --> 12:33.030
在运行的过程中

12:33.030 --> 12:35.030
通过节式代码

12:35.030 --> 12:37.030
然后再动态的去加载打包结果2

12:37.030 --> 12:39.030
我一开始不着急加载力

12:39.030 --> 12:41.030
我一开始只要能够把

12:41.030 --> 12:43.030
一开始能够看得见的显示出来就ok了

12:43.030 --> 12:45.030
我慢慢再去加载打包结果2

12:45.030 --> 12:47.030
然后呢加载完了过后再去运行

12:47.030 --> 12:49.030
这样子呢虽然说我们

12:49.030 --> 12:51.030
整个加载的包的体积呢并没有什么变化

12:51.030 --> 12:53.030
但是呢我们

12:53.030 --> 12:55.030
整个用户的体验

12:55.030 --> 12:57.030
就提升了

12:57.030 --> 12:59.030
因为我们一开始加载的节式呢

12:59.030 --> 13:01.030
它的体积变小了

13:01.030 --> 13:03.030
就这么个意思

13:03.030 --> 13:05.030
其实对我们开发的影响的话

13:05.030 --> 13:07.030
就一个影响

13:07.030 --> 13:09.030
就是你把那些一开始用不到的模块

13:09.030 --> 13:11.030
用户看不见的东西呢

13:11.030 --> 13:13.030
我们动态移带

13:13.030 --> 13:15.030
然后呢让它变成一个分包的结果

13:15.030 --> 13:17.030
就这么一个意思

13:17.030 --> 13:19.030
对我们开发就这么点影响

13:19.030 --> 13:21.030
其他没啥

13:21.030 --> 13:23.030
我们就把做这么一个处理

13:23.030 --> 13:25.030
当然这个玩意呢我们以前讲过

13:25.030 --> 13:27.030
它反回的是一个什么反回的是一个Promise

13:27.030 --> 13:29.030
它是一部加载这个模块

13:29.030 --> 13:31.030
加载完了过后呢

13:31.030 --> 13:33.030
这个Promise完成的数据呢

13:33.030 --> 13:35.030
就是一个模块内容

13:35.030 --> 13:37.030
我们以后会用到的

13:37.030 --> 13:39.030
先这样子写

13:39.030 --> 13:41.030
看一下这个打包结果

13:41.030 --> 13:43.030
是不是分成了两个文件

13:43.030 --> 13:45.030
好ok咱们继续

13:45.030 --> 13:47.030
好接下来呢

13:47.030 --> 13:49.030
我们来做一个简单的练习

13:49.030 --> 13:51.030
比方说

13:51.030 --> 13:53.030
因为我们现在呢做的事情呢还比较简单

13:53.030 --> 13:55.030
我就是输出了两个东西

13:55.030 --> 13:57.030
一个是cover一个是movie

13:57.030 --> 13:59.030
接下来呢我们把它给它创建一些元素

13:59.030 --> 14:01.030
加入到页面里面去

14:01.030 --> 14:03.030
好咱们来试一下啊

14:03.030 --> 14:05.030
我们这里呢

14:05.030 --> 14:07.030
当然我们创建元素的话最好使用结块位

14:07.030 --> 14:10.980
看一下结块位

14:10.980 --> 14:12.980
好首先我们搞定这个cover模块吧

14:12.980 --> 14:14.980
那么这个cover模块里面

14:14.980 --> 14:16.980
我们保住结块位

14:16.980 --> 14:18.980
复杂结块位

14:18.980 --> 14:20.980
好接下来呢我们写一个函数

14:20.980 --> 14:22.980
比方说英烈者

14:22.980 --> 14:24.980
表示初始化

14:24.980 --> 14:26.980
这个函数呢就是负责创建一些元素

14:26.980 --> 14:28.980
给它加入到哪呢加入到这里面去

14:28.980 --> 14:30.980
对吧好接下来我们来

14:30.980 --> 14:32.980
再调用一下

14:32.980 --> 14:34.980
好随便加随便创建一个元素吧

14:34.980 --> 14:36.980
我们创建一个

14:37.980 --> 14:39.980
然后呢然后写上一个text

14:39.980 --> 14:41.980
一个文本比方说

14:41.980 --> 14:43.980
封面

14:43.980 --> 14:45.980
然后把它append

14:45.980 --> 14:46.980
2

14:46.980 --> 14:48.980
加入到哪呢加入到id为app的

14:48.980 --> 14:50.980
那个dv里面去

14:50.980 --> 14:52.980
就加入到这个dv里面去

14:52.980 --> 14:54.980
好咱们试一下啊看这个hg能不能出来

14:54.980 --> 14:56.980
让它射去

14:56.980 --> 15:00.940
打开

15:00.940 --> 15:02.940
你看hg出来了

15:02.940 --> 15:04.940
好咱们再来测试一下

15:04.940 --> 15:06.940
呃

15:06.940 --> 15:08.940
这什么的比方测试一下样式

15:08.940 --> 15:10.940
比方说要给它加个样式我要写个内样式

15:10.940 --> 15:12.940
那么写内样式的时候呢

15:12.940 --> 15:14.940
我强烈推荐

15:14.940 --> 15:15.940
大家使用

15:15.940 --> 15:17.940
CSS module

15:17.940 --> 15:19.940
这样子的避免内样式的冲突

15:19.940 --> 15:21.940
比方说我这个封面这一块有内样式对吧

15:21.940 --> 15:23.940
那么很简单我在这里边去建立一个

15:23.940 --> 15:26.940
index.module.ness

15:26.940 --> 15:28.940
或者是CSS也可以

15:28.940 --> 15:30.940
那么这里边我们就去写个内样式啊

15:30.940 --> 15:32.940
我们去写上内样式呢就写一个

15:32.940 --> 15:34.940
呃

15:35.940 --> 15:37.940
比方说改变颜色吧

15:37.940 --> 15:38.940
红色

15:38.940 --> 15:39.940
Color

15:39.940 --> 15:40.940
维销

15:40.940 --> 15:42.940
然后写这么一个内样式

15:42.940 --> 15:44.940
现在呢我们要给这个hg加上这个内样式

15:44.940 --> 15:45.940
那怎么加

15:45.940 --> 15:46.940
因为它是开启了模块化的对吧

15:46.940 --> 15:48.940
所以说呢我们就说要导入

15:48.940 --> 15:50.940
根据我们上节合学的东西

15:50.940 --> 15:53.940
导入index.module.ness

15:53.940 --> 15:56.940
然后呢通过这个模块化里面的

15:56.940 --> 15:58.940
ad class

15:58.940 --> 16:00.940
模块化里面的什么

16:00.940 --> 16:01.940
Rate

16:01.940 --> 16:03.940
那么这个Rate呢它就会对应

16:03.940 --> 16:05.940
打包结果里面的那个哈希值

16:05.940 --> 16:07.940
保存咱们来看一下

16:07.940 --> 16:09.940
变成红色了对吧

16:09.940 --> 16:13.500
好

16:13.500 --> 16:15.500
好 接下来看一下

16:15.500 --> 16:17.500
这边

16:17.500 --> 16:19.500
这边这个div里面是不是多了一个a1

16:19.500 --> 16:21.500
你看这个那样式这边点这样子

16:21.500 --> 16:23.500
这没问题吧

16:23.500 --> 16:25.500
那它有的时候呢我们可能会希望

16:25.500 --> 16:28.500
有一些全局的样式通用的

16:28.500 --> 16:30.500
就是你这个模块要用他也要用

16:30.500 --> 16:32.500
那么就是比方说

16:32.500 --> 16:34.500
把浏览器的一些

16:34.500 --> 16:36.500
默认样式给它重置了

16:36.500 --> 16:38.500
那么像这种样式呢我们就不

16:38.500 --> 16:40.500
不需要使用那个

16:40.500 --> 16:42.500
开启SS module了啊

16:42.500 --> 16:44.500
我们就给它写到这儿

16:44.500 --> 16:46.500
比方说给它写个Global

16:46.500 --> 16:48.500
div.ness

16:48.500 --> 16:50.500
那么这里边我就去除一些

16:50.500 --> 16:52.500
就做一些重置操作

16:52.500 --> 16:54.500
比方说我们经常做的

16:54.500 --> 16:56.500
pending 0, margin 0

16:56.500 --> 16:58.500
还包括什么给这个

16:58.500 --> 17:00.500
UL设置一个display

17:00.500 --> 17:02.500
然后呢再加上一个

17:02.500 --> 17:04.500
box sizing

17:04.500 --> 17:06.500
border box

17:06.500 --> 17:08.500
然后做一些简单的

17:08.500 --> 17:10.500
重置操作啊或者是再加一些什么呢

17:10.500 --> 17:12.500
再把a元素比较

17:12.500 --> 17:14.500
设置一个takes declaration

17:14.500 --> 17:16.500
达设为num

17:16.500 --> 17:18.500
达设为inherit

17:18.500 --> 17:20.500
做一些简单的

17:20.500 --> 17:22.500
就是做一些全局样式

17:22.500 --> 17:24.500
那么这个全局样式

17:24.500 --> 17:26.500
它会影响到所有的模块

17:26.500 --> 17:28.500
所以说呢我们一般来说

17:28.500 --> 17:30.500
不可模块里边

17:30.500 --> 17:32.500
保入全局样式

17:32.500 --> 17:34.500
global.ness

17:34.500 --> 17:36.500
你看这些

17:36.500 --> 17:38.500
margin pending

17:38.500 --> 17:40.500
是不是没了

17:40.500 --> 17:42.500
就做这么一些简单的事

17:42.500 --> 17:44.500
要学会这种操作啊

17:44.500 --> 17:46.500
大家跟着做一下

17:46.500 --> 17:48.500
把它做成这个样子

17:48.500 --> 17:50.500
好了没好那么接下来呢

17:50.500 --> 17:52.500
我就在真耳八经开始写这个代码

17:52.500 --> 17:54.500
我们在cover就封面这一块

17:54.500 --> 17:56.500
该做什么事情的其实非常简单

17:56.500 --> 17:58.500
有什么这个div占卷什么

17:58.500 --> 18:00.500
宽度百分之百

18:00.500 --> 18:02.500
高度呢就是一个试口的高度

18:02.500 --> 18:04.500
然后里面有一个video

18:04.500 --> 18:06.500
有一个audio mp3

18:06.500 --> 18:08.500
一个读mp4 一个读mp3

18:08.500 --> 18:10.500
好接下来试一下啊

18:10.500 --> 18:12.500
首先呢我在这里呢去创建一个div

18:12.500 --> 18:14.500
这个div呢

18:14.500 --> 18:16.500
我们给他一个内样

18:16.500 --> 18:18.500
给他一个内样式吧

18:18.500 --> 18:20.500
这个内样式呢我们把它取名为

18:20.500 --> 18:22.500
kantana

18:22.500 --> 18:24.500
当然同样的我们需要在这里边呢

18:24.500 --> 18:26.500
kantana

18:26.500 --> 18:28.500
这个名字里不用去担心宠命的问题

18:28.500 --> 18:30.500
因为它是开始了sason module

18:30.500 --> 18:32.500
它出来是一个哈希纸

18:32.500 --> 18:34.500
别的模块里面的样式

18:34.500 --> 18:36.500
它也可以用kantana

18:36.500 --> 18:38.500
不用担心宠命的问题

18:38.500 --> 18:40.500
而现在的样式呢由于没有宠命了

18:40.500 --> 18:42.500
所以说我们也不需要去嵌套了

18:42.500 --> 18:44.500
好这个kantana呢

18:44.500 --> 18:46.500
我们给他做一个简单的操作啊

18:46.500 --> 18:48.500
比如说我们这里

18:48.500 --> 18:50.500
高度呢给他设置为

18:50.500 --> 18:52.500
100vh

18:52.500 --> 18:54.500
给他设置个背景

18:54.500 --> 18:56.500
看一下是不是

18:56.500 --> 18:58.500
整个试口的

18:58.500 --> 19:00.500
说到账版的对不对

19:00.500 --> 19:02.500
没问题吧好那么这个div就

19:02.500 --> 19:04.500
差不多设好了

19:04.500 --> 19:06.500
设好这个div过后了这个div里面说

19:06.500 --> 19:08.500
要加两个元素啊一个是video

19:08.500 --> 19:10.500
元素一个是audio元素好

19:10.500 --> 19:12.500
那我们来加第一个呢是video

19:12.500 --> 19:14.500
元素

19:14.500 --> 19:16.500
video是一个视频

19:16.500 --> 19:18.500
这个视频呢我们给他

19:18.500 --> 19:20.500
sure that append to

19:20.500 --> 19:22.500
加到哪呢加到这个div里面去

19:22.500 --> 19:24.500
所以说我们用变量宝

19:24.500 --> 19:26.500
得到一下

19:26.500 --> 19:28.500
我们把这个视频元素呢

19:28.500 --> 19:30.500
加到这个div里面去

19:30.500 --> 19:32.500
有没有呢我们来看一下

19:32.500 --> 19:34.500
elements里面

19:34.500 --> 19:36.500
所以有个div里面说有个video

19:36.500 --> 19:38.500
对吧好那么这个video呢

19:38.500 --> 19:40.500
我们需要给他设置一个src

19:40.500 --> 19:42.500
地址就是他到底链接哪个视频

19:42.500 --> 19:44.500
那么这个视频呢在哪呢

19:44.500 --> 19:46.500
我们这里呢桌面上有个素材啊

19:46.500 --> 19:48.500
就是一个mp是一个mp3

19:48.500 --> 19:50.500
你把这两个素材呢

19:50.500 --> 19:52.500
你把这两个素材呢

19:52.500 --> 19:54.500
放到src目楼里面去

19:54.500 --> 19:56.500
比方说因为我们只有在

19:56.500 --> 19:58.500
咖啡里面用到所以说我们可以把直接放到

19:58.500 --> 20:00.500
咖啡里面因为只有这个模块用到

20:00.500 --> 20:02.500
当然也有的时候呢我们也可以

20:02.500 --> 20:04.500
在这里新建个文件夹

20:04.500 --> 20:06.500
这些都无所谓啊都是一些习惯

20:06.500 --> 20:08.500
习惯性的操作比方这里

20:08.500 --> 20:10.500
我们建个文件夹是二set

20:10.500 --> 20:12.500
表示资源一些静态资源像什么

20:12.500 --> 20:14.500
mp3啊自体文件啊

20:14.500 --> 20:16.500
mp4啊图片啊我们

20:16.500 --> 20:18.500
通通放到这当然也可以放到

20:18.500 --> 20:20.500
具体的模块文件夹内图都可以啊

20:20.500 --> 20:22.500
无所谓的反正最终打包结果里面

20:22.500 --> 20:24.500
这些目楼全部要变对吧那么这里

20:24.500 --> 20:26.500
不要我们给他扔过来吧

20:26.500 --> 20:28.500
扔到这个二set目楼里面去

20:28.500 --> 20:30.500
好接下来我们在

20:30.500 --> 20:32.500
这里呢得要设置一个src

20:32.500 --> 20:34.500
地址src

20:34.500 --> 20:36.500
地址是什么呢

20:36.500 --> 20:38.500
是上级目楼

20:38.500 --> 20:40.500
二set里面的什么

20:40.500 --> 20:42.500
上级目楼

20:42.500 --> 20:44.500
二set里面的什么mv

20:44.500 --> 20:46.500
mp4

20:46.500 --> 20:48.500
我请问大家这样子设置行不行

20:48.500 --> 20:50.500
你们已经看到结果了

20:50.500 --> 20:52.500
肯定是不行的

20:52.500 --> 20:54.500
为啥不行呢

20:54.500 --> 20:56.500
你看这个src地址

20:56.500 --> 20:58.500
它是连接这样的地址

20:58.500 --> 21:00.500
不是对了的吗

21:00.500 --> 21:02.500
你觉得对了的吗

21:02.500 --> 21:04.500
我们上级课说过的

21:04.500 --> 21:06.500
这个网要打包出来的还是这个地址吗

21:06.500 --> 21:08.500
文件没那些都全都变了对吧

21:08.500 --> 21:10.500
所以说不能这样去做啊

21:10.500 --> 21:12.500
应该怎么做按照我们上级课所学

21:12.500 --> 21:14.500
其实对我们开发就这么一些影响

21:14.500 --> 21:17.500
应该是倒入一个什么mv

21:17.500 --> 21:19.500
视频的video

21:19.500 --> 21:21.500
video URL

21:21.500 --> 21:22.500
这个名字随便取

21:22.500 --> 21:23.500
然后到这边

21:23.500 --> 21:24.500
点点写纲

21:24.500 --> 21:25.500
二set

21:25.500 --> 21:27.500
mvmp4

21:27.500 --> 21:28.500
对吧

21:28.500 --> 21:29.500
当然也可以用at

21:29.500 --> 21:30.500
也可以

21:30.500 --> 21:31.500
点名

21:31.500 --> 21:33.500
好我们这里呢把这个东西放在这

21:33.500 --> 21:35.500
这才是它最终打包结果的

21:35.500 --> 21:37.500
真实地址

21:37.500 --> 21:38.500
好保存

21:38.500 --> 21:40.500
你看是不是出来了

21:40.500 --> 21:41.500
看一下

21:41.500 --> 21:43.500
video是不是出来了

21:43.500 --> 21:45.500
那么接下来我们要做的事情就是

21:45.500 --> 21:47.500
给这个video去设置一些样式

21:47.500 --> 21:50.500
同样的道理我们在这里边

21:50.500 --> 21:52.500
给它设置一个内样式

21:52.500 --> 21:54.500
video

21:56.500 --> 21:59.500
然后这边我们去加上内样式

21:59.500 --> 22:01.500
add class

22:01.500 --> 22:03.500
styles

22:03.500 --> 22:04.500
video

22:04.500 --> 22:05.500
这种开发方式呢

22:05.500 --> 22:07.500
大家可能一开始不太适应啊

22:07.500 --> 22:08.500
慢慢去适应

22:08.500 --> 22:10.500
好接下来我们在这边去设置一下样式

22:10.500 --> 22:13.500
它的样式呢其实我就把它做成一个绝对定位

22:13.500 --> 22:16.500
或者是也难的绝对定位了

22:16.500 --> 22:18.500
干脆就直接宽

22:18.500 --> 22:20.500
display block

22:20.500 --> 22:21.500
宽高百分之百

22:21.500 --> 22:22.500
就完了

22:22.500 --> 22:23.500
对不对

22:23.500 --> 22:24.500
宽度

22:24.500 --> 22:26.500
高度百分之百

22:26.500 --> 22:28.500
好百分之百过后了

22:28.500 --> 22:30.500
其实它的元素已经占满了

22:30.500 --> 22:32.500
这是纯粹的样式问题的

22:32.500 --> 22:33.500
它的元素你看

22:33.500 --> 22:34.500
整个元素是占满的

22:34.500 --> 22:35.500
但是这个元素呢

22:35.500 --> 22:36.500
它的视频呢

22:36.500 --> 22:37.500
它没有占满

22:37.500 --> 22:38.500
那么怎么办呢

22:38.500 --> 22:40.500
我们可以利用这个objects feed

22:40.500 --> 22:41.500
对啊学过的

22:41.500 --> 22:42.500
objects feed

22:42.500 --> 22:43.500
它设置为cover

22:43.500 --> 22:44.500
对对

22:44.500 --> 22:45.500
像图片啊

22:45.500 --> 22:47.500
像这个视频啊都可以这样做

22:47.500 --> 22:49.500
然后让它里边的内容

22:49.500 --> 22:50.500
无论是图片也好

22:50.500 --> 22:51.500
还是这个视频也好

22:51.500 --> 22:53.500
把整个元素填充满

22:56.500 --> 22:57.500
就填充满了

22:57.500 --> 22:59.500
而且不会影响到它的比例

22:59.500 --> 23:01.500
不会导致比例失调

23:01.500 --> 23:03.500
这是这么一个做法

23:03.500 --> 23:04.500
videos就加进去了

23:04.500 --> 23:06.500
好加进去了过后呢

23:06.500 --> 23:07.500
我们现在还要去做一些事啊

23:07.500 --> 23:08.500
就是

23:08.500 --> 23:10.500
让这个video播放起来

23:10.500 --> 23:11.500
自动播放

23:11.500 --> 23:13.500
所以我们去给它加上一个属性

23:13.500 --> 23:15.500
叫做out to play

23:15.500 --> 23:16.500
把稍微q

23:16.500 --> 23:17.500
保存

23:17.500 --> 23:19.500
你还稍微自动播放了

23:19.500 --> 23:21.500
然后播放完了过后呢

23:21.500 --> 23:23.500
还要让它循环播放

23:23.500 --> 23:25.500
不然它就会停止

23:25.500 --> 23:27.500
所以我们再加个属性

23:27.500 --> 23:29.500
叫做loop

23:29.500 --> 23:30.500
q

23:31.500 --> 23:32.500
好再看一下啊

23:33.500 --> 23:41.370
你看说就完事了

23:41.370 --> 23:43.370
好那么这个video元素呢

23:43.370 --> 23:45.370
就ok了

23:45.370 --> 23:47.370
好接下来我们再往下走

23:47.370 --> 23:49.370
再创建一个audio元素

23:49.370 --> 23:51.370
道理呢是一样的

23:51.370 --> 23:53.370
我们这里呢直接来

23:53.370 --> 23:55.370
导入这个audio URL

23:55.370 --> 23:57.370
就是个音频 mp3

23:57.370 --> 24:00.370
而set下面的 music mp3

24:00.370 --> 24:03.370
把个audio呢放进去

24:03.370 --> 24:05.370
这里创建一个audio元素

24:06.370 --> 24:08.370
然后src地址是自动播放

24:08.370 --> 24:10.370
然后呢循环

24:10.370 --> 24:11.370
循环播放

24:11.370 --> 24:12.370
添加内样式

24:12.370 --> 24:14.370
内样式的话它不需要内样式啊

24:14.370 --> 24:15.370
音频它不需要内样式

24:15.370 --> 24:16.370
反正就看不见的

24:16.370 --> 24:18.370
加进去完事了

24:18.370 --> 24:20.370
好保存

24:20.370 --> 24:23.370
你看这就有音乐了

24:23.370 --> 24:25.370
没问题吧

24:25.370 --> 24:27.370
好同学们做一做

24:27.370 --> 24:28.370
把它做成这个样子

24:28.370 --> 24:29.370
应该还是很简单的

24:29.370 --> 24:31.370
就是我们现在跟之前的做法呢

24:31.370 --> 24:32.370
无非区别就在

24:32.370 --> 24:34.370
之前直接在atm里面写

24:34.370 --> 24:36.370
我们要全部在介石里面写

24:36.370 --> 24:38.370
虽然说现在写现在比较繁琐

24:38.370 --> 24:39.370
将来有了框架之后呢

24:39.370 --> 24:41.370
这一块就变得更加简单了

24:41.370 --> 24:45.320
好说一说

24:45.320 --> 24:47.320
好了没

24:47.320 --> 24:49.320
好那么接着来啊

24:49.320 --> 24:52.320
现在呢我们

24:52.320 --> 24:54.320
我把这个还是注释掉吧

24:54.320 --> 24:55.320
我怕这个录出来

24:55.320 --> 24:57.320
也听不见我的声音了

24:57.320 --> 24:59.320
好我这里还有一些小的细节

24:59.320 --> 25:02.320
比方说像这我往下滑的时候

25:02.320 --> 25:04.320
滑到一定程度之后

25:04.320 --> 25:06.320
那么它的音频就暂停了

25:06.320 --> 25:08.320
视频也会暂停

25:08.320 --> 25:10.320
好往上滑上滑上去的时候呢

25:10.320 --> 25:12.320
音频又播放视频又播放

25:12.320 --> 25:14.320
有这么一个效果啊

25:14.320 --> 25:16.320
看看这边

25:16.320 --> 25:18.320
这边一开始为什么没有声音呢

25:18.320 --> 25:19.320
是因为现在谷歌流量

25:19.320 --> 25:21.320
现在有一些线组

25:21.320 --> 25:23.320
它不允许在用户点击啊

25:23.320 --> 25:26.320
各种操作之前自动播放声音

25:26.320 --> 25:29.320
所以说我需要再点击一下

25:29.320 --> 25:31.320
滑动一下有些操作之后呢

25:31.320 --> 25:32.320
才能有声音

25:32.320 --> 25:34.320
这是谷歌流量系的线组

25:34.320 --> 25:37.950
好那么这边来

25:37.950 --> 25:38.950
回到这儿

25:38.950 --> 25:40.950
现在呢我们要做这么一个操作

25:40.950 --> 25:42.950
就是要监听滚动条

25:42.950 --> 25:45.950
往下滚动了滚动到一定程度过后呢

25:45.950 --> 25:47.950
视频暂停音频暂停

25:47.950 --> 25:49.950
好往上滚动回来的时候呢

25:49.950 --> 25:51.950
视频和音频又继续播放

25:51.950 --> 25:53.950
就这么简单

25:53.950 --> 25:55.950
来吧

25:55.950 --> 25:56.950
是不是我们要注册时间

25:56.950 --> 25:57.950
注册什么时间

25:57.950 --> 25:59.950
是不是Windows

25:59.950 --> 26:01.950
Windows里边有什么时间

26:02.950 --> 26:04.950
Scroll滚动时间

26:05.950 --> 26:07.950
当滚动条滚动的时候

26:07.950 --> 26:08.950
我们要干嘛呀

26:08.950 --> 26:10.950
是不是获得滚动的高度啊

26:10.950 --> 26:11.950
你现在滚动了多少

26:11.950 --> 26:13.950
对吧我这里的

26:13.950 --> 26:15.950
为了让我们为了便于看清楚

26:15.950 --> 26:17.950
我在index里边呢去

26:17.950 --> 26:19.950
临时的啊往下边加一些那种

26:19.950 --> 26:21.950
比方说加上

26:21.950 --> 26:23.950
3000

26:23.950 --> 26:25.950
协电那种

26:25.950 --> 26:27.950
保证下面可以往下滚动

26:27.950 --> 26:29.950
好接下来我们回到这边来

26:29.950 --> 26:31.950
当我们滚动的时候呢

26:31.950 --> 26:33.950
监听什么监听Windows

26:33.950 --> 26:35.950
监听这个Document

26:35.950 --> 26:37.950
Document,Element

26:37.950 --> 26:39.950
Scroll

26:39.950 --> 26:41.950
对吧

26:41.950 --> 26:43.950
是不是拿到滚动的高度

26:47.950 --> 26:51.900
输出一下啊

26:51.900 --> 26:57.840
你看是不是拿到滚动高度

26:57.840 --> 26:59.840
那么滚动高度滚动到

26:59.840 --> 27:01.840
什么时候我们要播放音频

27:01.840 --> 27:03.840
什么时候要暂停音频呢

27:03.840 --> 27:05.840
我们只需要判断

27:05.840 --> 27:07.840
它的滚动高度是不是

27:07.840 --> 27:09.840
大于了一个四口高度

27:09.840 --> 27:11.840
就是往上滚动了一个四口高度

27:11.840 --> 27:13.840
一看滚动到什么滚动了

27:13.840 --> 27:15.840
一整个四口就往上滚动了

27:15.840 --> 27:17.840
再往下的话

27:17.840 --> 27:19.840
这个数字就越来越大

27:19.840 --> 27:21.840
它只要大于的等于了

27:21.840 --> 27:23.840
这个四口高度那么就暂停

27:23.840 --> 27:25.840
那么我们怎么知道四口高度呢

27:25.840 --> 27:27.840
也很简单对吧

27:27.840 --> 27:29.840
这是一些技术知识

27:29.840 --> 27:31.840
叫做WheelV

27:31.840 --> 27:33.840
WheelV

27:33.840 --> 27:35.840
WheelV

27:35.840 --> 27:37.840
好 判断一下

27:37.840 --> 27:39.840
如果说滚动高度

27:39.840 --> 27:41.840
大于等于了四口高度

27:41.840 --> 27:43.840
我们应该怎么样呢

27:43.840 --> 27:45.840
我们应该暂停播放

27:45.840 --> 27:47.840
Ls呢

27:47.840 --> 27:49.840
开始

27:49.840 --> 27:51.840
播放

27:51.840 --> 27:53.840
诶 播放

27:53.840 --> 27:55.840
好 咱们来试一下

27:55.840 --> 27:59.730
还是加上

27:59.730 --> 28:01.730
一开始是播放的

28:01.730 --> 28:03.730
我现在滚动

28:03.730 --> 28:05.730
你看 目前是开始播放

28:05.730 --> 28:07.730
对吧

28:07.730 --> 28:09.730
现在是不是暂停播放

28:09.730 --> 28:11.730
对不对 然后回过来

28:11.730 --> 28:13.730
是不是又开始播放

28:13.730 --> 28:15.730
对不对 逻辑没问题吧

28:15.730 --> 28:17.730
那么接下来呢

28:17.730 --> 28:23.540
我们就把开始播放和暂停播放

28:23.540 --> 28:25.540
实现就完成了

28:25.540 --> 28:27.540
好 暂停播放的话

28:27.540 --> 28:29.540
其实无非就是拿到这个元素

28:29.540 --> 28:31.540
Vidio

28:31.540 --> 28:33.540
还有这个是Audio

28:33.540 --> 28:35.540
拿到这两个元素

28:35.540 --> 28:37.540
暂停播放的话

28:37.540 --> 28:39.540
我们就是Vidio

28:39.540 --> 28:41.540
注意这是Jquery元素

28:41.540 --> 28:43.540
Jquery元素

28:43.540 --> 28:45.540
找到它的Dome元素

28:45.540 --> 28:47.540
调到它的Pose方法

28:47.540 --> 28:49.540
暂停

28:49.540 --> 28:51.540
然后Audio元素呢也是一样

28:51.540 --> 28:53.540
找到它的Dome元素

28:53.540 --> 28:55.540
Dome元素里面的方法叫Pose

28:55.540 --> 28:57.540
暂停

28:57.540 --> 28:59.540
好 这边开始播放的也是一样

28:59.540 --> 29:03.940
开始播放

29:04.940 --> 29:09.850
这里是Play

29:09.850 --> 29:11.850
好了 试一下

29:11.850 --> 29:12.850
好 顺

29:12.850 --> 29:20.480
没暂停

29:20.480 --> 29:21.480
输出一下

29:21.480 --> 29:23.480
我看一下有没有报处

29:24.480 --> 29:26.480
Audio is not defined

29:27.480 --> 29:29.480
哦 写错了

29:31.480 --> 29:36.710
还是没暂停

29:37.710 --> 29:39.710
Objects is not defined

29:39.710 --> 29:41.710
看一下到底是哪里有问题

29:42.710 --> 29:45.710
这里是怎么输出的Objects

29:46.710 --> 29:47.710
好 再来

29:47.710 --> 29:49.710
你看下面是暂停播放

29:49.710 --> 29:50.710
回到上面

29:50.710 --> 29:51.710
继续播放

29:51.710 --> 29:52.710
暂停

29:53.710 --> 29:59.220
所以没问题了

29:59.220 --> 30:00.220
对吧

30:00.220 --> 30:02.220
最后我给它中间加一个标题

30:02.220 --> 30:04.220
因为上面有一个标题

30:04.220 --> 30:06.220
把标题加上

30:07.220 --> 30:08.220
好 来吧

30:08.220 --> 30:10.220
加标题的话就很简单了

30:10.220 --> 30:12.220
我这边就直接弄个标题玩算

30:12.220 --> 30:15.220
加上一个A7元素

30:17.790 --> 30:19.790
所以不用注射了

30:19.790 --> 30:21.790
因为我往下滑就暂停了

30:21.790 --> 30:22.790
好 加上一个A7元素

30:22.790 --> 30:24.790
然后给它设置一个文本

30:24.790 --> 30:26.790
豆瓣电影

30:26.790 --> 30:27.790
电影

30:27.790 --> 30:30.790
然后把它Append to

30:30.790 --> 30:31.790
加到哪儿呢

30:31.790 --> 30:32.790
加到这个

30:32.790 --> 30:34.790
卡片那里边去

30:34.790 --> 30:36.790
好 保存

30:37.790 --> 30:39.790
你看 加了个豆瓣电影

30:39.790 --> 30:40.790
只不过呢

30:40.790 --> 30:41.790
因为它被一个视频V6元素

30:41.790 --> 30:42.790
挤到下面去了

30:42.790 --> 30:44.790
所以我把它设为绝对定位

30:44.790 --> 30:45.790
这个简单吧

30:45.790 --> 30:46.790
而且绝对定位居中

30:46.790 --> 30:48.790
那么这个写到这呢

30:48.790 --> 30:49.790
你可能会想

30:49.790 --> 30:50.790
我说以后

30:50.790 --> 30:52.790
我其他地方也要用到

30:52.790 --> 30:53.790
这个绝对定位居中

30:53.790 --> 30:55.790
虽然说我这个项目里边没有

30:55.790 --> 30:56.790
那么这一块绝对定位居中

30:56.790 --> 30:57.790
因为是比较常见的

30:57.790 --> 30:58.790
对不对

30:58.790 --> 30:59.790
所以说有的时候

30:59.790 --> 31:01.790
别的地方也可能会用到

31:01.790 --> 31:02.790
绝对定位居中

31:02.790 --> 31:03.790
那我们怎么办呢

31:03.790 --> 31:05.790
我们就可以利用Lens里面的混合

31:05.790 --> 31:06.790
我们可以比方说

31:06.790 --> 31:08.790
我们在SRC里边建立一个

31:08.790 --> 31:11.790
叫CommonLens

31:11.790 --> 31:12.790
表示什么

31:12.790 --> 31:16.790
表示一些公共的样式

31:16.790 --> 31:17.790
做一些混合

31:17.790 --> 31:18.790
或者是一些边量

31:18.790 --> 31:19.790
公共的边量

31:19.790 --> 31:20.790
都会在写到这里边

31:20.790 --> 31:21.790
比较多

31:21.790 --> 31:22.790
我们这里怎么写呢

31:22.790 --> 31:23.790
就可以写个混合吧

31:23.790 --> 31:24.790
叫做ABS Center

31:24.790 --> 31:25.790
我们之前也写过

31:25.790 --> 31:26.790
对吧

31:26.790 --> 31:27.790
写个混合

31:27.790 --> 31:29.790
我们可能有绝对定位居中

31:29.790 --> 31:31.790
也有可能有固定定位居中

31:31.790 --> 31:32.790
那么这里呢

31:32.790 --> 31:33.790
我给大家进入一个参数

31:33.790 --> 31:35.790
摸认值那是绝对定位

31:35.790 --> 31:36.790
Absence

31:36.790 --> 31:38.790
绝对定位

31:38.790 --> 31:39.790
然后呢

31:39.790 --> 31:40.790
在这里边呢

31:41.790 --> 31:42.790
Type

31:44.790 --> 31:45.790
摸认值的定位

31:45.790 --> 31:47.790
有可能是固定定位

31:47.790 --> 31:48.790
然后Left

31:48.790 --> 31:49.790
50%

31:49.790 --> 31:51.790
Top 50%

31:51.790 --> 31:53.790
然后加上一个Transform

31:53.790 --> 31:54.790
Transnate

31:54.790 --> 31:55.790
Full 50%

31:55.790 --> 31:56.790
Full 50%

31:56.790 --> 31:57.790
对吧

31:57.790 --> 31:59.790
那么就设置到这么一个混合

31:59.790 --> 32:00.790
那么假设这个混合

32:00.790 --> 32:02.790
在这边怎么去用呢

32:02.790 --> 32:03.790
也很简单

32:03.790 --> 32:04.790
我这里可以通过

32:04.790 --> 32:05.790
这种方式

32:05.790 --> 32:06.790
就是用那个

32:07.790 --> 32:09.790
CSS的方式来导入它

32:10.790 --> 32:12.790
导入这个混合和CSS

32:12.790 --> 32:13.790
对不对

32:13.790 --> 32:14.790
Common

32:14.790 --> 32:15.790
Gearless

32:15.790 --> 32:16.790
那么就可以用里面的混合了

32:16.790 --> 32:17.790
不要弄我这里

32:17.790 --> 32:18.790
给它加上一个Title

32:18.790 --> 32:20.790
这边有个内央式

32:20.790 --> 32:21.790
给它加一个内央式

32:21.790 --> 32:22.790
ADD class

32:22.790 --> 32:23.790
Styles

32:23.790 --> 32:24.790
Title

32:25.790 --> 32:26.790
内央式

32:26.790 --> 32:27.790
Title

32:27.790 --> 32:28.790
那么这边

32:28.790 --> 32:29.790
我给它写上一个Title

32:29.790 --> 32:30.790
这边我们就可以使用它的混合

32:30.790 --> 32:31.790
ABS Center

32:31.790 --> 32:32.790
对吧

32:32.790 --> 32:33.790
那么就相当于是

32:33.790 --> 32:35.790
把这个混合里面的东西呢

32:35.790 --> 32:36.790
直接copy

32:36.790 --> 32:38.790
复制粘贴过来

32:38.790 --> 32:39.790
好 保存

32:40.790 --> 32:41.790
你看

32:41.790 --> 32:42.790
就举动了

32:42.790 --> 32:43.790
那么我们再去设置一下

32:43.790 --> 32:45.790
它的一些额外的属性

32:46.790 --> 32:47.790
当然我如果说

32:47.790 --> 32:48.790
需要它固定定位举动的话

32:48.790 --> 32:49.790
我就给它传Fix

32:49.790 --> 32:51.790
这样它就固定定位了

32:52.790 --> 32:54.790
对吧 以后就非常方便了

32:54.790 --> 32:55.790
尽管我们这个项目里面

32:55.790 --> 32:56.790
没有

32:57.790 --> 32:58.790
没有这些

32:58.790 --> 32:59.790
没有其他的觉得定位

32:59.790 --> 33:01.790
但是我们可以考虑到这一点

33:03.790 --> 33:04.790
还是把这个

33:04.790 --> 33:05.790
注释一下吧

33:05.790 --> 33:07.790
还有声音

33:14.140 --> 33:15.140
接下来我们

33:15.140 --> 33:17.140
继续设置一下别的样式

33:17.140 --> 33:18.140
首先是它的文本颜色

33:18.140 --> 33:20.140
看一下这边的文本颜色

33:21.140 --> 33:22.140
我看一下这边

33:22.140 --> 33:23.140
文本颜色

33:23.140 --> 33:24.140
复制一下

33:26.140 --> 33:27.140
这边给它设置一下

33:27.140 --> 33:28.140
这个文本颜色

33:28.140 --> 33:29.140
因为这个文本颜色

33:29.140 --> 33:30.140
好像没有别的地方重复

33:30.140 --> 33:32.140
我就直接写死了

33:32.140 --> 33:34.140
你说我们学校的内饰过后

33:34.140 --> 33:35.140
你不用去纠结

33:35.140 --> 33:38.140
我一定要用内饰里面的语法

33:38.140 --> 33:39.140
你不是找麻烦吗

33:39.140 --> 33:40.140
能用就用

33:40.140 --> 33:41.140
没有什么特别的

33:41.140 --> 33:42.140
就不需要用

33:42.140 --> 33:44.140
传统的声音也是可以解决

33:45.140 --> 33:47.140
然后把自己颜色大一点

33:50.140 --> 33:52.140
文本颜色开一点

33:53.140 --> 33:54.140
文字之间的距离

33:54.140 --> 33:56.140
给它设置一个三色相处

33:58.140 --> 33:59.140
再多一点

33:59.140 --> 34:00.140
七个相处

34:02.140 --> 34:04.140
再给它设置一个

34:04.140 --> 34:05.140
你看这边

34:06.140 --> 34:07.140
文字是多大了

34:07.140 --> 34:09.140
好像还要大一点

34:10.140 --> 34:12.140
这个要设置大一点

34:12.140 --> 34:13.140
五个相处

34:13.140 --> 34:14.140
五页

34:15.140 --> 34:16.140
也差不多

34:17.140 --> 34:19.140
再去设置一下

34:19.140 --> 34:21.140
它的

34:21.140 --> 34:23.140
文本颜色的影影

34:23.140 --> 34:24.140
有个发光的效果

34:25.140 --> 34:27.140
没有偏移

34:27.140 --> 34:29.140
然后直接给上一个

34:29.140 --> 34:30.140
三个相处

34:30.140 --> 34:31.140
模糊程度

34:31.140 --> 34:33.140
然后给上一个

34:33.140 --> 34:34.140
半透明的白色

34:34.140 --> 34:36.140
白色

34:37.140 --> 34:38.140
二五

34:38.140 --> 34:39.140
二五

34:39.140 --> 34:40.140
然后呢

34:40.140 --> 34:41.140
零点五

34:42.140 --> 34:43.140
给上一个

34:43.140 --> 34:44.140
对

34:44.140 --> 34:45.140
这么一个文字影印

34:45.140 --> 34:46.140
其他就没啥了

34:46.140 --> 34:47.140
别人的话

34:47.140 --> 34:48.140
再给它设置大一点

34:48.140 --> 34:49.140
比方说

34:49.140 --> 34:51.140
给它设置一个

34:52.140 --> 34:53.140
一页

34:54.140 --> 34:55.140
这个也太大了

34:56.140 --> 34:57.140
十

34:59.140 --> 35:00.140
就这样吧

35:00.140 --> 35:01.140
无所谓

35:01.140 --> 35:02.140
我们不用去做的那么精确

35:02.140 --> 35:03.140
好了

35:03.140 --> 35:05.140
那么再把这个东西取消出事

35:06.140 --> 35:08.140
你看封面这一块是不是做完了

35:08.140 --> 35:10.140
就已经做完了

35:11.140 --> 35:12.140
好

35:12.140 --> 35:13.140
同学们

35:13.140 --> 35:14.140
理解这一块代码

35:14.140 --> 35:15.140
然后呢

35:15.140 --> 35:16.140
暂停视频

35:16.140 --> 35:18.140
把代码写到这一块

35:18.140 --> 35:20.580
好

35:20.580 --> 35:21.580
你们呢

35:21.580 --> 35:22.580
好了没

35:22.580 --> 35:23.580
好的话

35:23.580 --> 35:24.580
我们就接着往下做了

35:25.580 --> 35:26.580
下边呢

35:26.580 --> 35:27.580
我们开始做

35:27.580 --> 35:28.580
下面的电影模块了

35:28.580 --> 35:29.580
然后就把这个

35:29.580 --> 35:30.580
页面中的

35:30.580 --> 35:32.580
这些东西给它删掉了

35:33.580 --> 35:34.580
删掉

35:35.580 --> 35:36.580
好嘞

35:37.580 --> 35:38.580
然后呢

35:38.580 --> 35:39.580
为了避免封面干扰

35:39.580 --> 35:40.580
我可以非常简单的

35:40.580 --> 35:42.580
把这个东西给它注释掉

35:42.580 --> 35:43.580
我先不着急

35:43.580 --> 35:44.580
加载封面

35:44.580 --> 35:45.580
因为这两块东西是独立的

35:45.580 --> 35:46.580
对吧

35:46.580 --> 35:47.580
我就先把这个电影模块写完

35:47.580 --> 35:49.580
然后再把这个封面加上就完了

35:49.580 --> 35:50.580
非常简单

35:50.580 --> 35:51.580
我先把它注释掉

35:52.580 --> 35:53.580
做电影模块的话

35:53.580 --> 35:54.580
这里边会有一个东西

35:54.580 --> 35:56.580
就是API

35:56.580 --> 35:57.580
所以说呢

35:57.580 --> 35:58.580
我们通常情况下呢

35:58.580 --> 35:59.580
在我们的

35:59.580 --> 36:00.580
原码目录里边

36:00.580 --> 36:01.580
会建立一个文念夹

36:01.580 --> 36:02.580
其实像这节课呢

36:02.580 --> 36:04.580
你不仅仅可以学习这个效果

36:04.580 --> 36:05.580
怎么去开发

36:05.580 --> 36:06.580
还可以学习到

36:06.580 --> 36:08.580
还有一些新的知识

36:08.580 --> 36:10.580
还有一些我们的开发习惯

36:10.580 --> 36:11.580
所以我们这个

36:11.580 --> 36:13.580
这节课的内容还是蛮丰富的

36:14.580 --> 36:15.580
不怕

36:15.580 --> 36:16.580
我们今天就一天的时间

36:16.580 --> 36:17.580
一定能搞定的

36:17.580 --> 36:19.580
我讲的这么详细

36:20.580 --> 36:22.580
写个API这么一个文件夹

36:22.580 --> 36:24.580
然后新建一些文件

36:24.580 --> 36:25.580
比方说我跟电影的请求呢

36:25.580 --> 36:27.580
我就给他去做一个

36:27.580 --> 36:28.580
Movie.js

36:28.580 --> 36:30.580
如果说我将来还有什么新闻呢

36:30.580 --> 36:32.580
要建立一个news.js

36:32.580 --> 36:33.580
就这里边来就去专门

36:33.580 --> 36:34.580
去做一些远程的请求

36:34.580 --> 36:36.580
这是我们通常的做法

36:36.580 --> 36:37.580
做一些封装

36:37.580 --> 36:38.580
然后呢

36:38.580 --> 36:40.580
我需要去安装一个模块

36:40.580 --> 36:41.580
这个模块呢

36:41.580 --> 36:42.580
是你们学习过的

36:42.580 --> 36:44.580
专门来做请求的模块

36:44.580 --> 36:46.580
叫做Axios

36:46.580 --> 36:48.580
安装一下

36:48.580 --> 36:49.580
你看

36:49.580 --> 36:50.580
我们现在使用第三方库

36:50.580 --> 36:51.580
是不是特别方便

36:51.580 --> 36:52.580
注意啊

36:52.580 --> 36:53.580
你安装第三方库的时候

36:53.580 --> 36:54.580
你需要停止

36:54.580 --> 36:57.580
停止我们的这个开发服务器

36:58.580 --> 37:00.580
重新运行

37:00.580 --> 37:01.580
好

37:01.580 --> 37:02.580
那么接下来

37:02.580 --> 37:04.580
让我们来写这个模块

37:05.580 --> 37:07.580
导出一个方形

37:08.580 --> 37:09.580
因为我们这个

37:09.580 --> 37:11.580
这个封装的

37:11.580 --> 37:12.580
就是请求方法

37:12.580 --> 37:13.580
我们需要给别人使用

37:13.580 --> 37:15.580
所以说我们需要导出

37:15.580 --> 37:16.580
导出一个方形

37:16.580 --> 37:17.580
我们这边呢

37:17.580 --> 37:18.580
导出一个名字叫做

37:18.580 --> 37:20.580
Gasmovies的方形

37:21.580 --> 37:22.580
我们来看一下我们的接口

37:23.580 --> 37:24.580
这个接口里面呢

37:24.580 --> 37:25.580
它详细产出了

37:25.580 --> 37:26.580
我们该怎么去请求

37:26.580 --> 37:28.580
其实你看一下预览也明白了

37:28.580 --> 37:30.580
它有两个请求参数

37:30.580 --> 37:31.580
一个是配级

37:31.580 --> 37:32.580
一个是size

37:32.580 --> 37:33.580
什么意思呢

37:33.580 --> 37:35.580
配级表示夜容量

37:35.580 --> 37:36.580
夜嘛

37:36.580 --> 37:37.580
就是第几页

37:37.580 --> 37:38.580
因为它是分页的

37:38.580 --> 37:39.580
电容数据很多

37:39.580 --> 37:40.580
我们这里呢

37:40.580 --> 37:41.580
给大家准备了

37:41.580 --> 37:42.580
三百多条电容

37:42.580 --> 37:43.580
所以说呢我们一看

37:43.580 --> 37:44.580
如果说全部拿过来的话

37:44.580 --> 37:45.580
就有点夸张

37:45.580 --> 37:47.580
这个数据传输量太大了

37:47.580 --> 37:48.580
而且页面上也不需要

37:48.580 --> 37:49.580
显示那么多对吧

37:49.580 --> 37:51.580
所以说我们就一块一块传输

37:51.580 --> 37:54.580
所以你还会学习到分页的做法

37:54.580 --> 37:55.580
我们传输数据的时候

37:55.580 --> 37:57.580
特别是数据量比较大的时候

37:57.580 --> 38:00.580
我们一般来说是分页传输

38:00.580 --> 38:02.580
这个表示页嘛

38:02.580 --> 38:04.580
骑士为一

38:04.580 --> 38:05.580
这个表示夜容量

38:05.580 --> 38:07.580
什么叫夜容量呢

38:07.580 --> 38:08.580
夜容量的单词呢

38:08.580 --> 38:11.580
我们通常用配级size

38:11.580 --> 38:12.580
配级size

38:12.580 --> 38:13.580
或者叫做nemet

38:13.580 --> 38:15.580
都是一个意思

38:15.580 --> 38:17.580
表示每页多少条

38:17.580 --> 38:19.580
好比方说我这里呢

38:19.580 --> 38:21.580
就给它传递一

38:21.580 --> 38:23.580
我们这里试验一下吧

38:24.580 --> 38:26.580
要传递一个生产环境

38:26.580 --> 38:31.140
传递一个1

38:31.140 --> 38:32.140
传递1

38:32.140 --> 38:33.140
夜容量呢

38:33.140 --> 38:34.140
给它一个3

38:34.140 --> 38:36.140
好发送请求

38:36.140 --> 38:37.140
你看

38:37.140 --> 38:38.140
它会告诉我

38:38.140 --> 38:39.140
总的数据量是多少

38:39.140 --> 38:41.140
一共有349条电影

38:41.140 --> 38:42.140
然后呢

38:42.140 --> 38:43.140
目前呢是第1页

38:43.140 --> 38:44.140
然后呢

38:44.140 --> 38:46.140
第1页给了我们3条电影

38:46.140 --> 38:47.140
对吧

38:47.140 --> 38:48.140
就是夜容量为3

38:48.140 --> 38:49.140
比方说夜容量呢

38:49.140 --> 38:50.140
为5

38:50.140 --> 38:51.140
发送请求

38:51.140 --> 38:53.140
你看下面就是有5条电影

38:53.140 --> 38:54.140
对吧

38:54.140 --> 38:55.140
很简单吧

38:55.140 --> 38:56.140
然后呢

38:56.140 --> 38:57.140
如果说

38:57.140 --> 38:59.140
这边夜容量给它写

38:59.140 --> 39:01.140
不要这里写个第2页呢

39:01.140 --> 39:02.140
发送请求

39:02.140 --> 39:03.140
你看这边第2页的电影

39:03.140 --> 39:05.140
就这么简单

39:05.140 --> 39:07.140
所以我们这边要做的事情呢

39:07.140 --> 39:09.140
就是我给它封装一个方法

39:09.140 --> 39:10.140
然后呢

39:10.140 --> 39:11.140
你给我告诉我

39:11.140 --> 39:12.140
是第几页

39:12.140 --> 39:14.140
每页显示多少条

39:14.140 --> 39:15.140
我就帮你来请求

39:15.140 --> 39:17.140
就完事

39:17.140 --> 39:18.140
好

39:18.140 --> 39:19.140
我怎么来帮你请求呢

39:19.140 --> 39:20.140
其实我就是一个

39:20.140 --> 39:21.140
Axious

39:26.140 --> 39:28.140
好 接下来我就直接

39:28.140 --> 39:30.140
拿到响应结果

39:30.140 --> 39:31.140
Axious

39:31.140 --> 39:33.140
Gate

39:33.140 --> 39:35.140
API

39:35.140 --> 39:36.140
不

39:36.140 --> 39:37.140
ADP

39:37.140 --> 39:38.140
ADP

39:38.140 --> 39:39.140
就ADP吧

39:39.140 --> 39:40.140
然后呢

39:40.140 --> 39:43.140
study.edu.com

39:43.140 --> 39:44.140
写缸

39:44.140 --> 39:46.140
然后是API

39:46.140 --> 39:48.140
movies

39:49.140 --> 39:50.140
对吧

39:50.140 --> 39:51.140
我们请求这个地址

39:51.140 --> 39:53.140
由于它有请求参数

39:53.140 --> 39:54.140
所以说呢

39:54.140 --> 39:55.140
我们这里呢

39:55.140 --> 39:56.140
加上一些请求参数

39:56.140 --> 39:57.140
就是Paris

39:57.140 --> 39:58.140
有哪些请求参数呢

39:58.140 --> 39:59.140
一个是Page

39:59.140 --> 40:00.140
Page呢

40:00.140 --> 40:01.140
就来自于这个参数

40:01.140 --> 40:03.140
我一个方法的参数Page

40:03.140 --> 40:04.140
然后呢

40:04.140 --> 40:05.140
另一个参数呢

40:05.140 --> 40:06.140
叫Size

40:06.140 --> 40:07.140
就是夜容量

40:07.140 --> 40:08.140
夜容量的话

40:08.140 --> 40:09.140
我就来自于

40:09.140 --> 40:10.140
第二个参数

40:10.140 --> 40:11.140
对不对

40:11.140 --> 40:12.140
拿到这个响应结果

40:12.140 --> 40:13.140
最后呢

40:13.140 --> 40:14.140
我们把这个响应结果里边

40:14.140 --> 40:15.140
响应头来

40:15.140 --> 40:16.140
那些都不要

40:16.140 --> 40:17.140
我们只需要响应体

40:18.140 --> 40:19.140
接下来我们来测试一下

40:19.140 --> 40:20.140
测试一下这个响数

40:20.140 --> 40:22.140
能不能好不好用

40:22.140 --> 40:23.140
我们在媒调监视里边

40:23.140 --> 40:27.350
首先我们去导入它

40:27.350 --> 40:28.350
导入它

40:28.350 --> 40:30.350
导入这个

40:30.350 --> 40:31.350
因为它是居民导出

40:31.350 --> 40:32.350
所以说我们这里呢

40:32.350 --> 40:34.350
使用导入API里面的movies

40:34.350 --> 40:36.350
这边我们有个方法

40:36.350 --> 40:37.350
叫get some movies

40:37.350 --> 40:38.350
来

40:38.350 --> 40:39.350
用方法

40:39.350 --> 40:40.350
其实呢

40:40.350 --> 40:41.350
利用BS code的智能提示

40:41.350 --> 40:42.350
其实也可以

40:42.350 --> 40:44.350
get some movies

40:44.350 --> 40:45.350
一回车

40:45.350 --> 40:47.350
一回自动帮你导入

40:47.350 --> 40:48.350
也可以

40:48.350 --> 40:49.350
如果说这一块

40:49.350 --> 40:51.350
如果说它智能导入

40:51.350 --> 40:52.350
它不好使的话

40:52.350 --> 40:53.350
你就手动导入一下

40:53.350 --> 40:55.350
然后我们给它一个页码

40:55.350 --> 40:56.350
比方说第一页

40:56.350 --> 40:58.350
每页显示10条

40:58.350 --> 40:59.350
好

40:59.350 --> 41:00.350
因为它是一个返回的

41:00.350 --> 41:01.350
是一个Promise对吧

41:01.350 --> 41:02.350
所以说我们要用Z

41:02.350 --> 41:04.350
拿到这个响应结果

41:04.350 --> 41:06.350
最后我们输出一下Risk

41:06.350 --> 41:07.350
好看一下啊

41:07.350 --> 41:09.350
会不会有什么问题呢

41:10.350 --> 41:11.350
控制台爆错了

41:13.350 --> 41:14.350
它说

41:14.350 --> 41:16.350
Cannas read property Z

41:16.350 --> 41:17.350
Undefend

41:17.350 --> 41:19.350
它说这个玩意儿是undefend的

41:20.350 --> 41:21.350
这个玩意儿怎么可能是

41:21.350 --> 41:22.350
没返回对吧

41:24.790 --> 41:25.790
对对对

41:25.790 --> 41:26.790
是有这样的问题

41:26.790 --> 41:28.790
因为我这里没有写

41:28.790 --> 41:29.790
没有写 await

41:30.790 --> 41:32.790
然后这里没有写 async

41:32.790 --> 41:35.620
OK

41:35.620 --> 41:37.620
好 现在至少上面那个错误没有了

41:37.620 --> 41:38.620
刷新

41:38.620 --> 41:40.620
但是出现了另外一个错误

41:40.620 --> 41:41.620
这个错误什么呢

41:41.620 --> 41:42.620
就是一个跨域的错误

41:42.620 --> 41:43.620
什么叫跨域

41:44.620 --> 41:46.620
跨域是因为浏览器的

41:46.620 --> 41:48.620
同源策略导致的

41:48.620 --> 41:49.620
同源策略

41:49.620 --> 41:50.620
然后简单说一下

41:51.620 --> 41:52.620
你们之前可能学过

41:52.620 --> 41:54.620
没有学过的话听一下

41:54.620 --> 41:55.620
非常简单

41:55.620 --> 41:57.620
就是浏览器什么叫源

41:57.620 --> 41:58.620
你首先搞清楚

41:58.620 --> 41:59.620
源的话

42:01.620 --> 42:02.620
等于什么呢

42:02.620 --> 42:03.620
等于协议

42:03.620 --> 42:04.620
也是个AGDP

42:05.620 --> 42:07.620
加上主机名

42:08.620 --> 42:09.620
加上端口

42:10.620 --> 42:11.620
这叫源

42:11.620 --> 42:13.620
只要这三个东西一个不相同

42:13.620 --> 42:15.620
那么就不是同一个源

42:15.620 --> 42:16.620
这要同源

42:17.620 --> 42:18.620
比方说

42:18.620 --> 42:19.620
我看一下这两个例子

42:20.620 --> 42:22.620
AGPS 杜依调抗

42:22.620 --> 42:24.620
和AGDP

42:24.620 --> 42:25.620
杜依调抗

42:25.620 --> 42:26.620
他们同源吗

42:26.620 --> 42:27.620
不同源

42:27.620 --> 42:28.620
因为他们协议不一样

42:28.620 --> 42:29.620
再来

42:29.620 --> 42:30.620
如果说他们协议一样

42:30.620 --> 42:31.620
杜依调抗

42:31.620 --> 42:33.620
和3W点杜依调抗

42:33.620 --> 42:34.620
同源吗

42:34.620 --> 42:35.620
不同源

42:35.620 --> 42:37.620
因为他们的主机名不一样

42:38.620 --> 42:39.620
看呗

42:39.620 --> 42:40.620
或者是你再看这个

42:41.620 --> 42:42.620
然后呢

42:42.620 --> 42:43.620
如果说是这种情况

42:43.620 --> 42:45.620
这里让我给他写个8080

42:45.620 --> 42:46.620
他们同源吗

42:46.620 --> 42:47.620
不同源

42:47.620 --> 42:48.620
因为他们端口耗不一样

42:49.620 --> 42:51.620
只有完全一样的时候

42:51.620 --> 42:52.620
他们才同源

42:52.620 --> 42:53.620
比方说他

42:54.620 --> 42:55.620
跟这个

42:56.620 --> 42:57.620
跟他同源吗

42:57.620 --> 42:58.620
同源

42:58.620 --> 42:59.620
他不看路径的

42:59.620 --> 43:01.620
只看前边这一部分

43:01.620 --> 43:02.620
比方说

43:02.620 --> 43:03.620
这叫源

43:03.620 --> 43:05.620
什么叫同源策略呢

43:05.620 --> 43:07.620
同源策略的意思就是说

43:07.620 --> 43:09.620
你页面不是有一个源吗

43:09.620 --> 43:10.620
你看我们的页面

43:10.620 --> 43:12.620
是通过这个地址防温的

43:13.620 --> 43:14.620
好

43:14.620 --> 43:17.990
我们的页面是通过这个地址防温的

43:17.990 --> 43:18.990
好

43:18.990 --> 43:20.990
我们的阿迦克斯请求呢

43:20.990 --> 43:21.990
请求的是啥

43:21.990 --> 43:22.990
请求的是另外一个

43:22.990 --> 43:23.990
叫做

43:23.990 --> 43:26.990
Starley.doe.edu.com

43:26.990 --> 43:28.990
API movies

43:28.990 --> 43:29.990
你看这两个

43:29.990 --> 43:30.990
是不是不同源

43:30.990 --> 43:31.990
对不对

43:31.990 --> 43:33.990
同源策略的意思就是说

43:33.990 --> 43:35.990
你的页面的所在地址

43:35.990 --> 43:38.990
和你阿迦克斯发送的地址

43:38.990 --> 43:40.990
他们必须要同源

43:40.990 --> 43:43.990
你才能拿到阿迦克斯请求的结果

43:43.990 --> 43:44.990
一旦不同源

43:44.990 --> 43:46.990
它就会出现跨域问题

43:46.990 --> 43:48.990
这个域就是源的意思

43:48.990 --> 43:52.300
跨域

43:52.300 --> 43:56.190
跨域就是跨源

43:56.190 --> 43:57.190
一个意思

43:57.190 --> 44:00.190
就是如果说你的页面的源

44:00.190 --> 44:02.190
和那个阿迦克斯请求的源不一致

44:02.190 --> 44:04.190
那么就会导致跨域问题

44:04.190 --> 44:05.190
那么这是浏览器

44:05.190 --> 44:06.190
做的一个安全防护

44:06.190 --> 44:08.190
那么至于他为什么

44:08.190 --> 44:09.190
他不这样做

44:09.190 --> 44:10.190
会导致哪些问题

44:10.190 --> 44:11.190
我们不展开了

44:11.190 --> 44:12.190
总之他是一个安全防护

44:13.190 --> 44:14.190
就想问了

44:14.190 --> 44:18.190
咱们之前学习那个网络课程的时候

44:18.190 --> 44:20.190
不也跨域了吗

44:20.190 --> 44:23.190
他不也拿到结果了吗

44:23.190 --> 44:26.190
是跨域问题是可以解决的

44:26.190 --> 44:27.190
怎么解决

44:27.190 --> 44:29.190
要靠服务器解决

44:29.190 --> 44:32.190
因为你们之前学这个网络的时候

44:32.190 --> 44:33.190
绝大部分接口

44:33.190 --> 44:35.190
就其他接口

44:35.190 --> 44:37.190
就这里边的什么聊天接口

44:37.190 --> 44:38.190
这些接口

44:38.190 --> 44:41.190
全都是做了跨域处理的

44:42.190 --> 44:44.190
但是这个接口没有做处理

44:44.190 --> 44:45.190
为什么没有做处理

44:45.190 --> 44:47.190
因为我故意的

44:47.190 --> 44:48.190
我必须要让你知道

44:48.190 --> 44:50.190
这个跨域问题的存在

44:50.190 --> 44:52.190
然后以及怎么解决

44:52.190 --> 44:53.190
没了意思吧

44:53.190 --> 44:54.190
那么现在就出现了跨域问题

44:54.190 --> 44:55.190
怎么解决

44:55.190 --> 44:56.190
你拿不到

44:56.190 --> 44:58.190
不要说是做后面的页面

44:58.190 --> 45:01.190
你那个阿迦克斯请求的拿不到

45:01.190 --> 45:02.190
那怎么解决呢

45:02.190 --> 45:04.190
你需要知道一点知识

45:04.190 --> 45:07.190
这一块有些新知识

45:07.190 --> 45:09.190
这块知识叫做跨域代理

45:10.190 --> 45:12.190
你们以后在公司里边

45:12.190 --> 45:13.190
听好了

45:13.190 --> 45:15.190
绝大部分时候

45:15.190 --> 45:17.190
你的服务器

45:17.190 --> 45:19.190
都是不允许跨域访问的

45:19.190 --> 45:21.190
也就是你一个接口所在的服务器

45:21.190 --> 45:23.190
不允许的跨域访问

45:23.190 --> 45:25.190
我们之前学网络的时候

45:25.190 --> 45:26.190
让你跨域访问

45:26.190 --> 45:27.190
是因为我们

45:27.190 --> 45:29.190
为了让你把学习的中心

45:29.190 --> 45:30.190
放到网络那一块

45:30.190 --> 45:31.190
放到阿迦克斯那一块

45:31.190 --> 45:33.190
放到AGB协议的一块

45:33.190 --> 45:34.190
我们给你做了处理

45:34.190 --> 45:35.190
但是你能以后

45:35.190 --> 45:36.190
能到公司里边

45:36.190 --> 45:37.190
绝大部分服务器

45:37.190 --> 45:39.190
是不允许的跨域访问的

45:39.190 --> 45:41.190
它为了安全

45:41.190 --> 45:43.190
那么

45:43.190 --> 45:44.190
但是呢

45:44.190 --> 45:45.190
也要想到

45:45.190 --> 45:49.190
就是你写的页面

45:49.190 --> 45:50.190
写完了过后

45:50.190 --> 45:51.190
是需要部署的

45:51.190 --> 45:53.190
部署一般来说

45:53.190 --> 45:54.190
是有运为人员

45:54.190 --> 45:56.190
或者是后装开发人员部署的

45:56.190 --> 45:57.190
一般来说

45:57.190 --> 45:59.190
不需要前装开发人员去参与

45:59.190 --> 46:01.190
就是你爸爸放到网上

46:01.190 --> 46:02.190
让别人可以访问

46:02.190 --> 46:04.190
都要部署

46:04.190 --> 46:05.190
当你的页面

46:05.190 --> 46:06.190
你的GS

46:06.190 --> 46:07.190
你的图片

46:07.190 --> 46:09.190
就是这些静态资源

46:09.190 --> 46:10.190
因为你们打包完成过后

46:10.190 --> 46:11.190
就是一些静态资源

46:11.190 --> 46:13.190
当你们把这些静态资源

46:13.190 --> 46:15.190
部署到服务器上过后

46:15.190 --> 46:17.190
实际上是没有跨域问题的

46:17.190 --> 46:19.190
下面有一张图

46:19.190 --> 46:20.190
这张图你不用去

46:20.190 --> 46:21.190
非常深入的了解

46:21.190 --> 46:22.190
因为这里边

46:22.190 --> 46:24.190
涉及到一些后段知识

46:24.190 --> 46:25.190
我们来看一下

46:25.190 --> 46:27.190
为什么你部署完成之后

46:27.190 --> 46:29.190
就不会有跨域问题

46:29.190 --> 46:30.190
你看这里不是出现了跨域问题吗

46:30.190 --> 46:31.190
但是我要告诉你的是

46:31.190 --> 46:33.190
当你把代码写完了之后

46:33.190 --> 46:35.190
你放到了真实的服务器上面

46:36.190 --> 46:37.190
它就不会有跨域问题了

46:37.190 --> 46:38.190
为什么

46:38.190 --> 46:39.190
你看

46:39.190 --> 46:40.190
我们这里有个浏览器

46:40.190 --> 46:41.190
这里是我们的服务器

46:41.190 --> 46:43.190
服务器里边安装的一个东西

46:43.190 --> 46:44.190
叫做陰镜的事

46:44.190 --> 46:45.190
你不用管它是啥

46:45.190 --> 46:46.190
它是用来做一个反向代理的

46:46.190 --> 46:48.190
你不用管它是啥

46:48.190 --> 46:50.190
现在我们去请求这个地址

46:50.190 --> 46:51.190
你看

46:51.190 --> 46:52.190
现在我们去请求的

46:52.190 --> 46:53.190
这边就是部署上

46:53.190 --> 46:54.190
部署上去的

46:54.190 --> 46:56.190
你看请求这个地址

46:56.190 --> 46:57.190
请求什么地址

46:57.190 --> 46:59.190
我们的网页地址是什么

46:59.190 --> 47:00.190
是这个

47:01.190 --> 47:03.190
而我们的接口地址是这个

47:03.190 --> 47:05.190
是不是同一个园

47:06.190 --> 47:07.190
我们这个网页

47:07.190 --> 47:08.190
它的园

47:08.190 --> 47:09.190
给我们的接口地址的园

47:09.190 --> 47:10.190
是不是一致的

47:10.190 --> 47:11.190
然后我们再看

47:11.190 --> 47:12.190
这张图它到底是怎么做的

47:12.190 --> 47:13.190
当我们去请求

47:13.190 --> 47:14.190
这样的地址的时候

47:16.190 --> 47:17.190
服务器会交给一个东西

47:17.190 --> 47:18.190
叫做陰镜的事

47:18.190 --> 47:19.190
它发现

47:19.190 --> 47:20.190
这东西是需要

47:20.190 --> 47:22.190
我后装开发人员去配置的

47:22.190 --> 47:24.190
或者是运为人员去配置的

47:24.190 --> 47:25.190
它发现我们的请求

47:25.190 --> 47:27.190
是一个鞋杠木背开头

47:27.190 --> 47:28.190
所以说

47:28.190 --> 47:29.190
它就会去找静态资源

47:29.190 --> 47:31.190
你到底是要ATM

47:31.190 --> 47:32.190
还是以CSS

47:32.190 --> 47:33.190
这个型号表示

47:33.190 --> 47:35.190
后面可以跟别的路径

47:35.190 --> 47:36.190
比如说你可以拿GS

47:36.190 --> 47:37.190
可以拿CSS

47:38.190 --> 47:39.190
那么它就会把这些东西拿给你

47:39.190 --> 47:40.190
这就是我们的静态资源

47:40.190 --> 47:42.190
比方说你去请求这个地址

47:42.190 --> 47:43.190
是不是拿到一个页面

47:43.190 --> 47:45.190
拿到一个ATM页面

47:45.190 --> 47:47.190
然后这个页面的运行的过程中

47:47.190 --> 47:48.190
是不是运行到GS

47:48.190 --> 47:49.190
然后这个页面中

47:49.190 --> 47:51.190
会去请求阿迪克斯地址

47:51.190 --> 47:52.190
是不是这个地址

47:52.190 --> 47:54.190
你看是不是请求这个地址

47:54.190 --> 47:55.190
这个地址

47:55.190 --> 47:56.190
请求到同一个服务器

47:56.190 --> 47:57.190
这个服务器

47:58.190 --> 47:59.190
就交给银几个事

47:59.190 --> 48:00.190
它发现你的请求

48:00.190 --> 48:02.190
是以鞋杠API开口的

48:02.190 --> 48:04.190
所以说它就不会从这里边去拿了

48:04.190 --> 48:07.190
它就会去找后端的接口

48:07.190 --> 48:09.190
你看我们前端开发的就是这一块

48:09.190 --> 48:11.190
后端开发的就是这一块

48:11.190 --> 48:13.190
这要前后端分离

48:13.190 --> 48:14.190
那么整个开下来

48:14.190 --> 48:16.190
你不用去泰国纠结这个东西

48:16.190 --> 48:18.190
你只需要知道

48:18.190 --> 48:19.190
部署完成过后

48:19.190 --> 48:20.190
你就去看这里

48:20.190 --> 48:22.190
这个显而易见的事实

48:22.190 --> 48:23.190
是不是就没有跨越问题了

48:23.190 --> 48:24.190
我们只需要运为人员

48:24.190 --> 48:26.190
帮我们简单的做一些配置

48:26.190 --> 48:27.190
它就没有跨越问题了

48:27.190 --> 48:29.190
就可以轻松地达到我们的数据

48:29.190 --> 48:30.190
对不对

48:30.190 --> 48:32.190
所以说你记住一点

48:32.190 --> 48:33.190
绝大部分时候

48:33.190 --> 48:34.190
不是所有的时候

48:34.190 --> 48:35.190
你不要说

48:35.190 --> 48:36.190
原来是说以后的公司里面

48:36.190 --> 48:37.190
一定不会遇到跨越问题

48:37.190 --> 48:38.190
那不一定的

48:39.190 --> 48:40.190
大部分时候

48:40.190 --> 48:43.190
部署完了过后就没有跨越了

48:44.190 --> 48:45.190
但是

48:45.190 --> 48:47.190
现在我们部署了吗

48:47.190 --> 48:48.190
没有吧

48:48.190 --> 48:49.190
你不可能我开发一点

48:49.190 --> 48:50.190
我都没有开发完成

48:50.190 --> 48:51.190
你让我去部署

48:51.190 --> 48:52.190
那不可能了

48:52.190 --> 48:54.190
我们在开发阶段

48:54.190 --> 48:56.190
就会出现跨越问题

48:57.190 --> 49:00.190
跨越问题在开发阶段是存在的

49:00.190 --> 49:01.190
为什么呢

49:01.190 --> 49:02.190
因为你看一下

49:02.190 --> 49:04.190
我们现在请求的页面是啥

49:04.190 --> 49:06.190
说那个开发服务器

49:06.190 --> 49:08.190
我们上一课说过的对吧

49:08.190 --> 49:11.190
微派可能给我们启动了一个开发服务器

49:11.190 --> 49:12.190
你看着

49:12.190 --> 49:13.190
我们这个浏览器

49:13.190 --> 49:14.190
请求的是什么

49:14.190 --> 49:15.190
开发服务器

49:15.190 --> 49:17.190
这个玩意就是开发服务器

49:17.190 --> 49:19.190
微派给我们创建的

49:19.190 --> 49:20.190
这个玩意是在本地上

49:20.190 --> 49:21.190
在你的电脑上

49:21.190 --> 49:23.190
比方我们请求的是8080

49:23.190 --> 49:24.190
对吧

49:24.190 --> 49:25.190
我们请求的是它的首页

49:25.190 --> 49:27.190
于是开发服务器

49:27.190 --> 49:28.190
给了我们一个什么

49:28.190 --> 49:30.190
给了我们一个页面

49:30.190 --> 49:32.190
然后在页面的运行过程中

49:32.190 --> 49:34.190
就变成这个样子了

49:35.190 --> 49:36.190
在页面的运行过程中

49:36.190 --> 49:38.190
是不是请求到它

49:38.190 --> 49:39.190
请求到数据的服务器

49:39.190 --> 49:41.190
那现在是不是遇到跨越

49:41.190 --> 49:43.190
所以说现在的问题是

49:43.190 --> 49:45.190
开发阶段有跨越

49:45.190 --> 49:47.190
一旦开发完成

49:47.190 --> 49:48.190
部署上去就没有跨越

49:48.190 --> 49:50.190
最终是没有跨越的

49:50.190 --> 49:51.190
但是你这个开发阶段的跨越

49:51.190 --> 49:53.190
就不能不解决

49:53.190 --> 49:55.190
你说无所谓

49:55.190 --> 49:56.190
反正我不解决它

49:56.190 --> 49:57.190
我开发网站过后

49:57.190 --> 49:59.190
自然就没有跨越了

49:59.190 --> 50:00.190
确实是这样子

50:00.190 --> 50:01.190
但是你怎么看效果呢

50:01.190 --> 50:02.190
问题是

50:02.190 --> 50:03.190
你效果就看不到了

50:03.190 --> 50:04.190
明白的意思吗

50:04.190 --> 50:05.190
所以我们绝大部分时候

50:05.190 --> 50:06.190
解决跨越问题

50:06.190 --> 50:08.190
就是解决开发阶段的跨越问题

50:08.190 --> 50:10.190
部署过后就没了

50:10.190 --> 50:11.190
没有跨越问题了

50:11.190 --> 50:12.190
听懂这个意思吗

50:12.190 --> 50:14.190
那么现在问题就转换成了

50:14.190 --> 50:16.190
我怎么样去解决

50:16.190 --> 50:19.190
开发阶段的跨越问题

50:19.190 --> 50:21.190
怎么解决呢

50:22.190 --> 50:23.190
两步骤实现

50:23.190 --> 50:24.190
对我们开发影响

50:24.190 --> 50:25.190
就这么一点点

50:25.190 --> 50:28.190
仅仅是消除开发阶段的跨越问题

50:28.190 --> 50:29.190
便于在开发阶段

50:29.190 --> 50:30.190
查看效果

50:30.190 --> 50:32.190
我们处于这么一个目的

50:32.190 --> 50:33.190
两步骤完成

50:33.190 --> 50:34.190
第一步

50:34.190 --> 50:35.190
找到你的

50:35.190 --> 50:38.190
vipack config的介石

50:38.190 --> 50:40.190
找到这个介石

50:40.190 --> 50:41.190
这个介石里面东西很多

50:41.190 --> 50:43.190
就是一个vipack的配置

50:43.190 --> 50:45.190
不用去关注其他配置

50:45.190 --> 50:46.190
你找到这个地方

50:46.190 --> 50:48.190
叫device server

50:48.190 --> 50:50.190
这是我们的开发服务器

50:50.190 --> 50:53.190
加上这么一句话

50:53.190 --> 50:56.190
复制粘贴过来

50:56.190 --> 50:57.190
表示配置粘贴

50:57.190 --> 50:58.190
以后我会解释

50:58.190 --> 50:59.190
它什么意思

50:59.190 --> 51:00.190
表示代理

51:00.190 --> 51:01.190
什么意思呢

51:01.190 --> 51:02.190
当你请求

51:02.190 --> 51:03.190
以API开头的时候

51:03.190 --> 51:04.190
我把它转发到这

51:04.190 --> 51:05.190
然后有个这个东西

51:05.190 --> 51:06.190
先写到这

51:06.190 --> 51:08.190
以后给你解释

51:08.190 --> 51:09.190
这是第一步

51:09.190 --> 51:10.190
第二步

51:10.190 --> 51:12.190
你在请求的时候

51:12.190 --> 51:15.950
你不要这样的请求

51:15.950 --> 51:16.950
把它的主机名

51:16.950 --> 51:18.950
协议端口号全部取掉

51:18.950 --> 51:20.950
直接以路径开始

51:21.950 --> 51:23.950
我们直接看效果

51:23.950 --> 51:25.950
改动了vipack配置

51:25.950 --> 51:27.950
你需要重新运行

51:27.950 --> 51:32.220
npm装设

51:32.220 --> 51:33.220
我们来看一下

51:33.220 --> 51:35.220
数据是不是能拿到了

51:35.220 --> 51:36.220
看没有

51:36.220 --> 51:38.220
数据拿到了吧

51:38.220 --> 51:39.220
data

51:39.220 --> 51:40.220
看一下

51:40.220 --> 51:41.220
电影的列表

51:41.220 --> 51:42.220
电影的总数

51:42.220 --> 51:43.220
就拿到了数据

51:43.220 --> 51:44.220
为什么

51:44.220 --> 51:46.220
为什么可以

51:46.220 --> 51:50.300
看着

51:50.300 --> 51:51.300
由于我们这样配置了

51:51.300 --> 51:52.300
过后

51:52.300 --> 51:53.300
你看着

51:53.300 --> 51:55.300
当我们请求的时候

51:55.300 --> 51:56.300
其他的没变

51:56.300 --> 51:57.300
当你去请求那个

51:57.300 --> 51:59.300
localhost8080的时候

51:59.300 --> 52:00.300
那么他会给你一个

52:00.300 --> 52:01.300
atmail

52:01.300 --> 52:02.300
他会给你一个atmail

52:02.300 --> 52:03.300
拿过来

52:03.300 --> 52:04.300
所以我们的页面

52:04.300 --> 52:05.300
是不是还是在

52:05.300 --> 52:06.300
这个页面还是在

52:06.300 --> 52:07.300
8080里面

52:07.300 --> 52:08.300
没变化

52:08.300 --> 52:09.300
然后接下来就是

52:09.300 --> 52:10.300
请求了

52:10.300 --> 52:11.300
我运行GS的

52:11.300 --> 52:12.300
页面中运行的GS

52:12.300 --> 52:13.300
GS请求的是啥

52:13.300 --> 52:15.300
是没有包含协议

52:15.300 --> 52:17.300
没有包含主机名

52:17.300 --> 52:18.300
没有包含端口号

52:18.300 --> 52:19.300
直接以一个路径开始

52:19.300 --> 52:20.300
说明啥

52:20.300 --> 52:22.300
说明这个请求用的是什么

52:22.300 --> 52:24.300
当前页面的协议

52:24.300 --> 52:27.300
当前页面的主机名

52:27.300 --> 52:29.300
当前页面的端口号

52:29.300 --> 52:31.300
就这么个意思

52:31.300 --> 52:32.300
你请求的页面中

52:32.300 --> 52:33.300
运行的GS

52:33.300 --> 52:35.300
他请求的这个地址

52:35.300 --> 52:36.300
由于我省略了

52:36.300 --> 52:38.300
协议主机名和端口号

52:38.300 --> 52:39.300
他用的就是

52:39.300 --> 52:40.300
当前页面的

52:40.300 --> 52:42.300
这套东西

52:42.300 --> 52:43.300
原来的意思

52:43.300 --> 52:45.300
他用的就是他

52:45.300 --> 52:46.300
所以说他请求的地址

52:46.300 --> 52:47.300
有没有跨越

52:47.300 --> 52:49.300
没有跨越

52:49.300 --> 52:50.300
没有跨越

52:50.300 --> 52:51.300
但是一个问题就是

52:51.300 --> 52:52.300
你请求的是谁

52:52.300 --> 52:54.300
你请求的是

52:54.300 --> 52:55.300
我们的数据服

52:55.300 --> 52:57.300
你请求的是他吗

52:57.300 --> 52:58.300
不是吧

52:58.300 --> 52:59.300
你请求的还是

52:59.300 --> 53:00.300
我们的开发服务器

53:00.300 --> 53:01.300
对不对

53:01.300 --> 53:02.300
因为你楼口号是8080

53:02.300 --> 53:03.300
所以你请求的

53:03.300 --> 53:04.300
还是我们的开发服务器

53:04.300 --> 53:05.300
开发服务器

53:05.300 --> 53:06.300
怎么会有这个接口呢

53:06.300 --> 53:08.300
看着

53:08.300 --> 53:09.300
当我们的请求

53:09.300 --> 53:10.300
发出去过后

53:10.300 --> 53:11.300
它会发到哪

53:11.300 --> 53:13.300
还是发到我们的开发服务器

53:13.300 --> 53:14.300
但是现在不一样了

53:14.300 --> 53:15.300
开发服务器

53:15.300 --> 53:16.300
我配置了一个东西

53:16.300 --> 53:17.300
叫做代理

53:17.300 --> 53:18.300
叫proxy

53:18.300 --> 53:20.300
当他发现你的请求入境

53:20.300 --> 53:22.300
以斜杠API开头的时候

53:22.300 --> 53:23.300
你看是不是

53:23.300 --> 53:25.300
以斜杠API开头的时候

53:25.300 --> 53:26.300
这个时候

53:26.300 --> 53:27.300
他会把这个请求

53:27.300 --> 53:30.300
转发到这个地址

53:30.300 --> 53:31.300
下面这个不用管

53:31.300 --> 53:32.300
你该写上就行了

53:32.300 --> 53:33.300
不写上吧

53:33.300 --> 53:34.300
有的时候会出一些问题

53:34.300 --> 53:35.300
我现在不去给你

53:35.300 --> 53:36.300
详细的讲这些东西

53:36.300 --> 53:37.300
啥东西

53:37.300 --> 53:39.300
能用就行

53:39.300 --> 53:40.300
他就会这样

53:40.300 --> 53:41.300
你的请求

53:41.300 --> 53:42.300
以斜杠API开头

53:42.300 --> 53:43.300
因为是配置好的

53:43.300 --> 53:45.300
我告诉他的

53:45.300 --> 53:46.300
然后他就会

53:46.300 --> 53:47.300
把他待你到这个地址

53:47.300 --> 53:48.300
这个服务器

53:48.300 --> 53:49.300
用这个服务器

53:49.300 --> 53:50.300
你请求这个服务器

53:50.300 --> 53:51.300
他原来说

53:51.300 --> 53:53.300
那这里服务器有跨域吗

53:53.300 --> 53:54.300
兄弟

53:54.300 --> 53:57.300
跨域只在浏览器端

53:57.300 --> 53:59.300
服务器端是没有跨域这个词的

53:59.300 --> 54:01.300
这个概念都没有

54:01.300 --> 54:02.300
跨域是浏览器的

54:02.300 --> 54:04.300
同源策略搞出来的东西

54:04.300 --> 54:06.300
这边是服务器了

54:06.300 --> 54:08.300
他没有任何跨域问题

54:08.300 --> 54:09.300
随便请求

54:09.300 --> 54:10.300
所以请求到这

54:10.300 --> 54:11.300
那么这里是不是

54:11.300 --> 54:12.300
就可以拿到数据了

54:12.300 --> 54:14.300
他去拿到后端数据

54:14.300 --> 54:16.300
后端数据拿过来过去给他

54:16.300 --> 54:18.300
他又再给他

54:18.300 --> 54:19.300
这一块东西

54:19.300 --> 54:20.300
其实你们不用管

54:20.300 --> 54:21.300
对于浏览器而言

54:21.300 --> 54:22.300
他就觉得很神奇

54:22.300 --> 54:23.300
我请求他拿到一个页面

54:23.300 --> 54:24.300
我运行GS

54:24.300 --> 54:25.300
运行用GS过后

54:25.300 --> 54:26.300
一个阿迦克斯

54:26.300 --> 54:27.300
还是请求他

54:27.300 --> 54:28.300
就拿到了数据

54:28.300 --> 54:29.300
他就不知道

54:29.300 --> 54:30.300
这个数据是从这儿

54:30.300 --> 54:31.300
再回来再回来的

54:31.300 --> 54:32.300
他不知道

54:32.300 --> 54:33.300
无所谓

54:33.300 --> 54:34.300
他不需要知道

54:34.300 --> 54:36.300
反正就请求他拿到数据

54:36.300 --> 54:37.300
那么这样子一来

54:37.300 --> 54:38.300
我们看下面这张图

54:38.300 --> 54:39.300
就看得很清楚了

54:39.300 --> 54:40.300
开发环境

54:40.300 --> 54:41.300
对于浏览器而言

54:41.300 --> 54:42.300
他就觉得

54:42.300 --> 54:43.300
我请求他拿到页面

54:43.300 --> 54:44.300
请求他拿到数据

54:44.300 --> 54:45.300
有跨域吗

54:45.300 --> 54:46.300
没跨域

54:46.300 --> 54:47.300
对吧

54:47.300 --> 54:48.300
所以说这个代码

54:48.300 --> 54:49.300
这个代码

54:49.300 --> 54:50.300
就是我们最终写的

54:50.300 --> 54:51.300
这个代码

54:51.300 --> 54:52.300
在这儿

54:52.300 --> 54:53.300
它是不是既可以在

54:53.300 --> 54:55.300
我们的开发环境里面运行

54:55.300 --> 54:57.300
又可以在生产环境里面运行

54:57.300 --> 54:58.300
为什么

54:58.300 --> 54:59.300
你看

54:59.300 --> 55:02.680
开发环境里边

55:02.680 --> 55:04.680
开发环境里边

55:04.680 --> 55:06.680
是不是我就用当前页面的

55:06.680 --> 55:07.680
当前页面是不是

55:07.680 --> 55:08.680
Nokohos 8080

55:08.680 --> 55:09.680
用当前页面

55:09.680 --> 55:10.680
当前页面

55:10.680 --> 55:13.380
当前页面

55:13.380 --> 55:14.380
当前页面

55:14.380 --> 55:15.380
当前页面

55:15.380 --> 55:16.380
当前页面

55:16.380 --> 55:17.380
当前页面

55:17.380 --> 55:18.380
当前页面是不是Nokohos 8080

55:18.380 --> 55:19.380
用当前页面的

55:19.380 --> 55:20.380
就是逐进民端口号

55:20.380 --> 55:21.380
对吧

55:21.380 --> 55:22.380
请求过去

55:22.380 --> 55:23.380
OK了

55:23.380 --> 55:24.380
它这个代码

55:24.380 --> 55:25.380
到了生产环境里边

55:25.380 --> 55:26.380
因为它打包过后

55:26.380 --> 55:27.380
还是一个代码

55:27.380 --> 55:28.380
对吧

55:28.380 --> 55:29.380
打包过后

55:29.380 --> 55:30.380
到生产环境里边

55:30.380 --> 55:31.380
是不是一样的

55:31.380 --> 55:32.380
我请求的是

55:32.380 --> 55:33.380
鞋杠API Muvice

55:33.380 --> 55:34.380
那么生产环境

55:34.380 --> 55:35.380
是这个玉民

55:35.380 --> 55:36.380
这个端口号

55:36.380 --> 55:37.380
那么我同样的

55:37.380 --> 55:38.380
是用当前页面的

55:38.380 --> 55:39.380
玉民端口号

55:39.380 --> 55:40.380
是不是请求过来了

55:40.380 --> 55:41.380
对不对

55:41.380 --> 55:42.380
这个代码

55:42.380 --> 55:43.380
就是可以在开发环境

55:43.380 --> 55:44.380
和生产环境里面

55:44.380 --> 55:45.380
通用了

55:45.380 --> 55:46.380
然后呢

55:46.380 --> 55:47.380
主要是开发环境

55:47.380 --> 55:48.380
开发环境的五费

55:48.380 --> 55:49.380
就是配置一下

55:49.380 --> 55:50.380
开发服务器

55:50.380 --> 55:51.380
一个大代理

55:51.380 --> 55:53.380
来解决这个跨越问题

55:53.380 --> 55:54.380
这一块呢

55:54.380 --> 55:55.380
你不需要去过于深究

55:55.380 --> 55:56.380
你只需要知道怎么做

55:56.380 --> 55:58.380
能解决这个问题就行了

55:58.380 --> 55:59.380
你必须

55:59.380 --> 56:00.380
还要一点就是

56:00.380 --> 56:01.380
你要知道

56:01.380 --> 56:02.380
最终的

56:02.380 --> 56:03.380
开发完成之后

56:03.380 --> 56:04.380
是没有跨越问题的

56:04.380 --> 56:05.380
当然

56:05.380 --> 56:06.380
每个公司不一样

56:06.380 --> 56:07.380
有没有跨越问题呢

56:07.380 --> 56:08.380
一般来说

56:08.380 --> 56:09.380
公司会提前告诉你

56:09.380 --> 56:10.380
或者写到文档里面

56:10.380 --> 56:11.380
好

56:11.380 --> 56:12.380
那么就解决了跨越问题

56:12.380 --> 56:13.380
最终的结果呢

56:13.380 --> 56:14.380
我们就可以拿到

56:14.380 --> 56:15.380
好

56:15.380 --> 56:16.380
好

56:16.380 --> 56:17.380
同学们

56:17.380 --> 56:18.380
做一下

56:18.380 --> 56:19.380
把这些事情做一下

56:19.380 --> 56:20.380
这是一个新的知识

56:20.380 --> 56:21.380
解决跨越问题

56:21.380 --> 56:22.380
写上一个模块

56:22.380 --> 56:23.380
用X尺寸

56:23.380 --> 56:25.380
请求我们的电影数据

56:25.380 --> 56:26.380
啊

56:26.380 --> 56:27.380
封装一下

56:27.380 --> 56:28.380
然后呢

56:28.380 --> 56:29.380
在魅吊系列室里面

56:29.380 --> 56:30.380
能够拿到这个

56:30.380 --> 56:31.380
电影数据

56:31.380 --> 56:32.380
就OK了

56:32.380 --> 56:33.380
好

56:33.380 --> 56:34.380
做一下啊

56:34.380 --> 56:35.380
好

56:35.380 --> 56:36.380
接着我们

56:36.380 --> 56:37.380
往下做

56:37.380 --> 56:38.380
刚才他们讲了

56:38.380 --> 56:39.380
这个代理

56:39.380 --> 56:40.380
这个代理呢

56:40.380 --> 56:41.380
其实就是在

56:41.380 --> 56:42.380
开发阶段使用一下

56:42.380 --> 56:43.380
就OK了

56:43.380 --> 56:44.380
其实就很简单

56:44.380 --> 56:45.380
就是相当于是代购

56:45.380 --> 56:46.380
对不对

56:46.380 --> 56:48.380
你想在国外买东西

56:48.380 --> 56:49.380
说直接买不到

56:49.380 --> 56:51.380
那么你就需要代购

56:51.380 --> 56:52.380
让别人

56:52.380 --> 56:54.380
让可以跟你投通的人

56:54.380 --> 56:55.380
让他来帮你

56:55.380 --> 56:56.380
在国外去买

56:56.380 --> 56:57.380
有点像海豹

56:57.380 --> 56:59.380
好

56:59.380 --> 57:00.380
那么接下来

57:00.380 --> 57:01.380
我们来做这个电影

57:01.380 --> 57:02.380
页面的啊

57:02.380 --> 57:03.380
那么这个电影页面的

57:03.380 --> 57:04.380
我们首先来分析一下

57:04.380 --> 57:05.380
因为这一块呢

57:05.380 --> 57:06.380
他也要分模块

57:06.380 --> 57:07.380
如果说你电影

57:07.380 --> 57:08.380
因为电影板块呢

57:08.380 --> 57:09.380
他有两个大的板块

57:09.380 --> 57:10.380
一个是电表

57:10.380 --> 57:11.380
一个是分页

57:11.380 --> 57:12.380
这两块

57:12.380 --> 57:13.380
因为呢

57:13.380 --> 57:14.380
看上去好像是关系紧密

57:14.380 --> 57:16.380
实际上他们两个是分开的

57:16.380 --> 57:17.380
就这一块

57:17.380 --> 57:19.380
和下面这个分页

57:19.380 --> 57:20.380
这两块是分开的

57:20.380 --> 57:21.380
所以我们把它分开来开发

57:21.380 --> 57:22.380
用两个比较

57:22.380 --> 57:23.380
相对来说

57:23.380 --> 57:25.380
比较独立的模块来进行开发

57:25.380 --> 57:27.380
我这个整个电影模块呢

57:27.380 --> 57:29.380
就是一个index的介石

57:29.380 --> 57:31.380
它就要负责总弹全局

57:31.380 --> 57:32.380
把整个电影模块

57:32.380 --> 57:33.380
全部实现

57:33.380 --> 57:34.380
但它实现

57:34.380 --> 57:35.380
如果说全部写到这里边呢

57:35.380 --> 57:37.380
就会导致个代码量变多

57:37.380 --> 57:38.380
所以说把它分成两个模块

57:38.380 --> 57:39.380
一个是nest

57:39.380 --> 57:40.380
这个模块呢

57:40.380 --> 57:42.380
它只需要搞定这个列表

57:42.380 --> 57:44.380
你看分模块的好处就是解

57:44.380 --> 57:46.380
就是这么明显

57:46.380 --> 57:48.380
我们可以把一些复杂的问题

57:48.380 --> 57:49.380
把它分小

57:50.380 --> 57:51.380
列表这个模块呢

57:51.380 --> 57:53.380
它就负责生成这个电影列表

57:53.380 --> 57:55.380
然后它里面有什么样式呢

57:55.380 --> 57:56.380
就写到这儿

57:56.380 --> 57:57.380
然后Pager呢

57:57.380 --> 57:59.380
就是负责这个分界模块

57:59.380 --> 58:00.380
你看这个图计

58:00.380 --> 58:01.380
看得很清楚了

58:01.380 --> 58:02.380
它有一个介石

58:02.380 --> 58:04.380
来负责创建这个区域

58:04.380 --> 58:06.380
然后呢有一个index module

58:06.380 --> 58:07.380
nest

58:07.380 --> 58:08.380
它负责

58:08.380 --> 58:10.380
设置在这个区域的样式

58:10.380 --> 58:12.380
然后我们就会把样式啊功能啊

58:12.380 --> 58:13.380
全部分开

58:14.380 --> 58:15.380
当然那这里边

58:15.380 --> 58:17.380
有一些单色的写线啊

58:17.380 --> 58:18.380
就是表示一代关系

58:18.380 --> 58:19.380
就是movey

58:19.380 --> 58:20.380
整个movey模块呢

58:20.380 --> 58:22.380
index的介石

58:22.380 --> 58:23.380
它要去使用nest

58:23.380 --> 58:25.380
它要去创建列表

58:25.380 --> 58:26.380
它同时要使用pager

58:26.380 --> 58:28.380
去创建分界

58:28.380 --> 58:29.380
然后呢在这个dest里边呢

58:29.380 --> 58:30.380
它这个介石呢

58:30.380 --> 58:32.380
它要用到样式

58:32.380 --> 58:33.380
这个介石呢

58:33.380 --> 58:34.380
也要用到样式

58:34.380 --> 58:35.380
好我们先把这个结构

58:35.380 --> 58:36.380
创建出来

58:37.380 --> 58:38.380
找到这个movey

58:38.380 --> 58:39.380
目前只有个index的介石

58:39.380 --> 58:40.380
对吧

58:40.380 --> 58:41.380
创建一些文件

58:41.380 --> 58:42.380
nest

58:43.380 --> 58:44.380
你看这个文件

58:44.380 --> 58:45.380
要抗拒很舒服

58:45.380 --> 58:46.380
pager

58:47.380 --> 58:48.380
nest里边呢

58:48.380 --> 58:50.380
新建一个index的介石

58:50.380 --> 58:51.380
然后再来一个

58:51.380 --> 58:52.380
样式

58:52.380 --> 58:53.380
index.nest

58:53.380 --> 58:54.380
对吧

58:54.380 --> 58:55.380
module

58:55.380 --> 58:56.380
对吧

58:56.380 --> 58:57.380
为了避免内名重复

58:58.380 --> 58:59.380
nest

58:59.380 --> 59:00.380
复制一下吧

59:01.380 --> 59:02.380
张天过来

59:03.380 --> 59:04.380
好来吧

59:04.380 --> 59:05.380
这边呢

59:05.380 --> 59:06.380
代码就删除掉了

59:07.380 --> 59:08.380
动态讨论movey

59:08.380 --> 59:09.380
那么导弱是在

59:09.380 --> 59:10.380
导弱是他

59:10.380 --> 59:11.380
那么他就负责

59:11.380 --> 59:14.380
去搞定整个电影的事情

59:14.380 --> 59:15.380
包括列表

59:15.380 --> 59:16.380
包括分界

59:16.380 --> 59:18.380
好慢慢来吧

59:19.380 --> 59:21.380
首先我来做这个nest模块

59:21.380 --> 59:22.380
这个模块

59:22.380 --> 59:23.380
这个模块呢

59:23.380 --> 59:24.380
我给你们把诗路

59:24.380 --> 59:25.380
已经写好了

59:25.380 --> 59:26.380
就是这么一个代码

59:27.380 --> 59:28.380
到这个模块来

59:33.220 --> 59:34.220
好看一下

59:34.220 --> 59:35.220
这个模块

59:35.220 --> 59:36.220
要做的事情

59:36.220 --> 59:37.220
两件事

59:37.220 --> 59:38.220
第一件事是innet

59:38.220 --> 59:39.220
innet还要做啥呀

59:39.220 --> 59:42.220
就是创建这么一个电影的容器

59:42.220 --> 59:44.220
因为你看这些元素

59:45.220 --> 59:46.220
这些元素不都是

59:46.220 --> 59:47.220
放到一个容器里面的吧

59:47.220 --> 59:48.220
对吧

59:48.220 --> 59:49.220
创建好一个容器就完事了

59:49.220 --> 59:51.220
他就做这么一个简单操作

59:53.220 --> 59:54.220
做这么一个简单操作

59:54.220 --> 59:55.220
创建好一个容器

59:56.220 --> 59:57.220
然后呢

59:57.220 --> 59:58.220
这个函数做什么呢

59:58.220 --> 01:00:00.220
这个函数是给别导出的

01:00:00.220 --> 01:00:01.220
是给别人调用的

01:00:01.220 --> 01:00:03.220
你给我传一个电影数组

01:00:03.220 --> 01:00:04.220
我就循环这个数组

01:00:04.220 --> 01:00:06.220
给你生成一个一个的元素

01:00:06.220 --> 01:00:07.220
放进来

01:00:07.220 --> 01:00:08.220
放到容器里面去

01:00:08.220 --> 01:00:09.220
就这么简单

01:00:09.220 --> 01:00:10.220
所以说innet只要做什么呢

01:00:10.220 --> 01:00:11.220
创建容器

01:00:11.220 --> 01:00:13.220
当然我可以用接块位创建

01:00:13.220 --> 01:00:14.220
导入接块位

01:00:15.220 --> 01:00:16.220
接块位

01:00:16.220 --> 01:00:17.220
好 创建容器

01:00:19.220 --> 01:00:20.220
DIV

01:00:20.220 --> 01:00:23.500
把这个打出来

01:00:23.500 --> 01:00:24.500
嗯嗯

01:00:24.500 --> 01:00:25.500
见面弄出来吧

01:00:25.500 --> 01:00:26.500
然后呢

01:00:26.500 --> 01:00:27.500
给他加一个内央式

01:00:27.500 --> 01:00:28.500
class

01:00:28.500 --> 01:00:29.500
内央式呢

01:00:29.500 --> 01:00:30.500
我们就写到这

01:00:31.500 --> 01:00:32.500
康天了

01:00:32.500 --> 01:00:33.500
我们可以用康天的名字

01:00:33.500 --> 01:00:34.500
你不用担心重复的问题

01:00:34.500 --> 01:00:35.500
因为他最后

01:00:35.500 --> 01:00:37.500
打包结果一定没有重复

01:00:39.500 --> 01:00:41.500
给他一个宽度

01:00:41.500 --> 01:00:42.500
宽度为1000吧

01:00:42.500 --> 01:00:43.500
然后呢

01:00:43.500 --> 01:00:44.500
给他一个随便给他一个高度

01:00:44.500 --> 01:00:46.500
为了便于看到效果

01:00:46.500 --> 01:00:47.500
500个像素

01:00:47.500 --> 01:00:48.500
然后给他个背景颜色

01:00:48.500 --> 01:00:49.500
同时再背

01:00:49.500 --> 01:00:50.500
好 试一下

01:00:50.500 --> 01:00:51.500
然后呢

01:00:51.500 --> 01:00:52.500
给他加上一个内央式

01:00:52.500 --> 01:00:53.500
随着把一央式导入进来

01:00:53.500 --> 01:00:54.500
这些呢

01:00:54.500 --> 01:00:55.500
要慢慢用的很熟啊

01:00:57.500 --> 01:00:58.500
找到这个list

01:00:58.500 --> 01:00:59.500
导入进来

01:00:59.500 --> 01:01:00.500
styles

01:01:00.500 --> 01:01:01.500
第二个什么呢

01:01:01.500 --> 01:01:02.500
第二个康天的

01:01:02.500 --> 01:01:03.500
加上内央式

01:01:03.500 --> 01:01:04.500
然后呢

01:01:04.500 --> 01:01:05.500
appen2

01:01:05.500 --> 01:01:06.500
加到哪呢

01:01:06.500 --> 01:01:07.500
加到app

01:01:07.500 --> 01:01:08.500
app里面去

01:01:10.500 --> 01:01:12.500
好 为什么没效果呢

01:01:12.500 --> 01:01:13.500
为什么没效果

01:01:13.500 --> 01:01:14.500
我们看一下

01:01:14.500 --> 01:01:15.500
有没有这个dv

01:01:15.500 --> 01:01:16.500
是不是啥都没有

01:01:16.500 --> 01:01:17.500
为什么

01:01:17.500 --> 01:01:18.500
因为他没有运行啊

01:01:18.500 --> 01:01:19.500
这个list

01:01:19.500 --> 01:01:20.500
index的介绍

01:01:20.500 --> 01:01:21.500
他没有运行

01:01:21.500 --> 01:01:22.500
你看

01:01:22.500 --> 01:01:23.500
他依赖他

01:01:23.500 --> 01:01:24.500
对吧

01:01:24.500 --> 01:01:25.500
他里面有没有用到他

01:01:25.500 --> 01:01:26.500
没有吧

01:01:26.500 --> 01:01:27.500
没有

01:01:27.500 --> 01:01:28.500
所以没有形成依赖关系

01:01:28.500 --> 01:01:29.500
没有运行

01:01:29.500 --> 01:01:30.500
所以说

01:01:30.500 --> 01:01:31.500
我们这一块

01:01:31.500 --> 01:01:32.500
我们的如何文件里边

01:01:32.500 --> 01:01:33.500
导入电影

01:01:33.500 --> 01:01:34.500
好 电影模块里边

01:01:34.500 --> 01:01:36.500
是不是要生成列表

01:01:36.500 --> 01:01:37.500
是不是要生成列表

01:01:37.500 --> 01:01:38.500
所以说呢

01:01:38.500 --> 01:01:39.500
我们这里

01:01:39.500 --> 01:01:40.500
至少要做一件事

01:01:40.500 --> 01:01:41.500
就是要导入这个什么

01:01:41.500 --> 01:01:42.500
导入这个list

01:01:42.500 --> 01:01:43.500
对

01:01:44.500 --> 01:01:45.500
好 你看

01:01:45.500 --> 01:01:46.500
是不是出来了

01:01:46.500 --> 01:01:47.500
就这么简单

01:01:47.500 --> 01:01:48.500
好 那么这边呢

01:01:48.500 --> 01:01:49.500
list呢

01:01:49.500 --> 01:01:50.500
就是生成这个dv呢

01:01:50.500 --> 01:01:52.500
做的差不多了

01:01:52.500 --> 01:01:54.500
我这里不需要给他

01:01:54.500 --> 01:01:55.500
写上这个颜色

01:01:55.500 --> 01:01:56.500
也不需要给高度

01:01:58.500 --> 01:01:59.500
好 那么接下来呢

01:01:59.500 --> 01:02:00.500
就是这个函数

01:02:00.500 --> 01:02:01.500
这个函数干嘛呀

01:02:01.500 --> 01:02:03.500
这个函数是给别人调用的

01:02:03.500 --> 01:02:04.500
给谁调用的

01:02:05.500 --> 01:02:07.500
给这个无畏这个模块

01:02:07.500 --> 01:02:08.500
你看

01:02:08.500 --> 01:02:09.500
它在

01:02:09.500 --> 01:02:10.500
它在导入它

01:02:10.500 --> 01:02:11.500
对吧

01:02:11.500 --> 01:02:12.500
它在用它

01:02:12.500 --> 01:02:14.500
因为它是一个中难全局的

01:02:14.500 --> 01:02:16.500
就这个模块相当于谁呀

01:02:16.500 --> 01:02:18.500
相当于是这个

01:02:19.500 --> 01:02:21.500
现在这个模块相当于是它

01:02:21.500 --> 01:02:22.500
它在中难全局

01:02:22.500 --> 01:02:24.500
它既可以创建列表

01:02:24.500 --> 01:02:26.500
又可以创建分界

01:02:26.500 --> 01:02:27.500
怎么创建呢

01:02:27.500 --> 01:02:29.500
它导出一个函数

01:02:29.500 --> 01:02:30.500
它来调用

01:02:30.500 --> 01:02:31.500
好 来看吧

01:02:31.500 --> 01:02:32.500
我们这里呢

01:02:32.500 --> 01:02:33.500
这里导出一个函数

01:02:33.500 --> 01:02:35.500
叫创建mov标签

01:02:35.500 --> 01:02:37.500
传入一个电影数组

01:02:37.500 --> 01:02:39.500
它就负责来创建电影元素

01:02:39.500 --> 01:02:41.500
我们这里输出一句话

01:02:41.500 --> 01:02:44.500
创建电影元素

01:02:45.500 --> 01:02:46.500
加入到容器里面去

01:02:46.500 --> 01:02:47.500
好 来吧

01:02:47.500 --> 01:02:48.500
我们来调用试一下

01:02:48.500 --> 01:02:50.500
这边不是导出一个结果吗

01:02:50.500 --> 01:02:51.500
我们这里导入

01:02:51.500 --> 01:02:52.500
导入什么

01:02:52.500 --> 01:02:55.500
就是craze movie tags

01:02:55.500 --> 01:02:56.500
导入它

01:02:56.500 --> 01:02:57.500
接下来我们要做的事情

01:02:57.500 --> 01:02:59.500
就是

01:02:59.500 --> 01:03:00.500
导入API

01:03:00.500 --> 01:03:02.500
因为我们要获取电影数据

01:03:04.500 --> 01:03:05.500
API里边的什么呢

01:03:05.500 --> 01:03:06.500
movie

01:03:07.500 --> 01:03:08.500
它里边不是一个函数吗

01:03:08.500 --> 01:03:09.500
getmovies

01:03:09.500 --> 01:03:12.500
好 那么这边我们也写个函数

01:03:12.500 --> 01:03:13.500
输实话

01:03:13.500 --> 01:03:14.500
这函数不用怕丛名

01:03:14.500 --> 01:03:16.500
因为模块化之后

01:03:16.500 --> 01:03:17.500
就没有丛名问题了

01:03:17.500 --> 01:03:19.500
调用输实话

01:03:19.500 --> 01:03:21.500
好 输实话的时候要干嘛

01:03:21.500 --> 01:03:22.500
getmovies

01:03:22.500 --> 01:03:24.500
是不是获取电影

01:03:24.500 --> 01:03:25.500
等待它

01:03:25.500 --> 01:03:27.500
因为它是一个异部函数

01:03:27.500 --> 01:03:29.500
等待它

01:03:29.500 --> 01:03:30.500
movies

01:03:30.500 --> 01:03:32.500
就是想用输去

01:03:32.500 --> 01:03:34.500
输出一下想用输去看一下

01:03:34.500 --> 01:03:37.060
你看

01:03:37.060 --> 01:03:39.060
想用输去是不是又出来了

01:03:39.060 --> 01:03:40.060
这里是不是有个电影输出

01:03:40.060 --> 01:03:41.060
moviness

01:03:41.060 --> 01:03:42.060
对不对

01:03:42.060 --> 01:03:44.060
当然我这里边最好给上一个配级

01:03:44.060 --> 01:03:45.060
第几页

01:03:45.060 --> 01:03:46.060
一开始

01:03:46.060 --> 01:03:47.060
是不是第一页

01:03:47.060 --> 01:03:48.060
第一页没钱收到条了

01:03:48.060 --> 01:03:50.060
我看一下这边没钱收到条

01:03:50.060 --> 01:03:52.060
每行是

01:03:52.060 --> 01:03:54.060
五个电影

01:03:54.060 --> 01:03:56.060
一二三四五六行

01:03:56.060 --> 01:03:58.060
那么就是五六三十

01:03:58.060 --> 01:03:59.060
所以说我这边实际上

01:03:59.060 --> 01:04:01.060
每页钱是三十条

01:04:01.060 --> 01:04:03.060
对吧 拿到一个响应结果

01:04:03.060 --> 01:04:04.060
我再来看一下

01:04:04.060 --> 01:04:05.060
保存

01:04:05.060 --> 01:04:06.060
看一下数据

01:04:06.060 --> 01:04:08.060
总数349

01:04:08.060 --> 01:04:10.060
然后这个是不是有三十条数据

01:04:10.060 --> 01:04:11.060
对吧

01:04:11.060 --> 01:04:12.060
好 那么接下来

01:04:12.060 --> 01:04:14.060
我就是把这个数组

01:04:14.060 --> 01:04:15.060
调用这个函数

01:04:15.060 --> 01:04:17.060
这个函数是不是另外一个模块倒出来的

01:04:17.060 --> 01:04:18.060
调用它

01:04:18.060 --> 01:04:20.060
把这个数组传进去

01:04:20.060 --> 01:04:22.060
data里边的什么呢

01:04:22.060 --> 01:04:24.060
data里边的moviness

01:04:24.060 --> 01:04:25.060
moviness

01:04:25.060 --> 01:04:26.060
传进去

01:04:26.060 --> 01:04:28.060
好 保存

01:04:28.060 --> 01:04:29.060
你看一下这边

01:04:29.060 --> 01:04:30.060
这个函数运行了

01:04:30.060 --> 01:04:32.060
创建电影的连输

01:04:32.060 --> 01:04:33.060
这个函数是不是运行了

01:04:33.060 --> 01:04:34.060
那么接下来我要做的事情

01:04:34.060 --> 01:04:35.060
是不是在这个函数里边

01:04:35.060 --> 01:04:36.060
循环这个数组

01:04:36.060 --> 01:04:37.060
生成元素

01:04:37.060 --> 01:04:39.060
加入到这个容器里边

01:04:39.060 --> 01:04:40.060
好 那么目前呢

01:04:40.060 --> 01:04:42.060
大家先暂停视频

01:04:42.060 --> 01:04:43.060
把这个结构写出来

01:04:43.060 --> 01:04:44.060
工程结构

01:04:44.060 --> 01:04:46.060
还包括这个

01:04:46.060 --> 01:04:48.060
垃圾里边的这个基本结构

01:04:48.060 --> 01:04:49.060
把它写出来

01:04:49.060 --> 01:04:50.060
好

01:04:50.060 --> 01:04:52.060
试一下啊

01:04:52.060 --> 01:04:53.060
好了没

01:04:53.060 --> 01:04:55.060
好 我们接着写

01:04:55.060 --> 01:04:57.060
接下来我们就去完成这个函数

01:04:57.060 --> 01:04:58.060
这个函数

01:04:58.060 --> 01:04:59.060
它就给了我一个数组了

01:04:59.060 --> 01:05:01.060
对吧 这边传进来了

01:05:01.060 --> 01:05:02.060
这边是不是把数组传进来了

01:05:02.060 --> 01:05:03.060
传进来过后了

01:05:03.060 --> 01:05:04.060
这边我们就可以

01:05:04.060 --> 01:05:05.060
循环数组创建了

01:05:05.060 --> 01:05:06.060
然后这里边

01:05:06.060 --> 01:05:07.060
我可以用一些简单的办法

01:05:07.060 --> 01:05:09.060
这里不是一个数组吗

01:05:09.060 --> 01:05:10.060
对不对

01:05:10.060 --> 01:05:12.060
我就把数组打印出来吧

01:05:12.060 --> 01:05:13.060
边看着这个数组

01:05:13.060 --> 01:05:15.060
边来做

01:05:15.060 --> 01:05:17.060
过来

01:05:17.060 --> 01:05:19.060
不是一个数组吗

01:05:19.060 --> 01:05:20.060
我现在要做的事情

01:05:20.060 --> 01:05:21.060
就是可以把它

01:05:21.060 --> 01:05:23.060
直接拼接成一个A天秒

01:05:23.060 --> 01:05:24.060
用什么拼接呢

01:05:24.060 --> 01:05:26.060
用MAP

01:05:26.060 --> 01:05:27.060
把数组的每一项

01:05:27.060 --> 01:05:28.060
不是个对象嘛

01:05:28.060 --> 01:05:29.060
对不对

01:05:29.060 --> 01:05:30.060
数组的每一项是个对象

01:05:30.060 --> 01:05:32.060
把这个对象变成一个什么呢

01:05:32.060 --> 01:05:33.060
我把它变成一个

01:05:33.060 --> 01:05:35.060
变成一个啥玩意儿呢

01:05:35.060 --> 01:05:37.060
变成一个DIV

01:05:37.060 --> 01:05:40.440
把它变成一个DIV得了

01:05:40.440 --> 01:05:42.440
把它变成一个DIV

01:05:42.440 --> 01:05:45.440
这个DIV里边我看一下

01:05:45.440 --> 01:05:47.440
我们想

01:05:47.440 --> 01:05:48.440
一个图片

01:05:48.440 --> 01:05:49.440
其实每个DIV里边

01:05:49.440 --> 01:05:51.440
就是一个图片

01:05:51.440 --> 01:05:52.440
就是一个图片

01:05:52.440 --> 01:05:53.440
有个文字

01:05:53.440 --> 01:05:54.440
有一个评分

01:05:54.440 --> 01:05:55.440
对不对

01:05:55.440 --> 01:05:56.440
图片文字评分

01:05:56.440 --> 01:05:57.440
好 来吧

01:05:57.440 --> 01:06:02.160
DIV里边有哪些东西呢

01:06:02.160 --> 01:06:04.160
每个DIV里边有一个图片

01:06:04.160 --> 01:06:06.160
图片用个A元数包一下

01:06:06.160 --> 01:06:07.160
这样写吧

01:06:07.160 --> 01:06:08.160
可能清楚一点

01:06:08.160 --> 01:06:09.160
A元数包一下

01:06:09.160 --> 01:06:10.160
然后呢

01:06:10.160 --> 01:06:11.160
image

01:06:11.160 --> 01:06:13.160
src

01:06:13.160 --> 01:06:15.160
一个图片路径

01:06:15.160 --> 01:06:16.160
然后除了图片之外呢

01:06:16.160 --> 01:06:17.160
还有一个P元数

01:06:17.160 --> 01:06:18.160
P元数呢

01:06:18.160 --> 01:06:20.160
我给它那样是先不着急

01:06:20.160 --> 01:06:21.160
给了一个P元数

01:06:21.160 --> 01:06:22.160
P元数呢

01:06:22.160 --> 01:06:24.160
这里边是标题

01:06:24.160 --> 01:06:25.160
然后这里边呢

01:06:25.160 --> 01:06:26.160
是一个

01:06:26.160 --> 01:06:27.160
再一个P元数

01:06:27.160 --> 01:06:29.160
里边是评分

01:06:29.160 --> 01:06:31.160
是不是写成这么一种节奏

01:06:31.160 --> 01:06:32.160
好 我们来看一下

01:06:32.160 --> 01:06:36.430
这样子生成出来的结果

01:06:36.430 --> 01:06:38.430
输出一下这个result

01:06:38.430 --> 01:06:39.430
好 你看

01:06:39.430 --> 01:06:40.430
是不是把每一个对象

01:06:40.430 --> 01:06:41.430
变成了一个什么

01:06:41.430 --> 01:06:43.430
变成了一个制服串了

01:06:43.430 --> 01:06:44.430
就把每一个对象

01:06:44.430 --> 01:06:45.430
变成了一个制服串了

01:06:45.430 --> 01:06:46.430
对不对

01:06:46.430 --> 01:06:47.430
只不过这个制服串呢

01:06:47.430 --> 01:06:48.430
里边有些内容呢

01:06:48.430 --> 01:06:49.430
是还控制的

01:06:49.430 --> 01:06:50.430
比方到标题

01:06:50.430 --> 01:06:51.430
标题这里的国家怎么办呢

01:06:51.430 --> 01:06:52.430
就是很简单

01:06:52.430 --> 01:06:53.430
可以做什么

01:06:53.430 --> 01:06:54.430
可以做拼接

01:06:54.430 --> 01:06:55.430
前面再输出一下

01:06:55.430 --> 01:06:56.430
电影输出

01:06:56.430 --> 01:07:04.670
这电影输出里边

01:07:04.670 --> 01:07:05.670
你看每一个是个对象吗

01:07:05.670 --> 01:07:06.670
对象里边

01:07:06.670 --> 01:07:07.670
不是有些各种属性吗

01:07:07.670 --> 01:07:08.670
对象里边

01:07:08.670 --> 01:07:09.670
不是有各种属性吗

01:07:09.670 --> 01:07:10.670
我来拼接

01:07:10.670 --> 01:07:11.670
这个评言书里边拼接什么了

01:07:11.670 --> 01:07:12.670
电影的什么

01:07:12.670 --> 01:07:13.670
title 标题

01:07:13.670 --> 01:07:14.670
你看吧

01:07:14.670 --> 01:07:15.670
对照一下

01:07:15.670 --> 01:07:16.670
然后评分这里

01:07:16.670 --> 01:07:17.670
我拼接什么了

01:07:17.670 --> 01:07:18.670
am.rate

01:07:18.670 --> 01:07:19.670
评分

01:07:19.670 --> 01:07:20.670
对吧

01:07:20.670 --> 01:07:22.670
好 然后图片地址

01:07:22.670 --> 01:07:24.670
这里边是有的

01:07:24.670 --> 01:07:26.670
图片地址是cover

01:07:26.670 --> 01:07:29.670
图片地址这里拼接

01:07:29.670 --> 01:07:31.670
am.cover

01:07:31.670 --> 01:07:32.670
对不对

01:07:32.670 --> 01:07:33.670
好 保存

01:07:33.670 --> 01:07:34.670
再看一下

01:07:36.670 --> 01:07:37.670
你看这里边

01:07:37.670 --> 01:07:38.670
是不是就引出来了

01:07:38.670 --> 01:07:39.670
在看

01:07:39.670 --> 01:07:40.670
其实我们页面上

01:07:40.670 --> 01:07:42.670
就已经看到一些东西了

01:07:42.670 --> 01:07:43.670
还没有看到

01:07:43.670 --> 01:07:44.670
因为我们现在只

01:07:44.670 --> 01:07:46.670
还没有加到容器里面去

01:07:46.670 --> 01:07:47.670
是不是就引出来了

01:07:47.670 --> 01:07:49.670
好 接下来我们继续

01:07:49.670 --> 01:07:50.670
那里看这个a元数

01:07:50.670 --> 01:07:51.670
a元数是不是可以给它加上

01:07:51.670 --> 01:07:53.670
一个和wave属性

01:07:53.670 --> 01:07:54.670
一个超链接

01:07:54.670 --> 01:07:55.670
这个超链接

01:07:55.670 --> 01:07:56.670
我们可以看到对象里边

01:07:56.670 --> 01:07:58.670
其实有一个超链接的属性

01:07:58.670 --> 01:07:59.670
叫UIL

01:07:59.670 --> 01:08:00.670
我们就直接

01:08:00.670 --> 01:08:03.670
直接连到double去了

01:08:03.670 --> 01:08:06.670
我们就直接该写上am.UIL

01:08:06.670 --> 01:08:08.670
然后点击过后

01:08:08.670 --> 01:08:10.670
我给它可以让它

01:08:10.670 --> 01:08:12.670
在新窗口打开了

01:08:12.670 --> 01:08:14.670
blank

01:08:14.670 --> 01:08:15.670
其实点这个标题

01:08:15.670 --> 01:08:16.670
也可以打开一个超链接

01:08:16.670 --> 01:08:17.670
所以说

01:08:17.670 --> 01:08:19.670
把这里的也写到这

01:08:19.670 --> 01:08:20.670
这里写个a元数

01:08:20.670 --> 01:08:21.670
你看是不是可以用

01:08:21.670 --> 01:08:23.670
字不算凭借来搞定

01:08:23.670 --> 01:08:24.670
你看这里

01:08:24.670 --> 01:08:25.670
每一个对象

01:08:25.670 --> 01:08:26.670
它就变成了这个东西了

01:08:26.670 --> 01:08:27.670
就变成了一个div

01:08:27.670 --> 01:08:28.670
一个a元数

01:08:28.670 --> 01:08:29.670
一个什么什么

01:08:29.670 --> 01:08:31.670
那么这是形成

01:08:31.670 --> 01:08:32.670
一个字不算的数组

01:08:32.670 --> 01:08:33.670
我接下来要做的事情

01:08:33.670 --> 01:08:35.670
就是把个字不算数组

01:08:36.670 --> 01:08:38.670
之前好像你们做过

01:08:38.670 --> 01:08:39.670
类似的事情

01:08:39.670 --> 01:08:40.670
把它变成一个

01:08:40.670 --> 01:08:41.670
很长很长的字不算

01:08:41.670 --> 01:08:42.670
你看

01:08:43.670 --> 01:08:45.670
是不是变成一个atm片段了

01:08:45.670 --> 01:08:46.670
我接下来要做的事情

01:08:46.670 --> 01:08:47.670
就是把这个片段加到哪

01:08:47.670 --> 01:08:49.670
加到容器里面去

01:08:49.670 --> 01:08:50.670
容器在哪呢

01:08:50.670 --> 01:08:52.670
我可以用一个面料

01:08:52.670 --> 01:08:53.670
扛天的

01:08:54.670 --> 01:08:56.670
我给这个扛天的复制

01:08:56.670 --> 01:08:57.670
初识化的时候

01:08:57.670 --> 01:08:58.670
是不是就

01:08:58.670 --> 01:08:59.670
那么权威那样就容器了

01:08:59.670 --> 01:09:01.670
当然它不会污染权威

01:09:01.670 --> 01:09:03.670
它只是在这个模块里面是权威

01:09:03.670 --> 01:09:04.670
那么这里

01:09:04.670 --> 01:09:05.670
我就可以

01:09:05.670 --> 01:09:06.670
要用这个函数的时候

01:09:06.670 --> 01:09:07.670
我就直接给它

01:09:07.670 --> 01:09:08.670
这个容器的设置

01:09:08.670 --> 01:09:09.670
atm

01:09:09.670 --> 01:09:10.670
它是接块对象

01:09:10.670 --> 01:09:12.670
把这个维造式放进去

01:09:13.670 --> 01:09:14.670
好

01:09:14.670 --> 01:09:15.670
再来看一下吧

01:09:16.670 --> 01:09:19.560
最初啊

01:09:19.560 --> 01:09:21.560
跟我样式有点难看而已

01:09:21.560 --> 01:09:23.560
我们接下来再来

01:09:23.560 --> 01:09:24.560
去设置它的样式

01:09:24.560 --> 01:09:25.560
来吧

01:09:25.560 --> 01:09:26.560
首先是这个div

01:09:26.560 --> 01:09:27.560
它不是有个样式吗

01:09:27.560 --> 01:09:28.560
对不对

01:09:28.560 --> 01:09:29.560
扛天的

01:09:29.560 --> 01:09:30.560
我就直接给它宽度1000

01:09:30.560 --> 01:09:31.560
然后呢

01:09:31.560 --> 01:09:32.560
margin

01:09:32.560 --> 01:09:33.560
上下的话

01:09:33.560 --> 01:09:34.560
我给它1M吧

01:09:34.560 --> 01:09:35.560
或者12

01:09:35.560 --> 01:09:36.560
30个像素

01:09:36.560 --> 01:09:38.560
上下30个像素

01:09:38.560 --> 01:09:39.560
然后左右来为O2

01:09:39.560 --> 01:09:40.560
这样子它居中

01:09:40.560 --> 01:09:41.560
对吧

01:09:41.560 --> 01:09:42.560
这样子

01:09:42.560 --> 01:09:43.560
上下分屏

01:09:45.560 --> 01:09:46.560
1000个像素居中

01:09:46.560 --> 01:09:47.560
给它一个背景颜色

01:09:47.560 --> 01:09:48.560
你看一下

01:09:49.560 --> 01:09:50.560
同时

01:09:51.560 --> 01:09:52.560
你看 是不是整个居中的

01:09:53.560 --> 01:09:54.560
对吧

01:09:54.560 --> 01:09:55.560
那么把它做成一个

01:09:55.560 --> 01:09:56.560
把它做成一个就是

01:09:56.560 --> 01:09:57.560
网格布局吧

01:09:57.560 --> 01:09:58.560
Display

01:09:59.560 --> 01:10:01.560
当然你可以用任何你

01:10:01.560 --> 01:10:02.560
你喜欢的布局

01:10:02.560 --> 01:10:03.560
布局方式有很多的

01:10:03.560 --> 01:10:04.560
然后再设置

01:10:04.560 --> 01:10:05.560
列的

01:10:05.560 --> 01:10:06.560
Grid

01:10:06.560 --> 01:10:07.560
Templates

01:10:07.560 --> 01:10:08.560
Clumps

01:10:08.560 --> 01:10:09.560
纪念有

01:10:10.560 --> 01:10:11.560
每列5个

01:10:12.560 --> 01:10:13.560
每列的

01:10:13.560 --> 01:10:14.560
占1分

01:10:16.560 --> 01:10:17.560
5等分

01:10:19.560 --> 01:10:20.560
宽度1000

01:10:20.560 --> 01:10:21.560
然后5等分

01:10:21.560 --> 01:10:22.560
但是它里边的图片

01:10:22.560 --> 01:10:23.560
有点大

01:10:23.560 --> 01:10:24.560
我们把图片

01:10:24.560 --> 01:10:25.560
稍微设置小一点

01:10:25.560 --> 01:10:26.560
找到它里边的

01:10:26.560 --> 01:10:27.560
每一个图片

01:10:29.560 --> 01:10:30.560
我们就直接用

01:10:30.560 --> 01:10:31.560
这样子来设置吧

01:10:32.560 --> 01:10:33.560
康天桥下面的图片

01:10:33.560 --> 01:10:34.560
给它设置一个宽高

01:10:34.560 --> 01:10:35.560
150个像素

01:10:35.560 --> 01:10:36.560
或者是

01:10:36.560 --> 01:10:37.560
我们订一个变量吧

01:10:39.560 --> 01:10:40.560
Image Size

01:10:41.560 --> 01:10:42.560
就Item Size

01:10:45.450 --> 01:10:46.450
每一箱的宽度

01:10:46.450 --> 01:10:47.450
150个像素

01:10:49.450 --> 01:10:50.450
一份变于设置

01:10:51.450 --> 01:10:54.950
给这图片的一个宽度

01:10:55.950 --> 01:10:56.950
高度

01:10:57.950 --> 01:10:58.950
图片的高度

01:10:58.950 --> 01:10:59.950
也给它设置一下

01:10:59.950 --> 01:11:00.950
高度的话

01:11:00.950 --> 01:11:01.950
比方说是用200个像素

01:11:05.540 --> 01:11:06.540
差不多

01:11:07.540 --> 01:11:08.540
接下来让我们

01:11:08.540 --> 01:11:09.540
继续往后边设置

01:11:09.540 --> 01:11:10.540
然后它整个的

01:11:10.540 --> 01:11:11.540
这一块的文本局中

01:11:14.540 --> 01:11:15.540
给它一个文本颜色

01:11:16.540 --> 01:11:17.540
文本颜色的话

01:11:20.540 --> 01:11:21.540
稍微淡一点

01:11:22.540 --> 01:11:23.540
差不多有这么个意思

01:11:24.540 --> 01:11:25.540
这里还有一个小细节

01:11:26.540 --> 01:11:27.540
就是这里的

01:11:28.540 --> 01:11:29.540
这里写错了

01:11:30.540 --> 01:11:31.540
我说怎么点击

01:11:31.540 --> 01:11:33.540
过后没有在新窗口打开

01:11:33.540 --> 01:11:34.540
点击

01:11:35.540 --> 01:11:36.540
其实这里已经可以

01:11:36.540 --> 01:11:37.540
还一年了

01:11:40.540 --> 01:11:41.540
然后的话

01:11:41.540 --> 01:11:43.540
我看一下这个网格布局

01:11:44.540 --> 01:11:45.540
还有没有什么东西要设置的

01:11:46.540 --> 01:11:47.540
网格布局

01:11:48.540 --> 01:11:50.540
这个地方

01:11:51.540 --> 01:11:52.540
你看到它里边的

01:11:52.540 --> 01:11:53.540
每一箱

01:11:54.540 --> 01:11:55.540
到时也没啥问题

01:11:55.540 --> 01:11:56.540
其中的

01:11:56.540 --> 01:11:57.540
没啥问题

01:11:57.540 --> 01:11:58.540
没啥问题

01:12:00.540 --> 01:12:01.540
然后就把它字体

01:12:01.540 --> 01:12:02.540
设为小一点

01:12:02.540 --> 01:12:03.540
方式 Size

01:12:03.540 --> 01:12:04.540
14个像素

01:12:05.540 --> 01:12:06.540
字体稍微小一点

01:12:07.540 --> 01:12:08.540
接下来就是设置

01:12:08.540 --> 01:12:09.540
这个标题

01:12:09.540 --> 01:12:10.540
设置这个标题

01:12:10.540 --> 01:12:11.540
和设置这个评分

01:12:12.540 --> 01:12:13.540
我给标题评分的

01:12:13.540 --> 01:12:14.540
分别两个那样式

01:12:14.540 --> 01:12:15.540
一个是标题

01:12:15.540 --> 01:12:16.540
一个是评分

01:12:17.540 --> 01:12:18.540
那么现在有两个那样式的话

01:12:18.540 --> 01:12:19.540
这边是比较加上

01:12:19.540 --> 01:12:20.540
加上那样式

01:12:21.540 --> 01:12:22.540
这个是

01:12:23.540 --> 01:12:24.540
标题

01:12:25.540 --> 01:12:26.540
再加上一个 Class

01:12:28.540 --> 01:12:30.540
评界一定要评界

01:12:31.540 --> 01:12:32.540
Styles

01:12:33.540 --> 01:12:34.540
开头

01:12:37.560 --> 01:12:38.560
因为它是开启到

01:12:38.560 --> 01:12:39.560
Styles module的

01:12:39.560 --> 01:12:41.560
然后这里是评分

01:12:41.560 --> 01:12:42.560
加上

01:12:43.560 --> 01:12:44.560
Styles Rate

01:12:46.560 --> 01:12:47.560
这样我们在这边写

01:12:47.560 --> 01:12:48.560
标题这一块

01:12:48.560 --> 01:12:49.560
我给它设置个 margin

01:12:49.560 --> 01:12:51.560
上下 margin 为

01:12:52.560 --> 01:12:53.560
一言

01:12:53.560 --> 01:12:54.560
左右为零

01:12:55.560 --> 01:12:56.560
太长了

01:12:56.560 --> 01:12:57.560
那我就给它设置

01:12:57.560 --> 01:12:58.560
分开设置

01:12:58.560 --> 01:13:00.560
把 margin top 为一言

01:13:00.560 --> 01:13:01.560
margin

01:13:01.560 --> 01:13:02.560
划成了为

01:13:03.560 --> 01:13:04.560
十个像素

01:13:04.560 --> 01:13:05.560
看一下

01:13:06.560 --> 01:13:08.560
这样子也不是很好

01:13:08.560 --> 01:13:09.560
五个像素

01:13:11.560 --> 01:13:12.560
差不多

01:13:13.560 --> 01:13:15.560
然后那每一项

01:13:15.560 --> 01:13:16.560
它里面的每一项

01:13:16.560 --> 01:13:17.560
就这个DIV

01:13:17.560 --> 01:13:18.560
整个这个DIV

01:13:18.560 --> 01:13:19.560
整个这个DIV

01:13:19.560 --> 01:13:20.560
是其中的一项电影

01:13:20.560 --> 01:13:21.560
对吧

01:13:21.560 --> 01:13:22.560
给它设置个那样式

01:13:24.560 --> 01:13:25.560
Styles

01:13:25.560 --> 01:13:26.560
Item

01:13:27.560 --> 01:13:29.560
这边给它设置个 Item 样式

01:13:30.560 --> 01:13:31.560
给它设置个 margin bottom

01:13:31.560 --> 01:13:32.560
或者是

01:13:32.560 --> 01:13:34.560
我们不用去设置这个东西

01:13:34.560 --> 01:13:36.560
也可以不用设置个那样式

01:13:36.560 --> 01:13:37.560
直接在网格布局里面

01:13:37.560 --> 01:13:38.560
设置这个

01:13:39.560 --> 01:13:40.560
叫做 row gap

01:13:41.560 --> 01:13:43.560
行间的渐细

01:13:43.560 --> 01:13:44.560
比方说是

01:13:45.560 --> 01:13:46.560
二十个像素

01:13:47.560 --> 01:13:48.560
这样子

01:13:48.560 --> 01:13:49.560
稍微有点距离了

01:13:49.560 --> 01:13:50.560
三十个像素

01:13:51.560 --> 01:13:54.770
差不多

01:13:55.770 --> 01:13:56.770
然后这边

01:13:56.770 --> 01:13:57.770
这边的话

01:13:57.770 --> 01:13:58.770
margin top

01:13:59.770 --> 01:14:00.770
干脆这样

01:14:00.770 --> 01:14:01.770
margin的话

01:14:01.770 --> 01:14:02.770
我上下就是

01:14:02.770 --> 01:14:03.770
margin top 的话

01:14:03.770 --> 01:14:04.770
比较设置个

01:14:05.770 --> 01:14:06.770
十六个像素

01:14:10.770 --> 01:14:11.770
或者是十个像素

01:14:13.770 --> 01:14:14.770
稍微控制一下

01:14:14.770 --> 01:14:15.770
好差不多

01:14:15.770 --> 01:14:16.770
然后里面的瑞城的评分

01:14:16.770 --> 01:14:17.770
这一块呢

01:14:17.770 --> 01:14:18.770
我给它设置一个

01:14:20.770 --> 01:14:21.770
这些大小

01:14:21.770 --> 01:14:22.770
十二个像素

01:14:23.770 --> 01:14:24.770
评分

01:14:24.770 --> 01:14:25.770
然后呢

01:14:25.770 --> 01:14:26.770
给它设置一个颜色

01:14:26.770 --> 01:14:27.770
颜色的话

01:14:27.770 --> 01:14:28.770
我也不知道

01:14:28.770 --> 01:14:29.770
这边用的啥颜色

01:14:29.770 --> 01:14:30.770
我都不知道

01:14:30.770 --> 01:14:31.770
这边啥颜色

01:14:32.770 --> 01:14:33.770
检查一下吧

01:14:34.770 --> 01:14:35.770
这边颜色是这个

01:14:36.770 --> 01:14:37.770
复制一下吧

01:14:40.400 --> 01:14:41.400
这就没什么基础含量

01:14:41.400 --> 01:14:42.400
好就差不多了

01:14:42.400 --> 01:14:44.400
这个列表说就出来了

01:14:44.400 --> 01:14:45.400
它整个这个模块

01:14:45.400 --> 01:14:47.400
它提供了一个方法

01:14:47.400 --> 01:14:48.400
这个方法呢

01:14:48.400 --> 01:14:49.400
只要一调用它

01:14:49.400 --> 01:14:50.400
传入一个电影素组

01:14:50.400 --> 01:14:51.400
它就能够根据这个电影素组

01:14:51.400 --> 01:14:52.400
生成一个

01:14:53.400 --> 01:14:55.400
就是把元素生成好

01:14:56.400 --> 01:14:57.400
这是电影列表

01:14:57.400 --> 01:14:58.400
就说完了

01:14:58.400 --> 01:14:59.400
好 同学们暂停视频

01:14:59.400 --> 01:15:00.400
这一块呢

01:15:00.400 --> 01:15:01.400
还是

01:15:01.400 --> 01:15:03.400
没有太大的难度

01:15:03.400 --> 01:15:04.400
就是

01:15:04.400 --> 01:15:06.400
你要去拼接这个直播串

01:15:06.400 --> 01:15:07.400
慢慢去拼接

01:15:07.400 --> 01:15:09.400
把这一块东西把它做好

01:15:10.400 --> 01:15:11.400
好了没

01:15:11.400 --> 01:15:13.400
好 接下来最后

01:15:13.400 --> 01:15:15.400
就是分页了

01:15:15.400 --> 01:15:17.400
好 接下来我们来搞定分页

01:15:17.400 --> 01:15:23.140
分页

01:15:23.140 --> 01:15:24.140
分页模块呢

01:15:24.140 --> 01:15:26.140
我已经把诗录给你们提供好了

01:15:26.140 --> 01:15:28.140
同样的道理

01:15:28.140 --> 01:15:30.140
你在这一个分页

01:15:30.140 --> 01:15:31.140
在介石里面

01:15:31.140 --> 01:15:32.140
完成分页

01:15:35.540 --> 01:15:37.920
这个打开

01:15:37.920 --> 01:15:38.920
分页这里边呢

01:15:38.920 --> 01:15:40.920
也是有两个函数组成

01:15:40.920 --> 01:15:41.920
一个是音列石

01:15:41.920 --> 01:15:42.920
这个函数呢

01:15:42.920 --> 01:15:44.920
跟那个刚才那个列表模块是一样的

01:15:44.920 --> 01:15:46.920
它也是负责创建容器的

01:15:46.920 --> 01:15:47.920
因为你分页

01:15:47.920 --> 01:15:48.920
分页整个

01:15:48.920 --> 01:15:49.920
这个东西呢

01:15:49.920 --> 01:15:50.920
它也是要放到一个容器里面

01:15:50.920 --> 01:15:51.920
对吧

01:15:51.920 --> 01:15:52.920
就这个东西

01:15:52.920 --> 01:15:53.920
它也要放到一个DIV里面吧

01:15:53.920 --> 01:15:54.920
就是我们这个音列石方法呢

01:15:54.920 --> 01:15:55.920
就是创建这个DIV

01:15:55.920 --> 01:15:56.920
创建容器

01:15:56.920 --> 01:15:57.920
就完事了

01:15:57.920 --> 01:15:58.920
其他的你不用管

01:15:58.920 --> 01:15:59.920
好 我们来写一下

01:15:59.920 --> 01:16:01.920
音列石的这个函数

01:16:01.920 --> 01:16:02.920
还是比较简单的

01:16:02.920 --> 01:16:03.920
我们导入接块

01:16:05.920 --> 01:16:06.920
当然毫无疑问

01:16:06.920 --> 01:16:08.920
我们要去导入这个style

01:16:09.920 --> 01:16:11.920
这个index module的那些

01:16:11.920 --> 01:16:12.920
一些熟练的过后来

01:16:12.920 --> 01:16:14.920
这些就是随道取成的事情

01:16:14.920 --> 01:16:16.920
创建一个容器

01:16:16.920 --> 01:16:17.920
DIV

01:16:17.920 --> 01:16:18.920
给它加上一个内样式

01:16:18.920 --> 01:16:20.920
add plus

01:16:20.920 --> 01:16:22.920
给它取个名字叫做pager吧

01:16:22.920 --> 01:16:23.920
我马上就来写这个内样式

01:16:23.920 --> 01:16:24.920
pager

01:16:26.920 --> 01:16:27.920
然后的话

01:16:27.920 --> 01:16:29.920
给它加入到append to

01:16:30.920 --> 01:16:31.920
加入到什么

01:16:31.920 --> 01:16:32.920
app里边去

01:16:33.920 --> 01:16:34.920
加入到这里边去

01:16:35.920 --> 01:16:36.920
好

01:16:36.920 --> 01:16:37.920
这边我们

01:16:37.920 --> 01:16:39.920
pager给它设置个内样式

01:16:39.920 --> 01:16:40.920
内样式的话

01:16:40.920 --> 01:16:42.920
我看就给它设置个margin吧

01:16:42.920 --> 01:16:44.920
上下为

01:16:44.920 --> 01:16:46.920
二十个像书

01:16:46.920 --> 01:16:47.920
左右为您

01:16:47.920 --> 01:16:48.920
好 行了

01:16:48.920 --> 01:16:49.920
我们来看一下

01:16:49.920 --> 01:16:50.920
首先能不能生成这个DIV

01:16:55.280 --> 01:16:56.280
看一下animate

01:16:56.280 --> 01:16:57.280
有没有这个DIV

01:16:57.280 --> 01:16:58.280
没有

01:16:58.280 --> 01:16:59.280
它只有上面一个电影列表

01:16:59.280 --> 01:17:00.280
那下面这个分页

01:17:00.280 --> 01:17:01.280
DIV跑哪去了

01:17:01.280 --> 01:17:02.280
还是老问题

01:17:02.280 --> 01:17:04.280
没有导入这个介石

01:17:04.280 --> 01:17:05.280
介石没有形成一代关系

01:17:05.280 --> 01:17:06.280
所以我们在电影

01:17:06.280 --> 01:17:07.280
整个不电影模块里边

01:17:07.280 --> 01:17:08.280
刚才我们是不是

01:17:08.280 --> 01:17:09.280
初识的话

01:17:09.280 --> 01:17:10.280
整个电影模块的时候

01:17:10.280 --> 01:17:11.280
雕用这个方法

01:17:11.280 --> 01:17:12.280
生成电影列表

01:17:12.280 --> 01:17:14.280
所以我们还得

01:17:14.280 --> 01:17:15.280
导入什么

01:17:15.280 --> 01:17:16.280
导入这个

01:17:17.280 --> 01:17:18.280
导入个pager

01:17:19.280 --> 01:17:20.280
对不对

01:17:20.280 --> 01:17:21.280
好 来再看

01:17:24.040 --> 01:17:25.040
是不是有这个pager

01:17:25.040 --> 01:17:26.040
DIV出来了

01:17:26.040 --> 01:17:27.040
对吧 在下面

01:17:28.040 --> 01:17:29.040
没问题吧

01:17:29.040 --> 01:17:30.040
好 那么现在

01:17:30.040 --> 01:17:31.040
我们接下来要做的事情

01:17:32.040 --> 01:17:33.040
pager里边

01:17:33.040 --> 01:17:34.040
我们还需要提供另外一个函数

01:17:34.040 --> 01:17:35.040
这个函数

01:17:35.040 --> 01:17:36.040
它跟那个电影差不多

01:17:36.040 --> 01:17:38.040
电影是不是创建一个个元素

01:17:38.040 --> 01:17:39.040
创建到这个容器里边

01:17:39.040 --> 01:17:41.040
那么这个函数也一样

01:17:41.040 --> 01:17:43.040
它要创建一个一个的元素

01:17:43.040 --> 01:17:45.040
放到什么 放到这个容器里边

01:17:45.040 --> 01:17:46.040
说不这个容器

01:17:46.040 --> 01:17:47.040
我们老规矩

01:17:47.040 --> 01:17:48.040
是不是还是要写那个

01:17:48.040 --> 01:17:49.040
扛天上

01:17:49.040 --> 01:17:50.040
保存一下

01:17:50.040 --> 01:17:52.040
跟刚才的电影是一样的

01:17:52.040 --> 01:17:54.480
好 那么一会儿

01:17:54.480 --> 01:17:56.480
这个函数是给别人用的

01:17:56.480 --> 01:17:57.480
所以说一会儿

01:17:57.480 --> 01:17:58.480
在电影模块里边

01:17:58.480 --> 01:17:59.480
我们不仅要

01:17:59.480 --> 01:18:01.480
不仅要调用这个函数

01:18:01.480 --> 01:18:02.480
还要调用什么

01:18:02.480 --> 01:18:03.480
还要调用

01:18:03.480 --> 01:18:04.480
创建分页的这个函数

01:18:04.480 --> 01:18:06.480
还要调用这个函数

01:18:13.130 --> 01:18:16.760
这是创建列表

01:18:16.760 --> 01:18:17.760
这里是什么

01:18:17.760 --> 01:18:18.760
创建分页

01:18:18.760 --> 01:18:19.760
创建分页

01:18:19.760 --> 01:18:20.760
Rest

01:18:21.760 --> 01:18:22.760
那么分页的数据

01:18:22.760 --> 01:18:23.760
现在来自于哪呢

01:18:23.760 --> 01:18:24.760
我们输出一下

01:18:28.200 --> 01:18:29.200
好看一下

01:18:31.770 --> 01:18:33.770
这是我们从服务器拿到的数据

01:18:33.770 --> 01:18:34.770
那么分页

01:18:34.770 --> 01:18:35.770
它需要什么数据呢

01:18:35.770 --> 01:18:36.770
它创建分页区域

01:18:36.770 --> 01:18:37.770
看这里

01:18:37.770 --> 01:18:38.770
我给你写好了

01:18:38.770 --> 01:18:40.770
它需要三个东西

01:18:40.770 --> 01:18:41.770
那么至于

01:18:41.770 --> 01:18:42.770
为什么需要这个三个东西

01:18:42.770 --> 01:18:44.770
你只要做过一次分页

01:18:44.770 --> 01:18:46.770
就跟里面做了个随意数一样

01:18:46.770 --> 01:18:48.770
你没有写过那个随机数

01:18:48.770 --> 01:18:49.770
随机生生成一个准数

01:18:49.770 --> 01:18:50.770
你没有写过

01:18:50.770 --> 01:18:53.770
那里可能要纠结半天都写不出来

01:18:53.770 --> 01:18:54.770
但是你只要写过一次

01:18:54.770 --> 01:18:55.770
你就没有那么纠结了

01:18:55.770 --> 01:18:56.770
分页也是这样子

01:18:56.770 --> 01:18:57.770
你没有写过

01:18:57.770 --> 01:18:59.770
那你觉得真的

01:18:59.770 --> 01:19:01.770
怎么看怎么习惯

01:19:01.770 --> 01:19:03.770
但是你只要写过一次

01:19:03.770 --> 01:19:05.770
基本上就没有什么问题了

01:19:05.770 --> 01:19:06.770
这里边分页的话

01:19:06.770 --> 01:19:08.770
你要创建这个分页区域

01:19:08.770 --> 01:19:10.770
你需要知道这么几个东西

01:19:10.770 --> 01:19:12.770
一个是当前页

01:19:12.770 --> 01:19:14.770
一个是页容量

01:19:14.770 --> 01:19:16.770
每一页说二条

01:19:16.770 --> 01:19:18.770
它不需要知道电影数据

01:19:18.770 --> 01:19:19.770
它不需要的

01:19:19.770 --> 01:19:20.770
你这个区域需要的

01:19:20.770 --> 01:19:21.770
知道电影数据干嘛

01:19:21.770 --> 01:19:22.770
不需要

01:19:22.770 --> 01:19:23.770
只看这个区域

01:19:23.770 --> 01:19:24.770
只看这个分页

01:19:24.770 --> 01:19:25.770
页码这个区域

01:19:25.770 --> 01:19:26.770
一个是页码

01:19:26.770 --> 01:19:27.770
当前页码

01:19:27.770 --> 01:19:29.770
一个是页容量

01:19:29.770 --> 01:19:30.770
每一页说二条

01:19:30.770 --> 01:19:32.770
一个是总季度数

01:19:32.770 --> 01:19:36.340
总季度数是什么意思

01:19:36.340 --> 01:19:38.340
就这个

01:19:38.340 --> 01:19:39.340
无为偷偷

01:19:39.340 --> 01:19:40.340
所以说为什么一般来说

01:19:40.340 --> 01:19:41.340
分页结构

01:19:41.340 --> 01:19:42.340
它都会告诉你一个总数

01:19:42.340 --> 01:19:44.340
它就是来做这个页码区域

01:19:44.340 --> 01:19:46.340
总季度数349

01:19:46.340 --> 01:19:48.340
你把这三个传过来

01:19:48.340 --> 01:19:49.340
我就给你可以帮助

01:19:49.340 --> 01:19:50.340
这个函数可以帮助你

01:19:50.340 --> 01:19:51.340
创建各种各样的元素

01:19:51.340 --> 01:19:53.340
给你放到容器里面去

01:19:53.340 --> 01:19:54.340
就这么演的

01:19:54.340 --> 01:19:56.340
所以说我们这一块呢

01:19:56.340 --> 01:19:58.340
要传递的是什么

01:19:58.340 --> 01:20:00.340
传递的是一个是当前页码

01:20:00.340 --> 01:20:02.340
一开始当前页码是什么

01:20:03.340 --> 01:20:05.340
一开始当前页码

01:20:05.340 --> 01:20:06.340
是不是一啊

01:20:06.340 --> 01:20:07.340
第一页

01:20:07.340 --> 01:20:08.340
每页钱是多少条呢

01:20:08.340 --> 01:20:10.340
每页钱是30条

01:20:10.340 --> 01:20:12.340
30条

01:20:12.340 --> 01:20:14.340
那么第三个参数是总数

01:20:14.340 --> 01:20:15.340
总数是什么

01:20:15.340 --> 01:20:16.340
delta

01:20:16.340 --> 01:20:17.340
movie

01:20:17.340 --> 01:20:18.340
偷偷

01:20:18.340 --> 01:20:19.340
刚才我们看到那个数据

01:20:19.340 --> 01:20:21.340
这是创建分页区域

01:20:24.340 --> 01:20:26.340
我们这里的寒数里面输出一下

01:20:26.340 --> 01:20:27.340
把配级输出

01:20:27.340 --> 01:20:28.340
内面的输出

01:20:28.340 --> 01:20:29.340
偷偷输出

01:20:29.340 --> 01:20:30.340
然后再输出一个

01:20:30.340 --> 01:20:32.340
创建分页区域

01:20:32.340 --> 01:20:34.340
创建分页区域

01:20:34.340 --> 01:20:36.340
看一下这个能不能正常输出

01:20:37.340 --> 01:20:38.340
是不是可以正常输出

01:20:38.340 --> 01:20:39.340
对吧

01:20:39.340 --> 01:20:40.340
你数据都告诉我了

01:20:40.340 --> 01:20:41.340
剩下的事情交给我

01:20:41.340 --> 01:20:43.340
我这个寒数来帮你创建分页区域

01:20:44.340 --> 01:20:45.340
好同学们写一下

01:20:45.340 --> 01:20:47.340
把它写到这种结构

01:20:47.340 --> 01:20:48.340
把它写出来

01:20:48.340 --> 01:20:49.340
那么接下来我们最终的目标

01:20:49.340 --> 01:20:51.340
就把这个寒数一写完就没了

01:20:52.340 --> 01:20:53.340
好写一下

01:20:54.340 --> 01:20:55.340
好了没

01:20:55.340 --> 01:20:57.340
好了我们就继续

01:20:57.340 --> 01:21:00.780
那么这个寒数

01:21:00.780 --> 01:21:01.780
就是我们最后的

01:21:01.780 --> 01:21:02.780
最后的一到关了

01:21:02.780 --> 01:21:04.780
这个寒数写完就没了

01:21:04.780 --> 01:21:05.780
这个寒数来说实话

01:21:06.780 --> 01:21:07.780
有那么点难度

01:21:07.780 --> 01:21:08.780
但是你只要写过一次

01:21:08.780 --> 01:21:09.780
你只要搞定一次

01:21:09.780 --> 01:21:10.780
你这辈子就搞定了

01:21:11.780 --> 01:21:12.780
将来我们学习

01:21:12.780 --> 01:21:13.780
无诱学框架的时候

01:21:13.780 --> 01:21:15.780
还会写类似的功能

01:21:15.780 --> 01:21:17.780
不过类似的写法

01:21:17.780 --> 01:21:18.780
稍微有点区别

01:21:18.780 --> 01:21:19.780
但诗路是一样的

01:21:20.780 --> 01:21:21.780
这个寒数到底怎么写的

01:21:21.780 --> 01:21:23.780
这边我给大家

01:21:24.780 --> 01:21:26.780
把这个寒数内部的结构

01:21:26.780 --> 01:21:28.780
给大家用注释打好了

01:21:29.780 --> 01:21:30.780
这个寒数其实无非

01:21:30.780 --> 01:21:32.780
就是创建各种各样的元素

01:21:33.780 --> 01:21:34.780
你看吗

01:21:34.780 --> 01:21:37.790
你看这里

01:21:37.790 --> 01:21:38.790
创建这个元素

01:21:38.790 --> 01:21:39.790
创建这个元素

01:21:39.790 --> 01:21:40.790
创建这个元素

01:21:40.790 --> 01:21:42.790
一个一个创建元素

01:21:42.790 --> 01:21:44.790
先把这个容器清空

01:21:45.790 --> 01:21:46.790
这里不是一个容器吗

01:21:46.790 --> 01:21:48.790
就是包含这些元素的容器

01:21:48.790 --> 01:21:49.790
先把它清空

01:21:49.790 --> 01:21:50.790
为什么要清空

01:21:51.790 --> 01:21:52.790
因为这个寒数会重复了

01:21:52.790 --> 01:21:53.790
不断的调用

01:21:53.790 --> 01:21:54.790
每一次分析

01:21:54.790 --> 01:21:55.790
它都要重新调用这个寒数

01:21:55.790 --> 01:21:56.790
你点这个第二页

01:21:56.790 --> 01:21:58.790
它要重新调用这个寒数

01:21:59.790 --> 01:22:00.790
只是页码不一样

01:22:00.790 --> 01:22:02.790
所以说这个寒数会重复调用

01:22:02.790 --> 01:22:03.790
如果说你不清空

01:22:03.790 --> 01:22:04.790
之前的内容的话

01:22:04.790 --> 01:22:05.790
就会导致个元素

01:22:05.790 --> 01:22:06.790
越加越多

01:22:06.790 --> 01:22:07.790
先清空

01:22:07.790 --> 01:22:08.790
然后呢就是不断的

01:22:08.790 --> 01:22:09.790
创建元素

01:22:09.790 --> 01:22:10.790
创建首页标签

01:22:10.790 --> 01:22:11.790
创建这个

01:22:12.790 --> 01:22:13.790
创建上页

01:22:13.790 --> 01:22:14.790
创建数字页码

01:22:15.790 --> 01:22:16.790
创建这一部分

01:22:16.790 --> 01:22:17.790
创建下一页

01:22:17.790 --> 01:22:18.790
创建尾页

01:22:18.790 --> 01:22:20.790
我们就做这么一些事

01:22:20.790 --> 01:22:22.790
所以说我们这里就一个个创建

01:22:22.790 --> 01:22:23.790
那么其实你会发现

01:22:23.790 --> 01:22:24.790
无论是创建它

01:22:24.790 --> 01:22:25.790
还是创建它

01:22:25.790 --> 01:22:26.790
还创建这些数字

01:22:26.790 --> 01:22:28.790
还创建下一页尾页

01:22:28.790 --> 01:22:30.790
都差不多

01:22:30.790 --> 01:22:31.790
它无非就是

01:22:31.790 --> 01:22:33.790
元素都是一样的

01:22:33.790 --> 01:22:35.790
然后无非就是内容不一样

01:22:35.790 --> 01:22:36.790
点击过后

01:22:36.790 --> 01:22:38.790
调整的页码不一样

01:22:38.790 --> 01:22:40.790
所以说我们就写个辅助函数

01:22:40.790 --> 01:22:42.790
来帮我们创建元素

01:22:42.790 --> 01:22:44.790
你给我传一个文本

01:22:45.790 --> 01:22:46.790
文本就是比方说

01:22:46.790 --> 01:22:47.790
这个文本就是一个

01:22:47.790 --> 01:22:49.790
数线两个小余符号

01:22:49.790 --> 01:22:51.790
这个文本就是两个小余符号

01:22:51.790 --> 01:22:52.790
这个文本就是1

01:22:52.790 --> 01:22:53.790
这个文本就是2

01:22:53.790 --> 01:22:54.790
这个是两个大余符号

01:22:54.790 --> 01:22:56.790
你给我一个文本

01:22:56.790 --> 01:22:57.790
然后呢给我一个状态

01:22:57.790 --> 01:22:58.790
什么叫状态

01:22:58.790 --> 01:23:00.790
你看这里有几种状态

01:23:00.790 --> 01:23:01.790
不可用的状态

01:23:01.790 --> 01:23:02.790
看没

01:23:02.790 --> 01:23:04.790
这个不可用的状态

01:23:04.790 --> 01:23:06.790
你看清楚吗

01:23:07.790 --> 01:23:10.790
这是一个不可用的状态

01:23:10.790 --> 01:23:12.790
然后呢一个激活状态

01:23:12.790 --> 01:23:13.790
然后一个普通状态

01:23:13.790 --> 01:23:14.790
看没

01:23:14.790 --> 01:23:15.790
一共有三种状态

01:23:15.790 --> 01:23:16.790
那么这里呢

01:23:16.790 --> 01:23:18.790
我给打号注释了

01:23:18.790 --> 01:23:19.790
空字无串

01:23:19.790 --> 01:23:20.790
如果你给我传一个空字无串

01:23:20.790 --> 01:23:22.790
就表示普通状态

01:23:22.790 --> 01:23:24.790
如果你给我传一个disabled

01:23:24.790 --> 01:23:26.790
表示的是禁用状态

01:23:26.790 --> 01:23:27.790
它样式不一样的

01:23:27.790 --> 01:23:29.790
然后呢一个是active

01:23:29.790 --> 01:23:31.790
那么就表示选中状态

01:23:31.790 --> 01:23:32.790
有这个状态

01:23:32.790 --> 01:23:34.790
无非就是它三种状态

01:23:34.790 --> 01:23:35.790
你把状态给我

01:23:35.790 --> 01:23:36.790
你把文本给我

01:23:36.790 --> 01:23:37.790
然后呢点击过后

01:23:37.790 --> 01:23:39.790
我要挑转到哪个页吗

01:23:39.790 --> 01:23:40.790
你告诉我

01:23:40.790 --> 01:23:42.790
比方说点点这个元素

01:23:42.790 --> 01:23:43.790
你给我创建一个元素

01:23:43.790 --> 01:23:45.790
比方说创建了一个二这个元素

01:23:45.790 --> 01:23:46.790
点击过后肯定要挑转到哪

01:23:46.790 --> 01:23:48.790
是不是挑转到第二页

01:23:48.790 --> 01:23:49.790
对吧

01:23:49.790 --> 01:23:51.790
所以你把这个数字传给我

01:23:51.790 --> 01:23:52.790
点击过后挑转到第几页

01:23:52.790 --> 01:23:54.790
我就能帮你创建一个元素

01:23:54.790 --> 01:23:56.790
我就把这个函数写好

01:23:56.790 --> 01:23:57.790
这个函数写好

01:23:57.790 --> 01:23:58.790
后边的东西就很简单

01:24:00.790 --> 01:24:02.790
好大家先把它写成这个样子

01:24:02.790 --> 01:24:03.790
我们慢一点

01:24:03.790 --> 01:24:04.790
好没

01:24:04.790 --> 01:24:05.790
好那么接下来

01:24:05.790 --> 01:24:07.790
我们把这个函数实现

01:24:07.790 --> 01:24:08.790
你这个函数写成了过后

01:24:08.790 --> 01:24:10.790
这创建首页是不是很简单

01:24:10.790 --> 01:24:11.790
crazy tag

01:24:11.790 --> 01:24:12.790
创建首页

01:24:14.790 --> 01:24:15.790
一个数线

01:24:15.790 --> 01:24:16.790
一个数线

01:24:16.790 --> 01:24:17.790
两个小语符号

01:24:17.790 --> 01:24:18.790
然后呢

01:24:18.790 --> 01:24:19.790
状态是什么

01:24:19.790 --> 01:24:20.790
首页状态呢

01:24:20.790 --> 01:24:22.790
我们就先写个浓墨吧

01:24:22.790 --> 01:24:23.790
生长状态

01:24:23.790 --> 01:24:24.790
然后呢就是

01:24:24.790 --> 01:24:25.790
到哪个点击过后

01:24:25.790 --> 01:24:26.790
到哪个页面呢

01:24:26.790 --> 01:24:27.790
是不是到第一页

01:24:27.790 --> 01:24:28.790
首页点击过后

01:24:28.790 --> 01:24:29.790
是不是到第一页

01:24:29.790 --> 01:24:30.790
对吧

01:24:30.790 --> 01:24:31.790
到时候我们调用的时候

01:24:31.790 --> 01:24:32.790
特别方便

01:24:33.790 --> 01:24:34.790
好因此呢我这里呢

01:24:34.790 --> 01:24:35.790
就来写这个函数

01:24:35.790 --> 01:24:36.790
啊

01:24:36.790 --> 01:24:37.790
这个函数怎么写呢

01:24:37.790 --> 01:24:38.790
其实非常简单

01:24:38.790 --> 01:24:39.790
我就创建一个实变元素

01:24:40.790 --> 01:24:41.790
你看啊

01:24:41.790 --> 01:24:42.790
我就可以

01:24:42.790 --> 01:24:43.790
用刀了

01:24:43.790 --> 01:24:44.790
用结块儿

01:24:44.790 --> 01:24:45.790
创建一个实变元素

01:24:47.790 --> 01:24:49.790
然后把这个实变元素呢

01:24:50.790 --> 01:24:51.790
最重要天加到哪呢

01:24:51.790 --> 01:24:54.790
天加到容器里边去

01:24:54.790 --> 01:24:56.790
然后这个实变元素有一个文本

01:24:56.790 --> 01:24:57.790
文本是什么呢

01:24:57.790 --> 01:24:58.790
就是你给我传的txt

01:24:58.790 --> 01:25:00.790
这就是它的文本吧

01:25:00.790 --> 01:25:01.790
对不对

01:25:01.790 --> 01:25:02.790
实变元素了

01:25:02.790 --> 01:25:03.790
就这么简单啊

01:25:04.790 --> 01:25:05.790
试一下

01:25:05.790 --> 01:25:07.790
看一下实变元素有没有创建

01:25:08.790 --> 01:25:09.790
创建出来了

01:25:09.790 --> 01:25:10.790
对吧

01:25:10.790 --> 01:25:11.790
那如果说我要创建一个

01:25:11.790 --> 01:25:12.790
上一页呢

01:25:12.790 --> 01:25:13.790
不一样吗

01:25:14.790 --> 01:25:15.790
这里先随便写啊

01:25:15.790 --> 01:25:17.790
我们以后再去慢慢讨论

01:25:17.790 --> 01:25:19.790
你看创建了两个

01:25:20.790 --> 01:25:22.790
那么接下来就是在设置样式了

01:25:22.790 --> 01:25:24.790
这里边是有一些样式的

01:25:24.790 --> 01:25:25.790
我们接下来在这边

01:25:25.790 --> 01:25:26.790
再设置一下样式

01:25:26.790 --> 01:25:27.790
黑胶里面

01:25:27.790 --> 01:25:28.790
我们直接把它变成弹性盒

01:25:28.790 --> 01:25:29.790
无非就是居中

01:25:29.790 --> 01:25:30.790
它变成弹性盒

01:25:30.790 --> 01:25:31.790
然后再组轴上

01:25:31.790 --> 01:25:32.790
justify content

01:25:32.790 --> 01:25:33.790
居中

01:25:33.790 --> 01:25:35.790
这不就居中了吗

01:25:36.790 --> 01:25:38.790
然后它里边的实变元素

01:25:38.790 --> 01:25:40.790
统统给我设置个margin

01:25:40.790 --> 01:25:41.790
上下呢

01:25:41.790 --> 01:25:42.790
为0

01:25:42.790 --> 01:25:43.790
左右呢

01:25:43.790 --> 01:25:44.790
为7个相数

01:25:45.790 --> 01:25:46.790
看得来

01:25:47.790 --> 01:25:48.790
有点距离了

01:25:48.790 --> 01:25:50.790
然后给它设置一个字体大小吧

01:25:50.790 --> 01:25:52.790
fun size 14分样数

01:25:52.790 --> 01:25:53.790
不要太大了

01:25:54.790 --> 01:25:55.790
差不多

01:25:56.790 --> 01:25:57.790
好 那么这些实变元素

01:25:57.790 --> 01:25:58.790
我给它设置个鼠标样式

01:25:58.790 --> 01:25:59.790
特设

01:26:00.790 --> 01:26:03.300
鼠标样式

01:26:03.300 --> 01:26:05.300
然后给它设置一个文字颜色

01:26:06.300 --> 01:26:07.300
文字颜色

01:26:07.300 --> 01:26:09.300
我看一下这边啊

01:26:09.300 --> 01:26:14.850
文字颜色这个颜色

01:26:14.850 --> 01:26:15.850
复制一下

01:26:17.850 --> 01:26:18.850
文字颜色设置一下

01:26:19.850 --> 01:26:20.850
差不多了对不对

01:26:21.850 --> 01:26:22.850
差不多了

01:26:22.850 --> 01:26:24.850
好 那么接下来再继续看

01:26:25.850 --> 01:26:26.850
首先是样式这一块

01:26:26.850 --> 01:26:27.850
它不可能

01:26:27.850 --> 01:26:29.850
永远都是普通样式

01:26:29.850 --> 01:26:31.850
它有可能是禁用样式

01:26:31.850 --> 01:26:33.850
是不是有可能会是禁用的样式

01:26:34.850 --> 01:26:36.850
那么如果说这个Status

01:26:36.850 --> 01:26:38.850
它是一个禁用的样式的话

01:26:38.850 --> 01:26:39.850
那么我们肯定要给它加上一个

01:26:39.850 --> 01:26:40.850
特别的东西

01:26:40.850 --> 01:26:41.850
比方说这里

01:26:42.850 --> 01:26:43.850
实变元素

01:26:43.850 --> 01:26:45.850
给它加上一个禁用样式

01:26:45.850 --> 01:26:46.850
disabled

01:26:47.850 --> 01:26:48.850
那么我就把

01:26:48.850 --> 01:26:49.850
如果说你是这个

01:26:49.850 --> 01:26:50.850
这个样式的话

01:26:50.850 --> 01:26:51.850
我们把这个

01:26:51.850 --> 01:26:52.850
这个样式写到这里边来

01:26:53.850 --> 01:26:54.850
如果说实变元素

01:26:54.850 --> 01:26:56.850
它有这个带这个样式的话

01:26:56.850 --> 01:26:57.850
那么这个color

01:26:57.850 --> 01:26:58.850
我就给它重新设置一下

01:26:58.850 --> 01:26:59.850
比方说设置为cdc

01:27:03.540 --> 01:27:05.540
如果说你有这个disabled的样式

01:27:05.540 --> 01:27:06.540
我给它设置为cdc

01:27:08.540 --> 01:27:09.540
好 我们来看一下

01:27:09.540 --> 01:27:11.540
如果说这边的话

01:27:11.540 --> 01:27:13.540
我创建了实变

01:27:13.540 --> 01:27:14.540
什么情况下

01:27:14.540 --> 01:27:16.540
我会给它加上一个disabled的样式

01:27:16.540 --> 01:27:18.540
不该加上这个样式了

01:27:18.540 --> 01:27:19.540
是不是判断一下

01:27:19.540 --> 01:27:20.540
如果说你给我的Status

01:27:20.540 --> 01:27:22.540
等于什么disabled的

01:27:23.540 --> 01:27:24.540
你给我传了一个状态

01:27:24.540 --> 01:27:26.540
目前我该传的是个普通状态

01:27:26.540 --> 01:27:28.540
比方说我该传一个disabled的

01:27:28.540 --> 01:27:29.540
那么如说你给我传的状态

01:27:29.540 --> 01:27:31.540
传的状态是一个禁用的状态

01:27:31.540 --> 01:27:32.540
那么我就要给它

01:27:32.540 --> 01:27:33.540
给这个实变的

01:27:33.540 --> 01:27:34.540
添加一个的样式

01:27:34.540 --> 01:27:35.540
怎么那样式

01:27:36.540 --> 01:27:37.540
能不能这样写

01:27:40.620 --> 01:27:41.620
能不能这样写

01:27:41.620 --> 01:27:43.620
说了多少次了

01:27:43.620 --> 01:27:45.620
开启到CSS研究过后了

01:27:45.620 --> 01:27:47.620
所有的那样式的名字都会变

01:27:47.620 --> 01:27:48.620
所以说你应该怎么写

01:27:48.620 --> 01:27:49.620
是不是应该写成

01:27:49.620 --> 01:27:51.620
Status Disabled

01:27:53.620 --> 01:27:54.620
就应该这样写

01:27:54.620 --> 01:27:55.620
好好保存你看一下

01:27:56.620 --> 01:27:57.620
你看这里是不是

01:27:57.620 --> 01:27:58.620
这个禁用样式就出来了

01:27:58.620 --> 01:27:59.620
把一个灰色

01:28:00.620 --> 01:28:02.620
你看这个样式名字是不是变了

01:28:03.620 --> 01:28:04.620
这个样式名字是不是变了

01:28:07.620 --> 01:28:08.620
当然这个单码

01:28:08.620 --> 01:28:09.620
看上去有点丑陋

01:28:09.620 --> 01:28:11.620
其实完全可以这样做

01:28:11.620 --> 01:28:12.620
这个Status

01:28:12.620 --> 01:28:13.620
是不是就是属性的名字

01:28:14.620 --> 01:28:15.620
这个Status

01:28:15.620 --> 01:28:16.620
是不是就是属性的名字

01:28:16.620 --> 01:28:17.620
你看一下

01:28:18.620 --> 01:28:19.620
我把这个Status

01:28:19.620 --> 01:28:20.620
只作为它的属性名字

01:28:20.620 --> 01:28:21.620
不就完了吗

01:28:22.620 --> 01:28:23.620
对不对

01:28:23.620 --> 01:28:24.620
是不是这样子

01:28:25.620 --> 01:28:26.620
对不对

01:28:26.620 --> 01:28:27.620
所以说我们这里

01:28:27.620 --> 01:28:28.620
它的class name等于什么呢

01:28:28.620 --> 01:28:30.620
等于Styles

01:28:30.620 --> 01:28:31.620
Status

01:28:32.620 --> 01:28:33.620
然后把这个class name

01:28:33.620 --> 01:28:35.620
加进去不就完了吗

01:28:35.620 --> 01:28:37.620
Styles

01:28:39.620 --> 01:28:40.620
如果说你没有给我传Status

01:28:40.620 --> 01:28:42.620
那这里边自然找不到

01:28:42.620 --> 01:28:43.620
找不到的话

01:28:43.620 --> 01:28:44.620
那么这里就是undefined

01:28:45.620 --> 01:28:46.620
好再看一下

01:28:48.620 --> 01:28:49.620
效果是一样的

01:28:53.020 --> 01:28:54.020
是一样的

01:28:55.020 --> 01:28:56.020
你看这个Style

01:28:56.020 --> 01:28:57.020
创建这个Style的时候

01:28:57.020 --> 01:28:58.020
它传入的是一个空置不串

01:28:58.020 --> 01:28:59.020
那么自然

01:28:59.020 --> 01:29:00.020
属性是不存在的

01:29:00.020 --> 01:29:01.020
这就是undefined

01:29:01.020 --> 01:29:02.020
undefined的话

01:29:02.020 --> 01:29:03.020
加进去就相当于没有加

01:29:04.020 --> 01:29:05.020
这个地方是

01:29:05.020 --> 01:29:06.020
给它传来个Disabled

01:29:06.020 --> 01:29:07.020
那么就从

01:29:07.020 --> 01:29:08.020
样式表里面

01:29:08.020 --> 01:29:09.020
取出Disabled的属性

01:29:10.020 --> 01:29:11.020
找到对应的

01:29:11.020 --> 01:29:12.020
Hashiz

01:29:12.020 --> 01:29:13.020
Hashiz加进去

01:29:13.020 --> 01:29:14.020
对吧

01:29:14.020 --> 01:29:15.020
要学会这种做法

01:29:16.020 --> 01:29:17.020
那么接下来

01:29:17.020 --> 01:29:18.020
我们继续来写Disabled

01:29:18.020 --> 01:29:20.020
把这个Cursor

01:29:20.020 --> 01:29:21.020
变成

01:29:21.020 --> 01:29:22.020
拉扯到的

01:29:23.020 --> 01:29:24.020
不允许

01:29:24.020 --> 01:29:25.020
不允许变这个样子

01:29:25.020 --> 01:29:26.020
属标样式

01:29:27.020 --> 01:29:28.020
其他边上

01:29:29.020 --> 01:29:31.020
好那么还有一个激活样式

01:29:31.020 --> 01:29:32.020
比方说创建

01:29:32.020 --> 01:29:33.020
这个东西一般是在

01:29:33.020 --> 01:29:34.020
创建数字标签的时候

01:29:34.020 --> 01:29:35.020
比方说创建第一页

01:29:37.020 --> 01:29:38.020
数字页

01:29:38.020 --> 01:29:39.020
那么这里可能有个激活

01:29:39.020 --> 01:29:40.020
Active

01:29:42.020 --> 01:29:43.020
你看

01:29:43.020 --> 01:29:44.020
所以这个1

01:29:44.020 --> 01:29:45.020
它可能有个激活样式

01:29:45.020 --> 01:29:46.020
那么这个激活样式

01:29:46.020 --> 01:29:48.020
我们这里也要写一下

01:29:49.020 --> 01:29:50.020
Active

01:29:51.020 --> 01:29:52.020
激活样式

01:29:52.020 --> 01:29:53.020
那么创建了

01:29:53.020 --> 01:29:54.020
我就该设置为F40吗

01:29:55.020 --> 01:29:57.850
变成这个样子

01:29:57.850 --> 01:29:58.850
然后属标样式

01:29:58.850 --> 01:29:59.850
变成一个默认的

01:29:59.850 --> 01:30:00.850
属标样式

01:30:00.850 --> 01:30:01.850
就不要与销售了

01:30:02.850 --> 01:30:04.850
让它感觉是不能点的

01:30:08.800 --> 01:30:09.800
变成这个样子

01:30:09.800 --> 01:30:10.800
感觉上去不能点

01:30:10.800 --> 01:30:11.800
这个是可以点的

01:30:11.800 --> 01:30:12.800
这个也不能点

01:30:12.800 --> 01:30:14.800
这个是当前样子

01:30:15.800 --> 01:30:16.800
说到央视就写完了

01:30:17.800 --> 01:30:18.800
央视搞定了

01:30:19.800 --> 01:30:20.800
那么接下来是点击事件

01:30:20.800 --> 01:30:22.800
这个示范是有点击事件的

01:30:23.800 --> 01:30:25.800
它首先什么时候我要点击

01:30:25.800 --> 01:30:27.800
我才要监听它的点击

01:30:27.800 --> 01:30:28.800
什么时候要监听它

01:30:29.800 --> 01:30:30.800
金庸的时候能不能

01:30:30.800 --> 01:30:31.800
要不要监听

01:30:31.800 --> 01:30:32.800
不监听

01:30:33.800 --> 01:30:34.800
当前业马的时候

01:30:34.800 --> 01:30:35.800
要不要监听

01:30:35.800 --> 01:30:36.800
不监听

01:30:36.800 --> 01:30:37.800
本身就是第一页了

01:30:37.800 --> 01:30:38.800
点什么点的

01:30:38.800 --> 01:30:39.800
什么情况

01:30:39.800 --> 01:30:41.800
是不是只有普通样式的时候

01:30:41.800 --> 01:30:43.800
我才要监听它的点击事件

01:30:43.800 --> 01:30:44.800
对吧

01:30:45.800 --> 01:30:47.800
只有是普通样式时

01:30:48.800 --> 01:30:51.800
才需要监听点击事件

01:30:52.800 --> 01:30:55.500
好

01:30:55.500 --> 01:30:56.500
那么这里是不是可以判断

01:30:56.500 --> 01:30:58.500
什么情况是普通样式

01:30:58.500 --> 01:30:59.500
是不是就是Status

01:30:59.500 --> 01:31:00.500
等于空置五川

01:31:00.500 --> 01:31:02.500
或者是这个class name

01:31:02.500 --> 01:31:03.500
拿不到值

01:31:03.500 --> 01:31:04.500
对不对

01:31:04.500 --> 01:31:05.500
没有别的样式

01:31:05.500 --> 01:31:06.500
都可以

01:31:07.500 --> 01:31:08.500
普通样式的时候

01:31:08.500 --> 01:31:10.500
是不是给它加上一个点击事件

01:31:10.500 --> 01:31:11.500
可以

01:31:12.500 --> 01:31:13.500
点击的时候

01:31:13.500 --> 01:31:14.500
我是不要挑转页面

01:31:14.500 --> 01:31:15.500
挑转到第几页

01:31:15.500 --> 01:31:17.500
是不是这里传过来的

01:31:18.500 --> 01:31:19.500
输出

01:31:19.500 --> 01:31:20.500
挑转到

01:31:21.500 --> 01:31:22.500
第

01:31:22.500 --> 01:31:23.500
几页

01:31:23.500 --> 01:31:24.500
好给

01:31:24.500 --> 01:31:25.500
配一几

01:31:27.870 --> 01:31:28.870
我们再随便写个

01:31:28.870 --> 01:31:29.870
1 2 3

01:31:29.870 --> 01:31:30.870
随便写一个

01:31:32.870 --> 01:31:33.870
试一下

01:31:33.870 --> 01:31:37.780
点这个

01:31:37.780 --> 01:31:38.780
有没有触发点击事件

01:31:38.780 --> 01:31:39.780
没有

01:31:39.780 --> 01:31:40.780
因为它是禁用的

01:31:40.780 --> 01:31:41.780
点这个

01:31:41.780 --> 01:31:42.780
我这随便写的

01:31:42.780 --> 01:31:43.780
点这个是不是没用

01:31:43.780 --> 01:31:44.780
因为它是激活样式

01:31:46.780 --> 01:31:47.780
那么大家暂停视频

01:31:47.780 --> 01:31:49.780
先把它写成这么一种状态

01:31:49.780 --> 01:31:51.780
那么接下来我一会来写这个

01:31:53.780 --> 01:31:54.780
先写

01:31:56.780 --> 01:31:57.780
好了没

01:31:57.780 --> 01:31:58.780
接下来我们继续

01:31:58.780 --> 01:32:00.780
分页这一块肯定是你不能着急

01:32:00.780 --> 01:32:01.780
你着急

01:32:01.780 --> 01:32:02.780
因为你第一次做这个东西

01:32:02.780 --> 01:32:04.780
对你来说还是有点难度的

01:32:04.780 --> 01:32:06.780
像我们这些脑油条

01:32:06.780 --> 01:32:08.780
都不知道写到无数十次了

01:32:09.780 --> 01:32:10.780
然后这边

01:32:10.780 --> 01:32:12.780
点击过后到底要做啥呢

01:32:13.780 --> 01:32:14.780
你觉得分页过后

01:32:14.780 --> 01:32:15.780
分页点击过后要做啥

01:32:18.420 --> 01:32:19.420
要做啥

01:32:21.980 --> 01:32:23.980
第一就要做两件事

01:32:24.980 --> 01:32:26.980
第一件事重新生成列表

01:32:27.980 --> 01:32:29.980
第二件事重新生成分页区

01:32:29.980 --> 01:32:31.980
不就只得两件事吗

01:32:32.980 --> 01:32:33.980
还有啥算吗

01:32:33.980 --> 01:32:34.980
重新生成列表重新生成分页

01:32:35.980 --> 01:32:36.980
那么

01:32:36.980 --> 01:32:37.980
是不是要重新拿数据

01:32:38.980 --> 01:32:39.980
应该是有三件事

01:32:39.980 --> 01:32:40.980
第一步

01:32:41.980 --> 01:32:42.980
重新拿数据

01:32:44.980 --> 01:32:45.980
第二步

01:32:45.980 --> 01:32:47.980
重新生成列表

01:32:48.980 --> 01:32:49.980
第三步

01:32:49.980 --> 01:32:52.980
重新生成分页区

01:32:53.980 --> 01:32:54.980
一步来

01:32:54.980 --> 01:32:55.980
重新拿数据

01:32:55.980 --> 01:32:57.980
是不是要保留API

01:32:57.980 --> 01:33:02.680
我们可以重复利用这个模块

01:33:02.680 --> 01:33:03.680
用ATA

01:33:03.680 --> 01:33:04.680
API

01:33:04.680 --> 01:33:05.680
Movie

01:33:06.680 --> 01:33:07.680
有个GetMovies

01:33:08.680 --> 01:33:09.680
GetMovies

01:33:10.680 --> 01:33:11.680
Movies

01:33:12.680 --> 01:33:13.680
来

01:33:13.680 --> 01:33:15.680
重新拿数据

01:33:15.680 --> 01:33:16.680
是不是

01:33:16.680 --> 01:33:17.680
他要传参数

01:33:17.680 --> 01:33:19.680
拿第几页的数据呢

01:33:20.680 --> 01:33:22.680
点击过后你要挑战到这个页码

01:33:23.680 --> 01:33:24.680
是不是拿这个页码的数据

01:33:25.680 --> 01:33:26.680
每页显示多少条呢

01:33:27.680 --> 01:33:28.680
每页显示是不是领面是不变

01:33:29.680 --> 01:33:30.680
你不能说第二页

01:33:30.680 --> 01:33:31.680
他就页容量就变了

01:33:31.680 --> 01:33:32.680
不会变的

01:33:35.680 --> 01:33:36.680
完了

01:33:36.680 --> 01:33:37.680
然后就Eweit等待他

01:33:38.680 --> 01:33:39.680
当然这里要变掉一层Esync

01:33:39.680 --> 01:33:41.680
因为他的Eweit必须要

01:33:41.680 --> 01:33:42.680
是放在一步函数里边

01:33:44.680 --> 01:33:45.680
拿到响应数据

01:33:45.680 --> 01:33:46.680
然后重新生成列表

01:33:46.680 --> 01:33:48.680
是不是要导入之前那个函数

01:33:48.680 --> 01:33:50.680
列表里边不是一个生成列表的函数吗

01:33:50.680 --> 01:33:52.680
你看为什么要之前要那样去设计啊

01:33:54.680 --> 01:33:55.680
Movie

01:33:56.680 --> 01:33:57.680
里边是不是有一个Nest

01:33:58.680 --> 01:34:00.680
这里边不是提供了一个函数吗

01:34:01.680 --> 01:34:03.680
之前提供的叫做CrazyMovieTags

01:34:04.680 --> 01:34:05.680
重复用

01:34:08.630 --> 01:34:09.630
导入进来

01:34:10.630 --> 01:34:11.630
好 重新生成列表

01:34:11.630 --> 01:34:12.630
是不是调用这个函数

01:34:13.630 --> 01:34:14.630
把什么传给他

01:34:14.630 --> 01:34:17.630
把这个电影的data里边的什么MovieNest

01:34:17.630 --> 01:34:18.630
你自己看一下这个Risker

01:34:18.630 --> 01:34:19.630
把音出来看一下

01:34:19.630 --> 01:34:20.630
你就明白了

01:34:22.630 --> 01:34:24.630
然后把这个电影列表传给他

01:34:24.630 --> 01:34:25.630
他就重新生成列表了

01:34:25.630 --> 01:34:27.630
然后重新生成分页区域

01:34:27.630 --> 01:34:29.630
是不是就重新调用这个函数

01:34:29.630 --> 01:34:31.630
他不就在生成分页区域吗

01:34:31.630 --> 01:34:32.630
创建分页区域的标签

01:34:32.630 --> 01:34:34.630
重新调用他的玩手

01:34:35.630 --> 01:34:36.630
他有三个函数

01:34:36.630 --> 01:34:37.630
第一个页嘛

01:34:37.630 --> 01:34:38.630
第几页呢

01:34:39.630 --> 01:34:40.630
分页过后 点击过后

01:34:40.630 --> 01:34:42.630
是不是挑战到这个页面了

01:34:42.630 --> 01:34:44.630
这个页 里面才不变

01:34:45.630 --> 01:34:46.630
然后总数呢

01:34:46.630 --> 01:34:48.630
是不是来自于一样的data

01:34:48.630 --> 01:34:50.630
其实总数一般都不会变化

01:34:51.630 --> 01:34:53.630
万一这个时候

01:34:53.630 --> 01:34:55.630
挑到第二页期间

01:34:55.630 --> 01:34:57.630
突然浮起多的数据

01:34:57.630 --> 01:34:59.630
所以最好还是从浮起来

01:34:59.630 --> 01:35:01.630
Movie 偷偷

01:35:02.630 --> 01:35:03.630
没了

01:35:04.630 --> 01:35:05.630
还有什么

01:35:06.630 --> 01:35:07.630
其实跟这个代码是一样的

01:35:07.630 --> 01:35:09.630
你看一下这个代码

01:35:09.630 --> 01:35:11.630
和这个代码有多好区别

01:35:11.630 --> 01:35:12.630
没有什么区别

01:35:12.630 --> 01:35:13.630
是一样的

01:35:13.630 --> 01:35:14.630
甚至你可以说

01:35:14.630 --> 01:35:16.630
把这个东西再分立成一个模块

01:35:16.630 --> 01:35:18.630
直接重复调用的玩手

01:35:19.630 --> 01:35:20.630
就完了

01:35:20.630 --> 01:35:24.780
好 我来试一下

01:35:24.780 --> 01:35:26.780
你看看能不能分页了

01:35:27.780 --> 01:35:28.780
点击 点这个是到第二页

01:35:28.780 --> 01:35:30.780
因为我这里写的是2

01:35:30.780 --> 01:35:31.780
来试一下吧

01:35:31.780 --> 01:35:32.780
点击

01:35:32.780 --> 01:35:33.780
你看说到第二页了

01:35:34.780 --> 01:35:35.780
但这一块没有变化

01:35:35.780 --> 01:35:37.780
因为我们还没有认真写

01:35:37.780 --> 01:35:38.780
好 同学们

01:35:38.780 --> 01:35:39.780
暂停视频

01:35:39.780 --> 01:35:40.780
把这个函数写完

01:35:40.780 --> 01:35:41.780
这个函数写完

01:35:41.780 --> 01:35:43.780
至少我们分页这一块

01:35:43.780 --> 01:35:44.780
就已经完成了一半了

01:35:47.470 --> 01:35:48.470
好吗

01:35:48.470 --> 01:35:49.470
好 我们继续加油

01:35:49.470 --> 01:35:51.470
就剩它这么一点点了

01:35:52.470 --> 01:35:53.470
第一步

01:35:53.470 --> 01:35:54.470
创建首页标签

01:35:54.470 --> 01:35:55.470
首页的文字没什么问题

01:35:55.470 --> 01:35:57.470
当然你也可以用中文

01:35:57.470 --> 01:35:59.470
用什么文字无所谓

01:35:59.470 --> 01:36:00.470
那个是有啥

01:36:00.470 --> 01:36:01.470
你随便用啥都可以

01:36:01.470 --> 01:36:03.470
首页用中文都可以

01:36:03.470 --> 01:36:05.470
好 样式是什么

01:36:05.470 --> 01:36:06.470
一个个想

01:36:07.470 --> 01:36:09.470
首页这个样式应该是什么

01:36:09.470 --> 01:36:11.470
它应该是有谁来决定的

01:36:12.470 --> 01:36:13.470
你看第二页

01:36:13.470 --> 01:36:14.470
第二页它就可以点

01:36:15.470 --> 01:36:17.470
是不是当前的页码

01:36:18.470 --> 01:36:19.470
走起来

01:36:19.470 --> 01:36:21.470
是不是当前的页码

01:36:22.470 --> 01:36:24.470
只要等于1

01:36:24.470 --> 01:36:25.470
它就必须要经用

01:36:26.470 --> 01:36:27.470
否则的话

01:36:27.470 --> 01:36:28.470
它就是普通样式

01:36:28.470 --> 01:36:29.470
它不会有激活样式

01:36:30.470 --> 01:36:31.470
对不对

01:36:31.470 --> 01:36:32.470
它逻辑就这么简单

01:36:32.470 --> 01:36:34.470
你当前的页码等于1

01:36:35.470 --> 01:36:37.470
那么我就得把它利用

01:36:38.470 --> 01:36:39.470
否则的话

01:36:39.470 --> 01:36:40.470
就是普通状态

01:36:40.470 --> 01:36:41.470
那么简单

01:36:41.470 --> 01:36:43.470
这就是首页的状态逻辑

01:36:45.470 --> 01:36:47.470
那么点击首页

01:36:47.470 --> 01:36:49.470
挑战到第几页

01:36:49.470 --> 01:36:51.470
当然是第1页

01:36:51.470 --> 01:36:53.470
点击首页是否挑战到第1页

01:36:53.470 --> 01:36:54.470
没有什么问题

01:36:54.470 --> 01:36:55.470
这是固定的

01:36:56.470 --> 01:36:57.470
好 到上页

01:36:58.470 --> 01:36:59.470
用中文吗

01:36:59.470 --> 01:37:00.470
上页

01:37:01.470 --> 01:37:02.470
它的状态是什么

01:37:03.470 --> 01:37:04.470
跟首页不是一样的吗

01:37:06.470 --> 01:37:07.470
如果说是第1页

01:37:07.470 --> 01:37:08.470
还有上页吗

01:37:08.470 --> 01:37:09.470
就没有上页了

01:37:10.470 --> 01:37:11.470
其他的情况就OK

01:37:12.470 --> 01:37:14.470
那么点击上一页

01:37:14.470 --> 01:37:15.470
挑战到第几页了

01:37:15.470 --> 01:37:16.470
比方说

01:37:16.470 --> 01:37:17.470
目前是第3页

01:37:17.470 --> 01:37:19.470
比方说目前是第3页

01:37:19.470 --> 01:37:20.470
点击上一页

01:37:20.470 --> 01:37:21.470
是否挑战到第2页

01:37:21.470 --> 01:37:22.470
目前是第5页

01:37:22.470 --> 01:37:23.470
点击上一页

01:37:23.470 --> 01:37:24.470
是否挑战到第4页

01:37:27.100 --> 01:37:28.100
不就上一页了

01:37:28.100 --> 01:37:30.100
中间的数字先别管

01:37:30.100 --> 01:37:31.100
先别管中间的数字

01:37:31.100 --> 01:37:32.100
我们把下一页搞定

01:37:33.100 --> 01:37:35.100
先搞定下一页

01:37:40.060 --> 01:37:42.060
下一页的状态是什么

01:37:42.060 --> 01:37:43.060
你看下一页

01:37:43.060 --> 01:37:44.060
一直是可以用的

01:37:44.060 --> 01:37:45.060
但是有这种情况

01:37:45.060 --> 01:37:46.060
它就不能用了

01:37:46.060 --> 01:37:47.060
到了尾页是不是就不能用了

01:37:49.060 --> 01:37:50.060
到了总页数的时候

01:37:50.060 --> 01:37:51.060
就不能用了

01:37:51.060 --> 01:37:52.060
就最大页码的时候

01:37:52.060 --> 01:37:53.060
就不能用了

01:37:53.060 --> 01:37:54.060
那么这里就有一个问题

01:37:55.060 --> 01:37:56.060
最大页码是多少

01:37:59.390 --> 01:38:00.390
页码

01:38:01.390 --> 01:38:02.390
是多少

01:38:03.390 --> 01:38:04.390
这个东西得算

01:38:05.390 --> 01:38:06.390
得计算

01:38:07.390 --> 01:38:08.390
非常简单的计算

01:38:08.390 --> 01:38:10.700
怎么计算

01:38:10.700 --> 01:38:12.700
如果理由100条数据

01:38:12.700 --> 01:38:14.700
每页钱是10条

01:38:14.700 --> 01:38:15.700
几页吗

01:38:15.700 --> 01:38:16.700
不就10页吗

01:38:16.700 --> 01:38:18.700
一有20条数据

01:38:18.700 --> 01:38:19.700
每页钱是5条

01:38:19.700 --> 01:38:20.700
不就有4页吗

01:38:22.700 --> 01:38:24.700
是不是总数除异页容量

01:38:25.700 --> 01:38:26.700
对吧

01:38:26.700 --> 01:38:27.700
我们定的变量

01:38:27.700 --> 01:38:28.700
叫page number

01:38:28.700 --> 01:38:29.700
等于什么

01:38:29.700 --> 01:38:32.700
总数除异页容量

01:38:33.700 --> 01:38:34.700
这就是最大页码

01:38:36.700 --> 01:38:37.700
但是有一个情况

01:38:37.700 --> 01:38:38.700
你要考虑进去

01:38:38.700 --> 01:38:40.700
如果说21条数据

01:38:40.700 --> 01:38:41.700
每页5条

01:38:44.400 --> 01:38:46.400
显示完4页一共只能20条

01:38:46.400 --> 01:38:48.400
那么还剩下一条数据

01:38:48.400 --> 01:38:49.400
是不是还得显示1页

01:38:49.400 --> 01:38:51.400
那么21除异5等于多少

01:38:51.400 --> 01:38:53.400
是不是4.2

01:38:53.400 --> 01:38:55.400
4.2我要按4来算

01:38:55.400 --> 01:38:57.400
还是按5来算

01:38:58.400 --> 01:38:59.400
好好琢磨一下

01:38:59.400 --> 01:39:00.400
我相信每个同学

01:39:00.400 --> 01:39:01.400
应该琢磨得出来

01:39:01.400 --> 01:39:03.400
21条数据

01:39:03.400 --> 01:39:05.400
除异5等于4.2页

01:39:05.400 --> 01:39:06.400
4.2页我们应该

01:39:06.400 --> 01:39:07.400
按多少页来算

01:39:07.400 --> 01:39:09.400
但明显按5页来算

01:39:09.400 --> 01:39:10.400
因为你4页

01:39:10.400 --> 01:39:11.400
肯定是显示不完

01:39:11.400 --> 01:39:12.400
还剩下一部分

01:39:13.400 --> 01:39:14.400
还剩下一部分

01:39:14.400 --> 01:39:15.400
我们还得开一页

01:39:15.400 --> 01:39:17.400
但不可能出现半页的情况

01:39:17.400 --> 01:39:18.400
所以还得开一页

01:39:18.400 --> 01:39:19.400
应该是什么

01:39:19.400 --> 01:39:22.400
21除异5向上取整

01:39:25.400 --> 01:39:26.400
用天花板函数

01:39:26.400 --> 01:39:28.400
向上取整

01:39:28.400 --> 01:39:29.400
不就是最大页吗

01:39:31.400 --> 01:39:33.400
我们来输出一下最大页

01:39:33.400 --> 01:39:34.400
输出一下配级number

01:39:35.400 --> 01:39:38.480
当然这里就包错了

01:39:38.480 --> 01:39:39.480
我说

01:39:39.480 --> 01:39:43.580
是不是12

01:39:44.580 --> 01:39:45.580
最大页吗

01:39:45.580 --> 01:39:46.580
出来了过后

01:39:46.580 --> 01:39:47.580
不就简单了吗

01:39:48.580 --> 01:39:49.580
这里替换成最大页

01:39:49.580 --> 01:39:50.580
下页

01:39:50.580 --> 01:39:51.580
如果说当前页

01:39:51.580 --> 01:39:52.580
等于最大页

01:39:52.580 --> 01:39:53.580
就已经是最后一页了

01:39:53.580 --> 01:39:54.580
那肯定得经用

01:39:56.580 --> 01:39:57.580
然后点击下页

01:39:57.580 --> 01:39:58.580
挑战到哪呢

01:39:58.580 --> 01:39:59.580
是不是配级加1

01:39:59.580 --> 01:40:00.580
当前是第一页

01:40:00.580 --> 01:40:01.580
点下页就到第二页

01:40:01.580 --> 01:40:02.580
当前是第三页

01:40:02.580 --> 01:40:03.580
点下页就到第四页

01:40:05.580 --> 01:40:06.580
下页出来了

01:40:07.580 --> 01:40:08.580
然后创建尾页

01:40:09.580 --> 01:40:11.580
这几个是比较好创建的

01:40:11.580 --> 01:40:12.580
尾页

01:40:13.580 --> 01:40:14.580
经用状态一样的

01:40:14.580 --> 01:40:16.580
点击尾页挑战到哪

01:40:16.580 --> 01:40:17.580
它就不是加1了

01:40:17.580 --> 01:40:18.580
是不是直接挑战到最大页

01:40:19.580 --> 01:40:20.580
配级number

01:40:21.580 --> 01:40:22.580
试一下

01:40:22.580 --> 01:40:23.580
现在已经可以运作了

01:40:23.580 --> 01:40:24.580
点下页

01:40:24.580 --> 01:40:25.580
你看

01:40:25.580 --> 01:40:27.580
现在是第二页了

01:40:27.580 --> 01:40:28.580
点下页

01:40:28.580 --> 01:40:29.580
你看

01:40:29.580 --> 01:40:30.580
点下页

01:40:30.580 --> 01:40:31.580
点尾页

01:40:31.580 --> 01:40:32.580
上页

01:40:32.580 --> 01:40:33.580
手页

01:40:33.580 --> 01:40:34.580
下页

01:40:34.580 --> 01:40:35.580
尾页

01:40:36.580 --> 01:40:37.580
是不是可以了

01:40:37.580 --> 01:40:38.580
可以了

01:40:41.150 --> 01:40:42.150
剩下的事情就是

01:40:42.150 --> 01:40:43.150
创建中间的数字了

01:40:43.150 --> 01:40:44.150
就这一块

01:40:44.150 --> 01:40:45.150
这一块呢

01:40:45.150 --> 01:40:47.150
稍微的有那么丢丢的复杂

01:40:48.150 --> 01:40:49.150
也没有那么复杂的

01:40:49.150 --> 01:40:50.150
就剩最后一步了

01:40:50.150 --> 01:40:52.150
已经完成了70%了

01:40:52.150 --> 01:40:53.150
就分页这一块

01:40:53.150 --> 01:40:54.150
整体的功能呢

01:40:54.150 --> 01:40:56.150
就已经完成了95%了

01:40:56.150 --> 01:40:57.150
剩下最后一点点了

01:40:58.150 --> 01:41:00.150
这个页码是怎么来算的呢

01:41:02.150 --> 01:41:04.150
比方说你一共12页

01:41:04.150 --> 01:41:06.150
我不能就显示12个数字

01:41:06.150 --> 01:41:07.150
那万一你一共有

01:41:07.150 --> 01:41:08.150
一万页了

01:41:08.150 --> 01:41:09.150
因为数据比较多的话

01:41:10.150 --> 01:41:11.150
一可能有几十万条数据

01:41:11.150 --> 01:41:12.150
或者是上一条数据

01:41:12.150 --> 01:41:13.150
那我这里给你显示

01:41:14.150 --> 01:41:15.150
一到一万页

01:41:15.150 --> 01:41:16.150
一到一万的数字吗

01:41:16.150 --> 01:41:17.150
不会

01:41:17.150 --> 01:41:19.150
我有一个最大数字

01:41:19.150 --> 01:41:20.150
最大数字呢

01:41:20.150 --> 01:41:22.150
一般来说是十

01:41:22.150 --> 01:41:23.150
那比方说我这里

01:41:23.150 --> 01:41:24.150
定一个边量

01:41:24.150 --> 01:41:25.150
叫做最大数字

01:41:26.150 --> 01:41:29.150
MaxCort10

01:41:30.150 --> 01:41:32.150
最大页码数字

01:41:35.150 --> 01:41:37.150
就是最大应该说这样说

01:41:37.150 --> 01:41:39.150
最大数字页码的数量

01:41:39.150 --> 01:41:40.150
大家先暂停视频吧

01:41:40.150 --> 01:41:41.150
先把它写成这样子

01:41:41.150 --> 01:41:43.150
先把上一页首页

01:41:43.150 --> 01:41:44.150
下一页五页搞定

01:41:46.150 --> 01:41:47.150
好 现在我们再说个数字

01:41:47.150 --> 01:41:48.150
就差最后一步了

01:41:48.150 --> 01:41:50.150
最大数字页码的数量

01:41:50.150 --> 01:41:51.150
比方一般来说都是十

01:41:52.150 --> 01:41:54.150
那么他要尽量的保证

01:41:54.150 --> 01:41:56.150
当前页在中间

01:41:56.150 --> 01:41:57.150
有的时候没办法

01:41:57.150 --> 01:41:58.150
比方说一

01:41:58.150 --> 01:41:59.150
一怎么在中间

01:41:59.150 --> 01:42:00.150
一在中间的话

01:42:00.150 --> 01:42:01.150
后面就是附属了

01:42:01.150 --> 01:42:02.150
他没法

01:42:02.150 --> 01:42:03.150
他尽量的保证

01:42:03.150 --> 01:42:05.150
当前页在中间

01:42:05.150 --> 01:42:06.150
那啥意思呢

01:42:06.150 --> 01:42:07.150
比方说你是第六页

01:42:07.150 --> 01:42:08.150
他保证六在中间

01:42:08.150 --> 01:42:09.150
那么前面有五个

01:42:09.150 --> 01:42:10.150
后面有四个

01:42:10.150 --> 01:42:12.150
然后再八

01:42:12.150 --> 01:42:13.150
前面是不是有五个

01:42:14.150 --> 01:42:15.150
到第八页的时候

01:42:15.150 --> 01:42:16.150
保证他前面有五个

01:42:17.150 --> 01:42:18.150
所以是啥意思

01:42:18.150 --> 01:42:19.150
是不是一共

01:42:19.150 --> 01:42:21.150
有显示十个页码数字

01:42:21.150 --> 01:42:23.150
目前的页码是配级

01:42:25.150 --> 01:42:27.150
是不是配级减他的一半

01:42:27.150 --> 01:42:29.150
就是这里的最小值

01:42:29.150 --> 01:42:31.150
是不是我们只要能够算出

01:42:31.150 --> 01:42:32.150
这个最小值

01:42:34.150 --> 01:42:36.150
我们只要能够算出这

01:42:36.150 --> 01:42:38.150
最小值

01:42:38.150 --> 01:42:39.150
再算出这个最大值

01:42:39.150 --> 01:42:40.150
一个循环是不是

01:42:40.150 --> 01:42:41.150
可以生存了

01:42:42.150 --> 01:42:43.150
对不对

01:42:43.150 --> 01:42:45.150
那么只要能算出最小值

01:42:45.150 --> 01:42:46.150
就能算出最大值

01:42:47.150 --> 01:42:48.150
最小值怎么算的

01:42:48.150 --> 01:42:50.150
当前页码

01:42:50.150 --> 01:42:51.150
当前页码

01:42:51.150 --> 01:42:54.150
减去他的一半

01:42:56.150 --> 01:42:59.150
所以他减去他的一半

01:42:59.150 --> 01:43:00.150
二分之

01:43:01.150 --> 01:43:02.150
不是他的一半

01:43:03.150 --> 01:43:04.150
怎么说

01:43:04.150 --> 01:43:06.150
配级减去

01:43:06.150 --> 01:43:08.150
减去这个的一半

01:43:09.150 --> 01:43:10.150
对不对

01:43:11.150 --> 01:43:13.150
一共要显示十个页数字

01:43:13.150 --> 01:43:14.150
那左边一半

01:43:14.150 --> 01:43:15.150
右边一半

01:43:15.150 --> 01:43:16.150
如果说

01:43:16.150 --> 01:43:17.150
左边多一个

01:43:17.150 --> 01:43:18.150
有的时候他是双数

01:43:18.150 --> 01:43:19.150
左边多一个

01:43:19.150 --> 01:43:20.150
多一个

01:43:20.150 --> 01:43:21.150
无所谓

01:43:21.150 --> 01:43:22.150
可以这样做

01:43:22.150 --> 01:43:24.150
那么当前页码是八

01:43:24.150 --> 01:43:25.150
减去他的一半

01:43:25.150 --> 01:43:26.150
就是减去五

01:43:26.150 --> 01:43:27.150
是不是就是三

01:43:27.150 --> 01:43:28.150
当前页码是七

01:43:28.150 --> 01:43:29.150
减去五

01:43:29.150 --> 01:43:30.150
是不是就是二

01:43:30.150 --> 01:43:31.150
对吧

01:43:32.150 --> 01:43:33.150
当前页码是七

01:43:33.150 --> 01:43:34.150
减去五

01:43:34.150 --> 01:43:35.150
是不是就是二

01:43:35.150 --> 01:43:36.150
所以说

01:43:36.150 --> 01:43:38.150
最小的那个东西是怎么算的

01:43:38.150 --> 01:43:39.150
命

01:43:39.150 --> 01:43:40.150
我们用抗死

01:43:40.150 --> 01:43:42.150
命等于什么

01:43:42.150 --> 01:43:43.150
配级

01:43:43.150 --> 01:43:44.150
减去什么

01:43:46.150 --> 01:43:47.150
当然这样子

01:43:47.150 --> 01:43:48.150
出来有可能会有小数

01:43:48.150 --> 01:43:49.150
比方说都是九的话

01:43:49.150 --> 01:43:50.150
就可能小数

01:43:50.150 --> 01:43:51.150
然后小数的话就

01:43:51.150 --> 01:43:53.150
minus floor一下

01:43:53.150 --> 01:43:54.150
sale floor

01:43:54.150 --> 01:43:55.150
其实都差不多

01:43:55.150 --> 01:43:56.150
要么就左边多一个

01:43:56.150 --> 01:43:57.150
要么就右边多一个

01:43:57.150 --> 01:43:58.150
无所谓

01:43:58.150 --> 01:43:59.150
但是有没有可能

01:43:59.150 --> 01:44:00.150
减出来的最小数字

01:44:00.150 --> 01:44:01.150
是负数

01:44:01.150 --> 01:44:02.150
或者是零

01:44:02.150 --> 01:44:03.150
有没有可能

01:44:03.150 --> 01:44:04.150
有

01:44:04.150 --> 01:44:05.150
比方说现在是

01:44:05.150 --> 01:44:06.150
二也二减五

01:44:06.150 --> 01:44:08.150
是不是就是负三了

01:44:08.150 --> 01:44:09.150
所以他最小为一

01:44:09.150 --> 01:44:11.150
因此如果说

01:44:11.150 --> 01:44:12.150
我们可以这样写

01:44:12.150 --> 01:44:14.150
命如果说小于一

01:44:14.150 --> 01:44:15.150
那么我就写个表达式

01:44:15.150 --> 01:44:17.150
命就把它变为一

01:44:17.150 --> 01:44:18.150
但是他这里就必须要

01:44:18.150 --> 01:44:19.150
标记成ness

01:44:19.150 --> 01:44:20.150
我们平时开发的时候

01:44:20.150 --> 01:44:21.150
尽量用抗死

01:44:21.150 --> 01:44:23.150
如果说发现需要改变的时候

01:44:23.150 --> 01:44:24.150
确实需要改变

01:44:24.150 --> 01:44:26.150
我们再把它换成ness

01:44:26.150 --> 01:44:27.150
写成这么一个代码

01:44:27.150 --> 01:44:29.150
如果他小于一

01:44:29.150 --> 01:44:30.150
这个条件成立

01:44:30.150 --> 01:44:31.150
我就把它复制为一

01:44:31.150 --> 01:44:32.150
你也可以用衣服判断

01:44:32.150 --> 01:44:34.980
也可以

01:44:34.980 --> 01:44:35.980
那么这个命是不是出来了

01:44:35.980 --> 01:44:36.980
我们来输出一下命

01:44:36.980 --> 01:44:42.210
现在是一对吧

01:44:42.210 --> 01:44:44.210
下一页还是一

01:44:44.210 --> 01:44:45.210
因为是第二页了

01:44:45.210 --> 01:44:48.210
我们来再同时输出一下配级

01:44:48.210 --> 01:44:54.460
第二页他最小值

01:44:54.460 --> 01:44:55.460
还是一第三页

01:44:55.460 --> 01:44:56.460
还是一第四页

01:44:56.460 --> 01:44:57.460
还是一第五页

01:44:57.460 --> 01:44:58.460
还是一第六页

01:44:58.460 --> 01:45:00.460
还是一第七页

01:45:00.460 --> 01:45:02.460
就变成二了

01:45:02.460 --> 01:45:03.460
变成二了

01:45:03.460 --> 01:45:05.460
然后再第八页

01:45:05.460 --> 01:45:06.460
最小值是不是三

01:45:06.460 --> 01:45:07.460
那跟这边

01:45:07.460 --> 01:45:08.460
这个数字

01:45:08.460 --> 01:45:09.460
最小的数字是不是一样的

01:45:09.460 --> 01:45:10.460
第七页

01:45:10.460 --> 01:45:11.460
这就是二了

01:45:11.460 --> 01:45:12.460
第八页就是三

01:45:12.460 --> 01:45:14.460
第六页还是一

01:45:14.460 --> 01:45:15.460
那么算出来

01:45:15.460 --> 01:45:17.460
这个最小的数字过后

01:45:17.460 --> 01:45:19.460
我们再来算大的数字就很简单了

01:45:19.460 --> 01:45:20.460
因为最小的数字

01:45:20.460 --> 01:45:21.460
加上这个数字

01:45:21.460 --> 01:45:23.460
再减一不就是最大数字吗

01:45:23.460 --> 01:45:26.460
一加十减一不就是十吗

01:45:26.460 --> 01:45:27.460
然后呢

01:45:27.460 --> 01:45:30.460
二加十减一不就是十一吗

01:45:30.460 --> 01:45:31.460
八加三

01:45:31.460 --> 01:45:34.460
三加十减一不就是十二吗

01:45:34.460 --> 01:45:36.460
所以说这里最大数字

01:45:36.460 --> 01:45:37.460
很容易算出来

01:45:37.460 --> 01:45:38.460
Magster就是什么

01:45:38.460 --> 01:45:40.460
另加上

01:45:40.460 --> 01:45:41.460
最小的数字

01:45:41.460 --> 01:45:44.460
最大数字就非常容易算出来

01:45:44.460 --> 01:45:45.460
当然了

01:45:45.460 --> 01:45:46.460
最大数字也不能超过一定的范围

01:45:46.460 --> 01:45:48.460
比方说到了十一过后

01:45:48.460 --> 01:45:52.460
六加十减一变成十五

01:45:52.460 --> 01:45:53.460
但是呢

01:45:53.460 --> 01:45:54.460
我最多只有十二一

01:45:54.460 --> 01:45:55.460
所以说这里还判断一下

01:45:55.460 --> 01:45:57.460
如果说Magster大于了什么

01:45:57.460 --> 01:45:58.460
page number

01:45:58.460 --> 01:45:59.460
大于了总数

01:45:59.460 --> 01:46:00.460
最大一嘛

01:46:00.460 --> 01:46:01.460
那么Magster呢

01:46:01.460 --> 01:46:02.460
要等于最大一嘛

01:46:02.460 --> 01:46:04.460
它只最多只能到最大一嘛

01:46:04.460 --> 01:46:06.460
它不能再大了

01:46:06.460 --> 01:46:07.460
好命出来了

01:46:07.460 --> 01:46:08.460
Magster出来了

01:46:08.460 --> 01:46:09.460
那还不简单吗

01:46:09.460 --> 01:46:10.460
就是去寻完呗

01:46:11.460 --> 01:46:12.460
i等于什么

01:46:13.460 --> 01:46:15.460
i小于等于Magster

01:46:15.460 --> 01:46:16.460
i加加

01:46:16.460 --> 01:46:17.460
每一次循环

01:46:17.460 --> 01:46:18.460
创建一个元素

01:46:21.460 --> 01:46:22.460
文本是什么

01:46:22.460 --> 01:46:23.460
文本就是i

01:46:23.460 --> 01:46:24.460
对吧

01:46:24.460 --> 01:46:26.460
从六循环到十二

01:46:26.460 --> 01:46:27.460
第一次循环

01:46:27.460 --> 01:46:28.460
创建文本就是六

01:46:28.460 --> 01:46:29.460
第二次循环

01:46:29.460 --> 01:46:30.460
文本就是七

01:46:30.460 --> 01:46:31.460
对吧

01:46:31.460 --> 01:46:32.460
不就是个i吗

01:46:32.460 --> 01:46:33.460
好的

01:46:33.460 --> 01:46:34.460
它的状态呢

01:46:34.460 --> 01:46:35.460
它不可能有金用状态

01:46:35.460 --> 01:46:36.460
这里边

01:46:36.460 --> 01:46:37.460
这里边不可能有金用状态

01:46:37.460 --> 01:46:39.460
它可能会有激活状态

01:46:39.460 --> 01:46:40.460
什么情况下是激活的呢

01:46:40.460 --> 01:46:42.460
无非就是当前的

01:46:42.460 --> 01:46:43.460
你这个数字

01:46:43.460 --> 01:46:45.460
跟那个我那个配截

01:46:45.460 --> 01:46:47.460
跟我这个页码是一样的

01:46:47.460 --> 01:46:49.460
目前是第三页

01:46:49.460 --> 01:46:50.460
目前是第十一页

01:46:50.460 --> 01:46:51.460
你从六循环到十二

01:46:51.460 --> 01:46:52.460
那循环到十一的时候

01:46:52.460 --> 01:46:53.460
是不是这个i

01:46:53.460 --> 01:46:54.460
跟那个配截一样了

01:46:54.460 --> 01:46:55.460
如果说一样的情况下

01:46:55.460 --> 01:46:56.460
是不是i的T

01:46:58.460 --> 01:46:59.460
i的T

01:46:59.460 --> 01:47:01.460
否则的话就是一个普通样式

01:47:01.460 --> 01:47:02.460
点击过后

01:47:02.460 --> 01:47:03.460
跳转到第几页

01:47:03.460 --> 01:47:04.460
然后毫无疑问就是

01:47:04.460 --> 01:47:05.460
你这个数字是多少

01:47:05.460 --> 01:47:06.460
点击过后就跳转到多少

01:47:06.460 --> 01:47:07.460
对吧

01:47:08.460 --> 01:47:16.280
好

01:47:16.280 --> 01:47:17.280
这个分析就完事了

01:47:17.280 --> 01:47:18.280
那么整个列表呢

01:47:18.280 --> 01:47:20.280
以整个我们的这个

01:47:20.280 --> 01:47:22.280
小的demo就做完了

01:47:22.280 --> 01:47:23.280
最后呢

01:47:23.280 --> 01:47:24.280
我们把这个打开

01:47:24.280 --> 01:47:30.450
把这个打开

01:47:30.450 --> 01:47:31.450
好

01:47:33.760 --> 01:47:34.760
就完事了

01:47:35.760 --> 01:47:37.760
好开发完成之后呢

01:47:37.760 --> 01:47:38.760
你可以

01:47:38.760 --> 01:47:40.760
比方说我们就演示一下吧

01:47:40.760 --> 01:47:41.760
现在还不讲部署

01:47:41.760 --> 01:47:43.760
开发完成过后呢

01:47:43.760 --> 01:47:44.760
比方各种测试没问题了

01:47:44.760 --> 01:47:45.760
把这个取掉

01:47:45.760 --> 01:47:46.760
各种测试没问题了

01:47:46.760 --> 01:47:47.760
然后你就

01:47:48.760 --> 01:47:50.760
打包

01:47:50.760 --> 01:47:54.330
打包完了过后呢

01:47:54.330 --> 01:47:55.330
他就会给你形成一个

01:47:55.330 --> 01:47:56.330
最传统的ATML

01:47:56.330 --> 01:47:57.330
CSS GS

01:47:57.330 --> 01:47:58.330
你看呀

01:47:58.330 --> 01:47:59.330
GS

01:47:59.330 --> 01:48:00.330
给你分包的

01:48:00.330 --> 01:48:01.330
然后呢

01:48:01.330 --> 01:48:02.330
CSS

01:48:02.330 --> 01:48:03.330
给你分包的

01:48:03.330 --> 01:48:05.330
他的资源

01:48:05.330 --> 01:48:07.330
给你形成一个

01:48:07.330 --> 01:48:08.330
ATML

01:48:08.330 --> 01:48:09.330
那么你就把

01:48:09.330 --> 01:48:10.330
需要把这个东西

01:48:10.330 --> 01:48:11.330
部署到服务器

01:48:11.330 --> 01:48:12.330
就完事了

01:48:12.330 --> 01:48:13.330
当然这件事呢

01:48:13.330 --> 01:48:14.330
一般不要你来做

01:48:14.330 --> 01:48:15.330
甚至打包这个命令

01:48:15.330 --> 01:48:16.330
都不需要你来做

01:48:16.330 --> 01:48:17.330
一般来说

01:48:17.330 --> 01:48:18.330
你做完了过后

01:48:18.330 --> 01:48:19.330
你们公司的GSNAV

01:48:19.330 --> 01:48:21.330
上传到你们的

01:48:21.330 --> 01:48:22.330
代码仓库

01:48:22.330 --> 01:48:24.330
你的工作就完成了

01:48:24.330 --> 01:48:25.330
剩下的事情呢

01:48:25.330 --> 01:48:26.330
就是运为了

01:48:26.330 --> 01:48:27.330
来帮你打包

01:48:27.330 --> 01:48:28.330
帮你部署

01:48:28.330 --> 01:48:29.330
不用理会

01:48:29.330 --> 01:48:30.330
好

01:48:30.330 --> 01:48:31.330
那么打包当然

01:48:31.330 --> 01:48:32.330
当然目前这个

01:48:32.330 --> 01:48:33.330
是不能运行的

01:48:33.330 --> 01:48:34.330
为什么不能运行

01:48:34.330 --> 01:48:35.330
是有跨越问题

01:48:35.330 --> 01:48:36.330
比方说你把

01:48:36.330 --> 01:48:37.330
垫手扶持一下

01:48:37.330 --> 01:48:38.330
放到桌面

01:48:38.330 --> 01:48:39.330
你把这个东西

01:48:39.330 --> 01:48:40.330
拖到别的扣子里边

01:48:40.330 --> 01:48:42.330
用DF Server来运行

01:48:42.330 --> 01:48:43.330
这个时候就出问题了

01:48:43.330 --> 01:48:44.330
因为你的开发服务器没了

01:48:44.330 --> 01:48:45.330
对不对

01:48:45.330 --> 01:48:47.330
开发服务器没了

01:48:47.330 --> 01:48:49.330
这个就是那个出不来

01:48:49.330 --> 01:48:50.330
什么出不来

01:48:50.330 --> 01:48:51.330
那个列表出不来

01:48:51.330 --> 01:48:52.330
就阿迦克斯出不来

01:48:52.330 --> 01:48:55.330
因为他有跨越问题

01:48:55.330 --> 01:48:56.330
刚才为什么没有跨越问题

01:48:56.330 --> 01:48:58.330
是因为那个

01:48:58.330 --> 01:48:59.330
开发的阶段

01:48:59.330 --> 01:49:00.330
我们是用了代理

01:49:00.330 --> 01:49:01.330
把开发服务器有代理

01:49:01.330 --> 01:49:02.330
所以说不会有跨越问题

01:49:02.330 --> 01:49:03.330
而且呢

01:49:03.330 --> 01:49:04.330
部署过后呢

01:49:04.330 --> 01:49:05.330
我们也讲过

01:49:05.330 --> 01:49:06.330
部署过后是没有跨越问题的

01:49:06.330 --> 01:49:07.330
那现在你没有部署

01:49:07.330 --> 01:49:08.330
所以还有跨越问题

01:49:08.330 --> 01:49:09.330
不过没关系

01:49:09.330 --> 01:49:11.330
你只需要把这个东西上交

01:49:11.330 --> 01:49:12.330
他们一部署

01:49:12.330 --> 01:49:14.330
那么这些问题都没了

01:49:14.330 --> 01:49:15.330
好那么这就是

01:49:15.330 --> 01:49:17.330
整个利用工程化来开发的

01:49:17.330 --> 01:49:19.330
这么一个体验

01:49:19.330 --> 01:49:20.330
这一节课呢

01:49:20.330 --> 01:49:22.330
学到了一些

01:49:22.330 --> 01:49:24.330
学到是信息量还是蛮大的

01:49:24.330 --> 01:49:25.330
讲了两个新知识

01:49:25.330 --> 01:49:26.330
一个是分包

01:49:26.330 --> 01:49:28.330
一个是跨越代理

01:49:28.330 --> 01:49:29.330
然后呢讲

01:49:29.330 --> 01:49:30.330
让大家体验到了

01:49:30.330 --> 01:49:31.330
工程化开发是一个

01:49:31.330 --> 01:49:34.330
什么样的一种感觉

01:49:34.330 --> 01:49:36.330
以及我们一些文件

01:49:36.330 --> 01:49:37.330
讲到化分习惯

01:49:37.330 --> 01:49:38.330
然后呢

01:49:38.330 --> 01:49:39.330
我们学到了这个分析

01:49:39.330 --> 01:49:40.330
它的一些基本逻辑

01:49:40.330 --> 01:49:41.330
是怎么去做的

01:49:41.330 --> 01:49:42.330
怎么去实现的

01:49:42.330 --> 01:49:43.330
信息量还是蛮大的

01:49:43.330 --> 01:49:44.330
总结的话

01:49:44.330 --> 01:49:45.330
不用总结了

01:49:45.330 --> 01:49:47.330
因为这个文档一写的

01:49:47.330 --> 01:49:49.330
对文档一写的非常详细的

01:49:49.330 --> 01:49:51.330
你基本上也就是总结了

01:49:51.330 --> 01:49:53.330
你们可以看这个文档来进行回忆

01:49:53.330 --> 01:49:55.330
反正今天你们的任务就一个

01:49:55.330 --> 01:49:56.330
把这个东西做完

01:49:56.330 --> 01:49:58.330
并且能够理解这些代码

01:49:58.330 --> 01:49:59.330
是怎么运作的

01:49:59.330 --> 01:50:01.330
就OK了

01:50:01.330 --> 01:50:02.330
后边呢

01:50:02.330 --> 01:50:03.330
我们就可以进入

01:50:03.330 --> 01:50:04.330
那个框架的学习了

01:50:04.330 --> 01:50:05.330
至此呢

01:50:05.330 --> 01:50:06.330
你通往框架的路

01:50:06.330 --> 01:50:07.330
已经完全畅通了

01:50:07.330 --> 01:50:08.330
没有任何东西

01:50:08.330 --> 01:50:10.330
可以阻止你学习框架的

01:50:10.330 --> 01:50:11.330
当然学完框架过之后

01:50:11.330 --> 01:50:12.330
就做一些面试题

01:50:12.330 --> 01:50:13.330
你就可以就业了

01:50:13.330 --> 01:50:14.330
好

01:50:14.330 --> 01:50:15.330
那么

01:50:15.330 --> 01:50:17.330
这个课想到这了

01:50:17.330 --> 01:50:18.330
拜拜

