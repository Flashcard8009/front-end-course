WEBVTT

00:00.240 --> 00:03.660
好 我们这节课的话 要为大家带来的是一个

00:04.380 --> 00:10.660
无止期游戏的这个案例 啊 无止期的话 这个大家都玩过 是吧 好 我们这边的话 这个无止期的话

00:11.460 --> 00:17.820
我这边还是演示一下效果吧 比如说 这边点击这个黑线的这个交界处 比如我点击这里

00:18.420 --> 00:26.820
是不是一颗这个白色的旗子 就放上去了 放上去之后 然后接下来 下一次点击的时候 他就应该是什么呢 他就应该是黑色的旗子

00:27.400 --> 00:33.720
啊 然后接下来依此类推 啊 比如我这边的话 走一次白旗一次黑旗啊 最后那个

00:34.920 --> 00:37.440
抽起五个的话 那是不是就是显示这个

00:38.280 --> 00:44.920
白旗胜利啊 胜利的话 你看这边的话 会就是把这个胜利的这个旗子 会有一个这个红色的阴影

00:45.320 --> 00:53.400
啊 然后就是你每一次走的哪一步 也会把它标识出来啊 比如我们第一次是下的这颗旗子 第二次是下的这颗旗子

00:53.980 --> 01:02.340
第三次啊 然后这样第四次啊 这个的话 当然我们这比较简单嘛 所以你这边看着 比如你这边真正在玩的时候 你其实是比较复杂的

01:02.700 --> 01:08.260
对吧 比如说我这边的话 我们走一个啊 比较这边啊 然后把它堵上

01:09.060 --> 01:17.500
然后这边堵上啊 就真正在玩的时候 其实是你走是没有这种不是不会像刚才那样

01:18.040 --> 01:25.200
对不对啊 然后就在这边走 看到没有啊 那这样子的话 你把那个每一步的那个旗子 把它标记出来

01:25.680 --> 01:34.040
然后就是玩家在复盘的时候 他也比较好复盘啊 他看得到他自己每一次是怎么走的啊 这个的话就是这个

01:34.440 --> 01:43.600
五子旗的这个效果 然后同样在做这个五子旗 这个游戏之前 我们会有一些这个前置知识啊 我们这边的话来看一下这个前置知识

01:44.360 --> 01:46.240
前置知识的话在这边

01:47.560 --> 01:55.760
我们来看一下啊 首先第一个前置知识 第一个前置知识的话就是什么 就是这个query selector和query selector all

01:56.400 --> 02:01.560
这个是什么呢 这个是HTML5新增的这个查询这个动物节点的这个API

02:02.440 --> 02:09.000
以前我们查询动物节点的话 是不是只能通过通过这个document.getElementById

02:09.360 --> 02:17.280
然后document.getElementByName啊 通过这些方法 对吧啊 这些方法的话 然后其实

02:17.640 --> 02:24.760
没那么方便 那H5的话 他给我们提供了这两个新的这个API 一个是query selector 一个是query selector all

02:25.200 --> 02:29.320
那通过这两个API的话 我们就可以干嘛呢 我们就可以通过css的语法

02:29.880 --> 02:32.920
来帮助我们来查找节点啊 我们这边让我们来看一下

02:33.880 --> 02:36.520
比如说来到我们这边 我这边要写一个ur

02:37.240 --> 02:39.800
ur 然后接下来的话 ur 下面

02:39.980 --> 02:43.980
ur 下面的li 啊li 然后接下来的话

02:46.180 --> 02:51.780
这边一个downer 然后乘一个比5 走啊 那我这边是不是有个ur

02:52.540 --> 02:58.860
啊 有个ur之后 然后接下来我这边我要找这个下面的这个li 那怎么找呢啊 其实就很简单

02:59.300 --> 03:07.620
这边让你就可以哇一个这个li 等于一个document.query selector

03:08.440 --> 03:18.200
然后接下来这里面 这里面的话就传入你这个css 选择区 这个选择器的语法 那我们这边呢就是ur 下面的li

03:19.040 --> 03:20.800
对吧 那我们这边让我们log一下

03:21.840 --> 03:27.400
大家这边的话打印这个li 打印这个li之后 然后接下来在我们这边 我们来看一下

03:29.120 --> 03:36.440
把这个检查 把这个控制台打开 打开之后然后就在这边刷新 你看这边是不是成功就把第一个li就找到了

03:37.020 --> 03:45.020
看到没有 第一个li 那我如果的话 我这边你注意哈query selector的话 它不能只找到什么呢 只找到匹配

03:45.580 --> 03:49.020
就是匹配上的第一个元素 就这个query selector

03:50.780 --> 04:02.140
只会只会找到匹配的第一个元素啊 那我如果要找所有的怎么办呢 那就使用query selector

04:02.960 --> 04:10.680
比我们这边哇一个lis 等于一个document点这个query selector

04:11.320 --> 04:16.920
然后接下这边 ur 下面的这个li 好同样我们这边让我们log一下

04:18.880 --> 04:22.960
log一下lis 好 来一下这边 回来看一下刷新

04:23.880 --> 04:30.280
你看这边 这边通过这个query selector all 它是不是把所有符合要求的 所以就都找到了

04:30.980 --> 04:39.620
对不对啊 所以说通过这两个api的话 就可以让你很方便的使用这个css的选择器语法来查询我们的多目节点

04:40.820 --> 04:45.780
好 然后接下来下一个 下一个的话就是什么呢 下一个就是这个制服串模板

04:46.820 --> 04:51.700
啊 就是在讲这次这个无止期的时候 到时候我就会直接用这个制服串模板

04:52.260 --> 04:56.220
啊 这个是什么呢 这个其实也很简单 比如你看我这边主了个例子

04:56.760 --> 05:04.040
就忘了一个内幕等一个卸截 那现在的话我要打印一个什么呢 我打印一个Hello卸截 那以前你是不得这个样子

05:04.840 --> 05:05.440
比如说我这边

05:06.800 --> 05:13.440
挖一个内幕等于一个卸截 好了 现在的话我打印这个什么呢 Hello

05:14.360 --> 05:18.960
Hello卸截 那以前的话是不一样这样子的 Hello 然后拼接上一个

05:19.500 --> 05:19.980
内幕

05:21.020 --> 05:24.940
就得这样子啊 好有了制服串模板之后 然后接下来你就可以这样子来写

05:25.940 --> 05:29.420
啊 比如说我这边console log 然后使用反引号

05:30.340 --> 05:33.260
看到没有 反引号 这个反引号是哪里 就是你键盘

05:34.340 --> 05:39.660
你键盘上面是不是有一排数字键 数字键一左边的那个 那个叫做反引号

05:40.300 --> 05:44.900
然后接下来这边的话就是Hello 然后接下来的号 然后接下来的话我这边就可以

05:45.680 --> 05:47.920
用一个downer符号和一堆大口号

05:48.760 --> 05:55.680
然后在这里面的话 填入内幕 那回头的话 这一块他就会干嘛呢 他就会去解析这个变量

05:56.200 --> 06:01.200
啊 他去解析这变量 所以回头的话 这一块他就会打印出Hello卸截

06:02.160 --> 06:10.480
看到没有啊 这个就是ES6给我们提供的制服串模板 非常的方便啊 回头的话 我们这边的话 你看我这边举了个例子

06:11.280 --> 06:14.680
举了个例子 就以前的话 我们比如说使用这个制服串拼接

06:14.920 --> 06:18.800
你看我这边哈 比如我这边的话 也会有一个这个我旗子的这个坐标

06:19.520 --> 06:24.520
cheese point啊 然后白色 然后AK12 y13

06:25.240 --> 06:31.360
有个坐标 让我这边让我拼接一个新的旗子 你看我以前使用这个制服串拼接 你看是不是很麻烦

06:32.240 --> 06:36.200
对不对 非常非常麻烦 而且你还容易干嘛呢 你还容易写错

06:36.920 --> 06:40.000
啊 最终他拼接出来是什么样子呢 最终拼接出来就是这个样子

06:40.980 --> 06:44.500
看到没有 我为了拼接这么一个效果 你看我这边是不是写了一长串

06:45.580 --> 06:50.700
对不对 而且很容易错啊 关键是很容易错 那现在的话我使用制服串模板 你看我这边

06:51.900 --> 06:56.780
啊 你看我这边的话 是不是就直接写就可以了 然后接下来有便量的地方 这边用这个downer大扩号

06:57.260 --> 06:58.380
是把它包一下就可以了

06:59.260 --> 07:05.900
对不对啊 这个就是这个制服串模板啊 你可以直接在写的时候 就直接用

07:06.280 --> 07:10.360
最后一个就是什么呢 最后一个就是这个client wise

07:11.320 --> 07:12.200
啊 这个的话就是

07:13.400 --> 07:19.920
获取获取一个格子它的宽度 你要注意它的宽度是包含什么呢 是包含这个piling的

07:20.960 --> 07:27.520
看到没有啊 你看我这边写的有client wise属性 表示元素的内部宽度 以像书记

07:28.040 --> 07:31.360
该属性会包括什么呢 包括内一边距

07:32.180 --> 07:38.540
啊 但不包括什么呢 不包括border和这个margin啊 还有这个垂直滚动挑 说他这边的话就是

07:39.620 --> 07:43.020
这个是你的内容区域 对不对 然后加上什么呢 加上你的这个

07:43.580 --> 07:47.900
piling啊 回头的话我就会使用到什么呢 我会使用到这个client wise

07:48.740 --> 07:50.780
为什么会用到这个呢 因为你看我这边

07:52.100 --> 07:58.100
我这里啊 我重新刷新一下 我这边的话 到时候这个用户点的时候 用户的话可能是点的是这个位置

07:58.560 --> 08:02.080
对不对 点的是这个位置 点了这个位置的话 让我这边是不是应该是

08:02.560 --> 08:07.000
呃 在这个位置下一个旗子啊 对吧 那如果用户点的是这个位置

08:07.680 --> 08:09.480
让我视频应该是在这个位置下一个旗子

08:10.200 --> 08:11.880
那我就怎么办呢 我叫判断

08:12.480 --> 08:16.520
啊 我叫判断 他究竟是点点的是前半段还是后半段

08:17.040 --> 08:21.640
那怎么呢 判断呢 让我这边是不是可以拿到他的这个这个格子的client wise啊

08:22.600 --> 08:26.480
对不对 拿到他的client wise之后 然后接下来的话 除一个2

08:27.220 --> 08:33.500
除一个2之后 然后接下来通过用户点击的这个点 我们可以拿到这个坐标 拿到这个坐标之后 让我判断

08:33.940 --> 08:38.660
就是他这个一半的距离 是大鱼还是小鱼 如果是小鱼的话 是不是应该是在这

08:39.100 --> 08:40.620
如果是大鱼 是不是应该在这

08:41.380 --> 08:45.580
对不对 但是除此之外的话 除了x走 你要判断 y走 你也要判断

08:46.420 --> 08:49.980
对吧 我如果我点了是这 那就是应该是在这个位置

08:50.500 --> 08:54.220
如果我点了是这 点了是这 那就是应该是这个位置

08:54.960 --> 08:58.560
啊 这个就是我们整个这个无止期 他这个

08:59.880 --> 09:02.760
效果演示 以及一个这个前置知识的这个讲解

09:03.320 --> 09:06.640
大家下去的话 可以把这个视频看完之后 可以先尝试做一下

09:07.600 --> 09:12.640
一步一步做一下啊 首先第一步你就该是不是生成这个 生成这个期盘

09:13.960 --> 09:17.440
对吧 先把这个期盘生成 生成之后 然后竟然一步一步

09:18.360 --> 09:23.040
获取到用户的这个鼠标的点击事件 然后判断他究竟是点了是哪个格子

09:23.260 --> 09:24.260
那接下来把那个

09:24.940 --> 09:25.740
呃 棋子

09:26.340 --> 09:33.380
把它画上去 画上去之后 然后接下来每次下一颗棋 你还需要判断什么呢 判断游戏是否结束

09:34.260 --> 09:41.100
对不对 我们做游戏一般都是这样子的啊 你每次下一颗棋 你都需要重新判断一下 看这个游戏结束没有

09:42.460 --> 09:46.980
好 然后这几颗就先到这里啊 大家可以先想一想吧 先想一想

