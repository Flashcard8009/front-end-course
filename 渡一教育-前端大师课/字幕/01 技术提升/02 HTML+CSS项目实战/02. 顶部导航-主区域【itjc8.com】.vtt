WEBVTT

00:00.940 --> 00:04.940
好 来哈 咱们现在工程已经搭建完成了

00:04.940 --> 00:08.940
那我们接下来呢 就一个区域 一个区域的开发

00:08.940 --> 00:10.940
其实呢 同学们这一块呢

00:10.940 --> 00:13.940
特别是初学者 在开发页面的时候呢

00:13.940 --> 00:16.940
有一个心态特别不好 就是特别着急

00:16.940 --> 00:18.940
为什么呢 因为他觉得啊

00:18.940 --> 00:20.940
我要开发整个页面 这个页面东西这么多

00:20.940 --> 00:22.940
对吧 我写了半天才写那么一点

00:22.940 --> 00:24.940
那我啥时候才能开发完啊

00:24.940 --> 00:28.940
有这么一个比较有急招的心态

00:28.940 --> 00:30.940
那么这一块一定要克服一下

00:30.940 --> 00:33.940
为什么呢 因为现在的前端页面啊

00:33.940 --> 00:37.940
跟十年前 八年前已经完全不可比了

00:37.940 --> 00:40.940
十年前 八年前 我们还以什么单位做开发

00:40.940 --> 00:42.940
我们还以页面为单位

00:42.940 --> 00:45.940
什么叫页面为单位 就是小张

00:45.940 --> 00:47.940
你过来 这个页面交给你了啊

00:47.940 --> 00:48.940
你把这个页面完成

00:48.940 --> 00:51.940
这是我们过去的开发方式

00:51.940 --> 00:54.940
现在还会不会用这种开发方式呢

00:54.940 --> 00:58.940
只要是脑袋比较正常的公司

00:58.940 --> 01:00.940
它就不会用这种开发方式了

01:00.940 --> 01:04.940
我们现在是以组建为单位来进行开发

01:04.940 --> 01:07.940
什么叫为组建为单位 就是页面的一个区域

01:07.940 --> 01:10.940
比方说 小王同学

01:10.940 --> 01:13.940
你再把这个区域开发一下

01:13.940 --> 01:15.940
这个区域就是一个组建

01:15.940 --> 01:18.940
对吧 你把开发一下就行了

01:18.940 --> 01:20.940
它是以组建为单位

01:20.940 --> 01:23.940
一个页面是有很多很多的小的区域组成的

01:23.940 --> 01:25.940
你只需要开发一个区域

01:25.940 --> 01:26.940
或者是那么几个区域

01:26.940 --> 01:28.940
其他的事情交给别的开发者

01:28.940 --> 01:31.940
或者是交给一些成熟的产品

01:31.940 --> 01:33.940
已经现成的东西给你做出来的

01:33.940 --> 01:35.940
当然我们在初学的时候呢

01:35.940 --> 01:39.940
我们还是以完成整个页面为目标

01:39.940 --> 01:40.940
但是同学们要知道

01:40.940 --> 01:42.940
以后你们的到公司里面

01:42.940 --> 01:44.940
是以组建为单位进行开发的

01:44.940 --> 01:45.940
其实袁老师刚才这里

01:45.940 --> 01:48.940
随便画的一个组建都还是有点大

01:48.940 --> 01:49.940
我们有的时候呢

01:49.940 --> 01:51.940
会把组建画分得特别特别小

01:51.940 --> 01:53.940
比方说就这个歌舞车

01:53.940 --> 01:54.940
你就开发这一块

01:54.940 --> 01:56.940
最后我把它组装在一起

01:56.940 --> 01:58.940
那么如何以组建开发

01:58.940 --> 02:00.940
如何来进行团队协作

02:00.940 --> 02:01.940
如何把它组装在一起

02:01.940 --> 02:03.940
这些是以后的知识

02:03.940 --> 02:05.940
所以同学们首先要有这么一个概念

02:05.940 --> 02:08.940
开发页面不是以页面为单位

02:08.940 --> 02:10.940
而是以组建为单位

02:10.940 --> 02:13.940
所以说我们这一块的课程

02:13.940 --> 02:15.940
沿用这样的一个思想

02:15.940 --> 02:17.940
就是我们一块区域

02:17.940 --> 02:19.940
一块区域慢慢搞定就行了

02:19.940 --> 02:22.940
因此你的目标不是要开发整个网页

02:22.940 --> 02:24.940
而是一个一个的小区域

02:24.940 --> 02:27.940
随着我们的开发进程的前行

02:27.940 --> 02:29.940
最终就会完成整个页面

02:29.940 --> 02:31.940
这是第一个跟大家说的

02:31.940 --> 02:33.940
另外我们从这一块

02:33.940 --> 02:35.940
马上要进行开发了

02:35.940 --> 02:36.940
在开发的过程中

02:36.940 --> 02:38.940
同学们会有这么一种

02:38.940 --> 02:40.940
这么几种感觉出现

02:40.940 --> 02:43.940
第一种感觉就是

02:43.940 --> 02:45.940
小的区域

02:45.940 --> 02:47.940
有些小的区域

02:47.940 --> 02:48.940
代码多

02:48.940 --> 02:50.940
大的区域

02:50.940 --> 02:51.940
代码少

02:51.940 --> 02:53.940
这是有点反直觉的

02:53.940 --> 02:56.940
你们以前都还没有学习开发

02:56.940 --> 02:59.940
都是作为一个用户来去访问网页的

02:59.940 --> 03:01.940
你们会想当然的认为

03:01.940 --> 03:02.940
有些区域还很大

03:02.940 --> 03:03.940
比方说像这个区域

03:03.940 --> 03:04.940
你看从这里开始

03:04.940 --> 03:06.940
手机 智能穿带

03:06.940 --> 03:08.940
下面又加电

03:08.940 --> 03:09.940
好多好多东西

03:09.940 --> 03:10.940
这一块区域应该很复杂

03:10.940 --> 03:12.940
应该代码很多

03:12.940 --> 03:14.940
而且写的会非常耗时间

03:14.940 --> 03:16.940
完全错

03:16.940 --> 03:18.940
其实大的区域

03:18.940 --> 03:20.940
往往开发量是非常少的

03:20.940 --> 03:21.940
比方说你们现在学了

03:21.940 --> 03:24.940
CSS 学了ATM

03:24.940 --> 03:25.940
我要做一个大的区域

03:25.940 --> 03:26.940
太简单了

03:26.940 --> 03:27.940
我拿一个DFV

03:27.940 --> 03:28.940
然后给它宽高一万

03:28.940 --> 03:30.940
不就一个大的区域了吗

03:30.940 --> 03:32.940
就几行代码就实现了

03:32.940 --> 03:34.940
所以说我们代码量多

03:34.940 --> 03:35.940
还是少

03:35.940 --> 03:37.940
写的代码复杂

03:37.940 --> 03:38.940
还是简单

03:38.940 --> 03:39.940
跟那个区域的大小

03:39.940 --> 03:41.940
没有任何关系

03:41.940 --> 03:42.940
而且往往呢

03:42.940 --> 03:44.940
根据我的经验

03:44.940 --> 03:46.940
往往是一个相反的关系

03:47.940 --> 03:49.940
什么时候我们代码量多

03:49.940 --> 03:51.940
什么时候我们代码量复杂

03:51.940 --> 03:54.940
是因为那个区域的元素结构复杂了

03:54.940 --> 03:56.940
那么我们代码量就复杂了

03:56.940 --> 03:57.940
代码量就多了

03:57.940 --> 03:58.940
元素多了

03:58.940 --> 03:59.940
我们代码量就多了

03:59.940 --> 04:01.940
比方说像这

04:01.940 --> 04:03.940
就这么一个小的导航

04:03.940 --> 04:05.940
你看

04:05.940 --> 04:07.940
你看啊

04:07.940 --> 04:08.940
比方说像这

04:08.940 --> 04:09.940
这个区域

04:09.940 --> 04:11.940
是不是元素比较密集

04:11.940 --> 04:13.940
而且你看这

04:13.940 --> 04:14.940
一个物质纸上去

04:14.940 --> 04:16.940
是不是会有一个东西下拉出来

04:16.940 --> 04:17.940
对吧

04:17.940 --> 04:18.940
像这些区域

04:18.940 --> 04:19.940
比方说像这个

04:19.940 --> 04:20.940
你纸上去

04:20.940 --> 04:21.940
下面有一些元素出来了

04:21.940 --> 04:23.940
那么这里会有一些

04:23.940 --> 04:26.940
相对来说比较复杂的结构

04:26.940 --> 04:28.940
这一块代码其实很多的

04:28.940 --> 04:30.940
需要我们花很多心事

04:30.940 --> 04:32.940
以后你们开发多了

04:32.940 --> 04:33.940
慢慢就会感觉到

04:33.940 --> 04:34.940
其实一个网页上

04:34.940 --> 04:36.940
什么地方开发量比较大

04:36.940 --> 04:37.940
占用时间比较多了

04:37.940 --> 04:39.940
往往就是导航区域

04:39.940 --> 04:40.940
导航区域

04:40.940 --> 04:41.940
菜单区域

04:41.940 --> 04:42.940
以及什么这个

04:42.940 --> 04:44.940
这个伦波土这个Banner

04:44.940 --> 04:45.940
这个横幅区域

04:45.940 --> 04:46.940
代码比较多

04:46.940 --> 04:48.940
它起码这三个区域

04:48.940 --> 04:49.940
就这三个区域

04:49.940 --> 04:51.940
它的代码量加起来了

04:51.940 --> 04:53.940
或者是我们占用的时间加起来

04:53.940 --> 04:55.940
可能要达到70%

04:55.940 --> 04:57.940
剩下的区域可能30%都不到

04:57.940 --> 04:58.940
你看别看页面上

04:58.940 --> 05:00.940
只占这么一块小的地方

05:00.940 --> 05:02.940
所以说这是很正常很正常的

05:02.940 --> 05:03.940
那么这一块呢

05:03.940 --> 05:05.940
背后有一些原因

05:05.940 --> 05:07.940
主要是设计的原因

05:07.940 --> 05:08.940
就是我们的页面呢

05:08.940 --> 05:10.940
是设计师设计出来的

05:10.940 --> 05:11.940
在设计的时候呢

05:11.940 --> 05:12.940
它往往把大的区域

05:12.940 --> 05:14.940
做得非常非常简洁简单

05:14.940 --> 05:16.940
一定要让用户非常醒目

05:16.940 --> 05:18.940
没有什么操作

05:18.940 --> 05:20.940
就是复杂的操作

05:20.940 --> 05:22.940
它是设计上的一些原则

05:22.940 --> 05:24.940
而我们把一些不太重要的东西

05:24.940 --> 05:26.940
全部堆积在一些小的区域里边

05:26.940 --> 05:28.940
通过下拉或者是折叠的方式

05:28.940 --> 05:30.940
让用户来浏览

05:30.940 --> 05:31.940
如果说你需要

05:31.940 --> 05:33.940
你就可以在这里找到你想要的东西

05:33.940 --> 05:35.940
它不会占用一面很多的空间

05:35.940 --> 05:37.940
在我们的开发时候呢

05:37.940 --> 05:39.940
小的区域往往占用的代码量比较多

05:39.940 --> 05:41.940
是这么一个原因

05:41.940 --> 05:43.940
这是一个比较反直觉得

05:43.940 --> 05:45.940
我们说做个这个项目

05:45.940 --> 05:47.940
有一个很重要的目标就是

05:47.940 --> 05:49.940
要能够找到这种开发的感觉

05:49.940 --> 05:51.940
这就是其中一个感觉

05:51.940 --> 05:53.940
那么第二个感觉呢

05:53.940 --> 05:55.940
就是在开发的时候啊

05:55.940 --> 05:57.940
有技术含量的代码

05:57.940 --> 05:59.940
少

06:00.940 --> 06:02.940
没有技术含量的

06:05.940 --> 06:07.940
或者是体力活

06:07.940 --> 06:09.940
居多

06:09.940 --> 06:11.940
这是开发的

06:11.940 --> 06:13.940
另一种感觉

06:13.940 --> 06:15.940
就真正有技术含量的代码

06:15.940 --> 06:17.940
可能就占那么几行或者是十代行

06:17.940 --> 06:19.940
其他的

06:19.940 --> 06:21.940
大部分都是体力活的代码

06:21.940 --> 06:23.940
什么叫体力活的代码

06:23.940 --> 06:25.940
这个字体大了一点

06:25.940 --> 06:27.940
我把它放小一点

06:27.940 --> 06:29.940
这个字体的颜色我给它改一下

06:29.940 --> 06:31.940
背景颜色我给它改一下

06:31.940 --> 06:33.940
这些都是属于体力活

06:33.940 --> 06:35.940
它没有什么技术含量的

06:35.940 --> 06:37.940
但是那好说你查一查

06:37.940 --> 06:39.940
查一查之前的示威导图

06:39.940 --> 06:41.940
或者是笔记或者是总结

06:41.940 --> 06:43.940
总知是可以查到的

06:43.940 --> 06:45.940
甚至是百度都可以查到的

06:45.940 --> 06:47.940
或者是回看视频怎么一招都可以查到的

06:47.940 --> 06:49.940
你要改变这些大小怎么改

06:49.940 --> 06:51.940
你要改变字体颜色怎么改

06:51.940 --> 06:53.940
这些都是属于体力活

06:53.940 --> 06:55.940
真正有技术含量的代码呢是什么呢

06:55.940 --> 06:57.940
在我们的ATM4S里面

06:57.940 --> 06:59.940
真正有技术含量的就是布局

06:59.940 --> 07:01.940
你怎么把结构

07:01.940 --> 07:03.940
给它排除这种结构

07:03.940 --> 07:05.940
一定不多

07:05.940 --> 07:07.940
真正有技术含量的代码

07:07.940 --> 07:09.940
一定不多最终是

07:09.940 --> 07:11.940
体力活的代码

07:11.940 --> 07:13.940
这是开发的另一种感觉

07:13.940 --> 07:15.940
好吧

07:15.940 --> 07:17.940
那么这里说了两点感觉

07:17.940 --> 07:19.940
同学们也只是听老师说一说

07:19.940 --> 07:21.940
真的没有感觉到

07:21.940 --> 07:23.940
那我们聚起来做开发来感觉一下

07:23.940 --> 07:25.940
首先我们来做这一块区域

07:25.940 --> 07:27.940
这一块区域呢

07:27.940 --> 07:29.940
我们打算分成两节课来讲

07:29.940 --> 07:31.940
第一节课我们不管这个歌舞车

07:31.940 --> 07:33.940
歌舞车的一块我们有点技术含量

07:33.940 --> 07:35.940
我们下集和咱慢慢说

07:35.940 --> 07:36.940
我们不搞零歌舞车

07:36.940 --> 07:37.940
歌舞车这里不存在

07:37.940 --> 07:39.940
那么我们先把这个区域搞定

07:39.940 --> 07:41.940
那么首先呢要搞定这个区域

07:41.940 --> 07:43.940
你要思考的就是

07:43.940 --> 07:45.940
这个区域呢它的元素结构

07:45.940 --> 07:47.940
是什么样子

07:47.940 --> 07:49.940
那么我们首先可以非常

07:49.940 --> 07:51.940
明显的看到这个区域是

07:51.940 --> 07:53.940
贯穿整个页面的

07:53.940 --> 07:55.940
头部顶部的对吧

07:55.940 --> 07:57.940
那么我们在这里呢可以画一个区域出来

07:57.940 --> 07:59.940
有这么一个DIV

07:59.940 --> 08:01.940
DIV里边呢

08:01.940 --> 08:03.940
又掏了这么一个DIV

08:03.940 --> 08:05.940
又掏了这么一个DIV

08:05.940 --> 08:07.940
对吧这个黄色的这个DIV

08:07.940 --> 08:09.940
我们就认为它是一个container

08:09.940 --> 08:10.940
是不是我们上节课写的

08:10.940 --> 08:12.940
一个容器它有个固定的宽度

08:12.940 --> 08:14.940
摇耳六个像素

08:14.940 --> 08:15.940
然后呢横向局中

08:15.940 --> 08:17.940
我们直接沿用之前的那个

08:17.940 --> 08:19.940
公共样式就可以了

08:19.940 --> 08:21.940
然后这个DIV里边呢

08:21.940 --> 08:23.940
又掏了左右两块

08:23.940 --> 08:25.940
对吧左边一块

08:25.940 --> 08:27.940
右边一块

08:27.940 --> 08:29.940
各物车我们不管啊

08:29.940 --> 08:30.940
各物车不管

08:30.940 --> 08:31.940
那么右边一块

08:31.940 --> 08:33.940
右边一块里边包含了这个菜单

08:33.940 --> 08:34.940
以及各物车

08:34.940 --> 08:36.940
就这么一个画面方式

08:36.940 --> 08:38.940
于是呢我们整个的整体结构

08:38.940 --> 08:40.940
画面为了几层三层

08:40.940 --> 08:41.940
最外面有个DIV

08:41.940 --> 08:43.940
里边有个黄色的DIV在局中

08:43.940 --> 08:45.940
然后在里边呢是一个什么呢

08:45.940 --> 08:47.940
一个

08:47.940 --> 08:49.940
这个左边的绿色的一个菜单

08:49.940 --> 08:51.940
也就是一个右边对吧一个列表

08:51.940 --> 08:52.940
右边呢

08:52.940 --> 08:54.940
右边呢是一个DIV

08:54.940 --> 08:55.940
DIV里边包含一个列表

08:55.940 --> 08:57.940
就是登陆驻车消息通知

08:57.940 --> 08:59.940
然后呢有一个各物车

08:59.940 --> 09:01.940
各物车我们下节课再做

09:01.940 --> 09:03.940
就形成了这么一种结构了

09:03.940 --> 09:05.940
这个结构还是比较好花分的啊

09:05.940 --> 09:07.940
好那么既然形成了这种结构呢

09:07.940 --> 09:09.940
我们代码就可以直接出来了啊

09:09.940 --> 09:11.940
我们到了代码里边

09:11.940 --> 09:16.150
这是我们上节课的代码我们接着写啊

09:16.150 --> 09:18.150
于是呢我在这

09:18.150 --> 09:20.150
在写的时候呢

09:20.150 --> 09:22.150
其实我们可以把我们的工作区啊

09:22.150 --> 09:24.150
稍微调整一下

09:24.150 --> 09:26.150
可以提高我们的开发效率

09:26.150 --> 09:28.150
放下来一点

09:28.150 --> 09:30.150
然后这个浏览器呢我给他放上去一点

09:30.150 --> 09:32.150
放上去一点

09:32.150 --> 09:34.150
这样子呢因为我们开发的是一个横条嘛

09:34.150 --> 09:36.150
对吧所以说我们这里呢

09:36.150 --> 09:38.150
在写这个代码的时候呢就可以看到这个效果了

09:38.150 --> 09:40.150
好DIV里边

09:40.150 --> 09:42.150
我们给他这里外面一个DIV

09:42.150 --> 09:44.150
好给他一个内样式

09:44.150 --> 09:46.150
内样式是什么呢我们可以给他取个名字吧

09:46.150 --> 09:48.150
这是顶部的导航对吧

09:48.150 --> 09:50.150
我们给他取个名字叫top

09:50.150 --> 09:52.150
顶部导航

09:52.150 --> 09:54.150
好然后他里边呢

09:54.150 --> 09:56.150
里边有什么呢里边一个居中的

09:56.150 --> 09:58.150
是个黄色区域居中的

09:58.150 --> 10:00.150
这么一个DIV

10:00.150 --> 10:02.150
好那么于是呢我们到这边

10:02.150 --> 10:04.150
在里边给他写上一个DIV

10:04.150 --> 10:06.150
内样式已经出来了就我们之前写的内样式

10:06.150 --> 10:08.150
一个固定的宽度然后横向居中

10:08.150 --> 10:10.150
有这么一个DIV

10:10.150 --> 10:12.150
好这个DIV里边呢

10:12.150 --> 10:14.150
是不是有一个

10:14.150 --> 10:16.150
绿色的对吧绿色的是一个右

10:16.150 --> 10:18.150
然后呢这边呢有一个

10:18.150 --> 10:20.150
绿色的DIV一个左浮动

10:20.150 --> 10:22.150
一个右浮动对不对

10:22.150 --> 10:24.150
好那么于是呢我们根据这个

10:24.150 --> 10:26.150
信息我们可以写出来

10:26.150 --> 10:28.150
这里边左边有一个UL

10:28.150 --> 10:30.150
是一个列表

10:30.150 --> 10:32.150
然后呢它是一个什么左浮动的

10:32.150 --> 10:34.150
所以说我们之前有个公共内样式

10:34.150 --> 10:36.150
LFL

10:36.150 --> 10:38.150
左浮动的

10:38.150 --> 10:40.150
然后呢右边有个DIV

10:40.150 --> 10:42.150
右浮动的

10:42.150 --> 10:44.150
F

10:44.150 --> 10:46.150
FR是吧右浮动

10:46.150 --> 10:48.150
这是我们上帝贺显的公共样式

10:48.150 --> 10:50.150
一个左浮动一个右浮动

10:50.150 --> 10:52.150
对到一下

10:52.150 --> 10:54.150
那么这里是

10:54.150 --> 10:56.150
FL是不是对到这个

10:56.150 --> 10:58.150
这个绿色的对吧

10:58.150 --> 11:00.150
FR是不是对到这边的这个

11:00.150 --> 11:02.150
对吧各物程度先补助

11:04.150 --> 11:06.150
好那么现在呢这一块

11:06.150 --> 11:08.150
没问题吧应该没问题

11:10.150 --> 11:12.150
好接下来我们继续看啊

11:12.150 --> 11:14.150
当你在写了左浮动啊右浮动之后呢

11:14.150 --> 11:16.150
你马上就要思考一个问题

11:16.150 --> 11:18.150
这个应该形成一个条件反射

11:18.150 --> 11:20.150
什么问题呢高度弹它

11:20.150 --> 11:22.150
就这个玩意儿一旦浮动起来了

11:22.150 --> 11:24.150
那么它是不是高度可能就塌下来了

11:24.150 --> 11:26.150
对吧

11:26.150 --> 11:28.150
那它只要它的指援数有浮动

11:28.150 --> 11:30.150
那么浮援数是很容易高度弹它的

11:30.150 --> 11:32.150
高度塌陷的

11:32.150 --> 11:34.150
那么怎么解决是吧我们之前写的

11:34.150 --> 11:36.150
同用的样式clear fix

11:36.150 --> 11:38.150
就可以把它解决掉

11:38.150 --> 11:40.150
所以说我们有的时候呢条件反射的

11:40.150 --> 11:42.150
指援是有浮动管它是怎么浮动

11:42.150 --> 11:44.150
我浮援数加一个作为没错

11:44.150 --> 11:46.150
加了过的作为没错

11:46.150 --> 11:48.150
什么时候没问题

11:48.150 --> 11:50.150
如果说你到时候给它设置了一个高度

11:50.150 --> 11:52.150
所以就没问题了

11:52.150 --> 11:54.150
强行给它设置一个高度就不弹它了

11:54.150 --> 11:56.150
那你加上怎么没错

11:56.150 --> 11:58.150
所以说我们这里呢

11:58.150 --> 12:00.150
如果说你不想想那么多

12:00.150 --> 12:02.150
那你就给它加上准没错

12:02.150 --> 12:04.150
好这些你看这个这个

12:04.150 --> 12:06.150
以及这个这个是不是都是

12:06.150 --> 12:08.150
同用样式就直接写出来了

12:08.150 --> 12:10.150
好我们再写里边的啊

12:10.150 --> 12:12.150
那这个UL里边说啥呢

12:12.150 --> 12:14.150
那我们就可以一个一个写了

12:14.150 --> 12:16.150
UL是个列表就这一块

12:18.150 --> 12:20.150
画一下吧就这一块

12:20.150 --> 12:22.150
这一块不就是个列表吗

12:22.150 --> 12:24.150
就是个UL对吧那么这个UL里边

12:24.150 --> 12:26.150
是有个很多的li

12:26.150 --> 12:28.150
每个li里边有个超链接对吧

12:28.150 --> 12:30.150
那与是个结构非常好写

12:30.150 --> 12:32.150
那这个结构怎么写呢

12:32.150 --> 12:34.150
li然后呢一边一个超链接

12:34.150 --> 12:36.150
什么小米商城

12:36.150 --> 12:38.150
对吧就一试写就完事了

12:38.150 --> 12:40.150
好这里有一个小的细节啊

12:40.150 --> 12:42.150
同学们要注意一下

12:42.150 --> 12:45.150
那我需不需要给这个UL加一个

12:45.150 --> 12:47.150
再加一个内样式呢

12:47.150 --> 12:49.150
原来是为什么会有这样的一个想法

12:50.150 --> 12:52.150
为什么呢

12:52.150 --> 12:54.150
因为我要这里边的li

12:54.150 --> 12:56.150
有没有样式首先说

12:56.150 --> 12:58.150
肯定有样式对吧

12:58.150 --> 13:00.150
它得浮动吧首先它是不是得浮动

13:00.150 --> 13:02.150
class

13:02.150 --> 13:04.150
fl为什么这个li要浮动

13:04.150 --> 13:06.150
你看那里看吧

13:06.150 --> 13:09.460
这个是不是横向排列的

13:09.460 --> 13:11.460
每个li是不是横向排列的

13:11.460 --> 13:13.460
那得浮动吧

13:13.460 --> 13:15.460
是不是得浮动所以说它有个fl

13:15.460 --> 13:17.460
那它有没有别的样式呢

13:17.460 --> 13:19.460
比方说自己大小的样式啊

13:19.460 --> 13:21.460
高度的样式啊

13:21.460 --> 13:23.460
肯定有嘛对不对

13:23.460 --> 13:25.460
这个li肯定有这个样式

13:25.460 --> 13:29.460
那如果说你这里不去写个内样式的话

13:29.460 --> 13:31.460
你到时候怎么来选中这个li

13:31.460 --> 13:33.460
来设置这样式

13:33.460 --> 13:35.460
首先怎么来选中那里把这个问题解决一下

13:35.460 --> 13:37.460
我尽量讲慢一点啊

13:37.460 --> 13:39.460
看一下这个写的时候要去思考那些东西

13:39.460 --> 13:41.460
我怎么来选中

13:41.460 --> 13:43.460
你不能用这种方式在选中吧

13:43.460 --> 13:45.460
这就选中了所有浮动元素了对吧

13:45.460 --> 13:47.460
不合适啊你不能用这种方式

13:47.460 --> 13:49.460
这个要排除掉

13:49.460 --> 13:51.460
你也不能用这种方式吧

13:51.460 --> 13:53.460
那这样子就选中了页面上所有的li了

13:53.460 --> 13:55.460
所以也不合适

13:55.460 --> 13:57.460
因此呢最好就是我给它一个限定啊

13:57.460 --> 13:59.460
这一块是什么呢

13:59.460 --> 14:01.460
是一个不仅是一个浮动的

14:01.460 --> 14:03.460
它还是一个什么的

14:03.460 --> 14:05.460
它还是一个就是我们把它叫做

14:05.460 --> 14:07.460
呃

14:07.460 --> 14:09.460
menu吧

14:09.460 --> 14:11.460
menu list

14:11.460 --> 14:13.460
或者就叫做menu

14:13.460 --> 14:15.460
菜单它还是一个菜单

14:15.460 --> 14:17.460
那么我们到时候就可以怎么样呢

14:17.460 --> 14:19.460
就可以找到menu下边的所有li

14:19.460 --> 14:21.460
是不是就精确选中了

14:21.460 --> 14:23.460
就不会影响到范围泰国

14:23.460 --> 14:25.460
能理解吧

14:25.460 --> 14:27.460
就是说我这里要加一个内样式

14:27.460 --> 14:29.460
好了这里有细节的

14:29.460 --> 14:31.460
就开发一个企业级的项目

14:31.460 --> 14:33.460
我们也应该处于哪些细节

14:33.460 --> 14:35.460
这里我们刚才使用了一个menu

14:35.460 --> 14:37.460
这样子其实做好不好呢

14:37.460 --> 14:39.460
这个问题是解决了

14:39.460 --> 14:41.460
但是有没有可能将来我去

14:41.460 --> 14:43.460
因为页面上东西很多啊

14:43.460 --> 14:45.460
将来我在做其他区域的时候

14:45.460 --> 14:47.460
有没有可能导致这里重明啊

14:47.460 --> 14:49.460
就完全有可能比方说

14:49.460 --> 14:51.460
做这个区域的时候

14:51.460 --> 14:53.460
你到时候做这个区域的时候

14:53.460 --> 14:55.460
这个区域不也是个菜单吗

14:55.460 --> 14:57.460
那到时候遗忘了我也给它取名为menu

14:57.460 --> 14:59.460
那到时候就出问题了

14:59.460 --> 15:01.460
对不对

15:01.460 --> 15:03.460
所以说呢这一块我们应该怎么来写

15:03.460 --> 15:07.460
尽量的避免它重明

15:07.460 --> 15:09.460
有一个非常简单

15:09.460 --> 15:11.460
而且有效的方式

15:11.460 --> 15:13.460
就是你整个区域呢我不太容易重明

15:13.460 --> 15:15.460
你看整个区域就是叫做topline

15:15.460 --> 15:17.460
对吧其他的区域呢

15:17.460 --> 15:19.460
其实页面上大区域也没几个

15:19.460 --> 15:21.460
这个地方呢我们一般都是有印象的

15:21.460 --> 15:23.460
不太容易导致重明

15:23.460 --> 15:25.460
那么既然这个单词不太容易

15:25.460 --> 15:27.460
导致重明

15:27.460 --> 15:29.460
那么后边它的所有的内样式

15:29.460 --> 15:31.460
我都给它加上一个前綴

15:31.460 --> 15:33.460
topline就是大区域的内样式

15:33.460 --> 15:35.460
一个横纲

15:35.460 --> 15:37.460
所有的内样式比较menu的内样式

15:37.460 --> 15:39.460
我给它加上一个topline横纲

15:39.460 --> 15:41.460
当然我们会多写一些文字

15:41.460 --> 15:43.460
多写多敲了几个字母

15:43.460 --> 15:45.460
但是呢这样子做

15:45.460 --> 15:47.460
会消除很多的隐患

15:47.460 --> 15:49.460
就不会导致重明的问题

15:49.460 --> 15:51.460
就尽量解决了

15:51.460 --> 15:53.460
懂的意思吧

15:53.460 --> 15:55.460
那有些东西

15:55.460 --> 15:57.460
这些东西要不要也加上不需要

15:57.460 --> 15:59.460
因为这些是通用样式

15:59.460 --> 16:01.460
所有的区域都可以用的

16:01.460 --> 16:03.460
所有这些都不加了

16:03.460 --> 16:05.460
就这个区域特有的一些内样式呢

16:05.460 --> 16:07.460
我全部给它加上一个前綴

16:07.460 --> 16:09.460
就区域的名字一个横纲

16:09.460 --> 16:11.460
这是一种非常非常常见的一个做法

16:11.460 --> 16:13.460
你看一下这些网易

16:13.460 --> 16:15.460
这些网易

16:15.460 --> 16:21.140
我们把它放下来

16:21.140 --> 16:25.480
这样吧我这里把油烂琴拿到这

16:25.480 --> 16:27.480
好嘞

16:27.480 --> 16:29.480
你看一下啊这个区域里边

16:29.480 --> 16:31.480
我们找你看这些

16:31.480 --> 16:33.480
是不是都有

16:33.480 --> 16:35.480
这些前綴那么就是这么来的

16:35.480 --> 16:37.480
好吧这是这个地方

16:37.480 --> 16:39.480
这个小细节啊后边你们写熟练了过后了

16:39.480 --> 16:41.480
这个地方就

16:41.480 --> 16:43.480
不用原设是说了

16:43.480 --> 16:45.480
你们都知道该这样子去写了

16:45.480 --> 16:47.480
好那么这里呢接下来我们写啥呢

16:47.480 --> 16:49.480
你看哈我们左边有那个EL

16:49.480 --> 16:51.480
就这个区

16:51.480 --> 16:53.480
就这个区

16:53.480 --> 16:55.480
然后呢里边

16:55.480 --> 16:57.480
每一个li

16:57.480 --> 16:59.480
就是它里边的每一个li

16:59.480 --> 17:01.480
它是左浮动的对吧fl

17:01.480 --> 17:03.480
那有些人说啊拿元老师

17:03.480 --> 17:05.480
你这里左浮动了这里是不是

17:05.480 --> 17:07.480
要加上一个clearfx啊

17:07.480 --> 17:09.480
可以加可以不加为什么呢

17:09.480 --> 17:11.480
因为我们知道浮动员他本身也是浮动的

17:11.480 --> 17:13.480
浮动员说他本身会创建什么bfc

17:13.480 --> 17:15.480
对吧一创建bfc

17:15.480 --> 17:17.480
他就不会搞路摊它了

17:17.480 --> 17:19.480
你加上也没错啊你搞不清楚的话

17:19.480 --> 17:21.480
你就加上无所谓的

17:21.480 --> 17:23.480
好那么这里小密相承

17:23.480 --> 17:25.480
那接下来就接下来是不是体力活了

17:25.480 --> 17:27.480
对吧我们把整个结构

17:27.480 --> 17:29.480
划分清楚说清楚之后这样就体力活了

17:29.480 --> 17:31.480
小密相承然后来个什么by

17:31.480 --> 17:33.480
这个时候

17:33.480 --> 17:35.480
然后再把一个写

17:35.480 --> 17:37.480
然后这里的为了他在课堂上

17:37.480 --> 17:39.480
少写这些体力活

17:39.480 --> 17:41.480
所以说我在课间里边呢

17:41.480 --> 17:43.480
就把这个东西直接拿过来了

17:43.480 --> 17:45.480
复制粘贴了

17:45.480 --> 17:47.480
所以说我们在这里的

17:47.480 --> 17:49.480
粘贴过来

17:49.480 --> 17:51.480
是吧

17:51.480 --> 17:54.790
当然呢我来这里的需要

17:54.790 --> 17:56.790
给他写上一个fl

17:56.790 --> 17:58.790
左浮动的

17:58.790 --> 18:00.790
看下这边基本上就出现这个东西了

18:00.790 --> 18:02.790
慢慢再来

18:02.790 --> 18:04.790
好接下来的是右边

18:04.790 --> 18:06.790
右边是哪个区域呢是这个div

18:06.790 --> 18:08.790
一个div

18:08.790 --> 18:10.790
有一种人就想问哪原老师你这里

18:10.790 --> 18:11.790
为什么不用uio

18:11.790 --> 18:12.790
为什么不能用列表

18:12.790 --> 18:14.790
有没有从来有这样那个问题

18:14.790 --> 18:16.790
那其实呢

18:16.790 --> 18:18.790
你要强行用列表了其实也可以

18:18.790 --> 18:20.790
但是我据我的观察呢就很多时候

18:20.790 --> 18:22.790
元素啊这些央视啊

18:22.790 --> 18:24.790
全世界找不出两份一样的代码

18:24.790 --> 18:26.790
各有各种邪法

18:26.790 --> 18:28.790
但不同的邪法呢有一个难易度的问题

18:28.790 --> 18:30.790
然后这里为什么要用div呢

18:30.790 --> 18:32.790
如果说我用列表什么叫列表

18:32.790 --> 18:34.790
就是这些元他里边的这些元素啊

18:34.790 --> 18:36.790
他都是一个非常并列的关系

18:36.790 --> 18:38.790
多一个少一个或者是

18:38.790 --> 18:40.790
他们之间的关系都是一个并列的

18:40.790 --> 18:42.790
就叫有列表

18:42.790 --> 18:44.790
但是呢你看哈

18:44.790 --> 18:46.790
这个登录注册消息通知

18:46.790 --> 18:48.790
他和购物车是不是明显有一个不太一样

18:48.790 --> 18:50.790
明显一个不太一样

18:50.790 --> 18:52.790
登录注册都一样

18:52.790 --> 18:54.790
差不多就是文字不一样而已

18:54.790 --> 18:56.790
他购物车这一块明显不一样

18:56.790 --> 18:58.790
对不对所以说他

18:58.790 --> 19:00.790
就这一坨

19:00.790 --> 19:02.790
他的颜色哈

19:02.790 --> 19:04.790
就这一坨跟他不是一个并列关系

19:04.790 --> 19:06.790
所以说呢我用一个div

19:06.790 --> 19:08.790
div里边呢

19:08.790 --> 19:10.790
购物车我们这几个先不管

19:10.790 --> 19:12.790
他说我们要考虑到

19:12.790 --> 19:14.790
这一块可以是个列表

19:14.790 --> 19:16.790
但这一块呢就算了嘛

19:16.790 --> 19:18.790
对吧所以说我们用一个div

19:18.790 --> 19:20.790
来包一下说div里边

19:20.790 --> 19:22.790
包含两个区域一个是什么呢

19:22.790 --> 19:26.790
一个是登录注册消息通知

19:26.790 --> 19:28.790
然后呢另外一个呢是

19:28.790 --> 19:30.790
购物车

19:30.790 --> 19:32.790
购物车我们下几课再做

19:32.790 --> 19:34.790
下几课

19:34.790 --> 19:36.790
登录注册消息通知

19:36.790 --> 19:38.790
这一块应该是个列表

19:38.790 --> 19:40.790
那么这个列表呢

19:40.790 --> 19:42.790
你看一下他长的样子

19:42.790 --> 19:44.790
他长的样子

19:44.790 --> 19:46.790
就是单开这个列表

19:46.790 --> 19:48.790
不看他的位置

19:48.790 --> 19:50.790
长的样子是不是跟这个玩意

19:50.790 --> 19:52.790
有啥区别呢

19:52.790 --> 19:54.790
这个列表

19:54.790 --> 19:56.790
无非就是多一些嘛对吧

19:56.790 --> 19:58.790
这个少了一些对吧

19:58.790 --> 20:00.790
长的样子就是一模一样的

20:00.790 --> 20:02.790
所以说到时候呢我一做了一样事的时候

20:02.790 --> 20:04.790
我就两个去同事做了

20:04.790 --> 20:06.790
我干嘛一个去一个去做

20:06.790 --> 20:08.790
写一大堆重复带嘛

20:08.790 --> 20:10.790
因此呢其实就是这个UOL元素对吧

20:10.790 --> 20:12.790
UOL元素然后top live

20:12.790 --> 20:14.790
什么就写这个UOL元素

20:14.790 --> 20:16.790
后边写法一样

20:16.790 --> 20:18.790
然后一个一个什么

20:18.790 --> 20:20.790
LI

20:20.790 --> 20:22.790
那样是

20:22.790 --> 20:24.790
里边的LI也是左浮动的对吧

20:24.790 --> 20:26.790
也是左浮动的

20:26.790 --> 20:28.790
然后里边的一个A元素

20:28.790 --> 20:30.790
A元素里边的一个登录

20:30.790 --> 20:32.790
然后再来一个注册

20:32.790 --> 20:34.790
然后再来一个消息通知

20:34.790 --> 20:36.790
写是一样的

20:36.790 --> 20:38.790
然后这个UOL本身呢

20:38.790 --> 20:40.790
本身他也是一个左浮动

20:40.790 --> 20:42.790
为什么他是一个左浮动的

20:42.790 --> 20:46.170
那你看吧

20:46.170 --> 20:48.170
这个UOL

20:48.170 --> 20:50.170
那么他跟后边的购物车

20:50.170 --> 20:52.170
是不是水平排列的

20:52.170 --> 20:54.170
那这个玩意是不是应该左浮动

20:54.170 --> 20:56.170
那么这个是左浮动

20:56.170 --> 20:58.170
这边也是左浮动

20:58.170 --> 21:00.170
他本身也应该是左浮动的

21:00.170 --> 21:02.170
那他里边的每个LI

21:02.170 --> 21:04.170
他也应该是左浮动的

21:04.170 --> 21:06.170
因为他一面上是横向排列的

21:06.170 --> 21:08.170
好好去梳理一下啊

21:08.170 --> 21:10.170
我们现在还没有开始写样式

21:10.170 --> 21:12.170
先把ATM写够给他写好

21:12.170 --> 21:14.170
没问题吧我讲的字

21:14.170 --> 21:16.170
特别特别详细了

21:16.170 --> 21:18.170
那么这一块呢

21:18.170 --> 21:20.170
样式就是元素结构

21:20.170 --> 21:22.170
是不是就写出来了

21:22.170 --> 21:24.170
元素结构写出来了

21:24.170 --> 21:26.170
好那么接下来开始写样式了

21:26.170 --> 21:28.170
那第一个问题就是

21:28.170 --> 21:30.170
样式我写在哪的问题

21:30.170 --> 21:32.170
我写哪呢

21:32.170 --> 21:34.170
你肯定不能写在这里面

21:34.170 --> 21:36.170
这里面全是公共样式

21:36.170 --> 21:38.170
到处要通用的

21:38.170 --> 21:40.170
那写哪呢有两种做法

21:40.170 --> 21:42.170
第一种做法呢就是

21:42.170 --> 21:44.170
我再建一个index的CSS

21:44.170 --> 21:46.170
顶部导航还是将来的

21:46.170 --> 21:48.170
这些其他的区域

21:48.170 --> 21:50.170
全部都写到index的CSS里面

21:50.170 --> 21:52.170
这是一种做法

21:52.170 --> 21:54.170
那么这里面可以想象

21:54.170 --> 21:56.170
之后单码就会非常非常多

21:56.170 --> 21:58.170
那么这种做法呢

21:58.170 --> 22:00.170
不是很好

22:00.170 --> 22:02.170
最好是一个区域呢

22:02.170 --> 22:04.170
写一个CSS文件

22:04.170 --> 22:06.170
最好是这么做

22:06.170 --> 22:08.170
那就可能之前

22:08.170 --> 22:10.170
听过袁老师的知识

22:10.170 --> 22:12.170
袁老师之前好像说过

22:12.170 --> 22:14.170
这些区域图不就是为了减少文件数量吗

22:14.170 --> 22:16.170
那你把一个CSS文件搞了一大堆

22:16.170 --> 22:18.170
一个区域的CSS文件

22:18.170 --> 22:20.170
那文件数量不多了吗

22:20.170 --> 22:22.170
是不是会影响效率啊

22:22.170 --> 22:24.170
不用担心

22:24.170 --> 22:26.170
将来呢你们还会学习更多的知识

22:26.170 --> 22:28.170
后面会有一些工具

22:28.170 --> 22:30.170
把这些CSS合并成一个文件

22:30.170 --> 22:32.170
但现在我们不去考虑这个

22:32.170 --> 22:34.170
现在这个情况不用去担心

22:34.170 --> 22:36.170
因此呢我们在写的时候呢

22:36.170 --> 22:38.170
为每一个区域去新建一个CSS文件

22:38.170 --> 22:40.170
好我们在这里去新建一个

22:40.170 --> 22:42.170
叫topline

22:42.170 --> 22:44.170
那么这里的我们命名上

22:44.170 --> 22:46.170
文件的名字跟这个区域的名字

22:46.170 --> 22:48.170
是一样的

22:48.170 --> 22:50.170
这里是topline

22:50.170 --> 22:52.170
那么这个文件名字是topline

22:52.170 --> 22:54.170
好于是我们去引用它

22:54.170 --> 22:56.170
CSS topline

22:56.170 --> 22:58.170
因此我们写的CSS在哪里写

22:58.170 --> 23:00.170
就是在topline的写

23:00.170 --> 23:02.170
我这里可以把分个皮

23:02.170 --> 23:04.170
在下边分个皮

23:04.170 --> 23:06.170
好接下来开始来写

23:06.170 --> 23:08.170
开始来写的话那么这里边

23:08.170 --> 23:10.170
很多什么背景颜色啊

23:10.170 --> 23:12.170
文字颜色啊还有各种宽高啊

23:12.170 --> 23:14.170
等等等等有些信息

23:14.170 --> 23:16.170
那么这些信息呢都会在课件里面给你们提供

23:16.170 --> 23:18.170
我这里有个央视标注

23:18.170 --> 23:20.170
一些关键的信息

23:20.170 --> 23:22.170
一些不关键的那我就无所谓了

23:22.170 --> 23:24.170
关键的信息我就会给你标注出来

23:24.170 --> 23:26.170
那么同学们怎么来用这个信息呢

23:26.170 --> 23:28.170
你可以

23:28.170 --> 23:30.170
找到这个课件

23:30.170 --> 23:32.170
然后看着做就行了

23:32.170 --> 23:34.170
但是这样做呢效率不是很高

23:34.170 --> 23:36.170
袁老师喜欢怎么做呢

23:36.170 --> 23:38.170
用一个截图工具

23:38.170 --> 23:40.170
把它来个截图

23:40.170 --> 23:42.170
截图之后呢

23:42.170 --> 23:44.170
很多截图工具啊

23:44.170 --> 23:46.170
袁老师之前给大家推荐的这个截图工具啊

23:46.170 --> 23:48.170
大家推荐过没有

23:48.170 --> 23:50.170
麦克的话用那个安效

23:50.170 --> 23:52.170
Windows的话用那个snipers

23:54.170 --> 23:58.170
这些截图工具都有一个功能

23:58.170 --> 24:00.170
用法都差不多

24:00.170 --> 24:02.170
就是你把你截的图呢

24:02.170 --> 24:04.170
可以把它贴出来

24:04.170 --> 24:06.170
按住一个快捷键

24:06.170 --> 24:08.170
每个你去看一下

24:08.170 --> 24:10.170
按住一个快捷键就可以把图贴出来

24:10.170 --> 24:12.170
于是呢我们找到这个浏览器

24:12.170 --> 24:14.170
打开我们的vscode

24:14.170 --> 24:16.170
然后把这个图呢

24:16.170 --> 24:18.170
稍微说小一点啊

24:18.170 --> 24:20.170
贴到某一个位置

24:20.170 --> 24:22.170
贴到某一个位置

24:22.170 --> 24:24.170
这样子做是不是我们的

24:24.170 --> 24:26.170
我们的屏幕上信息就特别全了

24:26.170 --> 24:28.170
我要什么信息都可以在同一个屏幕拿到

24:28.170 --> 24:30.170
就不用切来切去了

24:30.170 --> 24:32.170
这是提高开发效率的一种方式

24:32.170 --> 24:34.170
再来吧

24:34.170 --> 24:36.170
那么首先整个的topline

24:36.170 --> 24:38.170
topline

24:38.170 --> 24:40.170
顶部这个区域呢

24:40.170 --> 24:42.170
它是有一个背景颜色的

24:42.170 --> 24:44.170
那么从这个图里边我们可以标注

24:44.170 --> 24:46.170
这个背景颜色是333

24:46.170 --> 24:48.170
BG背景颜色333

24:50.170 --> 24:52.170
好那么整个这个区域呢

24:52.170 --> 24:54.170
是有一个高度的

24:54.170 --> 24:56.170
高度为40

24:58.170 --> 25:00.170
好接下来

25:00.170 --> 25:02.170
这个区域的文字呢

25:02.170 --> 25:04.170
是有一个统一的大小的

25:04.170 --> 25:06.170
你看全是体内活嘛

25:06.170 --> 25:08.170
这个有什么技术含量

25:08.170 --> 25:10.170
它里边的一个

25:10.170 --> 25:12.170
统一的文字颜色

25:12.170 --> 25:14.170
B0B0B0

25:16.170 --> 25:18.170
它有一个统一的文字颜色

25:18.170 --> 25:20.170
然后呢有个统一的字体大小

25:20.170 --> 25:22.170
是12个相处

25:22.170 --> 25:24.170
像这些文字的东西

25:24.170 --> 25:26.170
它都可以继承的

25:26.170 --> 25:28.170
所以说后边都可以继承过来

25:28.170 --> 25:30.170
就先把这个统一的设置一下

25:30.170 --> 25:32.170
好然后呢我们再来去

25:32.170 --> 25:34.170
设置它里边的东西

25:34.170 --> 25:36.170
首先这个container它里边的元素

25:36.170 --> 25:38.170
它居中那这个玩意儿已经没有什么好说的了

25:38.170 --> 25:40.170
你看

25:40.170 --> 25:42.170
这里边有个container

25:42.170 --> 25:44.170
它是不是居中了现在你看蓝色的区域

25:44.170 --> 25:46.170
一面上是不是居中了为什么居中了

25:46.170 --> 25:48.170
因为container是不是之前做过的

25:48.170 --> 25:50.170
宽度固定然后左右

25:50.170 --> 25:52.170
marginway out to已经搞定了

25:52.170 --> 25:54.170
这个事情就不用我们再重新做了

25:54.170 --> 25:56.170
好那么我们现在还要

25:56.170 --> 25:58.170
做什么呢

25:58.170 --> 26:00.170
你看它里边的文字

26:00.170 --> 26:02.170
到这里边来吧

26:02.170 --> 26:04.170
到topline

26:04.170 --> 26:07.930
就是我们设置的

26:07.930 --> 26:09.930
现在我们选动的是什么

26:09.930 --> 26:11.930
选动是这个UAL和这个UAL

26:11.930 --> 26:13.930
选动了这两个

26:13.930 --> 26:15.930
选动的是这两个

26:15.930 --> 26:17.930
那么这两个里边有些样式

26:17.930 --> 26:19.930
我们首先给它一个背景颜色吧

26:19.930 --> 26:21.930
看得清楚一点

26:21.930 --> 26:23.930
目前是这样子的

26:23.930 --> 26:25.930
那么我们首先要做的事情

26:25.930 --> 26:27.930
就是让它那个文字

26:27.930 --> 26:29.930
在整个高度

26:29.930 --> 26:31.930
现在整个高度是40个相处

26:31.930 --> 26:33.930
文字在40个相处里边

26:33.930 --> 26:35.930
居中重相居中

26:35.930 --> 26:37.930
怎么办

26:37.930 --> 26:39.930
说给它设置一个航高就完事了

26:39.930 --> 26:41.930
男孩子40个相处

26:41.930 --> 26:43.930
那文字不就是

26:43.930 --> 26:45.930
一航文字就占40个相处的高度了

26:45.930 --> 26:47.930
不就完了吗

26:47.930 --> 26:49.930
这个很简单吧

26:49.930 --> 26:51.930
没啥问题吧

26:51.930 --> 26:53.930
一个文字航高40

26:53.930 --> 26:55.930
就是不是就做出来了

26:55.930 --> 26:57.930
好那么接下来

26:57.930 --> 26:59.930
看它里边

26:59.930 --> 27:01.930
里边的每一个A元数

27:01.930 --> 27:03.930
这里是有A元数

27:03.930 --> 27:05.930
对吧

27:05.930 --> 27:07.930
每一个A元数

27:07.930 --> 27:09.930
它左右两边是不是空的一些

27:09.930 --> 27:11.930
位置啊你看

27:11.930 --> 27:13.930
我给它画一下

27:13.930 --> 27:15.930
从这个A元数

27:15.930 --> 27:17.930
到这儿

27:17.930 --> 27:19.930
左右是不是空的一点距离

27:19.930 --> 27:21.930
这个距离我都给你亮出来了是7个相处

27:21.930 --> 27:23.930
所以说这里边我要做什么呢

27:23.930 --> 27:25.930
我要去设置它每一个A元数

27:25.930 --> 27:27.930
我们先把这个A元数找出来

27:27.930 --> 27:29.930
它下面的A元数

27:29.930 --> 27:31.930
然后呢我再去

27:31.930 --> 27:33.930
设置一个

27:33.930 --> 27:35.930
背景吧

27:35.930 --> 27:37.930
目前的A元数是这样子

27:37.930 --> 27:39.930
然后我现在要做的事情呢

27:39.930 --> 27:41.930
是让A元数左右两边

27:41.930 --> 27:43.930
空一点距离

27:43.930 --> 27:45.930
是不是判底

27:45.930 --> 27:47.930
上下的空的距离为0

27:47.930 --> 27:49.930
左右的空的距离是7个相处

27:50.930 --> 27:51.930
你看

27:51.930 --> 27:53.930
每个A元数是不是隔开了一些了

27:53.930 --> 27:59.100
我们把背景去掉

27:59.100 --> 28:01.100
现在我们找了每个A元数

28:01.100 --> 28:03.100
你做一点就可以看一下效果

28:03.100 --> 28:05.100
每个A元数你看

28:05.100 --> 28:07.100
左右两边是不是有点空隙了

28:07.100 --> 28:09.100
你看这个合模型这里

28:09.100 --> 28:11.100
判定左右两边一个空隙了

28:11.100 --> 28:13.100
通过这种方式

28:13.100 --> 28:15.100
其实这里的A元数呢还是一个挨一个的

28:15.100 --> 28:17.100
一个接一个的

28:17.100 --> 28:19.100
只是它左右两边有一点内边距离

28:19.100 --> 28:21.100
就做的这么一个小事

28:21.100 --> 28:23.100
那么我们还可以观察到

28:23.100 --> 28:25.100
这里有一个

28:25.100 --> 28:27.100
边框

28:27.100 --> 28:29.100
我们是不是可以设置A元数的右边框

28:29.100 --> 28:30.100
对不对

28:30.100 --> 28:31.100
我们把上面的背景

28:31.100 --> 28:33.100
颜色红色去掉

28:33.100 --> 28:35.100
那么这里我们是不是可以设置

28:35.100 --> 28:37.100
A元数的右边框

28:37.100 --> 28:39.100
我们设置BorderRide

28:39.100 --> 28:41.100
右边框一个相处

28:41.100 --> 28:43.100
solid 背边框颜色

28:43.100 --> 28:45.100
我在这里告诉你

28:45.100 --> 28:47.100
42

28:47.100 --> 28:49.100
42

28:49.100 --> 28:51.100
出来了

28:51.100 --> 28:53.100
如果看不清楚的话

28:53.100 --> 28:55.100
我们这里再把它换一个颜色

28:55.100 --> 28:57.100
换成红色

28:57.100 --> 28:59.100
右边框是不是出来了

28:59.100 --> 29:01.100
那么这里边还有一个小的细节

29:01.100 --> 29:03.100
就是最后一个

29:03.100 --> 29:05.100
最后一个是不是没有右边框

29:05.100 --> 29:07.100
这个事情怎么做

29:07.100 --> 29:09.100
这个事情之前我咱们是学过的

29:09.100 --> 29:11.100
还专门做了各种练习的

29:11.100 --> 29:13.100
效果呢不是这个效果

29:13.100 --> 29:15.100
反正差不多

29:15.100 --> 29:17.100
能不能回忆起来

29:17.100 --> 29:19.100
那是

29:19.100 --> 29:21.100
last child

29:21.100 --> 29:23.100
对吧是不是最后一个

29:23.100 --> 29:25.100
指源数单独的去设置一下

29:25.100 --> 29:27.100
BorderRide为那

29:27.100 --> 29:29.100
右边框为那

29:29.100 --> 29:31.100
发现全都没了

29:31.100 --> 29:33.100
这也是为什么呢

29:33.100 --> 29:35.100
好这个是我们叫看元数结构了

29:35.100 --> 29:37.100
我们选中的

29:37.100 --> 29:39.100
现在我们这个代码选中的是什么

29:39.100 --> 29:41.100
选中的是最后一个A元数

29:41.100 --> 29:43.100
A元数是最后一个指源数

29:43.100 --> 29:45.100
你看哪一个A元数

29:45.100 --> 29:47.100
是放到LOI里面的对吧

29:47.100 --> 29:49.100
是不是LOI的最后一个指源数都是

29:49.100 --> 29:51.100
所以我们这里要找的是什么呢

29:51.100 --> 29:53.100
我们再明确一下要找的是最后一个

29:53.100 --> 29:55.100
LOI的

29:55.100 --> 29:57.100
里面的A元数

29:57.100 --> 29:59.100
这个last child还不能放到A里面

29:59.100 --> 30:01.100
应该放到什么了

30:01.100 --> 30:03.100
放到LOI里面对吧

30:03.100 --> 30:05.100
要放到最后一个LOI的

30:05.100 --> 30:07.100
后边的A元数

30:07.100 --> 30:09.100
它是没有右边框的

30:09.100 --> 30:11.100
这个能力界吧

30:11.100 --> 30:13.100
还是比较简单的对吧

30:13.100 --> 30:15.100
就没啥了

30:15.100 --> 30:17.100
真就没啥了

30:17.100 --> 30:19.100
所以说这里我就把这个改成什么

30:19.100 --> 30:21.100
42

30:21.100 --> 30:23.100
输出复复A这个区域呢

30:23.100 --> 30:25.100
就差不多了

30:25.100 --> 30:27.100
还有一个小的地方

30:27.100 --> 30:29.100
就是当我们鼠标移上去的时候

30:29.100 --> 30:31.100
你看我们之前设置的统一的A元数

30:31.100 --> 30:33.100
它有一个颜色

30:33.100 --> 30:35.100
但是实际上这个区域

30:35.100 --> 30:37.100
鼠标移上去是变成白色的

30:37.100 --> 30:39.100
不是变成这个颜色的

30:39.100 --> 30:41.100
所以说这一块比较特殊

30:41.100 --> 30:43.100
或者你要再精确选中一点呢

30:43.100 --> 30:45.100
也可以最好

30:45.100 --> 30:47.100
就差不多了

30:47.100 --> 30:49.100
因为这个TopLine

30:49.100 --> 30:51.100
A元数也只能是它了

30:51.100 --> 30:53.100
那么找到这一块A元数

30:53.100 --> 30:55.100
给它设置一个Hopper

30:55.100 --> 30:58.660
鼠标移上去颜色变白色

30:58.660 --> 31:00.660
你看

31:00.660 --> 31:02.660
就舒服了

31:02.660 --> 31:04.660
那么这个区域就做完了

31:04.660 --> 31:06.660
就做完了

31:06.660 --> 31:08.660
其实这里边还有一个

31:08.660 --> 31:10.660
非常非常非常非常小的细节

31:10.660 --> 31:12.660
不太容易发现

31:12.660 --> 31:14.660
就是其实

31:14.660 --> 31:16.660
第一个A元数

31:16.660 --> 31:18.660
它没有左边的内边距

31:18.660 --> 31:20.660
它没有

31:20.660 --> 31:22.660
啥意思啊

31:22.660 --> 31:24.660
就是第一个A元数

31:24.660 --> 31:26.660
我不是说了左右的内边距吗

31:26.660 --> 31:28.660
那么第一个A元数

31:28.660 --> 31:30.660
左边有个内边距

31:30.660 --> 31:32.660
右边有个内边距

31:32.660 --> 31:34.660
那么第一个A元数

31:34.660 --> 31:36.660
实际上它是没有左边的内边距的

31:36.660 --> 31:38.660
第一个A元数它实际上是这样子的

31:38.660 --> 31:40.660
它没有左边的内边距

31:40.660 --> 31:42.660
它实际上是这样子的

31:42.660 --> 31:44.660
这样子的文字才能

31:44.660 --> 31:46.660
刚好跟容器左边靠齐

31:46.660 --> 31:48.660
有一个对齐的效果

31:48.660 --> 31:50.660
非常非常小的细节

31:50.660 --> 31:52.660
用户都不容易发现

31:52.660 --> 31:54.660
确实用户是不太容易发现

31:54.660 --> 31:56.660
但是设计师

31:56.660 --> 31:58.660
你把网页做完了过后

31:58.660 --> 32:00.660
设计师是能容易发现的

32:00.660 --> 32:02.660
在设计师的眼睛里边

32:02.660 --> 32:04.660
一个相处的差别他都容易发现

32:04.660 --> 32:06.660
所以说这一块

32:06.660 --> 32:08.660
第一个A元数

32:08.660 --> 32:10.660
第一个A元数

32:10.660 --> 32:12.660
它左边的内边距

32:12.660 --> 32:14.660
把设为0

32:14.660 --> 32:16.660
就是往左边跑了7个相处

32:16.660 --> 32:18.660
那么跟后边就刚好对齐了

32:18.660 --> 32:20.660
比方说我们在后边

32:20.660 --> 32:22.660
来测试一下

32:22.660 --> 32:24.660
淘宝大夫下边

32:24.660 --> 32:26.660
我们再写个DIV Container

32:26.660 --> 32:28.660
然后给他写一个

32:28.660 --> 32:30.660
背景颜色

32:30.660 --> 32:32.660
背景颜色

32:32.660 --> 32:34.660
为红色

32:34.660 --> 32:36.660
四百个相处

32:36.660 --> 32:38.660
那看

32:38.660 --> 32:40.660
这个小臂商城这几个字

32:40.660 --> 32:42.660
是不是刚好跟下面那个

32:42.660 --> 32:44.660
对齐的

32:44.660 --> 32:46.660
如果说你没有这句话的话

32:46.660 --> 32:48.660
有点没对齐

32:48.660 --> 32:50.660
非常非常小的细节

32:50.660 --> 32:52.660
能看清楚吗

32:52.660 --> 32:54.660
有点没对齐

32:54.660 --> 32:56.660
就这么个意思

32:56.660 --> 32:58.660
见就对齐了

32:58.660 --> 33:00.660
OK

33:00.660 --> 33:02.660
咱们这些课的内容就做到这

33:02.660 --> 33:04.660
那同学们把这些课的内容

33:04.660 --> 33:06.660
下来去做一下

