WEBVTT

00:00.500 --> 00:05.140
这节课的话 我们来进行这个错误处理内的这个编写

00:05.540 --> 00:09.300
为什么要先写这个呢 因为我们后面在写代码的时候会用到

00:10.020 --> 00:15.700
会用到 就有些时候我们会需要抛出一个错误 那这里的话我们要抛出的是自定义的错误

00:16.340 --> 00:20.660
就我们自己定义的错误 所以我们提前这节课的话先花点时间把这个错误

00:21.380 --> 00:23.620
这个错误这个内先把它写好

00:24.260 --> 00:27.220
ok 好 那接下来这边来到我们的这个代码里面

00:27.700 --> 00:32.180
那首先的话我在这下面新建一个文件家 这个的话叫做utus

00:33.620 --> 00:36.020
啊 这个的话是什么呢 这个是我们的工具文件家

00:36.740 --> 00:41.940
就我们回头的话就是我们各种各样的这些工具的函数 我们就放在这个文件家里面

00:42.340 --> 00:45.540
那我们这边让我们创建一个什么呢 创建一个叫做airos

00:47.060 --> 00:48.500
airos.js

00:49.300 --> 00:53.300
好 这个airos.js这个是什么呢 这个就是自定义错误

00:55.710 --> 00:58.190
自定义错误 什么意思 好给大家举个例子

00:58.670 --> 01:04.350
就是我们这边的话 app.js 他这边的话是不是会有一个这个错误处理

01:05.630 --> 01:10.030
对不对 他这里有个错误处理 他这个错误处理的话 然后一旦你的这个服务器端

01:10.350 --> 01:15.710
发生了这个错误 那个错误的话就会到达这个位置 这个位置的话针对这个错误

01:15.950 --> 01:18.830
进行一个处理 这个的话是我们一开始

01:19.310 --> 01:21.630
搭建这个项目的时候就给大家说了的

01:22.190 --> 01:27.790
但是我们往往的话 我们想干嘛呢 我们想要这个自定义 我们的这个错误

01:29.820 --> 01:35.340
也就是说 当那个错误发生的时候 不是说错误一发生 就直接就跑到这里来

01:35.820 --> 01:41.420
这个的话我觉得不太方便 那我怎么办呢 当错误发生的时候 我们捕获到

01:41.980 --> 01:47.260
发生了错误 然后干嘛呢 然后抛出我们自己所写的这个错误

01:47.980 --> 01:56.540
没有没有 好吧 这句话写一下 当错误发生的时候 我们捕获到

01:57.900 --> 02:07.020
捕获到发生的错误 然后干嘛呢 然后抛出我们自定义的错误

02:08.060 --> 02:13.420
没有吧 那这里的话 我就可以针对这个错误 我是不可以进行一些自己的这个定义

02:13.900 --> 02:19.340
对不对 各种各样的错误类型啊 错误消息啊 我就统一在这个位置进行定义

02:19.740 --> 02:25.100
那回头的话 你那边发生错误 我先把你捕获到 捕获到之后再将我这边抛出我自定义的这个错误

02:25.580 --> 02:30.860
是也方便这个管理 对不对 OK 所以我们这边的话 我们来书写这个

02:31.820 --> 02:36.620
错误处理类 好那首先呢 这个错误处理类 这里的话它有一个这个机类

02:37.100 --> 02:40.540
好 那我们这边来讲说这边 class 然后 service

02:42.820 --> 02:49.780
service error 啊 这是我们的这个错误机类 它首先的话需要干嘛呢 它需要去继承这个

02:50.180 --> 02:53.380
error 从本身结实里面是不是有个这个 error 这个类

02:54.100 --> 02:58.660
对不对 去继承 好这个是什么呢 这个就是我们的业务处理错误机类

03:01.300 --> 03:05.060
业务处理错误机类

03:06.020 --> 03:07.060
基本的进

03:09.150 --> 03:13.390
ok 好在这个机类里面的话 然后既然他首先他有一个这个constructor

03:15.390 --> 03:16.350
他有个构造函数

03:17.070 --> 03:21.310
好 这个构造函数里面就接受什么呢 接受两个东西 一个是message

03:21.870 --> 03:26.030
一个是code 啊 这两个的话分别是什么呢 我这边写一下

03:27.150 --> 03:30.430
这里message message 的话就是你错误的消息

03:31.150 --> 03:39.150
因为你错误的话 你肯定会有一个这个提示的消息吗 对不对 最近哪里爆错了 好 第二个 第二个的话就是错误的消息

03:40.190 --> 03:46.190
错误的消息吗 我们一般爆错的话 我们会有一个对应的这个消息吗 啊 方便这个查找

03:46.590 --> 03:50.190
有一般固定的 比如说没找到资源 那就是404

03:50.910 --> 03:58.110
对不对啊 那比如说啊 还有什么呢 比如禁止访问 那就是401啊 那比如说验证错误 就是406

03:58.590 --> 04:02.270
会有各种各样的这个消息吗 这边是消息吗

04:04.110 --> 04:10.510
消息吗 ok 好 那接下来这里 这里针对于这个message的话 让我这边直接调super

04:11.550 --> 04:15.950
然后这边message 也就是把这个message传给谁 是传给这个error

04:16.750 --> 04:20.270
对不对啊 因为它是这个 我们这个类似继承了这个error的啊

04:20.670 --> 04:24.670
好 然后针对这个code code的话 我这边就新增加一个属性

04:25.230 --> 04:28.670
叫做code 等于你传进来的code

04:30.030 --> 04:34.910
可不可以啊 这是这个constructor 好 然后接下来的话 还有一个什么呢 还有一个方法

04:37.660 --> 04:43.420
方法啊 这个方法是什么呢 这个方法的话 回头你调用这个方法 它就会生成

04:44.300 --> 04:48.700
返回给这个客户端 它的一个这个格式

04:50.220 --> 04:56.060
什么意思 就是我们这边的话 它是一个错误 对不对 错误的话 这个是一个制定错误 那制定错误的话

04:56.140 --> 04:58.620
我们回头的话 我们就可以 啊 抛出我们

04:59.020 --> 05:04.140
就是自己定义错误 那我们这边呢 就是snow这个new啊 比如这边service error

05:05.820 --> 05:11.980
service error 啊 这边呢 你需要传两个参数 对吧 一个是信息啊 这边就不行了 还有一个这个状态吧

05:12.300 --> 05:18.060
123假设啊 假设 好 那接下来的话 回头的话 这个呢 实际上它会干嘛呢 你这边是不是在new

05:18.700 --> 05:20.300
new的话 那是不是会生成一个对象

05:21.420 --> 05:25.980
对不对 它会生成一个对象啊 假设这个对象在ar里面 好 那接下来的话 我们这边呢

05:25.980 --> 05:29.900
那就是 我们一会会写一个方法 假设这边有一个这个a方法

05:31.340 --> 05:41.460
那我们这边呢 就调用这个arrow的这个a方法 那这个a方法的话 它回头就会给我们生成什么呢 生成一个就是很格式化的啊 比如说错误的名称

05:42.540 --> 05:46.460
啊 巴拉巴拉 然后接下来的话 这个错误 它的这个code

05:47.100 --> 05:52.700
啊 然后接下来 巴拉巴拉 啊 生成这么一个这个对象 我们就把这个对象返回给客户端

05:53.500 --> 06:01.660
ok啊 那我们这边这个方法啊 这个方法呢 我们先放一放 ok 我先把名字写在这吧 这个方法的话是to raise bounce

06:03.260 --> 06:04.540
to raise bounce

06:05.420 --> 06:05.820
json

06:07.020 --> 06:13.580
啊 以json的格式 你看这边raze bounce 这边少个 s 这边raze bounce 是不是响应的意思啊

06:14.220 --> 06:17.740
对不对 到时候我们要响应给客户端的 好 大家这边那json

06:18.220 --> 06:21.900
啊 我们是以json的格式啊 那这个的话 我们先把它控在这里

06:22.620 --> 06:29.820
ok 先控在这里啊 这里先不管它 好 这个是我们的这个机类 机类写完了之后 然后接下来的话 我们就来

06:30.300 --> 06:33.420
写一下啊 究竟的话 我们要自定义哪些错误

06:34.060 --> 06:42.590
好 让我这边总结了下 大致的话有这么一些 首先的话 文件上传错误 文件

06:43.870 --> 06:46.510
上传啊 因为我们这边呢 是不是会涉及到文件上传

06:47.230 --> 06:48.350
对不对 比如说你看这边

06:49.310 --> 06:51.870
啊 这里啊 比如说我这边首页标语

06:52.670 --> 07:01.070
然后叫这边编辑 这里是会涉及到文件上传 对不对 那你这边的文件肯定会传给服务企团 那服务企团是不肯定要进行一个处理

07:02.270 --> 07:07.550
对不对啊 说说我们这边的首先有一个文件上传 好 然后还有就什么呢 还有就是禁止访问

07:08.990 --> 07:13.630
禁止访问错误 这个是什么呢 就是我们这边访问的话 你看一下

07:14.670 --> 07:17.790
就是这里啊 我们这边比如说修改分类

07:18.910 --> 07:21.950
这个呢 他是需要什么呢 是不是需要你带talking过去了

07:22.670 --> 07:28.990
对不对 那比如说你这talking有误 或者talking过期了 那这个时候他是不是就是会有个错误

07:29.710 --> 07:33.870
对不对 就是登录过期啊之类的啊 所以我们这边会有个禁止访问错误

07:35.070 --> 07:37.150
然后还有什么呢 还有就是验证错误

07:39.230 --> 07:42.430
验证错误是什么呢 就是我们后端的话 我们的数据

07:42.990 --> 07:47.470
啊 我们和数据过进行打交道的时候 我们的数据是要验证的

07:48.190 --> 07:54.110
这个的话袁老师是不是也是讲过的 对不对 他还讲了一个那个vili.js那个验证库

07:54.670 --> 07:57.630
啊 我们到时候的话就用这个库啊 vili.js

07:58.190 --> 08:00.990
他是需要验证的 那验证的话有可能是会出错

08:01.710 --> 08:06.990
对不对 说这边会有验证错误 好 然后接下来还有什么呢 还有这个无资源错误

08:08.350 --> 08:12.190
无资源错误 那这个就是什么呢 就是404

08:12.750 --> 08:15.870
啊 人家要找这个资源 但是我服务期不存在这个资源

08:16.510 --> 08:21.390
啊 那就是404错误 好 最后一个 最后一个就是未知错误 就是其他

08:22.190 --> 08:26.190
就其他错误种类啊 其他的话 我不管你包什么错啊 我统一的话归

08:26.670 --> 08:29.630
就是把它归为什么呢 归为这个未知错误

08:30.190 --> 08:36.830
ok 好 那我们这边呢 就把这几个 我们来把它写一些啊 首先的话这边文件上这个上传错误

08:37.230 --> 08:38.270
啊 那我这边呢 就是

08:39.790 --> 08:40.590
我会把这个

08:41.310 --> 08:45.150
这个错误内啊 我会把它导出 所以我这边呢 就是exports

08:46.750 --> 08:53.390
exports.upload.uploadError

08:54.670 --> 09:00.190
啊 它就等于什么呢 它就等于一个这个类 去继承什么呢 继承我们的这个积类

09:01.630 --> 09:04.590
那个积类 是不是就是我们的这个ServiceError

09:05.630 --> 09:09.630
对不对 好 那这里的话它就一个啊 就一个constructor

09:11.150 --> 09:16.590
好 这边呢 就是到时候你在new这个uploadError的时候 你只需要传一个这个message给我

09:17.790 --> 09:20.190
对不对 好 那接下来我这边要调这个super

09:21.070 --> 09:25.630
super 那把什么呢 把这个message是不是又传给这个Error这个类

09:26.430 --> 09:33.070
啊 不不 把这个message又传给了它的flex.service 这边的话拿到是不是又super 传给这个Error

09:33.630 --> 09:38.670
对不对 所以这边呢 把这个message传过去 啊 状态码 状态码的话 我这边呢 就是定义

09:39.070 --> 09:41.550
我们的文件上传啊 这边413

09:43.150 --> 09:45.070
看一秒 啊 整个这个看懂没有

09:45.710 --> 09:50.270
你看一下 整个这个看懂没有 我这边的话有一个uploadError这个

09:50.910 --> 09:54.830
错误类 这个错误类是去继承这个serviceError这个类的

09:55.550 --> 09:57.870
啊 那你这边的话 你回头在new的时候

09:59.470 --> 10:01.150
你这边回头的话 你要抛出

10:01.790 --> 10:06.910
抛出这个文件上传的错误 那你这边是不是就直接new一个uploadError

10:08.190 --> 10:14.110
对不对new一个uploadError 好 这边你传一个这个消息就可以了 比如说文件尺寸

10:15.230 --> 10:16.110
尺寸

10:16.350 --> 10:16.850
过大

10:17.630 --> 10:19.550
那这个message是不是这边接受到

10:20.190 --> 10:22.510
对不对 然后再调super 然后再传过来

10:22.990 --> 10:25.310
传过来 然后再加这边super 传给这个Error

10:25.550 --> 10:27.870
对不对 最终生成这个错误的信息

10:28.110 --> 10:31.950
还有这个code413 是不是就是传给这个 我们的这个service积累了

10:32.750 --> 10:34.030
对不对 他就有这个code

10:34.510 --> 10:36.590
就有这个code这个属性

10:37.070 --> 10:37.470
OK

10:37.870 --> 10:42.590
然后这个touristbunz接成 这个的话是所有你继承的的籽类是不是都有这个方法

10:43.230 --> 10:44.750
这个方法现在还没写

10:45.790 --> 10:46.190
对不对

10:47.470 --> 10:49.630
好 这就是关于这个文件上传

10:50.110 --> 10:52.830
那你一个写出来之后 那后面的话就都简单了

10:53.470 --> 10:54.750
后面的话你就直接复制一下

10:56.030 --> 10:59.390
好 静止访问 静止访问的话 我们这边就是forbidden

11:02.000 --> 11:03.040
forbidden

11:05.040 --> 11:08.320
forbiddenError 静止访问的话一般就是状态码他就是

11:09.120 --> 11:09.680
101

11:10.320 --> 11:12.880
然后还有什么呢 还有这个验证错误

11:15.170 --> 11:16.130
验证错误

11:16.850 --> 11:19.250
验证错误的话 这边呢就是validationError

11:21.710 --> 11:22.830
validation

11:24.860 --> 11:25.580
da

11:26.380 --> 11:26.860
ti

11:27.740 --> 11:28.540
validationError

11:29.100 --> 11:31.100
验证错误的话一般是406

11:32.140 --> 11:34.220
这边的话也是你要给我传一个消息过来

11:35.260 --> 11:37.420
好 然后接下来这个无资源错误

11:38.940 --> 11:41.740
无资源错误的话 这边的话就是一个not found

11:44.800 --> 11:46.240
not found

11:47.120 --> 11:48.240
not found error

11:48.240 --> 11:51.200
not found的话 我这边就不许你跟我传消息了

11:51.440 --> 11:53.600
对吧 你这边传 你比如说你这边在new的时候

11:54.000 --> 11:54.480
你这里

11:55.040 --> 11:56.240
new一个这个

11:56.880 --> 11:57.680
not found

11:58.560 --> 11:59.200
error

11:59.200 --> 12:00.880
那你这个的话没有找到

12:00.880 --> 12:01.600
这边的话

12:01.600 --> 12:04.320
没有找到 是不是这个信息就固定了 是不是没有找到

12:04.960 --> 12:06.080
对 没有找到

12:07.360 --> 12:08.640
没有找到

12:08.640 --> 12:10.240
一般就不存在什么

12:10.240 --> 12:11.520
这边还有其他的信息了

12:12.320 --> 12:12.720
对不对

12:12.720 --> 12:16.160
那我这边验证 验证的话会分为好几种情况

12:16.160 --> 12:17.440
比如我是服务器端的

12:17.440 --> 12:18.560
数据验证

12:18.560 --> 12:20.320
我有可能是什么呢 有可能是那个

12:21.680 --> 12:23.200
比如说那个验证码

12:23.760 --> 12:26.800
我们那个在登录的时候 后台登录的时候是不是有验证码

12:27.360 --> 12:29.680
对不对 有各种各样的情况

12:29.680 --> 12:31.360
说我希望你要传

12:31.360 --> 12:32.800
像这个的话就没有必要传了

12:32.800 --> 12:35.280
所以我们这边就不需要他传这个message

12:35.280 --> 12:36.640
我们就直接在这干嘛呢

12:36.640 --> 12:38.080
我们就直接写死

12:39.440 --> 12:40.240
直接写死

12:40.240 --> 12:42.160
这边就直接not found

12:45.540 --> 12:46.500
这是无资源

12:46.980 --> 12:49.380
好 大家最后一个 最后一个的话是这个位置错误

12:50.340 --> 12:51.380
那这边复制一份

12:52.980 --> 12:53.860
位置错误

12:53.860 --> 12:55.140
那这个的话就是

12:56.420 --> 12:57.060
unknown

12:58.740 --> 12:59.700
unknown

13:01.810 --> 13:02.930
unknown error

13:03.410 --> 13:04.210
那这边

13:04.850 --> 13:06.050
这边就是一个500

13:07.650 --> 13:10.690
这边我们就给他返回一个server

13:13.060 --> 13:14.500
server internal error

13:16.740 --> 13:18.260
interal error

13:19.300 --> 13:20.660
复制一段这个错误

13:20.660 --> 13:21.300
OK

13:21.300 --> 13:23.700
那我们整个这个错误内

13:23.700 --> 13:25.300
你看这边就写好了

13:25.300 --> 13:26.420
一个这个G内

13:26.500 --> 13:28.420
下面的话好几个什么的

13:28.420 --> 13:29.940
好几个指类

13:29.940 --> 13:32.580
最后的话把这个服务内容把他导出出去

13:33.060 --> 13:33.940
好 这边model

13:34.660 --> 13:36.660
model.export

13:37.140 --> 13:38.900
点这个server error

13:39.460 --> 13:41.620
等于一个server error

13:43.060 --> 13:43.780
看不看

13:43.780 --> 13:46.340
这就是我们的这个错误处理内

13:46.340 --> 13:48.020
我们回头的话就抛出什么呢

13:48.020 --> 13:50.340
抛出我们这边自定义的错误

13:50.340 --> 13:51.140
然后再说一遍

13:51.140 --> 13:53.060
我们为什么要提前先写这个

13:53.940 --> 13:54.740
因为我们回头的话

13:54.740 --> 13:56.340
我们不想说他那边

13:57.380 --> 13:58.340
就是有错误

13:58.340 --> 13:58.900
有了之后

13:58.900 --> 14:00.500
然后接下来直接就到这里

14:00.500 --> 14:01.140
不

14:01.140 --> 14:02.180
我们那边的话

14:02.180 --> 14:03.460
到时候如果发生错误

14:03.460 --> 14:04.180
我们干嘛呢

14:04.180 --> 14:05.060
我们补货到

14:05.060 --> 14:05.780
补货到之后

14:05.780 --> 14:06.260
然后接下来

14:06.260 --> 14:08.580
我们抛出我们自己定义

14:08.580 --> 14:09.940
这个定义的错误类型

14:10.820 --> 14:11.620
明白没有

14:11.620 --> 14:12.660
是这个目的

14:12.660 --> 14:13.380
那这样子的话

14:13.380 --> 14:14.180
是不是就很灵活

14:14.740 --> 14:15.060
对不对

14:15.060 --> 14:16.820
我可以抛出我自己定义的

14:16.820 --> 14:18.100
比如说文件上传错误

14:18.820 --> 14:19.700
禁止访问错误

14:20.340 --> 14:21.140
非常的灵活

14:21.460 --> 14:22.260
也分

14:22.260 --> 14:23.300
就是非常方便

14:23.300 --> 14:24.580
我们来处理这个错误

14:25.220 --> 14:25.540
OK

14:26.100 --> 14:28.180
这是关于这个错误处理内

14:28.740 --> 14:29.380
还有一个

14:30.260 --> 14:31.940
还有一个是上级课讲漏了

14:32.660 --> 14:33.780
就是我们上级课的话

14:33.780 --> 14:35.220
我们是不是连接那个数据库

14:35.220 --> 14:35.700
还记不记得

14:36.900 --> 14:37.540
在这边

14:37.540 --> 14:38.340
我们连接数据库

14:38.340 --> 14:38.820
数据库的话

14:38.820 --> 14:40.100
我们是不是连接上了呢

14:40.580 --> 14:41.140
对不对

14:41.140 --> 14:42.820
数据库的话是没有问题

14:42.820 --> 14:43.460
但是这里的话

14:43.460 --> 14:44.580
有一个小的这个细节

14:45.140 --> 14:46.420
然后本来说上级课讲

14:46.420 --> 14:48.100
就上级课一下子忘了

14:48.100 --> 14:48.900
就这里

14:48.900 --> 14:49.700
这里的话

14:49.700 --> 14:50.740
我们这边你看

14:50.740 --> 14:52.420
这个是我们的数据库名字

14:53.140 --> 14:54.020
然后这里的话

14:54.020 --> 14:55.940
是一个这个数据库的这个

14:55.940 --> 14:56.740
我的账号

14:57.140 --> 14:57.780
密码

14:58.100 --> 14:58.340
对不对

14:58.340 --> 14:58.900
包括我这边

14:58.900 --> 14:59.460
它就是

15:00.020 --> 15:01.060
我的这个寓

15:01.060 --> 15:02.580
数据库所在的这个

15:03.540 --> 15:03.940
寓

15:03.940 --> 15:05.220
这边是本地

15:05.540 --> 15:05.860
对吧

15:06.340 --> 15:06.500
好

15:06.500 --> 15:07.300
那这里的话

15:07.300 --> 15:08.100
你可以干嘛呢

15:08.100 --> 15:08.660
这里的话

15:08.660 --> 15:10.020
一般对于我们的这种

15:11.860 --> 15:12.660
配置信息

15:13.220 --> 15:14.020
我们会干嘛呢

15:14.020 --> 15:16.180
我们会把它单独的提出来

15:16.980 --> 15:18.500
我们会单独的把他提出来

15:18.500 --> 15:19.140
说这边的话

15:19.140 --> 15:19.780
我们可以干嘛呢

15:19.780 --> 15:21.780
我们可以去安装一个库

15:22.980 --> 15:23.300
啊

15:23.700 --> 15:24.340
好吧这个

15:25.860 --> 15:26.500
拉上来

15:26.500 --> 15:27.140
我们这边呢

15:27.140 --> 15:28.660
可以去安装一个库

15:28.660 --> 15:29.940
这个库的名字叫做

15:30.500 --> 15:31.540
这个dot

15:31.540 --> 15:32.100
我看一下

15:33.860 --> 15:35.860
叫做这个dot env

15:36.820 --> 15:37.060
啊

15:37.060 --> 15:37.940
我们这边把它装一下

15:38.900 --> 15:39.860
npmi

15:39.860 --> 15:43.140
然后dot env

15:44.100 --> 15:44.340
OK

15:44.980 --> 15:46.260
把这个安装一下

15:46.260 --> 15:47.060
安装了之后

15:47.060 --> 15:47.860
然后接下来的话

15:47.860 --> 15:48.740
我们可以干嘛呢

15:48.740 --> 15:51.380
我们可以在我们的项目跟目楼下面

15:51.460 --> 15:53.220
我们新建一个文件

15:53.220 --> 15:54.580
啊这个文件的话就是

15:54.580 --> 15:55.860
点 env

15:56.980 --> 15:58.340
这边新建一个

15:59.860 --> 16:01.140
点 env

16:01.540 --> 16:02.820
好这里的话就干嘛呢

16:02.820 --> 16:05.620
这里的话就放我们所有的环境变量

16:06.020 --> 16:07.060
我们所有的环境

16:07.060 --> 16:08.660
比如说我们这个上阶课这里

16:08.660 --> 16:09.860
这里的话是不是就是

16:09.860 --> 16:10.900
连接这个数据库

16:10.900 --> 16:12.580
数据库的名字账号密码

16:12.980 --> 16:13.940
这些对不对

16:13.940 --> 16:15.060
那我们就统一干嘛呢

16:15.060 --> 16:16.660
这些叫做环境变量

16:16.660 --> 16:18.260
我们就统一拿一个文件

16:18.740 --> 16:19.620
来进行管理

16:20.020 --> 16:21.380
那我们这边就是db

16:23.380 --> 16:23.940
db

16:23.940 --> 16:25.060
然后接下来这边的话

16:25.060 --> 16:25.380
name

16:26.100 --> 16:26.980
等于一个什么呢

16:26.980 --> 16:28.740
等于一个mi site

16:28.740 --> 16:29.060
2

16:29.780 --> 16:30.500
对不对

16:30.500 --> 16:31.300
好大家这边的话

16:31.300 --> 16:32.260
我们db user

16:33.780 --> 16:34.580
db user

16:34.580 --> 16:36.340
等于一个这个route

16:37.380 --> 16:38.580
好那还有什么

16:38.580 --> 16:39.620
还有这个db

16:39.620 --> 16:40.340
是password

16:40.900 --> 16:42.180
好这边就叫pass

16:42.180 --> 16:42.980
这边也是route

16:43.540 --> 16:45.220
还有最后一个db host

16:48.060 --> 16:49.020
这我们的主机名

16:49.580 --> 16:50.460
这边就是什么

16:50.780 --> 16:52.380
local host

16:53.420 --> 16:54.140
看到没有

16:54.140 --> 16:55.420
我们就把我们所有的

16:56.540 --> 16:57.740
这个环境变量

16:58.460 --> 17:00.460
全部定义在这个文件里面

17:01.100 --> 17:02.700
好定义在这个文件里面之后

17:02.700 --> 17:03.500
然后接下来的话

17:03.500 --> 17:05.180
我们要去引用这个文件

17:05.660 --> 17:07.900
说来到你的这个app

17:07.900 --> 17:08.940
点js文件

17:10.060 --> 17:10.620
来到这个

17:11.180 --> 17:12.620
app.js文件

17:13.100 --> 17:14.860
好我们就在哪个位置呢

17:14.860 --> 17:15.740
就在这边吧

17:16.300 --> 17:16.780
这边的话

17:16.780 --> 17:18.620
我们是引入这个数据库

17:18.620 --> 17:19.020
对吧

17:19.180 --> 17:21.980
我们就写在这个引入数据库的这个下面

17:24.610 --> 17:26.770
好这里的话就require

17:29.010 --> 17:30.450
require一个什么呢

17:30.450 --> 17:31.250
这里的话就是

17:32.210 --> 17:32.930
dots

17:32.930 --> 17:33.730
env

17:33.730 --> 17:34.930
这个是我们刚才装的这个

17:35.650 --> 17:36.770
第三方库

17:36.770 --> 17:39.010
好那接下来这边config

17:39.890 --> 17:40.850
啊这个方法

17:40.850 --> 17:41.570
这什么意思呢

17:41.570 --> 17:42.530
这个的话就是默认

17:43.090 --> 17:43.890
好这边写一下

17:44.930 --> 17:45.490
默认

17:48.320 --> 17:49.760
默认读取

17:50.320 --> 17:51.520
这个项目

17:52.240 --> 17:53.200
跟目录

17:53.760 --> 17:55.760
下的这个点

17:55.760 --> 17:56.560
env

17:57.280 --> 17:58.560
这个环境

17:59.120 --> 17:59.680
辨量

18:00.320 --> 18:00.800
文件

18:01.680 --> 18:02.080
看到没有

18:02.080 --> 18:02.960
因为我们环境辨量

18:02.960 --> 18:04.080
是不都在这个文件里面

18:04.080 --> 18:05.040
是不进行管理的

18:05.920 --> 18:06.240
对不对

18:06.720 --> 18:07.840
好然后把它引入

18:07.840 --> 18:08.560
引入了之后

18:08.560 --> 18:09.360
那接下来

18:09.360 --> 18:11.280
我们回头回到我们的这个

18:11.280 --> 18:12.800
数据库连接这个文件

18:12.800 --> 18:13.440
这边

18:13.440 --> 18:14.160
这边的话

18:14.160 --> 18:14.960
我们就不需要

18:14.960 --> 18:16.160
像这样子来写了

18:16.160 --> 18:17.840
这边让我们这个数据库名称

18:17.840 --> 18:18.480
我们就

18:18.480 --> 18:19.120
怎么写呢

18:19.120 --> 18:20.880
我们这边呢就是process

18:21.840 --> 18:24.080
process.env

18:24.080 --> 18:26.000
访问它的这个环境辨量

18:26.000 --> 18:27.600
环境辨量里面有一个什么呢

18:27.600 --> 18:31.200
有一个db下滑线lan

18:32.000 --> 18:32.800
看到没有

18:32.800 --> 18:34.720
这个的话就是我们数据库的名字

18:34.720 --> 18:36.480
好然后再这边让我们的这个

18:37.040 --> 18:38.080
账号密码

18:38.080 --> 18:39.120
是不是也是一样的

18:40.080 --> 18:40.640
对不对

18:40.640 --> 18:41.760
这边是db

18:41.760 --> 18:42.640
我们刚才叫什么

18:42.640 --> 18:43.280
是user

18:43.920 --> 18:45.200
然后再加这里

18:45.840 --> 18:46.960
这里的话我们刚才是

18:46.960 --> 18:47.760
叫什么

18:47.760 --> 18:48.800
是不是叫做pass

18:49.760 --> 18:50.320
对吧

18:50.560 --> 18:51.280
对吧

18:51.280 --> 18:52.320
好 大家还有这个

18:53.440 --> 18:54.560
这个的话我们刚才是

18:55.280 --> 18:55.920
叫什么

18:55.920 --> 18:56.480
是host

18:57.840 --> 18:58.640
对不对

18:58.640 --> 19:01.520
我们的环境辨量就同一通过这种方式

19:01.520 --> 19:02.560
来进行一个管理

19:03.600 --> 19:04.320
好了回头的话

19:04.320 --> 19:05.520
我们这边保存一下

19:05.520 --> 19:06.400
我们看一下好不好使

19:07.200 --> 19:07.840
全部保存

19:08.480 --> 19:09.360
保存之后

19:09.360 --> 19:10.480
放进来清空一下嘛

19:12.000 --> 19:12.240
走

19:14.000 --> 19:14.560
好

19:14.560 --> 19:15.440
这边的话是

19:17.360 --> 19:19.120
爆了一个错误是吧

19:19.920 --> 19:21.360
我看爆了一个什么错误

19:21.360 --> 19:25.040
unable to connect the data base

19:26.160 --> 19:29.520
assist identity for user localhost

19:29.520 --> 19:30.240
我看一下

19:32.240 --> 19:34.960
哦 这里的话应该是

19:34.960 --> 19:35.600
我看一下

19:36.720 --> 19:38.880
这边的话环境辨量是没问题的

19:38.880 --> 19:39.600
对吧

19:39.600 --> 19:40.080
好 我们这边

19:40.080 --> 19:41.040
哦 这里

19:41.040 --> 19:41.840
是这里

19:41.840 --> 19:43.200
啊 这里的话你应该干嘛呀

19:43.200 --> 19:44.320
是不是先去读取

19:45.600 --> 19:46.960
是不是先去读取

19:47.120 --> 19:49.280
这个环境辨量

19:49.280 --> 19:49.840
对不对

19:49.840 --> 19:51.440
这个的话应该放在它前面

19:51.440 --> 19:52.160
先读取

19:52.160 --> 19:52.800
读取了之后

19:52.800 --> 19:54.000
接下来是不是拆

19:54.000 --> 19:55.920
这个引入数据库连接

19:55.920 --> 19:57.520
因为你这边数据库连接的话

19:57.520 --> 19:58.800
是不是已经在用这些东西了

19:59.760 --> 20:00.240
对不对

20:00.240 --> 20:01.600
你数据库连接的话

20:01.600 --> 20:02.880
已经在用这些东西了

20:02.880 --> 20:03.840
所以你这边的话就是

20:05.040 --> 20:06.720
引入这个环境辨量的

20:06.720 --> 20:07.520
这行呆嘛

20:07.520 --> 20:08.320
应该放在这个

20:08.320 --> 20:10.080
引入数据库连接的前面

20:10.720 --> 20:11.040
OK

20:11.040 --> 20:11.520
好

20:11.520 --> 20:12.000
好 让我们这边

20:12.000 --> 20:13.040
让我们重新保存一下

20:13.520 --> 20:13.840
保存

20:15.120 --> 20:15.920
好 看一下

20:15.920 --> 20:16.480
哎 你看

20:17.040 --> 20:17.920
是不是就OK了

20:17.920 --> 20:19.520
Connection has been this

20:19.520 --> 20:21.360
Italaged successfully

20:21.360 --> 20:22.400
是不是就OK了

20:22.400 --> 20:23.680
好 注意这个位置

20:23.680 --> 20:24.480
注意这个位置

20:24.480 --> 20:25.440
这个要放在前面

20:26.000 --> 20:26.240
OK

20:26.960 --> 20:27.840
好 这节课的话

20:27.840 --> 20:29.760
我们就简单的讲了一下

20:29.760 --> 20:30.400
首先第一个

20:30.400 --> 20:31.760
我们书写了一个这个

20:31.760 --> 20:32.560
错误处理内

20:33.360 --> 20:34.400
首先你下来的话

20:34.400 --> 20:35.520
先把这个写了

20:35.520 --> 20:36.720
你可能这节课写了

20:36.720 --> 20:38.240
你感觉用处不大

20:38.240 --> 20:39.600
你也不知道这个干嘛用的

20:39.600 --> 20:40.960
这个我们后面会用的

20:41.840 --> 20:42.480
知道吧

20:42.480 --> 20:43.200
后面会用的

20:43.200 --> 20:43.840
我们后面的话

20:43.840 --> 20:45.600
我们会这个抛出错误

20:45.680 --> 20:47.840
那我们就需要抛出这个制定一错误

20:47.840 --> 20:49.760
说我们这节课先把这个写了

20:49.760 --> 20:51.040
写了之后后面用的时候

20:51.040 --> 20:52.240
你慢慢就知道了

20:52.800 --> 20:53.280
OK

20:53.280 --> 20:54.320
这个代码也不多

20:54.720 --> 20:55.120
是吧

20:55.120 --> 20:56.320
你先把这个先写了

20:56.720 --> 20:58.080
写了之后第二个就是怎么呢

20:58.080 --> 20:59.760
第二个就是关于数据库

20:59.760 --> 21:00.640
连接这个位置

21:01.200 --> 21:01.760
这个位置的话

21:01.760 --> 21:03.920
我们就把这个环境变量

21:03.920 --> 21:05.440
统一的提取出来

21:06.080 --> 21:06.800
这个的话照理说

21:06.800 --> 21:08.000
应该是上节课讲的

21:08.000 --> 21:08.720
忘了

21:08.720 --> 21:09.200
没关系

21:09.200 --> 21:10.080
这节课把它补上

21:10.640 --> 21:10.880
好吧

21:11.520 --> 21:13.120
这节课就先到这里

21:13.120 --> 21:14.080
大家下来的话

21:14.080 --> 21:14.800
自己写一写

21:15.360 --> 21:15.760
好吧

21:16.240 --> 21:17.680
这节课就先到这里吧

21:17.680 --> 21:18.240
再见

