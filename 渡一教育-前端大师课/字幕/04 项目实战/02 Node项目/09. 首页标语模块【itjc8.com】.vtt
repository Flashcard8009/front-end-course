WEBVTT

00:00.560 --> 00:03.120
好 接下来的话 我们继续

00:03.120 --> 00:07.920
我们接下来的话 就按照我们这个后台管理系统 我们这边一个一个来做

00:07.920 --> 00:10.560
啊 这边首先的话 这边过来的话是

00:10.560 --> 00:12.720
首页标语 是吧

00:12.720 --> 00:14.960
说我们这边 我们来看一下我们的首页标语

00:14.960 --> 00:17.200
首页标语也很简单哈

00:17.200 --> 00:19.200
一个是设置标语

00:19.200 --> 00:21.200
一个是获取首页标语

00:21.200 --> 00:22.800
我们这边过来揉眼

00:22.800 --> 00:26.560
首先获取 获取的话 它是不需要那个的

00:26.560 --> 00:28.560
不需要那个token的

00:28.720 --> 00:30.960
对吧 你要获取 你直接获取就可以了

00:30.960 --> 00:33.200
啊 这边它是API banner

00:33.200 --> 00:35.760
然后得到的数据是这个样子的

00:35.760 --> 00:38.400
啊 这边data对应的是一个数组

00:38.400 --> 00:39.840
因为我们有三个嘛

00:39.840 --> 00:41.040
对吧 有三个

00:41.040 --> 00:44.000
啊 这边有一个中途地址 大途地址

00:44.000 --> 00:45.840
有个title 有个description

00:45.840 --> 00:47.200
那有个id

00:47.200 --> 00:50.400
啊 好 然后接下来的话 这边设置标语

00:51.520 --> 00:54.240
设置标语的话 你看一下啊

00:54.240 --> 00:56.800
设置标语的话 它这边的话是post

00:56.960 --> 00:58.000
啊 你设置

00:58.000 --> 01:01.040
凡是就是和设置相关 设置删除之类的

01:01.040 --> 01:03.040
那这个的话肯定是要token的

01:03.040 --> 01:04.480
啊 这个跑都跑不了的

01:04.480 --> 01:05.280
对不对

01:05.280 --> 01:07.440
好 大家你看它这边传body

01:07.440 --> 01:09.920
body的话 它无论你是设置哪张图

01:09.920 --> 01:11.280
它传的都是什么

01:11.280 --> 01:13.280
说传的都是三个呀

01:13.280 --> 01:14.640
看到没有啊

01:14.640 --> 01:15.920
传的都是三个

01:15.920 --> 01:18.240
啊 所以我们一会的话我们要注意一下

01:18.240 --> 01:20.240
就我比如说我只改第一个

01:20.240 --> 01:22.560
只改第一个 改这个比如description

01:22.560 --> 01:24.400
它传的话也是传三个

01:24.400 --> 01:25.600
啊 这个设计的话

01:25.680 --> 01:29.120
其实不是太好啊

01:29.120 --> 01:30.800
这里的话应该一般我们修改的话

01:30.800 --> 01:32.720
都是根据id来修改的

01:32.720 --> 01:34.240
是吧啊 当这边呢

01:34.240 --> 01:35.760
既然提前这样子定了

01:35.760 --> 01:36.480
那也无所谓

01:36.480 --> 01:37.760
那我们就按照这个

01:37.760 --> 01:39.600
按照这个来做啊

01:39.600 --> 01:40.480
好 返回数据

01:40.480 --> 01:42.320
返回数据的话也是新的

01:42.320 --> 01:43.920
新的这个三张啊

01:43.920 --> 01:44.960
就三个数据

01:44.960 --> 01:45.680
看到没有啊

01:45.680 --> 01:46.880
这个是第一张图

01:46.880 --> 01:47.840
第二张图

01:47.840 --> 01:49.200
第三张图

01:49.200 --> 01:49.600
OK

01:50.480 --> 01:51.920
好 首先把这接口

01:51.920 --> 01:52.800
看一眼

01:52.800 --> 01:53.520
看了之后

01:53.520 --> 01:55.840
那接下来的我们这个代码这边

01:55.840 --> 01:58.240
这边的话我们是一个新的模块了

01:58.240 --> 01:59.920
说这里的话又需要干嘛呢

01:59.920 --> 02:01.680
又需要设置的这个定义

02:01.680 --> 02:03.360
那个数据模型的

02:03.360 --> 02:05.040
来到这个dao这边

02:05.040 --> 02:06.800
首先model下面

02:06.800 --> 02:08.480
啊 那你一个定义好了

02:08.480 --> 02:10.800
后面的话是不是就差不多了

02:10.800 --> 02:12.960
对不对 这边是 banner

02:12.960 --> 02:14.080
model

02:14.080 --> 02:15.360
点击s

02:15.360 --> 02:16.160
啊

02:16.160 --> 02:18.960
那把这个enemy

02:18.960 --> 02:20.000
把这个enemy

02:20.000 --> 02:22.990
直接把它拿过来

02:22.990 --> 02:24.510
ctrl c

02:24.990 --> 02:26.110
然后把拿过来

02:26.110 --> 02:27.550
拿过来哪些地方要干呢

02:27.550 --> 02:28.350
首先这里

02:28.350 --> 02:29.070
这里一定要干

02:29.070 --> 02:31.550
这边那就是应该是 banner这个表

02:31.550 --> 02:33.230
对吧 它有哪些字段呢

02:33.230 --> 02:34.110
有哪些字段

02:34.110 --> 02:36.430
首先的话是不是有一个中途

02:36.430 --> 02:37.150
对不对

02:37.150 --> 02:40.690
啊 这里面是这个middle

02:40.690 --> 02:42.610
middle image

02:42.610 --> 02:45.090
对应的值是一个制幅串

02:45.090 --> 02:46.770
然后不允许为空

02:46.770 --> 02:47.970
好 然后接下来还有个什么呢

02:47.970 --> 02:52.030
还有一个这个b一个image

02:52.030 --> 02:52.590
对吧

02:52.590 --> 02:53.710
也是制幅串

02:53.710 --> 02:54.910
不允许为空

02:54.910 --> 02:56.590
好 然后接下来有个什么呢

02:56.670 --> 02:58.830
有一个title

02:58.830 --> 03:00.030
按的标题

03:00.030 --> 03:02.110
也是制幅串 不允许为空

03:02.110 --> 03:02.990
好 大家最后

03:02.990 --> 03:06.350
最后是一个这个description

03:06.350 --> 03:07.790
你看写好一个是不是

03:07.790 --> 03:10.270
再写另外一个是不是就很快了

03:10.270 --> 03:11.230
对不对

03:11.230 --> 03:13.790
description

03:13.790 --> 03:15.870
description

03:15.870 --> 03:16.910
啊 description

03:16.910 --> 03:17.790
对了吧

03:17.790 --> 03:19.550
啊 然后也是制幅串

03:19.550 --> 03:20.430
不允许为空

03:20.430 --> 03:22.190
OK 就写好了

03:22.190 --> 03:22.830
看到没有

03:22.830 --> 03:23.790
就写好了 就是

03:23.790 --> 03:24.910
就是这样子的

03:24.990 --> 03:25.870
说我们之前的话

03:25.870 --> 03:26.990
我反复强调

03:26.990 --> 03:28.990
只要一个写好了

03:28.990 --> 03:30.430
一个模块通了

03:30.430 --> 03:31.470
后面就很快的

03:31.470 --> 03:34.110
一葫芦花瓢很快就出来了

03:34.110 --> 03:35.870
好 首先把这个模块写了

03:35.870 --> 03:36.510
写了之后

03:36.510 --> 03:39.870
然后接下来我们在这个db里面

03:39.870 --> 03:42.510
我们还是要来一个这个初始化

03:42.510 --> 03:45.310
所以我们来到这个db这边

03:45.310 --> 03:46.670
db这边大家记不记得

03:46.670 --> 03:48.990
我们之前的话这个andme

03:48.990 --> 03:50.830
一开始启动这个服务器

03:50.830 --> 03:52.510
它检查你有没有这张表

03:52.510 --> 03:53.310
如果没有这张

03:53.710 --> 03:55.470
它检查那个表里面有没有数据

03:55.470 --> 03:57.310
因为这里要进行同步嘛

03:57.310 --> 03:57.790
对不对

03:57.790 --> 03:59.470
同步了之后它检查你表

03:59.470 --> 04:00.510
表里面有没有数据

04:00.510 --> 04:01.230
如果没有的话

04:01.230 --> 04:03.630
是不是会给你一个初始化的数据

04:03.630 --> 04:04.430
对不对

04:04.430 --> 04:05.390
好 那我们这边的话

04:05.390 --> 04:07.710
这个banner也是一样

04:07.710 --> 04:08.670
banner也是一样

04:08.670 --> 04:09.870
所以我们这边的话

04:09.870 --> 04:10.590
就一样的

04:10.590 --> 04:11.310
来呗

04:11.310 --> 04:12.670
那这里的话就是

04:12.670 --> 04:21.260
banner进行初始化操作

04:21.260 --> 04:22.060
好 那接下来的话

04:22.060 --> 04:23.420
这里的话就应该是

04:23.420 --> 04:24.780
const

04:24.860 --> 04:26.940
banner count

04:26.940 --> 04:27.340
对吧

04:27.340 --> 04:28.300
等于一个你这边呢

04:28.300 --> 04:29.260
就需要

04:29.260 --> 04:31.420
这边他可以自己引是吧

04:31.420 --> 04:31.820
那这边呢

04:31.820 --> 04:33.420
就直接banner model

04:35.420 --> 04:36.700
果然是吧

04:36.700 --> 04:37.420
相当nice

04:37.420 --> 04:38.780
但我想把它放在

04:38.780 --> 04:39.820
这个位置

04:39.820 --> 04:40.780
强迫症

04:40.780 --> 04:42.140
怎么把它放在这个位置

04:42.140 --> 04:42.780
好 这边呢

04:42.780 --> 04:43.980
这个banner count

04:43.980 --> 04:45.100
这个banner model

04:45.100 --> 04:46.220
然后点什么

04:46.220 --> 04:46.780
counter

04:47.820 --> 04:48.220
对吧

04:48.220 --> 04:48.780
那后面的话

04:48.780 --> 04:49.660
都是一样的

04:49.660 --> 04:50.140
义父

04:51.100 --> 04:53.900
这边没有banner count

04:54.940 --> 04:55.660
好 那接下来

04:55.660 --> 04:57.020
这里的话就要进行一个

04:57.020 --> 04:58.380
初始化操作

04:58.380 --> 04:59.420
好 所以说我们这边呢

04:59.420 --> 05:01.740
就直接await

05:01.740 --> 05:04.380
然后banner model

05:04.380 --> 05:04.940
然后你这边

05:04.940 --> 05:05.340
你注意

05:05.340 --> 05:07.020
你是要创建多条数据

05:07.020 --> 05:08.540
要传的是个数组

05:08.540 --> 05:09.420
所以你这边呢

05:09.420 --> 05:13.660
就是用的是这个book build

05:13.660 --> 05:15.020
用这个方法

05:15.020 --> 05:15.740
OK

05:15.740 --> 05:17.100
好 那里面传

05:17.100 --> 05:18.620
传一个数组

05:18.620 --> 05:19.420
数组里面

05:19.420 --> 05:20.060
然后接下来吧

05:20.060 --> 05:21.340
第一张图

05:21.340 --> 05:22.460
第二张图

05:22.460 --> 05:23.900
第三张图

05:23.900 --> 05:24.380
对不对

05:24.460 --> 05:25.580
每张图都是一个对象

05:26.860 --> 05:27.820
好 接下来在这里

05:27.820 --> 05:28.300
这里的话

05:28.300 --> 05:29.740
我们就需要有一些

05:29.740 --> 05:31.740
初始化的这个数据了

05:31.740 --> 05:32.460
那我这边呢

05:32.460 --> 05:33.900
就直接把我的成品打开

05:34.620 --> 05:36.380
我们把那个数据

05:36.380 --> 05:37.340
我把他拿过来一下

05:38.220 --> 05:39.420
我的成品呢

05:39.980 --> 05:40.540
稍等一下

05:42.780 --> 05:43.340
在这里

05:44.060 --> 05:44.540
不是这个

05:46.540 --> 05:46.780
在

05:48.300 --> 05:48.620
这里

05:49.420 --> 05:49.980
对 就这个

05:51.100 --> 05:52.140
然后我们这边

05:52.140 --> 05:53.180
我把成品打开

05:53.740 --> 05:57.340
成品的话在这个public下面

05:57.340 --> 05:59.020
public下面有一个static

05:59.900 --> 06:00.460
看到没有

06:00.460 --> 06:01.820
我把这放大点嘛

06:01.820 --> 06:03.100
有一个static

06:03.100 --> 06:04.220
static下面的话

06:04.220 --> 06:05.260
有三个文件夹

06:06.700 --> 06:07.500
看到没有

06:07.500 --> 06:09.100
一个是这个arata

06:09.100 --> 06:09.660
这个是什么呢

06:09.660 --> 06:10.780
这个是存放的是这个

06:11.740 --> 06:12.140
头像

06:12.700 --> 06:13.900
就我们那个用户评论的话

06:13.900 --> 06:15.740
它不是有这个头像吗

06:15.740 --> 06:16.940
这是头像

06:16.940 --> 06:19.020
好 接下来这个image是

06:19.020 --> 06:19.740
这个是什么呢

06:19.740 --> 06:20.540
这个的话就是

06:20.540 --> 06:22.220
我们这个默认的一些图片

06:23.420 --> 06:23.900
看到没有

06:24.620 --> 06:25.580
默认的一些图片

06:26.780 --> 06:27.100
ok

06:27.900 --> 06:29.100
然后接下来这边

06:29.100 --> 06:29.660
默认的

06:31.020 --> 06:31.740
默认的

06:31.740 --> 06:33.820
包括这边还有默认的这个头像

06:34.460 --> 06:36.300
然后默认的这个二维码

06:36.300 --> 06:37.180
好 接下来这边呢

06:37.180 --> 06:38.140
这个upload

06:38.700 --> 06:39.420
upload的话

06:39.420 --> 06:40.380
这个就是一会要做

06:40.380 --> 06:41.580
那个上传的时候

06:42.540 --> 06:43.260
ok

06:43.260 --> 06:44.380
要做上传的时候

06:44.380 --> 06:45.100
所以我们这边呢

06:45.100 --> 06:45.980
就复制这两个

06:47.420 --> 06:48.060
contrc

06:48.860 --> 06:50.140
来到我们这边

06:50.860 --> 06:51.420
这边的话

06:51.420 --> 06:52.620
你找到public

06:55.410 --> 06:56.210
public下面

06:56.210 --> 06:56.930
然后我们这边的话

06:57.490 --> 06:58.850
有一个static

06:58.850 --> 06:59.970
新建一个static

07:02.620 --> 07:03.820
好 然后接下来这里

07:04.460 --> 07:05.180
把它放进去

07:06.220 --> 07:07.020
对吧

07:07.020 --> 07:07.900
然后upload

07:07.900 --> 07:10.140
upload的话就不用新建了

07:10.140 --> 07:11.820
upload的话就不用拷贝了

07:11.820 --> 07:14.220
这边我们就把这个文件夹建好就可以了

07:14.220 --> 07:15.180
建不建都无所谓

07:15.820 --> 07:16.940
一会我们用代码的时候

07:16.940 --> 07:18.380
他发现没有这个文件夹

07:18.380 --> 07:19.580
他会自动给我们创建的

07:20.220 --> 07:20.460
ok

07:21.100 --> 07:22.540
我们这边要先把这个资源

07:23.260 --> 07:23.980
先把他拿过来

07:24.700 --> 07:27.020
其他的话就没什么了

07:27.020 --> 07:27.820
这边这个emg

07:27.820 --> 07:28.540
这个就不要了

07:29.420 --> 07:30.060
这里不要了

07:31.500 --> 07:31.820
ok

07:32.380 --> 07:32.700
好

07:32.700 --> 07:34.620
然后首先是一个是这个

07:34.620 --> 07:35.260
然后第二个呢

07:35.260 --> 07:36.460
就是这个初始化数据

07:37.980 --> 07:39.020
就是这里

07:43.140 --> 07:44.020
把这个关了

07:44.820 --> 07:45.220
第二个呢

07:45.220 --> 07:46.340
就是这个初始化数据

07:46.340 --> 07:47.140
初始化数据的话

07:47.140 --> 07:48.820
我这边也就不一个一个敲了

07:49.380 --> 07:51.220
直接从这个成品这边把它拿过来

07:52.740 --> 07:55.540
这里的话是在dao

07:55.540 --> 07:56.420
然后db里面

07:57.220 --> 07:59.220
是在下面这个位置

08:01.550 --> 08:02.350
这个位置

08:02.350 --> 08:03.870
我就直接把这个数组拿过来

08:03.870 --> 08:04.910
这个我就不敲了吗

08:05.470 --> 08:05.790
是吧

08:05.790 --> 08:07.070
这个敲没有太大的意思

08:07.790 --> 08:08.110
好

08:08.110 --> 08:08.910
然后我这边呢

08:08.910 --> 08:10.510
就直接把这个数组提换了

08:10.510 --> 08:10.670
啊

08:12.940 --> 08:13.260
ok

08:13.900 --> 08:14.220
这个呢

08:14.220 --> 08:16.300
就是我们的一些初始化的数据

08:17.340 --> 08:18.060
看到没有

08:18.060 --> 08:19.100
初始化的数据

08:19.100 --> 08:19.340
好

08:19.340 --> 08:20.620
然后接下来你这边也是

08:21.100 --> 08:22.060
初始化完了之后

08:22.060 --> 08:23.900
然后加这边还是打印一下嘛

08:23.900 --> 08:24.380
console

08:25.740 --> 08:26.860
console.nog

08:29.550 --> 08:29.710
好

08:29.710 --> 08:31.630
这里就是初始化

08:35.980 --> 08:37.180
初始化

08:38.060 --> 08:40.140
首页标语

08:40.860 --> 08:41.660
这个数据

08:45.820 --> 08:46.140
对吧

08:46.780 --> 08:46.860
啊

08:46.860 --> 08:47.900
这个这个就完了

08:48.460 --> 08:49.020
好

08:49.020 --> 08:50.140
然后接下来的话继续

08:51.900 --> 08:52.140
好

08:52.140 --> 08:53.420
接下来的流程的话

08:53.420 --> 08:55.180
就和我们那个andme

08:55.740 --> 08:56.700
是一样的

08:56.700 --> 08:57.740
那一个一个来呗

08:57.740 --> 08:58.300
那首先呢

08:58.300 --> 08:59.820
你这边是不是得新建一个

09:00.380 --> 09:00.780
这边呢

09:00.780 --> 09:01.660
就是 banner

09:02.460 --> 09:03.260
点击是

09:04.060 --> 09:04.380
对吧

09:04.380 --> 09:05.020
啊

09:05.100 --> 09:05.580
这边啊

09:05.580 --> 09:06.300
挖一个

09:07.100 --> 09:07.740
express

09:10.140 --> 09:11.020
等于一个

09:11.660 --> 09:12.300
require

09:14.480 --> 09:15.120
express

09:16.000 --> 09:16.240
啊

09:16.240 --> 09:17.200
大家这边

09:17.200 --> 09:17.920
挖一个

09:18.640 --> 09:19.040
rotor

09:19.600 --> 09:21.280
等于一个express

09:22.320 --> 09:23.120
点rotor

09:25.120 --> 09:25.600
对吧

09:25.600 --> 09:26.400
然后接下来这边呢

09:26.400 --> 09:27.120
要导出这个

09:27.680 --> 09:27.760
啊

09:27.760 --> 09:28.880
刚才是不是就没导出啊

09:29.600 --> 09:30.880
就记得导出哈

09:30.880 --> 09:32.080
modu.express

09:32.560 --> 09:33.440
等于一个

09:34.000 --> 09:34.400
rotor

09:34.960 --> 09:35.200
好

09:35.200 --> 09:36.320
然后接下来这边

09:36.320 --> 09:36.960
这边的话

09:36.960 --> 09:37.520
我们过来

09:37.840 --> 09:38.640
过来看一眼

09:39.360 --> 09:40.960
看你的这个API这边

09:41.440 --> 09:42.000
这边的话

09:42.000 --> 09:43.120
如果是设置

09:43.120 --> 09:44.160
它是API rotor

09:44.720 --> 09:45.040
啊

09:45.040 --> 09:45.680
然后接下来

09:45.680 --> 09:46.960
这边如果是获取

09:46.960 --> 09:48.400
也是API rotor

09:48.400 --> 09:49.360
只不过什么

09:49.360 --> 09:50.640
是方法不一样

09:50.640 --> 09:51.360
一个是get

09:51.360 --> 09:52.000
一个是

09:52.000 --> 09:52.560
是post

09:53.600 --> 09:54.320
对不对

09:54.320 --> 09:54.560
啊

09:54.560 --> 09:55.440
所以来到我们这边

09:56.800 --> 09:57.120
这边呢

09:57.120 --> 09:58.080
就直接rotor

09:58.640 --> 09:58.960
点

09:58.960 --> 10:00.240
一个是get

10:01.920 --> 10:02.560
get

10:02.560 --> 10:04.080
然后加这边async

10:04.880 --> 10:05.360
function

10:06.320 --> 10:07.600
然后req

10:08.160 --> 10:08.960
res

10:09.760 --> 10:10.160
next

10:11.200 --> 10:11.440
啊

10:11.440 --> 10:12.240
一个是get

10:12.240 --> 10:13.120
一个是什么呢

10:13.120 --> 10:14.080
一个是post

10:15.840 --> 10:17.040
把这个改成post

10:19.860 --> 10:20.420
post

10:21.140 --> 10:21.460
啊

10:21.460 --> 10:22.660
然后一个是获取

10:22.660 --> 10:24.020
这边注释写下

10:24.020 --> 10:25.220
这个是获取

10:25.860 --> 10:26.500
首页

10:27.940 --> 10:28.900
标语

10:28.900 --> 10:29.060
啊

10:29.060 --> 10:30.500
这个的话是设置

10:31.620 --> 10:32.980
设置首页标语

10:34.820 --> 10:35.620
首页

10:37.460 --> 10:37.860
标语

10:38.580 --> 10:39.140
对吧

10:39.140 --> 10:39.460
好

10:39.460 --> 10:40.340
然后完事之后

10:40.340 --> 10:41.220
然后你那个

10:42.900 --> 10:43.860
要注册一下啊

10:44.500 --> 10:45.540
在你的那个

10:45.540 --> 10:46.820
app.js里面

10:47.220 --> 10:47.780
在这边

10:49.220 --> 10:50.980
这个套路都是一样的

10:51.700 --> 10:53.300
这边你就复制一份

10:53.300 --> 10:54.340
这边就是入

10:54.340 --> 10:55.940
这个入词下面的什么

10:56.660 --> 10:57.620
是这个banner

10:58.820 --> 10:59.140
对不对

10:59.780 --> 11:00.420
对不对

11:00.420 --> 11:01.300
banner

11:01.300 --> 11:01.540
好

11:01.540 --> 11:03.220
然后加这里的话就改成

11:03.220 --> 11:04.420
是banner入册

11:07.070 --> 11:07.470
对不对

11:07.470 --> 11:08.590
banner入册

11:08.670 --> 11:08.910
好

11:08.910 --> 11:10.110
然后这里

11:11.070 --> 11:12.270
这里的话就直接是

11:13.230 --> 11:14.110
banner router

11:15.550 --> 11:16.270
然后加这边呢

11:16.270 --> 11:17.070
就是API

11:18.510 --> 11:19.070
是banner

11:20.030 --> 11:20.750
对不对

11:20.750 --> 11:21.550
API banner

11:21.550 --> 11:22.830
然后我们这边的话

11:22.830 --> 11:23.310
这边的话

11:23.310 --> 11:25.230
这个二级录有其实啥都没有

11:25.230 --> 11:25.310
啊

11:25.310 --> 11:25.950
说到这边呢

11:25.950 --> 11:27.230
这个接口就是API

11:27.230 --> 11:28.190
这个banner

11:28.190 --> 11:29.310
那只不过一个是get

11:29.310 --> 11:30.350
一个是post

11:30.910 --> 11:31.150
好

11:31.150 --> 11:31.630
那我们这边呢

11:31.630 --> 11:32.830
我们把它保存一下

11:32.830 --> 11:34.670
顺便把那个数据库的数据

11:34.670 --> 11:35.470
把它同步一下

11:36.430 --> 11:36.670
好

11:36.670 --> 11:37.310
全部保存

11:39.660 --> 11:40.940
把这边手页标语的数据

11:40.940 --> 11:42.780
说这个数据库的数据

11:42.780 --> 11:43.580
说出事吧

11:44.140 --> 11:44.300
啊

11:44.300 --> 11:45.020
过来漏译啊

11:46.300 --> 11:46.620
在

11:49.150 --> 11:49.390
呃

11:50.270 --> 11:50.910
这里有了

11:53.010 --> 11:53.170
啊

11:53.170 --> 11:54.130
只不过现在的

11:54.130 --> 11:54.370
哎

11:54.930 --> 11:55.970
怎么会没有数据呢

11:57.730 --> 11:57.970
好

11:57.970 --> 11:58.690
这边再看一下

12:01.010 --> 12:01.330
哎

12:03.950 --> 12:05.630
这边怎么会没有数据呢

12:08.540 --> 12:09.260
banner

12:10.620 --> 12:11.420
这里不应该呀

12:15.060 --> 12:15.780
刷新一下

12:17.060 --> 12:17.860
也没有数据

12:17.860 --> 12:18.100
好

12:18.100 --> 12:19.060
我们这边我们来看一下

12:20.180 --> 12:20.820
这一边的话

12:20.820 --> 12:22.980
它照理说是进了衣服的

12:24.820 --> 12:25.780
来到这边

12:25.780 --> 12:26.900
它是进来了的

12:26.900 --> 12:27.620
它只有进来

12:27.620 --> 12:29.540
是不是才会打印输出这句话

12:30.580 --> 12:30.980
对不对

12:32.020 --> 12:32.420
然后

12:35.460 --> 12:36.660
book build

12:38.580 --> 12:40.500
然后title description

12:41.140 --> 12:41.380
哎

12:41.380 --> 12:42.580
这些都是对的呀

12:42.580 --> 12:43.780
和我的这个model

12:45.540 --> 12:47.780
和model能够对应上呀

12:50.620 --> 12:51.500
能够对应上呀

12:53.180 --> 12:55.020
我这边我再重启一下服务器

12:55.020 --> 12:56.300
这次它应该就不进了

12:59.410 --> 13:00.450
它还是出实话

13:01.570 --> 13:02.450
还是出实话呢

13:02.450 --> 13:03.650
说明这边的话

13:03.650 --> 13:05.570
写数据的时候是有问题的

13:06.610 --> 13:07.250
对不对

13:07.250 --> 13:09.090
这边写的时候是有问题的

13:09.090 --> 13:10.690
我们来看一下这里有什么问题

13:11.650 --> 13:12.370
好来看一下

13:14.130 --> 13:14.530
啊

13:14.530 --> 13:15.810
这里的话

13:16.450 --> 13:16.850
呃

13:16.850 --> 13:18.050
这里是进来了的

13:18.050 --> 13:20.050
然后接下来这边banner model

13:20.450 --> 13:21.650
我这边写错了啊

13:22.530 --> 13:23.890
这边呢是create

13:25.330 --> 13:26.130
不是build

13:26.130 --> 13:26.610
create

13:27.970 --> 13:28.210
啊

13:28.210 --> 13:29.170
你这边呢

13:29.170 --> 13:30.690
你可以去查这个文档

13:31.650 --> 13:31.970
对吧

13:31.970 --> 13:33.170
可以查文档

13:33.170 --> 13:33.650
这边呢

13:33.650 --> 13:36.130
它是这个model

13:36.930 --> 13:37.730
model然后

13:38.370 --> 13:39.650
等一下它还在转

13:39.650 --> 13:40.290
然后接下来

13:40.290 --> 13:40.770
这边呢

13:40.770 --> 13:41.090
是啊

13:42.050 --> 13:42.690
去找一找

13:43.170 --> 13:44.050
这边create

13:44.850 --> 13:46.210
那它有一个这个bulk

13:46.530 --> 13:47.970
这个bulk create

13:47.970 --> 13:48.210
啊

13:50.130 --> 13:51.330
在哪里呢

13:52.370 --> 13:52.930
看一下

13:54.210 --> 13:55.010
update

13:57.120 --> 13:57.440
诶

13:58.400 --> 14:00.560
它那个我找一找啊

14:00.560 --> 14:00.720
啊

14:00.720 --> 14:01.360
反正找一找

14:01.360 --> 14:02.320
它就在这里面

14:03.040 --> 14:04.160
有一个bulk

14:04.960 --> 14:05.920
bulk create

14:06.800 --> 14:08.000
而不是那个build

14:08.880 --> 14:10.160
这边是create

14:10.160 --> 14:10.320
啊

14:10.320 --> 14:11.040
这里这里

14:11.040 --> 14:11.920
看到没有

14:11.920 --> 14:12.560
bulk create

14:12.560 --> 14:13.920
我刚才是不是写成这个

14:13.920 --> 14:14.880
bulk build

14:15.520 --> 14:15.840
对不对

14:16.480 --> 14:16.720
好

14:16.720 --> 14:17.360
然后再这里

14:17.360 --> 14:18.320
这里应该就ok了

14:18.320 --> 14:18.480
好

14:18.480 --> 14:19.680
我们这边让重新保存一下

14:21.120 --> 14:21.520
ok

14:21.520 --> 14:22.560
这边出实话了

14:22.640 --> 14:23.360
出实话了之后

14:23.360 --> 14:24.160
然后再这边让我们来

14:24.160 --> 14:25.040
看一下那个数据

14:26.400 --> 14:27.680
这边这次就应该有了

14:28.240 --> 14:29.200
把这个关了嘛

14:30.000 --> 14:30.880
关了重新来

14:31.680 --> 14:32.320
这就有了

14:33.040 --> 14:33.440
对不对

14:33.920 --> 14:34.800
出实话数据

14:35.120 --> 14:36.080
就写进去了

14:36.560 --> 14:36.800
啊

14:37.440 --> 14:37.760
好

14:37.760 --> 14:39.440
然后接下来回到我们这边

14:39.920 --> 14:40.960
那接下来下一步

14:40.960 --> 14:41.520
下一步的话

14:41.520 --> 14:42.080
然后这里的话

14:42.080 --> 14:43.040
就一点就来做

14:43.520 --> 14:44.560
我们现在做什么呢

14:44.560 --> 14:45.920
我们就先还是来做这个

14:46.400 --> 14:46.880
获取吧

14:47.840 --> 14:48.720
因为这个获取的话

14:48.720 --> 14:49.280
比较简单

14:49.280 --> 14:50.080
也不需要什么

14:50.880 --> 14:51.280
那个

14:52.240 --> 14:53.680
什么什么talking验证啊

14:53.680 --> 14:54.160
之类的

14:54.160 --> 14:54.560
对吧

14:54.560 --> 14:55.360
而且talking验证

14:55.360 --> 14:56.400
也不需要我们在这验证

14:57.040 --> 14:57.760
talking验证的话

14:57.760 --> 14:59.680
在那个app.js里面

15:00.320 --> 15:01.040
我们写在

15:02.160 --> 15:02.800
这个位置的

15:03.360 --> 15:03.840
这个位置

15:03.840 --> 15:04.880
它是不是自动就验证了

15:05.520 --> 15:05.920
对不对

15:06.320 --> 15:07.200
我们先来写这个

15:07.200 --> 15:08.160
这个不需要做什么

15:08.160 --> 15:09.200
额外的操作

15:09.200 --> 15:09.840
然后这里的话

15:09.840 --> 15:10.640
就直接是

15:11.360 --> 15:12.480
我们创建一个service

15:15.360 --> 15:15.840
这边呢

15:15.840 --> 15:16.960
就是 banner

15:18.400 --> 15:19.440
banner service

15:21.360 --> 15:22.000
点js

15:23.520 --> 15:24.160
这边的话

15:24.160 --> 15:25.200
导出两个方法

15:28.300 --> 15:29.660
这边model

15:30.780 --> 15:31.900
点expose

15:32.700 --> 15:33.820
点一个是这个

15:33.820 --> 15:34.940
fender banner

15:36.060 --> 15:37.020
fender banner

15:37.900 --> 15:38.380
service

15:39.580 --> 15:40.540
等于一个

15:41.180 --> 15:41.580
sync

15:42.860 --> 15:44.060
as ync

15:44.780 --> 15:45.420
方形

15:45.420 --> 15:46.620
也不需要传什么参数

15:47.660 --> 15:48.300
对吧

15:48.300 --> 15:48.620
好

15:48.620 --> 15:49.420
然后接下来的话

15:49.420 --> 15:50.620
这边再来创建一个

15:51.180 --> 15:53.100
创建一个 banner dao

15:55.620 --> 15:57.220
banner dao

15:57.940 --> 15:58.420
点js

15:59.220 --> 15:59.860
而这边的话

15:59.860 --> 16:00.900
也导出一个方法

16:01.620 --> 16:02.100
model

16:02.740 --> 16:03.700
点expose

16:04.260 --> 16:04.900
点什么呢

16:04.900 --> 16:06.100
点这个band

16:06.980 --> 16:08.660
banner dao

16:08.660 --> 16:09.700
等于一个

16:10.580 --> 16:11.300
然后

16:11.300 --> 16:11.860
function

16:14.030 --> 16:14.750
对吧

16:14.750 --> 16:15.630
好在这里

16:15.630 --> 16:16.030
这里的话

16:16.030 --> 16:17.390
我们是不是就要掉那个模型

16:18.350 --> 16:18.750
对吧

16:18.750 --> 16:20.110
根据那个模型

16:20.110 --> 16:21.950
然后来这个查找

16:21.950 --> 16:23.870
那这边是这个 banner

16:23.870 --> 16:25.230
我已经爱上它的那个

16:25.230 --> 16:26.270
自动导入了

16:26.270 --> 16:27.710
我直接写就可以了

16:27.710 --> 16:28.510
banner mode

16:28.510 --> 16:29.230
它有个什么

16:29.230 --> 16:30.510
它有个band or

16:31.230 --> 16:32.590
就是查找所有

16:32.590 --> 16:34.190
因为我们这个数据就只有三条

16:34.750 --> 16:35.230
对吧

16:35.230 --> 16:36.830
直接这个band or

16:36.830 --> 16:37.070
好

16:37.070 --> 16:38.110
然后接下来这边

16:38.110 --> 16:38.910
要等待一下

16:39.470 --> 16:40.190
等待一下之后

16:40.190 --> 16:42.670
然后把这个查询的这个结果拿到

16:42.670 --> 16:43.550
就给它返回出去

16:44.430 --> 16:45.070
对不对

16:45.070 --> 16:46.190
那返回出去的话

16:46.190 --> 16:47.950
然后接下来来到我们的这个

16:47.950 --> 16:48.910
banner service

16:50.750 --> 16:51.950
banner service

16:51.950 --> 16:53.230
然后这边那就是

16:53.230 --> 16:54.350
我们拿到这个数据

16:54.350 --> 16:56.030
const data

16:56.590 --> 16:57.630
等于一个什么呢

16:57.710 --> 16:59.230
好这边await

16:59.230 --> 17:00.350
等待

17:00.350 --> 17:01.310
我们那边的话

17:01.310 --> 17:02.110
这个band

17:03.790 --> 17:05.310
banner dao

17:06.750 --> 17:07.550
对吧

17:07.550 --> 17:08.190
啊等待

17:08.190 --> 17:08.990
调用这个方法

17:08.990 --> 17:09.550
等待

17:09.550 --> 17:10.270
好大家这边

17:10.270 --> 17:11.950
他就会跟我查到这个数据

17:11.950 --> 17:13.470
我们这边我们来试一下嘛

17:13.470 --> 17:14.910
console.log

17:16.270 --> 17:16.670
data

17:18.690 --> 17:19.090
data

17:19.730 --> 17:20.370
啊

17:20.370 --> 17:21.410
当然我们这边的话

17:21.410 --> 17:22.530
需要调用这个方法

17:23.890 --> 17:24.450
这边

17:24.450 --> 17:25.970
这边是不需要调用这个方法

17:26.610 --> 17:27.410
这边await

17:30.320 --> 17:31.760
哎这边他怎么就不给我

17:32.320 --> 17:33.120
自动引入了呢

17:34.400 --> 17:34.880
啊

17:34.880 --> 17:35.440
他不引入

17:35.440 --> 17:36.960
我们手动引入一下

17:36.960 --> 17:37.760
这边的话就是

17:39.120 --> 17:39.600
const

17:41.040 --> 17:42.160
然后等于一个

17:43.280 --> 17:43.920
require

17:45.200 --> 17:45.600
然后

17:47.280 --> 17:47.840
这里的话

17:47.840 --> 17:48.800
上一层的

17:49.840 --> 17:50.400
service

17:50.960 --> 17:51.520
下面的

17:52.160 --> 17:53.040
banner service

17:53.840 --> 17:54.640
对吧

17:54.640 --> 17:56.000
然后加这边引入

17:56.000 --> 17:57.520
band banner service

17:58.240 --> 17:58.560
OK

17:59.200 --> 17:59.440
好

17:59.440 --> 18:00.720
然后接下来这边来试一下

18:00.720 --> 18:00.880
哈

18:01.600 --> 18:02.320
全部保存

18:04.320 --> 18:04.800
啊没错

18:04.800 --> 18:05.440
是吧

18:05.440 --> 18:06.080
没错之后

18:06.080 --> 18:07.360
然后接下来到我们这边

18:07.920 --> 18:09.680
这边的话就是get

18:10.800 --> 18:11.520
get

18:11.520 --> 18:12.640
然后这里的话

18:12.640 --> 18:14.240
就是应该是api什么

18:14.800 --> 18:15.440
是banner

18:16.560 --> 18:17.120
走

18:17.120 --> 18:17.840
发送请求

18:18.400 --> 18:18.560
啊

18:18.560 --> 18:19.600
然后来到这边

18:19.600 --> 18:20.240
是不是拿到了

18:21.520 --> 18:21.920
看到没有

18:22.480 --> 18:23.520
就拿到了

18:23.520 --> 18:24.000
banner

18:24.000 --> 18:24.960
然后接下这边

18:24.960 --> 18:25.840
data value

18:26.960 --> 18:27.280
啊

18:28.240 --> 18:29.440
然后这边的话

18:29.440 --> 18:30.080
banner

18:30.080 --> 18:30.800
data value

18:31.360 --> 18:32.240
这是第一个

18:33.120 --> 18:33.360
啊

18:33.360 --> 18:34.560
但这个数据我们是不是需要

18:34.560 --> 18:35.200
处理一下呀

18:35.840 --> 18:36.960
banner data value

18:38.080 --> 18:38.720
然后加这边

18:38.720 --> 18:39.840
banner data value是

18:40.320 --> 18:41.200
是不是需要处理一下

18:41.200 --> 18:42.720
这个这个数据是不是很奇怪

18:43.920 --> 18:44.320
对不对

18:44.800 --> 18:45.840
所以我们这边的话

18:45.840 --> 18:48.000
我们需要把它处理一下

18:49.120 --> 18:49.360
好

18:49.360 --> 18:51.440
我们把至少得处理成什么样子呢

18:51.440 --> 18:52.400
处理成这个样子

18:53.040 --> 18:54.480
就是我们需要的这种形式

18:55.680 --> 18:56.720
处理成这个样子

18:57.680 --> 18:58.000
对不对

18:58.000 --> 18:59.360
你现在跟我反回的时候数据

18:59.360 --> 19:00.560
我直接拿给这个前端

19:00.560 --> 19:02.480
前端估计也是一脸懵逼

19:02.480 --> 19:03.680
我要要这么多

19:03.680 --> 19:04.960
其他的这些东西干嘛呢

19:06.080 --> 19:07.520
要把这些反回给我干嘛呢

19:08.320 --> 19:08.720
对不对

19:08.720 --> 19:10.320
我需要自己处理一下

19:10.320 --> 19:11.520
所以我这边的话

19:11.520 --> 19:13.120
我自己然后封装了一个这个

19:13.760 --> 19:14.080
方法

19:14.800 --> 19:16.800
来到我们这边youtube是下面

19:16.800 --> 19:17.440
tube

19:19.280 --> 19:19.840
啊

19:19.840 --> 19:21.120
这个处事就删掉吧

19:22.640 --> 19:23.920
这是格式化想应

19:23.920 --> 19:25.120
要想应的数据

19:25.120 --> 19:26.480
这个是解析

19:28.080 --> 19:29.200
解析token

19:29.200 --> 19:29.440
啊

19:29.440 --> 19:30.320
那接下来下一个

19:32.720 --> 19:33.600
下一个是什么呢

19:33.600 --> 19:35.440
下一个是处理

19:39.970 --> 19:40.450
处理

19:42.930 --> 19:44.850
处理这个数组类型

19:45.730 --> 19:47.890
数组类型的这个

19:48.610 --> 19:48.930
数据

19:49.490 --> 19:50.210
想应数据

19:53.760 --> 19:54.000
好

19:54.000 --> 19:54.320
这边呢

19:54.320 --> 19:55.120
我们就是model

19:56.000 --> 19:58.400
model.export.

19:59.040 --> 20:00.000
比如说这边叫做

20:00.640 --> 20:02.080
handle.data

20:02.080 --> 20:04.080
但你有如果你有更好的名字

20:04.080 --> 20:05.920
你可以自己取个更好的名字

20:06.480 --> 20:07.280
我这边就叫做

20:07.840 --> 20:08.640
parten

20:08.640 --> 20:10.080
handle.data.parten

20:10.080 --> 20:11.200
的ringer function

20:13.490 --> 20:13.810
好

20:13.810 --> 20:14.930
然后接下来这边呢

20:14.930 --> 20:15.170
是

20:15.810 --> 20:17.810
给我传一个这个data过来

20:17.810 --> 20:18.690
传一个data的话

20:18.690 --> 20:20.210
你这边是长什么样子的

20:20.210 --> 20:21.650
所以传过来就是这个样子

20:22.450 --> 20:22.690
对不对

20:22.690 --> 20:23.330
好

20:23.330 --> 20:23.890
那接下来

20:23.890 --> 20:24.850
我这边const

20:24.850 --> 20:25.810
的一个ar

20:26.530 --> 20:27.730
它是一个数组

20:29.010 --> 20:29.410
数组

20:29.410 --> 20:30.050
然后接下来

20:30.050 --> 20:31.410
我这边通过foroff

20:32.930 --> 20:33.250
这边

20:34.130 --> 20:34.850
const

20:34.850 --> 20:35.410
一个i

20:36.130 --> 20:36.610
off

20:36.610 --> 20:38.290
你传过来的这个data

20:39.090 --> 20:40.370
它拿到了的是什么

20:40.370 --> 20:41.570
是不拿到的是一个一个对象

20:41.570 --> 20:42.530
这边banner

20:42.530 --> 20:42.930
看到没有

20:42.930 --> 20:43.650
它是个对象

20:43.650 --> 20:44.770
对象下面有什么

20:44.770 --> 20:46.450
是不是有这个data values

20:47.170 --> 20:47.810
对不对

20:47.810 --> 20:49.330
所以我这边就直接ar

20:49.330 --> 20:50.690
点push

20:50.690 --> 20:51.490
你这个i

20:51.490 --> 20:52.450
i是个对象

20:52.450 --> 20:54.210
然后接下来这边点什么呢

20:54.210 --> 20:56.530
点data values

20:57.330 --> 20:57.810
对不对

20:57.810 --> 20:59.650
然后循环完了之后干嘛呢

20:59.650 --> 21:01.250
是不是返回这个ar

21:02.050 --> 21:02.690
你看

21:02.690 --> 21:04.130
就这么简单处理一下就可以了

21:05.010 --> 21:05.970
看到没有

21:05.970 --> 21:07.010
处理完了之后

21:07.010 --> 21:08.770
然后接下来来到我们的这个

21:08.850 --> 21:10.370
回到我们的这个service

21:10.370 --> 21:11.330
回到这边

21:11.330 --> 21:12.050
那这边的话

21:12.050 --> 21:13.410
我们就需要把这个

21:13.410 --> 21:14.610
整个这一块

21:14.610 --> 21:16.130
它会返回个data对吧

21:16.130 --> 21:16.770
这data的话

21:16.770 --> 21:18.290
我们就把它放到什么呢

21:18.290 --> 21:20.050
放到这个handle

21:20.050 --> 21:21.170
data part里面

21:22.930 --> 21:23.650
看到没有

21:23.650 --> 21:25.010
好那接下来我们再来打印

21:25.810 --> 21:26.290
保存

21:28.050 --> 21:29.010
OK重启了

21:29.010 --> 21:30.930
重启了之后再加这边再来

21:30.930 --> 21:31.330
send

21:32.370 --> 21:32.610
走

21:33.250 --> 21:33.890
就搞定了

21:35.090 --> 21:35.490
看到没有

21:36.130 --> 21:36.770
这就搞定了

21:37.410 --> 21:38.210
好搞定了之后

21:38.290 --> 21:38.930
然后接下来

21:38.930 --> 21:40.290
这边再调什么呢

21:40.290 --> 21:41.650
这边的话再return

21:42.690 --> 21:43.170
return

21:43.170 --> 21:45.250
我们是不是有一个这个format

21:46.690 --> 21:48.610
format这个resistance

21:50.130 --> 21:50.850
对吧

21:50.850 --> 21:52.130
大家这边的话是0

21:52.770 --> 21:54.450
然后空制浮串

21:55.250 --> 21:56.130
然后接下来的话

21:56.130 --> 21:57.330
这边的话就是data

21:58.370 --> 22:00.370
或者你这边的话可以直接来

22:03.680 --> 22:04.480
就是这边的话

22:04.480 --> 22:06.000
没必要要这个中间变量

22:07.200 --> 22:08.080
是吧

22:08.080 --> 22:08.960
直接来

22:08.960 --> 22:09.520
这样子

22:10.480 --> 22:11.200
但这样子的话

22:11.200 --> 22:13.520
这个代码的一读性就会降低

22:14.320 --> 22:15.120
代码的一读性

22:15.120 --> 22:16.320
你这边写很长一串

22:16.320 --> 22:16.880
对吧

22:16.880 --> 22:18.240
人家一下子还反应不过来

22:19.040 --> 22:20.400
当你这边的话要简洁的话

22:20.400 --> 22:21.440
就可以直接来

22:21.440 --> 22:23.440
因为那个中间的那个变量

22:23.440 --> 22:24.800
看上去好像没有太大必要

22:25.760 --> 22:26.160
是不是

22:26.960 --> 22:27.120
好

22:27.120 --> 22:28.640
然后就这一层它会返回

22:28.640 --> 22:28.960
返回

22:28.960 --> 22:30.480
然后就来到这边

22:30.480 --> 22:31.440
这边的话就是什么

22:32.000 --> 22:32.960
res send

22:33.840 --> 22:34.400
对不对

22:34.400 --> 22:35.920
res send

22:36.480 --> 22:37.040
返回给

22:37.680 --> 22:38.560
这个客户端

22:39.760 --> 22:41.040
然后加这边让我们保存一下

22:41.600 --> 22:42.160
全部保存

22:44.350 --> 22:44.990
保存了之后

22:44.990 --> 22:46.750
然后poster man来测试一下

22:47.310 --> 22:47.550
走

22:48.510 --> 22:49.070
不搞定了

22:50.110 --> 22:50.590
不搞定了

22:51.150 --> 22:52.670
HOME的这个接口是不是一模一样

22:53.310 --> 22:53.630
你看

22:54.270 --> 22:55.550
是HOME的这接口一模一样

22:56.430 --> 22:56.830
对不对

22:57.390 --> 22:57.950
就搞定了

22:58.590 --> 22:59.710
这个的话就是获取

23:00.270 --> 23:00.830
非常简单

23:02.110 --> 23:02.350
好

23:02.350 --> 23:03.550
然后接下来我们继续

23:03.550 --> 23:04.510
把这个设置

23:05.070 --> 23:05.710
一起写了

23:06.350 --> 23:07.070
好吧

23:07.070 --> 23:08.030
这东西也不难

23:08.590 --> 23:10.110
你甚至你可以把视频暂停了

23:10.110 --> 23:10.830
你自己来写

23:12.030 --> 23:12.430
都可以

23:13.070 --> 23:13.230
好

23:13.230 --> 23:14.430
那我这边我就直接写了

23:15.230 --> 23:17.230
这边首先res点

23:18.190 --> 23:18.590
send

23:19.950 --> 23:20.670
然后接下这边

23:20.670 --> 23:21.310
await

23:22.190 --> 23:23.070
await什么呢

23:23.070 --> 23:24.910
那我们这边首先得有一个方法

23:25.630 --> 23:26.830
这边的话model

23:28.190 --> 23:30.110
model.expose

23:30.830 --> 23:31.230
点

23:31.230 --> 23:31.470
好

23:31.470 --> 23:33.390
我们这边就写一个叫做update

23:36.110 --> 23:37.710
update banner

23:38.510 --> 23:39.550
然后service

23:40.510 --> 23:42.910
等于一个async

23:43.630 --> 23:44.110
方形

23:46.960 --> 23:47.200
好

23:47.200 --> 23:48.640
这边呢就接受一个什么呢

23:48.640 --> 23:50.880
我们来看一下这边是发的是一个什么过来

23:51.760 --> 23:52.560
这边设置

23:53.680 --> 23:54.640
发的是一个数组

23:55.440 --> 23:55.840
对不对

23:55.840 --> 23:57.760
数组里面然后每一个对象都有

23:57.760 --> 23:58.160
啊

23:58.160 --> 23:59.360
说这边是一个数组

23:59.360 --> 24:00.560
所以我们这边接受这个

24:01.200 --> 24:01.680
banner

24:02.160 --> 24:02.640
哎呀啊

24:03.200 --> 24:04.000
接受这个数组

24:04.480 --> 24:05.680
接受了这个数组之后

24:05.680 --> 24:06.480
然后接下来的话

24:06.960 --> 24:08.080
这边又掉什么呢

24:08.080 --> 24:09.200
又掉这边

24:09.520 --> 24:10.320
掉这边的方法

24:10.880 --> 24:12.320
所以我们在这边呢就是

24:12.320 --> 24:14.480
model.expose

24:15.200 --> 24:16.640
点这个update

24:17.520 --> 24:18.400
banner

24:18.400 --> 24:19.920
然后dao

24:19.920 --> 24:20.560
等于一个

24:21.200 --> 24:22.320
这个async

24:22.880 --> 24:23.280
方形

24:24.000 --> 24:24.320
啊

24:24.320 --> 24:25.600
那这边呢是不是

24:25.600 --> 24:26.640
也应该是一样的

24:27.680 --> 24:28.240
对不对

24:28.240 --> 24:29.440
也应该是那个数组

24:30.800 --> 24:31.040
好

24:31.040 --> 24:32.400
所以说这里的话就

24:32.400 --> 24:32.960
应该是

24:33.600 --> 24:34.160
banner

24:35.040 --> 24:35.440
vr

24:36.080 --> 24:36.640
ok

24:36.640 --> 24:38.000
接受到这个新的

24:38.000 --> 24:38.720
数组

24:38.720 --> 24:40.000
接受到新的数组之后

24:40.000 --> 24:40.800
然后接下来的话

24:40.800 --> 24:43.360
因为它一次是接收的是三条

24:44.560 --> 24:45.360
看到没有

24:45.360 --> 24:46.800
假设我比如说我只盖了

24:46.800 --> 24:48.480
第一张这个手页标语

24:48.480 --> 24:49.440
改了里面的数据

24:49.440 --> 24:50.640
那你每次传过来的

24:50.640 --> 24:51.520
都都是三条

24:52.000 --> 24:52.800
啊都是三条的话

24:52.800 --> 24:54.320
那我们这边可以这样子

24:54.320 --> 24:56.080
我们先把原来的数据

24:56.080 --> 24:57.040
先把它删除掉

24:57.680 --> 24:59.040
啊这边呢就await

24:59.680 --> 25:00.480
这个banner

25:01.200 --> 25:01.520
model

25:02.080 --> 25:03.600
它有一个叫做destroy

25:04.800 --> 25:06.160
有一个叫做destroy的方法

25:06.640 --> 25:06.880
好

25:06.880 --> 25:07.680
然后接下来这边

25:07.680 --> 25:08.880
你设这个trunket

25:10.000 --> 25:11.520
trunket的设置为true

25:11.520 --> 25:13.440
它就把表的这个记录

25:13.440 --> 25:14.800
全部删除掉

25:14.800 --> 25:16.640
这边给你写一下注释

25:16.640 --> 25:20.720
啊将表的记录

25:21.680 --> 25:23.440
全部删除掉

25:24.400 --> 25:25.040
看到没有

25:25.040 --> 25:25.360
好

25:25.360 --> 25:26.080
删除掉之后

25:26.080 --> 25:26.640
然后接下来

25:26.640 --> 25:27.520
干嘛呢

25:27.520 --> 25:28.800
再重新写入

25:28.800 --> 25:30.640
啊这边呢就还是await

25:32.400 --> 25:33.040
banner

25:33.920 --> 25:34.400
model

25:35.040 --> 25:35.840
点这个

25:35.840 --> 25:36.320
好

25:36.320 --> 25:37.680
这次的话不要写错了

25:37.920 --> 25:39.680
这边是这个buke

25:39.680 --> 25:40.160
create

25:40.720 --> 25:42.240
然后把这个新的这个数组

25:42.800 --> 25:43.680
把它传进去

25:44.400 --> 25:45.040
对不对

25:45.040 --> 25:46.560
批量写入数据

25:46.560 --> 25:48.560
就和我们初始化做的操作是一样的

25:49.440 --> 25:50.320
批量写入

25:50.960 --> 25:51.280
数据

25:51.840 --> 25:52.320
好

25:52.320 --> 25:52.960
写入了之后

25:52.960 --> 25:54.400
然后再返回所有的数据

25:55.040 --> 25:55.920
这边要return

25:56.560 --> 25:57.040
await

25:57.600 --> 25:58.320
然后这边

25:58.320 --> 25:58.880
banner

26:00.240 --> 26:01.120
model

26:01.120 --> 26:01.840
点什么呢

26:02.640 --> 26:03.280
banner or

26:05.570 --> 26:06.290
对不对

26:06.290 --> 26:07.810
重新查找所有的

26:07.810 --> 26:09.010
啊重新查到所有的

26:09.010 --> 26:10.210
然后接下来来到

26:10.770 --> 26:11.250
这边

26:12.770 --> 26:13.250
这边呢

26:13.250 --> 26:15.650
是不是就是调这个dao成的这个方法

26:16.370 --> 26:16.690
对不对

26:16.690 --> 26:17.090
这边呢

26:17.090 --> 26:17.890
就是await

26:18.530 --> 26:19.970
然后update

26:20.610 --> 26:21.810
banner dao

26:22.930 --> 26:23.010
啊

26:23.010 --> 26:24.130
调用这个方法

26:24.130 --> 26:24.850
调用这个方法

26:24.850 --> 26:25.970
然后把这个数组把它

26:26.370 --> 26:26.930
传过去

26:27.410 --> 26:28.050
传过去的话

26:28.050 --> 26:29.650
他就会给我返回一个新的

26:31.170 --> 26:32.850
新的这个所有的这个数据

26:33.410 --> 26:34.530
我这边存一下

26:34.530 --> 26:35.650
const data

26:35.650 --> 26:36.450
存一下

26:36.450 --> 26:37.010
存了之后

26:37.010 --> 26:38.210
然后加这边真正是要

26:38.370 --> 26:39.170
适用什么

26:39.170 --> 26:40.610
是使用这个handle data

26:41.090 --> 26:41.810
就处理一下

26:42.850 --> 26:43.570
对不对

26:43.570 --> 26:44.450
这边我们就直接

26:45.010 --> 26:45.330
这里

26:46.210 --> 26:47.250
复制过来

26:47.250 --> 26:47.890
复制过来

26:47.890 --> 26:48.690
然后接下来把这个

26:49.090 --> 26:49.810
改成

26:49.810 --> 26:50.610
或者你不改的话

26:50.610 --> 26:54.370
你就直接这样子就可以了

26:54.370 --> 26:54.930
直接这样子

26:54.930 --> 26:56.130
但是我觉得这样子

26:56.130 --> 26:57.490
一读性不是太好

26:58.290 --> 26:58.770
对不对

26:58.770 --> 26:59.810
你如果想要一读的话

26:59.810 --> 27:00.610
你这边就还是

27:01.170 --> 27:02.930
就是这里的话写data

27:02.930 --> 27:03.490
都可以啊

27:03.490 --> 27:04.130
看你自己

27:05.090 --> 27:05.650
看你自己

27:06.210 --> 27:06.610
看怎么样

27:07.250 --> 27:08.210
这边他给你返回

27:08.690 --> 27:09.170
他

27:09.170 --> 27:10.210
他这边我们是写了

27:10.210 --> 27:10.930
是fandalore嘛

27:10.930 --> 27:12.530
fandalore是不是找到所有数据

27:12.530 --> 27:13.330
但这个数据

27:13.330 --> 27:13.810
是不是稍微

27:14.370 --> 27:15.170
新鲜量有点大

27:15.650 --> 27:16.210
那我们这边

27:16.210 --> 27:16.610
是不是

27:17.410 --> 27:18.770
用这个handle data pattern

27:18.770 --> 27:19.970
我们看自己封装的

27:19.970 --> 27:20.770
把它处理一下

27:21.490 --> 27:22.290
处理一下之后

27:22.290 --> 27:23.170
再加来到这边

27:23.650 --> 27:24.210
这边的话

27:24.210 --> 27:25.490
就是应该是调用什么

27:26.130 --> 27:29.170
updata banner service

27:30.130 --> 27:30.770
这边这个

27:31.250 --> 27:32.610
那把什么传过去就可以了

27:33.330 --> 27:35.090
是把那个req

27:35.650 --> 27:36.290
点body

27:36.770 --> 27:37.890
把它传过去就可以了

27:39.090 --> 27:39.490
对不对

27:40.290 --> 27:43.090
这边那就是req.body

27:44.210 --> 27:45.330
ok就写完了

27:45.890 --> 27:46.850
然后这边保存一下

27:48.130 --> 27:48.530
保存

27:49.490 --> 27:50.210
没爆错

27:51.010 --> 27:51.490
爆错没有

27:51.490 --> 27:52.290
没爆错

27:52.290 --> 27:53.170
没爆错之后

27:53.170 --> 27:54.850
然后加我们这边让我们来试一下

27:55.490 --> 27:56.850
我们这边的话就

27:57.730 --> 27:58.210
它是什么

27:58.690 --> 27:59.410
post是吧

28:00.050 --> 28:00.610
post

28:00.610 --> 28:01.970
然后接下来它传的是

28:01.970 --> 28:02.930
传的是一个数组

28:03.730 --> 28:04.530
就这个数组

28:05.010 --> 28:05.730
ctrc

28:06.530 --> 28:06.770
好

28:06.770 --> 28:08.530
然后你来到body这边

28:08.530 --> 28:09.250
注意这个的话

28:09.250 --> 28:10.850
要写那个token

28:10.850 --> 28:12.050
token我们一直写着的

28:12.850 --> 28:13.170
好

28:13.170 --> 28:14.210
然后接下来这里

28:14.210 --> 28:15.170
把这个拿过来

28:15.730 --> 28:16.370
拿过来之后

28:16.370 --> 28:17.250
我们简单改一下

28:17.570 --> 28:18.610
这边就改成

28:18.610 --> 28:19.490
我看有没有id

28:20.930 --> 28:22.050
这边是没有id的

28:22.050 --> 28:22.850
只有这四个

28:22.850 --> 28:24.770
middle, big, title, description

28:26.050 --> 28:27.570
所以这边是没有这个的

28:27.970 --> 28:28.690
没有id的

28:30.370 --> 28:31.250
把id删掉

28:33.470 --> 28:33.710
ok

28:34.270 --> 28:34.590
好

28:34.590 --> 28:36.030
那这样我们这边我们来改一下

28:36.030 --> 28:37.310
这边就简单改一下

28:37.310 --> 28:38.270
这个改成222

28:38.830 --> 28:39.390
222

28:40.030 --> 28:40.430
对吧

28:40.910 --> 28:41.470
333

28:42.430 --> 28:42.990
333

28:43.870 --> 28:45.070
这个444

28:46.510 --> 28:47.710
然后这个444

28:48.350 --> 28:49.070
图片的路径

28:49.070 --> 28:49.870
我们就不改它了

28:50.430 --> 28:51.470
我们这边剩的

28:52.510 --> 28:53.550
我们这边来看一下

28:55.150 --> 28:55.710
搞定没有

28:56.350 --> 28:57.070
是不是就搞定了

28:57.870 --> 28:58.190
对不对

28:58.750 --> 28:59.630
就搞定了

28:59.630 --> 29:02.030
你这边就已经修改成功了

29:02.030 --> 29:02.830
你不放心的话

29:02.830 --> 29:04.430
你可以去这个数据库看一下

29:04.990 --> 29:06.510
这数据库你得刷新一下

29:07.630 --> 29:08.110
这个

29:08.670 --> 29:09.550
你得刷新一下

29:11.470 --> 29:12.430
刷新也没用是吧

29:12.990 --> 29:13.390
这个

29:13.950 --> 29:14.830
反正有点问题

29:14.830 --> 29:16.590
刷新也没有你得重新开一下

29:17.150 --> 29:17.710
是不是ok的

29:18.750 --> 29:19.070
对不对

29:19.070 --> 29:21.150
我刚开始用的时候我就吓了我一跳

29:21.550 --> 29:22.750
我以为更新不成功

29:23.150 --> 29:24.270
我在那看了半天

29:25.150 --> 29:26.990
结果的话是这边你要把他关一下

29:26.990 --> 29:28.190
关一下人家再开一下

29:28.670 --> 29:29.550
这边是不是就ok了

29:30.590 --> 29:30.990
对不对

29:31.870 --> 29:32.270
ok

29:32.270 --> 29:35.150
这就是关于我们这个首页标语模块

29:36.270 --> 29:36.830
就两个

29:37.550 --> 29:37.950
对不对

29:37.950 --> 29:38.910
一个是设置

29:39.230 --> 29:40.190
一个是获取

29:41.230 --> 29:43.550
你会发现后面的话就是惊人的相似

29:44.590 --> 29:46.110
后面的模块基本上是

29:46.350 --> 29:46.910
一样的

29:48.430 --> 29:50.270
好这节课的话就先到这里

29:50.510 --> 29:51.950
把这边写一写吧

29:51.950 --> 29:52.990
下节课再见

