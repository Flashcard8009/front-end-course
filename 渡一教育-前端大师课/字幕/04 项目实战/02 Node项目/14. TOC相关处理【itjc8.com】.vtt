WEBVTT

00:00.690 --> 00:06.190
上一节课的话我们已经把这个文章模块已经写完了

00:06.190 --> 00:10.690
包括这个增三改叉最基本的这个操作写完了

00:10.690 --> 00:14.690
好这节课的话我们就要进入到我们的这个TOC了

00:14.690 --> 00:18.690
TOC的话这边的话大家注意哈

00:18.690 --> 00:21.190
这里我们一点一点来说吧

00:21.190 --> 00:25.190
首先第一个我们要生成一个这个TOC

00:25.190 --> 00:28.190
大家还记不记得我之前在讲那个

00:28.690 --> 00:32.190
那个后台管理系统的时候我是怎么说的

00:32.190 --> 00:34.190
我们这边我们来看一下

00:34.190 --> 00:38.190
这个是我们之前写的这个后台管理系统你看这边

00:38.190 --> 00:42.190
这边首先获取到这个HTML

00:42.190 --> 00:45.190
对不对啊当时我们用的是那个编辑器

00:45.190 --> 00:48.190
一个叫做这个TOAST UI EDITOR

00:48.190 --> 00:52.190
这个markdown的编辑器通过这个他有个方法叫做getHTML

00:52.190 --> 00:54.190
我们获取到这个HTML

00:54.190 --> 00:58.190
然后有一个这个他有一个叫做getmarkdown

00:58.190 --> 01:01.190
通过这个然后我们获取到什么呢

01:01.190 --> 01:03.190
获取到他的这个markdown内容

01:03.190 --> 01:06.190
好然后接下来我们这边在传递的时候

01:06.190 --> 01:09.190
我们当时是这样子传的还记不记得啊

01:09.190 --> 01:12.190
这个是我们之前做这个后台管理系统的时候

01:12.190 --> 01:17.190
讲的内容了我这边的话TOC的话传递的是一个空速组

01:17.190 --> 01:21.190
然后我说这个的话根据什么呢就是服务器

01:21.190 --> 01:26.190
根据这个markdown的内容来生成我们的这个TOC目楼

01:26.190 --> 01:29.190
对不对所以我们这边除了传递这个HTML content

01:29.190 --> 01:32.190
我们这边其实还多传递了一下

01:32.190 --> 01:36.190
多传递了像什么呢就是这个markdown content

01:36.190 --> 01:40.190
我们这边可以把它打印出来看一下怎么做呢

01:40.190 --> 01:43.190
这边的话把我们的这个就是你来到这边

01:43.190 --> 01:47.190
vioeconfig点切式你把这个服务器你就改成什么呢

01:47.190 --> 01:49.190
改成301

01:49.190 --> 01:55.190
301这个是不是就是我们新的这个服务器的这个端口

01:55.190 --> 01:58.190
对不对好你这边的话顺带就可以测试一下

01:58.190 --> 02:01.190
测试一下就是之前写的行不行啊

02:01.190 --> 02:03.190
这边把它退出

02:03.190 --> 02:05.190
退出我们这边我们可以来看一下

02:05.190 --> 02:09.190
这边的话ename这边登录

02:09.190 --> 02:13.190
123456这边的话是比如切换验证嘛

02:13.190 --> 02:16.190
ok的对不对zh

02:16.190 --> 02:21.190
然后g y看到没有可以对应上去

02:21.190 --> 02:24.190
然后接下来这边我们的一个首页标语

02:24.190 --> 02:27.190
是完全是ok的对不对

02:27.190 --> 02:30.190
然后接下来的话文章列表文章列表的话

02:30.190 --> 02:32.190
我刚才就是添加了一篇文章

02:32.190 --> 02:34.190
所以你看到这边的话多了一篇文章

02:34.190 --> 02:36.190
这是刚才刚才我添加的啊

02:36.190 --> 02:39.190
然后接下来这边的话文章分类

02:39.190 --> 02:41.190
出来了对不对

02:41.190 --> 02:43.190
这边的话这个添加文章

02:43.190 --> 02:45.190
添加文章在这边啊

02:45.190 --> 02:47.190
那剩下的话这些摩扩是不我们还没写

02:47.190 --> 02:50.190
对不对这些摩扩还没写的话这边就没有东西

02:50.190 --> 02:52.190
比如我们这边点击这个项目列表

02:52.190 --> 02:54.190
你看这边是不服务器超时啊

02:54.190 --> 02:56.190
啊这边一直在转对吧

02:56.190 --> 02:58.190
那比如这个评论

02:58.190 --> 03:00.190
说没有东西对不对

03:00.190 --> 03:03.190
然后接下这个留言板啊留言板也没有东西

03:03.190 --> 03:05.190
然后这边这个关于我

03:05.190 --> 03:06.190
是不是也没有东西对不对

03:06.190 --> 03:09.190
因为这些摩扩我们还没有写啊还没有写

03:09.190 --> 03:12.190
那现在的话是不是就证明我们前面写了的摩扩

03:12.190 --> 03:15.190
是不是和我们现在所写的这个服务器

03:15.190 --> 03:18.190
是不是可以无缝的这个衔接上啊

03:18.190 --> 03:20.190
对不对可以无缝的衔接上啊

03:20.190 --> 03:23.190
就是目前来讲的话我们写的这个服务器是没有任何问题的

03:23.190 --> 03:27.190
对不对只要那个前端把那个服务器的端口号一改

03:27.190 --> 03:30.190
那这边的话是可以无缝的衔接上的啊

03:30.190 --> 03:33.190
好那接下来我们这边重点是这边啊

03:33.190 --> 03:35.190
我们这边添加这个文章

03:35.190 --> 03:37.190
添加文章然后叫我们找一篇文章啊

03:37.190 --> 03:39.190
比如这边就找这个谢老师

03:39.190 --> 03:42.190
谢老师之前写的啊比如说这边

03:42.190 --> 03:44.190
变量与长量啊

03:44.190 --> 03:47.190
我们这边的变量与长量啊比如这个333

03:47.190 --> 03:49.190
好然后接下来这边文章编辑

03:49.190 --> 03:52.190
文章编辑的话然后我们这边的就找一些内容

03:52.190 --> 03:57.630
啊找一些就这么多啊就这么多就差不多了

03:57.630 --> 04:00.630
啊放到这里对吧

04:00.630 --> 04:03.630
放到这里之后然后文件这个文章描述啊

04:03.630 --> 04:06.630
我们这边就随便写一点123123123123

04:06.630 --> 04:09.630
OK啊这个图片图片的话你想上传就上传

04:09.630 --> 04:12.630
不想上传就无所谓啊你这边想上传

04:12.630 --> 04:15.630
反正这个接口我们也做了的对不对啊

04:15.630 --> 04:17.630
不用我们上传一张这个托托罗

04:18.630 --> 04:20.630
说OK的对不对

04:20.630 --> 04:23.630
大家这边的选择这个文章的分类啊

04:23.630 --> 04:24.630
应该是JS

04:24.630 --> 04:27.630
OK好然后接下来我们这边把我们的

04:27.630 --> 04:29.630
这边服务器的代码把它改一下

04:29.630 --> 04:31.630
服务器的代码我们这边怎么改一下呢

04:31.630 --> 04:34.630
我们这边的话

04:34.630 --> 04:37.630
呃来到我们的这个BlogSoris

04:37.630 --> 04:40.630
来到这一层这一层的话

04:40.630 --> 04:43.630
我们这里我们就打印啊

04:43.630 --> 04:45.630
我们这边先不慌天家

04:45.630 --> 04:49.630
我们先来看一下我们这边传递过来的

04:49.630 --> 04:52.630
这边NewBlogInfer

04:53.630 --> 04:56.630
NewBlogInfer啊

04:56.630 --> 04:58.630
看一下我们传递过来的这个数据

04:58.630 --> 05:01.630
长什么样子然后就把后面的就

05:01.630 --> 05:03.630
都注射掉啊

05:03.630 --> 05:05.630
把这边注射掉

05:05.630 --> 05:08.630
注射掉之后然后接下来的话这边

05:08.630 --> 05:12.900
保存

05:12.900 --> 05:15.900
OK保存之后人家回到我们这边

05:15.900 --> 05:17.900
我们这边点击发布文章

05:17.900 --> 05:19.900
发布文章来叫他跳回来跳回来的话

05:19.900 --> 05:21.900
他文章肯定是没有新增的对吧

05:21.900 --> 05:24.900
因为我们刚才把这个逻辑把它注射掉了

05:24.900 --> 05:27.900
好然后接下来的话这边来看一下

05:27.900 --> 05:29.900
来看一下这边

05:29.900 --> 05:32.900
你看这边的话这个数据是不是过来了

05:32.900 --> 05:34.900
对不对数据过来我们来看一下

05:34.900 --> 05:37.900
有title有description

05:37.900 --> 05:39.900
有这个create date

05:39.900 --> 05:41.900
这个category id

05:41.900 --> 05:43.900
然后这个toc是不是一个空数组

05:43.900 --> 05:45.900
对不对啊因为我们这边的话

05:45.900 --> 05:48.900
之前在写这个后台管理系统的时候

05:48.900 --> 05:52.900
我们就说了啊这里传一个空数组之后的话

05:52.900 --> 05:54.900
我们服务器来进行处理

05:54.900 --> 05:56.900
服务器来进行处理

05:56.900 --> 05:59.900
好然后接下来这边有你的html康正程

05:59.900 --> 06:01.900
还有什么呢

06:01.900 --> 06:04.900
还有你的markdown content

06:04.900 --> 06:07.900
还有你的图片

06:07.900 --> 06:10.900
差不多就这些内容

06:10.900 --> 06:14.900
好然后接下来的话下一步

06:14.900 --> 06:17.900
下一步好把这个放下去

06:17.900 --> 06:19.900
所以我们现在的话我们就看到了

06:19.900 --> 06:24.900
看到了我们的这个newbloginfo

06:24.900 --> 06:27.900
它是什么呢它是长这个样子的

06:27.900 --> 06:29.900
就是它的toc是个空数组

06:29.900 --> 06:32.900
然后有一个什么呢有一个markdown

06:32.900 --> 06:35.900
的这个就是属性

06:35.900 --> 06:37.900
里面对应的就是这个markdown

06:37.900 --> 06:39.900
这边你再看一下

06:39.900 --> 06:41.900
对应的就是这个markdown

06:41.900 --> 06:45.900
markdown格式的这个就是文字信息

06:45.900 --> 06:47.900
好所以我们接下来的话我们这个toc

06:47.900 --> 06:49.900
我们要从这个markdown里面

06:49.900 --> 06:52.900
来进行一个提取

06:52.900 --> 06:56.900
OK要从这个markdown里面进行提取

06:56.900 --> 06:58.900
说说我们这边的话

06:58.900 --> 07:00.900
我们再写一个工具函数

07:00.900 --> 07:02.900
写一个工具函数

07:02.900 --> 07:04.900
这边的话tos

07:04.900 --> 07:07.920
来到这边

07:07.920 --> 07:08.920
这里的话就是什么呢

07:08.920 --> 07:14.420
这里的话就是处理toc

07:14.420 --> 07:15.420
处理toc

07:15.420 --> 07:17.420
这边的话就module

07:17.420 --> 07:20.420
module.expose

07:20.420 --> 07:24.420
点什么呢比如说叫做handle.toc

07:24.420 --> 07:26.420
等于一个方形

07:26.420 --> 07:28.420
好然后接下来的话

07:28.420 --> 07:30.420
就让你给我传一个这个info

07:30.420 --> 07:32.420
过来好然后这样我这边

07:32.420 --> 07:34.420
对你的这个传过来的数据

07:34.420 --> 07:35.420
进行一个处理

07:35.420 --> 07:36.420
处理完了之后

07:36.420 --> 07:38.420
我转成你想要的格式

07:38.420 --> 07:40.420
转成你想要的格式

07:40.420 --> 07:42.420
然后接下来我给你返回

07:42.420 --> 07:44.420
看到没有我们就多增加

07:44.420 --> 07:46.420
这么一个工具函数

07:46.420 --> 07:51.920
好然后回到我们的这个blogservice

07:51.920 --> 07:53.920
那这边的话

07:53.920 --> 07:55.920
我们就要进行一个处理

07:55.920 --> 07:57.920
这个注释这条注释就上了

07:58.920 --> 07:59.920
好那我们这边的话

07:59.920 --> 08:00.920
就应该使用什么呢

08:00.920 --> 08:03.920
使用这个handle.toc

08:03.920 --> 08:04.920
对吧

08:04.920 --> 08:06.920
他这边跟我引入没有

08:06.920 --> 08:07.920
handle.toc

08:07.920 --> 08:08.920
引入了

08:08.920 --> 08:09.920
ok

08:09.920 --> 08:10.920
然后我把什么呢

08:10.920 --> 08:13.920
我把我的这个newbloginfo

08:13.920 --> 08:15.920
我把它传递进去

08:15.920 --> 08:16.920
传递进去之后

08:16.920 --> 08:17.920
他会给我处理

08:17.920 --> 08:18.920
处理完了之后

08:18.920 --> 08:23.920
然后这样我这边的newbloginfo等于

08:23.920 --> 08:24.920
处理完了之后

08:24.920 --> 08:25.920
我把这个结果

08:25.920 --> 08:26.920
再重新返回给他

08:26.920 --> 08:27.920
返回给他的话

08:27.920 --> 08:29.920
那他现在的这个toc

08:29.920 --> 08:31.920
就是被处理过的

08:31.920 --> 08:32.920
经过

08:32.920 --> 08:39.240
经过这个handle.toc

08:39.240 --> 08:44.240
这个函数进行处理之后

08:44.240 --> 08:51.240
这个现在这个newbloginfo

08:51.240 --> 08:55.240
里面的这个toc目录

08:55.240 --> 09:01.240
就是我们想要的格式

09:01.240 --> 09:02.240
但具体是怎么格式

09:02.240 --> 09:03.240
我们一会在

09:03.240 --> 09:04.240
是不是在这边来写

09:04.240 --> 09:05.240
对不对

09:05.240 --> 09:06.240
在这边来写

09:06.240 --> 09:07.240
反正我这边

09:07.240 --> 09:08.240
调用这个函数字

09:08.240 --> 09:09.240
你就必须给我处理好

09:09.240 --> 09:11.240
好处理好了之后

09:11.240 --> 09:12.240
然后接下来我干嘛

09:12.240 --> 09:13.240
然后接下来

09:13.240 --> 09:14.240
我将你转是什么呢

09:14.240 --> 09:17.240
把你转成这个致富串

09:17.240 --> 09:18.240
对不对

09:18.240 --> 09:19.240
好那这边的话

09:19.240 --> 09:20.240
就应该是

09:20.240 --> 09:22.240
把这边注释打开

09:22.240 --> 09:23.240
这边的话

09:23.240 --> 09:24.240
就应该是

09:25.240 --> 09:26.240
这里的话

09:26.240 --> 09:28.240
就是stream ipy

09:28.240 --> 09:31.240
然后把这个newbloginfo

09:32.240 --> 09:34.240
点toc

09:34.240 --> 09:35.240
它的这个目录

09:35.240 --> 09:36.240
进行一个这个

09:36.240 --> 09:37.240
转成致富串

09:37.240 --> 09:39.240
然后再重新复制给他

09:39.240 --> 09:41.240
因为你看我这边

09:41.240 --> 09:42.240
给大家看一下

09:42.240 --> 09:43.240
这个就是数据过

09:43.240 --> 09:45.240
比如你看这个成品

09:45.240 --> 09:50.380
成品里面这个blog

09:50.380 --> 09:52.380
blog大家看一下

09:54.380 --> 09:55.380
比如这边

09:55.380 --> 09:56.380
这边呢

09:56.380 --> 09:57.380
你看这边

09:57.380 --> 09:59.380
纯属进去了是一个致富串

09:59.380 --> 10:00.380
看到没有

10:00.380 --> 10:02.380
纯属进去了是一个致富串

10:02.380 --> 10:04.380
致富串里面是个数组

10:04.380 --> 10:05.380
数组里面

10:05.380 --> 10:06.380
然后加这边

10:06.380 --> 10:07.380
就这样对象

10:07.380 --> 10:09.380
是不是长这样子的对象

10:09.380 --> 10:10.380
对不对

10:10.380 --> 10:11.380
OK

10:11.380 --> 10:12.380
好

10:12.380 --> 10:13.380
让我们这边的话

10:13.380 --> 10:14.380
接下来重点就是什么呢

10:14.380 --> 10:16.380
重点是不是就是它

10:16.380 --> 10:17.380
对不对

10:17.380 --> 10:18.380
我们处理完之后

10:18.380 --> 10:19.380
把打印出来看一下

10:19.380 --> 10:20.380
这边

10:20.380 --> 10:24.140
cancel.log

10:24.140 --> 10:26.140
把这个处理完之后的

10:26.140 --> 10:28.140
这个nilbloginfo

10:28.140 --> 10:30.140
我们把它打印出来看一下

10:30.140 --> 10:34.140
nilbloginfo

10:34.140 --> 10:35.140
对吧

10:35.140 --> 10:36.140
OK

10:36.140 --> 10:39.140
好那接下来的话就来到这边

10:39.140 --> 10:40.140
那这边的话

10:40.140 --> 10:41.140
我们就开始进行一个处理

10:41.140 --> 10:44.140
好这边传递过来的info

10:44.140 --> 10:45.140
传递过来的info

10:45.140 --> 10:46.140
长什么样子

10:46.140 --> 10:47.140
就这个样子

10:47.140 --> 10:48.140
对不对

10:48.140 --> 10:49.140
就是这个样子

10:49.140 --> 10:51.140
就是这个样子之后

10:51.140 --> 10:52.140
然后接下来的话

10:52.140 --> 10:54.140
我们这边要对这个

10:54.140 --> 10:55.140
toc进行一个处理

10:55.140 --> 10:58.140
我们这边需要装一个这个包

10:58.140 --> 11:00.140
装一个什么包呢

11:00.140 --> 11:02.140
这边我把它装了

11:02.140 --> 11:04.140
这边的话

11:04.140 --> 11:06.140
需要装一个

11:06.140 --> 11:09.580
有一个叫做

11:09.580 --> 11:10.580
markdown

11:10.580 --> 11:14.890
markdown-toc

11:14.890 --> 11:16.890
有一个这么一个包

11:16.890 --> 11:17.890
把它装一下

11:17.890 --> 11:18.890
好

11:18.890 --> 11:19.890
这个包是干什么的呢

11:19.890 --> 11:21.890
它就是专门负责处理

11:21.890 --> 11:24.400
咦

11:24.400 --> 11:26.400
咋回事

11:26.400 --> 11:27.400
写错了

11:27.400 --> 11:29.400
这边markdown

11:29.400 --> 11:30.400
down

11:30.400 --> 11:32.400
走

11:32.400 --> 11:34.400
好这个markdown-toc

11:34.400 --> 11:37.400
它就是专门负责处理这个

11:37.400 --> 11:39.400
这个markdown的

11:39.400 --> 11:40.400
这个部路的

11:40.400 --> 11:42.400
我们这边来看一下

11:42.400 --> 11:43.400
来到这边

11:43.400 --> 11:44.400
来到这边

11:44.400 --> 11:45.400
你看呀

11:45.400 --> 11:47.400
这边的话markdown-toc

11:47.400 --> 11:48.400
有这么一个

11:48.400 --> 11:49.400
首先第一步的话

11:49.400 --> 11:50.400
肯定是安装

11:50.400 --> 11:51.400
先装

11:51.400 --> 11:52.400
装了之后

11:52.400 --> 11:53.400
然后接下来的话

11:53.400 --> 11:55.400
它这边就有那么一些方法

11:55.400 --> 11:56.400
它就有一个什么呢

11:56.400 --> 11:58.400
这边先引弱

11:58.400 --> 12:00.400
这边我们就可以直接把这句话拿过来

12:00.400 --> 12:02.400
放到我们的这边

12:02.400 --> 12:06.860
这个toc里面

12:06.860 --> 12:08.860
放到我们的这个toc里面

12:08.860 --> 12:12.860
这边把它改成const

12:12.860 --> 12:13.860
好

12:13.860 --> 12:15.860
接下来你看它接收一个什么

12:15.860 --> 12:17.860
它这边就有一个toc

12:17.860 --> 12:18.860
toc是一个方法

12:18.860 --> 12:20.860
它这边的话就是

12:20.860 --> 12:22.860
接收一段什么

12:22.860 --> 12:24.860
接收一段markdown

12:24.860 --> 12:26.860
接收一段markdown

12:26.860 --> 12:28.860
接下来的话这边点content

12:28.860 --> 12:30.860
它就可以输出这样子的内容

12:30.860 --> 12:32.860
接下来它还可以干嘛呢

12:32.860 --> 12:34.860
它这边的话还有一个

12:34.860 --> 12:36.860
这个点接收

12:36.860 --> 12:38.860
点接收

12:38.860 --> 12:40.860
点接收的话输出的话就是

12:40.860 --> 12:42.860
这个样子的内容

12:42.860 --> 12:44.860
输出的话就是这样子的内容

12:44.860 --> 12:46.860
好了这样我们这边我们来试一试

12:46.860 --> 12:48.860
我们来串一串

12:48.860 --> 12:50.860
这边来到我们的这个toc

12:50.860 --> 12:52.860
把这些

12:52.860 --> 12:54.860
之前的注释是吧

12:54.860 --> 12:59.710
文件上传

12:59.710 --> 13:01.710
文件上传

13:01.710 --> 13:03.710
好然后接下来这边

13:03.710 --> 13:05.710
我们赶紧来try一try

13:05.710 --> 13:07.710
好那我们这边呢就是它有一个toc

13:07.710 --> 13:09.710
它是一个方法对不对

13:09.710 --> 13:11.710
好那接下来我们把什么呢

13:11.710 --> 13:13.710
把infer里面有一个什么

13:13.710 --> 13:15.710
我们刚才看到的infer里面

13:15.710 --> 13:17.710
是不是有一个叫做markdown content

13:17.710 --> 13:19.710
就是这个

13:19.710 --> 13:21.710
就这个对不对

13:21.710 --> 13:23.710
有个markdown content

13:23.710 --> 13:25.710
我们把它传进去

13:25.710 --> 13:27.710
然后接下来的话我们这边

13:27.710 --> 13:29.710
点

13:29.710 --> 13:31.710
点接收

13:31.710 --> 13:33.710
调用这个接收

13:33.710 --> 13:35.710
好然后接下来这边

13:35.710 --> 13:37.710
哇一个这边const

13:37.710 --> 13:39.710
这边let

13:39.710 --> 13:41.710
let一个result

13:41.710 --> 13:43.710
等于

13:43.710 --> 13:45.710
好然后接下来我们这边log一下

13:45.710 --> 13:47.710
log result

13:47.710 --> 13:49.710
好然后这边全部保存

13:49.710 --> 13:53.850
好看这边

13:53.850 --> 13:55.850
这边也应该没什么问题

13:55.850 --> 14:01.660
然后我们来启动

14:01.660 --> 14:03.660
启动了之后然后接下来

14:03.660 --> 14:05.660
我们这边再来

14:05.660 --> 14:07.660
来到这边

14:07.660 --> 14:09.660
我们再来添加文章

14:09.660 --> 14:11.660
名字都无所谓是吧

14:11.660 --> 14:13.660
关键是这这边

14:13.660 --> 14:15.660
关键是这边ctrl c

14:15.660 --> 14:17.660
把它拿过来

14:17.660 --> 14:19.660
我们这边要的是什么呢

14:19.660 --> 14:21.660
要的是这个

14:21.660 --> 14:23.660
要的是这个markdown格式

14:23.660 --> 14:25.660
是吧这些都无所谓

14:25.660 --> 14:27.660
然后这边分类

14:27.660 --> 14:29.660
走

14:31.660 --> 14:35.040
服务器超时

14:35.040 --> 14:37.040
can't read the property of undefined

14:37.040 --> 14:39.040
这边其实已经出来了

14:41.040 --> 14:43.040
可不可以啊

14:43.040 --> 14:45.040
已经出来了

14:45.040 --> 14:47.040
出来了他怎么给我

14:47.040 --> 14:49.040
出来了他怎么

14:49.040 --> 14:51.040
哦这里

14:51.040 --> 14:53.040
这里我们是不是还没有做处理

14:53.040 --> 14:55.040
对不对我们这边先把它

14:55.040 --> 14:57.040
先把它注释掉

14:57.040 --> 14:59.040
保存

14:59.040 --> 15:01.040
你看这边的话其实已经出来了

15:01.040 --> 15:03.040
已经出来了

15:03.040 --> 15:05.040
content是声明辨量

15:05.040 --> 15:07.040
大家这边有个slug

15:07.040 --> 15:09.040
声明辨量

15:09.040 --> 15:11.040
rvr2

15:11.040 --> 15:13.040
然后接下来这边有个i

15:13.040 --> 15:15.040
我们这边来一个稍微复杂一点

15:15.040 --> 15:17.040
因为我们这个现在的话很简单

15:17.040 --> 15:19.040
我们这边就一个什么

15:19.040 --> 15:21.040
是不是声明辨量这个是一个

15:21.040 --> 15:23.040
二级标题

15:23.040 --> 15:25.040
然后

15:25.040 --> 15:27.040
就一个二级标题

15:27.040 --> 15:29.040
我们现在的话这个比较简单

15:29.040 --> 15:31.040
那我们这边的话我们想干嘛呢

15:31.040 --> 15:33.040
我们这边的话

15:33.040 --> 15:35.040
找一篇这个

15:35.040 --> 15:37.040
稍微复杂点的

15:37.040 --> 15:39.040
我看我这边有没有稍微复杂点的

15:41.040 --> 15:43.040
这个嘛这个又有二级标题

15:43.040 --> 15:45.040
又有三级标题

15:45.040 --> 15:47.040
这个要稍微好一点

15:47.040 --> 15:49.040
看一下这边三级标题

15:49.040 --> 15:51.040
三级标题过了

15:51.040 --> 15:53.040
三级

15:53.040 --> 15:55.040
二级

15:55.040 --> 15:57.040
这个稍微长一点

15:57.040 --> 15:59.040
我们要这个

16:01.040 --> 16:04.540
来到我们这边

16:04.540 --> 16:06.540
然后接下来这边

16:06.540 --> 16:08.540
发布文章

16:08.540 --> 16:10.540
然后接下来这边看一下

16:10.540 --> 16:12.540
来到这边看一下

16:12.540 --> 16:14.540
你看这边的话他是不是就给你转出来了

16:14.540 --> 16:16.540
对不对

16:16.540 --> 16:18.540
他就给你转成什么样子

16:18.540 --> 16:20.540
是不是转成了这个样子

16:20.540 --> 16:22.540
一个数组数组里面是一个一个的对象

16:22.540 --> 16:24.540
他把什么呢

16:24.540 --> 16:26.540
把你的这个markdown里面的标题

16:26.540 --> 16:28.540
是不是就全部给你提取出来了

16:28.540 --> 16:30.540
对不对

16:30.540 --> 16:32.540
我们这边我们来记录一下

16:32.540 --> 16:36.490
我们一步一步走慢一点

16:36.490 --> 16:38.490
好这边

16:38.490 --> 16:40.490
这边转出来转出来之后

16:40.490 --> 16:42.490
我们把这个结果

16:42.490 --> 16:44.490
我们把它放在这里

16:44.490 --> 16:53.180
然后这里

16:53.180 --> 16:55.180
我们写个注射

16:55.180 --> 16:57.180
经过

16:57.180 --> 16:59.180
经过上面这个

16:59.180 --> 17:01.180
就将什么呢

17:01.180 --> 17:03.180
就将

17:03.180 --> 17:05.180
整个

17:05.180 --> 17:07.180
markdown

17:07.180 --> 17:09.180
里面的

17:09.180 --> 17:11.180
标题

17:11.180 --> 17:13.180
全部

17:13.180 --> 17:15.180
全部提取

17:15.180 --> 17:17.180
出来了

17:17.180 --> 17:19.180
对不对提取出来之后

17:19.180 --> 17:21.180
然后形成一个什么

17:21.180 --> 17:23.180
形成一个数组

17:23.180 --> 17:25.180
数组里面

17:25.180 --> 17:27.180
数组里面

17:27.180 --> 17:29.180
是

17:29.180 --> 17:31.180
一个个对象

17:31.180 --> 17:33.180
每个对象

17:33.180 --> 17:35.180
记录了什么呢

17:35.180 --> 17:37.180
记录了标题的这个名称

17:37.180 --> 17:39.180
以及

17:39.180 --> 17:41.180
什么等级

17:41.180 --> 17:44.620
等级

17:44.620 --> 17:46.620
那接下来读一下

17:46.620 --> 17:48.620
OK

17:48.620 --> 17:50.620
他就给你处理成

17:50.620 --> 17:52.620
这个样子了

17:52.620 --> 17:54.620
数值的表示方法

17:54.620 --> 17:56.620
这个也是二级

17:56.620 --> 17:58.620
他这个i是什么意思

17:58.620 --> 18:00.620
这只要看一下他的文档

18:00.620 --> 18:02.620
看看文档里面有没有写

18:02.620 --> 18:04.620
有没有解释

18:04.620 --> 18:06.620
他在这里的话没有i是吧

18:06.620 --> 18:08.620
这边就只有这个content

18:08.620 --> 18:10.620
slug和这个

18:10.620 --> 18:12.620
等级

18:12.620 --> 18:14.620
没有i

18:14.620 --> 18:16.620
不知道是不是他版本更新了

18:16.620 --> 18:18.620
更新了之后增加了两个参数

18:18.620 --> 18:20.620
但是文档又没有更新

18:20.620 --> 18:22.620
他如果文档没更新的话

18:22.620 --> 18:24.620
那我们这边就不知道他那个新的参数是什么意思

18:24.620 --> 18:26.620
对不对

18:26.620 --> 18:28.620
说他这边有些时候就是

18:28.620 --> 18:30.620
他那个包更新了但是文档又没更新

18:30.620 --> 18:32.620
这边我们都没找到

18:32.620 --> 18:34.620
是不是

18:34.620 --> 18:36.620
没有找到他那个i和那个sin

18:36.620 --> 18:38.620
他有一个i

18:38.620 --> 18:40.620
有一个sin是不是

18:40.620 --> 18:42.620
这边好像没看到

18:42.620 --> 18:44.620
没看到

18:44.620 --> 18:46.620
这边就完了

18:46.620 --> 18:48.620
完了就没有了

18:48.620 --> 18:50.620
这个是他的文档

18:50.620 --> 18:52.620
文档他可能比较老了

18:52.620 --> 18:54.620
OK

18:54.620 --> 18:56.620
那接下来的话我们这边

18:56.620 --> 18:58.620
我们接下来要做一件事情

18:58.620 --> 19:00.620
这个的话是他现在给我转出来的

19:00.620 --> 19:02.620
是这个样子的

19:02.620 --> 19:04.620
但是我们现在需要干嘛呢

19:04.620 --> 19:06.620
我们需要把它转成这个样子

19:06.620 --> 19:08.620
就是我们这边

19:08.620 --> 19:10.620
比如说我们这边添加文章

19:10.620 --> 19:12.620
发布文章

19:12.620 --> 19:14.620
发布文章的话我们这个toc

19:14.620 --> 19:16.620
我们是不是想转成这个样子

19:16.620 --> 19:18.620
对不对

19:18.620 --> 19:20.620
我们这边把它拿过来

19:20.620 --> 19:22.620
然后这里

19:22.620 --> 19:26.060
把注释写上

19:26.060 --> 19:28.060
但是

19:28.060 --> 19:30.060
但是这不是

19:30.060 --> 19:32.060
我们想要的

19:32.060 --> 19:34.060
格式

19:34.060 --> 19:36.060
我们

19:36.060 --> 19:38.060
想要转换为什么呢

19:38.060 --> 19:41.820
转换为这个样子

19:41.820 --> 19:43.820
对不对

19:43.820 --> 19:45.820
比如你这边的话这个是

19:45.820 --> 19:47.820
你的这个name

19:47.820 --> 19:51.820
然后接下来的话这边是你的这个

19:51.820 --> 19:53.820
二级标题

19:53.820 --> 19:55.820
下面有个求准

19:55.820 --> 19:57.820
求准下面又对应是一个数组

19:57.820 --> 19:59.820
对不对

19:59.820 --> 20:01.820
那接下来的话那这边的话

20:01.820 --> 20:03.820
我们是不是要针对这个数据

20:03.820 --> 20:05.820
进行一个处理啊

20:05.820 --> 20:07.820
对不对

20:07.820 --> 20:09.820
所以接下来我们就进行处理

20:09.820 --> 20:11.820
接下来

20:11.820 --> 20:13.820
对上面的

20:13.820 --> 20:15.820
数据

20:15.820 --> 20:17.820
进行一个

20:17.820 --> 20:19.820
转换

20:19.820 --> 20:21.820
好来呗

20:21.820 --> 20:23.820
好我这边的话

20:23.820 --> 20:25.820
我书写一个

20:25.820 --> 20:27.820
方形

20:27.820 --> 20:29.820
然后接下来的一个叫做

20:29.820 --> 20:31.820
一个叫做

20:31.820 --> 20:33.820
他就接受一个什么呢

20:33.820 --> 20:35.820
他就接受一个数组

20:35.820 --> 20:37.820
我们这个数组是不是一个拍屏的

20:37.820 --> 20:39.820
一维数组

20:39.820 --> 20:41.820
对不对

20:41.820 --> 20:43.820
那我们这边就叫做

20:43.820 --> 20:45.820
那我们回头的话

20:45.820 --> 20:47.820
我们就调用这个

20:47.820 --> 20:49.820
写的这个函数

20:49.820 --> 20:51.820
然后把什么传进去呢

20:51.820 --> 20:53.820
把我们这边的这个result

20:53.820 --> 20:55.820
把这个result

20:55.820 --> 20:57.820
result是不是就是这个数组

20:57.820 --> 20:59.820
对不对

20:59.820 --> 21:01.820
把这个result

21:01.820 --> 21:03.820
传进去

21:03.820 --> 21:05.820
传进去之后然后接下来的话

21:05.820 --> 21:07.820
他就会给我返回一个什么呢

21:07.820 --> 21:09.820
会给我返回一个这样格式的数组

21:09.820 --> 21:11.820
看到没有

21:11.820 --> 21:13.820
也就是说就是多维数组

21:13.820 --> 21:15.820
就是我们这边传的是什么呢

21:15.820 --> 21:17.820
那接下来给我们返回一个什么呢

21:17.820 --> 21:19.820
返回一个多维数组

21:19.820 --> 21:21.820
好

21:21.820 --> 21:23.820
然后这里的话返回了之后

21:23.820 --> 21:25.820
然后这样我就把它复在哪里呢

21:25.820 --> 21:27.820
我们这边呢是不是接受一个这个infer

21:27.820 --> 21:29.820
infer是什么

21:29.820 --> 21:31.820
infer是不是你整个新增这个博文的这个

21:31.820 --> 21:33.820
内容对不对

21:33.820 --> 21:35.820
好那接下来我们这边呢就直接infer

21:35.820 --> 21:37.820
点toc

21:37.820 --> 21:39.820
toc本身是个空数组嘛

21:39.820 --> 21:41.820
对不对然后把这个返回的字

21:41.820 --> 21:43.820
给这个toc

21:43.820 --> 21:45.820
好那接下来关键就是什么呢

21:45.820 --> 21:47.820
关键就是这个关于这个函数的

21:47.820 --> 21:49.820
书写啊这里的话还会

21:49.820 --> 21:51.820
这里肯定会用到什么

21:51.820 --> 21:53.820
肯定会用到地规

21:53.820 --> 21:55.820
对不对肯定会用到地规

21:55.820 --> 21:56.820
我们这边处理完了之后

21:56.820 --> 21:57.820
我们这边打印一下

21:57.820 --> 21:59.820
console.nog

21:59.820 --> 22:03.960
这个infer

22:03.960 --> 22:05.960
infer

22:05.960 --> 22:07.960
好那我们这边呢我们来写一下这个

22:07.960 --> 22:09.960
好首先的话

22:09.960 --> 22:11.960
我们在这边创建两个数组

22:11.960 --> 22:13.960
一个的话是stack

22:13.960 --> 22:15.960
它是一个空数组

22:15.960 --> 22:17.960
这个的话模拟我们的这个站

22:17.960 --> 22:19.960
好然后接下来这边再来一个

22:19.960 --> 22:21.960
console result

22:21.960 --> 22:23.960
是一个空数组

22:23.960 --> 22:25.960
好这个的话就是

22:25.960 --> 22:27.960
最终我们要返回的这个结果

22:27.960 --> 22:29.960
但这里的话肯定会用到地规

22:29.960 --> 22:31.960
绝对会用到地规

22:31.960 --> 22:33.960
好然后接下来的话我们首先的话

22:33.960 --> 22:37.280
我们挖一个

22:37.280 --> 22:39.280
挖或者直接用console嘛

22:39.280 --> 22:41.280
console一个这个min

22:41.280 --> 22:43.280
等于一个这个6

22:43.280 --> 22:45.280
我们这个标题最小的级别

22:45.280 --> 22:47.280
我们标题最小是不是

22:47.280 --> 22:49.280
6对不对

22:49.280 --> 22:51.280
就标题

22:51.280 --> 22:53.280
最小的级别

22:53.280 --> 22:55.280
最小就是6

22:55.280 --> 22:57.280
好然后接下来

22:57.280 --> 22:59.280
我们这边写一个这个4寻环

22:59.280 --> 23:01.280
4寻环

23:01.280 --> 23:03.280
console一个i

23:03.280 --> 23:05.280
off

23:05.280 --> 23:07.280
flats

23:07.280 --> 23:09.280
它去干嘛呢它去便利

23:09.280 --> 23:11.280
便利这个数组

23:11.280 --> 23:13.280
便利数组的话那接下来的话

23:13.280 --> 23:15.280
这边i取出来的话

23:15.280 --> 23:17.280
是不是就是一个一个的这个对象

23:17.280 --> 23:19.280
对不对

23:19.280 --> 23:21.280
取到一个一个对象然后接下来的话

23:21.280 --> 23:23.280
这边就是if

23:23.280 --> 23:25.280
if什么呢

23:25.280 --> 23:27.280
if你这个i点这个

23:27.280 --> 23:29.280
还有个lvl

23:29.280 --> 23:31.280
lvl是不是就是你当前这个标题的这个等级

23:31.280 --> 23:33.280
对不对

23:33.280 --> 23:35.280
如果它小于一个这个min

23:35.280 --> 23:38.720
那我们这边干嘛呢

23:38.720 --> 23:40.720
我们这个min就等于一个这个i

23:40.720 --> 23:42.720
点lvl

23:42.720 --> 23:44.720
看懂这个4寻环在干嘛呢

23:44.720 --> 23:46.720
这个4寻环的话

23:46.720 --> 23:48.720
是不是就是在找你这个数组里面

23:48.720 --> 23:50.720
这个

23:50.720 --> 23:52.720
最小的这个标题等级

23:52.720 --> 23:54.720
对不对那它比如说

23:54.720 --> 23:56.720
你用我们这儿为例

23:56.720 --> 23:58.720
它第一次找的

23:58.720 --> 24:00.720
最终找的最小的就是2

24:00.720 --> 24:02.720
因为它会去便利嘛

24:02.720 --> 24:04.720
它会去便利

24:04.720 --> 24:06.720
便利了之后大家找到最小的

24:06.720 --> 24:08.720
只要比这个小就把它付给这个min

24:08.720 --> 24:10.720
最终的话它一定会找到最小的

24:10.720 --> 24:12.720
比如我们这边最小的就是2

24:12.720 --> 24:14.720
对不对

24:14.720 --> 24:16.720
所以说这边的这个4寻环

24:16.720 --> 24:18.720
我们来记录一下

24:18.720 --> 24:20.720
该4寻环

24:20.720 --> 24:22.720
用于干嘛呢

24:22.720 --> 24:24.720
用于寻找

24:24.720 --> 24:26.720
当前数组

24:26.720 --> 24:28.720
中最小的

24:28.720 --> 24:30.720
最小的

24:30.720 --> 24:32.720
标题等级

24:32.720 --> 24:34.720
对不对

24:34.720 --> 24:36.720
先把它找到

24:36.720 --> 24:40.540
接下来再来个4寻环

24:40.540 --> 24:42.540
4

24:42.540 --> 24:44.540
好这边真的是便利

24:44.540 --> 24:46.540
const

24:46.540 --> 24:48.540
const这个

24:48.540 --> 24:50.540
item of

24:50.540 --> 24:52.540
flat

24:52.540 --> 24:54.540
去便利

24:54.540 --> 24:56.540
便利之后接下来我们首先的话

24:56.540 --> 24:58.540
这边

24:58.540 --> 25:00.540
我们要书写一个这个

25:00.540 --> 25:02.540
函数

25:02.540 --> 25:04.540
这边的话就是function

25:04.540 --> 25:06.540
然后我们书写一个叫做crate

25:06.540 --> 25:08.540
crate

25:08.540 --> 25:12.680
item

25:12.680 --> 25:14.680
书写这么一个方法

25:14.680 --> 25:16.680
这样你给我传什么呢

25:16.680 --> 25:18.680
你给我传一个

25:18.680 --> 25:20.680
item

25:20.680 --> 25:22.680
过来的话

25:22.680 --> 25:24.680
接下来我这边干嘛呢

25:24.680 --> 25:26.680
我给你返回一个对象

25:26.680 --> 25:28.680
这个对象里面就有什么呢

25:28.680 --> 25:30.680
就有name

25:30.680 --> 25:32.680
相当于就是这个

25:32.680 --> 25:34.680
相当于就是这个

25:34.680 --> 25:36.680
给你返回一个这样的对象

25:36.680 --> 25:38.680
你这边是item

25:38.680 --> 25:40.680
item

25:40.680 --> 25:42.680
也就是说一会儿这儿

25:42.680 --> 25:44.680
传入的对象

25:44.680 --> 25:46.680
这儿传入的对象是什么呢

25:46.680 --> 25:48.680
是这个对象

25:48.680 --> 25:52.380
是这个对象

25:52.380 --> 25:54.380
所以说这里的话就是

25:54.380 --> 25:56.380
name就是什么呢

25:56.380 --> 25:58.380
就是你传过来的这个item

25:58.380 --> 26:00.380
item是这个对象对吧

26:00.380 --> 26:02.380
然后对应的content

26:02.380 --> 26:04.380
点content

26:04.380 --> 26:06.380
那这样我们这边还想要什么

26:06.380 --> 26:08.380
是不是还想要这个

26:08.380 --> 26:10.380
orcer

26:10.380 --> 26:12.380
orcer对应的是什么呢

26:12.380 --> 26:14.380
orcer对应的就是你这边的话

26:14.380 --> 26:16.380
你有一个snug

26:16.380 --> 26:18.380
所以这边就是这个

26:18.380 --> 26:20.380
item.snug

26:20.380 --> 26:22.380
好

26:22.380 --> 26:24.380
然后接下来这边还有什么呢

26:24.380 --> 26:28.780
还有这个level

26:28.780 --> 26:30.780
对应的就是这个item

26:30.780 --> 26:32.780
点这个airware

26:32.780 --> 26:34.780
然后最后一个有一个什么呢

26:34.780 --> 26:36.780
有一个这个chill

26:36.780 --> 26:38.780
对应的是一个空数组

26:38.780 --> 26:40.780
说实话我们通过这个方法

26:40.780 --> 26:42.780
通过这个方法你给我传一个

26:42.780 --> 26:44.780
比如说传一个这样子的对象

26:44.780 --> 26:46.780
传一个这样子的对象

26:46.780 --> 26:48.780
然后接下来我就把它生成什么呢

26:48.780 --> 26:50.780
我就把它生成类似于这样子格式的对象

26:50.780 --> 26:52.780
只不过这个chill run一开始是什么

26:52.780 --> 26:54.780
chill run一开始是空的

26:54.780 --> 26:56.780
对不对

26:56.780 --> 26:58.780
就类似于我生成的就是

26:58.780 --> 27:00.780
比如这个chill run一开始是

27:00.780 --> 27:02.780
空的

27:02.780 --> 27:04.780
然后这边它就有lem

27:04.780 --> 27:06.780
大家还有个level是吧

27:06.780 --> 27:08.780
level大家有一个chill run

27:08.780 --> 27:10.780
chill run一开始是空的

27:10.780 --> 27:12.780
就生成了类似这样子的对象

27:12.780 --> 27:14.780
好那接下来我们这边

27:14.780 --> 27:16.780
是不是就可以调这个方法

27:16.780 --> 27:18.780
调这个create TOC

27:18.780 --> 27:20.780
这个item

27:20.780 --> 27:22.780
把什么把这个item

27:22.780 --> 27:24.780
每一项

27:24.780 --> 27:26.780
传进去

27:26.780 --> 27:28.780
传进去之后然后接下来

27:28.780 --> 27:30.780
接收一下它创建的

27:30.780 --> 27:32.780
const

27:32.780 --> 27:34.780
一个这个toc

27:34.780 --> 27:36.780
item

27:36.780 --> 27:38.780
ok接受一下

27:38.780 --> 27:40.780
好接受一下之后然后接下来

27:40.780 --> 27:42.780
这边做一个判断

27:42.780 --> 27:44.780
if

27:44.780 --> 27:46.780
if你这个toc

27:46.780 --> 27:48.780
item它里面是不是有一个什么

27:48.780 --> 27:50.780
有个level对不对

27:50.780 --> 27:52.780
如果它全等于一个命

27:52.780 --> 27:54.780
全等于一个命

27:54.780 --> 27:56.780
说明什么意思

27:56.780 --> 27:58.780
说明你当前的话比如说你这边

27:58.780 --> 28:00.780
是二级对不对

28:00.780 --> 28:02.780
那你这个二级的话是不是就是

28:02.780 --> 28:04.780
处于这个数组

28:04.780 --> 28:06.780
是不是就是最外面

28:06.780 --> 28:08.780
它下面还可不可能就是

28:08.780 --> 28:10.780
就是它可不可能

28:10.780 --> 28:12.780
作为谁的这个chill run

28:12.780 --> 28:14.780
你想想这个道理

28:14.780 --> 28:16.780
它已经是二级了

28:16.780 --> 28:18.780
我这个上面没有一级

28:18.780 --> 28:20.780
对不对没有一级如果有一级的话

28:20.780 --> 28:22.780
那我们的这个二级

28:22.780 --> 28:24.780
二级的话它可能会作为

28:24.780 --> 28:26.780
这个一级标题的

28:26.780 --> 28:28.780
是不是这个就是chill run

28:28.780 --> 28:30.780
但是你这个二级已经是什么

28:30.780 --> 28:32.780
是不是已经是这个就是最低的了

28:32.780 --> 28:34.780
对不对所以我绝对

28:34.780 --> 28:36.780
不可能作为谁的chill run

28:36.780 --> 28:38.780
但是你比如说这个

28:38.780 --> 28:40.780
比如这个三级

28:40.780 --> 28:42.780
这个三级的话

28:42.780 --> 28:44.780
就会作为这个二级的这个chill run

28:44.780 --> 28:46.780
你想想是不是这个道理

28:46.780 --> 28:48.780
对不对比如说这边

28:48.780 --> 28:50.780
这边的话也是这个也是三级对吧

28:50.780 --> 28:52.780
这几个三级

28:52.780 --> 28:54.780
这几个三级就会作为什么

28:54.780 --> 28:56.780
作为这个二级的这个chill run

28:56.780 --> 28:58.780
但是我现在的话我已经是二级了

28:58.780 --> 29:00.780
你看我这边我判断

29:00.780 --> 29:02.780
我这边判断它已经等于

29:02.780 --> 29:04.780
我的这个命是什么

29:04.780 --> 29:06.780
命是我们刚才找到的这个最小标题

29:06.780 --> 29:08.780
等级对不对

29:08.780 --> 29:10.780
如果进入此义父

29:10.780 --> 29:12.780
如果进入此义父

29:12.780 --> 29:14.780
如果进入此义父

29:14.780 --> 29:16.780
说明

29:16.780 --> 29:18.780
当前的toc

29:18.780 --> 29:20.780
对象

29:20.780 --> 29:22.780
toc对象就是我们这边

29:22.780 --> 29:24.780
刚才生成的啊生成的

29:24.780 --> 29:26.780
是这个最低的等级

29:26.780 --> 29:28.780
最低的等级

29:28.780 --> 29:30.780
不会

29:30.780 --> 29:32.780
作为什么呀

29:32.780 --> 29:34.780
不会作为

29:34.780 --> 29:36.780
是不是这个

29:36.780 --> 29:38.780
其他对象的这个

29:38.780 --> 29:40.780
chill run属性

29:40.780 --> 29:42.780
这个chill run对不对

29:42.780 --> 29:44.780
不会作为其他对象的chill run

29:44.780 --> 29:46.780
所以我们这边就干嘛呢

29:46.780 --> 29:48.780
我们这边的话就是这个result

29:48.780 --> 29:50.780
result是什么

29:50.780 --> 29:52.780
result是我们刚才写的这个

29:52.780 --> 29:54.780
对不对

29:54.780 --> 29:56.780
然后接下来往里面干嘛呢

29:56.780 --> 29:58.780
往里面push

29:58.780 --> 30:00.780
把这个toc

30:00.780 --> 30:02.780
item

30:02.780 --> 30:04.780
把它push进去

30:04.780 --> 30:06.780
那如果你这边的话

30:06.780 --> 30:08.780
你没有进入上面的义父

30:08.780 --> 30:10.780
ok

30:10.780 --> 30:12.780
如果没有进入

30:12.780 --> 30:14.780
上面的义父

30:14.780 --> 30:16.780
说明什么呀

30:16.780 --> 30:18.780
说明你当前的这个toc这个对象

30:18.780 --> 30:20.780
是不是有可能是作为

30:20.780 --> 30:22.780
其他的

30:22.780 --> 30:24.780
比如说我这边的话

30:24.780 --> 30:26.780
刚才第1个是不是直接就推到result里面了

30:26.780 --> 30:28.780
对不对那接下来

30:28.780 --> 30:29.780
第2个

30:29.780 --> 30:31.780
第2个之后它生成了类似于

30:31.780 --> 30:33.780
这样子的对象

30:33.780 --> 30:35.780
但是这个的话你这个等级是3

30:35.780 --> 30:37.780
你不是这个最低的等级

30:37.780 --> 30:39.780
对不对

30:39.780 --> 30:41.780
让我这边怎么办呢让我这个的话

30:41.780 --> 30:43.780
可能会作为你这个对象的

30:43.780 --> 30:45.780
是不是chill run属性里面的一员

30:45.780 --> 30:46.780
对不对

30:46.780 --> 30:48.780
所以我这边的话就需要做特殊的处理

30:48.780 --> 30:50.780
说明

30:50.780 --> 30:52.780
该toc对象

30:52.780 --> 30:54.780
不是

30:54.780 --> 30:56.780
最低等级

30:56.780 --> 30:58.780
最低

30:58.780 --> 31:00.780
等级

31:00.780 --> 31:02.780
可能

31:02.780 --> 31:04.780
是什么呢是

31:04.780 --> 31:06.780
其他toc

31:06.780 --> 31:08.780
对象

31:08.780 --> 31:10.780
然后chill run

31:10.780 --> 31:12.780
这个属主

31:12.780 --> 31:14.780
里面的一员

31:14.780 --> 31:16.780
对不对

31:17.780 --> 31:19.780
所以我这边需要做处理

31:19.780 --> 31:21.780
那做处理的话我这边就再

31:21.780 --> 31:22.780
封装一个函数

31:22.780 --> 31:24.780
这边我这边就写一个这个叫做

31:24.780 --> 31:26.780
handle item

31:26.780 --> 31:28.780
然后我把这个什么呢

31:28.780 --> 31:30.780
把这个传进去

31:30.780 --> 31:32.780
把我们的这个toc

31:32.780 --> 31:36.090
toc

31:36.090 --> 31:37.090
item

31:37.090 --> 31:38.090
把它传进去

31:38.090 --> 31:39.090
ok

31:39.090 --> 31:41.090
好然后接下来我们这边

31:41.090 --> 31:43.090
我们来写一下这个handle

31:43.090 --> 31:45.090
就写到这里

31:45.090 --> 31:48.980
这边我给一下注释

31:48.980 --> 31:50.980
这个的话是

31:50.980 --> 31:52.980
创建这个toc对象

31:52.980 --> 31:54.980
创建

31:54.980 --> 31:56.980
toc

31:56.980 --> 31:58.980
对象

31:58.980 --> 32:00.980
好然后接下来

32:00.980 --> 32:02.980
这边再来

32:02.980 --> 32:04.980
function

32:04.980 --> 32:06.980
这边的话有一个这个handle item

32:06.980 --> 32:13.240
接受一个什么呢

32:13.240 --> 32:15.240
接受你这边传入的这个

32:15.240 --> 32:17.240
toc对象

32:17.240 --> 32:19.240
这边就是这个item

32:19.240 --> 32:21.240
好然后接下来我们在这边

32:21.240 --> 32:23.240
这边的话我们要做处理

32:23.240 --> 32:25.240
好

32:25.240 --> 32:27.240
这里的话首先我们刚才刚才的话

32:27.240 --> 32:29.240
这边是不是创建了一个叫做stank的

32:29.240 --> 32:31.240
这个塑装对不对这里的话

32:31.240 --> 32:33.240
就模拟一个什么呢模拟一个

32:33.240 --> 32:35.240
站的结构好那我们这边我们来

32:35.240 --> 32:37.240
首先的话我这边

32:37.240 --> 32:39.240
cance的一个top

32:39.240 --> 32:41.240
等于一个什么呢等于一个

32:41.240 --> 32:43.240
这个stank

32:43.240 --> 32:45.240
然后接下来的话这边stank

32:45.240 --> 32:47.240
点论是

32:47.240 --> 32:49.240
剪一个e

32:49.240 --> 32:51.240
好先看一下这行待吗能不能看得懂

32:51.240 --> 32:53.240
stank

32:53.240 --> 32:55.240
点论是

32:55.240 --> 32:57.240
stank点论是一开始stank是什么

32:57.240 --> 32:59.240
是不是空数组

32:59.240 --> 33:01.240
空数组空数组长度是0

33:01.240 --> 33:03.240
0-1这就不变成-1了吗

33:03.240 --> 33:05.240
对不对

33:05.240 --> 33:07.240
这变成-1了那你这个

33:07.240 --> 33:09.240
访问数组的-1那你这个得到多少呢

33:09.240 --> 33:11.240
那这个的话呢就得到的是一个

33:11.240 --> 33:13.240
undefined

33:13.240 --> 33:15.240
这里的话是jsc

33:15.240 --> 33:17.240
jsc你这边的话你不信的话

33:17.240 --> 33:19.240
你可以在这瞅一眼吗

33:19.240 --> 33:21.240
对不对你这边随便开

33:21.240 --> 33:23.240
一个

33:23.240 --> 33:25.240
在这里你自己试一试吧

33:25.240 --> 33:27.240
比如我们这边的话我们这个

33:27.240 --> 33:29.240
cancel

33:29.240 --> 33:31.240
cancel然后这样我们这边比如说

33:31.240 --> 33:33.240
let一个ar

33:33.240 --> 33:35.240
他一开始试一个什么呢是个空数组

33:35.240 --> 33:37.240
对不对好大家

33:37.240 --> 33:39.240
我们这边cancel.log

33:39.240 --> 33:41.240
这个ar

33:41.240 --> 33:43.240
然后-1

33:43.240 --> 33:45.240
对吧走得到一个什么

33:45.240 --> 33:47.240
得到一个undefined

33:47.240 --> 33:49.240
是不是

33:49.240 --> 33:51.240
得到一个undefined

33:51.240 --> 33:53.240
但你如果不是空数组呢

33:53.240 --> 33:55.240
Stack如果不是空数组

33:55.240 --> 33:57.240
不是那个空数组

33:57.240 --> 33:59.240
Stack里面比如说有100个元素

33:59.240 --> 34:01.240
有100个元素他是不是得到的

34:01.240 --> 34:03.240
就是最后一个元素

34:03.240 --> 34:05.240
你想想是不是

34:05.240 --> 34:07.240
对不对他得到的就是一个最后的元素

34:07.240 --> 34:09.240
然后我们又说了这个Stack

34:09.240 --> 34:11.240
他模拟这个站的结构

34:11.240 --> 34:13.240
这边给你写一下

34:13.240 --> 34:15.240
模拟

34:15.240 --> 34:17.240
站

34:17.240 --> 34:19.240
站的结构

34:19.240 --> 34:21.240
那这边他是不是得到这个

34:21.240 --> 34:23.240
就是这个数组最后一个元素

34:23.240 --> 34:25.240
最后一个元素是不是就是这个

34:25.240 --> 34:27.240
站顶啊所以我这边的负质叫做这个top

34:27.240 --> 34:29.240
我们这边写一下

34:29.240 --> 34:31.240
这边的话获取

34:31.240 --> 34:33.240
获取这个

34:33.240 --> 34:35.240
Stack

34:35.240 --> 34:37.240
站顶的元素

34:37.240 --> 34:39.240
站顶的

34:39.240 --> 34:41.240
元素也就是

34:41.240 --> 34:43.240
就是什么呢也就是

34:43.240 --> 34:45.240
该数组的

34:45.240 --> 34:47.240
最后一个

34:47.240 --> 34:49.240
元素对不对

34:49.240 --> 34:51.240
然后如果

34:51.240 --> 34:53.240
该数组

34:53.240 --> 34:55.240
为空

34:55.240 --> 34:57.240
得到的

34:57.240 --> 34:59.240
一个什么啊

34:59.240 --> 35:01.240
undefy

35:01.240 --> 35:03.240
是不是得到一个undefy

35:03.240 --> 35:05.240
对不对好然后接下来我们这边的话

35:05.240 --> 35:07.240
我就根据你的这个top来进行判断了

35:07.240 --> 35:09.240
如果这个

35:09.240 --> 35:11.240
top

35:11.240 --> 35:13.240
如果是这种说明什么

35:13.240 --> 35:15.240
说明是不是就是得到的是undefy

35:15.240 --> 35:17.240
对不对第一次是空数组就是undefy

35:17.240 --> 35:19.240
那就是undefy的话然后我往这个数组里面

35:19.240 --> 35:21.240
我就干嘛呢

35:21.240 --> 35:23.240
我这边的话就push

35:23.240 --> 35:25.240
看到没有啊把这个item

35:25.240 --> 35:27.240
我就把它

35:27.240 --> 35:29.240
push进去

35:29.240 --> 35:31.240
lcif

35:31.240 --> 35:33.240
lcif

35:33.240 --> 35:35.240
如果什么呢如果你

35:35.240 --> 35:37.240
传入了这个item

35:37.240 --> 35:39.240
它有一个什么呢它有一个等级

35:39.240 --> 35:41.240
对不对如果大于

35:41.240 --> 35:43.240
这个top

35:43.240 --> 35:45.240
点这个level

35:45.240 --> 35:47.240
什么意思啊

35:47.240 --> 35:49.240
你能够进这个lcif

35:49.240 --> 35:51.240
说明什么说明你这个是不是空

35:51.240 --> 35:53.240
这不是空

35:53.240 --> 35:55.240
对不对不是空举个例子

35:55.240 --> 35:57.240
举个例子比如说我这边的话

35:57.240 --> 35:59.240
这个3

35:59.240 --> 36:01.240
3的话第一次是不是推进去

36:01.240 --> 36:03.240
对不对第二次

36:03.240 --> 36:05.240
第二次的话它是不是就不为空了

36:05.240 --> 36:07.240
然后接下来我这边就进行一个判断

36:07.240 --> 36:09.240
对不对进行一个判断

36:09.240 --> 36:11.240
让我这边呢比如说我这个等级不是3

36:11.240 --> 36:13.240
而是什么呢而是4

36:13.240 --> 36:15.240
而是4的话让我这个等级

36:15.240 --> 36:17.240
是不是大于你这个3的等级

36:17.240 --> 36:19.240
让我这个是不是应该是作为你

36:19.240 --> 36:21.240
这个的一个什么呀

36:21.240 --> 36:23.240
是不是作为你的一个指援

36:23.240 --> 36:25.240
说对不对说这里的话

36:25.240 --> 36:27.240
进入此分支

36:27.240 --> 36:29.240
进入此分支

36:29.240 --> 36:31.240
进入此分支

36:31.240 --> 36:33.240
说明什么

36:33.240 --> 36:35.240
说明什么

36:35.240 --> 36:37.240
说明当前的toc

36:37.240 --> 36:39.240
对象的等级

36:39.240 --> 36:41.240
比什么呀

36:41.240 --> 36:43.240
比这个

36:43.240 --> 36:45.240
站顶

36:45.240 --> 36:47.240
站顶

36:47.240 --> 36:49.240
站顶就是什么

36:49.240 --> 36:51.240
站顶是不是就是之前的上一个

36:51.240 --> 36:53.240
之前的上一个

36:53.240 --> 36:55.240
是不是要大

36:55.240 --> 36:57.240
要大的话说明什么

36:57.240 --> 36:59.240
说明

36:59.240 --> 37:01.240
当前

37:01.240 --> 37:03.240
toc

37:03.240 --> 37:05.240
对象应该

37:05.240 --> 37:07.240
成为什么呀

37:07.240 --> 37:09.240
是不是应该成为你这个上一个

37:09.240 --> 37:11.240
toc对象的指援数

37:11.240 --> 37:13.240
对不对上一个

37:13.240 --> 37:15.240
toc对象的

37:15.240 --> 37:17.240
指援数

37:17.240 --> 37:19.240
看到没有

37:19.240 --> 37:21.240
就应该是这样子的

37:21.240 --> 37:23.240
所以我这边的话就是toc

37:23.240 --> 37:25.240
我不是toc这边的话就top

37:25.240 --> 37:29.000
这边的话就top

37:29.000 --> 37:31.000
top的话是不是

37:31.000 --> 37:33.000
就是你这边最后一个

37:33.000 --> 37:35.000
对不对top

37:35.000 --> 37:37.000
接下来toc的children

37:37.000 --> 37:39.000
点push

37:39.000 --> 37:41.000
把它push进去

37:41.000 --> 37:43.000
看到没有

37:43.000 --> 37:45.000
把它push进去

37:45.000 --> 37:47.000
并且把它也推入到这个站里面

37:47.000 --> 37:49.000
stank.push

37:49.000 --> 37:52.500
item

37:52.500 --> 37:54.500
OK

37:54.500 --> 37:56.500
看懂没有这个分支

37:56.500 --> 37:58.500
看懂没有

37:58.500 --> 38:00.500
你这边的话如果比如说

38:00.500 --> 38:02.500
三

38:02.500 --> 38:04.500
三过了之后接下来它是不是

38:04.500 --> 38:06.500
进这个衣服

38:06.500 --> 38:08.500
对不对被推入进去了

38:08.500 --> 38:10.500
好大家下一个下一个是不是就是4

38:10.500 --> 38:12.500
对不对4的话这边的话就是什么呢

38:12.500 --> 38:14.500
4的话这边的话你看

38:14.500 --> 38:16.500
4的话是不是应该是成为

38:16.500 --> 38:18.500
它上一个的这个指援数

38:18.500 --> 38:20.500
对不对所以推入到什么呢

38:20.500 --> 38:22.500
推入到这个羞辱里面

38:22.500 --> 38:26.130
否则的话

38:26.130 --> 38:28.130
否则进AOS

38:28.130 --> 38:30.130
我们来看一下AOS应该是什么样的情况

38:30.130 --> 38:32.130
啊

38:32.130 --> 38:34.130
那比如说我们这边

38:34.130 --> 38:36.130
这边的话我们这边是3

38:36.130 --> 38:38.130
4人家这边是不是又是3

38:38.130 --> 38:40.130
对不对你看这边3

38:40.130 --> 38:42.130
3的话我们这边有个这个站

38:42.130 --> 38:44.130
有个站的话然后里面的话

38:44.130 --> 38:46.130
好把这个

38:46.130 --> 38:48.130
把这个打开

38:48.130 --> 38:50.130
好比方我们这边的话有一个这个站

38:50.130 --> 38:52.130
站的话它只有一个这个出入口对不对

38:52.130 --> 38:54.130
然后首先的话这边3

38:54.130 --> 38:56.130
3的话然后接下来首先把这个对象

38:56.130 --> 38:58.130
是推入到这个站

38:58.130 --> 39:00.130
这里

39:00.130 --> 39:02.130
对不对第一次这边

39:02.130 --> 39:04.130
好推入进去之后然后

39:04.130 --> 39:06.130
接下来的话这边是一个4

39:06.130 --> 39:08.130
4的话我们这边

39:08.130 --> 39:10.130
作为了最后一个

39:10.130 --> 39:12.130
元素的这个指援数

39:12.130 --> 39:14.130
也就是说这个3

39:14.130 --> 39:16.130
3的话这个羞辱它现在是有值了

39:16.130 --> 39:18.130
然后我们仍然把它推入到哪里去

39:18.130 --> 39:20.130
推入到我们这个站的数组里面

39:20.130 --> 39:22.130
那这个的话是不是等级4

39:22.130 --> 39:24.130
对不对这个等级14

39:24.130 --> 39:26.130
好然后接下来完事之后

39:26.130 --> 39:28.130
下又是什么这边

39:28.130 --> 39:30.130
这边那是不是又是等级13了

39:30.130 --> 39:32.130
又是等级13这边的话

39:32.130 --> 39:34.130
不会进1否不会进l是1否

39:34.130 --> 39:36.130
是不是会进l是对不对

39:36.130 --> 39:38.130
进l是的话我们这边就该干嘛呢

39:38.130 --> 39:40.130
我们这边就应该是让

39:40.130 --> 39:42.130
stack点

39:42.130 --> 39:44.130
看了没有

39:44.130 --> 39:46.130
我们这边的话让这个站顶

39:46.130 --> 39:48.130
让这一块让这个东西干嘛呢

39:48.130 --> 39:50.130
初战

39:50.130 --> 39:52.130
初战之后然后接下来的话干嘛呢

39:52.130 --> 39:54.130
第一规的来调用

39:54.130 --> 39:56.130
cando item

39:56.130 --> 39:58.130
把这个item

39:58.130 --> 40:00.130
传进去

40:00.130 --> 40:02.130
看了没有让它下一次进来之后

40:02.130 --> 40:04.130
让这个3也会初战

40:04.130 --> 40:06.130
初战之后然后接下来的话

40:06.130 --> 40:08.130
新的这个3

40:08.130 --> 40:10.130
就新的这个东西

40:10.130 --> 40:12.130
重新干嘛呢

40:12.130 --> 40:14.130
重新放到站的

40:14.130 --> 40:16.130
最下面

40:16.130 --> 40:18.130
看了没有重新放到最下面

40:18.130 --> 40:20.130
这边的话就是要用到一个这个

40:20.130 --> 40:22.130
地规

40:22.130 --> 40:24.130
你得用到地规

40:24.130 --> 40:26.130
这个的话你得自己去

40:26.130 --> 40:28.130
想一想我这边的话不可能再来给你讲

40:28.130 --> 40:30.130
地规了对不对

40:30.130 --> 40:32.130
地规的话是之前讲过的

40:32.130 --> 40:34.130
这里的话其实主要就是这里的逻辑

40:34.130 --> 40:36.130
主要就是这一块

40:36.130 --> 40:38.130
把这个关了

40:38.130 --> 40:40.130
化成这个规很则

40:40.130 --> 40:42.130
主要就是这一块逻辑

40:42.130 --> 40:44.130
看了没有就这个

40:44.130 --> 40:46.130
handle item

40:46.130 --> 40:48.130
就这里的话用到了

40:48.130 --> 40:50.130
地规

40:50.130 --> 40:52.130
然后接下来完事之后

40:52.130 --> 40:54.130
然后我们干嘛呢

40:54.130 --> 40:56.130
我们这边的话最终的话

40:56.130 --> 41:00.020
然后接下这里return

41:00.020 --> 41:02.020
return什么呢return我们这个

41:02.020 --> 41:04.020
result

41:04.020 --> 41:06.020
result是存放我们这个

41:06.020 --> 41:08.020
最终结果的

41:08.020 --> 41:10.020
我给你写一下存放

41:10.020 --> 41:12.020
存放最终

41:12.020 --> 41:14.020
这个

41:14.020 --> 41:16.020
转换

41:16.020 --> 41:18.020
结果的

41:18.020 --> 41:20.020
输出

41:20.020 --> 41:22.020
对不对ok我们这个

41:22.020 --> 41:24.020
triple我们就写好了

41:24.020 --> 41:26.020
好写好了之后再叫我们来试一试吧

41:26.020 --> 41:28.020
好吧我们来试一试

41:28.020 --> 41:30.020
保存

41:30.020 --> 41:32.020
保存之后再叫我们这边来

41:32.020 --> 41:34.020
过来low e

41:34.020 --> 41:36.020
好然后接下来的话

41:36.020 --> 41:38.020
来到我们这边

41:38.020 --> 41:40.020
这边这边让我们重新添加

41:40.020 --> 41:42.020
一个文章

41:42.020 --> 41:44.020
这边123123

41:44.020 --> 41:46.020
然后接下这边的话

41:46.020 --> 41:48.020
复制

41:48.020 --> 41:50.020
嗯

41:50.020 --> 41:52.020
粘贴

41:52.020 --> 41:54.020
好这边

41:54.020 --> 41:56.020
然后这里

41:56.020 --> 41:58.020
随便去

41:58.020 --> 42:00.020
好这边的话爆错了

42:00.020 --> 42:02.020
我们来看一下爆什么错

42:02.020 --> 42:04.020
a scientific context variable

42:04.020 --> 42:06.020
我们这边的话用了

42:06.020 --> 42:08.020
全是用的是const

42:08.020 --> 42:10.020
那肯定是哪个地方爆错了

42:10.020 --> 42:12.020
好看一看啊

42:12.020 --> 42:14.020
这边的话

42:14.020 --> 42:18.480
嗯

42:18.480 --> 42:20.480
这边的话就是

42:20.480 --> 42:22.480
assignment to const variable

42:22.480 --> 42:24.480
因为我们全部用的是const

42:24.480 --> 42:26.480
我们看一下是哪个位置

42:26.480 --> 42:28.480
我们找一找

42:28.480 --> 42:30.480
这边const

42:30.480 --> 42:33.920
一个top

42:33.920 --> 42:35.920
top

42:35.920 --> 42:37.920
这里应该没问题

42:37.920 --> 42:39.920
我看一看

42:39.920 --> 42:43.560
嗯

42:43.560 --> 42:45.560
好是这里啊

42:45.560 --> 42:47.560
这里我们是不是再给命重新负责

42:47.560 --> 42:49.560
命的话我们这边是不是用了const

42:49.560 --> 42:51.560
改一改改成net

42:51.560 --> 42:53.560
好再来

42:53.560 --> 42:55.560
好重启了

42:55.560 --> 42:57.560
重启了然后加这边再来

42:57.560 --> 42:59.560
走

42:59.560 --> 43:01.560
好大家看这边

43:01.560 --> 43:03.560
看这边

43:03.560 --> 43:05.560
这边的话我们想看一下什么呢

43:05.560 --> 43:07.560
想看一下

43:07.560 --> 43:09.560
就是markdown

43:09.560 --> 43:11.560
然后这个的话

43:11.560 --> 43:13.560
应该是那个html content

43:13.560 --> 43:15.560
好然后接下来这边

43:15.560 --> 43:17.560
toc

43:17.560 --> 43:19.560
转出来没有

43:19.560 --> 43:21.560
转出来没有是不是就转化出来了

43:21.560 --> 43:23.560
对不对

43:23.560 --> 43:25.560
就转化出来了

43:25.560 --> 43:27.560
但这样子看的话你可能就是不太清晰

43:27.560 --> 43:29.560
因为我们直接打印的是inboard

43:29.560 --> 43:31.560
我们这边这个样子

43:31.560 --> 43:33.560
我们这边的话就打印什么呢

43:33.560 --> 43:35.560
打印这个toc

43:35.560 --> 43:37.560
好吧我们就打印这个toc

43:37.560 --> 43:39.560
只有打印toc

43:39.560 --> 43:41.560
好然后我们这边再来

43:41.560 --> 43:43.560
再来看一遍

43:43.560 --> 43:45.560
添加文章

43:45.560 --> 43:47.560
然后把这个物质过来

43:47.560 --> 43:49.560
然后加这边123123

43:49.560 --> 43:51.560
然后加这边123123

43:51.560 --> 43:53.560
好这边随便选一个

43:53.560 --> 43:55.560
走

43:55.560 --> 43:57.560
过来看一下

43:57.560 --> 43:59.560
出来没有

43:59.560 --> 44:01.560
是不是就出来了

44:01.560 --> 44:03.560
对不对你看一下这个和我们的等级

44:03.560 --> 44:05.560
是不是一样的对不对

44:05.560 --> 44:07.560
我们这边我们来看一下

44:07.560 --> 44:09.560
来看一下

44:09.560 --> 44:11.560
看一下我们这边

44:11.560 --> 44:13.560
看这边

44:13.560 --> 44:15.560
这边的话就是

44:15.560 --> 44:17.560
首先一个二级

44:17.560 --> 44:19.560
二级下面有几个是不是三级

44:19.560 --> 44:21.560
对一个三级两个三级

44:21.560 --> 44:23.560
然后三个三级

44:23.560 --> 44:25.560
对不对那这样过了又是一个

44:25.560 --> 44:27.560
二级

44:27.560 --> 44:29.560
二级过了是不是就没有了对不对

44:29.560 --> 44:32.930
那我们这边是不是完全是OK的

44:32.930 --> 44:34.930
看一下是不是OK的

44:34.930 --> 44:36.930
对不对

44:36.930 --> 44:38.930
OK之后然后接下来的话

44:38.930 --> 44:40.930
我们这边的话再来进行一个

44:40.930 --> 44:42.930
处理

44:42.930 --> 44:44.930
那后面的处理就很简单了

44:44.930 --> 44:46.930
我们现在的话这个TOC

44:46.930 --> 44:48.930
是不是就已经生成了对不对

44:48.930 --> 44:50.930
经过

44:50.930 --> 44:52.930
转换之后

44:52.930 --> 44:54.930
经过

44:54.930 --> 44:56.930
转换之后

44:56.930 --> 44:58.930
TOC就

44:58.930 --> 45:00.930
就

45:00.930 --> 45:02.930
就转为了

45:02.930 --> 45:04.930
我们

45:04.930 --> 45:06.930
想要

45:06.930 --> 45:08.930
格

45:08.930 --> 45:10.930
对不对好转换完了之后

45:10.930 --> 45:12.930
然后我们这边把那个把markdown

45:12.930 --> 45:14.930
那个删掉我们这边就直接

45:14.930 --> 45:16.930
delete

45:16.930 --> 45:18.930
delete infer

45:18.930 --> 45:20.930
是不是有一个这个叫做markdown content

45:20.930 --> 45:22.930
这个时候就不要了对不对

45:22.930 --> 45:24.930
好那接下来的话再给

45:24.930 --> 45:26.930
什么呢再给个个级别的

45:26.930 --> 45:28.930
这个

45:28.930 --> 45:30.930
标题加上这个id

45:30.930 --> 45:34.690
接下来

45:34.690 --> 45:36.690
接下来

45:36.690 --> 45:38.690
再

45:38.690 --> 45:40.690
各个级别

45:40.690 --> 45:42.690
各个级别的

45:42.690 --> 45:44.690
标题

45:44.690 --> 45:46.690
添加上

45:46.690 --> 45:48.690
id好这边呢我就写一个这个

45:48.690 --> 45:50.690
4循环

45:50.690 --> 45:52.690
4循环然后接下来这边

45:52.690 --> 45:54.690
哇一个

45:54.690 --> 45:56.690
或者这边呢就

45:56.690 --> 45:58.690
const

45:58.690 --> 46:00.690
const一个i

46:00.690 --> 46:02.690
off result

46:02.690 --> 46:07.670
你注意这里的这个

46:07.670 --> 46:09.670
result是我们最开始的时候

46:09.670 --> 46:11.670
把这个

46:11.670 --> 46:13.670
把这个transfer

46:13.670 --> 46:15.670
把它注释掉

46:15.670 --> 46:17.670
这个最早的时候我们拿到这个result

46:17.670 --> 46:19.670
啊

46:19.670 --> 46:21.670
拿到result就什么样子啊是这个样子的

46:21.670 --> 46:23.670
对不对

46:23.670 --> 46:25.670
好然后接下来的话我们这边去便利

46:25.670 --> 46:27.670
便利之后然后接下来的话

46:27.670 --> 46:29.670
这里switch

46:29.670 --> 46:31.670
然后这个i

46:31.670 --> 46:33.670
点什么呢air

46:33.670 --> 46:35.670
vair

46:35.670 --> 46:37.670
好然后这里的话就干嘛呢

46:37.670 --> 46:39.670
这边的case

46:39.670 --> 46:41.670
1

46:41.670 --> 46:42.670
如果是1

46:42.670 --> 46:44.670
1的话说明什么说明是不是1级

46:44.670 --> 46:46.670
对不对但我们这边没有1级啊

46:46.670 --> 46:48.670
好然后接下来这边

46:48.670 --> 46:50.670
如果有1级那我这边挖一个

46:50.670 --> 46:52.670
new

46:52.670 --> 46:54.670
st2等于一个什么呢

46:54.670 --> 46:58.430
等于一个这个h1

46:58.430 --> 47:00.430
然后id

47:00.430 --> 47:02.430
等于一个

47:02.430 --> 47:04.430
这边呢就是downer

47:04.430 --> 47:06.430
然后i

47:06.430 --> 47:08.430
点snug

47:08.430 --> 47:10.430
加上一个id因为我们有一个那个

47:10.430 --> 47:13.430
啊有个锚点所以这边呢必须要把这个id加上

47:13.430 --> 47:15.430
然后接下来这边infer

47:15.430 --> 47:17.430
点这个html

47:18.430 --> 47:20.430
html content

47:20.430 --> 47:22.430
啊这边呢你叫做一个t换

47:22.430 --> 47:24.430
content

47:24.430 --> 47:26.430
啊content就等于什么呢

47:26.430 --> 47:28.430
等于一个infer

47:28.430 --> 47:30.430
点html content

47:30.430 --> 47:33.430
然后做一个t换replace

47:33.430 --> 47:36.870
它是个支付串嘛支付串是会有replace

47:36.870 --> 47:39.870
这个方法对不对找到什么呢找到

47:39.870 --> 47:41.870
找到这个h1的地方

47:41.870 --> 47:43.870
可不可以啊然后把它t换成什么呢

47:43.870 --> 47:45.870
t换成这个new

47:45.870 --> 47:47.870
st2

47:47.870 --> 47:49.870
可不可以啊

47:49.870 --> 47:51.870
好然后接下来的话这边

47:51.870 --> 47:53.870
break

47:53.870 --> 47:55.870
ok

47:55.870 --> 47:57.870
好后面的话你就一葫芦画票啊一共

47:57.870 --> 47:59.870
我们有六级是吧

47:59.870 --> 48:01.870
这边的二三

48:01.870 --> 48:03.870
四五六

48:03.870 --> 48:05.870
好然后接下来这边

48:05.870 --> 48:07.870
我们来这里

48:07.870 --> 48:09.870
二

48:09.870 --> 48:11.870
三

48:11.870 --> 48:13.870
然后四

48:13.870 --> 48:17.180
我

48:17.180 --> 48:19.180
好然后接下来把这边改一下

48:19.180 --> 48:21.180
这边呢也是

48:21.180 --> 48:23.180
这里对应的是

48:23.180 --> 48:25.180
其他都不用改

48:25.180 --> 48:27.180
这边呢是h3

48:27.180 --> 48:29.180
对应的是h3

48:29.180 --> 48:31.180
那这边的话h4

48:31.180 --> 48:33.180
对应这边h4

48:33.180 --> 48:35.180
然后h5

48:35.180 --> 48:37.180
对应h5

48:37.180 --> 48:39.180
然后h6

48:39.180 --> 48:41.180
对应h6

48:41.180 --> 48:43.180
就把那个标题标题了

48:43.180 --> 48:45.180
我们这边就给他加了一个这个id上去

48:45.180 --> 48:47.180
这个的话主要是前端

48:47.180 --> 48:49.180
我们有一个那个毛点

48:49.180 --> 48:51.180
是吧有个那个毛点的效果

48:51.180 --> 48:53.180
好然后这边呢这个

48:53.180 --> 48:55.180
把它加上了加上之后

48:55.180 --> 48:57.180
然后接下来最后就干嘛呢

48:57.180 --> 48:59.180
最后的话就return

48:59.180 --> 49:01.180
return这个infer

49:01.180 --> 49:03.180
看到没有return这个infer

49:03.180 --> 49:05.180
最终得到我们处理

49:05.180 --> 49:07.180
最终得到我们处理后的

49:07.180 --> 49:09.180
加了这个toc

49:09.180 --> 49:11.180
这个就是mulu的

49:11.180 --> 49:13.180
这个就是新增博文的这个内容

49:13.180 --> 49:15.180
那这样回到我们这边

49:15.180 --> 49:17.180
回到这边的话

49:17.180 --> 49:19.180
我们来看一下啊我们这边

49:19.180 --> 49:21.180
添加之后然后这样我们这边

49:21.180 --> 49:23.180
console.log

49:23.180 --> 49:25.180
这边呢就是

49:25.180 --> 49:27.180
newbloginfer

49:27.180 --> 49:29.180
newbloginfer

49:29.180 --> 49:33.390
OK

49:33.390 --> 49:35.390
那这样我们这边保存一下

49:35.390 --> 49:38.960
保存

49:38.960 --> 49:40.960
保存之后然后这样我们这边

49:40.960 --> 49:42.960
我们来重新来添加一下

49:42.960 --> 49:44.960
添加文章

49:44.960 --> 49:46.960
把这个

49:46.960 --> 49:48.960
把这个粘过去

49:48.960 --> 49:53.870
把这个粘过来

49:53.870 --> 49:55.870
多了一个啥东西

49:55.870 --> 50:00.880
多了一个

50:00.880 --> 50:04.760
怎么会多一个东西呢

50:04.760 --> 50:06.760
咋回事

50:06.760 --> 50:08.760
咋回事

50:08.760 --> 50:10.760
这个编辑器还出问题了

50:10.760 --> 50:12.760
感觉好像是这个编辑器

50:12.760 --> 50:14.760
编辑器好像有问题是吧

50:14.760 --> 50:16.760
走

50:16.760 --> 50:18.760
重新刷新一下就可以了

50:18.760 --> 50:20.760
好然后接下来这边呢我们123

50:20.760 --> 50:22.760
123

50:22.760 --> 50:24.760
分类

50:24.760 --> 50:26.760
走

50:26.760 --> 50:28.760
好这边过来楼一眼

50:28.760 --> 50:30.760
看一下

50:30.760 --> 50:32.760
这里的话

50:32.760 --> 50:34.760
你看可不可以了

50:34.760 --> 50:36.760
这边是文章的内容

50:36.760 --> 50:38.760
你看这边是toc

50:38.760 --> 50:40.760
toc是不是生成了

50:40.760 --> 50:42.760
对不对

50:42.760 --> 50:44.760
就生成了

50:44.760 --> 50:46.760
好生成了之后然后接下来后面就好办了

50:46.760 --> 50:48.760
后面的话是不是就是做这个

50:48.760 --> 50:50.760
我们后面该做的这个处理

50:50.760 --> 50:52.760
对不对把它转化成制服串

50:52.760 --> 50:54.760
打印就不打印了

50:54.760 --> 50:56.760
刚才已经打印了

50:56.760 --> 50:58.760
好大家后面

50:58.760 --> 51:00.760
后面的话把这个注释

51:00.760 --> 51:02.760
就把它打开

51:02.760 --> 51:04.760
对不对

51:04.760 --> 51:06.760
把它打开

51:06.760 --> 51:08.760
整个这个就处理好了

51:08.760 --> 51:10.760
这一块好了然后我们的这个

51:10.760 --> 51:12.760
修改

51:12.760 --> 51:14.760
修改的话这边就也是一样的

51:14.760 --> 51:16.760
可不可以啊修改的话

51:16.760 --> 51:18.760
这里就是一样的

51:18.760 --> 51:20.760
我们来到上面

51:20.760 --> 51:22.760
上面的话这边就是

51:22.760 --> 51:24.760
是不是就这两哈

51:24.760 --> 51:26.760
对不对把它复制过来

51:26.760 --> 51:28.760
然后放到什么

51:28.760 --> 51:32.720
放到这里

51:32.720 --> 51:34.720
对不对修改的话就是一样的

51:34.720 --> 51:36.720
也要做这个处理

51:36.720 --> 51:38.720
保存一下

51:38.720 --> 51:40.720
之后然后接下来

51:40.720 --> 51:42.720
我们来开始新增

51:42.720 --> 51:44.720
我们来看一下添加文章

51:44.720 --> 51:46.720
添加文章

51:46.720 --> 51:48.720
然后接下来这里

51:48.720 --> 51:50.720
这里我们就好好写一篇吧

51:50.720 --> 51:52.720
这边的话就

51:52.720 --> 51:54.720
素质类型

51:54.720 --> 51:56.720
这个叫做素质类型

51:56.720 --> 51:58.720
我们这边就直接

51:58.720 --> 52:00.720
用在前台新增了

52:00.720 --> 52:02.720
就直接在前台新增

52:02.720 --> 52:04.720
然后接下来的话这里

52:04.720 --> 52:06.720
这个的话签到成绩就比较多

52:06.720 --> 52:08.720
好

52:08.720 --> 52:10.720
然后这里

52:10.720 --> 52:12.720
这个文章有点长是吧

52:12.720 --> 52:14.720
一直到这

52:14.720 --> 52:16.720
Ctrl C

52:16.720 --> 52:18.720
然后Ctrl V

52:18.720 --> 52:22.160
好可以了

52:22.160 --> 52:24.160
这边再加一个

52:24.160 --> 52:26.160
OK变成一个狠线

52:26.160 --> 52:28.160
文章描述

52:28.160 --> 52:33.130
这是一篇

52:33.130 --> 52:35.130
这是一篇

52:35.130 --> 52:37.130
关于

52:37.130 --> 52:39.130
素质类型是吧

52:39.130 --> 52:41.130
素质类型

52:41.130 --> 52:43.130
的文章

52:43.130 --> 52:45.130
好

52:45.130 --> 52:47.130
然后加这边这个投图

52:47.130 --> 52:49.130
我们也上传一张

52:49.130 --> 52:51.130
就上传这个吧

52:51.130 --> 52:53.130
然后

52:53.130 --> 52:55.130
这边的话这个接式

52:55.130 --> 52:57.130
走

52:57.130 --> 52:59.130
是不是有了

52:59.130 --> 53:01.130
这边就有了

53:01.130 --> 53:03.130
好有了之后然后接下来的话

53:03.130 --> 53:05.130
我们进我们的数据库看一下

53:05.130 --> 53:07.130
数据库

53:07.130 --> 53:09.130
看这边

53:09.130 --> 53:11.130
把这个关掉

53:11.130 --> 53:13.130
把这个关掉

53:13.130 --> 53:15.130
我们这边看这边

53:15.130 --> 53:17.130
Vlog

53:17.130 --> 53:19.130
你看是存储进去了

53:19.130 --> 53:21.130
对不对

53:21.130 --> 53:23.130
存储进去了

53:23.130 --> 53:25.130
你回头的话

53:25.130 --> 53:27.130
前台的话显示也是能够正常显示的

53:27.130 --> 53:29.130
看了没有

53:29.130 --> 53:31.130
这就是关于我们的Toc的处理

53:31.130 --> 53:33.130
我们就处理好了

53:33.130 --> 53:35.130
那我们这边我们看一下更改行不行

53:35.130 --> 53:37.130
这边

53:37.130 --> 53:39.130
编辑

53:39.130 --> 53:41.130
可以了

53:41.130 --> 53:43.130
好大家这边我们这边我们就不做

53:43.130 --> 53:45.130
这边的编辑我们就不做

53:45.130 --> 53:47.130
我们这边比如说就改成一个2

53:47.130 --> 53:49.130
改成2

53:49.130 --> 53:51.130
确认修改

53:51.130 --> 53:53.130
是不是OK的

53:53.130 --> 53:55.130
对不对

53:55.130 --> 53:57.130
那你如果文章里面编辑的话

53:57.130 --> 53:59.130
它就会进哪里呢

53:59.130 --> 54:01.130
就你这个证文

54:01.130 --> 54:03.130
证文如果你发生了编辑

54:03.130 --> 54:05.130
就是重新生成新的Toc

54:05.130 --> 54:07.130
对不对

54:07.130 --> 54:09.130
这边是没有问题的

54:09.130 --> 54:11.130
下去可以自己测试一下

54:11.130 --> 54:13.130
这就是关于Toc的处理

54:13.130 --> 54:15.130
下去再好好看一下

54:15.130 --> 54:17.130
主要就是这

54:17.130 --> 54:19.130
主要就是这

54:19.130 --> 54:21.130
这个handleToc

54:21.130 --> 54:23.130
就是把这个方法

54:23.130 --> 54:25.130
把它写了

54:25.130 --> 54:27.130
这些课就先到这里

54:27.130 --> 54:29.130
下去自己写写

54:29.130 --> 54:31.130
再见

