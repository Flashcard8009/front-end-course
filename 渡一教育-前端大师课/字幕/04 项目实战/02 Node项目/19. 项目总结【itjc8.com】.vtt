WEBVTT

00:00.430 --> 00:02.990
截止到上节课为止

00:02.990 --> 00:05.870
我们整个个人博客的服务器端

00:05.870 --> 00:08.430
我们的编码就全部完成了

00:08.430 --> 00:12.830
这节课的话是我们个人博客服务器端的最后一节课

00:12.830 --> 00:14.750
我们主要做一个总结

00:14.750 --> 00:16.430
来总结一下这个项目

00:16.430 --> 00:19.150
首先说一下这个项目它的意义在哪里

00:19.150 --> 00:23.470
大家通过做个人博客服务器端做这个项目

00:23.470 --> 00:25.630
其他最大的意义我觉得在哪里呢

00:25.630 --> 00:30.350
就是你把整个前后端就完全就打通了

00:30.590 --> 00:33.390
无论你想想我们这个个人博客

00:33.390 --> 00:36.510
他是不是一套完整的项目

00:36.510 --> 00:37.230
对不对

00:37.230 --> 00:38.510
包含这个前台

00:38.510 --> 00:41.070
前台的话是袁老师带着大家做的

00:41.070 --> 00:41.630
对不对

00:41.630 --> 00:44.190
然后后台后台的话是我带着大家做的

00:44.190 --> 00:46.670
用的那个vue element enemy

00:46.670 --> 00:46.990
对不对

00:46.990 --> 00:49.150
然后接下来的话这个服务器端

00:49.150 --> 00:52.190
说这个是一整套完整的项目

00:52.190 --> 00:52.910
做完之后

00:52.910 --> 00:54.270
然后你就干嘛呢

00:54.270 --> 00:57.230
你就对整个这个我们的一个这个项目

00:57.230 --> 00:59.710
你有个这个清晰的这个认识

00:59.710 --> 01:00.910
你的一个项目来了

01:00.910 --> 01:02.910
他究竟是属于这个前台项目

01:02.910 --> 01:04.110
还是后台项目

01:04.110 --> 01:06.350
还是服务器端项目

01:06.350 --> 01:06.910
对不对

01:06.910 --> 01:09.390
你一下子你认识就很清晰了

01:09.390 --> 01:10.670
第二个就是什么呢

01:10.670 --> 01:13.950
第二个就是大家对这个服务器端的这个编嘛

01:13.950 --> 01:16.110
啊会有一个这个认识

01:16.110 --> 01:17.550
不至于像以前一样

01:17.550 --> 01:18.990
虽然大家以后出去的话

01:18.990 --> 01:20.110
确实都是做什么

01:20.110 --> 01:21.870
都是做这个前端开发

01:21.870 --> 01:22.190
是吧

01:22.190 --> 01:24.750
大部分的同学出去都是做前端开发

01:24.750 --> 01:26.190
但是你不至于什么呢

01:26.190 --> 01:28.110
不至于这个服务器端

01:28.110 --> 01:30.110
一点都不懂

01:30.110 --> 01:30.990
对不对

01:30.990 --> 01:31.630
啊回头的话

01:31.630 --> 01:33.950
你和那个后端服务器端啊

01:33.950 --> 01:35.710
你们这个做讨论的时候

01:35.710 --> 01:36.430
那至少的话

01:36.430 --> 01:38.190
你知道他在说什么

01:38.190 --> 01:40.350
有些东西他骗不了你

01:40.350 --> 01:41.310
对不对

01:41.310 --> 01:42.190
啊有些同学啊

01:42.190 --> 01:43.790
就以前我教过的学生啊

01:43.790 --> 01:44.910
有些出去啊

01:44.910 --> 01:46.750
完全不懂服务器端的

01:46.750 --> 01:49.390
那那个开发那个后端的

01:49.390 --> 01:51.710
就把什么活都扔给我们前端

01:51.710 --> 01:53.310
啊什么都扔给我们前端

01:53.310 --> 01:54.030
那现在的话

01:54.030 --> 01:56.350
你这个有过这个服务器端的

01:56.350 --> 01:57.950
这个开发经验的话

01:58.030 --> 01:59.150
你至少就是

01:59.150 --> 02:00.830
啊他在这个服务器端

02:00.830 --> 02:03.310
有些事情他骗不了你

02:03.310 --> 02:04.350
对不对啊

02:04.350 --> 02:05.550
主要是这个啊

02:05.550 --> 02:06.510
还有就是什么呢

02:06.510 --> 02:09.230
还有就是你如果进一些小公司

02:09.230 --> 02:10.350
小公司的话呢

02:10.350 --> 02:10.830
你这边的话

02:10.830 --> 02:13.070
你就直接就是升级为一个全站了

02:14.430 --> 02:15.230
明白吧

02:15.230 --> 02:17.230
直接升级成一个全站啊

02:17.230 --> 02:17.630
为什么呢

02:17.630 --> 02:18.830
因为小公司嘛

02:18.830 --> 02:19.550
小公司的话呢

02:19.550 --> 02:20.190
你服务器端

02:20.190 --> 02:22.670
你就直接用漏的开发就可以了

02:22.670 --> 02:23.070
对不对

02:23.070 --> 02:24.190
直接用漏的啊

02:24.190 --> 02:26.270
你反正这个现在漏的也学了

02:26.270 --> 02:26.910
数据库的话

02:26.910 --> 02:29.150
你用这个mango或者这个my circle

02:29.150 --> 02:30.190
都可以

02:30.190 --> 02:30.510
对不对

02:30.510 --> 02:32.510
你直接就升级为这个全站的

02:32.510 --> 02:33.870
这个工程师了

02:33.870 --> 02:34.590
啊说这个的话

02:34.590 --> 02:37.070
是我们做这个项目的这个意义

02:37.070 --> 02:37.310
好

02:37.310 --> 02:38.510
然后我们这个项目的话

02:38.510 --> 02:40.750
说一下这个项目的这个重点啊

02:40.750 --> 02:41.470
重点的话

02:41.470 --> 02:42.910
主要是这么几个地方

02:44.270 --> 02:46.990
首先就是一个这个三层架构

02:46.990 --> 02:47.870
这三层架构

02:47.870 --> 02:48.990
你一定要理解

02:48.990 --> 02:50.350
啊我记得这个三层架构的话

02:50.350 --> 02:52.670
我们是在讲第一节课的时候

02:52.670 --> 02:53.790
好找一找啊

02:53.790 --> 02:55.070
我把那张那个胶案

02:55.070 --> 02:56.030
我再把它拿出来

02:57.150 --> 02:58.910
在这边啊

02:58.910 --> 02:59.790
漏的

02:59.790 --> 03:00.910
漏的的这个

03:02.030 --> 03:03.390
然后项目啊

03:03.390 --> 03:04.030
这个准备啊

03:04.030 --> 03:04.990
就这个这个文档

03:05.870 --> 03:06.430
啊现在的话

03:06.430 --> 03:08.270
你回头再来看这个文档就很简单了

03:09.390 --> 03:10.110
对不对

03:10.110 --> 03:12.190
这是我们做这个项目的一个重点

03:12.190 --> 03:13.950
啊就是你一定要理解这个

03:13.950 --> 03:15.870
后端开发的这个三层架构

03:16.830 --> 03:17.870
这个东西的话

03:17.870 --> 03:20.030
他不是说是某一个技术

03:20.030 --> 03:21.950
啊比如说我们用漏的接式开发

03:21.950 --> 03:23.550
有这个三层架构啊不是

03:24.190 --> 03:26.590
你用任何的这个后台语言啊

03:26.590 --> 03:28.190
无论你是用PHP也好

03:29.070 --> 03:30.990
还是用这个比如说加瓦也好

03:30.990 --> 03:32.430
还是用这个入笔也好

03:32.430 --> 03:34.430
他这个的话是一种架构思想

03:35.390 --> 03:36.030
明白吧

03:36.030 --> 03:38.350
都是通用的啊都是通用的

03:38.350 --> 03:39.390
那三层架构的话

03:39.390 --> 03:40.910
你要知道是哪三层

03:41.710 --> 03:42.990
啊要知道哪三层

03:42.990 --> 03:44.670
他分为界面层

03:44.670 --> 03:45.950
业务逻辑层

03:45.950 --> 03:47.310
数据访问层啊

03:47.310 --> 03:48.910
数据访问层就是我们的这个DAO

03:49.470 --> 03:49.870
对不对

03:49.870 --> 03:52.030
这个的话就是我们的这个service

03:52.030 --> 03:53.710
这个的话就是我们的那个入词

03:54.510 --> 03:55.070
对不对

03:55.230 --> 03:56.670
你现在的话你回头再来看的话

03:56.670 --> 03:57.390
是不是就很熟悉了

03:57.950 --> 03:58.270
对不对

03:58.270 --> 03:59.470
我们的这个DAO

03:59.470 --> 04:01.230
这个的话是数据访问层

04:01.870 --> 04:02.750
你看这里面

04:02.750 --> 04:04.910
是不是就是做和数据库相关的操作

04:05.470 --> 04:05.790
对不对

04:05.790 --> 04:08.350
我查询一条数据修改一条数据

04:08.910 --> 04:10.430
这里面的话不包含什么呢

04:10.430 --> 04:12.750
不包含任何的这个业务逻辑

04:12.750 --> 04:14.430
你的业务逻辑都在哪里呢

04:14.430 --> 04:15.790
都在这个service层

04:16.910 --> 04:17.310
对不对

04:17.310 --> 04:18.430
啊比如说我这边

04:18.990 --> 04:20.910
啊比如说我要删除一篇博客

04:20.910 --> 04:21.710
删除一篇博客

04:21.710 --> 04:23.550
只要我这边有各种各样的这种逻辑

04:24.270 --> 04:24.590
对不对

04:25.070 --> 04:25.710
包括这里

04:26.830 --> 04:28.270
这里我们当时写的时候啊

04:28.270 --> 04:29.790
比如这个新增博客分类

04:30.830 --> 04:32.910
啊这边包括数据验证啊这些

04:32.910 --> 04:35.310
这些的话都是属于你的业务逻辑

04:36.030 --> 04:36.830
明白吧

04:36.830 --> 04:37.950
啊然后接下来还有就是什么呢

04:37.950 --> 04:38.830
还有就是这个入词

04:39.390 --> 04:39.950
啊入词的话

04:39.950 --> 04:41.390
这个就是我们的路由程

04:41.390 --> 04:42.910
主要是负责和这个前端

04:43.390 --> 04:44.270
进行交互的

04:44.910 --> 04:45.470
对不对

04:45.470 --> 04:46.190
说首先的话

04:46.190 --> 04:47.230
你要理解这个东西

04:48.190 --> 04:49.630
啊就是我们的这个三层架构

04:50.030 --> 04:51.390
这个你要理解啊

04:52.030 --> 04:52.990
然后这边啊

04:52.990 --> 04:53.790
这个是入词

04:53.870 --> 04:54.910
这个是service

04:54.910 --> 04:56.030
这个是dao

04:56.030 --> 04:57.630
啊现在的话应该很熟悉了啊

04:58.030 --> 04:58.350
对不对

04:58.350 --> 04:59.550
整个项目都写完了

04:59.550 --> 05:01.310
回头再来看的话是不是就很简单了

05:01.950 --> 05:02.350
对不对

05:02.350 --> 05:03.550
这是我们的第一个重点

05:04.110 --> 05:05.470
那第二个重点是什么呢

05:05.470 --> 05:06.670
第二个重点就是

05:06.670 --> 05:08.430
关于我们的那个上传文件

05:09.550 --> 05:11.390
上传文件在哪个地方来着

05:12.030 --> 05:12.990
我们上传文件啊

05:12.990 --> 05:13.950
这边upload

05:13.950 --> 05:15.870
啊把这个这个把关了啊

05:16.350 --> 05:17.070
我们这边

05:17.070 --> 05:17.550
这边呢

05:17.550 --> 05:19.470
它是使用到了一个中间键

05:19.470 --> 05:20.350
叫做什么

05:20.350 --> 05:21.390
是不是叫做这个motor

05:22.110 --> 05:23.310
啊来到这边tools

05:24.750 --> 05:25.470
这边

05:25.470 --> 05:26.590
这边使用到了一个这个

05:26.590 --> 05:28.030
叫做motor的这个中间键

05:28.750 --> 05:29.550
对不对

05:29.550 --> 05:30.030
这个的话

05:30.030 --> 05:31.150
我记得袁老师的话

05:31.150 --> 05:32.590
是在他的那个load.js

05:32.590 --> 05:33.710
课程里面讲过的

05:34.430 --> 05:35.230
啊他当时讲的话

05:35.230 --> 05:36.270
也是讲的是motor

05:36.830 --> 05:37.390
对不对

05:37.390 --> 05:38.110
让我们这边呢

05:38.110 --> 05:38.910
就是一个实战

05:39.710 --> 05:40.590
啊就是一个实战

05:41.150 --> 05:41.870
然后接下来的话

05:41.870 --> 05:42.670
就是这个toc

05:43.390 --> 05:44.030
对吧这个的话

05:44.030 --> 05:45.630
也是我们这个项目的一个重点

05:46.030 --> 05:47.710
toc要对这个目录

05:48.590 --> 05:50.030
进行一个这个转换

05:50.910 --> 05:52.350
但有的同学可能有疑问啊

05:53.070 --> 05:53.870
他的疑问就是

05:53.870 --> 05:54.510
他说谢老师

05:54.510 --> 05:56.110
你那个给我们讲课的时候

05:56.110 --> 05:57.710
你反复强调一定要

05:57.710 --> 05:58.830
遵循什么呢

05:58.830 --> 06:00.750
一定要遵循这个接口文档

06:01.950 --> 06:02.590
对不对

06:02.590 --> 06:04.430
一定要遵循这个接口文档

06:04.430 --> 06:05.550
好你其他的话

06:05.550 --> 06:06.190
你都

06:06.190 --> 06:07.070
遵循了的

06:07.070 --> 06:08.270
但是你这边的话

06:08.270 --> 06:10.270
就稍微有点不遵循了

06:10.270 --> 06:10.750
这边的话

06:10.750 --> 06:12.590
你看接口文档明明定的是

06:12.590 --> 06:13.310
直接这边

06:13.310 --> 06:14.430
是不是就已经处理好了

06:15.150 --> 06:15.870
对不对

06:15.870 --> 06:16.830
但是我们这个

06:16.830 --> 06:17.710
在编程的时候

06:17.710 --> 06:19.470
我们这边的话是传一个什么

06:19.470 --> 06:21.230
是传的是一个空速座

06:21.310 --> 06:22.910
然后我们是在哪里处理的

06:22.910 --> 06:24.830
是不是在服务器端处理的

06:24.830 --> 06:25.470
对不对

06:25.470 --> 06:27.150
有的同学可能就有这个疑问

06:27.150 --> 06:27.710
谢老师

06:27.710 --> 06:30.510
你这这就没有遵循这个接口文档

06:30.510 --> 06:31.470
确实我这边的话

06:31.470 --> 06:33.310
没有遵循这个接口文档

06:33.310 --> 06:34.670
那这个的话

06:34.670 --> 06:35.870
比如说你前后端

06:35.870 --> 06:36.750
分立开发的时候

06:36.750 --> 06:37.390
那这个的话

06:37.390 --> 06:39.550
你就要和后端进行商量了

06:40.510 --> 06:41.150
知道吧

06:41.150 --> 06:42.590
我为什么放在服务器端呢

06:42.590 --> 06:44.430
因为服务器端有这个裤

06:44.430 --> 06:45.870
就这么简单

06:45.870 --> 06:46.590
就这么简单

06:46.590 --> 06:47.870
因为我这边的话

06:47.870 --> 06:49.070
服务器端有这个裤

06:50.030 --> 06:51.470
叫做这个markdown toc

06:52.190 --> 06:53.310
啊因为我要干嘛呢

06:53.310 --> 06:54.270
我要提取

06:54.910 --> 06:56.430
提取那个markdown

06:56.430 --> 06:57.870
里面它的这个一级标题

06:57.870 --> 06:58.430
二级标题

06:58.430 --> 06:59.550
我把这些题

06:59.550 --> 07:01.470
把它这个提取出来

07:01.470 --> 07:02.510
然后把他提取出来的话

07:02.510 --> 07:04.750
然后这个load这边有这个裤

07:04.750 --> 07:05.950
方便我提取

07:05.950 --> 07:08.110
所以我是放在服务器端进行处理的

07:08.910 --> 07:09.470
明白不

07:09.470 --> 07:10.830
啊说这种时候的话

07:10.830 --> 07:11.950
你就要和那个后端

07:11.950 --> 07:13.230
你要进行商量了

07:13.230 --> 07:14.910
这个东西不是说不变的

07:15.790 --> 07:16.270
知道吧

07:16.270 --> 07:17.550
这个东西不是说不变的

07:17.550 --> 07:18.670
这个东西的话

07:18.990 --> 07:19.790
就是一般的话

07:19.790 --> 07:21.870
90%的情况是不会变

07:21.870 --> 07:22.830
但有些时候

07:22.830 --> 07:24.590
你觉得我这个前端

07:24.590 --> 07:26.670
我来提供确实不太合适

07:26.670 --> 07:28.510
那你可以和后端进行商量嘛

07:29.710 --> 07:30.430
对不对

07:30.430 --> 07:32.030
可以后端进行商量

07:32.030 --> 07:32.670
我回头的话

07:32.670 --> 07:33.470
我把这改了吧

07:34.670 --> 07:36.350
我一会把这个改了

07:36.350 --> 07:38.510
我把这个就改成一个空数组

07:38.510 --> 07:40.110
或者这个字段是不是

07:40.110 --> 07:41.550
压根就可以不用传

07:41.550 --> 07:41.870
对不对

07:41.870 --> 07:42.830
我现在就改

07:42.830 --> 07:43.790
这边的编辑

07:44.510 --> 07:45.870
这个改还是挺方便的

07:46.430 --> 07:47.710
你直接就把这个字段

07:47.710 --> 07:49.070
就把它删了就可以了

07:49.070 --> 07:50.510
这边不需要提供

07:50.510 --> 07:51.150
toc了

07:51.950 --> 07:52.910
对不对

07:52.910 --> 07:54.110
然后这边

07:54.110 --> 07:54.750
其他就没什么了

07:54.750 --> 07:55.390
这边保存一下

07:57.070 --> 07:57.950
OK

07:57.950 --> 07:58.430
好过来

07:59.470 --> 08:01.230
这边是不是不需要提供这个toc

08:02.110 --> 08:02.510
对不对

08:02.510 --> 08:03.710
我把这一块删除了

08:04.590 --> 08:05.150
删除了

08:05.150 --> 08:06.910
我想要不要写一下注释

08:07.630 --> 08:08.750
要不要写一下背住

08:10.510 --> 08:11.790
我看在哪写一下背住

08:12.350 --> 08:13.870
它应该是有个写背住的地方

08:14.670 --> 08:15.550
背住

08:15.550 --> 08:16.750
然后我这边写一下吧

08:17.470 --> 08:18.190
toc

08:19.790 --> 08:21.790
在服务器端

08:22.830 --> 08:24.190
进行生成

08:24.910 --> 08:25.790
然后接下来的话

08:25.790 --> 08:27.710
这边客户端

08:28.750 --> 08:31.790
传递数据的时候

08:32.350 --> 08:34.750
不需要传递

08:36.030 --> 08:38.830
不需要传递这个toc

08:39.950 --> 08:40.430
对不对

08:40.430 --> 08:41.790
不需要传递这个toc

08:42.670 --> 08:43.790
然后回头

08:44.350 --> 08:46.430
在服务器端

08:46.990 --> 08:49.870
能够自动根据什么

08:51.230 --> 08:52.030
根据什么

08:52.030 --> 08:54.190
根据这个markdown

08:55.550 --> 08:56.270
哦

08:56.270 --> 08:57.310
是多了吗

08:57.310 --> 08:58.030
是太多了吗

08:59.230 --> 09:00.190
哎我卡了吗

09:00.990 --> 09:01.310
what

09:02.030 --> 09:03.630
啊刚才好像卡了一下

09:03.630 --> 09:06.190
根据markdown的内容

09:06.830 --> 09:10.510
来生成toc内容

09:11.070 --> 09:12.190
然后新增

09:13.150 --> 09:14.670
完毕以后

09:14.750 --> 09:19.790
返回的新增数据里面

09:19.790 --> 09:21.230
拥有什么呢

09:21.230 --> 09:22.990
toc内容

09:23.790 --> 09:24.270
对不对

09:24.270 --> 09:25.550
哎这个是不是就是我们现在

09:26.030 --> 09:26.830
现在的这个

09:28.110 --> 09:29.150
现在的方式啊

09:29.150 --> 09:29.550
对不对

09:29.550 --> 09:30.430
啊保存成功了

09:30.430 --> 09:31.470
好这边预览

09:31.470 --> 09:32.190
OK可以了

09:32.750 --> 09:33.310
对不对

09:33.310 --> 09:33.950
我这边的话

09:33.950 --> 09:36.350
我是不需要你传递这个toc的

09:36.350 --> 09:38.430
哦这边应该是根据html content

09:38.430 --> 09:39.310
哦再改一下啊

09:39.950 --> 09:42.990
这边应该是根据html content

09:44.990 --> 09:48.670
根据html content

09:49.790 --> 09:50.030
OK

09:51.550 --> 09:52.910
好这边多了个空格

09:53.470 --> 09:54.110
好保存

09:55.630 --> 09:55.870
OK

09:56.510 --> 09:58.270
好所以这边的话是根据什么呢

09:58.270 --> 09:58.830
根据这个

09:59.710 --> 10:00.910
我的背住呢

10:02.190 --> 10:02.990
啊在这里

10:02.990 --> 10:05.150
这里的话是根据html content

10:05.150 --> 10:05.790
就是你这个

10:06.270 --> 10:07.150
这个字段

10:07.150 --> 10:08.670
我回头的话在服务器端

10:08.670 --> 10:09.550
根据这个字段

10:09.550 --> 10:10.750
是不是自动的生成toc

10:11.390 --> 10:12.030
对不对

10:12.030 --> 10:13.950
让你新增博客完毕之后

10:14.030 --> 10:15.390
返回了这个新增数据

10:15.790 --> 10:17.310
这一条是不是你的新增数据

10:17.310 --> 10:17.950
对不对

10:17.950 --> 10:19.150
这里面就有什么呢

10:19.150 --> 10:21.630
这里面就有这个toc这个目录信息

10:22.270 --> 10:22.750
看了没有

10:23.150 --> 10:23.870
那说这个的话

10:23.870 --> 10:26.350
你可以和这个后端进行商量

10:26.910 --> 10:27.310
知道吧

10:27.310 --> 10:29.070
你如果作为一个这个前端开发

10:29.070 --> 10:30.670
你觉得这一块不太好处理

10:31.070 --> 10:32.670
啊你可能后端好处理

10:32.670 --> 10:34.190
那你和后端商量就可以了吗

10:34.750 --> 10:35.150
对不对

10:35.150 --> 10:36.910
啊当然的话一开始

10:37.950 --> 10:39.070
这个一般来讲的话

10:39.070 --> 10:40.510
大部分情况都不会变

10:41.070 --> 10:41.870
啊大部分不会变

10:41.870 --> 10:42.750
你看我们这边的话

10:42.750 --> 10:44.030
这么多个这个模块

10:44.590 --> 10:44.910
对不对

10:44.910 --> 10:46.590
这么多个这个接口模块

10:46.590 --> 10:47.870
基本上也就这个

10:48.110 --> 10:50.190
添加这个就是添加文章

10:50.430 --> 10:51.710
我们稍微有点不一样

10:51.710 --> 10:54.030
其他的是不是都严格遵循这个

10:54.270 --> 10:54.910
接口文档

10:56.030 --> 10:56.590
对不对

10:56.590 --> 10:57.870
都是严格遵循的

10:58.750 --> 11:00.430
啊这是这个第二个终点

11:01.230 --> 11:02.590
就是关于这个toc

11:02.590 --> 11:02.990
啊

11:02.990 --> 11:04.350
那接下来还有什么呢

11:04.350 --> 11:05.790
还有就是关于这个token

11:06.590 --> 11:07.310
token的处理

11:07.790 --> 11:08.750
token的处理的话

11:08.750 --> 11:09.630
我们是用到了什么

11:10.270 --> 11:11.470
我们是用到两个

11:11.870 --> 11:14.670
一个的话叫做接声微波token

11:15.070 --> 11:16.590
啊我们这边的话是在

11:17.390 --> 11:18.670
and mean service这边

11:19.710 --> 11:20.270
这边

11:20.270 --> 11:21.390
用到了一个库

11:21.390 --> 11:21.950
叫做

11:23.550 --> 11:24.510
啊对就这个

11:24.830 --> 11:26.910
叫做接声微波token

11:27.550 --> 11:28.590
它是负责干嘛呢

11:29.150 --> 11:31.390
它是不是负责深层这个token

11:32.510 --> 11:33.230
对不对

11:33.230 --> 11:34.350
深层token

11:34.750 --> 11:35.550
然后还有什么

11:36.190 --> 11:37.070
还有就是这个

11:38.030 --> 11:39.230
你那个token深层之后

11:39.230 --> 11:40.830
它是一个加密的支付串

11:40.910 --> 11:42.750
然后我负责把这个加密的支付串

11:42.750 --> 11:44.590
是不是还原成普通信息

11:45.470 --> 11:45.950
对不对

11:45.950 --> 11:47.070
它是负责这两个的

11:47.070 --> 11:48.510
啊这边的话是这个深层

11:49.630 --> 11:51.230
深层这个token的这个逻辑

11:51.230 --> 11:52.030
我看是不是在这

11:52.030 --> 11:52.830
啊这个是更新

11:53.230 --> 11:55.230
啊这里啊深层token的逻辑

11:55.470 --> 11:55.950
在这里

11:55.950 --> 11:56.990
其实就是调什么

11:56.990 --> 11:59.630
是不是调这个jwt3方法

12:00.350 --> 12:00.910
对不对

12:00.910 --> 12:02.590
传入这个对应的这个参数

12:02.990 --> 12:04.510
那我就给你深层一个什么呢

12:04.510 --> 12:06.350
根据你这边的信息

12:06.910 --> 12:08.350
啊这个信息是你自己定的

12:09.070 --> 12:10.670
你注意信息是你自己定

12:10.990 --> 12:12.750
你要对哪些数据进行加密

12:13.230 --> 12:13.630
对不对

12:13.630 --> 12:14.430
你自己来定

12:14.430 --> 12:17.550
定了之后要将我调用jwt.3n方法

12:17.870 --> 12:20.350
我给你深层一串加密的支付串

12:20.750 --> 12:21.790
这是它的第一个作用

12:22.110 --> 12:23.230
第二个作用是什么呢

12:23.230 --> 12:24.190
第二个作用的话

12:24.190 --> 12:26.030
就是把这个加密的这个支付串

12:26.750 --> 12:27.550
还有个什么呢

12:27.550 --> 12:28.670
有个这个verify

12:29.470 --> 12:30.110
这个方法

12:30.430 --> 12:31.950
把这个加密的支付串

12:31.950 --> 12:34.510
重新还原成这个普通的这个数据

12:35.390 --> 12:35.710
对不对

12:35.710 --> 12:36.910
就是解密后的数据

12:37.390 --> 12:38.830
啊这个是接生微博token

12:39.310 --> 12:40.910
然后还用到了一个中间键

12:41.630 --> 12:42.270
叫做什么呢

12:42.270 --> 12:43.070
叫做这个

12:44.430 --> 12:44.750
这个

12:45.630 --> 12:47.470
expricejwt

12:48.110 --> 12:49.150
它是负责干嘛的

12:49.630 --> 12:52.990
它是不是就是负责验证你的这个token的有效性的

12:54.190 --> 12:55.150
对不对啊

12:55.150 --> 12:56.830
验证这个token的有效性

12:56.830 --> 12:58.910
啊这边它有一些可以排除

12:59.390 --> 13:01.070
你把这个要排除的路由

13:01.070 --> 13:03.310
就统一写在这个pass这个数据里面

13:03.870 --> 13:04.350
就可以了

13:04.910 --> 13:06.190
啊你注意这个url

13:06.270 --> 13:07.470
支持支付串

13:07.470 --> 13:08.350
也支持什么呢

13:08.350 --> 13:09.550
也支持振折

13:10.110 --> 13:10.430
对不对

13:10.430 --> 13:11.950
然后面可以跟上这个方法

13:12.670 --> 13:13.790
啊跟上这个方法

13:14.350 --> 13:15.870
啊这是关于这个token

13:15.870 --> 13:16.750
token的验证

13:17.550 --> 13:19.310
然后其他的话

13:19.310 --> 13:20.990
这个项目其实就没什么了

13:22.430 --> 13:22.750
对不对

13:23.310 --> 13:24.430
其他的话就没什么了

13:24.430 --> 13:26.510
啊其他的话你只要一个模块写通了

13:27.070 --> 13:27.630
你就干嘛呢

13:27.630 --> 13:29.230
你就后面就照着写就可以了

13:29.950 --> 13:30.590
对不对

13:30.590 --> 13:31.870
你只要一个模块啊

13:31.870 --> 13:32.590
比如说

13:32.590 --> 13:33.150
你这个

13:34.110 --> 13:35.950
比如说我们后面写这个about的时候

13:36.030 --> 13:37.310
这个是不是就很快了

13:37.310 --> 13:39.150
啊about我好像没有带着写是吧

13:39.150 --> 13:41.310
about我是直接把这个代码给你们的

13:41.310 --> 13:42.110
应该看得懂吧

13:42.830 --> 13:44.030
啊我觉得应该是看得懂的

13:44.030 --> 13:45.150
哈你如果这个

13:45.150 --> 13:46.110
这个都还看不懂的话

13:46.110 --> 13:47.150
这个就说不过去了

13:47.710 --> 13:48.270
对不对

13:48.270 --> 13:49.870
我们最先写的是哪个模块

13:49.870 --> 13:51.310
我们最先写的好像是这个enemy

13:51.310 --> 13:51.630
是不是

13:52.110 --> 13:53.310
写enemy啊

13:53.310 --> 13:54.750
你一个模块写通了

13:54.750 --> 13:56.110
后面是不是就基本上是

13:56.110 --> 13:57.070
一葫芦画飘

13:57.630 --> 13:58.110
对不对

13:58.110 --> 13:59.710
一个一个写就可以了

13:59.710 --> 14:00.830
啊这就是服务期段

14:01.310 --> 14:03.150
基本上感觉也不难吧

14:04.350 --> 14:04.830
啊各位

14:05.550 --> 14:07.550
啊但我也听不到你们的回应啊

14:07.550 --> 14:08.750
啊应该是还好吧

14:09.310 --> 14:09.790
对不对

14:09.790 --> 14:10.590
其实也不难

14:11.150 --> 14:11.710
ok

14:11.710 --> 14:14.510
这就是关于我们这个整个这个项目

14:14.510 --> 14:17.310
大家一定要把这个项目啊好好消化一下

14:17.870 --> 14:18.430
啊

14:18.430 --> 14:19.550
因为这个项目的话

14:19.550 --> 14:21.870
我刚才这个这个项目的意义我也说了

14:21.870 --> 14:24.190
你把这个项目消化好了之后

14:24.190 --> 14:24.910
你整个

14:25.630 --> 14:26.590
web开发

14:26.590 --> 14:28.270
你就全部打通了

14:28.270 --> 14:30.590
啊不是说什么前端开发后端开发

14:30.590 --> 14:32.350
你是前后端开发

14:32.350 --> 14:33.470
你就全部打通了

14:34.270 --> 14:34.670
对不对

14:34.670 --> 14:36.350
服务期段你也会写了

14:36.350 --> 14:38.830
实际上你现在就已经是半个全站了

14:39.870 --> 14:40.590
知道吧

14:40.590 --> 14:42.190
就已经是半个全站了

14:42.190 --> 14:44.670
啊只不过你就是出去上班的时候

14:45.390 --> 14:46.510
有的那个公司

14:46.510 --> 14:48.030
他后端是用了家网

14:48.030 --> 14:49.390
有的公司用的是php

14:50.030 --> 14:51.470
啊后端一般你不管

14:51.470 --> 14:54.110
然后接下来你们把那个接口文档定好

14:54.110 --> 14:54.910
定好的之后

14:54.910 --> 14:56.430
然后接下来你只负责写

14:56.430 --> 14:57.630
前端就ok了

14:57.630 --> 14:59.070
但是如果你就像我刚才说的

14:59.070 --> 15:00.430
如果是小公司

15:00.430 --> 15:01.950
也没有后端程序员

15:01.950 --> 15:02.670
那你现在的话

15:02.670 --> 15:04.910
你是不是也可以用这个漏的来写服务期段

15:04.910 --> 15:05.870
是不是你也能写

15:06.670 --> 15:07.390
对不对

15:07.390 --> 15:09.950
啊基本上就整个web应用你都能开发

15:10.750 --> 15:11.390
啊都能开发

15:11.390 --> 15:13.710
你看那个你们在学那个漏的接试的时候

15:13.710 --> 15:16.910
那袁老师也给大家举了这个各种各样的这个场景

15:16.910 --> 15:18.830
就是我们在做web开发的时候

15:18.830 --> 15:20.510
服务期段各种各样的场景

15:20.510 --> 15:22.430
一般常见的是不是也就这些场景了

15:23.230 --> 15:23.870
对不对

15:23.870 --> 15:24.670
也就这些场景

15:24.670 --> 15:26.430
然后其他的就基本上就是

15:26.430 --> 15:28.750
数据通信啊反复的数据通信

15:28.750 --> 15:30.670
对数据进行一个这个征删改差

15:31.390 --> 15:32.990
基本这个一个web应用

15:32.990 --> 15:33.950
大致就是这个样子的

15:35.070 --> 15:35.390
对不对

15:37.150 --> 15:38.990
然后这是关于这个项目

15:38.990 --> 15:40.030
还有一点我要说一下

15:40.030 --> 15:41.710
就是可能有的同学比较好奇的

15:41.710 --> 15:44.830
就是我的这个项目结构和袁老师的不一样

15:45.950 --> 15:46.670
对不对

15:46.670 --> 15:48.270
袁老师的话他没有这个

15:49.550 --> 15:51.950
他这边呢不存在这个dao这一层

15:51.950 --> 15:53.870
他这边的话直接就把这里

15:54.430 --> 15:55.310
就把这一块

15:55.310 --> 15:57.310
这一块和数据库打交道的这一块

15:57.310 --> 15:58.590
他直接写在哪里的

15:58.750 --> 16:00.750
这不直接写在这个service里面的

16:01.630 --> 16:01.950
对不对

16:01.950 --> 16:03.790
你如果听到袁老师那个课

16:03.790 --> 16:07.550
袁老师好像是带着做了一个那个学生管理系统

16:07.550 --> 16:08.030
是吧

16:08.030 --> 16:09.390
好像是学生管理系统

16:09.390 --> 16:11.550
袁老师的话是把这个dao这一层

16:11.550 --> 16:13.950
要加直接放到这个service这边的

16:14.830 --> 16:15.470
这个的话

16:15.470 --> 16:19.630
其实就是每个人自己这个组织代码的这个形式

16:20.270 --> 16:21.470
看你自己的一个习惯

16:22.510 --> 16:22.990
明白吧

16:22.990 --> 16:24.910
这个没有什么那个固定的这个要求

16:25.630 --> 16:26.750
不可能要求每个人

16:26.750 --> 16:28.270
你写代码必须一模一样

16:28.750 --> 16:30.350
每个人有自己的这个习惯

16:31.550 --> 16:32.110
知道不

16:32.110 --> 16:33.950
说这个的话其实是没什么的

16:33.950 --> 16:35.870
你看你自己习惯那种习惯

16:35.870 --> 16:38.990
你如果不习惯我这种组织代码的形式

16:38.990 --> 16:41.630
那你回头把它改成那个袁老师的那种方式

16:41.630 --> 16:42.510
这也可以

16:43.150 --> 16:43.870
对不对

16:43.870 --> 16:44.830
没有任何问题

16:45.550 --> 16:46.350
好吧

16:46.350 --> 16:48.350
这就是关于这个项目

16:48.350 --> 16:50.110
给大家做一个这个总结

16:50.990 --> 16:52.910
下去的话把这个项目完成

16:53.470 --> 16:54.190
好吧

16:54.190 --> 16:56.110
好这些课就先到这里

16:56.110 --> 16:56.510
再见

