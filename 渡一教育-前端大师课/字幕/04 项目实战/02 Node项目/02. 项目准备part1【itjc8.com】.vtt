WEBVTT

00:00.690 --> 00:05.290
这节课的话 我们就来做我们这个项目开始前的准备工作

00:05.550 --> 00:07.350
我们使用这个漏的接视

00:07.850 --> 00:09.390
把我们的这个服务期段

00:09.650 --> 00:10.410
搭建起来

00:10.670 --> 00:14.770
当然的话 我们这边服务期段的话会搭建的是一个这个三层的这个架构

00:15.290 --> 00:17.070
这个关于什么是三层架构

00:17.330 --> 00:20.410
这个袁老师在讲漏的接视的时候是介绍过的

00:21.170 --> 00:23.730
对吧 我们这边再简单的来回顾一下

00:24.250 --> 00:26.030
好 什么是这个三层架构呢

00:26.290 --> 00:30.390
三层架构就是将整个业务化分为三层

00:30.910 --> 00:31.710
哪三层呢

00:31.970 --> 00:32.990
界面层

00:33.250 --> 00:34.530
业务逻辑层

00:34.790 --> 00:36.310
数据访问层

00:36.570 --> 00:38.110
也就是你看下面的这个图

00:38.370 --> 00:39.650
这个是我们的客户端

00:39.910 --> 00:41.190
这个是我们的服务期段

00:41.450 --> 00:43.230
那服务期段这边就有三层

00:43.490 --> 00:45.790
这边表现层 表现层就是这个界面层

00:46.050 --> 00:48.350
然后加这边的这个业务层

00:48.610 --> 00:50.410
业务层就是专门负责

00:50.670 --> 00:51.950
这个业务逻辑的

00:52.450 --> 00:58.090
比如你这个添加用户呀 删除文章呀 添加文章呀 这些你具体的业务逻辑

00:58.590 --> 01:00.630
好 接下来吧 这边19层

01:00.890 --> 01:03.190
19层的话又被称之为这个数据

01:03.970 --> 01:04.730
访问层

01:04.990 --> 01:07.550
他就是专门和这个数据库打交道的

01:08.330 --> 01:08.830
看了没有

01:09.090 --> 01:11.130
所以我们这个后段的话就一层一层的

01:11.650 --> 01:15.750
你请求来 请求来了之后先到达哪里呢 先到达表现层

01:16.510 --> 01:18.310
表现层接受到这个请求

01:18.570 --> 01:21.130
好 表现层接受到请求之后再把这个

01:21.390 --> 01:22.150
给业务层

01:22.410 --> 01:25.210
业务层来做这个具体的这个业务处理

01:25.470 --> 01:28.290
比如说我要添加一个文章 我能不能添加

01:29.050 --> 01:29.570
对不对

01:29.770 --> 01:31.830
添加了这篇文章 它合不合规

01:32.330 --> 01:33.350
就是

01:33.610 --> 01:34.650
有没有违规

01:34.910 --> 01:36.390
对不对 然后反正一些

01:36.650 --> 01:39.250
其他的乱七八糟的一些业务上的这些逻辑

01:39.510 --> 01:41.550
完了之后 然后接下来19层

01:41.810 --> 01:44.630
19层就是负责和数据库打交道

01:45.130 --> 01:46.930
他只负责和这个数据库打交道

01:47.950 --> 01:48.470
没有没有

01:48.730 --> 01:50.510
这个的话就是我们的这个三层架构

01:51.030 --> 01:53.330
这个之前袁老师也是给大家介绍过的

01:54.610 --> 01:58.710
好 然后下面每一层的这个作用啊 我们这边再来看一下表示层

01:59.010 --> 02:03.530
他是主要对用户的请求接收 这里是接收

02:05.570 --> 02:08.130
接收啊 然后以及数据的返回

02:08.390 --> 02:13.250
业务逻辑层 他主要是负责对这个数据层的这个操作

02:13.510 --> 02:16.690
然后这里其实主要是一些业务逻辑

02:18.130 --> 02:20.170
好 接下来这个数据访问层

02:20.430 --> 02:23.250
数据访问层你就不能包含任何的这个逻辑处理了

02:23.750 --> 02:26.050
他主要是什么呢 他主要是和这个数据库

02:26.570 --> 02:27.850
进行一个这个对接

02:28.730 --> 02:33.530
ok 好 那我们这边的话就是我们要使用我们这个express

02:34.010 --> 02:37.530
我们把这个项目搭建起来 我们要搭建这个三层架构

02:37.890 --> 02:42.130
那我们这边的话 整体的这个项目目录 大致就是这个样子

02:42.850 --> 02:47.170
啊 那我们这边让我们来试一下 我们这边的话 我打开我的这个中端

02:49.810 --> 02:54.490
啊 打开中端这我把它放大一点啊 放大一点 我们能够看得到

02:56.010 --> 02:58.130
好 然后接下来的话 我这边cd

02:59.110 --> 03:01.070
cd dextop

03:01.630 --> 03:07.230
啊 移动到我的这个桌面上啊 然后接下来 你首先的话 你要安装那个express这个脚手架

03:08.030 --> 03:13.310
把那个脚手架安装了啊 那个脚手架的话叫做express generator啊

03:15.190 --> 03:22.510
啊 就是这边 这边你首先需要npmon i然后接下来干净啊 全局安装 安装这个express

03:23.550 --> 03:25.270
然后干这个generator

03:26.170 --> 03:28.810
g n e r a t o r

03:29.450 --> 03:33.970
express generator 先把这个这个的话是express的一个脚手架工具

03:34.530 --> 03:38.770
什么是脚手架啊 大家学过这个vue 也学过这个react

03:39.330 --> 03:41.930
啊 对这个脚手架的这个概念应该是不陌生的

03:42.690 --> 03:46.130
使用这个脚手架的话 是不是可以快速的帮我们搭建一个项目

03:46.970 --> 03:49.250
对不对 快速的这个项目就搭建起来了

03:49.890 --> 03:54.290
所以你首先的话 你如果没有装过这个express generator 你先把这个装一下

03:54.750 --> 04:01.310
我这边是装过的 我这边就不装了 啊 装完了之后 然后接下来你可以输入express刚刚

04:02.030 --> 04:06.550
version 回车 你看这边这边呢 是不是就是会显示出你这个

04:07.830 --> 04:13.150
你的这个脚手架啊 你这个express脚手架的版本 我这边是4.16.0

04:13.870 --> 04:18.670
ok 好 那接下来完事之后 我就可以在我的桌面上创建这个项目了

04:19.230 --> 04:23.590
好 那我这边的话 我就创建一个什么呢 创建一个 他怎么创建的 他就是express

04:24.870 --> 04:32.670
啊 非常简单express空格 然后接下来你的这个项目名称啊 项目名称的话 我们这边叫什么呢 就叫做my site

04:33.670 --> 04:36.110
然后刚这个express

04:37.670 --> 04:37.870
2

04:39.030 --> 04:44.230
ok 这个就是我们的项目名 好 大家你敲回车 敲回车之后 你会发现非常快

04:44.990 --> 04:49.270
对不对 一下子就创建好了 啊一下子就创建好了 为什么呢 因为他没有装包

04:50.190 --> 04:53.630
没有装包 就依赖包都还没有装 依赖包需要你自己来装

04:54.350 --> 04:59.350
好 然后接下来你在这边 你在这边的话 是不是就可以看到这个my site express2

04:59.950 --> 05:02.430
是我们桌面上 因为我这边是不是刚才是在这个桌面上

05:03.230 --> 05:07.990
对吧 所以你看到这个桌面上就生成了这么一个目录啊 my site express2

05:08.510 --> 05:12.230
好 然后接下来我们把他拉到什么呢 拉到我们的这个withcode里面

05:13.950 --> 05:20.110
好 拉过来 拉过来之后 这样你这边的话 你可以检查的这个简单的观察一下啊 这个

05:20.690 --> 05:30.210
整体的这个目录也非常简单 对不对 这边的一个app点接式啊 这个就是我们的这个项目跟目录啊 然后接下来 这边的一个这个package点接生

05:30.810 --> 05:36.770
这里的话就是有一些这个依赖 对吧 但是你可以看到这里的话没有什么的 没有那个loader module

05:37.890 --> 05:43.250
是不是 没有loader module啊 因为他没有装这个依赖包啊 然后加这个public

05:43.690 --> 05:46.090
public就是你要返回给这个前端

05:46.830 --> 05:52.550
的一些这个数据 就是你的这个返回给前端的这个css啊 gs呀一些静态文件

05:52.990 --> 05:58.030
就放在这个public里面的 大家这个入词 入词里面呢 这里的话就是我们的路由

05:58.750 --> 06:05.310
大家这个viewsviews的话 这个是最早的时候啊 用这个模板引擎的时候会有这么一个目录

06:05.870 --> 06:08.990
views里面就存放什么了 存放一个一个的模板

06:09.630 --> 06:11.670
这个呢 模板引擎袁老师也是讲过的

06:12.530 --> 06:19.090
对不对 啊 但这个的话我们用不到啊 我们会用不到 好 那我们先让这个项目跑起来啊 那我这边的话

06:20.410 --> 06:25.290
过来 我把这个端口号我们把它改一下啊 因为在我这边

06:26.490 --> 06:31.730
在我这边的话 我这个写好的这个的话是3000我用了他默认的3000

06:32.170 --> 06:37.250
所以我们这边要把他的这个端口号改一下 在哪里改呢 你这边的话可以来到并

06:37.830 --> 06:42.670
并下面有一个这个三个w这个啊 这个文件这个文件你看这边

06:43.390 --> 06:44.590
这边的话是不是就是有一个

06:45.590 --> 06:50.670
端口哈对不对 默认是3000啊 那我们这边的把它改成301就可以了

06:51.630 --> 06:59.350
ok 301好 赶完之后 然后保存 保存之后 然后接下来这边首先第一步干嘛呢 先装依赖

07:00.350 --> 07:02.670
ok npmi装依赖

07:02.970 --> 07:07.530
啊啊啊 这个就可以关了 这个控制台就可以关了

07:08.250 --> 07:15.850
好 我们这边呢 等待他装依了 是不是装好了 对不对 啊 非常快 装好之后 然后接下怎么启动呢 看这个package点节省

07:16.490 --> 07:18.330
这边呢 是不是这个start

07:19.170 --> 07:23.410
对不对啊 这里的话我们也不需要去改它 我们这边就直接npm

07:24.410 --> 07:24.810
start

07:25.810 --> 07:27.490
sqrt start走

07:28.310 --> 07:35.550
啊 你看他这里 这里的话他程序没有结束 说明什么呢 说明的话 我们这边的话就已经就启动了

07:36.110 --> 07:40.190
啊 就启动 但是他这个启动比较烦 为什么呢 就是他没有任何的这个提示

07:41.150 --> 07:45.310
对不对啊 那我们这边的话我们可以干嘛呢 我们这边仍然是进这个这个文件

07:45.870 --> 07:48.510
3w这个文件啊 我们这边找到最后

07:49.510 --> 07:52.390
最后啊 最后的话他这边其实有个这个回调函数

07:53.310 --> 07:56.510
看到没有 这里有个这个回调函数就是你这个理神灵

07:57.210 --> 08:02.570
就是你这个监听的这个回调函数 好了 我们在这边的话我们可以写一下啊 我们这边的话cancel

08:04.090 --> 08:05.810
cancel.log

08:06.890 --> 08:12.090
啊 服务器端程序啊 就或者就服务器端一起动

08:13.330 --> 08:14.210
一起动

08:16.210 --> 08:18.090
一起动监听

08:19.330 --> 08:21.050
什么3001

08:21.890 --> 08:22.250
端口

08:23.930 --> 08:26.050
对不对 ok 你给一个这个

08:26.570 --> 08:32.890
好 保存一下 保存了之后 然后接下来这边的话要重启一下服务器 你注意啊 服务器端程序

08:33.490 --> 08:39.370
只要你改变了 必须要重启服务器 ok 所以我们这边重新启动一下

08:41.700 --> 08:45.460
好 这边是吧 服务器端一起动 监听3001端口

08:46.340 --> 08:50.700
对不对 ok 好了 接下来我们来到我们的这边 我们来访问一下

08:52.500 --> 08:54.780
localhost 3001走

08:55.780 --> 09:02.080
你看 welcome to express 那说明我们的这个服务器 是不是现在在正常工作

09:03.440 --> 09:06.640
对不对 现在的话是这个正常工作的啊

09:07.280 --> 09:12.880
好 然后接下来的话回到我们这边 回到我们这边 我们这边的话 接下来我们就要对我们的这个目录

09:13.440 --> 09:14.880
进行一个修改

09:15.680 --> 09:20.400
我们怎么改呢 我们首先的话 我们要就是 因为我们是要这个三层架构嘛

09:21.220 --> 09:25.980
对不对 我们这个三层架构 所以我们这边的话 就是要有具体的这个每一层

09:26.620 --> 09:32.020
对应一个文件家啊 那我们一层一层 首先的话 这里表现成

09:32.660 --> 09:36.140
表现成的话 我们这边对应的是哪个目录呢 对应的就是这个入词

09:37.620 --> 09:40.860
对应的是入词啊 我这写的有啊 这写的有 就是这个入词

09:41.540 --> 09:46.980
这个的话就是我们的表现成啊 表现成的话 在早期的时候 他负责干嘛呢 负责将这个

09:47.700 --> 09:54.020
业务逻辑层给了这个数据 塞到那个模板里面 因为早期的话 还会用那个模板引擎嘛

09:54.740 --> 09:59.540
啊 他就是把它塞到这个模板引擎里面 再加组装成这个新的页面 来把这个页面

09:59.940 --> 10:08.940
返回给客户端 但是现在的话 这个表现成的话 基本就不会做这些事情了 因为现在的话 我们服务期的只提供什么呢 只提供数据接口

10:09.660 --> 10:15.900
啊 就是提供把这个api定好之后 只提供这个数据接口 不存在这个要组装页面这么一说

10:16.860 --> 10:21.300
啊 说是现在的话 这个一般我们的这个表现成的话 就用什么呢 就用这个路由层

10:22.300 --> 10:24.500
啊 这个入词是不是存放路由的

10:25.380 --> 10:30.540
对不对啊 就用这个路由啊 这个就是我们的表现成 好 然后接下来的话 这边这个

10:31.620 --> 10:32.740
啊 业务逻辑层

10:34.020 --> 10:38.820
啊 业务逻辑层 业务逻辑层 的话 我们这边就需要新建一个目录啊 这边叫做service

10:39.420 --> 10:41.380
说来到我们这边 我们新建一个目录

10:42.100 --> 10:47.700
这边的话叫做service 这个的话就是什么呢 这个就是我们的这个业务业务层

10:48.340 --> 10:55.700
业务逻辑层 好的 最后一个 最后一个的话 这边这个数据访问层 我们这边新建一个叫做dao

10:56.700 --> 11:02.620
dao层 这个的话就是我们的这个数据访问层 也就是这一层的话 负责干嘛呢 负责和数据库打交道

11:03.540 --> 11:10.180
啊 回头的话 你这个比如数据库连接连接了之后 然后接下来的话 你要添加一个用户 删除一个用户

11:10.500 --> 11:14.820
他是不是要涉及到具体的这个操作数据库 对不对 都在这一层

11:16.140 --> 11:19.660
都在这一层 ok啊 所以说我们这边呢 我们新建

11:21.180 --> 11:23.740
再新建一个 新建一个叫做dao

11:25.300 --> 11:33.100
把这个目录建好 建好之后 然后接下来的话还需要干嘛呢 还需要把这个一些不必要的 把它删除 比如这个views

11:34.140 --> 11:35.660
views这个我们是用不到的

11:36.540 --> 11:39.700
对不对 用不到的话 我们就不需要了 所以我们把这个的话 我们就把它删除掉

11:40.620 --> 11:41.300
啊 把它删除

11:42.700 --> 11:48.100
啊 你动到这个费字楼 好 然后接下来你这边删除了之后 你要注意 你要检查哈

11:48.700 --> 11:54.460
你要检查我们这边大致来漏一点这个app点接射啊 这边的话 它是这个

11:55.380 --> 11:56.860
引入这个中间键

11:58.020 --> 12:03.340
对吧 引入中间键 然后使用 然后在这里 这里是不是就是在设置这个模板引擎

12:04.260 --> 12:07.540
你看一下这里app点setviews啊 对应的是这个

12:08.060 --> 12:12.140
当前目录下面的这个views目录 views目录 然后我们这边干是不是已经把它删除了

12:12.700 --> 12:19.620
对不对 它这边还设置了我们的这个模板引擎 是什么呢 是这个界的 那这两句话我们就干完了 这就不需要了

12:21.180 --> 12:28.540
对不对 压根就不需要了啊 那回头你再看一下这个app点接是其实这个很简单 连这单码还不到50行

12:29.260 --> 12:33.380
对不对 你大字漏液啊 大字漏液 这一块的话是在引包

12:34.180 --> 12:38.420
对不对 这一块我们这边把注射给他写下吧 这里的话是在引包

12:41.670 --> 12:50.390
这里的话是在引包 啊 引包没什么好说的 好 然后加这这这里这两句话是在干嘛 是不是在引用这个路由啊 你看这边

12:50.590 --> 12:52.230
quire入词下面的index

12:53.030 --> 12:56.790
入词下面的index 对不对 入词下面的user 这个是不是引入路由

12:59.280 --> 13:02.040
引入路由 对不对 然后接下来的话 这里是干嘛

13:02.440 --> 13:05.080
这里的话是不是创建服务器实力

13:07.080 --> 13:13.120
创建服务器实力啊 我们整个这个express是不是就一个实力

13:14.400 --> 13:17.920
对不对 好 然后加这里这里的话是不是在使用各种各样的中间键

13:20.030 --> 13:26.550
啊 使用各种各样的中间键

13:27.630 --> 13:33.590
对不对 然后包括这里 这里其实也是在这个使用中间键 只不过这里的话比较特殊 所以他这边给你打了一个这个

13:34.230 --> 13:39.510
空行 这里的话是使用什么 使用这个路由中间键 路由的话 我们这边是不是引入新来的

13:40.470 --> 13:45.910
对不对啊 所以这边是使用路由中间键

13:46.710 --> 13:54.830
啊 然后最后最后的话就是错误处理啊 这边是404 这边的话是这个arrow hander 这个我给你改成中文嘛 这里就是错误处理

13:55.790 --> 13:57.870
错误处理

13:58.630 --> 14:02.030
一旦发生了错误

14:02.670 --> 14:04.590
就会啊 到这里来

14:07.220 --> 14:10.740
看一秒啊 他就会到这里来啊 这里是一个错误处理的中间键

14:11.380 --> 14:14.780
ok 这就是我们整个app点击的事 也非常简单

14:15.540 --> 14:21.060
对不对 好 那既然这边你改了之后 你要干嘛呢 你这边的话改了之后 然后接下来你这边一定要重启

14:21.940 --> 14:28.220
啊 当然老师这样子啊 我把这停掉然后重启停掉重启啊 我们在开发的时候是不是比较麻烦啊

14:29.300 --> 14:33.740
对不对 很麻烦啊 所以你这边的话推荐你去安装一个叫做什么呢

14:33.980 --> 14:35.380
叫做这个loadm

14:36.100 --> 14:40.420
这个啊 这个东西的话相当好用 这个的话也是袁老师介绍过的

14:41.380 --> 14:48.100
对不对啊loadm 他就可以这个自动的监听你改变的文件 然后接下来自动的重新这个执行

14:48.740 --> 14:52.500
这个的话你把它全局安装一下啊npm i钢鸡

14:53.020 --> 15:00.300
全局安装安装了之后 然后我这边用的话 我也没有去配置什么啊 我这边就直接loadm 然后后面npm

15:00.940 --> 15:03.540
start 就这样子就可以了啊 回车

15:04.940 --> 15:11.620
看到没有 服务器端一起动 监听3001端口啊 回头那比如我把这个文件改一下啊 把这个分号删了

15:11.980 --> 15:17.500
然后要重新把它添加上 这个文件是不是改变了 改变了之后 然后接下来我这边保存

15:18.180 --> 15:19.780
你看 是不是自动就重启了

15:20.820 --> 15:25.980
对不对 叫方便一些啊 但是你用的时候 你注意啊 你用的时候 你把那个

15:26.780 --> 15:28.420
把那个就是自动保存

15:29.420 --> 15:32.580
哎 把那个自动保存你把他那个

15:34.340 --> 15:40.260
咋回事 等一下 等一下啊 你用的时候 把这个自动保存你把它取消掉

15:41.100 --> 15:46.820
你看我这边自动保存是没有勾选的 不然你敲一个制服 他这边就重启 敲一个制服就重启

15:47.380 --> 15:49.380
啊 除非你的电脑性能非常好

15:50.100 --> 15:54.580
对吧 非常好 他有些时候重启 次数太多了 他也会就是中途的话会有些错误

15:55.060 --> 16:04.940
说我这边建议啊 我只是建议 建议你把这个自动保存 把他取消掉 取消掉之后 让你这边编辑完了之后 然后点击全部保存 让他这边就只重启一次

16:06.220 --> 16:10.300
ok 好 然后其他的话 我看有没有什么要说的

16:11.100 --> 16:15.660
其他的话 暂时就没什么了 这一刻的话 我们就是把这个项目 把它搭建起来

16:16.140 --> 16:19.900
这边三成价格 三成价格 我们也就只干嘛呀 这只创建了一个目录而已

16:20.660 --> 16:24.300
对不对 一个dao目录 一个sorrys目录 啊 入词的话 他本身就有

16:25.100 --> 16:30.340
对不对 然后我们把那个他原本的那个六四 模板引擎的那个目录 我把它删除掉了

16:31.300 --> 16:37.460
大家下去的话 把这个项目自己搭建起来 好吧 好 这一刻就先到这里 再见

