WEBVTT

00:00.690 --> 00:02.690
接下来我们继续

00:03.690 --> 00:08.690
上节课的话把天家博客和分业获取博客

00:08.690 --> 00:09.690
把这两个做了

00:09.690 --> 00:11.690
这节课的话我们把剩下三个

00:11.690 --> 00:14.690
一个是获取其中一个博客

00:14.690 --> 00:16.690
修改其中一个博客

00:16.690 --> 00:18.690
以及删除其中一个博客

00:18.690 --> 00:19.690
把这个做了

00:19.690 --> 00:23.690
首先的话是获取其中一个博客

00:23.690 --> 00:25.690
获取其中一个博客的话

00:25.690 --> 00:26.690
这边的话又

00:26.690 --> 00:28.690
根据前台和后台

00:28.690 --> 00:30.690
它有不同的场景

00:30.690 --> 00:31.690
什么场景

00:31.690 --> 00:33.690
比如你看这里

00:33.690 --> 00:34.690
我这边是首页

00:34.690 --> 00:36.690
首页的话我这边是

00:36.690 --> 00:38.690
比如说有一篇文章

00:38.690 --> 00:39.690
对吧 有文章

00:39.690 --> 00:40.690
文章的话

00:40.690 --> 00:42.690
接下来我这边点击便利量

00:42.690 --> 00:43.690
就点击这篇文章

00:43.690 --> 00:44.690
进来的话

00:44.690 --> 00:46.690
这边的话是不是需要获取

00:46.690 --> 00:49.690
一篇博客的内容

00:49.690 --> 00:50.690
对不对

00:50.690 --> 00:51.690
这是前台获取

00:51.690 --> 00:54.690
接下来我看到你是前台获取的话

00:54.690 --> 00:55.690
我这边的话就是

00:55.690 --> 00:57.690
我的浏览数

00:57.690 --> 00:59.690
是要自征的

00:59.690 --> 01:00.690
看了没有

01:00.690 --> 01:01.690
但是后台的话

01:01.690 --> 01:02.690
比如说我这边后台

01:02.690 --> 01:03.690
后台的话

01:03.690 --> 01:05.690
比如说我这边文章列表

01:05.690 --> 01:06.690
然后便利量与常量

01:06.690 --> 01:07.690
比如说我点修改

01:07.690 --> 01:08.690
点修改的话

01:08.690 --> 01:09.690
这边

01:09.690 --> 01:10.690
你看这边的话

01:10.690 --> 01:12.690
它会有一个数据的回填

01:12.690 --> 01:13.690
对不对

01:13.690 --> 01:14.690
数据的回填的话

01:14.690 --> 01:15.690
那这边是不是也会

01:15.690 --> 01:17.690
涉及到文章的获取

01:17.690 --> 01:18.690
对不对

01:18.690 --> 01:19.690
但你这个文章的获取

01:19.690 --> 01:21.690
我这边比如说我刷新多次

01:21.690 --> 01:22.690
这边

01:22.690 --> 01:24.690
它是不是又会获取

01:24.690 --> 01:26.690
然后这边再刷新

01:26.690 --> 01:27.690
又会获取

01:27.690 --> 01:29.690
无论你在后台

01:29.690 --> 01:31.690
你这个获取这个单个文章

01:31.690 --> 01:33.690
获取多少次

01:33.690 --> 01:34.690
你这个前台的话

01:34.690 --> 01:36.690
你这个浏览数变不变

01:36.690 --> 01:38.690
是不影响这个前台的浏览数

01:38.690 --> 01:39.690
对不对

01:39.690 --> 01:40.690
比如说我现在前台浏览数

01:40.690 --> 01:41.690
我刷新

01:41.690 --> 01:43.690
刷新的话它这边只会加一

01:43.690 --> 01:44.690
只会加一

01:44.690 --> 01:45.690
走

01:46.690 --> 01:47.690
看了没有

01:47.690 --> 01:49.690
这浏览数是不是只会加一

01:49.690 --> 01:50.690
对不对

01:50.690 --> 01:52.690
说这边的话就有不同的这个场景

01:52.690 --> 01:53.690
就是我需要干嘛呢

01:53.690 --> 01:55.690
需要知道是前台

01:55.690 --> 01:57.690
它这个是获取单篇文章

01:57.690 --> 01:59.690
还是后台获取单篇文章

01:59.690 --> 02:01.690
因为不同的这个

02:01.690 --> 02:03.690
就是这个你是前台

02:03.690 --> 02:04.690
还是后台

02:04.690 --> 02:06.690
我需要做不同的这个处理

02:06.690 --> 02:07.690
那我怎么知道

02:07.690 --> 02:09.690
它是前台还是后台呢

02:09.690 --> 02:11.690
如果是前台这边获取的话

02:11.690 --> 02:13.690
它是不需要带这个token过来的

02:13.690 --> 02:14.690
后台的话

02:14.690 --> 02:15.690
这边的话

02:15.690 --> 02:17.690
它是会带一个这个token过来

02:17.690 --> 02:18.690
所以我们这边的话

02:18.690 --> 02:19.690
可以这样子来做

02:19.690 --> 02:21.690
我们这边的话可以

02:22.690 --> 02:23.690
const

02:23.690 --> 02:25.690
const一个req

02:25.690 --> 02:26.690
haters

02:26.690 --> 02:28.690
等于一个req

02:28.690 --> 02:30.690
这个req

02:30.690 --> 02:32.690
点这个haters

02:32.690 --> 02:33.690
haters

02:33.690 --> 02:35.690
首先拿到什么呢

02:35.690 --> 02:37.690
拿到它的这个请求头

02:37.690 --> 02:38.690
拿到请求头之后

02:38.690 --> 02:39.690
然后接下来的话

02:39.690 --> 02:40.690
我们这边

02:40.690 --> 02:42.690
res点剩的

02:42.690 --> 02:43.690
这一块不变

02:43.690 --> 02:44.690
是吧

02:44.690 --> 02:45.690
好然后接下来的话

02:45.690 --> 02:46.690
这边

02:47.690 --> 02:48.690
await

02:48.690 --> 02:50.690
这边我们得写个方法

02:50.690 --> 02:52.690
来到我们的这个service这边

02:53.690 --> 02:54.690
这边的话

02:54.690 --> 02:56.690
我们是获取单篇文章

02:56.690 --> 02:58.690
根据id

02:58.690 --> 03:00.690
根据id

03:00.690 --> 03:03.690
获取某一篇

03:03.690 --> 03:05.690
文

03:05.690 --> 03:06.690
好那接下来

03:06.690 --> 03:07.690
我们这边model

03:07.690 --> 03:09.690
点expose

03:09.690 --> 03:13.900
点fender

03:13.900 --> 03:15.900
这个blog

03:16.900 --> 03:18.900
byid

03:18.900 --> 03:20.900
然后这个service

03:20.900 --> 03:22.900
等于一个sync

03:22.900 --> 03:27.490
然后function

03:27.490 --> 03:28.490
然后这里

03:28.490 --> 03:30.490
这里一会会接受参数

03:30.490 --> 03:31.490
把这个方法

03:31.490 --> 03:32.490
这边

03:32.490 --> 03:33.490
在这边写吧

03:33.490 --> 03:34.490
写它可以自动导入

03:34.490 --> 03:36.490
这边就是

03:36.490 --> 03:38.800
应该是

03:38.800 --> 03:39.800
band

03:39.800 --> 03:41.800
这个blog

03:41.800 --> 03:42.800
byid

03:42.800 --> 03:43.800
service

03:43.800 --> 03:44.800
导入没有

03:44.800 --> 03:45.800
导入了

03:45.800 --> 03:46.800
对不对

03:46.800 --> 03:47.800
好然后接下来

03:47.800 --> 03:48.800
这边我就传两个参数

03:48.800 --> 03:50.800
一个是req

03:50.800 --> 03:52.800
点parmas

03:52.800 --> 03:53.800
点id

03:53.800 --> 03:55.800
这个就是把这个id

03:55.800 --> 03:56.800
把他传过去

03:56.800 --> 03:57.800
对不对

03:57.800 --> 03:58.800
把这个id传过去

03:58.800 --> 03:59.800
好然后接下来

03:59.800 --> 04:00.800
我这边我再来

04:00.800 --> 04:01.800
传的一个东西

04:01.800 --> 04:02.800
什么东西呢

04:02.800 --> 04:03.800
iq

04:03.800 --> 04:05.800
这个haters

04:05.800 --> 04:07.800
点这个

04:07.800 --> 04:09.800
authorization

04:10.800 --> 04:12.800
把这个也传过去

04:12.800 --> 04:14.800
把他带来的这个token

04:14.800 --> 04:16.800
我也把它传过去

04:16.800 --> 04:17.800
传过去之后

04:17.800 --> 04:18.800
然后接下来在这边

04:18.800 --> 04:19.800
这边的话

04:19.800 --> 04:21.800
我们就可以进行一个

04:21.800 --> 04:22.800
判断

04:22.800 --> 04:23.800
判断它

04:23.800 --> 04:25.800
有没有这个token

04:25.800 --> 04:26.800
那我们这边

04:26.800 --> 04:27.800
我们来

04:27.800 --> 04:28.800
首先的话

04:28.800 --> 04:29.800
我们这边

04:29.800 --> 04:30.800
先获取这篇文章

04:30.800 --> 04:31.800
这边的话

04:31.800 --> 04:33.800
我们来到我们的

04:33.800 --> 04:37.800
blog.do

04:37.800 --> 04:38.800
这边

04:38.800 --> 04:44.070
这边让我们导出一个方法

04:44.070 --> 04:45.070
这边是

04:45.070 --> 04:47.070
根据id

04:47.070 --> 04:52.070
获取其中一篇文章

04:52.070 --> 04:53.070
这边就是

04:53.070 --> 04:56.070
model.expose

04:56.070 --> 04:58.070
点

04:58.070 --> 04:59.070
这里就是

04:59.070 --> 05:02.070
bandblog

05:02.070 --> 05:05.070
然后byid

05:05.070 --> 05:07.070
然后dao

05:07.070 --> 05:09.070
等于一个async

05:09.070 --> 05:11.070
function

05:11.070 --> 05:12.070
这边

05:12.070 --> 05:13.070
是不是就是

05:13.070 --> 05:15.070
应该是传一个id过来

05:15.070 --> 05:16.070
对不对

05:16.070 --> 05:17.070
传一个id过来

05:17.070 --> 05:19.070
一个传一篇文章的id

05:19.070 --> 05:20.070
然后既然我这边

05:20.070 --> 05:21.070
通过blog

05:21.070 --> 05:22.070
blogmodel.expose

05:22.070 --> 05:25.070
model.fand

05:25.070 --> 05:28.070
fandbyid

05:28.070 --> 05:29.070
byid

05:29.070 --> 05:30.070
然后把id

05:30.070 --> 05:31.070
把它传过去

05:31.070 --> 05:32.070
传过去之后

05:32.070 --> 05:33.070
然后下来

05:33.070 --> 05:34.070
这边要关联一下

05:34.070 --> 05:38.450
这里的话就是increwed

05:38.450 --> 05:39.450
increwed

05:39.450 --> 05:40.450
然后下来

05:40.450 --> 05:41.450
这边

05:41.450 --> 05:43.450
首先model

05:43.450 --> 05:44.450
model对应的是什么

05:44.450 --> 05:46.450
是blogtype

05:46.450 --> 05:48.450
我们关联blogtype

05:48.450 --> 05:49.450
对吧

05:49.450 --> 05:51.450
s

05:51.450 --> 05:55.210
这边category

05:55.210 --> 05:56.210
category

05:56.210 --> 05:57.210
这边找

05:57.210 --> 05:58.210
找了之后

05:58.210 --> 05:59.210
然后接下来

05:59.210 --> 06:00.210
avait一下

06:00.210 --> 06:01.210
等待

06:01.210 --> 06:02.210
等待找完之后

06:02.210 --> 06:03.210
然后接下来干嘛呢

06:03.210 --> 06:05.210
把它返回

06:05.210 --> 06:06.210
看到没有

06:06.210 --> 06:07.210
这就是我们的dao程

06:07.210 --> 06:08.210
很简单

06:08.210 --> 06:10.210
根据你传入的id

06:10.210 --> 06:11.210
我们来找

06:11.210 --> 06:12.210
找的时候

06:12.210 --> 06:14.210
我们这边要进行一个关联

06:14.210 --> 06:15.210
对吧

06:15.210 --> 06:17.580
要进行一个关联

06:17.580 --> 06:19.580
你看我们之前关联了之后

06:19.580 --> 06:20.580
这边

06:20.580 --> 06:21.580
关联之后

06:21.580 --> 06:22.580
你看这边

06:22.580 --> 06:23.580
category

06:23.580 --> 06:24.580
对象

06:24.580 --> 06:25.580
对吧

06:25.580 --> 06:26.580
所以这里一定要

06:26.580 --> 06:28.580
做这个关联查询

06:28.580 --> 06:29.580
好

06:29.580 --> 06:30.580
这里就不多说了

06:30.580 --> 06:31.580
然后我们这边

06:31.580 --> 06:33.580
这边是不是应该是

06:33.580 --> 06:34.580
调用

06:34.580 --> 06:36.580
刚才在doa程

06:36.580 --> 06:38.580
所写的这个方法

06:38.580 --> 06:39.580
对吧

06:39.580 --> 06:40.580
fandblog

06:40.580 --> 06:44.900
byiddo

06:44.900 --> 06:46.900
这边把什么呢

06:46.900 --> 06:47.900
这边就是应该是

06:47.900 --> 06:48.900
接受两个东西

06:48.900 --> 06:49.900
因为你这边

06:49.900 --> 06:50.900
传了两个

06:50.900 --> 06:51.900
对吧

06:51.900 --> 06:52.900
一个是id

06:52.900 --> 06:53.900
一个是什么

06:53.900 --> 06:54.900
你的这个token

06:54.900 --> 06:56.900
我们这边就叫做os

06:56.900 --> 06:57.900
好

06:57.900 --> 06:58.900
然后这边

06:58.900 --> 07:00.900
这边就只需要把id

07:00.900 --> 07:01.900
把它传过去

07:01.900 --> 07:02.900
传过去之后

07:02.900 --> 07:03.900
然后加这边const

07:03.900 --> 07:05.900
data

07:05.900 --> 07:06.900
拿到

07:06.900 --> 07:07.900
好

07:07.900 --> 07:08.900
拿到之后

07:08.900 --> 07:09.900
然后接下来的话

07:09.900 --> 07:10.900
这里

07:10.900 --> 07:11.900
这里的话

07:11.900 --> 07:12.900
首先拿到了

07:12.900 --> 07:13.900
这篇博文

07:13.900 --> 07:15.900
拿到这篇博文之后

07:15.900 --> 07:16.900
首先的话

07:16.900 --> 07:17.900
需要重新处理

07:17.900 --> 07:18.900
首先

07:18.900 --> 07:19.900
需要

07:19.900 --> 07:25.420
这篇博文

07:25.420 --> 07:27.420
首先需要

07:27.420 --> 07:28.420
重新

07:28.420 --> 07:29.420
处理

07:29.420 --> 07:31.420
这个toc

07:31.420 --> 07:32.420
toc的话

07:32.420 --> 07:33.420
因为它是个制服创

07:33.420 --> 07:34.420
我们需要把它干嘛

07:34.420 --> 07:36.420
重新转成输所

07:36.420 --> 07:37.420
对不对

07:37.420 --> 07:39.420
所以这边data.data

07:39.420 --> 07:40.420
values

07:40.420 --> 07:41.420
它是存在data values

07:41.420 --> 07:42.420
里面的

07:42.420 --> 07:43.420
我们这边的话

07:43.420 --> 07:44.420
没解构

07:44.420 --> 07:45.420
对吧

07:45.420 --> 07:46.420
我们这边就是

07:46.420 --> 07:47.420
没有解构

07:47.420 --> 07:48.420
然后返回data values

07:48.420 --> 07:49.420
直接返回到常讯结果

07:49.420 --> 07:50.420
所以这边就是

07:50.420 --> 07:51.420
data.data values

07:51.420 --> 07:54.420
它有一个这个toc

07:54.420 --> 07:55.420
就应该等于什么

07:55.420 --> 07:58.420
等于一个json.parse

07:58.420 --> 07:59.420
然后把这一块

07:59.420 --> 08:03.880
是把它扔进去

08:03.880 --> 08:04.880
对不对

08:04.880 --> 08:05.880
重新还原

08:05.880 --> 08:07.880
还原成一个输主

08:07.880 --> 08:11.260
还原

08:11.260 --> 08:13.260
还原

08:13.260 --> 08:15.260
成

08:15.260 --> 08:16.260
一个

08:16.260 --> 08:17.260
输主

08:17.260 --> 08:18.260
ok 这是第一步

08:18.260 --> 08:19.260
好

08:19.260 --> 08:20.260
然后接下来

08:20.260 --> 08:21.260
接下来的话

08:21.260 --> 08:23.630
就根据

08:23.630 --> 08:25.630
根据os

08:25.630 --> 08:28.630
是否有值

08:29.630 --> 08:31.630
来决定

08:31.630 --> 08:32.630
什么呢

08:32.630 --> 08:34.630
来决定这个浏览数

08:34.630 --> 08:36.630
浏览数

08:36.630 --> 08:38.630
是否要

08:38.630 --> 08:39.630
自征

08:40.630 --> 08:41.630
对吧

08:41.630 --> 08:42.630
所以我们这边就eve

08:42.630 --> 08:43.630
你这边那是

08:43.630 --> 08:44.630
如果是前端

08:44.630 --> 08:46.630
前端的是不是需要

08:46.630 --> 08:47.630
就是浏览数自征

08:47.630 --> 08:48.630
前端的话

08:48.630 --> 08:49.630
它是没有token的

08:49.630 --> 08:51.630
所以这边那就是os

08:52.630 --> 08:53.630
对吧

08:53.630 --> 08:54.630
如果非os

08:54.630 --> 08:55.630
那我们这边就data

08:55.630 --> 08:58.630
点这个scan number

08:58.630 --> 08:59.630
叫加

08:59.630 --> 09:00.630
好 然后接下来这边

09:00.630 --> 09:01.630
await

09:02.630 --> 09:04.630
data.save

09:05.630 --> 09:06.630
保存

09:07.630 --> 09:10.140
怎么回事

09:10.140 --> 09:12.140
data.save

09:15.140 --> 09:16.140
它这边

09:16.140 --> 09:18.140
自动就加出来了

09:18.140 --> 09:19.140
好 这边

09:19.140 --> 09:20.140
await

09:20.140 --> 09:21.140
data.save

09:21.140 --> 09:22.140
是保存

09:22.140 --> 09:23.140
保存了之后

09:23.140 --> 09:24.140
然后接下来

09:24.140 --> 09:25.140
好 这边

09:25.140 --> 09:26.140
返回

09:26.140 --> 09:27.140
return

09:27.140 --> 09:29.140
return一个format

09:29.140 --> 09:30.140
response

09:30.140 --> 09:32.140
这边那就是应该是0

09:32.140 --> 09:34.140
然后接下来这里

09:35.140 --> 09:37.140
然后data.data

09:37.140 --> 09:39.140
values

09:39.140 --> 09:40.140
对不对

09:40.140 --> 09:42.140
然后这边blogs

09:42.140 --> 09:43.140
这边没什么

09:43.140 --> 09:44.140
我们这个

09:44.140 --> 09:46.140
获取其中一个博客

09:46.140 --> 09:47.140
就写完了

09:47.140 --> 09:48.140
你主要注意的就是

09:48.140 --> 09:49.140
这边什么呢

09:49.140 --> 09:50.140
我们除了id以外

09:50.140 --> 09:52.140
我们这边还多传了一个

09:53.140 --> 09:54.140
根据这个

09:54.140 --> 09:56.140
还有没有传这个token

09:56.140 --> 09:58.140
因为这个前端是没有token的

09:58.140 --> 09:59.140
对不对

09:59.140 --> 10:01.140
因为我们前端这边又不存在这个

10:01.140 --> 10:02.140
就是前台

10:02.140 --> 10:03.140
前台的话

10:03.140 --> 10:05.140
这边又不存在什么登录处理

10:05.140 --> 10:06.140
对不对

10:06.140 --> 10:07.140
又不存在什么登录

10:07.140 --> 10:08.140
直接进来就可以了

10:08.140 --> 10:11.140
所以这边是不存在这个token的

10:11.140 --> 10:12.140
然后后台这个

10:12.140 --> 10:14.140
后台这个我们是不是做了登录的

10:14.140 --> 10:15.140
对不对

10:15.140 --> 10:16.140
它是有这个token的

10:16.140 --> 10:19.140
我这边需要根据你是前台还是后台

10:19.140 --> 10:21.140
我需要做不同的处理

10:21.140 --> 10:23.140
如果是前台我

10:23.140 --> 10:25.140
这个浏览树我是要执政的

10:25.140 --> 10:26.140
对不对

10:26.140 --> 10:27.140
你如果是后台的话

10:27.140 --> 10:29.140
我这个浏览树不需要执政

10:31.140 --> 10:32.140
好

10:32.140 --> 10:34.140
然后我们来测试一下吧

10:34.140 --> 10:35.140
好吧

10:35.140 --> 10:36.140
我们来测试一下

10:36.140 --> 10:38.140
我们这边让我们全部保存

10:38.140 --> 10:39.140
保存看一下有没有问题

10:39.140 --> 10:41.510
没有任何问题

10:41.510 --> 10:42.510
对吧

10:42.510 --> 10:43.510
没有问题

10:43.510 --> 10:44.510
这边poster man

10:44.510 --> 10:45.510
这边仍然是get

10:45.510 --> 10:46.510
好

10:46.510 --> 10:47.510
然后接下来的话

10:47.510 --> 10:48.510
这边的话就是应该是blog

10:48.510 --> 10:50.510
我们来看一下我们的文章

10:51.510 --> 10:52.510
现在的话

10:52.510 --> 10:53.510
这边有两篇文章

10:53.510 --> 10:54.510
对不对

10:54.510 --> 10:56.510
这边是id2

10:56.510 --> 10:57.510
然后3

10:58.510 --> 10:59.510
好

10:59.510 --> 11:00.510
那我们这边就是

11:00.510 --> 11:01.510
比如说id2

11:02.510 --> 11:03.510
好

11:03.510 --> 11:04.510
然后接下来我们这边

11:04.510 --> 11:05.510
走

11:05.510 --> 11:07.510
这边报错了是吧

11:07.510 --> 11:08.510
报了一个error

11:08.510 --> 11:10.510
我们来看一下这边报什么错

11:10.510 --> 11:17.590
这边的话是toc of undefined

11:18.590 --> 11:21.590
can't read toc of undefined

11:21.590 --> 11:23.590
我们看一下是哪个位置

11:23.590 --> 11:28.290
大概率是这个位置

11:28.290 --> 11:29.290
对不对

11:30.290 --> 11:31.290
这边是没有的

11:31.290 --> 11:32.290
好

11:32.290 --> 11:33.290
那接下来我们这边

11:33.290 --> 11:34.290
我们来处理一下

11:34.290 --> 11:35.290
好

11:35.290 --> 11:36.290
我们这边让我们来log

11:36.290 --> 11:37.290
log一下这个data

11:37.290 --> 11:38.290
我们看一下这个data

11:38.290 --> 11:39.290
好

11:39.290 --> 11:41.290
这边的话先不着急

11:41.290 --> 11:42.290
好

11:42.290 --> 11:43.290
保存

11:43.290 --> 11:44.290
保存之后

11:44.290 --> 11:46.290
然后接下来这边重新发送

11:46.290 --> 11:47.290
发送

11:47.290 --> 11:48.290
发送之后

11:48.290 --> 11:49.290
然后叫我们这边

11:49.290 --> 11:50.290
我们来看一下

11:50.290 --> 11:52.290
这边是一个pending

11:52.290 --> 11:54.290
我们这边忘记干嘛了

11:54.290 --> 11:56.290
这边是不是忘记await了

11:56.290 --> 11:57.290
对不对

11:57.290 --> 11:58.290
忘记await

11:58.290 --> 12:00.290
其他就没什么了

12:01.290 --> 12:02.290
保存

12:02.290 --> 12:03.290
保存之后

12:03.290 --> 12:04.290
然后接下来这边

12:04.290 --> 12:05.290
再来

12:05.290 --> 12:06.290
走

12:06.290 --> 12:08.290
这边是不是拿到了

12:08.290 --> 12:09.290
你看

12:09.290 --> 12:10.290
这边是不是拿到了

12:10.290 --> 12:11.290
拿到是不是其中一篇

12:11.290 --> 12:13.290
id2的这个文章

12:13.290 --> 12:14.290
对不对

12:14.290 --> 12:15.290
这边的关联查询

12:15.290 --> 12:16.290
这边是OK的

12:16.290 --> 12:17.290
我们多发几次

12:17.290 --> 12:18.290
多发几次

12:18.290 --> 12:19.290
多发几次

12:19.290 --> 12:21.290
因为我们现在是带了什么的

12:21.290 --> 12:24.290
我们现在的话是带了这个

12:24.290 --> 12:26.290
带了这个这个token的

12:26.290 --> 12:27.290
啊

12:27.290 --> 12:28.290
所以你这边的话

12:28.290 --> 12:29.290
你看看他的那个浏览书

12:29.290 --> 12:30.290
会不会增加

12:30.290 --> 12:31.290
浏览书

12:31.290 --> 12:32.290
我们这边把它关了

12:32.290 --> 12:34.920
重开吗

12:34.920 --> 12:35.920
重开

12:35.920 --> 12:36.920
浏览书会不会增加

12:36.920 --> 12:37.920
是不会增加

12:37.920 --> 12:38.920
对不对

12:38.920 --> 12:39.920
但你如果比如说

12:39.920 --> 12:41.920
你不带这个token

12:41.920 --> 12:42.920
不带token

12:42.920 --> 12:43.920
然后接下来

12:43.920 --> 12:45.920
我就认为你这边是一个前台获取

12:45.920 --> 12:46.920
我们这边走

12:46.920 --> 12:47.920
哦

12:47.920 --> 12:48.920
哦

12:48.920 --> 12:49.920
这边的话

12:49.920 --> 12:50.920
他是401

12:50.920 --> 12:51.920
啊

12:51.920 --> 12:52.920
为登陆

12:52.920 --> 12:53.920
OK

12:53.920 --> 12:54.920
这边的话就涉及到什么

12:54.920 --> 12:56.920
涉及到我们这边这个

12:56.920 --> 12:58.920
APP点接式里面

12:58.920 --> 12:59.920
这边

12:59.920 --> 13:02.920
是不是有些这个路由要进行一个排除啊

13:02.920 --> 13:04.920
你看我们这边好多都没写

13:04.920 --> 13:05.920
对不对

13:05.920 --> 13:06.920
写漏了

13:06.920 --> 13:07.920
所以我们这边呢

13:07.920 --> 13:08.920
我们把这个

13:08.920 --> 13:10.920
就是要排除的这个路由

13:10.920 --> 13:12.920
我们把它补一下

13:12.920 --> 13:13.920
OK

13:13.920 --> 13:14.920
我们把它补一下

13:14.920 --> 13:15.920
这个怎么补

13:15.920 --> 13:17.920
这个的话你就需要去看那个

13:17.920 --> 13:18.920
看那个AP文档

13:18.920 --> 13:19.920
比如说我们现在

13:19.920 --> 13:20.920
写了什么呢

13:20.920 --> 13:21.920
我们写了这个banner

13:21.920 --> 13:23.920
我们把这个前面的我们都把它补上

13:23.920 --> 13:25.920
前面好多都没有那个

13:25.920 --> 13:27.920
比如说我们写了点像某块

13:27.920 --> 13:29.920
比如说把这折起来

13:29.920 --> 13:31.920
我们写了这个首页标语

13:31.920 --> 13:32.920
对不对

13:32.920 --> 13:33.920
首页标语的话

13:33.920 --> 13:34.920
你看设置的话

13:34.920 --> 13:36.920
他是需要这个token的

13:36.920 --> 13:37.920
获取

13:37.920 --> 13:38.920
是不需要token

13:38.920 --> 13:39.920
对不对

13:39.920 --> 13:40.920
说接下来的话

13:40.920 --> 13:41.920
你在这边的话

13:41.920 --> 13:42.920
你就需要来补一下

13:42.920 --> 13:44.920
这边的话就复制一个

13:44.920 --> 13:46.920
这边的就是应该是什么呢

13:46.920 --> 13:48.920
这边就应该是API

13:48.920 --> 13:50.920
然后 banner

13:50.920 --> 13:51.920
对不对

13:51.920 --> 13:53.920
然后接下来这边get

13:53.920 --> 13:54.920
获取

13:54.920 --> 13:56.920
获取的时候是不需要的

13:56.920 --> 13:57.920
然后还有什么呢

13:57.920 --> 14:00.920
还有就是我们写了这个blog type

14:00.920 --> 14:01.920
对不对

14:01.920 --> 14:02.920
blog type

14:02.920 --> 14:04.920
我们这边我们来看一下

14:04.920 --> 14:06.920
就是博客的分类

14:06.920 --> 14:07.920
分类的话

14:07.920 --> 14:09.920
添加肯定是需要的

14:09.920 --> 14:11.920
获取

14:11.920 --> 14:13.920
获取一个分类

14:13.920 --> 14:14.920
是不需要

14:14.920 --> 14:15.920
对不对

14:15.920 --> 14:17.920
好大家删除

14:17.920 --> 14:19.920
删除是需要这个

14:19.920 --> 14:21.920
然后接下来这边修改

14:21.920 --> 14:23.920
修改也是需要的

14:23.920 --> 14:25.920
然后获取

14:25.920 --> 14:26.920
所有的分类

14:26.920 --> 14:28.920
是不是也是不需要的

14:28.920 --> 14:29.920
对不对

14:29.920 --> 14:30.920
说这边的话

14:30.920 --> 14:31.920
你把这个

14:31.920 --> 14:33.920
添加一下

14:33.920 --> 14:35.920
这边的话就

14:35.920 --> 14:36.920
URL

14:36.920 --> 14:39.920
这边就是blog type

14:39.920 --> 14:42.920
blog type

14:42.920 --> 14:45.920
然后接下来这边的是get

14:45.920 --> 14:46.920
还有什么呢

14:46.920 --> 14:47.920
还有是

14:47.920 --> 14:49.920
获取一个分类

14:49.920 --> 14:51.920
获取一个分类的话

14:51.920 --> 14:52.920
我们想想什么时候

14:52.920 --> 14:54.920
会获取其中一个分类

14:54.920 --> 15:00.320
什么时候会获取其中一个分类

15:00.320 --> 15:02.320
是不是在后台的时候

15:02.320 --> 15:03.320
后台的话

15:03.320 --> 15:04.320
你要对一个分类

15:04.320 --> 15:07.320
对它进行一个修改的时候

15:07.320 --> 15:09.320
会需要获取一个分类

15:09.320 --> 15:10.320
所以这边其实

15:10.320 --> 15:12.320
应该需要的一个token

15:12.320 --> 15:13.320
我这边的话

15:13.320 --> 15:14.320
我看这边

15:14.320 --> 15:15.320
我这边其实写的有

15:15.320 --> 15:17.320
需要授权

15:17.320 --> 15:18.320
但是我这边忘记写的

15:18.320 --> 15:19.320
我回头把这改一下

15:19.320 --> 15:21.320
我看一下这边怎么改

15:21.320 --> 15:23.320
这边是haters

15:23.320 --> 15:24.320
我看一下

15:24.320 --> 15:26.320
我把这改一下

15:26.320 --> 15:28.320
这边的话

15:28.320 --> 15:30.320
haters

15:30.320 --> 15:32.320
这边是需要这个token的

15:32.320 --> 15:33.320
看不看

15:33.320 --> 15:34.320
好 那我们这边

15:34.320 --> 15:35.320
我们把这个

15:35.320 --> 15:36.320
获取一个分类

15:36.320 --> 15:39.820
我把这改一下

15:39.820 --> 15:41.820
这边是haters

15:43.820 --> 15:45.820
没写吗

15:45.820 --> 15:46.820
没写

15:46.820 --> 15:47.820
那我回头我来添加

15:47.820 --> 15:48.820
我把这个添加一下

15:48.820 --> 15:50.820
我把这补上就可以了

15:50.820 --> 15:51.820
确定

15:51.820 --> 15:52.820
这边你看我这边

15:52.820 --> 15:53.820
token我都写的是

15:53.820 --> 15:55.820
是不是需要授权

15:55.820 --> 15:56.820
对不对

15:56.820 --> 15:57.820
下面忘记写了

15:57.820 --> 15:59.820
回头我下来的话

15:59.820 --> 16:01.820
把这补上

16:01.820 --> 16:03.820
然后这是这个

16:03.820 --> 16:04.820
block type

16:04.820 --> 16:05.820
就只有这个

16:05.820 --> 16:07.820
获取所有分类的时候

16:07.820 --> 16:08.820
这个是不需要的

16:08.820 --> 16:09.820
还有什么呢

16:09.820 --> 16:11.820
还有就是blog

16:11.820 --> 16:12.820
我们来看一下blog

16:12.820 --> 16:14.820
就这个博客

16:14.820 --> 16:15.820
博客的话你发布

16:15.820 --> 16:16.820
肯定是需要的

16:16.820 --> 16:17.820
对不对

16:17.820 --> 16:18.820
肯定是需要的

16:18.820 --> 16:20.820
然后修改

16:20.820 --> 16:22.820
修改是不是肯定也是需要

16:22.820 --> 16:23.820
对不对

16:23.820 --> 16:24.820
然后删除

16:24.820 --> 16:26.820
删除的话也是需要

16:26.820 --> 16:28.820
接下来分页获取

16:28.820 --> 16:30.820
分页获取的话

16:30.820 --> 16:32.820
分页获取这边

16:32.820 --> 16:34.820
也是需要这个

16:34.820 --> 16:38.820
然后获取单篇文章

16:38.820 --> 16:42.970
这边都需要

16:42.970 --> 16:43.970
这边没对

16:43.970 --> 16:44.970
这边没对

16:44.970 --> 16:45.970
这边的话你这个

16:45.970 --> 16:46.970
这两个

16:46.970 --> 16:48.970
分页获取和获取单篇

16:48.970 --> 16:50.970
这两个应该是不需要那个的

16:50.970 --> 16:51.970
不需要托肯的

16:51.970 --> 16:52.970
因为我这边我前台

16:52.970 --> 16:55.970
对我前台的话比如说这边点文章

16:55.970 --> 16:56.970
点文章然后接下来

16:56.970 --> 16:57.970
这边是不是出现这个文章

16:57.970 --> 16:58.970
对不对

16:58.970 --> 17:00.970
那我哪来的这个托肯呢

17:00.970 --> 17:01.970
我没有托肯

17:01.970 --> 17:02.970
包括我这边获取

17:02.970 --> 17:04.970
其中的一篇文章

17:04.970 --> 17:05.970
我这边前台的话

17:05.970 --> 17:06.970
是不是可以访问的

17:06.970 --> 17:07.970
对不对

17:07.970 --> 17:08.970
我这边是没有这个托肯的

17:08.970 --> 17:10.970
是不需要那个做

17:10.970 --> 17:12.970
就是jwt的验证的

17:12.970 --> 17:14.970
所以这边的话就还要改

17:14.970 --> 17:16.970
这边这两个

17:16.970 --> 17:17.970
这两个我一会

17:17.970 --> 17:19.970
一起把它改了

17:19.970 --> 17:20.970
好吧

17:20.970 --> 17:21.970
那接下来我们这边

17:21.970 --> 17:22.970
就只有哪几个呢

17:22.970 --> 17:23.970
就只有这个

17:23.970 --> 17:24.970
你记住吗一般来讲的话

17:24.970 --> 17:26.970
就是你要做什么新增啊

17:26.970 --> 17:27.970
修改啊

17:27.970 --> 17:28.970
删除啊

17:28.970 --> 17:30.970
这个的话需要做这个

17:30.970 --> 17:31.970
托肯的验证

17:31.970 --> 17:33.970
你如果只是单独的这个查询

17:33.970 --> 17:35.970
这个的话是不需要的

17:35.970 --> 17:36.970
好

17:36.970 --> 17:37.970
所以说我们这边

17:37.970 --> 17:38.970
让我们来写一下

17:38.970 --> 17:40.970
这边除了blog type

17:40.970 --> 17:41.970
然后还有什么呢

17:41.970 --> 17:43.970
还有这边的blog

17:43.970 --> 17:45.970
blog对吧

17:45.970 --> 17:46.970
好 这边还有什么呢

17:46.970 --> 17:47.970
还有获取就是

17:47.970 --> 17:49.970
其中的某一篇文章

17:49.970 --> 17:50.970
某篇文章的话

17:50.970 --> 17:52.970
这边的话你就要写这个政则了

17:52.970 --> 17:55.970
这边他支持这个政则表达是

17:55.970 --> 17:57.970
这边这个url

17:57.970 --> 17:58.970
就写政则

17:58.970 --> 17:59.970
政则的话

17:59.970 --> 18:01.970
他这边就是首先

18:01.970 --> 18:02.970
反斜杠

18:02.970 --> 18:04.970
然后这个斜杠api

18:04.970 --> 18:05.970
对不对

18:05.970 --> 18:06.970
你斜杠api的话

18:06.970 --> 18:07.970
他这边的话

18:07.970 --> 18:08.970
会认为是那个

18:08.970 --> 18:10.970
有可能是这个政则的结束符号

18:10.970 --> 18:11.970
所以这边反斜杠

18:11.970 --> 18:12.970
是不是进行转业

18:12.970 --> 18:13.970
对不对

18:13.970 --> 18:14.970
只要你是斜杠

18:14.970 --> 18:15.970
他就进行转业

18:15.970 --> 18:17.970
说我们这边又遇到斜杠

18:17.970 --> 18:19.970
斜杠blog

18:19.970 --> 18:20.970
说你这边的话

18:20.970 --> 18:22.970
这个斜杠是不是又得转业

18:22.970 --> 18:23.970
对不对

18:23.970 --> 18:24.970
好

18:24.970 --> 18:25.970
然后接下来的话

18:25.970 --> 18:27.970
这边又来转业

18:27.970 --> 18:28.970
转业之后

18:28.970 --> 18:29.970
然后后面跟一个什么呢

18:29.970 --> 18:31.970
后面跟一个数字

18:31.970 --> 18:32.970
所以我这边就是

18:32.970 --> 18:34.970
反斜杠d

18:34.970 --> 18:35.970
看到没有

18:35.970 --> 18:37.970
反斜杠d

18:37.970 --> 18:39.970
他后面支持用一个这个政则

18:39.970 --> 18:40.970
这个就是什么呢

18:40.970 --> 18:42.970
这个就是获取这个单篇文章

18:43.970 --> 18:44.970
获取单篇文章

18:44.970 --> 18:45.970
把这些路由

18:45.970 --> 18:47.970
我们把它排除一下

18:47.970 --> 18:48.970
保存

18:48.970 --> 18:51.340
保存之后

18:51.340 --> 18:53.340
然后接下来我们这边再来

18:54.340 --> 18:55.340
走

18:55.340 --> 18:57.340
现在是不是获取到了

18:57.340 --> 18:58.340
对不对

18:58.340 --> 18:59.340
拿到了

18:59.340 --> 19:00.340
这边走

19:00.340 --> 19:01.340
走

19:01.340 --> 19:02.340
我们多过去几次

19:02.340 --> 19:04.340
这边差不多点了五次

19:04.340 --> 19:05.340
点了五次的话

19:05.340 --> 19:08.340
现在他这个浏览素是要增加的

19:08.340 --> 19:09.340
对不对

19:09.340 --> 19:10.340
我们把这个关了

19:11.340 --> 19:12.340
打开

19:12.340 --> 19:13.340
看到没有

19:13.340 --> 19:14.340
这个 scan number

19:14.340 --> 19:16.340
增加了五次

19:16.340 --> 19:17.340
对不对

19:17.340 --> 19:18.340
增加了五次

19:18.340 --> 19:19.340
但你如果是后台

19:19.340 --> 19:20.340
后台的话

19:20.340 --> 19:21.340
他是会带一个这个

19:21.340 --> 19:22.340
token过去

19:22.340 --> 19:23.340
对不对

19:23.340 --> 19:24.340
再来走

19:24.340 --> 19:25.340
一

19:25.340 --> 19:26.340
二

19:26.340 --> 19:27.340
三

19:27.340 --> 19:28.340
四

19:28.340 --> 19:29.340
后台获取

19:29.340 --> 19:30.340
后台获取的话

19:30.340 --> 19:31.340
你这边他是不是不变

19:31.340 --> 19:32.340
对不对

19:32.340 --> 19:33.340
打开

19:33.340 --> 19:35.340
是不是仍然是五次

19:35.340 --> 19:36.340
对不对

19:36.340 --> 19:37.340
OK

19:37.340 --> 19:38.340
这就是关于这个

19:38.340 --> 19:40.340
获取这个单篇文章

19:40.340 --> 19:42.340
获取单篇文章

19:43.340 --> 19:44.340
好剩下两个

19:44.340 --> 19:46.340
一个是修改

19:46.340 --> 19:48.340
一个是这个

19:48.340 --> 19:49.340
删除

19:49.340 --> 19:50.340
OK

19:50.340 --> 19:52.340
好修改我们这边我们来写一下

19:52.340 --> 19:53.340
那这边的话

19:53.340 --> 19:55.340
首先来到这个 service 这边

19:55.340 --> 19:57.340
这边修改博客

19:57.340 --> 20:01.300
修改

20:01.300 --> 20:05.300
修改一篇博文

20:05.300 --> 20:07.300
好这边那就是 module

20:07.300 --> 20:09.300
点 expose

20:09.300 --> 20:10.300
点什么呢

20:10.300 --> 20:11.300
这边那就是

20:11.300 --> 20:14.300
update

20:14.300 --> 20:17.930
blog service

20:17.930 --> 20:22.930
然后等于一个 sync function

20:23.930 --> 20:24.930
对吧

20:24.930 --> 20:25.930
好

20:25.930 --> 20:27.930
这边那就是调用这个

20:27.930 --> 20:30.930
这边那就是res.send

20:30.930 --> 20:33.930
这边 await

20:33.930 --> 20:35.930
update

20:35.930 --> 20:37.930
blog service

20:37.930 --> 20:38.930
对吧

20:38.930 --> 20:39.930
好

20:39.930 --> 20:40.930
这边习惯性去看一下

20:40.930 --> 20:42.930
其实我知道他会引用

20:42.930 --> 20:43.930
好

20:43.930 --> 20:44.930
然后这边要传两个东西

20:44.930 --> 20:45.930
一个是 id

20:45.930 --> 20:46.930
对不对

20:46.930 --> 20:48.930
这边就是应该是 promise

20:48.930 --> 20:50.930
点 id

20:50.930 --> 20:52.930
这是第1个参数

20:52.930 --> 20:53.930
第2个是什么呢

20:53.930 --> 20:54.930
第2个是不是就是你这个

20:54.930 --> 20:55.930
你要去修改

20:55.930 --> 20:56.930
修改的话

20:56.930 --> 20:58.930
你是不是会给我传一个新的内容过来

20:58.930 --> 21:00.930
你看这边接口文章

21:00.930 --> 21:02.930
比如说我们边修改文章

21:02.930 --> 21:03.930
修改文章的话

21:03.930 --> 21:05.930
你这边是存在什么的

21:05.930 --> 21:07.930
是不是存在这个body的

21:07.930 --> 21:08.930
对不对

21:08.930 --> 21:09.930
这个存在body的

21:09.930 --> 21:12.930
然后如果你只修改某些字段

21:12.930 --> 21:14.930
你自传某些字段就可以了

21:14.930 --> 21:16.930
所以说我们这边的话就

21:16.930 --> 21:17.930
把什么呢

21:17.930 --> 21:20.930
把req.body

21:20.930 --> 21:22.930
把它传过去

21:22.930 --> 21:24.930
把传过去之后

21:24.930 --> 21:26.930
然后接下来的话来到service

21:26.930 --> 21:29.930
来到service这边

21:29.930 --> 21:30.930
好

21:30.930 --> 21:32.930
这边修改这个博文

21:32.930 --> 21:34.930
那首先的话这边

21:34.930 --> 21:36.930
我们得判断一下

21:36.930 --> 21:37.930
判断什么呢

21:37.930 --> 21:39.930
判断他有没有这个toc

21:39.930 --> 21:40.930
所以说我们这边

21:40.930 --> 21:41.930
手有两个参数还没写

21:41.930 --> 21:43.930
这边就是一个是id

21:43.930 --> 21:47.930
一个是newbloginfer

21:47.930 --> 21:48.930
对不对

21:48.930 --> 21:50.930
就新的这个博客信息

21:50.930 --> 21:52.930
这边首先

21:52.930 --> 21:55.930
首先判断

21:55.930 --> 21:58.930
有没有toc

21:58.930 --> 22:00.930
如果有toc的话

22:00.930 --> 22:02.930
我们是不是要做这个处理

22:02.930 --> 22:03.930
对不对

22:03.930 --> 22:07.930
如果有toc

22:07.930 --> 22:09.930
有toc

22:09.930 --> 22:12.930
我们需要做处理

22:12.930 --> 22:15.370
对不对

22:15.370 --> 22:17.370
需要做处理

22:17.370 --> 22:19.370
但是这里有个问题

22:19.370 --> 22:22.370
就是我们的toc是根据什么生成的

22:22.370 --> 22:26.370
根据你文章的内容生成的

22:26.370 --> 22:27.370
对不对

22:27.370 --> 22:28.370
什么意思

22:28.370 --> 22:29.370
比如说我这边

22:29.370 --> 22:30.370
你看我这边

22:30.370 --> 22:31.370
比如说我现在编辑文章

22:31.370 --> 22:32.370
编辑文章的话

22:32.370 --> 22:33.370
比如说我又加了

22:33.370 --> 22:34.370
比如说我这个文章

22:34.370 --> 22:35.370
我觉得太短了

22:35.370 --> 22:37.370
然后这样我又加了好几段

22:37.370 --> 22:38.370
加了好几段

22:38.370 --> 22:39.370
然后加这个toc

22:39.370 --> 22:40.370
自动的这边

22:40.370 --> 22:42.370
这也得有这个新增的

22:42.370 --> 22:43.370
后面的这个部落

22:43.370 --> 22:44.370
对不对

22:44.370 --> 22:45.370
说我这边的话

22:45.370 --> 22:47.370
是应该是判断什么的

22:47.370 --> 22:48.370
判断

22:48.370 --> 22:50.370
有没有

22:50.370 --> 22:53.370
有没有这个新增的

22:53.370 --> 22:56.370
证文内容

22:56.370 --> 22:57.370
或者说就是判断

22:57.370 --> 22:59.370
证文内容

22:59.370 --> 23:02.370
证文内容

23:02.370 --> 23:05.370
有没有

23:05.370 --> 23:07.370
有没有改变

23:07.370 --> 23:13.370
因为证文内容的改变

23:13.370 --> 23:14.370
会干嘛呢

23:14.370 --> 23:16.370
会影响

23:16.370 --> 23:17.370
什么呀

23:17.370 --> 23:19.370
是不是这个toc

23:19.370 --> 23:20.370
对不对

23:20.370 --> 23:21.370
说我这边的话

23:21.370 --> 23:22.370
我怎么判断的

23:22.370 --> 23:24.370
我这边那就是义父

23:24.370 --> 23:25.370
这边义父

23:25.370 --> 23:26.370
然后接下来

23:26.370 --> 23:28.370
这边new blog infer

23:28.370 --> 23:30.370
看他有没有什么

23:30.370 --> 23:31.370
我们来看一下

23:31.370 --> 23:35.740
他证文的话是在

23:35.740 --> 23:37.740
这边让我看一下

23:37.740 --> 23:39.740
过去

23:39.740 --> 23:40.740
发布文章

23:40.740 --> 23:41.740
他证文的话

23:41.740 --> 23:43.740
是在这个html content

23:43.740 --> 23:44.740
里面

23:44.740 --> 23:45.740
对不对

23:45.740 --> 23:47.740
他是在这个html content

23:47.740 --> 23:48.740
里面

23:48.740 --> 23:49.740
说说我们这边

23:49.740 --> 23:50.740
那就是

23:50.740 --> 23:53.740
如果他有html content

23:53.740 --> 23:55.740
进入此if

23:55.740 --> 23:58.740
进入此if

23:58.740 --> 24:00.740
说明什么

24:00.740 --> 24:02.740
说明文章

24:02.740 --> 24:04.740
文章的

24:04.740 --> 24:07.740
证文内容

24:07.740 --> 24:09.740
有所改变

24:09.740 --> 24:11.740
然后需要

24:11.740 --> 24:13.740
重新

24:13.740 --> 24:17.060
重新处理

24:17.060 --> 24:19.060
这个toc

24:19.060 --> 24:21.060
目录

24:21.060 --> 24:22.060
对不对

24:22.060 --> 24:23.060
那这个toc目录的话

24:23.060 --> 24:24.060
我们这边还没

24:24.060 --> 24:25.060
还没写

24:25.060 --> 24:26.060
我们这边和

24:26.060 --> 24:27.060
那个天家伯克一样的

24:27.060 --> 24:28.060
我们这边

24:28.060 --> 24:29.060
就是先把它控制

24:29.060 --> 24:30.060
后面来写

24:30.060 --> 24:31.060
写了之后

24:31.060 --> 24:32.060
再加这边一样的

24:32.060 --> 24:33.060
你需要把它干嘛呀

24:33.060 --> 24:35.060
这需要把它转成这个

24:35.060 --> 24:36.060
制服串

24:36.060 --> 24:37.060
对不对

24:37.060 --> 24:38.060
这边处理完了之后

24:38.060 --> 24:39.060
然后把它转成这个

24:39.060 --> 24:40.060
制服串

24:40.060 --> 24:41.060
好

24:41.060 --> 24:42.060
转完制服串之后

24:42.060 --> 24:44.060
然后接下来下面

24:44.060 --> 24:45.060
下面的话

24:45.060 --> 24:46.060
那我们这边的话

24:46.060 --> 24:48.060
就需要把这个

24:48.060 --> 24:49.060
这边的话

24:49.060 --> 24:50.060
我们就需要在

24:50.060 --> 24:51.060
我们的这边

24:51.060 --> 24:52.060
blog这边

24:52.060 --> 24:54.060
我们这边那就是

24:54.060 --> 24:56.060
修改

24:56.060 --> 24:58.060
修改一篇

24:58.060 --> 24:59.060
博文

24:59.060 --> 25:00.060
这边那就是

25:00.060 --> 25:04.060
model.expose.

25:05.060 --> 25:08.060
这边update

25:08.060 --> 25:11.060
然后blog.do

25:11.060 --> 25:12.060
对吧

25:12.060 --> 25:15.060
然后等于一个async function

25:15.060 --> 25:17.060
这边你给我传一个id

25:17.060 --> 25:22.060
再传一个这个newbloginfer

25:22.060 --> 25:24.060
你把这两个给我传过来

25:24.060 --> 25:25.060
传过来之后

25:25.060 --> 25:26.060
然后接下来

25:26.060 --> 25:27.060
我这边就掉什么呢

25:27.060 --> 25:30.060
掉这个blogmodel.

25:30.060 --> 25:32.060
它有一个update方法

25:32.060 --> 25:33.060
好

25:33.060 --> 25:34.060
然后接下来我这边

25:34.060 --> 25:37.060
把这个newbloginfer

25:37.060 --> 25:38.060
我把它传过去

25:38.060 --> 25:39.060
传过去之后

25:39.060 --> 25:42.060
再加这边ware

25:42.060 --> 25:43.060
这边应该是什么

25:43.060 --> 25:45.060
id

25:45.060 --> 25:46.060
对不对

25:46.060 --> 25:47.060
id

25:47.060 --> 25:48.060
然后接下来这边

25:48.060 --> 25:49.060
等待一下

25:51.060 --> 25:52.060
等待

25:52.060 --> 25:53.060
好

25:53.060 --> 25:54.060
然后这边更新完了

25:54.060 --> 25:55.060
更新完了之后

25:55.060 --> 25:56.060
你看这边

25:56.060 --> 25:57.060
你看这边

25:57.060 --> 25:58.060
更新完了之后

25:58.060 --> 25:59.060
它是返回什么

25:59.060 --> 26:01.060
是返回新的

26:01.060 --> 26:02.060
整条这个数据

26:02.060 --> 26:03.060
对不对

26:03.060 --> 26:04.060
新的整条数据

26:04.060 --> 26:05.060
说我这边的话

26:05.060 --> 26:06.060
我还需要干嘛呢

26:06.060 --> 26:08.060
我这边还需要查询一下

26:08.060 --> 26:11.060
说我这边就是return

26:11.060 --> 26:12.060
return

26:12.060 --> 26:13.060
然后await

26:13.060 --> 26:18.060
这边根据bloginmodel.band

26:18.060 --> 26:19.060
bypk

26:19.060 --> 26:20.060
根据id

26:20.060 --> 26:22.060
我再查询一下

26:22.060 --> 26:23.060
你上面的话

26:23.060 --> 26:24.060
已经改了吗

26:24.060 --> 26:25.060
对不对

26:25.060 --> 26:26.060
改了之后

26:26.060 --> 26:27.060
接下来我再根据id

26:27.060 --> 26:28.060
我再来查一下

26:28.060 --> 26:29.060
查了之后

26:29.060 --> 26:30.060
接下来把这个结果

26:30.060 --> 26:31.060
返回到哪里呢

26:31.060 --> 26:34.060
返回到我们的service这边

26:34.060 --> 26:36.500
好

26:36.500 --> 26:37.500
这边的话

26:37.500 --> 26:39.500
我们就是await

26:39.500 --> 26:42.500
然后update

26:42.500 --> 26:44.500
blogdlo

26:44.500 --> 26:45.500
这边的话

26:45.500 --> 26:46.500
把这个id

26:46.500 --> 26:47.500
首先第一个是id

26:47.500 --> 26:48.500
然后接下来

26:48.500 --> 26:50.500
这边newbloginfer

26:50.500 --> 26:52.500
把它传递过去

26:52.500 --> 26:53.500
传递过去之后

26:53.500 --> 26:55.500
这边解下go

26:55.500 --> 26:56.500
这边的话

26:56.500 --> 26:59.500
dataValues

26:59.500 --> 27:00.500
解下go

27:00.500 --> 27:01.500
解下go之后

27:01.500 --> 27:02.500
接下来

27:02.500 --> 27:04.500
return

27:04.500 --> 27:05.500
return这边

27:05.500 --> 27:07.500
formats.response

27:07.500 --> 27:09.500
这边0

27:09.500 --> 27:11.500
然后这里

27:11.500 --> 27:14.500
dataValues

27:14.500 --> 27:15.500
对吧

27:15.500 --> 27:16.500
OK

27:16.500 --> 27:18.500
那我们整个修改

27:18.500 --> 27:19.500
我们就写完了

27:19.500 --> 27:20.500
我们这边

27:20.500 --> 27:21.500
我们来测试一下

27:21.500 --> 27:26.730
我这边保存

27:26.730 --> 27:27.730
保存之后

27:27.730 --> 27:28.730
然后我们去postermap

27:28.730 --> 27:29.730
我们来测试一下

27:29.730 --> 27:34.060
打开postermap

27:34.060 --> 27:35.060
这边的话

27:35.060 --> 27:36.060
就应该是什么

27:36.060 --> 27:37.060
这边的话

27:37.060 --> 27:38.060
就应该是put

27:38.060 --> 27:39.060
说起来

27:39.060 --> 27:40.060
我们的接口

27:40.060 --> 27:41.060
这边是不是put

27:41.060 --> 27:42.060
是put

27:42.060 --> 27:43.060
这边的话

27:43.060 --> 27:44.060
是刚才复制过来的

27:44.060 --> 27:45.060
没问题

27:45.060 --> 27:46.060
然后接下来

27:46.060 --> 27:47.060
这边就传一个2

27:47.060 --> 27:49.060
然后叫这边body

27:49.060 --> 27:50.060
body

27:50.060 --> 27:51.060
比如我们就写一个title

27:51.060 --> 27:52.060
title

27:52.060 --> 27:54.060
然后叫我们把这个改成3333

27:54.060 --> 27:55.060
对不对

27:55.060 --> 27:56.060
我们只改title

27:56.060 --> 27:57.060
好

27:57.060 --> 27:58.060
然后接下来这边

27:58.060 --> 27:59.060
剩的

27:59.060 --> 28:00.060
搞定了

28:00.060 --> 28:02.060
搞定了

28:02.060 --> 28:03.060
对不对

28:03.060 --> 28:04.060
这一块就搞定了

28:04.060 --> 28:06.060
数据库看一下

28:06.060 --> 28:07.060
数据库的话

28:07.060 --> 28:08.060
把它关了

28:08.060 --> 28:09.060
重新看一下

28:09.060 --> 28:12.380
然后这边title

28:12.380 --> 28:14.380
数据修改成功了

28:14.380 --> 28:15.380
对不对

28:15.380 --> 28:16.380
就修改成功了

28:16.380 --> 28:18.380
你看这个就是修改

28:18.380 --> 28:20.380
我们这边可以把它改回去

28:20.380 --> 28:22.380
这边改成2嘛

28:22.380 --> 28:24.380
剩的

28:24.380 --> 28:25.380
数据搞定了

28:25.380 --> 28:26.380
对不对

28:26.380 --> 28:27.380
那描述的一些都可以改

28:27.380 --> 28:28.380
你这边比如说

28:28.380 --> 28:31.380
传一个这个description

28:31.380 --> 28:34.380
description

28:34.380 --> 28:35.380
比如这里

28:35.380 --> 28:38.380
这

28:38.380 --> 28:41.380
这是一篇

28:41.380 --> 28:43.380
好文章

28:43.380 --> 28:44.380
对吧

28:44.380 --> 28:45.380
好

28:45.380 --> 28:47.380
这边剩的

28:47.380 --> 28:48.380
搞定了

28:48.380 --> 28:49.380
对不对

28:49.380 --> 28:51.380
没有任何问题

28:51.380 --> 28:54.380
这就是关于我们的修改

28:54.380 --> 28:55.380
修改

28:55.380 --> 28:56.380
最后一个

28:56.380 --> 28:58.380
最后一个是这个三处

28:58.380 --> 29:01.380
其实三处的话也就差不多了

29:01.380 --> 29:02.380
对不对

29:02.380 --> 29:03.380
首先的话

29:03.380 --> 29:05.380
这边我们还是把这个方法先写上

29:05.380 --> 29:06.380
这边是

29:06.380 --> 29:08.380
三处

29:08.380 --> 29:09.380
一篇

29:09.380 --> 29:10.380
博文

29:10.380 --> 29:11.380
好了

29:11.380 --> 29:15.380
这边那就是应该是model.expose

29:16.380 --> 29:17.380
点什么

29:17.380 --> 29:20.380
这边是不是应该是delete

29:20.380 --> 29:22.380
blog

29:22.380 --> 29:23.380
saurus

29:23.380 --> 29:25.380
等于一个async

29:25.380 --> 29:26.380
function

29:26.380 --> 29:28.380
它应该接受一个什么

29:28.380 --> 29:30.380
它是不是应该是接受一个idea

29:30.380 --> 29:31.380
对不对

29:31.380 --> 29:33.380
你要删除了这个博文

29:33.380 --> 29:34.380
是那个博文

29:34.380 --> 29:35.380
接受一个这个

29:35.380 --> 29:36.380
好

29:36.380 --> 29:38.380
然后接下来的话在这边

29:38.380 --> 29:39.380
这边的话

29:39.380 --> 29:41.380
是不是就直接res.send

29:41.380 --> 29:42.380
然后下这边

29:42.380 --> 29:44.380
那就是应该是await

29:44.380 --> 29:46.380
然后delete

29:46.380 --> 29:48.380
blogsaurus

29:48.380 --> 29:49.380
对吧

29:49.380 --> 29:50.380
然后传这个idea

29:50.380 --> 29:54.380
就是req.promise.id

29:54.380 --> 29:56.380
是把它传递过去

29:56.380 --> 29:57.380
传递过去之后

29:57.380 --> 29:58.380
然后接下来

29:58.380 --> 29:59.380
这边

29:59.380 --> 30:01.380
这边接受到

30:01.380 --> 30:02.380
接受到之后

30:02.380 --> 30:03.380
然后接下来的话

30:03.380 --> 30:04.380
这边一层一层来

30:04.380 --> 30:05.380
这边首先干嘛呢

30:05.380 --> 30:08.380
根据id

30:08.380 --> 30:11.380
根据id查询

30:11.380 --> 30:17.380
查询到该篇文章的信息

30:17.380 --> 30:19.380
我首先需要查这个信息

30:19.380 --> 30:20.380
好

30:20.380 --> 30:21.380
那这边我就直接调什么呢

30:21.380 --> 30:24.380
调fenderblog

30:24.380 --> 30:26.380
by iddao

30:27.380 --> 30:29.380
哎呦卡住了

30:29.380 --> 30:30.380
这个是我们之前写好了的

30:30.380 --> 30:31.380
对吧

30:31.380 --> 30:34.380
在这fenderblog

30:34.380 --> 30:37.380
by iddao

30:37.380 --> 30:38.380
写好了的

30:38.380 --> 30:39.380
好

30:39.380 --> 30:40.380
大家这边就直接传一个什么

30:40.380 --> 30:43.380
传一个这个id过去

30:43.380 --> 30:44.380
对不对

30:44.380 --> 30:46.380
大家这边const data

30:46.380 --> 30:47.380
等于

30:47.380 --> 30:48.380
好

30:48.380 --> 30:49.380
那我们来看一下

30:49.380 --> 30:50.380
这边能不能查得到

30:50.380 --> 30:51.380
肯定能查得到

30:51.380 --> 30:52.380
对不对

30:52.380 --> 30:54.380
这边data

30:54.380 --> 30:56.750
保存一下

30:56.750 --> 30:59.260
保存

30:59.260 --> 31:00.260
保存之后

31:00.260 --> 31:01.260
然后接下来这边

31:01.260 --> 31:02.260
这边呢

31:02.260 --> 31:04.260
我们就是delete

31:04.260 --> 31:05.260
delete

31:05.260 --> 31:06.260
然后接下来这边就是2嘛

31:06.260 --> 31:07.260
就2

31:07.260 --> 31:08.260
sender

31:08.260 --> 31:09.260
好

31:09.260 --> 31:10.260
然后接下来这边看一下

31:10.260 --> 31:13.700
这边又忘记那个

31:13.700 --> 31:17.520
又忘记等待了

31:17.520 --> 31:18.520
搞定

31:18.520 --> 31:19.520
搞定之后

31:19.520 --> 31:21.520
然后再这边来看一下

31:21.520 --> 31:22.520
查得到吧

31:22.520 --> 31:24.520
这就查到了

31:24.520 --> 31:25.520
对不对

31:25.520 --> 31:26.520
这篇文章的信息

31:26.520 --> 31:27.520
查到了

31:27.520 --> 31:28.520
查到之后

31:28.520 --> 31:29.520
我为什么要查这个呢

31:29.520 --> 31:31.520
我为什么不直接就是直接

31:31.520 --> 31:32.520
就再调用这个

31:32.520 --> 31:33.520
delete的方法呢

31:33.520 --> 31:34.520
因为这里的话

31:34.520 --> 31:35.520
需要做处理

31:35.520 --> 31:36.520
它有个处理

31:36.520 --> 31:37.520
什么呢

31:37.520 --> 31:39.520
就是接下来

31:39.520 --> 31:42.520
接下来需要根据

31:42.520 --> 31:48.520
该文章的这个id

31:48.520 --> 31:50.520
对应的什么呢

31:50.520 --> 31:51.520
就根据该文章

31:51.520 --> 31:53.520
对应的分类

31:53.520 --> 31:55.520
对应的分类

31:55.520 --> 31:58.520
然后该分类

31:58.520 --> 32:01.520
下的文章数

32:01.520 --> 32:02.520
数量

32:02.520 --> 32:04.520
自减

32:04.520 --> 32:06.520
减少

32:06.520 --> 32:08.520
你想想是不是这个道理

32:08.520 --> 32:09.520
对不对

32:09.520 --> 32:10.520
比如我这篇文章

32:10.520 --> 32:11.520
是属于html的

32:11.520 --> 32:13.520
我现在把这篇文章删除了

32:13.520 --> 32:15.520
那你html分类下面的文章

32:15.520 --> 32:17.520
是不是也应该自减啊

32:17.520 --> 32:18.520
对不对

32:18.520 --> 32:19.520
说说我这边的话

32:19.520 --> 32:20.520
就干嘛呢

32:20.520 --> 32:22.520
我这边的话就是

32:22.520 --> 32:24.520
await

32:24.520 --> 32:26.520
然后我这边的话

32:26.520 --> 32:29.520
fand1

32:29.520 --> 32:32.520
然后这个blog type

32:32.520 --> 32:35.520
blog type

32:35.520 --> 32:37.520
然后这个dao

32:37.520 --> 32:39.520
这个是不是也是这样写好了的

32:39.520 --> 32:40.520
对不对

32:40.520 --> 32:42.520
寻找其中一个这个

32:42.520 --> 32:43.520
这个文章分类

32:43.520 --> 32:44.520
寻找其中一个

32:44.520 --> 32:46.520
然后把什么传过去呢

32:46.520 --> 32:49.520
把这个data.dataValues

32:49.520 --> 32:50.520
下面有个什么呢

32:50.520 --> 32:52.520
有个categoryID

32:52.520 --> 32:53.520
对不对

32:53.520 --> 32:55.520
这里有个categoryID

32:55.520 --> 32:56.520
把它传过去

32:56.520 --> 32:57.520
传过去之后

32:57.520 --> 32:58.520
得到什么呢

32:58.520 --> 32:59.520
得到分类信息

32:59.520 --> 33:03.520
const的一个category

33:03.520 --> 33:06.520
categoryInfer

33:06.520 --> 33:09.520
得到你这篇文章的分类信息

33:09.520 --> 33:12.520
那这篇文章的分类信息

33:12.520 --> 33:14.520
categoryInfer

33:14.520 --> 33:15.520
点什么呢

33:15.520 --> 33:17.520
点article

33:17.520 --> 33:20.520
articleCount

33:20.520 --> 33:22.520
它是不是就应该是自减

33:22.520 --> 33:23.520
对不对

33:23.520 --> 33:24.520
减少之后

33:24.520 --> 33:25.520
这边干嘛

33:25.520 --> 33:26.520
就存储一下

33:26.520 --> 33:28.520
categoryInfer

33:28.520 --> 33:30.520
点save

33:30.520 --> 33:33.090
存储一下

33:33.090 --> 33:34.090
存储一下之后

33:34.090 --> 33:36.090
然后竟然还有一个处理

33:36.090 --> 33:37.090
什么处理

33:37.090 --> 33:38.090
你看这边

33:38.090 --> 33:40.090
你看这个删储这边

33:40.090 --> 33:42.090
还有一个处理就是什么

33:42.090 --> 33:45.090
该文章下的所有评论

33:45.090 --> 33:47.090
是不是也一同删储

33:47.090 --> 33:48.090
但是评论的话

33:48.090 --> 33:49.090
我们现在做没有

33:49.090 --> 33:50.090
评论是不是还没做

33:50.090 --> 33:51.090
对不对

33:51.090 --> 33:52.090
所以这边

33:52.090 --> 33:53.090
我们先记录在这

33:53.090 --> 33:55.090
之后

33:55.090 --> 33:58.090
还有一个操作

33:58.090 --> 34:00.090
就是

34:00.090 --> 34:02.090
该文章

34:02.090 --> 34:06.090
下所对应的评论

34:06.090 --> 34:10.090
也要一并删除

34:10.090 --> 34:11.090
当我们现在评论的话

34:11.090 --> 34:12.090
我们还没写

34:12.090 --> 34:14.090
我们就先把它放在那里

34:14.090 --> 34:15.090
对不对

34:15.090 --> 34:16.090
先放在这

34:16.090 --> 34:18.090
然后接下来这边干嘛呢

34:18.090 --> 34:19.090
接下来就可以删除了

34:19.090 --> 34:21.090
这个是之后来

34:21.090 --> 34:22.090
我们这边空一个吧

34:22.090 --> 34:24.090
然后之后

34:24.090 --> 34:29.090
就可以删除这篇文章了

34:29.090 --> 34:30.090
好那接下来

34:30.090 --> 34:31.090
这边是不是就涉及到

34:31.090 --> 34:32.090
这个DAO程

34:32.090 --> 34:34.090
要去写东西了

34:34.090 --> 34:35.090
对不对

34:35.090 --> 34:37.090
好我们这边就写一个

34:37.090 --> 34:40.090
删除一篇这个博文

34:40.090 --> 34:42.090
来到这下面

34:42.090 --> 34:47.980
删除一篇博文

34:47.980 --> 34:48.980
这边那就是

34:48.980 --> 34:51.980
model.expose

34:51.980 --> 34:54.980
点这个delete

34:54.980 --> 34:56.980
blog.dao

34:56.980 --> 35:01.980
等于一个sync function

35:01.980 --> 35:02.980
对吧

35:02.980 --> 35:03.980
好然后接下来这边

35:03.980 --> 35:05.980
这边呢传入一个id

35:05.980 --> 35:06.980
传入一个id之后

35:06.980 --> 35:08.980
然后接下来这边

35:08.980 --> 35:12.980
这边呢就是blog.model.destroy

35:12.980 --> 35:15.980
通过destroy来进行删除

35:15.980 --> 35:17.980
好然后接下来这边呢就是

35:17.980 --> 35:18.980
ware

35:18.980 --> 35:19.980
对应是一个对象

35:19.980 --> 35:22.980
然后把这个id传进去

35:22.980 --> 35:23.980
传进去之后

35:23.980 --> 35:24.980
然后接下来这边

35:24.980 --> 35:25.980
等待一下

35:25.980 --> 35:26.980
wait

35:26.980 --> 35:27.980
等待

35:27.980 --> 35:28.980
等待之后

35:28.980 --> 35:29.980
然后接下来这边

35:29.980 --> 35:31.980
把这个结果返回

35:31.980 --> 35:32.980
其实返不返回都无所谓

35:32.980 --> 35:33.980
对不对

35:33.980 --> 35:34.980
这里返不返回都无所谓

35:34.980 --> 35:35.980
为什么

35:35.980 --> 35:36.980
因为我这边的话

35:36.980 --> 35:37.980
我删除完成之后

35:37.980 --> 35:39.980
我这边返回的是什么

35:39.980 --> 35:40.980
返回的是这个

35:40.980 --> 35:41.980
对不对

35:41.980 --> 35:42.980
返回的是这个

35:42.980 --> 35:43.980
所以这边

35:43.980 --> 35:45.980
调用方法

35:45.980 --> 35:47.980
调用方法

35:47.980 --> 35:48.980
调用刚才我们所写的

35:48.980 --> 35:52.980
deleteblog.dao

35:52.980 --> 35:53.980
对吧

35:53.980 --> 35:54.980
然后接下来这边的话

35:54.980 --> 35:56.980
是把这个id

35:56.980 --> 35:57.980
把它传过去

35:57.980 --> 35:58.980
传过去之后

35:58.980 --> 35:59.980
然后接下来这边

35:59.980 --> 36:00.980
等待一下

36:00.980 --> 36:01.980
等待完了之后

36:01.980 --> 36:02.980
然后接下来这边

36:02.980 --> 36:06.980
return一个formatresponse

36:06.980 --> 36:08.980
这边呢就是应该是0

36:08.980 --> 36:10.980
然后接下来这边

36:10.980 --> 36:11.980
没有消息

36:11.980 --> 36:14.980
大家这边返回一个true

36:14.980 --> 36:15.980
看到没有

36:15.980 --> 36:17.980
删除一篇

36:17.980 --> 36:18.980
我们

36:18.980 --> 36:19.980
好

36:19.980 --> 36:20.980
然后接下来这边的话

36:20.980 --> 36:22.980
我们来保存一下

36:22.980 --> 36:24.980
全部保存

36:24.980 --> 36:25.980
搞定

36:25.980 --> 36:26.980
搞定之后

36:26.980 --> 36:28.980
然后接下来我们来测试一下

36:28.980 --> 36:29.980
好

36:29.980 --> 36:30.980
我们这边的话

36:30.980 --> 36:31.980
删除就删除第二篇吧

36:31.980 --> 36:32.980
走

36:32.980 --> 36:33.980
这边是不是报错了

36:33.980 --> 36:34.980
报错

36:34.980 --> 36:35.980
我们这边来看一下

36:35.980 --> 36:38.350
什么错

36:38.350 --> 36:41.350
category infer is not function

36:41.350 --> 36:43.350
嗯

36:43.350 --> 36:46.350
category infer is not function

36:47.350 --> 36:50.350
save

36:50.350 --> 36:51.350
我们这边呢

36:51.350 --> 36:52.350
我们这样子

36:52.350 --> 36:54.350
我们这边先来看一下

36:54.350 --> 36:56.350
我们log一下

36:56.350 --> 37:05.770
log category infer

37:05.770 --> 37:09.170
保存

37:09.170 --> 37:13.210
好

37:13.210 --> 37:14.210
大家这边走

37:14.210 --> 37:17.350
看一下

37:17.350 --> 37:23.260
这边的话

37:23.260 --> 37:25.260
找到是找出了

37:25.260 --> 37:26.260
哦

37:26.260 --> 37:27.260
我知道了

37:27.260 --> 37:28.260
我知道了

37:28.260 --> 37:30.260
这边它找到是找出来了

37:30.260 --> 37:32.260
但是我们这边的话

37:32.260 --> 37:34.260
在我们的blog type

37:34.260 --> 37:36.260
我们是不是解了够的

37:36.260 --> 37:37.260
对不对

37:37.260 --> 37:39.260
blog type

37:39.260 --> 37:40.260
dao

37:40.260 --> 37:41.260
这边

37:41.260 --> 37:43.260
我们这边我们是解了够的

37:43.260 --> 37:44.260
它必须要拿到什么

37:44.260 --> 37:46.260
拿到原始的那个

37:46.260 --> 37:47.260
原始的那个data

37:47.260 --> 37:48.260
它才能干嘛呢

37:48.260 --> 37:51.260
才能进行一个保存

37:51.260 --> 37:53.260
那我们这边

37:53.260 --> 37:55.260
让我们把它稍微改一下吧

37:55.260 --> 37:56.260
那我们这边的话

37:56.260 --> 37:58.260
就直接返回一个

37:59.260 --> 38:01.260
这边const的一个data

38:02.260 --> 38:05.260
大家这边返回一个data

38:05.260 --> 38:06.260
返回一个data

38:06.260 --> 38:07.260
那你这边改了的话

38:07.260 --> 38:10.260
那你那个blog分类呢

38:11.260 --> 38:13.260
blog type service

38:13.260 --> 38:16.260
这边的话你这边是不是就得解个

38:16.260 --> 38:17.260
对了

38:17.260 --> 38:18.260
我们看这边哪里在

38:18.260 --> 38:21.260
这个是查询所有

38:21.260 --> 38:24.260
获取其中一个

38:24.260 --> 38:25.260
就这里

38:25.260 --> 38:26.260
我看是不是这里

38:26.260 --> 38:27.260
blog

38:31.240 --> 38:33.240
错了

38:33.240 --> 38:35.870
不是这个

38:35.870 --> 38:37.870
是这个

38:37.870 --> 38:39.870
获取其中一个blog分类

38:39.870 --> 38:41.870
这边的应该是data

38:41.870 --> 38:43.870
然后这里的话返回什么

38:43.870 --> 38:44.870
是返回data

38:44.870 --> 38:45.870
对了

38:45.870 --> 38:47.870
fand1blog type dao

38:47.870 --> 38:48.870
好

38:48.870 --> 38:49.870
大家这边

38:49.870 --> 38:52.870
调用了fand1blog type dao

38:52.870 --> 38:53.870
这边

38:53.870 --> 38:54.870
这边调用的

38:55.870 --> 38:57.870
这边的话你就需要干嘛呢

38:57.870 --> 38:59.870
这边的就是const

38:59.870 --> 39:01.870
一个这边的结构

39:02.870 --> 39:03.870
对吧

39:03.870 --> 39:05.870
我们在这边的结构

39:05.870 --> 39:10.270
data values

39:10.270 --> 39:11.270
ok

39:11.270 --> 39:13.270
然后修改

39:13.270 --> 39:15.270
然后其他的其他就没什么了

39:15.270 --> 39:16.270
是吧

39:16.270 --> 39:17.270
好那接下来这边

39:17.270 --> 39:18.270
这边就ok了嘛

39:18.270 --> 39:20.270
我们这边再来

39:20.270 --> 39:24.670
全部保存

39:24.670 --> 39:26.670
保存之后然后加这边再来

39:26.670 --> 39:27.670
走

39:27.670 --> 39:29.670
然后接下来这里

39:29.670 --> 39:31.670
就拿到这个了

39:31.670 --> 39:32.670
对不对拿到这种形式

39:32.670 --> 39:34.670
这种形式才能调那个

39:34.670 --> 39:36.670
才能调那个save这些方法

39:36.670 --> 39:38.670
好就ok了

39:38.670 --> 39:40.670
好然后这样这边的话

39:40.670 --> 39:44.500
把这个打开

39:44.500 --> 39:46.500
好这边走

39:46.500 --> 39:47.500
看到没有

39:47.500 --> 39:48.500
这边是不是去啊

39:48.500 --> 39:49.500
好那我们这边

39:49.500 --> 39:51.500
让我们回头我们来看一下

39:52.500 --> 39:53.500
嗯这里

39:53.500 --> 39:54.500
伯克

39:54.500 --> 39:56.500
把它关了

39:56.500 --> 39:57.500
那走

39:57.500 --> 39:58.500
看到没有

39:58.500 --> 40:00.500
是不是已经删除了

40:00.500 --> 40:01.500
对不对

40:01.500 --> 40:03.500
就已经删除了

40:03.500 --> 40:05.500
那这个的话就是关于这个

40:05.500 --> 40:07.500
伯克的争三改查

40:07.500 --> 40:09.500
我们整个这一块

40:09.500 --> 40:11.500
就做完了

40:11.500 --> 40:13.500
当然有些功能是缺失的

40:13.500 --> 40:15.500
有些功能是缺失的比如说那个

40:15.500 --> 40:17.500
toc

40:17.500 --> 40:19.500
toc的话我们下节课来讲

40:19.500 --> 40:20.500
ok

40:20.500 --> 40:22.500
toc的话我们得单独拿一节课

40:22.500 --> 40:24.500
我们得讲那个他会设计到那个地规

40:24.500 --> 40:26.500
设计到一些算法

40:26.500 --> 40:28.500
所以这个我们单独

40:28.500 --> 40:30.500
单独下节课来讲

40:30.500 --> 40:31.500
好吧

40:31.500 --> 40:32.500
还有什么呢

40:32.500 --> 40:34.500
还有一些东西比如这个评论

40:34.500 --> 40:35.500
评论的话

40:35.500 --> 40:36.500
我们现在这个评论模块

40:36.500 --> 40:37.500
是不是还没写

40:37.500 --> 40:38.500
对不对

40:38.500 --> 40:39.500
所以我们把那个评论模块

40:39.500 --> 40:40.500
我们把它写了之后

40:40.500 --> 40:42.500
我们再来回头来补充

40:42.500 --> 40:43.500
这一块

40:43.500 --> 40:45.500
包括那个就是

40:45.500 --> 40:47.500
这个文章分类

40:47.500 --> 40:49.500
block type这边

40:49.500 --> 40:51.500
这边的话删除的话

40:51.500 --> 40:52.500
这边是不是要返回这个

40:52.500 --> 40:55.500
受影响的文章的这个

40:55.500 --> 40:56.500
数量

40:56.500 --> 40:57.500
这里是数量

40:58.500 --> 40:59.500
对不对

40:59.500 --> 41:00.500
那现在的话

41:00.500 --> 41:02.500
文章的话文章模块现在已经有了

41:02.500 --> 41:04.500
这里的话其实已经可以改了

41:04.500 --> 41:06.500
这个的话我们就后面一起来改

41:06.500 --> 41:07.500
好吧

41:07.500 --> 41:09.500
整个项目写的差不多都写完了之后

41:09.500 --> 41:11.500
然后后面再来玩上这些地方

41:11.500 --> 41:12.500
好吧

41:12.500 --> 41:14.500
我们一个一个来搞

41:14.500 --> 41:16.500
反正到时候会写的

41:16.500 --> 41:17.500
ok

41:17.500 --> 41:20.500
这就是关于我们整个这个文章模块

41:20.500 --> 41:22.500
就给大家

41:22.500 --> 41:24.500
文章模块

41:24.500 --> 41:26.500
就给大家介绍完了

41:26.500 --> 41:27.500
OK

41:27.500 --> 41:29.500
大家下来的话自己再看一看

41:29.500 --> 41:30.500
好吧

41:30.500 --> 41:32.500
把这一块自己写一写

41:32.500 --> 41:34.500
这节课就先到这里

41:34.500 --> 41:35.500
再见

