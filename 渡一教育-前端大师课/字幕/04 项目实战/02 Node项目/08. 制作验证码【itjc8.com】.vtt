WEBVTT

00:00.940 --> 00:03.500
接下来我们继续

00:03.760 --> 00:07.840
我们上节课的话就已经把我们那个管理员那个模块

00:08.360 --> 00:09.640
就已经做完了

00:09.900 --> 00:12.200
照理说的话管理员那个模块一做完

00:12.460 --> 00:14.500
我们的那个后台管理系统

00:14.760 --> 00:16.040
登录的那个部分

00:16.300 --> 00:17.320
就没有问题了

00:17.580 --> 00:19.360
但是还是插一个东西

00:19.620 --> 00:20.400
插什么呢

00:20.660 --> 00:21.940
插就是那个验证码

00:22.700 --> 00:23.460
验证码

00:23.720 --> 00:25.780
我们这节课的话把那个验证码做了

00:26.540 --> 00:28.580
回头过来看一下这个接口文档

00:29.040 --> 00:31.140
接口文档的话这个验证码这个模块

00:31.400 --> 00:32.160
就一个

00:32.680 --> 00:34.720
就一个获取验证码

00:34.980 --> 00:36.520
也不需要那个

00:37.020 --> 00:38.060
就是那个token之类的

00:38.320 --> 00:41.120
就是这边请求 请求了之后再加返

00:41.380 --> 00:43.420
返回一个SVG的这个图片

00:45.980 --> 00:47.520
好 那我们把这个来做一下

00:48.540 --> 00:51.360
来到我们这边 首先的话这个

00:52.380 --> 00:53.660
在我们的

00:53.920 --> 00:54.700
入词下面

00:54.960 --> 00:56.220
我们新建一个

00:56.480 --> 00:58.280
新建一个叫做这个二维码

00:58.480 --> 00:59.000
Capture

01:00.800 --> 01:01.300
这边

01:01.560 --> 01:02.580
Capture

01:03.100 --> 01:05.400
Cptch

01:05.660 --> 01:06.940
点JS

01:07.960 --> 01:08.460
OK

01:08.720 --> 01:10.780
好 然后这里 这里的话然后

01:11.040 --> 01:14.100
结构的话基本就和之前的这个enemy是一样的了

01:14.360 --> 01:15.640
说我们这边复制一份

01:16.660 --> 01:18.460
把这个Ctrl C

01:19.220 --> 01:20.260
Ctrl V

01:20.500 --> 01:21.520
这个是不需要的

01:22.040 --> 01:22.560
是吧

01:22.820 --> 01:24.080
这个这个也不需要

01:24.340 --> 01:25.620
好 然后接下这里

01:25.880 --> 01:27.680
这里的话就应该是一个

01:27.880 --> 01:28.760
跟目录

01:29.020 --> 01:31.460
然后这里的话 我们把那个

01:31.980 --> 01:33.520
来到app.js

01:33.780 --> 01:35.560
我们这边把他引入一下

01:36.600 --> 01:38.900
这边我们引入路由 同意就在这个地方

01:39.660 --> 01:41.460
哇一个Capture

01:42.740 --> 01:45.300
Capture

01:45.560 --> 01:46.320
Router

01:47.080 --> 01:48.120
等于一个

01:48.620 --> 01:49.380
Require

01:51.410 --> 01:52.430
这里的话

01:52.950 --> 01:53.710
Root

01:54.230 --> 01:55.250
下面的这个

01:55.770 --> 01:56.270
Capture

01:56.790 --> 01:57.310
OK

01:58.030 --> 02:00.270
好 然后完成之后 然后注册一下

02:01.110 --> 02:02.130
来到

02:02.390 --> 02:02.890
下面

02:04.170 --> 02:06.470
好 然后下这边的话Capture Router

02:06.730 --> 02:07.630
好 你注意这里

02:07.890 --> 02:09.550
这里的话稍微就有点不一样了

02:09.810 --> 02:10.830
看结构文档

02:11.090 --> 02:13.130
这里的话是不是RES

02:13.390 --> 02:13.910
Capture

02:14.670 --> 02:15.950
对不对 复制一下

02:16.710 --> 02:18.510
复制了之后 然后这里

02:20.470 --> 02:20.970
OK

02:21.230 --> 02:22.250
把这个改过来

02:22.510 --> 02:24.570
好 然后接下来来到这里

02:25.330 --> 02:26.870
这边的话应该是做什么

02:29.070 --> 02:29.830
这边应该是做什么

02:30.590 --> 02:33.470
这边的话是不是应该是生成一个

02:34.230 --> 02:36.030
生成一个验证码

02:37.830 --> 02:38.430
对不对

02:38.670 --> 02:39.870
生成

02:40.630 --> 02:43.190
生成一个验证码

02:43.450 --> 02:44.630
拙逻辑就是这个

02:44.990 --> 02:48.830
好 那生成一个验证码的话 那我们这边的话就还是写一个这个服务程

02:49.590 --> 02:50.430
来到这边

02:51.390 --> 02:53.430
新建一个Capture

02:54.710 --> 02:56.870
Capture Service

02:57.630 --> 02:58.550
点JS

02:59.330 --> 02:59.830
OK

03:00.390 --> 03:01.950
好 然后把这个的话复制一份

03:04.100 --> 03:06.100
把这个复制一份

03:06.780 --> 03:09.900
其实不用复制是吧 这边就直接module.expose

03:11.500 --> 03:21.340
这边就是module.expose.get这个Capture

03:23.260 --> 03:25.060
Capture 然后Service

03:26.500 --> 03:28.620
等于一个sync

03:29.260 --> 03:30.300
然后function

03:32.020 --> 03:36.380
OK 那我们生成这个验证码的逻辑是不是就应该在这个位置

03:37.140 --> 03:37.660
对不对

03:37.900 --> 03:40.220
好 你在这边 这边其实就是导入那个

03:40.740 --> 03:41.900
这边Constant

03:42.980 --> 03:45.340
等于一个require

03:47.620 --> 03:48.380
这里

03:48.900 --> 03:50.700
这个service

03:50.940 --> 03:53.740
下面的这个Capture Service

03:54.260 --> 03:58.620
好 然后这里 这里的话就是getCapture Service

03:59.380 --> 03:59.900
对不对

04:00.180 --> 04:01.300
好 来到我们这边

04:01.740 --> 04:05.140
来到我们这边的话 我们就要开始来生成这个验证码了

04:05.460 --> 04:07.420
好 那这个的话 其实是袁老师讲过的

04:07.780 --> 04:11.300
这里的话 需要有一个这个依赖包 我们把这个依赖包装一下

04:12.740 --> 04:13.060
这边

04:14.940 --> 04:17.420
这里的话是npmni

04:17.820 --> 04:21.020
有一个叫做svg-capture

04:21.380 --> 04:24.140
cptch 就这个

04:24.660 --> 04:25.860
svgcapture

04:26.620 --> 04:30.300
就直接调这个包就可以了 说整个这个其实不难

04:30.980 --> 04:33.140
好 然后这里的话把这个引入一下

04:33.900 --> 04:36.900
这边的就是svgcapture

04:38.920 --> 04:41.040
等于一个require

04:42.600 --> 04:45.080
这里的话是svgcapture

04:45.320 --> 04:46.440
先把这个包引入

04:46.680 --> 04:48.400
这个我就不说怎么用了

04:48.640 --> 04:50.880
这个的话你去看袁老师的那个视频

04:51.160 --> 04:53.080
袁老师的话那个漏的接是那个部分

04:53.320 --> 04:54.520
他讲了很多场景

04:54.800 --> 04:55.320
对不对

04:55.560 --> 04:57.440
这个的话是他在里面讲了的

04:57.720 --> 04:59.920
包括那个jwt那个他也是讲了的

05:00.880 --> 05:05.000
好 然后既然他这边你就直接调svgcapture

05:05.480 --> 05:08.000
他有个方法叫做cret方法

05:08.920 --> 05:11.400
对不对 其实你也可以去查那个官方文档

05:11.920 --> 05:14.360
去更好的方式是去查阅官方文档

05:14.800 --> 05:17.280
比如你看我们这个之前在做那个

05:17.520 --> 05:18.080
比如这个

05:18.320 --> 05:21.200
在用这个expressjwt的时候

05:21.440 --> 05:23.440
你看我这边是不是把这个官方文档打开

05:24.200 --> 05:25.920
对不对啊 包括我们这边

05:26.360 --> 05:27.760
这个scrnize的时候

05:28.000 --> 05:29.560
所以把这个官方文档打开

05:30.120 --> 05:32.360
对吧 要学会去查这个文档

05:32.600 --> 05:33.720
一定要学会查文档

05:34.240 --> 05:35.960
好 然后既然这边这个size

05:36.720 --> 05:38.840
大小我们就生成4个

05:40.120 --> 05:41.920
好 然后既然他有一个这个

05:42.160 --> 05:43.960
ignorechars

05:44.200 --> 05:45.480
就是什么呢 就是忽略

05:45.720 --> 05:48.200
忽略一些容易混淆的这个制服

05:48.440 --> 05:50.080
那比如说这个小写的i

05:50.360 --> 05:52.000
对吧 然后大写的i

05:52.240 --> 05:53.280
然后这个l

05:53.680 --> 05:54.960
然后既然这个e

05:55.200 --> 05:56.440
这些是不是长得比较像

05:56.720 --> 05:58.040
对不对 还有就是0

05:58.320 --> 06:01.040
然后小写的l 这个大写的l 小写的l

06:01.320 --> 06:02.360
就把这些

06:02.800 --> 06:05.920
这些的话我们就生成的页色码就排除这些制服

06:06.440 --> 06:07.880
好 然后加这边的noise

06:08.120 --> 06:09.000
就干扰线

06:09.240 --> 06:10.280
给一个这个

06:10.520 --> 06:11.120
6根

06:11.560 --> 06:13.600
然后既然这边的话这个canner

06:13.840 --> 06:15.240
canner的话这边

06:16.320 --> 06:17.440
把颜色打开

06:17.680 --> 06:19.240
ok 就这么简单

06:20.520 --> 06:22.040
看到没有 就这么简单

06:22.280 --> 06:24.360
好了 接下来回头你这边的话就

06:25.640 --> 06:26.400
接收一下

06:26.880 --> 06:27.960
这边就capture

06:28.920 --> 06:30.720
Cptch

06:30.960 --> 06:31.480
capture

06:31.720 --> 06:34.040
好了 那生成了 生成了之后要把它干嘛呀

06:34.280 --> 06:35.040
是把它return

06:35.800 --> 06:36.280
对不对

06:36.720 --> 06:38.120
return capture

06:38.400 --> 06:40.120
其实可以直接return 是吧

06:40.360 --> 06:41.560
没必要拿个变量来

06:42.480 --> 06:43.760
我们这边直接return吧

06:44.280 --> 06:45.560
没有必要拿一个变量

06:46.840 --> 06:47.840
return这个

06:48.880 --> 06:49.240
ok

06:49.520 --> 06:51.960
好了 接下来回头 它return它就会来到哪里

06:52.480 --> 06:53.760
这边还没掉 是吧

06:54.240 --> 06:55.280
这边的话就

06:55.520 --> 06:56.320
await

06:56.960 --> 06:57.840
get

06:58.200 --> 06:59.680
capture service

07:00.440 --> 07:01.480
这边生成

07:01.720 --> 07:03.960
生成了之后 然后接下来 这边

07:04.200 --> 07:04.800
下一步

07:07.020 --> 07:08.500
好 下一步我们要做什么呢

07:08.740 --> 07:10.980
那首先的话 这个的话生成了这个验证码

07:10.980 --> 07:11.820
我们肯定是要

07:12.060 --> 07:12.740
返回的

07:13.300 --> 07:13.660
对吧

07:13.900 --> 07:16.740
但其实除了返回这个验证码 还有一个步骤

07:17.140 --> 07:19.300
就是我们要把生成的这个内容

07:19.580 --> 07:20.900
把它保存在哪里

07:21.340 --> 07:23.140
是保存在这个session里面

07:23.900 --> 07:24.420
对不对

07:24.660 --> 07:27.860
然后回头的话用户在登录的时候 它会输入一个验证码

07:28.100 --> 07:30.660
如果验证码不正确的话 然后接下来的话

07:30.900 --> 07:32.700
它登录也是登录不上的

07:32.960 --> 07:33.980
那怎么知道它不正确

07:34.260 --> 07:35.780
是不是就和我这个服务器

07:36.800 --> 07:38.600
存在这个session里面的这个

07:39.100 --> 07:42.440
存在session里面的验证码 进行个比较

07:43.460 --> 07:43.980
对不对

07:44.220 --> 07:46.020
说说我们这边的话 还需要装个裤

07:46.780 --> 07:48.320
这边的npmi

07:48.580 --> 07:49.340
一个什么呢

07:49.600 --> 07:50.380
express

07:51.140 --> 07:52.420
然后session

07:53.180 --> 07:54.460
把这个装一装

07:55.500 --> 07:58.060
ok 装好了 装好了之后 接下来来

07:58.300 --> 07:59.840
这个app.js里面

08:00.620 --> 08:02.140
这边的话首先把它引入

08:03.420 --> 08:04.960
啊 这边首先把它引入

08:05.220 --> 08:06.760
这里的话就concent

08:08.300 --> 08:10.340
concent一个session

08:10.600 --> 08:12.900
等于一个require

08:16.510 --> 08:17.550
express

08:18.310 --> 08:19.590
express

08:20.350 --> 08:21.890
但是装了express session吧

08:23.170 --> 08:24.710
这个提示长没出来呢

08:25.470 --> 08:26.510
express

08:26.770 --> 08:27.530
session

08:27.790 --> 08:28.290
ok

08:28.550 --> 08:30.590
好 引入了之后 接下来下一步

08:30.790 --> 08:33.350
下一步的话 我们这边的话就需要再服务器

08:33.610 --> 08:35.150
我们这边来创建这个session

08:35.670 --> 08:37.150
这边就是使用这个中间线

08:37.410 --> 08:38.990
app.use

08:39.250 --> 08:42.830
好 然后接下来的话 这边就是

08:43.090 --> 08:43.590
session

08:44.110 --> 08:47.190
session 然后接下来这里 这里的话接收一个对象

08:47.450 --> 08:51.530
对象里面有那么几个参数 首先的话就还是有个密钥

08:52.050 --> 08:54.870
还是个密钥 所以它这边有一个secret

08:55.370 --> 08:58.190
好 这个密钥的话 那就是和这个jwt很相似

08:58.710 --> 08:59.210
对吧

08:59.450 --> 09:02.230
好 那我们这边在环境辨量里面

09:02.490 --> 09:04.530
把环境辨量 我把它打开

09:06.070 --> 09:06.590
这边

09:09.670 --> 09:10.930
把环境辨量

09:11.190 --> 09:12.470
把它打开

09:13.750 --> 09:16.830
然后接下来这边的话设置一个session

09:18.400 --> 09:20.700
sessionsecret

09:20.960 --> 09:21.720
se

09:22.240 --> 09:24.020
cret

09:24.280 --> 09:25.820
也等于就叫读音吧

09:26.080 --> 09:27.100
两个都叫读音

09:27.360 --> 09:29.140
好 然后接下来这边

09:29.480 --> 09:31.400
这边的话这个session就应该是

09:31.660 --> 09:37.140
process.env.session

09:38.260 --> 09:38.760
对吧

09:39.420 --> 09:41.120
session 然后secret

09:41.380 --> 09:42.660
secret

09:43.180 --> 09:43.680
好

09:44.460 --> 09:45.480
然后接下来这里

09:45.740 --> 09:46.240
re-save

09:47.780 --> 09:50.340
re-save 是一个true

09:51.100 --> 09:52.640
好 然后接下来 这边

09:53.140 --> 09:57.260
save这个unitialized

09:57.460 --> 10:00.800
就是为初始吧 也要保存 这边也是设置为true

10:01.300 --> 10:03.880
这些参数的话 它的那个文档里面

10:04.380 --> 10:05.660
都有那个解释

10:05.920 --> 10:08.220
其实这个的话 这两个解释的话

10:08.480 --> 10:12.520
你可以看一下 但我们一般的话 其实就是把这两个参数设置为true

10:13.080 --> 10:14.880
一般用的时候都是会设置为true

10:15.140 --> 10:17.440
但具体什么含义的话 你去那个

10:17.700 --> 10:18.460
文档去看一下

10:19.220 --> 10:19.740
好吧

10:20.260 --> 10:21.660
好 这里的话这个session

10:21.920 --> 10:23.320
session的话我们就已经注册好了

10:23.580 --> 10:26.660
注册好了之后 然后接下来来到我们这边

10:27.640 --> 10:30.020
这边 我们这边的话首先接受一下

10:31.560 --> 10:33.100
const 一个capture

10:35.260 --> 10:37.040
等于你生成的这个

10:37.300 --> 10:38.320
验证吧

10:38.580 --> 10:40.380
好 然后接下来把这个文本

10:40.880 --> 10:41.900
保存到哪里呢

10:42.160 --> 10:44.720
文本的话 把它保存到这个session里面

10:44.980 --> 10:47.540
所以这边req.session

10:47.800 --> 10:49.580
再加点capture

10:50.860 --> 10:53.420
等于一个 我们这边生成的capture

10:53.680 --> 10:54.960
它里面有个属性叫做

10:55.220 --> 10:55.980
txt

10:57.020 --> 10:58.540
对 把它保存

10:58.800 --> 11:00.640
保存了之后 然后接下来的话 这边

11:01.920 --> 11:04.480
res.send

11:05.260 --> 11:07.540
然后把什么呢 把这个capture

11:07.800 --> 11:09.340
它有个这个data这个属性

11:10.100 --> 11:11.640
data里面是不是存的就是图

11:12.160 --> 11:14.720
对不对 说起来的话 这边的话 你这个在

11:14.980 --> 11:17.280
发送之前 你这边还要设置一下这个header

11:19.410 --> 11:20.950
就发送之前设置就可以了

11:21.210 --> 11:24.290
这边设置header

11:24.550 --> 11:25.570
设置响应头

11:26.590 --> 11:29.150
设置响应头

11:30.010 --> 11:32.310
设置响应头 这边就是req

11:32.830 --> 11:34.110
不是 这个res

11:34.870 --> 11:38.190
res.它有一个叫做setheader方法

11:38.450 --> 11:39.230
这个我们其实用过的

11:40.510 --> 11:43.830
对不对 我们之前在那个生成那个token的时候

11:44.350 --> 11:45.110
是不是设置过

11:45.630 --> 11:47.410
这里的话 我们就需要设置什么呢

11:47.670 --> 11:50.490
这里的话 我们就需要设置content type

11:51.770 --> 11:54.070
把它设置为这个image

11:55.610 --> 11:57.410
image 然后svg

11:57.910 --> 11:59.710
然后加xml

12:00.230 --> 12:01.750
把这个响应头设置一下

12:02.270 --> 12:04.310
OK 整个就结束了

12:04.830 --> 12:07.350
整个就结束了 你不仅生成了那个

12:07.610 --> 12:09.690
验证码 返回给这个客户端

12:09.950 --> 12:13.530
你而且的话 还在那个C系里面 保存了这次验证码

12:13.790 --> 12:15.070
它的一个信息

12:15.570 --> 12:16.850
保存它一个信息

12:17.110 --> 12:18.910
好了 接下来我们这边的话 我们来

12:20.190 --> 12:20.710
全部保存

12:22.490 --> 12:25.050
保存了之后 然后我们这边的话 我们来启动一下

12:26.330 --> 12:26.830
走

12:27.830 --> 12:31.130
保存了 是吧 保存了我们这边 我们来看一下什么错

12:32.410 --> 12:35.490
index router

12:37.820 --> 12:39.800
you require mid-wire

12:39.880 --> 12:42.320
应该是那个 应该是

12:43.080 --> 12:43.720
这边

12:44.240 --> 12:45.240
这边让我们看一下

12:47.960 --> 12:49.760
这边让我们看一下是什么错

12:51.040 --> 12:53.340
这里的话 我看一看

12:53.600 --> 12:55.900
这里router是不是没有导出啊

12:56.420 --> 12:58.520
对不对 这里吧你把router

12:58.780 --> 12:59.880
router要把它导出

13:00.620 --> 13:01.020
好 这里

13:02.500 --> 13:03.460
把这个router

13:04.300 --> 13:05.180
把它导出出去

13:05.700 --> 13:06.060
ok

13:06.660 --> 13:08.460
好 然后接下来这边 再来保存

13:09.380 --> 13:09.940
好 看一下

13:10.700 --> 13:11.220
是不是ok了

13:11.740 --> 13:14.260
ok了之后 然后接下来到我们这边poster man

13:14.740 --> 13:15.580
我们来测试一下

13:16.100 --> 13:18.260
好 这边的话就是应该是什么方法

13:18.780 --> 13:19.540
get方法

13:20.900 --> 13:21.300
对不对

13:21.540 --> 13:23.780
get 然后接下这里是

13:24.620 --> 13:25.260
写到啥来着

13:26.000 --> 13:30.320
叫啥来着

13:30.320 --> 13:31.400
res

13:31.400 --> 13:32.760
就这个 好 直接复制过来

13:34.200 --> 13:35.160
直接复制过来

13:35.480 --> 13:36.840
来到poster man

13:38.320 --> 13:39.600
ok 走

13:40.560 --> 13:42.160
好 这边的话是抱错了

13:42.360 --> 13:44.360
unlown error

13:45.040 --> 13:47.720
好 我们这边的话就需要一步一步来排查了

13:48.800 --> 13:50.600
对不对 需要一步一步来排查

13:51.360 --> 13:52.560
unlown error

13:53.080 --> 13:54.280
我们一点一点来

13:55.020 --> 13:57.980
首先的话 我们这边的话 这里

13:58.700 --> 14:00.100
这里排除路由 这里

14:00.380 --> 14:01.660
这里的话 我们这个

14:01.900 --> 14:04.380
发送这个请求 获取这个验证吗

14:04.380 --> 14:05.980
这个的话是不需要token验证的

14:06.700 --> 14:08.500
对不对 啊 说到我们这里的话

14:08.860 --> 14:09.900
首先把这儿补上

14:10.700 --> 14:11.900
这边的话是

14:12.420 --> 14:14.100
写杠res

14:14.100 --> 14:15.300
然后capture

14:16.900 --> 14:19.260
然后message 这个是一个get

14:21.020 --> 14:22.220
get 要保存

14:23.060 --> 14:24.020
应该就这个原因

14:25.100 --> 14:26.420
好 再来 走

14:27.460 --> 14:29.060
还不是这个是吧

14:30.060 --> 14:30.940
还不是这个

14:31.340 --> 14:32.500
还不是这个的话

14:32.500 --> 14:34.060
然后接下来这边怎么办呢

14:34.380 --> 14:36.420
这边的话你就一点一点来排

14:37.100 --> 14:37.820
一点一点来排

14:37.820 --> 14:39.500
首先的话你就看这个请求

14:40.060 --> 14:41.180
有没有到到这个位置

14:41.820 --> 14:42.940
啊 到到这个位置之后

14:42.940 --> 14:44.620
他自然而然会调这个方法

14:44.620 --> 14:46.020
对吧 调这个方法

14:46.020 --> 14:47.540
然后接下来的话来到这边

14:47.780 --> 14:49.780
这边的话是不是会生成这个

14:50.300 --> 14:50.860
验证吗

14:50.860 --> 14:51.980
让我们这边一点一点来

14:51.980 --> 14:53.100
我首先看这个验证吧

14:53.100 --> 14:54.020
有没有生成功

14:54.740 --> 14:56.780
cancet 一个capture

14:58.300 --> 14:59.060
等于这个

14:59.300 --> 15:01.180
好 然后接下来的话这边console一下

15:01.820 --> 15:03.340
console.log

15:04.420 --> 15:04.900
capture

15:10.250 --> 15:10.850
保存

15:13.900 --> 15:15.100
保存之后再在这边

15:16.100 --> 15:16.940
走

15:17.740 --> 15:19.380
然后看一下这里有没有生成

15:23.760 --> 15:25.360
这边的话

15:25.680 --> 15:26.360
500

15:26.880 --> 15:28.120
服务器错误

15:29.160 --> 15:30.040
not found

15:30.040 --> 15:30.920
哦 这边

15:31.720 --> 15:32.760
说他没找到呀

15:33.720 --> 15:34.120
对不对

15:34.360 --> 15:35.520
他压根就没找到

15:35.760 --> 15:37.120
也就是路由没找到

15:38.000 --> 15:39.480
路由没找到的话

15:39.480 --> 15:40.440
我们来看一下我们这边

15:40.440 --> 15:42.200
哦 这里写成什么了

15:42.680 --> 15:44.200
这写成post了

15:45.160 --> 15:45.480
对不对

15:46.360 --> 15:47.120
好 这边再来

15:47.360 --> 15:47.720
走

15:53.080 --> 15:53.920
看一看啊

15:54.480 --> 15:55.480
哎 生成了

15:56.240 --> 15:56.640
看不看

15:57.280 --> 15:58.000
已经生成了

15:58.000 --> 15:59.520
啊 这边的话已经生成了

15:59.800 --> 16:00.880
这个是text

16:01.040 --> 16:01.960
这个是data

16:02.480 --> 16:03.600
生成之后

16:03.600 --> 16:04.800
然后接下来的话

16:04.800 --> 16:06.160
这边的话把它返回就可以了

16:06.900 --> 16:07.340
好了

16:07.620 --> 16:08.460
来到这边

16:08.460 --> 16:10.220
这边就ok了其实

16:10.460 --> 16:11.420
我们这边return

16:13.020 --> 16:13.460
return

16:13.460 --> 16:14.580
这个就可以标了

16:14.900 --> 16:15.460
保存

16:17.220 --> 16:18.700
好 然后接下来到这边

16:18.860 --> 16:19.260
再来

16:19.420 --> 16:19.900
生的

16:20.300 --> 16:20.860
克拉米娅

16:21.340 --> 16:22.740
说我们的燕子码就生成了

16:23.140 --> 16:23.620
走

16:24.220 --> 16:24.700
走

16:24.940 --> 16:25.460
克拉米娅

16:25.700 --> 16:26.700
每次就生成了

16:26.700 --> 16:27.900
而且他不仅的话

16:27.900 --> 16:30.420
不仅仅是你这边看到生成的这个图片

16:30.740 --> 16:32.460
而且的话他还把这个

16:32.740 --> 16:34.220
就是对应了这个文字

16:34.420 --> 16:35.860
我们刚才是不是打印出来看了的

16:36.340 --> 16:37.860
对不对 他除了有一个这个图片

16:37.860 --> 16:38.940
那还有一个text

16:39.260 --> 16:40.220
把这个text

16:40.940 --> 16:42.060
保存到哪里了的

16:42.460 --> 16:44.460
保存到了这个

16:44.900 --> 16:46.660
嗯 那个setting里面的

16:47.460 --> 16:47.900
对不对

16:47.900 --> 16:49.420
我们这边呢是设置了的

16:50.820 --> 16:51.620
在

16:52.180 --> 16:52.860
这个位置

16:53.220 --> 16:54.820
啊 我们这边呢是设置了的

16:54.820 --> 16:57.220
是把它保存到这个setting里面

16:57.900 --> 16:59.900
那回头的话用户在登录的时候

17:00.060 --> 17:01.660
他也会传一个这个capture

17:01.820 --> 17:03.740
然后我就和这个setting里面的capture

17:04.060 --> 17:05.580
进行一个对比

17:06.160 --> 17:09.220
对不对 说起来我们那个内断逻辑还没写是吧

17:09.740 --> 17:11.020
我们来到这边

17:11.540 --> 17:13.060
应该是在andmin这边

17:13.340 --> 17:14.620
andmin然后登录

17:14.860 --> 17:15.380
这里

17:16.140 --> 17:16.900
这个位置

17:17.160 --> 17:18.460
这个位置我们还没写

17:18.700 --> 17:19.740
我们把这个位置

17:19.740 --> 17:20.740
我们把它补全一下

17:21.260 --> 17:23.300
而这里的话就是你过来的话

17:23.580 --> 17:24.860
你有一个这个

17:25.620 --> 17:28.700
就是我们把这个接口文档打开

17:29.460 --> 17:30.220
接口文档

17:30.480 --> 17:31.260
登录

17:31.760 --> 17:32.260
这边

17:32.780 --> 17:33.300
登录

17:33.540 --> 17:35.600
你这边在登录的时候你这边

17:35.820 --> 17:37.860
这个body里面是不是就有一个这个capture

17:38.120 --> 17:41.180
对不对 我们之前没有做处理 那现在的话这边我们就要做处理了

17:41.440 --> 17:44.260
那首先的话就是应该是一个验证码的

17:44.520 --> 17:45.020
验证

17:45.280 --> 17:46.300
啊 衣服

17:46.820 --> 17:48.300
首先这边来进行个验证

17:48.560 --> 17:49.900
如果req

17:50.140 --> 17:51.420
点body

17:51.940 --> 17:53.220
然后里面有个什么

17:53.480 --> 17:54.740
有一个这个capture

17:56.540 --> 17:57.060
对不对

17:57.320 --> 17:59.100
好 大家这边你把它转成小写

17:59.360 --> 18:00.900
啊 同意我们都用这个小写

18:01.160 --> 18:02.180
来进比较

18:02.440 --> 18:03.460
所以这边就是to

18:03.720 --> 18:04.740
none case

18:05.800 --> 18:07.600
none case

18:07.860 --> 18:08.620
啊 重成小写

18:08.880 --> 18:10.920
如果它不等于什么呢

18:11.180 --> 18:13.740
不等于req.session

18:14.500 --> 18:17.340
我们是不是在session里面重了一个这个capture

18:17.840 --> 18:18.300
对不对

18:18.560 --> 18:19.900
这边也to

18:20.660 --> 18:22.200
to known case

18:24.270 --> 18:26.310
none case

18:26.570 --> 18:27.850
啊 如果他们不等

18:28.370 --> 18:29.890
不等的话是不是就出问题了

18:30.410 --> 18:30.670
对不对

18:30.930 --> 18:31.690
如果

18:32.730 --> 18:33.610
进入

18:33.870 --> 18:34.770
此衣服

18:36.990 --> 18:37.750
说明

18:37.950 --> 18:38.990
是有什么

18:39.250 --> 18:40.010
是问题的

18:40.770 --> 18:41.790
对不对 什么问题

18:42.050 --> 18:45.890
是用户输入的验证码

18:46.410 --> 18:47.170
不正确

18:47.930 --> 18:51.010
那你验证码都不正确 我还让不让你走下面的逻辑

18:52.290 --> 18:54.610
还让你走下面逻辑 什么不让 你看我这边写的有

18:55.110 --> 18:59.730
啊 这边的话 下面的代码是什么呢 是假设上面的验证码已经通过了

19:00.490 --> 19:05.090
是了吧 所以我们在这边的话我们就该干嘛呢 我们这边就该抛出一个错误

19:05.850 --> 19:06.890
这边snow

19:07.350 --> 19:08.030
new

19:08.110 --> 19:10.430
这个village error

19:11.710 --> 19:12.990
啊 这边呢 就是应该是

19:13.250 --> 19:16.150
引入 这边直接写 他应该是自动会给我引入

19:17.070 --> 19:17.850
village

19:18.450 --> 19:19.890
这个villidation

19:20.410 --> 19:21.430
villidation

19:21.950 --> 19:26.010
villidation error

19:26.930 --> 19:29.490
我看他会不会自动给我引入 果然给我引入了

19:29.750 --> 19:30.450
哎 这个

19:30.690 --> 19:32.410
这个应该是我装了什么插件

19:32.650 --> 19:34.710
啊 但我插件装的太多了 我已经忘了

19:35.490 --> 19:36.610
他这边自动给我引入

19:36.830 --> 19:38.610
villidation 这样我们这边就

19:38.870 --> 19:39.370
什么

19:39.630 --> 19:40.910
是验证码错误啊

19:41.430 --> 19:42.450
对不对

19:42.710 --> 19:44.510
验证码错误

19:45.270 --> 19:46.550
啊 那保存一下

19:47.310 --> 19:47.830
ok

19:48.590 --> 19:50.630
好了 我们整个这个就是

19:50.890 --> 19:52.690
关于验证码这一块

19:52.950 --> 19:53.970
也就做完了

19:54.730 --> 19:56.030
啊 这一块也就做完了

19:56.290 --> 19:59.870
这一块做完之后 然后按道理来讲的话 合影了那个后台

20:00.130 --> 20:01.130
登录那一块

20:01.390 --> 20:03.430
就能够无缝的这个对接上

20:03.950 --> 20:05.750
啊 完全是能够对接上的

20:06.050 --> 20:07.850
我们这样子吧 我们这个

20:08.370 --> 20:10.050
要不要要不要这会试一试呢

20:11.090 --> 20:12.370
要不要这会试一试啊

20:13.130 --> 20:17.210
啊 这会试一试啊 登录进去 然后也没啥数据是吧 而没关系可以试

20:17.490 --> 20:18.770
我们这边我们来试一试

20:19.270 --> 20:19.770
好吧

20:22.880 --> 20:27.760
呃 我们要不这样子 我们现在postman里面试啊 因为我们说了现在前后端

20:28.000 --> 20:29.560
分离开发你这个

20:30.040 --> 20:31.840
呃 前端应该是还没出来的

20:32.360 --> 20:34.920
对不对 我们现在postman里面试 postman里面也可以试

20:35.440 --> 20:35.940
怎么试啊

20:36.520 --> 20:38.560
你这边的话就是你的这个登录接口喽

20:39.360 --> 20:40.800
我们找到我们的这个登录接口

20:42.240 --> 20:42.720
找得到吧

20:43.600 --> 20:44.480
登录接口这边

20:45.680 --> 20:47.520
对吧 然后加这边这个body

20:48.160 --> 20:51.360
啊 这边呢 我们这个logging and me 密码一二三四五六

20:51.760 --> 20:55.600
好 然后接下来的话 这里 这里的话 你这个验子码就不能随便乱输了

20:56.320 --> 20:59.760
啊 这里就不能随便乱输 这边的话 我们首先我们来获取一下

21:00.920 --> 21:04.760
这里的话是什么 v5 k接是吧 v5 k接

21:05.340 --> 21:07.260
v5 k接 然后接下来的这个logging

21:08.540 --> 21:11.660
logging这边 然后你在这边 你就要好好说

21:11.660 --> 21:15.980
v5 k接

21:16.780 --> 21:18.020
对吧 啊 走

21:19.140 --> 21:19.820
啊 你看这边

21:20.660 --> 21:25.100
说登录成高 对不对 好了 你现在的话 你这边 你再重新来生成一个

21:25.940 --> 21:31.380
这边 走 所以又重新生成一个 好 生成一个 然后既然我这边登录的话 我不按照你那个生成的

21:31.820 --> 21:33.900
我这边就直接一二三四

21:34.640 --> 21:39.600
啊 走 你看这边 是不是验证码错误 是不是得到这个对象

21:40.720 --> 21:44.080
对不对 说明我们这个验证码 是不是正常工作了的

21:45.200 --> 21:51.320
是不是啊 啊 当你现在的话 你想把那个 就之前写好的那个后台啊 你来进行对接

21:51.720 --> 21:55.280
也是能够对接上的 知道吧 没有问题的啊

21:56.000 --> 22:01.640
好 我们这样子 我们后面再写个模块嘛 再写个模块 然后我们和我们之前写的那个后台

22:02.360 --> 22:11.240
我们来对接一下 可以看一下 好吧 这节课就先到这里吧 大家下来的话 自己试一试 这节课内容不能啊 不能

22:12.020 --> 22:13.100
好 就到这里 拜拜

