WEBVTT

00:01.390 --> 00:03.390
我们接着来往下来做

00:03.390 --> 00:05.390
我们在往下来做之前

00:05.390 --> 00:07.390
我们先把这个分支切夹

00:07.390 --> 00:11.390
每一小节我们都在一个分支上面去实现

00:11.390 --> 00:13.390
我来看一下

00:13.390 --> 00:15.390
我上一个分支应该已经被提交了

00:15.390 --> 00:17.390
我们再切换一个分支

00:17.390 --> 00:21.390
check out 抢笔一下

00:21.390 --> 00:25.390
就是9-login-2

00:25.390 --> 00:27.390
ok

00:27.390 --> 00:29.390
那我们接下来要做的

00:29.390 --> 00:31.390
是不是就是把我们的用户的信息

00:31.390 --> 00:33.390
进行一个传递

00:33.390 --> 00:37.390
传递到我们的系统的这个页面当中

00:37.390 --> 00:38.390
对吧

00:38.390 --> 00:40.390
那我们会发现这两个组建呢

00:40.390 --> 00:42.390
他们之间是没有联系的

00:42.390 --> 00:44.390
那既然没有联系

00:44.390 --> 00:47.390
我们还想要做组建与组建之间的交互的话

00:47.390 --> 00:48.390
我们可以用什么

00:48.390 --> 00:51.390
是不是可以用这个状态管理

00:51.390 --> 00:53.390
就是vues吧

00:53.390 --> 00:56.390
那么我们是不是就可以在double里面

00:57.390 --> 01:00.390
来写一个我们的用户的一个信息

01:00.390 --> 01:02.390
在这里面存出我们的用户的信息

01:02.390 --> 01:03.390
是吧

01:03.390 --> 01:07.110
存出

01:07.110 --> 01:10.110
用户信息

01:10.110 --> 01:12.110
我们用一个电量叫user吧

01:12.110 --> 01:14.110
这个user它是一个对象

01:14.110 --> 01:17.110
这个对象里面还有用户的所有信息

01:17.110 --> 01:18.110
可以吧

01:18.110 --> 01:21.110
包括这个用户的名字

01:21.110 --> 01:23.110
user name

01:23.110 --> 01:25.110
还包括它的app

01:26.110 --> 01:27.110
可以吧

01:27.110 --> 01:30.110
还包括它的一个角色

01:30.110 --> 01:32.110
角色有什么用

01:32.110 --> 01:34.110
是不是角色可以判断

01:34.110 --> 01:36.110
我们的这个列表当中

01:36.110 --> 01:39.110
它可以展示哪些列表吧

01:39.110 --> 01:40.110
对不对

01:40.110 --> 01:42.110
然后再有什么

01:42.110 --> 01:47.110
是不是还需要有这个email吧

01:47.110 --> 01:48.110
对不对

01:48.110 --> 01:49.110
每一个用户

01:49.110 --> 01:50.110
什么确定的

01:50.110 --> 01:51.110
是不是由它的邮箱

01:51.110 --> 01:52.110
还有它的密码

01:52.110 --> 01:53.110
确定一个用户

01:53.110 --> 01:54.110
对不对

01:54.110 --> 01:55.110
在这里面

01:55.110 --> 01:58.110
我们就可以把这几个参数传递一下

01:58.110 --> 01:59.110
保留一下

01:59.110 --> 02:00.110
然后我们再来

02:00.110 --> 02:01.110
接下来

02:01.110 --> 02:05.110
我们写一些改进这个状态的方法

02:05.110 --> 02:07.110
我们管它叫什么呢

02:07.110 --> 02:10.110
叫设置用户信息吧

02:10.110 --> 02:11.110
info

02:11.110 --> 02:12.110
传递过来

02:12.110 --> 02:14.110
state

02:14.110 --> 02:16.110
然后把我们的这个

02:16.110 --> 02:19.110
用户的信息传递一下

02:19.110 --> 02:21.110
对不对

02:21.110 --> 02:23.110
有点info

02:23.110 --> 02:24.110
ok

02:24.110 --> 02:26.110
然后我们就给当前的

02:26.110 --> 02:28.110
state里面的user

02:28.110 --> 02:29.110
设置

02:29.110 --> 02:31.110
只设置为user info

02:31.110 --> 02:32.110
对吧

02:32.110 --> 02:34.110
那在我们的action

02:34.110 --> 02:35.110
里面

02:35.110 --> 02:37.110
我们也写一个对应证

02:37.110 --> 02:39.110
来写一下

02:39.110 --> 02:41.110
user info

02:41.110 --> 02:42.110
这里面我们拿到的

02:42.110 --> 02:43.110
应该是

02:43.110 --> 02:44.110
mate

02:44.110 --> 02:47.110
以及我们当前的数据

02:47.110 --> 02:48.110
对吧

02:48.110 --> 02:50.110
然后它mate

02:50.110 --> 02:51.110
提交一下

02:51.110 --> 02:53.110
我们的这个数据

02:53.110 --> 02:54.110
提交到

02:54.110 --> 02:55.110
model里面

02:55.110 --> 02:56.110
对吧

02:57.110 --> 02:59.110
提交到user

02:59.110 --> 03:01.110
info

03:01.110 --> 03:02.110
这个model里面

03:02.110 --> 03:05.110
把我们的数据传进去

03:05.110 --> 03:06.110
对不对

03:06.110 --> 03:07.110
这样不就好了吗

03:07.110 --> 03:08.110
那我们接下来要做的

03:08.110 --> 03:10.110
是不是就是动态的去改变

03:10.110 --> 03:11.110
这个

03:11.110 --> 03:12.110
动态去调用一下

03:12.110 --> 03:14.110
我们的这个sat user info

03:14.110 --> 03:15.110
就可以了

03:15.110 --> 03:16.110
对吧

03:16.110 --> 03:17.110
那我们需要在哪里改变

03:17.110 --> 03:18.110
是不是就是需要在

03:18.110 --> 03:19.110
我们登录的时候

03:19.110 --> 03:21.110
把登录的这个状态改变

03:21.110 --> 03:22.110
那我们就找一下

03:22.110 --> 03:23.110
登录的状态

03:23.110 --> 03:25.110
应该在登录的界面当中

03:25.110 --> 03:27.110
在views的layout里面

03:27.110 --> 03:28.110
对吧

03:28.110 --> 03:29.110
有个login

03:29.110 --> 03:30.110
那如果我们拿到了

03:30.110 --> 03:32.110
这个数据之后

03:32.110 --> 03:33.110
是不是需要做

03:33.110 --> 03:34.110
这个页面的调主安

03:34.110 --> 03:35.110
对吧

03:35.110 --> 03:36.110
那对调转之前

03:36.110 --> 03:37.110
我就需要把我们的

03:37.110 --> 03:39.110
这个用户的信息存储下来

03:39.110 --> 03:40.110
那用户的信息

03:40.110 --> 03:42.110
是不是在我们的res里面

03:42.110 --> 03:43.110
对吧

03:43.110 --> 03:44.110
可以去找一下

03:44.110 --> 03:45.110
看一下

03:45.110 --> 03:47.110
login

03:47.110 --> 03:48.110
现在我这里面

03:48.110 --> 03:50.110
因为有错误

03:50.110 --> 03:51.110
那这又是

03:51.110 --> 03:52.110
与法规范的问题了

03:52.110 --> 03:54.110
我们还是去执行

03:54.110 --> 03:55.110
npm running

03:57.550 --> 03:59.550
再自动修复一下

03:59.550 --> 04:03.460
好

04:03.460 --> 04:04.460
现在都是警告了

04:04.460 --> 04:06.460
就不要紧了

04:06.460 --> 04:09.900
现在来看一下

04:09.900 --> 04:10.900
那接下来

04:10.900 --> 04:11.900
是不是就需要

04:11.900 --> 04:12.900
超转到我们的

04:12.900 --> 04:13.900
系统页面当中

04:13.900 --> 04:14.900
需要把我们的

04:14.900 --> 04:15.900
用户名字改一下

04:15.900 --> 04:16.900
就办

04:16.900 --> 04:17.900
那用户名字

04:17.900 --> 04:18.900
是不是还在我们的

04:18.900 --> 04:20.900
后户页面当中

04:20.900 --> 04:22.900
有个slater 9

04:22.900 --> 04:23.900
将就组建当中

04:23.900 --> 04:24.900
对吧

04:24.900 --> 04:25.900
这里面有用户名字

04:25.900 --> 04:27.900
我们之前写的是写死的

04:27.900 --> 04:28.900
那现在

04:28.900 --> 04:29.900
我们需要读取数据了

04:29.900 --> 04:30.900
对吧

04:30.900 --> 04:31.900
读取的应该是

04:31.900 --> 04:32.900
我们状态

04:32.900 --> 04:33.900
里面的

04:33.900 --> 04:34.900
到里面的

04:34.900 --> 04:35.900
slater

04:35.900 --> 04:36.900
下面的user

04:36.900 --> 04:37.900
下面的user name吧

04:37.900 --> 04:38.900
对吧

04:38.900 --> 04:39.900
nami

04:39.900 --> 04:41.900
nami

04:41.900 --> 04:42.900
对吧

04:42.900 --> 04:43.900
这回我们来看一下

04:43.900 --> 04:44.900
来

04:44.900 --> 04:50.710
重新的登录一下

04:50.710 --> 04:51.710
好

04:51.710 --> 04:53.710
点击提交

04:53.710 --> 04:54.710
调转过来了

04:54.710 --> 04:55.710
但是报了一些错

04:55.710 --> 04:56.710
我们来看一下

04:56.710 --> 04:57.710
什么错

04:57.710 --> 04:58.710
要说

04:58.710 --> 04:59.710
没有读到死的

04:59.710 --> 05:00.710
这个属性

05:00.710 --> 05:01.710
是不是

05:01.710 --> 05:02.710
那我们回过头来看一下吧

05:02.710 --> 05:03.710
为什么没有读到

05:03.710 --> 05:04.710
这个属性呢

05:04.710 --> 05:05.710
你当我什么写错了

05:05.710 --> 05:06.710
t-o-r-e

05:06.710 --> 05:07.710
对吧

05:07.710 --> 05:09.710
当我写这个问题

05:09.710 --> 05:10.710
这回呢

05:10.710 --> 05:11.710
看一下

05:11.710 --> 05:12.710
这回

05:12.710 --> 05:13.710
我们还是

05:13.710 --> 05:14.710
从我们的

05:14.710 --> 05:15.710
登录阶段

05:15.710 --> 05:16.710
来

05:17.710 --> 05:18.710
捞紧

05:18.710 --> 05:19.710
对吧

05:19.710 --> 05:20.710
然后我们输

05:21.710 --> 05:25.430
再接下

05:25.430 --> 05:26.430
i输密码

05:26.430 --> 05:27.430
点击提交

05:27.430 --> 05:28.430
诶

05:28.430 --> 05:29.430
我们进来了

05:29.430 --> 05:30.430
那你会发现

05:30.430 --> 05:31.430
现在啊

05:31.430 --> 05:32.430
我们的用户名

05:32.430 --> 05:33.430
诶

05:33.430 --> 05:34.430
都已经改变了

05:34.430 --> 05:35.430
对吧

05:35.430 --> 05:36.430
但是这里面没有

05:36.430 --> 05:37.430
为什么没有呢

05:37.430 --> 05:38.430
回头来看一下呗

05:38.430 --> 05:39.430
对不对

05:39.430 --> 05:41.430
我们在这个

05:41.430 --> 05:44.430
我们在我们刚刚设置的那里

05:44.430 --> 05:46.430
在一命调转之前

05:46.430 --> 05:48.430
我们打印一下

05:48.430 --> 05:49.430
打印一下

05:49.430 --> 05:50.430
这样的一个

05:51.430 --> 05:52.430
找一下啊

05:52.430 --> 05:53.430
我们的login

05:53.430 --> 05:54.430
诶

05:54.430 --> 05:55.430
我说没有设置啊

05:55.430 --> 05:56.430
对不对

05:56.430 --> 05:57.430
所以它才没有

05:57.430 --> 05:58.430
对不对

05:58.430 --> 05:59.430
刚刚没有

05:59.430 --> 06:00.430
调用这个dispatch

06:00.430 --> 06:01.430
诶

06:01.430 --> 06:03.430
我们调用一下dispatch

06:06.580 --> 06:07.580
该dollar

06:07.580 --> 06:08.580
到

06:08.580 --> 06:09.580
诶

06:09.580 --> 06:10.580
叫dispatch

06:10.580 --> 06:11.580
对吧

06:11.580 --> 06:13.580
到我们的site

06:13.580 --> 06:15.580
user info

06:16.580 --> 06:17.580
设置一下

06:17.580 --> 06:18.580
我们

06:18.580 --> 06:20.580
要改变这个

06:20.580 --> 06:22.580
要调用这个方法

06:22.580 --> 06:23.580
对吧

06:23.580 --> 06:24.580
接下来

06:24.580 --> 06:25.580
把我们的数据

06:25.580 --> 06:26.580
传进去

06:26.580 --> 06:27.580
这回是不是可以了

06:27.580 --> 06:28.580
来看一下

06:28.580 --> 06:29.580
来刷新一下

06:29.580 --> 06:30.580
再重新的

06:30.580 --> 06:32.580
进到我们的login里面去

06:32.580 --> 06:33.580
输入

06:34.580 --> 06:36.580
账号密码

06:36.580 --> 06:41.450
来密码

06:42.450 --> 06:43.450
紧急提交

06:43.450 --> 06:44.450
诶

06:44.450 --> 06:45.450
我们就来了

06:45.450 --> 06:46.450
是不是就有那个用户名了

06:46.450 --> 06:47.450
对吧

06:47.450 --> 06:48.450
但是还会有一个问题

06:48.450 --> 06:49.450
你会发现

06:49.450 --> 06:50.450
当我刷新页面的时候

06:50.450 --> 06:51.450
诶

06:51.450 --> 06:53.450
这个用户名没了

06:53.450 --> 06:54.450
对不对

06:54.450 --> 06:55.450
这是怎么回事

06:55.450 --> 06:56.450
是不是因为

06:56.450 --> 06:58.450
当我刷新页面的时候

06:58.450 --> 06:59.450
我们那个状态

06:59.450 --> 07:00.450
状态管理

07:00.450 --> 07:02.450
它又回归到

07:02.450 --> 07:03.450
初始化的

07:03.450 --> 07:04.450
这一部分的

07:04.450 --> 07:05.450
这个效果了吧

07:05.450 --> 07:06.450
那这并不是

07:06.450 --> 07:07.450
我们想要的

07:07.450 --> 07:08.450
对不对

07:08.450 --> 07:09.450
我们想要的就是

07:09.450 --> 07:10.450
我们如果登陆的话

07:10.450 --> 07:12.450
我就让它在本地

07:12.450 --> 07:14.450
有个缓存

07:14.450 --> 07:15.450
有一个存储

07:15.450 --> 07:17.450
让它存下来

07:17.450 --> 07:18.450
然后用户再一次

07:18.450 --> 07:19.450
进到系统的时候

07:19.450 --> 07:20.450
它会自动的

07:20.450 --> 07:22.450
登陆进来

07:22.450 --> 07:23.450
对吧

07:23.450 --> 07:25.450
那我们可以怎么做呢

07:25.450 --> 07:26.450
我们想要去实现

07:26.450 --> 07:27.450
这样的效果

07:27.450 --> 07:28.450
可以怎么做

07:28.450 --> 07:29.450
那这里面

07:29.450 --> 07:30.450
需要把我们的

07:30.450 --> 07:32.450
这些数据存储到本地了

07:32.450 --> 07:33.450
对吧

07:33.450 --> 07:34.450
那我们可以存储到哪呢

07:34.450 --> 07:35.450
是不是

07:35.450 --> 07:36.450
你可以存储到

07:36.450 --> 07:38.450
我们的Cookie当中啊

07:38.450 --> 07:39.450
那可能有些同学会说

07:39.450 --> 07:40.450
老师我存储到

07:40.450 --> 07:41.450
这个local

07:41.450 --> 07:43.450
这个local storage

07:43.450 --> 07:44.450
里面

07:44.450 --> 07:45.450
也是可以的

07:45.450 --> 07:46.450
都是可以的

07:46.450 --> 07:47.450
但是一般

07:47.450 --> 07:49.450
我们的动物的一些信息

07:49.450 --> 07:51.450
都会存储到Cookie里面

07:51.450 --> 07:53.450
那我们这里面

07:53.450 --> 07:55.450
来存储一下吧

07:55.450 --> 07:56.450
那如果你想要

07:56.450 --> 07:57.450
用到Cookie

07:57.450 --> 07:58.450
存储到Cookie里面

07:58.450 --> 08:00.450
那是不是还需要自己去

08:00.450 --> 08:02.450
写一些Cookie的

08:02.450 --> 08:03.450
一些这个操作

08:03.450 --> 08:05.450
像新增Cookie

08:05.450 --> 08:07.450
像这个删除Cookie

08:07.450 --> 08:09.450
像修改Cookie

08:09.450 --> 08:10.450
对吧

08:10.450 --> 08:11.450
那这些方法

08:11.450 --> 08:12.450
你是不是都需要写

08:12.450 --> 08:13.450
那这些方法啊

08:13.450 --> 08:15.450
既然又属于一个

08:15.450 --> 08:16.450
工具方法了

08:16.450 --> 08:18.450
你可以自己单独的

08:18.450 --> 08:20.450
去写一个文件

08:20.450 --> 08:21.450
去实现

08:21.450 --> 08:22.450
啊

08:22.450 --> 08:23.450
例如我这一年

08:23.450 --> 08:24.450
来一个

08:24.450 --> 08:26.450
文件家叫Utube

08:26.450 --> 08:28.450
代表的是我们要

08:28.450 --> 08:29.450
是

08:29.450 --> 08:30.450
我们要去

08:30.450 --> 08:31.450
书写的

08:31.450 --> 08:32.450
这个文件家下面

08:32.450 --> 08:33.450
存储的

08:33.450 --> 08:34.450
都是一些

08:34.450 --> 08:35.450
我们自己写好的

08:35.450 --> 08:36.450
一些工具文件

08:36.450 --> 08:37.450
啊

08:37.450 --> 08:38.450
一些工具

08:38.450 --> 08:39.450
那我们接下来

08:39.450 --> 08:40.450
来创建一下吧

08:40.450 --> 08:41.450
啊

08:41.450 --> 08:42.450
我们换它就叫Uther

08:42.450 --> 08:43.450
这个

08:43.450 --> 08:45.450
叫Cookie吧

08:45.450 --> 08:46.450
叫

08:46.450 --> 08:47.450
叫什么呢

08:47.450 --> 08:48.450
叫

08:48.450 --> 08:51.450
UtherCookie

08:51.450 --> 08:53.820
可以吧

08:53.820 --> 08:54.820
第二

08:54.820 --> 08:55.820
Ds

08:55.820 --> 08:56.820
OK

08:56.820 --> 08:57.820
那我们接下来

08:57.820 --> 08:58.820
就需要在这个

08:58.820 --> 08:59.820
文件下面

08:59.820 --> 09:00.820
去做这个

09:00.820 --> 09:02.820
对Cookie的增添产材

09:02.820 --> 09:03.820
那我们写

09:03.820 --> 09:04.820
这么几个方法啊

09:04.820 --> 09:05.820
第一个就是

09:05.820 --> 09:09.820
SatUther

09:09.820 --> 09:11.820
这个info

09:11.820 --> 09:12.820
叫

09:12.820 --> 09:13.820
叫什么呢

09:13.820 --> 09:15.820
SatCookie吧

09:15.820 --> 09:16.820
Cookie

09:16.820 --> 09:17.820
SatCookie

09:17.820 --> 09:18.820
可以吧

09:18.820 --> 09:19.820
我们要添加Cookie

09:19.820 --> 09:20.820
添加Cookie

09:20.820 --> 09:21.820
就需要

09:21.820 --> 09:22.820
拿到一些信息

09:22.820 --> 09:23.820
对吧

09:23.820 --> 09:24.820
那我们就管

09:24.820 --> 09:25.820
那个信息叫info吧

09:25.820 --> 09:26.820
拿到这个信息之后

09:26.820 --> 09:27.820
需要怎么做

09:27.820 --> 09:28.820
是不是就需要

09:28.820 --> 09:29.820
往我们的Cookie里面

09:29.820 --> 09:30.820
去加

09:30.820 --> 09:31.820
对吧

09:31.820 --> 09:32.820
还记得咱们在学

09:32.820 --> 09:33.820
原生DS的时候

09:33.820 --> 09:35.820
诚哥带大家去封装的

09:35.820 --> 09:37.820
那样的一个工具文件吗

09:37.820 --> 09:38.820
在这里面

09:38.820 --> 09:40.820
不带大家去封装了

09:40.820 --> 09:41.820
这里面

09:41.820 --> 09:42.820
我们就用一个

09:42.820 --> 09:43.820
现成的一个插件

09:43.820 --> 09:45.820
我们就直接去设置了

09:45.820 --> 09:46.820
这个现成的插件

09:46.820 --> 09:47.820
叫DSCookie

09:47.820 --> 09:48.820
啊

09:48.820 --> 09:50.820
那我们就可以去下载一下

09:50.820 --> 09:52.820
Yes

09:52.820 --> 09:53.820
这样

09:53.820 --> 09:54.820
Cookie

09:56.820 --> 09:57.820
我们去

09:57.820 --> 09:58.820
你可以去查一下

09:58.820 --> 09:59.820
它的一个文档

09:59.820 --> 10:03.100
我们去找一下

10:03.100 --> 10:05.100
我们去看一下

10:05.100 --> 10:06.100
好像

10:06.100 --> 10:07.100
没有官方的文档

10:07.100 --> 10:08.100
是不是

10:08.100 --> 10:09.100
没有看到官方的文档

10:09.100 --> 10:10.100
没有的话

10:10.100 --> 10:11.100
不要急

10:11.100 --> 10:12.100
这里面

10:12.100 --> 10:13.100
你可以点击这个

10:13.100 --> 10:14.100
NTM里面

10:14.100 --> 10:15.100
你看它下面

10:15.100 --> 10:16.100
就有告诉你

10:16.100 --> 10:17.100
这个DSCookie

10:17.100 --> 10:18.100
怎么去用

10:18.100 --> 10:19.100
它这里面说

10:19.100 --> 10:20.100
如果你而想

10:20.100 --> 10:21.100
设置Cookie的话

10:21.100 --> 10:22.100
我们就直接去

10:22.100 --> 10:23.100
设置

10:23.100 --> 10:24.100
这样一个属性

10:24.100 --> 10:25.100
直接就可以了

10:25.100 --> 10:26.100
属性名以及属性值

10:26.100 --> 10:27.100
然后

10:27.100 --> 10:28.100
如果

10:28.100 --> 10:29.100
你想要去

10:29.100 --> 10:31.100
设置它的一个存储时间的话

10:31.100 --> 10:32.100
传辈级3个参数

10:32.100 --> 10:34.100
就是它的一个存储时间

10:34.100 --> 10:35.100
然后

10:35.100 --> 10:37.100
如果你想要去

10:37.100 --> 10:38.100
设置

10:38.100 --> 10:40.100
当前这个数据

10:40.100 --> 10:42.100
它的既想要设置存储时间

10:42.100 --> 10:43.100
又想要设置

10:43.100 --> 10:44.100
它的一个路径

10:44.100 --> 10:45.100
这个允许的

10:45.100 --> 10:46.100
一个预访

10:46.100 --> 10:48.100
我们不可以设置

10:48.100 --> 10:50.100
下面那个属性叫Cookie

10:50.100 --> 10:51.100
那然后再有就是

10:51.100 --> 10:52.100
获取这个Cookie

10:52.100 --> 10:53.100
就是通过

10:54.100 --> 10:56.100
然后再接着

10:56.100 --> 10:57.100
删除Cookie的话

10:57.100 --> 10:58.100
通过融幕

10:58.100 --> 10:59.100
方法删除

10:59.100 --> 11:00.100
那如果你已经

11:00.100 --> 11:02.100
设置了Cookie的

11:02.100 --> 11:03.100
一个路径的话

11:03.100 --> 11:04.100
这个Cookie存储的

11:04.100 --> 11:05.100
一个路径的话

11:05.100 --> 11:06.100
那你就需要

11:06.100 --> 11:07.100
把这个路径

11:07.100 --> 11:08.100
也写进去

11:08.100 --> 11:09.100
它才能删掉

11:09.100 --> 11:10.100
没了

11:11.100 --> 11:12.100
就是这个

11:12.100 --> 11:14.100
就是一个增深茶盖

11:14.100 --> 11:15.100
它已经封装好了

11:15.100 --> 11:16.100
其实就相当于

11:16.100 --> 11:18.100
我们在原生DS那一部分

11:18.100 --> 11:19.100
这个

11:19.100 --> 11:21.100
带着大家去封装了

11:21.100 --> 11:22.100
这样的一些Cookie

11:23.100 --> 11:24.100
那好了

11:24.100 --> 11:25.100
我们已经

11:25.100 --> 11:26.100
下完了

11:26.100 --> 11:27.100
下完了之后

11:27.100 --> 11:28.100
我们也入一下

11:29.100 --> 11:30.100
Cookie

11:31.100 --> 11:32.100
Cookie

11:33.100 --> 11:35.660
Cookie

11:35.660 --> 11:36.660
from

11:36.660 --> 11:37.660
FORM

11:40.660 --> 11:41.660
到我们的这个DS

11:41.660 --> 11:42.660
Cookie里面去找

11:42.660 --> 11:43.660
对吧

11:44.660 --> 11:45.660
然后在这里面

11:45.660 --> 11:46.660
我们要设置一个Cookie

11:46.660 --> 11:47.660
那我们这里面

11:47.660 --> 11:48.660
传递过来的info

11:48.660 --> 11:49.660
是我们的

11:49.660 --> 11:50.660
用户的所有的信息

11:50.660 --> 11:51.660
就在

11:51.660 --> 11:52.660
用户的所有的信息

11:52.660 --> 11:54.660
它应该是一个对象

11:54.660 --> 11:55.660
这些的吧

11:55.660 --> 11:56.660
我们刚刚存储下来的

11:56.660 --> 11:57.660
是不是对象的

11:57.660 --> 11:58.660
它里面有

11:58.660 --> 12:00.660
这个用户的名字

12:00.660 --> 12:01.660
有用户的这个

12:02.660 --> 12:03.660
APP key

12:03.660 --> 12:04.660
还有入

12:04.660 --> 12:05.660
还有email

12:05.660 --> 12:06.660
这几个数据

12:06.660 --> 12:07.660
那我们这里面怎么做呢

12:07.660 --> 12:08.660
一个

12:08.660 --> 12:09.660
如果你确定

12:09.660 --> 12:10.660
它只有这么几个

12:10.660 --> 12:11.660
属性的话

12:11.660 --> 12:12.660
你可以一个

12:12.660 --> 12:14.660
一个一个的去写

12:14.660 --> 12:15.660
这是一种方式

12:15.660 --> 12:16.660
还有一种方式

12:16.660 --> 12:17.660
我们通过便利

12:17.660 --> 12:18.660
对吧

12:18.660 --> 12:19.660
我们先去

12:19.660 --> 12:20.660
把这样的一个

12:20.660 --> 12:22.660
keyhole value值的

12:22.660 --> 12:23.660
对应的

12:23.660 --> 12:24.660
这个关系

12:24.660 --> 12:25.660
把它拿出来

12:25.660 --> 12:26.660
那我们就可以

12:26.660 --> 12:27.660
通过一个数组

12:27.660 --> 12:28.660
去存储

12:29.660 --> 12:30.660
这个数组

12:30.660 --> 12:31.660
我们就可以通过

12:31.660 --> 12:32.660
对象

12:32.660 --> 12:33.660
object

12:33.660 --> 12:34.660
身上的

12:35.660 --> 12:36.660
entrée

12:36.660 --> 12:37.660
这样的一个方法

12:37.660 --> 12:38.660
然后将它

12:38.660 --> 12:40.660
转换成数组

12:40.660 --> 12:41.660
这个是一个

12:41.660 --> 12:42.660
二维数组吧

12:42.660 --> 12:43.660
对吧

12:43.660 --> 12:44.660
它是一个

12:44.660 --> 12:45.660
二维数组

12:45.660 --> 12:46.660
这个二维数组

12:46.660 --> 12:47.660
里面的每一项

12:47.660 --> 12:48.660
它都是一个数组

12:48.660 --> 12:50.660
每一项的数组

12:50.660 --> 12:51.660
只有两项

12:51.660 --> 12:52.660
它的长度

12:52.660 --> 12:53.660
是二

12:53.660 --> 12:55.660
每一项的数组

12:55.660 --> 12:56.660
当中呢

12:56.660 --> 12:57.660
第一项

12:57.660 --> 12:58.660
所以你指为0的

12:58.660 --> 12:59.660
这一项

12:59.660 --> 13:00.660
是它的key值

13:00.660 --> 13:01.660
所以你指为1的

13:01.660 --> 13:02.660
这一项

13:02.660 --> 13:03.660
是它的value值

13:03.660 --> 13:04.660
那这里面

13:04.660 --> 13:05.660
我们就可以便利一下

13:06.660 --> 13:07.660
来

13:07.660 --> 13:08.660
我一个

13:08.660 --> 13:09.660
不用我了

13:09.660 --> 13:11.660
用

13:11.660 --> 13:12.660
用light

13:12.660 --> 13:13.660
我一个light

13:13.660 --> 13:14.660
I点一个0

13:14.660 --> 13:16.660
I小于一个

13:16.660 --> 13:17.660
AR点light

13:17.660 --> 13:18.660
对吧

13:18.660 --> 13:19.660
按一下加

13:21.660 --> 13:22.660
然后接下来

13:22.660 --> 13:23.660
我们进行

13:23.660 --> 13:24.660
设置q key

13:24.660 --> 13:26.660
我们调用q key

13:26.660 --> 13:27.660
点light

13:28.660 --> 13:29.660
然后把我们的

13:29.660 --> 13:30.660
di项的

13:30.660 --> 13:31.660
地形项

13:31.660 --> 13:32.660
拿出来作为

13:32.660 --> 13:33.660
key值

13:33.660 --> 13:34.660
di项的

13:34.660 --> 13:35.660
第一项

13:35.660 --> 13:36.660
作为value值

13:36.660 --> 13:37.660
对吧

13:37.660 --> 13:38.660
那我们这样

13:38.660 --> 13:39.660
就设置完了

13:39.660 --> 13:40.660
最后给它

13:40.660 --> 13:41.660
反回一个值

13:41.660 --> 13:42.660
反回一个复

13:43.660 --> 13:44.660
对吧

13:44.660 --> 13:46.660
然后再接下来

13:46.660 --> 13:48.660
我们再来解一个

13:48.660 --> 13:49.660
获取

13:49.660 --> 13:50.660
guide

13:50.660 --> 13:51.660
q key的

13:51.660 --> 13:52.660
方法

13:52.660 --> 13:53.660
那获取

13:53.660 --> 13:54.660
q key的话

13:54.660 --> 13:55.660
需要拿到的是

13:55.660 --> 13:56.660
它的一些

13:56.660 --> 13:57.660
这个用户的

13:57.660 --> 13:58.660
一些信息

13:58.660 --> 13:59.660
对吧

13:59.660 --> 14:00.660
那用户的信息

14:00.660 --> 14:01.660
这么多

14:01.660 --> 14:02.660
我们

14:02.660 --> 14:03.660
直接就给它

14:03.660 --> 14:04.660
反回出去吧

14:04.660 --> 14:05.660
guide

14:05.660 --> 14:06.660
u the cookie

14:06.660 --> 14:07.660
对吧

14:07.660 --> 14:08.660
我们换一个名字

14:08.660 --> 14:09.660
叫u the cookie

14:09.660 --> 14:10.660
代表的是

14:10.660 --> 14:13.170
获取

14:13.170 --> 14:14.170
用户的

14:14.170 --> 14:15.170
获取

14:15.170 --> 14:16.170
用户的

14:16.170 --> 14:17.170
q key

14:17.170 --> 14:18.170
信息

14:18.170 --> 14:19.170
嗯

14:19.170 --> 14:20.170
对吧

14:20.170 --> 14:21.170
那我们怎么获取

14:21.170 --> 14:22.170
一个一个获取吧

14:22.170 --> 14:23.170
最终

14:23.170 --> 14:24.170
反回一个对象

14:24.170 --> 14:25.170
这个对象里面

14:25.170 --> 14:27.170
有 user name

14:27.170 --> 14:28.170
user name

14:28.170 --> 14:29.170
就是通过

14:29.170 --> 14:30.170
q key获取来的

14:30.170 --> 14:31.170
来

14:31.170 --> 14:32.170
调用一下guide

14:32.170 --> 14:33.170
方法

14:33.170 --> 14:35.170
获取到 user name

14:35.170 --> 14:36.170
对吧

14:36.170 --> 14:37.170
然后还有

14:37.170 --> 14:38.170
app key

14:38.170 --> 14:39.170
我们也需要去

14:39.170 --> 14:40.170
获取一下

14:40.170 --> 14:41.170
q key

14:41.170 --> 14:42.170
调

14:42.170 --> 14:44.170
guide

14:44.170 --> 14:45.170
app key

14:47.170 --> 14:48.170
再接下来

14:48.170 --> 14:49.170
是不是还有

14:49.170 --> 14:50.170
入

14:50.170 --> 14:51.170
它的一个角色

14:51.170 --> 14:53.170
我们也需要去获取

14:53.170 --> 14:55.170
调guide

14:55.170 --> 14:57.170
调入

14:57.170 --> 14:58.170
再接下来

14:58.170 --> 15:00.170
它有个email吧

15:00.170 --> 15:01.170
对不对

15:01.170 --> 15:03.170
也需要获取一下

15:03.170 --> 15:06.170
q key 叫guide

15:06.170 --> 15:08.170
email

15:08.170 --> 15:10.170
email

15:10.170 --> 15:11.170
可以吧

15:11.170 --> 15:12.170
那我们现在

15:12.170 --> 15:13.170
就已经把这样的一个

15:13.170 --> 15:14.170
函数

15:14.170 --> 15:15.170
写好了

15:15.170 --> 15:16.170
再接下来

15:16.170 --> 15:17.170
我们再来

15:17.170 --> 15:18.170
一个

15:20.170 --> 15:21.170
上面写了

15:21.170 --> 15:23.170
设置

15:23.170 --> 15:24.170
这个

15:24.170 --> 15:25.170
获取

15:25.170 --> 15:26.170
对吧

15:26.170 --> 15:27.170
获取添加

15:27.170 --> 15:28.170
再接下来一个

15:28.170 --> 15:29.170
删除吧

15:29.170 --> 15:30.170
名目q key

15:30.170 --> 15:32.800
对吧

15:32.800 --> 15:33.800
那删除的话

15:33.800 --> 15:34.800
我们也是

15:34.800 --> 15:35.800
把这几个

15:35.800 --> 15:36.800
删除掉吧

15:36.800 --> 15:37.800
对不对

15:37.800 --> 15:38.800
那我这里面

15:38.800 --> 15:39.800
怎么去写

15:39.800 --> 15:40.800
是不是一个一个的

15:40.800 --> 15:41.800
调用呢

15:41.800 --> 15:42.800
对不对

15:42.800 --> 15:43.800
那就直接

15:43.800 --> 15:44.800
一个一个的来了

15:44.800 --> 15:45.800
或者

15:45.800 --> 15:46.800
这里面

15:46.800 --> 15:47.800
我们就直接

15:47.800 --> 15:48.800
传的一个user

15:48.800 --> 15:49.800
对不对

15:49.800 --> 15:51.800
这个remove user

15:51.800 --> 15:52.800
q key吧

15:52.800 --> 15:53.800
就叫remove user

15:53.800 --> 15:54.800
q key了

15:54.800 --> 15:55.800
代表的是

15:55.800 --> 15:56.800
一处的是

15:56.800 --> 15:57.800
用户的

15:57.800 --> 15:58.800
q key

15:58.800 --> 15:59.800
对吧

15:59.800 --> 16:01.800
user q key

16:01.800 --> 16:02.800
那我就直接

16:02.800 --> 16:03.800
调用q key

16:03.800 --> 16:05.800
调remove

16:05.800 --> 16:07.800
把这几个

16:07.800 --> 16:11.560
属性都拿过来

16:11.560 --> 16:13.560
复制一下

16:13.560 --> 16:14.560
这几个在里面

16:14.560 --> 16:15.560
去写了

16:15.560 --> 16:16.560
一共四个

16:16.560 --> 16:18.560
App

16:18.560 --> 16:19.560
也需要传递

16:19.560 --> 16:20.560
再接下来呢

16:20.560 --> 16:21.560
入

16:21.560 --> 16:22.560
也需要传递

16:22.560 --> 16:23.560
对吧

16:23.560 --> 16:24.560
再接下来

16:24.560 --> 16:26.870
email

16:26.870 --> 16:27.870
对吧

16:27.870 --> 16:28.870
然后最后

16:28.870 --> 16:29.870
我也让他

16:29.870 --> 16:30.870
委屈你的指

16:30.870 --> 16:31.870
委屈你的处

16:31.870 --> 16:36.300
可以吧

16:36.300 --> 16:38.300
这也就是

16:38.300 --> 16:39.300
移除

16:39.300 --> 16:44.590
q key

16:44.590 --> 16:45.590
OK吧

16:45.590 --> 16:46.590
那最终

16:46.590 --> 16:47.590
我们这里面

16:47.590 --> 16:48.590
是不是需要

16:48.590 --> 16:49.590
把这三个

16:49.590 --> 16:50.590
工具方法

16:50.590 --> 16:51.590
这个

16:51.590 --> 16:52.590
导出啊

16:52.590 --> 16:53.590
对吧

16:53.590 --> 16:54.590
我们这个

16:54.590 --> 16:55.590
文件

16:55.590 --> 16:56.590
最终写完了

16:56.590 --> 16:57.590
是想让

16:57.590 --> 16:59.590
想让我们在

16:59.590 --> 17:00.590
页面当中

17:00.590 --> 17:01.590
可以使用到它

17:01.590 --> 17:02.590
对吧

17:02.590 --> 17:03.590
它是作为工具

17:03.590 --> 17:04.590
出现的

17:04.590 --> 17:05.590
所以我们在

17:05.590 --> 17:06.590
追寻就模块画的

17:06.590 --> 17:07.590
一个开发原则的话

17:07.590 --> 17:08.590
我们就需要

17:08.590 --> 17:09.590
把它先导出

17:09.590 --> 17:10.590
然后在

17:10.590 --> 17:11.590
其他的模块当中

17:11.590 --> 17:12.590
我们再导入

17:12.590 --> 17:13.590
对吧

17:13.590 --> 17:14.590
那我们怎么导出呢

17:14.590 --> 17:15.590
是不是直接在

17:15.590 --> 17:16.590
前面加个

17:16.590 --> 17:17.590
pub就行了呀

17:18.590 --> 17:19.590
对吧

17:19.590 --> 17:20.590
前面加个pub

17:20.590 --> 17:21.590
就OK了呗

17:22.590 --> 17:23.590
好

17:23.590 --> 17:26.540
比较简单吧

17:26.540 --> 17:27.540
那我们什么时候

17:27.540 --> 17:28.540
去设置呢

17:28.540 --> 17:29.540
再想一下

17:29.540 --> 17:30.540
是不是应该在

17:30.540 --> 17:31.540
我们设置

17:31.540 --> 17:32.540
User

17:32.540 --> 17:33.540
设置用户信息的时候

17:33.540 --> 17:34.540
我们去设置啊

17:34.540 --> 17:35.540
那在这个

17:35.540 --> 17:36.540
在我们的

17:36.540 --> 17:37.540
这个刀里面吧

17:37.540 --> 17:38.540
那我们就需要

17:38.540 --> 17:39.540
去引入一下

17:39.540 --> 17:40.540
我们的

17:40.540 --> 17:42.540
这个User的

17:42.540 --> 17:43.540
q key

17:43.540 --> 17:44.540
那这里面

17:44.540 --> 17:45.540
我们要引入的

17:45.540 --> 17:46.540
是不是这三个

17:46.540 --> 17:47.540
工具方法

17:47.540 --> 17:48.540
那我们就需要

17:48.540 --> 17:49.540
用一个大个号

17:49.540 --> 17:50.540
来

17:50.540 --> 17:51.540
我们先把

17:51.540 --> 17:52.540
后面的这个

17:52.540 --> 17:53.540
文件

17:53.540 --> 17:54.540
先把您的目录

17:54.540 --> 17:55.540
写出来

17:55.540 --> 17:56.540
这个目录

17:56.540 --> 17:57.540
应该是User

17:57.540 --> 17:58.540
下面的

17:59.540 --> 18:01.540
src下面的User

18:02.540 --> 18:04.540
下面的Utls

18:04.540 --> 18:05.540
对吧

18:05.540 --> 18:06.540
User

18:06.540 --> 18:08.860
q key

18:10.860 --> 18:11.860
对吧

18:11.860 --> 18:12.860
然后我们这里面

18:12.860 --> 18:13.860
引入的

18:13.860 --> 18:14.860
一个guide

18:14.860 --> 18:16.860
Userinfo

18:17.860 --> 18:20.860
一个sideUserinfo

18:21.860 --> 18:22.860
对吧

18:22.860 --> 18:23.860
所以那是

18:23.860 --> 18:25.860
sideq key

18:25.860 --> 18:26.860
看出了这一下

18:26.860 --> 18:27.860
sideq key

18:27.860 --> 18:28.860
guideUserinfo

18:28.860 --> 18:30.860
remuUserinfo

18:31.860 --> 18:34.860
是不是remuUserq key

18:34.860 --> 18:36.860
这都叫错了

18:36.860 --> 18:38.860
我直接都复制过来吧

18:38.860 --> 18:40.860
这是设置的

18:40.860 --> 18:42.860
这是互取的

18:43.860 --> 18:45.860
再来一个移除的

18:45.860 --> 18:48.490
对不对

18:48.490 --> 18:49.490
移除的

18:49.490 --> 18:50.490
好

18:50.490 --> 18:51.490
那我们什么时候设置

18:51.490 --> 18:53.490
是不是应该在我们

18:53.490 --> 18:54.490
设置sideq的时候

18:54.490 --> 18:56.490
那我是不是可以写在

18:56.490 --> 18:57.490
这里

18:57.490 --> 18:58.490
也可以写在这里啊

18:58.490 --> 18:59.490
对吧

18:59.490 --> 19:01.490
两个地方都可以啊

19:01.490 --> 19:02.490
那我们这里面

19:02.490 --> 19:03.490
写在哪呢

19:03.490 --> 19:04.490
写在下面吧

19:04.490 --> 19:06.490
那在我们提交之后

19:06.490 --> 19:07.490
这里

19:07.490 --> 19:08.490
我们设置一下

19:08.490 --> 19:09.490
再q key一下

19:09.490 --> 19:11.490
把我们的Userinfo

19:11.490 --> 19:12.490
设置进去

19:12.490 --> 19:13.490
对吧

19:14.490 --> 19:15.490
那什么时候

19:15.490 --> 19:16.490
互取呢

19:16.490 --> 19:17.490
什么时候互取

19:17.490 --> 19:18.490
是不是在它

19:18.490 --> 19:19.490
出手话的时候

19:19.490 --> 19:20.490
一进来

19:20.490 --> 19:21.490
然后互取一下

19:21.490 --> 19:22.490
那我们就通过

19:22.490 --> 19:24.490
guideUserq key

19:24.490 --> 19:26.490
我们把这些数据

19:26.490 --> 19:27.490
都拿过来

19:28.490 --> 19:30.490
guideUserq key

19:30.490 --> 19:31.490
对吧

19:31.490 --> 19:32.490
调用一下不就好了吗

19:32.490 --> 19:33.490
再接下来

19:33.490 --> 19:35.490
remuUserq key

19:35.490 --> 19:36.490
什么时候调用

19:36.490 --> 19:38.490
是不是退出登录的时候

19:38.490 --> 19:39.490
那我们就需要

19:39.490 --> 19:40.490
再来一个

19:40.490 --> 19:41.490
这个退出

19:41.490 --> 19:44.490
log out的时候

19:45.490 --> 19:46.490
log out的时候

19:46.490 --> 19:48.490
bate

19:49.490 --> 19:50.490
那这里面

19:50.490 --> 19:51.490
退出的时候

19:51.490 --> 19:52.490
我需要把我们的

19:52.490 --> 19:54.490
这个User

19:54.490 --> 19:55.490
啊

19:55.490 --> 19:56.490
置为空的

19:56.490 --> 19:57.490
对不对

19:57.490 --> 19:58.490
把里面的一些信息

19:58.490 --> 19:59.490
都给人拿过来

20:00.490 --> 20:01.490
APD key

20:01.490 --> 20:02.490
都给它置为空的

20:04.490 --> 20:05.490
对吧

20:05.490 --> 20:06.490
然后再有

20:06.490 --> 20:07.490
这个入

20:08.490 --> 20:09.490
email

20:09.490 --> 20:10.490
置为空

20:11.490 --> 20:12.490
对不对

20:12.490 --> 20:13.490
然后在这里面

20:13.490 --> 20:15.490
我们也对应着去写

20:16.490 --> 20:17.490
在我们的action

20:17.490 --> 20:18.490
里面

20:18.490 --> 20:19.490
我们也对应着去写

20:19.490 --> 20:20.490
我们不要

20:20.490 --> 20:21.490
这个

20:21.490 --> 20:22.490
直接去

20:22.490 --> 20:23.490
改变

20:23.490 --> 20:24.490
我们的这个状态

20:24.490 --> 20:25.490
啊

20:25.490 --> 20:26.490
也不要通过

20:26.490 --> 20:27.490
直接通过mutation

20:27.490 --> 20:28.490
去改变

20:29.490 --> 20:30.490
这样一来

20:30.490 --> 20:31.490
我们就可以在

20:31.490 --> 20:32.490
我们的一些

20:32.490 --> 20:33.490
工具

20:33.490 --> 20:34.490
插件当中啊

20:34.490 --> 20:35.490
就像一些

20:35.490 --> 20:36.490
6的

20:36.490 --> 20:37.490
这个

20:37.490 --> 20:38.490
开发的一些

20:38.490 --> 20:39.490
插件

20:39.490 --> 20:40.490
啊

20:40.490 --> 20:41.490
它可以方便的

20:41.490 --> 20:42.490
方便我们

20:42.490 --> 20:43.490
去观察

20:43.490 --> 20:44.490
这个状态的

20:44.490 --> 20:45.490
一个改变

20:45.490 --> 20:46.490
对不对

20:47.490 --> 20:48.490
在那里

20:48.490 --> 20:49.490
它是

20:49.490 --> 20:50.490
可以被看到的

20:50.490 --> 20:53.700
email

20:53.700 --> 20:56.460
ok

20:56.460 --> 20:57.460
然后提交

20:57.460 --> 20:58.460
email

20:58.460 --> 20:59.460
去一下

20:59.460 --> 21:00.460
这个log out

21:02.900 --> 21:03.900
对吧

21:03.900 --> 21:04.900
然后这个时候

21:04.900 --> 21:05.900
我们要调用remove

21:05.900 --> 21:08.530
有点pokey

21:08.530 --> 21:09.530
对吧

21:09.530 --> 21:10.530
这个时候

21:10.530 --> 21:11.530
让它都移出来

21:12.530 --> 21:13.530
对不对

21:13.530 --> 21:14.530
那现在

21:14.530 --> 21:15.530
我们已经写完了

21:15.530 --> 21:16.530
那接下来

21:16.530 --> 21:17.530
我们怎么做

21:17.530 --> 21:18.530
看一下

21:18.530 --> 21:19.530
试验一下啊

21:19.530 --> 21:20.530
我们好像已经写完了

21:20.530 --> 21:21.530
来试验一下

21:21.530 --> 21:22.530
现在又有

21:22.530 --> 21:23.530
规范的问题了

21:23.530 --> 21:24.530
我们再去执行

21:24.530 --> 21:25.530
NTM

21:28.160 --> 21:29.160
让它自动的

21:29.160 --> 21:30.160
去修复一下

21:31.160 --> 21:32.160
诶

21:32.160 --> 21:33.160
现在也会发现

21:33.160 --> 21:35.160
好像自动修复了一些

21:35.160 --> 21:36.160
但是有一个

21:36.160 --> 21:37.160
没有办法修复

21:37.160 --> 21:38.160
他告诉我们

21:38.160 --> 21:39.160
说不准

21:39.160 --> 21:40.160
需要我们用

21:40.160 --> 21:41.160
加加的这种

21:41.160 --> 21:42.160
就算服务

21:42.160 --> 21:43.160
那我们

21:43.160 --> 21:44.160
可以把它改变成什么呢

21:44.160 --> 21:45.160
其实这个就是

21:45.160 --> 21:46.160
我们的这个

21:46.160 --> 21:47.160
ESLint

21:47.160 --> 21:48.160
的愉法规范当中

21:48.160 --> 21:49.160
我们在

21:49.160 --> 21:50.160
进行配置的时候

21:50.160 --> 21:51.160
用那个

21:51.160 --> 21:52.160
AirBin

21:53.160 --> 21:54.160
AirBinB

21:54.160 --> 21:55.160
这样的一个

21:55.160 --> 21:57.160
愉法规范的

21:57.160 --> 21:58.160
规则

21:58.160 --> 21:59.160
它的规范

21:59.160 --> 22:00.160
就是不允许

22:00.160 --> 22:01.160
有这个加加的

22:01.160 --> 22:02.160
这样的一个

22:02.160 --> 22:04.160
运算服务

22:04.160 --> 22:05.160
那我们

22:05.160 --> 22:06.160
不允许的话

22:06.160 --> 22:07.160
我们就可以

22:07.160 --> 22:08.160
给它改一下呗

22:08.160 --> 22:09.160
对吧

22:09.160 --> 22:10.160
不允许用加加

22:10.160 --> 22:11.160
我们就用加动

22:11.160 --> 22:12.160
语一

22:12.160 --> 22:13.160
试了一样的

22:13.160 --> 22:14.160
这回来看一下

22:16.160 --> 22:17.160
我们再来看一下

22:20.160 --> 22:21.160
这回是不是没有了

22:21.160 --> 22:22.160
对吧

22:22.160 --> 22:23.160
现在来看一下

22:23.160 --> 22:24.160
刷新一下

22:24.160 --> 22:25.160
再重新的

22:25.160 --> 22:26.160
跳

22:26.160 --> 22:27.160
先跳转

22:27.160 --> 22:28.160
把我们的login当中

22:28.160 --> 22:29.160
输入

22:29.160 --> 22:31.160
我们的用户的信息

22:34.620 --> 22:35.620
然后

22:35.620 --> 22:36.620
添加密码

22:37.620 --> 22:38.620
点击提交

22:38.620 --> 22:39.620
已经跳转过来了

22:39.620 --> 22:40.620
对吧

22:40.620 --> 22:42.620
这回我们刷新页面

22:42.620 --> 22:43.620
你可以发现

22:43.620 --> 22:44.620
诶

22:44.620 --> 22:45.620
是不是我们的

22:45.620 --> 22:46.620
用户名

22:46.620 --> 22:47.620
依然存在呀

22:47.620 --> 22:48.620
你看我们的数据

22:48.620 --> 22:49.620
是不是都在这里

22:49.620 --> 22:50.620
对不对

22:50.620 --> 22:51.620
现在没有问题吧

22:51.620 --> 22:53.620
那还有一个问题

22:53.620 --> 22:54.620
就是我们

22:54.620 --> 22:55.620
这样

22:55.620 --> 22:57.620
如果我们直接进入到

22:57.620 --> 22:58.620
如果我们这里面

22:58.620 --> 22:59.620
cookie里面

22:59.620 --> 23:00.620
没有这个信息的话

23:00.620 --> 23:01.620
没有这些信息

23:01.620 --> 23:03.620
我们直接进入到

23:03.620 --> 23:04.620
系统当中

23:04.620 --> 23:05.620
它是不是现在

23:05.620 --> 23:06.620
也可以让我们访问呢

23:06.620 --> 23:07.620
但是我们

23:07.620 --> 23:08.620
不想要这样的一个小伙吧

23:08.620 --> 23:09.620
我们想要的是

23:09.620 --> 23:11.620
它只有登录的一个状态

23:11.620 --> 23:12.620
我们才让它

23:12.620 --> 23:13.620
才允许

23:13.620 --> 23:15.620
让它访问这样的一个系统

23:15.620 --> 23:16.620
对不对

23:16.620 --> 23:17.620
大家可以思考一下

23:17.620 --> 23:18.620
这样的一个功能

23:18.620 --> 23:20.620
我们怎么去实现

23:20.620 --> 23:22.620
给大家

23:22.620 --> 23:23.620
一点时间去思考

23:23.620 --> 23:24.620
然后

23:24.620 --> 23:25.620
我们下一条件

23:25.620 --> 23:26.620
带着大家

23:26.620 --> 23:28.620
把这个功能实现一下

