WEBVTT

00:00.000 --> 00:05.000
这一堂课我们来构建一下咱们整体的这样的一个项目

00:05.000 --> 00:07.000
把这个项目我们构建出来之后

00:07.000 --> 00:11.000
我们再深入的去写每一个界面的一个效果

00:11.000 --> 00:18.000
我们一直在提 这个项目我们需要用一个快速的构建工具去实现

00:18.000 --> 00:23.000
这个快速构建工具就是我们的Viewer的接手架Viewer CLI

00:23.000 --> 00:28.000
那这就要求大家需要在自己的电脑上去下载Viewer CLI

00:28.000 --> 00:30.000
那这个下载是全聚的下载

00:30.000 --> 00:33.000
下载要指定回去自己去查 好吧

00:33.000 --> 00:35.000
不大家去说

00:35.000 --> 00:42.000
那怎么去查看我们这个系统到底有没有已经下载完这个Viewer CLI呢

00:42.000 --> 00:47.000
你可以去执行一下Viewer Gangang Warren

00:47.000 --> 00:51.400
当你执行这个语句之后

00:51.400 --> 00:55.400
它会给你返回我们Viewer CLI的版本号

00:55.400 --> 00:57.400
那如果返回的不是这个版本号

00:57.400 --> 01:03.400
而是View这个关键字它不认识的话

01:03.400 --> 01:05.400
那就说明你还没有下载

01:05.400 --> 01:08.400
没有下载的话去全聚下载一下就可以了

01:08.400 --> 01:09.400
可以吧

01:09.400 --> 01:13.400
那我们再来就是Viewer CLI这个交载架

01:13.400 --> 01:16.400
它是基于Node这样的一个平台的

01:16.400 --> 01:18.400
Node这个环境的

01:18.400 --> 01:21.400
所以我们要下载Viewer CLI的前提

01:21.400 --> 01:24.400
我们需要去下载一下Node

01:24.400 --> 01:31.400
因为我们这个项目它的构建的一个依赖平台就是这个Node

01:31.400 --> 01:34.400
所以需要大家去下载一下

01:34.400 --> 01:38.400
那这个Node我们可以看一下我的这个Node版本

01:38.400 --> 01:40.400
我把我的所有的版本号

01:40.400 --> 01:43.400
所有用到的技术的版本号都给大家展示出来

01:43.400 --> 01:47.400
这样也防止大家在你们学习的时候

01:47.400 --> 01:51.400
你们学习的时候出现本本不一致

01:51.400 --> 01:55.400
产生一些问题的这样的一个事情

01:55.400 --> 01:59.780
Node我们查完看一下NTM的版本

01:59.780 --> 02:00.780
我们都查一下

02:00.780 --> 02:01.780
对吧

02:01.780 --> 02:04.780
我的版本就是这样的几个版本

02:04.780 --> 02:06.780
大家可以去对照一下

02:06.780 --> 02:08.780
ok 那我们查完了之后

02:08.780 --> 02:11.780
我们现在已经确定我们有意义要来了

02:11.780 --> 02:12.780
接下来我们就构建

02:12.780 --> 02:14.780
那大家在构建我们的项目的时候

02:14.780 --> 02:17.780
一定不要在geed-buys

02:17.780 --> 02:20.780
这个工具谈判当中

02:20.780 --> 02:23.780
去执行这个创建的语句

02:23.780 --> 02:24.780
为什么不要

02:24.780 --> 02:27.780
你可以看一下当我去执行这个view-create

02:27.780 --> 02:31.780
然后加上我们的项目名称的时候

02:31.780 --> 02:33.780
你看一下它会怎么样

02:33.780 --> 02:35.780
它是不是会有这样的一些选项

02:35.780 --> 02:36.780
对吧

02:36.780 --> 02:38.780
对我们整体这个项目的一些选项

02:38.780 --> 02:39.780
我们放大一点

02:39.780 --> 02:40.780
看一下

02:40.780 --> 02:42.780
然后这个选项你会发现在这里面

02:42.780 --> 02:44.780
我们是选中不了的

02:44.780 --> 02:45.780
看到了吗

02:45.780 --> 02:46.780
我们是选中不了的

02:46.780 --> 02:48.780
我们选中不了怎么办

02:48.780 --> 02:52.780
你是不是又没有办法自己去选择

02:52.780 --> 02:56.780
你自己想要在这个项目当中的一些依赖

02:56.780 --> 02:57.780
对吧

02:57.780 --> 02:58.780
那你还需要在

02:58.780 --> 03:00.780
创建出来这样的一个项目之后

03:00.780 --> 03:02.780
手动的自己去配置

03:02.780 --> 03:03.780
自己去下载

03:03.780 --> 03:04.780
比较麻烦吧

03:04.780 --> 03:05.780
所以这里面

03:05.780 --> 03:07.780
你想要用这个view-esli

03:07.780 --> 03:08.780
这个角落架

03:08.780 --> 03:11.780
想要自己去构建我们这个项目的话

03:11.780 --> 03:15.780
我们需要在你的cmd里面去打开

03:15.780 --> 03:18.780
cmd中端的东西打开

03:18.780 --> 03:19.780
那首先

03:19.780 --> 03:21.780
我们需要去找到我们要

03:21.780 --> 03:24.780
创建这个项目的目录

03:24.780 --> 03:25.780
那我这个目录

03:25.780 --> 03:26.780
就是在这样的一个

03:26.780 --> 03:29.780
美如优先项目的class目录下面

03:29.780 --> 03:32.780
然后我们在这里输入cmd

03:32.780 --> 03:34.780
在我们的路径下面输入cmd

03:34.780 --> 03:37.780
它就会跑到了我们的中端当中

03:37.780 --> 03:38.780
看到了吗

03:38.780 --> 03:39.780
在中端里面

03:39.780 --> 03:40.780
它就会打开这样的一个文件

03:40.780 --> 03:41.780
看到了吗

03:41.780 --> 03:43.780
它就会定位到我们这个文件下面

03:43.780 --> 03:45.780
接下来我们就执行我们的这个

03:45.780 --> 03:47.780
叫做执行我们这个语句

03:47.780 --> 03:49.780
创建的语句

03:49.780 --> 03:53.780
我们就创建一个

03:53.780 --> 03:55.780
然后创建之后

03:55.780 --> 03:58.780
才让我们选择这两个选项

03:58.780 --> 04:01.780
一个是默认的

04:01.780 --> 04:02.780
它的一些配置

04:02.780 --> 04:03.780
默认的一个项目配置

04:03.780 --> 04:04.780
它说还有bubble

04:04.780 --> 04:05.780
还有eslint

04:05.780 --> 04:06.780
对吧

04:06.780 --> 04:08.780
那这并不是我们想要的

04:08.780 --> 04:09.780
我们还想要

04:09.780 --> 04:10.780
其他的一些技术

04:10.780 --> 04:11.780
像vex verouter

04:11.780 --> 04:12.780
等等一些的技术

04:12.780 --> 04:14.780
那就需要我们去自动的

04:14.780 --> 04:15.780
去配置这个项目

04:15.780 --> 04:16.780
那我们就选择

04:16.780 --> 04:18.780
第二个选项就可以了

04:18.780 --> 04:19.780
选了之后

04:19.780 --> 04:21.780
它就会让我们去选择

04:21.780 --> 04:23.780
我们这个项目当中

04:23.780 --> 04:26.780
我们要依赖的一些技术

04:26.780 --> 04:29.780
要引入的一些技术

04:29.780 --> 04:30.780
那像我们这个项目

04:30.780 --> 04:31.780
除了bubble之外

04:31.780 --> 04:33.780
我们还需要引入一个router

04:33.780 --> 04:34.780
verouter

04:34.780 --> 04:35.780
对不对

04:35.780 --> 04:36.780
还有vex

04:36.780 --> 04:38.780
然后还有一个css

04:38.780 --> 04:39.780
语处理语言

04:39.780 --> 04:41.780
css语处理语言

04:41.780 --> 04:42.780
是用来做什么的

04:42.780 --> 04:44.780
是不是就写css样式的

04:44.780 --> 04:45.780
对吧

04:45.780 --> 04:46.780
那为什么我们要选它

04:46.780 --> 04:49.780
而不是去直接用css的单码

04:49.780 --> 04:51.780
去写我们的样式呢

04:51.780 --> 04:52.780
是因为它里面

04:52.780 --> 04:56.780
会有很多很方便的一些语法

04:56.780 --> 04:59.780
能更加方便我们去进行开发

04:59.780 --> 05:00.780
举一个例子

05:00.780 --> 05:03.780
其实比较

05:03.780 --> 05:05.780
比较熟悉的一个例子

05:05.780 --> 05:07.780
就是权重的一个问题

05:07.780 --> 05:08.780
我们在写样式的时候

05:08.780 --> 05:09.780
是不是不免

05:09.780 --> 05:11.780
你需要去看一下

05:11.780 --> 05:12.780
你的权重到底

05:12.780 --> 05:15.780
是不是我们当前想要的

05:15.780 --> 05:16.780
对不对

05:16.780 --> 05:17.780
就是我们这个样式

05:17.780 --> 05:18.780
是不是我们当前

05:18.780 --> 05:20.780
想要的这个样式

05:20.780 --> 05:21.780
它可能权重

05:21.780 --> 05:23.780
比我们之前设置的这个样式

05:23.780 --> 05:24.780
权重低

05:24.780 --> 05:25.780
那它就不会作用了

05:25.780 --> 05:26.780
对不对

05:26.780 --> 05:27.780
那这是我们必须要考虑的

05:27.780 --> 05:29.780
当一些css的时候

05:29.780 --> 05:30.780
但是如果你要用

05:30.780 --> 05:32.780
css去处理语言呢

05:32.780 --> 05:33.780
那这个

05:33.780 --> 05:35.780
我们就可以不用去思考了

05:35.780 --> 05:36.780
为什么可以不用去思考

05:36.780 --> 05:38.780
是因为它的语法当中

05:38.780 --> 05:40.780
我们在写一些样式的时候

05:40.780 --> 05:43.780
我们就有一个层级关系了

05:43.780 --> 05:44.780
你就可以一层一层的

05:44.780 --> 05:46.780
浅套着去写

05:46.780 --> 05:47.780
这样的话

05:47.780 --> 05:48.780
父子级关系

05:48.780 --> 05:50.780
它就非常的明显了

05:50.780 --> 05:52.780
我们就可以很清晰的看到

05:52.780 --> 05:55.780
它应该作用到哪一个样式了

05:55.780 --> 05:56.780
对不对

05:57.780 --> 05:58.780
那这就是我们这个

05:58.780 --> 05:59.780
css的处理语言

05:59.780 --> 06:00.780
然后接下来

06:00.780 --> 06:02.780
下面这个linter

06:02.780 --> 06:04.780
就是我们的这个

06:04.780 --> 06:07.780
要用代码规范工具

06:07.780 --> 06:08.780
对吧

06:08.780 --> 06:10.780
然后在下面这两个选项

06:10.780 --> 06:12.780
我们可以不用选择它

06:12.780 --> 06:13.780
为什么不用选择它

06:13.780 --> 06:14.780
是因为我们这个项目里面

06:14.780 --> 06:16.780
我没有去写测试用力

06:16.780 --> 06:19.780
没有需要写测试安利的

06:19.780 --> 06:21.780
所以我们这里面

06:21.780 --> 06:22.780
就可以不用选它

06:22.780 --> 06:23.780
那如果你说老师

06:23.780 --> 06:25.780
我能不能用这个测试

06:25.780 --> 06:27.780
用这样的一个代码测试

06:27.780 --> 06:28.780
当然是可以的了

06:28.780 --> 06:30.780
那如果你想用代码测试的话

06:30.780 --> 06:32.780
你就可以选中

06:32.780 --> 06:33.780
其中一个

06:33.780 --> 06:36.780
选中你想要的一个

06:36.780 --> 06:38.780
那我现在已经把

06:38.780 --> 06:40.780
我所想要的做这些技术

06:40.780 --> 06:42.780
它这些选项里面

06:42.780 --> 06:44.780
我要的一些技术

06:44.780 --> 06:45.780
全部都选中了

06:45.780 --> 06:46.780
接下来浇一下

06:46.780 --> 06:47.780
回吹就可以了

06:47.780 --> 06:49.780
然后它又有一个选项

06:49.780 --> 06:50.780
告诉我们

06:50.780 --> 06:53.780
是否使用hissary这样的一个

06:53.780 --> 06:54.780
路由模式

06:54.780 --> 06:55.780
那我们这里面呢

06:55.780 --> 06:56.780
我们不用了吧

06:56.780 --> 06:58.780
我们就用这个

06:58.780 --> 07:00.780
我们就用hass的

07:00.780 --> 07:01.780
可以吧

07:01.780 --> 07:02.780
然后再接下来

07:02.780 --> 07:03.780
让我们选择

07:03.780 --> 07:05.780
css预出理语言

07:05.780 --> 07:06.780
这里面就选择一个

07:06.780 --> 07:07.780
大家比较熟悉的

07:07.780 --> 07:08.780
就是这个lice了

07:08.780 --> 07:09.780
可以吧

07:09.780 --> 07:10.780
再接下来

07:10.780 --> 07:13.780
让我们选择eslint的配置

07:13.780 --> 07:15.780
eslint这样的一个代码

07:15.780 --> 07:16.780
规范的配置

07:16.780 --> 07:17.780
它有很多

07:17.780 --> 07:19.780
你可以自己去配置

07:19.780 --> 07:21.780
你也可以用

07:21.780 --> 07:22.780
已有的

07:22.780 --> 07:24.780
已经规范化的

07:24.780 --> 07:28.780
这样的一个配置去实现

07:28.780 --> 07:29.780
那我们这里面

07:29.780 --> 07:30.780
就选择一个

07:30.780 --> 07:32.780
它已经规范好的

07:32.780 --> 07:33.780
对吧

07:33.780 --> 07:35.780
那这个规范

07:35.780 --> 07:36.780
在我们的线上

07:36.780 --> 07:37.780
线上平台当中

07:37.780 --> 07:39.780
也是有一些文档的

07:39.780 --> 07:40.780
如果感兴趣的同学

07:40.780 --> 07:41.780
可以去看一下

07:41.780 --> 07:43.780
一会我可以给大家去找一下

07:43.780 --> 07:45.780
那我这里面就选择这个

07:45.780 --> 07:47.780
rbnd

07:47.780 --> 07:49.780
这样的一个配置

07:49.780 --> 07:50.780
我们选择它

07:50.780 --> 07:51.780
选择它之后

07:51.780 --> 07:53.780
看一下下面又来一个选项

07:53.780 --> 07:55.780
问我们的是这个

07:55.780 --> 07:57.780
什么时候去教验

07:57.780 --> 07:58.780
我们的代码规范

07:58.780 --> 07:59.780
对吧

07:59.780 --> 08:00.780
然后第一个是

08:00.780 --> 08:01.780
保存的时候教验

08:01.780 --> 08:02.780
第二个是

08:02.780 --> 08:04.780
在提交的时候

08:04.780 --> 08:05.780
既要教验

08:05.780 --> 08:06.780
又要自动修复

08:06.780 --> 08:08.780
那我们把第二个也选上

08:08.780 --> 08:09.780
就是两个

08:09.780 --> 08:10.780
我们全都选上

08:10.780 --> 08:12.780
看一下汇车

08:12.780 --> 08:13.780
然后接下来

08:13.780 --> 08:14.780
问我们

08:14.780 --> 08:15.780
创建这个项目

08:15.780 --> 08:16.780
所有的配置

08:16.780 --> 08:17.780
应该清楚在哪

08:17.780 --> 08:18.780
那我们就用

08:18.780 --> 08:19.780
排下点json

08:19.780 --> 08:20.780
对吧

08:20.780 --> 08:21.780
大家比较熟悉的

08:21.780 --> 08:22.780
我们就

08:22.780 --> 08:23.780
都放在

08:23.780 --> 08:25.780
这个排下点json里面

08:25.780 --> 08:26.780
接下来

08:26.780 --> 08:27.780
让我们

08:27.780 --> 08:29.780
设置一下

08:29.780 --> 08:30.780
这个

08:31.780 --> 08:32.780
当我们

08:32.780 --> 08:33.780
一个项目

08:33.780 --> 08:34.780
创建出来的时候

08:34.780 --> 08:35.780
需不需要

08:35.780 --> 08:36.780
一个特殊的文件

08:36.780 --> 08:38.780
去配置这个precise

08:38.780 --> 08:40.780
就是预设置

08:40.780 --> 08:41.780
这样的一些

08:41.780 --> 08:43.780
这个功能

08:43.780 --> 08:45.780
那这个里面

08:45.780 --> 08:46.780
我们没有

08:46.780 --> 08:47.780
没有的话

08:47.780 --> 08:48.780
我们就直接

08:48.780 --> 08:49.780
选择no就可以了

08:49.780 --> 08:50.780
其实那个

08:50.780 --> 08:51.780
就相当于

08:51.780 --> 08:52.780
我们去配置

08:52.780 --> 08:53.780
一些插件

08:53.780 --> 08:54.780
这一类的

08:54.780 --> 08:55.780
一些配置

08:56.780 --> 08:57.780
那我们这里面

08:57.780 --> 08:58.780
没有

08:58.780 --> 08:59.780
设置

09:00.780 --> 09:01.780
OK

09:01.780 --> 09:02.780
然后等待它

09:02.780 --> 09:03.780
下载

09:11.730 --> 09:12.730
我们稍微等一下

09:12.730 --> 09:13.730
下

09:14.730 --> 09:15.730
已经下载好了

09:15.730 --> 09:16.730
你看下载好了之后

09:16.730 --> 09:17.730
它会告诉我们

09:17.730 --> 09:18.730
这个项目

09:18.730 --> 09:19.730
怎么去运行啊

09:19.730 --> 09:22.730
它说让我们先切换到

09:22.730 --> 09:23.730
CD

09:23.730 --> 09:25.730
切换到这样的项目下面

09:25.730 --> 09:26.730
然后执行

09:26.730 --> 09:27.730
npm

09:27.730 --> 09:28.730
run45

09:28.730 --> 09:35.010
就可以了

09:35.010 --> 09:36.010
我们就把

09:36.010 --> 09:37.010
这样那个项目

09:37.010 --> 09:38.010
跑起来了

09:38.010 --> 09:39.010
跑起来之后

09:39.010 --> 09:40.010
这个

09:40.010 --> 09:41.010
地质了

09:42.010 --> 09:43.010
来

09:43.010 --> 09:44.010
我们在我们的

09:44.010 --> 09:45.010
浏览器里面

09:45.010 --> 09:46.010
打开一下

09:46.010 --> 09:47.010
你看一下

09:47.010 --> 09:48.010
那现在我们的

09:48.010 --> 09:49.010
这个项目

09:49.010 --> 09:50.010
就已经构建好了

09:50.010 --> 09:51.010
那接下来

09:51.010 --> 09:52.010
我们就来

09:52.010 --> 09:53.010
开始写

09:53.010 --> 09:54.010
我们的这个项目

09:54.010 --> 09:55.010
先去分析

09:55.010 --> 09:56.010
这个项目的

09:56.010 --> 09:57.010
整体结构

09:57.010 --> 09:58.010
然后去写

09:58.010 --> 09:59.010
我们的这个项目

09:59.010 --> 10:00.010
好吧

