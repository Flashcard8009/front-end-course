WEBVTT

00:00.300 --> 00:03.900
哈喽 同学们好 咱们继续录制啊 咱们继续录制

00:03.900 --> 00:07.500
上堂课呢 咱们把这个搜索页面搞完了 对吧

00:07.500 --> 00:09.900
那对于搜索呢 其实它有个搜索结构啊

00:09.900 --> 00:12.900
就是历史搜索记录 正常我们要实现一下 对吧

00:12.900 --> 00:16.300
那这个历史搜索记录 意味着是你搜索了什么

00:16.300 --> 00:19.300
你把这个搜索结构干嘛 要记录下 对吧

00:19.300 --> 00:22.100
要记录下 这是我们要做的 这是我们要做的

00:22.100 --> 00:23.300
那在这里面啊

00:23.900 --> 00:26.340
那我们搜索的时候 是不是会触发这个所谓的

00:26.340 --> 00:29.300
Answer查试数啊 对吧 点击搜索的时候

00:29.500 --> 00:33.300
那这个 在这里面 我们应该去把它做一个存储

00:33.300 --> 00:36.300
啊 做一个存储 OK 那这样的话 我们在这里面

00:36.300 --> 00:38.700
证明一个变量 叫什么呢 叫搜索list

00:40.940 --> 00:42.940
啊 搜索list 默认是个数组

00:43.940 --> 00:47.940
那其实就很多你别管说必占啊 包括一些

00:47.940 --> 00:50.540
很多的这个历史记录 都是用的本电话存储

00:50.540 --> 00:51.940
也是low-host storage存的

00:51.940 --> 00:54.940
啊 那你包括你搜索完之后 它可能还有个排序过程

00:54.940 --> 00:58.540
啊 那说明里面还有个时间那个概念 根据时间排序嘛

00:58.540 --> 01:00.540
你最近搜索是哪个 对吧

01:00.540 --> 01:02.140
OK 那这样的话来

01:03.140 --> 01:05.540
那是不是意味着在我们搜索 呃

01:05.540 --> 01:08.940
在这个这个这个搞完之之后 原则上来说干嘛呢

01:08.940 --> 01:13.940
让this.searchlist.unshift

01:15.140 --> 01:16.940
啊 这个这个unshift

01:18.140 --> 01:20.940
什么的 装进一个对象 这个对象里面有什么呢

01:20.940 --> 01:24.140
有我们的这个value value就是你搜索的这个value值

01:24.340 --> 01:28.540
对吧 然后同时呢 还得有啥呢 还得有你的这个

01:30.540 --> 01:33.540
搜索的一个时间 因为我们用这个时间经排序嘛

01:33.540 --> 01:40.230
new date下面的 诶 new date下面的该 time

01:41.630 --> 01:43.230
啊 互取这样那个好秒数

01:43.430 --> 01:45.830
OK 存进去到这样那个对象里面

01:45.830 --> 01:49.630
然后同时呢 在对最底下 我们 诶 给它存一下什么呢

01:50.630 --> 01:52.230
这个local storage

01:52.830 --> 01:55.030
i.set at

01:57.390 --> 02:00.990
我们的searchlist

02:01.390 --> 02:02.990
啊 什么的 呃

02:03.990 --> 02:08.990
this.searchlist

02:09.990 --> 02:13.990
啊 对吧 原则上是这样 我们把这个结果存进去了

02:13.990 --> 02:14.990
啊 结果存进去了

02:15.990 --> 02:18.990
但是啊 这个还没完 这个还没完 怎么说呢

02:18.990 --> 02:21.990
那你存进去了 对吧 那所有结果都存储吗

02:21.990 --> 02:24.990
那指定不是啊 那我们指定会挑一些 对吧

02:24.990 --> 02:27.990
挑一些进行存储 也就是说我们刚来的时候

02:27.990 --> 02:30.990
我们也需要把这些值 干嘛呢 拿出来 对吧

02:30.990 --> 02:34.990
诶 拿出来 OK 那这样的话 那我们在我们的这个这个

02:34.990 --> 02:35.990
create函数里面

02:39.900 --> 02:44.900
诶 create函数里面 我们就需要干嘛 先把这个searchlist拿出来

02:44.900 --> 02:46.900
对吧 诶 拿出来

02:46.900 --> 02:48.900
this.parse

02:49.900 --> 02:51.900
local storage

02:51.900 --> 02:53.900
there.get

02:53.900 --> 02:54.900
at

02:55.900 --> 02:59.900
啊 什么的 我们的searchlist

02:59.900 --> 03:02.900
啊 那你可能拿到了 对吧 你可能拿到了

03:02.900 --> 03:05.900
那或者没拿到呢 没拿到的话就返回童书组吧

03:05.900 --> 03:08.900
啊 出示化的时候 也就是第一次的时候 我们可以这么做 对吧

03:08.900 --> 03:11.900
诶 OK 这是我们的一个搜索结果

03:11.900 --> 03:13.900
那OK啊 那拿到这还没完 这还没完

03:13.900 --> 03:17.900
这个呢 这两句话只是说 我搜索了就存一下 搜索了存一下 对吧

03:17.900 --> 03:21.900
那我们还有一个条件 就是我们只存啊 最近10次 8次这样的一个记录

03:21.900 --> 03:23.900
所以说我在上面 我需要做一个处理

03:23.900 --> 03:28.900
包括我究竟搜索之后 还需要把他的这个次序提到前面来

03:28.900 --> 03:29.900
对吧 提到前面来

03:29.900 --> 03:34.900
OK 那这样的话 我就需要处理一下啊 需要处理一下

03:34.900 --> 03:39.900
那首先 那到这干嘛呢 我先判断一下我之前有没有搜索过他 对吧

03:39.900 --> 03:43.900
那是不是意味着在我这个searchlist里面 我要做一个查找 对吧

03:43.900 --> 03:46.900
诶 OK 那这个时候干嘛呢

03:46.900 --> 03:48.900
const a result

03:48.900 --> 03:52.900
等于 诶什么的 this.searchlist

03:52.900 --> 03:57.900
searchlist.fun

03:57.900 --> 04:03.900
诶找谁啊 找我们的这个atom啊 找我们的这个searchlist里面

04:03.900 --> 04:05.900
什么的atom.value

04:05.900 --> 04:09.900
诶干嘛呢 等于等于this.value

04:09.900 --> 04:14.900
诶啊 看这样的一个结果 如果相等的话 那是我们找到了 对吧

04:14.900 --> 04:20.540
诶找到了 否则的话就没找到 那我们就判断一下

04:20.540 --> 04:27.800
诶 看看啊 没出错诶 真出了啊

04:27.800 --> 04:29.800
定义了没用 是吧 没事 在这我们判断一下

04:29.800 --> 04:32.800
这个result你是找到了 还没找到诶

04:32.800 --> 04:34.800
诶result

04:34.800 --> 04:36.800
你这个result找到了 还没找到

04:36.800 --> 04:39.800
如果找到了 那你只需要改变一下次据就行

04:39.800 --> 04:43.800
不需要往数组里面加了 对吧 没找到 你往里新加一个

04:43.800 --> 04:46.800
是这样的一个逻辑吧 诶 那OK 那这个时候干嘛呢

04:46.800 --> 04:51.800
我就让list.searchlist.sort进行排序

04:51.800 --> 04:54.800
诶 U先搜索的放到前面去

04:54.800 --> 04:56.800
诶 诶这个

04:56.800 --> 04:58.800
A

04:58.800 --> 05:03.100
B

05:03.100 --> 05:06.100
然后这个 后面的比前面的大

05:06.100 --> 05:09.100
它就往这个这个这个

05:09.100 --> 05:12.100
按最新的时间进行排 对吧 按最新 诶这样

05:12.100 --> 05:15.100
你不能说上来直接排 我们需要把这个时间重改一下

05:15.100 --> 05:18.100
对吧 重新改一下 如果找到了的话

05:18.100 --> 05:21.100
就是result.time

05:21.100 --> 05:25.100
等于什么 new date

05:26.100 --> 05:29.920
诶 你就说我们找到了时间 我说要更新一下

05:29.920 --> 05:31.920
这是你最新搜索 对吧

05:31.920 --> 05:33.920
然后紧接着 什么呢

05:33.920 --> 05:35.920
result.searchlist

05:35.920 --> 05:37.920
需要按根据时间来个降序排列

05:37.920 --> 05:39.920
对吧 降序排列

05:39.920 --> 05:41.920
OK 那干嘛呢

05:41.920 --> 05:43.920
result

05:43.920 --> 05:45.920
A

05:45.920 --> 05:47.920
干嘛 翻回 B.time

05:47.920 --> 05:51.300
减去 A.time

05:51.300 --> 05:53.300
后面的比前面的大 放到前面 对吧

05:53.300 --> 05:56.300
OK 这是它的一个排序 这是它一个排序

05:56.300 --> 05:59.300
否则的话 否则的话干嘛呢

05:59.300 --> 06:02.300
那我就 如果它是没有的

06:02.300 --> 06:04.300
那我需要从前面查入

06:04.300 --> 06:06.300
因为它需要放到最前面 对吧

06:06.300 --> 06:08.300
需要放到最前面

06:08.300 --> 06:10.300
没有的话 我先把它放到最前面

06:10.300 --> 06:13.300
然后放到最前面之后 这还没完

06:13.300 --> 06:15.300
你放完前面之后 那我得看看 对吧

06:15.300 --> 06:17.300
它如果 万一超了10个呢

06:17.300 --> 06:19.300
对吧 你总往前查还不行

06:19.300 --> 06:21.300
所以说 我得判断一下

06:21.300 --> 06:24.300
如果result.searchlist.less

06:24.300 --> 06:25.300
干嘛呢

06:25.300 --> 06:28.300
大于 这个大于等于11

06:28.300 --> 06:30.300
或者大于等于11

06:30.300 --> 06:32.300
也就取10个 对吧

06:32.300 --> 06:34.300
或者大于10的话 干嘛呢

06:34.300 --> 06:37.300
result.searchlist.pop

06:37.300 --> 06:40.300
把最后一个弹出去 最后一个标

06:40.300 --> 06:42.300
OK 那这样的话

06:42.300 --> 06:45.300
就完成了一个数据的一个存储

06:45.300 --> 06:46.300
一个整理

06:46.300 --> 06:48.300
这个本地化存储 记忆

06:48.300 --> 06:50.300
这样的一个逻辑

06:50.300 --> 06:52.300
那我们这个结果怎么显示呢

06:52.300 --> 06:54.300
就是说 在我们这个上面

06:54.300 --> 06:56.300
这个地方我们要引一个

06:56.300 --> 06:58.300
searchlist 这样的一个组件

06:58.300 --> 07:00.300
看一下啊

07:00.300 --> 07:02.300
这结果 固字list

07:02.300 --> 07:04.300
OK 跟它同级下面有一个什么的

07:04.300 --> 07:08.570
History

07:08.570 --> 07:11.570
包括这History它也有一个展示的一个逻辑

07:11.570 --> 07:12.570
对吧

07:12.570 --> 07:13.570
然后这个

07:13.570 --> 07:16.570
我们之后要写个History函数

07:16.570 --> 07:30.180
MyHistory

07:30.180 --> 07:32.180
这样的一个函数

07:32.180 --> 07:34.180
那我们干嘛呢 要把这个

07:34.180 --> 07:36.180
sergelist 传进去

07:36.180 --> 07:44.170
同时呢 我在

07:44.170 --> 07:46.170
点击搜索结果的时候

07:46.170 --> 07:53.380
我需要把这个serge也传进去

07:53.380 --> 07:55.380
我需要传这两个东西

07:55.380 --> 08:02.960
一个是把我的结果传进去

08:02.960 --> 08:03.960
一个是把我们的

08:03.960 --> 08:05.960
serge这个方法传进去

08:05.960 --> 08:07.960
一方是我点击的时候

08:07.960 --> 08:09.960
它可以正常的去

08:09.960 --> 08:11.960
点击的时候 它可以正常的去展

08:11.960 --> 08:13.960
搜索

08:13.960 --> 08:15.960
OK 那它什么时候去展示呢

08:15.960 --> 08:17.960
其实也就是守平的时候对吧

08:17.960 --> 08:19.960
所以说这个地方我也需要给大家个判断条件

08:19.960 --> 08:21.960
判断条件

08:21.960 --> 08:23.960
什么的 首先

08:23.960 --> 08:25.960
我们的这个lacklist

08:25.960 --> 08:27.960
里面东西没有值的

08:27.960 --> 08:29.960
lans是小于零的

08:29.960 --> 08:31.960
就是这个没有搜索

08:31.960 --> 08:33.960
并且干嘛呢

08:33.960 --> 08:35.960
我这个soullist必须是处的时候

08:35.960 --> 08:37.960
它才能用

08:37.960 --> 08:39.960
OK 那这样的话我们在这个组件里面

08:39.960 --> 08:44.170
写一个叫

08:44.170 --> 08:50.300
myhistory

08:50.300 --> 08:52.300
myhistorytory

08:52.300 --> 08:59.540
default

08:59.540 --> 09:01.540
来

09:01.540 --> 09:03.540
这地方写了div.history

09:03.540 --> 09:09.350
然后这个下面

09:09.350 --> 09:11.350
结果比较简单

09:11.350 --> 09:13.350
lab24 有什么的律师记录

09:14.470 --> 09:15.350
然后下面呢

09:15.350 --> 09:17.350
这些这个地方

09:17.350 --> 09:21.150
div.h Rom

09:22.150 --> 09:24.150
我们接下来要在底安径

09:24.150 --> 09:26.150
再进一个展示

09:26.150 --> 09:28.150
这是 我们的每一项

09:30.980 --> 09:32.580
每一项都在这里面展示

09:32.580 --> 09:35.580
ok 那这样的话我们是不是在这里面需要接受点东西啊

09:35.580 --> 09:37.580
比方说我们的这个probs

09:39.580 --> 09:43.580
那这里面有谁啊 有我们的search list

09:44.580 --> 09:47.580
对吧 干嘛的默认defaultdfult

09:47.580 --> 09:50.580
默认的话返回的是一个空数组

09:50.580 --> 09:53.580
就没传的话 默认是个数组 默认是个数组

10:00.200 --> 10:03.200
ok 那我们刚才开给他传了个事件 对吧

10:03.200 --> 10:07.200
传了事件 那意味着在这里面点击的时候会用到

10:07.200 --> 10:10.200
会用到 那我们现在这边

10:13.200 --> 10:16.200
在这边我们确实传进来了 对吧 传进来了

10:16.200 --> 10:21.200
那我们对于这个数据已经传过来了

10:21.200 --> 10:24.200
那我们需要给他一个样式 给他一个样式

10:24.200 --> 10:29.200
ok 在这 这个叫什么

10:30.200 --> 10:32.200
这个也一起个名吧 叫myhistory

10:33.200 --> 10:35.200
然后把这个组件引过来

10:36.200 --> 10:47.390
from components下面的myhistory.v

10:48.390 --> 10:51.220
这 拿过来

10:52.220 --> 10:56.780
然后这个下面我们需要写一个样式

10:58.780 --> 10:59.780
然后这什么呢

11:00.780 --> 11:07.370
my history

11:08.370 --> 11:14.730
然后干嘛的 给他一个默认宽度350相组

11:16.730 --> 11:19.730
然后position absolute

11:19.730 --> 11:21.730
就把上面那部分给他空出来

11:22.730 --> 11:24.730
然后这个top 35相组

11:25.730 --> 11:27.730
然后left 10

11:28.730 --> 11:31.730
然后他是最底层 所以最刚一laks我们设成1

11:32.730 --> 11:33.730
就可以了

11:34.730 --> 11:38.730
ok 这样 格式不好 咱们手动的更化一下

11:41.730 --> 11:44.730
ok 这完事了 对吧 咱们继续

11:45.730 --> 11:46.730
还有什么问题

11:50.170 --> 11:52.170
没有 应该格式完了 这是之前的一个数据结果

11:53.170 --> 11:54.170
没问题

11:55.170 --> 11:56.170
然后

11:57.170 --> 12:00.170
来 这个组件写完了 我们的数据在上面

12:00.170 --> 12:04.170
在这个地方也传进去了 对吧

12:05.170 --> 12:07.170
ok 那这个数据传进来之后

12:07.170 --> 12:09.170
我们要放到这里面去用了

12:09.170 --> 12:11.170
那在这个hist item

12:11.170 --> 12:13.170
其实我们便利的就是他 对吧

12:13.170 --> 12:16.170
在这个history item里面

12:16.170 --> 12:20.170
我们作为我们每个搜索项都放这里面去展示

12:20.170 --> 12:25.170
那这里面一定会有我们所谓的一个数据的一个便利

12:26.170 --> 12:27.170
wake up phone

12:28.170 --> 12:31.170
什么的 我们的这个item

12:31.170 --> 12:34.170
因我们的search list

12:35.170 --> 12:37.170
然后bundle key

12:40.170 --> 12:42.170
等于我们的item.time

12:42.170 --> 12:45.170
然后这里面我们还需要一个bundle key

12:45.170 --> 12:47.170
对吧 click

12:47.170 --> 12:49.170
等于search

12:49.170 --> 12:53.170
那这个search一会儿我们需要通过这个

12:53.170 --> 12:56.170
这个double image出发 对吧 value

12:57.170 --> 12:59.170
然后这里面展示的结果

13:00.170 --> 13:03.170
也是什么的 也是我们item.value 是吧

13:03.170 --> 13:05.170
然后紧接着下面这里

13:06.170 --> 13:09.170
ok 写个message

13:11.170 --> 13:14.170
这边有一个search value

13:14.170 --> 13:16.170
干嘛呢 这个search value

13:16.170 --> 13:17.170
回到这里面来

13:17.170 --> 13:22.170
我们需要执行this.dollar.amate

13:24.170 --> 13:25.170
em.it

13:26.170 --> 13:28.170
什么的search

13:28.170 --> 13:30.170
你给它绑定这个search实践吧 对吧

13:30.170 --> 13:32.170
出发复计在自己身上绑定的实践

13:32.170 --> 13:34.170
然后把这个把value传过去

13:37.480 --> 13:39.480
ok 这样的话

13:39.480 --> 13:40.480
那我们这个组件

13:40.480 --> 13:41.480
对吧 写完就写完了

13:41.480 --> 13:42.480
但还差点样式

13:42.480 --> 13:43.480
那再下面给它补上

13:47.480 --> 13:51.070
supd

13:52.070 --> 13:55.070
在这的话直接就history item

13:55.070 --> 13:57.070
这些它就行了

13:58.070 --> 14:01.070
默认外边具 15 像素

14:02.070 --> 14:03.070
然后并颜色

14:05.070 --> 14:07.070
backgrund

14:08.070 --> 14:10.070
e

14:10.070 --> 14:13.070
然后我们的这个默认的外边具

14:13.070 --> 14:14.070
border

14:15.070 --> 14:17.070
ridius 实相素

14:18.070 --> 14:21.070
然后我们的这个margin left

14:23.070 --> 14:24.070
什么呢 实相素

14:25.070 --> 14:26.070
margin bottom

14:28.070 --> 14:30.070
这个这个左边和下面都谈开

14:33.070 --> 14:34.070
实相素

14:35.070 --> 14:39.070
然后同时为了能让它水平排列并且换行干嘛呢

14:39.070 --> 14:40.070
display

14:40.070 --> 14:42.070
设置一个inland block

14:43.070 --> 14:45.070
来 这会我们过来看一下

14:52.500 --> 14:54.500
出错了 看一下哪出错了

14:54.500 --> 14:55.500
console

14:56.500 --> 14:59.500
search list is not defined

14:59.500 --> 15:04.220
是之前的错误吗

15:04.220 --> 15:06.220
哎 这有啊

15:17.500 --> 15:18.500
没 这些错了吧

15:18.500 --> 15:19.500
probs

15:19.500 --> 15:20.500
prps

15:23.130 --> 15:24.130
对吧 这会没有啊

15:24.130 --> 15:26.130
那你看我这么点击搜索9

15:26.130 --> 15:28.130
ok 这是正常搜索对吧

15:28.130 --> 15:30.130
哎 这会有一个啊就是酒水

15:31.130 --> 15:32.130
酒酒

15:33.130 --> 15:35.130
没有对吧 它都会有

15:35.130 --> 15:38.130
包括你点击酒的时候会搜出来的一个结果

15:38.130 --> 15:39.130
然后

15:39.130 --> 15:41.130
它会进行一个排序跑到前面去对吧

15:41.130 --> 15:42.130
你再搜索一个水

15:42.130 --> 15:44.130
然后或者是这个

15:46.130 --> 15:48.130
哎 营用水也没有对吧

15:48.130 --> 15:50.130
正常点击的话他们都会跑到前面去

15:50.130 --> 15:53.130
啊 ok 这是一个这样的一个结果

15:53.130 --> 15:54.130
啊 这是这样的结果

15:55.130 --> 15:57.130
那我们在这种情况下

15:57.130 --> 15:59.130
那是关于这个历史记录

15:59.130 --> 16:00.130
那其实也就做完了

16:00.130 --> 16:01.130
就是这个样子对吧

16:01.130 --> 16:03.130
那接下来啊 这个完事了

16:03.130 --> 16:04.130
它最多存十个

16:04.130 --> 16:07.130
这个咱们在这个逻辑里面已经判断好了

16:07.130 --> 16:08.130
那接下来干嘛呢

16:08.130 --> 16:11.130
接下来给我们这个数据添加一个路由

16:12.130 --> 16:13.130
那这个路由干嘛呢

16:13.130 --> 16:14.130
就是那你看啊我们这个

16:14.130 --> 16:16.130
这个现在返回是不好使的

16:16.130 --> 16:18.130
对吧 那我们需要成功的返回回去

16:18.130 --> 16:19.130
包括再进来啊

16:19.130 --> 16:21.130
这个是我们要做的一件事

16:21.130 --> 16:22.130
这是我们要做的一件事

16:23.130 --> 16:25.130
那在这里面啊 那在这里面

16:25.130 --> 16:27.130
那因为这我们需要点击它的时候

16:27.130 --> 16:28.130
出发什么呢

16:28.130 --> 16:31.130
出发我们的一个路由的一个回跳

16:31.130 --> 16:33.130
对吧 也就是说我们需要

16:33.130 --> 16:37.130
这个让我们的路由这个辩抚回去

16:37.130 --> 16:38.130
啊 回去

16:38.130 --> 16:40.130
包括这里面还有一个动画

16:40.130 --> 16:42.130
啊 就一路一出的这样一个动画

16:43.130 --> 16:44.130
那这样的话

16:44.130 --> 16:46.130
那我们就需要回到我们的

16:46.130 --> 16:49.130
呃 哪呢 回到我们的这个

16:50.130 --> 16:51.130
after view

16:51.130 --> 16:52.130
啊 这边来

16:52.130 --> 16:54.130
对吧 当我们路由期换的时候

16:54.130 --> 16:55.130
我们需要给它加一些

16:55.130 --> 16:56.130
动画的一个定义

16:56.130 --> 16:57.130
啊 动画的一个定义

16:57.130 --> 16:59.130
包括到底是先先出啊

16:59.130 --> 17:01.130
还是这个先出后进啊

17:01.130 --> 17:03.130
对吧 这里面之前会有

17:03.130 --> 17:05.130
ok 那在这里面

17:05.130 --> 17:07.130
给它套一个什么transition

17:09.130 --> 17:12.590
tr an

17:13.590 --> 17:14.590
si to

17:14.590 --> 17:15.590
transition

17:16.590 --> 17:27.330
然后这个我们要给它

17:27.330 --> 17:29.330
通过类名的方式去变化

17:29.330 --> 17:30.330
那给它class

17:31.330 --> 17:33.330
等于什么呢 等于我们的view

17:34.330 --> 17:35.330
啊 等于我们的view

17:35.330 --> 17:37.330
ok 那在这里面啊 在这里面

17:37.330 --> 17:38.330
那干嘛呢

17:38.330 --> 17:40.330
呃 那我们它应该是

17:40.330 --> 17:42.330
会有一个动画的一个名称

17:42.330 --> 17:43.330
是吧 那就ok

17:43.330 --> 17:45.330
那应该是bund name

17:45.330 --> 17:46.330
哎 等于什么呢

17:46.330 --> 17:47.330
哎 等于transition

17:47.330 --> 17:49.330
或者animation name 是吧

17:49.330 --> 17:50.330
tr an

17:50.330 --> 17:52.330
si to transition name

17:53.330 --> 17:55.330
然后呢 回到这里来

17:55.330 --> 17:57.330
那这里面data

17:57.330 --> 17:58.330
必然有一个东西

17:58.330 --> 17:59.330
叫做

17:59.330 --> 18:01.330
把什么的transition name

18:04.330 --> 18:06.330
啊 默认可能说left

18:06.330 --> 18:08.330
那之后可能会改

18:08.330 --> 18:09.330
随着我们的一个变化

18:09.330 --> 18:11.330
可能会改left

18:11.330 --> 18:12.330
ok

18:14.330 --> 18:16.330
然后 那我们在这里面

18:16.330 --> 18:18.330
在这里面 就是我们需要

18:18.330 --> 18:21.330
除了这个名称之外

18:21.330 --> 18:22.330
包括我们这个地方

18:22.330 --> 18:24.330
还需要给它一个传言模式

18:25.330 --> 18:26.330
mode

18:27.330 --> 18:29.330
啊 因为我们这个组建存在

18:29.330 --> 18:31.330
先进 后出 还是先出

18:31.330 --> 18:33.330
后进 这样的一个结果

18:33.330 --> 18:34.330
啊

18:34.330 --> 18:36.330
那所以说在这个 这个时候

18:36.330 --> 18:37.330
因为我们是从这个

18:37.330 --> 18:38.330
搜索页返回来

18:38.330 --> 18:40.330
还是说从我们当前页切进去

18:40.330 --> 18:41.330
它的结果是不一样的

18:41.330 --> 18:42.330
所以说在这个地方

18:42.330 --> 18:43.330
我们需要判断一下

18:43.330 --> 18:44.330
啊 需要判断一下

18:44.330 --> 18:46.330
包括我们需要

18:46.330 --> 18:47.330
这是两个纸 对吧

18:47.330 --> 18:48.330
都需要判断

18:48.330 --> 18:49.330
那它可能是

18:49.330 --> 18:50.330
触的时候不一样

18:50.330 --> 18:51.330
fault的时候还不一样

18:51.330 --> 18:52.330
那这会怎么办呢

18:52.330 --> 18:54.330
我们在路由这里面

18:54.330 --> 18:55.330
啊 在路由这里面

18:55.330 --> 18:57.330
上面封装个方法

18:57.330 --> 18:58.330
啊 什么的

18:58.330 --> 18:59.330
呃

18:59.330 --> 19:00.330
view

19:00.330 --> 19:01.330
点

19:01.330 --> 19:02.330
哎 不不不不

19:02.330 --> 19:03.330
view

19:03.330 --> 19:04.330
view

19:05.330 --> 19:07.330
router.proto type

19:07.330 --> 19:09.330
下面有一个byte属性

19:09.330 --> 19:11.330
默认识啊 哎 这个 false

19:11.330 --> 19:12.330
啊 然后

19:12.330 --> 19:16.330
view.router.proto type

19:16.330 --> 19:17.330
哎

19:18.330 --> 19:22.330
view.router.proto type

19:23.330 --> 19:27.640
goback

19:27.640 --> 19:28.640
等于一个function

19:28.640 --> 19:29.640
等于一个函数

19:29.640 --> 19:30.640
这个函数里面

19:30.640 --> 19:31.640
做的事

19:31.640 --> 19:32.640
那就是我们的

19:32.640 --> 19:34.640
其实就是路由回跳

19:34.640 --> 19:36.640
list.gov

19:37.640 --> 19:38.640
啊 同时呢

19:38.640 --> 19:40.640
我们把这个

19:40.640 --> 19:41.640
list.back

19:41.640 --> 19:42.640
登出

19:42.640 --> 19:44.640
啊 这个pack就跟我们的

19:44.640 --> 19:45.640
这个

19:45.640 --> 19:47.640
就跟我们的

19:48.640 --> 19:49.640
mode那个是有关系的

19:49.640 --> 19:51.640
啊 跟我们那个mode是有关系的

19:51.640 --> 19:52.640
我们通过它

19:52.640 --> 19:53.640
来进行

19:53.640 --> 19:54.640
这个改

19:54.640 --> 19:55.640
啊 来通过它进行变化

19:55.640 --> 19:56.640
啊

19:56.640 --> 19:57.640
ok

19:57.640 --> 19:58.640
呃 这样

19:58.640 --> 20:00.640
先先先让它去

20:00.640 --> 20:01.640
复语处

20:01.640 --> 20:02.640
然后再够复

20:02.640 --> 20:03.640
这个回跳页

20:03.640 --> 20:04.640
啊

20:04.640 --> 20:05.640
这个没啥问题

20:05.640 --> 20:07.640
啊 这个没啥问题

20:07.640 --> 20:09.640
呃 可是换一下

20:09.640 --> 20:28.820
嗯 稍等

20:28.820 --> 20:30.820
应该是编译出问题了是吧

20:30.820 --> 20:32.820
回来看一下

20:32.820 --> 20:34.820
啊 这个这个地方

20:34.820 --> 20:35.820
对吧 那这个地方

20:35.820 --> 20:36.820
那我们要再写

20:36.820 --> 20:37.820
咱的时候啊

20:37.820 --> 20:38.820
就就不这么去写了

20:38.820 --> 20:40.820
我们刚刚开始在

20:40.820 --> 20:42.820
这个路头原形上

20:42.820 --> 20:43.820
定义了一个值是吧

20:43.820 --> 20:44.820
ok 那这个地方

20:44.820 --> 20:45.820
我就直接写

20:45.820 --> 20:46.820
list.

20:46.820 --> 20:48.820
到路头.back

20:48.820 --> 20:49.820
啊

20:49.820 --> 20:50.820
我们通过这个值呢

20:50.820 --> 20:51.820
判断

20:51.820 --> 20:52.820
它到底是

20:52.820 --> 20:54.820
in out还是 out

20:54.820 --> 21:01.140
in out

21:01.140 --> 21:02.140
啊

21:02.140 --> 21:03.140
然后那在这

21:03.140 --> 21:04.140
啊 这没完

21:04.140 --> 21:05.140
这也没完

21:05.140 --> 21:06.140
那我们在这里面

21:06.140 --> 21:07.140
定义了这个

21:07.140 --> 21:08.140
传信

21:08.140 --> 21:09.140
是吧 那这里面

21:09.140 --> 21:10.140
我们就需要干嘛呢

21:10.140 --> 21:11.140
去

21:11.140 --> 21:13.140
给它定一些样式

21:13.140 --> 21:15.140
啊 包括它的一些逻辑

21:15.140 --> 21:16.140
啊

21:16.140 --> 21:17.140
ok 那正常来说呢

21:17.140 --> 21:18.140
我们是应该

21:18.140 --> 21:19.140
针对整个页面进行的运动

21:19.140 --> 21:20.140
是吧

21:20.140 --> 21:21.140
ok 那我们给我们这个

21:21.140 --> 21:22.140
页面

21:22.140 --> 21:23.140
w

21:24.140 --> 21:27.740
啊 w

21:27.740 --> 21:28.740
分了

21:28.740 --> 21:29.740
给它一个定位

21:29.740 --> 21:30.740
position absolute

21:31.740 --> 21:35.840
啊

21:35.840 --> 21:36.840
然后我们的

21:36.840 --> 21:37.840
left 0

21:38.840 --> 21:39.840
top 0

21:39.840 --> 21:40.840
然后我们的

21:40.840 --> 21:42.840
left 是100%

21:43.840 --> 21:44.840
啊

21:44.840 --> 21:45.840
然后我们的transition

21:46.840 --> 21:50.110
啊

21:50.110 --> 21:51.110
我们只需要让它的

21:51.110 --> 21:52.110
这个孤独属性

21:52.110 --> 21:53.110
这个这个这个

21:53.110 --> 21:54.110
这个变换属性

21:54.110 --> 21:55.110
transform

21:56.110 --> 21:57.110
srs

21:57.110 --> 21:58.110
f

21:59.110 --> 22:00.110
干嘛呢

22:00.110 --> 22:01.110
点3秒

22:02.110 --> 22:03.110
啊 然后

22:03.110 --> 22:04.110
线性变化

22:04.110 --> 22:05.110
ok

22:05.110 --> 22:06.110
那接下来就是我们的

22:06.110 --> 22:07.110
呃

22:07.110 --> 22:08.110
当我们点击的时候

22:08.110 --> 22:09.110
设一道一个路由的

22:09.110 --> 22:10.110
一个类似的那个变化

22:10.110 --> 22:11.110
对吧

22:11.110 --> 22:12.110
ok 那我们

22:12.110 --> 22:14.110
刚刚给的类似的类似的类似

22:14.110 --> 22:15.110
啊 那就学了

22:15.110 --> 22:16.110
一个点left

22:16.110 --> 22:17.110
什么的

22:17.110 --> 22:18.110
哎

22:18.110 --> 22:19.110
inter

22:19.110 --> 22:20.110
当这个

22:20.110 --> 22:21.110
刚进入的时候

22:21.110 --> 22:22.110
它的一个状态是什么的

22:22.110 --> 22:23.110
transform

22:24.110 --> 22:25.110
呃

22:25.110 --> 22:26.110
trans

22:26.110 --> 22:27.110
tr

22:27.110 --> 22:28.110
as

22:28.110 --> 22:29.110
f

22:29.110 --> 22:30.110
transform

22:30.110 --> 22:31.110
什么的

22:31.110 --> 22:32.110
translate

22:32.110 --> 22:33.110
就是x

22:33.110 --> 22:34.110
什么的

22:34.110 --> 22:35.110
100%

22:35.110 --> 22:36.110
就是

22:36.110 --> 22:38.110
从最右侧的100%进入

22:39.110 --> 22:41.110
啊 从最右侧的100%进入

22:41.110 --> 22:42.110
那同时

22:42.110 --> 22:43.110
那

22:43.110 --> 22:44.110
对于出去的时候

22:45.110 --> 22:46.110
RHT

22:46.110 --> 22:47.110
Rat

22:47.110 --> 22:48.110
啊

22:49.110 --> 22:50.110
Leave2

22:52.620 --> 22:53.620
这个呢 也一样

22:53.620 --> 22:54.620
啊 也一样

22:54.620 --> 22:55.620
就是出去的时候的一个

22:55.620 --> 22:56.620
终点也是它

22:56.620 --> 22:58.620
啊 然后我们不通过

22:58.620 --> 22:59.620
我们通过的是

22:59.620 --> 23:00.620
仅仅改变类面

23:00.620 --> 23:01.620
然后通过它

23:01.620 --> 23:02.620
去触发他们的一个

23:02.620 --> 23:03.620
运动效果

23:03.620 --> 23:04.620
啊 去触发他们的

23:04.620 --> 23:05.620
运动效果

23:05.620 --> 23:06.620
那对于我们这个

23:06.620 --> 23:07.620
设施里面来说

23:08.620 --> 23:09.620
这

23:09.620 --> 23:10.620
啊 这里面来说

23:10.620 --> 23:12.620
那当我们点击

23:12.620 --> 23:13.620
呃

23:13.620 --> 23:14.620
点击 这儿有一个

23:15.620 --> 23:16.620
Icon 对吧

23:16.620 --> 23:17.620
那它的话

23:17.620 --> 23:18.620
它也有

23:18.620 --> 23:19.620
它得有个功能吧 是吧

23:19.620 --> 23:20.620
来完成我们的

23:20.620 --> 23:21.620
页面的一个

23:21.620 --> 23:22.620
回跳的过程

23:25.620 --> 23:26.620
Add Click

23:26.620 --> 23:27.620
等于什么呢

23:27.620 --> 23:28.620
呃

23:28.620 --> 23:31.620
DollarRouter.goBack

23:31.620 --> 23:32.620
啊

23:34.620 --> 23:35.620
DollarRouter.goBack

23:35.620 --> 23:36.620
让它进行一个回跳

23:37.620 --> 23:38.620
OK 那这个时候

23:38.620 --> 23:39.620
我回来试一下

23:39.620 --> 23:40.620
看看行不行

23:40.620 --> 23:41.620
回去

23:42.620 --> 23:43.620
回来

23:43.620 --> 23:44.620
啊 对吧

23:44.620 --> 23:45.620
它是有动画

23:45.620 --> 23:46.620
但是这里面是有

23:46.620 --> 23:47.620
这个逻辑是有个变

23:47.620 --> 23:48.620
这个有问题对吧

23:48.620 --> 23:49.620
那说明我们这个

23:49.620 --> 23:50.620
True跟False

23:50.620 --> 23:51.620
是不太对的

23:51.620 --> 23:52.620
那所以说在这里面

23:52.620 --> 23:53.620
在这里面就是

23:53.620 --> 23:54.620
当我们的路由变化的时候

23:54.620 --> 23:55.620
我们需要

23:55.620 --> 23:56.620
做个判断

23:56.620 --> 23:57.620
啊 做个判断

23:57.620 --> 23:58.620
那到底是

23:59.620 --> 24:00.620
哪些路由的一个变化

24:00.620 --> 24:01.620
是从哪儿到哪儿

24:01.620 --> 24:02.620
它应该怎么做

24:02.620 --> 24:03.620
对吧 OK

24:05.620 --> 24:06.620
那回到这个

24:06.620 --> 24:07.620
这里面来

24:08.620 --> 24:10.620
这里面我们需要监听一下

24:10.620 --> 24:11.620
监听一下

24:11.620 --> 24:12.620
我们的路由的一个变化

24:13.620 --> 24:15.990
监听我们的

24:15.990 --> 24:16.990
这个路由变化

24:16.990 --> 24:17.990
它到底是

24:17.990 --> 24:18.990
从谁来到谁

24:18.990 --> 24:19.990
啊 这个

24:19.990 --> 24:20.990
一定要搞清楚

24:21.990 --> 24:32.300
DollarRouter

24:34.300 --> 24:35.300
True

24:35.300 --> 24:36.300
False

24:38.300 --> 24:39.300
干嘛呢

24:39.300 --> 24:41.300
如果True.name

24:41.300 --> 24:42.300
哎 看看

24:42.300 --> 24:43.300
我们当时定义

24:43.300 --> 24:44.300
这个路由的时候

24:50.730 --> 24:51.730
给个名

24:54.870 --> 24:55.870
name

24:55.870 --> 25:01.640
classify

25:04.640 --> 25:05.640
然后

25:09.640 --> 25:10.640
然后我们的

25:10.640 --> 25:11.640
这个src

25:11.640 --> 25:12.640
也有个名字

25:28.070 --> 25:29.070
有啥问题

25:48.470 --> 25:50.470
啊 这得是个命名喊说

26:00.460 --> 26:01.460
OK

26:02.460 --> 26:04.460
如果True.name

26:04.460 --> 26:05.460
等会等你

26:05.460 --> 26:06.460
什么的

26:06.460 --> 26:07.460
我们的

26:08.460 --> 26:09.460
classify

26:16.190 --> 26:17.190
ifl

26:19.190 --> 26:20.190
并且

26:20.190 --> 26:22.190
我们的from.name

26:23.190 --> 26:24.190
等于我们的

26:24.190 --> 26:26.190
这个src

26:28.190 --> 26:29.190
那就说明

26:29.190 --> 26:31.190
从这两个页面进行个挑换呗

26:31.190 --> 26:32.190
对吧

26:32.190 --> 26:33.190
这个时候干嘛呢

26:34.190 --> 26:35.190
如果是从

26:35.190 --> 26:37.190
这个src

26:37.190 --> 26:38.190
挑的classify

26:38.190 --> 26:39.190
什么的

26:39.190 --> 26:40.190
this

26:40.190 --> 26:43.190
DollarRouter.back

26:43.190 --> 26:44.190
等于True

26:45.190 --> 26:50.450
嘛 从它回来等于True

26:50.450 --> 26:52.450
其他情况下都等于False

26:52.450 --> 26:53.450
啊 默认也是False

26:55.450 --> 26:56.450
哎 默认也是False

26:56.450 --> 26:57.450
然后干嘛呢

26:57.450 --> 26:58.450
我们需要判断一下

26:59.450 --> 27:04.450
如果this.DollarRouter.back

27:05.450 --> 27:06.450
是True的话

27:06.450 --> 27:07.450
干嘛呢

27:07.450 --> 27:10.450
this.transition.name

27:10.450 --> 27:12.450
嘛 等于

27:12.450 --> 27:13.450
Rat

27:14.450 --> 27:15.450
就是从右侧进入

27:19.550 --> 27:20.550
else

27:24.440 --> 27:27.440
this.transition.name等于Left

27:28.440 --> 27:29.440
啊 从左侧进入

27:29.440 --> 27:30.440
然后

27:30.440 --> 27:31.440
那最 最终呢

27:31.440 --> 27:32.440
最终我们干嘛呢

27:32.440 --> 27:37.440
还需要把this.DollarRouter.back等于False

27:37.440 --> 27:38.440
啊 方便下次使用

27:39.440 --> 27:40.440
ok

27:40.440 --> 27:41.440
来 这样的话

27:41.440 --> 27:42.440
我们来看一下

27:42.440 --> 27:43.440
呃 格式化一下

27:58.680 --> 27:59.680
ok 回来啊

28:00.680 --> 28:01.680
刷新

28:02.680 --> 28:03.680
回去

28:03.680 --> 28:04.680
过来

28:05.680 --> 28:06.680
回去

28:06.680 --> 28:07.680
过来

28:07.680 --> 28:08.680
是吗

28:08.680 --> 28:09.680
哎 这是没问题的吧

28:09.680 --> 28:10.680
哎 这个是没问题的

28:10.680 --> 28:11.680
回去

28:12.680 --> 28:14.680
哎 回去这出了个问题啊

28:14.680 --> 28:15.680
就是什么呢

28:15.680 --> 28:17.680
这个应该是数据请求重了

28:17.680 --> 28:18.680
对吧

28:18.680 --> 28:19.680
哎 ok

28:19.680 --> 28:20.680
那我接下来解决这个问题

28:20.680 --> 28:21.680
啊 回去

28:21.680 --> 28:22.680
对吧 还是这样的问题

28:22.680 --> 28:23.680
回来

28:23.680 --> 28:25.680
哎 它数据有个重复

28:25.680 --> 28:27.680
那这个重复的原因是啥呢

28:28.680 --> 28:29.680
重复的原因

28:34.940 --> 28:35.940
哎

28:36.940 --> 28:38.940
等我看看啥那出问题了

28:38.940 --> 28:45.150
这少个多号

28:47.150 --> 28:48.150
ok啊 就是少个多号

28:48.150 --> 28:49.150
别的没啥

28:50.150 --> 28:53.550
回来

28:53.550 --> 28:54.550
过去

28:54.550 --> 28:55.550
回来

29:02.020 --> 29:03.020
哎 它其实有问题的 是吧

29:03.020 --> 29:04.020
ok啊

29:06.020 --> 29:07.020
那这个有问题啊

29:07.020 --> 29:08.020
有问题在哪呢

29:09.020 --> 29:11.020
回到这里 回到这里来

29:11.020 --> 29:14.020
有问题是因为我们在这个

29:14.020 --> 29:15.020
获取数据

29:15.020 --> 29:16.020
获取数据在哪

29:16.020 --> 29:18.020
呃 在

29:18.020 --> 29:20.020
list 看看啊 是不是这

29:20.020 --> 29:25.510
呃 不是不是 list

29:25.510 --> 29:27.510
是我们的 应该是我们的

29:27.510 --> 29:31.980
list

29:31.980 --> 29:36.440
我们这数据应该是重复获取了

29:36.440 --> 29:37.440
对吧

29:37.440 --> 29:39.440
而且我们这个这个组件应该是

29:39.440 --> 29:42.440
被其他的组件有一个影响

29:43.440 --> 29:44.440
啊 有一个影响

29:44.440 --> 29:45.440
那所以说我们在这个

29:45.440 --> 29:47.440
呃 排除这样的影响之后

29:47.440 --> 29:49.440
啊 再再再再处理

29:50.440 --> 29:53.440
回来看一下我们当前那个组件页面

29:57.140 --> 29:59.140
呃 指数Turview

30:00.140 --> 30:01.140
收品色纸

30:03.510 --> 30:04.510
呃 然后它对于我们上面这个

30:04.510 --> 30:06.510
组件里面有

30:06.510 --> 30:08.510
呃 塞的bar

30:08.510 --> 30:09.510
以及太的bar

30:09.510 --> 30:12.510
呃 以及我们的这个

30:12.510 --> 30:14.510
固字list

30:19.320 --> 30:20.320
嗯 来

30:22.760 --> 30:24.760
这个问题 看看啊

30:24.760 --> 30:25.760
是怎么产生的

30:25.760 --> 30:26.760
在store下面

30:26.760 --> 30:27.760
呃

30:30.760 --> 30:32.760
我们在去获取数据的时候

30:32.760 --> 30:33.760
这里面有一个

30:33.760 --> 30:34.760
short content

30:34.760 --> 30:35.760
对吧

30:35.760 --> 30:37.760
那其实当我们去变它的时候

30:37.760 --> 30:38.760
会导致一些变化

30:38.760 --> 30:40.760
因为 这它本身有一个

30:40.760 --> 30:41.760
sync weight

30:41.760 --> 30:42.760
啊 属于这种异部的

30:42.760 --> 30:43.760
每当它变化的时候

30:43.760 --> 30:44.760
这个数据都需要重新

30:44.760 --> 30:46.760
这个 获取一下

30:46.760 --> 30:48.760
呃 那我们看一下这个纸

30:49.760 --> 30:51.760
比如说这个short content

30:54.650 --> 30:55.650
看看在哪儿用到了

30:58.150 --> 30:59.150
嗯

31:00.150 --> 31:01.150
哎呀 这是这

31:03.150 --> 31:04.150
short content

31:04.150 --> 31:05.150
啊

31:05.150 --> 31:06.150
那在这里面 在这里面

31:06.150 --> 31:07.150
就是说用到了它

31:07.150 --> 31:08.150
对吧 用到了

31:08.150 --> 31:10.150
尤其是我们的这个固字list

31:10.150 --> 31:11.150
啊 尤其是我们的固字list

31:11.150 --> 31:12.150
和塞的bar

31:12.150 --> 31:13.150
因为在这里面啊

31:13.150 --> 31:14.150
干嘛呢

31:14.150 --> 31:15.150
会涉及到

31:15.150 --> 31:17.150
我们数据的一个重新

31:17.150 --> 31:18.150
请求

31:18.150 --> 31:19.150
这样的一个处理

31:19.150 --> 31:20.150
是吧 这样的一个处理

31:22.150 --> 31:23.150
那所以说

31:23.150 --> 31:24.150
那在这里面啊

31:24.150 --> 31:25.150
我们就得判断一下

31:25.150 --> 31:26.150
啊 判断一下

31:27.150 --> 31:28.150
就是或者说

31:28.150 --> 31:29.150
监听一下吧

31:29.150 --> 31:30.150
当我们这个纸

31:30.150 --> 31:32.150
干嘛呢 发生了变化

31:32.150 --> 31:33.150
哎 我 我决定

31:33.150 --> 31:34.150
要不要让它

31:34.150 --> 31:36.150
去重新的

31:36.150 --> 31:38.150
获取数据

31:38.150 --> 31:39.150
啊 要不要让它

31:39.150 --> 31:40.150
重新获取数据

31:42.150 --> 31:44.150
那有时候在它的下面

31:44.150 --> 31:45.150
在它的下面干嘛呢

31:45.150 --> 31:47.150
我去监听一下

31:47.150 --> 31:48.150
握持

31:48.150 --> 31:52.450
监听一下谁呢

31:52.450 --> 31:54.450
监听这个short content的

31:54.450 --> 31:55.450
啊

31:55.450 --> 32:00.830
也就是说

32:00.830 --> 32:01.830
只有他是出

32:01.830 --> 32:02.830
哎

32:02.830 --> 32:07.740
如果这个

32:12.490 --> 32:14.490
this.short content

32:14.490 --> 32:15.490
干嘛呢 等等一处

32:15.490 --> 32:16.490
这个关键啊

32:16.490 --> 32:18.490
看着有点小难受

32:18.490 --> 32:19.490
啊 就是如果

32:19.490 --> 32:21.490
它是存在的

32:21.490 --> 32:22.490
就是因为这当前

32:22.490 --> 32:24.490
这个组建可以被展示的时候

32:24.490 --> 32:25.490
干嘛呢 我需要

32:25.490 --> 32:27.490
哎 去这个拉

32:27.490 --> 32:28.490
去请求数据

32:28.490 --> 32:30.490
啊 去请求数据

32:31.490 --> 32:33.490
也就是说在这个地方

32:33.490 --> 32:35.490
我们需要把

32:36.490 --> 32:38.490
两个方法拿过来

32:38.490 --> 32:39.490
masters

32:42.700 --> 32:43.700
map

32:45.700 --> 32:46.700
mutations

32:46.700 --> 32:53.980
这边干嘛呢

32:53.980 --> 32:54.980
reset

32:55.980 --> 32:57.980
goods list

32:59.980 --> 33:00.980
然后

33:01.980 --> 33:02.980
map action

33:03.980 --> 33:04.980
这里面干嘛呢

33:04.980 --> 33:05.980
get

33:06.980 --> 33:07.980
goods list

33:08.980 --> 33:14.490
getgoods list

33:17.490 --> 33:19.490
哎 那因为这两个过程

33:19.490 --> 33:20.490
这两个结果干嘛呢

33:20.490 --> 33:22.490
我们都需要放到

33:22.490 --> 33:23.490
我们的

33:25.490 --> 33:26.490
这里面来

33:27.490 --> 33:28.490
然后这个时候

33:28.490 --> 33:29.490
我们需要

33:29.490 --> 33:30.490
reset一下

33:32.490 --> 33:33.490
goods list

33:33.490 --> 33:35.490
我们需要把里面的内容清空

33:35.490 --> 33:36.490
然后同时

33:36.490 --> 33:38.490
我们需要发一个请求

33:38.490 --> 33:39.490
去这个

33:39.490 --> 33:40.490
获取我们想要的内容

33:40.490 --> 33:41.490
什么的

33:41.490 --> 33:42.490
this.get

33:43.490 --> 33:44.490
goods list

33:45.490 --> 33:46.490
那里面会传些值

33:46.490 --> 33:48.490
比如说我们的type

33:48.490 --> 33:49.490
和我们的page

33:49.490 --> 33:50.490
和sort type

33:51.490 --> 33:54.500
那这个的话

33:54.500 --> 33:55.500
应该是

33:56.500 --> 33:57.500
这句话说了

33:57.500 --> 33:58.500
page是一

33:58.500 --> 33:59.500
也没有问题

34:01.500 --> 34:03.500
嗯 但这个type怎么来

34:08.380 --> 34:09.380
那type应该是我们的

34:09.380 --> 34:10.380
什么呢

34:10.380 --> 34:11.380
setlist0是吧

34:11.380 --> 34:12.380
ok

34:12.380 --> 34:15.380
this.setlist0

34:16.380 --> 34:17.380
那这个setlist

34:17.380 --> 34:19.380
应该在store里面

34:20.380 --> 34:23.780
有是吧

34:23.780 --> 34:24.780
ok 那我把它拿过来

34:25.780 --> 34:29.430
嗯

34:29.430 --> 34:31.430
这是在写一个什么呢

34:31.430 --> 34:34.430
setlist

34:35.430 --> 34:36.430
set

34:37.430 --> 34:40.430
下面的set.setlist

34:41.430 --> 34:42.430
把这个字拿过来

34:43.430 --> 34:44.430
诶 课字画一下

34:45.430 --> 34:59.560
然后这个地方就不这么写了

35:00.560 --> 35:01.560
这些这么写的

35:02.560 --> 35:06.150
ok

35:06.150 --> 35:08.150
来 这个时候刷新一下

35:09.150 --> 35:10.150
安徽

35:11.150 --> 35:15.620
还是有这样一个重复的问题是吧

35:16.620 --> 35:17.620
看一下

35:18.620 --> 35:19.620
我们在

35:20.620 --> 35:22.620
能获取请求是这个goods类

35:24.620 --> 35:25.620
setbar

35:25.620 --> 35:26.620
对吧

35:26.620 --> 35:27.620
签完它之后

35:27.620 --> 35:28.620
去回数据

35:28.620 --> 35:29.620
ok 能把这个注释一下

35:36.300 --> 35:37.300
刷新

35:40.180 --> 35:41.180
刷新

35:41.180 --> 35:42.180
回来

35:42.180 --> 35:43.180
回去

35:43.180 --> 35:44.180
回来

35:45.180 --> 35:46.180
再回去

35:47.180 --> 35:48.180
再回来

35:48.180 --> 35:49.180
对吧

35:49.180 --> 35:50.180
这样的话就没有问题了

35:50.180 --> 35:52.180
这样的话就没有问题了

35:52.180 --> 35:53.180
然后那这样的话

35:53.180 --> 35:55.180
对于我们的搜索页面

35:55.180 --> 35:56.180
包括这个历史记录

35:56.180 --> 35:57.180
我们搜索

35:57.180 --> 35:58.180
那今天来下堂课干嘛呢

35:58.180 --> 35:59.180
我们要做这个

35:59.180 --> 36:01.180
勾车的这样一个功能

36:01.180 --> 36:03.180
把这个勾车页面实现之后

36:03.180 --> 36:04.180
那我们这个东西

36:04.180 --> 36:05.180
就没事了

