WEBVTT

00:02.160 --> 00:07.660
各位同学 大家好 这期课我们技校考核模块的一个代码讲解

00:07.660 --> 00:10.660
那么在技校考核这一部分制作的时候

00:10.660 --> 00:14.660
其实呢 他跟我们的这个直级 包括我们的员工制作的时候

00:14.660 --> 00:18.160
里面的业务逻辑处理啊 是非常相似的

00:18.160 --> 00:23.160
那在技校考核里面 我们如果说要制作这个模块 怎么办呢

00:23.160 --> 00:26.160
这个时候 我们首先要明确几个问题

00:26.160 --> 00:30.660
第一 我们要定制技校考核相应的文件夹

00:30.660 --> 00:34.660
在这个文件夹里面 我们首先要考虑的问题是什么呢

00:34.660 --> 00:38.160
这里面 我们可能会涉及到数据的请求

00:38.160 --> 00:42.660
那数据请求这一块 我们要看我们封装好的assignment

00:42.660 --> 00:48.160
这里面有获取考核的一个列表 包括详情以及更改

00:48.160 --> 00:53.160
还有就是我们创建以及删除的相应的接口

00:53.160 --> 00:59.160
那这个接口里面准备好了之后 我们再来定义这个model就ok了

00:59.160 --> 01:05.660
那这个model里面呢 保存了我们跟直级非常相似的一些相应的这个状态

01:05.660 --> 01:13.660
比如说我们的技校考核的列表 以及它的这个后端数据的一个长度

01:13.660 --> 01:17.660
包括我们的一个技校考核的一个详情

01:17.660 --> 01:21.660
一次的我们对应了相应的一些处理方法

01:21.660 --> 01:27.660
比如说获取我们技校考核的一个异部的处理

01:27.660 --> 01:31.160
还有呢 就是获取我们的assignment info

01:31.160 --> 01:37.160
其实呢 这个就是获取我们的一个详情啊 在这里跟同学们答应一下

01:37.160 --> 01:42.160
获取技校考核 详情 ok

01:42.160 --> 01:47.160
当你把这些都定义完成之后呢 我们还有一个问题是需要注意一下的

01:47.160 --> 01:52.160
是什么问题呢 就是说在我们在进行使用数据的时候

01:52.160 --> 01:55.160
其实这里面呢 离不开一个验证规则

01:55.160 --> 02:02.660
所以说我们在Utils下面定义一个针对技校考核的验证规则assignment ruler

02:02.660 --> 02:10.660
当你定义好assignment ruler之后 那我们在index.js里面对它进行一个引用

02:10.660 --> 02:13.660
也就是说在这个里面把它也做一个引用

02:13.660 --> 02:20.660
这些全部都准备好了之后 那这些配套的状态包括接口请求API

02:20.660 --> 02:26.160
我们都准备好之后 那现在呢 就可以来进行我们结构的开发了

02:26.160 --> 02:31.160
也就是说其实你可以考虑一下 在你自己在做这个代码编写的时候

02:31.160 --> 02:36.160
也可以按着这个顺序来进行一个业务的开发

02:36.160 --> 02:42.160
这样呢 会保证我们的一个代码的一个逻辑性啊 执行起来是非常流畅的

02:42.160 --> 02:46.660
否则如果说你想起来什么做什么 那这个时候呢 有可能会造成我们

02:47.160 --> 02:51.160
数据啊 或者是我们的一个逻辑处理的一个混乱啊

02:51.160 --> 02:58.160
我们先来看一下这个主文件 主文件里面呢 上面是一些配套内容的引用

02:58.160 --> 03:04.160
在level里面我们已经说过了 那在这个里面呢 就不再跟大家重复了

03:04.160 --> 03:11.160
有一些呢 是本组件里面的内容 还有一些呢 是我们可以附用的一些公共组件的

03:11.660 --> 03:18.660
比如说我们的这个youtube common 呢 或者是这个dialogue 那像这些呢 他都是一些可附用的

03:18.660 --> 03:23.660
在这个里面 我们都有哪些模块 首先我们定义一个

03:23.660 --> 03:30.660
针对我们这个弹窗打开的这么一个提示状态的一个维护

03:30.660 --> 03:35.660
也就是说在本组件里面定义这么一个状态 之后呢 我们接收几个值

03:35.660 --> 03:43.660
首先第一我把这个列表接收过来 之后呢 就是它的这个长度 也就是说我们后端数据的一个

03:43.660 --> 03:49.160
总长度 还有一个呢 就是我们的一个详情 但这些都接收过来之后

03:49.160 --> 03:53.160
那这个时候呢 我们就可以按着模块来进行实现了

03:54.660 --> 04:01.160
每一个模块处理啊 其实他们的这个跟我们直级 以及我们的这个员工处理这一块

04:01.160 --> 04:08.160
相次度是非常高的 比如说对这个头部 黑包海带的处理 那这个黑包海带处理呢

04:08.160 --> 04:15.160
我跟这个员工啊 有一个区别是什么呢 我这里面啊 给他传递的这个赛子是五

04:15.160 --> 04:22.160
因为我们的数据量不是特别大 所以说呢 我按每一样 显示五条来给他进行一个处理

04:22.160 --> 04:28.660
包括我们初始化数据请求的时候 那在这个里面 我们传递赛子的时候

04:28.660 --> 04:36.660
也是给了他一个数字五 这个呢 我们要知道一下 之后呢 里面就是进行一个分页的更改

04:36.660 --> 04:44.660
当你更改分页的时候 直接的去请求第二页的一个数据 那这些呢和我们之前的做法

04:44.660 --> 04:52.660
基本上是完全一致的 接下来呢 我们再说一下这个搜索的模块 搜索的模块呢

04:52.660 --> 04:58.660
中规中矩啊 和我们之前使用的时候是完全一致的 比如说我们这个set container

04:58.660 --> 05:05.660
对set container处理 其实呢 就是和我们以前写的啊 基本上是完全一致 他就是一个

05:05.660 --> 05:10.660
包裹 那这个包裹里面呢 有针对当前模块进行搜索的

05:10.660 --> 05:16.660
我们这个里面的一个表单 那主要看呢 是看我们的这个表单啊

05:17.660 --> 05:23.660
也就是说这个filter form 在定义的时候 他这个里面内容就相对比较少了

05:23.660 --> 05:26.660
比如说只有一个考核员工 跟这个考核年份

05:27.660 --> 05:32.660
如果你想进行搜索的时候 那这个时候呢 我们直接的进行这个

05:32.660 --> 05:38.660
考核员工和这个考核年份的一个获取就可以了 比如说我们对这个

05:39.660 --> 05:45.660
想查找某一个用户 那这个时候他是没有这个用户的 对不对 这个他就显示不出来啊

05:47.660 --> 05:52.660
比如说我们点击账楼 ok 这里面有一条数据 那现代的年份呢是2021年

05:52.660 --> 06:00.660
如果说我要调成2020年 他是不是就没有啊 这个呢 就是我们一个基本操作啊 其实呢 跟我们之前的这个操作

06:01.660 --> 06:08.660
非常像 所以说呢 我们可以在这个比较熟的基础下 如果说呢 你涉及到一些附用的代码

06:08.660 --> 06:11.660
可以也可以进行一个粘贴处理啊

06:12.660 --> 06:21.660
这个就是我们的一个过滤的这一块啊 搜索过滤 那搜索过滤这一块下面是什么呢 就是我们的这个

06:22.660 --> 06:31.660
表格的这一部分内容了 表格这一部分内容 其实呢 他呢 里面的内容最主要的是我们要定义这个close

06:32.660 --> 06:42.660
你像这个adb row和这个adb sale呢 在我们之前啊 每一个组件里面使用对他来说啊 基本上都是相同的 在使用这个close的时候

06:43.660 --> 06:45.660
我们可以看一下他里面的内容

06:46.660 --> 06:51.660
像这个close内容呢 嗯 每一个组件都不一样 对不对 每一个模块都不一样

06:52.660 --> 06:59.660
所以说呢 我们要准备啊 定义好这些相应的自断 也就是说你在使用自断的时候 这个不要混淆

07:00.660 --> 07:07.660
而且呢 还有一个问题就是什么呢 我们的这个里面啊 有一些修改像 他是可修改的 还有一些呢 是不能修改的

07:07.660 --> 07:17.660
所以说你在这个里面使用adb的时候 你自己要考虑一下 比如说我们的这个考核时间 他是能修改的 那至于其他的呢 就不能修改

07:17.660 --> 07:19.660
所以说呢 这个我们要清楚一下啊

07:20.660 --> 07:26.660
但是我们刚才看呢 这个技巧考核 如果我选择时间的话 这个里面会有一个爆错

07:27.660 --> 07:31.660
那这个爆错原因市场呢 其实还是因为我们之前遇到过的一个问题

07:32.660 --> 07:40.660
如果说我对时间进行修改 那这个时候呢 他要获得一个是期对象 那此时呢 我们是没办法进行期对象获取的

07:41.660 --> 07:43.660
这个怎么来处理 其实也非常简单啊

07:44.660 --> 07:53.660
我们可以看一下 在这个src components 对这个可编辑单元格我们处理的时候 是在这个adb下面 有一个index

07:53.660 --> 07:58.660
那之前呢 我们这个入职时间unbolding time 他渲染的时候就会出现这种问题

07:59.660 --> 08:06.660
那现在我们怎么来解决呢 其实我们在这里啊 可以把这个考核的时间给他进行一个添加就ok了

08:07.660 --> 08:13.660
如何来进行考核时间的一个查看 也就是说他这个字段是什么 那这个呢 你需要明确一下

08:14.660 --> 08:16.660
也就是说呢 你打开assignment column里面

08:17.660 --> 08:22.660
column里面对日期对象的这种type渲染 那在这个里面他是有描述的

08:23.660 --> 08:33.660
col data index 等于data的话 那这个时候呢 他去走data node 此时我们已经知道了这个运算的这个啊 处理了一个方式之后

08:34.660 --> 08:43.660
那我们这里面就可以写一下 如果说是日期对象 那我recode.date使用moment方法来把它变成一个日期对象

08:44.660 --> 08:49.660
是不是就ok了 那在这个时候再次进行点击 ok 你会发现这个时候是不是就没有问题了

08:49.660 --> 08:56.660
对吧 那他呢 就是我们一个优化的这么一个处理啊 或者是呢说可以理解为是我们一个容错的处理

08:57.660 --> 09:07.660
你像其他的啊 在这里面我们还需要注意点是什么呢 引入一个他自己的验证规则 把这个验证规则给做一个替换就ok了

09:08.660 --> 09:15.660
这个呢 就是我们一个额外的处理啊 之后那这些都处理完成之后 那继续回到我们的这个表格这一块

09:15.660 --> 09:22.660
表格这一块呢 就是一个保存修改 还有一个呢 就是我们点击这个位置进行一个详情的获取

09:23.660 --> 09:30.660
那这两部分的内容我们要指导一下 获取详情的时候 其实呢和我们其他模块也是非常相似的

09:31.660 --> 09:38.660
有些呢是可以修改的 有些呢是不能修改的 但这个里面我们看一下 像这里面的内容多出来两个

09:38.660 --> 09:47.660
是一个是什么呢 一个是所在部门 还有一个是我们的入职时间 那他们是怎么来实现一个渲染的呢 我们可以看一下

09:48.660 --> 09:58.660
找到我们的这个detail.js差 到detail.js差里面 其实这个呢就是详情 在详情处理的时候我引用了两个列表

09:58.660 --> 10:08.660
一个是assignment list的 也就是说我们规定好的在static下面创建的精彩数据 还有一个呢就是readdates

10:09.660 --> 10:17.660
有一个指读列表 那为什么定义两个 这里面的原因呢 主要是在于我们如果对击销考核里面的相不问

10:18.660 --> 10:26.660
相关内容进行创建的时候 那这个时候呢就会涉及到 如果说你是新登记要考核 那这个时候是没有必要展示

10:27.660 --> 10:35.660
我们底下的两部分内容的 对不对 那所以说 我们呢分别啊来对他进行一个处理

10:36.660 --> 10:45.660
如果说你要是详情的时候 假如说我现在这个里面点击 那在详情展示的时候 可能详情里面展示的内容越多越好

10:46.660 --> 10:50.660
对不对 那在这个时候呢 我们就把所在部门和入职时间给他进行一个展示

10:50.660 --> 10:58.660
然后呢 你至于修改啊 或者是其他的这个考核等级的一些处理啊 你该怎么处理怎么处理 这个无所谓的事对不对

10:59.660 --> 11:05.660
也就是说原来怎么做 现在还怎么做就ok了啊 那我们这个只是多给他添加了一个什么

11:06.660 --> 11:13.660
所在部门和入职时间的这么一个静态数据展示 这个呢就是detail里面我们要注意的一个点

11:13.660 --> 11:20.660
然后呢 至于我们这些下拉菜单呢 比如说我们对于这个直级的一个处理 那你看t3-2

11:21.660 --> 11:27.660
那像这些内容呢 我们直接的就可以来进行一个什么复用就ok了啊

11:28.660 --> 11:33.660
这个呢 就是我们想起的这一块 还有一个是什么呢 就是我们的一个

11:35.660 --> 11:41.660
新增的一个模块 新增这个模块呢 我们在哪个里面处理的 就是在我们这个

11:41.660 --> 11:47.660
呃 dialog里面啊 dialog里面这里面有一个新增计调考核 那计调考核这一块

11:48.660 --> 11:54.660
其实他跟我们其他模块有一点区别是什么呢 这里面有一个运算的处理啊

11:55.660 --> 12:01.660
什么样的一个运算处理 我们可以看一下新增 新增是这个create data

12:02.660 --> 12:08.660
在这个create data里面首先呢 我们要给他自己做一个应设 也就是说当你去

12:08.660 --> 12:16.660
创建一个计较考核记录的时候 那像这种日期呀 或者说是我们的这个员工 你正常天就可以了

12:17.660 --> 12:23.660
底下的表单呢 我们是有一个运算规则的 如果说我们指定了一个直级 那你会发现

12:24.660 --> 12:33.660
他这个时候呢 就会把我们当前直级关联的这个分数给他进行一个展示 那这个呢 是需要我们来做的

12:33.660 --> 12:42.660
处理他的这个点在哪啊 就是在这个里面 我们照个proper的时候 假如说你要是选择了下拉菜单

12:43.660 --> 12:49.660
那因为下拉菜单里面啊 每一个直级都有对应的分数 你直接把这个分数给进行炫上就可以了

12:50.660 --> 12:56.660
也就是说当你想达标考核到t5-3的时候 那你这个时候呢 必须要达到60分

12:56.660 --> 13:03.660
然后呢 我们这个里面还有一个什么呢 还有一个考核得分的运算 当你输入完考核得分的之后

13:04.660 --> 13:11.660
我们这个考核等级结果呢 要自动进行一个展示 假如说我现在这个里面100分

13:12.660 --> 13:19.660
那100分呢 他就是一个a结果 对不对 那假如说我要是10分呢 那你看10分的是不是就c了

13:19.660 --> 13:26.660
如果说我要是70分 这个里面 那他就是一个结果b 也就是说现在我们其实看到了2点

13:27.660 --> 13:35.660
第一考核等级结果 那这个呢 是由运算生成 所以说我们设置这个表单的时候 只给他一个read only属性就可以了

13:36.660 --> 13:41.660
还有一个呢 就是我们对应直级分数这一块 对应直级分数这一块 其实就是根据我们

13:42.660 --> 13:47.660
调整直级这一部分的一个下拉菜单切换的时候做一个处理 其实就是在这啊

13:48.660 --> 13:56.660
如果说我们判定当前的一个下拉菜单为current level的时候 你在选定状态下

13:57.660 --> 14:03.660
进行一个值的设置 那设置值的时候 其实就是设置我们这个

14:04.660 --> 14:12.660
对应直级的一个分数 然后呢 还有一个就是什么呢 我们的这个考核得分啊 如果说你对考核得分处理的时候

14:12.660 --> 14:18.660
那在这个时候呢 我们要去监听一下 比如说我们这个里面获取一个什么呢

14:19.660 --> 14:28.660
student soccer和这个assentment soccer 把他们两个值都拿到之后 你在这个里面 比如说我们这个结果小一零 那就是什么

14:29.660 --> 14:31.660
c 如果说大一零 并且呢

14:32.660 --> 14:38.660
我们这个值小于二十 那就是b 假如说不满足这个条件 那就是说明他在这个考核成绩啊

14:39.660 --> 14:48.660
非常高 那就是a 的一个选项 所以说呢 你这两个啊 是我们要注意的一个点啊 除了这几个点之外 我们其他的

14:49.660 --> 14:58.660
基本上 也没有什么特别多的一个业务逻辑在这个里面 因为我们这个组件里面设计到的复用的内容

14:59.660 --> 15:02.660
之前都已经定义好了 所以说我们拿过来直接使用就ok了

15:03.660 --> 15:12.660
以上这些呢 就是我们对技校考核模块的一个所有的业务逻辑处理 所以说同学们在使用的时候

15:13.660 --> 15:20.660
或者说在写的时候 你如果说对这个业务逻辑感到困惑或者是不太熟悉怎么办呢

15:21.660 --> 15:28.660
那在这个时候呢 我们就可以借鉴一下直级或者是我们员工部分的一个代码制作就ok了

15:28.660 --> 15:31.660
好的 我们本节个的内容就到这里

