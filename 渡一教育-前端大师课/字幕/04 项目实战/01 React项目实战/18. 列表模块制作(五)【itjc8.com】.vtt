WEBVTT

00:01.260 --> 00:06.120
各位同学大家好 这节课我们继续按立制作的一个课程学习

00:06.120 --> 00:12.780
那么通过上节课的学习我们已经实现了获取员工详情数据的这样一个操作

00:12.780 --> 00:19.180
那么本节课我们就根据获取到的员工详情数据来把组件给制作完成一下

00:19.180 --> 00:24.560
首先我们要明确一下制作员工详情组件它都实现哪些功能

00:24.560 --> 00:28.400
第一个就是展示选定员工的一个详细信息

00:28.400 --> 00:31.480
我们可以对照已经完成的版本来看一下

00:31.480 --> 00:36.840
当我点击用户名右边的这个图标的时候

00:36.840 --> 00:41.720
它在这个右侧会强出一个抽屉的一个弹窗

00:41.720 --> 00:45.560
这个抽屉弹窗里面就是我们员工的一些基本信息内容

00:45.560 --> 00:46.840
这是第一个需求

00:46.840 --> 00:50.420
第二个是实现员工部分自断的一个修改功能

00:50.420 --> 00:51.440
这个怎么理解

00:51.440 --> 00:53.240
比如说这里面姓名是张飞

00:53.240 --> 00:55.800
然后这个里面我们改一下

00:55.800 --> 01:00.400
把它的姓名改成关于咱们来试一下

01:00.400 --> 01:03.480
OK当我修改完成之后如果说这个

01:03.480 --> 01:07.580
输入框失去焦点的时候那这里面会有一个修改操作

01:07.580 --> 01:11.920
修改操作的时候我把这个详情界面给进行了一个修改

01:11.920 --> 01:14.740
并且处罚我们后面的这个

01:14.740 --> 01:17.820
员工列表里面的这个自断的一个更改

01:17.820 --> 01:20.120
当然了这只是更改其中的一个自断

01:20.120 --> 01:23.260
至于里面其他自断也都是可以进行一个更改的

01:23.260 --> 01:24.620
这是第二个功能

01:24.620 --> 01:27.500
第三个可以删除当前的指定员工

01:27.500 --> 01:30.000
我们对员工还可以进行一个删除

01:30.000 --> 01:32.060
那我们这里面如何来进删除呢

01:32.060 --> 01:34.560
我们删除一个不经常使用的吧

01:34.560 --> 01:37.720
或者说它的这个图片没有的

01:37.720 --> 01:39.060
小真真对吧

01:39.060 --> 01:40.860
我们可以点击查看一下

01:40.860 --> 01:41.760
点击查看一下

01:41.760 --> 01:45.060
在这个里面我们可以把它来作为一个

01:45.060 --> 01:47.560
指定的删除项来做一个操作

01:47.560 --> 01:49.100
那这里面我以点击确定

01:49.100 --> 01:51.100
小真真给谋味了对不对

01:51.100 --> 01:52.300
小真真就被干掉了

01:52.300 --> 01:55.900
这个就是我们删除指定员工的这么一个操作

01:55.900 --> 01:59.500
第四个就是我们自断输入的一个检测

01:59.500 --> 02:01.800
那如果说我想进行修改的时候

02:01.800 --> 02:04.100
小明我这里面输入1234

02:04.100 --> 02:05.400
123123

02:05.400 --> 02:08.700
那这个时候他的这个中文的检测就不通过

02:08.700 --> 02:11.400
因为我们知道中文很难有这么长对不对

02:11.400 --> 02:15.000
那这个时候会有一个检测的内容在这里面

02:15.000 --> 02:17.700
这个就是我们需要实现的一些功能

02:17.800 --> 02:18.700
然后这里面呢

02:18.700 --> 02:20.200
我们不单可以修改

02:20.200 --> 02:21.600
比如说他原来没有值的

02:21.600 --> 02:23.100
像这种员工招聘

02:23.100 --> 02:26.500
我们还可以进行一个上传图片的这样一个操作

02:26.500 --> 02:29.200
这也是他的一个基本功能啊

02:29.200 --> 02:30.200
我们这里面再写一下

02:30.200 --> 02:35.600
这个叫图片上传功能实现啊

02:35.600 --> 02:36.200
OK

02:36.200 --> 02:36.900
基本上呢

02:36.900 --> 02:40.100
我们要实现的就是这五个功能

02:40.100 --> 02:41.200
那我们这里面啊

02:41.200 --> 02:41.900
实现它呢

02:41.900 --> 02:44.900
其实也来到了我们整个课程案例里面

02:45.000 --> 02:48.700
相对复杂一些的这个知识点上

02:48.700 --> 02:49.700
首先来说

02:49.700 --> 02:52.200
我们要做这个员工详情

02:52.200 --> 02:55.100
那这里面就会使用到一些三方组件

02:55.100 --> 02:55.600
第一个呢

02:55.600 --> 02:57.200
就是抽屉组件

02:57.200 --> 02:59.200
抽屉组件是哪一个

02:59.200 --> 03:01.000
你看我在这个里面点击

03:01.000 --> 03:01.700
点击的时候

03:01.700 --> 03:04.300
我们从右侧弹出一个抽屉弹窗

03:04.300 --> 03:05.200
那像这种弹窗呢

03:05.200 --> 03:06.300
我们可以自己写

03:06.300 --> 03:06.800
然后呢

03:06.800 --> 03:08.600
因为我们使用了安德地单

03:08.600 --> 03:09.500
那安德地单里面

03:09.500 --> 03:12.000
默认给我们提供了一个poper

03:12.000 --> 03:13.500
也就是说这种抽屉弹窗

03:13.500 --> 03:16.700
我们直接的就可以使用它就ok了

03:16.700 --> 03:18.800
这是第一个抽屉弹窗组件

03:18.800 --> 03:19.400
然后呢

03:19.400 --> 03:20.000
第二个呢

03:20.000 --> 03:22.300
就是我们图片上传组件

03:22.300 --> 03:23.600
如果说在这个里面

03:23.600 --> 03:25.300
你看到的这个位置

03:25.300 --> 03:27.400
我们可以进行图片的上传

03:27.400 --> 03:28.800
那假如说你要有图片啊

03:28.800 --> 03:30.400
前提是定性有图片

03:30.400 --> 03:31.400
如果说你没有图片

03:31.400 --> 03:32.800
这个事就尴尬了

03:32.800 --> 03:35.200
比如说我这里面保存一个图片

03:35.200 --> 03:36.900
然后我完成啊

03:36.900 --> 03:38.600
我们可以来上传一下

03:38.600 --> 03:40.800
把这张图片我们打开之后

03:41.800 --> 03:42.800
那这个时候呢

03:42.900 --> 03:44.700
文件就已经上传了

03:44.700 --> 03:45.200
那这个呢

03:45.200 --> 03:47.100
就是我们实现的文件上传的

03:47.100 --> 03:48.000
这么一个功能

03:48.000 --> 03:48.400
对吧

03:48.400 --> 03:49.400
那文件上传功能

03:49.400 --> 03:50.700
你比如说我们怎么来写

03:50.700 --> 03:51.700
是用原生的来写吗

03:51.700 --> 03:52.500
不是啊

03:52.500 --> 03:53.400
安德地单里面

03:53.400 --> 03:56.300
给我们提供了这种upload fail

03:56.300 --> 03:59.000
也就是说上传文件的这么一个方式

03:59.000 --> 04:02.400
我们直接可以用它来做一些相应的指定操作

04:02.400 --> 04:03.200
就ok了

04:03.200 --> 04:06.400
这是图片上传的这么一个组件啊

04:06.400 --> 04:06.800
还有呢

04:06.800 --> 04:09.300
就是下拉搜索的组件

04:09.300 --> 04:11.700
那下拉搜索组件怎么理解啊

04:11.700 --> 04:14.200
如果说我对某一个员工

04:14.200 --> 04:15.900
比如说这个小桃器

04:15.900 --> 04:18.600
小桃器他原来在销售研发部对不对

04:18.600 --> 04:19.900
那我想给他换一个部门

04:19.900 --> 04:22.200
要假如说给他换到商品部件

04:22.200 --> 04:23.000
那你看啊

04:23.000 --> 04:25.700
我在这个点击的时候

04:25.700 --> 04:27.100
那商品部

04:27.100 --> 04:28.500
包括其他的部门啊

04:28.500 --> 04:30.200
这里面就会展示一个列表

04:30.200 --> 04:31.100
那这个列表里面

04:31.100 --> 04:32.500
我们就可以搜索指定的

04:32.500 --> 04:33.700
假如说我在第一

04:33.700 --> 04:34.900
我不知道有没有技术部

04:34.900 --> 04:36.700
那我这里面我们就可以试一下

04:36.700 --> 04:38.800
尝试的进行搜索技术部

04:40.100 --> 04:40.300
ok

04:40.300 --> 04:41.000
我回车之后

04:41.000 --> 04:42.600
你会发现技术部是不是有吗

04:42.600 --> 04:43.100
这个呢

04:43.100 --> 04:46.000
就是我们实现的一个下拉搜索组件

04:46.000 --> 04:46.700
还有一个呢

04:46.700 --> 04:48.100
就是表单验证啊

04:48.100 --> 04:49.300
何为表单验证呢

04:49.300 --> 04:50.900
其实刚才已经掩饰过了

04:50.900 --> 04:52.700
如果说我进行小桃器

04:52.700 --> 04:54.600
这种操作的话

04:54.600 --> 04:56.900
那他不符合我们的一个验证规则

04:56.900 --> 04:57.300
所以说呢

04:57.300 --> 04:59.000
我们就不进行修改啊

04:59.000 --> 05:01.600
这个是我们的一个表单验证组件

05:01.600 --> 05:02.200
那这里面呢

05:02.200 --> 05:03.900
我们要实现一下

05:03.900 --> 05:05.600
也就是把所有的这个

05:05.600 --> 05:06.900
我们用户的这个表单

05:06.900 --> 05:09.000
其实这个表单验证的这个规则啊

05:09.000 --> 05:10.800
不光是在这个详情里面使用

05:10.800 --> 05:12.600
我们一会儿在做创建的时候

05:12.600 --> 05:14.200
也会需要使用到它

05:14.200 --> 05:14.700
而且呢

05:14.700 --> 05:20.500
这个算作为我们一个完成详情组件的一个重点

05:21.600 --> 05:22.200
那接下来

05:22.200 --> 05:23.000
咱们再说啊

05:23.000 --> 05:24.700
表单的渲染组件

05:24.700 --> 05:26.500
表单渲染组件指的是什么呢

05:27.600 --> 05:28.800
我们这么多表单

05:28.800 --> 05:30.500
然后这些表单里面呢

05:30.500 --> 05:31.800
有初始值

05:31.800 --> 05:35.200
包括我们的这个不同类型

05:35.200 --> 05:36.800
那比如说我们入职时间

05:36.800 --> 05:39.300
那这个就是我们日期的一个组件

05:39.300 --> 05:41.200
如果说我们使用这种

05:41.200 --> 05:42.800
呃布门像这种啊

05:42.800 --> 05:44.400
我们这个是一个下拉组件

05:44.400 --> 05:44.800
对不对

05:44.800 --> 05:46.100
还有文件上传组件

05:46.100 --> 05:47.000
那这么多

05:47.000 --> 05:49.300
我们是一次的都来经编写吗

05:49.300 --> 05:50.400
其实我们可以啊

05:50.400 --> 05:54.000
维护一个静态数组来实现这种功能啊

05:54.000 --> 05:55.700
也就是说一会儿我们实现的时候

05:55.700 --> 05:58.100
其实我们是循环一个静态的数组

05:58.100 --> 05:59.300
那这个静态数组里面呢

05:59.300 --> 06:02.300
就包括了我们需要渲染表单的一个类型

06:02.300 --> 06:03.900
以及它的初始值

06:03.900 --> 06:04.500
还有呢

06:04.500 --> 06:05.800
我们这个类型啊

06:05.800 --> 06:07.100
这个渲染的这个

06:07.100 --> 06:09.200
记录的唯一的K值

06:09.200 --> 06:11.100
也就是说这个字段叫什么名字

06:11.100 --> 06:13.500
因为只有我知道这个字段叫什么名字之后

06:13.500 --> 06:16.000
我才能准确的给后端进行一个传递

06:16.000 --> 06:16.600
后端呢

06:16.600 --> 06:18.100
根据我传递的这个字段

06:18.100 --> 06:20.100
来进行一个数据的修改

06:20.100 --> 06:21.200
这样一个操作

06:22.300 --> 06:24.200
这是我们使用到的一些

06:24.200 --> 06:27.000
三方包括自己的一个组架啊

06:27.000 --> 06:30.600
这里面写一下三方加自己的一个组架

06:30.600 --> 06:32.200
状态使用这一块

06:32.200 --> 06:33.600
那我们状态使用这一块

06:33.600 --> 06:34.600
咱们可以看一下

06:34.600 --> 06:38.100
就是说我们都需要获取哪些状态值

06:38.100 --> 06:39.900
首先第一个就是员工想请

06:39.900 --> 06:41.200
那员工想请这个状态

06:41.200 --> 06:43.100
我们是不是在上节课最后的时候

06:43.100 --> 06:44.300
已经点击这个

06:44.300 --> 06:46.600
那我们获得了这个staff detail

06:46.600 --> 06:47.000
对不对

06:47.000 --> 06:47.900
这是第一个

06:47.900 --> 06:48.600
还有一个呢

06:48.600 --> 06:51.200
是我们修改员工API的调用

06:51.200 --> 06:53.200
如果说当我修改

06:53.200 --> 06:54.900
这个字段完成之后

06:54.900 --> 06:56.800
那我现在就要触发一个提交

06:56.800 --> 06:58.200
触发提交的时候

06:58.200 --> 06:59.000
这个里面呢

06:59.000 --> 07:02.500
我们就需要调用一个修改员工的一个API啊

07:02.500 --> 07:05.100
还有初始化员工的一个API的调用

07:05.100 --> 07:06.600
因为初始化员工API调用

07:06.600 --> 07:07.500
这个怎么理解

07:07.500 --> 07:08.500
刚才咱们也看到了

07:08.500 --> 07:11.300
我修改一个啊张飞的职职后

07:11.300 --> 07:14.200
那不光是在这个详情界面里面发生更改

07:14.200 --> 07:16.700
我在这个列表里面是不是也修改了

07:16.700 --> 07:18.800
所以说这个里面也会进行使用啊

07:18.800 --> 07:19.100
然后呢

07:19.100 --> 07:22.500
还有一个图片上传token的一个获取啊

07:22.500 --> 07:23.000
这些呢

07:23.000 --> 07:27.100
都是我们需要使用到的一些状态值

07:27.100 --> 07:28.200
那这些状态值呢

07:28.200 --> 07:31.100
我们可能有的已经提前保存到

07:31.100 --> 07:32.800
我们stop这个model里面了

07:32.800 --> 07:34.000
有的还没有保存

07:34.000 --> 07:34.700
那这些课呢

07:34.700 --> 07:37.300
我们就来一次的实现一下啊

07:37.300 --> 07:38.400
接口数据这一块

07:38.400 --> 07:40.700
我们只无要是使用部门列表

07:40.700 --> 07:41.600
直级列表

07:41.600 --> 07:43.500
删除图片上传图片

07:43.500 --> 07:45.300
以及我们的员工修改

07:45.300 --> 07:47.500
还有最后就是检测员工性命

07:47.500 --> 07:50.000
那这里面我们没设计到的有哪些啊

07:50.000 --> 07:51.900
首先来说部门列表和直级列表

07:51.900 --> 07:52.500
这两个呢

07:52.500 --> 07:55.100
我们都没有再获取过对不对

07:55.100 --> 07:57.200
也就是说我们之前是根本没有获取过的

07:57.200 --> 07:58.500
那我们用它来做什么

07:58.500 --> 08:00.100
用它来做的事情非常简单

08:01.100 --> 08:02.500
因为出手话的时候

08:02.500 --> 08:05.000
当你打开一个详情界面

08:05.000 --> 08:06.800
我不确定这里面有多少部门

08:06.800 --> 08:08.900
那这个时候我们要从数据

08:08.900 --> 08:12.900
呃库里面获取当前指定的部门的一个列表箱

08:12.900 --> 08:15.100
也就是说把这个集合给收集过来

08:15.100 --> 08:15.900
那这个集合呢

08:15.900 --> 08:18.100
我们就涉及到要调用一个接口接口呢

08:18.100 --> 08:19.300
就是部门的接口

08:19.300 --> 08:22.000
我们在这个里面可以把它定为department

08:22.000 --> 08:24.900
呃还有一个就是我们的这个直级的接口

08:24.900 --> 08:27.000
直级同样是如果说它特别多

08:27.000 --> 08:29.200
那这个时候我们就需要把直级

08:29.200 --> 08:30.600
也进行一个获取

08:30.600 --> 08:32.100
那这是这两个接口

08:32.100 --> 08:34.700
删除图片删除图片指的是什么意思

08:34.700 --> 08:37.700
如果说我之前已经有图片了

08:37.700 --> 08:38.700
假如说我想替换

08:38.700 --> 08:43.500
因为我们的规则是一个员工只能保存一张图片

08:43.500 --> 08:46.500
咱们来给他替换一张吗

08:46.500 --> 08:47.400
我们到这个里面啊

08:47.400 --> 08:49.100
小明应该是没有图片啊

08:49.100 --> 08:51.100
小明这张图片你他抱错了对不对

08:51.100 --> 08:52.000
最好他是错的

08:52.000 --> 08:54.200
那我们这里面点击一个什么删除

08:54.200 --> 08:57.000
那删除了之后或者说啊

08:57.000 --> 08:58.200
我们这样操作啊

08:58.300 --> 08:59.100
重新来一次

09:00.300 --> 09:01.400
小明这个里面

09:01.400 --> 09:02.600
我们点击的时候

09:02.600 --> 09:04.100
这里面有一张图片抱错了

09:04.100 --> 09:04.600
对不对

09:04.600 --> 09:05.700
那抱错本质上

09:05.700 --> 09:08.200
我们想选择一张没有抱错的图片

09:08.200 --> 09:08.800
那像这种

09:08.800 --> 09:11.700
刚才我是新生成的杰平2012

09:11.700 --> 09:13.900
12月3这个肯定是没有

09:15.500 --> 09:16.900
ok 这个是没有问题

09:16.900 --> 09:17.300
对不对

09:17.300 --> 09:18.200
那没有问题呢

09:18.200 --> 09:19.800
我把这张图片上传了

09:19.800 --> 09:20.900
当你上传

09:20.900 --> 09:21.400
也就是说

09:21.400 --> 09:23.900
其实你修改了一个员工图片之后

09:23.900 --> 09:25.100
那原来的那张图片

09:25.100 --> 09:26.900
我们就没有必要再做保留了

09:26.900 --> 09:30.300
因为这样也节省了我们一个服务器

09:30.300 --> 09:31.500
数据库里面

09:31.500 --> 09:35.800
服务器的一个文件存储空间的一个优化

09:35.800 --> 09:36.500
那这个时候呢

09:36.500 --> 09:38.600
我们就可以把原来的删除

09:38.600 --> 09:41.600
那我们就需要用到一个删除图片的

09:41.600 --> 09:42.600
这样一个接口

09:42.600 --> 09:44.100
那上传图片很好理解了

09:44.100 --> 09:45.000
上传图片指的是

09:46.200 --> 09:47.900
我现在是不是已经做了上传了

09:47.900 --> 09:49.000
那当我在刷新之后

09:49.000 --> 09:50.200
咱们可以来看一下

09:50.200 --> 09:51.200
那这个时候呢

09:51.200 --> 09:52.700
我们这个小明这一块

09:52.700 --> 09:54.600
图片应该是已经有了

09:54.600 --> 09:56.900
就是我们刚才去上传的这样图片

09:56.900 --> 09:57.300
对吧

09:57.300 --> 09:57.800
那这个呢

09:57.800 --> 10:00.700
就是我们上传图片的怎么一个操作啊

10:00.700 --> 10:01.000
还有呢

10:01.000 --> 10:02.200
就是员工修改

10:02.200 --> 10:03.900
当你修改某些字段之后

10:03.900 --> 10:05.000
那我这员工这一块

10:05.000 --> 10:06.900
要把这个字段给做一个修改

10:06.900 --> 10:07.300
最后呢

10:07.300 --> 10:10.800
就是检测员工姓名油箱是否存在啊

10:10.800 --> 10:13.300
姓名和这个手机号码啊

10:13.300 --> 10:14.400
这个不是油箱

10:14.400 --> 10:20.360
姓名手机号码是否存在

10:20.360 --> 10:22.460
手机号码是否存在

10:22.460 --> 10:23.560
这是什么意思啊

10:23.560 --> 10:26.260
因为我们之前在做这个

10:26.260 --> 10:27.560
电话号码修改的时候

10:27.560 --> 10:29.760
我们调用过这个

10:29.760 --> 10:31.360
呃手机号码的一个检测

10:31.360 --> 10:33.460
其实他不光能检测手机号码

10:33.460 --> 10:37.260
他还能检测员工的一个账户名啊

10:37.260 --> 10:38.660
账户名我们来看一下

10:38.660 --> 10:39.960
比如说这个关于的

10:41.660 --> 10:42.960
如果说我修改的时候

10:42.960 --> 10:43.660
我们知道啊

10:43.660 --> 10:45.460
数据库里面肯定有小明对吧

10:45.460 --> 10:48.760
那我们直接的来做一个小明的修改啊

10:48.760 --> 10:49.860
修改完小明之后

10:49.860 --> 10:51.460
那账户名长度不正确啊

10:51.460 --> 10:53.160
sorry 应该是因为啊

10:53.160 --> 10:55.160
小明OK点击修改

10:55.160 --> 10:57.060
那当前账户名已经存在

10:57.060 --> 10:58.260
请你更换对不对

10:58.260 --> 10:59.960
那也就是说小明已经存在了

10:59.960 --> 11:00.460
为什么呢

11:00.460 --> 11:02.260
我们看到底下这个小明

11:02.260 --> 11:04.560
因为我这里面中文和这个账户名

11:04.560 --> 11:06.660
都是拼音应设的

11:06.660 --> 11:08.060
所以说小明肯定有了

11:08.060 --> 11:10.460
那我这里面搜索一个什么

11:10.460 --> 11:13.960
比如说修改成关于啊

11:13.960 --> 11:15.560
用英文的关于OK

11:15.560 --> 11:17.560
那我这里面失去焦点

11:17.560 --> 11:19.660
这个时候就给我提示修改成功

11:19.660 --> 11:20.160
对不对

11:20.160 --> 11:20.660
那这个呢

11:20.660 --> 11:23.360
就是我们检测员工账户名和手机号码

11:23.360 --> 11:25.060
是否存在

11:25.060 --> 11:27.560
这个接口的一个意义啊

11:27.560 --> 11:29.260
好的那我们先看到这里啊

11:29.260 --> 11:30.360
现在已经明确了

11:30.360 --> 11:31.160
那第一点呢

11:31.160 --> 11:33.160
我们要把这些接口准备一下

11:33.160 --> 11:34.360
把没有的接口

11:34.360 --> 11:36.960
我们来给他完善一下啊

11:36.960 --> 11:39.460
那我们现在就对照着接口文档

11:39.460 --> 11:41.060
来进行一个添加

11:41.060 --> 11:42.860
首先添加的是什么呢

11:42.860 --> 11:44.860
我们这个文件上传的

11:44.860 --> 11:46.060
一些相应的接口啊

11:46.060 --> 11:47.260
这个从哪获取

11:47.260 --> 11:48.660
我们从用户接口里面

11:48.660 --> 11:51.760
可以获取到一个文件上传的token

11:51.760 --> 11:52.560
还有一个呢

11:52.560 --> 11:53.960
删除图片啊

11:53.960 --> 11:55.060
这两个接口

11:55.060 --> 11:56.260
那文件上传token啊

11:56.260 --> 11:58.060
这个接口比较特殊

11:58.060 --> 11:59.460
它呢是盖的请求

11:59.460 --> 12:00.660
其实接口地址啊

12:00.660 --> 12:01.560
非常简单

12:01.560 --> 12:03.260
我们可以先订一下啊

12:03.260 --> 12:03.860
在这个里面

12:03.860 --> 12:05.560
我们先来做一下

12:05.560 --> 12:06.560
然后咱们再说

12:06.560 --> 12:08.960
怎么来进行参数的传递

12:08.960 --> 12:11.460
回到我们的severs打开interface

12:11.460 --> 12:12.760
到staff里面

12:12.760 --> 12:14.060
我们之前已经写了好多

12:14.060 --> 12:14.360
对吧

12:14.360 --> 12:16.460
那这里面我再复制一个啊

12:16.460 --> 12:22.200
这个接口叫文件上传token获取啊

12:22.200 --> 12:27.500
写一下文件上传token获取

12:27.500 --> 12:28.800
文件上传token获取

12:28.800 --> 12:29.600
首先第一步

12:29.600 --> 12:31.800
我们得知道它的这个什么呢

12:31.800 --> 12:32.800
接口的地址

12:32.800 --> 12:34.600
叫get upload的token啊

12:34.600 --> 12:36.500
我们把这个给复制一下

12:36.500 --> 12:37.800
复制过来之后

12:37.800 --> 12:38.900
咱们看一下

12:38.900 --> 12:40.200
get upload的token

12:40.200 --> 12:40.800
阿两个词

12:40.800 --> 12:41.500
咱们看到了

12:41.500 --> 12:43.100
请求方式是get

12:43.100 --> 12:43.800
然后这里面呢

12:43.800 --> 12:45.000
有一些参数

12:45.000 --> 12:46.400
咱们可以来看一下啊

12:46.400 --> 12:47.700
参数指的是什么呢

12:47.700 --> 12:48.800
像这种Headers啊

12:48.800 --> 12:49.600
正常来讲

12:49.600 --> 12:51.300
我们这个Authuridation啊

12:51.300 --> 12:53.300
每一个接口都进行一个携带

12:53.300 --> 12:55.400
这个咱就不过多的叙述了

12:55.400 --> 12:56.100
那里面呢

12:56.100 --> 12:57.000
会有一个query

12:57.000 --> 12:58.800
query里面有一个bucket

12:58.800 --> 13:01.100
和这个upload URL

13:01.100 --> 13:02.600
这个是什么意思啊

13:02.600 --> 13:04.100
我们本次案例里面

13:04.100 --> 13:06.500
采用的是前端直传的方式

13:06.500 --> 13:08.500
来进行图片的上传

13:08.500 --> 13:09.800
那它的存储位置呢

13:09.800 --> 13:12.300
是三方的一个存储

13:12.300 --> 13:14.700
七牛的一个对向存储

13:14.700 --> 13:16.300
那这个七牛对向存储里面

13:16.300 --> 13:18.300
如果说我们想准确的存储

13:18.300 --> 13:18.900
这个时候呢

13:18.900 --> 13:22.100
我们就需要给它提供一个bucket的仓库名

13:22.100 --> 13:24.000
还有一个upload URL

13:24.000 --> 13:25.200
这个upload URL呢

13:25.200 --> 13:26.800
其实最主要的就是我们

13:26.800 --> 13:28.000
当上传成功之后

13:28.000 --> 13:30.200
给我们返回的一个回调地址

13:30.200 --> 13:32.500
也就是说可以让我们查看图片的

13:32.500 --> 13:33.800
这么一个连接地址

13:33.800 --> 13:35.800
那这一两个怎么来获取

13:35.800 --> 13:37.600
那稍后如果说我们在

13:37.600 --> 13:39.900
进行一个图片上传的时候

13:39.900 --> 13:41.700
我们会有详细的介绍

13:41.700 --> 13:43.300
所以说我们现在要做的事情

13:43.300 --> 13:44.300
非常简单

13:44.300 --> 13:45.300
只需要你提前

13:45.300 --> 13:47.400
先把这个文件上传的token接口

13:47.400 --> 13:48.500
给放在这个里面

13:48.500 --> 13:50.100
然后咱们传递参数的时候

13:50.100 --> 13:50.700
到时候呢

13:50.700 --> 13:52.100
我会指定的告诉同学们

13:53.300 --> 13:56.100
有这个文件上传的token植获取的

13:56.100 --> 13:57.700
然后还有一个呢

13:57.700 --> 13:59.600
这是删除图片

13:59.600 --> 14:00.500
删除图片

14:00.500 --> 14:03.400
那我们写一下export counts的

14:03.400 --> 14:05.600
我们这个delete fail

14:06.600 --> 14:09.800
等于我们这里面写一下parman race

14:09.800 --> 14:11.500
然后是阿甲克斯

14:11.500 --> 14:12.300
这个删除

14:12.300 --> 14:14.000
应该是post它

14:14.000 --> 14:15.300
那这个地址从哪来

14:15.300 --> 14:16.900
我们还得找一下

14:16.900 --> 14:18.800
文件删除是不是这个地址

14:18.800 --> 14:21.000
这里面有一个delete fail

14:21.000 --> 14:21.700
delete fail

14:21.700 --> 14:23.300
咱们就拿到它

14:24.700 --> 14:26.400
来给它进行一个添加

14:26.400 --> 14:28.100
然后前面加一个写杠

14:28.100 --> 14:28.500
之后呢

14:28.500 --> 14:29.700
它也需要参数啊

14:29.700 --> 14:30.600
它的参数呢

14:30.600 --> 14:32.900
其实就是我们这个里面

14:32.900 --> 14:35.300
文件的一个路径就ok了

14:35.300 --> 14:36.500
我们可以看一下

14:36.500 --> 14:37.300
到这个里面

14:37.300 --> 14:38.400
咱们来筹验

14:39.700 --> 14:40.400
文件删除

14:40.400 --> 14:41.700
这里面有一个file name

14:42.700 --> 14:44.200
file name指的是什么呢

14:44.200 --> 14:46.100
我们当前的这个图片文件

14:46.100 --> 14:47.200
访问的一个路径

14:47.200 --> 14:49.300
那直接咱们填充这个就可以了

14:49.300 --> 14:51.900
这是我们需要的文件

14:51.900 --> 14:53.400
处理的两个接口

14:53.400 --> 14:55.000
那文件处理的两个接口

14:55.000 --> 14:56.600
我们放在员工里面了

14:56.600 --> 14:57.200
那这个呢

14:57.200 --> 14:59.100
相对还是比较好处理的

14:59.100 --> 15:00.100
然后还有一个呢

15:00.100 --> 15:02.100
就是员工修改的这一块

15:02.100 --> 15:04.300
也就是说我们对这个员工

15:04.300 --> 15:06.700
这里面因为我们已经定义好的修改

15:06.700 --> 15:07.400
员工接口

15:07.400 --> 15:07.900
所以说呢

15:07.900 --> 15:10.300
我们这里不需要再做其他操作了

15:10.300 --> 15:12.000
这是我们员工修改的

15:12.000 --> 15:13.300
那这几个都有了之后

15:13.300 --> 15:14.300
检测员工张文明

15:14.300 --> 15:15.800
手机画码是否存在

15:15.800 --> 15:17.500
之前上几颗咱们已经定义了

15:17.500 --> 15:20.600
这个也不需要再做额外的处理

15:20.600 --> 15:20.900
ok

15:20.900 --> 15:23.000
那现在就剩下一个部门列表

15:23.000 --> 15:24.400
和这个直级列表

15:25.700 --> 15:27.100
部门列表和直级列表

15:27.100 --> 15:29.000
分别是department和level

15:29.000 --> 15:29.800
那现在呢

15:29.800 --> 15:30.900
我们是都没有

15:30.900 --> 15:31.300
对吧

15:31.300 --> 15:32.000
那我怎么办

15:32.000 --> 15:32.700
我们建一个

15:34.400 --> 15:36.400
department.js

15:36.400 --> 15:39.400
专门存放部门的相应的接口

15:39.400 --> 15:41.100
那我们把这个先给他复制

15:42.100 --> 15:43.800
然后咱们引入一个

15:43.800 --> 15:45.900
咱们就来写一下

15:45.900 --> 15:46.900
比如说这个里面

15:47.800 --> 15:49.100
来做一下处理

15:49.100 --> 15:50.500
那接口在哪啊

15:50.500 --> 15:51.800
我们还得看接口文档

15:51.800 --> 15:52.300
对不对

15:52.300 --> 15:54.100
那咱们看部门接口

15:54.100 --> 15:54.700
部门接口

15:54.700 --> 15:56.800
这里面有一个获取部门列表

15:56.800 --> 15:57.400
那这个呢

15:57.400 --> 16:00.300
就是我们需要使用到的department

16:00.300 --> 16:02.400
department的请求方式是guide

16:02.400 --> 16:04.600
接口地址是department

16:04.600 --> 16:05.700
我们就来写一下

16:05.700 --> 16:07.300
阿加哥斯点guide

16:07.300 --> 16:08.100
传递参数吧

16:08.100 --> 16:10.700
这个肯定要传递参数的

16:10.700 --> 16:11.800
我们可以看一下

16:11.800 --> 16:13.300
他这个参数传递

16:13.400 --> 16:14.200
这个里面

16:14.200 --> 16:15.600
如果说你department

16:15.600 --> 16:18.100
你想去获取的话

16:18.100 --> 16:18.900
那这个时候呢

16:18.900 --> 16:21.300
我们可以传递配置和size

16:21.300 --> 16:22.900
作为他的一个参数

16:22.900 --> 16:24.500
来进行一个传递的

16:26.500 --> 16:28.300
我们这里面来添加一下

16:28.300 --> 16:29.100
那这个时候呢

16:29.100 --> 16:31.700
我们可以添加一个query参数

16:31.700 --> 16:32.200
第一个呢

16:32.200 --> 16:32.900
是配置

16:32.900 --> 16:33.500
配置呢

16:33.500 --> 16:36.300
代表着我们的一个当前展示页

16:37.600 --> 16:38.400
这里面写一下

16:38.400 --> 16:40.400
当前展示页

16:40.400 --> 16:41.400
当前展示页

16:41.500 --> 16:43.700
配置起始值等于一个什么意义

16:43.700 --> 16:46.100
也就是说起始值是一

16:46.100 --> 16:47.000
出始

16:47.000 --> 16:48.000
这里面写一下

16:48.000 --> 16:50.200
这个叫出始值

16:50.200 --> 16:52.300
出始值等于一

16:52.300 --> 16:53.800
代表其实就是第一

16:53.800 --> 16:54.400
然后呢

16:54.400 --> 16:55.300
还有一个是什么呢

16:55.300 --> 16:56.800
我们的这个size

16:56.800 --> 16:57.800
如果你不传

16:57.800 --> 16:58.800
那我这个时候呢

16:58.800 --> 17:01.000
每一样给你返回五条数据

17:01.000 --> 17:01.400
当然了

17:01.400 --> 17:03.100
如果说你觉得五条数据不爽

17:03.100 --> 17:04.300
你想多一点

17:04.300 --> 17:05.400
那这个怎么办呢

17:05.400 --> 17:07.000
我们就可以进行一个

17:07.000 --> 17:08.600
后台数据库的修改

17:08.600 --> 17:09.300
然后如果说

17:09.300 --> 17:10.800
你懂得弄的这一次的话

17:10.800 --> 17:11.500
那这个时候呢

17:11.500 --> 17:12.800
你可以准确的

17:12.800 --> 17:14.100
找到我们的这个接口

17:14.100 --> 17:15.900
来进行数据的修改就可以了

17:15.900 --> 17:16.900
这里面写一下

17:16.900 --> 17:17.700
size

17:17.700 --> 17:19.300
默认

17:19.300 --> 17:22.900
默认返回五条数据

17:22.900 --> 17:23.600
ok

17:23.600 --> 17:24.600
这个就定义完了

17:24.600 --> 17:25.300
定义完了之后

17:25.300 --> 17:26.300
咱保存一下

17:26.300 --> 17:27.300
保存一下之后

17:27.300 --> 17:27.700
这个呢

17:27.700 --> 17:30.500
是我们的我们预览啊

17:30.500 --> 17:31.400
到这个里面

17:31.400 --> 17:32.100
department

17:32.100 --> 17:32.900
那这个department

17:32.900 --> 17:33.800
我们怎么写的

17:33.800 --> 17:34.800
其实这个

17:34.800 --> 17:36.300
我们语化强一点

17:36.300 --> 17:38.200
就叫getdepartment list

17:38.200 --> 17:38.700
对吧

17:38.700 --> 17:40.200
那我们这里面定一下

17:40.200 --> 17:42.100
这个叫get

17:42.100 --> 17:42.700
把它

17:42.700 --> 17:48.700
getdepartment

17:48.700 --> 17:50.300
然后这里面写一个list

17:50.300 --> 17:50.700
ok

17:50.700 --> 17:57.860
那这个就是我们获取部门列表

17:57.860 --> 17:58.160
好

17:58.160 --> 17:59.160
定义完了之后

17:59.160 --> 18:00.460
那第一个处理完了

18:00.460 --> 18:01.160
处理完了之后

18:01.160 --> 18:02.460
我们再继续写啊

18:02.460 --> 18:04.160
有部门列表

18:04.160 --> 18:05.560
还有一个level

18:05.560 --> 18:07.160
也就是说直级的列表

18:07.160 --> 18:09.860
那我们再写一个level.js

18:09.860 --> 18:10.760
level.js

18:10.760 --> 18:11.360
同样的

18:11.360 --> 18:13.860
我们把这个也给做一个粘贴

18:13.860 --> 18:14.360
之后呢

18:14.360 --> 18:16.060
我们放在这个里面

18:16.060 --> 18:16.660
然后呢

18:16.660 --> 18:18.160
这个应该叫什么名字呢

18:18.160 --> 18:20.060
我们直接的这个给它写个名字

18:20.060 --> 18:22.060
叫get level list

18:24.060 --> 18:25.060
get level list

18:25.060 --> 18:25.460
ok

18:25.460 --> 18:25.660
好的

18:25.660 --> 18:26.560
这个写完之后呢

18:26.560 --> 18:29.760
我们看一下它的接口的地址啊

18:29.760 --> 18:31.760
我们找到直级接口集合

18:31.760 --> 18:34.560
这里面有一个获取直级列表

18:34.560 --> 18:35.860
请求方式呢

18:35.860 --> 18:37.760
跟这个部门有一定区别

18:37.760 --> 18:39.160
它那是post的请求

18:39.160 --> 18:40.760
我们这里面做一个调整

18:42.160 --> 18:43.760
阿达克斯点post的

18:43.760 --> 18:44.560
这是第一个

18:44.560 --> 18:45.360
它的地址呢

18:45.360 --> 18:46.560
叫get level

18:46.560 --> 18:48.160
我们给做一个复制啊

18:48.760 --> 18:50.260
把这个给定一下

18:50.260 --> 18:51.660
这个叫get level

18:52.460 --> 18:54.460
这个里面是有一些参数的

18:54.460 --> 18:55.860
首先配置Size

18:55.860 --> 18:57.660
是一些它的基础处置

18:57.660 --> 18:58.360
那这个呢

18:58.360 --> 19:00.760
是我们返回数据的一个长度

19:00.760 --> 19:02.760
以及从哪一样获取数据

19:02.760 --> 19:03.560
起始一样呢

19:03.560 --> 19:04.460
也是第一样

19:04.460 --> 19:05.660
query data里面

19:05.660 --> 19:08.760
就代表着我们本次要查取的一个内容

19:08.760 --> 19:09.560
比如说这里面

19:09.560 --> 19:11.460
我们可以通过department的内容

19:11.460 --> 19:14.060
来进行指定部门的一个查询

19:14.060 --> 19:14.460
这个呢

19:14.460 --> 19:15.560
就是它的一个使用

19:16.760 --> 19:17.060
好了

19:17.060 --> 19:18.860
定义完这些接口之后

19:18.860 --> 19:20.360
我们再来看一下啊

19:20.360 --> 19:22.460
现在我们所需要的部门列表集合

19:22.460 --> 19:23.960
以及直级列表集合

19:23.960 --> 19:25.560
包括删除上传图片

19:25.560 --> 19:26.560
员工修改

19:26.560 --> 19:27.960
检测员工姓名

19:27.960 --> 19:28.660
手机号码

19:28.660 --> 19:29.160
这些呢

19:29.160 --> 19:31.160
我们都已经准备完毕了

19:31.160 --> 19:32.160
准备完毕之后

19:32.160 --> 19:33.160
那么接下来呢

19:33.160 --> 19:36.560
我们现在就可以来进行一个

19:36.560 --> 19:38.560
公共组件的制作了

19:38.560 --> 19:40.260
那么公共组件制作这一块

19:40.260 --> 19:41.360
咱们首先第一个

19:41.360 --> 19:43.560
会涉及到一个抽屉组件

19:43.560 --> 19:45.660
driver的一个制作啊

19:45.660 --> 19:46.760
那这里面怎么办呢

19:46.760 --> 19:48.760
我们知道这个driver组件呢

19:48.760 --> 19:51.060
它是有一个特点的附属性比较强

19:52.160 --> 19:53.560
可以先看一下

19:53.560 --> 19:54.360
在这个里面

19:54.360 --> 19:58.460
我们员工会使用到这个抽屉组件

19:58.460 --> 20:00.360
那我们再看一个其他某块

20:01.460 --> 20:02.960
比如说这个技校考核

20:02.960 --> 20:04.360
那技校考核这一块呢

20:04.360 --> 20:06.760
它也是有一个driver组件的

20:06.760 --> 20:07.360
所以说呢

20:07.360 --> 20:09.560
这个里面因为它的附属性比较强

20:09.560 --> 20:10.960
我们在设计它的时候

20:10.960 --> 20:11.560
最好呢

20:11.560 --> 20:13.660
是把它放在components下面

20:13.660 --> 20:14.060
这样呢

20:14.060 --> 20:15.660
方便我们的管理

20:15.660 --> 20:16.260
那这个时候

20:16.260 --> 20:18.560
我们第一步在components下面

20:18.560 --> 20:21.260
就需要创建一个文件家

20:21.260 --> 20:22.060
这个文件家呢

20:22.060 --> 20:22.760
叫driver啊

20:22.760 --> 20:23.160
就可以

20:24.160 --> 20:25.260
我们订一个文件家

20:26.460 --> 20:27.260
订一

20:27.260 --> 20:27.560
哎

20:27.560 --> 20:28.560
在这个里面订一样

20:28.560 --> 20:31.760
components找到它叫driver

20:33.260 --> 20:33.560
好的

20:33.560 --> 20:34.560
订一号driver之后

20:34.560 --> 20:36.260
这里面创建一个文件

20:36.260 --> 20:37.660
index.js

20:37.660 --> 20:38.260
插

20:38.260 --> 20:40.260
然后咱们指定一下

20:40.260 --> 20:41.060
这个名字呢

20:41.060 --> 20:42.660
我们也叫driver

20:44.820 --> 20:46.020
driver complements

20:48.190 --> 20:48.490
好

20:48.490 --> 20:49.490
订一完成之后

20:49.490 --> 20:50.490
那首先第一步

20:50.490 --> 20:51.890
你是得需要使用到它

20:51.890 --> 20:52.390
对吧

20:52.390 --> 20:52.990
使用到它

20:52.990 --> 20:54.490
那你就得给它做一个什么

20:54.490 --> 20:55.590
引入啊

20:55.590 --> 20:56.690
引入它怎么办呢

20:56.690 --> 20:59.190
我们先回到这个pages

20:59.190 --> 21:01.690
下面找到需要使用它的地方

21:01.690 --> 21:04.390
在我们的index.js下面

21:04.390 --> 21:05.090
那之前呢

21:05.090 --> 21:06.790
我们左侧的搜索区域

21:06.790 --> 21:07.890
和这个table list

21:07.890 --> 21:09.290
的都准备完毕之后

21:09.390 --> 21:10.690
下面就开始

21:10.690 --> 21:13.690
我们的一个使用抽屉

21:14.190 --> 21:15.090
组件

21:15.090 --> 21:16.690
然后呢展示

21:17.090 --> 21:18.690
详情信息了

21:19.090 --> 21:20.090
那使用抽屉组件

21:20.090 --> 21:21.390
展示详情信息

21:21.390 --> 21:21.890
第一步

21:21.890 --> 21:23.890
我们先做一个基础的操作

21:23.890 --> 21:26.390
把它给进行一个引入

21:26.390 --> 21:27.990
那我们引入的时候

21:27.990 --> 21:29.890
就是driver complements

21:29.890 --> 21:30.490
对吧

21:30.490 --> 21:31.590
from从哪来

21:31.590 --> 21:34.490
从我们的components下面

21:34.690 --> 21:35.990
driver complements

21:35.990 --> 21:36.390
ok

21:36.390 --> 21:39.090
从这个里面来进行一个获取啊

21:39.290 --> 21:41.490
commonents下面的driver complements

21:41.490 --> 21:43.190
咱们是叫driver complements吗

21:43.190 --> 21:45.190
这里面不叫driver complements

21:45.290 --> 21:47.190
把它给删除掉啊

21:47.190 --> 21:47.490
好了

21:47.490 --> 21:48.490
那删除完成之后

21:48.490 --> 21:51.390
那我们现在来给它进行一个使用啊

21:51.390 --> 21:52.190
在这个里面

21:52.190 --> 21:53.490
driver complements

21:53.490 --> 21:55.390
给它进行一个添加

21:56.990 --> 21:58.490
好的添加完成之后

21:58.490 --> 21:59.290
那这个时候

21:59.290 --> 22:00.390
我们来看一下

22:00.390 --> 22:01.890
commonents

22:01.890 --> 22:03.290
driver complements

22:03.290 --> 22:04.390
.components

22:04.390 --> 22:05.690
应该是没有问题啊

22:05.690 --> 22:07.090
因为我们components

22:07.090 --> 22:09.190
已经给它规定好了

22:09.590 --> 22:11.290
我们的一个别名设

22:11.290 --> 22:12.390
也就是说components

22:12.390 --> 22:13.490
如果说你输入之后

22:13.490 --> 22:14.990
那它就直接去下面

22:14.990 --> 22:16.390
来进行一个查找了

22:16.390 --> 22:16.890
然后呢

22:16.890 --> 22:17.890
我们这里面写一段话

22:17.890 --> 22:19.690
来看一下是否可行啊

22:19.690 --> 22:22.090
这里面写一个什么的抽屉组件

22:23.590 --> 22:24.490
如果可行的话

22:24.490 --> 22:25.290
那它这个里面

22:25.290 --> 22:26.690
会给我们做一个展示的

22:26.690 --> 22:27.890
我们来看一眼

22:27.890 --> 22:28.690
到这个里面

22:28.690 --> 22:31.790
打开我们的idm 123 qwe

22:31.790 --> 22:32.990
登录一下

22:32.990 --> 22:34.690
登录一下来到员工

22:34.690 --> 22:35.690
来到员工之后

22:35.690 --> 22:36.490
现在没有抱错

22:36.490 --> 22:37.090
对吧

22:37.090 --> 22:37.790
没有抱错

22:37.790 --> 22:38.690
那这个时候呢

22:38.690 --> 22:40.090
我们来看一下

22:40.090 --> 22:40.590
底下呢

22:40.590 --> 22:41.390
没有展示

22:41.390 --> 22:42.190
那这个里面啊

22:42.190 --> 22:43.790
是啊是在右边啊

22:43.790 --> 22:45.190
因为我们是一个弹性盒

22:45.190 --> 22:45.690
对不对

22:45.690 --> 22:46.890
那这个抽屉组件

22:46.890 --> 22:48.190
这几个字就进入了

22:48.190 --> 22:49.390
也就是说我们第一步

22:49.390 --> 22:50.690
引入成功了

22:50.690 --> 22:51.790
引入成功之后

22:51.790 --> 22:53.490
那我们接下来要做什么呢

22:53.490 --> 22:53.990
这个时候

22:53.990 --> 22:55.290
我们要想一下

22:55.290 --> 22:58.190
driver都要实现哪些功能

22:58.190 --> 22:59.790
我们可以来看一下

22:59.790 --> 23:00.090
首先

23:00.090 --> 23:01.390
driver这个里面呢

23:01.390 --> 23:02.590
我们第一个啊

23:02.590 --> 23:04.390
它会有一个公共的头

23:04.390 --> 23:06.090
那像这个头部的文件呢

23:06.090 --> 23:07.090
每一个模块

23:07.090 --> 23:08.390
在使用它的时候

23:08.390 --> 23:09.390
都是不同的

23:09.390 --> 23:09.890
然后呢

23:09.890 --> 23:10.690
我们这个里面

23:10.690 --> 23:13.290
会传递一个指定的title

23:13.290 --> 23:13.790
对不对

23:13.790 --> 23:14.790
那也就是说

23:14.790 --> 23:16.790
我们这个driver组件里面

23:16.790 --> 23:18.390
我们第一步

23:18.390 --> 23:20.390
要获取一个参数

23:20.390 --> 23:21.290
那这个参数呢

23:21.290 --> 23:22.490
就是title

23:22.490 --> 23:22.990
对吧

23:22.990 --> 23:24.290
这是它的第一个

23:24.290 --> 23:24.890
第二个呢

23:24.890 --> 23:25.990
我们再来看一下

23:25.990 --> 23:28.190
它可以进行一个删除

23:28.190 --> 23:29.090
那你像现在

23:29.090 --> 23:30.590
在这个技巧考核里面

23:30.590 --> 23:31.290
它删除的

23:31.290 --> 23:33.890
就是技巧考核的一个相关信息

23:33.890 --> 23:36.090
如果说我要是在员工里面呢

23:36.090 --> 23:36.590
它删除的

23:36.590 --> 23:38.190
就是指定员工的一个信息

23:38.690 --> 23:39.990
那具体删除哪一个

23:39.990 --> 23:40.390
比如说

23:40.390 --> 23:41.490
在操作的时候

23:41.490 --> 23:43.190
我是不是得调用不同的接口

23:43.190 --> 23:44.290
这个不同接口

23:44.290 --> 23:47.190
就需要我们给它进行一个传递

23:47.190 --> 23:47.790
也就是说

23:47.790 --> 23:50.690
我们把这个interface

23:50.690 --> 23:52.990
当前我们调用的删除的接口

23:52.990 --> 23:54.890
是不是来这里面给它传递一下

23:54.890 --> 23:58.290
那我们这里面写一个interface name

23:58.290 --> 23:58.990
也就是说

23:58.990 --> 24:01.290
我们调用删除方法的这个名字

24:02.590 --> 24:04.090
那你现在说到删除了

24:04.090 --> 24:06.190
删除的是不是得有指定的id

24:06.190 --> 24:06.790
对不对

24:06.790 --> 24:07.890
那指定的id

24:07.890 --> 24:08.890
你像这个

24:08.890 --> 24:10.490
不管是你删除员工

24:10.490 --> 24:12.190
还是说删除考核记录

24:12.190 --> 24:14.390
你都得给它传一个准确的id值

24:14.390 --> 24:17.490
所以说我们这里面还需要获取一个什么id

24:17.490 --> 24:19.890
代表了我们数据的为一值

24:19.890 --> 24:21.390
那这里面这些都有了

24:21.390 --> 24:22.090
有了之后

24:22.090 --> 24:23.690
那现在你想一下

24:23.690 --> 24:25.190
如果说在初始化的时候

24:25.190 --> 24:25.990
这个driver呢

24:25.990 --> 24:27.590
也就是说这个抽屉组件

24:27.590 --> 24:29.090
它是不可能打开的

24:29.090 --> 24:29.790
那这个里面

24:29.790 --> 24:31.790
我们就要规定一个状态

24:31.790 --> 24:32.490
是什么状态呢

24:32.490 --> 24:34.390
是不是开启这个

24:34.390 --> 24:36.290
我们的这个driver组件

24:36.290 --> 24:37.890
也就是说你把这个

24:37.890 --> 24:39.190
侧边来的这个弹床

24:39.190 --> 24:41.490
你是否需要对它进行一个开启

24:41.490 --> 24:43.390
那你是不是得给它一个

24:43.390 --> 24:44.690
状态值

24:44.690 --> 24:45.690
那我们这个状态值

24:45.690 --> 24:46.990
其实都已经定一好了

24:46.990 --> 24:47.590
对不对

24:47.590 --> 24:48.790
我们在model下面

24:48.790 --> 24:51.190
当时是不是已经创建了一个什么

24:52.490 --> 24:54.590
set受detail dialog

24:54.590 --> 24:55.690
我们这里面有一个

24:55.690 --> 24:57.690
id受detail dialog

24:57.690 --> 24:58.190
对不对

24:58.190 --> 24:58.790
那现在呢

24:58.790 --> 24:59.690
我们就可以把这个

24:59.690 --> 25:01.190
id受detail dialog

25:01.190 --> 25:03.390
从副组件里面来进行一个接收

25:03.390 --> 25:04.790
当然了如果说

25:04.790 --> 25:06.390
你也可以使用什么呢

25:06.390 --> 25:08.590
我们不在model里面进行定义

25:08.590 --> 25:09.890
我们直接在副组件里面

25:09.890 --> 25:10.790
来做这件事

25:10.790 --> 25:11.290
但是呢

25:11.290 --> 25:12.290
这个不太好

25:12.290 --> 25:13.590
为什么都不太好呢

25:13.590 --> 25:15.590
因为我们这个

25:15.590 --> 25:17.490
不管是哪一个获取

25:17.490 --> 25:19.390
我们这个详情的时候

25:19.390 --> 25:21.090
都是在这个

25:21.090 --> 25:23.290
我们redux里面啊

25:23.290 --> 25:24.190
也就是说

25:24.190 --> 25:25.490
给我们提供的driver

25:25.490 --> 25:27.090
这个插件里面

25:27.090 --> 25:28.290
我们来实现的

25:28.290 --> 25:28.790
对不对

25:28.790 --> 25:29.790
那在driver框架里面

25:29.790 --> 25:31.490
来实现的这个时候呢

25:31.490 --> 25:33.290
当我获取详情之后

25:33.290 --> 25:35.490
来进行一个它的打开

25:35.490 --> 25:37.290
那这个做的好处是什么呢

25:37.290 --> 25:38.790
不至于有白板

25:38.790 --> 25:40.590
如果说你先给它进行打开了

25:40.590 --> 25:42.490
当你数据还没有获取到之后

25:42.490 --> 25:43.290
那这个时候呢

25:43.290 --> 25:44.990
可能会有一个白板显示

25:44.990 --> 25:45.890
所以说这个呢

25:45.890 --> 25:48.090
感觉上我们体验感不是特别好

25:48.090 --> 25:48.590
所以说呢

25:48.590 --> 25:49.190
我们怎么办

25:49.190 --> 25:51.290
我们就在这个model里面

25:51.290 --> 25:52.290
来进行定义

25:52.290 --> 25:54.090
就ok了

25:54.090 --> 25:56.390
然后这个给它传递过来就可以啊

25:56.390 --> 25:57.590
传递过来之后

25:57.590 --> 25:57.990
或者说

25:57.990 --> 25:59.390
如果说你要是

25:59.390 --> 26:00.290
想省略一个

26:00.290 --> 26:01.090
我不想传这个

26:01.090 --> 26:02.390
怎么办

26:02.390 --> 26:04.690
写的非常简单啊

26:04.690 --> 26:05.590
你在这个里面呢

26:05.590 --> 26:09.090
可以把它这个状态来进行一个获取

26:09.090 --> 26:10.990
比如说我们couns它

26:10.990 --> 26:12.190
我们这个里面叫什么

26:12.190 --> 26:13.890
一受detail dialog

26:13.890 --> 26:14.990
你给它解构一下

26:14.990 --> 26:17.590
等于我们的youtse selector

26:17.590 --> 26:19.190
咱们这样解构一下

26:19.190 --> 26:22.490
youtse selector

26:22.490 --> 26:24.490
那youtse selector里面

26:24.490 --> 26:27.990
我们第一个是这个sdata啊

26:27.990 --> 26:28.490
好

26:28.490 --> 26:30.490
从哪个sdata里面来获取

26:30.490 --> 26:33.490
从我们的这个sdata.com里面

26:33.490 --> 26:35.390
来对它进行一个获取

26:35.390 --> 26:35.890
这里面呢

26:35.890 --> 26:38.890
我们改一下叫sdata.com

26:38.890 --> 26:39.190
好了

26:39.190 --> 26:42.290
把这个youtse selector进行一个获取啊

26:42.290 --> 26:44.490
input我们youtse selector

26:44.490 --> 26:47.090
解构从这个wumi里面

26:47.090 --> 26:49.690
来进行一个解构

26:49.690 --> 26:50.490
解构出来之后

26:50.490 --> 26:51.490
我们就可以使用了

26:51.490 --> 26:52.090
那这个时候

26:52.090 --> 26:53.490
我们就保存了一个

26:53.490 --> 26:55.190
一受detail dialog

26:55.190 --> 26:56.390
这样一个状态

26:56.390 --> 26:56.890
对吧

26:56.890 --> 26:58.590
那这些都有了之后

26:58.590 --> 27:00.290
我们还得看一件事情

27:00.290 --> 27:01.090
是什么事情呢

27:01.090 --> 27:02.990
咱们可以回来来看一下

27:02.990 --> 27:04.190
当我去点开之后

27:04.190 --> 27:04.890
那这个时候

27:04.890 --> 27:06.190
我们要去渲染

27:06.190 --> 27:07.190
渲染的内容呢

27:07.190 --> 27:09.290
其实跟driver没有多大关系了

27:09.290 --> 27:11.090
也就是说跟那个筹底组架

27:11.090 --> 27:12.490
他去渲染这个表格

27:12.490 --> 27:12.990
其实呢

27:12.990 --> 27:14.290
跟每一个组架

27:14.290 --> 27:15.190
每一个模块里面

27:15.190 --> 27:16.090
它都是不一样的

27:16.090 --> 27:16.590
所以说呢

27:16.590 --> 27:18.490
我们这里面再接受一个什么呢

27:18.490 --> 27:21.190
rander函数

27:21.190 --> 27:23.190
专门做这个渲染的

27:23.190 --> 27:25.290
那这个rander函数定义好了之后

27:25.290 --> 27:26.290
我们这里面啊

27:26.290 --> 27:27.490
如果说当你去修改

27:27.490 --> 27:28.590
或者是删除

27:28.590 --> 27:29.290
然后你这里面

27:29.290 --> 27:31.290
是不是得重新进行我们

27:31.290 --> 27:33.490
比如说我们这里面删除小鸣腰腰

27:33.490 --> 27:34.690
我去修改一下

27:34.690 --> 27:35.790
小鸣腰腰修改之后

27:35.790 --> 27:36.590
那你会发现

27:36.590 --> 27:38.390
后面的内容也进行修改了

27:38.390 --> 27:40.290
那这里面还会有一个操作叫什么

27:40.290 --> 27:42.090
叫reload list

27:42.090 --> 27:44.290
那我们把它来给他做一下

27:44.290 --> 27:45.090
reload list呢

27:45.090 --> 27:47.290
就是说当你做了删除

27:47.290 --> 27:48.290
或者是修改之后

27:48.290 --> 27:49.990
那我们重新的触发

27:49.990 --> 27:52.090
他底下内容的一个更改啊

27:52.090 --> 27:52.490
这个呢

27:52.490 --> 27:54.590
就是reload list的一个功能

27:54.590 --> 27:56.030
这些就是我们

27:56.030 --> 27:58.990
driver所需要的一些状态的一个获取

27:58.990 --> 28:00.890
那我们就可以根据这些状态

28:00.890 --> 28:03.190
来进行相应的处理了啊

28:03.190 --> 28:03.590
首先呢

28:03.590 --> 28:04.990
你在这个使用的时候

28:04.990 --> 28:06.290
那你一次的把这些状态

28:06.290 --> 28:07.590
就给他填充过去

28:07.590 --> 28:08.590
是不是就OK了

28:08.590 --> 28:11.090
那我们就回到staff里面

28:11.090 --> 28:11.790
对不对

28:11.790 --> 28:14.690
回到这个staff这个界面里面啊

28:14.690 --> 28:16.790
我们直接的到这个里面

28:16.790 --> 28:17.990
使用他的时候

28:17.990 --> 28:18.990
那我们一次的

28:18.990 --> 28:21.790
把刚才说好的这些状态值

28:21.790 --> 28:24.990
给他进行一个填充就OK了

28:24.990 --> 28:25.390
首先呢

28:25.390 --> 28:26.890
那我们第一个医的受底

28:26.890 --> 28:27.590
他要再load

28:27.590 --> 28:28.890
我们不在这里面传

28:28.890 --> 28:31.890
那我们就不需要给他来进行一个编写了

28:31.890 --> 28:33.190
但是我们这个title

28:33.190 --> 28:35.690
是不是得给他指定传过去

28:35.690 --> 28:37.590
所以说我们定一下title

28:37.590 --> 28:38.890
title等于什么呢

28:38.890 --> 28:40.690
现在我们能获取到一个值啊

28:40.690 --> 28:42.590
咱们可以来停一下

28:42.590 --> 28:43.990
获取到一个什么值呢

28:43.990 --> 28:48.290
我们上几颗已经保存了一个staff detail

28:48.290 --> 28:48.890
对不对

28:48.890 --> 28:50.390
那现在staff detail呢

28:50.390 --> 28:52.090
里面就会有一个什么

28:52.090 --> 28:53.390
我们的yodername

28:53.390 --> 28:55.390
那我们这里面就可以把这个yodername

28:55.390 --> 28:56.890
给他进行一个传递

28:56.890 --> 28:58.090
作为title值啊

28:58.090 --> 29:00.990
我们这里面来写一下staff detail

29:00.990 --> 29:01.990
但是首先前提

29:01.990 --> 29:03.990
你是不是得在这个组件里面

29:03.990 --> 29:05.490
来先进行一个获取

29:05.490 --> 29:05.990
对吧

29:05.990 --> 29:08.490
那我在这里面获取一下staff detail

29:08.490 --> 29:09.490
那一开始特别闹

29:09.490 --> 29:10.290
闹可能是没有

29:10.290 --> 29:10.790
对不对

29:10.790 --> 29:11.590
那没有咱们呢

29:11.590 --> 29:12.890
我直接给他容易一个错

29:12.890 --> 29:13.890
如果说有

29:13.890 --> 29:17.390
我们再输出这个yodername啊

29:17.390 --> 29:20.790
这是第一个值staff detail.yodername

29:20.790 --> 29:21.190
好了

29:21.190 --> 29:22.290
定义完这个值之后

29:22.290 --> 29:25.190
那我们现在还需要给他传递一个id

29:25.190 --> 29:25.790
id呢

29:25.790 --> 29:29.290
其实也是从我们这个staff detail里面

29:29.290 --> 29:30.890
来进行一个获取的

29:30.890 --> 29:31.190
对不对

29:31.190 --> 29:33.890
那我们这里面就写一下staff detail

29:33.890 --> 29:35.390
如果说同样的id

29:35.390 --> 29:36.890
我们也给他做一个容错

29:36.890 --> 29:37.590
如果说你有

29:37.590 --> 29:39.590
那你就传一个id值

29:39.590 --> 29:40.090
对吧

29:40.090 --> 29:41.390
这是两个

29:41.390 --> 29:41.790
之后呢

29:41.790 --> 29:43.890
我们这里面还会有reload

29:43.890 --> 29:45.090
reload咱写不起啊

29:45.090 --> 29:47.090
我们先写一个interface name

29:48.090 --> 29:49.490
interface name是什么呢

29:49.490 --> 29:52.090
就是说我们要调用的一个

29:52.090 --> 29:55.890
删除我们当前的这个员工的

29:55.890 --> 29:57.390
这么一个接口对吧

29:57.390 --> 29:59.290
那删除当前员工的接口

29:59.290 --> 30:00.290
d值是在哪呢

30:00.290 --> 30:02.290
我们可以进行一个查看

30:02.290 --> 30:03.690
这个interface name呢

30:03.690 --> 30:06.090
我们得来看一下这个接口

30:06.090 --> 30:07.290
那接口这个里面

30:07.290 --> 30:08.890
我们去找一下

30:08.890 --> 30:09.890
找到staff

30:09.890 --> 30:12.090
staff里面有删除员工

30:12.090 --> 30:12.390
对不对

30:12.390 --> 30:14.590
那这个叫deletestaffs

30:14.590 --> 30:16.290
那我们就把它来做一下

30:16.290 --> 30:17.690
这个里面我们写一下

30:17.690 --> 30:19.290
那它就是一个字步创

30:19.290 --> 30:21.290
好了deletestaff list

30:21.290 --> 30:22.490
那这里面也有了

30:22.490 --> 30:22.890
之后呢

30:22.890 --> 30:25.690
我们在这个里面还会有一个什么呢

30:25.690 --> 30:28.990
最后里面有一个reload list的

30:28.990 --> 30:30.790
也就是说你做了删除

30:30.790 --> 30:33.290
或者是修改操作之后

30:33.290 --> 30:33.890
这个时候

30:33.890 --> 30:35.190
我们要把这个列表

30:35.190 --> 30:37.490
重新的进行一个处理啊

30:37.490 --> 30:38.490
reload list的

30:38.490 --> 30:39.590
我们这里面就写一下

30:39.590 --> 30:40.490
那reload list的

30:40.490 --> 30:41.790
咱们要做一件什么事

30:41.790 --> 30:43.290
其实我们是不是要调用

30:43.290 --> 30:44.890
intstaff list的

30:44.890 --> 30:46.290
也就是说把它这个

30:46.290 --> 30:47.990
只给重新的这个方法

30:47.990 --> 30:49.090
重新调用一下

30:49.090 --> 30:50.390
那我们这里面先写上

30:50.390 --> 30:52.090
intstaff list

30:52.090 --> 30:52.490
好了

30:53.590 --> 30:54.390
定义完成之后

30:54.390 --> 30:55.090
那最后呢

30:55.090 --> 30:56.390
就来到了这个关键

30:56.390 --> 30:58.690
我们要指定一个rander函数

30:58.690 --> 31:00.190
指定这个rander函数

31:00.190 --> 31:01.090
其实那这里面

31:01.090 --> 31:02.890
才是我们真正需要去

31:02.890 --> 31:04.290
渲染的一个列表

31:04.290 --> 31:04.890
那这个列表

31:04.890 --> 31:05.890
我们现在做了吗

31:05.890 --> 31:06.890
其实没有啊

31:06.890 --> 31:08.090
那我们这里面怎么办

31:08.090 --> 31:10.690
我们直接的去输出的时候

31:10.690 --> 31:12.690
可以来定一个组件

31:12.690 --> 31:13.690
那这个组件呢

31:13.690 --> 31:15.490
就叫detail form

31:15.490 --> 31:16.290
可以啊

31:16.290 --> 31:17.590
我们在这里面写一下

31:17.590 --> 31:19.490
这个叫detail form

31:19.490 --> 31:20.990
写一个文件就行啊

31:24.490 --> 31:25.390
components

31:26.590 --> 31:27.990
detail form

31:29.990 --> 31:31.390
.js差

31:31.390 --> 31:31.990
然后呢

31:31.990 --> 31:33.790
咱们先给他来编写一下

31:33.790 --> 31:34.990
detail form

31:34.990 --> 31:38.390
然后是员工详情表达

31:39.690 --> 31:40.890
咱们先写了这里啊

31:40.890 --> 31:42.290
详情表达

31:42.290 --> 31:42.590
好了

31:42.590 --> 31:43.790
你写完成之后

31:43.790 --> 31:44.990
那这个时候呢

31:44.990 --> 31:46.590
我们就可以把它

31:46.590 --> 31:49.190
来给他进行一个引入

31:49.190 --> 31:50.090
引入的时候

31:50.090 --> 31:50.890
我们这里面

31:50.890 --> 31:52.790
因为是直接的一个函数

31:52.790 --> 31:55.090
那我就称出来一个

31:55.090 --> 31:56.490
我们js差的

31:56.490 --> 31:58.190
这样一个只要detail form

31:58.190 --> 31:59.090
ok

31:59.090 --> 32:00.090
添加完成之后

32:00.090 --> 32:02.290
那这个显然没引入啊

32:02.290 --> 32:02.990
我们怎么办

32:02.990 --> 32:04.190
给他引一下

32:04.190 --> 32:06.090
input detail form

32:06.090 --> 32:06.990
forum

32:06.990 --> 32:08.190
.components

32:08.190 --> 32:09.790
我们的components

32:09.790 --> 32:13.190
下面有一个detail form

32:13.190 --> 32:13.990
ok

32:13.990 --> 32:15.590
那这样就引入了

32:15.590 --> 32:17.190
现在所有需要的内容

32:17.190 --> 32:19.490
我们现在已经给他添加完成了

32:19.490 --> 32:20.190
那接下来呢

32:20.190 --> 32:21.390
我们就可以完成一下

32:21.390 --> 32:22.790
这个抽屉组件

32:22.790 --> 32:23.990
咱们先来看一下

32:23.990 --> 32:24.990
是否有抱错

32:24.990 --> 32:25.790
如果说有抱错

32:25.790 --> 32:26.790
这个事就尴尬了

32:26.790 --> 32:27.390
对不对

32:27.390 --> 32:28.190
刷新一下

32:28.190 --> 32:28.990
刷新一下

32:28.990 --> 32:30.390
感觉上不老对

32:30.390 --> 32:30.990
对吧

32:30.990 --> 32:32.190
那我们来看一下

32:32.190 --> 32:33.390
哪里的错误

32:34.890 --> 32:36.390
如他List的点算嘛

32:36.390 --> 32:37.390
这个原因是什么

32:37.390 --> 32:38.090
刚才呢

32:38.090 --> 32:39.990
我们去请求的时候

32:39.990 --> 32:41.090
有一个获取

32:41.090 --> 32:42.490
那这个获取的时候

32:42.490 --> 32:44.690
他后段应该是返回 false

32:44.690 --> 32:45.690
这个时候咋办呢

32:45.690 --> 32:47.990
其实为了处理这个问题

32:47.990 --> 32:50.990
我们在这个如他List的获取的时候

32:50.990 --> 32:51.590
common

32:51.590 --> 32:52.690
那这个时候

32:52.690 --> 32:54.890
我们就来给他处理一下

32:54.890 --> 32:56.890
如果说你要是如他List

32:56.890 --> 32:57.690
他有职了

32:57.690 --> 32:59.490
那你是不是就添这个了

32:59.490 --> 33:00.190
对不对

33:00.190 --> 33:02.390
那我们这个如他List

33:02.390 --> 33:03.490
他啊

33:03.490 --> 33:05.890
咱们在这个里面去

33:05.890 --> 33:07.390
quadry user Logan

33:07.390 --> 33:08.990
咱们在这个里面

33:08.990 --> 33:10.790
哪个里面获取的如他List的

33:10.790 --> 33:11.990
那我们就来处理一下

33:11.990 --> 33:13.890
他就可以啊

33:13.890 --> 33:16.290
Counts的如他List的ATTP

33:16.290 --> 33:18.290
然后Session Storage

33:18.290 --> 33:19.430
我们直接的

33:19.430 --> 33:20.690
Jesson.srin5

33:20.690 --> 33:21.890
如他List的

33:21.890 --> 33:22.690
那如他List的

33:22.690 --> 33:23.590
可能会没有值

33:23.590 --> 33:23.890
对吧

33:23.890 --> 33:24.590
那这个时候呢

33:24.590 --> 33:26.390
我们就给他一个空

33:26.390 --> 33:27.390
那假如说你要是 false

33:27.390 --> 33:29.390
那你就淳一个空输组就可以了

33:29.390 --> 33:29.690
这个呢

33:29.690 --> 33:31.390
就是我们的一个操作啊

33:31.390 --> 33:31.690
好了

33:31.690 --> 33:33.090
那咱们再来刷新一下

33:33.090 --> 33:33.590
这个时候呢

33:33.590 --> 33:35.090
我们重新登录一下

33:35.090 --> 33:36.690
admin 123qw

33:36.690 --> 33:38.890
点击登录

33:38.890 --> 33:40.090
登录成功之后

33:40.090 --> 33:40.790
那这个时候

33:40.790 --> 33:41.790
我们来看一下

33:41.790 --> 33:43.590
员工的这一个模块

33:43.590 --> 33:44.590
员工这一个模块

33:44.590 --> 33:45.490
我们一点击

33:45.490 --> 33:47.090
这个时候感觉也没爆错

33:47.090 --> 33:47.590
对不对

33:47.590 --> 33:49.390
抽屉组架一直展示着

33:49.390 --> 33:50.390
那我们慢慢的

33:50.390 --> 33:51.690
就可以来实现一下

33:51.690 --> 33:53.290
这个抽屉组架

33:53.290 --> 33:55.290
我们Driver组架的核心啊

33:55.290 --> 33:57.590
也就是说实现他的一个根本

33:57.590 --> 33:58.090
其实呢

33:58.090 --> 34:00.490
是用了安德地里面的一个Driver

34:00.490 --> 34:01.990
这样一个组架

34:01.990 --> 34:05.090
那我们就来搜一下安特地啊

34:05.090 --> 34:07.090
搜这个安特地站的时候

34:07.090 --> 34:08.090
我们在这个里面

34:08.090 --> 34:10.390
就找到这个Driver组架

34:10.390 --> 34:11.790
来看一下

34:11.790 --> 34:12.390
组架

34:12.390 --> 34:14.090
那我们搜索中文也可以啊

34:14.090 --> 34:14.790
叫抽屉

34:14.790 --> 34:16.890
抽屉这里面有一个钻碗

34:16.890 --> 34:17.490
对吧

34:17.490 --> 34:18.090
那这个呢

34:18.090 --> 34:19.390
就是他的一些使用

34:19.390 --> 34:20.890
我们可以来做一下

34:20.890 --> 34:22.890
比如说我们这里面

34:22.890 --> 34:23.590
Open一个

34:23.590 --> 34:23.790
哎

34:23.790 --> 34:25.490
你看从右侧展示出来一个

34:25.490 --> 34:26.790
然后里面有内容

34:26.790 --> 34:28.390
还有其他的相关的一些纸

34:28.390 --> 34:28.690
对吧

34:28.690 --> 34:30.490
这个正好是我们所需要的啊

34:30.490 --> 34:31.590
然后我们直接拿过来

34:31.590 --> 34:32.290
就OK了

34:32.290 --> 34:32.790
对吧

34:32.790 --> 34:33.190
那比如说

34:33.190 --> 34:34.590
你看一下我们这个啊

34:34.590 --> 34:35.990
这里面有删除有关闭

34:35.990 --> 34:36.490
对吧

34:36.490 --> 34:38.490
那其实我们不需要他这个删除

34:38.490 --> 34:39.490
是不是就可以了

34:39.490 --> 34:39.890
也就是说

34:39.890 --> 34:41.190
你把这一套复制过来

34:41.290 --> 34:41.790
正好呢

34:41.790 --> 34:43.590
可以归我们所使用啊

34:44.690 --> 34:45.490
检查

34:45.490 --> 34:46.690
检查的时候

34:46.690 --> 34:48.890
咱们先来搜索他的核心啊

34:50.190 --> 34:51.190
核心这里面

34:51.190 --> 34:52.890
就是我们的一个Driver

34:52.890 --> 34:53.190
对吧

34:53.190 --> 34:54.590
那我们就给他复制过来啊

34:55.990 --> 34:56.990
到我们这个里面

34:56.990 --> 34:58.190
找到我们的Driver

34:58.190 --> 34:58.790
这个时候

34:58.790 --> 35:00.390
咱也别抽屉组架了

35:00.390 --> 35:00.690
对吧

35:00.690 --> 35:01.690
直接就Driver

35:02.790 --> 35:03.590
那现在第一步

35:03.590 --> 35:04.490
先给他引进来啊

35:04.490 --> 35:05.190
现在不引进来

35:05.190 --> 35:05.790
他抱错

35:05.790 --> 35:06.190
对吧

35:07.590 --> 35:09.690
引炮的Driver from

35:09.690 --> 35:10.590
从哪来

35:10.990 --> 35:12.490
我们的安德蒂

35:13.890 --> 35:14.390
好了

35:14.390 --> 35:16.290
安德蒂天佳完成之后

35:17.790 --> 35:18.890
那这个时候呢

35:18.890 --> 35:19.390
Title

35:19.390 --> 35:20.990
Title我们已经传递过来了

35:20.990 --> 35:21.590
对吧

35:21.590 --> 35:22.690
Title传递过来

35:22.690 --> 35:25.090
我们就给他添加一个咱们自己的啊

35:26.390 --> 35:28.590
现在是Title值给他添加

35:28.590 --> 35:29.990
Title值添加之后

35:29.990 --> 35:30.890
Wide 500

35:30.890 --> 35:31.790
500就500吧

35:31.790 --> 35:32.290
宽度

35:33.090 --> 35:34.990
然后宽度咱不调整啊

35:34.990 --> 35:35.590
之后呢

35:35.590 --> 35:37.190
这里面有一个PlaceMint

35:38.290 --> 35:38.990
PlaceMint

35:38.990 --> 35:41.490
就是说你从哪个方向给我出来

35:41.490 --> 35:42.290
那这个时候呢

35:42.290 --> 35:43.590
我们直接的

35:43.590 --> 35:44.890
就让他从Red

35:44.890 --> 35:46.790
右边指定展现出来

35:46.790 --> 35:48.090
这个就OK了

35:48.090 --> 35:49.290
UncleLose

35:49.290 --> 35:50.690
那这个UncleLose呢

35:50.690 --> 35:52.690
咱们没有必要使用它啊

35:52.690 --> 35:55.190
因为我们的这个关闭和这个展现呢

35:55.190 --> 35:57.290
都是用Ether Show Detail Dialogue

35:57.290 --> 35:58.190
来控制它的

35:58.190 --> 35:58.790
所以说呢

35:58.790 --> 36:00.290
我们这个UncleLose

36:00.290 --> 36:02.190
可以让它CG的外啊

36:02.190 --> 36:03.990
那直接把它给干掉

36:03.990 --> 36:04.590
之后呢

36:04.590 --> 36:05.990
我们这里面有一个Vidable

36:05.990 --> 36:06.990
Vidable就是

36:06.990 --> 36:08.290
你是否展现出来

36:08.290 --> 36:11.590
我们这里面使用一个Ether Show Detail Dialogue

36:11.590 --> 36:12.090
对吧

36:12.090 --> 36:14.090
我们把这个Ether Show Detail Dialogue

36:14.090 --> 36:17.190
给它进行一个添加就可以了啊

36:17.190 --> 36:18.690
然后添加完成之后

36:18.690 --> 36:19.490
那这个时候

36:19.490 --> 36:21.790
我们这里面还有一个Exit

36:21.790 --> 36:22.390
那这个呢

36:22.390 --> 36:24.990
就是我们右侧的一些内容啊

36:24.990 --> 36:26.390
咱们可以来看一下

36:26.390 --> 36:28.590
它的这个右侧内容都哪些

36:28.590 --> 36:30.090
当我一点击Open的时候

36:30.090 --> 36:32.390
你会发现有一个Consult和这个OK

36:32.390 --> 36:32.990
对不对

36:32.990 --> 36:35.490
那Consult和OK是从哪来的

36:35.490 --> 36:37.590
那这里面是不是有一个Space

36:37.590 --> 36:40.290
Space里面装了什么Consult和OK

36:40.290 --> 36:41.590
至于这个里面的内容

36:41.590 --> 36:42.490
那这个里面的内容

36:42.490 --> 36:43.690
它其实非常简单啊

36:43.690 --> 36:46.190
我们这个Driver里面装载的内容

36:46.190 --> 36:47.890
是不是咱都已经准备好了

36:47.890 --> 36:49.090
就是你把这个Render

36:49.090 --> 36:51.090
函数给我执行一下就可以了

36:51.090 --> 36:52.690
也就是说我们自己定义的

36:52.690 --> 36:54.990
这个新增的那个表单啊

36:54.990 --> 36:57.490
然后我们就把它右边的这个内容

36:57.490 --> 37:00.490
给它进行一下添加就可以了

37:00.490 --> 37:01.690
添加右边内容呢

37:01.690 --> 37:03.290
这个里面写的比较麻烦

37:03.290 --> 37:04.190
那我们怎么

37:04.190 --> 37:06.290
我们定义一个Exit啊

37:06.290 --> 37:09.790
那这里面我们Exit的等于一个什么呢

37:09.790 --> 37:10.590
等于一个值

37:10.590 --> 37:12.290
值就叫Exit

37:14.730 --> 37:16.430
咱们写一下

37:16.430 --> 37:17.630
好了写完了之后

37:17.630 --> 37:20.830
那我们这里面来定义一下Consult的Exit

37:22.430 --> 37:23.830
等于一个值

37:23.830 --> 37:24.830
那其实这个值呢

37:24.830 --> 37:26.230
也是一个什么

37:26.230 --> 37:27.430
我们的节点啊

37:27.430 --> 37:27.930
对下

37:27.930 --> 37:30.030
那这个里面我们先规定一下

37:30.030 --> 37:32.330
首先我们这个来说左边啊

37:32.330 --> 37:34.030
其实你肯定是有值了

37:34.030 --> 37:35.230
咱们左边这一块

37:35.230 --> 37:37.230
是不是小明和这个iCon

37:37.230 --> 37:38.430
你是不是都有值

37:38.430 --> 37:39.030
对吧

37:39.030 --> 37:42.030
那我们那个左边小明和iCon有值之后

37:42.030 --> 37:44.230
那咱就来说这个右边啊

37:44.230 --> 37:45.630
咱们就来处理了啊

37:45.630 --> 37:46.730
那iCon从哪来

37:46.730 --> 37:48.230
iCon其实咱们还没有呢

37:48.230 --> 37:48.830
对不对

37:48.830 --> 37:50.730
我们把iCon添加一下吧

37:50.730 --> 37:52.530
现在iCon添加的话

37:52.530 --> 37:53.730
那我这样了

37:53.730 --> 37:55.930
我就别直接使用title了

37:55.930 --> 37:58.130
那我就要title node啊

37:59.430 --> 38:02.330
定一个这个叫左边的内容啊

38:02.330 --> 38:04.130
这里面咱们写一下

38:04.130 --> 38:06.130
左边的内容

38:06.130 --> 38:08.630
头部内容

38:08.630 --> 38:12.830
定一下Const title node

38:12.830 --> 38:15.530
这里面是title node

38:15.530 --> 38:17.130
title node等于

38:17.130 --> 38:18.930
这里面是两个死半啊

38:18.930 --> 38:19.530
两个死半

38:19.530 --> 38:21.230
我也不想要附容器了

38:21.230 --> 38:23.630
那我这时候使用两个

38:23.630 --> 38:25.830
开始和结束的空标签

38:25.830 --> 38:26.530
那这里面呢

38:26.530 --> 38:30.030
包裹了我们两个死判元素

38:30.030 --> 38:31.330
死判元素第一个

38:31.330 --> 38:33.630
就是展示我们一个图标

38:33.630 --> 38:35.830
那这个iCon Map

38:35.830 --> 38:37.430
这里面使用一个图标叫什么呢

38:37.430 --> 38:39.130
叫Copy

38:39.130 --> 38:40.930
复制的这么一个图标

38:40.930 --> 38:42.330
那这个复制图标哪来

38:42.330 --> 38:43.030
咱们有没有

38:43.030 --> 38:44.230
现在就设计到两个问题

38:44.230 --> 38:44.530
第一

38:44.530 --> 38:46.430
你先把这个iCon Map给弄进来

38:46.430 --> 38:47.130
对吧

38:47.130 --> 38:48.630
iCon Map from

38:48.630 --> 38:51.930
从我们的components下面

38:51.930 --> 38:53.330
有一个iCon Map

38:53.330 --> 38:54.030
然后呢

38:54.030 --> 38:54.830
咱们说过啊

38:54.830 --> 38:55.830
这个iCon Map呢

38:55.830 --> 38:57.730
我会实时的做一个更新

38:57.730 --> 38:59.130
所以说你直接的

38:59.130 --> 39:00.330
我们如果说

39:00.330 --> 39:01.630
没有这个图标怎么办

39:01.630 --> 39:04.230
那我们在fender中进行显示

39:04.230 --> 39:05.530
你把这个图标啊

39:05.530 --> 39:07.630
这个iCon Map给他做一个替换

39:07.630 --> 39:10.330
那这样就保证你有这个图标了

39:10.330 --> 39:10.630
好啦

39:10.630 --> 39:11.630
有了这个之后

39:11.630 --> 39:12.930
那咱们继续来写啊

39:12.930 --> 39:14.830
第一步我们iCon Map

39:14.830 --> 39:16.530
那现在就让他保证有啊

39:16.530 --> 39:18.930
之后这个里面

39:18.930 --> 39:20.630
一个大扩号

39:20.630 --> 39:21.030
好了

39:21.030 --> 39:22.130
这个就可以了

39:22.130 --> 39:22.730
之后呢

39:22.730 --> 39:24.030
我们再来写

39:24.030 --> 39:24.830
那这里面呢

39:24.830 --> 39:26.330
我们这个里面

39:26.330 --> 39:27.530
iCon Map有了之后呢

39:27.530 --> 39:28.930
就是展示Title了吧

39:28.930 --> 39:32.130
那我们下面就是他的一个

39:32.130 --> 39:33.330
Title展示

39:33.330 --> 39:35.430
之后这个Title node是有了

39:35.430 --> 39:36.830
Title node有了之后

39:36.830 --> 39:38.630
咱们再来说右边的内容

39:38.630 --> 39:40.030
右边都有哪些内容啊

39:40.030 --> 39:41.430
我这里面回退一下

39:41.430 --> 39:43.030
放到这个里面

39:43.030 --> 39:44.430
我们来看一下右边

39:44.430 --> 39:45.730
右边有一个删除图标

39:45.730 --> 39:48.030
有一条竖的一个横线

39:48.030 --> 39:49.430
还有一个close

39:49.430 --> 39:51.130
关闭的一个图标

39:51.130 --> 39:53.730
那这里面咱们一次的来实现一下

39:53.730 --> 39:55.930
同样的使用一个空标签

39:55.930 --> 39:56.430
那这样呢

39:56.430 --> 39:59.130
就不会生成一个档节点结构了啊

39:59.130 --> 40:00.630
然后这里面指定一下

40:00.630 --> 40:02.130
刺判

40:02.130 --> 40:02.730
这个呢

40:02.730 --> 40:04.030
给他添加点样式

40:04.030 --> 40:04.530
一会儿呢

40:04.530 --> 40:06.930
我们直接指定一个iCon

40:06.930 --> 40:07.830
那这个iCon

40:07.830 --> 40:11.530
我们这里面使用一个什么的iCon Map

40:11.530 --> 40:14.530
点一个delete删除

40:14.530 --> 40:16.230
然后咱们再来一个

40:16.230 --> 40:19.730
刺判CloseName这里面指定

40:19.730 --> 40:21.330
CloseName值是什么呢

40:21.330 --> 40:22.630
这个是大写的啊

40:22.630 --> 40:25.730
我们给他指定一个叫line

40:25.730 --> 40:26.530
一条线

40:26.530 --> 40:27.130
好吧

40:27.130 --> 40:30.330
那这个就处理完了

40:30.330 --> 40:31.130
处理完成之后

40:31.130 --> 40:32.830
我们再来写一下

40:32.830 --> 40:33.730
CloseName

40:33.730 --> 40:34.430
最后这个呢

40:34.430 --> 40:36.230
我们还叫他iCon

40:36.230 --> 40:38.630
因为这个是删除的这个图标了

40:38.630 --> 40:41.330
那我们这个iCon Map关闭的图标

40:41.330 --> 40:42.430
点一个什么呢

40:42.430 --> 40:43.830
我们这个叫Close

40:43.830 --> 40:45.430
当然这些图标前提

40:45.430 --> 40:47.230
你是得在iCon Map下面啊

40:47.230 --> 40:47.830
是都有的

40:47.830 --> 40:49.430
我们可以来看一下

40:49.430 --> 40:50.430
替换完成之后

40:50.430 --> 40:52.630
那这里面就会有这个callPay

40:52.630 --> 40:53.930
然后还有Close

40:53.930 --> 40:55.830
包括我们的del

40:55.830 --> 40:57.230
这里面是不是都有啊

40:57.230 --> 40:57.930
如果说你没有

40:57.930 --> 40:58.330
怎么办

40:58.330 --> 40:59.530
还是我刚才说那句话

40:59.530 --> 41:02.230
替换一下就可以了啊

41:02.230 --> 41:03.430
iCon Map

41:03.530 --> 41:05.330
这写错了啊

41:05.330 --> 41:05.730
好

41:05.730 --> 41:06.830
定义完成之后

41:06.830 --> 41:07.830
那我们右边的

41:07.830 --> 41:09.130
是不是暂时也有了

41:09.130 --> 41:09.730
有了之后

41:09.730 --> 41:11.830
咱们就让他谅个项目

41:11.830 --> 41:12.630
对不对

41:12.630 --> 41:13.430
刷新一下

41:13.430 --> 41:13.930
哎呀

41:13.930 --> 41:14.830
错的厉害啊

41:14.830 --> 41:15.830
惨不忍睹

41:15.830 --> 41:16.730
来看一下

41:16.730 --> 41:18.030
哪里包错

41:18.030 --> 41:19.030
Const

41:19.030 --> 41:20.430
const

41:20.430 --> 41:22.430
const

41:22.430 --> 41:23.330
这个里面

41:23.330 --> 41:24.430
title node

41:24.430 --> 41:27.590
extract

41:27.590 --> 41:28.490
好的

41:28.490 --> 41:28.790
哎

41:28.790 --> 41:30.090
我们不加分号

41:30.090 --> 41:31.290
这是多了一个什么

41:31.290 --> 41:32.490
多了一个扩号

41:32.490 --> 41:33.590
难怪哈

41:33.590 --> 41:33.890
好了

41:33.890 --> 41:35.090
那这样就搞定了

41:35.090 --> 41:35.690
搞定之后

41:35.690 --> 41:37.290
咱们来露眼啊

41:37.290 --> 41:38.390
看一眼

41:38.390 --> 41:39.390
那这个时候

41:39.390 --> 41:40.590
咱们点击吧

41:40.590 --> 41:41.790
点击的时候

41:41.790 --> 41:42.890
那他就给我展示出来

41:42.890 --> 41:44.190
为什么能展示出来

41:44.190 --> 41:45.590
展示出来的原因是咱呢

41:45.590 --> 41:47.090
是因为我们这个

41:47.090 --> 41:47.790
手detail

41:47.790 --> 41:48.590
咱们上一课

41:48.590 --> 41:50.290
是不是已经给他定义好了

41:50.290 --> 41:51.990
意思是手detail在捞扬

41:51.990 --> 41:53.190
跟我们想的

41:53.190 --> 41:54.290
有一点点不一样

41:54.290 --> 41:55.690
首先这个关闭按钮

41:55.690 --> 41:57.290
我们其实是不需要他的

41:57.290 --> 41:57.990
对不对

41:57.990 --> 41:59.290
那我们直接的

41:59.290 --> 42:01.490
是否能点击这个关闭

42:01.490 --> 42:02.890
那我们这里面有一个属性

42:02.890 --> 42:03.990
叫closeable

42:03.990 --> 42:04.490
那这个呢

42:04.490 --> 42:06.890
我们同学可以自行去茶院

42:06.890 --> 42:08.290
把这个小茶给他干掉

42:08.290 --> 42:09.590
那这样他就没有了

42:09.590 --> 42:10.190
咱们来试一下

42:10.190 --> 42:10.390
哎

42:10.390 --> 42:11.790
这个时候是不是就没有了

42:11.790 --> 42:12.190
之后呢

42:12.190 --> 42:13.390
我们就把这个样式

42:13.390 --> 42:14.990
给简单的来处理一下

42:14.990 --> 42:15.990
就可以啊

42:15.990 --> 42:17.090
创建一个文件啊

42:17.090 --> 42:17.790
这个文件呢

42:17.790 --> 42:20.590
叫我们index.less文件

42:20.590 --> 42:21.690
写一点样式啊

42:21.690 --> 42:22.790
写一点什么样式呢

42:22.790 --> 42:24.390
首先我们对这个

42:24.390 --> 42:26.090
Icon图标做一个处理

42:26.090 --> 42:28.690
那这个写一个margin rat

42:28.690 --> 42:30.190
当然写的最简单的

42:30.190 --> 42:32.890
比如说这里面给他一个15px

42:32.890 --> 42:33.490
之后呢

42:33.490 --> 42:35.890
console指定一个ponent

42:35.890 --> 42:36.490
然后呢

42:36.490 --> 42:38.890
我们给他一个fount size

42:38.890 --> 42:41.590
fount size给他一个二十像素

42:41.590 --> 42:43.190
之后这个就处理完了

42:43.190 --> 42:46.290
然后是我们的点烂啊

42:46.290 --> 42:47.990
把这里面再处理一下

42:47.990 --> 42:48.490
处理一下

42:48.490 --> 42:50.590
给他一个宽度一像素

42:50.590 --> 42:52.090
就是那条竖线啊

42:52.090 --> 42:52.490
高度呢

42:52.490 --> 42:55.290
给他一个12px

42:55.290 --> 42:55.490
好了

42:55.490 --> 42:56.290
定义完成之后

42:56.290 --> 42:57.690
给他一个background

42:57.690 --> 43:00.890
background的景号滴滴滴

43:00.890 --> 43:02.590
给他一个margin rat

43:02.590 --> 43:05.190
同样是15px

43:05.190 --> 43:05.490
好了

43:05.490 --> 43:07.490
这个也处理完了之后

43:07.490 --> 43:09.990
这个12px加一个分块

43:09.990 --> 43:10.990
margin rat 15

43:10.990 --> 43:13.090
fount size给他指定一下

43:13.090 --> 43:14.290
字体大小

43:14.290 --> 43:15.190
fount size

43:15.190 --> 43:18.590
我们指定他一个二十px

43:18.590 --> 43:20.090
给他一个二十date blade

43:20.090 --> 43:21.590
给他一个inline block

43:21.590 --> 43:22.590
这个没必要指定

43:22.590 --> 43:23.290
fount size啊

43:23.290 --> 43:24.790
这个line没有fount size啊

43:24.790 --> 43:25.890
然后我们指定一下

43:25.890 --> 43:27.790
这个叫title啊

43:27.790 --> 43:30.490
把title也做一个处理

43:30.490 --> 43:32.490
我们给他一个margin rat

43:32.490 --> 43:34.290
十像素

43:34.290 --> 43:35.190
十px

43:35.190 --> 43:35.490
ok

43:35.490 --> 43:37.190
那咱们来抽一眼啊

43:37.190 --> 43:39.290
现在满不满足我们的需求

43:39.290 --> 43:41.290
感觉上没起作用是吧

43:41.290 --> 43:42.690
那咱们引入他呗

43:42.690 --> 43:43.390
对吧

43:43.390 --> 43:44.590
input

43:44.590 --> 43:48.590
我们的点刚index点less文件

43:48.590 --> 43:50.090
给他做一个导入

43:50.090 --> 43:50.890
导入之后

43:50.890 --> 43:51.890
如果说还不起作用

43:51.890 --> 43:52.290
怎么办

43:52.290 --> 43:53.490
你刷新一下

43:53.490 --> 43:54.190
刷新一下

43:54.190 --> 43:56.290
看他这个文件是不是管用了啊

43:56.290 --> 43:57.390
我们点击关于

43:57.390 --> 43:57.990
你会发现

43:57.990 --> 43:59.790
这个时候是不是起作用了

43:59.790 --> 44:00.190
之后啊

44:00.190 --> 44:01.090
像这一些

44:01.090 --> 44:02.690
比如说啊

44:02.690 --> 44:04.590
比较小的这个样式调节啊

44:04.590 --> 44:05.490
细微的调节

44:05.490 --> 44:06.990
咱们就不做处理了

44:06.990 --> 44:07.990
在这个里面

44:07.990 --> 44:08.590
然后呢

44:08.590 --> 44:11.090
我们继续的来实现他

44:11.090 --> 44:12.690
怎么来实现的呢

44:12.690 --> 44:13.790
这个里面

44:13.790 --> 44:15.290
我们还有一个属性

44:15.290 --> 44:16.490
要进行一个添加

44:16.490 --> 44:17.590
是什么属性呢

44:17.590 --> 44:19.890
就是说当这个弹床关闭的时候

44:19.890 --> 44:21.990
我们要把他里面的这个组件内容

44:21.990 --> 44:23.290
给进行一个销毁

44:23.290 --> 44:23.990
那否则呢

44:23.990 --> 44:25.190
你第二次打开的时候

44:26.390 --> 44:26.990
很有可能

44:26.990 --> 44:29.290
他是把上一次内容给做了一个渲染

44:29.290 --> 44:29.790
那我这里面

44:29.790 --> 44:31.490
就使用一个什么属性呢

44:31.490 --> 44:34.090
这个叫Date Story Unclose

44:34.090 --> 44:35.390
Date Story Unclose呢

44:35.390 --> 44:37.590
是专门的进行一个

44:37.590 --> 44:39.990
删除内部的一个组件

44:39.990 --> 44:41.490
其实说完了就是

44:41.490 --> 44:43.490
把里面的这个Render函数啊

44:43.490 --> 44:44.190
里面的内容

44:44.190 --> 44:45.790
给他做一个删除就可以了

44:47.190 --> 44:47.490
好的

44:47.490 --> 44:49.790
那现在咱们基本上都准备完了

44:49.790 --> 44:50.490
准备完了之后

44:50.490 --> 44:51.790
我们就把这些功能

44:51.790 --> 44:52.690
相应的啊

44:52.690 --> 44:55.890
都给他来做一个实现就可以了

44:55.890 --> 44:57.490
首先实现打功能呢

44:57.490 --> 44:59.690
比如说我们点击这个Close按钮

44:59.790 --> 45:02.790
我们呢要对他进行一个关闭的

45:02.790 --> 45:04.190
这么一个操作

45:04.190 --> 45:04.790
对吧

45:04.790 --> 45:06.390
那我们就来做一下

45:06.390 --> 45:08.490
我们首先对这个关闭图标

45:08.490 --> 45:11.590
进行一个事件的绑定啊

45:11.590 --> 45:14.890
这里面我们给他一个Uncle Lake属性

45:14.890 --> 45:16.190
Uncle Lake属性

45:16.190 --> 45:18.690
我们等于一个Close Dialogue

45:18.690 --> 45:22.190
这里面调用一个Close Dialogue就可以了

45:22.190 --> 45:24.690
Uncle LakeUncle Lake Close Dialogue

45:24.690 --> 45:27.190
那我们这里面就写一下关闭弹刷

45:27.190 --> 45:29.090
从这个上面开始写啊

45:29.190 --> 45:34.030
那这个是关闭弹刷

45:34.030 --> 45:38.330
好定一下Counts的Close Dialogue

45:39.530 --> 45:43.930
Close Dialogue等于我们的一个箭头函数

45:43.930 --> 45:45.030
照这个里面

45:45.030 --> 45:47.530
我们其实Close Dialogue是要做什么事

45:47.530 --> 45:50.430
就是把我们刚才定义好的Model里面

45:50.430 --> 45:51.530
这个状态

45:51.530 --> 45:53.330
那这里面Show Set

45:53.330 --> 45:54.630
Show Detail Dialogue

45:54.630 --> 45:55.530
给他做一个调用

45:55.530 --> 45:56.530
是不是就可以了

45:56.530 --> 45:59.030
那这里面我们就是第一次Patch

45:59.030 --> 46:02.130
从过第一次Patch来进行调用

46:02.130 --> 46:03.330
首先Type

46:03.330 --> 46:05.630
它是我们Calmen模块下面的

46:06.930 --> 46:08.730
那我们就写一下Calmen

46:08.730 --> 46:12.330
Calmen下面的Set Show Detail Dialogue

46:13.430 --> 46:13.930
之后呢

46:13.930 --> 46:16.630
我们的这个Payload给他传递一个值

46:18.030 --> 46:20.030
这个里面就是需要修改

46:20.030 --> 46:22.430
依自Show Detail Dialogue为False

46:22.430 --> 46:23.630
那我们这里面就写一下

46:25.430 --> 46:26.730
给他一个False

46:26.730 --> 46:28.330
OK 那这样就处理完了

46:28.330 --> 46:29.630
处理完成之后

46:29.630 --> 46:31.730
那我们COMN

46:31.730 --> 46:33.830
然后这个里面应该是Deep Patch

46:33.830 --> 46:35.130
得使用一下对吧

46:35.130 --> 46:37.730
那我们先给他做一下定义

46:38.630 --> 46:41.430
Const Deep Patch给他做一个调用

46:41.430 --> 46:44.330
等于我们的Use Deep Patch

46:44.330 --> 46:45.730
然后这个Use Deep Patch

46:45.730 --> 46:47.830
我们得给他做一个引入

46:47.830 --> 46:49.230
从我们的5mm里面

46:49.230 --> 46:51.930
把它给导出来Use Deep Patch

46:51.930 --> 46:52.230
好了

46:52.230 --> 46:54.830
那这个Deep Patch就已经导出了

46:54.830 --> 46:56.930
导出这个Deep Patch之后Payload

46:56.930 --> 46:58.130
那他现在一调用

46:58.130 --> 46:58.930
就关闭

46:58.930 --> 46:59.670
关闭的时候

46:59.670 --> 47:02.530
处发这个依自Show Detail Dialogue的一个改变

47:02.530 --> 47:05.130
那先看第一个功能是否可以实现

47:05.130 --> 47:06.530
我们点击关闭按钮

47:06.530 --> 47:07.130
刷新一下

47:07.130 --> 47:08.530
那咱们来

47:08.530 --> 47:10.030
到这个里面刷新一下

47:10.030 --> 47:11.930
然后打开控制台

47:11.930 --> 47:14.530
检查元素点开关于OK

47:14.530 --> 47:15.630
没问题啊

47:15.630 --> 47:17.030
然后咱们来看一眼

47:17.030 --> 47:18.530
点击关闭按钮

47:18.530 --> 47:20.930
还有会发现有抱错

47:20.930 --> 47:21.830
Deep Patch

47:21.830 --> 47:22.930
依自NOW的底

47:24.130 --> 47:25.930
这里面没有定义啊

47:25.930 --> 47:27.130
这里面是Deep Play了

47:27.130 --> 47:29.230
有时候提示啊不是特别准啊

47:29.230 --> 47:29.430
好

47:29.430 --> 47:31.130
那咱们再来试一遍啊

47:31.130 --> 47:32.130
关闭了对不对

47:32.130 --> 47:32.930
再来一遍啊

47:32.930 --> 47:34.530
打开关闭OK

47:34.530 --> 47:35.130
没问题

47:35.130 --> 47:35.930
第一个功能

47:35.930 --> 47:37.330
我们就实现了

47:37.330 --> 47:38.330
第二个功能是什么呢

47:38.330 --> 47:40.730
就是对他的一个删除啊

47:40.730 --> 47:41.730
删除从哪做

47:41.730 --> 47:44.030
那我们直接的是不是得找到删除按钮

47:44.030 --> 47:47.130
也就是说这个Icon Map点DL啊

47:47.130 --> 47:50.230
那这个DL我们对他删除的时候

47:50.230 --> 47:51.230
同样的啊

47:51.230 --> 47:53.930
给他绑定一个Uncle Lake 实践

47:53.930 --> 47:55.330
那Uncle Lake 实践里面

47:55.330 --> 47:56.630
因为删除操作呢

47:56.630 --> 47:58.230
它是一个破坏的操作

47:58.230 --> 47:59.430
我们这个里面啊

47:59.430 --> 48:00.830
弹出一个提示光

48:00.830 --> 48:03.630
比如说我们这个OpenModelDialogue

48:03.630 --> 48:06.830
就是打开一个对话框啊

48:06.830 --> 48:08.530
定义这么一个方法

48:08.530 --> 48:10.930
那我们就可以来写一下

48:10.930 --> 48:19.100
这个是里面是打开删除的对话框

48:19.100 --> 48:22.200
定一下Cons的OpenModelDialogue

48:22.200 --> 48:24.900
等于一个箭头函数

48:24.900 --> 48:26.500
我们在这个里面调用的时候

48:26.500 --> 48:27.300
调用什么呢

48:27.300 --> 48:31.400
我们直接的使用我们安底单里面的Model模块

48:33.200 --> 48:34.400
Model模块下面

48:34.400 --> 48:35.800
就会有一个conframe

48:35.800 --> 48:37.400
但是前提你使用的时候

48:37.400 --> 48:39.200
你是不是得给他做一个导入啊

48:39.200 --> 48:41.200
我们这个小模太框的一个插件

48:41.200 --> 48:44.400
Model点一个conframe

48:44.400 --> 48:46.200
调用它的一个conframe

48:46.200 --> 48:47.800
然后这个conframe里面呢

48:47.800 --> 48:50.400
我们给他一些描述信息吧

48:50.400 --> 48:52.100
因为之前也没写描述信息

48:52.100 --> 48:55.300
那这里面给他一个温馨提示

48:55.300 --> 48:55.900
对吧

48:56.000 --> 48:58.100
温馨提示给他提示个啥呢

48:58.100 --> 48:59.200
content

48:59.200 --> 49:03.200
然后那个确定要删除当前用信息吗

49:03.200 --> 49:12.070
确定这里面写一下要删除当前用户信息吗

49:12.070 --> 49:13.870
删除当前用信息吧

49:13.870 --> 49:15.470
然后给他一个问号

49:15.470 --> 49:16.570
如果说你确定了

49:16.570 --> 49:17.870
那现在就是什么

49:17.870 --> 49:20.370
我们点击了ok

49:20.370 --> 49:23.670
那我们就调用这个ok这个方法啊

49:23.670 --> 49:24.970
这个ok方法呢

49:24.970 --> 49:26.170
其实也非常简单

49:26.170 --> 49:28.770
这个应该是一个英文符号

49:28.770 --> 49:31.270
把它给做一个改变英文

49:31.270 --> 49:32.670
ok ok的时候

49:32.670 --> 49:36.470
我们直接的去调用delete删除的这么一个方法

49:36.470 --> 49:40.170
那我这里面写一个delete item

49:40.170 --> 49:43.670
delete item当前的这一项啊

49:43.670 --> 49:44.070
然后呢

49:44.070 --> 49:46.670
我们调用这个delete item的时候

49:46.670 --> 49:50.870
那这个里面我们删除指定的

49:50.870 --> 49:55.070
比如说这个删除指定的列表象对吧

49:55.070 --> 49:56.470
其实这个列表象

49:56.470 --> 49:58.070
我们它有一个特点是什么的

49:58.070 --> 49:58.970
不是在列表里面

49:58.970 --> 50:01.970
它应该是这个详情展示的这一项

50:01.970 --> 50:02.870
对吧

50:02.870 --> 50:08.660
详情展示的这一项

50:08.660 --> 50:10.160
然后是数据

50:10.160 --> 50:10.960
ok

50:10.960 --> 50:11.760
咱们定一下

50:11.760 --> 50:15.460
couns它下滑线delete item

50:15.460 --> 50:16.760
等于一个

50:16.760 --> 50:18.160
因为是一个异不操作

50:18.160 --> 50:20.060
那我们这里面使用这个

50:20.060 --> 50:21.360
返回pro means对象

50:21.360 --> 50:24.760
那我就使用async await关键字

50:24.760 --> 50:27.260
那这个async里面咱们要做什么呢

50:27.260 --> 50:29.860
我们couns它这里面要操作了啊

50:29.860 --> 50:32.960
比如说这里面如果说你成功有code和msg

50:32.960 --> 50:33.560
对吧

50:33.560 --> 50:37.760
等于 await code msg await

50:37.760 --> 50:39.660
那我们这里面就调用删除方法

50:39.660 --> 50:41.960
删除方法咱们使用dollar ATP

50:41.960 --> 50:44.560
dollar AP你现在是不是得做一个引入啊

50:44.560 --> 50:46.360
那我这里面就再来写一下

50:46.360 --> 50:48.260
input dollar ATP

50:48.260 --> 50:51.460
服装从我们的API里面来进行一个获取

50:52.660 --> 50:54.060
这个dollar ATP

50:54.060 --> 50:55.660
那我们这里面指定什么呢

50:55.660 --> 50:58.360
就是我们的这个interface name

50:59.760 --> 51:01.460
然后这个interface name里面

51:01.460 --> 51:02.860
我们删除的时候

51:02.860 --> 51:03.860
因为删除啊

51:03.860 --> 51:06.560
咱们可以看一下用户删除的这个接口

51:06.560 --> 51:08.760
我们找到这个部门

51:08.760 --> 51:10.660
到这个里面是有一个啊

51:10.660 --> 51:11.460
sorry啊

51:11.460 --> 51:13.860
应该是找到我们的这个员工啊

51:13.860 --> 51:15.460
员工这一块

51:15.460 --> 51:17.660
到这个里面员工接口

51:17.660 --> 51:19.660
那这里面有删除员工信息

51:19.660 --> 51:20.960
删除员工信息啊

51:20.960 --> 51:22.960
这里面是一个id s

51:22.960 --> 51:26.160
比如说他的这个删除是id 1id 2

51:26.160 --> 51:28.460
这种啊来进行一个删除

51:28.460 --> 51:31.960
那这代表着删除员工的一个唯一标识id

51:31.960 --> 51:34.260
那就把这个给来做一个处理就可以了

51:34.260 --> 51:36.560
也就是说其实他传递的是一个什么

51:36.560 --> 51:37.560
数组对吧

51:37.560 --> 51:39.760
但是我们现在获取的不是数组啊

51:39.760 --> 51:41.760
我们是获取的一个id的字幕刷

51:41.760 --> 51:43.360
那我们这里面就指定一下

51:43.360 --> 51:46.360
这个叫象化线id

51:46.360 --> 51:48.260
你这样定一下就ok了

51:48.260 --> 51:49.260
删除完成之后

51:49.260 --> 51:51.360
那如果说你真正的删除之后

51:51.360 --> 51:52.360
那这个时候

51:52.460 --> 51:53.860
假如说扣的有值了

51:53.860 --> 51:55.060
那是不是就删除错了

51:55.060 --> 51:56.060
那我就给他return掉

51:56.060 --> 51:57.060
是不是就可以了

51:57.060 --> 51:59.560
也就是说那现在咱就甭删除了

51:59.560 --> 52:00.160
否则呢

52:00.160 --> 52:01.560
那我们直接在这个里面

52:01.560 --> 52:02.160
message

52:02.160 --> 52:04.660
我们就给他提供一个sug size

52:04.660 --> 52:08.060
sug size把这个msg给他进行一个打印

52:08.060 --> 52:09.060
就可以了啊

52:09.060 --> 52:09.560
然后呢

52:09.560 --> 52:12.360
我们这个message是使用一个弹框

52:12.360 --> 52:13.160
按地弹的

52:13.160 --> 52:14.760
那我们就给他添加一下

52:14.760 --> 52:15.960
添加完成之后

52:15.960 --> 52:18.160
那现在你是不是删除了

52:18.160 --> 52:20.460
你是没有必要展示这个

52:20.460 --> 52:22.160
我们现在这个详情组件了

52:22.160 --> 52:22.560
对不对

52:22.560 --> 52:24.260
那我们就调用一下什么

52:24.260 --> 52:26.260
close dialog这个方法

52:26.260 --> 52:27.660
那我们来做一个调用

52:27.660 --> 52:29.360
是不是就可以了

52:29.360 --> 52:30.760
也就是说把这个弹框

52:30.760 --> 52:31.260
啊

52:31.260 --> 52:34.160
这个右侧的这个抽屉给他关闭啊

52:34.160 --> 52:35.060
关闭之后

52:35.060 --> 52:36.160
那你既然都删除了

52:36.160 --> 52:37.360
是不是在列表项里面

52:37.360 --> 52:38.460
你也得做一个处理

52:38.460 --> 52:40.460
那我们就reload list的

52:40.460 --> 52:42.860
给他来做一个这个操作就可以了啊

52:42.860 --> 52:43.060
好的

52:43.060 --> 52:44.160
这些都做完之后

52:44.160 --> 52:45.960
那咱们就删除一下吗

52:45.960 --> 52:46.660
删除一下

52:46.660 --> 52:47.760
把谁删除

52:47.760 --> 52:49.460
把小明也删除了

52:49.460 --> 52:50.960
小明是老点弄了

52:50.960 --> 52:52.460
这个老眼感了

52:52.460 --> 52:53.260
一样

52:53.260 --> 52:54.560
从这个项目开始

52:54.560 --> 52:55.560
他就存在

52:55.560 --> 52:57.360
那给他干掉啊

52:57.360 --> 52:58.960
谈出温馨提示

52:58.960 --> 53:01.660
确定要删除当前用信息吗

53:01.660 --> 53:03.760
我这里面有ok有坑扫啊

53:03.760 --> 53:04.260
这个啊

53:04.260 --> 53:05.260
咱们先别删除

53:05.260 --> 53:06.660
咱们先来说一个事啊

53:06.660 --> 53:07.460
什么事呢

53:07.460 --> 53:10.360
就是说你这个ok和坑扫感觉上

53:10.360 --> 53:11.560
是不是不是特别好

53:11.560 --> 53:13.760
因为我们是中文的这个项目

53:13.760 --> 53:14.260
对不对

53:14.260 --> 53:15.360
你老提示这个

53:15.360 --> 53:16.160
那也不太对啊

53:16.160 --> 53:17.260
那这个怎么来处理呢

53:17.260 --> 53:18.760
其实这个也非常简单啊

53:18.760 --> 53:20.760
我们在这个安底单里面

53:20.760 --> 53:22.560
其实是有中文的啊

53:22.560 --> 53:24.660
我们直接让他在这个安底单里面

53:24.660 --> 53:27.360
所有模块都继承中文这个

53:27.360 --> 53:29.960
相关的这个匹配就ok了

53:29.960 --> 53:31.060
这个怎么来实现呢

53:31.060 --> 53:34.760
我们可以用他安底单的全局配置啊

53:34.760 --> 53:36.560
里面有一个config provider

53:36.560 --> 53:37.460
我们来找一下

53:37.460 --> 53:40.160
找到这个config provider之后

53:40.160 --> 53:42.460
那通过全局化配置来实现

53:42.460 --> 53:44.160
首先我们把这个

53:44.160 --> 53:46.660
config provider给他做一个引入

53:46.660 --> 53:47.760
引入他的时候

53:47.760 --> 53:48.460
其实这个呢

53:48.460 --> 53:50.660
我们就不能在这个

53:50.660 --> 53:52.360
我们某一个组件里面引入

53:52.360 --> 53:53.560
因为是全局配置

53:53.560 --> 53:55.360
我们可以找到layout

53:55.360 --> 53:59.060
layout下面有一个container

53:59.060 --> 54:00.460
有一个容器对不对

54:00.460 --> 54:01.360
那这个容器呢

54:01.360 --> 54:03.960
作为我们的一个基础的容器啊

54:03.960 --> 54:04.960
这container

54:04.960 --> 54:06.060
container是什么

54:06.060 --> 54:07.160
我们可以来看一下

54:08.160 --> 54:08.560
这个呢

54:08.560 --> 54:13.260
就去找当前某一个匹配的这么一个组件

54:13.260 --> 54:15.260
然后里面有loading和催稳

54:15.260 --> 54:17.060
比如说这个背的layout啊

54:17.060 --> 54:19.060
或者是我们loginlayout

54:19.060 --> 54:20.160
那不管是哪一个

54:20.160 --> 54:22.160
他都是走的这个里面对不对

54:22.160 --> 54:24.060
那我们直接的可以在这个里面

54:24.060 --> 54:27.760
使用一下我们全局的这种配置

54:27.760 --> 54:29.560
也就是说config provider

54:29.560 --> 54:31.760
我们先给他进行一个引入啊

54:31.760 --> 54:33.560
这里面config provider

54:33.560 --> 54:34.960
我们给他做一个包裹

54:36.060 --> 54:36.560
然后呢

54:36.560 --> 54:38.660
把他的中文包给加来进来

54:38.660 --> 54:39.860
config provider

54:39.860 --> 54:44.660
把这个后面的给他放在b盒的后面啊

54:44.660 --> 54:46.160
config provider

54:46.160 --> 54:47.660
好的添加完成之后

54:47.660 --> 54:48.460
那这个时候呢

54:48.460 --> 54:51.160
我们光引入他还没有任何意义啊

54:51.160 --> 54:52.760
就是说我们使用他的时候

54:52.760 --> 54:53.660
其实在这个里面

54:53.660 --> 54:54.760
我们指定一个什么

54:54.760 --> 54:56.060
语言包就可以了

54:56.060 --> 54:57.360
那也就是说

54:57.360 --> 54:59.260
我们指定一个local属性

55:00.660 --> 55:04.860
local属性等于一个中文zhcn啊

55:04.860 --> 55:06.660
这个zhcn从哪来呢

55:06.660 --> 55:09.360
那我们现在得给他做一个导入啊

55:09.360 --> 55:10.160
那导入的话

55:10.160 --> 55:12.560
我们直接在这个里面就来写一下

55:12.560 --> 55:13.760
input

55:13.760 --> 55:15.660
那首先这个导入的话

55:15.660 --> 55:17.660
就是zhcn

55:17.660 --> 55:18.760
服装模

55:18.760 --> 55:21.360
从我们的这个安特地里面

55:21.360 --> 55:22.760
安特地里面是有的

55:22.760 --> 55:25.760
安特地下面的我们eis

55:25.760 --> 55:27.660
然后是local

55:27.660 --> 55:30.360
local下面就会有一个中文包

55:30.360 --> 55:33.360
叫zhcn的这样一个包

55:33.360 --> 55:34.460
那这样导入之后呢

55:34.460 --> 55:35.760
他现在显示的时候

55:35.760 --> 55:37.060
就能是中文了

55:37.060 --> 55:39.460
咱们可以看一下快速修复

55:39.460 --> 55:40.460
省文他抱错

55:40.460 --> 55:41.260
对吧

55:41.260 --> 55:41.560
好了

55:41.560 --> 55:42.760
那这个时候就都有了

55:42.760 --> 55:43.460
这个link呢

55:43.460 --> 55:44.960
我们也没使用到啊

55:44.960 --> 55:46.260
咱们就给他删除了

55:46.260 --> 55:46.860
之后呢

55:46.860 --> 55:47.860
这里面有一个button

55:47.860 --> 55:48.760
button也没用到

55:48.760 --> 55:50.860
把一些不需要使用的东西

55:50.860 --> 55:51.760
咱们都给他干掉啊

55:51.760 --> 55:53.360
包括我们这个history

55:53.360 --> 55:54.560
这里面跳转的时候

55:54.560 --> 55:55.260
也没使用到

55:55.260 --> 55:56.160
对吧

55:56.160 --> 55:57.460
ok 处理完成之后

55:57.460 --> 55:59.460
咱们来看一下是否可行

55:59.460 --> 56:00.260
那这个时候呢

56:00.260 --> 56:01.760
我们重新来做一下

56:03.260 --> 56:03.960
刷新一下

56:03.960 --> 56:04.960
刷新一下之后

56:04.960 --> 56:06.260
我们这里面点击

56:06.260 --> 56:07.060
点击的时候

56:07.060 --> 56:08.460
我们去要删除

56:08.460 --> 56:10.060
那这时候你会发现

56:10.060 --> 56:11.260
是不是变成中文的

56:11.260 --> 56:12.460
确定和取消了

56:12.460 --> 56:13.660
而且不光是这里面

56:13.660 --> 56:14.860
我们还有哪块变了

56:14.860 --> 56:16.060
可以看一下

56:16.060 --> 56:16.660
原来呢

56:16.660 --> 56:17.660
我们这个里面啊

56:17.660 --> 56:20.460
显示的时候是这个sowale啊

56:20.460 --> 56:21.660
其实这个图标比较小

56:21.660 --> 56:22.460
我们看不到啊

56:22.460 --> 56:23.960
他这个有锁略了

56:23.960 --> 56:24.660
那现在呢

56:24.660 --> 56:26.160
我们对这个操作的时候

56:26.160 --> 56:28.560
其实这里面就能显示出一个中文了

56:28.560 --> 56:29.660
包括我们日期啊

56:29.660 --> 56:32.260
日期里面这个应该是展示

56:32.260 --> 56:33.360
今天是不是啊

56:33.360 --> 56:35.960
这个时候就会有中文展示了啊

56:35.960 --> 56:36.260
好的

56:36.260 --> 56:38.160
那这个就是我们一个处理啊

56:38.160 --> 56:38.960
处理完成之后呢

56:38.960 --> 56:39.660
咱们再回量

56:39.660 --> 56:41.760
继续来做删除的一个操作啊

56:41.760 --> 56:43.960
当我去删除某项值的时候

56:43.960 --> 56:45.760
那咱们这个删除啊

56:45.760 --> 56:46.660
其实功能呢

56:46.660 --> 56:48.360
我们都已经写完了

56:48.360 --> 56:49.060
对吧

56:49.060 --> 56:49.660
找到他啊

56:49.660 --> 56:51.460
再回来重新看一下

56:51.460 --> 56:53.060
src complements

56:53.060 --> 56:54.160
找到我们的drawer

56:54.160 --> 56:56.360
drawer下面index.js差

56:56.360 --> 56:57.560
删除的时候

56:57.560 --> 56:58.660
调用一个接口

56:58.660 --> 57:00.360
如果说你要是有错误状态码

57:00.360 --> 57:01.460
我就给你停掉

57:01.460 --> 57:01.960
否则呢

57:01.960 --> 57:03.760
那我就给你提示删除成功

57:03.760 --> 57:04.260
之后呢

57:04.260 --> 57:05.660
去reload list的

57:05.660 --> 57:07.360
reload list的做了一个什么事

57:07.360 --> 57:08.260
我们可以看一下

57:08.260 --> 57:09.660
pages stuff

57:10.660 --> 57:12.560
到我们index.js差

57:12.560 --> 57:13.960
那这个reload list里面

57:13.960 --> 57:15.760
重新去出使化数据

57:15.760 --> 57:17.960
这里面有一个隐医的list的

57:17.960 --> 57:18.260
对吧

57:18.260 --> 57:19.660
那我们可以来看一下

57:19.660 --> 57:21.160
是否可行

57:21.160 --> 57:22.960
咱们到这个里面删除以下吗

57:22.960 --> 57:24.360
数据啊

57:24.360 --> 57:25.160
越删越少

57:25.160 --> 57:25.560
对不对

57:25.560 --> 57:27.660
那我们把刘家良给删除吧

57:27.660 --> 57:29.860
这也是一个老演员了

57:29.860 --> 57:30.560
对吧

57:30.560 --> 57:32.760
然后给他进行一个删除

57:32.760 --> 57:33.760
点击确定

57:34.960 --> 57:35.360
ok

57:35.360 --> 57:36.560
现在啊

57:36.560 --> 57:37.660
已经是什么呢

57:37.660 --> 57:39.260
我们删除成功了

57:39.360 --> 57:40.360
删除成功

57:40.360 --> 57:41.960
但是现在有一个问题

57:41.960 --> 57:42.860
是什么呢

57:42.860 --> 57:44.860
我们好像是有一个方法

57:44.860 --> 57:46.460
close dialog

57:46.460 --> 57:47.660
这个方法呢

57:47.660 --> 57:50.160
应该是side show detail dialog

57:50.160 --> 57:51.160
但是这里面

57:51.160 --> 57:52.660
他好像没做事

57:52.660 --> 57:53.560
然后并且呢

57:53.560 --> 57:54.860
我们这里面有一个抱错

57:54.860 --> 57:55.160
对吧

57:55.160 --> 57:56.260
那咱们看一下

57:56.260 --> 57:58.760
message.sugsize

57:58.760 --> 57:59.660
这里面说

57:59.660 --> 58:01.960
他有一个提示错误啊

58:01.960 --> 58:04.260
那提示错误是什么原因呢

58:04.260 --> 58:05.660
我们来丑验啊

58:05.660 --> 58:06.660
这个message

58:06.660 --> 58:08.960
我们从这个安德底下里面

58:08.960 --> 58:09.760
引入的啊

58:09.760 --> 58:10.360
引入的

58:10.360 --> 58:11.360
那就是说明

58:11.360 --> 58:12.660
他这个引入不正确

58:12.660 --> 58:13.660
其实现在

58:13.660 --> 58:14.960
他有给我们抱错

58:14.960 --> 58:16.060
那我们来看一下

58:17.860 --> 58:20.760
呃message.dithpatch

58:20.760 --> 58:21.260
sorry啊

58:21.260 --> 58:23.860
这个应该是从安德底下里面引入

58:23.860 --> 58:24.460
我们呢

58:24.460 --> 58:27.260
但是是从无蜜里面引入了啊

58:27.260 --> 58:28.360
这个怪我了

58:28.360 --> 58:30.760
然后把这个快速修复

58:30.760 --> 58:33.260
给他进用一下这个检查文件

58:33.260 --> 58:33.560
好了

58:33.560 --> 58:35.060
那咱们再来删除一个

58:35.060 --> 58:36.460
其实这个文件

58:36.460 --> 58:38.660
这个刘家良应该被干掉了啊

58:38.760 --> 58:40.360
好的那不管他了

58:40.360 --> 58:42.960
把这个小明给他干掉吧

58:42.960 --> 58:44.160
小明干掉的话

58:44.160 --> 58:45.660
那我们这里面一点击删除

58:45.660 --> 58:46.160
确定吗

58:46.160 --> 58:46.860
我一删除

58:46.860 --> 58:47.660
ok

58:47.660 --> 58:48.960
小明被删除之后

58:48.960 --> 58:49.760
那这个时候呢

58:49.760 --> 58:52.460
我们数据又重新进行了一个请求

58:52.460 --> 58:53.060
那这里面

58:53.060 --> 58:54.460
其实还是有一个问题的

58:54.460 --> 58:55.660
什么问题

58:55.660 --> 58:57.660
比如说我们回到第二页数据

58:57.660 --> 58:58.960
在第二页数据里面

58:58.960 --> 59:01.460
我们想把这个韩非泽

59:01.460 --> 59:02.660
给他进行一个删除

59:02.660 --> 59:04.060
或者是韩刚这一项

59:04.060 --> 59:05.360
给他做一个删除

59:05.360 --> 59:07.160
那假如说你要删除他的话

59:07.160 --> 59:08.360
那这个时候呢

59:08.360 --> 59:09.960
我们去删除数据

59:09.960 --> 59:10.560
这里面啊

59:10.560 --> 59:11.560
会有一个问题

59:11.560 --> 59:13.060
当前你是不是在第二页

59:13.060 --> 59:14.660
对吧

59:14.660 --> 59:15.760
我们删除之后

59:15.760 --> 59:16.560
理论上来讲

59:16.560 --> 59:18.260
应该是返回第一页

59:18.260 --> 59:20.060
那但是现在呢

59:20.060 --> 59:22.960
我们还是在这个第二页展示呢

59:22.960 --> 59:23.860
如为什么

59:23.860 --> 59:25.560
就是说让他回到第一页

59:25.560 --> 59:27.060
其实这里面有两种做法

59:27.060 --> 59:28.960
如果说我们当前这一页

59:28.960 --> 59:30.160
数据不够的话

59:30.160 --> 59:30.660
对吧

59:30.660 --> 59:32.060
那我们要怎么做

59:32.060 --> 59:32.860
数据不够的话

59:32.860 --> 59:34.160
比如说我们这一页

59:34.160 --> 59:36.860
就有这个一条数据

59:36.860 --> 59:37.760
你删除完了之后

59:37.760 --> 59:39.060
那你是不是得回到第一页

59:39.060 --> 59:40.660
那首先我们不如什么呢

59:40.660 --> 59:41.960
删除完了直接的

59:41.960 --> 59:44.460
就让他在第一页进行一个重新展示

59:44.460 --> 59:44.860
也就是说

59:44.860 --> 59:46.960
把那个数据给删除没了就可以了

59:46.960 --> 59:47.660
所以说

59:47.660 --> 59:49.160
那我们做的时候呢

59:49.160 --> 59:50.960
我们直接的在这个里面

59:50.960 --> 59:52.360
因一的stuff lease的

59:52.360 --> 59:54.460
我们去调用这个方法的时候

59:54.460 --> 59:56.060
也就是说这个driver

59:56.060 --> 59:58.260
调用这个因一的stuff lease的

59:58.260 --> 59:59.360
你如果说在

59:59.360 --> 01:00:00.360
不是在第一页

01:00:00.360 --> 01:00:01.560
假如说你在第二页

01:00:01.560 --> 01:00:03.860
那我们就让你跳转回第一页

01:00:03.860 --> 01:00:05.360
是不是有这么一个需求啊

01:00:05.360 --> 01:00:07.260
那怎么来实现这个呢

01:00:07.360 --> 01:00:08.960
这个就需要我们来想一下

01:00:08.960 --> 01:00:10.660
他里面的这个逻辑了啊

01:00:11.760 --> 01:00:13.560
首先其实这个做法呢

01:00:13.560 --> 01:00:14.460
就是说

01:00:14.460 --> 01:00:18.060
我们能不能给他传一个配置

01:00:18.060 --> 01:00:19.860
那比如说我们对这个配置

01:00:19.860 --> 01:00:21.160
如何来经传递

01:00:21.160 --> 01:00:22.860
假如说你现在去删除

01:00:22.860 --> 01:00:24.260
你现在去删除的话

01:00:24.260 --> 01:00:26.860
那我就把这个配置给你改成一

01:00:26.860 --> 01:00:28.160
那怎么来改成一

01:00:28.160 --> 01:00:29.860
我们这里面因一的stuff lease的

01:00:29.860 --> 01:00:31.160
我们是不是直接调用

01:00:31.160 --> 01:00:33.060
那这里面我们写一个函数

01:00:33.060 --> 01:00:34.560
写一个函数

01:00:34.560 --> 01:00:37.160
如果说我去因一的stuff lease的

01:00:37.160 --> 01:00:39.160
如果说做这件事之前呢

01:00:39.160 --> 01:00:40.660
我们先做一件事

01:00:40.660 --> 01:00:41.560
是什么事呢

01:00:41.560 --> 01:00:43.160
我们把这个set page

01:00:43.160 --> 01:00:45.360
也就是说这一个配置啊

01:00:45.360 --> 01:00:47.560
给他变成一之后

01:00:47.560 --> 01:00:49.860
我们来看一下是否可行

01:00:49.860 --> 01:00:50.860
咱们的数据呢

01:00:50.860 --> 01:00:52.060
现在有点少了

01:00:52.060 --> 01:00:52.560
怎么办呢

01:00:52.560 --> 01:00:54.060
我这里面给他调一下

01:00:54.060 --> 01:00:57.160
每页展示的长度为3就ok了

01:00:57.160 --> 01:00:59.260
也就是说每页给我返回三条数据

01:00:59.260 --> 01:01:00.660
那咱们来试一下

01:01:00.660 --> 01:01:01.360
到这个里面

01:01:01.360 --> 01:01:02.360
我们刷清一下

01:01:02.360 --> 01:01:03.360
刷清一下之后

01:01:03.360 --> 01:01:04.460
你看一下

01:01:04.460 --> 01:01:05.560
每页展示3

01:01:05.560 --> 01:01:07.860
然后一共是五条数据啊

01:01:07.860 --> 01:01:09.360
比如说五页数据啊

01:01:09.360 --> 01:01:10.660
在五页数据里面

01:01:10.660 --> 01:01:12.660
那假如说我进行一个删除的时候

01:01:12.660 --> 01:01:16.360
咱们来看一下ok是否ok啊

01:01:16.360 --> 01:01:18.860
看如果说我在这个陆佳凉

01:01:18.860 --> 01:01:21.160
把它给进行一个删除

01:01:21.160 --> 01:01:23.560
那这里面我们点击删除之后

01:01:23.560 --> 01:01:24.560
那理论上来讲

01:01:24.560 --> 01:01:26.160
我是想让他回到第一页展示

01:01:26.160 --> 01:01:26.760
对吧

01:01:26.760 --> 01:01:28.960
那这个时候你会发现啊

01:01:28.960 --> 01:01:30.360
我们这显示的时候

01:01:30.360 --> 01:01:32.060
是回到第一页了

01:01:32.060 --> 01:01:32.860
然后但是呢

01:01:32.860 --> 01:01:34.360
我们去传递数据的时候

01:01:34.360 --> 01:01:36.660
你会发现有一个问题是什么呢

01:01:36.660 --> 01:01:39.360
我们这个配置传递的还是我们

01:01:39.360 --> 01:01:40.860
那这是啥原因啊

01:01:40.860 --> 01:01:41.860
我们想一下

01:01:41.860 --> 01:01:43.760
这个you的state

01:01:43.760 --> 01:01:44.760
you的state呢

01:01:44.760 --> 01:01:46.860
如果说我们去做操作的时候

01:01:46.860 --> 01:01:48.860
我在这个里面set配置了

01:01:48.860 --> 01:01:50.260
set配置给它变成一

01:01:50.260 --> 01:01:51.460
ok这没问题啊

01:01:51.460 --> 01:01:53.960
马上我就去因一的stuff list

01:01:53.960 --> 01:01:55.660
也就是说去做这个事了

01:01:55.660 --> 01:01:57.660
做这个的事的时候

01:01:57.660 --> 01:02:00.060
那其实这个呢是同步来做的

01:02:00.060 --> 01:02:02.060
同步来做我们carn的配置

01:02:02.060 --> 01:02:02.860
等于配置

01:02:02.860 --> 01:02:04.760
此时你去找了一个配置

01:02:04.760 --> 01:02:07.360
它还没有处发界面的第二次渲染

01:02:07.360 --> 01:02:09.460
也就是说组件没有进行二次渲染

01:02:09.460 --> 01:02:10.660
那没有进行二次渲染

01:02:10.660 --> 01:02:13.460
你获取到的是上一次的结果值

01:02:13.460 --> 01:02:16.860
那为什么我们这个里面会发生更改

01:02:16.860 --> 01:02:18.760
那这个里面发生更改的原因呢

01:02:18.760 --> 01:02:21.260
是由于我这个set配置之后

01:02:21.260 --> 01:02:23.860
然后并且处发了因一的stuff list

01:02:23.860 --> 01:02:26.060
因一的stuff list是同步执行的

01:02:26.060 --> 01:02:28.960
但是我们set配置处发界面二次渲染之后

01:02:28.960 --> 01:02:31.360
它又从前进行了一次复制操作

01:02:31.360 --> 01:02:33.960
那这个时候我们table header展示的

01:02:33.960 --> 01:02:35.660
就是准确的一个值

01:02:35.660 --> 01:02:37.560
但是我们传递的这个部队

01:02:37.560 --> 01:02:38.960
所以说那这个时候

01:02:38.960 --> 01:02:42.360
我们要制造出来一种同步的这种概念

01:02:42.360 --> 01:02:43.460
那怎么来做呢

01:02:43.460 --> 01:02:45.360
我们就不可能使用这种

01:02:45.360 --> 01:02:47.160
由的stay的这种形式

01:02:47.160 --> 01:02:48.660
那如果说做同步的

01:02:48.660 --> 01:02:51.760
hooks给我们提供了一种优质ref

01:02:51.760 --> 01:02:57.660
优质ref可以保存我们上一次的一个结果值

01:02:57.660 --> 01:02:58.860
那我们去渲染的时候

01:02:58.860 --> 01:03:01.560
其实只有使用上一次的渲染结果

01:03:01.560 --> 01:03:02.660
是不是就可以了

01:03:02.660 --> 01:03:04.160
那定义优的ref

01:03:04.160 --> 01:03:06.360
我们也就是说我们这个配置和set配置

01:03:06.360 --> 01:03:08.360
不在这里面做了

01:03:08.360 --> 01:03:10.560
我们创建一个优的ref来做

01:03:10.560 --> 01:03:12.560
但是呢好多界面里面

01:03:12.560 --> 01:03:14.460
都会有这种分页的需求对不对

01:03:14.460 --> 01:03:17.360
那我们这里面可以创建一个自己的hook

01:03:17.360 --> 01:03:18.860
专门来做这件事

01:03:18.860 --> 01:03:22.860
src下面我们就定一个hook

01:03:22.860 --> 01:03:23.860
hook文件

01:03:23.860 --> 01:03:24.960
那这个hook文件呢

01:03:24.960 --> 01:03:27.460
我们自己使用自定义的一个hook

01:03:27.460 --> 01:03:28.860
那自定义的hook

01:03:28.860 --> 01:03:31.460
我们这个里面要使用优质开头

01:03:31.460 --> 01:03:32.260
那我们就写一个

01:03:32.260 --> 01:03:34.760
优质calmen.jsx

01:03:34.760 --> 01:03:36.360
然后呢在这个里面

01:03:36.360 --> 01:03:38.260
做自定义hook的处理

01:03:38.260 --> 01:03:39.960
把它呢在这个里面

01:03:39.960 --> 01:03:41.260
输出一个配置

01:03:41.260 --> 01:03:44.660
跟我们来进行一个使用就ok了

01:03:44.660 --> 01:03:45.860
那我们定一下

01:03:47.060 --> 01:03:48.260
使用快捷键

01:03:48.260 --> 01:03:49.260
优质calmen

01:03:49.260 --> 01:03:50.660
那这里面输出什么

01:03:50.660 --> 01:03:51.460
我在这个里面

01:03:51.460 --> 01:03:54.360
其实使用这种ref的形式

01:03:54.360 --> 01:03:56.260
那我这里面canc的配置

01:03:57.660 --> 01:03:58.860
先创建一下吧

01:03:58.860 --> 01:03:59.960
canc的配置

01:03:59.960 --> 01:04:01.360
等于我们的一个什么

01:04:01.360 --> 01:04:02.860
uze ief

01:04:02.860 --> 01:04:05.360
那他既然能保存缓存的记录值

01:04:05.360 --> 01:04:05.660
对不对

01:04:05.660 --> 01:04:07.860
那我出手话的时候给他一个e

01:04:07.860 --> 01:04:08.260
这样呢

01:04:08.260 --> 01:04:09.060
我定义完了

01:04:09.060 --> 01:04:09.860
定义完了之后

01:04:09.860 --> 01:04:10.860
这个uze ief

01:04:10.860 --> 01:04:12.560
呢我们得做一下使用

01:04:12.560 --> 01:04:14.460
从react里面给他导出来

01:04:14.460 --> 01:04:15.160
导出来之后

01:04:15.160 --> 01:04:15.960
这是第一步

01:04:15.960 --> 01:04:17.560
然后我再定一个方法

01:04:17.560 --> 01:04:18.360
这个方法呢

01:04:18.360 --> 01:04:20.960
就是专门做setpages

01:04:20.960 --> 01:04:23.760
那我这里面canc的setpages

01:04:23.760 --> 01:04:25.860
等于我们的一个什么

01:04:25.860 --> 01:04:27.360
carrant配置

01:04:27.360 --> 01:04:27.860
然后呢

01:04:27.860 --> 01:04:29.860
这是传递进来的一个参数

01:04:29.860 --> 01:04:31.660
我们这里面配置点

01:04:31.660 --> 01:04:32.460
咱们知道

01:04:32.460 --> 01:04:34.360
uze ief里面是不是有一个carrant

01:04:34.360 --> 01:04:34.860
对不对

01:04:34.860 --> 01:04:36.860
他不光能获取到我们这个节点

01:04:36.860 --> 01:04:38.860
其实还可以保存缓存信息

01:04:38.860 --> 01:04:42.060
那我直接这里面配置点carrant

01:04:42.060 --> 01:04:43.660
等于一个carrant配置

01:04:43.660 --> 01:04:44.160
最后呢

01:04:44.160 --> 01:04:46.860
我把这个配置给做一个输出

01:04:46.860 --> 01:04:48.860
那这样setpages就有返回值了

01:04:48.860 --> 01:04:49.360
对吧

01:04:49.360 --> 01:04:50.460
有返回值之后

01:04:50.460 --> 01:04:51.260
那我们这里面

01:04:51.260 --> 01:04:52.560
最后reten的时候

01:04:52.560 --> 01:04:53.960
咱也不reten这个div

01:04:53.960 --> 01:04:55.060
没任何意义

01:04:55.060 --> 01:04:56.060
我们reten一个什么

01:04:56.160 --> 01:04:56.860
数组

01:04:56.860 --> 01:04:59.960
数组分别是配置和setpages

01:04:59.960 --> 01:05:02.760
我为什么要reten出来一个配置

01:05:02.760 --> 01:05:04.160
那这个reten这个配置

01:05:04.160 --> 01:05:07.260
就是保证我们的一个setpages

01:05:07.260 --> 01:05:08.860
有返回值

01:05:08.860 --> 01:05:13.660
保证setpages有返回值

01:05:13.660 --> 01:05:14.760
然后这个返回值呢

01:05:14.760 --> 01:05:16.460
并且为什么

01:05:16.460 --> 01:05:17.960
tru

01:05:17.960 --> 01:05:19.360
就做这么一个操作

01:05:19.360 --> 01:05:20.560
那你说你这样的为tru

01:05:20.560 --> 01:05:21.860
你要干嘛用啊

01:05:21.860 --> 01:05:23.660
其实我们这个写法啊

01:05:23.660 --> 01:05:25.460
没有必要是setpages

01:05:25.460 --> 01:05:28.760
然后直接的去再调一个因因的stuff

01:05:28.760 --> 01:05:29.560
因为我们这里面

01:05:29.560 --> 01:05:32.360
直接就想写这种简写的方式

01:05:32.360 --> 01:05:32.960
对吧

01:05:32.960 --> 01:05:34.460
那我们就是reloaded

01:05:34.460 --> 01:05:37.160
reloaded

01:05:37.160 --> 01:05:38.960
等于我们一个

01:05:39.660 --> 01:05:40.360
扩hard

01:05:40.360 --> 01:05:42.160
然后这里面是一个函数

01:05:42.160 --> 01:05:42.660
函数呢

01:05:42.660 --> 01:05:43.960
就是setpages

01:05:43.960 --> 01:05:45.160
setpages一

01:05:45.160 --> 01:05:45.960
它有返回值

01:05:45.960 --> 01:05:46.460
对不对

01:05:46.460 --> 01:05:47.360
有返回值

01:05:47.360 --> 01:05:49.460
那这个时候前面条件为tru

01:05:49.460 --> 01:05:51.960
那它就可以执行因因它stuff

01:05:51.960 --> 01:05:52.660
例子的

01:05:52.660 --> 01:05:54.960
那并且setpages是改变了

01:05:54.960 --> 01:05:56.360
setpages的一个属性指示

01:05:56.360 --> 01:05:56.760
这个呢

01:05:56.760 --> 01:05:58.160
我们要知道一下啊

01:05:58.160 --> 01:05:59.360
当它这些都做完之后

01:05:59.360 --> 01:06:01.460
那我们直接的就给它干掉了

01:06:01.460 --> 01:06:02.060
对吧

01:06:02.060 --> 01:06:02.560
然后呢

01:06:02.560 --> 01:06:04.760
我们就可以在这个里面setpages

01:06:04.760 --> 01:06:06.160
并且因因的stuff

01:06:06.160 --> 01:06:07.160
例子的了

01:06:07.160 --> 01:06:07.860
setpages

01:06:07.860 --> 01:06:09.360
我们在这个里面做的时候

01:06:09.360 --> 01:06:11.760
那现在咱就不需要使用它了

01:06:11.760 --> 01:06:13.260
我们直接的啊

01:06:13.260 --> 01:06:15.160
给它做一个导出啊

01:06:15.160 --> 01:06:15.960
input

01:06:15.960 --> 01:06:17.660
那我们直接的使用什么

01:06:17.660 --> 01:06:18.960
我们这个 use the common

01:06:18.960 --> 01:06:21.060
里面来做它的一个输出

01:06:21.060 --> 01:06:22.060
是不是就可以了

01:06:22.060 --> 01:06:22.660
那也就是说

01:06:22.660 --> 01:06:23.660
我们从这个里面

01:06:23.660 --> 01:06:24.860
给它进行一个

01:06:25.760 --> 01:06:26.660
导出操作

01:06:27.960 --> 01:06:28.460
啊

01:06:28.460 --> 01:06:29.560
咱们来做一下

01:06:29.560 --> 01:06:32.360
这个叫 use the common

01:06:32.860 --> 01:06:33.160
哎

01:06:33.160 --> 01:06:33.960
直接出来了

01:06:33.960 --> 01:06:35.260
不让我们点点刚好后卡啊

01:06:35.260 --> 01:06:35.660
不错

01:06:35.660 --> 01:06:36.660
干得漂亮

01:06:36.660 --> 01:06:37.260
然后呢

01:06:37.260 --> 01:06:38.560
咱们在这个里面

01:06:38.560 --> 01:06:39.460
const它

01:06:40.160 --> 01:06:43.160
结构出来一个配置和一个setpages

01:06:43.160 --> 01:06:44.260
等于我们的

01:06:45.360 --> 01:06:46.560
use the common

01:06:46.560 --> 01:06:48.060
我们给它做一个调用

01:06:48.060 --> 01:06:49.060
是不是就可以了

01:06:49.060 --> 01:06:51.160
use the common

01:06:51.160 --> 01:06:52.060
然后 use the common

01:06:52.060 --> 01:06:52.960
出指化的时候

01:06:52.960 --> 01:06:54.660
咱们这个结构出来配置啊

01:06:55.760 --> 01:06:56.760
因为我出指化的时候

01:06:56.760 --> 01:06:57.560
已经给它复制了

01:06:57.560 --> 01:06:58.060
对不对

01:06:58.060 --> 01:06:59.560
所以说我们 use the common的时候

01:06:59.560 --> 01:07:01.060
不需要给它进行一个

01:07:01.060 --> 01:07:02.260
默认值传递了

01:07:02.260 --> 01:07:03.160
等只要一调用

01:07:03.160 --> 01:07:04.660
它这个里面就有一个默认值

01:07:04.660 --> 01:07:06.360
默认值为一啊

01:07:06.360 --> 01:07:08.560
然后我们这个传递的时候

01:07:08.560 --> 01:07:09.560
那我们一次的来

01:07:09.560 --> 01:07:10.760
先看一下啊

01:07:10.760 --> 01:07:12.160
这个里面应该有包错啊

01:07:12.160 --> 01:07:13.560
包错原因市场啊

01:07:13.560 --> 01:07:14.560
哎没包错对吧

01:07:14.560 --> 01:07:15.760
那我们看一下

01:07:15.760 --> 01:07:17.560
get a stop list的payload

01:07:17.560 --> 01:07:18.760
payload里面

01:07:18.760 --> 01:07:20.860
这里面我们传递的一个什么呢

01:07:20.860 --> 01:07:21.560
配置

01:07:21.560 --> 01:07:22.660
这里面传递的不对

01:07:22.660 --> 01:07:25.160
叫 current 意义对不对

01:07:25.160 --> 01:07:27.260
因为我们这个是use the ref 对象

01:07:27.260 --> 01:07:29.160
所以说我们在传递的时候

01:07:30.360 --> 01:07:30.760
这个呢

01:07:30.760 --> 01:07:32.260
我们也不要了啊

01:07:32.260 --> 01:07:33.060
这个默认值

01:07:33.060 --> 01:07:34.160
咱就给它干掉

01:07:34.160 --> 01:07:34.660
一直呢

01:07:34.660 --> 01:07:36.660
就操作这个配置就可以了

01:07:36.660 --> 01:07:38.860
我们传递就是配置点 current

01:07:41.260 --> 01:07:45.060
那配置点 current 定义好了之后

01:07:45.060 --> 01:07:45.460
哎

01:07:45.460 --> 01:07:47.360
c o r e n t

01:07:47.360 --> 01:07:49.460
配置点 current

01:07:49.460 --> 01:07:50.360
ok 没问题啊

01:07:51.760 --> 01:07:52.060
好的

01:07:52.060 --> 01:07:55.060
现在这个里面应该是有这个 current 值的

01:07:55.060 --> 01:07:55.760
我们看一下

01:07:55.760 --> 01:07:56.460
这时候呢

01:07:56.460 --> 01:07:58.960
我们出手画的请求配置一 set 3

01:07:58.960 --> 01:08:00.260
这没啥问题对不对

01:08:00.260 --> 01:08:02.360
然后咱们继续来啊

01:08:02.360 --> 01:08:03.360
我们在这个里面

01:08:03.360 --> 01:08:05.860
set page 是 current page

01:08:05.860 --> 01:08:07.160
这个也没什么问题

01:08:07.160 --> 01:08:09.260
那这个set page 一调用的时候

01:08:09.260 --> 01:08:10.460
是不是左右的 call 们

01:08:10.460 --> 01:08:11.860
我们自定义的这个 hook

01:08:11.860 --> 01:08:13.660
里面有set page 方法啊

01:08:13.660 --> 01:08:14.560
set page 方法

01:08:14.560 --> 01:08:16.260
他接收一个 current page

01:08:16.260 --> 01:08:18.160
把这个 page 点 current 复制

01:08:18.160 --> 01:08:19.660
复制为我们上一测

01:08:19.660 --> 01:08:21.560
也就是说要更改之前的

01:08:21.660 --> 01:08:23.260
这么一个缓存结果值

01:08:23.260 --> 01:08:23.660
之后呢

01:08:23.660 --> 01:08:25.660
把这个 page 转移出去啊

01:08:25.660 --> 01:08:26.360
那这个时候

01:08:26.360 --> 01:08:27.660
他就会把这个

01:08:27.660 --> 01:08:29.560
当前的这个 page 给做一个更改

01:08:29.560 --> 01:08:30.260
对不对

01:08:30.260 --> 01:08:31.460
然后set page

01:08:31.460 --> 01:08:33.860
因意的 current page

01:08:33.860 --> 01:08:35.860
那这个其实我们直接的

01:08:35.860 --> 01:08:37.260
你做完set page 之后

01:08:37.260 --> 01:08:39.960
我们直接都可以把这个 current page

01:08:39.960 --> 01:08:41.660
给你进行一个传递

01:08:41.660 --> 01:08:42.360
是不是就可以了

01:08:42.360 --> 01:08:44.060
也就是说当前的这个 page

01:08:44.060 --> 01:08:45.060
给他做一个传递

01:08:45.060 --> 01:08:46.060
这都无所谓的事啊

01:08:47.260 --> 01:08:47.760
然后呢

01:08:47.760 --> 01:08:49.060
这个table header

01:08:49.060 --> 01:08:50.460
现在这个渲染啊

01:08:50.460 --> 01:08:51.460
是 object 了

01:08:51.460 --> 01:08:52.360
这个也不太对啊

01:08:52.360 --> 01:08:53.960
我们直接把他给调整一下

01:08:53.960 --> 01:08:56.360
page 点 current

01:08:56.360 --> 01:08:57.760
把他来给定一下

01:08:57.760 --> 01:08:58.860
使用 page current

01:08:58.860 --> 01:09:00.660
哎这个爆红太讨厌了

01:09:00.660 --> 01:09:02.660
我们快速修复了一下啊

01:09:02.660 --> 01:09:04.160
把这个给他处理一下

01:09:04.160 --> 01:09:06.060
进行用此类型检查文件

01:09:06.060 --> 01:09:06.260
好了

01:09:06.260 --> 01:09:07.960
那这个处理完成之后

01:09:07.960 --> 01:09:09.360
咱们再往下走啊

01:09:09.360 --> 01:09:10.160
走到什么时候呢

01:09:10.160 --> 01:09:11.760
我们这里面set page

01:09:11.760 --> 01:09:12.560
那这个时候

01:09:12.560 --> 01:09:15.160
我强行的将 page 修改为一

01:09:15.160 --> 01:09:16.160
那修改为一之后

01:09:16.160 --> 01:09:18.560
马上去触发我们这个

01:09:18.560 --> 01:09:20.360
因意的 set of list

01:09:20.360 --> 01:09:22.560
那当我们已经把这个

01:09:22.560 --> 01:09:24.160
page 给他修改完成之后

01:09:24.160 --> 01:09:25.160
那这个时候

01:09:25.160 --> 01:09:26.660
他再去触发这个

01:09:26.660 --> 01:09:28.160
page 的 current 的时候

01:09:28.160 --> 01:09:28.960
其实这个呢

01:09:28.960 --> 01:09:30.260
已经做了修改了

01:09:30.260 --> 01:09:31.060
我们来做一下

01:09:31.060 --> 01:09:32.060
看一下是否可行

01:09:33.360 --> 01:09:34.760
定一下我们刷新

01:09:35.560 --> 01:09:36.860
刷新一下之后

01:09:36.860 --> 01:09:37.560
到这个里面

01:09:37.560 --> 01:09:39.260
我们点击第二页

01:09:39.260 --> 01:09:40.060
第三页

01:09:40.060 --> 01:09:40.960
第四页

01:09:40.960 --> 01:09:41.660
第五页

01:09:41.660 --> 01:09:42.760
是不是感觉没问题啊

01:09:42.760 --> 01:09:43.760
我们把第五页

01:09:43.760 --> 01:09:44.960
别删第五页数据啊

01:09:44.960 --> 01:09:46.160
为什么不删第五页

01:09:46.160 --> 01:09:47.260
第五页是管理员啊

01:09:47.260 --> 01:09:48.660
删了就尴尬了啊

01:09:48.660 --> 01:09:50.460
我们把韩妃子干掉啊

01:09:50.460 --> 01:09:51.060
这个呢

01:09:51.060 --> 01:09:51.960
给他干掉

01:09:51.960 --> 01:09:53.160
或者把小桃器干掉

01:09:53.160 --> 01:09:54.660
小桃器没有图片啊

01:09:54.660 --> 01:09:56.660
然后我们删除他点击

01:09:56.660 --> 01:09:58.160
那现在我们需要实现的

01:09:58.160 --> 01:09:59.360
这个效果是什么呢

01:09:59.360 --> 01:10:00.660
当我删除他之后

01:10:00.660 --> 01:10:02.360
那你要给我返回第一页

01:10:02.360 --> 01:10:03.460
并且呢进行这个

01:10:03.460 --> 01:10:05.060
重新数据的一个渲染啊

01:10:05.060 --> 01:10:06.560
我们来看一下是否可行

01:10:06.560 --> 01:10:08.260
现在我们又传递该的 staff

01:10:08.260 --> 01:10:10.060
那此时陪漏的变成了一

01:10:10.060 --> 01:10:11.160
是不是变成了一

01:10:11.160 --> 01:10:13.160
那这样就不至于造成混乱啊

01:10:13.160 --> 01:10:14.560
如果说你不想这样做

01:10:14.560 --> 01:10:15.560
也可以

01:10:15.560 --> 01:10:16.460
怎么办呢

01:10:16.460 --> 01:10:19.860
我们在比如说最后一页删除的时候

01:10:19.860 --> 01:10:21.560
那你这个里面就要做一件事

01:10:21.560 --> 01:10:22.260
是什么事呢

01:10:22.260 --> 01:10:24.660
当你这一页只剩一条数据的时候

01:10:24.660 --> 01:10:26.760
那你要往回减一操作啊

01:10:26.760 --> 01:10:29.460
也就是说你这些数据长度只有一页

01:10:29.460 --> 01:10:30.160
那怎么办

01:10:30.160 --> 01:10:31.560
你要给他做一个减一

01:10:31.560 --> 01:10:32.860
让他往回反一页

01:10:32.860 --> 01:10:33.260
但是呢

01:10:33.260 --> 01:10:35.160
我跟人觉得两种方式都可以

01:10:35.160 --> 01:10:37.260
那我这种就使用了一个什么

01:10:37.260 --> 01:10:41.960
使用了直接的跳回第一页的这种操作啊

01:10:41.960 --> 01:10:42.260
好的

01:10:42.260 --> 01:10:43.560
咱们来看一下

01:10:43.560 --> 01:10:45.160
头部还有哪些内容

01:10:45.160 --> 01:10:45.860
以上呢

01:10:45.860 --> 01:10:48.460
就是我们这些头部的一个渲染

01:10:48.460 --> 01:10:48.860
对不对

01:10:48.860 --> 01:10:51.760
删除跟关闭按钮的一个实现

01:10:51.760 --> 01:10:52.360
那这些呢

01:10:52.360 --> 01:10:55.060
就是我们头部内容的一个创建啊

01:10:55.060 --> 01:10:57.260
那接下来我们就要做什么呢

01:10:57.260 --> 01:10:59.660
接下来我们其实就是要把这个表单

01:10:59.660 --> 01:11:01.760
来进行一个处理了啊

01:11:01.760 --> 01:11:02.960
那对表单的处理呢

01:11:02.960 --> 01:11:04.260
其实他的这个内容

01:11:04.260 --> 01:11:05.860
包括工作量是比较大的

01:11:05.860 --> 01:11:06.860
那我们呢

01:11:06.860 --> 01:11:07.660
本节课啊

01:11:07.660 --> 01:11:09.960
就先把头部的内容给制作完成

01:11:09.960 --> 01:11:10.560
下节课呢

01:11:10.560 --> 01:11:12.160
我们来实现一下

01:11:12.160 --> 01:11:14.460
我们详情表单的制作

01:11:14.560 --> 01:11:15.760
我们这几个就到这里

01:11:15.760 --> 01:11:16.360
谢谢大家

