WEBVTT

00:00.000 --> 00:04.860
各位同学大家好 这节课我们继续用户登陆模块的一个制作

00:04.860 --> 00:12.040
那么通过上节课的一个学习 我们已经把接口的请求这样一个处理

00:12.040 --> 00:14.080
已经做了一个封装

00:14.080 --> 00:18.940
那么接下来呢 我们就依托这个请求接口API

00:18.940 --> 00:22.280
来实现一下获取数据的这么一个功能

00:22.280 --> 00:23.300
怎么来做

00:23.300 --> 00:29.960
那首先呢 我们先跟同学们说一下 由于本节课我使用的又转化回我们的麦克电脑

00:29.960 --> 00:32.780
那上节课之前呢 我使用的是温导啊

00:32.780 --> 00:36.100
如果说麦克电脑 我们使用这种可置化数据怎么办呢

00:36.100 --> 00:41.740
我们可以通过这个网址进行一个下载 下载之后呢就是这样子的啊

00:41.740 --> 00:46.600
它呢使用其实和我们温导下面的死刘刘3D啊是非常相似的

00:46.600 --> 00:52.480
也是有几种界面来进行一个切换 比如说我们使用这种表格的形式

00:52.480 --> 00:56.080
或者是呢使用节省的形式进行展示都是可以的

00:56.140 --> 01:02.700
这个呢 我们可以自行下载啊 不管你是用哪一种啊 这里面呢都需要设计到你引入文件

01:02.700 --> 01:06.860
比如说我这里面引入了一个youters对不对 或者是我再可以创建啊

01:06.860 --> 01:10.620
比如说这里面 引炮的fail 引炮的fail select

01:10.620 --> 01:13.860
那slag的这个呢是我提前给同学们准备好的

01:13.860 --> 01:18.780
比如叫staff department 我们把department的引入进去啊 打开

01:18.780 --> 01:22.660
open 那这个时候呢 就会有这个相应的数据了

01:22.680 --> 01:26.120
在这个里面有了之后 我们直接的在这个里面input

01:26.120 --> 01:29.360
哎sorry啊 这个里面有一个问题啊 是什么问题呢

01:29.360 --> 01:33.840
我没有创建department的数据表 而是直接把它给引入到这个里面了

01:33.840 --> 01:37.720
这个呢 显然不行啊 首先呢 我们这个要引入的话得这么办

01:37.720 --> 01:41.800
得在这个里面创建一个department

01:41.800 --> 01:46.800
ok 创建完了之后 那我直接的在这个里面create

01:46.800 --> 01:51.240
创建好了之后department 那这时候呢 就可以进行一个引入了

01:52.220 --> 01:55.540
这是比较方便的 然后呢 我slag的fail

01:55.540 --> 02:00.740
这里面我选择department ok 找到它之后open 打开

02:00.740 --> 02:04.580
然后这里面input一个导入操作就可以了

02:04.580 --> 02:07.220
然后刚才这个呢 肯定是错掉了对吧

02:07.220 --> 02:12.180
那错掉了怎么办呢 我们这里面可以给它一个删除叫drop collection

02:12.180 --> 02:16.020
然后这个呢 我写一个youters啊 这个让你确认一下

02:16.020 --> 02:19.340
好了删除之后呢 我重新创建一下 把这个

02:19.340 --> 02:23.880
youters给它进行一个定义啊create collections

02:23.880 --> 02:28.520
然后呢 我在这个里面要youters 回到youters之后

02:28.520 --> 02:31.560
给它进行数据的一个填充

02:31.560 --> 02:35.020
也就是说把一些集合 提前准备好的 给它添加进去

02:35.020 --> 02:35.960
在这里面open

02:38.020 --> 02:41.480
好了 之后给它input 那这个时候呢 它就回来了啊

02:41.480 --> 02:45.520
没问题 没问题之后呢 我这里面可以进行一个查看

02:45.520 --> 02:48.840
包括department的这个里面是都有了

02:48.840 --> 02:50.900
然后这是第一步 我们在使用的时候

02:50.900 --> 02:53.980
其实如果说你一开始没有这个数据库怎么办呢

02:53.980 --> 02:57.460
你在这个里面还可以进行一个数据库的创建啊

02:57.460 --> 03:01.180
比如说我们找到这块create一个database啊

03:01.180 --> 03:06.820
那我们找到localhost127.0.1 这里面有四个数据库对吧

03:06.820 --> 03:11.540
然后呢 我们可以在这个基础上进行一个数据库的一个添加操作

03:11.540 --> 03:13.660
也就是说你再创建一个数据库啊

03:13.660 --> 03:20.000
前提是什么呢 我们必须得连接到我们这个本地的mango数据库下面

03:20.000 --> 03:23.320
然后呢 才可以进行相应的这个操作啊

03:23.320 --> 03:27.000
这个呢 我们是要明确一下的 否则你这个是处理不了的

03:27.000 --> 03:31.320
但是如果说同学嘛使用windows的就不需要考虑这个问题了

03:31.320 --> 03:34.280
这个呢 我们是知道一下就ok

03:34.280 --> 03:38.240
好的 回到我们的这个文档里面 我们来说啊

03:38.240 --> 03:41.080
我们这个用户灯灯模块都实现大切功能的

03:41.100 --> 03:46.580
首先第一个啊 我们要根据用户的接魂的收集需要获取的数据

03:46.580 --> 03:51.100
然后呢 后端返回数据成功之后进行首页面的一个跳转

03:51.100 --> 03:52.940
其实基本功能呢 就这两个啊

03:54.180 --> 03:57.780
然后呢 我们这个里面涉及到的接口都拿些

03:57.780 --> 04:00.980
那涉及到的接口啊 其实这两个是一个基本需求

04:00.980 --> 04:03.100
如果说你做帮你密码的话 那这个时候呢

04:03.100 --> 04:06.460
还会有一个重置密码的一个验证码检测

04:06.460 --> 04:10.980
还有一个重置密码的一个新密码设置 这是两个啊

04:10.980 --> 04:15.080
然后还有就是什么呢 我们这个实现基本功能的员工登录

04:15.080 --> 04:20.280
包括获取手机验证码 然后接口文档我们查看的时候还是同样的啊

04:20.280 --> 04:23.320
和我们上几课一样 你打开这个地址啊

04:23.320 --> 04:27.520
在这个里面找到我们指定的模块 这个有点慢啊 稍稍一下

04:28.960 --> 04:32.800
找到模块之后 这些呢 就是我们需要获取的

04:32.800 --> 04:36.480
比如说员工登录 获取手机验证码 重置验证码码

04:36.480 --> 04:42.380
然后重置密码这四个接口 是我们本次依赖的一些相应的接口里偏啊

04:43.500 --> 04:46.900
我们先说啊 用户登录密码 用户登录密码这一块呢

04:46.900 --> 04:51.180
比如说这里面有两个功能 首先第一呢 就是当登录失败的时候

04:51.180 --> 04:54.940
前端显示一个提示信息 那如果说登录成功之后

04:54.940 --> 04:59.660
前端进行一个街边跳转 这个呢 是一个基本的处理啊

04:59.660 --> 05:02.260
然后手机验证码登录的时候 这个呢

05:02.260 --> 05:04.900
就是需要我们输入一个合理的手机号码

05:04.920 --> 05:08.240
进行验证码的一个获取操作 那这个验证获取操作

05:08.240 --> 05:10.800
其实这个时候呢 我们就应该调用一个接口

05:10.800 --> 05:14.880
哪一个接口呢 就是我们获取手机验证码的这样一个接口

05:14.880 --> 05:19.560
当我们手机也就是说移动设备上 获取到这个验证码之后

05:19.560 --> 05:22.920
那我们把这个获取到的验证码进行一个输入

05:22.920 --> 05:27.280
输入之后来进行一个 数据的一个发送

05:27.280 --> 05:30.760
也就是说那这个时候又开始进行用户登录的

05:30.760 --> 05:32.760
这样一个接口请求了

05:32.780 --> 05:36.380
那这个同样的是登录成功之后 前端显示

05:36.380 --> 05:40.740
前端进行界面跳转 如果说你要是失败的话

05:40.740 --> 05:43.980
前端呢 就给你显示一个提示信息就ok了

05:43.980 --> 05:46.140
这个呢 是我们的一个基本需求啊

05:46.140 --> 05:48.620
密码重置这一个啊 咱们可以暂时先不考虑

05:48.620 --> 05:51.140
因为什么呢 我们先把用户登录这部分的

05:51.140 --> 05:54.260
统一的逻辑处理完了之后 密码重置这一个啊

05:54.260 --> 05:56.260
因为它界面咱们也没做呢 是不是

05:56.260 --> 06:00.540
这个界面呢 特别类似于我们的这个登录

06:00.560 --> 06:03.560
界面 所以说呢 我们可以快速的实现一个啊

06:03.560 --> 06:05.560
然后这个咱们先不考虑啊

06:05.560 --> 06:08.120
那这里面还会有一个问题 就是什么呢

06:08.120 --> 06:10.920
定义一个用户的状态管理

06:10.920 --> 06:13.640
为什么要定义用户的状态管理

06:13.640 --> 06:16.440
这里面有一个实际的场景

06:16.440 --> 06:18.280
我可以给同学们看一下

06:18.280 --> 06:21.840
比如说在这个里面 这个呢 是我们已经完成了

06:21.840 --> 06:24.440
我在这里面 IDEMAN123QWE

06:24.440 --> 06:26.720
当我登录之后 那这个时候

06:27.580 --> 06:30.420
Sorry啊 我们之前有了一个密码的修改

06:30.420 --> 06:32.620
123456 咱们来试一下

06:32.620 --> 06:35.860
IDEMAN OK 那现在是登录成功了

06:35.860 --> 06:38.780
当如果说我登录成功之后

06:38.780 --> 06:40.700
那回到这个界面里面啊

06:40.700 --> 06:43.100
登录成功 那现在就会涉及到一个问题

06:43.100 --> 06:45.100
什么问题呢 刚才当选们看到

06:45.100 --> 06:46.940
是不是有一个loading的效果

06:46.940 --> 06:48.260
也就是说我登录完成之后

06:48.260 --> 06:52.220
IDEMAN123456 这样 OK

06:52.220 --> 06:54.420
我登录成功之后

06:54.420 --> 06:55.700
是不是有loading 对吧

06:55.720 --> 06:56.760
那这个loading怎么做

06:56.760 --> 06:59.920
你说我们可以对这个每一个界面啊

06:59.920 --> 07:02.080
在请求的时候 给它添加一个loading

07:02.080 --> 07:03.200
然后请求完成之后

07:03.200 --> 07:04.960
可以给它进行一个

07:04.960 --> 07:06.520
收到获取正确显示之后

07:06.520 --> 07:07.880
给它进行一个隐藏

07:07.880 --> 07:09.080
这是一种做法

07:09.080 --> 07:11.480
但是呢 我们既然使用了DIWA

07:11.480 --> 07:15.800
DIWA里面内置了loading的State状态管理

07:15.800 --> 07:18.040
也就是说每一个接口请求的loading

07:18.040 --> 07:19.120
它都可以来实现

07:19.120 --> 07:20.120
这是第一个

07:20.120 --> 07:22.320
第二个呢 我们为什么要用状态管理

07:22.320 --> 07:25.440
因为我们知道用户模块的内容信息

07:25.440 --> 07:27.980
那它是一个独立的layout模板

07:27.980 --> 07:28.540
而且呢

07:28.540 --> 07:31.020
它是一个独立的路由来进行一个处理的

07:31.020 --> 07:31.620
对不对

07:31.620 --> 07:33.500
当我登录完成之后

07:33.500 --> 07:36.260
IDEMAN123这里面再改一下

07:36.260 --> 07:37.420
123456

07:37.420 --> 07:39.300
当我进行登录成功之后

07:39.300 --> 07:40.100
那这个时候呢

07:40.100 --> 07:41.900
会有一个用户信息

07:41.900 --> 07:42.980
那这个用户信息

07:42.980 --> 07:46.380
其实不是在我们的这个登录界面展示了

07:46.380 --> 07:49.220
而是在我们首页面里面进行展示

07:49.220 --> 07:51.060
那首页面里面进行展示呢

07:51.060 --> 07:52.340
由于我们登录的时候

07:52.340 --> 07:54.460
就已经携带了一些信息返回

07:54.520 --> 07:55.960
所以说在这个里面呢

07:55.960 --> 07:59.760
我们就可以把这个用户信息存储在一个状态里面

07:59.760 --> 08:01.280
那状态里面存储之后

08:01.280 --> 08:02.200
这个时候呢

08:02.200 --> 08:03.440
我们在当前

08:03.440 --> 08:05.560
比如说这个HIDER组件下面

08:05.560 --> 08:08.680
我们就可以获取到这个状态的一个值

08:08.680 --> 08:09.240
那这个呢

08:09.240 --> 08:10.360
基于上两点

08:10.360 --> 08:13.720
就是我们使用Diva的一个原因

08:13.720 --> 08:14.440
还有一个啊

08:14.440 --> 08:15.480
就是一个什么呢

08:15.480 --> 08:16.600
我们使用状态管理

08:16.600 --> 08:20.280
让我们的数据流儿看起来更加清晰和直观

08:20.280 --> 08:22.120
也就是说我们每一步的操作

08:22.120 --> 08:24.440
如果说数据流儿统一保存在

08:24.500 --> 08:25.260
死到里面

08:25.260 --> 08:25.860
那这样呢

08:25.860 --> 08:27.780
看着是比较清晰的啊

08:27.780 --> 08:28.020
好的

08:28.020 --> 08:28.940
那么接下来呢

08:28.940 --> 08:32.940
我们就一步一步的用代码的形式来给他完成一下

08:32.940 --> 08:33.820
在完成之前呢

08:33.820 --> 08:35.460
我们有必要要知道一下

08:35.460 --> 08:37.300
我们的流畅是什么样的

08:37.300 --> 08:38.060
首先第一呢

08:38.060 --> 08:41.180
我们是要把用户的这个信息给做一个收集

08:41.180 --> 08:42.340
但收集的前提呢

08:42.340 --> 08:45.300
是对信息内容进行一个验证处理

08:45.300 --> 08:46.980
如果说我收集已经完成之后

08:46.980 --> 08:49.060
这个时候就可以准备好信息

08:49.060 --> 08:50.580
发送后端服务器

08:50.580 --> 08:53.620
然后这个其实是经过以下几个操作啊

08:53.640 --> 08:54.080
第一个呢

08:54.080 --> 08:56.160
就是我们进行一个接口的调用

08:56.160 --> 08:59.600
创建一个请求接口的这么一个API

08:59.600 --> 09:00.000
之后呢

09:00.000 --> 09:03.680
我们用户模块创建一个登录接口的API

09:03.680 --> 09:05.560
或去手机验证码的一个API

09:05.560 --> 09:06.560
包括重置密码的

09:06.560 --> 09:07.960
当然我们先

09:07.960 --> 09:09.200
因为上一节课

09:09.200 --> 09:11.080
我们已经创建了一个用户登录的

09:12.120 --> 09:12.720
那这几个呢

09:12.720 --> 09:14.800
我们直接来对他进行使用就可以了

09:14.800 --> 09:15.200
之后呢

09:15.200 --> 09:18.440
我们前端把楼顶效果给做一个添加

09:18.440 --> 09:20.760
收集后端的这么一个返回值

09:20.760 --> 09:21.400
这中间呢

09:21.400 --> 09:24.220
我们可以把这个状态来进行一个使用

09:24.220 --> 09:25.220
就OK了

09:25.220 --> 09:26.020
那我们这里面啊

09:26.020 --> 09:29.580
就一步一步的来实现一下这些功能

09:29.580 --> 09:30.540
首先第一个

09:30.540 --> 09:33.740
我们发送用户信息到后端这一块

09:33.740 --> 09:37.140
我们来看一下这个功能是否已经实现啊

09:37.140 --> 09:38.900
回到我们的这个代码里面

09:40.620 --> 09:41.940
我们的代码里面之后啊

09:41.940 --> 09:42.980
我这个时候呢

09:42.980 --> 09:45.180
先来进行一个123QWE

09:45.180 --> 09:46.460
随便输入值

09:46.460 --> 09:48.100
我们点击这个时候没问题

09:48.100 --> 09:48.660
对不对

09:48.660 --> 09:49.380
然后这里面啊

09:49.380 --> 09:50.300
不输入值的时候

09:50.300 --> 09:51.260
你会发现啊

09:51.400 --> 09:53.040
感觉也通过了是吧

09:53.040 --> 09:53.840
原因是什么

09:53.840 --> 09:55.160
原因是我这个之前

09:55.160 --> 09:56.360
已经把这个account

09:56.360 --> 09:59.600
的logan里面的一个ruler给的注释掉了

09:59.600 --> 10:02.760
所以说我们这个里面给的做一个打开

10:02.760 --> 10:03.280
把它呢

10:03.280 --> 10:04.920
也进行一个开启

10:06.600 --> 10:07.880
好的开启之后呢

10:07.880 --> 10:10.400
我们继续回到我们的这个登录里面

10:10.400 --> 10:11.640
来进行一个测试啊

10:12.840 --> 10:18.620
这里面有一个引用也给他做一个打开

10:18.620 --> 10:19.900
从前刷新界面

10:19.900 --> 10:21.300
我们123QWE

10:21.300 --> 10:22.820
这个时候你就会发现

10:22.820 --> 10:24.600
已经有了表单验证

10:24.600 --> 10:27.120
如果说表单验证没有通过的话

10:27.120 --> 10:28.880
这个时候点击登录

10:28.880 --> 10:30.280
他是走不掉的啊

10:31.520 --> 10:32.120
因为什么呢

10:32.120 --> 10:33.200
因为我们后面啊

10:33.200 --> 10:34.960
在这个表单验证的时候

10:34.960 --> 10:37.400
已经加了promise的reject

10:37.400 --> 10:38.440
这么一个状态

10:38.440 --> 10:38.880
所以说呢

10:38.880 --> 10:39.520
这个时候呢

10:39.520 --> 10:40.640
他肯定通过

10:40.640 --> 10:42.080
当你什么时候能通过呢

10:42.080 --> 10:44.560
只有你正常正确的输入的时候

10:44.560 --> 10:45.360
那我这个时候呢

10:45.360 --> 10:46.600
才可以经通过

10:46.600 --> 10:47.320
通过之后

10:47.320 --> 10:48.120
那这个时候呢

10:48.120 --> 10:51.320
我们就可以进行接口的发送了

10:51.320 --> 10:52.640
在接口发送之前

10:52.700 --> 10:53.820
我们要明确一下

10:53.820 --> 10:55.300
因为刚才已经说了

10:55.300 --> 10:56.100
这个数据呢

10:56.100 --> 10:58.660
我们会存储到死到里面

10:58.660 --> 11:01.220
来进行一个公共状态的维护

11:01.220 --> 11:01.780
所以说呢

11:01.780 --> 11:02.780
在这个时候

11:02.780 --> 11:03.860
我们发送的时候

11:03.860 --> 11:05.020
就不要在组件里面

11:05.020 --> 11:06.700
来直接进行一个发送了

11:06.700 --> 11:07.300
那怎么办呢

11:07.300 --> 11:08.260
我们这个里面啊

11:08.260 --> 11:11.140
可以进行一个状态的定义

11:11.140 --> 11:12.180
那第一把状态定义

11:12.180 --> 11:12.700
他有两种

11:12.700 --> 11:14.020
一种是全局的

11:14.020 --> 11:14.700
还有一种呢

11:14.700 --> 11:15.980
是页面级别的

11:15.980 --> 11:17.100
那页面级别的

11:17.100 --> 11:19.620
其实我们可以根据

11:19.620 --> 11:22.620
当前的页面里面的命名空间

11:22.640 --> 11:23.200
这样呢

11:23.200 --> 11:24.920
我们就可以让其他模块

11:24.920 --> 11:26.680
也可以进行一个访问的

11:26.680 --> 11:28.200
那如何来实现呢

11:28.200 --> 11:29.200
非常简单啊

11:29.200 --> 11:30.960
我们只要是在这个

11:30.960 --> 11:31.840
有点下面

11:31.840 --> 11:33.720
我们创建一个文件

11:33.720 --> 11:35.720
叫model.js

11:35.720 --> 11:37.160
所以这个文件名啊

11:37.160 --> 11:40.360
一定要是以这种形式来进创建

11:40.360 --> 11:40.920
否则呢

11:40.920 --> 11:43.120
那如果说你要不是以model啊

11:43.120 --> 11:43.960
来进行命名

11:43.960 --> 11:45.680
他是没有效果的啊

11:45.680 --> 11:47.640
我们定义好model.js之后

11:47.640 --> 11:48.440
在这个里面啊

11:48.440 --> 11:51.960
就可以来进行一个状态的维护编写啊

11:51.980 --> 11:52.860
那首先是

11:52.860 --> 11:55.020
export default

11:55.020 --> 11:56.300
我们啊

11:56.300 --> 11:58.180
导出一个对象

11:58.180 --> 11:59.620
那这个对象里面啊

11:59.620 --> 12:00.260
有什么呢

12:00.260 --> 12:02.420
有我们一个命名空间

12:02.420 --> 12:03.420
那第一个是我们的

12:03.420 --> 12:05.420
name of space属性

12:05.420 --> 12:06.660
我们就叫User

12:06.660 --> 12:07.060
之后呢

12:07.060 --> 12:08.500
我们使用这个模块的时候

12:08.500 --> 12:11.220
就以User来作为一个

12:11.220 --> 12:13.340
State的前缀就OK了

12:13.340 --> 12:13.780
然后呢

12:13.780 --> 12:15.860
我们定一个状态的初始值

12:17.820 --> 12:18.620
State

12:18.620 --> 12:19.900
State里面有什么啊

12:19.900 --> 12:20.420
首先呢

12:20.480 --> 12:22.320
我们知道这个用户信息

12:22.320 --> 12:23.840
如果说登入成功之后

12:23.840 --> 12:25.480
肯定要保存一些值

12:25.480 --> 12:26.640
那我出手话的时候

12:26.640 --> 12:29.240
先定一个UserInfo

12:29.240 --> 12:31.640
定好了UserInfo之后

12:31.640 --> 12:32.680
那我继续啊

12:32.680 --> 12:34.840
来写这个其他的

12:34.840 --> 12:36.840
比如说我们改变状态的

12:36.840 --> 12:38.800
我们知道在这个

12:38.800 --> 12:41.480
理瓦里面有一个Reducers

12:41.480 --> 12:43.920
我们直接使用这种Reducers的形式

12:43.920 --> 12:44.240
当然了

12:44.240 --> 12:45.240
前提现在

12:45.240 --> 12:46.760
你也不需要改变什么是吧

12:46.760 --> 12:48.800
那我们直接先留到这个里面啊

12:48.820 --> 12:51.500
然后一会我们再来完成一下实现一下

12:51.500 --> 12:51.980
之后呢

12:51.980 --> 12:53.660
我们有一个Efficals

12:53.660 --> 12:54.380
Efficals呢

12:54.380 --> 12:56.540
就可以做一些相应的这个

12:56.540 --> 12:57.660
义务处理了啊

12:57.660 --> 12:58.380
然后它呢

12:58.380 --> 13:02.100
默认是里面要集成的是我们的这个Saga

13:02.100 --> 13:02.540
也就是说

13:02.540 --> 13:03.780
迪瓦里面的Efficals

13:03.780 --> 13:05.380
它是继续Saga来实现的

13:05.380 --> 13:06.100
那我们知道

13:06.100 --> 13:08.780
Saga它是通过Generator函数

13:08.780 --> 13:09.300
所以说呢

13:09.300 --> 13:10.220
我们这个里面啊

13:10.220 --> 13:13.220
就可以通过Generator函数的形式

13:13.220 --> 13:15.820
定义一个Logan处理函数

13:15.820 --> 13:17.860
这个Logan处理函数呢

13:17.860 --> 13:19.080
它会接几个值

13:19.080 --> 13:19.720
首先呢

13:19.720 --> 13:21.440
它会把前面

13:21.440 --> 13:24.600
比如说我们调用这个API的时候

13:24.600 --> 13:26.480
传递的一个方法

13:26.480 --> 13:28.600
那它这个传递的一些参数

13:28.600 --> 13:29.680
给接收一下

13:29.680 --> 13:31.200
那第一个是Payload的

13:31.200 --> 13:31.800
第二个呢

13:31.800 --> 13:34.120
是我们Generator函数啊

13:34.120 --> 13:34.560
也就是说

13:34.560 --> 13:36.920
给我们提供的一些相应的方法

13:36.920 --> 13:37.800
POOT

13:37.800 --> 13:39.480
我们可以再使用一个CALL

13:39.480 --> 13:40.280
还有一个什么呢

13:40.280 --> 13:40.960
Select

13:40.960 --> 13:43.000
当然我们这个使用不到这些啊

13:43.000 --> 13:44.720
我们先直接都放在这儿

13:44.720 --> 13:45.760
我们这个里面啊

13:45.760 --> 13:46.800
CALL是必须的

13:46.800 --> 13:48.260
为什么说CALL是必须呢

13:48.260 --> 13:49.120
我们可以通过

13:49.120 --> 13:54.140
yale的点CALL的形式来进行一个接口的调用使用啊

13:54.140 --> 13:54.540
这个呢

13:54.540 --> 13:56.060
是我们必须要使用的

13:56.060 --> 13:57.820
那我们这里面来做一下

13:57.820 --> 14:01.180
那这个时候就是Counts它

14:01.180 --> 14:03.820
Counts的data等于一个什么呢

14:03.820 --> 14:04.460
我们这里面啊

14:04.460 --> 14:05.340
写一个解构吧

14:05.340 --> 14:07.020
因为后端返回值里面

14:07.020 --> 14:07.540
有data

14:07.540 --> 14:09.260
还有这个msg

14:09.260 --> 14:11.940
等于我们的这个yale它啊

14:11.940 --> 14:15.060
yale的我们这里面使用它的这个CALL方法

14:15.060 --> 14:15.700
那第二个呢

14:15.700 --> 14:17.520
就是里面传递的参数

14:17.520 --> 14:21.000
就是我们需要请求的这个接口API

14:21.000 --> 14:22.240
也就是说一个功能函数

14:23.520 --> 14:24.680
那这个函数在哪来啊

14:24.680 --> 14:26.720
我们先给它进行一个引入

14:26.720 --> 14:27.440
从哪里引入

14:28.800 --> 14:29.960
input

14:29.960 --> 14:32.080
我们引入一个dollarhttp

14:32.080 --> 14:33.440
因为已经封装好了嘛

14:33.440 --> 14:36.840
所以说我们从这个API下面来进行引入

14:36.840 --> 14:40.520
那API下面我们知道这个servas

14:40.520 --> 14:42.320
是我们的所有的API对不对

14:42.320 --> 14:43.200
但你这样写啊

14:43.200 --> 14:44.880
那我们这里面要做一个什么

14:45.780 --> 14:48.980
那我们直接把这个API给它进行打开

14:48.980 --> 14:50.980
指定如果说你去请求API

14:50.980 --> 14:54.380
那就等于请求我们servas文件加

14:54.380 --> 14:56.060
那把它名字给它改一下

14:56.060 --> 14:57.180
当你改完这个之后

14:57.180 --> 14:59.540
你要重新进行一个运行啊

14:59.540 --> 15:01.740
我们就把它给这个程序停调

15:03.500 --> 15:05.460
停调之后再继续来一次啊

15:08.430 --> 15:09.510
当它跑起来之后

15:09.510 --> 15:12.670
那我们就可以来完成一下model里面的这个

15:12.670 --> 15:14.230
接口请求的一个处理啊

15:15.010 --> 15:18.370
OK正在加的啊稍有一些慢啊

15:18.370 --> 15:20.130
那我们这里面可以就去写了

15:20.130 --> 15:22.650
ATTP我们知道是导出的一个

15:22.650 --> 15:24.210
比较完整的对象对吧

15:24.210 --> 15:26.530
因为我们在这个servas下面

15:26.530 --> 15:29.650
已经创建好了一个index.js

15:29.650 --> 15:31.570
那请求这index.js

15:31.570 --> 15:34.530
他们人会从这个各个interface里面

15:34.530 --> 15:36.450
文件里面把每一个模块里面

15:36.450 --> 15:38.770
定义好的方法都给进行一个收集

15:38.770 --> 15:39.530
最后呢

15:39.530 --> 15:41.050
返回一个大的对象

15:41.050 --> 15:42.330
也就是说这个model

15:42.430 --> 15:43.070
那model呢

15:43.070 --> 15:44.950
我们作为这个dollar.atp

15:44.950 --> 15:46.910
然后呢使用它的时候

15:46.910 --> 15:49.870
那我们直接调用它里面的方法就可以了

15:49.870 --> 15:50.470
这个时候呢

15:50.470 --> 15:51.990
我们看一下yoder的

15:51.990 --> 15:53.550
yoder叫yoderlogan

15:53.550 --> 15:53.950
对不对

15:53.950 --> 15:55.550
那我这时候就指定一下

15:56.990 --> 15:59.030
是我们的dollar.http

15:59.030 --> 16:00.870
这个名字你可以随便定养

16:00.870 --> 16:01.830
yoderlogan

16:01.830 --> 16:03.630
那此时我需不需要传指

16:03.630 --> 16:04.790
肯定需要传指啊

16:04.790 --> 16:05.430
值是谁

16:05.430 --> 16:07.630
值就是我们的一个

16:07.630 --> 16:09.430
界面里面的一个入餐

16:09.430 --> 16:10.430
叫payload的

16:10.430 --> 16:12.610
那这时候我们就发动过去

16:12.610 --> 16:13.530
发动过去之后

16:13.530 --> 16:16.330
这个里面叫data和这个msg

16:16.330 --> 16:17.610
咱们定一下

16:17.610 --> 16:19.250
ok创建好这些之后

16:19.250 --> 16:21.330
我们回到代码里面

16:21.330 --> 16:22.650
requireapis

16:22.650 --> 16:24.090
脑底犯的这个呢

16:24.090 --> 16:25.290
我们查找一下

16:25.290 --> 16:27.610
应该是我们昨天创建的时候

16:27.610 --> 16:29.210
里面有一些写错了

16:30.810 --> 16:32.130
requireapis

16:32.130 --> 16:34.490
这个是没问题的

16:34.490 --> 16:35.330
这个是哪个

16:35.330 --> 16:38.970
indexserver.js

16:38.990 --> 16:41.310
ok那这个是我们的这个

16:41.310 --> 16:43.190
这一个错误啊

16:43.190 --> 16:44.110
来咱们看一下

16:44.110 --> 16:44.910
那这个时候呢

16:44.910 --> 16:46.630
感觉上好像没有其他错误了

16:46.630 --> 16:47.190
对不对

16:47.190 --> 16:48.390
没有其他错误怎么办呢

16:48.390 --> 16:50.430
我们进行一个调用啊

16:50.430 --> 16:52.830
那调用因为我们在这个model里面

16:52.830 --> 16:55.230
已经创建好了yoder下面

16:55.230 --> 16:57.070
定义了一个logan方法

16:57.070 --> 16:57.790
那这时候呢

16:57.790 --> 17:01.630
我们就可以来进行一个什么使用啊

17:01.630 --> 17:03.070
让我们回到什么呢

17:03.070 --> 17:04.070
回到我们的这个

17:04.070 --> 17:05.590
logan界面里面

17:05.590 --> 17:06.550
logan界面里面

17:06.550 --> 17:07.430
在这个时候

17:07.450 --> 17:09.530
我想调用状态里面的

17:09.530 --> 17:11.170
一个evacost函数

17:11.170 --> 17:11.890
怎么办

17:11.890 --> 17:13.650
那我们因为使用的是

17:13.650 --> 17:15.050
hook函数的形式

17:15.050 --> 17:16.930
来进行一个结构的编写

17:16.930 --> 17:17.410
所以说呢

17:17.410 --> 17:19.010
我们可以借助啊

17:19.010 --> 17:20.770
一个dispatch

17:20.770 --> 17:22.530
这种hook来进行实现

17:22.530 --> 17:24.530
那我这里面引入了一下

17:24.530 --> 17:28.850
you the dispatch

17:28.850 --> 17:29.250
哎

17:29.250 --> 17:30.890
you the

17:30.890 --> 17:33.850
dispatch

17:33.850 --> 17:35.330
ok you the dispatch

17:35.330 --> 17:36.530
我们从哪里引入

17:36.530 --> 17:38.250
我们可以从wumi下面

17:38.270 --> 17:39.950
来进行一个

17:39.950 --> 17:40.870
获取啊

17:40.870 --> 17:43.430
you the dispatch

17:43.430 --> 17:44.350
ok

17:44.350 --> 17:45.830
当你获取完成之后

17:45.830 --> 17:47.030
我们从这个里面

17:47.030 --> 17:48.710
给他把dispatch

17:48.710 --> 17:50.790
给进行一个

17:50.790 --> 17:51.430
导出啊

17:51.430 --> 17:52.230
我们这里面

17:52.230 --> 17:53.230
给他进行一个调用

17:53.230 --> 17:54.670
其实就是一个导出的过程

17:54.670 --> 17:56.150
这里面可以写一下

17:56.150 --> 18:03.220
叫const dispatch

18:03.220 --> 18:06.260
dispatch

18:06.260 --> 18:08.700
等于you the dispatch

18:08.700 --> 18:09.100
ok

18:09.100 --> 18:10.300
调用他一下

18:10.300 --> 18:10.900
调用他一下

18:10.900 --> 18:12.040
我们首先看这个

18:12.040 --> 18:14.160
dispatch是不是

18:14.160 --> 18:15.600
有这么一个函数

18:15.600 --> 18:18.480
咱们来筹验啊

18:18.480 --> 18:20.040
你会发现是不是有一个

18:20.040 --> 18:21.160
然后有一个之后

18:21.160 --> 18:23.080
那我们就可以使用dispatch

18:23.080 --> 18:25.960
这种形式来给他进行一个调用啊

18:25.960 --> 18:27.000
那调用的时候

18:27.000 --> 18:28.160
前提还有一个

18:28.160 --> 18:29.160
就是说什么呢

18:29.160 --> 18:30.440
我们发送用信息

18:30.440 --> 18:31.640
到后段的时候

18:31.640 --> 18:32.560
刚才我们看到了

18:32.560 --> 18:33.520
只有两个数据

18:33.520 --> 18:34.040
对不对

18:34.040 --> 18:35.160
这个我们要明确一下

18:35.160 --> 18:36.400
比如说123

18:36.400 --> 18:37.200
这里面看一下

18:37.200 --> 18:38.160
123 QWE

18:38.160 --> 18:39.440
还有一个123

18:39.440 --> 18:40.160
ok

18:40.160 --> 18:41.340
点击登录的时候

18:41.340 --> 18:42.700
是不是两个数据啊

18:42.700 --> 18:43.180
但是呢

18:43.180 --> 18:44.260
我们这个接口里面

18:44.260 --> 18:46.260
如果说你要做登录

18:46.260 --> 18:48.580
这里面应该还是需要传递一个什么呢

18:48.580 --> 18:49.540
type值

18:49.540 --> 18:51.140
那当type为0的时候

18:51.140 --> 18:52.820
代表着账户名登录

18:52.820 --> 18:53.420
否则呢

18:53.420 --> 18:54.780
就是手机号码登录

18:54.780 --> 18:56.260
那我们这个type能不能获取

18:56.260 --> 18:57.060
肯定是能当

18:57.060 --> 18:58.620
因为我们在这个本地

18:58.620 --> 19:00.420
保存了一个type值

19:00.420 --> 19:01.060
也就是说

19:01.060 --> 19:03.100
那你一会去使用的时候

19:03.100 --> 19:05.340
不光是把这个data给进行传递

19:05.340 --> 19:06.100
然后呢

19:06.100 --> 19:07.180
还要把这个

19:07.180 --> 19:08.980
当前登录的这个类型

19:09.000 --> 19:10.440
给它进行传递过去

19:10.440 --> 19:11.920
这里面给同学们写一下

19:13.520 --> 19:17.120
登录请求的一个参数处理啊

19:17.120 --> 19:18.160
那参数处理啊

19:18.160 --> 19:20.400
type为b选项

19:20.400 --> 19:21.600
这个不要忘了

19:21.600 --> 19:22.400
b选项

19:22.400 --> 19:23.120
然后呢

19:23.120 --> 19:24.120
加上什么呢

19:24.120 --> 19:25.680
加上我们的这个

19:25.680 --> 19:29.400
当前登录的这个模式里面的参数

19:29.400 --> 19:33.760
当前登录模式的参数

19:33.760 --> 19:36.240
那比如说当前登录模式的参数

19:36.260 --> 19:39.100
如果说我们要是手机号码

19:39.100 --> 19:40.540
那现在就应该是什么

19:40.540 --> 19:43.820
是不是我们mobile加上一个

19:43.820 --> 19:45.020
这个叫code对不对

19:45.020 --> 19:47.300
如果说我们要是账户名

19:47.300 --> 19:49.540
那账户名你就按着这个来就行啊

19:49.540 --> 19:50.980
比如说这个是

19:50.980 --> 19:53.060
account name

19:53.060 --> 19:56.860
然后加上一个pathword的这种形式

19:56.860 --> 19:58.300
我们可以来看一下

19:58.300 --> 19:58.620
注意

19:58.620 --> 20:00.300
如果说你不清楚的时候

20:00.300 --> 20:00.940
这个时候呢

20:00.940 --> 20:01.740
我们就要

20:01.740 --> 20:03.740
尝看我们的这个接口文档

20:03.740 --> 20:04.460
那这个里面呢

20:04.480 --> 20:05.720
会有明确的说明啊

20:06.920 --> 20:07.240
好了

20:07.240 --> 20:09.120
我们开始进行调用啊

20:09.120 --> 20:12.200
那这个时候通过dates patch来进行

20:12.200 --> 20:15.960
我们的这个状态处发的一个处理

20:15.960 --> 20:18.120
那这个时候我们就是一个type

20:18.120 --> 20:18.680
type呢

20:18.680 --> 20:19.280
这是什么

20:19.280 --> 20:22.320
是我们的这个油泽下面的login对不对

20:22.320 --> 20:23.600
这是第一个啊

20:23.600 --> 20:24.920
当我们这个处理完成之后

20:24.920 --> 20:28.280
因为我们知道后面定义了一个叫payload

20:28.280 --> 20:28.920
对吧

20:28.920 --> 20:30.600
那我们这里面就写一下

20:30.600 --> 20:31.280
payload呢

20:31.280 --> 20:32.720
它是一个对象

20:32.740 --> 20:33.580
那这个对象呢

20:33.580 --> 20:34.260
首先

20:35.940 --> 20:37.620
我们要去把谁

20:37.620 --> 20:38.940
把这个date

20:40.220 --> 20:41.980
也就是说我们收集的这个

20:41.980 --> 20:43.420
当前如果说照名等落

20:43.420 --> 20:46.700
那我们把这个data给它进行一个传递啊

20:47.740 --> 20:49.900
把这个data给它进行一个传递

20:49.900 --> 20:50.420
sorry啊

20:50.420 --> 20:52.700
这个里面好像是写到外面去了

20:52.700 --> 20:55.180
我们把这个给做一个处理啊

20:55.180 --> 20:55.980
type

20:55.980 --> 20:56.580
然后呢

20:56.580 --> 20:58.020
这里面是它啊

20:58.020 --> 20:58.820
payload

20:58.820 --> 20:59.140
ok

21:00.900 --> 21:01.260
好了

21:01.260 --> 21:03.080
把type传递过去之后

21:03.080 --> 21:03.920
payload的呢

21:03.920 --> 21:05.160
第一个参数

21:05.160 --> 21:05.640
之后呢

21:05.640 --> 21:08.880
我们再把这个type给它进行一个传递

21:08.880 --> 21:09.440
那这样呢

21:09.440 --> 21:12.560
就进行了一个状态的这个分发

21:12.560 --> 21:13.680
U字login

21:13.680 --> 21:17.920
它去调用我们U字模块下面定义好的这个login

21:17.920 --> 21:19.280
我们看来行不行啊

21:19.280 --> 21:19.760
试一下

21:22.160 --> 21:23.120
回到我们这个里面

21:24.240 --> 21:24.920
然后呢

21:24.920 --> 21:26.360
我们来做一下测试

21:26.360 --> 21:27.360
123

21:27.360 --> 21:27.920
然后呢

21:27.920 --> 21:29.400
在这个里面点击

21:29.400 --> 21:30.400
ok点击登入

21:31.280 --> 21:32.160
有抱错对吧

21:32.160 --> 21:33.600
有抱错是atdp

21:33.600 --> 21:35.160
e子脑的底泛的

21:35.160 --> 21:36.640
那这个是什么原因的错误

21:36.640 --> 21:38.560
我们可以回到

21:38.560 --> 21:41.800
我们之前上一节课写的这个代码里面

21:41.800 --> 21:43.000
那这个代码里面

21:43.000 --> 21:44.280
它说小写的atp

21:44.280 --> 21:46.280
那这个就有一点尴尬了

21:46.280 --> 21:47.520
因为我们这里面定义的

21:47.520 --> 21:49.320
肯定是大写的对不对

21:49.320 --> 21:51.800
因为本次请求是用post的请求方法

21:51.800 --> 21:54.480
那我们直接的在这个里面找一下

21:54.480 --> 21:55.440
每一个都是小写

21:55.440 --> 21:56.480
那我们给它改一下

21:58.120 --> 22:00.240
ok post的方法atdp

22:00.240 --> 22:01.000
没什么问题

22:01.540 --> 22:01.740
好的

22:01.740 --> 22:02.900
那我们再来看一下

22:02.900 --> 22:05.860
其他的内容是否有问题啊

22:05.860 --> 22:07.500
这个里面我们来丑验

22:07.500 --> 22:08.740
Session storage

22:08.740 --> 22:10.500
这个呢需要改一下

22:10.500 --> 22:12.900
这个应该是Gate item

22:14.860 --> 22:17.500
把它给做一个调整啊

22:17.500 --> 22:19.780
这个应该是set item

22:19.780 --> 22:20.540
对不对

22:20.540 --> 22:23.500
Session storage相关的两个

22:23.500 --> 22:24.300
然后这里面

22:24.300 --> 22:26.580
Session storage.clear

22:26.580 --> 22:28.580
这个是没有问题的

22:28.580 --> 22:29.980
ok那只有这两个

22:30.040 --> 22:30.520
然后呢

22:30.520 --> 22:33.080
我们再回到我们的这个代码里面

22:33.080 --> 22:33.880
咱们来做一下

22:33.880 --> 22:35.200
比如说这里面

22:35.200 --> 22:36.880
admin 123qw

22:36.880 --> 22:38.960
我点击登录

22:38.960 --> 22:41.280
这个时候告诉我们密码错误

22:41.280 --> 22:41.680
对不对

22:41.680 --> 22:43.400
那这个时候就有返回值了

22:43.400 --> 22:43.880
也就是说

22:43.880 --> 22:46.120
我们能接收到这个返回值啊

22:46.120 --> 22:46.600
然后呢

22:46.600 --> 22:48.360
如果说我们这个比如说

22:48.360 --> 22:49.440
再来啊

22:49.440 --> 22:51.000
123qw

22:51.000 --> 22:54.640
ok当我现在已经点击登录之后啊

22:54.640 --> 22:56.560
这里面是一个正确的啊

22:56.560 --> 22:58.000
哎有一个错误啊

22:58.000 --> 22:59.120
这是因为什么原因啊

22:59.140 --> 23:01.460
是因为我们之前改过这个密码对吧

23:01.460 --> 23:04.220
那我们就123456

23:04.220 --> 23:04.580
好的

23:04.580 --> 23:06.900
那这个时候我点击登录

23:06.900 --> 23:07.820
登录之后

23:07.820 --> 23:09.540
那这个时候已经登录成功了

23:09.540 --> 23:11.420
那如果说你要登录成功之后

23:11.420 --> 23:13.180
那现在我们要做一个什么事

23:13.180 --> 23:14.420
如果说登录成功之后

23:14.420 --> 23:17.380
那现在我是不是就要对数据做一个保存了

23:17.380 --> 23:18.980
也就是说把我们登录成功

23:18.980 --> 23:20.740
那个数据给的进行一个保存

23:20.740 --> 23:21.180
对不对

23:21.180 --> 23:24.020
是因为我们本次处理的时候

23:24.020 --> 23:24.900
咱们说了

23:24.900 --> 23:28.100
它是一个异步的请求对不对

23:28.100 --> 23:28.820
那异步请求

23:28.840 --> 23:31.160
肯定会设计到有一个想一时间

23:31.160 --> 23:32.120
想一时间这一块

23:32.120 --> 23:33.920
我们是不是可以给它加一个loading

23:33.920 --> 23:35.600
比如说我们加一个全局的loading

23:35.600 --> 23:36.920
或者是按钮的loading

23:36.920 --> 23:38.800
那这个loading怎么来添加呢

23:38.800 --> 23:40.840
因为刚才咱们说使用DWAS

23:40.840 --> 23:43.000
DWAS呢内置里面啊

23:43.000 --> 23:46.400
就给我们添加了loading这样一个状态

23:46.400 --> 23:48.960
我们可以来进行一个打印查看啊

23:48.960 --> 23:50.200
在哪个里面查看呢

23:50.200 --> 23:52.520
回到我们的这个代码里面啊

23:52.520 --> 23:54.200
我们找到U字模块

23:54.200 --> 23:54.920
在这个里面

23:54.920 --> 23:57.760
我们除了U字Dispatch之外

23:57.760 --> 24:00.180
我们可以还用U字Slacketer

24:01.540 --> 24:03.700
来获取相应的内容对不对

24:03.700 --> 24:07.340
那我们直接的把这个State来进行一个获取啊

24:07.340 --> 24:08.140
Const

24:08.140 --> 24:09.780
我们这里面订一个什么呢

24:09.780 --> 24:11.020
订一个loading

24:12.380 --> 24:14.700
这个是loading模块啊

24:14.700 --> 24:16.140
loading from

24:16.140 --> 24:17.780
从我们的这个

24:17.780 --> 24:18.700
sorry

24:18.700 --> 24:22.300
loading等于我们U字Slacketer

24:24.560 --> 24:26.320
U字Slacketer来写一下

24:26.320 --> 24:27.520
U字Slacketer这里面

24:27.540 --> 24:29.380
第一个是我们的State

24:29.380 --> 24:31.300
作为我们的这个行参啊

24:32.220 --> 24:36.780
State之后输出State.loading啊

24:36.780 --> 24:39.020
因为这里面使用了DWAS

24:39.020 --> 24:41.020
DWAS模个任就一个loading啊

24:41.020 --> 24:43.460
咱们来可以打印一下loading

24:43.460 --> 24:45.500
Slacketer应该是U字啊

24:45.500 --> 24:46.740
这里面写了一个U字

24:46.740 --> 24:47.220
sorry啊

24:47.220 --> 24:48.220
这个是我的原因

24:49.780 --> 24:50.020
好了

24:50.020 --> 24:50.980
咱们再来看一眼啊

24:50.980 --> 24:53.060
比如说现在已经出来了啊

24:53.060 --> 24:55.900
有Global还有Evacos Models

24:55.900 --> 24:56.780
这样我登录一个

24:56.780 --> 24:58.160
咱们给同学们看一下

24:58.160 --> 24:59.120
123QW1

24:59.120 --> 25:00.360
不管正确与否

25:00.360 --> 25:02.120
咱们直接点击登录

25:02.120 --> 25:03.000
你会发现啊

25:03.000 --> 25:03.760
这个里面啊

25:03.760 --> 25:04.840
它是有变化的

25:04.840 --> 25:05.720
你看到吗

25:05.720 --> 25:08.280
从刚才的这个Evacos里面

25:08.280 --> 25:09.480
就多了一个值

25:09.480 --> 25:10.520
多了一个什么呢

25:10.520 --> 25:11.840
U字Logan

25:11.840 --> 25:13.080
当它登录的时候

25:13.080 --> 25:15.240
如果说你发送了本次请求

25:15.240 --> 25:16.400
那有loading的时候

25:16.400 --> 25:17.400
比如说这个时候呢

25:17.400 --> 25:19.480
它是一个想状态为处

25:19.480 --> 25:21.280
也就是说本次开始请求

25:21.280 --> 25:23.720
如果说请求值返回来的时候

25:23.720 --> 25:25.880
这个里面U字又变成了什么

25:25.900 --> 25:26.900
False对不对

25:26.900 --> 25:27.300
那所以说

25:27.300 --> 25:29.140
我们可以基于它这个特点啊

25:29.140 --> 25:30.420
来实现一下

25:30.420 --> 25:31.380
怎么来实现呢

25:31.380 --> 25:32.820
其实也非常简单啊

25:32.820 --> 25:34.900
你既然能拿到这个loading了

25:34.900 --> 25:38.500
那我们直接的就可以在这个button

25:38.500 --> 25:39.300
咱们的按的

25:39.300 --> 25:42.820
默认按钮里面是有一个loading的属性的

25:42.820 --> 25:44.940
那我们直接就给它添加一个

25:44.940 --> 25:45.380
loading

25:45.380 --> 25:46.500
loading等于一个什么呢

25:46.500 --> 25:47.060
显然呢

25:47.060 --> 25:48.860
不能让它等于处对吧

25:48.860 --> 25:51.860
那我们就等于loading.Evacos

25:53.540 --> 25:55.100
loading.Evacos

25:55.100 --> 25:56.320
下面有一个什么

25:56.320 --> 25:58.000
有一个这个方法啊

25:58.000 --> 25:58.880
这个方法叫什么

25:58.880 --> 26:00.000
咱们来看一下啊

26:00.000 --> 26:01.840
这个叫YouterLogin对不对

26:01.840 --> 26:03.960
那我们把它来给它做一个

26:03.960 --> 26:06.760
解构loading等于

26:06.760 --> 26:09.280
loading.Evacos

26:09.280 --> 26:11.400
然后直接的在这个里面

26:11.400 --> 26:14.760
它会有一个这个方法

26:14.760 --> 26:17.280
咱们直接拿来进行使用就行

26:17.280 --> 26:20.680
因为这里面是有一个Evacos

26:20.680 --> 26:21.200
有问题吗

26:22.800 --> 26:23.480
我们来看一下

26:23.480 --> 26:25.040
可能是刚才的错误啊

26:25.040 --> 26:27.220
刚开的属性youterLogin

26:27.220 --> 26:29.460
那我们直接的在这个里面打印一下

26:29.460 --> 26:30.660
把这个loading打印一下

26:31.780 --> 26:35.020
loading先不给它进行一个添加

26:35.020 --> 26:36.140
loading这个里面

26:36.140 --> 26:38.300
好像是我这个代码写错了

26:38.300 --> 26:39.740
我来看一眼啊

26:39.740 --> 26:41.020
登录的时候

26:41.020 --> 26:45.900
咱们直接的在这个里面loading.Evacos

26:45.900 --> 26:49.860
好像应该是有一个s啊

26:49.860 --> 26:50.900
来咱们再看一眼

26:50.900 --> 26:55.270
是不是有一个s的问题

26:55.270 --> 26:56.030
还是有问题啊

26:56.030 --> 26:57.370
那咱们再来看一下

26:59.370 --> 27:01.690
把这个先给它住掉

27:01.690 --> 27:02.170
然后呢

27:02.170 --> 27:04.250
我们在这个里面打印loading

27:04.250 --> 27:05.570
loading肯定是有的

27:05.570 --> 27:07.850
loading.Evacos

27:07.850 --> 27:09.130
ok没问题啊

27:09.130 --> 27:12.930
那我这里面重新再进行一个添写啊

27:12.930 --> 27:14.090
button

27:14.090 --> 27:20.570
那这里面是loading等于我们的loading.Evacos

27:20.570 --> 27:24.130
然后里面有一个youter下面的login

27:24.130 --> 27:24.850
应该是没问题

27:26.090 --> 27:27.010
好来试一下啊

27:27.010 --> 27:27.930
可以了对吧

27:27.930 --> 27:28.930
那我们来看一下

27:28.930 --> 27:31.090
比如说我们这里面123Q大V

27:31.090 --> 27:32.170
点击登录的时候

27:32.170 --> 27:33.290
当我一点击登录

27:33.290 --> 27:34.810
你会发现它闪了一下

27:34.810 --> 27:36.090
闪了一下原因是什么

27:36.090 --> 27:38.250
为什么咱们没看到那个loading效果

27:38.250 --> 27:38.810
原因呢

27:38.810 --> 27:40.170
是它这个请求啊

27:40.170 --> 27:41.690
我们在本地做的处理

27:41.690 --> 27:43.370
速度呢有一些快啊

27:43.370 --> 27:46.050
如果说你想模拟一下这个

27:46.050 --> 27:47.530
速度比较慢的一个响应

27:47.530 --> 27:48.210
怎么办呢

27:48.210 --> 27:48.850
这个里面啊

27:48.850 --> 27:50.450
我们必须这个时候呢

27:50.450 --> 27:52.330
就需要改一下圆码了啊

27:53.570 --> 27:54.570
怎么改圆码呢

27:54.590 --> 27:56.710
这个原来的这个servers

27:56.710 --> 27:58.790
是我们给同学们发过去的

28:00.070 --> 28:02.230
发过去的响应值都在哪个里面呢

28:02.230 --> 28:05.390
是在我们的这个server

28:05.390 --> 28:06.990
这里面跟同学们说一下

28:06.990 --> 28:08.230
有一个app

28:08.230 --> 28:10.870
appconfig下面有一个controller

28:12.390 --> 28:13.470
controller里面呢

28:13.470 --> 28:15.150
是有这个youter handler

28:15.150 --> 28:17.150
这个呢是专门对登录

28:17.150 --> 28:18.710
做一些响应处理的

28:18.710 --> 28:20.430
比如说我们可以给它一个

28:21.510 --> 28:23.150
慢一点的动作对不对

28:23.150 --> 28:25.050
那我们让它来等待一下

28:25.050 --> 28:25.890
一个返回

28:25.890 --> 28:27.890
我们来看一下状态啊

28:27.890 --> 28:30.650
avaita一个promise

28:30.650 --> 28:32.250
比如说我们这里面写一下

28:32.250 --> 28:37.530
写一个newpromise吧

28:37.530 --> 28:38.730
newpromise

28:38.730 --> 28:39.810
res

28:39.810 --> 28:43.450
那我们直接的set timeout

28:43.450 --> 28:44.530
两秒钟之后

28:44.530 --> 28:47.930
我让它res来进行一个执行啊

28:47.930 --> 28:48.530
然后这样呢

28:48.530 --> 28:50.810
我们就能看到一个loading效果

28:50.810 --> 28:51.330
否则呢

28:51.330 --> 28:53.570
这个我们看不到它的一个效果啊

28:53.570 --> 28:54.930
给它阻断一下执行啊

28:55.030 --> 28:56.230
多长时间阻断执行

28:56.230 --> 28:58.630
两秒钟之后让它来进行执行

28:58.630 --> 29:01.030
那这样看着效果就比较方便了啊

29:01.030 --> 29:02.030
res

29:02.030 --> 29:03.230
ok没什么问题啊

29:03.230 --> 29:05.230
set timeout

29:05.230 --> 29:07.030
这个里面应该是这样

29:07.030 --> 29:09.230
set timeout

29:09.230 --> 29:11.830
第一个是我们的这个调用函数

29:11.830 --> 29:13.830
然后直接的在这个里面

29:13.830 --> 29:14.930
加一个括号啊

29:14.930 --> 29:15.830
好的

29:15.830 --> 29:17.630
回到我们的这个代码里面

29:17.630 --> 29:18.530
咱们再来做一下

29:18.530 --> 29:19.630
比如说点击登录

29:19.630 --> 29:22.030
你看这时候是不是就已经有loading

29:22.030 --> 29:24.630
当你如果说是请求完成啊

29:24.730 --> 29:26.030
当然它不管你请求成功

29:26.030 --> 29:26.930
你失败啊

29:26.930 --> 29:27.930
你请求完成

29:27.930 --> 29:28.930
它这个时候呢

29:28.930 --> 29:31.230
就把这个效果给你停掉

29:31.230 --> 29:31.730
对吧

29:31.730 --> 29:33.530
就是这么一种状态啊

29:33.530 --> 29:35.030
然后当你停掉这个之后

29:35.030 --> 29:37.330
其实这是我们一个啊

29:37.330 --> 29:40.730
当前的模块里面来做的一个处理啊

29:40.730 --> 29:42.730
比如说也就是针对当前的这个

29:42.730 --> 29:43.630
八层组件

29:43.630 --> 29:45.930
那我们看一下实践的这个效果里面

29:45.930 --> 29:49.130
其实不光是针对这个八层组件

29:49.130 --> 29:51.330
那如果说我们要是针对

29:51.330 --> 29:53.030
当前的这个login界面

29:53.030 --> 29:54.730
或者是我们可以理解为

29:54.730 --> 29:57.230
我们针对其他界面的一个处理

29:57.230 --> 29:58.430
全局的来做loading

29:58.430 --> 29:59.030
怎么办呢

29:59.030 --> 30:01.430
那这个里面我们就需要给layout

30:01.430 --> 30:03.930
来进行loading的一个添加

30:05.030 --> 30:07.230
因为我们可以获取到这个loading

30:07.230 --> 30:08.030
那这个时候呢

30:08.030 --> 30:10.030
我们就可以在这个layout里面

30:10.030 --> 30:12.730
来指定哪个组件

30:12.730 --> 30:15.130
然后请求数据的时候有loading效果

30:15.130 --> 30:15.930
并且呢

30:15.930 --> 30:18.430
我们可以定制一个loading组件

30:18.430 --> 30:21.530
专门的来进行显示隐藏的这么一个功能

30:22.130 --> 30:22.330
好的

30:22.330 --> 30:23.130
那接下来呢

30:23.130 --> 30:26.530
我们就把这个loading组件来实现一下

30:26.530 --> 30:27.730
回到我们的代码里面

30:27.730 --> 30:29.930
首先找到我们的layout

30:29.930 --> 30:31.730
因为我们组件添加的时候

30:31.730 --> 30:34.930
可能不光给这个用户登录的

30:34.930 --> 30:35.930
这一个使用

30:35.930 --> 30:36.530
所以说呢

30:36.530 --> 30:39.530
那这里面我们找到我们的这个

30:39.530 --> 30:41.030
beatslayout找到

30:41.030 --> 30:41.530
sorry啊

30:41.530 --> 30:43.630
找到我们的这个index

30:43.630 --> 30:44.530
那在这个里面呢

30:44.530 --> 30:46.130
我们对这个layout

30:46.130 --> 30:49.030
也就是说对这个loading来进行一个处理

30:49.030 --> 30:50.130
那怎么来处理呢

30:50.130 --> 30:52.230
首先我要定一个loading组件

30:52.230 --> 30:54.330
然后在这个里面进行引入

30:54.330 --> 30:55.130
也就是说

30:56.430 --> 30:59.130
这里面我们要创建loading组件

30:59.130 --> 30:59.730
之后呢

30:59.730 --> 31:02.430
我们在这个里面来进行使用

31:02.430 --> 31:04.330
那这个loading组件怎么来创建

31:04.330 --> 31:08.130
那我在这个combalment下面新建一个

31:08.130 --> 31:09.230
新建一个文件夹吧

31:09.230 --> 31:11.730
因为这里面是会有一些样式的

31:13.230 --> 31:16.430
loading定一个index.js

31:16.430 --> 31:17.630
或者是你名字一样

31:17.630 --> 31:18.530
也可以啊

31:18.530 --> 31:20.530
快速的实现一个模板

31:20.530 --> 31:21.730
它叫loading

31:21.730 --> 31:23.730
那这个loading里面都有啥内容呢

31:23.730 --> 31:24.830
我们就来完成一下

31:24.830 --> 31:26.330
其实可以看一下

31:26.330 --> 31:27.330
这个loading呢

31:27.330 --> 31:28.930
相对是比较简单的

31:28.930 --> 31:31.530
我们回到已经完成的这个代码里面

31:31.530 --> 31:32.730
这样退出一下

31:33.930 --> 31:36.530
退出之后如何来查看这个loading

31:36.530 --> 31:39.330
我们直接可以从这个里面来进行查看

31:39.330 --> 31:41.530
首先把它的zindex.js调大一些

31:41.530 --> 31:43.130
比如说zindex.js是10

31:44.730 --> 31:45.930
这个是10吧

31:46.930 --> 31:48.730
110也可以啊

31:48.730 --> 31:49.330
pasta

31:49.330 --> 31:50.130
那你会发现

31:50.130 --> 31:51.730
其实loading就是一个文字

31:51.730 --> 31:53.130
加上一个动画效果

31:53.130 --> 31:53.730
对不对

31:53.730 --> 31:55.930
那我们这里面就来写一下

31:55.930 --> 31:57.130
把它来创建一下

31:57.130 --> 31:57.730
首先呢

31:57.730 --> 31:58.930
给它一个类名

31:58.930 --> 32:00.930
class name

32:00.930 --> 32:02.930
但是刚才咱们也看到了

32:02.930 --> 32:04.030
这个loading呢

32:04.030 --> 32:04.730
其实呢

32:04.730 --> 32:06.930
它是有一个根据条件

32:06.930 --> 32:08.530
来进行展示隐藏的

32:08.530 --> 32:09.730
那我们这个里面

32:09.730 --> 32:11.530
无非就是给它做了一个什么呢

32:11.530 --> 32:12.830
添加这么一个类

32:12.830 --> 32:13.530
那这个类呢

32:14.530 --> 32:17.530
也就是说你隐藏的时候

32:17.530 --> 32:19.830
我就不让你再来显示了

32:19.830 --> 32:21.330
那我们先给它一些基础类

32:21.330 --> 32:23.930
一会再来说其他的相关内容啊

32:23.930 --> 32:25.330
那这个里面class name

32:25.330 --> 32:26.530
先给它一个基础类

32:26.530 --> 32:27.130
基础类呢

32:27.130 --> 32:29.830
先给它一个loader

32:29.830 --> 32:30.330
之后呢

32:30.330 --> 32:32.130
给它一个foil四颗润

32:35.730 --> 32:36.630
把这个写一下

32:36.630 --> 32:37.330
foil四颗润

32:37.330 --> 32:37.630
好了

32:37.630 --> 32:38.830
写完成之后呢

32:38.830 --> 32:40.730
里面我们再来创建一下

32:40.730 --> 32:41.330
dnv

32:41.330 --> 32:43.430
这里面给它一个class name

32:43.730 --> 32:44.330
这个叫什么

32:44.330 --> 32:44.930
叫wrapper

32:46.130 --> 32:46.830
好

32:46.830 --> 32:47.830
wrapper里面

32:47.830 --> 32:50.430
我们创建一个点

32:50.430 --> 32:50.930
in there

32:52.430 --> 32:53.030
ok

32:53.030 --> 32:53.430
之后呢

32:53.430 --> 32:54.630
还有一个文字啊

32:54.630 --> 32:55.630
那这个就叫点

32:55.630 --> 32:56.430
text的

32:56.430 --> 32:58.030
我们给它一个loading

32:59.430 --> 33:00.230
loading

33:00.230 --> 33:00.830
哎

33:00.830 --> 33:01.330
sorry啊

33:02.730 --> 33:03.030
好的

33:03.030 --> 33:03.730
那这样呢

33:03.730 --> 33:05.830
基本这个组件就创建完成了

33:05.830 --> 33:07.130
组件创建完成之后呢

33:07.130 --> 33:09.330
这个里面是需要一点样式的

33:09.330 --> 33:10.030
样式怎么办呢

33:10.030 --> 33:11.830
我们这里面可以写一下

33:11.830 --> 33:12.530
input

33:12.530 --> 33:15.430
我们引入一个index.less

33:15.430 --> 33:16.730
但是这个index.less

33:16.730 --> 33:17.530
还没有

33:17.530 --> 33:18.830
我们先引入之后呢

33:18.830 --> 33:20.630
给它做一个创建啊

33:20.630 --> 33:21.530
这个里面

33:21.530 --> 33:25.430
就来把这个index.less来写一下

33:25.430 --> 33:27.230
找到我们的loading下面

33:27.230 --> 33:29.430
定一个index.less

33:30.830 --> 33:32.930
它的样式文件非常的简单

33:32.930 --> 33:35.330
我这里面提前给同学们准备好了一个

33:35.330 --> 33:37.930
那我们直接给它考卫过来就可以啊

33:37.930 --> 33:40.330
也就是说在这个里面

33:40.330 --> 33:41.830
我们在翻的中显示

33:41.830 --> 33:43.430
直接让它替换一个就可以了

33:43.430 --> 33:45.630
这里面有一个已经写好的

33:45.630 --> 33:48.330
把它给做一个替换

33:48.330 --> 33:48.930
那这样呢

33:48.930 --> 33:50.530
index.less就有了

33:50.530 --> 33:51.730
是一些基础的类

33:51.730 --> 33:53.530
然后c3实现了一个简单的

33:53.530 --> 33:55.130
这个小动画啊

33:55.130 --> 33:56.930
当我们拿到这个完成之后

33:56.930 --> 33:57.930
那现在怎么办呢

33:57.930 --> 33:59.530
我们这个loading组件基本上

33:59.530 --> 34:01.330
就算创建完成了

34:01.330 --> 34:02.330
创建完成之后

34:02.330 --> 34:04.330
我们想在背的layout里面使用

34:04.330 --> 34:04.930
对不对

34:04.930 --> 34:05.430
sorry啊

34:05.430 --> 34:08.530
应该是在我们的这个

34:08.530 --> 34:10.130
不是在背的layout里面啊

34:10.130 --> 34:11.530
应该是在我们的这个

34:11.530 --> 34:13.130
主layout里面使用

34:13.130 --> 34:15.330
也就是说index.js

34:15.330 --> 34:16.030
那在这块呢

34:16.030 --> 34:17.530
我们创建loading组件

34:17.530 --> 34:18.530
这里面再写一句话

34:18.530 --> 34:20.030
叫引入组件

34:20.030 --> 34:20.730
对吧

34:20.730 --> 34:21.430
引入组件

34:21.430 --> 34:22.530
先来做这个事

34:22.530 --> 34:25.630
input把它给做一个导入

34:25.630 --> 34:27.930
这个叫loading

34:27.930 --> 34:29.230
from从哪来

34:29.230 --> 34:31.230
从我们的component

34:31.230 --> 34:32.530
下面的loading

34:32.530 --> 34:33.130
ok

34:33.130 --> 34:33.530
这个呢

34:33.530 --> 34:35.830
应该是一个大写

34:35.830 --> 34:36.930
那前提如果说

34:36.930 --> 34:39.330
你使用这种绝对路径的话

34:39.330 --> 34:42.530
那你要配置一个绝对路径的

34:42.530 --> 34:44.930
文件的这个别名设

34:44.930 --> 34:45.730
那这个里面呢

34:45.730 --> 34:47.330
我们已经配置了components

34:47.330 --> 34:47.930
所以说呢

34:47.930 --> 34:50.630
我直接就可以进行这种引入方式啊

34:50.630 --> 34:52.430
但这种引入方式创建完成之后

34:52.430 --> 34:53.430
那我就把这个loading

34:53.430 --> 34:55.530
给它进行一个添加就可以了

34:55.530 --> 34:56.130
原来呢

34:56.130 --> 34:58.130
我们直接在这个container里面

34:58.130 --> 34:59.730
只包裹了一个什么呢

34:59.730 --> 35:00.930
只包裹了一个催稳

35:00.930 --> 35:01.630
那现代呢

35:01.630 --> 35:03.930
我们其实还想添加一个loading

35:03.930 --> 35:04.630
那这样

35:04.630 --> 35:05.930
我们在这个基础上

35:05.930 --> 35:08.530
再添加一个内容

35:08.730 --> 35:11.130
那就是给它加一个扩号

35:11.130 --> 35:11.630
之后呢

35:11.630 --> 35:13.530
给它做一个切换

35:13.530 --> 35:15.330
然后切换回来之后

35:15.330 --> 35:16.230
催稳

35:16.230 --> 35:18.030
催稳正常展示

35:18.030 --> 35:19.930
然后我们这个里面

35:19.930 --> 35:20.730
把这个loading

35:20.730 --> 35:22.130
给它进行一个

35:22.930 --> 35:23.530
回来

35:23.530 --> 35:24.230
把这个loading

35:24.230 --> 35:26.430
给它进行一个添加啊

35:26.430 --> 35:27.730
那这里面就写一个什么呢

35:27.730 --> 35:29.430
写一个loading

35:32.360 --> 35:32.660
好

35:32.660 --> 35:33.960
写完这个loading之后

35:33.960 --> 35:35.260
其实我们就这个

35:35.260 --> 35:36.660
也没有什么内容啊

35:36.660 --> 35:39.360
内容都在组件里面写了

35:39.360 --> 35:42.360
所以说我们直接的开始和闭合标签

35:42.360 --> 35:44.260
使用一个就ok啊

35:44.260 --> 35:46.260
当你这个创建完成之后

35:46.260 --> 35:47.560
那这个时候loading

35:47.560 --> 35:50.060
其实我们现在知道loading的展示啊

35:50.060 --> 35:50.760
目前来讲

35:50.760 --> 35:52.660
它应该是一直展示对不对

35:52.660 --> 35:53.360
我们看一下

35:53.360 --> 35:55.360
如果说它一直展示就ok啊

35:55.360 --> 35:56.860
现在loading过来了

35:56.860 --> 35:58.060
但是没有这个效果

35:58.060 --> 35:58.360
ok

35:58.360 --> 35:59.360
有了对不对

35:59.360 --> 36:01.060
那个loading什么时候展示呢

36:01.060 --> 36:02.260
什么时候隐藏

36:02.260 --> 36:02.860
那这个时候

36:02.860 --> 36:04.660
我们要取决一个条件

36:04.660 --> 36:05.760
条件是啥呢

36:05.760 --> 36:07.860
就是当我们目前来讲

36:07.860 --> 36:09.660
只有是用户登录的时候

36:09.660 --> 36:10.460
那我这个时候呢

36:10.460 --> 36:12.060
我就要把这个用户登录的

36:12.060 --> 36:14.260
这一种状态来给规定一下

36:14.260 --> 36:15.060
也就是说

36:15.060 --> 36:18.260
现在正在请求用户登录的这个接口

36:18.260 --> 36:18.860
怎么来做

36:18.860 --> 36:22.860
同样的和我们之前使用的一样

36:22.860 --> 36:25.760
我们通过you this like

36:25.760 --> 36:28.260
他获取from从无名

36:28.260 --> 36:29.260
获取一个什么呢

36:29.260 --> 36:30.760
获取我们dwa

36:30.760 --> 36:33.360
给我们提供的这个loading组件啊

36:33.360 --> 36:36.060
concept loading等于

36:36.060 --> 36:37.860
我们的这个you this like

36:37.860 --> 36:40.760
他然后这里面选用

36:40.760 --> 36:41.560
又是you的了

36:41.560 --> 36:42.960
稍微把这个重写一下

36:42.960 --> 36:45.860
这个叫you的

36:45.860 --> 36:47.660
you this like

36:47.660 --> 36:48.960
好的定义完成之后呢

36:48.960 --> 36:50.560
我们来做一下打印啊

36:50.560 --> 36:53.260
看一下它是否存在

36:53.260 --> 36:55.060
我们在这个里面打印出来

36:55.060 --> 36:56.060
这个loading

36:56.060 --> 36:58.260
ok刷新一下界面啊

36:58.260 --> 36:58.860
你会发现啊

36:58.860 --> 37:00.960
十字号打印出来这个loading了

37:00.960 --> 37:03.060
loading里面有一个effect cost

37:03.060 --> 37:04.360
那我们这个里面

37:04.360 --> 37:06.360
就可以把这个

37:06.360 --> 37:09.260
请求用户接口的这个状态

37:09.260 --> 37:10.760
只给他传过去啊

37:10.760 --> 37:11.860
怎么来点传过去呢

37:11.860 --> 37:13.860
其实我们的显示和隐藏

37:13.860 --> 37:15.960
这里面是有一个标识条件的

37:15.960 --> 37:17.960
那比如说这里面就写一个

37:17.960 --> 37:20.960
一字寿一字寿的显示条件

37:20.960 --> 37:25.860
就是loading.effect cost

37:25.860 --> 37:27.260
effect cost这个里面

37:27.260 --> 37:28.260
我们传递什么呢

37:28.260 --> 37:29.160
还是和一样啊

37:29.160 --> 37:31.860
这个叫you this下面的一个

37:31.860 --> 37:32.860
logo

37:32.860 --> 37:34.360
ok传递过去之后

37:34.360 --> 37:35.660
那我订一个一字寿

37:35.660 --> 37:37.160
index.js

37:37.160 --> 37:38.060
loading里面

37:38.060 --> 37:40.460
就应该会接收到一个

37:40.460 --> 37:44.060
一字寿的这么一个值啊

37:44.060 --> 37:44.760
我们来看一下

37:44.760 --> 37:46.060
这个一字寿的参数

37:46.060 --> 37:47.260
刷新一下

37:47.260 --> 37:48.660
ok一字寿没有啊

37:48.660 --> 37:49.660
那我们来丑验啊

37:49.660 --> 37:51.260
为什么是没有

37:51.260 --> 37:52.560
loading一字寿

37:52.560 --> 37:54.460
等于loading.effect cost

37:54.460 --> 37:55.460
有点login

37:55.460 --> 37:56.660
其实现在是因为什么呢

37:56.660 --> 37:57.660
其实因为我们现在

37:57.660 --> 37:59.160
没有定义这个接口啊

37:59.160 --> 37:59.560
比如说呢

37:59.560 --> 38:01.260
我们一字寿给他一个 false

38:01.260 --> 38:01.860
那你看一下

38:01.860 --> 38:03.960
这时候有没有啊

38:03.960 --> 38:05.360
ok这时候是不是就有了

38:05.360 --> 38:06.060
也就是说呢

38:06.060 --> 38:07.760
如果说你这个状态啊

38:07.760 --> 38:09.060
现在没有定义的时候

38:09.060 --> 38:10.760
他呢是没有的啊

38:10.760 --> 38:12.060
那我们现在啊

38:12.060 --> 38:12.960
如果说没有

38:12.960 --> 38:14.460
是不是就不应该让他显示啊

38:14.460 --> 38:14.960
对吧

38:14.960 --> 38:16.260
那目前来做这件事

38:16.260 --> 38:17.260
我们就可以怎么做呢

38:17.260 --> 38:20.060
我们就可以根据这个一字寿

38:20.060 --> 38:22.960
也就是说给他添加一个类啊

38:22.960 --> 38:23.860
那这个类名呢

38:23.860 --> 38:24.560
我们这个里面

38:24.560 --> 38:26.460
刚才因为看到效果也看到了

38:26.460 --> 38:27.360
他叫hiden啊

38:27.360 --> 38:30.160
在这个里面我已经写好了

38:30.160 --> 38:32.160
我们可以让他来进行一个什么

38:32.160 --> 38:34.160
隐藏

38:34.160 --> 38:35.960
那这个隐藏的类名就叫hiden

38:35.960 --> 38:38.360
但是目前现在来讲啊

38:38.360 --> 38:40.860
如果说你直接这样写啊

38:40.860 --> 38:43.460
我们的这个字幕创和辩量

38:43.460 --> 38:44.660
混合在一起呢

38:44.660 --> 38:46.160
在这个react里面啊

38:46.160 --> 38:47.360
尤其无谜这个框架

38:47.360 --> 38:48.360
他实现不了的

38:48.360 --> 38:48.860
那怎么办呢

38:48.860 --> 38:50.160
我们可以借助这种

38:50.160 --> 38:53.060
三方的这个类名支持的一些插件

38:53.060 --> 38:54.460
比如说我们可以使用这种

38:54.460 --> 38:57.460
class names的这种形式啊

38:57.460 --> 38:57.860
这个呢

38:57.860 --> 38:59.660
是我们插件的一个安装

38:59.660 --> 39:00.860
class names的支持

39:00.860 --> 39:03.460
我们变量和自物创的一个混变啊

39:03.460 --> 39:06.260
那这里面我们就来进行一个下载

39:06.260 --> 39:08.160
ereact

39:08.160 --> 39:10.660
然后是class

39:10.660 --> 39:12.260
小写的啊

39:12.260 --> 39:13.760
我直接手动输入了

39:13.760 --> 39:14.960
class names

39:14.960 --> 39:16.560
当你这个输入完成之后

39:16.560 --> 39:19.560
ereact class names

39:19.560 --> 39:21.060
应该是

39:21.060 --> 39:21.560
没问题啊

39:21.560 --> 39:22.660
我们来看一下

39:22.660 --> 39:24.960
ereact class

39:26.960 --> 39:28.460
class names

39:29.460 --> 39:31.260
ok正在安装

39:31.260 --> 39:32.260
当你安装完成之后

39:32.260 --> 39:33.660
那你这时候就可以使用了

39:33.660 --> 39:34.460
使用方式呢

39:34.460 --> 39:35.160
非常简单啊

39:35.160 --> 39:36.060
我这里面啊

39:36.060 --> 39:37.960
给同学们写了一个模板

39:37.960 --> 39:38.560
首先呢

39:38.560 --> 39:40.660
你要把它给进行一个引入

39:40.660 --> 39:41.160
之后

39:41.160 --> 39:43.460
你就可以来进行一个混变了

39:43.460 --> 39:45.360
比如说我们原来的这个class name

39:45.360 --> 39:46.460
他是一个字幕创

39:46.460 --> 39:47.060
那现在呢

39:47.060 --> 39:48.460
我就给他调整一下

39:48.460 --> 39:49.260
调整一下什么呢

39:49.260 --> 39:50.360
变成一个

39:50.360 --> 39:50.960
哎

39:50.960 --> 39:52.760
class name

39:52.760 --> 39:56.660
调整变成一个字幕创和我们的这个辩量

39:56.660 --> 39:58.360
进行一个混合输入的

39:58.560 --> 39:59.760
首先这里面

39:59.760 --> 40:01.360
前两个都是字幕创

40:01.360 --> 40:02.760
一个叫loader

40:02.760 --> 40:05.860
以dohar的形式进行一个分割

40:05.860 --> 40:06.360
第二个呢

40:06.360 --> 40:08.060
是我们的这个foce current啊

40:09.260 --> 40:10.160
然后第三个呢

40:10.160 --> 40:13.960
我们就可以使用这种class names的形式

40:13.960 --> 40:16.560
来进行一个变量的添加

40:16.560 --> 40:18.160
那这个变量的添加

40:18.160 --> 40:20.360
我们这里面指定一个什么呢

40:20.360 --> 40:21.760
指定这个变量名

40:21.760 --> 40:23.660
这里面我们需要指定一下

40:23.660 --> 40:25.060
那这个就叫一个什么

40:25.060 --> 40:25.960
叫hide啊

40:25.960 --> 40:27.760
前提我们这个里面

40:27.760 --> 40:30.160
要给他添加一个什么class name统一

40:30.160 --> 40:31.760
给他来做一个包裹啊

40:32.560 --> 40:33.560
class names

40:33.560 --> 40:33.960
ok

40:34.860 --> 40:36.160
包裹起来之后

40:36.160 --> 40:37.060
第一个第二个

40:37.060 --> 40:38.960
然后把它这个

40:39.160 --> 40:39.960
最后一个

40:39.960 --> 40:41.760
后面加一个括号

40:41.760 --> 40:42.960
然后我这个

40:43.460 --> 40:44.760
就不是class name了

40:44.760 --> 40:45.560
应该是什么

40:45.560 --> 40:47.160
应该是我们刚才看到那个

40:47.760 --> 40:48.260
hide

40:48.660 --> 40:50.460
hide的显示条件呢

40:50.460 --> 40:51.360
我们这个里面

40:51.360 --> 40:53.360
就是通过这个一字兽

40:53.560 --> 40:56.560
让它进行一个是否展示的

40:56.560 --> 40:57.960
这么一个约定啊

40:58.260 --> 40:59.160
我们来试一下

40:59.960 --> 41:00.760
我们找一下

41:00.760 --> 41:02.060
看现在是不是可以啊

41:05.020 --> 41:06.120
感觉也没有抱错

41:06.120 --> 41:06.420
对吧

41:06.420 --> 41:07.620
然后但是这个

41:08.320 --> 41:09.920
我们这个里面展示的时候

41:09.920 --> 41:10.920
应该是什么

41:11.220 --> 41:12.620
非一字兽才对是吧

41:12.620 --> 41:14.420
那我们给他一个非一字兽啊

41:14.420 --> 41:15.220
目前来看啊

41:15.220 --> 41:16.920
现在如果说给添加非一字兽

41:16.920 --> 41:17.920
它是不是不显示了

41:17.920 --> 41:19.520
那我们要给他进行一个等度呢

41:19.520 --> 41:20.620
比如说hide们

41:20.620 --> 41:22.620
随便等入一个123qwe

41:22.720 --> 41:23.620
到现在啊

41:23.620 --> 41:24.120
这样呢

41:24.120 --> 41:25.720
就应该是有这个效果了

41:25.920 --> 41:26.920
请求完成呢

41:26.920 --> 41:29.020
他就把这个动画效果

41:29.020 --> 41:32.120
给做了一个删除的这样一个操作

41:32.120 --> 41:32.620
那这个呢

41:32.620 --> 41:35.620
就是我们class names的一个使用

41:35.620 --> 41:36.520
非常的简单啊

41:36.520 --> 41:37.620
一个小的插件

41:37.620 --> 41:38.120
这个呢

41:38.120 --> 41:38.820
虽然断了

41:38.820 --> 41:39.720
但是目前来看

41:39.720 --> 41:41.220
应该是下载完成了

41:41.320 --> 41:43.220
我们可以展实先不去考虑它

41:43.520 --> 41:45.420
那既然我们这个动画效果也做完了

41:45.420 --> 41:46.120
但是这个里面

41:46.120 --> 41:47.320
我们还要注意一点啊

41:48.320 --> 41:48.820
因为这个

41:48.820 --> 41:50.120
我们加了一个avate

41:50.120 --> 41:52.020
既然你已经验证好了它之后

41:52.120 --> 41:53.420
那我们就可以把什么

41:53.420 --> 41:55.720
把这个avate给它进行一个

41:55.920 --> 41:56.920
删除操作

41:56.920 --> 41:58.920
回到我们的这个sales

41:59.220 --> 42:00.320
sales下面呢

42:00.320 --> 42:02.620
我们找到这个app

42:02.820 --> 42:06.420
app里面有这个我们的controller

42:06.920 --> 42:07.420
sorry啊

42:07.420 --> 42:09.520
应该是应该是controller

42:09.520 --> 42:11.120
controller我们找到

42:11.620 --> 42:13.520
这个里面有一个

42:14.820 --> 42:16.420
有一个youtuberHallener

42:16.420 --> 42:18.020
我们直接的这个里面

42:19.930 --> 42:21.330
找到youtuberHallener

42:21.630 --> 42:23.030
那youtuberHallener里面

42:23.030 --> 42:24.530
因为刚才加了一个promise

42:24.530 --> 42:25.630
对象来做测试

42:25.630 --> 42:28.330
所以说现在把它给进行一个剃除操作

42:28.630 --> 42:29.630
剃除操作之后

42:29.630 --> 42:31.330
那这个时候我们继续

42:31.430 --> 42:33.430
现在接口应该是很快了

42:33.430 --> 42:34.430
我们可以看一下

42:34.530 --> 42:35.930
如果说我给它删除了之后

42:35.930 --> 42:37.030
idement登录

42:37.630 --> 42:38.830
ok 那这个时候呢

42:38.830 --> 42:42.130
应该是去除了2秒钟的这么一个效果

42:42.130 --> 42:43.030
我们来看一下

42:43.530 --> 42:45.430
idement 张沪明不能登

42:46.030 --> 42:47.630
idement123qwe

42:47.730 --> 42:50.030
然后这时候呢我点击登录

42:51.430 --> 42:53.830
ok 接口请求返回密码错误

42:53.830 --> 42:54.930
这是没问题对不对

42:54.930 --> 42:55.730
那密码错误

42:55.730 --> 42:58.730
现在我们就要单独的来对它做一个处理

42:59.030 --> 43:00.530
回到我们src

43:00.530 --> 43:03.730
src下面有一个我们的pages

43:04.030 --> 43:05.530
找到我们的这个youtuber

43:05.530 --> 43:07.730
youtuber里面已经定义好这个状态了

43:07.830 --> 43:08.530
那这个状态

43:08.530 --> 43:10.030
我们就在这个里面处理一下

43:10.130 --> 43:10.730
首先呢

43:10.730 --> 43:12.730
如果说你用户登入错误了

43:12.730 --> 43:14.230
那这个data肯定是没有

43:14.230 --> 43:14.630
对吧

43:14.730 --> 43:16.430
如果说非data的话

43:16.430 --> 43:17.130
我们怎么办

43:17.330 --> 43:19.130
给它做一个提示信息

43:19.130 --> 43:20.730
比如说我们给它一个弹窗

43:20.830 --> 43:22.130
那这个弹窗怎么来呢

43:22.130 --> 43:22.930
我们直接的

43:22.930 --> 43:25.730
从我们的import引入一个

43:25.730 --> 43:26.930
从我们的ant里面

43:27.030 --> 43:29.130
message error from

43:30.530 --> 43:31.530
引一个就可以了

43:31.530 --> 43:33.630
我们直接的引一个ant

43:33.630 --> 43:34.130
之后呢

43:34.130 --> 43:36.930
我们使用这个message api

43:36.930 --> 43:38.630
上面的array方法

43:38.830 --> 43:40.130
那给它一个错误

43:40.130 --> 43:40.530
错误呢

43:40.530 --> 43:42.630
就是我们后端返回的这个

43:42.730 --> 43:43.930
错误描述信息

43:44.130 --> 43:45.130
我们可以来试一下

43:45.130 --> 43:47.430
比如说现在做一个错误的等路

43:49.130 --> 43:51.030
哎这里面感觉好没有啊

43:51.030 --> 43:52.030
他咱们再来试一下

43:52.030 --> 43:53.630
adm123qw

43:53.630 --> 43:54.630
我们再来

43:56.030 --> 43:57.130
密码错误对不对

43:57.230 --> 43:57.630
然后呢

43:57.630 --> 43:59.030
这个就是没等路成功

43:59.430 --> 44:00.430
然后如果说呢

44:00.430 --> 44:01.330
你要成功呢

44:01.430 --> 44:03.730
这里面是一个错误的处理

44:03.930 --> 44:04.330
假如说呢

44:04.330 --> 44:05.130
你要错误了

44:05.130 --> 44:07.130
首先我给你弹窗弹出来之后

44:07.230 --> 44:07.730
并且呢

44:07.730 --> 44:09.130
给你return掉啊

44:09.130 --> 44:11.530
也就是说不让你再进行执行了

44:11.630 --> 44:12.430
那接下来呢

44:12.430 --> 44:13.330
我们要给它

44:13.330 --> 44:15.230
把这个用户的一个什么

44:15.530 --> 44:16.230
信息啊

44:16.230 --> 44:18.030
我们要给它一个存储

44:18.330 --> 44:20.330
那我们就 session storage

44:20.430 --> 44:21.130
这里面呢

44:21.130 --> 44:22.830
就是set item

44:22.830 --> 44:23.930
给它做一个存储

44:24.030 --> 44:24.630
怎么存储呢

44:24.630 --> 44:27.430
我们存储的名字叫 user profile

44:28.930 --> 44:30.930
好了存储一个 user profile

44:30.930 --> 44:31.530
它的值呢

44:31.530 --> 44:32.430
就是我们的data

44:32.430 --> 44:34.530
但这个前提是你登陆成功的

44:34.530 --> 44:35.730
咱们来看一下行不行

44:36.530 --> 44:37.530
比如说我这里面

44:37.530 --> 44:38.930
选择一个正确的等路

44:38.930 --> 44:41.530
adm123456

44:41.530 --> 44:43.030
那这个是我们都知道

44:44.030 --> 44:45.030
又重新加载了

44:45.030 --> 44:46.030
123456

44:46.130 --> 44:46.530
这个呢

44:46.530 --> 44:47.630
是一个正确的

44:47.630 --> 44:48.730
我们点击登陆

44:49.730 --> 44:49.930
好的

44:49.930 --> 44:51.830
当我正确登陆成功之后

44:51.830 --> 44:53.930
那这个时候应该是已经ok了

44:53.930 --> 44:54.530
对吧

44:54.530 --> 44:55.930
前提是ok之后

44:55.930 --> 44:56.630
这个里面

44:56.630 --> 44:58.130
我们状态已经完成了

44:58.330 --> 44:59.330
完成了之后

44:59.330 --> 45:00.530
这里面有一个爆错

45:01.130 --> 45:02.230
session storage

45:02.230 --> 45:03.330
我们先来看一下

45:07.560 --> 45:09.160
session storage

45:10.160 --> 45:10.460
好的

45:10.460 --> 45:11.560
那咱们再来试一下

45:11.860 --> 45:13.360
而且刚才同学们看到了

45:13.360 --> 45:14.760
如果说我这个接口啊

45:14.960 --> 45:15.960
里面有错误之后

45:15.960 --> 45:17.460
好像这个loading一直在转

45:17.460 --> 45:17.760
是吧

45:17.760 --> 45:18.560
那我们来试一下

45:18.560 --> 45:19.560
是不是它的原因

45:19.860 --> 45:21.960
123456点击登陆

45:22.960 --> 45:23.460
成功了

45:23.460 --> 45:23.960
对吧

45:23.960 --> 45:24.660
那成功了

45:24.660 --> 45:25.360
它就补转了

45:25.360 --> 45:27.960
如果说你这个里面还有其他错误

45:27.960 --> 45:29.360
它是能给你补捉到的

45:29.360 --> 45:30.360
这个很智能

45:30.360 --> 45:30.860
不错

45:30.860 --> 45:31.660
挺好啊

45:31.660 --> 45:33.860
然后现在已经存储了

45:33.860 --> 45:35.060
我们先来验证一下

45:35.060 --> 45:36.760
这个session storage里面

45:36.760 --> 45:38.360
是不是有用户的信息

45:38.360 --> 45:39.360
那这个存储的时候

45:39.360 --> 45:40.460
存储的是一个什么

45:41.260 --> 45:42.560
obj的obj的类型

45:42.560 --> 45:43.560
显然不对啊

45:43.560 --> 45:44.960
那我们这个是什么

45:44.960 --> 45:45.760
这是一个对象

45:45.760 --> 45:46.260
那所以说

45:46.260 --> 45:47.760
session storage的时候

45:47.760 --> 45:49.360
我需要把它给做一个

45:49.360 --> 45:53.160
json.sdreamfile的

45:54.260 --> 45:55.260
这样一个操作

45:55.260 --> 45:57.360
也就是说给它变成一个什么

45:57.360 --> 45:59.760
变成一个字符创啊

45:59.760 --> 46:00.560
json字符创

46:01.460 --> 46:02.560
那这个存储完成之后

46:02.560 --> 46:04.160
我们什么时候使用呢

46:04.160 --> 46:05.760
这里面再重新来一次啊

46:07.760 --> 46:09.360
admin123456

46:09.360 --> 46:10.460
当我点击登陆之后

46:10.460 --> 46:10.760
ok

46:10.760 --> 46:12.260
这个值没有问题啊

46:12.260 --> 46:14.060
那什么时候来进行使用呢

46:14.060 --> 46:15.560
其实我出手话的时候

46:15.560 --> 46:17.360
我们最好是用什么呢

46:17.360 --> 46:19.260
我们不用闹这种形式

46:19.260 --> 46:21.960
我们是要把这个如果说去看一下

46:21.960 --> 46:23.160
当我们这个

46:23.160 --> 46:24.560
session storage里面

46:24.560 --> 46:26.260
有这个user profile的时候

46:26.260 --> 46:27.760
那我们就获取user profile

46:27.760 --> 46:28.760
是不是就可以了

46:28.760 --> 46:29.960
也就是说那这里面

46:29.960 --> 46:32.360
这句话就是session storage

46:32.360 --> 46:33.360
这个哎

46:33.360 --> 46:35.560
user profile把它站过来

46:35.560 --> 46:36.360
放到这个里面

46:38.260 --> 46:39.060
好不智能啊

46:39.060 --> 46:40.860
那咱们把它放到这啊

46:40.860 --> 46:41.460
然后呢

46:41.460 --> 46:42.560
session storage

46:42.560 --> 46:44.560
这个就是get item

46:44.560 --> 46:46.560
当前提你有可能是什么

46:46.560 --> 46:47.960
获取不到对不对

46:47.960 --> 46:48.960
session storage

46:48.960 --> 46:50.260
这点get item

46:50.260 --> 46:51.960
user profile

46:51.960 --> 46:52.660
如果说

46:52.660 --> 46:54.460
那我们现在这个里面啊

46:54.460 --> 46:56.260
假如说他要是有的话

46:56.260 --> 46:58.460
那这里面肯定是有值对不对

46:58.460 --> 46:59.460
有值的话

46:59.460 --> 47:02.060
我去给他做一个什么

47:02.060 --> 47:04.460
给他做一个json.pass对吧

47:05.860 --> 47:09.580
把它给解析出来啊

47:09.580 --> 47:11.280
当我解析出来他的时候

47:11.280 --> 47:12.280
如果说他没有值

47:12.280 --> 47:13.480
那是不是解析他

47:13.480 --> 47:14.480
没有什么意义啊

47:14.480 --> 47:15.280
没有值的话

47:15.280 --> 47:17.280
那我直接给他返回一个什么

47:17.280 --> 47:18.380
返回一个no

47:18.380 --> 47:19.380
是不是就可以了

47:19.380 --> 47:21.280
那这样就做到了一个什么呢

47:21.280 --> 47:22.680
当你有值的时候

47:22.680 --> 47:25.680
我从你的session storage里面来读取

47:25.680 --> 47:27.680
那这样速度是非常快的啊

47:27.680 --> 47:29.780
如果说你要是没有值

47:29.780 --> 47:31.780
那我直接的还是会使用这个

47:31.780 --> 47:34.280
no的形式来进行一个输出

47:34.280 --> 47:34.680
这个呢

47:34.680 --> 47:37.480
就是我们获取到应用信息存储的

47:37.480 --> 47:39.080
这样一个逻辑处理

47:39.080 --> 47:39.880
我们来试一下

47:41.180 --> 47:43.180
保证代码的一个正确线

47:43.180 --> 47:43.880
这里面呢

47:43.880 --> 47:45.180
因为现在是有值的

47:45.180 --> 47:47.080
我们先把它给清空

47:47.080 --> 47:49.480
当我有值刷新界面的时候

47:49.480 --> 47:50.980
那这个时候感觉没有错往

47:50.980 --> 47:51.580
ok

47:51.580 --> 47:52.180
没问题

47:52.180 --> 47:52.980
123

47:52.980 --> 47:53.780
我们来试一下

47:53.780 --> 47:54.980
123456

47:54.980 --> 47:56.580
当我点击登录

47:56.580 --> 47:58.580
你会发现现在存储上值了

47:58.580 --> 47:59.080
对不对

47:59.080 --> 48:00.280
那我们接下来啊

48:00.280 --> 48:02.080
也就是说下几课要做的事情

48:02.080 --> 48:03.380
其实非常简单啊

48:03.380 --> 48:04.880
我们直接的在这个里面

48:04.880 --> 48:06.080
下几课要做什么呢

48:06.080 --> 48:06.980
我们下几课

48:06.980 --> 48:09.280
是不是直接的就开始进行什么

48:09.280 --> 48:10.880
开始进行一个

48:10.880 --> 48:13.380
我们界面的一个跳转

48:13.380 --> 48:14.280
对不对

48:14.280 --> 48:15.580
也就是说把界面

48:15.580 --> 48:17.080
跳转过去是不是就可以了

48:18.280 --> 48:20.480
但是在界面跳转之前

48:20.480 --> 48:23.280
你要搞一些其他的相关配置

48:23.280 --> 48:23.980
也就是说

48:23.980 --> 48:25.880
那可能我们路由是动态获取的

48:25.880 --> 48:27.780
你这里面是不是还得处理一下路由啊

48:27.780 --> 48:28.480
而且呢

48:28.480 --> 48:30.480
我们界面跳转这个逻辑

48:30.480 --> 48:33.480
目前来看是当你登录成功之后要走

48:33.480 --> 48:35.880
但是我们其他的登录方式

48:35.880 --> 48:37.380
包括我们忘记冰瓦这一块

48:37.380 --> 48:38.980
是不是也需要处理一下

48:38.980 --> 48:39.880
那么本节课呢

48:39.880 --> 48:42.880
我们先实现这种基本的登录方式

48:42.880 --> 48:43.480
下几课呢

48:43.480 --> 48:46.580
我们就把这种手机号码加沿着码的形式

48:46.580 --> 48:47.980
来实现一下

48:47.980 --> 48:49.180
我们这几课就到这里

