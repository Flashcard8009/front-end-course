WEBVTT

00:01.460 --> 00:06.060
各位同学 大家好 这节课我们继续暗粒课程的一个学习

00:06.060 --> 00:12.060
那么本节课我们把暗粒里面涉及到的所有的路由页面做一个创建

00:12.060 --> 00:18.060
我们知道上节课已经分析过了 暗粒里面涉及到的页面大概可以分为两种

00:18.060 --> 00:22.860
首先第一种就是比较单一的 像这种登录界面 以及密码重置界面

00:22.860 --> 00:27.060
我们只需要一个表单就可以了 所以说我们定一个独立的layout

00:27.260 --> 00:33.260
像这种主页面展示的我们显示的这种界面 比如说公司的情况分析

00:33.260 --> 00:40.060
还有一些初心统计这种界面 它会有一个投布的公共投布 还有一个侧边篮

00:40.060 --> 00:44.660
所以说这种界面我们再存放到一个layout里面就OK了

00:44.660 --> 00:48.260
那么首先我们先来把这些页面都进行一个创建

00:49.660 --> 00:54.060
这个是我们上节课的基础的一个工程

00:54.060 --> 00:58.260
那在这个工程里面 我们就开始进行页面的一个定义

00:58.260 --> 01:02.660
首先我们定义了一个dashboard 对不对 那这个就是我们的图表界面

01:02.660 --> 01:07.660
我们可以看一下 图表界面就是我们员工分析这一个界面

01:07.660 --> 01:11.660
之后像初心统计员工这一些 我们都来创建一下

01:11.660 --> 01:16.260
我们一次的来创建 先点击退出 退出的时候我们可以看到

01:16.260 --> 01:20.860
这里面包含两个界面 一个是我们登录模块的页面

01:21.060 --> 01:24.060
还有一个是我们忘记密码之后的一个相关套座

01:24.060 --> 01:28.860
所以说我们先把这两个页面基础的这个模板先给它达见起来

01:29.460 --> 01:34.460
怎么来做 首先我们在pages文件夹下面 新建一个文件夹

01:34.460 --> 01:38.860
这个叫youters 那youters负责存放两个界面

01:38.860 --> 01:44.660
一个就是我们的login.jsX 他作为我们的登录界面

01:44.660 --> 01:47.860
至于里面的两种登录的模式

01:47.860 --> 01:52.860
我们可以在这个里面使用组件来进行一个切换

01:52.860 --> 01:55.860
先写上一个文字描述 登录界面 OK

01:56.860 --> 02:00.860
登录界面创建完成之后 我们再新建一个界面

02:00.860 --> 02:10.360
这个是忘记密码的一个操作 那叫forgot password.jsX

02:10.360 --> 02:16.360
把这个也定一下 这个是忘记密码 我们来写一下忘记密码

02:16.360 --> 02:21.360
好了 定义完这个之后 那youters基本上只要有这两个界面就可以了

02:21.360 --> 02:24.360
完成之后 那我们继续来创建dashboard

02:24.360 --> 02:28.360
也就是说我们这个公司情况的一个分析界面已经定义好了

02:28.360 --> 02:32.360
那这个里面 我们让它保证这个清洁就OK了

02:32.360 --> 02:36.360
我们可以把它的这个界面里面的内容给做一些更改

02:36.360 --> 02:39.360
比如说这个叫公司情况分析

02:41.360 --> 02:45.360
情况分析界面 OK 创建完成之后这个就好了

02:45.360 --> 02:48.360
好了之后 那我们继续定义其他的界面

02:48.360 --> 02:51.360
下一个界面是什么呢 我们来看一下 在这里面

02:51.360 --> 02:55.360
咱们先进行一个登录 来的 慢

02:55.360 --> 02:59.360
登录成功之后 这里面有一个初勤统计

02:59.360 --> 03:04.360
那我这里面再定一下初勤统计 初勤统计叫attendance

03:04.360 --> 03:09.360
attendance界面 我们定义好一个文件夹之后

03:09.360 --> 03:13.360
在这里面创建一个index.jsX

03:13.360 --> 03:20.120
然后在这里面来写一下 OK 名字咱们也是用相同的就可以

03:20.120 --> 03:23.120
比如说这个也叫attendance

03:23.120 --> 03:27.120
那这个界面就是我们初勤统计的界面

03:27.120 --> 03:31.120
在这里面给它改一下 叫初勤统计界面

03:31.120 --> 03:34.120
OK 定义好之后 这里面又定义了一个界面

03:34.120 --> 03:38.120
继续来进行创建 那之后就是我们的员工管理界面

03:38.120 --> 03:42.120
员工管理界面 我们可以叫它staff 员工管理

03:42.120 --> 03:47.120
对吧 直接在这里面定一下 同样的index.jsX

03:47.120 --> 03:52.120
然后把它也来进行定一下 这个叫staff

03:52.120 --> 03:58.120
然后在这里面指定一下文字描述 员工管理界面

03:58.120 --> 04:01.120
好了 这个也创建完成了 创建完成之后

04:01.120 --> 04:05.120
那我再继续的来做 这个叫部门管理

04:05.120 --> 04:10.120
部门管理我们就叫department

04:10.120 --> 04:15.120
OK 创建好了之后 index.jsX

04:15.120 --> 04:20.120
这个也是改一下名字

04:20.120 --> 04:23.120
department

04:23.120 --> 04:28.120
然后在这里面给它一个中文描述 员工管理界面

04:28.120 --> 04:32.120
好 定义完成之后 这又一个之后 我们再继续定义

04:32.120 --> 04:37.120
部门管理完成之后 就应该是我们的这个直级管理界面了

04:37.120 --> 04:41.120
我们可以来看一下 当部门完成之后 就是这个直级

04:41.120 --> 04:45.120
直级呢 我们这里面取名叫level

04:45.120 --> 04:50.120
OK 在这里面定一个index.jsX

04:50.120 --> 04:53.120
我们也可以自己手动输入 当然了这个

04:53.120 --> 04:56.120
如果说我们可以使用一些相关的插件

04:56.120 --> 05:01.120
然后呢 你可以快速的实现我们一个磨板的一个构建

05:01.120 --> 05:04.120
那这种插件是哪一个 我们可以搜索

05:04.120 --> 05:07.120
在这个里面 跟同学们说一下 你搜索react之后

05:07.120 --> 05:11.120
这里面就有一些相关的插件 我这里面使用的是

05:11.120 --> 05:15.120
es7reactrex的这一个插件 它就有这种磨板

05:15.120 --> 05:20.120
然后快捷键呢 我们直接的输入下指定的一个快捷键就可以了

05:20.120 --> 05:27.120
这个呢 是我们的直级管理 这里面写一下 直级管理界面

05:27.120 --> 05:31.120
OK 创建完成之后 继续啊 直级管理完成之后

05:31.120 --> 05:34.120
就应该是我们的这个计校考核这一块了

05:34.120 --> 05:37.120
计校考核这一块 也就是assentment

05:37.120 --> 05:43.120
把它呢 也来进行一个定义 这里面定一个assentment index

05:43.120 --> 05:47.120
然后是.jsX OK

05:47.120 --> 05:56.120
assentment这个就是应该是计校考核 计校考核界面

05:56.120 --> 06:00.120
OK 这个就完成了 完成之后 我们继续的来

06:00.120 --> 06:03.120
那计校考核完成之后 就是调新了

06:03.120 --> 06:09.120
调新呢 就是salary啊 把它也给定一下

06:09.120 --> 06:16.120
salary 然后我们这个来指定一下它的index.jsX

06:16.120 --> 06:22.430
好的 那这个我们叫salary啊 定义完成之后

06:22.430 --> 06:29.320
把中文描述也来写一下 这个是调新记录

06:29.320 --> 06:32.320
好 调新记录模块 我们也创建完成之后

06:32.320 --> 06:37.320
这里面呢 就应该是讲乘记录了 讲乘记录 我们也来写一下

06:37.320 --> 06:42.320
讲乘记录 在这个里面创建一下 这个应该叫什么

06:42.320 --> 06:46.320
reward code 对吧 我们来写一下

06:46.320 --> 06:52.950
reward code啊 计校考核

06:52.950 --> 06:59.330
好 定义完了 index.jsX 在这里面写一下

06:59.330 --> 07:03.330
reward code

07:03.330 --> 07:06.330
reward code

07:06.330 --> 07:12.330
好 定义完成之后 给它一个中文描述 那这个就叫讲乘记录

07:12.330 --> 07:17.330
讲乘啊 讲乘记录

07:17.330 --> 07:20.330
ok 创建完成之后 还剩最后一个了

07:20.330 --> 07:23.330
我们来看一下 就是一个考勤信息了

07:23.330 --> 07:26.330
那我们最后再来定一个考勤信息

07:26.330 --> 07:30.330
在这个里面 考勤信息应该是

07:30.330 --> 07:34.330
谈词info 然后是info

07:34.330 --> 07:38.330
谈词info 我们这个 定义完成之后

07:38.330 --> 07:42.330
这里面 index.jsX

07:42.330 --> 07:46.330
你在定义名字的时候 尽量和我们文件夹名字要一致

07:46.330 --> 07:50.330
如果说 你这个要拼写 怕是错误的话

07:50.330 --> 07:53.330
怎么办 直接复制粘贴也可以啊

07:53.330 --> 07:56.330
这个是考勤信息 界面

07:56.330 --> 08:01.330
这些界面就是我们所需要的一些主要的界面

08:01.330 --> 08:03.330
然后这些界面定义完成之后

08:03.330 --> 08:05.330
现在我们还需要一个界面 是什么呢

08:05.330 --> 08:08.330
当我们所有的路由没有匹配上的情况下

08:08.330 --> 08:11.330
这里面会有一个404展示

08:11.330 --> 08:14.330
所以说 我在这里面再定一个404配置

08:14.330 --> 08:18.330
也就是说 当我们路由完全没有匹配的时候

08:18.330 --> 08:21.330
让它进行一个显示的界面

08:21.330 --> 08:24.330
这里面我们就写一个404配置

08:24.330 --> 08:27.330
index.jsX

08:27.330 --> 08:30.330
然后呢 这个定义的时候 名字呢

08:30.330 --> 08:32.330
我起一个叫什么 叫naughtfund

08:32.330 --> 08:34.330
没有找到 对吧

08:34.330 --> 08:36.330
然后在这个里面 我们写一下

08:36.330 --> 08:39.330
这个叫404配置

08:39.330 --> 08:41.330
好了 基本上都定义完了

08:41.330 --> 08:43.330
定义完成之后 接来就开始

08:43.330 --> 08:46.330
验证我们这些界面的时刻了 已经到了

08:46.330 --> 08:49.330
那第一个呢 我们先把这个

08:49.330 --> 08:51.330
每一个界面来做一个验证

08:51.330 --> 08:52.330
那怎么来验证呢

08:52.330 --> 08:54.330
因为我们这个里面 磨板里面

08:54.330 --> 08:57.330
是有好多这个 其他的相关内容的

08:57.330 --> 09:00.330
这个怎么办 我们直接可以先把它干掉

09:00.330 --> 09:02.330
就是说 我们先展示的时候

09:02.330 --> 09:04.330
不需要这个基础磨板里的

09:04.330 --> 09:06.330
头部和这个其他内容

09:06.330 --> 09:09.330
我们回到工程里面 打开layouts

09:09.330 --> 09:12.330
这里面有一个index.js

09:12.330 --> 09:14.330
现在只需要让它展示

09:14.330 --> 09:16.330
一个催准就可以了

09:16.330 --> 09:18.330
因为我们这个时候呢

09:18.330 --> 09:20.330
现在啊 还没有进行磨板的划分

09:20.330 --> 09:22.330
一会儿磨板划分完成之后呢

09:22.330 --> 09:25.330
这个里面啊 会展示指定的当前的路由

09:25.330 --> 09:27.330
也就是说 跟这个磨板有关的路由

09:27.330 --> 09:29.330
我们才进行展示

09:29.330 --> 09:31.330
其他的呢 不进行展示就ok了

09:31.330 --> 09:34.330
依次的来进行一个查看

09:34.330 --> 09:35.330
那怎么来进行查看呢

09:35.330 --> 09:37.330
我们这里面可以来看一下

09:37.330 --> 09:39.330
首先呢 是我们的这个logan界面

09:39.330 --> 09:41.330
我们依次的来看一下

09:41.330 --> 09:44.330
到这个logan下面

09:44.330 --> 09:46.330
logan没有成立啊

09:46.330 --> 09:47.330
这是为什么

09:47.330 --> 09:48.330
我跟同学们讲一下

09:48.330 --> 09:49.330
打到pages

09:49.330 --> 09:51.330
pages下面这个里面

09:51.330 --> 09:53.330
我们刚才说了

09:53.330 --> 09:54.330
youders咱先不要

09:54.330 --> 09:55.330
这是上级课的内容

09:55.330 --> 09:56.330
把它干掉

09:56.330 --> 09:58.330
youders下面有两个

09:58.330 --> 09:59.330
一个是logan

09:59.330 --> 10:01.330
一个是forget password的

10:01.330 --> 10:02.330
所以说你这个呢

10:02.330 --> 10:04.330
就会产生一个二级路由的问题

10:04.330 --> 10:05.330
那我这里面

10:05.330 --> 10:07.330
首先第一级路由是youders

10:07.330 --> 10:08.330
那第二级路由

10:08.330 --> 10:10.330
才是我们的这个logan

10:10.330 --> 10:11.330
对不对

10:11.330 --> 10:12.330
那这样当路界面

10:12.330 --> 10:13.330
就展示出来了

10:13.330 --> 10:14.330
这是第一个

10:14.330 --> 10:15.330
那第二个呢

10:15.330 --> 10:20.330
我们再测试forget password的

10:20.330 --> 10:21.330
忘记密码

10:21.330 --> 10:22.330
是不是也没问题

10:22.330 --> 10:23.330
对不对

10:23.330 --> 10:24.330
它也展示出来了

10:24.330 --> 10:26.330
然后依次的去查看

10:26.330 --> 10:27.330
我们一些

10:27.330 --> 10:28.330
主界面里面的内容

10:28.330 --> 10:30.330
比如说这个dashboard

10:30.330 --> 10:31.330
我们来看一下

10:31.330 --> 10:34.330
它能否正常展示dashboard

10:34.330 --> 10:35.330
那这个路由呢

10:35.330 --> 10:37.330
我们得进行一个调整

10:37.330 --> 10:39.330
因为刚才youders是二级路由

10:39.330 --> 10:41.330
我们dashboard是一级路由

10:41.330 --> 10:42.330
我这样来输入

10:42.330 --> 10:44.330
公司情况分析没有问题

10:44.330 --> 10:45.330
对不对

10:45.330 --> 10:47.330
那我们依次的来进行一个测试

10:47.330 --> 10:48.330
就可以了

10:48.330 --> 10:51.330
首先是这个404配置

10:51.330 --> 10:52.330
这个呢

10:52.330 --> 10:53.330
同学们一定要测试一下

10:53.330 --> 10:55.330
404配置没有问题

10:55.330 --> 10:57.330
然后是这个assignment

10:57.330 --> 11:00.330
我这样给他做一个

11:00.330 --> 11:03.330
不知assignment技校考核

11:03.330 --> 11:05.330
我看依次的你去查看一下

11:05.330 --> 11:07.330
当这个都没有问题之后

11:07.330 --> 11:09.330
那就保证我们一个正常开发

11:09.330 --> 11:10.330
然后呢

11:10.330 --> 11:11.330
我们这里面还需要做一件事情

11:11.330 --> 11:12.330
上几个的内容呢

11:12.330 --> 11:14.330
有一些我们就不需要了

11:14.330 --> 11:15.330
我们可以在这个里面

11:15.330 --> 11:17.330
把tash.js

11:17.330 --> 11:20.330
和这个index.last

11:20.330 --> 11:22.330
包括index.js

11:22.330 --> 11:24.330
我们都给他干掉

11:24.330 --> 11:25.330
干掉之后

11:25.330 --> 11:26.330
那现在呢

11:26.330 --> 11:27.330
我们为了检查一下

11:27.330 --> 11:28.330
怎么来看呢

11:28.330 --> 11:30.330
刚才咱们已经说过了

11:30.330 --> 11:31.330
在之前

11:31.330 --> 11:32.330
我们的这个

11:32.330 --> 11:33.330
靠里面

11:33.330 --> 11:34.330
文件家里面有一个

11:34.330 --> 11:35.330
router.js

11:35.330 --> 11:36.330
你会发现

11:36.330 --> 11:37.330
我们定义的这些内容

11:37.330 --> 11:38.330
基本上已经

11:38.330 --> 11:39.330
全部都进入了

11:39.330 --> 11:40.330
对不对

11:40.330 --> 11:41.330
可以测试一个

11:41.330 --> 11:43.330
在这个测试一个sare

11:43.330 --> 11:44.330
那这里面

11:44.330 --> 11:45.330
我们回车

11:45.330 --> 11:47.330
调新记录模块

11:47.330 --> 11:48.330
没有任何问题

11:48.330 --> 11:50.330
是不是recode

11:50.330 --> 11:51.330
reward

11:51.330 --> 11:52.330
recode

11:52.330 --> 11:53.330
也没有问题

11:53.330 --> 11:54.330
然后呢

11:54.330 --> 11:55.330
我们依次都试一下吧

11:55.330 --> 11:56.330
比如说这个来往

11:56.330 --> 11:57.330
ok

11:57.330 --> 11:59.330
这个里面就是来往回车

11:59.330 --> 12:00.330
也没有问题

12:00.330 --> 12:01.330
好的

12:01.330 --> 12:02.330
当全部都没有问题之后

12:02.330 --> 12:03.330
这个呢

12:03.330 --> 12:04.330
就保证我们所有的页面

12:04.330 --> 12:05.330
都加在完成了

12:05.330 --> 12:06.330
那加在完成之后

12:06.330 --> 12:07.330
接下来呢

12:07.330 --> 12:09.330
我们就开始进行一个

12:09.330 --> 12:11.330
磨板的这样一个操作

12:11.330 --> 12:12.330
就ok了

12:12.330 --> 12:14.330
那么磨板怎么来定义呢

12:14.330 --> 12:16.330
由于我们当前展示的

12:16.330 --> 12:17.330
UI介面分为两种

12:17.330 --> 12:19.330
所以说我们需要

12:19.330 --> 12:20.330
使用两种磨板

12:20.330 --> 12:22.330
进行一个layout的

12:22.330 --> 12:23.330
一个制定

12:23.330 --> 12:25.330
那么首先第一步呢

12:25.330 --> 12:27.330
我们就是创建一个用户登录

12:27.330 --> 12:29.330
以及忘记密码的

12:29.330 --> 12:30.330
一个基础磨板

12:30.330 --> 12:32.330
我们就来写一下

12:32.330 --> 12:33.330
怎么来做

12:33.330 --> 12:35.330
回到我们的这个代码里面

12:35.330 --> 12:37.330
到这个里面

12:37.330 --> 12:38.330
首先找到

12:38.330 --> 12:39.330
我们的这个layout

12:39.330 --> 12:40.330
index磨板

12:40.330 --> 12:41.330
肯定是基础磨板

12:41.330 --> 12:43.330
它不会发生改变的

12:43.330 --> 12:44.330
在这个里面呢

12:44.330 --> 12:45.330
我们写两个

12:45.330 --> 12:46.330
比如说这个叫

12:46.330 --> 12:47.330
login

12:47.330 --> 12:48.330
layout

12:49.330 --> 12:50.330
ok

12:50.330 --> 12:51.330
那这个呢

12:51.330 --> 12:52.330
就使用文件的形式

12:52.330 --> 12:53.330
就可以啊

12:53.330 --> 12:54.330
我在这里面

12:54.330 --> 12:55.330
创建一个文件

12:55.330 --> 12:56.330
login

12:56.330 --> 12:57.330
其实呢

12:57.330 --> 12:58.330
它也是磨板组件

12:58.330 --> 13:00.330
所以说我用大写的形式啊

13:00.330 --> 13:03.330
loginlayout.js

13:05.330 --> 13:06.330
把它指定好

13:06.330 --> 13:07.330
那这个呢

13:07.330 --> 13:08.330
就作为我们登录

13:08.330 --> 13:09.330
或者是忘记密码的

13:09.330 --> 13:10.330
一个磨板

13:10.330 --> 13:11.330
之后呢

13:11.330 --> 13:12.330
我们再进行一个定义

13:12.330 --> 13:13.330
再定义的时候

13:13.330 --> 13:14.330
我们就写一个

13:14.330 --> 13:15.330
被子layout的

13:15.330 --> 13:16.330
那这个作为我们

13:16.330 --> 13:18.330
基础的磨板啊

13:19.330 --> 13:22.330
被子layout.js

13:22.330 --> 13:23.330
ok

13:25.770 --> 13:26.770
定义好了之后

13:26.770 --> 13:27.770
两个磨板

13:27.770 --> 13:28.770
咱们现在就创建完成了

13:28.770 --> 13:29.770
那现在两个磨板

13:29.770 --> 13:30.770
创建完成呢

13:30.770 --> 13:31.770
我们要考虑一件事情

13:31.770 --> 13:32.770
是什么事情呢

13:32.770 --> 13:34.770
就是说当一页面啊

13:34.770 --> 13:36.770
我们直接的现代

13:36.770 --> 13:37.770
如果说是在level

13:37.770 --> 13:38.770
或者是datsbal的

13:38.770 --> 13:40.770
这种界面的时候

13:40.770 --> 13:41.770
那我们可能展示的呢

13:41.770 --> 13:43.770
就是被子layout

13:43.770 --> 13:44.770
那如何在登录

13:44.770 --> 13:45.770
见面展示呢

13:45.770 --> 13:46.770
这个时候

13:46.770 --> 13:47.770
我们就需要

13:47.770 --> 13:48.770
进行对它的一个

13:48.770 --> 13:50.770
路由的一个判断了

13:50.770 --> 13:51.770
也就是说

13:51.770 --> 13:52.770
那你现在在youtel

13:52.770 --> 13:54.770
下面的login下面

13:54.770 --> 13:55.770
那你就展示

13:55.770 --> 13:56.770
用户登录的

13:56.770 --> 13:57.770
那个磨板

13:57.770 --> 13:58.770
是不是就可以了

13:58.770 --> 13:59.770
ok

13:59.770 --> 14:00.770
这个没展示出来啊

14:00.770 --> 14:01.770
我们看一下

14:01.770 --> 14:02.770
youtelogen

14:02.770 --> 14:03.770
刚才是可以的

14:03.770 --> 14:04.770
我们来瞧眼啊

14:04.770 --> 14:05.770
index.js

14:06.770 --> 14:10.770
下面的我们的youtels

14:10.770 --> 14:13.770
应该是少了一个s

14:13.770 --> 14:15.770
好的这样就可以了

14:15.770 --> 14:16.770
然后呢

14:16.770 --> 14:17.770
我们说这个磨板

14:17.770 --> 14:18.770
在做的时候

14:18.770 --> 14:19.770
我们要进行一个

14:19.770 --> 14:20.770
路由界面的判断

14:20.770 --> 14:22.770
那怎么来判断呢

14:22.770 --> 14:23.770
我们可以使用一个函数

14:23.770 --> 14:24.770
那判断什么呢

14:24.770 --> 14:25.770
判断我们当前

14:25.770 --> 14:28.770
路由的一个文件的路径

14:28.770 --> 14:29.770
也就是说

14:29.770 --> 14:30.770
那他只要包含youtels

14:30.770 --> 14:32.770
我就让他使用这种

14:32.770 --> 14:34.770
login layout

14:34.770 --> 14:35.770
假如说他不包含呢

14:35.770 --> 14:36.770
比如说他不是

14:36.770 --> 14:37.770
当路界面

14:37.770 --> 14:38.770
和忘记密码界面

14:38.770 --> 14:39.770
那我就让他使用

14:39.770 --> 14:40.770
这种背的layout

14:40.770 --> 14:41.770
就可以了对不对

14:41.770 --> 14:42.770
这个呢

14:42.770 --> 14:43.770
就是我们实现的

14:43.770 --> 14:44.770
一个思路啊

14:44.770 --> 14:45.770
那我们现在呢

14:45.770 --> 14:46.770
就可以写一个

14:46.770 --> 14:48.770
判断路径的函数

14:48.770 --> 14:49.770
怎么来写呢

14:49.770 --> 14:53.770
我们创建一个youtels文件家

14:53.770 --> 14:55.770
把我们一些

14:55.770 --> 14:57.770
使用的函数的方法

14:57.770 --> 14:58.770
都在这个里面定义

14:58.770 --> 14:59.770
首先呢

14:59.770 --> 15:00.770
我定一个什么呢

15:00.770 --> 15:03.770
定一个select layout

15:03.770 --> 15:06.770
那么一个js文件啊

15:06.770 --> 15:09.770
select layout.js

15:09.770 --> 15:10.770
那这个呢

15:10.770 --> 15:12.770
我就专门导出一个方法

15:12.770 --> 15:15.770
export const

15:15.770 --> 15:16.770
我们就导出

15:16.770 --> 15:18.770
一个select layout

15:18.770 --> 15:19.770
这么一个方法

15:19.770 --> 15:20.770
接收一个什么呢

15:20.770 --> 15:22.770
接收一个passname

15:22.770 --> 15:23.770
这个呢

15:23.770 --> 15:24.770
是需要我们这个

15:24.770 --> 15:25.770
方法使用的时候

15:25.770 --> 15:27.770
给我们传递的一个值

15:27.770 --> 15:29.770
那这个值里面

15:29.770 --> 15:30.770
我们就来判断一下

15:30.770 --> 15:31.770
Return一个什么呢

15:31.770 --> 15:32.770
我们这里面

15:32.770 --> 15:33.770
passname

15:33.770 --> 15:36.770
是否包含我们一个什么

15:36.770 --> 15:37.770
直接这里面

15:37.770 --> 15:39.770
如果说他要包含youter

15:39.770 --> 15:40.770
那现在就说明

15:40.770 --> 15:41.770
他是一个登录

15:41.770 --> 15:43.770
或者是忘记密码

15:43.770 --> 15:44.770
这样一个操作对不对

15:44.770 --> 15:45.770
那这个时候

15:45.770 --> 15:46.770
我使用模板

15:46.770 --> 15:47.770
就使用什么呢

15:47.770 --> 15:48.770
我这里面

15:48.770 --> 15:49.770
可以使用这种

15:49.770 --> 15:51.770
login layout.js

15:51.770 --> 15:52.770
也就是说

15:52.770 --> 15:53.770
那这个时候

15:53.770 --> 15:54.770
我就可以把它

15:54.770 --> 15:55.770
定义为login layout

15:55.770 --> 15:56.770
否则呢

15:56.770 --> 15:57.770
那我就使用什么模板呢

15:57.770 --> 15:58.770
我这里面

15:58.770 --> 15:59.770
就可以使用这种

16:00.770 --> 16:01.770
对吧

16:02.770 --> 16:03.770
这样一个

16:03.770 --> 16:04.770
sorry啊

16:04.770 --> 16:05.770
这个里面再写一下

16:06.770 --> 16:07.770
那如果说

16:07.770 --> 16:09.770
这个定义好了之后

16:09.770 --> 16:10.770
那我们现在呢

16:10.770 --> 16:12.770
就可以在模板文件里面

16:12.770 --> 16:14.770
来进行一个选择了

16:14.770 --> 16:15.770
那我们来决定

16:15.770 --> 16:16.770
是否使用当前

16:16.770 --> 16:17.770
哪一个模板

16:17.770 --> 16:18.770
来进行宣展

16:18.770 --> 16:19.770
是不是就OK了

16:19.770 --> 16:20.770
对吧

16:20.770 --> 16:21.770
回到哪呢

16:21.770 --> 16:22.770
回到我们的这个

16:22.770 --> 16:23.770
index.js

16:23.770 --> 16:24.770
layout里面

16:24.770 --> 16:25.770
我们给他做一个

16:25.770 --> 16:26.770
导入

16:26.770 --> 16:27.770
input

16:27.770 --> 16:28.770
我们直接的

16:28.770 --> 16:29.770
功能函数

16:29.770 --> 16:30.770
给他导进来

16:30.770 --> 16:31.770
导进来之后

16:31.770 --> 16:32.770
那这个里面

16:32.770 --> 16:33.770
我们要写一下

16:33.770 --> 16:34.770
对不对

16:34.770 --> 16:35.770
那这种相对路径

16:35.770 --> 16:36.770
找比较麻烦

16:36.770 --> 16:37.770
而且呢

16:37.770 --> 16:38.770
我们每个界面的

16:38.770 --> 16:39.770
层级都不一样

16:39.770 --> 16:40.770
所以说

16:40.770 --> 16:41.770
那这里面就会

16:41.770 --> 16:42.770
涉及到一个问题

16:42.770 --> 16:43.770
什么问题呢

16:43.770 --> 16:44.770
我们可以进行

16:44.770 --> 16:45.770
一个文件的别名

16:45.770 --> 16:46.770
应设

16:46.770 --> 16:47.770
也就是说

16:47.770 --> 16:49.770
配置一个less属性

16:49.770 --> 16:50.770
怎么来配置

16:50.770 --> 16:51.770
打开污名

16:51.770 --> 16:52.770
rc.ts

16:52.770 --> 16:53.770
首先呢

16:53.770 --> 16:54.770
我们在这个里面

16:54.770 --> 16:55.770
如果说

16:55.770 --> 16:56.770
要去做别名

16:56.770 --> 16:57.770
设

16:57.770 --> 16:58.770
一步呢

16:58.770 --> 16:59.770
先引入一个

16:59.770 --> 17:00.770
pass模块

17:00.770 --> 17:01.770
或者是呢

17:01.770 --> 17:02.770
我们直接的

17:02.770 --> 17:03.770
把他的

17:03.770 --> 17:04.770
rc.ts

17:04.770 --> 17:06.770
里面的一个方法

17:06.770 --> 17:07.770
给他

17:07.770 --> 17:08.770
加带出来

17:08.770 --> 17:09.770
就可以啊

17:09.770 --> 17:10.770
把这个

17:10.770 --> 17:11.770
rc.ts

17:11.770 --> 17:12.770
我们直接

17:12.770 --> 17:13.770
c.ts

17:13.770 --> 17:14.770
的rc.ts

17:14.770 --> 17:16.770
等于一个require

17:16.770 --> 17:17.770
这个呢

17:17.770 --> 17:18.770
是node.ts的

17:18.770 --> 17:19.770
一个模块

17:19.770 --> 17:20.770
我们在

17:20.770 --> 17:21.770
之前

17:21.770 --> 17:22.770
学习node.ts

17:22.770 --> 17:23.770
的时候

17:23.770 --> 17:24.770
都有接触过他

17:24.770 --> 17:25.770
从pass里面

17:25.770 --> 17:26.770
引出rc.ts

17:26.770 --> 17:27.770
然后配置

17:27.770 --> 17:28.770
我在这个文档里面

17:28.770 --> 17:29.770
有说明

17:29.770 --> 17:30.770
我们可以往下翻

17:30.770 --> 17:31.770
这里面有一个

17:31.770 --> 17:32.770
别名定义

17:32.770 --> 17:33.770
那这里面呢

17:33.770 --> 17:34.770
其实就是给这个

17:34.770 --> 17:35.770
define props

17:35.770 --> 17:36.770
增加一个

17:36.770 --> 17:38.770
less属性

17:38.770 --> 17:39.770
我们可以把它

17:39.770 --> 17:40.770
做一个粘贴啊

17:41.770 --> 17:42.770
在这个define

17:42.770 --> 17:43.770
config

17:43.770 --> 17:44.770
下面

17:44.770 --> 17:45.770
我们做一个

17:45.770 --> 17:46.770
什么呢

17:46.770 --> 17:47.770
less属性的添加

17:47.770 --> 17:48.770
属性添加

17:48.770 --> 17:49.770
时候

17:49.770 --> 17:50.770
我们这里面

17:50.770 --> 17:51.770
把这些

17:51.770 --> 17:52.770
没用到的

17:52.770 --> 17:53.770
咱们先给他干掉

17:53.770 --> 17:54.770
因为现在咱不需要

17:54.770 --> 17:55.770
先给他注释掉

17:55.770 --> 17:56.770
一个utus

17:56.770 --> 17:57.770
utus

17:57.770 --> 17:58.770
就是我们需要

17:58.770 --> 17:59.770
做别名定设的

17:59.770 --> 18:00.770
如果说你去

18:00.770 --> 18:01.770
访问utus

18:01.770 --> 18:02.770
那这时候

18:02.770 --> 18:03.770
我就去直接

18:03.770 --> 18:04.770
加在src

18:04.770 --> 18:06.770
下面的utus

18:06.770 --> 18:07.770
就ok了

18:07.770 --> 18:08.770
之后我就能找到

18:08.770 --> 18:09.770
这个select

18:09.770 --> 18:10.770
layout这个模板

18:10.770 --> 18:11.770
之后你

18:11.770 --> 18:12.770
写完成了之后

18:12.770 --> 18:13.770
这个时候

18:13.770 --> 18:14.770
我们需要

18:14.770 --> 18:15.770
重新对服务

18:15.770 --> 18:16.770
进行一下开启

18:16.770 --> 18:17.770
因为这个

18:17.770 --> 18:18.770
你是修改了

18:18.770 --> 18:19.770
配置文件

18:19.770 --> 18:20.770
那他node

18:20.770 --> 18:21.770
工程要重新启动

18:21.770 --> 18:22.770
这时候

18:22.770 --> 18:23.770
这个别名定设

18:23.770 --> 18:24.770
才会有效

18:24.770 --> 18:25.770
注意一下

18:25.770 --> 18:26.770
完成之后

18:26.770 --> 18:27.770
那我们这个里面

18:27.770 --> 18:28.770
就给他开启

18:28.770 --> 18:29.770
这时候

18:29.770 --> 18:30.770
我们去找select

18:30.770 --> 18:31.770
layout

18:31.770 --> 18:32.770
就应该是

18:32.770 --> 18:34.770
从我们的utus

18:34.770 --> 18:35.770
那就是

18:35.770 --> 18:37.770
从utus

18:37.770 --> 18:38.770
下面的select

18:38.770 --> 18:39.770
layout

18:39.770 --> 18:40.770
来进行查找

18:40.770 --> 18:41.770
找到之后

18:41.770 --> 18:42.770
那这个咱不用管

18:42.770 --> 18:43.770
这个是因为什么

18:43.770 --> 18:44.770
TypeScript

18:44.770 --> 18:45.770
DS

18:45.770 --> 18:46.770
给我们做的

18:46.770 --> 18:47.770
一个检测的时候

18:47.770 --> 18:48.770
一个问题

18:48.770 --> 18:49.770
我们只要保证

18:49.770 --> 18:51.770
使用的时候

18:51.770 --> 18:52.770
这个文件名

18:52.770 --> 18:53.770
没有错误

18:53.770 --> 18:55.770
selectlayout

18:55.770 --> 18:57.770
没什么问题

18:57.770 --> 18:58.770
好的

18:58.770 --> 18:59.770
那我们在这个里面

18:59.770 --> 19:00.770
打印一下

19:00.770 --> 19:01.770
这个selectlayout

19:01.770 --> 19:02.770
看到有没有

19:02.770 --> 19:03.770
我们直接在这个里面

19:03.770 --> 19:07.770
打印一下selectlayout

19:07.770 --> 19:08.770
这么一个方法

19:08.770 --> 19:09.770
来

19:09.770 --> 19:10.770
咱们看一眼

19:10.770 --> 19:11.770
回到我们的代码里面

19:11.770 --> 19:12.770
你会发现

19:12.770 --> 19:13.770
这个时候

19:13.770 --> 19:14.770
已经有这个方法了

19:14.770 --> 19:15.770
对吧

19:15.770 --> 19:16.770
那这是第一步

19:16.770 --> 19:17.770
我们这个方法有了

19:17.770 --> 19:18.770
方法有了之后

19:18.770 --> 19:19.770
我们要做什么事呢

19:19.770 --> 19:20.770
既然我们已经

19:20.770 --> 19:22.770
订好了两个模板

19:22.770 --> 19:23.770
要做的第一件事情

19:23.770 --> 19:25.770
就是把这两个模板

19:25.770 --> 19:27.770
给它先进行一个倒入

19:27.770 --> 19:28.770
首先呢

19:28.770 --> 19:29.770
是倒入我们的这个

19:29.770 --> 19:30.770
Base Layout

19:30.770 --> 19:31.770
from

19:31.770 --> 19:32.770
从哪来

19:32.770 --> 19:33.770
从我们的点杠

19:33.770 --> 19:34.770
这个Base Layout

19:34.770 --> 19:35.770
给它引入

19:35.770 --> 19:36.770
之后呢

19:36.770 --> 19:40.770
我们再引入一个Logan Layout

19:40.770 --> 19:41.770
Logan Layout

19:41.770 --> 19:42.770
from点杠

19:42.770 --> 19:43.770
Logan Layout

19:43.770 --> 19:44.770
没有问题

19:44.770 --> 19:45.770
当你两个

19:45.770 --> 19:46.770
全部都引入完成之后

19:46.770 --> 19:47.770
那这个里面

19:47.770 --> 19:48.770
你就要做一个

19:48.770 --> 19:49.770
判断了

19:49.770 --> 19:50.770
对不对

19:50.770 --> 19:51.770
那判断一个什么呢

19:51.770 --> 19:52.770
选择哪一个Layout

19:52.770 --> 19:53.770
对不对

19:53.770 --> 19:54.770
那这里面

19:54.770 --> 19:55.770
我们就可以定一个什么呢

19:55.770 --> 19:59.140
Layout Map

19:59.140 --> 20:01.140
Layout Map

20:01.140 --> 20:02.140
等于一个什么呢

20:02.140 --> 20:03.140
等于一个对象

20:03.140 --> 20:04.140
这个对象里面呢

20:04.140 --> 20:06.140
就包含了这两个模板

20:06.140 --> 20:08.140
一个是我们的Base Layout

20:08.140 --> 20:11.140
还有一个是我们的Logan Layout

20:11.140 --> 20:12.140
ok

20:12.140 --> 20:13.140
这两个里面

20:13.140 --> 20:15.140
我们怎么进行选择呢

20:15.140 --> 20:16.140
那这个时候呢

20:16.140 --> 20:18.140
我们因为已经指定了

20:18.140 --> 20:19.140
这个Slekt Layout

20:19.140 --> 20:20.140
这么一个方法

20:20.140 --> 20:21.140
那这时候呢

20:21.140 --> 20:23.140
我们就可以通过

20:23.140 --> 20:24.140
Slekt Layout

20:24.140 --> 20:25.140
来进行判断了

20:25.140 --> 20:26.140
对不对

20:26.140 --> 20:27.140
但前提条件

20:27.140 --> 20:28.140
我们知道

20:28.140 --> 20:29.140
Slekt Layout

20:29.140 --> 20:30.140
刚才在我们定义的时候

20:30.140 --> 20:31.140
也就是说这个方法

20:31.140 --> 20:33.140
我们定义的时候

20:33.140 --> 20:35.140
是需要使用一个Path Name

20:35.140 --> 20:36.140
那这个Path Name

20:36.140 --> 20:37.140
是谁呢

20:37.140 --> 20:38.140
它呢

20:38.140 --> 20:39.140
其实就是我们

20:39.140 --> 20:40.140
当前路由的一个路径

20:40.140 --> 20:41.140
那这个路由路径

20:41.140 --> 20:42.140
我们怎么来获取

20:42.140 --> 20:43.140
其实这里面

20:43.140 --> 20:45.140
我们除了Hazard之外

20:45.140 --> 20:46.140
刚才咱们也看到了

20:46.140 --> 20:47.140
还有一个什么呢

20:47.140 --> 20:48.140
Location

20:48.140 --> 20:49.140
我们可以打印一下

20:49.140 --> 20:50.140
这个Location

20:50.140 --> 20:51.140
我刷新界面之后

20:51.140 --> 20:53.140
咱们把这个Location

20:53.140 --> 20:54.140
给做一个打印

20:54.140 --> 20:56.140
让同学们来看一下

20:57.140 --> 20:58.140
Location呢

20:58.140 --> 20:59.140
就是描述了

20:59.140 --> 21:00.140
当前的一个路由信息

21:00.140 --> 21:02.140
这里面有Path Name

21:02.140 --> 21:03.140
包括一些查询的

21:03.140 --> 21:04.140
字幕刷设置State

21:04.140 --> 21:05.140
当然我们只要什么

21:05.140 --> 21:07.140
只要这个Path Name

21:07.140 --> 21:08.140
是不是就可以了

21:08.140 --> 21:09.140
既然我们有了

21:09.140 --> 21:11.140
这个Path Name的话

21:11.140 --> 21:12.140
那这个时候

21:12.140 --> 21:13.140
我们就可以通过

21:13.140 --> 21:14.140
Slekt Layout

21:14.140 --> 21:15.140
是不是来判断了

21:15.140 --> 21:16.140
对不对

21:16.140 --> 21:17.140
那我们直接的

21:17.140 --> 21:18.140
在这个里面

21:18.140 --> 21:19.140
再创建一个变

21:19.140 --> 21:21.140
比如说Cons的Container

21:21.140 --> 21:23.140
Container等于一个什么呢

21:23.140 --> 21:24.140
我们直接在这个里面

21:24.140 --> 21:26.140
Layout Map

21:26.140 --> 21:28.140
然后呢去指定的时候

21:28.140 --> 21:29.140
我们就调用

21:29.140 --> 21:31.140
Slekt Layout这个方法

21:31.140 --> 21:32.140
并且呢

21:32.140 --> 21:35.140
我们把这个Location.Path Name

21:35.140 --> 21:37.140
给它进行一个传递

21:37.140 --> 21:38.140
对不对

21:38.140 --> 21:39.140
那这时候

21:39.140 --> 21:40.140
我们就能获取到

21:40.140 --> 21:43.140
一个当前需要渲染的

21:43.140 --> 21:44.140
哪一个模板的

21:44.140 --> 21:46.140
这么指定的一个过滤

21:47.140 --> 21:48.140
我们看一下

21:48.140 --> 21:49.140
这个时候呢

21:49.140 --> 21:51.140
是应该是有一个模板的

21:51.140 --> 21:52.140
对不对

21:52.140 --> 21:53.140
那至于这个模板是谁呢

21:53.140 --> 21:54.140
我们知道

21:54.140 --> 21:55.140
由于它匹配了

21:55.140 --> 21:57.140
上了一个Youters Login

21:57.140 --> 21:58.140
对不对

21:58.140 --> 21:59.140
我们再来看一下

21:59.140 --> 22:00.140
到这个里面

22:00.140 --> 22:02.140
应该是一个Youters

22:02.140 --> 22:04.140
咱们打印一个S

22:04.140 --> 22:05.140
那这时候

22:05.140 --> 22:06.140
它应该是匹配上

22:06.140 --> 22:07.140
我们登录见面

22:07.140 --> 22:08.140
对不对

22:08.140 --> 22:09.140
那这个时候

22:09.140 --> 22:10.140
我们就可以来

22:10.140 --> 22:11.140
进行使用了

22:11.140 --> 22:12.140
如何来进行使用

22:12.140 --> 22:13.140
那你这个时候

22:13.140 --> 22:14.140
我们就不去

22:14.140 --> 22:16.140
直接的去渲染

22:16.140 --> 22:17.140
我们要怎么做

22:17.140 --> 22:18.140
我们把这个container

22:18.140 --> 22:20.140
给它来进行一个什么

22:20.140 --> 22:21.140
因为咱们知道

22:21.140 --> 22:22.140
它是一个容器

22:22.140 --> 22:23.140
所以说

22:23.140 --> 22:24.140
我们在定义的时候

22:24.140 --> 22:26.140
这样使用大写container

22:26.140 --> 22:27.140
并且呢

22:27.140 --> 22:29.140
我们把它给来进行一个

22:29.140 --> 22:30.140
替换container

22:30.140 --> 22:31.140
ok

22:31.140 --> 22:32.140
那这样组件

22:32.140 --> 22:33.140
包裹了催油准

22:33.140 --> 22:34.140
它呢

22:34.140 --> 22:35.140
如果说

22:35.140 --> 22:36.140
你要是使用登录模板的话

22:36.140 --> 22:38.140
那你就在这个里面展示

22:38.140 --> 22:39.140
对不对

22:39.140 --> 22:40.140
那当然我这个

22:40.140 --> 22:41.140
选择完成之后呢

22:41.140 --> 22:42.140
我们其实在这个

22:42.140 --> 22:43.140
Logan Layout里面

22:43.140 --> 22:45.140
我们还要做一些事情

22:45.140 --> 22:46.140
为什么呢

22:46.140 --> 22:47.140
我们要把这个催油准

22:47.140 --> 22:48.140
给进行一个渲染

22:48.140 --> 22:49.140
对不对

22:49.140 --> 22:50.140
所以说呢

22:50.140 --> 22:51.140
我在这个里面

22:51.140 --> 22:52.140
咱们没有必要指定一个

22:52.140 --> 22:53.140
DIV字幕刷

22:53.140 --> 22:54.140
那首先把它

22:54.140 --> 22:56.140
使用一个空字幕刷

22:56.140 --> 22:58.140
这个时候咱们看一下

22:58.140 --> 22:59.140
这里面呢

22:59.140 --> 23:01.140
就会有一个probs

23:01.140 --> 23:02.140
咱们先打印一下

23:02.140 --> 23:05.140
probs咱们来看

23:05.140 --> 23:06.140
ok

23:06.140 --> 23:07.140
打印出来probs之后

23:07.140 --> 23:08.140
咱们来看一下

23:08.140 --> 23:09.140
它有什么

23:09.140 --> 23:10.140
这里面是不是有一个

23:10.140 --> 23:11.140
催油准呢

23:11.140 --> 23:12.140
催油准就是

23:12.140 --> 23:13.140
我们当前需要

23:13.140 --> 23:14.140
所以说呢

23:14.140 --> 23:15.140
那我直接在这个里面

23:15.140 --> 23:16.140
把这个催油准

23:16.140 --> 23:18.140
给它做一个解构

23:18.140 --> 23:19.140
这个时候呢

23:19.140 --> 23:21.140
我们就可以把催油准

23:21.140 --> 23:23.140
在这里面进行一个渲染

23:23.140 --> 23:25.140
我这里面定义催油准

23:25.140 --> 23:26.140
那我们捋一下这个过程

23:26.140 --> 23:27.140
首先是什么呢

23:27.140 --> 23:29.140
我们在这个layout里面

23:29.140 --> 23:30.140
分析出来当前

23:30.140 --> 23:32.140
用哪一个容器来作为承载

23:32.140 --> 23:33.140
那这个时候

23:33.140 --> 23:35.140
我把催油准放在里面

23:35.140 --> 23:37.140
之后催油准放在里面之后

23:37.140 --> 23:39.140
那现在我们这个Logan Layout

23:39.140 --> 23:40.140
那这个时候呢

23:40.140 --> 23:41.140
把这个催油准

23:41.140 --> 23:42.140
接收到之后

23:42.140 --> 23:44.140
在这个里面来进行渲染

23:44.140 --> 23:45.140
等于是什么呢

23:45.140 --> 23:48.140
我们又做了一层模板

23:48.140 --> 23:49.140
那这个模板呢

23:49.140 --> 23:51.140
就保证我们催油准的一个夹仔

23:51.140 --> 23:52.140
我们看一下

23:52.140 --> 23:53.140
当路见面

23:53.140 --> 23:54.140
没问题对不对

23:54.140 --> 23:55.140
我们还有一个什么

23:55.140 --> 23:57.140
forget password

23:57.140 --> 24:00.140
咱们也试一下

24:00.140 --> 24:02.140
OK 忘记密码没有问题

24:02.140 --> 24:03.140
那我们之后再试一下

24:03.140 --> 24:04.140
这个dashboard

24:04.140 --> 24:05.140
那dashboard

24:05.140 --> 24:06.140
肯定是不会显示了

24:06.140 --> 24:07.140
对不对

24:07.140 --> 24:08.140
因为这个路由匹配

24:08.140 --> 24:09.140
它是没有匹配上的

24:09.140 --> 24:10.140
那这个怎么办呢

24:10.140 --> 24:12.140
我们直接的

24:12.140 --> 24:13.140
定义完Logan Layout之后

24:13.140 --> 24:14.140
我们这个背的layout

24:14.140 --> 24:15.140
同样的这里面

24:15.140 --> 24:16.140
也会接收到什么

24:16.140 --> 24:18.140
我们的这个催油准

24:18.140 --> 24:19.140
把这个催油准

24:19.140 --> 24:20.140
接收到之后

24:20.140 --> 24:22.140
在这个里面来进行一个渲染

24:22.140 --> 24:23.140
同样的

24:23.140 --> 24:25.140
我们这个不需要使用一个DIV了

24:25.140 --> 24:27.140
那直接就使用一个公标签

24:27.140 --> 24:28.140
作为它的容器

24:28.140 --> 24:29.140
然后呢

24:29.140 --> 24:30.140
咱们再来看一下

24:30.140 --> 24:31.140
dashboard

24:31.140 --> 24:32.140
没有进行渲染

24:32.140 --> 24:33.140
这个原因是什么

24:33.140 --> 24:35.140
我们直接的到

24:35.140 --> 24:37.140
slag的layout里面

24:37.140 --> 24:38.140
直接的

24:38.140 --> 24:39.140
我们现代

24:39.140 --> 24:41.140
要看一下这个container容器

24:42.140 --> 24:44.140
我们container容器

24:44.140 --> 24:45.140
打印出来

24:45.140 --> 24:47.140
这个里面传递了一个催油准

24:47.140 --> 24:49.140
催油准传递之后

24:49.140 --> 24:51.140
应该是到我们的背的layout

24:51.140 --> 24:52.140
难道背的layout

24:52.140 --> 24:53.140
没有执行了

24:53.140 --> 24:54.140
我们到这里面

24:54.140 --> 24:55.140
来看一眼

24:55.140 --> 24:57.140
你会发现

24:57.140 --> 24:58.140
这个没有执行

24:58.140 --> 24:59.140
没有执行的原因是啥

24:59.140 --> 25:01.140
还是刚才这个问题

25:01.140 --> 25:02.140
我们Uther呢

25:02.140 --> 25:03.140
其实是刚才这个Logan

25:03.140 --> 25:06.140
以及Wagimima的2级路径

25:06.140 --> 25:08.140
所以说我把它给干掉

25:08.140 --> 25:09.140
那你会发现

25:09.140 --> 25:10.140
公司情况分析

25:10.140 --> 25:11.140
是不是就有了

25:11.140 --> 25:12.140
然后直接的

25:12.140 --> 25:13.140
我们如果说在这个

25:13.140 --> 25:15.140
背的layout里面

25:15.140 --> 25:16.140
我们就可以定义

25:16.140 --> 25:17.140
头部和侧边蓝了

25:17.140 --> 25:18.140
对不对

25:18.140 --> 25:19.140
比如说我们在这个里面

25:19.140 --> 25:21.140
给大家定一下

25:21.140 --> 25:22.140
简单的先写一下

25:22.140 --> 25:24.140
那这个里面就写一个

25:24.140 --> 25:25.140
h1

25:25.140 --> 25:26.140
我们先让它临时代替

25:26.140 --> 25:28.140
是头部之后

25:28.140 --> 25:30.140
我们再写一个侧边蓝

25:30.140 --> 25:32.140
这里面给它一个

25:32.140 --> 25:33.140
批标签

25:33.140 --> 25:35.140
这里面就写一个侧边蓝

25:36.140 --> 25:37.140
侧边蓝

25:37.140 --> 25:38.140
OK

25:38.140 --> 25:39.140
那你会发现

25:39.140 --> 25:40.140
这个时候

25:40.140 --> 25:41.140
它头部和侧边蓝

25:41.140 --> 25:42.140
是不是就有了

25:42.140 --> 25:44.140
这样就能慢慢的

25:44.140 --> 25:45.140
接近于我们

25:45.140 --> 25:47.140
按力完成的一个最终效果

25:47.140 --> 25:48.140
当然最后

25:48.140 --> 25:49.140
我们这个

25:49.140 --> 25:50.140
一会儿在制作的时候

25:50.140 --> 25:52.140
肯定要使用一个

25:52.140 --> 25:53.140
layout模板

25:53.140 --> 25:54.140
给它添加一些样式的

25:54.140 --> 25:55.140
这个

25:55.140 --> 25:56.140
我们不用担心

25:56.140 --> 25:57.140
然后这里面

25:57.140 --> 25:58.140
是Uther反斜

25:58.140 --> 25:59.140
刚有下面的Logan

25:59.140 --> 26:00.140
我们看一下

26:00.140 --> 26:01.140
它炫不炫染

26:01.140 --> 26:02.140
那这时候

26:02.140 --> 26:03.140
Uther下面的Logan

26:03.140 --> 26:04.140
它也炫染出来了

26:04.140 --> 26:06.140
那这个显然就不对

26:06.140 --> 26:07.140
我们来看一眼

26:07.140 --> 26:08.140
它为什么能炫出来

26:08.140 --> 26:09.140
因为这个里面

26:09.140 --> 26:11.140
应该是我们的什么Uthers

26:11.140 --> 26:12.140
对吧

26:12.140 --> 26:13.140
好了

26:13.140 --> 26:14.140
那这样是不是就对了

26:14.140 --> 26:15.140
因为刚才是没有找到吗

26:15.140 --> 26:16.140
没有找到的

26:16.140 --> 26:17.140
其实

26:17.140 --> 26:18.140
这个时候

26:18.140 --> 26:19.140
它就是没有匹配

26:19.140 --> 26:20.140
到我们登陆这个界面

26:20.140 --> 26:21.140
比如说

26:21.140 --> 26:22.140
我们这样

26:22.140 --> 26:23.140
这里面一挥车

26:23.140 --> 26:25.140
它没有匹配上

26:25.140 --> 26:26.140
它就去炫染

26:26.140 --> 26:27.140
头部和侧边蓝

26:27.140 --> 26:29.140
然后去查找指定路由

26:29.140 --> 26:30.140
其实这个也是

26:30.140 --> 26:31.140
我们后期

26:31.140 --> 26:33.140
要制作完成的一个内容

26:33.140 --> 26:34.140
是什么呢

26:34.140 --> 26:35.140
当我们没有匹配上的时候

26:35.140 --> 26:36.140
这时候

26:36.140 --> 26:38.140
它是没有一个指定界面的

26:38.140 --> 26:39.140
如果没有指定界面

26:39.140 --> 26:40.140
那我们就让404

26:40.140 --> 26:41.140
显示出来

26:41.140 --> 26:42.140
就OK了

26:42.140 --> 26:43.140
这个是我们

26:43.140 --> 26:45.140
最后实现的一个效果

26:45.140 --> 26:46.140
那么本节课

26:46.140 --> 26:48.140
我们只要是把这些路由

26:48.140 --> 26:49.140
定义好了之后

26:49.140 --> 26:50.140
然后

26:50.140 --> 26:51.140
把这个模板

26:51.140 --> 26:52.140
也创建成功

26:52.140 --> 26:53.140
就搞定了

26:53.140 --> 26:54.140
那么下节课

26:54.140 --> 26:55.140
我们就在这个基础上

26:55.140 --> 26:57.140
把整个的模板

26:57.140 --> 26:58.140
给进一步的

26:58.140 --> 27:00.140
实现一个完善

27:00.140 --> 27:01.140
好的

27:01.140 --> 27:02.140
今天的节课的内容

27:02.140 --> 27:03.140
就到这里

