WEBVTT

00:01.840 --> 00:07.840
各位同学大家好 从今天开始我们将进入一个React实战课程的一个学习

00:07.840 --> 00:10.840
我是本阶段的课程主讲老师韩老师

00:10.840 --> 00:17.840
我们这个阶段课程主要是实现一个由React以及它相关的生态系统打造的一个OA管理

00:17.840 --> 00:24.840
那么我们学习它的目的就是为了把我们之前掌握的React基础之一式运用到实际项目的使用过程中来

00:24.840 --> 00:30.840
接下来我会给同学们介绍一下课程里面所有设计到的相关的内容

00:30.840 --> 00:34.840
首先是我们案例里面设计到的一些相关的参考文档

00:34.840 --> 00:37.840
我们可以依次的打开来看一下

00:37.840 --> 00:40.840
第一个就是OA的管理系统

00:40.840 --> 00:43.840
它是一个线上实际运行的管理系统项目

00:43.840 --> 00:47.840
我们本课程里面所有设计到的案例时间的效果

00:47.840 --> 00:52.840
都是以这个管理系统为原型作为基础来进行开发的

00:52.840 --> 00:55.840
所以同学们在遇到一些交互上的问题的时候

00:55.840 --> 00:59.840
也可以参照这个原型里面的内容来进行一个查看

00:59.840 --> 01:03.840
第二就是我们案例的一个接口文档

01:03.840 --> 01:05.840
在这里可以给大家打开看一下

01:05.840 --> 01:09.840
因为我们的项目的案例是一个前后端的分离工程

01:09.840 --> 01:11.840
前端实现工程化开发

01:11.840 --> 01:14.840
以及所有路由UI的一个交互

01:14.840 --> 01:17.840
包括数据的交互都由前端来实现

01:17.840 --> 01:19.840
那么这里面设计到的数据获取

01:19.840 --> 01:22.840
其实都是由接口进行返回的

01:22.840 --> 01:26.840
这个里面就包含了我们案例里面

01:26.840 --> 01:31.840
所需要的所有的用户的一些接口返回的数据

01:31.840 --> 01:33.840
我们可以记住这个文的

01:33.840 --> 01:36.840
然后在这个里面来进行一些入餐

01:36.840 --> 01:39.840
以及数据返回值的一个相关查询

01:39.840 --> 01:42.840
在这个里面它都是有相应的描述信息的

01:42.840 --> 01:44.840
我们现在所看到的

01:44.840 --> 01:46.840
是一个接口的大的分类

01:46.840 --> 01:48.840
这里面是一个全部分类,对不对

01:48.840 --> 01:52.840
其实这里面还有一些针对当前

01:52.840 --> 01:55.840
用户模块的一个详细的地址

01:55.840 --> 01:57.840
以及使用规则的一个描述信息

01:57.840 --> 02:01.840
比如说这里面有用户模块,员工分析模块

02:01.840 --> 02:03.840
那在后续的课程里面

02:03.840 --> 02:04.840
我们在使用的过程中

02:04.840 --> 02:06.840
会有一个详细的介绍

02:06.840 --> 02:09.840
这个同学们不用担心看不懂的问题

02:09.840 --> 02:13.840
第三个就是一个安德底站UI酷的

02:13.840 --> 02:15.840
这样一个访问地址

02:15.840 --> 02:18.840
我们完成案例里面的大部分UI交互效果

02:18.840 --> 02:21.840
都是以这个组价酷里面的相关组价

02:21.840 --> 02:23.840
作为基础实现的

02:23.840 --> 02:25.840
所以说同学们在完成这个案例之后

02:25.840 --> 02:28.840
我相信对安德的一个使用熟练度

02:28.840 --> 02:31.840
也会有一个相应的提高

02:31.840 --> 02:33.840
那下面这两个,还有两个

02:33.840 --> 02:37.840
他们分别是一个5米和Diva框架

02:37.840 --> 02:39.840
5米它是蚂蚁金服打造的

02:39.840 --> 02:42.840
一个可插把的企业级的React应用框架

02:42.840 --> 02:44.840
它以路由为基础

02:44.840 --> 02:46.840
支持比如说Nex的JS

02:46.840 --> 02:48.840
这种约定式的一个路由规则

02:48.840 --> 02:49.840
而且框架本身

02:49.840 --> 02:52.840
它也集成了Diva的一个状态管理使用

02:52.840 --> 02:55.840
我们使用5米可以很轻松的对我们

02:55.840 --> 02:58.840
工程里面的路由以及状态管理

02:58.840 --> 03:00.840
进行一个统一处理

03:00.840 --> 03:02.840
这样就极大简化了我们的一个开发难度

03:02.840 --> 03:04.840
所以说在课程里面

03:04.840 --> 03:07.840
我们工程的构建以及路由的

03:07.840 --> 03:11.840
包括状态管理都是基于5米这个框架

03:11.840 --> 03:12.840
实现的

03:12.840 --> 03:15.840
同学们在使用过程中遇到什么问题

03:15.840 --> 03:17.840
可以在这个官网里面

03:17.840 --> 03:20.840
进行一个指定内容的一个查看

03:20.840 --> 03:21.840
包括后面

03:21.840 --> 03:24.840
我们想对案例里面设计到的

03:24.840 --> 03:26.840
一些污蔑其他的知识点

03:26.840 --> 03:28.840
有一个了解

03:28.840 --> 03:30.840
比如说案例之外的

03:30.840 --> 03:31.840
扩展的一些知识点

03:31.840 --> 03:32.840
都可以在这个文档里面

03:32.840 --> 03:35.840
获取你所需要的内容

03:35.840 --> 03:36.840
那么接下来

03:36.840 --> 03:37.840
我们就说一下

03:37.840 --> 03:39.840
完成这个案例

03:39.840 --> 03:42.840
都需要哪些知识点上的一个储备

03:42.840 --> 03:43.840
也就是说

03:43.840 --> 03:45.840
我们需要提前掌握哪些相关的知识

03:45.840 --> 03:46.840
首先

03:46.840 --> 03:49.840
我们要对React以及相关API

03:49.840 --> 03:52.840
包括它的生态系统有一定的掌握

03:52.840 --> 03:54.840
然后在案例里面

03:54.840 --> 03:58.840
我们采用ES6以及Promise的形式

03:58.840 --> 04:01.840
结合sync 以及await

04:01.840 --> 04:04.840
来处理异部的相关请求

04:04.840 --> 04:06.840
还有就是一些数据的处理

04:06.840 --> 04:09.840
我们会使用到ES6的相关的API来做

04:09.840 --> 04:13.840
所以需要同学们对ES6相关的知识

04:13.840 --> 04:14.840
有一定的掌握

04:14.840 --> 04:15.840
案例中

04:15.840 --> 04:18.840
我们以Anti-Design UI Core

04:18.840 --> 04:21.840
作为我们UI结构搭建的一个基础

04:21.840 --> 04:24.840
涉及到少量的特殊样式处理

04:24.840 --> 04:27.840
会使用到Less这种预编于处理的方式

04:27.840 --> 04:32.840
需要我们先简单的了解Less的一个使用方法

04:32.840 --> 04:35.840
我们可以看到好多模块里面的内容

04:35.840 --> 04:37.840
它的重复性其实是很强的

04:37.840 --> 04:38.840
这里面

04:38.840 --> 04:40.840
我们就需要对一些可附用的内容

04:40.840 --> 04:42.840
进行组架化的一个封装处理

04:42.840 --> 04:45.840
所以同学们要提前对组架化模块化

04:45.840 --> 04:46.840
有一定的了解

04:46.840 --> 04:50.840
以上这些就是我们需要提前掌握的一些内容

04:50.840 --> 04:52.840
同学们在学习课程之前

04:52.840 --> 04:54.840
如果说对以上的这些内容

04:54.840 --> 04:55.840
有一些模糊的话

04:55.840 --> 04:57.840
可以适当的去看一下

04:57.840 --> 05:00.840
之前我们所有学习的课程里面的视频

05:00.840 --> 05:03.840
来巩固一下相关的知识点

05:04.840 --> 05:06.840
那么学习这面课程

05:06.840 --> 05:08.840
我们都会收获到哪些内容呢

05:08.840 --> 05:10.840
我觉得会有以下几点

05:10.840 --> 05:13.840
对同学们的提高有很大的帮助

05:13.840 --> 05:15.840
首先第一就是掌握React

05:15.840 --> 05:19.840
在实际业务开发过程当中的一个应用处理方法

05:19.840 --> 05:24.840
那么我们在学习了这么多React相关知识点的同时

05:24.840 --> 05:26.840
怎么把他们结合起来

05:26.840 --> 05:28.840
运用到实际的项目当中

05:28.840 --> 05:29.840
在这个案例里面

05:29.840 --> 05:31.840
我们会有使用到

05:31.840 --> 05:34.840
并且有一个完整的说明

05:34.840 --> 05:36.840
第二个就是能够实现

05:36.840 --> 05:39.840
公共组件的一个封装的基本流程

05:39.840 --> 05:40.840
像这种内容处理

05:40.840 --> 05:43.840
比如说在我们实际业务开发过程当中

05:43.840 --> 05:44.840
会经常的涉及到

05:44.840 --> 05:47.840
所以说我们会把一些公有的内容

05:47.840 --> 05:49.840
进行组件化封装

05:49.840 --> 05:50.840
在这个案例里面

05:50.840 --> 05:52.840
会有好多这种处理方式

05:53.840 --> 05:55.840
第三个就是掌握安底站

05:55.840 --> 05:59.840
三方UI库的一个相关组件的使用方法

05:59.840 --> 06:01.840
第四就是能够实现

06:01.840 --> 06:05.840
通过污蔑以及迪瓦进行工程搭建

06:05.840 --> 06:08.840
以及状态管理的这么一个处理

06:08.840 --> 06:11.840
最后就是说我们通过学习

06:11.840 --> 06:14.840
可以能够实现一个管理系统

06:14.840 --> 06:16.840
前端业务的一个处理

06:16.840 --> 06:19.840
然后还有就是我们能够

06:19.840 --> 06:22.840
主导一个完整的后台管理系统

06:22.840 --> 06:25.840
前端部分业务制作的这样一个能力

06:25.840 --> 06:27.840
这个就是我们所有的

06:27.840 --> 06:30.840
学习案例的一个收获

06:30.840 --> 06:31.840
那么接下来

06:31.840 --> 06:32.840
我们再说一下

06:32.840 --> 06:34.840
课程案例里面包含的内容

06:34.840 --> 06:35.840
课程案例里面

06:35.840 --> 06:37.840
大概有两部分主要的内容

06:37.840 --> 06:39.840
第一部分就是我们案例里面

06:39.840 --> 06:41.840
所有设计到的一个业务处理

06:41.840 --> 06:42.840
业务处理这部分

06:42.840 --> 06:45.840
我们以六个模块来进行讲解

06:45.840 --> 06:47.840
首先就是我们会做

06:47.840 --> 06:49.840
这种登录架构的一个设计

06:49.840 --> 06:51.840
这里面包括我们一些

06:51.840 --> 06:52.840
接口模块的封装

06:52.840 --> 06:55.840
因为我们这个是前后端分离的工程

06:55.840 --> 06:56.840
前后端分离

06:56.840 --> 06:58.840
我们所有的数据获取

06:58.840 --> 07:00.840
都是通过这种接口

07:00.840 --> 07:02.840
API的请求的形式来做的处理

07:02.840 --> 07:03.840
所以说在这个里面

07:03.840 --> 07:05.840
我们会统一的进行一个

07:05.840 --> 07:07.840
接口的封装处理

07:07.840 --> 07:10.840
第二个就是请求动作的一个封装

07:10.840 --> 07:12.840
也就是说基于这个接口

07:12.840 --> 07:13.840
我们会做一些

07:13.840 --> 07:16.840
请求API的一个方法的一个封装

07:16.840 --> 07:19.840
第三个就是登录的一个token

07:19.840 --> 07:22.840
包括我们健全方案的这个处理

07:22.840 --> 07:23.840
这个就是我们登录

07:23.840 --> 07:24.840
架构设计的这一部分

07:24.840 --> 07:26.840
第二个就是我们这个

07:26.840 --> 07:28.840
layout的一个架构

07:28.840 --> 07:29.840
layout架构主要是

07:29.840 --> 07:31.840
我们作为一个模板

07:31.840 --> 07:33.840
这个模板里面可能承载了

07:33.840 --> 07:36.840
相应的我们的一些页面的内容

07:36.840 --> 07:39.840
包括我们一些公共的内容

07:39.840 --> 07:42.840
里面我们还会有一些公共的处理

07:42.840 --> 07:44.840
比如说我们做这种主动登出

07:44.840 --> 07:47.840
以及被动登出的一个方案处理

07:47.840 --> 07:50.840
包括我们动态路由表的处理

07:50.840 --> 07:53.840
以及我们动态菜单的处理

07:53.840 --> 07:55.840
其实都是在这个layout

07:55.840 --> 07:57.840
主layout里面来实现的

07:57.840 --> 07:59.840
还有就是我们的一些联动

07:59.840 --> 08:01.840
包括loading的一个设计效果

08:01.840 --> 08:03.840
这个都是我们layout架构里面

08:03.840 --> 08:05.840
所有设计到的内容

08:05.840 --> 08:08.840
第三个就是我们的数据注入导出

08:08.840 --> 08:10.840
数据注入导出这一块

08:10.840 --> 08:12.840
主要是图片文件的一个

08:12.840 --> 08:13.840
上传处理方案

08:13.840 --> 08:14.840
因为我们这里面

08:14.840 --> 08:16.840
会设计到一些文件的上传

08:16.840 --> 08:17.840
所以说在这个里面

08:17.840 --> 08:19.840
我们也会有一些相应的处理

08:19.840 --> 08:22.840
第二个就是前端留数据的

08:22.840 --> 08:23.840
一个处理方案

08:23.840 --> 08:25.840
包括我们图形化数据的

08:25.840 --> 08:26.840
一个解析渲染

08:26.840 --> 08:28.840
在这个数据注入导出

08:28.840 --> 08:29.840
这个模块里面

08:30.840 --> 08:33.840
第四个就是我们的一个全线分控

08:33.840 --> 08:34.840
因为我们知道

08:34.840 --> 08:35.840
做这种管理系统

08:35.840 --> 08:38.840
肯定是需要你普通用户

08:38.840 --> 08:41.840
跟管理员有一个明确的划分

08:41.840 --> 08:43.840
也就是说管理员的全线

08:43.840 --> 08:45.840
他要比普通用户大一些

08:45.840 --> 08:48.840
他可以访问的内容要更多一些

08:48.840 --> 08:49.840
所以说在这个里面

08:49.840 --> 08:51.840
我们要把全线

08:51.840 --> 08:53.840
以及我们如何进行

08:53.840 --> 08:55.840
动态全线的一个获取

08:55.840 --> 08:57.840
之后我们根据动态全线

08:58.840 --> 09:00.840
进行一个页面的

09:00.840 --> 09:01.840
一个相应的展示

09:01.840 --> 09:03.840
包括一些功能上的处理

09:03.840 --> 09:04.840
比如说管理员

09:04.840 --> 09:06.840
他有删除用户

09:06.840 --> 09:08.840
或者是新增用户的这种全线

09:08.840 --> 09:09.840
那么普通用户

09:09.840 --> 09:11.840
他只有浏览的一个全线

09:11.840 --> 09:13.840
所以说在整个全线

09:13.840 --> 09:14.840
分控的模块

09:14.840 --> 09:16.840
我们对这个设计的时候

09:16.840 --> 09:18.840
会有一定的处理方案

09:19.840 --> 09:20.840
第五个就是

09:20.840 --> 09:22.840
我们一个表格的处理

09:22.840 --> 09:23.840
这个表格的处理

09:23.840 --> 09:25.840
其实也是依赖于

09:25.840 --> 09:27.840
我们这个全线分控这一块的

09:27.840 --> 09:28.840
因为我们这个表格

09:28.840 --> 09:31.840
有两个比较吸引人的亮点

09:31.840 --> 09:32.840
那第一呢

09:32.840 --> 09:33.840
就是我们这个表格

09:33.840 --> 09:35.840
会动态的根据前线

09:35.840 --> 09:38.840
来渲染不同的这个自断展示

09:38.840 --> 09:39.840
第二个呢

09:39.840 --> 09:41.840
就是我们这个动态的表格

09:41.840 --> 09:42.840
可以进行

09:42.840 --> 09:44.840
我们当前指定自断的

09:44.840 --> 09:45.840
一个及时修改

09:45.840 --> 09:46.840
然后呢

09:46.840 --> 09:48.840
及时展示的这么一个过程

09:48.840 --> 09:49.840
之后呢

09:49.840 --> 09:51.840
像一些公共的排序

09:51.840 --> 09:54.840
以及分页的这种表格处理

09:54.840 --> 09:56.840
都是在我们整个的这个

09:56.840 --> 09:58.840
表格的这个做的设计的时候

09:58.840 --> 10:00.840
都会有包含到的

10:00.840 --> 10:01.840
第六个呢

10:01.840 --> 10:03.840
就是我们的一个优化部署

10:03.840 --> 10:05.840
当我们这个整个案例

10:05.840 --> 10:06.840
全部都做完之后

10:06.840 --> 10:08.840
那打包部署的时候

10:08.840 --> 10:10.840
我们会有一个优化处理方案

10:10.840 --> 10:11.840
也就是说

10:11.840 --> 10:12.840
我们借助analyzer

10:12.840 --> 10:14.840
做这种分析打包

10:14.840 --> 10:15.840
之后呢

10:15.840 --> 10:16.840
还会设计到

10:16.840 --> 10:18.840
我们前端这种

10:18.840 --> 10:19.840
前五端分离项目的

10:19.840 --> 10:21.840
一个部署方案的一个应用

10:21.840 --> 10:23.840
在优化部署这一块

10:23.840 --> 10:25.840
我们是都有体现到的

10:25.840 --> 10:27.840
那么第二个部分呢

10:27.840 --> 10:29.840
就是我们的一个技术站的

10:29.840 --> 10:30.840
选择这一块

10:30.840 --> 10:32.840
我们的核心技术选择

10:32.840 --> 10:34.840
主要是e-torreact.js

10:34.840 --> 10:35.840
主框架

10:35.840 --> 10:37.840
那包括它的一些相应的生态系统

10:37.840 --> 10:38.840
工程构建

10:38.840 --> 10:40.840
包括我们路由处理这一块

10:40.840 --> 10:42.840
我们采用5米js

10:42.840 --> 10:43.840
然后呢

10:43.840 --> 10:44.840
其实5米js

10:44.840 --> 10:45.840
刚才也给同学们

10:45.840 --> 10:47.840
做了一个简单的介绍

10:47.840 --> 10:48.840
那么下节课呢

10:48.840 --> 10:49.840
我们还会有一个

10:49.840 --> 10:51.840
5米js的详细介绍

10:51.840 --> 10:53.840
不用担心

10:53.840 --> 10:55.840
状态管理这一块

10:55.840 --> 10:57.840
如果说我们使用了5米js

10:57.840 --> 10:58.840
那么5米js呢

10:58.840 --> 11:00.840
它内置集成了

11:00.840 --> 11:02.840
dwa这种状态管理的方案

11:02.840 --> 11:03.840
所以说呢

11:03.840 --> 11:04.840
我们状态管理

11:04.840 --> 11:05.840
也就是说

11:05.840 --> 11:06.840
我们的一些公共数据

11:06.840 --> 11:08.840
都采用dwa的API形式

11:08.840 --> 11:10.840
来进行实现

11:10.840 --> 11:11.840
接下来呢

11:11.840 --> 11:12.840
就是我们的这个

11:12.840 --> 11:14.840
异部的数据处理方案

11:14.840 --> 11:15.840
因为我们知道

11:15.840 --> 11:16.840
要获取接口

11:16.840 --> 11:17.840
那这个呢

11:17.840 --> 11:18.840
就是一个异部动作

11:18.840 --> 11:19.840
异部动作

11:19.840 --> 11:20.840
跟我们选择的形式

11:20.840 --> 11:21.840
第一种呢

11:21.840 --> 11:22.840
是阿迦克斯

11:22.840 --> 11:23.840
第二种呢

11:23.840 --> 11:25.840
就是我们采用ES6提供的

11:25.840 --> 11:26.840
这种废尺的方案

11:26.840 --> 11:27.840
在本案里里面

11:27.840 --> 11:29.840
我们使用废尺这种形式

11:29.840 --> 11:30.840
所以说呢

11:30.840 --> 11:31.840
我们可以更好的

11:31.840 --> 11:33.840
去了解废尺

11:33.840 --> 11:35.840
它的一个实际应用的

11:35.840 --> 11:36.840
使用方法

11:36.840 --> 11:38.840
安德底战呢

11:38.840 --> 11:39.840
作为我们的一个

11:39.840 --> 11:41.840
主Ui库来进行使用

11:41.840 --> 11:42.840
也就是说

11:42.840 --> 11:43.840
我们的一些

11:43.840 --> 11:45.840
模板的结构啊

11:45.840 --> 11:46.840
包括样式啊

11:46.840 --> 11:48.840
其实都是由安德底战的组架

11:48.840 --> 11:49.840
来给我们生成的

11:49.840 --> 11:50.840
还有一个呢

11:50.840 --> 11:52.840
就是我们图表展示的时候

11:52.840 --> 11:53.840
这个时候呢

11:53.840 --> 11:54.840
我们会借助

11:54.840 --> 11:55.840
Echars的形式

11:55.840 --> 11:57.840
来给我们生成

11:58.840 --> 11:59.840
接下来呢

11:59.840 --> 12:00.840
我们再看一下

12:00.840 --> 12:01.840
项目的结构

12:01.840 --> 12:02.840
以及它的功能

12:02.840 --> 12:03.840
是什么样的

12:03.840 --> 12:04.840
首先呢

12:04.840 --> 12:05.840
我们的项目啊

12:05.840 --> 12:07.840
会有一个用户的登录模块

12:07.840 --> 12:08.840
它呢

12:08.840 --> 12:09.840
会实现管理员

12:09.840 --> 12:10.840
以及普通员工的

12:10.840 --> 12:11.840
一个登录功能

12:11.840 --> 12:13.840
这里面有两种形式的

12:13.840 --> 12:15.840
进行登录处理

12:15.840 --> 12:16.840
首先

12:16.840 --> 12:17.840
第一个呢

12:17.840 --> 12:18.840
就是我们通过

12:18.840 --> 12:19.840
来实现登录

12:19.840 --> 12:20.840
第二个呢

12:20.840 --> 12:21.840
就是手机号码

12:21.840 --> 12:22.840
加上验证码的方式

12:22.840 --> 12:23.840
来实现登录

12:23.840 --> 12:24.840
我们可以看一下

12:25.840 --> 12:26.840
这个呢

12:26.840 --> 12:27.840
就是已经完成的

12:27.840 --> 12:28.840
按立效果

12:28.840 --> 12:29.840
它呢

12:29.840 --> 12:31.840
就是基于刚才给同学们展示的

12:31.840 --> 12:33.840
这个OA的执行管理系统

12:33.840 --> 12:35.840
这个来实现的

12:35.840 --> 12:37.840
一个最终定版的效果

12:37.840 --> 12:39.840
里面都有哪些内容

12:39.840 --> 12:40.840
首先呢

12:40.840 --> 12:41.840
第一个就是我们的

12:41.840 --> 12:42.840
这个登录管理模块

12:42.840 --> 12:43.840
那这个里面啊

12:43.840 --> 12:44.840
会有两种形式的

12:44.840 --> 12:45.840
一个登录方式

12:45.840 --> 12:46.840
第一种呢

12:46.840 --> 12:47.840
就是我们

12:47.840 --> 12:48.840
加密码

12:48.840 --> 12:49.840
我们可以来试验一下

12:50.840 --> 12:51.840
说账户名

12:51.840 --> 12:52.840
包括密码之后

12:52.840 --> 12:53.840
我们可以点击登录

12:53.840 --> 12:55.840
同时刚才同学们看到了

12:55.840 --> 12:56.840
在这个里面

12:56.840 --> 12:57.840
如果说我输入错误之后

12:57.840 --> 12:58.840
这里面呢

12:58.840 --> 13:00.840
会有一个常规的效应

13:00.840 --> 13:01.840
那这个呢

13:01.840 --> 13:02.840
也是必不可少的

13:02.840 --> 13:03.840
当我点击登录之后

13:03.840 --> 13:04.840
如果说成功

13:04.840 --> 13:05.840
OK没问题

13:05.840 --> 13:06.840
它会有一个跳转

13:06.840 --> 13:07.840
这是第一种

13:07.840 --> 13:08.840
账户名

13:08.840 --> 13:09.840
加密码的形式登录

13:09.840 --> 13:10.840
第二种呢

13:10.840 --> 13:11.840
就是通过

13:11.840 --> 13:12.840
使用手机号码

13:12.840 --> 13:13.840
加验证码的形式

13:13.840 --> 13:15.840
来进行登录的啊

13:16.840 --> 13:17.840
我们可以在这个里面

13:17.840 --> 13:18.840
输入手机号码

13:18.840 --> 13:19.840
最后呢

13:19.840 --> 13:21.840
进行一个验证码的发送

13:21.840 --> 13:22.840
当你发送成功之后

13:22.840 --> 13:23.840
你的手机上呢

13:23.840 --> 13:26.840
就会收到一个指定的验证码

13:26.840 --> 13:28.840
那如果说验证码收到之后

13:28.840 --> 13:30.840
你可以进行一个输入

13:30.840 --> 13:31.840
比如说我收到的

13:31.840 --> 13:33.840
刚才的305836

13:33.840 --> 13:34.840
在这个里面

13:34.840 --> 13:35.840
输入成功之后

13:35.840 --> 13:36.840
我点击登录

13:36.840 --> 13:37.840
同样的

13:37.840 --> 13:38.840
也是可以进入到

13:38.840 --> 13:39.840
我们的这个逐渐面

13:39.840 --> 13:40.840
当然了

13:40.840 --> 13:41.840
前提是什么呢

13:41.840 --> 13:43.840
如果说你没有登录状态

13:43.840 --> 13:44.840
也就是说

13:45.840 --> 13:46.840
系统呢

13:46.840 --> 13:47.840
会认为你已经是

13:47.840 --> 13:49.840
没有保留这个登录状态

13:49.840 --> 13:50.840
如果说你这里面

13:50.840 --> 13:52.840
强行的去访问

13:52.840 --> 13:53.840
我们的主介面

13:53.840 --> 13:54.840
这个时候呢

13:54.840 --> 13:55.840
会有一个路由的

13:55.840 --> 13:56.840
一个权限控制

13:56.840 --> 13:57.840
这个路由权限控制呢

13:57.840 --> 13:59.840
也是由我们前端来实现的

13:59.840 --> 14:00.840
那这个呢

14:00.840 --> 14:02.840
就做了一个守卫拦截

14:02.840 --> 14:03.840
也就是说

14:03.840 --> 14:04.840
没有登录的情况下

14:04.840 --> 14:05.840
任何人

14:05.840 --> 14:06.840
包括管理员

14:06.840 --> 14:07.840
都是无法进行访问的啊

14:07.840 --> 14:08.840
这个呢

14:08.840 --> 14:10.840
是我们一个强制性的规则

14:10.840 --> 14:11.840
那还有一个是什么呢

14:11.840 --> 14:12.840
在用户模块

14:12.840 --> 14:13.840
还有一个忘记密码的功能

14:13.840 --> 14:14.840
如果说

14:14.840 --> 14:16.840
我们把这个密码忘记了

14:16.840 --> 14:17.840
怎么办

14:17.840 --> 14:18.840
在这个里面

14:18.840 --> 14:19.840
我们可以通过手机号码

14:19.840 --> 14:20.840
加上验证码的形式

14:20.840 --> 14:22.840
进行一个密码重置

14:22.840 --> 14:23.840
这个呢

14:23.840 --> 14:24.840
也是支持的

14:24.840 --> 14:25.840
以上呢

14:25.840 --> 14:27.840
就是我们整个用户模块的

14:27.840 --> 14:28.840
一些西安的内容

14:28.840 --> 14:30.840
非常的简单啊

14:30.840 --> 14:31.840
而且呢

14:31.840 --> 14:32.840
他也体现了

14:32.840 --> 14:33.840
我们一般的

14:33.840 --> 14:35.840
常规的管理系统

14:35.840 --> 14:36.840
后台的

14:36.840 --> 14:38.840
相关的一个业务逻辑处理

14:38.840 --> 14:39.840
都在这个里面

14:39.840 --> 14:41.840
是有体现到的啊

14:41.840 --> 14:42.840
第二个呢

14:42.840 --> 14:44.840
员工的一个分析模块

14:44.840 --> 14:45.840
这个在哪里啊

14:45.840 --> 14:47.840
我们可以给同学们看一下

14:47.840 --> 14:49.840
当路成功之后

14:49.840 --> 14:50.840
在这个里面呢

14:50.840 --> 14:51.840
我们进入之后

14:51.840 --> 14:52.840
第一个呢

14:52.840 --> 14:53.840
就是我们的员工分析模块

14:53.840 --> 14:55.840
员工分析模块呢

14:55.840 --> 14:56.840
他这个模块啊

14:56.840 --> 14:59.840
任何人都可以进行一个访问

14:59.840 --> 15:00.840
也就是说

15:00.840 --> 15:02.840
我们这个员工分析模块

15:02.840 --> 15:03.840
其实呢

15:03.840 --> 15:04.840
他是只有管理员

15:04.840 --> 15:06.840
才可以进行访问的

15:06.840 --> 15:07.840
那我们普通用户呢

15:07.840 --> 15:10.840
是没有办法来进行访问的

15:10.840 --> 15:11.840
展示的内容都哪些呢

15:11.840 --> 15:12.840
首先第一个啊

15:12.840 --> 15:16.840
就是我们公司人数的一个介绍

15:16.840 --> 15:17.840
那这里面呢

15:17.840 --> 15:18.840
会有总人数啊

15:18.840 --> 15:21.840
包括入职年限员工的一个统计

15:21.840 --> 15:23.840
都是在这个上面完成的

15:23.840 --> 15:24.840
下面呢

15:24.840 --> 15:27.840
就是我们员工的一个学历情况介绍

15:27.840 --> 15:29.840
包括性别比中占比啊

15:29.840 --> 15:31.840
一些平均年龄这个处理啊

15:31.840 --> 15:33.840
这里面是都体现到的

15:33.840 --> 15:34.840
然后呢

15:34.840 --> 15:36.840
还有一些星座的处理

15:36.840 --> 15:38.840
包括我们员工的年龄段

15:38.840 --> 15:40.840
每一个部门的一个员工数量

15:40.840 --> 15:43.840
在这个里面是都有的

15:43.840 --> 15:44.840
这个呢

15:44.840 --> 15:46.840
就是我们员工的一个分析模块

15:46.840 --> 15:48.840
那这里面包括我们人数分析

15:48.840 --> 15:49.840
基本分析

15:49.840 --> 15:52.840
以及我们公司部门情况的一个展示

15:52.840 --> 15:54.840
那其实这里面最主要就是展示

15:54.840 --> 15:56.840
我们部门员工的一个数量

15:56.840 --> 15:57.840
这个呢

15:57.840 --> 15:59.840
就是员工分析的这么一个模块

15:59.840 --> 16:00.840
员工分析模块之后呢

16:00.840 --> 16:03.840
我们还会有一个初情统计分析模块

16:03.840 --> 16:05.840
那么这个初情统计分析模块

16:05.840 --> 16:07.840
主要展示的是什么呢

16:07.840 --> 16:09.840
就是我们当权员工初情的

16:09.840 --> 16:10.840
一个意外情况

16:10.840 --> 16:11.840
这里面指的是什么呢

16:11.840 --> 16:15.840
我们迟到早退的一个路路情况

16:15.840 --> 16:17.840
这里面可以给大家看一下

16:17.840 --> 16:18.840
左边呢

16:18.840 --> 16:20.840
是我们迟到员工数量

16:20.840 --> 16:23.840
包括早退员工数量的一个图表展示

16:23.840 --> 16:24.840
那这里面

16:24.840 --> 16:25.840
我们使用注壮图的形式

16:25.840 --> 16:27.840
来进行数据的展示

16:27.840 --> 16:28.840
右面呢

16:28.840 --> 16:30.840
是我们员工的迟到的

16:30.840 --> 16:32.840
一个表格形式的展示

16:32.840 --> 16:34.840
这里面有这个我们

16:34.840 --> 16:36.840
每一个员工的

16:36.840 --> 16:38.840
里面迟到的一些

16:38.840 --> 16:40.840
详细信息的一个描述

16:40.840 --> 16:41.840
包括他的部门啊

16:41.840 --> 16:44.840
以及当前这个迟到的这个类型

16:44.840 --> 16:46.840
那这里面是都有介绍的

16:46.840 --> 16:48.840
包括他的这个迟到的时间

16:48.840 --> 16:49.840
员工的姓名

16:49.840 --> 16:51.840
这里面是都有的

16:51.840 --> 16:52.840
主要这个模块呢

16:52.840 --> 16:54.840
基本上就是展示了

16:54.840 --> 16:56.840
我们员工初情的一个意外

16:56.840 --> 16:57.840
当然在这个里面

16:57.840 --> 16:58.840
意外指的就是什么

16:58.840 --> 16:59.840
指的就是我们迟到

16:59.840 --> 17:01.840
早退的一个情况路路

17:01.840 --> 17:03.840
如果说正常的一个初情打卡

17:03.840 --> 17:04.840
我们在这个里面

17:04.840 --> 17:06.840
是没有体现出来的

17:06.840 --> 17:07.840
这个我们要明确一下

17:07.840 --> 17:08.840
接下来呢

17:08.840 --> 17:09.840
就是我们的这个

17:09.840 --> 17:10.840
员工管理模块

17:10.840 --> 17:12.840
也是我们最主要的一个模块

17:12.840 --> 17:13.840
在这个里面啊

17:13.840 --> 17:15.840
他这个模块都实现哪些内容呢

17:15.840 --> 17:17.840
这里面啊

17:17.840 --> 17:19.840
我们基本上有以下几部分构成

17:19.840 --> 17:20.840
首先呢

17:20.840 --> 17:22.840
是一个员工基本信息的一个

17:22.840 --> 17:23.840
表格展示

17:23.840 --> 17:25.840
我们可以对照来看一下

17:25.840 --> 17:26.840
在右面这一部分

17:26.840 --> 17:27.840
是员工的一个

17:27.840 --> 17:29.840
基本信息表格展示

17:29.840 --> 17:30.840
里面啊

17:30.840 --> 17:31.840
他这个展示的时候

17:31.840 --> 17:32.840
是分两种情况的

17:32.840 --> 17:33.840
首先第一呢

17:33.840 --> 17:35.840
如果说你是普通管理员

17:36.840 --> 17:38.840
这些会展示我们员工的

17:38.840 --> 17:40.840
所有的一个信息力表象

17:40.840 --> 17:42.840
那如果说是普通员工

17:42.840 --> 17:43.840
能录

17:43.840 --> 17:44.840
首先呢

17:44.840 --> 17:45.840
他看到的内容

17:45.840 --> 17:46.840
不会有管理员

17:46.840 --> 17:48.840
这么多这么详细

17:48.840 --> 17:50.840
他只展示部分的

17:50.840 --> 17:51.840
这个公共内容

17:51.840 --> 17:53.840
比如说员工的一些隐私

17:53.840 --> 17:54.840
内容啊

17:54.840 --> 17:55.840
像这种银行卡啊

17:55.840 --> 17:57.840
包括我们身份证啊

17:57.840 --> 17:59.840
以及他的这个生日这些啊

17:59.840 --> 18:00.840
包括我们的这个

18:00.840 --> 18:01.840
讲诚记录啊

18:01.840 --> 18:02.840
条件记录啊

18:02.840 --> 18:03.840
这些呢

18:03.840 --> 18:04.840
他是不会有展示的

18:05.840 --> 18:06.840
这个我们要明确一下

18:06.840 --> 18:07.840
这是第一点

18:07.840 --> 18:08.840
然后呢

18:08.840 --> 18:09.840
我们这个表格里面

18:09.840 --> 18:10.840
还可以做什么呢

18:10.840 --> 18:12.840
做这种分一二的一个获取

18:12.840 --> 18:14.840
那分一二获取指的是什么

18:14.840 --> 18:15.840
就是说在这个

18:15.840 --> 18:16.840
上面的部分

18:16.840 --> 18:17.840
我们这个表格

18:17.840 --> 18:18.840
当天展示的是第一页

18:18.840 --> 18:19.840
如果说点击下页

18:19.840 --> 18:20.840
ok

18:20.840 --> 18:21.840
那这个时候呢

18:21.840 --> 18:23.840
会给我们进行一个分一二的操作

18:23.840 --> 18:25.840
那这是整个表格里面

18:25.840 --> 18:26.840
自带的一个功能

18:26.840 --> 18:27.840
第二个是什么呢

18:27.840 --> 18:28.840
第二个就是

18:28.840 --> 18:29.840
我们这个表格里面

18:29.840 --> 18:31.840
还可以进行一些信息的修改

18:31.840 --> 18:33.840
比如说我把这个信息指的

18:33.840 --> 18:35.840
一个修改

18:35.840 --> 18:36.840
修改之后

18:36.840 --> 18:38.840
它会实时的一个更新同步

18:38.840 --> 18:39.840
那这个呢

18:39.840 --> 18:42.840
是我们表格的一个修改功能啊

18:42.840 --> 18:43.840
然后呢

18:43.840 --> 18:44.840
我们这个表格里面

18:44.840 --> 18:45.840
基本信息里面

18:45.840 --> 18:46.840
还可以进行什么呢

18:46.840 --> 18:48.840
员工的一个查询

18:48.840 --> 18:50.840
那这个如何来进行查询呢

18:50.840 --> 18:51.840
我们可以在这个里面

18:51.840 --> 18:52.840
来做一下

18:52.840 --> 18:53.840
比如说我这里面

18:53.840 --> 18:55.840
输入马云ok

18:55.840 --> 18:56.840
回着之后

18:56.840 --> 18:57.840
那这个时候呢

18:57.840 --> 18:58.840
就展示出

18:58.840 --> 19:00.840
当前的这个用户的一个信息

19:00.840 --> 19:01.840
而且呢

19:01.840 --> 19:02.840
我们这个查询啊

19:02.840 --> 19:04.840
可以进行一个什么

19:04.840 --> 19:05.840
多表联弄查询

19:05.840 --> 19:07.840
比如说我们做商品部

19:07.840 --> 19:08.840
那你会发现啊

19:08.840 --> 19:09.840
这个时候就没有了

19:09.840 --> 19:10.840
为什么没有呢

19:10.840 --> 19:11.840
因为我们这个里面啊

19:11.840 --> 19:13.840
对自断的处理是什么呢

19:13.840 --> 19:14.840
是依靠我们这个

19:14.840 --> 19:16.840
马云加商品部结合起来

19:16.840 --> 19:18.840
匹配两个搜索条件

19:18.840 --> 19:20.840
才会有进行一个展示

19:20.840 --> 19:21.840
所以说呢

19:21.840 --> 19:22.840
这个时候呢

19:22.840 --> 19:23.840
刚才咱们也看到了

19:23.840 --> 19:24.840
马云呢

19:24.840 --> 19:25.840
不属于商品部

19:25.840 --> 19:26.840
那这个时候呢

19:26.840 --> 19:27.840
它就不会有任何的

19:27.840 --> 19:28.840
一个展示的

19:28.840 --> 19:29.840
这个我们要清楚一下

19:29.840 --> 19:30.840
当我把这个

19:30.840 --> 19:31.840
姓名的搜索条件

19:31.840 --> 19:32.840
这个时候

19:32.840 --> 19:33.840
你会发现这个里面

19:33.840 --> 19:35.840
就会给我们进行一个

19:35.840 --> 19:36.840
正常展示了

19:36.840 --> 19:38.840
也就是说商品部门里面的

19:38.840 --> 19:39.840
两个员工

19:39.840 --> 19:40.840
当然他现在只有两个

19:40.840 --> 19:41.840
然后呢

19:41.840 --> 19:42.840
就给我们一个展示输出

19:42.840 --> 19:44.840
这是他的一个搜索的功能

19:44.840 --> 19:45.840
包括直级也一样

19:45.840 --> 19:47.840
比如说那这个直级里面

19:47.840 --> 19:48.840
我们这里面

19:48.840 --> 19:49.840
可以先查看一下

19:49.840 --> 19:50.840
这个用户的直级

19:50.840 --> 19:51.840
然后根据直级呢

19:51.840 --> 19:53.840
我们选中一条数据啊

19:53.840 --> 19:54.840
这个里面

19:54.840 --> 19:55.840
我们可以找一下

19:55.840 --> 19:57.840
员工的一个直级描述

19:57.840 --> 19:58.840
ok

19:58.840 --> 19:59.840
那这个直级描述呢

19:59.840 --> 20:00.840
是应设的这个文字了

20:00.840 --> 20:02.840
我们这里面可以选一下

20:02.840 --> 20:03.840
嗯

20:03.840 --> 20:05.840
比如说我们t9刚算

20:05.840 --> 20:06.840
你会发现啊

20:06.840 --> 20:07.840
这个里面其实是没有的

20:07.840 --> 20:09.840
只有匹配指定直级

20:09.840 --> 20:11.840
以及在商品部里面的

20:11.840 --> 20:12.840
这个相关内容之后

20:12.840 --> 20:14.840
你会发现了t3-1

20:14.840 --> 20:15.840
那其实t3-1

20:15.840 --> 20:17.840
他的直级描述应该是什么

20:17.840 --> 20:19.840
应该是一个工程师

20:19.840 --> 20:20.840
对不对

20:20.840 --> 20:21.840
也就是说对应的中文描述

20:21.840 --> 20:22.840
那这样呢

20:22.840 --> 20:23.840
就把刚才那个内容

20:23.840 --> 20:24.840
给忽略掉了

20:24.840 --> 20:26.840
如果说你清空搜索条件之后

20:26.840 --> 20:27.840
同样的

20:27.840 --> 20:29.840
又回到我们什么

20:29.840 --> 20:30.840
当前展示的

20:30.840 --> 20:32.840
所有用户数据这一块了

20:32.840 --> 20:33.840
这个呢是他的一个

20:33.840 --> 20:34.840
比较完整的功能

20:34.840 --> 20:35.840
还有是什么呢

20:35.840 --> 20:37.840
还有就是这个图片

20:37.840 --> 20:38.840
我们这里面啊

20:38.840 --> 20:39.840
会有员工的图片

20:39.840 --> 20:40.840
那图片呢

20:40.840 --> 20:41.840
可以实现一个

20:41.840 --> 20:42.840
预览的功能

20:42.840 --> 20:45.840
在这里边也是可以做到的啊

20:45.840 --> 20:46.840
之后呢就是

20:46.840 --> 20:47.840
当前员工

20:47.840 --> 20:49.840
相应的一些

20:49.840 --> 20:51.840
表格的一个展示

20:51.840 --> 20:52.840
比如说这个员工

20:52.840 --> 20:53.840
如果说有一些迹效啊

20:53.840 --> 20:54.840
包括讲成记录

20:54.840 --> 20:55.840
调情记录

20:55.840 --> 20:56.840
在这个里面

20:56.840 --> 20:57.840
你看啊

20:57.840 --> 21:00.840
能调整后的一个新字时间

21:00.840 --> 21:01.840
那在像这种表格展示啊

21:01.840 --> 21:02.840
他会有

21:02.840 --> 21:04.840
每一个表格里面都有三个

21:04.840 --> 21:05.840
当然这个条件呢

21:05.840 --> 21:08.840
是必须由管理员来进行查看的

21:08.840 --> 21:10.840
普通用户是查看不到的

21:10.840 --> 21:11.840
这个我们要明确一下

21:11.840 --> 21:12.840
那这个呢

21:12.840 --> 21:13.840
就是他的一个基本信息的

21:13.840 --> 21:14.840
一个展示

21:14.840 --> 21:15.840
还有是什么呢

21:15.840 --> 21:17.840
就是员工修改这一部分

21:17.840 --> 21:18.840
修改这一部分

21:18.840 --> 21:19.840
刚才我们看到了

21:19.840 --> 21:22.840
可以通过我们这个表格里面的

21:22.840 --> 21:23.840
某一个指定自断

21:23.840 --> 21:24.840
来进修改

21:24.840 --> 21:25.840
比如说

21:25.840 --> 21:26.840
把这个入职时间

21:26.840 --> 21:28.840
调整为10月1日

21:28.840 --> 21:29.840
之后他失去焦点之后

21:29.840 --> 21:31.840
如果说发现你这个职

21:31.840 --> 21:32.840
已经有改动了

21:32.840 --> 21:33.840
那这个时候呢

21:33.840 --> 21:35.840
我们就可以进行修改

21:35.840 --> 21:36.840
这是第一种修改

21:36.840 --> 21:37.840
那第二种修改

21:37.840 --> 21:38.840
是怎么来做修改呢

21:38.840 --> 21:39.840
其实第二种修改啊

21:39.840 --> 21:42.840
我们可以在员工的详情里面

21:42.840 --> 21:43.840
比如说

21:43.840 --> 21:44.840
我们点击这个位置

21:44.840 --> 21:46.840
进入到员工的详情之后

21:46.840 --> 21:48.840
那进入到员工的详情之后呢

21:48.840 --> 21:49.840
我们可以在这个里面啊

21:49.840 --> 21:51.840
就可以进行内容的修改

21:51.840 --> 21:53.840
但修改的前提是什么呢

21:53.840 --> 21:56.840
就是保证我们的这个数据库里面

21:56.840 --> 21:58.840
没有这个当前的账户

21:58.840 --> 21:59.840
比如说那你

21:59.840 --> 22:00.840
现在是小明一

22:00.840 --> 22:02.840
假如说修改为小明

22:02.840 --> 22:04.840
他这里面会有一个检索

22:04.840 --> 22:05.840
检索的是什么呢

22:05.840 --> 22:06.840
当前账户名

22:06.840 --> 22:07.840
已经存在

22:07.840 --> 22:08.840
请你进行一个更换操作

22:08.840 --> 22:09.840
也就是说

22:09.840 --> 22:10.840
其实这个是不通过的

22:10.840 --> 22:11.840
那我们这里面

22:11.840 --> 22:13.840
比如说小明妖妖

22:13.840 --> 22:15.840
修改为小明妖妖妖

22:15.840 --> 22:16.840
那你会发现

22:16.840 --> 22:18.840
这个时候已经修改成功了

22:18.840 --> 22:20.840
修改成功会做两个操作

22:20.840 --> 22:21.840
第一

22:21.840 --> 22:22.840
把员工详情的数据

22:22.840 --> 22:23.840
做一个更改

22:23.840 --> 22:24.840
之后呢

22:24.840 --> 22:25.840
同样的在这个

22:25.840 --> 22:26.840
员工列表里面

22:26.840 --> 22:28.840
我们会把这个指定的

22:28.840 --> 22:30.840
员工账户的一些信息

22:30.840 --> 22:32.840
也会给你做一个修改

22:32.840 --> 22:35.840
比如说修改他的一个电话号码

22:35.840 --> 22:38.840
ok 改成二五二二

22:38.840 --> 22:39.840
ok 改完成之后

22:39.840 --> 22:41.840
你会发现小明的电话

22:41.840 --> 22:42.840
在列表里面

22:42.840 --> 22:43.840
以及在我们的这个

22:43.840 --> 22:44.840
详情里面

22:44.840 --> 22:46.840
他都是有一个完整的修改的

22:46.840 --> 22:47.840
那这个呢

22:47.840 --> 22:48.840
就是他的一个修改功能

22:48.840 --> 22:49.840
包括呢

22:49.840 --> 22:50.840
我们这里面啊

22:50.840 --> 22:52.840
就进行一个图片的修改

22:52.840 --> 22:53.840
比如说

22:53.840 --> 22:55.840
把原来的这个图片给删除掉

22:55.840 --> 22:57.840
删除掉之后

22:57.840 --> 22:59.840
我们随便的选择一个

22:59.840 --> 23:00.840
ok 打开

23:00.840 --> 23:01.840
打开之后

23:01.840 --> 23:02.840
上传成功之后

23:02.840 --> 23:04.840
那这样就已经修改完成了

23:04.840 --> 23:06.840
我们可以来查看一下

23:06.840 --> 23:07.840
你会发现呢

23:07.840 --> 23:09.840
此时这个里面的头像

23:09.840 --> 23:10.840
就已经修改为

23:10.840 --> 23:11.840
我们刚才更改之后的

23:11.840 --> 23:12.840
是图片了

23:12.840 --> 23:13.840
这个呢

23:13.840 --> 23:15.840
就是他的一个图片文件的

23:15.840 --> 23:16.840
一个修改功能

23:16.840 --> 23:17.840
那这里面呢

23:17.840 --> 23:18.840
还有一个删的功能

23:18.840 --> 23:19.840
比如说

23:19.840 --> 23:21.840
删除某一个信息

23:21.840 --> 23:22.840
那像这条信息呢

23:22.840 --> 23:23.840
他的一个值啊

23:23.840 --> 23:24.840
不是特别准确

23:24.840 --> 23:25.840
我们在这个里面

23:25.840 --> 23:27.840
可以对他进行一个删除操作

23:27.840 --> 23:28.840
比如说在这个里面

23:28.840 --> 23:29.840
ok 删除成功

23:29.840 --> 23:31.840
删除成功都做哪些事呢

23:31.840 --> 23:32.840
首先我们的这个

23:32.840 --> 23:33.840
详情见面

23:33.840 --> 23:34.840
肯定是没有了

23:34.840 --> 23:36.840
他有一个关闭的操作

23:36.840 --> 23:37.840
之后呢

23:37.840 --> 23:38.840
我们在这个列表里面

23:38.840 --> 23:39.840
也就是说

23:39.840 --> 23:40.840
员工列表里面

23:40.840 --> 23:41.840
把刚才这条信息

23:41.840 --> 23:43.840
给他做了一个删除啊

23:43.840 --> 23:44.840
这个呢

23:44.840 --> 23:45.840
就是我们的一个

23:45.840 --> 23:47.840
删除的这么一个功能

23:47.840 --> 23:48.840
当然了

23:48.840 --> 23:50.840
其实不光是在这个

23:50.840 --> 23:51.840
详情里面

23:51.840 --> 23:52.840
可以进行删除

23:52.840 --> 23:53.840
我们还可以啊

23:53.840 --> 23:55.840
做这种批量删除的功能

23:55.840 --> 23:56.840
比如说我们在这个里面

23:56.840 --> 23:57.840
如果说

23:57.840 --> 23:58.840
选择批量删除

23:58.840 --> 23:59.840
首先呢

23:59.840 --> 24:00.840
他会提示你

24:00.840 --> 24:01.840
你是否选择好了

24:01.840 --> 24:03.840
需要删除的指定的表象

24:03.840 --> 24:04.840
假如说我想把这个

24:04.840 --> 24:05.840
周划件腰腰给干掉

24:05.840 --> 24:06.840
那怎么办呢

24:06.840 --> 24:07.840
我们直接的在这个里面

24:07.840 --> 24:09.840
点击确定

24:09.840 --> 24:10.840
同样也是可以删除的

24:10.840 --> 24:11.840
或者说呢

24:11.840 --> 24:12.840
我可以进行

24:12.840 --> 24:14.840
多条数据的一个删除

24:14.840 --> 24:15.840
比如说这里面

24:15.840 --> 24:16.840
有这个韩非子啊

24:16.840 --> 24:17.840
腰

24:17.840 --> 24:19.840
那我再把这个

24:19.840 --> 24:20.840
呃张三

24:20.840 --> 24:21.840
他们两条数据

24:21.840 --> 24:22.840
给干掉

24:22.840 --> 24:23.840
这个时候一点击确定

24:23.840 --> 24:24.840
你会发现

24:24.840 --> 24:25.840
此时是不是

24:25.840 --> 24:26.840
已经有删除操作了

24:26.840 --> 24:27.840
对吧

24:27.840 --> 24:28.840
删除完成之后

24:28.840 --> 24:29.840
那主动挑转的

24:29.840 --> 24:30.840
首页面

24:30.840 --> 24:31.840
之后呢

24:31.840 --> 24:32.840
我们这个

24:32.840 --> 24:33.840
继续展示

24:33.840 --> 24:34.840
我们已经删除完成之后

24:34.840 --> 24:35.840
响应回来的

24:35.840 --> 24:37.840
所有的数据信息内容

24:37.840 --> 24:38.840
这个呢

24:38.840 --> 24:39.840
就是他的一个删除

24:39.840 --> 24:40.840
也就是说

24:40.840 --> 24:41.840
有两种情况

24:41.840 --> 24:42.840
产生第一个

24:42.840 --> 24:43.840
是我们批量金删除

24:43.840 --> 24:44.840
第二个呢

24:44.840 --> 24:46.840
是我们通过这种

24:46.840 --> 24:48.840
想请里面指定删除

24:48.840 --> 24:49.840
某一个用户的

24:49.840 --> 24:50.840
这样一个操作

24:50.840 --> 24:51.840
那这是他的一个

24:51.840 --> 24:52.840
删除功能

24:52.840 --> 24:53.840
还有一个就是

24:53.840 --> 24:54.840
我们已经看到了

24:54.840 --> 24:56.840
同向上传的一个功能

24:56.840 --> 24:57.840
之后呢

24:57.840 --> 24:58.840
最后一个就是

24:58.840 --> 24:59.840
我们新增员工的

24:59.840 --> 25:00.840
一个功能

25:00.840 --> 25:01.840
新增员工这一块

25:01.840 --> 25:03.840
就是有一个基本信息收集

25:03.840 --> 25:04.840
并且保存到

25:04.840 --> 25:05.840
后端服务器的

25:05.840 --> 25:06.840
这样一个操作

25:06.840 --> 25:07.840
怎么来做呢

25:07.840 --> 25:08.840
我们可以进行一个

25:08.840 --> 25:09.840
创建员工

25:09.840 --> 25:11.840
那在创建员工的时候

25:11.840 --> 25:12.840
为了掩饰的方便

25:12.840 --> 25:13.840
我出事话的时候

25:13.840 --> 25:14.840
已经把一些纸

25:14.840 --> 25:15.840
给准备好了

25:15.840 --> 25:17.840
比如说我们这个里面

25:17.840 --> 25:19.840
随便的进行一个输入

25:20.840 --> 25:22.840
我们这里面输入张飞

25:22.840 --> 25:23.840
帐户名呢

25:23.840 --> 25:25.840
就是用拼音来代替张飞

25:25.840 --> 25:26.840
ok

25:26.840 --> 25:27.840
其他的信息呢

25:27.840 --> 25:30.840
我们尽量的不去改

25:30.840 --> 25:31.840
也ok

25:31.840 --> 25:32.840
无所谓的

25:32.840 --> 25:33.840
之后呢

25:33.840 --> 25:34.840
我们选择一张图片

25:34.840 --> 25:35.840
那这样呢

25:35.840 --> 25:36.840
就可以进行一个什么呢

25:36.840 --> 25:38.840
进行一个添加了

25:38.840 --> 25:39.840
这里面我们选择

25:39.840 --> 25:40.840
这个小女孩

25:40.840 --> 25:42.840
当她文件上传成功之后

25:42.840 --> 25:43.840
那我们这里面

25:43.840 --> 25:44.840
就创建一个员工

25:44.840 --> 25:46.840
当我点击创建之后呢

25:46.840 --> 25:47.840
这里面啊

25:47.840 --> 25:49.840
是所有的列表项

25:49.840 --> 25:51.840
我们都是是一个必填项

25:51.840 --> 25:53.840
所以说在这个里面

25:53.840 --> 25:54.840
入职的时间

25:54.840 --> 25:56.840
以及我们的这个直级啊

25:56.840 --> 25:57.840
其实呢

25:57.840 --> 25:58.840
如果说没有在

25:58.840 --> 25:59.840
这个输入的情况下

25:59.840 --> 26:00.840
我们是需要

26:00.840 --> 26:01.840
手动选择一下的

26:01.840 --> 26:02.840
那这个直级呢

26:02.840 --> 26:03.840
包括我们这个部门啊

26:03.840 --> 26:05.840
其实它是一个下拉搜索

26:05.840 --> 26:06.840
下拉搜索里面呢

26:06.840 --> 26:07.840
又继续请求了

26:07.840 --> 26:08.840
直级以及部门

26:08.840 --> 26:09.840
相关的一个内容

26:09.840 --> 26:10.840
在这个里面呢

26:10.840 --> 26:11.840
我们就可以给她

26:11.840 --> 26:13.840
做一个填充

26:13.840 --> 26:15.840
我们这里面随便选择一个

26:15.840 --> 26:17.840
ok 创建完成之后

26:17.840 --> 26:18.840
点击创建

26:18.840 --> 26:19.840
那这个时候呢

26:19.840 --> 26:21.840
她就会给我们新增一个

26:21.840 --> 26:22.840
直级内容

26:22.840 --> 26:23.840
这个张飞这一项

26:23.840 --> 26:24.840
就已经上来了

26:24.840 --> 26:25.840
对吧

26:25.840 --> 26:26.840
这个呢就是我们

26:26.840 --> 26:27.840
一个新增的功能

26:27.840 --> 26:28.840
那以上这些呢

26:28.840 --> 26:30.840
就是我们员工管理模块的

26:30.840 --> 26:32.840
所有的一个信息

26:32.840 --> 26:33.840
那这里面

26:33.840 --> 26:34.840
主要是包含了

26:34.840 --> 26:36.840
我们的增山改查

26:36.840 --> 26:38.840
这四大门块

26:38.840 --> 26:39.840
那这四大门块

26:39.840 --> 26:40.840
只要是我们

26:40.840 --> 26:41.840
一步一步的

26:41.840 --> 26:42.840
慢慢的来搞啊

26:42.840 --> 26:43.840
我们搞定之后

26:43.840 --> 26:45.840
那整个的管理系统呢

26:45.840 --> 26:46.840
其他的模块

26:46.840 --> 26:48.840
比如说我们这个技巧考核啊

26:48.840 --> 26:50.840
包括我们的这个直级啊

26:50.840 --> 26:52.840
以及这个调新

26:52.840 --> 26:53.840
包括考勤

26:53.840 --> 26:54.840
他们呢

26:54.840 --> 26:56.840
其实是都非常像的

26:56.840 --> 26:57.840
也就是说

26:57.840 --> 26:58.840
做完了部门

26:58.840 --> 26:59.840
基本上后面呢

26:59.840 --> 27:00.840
我们都可以

27:00.840 --> 27:01.840
实现搞定了

27:01.840 --> 27:03.840
就是这么一个功能

27:03.840 --> 27:04.840
那接下来呢

27:04.840 --> 27:05.840
咱们说一个不同的

27:05.840 --> 27:06.840
不同的是哪一个呢

27:06.840 --> 27:07.840
就是这个部门这一块

27:07.840 --> 27:08.840
部门这一块

27:08.840 --> 27:09.840
同学们可以看到

27:09.840 --> 27:10.840
是在这个里面

27:10.840 --> 27:12.840
他呢主要实现啊

27:12.840 --> 27:13.840
其实呢跟

27:13.840 --> 27:15.840
我们员工的模块啊

27:15.840 --> 27:16.840
是非常相似的

27:16.840 --> 27:17.840
也就是说

27:17.840 --> 27:18.840
部门的一个展示

27:18.840 --> 27:19.840
但展示形式呢

27:19.840 --> 27:20.840
还是有一定区别的

27:20.840 --> 27:21.840
首先来说

27:21.840 --> 27:22.840
部门展示呢

27:22.840 --> 27:23.840
他是把这个公司的

27:23.840 --> 27:24.840
组织架构呢

27:24.840 --> 27:26.840
以数状图的形式

27:26.840 --> 27:28.840
给来做了一个展示

27:28.840 --> 27:29.840
而且这个里面呢

27:29.840 --> 27:30.840
我们可以啊

27:30.840 --> 27:32.840
随便的来调整一下

27:32.840 --> 27:33.840
他的这个

27:33.840 --> 27:34.840
显示的一个规则

27:34.840 --> 27:35.840
也就是说

27:35.840 --> 27:36.840
这里面我们可以指定

27:36.840 --> 27:38.840
某一个部门的字极

27:38.840 --> 27:39.840
然后呢

27:39.840 --> 27:41.840
还可以对这个部门里面

27:41.840 --> 27:42.840
相关的啊

27:42.840 --> 27:43.840
层级关系

27:43.840 --> 27:44.840
做一个调整

27:44.840 --> 27:45.840
比如说

27:45.840 --> 27:47.840
我当前想把这个部门3

27:47.840 --> 27:49.840
给做了一个删除

27:49.840 --> 27:50.840
那么接下来

27:50.840 --> 27:51.840
如果说我删除他之后

27:51.840 --> 27:52.840
这个时候呢

27:52.840 --> 27:53.840
原来3

27:53.840 --> 27:54.840
下面的部门又上去了

27:54.840 --> 27:55.840
对不对

27:55.840 --> 27:56.840
只不过是咱们

27:56.840 --> 27:57.840
现在啊

27:57.840 --> 27:58.840
这里面有一些数据啊

27:58.840 --> 27:59.840
是有重复项

27:59.840 --> 28:00.840
那这个呢

28:00.840 --> 28:01.840
不要紧

28:01.840 --> 28:02.840
最后呢

28:02.840 --> 28:03.840
我们把数据啊

28:03.840 --> 28:04.840
给做一个整理

28:04.840 --> 28:05.840
就OK了

28:05.840 --> 28:06.840
关系呢

28:06.840 --> 28:07.840
就更加明确了

28:07.840 --> 28:08.840
比如说

28:08.840 --> 28:09.840
下面这个部门呢

28:09.840 --> 28:11.840
会相应的变为一级的部门

28:11.840 --> 28:12.840
那这样呢

28:12.840 --> 28:13.840
展示就比较清晰了

28:13.840 --> 28:15.840
比如说我这个测试部

28:15.840 --> 28:16.840
商品部

28:16.840 --> 28:18.840
商品部下面有一个研发部

28:18.840 --> 28:19.840
研发部下面

28:19.840 --> 28:21.840
我想新增一个子部门

28:21.840 --> 28:22.840
这个时候呢

28:22.840 --> 28:23.840
我想把这个大数据部啊

28:23.840 --> 28:24.840
给它增加过来

28:24.840 --> 28:25.840
那这里面

28:25.840 --> 28:26.840
我就选择添加

28:26.840 --> 28:28.840
添加完成之后

28:28.840 --> 28:29.840
这个时候

28:29.840 --> 28:30.840
我们可以看到

28:30.840 --> 28:32.840
刚才商品部下面

28:32.840 --> 28:33.840
只有一个新研发部

28:33.840 --> 28:35.840
那现在新研发部下面

28:35.840 --> 28:36.840
又多了一个

28:36.840 --> 28:37.840
大数据产品部

28:37.840 --> 28:38.840
或者说呢

28:38.840 --> 28:39.840
我这里面啊

28:39.840 --> 28:40.840
再把这个技术研发部

28:40.840 --> 28:42.840
给放到这个

28:42.840 --> 28:45.840
新研发部下面啊

28:45.840 --> 28:47.840
我们可以增加一个

28:47.840 --> 28:48.840
比如说这个

28:48.840 --> 28:49.840
应该是哪一个

28:49.840 --> 28:50.840
我看一下

28:50.840 --> 28:51.840
这个叫技术研发部啊

28:51.840 --> 28:52.840
这里面

28:52.840 --> 28:53.840
我们来添加一下

28:53.840 --> 28:54.840
到这个里面

28:54.840 --> 28:57.840
技术研发部

28:57.840 --> 28:59.840
我们找一下技术研发部

28:59.840 --> 29:00.840
OK没问题

29:00.840 --> 29:01.840
然后到这里面一添加

29:01.840 --> 29:03.840
添加完成之后

29:03.840 --> 29:04.840
这个时候

29:04.840 --> 29:05.840
当我添加成功之后

29:05.840 --> 29:06.840
你会发现

29:06.840 --> 29:07.840
技术研发部下面

29:07.840 --> 29:08.840
就多了两个部门

29:08.840 --> 29:09.840
一个是技术研发部

29:09.840 --> 29:11.840
一个是大数据产品部

29:11.840 --> 29:12.840
那这个呢

29:12.840 --> 29:14.840
就是我们所需要

29:14.840 --> 29:16.840
实现的这么一个效果

29:16.840 --> 29:18.840
组织架构的一个书上图

29:18.840 --> 29:19.840
那这是一个基本展示

29:19.840 --> 29:20.840
然后还有一个人呢

29:20.840 --> 29:21.840
我们可以

29:21.840 --> 29:22.840
刚才也展示了

29:22.840 --> 29:23.840
对他进行一个修改

29:23.840 --> 29:24.840
比如说修改

29:24.840 --> 29:25.840
哪些内容呢

29:25.840 --> 29:26.840
我们可以修改

29:26.840 --> 29:27.840
这些子部门

29:27.840 --> 29:28.840
或者说

29:28.840 --> 29:29.840
我删除一个子部门

29:29.840 --> 29:30.840
解除子部门的关联

29:30.840 --> 29:31.840
点击券之后

29:31.840 --> 29:32.840
那如果说

29:32.840 --> 29:33.840
你解除了

29:33.840 --> 29:34.840
这种子部门关联之后

29:34.840 --> 29:35.840
你会发现

29:35.840 --> 29:36.840
这个技术研发部

29:36.840 --> 29:37.840
是不是又回到

29:37.840 --> 29:38.840
一级部门了

29:38.840 --> 29:39.840
对吧

29:39.840 --> 29:40.840
这个呢

29:40.840 --> 29:41.840
就是我们实现的一个效果

29:41.840 --> 29:42.840
然后这里面呢

29:42.840 --> 29:43.840
我们点击详情

29:43.840 --> 29:44.840
还可以查看

29:44.840 --> 29:46.840
当前部门的一些

29:46.840 --> 29:48.840
员工的信息

29:48.840 --> 29:49.840
当然这个部门里面

29:49.840 --> 29:50.840
现在只有一个员工

29:50.840 --> 29:51.840
对不对

29:51.840 --> 29:52.840
还有呢

29:52.840 --> 29:53.840
根据我们这个

29:53.840 --> 29:54.840
部门负责人呢

29:54.840 --> 29:55.840
我们也可以进行

29:55.840 --> 29:56.840
一个指定的更换

29:56.840 --> 29:57.840
比如说

29:57.840 --> 29:59.840
把张飞作为部门的负责人

29:59.840 --> 30:00.840
ok 那这样呢

30:00.840 --> 30:01.840
就实现了一个

30:01.840 --> 30:03.840
部门负责人的一个修改

30:03.840 --> 30:04.840
替换的这么一个功能

30:04.840 --> 30:05.840
或者说呢

30:05.840 --> 30:06.840
我们后面啊

30:06.840 --> 30:07.840
还可以进行什么呢

30:07.840 --> 30:09.840
部门的一个新增

30:09.840 --> 30:11.840
包括我们部门的一个删除

30:11.840 --> 30:12.840
删除在哪个里面啊

30:12.840 --> 30:14.840
删除其实就是在详情里面

30:14.840 --> 30:16.840
我们可以给他做一个删除

30:16.840 --> 30:17.840
如果说

30:17.840 --> 30:18.840
我们要去创建的

30:18.840 --> 30:19.840
某一个部门的时候

30:19.840 --> 30:21.840
那删除这种状态呢

30:21.840 --> 30:22.840
我们是要给他隐藏掉的

30:22.840 --> 30:23.840
这个呢

30:23.840 --> 30:24.840
就是我们部门

30:24.840 --> 30:25.840
有别于其他

30:25.840 --> 30:26.840
某个块的

30:26.840 --> 30:28.840
一个制作的特点啊

30:28.840 --> 30:29.840
也就是说

30:29.840 --> 30:31.840
他们之间的一个区别

30:31.840 --> 30:32.840
这块呢

30:32.840 --> 30:33.840
就是ok

30:33.840 --> 30:34.840
好的

30:34.840 --> 30:35.840
以上这些呢

30:35.840 --> 30:38.840
就是我们整个课程案例里面

30:38.840 --> 30:40.840
所有设计到的一个模块

30:40.840 --> 30:41.840
至于其他模块呢

30:41.840 --> 30:43.840
我们在这个完成的时候

30:43.840 --> 30:44.840
给同学们

30:44.840 --> 30:45.840
会做一个详细的介绍

30:45.840 --> 30:47.840
那我们案例

30:47.840 --> 30:49.840
整体的实现流程

30:49.840 --> 30:50.840
是什么样的呢

30:50.840 --> 30:52.840
在这里跟同学们说一下

30:52.840 --> 30:53.840
首先啊

30:53.840 --> 30:54.840
我们案例整体的实现流程

30:54.840 --> 30:55.840
第一就是

30:55.840 --> 30:57.840
以基本结构的

30:57.840 --> 30:59.840
搭建为第一步

30:59.840 --> 31:00.840
也就是说出发点

31:00.840 --> 31:01.840
就是

31:01.840 --> 31:03.840
搭建一个基本结构的一个搭建

31:03.840 --> 31:04.840
第二呢

31:04.840 --> 31:05.840
就是我们要做

31:05.840 --> 31:07.840
后端接口API的一个

31:07.840 --> 31:08.840
请求方法的一个封装处理

31:08.840 --> 31:09.840
之后呢

31:09.840 --> 31:11.840
会做一些公共组件

31:11.840 --> 31:13.840
为我们每一个模块来服务

31:13.840 --> 31:14.840
第四个呢

31:14.840 --> 31:17.840
就是我们要定一些公共的

31:17.840 --> 31:18.840
hook

31:18.840 --> 31:19.840
也就是说我们这里面啊

31:19.840 --> 31:21.840
会使用一些公有的hook

31:21.840 --> 31:22.840
那在这个里面呢

31:22.840 --> 31:23.840
我们会有创建

31:23.840 --> 31:24.840
之后呢

31:24.840 --> 31:25.840
我们会完成每一个模块

31:25.840 --> 31:27.840
功能组件的一个开发

31:27.840 --> 31:28.840
最后呢

31:28.840 --> 31:30.840
就是我们工程打包的一个分析

31:30.840 --> 31:31.840
到我们最后的

31:31.840 --> 31:33.840
构建的整个过程

31:33.840 --> 31:34.840
之后呢

31:34.840 --> 31:35.840
我们就会把我们案例

31:35.840 --> 31:36.840
所有设计到内容

31:36.840 --> 31:38.840
都给实现调达

31:38.840 --> 31:41.840
我们课程的讲解方式

31:41.840 --> 31:42.840
是什么样的呢

31:42.840 --> 31:44.840
由以下几点构成

31:44.840 --> 31:45.840
首先第一呢

31:45.840 --> 31:47.840
我们的以项目为导向

31:47.840 --> 31:50.840
只学习项目需要的相关一篇

31:50.840 --> 31:51.840
也就是说

31:51.840 --> 31:52.840
我们的Umi

31:52.840 --> 31:53.840
包括我们迪瓦

31:53.840 --> 31:55.840
以及我们安迪站里面

31:55.840 --> 31:56.840
好多的内容

31:56.840 --> 31:58.840
那这些内容怎么办呢

31:58.840 --> 31:59.840
我们不要担心

31:59.840 --> 32:01.840
在学习的过程当中

32:01.840 --> 32:03.840
跟案例相关那一篇

32:03.840 --> 32:04.840
我会给同学们

32:04.840 --> 32:05.840
做一个详细的介绍

32:05.840 --> 32:06.840
如果说呢

32:06.840 --> 32:07.840
我们这个案例里面

32:07.840 --> 32:09.840
设计不到的一些组件

32:09.840 --> 32:11.840
一些其他的这个方法

32:11.840 --> 32:12.840
我们可以利用自己的

32:12.840 --> 32:13.840
业余时间

32:13.840 --> 32:15.840
来扩展一下相关的

32:15.840 --> 32:17.840
相对应的一个知识点

32:17.840 --> 32:18.840
第二呢

32:18.840 --> 32:20.840
我们是以模块为核心

32:20.840 --> 32:23.840
逐步实现一个项目的开发

32:23.840 --> 32:24.840
也就是说

32:24.840 --> 32:25.840
我们在制作过程当中

32:25.840 --> 32:26.840
那么首先

32:26.840 --> 32:27.840
我们要知道

32:27.840 --> 32:28.840
完成的时候

32:28.840 --> 32:29.840
第一步

32:29.840 --> 32:30.840
我们就要完成什么

32:30.840 --> 32:32.840
这个用户的一个登录模块

32:32.840 --> 32:33.840
对吧

32:33.840 --> 32:34.840
包括他的这个

32:34.840 --> 32:36.840
手机号码登录

32:36.840 --> 32:37.840
以及忘记密码

32:37.840 --> 32:38.840
这样组件的一个制作

32:38.840 --> 32:40.840
以模块为单位

32:40.840 --> 32:42.840
然后呢完成一个模块之后

32:42.840 --> 32:43.840
我们再继续

32:43.840 --> 32:44.840
下一个模块的开发

32:44.840 --> 32:45.840
这个呢

32:45.840 --> 32:46.840
是我们实现的

32:46.840 --> 32:48.840
一个课程讲解方式

32:48.840 --> 32:50.840
然后CIS的样式部分

32:50.840 --> 32:51.840
我们主要依赖

32:51.840 --> 32:52.840
三方组件库

32:52.840 --> 32:53.840
安迪站来实现

32:53.840 --> 32:54.840
那有一些

32:54.840 --> 32:55.840
需要我们特殊处理的

32:55.840 --> 32:56.840
一个样式呢

32:56.840 --> 32:57.840
这个时候

32:57.840 --> 32:58.840
我们在这边写一下

32:58.840 --> 32:59.840
当然了样式啊

32:59.840 --> 33:00.840
不是特别多

33:00.840 --> 33:01.840
而且呢

33:01.840 --> 33:02.840
我们借助这种

33:02.840 --> 33:03.840
Less的这个愚法编页

33:03.840 --> 33:04.840
它呢

33:04.840 --> 33:05.840
实现是非常快的

33:05.840 --> 33:06.840
受课过程当中

33:06.840 --> 33:08.840
我们完成功能

33:08.840 --> 33:10.840
不是有重复性的

33:10.840 --> 33:12.840
这些相应的模块制作

33:12.840 --> 33:13.840
也就是说

33:13.840 --> 33:15.840
我们在这个制作的时候

33:15.840 --> 33:16.840
登录模块

33:16.840 --> 33:18.840
我们是一定要完成的

33:18.840 --> 33:19.840
在这个里面

33:19.840 --> 33:20.840
包括他的手机号码登录

33:20.840 --> 33:21.840
账号登录

33:21.840 --> 33:22.840
以及我们忘记密码

33:22.840 --> 33:23.840
在这个里面呢

33:23.840 --> 33:24.840
比如说

33:24.840 --> 33:26.840
一些没有重复性的

33:26.840 --> 33:27.840
员工模块呢

33:27.840 --> 33:29.840
它是比较具有代表性的

33:29.840 --> 33:30.840
那我会带领同学们

33:30.840 --> 33:31.840
把员工模块的

33:31.840 --> 33:32.840
每一个组件制作

33:32.840 --> 33:33.840
都呢

33:33.840 --> 33:34.840
手把手的

33:34.840 --> 33:35.840
来实现了

33:35.840 --> 33:36.840
之后的

33:36.840 --> 33:37.840
比如说我们

33:37.840 --> 33:38.840
技校和调心

33:38.840 --> 33:39.840
讲诚

33:39.840 --> 33:40.840
这些呢

33:40.840 --> 33:41.840
我们需要

33:41.840 --> 33:43.840
带领同学们完成的

33:43.840 --> 33:44.840
然后包括他里面的

33:44.840 --> 33:45.840
一个图表展示

33:45.840 --> 33:46.840
出勤统计

33:46.840 --> 33:47.840
那这些呢

33:47.840 --> 33:48.840
其实

33:48.840 --> 33:49.840
他没有复用性

33:49.840 --> 33:50.840
对不对

33:50.840 --> 33:51.840
而且呢

33:51.840 --> 33:52.840
也不跟其他模块

33:52.840 --> 33:53.840
做重复

33:53.840 --> 33:54.840
所以说

33:54.840 --> 33:55.840
我们

33:55.840 --> 33:57.840
调心讲诚这一块呢

33:57.840 --> 33:58.840
我会给同学们

33:58.840 --> 33:59.840
介绍一下

33:59.840 --> 34:00.840
实现的思路

34:00.840 --> 34:01.840
但是呢

34:01.840 --> 34:02.840
代码部分呢

34:02.840 --> 34:03.840
我们在讲解的过程当中

34:03.840 --> 34:04.840
可能就不会涉及到了

34:04.840 --> 34:05.840
然后呢

34:05.840 --> 34:06.840
同学们需要自己

34:06.840 --> 34:07.840
手动来实现一下

34:07.840 --> 34:08.840
当然了

34:08.840 --> 34:09.840
不要担心啊

34:09.840 --> 34:10.840
比如说像这种

34:10.840 --> 34:11.840
比较特殊的部门

34:11.840 --> 34:12.840
包括我们直级里面的

34:12.840 --> 34:13.840
一些业务处理

34:13.840 --> 34:14.840
因为直级

34:14.840 --> 34:15.840
我们在创建的时候

34:15.840 --> 34:16.840
像这里面

34:16.840 --> 34:18.840
会有一些运算的规则

34:18.840 --> 34:19.840
那比如说

34:19.840 --> 34:20.840
我们要添一个什么

34:20.840 --> 34:21.840
直级的对应分数

34:21.840 --> 34:22.840
假如说

34:22.840 --> 34:23.840
我要是90分

34:23.840 --> 34:24.840
90分我添完了之后

34:24.840 --> 34:25.840
将应的一个改变呢

34:25.840 --> 34:26.840
比如说这个

34:26.840 --> 34:27.840
面试要求啊

34:27.840 --> 34:28.840
新增一些

34:28.840 --> 34:30.840
直级的技校考核啊

34:30.840 --> 34:31.840
sorry

34:31.840 --> 34:32.840
我给同学们

34:32.840 --> 34:34.840
看一下这个技校考核

34:34.840 --> 34:35.840
那比如说技校考核

34:35.840 --> 34:36.840
创建的时候

34:36.840 --> 34:38.840
我们要调整一下

34:38.840 --> 34:39.840
直级T9-3

34:39.840 --> 34:40.840
那他就会有

34:40.840 --> 34:41.840
对应的直级分数的

34:41.840 --> 34:42.840
一个展示

34:42.840 --> 34:43.840
然后呢

34:43.840 --> 34:45.840
考核得分30

34:45.840 --> 34:46.840
ok

34:46.840 --> 34:47.840
自动计算出结果

34:47.840 --> 34:48.840
像这种比较有

34:48.840 --> 34:49.840
特性的内容呢

34:49.840 --> 34:51.840
我会都带领同学们

34:51.840 --> 34:52.840
来实现一下的

34:52.840 --> 34:53.840
那剩下的

34:53.840 --> 34:54.840
比如说

34:54.840 --> 34:55.840
重复性比较多的内容

34:55.840 --> 34:56.840
怎么办呢

34:56.840 --> 34:57.840
这个呢就需要

34:57.840 --> 34:59.840
同学们自己来完成一下啊

34:59.840 --> 35:00.840
好的

35:00.840 --> 35:01.840
以上这些内容呢

35:01.840 --> 35:02.840
就是我们

35:02.840 --> 35:03.840
本节课

35:03.840 --> 35:05.840
给同学们的一个简单介绍

35:05.840 --> 35:06.840
也就是说

35:06.840 --> 35:07.840
对我们整个案例

35:07.840 --> 35:09.840
做了一个整体的分析

35:09.840 --> 35:10.840
那么接下来呢

35:10.840 --> 35:11.840
我们就基于

35:11.840 --> 35:13.840
以上的这些内容

35:13.840 --> 35:14.840
来一步一步的

35:14.840 --> 35:16.840
完成这个案例效果

35:16.840 --> 35:17.840
就ok了

35:17.840 --> 35:18.840
我们这节课就到这里

35:18.840 --> 35:19.840
谢谢大家

