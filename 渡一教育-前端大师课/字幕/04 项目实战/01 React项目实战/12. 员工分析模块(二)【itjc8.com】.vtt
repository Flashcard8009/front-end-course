WEBVTT

00:01.460 --> 00:02.860
各位同学大家好

00:02.860 --> 00:06.460
这期课我们继续员工分析模块的一个制作

00:06.460 --> 00:08.060
那么通过上一课的学习呢

00:08.060 --> 00:10.660
我们已经把一些基础的组件制作完成

00:10.660 --> 00:13.060
比如说我们员工数量展示的组件

00:13.060 --> 00:16.260
以及我们员工的一个部门员工的

00:16.260 --> 00:20.460
这样一个入职最长时间的这种表格组件

00:20.460 --> 00:21.760
我们都已经定义好了

00:21.760 --> 00:23.360
那么接下来呢本节课呢

00:23.360 --> 00:25.260
我们就基于获取到的数据

00:25.260 --> 00:28.860
来实现一下这种图表组件的一个制作

00:28.860 --> 00:30.460
那么做图表组件呢

00:30.460 --> 00:32.060
首先我们要明确一点

00:32.060 --> 00:35.460
我们呢是基于一刹次给我们提供的图表组件

00:35.460 --> 00:39.360
这个框架来实现的图表组件的引注

00:39.360 --> 00:40.160
那这个里面呢

00:40.160 --> 00:42.660
为了在react当中快速的使用

00:42.660 --> 00:45.760
我们这里面是真正的使用到的是

00:45.760 --> 00:47.360
一刹次fold react的

00:47.360 --> 00:50.560
这个基于一刹次封装起来的三方组件库

00:51.660 --> 00:53.060
我们可以来看一下

00:53.060 --> 00:53.560
这个呢

00:53.560 --> 00:58.060
就是一刹次fold react的一个在线的文档

00:58.060 --> 00:59.060
那这个文档里面啊

00:59.060 --> 01:01.060
有好多它的一个使用方法

01:01.060 --> 01:02.560
使用使用形式呢

01:02.560 --> 01:03.560
也是非常简单啊

01:03.560 --> 01:05.860
你只要安装一个npm

01:05.860 --> 01:08.960
insert e21刹次fold react就可以了

01:08.960 --> 01:09.960
那我们在这里面呢

01:09.960 --> 01:12.360
首先先给他来进行一个安装

01:12.360 --> 01:14.460
回到我们的这个代码里面啊

01:14.460 --> 01:16.260
先给他进行一个合并

01:16.260 --> 01:16.860
合并之后

01:16.860 --> 01:19.460
那我们这里面来做一下e212

01:20.960 --> 01:22.460
一刹次fold react

01:22.460 --> 01:25.260
那我们就给他来进行一个安装就好了啊

01:25.260 --> 01:26.160
安装的时候

01:26.160 --> 01:28.760
我们来看一下怎么具体来使用它呢

01:28.760 --> 01:32.660
这个里面有说到使用它的一个APN

01:32.660 --> 01:33.360
那也就是说

01:33.360 --> 01:36.360
我们想快速的在工程里面引入e22次

01:36.360 --> 01:37.360
那这个非常简单

01:37.360 --> 01:39.660
如果说我们下载了e22次fold react

01:39.660 --> 01:41.160
你直接拿过来用就可以了

01:41.160 --> 01:41.560
然后呢

01:41.560 --> 01:42.360
导入它之后

01:42.360 --> 01:43.260
在这个里面

01:43.260 --> 01:44.960
把这个组件进行一个调用

01:44.960 --> 01:45.260
ok

01:45.260 --> 01:47.360
这里面是它的一个option的选项

01:47.360 --> 01:47.960
那这时候呢

01:47.960 --> 01:52.060
就可以快速出现一个我们的这种线性图

01:52.060 --> 01:52.460
然后呢

01:52.460 --> 01:53.160
这是第一种啊

01:53.160 --> 01:55.460
还可以我们看一下它的这个粒子

01:55.460 --> 01:56.860
这个粒子里面有好多

01:56.860 --> 01:58.460
比如说我们的案例里面

01:58.460 --> 02:00.060
适合机道的柱状图啊

02:00.060 --> 02:01.660
以及我们这个柄状图

02:01.660 --> 02:02.660
其实在这个里面呢

02:02.660 --> 02:03.860
是都有展示的

02:03.860 --> 02:05.060
那如何来经操作呢

02:05.060 --> 02:06.060
其实也非常简单

02:07.060 --> 02:08.760
这个里面有一个编码测试

02:08.760 --> 02:09.860
我们打开啊

02:09.860 --> 02:11.560
打开这个编码测试之后

02:11.560 --> 02:12.860
那我们就从这里面啊

02:12.860 --> 02:15.460
可以来进行相关属性的一个调试

02:15.460 --> 02:16.560
但是打开之后呢

02:16.560 --> 02:17.560
首先第一样

02:17.560 --> 02:20.760
这个里面是需要你安装一些依赖啊

02:20.760 --> 02:22.360
那我们就把这个依赖安装一下

02:22.360 --> 02:23.660
否则他说我们找不到

02:23.660 --> 02:24.360
对吧

02:24.360 --> 02:25.360
安装依赖之后

02:25.360 --> 02:26.360
这里面又抱错了

02:26.360 --> 02:27.760
优自死地的抱错

02:27.760 --> 02:28.960
那这是因为啥啊

02:28.960 --> 02:30.760
这个呢是因为我们运行

02:30.760 --> 02:33.560
他这个案例的时候使用到react的版本啊

02:33.560 --> 02:34.360
有点低

02:34.360 --> 02:35.160
那我现在怎么办

02:35.160 --> 02:36.860
我用17.0.2的

02:36.860 --> 02:37.360
同时呢

02:37.360 --> 02:39.160
我们把这个哎

02:39.160 --> 02:40.660
这个我用16.8的吧

02:42.360 --> 02:43.260
react

02:43.260 --> 02:46.160
我们用16.8.2

02:46.160 --> 02:46.760
好吧

02:46.760 --> 02:47.360
同时呢

02:47.360 --> 02:48.960
我们这个啊

02:48.960 --> 02:50.460
下面的react的道目呢

02:50.460 --> 02:52.560
也用到16.8.2啊

02:52.560 --> 02:54.160
要保证他这个版本统一

02:54.160 --> 02:56.360
否则你是运行不起来的

02:56.360 --> 02:57.860
16.8.2

02:57.860 --> 02:59.860
我们找一下小版本还比较多

02:59.860 --> 03:00.460
对吧

03:00.460 --> 03:00.960
然后呢

03:00.960 --> 03:02.460
我们看一下16.8.2

03:02.460 --> 03:02.760
ok

03:02.760 --> 03:03.760
找到之后

03:03.760 --> 03:04.360
找到之后

03:04.360 --> 03:06.660
当我们依赖都发生了更改之后

03:06.660 --> 03:08.360
那这个时候呢

03:08.360 --> 03:09.660
我再进行一个刷新

03:09.660 --> 03:10.660
此时你会发现啊

03:10.660 --> 03:11.560
能显示出来了

03:11.560 --> 03:11.860
对吧

03:13.060 --> 03:14.360
刚才是展示出来了

03:14.360 --> 03:14.560
ok

03:14.560 --> 03:15.260
没问题

03:15.260 --> 03:16.460
然后在这个里面怎么看

03:16.460 --> 03:16.960
那其实呢

03:16.960 --> 03:17.960
这个就是他的案例

03:17.960 --> 03:20.260
我们就不需要引入到工程里面了啊

03:20.260 --> 03:21.360
我们在这个里面呢

03:21.360 --> 03:24.060
其实直接的就可以对他进行一些修改

03:24.060 --> 03:27.560
然后调试来看某一个属性具体的作用

03:27.560 --> 03:29.660
其实我们react 1x啊

03:29.660 --> 03:31.760
他也是基于1x来实现的

03:31.760 --> 03:33.960
所以说里面好多属性跟1x啊

03:33.960 --> 03:35.460
都是相同的

03:35.460 --> 03:37.560
因为我们之前有1x的课程

03:37.560 --> 03:38.960
然后同学们如果说忘了

03:38.960 --> 03:39.360
怎么办

03:39.360 --> 03:41.360
我们可以打开之前的课程

03:41.360 --> 03:41.960
或者是呢

03:41.960 --> 03:43.560
你查看1x的文档

03:43.560 --> 03:45.460
都可以找到相关的属性

03:45.460 --> 03:46.360
比如说我们这个

03:46.360 --> 03:48.360
对头部的一个描述

03:48.360 --> 03:50.060
那这里面啊

03:50.060 --> 03:50.960
访问来源

03:50.960 --> 03:51.960
我这里面改一下

03:51.960 --> 03:52.360
Hello

03:53.360 --> 03:53.960
ok

03:53.960 --> 03:55.260
那现在你看改到的啊

03:55.260 --> 03:58.060
他实时的就能进行一个什么更新了

03:58.060 --> 03:59.060
那这里面某阵点

03:59.060 --> 04:00.260
访问的一个Hello

04:00.260 --> 04:00.560
对不对

04:00.560 --> 04:02.360
然后后面是一个副标题

04:02.360 --> 04:03.860
纯属许供意义

04:03.860 --> 04:04.960
就添加了一个意义

04:04.960 --> 04:05.560
对不对

04:05.560 --> 04:07.560
包括我们这个tip

04:07.560 --> 04:08.660
tip指的是什么

04:08.660 --> 04:11.060
就是我们划过之后里面的这个内容

04:11.060 --> 04:13.960
你看这个里面显示的是什么

04:13.960 --> 04:15.760
比如说我们看帽号后面的

04:15.760 --> 04:18.960
这个c呢展示的是我们1548这个数字

04:18.960 --> 04:21.060
d呢展示的是我们这个

04:21.060 --> 04:23.160
60.42%

04:23.160 --> 04:24.560
是不是就是这种情况

04:24.560 --> 04:24.860
对吧

04:25.860 --> 04:27.060
其实里面好多内容啊

04:27.060 --> 04:29.660
我们都可以来进行一个测试

04:29.660 --> 04:31.260
那这样测试的好处是什么呢

04:31.260 --> 04:34.560
就是说方便我们在这个实时的进行

04:34.560 --> 04:35.060
一个调试

04:35.060 --> 04:36.460
如果说你忘了某个属性

04:36.460 --> 04:38.660
你在这里面来做一个测试就ok了啊

04:38.660 --> 04:39.160
之后呢

04:39.160 --> 04:40.760
比如说我们这个偷tip

04:40.760 --> 04:42.060
那偷tip刚才说完了

04:42.060 --> 04:43.460
然后咱们再来说这几个

04:43.460 --> 04:44.060
直接访问

04:44.060 --> 04:44.860
比如说来着呢

04:44.860 --> 04:45.260
来着呢

04:45.260 --> 04:47.060
这里面是哪一个部分呢

04:47.060 --> 04:47.560
直接访问

04:47.560 --> 04:48.860
其实我划过去之后

04:48.860 --> 04:49.960
那这个里面直接访问

04:49.960 --> 04:50.960
是不是变成了

04:50.960 --> 04:53.160
应该是变的数字才对啊

04:54.460 --> 04:55.260
我们看一下

04:55.260 --> 04:56.760
这个里面应该是在下面啊

04:56.760 --> 04:58.260
稍微我找一下啊

04:58.260 --> 05:01.460
那我们找到直接访问一这个数据

05:01.460 --> 05:02.160
数据的话

05:02.160 --> 05:03.960
那这个时候你会发现啊

05:03.960 --> 05:04.760
我们直接访问

05:04.760 --> 05:06.360
这个时候是不是发生改变了

05:06.360 --> 05:08.160
然后底下的内容有发生改变

05:08.160 --> 05:09.660
变成直接访问一

05:09.660 --> 05:12.860
然后其实这个就是上面的一个处理啊

05:12.860 --> 05:13.860
里面好多内容

05:13.860 --> 05:15.660
同学们可以自行的去设置

05:15.660 --> 05:17.060
然后怎么来实现

05:17.060 --> 05:18.560
就是按我刚才说的啊

05:18.560 --> 05:21.360
你把这个他的这个文档里面的内容

05:21.360 --> 05:22.260
给做一个打开

05:22.260 --> 05:24.560
然后在左下角有一个

05:24.560 --> 05:28.560
open demo encode send box

05:28.560 --> 05:30.960
然后你从这个里面就可以来实现

05:30.960 --> 05:31.360
之后呢

05:31.360 --> 05:32.660
你把这个版本调一下

05:32.660 --> 05:34.860
比如说他这个里面用到了

05:34.860 --> 05:36.060
you的state

05:36.060 --> 05:37.160
那这个you state呢

05:37.160 --> 05:39.360
是在react 16.8之后

05:40.260 --> 05:41.060
才有支持的

05:41.060 --> 05:41.760
所以说这个

05:41.760 --> 05:43.360
我们要知道一下就ok

05:43.360 --> 05:45.060
那我们就回来做一下

05:45.060 --> 05:47.160
做我们的这个案例里面怎么来做

05:47.160 --> 05:48.760
那因为刚才已经下载了

05:48.760 --> 05:49.260
对不对

05:49.260 --> 05:50.560
当你下载成功之后

05:50.560 --> 05:53.060
那现在其实我们就可以来进行使用了

05:53.060 --> 05:53.960
首先第一步

05:53.960 --> 05:55.860
找到我们的dash

05:55.860 --> 05:58.160
boud从配置下面打开

05:58.160 --> 06:00.260
因为这个里面会涉及到组件

06:00.260 --> 06:00.860
所以说呢

06:00.860 --> 06:03.060
我们这里面要封装一些组件

06:03.060 --> 06:03.960
那我们来看一下

06:03.960 --> 06:05.360
已经完成的这个里面

06:05.360 --> 06:07.260
都需要哪些组件

06:07.260 --> 06:08.560
把它也做一个登录

06:08.560 --> 06:09.960
当登录成功之后

06:09.960 --> 06:10.760
我们看到的

06:10.760 --> 06:12.960
首先是有一个饼状图的组件

06:12.960 --> 06:15.260
那饼状图组件大概有几个呢

06:15.260 --> 06:15.960
一二

06:16.060 --> 06:17.360
然后这是第三个

06:17.360 --> 06:17.960
还有一个呢

06:17.960 --> 06:19.160
是第四个

06:19.160 --> 06:21.160
这是饼状图组件有四个

06:21.160 --> 06:23.460
那这里面我们其实可以封装一个

06:23.460 --> 06:23.960
之后呢

06:23.960 --> 06:25.360
给它传一些type

06:25.360 --> 06:26.460
比如说这是空气儿的

06:26.460 --> 06:28.260
那我就可以给它传一个MTB

06:28.260 --> 06:29.860
这时候就让它变成空气儿的

06:29.860 --> 06:30.360
就可以了

06:30.360 --> 06:30.860
是不是

06:30.860 --> 06:32.560
实现起来也是比较简单的

06:32.560 --> 06:33.960
柱状图呢有三个

06:33.960 --> 06:35.060
但是这个柱状图呢

06:35.060 --> 06:37.160
我们这两个员工年龄段

06:37.160 --> 06:38.960
和这个员工数量这个

06:38.960 --> 06:40.260
我们可以实现一个附用

06:41.360 --> 06:41.960
但是呢

06:41.960 --> 06:43.460
我们这个平均年龄这个

06:43.460 --> 06:44.260
尽量不要附用

06:44.260 --> 06:45.260
因为什么呢

06:45.260 --> 06:48.260
有的我们这个是主轴为这个x轴

06:48.260 --> 06:48.760
对不对

06:48.760 --> 06:50.360
进行一个数据展示

06:50.360 --> 06:50.960
但是呢

06:50.960 --> 06:53.460
我们这个平均年龄的主轴为y轴

06:53.460 --> 06:54.460
来进行数据展示

06:54.460 --> 06:56.360
所以说他们是不一样的啊

06:56.360 --> 06:56.960
那这种呢

06:56.960 --> 06:57.560
怎么来做的

06:57.560 --> 06:59.360
我们这个可以单独的封装

06:59.360 --> 07:00.660
一个AgeMap

07:00.660 --> 07:01.660
至于其他的呢

07:01.660 --> 07:04.060
我们就可以封装一个climate

07:04.060 --> 07:06.060
也就是说封一个柱状图啊

07:07.160 --> 07:07.460
好的

07:07.460 --> 07:08.560
基于这种情况呢

07:08.560 --> 07:09.860
那现在我们要知道了

07:09.860 --> 07:12.860
我们肯定至少需要什么三个组件

07:12.860 --> 07:15.060
那我们一次再来实现一下

07:15.060 --> 07:16.060
首先第一个

07:16.060 --> 07:17.260
我们要做一个什么呢

07:17.260 --> 07:18.460
要做一个派组件

07:18.460 --> 07:20.960
也就是说给我们的这个柄状图

07:20.960 --> 07:23.260
那这里面写一个gx

07:23.260 --> 07:24.660
然后引入一下

07:25.960 --> 07:26.660
引入之后

07:26.660 --> 07:28.760
这个派就定一好了啊

07:28.760 --> 07:29.860
这是一个

07:29.860 --> 07:30.660
那一个之后

07:30.660 --> 07:32.260
我们再继续来创建啊

07:32.260 --> 07:32.760
然后呢

07:32.760 --> 07:33.760
还会有一个什么呢

07:33.760 --> 07:34.360
climate

07:34.360 --> 07:35.760
那我这里面就写一下

07:37.860 --> 07:38.760
climate

07:38.760 --> 07:40.460
climate.jsx

07:40.460 --> 07:42.760
这个更简单一些这个实力啊

07:42.760 --> 07:43.060
好了

07:43.060 --> 07:44.460
那定一完climate之后

07:44.460 --> 07:45.960
我们再来定一个

07:45.960 --> 07:46.560
然后呢

07:46.560 --> 07:47.560
这个刚才咱们说了

07:47.560 --> 07:48.760
咱们要定一个什么

07:48.760 --> 07:49.960
AzClimate

07:49.960 --> 07:50.760
对吧

07:50.760 --> 07:54.160
那这里面再写一个drjsx

07:54.160 --> 07:58.460
把它同样的给它做一个rfce导入啊

07:58.460 --> 07:59.960
这个名字写错了

07:59.960 --> 08:04.970
我们重新的重名一下Az

08:04.970 --> 08:05.370
好了

08:05.370 --> 08:06.470
定一好之后

08:06.470 --> 08:07.670
那这里面统一的吧

08:07.670 --> 08:08.970
这两个也改一下吧

08:08.970 --> 08:13.660
叫AzClimate

08:13.660 --> 08:14.960
OK 定一完成之后

08:14.960 --> 08:17.260
首先我们来处理这个柄状图

08:17.260 --> 08:19.960
因为我们现在展示的员工人数完成之后

08:19.960 --> 08:21.660
是不是就是该这个柄状图了

08:21.660 --> 08:22.860
那我们就来写一下

08:22.860 --> 08:23.960
柄状图怎么来写呢

08:23.960 --> 08:24.660
首先第一步

08:24.660 --> 08:27.760
我们要将这个柄状图给做一个导入啊

08:27.760 --> 08:28.260
导入

08:28.260 --> 08:30.460
从这个里面来进行一个导入吧

08:30.460 --> 08:32.460
引炮的派这个组件

08:32.460 --> 08:36.360
from我们的这个.component

08:36.360 --> 08:38.860
下面的是我们的这个派组件

08:38.860 --> 08:39.660
OK

08:39.660 --> 08:40.460
导进来之后

08:40.460 --> 08:42.360
其实理论上我们就可以使用了

08:42.360 --> 08:42.860
然后呢

08:42.860 --> 08:44.860
这个使用怎么办呢

08:44.960 --> 08:47.560
我们首先第一得需要数据啊

08:47.560 --> 08:50.160
其实柄状图对线数据来讲

08:50.160 --> 08:51.960
它相对还是比较简单的

08:51.960 --> 08:54.560
比如说我们柄状图依赖的这种数据

08:54.560 --> 08:55.860
那我们可以看一下

08:55.860 --> 08:56.460
在这个里面

08:56.460 --> 08:59.560
我们也登录一下吧

08:59.560 --> 09:01.460
admin123qwe

09:01.460 --> 09:02.160
OK

09:02.160 --> 09:03.460
登录完成之后

09:03.460 --> 09:05.260
然后比如说这个学历情况

09:05.260 --> 09:06.060
那学历情况

09:06.060 --> 09:07.760
后端给我们返回的数据

09:07.760 --> 09:09.260
是一种什么形式呢

09:09.260 --> 09:11.060
我们直接检查network

09:11.060 --> 09:12.860
在这个里面来进行查看

09:12.860 --> 09:15.160
analyzerstuff看preview

09:15.160 --> 09:16.060
打开之后

09:16.060 --> 09:18.560
那这个里面就会有一个edication

09:18.560 --> 09:19.260
对不对

09:19.260 --> 09:20.560
adication list的

09:20.560 --> 09:21.960
像这里面展示的

09:21.960 --> 09:23.560
其实都是每一个什么

09:23.560 --> 09:24.760
name和value

09:24.760 --> 09:25.460
也就是说呢

09:25.460 --> 09:27.560
其实它对应的这里面应该是什么

09:27.560 --> 09:30.260
name代表着我们这一块展示的内容

09:30.260 --> 09:31.060
那value值呢

09:31.060 --> 09:32.360
value值其实就是

09:32.360 --> 09:33.460
比如说划过之后

09:33.460 --> 09:34.260
这里面有多少

09:34.260 --> 09:36.060
是不是人数的一个展示

09:36.060 --> 09:37.260
非常的简单啊

09:37.260 --> 09:37.760
所以说呢

09:37.760 --> 09:40.260
我们知道了数据的形式之后

09:40.260 --> 09:41.860
那我们这里面就可以来进行

09:41.860 --> 09:43.560
对它一个处理啊

09:43.560 --> 09:45.060
首先我们来写的话

09:45.060 --> 09:47.660
那直到第一次渲染这个冰状图的时候

09:47.660 --> 09:49.260
它是水平会渲染两个

09:49.260 --> 09:50.560
一个是edication

09:50.560 --> 09:51.160
还有一个呢

09:51.160 --> 09:52.960
是员工性别的一个占比

09:52.960 --> 09:54.760
两个的返回数据都完全一致

09:54.760 --> 09:55.360
只不过是呢

09:55.360 --> 09:57.060
我们员工性别占比

09:57.060 --> 09:57.660
左侧呢

09:57.660 --> 09:59.360
会有一个

09:59.360 --> 10:00.460
我们的一个提示啊

10:00.460 --> 10:01.360
比如说

10:01.360 --> 10:03.460
我们这个蓝色代表着什么呢

10:03.460 --> 10:04.360
我们的这个蓝

10:04.360 --> 10:04.960
然后呢

10:04.960 --> 10:07.260
这个是代表着女对不对

10:07.260 --> 10:08.460
其实就是这种形式啊

10:08.460 --> 10:10.160
然后这里面有点击时间啊

10:10.160 --> 10:11.160
只不过是点击时间

10:11.160 --> 10:13.760
我们没对它进行一个处理而已啊

10:13.760 --> 10:14.260
好的

10:14.260 --> 10:16.660
那我们就来做一下怎么来做

10:16.660 --> 10:19.260
我们渲染完这个执行四次人数之后

10:19.260 --> 10:21.060
其实在下面就应该开始咱写了

10:21.060 --> 10:22.460
那我这里面就写一下

10:22.460 --> 10:23.260
第一个是什么呢

10:23.260 --> 10:24.460
我们这个第一个就是

10:24.460 --> 10:26.260
饼状图处理是吧

10:26.260 --> 10:27.460
饼状图

10:28.860 --> 10:30.660
饼饼饼大饼的饼啊

10:30.660 --> 10:32.860
那咱们找一个大饼的饼

10:32.860 --> 10:34.560
饼状图啊

10:34.560 --> 10:35.860
饼状图啊

10:35.860 --> 10:36.660
饼状图

10:36.660 --> 10:37.660
我说不提示呢

10:37.660 --> 10:38.960
饼状图处理

10:38.960 --> 10:39.760
那饼状图处理

10:39.760 --> 10:41.060
这里面都包过什么呢

10:41.060 --> 10:41.760
首先第一个

10:41.760 --> 10:43.160
就是我们的学历情况

10:43.160 --> 10:45.260
第二个员工性别笔啊

10:45.260 --> 10:49.850
那写一下学历情况

10:49.850 --> 10:53.150
学历情况跟我们的员工性别

10:53.150 --> 10:53.450
好的

10:53.450 --> 10:55.750
那这两个咱们就来写一下

10:55.750 --> 10:56.350
怎么来写呢

10:56.350 --> 10:56.850
首先呢

10:56.850 --> 10:57.550
我们得知道

10:57.550 --> 10:59.850
第一个我们获取到的数据是什么的

10:59.850 --> 11:00.450
在这个里面

11:00.450 --> 11:02.450
我们是不是规定了一个拍粒似的

11:02.450 --> 11:03.050
对不对

11:03.050 --> 11:03.950
那拍粒似的

11:03.950 --> 11:06.250
其实我就可以对它进行一个什么

11:06.250 --> 11:06.850
便利了

11:06.850 --> 11:08.050
因为是两次嘛

11:08.050 --> 11:11.850
这里面我指定一个item和这个index

11:11.850 --> 11:14.050
然后我在这个里面处理的时候

11:14.050 --> 11:17.250
加一个扩号就可以把我们的这个

11:17.250 --> 11:18.950
搞进来的这个拍

11:18.950 --> 11:21.550
是不是给他进行一个使用就可以了

11:21.550 --> 11:24.250
组件使用使用这种监扩号的形式

11:24.250 --> 11:25.650
加一个逼合标签

11:25.650 --> 11:26.250
之后呢

11:26.250 --> 11:29.250
把这个数据全部都给他进行一个传递

11:29.250 --> 11:29.850
点来点

11:29.850 --> 11:31.850
我们这里面使用一个item

11:32.950 --> 11:33.550
那现在呢

11:33.550 --> 11:35.550
这个拍粒似的应该是

11:35.550 --> 11:36.950
首先可能是没有内容

11:36.950 --> 11:37.950
但是前提

11:37.950 --> 11:40.250
他会需要渲染两次

11:40.250 --> 11:41.150
这么一个需求

11:41.150 --> 11:43.050
应该是给我实现对不对

11:43.050 --> 11:44.550
那这时候我们再看一下

11:44.550 --> 11:45.550
现在看不到内容

11:45.550 --> 11:46.050
那怎么办呢

11:46.050 --> 11:47.550
我们直接检查元素

11:47.550 --> 11:49.250
首先保证我们拍粒似的

11:49.250 --> 11:51.250
已经执行了两次

11:51.250 --> 11:52.850
这个是我们的弹窗

11:52.850 --> 11:54.250
咱们看一眼

11:54.250 --> 11:55.050
这个里面

11:55.050 --> 11:56.350
是不是有两个空标签啊

11:56.350 --> 11:56.750
对吧

11:56.750 --> 11:57.650
那这两个空标签呢

11:57.650 --> 11:59.850
其实就是我们拍粒似的生成的

11:59.850 --> 12:00.850
那这个时候呢

12:00.850 --> 12:03.450
我们就可以回到这个拍组件里面

12:03.450 --> 12:05.650
回到我们的这个拍组件里面

12:05.650 --> 12:07.450
首先我们第一步要做什么

12:07.450 --> 12:08.450
把这个react

12:08.450 --> 12:10.050
这个组件给做一个引入

12:10.050 --> 12:10.650
对不对

12:10.650 --> 12:12.450
那也就是说react 1X

12:13.550 --> 12:15.550
如何来实现一个引入呢

12:15.550 --> 12:16.350
它这个里面啊

12:16.350 --> 12:18.050
应该是有一个什么

12:18.050 --> 12:19.150
刚才有介绍的

12:19.150 --> 12:22.450
那我们直接的回到这个里面

12:22.450 --> 12:24.050
1X森炮

12:24.050 --> 12:27.150
然后直接的我们到这个是案例里面

12:27.150 --> 12:28.450
那我们回退一下

12:28.450 --> 12:29.050
回退一下

12:29.050 --> 12:29.950
来找一下

12:29.950 --> 12:32.250
这个里面应该是这里面

12:32.250 --> 12:33.150
安装完成之后

12:33.150 --> 12:34.250
首先第一步

12:34.250 --> 12:35.750
引炮的react 1X

12:35.750 --> 12:37.650
from 1X4react

12:37.650 --> 12:39.050
如果说同学们不知道怎么用

12:39.050 --> 12:39.950
那怎么办呢

12:39.950 --> 12:40.550
我这里面啊

12:40.550 --> 12:42.350
还有对它的一个

12:42.350 --> 12:43.850
每一个参数的一个介绍

12:43.850 --> 12:44.450
那这里面呢

12:44.450 --> 12:45.950
有一个是核心是啥

12:45.950 --> 12:46.450
Option

12:46.450 --> 12:47.650
Option是必选的

12:47.650 --> 12:48.950
然后至于其他的呢

12:48.950 --> 12:50.750
你可以自行进行一个查看

12:50.750 --> 12:51.750
我们在这个里面啊

12:51.750 --> 12:54.750
对它的其他的属性使用的不多

12:54.750 --> 12:56.250
如果说我们用到了之后

12:56.250 --> 12:57.350
那这个里面呢

12:57.350 --> 13:00.450
我们再把它的相关属性进行一个介绍

13:00.450 --> 13:01.950
就OK了

13:01.950 --> 13:03.650
这里面我们就来写一下

13:03.650 --> 13:07.050
首先给他做一个倒入react 1X2次

13:07.050 --> 13:09.250
这里面一如于是单独使用

13:09.250 --> 13:11.350
那我就在这里面写一下吧

13:11.350 --> 13:11.750
OK

13:11.750 --> 13:12.950
react 1X2

13:12.950 --> 13:14.250
刚才当我看到图的时候

13:14.250 --> 13:15.550
这里面发现了一个东西

13:15.550 --> 13:15.950
是啥呢

13:15.950 --> 13:16.550
Option

13:16.550 --> 13:17.550
Option属性啊

13:17.550 --> 13:18.950
是他必选的一个属性

13:18.950 --> 13:21.050
所以说这里面我们要定义什么呢

13:21.050 --> 13:21.850
Option

13:21.850 --> 13:22.350
这个呢

13:22.350 --> 13:23.850
是必须要有的

13:23.850 --> 13:24.350
所以说呢

13:24.350 --> 13:26.350
那我这里面给他添加一个什么

13:26.350 --> 13:27.350
Option就可以了

13:27.350 --> 13:29.550
但是在添加的之前呢

13:29.550 --> 13:32.150
我们要把传递进来的一些信息

13:33.350 --> 13:34.750
给他做一个收集

13:34.750 --> 13:37.850
比如说我们的title和这个Render List的

13:37.850 --> 13:40.750
从这个item里面我们能解构出来的

13:40.750 --> 13:41.350
还有什么呢

13:41.350 --> 13:43.550
还有我们的这个Stell List

13:43.550 --> 13:44.050
对不对

13:44.050 --> 13:46.050
那这些其实都是我们需要的啊

13:46.050 --> 13:47.550
当我们把这些传递过来

13:47.550 --> 13:48.150
为了保险

13:48.150 --> 13:48.750
我们怎么办呢

13:48.750 --> 13:49.950
我们先看一眼啊

13:49.950 --> 13:51.150
这几个属性是否有

13:51.150 --> 13:52.150
如果说没有的话

13:52.150 --> 13:54.550
那这个下一步我们也不需要做了

13:54.550 --> 13:55.950
就是已经game over了

13:55.950 --> 13:56.450
对吧

13:56.450 --> 13:57.850
咱们先来看一眼啊

13:57.850 --> 13:58.850
他有没有

13:58.850 --> 14:01.150
回到我们这个localhost的8081

14:01.150 --> 14:03.650
然后这个时候给我们抱错了

14:05.250 --> 14:06.550
抱错说的是啥呢

14:06.650 --> 14:09.250
这个里面是no search file

14:09.250 --> 14:10.350
out directory

14:10.350 --> 14:11.550
然后各版本代码

14:11.550 --> 14:14.250
eChars,index.js

14:14.250 --> 14:15.650
这个尴尬到哪呢

14:15.650 --> 14:16.550
其实呢

14:16.550 --> 14:20.750
我们这个使用的这个react for eChars

14:20.750 --> 14:21.850
eChars for React

14:21.850 --> 14:22.450
这个里面呢

14:22.450 --> 14:24.650
其实我们还需要安装一个什么呢

14:24.650 --> 14:26.450
还需要安装一个eChars

14:26.450 --> 14:26.850
所以说呢

14:26.850 --> 14:29.450
这里面我们除了安装这个eChars

14:29.450 --> 14:30.450
for React之后

14:30.450 --> 14:33.250
我们还要ear ID的一个eChars

14:33.250 --> 14:34.050
因为它默认啊

14:34.150 --> 14:36.550
是没有进行一个包依赖安装的

14:37.950 --> 14:39.150
当我们安装完成之后

14:39.150 --> 14:40.750
就可以正常使用了

14:40.750 --> 14:41.950
那这个时候呢

14:41.950 --> 14:42.550
很快啊

14:42.550 --> 14:43.850
这个安装完成之后

14:43.850 --> 14:45.650
那看现在还有没有这个错啊

14:45.650 --> 14:46.350
刷新了

14:46.350 --> 14:47.250
它自动刷新

14:47.250 --> 14:48.750
应该是感觉没有啊

14:48.750 --> 14:52.950
然后这个里面说是需要一个unico key props

14:52.950 --> 14:53.750
这是啥意思啊

14:53.750 --> 14:55.650
我们回来把这个处理一下

14:55.650 --> 14:56.950
因为是循环变利益的

14:56.950 --> 14:59.050
这个时候咱们也定义index了

14:59.050 --> 15:01.150
但是咱没指定唯一的key对不对

15:01.150 --> 15:02.450
那尽量给它一个key

15:02.450 --> 15:04.750
那这样保证我们地步算法的时候

15:04.750 --> 15:06.550
碰到一些重复线的内容

15:06.550 --> 15:07.850
它不再做重复宣言

15:07.850 --> 15:08.450
就ok了

15:09.950 --> 15:10.150
好的

15:10.150 --> 15:11.650
把这个错误解决掉之后

15:11.650 --> 15:13.250
那咱们继续来看啊

15:13.250 --> 15:14.250
第一次是空

15:14.250 --> 15:14.750
之后呢

15:14.750 --> 15:17.750
咱们来看一下这个派里面的打印质

15:17.750 --> 15:18.950
那应该是打印两次啊

15:18.950 --> 15:19.850
这没问题的

15:19.850 --> 15:20.450
第一次呢

15:20.450 --> 15:21.550
是我们的这个学历

15:21.550 --> 15:22.850
你看内幕

15:22.850 --> 15:25.450
然后包括我们的这个

15:25.450 --> 15:27.850
第二个是也有了

15:27.850 --> 15:29.050
学历情况

15:29.050 --> 15:29.650
内幕有了

15:29.650 --> 15:31.250
包括它的Render数据

15:31.350 --> 15:32.450
那第三个

15:32.450 --> 15:33.850
这个就尴尬了

15:33.850 --> 15:34.850
咱们回来

15:34.850 --> 15:36.550
这应该是死逮腰

15:36.550 --> 15:38.650
我们这里面应该是死逮腰data对吧

15:38.650 --> 15:39.450
这里面写一下

15:41.050 --> 15:41.850
接收的时候

15:41.850 --> 15:44.450
因为我们定义的时候是死逮腰data

15:44.450 --> 15:45.950
所以说这里面接收

15:45.950 --> 15:48.650
也是应该使用这种死逮腰data的形式

15:48.650 --> 15:49.650
刷进一下

15:49.650 --> 15:50.850
看到有没有

15:50.850 --> 15:52.250
那这个时候是不是就都有了

15:52.250 --> 15:52.850
对吧

15:52.850 --> 15:53.650
都有了之后

15:53.650 --> 15:55.850
那我们就可以来做这件事了

15:55.850 --> 15:56.750
怎么来做

15:56.750 --> 15:57.250
首先呢

15:57.250 --> 15:58.650
我们这个死逮腰data

15:58.650 --> 16:00.250
这样我给它添加进去啊

16:00.250 --> 16:00.750
而且呢

16:00.750 --> 16:03.150
我们提前定义好了这个类名

16:03.150 --> 16:05.450
那我这里面就给它规定一个stuff

16:07.050 --> 16:09.750
stuff-amount统一使用这个名字吧

16:09.750 --> 16:12.750
stuff-amount-container

16:12.750 --> 16:13.350
之后呢

16:13.350 --> 16:17.050
把这个死逮腰属性给它展开一下

16:17.050 --> 16:19.950
那个就是点点点死逮腰data

16:19.950 --> 16:20.650
好了

16:20.650 --> 16:21.650
添加完成之后

16:21.650 --> 16:23.350
那这个时候最起码的

16:23.350 --> 16:24.850
它有了一些基本的样式

16:24.850 --> 16:25.350
对不对

16:25.350 --> 16:26.550
比如说宽度啊

16:26.550 --> 16:27.850
还有一个高度

16:27.850 --> 16:28.550
那这个时候

16:28.550 --> 16:30.450
我们就可以把它给做一个解开了

16:30.450 --> 16:31.050
解开之后

16:31.050 --> 16:32.050
但是现在你可能啊

16:32.050 --> 16:32.850
看不到任何效果

16:32.850 --> 16:33.250
为啥呢

16:33.250 --> 16:34.550
这里面还是爆错了

16:34.550 --> 16:36.650
因为刚才我们看它这个文档的时候

16:36.650 --> 16:38.350
而且我这里面给同学们介绍了

16:38.350 --> 16:40.050
这个是核心是必须要有的

16:40.050 --> 16:40.850
也就是说

16:40.850 --> 16:42.050
其实你这个组件里面

16:42.050 --> 16:43.850
要传递一个什么的option

16:43.850 --> 16:46.150
那这个option等于一个什么option

16:46.150 --> 16:47.450
那这个option怎么来做

16:47.450 --> 16:49.850
我们直接的就可以来做一个什么定义

16:49.850 --> 16:50.350
对不对

16:50.350 --> 16:52.350
也就是说我在这块使用的时候

16:53.550 --> 16:56.250
我把它一些基础的使用到的内容

16:56.250 --> 16:58.450
我给它进行一个定义啊

16:59.150 --> 17:01.650
Constoption等于一个对象

17:01.650 --> 17:03.250
它是一个描述对象

17:03.250 --> 17:03.750
然后呢

17:03.750 --> 17:06.450
我们在这个里面给它来指定一些内容

17:06.450 --> 17:06.950
首先呢

17:06.950 --> 17:08.150
给它一个title

17:08.150 --> 17:09.950
因为刚才咱们测试的时候

17:09.950 --> 17:10.950
也看到title了

17:10.950 --> 17:11.550
对不对

17:11.550 --> 17:12.450
那txt呢

17:12.450 --> 17:14.550
我们就用title来做啊

17:16.650 --> 17:19.050
OK定义好一个title之后

17:19.050 --> 17:21.550
那我们让它在left展示

17:21.550 --> 17:22.250
可不可以啊

17:22.250 --> 17:22.750
对吧

17:22.750 --> 17:24.250
那这个就定义完成了

17:24.250 --> 17:25.450
那这是一个基本的属性

17:25.450 --> 17:26.650
反正它这边肯定得有的

17:26.650 --> 17:27.250
对不对

17:27.250 --> 17:29.950
然后这个里面现在没展示出来啊

17:29.950 --> 17:32.850
因为可能是我们数据的原因

17:32.850 --> 17:34.050
那这个没有数据

17:34.050 --> 17:35.050
有可能是没有数据

17:35.050 --> 17:35.850
我们再看一眼啊

17:35.850 --> 17:37.050
这个形形

17:37.050 --> 17:38.050
回到这个里面

17:38.050 --> 17:39.250
stuff list的

17:39.250 --> 17:39.850
然后呢

17:39.850 --> 17:41.650
这个里面是一chars

17:41.650 --> 17:42.550
一chars

17:42.550 --> 17:44.150
它这个宽度还没有

17:44.150 --> 17:44.850
是不是

17:44.850 --> 17:46.650
然后这个里面高度是300

17:46.650 --> 17:47.450
这样啊

17:47.450 --> 17:48.850
我们给它一个什么呢

17:48.850 --> 17:51.250
给它一个默认的这个宽度值啊

17:51.250 --> 17:53.050
这里面index.less的时候

17:53.050 --> 17:54.090
我们指定了一个

17:54.090 --> 17:55.750
delreat1chars

17:55.750 --> 17:57.350
给它一个高度值啊

17:57.350 --> 17:58.450
我们这个里面

17:58.450 --> 18:00.250
那就给它一个类名

18:00.250 --> 18:01.650
class name

18:03.150 --> 18:04.850
强行的给它添加一个类名

18:04.850 --> 18:05.350
然后呢

18:05.350 --> 18:06.350
对它的宽度啊

18:06.350 --> 18:07.650
做一个处理

18:07.650 --> 18:07.950
好啦

18:07.950 --> 18:08.950
添加完了之后

18:08.950 --> 18:10.450
貌似也没有什么效果啊

18:10.450 --> 18:12.250
那我们继续来做这个事吧

18:12.250 --> 18:13.250
不然也就是说

18:13.250 --> 18:14.550
你添加这么一个属性

18:14.550 --> 18:15.150
显然没戏

18:15.150 --> 18:15.750
对不对

18:15.750 --> 18:16.550
那没戏怎么办

18:16.550 --> 18:17.550
我继续来添加

18:17.550 --> 18:18.550
不要急啊

18:18.550 --> 18:19.150
首先来说

18:19.150 --> 18:20.150
那我们给它一个什么

18:20.150 --> 18:21.050
tip

18:21.050 --> 18:22.750
让它有一个提示的这个内容

18:22.750 --> 18:23.250
对不对

18:23.250 --> 18:24.550
那处发的时候

18:24.550 --> 18:27.950
我们就是给它添加一个trigger处发器啊

18:29.750 --> 18:31.750
trigger处发器的时候

18:31.750 --> 18:34.150
我们直接这里面给它item吧

18:34.150 --> 18:36.350
和我们的案例里面是完全一致的

18:36.350 --> 18:36.850
然后呢

18:36.850 --> 18:39.750
我们给它的这个Legend的属性啊

18:40.850 --> 18:42.450
Legend的属性里面

18:42.450 --> 18:45.550
我们这个里面添一个什么呢

18:45.550 --> 18:47.850
我们添一个Legend的

18:47.850 --> 18:49.150
其实我跟同学们说一下

18:49.150 --> 18:50.950
这个里面应该是个啥东西啊

18:50.950 --> 18:51.650
其实Legend呢

18:51.650 --> 18:53.950
就是我们看到的左边的这个内容啊

18:53.950 --> 18:55.050
当然了我们前提啊

18:55.050 --> 18:55.950
可以先不添

18:55.950 --> 18:57.850
把这个Legend的属性给它过滤掉

18:57.850 --> 18:58.750
那一会呢

18:58.750 --> 19:00.550
如果说因为两个不太一样嘛

19:00.550 --> 19:00.950
对不对

19:00.950 --> 19:01.850
我们先不添

19:01.850 --> 19:03.750
把一些需要使用到的

19:03.750 --> 19:05.450
先给它添加上啊

19:05.450 --> 19:06.350
那这个里面呢

19:06.350 --> 19:07.550
就有一个Saris

19:07.550 --> 19:08.150
Saris呢

19:08.150 --> 19:09.950
是我们依叉子渲染的时候

19:09.950 --> 19:11.450
最重要的一个内容

19:11.450 --> 19:12.450
那我们这里面内幕

19:12.450 --> 19:13.850
给它指定一个title

19:15.050 --> 19:15.550
之后呢

19:15.550 --> 19:17.350
规定一个type type类型

19:17.350 --> 19:19.350
那就是我们的这个饼状图

19:19.350 --> 19:19.750
然后呢

19:19.750 --> 19:21.750
我们规定一下它的这个圆

19:21.750 --> 19:22.350
radius呢

19:22.350 --> 19:23.450
其实是有默认值的

19:23.450 --> 19:24.050
默认值呢

19:24.050 --> 19:25.650
那我们直接的在这个里面

19:25.650 --> 19:26.750
就使用多少呢

19:26.750 --> 19:29.050
使用50%就可以了

19:29.050 --> 19:29.550
对不对

19:29.550 --> 19:31.950
也就是说这个圆的一个默认值

19:31.950 --> 19:32.550
然后呢

19:32.550 --> 19:34.050
给它一个center

19:34.050 --> 19:34.650
center呢

19:34.650 --> 19:36.250
是一个数组的形式

19:36.250 --> 19:37.550
55%

19:37.550 --> 19:38.250
哎

19:38.250 --> 19:39.150
这里面给错了

19:40.750 --> 19:42.150
center按数组的形式

19:42.150 --> 19:43.450
给55%

19:43.450 --> 19:44.050
第二个呢

19:44.050 --> 19:45.450
也是55%

19:45.450 --> 19:46.150
ok

19:46.150 --> 19:47.050
全部都给完了

19:47.050 --> 19:47.450
之后呢

19:47.450 --> 19:48.450
咱们继续啊

19:48.450 --> 19:50.050
这个时候来到关键点了

19:50.050 --> 19:52.550
就是我们data的一个宣展

19:52.550 --> 19:53.350
也就是说把data

19:53.350 --> 19:54.350
你得给添加上

19:54.350 --> 19:54.950
对不对

19:54.950 --> 19:55.550
那data呢

19:55.550 --> 19:56.350
就是我们的这个

19:56.350 --> 19:57.850
randar list

19:57.850 --> 19:58.450
我觉得啊

19:58.450 --> 19:59.650
添加完这些之后

19:59.650 --> 20:00.450
就差不多了

20:00.450 --> 20:01.350
咱们再来看一下

20:01.350 --> 20:02.450
有没有啊

20:02.450 --> 20:04.150
见证奇迹出现的时刻

20:04.150 --> 20:05.450
显然还没有啊

20:05.450 --> 20:06.750
那我们刷新一下

20:06.750 --> 20:07.150
那这样

20:07.150 --> 20:09.150
就把它所有属性都写完啊

20:09.150 --> 20:09.650
写完之后

20:09.650 --> 20:11.650
我看它具体是有没有啊

20:11.650 --> 20:13.850
randar list的添加完成之后

20:13.850 --> 20:14.550
那我们这里面

20:14.550 --> 20:15.950
再给它添加一个

20:15.950 --> 20:17.150
应该是什么呢

20:17.150 --> 20:17.850
我们这个里面

20:17.850 --> 20:19.350
有一个rows type

20:20.750 --> 20:21.750
那rows type呢

20:21.750 --> 20:23.950
我们直接的就给它这样

20:23.950 --> 20:25.350
rows type也不添加

20:25.350 --> 20:27.550
rows type代表着它的一个区域啊

20:27.550 --> 20:28.650
我们先给它这个

20:28.650 --> 20:29.850
items style

20:29.850 --> 20:31.550
给它做一个添加吧

20:31.550 --> 20:32.650
items style

20:32.650 --> 20:33.550
我们这里面

20:33.550 --> 20:34.550
嗯

20:34.550 --> 20:35.950
给它指定一个什么呢

20:35.950 --> 20:38.050
inpash属性啊

20:38.050 --> 20:39.150
那这里面是

20:40.150 --> 20:41.350
inpash啊

20:41.350 --> 20:42.550
我记得是

20:43.850 --> 20:45.150
inpash属性

20:45.150 --> 20:45.650
对吧

20:45.650 --> 20:47.350
那这个inpash属性里面

20:47.350 --> 20:49.050
我们直接的这个

20:49.050 --> 20:51.350
给它一些相关的描述内容

20:51.450 --> 20:53.850
首先是我们的shadow blur

20:53.850 --> 20:54.350
对不对

20:54.950 --> 20:55.250
哎呀

20:55.250 --> 20:56.950
这没有type script的

20:58.150 --> 20:59.750
它是真不提示啊

21:00.750 --> 21:02.250
shadow blur

21:02.250 --> 21:02.850
ok

21:03.650 --> 21:03.950
好的

21:03.950 --> 21:04.650
shadow blur

21:04.650 --> 21:05.950
应该是这个属性啊

21:05.950 --> 21:06.350
然后呢

21:06.350 --> 21:07.950
我们给它一个10

21:07.950 --> 21:09.250
blur属性之后呢

21:09.250 --> 21:10.350
我们shadow

21:10.350 --> 21:11.750
给它一个影子啊

21:13.550 --> 21:14.450
嗯

21:14.450 --> 21:15.950
shadow folks吧

21:15.950 --> 21:18.650
或者是我们这个叫shadow offset x啊

21:18.650 --> 21:20.550
我记得是offside

21:20.550 --> 21:22.850
这里面应该有一个x值

21:22.850 --> 21:23.450
x值呢

21:23.450 --> 21:25.450
给它规定为一个0

21:25.450 --> 21:25.950
之后呢

21:25.950 --> 21:28.650
我们给它规定一个shadow color

21:28.650 --> 21:30.050
shadow color颜色值

21:30.050 --> 21:31.950
那就是rgba

21:31.950 --> 21:33.450
给它指定一下

21:33.450 --> 21:34.250
rgba

21:34.250 --> 21:35.550
这里面指定一个什么呢

21:35.550 --> 21:37.150
00

21:37.150 --> 21:37.750
然后呢

21:37.750 --> 21:39.650
给它指定一个0.5

21:39.650 --> 21:40.650
ok

21:40.650 --> 21:41.550
定义好了

21:41.550 --> 21:43.350
这个shadow blur之后

21:43.350 --> 21:46.720
rgba

21:46.720 --> 21:47.520
rgba

21:47.520 --> 21:47.720
哎

21:47.720 --> 21:49.020
这个应该是一个什么

21:49.020 --> 21:51.620
应该是一个字符创啊

21:51.620 --> 21:52.720
这不可能是一个变量

21:52.720 --> 21:53.420
对吧

21:53.420 --> 21:55.320
shadow blur

21:55.320 --> 21:58.120
shadow blur定义完成之后

21:58.120 --> 21:59.320
那咱们这个里面

21:59.320 --> 22:00.020
shadow blur

22:00.020 --> 22:01.420
他们有重复啊

22:01.420 --> 22:05.040
这个应该是shadow color啊

22:05.040 --> 22:05.440
好的

22:05.440 --> 22:07.240
shadow color处理完成之后

22:07.240 --> 22:08.940
那这个就ok了

22:08.940 --> 22:09.840
搞定它之后

22:09.840 --> 22:10.940
我们再来一个什么呢

22:10.940 --> 22:12.440
nomal属性啊

22:12.440 --> 22:14.840
把这个nomal给它添加一下

22:14.840 --> 22:18.240
那这个里面就是一个label啊

22:18.240 --> 22:20.440
首先对label做一个处理

22:20.440 --> 22:22.040
那label做处理的时候

22:22.040 --> 22:23.640
它是一个对线

22:23.640 --> 22:24.140
那这里面

22:24.140 --> 22:26.640
我们让它显示shadow true

22:26.640 --> 22:27.540
for matter

22:27.540 --> 22:28.740
我们格式化的时候

22:28.740 --> 22:29.440
比如说

22:29.440 --> 22:29.840
这个呢

22:29.840 --> 22:31.940
就是我们一个划过的时候

22:31.940 --> 22:32.640
它里面

22:32.640 --> 22:34.040
给我们出的一个小tip

22:34.040 --> 22:35.540
谈创里面的内容

22:35.540 --> 22:37.840
然后对它进行一个格式化

22:37.840 --> 22:39.340
那我们写一下for matter

22:42.040 --> 22:44.040
for matter

22:44.040 --> 22:45.340
for matter属性呢

22:45.340 --> 22:47.540
这个应该是我们这里面

22:47.540 --> 22:48.340
显示的时候

22:48.340 --> 22:50.540
把这个变量b给获取一下

22:50.540 --> 22:51.040
之后呢

22:51.040 --> 22:53.240
我们这里面加一个括号

22:53.240 --> 22:54.940
然后再添加一个d

22:54.940 --> 22:57.240
d之后就是一个百分比

22:57.240 --> 22:57.840
对不对

22:57.840 --> 22:59.040
应该是这种形式啊

22:59.040 --> 23:00.340
nomal

23:00.340 --> 23:00.740
好了

23:00.740 --> 23:02.840
这个里面缺一个dou号

23:02.840 --> 23:03.440
那ok

23:03.440 --> 23:06.540
这些就是我们基本上就搞定了

23:06.540 --> 23:07.540
搞定完了之后

23:07.540 --> 23:08.940
那我们这个label

23:08.940 --> 23:10.640
给它一个下线吧

23:10.640 --> 23:10.840
对吧

23:10.840 --> 23:11.340
我想的

23:11.340 --> 23:13.340
我记得还有一个label

23:13.340 --> 23:14.140
label呢

23:14.140 --> 23:15.640
那我们这里面写一个什么

23:15.640 --> 23:17.240
shadow model true

23:17.240 --> 23:17.540
ok

23:18.540 --> 23:20.540
这些都处理完成之后

23:20.540 --> 23:21.540
那它还不显示呢

23:21.540 --> 23:23.840
我们就要看一下原因了啊

23:23.840 --> 23:26.140
找一下它不显示的原因

23:26.140 --> 23:27.640
我们回到代码里

23:27.640 --> 23:28.840
把这个关掉啊

23:28.840 --> 23:30.740
那其实在这个里面呢

23:30.740 --> 23:32.840
react for each us

23:32.840 --> 23:34.840
我们看一下这个label啊

23:34.840 --> 23:36.940
到这个ci在类里面

23:36.940 --> 23:38.740
我们给它加了一个高度值

23:38.740 --> 23:40.040
但是这个宽度值呢

23:40.040 --> 23:41.740
我这时候是没有添加的

23:41.740 --> 23:43.840
这样我给它添加一个宽度值

23:43.840 --> 23:44.540
那你看一下

23:44.540 --> 23:46.040
只要添加了宽度值之后

23:46.040 --> 23:46.540
这个时候

23:46.540 --> 23:48.240
它是不是就展示出来了

23:48.240 --> 23:48.940
对吧

23:48.940 --> 23:49.640
那也就是说

23:49.640 --> 23:51.740
其实你添加完了一个高度

23:51.740 --> 23:53.840
然后再给它创建一个宽度

23:53.840 --> 23:54.940
这个使用的时候

23:54.940 --> 23:55.740
反正我们知道一下

23:55.740 --> 23:57.640
就ok了啊

23:57.640 --> 23:58.040
好了

23:58.040 --> 23:59.240
那这个处理完了

23:59.240 --> 24:00.240
处理完了之后

24:00.240 --> 24:02.040
咱们这个员工性别占比

24:02.040 --> 24:03.740
这一块有一个男一个女

24:03.740 --> 24:04.240
也就是说

24:04.240 --> 24:05.640
它显示这个内容

24:05.640 --> 24:06.240
对不对

24:06.240 --> 24:07.640
那你显示这个内容

24:07.640 --> 24:08.740
怎么来区分的呢

24:08.740 --> 24:10.640
其实我们在传递数据的时候

24:10.640 --> 24:12.040
我们可以想一下

24:12.040 --> 24:14.340
这个派点js差

24:14.340 --> 24:14.940
其实呢

24:14.940 --> 24:16.440
它这个显示不显示

24:16.540 --> 24:17.740
只在于哪呢

24:17.740 --> 24:18.940
Legend对不对

24:18.940 --> 24:19.940
那这个Legend呢

24:19.940 --> 24:20.840
对我们来说

24:20.840 --> 24:23.140
我们对它的一个处理

24:23.140 --> 24:25.340
其实我们这个里面

24:25.340 --> 24:26.840
我们可以搞一个什么呢

24:26.840 --> 24:27.840
搞一个变量

24:27.840 --> 24:29.140
比如说我们这里面写一个

24:29.140 --> 24:31.840
show sidebar对吧

24:31.840 --> 24:33.540
是否展示这个sidebar

24:33.540 --> 24:34.940
那这个怎么过来啊

24:34.940 --> 24:36.940
其实这个我们定一model数据的时候

24:36.940 --> 24:39.040
是不是就可以独立的定一下

24:39.040 --> 24:40.840
这个应该是我们对这个

24:40.840 --> 24:43.440
pile list的员工性别占比

24:43.440 --> 24:44.740
那除了这些之外

24:44.740 --> 24:45.840
我们再给它传一个

24:45.840 --> 24:47.340
叫show sidebar

24:47.340 --> 24:49.440
那这个时候我们给它一个处

24:49.440 --> 24:51.040
那这样它是不是就有值了

24:51.040 --> 24:51.640
对吧

24:51.640 --> 24:52.440
有值了之后

24:52.440 --> 24:53.640
那我们默认的时候

24:53.640 --> 24:54.440
在这个里面

24:54.440 --> 24:55.140
show sidebar

24:55.140 --> 24:56.340
我们给它一个什么

24:56.540 --> 24:57.240
false啊

24:58.840 --> 25:00.140
也就是说不让它显示

25:00.140 --> 25:00.740
那这个时候

25:00.740 --> 25:02.540
我们就可以判断一下Legend

25:02.640 --> 25:03.340
Legend呢

25:03.340 --> 25:03.940
这个时候

25:03.940 --> 25:05.840
我给它做一个打开

25:05.840 --> 25:07.040
打开之后

25:07.040 --> 25:08.240
我们这个条件

25:08.240 --> 25:09.440
就是说这个Legend

25:09.440 --> 25:11.140
它显示的条件是什么

25:11.140 --> 25:12.940
show sidebar有值

25:12.940 --> 25:13.440
对吧

25:13.440 --> 25:14.240
有值的话

25:14.240 --> 25:16.640
那我去把它给填充一个对象

25:16.640 --> 25:18.040
让它显示側边栏

25:18.040 --> 25:18.840
那側边栏

25:18.840 --> 25:21.840
我们给它添加一个一些属性啊

25:21.840 --> 25:22.840
alright

25:22.840 --> 25:25.140
第一个应该是alright

25:25.140 --> 25:27.040
那这个alright属性

25:27.040 --> 25:27.940
我们这个里面

25:27.940 --> 25:29.440
给它规定一个vortical

25:29.440 --> 25:30.940
让它处于值展示

25:30.940 --> 25:31.540
然后呢

25:31.540 --> 25:34.440
在左边进行一个展示

25:34.440 --> 25:35.440
top呢

25:35.440 --> 25:37.140
我们给它做一个什么

25:37.140 --> 25:38.940
让它有一个center的效果

25:39.940 --> 25:41.040
左边居中展示

25:41.040 --> 25:42.640
就是这么一个目的

25:42.640 --> 25:43.240
咱们来试一下

25:43.340 --> 25:44.440
看行不行

25:44.440 --> 25:44.840
走你

25:44.840 --> 25:46.040
员工性别占比

25:46.040 --> 25:48.140
那这个是不是就很快的就出来了

25:48.140 --> 25:48.940
非常的简单

25:48.940 --> 25:49.840
而且这个里面呢

25:49.840 --> 25:51.640
还可以进行试验的添加

25:51.640 --> 25:52.140
那这里面

25:52.140 --> 25:54.240
我们先不做试验的添加了

25:54.240 --> 25:55.240
我们就这样

25:55.240 --> 25:56.940
给它先进行一个展示

25:56.940 --> 25:57.940
就可以了

25:57.940 --> 25:58.540
接下来呢

25:58.540 --> 26:01.540
我们再把这个其他的两个给做一下

26:01.540 --> 26:02.040
其他两个

26:02.040 --> 26:02.740
还有哪两个呢

26:02.740 --> 26:05.640
还有一个员工婚姻状况的

26:05.640 --> 26:06.540
一个展示

26:06.540 --> 26:08.340
那员工婚姻状况的一个

26:08.340 --> 26:09.740
它是一个独立的

26:09.740 --> 26:11.340
因为我们成不了组

26:11.340 --> 26:11.840
对不对

26:11.940 --> 26:12.840
这个你说我们

26:13.840 --> 26:14.740
做了处理了吗

26:14.740 --> 26:15.940
其实我们做处理了

26:15.940 --> 26:16.640
那也就是说

26:16.640 --> 26:18.140
展示完这两个之后

26:18.140 --> 26:18.640
前面呢

26:18.640 --> 26:19.840
有一个平均年龄这个

26:19.840 --> 26:20.740
我们可以展示

26:20.740 --> 26:21.540
先不考虑

26:21.540 --> 26:22.440
那我们就把这个

26:22.440 --> 26:23.840
员工婚姻状况的一个

26:23.840 --> 26:25.340
再次的对派组件

26:25.340 --> 26:26.240
进行一个调用

26:26.240 --> 26:27.240
就可以了

26:27.240 --> 26:28.540
找到我们的这个

26:28.540 --> 26:30.340
index.js

26:30.340 --> 26:31.340
那在这个里面

26:31.340 --> 26:32.340
助状图

26:32.340 --> 26:32.940
然后呢

26:32.940 --> 26:34.540
我们这里面写一下

26:34.540 --> 26:35.640
写一下的时候

26:35.640 --> 26:37.540
其实这个我们直接调用就可以了

26:37.540 --> 26:38.140
对吧

26:38.140 --> 26:39.440
我们把它给拿出来啊

26:40.440 --> 26:42.140
就不需要这样写了

26:42.140 --> 26:43.740
.item

26:43.740 --> 26:46.040
那这个也不是.item了

26:46.040 --> 26:47.040
应该是我们的

26:47.040 --> 26:48.440
marriage data

26:48.440 --> 26:49.840
员工的婚姻状况

26:49.840 --> 26:50.340
对吧

26:50.340 --> 26:51.540
那我们这里面

26:51.540 --> 26:52.440
给他写一个注释

26:52.440 --> 26:56.940
叫员工婚姻状况

26:56.940 --> 26:58.140
OK

26:58.140 --> 26:59.340
电影好它之后

26:59.340 --> 27:00.340
那咱们来看一眼

27:00.340 --> 27:01.540
员工婚姻状况

27:01.540 --> 27:02.740
先能给我展示出来

27:02.740 --> 27:04.540
因为这里面使用的组件

27:04.540 --> 27:04.840
哎呀

27:04.840 --> 27:07.440
这个展示倒是挺单纯

27:07.440 --> 27:08.240
百分之50

27:08.240 --> 27:08.940
百分之50

27:08.940 --> 27:09.240
对吧

27:09.240 --> 27:10.640
但是这里面有一个什么

27:10.640 --> 27:12.240
有一个楼空的效果

27:12.240 --> 27:12.940
也就是说

27:12.940 --> 27:14.640
他这个有一个空

27:14.640 --> 27:15.840
那这个空处理呢

27:15.840 --> 27:16.440
怎么办呢

27:16.440 --> 27:19.040
我们对这个员工婚姻状况的时候

27:19.040 --> 27:20.840
在这个出手化定义的时候

27:20.840 --> 27:21.440
我们可以

27:21.440 --> 27:24.140
还是像我们之前写的一样

27:24.140 --> 27:26.140
我们可以给他添加一个属性

27:27.240 --> 27:28.840
那回到我们的这个

27:28.840 --> 27:29.740
model里面啊

27:29.740 --> 27:30.440
又关掉了

27:30.440 --> 27:30.840
对吧

27:30.840 --> 27:32.540
把它给打开

27:32.540 --> 27:34.340
找到我们的model

27:34.340 --> 27:35.540
model打开之后

27:35.540 --> 27:36.340
那这里面

27:36.340 --> 27:38.440
员工的一个婚姻状况

27:38.440 --> 27:39.840
添一个什么呢

27:39.840 --> 27:42.540
我们写一个是否为空

27:42.540 --> 27:44.240
easeampty为处

27:44.240 --> 27:44.840
然后呢

27:44.840 --> 27:47.240
我们在这个传递的时候

27:47.240 --> 27:49.040
那是不是又可以多加一个属性

27:49.040 --> 27:52.140
easeampty等于一个false出手化

27:52.140 --> 27:54.440
就让他为显示为false

27:54.440 --> 27:55.140
那这个时候呢

27:55.140 --> 27:56.740
我们就可以来定一下了

27:56.740 --> 27:58.140
如果说你为处的话

27:58.140 --> 28:00.740
那我这个时候就可以给你指定一下

28:00.740 --> 28:02.840
这个员的一个半径处理了

28:02.840 --> 28:03.240
对不对

28:04.840 --> 28:06.040
怎么来做处理呢

28:06.040 --> 28:08.340
我们直接的对这个里面啊

28:08.340 --> 28:09.340
有一个什么呢

28:09.340 --> 28:11.040
我们把这个radius啊

28:11.040 --> 28:12.740
也就是说这个员的radius

28:12.740 --> 28:13.240
默认的

28:13.240 --> 28:15.440
我们给他来做一个调整

28:15.440 --> 28:16.640
那判断一下什么呢

28:16.640 --> 28:20.400
easeampty啊

28:20.400 --> 28:21.200
他是不是空

28:21.200 --> 28:22.300
如果说是空的话

28:22.300 --> 28:22.900
成立的话

28:22.900 --> 28:24.300
那我这个里面使用多少呢

28:24.300 --> 28:26.900
我们使用一个空心的员啊

28:26.900 --> 28:28.600
这个里面就加一个帽号

28:28.600 --> 28:30.200
否则就是百分之五十啊

28:30.200 --> 28:30.900
空心员呢

28:30.900 --> 28:33.000
我们设置一下内径和半径

28:33.000 --> 28:34.400
那五十之后呢

28:34.400 --> 28:36.100
我们再添加一个什么

28:36.100 --> 28:37.200
七十百分之

28:39.100 --> 28:39.800
好吧

28:39.800 --> 28:42.000
添加完五十七十之后

28:42.000 --> 28:42.700
那这个时候

28:42.700 --> 28:44.800
我们给了他一个什么

28:44.800 --> 28:47.000
给了他一个数组

28:47.000 --> 28:47.800
那这个数组呢

28:47.800 --> 28:49.500
如果说你要有值是空气

28:49.500 --> 28:51.300
那你要按五十七十

28:51.300 --> 28:52.500
这样给我展示

28:52.500 --> 28:54.900
也就是说给我展示出一个空心员

28:54.900 --> 28:56.000
就可以了

28:56.000 --> 28:56.100
好

28:56.100 --> 28:57.700
但是咱们来看一眼啊

28:57.700 --> 28:58.700
是不是已经出来了

28:58.700 --> 29:00.300
这个easeampty之后

29:00.300 --> 29:01.800
那这个也没啥问题啊

29:01.800 --> 29:03.400
空心员已经出来了

29:03.400 --> 29:04.700
空心员出来之后

29:04.700 --> 29:06.000
那咱们继续啊

29:06.000 --> 29:07.500
下面其实还有一个

29:07.500 --> 29:08.100
这个叫啥

29:08.100 --> 29:10.800
员工的一个星座分布

29:10.800 --> 29:12.100
那这个星座分布呢

29:12.100 --> 29:13.600
我们也得处理一下

29:13.600 --> 29:14.600
那这个星座分布

29:14.600 --> 29:16.800
其实比较有特点啊

29:16.800 --> 29:17.600
啥特点呢

29:17.600 --> 29:19.500
他这个星座分布的话

29:19.500 --> 29:20.400
我们直接的

29:20.400 --> 29:22.100
就不能是说这种满圆了

29:22.100 --> 29:22.600
对不对

29:22.600 --> 29:24.000
按比例来生成

29:24.000 --> 29:24.800
如果说你这个

29:24.800 --> 29:25.800
你看4.55

29:25.800 --> 29:27.500
4.55感觉是不是特别小啊

29:27.500 --> 29:28.600
那金牛座比较多

29:28.600 --> 29:30.400
那我直接就展示的

29:30.400 --> 29:31.200
显示比较多

29:31.200 --> 29:31.700
你这个呢

29:31.700 --> 29:33.800
还可以对你这个数据库里面的值

29:33.800 --> 29:34.800
进行一个调整

29:34.800 --> 29:36.200
然后让它显示多少

29:36.200 --> 29:36.800
你看一下

29:36.800 --> 29:38.400
它在这个映射啊

29:38.400 --> 29:40.200
那我们这个怎么来做呢

29:40.200 --> 29:41.700
还是添加属性啊

29:41.700 --> 29:44.500
找到我们的这个星座分布的model

29:44.500 --> 29:45.300
到这个里面

29:46.700 --> 29:47.700
员工星座分布

29:47.700 --> 29:48.900
那我们添加一个什么呢

29:48.900 --> 29:50.500
is a ray

29:50.500 --> 29:51.100
好吧

29:51.100 --> 29:52.000
我们添加一个

29:52.000 --> 29:54.000
is a ray 为处之后

29:54.000 --> 29:54.800
那这个时候

29:54.800 --> 29:57.100
拍里面再接一个值

29:57.100 --> 29:58.400
is a ray

29:58.400 --> 29:58.800
ok

29:58.800 --> 29:59.900
等于默认呢

29:59.900 --> 30:02.100
他应该是一个false啊

30:02.100 --> 30:04.300
之后我们这个规定好false之后

30:04.300 --> 30:06.700
在我们的这个index.js里面

30:07.200 --> 30:08.600
那我们就来使用一下吧

30:08.600 --> 30:10.400
他肯定是在这个最后一个

30:10.400 --> 30:11.800
那我们直接在这个里面

30:11.800 --> 30:13.000
就来写一下

30:13.000 --> 30:19.600
比如说这个叫星座分布啊

30:19.600 --> 30:20.400
星座分布

30:20.400 --> 30:20.900
ok

30:20.900 --> 30:23.000
把它也给进行一个调用

30:23.000 --> 30:24.100
那这个调用的时候

30:24.100 --> 30:24.900
也是使用啊

30:24.900 --> 30:26.100
这种派的形式

30:26.100 --> 30:26.600
对不对

30:26.600 --> 30:30.000
但是这个数据就应该使用什么了

30:30.000 --> 30:33.000
使用我们这个concelation date

30:33.000 --> 30:34.400
星座这个

30:34.400 --> 30:35.700
然后咱们来看一样

30:35.700 --> 30:37.000
星座的能不能出来

30:37.000 --> 30:38.000
你先别管的顺序啊

30:38.000 --> 30:38.900
因为这个顺序呢

30:38.900 --> 30:40.600
我们还没有调整啊

30:40.600 --> 30:41.400
现在可以了

30:41.400 --> 30:42.100
现在可以了

30:42.100 --> 30:42.600
之后

30:42.600 --> 30:43.600
但是按比例

30:43.600 --> 30:45.300
显示他的这个面积

30:45.300 --> 30:46.300
那我们直接的

30:46.300 --> 30:47.900
就来看一下什么

30:47.900 --> 30:50.100
把这个伊德瑞给他做一个添加

30:50.100 --> 30:51.100
是不是就可以了

30:51.100 --> 30:53.900
也就是说在这个派里面的options

30:53.900 --> 30:54.300
下面

30:54.300 --> 30:58.100
你还得继续来进行一个配置啊

30:58.100 --> 30:59.100
怎么来配置呢

30:59.100 --> 31:02.700
我们这里面可以加一个rose type啊

31:02.700 --> 31:04.800
刚才想加没加的这个

31:04.800 --> 31:06.800
Rose

31:06.800 --> 31:08.000
Rose type

31:08.000 --> 31:09.500
这个里面给他写一下

31:09.500 --> 31:10.200
Rose type

31:10.200 --> 31:11.800
那我们这里面就判断一下

31:11.800 --> 31:12.900
Ease array

31:12.900 --> 31:14.200
如果说他有的话

31:14.200 --> 31:15.000
那我们这里面

31:15.000 --> 31:16.500
就给他变成一个什么呢

31:16.500 --> 31:18.100
变成一个array啊

31:18.100 --> 31:19.000
这些属性呢

31:19.000 --> 31:20.600
其实在我们eChars里面啊

31:20.600 --> 31:21.300
是都有

31:21.300 --> 31:22.600
而且我们之前的课程啊

31:22.600 --> 31:24.600
详细的介绍eChars的时候

31:24.600 --> 31:26.400
也会给同学们之前啊

31:26.400 --> 31:28.000
会有很详细的一个介绍

31:28.000 --> 31:29.000
所以说在这个里面呢

31:29.000 --> 31:30.600
我们只需要知道啊

31:30.600 --> 31:32.400
按理里面添加的这些属性

31:32.400 --> 31:34.500
那你对应的会去查找就ok了

31:34.500 --> 31:35.300
而且这种呢

31:35.300 --> 31:35.700
东西呢

31:35.700 --> 31:36.900
我跟同学们讲啊

31:36.900 --> 31:37.600
尽量呢

31:37.600 --> 31:38.900
如果说你经常使的话

31:38.900 --> 31:39.800
业务上常用

31:39.800 --> 31:41.000
那你可以记忆它啊

31:41.000 --> 31:42.100
如果说业务不常用

31:42.100 --> 31:43.200
那我们想起来的时候

31:43.200 --> 31:45.000
再去查看一下文档就ok了啊

31:46.200 --> 31:46.500
好的

31:46.500 --> 31:48.000
那这个我们

31:48.000 --> 31:50.100
饼状图基本上都搞定了

31:50.100 --> 31:50.800
那接下来呢

31:50.800 --> 31:53.500
就是对我们注壮图的一个处理

31:54.800 --> 31:56.100
注壮图的处理呢

31:56.100 --> 31:57.300
我们要明确一下

31:57.300 --> 31:58.100
因为我们知道

31:58.100 --> 32:00.400
注壮图其实是分为两种的

32:00.400 --> 32:01.100
可以看一下

32:01.100 --> 32:02.500
已经完成的这个里面

32:02.500 --> 32:05.200
它分为有 x 主为主轴的

32:05.200 --> 32:06.800
还有这种 y 轴为主轴

32:06.800 --> 32:08.100
进行一个展示的

32:08.800 --> 32:09.900
那这个里面呢

32:09.900 --> 32:11.300
由于平均年龄啊

32:11.300 --> 32:12.100
它比较特殊

32:12.100 --> 32:13.400
也就是说这个里面

32:13.400 --> 32:15.400
其实是以分类进行展示

32:15.400 --> 32:16.300
那我们这个时候呢

32:16.300 --> 32:18.900
可以单独的对它来做一个处理

32:18.900 --> 32:19.400
而且呢

32:19.400 --> 32:20.900
我们也已经定义好了

32:20.900 --> 32:23.000
这个平均年龄的一个组件

32:23.000 --> 32:23.600
那这个时候

32:23.600 --> 32:25.000
我们就来使用就可以了

32:25.000 --> 32:25.800
在使用之前

32:25.800 --> 32:27.400
我们还要明确一点啊

32:28.100 --> 32:29.300
平均年龄这个

32:29.300 --> 32:30.600
我们的数据从哪来

32:30.600 --> 32:31.200
其实呢

32:31.200 --> 32:33.300
我们知道平均年龄的数据

32:33.300 --> 32:36.400
在这个我们员工婚姻状况这一块

32:36.400 --> 32:36.900
其实呢

32:36.900 --> 32:39.200
它也有是可以获取到的

32:39.200 --> 32:41.100
因为这里面已经分为男和女了

32:41.100 --> 32:41.700
对不对

32:41.700 --> 32:42.400
那这个时候

32:42.400 --> 32:44.700
我们直接的应该是啊

32:44.700 --> 32:45.100
sorry啊

32:45.100 --> 32:47.200
应该是员工性别占比这一块

32:47.200 --> 32:48.900
不是婚姻状况这一块

32:48.900 --> 32:50.500
那性别占比这一块呢

32:50.500 --> 32:52.300
其实它是分为这个

32:53.500 --> 32:54.900
男女进行展示的

32:54.900 --> 32:55.500
并且呢

32:55.500 --> 32:56.100
这个里面

32:56.100 --> 32:57.900
其实还有返回其他自断的

32:57.900 --> 32:59.500
我们可以来查看一下

32:59.500 --> 33:00.600
到这个里面

33:00.600 --> 33:02.900
我们找到这个真的List

33:02.900 --> 33:04.800
它除了男和女之外

33:04.800 --> 33:06.000
还有一个Az

33:06.000 --> 33:07.400
那既然有年龄

33:07.400 --> 33:08.000
那比如说

33:08.000 --> 33:09.500
它对应的38.56

33:09.500 --> 33:10.400
是不是就可以

33:10.400 --> 33:11.900
从这里面进行一个渲染了

33:11.900 --> 33:12.400
对不对

33:12.400 --> 33:13.000
那也就是说

33:13.000 --> 33:14.200
我们拿数据的时候

33:14.200 --> 33:17.100
我们拿整理好的这个拍List的

33:17.100 --> 33:18.100
下面的第一项

33:18.100 --> 33:19.900
来进行我们AzMap的渲染

33:19.900 --> 33:20.800
是不是就OK了

33:20.800 --> 33:21.400
对吧

33:21.400 --> 33:22.300
那直到这个之后

33:22.300 --> 33:24.100
我们就可以来实现一下啊

33:25.600 --> 33:27.400
我们把它都合并上

33:27.400 --> 33:29.200
找到我们的SRC

33:29.200 --> 33:30.800
然后呢是配置

33:30.800 --> 33:32.800
是下面的dashball的

33:32.800 --> 33:33.500
dashball的

33:33.500 --> 33:35.900
找到我们的这个index.js

33:35.900 --> 33:37.200
那index.js

33:37.200 --> 33:37.700
这个时候

33:37.700 --> 33:40.000
我们把这个拍给做了一个引入

33:40.000 --> 33:40.400
秉状的时候

33:40.400 --> 33:41.200
处理完了之后

33:41.200 --> 33:43.200
那这里面有一个AzClome

33:43.200 --> 33:45.200
那我们就把这个AzClome

33:45.200 --> 33:47.300
也给它做一个引入

33:47.300 --> 33:48.500
这个叫Az

33:51.000 --> 33:51.700
Clome

33:51.700 --> 33:52.900
那AzClome呢

33:52.900 --> 33:53.500
从哪来

33:53.500 --> 33:55.500
从我们的这个forrom

33:57.200 --> 33:57.600
forrom

33:57.600 --> 33:59.800
从我们的点GunComponent

33:59.800 --> 34:01.400
下面的叫什么呢

34:01.400 --> 34:03.400
我们这个叫AzClome啊

34:03.400 --> 34:03.600
好的

34:03.600 --> 34:05.000
那你拿到它之后

34:05.000 --> 34:06.600
其实现在就可以进行一个什么

34:06.600 --> 34:07.600
渲染的对吧

34:07.600 --> 34:08.300
在渲染的时候

34:08.300 --> 34:10.300
首先我们要明确它的这个位置啊

34:10.300 --> 34:11.100
它的位置呢

34:11.100 --> 34:13.400
是在我们第一次循环屏撞图之后

34:13.400 --> 34:15.400
那我们直接的这个

34:17.300 --> 34:18.900
这里面写一下这个叫什么呢

34:18.900 --> 34:21.400
叫年龄助状图啊

34:21.400 --> 34:23.400
年龄一个助状图

34:24.300 --> 34:24.900
好了

34:24.900 --> 34:26.400
定义好年龄助状图之后

34:26.400 --> 34:27.800
我们知道要用什么呢

34:27.800 --> 34:29.800
PyList的第一项来进行渲染

34:29.800 --> 34:30.300
对不对

34:30.300 --> 34:31.500
那所以说这个里面

34:31.500 --> 34:34.000
我们定义AzMap的时候

34:34.000 --> 34:35.600
我们要明确一个

34:35.600 --> 34:36.200
这一点啊

34:36.200 --> 34:37.400
AzClome啊

34:37.400 --> 34:38.400
AzClome

34:38.400 --> 34:39.000
然后呢

34:39.000 --> 34:40.800
我们使用一个反斜杆

34:40.800 --> 34:42.700
开始和B盒都在一起啊

34:42.700 --> 34:43.200
之后呢

34:43.200 --> 34:44.300
我们去渲染的时候

34:44.300 --> 34:45.600
就是点点点

34:45.600 --> 34:47.600
我们把这个PyList

34:49.400 --> 34:51.700
这个PyList的下面的第一项

34:51.700 --> 34:52.700
给它进行一个获取

34:52.700 --> 34:53.600
是不是就可以了

34:53.600 --> 34:54.900
然后我们之后

34:54.900 --> 34:55.700
有了它之后

34:55.700 --> 34:57.400
那回到AzClome里面

34:57.400 --> 34:59.600
我们就可以来实现一下它啊

34:59.600 --> 35:00.600
AzClome里面

35:00.600 --> 35:02.000
我们定义它的时候

35:02.000 --> 35:02.700
那这个里面

35:02.700 --> 35:03.600
我们就来写一下

35:03.600 --> 35:04.400
首先呢

35:04.400 --> 35:07.400
第一个是我们的这个Render List

35:07.400 --> 35:08.400
因为已经定义好了

35:08.400 --> 35:09.000
对不对

35:09.000 --> 35:09.400
然后呢

35:09.400 --> 35:12.200
我们再写一个Stale Data啊

35:12.200 --> 35:14.300
Stale Data都创建完成之后

35:14.300 --> 35:16.500
那这个时候里面同样的啊

35:16.500 --> 35:17.200
外部呢

35:17.200 --> 35:18.700
先给它一个什么

35:18.700 --> 35:21.000
给它一个相应的容器啊

35:21.000 --> 35:22.400
那既然都非常相似

35:22.400 --> 35:24.900
我这里面就复制过来一套啊

35:24.900 --> 35:26.900
把它拿过来AzClome

35:26.900 --> 35:28.100
其实都差不多啊

35:28.100 --> 35:30.200
我们直接的把它添加一下

35:31.400 --> 35:31.800
然后呢

35:31.800 --> 35:33.100
React一Chars

35:33.100 --> 35:35.400
我们也给它做一个引入啊

35:35.400 --> 35:36.400
这个里面

35:36.400 --> 35:38.300
把它也给它进行一个倒入

35:38.300 --> 35:41.000
其实这里面就是一个展示的函数组件

35:41.000 --> 35:42.400
没有什么交互处理

35:42.400 --> 35:43.900
非常的简单啊

35:43.900 --> 35:45.900
然后我们只需要给它定一个什么

35:45.900 --> 35:46.800
定一个Option

35:46.800 --> 35:48.900
那这里面咱们就写一下

35:48.900 --> 35:49.900
这个Option怎么写

35:49.900 --> 35:52.200
我Count它Option

35:52.200 --> 35:54.000
等于一个对象

35:54.000 --> 35:56.700
那这个对象里面首先规定什么呢

35:56.700 --> 35:58.900
Option等于一个对象之后

35:58.900 --> 36:01.700
第一个我们先规定它的这个Title

36:01.700 --> 36:02.300
Title呢

36:02.300 --> 36:03.900
是这个Tax的

36:03.900 --> 36:07.300
我们这里面写一个叫平均年龄

36:07.300 --> 36:07.700
好吧

36:09.100 --> 36:11.700
好 定义完这个平均年龄之后

36:11.700 --> 36:14.900
那我们再写一下XAX

36:14.900 --> 36:17.100
OK 设置一下X轴

36:17.100 --> 36:18.100
那X轴里面

36:18.100 --> 36:19.400
因为它是分类展示啊

36:19.400 --> 36:20.200
有一点区别

36:20.200 --> 36:23.000
所以说我们这里面给它一个最大值啊

36:23.000 --> 36:24.300
最大值我们先规定一下

36:24.300 --> 36:28.800
就是Match点通过Match点Cell向上取整

36:28.800 --> 36:30.600
那这个里面我们取什么呢

36:30.600 --> 36:34.500
取我们Match点Max找一个最大值

36:34.500 --> 36:36.500
那这个最大值就是从我们那个

36:36.500 --> 36:41.800
点点点Render 3个点多了一个

36:41.800 --> 36:44.500
这个应该是Match点Max

36:44.500 --> 36:48.300
然后直接的就是我们Render List

36:48.300 --> 36:49.600
咱们来做一个处理

36:49.600 --> 36:52.400
Render List通过点Map

36:52.400 --> 36:54.700
取出来它的一个什么年龄

36:54.700 --> 36:56.600
就可以来进行一个处理了

36:56.600 --> 36:59.100
那我们把这个Item点A值

36:59.100 --> 37:02.400
然后呢通过A值取出一个最大值

37:02.400 --> 37:03.000
对不对

37:03.000 --> 37:05.200
那我们定义好这个最大值之后

37:05.200 --> 37:06.100
那继续来写

37:06.100 --> 37:09.200
那就是Vaxs

37:09.200 --> 37:09.500
对吧

37:10.900 --> 37:12.000
Vaxs呢

37:12.000 --> 37:12.700
这个属性呢

37:12.700 --> 37:14.100
我们也得要自己啊

37:14.100 --> 37:15.200
来进行一个设定

37:15.200 --> 37:17.100
因为这个里面要有什么呢

37:17.100 --> 37:19.200
要有这个不同的类型

37:19.200 --> 37:20.700
比如说这个Type

37:20.700 --> 37:21.400
我们这个呢

37:21.400 --> 37:23.400
其实就是Capture

37:23.400 --> 37:23.900
对吧

37:23.900 --> 37:25.700
就是一个分类啊

37:25.700 --> 37:28.600
那我们就写一下Type为Capture

37:28.600 --> 37:30.300
Capture分类写完了之后

37:30.300 --> 37:32.400
那就是我们需要渲染的数据

37:32.400 --> 37:36.200
Data是我们Render List点Map

37:36.200 --> 37:38.000
那这里面使用Item

37:38.000 --> 37:40.000
Item点Name

37:40.000 --> 37:41.500
也就是说我们的这个

37:41.500 --> 37:43.100
Vidio上面展示的这个

37:43.100 --> 37:45.100
其实就是我们的这个男和女

37:45.100 --> 37:46.100
把它给显示出来

37:46.100 --> 37:46.500
对不对

37:47.800 --> 37:49.500
好了定义完它之后

37:49.500 --> 37:52.100
那我们这个In Reverse

37:52.100 --> 37:54.400
也就是说把它进行一个颠倒吧

37:54.400 --> 37:56.000
因为我们拿过来的时候是什么呢

37:56.000 --> 37:58.800
是这个数量少的

37:58.800 --> 38:00.100
其实没有在上面

38:00.100 --> 38:03.300
那我们这里面给它做一个取反操作

38:03.300 --> 38:04.700
In Reverse之后呢

38:04.700 --> 38:07.600
我们Max最大只是给它调整为1

38:07.600 --> 38:09.700
OK调整完这些之后

38:09.700 --> 38:13.600
那我们就来规定一下Syrus的这个属性

38:13.600 --> 38:16.300
Syrus这里面定义一下

38:16.400 --> 38:19.500
首先是有一个Relate Time Sought

38:19.500 --> 38:22.100
按时间排序

38:22.100 --> 38:22.400
这个呢

38:22.400 --> 38:24.800
其实我们查文档也行

38:24.800 --> 38:27.000
我给同学们手敲一下吧

38:27.000 --> 38:30.300
Time Sought

38:30.300 --> 38:32.200
Relate Time Sought

38:32.200 --> 38:34.200
我们这个里面给它指定一个什么

38:34.200 --> 38:36.100
给它指定一个True

38:36.100 --> 38:36.900
然后呢

38:36.900 --> 38:39.400
Type规定为注壮图

38:39.400 --> 38:42.800
Syrus这个里面应该是一个数组

38:42.800 --> 38:44.600
这个我使用数组

38:44.600 --> 38:47.400
其实你使用数组和对象都是OK的

38:47.400 --> 38:47.800
这样呢

38:47.800 --> 38:50.000
我这里面使用一个数组

38:50.000 --> 38:54.000
Relate Time Sought

38:54.000 --> 38:55.600
应该是Sought

38:55.600 --> 38:56.600
OK

38:56.600 --> 38:59.700
Relate Time Sought

38:59.700 --> 39:00.700
OK没问题

39:00.700 --> 39:01.200
之后呢

39:01.200 --> 39:02.700
我们这个Type类型

39:02.700 --> 39:03.400
Type类型呢

39:03.400 --> 39:05.400
就是我们的这个注壮图

39:05.400 --> 39:07.500
之后我们规定一下Date

39:07.500 --> 39:08.000
Date呢

39:08.000 --> 39:12.200
就是我们Render List

39:12.200 --> 39:13.400
Render List

39:13.400 --> 39:14.000
之后呢

39:14.000 --> 39:15.800
通过点Map的形式

39:15.800 --> 39:16.800
iTerm

39:16.800 --> 39:18.800
把这个iTerm点Age

39:18.800 --> 39:20.200
给它做一个渲染

39:20.200 --> 39:21.200
就OK了

39:21.200 --> 39:21.400
好了

39:21.400 --> 39:22.500
你定义完它之后

39:22.500 --> 39:24.200
那我这里面再指定一个什么呢

39:24.200 --> 39:25.600
就是我们的这个Label

39:25.600 --> 39:26.200
Label呢

39:26.200 --> 39:27.200
是否显示

39:27.200 --> 39:28.600
我们直接的侧边栏

39:28.600 --> 39:29.600
显不显示

39:29.600 --> 39:30.400
那我们这个里面

39:30.400 --> 39:31.200
就给它一个什么

39:31.200 --> 39:32.600
Syrus为True

39:32.600 --> 39:33.100
然后呢

39:33.100 --> 39:35.600
让它展示的时候Position

39:35.600 --> 39:37.200
给它一个Top值

39:38.900 --> 39:39.600
好了OK

39:39.600 --> 39:40.800
这些基本上

39:40.800 --> 39:41.500
就设置完了

39:41.500 --> 39:42.700
非常的简单

39:42.700 --> 39:43.900
也不是特别复杂啊

39:45.100 --> 39:46.500
当我们定义完成之后

39:46.500 --> 39:47.800
看它是不是有展示啊

39:47.800 --> 39:49.900
这个时候应该是有爆错啊

39:49.900 --> 39:50.600
咱们来看一下

39:50.600 --> 39:51.800
爆错的原因

39:51.800 --> 39:52.800
检查元素

39:52.800 --> 39:54.300
应该是某一个属性啊

39:54.300 --> 39:55.800
我们给写错了啊

39:55.800 --> 39:56.500
到这个里面

39:56.500 --> 39:57.900
我们来看一下

39:57.900 --> 39:58.300
K

39:58.300 --> 39:58.700
OK

39:58.700 --> 39:59.900
Same K

39:59.900 --> 40:00.800
那这个时候

40:00.800 --> 40:04.540
我们来查看一下

40:04.540 --> 40:05.340
到这个里面

40:05.340 --> 40:06.240
一刷新

40:06.240 --> 40:06.440
哎

40:06.440 --> 40:07.840
现在感觉没有啊

40:07.840 --> 40:09.340
首先没有第一个问题

40:09.340 --> 40:10.240
是什么呢

40:10.240 --> 40:11.340
我们这个Render List

40:11.340 --> 40:12.040
我看一下

40:12.040 --> 40:13.340
是否有值啊

40:13.340 --> 40:14.040
到这里面

40:14.040 --> 40:16.240
打印一下Render List

40:16.240 --> 40:17.840
有可能它是没有值的

40:17.840 --> 40:18.940
然后index.js

40:18.940 --> 40:20.840
我们先给它干掉啊

40:20.840 --> 40:23.240
index.js的这个打印值

40:23.240 --> 40:24.440
把它先给注掉

40:24.440 --> 40:25.740
因为什么感断言

40:25.740 --> 40:26.840
它没有值啊

40:26.840 --> 40:28.440
我们直接获取的是什么呢

40:28.440 --> 40:29.840
就是我们这个

40:29.840 --> 40:32.140
拍下面的一个第一项

40:32.140 --> 40:32.540
对不对

40:34.040 --> 40:36.240
我们直接的员工的一个啊

40:36.240 --> 40:38.640
这个里面拍List的下面的第一项

40:38.640 --> 40:39.340
那拍List的

40:39.340 --> 40:40.240
其实出手画的时候

40:40.240 --> 40:41.540
它第一项是没有值的

40:41.540 --> 40:43.040
这个我们要知道一下

40:43.040 --> 40:45.440
所以说它有可能会有问题啊

40:45.440 --> 40:46.740
这个里面这样吧

40:46.740 --> 40:48.040
我们直接的这个时候

40:48.040 --> 40:49.640
包了一个安逸饭的啊

40:49.640 --> 40:50.440
那我们怎么办呢

40:50.440 --> 40:54.340
我们直接的把它来给它做一个什么

40:54.340 --> 40:55.640
做一个容错

40:55.640 --> 40:57.940
先把第一步给解决一下

40:57.940 --> 41:00.640
这个里面是我们的这个拍List的

41:00.640 --> 41:02.140
先判断它有没有值

41:02.140 --> 41:03.240
如果说你要没有值

41:03.240 --> 41:03.940
那就算了

41:03.940 --> 41:05.540
拍List的下面的一

41:05.540 --> 41:07.240
也就是说代表你没有渲染的啊

41:08.840 --> 41:09.140
好的

41:09.140 --> 41:10.040
第一个处理完成

41:10.040 --> 41:11.140
第一个处理完成

41:11.140 --> 41:12.740
这里面还是有包错

41:12.740 --> 41:13.540
还是有包错

41:13.540 --> 41:16.240
那就应该是我们里面的问题了

41:16.240 --> 41:17.140
same key啊

41:17.140 --> 41:20.940
这个应该是有这个Skeema Webpack

41:20.940 --> 41:21.840
一个脑底犯的

41:21.840 --> 41:22.540
不管他

41:22.540 --> 41:24.540
咱们回到我们这个里面

41:24.540 --> 41:27.140
react之后的class name

41:27.140 --> 41:29.140
react一刷是options

41:29.140 --> 41:31.440
然后我们这个里面先不给它规定

41:31.440 --> 41:33.240
我们先看一下哪里包的错

41:33.240 --> 41:38.330
应该是我们这个options打印的错

41:38.330 --> 41:39.430
来我再刷新一下

41:39.430 --> 41:41.230
这样最近马上保证我没有错啊

41:41.230 --> 41:41.830
对吧

41:41.830 --> 41:44.330
那这个时候它给我包的什么错

41:44.830 --> 41:47.030
Icon on two children with the same key

41:47.030 --> 41:48.530
相同的这个k了

41:48.530 --> 41:50.530
我们来找一下这个原因啊

41:50.530 --> 41:52.630
员工婚姻状况这个里面

41:52.630 --> 41:53.830
其实只选一次

41:53.830 --> 41:54.530
不需要k

41:54.530 --> 41:54.830
对不对

41:54.830 --> 41:57.030
那我们就把这个k给干掉啊

41:57.030 --> 41:57.930
这是第一个

41:57.930 --> 41:59.330
因为它没有循环嘛

41:59.330 --> 42:00.930
然后第二个是哪一个

42:00.930 --> 42:02.330
第二个应该是这个啊

42:02.330 --> 42:04.230
其实我们星座分布了一个

42:04.230 --> 42:05.030
也不需要k

42:05.030 --> 42:06.730
那这个时候就应该

42:06.730 --> 42:08.830
不给我包这个same key的这个问题

42:08.830 --> 42:09.530
对不对

42:09.530 --> 42:12.130
k肯定这个时候就ok了

42:12.130 --> 42:12.430
好了

42:12.430 --> 42:13.630
它处理完成之后

42:13.630 --> 42:15.430
那咱们再继续回去啊

42:15.430 --> 42:16.230
回去之后呢

42:16.230 --> 42:17.330
把我们的这个

42:18.330 --> 42:21.030
options给进行一个打开打开之后

42:21.030 --> 42:22.930
那看一下它抱抱错啊

42:22.930 --> 42:23.930
它有可能抱错

42:23.930 --> 42:24.430
对吧

42:24.430 --> 42:25.030
抱错之后

42:25.030 --> 42:26.630
我们再进行解决就可以了

42:26.630 --> 42:27.830
哎没抱错啊

42:27.830 --> 42:28.630
没抱错呢

42:28.630 --> 42:30.630
但是它也没进行渲染啊

42:30.630 --> 42:31.630
没渲染的原因是啥

42:31.630 --> 42:33.430
我们这里面是不是没开启啊

42:33.430 --> 42:34.430
把它给开启一下

42:34.430 --> 42:35.530
看它能不能渲染

42:35.530 --> 42:36.230
你会发现啊

42:36.230 --> 42:38.830
此时我处理完那个same key的错了之后

42:38.830 --> 42:39.630
那这个时候呢

42:39.630 --> 42:41.030
它就会有一个渲染啊

42:41.030 --> 42:42.430
然后咱们来验证一下

42:42.430 --> 42:45.030
就是刚才我做了一个什么油画的处理

42:45.030 --> 42:47.030
如果说你不做这部处理的话

42:47.030 --> 42:47.430
其实呢

42:47.430 --> 42:49.430
这个里面应该是还会抱错的

42:50.630 --> 42:51.130
为什么

42:51.130 --> 42:52.530
因为我们初始化的时候

42:52.530 --> 42:55.730
确实是获取不到拍leads的下面的第一项的啊

42:55.730 --> 42:57.630
然后这时候应该是没有啥错

42:57.630 --> 42:58.930
你能获取到了啊

42:58.930 --> 43:01.330
那如果说我这个时候刷新一下

43:01.330 --> 43:01.830
刷新一下

43:01.830 --> 43:04.430
它就会发起一不请求

43:04.430 --> 43:05.430
那一不请求的时候

43:05.430 --> 43:06.230
其实这个时候

43:06.230 --> 43:09.930
我们根本就是获取不到拍leads的第一项

43:10.930 --> 43:12.630
因为我们初始化的这个model

43:12.630 --> 43:13.830
可以给同学们看一下

43:14.930 --> 43:15.830
这个model呢

43:15.830 --> 43:16.830
这个拍leads的

43:16.830 --> 43:18.130
其实它是一个空的数组

43:18.130 --> 43:19.530
那第一项是Andyfan的

43:19.530 --> 43:20.830
Andyfan的下面

43:20.830 --> 43:22.930
怎么可能存在这种renderleads的

43:22.930 --> 43:24.030
包括style data呢

43:24.030 --> 43:24.630
对不对

43:24.630 --> 43:25.330
所以说这个呢

43:25.330 --> 43:26.530
也会有一个错误

43:26.530 --> 43:27.730
而且这错误挺致命

43:28.930 --> 43:29.430
那咋办呢

43:29.430 --> 43:31.830
我们直接的就把它还是原封不动的

43:31.830 --> 43:32.830
给它放回来啊

43:32.830 --> 43:34.230
那这样就保证了什么呢

43:34.230 --> 43:36.530
我们当有值的时候再进行一个渲染

43:36.530 --> 43:37.930
没有值就算了啊

43:37.930 --> 43:39.130
这样就回到了

43:39.230 --> 43:40.330
回到了之后呢

43:40.330 --> 43:41.830
同学们对于这一些属性

43:41.830 --> 43:43.030
如果说不是很了解的话

43:43.030 --> 43:44.130
你可以去试一下

43:44.130 --> 43:46.030
比如说我们这个inverse啊

43:46.030 --> 43:47.930
我们直接给他写一个false

43:47.930 --> 43:49.730
你会发现这个时候会有一些改变

43:49.730 --> 43:51.330
男和女是不是交替改变了

43:51.330 --> 43:51.830
对不对

43:51.830 --> 43:52.930
这个可以查温的啊

43:52.930 --> 43:54.130
自行的来看一下

43:54.130 --> 43:55.330
包括我们渲染数据

43:55.330 --> 43:55.630
当然了

43:55.630 --> 43:56.530
你这个知道啊

43:56.530 --> 43:58.430
我们这个分类的里面的这个数据啊

43:58.430 --> 43:59.830
相对比较好渲染

43:59.830 --> 44:00.730
就是零和一

44:00.730 --> 44:02.030
然后我摘出来什么呢

44:02.030 --> 44:03.230
摘出来它的这个A值

44:03.230 --> 44:03.730
y量呢

44:03.730 --> 44:04.330
我不要

44:04.330 --> 44:06.530
然后这个男和女是在这个

44:06.530 --> 44:09.030
y轴主轴上来进行一个显示

44:09.130 --> 44:10.830
之后这里面每一个数字

44:11.730 --> 44:12.630
我根据这个数字

44:12.630 --> 44:15.430
生成了一个0到39的一个最大值

44:15.430 --> 44:15.930
对不对

44:15.930 --> 44:17.130
取了这么一个值

44:17.130 --> 44:19.030
然后给他进行了一个展示

44:19.030 --> 44:19.830
就OK了啊

44:20.330 --> 44:20.530
好的

44:20.530 --> 44:22.530
那这个处理完成之后

44:22.530 --> 44:25.230
那我们继续的来进行

44:25.230 --> 44:28.930
剩下的两个助状图的一个调整啊

44:28.930 --> 44:30.430
那剩下的两个助状图呢

44:30.430 --> 44:31.830
他又是变为一组啊

44:31.830 --> 44:33.030
这一组在哪里

44:33.030 --> 44:35.030
我们首先要明确一下

44:35.030 --> 44:36.530
平均年龄在这对不对

44:36.530 --> 44:38.530
然后在婚姻状况下面

44:38.530 --> 44:41.630
应该有一个年龄段和部门员工数量啊

44:42.930 --> 44:45.830
那我们回到这个里面性别占比

44:45.830 --> 44:48.030
那就应该是在员工的一个什么

44:48.030 --> 44:49.330
婚姻状况下面

44:49.330 --> 44:49.830
是不是

44:49.830 --> 44:50.230
当然了

44:50.230 --> 44:51.330
这个如果说位置

44:51.330 --> 44:52.630
你不想在这展示啊

44:52.630 --> 44:55.330
你自行选择在哪展示都ok啊

44:55.330 --> 44:57.530
回到我们的这个index dashboard

44:57.530 --> 44:59.930
然后这里面有一个clown lease的

44:59.930 --> 45:00.830
clown lease的

45:00.830 --> 45:02.430
那我们直接的就在哪

45:02.430 --> 45:04.830
就在这个员工婚姻状况

45:04.830 --> 45:07.230
后面是不是可以来做一个处理了

45:07.230 --> 45:08.730
那这个是一个数组

45:08.730 --> 45:10.830
那我们就给他对他进行一个

45:10.830 --> 45:13.630
map pro item这里面指定一下

45:13.630 --> 45:14.430
他的这个

45:14.930 --> 45:17.230
item值还有这个index

45:17.230 --> 45:18.030
索引值啊

45:18.030 --> 45:20.030
用索引值来当k就可以了

45:21.530 --> 45:23.430
好的定义完成之后

45:23.430 --> 45:25.130
那这个别忘了return啊

45:25.130 --> 45:28.030
我们return就会给他做一个返回值啊

45:28.030 --> 45:29.630
那返回值我们添什么呢

45:29.630 --> 45:31.630
这个里面我们就把里面的

45:31.630 --> 45:33.030
这个组件调用

45:33.030 --> 45:35.030
给他来使用一下就ok了

45:35.230 --> 45:37.730
那这个叫clown.js差

45:37.730 --> 45:40.030
我们把它给做一个大写啊

45:40.030 --> 45:42.330
从命名这个叫clown

45:45.650 --> 45:47.950
好的创建好他之后

45:47.950 --> 45:49.650
把它给复制一下

45:49.650 --> 45:51.950
clown找到他之后

45:51.950 --> 45:54.250
先给他进行一个引入

45:54.250 --> 45:56.550
这个是clown ok

45:56.550 --> 45:57.550
引入完成之后

45:57.550 --> 46:01.350
那这个时候我们就可以来进行一个使用了啊

46:01.350 --> 46:03.050
使用的时候

46:03.050 --> 46:04.250
我们回到这里

46:04.250 --> 46:05.650
其实也不用return了

46:05.650 --> 46:06.250
那就算了

46:06.350 --> 46:08.650
直接使用一个中号的形式

46:08.650 --> 46:10.150
小破号的形式给他包裹

46:10.150 --> 46:11.550
一下让他做一个输出

46:11.550 --> 46:12.950
或者我直接写成一行

46:12.950 --> 46:13.950
是不是也可以啊

46:13.950 --> 46:15.350
clown给他一个什么

46:15.350 --> 46:17.350
b和标签ok

46:17.350 --> 46:18.750
clown定义完成之后

46:18.750 --> 46:20.950
把数据给他传过去就可以啊

46:20.950 --> 46:22.750
然后数据传过去之后

46:22.750 --> 46:25.550
这个里面先给他指定一个k吧

46:25.550 --> 46:28.450
k等于我们的这个index

46:28.450 --> 46:30.150
好定义完k之后

46:30.150 --> 46:31.750
那这个时候我们把这个

46:31.750 --> 46:34.550
点点点item给他进行一个传递

46:35.550 --> 46:38.250
那这个时候应该是有两项

46:38.250 --> 46:40.350
这个空埋的内容在这里面展示

46:40.350 --> 46:43.850
但是我们还没有给他进行样式的添加啊

46:43.850 --> 46:45.350
那这个样式的添加呢

46:45.350 --> 46:48.950
我们其实和其他的处理也非常相似

46:48.950 --> 46:50.450
那就再沾过来一套

46:50.450 --> 46:51.750
是不是就可以了

46:51.750 --> 46:53.050
ageclown ok

46:53.050 --> 46:55.950
把他先给他搞定拿过来

46:55.950 --> 46:57.050
拿过来之后呢

46:57.050 --> 46:59.750
我们放到clown.js差里面

46:59.750 --> 47:01.550
统一的把他做一个处理

47:01.550 --> 47:01.950
之后呢

47:02.050 --> 47:03.750
我们也是引入一下

47:03.750 --> 47:05.550
这个react for echars

47:06.850 --> 47:08.650
ok 引入他完成之后

47:08.650 --> 47:09.650
那现在最起码的

47:09.650 --> 47:11.250
得有一个高度和宽度了

47:11.250 --> 47:11.750
对不对

47:11.750 --> 47:12.850
然后我们在这个里面

47:12.850 --> 47:15.250
再来进行这个option的定义啊

47:15.250 --> 47:16.050
const

47:17.850 --> 47:21.950
const option等于我们的一个空队下

47:21.950 --> 47:22.450
对吧

47:22.450 --> 47:24.750
那在这个里面来进行一个定义

47:24.750 --> 47:25.450
style data

47:25.450 --> 47:26.950
style data要接收啊

47:26.950 --> 47:28.250
那我们这里面就写一下吧

47:28.250 --> 47:30.050
比如说这个叫什么

47:30.050 --> 47:32.350
我们的rander list

47:32.350 --> 47:32.950
对不对

47:32.950 --> 47:35.050
把它来给他加一下

47:35.050 --> 47:35.450
嗯

47:35.450 --> 47:38.250
这个我们来看一下

47:38.250 --> 47:41.150
这个是不是叫rander data啊

47:41.150 --> 47:43.350
回到我们的这个model里面

47:43.350 --> 47:44.750
看一下

47:44.750 --> 47:46.350
最后的这个clown

47:46.350 --> 47:49.750
我们定义的这个clown list的

47:49.750 --> 47:50.250
在哪呢

47:50.250 --> 47:51.050
在这

47:51.050 --> 47:52.250
这里面有title

47:52.250 --> 47:53.350
有rander list的

47:53.350 --> 47:54.850
还有style data啊

47:54.850 --> 47:56.750
这个我们要知道一下

47:56.750 --> 47:57.650
那就回来

47:57.650 --> 48:00.450
这个叫rander style data

48:01.750 --> 48:03.850
还有这个rander list

48:03.850 --> 48:04.550
对吧

48:04.550 --> 48:05.850
两个之后呢

48:05.850 --> 48:08.050
还会有一个我们的这个title啊

48:08.050 --> 48:10.650
把它都给来进行一个添加

48:10.650 --> 48:11.550
添加完成之后呢

48:11.550 --> 48:12.850
这个最起码不过错

48:12.850 --> 48:14.650
那咱们再来看一眼啊

48:14.650 --> 48:16.650
看一眼应该是有两个空埋处

48:16.650 --> 48:16.950
对吧

48:16.950 --> 48:17.750
有两个空埋处

48:17.750 --> 48:20.550
那咱们就开始进行一个编写的

48:20.550 --> 48:21.450
首先第一步

48:21.450 --> 48:22.950
我们这个要指定title啊

48:22.950 --> 48:24.850
刚才那个咱们直接的也没写

48:24.850 --> 48:25.350
对吧

48:25.350 --> 48:26.450
那这个我们就写一下

48:26.450 --> 48:26.950
什么呢

48:26.950 --> 48:28.050
叫text的

48:28.050 --> 48:28.950
还是和刚才一样

48:28.950 --> 48:30.850
把这个title给添加进去

48:30.850 --> 48:32.750
我觉得如果说添加了宽度之后

48:32.750 --> 48:34.050
他不认这个时候

48:34.050 --> 48:35.750
是不是马上就能跟我们渲染出来

48:35.750 --> 48:36.250
对吧

48:36.250 --> 48:38.150
当然这个是covers渲染的啊

48:38.150 --> 48:38.750
然后呢

48:38.750 --> 48:40.050
我们划过的时候

48:40.050 --> 48:41.650
其实你看这个时候

48:41.650 --> 48:43.450
会有一些内容显示的

48:43.450 --> 48:44.050
对吧

48:44.050 --> 48:45.250
那有内容显示

48:45.250 --> 48:46.150
我们这个里面

48:46.150 --> 48:47.950
就给他再来添加一个什么

48:47.950 --> 48:50.960
toe tip啊

48:50.960 --> 48:51.960
toe tip

48:51.960 --> 48:53.460
toe tip的时候

48:53.460 --> 48:57.740
我们给他一个trigger啊

48:57.740 --> 48:59.740
trigger给他指定一个什么呢

48:59.740 --> 49:02.440
指定一个x

49:02.440 --> 49:02.940
好了

49:02.940 --> 49:04.040
指定完了之后

49:04.040 --> 49:05.940
那也就是说划过的时候有值

49:05.940 --> 49:06.340
之后呢

49:06.340 --> 49:08.840
我们就定义两个比较主要的

49:08.840 --> 49:09.440
首先呢

49:09.440 --> 49:10.140
第一个呢

49:10.140 --> 49:11.840
是我们vx啊

49:11.840 --> 49:12.540
vx呢

49:12.540 --> 49:13.740
这个里面的值呢

49:13.740 --> 49:16.840
其实我们不需要做过多的处理啊

49:16.840 --> 49:18.640
因为这个也不是说做分类

49:18.640 --> 49:20.340
我们把他这个name给他拿过来

49:20.340 --> 49:20.840
对吧

49:20.840 --> 49:22.240
我们只需要在这个里面

49:22.240 --> 49:23.540
给他规定一个什么呢

49:23.540 --> 49:24.340
tap

49:24.340 --> 49:26.540
tap是我们的这个叫value啊

49:26.540 --> 49:27.440
展示

49:27.440 --> 49:28.940
那type value展示

49:28.940 --> 49:30.540
这个我们

49:30.540 --> 49:31.640
因为人数吗

49:31.640 --> 49:33.040
人数不可能有半个对不对

49:33.040 --> 49:34.640
那我们规定一个什么

49:34.640 --> 49:36.040
man intervalue

49:36.040 --> 49:36.440
对不对

49:36.440 --> 49:37.440
最小值啊

49:37.440 --> 49:38.140
啊最小值呢

49:38.140 --> 49:40.440
其实你就爱一锅展示就ok了

49:40.440 --> 49:41.940
也就是说这个里面

49:41.940 --> 49:44.040
其实这个man intervalue

49:44.040 --> 49:45.240
他这个是做一个什么

49:46.740 --> 49:47.940
展示整数啊

49:47.940 --> 49:49.040
这个我们指导一下

49:49.040 --> 49:50.240
把它给填充一下

49:50.240 --> 49:51.740
展示整数

49:53.440 --> 49:54.440
整数ok

49:54.440 --> 49:56.040
那这个整数

49:56.040 --> 49:57.340
咱们写完了之后

49:57.340 --> 49:59.940
继续来进行一个编辑啊

50:01.140 --> 50:02.340
编辑完了他之后

50:02.340 --> 50:03.940
其实这个就应该完成了

50:03.940 --> 50:05.640
yx没啥内容啊

50:05.640 --> 50:09.440
那我们就对xx来做一个处理啊

50:09.440 --> 50:11.440
sx做处理的时候

50:11.440 --> 50:12.240
这个时候呢

50:12.240 --> 50:13.940
我们给他规定

50:13.940 --> 50:15.440
规定也是一个数组

50:15.440 --> 50:18.340
首先我们这里面给他指定tap

50:18.340 --> 50:19.340
那tap呢

50:19.340 --> 50:21.240
我们给他指定一个什么呢

50:21.240 --> 50:23.840
我们指定一个catry啊

50:23.840 --> 50:26.240
ok指定好catry之后

50:26.240 --> 50:28.140
我们继续啊

50:28.140 --> 50:29.240
继续渲染的时候

50:29.240 --> 50:31.040
这个里面就需要我们获取一个什么

50:31.040 --> 50:32.540
他的一个数据了啊

50:33.840 --> 50:34.440
data

50:34.440 --> 50:36.140
那这个data应该是谁啊

50:36.140 --> 50:37.840
其实是不是我们Render List

50:37.840 --> 50:39.040
里面的内容对吧

50:39.040 --> 50:39.840
但是前提呢

50:39.840 --> 50:40.840
我们得先看一眼

50:40.840 --> 50:42.340
这个Render List啊

50:42.340 --> 50:43.640
他返回的内容

50:43.640 --> 50:44.640
那你要知道一下

50:44.640 --> 50:45.540
其实这个里面

50:45.540 --> 50:46.940
返回的和我们那个啊

50:46.940 --> 50:48.140
是不太一样的啊

50:48.140 --> 50:49.340
我们可以打印一下

50:49.340 --> 50:51.940
叫Render List

50:51.940 --> 50:53.240
保证一下他有值

50:53.240 --> 50:53.740
而且呢

50:53.740 --> 50:55.440
看一下他的这个值的内容

50:56.840 --> 50:57.840
好的到这个里面

50:57.840 --> 50:59.940
我们回到这个内容里面

50:59.940 --> 51:01.040
检查元素

51:01.040 --> 51:02.140
然后来看一眼

51:02.140 --> 51:02.840
有报错了

51:04.740 --> 51:05.740
36报错

51:05.740 --> 51:06.440
不要紧啊

51:06.440 --> 51:07.440
我们看一下

51:08.040 --> 51:09.040
axs

51:09.040 --> 51:10.340
然后咱们先看数据吧

51:10.340 --> 51:11.640
先不要考虑其他的

51:11.640 --> 51:12.840
AzClone有打印啊

51:12.840 --> 51:15.340
我们把这个AzClone的里面的内容

51:15.340 --> 51:16.140
给他干掉

51:16.140 --> 51:16.740
好吧

51:16.740 --> 51:18.840
那我们就来看这个里面啊

51:18.840 --> 51:19.740
他这个时候呢

51:19.740 --> 51:21.140
我们返回的诸状图啊

51:21.140 --> 51:22.440
如果说你s绸

51:22.440 --> 51:23.540
是以数字形式

51:23.540 --> 51:25.040
这个进行渲染的时候

51:25.040 --> 51:25.840
我们这里面

51:25.840 --> 51:26.340
x

51:26.340 --> 51:28.640
你看对应的测试部门商品破

51:28.640 --> 51:29.740
然后对应的是

51:29.740 --> 51:31.840
每一个部门里面的这个数量

51:31.840 --> 51:32.940
那这个时候呢

51:32.940 --> 51:35.540
我们就可以按着这种格式来进行宣展

51:35.540 --> 51:36.240
你看

51:36.240 --> 51:38.040
这是底下的内容介绍

51:38.040 --> 51:38.540
之后呢

51:38.540 --> 51:40.740
这是他对应的这个数量值啊

51:40.740 --> 51:41.940
之后这里面有两个

51:41.940 --> 51:44.340
一个叫xdata和一个ydata

51:44.340 --> 51:45.040
也就是说

51:45.040 --> 51:46.540
你s轴展示的数据

51:46.540 --> 51:47.940
和y轴展示的数据啊

51:47.940 --> 51:49.240
这个是我给同学们

51:49.240 --> 51:50.540
已经提供好的

51:50.540 --> 51:52.540
那你拿过来使用就可以了啊

51:53.540 --> 51:55.340
回到我们的column里面

51:55.340 --> 51:57.040
column里面我们这个时候

51:57.040 --> 51:59.340
data做渲染的时候

51:59.340 --> 52:01.140
那我们直接的指定的时候

52:01.140 --> 52:02.240
应该叫什么

52:02.240 --> 52:04.640
叫我们RenderList

52:04.640 --> 52:05.140
对不对

52:05.140 --> 52:07.240
那是RenderList的谁

52:07.240 --> 52:09.140
是我们这个xdata

52:09.140 --> 52:12.140
把它给进行一个填充就可以了啊

52:12.140 --> 52:13.640
然后填充完成之后

52:13.640 --> 52:15.440
这个可能会要写一写啊

52:15.440 --> 52:16.240
那我们直接的

52:16.240 --> 52:17.640
就给他放在这个里面

52:17.640 --> 52:18.940
catch a data

52:18.940 --> 52:19.640
ok

52:19.640 --> 52:21.440
RenderList

52:21.440 --> 52:22.240
xdata

52:22.240 --> 52:23.440
来做一个渲染

52:23.440 --> 52:23.940
之后呢

52:23.940 --> 52:25.940
我们给他一个label

52:25.940 --> 52:28.440
进行一个说明的label

52:28.440 --> 52:29.240
excellabel

52:29.240 --> 52:32.940
那我们这里面写一个interview

52:32.940 --> 52:33.640
intervalue

52:33.640 --> 52:34.840
那我们给他一个

52:34.840 --> 52:36.540
从其实值为0开始啊

52:37.740 --> 52:39.240
之后给他做一个什么

52:39.240 --> 52:41.440
因为他划光的时候

52:41.440 --> 52:42.140
会有什么

52:42.140 --> 52:43.840
会有这个内容

52:43.840 --> 52:44.440
对不对

52:44.440 --> 52:44.940
而且呢

52:44.940 --> 52:45.940
我们这个interview

52:45.940 --> 52:46.840
从0开始之后

52:46.840 --> 52:47.640
其实这里面

52:47.640 --> 52:49.340
还有一点需要我们注意一下

52:49.340 --> 52:50.640
是哪一块啊

52:50.640 --> 52:51.240
你看呢

52:51.240 --> 52:52.140
如果说啊

52:52.140 --> 52:53.040
我们这个

52:53.040 --> 52:54.240
内容比较长

52:54.240 --> 52:55.240
那内容比较长的话

52:55.240 --> 52:55.840
你像这种啊

52:55.840 --> 52:57.140
测试部门一

52:57.140 --> 52:58.440
商品部大数据

52:58.440 --> 53:00.140
如果说你橫向展示的话

53:00.140 --> 53:00.840
你展示不开

53:00.840 --> 53:02.140
会有重叠对不对

53:02.140 --> 53:03.240
那有重叠怎么办呢

53:03.240 --> 53:03.740
我们这里面

53:03.740 --> 53:05.940
可以使用一个formatter啊

53:05.940 --> 53:07.540
他提供的一个格式化的

53:07.540 --> 53:08.340
这么一个属性

53:09.540 --> 53:10.640
formatter这里面

53:10.640 --> 53:12.140
我们就可以对他

53:12.140 --> 53:13.740
来进行一个value

53:13.740 --> 53:15.040
做一个重置啊

53:15.040 --> 53:15.540
那这里面

53:15.540 --> 53:16.940
我们要判断一下br

53:16.940 --> 53:17.540
成立嘛

53:17.540 --> 53:18.040
对吧

53:18.040 --> 53:18.540
那这里面

53:18.540 --> 53:19.740
默认提供的一个什么

53:19.740 --> 53:20.940
提供一个格式化的br

53:21.340 --> 53:22.540
那我们这个value

53:23.940 --> 53:25.440
让他做一个换行

53:25.440 --> 53:27.440
我们这value点split

53:27.440 --> 53:29.440
给他变成一个空的数组

53:29.440 --> 53:29.940
之后呢

53:29.940 --> 53:31.840
我们给他做一个什么点重

53:32.640 --> 53:34.340
解析成字幅创意的时候

53:34.340 --> 53:35.840
我们加一个什么

53:35.840 --> 53:37.840
加一个反斜杆的回车

53:37.840 --> 53:39.440
让他换行就可以了

53:39.440 --> 53:39.940
对不对

53:39.940 --> 53:41.440
我们加一个反斜杆

53:41.440 --> 53:43.740
n让他来做一个分割

53:43.740 --> 53:44.340
之后呢

53:44.340 --> 53:45.240
我们这个里面

53:46.040 --> 53:47.640
value给他添加进去

53:47.640 --> 53:48.640
是不是就可以了

53:48.640 --> 53:49.140
那这样

53:49.140 --> 53:51.340
我们就对这个里面的内容

53:51.340 --> 53:53.240
做了一个处理

53:53.240 --> 53:54.240
那处理的时候

53:54.240 --> 53:54.840
这个时候

53:54.840 --> 53:56.340
其实我们这个br

53:56.340 --> 53:57.240
现在是不是没有

53:57.240 --> 53:57.640
对吧

53:57.640 --> 53:58.440
那我们一会儿

53:58.440 --> 54:00.040
可能需要接受这个br

54:00.040 --> 54:00.940
我提前呢

54:00.940 --> 54:02.240
先给他放点br

54:02.240 --> 54:03.940
初设化的时候等于一个 false

54:03.940 --> 54:06.240
如果说你要是传了

54:06.240 --> 54:08.440
那我就给你做这个换行

54:08.440 --> 54:10.040
那换行都哪个来换行

54:10.040 --> 54:10.440
其实呢

54:10.440 --> 54:11.340
我们换行的时候

54:11.340 --> 54:12.940
你知道像这种中文

54:12.940 --> 54:13.940
我换行对不对

54:13.940 --> 54:14.440
但是呢

54:14.440 --> 54:15.140
如果说数字

54:15.140 --> 54:16.340
我是不是就不换行了

54:16.340 --> 54:17.640
那你既然知道这点之后

54:17.640 --> 54:19.740
那我们这个br换行的规则

54:20.940 --> 54:22.240
我们要添加的时候

54:22.240 --> 54:23.240
就是给这些添加

54:23.240 --> 54:24.540
部门员工数量

54:24.540 --> 54:25.140
对不对

54:25.140 --> 54:27.740
也就是说给他添加一个换行

54:27.740 --> 54:27.840
哦

54:27.840 --> 54:29.040
这里面写一个是吧

54:29.040 --> 54:29.740
处啊

54:29.740 --> 54:31.240
这样就能给他隔开了

54:31.240 --> 54:32.940
使用一个反线杆

54:32.940 --> 54:34.540
然后给他做一个换行处理

54:34.540 --> 54:35.740
就ok了

54:35.740 --> 54:37.240
好了定义完他之后

54:37.240 --> 54:39.140
基本上我们这个处理完了

54:39.140 --> 54:40.640
处理完了之后

54:40.640 --> 54:41.540
vx

54:41.540 --> 54:43.040
找到他最后一个

54:43.040 --> 54:45.740
是我们的Saris啊

54:45.740 --> 54:46.640
把Saris

54:46.640 --> 54:48.240
也给他做一个处理

54:48.240 --> 54:52.500
还是一数度的形式来写了

54:52.500 --> 54:52.900
哎

54:52.900 --> 54:54.000
vx

54:54.000 --> 54:55.000
Saris

54:55.000 --> 54:55.400
ok

54:55.400 --> 54:57.500
这个里面添纸吧

54:57.500 --> 54:58.400
添纸的时候

54:58.400 --> 55:00.000
首先这个里面是内幕

55:00.000 --> 55:02.600
添一个什么人数对吧

55:02.600 --> 55:04.800
我们添一个人数之后

55:04.800 --> 55:08.940
这个里面有一个爆错啊

55:08.940 --> 55:10.540
这个为什么会爆错

55:10.540 --> 55:12.340
我来看一眼啊

55:12.340 --> 55:13.340
难道不对吗

55:13.340 --> 55:14.640
内幕x

55:14.640 --> 55:15.440
ok

55:15.440 --> 55:17.340
x是在这个里面

55:17.340 --> 55:19.740
然后是vx

55:19.840 --> 55:22.140
ok 应该没错啊

55:22.140 --> 55:23.440
再写一下

55:23.440 --> 55:25.540
写一下之后是一个空对线

55:25.540 --> 55:25.640
哎

55:25.640 --> 55:26.940
刚才为什么爆错

55:26.940 --> 55:30.040
然后这个里面写一个数组

55:30.040 --> 55:31.440
数组套对线

55:31.440 --> 55:31.940
内幕

55:31.940 --> 55:34.540
内幕我们加一个这个叫人数啊

55:34.540 --> 55:35.940
好了归定完他之后

55:35.940 --> 55:36.640
那我们再写啊

55:36.640 --> 55:37.340
tap

55:37.340 --> 55:39.440
我们这里面就指定一个什么呢

55:39.440 --> 55:40.640
指定一个bar

55:40.640 --> 55:41.440
ok啊

55:41.440 --> 55:41.940
呃

55:41.940 --> 55:42.840
渲染一个data吧

55:42.840 --> 55:43.940
data应该是谁呢

55:43.940 --> 55:47.040
data就是我们RenderList

55:47.040 --> 55:48.940
这个应该是我们

55:49.040 --> 55:49.440
呃

55:49.440 --> 55:50.240
y走的啦

55:50.240 --> 55:51.840
RenderList

55:51.840 --> 55:52.740
点一个

55:53.740 --> 55:54.640
vdata

55:54.640 --> 55:56.540
把这个数量给进行一个渲染

55:56.540 --> 55:57.140
是不是这样

55:57.140 --> 55:57.640
之后呢

55:57.640 --> 55:58.840
我们在这个里面

55:58.840 --> 55:59.540
规定一下

55:59.540 --> 56:01.340
他的这个label属性

56:01.340 --> 56:03.040
short是一个true

56:03.840 --> 56:04.140
ok

56:04.140 --> 56:05.840
继续我们的这个

56:06.440 --> 56:06.840
叫

56:07.540 --> 56:10.540
这个应该叫propaction啊

56:11.640 --> 56:11.940
好的

56:11.940 --> 56:14.040
那把他来写一下propaction

56:15.040 --> 56:19.540
规定一下这个propaction的属性

56:19.540 --> 56:20.640
那这个propaction呢

56:20.640 --> 56:21.440
应该是

56:21.440 --> 56:22.340
我记得啊

56:22.340 --> 56:25.040
给他添加一个一之后呢

56:25.040 --> 56:25.540
position

56:25.540 --> 56:26.740
给他规定一个什么呢

56:26.740 --> 56:28.240
top展示啊

56:28.240 --> 56:30.140
然后就是我们的这个

56:30.140 --> 56:31.540
value animation

56:31.540 --> 56:32.740
是不是有这个

56:33.740 --> 56:34.940
文字的动画啊

56:36.440 --> 56:38.340
value animation

56:38.340 --> 56:40.040
把他也添加一下

56:41.440 --> 56:43.540
value animation

56:43.540 --> 56:46.140
应该是我们这个里面写一个什么

56:46.140 --> 56:47.640
写一个true啊

56:47.640 --> 56:49.940
如果说同学们记不住这些属性怎么办呢

56:49.940 --> 56:51.040
我们可以自行的

56:51.040 --> 56:52.340
去查一下啊

56:52.340 --> 56:53.540
在这个eChars里面

56:53.540 --> 56:55.040
其实都是有对这些属性

56:55.040 --> 56:57.140
做一个详细介绍的啊

56:57.140 --> 56:57.340
哎

56:57.340 --> 56:58.540
这个里面有抱错

56:58.540 --> 56:59.840
而且抱错了还挺狠

56:59.840 --> 57:00.640
是不是

57:00.640 --> 57:02.340
那我们来检查一下

57:02.340 --> 57:04.340
哪一个位置写错了啊

57:05.240 --> 57:06.940
我们来看一下带码

57:06.940 --> 57:08.540
抱错的地方

57:08.540 --> 57:10.340
因为是地规调用的

57:10.340 --> 57:11.740
是不是这个里面for matter

57:11.740 --> 57:13.240
格式化的时候

57:13.240 --> 57:14.840
value br成立嘛

57:14.840 --> 57:15.800
是一个变量

57:15.800 --> 57:18.040
value点sibly的空字不串

57:18.040 --> 57:18.640
这不对啊

57:18.640 --> 57:21.040
这个不应该是一个空字不串啊

57:21.040 --> 57:23.240
这个我们直接就进行切个空字不串

57:23.240 --> 57:24.240
可能是找不到啊

57:25.440 --> 57:27.240
然后点做

57:27.240 --> 57:28.840
添加一个换行服

57:28.840 --> 57:30.140
value没问题

57:30.140 --> 57:30.640
之后呢

57:30.640 --> 57:33.840
我们这个label label show true position position

57:34.640 --> 57:35.940
没有这个套布变量啊

57:35.940 --> 57:37.440
这应该是一个字不串啊

57:37.440 --> 57:38.040
好了

57:38.040 --> 57:39.340
把他们都添加上之后

57:39.340 --> 57:41.140
那咱们再来刷新一下啊

57:41.140 --> 57:42.640
刷新一下再看一个效果

57:42.640 --> 57:43.440
那这个时候呢

57:43.440 --> 57:45.140
抱错就取消了啊

57:45.140 --> 57:46.740
也就是说抱错就没有了

57:46.740 --> 57:47.140
这个呢

57:47.140 --> 57:49.640
就是我们整个图表的一个渲染啊

57:49.640 --> 57:51.340
其实在图表渲染过程当中呢

57:51.340 --> 57:52.740
我们要明确一点

57:52.740 --> 57:53.740
首先来说呢

57:53.740 --> 57:56.240
他这个里面啊属性有好多

57:56.240 --> 57:57.640
我们怎么来使用

57:57.640 --> 57:59.440
那在我们保证了后端

57:59.440 --> 58:01.540
返回正常数据的前提下

58:01.540 --> 58:02.140
然后呢

58:02.140 --> 58:03.440
你前端进行渲染

58:03.440 --> 58:05.440
包括一些属性的填充的时候

58:05.440 --> 58:06.040
尽量的呢

58:06.040 --> 58:07.440
我们要使用一些API

58:07.440 --> 58:08.940
比如说我们这个

58:08.940 --> 58:10.240
Title是做什么用的

58:10.240 --> 58:11.540
Tip是做什么用的

58:11.540 --> 58:14.640
包括我们的这个Service有多少属性

58:14.640 --> 58:17.240
然后以及你看我们这个Procession

58:17.240 --> 58:18.140
它是干嘛用的

58:18.140 --> 58:21.440
这些我们都需要去进行文档查询

58:21.440 --> 58:21.840
除非呢

58:21.840 --> 58:24.340
你在业务上每天都在进行使用

58:24.340 --> 58:25.240
这种图表

58:25.240 --> 58:25.740
否则呢

58:25.740 --> 58:27.440
你一定不会特别熟悉的

58:27.440 --> 58:29.040
这个我们要清楚一下

58:29.040 --> 58:31.140
然后文档从哪儿查啊

58:31.140 --> 58:32.240
这几个官方地址

58:32.240 --> 58:33.840
都给同学们贴出来了

58:33.840 --> 58:34.340
然后呢

58:34.340 --> 58:35.440
是在这个里面

58:35.440 --> 58:36.940
分析模块到这个里面

58:36.940 --> 58:40.440
有我们的图表的一个什么呢

58:40.440 --> 58:41.640
这个地址啊

58:41.640 --> 58:43.240
一刷子发react的地址

58:43.240 --> 58:45.240
包括我们一刷子官网的地址

58:45.240 --> 58:46.540
都给同学们贴出来了

58:46.540 --> 58:49.840
然后包括我们一刷子发react的一些组价

58:49.840 --> 58:51.140
里面的一些参数

58:51.140 --> 58:51.640
也就是说

58:51.640 --> 58:52.940
其实使用组价的时候

58:52.940 --> 58:54.640
我们传递哪些参数

58:54.640 --> 58:56.240
比如说我们对这种

58:56.240 --> 58:57.940
默认的主题的更换呢

58:57.940 --> 58:59.940
包括我们这个图表的样式

58:59.940 --> 59:01.440
Style添加呀

59:01.440 --> 59:02.940
Lay the update

59:02.940 --> 59:04.340
其实我记得还有loading啊

59:04.340 --> 59:06.340
好多内容啊

59:06.340 --> 59:08.140
比如说on events啊

59:08.140 --> 59:09.540
这个是否加载动画

59:09.540 --> 59:10.440
这些都有啊

59:10.440 --> 59:10.840
然后呢

59:10.840 --> 59:13.140
我们这个里面还会有一个什么呢

59:13.140 --> 59:15.740
一刷子完整的一个配置信息

59:15.740 --> 59:17.540
那你都可以从这个里面查看

59:17.540 --> 59:20.840
这个里面我都提前给同学们准备好了

59:20.840 --> 59:22.340
然后你只要在这个里面

59:22.340 --> 59:24.840
看这个属性快速的定位

59:24.840 --> 59:25.640
去找到它

59:25.640 --> 59:28.840
看这里面的一个注尸苗树信息就OK了

59:28.840 --> 59:29.240
这个呢

59:29.240 --> 59:32.940
是我们快速的实现图表的这么一个捷径啊

59:32.940 --> 59:33.240
好的

59:33.240 --> 59:35.140
我们本节课就到这里

59:35.140 --> 59:35.740
谢谢大家

