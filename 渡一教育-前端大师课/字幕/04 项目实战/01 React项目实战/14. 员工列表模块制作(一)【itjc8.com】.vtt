WEBVTT

00:01.710 --> 00:06.570
各位同学 大家好 这节课我们继续案例制作的一个学习

00:06.570 --> 00:11.690
从本节课开始我们将进入到员工列表模块的一个制作

00:11.690 --> 00:17.070
那作为员工列表模块 它是我们整个案例里面比较重要的一部分

00:17.070 --> 00:23.470
所以说在这个里面会涉及到我们案例里面所用到的所有的相关的一些影片

00:23.470 --> 00:30.130
比如说我们一些数据的处理 包括我们一些公共组件的方法封装

00:30.290 --> 00:33.250
都在这个模块里面 我们将要实现

00:34.530 --> 00:41.410
那我们当前的这个列表模块都需要实现哪些功能呢 在这个里面主要是由以下几部分构成

00:41.930 --> 00:46.890
首先呢 第一就是我们员工列表的一个展示 在这里可以给同学们看一下

00:47.410 --> 00:51.690
员工列表展示这一块 其实呢 就是把我们整个的一个员工的表格

00:52.170 --> 00:54.650
给它进行一个显示 这是第一部分

00:55.210 --> 01:01.490
第二部分呢 就是修改我们员工的一个字段 那员工字段修改这里面分为两部分的修改

01:01.490 --> 01:08.610
首先是我们这个表格里面可以进行相关内容的一个修改 比如说在这里面可以进行

01:09.810 --> 01:16.330
员工的指定信息的一个调整 还有一种修改是在我点击员工查看详情的时候

01:16.730 --> 01:22.450
在这个里面呢 我可以对员工的一些指定信息进行一个修改 这是两种修改方式

01:23.050 --> 01:25.570
第三个呢 就是我们员工详情的一个展示

01:26.090 --> 01:31.290
详情展示这一块 其实就是刚才我打开的这个左侧的这么一个抽屉弹桩

01:31.890 --> 01:38.370
那这个抽屉弹桩呢 里面会有比较完整的一个当前员工的一个详细信息

01:38.890 --> 01:45.970
而且呢 在这个里面我们可以进行修改 以及删除当前展示的这个员工的一个操作

01:46.090 --> 01:47.690
都可以在这个里面来完成

01:47.930 --> 01:56.210
还有一个呢 是我们指定员工的一个相关表格展示 那这个是哪一部分啊 我们可以来看一下

01:56.610 --> 02:03.570
其实呢 这个员工的这个信息比较多 我们往后看 这里面有三项 比如说这里面有机销考核

02:04.170 --> 02:13.250
讲乘记录 以及调新记录 那在这个里面就展示了我们当前员工的一些相应的其他的这个

02:13.650 --> 02:20.210
附加的表格 比如说 当前这个员工的一个考核记录 或者说我们这个员工的一个讲乘记录

02:20.450 --> 02:28.490
但是如果你有 我就展示 那假如说没有呢 在这个里面就是一个空表格的弹窗 再给他进行一个显示

02:29.850 --> 02:37.690
还有一个是什么呢 我们在这个里面啊 就是要收集员工信息 实现一个新增员工这样的操作

02:38.130 --> 02:43.130
其实新增员工呢 等于是我们注册了一个新的员工 那这个怎么来做

02:43.530 --> 02:47.210
就是在我们左侧上面这块有一个创建员工

02:48.450 --> 02:54.450
这里面呢 我临时添了一些默认职 因为这样呢 比较方便我们进行员工的一个创建

02:55.130 --> 03:03.490
在这里 如果说我把详细信息都进行一个添加之后 那在这个里面 我们点击创建就可以新增一个员工的

03:03.850 --> 03:08.570
这样一个操作 那这是我们收集员工 实现新增员工的这么一个过程

03:09.810 --> 03:13.530
第六个呢 就是根据指定资段进行员工的一个查询

03:14.170 --> 03:23.250
我们左侧这一部分 其实是有一个搜索栏 那这个搜索栏 它的功能主要就是说 我们可以对员工进行一个查询

03:23.690 --> 03:29.010
比如说呢 这里面我们查询指定的员工 那像这个我查询一个什么 张飞

03:32.160 --> 03:38.480
好 在这里面 我们回车搜索 那你看这个时候显示的就是当前张飞这个内容指的 对不对

03:38.840 --> 03:41.200
整个的这个查询呢 就是这么一个过程

03:41.840 --> 03:47.760
然后呢 比如说我们这个查询里面 还可以根据一些关联信息 比如说我们查询商品部的那

03:48.640 --> 03:54.000
指定员工 包括我们大数据部的 都可以来进行一个指定的查询 当然的前提

03:54.520 --> 03:59.640
是得 他有啊 如果说没有的话 那这个就尴尬了啊 比如说像这种婚姻状况

04:00.080 --> 04:07.400
那我假如说未婚的 哎 未婚的查不到 是吧 如果说已婚呢 已婚 那就证明啊 张飞现在已经结婚了 对吧

04:07.840 --> 04:09.680
就是这种关联性的一个查询啊

04:11.000 --> 04:20.000
这个呢 就是我们要实现的啊 六个基本功能 那么实现这六个基本功能呢 我们就一次按着以下的步骤来操作一下

04:20.000 --> 04:27.840
就ok 首先第一个呢 因为他的这个接口处理是比较多的 我们统一的来把这个接口过一遍

04:28.160 --> 04:35.560
那也就是说把所有设计到的接口呢 进行一个部署 那第一个就是我们这个里面啊 是有一个基础的

04:35.560 --> 04:44.520
crud 也就是说我们的啊 列表获取 然后呢 还有一个详情 包括删除以及新增 之后呢 就是一个修改员工

04:44.880 --> 04:49.760
那这些基本的接口 他的这个文档在哪呢 就是下面这个地址啊

04:50.120 --> 04:51.200
可以给同学们看一下

04:52.640 --> 04:58.280
指定的员工的所有的这个相关的接口都在这个里面来进行存放

04:59.520 --> 05:04.280
首先呢 是对我们员工列表的一个获取 那么员工列表获取的时候

05:05.280 --> 05:12.200
这个时候呢 他没有一些避选项 因为这个列表获取啊 可以获取我们指定的查询的一些用户

05:12.720 --> 05:15.040
然后呢 还可以获取所有的一个集合

05:15.520 --> 05:20.120
如果说你不传递参数的话 那这个里面会默认给你返回五条数据

05:20.520 --> 05:24.080
然后如果说你传递才说 那就按着你这个参数来进行展示

05:24.600 --> 05:32.080
首先可选的参数都哪些啊 第一个呢 就是我们当前的骑士页 也就是说你从哪一样开始进行一个查询

05:32.480 --> 05:37.720
为什么要这样做 因为我们可以看一下 在完成的案例里面呢 我们是有这个分页的

05:38.000 --> 05:43.920
也就是说可以根据每一样不同的一个信息 我们来进行分一二的一个内容获取

05:44.240 --> 05:47.400
所以说配置呢 就是控制了我们一个业数

05:47.840 --> 05:49.920
赛资呢 是每一样的一个长度

05:50.440 --> 05:56.360
quad data这个里面就是我们刚才看到的左侧的这一部分的查询内容

05:57.600 --> 06:01.080
那这一部分内容呢 其实呢 就是通过一个quad data

06:01.520 --> 06:07.640
这里面都是非避选项 你可以传递education 包括我们的这个level啊

06:07.920 --> 06:10.680
或者是department marriage user name

06:10.960 --> 06:18.760
我们可以根据这些内容信息来进行一个我们相关指定内容查询的这样一个操作

06:19.200 --> 06:23.200
如果说成功之后 那这个时候呢 我们就会返回一个staff list的

06:23.600 --> 06:28.560
这个里面就包含了我们整个的员工的这样一个集合

06:28.960 --> 06:34.360
那这是第一个列表 获取我们员工的信息啊 整个的一个集合

06:34.800 --> 06:40.000
那还有一个呢 就是员工的详情啊 详情这一部分呢 他这个传递参数的时候

06:41.680 --> 06:46.600
是使用这种parmerize的形式来进行参数的传递

06:47.000 --> 06:50.360
那这个parmerize是什么呢 就是我们用户的一个唯一标识

06:50.760 --> 06:54.360
也就是说当你获取用户之后 比如说我们在这个员工类表里面啊

06:54.760 --> 07:00.520
如果说获取用户 那一定会得到一个什么 当前员工的一个id 那这个id呢 就代表我们

07:00.920 --> 07:07.120
代表着我们员工的一个唯一标识 我们可以根据这个唯一标识来给他进行传递

07:07.560 --> 07:11.400
传递之后 那就可以来进行一个详情的获取啊

07:12.080 --> 07:16.400
获取详情之后 整个的这个呢 就是指定员工的一个信息

07:16.760 --> 07:21.720
那这就是我们员工详情获取这一部分 还有一个就是新增员工这一块

07:22.160 --> 07:30.360
新增员工这一块是用post的请求 这个时候呢 这些里面啊 也就是说我们入餐的这一些参数自断

07:30.680 --> 07:37.640
有的呢 是必选项 有的是非必选项 比如说他的这个setter新增这一块 那我们可以展示不填

07:38.840 --> 07:46.640
还有一个呢 就是gradence固啊 也就是说毕业院校 尔韦塔 头像这些 你可以不选 那这些呢 是非必选项 除了这些呢

07:46.960 --> 07:52.440
在我们出手化注册的时候 都是必选项 所以必须要完完全全的添进去

07:52.880 --> 07:56.800
反为止呢 如果说你成功 那这时候给你显示一个msg

07:57.280 --> 08:01.440
添加成功 否则呢 给你进行一个添加失败的这样一个显示

08:02.400 --> 08:07.520
之后呢 就是我们修改员工信息啊 修改员工信息使用post请求

08:08.080 --> 08:14.040
这个里面传递的参数有一个type和这个update的value 这两个呢 是我们

08:14.640 --> 08:24.920
告诉后端需要当前修改哪一个用户 那修改用户哪一个指定的自断 那这个id呢 代表着我们当前修改的这个用户

08:25.320 --> 08:27.560
这三个值呢 都是我们的一个必选项

08:29.040 --> 08:33.160
还有一个基本的这个请求 就是我们删除用户这样一个操作

08:33.680 --> 08:41.720
删除用户操作这一部分呢 在我们进行用户删除的时候 首先呢 采取的请求方式是post的请求 这个我们要注意一下

08:42.240 --> 08:43.480
然后它这个里面

08:44.120 --> 08:50.000
可以是传递一个数组啊 那也就是说以数组的形式来进行删除

08:50.280 --> 08:53.280
这样就支持了我们多数据的一个删除

08:53.680 --> 09:04.480
比如说我们这里面有一个批量删除 如果说在表格里面选中所有的当前这一二的信息 那这个时候呢 我们就可以把当前这一二的员工id

09:04.840 --> 09:11.240
都传递给后端 那后端接收的时候就是采取ids类型呢 就是一个数组类型

09:11.680 --> 09:17.680
然后每一项值就是我们当前这个集合里面的唯一标识id 你传过去之后

09:18.560 --> 09:25.840
那这个时候后端做处理 如果说删除成功 给你返回一个 那删除失败啊 他这里面给你提示id值的错误

09:26.120 --> 09:32.800
这个呢 就是我们删除员工信息的这样一个借口请求 那以上这几个呢 是我们一个基本的处理

09:33.040 --> 09:38.720
那这里面除了一些基本的请求之外 还有什么呢 还有就是我们文件上传的token获取

09:39.520 --> 09:44.640
文件上传token获取这一块从哪来呢 我们可以看一下 是在我们的这个

09:45.200 --> 09:51.120
这里面啊 在我们的用户接口这一块 用户接口这一块 有一个文件上传的token

09:51.200 --> 09:57.760
这个是用来做什么的 我们可以看到表格里面是有图片的 那这个图片呢 其实在我们创建

09:58.240 --> 10:05.280
员工的时候 我们就可以进行图片的选择 包括我们修改的时候 比如说在这个里面进行员工的修改

10:06.240 --> 10:16.000
哎 把它取消啊 当我们进行员工修改的时候 那这个时候呢 也是可以进行一个我们这个信息的一个什么

10:16.640 --> 10:20.480
图片信息的一个展示的啊 这个里面刚才没点上 sorry啊

10:20.720 --> 10:25.920
然后呢 你像这张图我们可以选择图片 把它给做一个替换 那像这种操作的时候

10:26.160 --> 10:32.560
因为是前端直传 所以说我们需要一个指定的ablo的token 那这个ablo的token如何来获取呢

10:32.880 --> 10:38.640
在我们制作过程当中 我们给同学们做一个详细的介绍 那展示呢 我们先了解的啊

10:38.960 --> 10:44.000
就是说实现员工模块 这个文件上传token也是一个必须的接口

10:44.480 --> 10:49.600
还有呢 就是我们刚才看到的员工几个相关表格的一个接口获取

10:50.000 --> 10:58.000
比如说当前员工的一个机校考核以及讲乘记录 包括他的一个调行记录获取 那这些呢 就是我们一些

10:58.960 --> 11:05.680
请求的一个接口啊 那我们首先第一件事呢 就是把这些接口来做一个定义

11:06.080 --> 11:10.480
我们回到我们的代码当中 然后呢 来进行接口的创建

11:11.040 --> 11:18.480
接口创建首先打开我们的summers 那之前呢 我们已经创建了analyzer attance 包括department的

11:18.800 --> 11:22.080
那这个时候呢 我们再定义一个叫stuff的

11:23.040 --> 11:29.840
专门存放我们员工的相关的接口 那这个里面写一个stuff.js

11:30.320 --> 11:38.800
ok 他的引入方式呢 其实和我们之前使用的是完全一致 那我这里面首先给他引入一个阿甲克斯方法

11:39.280 --> 11:47.440
也说阿甲克斯方法之后 那我们一次的把这些接口啊来进行一个编写 首先第一个就是获取员工列表

11:48.400 --> 11:56.000
获取员工列表 那我们在这个里面导出一个expo.const的这个叫getstuffleast

11:57.120 --> 12:06.320
getstuffleast的等于我们这个里面肯定得传递参数 对吧 那我们把这个parmaris给他来进行一个添加

12:06.720 --> 12:13.760
之后呢 我们使用阿甲克斯 那这个时候是什么请求 我们需要看一下 对吧 首先我们回到这个里面

12:14.720 --> 12:20.960
看我们的这个接口文档到这个里面getstuffleast打开我们员工接口

12:21.440 --> 12:28.640
那第一个呢 就是获取员工列表 这里面呢 是post的请求 那我们只需要把这个粘贴一下就可以了 对不对

12:28.880 --> 12:30.160
然后呢 把他拿过来

12:31.360 --> 12:34.560
好 拿过来之后 阿甲克斯点post

12:35.040 --> 12:43.200
ok post定义完了之后 就是我们接口地址getstuff之后呢 把我们这个parmaris给他进行一个传递

12:43.680 --> 12:49.440
第一个就创建好了 那我们来继续第二个 第二个呢 就是获取员工的一个详情

12:51.440 --> 12:57.440
获取员工详情 我们写一下expo.const的getstuffleast

12:59.920 --> 13:08.560
等于我们这个也需要传递这个parmaris啊 但是我们这个parmaris呢 比较特殊 因为我们知道肯定是id 对不对 那我们这里面呢 就写一个什么

13:08.640 --> 13:13.600
写一个id啊 给他进行一个传递就ok了 然后给他个一个小过号

13:14.080 --> 13:22.320
包裹起来之后 那写上阿甲克斯点get这个呢 就是我们的地址啊 这个地址呢 其实我们是需要做一个拼接的啊

13:22.720 --> 13:29.920
比如说我们员工详情这一块stuff detail后面呢 会跟一个id 那我们这里面使用一个模板字幕串

13:30.320 --> 13:40.240
首先stuff detail后面的这个id呢 我们使用dollar这种模板字幕串的形式 把这个id给他进行一个传递 ok 那这个就定义完了

13:41.520 --> 13:44.640
定完成第三个 就是我们新增员工啊

13:46.640 --> 13:52.160
新增员工 其实新增员工它等于什么呢 其实就是我们的这个员工注册

13:52.560 --> 13:59.840
这个呢 我们要明确一下 员工注册这里面写一下expo.const

14:00.080 --> 14:02.400
这个应该是我们createstuff

14:04.560 --> 14:12.000
等于我们这里面肯定得传递parameters 对不对 那阿甲克斯点post的createstuff ok

14:12.400 --> 14:15.840
这个完成之后 把这个参数给它进行一个添写

14:16.560 --> 14:22.080
好了 新增完成之后 那这个里面就应该是修改员工信息啊

14:22.960 --> 14:31.760
修改员工信息 我们同样的给他粘贴一个就可以了啊 然后呢 这个名字给他改一下 这个应该叫updatestuff 对吧

14:31.760 --> 14:33.760
我们给他写一下update

14:34.800 --> 14:35.920
updatestuff

14:37.920 --> 14:39.920
这里面缺个a

14:41.760 --> 14:50.640
好了 定义完成updatestuff之后 我们这里面要写一下这个接口应该是什么呢 也是updatestuff

14:52.320 --> 14:56.720
咱们来改一下parameters呢 同样是我们传递的一个参数

14:57.120 --> 15:04.080
那修改信息完成之后 接下来呢 就应该是我们的删除员工信息 对吧 这里面再来写一下

15:07.040 --> 15:12.160
把它来定一下删除 那这个删除呢 我们就给他一个delete

15:15.260 --> 15:21.500
deletestuff 那deletestuff这个因为可以删除多个 那我们加一个复数啊

15:21.900 --> 15:29.340
加了一个复数之后 这个呢 也是一个pose的请求啊 这个修改呢 我们应该改一下 这个应该是一个pose的请求啊

15:30.460 --> 15:34.620
这个pose的请求 那这个应该是什么 我们看一下这个接口啊

15:36.140 --> 15:43.500
打开这个删除员工 那这个应该是deletestuff 把它给进行一个添加

15:46.540 --> 15:50.780
deletestuff 然后呢 这个传递也是parameters

15:51.500 --> 15:55.980
好的 基本上啊 这些呢 我们需要的新增修改

15:56.620 --> 16:03.500
然后查询 包括我们的一个详情 也就是说Ciub啊 这些基本上就都有了

16:03.980 --> 16:12.140
有了之后 那这是我们第一步啊 给他进定义好了 定好之后 我们肯定是在这个页面里面啊 是需要使用的

16:12.380 --> 16:14.860
而且呢 我们在页面里面使用的时候

16:15.340 --> 16:21.420
可能会维护一些公共的状态数据 那在这个里面呢 我们就要把mode啊 文件家也定一下

16:21.500 --> 16:22.540
model.js

16:23.580 --> 16:28.860
用来存放我们的一个状态 包括呢 处理一下我们初始化的一些

16:29.260 --> 16:33.420
相关的请求 那我这里面就给他做一个导出啊

16:33.900 --> 16:38.140
export 这里面导出一个默认的default

16:38.780 --> 16:42.380
对象 首先指定我们的name space

16:43.020 --> 16:45.900
name space 指定的时候 这个叫stuff

16:46.620 --> 16:53.340
ok 定义完成之后 然后呢 这里面肯定有state啊 state 初始化的时候

16:53.740 --> 17:00.860
我们会有一个stuff list 这里面我们就写一下stuff list 初始化的时候肯定是给他一个空

17:01.420 --> 17:04.780
之后呢 我们这里面啊 除了stuff list 因为我们要渲染

17:05.180 --> 17:11.660
这个分业 那我们就需要知道它的一个总数 那这里面我们就获取一个stuff total

17:11.820 --> 17:21.020
好了 stuff total 呢 初始化的时候给他一个连 之后呢 我们这里面再保存一个他的详情

17:21.660 --> 17:23.020
stuff detail

17:24.540 --> 17:29.180
详情这一块呢 我们初始化的时候肯定没有 所以说这里面给他一个闹

17:29.500 --> 17:33.100
定一完state之后 我们再来创建一下reducer

17:33.340 --> 17:39.820
reducer呢 是专门对我们这个状态啊 后期的一个改变啊 做一个调整

17:41.820 --> 17:47.260
把这个reducer定义一下reducer里面这个时候呢 我们可能会有一个什么

17:47.660 --> 17:51.180
stuff list的 对不对 那我们这时候就有一个save stuff

17:51.500 --> 17:56.060
也就是说对他进行一个保存 save stuff list的

17:56.300 --> 18:01.820
然后这个时候 我们如果说要对他进行保存的时候 首先你是不是得接收纸啊 对吧

18:01.980 --> 18:06.220
那接收纸给谁进行修改 同样的 我们这里面和每一个模块都一样

18:06.540 --> 18:11.820
给他写上state 这是第一个才说 第二个呢 就是我们的这个payload

18:12.460 --> 18:17.420
ok 这个完成之后 如果说我们获取到新值之后 我们要做一件事 第二点点

18:17.740 --> 18:23.660
把我们的原来的这个state 给他做一个解开之后呢 把我们的这个获取到的payload

18:23.740 --> 18:29.100
的信息给他做一个什么填充 是不是就可以了 那这个呢 就是我们的一个操作啊

18:29.580 --> 18:32.140
然后把这个处理完成之后 save stuff

18:32.460 --> 18:39.180
那这个时候我们是save stuff list的 对不对 除了save stuff list的 我们这里面还应该有一个save stuff

18:40.780 --> 18:45.900
toto 也就是说保存他的一个总的数量 员工总的数量

18:46.140 --> 18:49.900
那当这两个都处理完成之后 这两个是比较基础的 我们先写完了

18:50.060 --> 18:53.260
还有一个是什么呢 还有一个就是save stuff detail

18:53.820 --> 18:57.740
那我们再来写一个stuff这个呢 给他改一个名字

18:58.460 --> 19:06.460
save stuff detail写完了之后state的payload的同样呢 这个里面去修改detail的值就可以了

19:06.700 --> 19:12.460
之后我们reducer定义完成之后 那这个时候呢 会有异不处理 我们就定义efit cost

19:12.860 --> 19:16.700
efit cost 同样的他这个里面 接收gendry的函数

19:16.940 --> 19:20.780
首先第一个 我们要做的事是什么 获取员工的列表

19:22.060 --> 19:26.940
获取员工列表为什么要在这个里面做 可以给同学们看一下已经完成的

19:27.660 --> 19:32.380
当我在这个里面刷新的时候 你会发现这个表格是不是有一个loading

19:32.620 --> 19:37.500
那这个loading呢 其实就是当我们请求数据 然后发起请求的时候 他开启

19:38.140 --> 19:42.860
什么时候结束呢 就是当我们这个请求完成之后 他做一个关闭

19:43.020 --> 19:46.540
这个呢是安底战给我们提供的一个table的loading效果

19:46.780 --> 19:51.100
那基于这个table loading效果 我们准确监听本次请求的一个状态

19:51.420 --> 19:54.060
可以使用底瓦的loading这个模块

19:54.380 --> 19:58.140
那使用底瓦loading模块 首先前提保证是什么呢 我们这个请求

19:58.540 --> 20:04.460
要存放于model里面 对吧 那所以说在这个里面 我出手话的时候定义一个gendry

20:04.700 --> 20:10.780
函数 那gendry的函数叫efit star for least的 这个里面呢会有一些入餐

20:12.140 --> 20:16.780
payload 这是一个入餐之后呢 调用gendry的函数

20:17.020 --> 20:19.900
yadry里面两个比较重要的 一个叫port

20:20.220 --> 20:26.940
一个叫cult 那我们通过这个yadry的cult方法来进行一个数据的获取

20:27.340 --> 20:34.300
concept data等于我们yadry的cult后面跟着我们请求的地址

20:34.540 --> 20:39.340
请求地址在哪 因为我们都已经定义好了 对吧 那所以说我们这里面就给它进行一个

20:39.660 --> 20:45.100
导入就可以了 import $http forom从我们的这个app来

20:46.060 --> 20:52.620
然后在这个里面呢 我们ela的cult就可以使用dollarhttp之后呢 这种点

20:53.180 --> 20:57.180
当然这个是什么 我们需要看我们这一块的接口啊

20:57.820 --> 21:04.380
找到我们的staff instance 第一个叫getstaff least的 对不对 那我们dollarhttp

21:05.260 --> 21:11.020
点getstaff least的 然后呢 把我们的这个payload给它做一个传递啊

21:11.580 --> 21:16.540
那这样呢 第一个 我们基本上就创建完成了 这里面加一个等号

21:16.940 --> 21:23.420
yadry的点cut 然后这个如果说获取之之后 我们首先第一步是不是得对它进行一个打印呢 对吧

21:23.580 --> 21:25.340
也就是说看它都是哪些纸啊

21:26.460 --> 21:30.540
那这个怎么来看呢 因为我们现在已经写好了这个什么界面了

21:30.620 --> 21:35.740
所以说呢 我们就不需要pose的慢相关的内容来看了 我们就可以在界面里面来进行查看

21:36.140 --> 21:41.100
但是查看的前提 你是不是得保证这个 我们定义好的这个

21:41.340 --> 21:43.820
genery的函数要需要有一个调用了 对不对

21:44.620 --> 21:50.140
怎么来进调用呢 那这个时候呢 就回到我们staff里面index.js

21:51.420 --> 21:57.980
我们首先如果说要对它进行调用的话 那这里面就会使用到dethpatch函数 对吧

21:58.140 --> 22:03.420
那dethpatch函数这个时候呢 我们就可以把右子dethpatch给做一个

22:04.060 --> 22:07.020
导入啊 那这里面右子dethpatch

22:07.500 --> 22:12.140
然后呢 for rom 从react readouts里面也可以 然后呢 我们这个里面啊

22:12.380 --> 22:17.180
因为使用5米了 我们直接统一的 就从5米里面进行一个导入

22:18.780 --> 22:22.380
导入之后 在这个里面const 我们定一个dethpatch

22:23.100 --> 22:23.500
常量

22:24.380 --> 22:28.620
dethpatch 等于右子dethpatch 然后我在这里面就可以发送了

22:28.860 --> 22:32.300
但是发送这个 我们要明确一下 出手话的时候就上来发送

22:32.540 --> 22:37.180
而且呢 只发送一次 那所以说我这里面就可以使用右子efecald

22:37.420 --> 22:42.940
专门做初始化的时候的一个处理 这时候呢 给它一个空数组 作为第二个参数

22:43.180 --> 22:46.860
那这样就代表着我们初始化只执行一次 对不对

22:48.700 --> 22:54.940
只执行一次 那这个右子efecald 我们得给它做一个引入啊 从我们react里面

22:55.180 --> 22:59.260
给它导进来 导进来之后 那这个时候我们就可以来做这个事了 对不对

22:59.660 --> 23:07.980
那做这事 做什么事呢 我们在这个当前组件内 我们定一个initstaff least这样一个方法

23:08.620 --> 23:10.620
之后呢 我在这个里面来定一下

23:11.980 --> 23:16.220
const in it 这里面写一下initstaff least

23:16.620 --> 23:22.540
等于一个建筒寒数也可以啊 那我们直接在这个里面dethpatch 做派发是不是就可以了

23:22.860 --> 23:25.500
首先呢 我们指定派发的这个类型

23:25.900 --> 23:29.500
那这个类型呢 就是我们 第一个是我们模块的名

23:30.300 --> 23:36.780
staff 它下面的谁 它下面呢 就是我们的这个initstaff least的 对不对

23:38.780 --> 23:42.700
我们把这个名字给它传递过去就可以啊 然后呢 这个里面啊

23:43.180 --> 23:48.300
第二个呢 是接收我们的这个参数 那我们参数这一块呢 我们给它指定一个

23:49.180 --> 23:55.260
low的 然后里面给它一个size 那size我们传递一段呢 我们给它一个固定值吧

23:55.580 --> 24:00.060
size 可以给它一个固定值 然后这个好像是写到外面去了啊

24:00.620 --> 24:06.940
把它给调整一下initstaff least的多了一个扩号 然后在这个里面 逗号

24:07.340 --> 24:09.180
payload的size是10

24:11.020 --> 24:11.420
这里面

24:12.460 --> 24:17.580
少了一个扩号 type payload 然后在这里面再加一个扩号

24:17.900 --> 24:23.020
ok 没问题啊 定好size之后 那当前显示哪一样呢 我们这里面是不是得定一个配置

24:23.420 --> 24:27.820
那配置 我们这里面需要使用 那这个时候我们出手话是不是可以定一个

24:28.060 --> 24:34.300
而且呢 这个配置 肯定是需要进行更改的 对不对 那我这里面就定一个uze state

24:35.740 --> 24:41.180
然后定一个配置的状态值 我们constuze state

24:41.580 --> 24:48.860
等于一个uze state 出手话的时候 给它一个什么 给它一个0啊 然后呢 这里面指定一下吧

24:49.500 --> 24:55.820
指定一下两个值 一个是我们的这个配置 还有一个呢 叫set配置 对吧 set配置和配置

24:55.980 --> 25:01.820
这两个呢 就是我们所必须的啊 那其他的参数呢 我们在出手话的时候 暂时也不需要

25:01.900 --> 25:04.620
所以说我们先不考虑其他的相关参数传递

25:05.100 --> 25:10.700
我们来看一下 现在呢 已经退出去了 我们重新登录一下 艾德曼123qwe

25:11.660 --> 25:20.060
到点击登录之后 选择到员工这个里面 参数传递错误 那我们来看一下这个参数 为什么传递错误

25:21.260 --> 25:26.700
payload配置0size10 那这个对照我们这个文档来看一下

25:27.100 --> 25:36.860
获取员工列表 获取员工列表的时候 这个里面配置起始一二等于一啊 那所以说这个里面 我们出手话的时候应该给它定一几

25:37.260 --> 25:42.300
是不是定一一就ok了 那我们再来做一个测试 所有的同学们在遇到错误的时候

25:42.780 --> 25:48.700
要对照我们错误的一些描述信息来进行一些指定的bug修复啊

25:50.220 --> 25:55.500
好的 我们看一下员工 此时呢 就没有爆错了 没有爆错之后 我们在这个里面检查一下

25:55.980 --> 26:03.660
相关的内容呢 就已经给我们返回回来了 返回回来之后 我们接收到的这个data里面呢 是有两个指的

26:03.980 --> 26:12.700
那这两个指的 我们一次的来进行一个收集 是不是就可以了 也就是说对这两个指单独的来进行一个收集就ok了啊

26:14.060 --> 26:22.220
好的 回到我们这个里面找到model 找到model下面 拿到data 其实不是我们的这个目的 我们最终目的是拿到什么

26:22.620 --> 26:31.420
stuff list的和这个stuff total啊 我在这里面给他做一个复职 那这个里面应该从哪儿解构吗 从外面啊 这里面再写一个

26:31.820 --> 26:35.580
data 冒号 这个是stuff list的 把它给干掉

26:36.300 --> 26:41.820
解构出stuff list的之后 还有一个stuff total ok 这两个指都有了

26:43.020 --> 26:50.220
有了之后怎么办 我们一次的调用stuff list的和stuff total 是不是就可以了 那也就是说也累的

26:50.220 --> 26:57.900
然后使用put方法 put方法 第一个 我们直接在这个里面type type是谁呢 是我们的这个

26:57.980 --> 27:05.180
savestuff list的第一个对不对 第一个定义好了之后 那这个时候他从payload里面

27:05.660 --> 27:11.980
做一个解构 然后payload的是一个对象 对吧 那所以说这个里面我们怎么办呢 我们直接写这个

27:12.460 --> 27:17.420
因为已经定义好了吗 那我们直接的payload的冒号呢 就是我们这个

27:17.980 --> 27:25.420
stuff list的 是不是就可以了 然后把这个对象给放进去啊 ok 第一个好了之后 那我们第二个呢 就是

27:25.900 --> 27:34.300
savestuff total payload的呢 就是我们的这个stuff total 那这样呢 就保存了两个指让 我们来看一下

27:35.580 --> 27:40.220
到我们刷新之后 那现在怎么看呢 我们可以从这个借助Redus插件

27:40.780 --> 27:44.540
Redus插件里面找到state这个里面有一个stuff

27:44.940 --> 27:52.220
stuff里面分别保存了stuff list的和这个stuff total 那这两个指就是我们一个基础指

27:52.460 --> 27:58.300
那第一步呢 我们获取数据这一块啊 获取一个基本数据 那我们这边是搞定了对不对

27:58.540 --> 28:04.460
那至于该的stuff detail这个啊 我们用到之后 再来进行一个获取就ok了

28:04.940 --> 28:10.620
来继续回到我们的这个界面里面啊 我们回到界面里面 那下面我们要做什么呢

28:10.860 --> 28:14.300
因为有了出手发数据 其实我们现在能做的事情就有好多了

28:14.620 --> 28:17.340
首先第一个 我们现在可以宣列表了对不对

28:18.140 --> 28:24.540
然后呢 我们还可以做一些相应的搜索的这个内容 那么首先啊 我们第一个要考虑的问题是什么呢

28:24.780 --> 28:31.900
就是针对我们当前这个组件 我们这个组件里面有一些公共组件和自己的私有组件

28:32.140 --> 28:41.020
那我们要进行一个区分 首先第一个区分出来的是什么呢 我们模块内的一个公共组件 哪些是公共组件呢

28:41.500 --> 28:45.420
比如说 我们现在看到的头部这一个处理的

28:46.300 --> 28:50.540
呃 区域 那比如说我们创建包括我们批量删除

28:51.340 --> 28:56.940
还有右侧的分业展示 在员工这一块有 那比如说在直级这一块 他也是存在的

28:57.180 --> 29:02.460
包括我们技校考核 调形记录 也就是说每一个模块里面 其实都会用到他

29:02.780 --> 29:06.620
那用到他 前提是什么呢 他这个里面接受的参数不一样

29:06.940 --> 29:11.900
那他都能实现哪些功能呢 在这个里面 我跟同学们说一下

29:12.380 --> 29:17.180
首先呢 他实现的功能是展示当前列表向数据的一个长度

29:17.660 --> 29:23.500
那这个里面呢 就需要我们传递一个toto值给这个公共的组件 这是他的第一个

29:23.980 --> 29:28.220
第二个呢 是会全局新增弹窗的一个打开功能

29:28.700 --> 29:33.020
也就是说 当我进行创建的时候 这个时候呢 我们在全局定一个状态

29:33.500 --> 29:38.220
这个状态控制我们当前的这个全局的moto弹窗进行一个打开

29:38.620 --> 29:41.580
所以说呢 他还要进行一个函数的传递

29:42.380 --> 29:47.740
这个函数呢 就可以通知我们的这个副组假进行这个弹窗的打开

29:48.620 --> 29:52.140
第三个呢 就是我们改变当前展示一二的内容

29:52.460 --> 29:57.340
这个是怎么来做的 首先呢 这个里面他还会展示我们当前展示那一二

29:57.980 --> 30:01.980
一共多少一二 那这个呢 肯定是经过计算来制作出来的

30:02.220 --> 30:05.900
那经过计算来制作出来的 那这个里面我们除了传递toto之外

30:06.220 --> 30:12.940
还会把配置传出去 那既然传递了配置 我在这个里面就可以通过我们点击下一二的时候

30:13.340 --> 30:18.700
那他呢会展示下一二 那所以说这个里面 我们还会接收一个通知函数

30:19.020 --> 30:21.100
这个通知函数呢 就是告诉我们副组假

30:21.500 --> 30:27.020
当前的这个业术进行了一个调整啊 还有一个就是删除当前

30:27.580 --> 30:31.580
选定列表的一个内容 那删除当前选定列表内容指的是什么呢

30:32.460 --> 30:38.220
就是说 我们这里面如果说没有选择的话 我点击这个按钮 那现在您还未指定删除列表像

30:38.700 --> 30:45.100
如果说我点击选择了 那这个时候他就应该做事了 比如说我们删除列表操作内容 这样我选择一个

30:45.500 --> 30:51.340
我怕把所有的都删除掉 然后这个时候我批量删除 那这个时候他就可以进行一个删除操作了

30:51.660 --> 30:55.580
那此时他能进行删除操作 那我们就需要给他一个

30:56.060 --> 31:01.580
删除的这样一个ids的集合 让他来进行保存 当点击确定的时候

31:01.980 --> 31:07.500
也就是说在当前的这个头部组件里面 我们就可以进行一个相应的删除操作

31:07.900 --> 31:14.700
这个呢 就是他需要的一些状态 所以说我们基于以上几个功能来完成这个组件就ok了啊

31:15.820 --> 31:25.980
好的 我们首先创建一个当前需要使用的这个组件存放的这个地方啊 那这个里面呢 我们这个在src

31:26.140 --> 31:31.180
couplements下面 因为它呢 是每一个页面都会使用到

31:31.740 --> 31:38.300
然后呢 我们这个里面存放在couplements couplements下面 我们定义一个文件家叫table header

31:39.740 --> 31:40.860
我们这里面来写一下

31:42.140 --> 31:42.540
table

31:43.820 --> 31:53.740
hider ok 定义完成之后 写一个index.js差之后呢 来进行一个定义 那这个定义名字呢 跟它是相同的

31:54.060 --> 31:55.900
叫table header

31:56.860 --> 32:07.100
定义好了之后 那这里面就需要接收一些值啊 我们在接收这些值都需要哪些值呢 就按照我们刚才的分析来进行值的接收就ok了

32:07.340 --> 32:11.180
那第一个就是说他这里面需要一个配置 对吧

32:12.460 --> 32:18.540
由于计算分一二 除了配置之外还需要一个size 之后呢 他还需要一个toto

32:18.940 --> 32:28.300
那我把这几项都定义一下啊 然后呢 这个里面 除了配置size total之外 那我们这里面可能还需要改变当前的页数

32:28.540 --> 32:40.460
那我这里面change current page 再接收一个函数 之后呢 我们在这个里面 如果说他可以删除的话 那我们这个删除的话 是不是得接收一个删除的方法

32:40.860 --> 32:45.180
每一个组件里面删除方法都不一样 那我就定一个interface

32:45.900 --> 32:51.080
del my third ok 定义好了之后

32:52.520 --> 32:53.240
my third啊

32:56.970 --> 33:06.250
定义好了之后 那这些呢 我们首先保证啊 能在这个里面进行一个正常的打印啊 把他们呢 都给他做一个打印

33:07.770 --> 33:13.450
打印出来 如果说能成功 把这些值都拿回来之后 那这个事我们基本上就搞定了啊

33:14.410 --> 33:20.090
怎么办呢 回到我们的pages下面 由于stuff来需要使用 对吧 那我们第一步

33:20.570 --> 33:28.810
先给他进行一个引入 这样为了不报错呢 我们分两瓶来进行一个处理 首先给他进行一个引入

33:29.290 --> 33:34.410
引入呢 就是引入我们的table header 在这个里面 把它给做一个引入

33:36.090 --> 33:39.770
引入他之后 那这个里面我们就需要使用到了 使用到的时候

33:40.090 --> 33:45.770
咱们这里面 好像内容也应该很多 对吧 那我们怎么办呢 这个呢 给他return出来一个

33:46.890 --> 33:51.610
使用这种括号的形式 这个里面呢 我们就来写一下 比如说这个叫悶钢

33:53.050 --> 34:01.050
好 定义完了之后 那注意这个应该是class name 对吧 创议完成之后呢 第一个肯定就是我们需要获取的这个

34:01.850 --> 34:05.210
table header组件 对吧 那我们把这个table header组件

34:05.690 --> 34:13.610
给他来做一个引入 那这个引入的过程呢 其实啊 也是非常简单的 我们直接呢 给他进行一个

34:14.170 --> 34:21.530
添加就ok了 我们写来写一个注释啊 在这个里面 我们来写一下这个叫公共的一个

34:22.170 --> 34:23.850
表格 头部组件

34:25.770 --> 34:30.730
好 写完之后呢 我们就给他进行一个引入table header

34:31.050 --> 34:39.050
然后呢 开始和闭合 就是一个标签就可以了 在这个里面 我们直接的给他进行一个添加内容呢 这么一个过程

34:39.610 --> 34:45.610
那添加内容都添加哪些呢 就是把我们现在所需要的这些内容给他做一个添加就可以了

34:46.170 --> 34:54.250
那添加的时候 咱们首先来讲 现在咱们已经有了这个配置 对吧 那我们第一个就是给他传递一个配置

34:54.490 --> 34:57.610
也就是说把这个配置给他进行一个传递啊

34:58.410 --> 35:03.530
配置的传递 我们在这个里面就来写一下 首先呢 是我们的这个

35:05.130 --> 35:14.010
定一个配置 等于我们的这个配置 ok 这是第一个 第一个写完了之后呢 咱们继续来进行一个传递

35:14.410 --> 35:16.330
之后呢 我们还会给他一个toto

35:17.610 --> 35:20.090
toto呢 就等于我们获取的一个值啊

35:21.130 --> 35:27.130
因为我们现在已经获取到toto了 但是只不过还是没有拿过来使用对不对 那这时候怎么办呢

35:27.130 --> 35:33.610
我们可以给他进行一个引入啊 那引入的话 我们使用这种youtse slagdare的形式啊

35:34.010 --> 35:38.090
把这个youtse slagdare来给他做一个导入 youtse slagdare

35:38.490 --> 35:43.690
好了 导入之后呢 我们这里面就可以通过youtse slagdare获取我们这个toto值

35:44.090 --> 35:45.930
抗死他 那这里面是我们

35:46.490 --> 35:54.890
结构出来叫什么呢 咱们可以看一下这个里面定义的model定义的数据 那这个数据叫stafftoto对不对

35:55.850 --> 36:01.610
stafftoto等于我们的这个youtse slagdare这里面写一下

36:03.130 --> 36:11.690
youtse slagdare从我们staff里面获取 那这个啊 应该是我们的一个什么 我们直接在这个里面获取 第一个是state啊

36:14.010 --> 36:20.250
state模块呢 就是导出模块 就是我们的state点staff模块啊

36:20.570 --> 36:25.610
ok 导出完成之后 那这个时候呢 我们有一个stafftoto

36:25.930 --> 36:32.570
把它呢 作为我们一个参数 给它传递过去 传递过去之后 这是第二个 那第二个传递完成之后

36:32.890 --> 36:36.170
我们再继续传递啊 这个里面还需要一个size

36:36.490 --> 36:42.410
那size呢 其实这个里面我们直接就给他一个什么呢 当前组件直接让他展示实验 是不就可以了

36:42.650 --> 36:49.130
这是这个啊 定义好了之后 那我们再继续的来啊 这个里面有一个change current page

36:49.370 --> 36:57.370
但这个时间我们是不是还没有定义啊 然后呢 这里面我们先写一下这个叫change current page 我们定一个这样的时间

36:59.130 --> 37:05.930
写一个注释 这个注释叫改变当前展示列表的一个页数啊

37:06.410 --> 37:11.290
然后呢 我们在这个里面定一下constchange current page

37:11.610 --> 37:18.010
我们这里面肯定得接收参数 对不对 那我们这个里面就来做一个什么呢 我们直接把这个

37:18.570 --> 37:25.930
可以接收一下 配置接收一下 其实我们要做一件啥事 我们是不是side page啊 对吧 那我们这里面就定一个side page

37:26.010 --> 37:30.090
就是把我们传递过来的这个配置给他做一个处理 是不是就可以了

37:30.410 --> 37:36.330
那这样的话 我们定义好了之后就可以把这个change current page给他传递过去啊

37:36.570 --> 37:39.130
然后这边接收的时候叫change current page

37:39.450 --> 37:43.290
然后我们这一头定义也叫change current page就ok了

37:43.610 --> 37:51.290
之后呢 我们再写一个最后一个是什么呢 叫interface delete mysir的 也就是说你这个

37:51.690 --> 38:00.170
当前我们需要删除的这一个方法 那这个interface delete mysir的这个应该是等于一个什么方法呢

38:00.490 --> 38:05.690
我们得要去找一个什么api 那从这个servers里面 我们可以查看一下

38:06.090 --> 38:14.890
当前stuff里面删除的这个员工的api 叫什么delete stops对不对 那我们直接把这个方法给他进行一个传递

38:16.010 --> 38:24.490
这样呢 他就把所有需要该获取到的数据都基本上已经给传递完成了 那我们就来看一下是否能正确的一个获取

38:24.970 --> 38:29.130
这里面有一个爆错 咱们先来试一下 id 123 qw

38:29.610 --> 38:34.090
当我点击登录之后 那在这个里面network 咱们获取员工

38:34.810 --> 38:40.330
当我到达员工之后 那这个里面应该是啥没有啊啥没有啊 不要紧啊 我们这个里面

38:41.450 --> 38:44.490
有这么多的一个爆错啊 那咱们看一下

38:45.210 --> 38:48.010
class name 然后呢 咱们这个刷新一下

38:48.970 --> 38:56.410
刷新一下在这个界面里面一十零零人代表什么呢 零人代表着我们这个我们看一下

38:56.890 --> 39:02.330
零人是哪一个 123 零人呢应该是这个配置size total对不对

39:02.890 --> 39:08.090
然后这个total为什么是这个零人 我们就得从这个里面来看一下了

39:08.650 --> 39:11.370
因为我们这个stuff total 感觉应该是有的对吧

39:12.810 --> 39:19.530
可以打印一下啊 然后呢stuff total是23 但是他没有对他进行一个获取啊

39:20.010 --> 39:23.050
stuff total 然后这个值是total

39:23.610 --> 39:24.650
我看一下这个值啊

39:25.930 --> 39:32.730
一十零来咱们再刷新一下 后面呢会有请求 请求之后呢这个时候又变成了多少呢

39:33.050 --> 39:39.050
是23了 对吧 一开始初始化的时候他没有发起请求 这个呢应该是没有获取到这个值啊

39:39.450 --> 39:43.210
然后趁着karen的配置和interface买色的咱们都看一下

39:43.610 --> 39:49.530
趁着karen的配置这个呢是一个方法 我们可以看到对不对 之后呢是delete stops

39:50.010 --> 39:55.610
那这些呢 就是我们需要获取到的这些值 那我们有了这些值之后就可以来进行

39:56.010 --> 40:00.090
当前的这个table hideer组件的这样一个编写了啊

40:00.810 --> 40:05.850
回到我们这个组件里面 table hideer组件 我们都需要怎么来对他进行编写呢

40:06.250 --> 40:08.170
首先呢 我们最外层的这个

40:08.650 --> 40:12.650
容器 那我们肯定得给他一个类名啊 对吧 那我们这里面先写一下

40:13.610 --> 40:20.970
把他来定一下class name 等于一个这个叫什么呢 我们直接的用投封吧

40:21.290 --> 40:23.850
比如说 我们这个叫 hideer container

40:25.050 --> 40:27.050
table gun hideer gun

40:27.610 --> 40:28.410
container

40:28.410 --> 40:32.890
ok 定义完了 定义完了之后 那咱们这里面再进行编写啊

40:33.210 --> 40:35.850
里面都有哪些内容 咱们可以看一下这个完成的

40:36.170 --> 40:40.970
里面内容呢 首先它分为左和右 左面呢是创建和皮量删除

40:41.370 --> 40:46.490
右面呢 是我们一个分业组件 那我们依次的来给他实现一下就ok了

40:46.810 --> 40:51.690
左面的实现 那我在这个里面 首先第一个是有一个创建的这样一个

40:52.410 --> 40:54.970
按钮 对不对 那我们就可以使用一个button啊

40:56.490 --> 41:01.290
button使用的时候 如果说你使用按的底下的这个组件 那你就需要给他进行一个什么

41:01.690 --> 41:08.330
引入 对吧 当然了 我这个里面要给他写一个什么呢 我们写一个创建先给他一个中文吧

41:09.290 --> 41:12.250
这里面指定一个中文 中文叫创建

41:14.250 --> 41:18.250
好 定义完成之后 那在这个里面 我们就来引入他啊

41:18.890 --> 41:19.690
input

41:21.290 --> 41:26.330
引入的时候是button for realm 从我们的按的地里面来获取啊

41:26.810 --> 41:30.730
获取之后 那这个button啊 其实他前面有一个什么 有一个小图标 对吧

41:30.970 --> 41:34.730
那这个小图标呢 我们也需要给他进行一个添加

41:35.050 --> 41:38.890
首先我指定一个size size 是什么 小一点啊

41:39.290 --> 41:43.210
然后呢 这个里面是一个空气儿的 对吧 我给他指定一个shape

41:43.770 --> 41:46.730
shape呢 我们就让他等于一个round

41:48.250 --> 41:52.730
空气儿 那空气儿完成之后呢 这里面应该是有一个icon

41:53.130 --> 41:57.530
icon呢 就应该是一个 我们新增的这样一个icon对不对

41:57.770 --> 42:03.930
那新增这样一个icon 因为我这里面没有准备啊 我这里面 所以说咱们去下载一个啊

42:04.330 --> 42:05.050
antd

42:06.570 --> 42:09.770
哎 咱们antd ok

42:10.410 --> 42:16.010
把antd在里面咱们去找一个新增的这样icon 然后呢 给他做一个导入

42:16.570 --> 42:22.570
组件 到组件里面咱们找icon icon图标

42:22.570 --> 42:26.170
然后呢 我在这个里面搜索一个 a d d

42:26.890 --> 42:31.610
看这个里面有这个爱的啊 感觉这个爱的跟我们这个 哎挺像的 是不是

42:31.930 --> 42:36.970
那我们就可以拿这个啊 拿到这个之后 那我们还记得怎么来做吗 首先是什么呢

42:37.770 --> 42:43.370
把这个标签 我们进行一个把结构进行一个闭合 闭合之后 我们找到components

42:43.850 --> 42:49.530
components下面有一个icon map 我们直接的去这个里面找到他

42:50.090 --> 42:53.690
找到他之后 先给他进行一个引入啊 当然引入这个

42:54.250 --> 42:58.810
啊 那我们直接在这个里面吧 在这个里面引入的时候 我直接这写一下

42:59.130 --> 43:06.010
这个叫爱的 把他给进行一个添加 然后呢 他这个离的有点远了

43:06.490 --> 43:12.570
给他进行一个处理 好了 之后呢 给他做一个导入 那这样呢 就有了一个爱的啊

43:13.050 --> 43:15.770
我们这个有了爱的之后 那就可以使用了 对吧

43:16.730 --> 43:20.570
首先把我们的icon map 给他进行一个导入

43:20.970 --> 43:26.490
forum 点点刚 跟他同级下面啊 跟他往上一级下面有一个icon map

43:26.970 --> 43:31.850
给他导入之后 那这个icon map 下面应该就是有一个点爱的

43:32.170 --> 43:36.650
那我们直接拿来进行这个属性的一个使用就ok了

43:36.970 --> 43:40.890
然后咱们来看一下 是否可行啊 icon刷新一下

43:41.450 --> 43:47.930
刷新一下 这里面是不是有一个创建了 对不对 然后创建之后呢 这个时候其实他是应该展示在这里啊

43:48.090 --> 43:52.890
咱不纠结这个 先写完了 写完之后呢 我们一次的给他做一个调整就可以了

43:53.290 --> 44:00.330
之后呢 有一个什么呢 批量删除啊 然后批量删除的话 那我们就继续来填写来

44:01.130 --> 44:04.010
这是第二个 第二个呢 我也放在这个里面嘛

44:05.450 --> 44:11.130
button再复制一套啊 复制一套之后先把这个名字给他做一个调整

44:11.450 --> 44:13.050
这个叫批量删除

44:14.570 --> 44:21.370
批量删除 ok 批量删除写完了之后 那这个时候呢 其实他有一些事件啊 咱也不考虑事件

44:21.770 --> 44:27.050
先把一些啊 简单的样式给做了一个处理 首先第一个呢 我们这个里面啊

44:27.450 --> 44:30.330
他会有一个什么呢 有一个类型 也就是说这里面

44:30.730 --> 44:35.370
他显示的时候是按着这个等着显示的 对吧 那我们给他添加一个什么呢

44:35.930 --> 44:41.850
啊 直接给他写吧 叫等着 ok 添加完成之后 size等于small

44:42.250 --> 44:45.050
然后呢 shape等于run的 让他有一个圆

44:45.610 --> 44:50.650
之后呢 我们再来给他添加一个icon map 那这个删除

44:51.370 --> 44:57.130
咱们还得找个图标啊 删除应该是什么 应该是delete对不对 我们从这里面搜一下

44:58.810 --> 45:01.130
delete ok 就用这个就可以了 复制一下

45:01.770 --> 45:07.690
把它复制完成之后 再回到我们icon map 里面 同样的 我们这里面写一个dl

45:08.250 --> 45:12.730
把它给添加一下 添加一下之后 在这个里面给他做一个倒入

45:13.290 --> 45:17.850
delete 倒入完成之后 那我这个里面就可以使用这个icon map

45:18.330 --> 45:23.210
delete对吧 我们在这个里面回去icon map 点del

45:23.610 --> 45:28.890
好了 那这里面就应该有了一个p量删除啊 咱们来看一下是否可行

45:29.290 --> 45:35.290
到这个里面 没啥问题对不对 然后他们之间有一个间距 间距呢 我们一会再做调整就ok了

45:35.690 --> 45:40.570
之后呢 就是我们右边的部分啊 右边的部分呢 这一部分呢 应该是一个什么

45:41.050 --> 45:46.810
应该是一个组件 那组件我们可以采用什么呢 采用安底在里面的分页组件啊

45:48.010 --> 45:56.330
给同学们搜一下 这里面有一个分页组件pages 打开这个pages 这些呢 是他的一个基本使用啊

45:56.730 --> 46:04.890
比如说有一些其他的这个样式 包括我们1234 还有一个比较简洁的 这个比较简洁的 我觉得挺适合我们 对吧

46:05.210 --> 46:10.570
那我们就可以把它来进行一个使用啊 使用他的时候 你看他这个使用比较方便啊

46:11.050 --> 46:17.210
首先第一个 你要给他做一个引入 那我们给他引入了 引入之后这里面有一个pages

46:17.610 --> 46:22.490
这个是有一个simple 然后default current 当前展示的页数

46:22.890 --> 46:29.450
之后toto一共有多少页啊 然后我们就可以把他拿过来使用 是不是可以了 对吧

46:30.490 --> 46:37.610
ok 拿过来之后 我们放在哪呢 放在我们右边的部分啊 右边的部分呢 我们再订一个第五啊

46:39.210 --> 46:41.050
哎 这里面怎么在这呢

46:41.770 --> 46:49.930
打开 我们直接的放在这个里面pages 然后呢 这个展示toto 52 咱们先来看一下这个有没有

46:50.650 --> 46:55.450
嗯 感觉貌似好像没有 是不是 那我们来查看一下 为什么没进行展示啊

46:56.090 --> 46:59.850
第一我创建button 然后后面没进行展示

47:00.410 --> 47:04.170
没进行展示的原因 我们来看一下pages and default

47:06.490 --> 47:10.970
这个default default下面一层 然后呢 这个是第二个default

47:11.450 --> 47:15.930
第二个default下面有一个pages and small symbol啊 来我刷新一下

47:16.730 --> 47:21.770
好了 刷新一下之后 这里面就显示出来了 显出来之后 其实这个里面还有一个什么

47:22.090 --> 47:24.970
共计多少页 你是不是在这个也给人展示一下啊

47:25.370 --> 47:31.050
这个展示一下呢 其实我们就是放在他的后面 是不是可以了 也就是说那现在咱们展示的

47:31.450 --> 47:36.970
二五 然后后面再写一个span 给他紧跟着 是不是可以了 那我们这里面写一个

47:37.290 --> 47:44.330
span 四半里面应该是有共计多少页 那共计有多少页呢 其实就是展示我们的这个toto

47:45.210 --> 47:52.650
嗯 是不是就可以了 toto然后呢 这个写一个条记录 对吧 共计多少条记录

47:52.890 --> 47:58.170
那第一个toto就使用上了 使用上了之后 那其实呢 在这个里面啊

47:58.570 --> 48:01.290
我们还可以做一些处理 比如说这个pageson

48:01.690 --> 48:07.690
pageson呢 这个default current 当前展示哪一页 那其实我们不应该展示第二页吧

48:07.930 --> 48:10.970
我们如果说你当前是第一页 那你就展示第一页就好了

48:12.250 --> 48:14.890
然后这里面我们再添加一些属性啊 比如说

48:15.930 --> 48:19.130
这个应该是什么呢 我们给他添加一个current

48:19.690 --> 48:26.170
current呢 我们也给他一个什么page啊 也就是说默认展示的和当前展示的这个页数 current

48:26.570 --> 48:29.370
之后呢 我们再给他一个page set

48:29.770 --> 48:32.490
每一页的长度 那如果说你把这些传递进去之后

48:32.810 --> 48:35.130
他就能给我们计算出来一个什么

48:35.850 --> 48:38.890
每一页的一个显示了 然后呢 我们直接来看啊

48:39.370 --> 48:39.850
创建

48:41.130 --> 48:47.130
第一页 第二页 第三页 第四页 第五页 应该是可以了 对吧 但是这个里面 我们还得要写一个什么

48:47.610 --> 48:54.490
change current page 对不对 那我们这个change current page 是直接来写吗 不是啊 page 里面有事件

48:54.890 --> 48:56.890
我们可以来看一下 在这个里面

48:58.330 --> 49:02.730
找到他的api api这个里面呢 就会有一个事件

49:03.050 --> 49:07.610
这个事件是on change 页码或page set改变的时候的回调

49:08.010 --> 49:09.930
参数是改变后的一个页码

49:10.330 --> 49:15.130
那啊 以及每一页的一个调数啊 那每一页有多少条合了一个页码

49:15.370 --> 49:17.610
他都会给我们做一个展示的啊

49:18.090 --> 49:22.810
然后我们这里面啊 在做处理之前 我们先把这个偷偷给他添加一下

49:23.370 --> 49:26.250
偷偷添加完了之后 那咱们继续来写啊

49:26.570 --> 49:31.130
这个就应该是一个什么呢 我们直接的把这个事件叫on change 事件

49:31.770 --> 49:34.570
这样比较多啊 我们给他做一个分割

49:35.130 --> 49:41.290
default page 然后开紧了 对吧 current page page set

49:41.850 --> 49:48.730
之后呢 就是我们的一个什么 最后的一个啊 最后一个应该叫on change 这里面我来定一下

49:49.450 --> 49:55.690
on change on change呢 就是等于我们传递过来的这样一个事件

49:55.690 --> 50:01.290
change current page 但是呢 在这个里面啊 我们这个change current page 时候咱们说了嘛

50:01.290 --> 50:04.650
他有一个page 对吧 那我们得知道当前是第几页 对吧

50:04.810 --> 50:08.410
所以说在这个里面把change current page 给做一个调用啊

50:08.730 --> 50:11.450
调完完成之后 其实我们现在就能看一下效果啊

50:11.850 --> 50:14.810
回到我们page下面找到staff

50:15.130 --> 50:19.610
staff里面有一个index.js 如果说你现在拿到这个page了

50:19.610 --> 50:22.970
那我们这个是不是可以改变他的值 改变他的这个值

50:22.970 --> 50:28.570
因为我们传递给他 那整个这个过程呢 他又跟应该进行一个重新的执行 对不对

50:29.930 --> 50:33.930
咱们来试一下 是否可行 我们回到这个里面来看一下

50:34.250 --> 50:38.890
比如说点击第二页 第三页on change 感觉mouse没啥用 对不对

50:39.130 --> 50:41.610
那我们来打印一下这个里面是不是有值

50:42.570 --> 50:46.810
打印一个当前的这个page 然后咱们来看一下

50:47.370 --> 50:54.010
这个里面我们console一下 console一下之后点击第二页 那我这个里面显示一个第二

50:54.650 --> 51:00.090
ok 感觉上没什么用 没什么用 我们回来再看一下 这里面哪里有写错

51:00.650 --> 51:03.610
on change change current page 那这个时候呢

51:03.850 --> 51:06.570
你需要执行的时候 是不是把参数给他传递过去

51:06.810 --> 51:08.890
也就是说刚才其实是没有传递参数啊

51:09.210 --> 51:14.330
这个呢 我们来注意一下就ok了 那点击第二页 第三页对不对

51:14.410 --> 51:17.690
那到第三页他有一个dateable的这样一个状态啊

51:18.090 --> 51:24.170
这个呢 就是我们一个基本的处理 那接下来呢 我们就把这个样式给实践一下就ok了

51:24.650 --> 51:27.450
那样式处理的时候 我们知道对这个

51:28.090 --> 51:33.210
他里面的内部的一些CFS 那其他的模块 比如说我们

51:33.610 --> 51:37.050
后期制作到的直级以及技校里面可能都会使用到

51:37.530 --> 51:42.650
所以说这个呢 我们统一的在layout里面来进行一个引入使用

51:43.130 --> 51:47.770
那在layout下面 因为我们知道背的layout是渲染我们这个主界面的

51:48.090 --> 51:54.330
所以说呢 在这个里面 我们可以使用一个CFS文件 统一的来对这个样式做一个整理

51:55.370 --> 52:00.890
那这个怎么办呢 我们可以回忆到我们的背的layout下面啊 我们引入一个文件

52:01.210 --> 52:04.250
那这时候呢 我先在comment下面创建一个文件

52:04.490 --> 52:09.210
CFS 那这里面我写一下这个叫什么呢 慢点lice

52:10.490 --> 52:14.410
直接引入到背的layout里面就ok啊 那这个时候我就引入一下

52:14.650 --> 52:22.090
input 我们已经定义了这种相对路径 那我们直接的就可以来进行一个别名应设的使用啊

52:22.570 --> 52:29.050
comment文件加下面的CFS 那这个里面呢 有一个慢点lice文件

52:29.530 --> 52:36.490
把它给进行一个引入 引入前提是保证它一个正确引入啊 我们刷新一下 没有什么问题对不对

52:36.810 --> 52:40.170
首先我们想给他定位上去啊 定位上去之后 那他的附荣企业

52:40.570 --> 52:47.690
现在应该要做一件什么事 我们直接要给他一个定位对吧 那我们这里面对悶container先做一个简单的处理

52:48.090 --> 52:56.330
点悶container position 给他一个ratif 然后他就相对于我们这个悶container来进行定位就ok了

52:56.650 --> 53:02.250
之后呢 回到我们这个components header下面 我们找到这个components

53:02.810 --> 53:07.690
打开我们的table header 那这里面呢 我们定一个index.lice文件

53:08.970 --> 53:15.690
同样呢 给他做一个引入 input这个里面是点杠 index.lice

53:16.410 --> 53:22.010
好的 导入之后啊 先保证他不抱错 不抱错之后呢 我们这里面就可以进行编写了

53:22.330 --> 53:28.410
首先对这个table header container来做一个处理啊 那我们直接的到这个里面

53:28.810 --> 53:34.730
点table header container 然后前提是什么呢 你得保证刚才添加的这个啊 是已经进入了

53:35.050 --> 53:39.690
当他进入之后 那我这里面首先给他一个定位 那我们就给他一个position

53:40.090 --> 53:43.690
给他做一个什么定位呢 给他一个face的定位啊 position face的

53:44.010 --> 53:46.810
然后呢 face定位之后我们left

53:47.690 --> 53:51.450
或者是absolute定位都可以啊 我们给他一个left 270px

53:51.770 --> 53:56.650
为啥给他指定270px 那其实我们知道在这个table header里面

53:56.970 --> 54:01.690
你想一下 他这个左面是不是有值啊 对不对 那我们直接的给他做一个

54:02.090 --> 54:05.770
偏移啊table header 这个里面好像没有生效啊

54:06.170 --> 54:10.170
我们来看一下没生效的原因 回到我们index.js

54:10.650 --> 54:12.250
index.lice

54:12.650 --> 54:18.330
然后点table header container 可以啊 我们刷新一下界面吧

54:19.930 --> 54:25.130
可以了 没问题 这个life200其实就是把左面的位置啊 给他做了一个保留对吧

54:25.530 --> 54:29.610
保留出来之后 那我们直接的让他去上面也有点距离

54:30.010 --> 54:32.170
top24px

54:32.490 --> 54:37.210
那相对于界面这个定位 这个时候我们top24是不是就已经上来了

54:37.210 --> 54:38.890
然后当然这个值是计算出来的

54:39.370 --> 54:45.370
之后呢 我们再来给他做一个调整啊 首先给他一个宽度吧 那这个宽度应该是多少呢

54:45.610 --> 54:51.530
是不是从这个位置到这个位置的啊 那从这个位置左面到右面这个管理员这个边上

54:51.770 --> 54:54.970
我们计算出来的一个宽度应该是使用这种

54:55.370 --> 55:00.330
clc的形式啊来做一个计算宽度 我们就写一个cycle

55:00.650 --> 55:07.290
cycle呢 我们用100%减去一个多少呢 470px这个是我提前做的一个处理啊

55:07.850 --> 55:11.690
那现在这样他就在这个位置展示了对不对 宽度4007

55:11.690 --> 55:17.450
然后给右面留一点位置啊 之后那我们再来进行一个处理是什么呢

55:17.450 --> 55:24.700
给他一个dateplay flex布局对吧 给他添加一个dateplay flex

55:26.700 --> 55:32.300
dateplay flex之后扎C的范content 我们给他一个space beton

55:32.540 --> 55:38.540
align 特末让他是一个center center之后 我们再来看一下这个效果啊

55:39.020 --> 55:42.300
效果之后过来之后呢现在是不是就是这个样子

55:42.300 --> 55:46.380
然后呢 我们对他的右边也就是说这个分页这一块

55:46.380 --> 55:51.500
因为分页这一块他是有两部分内容对吧 那我们对他再来做一个处理啊

55:51.740 --> 55:54.940
首先回到我们的这个table header.js插里面

55:55.180 --> 56:01.580
我们对分页做处理其实就是对我们这个对吧 class name 我先给他一个叫pageson

56:03.260 --> 56:07.260
pageson.container 然后呢给他进行一个添加吧

56:07.580 --> 56:10.860
样式在这里面写一下点pageson.container

56:11.420 --> 56:17.180
同样的对他也是做一个flex布局 那我们直接这里面dateplay flex

56:17.740 --> 56:22.300
之后align items给他一个center 那这样就能在一行展示了对不对

56:22.780 --> 56:26.780
好的 感觉上没啥问题对吧 这是我们第一步对样式的处理

56:26.780 --> 56:29.660
但是这个对样式处理呢 首先这里面我们还得注意一下

56:29.980 --> 56:32.460
这个button呢 我们要简单的给他一个

56:33.180 --> 56:36.540
margin write 指啊 这里面就是细微的一些调整

56:36.860 --> 56:39.820
回到我们table header index.js里面

56:40.220 --> 56:43.420
哪一个是不是我们第一个给他一个margin write对不对

56:43.660 --> 56:50.060
我们这里面写一个class name class name 等于一个mwrite-10对吧

56:50.140 --> 56:52.380
我们给他一个margin write10就ok了

56:52.860 --> 56:56.540
在这个里面我们就定一下点margin write10

56:57.180 --> 57:00.460
margin-write是10px

57:01.420 --> 57:05.100
好 定义完成之后 让他们俩之间有一点坚距就ok了

57:05.100 --> 57:07.420
之后呢 我们再处理一下 就是说这个

57:07.420 --> 57:10.860
当我收缩之后 那你收缩之后 其实我们这个life的值

57:10.860 --> 57:14.780
是不是应该是做一些偏移 那偏移的程度是多少呢

57:14.780 --> 57:17.740
我们这个啊 如果说他收缩了 我们这个life的值

57:17.740 --> 57:21.740
你想一下 我们是不是可以给他进行细微的调整

57:21.740 --> 57:24.940
比如说我们对他life的处理的时候

57:24.940 --> 57:28.620
比如说142px 那你看我这样是不是就ok了对吧

57:28.780 --> 57:33.500
142px之后 那你这个整体的这个宽度计算的时候

57:33.500 --> 57:35.900
我们在这个里面对他的这个宽度处理

57:35.900 --> 57:39.500
那你是不是要少一些 也就是说这个时候

57:39.500 --> 57:43.340
因为我们这个已经给他做了一个缩小

57:43.340 --> 57:45.980
缩小之后 那这个时候我们就给他一个多少

57:45.980 --> 57:48.460
给他一个270 是不是感觉可以了

57:48.460 --> 57:52.300
那如果说他再回来呢 回来 我再把这个值给他进行一个调整

57:52.300 --> 57:54.940
那既然选择了两个属性 那这里面是不是

57:54.940 --> 57:58.460
我们要给他独立的进行一个样式的添加

57:58.540 --> 58:02.940
也就是说在这个里面 其实他有了一个基础的样式之外

58:02.940 --> 58:05.820
我们还有一个特殊的样式 是哪一个呢

58:05.820 --> 58:08.380
我们回到这个table header 下面

58:08.380 --> 58:11.420
也就是说对这个模块 对吧

58:11.420 --> 58:14.780
也就是说这个主容器 那我们要给他添加一个值

58:14.780 --> 58:17.900
添加一个值的话 那这个时候我们动态属性

58:17.900 --> 58:19.660
和静态属性一起来添加

58:19.660 --> 58:24.060
这个时候就需要使用我们提前引入的class names

58:24.060 --> 58:27.580
因为class names是比较方便的来做这件事的

58:27.660 --> 58:30.540
那我怎么办呢 把这个class name给做一个引入

58:31.820 --> 58:35.260
Import class names给他写一下

58:36.380 --> 58:41.260
class names 服输用从哪来呢 就从我们的class names的这个

58:41.820 --> 58:44.780
组件里面给他做一个导入

58:44.780 --> 58:47.420
好的 导入之后class names这个模块

58:47.420 --> 58:49.660
因为这个模块我们提前已经下载好了

58:49.660 --> 58:51.340
那我们直接就可以来使用了

58:51.340 --> 58:53.500
那这个class name我们是不是就不用了

58:53.500 --> 58:56.140
我们直接的从今来进行一个编写

58:56.700 --> 58:59.180
首先他是一个对象的形式

58:59.180 --> 59:00.540
在对象的形式里面

59:00.540 --> 59:03.740
我们对他的样式进行一个添加

59:03.740 --> 59:06.940
class 首先把这个要写一下

59:07.500 --> 59:11.020
class names 对吧 指定class names

59:11.020 --> 59:13.660
那这个是变量和我们的这个

59:13.660 --> 59:16.060
字幕创来进行一个混添

59:16.060 --> 59:20.300
那这里面第一个table-heighter-container

59:22.300 --> 59:24.140
把这个先进行一个添加

59:24.220 --> 59:25.340
添加好变量之后

59:25.340 --> 59:28.140
那剩下的是 添加好这个字幕创之后

59:28.140 --> 59:30.060
剩下的就是我们变量了

59:30.060 --> 59:33.100
那这个变量我们给他一个small-left

59:33.100 --> 59:34.620
比如说我们这个叫什么

59:34.620 --> 59:37.980
big left big style

59:37.980 --> 59:39.260
比较大的样式 对吧

59:41.180 --> 59:42.380
好 定义这么一个类啊

59:42.380 --> 59:43.500
这个叫big style

59:43.500 --> 59:44.620
那这里面得有一个状态

59:44.620 --> 59:46.300
比如说我这里面给他一个处

59:46.300 --> 59:48.540
那如果说给他为处的话

59:48.540 --> 59:51.580
那这个时候他是不是一直就会添加一个big style

59:51.580 --> 59:52.860
我们来看一下

59:52.940 --> 59:53.980
到这个里面

59:53.980 --> 59:56.700
看到table-heighter-container下面

59:56.700 --> 59:58.780
这个里面是不是添加了一个big style

59:58.780 --> 01:00:00.540
什么时候添加了一个big style

01:00:00.540 --> 01:00:01.580
那这个big style呢

01:00:01.580 --> 01:00:02.620
我们要有一个状态

01:00:02.620 --> 01:00:04.860
也就是说当你缩回去的时候

01:00:04.860 --> 01:00:07.020
我们直接的这个是变小的

01:00:07.020 --> 01:00:09.100
那什么时候能知道他缩回去呢

01:00:09.100 --> 01:00:12.220
这个时候就需要找到我们的common-heighter

01:00:12.220 --> 01:00:13.340
common-heighter里面

01:00:13.340 --> 01:00:15.900
当时如果说我们做处理的时候

01:00:15.900 --> 01:00:18.460
是不是我们对这里面有一个什么呢

01:00:18.460 --> 01:00:20.540
有一个clobs值对不对

01:00:20.620 --> 01:00:23.580
那这个clobs是不是有着一个chance-clobs

01:00:23.580 --> 01:00:25.260
chance-clobs处理又在哪

01:00:25.260 --> 01:00:27.500
是不是在我们的layout下面

01:00:27.500 --> 01:00:28.860
所以说我们找的话

01:00:28.860 --> 01:00:31.980
就找到我们背的layout.js差里面

01:00:33.180 --> 01:00:34.700
当我们在这个里面

01:00:34.700 --> 01:00:36.700
set-clobs非clobs的时候

01:00:36.700 --> 01:00:40.780
其实我们这里面可以对一个状态来做处理了

01:00:40.780 --> 01:00:43.980
那我们对这个右面的状态处理的时候

01:00:43.980 --> 01:00:46.300
我们同时可以做一个什么呢

01:00:46.300 --> 01:00:47.580
收集一个状态值

01:00:47.580 --> 01:00:48.860
那这个状态值呢

01:00:48.860 --> 01:00:51.500
比如说我们可以定义在model下面

01:00:51.500 --> 01:00:53.660
model下面我们创建一个值

01:00:53.660 --> 01:00:55.740
state这里面什么都没有的对不对

01:00:55.740 --> 01:00:57.260
我们begociderbar

01:00:59.580 --> 01:01:00.380
这里面写一下

01:01:00.380 --> 01:01:02.220
begociderbar我们出手话的时候

01:01:02.220 --> 01:01:03.740
给他一个什么false

01:01:04.300 --> 01:01:06.220
那这个时候给他一个false

01:01:06.220 --> 01:01:07.420
我们干嘛用呢

01:01:07.420 --> 01:01:08.220
这个里面

01:01:08.220 --> 01:01:11.420
我们就可以对这个heighter里面

01:01:11.420 --> 01:01:13.740
来把它给做一个引用

01:01:13.740 --> 01:01:17.580
然后呢通过它来进行一个什么的判断

01:01:17.660 --> 01:01:19.980
我们是否要添加这个big style

01:01:19.980 --> 01:01:22.620
那这个我们首先要对它使用的话

01:01:22.620 --> 01:01:23.420
第一步

01:01:23.420 --> 01:01:25.580
我们要给它引入进来对不对

01:01:25.580 --> 01:01:28.700
那我们这里面cancel的一个begociderbar

01:01:28.700 --> 01:01:32.300
等于我们的youtse selector state点common

01:01:33.660 --> 01:01:34.860
好的那现在呢

01:01:34.860 --> 01:01:37.180
我们这里面因为使用到youtse selector

01:01:37.180 --> 01:01:39.580
这里面给它做一个引入啊

01:01:39.580 --> 01:01:43.580
input这里面是youtse selector frome

01:01:43.580 --> 01:01:46.140
从我们的wumi里面给它拿出来

01:01:46.140 --> 01:01:47.020
拿出来之后

01:01:47.020 --> 01:01:49.660
那这个begociderbar就作为我们的一个条件

01:01:49.660 --> 01:01:50.700
是不是就可以了

01:01:50.700 --> 01:01:51.660
条件可以了之后

01:01:51.660 --> 01:01:53.180
那现在它肯定是没有了

01:01:53.180 --> 01:01:53.740
对吧

01:01:53.740 --> 01:01:55.180
我们看一下悶counter哪

01:01:55.180 --> 01:01:56.780
因为它出手话是false

01:01:56.780 --> 01:01:58.140
出手话是false

01:01:58.140 --> 01:02:00.380
什么时候让它为初呢

01:02:00.380 --> 01:02:01.740
这个时候就得要

01:02:01.740 --> 01:02:04.300
根据我们当前点击它之后

01:02:04.300 --> 01:02:05.660
设置这个值

01:02:05.660 --> 01:02:06.060
然后呢

01:02:06.060 --> 01:02:08.060
我们就给它进行一个改变

01:02:08.060 --> 01:02:09.100
是不是可以了

01:02:09.100 --> 01:02:09.740
那所以说

01:02:09.740 --> 01:02:13.180
我们这个时候要回到layout下面

01:02:13.180 --> 01:02:14.460
回到layout下面

01:02:14.540 --> 01:02:15.260
这句话呢

01:02:15.260 --> 01:02:17.020
我们要使用一个什么呢

01:02:17.020 --> 01:02:18.940
函数来进行给它一个包裹

01:02:18.940 --> 01:02:19.980
在这个时候

01:02:19.980 --> 01:02:22.300
我们能拿到这个clobs值

01:02:22.300 --> 01:02:22.860
对不对

01:02:22.860 --> 01:02:24.780
拿到这个clobs值之后

01:02:24.780 --> 01:02:26.860
那其实我们就是把这clobs值

01:02:26.860 --> 01:02:29.180
给它复制为这个sectorbar的值

01:02:29.180 --> 01:02:29.740
就可以了

01:02:29.740 --> 01:02:30.300
是不是

01:02:30.300 --> 01:02:31.660
但是现在如果说

01:02:31.660 --> 01:02:32.780
我们要做处理的话

01:02:32.780 --> 01:02:34.940
你想clobs值保存在哪呢

01:02:34.940 --> 01:02:37.180
一直保存在我们的

01:02:37.180 --> 01:02:39.180
当前的layout的组件里面

01:02:39.180 --> 01:02:39.660
对不对

01:02:39.660 --> 01:02:41.980
这里面有一个clobs和setclobs

01:02:41.980 --> 01:02:42.700
那这个时候

01:02:43.580 --> 01:02:44.620
我们其实就是

01:02:44.620 --> 01:02:47.100
可以把这个clobs给提走了

01:02:47.100 --> 01:02:47.900
提走到哪呢

01:02:47.900 --> 01:02:49.420
提走到我们calmen里面

01:02:49.420 --> 01:02:49.900
那所以说

01:02:49.900 --> 01:02:51.500
我们刚才定义逼个setclobs

01:02:51.500 --> 01:02:52.460
是不是没什么意义

01:02:52.460 --> 01:02:55.020
我们直接加一个这个clobs

01:02:55.020 --> 01:02:56.380
clobs获取的时候

01:02:56.380 --> 01:03:00.300
那这个里面就从youtesector里面获取

01:03:00.300 --> 01:03:00.780
然后呢

01:03:00.780 --> 01:03:02.300
把它给做一个调整

01:03:02.300 --> 01:03:07.180
set data就是从我们set data.calmen

01:03:09.100 --> 01:03:09.420
好

01:03:09.420 --> 01:03:10.860
从这里面获取之后

01:03:10.940 --> 01:03:12.860
那这个setclobs也没有了

01:03:12.860 --> 01:03:14.460
给它改变一下

01:03:14.460 --> 01:03:14.860
之后呢

01:03:14.860 --> 01:03:17.020
该传递值还是尽量传递值

01:03:17.020 --> 01:03:18.220
这个都无所谓的事

01:03:18.220 --> 01:03:20.220
然后我们这个里面

01:03:20.220 --> 01:03:21.740
set state的点calmen

01:03:21.740 --> 01:03:22.780
首先第一步呢

01:03:22.780 --> 01:03:24.540
你肯定是能获取到它

01:03:24.540 --> 01:03:25.020
对吧

01:03:25.020 --> 01:03:27.900
保证我们每一个界面能获取到

01:03:27.900 --> 01:03:29.900
这里面有一个clobs函数

01:03:29.900 --> 01:03:31.740
我们还是给它打开

01:03:31.740 --> 01:03:32.300
打开之后

01:03:32.300 --> 01:03:33.260
但是这个没有了

01:03:33.260 --> 01:03:34.460
我们先不做

01:03:34.460 --> 01:03:35.340
然后咱们初始化

01:03:35.340 --> 01:03:36.140
看一下状态

01:03:36.780 --> 01:03:37.500
到这个里面

01:03:37.500 --> 01:03:39.820
我们刷新一下clobs

01:03:39.900 --> 01:03:41.740
来看一下是否有了

01:03:41.740 --> 01:03:43.980
回到我们的这个state里面

01:03:43.980 --> 01:03:44.380
calmen

01:03:44.380 --> 01:03:45.900
这里面有一个clobs false

01:03:45.900 --> 01:03:46.460
对不对

01:03:46.460 --> 01:03:47.500
当我点击的时候

01:03:47.500 --> 01:03:48.220
这个时候呢

01:03:48.220 --> 01:03:51.020
就是要进行对它的一个改变了

01:03:51.020 --> 01:03:51.820
那这个时候

01:03:51.820 --> 01:03:53.500
我们changeclobs

01:03:53.500 --> 01:03:55.180
这里面其实我们应该是

01:03:55.180 --> 01:03:56.220
dace patch了

01:03:56.220 --> 01:03:56.700
对吧

01:03:56.700 --> 01:03:57.980
那dace patch的时候

01:03:57.980 --> 01:03:59.020
咱们都知道这里面

01:03:59.020 --> 01:04:00.380
是不是得指定type

01:04:00.380 --> 01:04:02.060
你要做一个什么事

01:04:02.060 --> 01:04:03.020
那这个type呢

01:04:03.020 --> 01:04:05.260
我们其实是要调用calmen

01:04:05.260 --> 01:04:07.740
下面一个changeclobs的

01:04:07.740 --> 01:04:08.780
这么一个方法

01:04:08.860 --> 01:04:09.740
然后呢

01:04:09.740 --> 01:04:11.500
把我们这个clobs

01:04:11.500 --> 01:04:12.860
给它传递回去

01:04:12.860 --> 01:04:14.620
也就是说取一个fakeclobs

01:04:14.620 --> 01:04:16.620
那我们这里面再指定一个什么呢

01:04:16.620 --> 01:04:18.300
payload

01:04:18.300 --> 01:04:20.700
这个是我们的这个clobs

01:04:22.060 --> 01:04:23.100
然后它的值呢

01:04:23.100 --> 01:04:24.860
就是我们当前定义的这个

01:04:24.860 --> 01:04:26.140
取反的一个操作

01:04:26.140 --> 01:04:27.740
那这时候我们把dace patch

01:04:27.740 --> 01:04:29.180
给做一个维护

01:04:29.180 --> 01:04:30.700
怎么来做dace patch维护

01:04:30.700 --> 01:04:32.380
其实这个也非常简单啊

01:04:32.380 --> 01:04:34.140
我们直接的把这个dace patch

01:04:34.140 --> 01:04:35.660
先给它获取一下

01:04:35.660 --> 01:04:38.140
cons的dace patch

01:04:38.140 --> 01:04:41.660
等于使用youse patch

01:04:41.660 --> 01:04:42.940
给它做一个调用

01:04:42.940 --> 01:04:43.500
同样的

01:04:43.500 --> 01:04:45.100
我们把youse patch

01:04:45.100 --> 01:04:46.460
从无密当中

01:04:46.460 --> 01:04:48.620
给它进行一个获取

01:04:48.620 --> 01:04:50.140
youse patch

01:04:50.140 --> 01:04:51.420
当你获取完它之后

01:04:51.420 --> 01:04:52.060
那这个时候

01:04:52.060 --> 01:04:53.500
我们是不是就可以进行一个什么

01:04:54.460 --> 01:04:56.140
dace patch的调用

01:04:56.140 --> 01:04:56.860
对吧

01:04:56.860 --> 01:04:58.300
dace patch调用的时候

01:04:58.300 --> 01:04:59.500
那这时候我们

01:04:59.500 --> 01:05:01.740
其实在这个calmenmodel下面

01:05:01.740 --> 01:05:03.660
我们是没有这么一个changeclobs

01:05:03.660 --> 01:05:04.380
方法的

01:05:04.380 --> 01:05:04.940
所以说呢

01:05:04.940 --> 01:05:05.900
我们这个提前

01:05:05.900 --> 01:05:07.820
要进行一个定义啊

01:05:07.900 --> 01:05:09.820
在我们的efficals

01:05:09.820 --> 01:05:10.460
然后呢

01:05:10.460 --> 01:05:12.380
我们再写一个reducers

01:05:13.660 --> 01:05:15.180
reducers里面

01:05:15.180 --> 01:05:18.780
我们就指定一个changeclobs的

01:05:18.780 --> 01:05:20.140
这样一个方法

01:05:20.140 --> 01:05:21.260
那这个方法呢

01:05:21.260 --> 01:05:24.220
就专门的来对我们这个内容啊

01:05:24.220 --> 01:05:25.580
做了一个处理

01:05:25.580 --> 01:05:26.300
那这个时候

01:05:26.300 --> 01:05:27.420
其实我们来写的时候

01:05:27.420 --> 01:05:28.620
和每一个都一样

01:05:28.620 --> 01:05:30.700
我们就把他这个state

01:05:30.700 --> 01:05:32.620
给进行一个添加

01:05:32.620 --> 01:05:33.100
然后呢

01:05:33.100 --> 01:05:35.020
这里面是我们的这个payload

01:05:35.660 --> 01:05:36.380
payload

01:05:38.140 --> 01:05:39.100
好定义完成之后

01:05:39.100 --> 01:05:39.820
那其实呢

01:05:39.820 --> 01:05:41.820
这个我们没有标写了

01:05:41.820 --> 01:05:43.260
我们直接的在这个里面

01:05:43.260 --> 01:05:44.220
给他做一个什么

01:05:44.220 --> 01:05:45.980
剑头寒书的到处就可以

01:05:45.980 --> 01:05:47.020
然后在这个里面

01:05:48.780 --> 01:05:50.380
state payload

01:05:50.380 --> 01:05:51.660
那直接的return值

01:05:51.660 --> 01:05:52.540
应该是一个什么

01:05:52.540 --> 01:05:54.140
点点点state payload

01:05:54.140 --> 01:05:56.140
这样是不是把changeclobs

01:05:56.140 --> 01:05:57.500
由原来的

01:05:57.500 --> 01:05:59.820
我们在bedlayout里面

01:05:59.820 --> 01:06:00.860
进行一个维护

01:06:00.860 --> 01:06:01.500
那现在呢

01:06:01.500 --> 01:06:02.780
我们给他做了一个提取

01:06:02.780 --> 01:06:03.900
提取到哪了呢

01:06:03.900 --> 01:06:07.020
我们提取到这个calmen的状态里面

01:06:07.020 --> 01:06:09.580
来进行一个保管

01:06:09.580 --> 01:06:11.340
那这个在状态里面进行保管

01:06:11.340 --> 01:06:13.180
这样就保证了一个什么呢

01:06:13.180 --> 01:06:15.660
我们不光是在这个bedlayout里面

01:06:15.660 --> 01:06:16.620
来进行使用

01:06:16.620 --> 01:06:18.540
那其实我们在每一个组件里面

01:06:18.540 --> 01:06:19.980
是不是都可以获取到他

01:06:19.980 --> 01:06:20.620
同样的

01:06:20.620 --> 01:06:22.860
我们最主要的其实是想在哪获取

01:06:22.860 --> 01:06:24.940
是不是在这个table header里面

01:06:24.940 --> 01:06:25.660
也就是说

01:06:25.660 --> 01:06:27.740
我们在这个table header里面

01:06:27.740 --> 01:06:28.540
最主要的

01:06:28.540 --> 01:06:30.140
想来对他进行一个使用

01:06:30.140 --> 01:06:30.620
对吧

01:06:30.620 --> 01:06:31.420
我们先看一下

01:06:33.020 --> 01:06:33.660
这个时候

01:06:33.660 --> 01:06:35.660
咱们先保证他的一个功能

01:06:35.740 --> 01:06:37.180
然后点击

01:06:37.180 --> 01:06:38.860
你会发现可以没问题

01:06:38.860 --> 01:06:39.420
对不对

01:06:39.420 --> 01:06:40.860
那可以没问题的话

01:06:40.860 --> 01:06:41.820
那我们这个时候

01:06:41.820 --> 01:06:44.060
就回到我们这个table header

01:06:44.060 --> 01:06:46.380
刚才是用这个big status

01:06:46.380 --> 01:06:47.340
big set up

01:06:47.340 --> 01:06:49.020
他现在已经没有了

01:06:49.020 --> 01:06:50.300
现在变成了什么

01:06:50.300 --> 01:06:52.940
就是变成了我们这个close

01:06:52.940 --> 01:06:54.540
那我直接的在这个里面

01:06:54.540 --> 01:06:58.860
就把close这个状态给他一个复职

01:06:58.860 --> 01:07:00.380
那这个时候复职之后

01:07:00.380 --> 01:07:01.740
咱们先来看他有没有

01:07:02.700 --> 01:07:04.940
回到我们这个里面

01:07:04.940 --> 01:07:06.700
检查元素 element

01:07:06.700 --> 01:07:08.780
然后咱们主要看这个big style

01:07:08.780 --> 01:07:11.580
当我去大屏幕的时候

01:07:11.580 --> 01:07:13.180
然后比如说我们这个

01:07:13.180 --> 01:07:14.780
侧边轮身错出来之后

01:07:14.780 --> 01:07:17.820
那这个big style就没有了

01:07:17.820 --> 01:07:18.220
对不对

01:07:18.220 --> 01:07:18.780
然后呢

01:07:18.780 --> 01:07:19.820
如果说收缩之后

01:07:19.820 --> 01:07:21.100
就进行一个添加

01:07:21.100 --> 01:07:22.540
那这样我们是不是就可以

01:07:22.540 --> 01:07:24.140
对他的一个样式处理了

01:07:24.140 --> 01:07:25.420
样式处理的时候

01:07:25.420 --> 01:07:25.980
其实呢

01:07:25.980 --> 01:07:28.700
就是对这个big style的一个宽度

01:07:28.700 --> 01:07:30.620
进行一个调整就可以了

01:07:31.340 --> 01:07:32.780
回到我们的这个

01:07:32.780 --> 01:07:34.460
css文件里面

01:07:34.460 --> 01:07:36.780
这个是index.css

01:07:36.780 --> 01:07:37.260
之后呢

01:07:37.260 --> 01:07:40.620
我们在这个PositionContainer下面

01:07:40.620 --> 01:07:42.060
我们就来给他进行

01:07:42.060 --> 01:07:43.740
一个定义就可以了

01:07:43.740 --> 01:07:44.380
也就是说

01:07:44.380 --> 01:07:44.860
其实呢

01:07:44.860 --> 01:07:46.060
就是在这个里面

01:07:46.060 --> 01:07:49.020
给他添加一个类名就可以了

01:07:49.020 --> 01:07:49.980
怎么来添加

01:07:49.980 --> 01:07:52.060
addPositionContainer

01:07:52.060 --> 01:07:54.540
我们直接的在这个里面

01:07:54.540 --> 01:07:55.820
应该给他添加一下

01:07:55.820 --> 01:07:58.300
add.big style

01:07:58.300 --> 01:07:59.420
如果说是

01:07:59.420 --> 01:08:01.420
同时具备这两个类名的话

01:08:01.420 --> 01:08:02.780
那我们调整一下

01:08:02.780 --> 01:08:04.140
他的这个life的值

01:08:04.140 --> 01:08:06.780
首先给他调整为122px

01:08:08.140 --> 01:08:08.700
也就是说

01:08:08.700 --> 01:08:10.220
只有一个小的侧面辆

01:08:10.220 --> 01:08:12.140
加上我们的这个侧面辆二拧

01:08:12.140 --> 01:08:13.260
这么一个宽度

01:08:13.260 --> 01:08:13.740
之后呢

01:08:13.740 --> 01:08:15.020
我们再调整一下

01:08:15.020 --> 01:08:16.060
他的wise

01:08:16.060 --> 01:08:18.380
cllc100%减去多少呢

01:08:18.380 --> 01:08:21.020
刚才算完是270px

01:08:21.020 --> 01:08:21.420
OK

01:08:21.420 --> 01:08:22.380
给他做一个添加

01:08:22.380 --> 01:08:24.060
咱们看他是否可以啊

01:08:24.060 --> 01:08:25.580
然后这里面回去

01:08:25.580 --> 01:08:26.300
回去之后

01:08:26.300 --> 01:08:27.420
是不是感觉也可以

01:08:27.420 --> 01:08:28.300
但是这个

01:08:28.300 --> 01:08:29.900
底有一个动画效果啊

01:08:29.900 --> 01:08:31.820
我们这里面就给他设置一下嘛

01:08:31.820 --> 01:08:33.820
比如说这个是transition

01:08:33.820 --> 01:08:35.980
transition0.2s

01:08:35.980 --> 01:08:36.460
OK

01:08:36.460 --> 01:08:37.660
让他两秒钟之后

01:08:37.660 --> 01:08:38.460
做这个事情啊

01:08:40.940 --> 01:08:42.540
动画的一个过度

01:08:42.540 --> 01:08:43.500
两秒钟之后

01:08:43.500 --> 01:08:45.740
他来进行这个动画的处理

01:08:45.740 --> 01:08:47.020
感觉还可以对吧

01:08:47.020 --> 01:08:48.060
如果说你觉得这个

01:08:48.060 --> 01:08:48.860
有点破安的话

01:08:48.860 --> 01:08:49.420
怎么办

01:08:49.420 --> 01:08:51.180
我们直接的再把这个wise

01:08:51.180 --> 01:08:53.100
给做一个调整

01:08:53.100 --> 01:08:55.820
200期减去我们400期

01:08:55.820 --> 01:08:56.620
400期有点大

01:08:56.620 --> 01:08:57.820
我们直接减300期

01:08:57.820 --> 01:08:59.020
看一下行不行啊

01:08:59.020 --> 01:08:59.740
到这个里面

01:08:59.740 --> 01:09:00.540
OK

01:09:00.540 --> 01:09:01.980
感觉上还可以对吧

01:09:01.980 --> 01:09:03.980
那我们就减去一个300期吧

01:09:05.420 --> 01:09:06.140
第一个style

01:09:07.020 --> 01:09:07.340
好的

01:09:07.340 --> 01:09:08.220
那咱们来试一下

01:09:09.500 --> 01:09:10.460
没什么问题对吧

01:09:10.460 --> 01:09:11.180
没什么问题

01:09:11.180 --> 01:09:12.860
那就代表着我们这个

01:09:12.860 --> 01:09:14.300
组件上面的样式

01:09:14.300 --> 01:09:15.740
基本上就处理完了

01:09:15.740 --> 01:09:16.540
那么接下来呢

01:09:16.540 --> 01:09:17.180
我们继续啊

01:09:17.180 --> 01:09:18.460
把他这个功能

01:09:18.460 --> 01:09:20.700
继续的再进行一个深化

01:09:20.700 --> 01:09:21.740
首先第一个呢

01:09:21.740 --> 01:09:22.940
我们就是要保证

01:09:22.940 --> 01:09:24.940
在切换这个分页的时候

01:09:24.940 --> 01:09:25.420
同时呢

01:09:25.420 --> 01:09:27.740
去请求每一页不同的数据

01:09:27.740 --> 01:09:29.020
那这个我们可以看一下

01:09:29.020 --> 01:09:30.140
怎么来实现

01:09:30.140 --> 01:09:31.740
到我们点击这个分页

01:09:31.740 --> 01:09:33.500
比如说第二页第三页的时候

01:09:34.620 --> 01:09:37.260
还会重复的进行该stuff的一个调用

01:09:37.260 --> 01:09:37.740
那这个呢

01:09:37.740 --> 01:09:39.660
是我们实现的一个本质

01:09:39.660 --> 01:09:40.540
那这个怎么来做

01:09:40.540 --> 01:09:42.620
我们回到这个界面里面

01:09:42.620 --> 01:09:45.260
我们在这个index.jsx

01:09:45.260 --> 01:09:46.460
也就是说stuff里面啊

01:09:47.740 --> 01:09:48.140
现在呢

01:09:48.140 --> 01:09:49.260
我们要来做的时候

01:09:49.980 --> 01:09:50.620
这个时候

01:09:50.620 --> 01:09:51.900
到我们改变分页

01:09:51.900 --> 01:09:53.100
其实这个是能拿到的

01:09:53.100 --> 01:09:54.060
但是拿到这个呢

01:09:54.060 --> 01:09:55.420
不是我们的一个初衷

01:09:55.420 --> 01:09:57.180
也就是说不是我们的一个目的

01:09:57.260 --> 01:09:58.380
我们拿到它之后

01:09:58.380 --> 01:09:58.860
其实呢

01:09:58.860 --> 01:10:00.860
就是想把它做一个改变

01:10:01.980 --> 01:10:02.620
那这个里面

01:10:02.620 --> 01:10:03.740
我们知道一个问题

01:10:03.740 --> 01:10:05.420
就是说在初者化的时候

01:10:05.420 --> 01:10:07.020
肯定是请求第一页数据

01:10:07.020 --> 01:10:07.500
对不对

01:10:07.500 --> 01:10:09.100
那我这里面就给它一个什么呢

01:10:09.100 --> 01:10:09.980
0

01:10:09.980 --> 01:10:11.500
也就是说

01:10:11.500 --> 01:10:12.860
我们直接初者化的时候

01:10:12.860 --> 01:10:15.100
直接是让它请求第一页数据

01:10:15.100 --> 01:10:15.740
或者说呢

01:10:15.740 --> 01:10:17.420
我们直接的在这个里面

01:10:17.420 --> 01:10:18.460
不应该给0

01:10:18.460 --> 01:10:19.500
给1就ok啊

01:10:20.620 --> 01:10:23.100
我们把这个配置给它做一个传递

01:10:23.100 --> 01:10:24.540
当你传递的配置之后

01:10:24.540 --> 01:10:25.980
那我们这里面啊

01:10:26.060 --> 01:10:26.940
请求的时候

01:10:26.940 --> 01:10:29.340
就使用一个定义的行参

01:10:29.340 --> 01:10:30.620
carrant的配置

01:10:30.620 --> 01:10:32.300
那这里面给它加一个帽号

01:10:32.300 --> 01:10:33.420
carrant的配置

01:10:33.420 --> 01:10:33.820
首先

01:10:33.820 --> 01:10:35.260
保证我们调用的时候

01:10:35.260 --> 01:10:35.980
没啥问题啊

01:10:37.100 --> 01:10:38.540
咱们来做一下

01:10:38.540 --> 01:10:39.180
这个时候

01:10:39.180 --> 01:10:40.540
我们入参的时候

01:10:40.540 --> 01:10:41.740
size10配置1

01:10:41.740 --> 01:10:42.300
对不对

01:10:42.300 --> 01:10:43.660
到我们拿到改变值

01:10:43.660 --> 01:10:44.940
我们知道这个改变值呢

01:10:44.940 --> 01:10:47.580
其实就是我们要获取的这个值

01:10:47.580 --> 01:10:48.060
对吧

01:10:48.060 --> 01:10:49.020
我们可以来看一下

01:10:50.540 --> 01:10:52.300
打印一下这个console

01:10:52.300 --> 01:10:53.020
那比如说

01:10:53.020 --> 01:10:54.700
我在这个改变业术的时候

01:10:54.700 --> 01:10:55.820
第二页第三页

01:10:55.820 --> 01:10:56.300
对吧

01:10:56.300 --> 01:10:56.860
然后呢

01:10:56.860 --> 01:10:58.060
第二页第一页

01:10:58.060 --> 01:10:59.740
那我们其实在这个时候

01:10:59.740 --> 01:11:00.860
是不是可以把这个配置

01:11:00.860 --> 01:11:02.380
给它传递一下就ok了

01:11:02.380 --> 01:11:03.820
也就是说在这个时候

01:11:03.820 --> 01:11:06.140
你既然已经获取到了一个配置

01:11:06.140 --> 01:11:07.660
那我这个里面

01:11:07.660 --> 01:11:09.500
是不是就可以把这个配置

01:11:09.500 --> 01:11:10.860
给它进行一个传递

01:11:10.860 --> 01:11:11.420
传递回来

01:11:11.420 --> 01:11:13.740
这个就是当审言实识的配置啊

01:11:13.740 --> 01:11:14.300
然后呢

01:11:15.100 --> 01:11:16.380
我传递了之后

01:11:16.380 --> 01:11:17.820
它又去调用这个方法

01:11:17.820 --> 01:11:18.780
是不是就可以了

01:11:18.780 --> 01:11:19.340
所以说呢

01:11:19.340 --> 01:11:21.100
我这里面就是重复的

01:11:21.100 --> 01:11:22.460
调用一下

01:11:22.460 --> 01:11:23.900
我们的这个方法

01:11:23.900 --> 01:11:24.620
你注意一下

01:11:24.620 --> 01:11:26.380
这个里面写一个行参吧

01:11:26.380 --> 01:11:28.780
这个叫current page

01:11:30.060 --> 01:11:30.460
好的

01:11:30.460 --> 01:11:31.740
side page的时候

01:11:31.740 --> 01:11:33.660
我们直接的这个里面

01:11:33.660 --> 01:11:35.420
为了不影响混乱

01:11:35.420 --> 01:11:37.500
那这里面使用一个current page

01:11:37.500 --> 01:11:38.780
其实这个current page

01:11:38.780 --> 01:11:39.500
指的是什么呢

01:11:40.540 --> 01:11:41.500
current page

01:11:41.500 --> 01:11:44.540
就是我们当前获取到的

01:11:44.540 --> 01:11:45.740
最新的业术

01:11:47.420 --> 01:11:50.220
获取到的最新的业术

01:11:50.220 --> 01:11:50.940
ok

01:11:50.940 --> 01:11:52.140
那拿到它之后

01:11:52.140 --> 01:11:53.820
我们通过这个current page

01:11:53.820 --> 01:11:54.700
来改变

01:11:54.700 --> 01:11:55.660
这个时候呢

01:11:55.660 --> 01:11:56.140
就是说

01:11:56.140 --> 01:11:57.580
你在改变业术的时候

01:11:57.580 --> 01:11:59.500
同时去进行数据的请求

01:12:00.780 --> 01:12:01.420
来试一下

01:12:01.420 --> 01:12:03.340
第二页又发起了一个请求

01:12:03.340 --> 01:12:04.140
那我们看一下

01:12:04.140 --> 01:12:05.260
payload的入参

01:12:05.260 --> 01:12:07.340
这是不是已经给它传递第二页

01:12:07.340 --> 01:12:08.060
反而为止呢

01:12:08.060 --> 01:12:09.500
应该是我们第二页的

01:12:09.500 --> 01:12:10.540
相应的数据

01:12:10.540 --> 01:12:11.900
我们知道第二页里面啊

01:12:11.900 --> 01:12:13.180
首页应该是第一个

01:12:13.180 --> 01:12:14.460
就应该是这个刘家良

01:12:14.460 --> 01:12:15.020
对吧

01:12:15.020 --> 01:12:16.940
我们可以从这个里面来看一下

01:12:16.940 --> 01:12:18.380
当我选择第二页的时候

01:12:19.500 --> 01:12:21.020
ok 刘家良没问题

01:12:21.020 --> 01:12:21.500
对不对

01:12:21.580 --> 01:12:22.060
然后呢

01:12:22.060 --> 01:12:23.820
我们再来做第三页

01:12:23.820 --> 01:12:24.860
第三页的时候

01:12:24.860 --> 01:12:26.380
应该是第一个字

01:12:26.380 --> 01:12:27.340
是哪一个

01:12:27.340 --> 01:12:29.820
是我们的这个陆家良啊

01:12:29.820 --> 01:12:30.220
然后呢

01:12:30.220 --> 01:12:31.660
我们看一下入参

01:12:31.660 --> 01:12:32.220
哎

01:12:32.220 --> 01:12:33.500
第三个啊

01:12:33.500 --> 01:12:34.780
那回到我们这里面

01:12:34.780 --> 01:12:36.220
再来验证一下

01:12:36.220 --> 01:12:36.700
第三个

01:12:36.700 --> 01:12:38.380
只要是陆家良就ok啊

01:12:39.900 --> 01:12:40.860
ok 回去之后

01:12:40.860 --> 01:12:41.740
没任何问题

01:12:41.740 --> 01:12:43.100
陆家良对吧

01:12:43.100 --> 01:12:43.980
然后这样呢

01:12:43.980 --> 01:12:45.980
就能保证我们同时

01:12:45.980 --> 01:12:47.180
分页切换的时候

01:12:47.180 --> 01:12:49.740
来实现一个不同指定

01:12:49.740 --> 01:12:51.260
业术的数据获取的

01:12:51.260 --> 01:12:52.700
这么一个需求

01:12:52.700 --> 01:12:53.100
好的

01:12:53.100 --> 01:12:54.220
以上这些呢

01:12:54.220 --> 01:12:56.220
就是我们本节课的内容

01:12:56.220 --> 01:12:57.900
本节课都实现了哪些呢

01:12:57.900 --> 01:13:00.540
首先我们把员工部分的

01:13:00.540 --> 01:13:01.900
所需要的接扣API

01:13:01.900 --> 01:13:04.140
我们都给它进行了一个整理

01:13:04.140 --> 01:13:04.620
之后呢

01:13:04.620 --> 01:13:06.220
创建了model模块

01:13:06.220 --> 01:13:07.340
那么接下来啊

01:13:07.340 --> 01:13:10.380
我们又定义了这个头部的公共组件

01:13:10.380 --> 01:13:10.860
之后呢

01:13:10.860 --> 01:13:12.300
我们下节课开始

01:13:12.300 --> 01:13:14.220
就来对我们员工的

01:13:14.220 --> 01:13:16.060
表格的一个制作

01:13:16.060 --> 01:13:17.740
那么由表格制作

01:13:17.740 --> 01:13:20.300
然后一步步的实现我们的详情

01:13:20.300 --> 01:13:23.660
包括新增员工的这些功能

01:13:23.660 --> 01:13:25.820
我们本节课的内容就到这里

01:13:25.820 --> 01:13:26.460
谢谢大家

