WEBVTT

00:00.000 --> 00:05.000
各位同学 大家好 这期课我们继续按历课程的一个学习

00:05.000 --> 00:11.000
那么通过上期课我们已经实现了我们这个详情组件的一个头部内容的一个制作

00:11.000 --> 00:15.000
那么接下来我们就把详情表单给来实现一下

00:15.000 --> 00:19.000
首先来看一下已经完成的这个详情表单

00:19.000 --> 00:23.000
在这个详情表单里面 它的展示里面有好多种类型

00:23.000 --> 00:28.000
我们有这种纯文本的输入框 还有这种下拉菜单

00:28.000 --> 00:32.000
比如说像这种下拉菜单 然后它的展示也挺有规矩的

00:32.000 --> 00:38.000
分别是一行展示两个 在这个里面我们会大量的用到安德底单里面的相关组件

00:38.000 --> 00:44.000
比如说我们用到它的一个快速结构排版布局的肉Layout这种

00:44.000 --> 00:49.000
包括我们的表单Slack下拉菜单这种我们可能都会使用到

00:49.000 --> 00:54.000
那这个时候怎么办呢 我们首先第一步要给他们进行一个引入

00:54.000 --> 00:59.000
也就是说提前先给他们进行加载过来的这样一个操作

00:59.000 --> 01:03.000
我们怎么来做 那这个时候我们就可以来写一下

01:03.000 --> 01:06.000
回到我们的这个安利代码里面

01:06.000 --> 01:11.000
我们打开之前在做的一部分Components

01:11.000 --> 01:14.000
Pages 下面StuffComponent

01:14.000 --> 01:18.000
Component下面我们有一个Adder

01:18.000 --> 01:21.000
这个里面有一个DetailFoam 是不是

01:21.000 --> 01:24.000
这个DetailFoam就是我们定义好的员工相机表单

01:24.000 --> 01:27.000
首先来说它里面可能需要两个状态

01:27.000 --> 01:30.000
我们先把这两个状态给它传递过来

01:30.000 --> 01:32.000
都拿两个状态 首先第一你知道

01:32.000 --> 01:35.000
我们如果说要去选详情的话

01:35.000 --> 01:38.000
那你得先把这个详情给展示出来 对不对

01:38.000 --> 01:40.000
然后至于你修不修改是另一回事

01:40.000 --> 01:44.000
所以说我们这里面需要一个StuffDetail

01:45.000 --> 01:47.000
StuffDetail

01:47.000 --> 01:49.000
然后第二个呢 当我去修改的时候

01:49.000 --> 01:51.000
可能会有直接的去处罚

01:51.000 --> 01:53.000
重置表单的这么一个操作

01:53.000 --> 01:54.000
重置表单的操作

01:54.000 --> 01:56.000
那我这里面就可以来把这个

01:56.000 --> 01:58.000
E&E的Stuff List的

01:58.000 --> 02:00.000
也给它做一个传递

02:00.000 --> 02:01.000
既然你都传递过来了

02:01.000 --> 02:03.000
那这个里面我们是不是得把它

02:03.000 --> 02:04.000
已经接收了

02:04.000 --> 02:06.000
那我这里面就给它传递一下

02:06.000 --> 02:07.000
传递在哪儿传递呢

02:07.000 --> 02:10.000
是在我们这个Render函数DetailFoam里面

02:10.000 --> 02:12.000
DetailFoam里面我们接收两个参数

02:12.000 --> 02:16.000
一个是我们的Stuff List 对不对

02:17.000 --> 02:18.000
我们来写一下

02:18.000 --> 02:22.000
第一个StuffDetail

02:22.000 --> 02:24.000
StuffDetail等于StuffDetail

02:24.000 --> 02:28.000
还有一个就是我们的E&E的Stuff List

02:28.000 --> 02:29.000
这里面写一下

02:29.000 --> 02:32.000
Stuff List

02:32.000 --> 02:36.000
等于我们的这个里面的E&E的Stuff List

02:36.000 --> 02:38.000
OK 这两个需要的状态

02:38.000 --> 02:39.000
已经传递过去了

02:39.000 --> 02:41.000
需要的状态传递过去之后

02:41.000 --> 02:43.000
那我们现在再把这个

02:43.000 --> 02:44.000
涉及到的

02:44.000 --> 02:47.000
我们需要使用到的一些相关的

02:47.000 --> 02:50.000
这个安德底站里面的组件

02:50.000 --> 02:51.000
我们给它引入一下

02:51.000 --> 02:52.000
因为这是一个表单

02:52.000 --> 02:55.000
所以说它这里面肯定使用Foam

02:55.000 --> 02:56.000
那我们给它拿进来

02:56.000 --> 02:57.000
Foam是第一个

02:57.000 --> 02:59.000
然后这里面有Input

02:59.000 --> 03:00.000
对吧

03:00.000 --> 03:01.000
Input为拿进来

03:01.000 --> 03:03.000
之后我们可能会使用到Select

03:03.000 --> 03:04.000
或者说我们不用

03:04.000 --> 03:05.000
这个都不要紧

03:05.000 --> 03:06.000
然后我们可能

03:06.000 --> 03:07.000
如果说不用的话

03:07.000 --> 03:08.000
我们给它干掉就可以了

03:08.000 --> 03:12.000
这里面还会用到Datapicker这个组件

03:12.000 --> 03:15.000
那我们也给它拿过来

03:15.000 --> 03:16.000
Datapicker

03:16.000 --> 03:17.000
好了

03:17.000 --> 03:18.000
Datapicker拿过来之后

03:18.000 --> 03:21.000
这个应该是一个陀峰

03:21.000 --> 03:25.000
我们继续的来进行一个引入

03:25.000 --> 03:26.000
还有什么组件

03:26.000 --> 03:28.000
这里面我们用到它的布局组件

03:28.000 --> 03:30.000
Row和Col

03:30.000 --> 03:32.000
之后如果说你修改成功

03:32.000 --> 03:34.000
是不是还有这个提示信息

03:34.000 --> 03:36.000
那我这里面再用一个Message

03:36.000 --> 03:38.000
Foam从我们的安德底里面

03:38.000 --> 03:40.000
来进行一个获取

03:40.000 --> 03:42.000
那这些就是我们需要的内容

03:42.000 --> 03:44.000
我们依靠这些组件

03:44.000 --> 03:46.000
来把结构搭建一下

03:46.000 --> 03:48.000
首先我们把Foam

03:48.000 --> 03:49.000
给做一个引入

03:49.000 --> 03:51.000
这里面使用一个小过号

03:51.000 --> 03:53.000
Foam

03:53.000 --> 03:55.000
好的 定义完成之后

03:55.000 --> 03:57.000
那这个Foam里面都有什么内容

03:57.000 --> 03:58.000
我们可以来看一下

03:58.000 --> 04:00.000
它这个Foam里面结构

04:00.000 --> 04:01.000
也比较清奇

04:01.000 --> 04:03.000
首先这里面是有这个媒行

04:03.000 --> 04:05.000
比如说我们这个

04:05.000 --> 04:07.000
媒行里面

04:07.000 --> 04:08.000
它有两项

04:08.000 --> 04:10.000
这个我们怎么来实现

04:10.000 --> 04:12.000
其实这个我们可以

04:12.000 --> 04:14.000
通过这种Row

04:14.000 --> 04:16.000
Row里面我们又定义出来什么

04:16.000 --> 04:18.000
定义两个Col

04:18.000 --> 04:20.000
然后分别两个Col

04:20.000 --> 04:22.000
一次的占比是不是就可以了

04:22.000 --> 04:24.000
那我们就来实现一下

04:24.000 --> 04:27.000
这个里面它会有一个Row

04:27.000 --> 04:29.000
我们肉组件已经给它引来了

04:29.000 --> 04:31.000
那我们直接就来写

04:31.000 --> 04:33.000
好了 定义完Row之后

04:33.000 --> 04:36.000
这个时候我们继续来进行一个编写

04:36.000 --> 04:38.000
这里面有什么 有Col

04:38.000 --> 04:40.000
Col我们每一个

04:40.000 --> 04:42.000
让它死半等于一个11

04:42.000 --> 04:44.000
OK 那这里面选了

04:44.000 --> 04:46.000
那这个时候里面的内容

04:46.000 --> 04:47.000
会有哪些呢

04:47.000 --> 04:48.000
我们先不写

04:48.000 --> 04:50.000
比如说我们这里面先打印一个纸

04:50.000 --> 04:52.000
这个叫Hello

04:52.000 --> 04:53.000
随便给它一个纸

04:53.000 --> 04:54.000
咱们来看一下

04:54.000 --> 04:55.000
是否可行

04:55.000 --> 04:57.000
这里面有包错吗

04:57.000 --> 04:59.000
我们来检查一下

04:59.000 --> 05:02.000
这可能是之前的遗留的错误

05:02.000 --> 05:04.000
好的 那我们在这个里面

05:04.000 --> 05:05.000
点击一下

05:05.000 --> 05:07.000
点击一下之后Hello就出来了

05:07.000 --> 05:08.000
Hello出来一个不行了

05:08.000 --> 05:10.000
那我们直接的再给一个Col

05:10.000 --> 05:11.000
Hello1

05:11.000 --> 05:13.000
两个让它给进行展示

05:13.000 --> 05:15.000
那现在就在一行展示了

05:15.000 --> 05:17.000
这个是没啥问题的

05:17.000 --> 05:19.000
然后我们这个处理完成之后

05:19.000 --> 05:21.000
那现在咱们怎么做

05:21.000 --> 05:22.000
这个里面

05:22.000 --> 05:24.000
其实我们想让它平均展示

05:24.000 --> 05:25.000
也就是说

05:25.000 --> 05:26.000
这个在最左边

05:26.000 --> 05:27.000
这个在最右边

05:27.000 --> 05:28.000
那我们可以对肉

05:28.000 --> 05:30.000
还可以进行一个修饰

05:30.000 --> 05:31.000
那这个里面

05:32.000 --> 05:34.000
我们给它一个纸

05:34.000 --> 05:35.000
叫什么呢

05:35.000 --> 05:36.000
叫space beton

05:36.000 --> 05:37.000
那这个纸呢

05:37.000 --> 05:38.000
其实就是说

05:38.000 --> 05:40.000
安德底在里面已经定义好了

05:40.000 --> 05:41.000
我们不知道的同学呢

05:41.000 --> 05:42.000
可以去看一下

05:42.000 --> 05:43.000
这样呢

05:43.000 --> 05:45.000
它就依依次的左右两边

05:45.000 --> 05:46.000
来进行排列了

05:46.000 --> 05:47.000
这个是左边的

05:47.000 --> 05:49.000
这个是右边的

05:49.000 --> 05:50.000
一共24分

05:50.000 --> 05:51.000
然后一个呢

05:51.000 --> 05:52.000
各占11份

05:52.000 --> 05:54.000
就是这么一个操作

05:54.000 --> 05:55.000
定义完成之后

05:55.000 --> 05:57.000
那这里面肯定不是Hello World

05:57.000 --> 05:58.000
对吧

05:58.000 --> 05:59.000
我们要做什么

05:59.000 --> 06:02.000
我们其实要给它展示的内容

06:02.000 --> 06:03.000
这里面是

06:03.000 --> 06:05.000
表单的实际的内容

06:05.000 --> 06:06.000
那我们这里面就是什么

06:06.000 --> 06:10.000
foam.item

06:10.000 --> 06:11.000
对吧

06:11.000 --> 06:12.000
给它来进行一个展示

06:12.000 --> 06:13.000
那这里面就是

06:13.000 --> 06:14.000
表单向了

06:14.000 --> 06:16.000
foam.item

06:16.000 --> 06:17.000
然后在里面

06:17.000 --> 06:18.000
我们这样

06:18.000 --> 06:21.000
使用一个foam.item

06:21.000 --> 06:24.000
里面给它添加内容一次的

06:24.000 --> 06:25.000
foam.item

06:25.000 --> 06:26.000
添加什么内容呢

06:26.000 --> 06:27.000
咱们这里面先写

06:27.000 --> 06:30.000
先给它一个style

06:30.000 --> 06:32.000
或者是我们先不加style

06:32.000 --> 06:34.000
那我们直接的在这个里面

06:34.000 --> 06:36.000
给它添加一个label

06:36.000 --> 06:37.000
label等于一个

06:37.000 --> 06:39.000
比如说这个是用互名

06:39.000 --> 06:42.000
咱们先添一些基础的静态值

06:42.000 --> 06:43.000
那基础的静态值之后

06:43.000 --> 06:44.000
添完了之后

06:44.000 --> 06:45.000
我们这里面

06:45.000 --> 06:47.000
是不是得给它填充内容了

06:47.000 --> 06:49.000
填充内容的之后

06:49.000 --> 06:51.000
我们这里面怎么填充内容呢

06:51.000 --> 06:52.000
给它一个引铺它

06:52.000 --> 06:53.000
哎呀

06:53.000 --> 06:55.000
这个还是得写两的

06:55.000 --> 06:56.000
那给它添加一个

06:56.000 --> 06:59.000
因为这里面是得到添加内容

06:59.000 --> 07:02.000
我们写一下foam.item

07:02.000 --> 07:03.000
然后呢

07:03.000 --> 07:04.000
给它一个最简单的

07:04.000 --> 07:06.000
我们直接把这个input

07:06.000 --> 07:07.000
给它添加一个

07:07.000 --> 07:09.000
input

07:09.000 --> 07:11.000
好的input的添加完成之后

07:11.000 --> 07:12.000
那这里面

07:12.000 --> 07:14.000
我们给它一个playedholder

07:14.000 --> 07:16.000
请输入用互名

07:16.000 --> 07:17.000
对吧

07:17.000 --> 07:19.000
这些一些基础的操作

07:19.000 --> 07:20.000
咱们都给它添加进去

07:20.000 --> 07:22.000
然后添加完成之后

07:22.000 --> 07:23.000
那现在咱们看

07:23.000 --> 07:24.000
跟我们的展示

07:24.000 --> 07:25.000
还有一点不一样

07:25.000 --> 07:26.000
我们的展示是什么呢

07:26.000 --> 07:27.000
首先

07:27.000 --> 07:28.000
它这个出手画的时候

07:28.000 --> 07:30.000
当它滑过的时候

07:30.000 --> 07:31.000
才会有这个弹窗

07:31.000 --> 07:32.000
这个是样式处理啊

07:32.000 --> 07:33.000
不要紧

07:33.000 --> 07:34.000
但是这里面有一个什么呢

07:34.000 --> 07:36.000
它是上下的这么一个展示

07:36.000 --> 07:37.000
对吧

07:37.000 --> 07:38.000
那上下这么一个展示呢

07:38.000 --> 07:40.000
我们要给它一个

07:40.000 --> 07:42.000
垂直的展示

07:42.000 --> 07:43.000
那这个里面

07:43.000 --> 07:44.000
我们的foam

07:44.000 --> 07:45.000
就来派行用场了

07:45.000 --> 07:47.000
给它添加一个属性

07:47.000 --> 07:48.000
那添加属性是什么呢

07:48.000 --> 07:49.000
给它layout

07:49.000 --> 07:50.000
layout等于一个直

07:50.000 --> 07:52.000
叫waterclaw

07:52.000 --> 07:53.000
也就是说垂直的

07:53.000 --> 07:55.000
进行一个展示

07:55.000 --> 07:56.000
那咱们看行不行

07:56.000 --> 07:58.000
先把一些基础的样式

07:58.000 --> 08:00.000
ok 那这个也搞定了对吧

08:00.000 --> 08:01.000
这里面是用户名

08:01.000 --> 08:02.000
那下面呢

08:02.000 --> 08:04.000
我们可以进行一个添加

08:04.000 --> 08:05.000
比如说有用户名

08:05.000 --> 08:08.000
然后还有一个就是中文姓名

08:08.000 --> 08:09.000
对吧

08:09.000 --> 08:11.000
这里面再写一个

08:11.000 --> 08:13.000
两个对吧

08:13.000 --> 08:14.000
看出来

08:14.000 --> 08:15.000
这个展示还不错

08:15.000 --> 08:17.000
然后它有点偏小

08:17.000 --> 08:18.000
偏小怎么办

08:18.000 --> 08:19.000
那我们直接的

08:19.000 --> 08:21.000
可以给它往外称一称

08:21.000 --> 08:22.000
假如说

08:22.000 --> 08:24.000
我们可以把这个宽度

08:24.000 --> 08:25.000
给它调整一下

08:25.000 --> 08:26.000
调整一下

08:26.000 --> 08:27.000
那你这个时候

08:27.000 --> 08:28.000
你要么对这个

08:28.000 --> 08:30.000
方表单进行一个宽度的调整

08:30.000 --> 08:31.000
或者说呢

08:31.000 --> 08:33.000
你直接添加一个

08:33.000 --> 08:35.000
外面的包裹容器

08:35.000 --> 08:36.000
给这个包裹容器

08:36.000 --> 08:37.000
整体宽度

08:37.000 --> 08:40.440
给它调大就ok了

08:40.440 --> 08:41.440
我们这个里面

08:41.440 --> 08:42.440
简单处理一下

08:42.440 --> 08:45.440
找到我们的容器组件

08:45.440 --> 08:47.440
容器组件是在这个

08:47.440 --> 08:48.440
components下面

08:48.440 --> 08:50.440
我们找到components下面

08:50.440 --> 08:52.440
有一个driver.jsX

08:52.440 --> 08:53.440
那对它里面

08:53.440 --> 08:54.440
原来咱们是使用了500

08:54.440 --> 08:55.440
那这里面

08:55.440 --> 08:57.440
我再给它多300像素

08:57.440 --> 08:58.440
让它宽一些

08:58.440 --> 08:59.440
要不然看着太窄

08:59.440 --> 09:00.440
至于背景颜色

09:00.440 --> 09:01.440
我们这就不纠结了

09:01.440 --> 09:02.440
因为这背景颜色

09:02.440 --> 09:03.440
对我们来说

09:03.440 --> 09:05.440
其实实现这个效果

09:05.440 --> 09:06.440
也不是很重要

09:06.440 --> 09:07.440
所以说我们

09:07.440 --> 09:09.440
先不给它进行一个添加了

09:09.440 --> 09:10.440
ok 那这个

09:10.440 --> 09:11.440
处理完了之后

09:11.440 --> 09:12.440
再回到我们代码里面

09:12.440 --> 09:13.440
看我们还需要

09:13.440 --> 09:14.440
一些什么内容

09:14.440 --> 09:15.440
首先说

09:15.440 --> 09:16.440
这个里面

09:16.440 --> 09:17.440
是不是还有规则

09:17.440 --> 09:18.440
而且呢

09:18.440 --> 09:19.440
我们现在有一个问题

09:19.440 --> 09:20.440
是啥问题呢

09:20.440 --> 09:22.440
你这样进行渲染的话

09:22.440 --> 09:23.440
那这个时候呢

09:23.440 --> 09:24.440
我们每一个

09:24.440 --> 09:25.440
都是文本输入框

09:25.440 --> 09:27.440
那可能还会有下拉菜单对吧

09:27.440 --> 09:28.440
那有下拉菜单

09:28.440 --> 09:30.440
也可能会有这种组件

09:30.440 --> 09:32.440
比如说日期组件

09:32.440 --> 09:33.440
或者是我们直接

09:33.440 --> 09:35.440
下拉选择的这种组件

09:35.440 --> 09:36.440
像这种问题处理

09:36.440 --> 09:37.440
还有图片上传

09:37.440 --> 09:38.440
也就是说

09:38.440 --> 09:39.440
每一个都不一样

09:39.440 --> 09:40.440
那这个每一个都不一样

09:40.440 --> 09:42.440
如果说我们写在这个里面

09:42.440 --> 09:43.440
代码呢会非常长

09:43.440 --> 09:44.440
也比较多

09:44.440 --> 09:45.440
那怎么办呢

09:45.440 --> 09:46.440
我们可以定义

09:46.440 --> 09:48.440
一个静态数据的列表

09:48.440 --> 09:49.440
那这个静态数据列表呢

09:49.440 --> 09:51.440
就专门的来处理

09:51.440 --> 09:52.440
我们的这个

09:52.440 --> 09:54.440
里面的表达项啊

09:54.440 --> 09:55.440
那这里面怎么来做

09:55.440 --> 09:56.440
因为静态数据列表

09:56.440 --> 09:57.440
不管我们这个

09:57.440 --> 09:58.440
员工组件使用

09:58.440 --> 10:00.440
好多地方都会使用到

10:00.440 --> 10:01.440
那所以说

10:01.440 --> 10:02.440
我在src下面

10:02.440 --> 10:03.440
新建一个文件家

10:03.440 --> 10:04.440
叫static

10:06.440 --> 10:07.440
static list

10:07.440 --> 10:08.440
他专门的

10:08.440 --> 10:09.440
就是做我们的

10:09.440 --> 10:10.440
这些数据收集的

10:10.440 --> 10:12.440
比如说静态数据

10:12.440 --> 10:13.440
那我这里面写一下

10:13.440 --> 10:14.440
staff date

10:16.440 --> 10:18.440
staff list.js

10:19.440 --> 10:20.440
那这里面就定一个

10:20.440 --> 10:21.440
这样js文件

10:21.440 --> 10:22.440
那这个js文件

10:22.440 --> 10:23.440
是什么样呢

10:23.440 --> 10:24.440
我这里面提前

10:24.440 --> 10:25.440
准备好了一个

10:25.440 --> 10:26.440
给同学们为了

10:26.440 --> 10:27.440
节省时间

10:27.440 --> 10:28.440
我们直接给他复制一下

10:28.440 --> 10:29.440
复制过来之后

10:29.440 --> 10:30.440
然后我跟同学们

10:30.440 --> 10:32.440
说一下这个内容啊

10:32.440 --> 10:33.440
首先你看一下

10:33.440 --> 10:34.440
这个里面

10:34.440 --> 10:35.440
所有描述的信息

10:35.440 --> 10:36.440
我这里面呢

10:36.440 --> 10:37.440
是一个最外层

10:37.440 --> 10:39.440
咱们一次的来展开啊

10:39.440 --> 10:41.440
最外层是一个大的数组

10:42.440 --> 10:43.440
给他合并一下

10:43.440 --> 10:45.440
合并一下之后

10:45.440 --> 10:46.440
那数组里面呢

10:46.440 --> 10:47.440
有这么多小数组啊

10:47.440 --> 10:48.440
我展开第一个

10:48.440 --> 10:49.440
第一个我们看到了

10:49.440 --> 10:51.440
里面有两个对象

10:51.440 --> 10:52.440
两个对象

10:52.440 --> 10:53.440
这是啥内容呢

10:53.440 --> 10:54.440
我们来抽一眼

10:56.750 --> 10:57.750
你可以看到

10:57.750 --> 10:58.750
这个里面

10:58.750 --> 10:59.750
有一个

10:59.750 --> 11:00.750
RenderTap

11:00.750 --> 11:02.750
它是引曝的

11:02.750 --> 11:03.750
RenderTap引曝的

11:03.750 --> 11:04.750
这啥意思

11:04.750 --> 11:05.750
就说明我们这个

11:05.750 --> 11:06.750
渲染的类型

11:06.750 --> 11:08.750
是一个文本框

11:08.750 --> 11:10.750
那这个是一个文本框之后

11:10.750 --> 11:12.750
这里面有一个itemName

11:12.750 --> 11:13.750
itemName呢

11:13.750 --> 11:15.750
是指的是yodername

11:15.750 --> 11:16.750
这个yodername

11:16.750 --> 11:17.750
就是我们表单的那个

11:17.750 --> 11:18.750
出指向值

11:18.750 --> 11:19.750
因为我们这个啊

11:19.750 --> 11:21.750
其实它是要把这个值

11:21.750 --> 11:23.750
提前给进行一个渲染的

11:23.750 --> 11:24.750
所以说呢

11:24.750 --> 11:25.750
这个时候呢

11:25.750 --> 11:26.750
我们就先给他指定一个

11:26.750 --> 11:27.750
yodername值

11:27.750 --> 11:28.750
这里面并且有一个

11:28.750 --> 11:29.750
initValue

11:29.750 --> 11:31.750
出指化的这个Value

11:31.750 --> 11:32.750
其实呢

11:32.750 --> 11:33.750
我们可以理解为

11:33.750 --> 11:34.750
就是我们

11:34.750 --> 11:35.750
比如说

11:35.750 --> 11:36.750
当在这个不进行

11:36.750 --> 11:37.750
添加内容的时候

11:37.750 --> 11:38.750
这里面提示

11:38.750 --> 11:39.750
请输入员工姓名

11:39.750 --> 11:40.750
你说这个有什么用

11:40.750 --> 11:41.750
其实这个呢

11:41.750 --> 11:43.750
在这个里面意义不大

11:43.750 --> 11:44.750
但是如果说

11:44.750 --> 11:47.750
我们要去创建的时候

11:47.750 --> 11:48.750
你比如说

11:48.750 --> 11:49.750
这个是提前

11:49.750 --> 11:50.750
我添加的值啊

11:50.750 --> 11:51.750
为了方便

11:51.750 --> 11:52.750
那比如说

11:52.750 --> 11:53.750
这里面请选择部门

11:53.750 --> 11:54.750
请选择直辑

11:54.750 --> 11:55.750
那这是不是

11:55.750 --> 11:56.750
我们出指化的时候

11:56.750 --> 11:57.750
给他的一个指

11:57.750 --> 11:58.750
或者是

11:58.750 --> 11:59.750
你觉得这个initValue

11:59.750 --> 12:00.750
对你有混淆的话

12:00.750 --> 12:01.750
那我们写一个什么

12:01.750 --> 12:05.190
placeholder

12:05.190 --> 12:07.190
placeholder

12:07.190 --> 12:08.190
那我这里面就改一下

12:08.190 --> 12:10.190
把这个initValue

12:10.190 --> 12:11.190
咱们调整为

12:11.190 --> 12:13.190
placeholder这么一个指

12:13.190 --> 12:15.190
placeholder

12:15.190 --> 12:16.190
HOIDR

12:16.190 --> 12:17.190
placeholderValue

12:17.190 --> 12:18.190
好的

12:18.190 --> 12:19.190
把这个改完了之后

12:19.190 --> 12:20.190
那现在你看

12:20.190 --> 12:21.190
placeholderValue

12:21.190 --> 12:22.190
你知道吗

12:22.190 --> 12:23.190
就是说

12:23.190 --> 12:24.190
当你没进行数据填充的时候

12:24.190 --> 12:26.190
我们展示的这么一个指

12:26.190 --> 12:27.190
因为我们

12:27.190 --> 12:28.190
创建这么一个静态数据

12:28.190 --> 12:29.190
不光是为了

12:29.190 --> 12:30.190
我们这个

12:30.190 --> 12:31.190
详情界面使用

12:31.190 --> 12:32.190
那比如说

12:32.190 --> 12:33.190
我们一会儿

12:33.190 --> 12:34.190
新增表达项的时候

12:34.190 --> 12:36.190
也会进行对他一个使用

12:36.190 --> 12:37.190
对吧

12:37.190 --> 12:38.190
所以说我们提前

12:38.190 --> 12:39.190
给他进行一个添加

12:39.190 --> 12:40.190
然后这里面

12:40.190 --> 12:41.190
还有一个labeltext

12:41.190 --> 12:42.190
labeltext

12:42.190 --> 12:43.190
对应的就是

12:43.190 --> 12:44.190
我们这里面

12:45.190 --> 12:46.190
包括我们一会儿

12:46.190 --> 12:47.190
新增的时候

12:47.190 --> 12:48.190
那在这个位置

12:48.190 --> 12:49.190
我们点击创建

12:49.190 --> 12:50.190
这里面有姓名

12:50.190 --> 12:51.190
账户名

12:51.190 --> 12:52.190
这些内容展示

12:52.190 --> 12:53.190
然后这里面

12:53.190 --> 12:54.190
还有什么内容呢

12:55.190 --> 12:56.190
其实这里面

12:56.190 --> 12:58.190
还会有一个

12:58.190 --> 13:00.190
我们mapdata的一个使用

13:00.190 --> 13:01.190
那mapdata怎么来使用

13:01.190 --> 13:02.190
我们往下看

13:02.190 --> 13:04.190
首先这些基本的

13:04.190 --> 13:05.190
咱们就不说了

13:05.190 --> 13:06.190
一个里面有两个

13:06.190 --> 13:07.190
为什么有两个呢

13:07.190 --> 13:08.190
两个数据循环

13:08.190 --> 13:10.190
是不是正好就是

13:10.190 --> 13:12.190
我们这个里面的一行

13:12.190 --> 13:13.190
对不对

13:13.190 --> 13:14.190
那这个一行

13:14.190 --> 13:15.190
我们这样渲染的时候

13:15.190 --> 13:16.190
做了一个设议

13:16.190 --> 13:18.190
它是非常方便的

13:18.190 --> 13:19.190
比如说我们姓名

13:19.190 --> 13:20.190
和初始密码

13:20.190 --> 13:21.190
初始密码这个

13:21.190 --> 13:23.190
其实它是没办法进行展示的

13:23.190 --> 13:24.190
但这个是在我们

13:24.190 --> 13:25.190
界面渲染的时候

13:25.190 --> 13:26.190
来给他做一个调整

13:26.190 --> 13:27.190
就ok了

13:27.190 --> 13:28.190
极惯新增

13:28.190 --> 13:29.190
像这些都是

13:29.190 --> 13:31.190
表达输入项

13:31.190 --> 13:32.190
咱们就是

13:32.190 --> 13:33.190
隐铺的框

13:33.190 --> 13:34.190
那就不说了

13:34.190 --> 13:35.190
这里面还有一个

13:35.190 --> 13:36.190
入职的时间

13:36.190 --> 13:38.190
那对入职时间的处理

13:38.190 --> 13:40.190
这个我们是不是要看一下

13:40.190 --> 13:41.190
这是第一

13:41.190 --> 13:42.190
第二 第三

13:42.190 --> 13:43.190
第四个

13:44.190 --> 13:46.190
我们找到第四个数组

13:46.190 --> 13:47.190
第1个 第2个

13:47.190 --> 13:48.190
第3个 第4个

13:48.190 --> 13:49.190
把它打开

13:49.190 --> 13:50.190
打开之后

13:50.190 --> 13:52.190
首先它的Ruler

13:52.190 --> 13:54.190
这里面添加了一个Ruler

13:54.190 --> 13:55.190
这里面DateRuler

13:55.190 --> 13:57.190
我们可以不进行使用

13:57.190 --> 13:58.190
这是原来的职

13:58.190 --> 14:00.190
那什么时候使用Ruler呢

14:00.190 --> 14:01.190
一会儿因为

14:01.190 --> 14:02.190
我们已经有Ruler

14:02.190 --> 14:03.190
MapRuler了

14:03.190 --> 14:04.190
对不对

14:04.190 --> 14:05.190
有这个StuffRuler

14:05.190 --> 14:06.190
那我们直接一会儿

14:06.190 --> 14:07.190
就给它添加就可以了

14:07.190 --> 14:09.190
这个主要看什么呢

14:09.190 --> 14:10.190
RenderType

14:10.190 --> 14:11.190
它的RenderType

14:11.190 --> 14:12.190
是一个Date

14:12.190 --> 14:13.190
也就是说

14:13.190 --> 14:14.190
其实那你在选择的时候

14:14.190 --> 14:16.190
我们这个就是一个日期对象

14:16.190 --> 14:18.190
这个你要明确一下

14:18.190 --> 14:20.190
包括Item Name

14:20.190 --> 14:21.190
和Player Holder Value

14:21.190 --> 14:22.190
这些呢

14:22.190 --> 14:24.190
跟上面基本上是相同的

14:24.190 --> 14:26.190
然后我们再看一下

14:26.190 --> 14:28.190
这个性别选择这一块

14:28.190 --> 14:29.190
这个呢

14:29.190 --> 14:30.190
它就是一个下拉太单了

14:30.190 --> 14:31.190
对不对

14:31.190 --> 14:32.190
Slack的

14:32.190 --> 14:33.190
那性别选择这一块

14:33.190 --> 14:35.190
里面有什么

14:35.190 --> 14:36.190
它的RenderType

14:36.190 --> 14:38.190
就是我们的一个Slack

14:38.190 --> 14:39.190
同样的我把这个

14:39.190 --> 14:41.190
RenderRuler给它干掉

14:41.190 --> 14:43.190
然后里面Item Name

14:43.190 --> 14:44.190
这个时候

14:44.190 --> 14:46.190
我们有一个OptionData

14:46.190 --> 14:48.190
为什么要有一个OptionData

14:48.190 --> 14:50.190
OptionData原因是什么

14:50.190 --> 14:51.190
我们可以看一下

14:51.190 --> 14:53.190
OptionData里面有啥内容

14:53.190 --> 14:55.190
这个我们OptionData

14:55.190 --> 14:56.190
从哪过去的

14:56.190 --> 14:57.190
是不是MapData

14:57.190 --> 14:58.190
下面的一个什么

14:58.190 --> 15:00.190
我们找到这个

15:00.190 --> 15:01.190
MapData下面的Render

15:01.190 --> 15:03.190
代表着我们Option的一个

15:03.190 --> 15:04.190
选项

15:04.190 --> 15:05.190
那这里面Render有两项

15:05.190 --> 15:07.190
一个男和一个女

15:07.190 --> 15:08.190
那这样就是说

15:08.190 --> 15:10.190
我们在渲染下拉太单列表的时候

15:10.190 --> 15:12.190
你是不是把这个

15:12.190 --> 15:13.190
Render这个数组

15:13.190 --> 15:14.190
也给它携带过去了

15:14.190 --> 15:15.190
那这样就是

15:15.190 --> 15:17.190
方便我们进行一个什么

15:17.190 --> 15:18.190
Option的一个渲染

15:18.190 --> 15:19.190
对不对

15:19.190 --> 15:20.190
循环

15:20.190 --> 15:21.190
还有一些呢

15:21.190 --> 15:22.190
比如说雪莉

15:22.190 --> 15:23.190
像雪莉这个

15:23.190 --> 15:24.190
应该是比较多的

15:24.190 --> 15:25.190
我们可以看一下

15:25.190 --> 15:26.190
员工雪莉这一块

15:26.190 --> 15:27.190
那它使用的是

15:27.190 --> 15:28.190
MapAdocation

15:28.190 --> 15:30.190
然后婚姻状况

15:30.190 --> 15:31.190
使用MapData

15:31.190 --> 15:32.190
Marriage

15:32.190 --> 15:34.190
这个来做的一个处理

15:34.190 --> 15:35.190
那整个的这一块

15:35.190 --> 15:36.190
就是我们需要

15:36.190 --> 15:37.190
使用到数组的

15:37.190 --> 15:38.190
一个相关的内容

15:38.190 --> 15:39.190
然后这里面

15:39.190 --> 15:40.190
还有一些比较特殊的

15:40.190 --> 15:42.190
那特殊的是哪些呢

15:42.190 --> 15:43.190
比如说我们这个里面

15:43.190 --> 15:45.190
看到Render Type是引曝的

15:45.190 --> 15:46.190
但是我们这里面

15:46.190 --> 15:47.190
Style,DatePlay,NOW

15:47.190 --> 15:48.190
这是为啥

15:48.190 --> 15:49.190
因为我们看到

15:49.190 --> 15:50.190
部门这一块

15:50.190 --> 15:51.190
其实渲染的时候

15:51.190 --> 15:52.190
那你看

15:52.190 --> 15:54.190
它是用的引曝的文文框吗

15:54.190 --> 15:55.190
这个显然不是

15:55.190 --> 15:56.190
那它用的是什么呢

15:56.190 --> 15:57.190
我们可以往上找

15:57.190 --> 15:59.190
请选择部门

15:59.190 --> 16:01.190
这个Render Type叫Poper

16:01.190 --> 16:02.190
Render TypePoper

16:02.190 --> 16:03.190
指的是什么意思呢

16:03.190 --> 16:04.190
这个是我们自定义

16:04.190 --> 16:06.190
封装的一个下拉菜单

16:06.190 --> 16:08.190
那在这个下拉菜单

16:08.190 --> 16:09.190
渲染的时候

16:09.190 --> 16:10.190
我们获取值的时候

16:10.190 --> 16:11.190
因为我们知道

16:11.190 --> 16:13.190
想给它进行数据值传递

16:13.190 --> 16:15.190
这时候你肯定得传递

16:15.190 --> 16:17.190
我们的一个真实的

16:17.190 --> 16:18.190
比如说我们这里面

16:18.190 --> 16:19.190
要想修改它

16:19.190 --> 16:20.190
改成商品部

16:20.190 --> 16:22.190
你这个时候展示的

16:22.190 --> 16:23.190
是不是中文

16:23.190 --> 16:25.190
但是我们要去修改的时候

16:25.190 --> 16:26.190
还得传递一个什么

16:26.190 --> 16:28.190
商品部门的唯一爱地址

16:28.190 --> 16:29.190
那这个时候就尴尬了

16:29.190 --> 16:30.190
怎么办呢

16:30.190 --> 16:31.190
我们可以定义

16:31.190 --> 16:33.190
两个item name

16:33.190 --> 16:36.190
第一个叫itepartment name

16:36.190 --> 16:38.190
然后我们隐藏一个什么

16:38.190 --> 16:39.190
department

16:39.190 --> 16:40.190
这个department

16:40.190 --> 16:42.190
作为我们真实的

16:42.190 --> 16:44.190
需要获取到的id

16:44.190 --> 16:45.190
来进行一个

16:45.190 --> 16:47.190
像后端发送的这样一个操作

16:47.190 --> 16:49.190
那至于这个department name

16:49.190 --> 16:50.190
就是在我们前端

16:50.190 --> 16:52.190
进行一个渲染展示的时候

16:52.190 --> 16:54.190
使用到的一个内容就OK了

16:54.190 --> 16:55.190
这个就是

16:55.190 --> 16:57.190
我们做一个隐藏收获

16:57.190 --> 16:58.190
当然还有一种做法

16:58.190 --> 16:59.190
是什么呢

16:59.190 --> 17:01.190
我们可以把这个

17:01.190 --> 17:03.190
在点击测试部门之后

17:03.190 --> 17:04.190
那我们点击

17:04.190 --> 17:06.190
处发去渲染的时候

17:06.190 --> 17:07.190
先不让它进行复职

17:07.190 --> 17:09.190
什么时候让它复职呢

17:09.190 --> 17:10.190
它返回数据之后

17:10.190 --> 17:12.190
那我们重新的去渲染

17:12.190 --> 17:15.190
那重新处发重新渲染的时候

17:15.190 --> 17:18.190
它也能这个进行一个什么呢

17:18.190 --> 17:20.190
我们直接的准确的获取

17:20.190 --> 17:21.190
这么一个操作

17:21.190 --> 17:22.190
但这样呢

17:22.190 --> 17:23.190
反应速度啊

17:23.190 --> 17:24.190
相对的啊

17:24.190 --> 17:25.190
有一些慢

17:25.190 --> 17:26.190
那我们怎么办

17:26.190 --> 17:27.190
我直接选择完了

17:27.190 --> 17:29.190
就给它进行一个复职

17:29.190 --> 17:30.190
那这样速度啊

17:30.190 --> 17:31.190
就快一些

17:31.190 --> 17:34.190
所以说你可以搞两个隐藏的文本预养

17:34.190 --> 17:36.190
来保存真正的

17:36.190 --> 17:38.190
我们需要往后端传递的这样一个ID值

17:38.190 --> 17:39.190
并且呢

17:39.190 --> 17:40.190
它的渲染啊

17:40.190 --> 17:42.190
是使用poper这种形式

17:42.190 --> 17:44.190
最后一个比较特殊的

17:44.190 --> 17:46.190
就是我们这个员工招聘的一块

17:46.190 --> 17:47.190
员工招聘的一块呢

17:47.190 --> 17:49.190
它是一个upload的组件

17:49.190 --> 17:51.190
我们可以来看一眼

17:51.190 --> 17:52.190
最后一个这个ruler

17:52.190 --> 17:53.190
咱们暂时不要啊

17:53.190 --> 17:55.190
这里面有label tax的

17:55.190 --> 17:57.190
然后它的type是upload

17:57.190 --> 17:58.190
upload呢

17:58.190 --> 18:00.190
直接调用我们一会封装好的

18:00.190 --> 18:02.190
图片上传的这样一个组件

18:02.190 --> 18:04.190
就可以了啊

18:04.190 --> 18:06.190
以上那些就是我们需要的

18:06.190 --> 18:09.190
这个整个的stuff的静态数据啊

18:09.190 --> 18:11.190
那我们现在要做的事情

18:11.190 --> 18:13.190
就是给它做一个引入

18:13.190 --> 18:14.190
引入它呢

18:14.190 --> 18:16.190
我们可以给它配置一个别名啊

18:16.190 --> 18:18.190
比如说因为这个

18:18.190 --> 18:19.190
好多文件家都会使用这个

18:19.190 --> 18:21.190
stadic list的对不对

18:21.190 --> 18:23.190
那我们就给它来配置一下

18:23.190 --> 18:24.190
配置一下怎么配置呢

18:24.190 --> 18:26.190
我们这里面来写一下

18:26.190 --> 18:28.190
首先呢这个是

18:28.190 --> 18:30.190
stadic list对吧

18:30.190 --> 18:32.190
我们如果说去请求

18:32.190 --> 18:34.190
stadic list的就是src

18:34.190 --> 18:36.190
下面的stadic list的

18:36.190 --> 18:37.190
那在这个里面呢

18:37.190 --> 18:39.190
我们就可以来使用啊

18:39.190 --> 18:41.190
这个叫stuff list的

18:41.190 --> 18:43.190
stuff list的from

18:43.190 --> 18:44.190
从哪来

18:44.190 --> 18:46.190
那这个配完了别名

18:46.190 --> 18:47.190
硬设之后

18:47.190 --> 18:49.190
那我们就可以使用

18:49.190 --> 18:51.190
这种stadic list的形式

18:51.190 --> 18:52.190
对不对

18:52.190 --> 18:54.190
stadic list的下面的

18:54.190 --> 18:55.190
stuff list

18:55.190 --> 18:57.190
ok 这样就做了一个

18:57.190 --> 18:58.190
导入啊

18:58.190 --> 19:00.190
这里面少了一个t啊

19:00.190 --> 19:01.190
好了

19:01.190 --> 19:03.190
那这个处理完了之后呢

19:03.190 --> 19:04.190
我这里面做一个打印啊

19:04.190 --> 19:06.190
在这个里面打印一下

19:06.190 --> 19:08.190
stuff list的咱们在这也来看一下

19:08.190 --> 19:09.190
console

19:09.190 --> 19:10.190
那打印出来之后

19:10.190 --> 19:12.190
你会发现九个数组对吧

19:12.190 --> 19:13.190
九个数组

19:13.190 --> 19:14.190
然后数组里面

19:14.190 --> 19:15.190
每一项呢又是一个数组

19:15.190 --> 19:17.190
这是一个二维循环的一个数组

19:17.190 --> 19:18.190
那二维循环数组

19:18.190 --> 19:19.190
我们拿到它之后

19:19.190 --> 19:21.190
那现在就可以对它进行一个循

19:21.190 --> 19:23.190
首先我们form

19:23.190 --> 19:24.190
肯定不循环对吧

19:24.190 --> 19:25.190
那我们谁来循环呢

19:25.190 --> 19:26.190
我们这个肉啊

19:26.190 --> 19:27.190
对它呢

19:27.190 --> 19:29.190
肯定是要做循环处理的

19:29.190 --> 19:30.190
循环处理

19:30.190 --> 19:33.190
那我们直接的在这个里面

19:33.190 --> 19:34.190
来做

19:34.190 --> 19:35.190
或者说我们不叫stuff list的

19:35.190 --> 19:36.190
我们叫什么呢

19:36.190 --> 19:38.190
叫form list

19:38.190 --> 19:39.190
对吧

19:39.190 --> 19:40.190
给它定义这么一个名啊

19:40.190 --> 19:42.190
form list的在这来做

19:42.190 --> 19:44.190
然后呢咱们给它留点空间

19:44.190 --> 19:47.190
把这个空间留点之后

19:47.190 --> 19:49.190
这里面先写一个中阔号

19:49.190 --> 19:52.190
之后是我们的form list的

19:52.190 --> 19:55.190
这个里面我们就是点map

19:55.190 --> 19:59.190
然后这里面有item和index

19:59.190 --> 20:01.190
然后呢我们就给它retain

20:01.190 --> 20:02.190
retain出来的这个值

20:02.190 --> 20:05.190
那首先第一个就是我们那个肉对不对

20:05.190 --> 20:06.190
然后它先进入啊

20:06.190 --> 20:08.190
咱应该别管它抱错的问题

20:08.190 --> 20:09.190
一会呢咱们再调整

20:09.190 --> 20:11.190
一次的给它往里填充啊

20:11.190 --> 20:14.190
肉先带给它倒入进去之后

20:14.190 --> 20:15.190
那首先第一件事

20:15.190 --> 20:17.190
它因为它是群环对不对

20:17.190 --> 20:18.190
那为了配合我们地步算法

20:18.190 --> 20:21.190
这个里面我们要给它添加一个index

20:21.190 --> 20:23.190
添加完index之后

20:23.190 --> 20:26.190
那这个肉第一层群环使命就完成了

20:26.190 --> 20:27.190
接下来呢

20:27.190 --> 20:28.190
我们知道每个肉里面

20:28.190 --> 20:30.190
因为它是9个嘛对不对

20:30.190 --> 20:31.190
每个肉里面呢

20:31.190 --> 20:33.190
它还会有一个什么小的群环啊

20:33.190 --> 20:34.190
那小的群环呢

20:34.190 --> 20:36.190
其实我们这里面还可以再写

20:36.190 --> 20:38.190
小的群环就是我们这个item

20:38.190 --> 20:40.190
来进行群环了对不对

20:40.190 --> 20:41.190
那我们知道它是一个数组

20:41.190 --> 20:43.190
那我们这里面就可以写一下

20:43.190 --> 20:44.190
写一下怎么办呢

20:44.190 --> 20:47.190
继续的我们用中阔号的形式

20:47.190 --> 20:50.190
插入我们js的这个代码

20:50.190 --> 20:52.190
AR.map

20:52.190 --> 20:54.190
第二层群环item

20:54.190 --> 20:57.190
这个里面呢是item和index

20:57.190 --> 20:59.190
或者是我们childindex

20:59.190 --> 21:00.190
ok进入之后

21:00.190 --> 21:01.190
那这个里面

21:01.190 --> 21:04.190
我们开始真正的存放这个COL

21:04.190 --> 21:05.190
对不对

21:05.190 --> 21:06.190
那我们就把COL

21:06.190 --> 21:07.190
其实这个时候你会发现

21:07.190 --> 21:09.190
我们用两套是不是有点多余了

21:09.190 --> 21:11.190
我们直接的使用一套

21:11.190 --> 21:12.190
是不是就可以了

21:12.190 --> 21:13.190
也就是说在这个里面

21:13.190 --> 21:15.190
来进行COL的存放

21:15.190 --> 21:17.190
然后每一个COL里面

21:17.190 --> 21:19.190
这个呢都会有一个formitem

21:19.190 --> 21:20.190
对吧

21:20.190 --> 21:22.190
那我们就把这个formitem

21:22.190 --> 21:23.190
给它放进来

21:23.190 --> 21:24.190
放进来之后

21:24.190 --> 21:25.190
那现在这套

21:25.190 --> 21:26.190
上面的结构

21:26.190 --> 21:28.190
是不是就等于下面的结构了

21:28.190 --> 21:30.190
你定义好精彩数据之后

21:30.190 --> 21:31.190
那这个时候

21:31.190 --> 21:32.190
我们直接的去劝

21:32.190 --> 21:33.190
这种结构是不是就OK了

21:33.190 --> 21:34.190
咱们来看一下

21:34.190 --> 21:35.190
现在的效果

21:35.190 --> 21:37.190
刷新一下界面

21:37.190 --> 21:39.190
咱们先把那个打印值

21:39.190 --> 21:40.190
已经干掉了

21:40.190 --> 21:41.190
ok

21:41.190 --> 21:43.190
咱们来看关于展示的时候

21:44.190 --> 21:45.190
好尴尬呀

21:45.190 --> 21:47.190
什么也没展示对不对

21:47.190 --> 21:48.190
那我们直接的这个

21:48.190 --> 21:49.190
Label用户名

21:49.190 --> 21:51.190
没展示的原因是啥

21:51.190 --> 21:53.190
我们在里层循环的时候

21:53.190 --> 21:55.190
应该是不是得有一个return

21:55.190 --> 21:58.190
我们没对它做return操作对不对

21:58.190 --> 21:59.190
那return操作的时候

21:59.190 --> 22:01.190
我们使用一个什么

22:01.190 --> 22:02.190
使用一个扩号

22:02.190 --> 22:04.190
给它进行一个包裹

22:04.190 --> 22:06.190
我们这个里面是

22:06.190 --> 22:07.190
AR.map

22:07.190 --> 22:10.190
应该是在对map处理的时候

22:10.190 --> 22:12.190
我们是不是要对它

22:12.190 --> 22:13.190
来做一个操作

22:13.190 --> 22:14.190
也就是说return

22:14.190 --> 22:15.190
return出来谁

22:15.190 --> 22:17.190
才是我们里面的

22:17.190 --> 22:18.190
COL对吧

22:18.190 --> 22:19.190
然后呢

22:19.190 --> 22:20.190
我们格式化一下

22:20.190 --> 22:21.190
那这样呢

22:21.190 --> 22:23.190
看着结构就对了对吧

22:23.190 --> 22:25.190
我们直接的给他缩小一下

22:25.190 --> 22:27.190
把他空格都给他干掉

22:27.190 --> 22:28.190
咱们来分析一下

22:28.190 --> 22:31.190
首先外层是那个大循环

22:31.190 --> 22:32.190
9次

22:32.190 --> 22:33.190
然后里面呢

22:33.190 --> 22:35.190
分别每次执行了2次

22:35.190 --> 22:36.190
每一次小循环

22:36.190 --> 22:38.190
每一次大循环里面的小循环

22:38.190 --> 22:40.190
它又单独的执行了2次

22:40.190 --> 22:42.190
因为它是一个数组嘛

22:42.190 --> 22:43.190
对吧

22:43.190 --> 22:44.190
好的

22:44.190 --> 22:45.190
经过这个操作之后

22:45.190 --> 22:47.190
那我们这里面刷新一下

22:47.190 --> 22:48.190
刷新一下之后

22:48.190 --> 22:49.190
这个有一个爆错

22:49.190 --> 22:50.190
应该是

22:50.190 --> 22:51.190
爆错的原因是什么

22:51.190 --> 22:53.190
说我们需要一个

22:53.190 --> 22:55.190
什么唯一的K值

22:55.190 --> 22:56.190
唯一的K值

22:56.190 --> 22:57.190
我们没有添加

22:57.190 --> 22:58.190
是给没给谁添加

22:58.190 --> 22:59.190
因为这个里面

22:59.190 --> 23:00.190
是不是也循环生成的

23:00.190 --> 23:01.190
那我这里面

23:01.190 --> 23:02.190
给他指定一个

23:02.190 --> 23:03.190
K啊

23:03.190 --> 23:04.190
K等于我们的

23:04.190 --> 23:05.190
child index

23:05.190 --> 23:06.190
是不是这样就可以

23:06.190 --> 23:08.190
那咱们再来做一次

23:08.190 --> 23:09.190
来看一下

23:09.190 --> 23:10.190
走你

23:10.190 --> 23:12.760
到这个里面

23:12.760 --> 23:13.760
我们一点击

23:13.760 --> 23:14.760
你会发现这里面

23:14.760 --> 23:15.760
是不是全部都渲染进来了

23:15.760 --> 23:17.760
全部都渲染进来之后

23:17.760 --> 23:18.760
那其实这个

23:18.760 --> 23:19.760
隐铺的是不是就多余了

23:19.760 --> 23:21.760
隐铺的我们肯定是不需要的

23:21.760 --> 23:22.760
那我们需要什么呢

23:22.760 --> 23:24.760
我们需要的内容

23:24.760 --> 23:25.760
其实我们已经

23:25.760 --> 23:26.760
是不是准备好了

23:26.760 --> 23:28.760
那在这个里面

23:28.760 --> 23:30.760
我们其实可以知道

23:30.760 --> 23:32.760
现在我想去渲染什么类型

23:32.760 --> 23:34.760
因为我们有RenderTab

23:34.760 --> 23:35.760
对不对

23:35.760 --> 23:36.760
那所以说这个里面

23:36.760 --> 23:37.760
怎么办呢

23:37.760 --> 23:39.760
我们就是根据他的这个

23:39.760 --> 23:40.760
RenderTab

23:40.760 --> 23:42.760
来进行一个渲染

23:42.760 --> 23:43.760
就OK了

23:43.760 --> 23:45.760
我们可以先来打印一下

23:45.760 --> 23:46.760
比如说在这个里面

23:46.760 --> 23:47.760
我们就不需要打印

23:47.760 --> 23:48.760
请输入用户名了

23:48.760 --> 23:49.760
对吧

23:49.760 --> 23:50.760
放埋特末

23:50.760 --> 23:51.760
我们展示什么呢

23:51.760 --> 23:52.760
这个里面

23:52.760 --> 23:53.760
我们直接把他的

23:53.760 --> 23:55.760
埃特末点RenderTab

23:55.760 --> 23:57.760
给他做一个打印

23:57.760 --> 23:58.760
因为这是一个中文

23:58.760 --> 23:59.760
对吧

23:59.760 --> 24:00.760
你看

24:00.760 --> 24:01.760
隐铺的

24:01.760 --> 24:02.760
这里面说了

24:02.760 --> 24:03.760
slag的

24:03.760 --> 24:04.760
和这个

24:04.760 --> 24:05.760
我们这个有poper

24:05.760 --> 24:06.760
对不对

24:06.760 --> 24:08.760
这个里面都定义这么多了

24:08.760 --> 24:09.760
那我们直接的

24:09.760 --> 24:10.760
就来创建一个

24:10.760 --> 24:11.760
比如说我们定一个

24:11.760 --> 24:12.760
静态的这个

24:12.760 --> 24:14.760
眩类型的这么一个

24:14.760 --> 24:15.760
表单集合

24:15.760 --> 24:16.760
我们这里面

24:16.760 --> 24:18.760
写一下Consta

24:18.760 --> 24:20.760
这里面是formerDate

24:20.760 --> 24:21.760
formerDate集合

24:21.760 --> 24:22.760
那这个时候

24:22.760 --> 24:23.760
我们直接的

24:23.760 --> 24:24.760
在这个里面

24:24.760 --> 24:25.760
来定义

24:25.760 --> 24:26.760
是不是就可以了

24:26.760 --> 24:27.760
首先是一个什么

24:27.760 --> 24:28.760
input

24:28.760 --> 24:29.760
input

24:29.760 --> 24:30.760
那我这里面指定一个什么

24:30.760 --> 24:31.760
item

24:31.760 --> 24:32.760
对吧

24:32.760 --> 24:33.760
那这个里面

24:33.760 --> 24:35.760
我们接收一个item

24:35.760 --> 24:36.760
写一个方法

24:36.760 --> 24:37.760
item

24:37.760 --> 24:38.760
这个里面

24:38.760 --> 24:39.760
我们就去选什么

24:39.760 --> 24:40.760
我们直接把这个input

24:40.760 --> 24:41.760
给做一个输出

24:41.760 --> 24:42.760
是不是就可以了

24:42.760 --> 24:43.760
也就是说这个里面

24:43.760 --> 24:44.760
如果说你要是

24:44.760 --> 24:45.760
input的类型

24:45.760 --> 24:46.760
我们直接就使用

24:46.760 --> 24:48.760
这个input

24:48.760 --> 24:49.760
组件

24:49.760 --> 24:50.760
input的组件

24:50.760 --> 24:51.760
我们直接

24:51.760 --> 24:52.760
使用一个b盒就可以了

24:52.760 --> 24:53.760
那这样

24:53.760 --> 24:54.760
我们是不是就有了

24:54.760 --> 24:55.760
有了之后

24:55.760 --> 24:56.760
那这里面

24:56.760 --> 24:57.760
随便给他写一个

24:57.760 --> 24:58.760
play the holder

24:58.760 --> 24:59.760
play the holder

24:59.760 --> 25:00.760
给他一个指吧

25:00.760 --> 25:02.760
等于一个hello

25:02.760 --> 25:03.760
word

25:03.760 --> 25:04.760
ok 这个就定义完了

25:04.760 --> 25:05.760
定义完了之后

25:05.760 --> 25:06.760
那你看

25:06.760 --> 25:07.760
现在你有这么一个对象

25:07.760 --> 25:08.760
对吧

25:08.760 --> 25:09.760
你并且知道

25:09.760 --> 25:10.760
这个item软件

25:10.760 --> 25:11.760
tap

25:11.760 --> 25:12.760
那我们其实调用对象的时候

25:12.760 --> 25:13.760
是不是

25:13.760 --> 25:14.760
formal data

25:14.760 --> 25:15.760
是不是

25:15.760 --> 25:16.760
然后是什么

25:16.760 --> 25:17.760
input

25:17.760 --> 25:18.760
那这样

25:18.760 --> 25:19.760
是不是等于

25:19.760 --> 25:20.760
调用这个对象里面

25:20.760 --> 25:22.760
这个input的这个方法

25:22.760 --> 25:24.760
调用input的方法

25:24.760 --> 25:25.760
那直接在这里面

25:25.760 --> 25:26.760
是不是也把item

25:26.760 --> 25:27.760
给他进行了一个传递

25:27.760 --> 25:28.760
对吧

25:28.760 --> 25:29.760
就是这么一个过程

25:29.760 --> 25:30.760
然后呢

25:30.760 --> 25:31.760
那我们直接

25:31.760 --> 25:32.760
这块怎么办

25:32.760 --> 25:33.760
我们就给他

25:33.760 --> 25:34.760
调整

25:34.760 --> 25:35.760
他应该是选谁

25:35.760 --> 25:36.760
就是我们

25:36.760 --> 25:37.760
form data

25:37.760 --> 25:38.760
下面的一个什么

25:38.760 --> 25:39.760
item

25:39.760 --> 25:41.760
点render tap

25:41.760 --> 25:42.760
那咱们再来看一下

25:42.760 --> 25:43.760
form data

25:43.760 --> 25:44.760
点render tap

25:44.760 --> 25:45.760
然后这个时候呢

25:45.760 --> 25:46.760
给他

25:46.760 --> 25:48.760
用一个大括号

25:48.760 --> 25:49.760
进行一个包裹

25:49.760 --> 25:51.760
包裹之后有包错

25:51.760 --> 25:52.760
有包错是什么呢

25:52.760 --> 25:53.760
这个里面

25:53.760 --> 25:54.760
form data

25:54.760 --> 25:55.760
点render tap

25:55.760 --> 25:57.760
那这个时候是一个函数

25:57.760 --> 25:58.760
首先来解决

25:58.760 --> 25:59.760
是一个函数的问题

25:59.760 --> 26:00.760
我们得调用他一下

26:00.760 --> 26:01.760
对吧

26:01.760 --> 26:02.760
调用他一下

26:02.760 --> 26:03.760
现在还有包错

26:03.760 --> 26:04.760
包错原因是什么

26:04.760 --> 26:05.760
如果说

26:05.760 --> 26:06.760
里面有好多的

26:06.760 --> 26:07.760
渲染类型的时候

26:07.760 --> 26:09.760
那你现在不能单独的

26:09.760 --> 26:11.760
就去渲染这样一个类型

26:11.760 --> 26:12.760
对吧

26:12.760 --> 26:13.760
你得把所有的

26:13.760 --> 26:14.760
都给他做一个渲染

26:14.760 --> 26:16.760
然后这里面404了

26:16.760 --> 26:17.760
尴尬了

26:17.760 --> 26:18.760
我们直接的这个

26:18.760 --> 26:20.760
里面重新来一下

26:20.760 --> 26:21.760
刷新一下之后

26:21.760 --> 26:22.760
到这个里面一展示

26:22.760 --> 26:23.760
有包错

26:23.760 --> 26:24.760
有包错这样

26:24.760 --> 26:25.760
我们先给他停掉

26:25.760 --> 26:26.760
停掉咱们

26:26.760 --> 26:27.760
就可以看到了

26:27.760 --> 26:28.760
因为item

26:28.760 --> 26:29.760
点render tap

26:29.760 --> 26:30.760
他一字脑的方式

26:30.760 --> 26:31.760
是因为什么

26:31.760 --> 26:32.760
他只定义了

26:32.760 --> 26:33.760
一个input node对吧

26:33.760 --> 26:34.760
那比如说

26:34.760 --> 26:35.760
我们给他全部都定一全

26:35.760 --> 26:37.760
这样看着就方便了

26:37.760 --> 26:38.760
咱们已知的

26:38.760 --> 26:40.760
这里面有poper

26:40.760 --> 26:41.760
对不对

26:41.760 --> 26:43.760
我们把poper也定一下

26:43.760 --> 26:45.760
poper也是获取

26:45.760 --> 26:46.760
item

26:46.760 --> 26:48.760
然后poper获取item

26:48.760 --> 26:49.760
的时候

26:49.760 --> 26:50.760
我们直接给他

26:50.760 --> 26:52.760
先去瑞灯一个什么

26:52.760 --> 26:53.760
我们也让他

26:53.760 --> 26:54.760
是input

26:54.760 --> 26:56.760
咱们也来做这个事

26:56.760 --> 26:57.760
poper item

26:57.760 --> 26:58.760
input

26:58.760 --> 26:59.760
对吧

26:59.760 --> 27:00.760
然后还有一个什么类型

27:00.760 --> 27:01.760
继续往前写

27:01.760 --> 27:03.760
除了这种poper之外

27:03.760 --> 27:05.760
我们还有slag的类型

27:05.760 --> 27:07.760
slag他同样的

27:07.760 --> 27:10.760
我们也给他指定item

27:10.760 --> 27:11.760
然后一会咱们再去改

27:11.760 --> 27:13.760
首先保证他不包错

27:13.760 --> 27:14.760
然后

27:14.760 --> 27:16.760
这个也是我们的input

27:16.760 --> 27:18.760
一次的给他进行一个填充

27:18.760 --> 27:20.760
当slag他处理完成之后

27:20.760 --> 27:21.760
那最后一个

27:21.760 --> 27:22.760
就是我们的

27:22.760 --> 27:23.760
不是最后一个

27:23.760 --> 27:25.760
还有一个图片上传的

27:25.760 --> 27:26.760
我们这个是data

27:26.760 --> 27:27.760
data类型

27:27.760 --> 27:28.760
同样的

27:28.760 --> 27:30.760
也给他添加一个input

27:30.760 --> 27:32.760
让他先提前选出来

27:32.760 --> 27:33.760
之后还有一个

27:33.760 --> 27:34.760
最后一个了

27:34.760 --> 27:36.760
就是我们的图片上传

27:36.760 --> 27:38.760
图片上传的rander type

27:38.760 --> 27:39.760
它叫什么

27:39.760 --> 27:40.760
appload

27:40.760 --> 27:41.760
appload

27:41.760 --> 27:44.760
这里面指定一个item

27:44.760 --> 27:46.760
ok 那这样定义好了之后

27:46.760 --> 27:47.760
同样的

27:47.760 --> 27:49.760
我也是夹在这个input

27:50.760 --> 27:51.760
那最基本的

27:51.760 --> 27:52.760
现在我们想一下

27:52.760 --> 27:54.760
formitem render type

27:54.760 --> 27:56.760
之后我去调用这个方法

27:56.760 --> 27:58.760
那他现在肯定不能又包错

27:58.760 --> 27:59.760
对不对

27:59.760 --> 28:00.760
并且我把这个item

28:00.760 --> 28:01.760
给他传过去

28:01.760 --> 28:03.760
好 传递过去item之后

28:03.760 --> 28:04.760
现在没有包错

28:04.760 --> 28:05.760
我们来试一下

28:05.760 --> 28:06.760
量个像

28:06.760 --> 28:07.760
对不对

28:07.760 --> 28:08.760
现在是不是都过来吗

28:08.760 --> 28:09.760
都过来

28:09.760 --> 28:10.760
我们就一次的

28:10.760 --> 28:11.760
来进行一个调整

28:11.760 --> 28:13.760
首先来说

28:13.760 --> 28:15.760
我们这个input

28:15.760 --> 28:16.760
它展示

28:16.760 --> 28:18.760
我们对它的调整

28:18.760 --> 28:19.760
应该怎么调整

28:19.760 --> 28:20.760
你现在既然都能拿到

28:20.760 --> 28:21.760
这个item了

28:21.760 --> 28:22.760
那你拿到item

28:22.760 --> 28:24.760
你是不是要做点事

28:24.760 --> 28:25.760
做什么事

28:25.760 --> 28:26.760
我们直接这个里面

28:26.760 --> 28:27.760
如果说

28:27.760 --> 28:29.760
当你现在失去焦点之后

28:29.760 --> 28:31.760
那你是不是得有一个什么

28:31.760 --> 28:32.760
触发

28:32.760 --> 28:34.760
一个我们修改的这样一个操作

28:34.760 --> 28:35.760
对不对

28:35.760 --> 28:37.760
那我先给他添加一个指

28:37.760 --> 28:38.760
placeholder

28:38.760 --> 28:39.760
这个就简单了

28:39.760 --> 28:40.760
placeholder

28:40.760 --> 28:41.760
我们直接的这里面

28:41.760 --> 28:42.760
是不是已经定义了

28:42.760 --> 28:44.760
就要给他一个动态指

28:45.760 --> 28:46.760
item

28:46.760 --> 28:47.760
点一个什么呢

28:47.760 --> 28:49.760
我们这个placeholder

28:49.760 --> 28:51.760
当时写的是这个value

28:51.760 --> 28:52.760
对不对

28:52.760 --> 28:53.760
VLUE

28:53.760 --> 28:54.760
是VL

28:54.760 --> 28:55.760
VLUE

28:55.760 --> 28:56.760
咱们来看一下

28:56.760 --> 28:57.760
这个里面

28:57.760 --> 28:58.760
item default

28:58.760 --> 29:00.760
placeholder value

29:00.760 --> 29:01.760
VL

29:01.760 --> 29:02.760
没问题

29:02.760 --> 29:03.760
那我们来看一下

29:03.760 --> 29:04.760
请输入员工姓名

29:04.760 --> 29:06.760
请输入员工姓名

29:06.760 --> 29:07.760
然后这个用户名

29:07.760 --> 29:08.760
全是用户名了

29:08.760 --> 29:09.760
这事尴尬了

29:09.760 --> 29:11.760
那我们先解决全是用户名

29:11.760 --> 29:12.760
那个吧

29:12.760 --> 29:13.760
看着都头疼

29:13.760 --> 29:14.760
对不对

29:14.760 --> 29:15.760
那全是用户名

29:15.760 --> 29:16.760
这个你怎么来解决

29:16.760 --> 29:17.760
那现在这个

29:17.760 --> 29:18.760
放埋特末

29:18.760 --> 29:19.760
我们这个里面加Label

29:19.760 --> 29:21.760
那就不可能是全是用户名了

29:21.760 --> 29:23.760
我们直接的给他

29:23.760 --> 29:24.760
添加一个什么呢

29:24.760 --> 29:25.760
就是我们刚才

29:25.760 --> 29:26.760
看到那个数组里面

29:26.760 --> 29:27.760
定义好的

29:27.760 --> 29:28.760
我们这个叫

29:28.760 --> 29:32.760
item.LabelText

29:32.760 --> 29:33.760
对吧

29:33.760 --> 29:34.760
我们把这个LabelText

29:34.760 --> 29:37.760
给他进行一个添加

29:37.760 --> 29:39.760
然后是不是LabelText的

29:39.760 --> 29:40.760
那咱们得看一下

29:40.760 --> 29:42.760
到stuff list的里面

29:42.760 --> 29:44.760
这里面有一个LabelText

29:44.760 --> 29:46.760
OK 感觉没问题

29:46.760 --> 29:47.760
LabelText

29:47.760 --> 29:49.760
好 那现在

29:49.760 --> 29:50.760
姓名账户名

29:50.760 --> 29:51.760
联系电话

29:51.760 --> 29:52.760
请输入机关

29:52.760 --> 29:53.760
这是不是就有了

29:53.760 --> 29:54.760
然后这个里面是

29:54.760 --> 29:55.760
请输入员工姓名

29:55.760 --> 29:57.760
请输入员工账户名

29:57.760 --> 29:59.760
他们俩是有区别的

29:59.760 --> 30:00.760
一个是员工姓名

30:00.760 --> 30:01.760
一个是员工账户名

30:01.760 --> 30:02.760
当然这个

30:02.760 --> 30:03.760
出水值咱们还没添呢

30:03.760 --> 30:04.760
咱们先把这个

30:04.760 --> 30:06.760
炫的这个

30:06.760 --> 30:07.760
里面的内容

30:07.760 --> 30:08.760
给他做一个处理

30:08.760 --> 30:10.760
然后我们这个里面

30:10.760 --> 30:11.760
再继续看

30:11.760 --> 30:12.760
如果说出水花密码的时候

30:12.760 --> 30:14.760
那这个肯定是dataable

30:14.760 --> 30:15.760
你不可能去

30:15.760 --> 30:17.760
在这里面修改密码

30:17.760 --> 30:18.760
修改密码

30:18.760 --> 30:19.760
因为我们直接的

30:19.760 --> 30:20.760
在忘记密码里面

30:20.760 --> 30:21.760
我们不认识修改密码

30:21.760 --> 30:22.760
忘记密码

30:22.760 --> 30:23.760
那你就可以对密码

30:23.760 --> 30:24.760
进行一个修改

30:24.760 --> 30:26.760
在这个登录模块里面

30:26.760 --> 30:28.760
我们已经把它实现了

30:28.760 --> 30:29.760
所以说这个里面

30:29.760 --> 30:30.760
你炫出来了

30:30.760 --> 30:31.760
怎么办

30:31.760 --> 30:33.760
我直接的让你停掉

30:33.760 --> 30:34.760
就可以了

30:34.760 --> 30:36.760
那这个play the holder

30:36.760 --> 30:37.760
我们这里面

30:37.760 --> 30:38.760
得做一个判断了

30:38.760 --> 30:42.760
假如说item.item

30:42.760 --> 30:43.760
name

30:43.760 --> 30:45.760
如果说你要等于password

30:45.760 --> 30:46.760
成立吗

30:46.760 --> 30:47.760
成立的话

30:47.760 --> 30:48.760
那这个里面

30:48.760 --> 30:50.760
我就给你一个提示信息

30:50.760 --> 30:52.760
提示信息内容是啥

30:52.760 --> 30:53.760
就是告诉你

30:53.760 --> 30:54.760
请在登录界面

30:54.760 --> 30:56.760
完成密码修改就可以了

30:56.760 --> 30:57.760
提示这么一个字

30:57.760 --> 31:01.760
请在登录界面

31:01.760 --> 31:03.760
完成修改

31:03.760 --> 31:04.760
好的 定义完了

31:04.760 --> 31:05.760
定义完成之后

31:05.760 --> 31:08.760
如果说你要是password的话

31:08.760 --> 31:09.760
那这个时候

31:09.760 --> 31:10.760
我就让你dataable

31:10.760 --> 31:11.760
就OK了

31:11.760 --> 31:12.760
那这个时候

31:12.760 --> 31:14.760
我再指定一个dataable的属性

31:14.760 --> 31:15.760
dataable属性

31:15.760 --> 31:17.760
如果说你要是等于password

31:17.760 --> 31:18.760
那你就显示为出

31:18.760 --> 31:19.760
就可以了

31:19.760 --> 31:20.760
那这样

31:20.760 --> 31:22.760
这哥们儿是不是就被pass掉了

31:22.760 --> 31:23.760
对不对

31:23.760 --> 31:24.760
那他就不用给我展示了

31:24.760 --> 31:25.760
不用给我展示之后

31:25.760 --> 31:27.760
那咱们继续看其他的

31:27.760 --> 31:29.760
像这些姓名

31:29.760 --> 31:30.760
照顾名什么的

31:30.760 --> 31:31.760
那这些

31:31.760 --> 31:32.760
我们再做一个处理

31:32.760 --> 31:33.760
首先

31:33.760 --> 31:34.760
这个里面

31:34.760 --> 31:35.760
我们如果说

31:35.760 --> 31:36.760
对他处理完成之后

31:36.760 --> 31:37.760
那假如说的实际焦点

31:37.760 --> 31:38.760
实际焦点

31:38.760 --> 31:39.760
是不是要提交

31:39.760 --> 31:40.760
对吧

31:40.760 --> 31:41.760
那我们这个实际焦点

31:41.760 --> 31:42.760
我们直接的

31:42.760 --> 31:43.760
在这个里面

31:43.760 --> 31:44.760
来做一件事

31:45.760 --> 31:46.760
实际焦点

31:46.760 --> 31:48.760
得对他进行一个表单检测

31:48.760 --> 31:49.760
那我们这里面

31:49.760 --> 31:51.760
用户提交前的准备

31:51.760 --> 31:53.760
那我们这里面写一个

31:53.760 --> 31:54.760
onbluar

31:54.760 --> 31:56.760
先给他指定这个事件

31:56.760 --> 31:57.760
onbluar

31:57.760 --> 31:58.760
等于一个什么呢

31:58.760 --> 31:59.760
我们这个

31:59.760 --> 32:01.760
before send a data check

32:01.760 --> 32:02.760
before check

32:02.760 --> 32:04.760
也就是说提交之前的一个检测

32:06.760 --> 32:08.760
给他定一下

32:09.760 --> 32:11.760
before checked

32:11.760 --> 32:14.260
好了

32:14.260 --> 32:16.260
那咱们这个里面

32:16.260 --> 32:17.260
就创建一下

32:17.260 --> 32:18.260
这个叫什么

32:18.260 --> 32:20.260
我们提交表单

32:20.260 --> 32:22.260
之前的一个验证

32:22.260 --> 32:24.260
提交表单之前验证

32:24.260 --> 32:25.260
那你验证什么呢

32:25.260 --> 32:26.260
首先如果说

32:26.260 --> 32:27.260
你要是用个名

32:27.260 --> 32:28.260
和手机号的话

32:28.260 --> 32:29.260
那这个时候

32:29.260 --> 32:30.260
我得验证

32:30.260 --> 32:31.260
后端有没有

32:31.260 --> 32:32.260
如果有的话

32:32.260 --> 32:33.260
我还不让你提交呢

32:33.260 --> 32:34.260
对吧

32:34.260 --> 32:35.260
就是这么一个过程

32:35.260 --> 32:36.260
至于其他的

32:36.260 --> 32:37.260
咱们先不考虑

32:37.260 --> 32:38.260
我们这里面写一下

32:38.260 --> 32:39.260
const

32:41.260 --> 32:43.260
const before check

32:43.260 --> 32:44.260
等于

32:44.260 --> 32:45.260
我们这里面

32:45.260 --> 32:46.260
先写一下

32:46.260 --> 32:47.260
这样

32:47.260 --> 32:48.260
那我们第一个input

32:48.260 --> 32:50.260
这个是不是就ok了

32:50.260 --> 32:51.260
input搞定之后

32:51.260 --> 32:53.260
那我们继续来啊

32:53.260 --> 32:54.260
咱们poper

32:54.260 --> 32:55.260
先往后点

32:55.260 --> 32:56.260
然后呢咱们先

32:56.260 --> 32:57.260
把这个slekt

32:57.260 --> 32:58.260
给处理了

32:58.260 --> 32:59.260
slekt相对来讲

32:59.260 --> 33:00.260
比这个poper

33:00.260 --> 33:01.260
要简单一些

33:01.260 --> 33:03.260
slekt怎么来处理呢

33:03.260 --> 33:04.260
我们slekt对他的处理

33:04.260 --> 33:06.260
其实就是使用我们

33:06.260 --> 33:07.260
刚才导入的这个

33:07.260 --> 33:08.260
slekt组件

33:08.260 --> 33:09.260
是不是就可以了

33:09.260 --> 33:10.260
也就是说

33:10.260 --> 33:11.260
我们不可能用这种input

33:11.260 --> 33:12.260
对吧

33:12.260 --> 33:14.260
我们定义好这个slekt

33:14.260 --> 33:15.260
有开始有比合

33:15.260 --> 33:16.260
然后这里面

33:16.260 --> 33:17.260
我们需要使用

33:17.260 --> 33:18.260
他的这个option

33:18.260 --> 33:19.260
那我这个option

33:19.260 --> 33:20.260
我就要给他

33:20.260 --> 33:21.260
从slekt里面

33:21.260 --> 33:23.260
输出const

33:24.260 --> 33:26.260
这个是option

33:26.260 --> 33:27.260
然后呢

33:27.260 --> 33:28.260
我们把它给

33:28.260 --> 33:29.260
解构出来option

33:29.260 --> 33:31.260
等于我们的slekt

33:31.260 --> 33:32.260
从这个里面获取

33:32.260 --> 33:34.260
获取这个option组件之后

33:34.260 --> 33:35.260
那你这里面

33:35.260 --> 33:36.260
就可以来进行

33:36.260 --> 33:37.260
一个使用了

33:37.260 --> 33:38.260
option

33:38.260 --> 33:39.260
给他添加上

33:39.260 --> 33:41.260
添加上这个option之后

33:41.260 --> 33:42.260
那我们去

33:42.260 --> 33:43.260
渲染的时候

33:43.260 --> 33:44.260
咱们直接渲染

33:44.260 --> 33:45.260
这个item

33:45.260 --> 33:46.260
是不是就可以了

33:46.260 --> 33:47.260
也就是说里面

33:47.260 --> 33:49.260
因为它这个item

33:49.260 --> 33:50.260
从哪来

33:50.260 --> 33:51.260
你这个你得想一下

33:51.260 --> 33:52.260
对不对

33:52.260 --> 33:53.260
那我们这个item

33:53.260 --> 33:54.260
从哪来

33:54.260 --> 33:55.260
其实我们直接的

33:55.260 --> 33:56.260
去map

33:56.260 --> 33:57.260
就可以了吧

33:57.260 --> 33:59.260
我们这个里面item

33:59.260 --> 34:00.260
谁去map

34:00.260 --> 34:01.260
因为我们这里面

34:01.260 --> 34:02.260
指定好了一个东西

34:02.260 --> 34:03.260
这个叫什么呢

34:03.260 --> 34:04.260
我们可以看一下

34:04.260 --> 34:06.260
像一般的下拉菜单

34:06.260 --> 34:07.260
我们都指定了

34:07.260 --> 34:08.260
一个option data

34:08.260 --> 34:09.260
对不对

34:09.260 --> 34:10.260
那这个时候

34:10.260 --> 34:13.260
我们就可以使用item.option data

34:13.260 --> 34:14.260
然后呢

34:14.260 --> 34:15.260
一个数组

34:15.260 --> 34:16.260
那我们就指定它的这个

34:16.260 --> 34:17.260
map方法

34:17.260 --> 34:19.260
然后是这个

34:19.260 --> 34:21.260
data和index

34:23.260 --> 34:24.260
或者说我们直接

34:24.260 --> 34:25.260
叫它value

34:25.260 --> 34:26.260
因为它这个值

34:26.260 --> 34:27.260
比较单一

34:27.260 --> 34:28.260
然后我们在这个里面

34:28.260 --> 34:30.260
return出去一个值

34:30.260 --> 34:31.260
return这个值

34:31.260 --> 34:32.260
就是可以使这个option

34:32.260 --> 34:33.260
对吧

34:33.260 --> 34:34.260
option首先

34:34.260 --> 34:36.260
你要给它指定一个k值

34:36.260 --> 34:38.260
k等于我们的这个index

34:38.260 --> 34:39.260
然后呢

34:39.260 --> 34:41.260
我们指定一个value

34:41.260 --> 34:42.260
value值就等于

34:42.260 --> 34:43.260
我们的这个index值

34:43.260 --> 34:44.260
之后呢

34:44.260 --> 34:45.260
我们这个里面

34:45.260 --> 34:46.260
去渲染的时候

34:46.260 --> 34:48.260
就是我们这个value

34:48.260 --> 34:49.260
这样是不是

34:49.260 --> 34:50.260
就搞定了

34:50.260 --> 34:51.260
也就是说

34:51.260 --> 34:52.260
把这个vl

34:52.260 --> 34:53.260
给它做一个输出

34:53.260 --> 34:54.260
这样我们来看一下

34:54.260 --> 34:55.260
然后呢

34:55.260 --> 34:56.260
我们这个

34:56.260 --> 34:57.260
其实它失去焦点

34:57.260 --> 34:58.260
也要做事

34:58.260 --> 34:59.260
这样吧

34:59.260 --> 35:00.260
我们先让它

35:00.260 --> 35:01.260
进行一个展示

35:01.260 --> 35:02.260
就ok了

35:02.260 --> 35:03.260
slag的里面

35:03.260 --> 35:04.260
同样的

35:04.260 --> 35:05.260
我们也给它指定

35:05.260 --> 35:06.260
play the holder

35:06.260 --> 35:07.260
这个也是必不可少的

35:07.260 --> 35:08.260
play the holder

35:08.260 --> 35:12.260
等于我们的item.play the holder value

35:12.260 --> 35:13.260
好了

35:13.260 --> 35:14.260
把这个定义完了

35:14.260 --> 35:15.260
失去焦点

35:15.260 --> 35:16.260
on blur

35:16.260 --> 35:17.260
也就是说

35:17.260 --> 35:18.260
它发

35:18.260 --> 35:19.260
或者是它这个

35:19.260 --> 35:20.260
发生改变的时候

35:20.260 --> 35:21.260
我们这个就是

35:21.260 --> 35:23.260
给它绑定的是on change

35:23.260 --> 35:24.260
实践

35:24.260 --> 35:25.260
on change 实践

35:25.260 --> 35:26.260
它同样的去

35:26.260 --> 35:28.260
是before checked

35:28.260 --> 35:29.260
也去做一个检测

35:29.260 --> 35:30.260
就可以了

35:30.260 --> 35:31.260
好吧

35:31.260 --> 35:32.260
那这个是我们的

35:32.260 --> 35:34.260
下拉菜单的一个逻辑

35:36.260 --> 35:37.260
点击

35:37.260 --> 35:38.260
点击这个里面

35:38.260 --> 35:39.260
有爆错

35:39.260 --> 35:40.260
我们来看一下

35:40.260 --> 35:41.260
这个爆错原因

35:41.260 --> 35:43.260
我们再刷新一下

35:43.260 --> 35:45.260
刷新一下之后

35:45.260 --> 35:46.260
到这个里面

35:46.260 --> 35:47.260
我们一点击

35:47.260 --> 35:48.260
你看这个时候

35:48.260 --> 35:49.260
没有问题了

35:49.260 --> 35:50.260
下拉菜单

35:50.260 --> 35:51.260
咱得找

35:51.260 --> 35:52.260
这个里面

35:52.260 --> 35:53.260
是不是有性别

35:53.260 --> 35:54.260
咱们男和女

35:54.260 --> 35:55.260
然后把下拉菜单的

35:55.260 --> 35:57.260
统一做一个验证

35:57.260 --> 35:58.260
员工学历

35:58.260 --> 35:59.260
包括婚姻状况

35:59.260 --> 36:00.260
这些是不是都可以

36:00.260 --> 36:01.260
也就是说

36:01.260 --> 36:02.260
这些指

36:02.260 --> 36:03.260
我们是

36:03.260 --> 36:04.260
下拉菜单

36:04.260 --> 36:05.260
基本上都搞定了

36:05.260 --> 36:06.260
搞定下拉菜单之后

36:06.260 --> 36:08.260
咱们继续往下写

36:08.260 --> 36:09.260
这里面还有谁呢

36:09.260 --> 36:10.260
我们这个data

36:10.260 --> 36:11.260
优先级

36:11.260 --> 36:12.260
咱们比poper

36:12.260 --> 36:13.260
再高一些

36:13.260 --> 36:14.260
因为poper

36:14.260 --> 36:15.260
不是特别好

36:15.260 --> 36:16.260
进行一个处理的

36:16.260 --> 36:18.260
咱们给他放在这个里面

36:18.260 --> 36:19.260
那这个里面

36:19.260 --> 36:20.260
我们想一下

36:20.260 --> 36:21.260
data的时候

36:21.260 --> 36:22.260
我们是不是就要

36:22.260 --> 36:23.260
使用data peaker了

36:23.260 --> 36:24.260
对吧

36:24.260 --> 36:25.260
data peaker

36:25.260 --> 36:26.260
我们这里面

36:26.260 --> 36:28.260
就给他拿过来

36:28.260 --> 36:29.260
放在这

36:29.260 --> 36:30.260
这些其实是

36:30.260 --> 36:31.260
都能用得到的

36:31.260 --> 36:32.260
data peaker

36:32.260 --> 36:33.260
这个里面

36:33.260 --> 36:34.260
给他一个b盒

36:34.260 --> 36:35.260
然后我们

36:35.260 --> 36:37.260
同样的play the holder

36:37.260 --> 36:40.260
进行一个添加

36:40.260 --> 36:41.260
第一个是play the holder

36:41.260 --> 36:42.260
第二个

36:42.260 --> 36:44.260
我们直接的data peaker

36:44.260 --> 36:45.260
你是否需要

36:45.260 --> 36:46.260
给他一些样式

36:46.260 --> 36:47.260
如果说你不需要

36:47.260 --> 36:48.260
给他样式

36:48.260 --> 36:49.260
那我们直接的

36:49.260 --> 36:50.260
同时

36:50.260 --> 36:51.260
也就是说on change

36:51.260 --> 36:52.260
的时候

36:52.260 --> 36:53.260
直接的

36:53.260 --> 36:54.260
在这个里面

36:54.260 --> 36:55.260
也让他去处罚

36:55.260 --> 36:56.260
这个事情

36:56.260 --> 36:57.260
是不是可以了

36:57.260 --> 36:58.260
把它也给添加一下

36:58.260 --> 36:59.260
咱们看一下

36:59.260 --> 37:00.260
日期组件

37:00.260 --> 37:01.260
日期组件

37:01.260 --> 37:02.260
小了一点是吧

37:02.260 --> 37:04.260
小了一点是

37:04.260 --> 37:05.260
这个好弄

37:05.260 --> 37:06.260
我们直接

37:06.260 --> 37:07.260
来一个style

37:07.260 --> 37:09.260
让他宽度是百分之百

37:09.260 --> 37:10.260
就可以了

37:10.260 --> 37:11.260
因为他本身

37:11.260 --> 37:12.260
就是长的比较小

37:12.260 --> 37:13.260
那我们这里面

37:13.260 --> 37:15.260
宽度是百分之百

37:15.260 --> 37:16.260
好了

37:16.260 --> 37:17.260
宽度百分之百

37:17.260 --> 37:19.260
这个应该是一个自幅创

37:19.260 --> 37:20.260
我们把它

37:20.260 --> 37:22.260
给他做一个包裹

37:22.260 --> 37:23.260
包裹完成之后

37:23.260 --> 37:24.260
那咱们来看一下

37:24.260 --> 37:25.260
这个里面

37:27.260 --> 37:28.260
刷清一下界面

37:28.260 --> 37:31.260
然后我们到这个关语

37:31.260 --> 37:32.260
打开之后

37:32.260 --> 37:33.260
入之时间

37:33.260 --> 37:34.260
现在是不是也比较长

37:34.260 --> 37:35.260
对吧

37:35.260 --> 37:36.260
也是有了

37:36.260 --> 37:37.260
有了之后

37:37.260 --> 37:38.260
那这个我们

37:38.260 --> 37:39.260
处理完成之后

37:39.260 --> 37:40.260
继续了

37:40.260 --> 37:41.260
现在就来到了

37:41.260 --> 37:43.260
我们这个poper组件

37:43.260 --> 37:44.260
poper组件长什么样

37:44.260 --> 37:46.260
首先我们先看一下

37:46.260 --> 37:47.260
我们一点击

37:47.260 --> 37:48.260
这个时候

37:48.260 --> 37:49.260
就会出现一个

37:49.260 --> 37:51.260
下拉的这么一个列表

37:51.260 --> 37:53.260
那这个里面怎么来实现

37:53.260 --> 37:54.260
其实这个实现

37:54.260 --> 37:55.260
既要借助

37:55.260 --> 37:57.260
我们安底战的这个组件

37:57.260 --> 37:58.260
还需要

37:58.260 --> 38:00.260
我们这个引曝的组件

38:00.260 --> 38:01.260
再添加一些

38:01.260 --> 38:02.260
其他特殊处理

38:02.260 --> 38:03.260
本身上

38:03.260 --> 38:04.260
它是一个引曝的组件

38:04.260 --> 38:05.260
但这个引曝的组件

38:05.260 --> 38:07.260
后面有一个加号

38:07.260 --> 38:08.260
也就是说

38:08.260 --> 38:10.260
你这个引曝的组件

38:10.260 --> 38:12.260
你要给它添加一个属性

38:12.260 --> 38:13.260
这个属性叫什么

38:13.260 --> 38:14.260
叫

38:15.260 --> 38:16.260
属性

38:16.260 --> 38:17.260
我们可以找一下

38:18.260 --> 38:19.260
在这个安底战里面

38:19.260 --> 38:20.260
我们搜索

38:20.260 --> 38:21.260
input

38:21.260 --> 38:23.260
input的输入框

38:23.260 --> 38:24.260
只看输入框就行

38:24.260 --> 38:25.260
然后输入框

38:25.260 --> 38:26.260
你看他后面

38:26.260 --> 38:27.260
是不是都有内容

38:27.260 --> 38:28.260
有内容

38:28.260 --> 38:29.260
我们就从API里面

38:29.260 --> 38:30.260
来去找

38:30.260 --> 38:31.260
这里面有一个

38:31.260 --> 38:33.260
代标签的input

38:33.260 --> 38:35.260
设置后置标签

38:35.260 --> 38:36.260
然后

38:37.260 --> 38:38.260
input

38:38.260 --> 38:39.260
就是什么

38:39.260 --> 38:40.260
设置前置的标签

38:40.260 --> 38:41.260
也就是说

38:41.260 --> 38:42.260
前面后面

38:42.260 --> 38:44.260
其实都可以添加内容

38:44.260 --> 38:45.260
那我直接在

38:45.260 --> 38:46.260
这个里面定义的时候

38:46.260 --> 38:47.260
也就是说

38:47.260 --> 38:48.260
我创建的时候

38:48.260 --> 38:49.260
其实poper

38:49.260 --> 38:50.260
是创建的

38:50.260 --> 38:51.260
这个引曝的框

38:51.260 --> 38:53.260
但是这个引曝的框

38:53.260 --> 38:55.260
它不是说单纯的引曝的

38:55.260 --> 38:56.260
它要添加一个属性

38:56.260 --> 38:57.260
叫

38:57.260 --> 38:59.260
and after的一个属性

38:59.260 --> 39:00.260
我们先把

39:00.260 --> 39:01.260
play the holder

39:01.260 --> 39:02.260
给做一个调整

39:02.260 --> 39:03.260
把它改一下

39:03.260 --> 39:06.260
这个是item.play the holder value

39:07.260 --> 39:08.260
好了

39:08.260 --> 39:09.260
改完它之后

39:09.260 --> 39:10.260
咱们继续来编写

39:11.260 --> 39:12.260
首先这个

39:12.260 --> 39:13.260
我们

39:13.260 --> 39:15.260
它其实是不可以输入的

39:15.260 --> 39:16.260
你看一下

39:16.260 --> 39:17.260
在这个里面

39:17.260 --> 39:19.260
它在这输入是没戏的

39:19.260 --> 39:20.260
所以说

39:20.260 --> 39:21.260
它只是一个展示

39:21.260 --> 39:22.260
那展示

39:22.260 --> 39:24.260
我们就让它read only

39:24.260 --> 39:25.260
作为一个

39:25.260 --> 39:26.260
指读属性

39:26.260 --> 39:28.260
来进行一个存在

39:28.260 --> 39:29.260
就可以了

39:29.260 --> 39:30.260
所以说

39:30.260 --> 39:31.260
我们给它添加一个read only

39:31.260 --> 39:32.260
这是第2个

39:32.260 --> 39:34.260
之后我们就可以添加

39:34.260 --> 39:35.260
一个什么

39:35.260 --> 39:36.260
这个and after

39:36.260 --> 39:37.260
and after

39:37.260 --> 39:39.260
我们肯定是等于一个

39:39.260 --> 39:41.260
对象的形式

39:41.260 --> 39:42.260
然后这个里面

39:42.260 --> 39:44.260
它说不能添加标签

39:44.260 --> 39:45.260
对不对

39:45.260 --> 39:46.260
我们就给它

39:46.260 --> 39:47.260
其实就是往这里面

39:47.260 --> 39:48.260
添加

39:48.260 --> 39:49.260
节点

39:49.260 --> 39:50.260
是不是就可以了

39:50.260 --> 39:51.260
所以说

39:51.260 --> 39:52.260
我们添加节点

39:52.260 --> 39:54.260
怎么来进行一个添加

39:54.260 --> 39:56.260
我们直接在这个里面

39:56.260 --> 39:57.260
就指定一个组架

39:57.260 --> 39:58.260
因为这个组架

39:58.260 --> 39:59.260
你想

39:59.260 --> 40:00.260
在这里面

40:00.260 --> 40:01.260
我们看一下

40:01.260 --> 40:02.260
首先这个时候

40:02.260 --> 40:03.260
我们是渲染的部门

40:03.260 --> 40:04.260
然后这块

40:04.260 --> 40:06.260
我们又渲染的一个什么呢

40:06.260 --> 40:07.260
直级

40:07.260 --> 40:08.260
包括我们以后

40:08.260 --> 40:09.260
还可能会对员工

40:09.260 --> 40:10.260
做一个处理

40:10.260 --> 40:11.260
我们来看一下

40:12.260 --> 40:14.260
找到一个有员工的组架

40:14.260 --> 40:16.260
部门直级

40:16.260 --> 40:17.260
然后这个是部门

40:17.260 --> 40:18.260
部门里面也没有

40:18.260 --> 40:19.260
我们找一下

40:19.260 --> 40:20.260
员工

40:20.260 --> 40:21.260
姓名

40:21.260 --> 40:22.260
员工

40:22.260 --> 40:23.260
机销考核

40:23.260 --> 40:24.260
这样

40:24.260 --> 40:25.260
请出入搜索的员工

40:25.260 --> 40:26.260
那这块员工

40:26.260 --> 40:27.260
是不是还有可能展示

40:27.260 --> 40:28.260
所以说

40:28.260 --> 40:30.260
它的复用性也很强

40:30.260 --> 40:32.260
那既然你复用性很强的话

40:32.260 --> 40:33.260
怎么办

40:33.260 --> 40:34.260
我们直接就来

40:34.260 --> 40:36.260
把这个组架给你定一下

40:36.260 --> 40:37.260
我可能会有一个什么

40:37.260 --> 40:39.260
Job Popper

40:39.260 --> 40:40.260
那我这里面

40:40.260 --> 40:41.260
来创建一下

40:42.260 --> 40:44.260
把它拿过来

40:44.260 --> 40:46.260
我们Input一个什么

40:46.260 --> 40:48.260
Job Popper

40:48.260 --> 40:49.260
也就是说

40:49.260 --> 40:51.260
下拉的这么一个Poper

40:51.260 --> 40:52.260
然后服装

40:52.260 --> 40:53.260
从哪来

40:53.260 --> 40:54.260
现在肯定没有

40:54.260 --> 40:57.260
那就从我们的Component

40:57.260 --> 41:00.220
Components下面

41:00.220 --> 41:01.220
我们就定一个

41:01.220 --> 41:02.220
Job Popper

41:02.220 --> 41:03.220
然后呢

41:03.220 --> 41:04.220
你一会儿呢

41:04.220 --> 41:05.220
就创建一个这个

41:05.220 --> 41:06.220
是不是就可以了

41:06.220 --> 41:08.220
我们把这个定一下

41:08.220 --> 41:10.220
到这个Components

41:10.220 --> 41:11.220
找到它

41:11.220 --> 41:13.220
专门处理我们下拉的

41:13.220 --> 41:14.220
那这里面定一个文件

41:14.220 --> 41:15.220
叫Job Popper

41:16.220 --> 41:18.220
index.jsx

41:18.220 --> 41:20.220
然后是给它写一下

41:20.220 --> 41:21.220
这个名字

41:21.220 --> 41:22.220
我们给它改一下

41:22.220 --> 41:23.220
叫Job Popper

41:23.220 --> 41:24.220
然后这里面

41:24.220 --> 41:25.220
我们写一句话

41:25.220 --> 41:26.220
叫下拉菜单

41:26.220 --> 41:30.220
下拉菜单

41:30.220 --> 41:32.220
先看它是否可行

41:32.220 --> 41:33.220
之后呢

41:33.220 --> 41:35.220
我们创建完这个Job Popper之后

41:35.220 --> 41:36.220
其实我们是不是

41:36.220 --> 41:38.220
就需要使用到它了

41:38.220 --> 41:39.220
使用到它

41:39.220 --> 41:40.220
怎么办呢

41:40.220 --> 41:42.220
我们直接的在这个里面

41:42.220 --> 41:43.220
Poper里面

41:43.220 --> 41:45.220
Idle After的时候

41:45.220 --> 41:46.220
我们直接去给它

41:46.220 --> 41:47.220
来进行一个调用

41:47.220 --> 41:48.220
就可以了

41:48.220 --> 41:49.220
组件的一个

41:49.220 --> 41:50.220
实力化的一个

41:50.220 --> 41:52.220
调用Job Popper

41:52.220 --> 41:53.220
那这就定一晚了

41:53.220 --> 41:54.220
我们来看一下

41:54.220 --> 41:56.220
它的效果

41:56.220 --> 41:57.220
然后我们从这个里面

41:57.220 --> 41:58.220
可以看到

41:58.220 --> 41:59.220
现在展示

41:59.220 --> 42:01.220
就是下拉菜单了

42:01.220 --> 42:02.220
但是我们需要展示的

42:02.220 --> 42:04.220
肯定不是下拉菜单

42:04.220 --> 42:05.220
应该展示什么效果

42:05.220 --> 42:06.220
我们来可以看一下

42:06.220 --> 42:07.220
比如说这个就有

42:07.220 --> 42:09.220
我们直接从这个里面

42:09.220 --> 42:10.220
当我点击的时候

42:10.220 --> 42:11.220
这个时候就会展示

42:11.220 --> 42:12.220
我们这里面

42:12.220 --> 42:13.220
什么调整直击

42:13.220 --> 42:14.220
像这些内容

42:14.220 --> 42:15.220
对不对

42:15.220 --> 42:16.220
其实它是一个

42:16.220 --> 42:17.220
气泡弹窗

42:17.220 --> 42:18.220
气泡弹窗

42:18.220 --> 42:19.220
怎么来做

42:19.220 --> 42:20.220
我们到这个里面

42:20.220 --> 42:21.220
来找一下

42:21.220 --> 42:22.220
气泡弹窗

42:22.220 --> 42:23.220
其实也有

42:23.220 --> 42:24.220
Poper

42:24.220 --> 42:25.220
我们直接写一下

42:25.220 --> 42:26.220
POPO

42:26.220 --> 42:27.220
VIA

42:27.220 --> 42:28.220
气泡卡片对吧

42:28.220 --> 42:29.220
好了

42:29.220 --> 42:30.220
那找到气泡卡片之后

42:30.220 --> 42:32.220
这里面还有一些

42:32.220 --> 42:33.220
位置展示

42:33.220 --> 42:34.220
Baltarm

42:34.220 --> 42:35.220
还有Baltarm Right

42:35.220 --> 42:37.220
Baltarm Left

42:37.220 --> 42:38.220
这些是不是都有

42:38.220 --> 42:39.220
那我们就给它

42:39.220 --> 42:41.220
做一个引入就可以了

42:41.220 --> 42:43.220
那我们怎么来做呢

42:43.220 --> 42:44.220
现在就是

42:44.220 --> 42:45.220
引泡的Poper

42:45.220 --> 42:46.220
这是第一步

42:46.220 --> 42:47.220
对吧

42:47.220 --> 42:48.220
也必须要给它

42:48.220 --> 42:49.220
进行一个加载

42:49.220 --> 42:50.220
放在哪儿

42:50.220 --> 42:51.220
我们这里面

42:51.220 --> 42:52.220
不定一好了吗

42:52.220 --> 42:54.220
就把它给做一个倒入

42:54.220 --> 42:55.220
Import

42:55.220 --> 42:57.220
我们这里面指定Poper

42:57.220 --> 42:58.220
写一下

42:58.220 --> 42:59.220
POPO

42:59.220 --> 43:00.220
VIA

43:00.220 --> 43:02.220
从我们的5米里面

43:02.220 --> 43:04.220
给它做一个倒入

43:04.220 --> 43:05.220
Sorry

43:05.220 --> 43:06.220
应该是从我们的

43:06.220 --> 43:07.220
安的地里面

43:07.220 --> 43:08.220
给它引入

43:08.220 --> 43:09.220
引入之后

43:09.220 --> 43:10.220
这个时候

43:10.220 --> 43:11.220
我们就可以使用它了

43:11.220 --> 43:12.220
使用它的规则

43:12.220 --> 43:13.220
其实也非常简单

43:13.220 --> 43:14.220
然后我们知道

43:14.220 --> 43:15.220
你想使用它之前

43:15.220 --> 43:17.220
现在你先明确一件事

43:17.220 --> 43:18.220
你前面

43:18.220 --> 43:19.220
是不是还有一个

43:19.220 --> 43:20.220
小加号

43:20.220 --> 43:21.220
对吧

43:21.220 --> 43:22.220
再添加一下

43:22.220 --> 43:23.220
在这个里面

43:23.220 --> 43:24.220
我们可以看一下

43:24.220 --> 43:25.220
这个前面

43:25.220 --> 43:26.220
是不是有一个小加号

43:26.220 --> 43:27.220
那这个加号怎么来吧

43:27.220 --> 43:29.220
我们直接这个结构

43:29.220 --> 43:30.220
就分为两层

43:30.220 --> 43:32.220
这个就使用一个空标签

43:32.220 --> 43:34.220
空标签里面

43:34.220 --> 43:35.220
第一个是我们的加号

43:35.220 --> 43:36.220
我们这里面

43:36.220 --> 43:38.220
使用一个死判

43:38.220 --> 43:39.220
死判里面

43:39.220 --> 43:40.220
定一个加号

43:40.220 --> 43:42.220
加号完成之后

43:42.220 --> 43:43.220
那这个里面

43:43.220 --> 43:46.220
下面才是我们的Poper

43:46.220 --> 43:47.220
我们这里面

43:47.220 --> 43:48.220
指定一下

43:48.220 --> 43:49.220
这个叫Poper

43:49.220 --> 43:50.220
好

43:50.220 --> 43:51.220
或者之后

43:51.220 --> 43:52.220
那这个里面

43:52.220 --> 43:53.220
其实它有好多内容的

43:53.220 --> 43:54.220
所以说

43:54.220 --> 43:55.220
这里面给它一个

43:55.220 --> 43:56.220
闭合标签

43:56.220 --> 43:57.220
这里面承载内容

43:57.220 --> 43:58.220
其实是不少的

43:58.220 --> 44:00.220
包括我们的一些

44:00.220 --> 44:01.220
列表像

44:01.220 --> 44:02.220
或者其他的

44:02.220 --> 44:03.220
那我们这里面

44:03.220 --> 44:06.220
先给它一个叫气泡弹窗

44:06.220 --> 44:08.220
咱们先让它在这显示

44:08.220 --> 44:10.220
气泡弹窗

44:11.220 --> 44:12.220
OK 处理完了

44:12.220 --> 44:13.220
处理完了之后

44:13.220 --> 44:15.220
咱们看咱们这个行不行

44:15.220 --> 44:16.220
到这个里面

44:16.220 --> 44:17.220
走你

44:17.220 --> 44:18.220
又是爆错

44:18.220 --> 44:19.220
咱们刷新一下

44:19.220 --> 44:21.220
我们这里面点击

44:21.220 --> 44:22.220
点击的时候

44:22.220 --> 44:23.220
这个应该是有一个

44:23.220 --> 44:24.220
气泡弹窗

44:24.220 --> 44:25.220
然后我一划过

44:25.220 --> 44:26.220
这个就有了

44:26.220 --> 44:27.220
对不对

44:27.220 --> 44:28.220
划过就有

44:28.220 --> 44:29.220
这个不太合适

44:29.220 --> 44:30.220
而且

44:30.220 --> 44:31.220
它在上面展示

44:31.220 --> 44:32.220
那我这个

44:32.220 --> 44:33.220
要给它调整一下

44:33.220 --> 44:35.220
调整一下怎么调整呢

44:35.220 --> 44:36.220
我们就给Poper

44:36.220 --> 44:37.220
添加一个属性

44:37.220 --> 44:38.220
首先

44:38.220 --> 44:39.220
规定它的方向

44:39.220 --> 44:41.220
方向是Placement

44:43.220 --> 44:44.220
Placement

44:44.220 --> 44:45.220
我给它规定一下

44:45.220 --> 44:46.220
叫什么呢

44:46.220 --> 44:47.220
我们在这个

44:47.220 --> 44:48.220
下面右下角展示

44:48.220 --> 44:50.220
我就等于Baltarm Rate

44:51.220 --> 44:52.220
Baltarm Rate

44:52.220 --> 44:53.220
你看这里面是不是有

44:53.220 --> 44:55.220
那我就给它添加进去

44:55.220 --> 44:56.220
添加进去之后

44:56.220 --> 44:57.220
那这个弹窗

44:57.220 --> 44:58.220
直接在这一块

44:58.220 --> 44:59.220
它就给我输出

44:59.220 --> 45:00.220
气泡弹窗

45:00.220 --> 45:01.220
这不对

45:01.220 --> 45:02.220
对吧

45:02.220 --> 45:03.220
那我们直接要给它添加一个什么

45:03.220 --> 45:05.220
添加一个Title值

45:05.220 --> 45:08.220
这里面我们指定一个Title

45:08.220 --> 45:09.220
Title

45:09.220 --> 45:11.220
我们这个就叫一个什么

45:11.220 --> 45:13.220
我们给它规定一个搜索

45:13.220 --> 45:14.220
行不行

45:14.220 --> 45:17.220
把这里面Title指定一个搜索

45:18.220 --> 45:19.220
好

45:19.220 --> 45:21.220
然后像现在这个里面

45:21.220 --> 45:22.220
应该是

45:22.220 --> 45:23.220
气泡弹窗反正最后

45:23.220 --> 45:24.220
你得在里面

45:24.220 --> 45:25.220
给我进行一个展示

45:25.220 --> 45:26.220
对不对

45:26.220 --> 45:28.220
你现在是肯定不能展示的

45:28.220 --> 45:29.220
然后咱们再来看

45:29.220 --> 45:30.220
那这个时候

45:30.220 --> 45:31.220
你会发现搜索出来了

45:31.220 --> 45:33.220
然后这个气泡弹窗

45:33.220 --> 45:34.220
一直是展示的

45:34.220 --> 45:36.220
这个显然不对

45:36.220 --> 45:38.220
那不对的原因是什么呢

45:38.220 --> 45:39.220
其实我们这个里面

45:39.220 --> 45:41.220
我们对它做处理的时候

45:41.220 --> 45:43.220
我们把Count

45:43.220 --> 45:44.220
想放在这个里面

45:44.220 --> 45:46.220
其实不是特别对

45:46.220 --> 45:47.220
我们怎么来做呢

45:47.220 --> 45:49.220
这个时候我们可以在这

45:49.220 --> 45:50.220
如果说一会儿

45:50.220 --> 45:51.220
我们想添加内容的话

45:51.220 --> 45:53.220
那我们直接的在这里面

45:53.220 --> 45:54.220
指定一个Count的

45:54.220 --> 45:55.220
Count的我们这里面

45:55.220 --> 45:56.220
等于一个什么

45:56.220 --> 46:00.220
写一个气泡弹窗

46:00.220 --> 46:01.220
那这样我们写一下

46:01.220 --> 46:02.220
来你看

46:02.220 --> 46:03.220
现在它是不是就没有了

46:03.220 --> 46:04.220
我这个没有了

46:04.220 --> 46:06.220
但是现在你会发现

46:06.220 --> 46:07.220
也尴尬了

46:07.220 --> 46:08.220
尴尬原因是什么

46:08.220 --> 46:09.220
我也打不开的了

46:09.220 --> 46:11.220
刚才是滑过就能触发

46:11.220 --> 46:13.220
现在它是啥东西也没有了

46:13.220 --> 46:14.220
啥东西也没有

46:14.220 --> 46:15.220
是原因是啥的

46:15.220 --> 46:16.220
原因就是说

46:16.220 --> 46:18.220
我们对它的一个处理

46:18.220 --> 46:19.220
其实这里面

46:19.220 --> 46:20.220
我们得有一个触发点

46:20.220 --> 46:21.220
那你看

46:21.220 --> 46:22.220
能不能把这个加号

46:22.220 --> 46:23.220
放在这

46:23.220 --> 46:24.220
也就是说这里面

46:24.220 --> 46:25.220
定一个死判

46:25.220 --> 46:26.220
死判加号

46:26.220 --> 46:27.220
就专门展示它的

46:27.220 --> 46:29.220
咱们再来试一下

46:29.220 --> 46:30.220
然后这个Poper

46:30.220 --> 46:31.220
是它里面的内容

46:31.220 --> 46:32.220
加号是作为

46:32.220 --> 46:33.220
它里面存放的内容

46:33.220 --> 46:34.220
一展示

46:34.220 --> 46:36.220
那你看现在是不是就有了

46:36.220 --> 46:38.220
然后它这个触发时机

46:38.220 --> 46:39.220
我们也可以给它

46:39.220 --> 46:40.220
进行一个调整

46:40.220 --> 46:41.220
就是说你触发的时候

46:41.220 --> 46:44.220
别总是在这个加号

46:44.220 --> 46:46.220
我鼠标滑过的时候处发

46:46.220 --> 46:48.220
我们在什么时候处发呢

46:48.220 --> 46:50.220
就是想让它在这个

46:50.220 --> 46:52.220
我们直接点击的时候

46:52.220 --> 46:54.220
对它进行一个处发

46:54.220 --> 46:56.220
需要这种效果呢

46:56.220 --> 46:58.220
其实实现起来也非常的简单

46:58.220 --> 46:59.220
我们只需要给它添加

46:59.220 --> 47:01.220
一些相应的属性就可以了

47:01.220 --> 47:03.220
我们找到这个气泡卡片

47:03.220 --> 47:04.220
那气泡卡片里面

47:04.220 --> 47:05.220
其实这里面

47:05.220 --> 47:06.220
有一个Click密

47:06.220 --> 47:07.220
也就是说

47:07.220 --> 47:08.220
点击的时候可以处发

47:08.220 --> 47:09.220
那在这个里面

47:09.220 --> 47:11.220
它有一个Trigger Click

47:11.220 --> 47:13.220
我们给它添加属性

47:13.220 --> 47:14.220
到这个里面

47:14.220 --> 47:15.220
Trigger Click

47:15.220 --> 47:17.220
Trigger Click之后

47:17.220 --> 47:19.220
我们再来做一下这个事情

47:19.220 --> 47:20.220
然后把控制台

47:20.220 --> 47:23.220
我可以提前先关闭一下

47:23.220 --> 47:24.220
打开一个

47:24.220 --> 47:25.220
打开一个之后

47:25.220 --> 47:26.220
那我在这个里面

47:26.220 --> 47:27.220
点击处发了

47:27.220 --> 47:29.220
但点击处发有两个问题

47:29.220 --> 47:30.220
第一呢

47:30.220 --> 47:31.220
咱们得给它一个小手提示

47:31.220 --> 47:32.220
对不对

47:32.220 --> 47:33.220
第二呢

47:33.220 --> 47:34.220
你看我点击其他位置

47:34.220 --> 47:36.220
它的这个处发都实现不了

47:36.220 --> 47:37.220
所以说呢

47:37.220 --> 47:38.220
这个怎么办呢

47:38.220 --> 47:39.220
我们得提前给它做一个调整

47:39.220 --> 47:41.220
也就是说你这个死判加号

47:41.220 --> 47:42.220
是不是有点太小

47:42.220 --> 47:43.220
那这个怎么来做处理

47:43.220 --> 47:45.220
给它来进行一个样式的添加

47:45.220 --> 47:46.220
就可以了

47:46.220 --> 47:47.220
比如说呢

47:47.220 --> 47:48.220
我们这里面

47:48.220 --> 47:49.220
给它一个Class Name

47:49.220 --> 47:50.220
这个叫

47:50.220 --> 47:52.220
Idecon一个Icon

47:52.220 --> 47:54.220
对这个Idecon

47:54.220 --> 47:56.220
我们进行一个简单的样式处理

47:56.220 --> 47:57.220
那Input

47:57.220 --> 47:58.220
我们点杠

47:58.220 --> 47:59.220
这个里面

47:59.220 --> 48:01.220
index.less文件

48:01.220 --> 48:02.220
指定一个less文件

48:02.220 --> 48:03.220
指定less文件

48:03.220 --> 48:04.220
那你这里面

48:04.220 --> 48:05.220
就得创建一个

48:05.220 --> 48:06.220
index.less

48:06.220 --> 48:08.220
OK 定义完成之后

48:08.220 --> 48:10.220
把这个类名添加一下

48:10.220 --> 48:12.220
首先给它一个Position

48:12.220 --> 48:13.220
Apps Loot

48:13.220 --> 48:14.220
就可以

48:14.220 --> 48:15.220
Position Apps Loot之后

48:15.220 --> 48:17.220
让它宽度100%

48:17.220 --> 48:18.220
然后呢

48:18.220 --> 48:20.220
给它一个高度100%

48:20.220 --> 48:21.220
咱们再来看一下

48:21.220 --> 48:22.220
那我们这个呢

48:22.220 --> 48:24.220
可以对它进行一个继续调整

48:24.220 --> 48:26.220
那我们直接给它一个

48:26.220 --> 48:28.220
Left Length

48:28.220 --> 48:29.220
然后呢

48:29.220 --> 48:30.220
给它一个Top Length

48:30.220 --> 48:31.220
简单的调整

48:31.220 --> 48:32.220
一下样式

48:32.220 --> 48:34.220
Dateplay Flex

48:34.220 --> 48:36.220
给它一个Flex布局

48:36.220 --> 48:38.220
然后Jasit Content

48:38.220 --> 48:41.220
给它一个Center

48:43.220 --> 48:44.220
再给它一个Center

48:44.220 --> 48:46.220
OK 那这个就处理完了

48:46.220 --> 48:47.220
处理完成之后

48:47.220 --> 48:48.220
那现在是不是可以了

48:48.220 --> 48:49.220
然后再给它一个小爽

48:49.220 --> 48:50.220
虽然有点小

48:50.220 --> 48:51.220
那你这个

48:51.220 --> 48:52.220
如果说

48:52.220 --> 48:53.220
你觉得小的话

48:53.220 --> 48:54.220
你再给它一个拍定值

48:54.220 --> 48:55.220
是不是可以

48:55.220 --> 48:56.220
比如说点击

48:56.220 --> 48:57.220
任何一个位置

48:57.220 --> 48:58.220
这样就都可以了

48:58.220 --> 48:59.220
对吧

48:59.220 --> 49:00.220
好的 那这个处理完成之后

49:00.220 --> 49:01.220
那咱们继续回到

49:01.220 --> 49:03.220
我们这个主代码里面

49:03.220 --> 49:04.220
主代码是哪一个

49:04.220 --> 49:05.220
是Detail Form

49:05.220 --> 49:06.220
Detail Form

49:06.220 --> 49:07.220
对它处理完成之后

49:07.220 --> 49:09.220
那我们接下来

49:09.220 --> 49:10.220
就是说

49:10.220 --> 49:11.220
把这个初始值

49:11.220 --> 49:12.220
先给它进行一个渲染

49:12.220 --> 49:13.220
因为这里面

49:13.220 --> 49:14.220
是有初始值的

49:14.220 --> 49:15.220
然后员工照片

49:15.220 --> 49:16.220
这一块呢

49:16.220 --> 49:17.220
我们展示先不做

49:17.220 --> 49:18.220
先把这个初始值

49:18.220 --> 49:19.220
给它进行一个填充

49:19.220 --> 49:21.220
如何来进行初始值填充

49:21.220 --> 49:22.220
也就是说

49:22.220 --> 49:23.220
其实我们是

49:23.220 --> 49:24.220
有一个Form Detail

49:24.220 --> 49:25.220
Staff Detail的

49:25.220 --> 49:27.220
那这个Staff Detail里面

49:27.220 --> 49:28.220
它本来就包含了

49:28.220 --> 49:29.220
我们所有的

49:29.220 --> 49:30.220
这个当前

49:30.220 --> 49:31.220
打开弹床的

49:31.220 --> 49:33.220
这个用户的信息

49:33.220 --> 49:34.220
那么我们现在

49:34.220 --> 49:36.220
就将Staff Detail这个值

49:36.220 --> 49:37.220
给这个Form

49:37.220 --> 49:38.220
作为一个初始值

49:38.220 --> 49:40.220
进行一个渲染就OK了

49:40.220 --> 49:41.220
并且呢

49:41.220 --> 49:42.220
我们这个Form

49:42.220 --> 49:43.220
里面还需要

49:43.220 --> 49:44.220
获取一个实力化对象

49:44.220 --> 49:45.220
因为后期呢

49:45.220 --> 49:46.220
我们还需要

49:46.220 --> 49:47.220
通过这个实力化对象

49:47.220 --> 49:49.220
调用它的一些相关API

49:49.220 --> 49:50.220
比如说

49:50.220 --> 49:52.220
我们获取某一个

49:52.220 --> 49:54.220
指定字端的一个值

49:54.220 --> 49:55.220
或者是呢

49:55.220 --> 49:56.220
我们对某一个字端

49:56.220 --> 49:57.220
进行检测

49:57.220 --> 49:58.220
都是需要它的

49:58.220 --> 49:59.220
那我们这里面

49:59.220 --> 50:00.220
就添加两个属性

50:00.220 --> 50:01.220
第一个呢

50:01.220 --> 50:02.220
就是Form

50:02.220 --> 50:03.220
Form等于一个Form值

50:03.220 --> 50:04.220
然后我们这里面

50:04.220 --> 50:05.220
把这个Form

50:05.220 --> 50:06.220
给进行一个

50:06.220 --> 50:08.220
解构Const Form

50:08.220 --> 50:10.220
从我们哪个里面

50:10.220 --> 50:11.220
解构就是我们

50:11.220 --> 50:13.220
Form这个组件里面

50:13.220 --> 50:14.220
我们写一下

50:14.220 --> 50:15.220
Form组件里面

50:15.220 --> 50:17.220
有一个U字Form方法

50:17.220 --> 50:18.220
那我们这里面

50:18.220 --> 50:19.220
给它进行一个定义

50:19.220 --> 50:20.220
那这是

50:20.220 --> 50:21.220
第一个

50:21.220 --> 50:22.220
我们的Form

50:22.220 --> 50:23.220
那Form解构

50:23.220 --> 50:24.220
出来之后

50:24.220 --> 50:25.220
感觉上没有任何用

50:25.220 --> 50:26.220
对不对

50:26.220 --> 50:27.220
那这里面

50:27.220 --> 50:28.220
其实原因呢

50:28.220 --> 50:29.220
我们还需要

50:29.220 --> 50:30.220
添加一个属性

50:30.220 --> 50:31.220
叫InitValues

50:31.220 --> 50:32.220
InitValues里面呢

50:32.220 --> 50:33.220
我们就是

50:33.220 --> 50:34.220
对这个Staff Detail

50:34.220 --> 50:36.220
做一个解构

50:36.220 --> 50:37.220
把它进行一个解构

50:37.220 --> 50:38.220
那我们来看一下

50:38.220 --> 50:39.220
Staff Detail

50:39.220 --> 50:41.220
然后我们现在

50:41.220 --> 50:42.220
感觉上

50:42.220 --> 50:43.220
也没有任何的

50:43.220 --> 50:44.220
一个反应

50:44.220 --> 50:45.220
是不是

50:45.220 --> 50:46.220
然后是

50:46.220 --> 50:47.220
非常的平静啊

50:47.220 --> 50:49.220
平静的原因是什么呢

50:49.220 --> 50:50.220
其实我们这里面

50:50.220 --> 50:51.220
指定了初始画质

50:51.220 --> 50:52.220
但是我们FormItem

50:52.220 --> 50:53.220
也就是说

50:53.220 --> 50:54.220
每一个Item值

50:54.220 --> 50:55.220
那这里面

50:55.220 --> 50:56.220
我们需要添加

50:56.220 --> 50:58.220
一个指定的Name属性

50:58.220 --> 50:59.220
Name属性呢

50:59.220 --> 51:00.220
就是我们

51:00.220 --> 51:02.220
之前定义好的Item点

51:02.220 --> 51:03.220
Item

51:03.220 --> 51:04.220
Name

51:04.220 --> 51:06.220
把它给进行一个添加

51:06.220 --> 51:07.220
添加完成之后

51:07.220 --> 51:08.220
那你再来看一下

51:08.220 --> 51:09.220
效果啊

51:09.220 --> 51:10.220
崩溃了对不对

51:10.220 --> 51:11.220
崩溃的原因是什么

51:11.220 --> 51:12.220
我们可以检查元素

51:12.220 --> 51:13.220
来看一下

51:14.220 --> 51:15.220
原因说

51:15.220 --> 51:17.220
Data.colon is not a function

51:17.220 --> 51:18.220
为什么

51:18.220 --> 51:19.220
因为这个值里面

51:19.220 --> 51:20.220
我们可以来看

51:20.220 --> 51:21.220
获取到的这个数据

51:21.220 --> 51:22.220
现在看不到了

51:22.220 --> 51:23.220
因为我们这里面

51:23.220 --> 51:24.220
有一个时间

51:24.220 --> 51:25.220
对不对

51:25.220 --> 51:26.220
对时间的处理

51:26.220 --> 51:27.220
我们之前

51:27.220 --> 51:28.220
如果说

51:28.220 --> 51:29.220
也做过

51:29.220 --> 51:30.220
给他做初始画负质的时候

51:30.220 --> 51:31.220
那怎么办

51:31.220 --> 51:32.220
我们可以借助moment

51:32.220 --> 51:33.220
来做这个事

51:33.220 --> 51:34.220
那也就是说

51:34.220 --> 51:35.220
我们把moment

51:35.220 --> 51:37.220
给他引入服装

51:37.220 --> 51:39.220
从moment磨块里面

51:39.220 --> 51:40.220
之后呢

51:40.220 --> 51:41.220
我们知道的这个时间

51:41.220 --> 51:42.220
应该是哪一个

51:42.220 --> 51:43.220
从这个里面

51:43.220 --> 51:44.220
咱们可以看一下

51:44.220 --> 51:46.220
到这个

51:46.220 --> 51:48.220
我们找到staff lease的

51:48.220 --> 51:50.220
staff lease的里面

51:50.220 --> 51:52.220
对时间有一个操作

51:52.220 --> 51:54.220
应该是onboarding time

51:54.220 --> 51:55.220
对吧

51:55.220 --> 51:56.220
如果说

51:56.220 --> 51:57.220
那现在我们就指定一下

51:57.220 --> 51:58.220
假如说

51:58.220 --> 51:59.220
你要是渲染onboarding time的时候

51:59.220 --> 52:01.220
那我就使用moment

52:01.220 --> 52:02.220
把你这个日期

52:02.220 --> 52:03.220
做一个初始画的

52:03.220 --> 52:04.220
格式画处理

52:04.220 --> 52:06.220
我们找到他

52:06.220 --> 52:08.220
点点干staff lease的之后

52:08.220 --> 52:10.220
如果说你是onboarding time

52:10.220 --> 52:12.220
那我们就使用moment

52:12.220 --> 52:13.220
moment里面

52:13.220 --> 52:15.220
是我们staff detail

52:15.220 --> 52:17.220
点onboarding time

52:17.220 --> 52:18.220
给他进行一个添加

52:18.220 --> 52:19.220
那这一回

52:19.220 --> 52:20.220
我们再来看一下

52:20.220 --> 52:21.220
现在包座没有了

52:21.220 --> 52:22.220
对不对

52:22.220 --> 52:23.220
包座没有

52:23.220 --> 52:24.220
我们一打开

52:24.220 --> 52:25.220
打开之后

52:25.220 --> 52:26.220
你会发现

52:26.220 --> 52:27.220
这些基本质

52:27.220 --> 52:28.220
有好多都已经

52:28.220 --> 52:29.220
账户名

52:29.220 --> 52:30.220
这些

52:30.220 --> 52:32.220
但这里面也有一些错误的

52:32.220 --> 52:33.220
比如说我们这个

52:33.220 --> 52:34.220
Object

52:34.220 --> 52:35.220
Object

52:35.220 --> 52:36.220
Object指的是什么

52:36.220 --> 52:37.220
那我们就得检查了

52:37.220 --> 52:38.220
对吧

52:38.220 --> 52:39.220
检查的时候

52:39.220 --> 52:40.220
我们可以回到

52:40.220 --> 52:41.220
staff lease的里面

52:41.220 --> 52:43.220
这里面有两个

52:43.220 --> 52:44.220
一个叫item name

52:44.220 --> 52:45.220
是department

52:45.220 --> 52:46.220
和level

52:46.220 --> 52:47.220
这个是作为一个

52:47.220 --> 52:49.220
后台

52:49.220 --> 52:50.220
服务的人员

52:50.220 --> 52:51.220
其实你可以把它

52:51.220 --> 52:52.220
理解为什么呢

52:52.220 --> 52:54.220
当我们去获取指的时候

52:54.220 --> 52:55.220
因为我们最后

52:55.220 --> 52:56.220
向后端

52:56.220 --> 52:57.220
如果说去发送修改请求

52:57.220 --> 52:59.220
那你真实传递的时候

52:59.220 --> 53:00.220
应该传department和level

53:00.220 --> 53:02.220
但是现在你就没有必要

53:02.220 --> 53:03.220
进行展示了

53:03.220 --> 53:04.220
我这里面提前

53:04.220 --> 53:05.220
已经写好了一个什么

53:05.220 --> 53:06.220
staff

53:06.220 --> 53:07.220
那这个staff

53:07.220 --> 53:08.220
我们就可以给它

53:08.220 --> 53:09.220
进行一个添加

53:09.220 --> 53:11.220
因为我们知道

53:11.220 --> 53:13.220
它是隐铺的框

53:13.220 --> 53:15.220
如果说是隐铺的框

53:15.220 --> 53:16.220
渲染的时候

53:16.220 --> 53:17.220
我们把这个staff对象

53:17.220 --> 53:19.220
可以给它进行一个添加

53:19.220 --> 53:21.220
staff就等于我们

53:21.220 --> 53:23.220
点点点item

53:23.220 --> 53:24.220
staff

53:24.220 --> 53:25.220
如果说你要有staff

53:25.220 --> 53:26.220
那你就进行添加

53:26.220 --> 53:27.220
这样它是不是

53:27.220 --> 53:28.220
就会被干掉了

53:28.220 --> 53:29.220
对不对

53:29.220 --> 53:30.220
被干掉之后

53:30.220 --> 53:31.220
那这个时候

53:31.220 --> 53:32.220
它应该是dateplay

53:32.220 --> 53:33.220
dateplay

53:33.220 --> 53:34.220
然后感觉的站位了

53:34.220 --> 53:36.220
这个事不是特别好

53:36.220 --> 53:37.220
我们再来看一下

53:37.220 --> 53:39.220
它站位的原因是什么

53:39.220 --> 53:40.220
formitem

53:40.220 --> 53:42.220
然后应该是有formitem

53:42.220 --> 53:44.220
在这个里面

53:44.220 --> 53:45.220
看一下

53:45.220 --> 53:46.220
这个里面

53:46.220 --> 53:47.220
它也是生成了一个

53:47.220 --> 53:48.220
formitem

53:48.220 --> 53:49.220
那其实对

53:49.220 --> 53:50.220
如果说你要是这样

53:50.220 --> 53:51.220
做的话

53:51.220 --> 53:52.220
那我还不如直接的

53:52.220 --> 53:53.220
在哪个里面来做了

53:53.220 --> 53:55.220
我们对这个formitem

53:55.220 --> 53:57.220
你每一行生成的时候

53:57.220 --> 54:00.220
如果说你要是隐藏的

54:00.220 --> 54:01.220
那我就不给你进行

54:01.220 --> 54:02.220
一个展示

54:02.220 --> 54:03.220
是不是就可以了

54:03.220 --> 54:04.220
那我们这里面

54:04.220 --> 54:06.220
也写一个点点点

54:06.220 --> 54:07.220
这里面写一下

54:07.220 --> 54:08.220
比如说

54:08.220 --> 54:10.220
这个是staff

54:10.220 --> 54:13.220
staff等于我们的这个值

54:13.220 --> 54:14.220
比如说是

54:14.220 --> 54:15.220
点点点item

54:15.220 --> 54:16.220
点

54:16.220 --> 54:17.220
staff

54:17.220 --> 54:18.220
不进行一个展示

54:18.220 --> 54:19.220
咱们看

54:19.220 --> 54:21.220
把formitem给隐藏了

54:21.220 --> 54:22.220
你看这回就好了

54:22.220 --> 54:23.220
咱们不去input了

54:23.220 --> 54:24.220
直接的就是

54:24.220 --> 54:26.220
把外层的formitem

54:26.220 --> 54:27.220
给它隐藏掉

54:27.220 --> 54:28.220
但是它真实是存在

54:28.220 --> 54:29.220
于这个表单里面的

54:29.220 --> 54:31.220
这个我们要明确一下

54:31.220 --> 54:32.220
好了

54:32.220 --> 54:33.220
这个就是我们的

54:33.220 --> 54:34.220
一个基本渲染

54:34.220 --> 54:35.220
那基本渲染

54:35.220 --> 54:36.220
处理完了之后

54:36.220 --> 54:37.220
那现在

54:37.220 --> 54:38.220
我们就开始

54:38.220 --> 54:41.220
对里面的一个修改

54:41.220 --> 54:43.220
来做一个处理

54:43.220 --> 54:44.220
比如说修改的时候

54:44.220 --> 54:45.220
这个时候

54:45.220 --> 54:46.220
我们会分为

54:46.220 --> 54:47.220
两部分做

54:47.220 --> 54:48.220
首先我们就是修改

54:48.220 --> 54:49.220
这种基本值

54:49.220 --> 54:50.220
比如说

54:50.220 --> 54:51.220
我们这些input的框

54:51.220 --> 54:52.220
还有这些

54:52.220 --> 54:53.220
下拉菜单里面的

54:53.220 --> 54:54.220
这个相应的内容

54:54.220 --> 54:55.220
对不对

54:55.220 --> 54:56.220
那

54:56.220 --> 54:58.220
什么时候来去修改

54:58.220 --> 54:59.220
我们这个部门呢

54:59.220 --> 55:00.220
当我们把这个基础

55:00.220 --> 55:01.220
做完之后

55:01.220 --> 55:02.220
就可以对这个部门

55:02.220 --> 55:03.220
进行修改了

55:03.220 --> 55:04.220
并且这里面

55:04.220 --> 55:05.220
跟同学们说一下

55:05.220 --> 55:06.220
这个渲染值

55:06.220 --> 55:07.220
是有一定问题的

55:07.220 --> 55:08.220
什么问题呢

55:08.220 --> 55:09.220
我们这个

55:09.220 --> 55:10.220
因为是从理论开始的

55:10.220 --> 55:11.220
那你看

55:11.220 --> 55:12.220
可能它这个学历

55:12.220 --> 55:13.220
应该是个作用课

55:13.220 --> 55:14.220
那你现在

55:14.220 --> 55:15.220
显示出来的

55:15.220 --> 55:16.220
是不是就是本课了

55:16.220 --> 55:17.220
这个我们也要清楚一下

55:17.220 --> 55:18.220
然后同学们

55:18.220 --> 55:19.220
可以自行

55:19.220 --> 55:20.220
给它做一个调整

55:20.220 --> 55:21.220
或者加一

55:21.220 --> 55:22.220
这个是都可以的

55:22.220 --> 55:23.220
回到我们的

55:23.220 --> 55:24.220
这个代码里面

55:24.220 --> 55:25.220
那现在呢

55:25.220 --> 55:26.220
我们就开始

55:26.220 --> 55:27.220
对修改来进行

55:27.220 --> 55:28.220
一个操作

55:28.220 --> 55:29.220
修改元素的起点

55:29.220 --> 55:30.220
是什么呢

55:30.220 --> 55:31.220
其实修改元素起点

55:31.220 --> 55:32.220
应该是在

55:32.220 --> 55:34.220
它失去焦点的时候

55:34.220 --> 55:35.220
比如说

55:35.220 --> 55:36.220
我们的这个

55:36.220 --> 55:37.220
input的框

55:37.220 --> 55:38.220
以及下拉菜单

55:38.220 --> 55:39.220
它对这个焦点

55:39.220 --> 55:40.220
已经失去了

55:40.220 --> 55:41.220
那这个时候

55:41.220 --> 55:42.220
就会处发修改

55:42.220 --> 55:43.220
至于我们的

55:43.220 --> 55:44.220
这个日期组件

55:44.220 --> 55:45.220
其实呢

55:45.220 --> 55:46.220
这个里面是

55:46.220 --> 55:47.220
我们一次的

55:47.220 --> 55:48.220
来看

55:48.220 --> 55:49.220
能不能处发这个事件

55:49.220 --> 55:50.220
那这里面

55:50.220 --> 55:51.220
我们去修改的时候

55:51.220 --> 55:52.220
其实

55:52.220 --> 55:53.220
你现在应该把

55:53.220 --> 55:54.220
这个item

55:54.220 --> 55:55.220
给它传递过去

55:55.220 --> 55:56.220
对不对

55:56.220 --> 55:57.220
那如果说

55:57.220 --> 55:58.220
你要不传递item

55:58.220 --> 55:59.220
这个事呢

55:59.220 --> 56:00.220
就没戏了对吧

56:00.220 --> 56:01.220
所以说我们怎么办呢

56:01.220 --> 56:02.220
我们在这个修改的时候

56:02.220 --> 56:03.220
一次的

56:03.220 --> 56:04.220
把我们的这个

56:04.220 --> 56:05.220
item

56:05.220 --> 56:06.220
给它进行一个传递

56:06.220 --> 56:07.220
那我们来调整一下

56:07.220 --> 56:08.220
比如说这个

56:08.220 --> 56:09.220
unbler

56:09.220 --> 56:10.220
unbler

56:10.220 --> 56:11.220
我们就把它

56:11.220 --> 56:12.220
来处理一下

56:12.220 --> 56:13.220
beforecheck的

56:13.220 --> 56:14.220
那这个里面

56:14.220 --> 56:15.220
我们把

56:15.220 --> 56:16.220
当前的这个item

56:16.220 --> 56:17.220
作为行参

56:17.220 --> 56:18.220
食参

56:18.220 --> 56:19.220
来给它进行一个传递

56:19.220 --> 56:20.220
然后我们调用的时候

56:20.220 --> 56:22.220
就使用这个item

56:23.220 --> 56:24.220
好的那这里面

56:24.220 --> 56:25.220
就定义了一下

56:25.220 --> 56:27.220
beforecheck的item

56:27.220 --> 56:28.220
之后呢

56:28.220 --> 56:29.220
我们unchanged的时候

56:29.220 --> 56:30.220
同样的

56:30.220 --> 56:31.220
也是做这个处理

56:31.220 --> 56:32.220
那我两个同时

56:32.220 --> 56:33.220
一起做了

56:33.220 --> 56:34.220
这里面

56:34.220 --> 56:35.220
第一个是item

56:35.220 --> 56:36.220
然后呢

56:36.220 --> 56:37.220
我们调用

56:37.220 --> 56:39.220
beforecheck的

56:39.220 --> 56:40.220
对吧

56:40.220 --> 56:41.220
beforecheck的的时候

56:41.220 --> 56:43.220
把这个item

56:43.220 --> 56:44.220
给它传递一下

56:44.220 --> 56:45.220
ok 那这个就好了

56:45.220 --> 56:46.220
在这里面

56:46.220 --> 56:47.220
我们保证这个

56:47.220 --> 56:49.220
前面这三个组架

56:49.220 --> 56:51.220
显示能可以获取到

56:51.220 --> 56:52.220
item这个值

56:52.220 --> 56:53.220
来我们看一眼

56:53.220 --> 56:55.220
现在打开控制台

56:55.220 --> 56:56.220
已经来到了

56:56.220 --> 56:57.220
我们最关键的时刻

56:57.220 --> 56:58.220
进行修改了

56:58.220 --> 56:59.220
我这里面

56:59.220 --> 57:00.220
张小龙一

57:00.220 --> 57:01.220
然后失去焦点

57:01.220 --> 57:02.220
你会发现

57:02.220 --> 57:03.220
这个里面

57:03.220 --> 57:04.220
有一个什么呢

57:04.220 --> 57:06.220
有一个事件对象

57:06.220 --> 57:08.220
而不是我们的一个什么

57:08.220 --> 57:10.220
需要获取到的这个值

57:10.220 --> 57:11.220
对吧

57:11.220 --> 57:12.220
这个事情就尴尬了

57:12.220 --> 57:13.220
是因为啥呢

57:14.220 --> 57:15.220
我们这个

57:15.220 --> 57:16.220
其实应该是获取

57:16.220 --> 57:18.220
是不是获取这个item

57:18.220 --> 57:19.220
我们传递过来

57:19.220 --> 57:20.220
这个item

57:20.220 --> 57:21.220
但是呢

57:21.220 --> 57:22.220
现在这个

57:22.220 --> 57:23.220
触发它的这个

57:23.220 --> 57:24.220
不论事件

57:24.220 --> 57:25.220
那这个item呢

57:25.220 --> 57:26.220
就是其实

57:26.220 --> 57:27.220
本身就代表了

57:27.220 --> 57:28.220
事件对象

57:28.220 --> 57:29.220
所以说呢

57:29.220 --> 57:30.220
我们这里面

57:30.220 --> 57:31.220
我给它调整一下

57:31.220 --> 57:32.220
不应该使用它

57:32.220 --> 57:33.220
那这样呢

57:33.220 --> 57:34.220
它传递的

57:34.220 --> 57:35.220
就应该是

57:35.220 --> 57:36.220
我们渲染的时候的

57:36.220 --> 57:37.220
这个item了

57:37.220 --> 57:38.220
对不对

57:38.220 --> 57:39.220
那如果说

57:39.220 --> 57:40.220
我在这个里面获取

57:40.220 --> 57:41.220
那就是一个事件对象

57:41.220 --> 57:42.220
sorry

57:42.220 --> 57:43.220
那我们重新来一下

57:43.220 --> 57:44.220
张小龙一

57:44.220 --> 57:45.220
二

57:45.220 --> 57:47.220
有rundertap user name

57:47.220 --> 57:48.220
包括请说

57:48.220 --> 57:49.220
员工名啊这些里面

57:49.220 --> 57:50.220
是不是都有了

57:50.220 --> 57:51.220
对吧

57:51.220 --> 57:52.220
你既然有了之后

57:52.220 --> 57:53.220
那现在呢

57:53.220 --> 57:54.220
我们就要做一件事了

57:54.220 --> 57:55.220
我们是不是可以去

57:55.220 --> 57:56.220
处罚修改

57:56.220 --> 57:57.220
但你处罚修改

57:57.220 --> 57:59.220
现在还得停一下

57:59.220 --> 58:00.220
为什么说停一下呢

58:00.220 --> 58:01.220
你这个

58:01.220 --> 58:02.220
是不是得做一个

58:02.220 --> 58:03.220
常规的检测

58:03.220 --> 58:05.220
如果说你不检测的话

58:05.220 --> 58:06.220
那这个事儿

58:06.220 --> 58:07.220
我直接让你过

58:07.220 --> 58:08.220
是不是有点尴尬了

58:08.220 --> 58:09.220
对不对

58:09.220 --> 58:10.220
那检测怎么来做呢

58:10.220 --> 58:11.220
因为我们有这个检测

58:11.220 --> 58:12.220
比如说我们到julers

58:12.220 --> 58:14.220
找到我们的stuffjuler

58:14.220 --> 58:15.220
这个里面

58:15.220 --> 58:16.220
其实就是

58:16.220 --> 58:17.220
跟我们渲染的自断

58:17.220 --> 58:18.220
是一一对应的

58:18.220 --> 58:19.220
之前我们也用过

58:19.220 --> 58:20.220
那现在呢

58:20.220 --> 58:21.220
我们就给他倒入进来啊

58:21.220 --> 58:22.220
倒入进来

58:22.220 --> 58:23.220
就是这样的

58:23.220 --> 58:24.220
input

58:24.220 --> 58:25.220
首先呢

58:25.220 --> 58:26.220
是我们的stuffjuler

58:26.220 --> 58:27.220
from

58:27.220 --> 58:28.220
从我们的utils

58:28.220 --> 58:30.220
下面的ruler

58:30.220 --> 58:32.220
给他进行一个获取

58:33.220 --> 58:34.220
好的你获取到

58:34.220 --> 58:35.220
这个stuffjuler

58:35.220 --> 58:36.220
对象之后

58:36.220 --> 58:37.220
那我们给谁

58:37.220 --> 58:38.220
添加这个ruler呢

58:38.220 --> 58:39.220
应该是给我们的

58:39.220 --> 58:40.220
这个放埋特末

58:40.220 --> 58:41.220
对吧

58:41.220 --> 58:42.220
每一个渲染的时候

58:42.220 --> 58:43.220
他都会有一个

58:43.220 --> 58:44.220
验证规则

58:44.220 --> 58:45.220
那我这里面

58:45.220 --> 58:46.220
验证规则

58:46.220 --> 58:47.220
应该是什么

58:47.220 --> 58:48.220
就是我们stuffjuler

58:48.220 --> 58:49.220
那找他

58:49.220 --> 58:50.220
是不是就非常轻松了

58:50.220 --> 58:51.220
我们这个里面

58:51.220 --> 58:52.220
是不是item

58:52.220 --> 58:53.220
点item

58:53.220 --> 58:54.220
内容

58:54.220 --> 58:55.220
其实是跟他

58:55.220 --> 58:56.220
完全匹配的

58:56.220 --> 58:57.220
然后你添加之后

58:57.220 --> 58:58.220
那首先

58:58.220 --> 58:59.220
我们也不可能

58:59.220 --> 59:00.220
输出这么长

59:00.220 --> 59:01.220
对不对

59:01.220 --> 59:02.220
那这里面

59:02.220 --> 59:03.220
性命长度不能微空

59:03.220 --> 59:04.220
长度不正确

59:04.220 --> 59:05.220
那这个时候

59:05.220 --> 59:06.220
是不是验证

59:06.220 --> 59:07.220
就都有吧

59:07.220 --> 59:08.220
如果说你验证通过

59:08.220 --> 59:09.220
比如说我们张小龙

59:09.220 --> 59:10.220
然后呢

59:10.220 --> 59:11.220
这个里面

59:11.220 --> 59:12.220
123

59:12.220 --> 59:13.220
找到他之后

59:13.220 --> 59:14.220
我们现在就可以来

59:14.220 --> 59:15.220
做事情了

59:15.220 --> 59:16.220
首先第一件事

59:16.220 --> 59:17.220
就是我们判断一下

59:17.220 --> 59:19.220
新职和旧职是否相同

59:19.220 --> 59:20.220
如果相同

59:20.220 --> 59:21.220
我们不做任何的

59:21.220 --> 59:22.220
一个处理

59:22.220 --> 59:24.220
怎么来做这件事情

59:24.220 --> 59:25.220
首先呢

59:25.220 --> 59:26.220
我们这个里面

59:26.220 --> 59:27.220
已经获取到了

59:27.220 --> 59:28.220
form这么一个

59:28.220 --> 59:29.220
实力化对象

59:29.220 --> 59:30.220
对吧

59:30.220 --> 59:31.220
这个时候

59:31.220 --> 59:32.220
应该是中国号

59:32.220 --> 59:33.220
我们这里面

59:33.220 --> 59:34.220
是使用hook获取的

59:34.220 --> 59:35.220
并且呢

59:35.220 --> 59:36.220
我们已经

59:36.220 --> 59:37.220
绑定到这个form

59:37.220 --> 59:38.220
上面了

59:38.220 --> 59:39.220
那现在呢

59:39.220 --> 59:40.220
我们就可以通过

59:40.220 --> 59:41.220
form里面的

59:41.220 --> 59:42.220
file的value

59:42.220 --> 59:43.220
来做一个

59:43.220 --> 59:44.220
内容的

59:44.220 --> 59:45.220
一个获取

59:45.220 --> 59:46.220
也就是说

59:46.220 --> 59:47.220
把我们新职

59:47.220 --> 59:48.220
来进行一个获取

59:48.220 --> 59:49.220
因为它是一不操作

59:49.220 --> 59:50.220
我们这里面

59:50.220 --> 59:51.220
使用一个async

59:51.220 --> 59:52.220
那我先来

59:52.220 --> 59:53.220
进行一个form的打印

59:53.220 --> 59:54.220
如果你不知道

59:54.220 --> 59:55.220
它里面都有哪些属性

59:55.220 --> 59:56.220
那这个时候呢

59:56.220 --> 59:57.220
你就可以打印一下

59:57.220 --> 59:59.220
form这个呢

59:59.220 --> 01:00:01.220
是它的相应api调用

01:00:01.220 --> 01:00:02.220
我们可以使用

01:00:02.220 --> 01:00:03.220
getfile的value

01:00:03.220 --> 01:00:04.220
里面传一个

01:00:04.220 --> 01:00:05.220
需要我们

01:00:05.220 --> 01:00:06.220
获取的这么一个自断

01:00:06.220 --> 01:00:07.220
就可以了

01:00:07.220 --> 01:00:08.220
那我这里面

01:00:08.220 --> 01:00:09.220
就写一下

01:00:09.220 --> 01:00:11.220
const new date

01:00:11.220 --> 01:00:13.220
这里面定一个新的值

01:00:13.220 --> 01:00:14.220
new date

01:00:14.220 --> 01:00:16.220
等于我们form

01:00:17.220 --> 01:00:18.220
点

01:00:18.220 --> 01:00:19.220
刚才使用的是

01:00:19.220 --> 01:00:20.220
getfile的value

01:00:20.220 --> 01:00:21.220
对不对

01:00:21.220 --> 01:00:22.220
然后呢

01:00:22.220 --> 01:00:23.220
这个里面传

01:00:23.220 --> 01:00:24.220
item

01:00:24.220 --> 01:00:25.220
item

01:00:25.220 --> 01:00:26.220
name

01:00:26.220 --> 01:00:27.220
这样呢

01:00:27.220 --> 01:00:28.220
我们就把新职

01:00:28.220 --> 01:00:29.220
来给他获取一下

01:00:29.220 --> 01:00:30.220
我们看

01:00:30.220 --> 01:00:31.220
是否能获取到

01:00:31.220 --> 01:00:32.220
这个新职

01:00:32.220 --> 01:00:33.220
然后呢

01:00:33.220 --> 01:00:34.220
来

01:00:34.220 --> 01:00:35.220
筹研

01:00:35.220 --> 01:00:36.220
到这个里面

01:00:36.220 --> 01:00:37.220
张小龙1

01:00:37.220 --> 01:00:38.220
2

01:00:38.220 --> 01:00:39.220
获取到了

01:00:39.220 --> 01:00:40.220
那这个获取到之后

01:00:40.220 --> 01:00:41.220
那还有一个什么呢

01:00:41.220 --> 01:00:42.220
我们这里面

01:00:42.220 --> 01:00:43.220
还会有一个

01:00:43.220 --> 01:00:44.220
old value

01:00:44.220 --> 01:00:45.220
也就是说

01:00:45.220 --> 01:00:46.220
老的值

01:00:46.220 --> 01:00:47.220
const的

01:00:47.220 --> 01:00:48.220
我们这里面

01:00:48.220 --> 01:00:49.220
old date

01:00:50.220 --> 01:00:51.220
old date

01:00:51.220 --> 01:00:52.220
等于我们

01:00:52.220 --> 01:00:53.220
form

01:00:53.220 --> 01:00:54.220
然后这个就不是form了

01:00:54.220 --> 01:00:55.220
sorry

01:00:55.220 --> 01:00:56.220
这个应该是什么

01:00:56.220 --> 01:00:57.220
我们这个new data

01:00:57.220 --> 01:00:58.220
前面给他加一个

01:00:58.220 --> 01:00:59.220
avit

01:00:59.220 --> 01:01:00.220
avit

01:01:00.220 --> 01:01:01.220
form

01:01:01.220 --> 01:01:02.220
点

01:01:02.220 --> 01:01:03.220
getfile的value

01:01:03.220 --> 01:01:04.220
我们看一下

01:01:04.220 --> 01:01:05.220
是否可以

01:01:05.220 --> 01:01:06.220
不加这个

01:01:06.220 --> 01:01:07.220
因为我看

01:01:07.220 --> 01:01:08.220
咱们刷新一下

01:01:08.220 --> 01:01:09.220
重新来

01:01:09.220 --> 01:01:10.220
然后呢

01:01:10.220 --> 01:01:11.220
我们这里面点击

01:01:11.220 --> 01:01:12.220
点击获得关与

01:01:12.220 --> 01:01:13.220
要

01:01:13.220 --> 01:01:14.220
ok 没问题

01:01:14.220 --> 01:01:15.220
那现在

01:01:15.220 --> 01:01:16.220
这个是加乐avit

01:01:16.220 --> 01:01:17.220
如果说我们不加

01:01:17.220 --> 01:01:18.220
这里面

01:01:18.220 --> 01:01:19.220
做一个尝试

01:01:19.220 --> 01:01:20.220
假如说不加

01:01:20.220 --> 01:01:21.220
看的是否可行

01:01:21.220 --> 01:01:22.220
因为我们

01:01:22.220 --> 01:01:24.220
file的values

01:01:24.220 --> 01:01:25.220
那个时候

01:01:25.220 --> 01:01:26.220
他是必须要加的

01:01:26.220 --> 01:01:27.220
然后从这个里面

01:01:27.220 --> 01:01:28.220
点击

01:01:28.220 --> 01:01:29.220
点击的时候

01:01:29.220 --> 01:01:30.220
关与

01:01:30.220 --> 01:01:31.220
ok 那也可以获取

01:01:31.220 --> 01:01:32.220
那个sync

01:01:32.220 --> 01:01:33.220
avit

01:01:33.220 --> 01:01:34.220
咱们就干掉

01:01:34.220 --> 01:01:35.220
直接同步的来进行获取

01:01:35.220 --> 01:01:36.220
获取到之后

01:01:36.220 --> 01:01:37.220
我们把这个

01:01:37.220 --> 01:01:38.220
老的值也获取一下

01:01:38.220 --> 01:01:39.220
老的值存放在哪呢

01:01:39.220 --> 01:01:40.220
存放在我们

01:01:40.220 --> 01:01:41.220
staff detail

01:01:41.220 --> 01:01:42.220
里面

01:01:42.220 --> 01:01:43.220
是不是

01:01:43.220 --> 01:01:44.220
同样的是

01:01:44.220 --> 01:01:45.220
item

01:01:45.220 --> 01:01:46.220
name

01:01:46.220 --> 01:01:47.220
然后

01:01:47.220 --> 01:01:49.220
这个是我们的

01:01:49.220 --> 01:01:50.220
value

01:01:50.220 --> 01:01:51.220
在这个里面

01:01:51.220 --> 01:01:52.220
给他做一个打印

01:01:52.220 --> 01:01:53.220
到这里面

01:01:53.220 --> 01:01:54.220
我们关与

01:01:54.220 --> 01:01:55.220
ok 一点击

01:01:55.220 --> 01:01:56.220
有报错

01:01:56.220 --> 01:01:57.220
这个里面

01:01:57.220 --> 01:01:58.220
staff detail

01:01:58.220 --> 01:01:59.220
is not a function

01:01:59.220 --> 01:02:01.220
staff detail

01:02:01.220 --> 01:02:02.220
is not a function

01:02:02.220 --> 01:02:03.220
是因为什么

01:02:03.220 --> 01:02:04.220
它是一个

01:02:04.220 --> 01:02:05.220
不是一个方法

01:02:05.220 --> 01:02:06.220
是一个对象

01:02:06.220 --> 01:02:07.220
那这个里面

01:02:07.220 --> 01:02:08.220
我们使用这种形式

01:02:08.220 --> 01:02:09.220
中二的形式

01:02:09.220 --> 01:02:11.220
来获取它的这个属性

01:02:11.220 --> 01:02:12.220
关与

01:02:12.220 --> 01:02:13.220
关与悠悠

01:02:13.220 --> 01:02:14.220
对不对

01:02:14.220 --> 01:02:15.220
那他们有可能相同

01:02:15.220 --> 01:02:16.220
比如说我现在

01:02:16.220 --> 01:02:17.220
如果说什么都不做

01:02:17.220 --> 01:02:18.220
那我这一点击

01:02:18.220 --> 01:02:19.220
他们俩是不是相同了

01:02:19.220 --> 01:02:20.220
那这个时候

01:02:20.220 --> 01:02:21.220
我们就要判断一下

01:02:21.220 --> 01:02:22.220
判断什么呢

01:02:22.220 --> 01:02:24.220
这个就是new value

01:02:24.220 --> 01:02:25.220
和old value

01:02:25.220 --> 01:02:26.220
比如说这里面

01:02:26.220 --> 01:02:28.220
是new value

01:02:28.220 --> 01:02:29.220
之后

01:02:29.220 --> 01:02:30.220
我们再写一个

01:02:30.220 --> 01:02:31.220
old value

01:02:31.220 --> 01:02:33.220
如果说新老值相同

01:02:33.220 --> 01:02:35.220
我们的new value

01:02:35.220 --> 01:02:36.220
然后

01:02:36.220 --> 01:02:38.220
它要是等于等于

01:02:38.220 --> 01:02:40.220
我们的old value

01:02:40.220 --> 01:02:41.220
那现在其实我们

01:02:41.220 --> 01:02:42.220
是不是什么都不要做

01:02:42.220 --> 01:02:43.220
什么都不要做

01:02:43.220 --> 01:02:44.220
那就给它一个return

01:02:44.220 --> 01:02:45.220
是不是就可以了

01:02:45.220 --> 01:02:46.220
或者是你return false

01:02:46.220 --> 01:02:47.220
都可以

01:02:47.220 --> 01:02:48.220
当你这个

01:02:48.220 --> 01:02:49.220
如果说新老值

01:02:49.220 --> 01:02:50.220
比较完成之后

01:02:50.220 --> 01:02:51.220
那你不一致

01:02:51.220 --> 01:02:52.220
不一致说明

01:02:52.220 --> 01:02:53.220
你现在是想

01:02:53.220 --> 01:02:54.220
来去做事情

01:02:54.220 --> 01:02:55.220
对不对

01:02:55.220 --> 01:02:56.220
那你来做事情的时候

01:02:56.220 --> 01:02:57.220
这里面又回到了

01:02:57.220 --> 01:02:58.220
我们的第二个判断

01:02:58.220 --> 01:03:00.220
这是第一个判断

01:03:00.220 --> 01:03:01.220
第一个判断是什么呢

01:03:01.220 --> 01:03:04.220
我们在这里面写一下

01:03:04.220 --> 01:03:07.220
判断新旧值

01:03:07.220 --> 01:03:09.220
这个是新旧值

01:03:09.220 --> 01:03:10.220
是否相同

01:03:10.220 --> 01:03:11.220
如果相同

01:03:11.220 --> 01:03:12.220
你什么都不用做了

01:03:12.220 --> 01:03:13.220
然后呢

01:03:13.220 --> 01:03:15.220
我们再来说一下

01:03:15.220 --> 01:03:16.220
因为之前就讲过

01:03:16.220 --> 01:03:17.220
如果说是

01:03:17.220 --> 01:03:18.220
账户名

01:03:18.220 --> 01:03:20.220
或者是

01:03:20.220 --> 01:03:21.220
什么

01:03:21.220 --> 01:03:22.220
手机号码

01:03:22.220 --> 01:03:23.220
我们要对后端

01:03:23.220 --> 01:03:24.220
进行一个验证

01:03:24.220 --> 01:03:25.220
进行一个验证

01:03:25.220 --> 01:03:26.220
也就是说

01:03:26.220 --> 01:03:28.220
看数据库里面存没存

01:03:28.220 --> 01:03:29.220
假如说数据库里面存了

01:03:29.220 --> 01:03:30.220
你就不需要

01:03:30.220 --> 01:03:31.220
往后台发送的

01:03:31.220 --> 01:03:32.220
这个时候

01:03:32.220 --> 01:03:34.220
我们首先要知道

01:03:34.220 --> 01:03:35.220
它现在传递的是

01:03:35.220 --> 01:03:37.220
账户名和手机号码

01:03:37.220 --> 01:03:38.220
这个怎么来做呢

01:03:38.220 --> 01:03:39.220
我们也是通过条件

01:03:39.220 --> 01:03:40.220
如果说

01:03:40.220 --> 01:03:42.220
item.itemname

01:03:42.220 --> 01:03:44.220
它要是等于等于

01:03:44.220 --> 01:03:45.220
我们的这个账户名

01:03:45.220 --> 01:03:46.220
应该是什么

01:03:46.220 --> 01:03:47.220
应该是

01:03:48.220 --> 01:03:49.220
或者说

01:03:49.220 --> 01:03:50.220
我们这个

01:03:52.220 --> 01:03:53.220
等于

01:03:53.220 --> 01:03:54.220
sorry不是password

01:03:54.220 --> 01:03:56.220
应该是mobile

01:03:56.220 --> 01:03:57.220
这个时候

01:03:57.220 --> 01:03:59.220
我们是要发起检测了

01:03:59.220 --> 01:04:00.220
如果说呢

01:04:00.220 --> 01:04:01.220
你看是这两项的话

01:04:01.220 --> 01:04:02.220
那你肯定你需要检测

01:04:02.220 --> 01:04:03.220
可能是账户名不正确

01:04:03.220 --> 01:04:04.220
或者是

01:04:04.220 --> 01:04:05.220
手机号码已经

01:04:05.220 --> 01:04:06.220
不是不正确

01:04:06.220 --> 01:04:07.220
账户名已经存在

01:04:07.220 --> 01:04:08.220
或者手机号码已经存在

01:04:09.220 --> 01:04:10.220
这个时候

01:04:10.220 --> 01:04:12.220
我们就来做这么一件事

01:04:12.220 --> 01:04:14.220
这里面定一下

01:04:14.220 --> 01:04:15.220
怎么来定义呢

01:04:15.220 --> 01:04:16.220
我这里面

01:04:16.220 --> 01:04:19.220
先来去调用这个方法

01:04:19.220 --> 01:04:20.220
我们调用这个方法之前

01:04:20.220 --> 01:04:21.220
我是不是

01:04:21.220 --> 01:04:23.220
把这个数据值得获取到

01:04:23.220 --> 01:04:25.220
把这个数据值获取到的话

01:04:25.220 --> 01:04:26.220
这里面

01:04:26.220 --> 01:04:28.220
我们就需要

01:04:28.220 --> 01:04:30.220
把整个的这个字段也获取到

01:04:30.220 --> 01:04:32.220
那我这里面再使用一个新的方法

01:04:32.220 --> 01:04:33.220
Consta

01:04:33.220 --> 01:04:35.220
我们这里面指定一个什么呢

01:04:36.220 --> 01:04:38.220
或者是ConstaData

01:04:38.220 --> 01:04:40.220
定就定一个data

01:04:40.220 --> 01:04:43.220
ConstaData等于一个form.

01:04:43.220 --> 01:04:45.220
一个我们这里面使用一个

01:04:45.220 --> 01:04:47.220
ValidataFelds

01:04:47.220 --> 01:04:48.220
方法

01:04:48.220 --> 01:04:49.220
ValidataFelds方法

01:04:49.220 --> 01:04:51.220
我们这里面传一个什么

01:04:51.220 --> 01:04:52.220
itomo.

01:04:52.220 --> 01:04:54.220
因为它是获取到一个对象

01:04:54.220 --> 01:04:55.220
itomoName

01:04:55.220 --> 01:04:57.220
然后咱们打印一下

01:04:57.220 --> 01:04:59.220
什么data

01:04:59.220 --> 01:05:01.220
把它来看一下

01:05:01.220 --> 01:05:02.220
因为我们这里面

01:05:02.220 --> 01:05:04.220
指定就得修改照明了对吧

01:05:04.220 --> 01:05:05.220
那我在这里面处罚

01:05:05.220 --> 01:05:06.220
我一点击

01:05:06.220 --> 01:05:07.220
你会发现

01:05:07.220 --> 01:05:09.220
NewData一直到底犯了

01:05:09.220 --> 01:05:10.220
搞事情

01:05:10.220 --> 01:05:11.220
这个里面是在这

01:05:11.220 --> 01:05:12.220
把它给干掉

01:05:12.220 --> 01:05:13.220
然后呢

01:05:13.220 --> 01:05:14.220
我们重新来做一个测试

01:05:14.220 --> 01:05:16.220
刚才是没有把它给处理掉的

01:05:16.220 --> 01:05:17.220
这里面

01:05:17.220 --> 01:05:18.220
123

01:05:18.220 --> 01:05:19.220
我一点击

01:05:19.220 --> 01:05:21.220
你会发现是一个Promise对象

01:05:21.220 --> 01:05:23.220
Promise对象

01:05:23.220 --> 01:05:24.220
其实

01:05:24.220 --> 01:05:25.220
咱们刚才

01:05:25.220 --> 01:05:27.220
可以不需要使用Promise对象

01:05:27.220 --> 01:05:28.220
因为我们通过

01:05:28.220 --> 01:05:29.220
GateFelds的Values

01:05:29.220 --> 01:05:31.220
来进行一个自断的获取

01:05:31.220 --> 01:05:32.220
那现在呢

01:05:32.220 --> 01:05:34.220
我们使用ValidataFelds

01:05:34.220 --> 01:05:36.220
它呢是返回一个Promise对象

01:05:36.220 --> 01:05:38.220
那我们就使用Av8

01:05:38.220 --> 01:05:40.220
给它进行一个获取

01:05:40.220 --> 01:05:41.220
然后呢

01:05:41.220 --> 01:05:42.220
对这个Promise

01:05:42.220 --> 01:05:43.220
使用Av8了

01:05:43.220 --> 01:05:44.220
那我这里面

01:05:44.220 --> 01:05:46.220
就使用一个Esin和关键字

01:05:46.220 --> 01:05:48.220
咱们再来做一个操作

01:05:48.220 --> 01:05:49.220
1 2 1

01:05:49.220 --> 01:05:50.220
我一点击

01:05:50.220 --> 01:05:51.220
你会发现

01:05:51.220 --> 01:05:52.220
AccountName是不是出来了

01:05:52.220 --> 01:05:54.220
如果说对手机号的一个操作

01:05:54.220 --> 01:05:55.220
211

01:05:55.220 --> 01:05:56.220
然后1点击

01:05:56.220 --> 01:05:57.220
那你会发现

01:05:57.220 --> 01:05:58.220
这个时候过不去

01:05:58.220 --> 01:05:59.220
因为什么呢

01:05:59.220 --> 01:06:00.220
它的一个报错了

01:06:00.220 --> 01:06:02.220
报错是检测规则报错

01:06:02.220 --> 01:06:03.220
检测规则报错

01:06:03.220 --> 01:06:05.220
其实就没办法处罚

01:06:05.220 --> 01:06:06.220
这个里面的相应操作

01:06:06.220 --> 01:06:07.220
对不对

01:06:07.220 --> 01:06:09.220
你不用考虑这个问题

01:06:09.220 --> 01:06:12.220
然后我们可以去TryCatch一下

01:06:12.220 --> 01:06:13.220
如果说你要报错了

01:06:13.220 --> 01:06:14.220
那我们直接的

01:06:14.220 --> 01:06:16.220
对这个失去焦点的时候

01:06:16.220 --> 01:06:18.220
我们让它这个里面的这个值

01:06:18.220 --> 01:06:20.220
还回归原来的样子

01:06:20.220 --> 01:06:21.220
就OK了

01:06:21.220 --> 01:06:22.220
也就是说

01:06:22.220 --> 01:06:23.220
把它让它做一个

01:06:23.220 --> 01:06:25.220
那这个是我们一个优化操作

01:06:25.220 --> 01:06:27.220
现在我们先不去做任何处理

01:06:27.220 --> 01:06:29.220
这个时候我们知道

01:06:29.220 --> 01:06:31.220
现在如果说手机号

01:06:31.220 --> 01:06:32.220
换一个正确的

01:06:32.220 --> 01:06:34.220
换一个正确1点击

01:06:34.220 --> 01:06:35.220
Mobile Account

01:06:35.220 --> 01:06:36.220
是不是都有了

01:06:36.220 --> 01:06:37.220
都有了之后

01:06:37.220 --> 01:06:39.220
我们这里面就可以调用

01:06:39.220 --> 01:06:40.220
API请求了

01:06:40.220 --> 01:06:42.220
我们这里面API请求

01:06:42.220 --> 01:06:44.220
首先我们可以获取

01:06:44.220 --> 01:06:45.220
Date和MSG

01:06:45.220 --> 01:06:47.220
Date和MSG

01:06:47.220 --> 01:06:48.220
Vate

01:06:48.220 --> 01:06:50.220
这里面就是

01:06:50.220 --> 01:06:52.220
使用我们DollarHTTP

01:06:52.220 --> 01:06:53.220
之前我们也使用过

01:06:53.220 --> 01:06:54.220
那个是什么

01:06:54.220 --> 01:06:56.220
CheckAzTaste

01:06:56.220 --> 01:06:58.220
看它是否存在

01:06:58.220 --> 01:06:59.220
存在的时候

01:06:59.220 --> 01:07:01.220
我们这里面传递的是什么

01:07:01.220 --> 01:07:03.220
CheckDate

01:07:03.220 --> 01:07:04.220
也就是说我们需要

01:07:04.220 --> 01:07:06.220
带检测的这么一个对象

01:07:06.220 --> 01:07:08.220
把它来改一下

01:07:08.220 --> 01:07:11.220
CheckDate带检测的对象

01:07:11.220 --> 01:07:12.220
这个里面

01:07:12.220 --> 01:07:13.220
就是我们刚才

01:07:13.220 --> 01:07:15.220
定义好的Data

01:07:15.220 --> 01:07:17.220
但是他们相互之间

01:07:17.220 --> 01:07:18.220
有冲突了

01:07:18.220 --> 01:07:21.220
我这里面就给它来改一下

01:07:22.220 --> 01:07:23.220
这个叫什么

01:07:23.220 --> 01:07:24.220
IQData

01:07:24.220 --> 01:07:25.220
请求的这么一个数据

01:07:25.220 --> 01:07:26.220
对吧

01:07:26.220 --> 01:07:27.220
那这时候

01:07:27.220 --> 01:07:29.220
Vate和DollarHTTP

01:07:29.220 --> 01:07:30.220
暂时现在都没有

01:07:30.220 --> 01:07:31.220
对吧

01:07:31.220 --> 01:07:32.220
我们怎么办呢

01:07:32.220 --> 01:07:33.220
先把DollarHTTP

01:07:33.220 --> 01:07:34.220
给拿出来

01:07:34.220 --> 01:07:36.220
ImportDollarHTTP

01:07:36.220 --> 01:07:38.220
服装从我们的

01:07:38.220 --> 01:07:39.220
这个API里面

01:07:39.220 --> 01:07:41.220
来给它进行一个获取

01:07:41.220 --> 01:07:42.220
Async

01:07:42.220 --> 01:07:44.220
VateDollarHTTP

01:07:44.220 --> 01:07:46.220
这个里面有一定的

01:07:46.220 --> 01:07:48.780
问题

01:07:48.780 --> 01:07:50.780
Conse的IQData

01:07:50.780 --> 01:07:52.780
CheckData4

01:07:52.780 --> 01:07:53.780
DollarHTTP

01:07:53.780 --> 01:07:54.780
为什么有暴洪

01:07:54.780 --> 01:07:55.780
我看一下

01:07:55.780 --> 01:07:57.780
IQDataVate

01:07:57.780 --> 01:07:59.780
感觉上没有什么问题

01:07:59.780 --> 01:08:01.780
然后我看一下

01:08:01.780 --> 01:08:02.780
这一块

01:08:02.780 --> 01:08:04.780
AsyncCheckAccidents

01:08:04.780 --> 01:08:06.780
难道有报错吗

01:08:06.780 --> 01:08:07.780
有报错了

01:08:07.780 --> 01:08:09.780
Conse的DataMSG

01:08:09.780 --> 01:08:11.780
这里面少写了一个等号

01:08:11.780 --> 01:08:12.780
好了

01:08:12.780 --> 01:08:13.780
咱们再回来

01:08:13.780 --> 01:08:14.780
回来之后

01:08:14.780 --> 01:08:15.780
我们刷新一下

01:08:15.780 --> 01:08:16.780
这里面有报错

01:08:16.780 --> 01:08:17.780
报了好多错

01:08:17.780 --> 01:08:19.780
咱们重新来做一下

01:08:19.780 --> 01:08:20.780
到这个里面

01:08:20.780 --> 01:08:21.780
我们一点击

01:08:21.780 --> 01:08:22.780
小铭出来了

01:08:22.780 --> 01:08:23.780
这里面

01:08:23.780 --> 01:08:24.780
我小铭

01:08:24.780 --> 01:08:25.780
这里面

01:08:25.780 --> 01:08:26.780
再一点击

01:08:26.780 --> 01:08:27.780
你会发现

01:08:27.780 --> 01:08:28.780
这里面

01:08:29.780 --> 01:08:30.780
然后说我们

01:08:30.780 --> 01:08:32.780
DetailFile102

01:08:32.780 --> 01:08:34.780
这个行没找到

01:08:34.780 --> 01:08:35.780
不能找到

01:08:35.780 --> 01:08:38.780
CheckIsExTest

01:08:38.780 --> 01:08:40.780
感觉上应该是可以

01:08:40.780 --> 01:08:42.780
ImportDollarHTTP

01:08:42.780 --> 01:08:44.780
Sorry 这个冤枉

01:08:44.780 --> 01:08:46.780
中间做了一个解构

01:08:46.780 --> 01:08:48.780
然后咱们再来看一下

01:08:48.780 --> 01:08:49.780
到这个里面

01:08:49.780 --> 01:08:50.780
一点击的时候

01:08:50.780 --> 01:08:51.780
这个时候

01:08:51.780 --> 01:08:52.780
现代是没报错

01:08:52.780 --> 01:08:53.780
我们再来看一下

01:08:53.780 --> 01:08:54.780
你刷新

01:08:54.780 --> 01:08:56.780
你会发现False

01:08:56.780 --> 01:08:57.780
False指的是什么

01:08:57.780 --> 01:08:59.780
这里面说的是

01:08:59.780 --> 01:09:00.780
意思是什么

01:09:00.780 --> 01:09:01.780
它不存在

01:09:01.780 --> 01:09:02.780
因为咱们知道

01:09:02.780 --> 01:09:03.780
False

01:09:03.780 --> 01:09:05.780
如果说你要是处的话

01:09:05.780 --> 01:09:06.780
那代表着它存在

01:09:06.780 --> 01:09:07.780
假如说要是False

01:09:07.780 --> 01:09:09.780
那就是没有的意思

01:09:09.780 --> 01:09:10.780
这个小铭

01:09:10.780 --> 01:09:11.780
小铭返回一个什么

01:09:11.780 --> 01:09:13.780
当前账户已经存在

01:09:13.780 --> 01:09:14.780
账户名人已经存在

01:09:14.780 --> 01:09:16.780
如果说手机号码

01:09:16.780 --> 01:09:17.780
我之前也验证过

01:09:17.780 --> 01:09:19.780
咱们就不在这里

01:09:19.780 --> 01:09:20.780
再继续做验证了

01:09:20.780 --> 01:09:21.780
是False

01:09:21.780 --> 01:09:22.780
总之你要是False的话

01:09:22.780 --> 01:09:23.780
那就可以

01:09:23.780 --> 01:09:24.780
如果说Data有值的话

01:09:24.780 --> 01:09:25.780
那你这里面

01:09:25.780 --> 01:09:26.780
是不是得给它一个提示

01:09:26.780 --> 01:09:27.780
对不对

01:09:27.780 --> 01:09:28.780
那提示的话

01:09:28.780 --> 01:09:29.780
咱们怎么提示

01:09:29.780 --> 01:09:31.780
如果说Data有值

01:09:31.780 --> 01:09:32.780
那我直接的

01:09:32.780 --> 01:09:33.780
给它return掉

01:09:33.780 --> 01:09:34.780
是不是

01:09:34.780 --> 01:09:36.780
并且我给它做一个什么

01:09:36.780 --> 01:09:37.780
值的提示

01:09:37.780 --> 01:09:40.780
那我就是message.addure

01:09:40.780 --> 01:09:42.780
给它报一个错吧

01:09:42.780 --> 01:09:43.780
错是什么

01:09:43.780 --> 01:09:44.780
是我们的MSG

01:09:44.780 --> 01:09:45.780
也就是说

01:09:45.780 --> 01:09:47.780
现在里面已经有这个

01:09:47.780 --> 01:09:48.780
我们数据库里面

01:09:48.780 --> 01:09:49.780
这个值的

01:09:49.780 --> 01:09:50.780
你就不要再添加了

01:09:50.780 --> 01:09:51.780
这里面小名一页

01:09:51.780 --> 01:09:52.780
当天照名已经存在

01:09:52.780 --> 01:09:54.780
请你进行一个更换

01:09:54.780 --> 01:09:56.780
当你已经说了

01:09:56.780 --> 01:09:57.780
请你进行更换的时候

01:09:57.780 --> 01:09:59.780
那其实它这个输入

01:09:59.780 --> 01:10:01.780
基本上就是无效的了

01:10:01.780 --> 01:10:02.780
对不对

01:10:02.780 --> 01:10:03.780
那你既然无效

01:10:03.780 --> 01:10:04.780
那我直接的给你

01:10:04.780 --> 01:10:05.780
重新设置回来

01:10:05.780 --> 01:10:06.780
是不是就可以了

01:10:06.780 --> 01:10:07.780
那这个时候

01:10:07.780 --> 01:10:09.780
我们就把它来做一下

01:10:09.780 --> 01:10:11.780
如果说Data有值

01:10:11.780 --> 01:10:14.780
我们输出一个弹窗

01:10:14.780 --> 01:10:15.780
这是第一步

01:10:15.780 --> 01:10:16.780
对不对

01:10:16.780 --> 01:10:19.780
然后我们在前面来做一个操作

01:10:19.780 --> 01:10:20.780
也就是说

01:10:20.780 --> 01:10:22.780
把这个值给做一个更改

01:10:22.780 --> 01:10:25.780
formal.setfile的values

01:10:25.780 --> 01:10:27.780
然后它是一个

01:10:27.780 --> 01:10:28.780
对象

01:10:28.780 --> 01:10:29.780
我们这里面

01:10:29.780 --> 01:10:30.780
以kvalue的形式

01:10:30.780 --> 01:10:32.780
来给它进行一个什么

01:10:32.780 --> 01:10:33.780
进行一个填充

01:10:33.780 --> 01:10:34.780
item.

01:10:34.780 --> 01:10:35.780
这个

01:10:35.780 --> 01:10:37.780
应该是把哪个字段做处理

01:10:37.780 --> 01:10:39.780
那就是item.itemname

01:10:39.780 --> 01:10:40.780
对不对

01:10:40.780 --> 01:10:41.780
这个是它的k值

01:10:41.780 --> 01:10:42.780
value值

01:10:42.780 --> 01:10:43.780
我们给它重新复职

01:10:43.780 --> 01:10:44.780
复职为什么

01:10:44.780 --> 01:10:45.780
就是我们原来的这个

01:10:45.780 --> 01:10:47.780
staff detail.

01:10:47.780 --> 01:10:48.780
下面的一个什么

01:10:48.780 --> 01:10:51.780
item.itemname

01:10:51.780 --> 01:10:52.780
回到这里面

01:10:52.780 --> 01:10:54.780
staff detail.

01:10:54.780 --> 01:10:55.780
不是.

01:10:55.780 --> 01:10:56.780
这应该是中括号

01:10:56.780 --> 01:10:58.780
item.itemname

01:10:58.780 --> 01:10:59.780
这是啥意思

01:10:59.780 --> 01:11:00.780
如果说

01:11:00.780 --> 01:11:02.780
你要是已经存在了

01:11:02.780 --> 01:11:03.780
那我现在

01:11:03.780 --> 01:11:04.780
你也别修改了

01:11:04.780 --> 01:11:05.780
直接的你这个错值

01:11:05.780 --> 01:11:06.780
也别保留了

01:11:06.780 --> 01:11:07.780
对不对

01:11:07.780 --> 01:11:08.780
我直接的就让你

01:11:08.780 --> 01:11:09.780
还回归原来的这个值

01:11:09.780 --> 01:11:10.780
就可以了

01:11:10.780 --> 01:11:11.780
比如说现在小明

01:11:11.780 --> 01:11:12.780
假如说已经存在

01:11:12.780 --> 01:11:13.780
那你再回去

01:11:13.780 --> 01:11:14.780
跟小明一样

01:11:14.780 --> 01:11:16.780
就不让你再进行设置

01:11:16.780 --> 01:11:17.780
那其实同时

01:11:17.780 --> 01:11:18.780
如果说是错误的

01:11:18.780 --> 01:11:19.780
这个手机号码

01:11:19.780 --> 01:11:20.780
格式不正确之后

01:11:20.780 --> 01:11:22.780
假如说你失去焦点

01:11:22.780 --> 01:11:23.780
那我也同时

01:11:23.780 --> 01:11:24.780
让你去

01:11:24.780 --> 01:11:25.780
做这么一个操作

01:11:25.780 --> 01:11:26.780
是不是就可以

01:11:26.780 --> 01:11:27.780
那现在我们就把这个

01:11:27.780 --> 01:11:28.780
给来实现一下吧

01:11:28.780 --> 01:11:29.780
实现一下怎么办

01:11:29.780 --> 01:11:30.780
我们这里面

01:11:30.780 --> 01:11:31.780
try catch

01:11:31.780 --> 01:11:34.780
来做一个操作

01:11:34.780 --> 01:11:35.780
在哪个里面

01:11:35.780 --> 01:11:37.780
其实我们这个里面

01:11:37.780 --> 01:11:38.780
如果说你验证不通过的话

01:11:38.780 --> 01:11:39.780
我在这个里面

01:11:39.780 --> 01:11:40.780
就能获取到

01:11:40.780 --> 01:11:42.780
try catch

01:11:42.780 --> 01:11:43.780
在这

01:11:43.780 --> 01:11:44.780
try

01:11:44.780 --> 01:11:45.780
然后是使用

01:11:45.780 --> 01:11:47.780
这种try catch的形式

01:11:47.780 --> 01:11:50.780
把这些都放在这个里面

01:11:50.780 --> 01:11:51.780
来

01:11:51.780 --> 01:11:52.780
当你失去焦点

01:11:52.780 --> 01:11:53.780
然后我们这里面

01:11:53.780 --> 01:11:55.780
打印一下错误信息

01:11:55.780 --> 01:11:56.780
一二二

01:11:56.780 --> 01:11:57.780
二二对不对

01:11:57.780 --> 01:12:00.480
来咱们看一下

01:12:00.480 --> 01:12:01.480
是否可行

01:12:01.480 --> 01:12:02.480
我们在这个里面

01:12:02.480 --> 01:12:03.480
现在手机号码

01:12:03.480 --> 01:12:04.480
格式不正确

01:12:04.480 --> 01:12:05.480
对吧

01:12:05.480 --> 01:12:06.480
我失去焦点之后

01:12:06.480 --> 01:12:07.480
那你会发现

01:12:07.480 --> 01:12:08.480
detail form 136行

01:12:08.480 --> 01:12:09.480
这个也执行了

01:12:09.480 --> 01:12:11.480
136行其实执行

01:12:11.480 --> 01:12:12.480
我们这里面

01:12:12.480 --> 01:12:13.480
给他做一个什么

01:12:13.480 --> 01:12:15.480
32打印一个行号

01:12:15.480 --> 01:12:16.480
这是经过变异的

01:12:16.480 --> 01:12:17.480
那咱们看不出来

01:12:17.480 --> 01:12:18.480
对吧

01:12:18.480 --> 01:12:19.480
那我们直接的

01:12:19.480 --> 01:12:21.480
二一然后判断一下

01:12:21.480 --> 01:12:23.480
32行报了一个错

01:12:23.480 --> 01:12:24.480
Iron fails

01:12:24.480 --> 01:12:26.480
然后Valus说是

01:12:26.480 --> 01:12:27.480
反正是你有错了

01:12:27.480 --> 01:12:28.480
对不对

01:12:28.480 --> 01:12:29.480
你有错的Valus

01:12:29.480 --> 01:12:30.480
就是这个mobile

01:12:30.480 --> 01:12:32.480
那现在我们要做一件事

01:12:32.480 --> 01:12:33.480
其实事情

01:12:33.480 --> 01:12:35.480
合调是完全一致的

01:12:35.480 --> 01:12:36.480
也就是说

01:12:36.480 --> 01:12:37.480
给他重新设置回去

01:12:37.480 --> 01:12:38.480
是不是就可以了

01:12:38.480 --> 01:12:39.480
你别在这块

01:12:39.480 --> 01:12:41.480
直接的拿一颗就职

01:12:41.480 --> 01:12:43.480
错职在这块显示了

01:12:43.480 --> 01:12:45.480
52752511ok 1点击

01:12:45.480 --> 01:12:47.480
那又变成2522

01:12:47.480 --> 01:12:49.480
也就是说原来的这个职对吧

01:12:49.480 --> 01:12:51.480
那这个我们就容错处理完了

01:12:51.480 --> 01:12:52.480
当他这个

01:12:52.480 --> 01:12:54.480
已经具备了相关的检测

01:12:54.480 --> 01:12:56.480
也就是说判断完行就职

01:12:56.480 --> 01:12:57.480
包括我们

01:12:57.480 --> 01:12:59.480
账户名和手机号码的验证之后

01:12:59.480 --> 01:13:00.480
那现在呢

01:13:00.480 --> 01:13:02.480
如果说这些都通过之后

01:13:02.480 --> 01:13:03.480
我们现在是不是

01:13:03.480 --> 01:13:04.480
就可以进行一个提交了

01:13:04.480 --> 01:13:05.480
提交的时候

01:13:05.480 --> 01:13:06.480
我这里面就写一个什么

01:13:06.480 --> 01:13:08.480
修改用户的这么一个操作

01:13:08.480 --> 01:13:09.480
对不对

01:13:09.480 --> 01:13:10.480
那我这里面写一下

01:13:11.480 --> 01:13:14.480
updata user info

01:13:14.480 --> 01:13:17.860
或者是staff

01:13:17.860 --> 01:13:18.860
updata staff

01:13:18.860 --> 01:13:19.860
ok 在这个里面

01:13:19.860 --> 01:13:21.860
我们就来定义一下

01:13:21.860 --> 01:13:22.860
这个呢

01:13:22.860 --> 01:13:23.860
才是我们真正的需要

01:13:23.860 --> 01:13:25.860
修改我们表单项的

01:13:25.860 --> 01:13:27.860
这么一个操作寒朔

01:13:27.860 --> 01:13:28.860
那这里面

01:13:28.860 --> 01:13:30.860
我们是写一下修改表单项

01:13:30.860 --> 01:13:33.420
定义一下

01:13:33.420 --> 01:13:36.420
constupdata staff

01:13:36.420 --> 01:13:38.420
等于一个职

01:13:38.420 --> 01:13:40.420
updata staff等于一个职

01:13:40.420 --> 01:13:41.420
等于什么职呢

01:13:41.420 --> 01:13:42.420
我们在这验证半年

01:13:42.420 --> 01:13:43.420
你不能把验证啊

01:13:43.420 --> 01:13:44.420
对不对

01:13:44.420 --> 01:13:45.420
那这个时候呢

01:13:45.420 --> 01:13:47.420
我们是需要把这些职

01:13:47.420 --> 01:13:49.420
给进行一个获取的

01:13:49.420 --> 01:13:50.420
也就是说

01:13:50.420 --> 01:13:51.420
把这个item

01:13:51.420 --> 01:13:52.420
给它进行一个传递

01:13:52.420 --> 01:13:53.420
对不对

01:13:53.420 --> 01:13:54.420
然后呢

01:13:54.420 --> 01:13:55.420
我们再把这个

01:13:55.420 --> 01:13:57.420
已经获取好的这个

01:13:57.420 --> 01:13:58.420
请求对象

01:13:58.420 --> 01:13:59.420
对吧

01:13:59.420 --> 01:14:00.420
也就是说

01:14:00.420 --> 01:14:01.420
这里面有一个什么

01:14:01.420 --> 01:14:02.420
oldwile和newwile

01:14:02.420 --> 01:14:04.420
但这个oldwile和newwile

01:14:04.420 --> 01:14:05.420
它是一个职

01:14:05.420 --> 01:14:06.420
职也行

01:14:06.420 --> 01:14:07.420
咱们把它这个

01:14:07.420 --> 01:14:08.420
给拿过来

01:14:08.420 --> 01:14:10.420
然后呢咱们放在这个里面

01:14:10.420 --> 01:14:11.420
来进行一个处理

01:14:11.420 --> 01:14:12.420
那这个处理的时候

01:14:12.420 --> 01:14:13.420
我们首先

01:14:13.420 --> 01:14:15.420
这个里面是item传递过来

01:14:15.420 --> 01:14:16.420
对不对

01:14:16.420 --> 01:14:17.420
item传递过来之后

01:14:17.420 --> 01:14:18.420
还有一个什么呢

01:14:18.420 --> 01:14:19.420
newwile

01:14:19.420 --> 01:14:20.420
OK

01:14:20.420 --> 01:14:22.420
那这里面写一个sync

01:14:22.420 --> 01:14:23.420
然后呢

01:14:23.420 --> 01:14:24.420
我让它等于一个

01:14:24.420 --> 01:14:25.420
建筒按锁

01:14:25.420 --> 01:14:27.420
这里面给它一个托风

01:14:27.420 --> 01:14:29.420
newwile

01:14:29.420 --> 01:14:30.420
那现在我们就可以

01:14:30.420 --> 01:14:31.420
来做事了

01:14:31.420 --> 01:14:33.420
这里面打印一下

01:14:33.420 --> 01:14:34.420
什么呢

01:14:34.420 --> 01:14:35.420
我们的这个item

01:14:35.420 --> 01:14:37.420
和这个newwile

01:14:37.420 --> 01:14:39.420
然后咱们来看一下职

01:14:39.420 --> 01:14:40.420
如果说修改小名

01:14:40.420 --> 01:14:41.420
这个账户名的话

01:14:41.420 --> 01:14:43.420
那就是小名

01:14:43.420 --> 01:14:45.420
感觉这样修改了

01:14:45.420 --> 01:14:46.420
那我们这里面再来一下

01:14:46.420 --> 01:14:48.420
没有处罚它

01:14:48.420 --> 01:14:49.420
这个事情就有点怪了

01:14:49.420 --> 01:14:50.420
我们看一下

01:14:50.420 --> 01:14:52.420
哪个里面有抱错

01:14:52.420 --> 01:14:54.420
它直接给我们更改了

01:14:54.420 --> 01:14:55.420
来咱们看一眼

01:14:56.420 --> 01:14:58.420
服务器那部错误

01:14:58.420 --> 01:14:59.420
这里面重新刷新

01:14:59.420 --> 01:15:00.420
我们再进行一个

01:15:00.420 --> 01:15:01.420
登录操作

01:15:01.420 --> 01:15:02.420
我们这里面

01:15:02.420 --> 01:15:03.420
重新登录一下

01:15:03.420 --> 01:15:05.420
item123qwe

01:15:05.420 --> 01:15:07.420
当我登录完成之后

01:15:07.420 --> 01:15:09.420
回到我们的员工这一块

01:15:09.420 --> 01:15:10.420
那既然是有错误

01:15:10.420 --> 01:15:11.420
那这样

01:15:11.420 --> 01:15:12.420
我们打印一下这个错误

01:15:12.420 --> 01:15:14.420
console.logirur

01:15:14.420 --> 01:15:15.420
把这个irur

01:15:15.420 --> 01:15:17.420
给做一个打印处理

01:15:17.420 --> 01:15:18.420
打印处理

01:15:18.420 --> 01:15:19.420
我们看一下

01:15:19.420 --> 01:15:20.420
具体是哪里的错误

01:15:20.420 --> 01:15:21.420
点击

01:15:21.420 --> 01:15:22.420
那这个时候

01:15:22.420 --> 01:15:23.420
我们随便点一个吧

01:15:23.420 --> 01:15:25.420
关于111有抱错

01:15:25.420 --> 01:15:26.420
抓到错误了

01:15:26.420 --> 01:15:27.420
iqdata

01:15:27.420 --> 01:15:28.420
一脑底泛的

01:15:28.420 --> 01:15:29.420
iqdata

01:15:29.420 --> 01:15:30.420
一脑底泛的

01:15:30.420 --> 01:15:31.420
是这一块

01:15:31.420 --> 01:15:32.420
这一块

01:15:32.420 --> 01:15:33.420
我们其实是有个

01:15:33.420 --> 01:15:34.420
块地综域里面

01:15:34.420 --> 01:15:35.420
升级了

01:15:35.420 --> 01:15:36.420
定义了一个iqdata

01:15:36.420 --> 01:15:37.420
那这个时候

01:15:37.420 --> 01:15:38.420
我们传递的时候

01:15:38.420 --> 01:15:39.420
应该传递一个什么

01:15:39.420 --> 01:15:40.420
Ni560

01:15:40.420 --> 01:15:41.420
对吧

01:15:41.420 --> 01:15:42.420
把这个来做一下

01:15:42.420 --> 01:15:43.420
难怪

01:15:43.420 --> 01:15:44.420
它一直给我们

01:15:44.420 --> 01:15:45.420
返回这个值

01:15:45.420 --> 01:15:46.420
好了

01:15:46.420 --> 01:15:47.420
那现在就了

01:15:47.420 --> 01:15:48.420
新值

01:15:48.420 --> 01:15:49.420
还有这些

01:15:49.420 --> 01:15:50.420
我们自断都有了

01:15:50.420 --> 01:15:51.420
对不对

01:15:51.420 --> 01:15:52.420
有的新值和自断之后

01:15:52.420 --> 01:15:53.420
其实我们现在

01:15:53.420 --> 01:15:54.420
就可以来进行一个修改了

01:15:54.420 --> 01:15:56.420
首先修改的时候

01:15:56.420 --> 01:15:58.420
那我们拿到这个值之后

01:15:58.420 --> 01:15:59.420
第一步

01:15:59.420 --> 01:16:00.420
就是调接口

01:16:00.420 --> 01:16:01.420
对不对

01:16:01.420 --> 01:16:02.420
那我这里面

01:16:02.420 --> 01:16:03.420
就来Consta

01:16:03.420 --> 01:16:04.420
获取一下

01:16:04.420 --> 01:16:05.420
其实修改也不返回

01:16:05.420 --> 01:16:06.420
什么内容了

01:16:06.420 --> 01:16:07.420
只有这个code

01:16:07.420 --> 01:16:08.420
和msg

01:16:08.420 --> 01:16:09.420
然后呢

01:16:09.420 --> 01:16:10.420
我们就给它解析出来

01:16:10.420 --> 01:16:11.420
code msg

01:16:11.420 --> 01:16:13.420
等于我们定义好的这个await

01:16:13.420 --> 01:16:15.420
await通过dollarhttp

01:16:15.420 --> 01:16:16.420
然后呢

01:16:16.420 --> 01:16:17.420
我们去点调用

01:16:17.420 --> 01:16:18.420
那首先

01:16:18.420 --> 01:16:19.420
你得知道

01:16:19.420 --> 01:16:20.420
修改的接口是啥

01:16:20.420 --> 01:16:21.420
对吧

01:16:21.420 --> 01:16:22.420
那我们修改接口在哪了

01:16:22.420 --> 01:16:24.420
在我们Stuff下面

01:16:24.420 --> 01:16:26.420
这里面有一个修改员工

01:16:26.420 --> 01:16:27.420
update的stuff

01:16:27.420 --> 01:16:28.420
请求方法呢

01:16:28.420 --> 01:16:29.420
是铺的请求

01:16:29.420 --> 01:16:31.420
它的传递的这个值呢

01:16:31.420 --> 01:16:32.420
应该是如何传递

01:16:32.420 --> 01:16:33.420
我们可以来看一下

01:16:33.420 --> 01:16:34.420
到这个里面

01:16:34.420 --> 01:16:36.420
回到我们山柱员工

01:16:36.420 --> 01:16:37.420
咱们先不管错误

01:16:38.420 --> 01:16:39.420
这个里面是山柱员工

01:16:39.420 --> 01:16:40.420
那山柱不对啊

01:16:40.420 --> 01:16:41.420
我们这里面是修改

01:16:41.420 --> 01:16:42.420
修改的时候

01:16:42.420 --> 01:16:44.420
我们传一个type

01:16:44.420 --> 01:16:46.420
也就是说你修改的当前类型

01:16:46.420 --> 01:16:47.420
之后呢

01:16:47.420 --> 01:16:48.420
是修改之后的一个新值啊

01:16:48.420 --> 01:16:49.420
非常简单

01:16:49.420 --> 01:16:51.420
那我们就来写一下

01:16:51.420 --> 01:16:52.420
写一下应该是什么

01:16:52.420 --> 01:16:55.420
我们在这个里面update的时候

01:16:55.420 --> 01:16:57.420
await dollarhttp

01:16:57.420 --> 01:16:59.420
update stuff

01:16:59.420 --> 01:17:00.420
然后呢

01:17:00.420 --> 01:17:01.420
那这个字段你得知道一下

01:17:01.420 --> 01:17:02.420
字段是哪一个

01:17:02.420 --> 01:17:04.420
我们回到这个里面

01:17:04.420 --> 01:17:06.420
回到我们的这个里面啊

01:17:06.420 --> 01:17:07.420
到这个里面之后

01:17:07.420 --> 01:17:08.420
找一下这个字段

01:17:08.420 --> 01:17:10.420
字段应该是在上面啊

01:17:10.420 --> 01:17:12.420
上面是不是有这个字段

01:17:12.420 --> 01:17:14.420
我们其实要修改它的什么

01:17:14.420 --> 01:17:15.420
Uther name

01:17:15.420 --> 01:17:16.420
那Uther name

01:17:16.420 --> 01:17:18.420
我们直接的就要获取

01:17:18.420 --> 01:17:20.420
这个全传递过来

01:17:20.420 --> 01:17:22.420
是没有什么意义的

01:17:22.420 --> 01:17:23.420
那我们直接的item

01:17:23.420 --> 01:17:24.420
item name

01:17:24.420 --> 01:17:25.420
是不是就可以了

01:17:25.420 --> 01:17:26.420
那这个里面

01:17:26.420 --> 01:17:27.420
就是我们的一个什么

01:17:27.420 --> 01:17:28.420
K值啊

01:17:28.420 --> 01:17:29.420
也就是说

01:17:29.420 --> 01:17:30.420
它呢是我们

01:17:30.420 --> 01:17:32.420
需要修改的内容啊

01:17:32.420 --> 01:17:33.420
然后啊不行

01:17:33.420 --> 01:17:34.420
这个里面

01:17:34.420 --> 01:17:35.420
不能单独的传

01:17:35.420 --> 01:17:36.420
因为我们修改的时候

01:17:36.420 --> 01:17:38.420
还有一个值是需要传递的

01:17:38.420 --> 01:17:39.420
我们可以看一下

01:17:39.420 --> 01:17:40.420
这个里面

01:17:40.420 --> 01:17:41.420
如果说你修改的时候

01:17:41.420 --> 01:17:42.420
你还需要传递一个

01:17:42.420 --> 01:17:44.420
当前指定字段的一个ID啊

01:17:44.420 --> 01:17:46.420
那我们这个ID有没有

01:17:46.420 --> 01:17:47.420
其实这个ID呢

01:17:47.420 --> 01:17:48.420
现代啊

01:17:48.420 --> 01:17:50.420
是没有的对不对

01:17:50.420 --> 01:17:51.420
嗯

01:17:51.420 --> 01:17:52.420
这个事就尴尬了

01:17:52.420 --> 01:17:53.420
还没有

01:17:53.420 --> 01:17:54.420
那我们直接的

01:17:54.420 --> 01:17:55.420
这样了

01:17:55.420 --> 01:17:56.420
还是这样传啊

01:17:56.420 --> 01:17:58.420
我们直接的item

01:17:58.420 --> 01:17:59.420
点

01:17:59.420 --> 01:18:00.420
item name

01:18:00.420 --> 01:18:01.420
其实本身

01:18:01.420 --> 01:18:02.420
它这个里面也没有

01:18:02.420 --> 01:18:03.420
那我们直接就给它传一个

01:18:03.420 --> 01:18:04.420
item点

01:18:04.420 --> 01:18:05.420
item name

01:18:05.420 --> 01:18:06.420
这是修改的字段

01:18:06.420 --> 01:18:07.420
然后呢

01:18:07.420 --> 01:18:08.420
这个是新的值

01:18:08.420 --> 01:18:09.420
那新的值呢

01:18:09.420 --> 01:18:10.420
我们直接的

01:18:10.420 --> 01:18:11.420
把这个就变成type

01:18:11.420 --> 01:18:12.420
因为我们这里面

01:18:12.420 --> 01:18:13.420
是不是接受它的时候

01:18:13.420 --> 01:18:14.420
啊

01:18:14.420 --> 01:18:15.420
要去

01:18:15.420 --> 01:18:16.420
突发它的这么一个

01:18:16.420 --> 01:18:18.420
type值就可以了对不对

01:18:18.420 --> 01:18:19.420
那这个里面

01:18:19.420 --> 01:18:20.420
我们就来写一下吧

01:18:20.420 --> 01:18:21.420
await

01:18:21.420 --> 01:18:22.420
update

01:18:22.420 --> 01:18:23.420
staff

01:18:23.420 --> 01:18:24.420
然后这里面

01:18:24.420 --> 01:18:25.420
传递的值

01:18:25.420 --> 01:18:26.420
分别有哪些

01:18:26.420 --> 01:18:27.420
首先呢是一个ID

01:18:27.420 --> 01:18:28.420
ID刚才咱们说了

01:18:28.420 --> 01:18:30.420
我们这个后端定义的

01:18:30.420 --> 01:18:31.420
数据里面

01:18:31.420 --> 01:18:32.420
显然是没有

01:18:32.420 --> 01:18:33.420
但是我们有一个

01:18:33.420 --> 01:18:34.420
updata下面

01:18:34.420 --> 01:18:35.420
是不是有这个ID值啊

01:18:35.420 --> 01:18:36.420
所以说

01:18:36.420 --> 01:18:37.420
我们可以从这个里面

01:18:37.420 --> 01:18:38.420
获取啊

01:18:38.420 --> 01:18:39.420
这个ID值

01:18:39.420 --> 01:18:40.420
然后呢

01:18:40.420 --> 01:18:41.420
我们修改的类型

01:18:41.420 --> 01:18:42.420
是不是就是我们传递过来的

01:18:42.420 --> 01:18:43.420
这个type

01:18:43.420 --> 01:18:44.420
对吧

01:18:44.420 --> 01:18:45.420
之后呢

01:18:45.420 --> 01:18:46.420
我们update

01:18:46.420 --> 01:18:47.420
这个

01:18:47.420 --> 01:18:48.420
Value值

01:18:48.420 --> 01:18:49.420
也就是说

01:18:49.420 --> 01:18:50.420
我们修改的新的Value

01:18:50.420 --> 01:18:51.420
新的Value

01:18:51.420 --> 01:18:52.420
Date

01:18:52.420 --> 01:18:53.420
新的Value

01:18:53.420 --> 01:18:54.420
应该是哪个

01:18:54.420 --> 01:18:55.420
是不是这个NewValue

01:18:55.420 --> 01:18:56.420
所以说

01:18:56.420 --> 01:18:57.420
我们这个

01:18:57.420 --> 01:18:58.420
为了简写一下

01:18:58.420 --> 01:18:59.420
就是updateValue

01:18:59.420 --> 01:19:00.420
把它来给放进去

01:19:00.420 --> 01:19:01.420
就可以了

01:19:01.420 --> 01:19:02.420
把它复制一下

01:19:02.420 --> 01:19:03.420
updateValue

01:19:03.420 --> 01:19:04.420
好了

01:19:04.420 --> 01:19:05.420
那这个呢

01:19:05.420 --> 01:19:06.420
就是需要我们传递的内容

01:19:06.420 --> 01:19:07.420
如果说

01:19:07.420 --> 01:19:08.420
它修改成功之后

01:19:08.420 --> 01:19:09.420
那这里面

01:19:09.420 --> 01:19:10.420
是不是就给我们返回值

01:19:10.420 --> 01:19:11.420
如果说

01:19:11.420 --> 01:19:12.420
你要错误了

01:19:12.420 --> 01:19:13.420
假如说

01:19:13.420 --> 01:19:14.420
扣的有值的话

01:19:14.420 --> 01:19:15.420
那我们直接给你

01:19:15.420 --> 01:19:16.420
重新调掉

01:19:16.420 --> 01:19:17.420
不做事情

01:19:17.420 --> 01:19:18.420
不做事情之后

01:19:18.420 --> 01:19:19.420
假如说

01:19:19.420 --> 01:19:20.420
你要成功

01:19:20.420 --> 01:19:21.420
那我们这里面

01:19:21.420 --> 01:19:22.420
打印出来一个什么

01:19:22.420 --> 01:19:23.420
MSG

01:19:23.420 --> 01:19:24.420
就可以了

01:19:24.420 --> 01:19:25.420
或者说呢

01:19:25.420 --> 01:19:26.420
我们直接的

01:19:26.420 --> 01:19:27.420
就通过message

01:19:27.420 --> 01:19:28.420
这里面

01:19:28.420 --> 01:19:29.420
点

01:19:29.420 --> 01:19:30.420
circ size

01:19:30.420 --> 01:19:31.420
成功

01:19:31.420 --> 01:19:32.420
是不是就可以了

01:19:32.420 --> 01:19:33.420
这样

01:19:33.420 --> 01:19:34.420
我们就定义完了

01:19:34.420 --> 01:19:35.420
定义完成之后

01:19:35.420 --> 01:19:36.420
咱们刷新一下

01:19:38.420 --> 01:19:39.420
好了修改一个

01:19:39.420 --> 01:19:40.420
小鸣悠悠

01:19:40.420 --> 01:19:41.420
那小鸣悠悠

01:19:41.420 --> 01:19:42.420
那我想修改为

01:19:42.420 --> 01:19:43.420
把它

01:19:43.420 --> 01:19:44.420
来把它

01:19:44.420 --> 01:19:45.420
后面的数字给干掉

01:19:45.420 --> 01:19:46.420
干掉之后

01:19:46.420 --> 01:19:47.420
我们来看一下

01:19:47.420 --> 01:19:48.420
有爆错

01:19:48.420 --> 01:19:49.420
有爆错

01:19:49.420 --> 01:19:50.420
item

01:19:50.420 --> 01:19:51.420
椅子脑的底范的

01:19:51.420 --> 01:19:52.420
console点

01:19:52.420 --> 01:19:53.420
logitem

01:19:53.420 --> 01:19:54.420
干干了

01:19:54.420 --> 01:19:55.420
把这个给去掉

01:19:55.420 --> 01:19:56.420
然后咱们再来一遍

01:19:56.420 --> 01:19:58.420
清空它之后

01:19:58.420 --> 01:20:00.420
刚才是小鸣悠悠

01:20:00.420 --> 01:20:01.420
那我再写一下

01:20:01.420 --> 01:20:02.420
小鸣

01:20:02.420 --> 01:20:03.420
再处发一下

01:20:03.420 --> 01:20:04.420
ok修改成功

01:20:04.420 --> 01:20:05.420
修改成功

01:20:05.420 --> 01:20:06.420
这里面有发挥值的

01:20:06.420 --> 01:20:07.420
对不对

01:20:07.420 --> 01:20:08.420
然后呢

01:20:08.420 --> 01:20:09.420
我这个时候刷新一下

01:20:09.420 --> 01:20:10.420
刷新一下

01:20:10.420 --> 01:20:11.420
你会发现这个小鸣

01:20:11.420 --> 01:20:12.420
这个姓名

01:20:12.420 --> 01:20:13.420
是不是已经发生更改了

01:20:13.420 --> 01:20:15.420
变成我们修改之后的这个值了

01:20:15.420 --> 01:20:17.420
变成修改之后的这个值

01:20:17.420 --> 01:20:18.420
其实呢

01:20:18.420 --> 01:20:20.420
我们是要实实同步更新的

01:20:20.420 --> 01:20:21.420
也就是说

01:20:21.420 --> 01:20:22.420
你看我现在小鸣悠悠悠之后

01:20:22.420 --> 01:20:23.420
修改成功了

01:20:23.420 --> 01:20:24.420
你既然修改成功了

01:20:24.420 --> 01:20:25.420
那你这个

01:20:25.420 --> 01:20:27.420
表达详情里面的这个内容

01:20:27.420 --> 01:20:28.420
是不是得需要改变

01:20:28.420 --> 01:20:29.420
而且呢

01:20:29.420 --> 01:20:30.420
我后面的这个内容

01:20:30.420 --> 01:20:31.420
也需要改变

01:20:31.420 --> 01:20:32.420
那这里面

01:20:32.420 --> 01:20:33.420
我就要做两件事

01:20:33.420 --> 01:20:34.420
哪两件事呢

01:20:34.420 --> 01:20:35.420
第一件事

01:20:35.420 --> 01:20:36.420
改变列表

01:20:36.420 --> 01:20:37.420
改变列表

01:20:37.420 --> 01:20:39.420
我们这已经早就准备好了一个

01:20:39.420 --> 01:20:40.420
因EAT

01:20:40.420 --> 01:20:41.420
Stuff Lease

01:20:41.420 --> 01:20:42.420
把它给调用一下

01:20:42.420 --> 01:20:44.420
调用完它之后

01:20:44.420 --> 01:20:45.420
那我们这个里面呢

01:20:45.420 --> 01:20:46.420
其实还有一个

01:20:46.420 --> 01:20:48.420
在model里面保存的数据

01:20:48.420 --> 01:20:50.420
我们可以来看一下

01:20:50.420 --> 01:20:51.420
这个里面有一个

01:20:51.420 --> 01:20:52.420
guideStuff Detail

01:20:52.420 --> 01:20:53.420
我们重新的

01:20:53.420 --> 01:20:54.420
对这个Stuff Detail

01:20:54.420 --> 01:20:55.420
进行一个获取

01:20:55.420 --> 01:20:56.420
是不是就可以了

01:20:56.420 --> 01:20:57.420
那我们通过

01:20:57.420 --> 01:20:58.420
dispatch的这种形式

01:20:58.420 --> 01:21:00.420
来对它进行一个获取

01:21:00.420 --> 01:21:01.420
这里面引入一下

01:21:01.420 --> 01:21:03.420
input一个什么呢

01:21:03.420 --> 01:21:04.420
我们的这个

01:21:04.420 --> 01:21:07.420
youzeDispatch

01:21:07.420 --> 01:21:09.420
youzeDispatch

01:21:09.420 --> 01:21:10.420
然后from

01:21:10.420 --> 01:21:12.420
从reactReduce里面也可以

01:21:12.420 --> 01:21:14.420
那我们这个里面

01:21:14.420 --> 01:21:16.420
从wumi来进行获取

01:21:16.420 --> 01:21:17.420
ok

01:21:17.420 --> 01:21:18.420
获取它之后

01:21:18.420 --> 01:21:20.420
我们就来给它进行一个

01:21:20.420 --> 01:21:22.420
调用Const

01:21:22.420 --> 01:21:23.420
我们这个是

01:21:23.420 --> 01:21:25.420
dispatch等于

01:21:25.420 --> 01:21:27.420
我们的youzeDispatch

01:21:27.420 --> 01:21:28.420
ok

01:21:28.420 --> 01:21:29.420
定义完成之后

01:21:29.420 --> 01:21:30.420
我们这个里面

01:21:30.420 --> 01:21:33.420
就可以来做这件事情了

01:21:33.420 --> 01:21:34.420
做这件事情的时候

01:21:34.420 --> 01:21:35.420
其实呢

01:21:35.420 --> 01:21:36.420
就是在这一块

01:21:36.420 --> 01:21:38.420
我们dispatch

01:21:38.420 --> 01:21:39.420
好了

01:21:39.420 --> 01:21:40.420
在这个里面

01:21:40.420 --> 01:21:41.420
来做一个处理

01:21:41.420 --> 01:21:42.420
里面呢

01:21:42.420 --> 01:21:43.420
指定一下它的这个类型

01:21:43.420 --> 01:21:44.420
那首先

01:21:44.420 --> 01:21:45.420
第一个是tap

01:21:45.420 --> 01:21:46.420
tap

01:21:46.420 --> 01:21:47.420
我们指定一下

01:21:47.420 --> 01:21:49.420
是stuff模块下面的

01:21:49.420 --> 01:21:51.420
stuff模块下面的什么呢

01:21:51.420 --> 01:21:53.420
就是我们刚才定义

01:21:53.420 --> 01:21:54.420
看到的

01:21:54.420 --> 01:21:56.420
该的stuff detail

01:21:56.420 --> 01:21:57.420
把它来做一下

01:21:57.420 --> 01:21:58.420
然后呢

01:21:58.420 --> 01:21:59.420
该的stuff detail

01:21:59.420 --> 01:22:00.420
我们这里面

01:22:00.420 --> 01:22:02.420
是不是得需要获取

01:22:02.420 --> 01:22:03.420
获取指定的值

01:22:03.420 --> 01:22:04.420
那我们这里面

01:22:04.420 --> 01:22:05.420
就是payload的

01:22:05.420 --> 01:22:06.420
得传一个参数

01:22:06.420 --> 01:22:07.420
传一个参数是什么呢

01:22:07.420 --> 01:22:09.420
下滑线id

01:22:09.420 --> 01:22:10.420
id呢就是我们

01:22:10.420 --> 01:22:11.420
刚才使用到的

01:22:11.420 --> 01:22:12.420
这个stuff detail

01:22:12.420 --> 01:22:13.420
点

01:22:13.420 --> 01:22:14.420
下滑线id

01:22:14.420 --> 01:22:15.420
直接这样来使用一下

01:22:15.420 --> 01:22:16.420
就可以了

01:22:16.420 --> 01:22:17.420
我们来看一下

01:22:17.420 --> 01:22:18.420
再进行一次修改

01:22:18.420 --> 01:22:19.420
重新来

01:22:19.420 --> 01:22:20.420
刷新一下

01:22:20.420 --> 01:22:21.420
刷新一下

01:22:21.420 --> 01:22:22.420
就不看这了

01:22:22.420 --> 01:22:23.420
我们直接点击小明

01:22:23.420 --> 01:22:24.420
小明1

01:22:24.420 --> 01:22:25.420
那这个时候取消

01:22:25.420 --> 01:22:26.420
来

01:22:26.420 --> 01:22:27.420
ok

01:22:27.420 --> 01:22:28.420
这边发生更改

01:22:28.420 --> 01:22:29.420
然后后面

01:22:29.420 --> 01:22:30.420
进行了一个更改

01:22:30.420 --> 01:22:31.420
对不对

01:22:31.420 --> 01:22:32.420
然后小明悠悠

01:22:32.420 --> 01:22:34.420
把这个去掉一个

01:22:34.420 --> 01:22:36.420
乍号去掉一个数字

01:22:36.420 --> 01:22:37.420
那这个呢

01:22:37.420 --> 01:22:38.420
基本上就修改完成了

01:22:38.420 --> 01:22:40.420
张这个修改完成之后

01:22:40.420 --> 01:22:41.420
那剩下呢

01:22:41.420 --> 01:22:42.420
就是我们

01:22:42.420 --> 01:22:43.420
部门的一个制作了

01:22:43.420 --> 01:22:44.420
在这个里面

01:22:44.420 --> 01:22:46.420
我们可能会有一些

01:22:46.420 --> 01:22:47.420
相对复杂的

01:22:47.420 --> 01:22:49.420
表格制作的逻辑

01:22:49.420 --> 01:22:50.420
包括我们员工

01:22:50.420 --> 01:22:51.420
上传的这一部分内容

01:22:51.420 --> 01:22:52.420
那么我们本节课呢

01:22:52.420 --> 01:22:54.420
暂时先不做考虑

01:22:54.420 --> 01:22:55.420
我们这几个的主要内容

01:22:55.420 --> 01:22:57.420
其实基本上都已经完成了

01:22:57.420 --> 01:22:59.420
就是把我们的这个表单

01:22:59.420 --> 01:23:01.420
进行了一个初始的一个渲染

01:23:01.420 --> 01:23:02.420
之后呢

01:23:02.420 --> 01:23:04.420
我们对这个

01:23:04.420 --> 01:23:05.420
里面的内容

01:23:05.420 --> 01:23:07.420
可以做到一个修改

01:23:07.420 --> 01:23:09.420
同步修改就ok了

01:23:09.420 --> 01:23:10.420
好的

01:23:10.420 --> 01:23:11.420
我们本节课的内容

01:23:11.420 --> 01:23:12.420
就到这里

