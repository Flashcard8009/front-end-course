WEBVTT

00:00.000 --> 00:06.390
来了啊 今天咱们就放开手奖了啊

00:08.430 --> 00:15.750
因为前天呢 大家要还要听就业课的东西啊 咱们这个课呢 不光不光是包含

00:16.990 --> 00:20.750
技术内容还包含一些你们就业的时候呢 需要的一些知识

00:21.670 --> 00:23.470
所以说呢 我不能占用时间太多

00:25.150 --> 00:31.270
今天莫莉卡有事情 所以说呢 今天我们只有技术知识 咱们就放开来讲

00:32.030 --> 00:35.870
尽量呢 今天呢 把就把那个rotar和vuex就把讲完

00:41.010 --> 00:42.770
而开场之前呢 给大家放一个

00:43.810 --> 00:52.780
特别蓝的音乐 激情交通起来 因为今天的课时间可能比较长一点啊 其实那本那个音乐呢

00:53.740 --> 00:57.420
那个音乐配二胡 特别好听

01:00.060 --> 01:02.860
真的 我是在哪听到的 我是在比赛上面

01:04.700 --> 01:06.620
我刚才打说的啊这个

01:08.300 --> 01:12.910
配二胡 特别好听 特别特别软

01:15.700 --> 01:22.430
哦 对 types okay好的哈 types

01:23.550 --> 01:28.350
什么 你说啥prop types 是吧 我不是讲过吗prop types

01:43.310 --> 01:48.510
watch没有说 我知道watch没有说 我没有办法全部说到 好吧 因为这里边东西太多了

01:49.390 --> 01:56.430
我这六天时间呢 我是希望这六天时间呢 我是希望打成这么一个效果

01:56.670 --> 02:00.910
就是说大家呢 利用伍佑从一个从来没有接触过伍佑的

02:01.870 --> 02:08.030
开发者 然后呢 能够用伍佑呢 写出一些常见功能 所以说呢 我们整个过程呢 是贯穿了一个案例的

02:08.270 --> 02:13.790
就是个电影啊 电影分业的这么一个案例 还有今天晚上我们还会把登录也实现啊

02:14.350 --> 02:19.150
一个小时那是一个酷啊 那是一个第三方酷 第三方酷不在我们的课程那种里边啊

02:20.030 --> 02:24.910
不在我们课程里的那种里边啊 我们讲的是跟伍佑最最关联最

02:25.310 --> 02:27.630
最密切的三大套件

02:28.350 --> 02:35.710
所以我们把这个把整个个案例贯穿一次呢啊 你之前没有用过伍佑 那么现在至少可以用伍佑来写东西出来了

02:35.870 --> 02:42.270
能够干活了啊 你说你这个东西昨天有同学在问吗 我们这六天学习完了过后能不能找到实习一点问题都没有

02:42.670 --> 02:50.190
就是你至少在伍佑这个知识这一片 至少在伍佑这一块知识里边 你找个实习肯定是没有任何问题啊

02:50.510 --> 02:53.150
因为你已经能够干活了啊 已经能够写东西了

02:55.310 --> 02:58.030
没有任何基础学的东西 当然会有压力啊

02:59.070 --> 03:08.180
当然会有压力 你那个是tech是吧 嗯 以后我提一下吧 好吧 我们找个机会看

03:09.380 --> 03:14.260
提一下吧 可是那个东西也很简单 也很简单 你只要不说一道原理都很简单

03:15.220 --> 03:23.650
那今天第五天了 时间过得很快 是吧 稍微等一下吧 8点5分我们准时开 好吧

03:24.610 --> 03:37.150
不着急的 反正今天不着急的 脚授价 我不会讲了啊 脚授价就不会讲了 因为我们讲的是伍佑的核心知识

03:37.550 --> 03:44.590
你首先你不要怕个脚授价的玩意 如果说你这个脚授价你搭建 搭建起来 用脚授价搭建工程 你觉得特别特别不好理解的话

03:44.910 --> 03:52.510
那是因为你少了很多的前置知识 因为我们之前说过 脚授价他需要有很多的前置知识 比如说像webpack啊

03:52.990 --> 04:01.070
像什么木块花呀 像什么那个背部啊 就vipack里面大一大堆家族的吧 vipack大家族里边的所有东西

04:01.710 --> 04:08.910
常见的东西 你是少了这些知识 所以说呢 你认为伍佑教授家里面好像有很多很多的新知识 其他一点

04:09.310 --> 04:14.910
基本上没有啥新知识 基本上没有啥新知识 就是以都是别的模块里面的知识啊

04:15.390 --> 04:20.430
因为你少了这些知识的话 你觉得一个教授家好像很难理解一样 其实有了那些知识之后

04:20.670 --> 04:22.830
一教授家特别好理解啊 几句话就说清楚了

04:26.160 --> 04:31.280
啊 对 还有个漏的接识 还有np 啊 还np 而这里边

04:32.080 --> 04:34.720
前端是有现在前端的跟以前的前端不太一样了

04:36.080 --> 04:38.080
这是指墨吗 这不是指墨啊 这是路博

04:38.640 --> 04:43.600
呃 跟以前的前端不太一样了 咱们咱们现在的前端呢 是一个大家族

04:44.320 --> 04:46.640
东西非常非常多 而且呢 是相互依赖的

04:47.280 --> 04:51.520
啊 就是你这个东西没有学习呢 你往后边学习呢 你会觉得这个东西不太好理解

04:55.250 --> 05:01.090
教授家不会怎么不能出去找实习啊 怎么不能找实习啊 因为实习的时候呢

05:01.410 --> 05:05.650
他你不可能让你去搭建工程的 不可能让你去搭建工程的

05:06.210 --> 05:10.690
工程早就给你搭建好了 你写的代码跟我们目前写的代码没什么区别

05:11.970 --> 05:13.170
基本上没什么区别

05:14.450 --> 05:22.640
对吧 会用对会用那个c来开发的话 不会用这种方式

05:23.840 --> 05:25.120
啊 不会用这种方式来开发

05:29.250 --> 05:32.690
是的 但是呢 你一会发现 因为我们这个这个

05:33.570 --> 05:37.810
呃 来听课的同学们里边呢 我相信呢 肯定有不少的都是用过教授家的

05:38.130 --> 05:44.290
那你看一下 我们这里跟教授家有多少多少的区别呢 有多少的区别呢 就区别就不大了对吧

05:44.770 --> 05:54.720
就已经不大了 你看这个工程结构

05:55.680 --> 05:58.800
来吧 你看工程结构 就就没什么区别了

05:59.280 --> 06:02.000
对吧 这是我们最终效果的工程结构啊

06:02.720 --> 06:08.000
对 就好像就差一个样式 是吧 就差一个样式 因为央视那一块是是cli的功能吗

06:09.200 --> 06:12.640
对吧 是谁有li的功能吗 不是吧 央视那一块

06:13.360 --> 06:19.360
是不是那个那个啊 那个啥 we pack里边的什么呀 css module的功能对不对

06:23.120 --> 06:30.880
就一 教授家 cli 教授家里边其实东西真不多东西真不多 他都是用别的东西把它搭建起来的

06:31.600 --> 06:39.280
明天呢 我们做一些总结 然后做一些做一些回顾啊 做一些现状的分析 以及展望一下无忧的未来

06:44.780 --> 06:49.500
好 那咱们开始了啊 结块的元吧 能学尽量学啊 能学尽量学

06:52.110 --> 06:54.030
好 开始了啊 嗯

06:54.830 --> 06:58.590
前边呢 咱们讲到了已经不少的东西了啊 这些东西呢

06:59.390 --> 07:03.310
所以说这个啊 债县授课呢 确实有这么一个

07:04.270 --> 07:07.790
不太好处理的地方啊 希望各位同学呢 理解一下

07:08.910 --> 07:16.590
因为我要照顾到 我既要照顾到就是完全零基础的学员 就是他只学了一天吧 css和gs

07:16.990 --> 07:21.790
他没有接触无忧 没有用东西 没有学过无忧啊 而且照顾这些学员

07:22.350 --> 07:26.590
另外呢 同时要照顾一些 就是已经看了一些无忧课程的学员

07:27.310 --> 07:31.870
因此呢 还要同时呢 希望这个这个课程呢 希望能够做出来的东西呢

07:32.270 --> 07:39.070
对上让大家有所收获 不要说听到这个课 你只学习到很多知识点 面试没问题了 但是呢 你

07:39.630 --> 07:45.390
如果说我紧要面面向面试的话 紧要面向面试的话 我就跟你讲题就完事了啊

07:46.590 --> 07:53.950
但是呢 我希望通过这个课程的学习呢 大家能够做一些东西出来啊 以后呢 不要老叮 天天就叮着原生计也是

07:54.190 --> 08:03.790
我们的前端里边还有一些框架可以使用 比方说这个无忧 让他开放大家的视野 能够用这个无忧呢 写出一些东西出来 这才是我最重要的目的

08:04.350 --> 08:09.790
所以说 基于这个目的的话 我可能会啊 我可能在现有的模式和

08:10.910 --> 08:13.150
时间节奏下边了 会有所取舍

08:13.710 --> 08:18.670
有些同学呢 可能觉得啊 我有些东西没有讲到啊 没有没有讲到

08:19.230 --> 08:26.510
没有把他讲到 是因为我有很多很多的顾虑 因为讲这些东西的话 他牵扯到了更多的东西

08:27.230 --> 08:30.910
所以说有些东西呢 我就没有再提了 但是呢 对那些

08:32.110 --> 08:38.190
零基础的学员的话 这样子是比较友好的啊 如果说你提了太多的东西的话 他也吃不消

08:40.030 --> 08:46.670
咱们今天 但是呢 你会发现 尽管我们学的知识就这么一些已经能够实现

08:47.390 --> 08:54.030
啊 绝大部分效果了 我们软件开发行业里边不是有一个8020元的原则吗

08:54.430 --> 09:01.790
就是80%的效果只需要20%的知识就能实现 所以说我们这个课程里边呢 就这六天急性课程里边

09:02.430 --> 09:05.310
重点呢 就抓的是20%的核心知识

09:06.430 --> 09:10.110
而对剩下的80%的知识呢 他不是说不重要

09:10.510 --> 09:17.710
而是呢 在我们六天的课程里边 要达到你能够顺利的用无诱疏写一个效果出来

09:18.110 --> 09:23.390
这些知识呢 在目前的这个课程里边显得没有那么重要 是这么个意思

09:23.950 --> 09:25.870
今天我们的效果我们首先看一下

09:26.750 --> 09:30.270
我们一步一步最终会把今天的效果实现出来 在这

09:33.150 --> 09:39.950
好 今天呢 我加了一点点功能 你看这个页面里边呢 他多了一个按钮 可以回到首页 对吧 可以回到首页

09:40.670 --> 09:41.710
好 这是这个功能

09:42.670 --> 09:44.270
然后呢 除了这个功能之外呢

09:45.390 --> 09:49.710
有点卡啊 因为我那个放到不是国内的网站啊

09:50.510 --> 09:54.270
我那个接口 我那个接口不是在国内的网站 所以说会稍微有点卡

09:54.750 --> 09:55.630
所以双心一下

09:57.550 --> 09:59.550
有的时候访问到 有的时候访问不到啊

10:00.350 --> 10:02.110
然后呢 这里呢 点击这个标题

10:02.750 --> 10:09.710
可以进入到详情页 电影的详情页 我就简单的做了一下 就简单的做了一下 其实样式都差不多 对吧 样式都完全一样的

10:10.030 --> 10:14.430
我就告诉你这是一个详情页 好 然后呢 回去啊 返回

10:15.470 --> 10:24.560
然后点这个 点这个 稍等啊 到这个电影的详情页 好吧 这是这么一块东西

10:25.840 --> 10:32.800
然后呢 我们这里呢 有一个退出登录 当退出登录之后呢 你想他就回到了一个登录页面

10:33.840 --> 10:36.320
登录页面 那么现在是没有登录的状态

10:37.040 --> 10:39.760
然后呢 我们再点电影页 你看点不进去了

10:40.800 --> 10:48.560
点不进去了 他始终到登录页面 因为我们这里做了一个假设 假设我们的电影页必须要登录之后才能访问

10:49.200 --> 10:54.800
啊 你看点不进去了 对吧 好 那么我们现在登录 你看这里也没了 对不对 这是一个典型的登录场景

10:57.100 --> 10:58.460
里面觉得登录简单啊

11:01.260 --> 11:02.380
里面觉得登录简不简单

11:03.340 --> 11:09.420
你觉得登录简单的同学QQ一呢 觉得登录简单的同学是

11:11.100 --> 11:18.620
啊 我不知道你是真正的高手了 还是你不太了解登录 登录是绝对不简单的 是绝对不简单的 我跟你说

11:19.020 --> 11:21.740
我们今天晚上登录了 你得好好听

11:22.860 --> 11:27.100
你今天晚上是最基本最基本的登录的知识

11:28.300 --> 11:33.580
你们以后呢 还有学习更多的关于登录啊 可能还要接触更多的 特别是在公司里面

11:34.140 --> 11:41.580
关于登录这一块的东西 你会发现登录这一块是真的不简单 不是加密 有加密算个啥呀 还不是加密

11:43.020 --> 11:46.300
后边你们有了更多的扣腾知识 你们才能明白

11:48.060 --> 11:50.140
好 咱们来开始啊 开始来写

11:53.180 --> 11:57.420
嗯 这里呢 我们上一节课做到哪了呢 看一下上节课 上节课咱们的效果

11:58.140 --> 12:00.540
我们先把那个路由这一块加完啊

12:01.340 --> 12:08.860
把路由这一块的核心知识结束 上节课咱们做到这了 是不是可以切换页面了 对吧 无非就是切换两个组件 我们来回顾一下啊

12:09.180 --> 12:13.740
上节课呢 我们再配几次这个文件夹里边 不是写了两个组件吗 一个首页的组件

12:14.380 --> 12:23.660
一个电影页的组件 对吧 写了这么两个组件 这个电影页的组件呢 无非就是我们把以前的app里边的代码 是不是提到这来了

12:23.900 --> 12:28.300
对吧 提到这来了 然后呢 我们在根组件里边 无非就是做了是一个什么呢 做了一个

12:29.260 --> 12:32.620
导航 对不对 写了什么rotlink

12:33.180 --> 12:40.940
啊 所以写的rotlink 咱们上节课也解释过 尽量的使用这个东西来生成A元数 而不要直接书写A元数

12:41.420 --> 12:47.260
而不要直接书写 为什么不要直接书写呢 直接书写A元数呢 呃 首先呢

12:48.300 --> 12:54.460
他 他就不依赖模式了 因为我们这里配置了模式 对吧 我们配置了这个模式 他就不依赖这个模式了

12:54.540 --> 13:05.740
你要写 你要写个警号 如果说将来模式变了 不是哈希这种模式呢 变成history这种模式 那么你要A元数要一个一个手动去看 要把那些警号全部去掉

13:06.460 --> 13:09.020
但是呢 你如果说你用了rotlink这个

13:09.660 --> 13:16.460
内置的 就是他给你注册的全局组件之后呢 他本身就会帮你生成A元数 而且他会匹配领路由里边

13:17.420 --> 13:25.020
设置的模式 你这里用的哈希 他就列介到哈希 就给你加上警号 如果你没有用哈希用的是history api 那么他就

13:25.500 --> 13:26.780
直接给你链接就完事了

13:27.500 --> 13:30.300
啊 所以我们尽量使用rotlink来完成导航

13:30.860 --> 13:36.540
好了 这是我们上级课 嗯 基于上级课的工程呢 我们这里呢 稍作一下改动啊 因为我们今天晚上呢

13:37.660 --> 13:39.660
后边的编写了 提供一些便利

13:40.460 --> 13:44.540
首先这一块呢 我想把他提到一个组件里面去啊 这东西都是学过的啊 很简单

13:44.780 --> 13:51.980
我想把他提到一个组件里面去 这个也非常简单 在哪里写了 我们在component里面新建个组件 给他取名为header

13:52.780 --> 13:58.300
啊 点介绍 就是头部啊 头部 那么我们这里呢 写上这么一个组件啊 template

13:59.420 --> 14:00.460
啊 再复制一下吧

14:02.540 --> 14:10.060
template啊 把这个东西写过来啊 写过来 嗯 然后我们这里导出default

14:11.100 --> 14:11.820
啊 template

14:12.780 --> 14:20.460
啊 把导出啊 那么导出之后呢 我们在这里是不是直接可以使用这个组件了啊 import

14:21.580 --> 14:23.100
嗯 header

14:24.700 --> 14:26.220
component header

14:27.500 --> 14:32.140
啊 我们把组件有组件化开发嘛啊 我们尽量把这些一个一个的功能块呢 放到组件里边

14:32.780 --> 14:33.420
component

14:34.220 --> 14:37.500
啊 header 放起来啊 好 那么这里呢 我们就使用

14:39.500 --> 14:40.380
header

14:40.540 --> 14:45.740
就完事了 是吧啊 就是把这个提到组件里面去 你看一下啊 效果是完全一样的啊 没有任何区别

14:46.300 --> 14:53.340
效果是完全一样的 看看效果是完全一样的啊 好 这是这一块啊 这里把稍微提取一下 嗯 然后呢 这边

14:54.220 --> 15:00.060
我们这边不是在做路由配置吗 对不对 是在配置一个路由 你看这一这一脱带嘛 是不是都在配置路由

15:01.420 --> 15:05.900
啊 都在配置路由形成一个路由对象 对不对 形成一个路由对象

15:06.460 --> 15:10.140
嗯 然后呢 我们在这里把路由加进去完事了啊 所以我们以前这样做的

15:10.540 --> 15:17.660
好 那么这里呢 我也其实也可以把它分模块 因为现在我们学到模块化开发啊 尽管我们没有完这么学习 那是一套课程

15:17.900 --> 15:23.980
后面也是我负责来讲这个模块化开发啊 那是一套课程啊 那么这一块呢

15:24.460 --> 15:31.260
这一块 我现在就是打算把它提到一个模块里边 于是呢 我们在src里边新建个文件给他取名为rotor

15:31.580 --> 15:36.460
叫介石 这个文件导出什么呢 导出就导出这个东西啊 就导出这个东西

15:37.420 --> 15:43.420
啊 我们这里负责一下吧啊 放到rotor里边啊 export defaultrotor

15:43.660 --> 15:46.940
所以把这个东西导出 是吧 把它导出就完事了啊 导出就完事了

15:47.340 --> 15:54.860
好 那么这边呢 因这个室里边就很简单了 因这个室里边就是不是没有路由配置的 没了啊 哦 这里还要加进去啊 这里还要加过去

15:55.900 --> 16:02.140
因为这里边要用到这个home 用到这个movie啊 用到这两个东西 好 这两个加过去啊 加过去

16:02.620 --> 16:07.900
好 那么这边是不是不用导 这边又需要导入什么 只需要导入这个rotor就行了啊 只需要

16:08.780 --> 16:09.820
是不是只需要导入rotor

16:11.660 --> 16:17.420
切分一下 这样子的整个工程结构了 更加清晰 对吧 好 那么这个文件它只负责

16:17.820 --> 16:21.020
处理路由 其他的什么都不管 这一块没问题吧

16:24.860 --> 16:26.540
主店太多 看起来恶心

16:27.900 --> 16:32.860
那你觉得把全部都写到一个文件就不恶心了嘛 就不恶心了 它不跟恶心吗

16:33.260 --> 16:39.580
那不跟恶心吗 为什么 为什么会觉得恶心呢 人因为没习惯 是吧 是吧 没有习惯

16:43.380 --> 16:48.660
好 咱们继续 那么现在我们把工程结构稍微改了一下 对吧 稍微改了一下 好 接下来呢 我们要

16:49.140 --> 16:52.260
一步一步实现这么一个效果 首先呢 我们要解决这个问题

16:53.300 --> 16:59.380
电影页里面有一个按钮 对吧 是不是有个按钮 点击这个按钮呢 它也能回到首页

16:59.940 --> 17:07.780
你看 点击这个按钮 就是有的时候呢 页面会一些返回按钮啊 或者是一面要用一些代码编写的方式挑转页面

17:08.100 --> 17:18.100
那么这种情况该怎么做 因为我们之前只讲了什么呢 只讲了怎么挑转页面 只讲了用超链接就生成一个A元数来挑转页面 用什么

17:18.340 --> 17:19.380
是用rotor link

17:20.100 --> 17:27.460
那有的时候呢 我们可能不一定是这个超链接挑转 可能是一个按钮来挑转 那么这个时候怎么办呢

17:27.780 --> 17:34.420
举个例子啊 比方说 我们在这个组件里边 在这个movingness这个组件里边 我们就在这里加上一个按钮

17:34.820 --> 17:44.260
比方说啊 举个例子 返回首页啊 返回首页 那么我们要返回首页 是不是要给这个按钮出车事件点击过后返回首页

17:44.980 --> 17:46.020
点击过后click

17:46.900 --> 17:49.780
好 那么这里我们handle back 啊 handle back

17:50.820 --> 17:51.380
好 这里呢

17:52.820 --> 17:53.300
我们来看一下

17:54.660 --> 17:56.020
handle 放在bass里边啊

17:56.740 --> 17:57.620
handle back

17:58.100 --> 18:08.020
啊 我们来处理这个事件啊 它会运行这个函数 那么这个函数里边 是不是要设计一个问题 如何挑用代码啊 用编程的方式

18:09.140 --> 18:14.740
啊 挑转页面啊 如何用编程的方式挑转页面 那么这里怎么挑转呢

18:15.620 --> 18:21.140
非常简单 当你在工程里边使用了5urotor之后 也就在这里

18:21.140 --> 18:26.660
也就在这里 你配置了这个rotor啊 你做了rotor做了配置之后

18:27.300 --> 18:32.740
所有的5u实力 包括5u的主键实力里边 都会包含

18:33.620 --> 18:36.260
两个对象 我们这个记个笔记

18:39.140 --> 18:43.700
导航 导航的另外一个东西就是编程式导航

18:45.300 --> 18:49.940
编程式导航 什么意思呢 就是我要挑转页面 我用的方式不是用超

18:50.420 --> 18:54.020
页面接啊 不是用A元数 而是通过一段代码让它挑转

18:54.580 --> 19:00.180
那么这种跟东西该怎么写呢 首先大家要理解这么一个东西 当对啊 当创建

19:00.900 --> 19:09.860
5u实力时啊 是如果配置了rotor啊 如果配置了rotor 则配置的rotor

19:11.220 --> 19:17.140
会出现在所有的5u实力和主键实力中

19:18.100 --> 19:25.220
啊 那么它怎么出现的啊 方式是作为dolarrotor属性出现

19:26.980 --> 19:30.260
也就是说我们由于我们在这里配置了这个rotor

19:30.580 --> 19:34.740
对吧 配置的是哪 配置的是这个玩意儿 对不对啊 由于我配置了这么一个玩意儿

19:35.140 --> 19:39.060
于是呢 5u实力 所有的5u实力 以及呢

19:39.860 --> 19:44.020
主键实力里边 它都会有一个dolarrotor 我们看一下5u实力

19:44.500 --> 19:48.420
比方说我们这里用一个辨量来接受一下啊 不是得到一个5u实力吗

19:48.900 --> 19:53.460
好 咱们呢 这里输出啊 输出个5u实力 好 咱们看一下在这里 右键

19:54.660 --> 19:58.820
时间效果啊 右键检查 然后空残里边 我们来看一下啊

19:59.780 --> 20:02.340
这个对象里边 你看一下往下找啊

20:04.100 --> 20:07.300
rotor rotor 你看 是不是多了一个东西

20:07.860 --> 20:11.060
叫做rotor对象 对吧 所以多了这么一个rotor

20:11.540 --> 20:18.740
这个rotor里边 它就给你提供了这么一些函数 可以让你操控路由啊 可以让你控制路由 特别是

20:19.300 --> 20:25.540
挑转页面 好 那么我们怎么来挑转呢 我们现在知道了 在实力里边是多了一个多了rotor

20:25.700 --> 20:31.220
不是多了这么一个东西啊 因为你配置了 所以说呢 我们在在这边要挑转页面

20:31.860 --> 20:33.700
啊 在哪呢 在配置里边

20:34.420 --> 20:36.740
呃 扛托认识里边 在这里

20:37.300 --> 20:38.020
这是不是主键

20:38.980 --> 20:46.660
在主键里边要挑转页面 非常简单 是不是通过Z拿到当前的主键实力 然后呢找到实力里边的什么

20:47.140 --> 20:54.100
rotor啊 多了rotor 那么这个rotor里边提供了很多的方法 其中我们注意常用的方法叫做铺锡

20:54.900 --> 20:55.380
铺锡

20:55.860 --> 21:00.340
这里边写的是什么呢 这里边就写的是挑转地址 也要挑转到哪个地址

21:00.660 --> 21:05.060
比方说我们要挑转到首页 首页的地址是不是这个 对吧 这是不是首页的地址

21:05.540 --> 21:10.740
对不对啊 这就跳转到首页了 就这么简单啊 就这么简单啊 那么rotor

21:11.300 --> 21:15.860
我们再记彼啊rotor点铺锡 这里写上啊 页面地址

21:17.540 --> 21:23.540
页面地址啊 可以挑转页面啊 挑转页面

21:24.100 --> 21:28.740
其实这个铺锡是怎么意思呢 铺锡它有点类似于数族里边 往数族里边追加一个东西 对吧

21:29.060 --> 21:34.900
那么这句话的完整 它真实的意思是什么呢 是向当前页面地址站中

21:36.180 --> 21:43.220
加入一个地址 它的真实的意思是向当前页面地址站中

21:44.260 --> 21:50.980
加入 加入一个地址 这里我简单说一下就行了啊 因为这个一块的指神呢 实际上是在哪里面讲的呢

21:51.300 --> 21:53.780
实际上是在history api的那一块讲的

21:54.020 --> 21:58.980
history api呢 是在atm5的课程里面讲的啊 这里我简单说一下

21:59.380 --> 22:04.980
就是说它会 它是这么一种处理方式 你可以想象成页面的 它放到一个数族里边的

22:05.460 --> 22:08.740
放到一个数族里边的 不然的话 我们到时候要后退是不是

22:10.740 --> 22:15.220
到之前的页面了 你看页面是不是可以后退的 可以前进 对吧 可以后退可以前进

22:15.380 --> 22:19.460
那么他怎么知道值钱的页面是啥呢 是不是通过数组里面往前面找 对不对

22:19.940 --> 22:23.300
好 当前的页面呢 就指的是这个数组的最后一个页面

22:24.020 --> 22:27.060
就最新的页面就是数组的最后一个页面 就这么个意思

22:27.460 --> 22:33.780
好 如果说我们这里呢 用rotp就相当于是往这个页面地址站里边 相当于往那个数组里边

22:34.020 --> 22:38.660
往它的末尾加一个页面 加一个页面 那时候新的页面就覆盖了

22:38.900 --> 22:43.380
就变成了现在的页面了 对吧 那么我们现在点后退的话 就后退到之前的页面

22:43.380 --> 22:45.940
就这么个意思啊 你可以想象成它是一个数族

22:47.140 --> 22:48.500
这是p

22:48.660 --> 22:52.500
当然它这里边并不仅仅是有p 其实还有不少的方法

22:53.220 --> 22:57.700
我们知道 现在目前只需要知道 它这个铺形是可以完成跳转的

22:58.260 --> 23:00.820
这里铺形是可以完成跳转的 好 咱们看一下吧

23:01.700 --> 23:06.500
好 这里呢 我们现在有一个按钮了 你看 是不是在这儿 对吧 有一个按钮 你看见吗

23:07.220 --> 23:08.580
在这里有个按钮 点击

23:09.460 --> 23:12.660
就跳到那手里了 就这么的 特别特别简单

23:12.660 --> 23:18.100
而且它本身也是匹配路由模式的 你路由模式的变化跟这里的代码没有任何关系

23:18.180 --> 23:23.220
也就是这里代码 也就是这里代码了 不变 哪怕你将来路由模式发生了变化

23:23.220 --> 23:27.300
它对它来说也不会影响任何东西 就是p

23:27.780 --> 23:33.620
当然除了有p之外 其实还有一些别的函数 别的函数 我们简单说一下吧 简单说一下啊

23:35.300 --> 23:39.300
Rotor 比方说这里呢 有一个replace

23:40.260 --> 23:45.060
replace 页面地址 它也是跳转页面 也是跳转页面

23:45.940 --> 23:52.260
只不过这种方式跳转页面的是替换当前页面地址站

23:54.820 --> 24:01.300
中当前位置的页面 就是我们是一个数组 对吧 比方说我们这里数组

24:02.100 --> 24:08.900
数组 比方说我们目前数组是这样子的 页面1 简单了解一下就行了 跟我们目前写代码没有任何关系

24:09.620 --> 24:11.140
这是相当于是

24:12.660 --> 24:19.460
要需要那个atm5的 API 你才能够明白的彻底一些

24:20.020 --> 24:24.740
好 那么这里呢 比方说我们目前的是这么一些页面 对吧 目前当前是页面4

24:25.140 --> 24:27.380
如果说你这里使用了这种方式

24:28.340 --> 24:32.900
使用了这种方式Rotor Pussy 用这种方式 跳到哪呢 跳到页面5

24:33.620 --> 24:37.300
用这种方式 那么它会在一个地址站里边 就会加入一下

24:37.860 --> 24:41.380
加入一个页面5 那么你现在在页面上看到的就是页面5

24:42.020 --> 24:47.380
然后你在浏览器里面点后退的话 是不是后退到页面4 对吧 后退到页面4 就这么个意思

24:48.100 --> 24:52.260
但是如果说它用的不是这种方式 用的是replace的话

24:52.980 --> 24:56.340
用的是replace的话 那么它会替换掉当前页面

24:56.580 --> 24:58.900
它就把页面4替换成了页面5

24:59.220 --> 25:02.260
这个时候你在浏览器里面点后退 是不是后退到页面3了

25:02.580 --> 25:05.060
就这么个意思啊 就这么个意思 就replace

25:06.420 --> 25:10.100
好 那么还有别的呢 就是Rotor Go Back

25:12.100 --> 25:13.620
不然说我们用Go嘛 Go

25:14.820 --> 25:18.500
这里是写的是一个数字 就是偏移量

25:19.620 --> 25:20.980
我们应该叫做偏移量

25:22.100 --> 25:27.140
好 那么这个时候也是根据当前地址站中的

25:27.860 --> 25:29.300
站中的位置

25:30.180 --> 25:35.380
以及设置的偏移量 设置的偏移量跳转页面

25:36.020 --> 25:40.100
这是啥意思呢 我们给大家举个例子 就简单聊聊一下就行了

25:40.100 --> 25:41.700
跟我们目前写的效果没什么关系

25:42.020 --> 25:46.260
比方说我们目前在页面3 目前我们在页面3 是不是前面还有页面

25:46.740 --> 25:50.100
后退还有页面 对吧 那么这个时候我们用 比方说用Go

25:51.060 --> 25:58.020
Go 写个1 什么意思呢 表示的是向前方偏移一个

25:58.660 --> 26:02.500
那么这个时候跳到哪儿呢 跳到页面5 就这么个意思

26:03.060 --> 26:07.940
目前是页面3 如果说你用了Go1 它往前进一位 前进一位跳到页面5

26:09.220 --> 26:13.140
如果说你用了Go-1的话 它跳到哪儿呢

26:13.140 --> 26:17.780
是不是跳到页面2 对不对 跳到页面2 就这么个意思

26:18.500 --> 26:23.060
富二的话又跳到页面1 对吧 它根据当前的页面在占中的位置

26:23.060 --> 26:25.620
以及你的偏移量来进行跳转

26:26.660 --> 26:30.660
好 那么对应的还有什么RotorGoBack

26:32.340 --> 26:35.300
好 那么这个5参 5参 那么就相当于

26:36.100 --> 26:40.900
相当于是RotorGo-1 相当于是这个

26:43.600 --> 26:46.800
相当于是RotorGo-1 因为我这里写了两个多了

26:47.120 --> 26:50.720
写了两个多了 它在Markdown里面有点识别不了了

26:50.720 --> 26:55.920
这样子 如果说你用的是RotorGo-Forward

26:56.960 --> 27:01.280
Go-Forward 如果是你用的是这个的话 那么就相当于是Go-1

27:02.560 --> 27:05.600
就像那样是Go-1 没声音了吗

27:06.960 --> 27:10.560
怎么知道当前的位置 你不需要知道知道当前的位置

27:10.960 --> 27:16.560
你也没有办法知道当前的位置 它没有给你提供这样的 API

27:17.120 --> 27:20.320
你不能知道当前的位置 你只能说根据当前的位置的便宜

27:20.320 --> 27:22.800
比方说你真的要做前进 你要前进一位

27:23.200 --> 27:25.680
比方说你有个按钮叫返回 对吧 返回上一个

27:25.680 --> 27:29.280
你不一定是返回首页 上一个什么页面 你要返回什么页面

27:29.280 --> 27:31.920
你是不是可以用GoBack或者是用Go-Forward 对吧

27:31.920 --> 27:34.720
它是针对这样的功能的 比方说你有个前进按钮

27:34.720 --> 27:38.080
就是实现浏览器里面 无非就是实现浏览器里面的前进后退

27:38.640 --> 27:40.960
无非就是实现这个 就这么个意思

27:41.520 --> 27:43.920
你不能之前知道当前的位置 你不知道当前的位置

27:44.640 --> 27:51.440
然后这里快就完了 就边城市导航 也特别特别简单

27:51.440 --> 27:54.080
好 现在我们再来看 路由都还没完

27:55.520 --> 27:59.680
再来看 这里还有除了边城市的导航之外

27:59.680 --> 28:03.440
我们这里还要把它做成一个超链接 你看这边是不是超链接

28:03.440 --> 28:08.720
点了过后是要跳转 是吧 跳转到另外一个页面

28:08.720 --> 28:11.040
要跳转到另外一个电影详情页

28:11.040 --> 28:14.880
你看 点了过后是不跳转到这 跳转到这

28:15.200 --> 28:16.880
然后呢 如果说点了是第二个页面

28:21.660 --> 28:25.260
如果说你点了是第二个页面的话 那么就跳转到第二个电影的详情页

28:25.820 --> 28:26.700
要做这么一件事

28:28.060 --> 28:33.180
首先大家要清楚一件问题 如果说你要写这个效果 是不是你还在多一个页面啊

28:33.660 --> 28:39.180
一页面是不是还在多一个页面 对吧 还在多一个页面 给这个页面取个名字吧

28:39.260 --> 28:44.620
比方说 比方说给这个页面取个名字 叫做MovieDetail

28:45.180 --> 28:47.900
叫介石 比方说这个页面的名字叫这个

28:49.420 --> 28:53.660
好 那么这个页面 它要显示什么 显示电影的详情

28:54.780 --> 28:58.380
好 咱们来写下这个页面啊 我们要跳转页面 说得写这个页面

28:59.180 --> 29:02.300
看一下这个问题在哪 我们得显示电影的详情

29:02.300 --> 29:04.060
那我这里直接把复制过来吧

29:05.020 --> 29:09.740
直接把这个复制过来 这个复制一下啊 右键

29:10.940 --> 29:11.340
copy

29:12.540 --> 29:12.780
好

29:14.300 --> 29:17.260
扔过来 其实跟那边差不多了 跟那边差不多了

29:17.820 --> 29:20.540
好 这是电影详情 对吧 这电影详情

29:21.180 --> 29:24.460
来吧 那么电影详情里边是不是有很多的数据啊

29:25.100 --> 29:29.740
对不对 是不是得有很多数据啊 有很多数据 那么这些数据呢 是不是写死的呢

29:30.380 --> 29:35.180
那不是写死的啊 如果说你把这些数据写死呢 你是不是只能显示其中一个电影了

29:35.500 --> 29:39.980
那你是不是得每一个电影写一个组件 每个电影写个组件 那如果说你弯个电影呢

29:40.460 --> 29:45.020
你弯个电影 心情松松 对吧 那这样的数据量你怎么去写组件呢

29:45.260 --> 29:50.990
所以说我们希望那个组件是通用的 无用的 都可以使用这个组件

29:51.550 --> 29:53.550
因此这个组件呢 就不能把这些东西写死

29:53.950 --> 30:00.590
所以跟那个之前我们写的母币组件是一样的道理 对吧 你给我传一个什么 传一个组件 通过一个属性给我传过来

30:01.550 --> 30:08.670
给我传过来 是吧 你通过一个属性给我传过来 我刚才就直接把它做成一个组件嘛 把它放到compo认识里面

30:10.350 --> 30:15.630
把它放到compo认识里面 页面里面就专门做页面啊 这个组件里面专门实现组件的功能

30:16.030 --> 30:16.830
好 那么这里呢 我们

30:17.630 --> 30:21.630
其实就是刚才那个母币 对吧 其实就是刚才那个母币 我就直接用母币组件得了

30:22.110 --> 30:23.950
我干嘛呢 我干嘛要去再写个组件呢

30:24.670 --> 30:29.150
啊 我疯了啊 我们之前不是写过这个母币组件吗 你告诉他电影的对象

30:29.870 --> 30:34.190
你就可以直接显示一个电影了 对吧 你告诉他电影的对象你直接可以显示一个电影

30:34.510 --> 30:36.990
好 那么我们在页面中是不是就使用那个组件就完事了

30:38.270 --> 30:39.230
导入什么movie

30:40.350 --> 30:42.590
from 点点写缸 complements

30:43.630 --> 30:45.230
movie 点点写缸

30:45.470 --> 30:51.470
就导入这个电影 然后呢 我们写上这么一个模办 export

30:52.430 --> 30:56.430
导出的配置啊 首先components里面要注册要注册movie

30:56.830 --> 30:58.830
好 然后呢 使用模办啊 template

30:59.470 --> 31:02.030
那么这接下来我们在这里有意思的是在这啊

31:02.990 --> 31:06.510
我们在模板里面是不是要使用这个movie对吧

31:06.990 --> 31:08.670
我们要这里要使用这个movie

31:09.150 --> 31:11.310
好 那么这个movie不得有一个属性吗

31:11.870 --> 31:15.390
是不是在属性里面传过去 电影的数据是不是得传过去

31:15.790 --> 31:21.070
那么现在关键问题是 我这个页面怎么知道要显示哪个电影

31:21.950 --> 31:24.990
我怎么知道要显示哪个电影呢 我怎么知道呢

31:25.950 --> 31:28.110
我不知道啊 我不知道

31:28.750 --> 31:31.870
有些人说呢 应该是这样子的啊 他逻辑应该是这样子的

31:34.800 --> 31:38.560
嗯 应该是点击这个电影啊 我相信很多同学啊

31:38.800 --> 31:40.560
哎对吧啊

31:41.120 --> 31:45.680
很多人都在这样想 点这个超链接对吧 点这个超链接过后呢

31:45.680 --> 31:49.280
我传一个什么东西过去啊 传一个什么东西到这个组件里边去对吧

31:49.760 --> 31:53.520
应该是用这样的思路 但是我告诉大家了这样的思路是不好的

31:54.320 --> 31:58.160
为什么说不好呢 因为说如果说你没有点击呢

31:59.200 --> 32:03.760
你只考虑他点击过后跳过去 那如果他没有点击呢 为什么说没有点击

32:03.760 --> 32:07.920
他到不了这个页面啊 那不一定呢 你觉得这个电影不错

32:08.240 --> 32:11.200
哎 我说我想分享给同 分享出去

32:11.600 --> 32:16.400
分享给我的朋友 那你是不是最常见的做法是把地址难复制一下对吧

32:16.800 --> 32:20.720
哎 是不是通过微信啊 qq是不是扔过去了 哎 别人是不是要

32:20.880 --> 32:26.080
会直接通过这个地址就打开 说直接通过这个地址打开 有没有点击啊

32:26.080 --> 32:31.680
说没有点击 你不得也显示这个电影吗 你是不是得也显示这个电影啊

32:32.480 --> 32:38.480
是不是这个电影的信息必须要反映到地址里边 对吧 是不是要反映到地址里边

32:39.120 --> 32:40.720
是个逻辑吧

32:41.840 --> 32:43.840
好 那么现在呢

32:44.720 --> 32:51.040
我们怎么样把那个就是啊 电影的信息方案就是显示到就是放到地址里边了

32:51.920 --> 32:54.720
好 那么刚才有同学说了啊 路由传参说明是学过的

32:56.240 --> 33:05.760
周里边我们配置路由的时候 我们之前撒配置的访问这个地址匹配这个逐渐 访问这个地址匹配这个逐渐 好 那么接下来我们再来一个啊 再来一个

33:06.080 --> 33:09.200
比方说我这样子写路由啊

33:10.160 --> 33:12.320
如果说我这样子写movie detail

33:13.680 --> 33:20.190
访问这个地址 我匹配到怎么逐渐呢 我匹配到这个逐渐 匹配到这个

33:21.950 --> 33:23.710
movie detail from

33:24.510 --> 33:27.710
第二配置 就是我们刚刚写的逐渐啊movie detail

33:28.430 --> 33:29.790
比方说我们匹配到这个逐渐

33:30.590 --> 33:34.510
这个写法是没问题的 结构是没什么问题的 但是这样子一来你看一下

33:35.390 --> 33:40.830
你的匹配的页面里边有没有包含哪一条电影的信息啊 是没有包含

33:41.310 --> 33:46.030
那这个主见到时候宣然的时候 就在这个主见里边处理的时候 你就不知道怎么写代码了

33:46.190 --> 33:51.630
你不知道我要显示哪一部电影 是不是不知道了呀 你就不知道我要显示哪一部电影了

33:52.190 --> 33:59.070
那么这个时候怎么办呢 你回忆一下啊 可能有些同学注意到了 有些同学没有注意到 平时你在上网的过程中

34:01.520 --> 34:08.880
有一些页面 比方说新闻详情页啊 显示一个新闻的详细页面 他往往了后边会带一些

34:09.840 --> 34:15.520
可以编画的东西 举个例子啊 我给他举个例子 比方说我们访问这样的地址

34:16.560 --> 34:20.080
显示什么呢 显示id唯一的电影

34:21.920 --> 34:22.880
访问这样的地址

34:24.160 --> 34:28.960
显示id唯二的电影 是吧 我们是不是把一些电影的

34:30.000 --> 34:35.760
关键信息是放了通常都是id啊 通常都是唯一编号 是吧 一些关键信息放到这

34:36.560 --> 34:45.040
对吧 放到这个位置 是不是这样子来处理的啊 很多网站都是这样子处理的 那么我们这里呢 也可以利用类似的方式来处理

34:46.080 --> 34:52.880
我们都匹配到这个组件 但是呢 这个地址呢 是有可能会变化的 他不是写死的 不是说一定访问这个地址

34:53.200 --> 34:56.320
那这个地址的少了一些信息 对吧 少了什么少了电影的id

34:56.960 --> 34:59.840
那么我们希望访问的什么地址呢 访问这种地址

35:00.800 --> 35:08.640
就这里可以变化的 就这里可以随便写啥 总之你写的就想随便你写啥 你总之这一块是可以变化的

35:09.200 --> 35:13.440
那么这个东西叫做动态路由匹配

35:17.100 --> 35:18.620
那么路由配置规则里边

35:21.340 --> 35:22.700
可以配置动态路由

35:23.660 --> 35:26.460
在配置路由规则室

35:29.260 --> 35:35.340
可以将规则制服创书写为动态路由

35:38.060 --> 35:45.140
动态路由使用帽号加单词

35:45.620 --> 35:48.900
动态路由使用帽号加单词 什么意思呢 我这里举个例子一下就明白了

35:49.220 --> 35:53.620
比方这个地方我们前面是写死的 对吧 你看前面是不是写死的

35:53.620 --> 35:56.980
我们希望这个位置呢 它有可能会变化 总的总之你得有东西

35:57.860 --> 36:01.860
一代有可以变化的东西 那么我们这里怎么写呢 就写一个帽号

36:02.420 --> 36:06.900
后面要跟上一个单词 这个单词是什么呢 随便什么单词 你自己命名的

36:06.900 --> 36:10.660
你可以把它认为是变亮了名称 你可以认为是变亮了名称

36:11.060 --> 36:15.380
比方说我们就可以写个id 是什么意思呢 那么现在它就是匹配这么一个东西

36:16.100 --> 36:20.980
它只要是这个地址格式 只要是这个 后边是什么都无所谓

36:21.540 --> 36:25.620
它认为后边的东西名字叫做id 这个名字一会儿有用

36:26.180 --> 36:30.420
它认为这一块东西名字叫做id 那么只要你是这么一种格式的

36:30.820 --> 36:36.020
我不管你后边写的是啥 只要你是这么一种格式的路径 它就能够匹配到这个路由

36:36.020 --> 36:39.140
能够匹配到这个就是主件 这个东西叫动态路由

36:39.780 --> 36:41.220
明白这个意思吧 啊

36:42.340 --> 36:46.740
这东西是规则啊 规则 那么它能够匹配这样的路径格式

36:49.620 --> 36:54.980
有点小卡嘛 这怎么回事呢 今天我这里也有点漂红

36:55.940 --> 37:00.690
啊 有点漂红 没有看啥东西呢 怎么回事呢

37:03.280 --> 37:06.960
这个网络只有我这个笔记本来用 其他设备都没有用这个网络

37:07.920 --> 37:13.200
那我也不知道是怎么回事了 啊 没有 也不知道怎么回事了啊 小话的话应该

37:14.720 --> 37:21.600
影响不大吧 应该影响不大啊 后边的话 嗯 反正有录屏嘛 录屏 大家下来可以反复观看一下

37:24.240 --> 37:27.680
好 那么现在呢 我们到这个这个这个主件里边去

37:28.480 --> 37:34.160
现在你看一下啊 这个主件这个主件里边就写个电影详情啊 比方说我们就写个啊电影详情

37:34.800 --> 37:35.440
好 你看一下

37:37.040 --> 37:40.640
你看一下啊 咱们在实现效果里边 比方说我们访问这样的地址

37:41.280 --> 37:45.440
无畏鞋杠 随便写他 跑了电影详情里边去了 随便写他

37:46.000 --> 37:53.280
你看说跑了电影详情里边去了 写啥都行啊 是不是能匹配到这个 这就是动态逻游 他可以匹配很多很多种地址

37:53.600 --> 38:00.320
对吧 这动态逻游 那么现在这个问题是 这里写的是什么 是不是写着id啊 电影的id对不对

38:00.800 --> 38:08.240
哎 他写的是电影的id啊 写的是电影的id 那么现在的问题是 我们这边是不是得把这个id获取到啊

38:09.280 --> 38:12.080
是不是要把这个id拿到 拿到过后做什么

38:13.120 --> 38:24.400
用远程请求去拿这个电影啊 去拿这个电影数据 对吧 用id嘛id是唯一的编号 比方说用学号去得到学生啊 因为学号是唯一的

38:24.720 --> 38:31.920
比方说学生分证号来得到人 得到人的信息 是不是唯一的 通过这个唯一的编号是不是可以得到整个信息了

38:32.480 --> 38:40.080
那么现在的第一个问题就是 我们怎么去拿这个id的信息啊 怎么去拿这个id的信息

38:40.720 --> 38:45.120
通常情况下呢 这里要远程请求 我们之前说过啊 远程请求的话

38:46.000 --> 38:48.960
我们通常会放到monty的里面 啊monty的里面

38:49.360 --> 38:59.360
通常会放到这个地方 嗯 实际上呢 在远程请求里边 绝大部分时候呢 放到created里边也不会出问题啊 也不怎么会出问题

38:59.760 --> 39:04.480
只不过呢 在对于初学者而言 你在了解没有了解无忧

39:05.200 --> 39:07.520
内部的原理之前写到monty的里边

39:08.320 --> 39:13.440
是几乎绝对不会出问题的一种写法 因此呢 你在完全能够掌握

39:14.400 --> 39:19.040
通过又之前写到monty的里边 是最合适的啊 是最合适的 最不容易出问题的

39:20.240 --> 39:23.120
好monty的里边 我们写了什么 首先是

39:23.680 --> 39:26.720
他要他要做什么 是不是根据id获取电影

39:27.120 --> 39:34.080
对吧 获取电影数据 这个东西我们一会再说 现在第一个问题是获取id 你id都没有获取到 谈什么获取电影呢

39:34.320 --> 39:40.640
对吧 是不是要第一个问题要获取id 也就是获取动态路由里边的哪个地方 是不是这个地方的东西

39:41.120 --> 39:43.440
对吧 要获取动态路由里边

39:45.600 --> 39:49.760
柔头 获取动态路由里边 这个名字叫id这一段的东西

39:50.400 --> 39:55.520
那么我们这里怎么获取呢 这又要说到另外一个知识了 好 另外一个知识是

39:56.880 --> 40:02.240
就写到动态路由这 就是当配置好路由后

40:03.120 --> 40:05.440
当我们在我们的工程里面配置好路由后

40:06.400 --> 40:15.170
除了向所有实力增加

40:16.610 --> 40:23.810
多了rotor属性之外 这个属性我们刚才说见过 它主要是用来挑转页面的 对吧 主要是用来挑转页面的

40:24.530 --> 40:32.130
还增加了一个属性 这个属性 这两个属性一定要去分开 还增加了一个属性 什么属性呢 叫做rot

40:33.090 --> 40:34.370
还增加了这个属性

40:35.410 --> 40:42.210
也就是说它增加了两 我们要用平时要用到了 增加了两个属性 一个是rotor 它用来干嘛的 它主要是用来挑转页面的

40:43.090 --> 40:47.810
还增加了一个rotor rotor是用来干嘛的呢 该属性

40:49.890 --> 40:56.290
主要用于获取路由信息 获取路由信息

40:57.010 --> 41:04.610
那么这个信息 我们这里我们是不是获取路由信息啊 从这个路由里面获取到id 对吧 你看这个路由里面不是

41:05.010 --> 41:10.930
不是这里写了这么一个取了个名字叫做id吗 对吧 那么现在访问了这么一个地址 比方访问了这个123

41:11.170 --> 41:13.170
那么访问了这么一个地址 我们的路由规则

41:14.050 --> 41:15.970
路由规则是啥 路由规则是这个

41:16.770 --> 41:21.330
那么这两个是不是能匹配 对吧 能匹配上 那么这一部分匹配上的东西就叫做id

41:21.570 --> 41:26.290
它匹配之后呢 它会把123复制给这个id 那么这个id就是路由信息

41:27.010 --> 41:34.690
那么这个路由信息怎么来获取呢 这个rotor对象里边呢 是其实是有很多数据的啊 很多东西的 我们这里打印出来看一下

41:35.170 --> 41:36.930
我们在这里输出一下啊

41:38.530 --> 41:44.050
输出一下这个z点 因为我们知道它在放到属性里面的z点rot输出一下

41:44.690 --> 41:47.970
好 我们在电影详情里边检查看一下 看一下这边

41:48.850 --> 41:51.490
你看是不是输出个对象 这个对象里边你看一下吧

41:52.210 --> 41:58.450
一个是forpass 就是完整路径 完整路径 一个是路径 路径和完整路径有什么区别呢

41:58.690 --> 42:01.330
比如说 如果说路径里边你还加了这个东西

42:02.530 --> 42:05.330
你还加了问号后边加一些东西 你看一下吧

42:08.640 --> 42:12.400
你看完整路径里边是不是包含这些东西 对吧 包含问号后边的东西

42:12.720 --> 42:18.000
问号后边的东西 有没有同学没见过 没有见过这种东西 没见过的同学q个1

42:20.400 --> 42:21.360
没见过的同学q个1

42:23.120 --> 42:25.600
哎呀 太好了

42:27.600 --> 42:31.440
嗯 还有同学没见过的 还有同学 以后我再说吧 以后我再说

42:32.000 --> 42:34.560
好 那么假如我们就你不别关心 现在别管是啥吧

42:34.560 --> 42:37.520
啊 就是加了加了一些问号后边的东西啊 加了问号后边的东西

42:37.760 --> 42:41.840
完整路径里边它会包含这个 但是呢 pass里边是不会包含的啊 是不会包含的

42:42.880 --> 42:48.720
好 那么我们刚才我们匹配到的id事情 刚才有同学在问啊 这个id是不是固定的

42:48.880 --> 42:53.920
它不是固定的 你这里写啥都可以 你写abc都可以 你想写啥写啥

42:54.240 --> 42:59.440
一样的啊 一样的 还是能匹配上 只是给它取个名字 给这个段落 给这个位置取个名字

43:00.720 --> 43:05.280
好 那么现在呢 我们来看一下这个对象里边 其中有一个属性叫做paras

43:06.000 --> 43:06.560
paras

43:07.280 --> 43:10.800
paras是什么 里边是不是有个abc abc里边是啥

43:11.680 --> 43:14.320
这一段是不是它的abc的值是不是就这个东西

43:14.880 --> 43:19.520
对吧 但为什么它叫abc呢 是因为我们路由配置里边这里写的是abc

43:19.920 --> 43:27.280
于是呢 它就相当于是在这 把这个123id放到哪去了 你看呀 它相当于是把这个东西放到哪去了 放到这来了

43:28.880 --> 43:33.600
id为123啊 明白的意思吧 当然它得到是支五串啊 它得到的一定是支五串

43:34.400 --> 43:38.480
明白的意思吧 它就把它放到这个属性里边去了paras这个属性 你看一下

43:39.200 --> 43:45.200
这个rot这个对象里边paras这个对象是一个对象 这个对象里边是那个属性abc对吧 这个abc是不是我们的名字

43:45.600 --> 43:51.920
对吧 这是你自己命名的啊 所以说你要获取id是不是特别特别简单 你这里怎么来获取id

43:52.800 --> 43:55.520
看一下啊 我们这里怎么来获取id 我们这里输出

43:57.280 --> 44:01.840
id id等于啥了 等于z是rot

44:02.160 --> 44:04.960
paras啊paras

44:05.680 --> 44:10.000
paras指的是参数的意思啊 那么这里是不是del id对不对

44:10.480 --> 44:13.440
是不是del id 那么为什么del id 因为这里写的是id

44:14.080 --> 44:20.400
这个很好理解吧 保存啊 你看一下 那么这里看id是不是得到这个 好 我们地址改一下啊 改一下改成这个

44:22.480 --> 44:26.240
来 刷新啊 你看一下 是不是得到这个 对吧 说得到这个

44:27.280 --> 44:31.440
对不对 所以说呢 这里的特别特别简单要获取id 就通过这种方式来获取就行了

44:31.920 --> 44:35.840
那么这个东西呢 paras 叫做什么呢 叫做路由参数

44:41.020 --> 44:44.140
rot paras 获取的是什么呢

44:46.140 --> 44:55.260
获取的是路由配置规则中匹配到的路由信息

44:56.060 --> 45:01.820
获取到的是路由规则中 这是路由规则对吧 匹配到的这个id的信息 获取到的是这个路由信息

45:02.220 --> 45:02.620
paras

45:03.340 --> 45:03.820
paras

45:04.540 --> 45:09.820
我们通常呢 把它叫做通常称之为路由

45:11.660 --> 45:13.100
称之为路由参数

45:14.140 --> 45:19.580
通常称之为路由参数 其实用这个东西中文翻译还真不好翻译啊 真不好翻译 就叫做paras吧 paras

45:20.700 --> 45:22.300
好 那么这样就获取了啊

45:23.020 --> 45:26.700
其实除了路由参数之外 还有一种做法

45:27.740 --> 45:32.220
还有一种做法 也可以给路由传递一些信息 比如说把id传过去

45:33.100 --> 45:39.340
还有通过什么做法呢 好 给大家看第二种做法啊 第二种做法我们不使用静态路由了 第二种做法我们了解一下啊

45:39.900 --> 45:43.020
不使用静态路由了 使用什么呢 还是使用固定路由

45:43.660 --> 45:45.660
不使用动态路由了 还是使用固定路由

45:46.620 --> 45:51.100
movey detail 还是访问movey detail 你看有id吗 有动态路由吗 没有

45:51.500 --> 45:58.460
没有 也就是说我们只要必须要让 必须要让我访问啥 必须要让我访问这个 哎 我把关了干嘛

46:00.700 --> 46:01.980
必须要让我访问这个地址

46:02.780 --> 46:03.500
movey detail

46:04.220 --> 46:09.180
必须要让我访问这个地址 才能匹配上 那么这样子一来我怎么把id的信息放过去了

46:09.660 --> 46:15.180
我不把信息放到 你看id是不是得不到了 对吧 id得不到了 但是我们把这个roach对象输出啊

46:15.660 --> 46:19.900
在这里把这个roach对象输出 下面这句话注射掉

46:21.340 --> 46:23.820
把this的roach输出

46:24.940 --> 46:28.940
好 那么现在呢 我们有运路由里边没有没有信息 对吧 没有id

46:29.900 --> 46:33.420
那么现在怎么办啊 你现在在用这种方式 在后面加id能访问吗

46:33.740 --> 46:37.660
这不肯定访问不到 对吧 因为路由规则都匹配不上了 后面没有动态路由

46:38.060 --> 46:44.140
那么如果说我们现在的就用静态路由 能不能把信息传过去了 也可以 传辑的方式是

46:44.860 --> 46:46.620
问号 问号

46:47.420 --> 46:53.100
问号是一个地址的里边的关键词啊 一个关键词 它表示后边的是额外的信息

46:53.340 --> 46:55.660
我们通常的把它叫做地址难参数

46:56.380 --> 46:59.260
更准确的说法呢 我们通常把它叫做query

47:03.300 --> 47:04.260
从我们这里记一笔

47:04.980 --> 47:12.260
除了使用parals传递信息给主 传递信息给页面

47:13.780 --> 47:16.500
还可以使用query的方式

47:17.140 --> 47:31.140
query的方式是在地址难后面加上问号

47:31.860 --> 47:32.580
加上问号

47:33.220 --> 47:36.100
然后一次书写数据

47:36.820 --> 47:40.420
一次书写数据 我们马上就说这个数据怎么书写

47:40.900 --> 47:46.260
好 比方说我们要访问这个电影 我要显示id为1的电影 我们怎么来书写路径呢

47:46.500 --> 47:47.300
move a detail

47:48.260 --> 47:53.540
然后加上一个问号 然后把id等于1这样子来书写

47:54.500 --> 47:58.900
你对比一下啊 对比一下这两种书写方式 是不是下面那种更加简洁一点啊

47:59.380 --> 48:03.380
下面那种用的比较多一点啊 上面那种稍微要少一点 稍微要小一点

48:05.060 --> 48:08.660
但是上面这种做法呢 它适用于传递很多很多的数据量

48:09.460 --> 48:13.060
比方说我们这里要传递的数据量不止一个id 还要传递别的数据

48:13.380 --> 48:16.020
还要传递别的数据 比方说我们还要传递a等于

48:16.420 --> 48:19.060
还要传递搜索条件啊 假是吧 只要随便说一说

48:19.460 --> 48:22.260
因为我们要显示电影详情也不存在搜索了 对不对

48:22.740 --> 48:26.660
搜索条件还要显示分页 还要显示limets 对吧 还要显示很多数据

48:27.140 --> 48:29.700
那么我们用and符号来进行分割

48:30.260 --> 48:33.620
用and符号来进行分割 分割过后呢 每一块是一个数据

48:34.020 --> 48:37.620
这是属性名啊 这是属性值啊 这是属性名的属性值

48:37.940 --> 48:39.540
我们通过这种方式来传递

48:40.340 --> 48:43.620
这种方式呢 由于问号后边是一些附加信息

48:43.620 --> 48:46.980
所以说呢 浏览器呢 它仍然认为你访问了地址

48:46.980 --> 48:49.700
仍然是这个地址 它不会认为你访问的是这个地址

48:50.100 --> 48:51.860
它会认为你访问的仍然是这个地址

48:52.020 --> 48:54.020
所以说仍然能够匹配上这里的路由

48:54.900 --> 48:56.500
这里的路由规则仍然能匹配上

48:57.140 --> 48:58.260
比方说 咱们来看一下吧

48:58.260 --> 49:00.900
我们在问号后边 给上一个id等于123

49:00.900 --> 49:03.460
再加上and a等于1 b等于2

49:03.460 --> 49:04.980
你看一下 随便先写个啊

49:04.980 --> 49:07.220
然后我们现在在刷新页面 你看一下

49:07.220 --> 49:09.780
我们这里得到了路由对象里边 你看march

49:11.140 --> 49:12.420
Parrot是不是没了

49:12.420 --> 49:15.860
Parrot是不是动 它或许是动态路由这边的东西 是不是没了

49:15.860 --> 49:17.940
为什么 因为你没有配置动态路由

49:17.940 --> 49:19.700
它没有这个路由参数 对吧

49:19.700 --> 49:20.980
它没有这个路由参数

49:20.980 --> 49:23.860
但是Parrot是没了 但是它是不是clar里面有东西

49:24.340 --> 49:25.140
clar里面有什么

49:25.140 --> 49:27.940
a等于1 b等于2 id等于123 对吧

49:27.940 --> 49:29.620
它给你解构出来了 看没

49:30.580 --> 49:32.980
于是那你是不是可以通过clari来获取啊

49:32.980 --> 49:34.580
也是不也可以获取

49:35.380 --> 49:37.140
通过clari也可以获取

49:37.140 --> 49:39.460
这里呢 我们通过这个clari

49:40.580 --> 49:42.340
所以也可以获取 对吧

49:42.340 --> 49:42.740
保存

49:43.860 --> 49:46.420
你看id为123 id水源变一下啊

49:47.220 --> 49:48.100
我们要刷新页面

49:48.980 --> 49:50.820
你看 就是能够得到 对吧

49:58.220 --> 49:59.580
多个帽 包好站位 是吧

50:00.060 --> 50:02.620
你就一次写就完了 一次写就完了

50:02.620 --> 50:05.820
比方说你这里写上 这个写杠帽号id

50:05.820 --> 50:09.020
再写杠帽号a 再写杠帽号b

50:09.020 --> 50:11.980
你一次写就完了 一次写就完了

50:11.980 --> 50:14.620
那么比方说你访问这个地址

50:14.620 --> 50:15.740
访问这个地址

50:17.820 --> 50:22.780
movie 比方说123 a b c 水源写的

50:22.780 --> 50:24.540
那么这个东西是不是给id了

50:24.540 --> 50:25.660
这个东西是不是给a了

50:25.660 --> 50:26.700
这个东西是不是给b了

50:27.500 --> 50:28.620
是一样的

50:30.140 --> 50:31.660
只不过呢 如果说太多了

50:31.660 --> 50:32.380
太多了

50:32.380 --> 50:34.620
那么我们一般就不会用这种方式了

50:34.620 --> 50:35.900
一般会用query的方式

50:35.900 --> 50:38.780
所以说如果说你要对比params和query的话

50:38.780 --> 50:40.220
我们一般是这样子

50:40.620 --> 50:43.180
通常的用法 习惯上是这样子来处理的

50:43.180 --> 50:45.820
就是说如果说你传递的信息非常灵活

50:45.820 --> 50:48.460
有些信息可以传递 有些信息不能传递

50:48.460 --> 50:51.100
有些信息可以传递 有些信息可以不传递

50:51.900 --> 50:53.900
像这种 而且传递的信息量比较多

50:53.900 --> 50:55.340
我们一般是使用query

50:56.140 --> 50:57.740
如果说你传递的信息量很少

50:57.740 --> 50:58.620
通常只有一个

50:59.500 --> 51:01.100
那么我们一般使用params

51:02.780 --> 51:04.140
关键是看起这个信息量

51:04.140 --> 51:06.940
这是我们操作的上的一种习惯吧

51:06.940 --> 51:07.900
应该算是一种习惯

51:09.180 --> 51:11.420
好 那么现在我们使用params这种方式

51:11.420 --> 51:12.540
params这种方式

51:12.540 --> 51:14.060
那么我们刚才经过刚才的分析

51:14.060 --> 51:15.980
是不是这里可以通过params拿到这个id

51:16.540 --> 51:17.580
是不是可以拿到这个id

51:19.340 --> 51:20.940
是不是可以拿到这个电影的id

51:20.940 --> 51:23.820
拿到电影的id过后是不是可以获取电影了

51:24.620 --> 51:27.980
thiswroteparamsid 是不是拿到了

51:28.140 --> 51:29.820
那么怎么来根据id的获取电影呢

51:29.820 --> 51:30.700
我这里就不讲了

51:30.700 --> 51:32.860
我直接把写好的方法直接拿过来

51:32.860 --> 51:34.460
因为这个东西是阿加克斯的知识

51:34.460 --> 51:35.660
我们直接拿过来就完事了

51:35.660 --> 51:37.260
我们直接把这两个service拿过来

51:37.260 --> 51:38.140
直接覆盖掉这边的

51:38.780 --> 51:40.540
我们今天晚上要用的直接覆盖掉

51:42.540 --> 51:43.100
把这个删了

51:44.220 --> 51:47.340
这个地方是用movey service

51:47.340 --> 51:50.060
那么movey service里面它提供了一个函数

51:50.060 --> 51:51.740
提供一个函数叫做getmovey

51:51.740 --> 51:53.100
你把id传过去

51:53.100 --> 51:54.860
它就能得到一个电影对象

51:54.860 --> 51:55.500
就这么简单

51:56.460 --> 51:58.860
协法跟我们之前是一样的

51:58.860 --> 51:59.740
我们调用什么呢

51:59.740 --> 52:01.100
把这个调导进来

52:01.100 --> 52:02.140
导进来 import

52:03.260 --> 52:04.780
有兴趣的东西可以看一下我怎么写的

52:04.780 --> 52:06.140
其实你没什么好说的

52:06.140 --> 52:07.740
这个地方也很简单

52:07.740 --> 52:09.100
你学过阿加克斯你马上就明白了

52:09.900 --> 52:10.380
services

52:11.820 --> 52:13.340
这里边movey service

52:13.340 --> 52:13.900
叫js

52:15.340 --> 52:16.060
那么这里呢

52:16.060 --> 52:17.980
我们就通过这个函数里面的什么

52:17.980 --> 52:18.940
getmovey

52:20.940 --> 52:22.140
那么这里传一个什么呢

52:22.140 --> 52:23.580
传一个id进去对吧

52:23.580 --> 52:25.260
id是为什么已经获取到了

52:25.260 --> 52:25.980
id传进去

52:25.980 --> 52:26.940
已经写好了这个函数了

52:26.940 --> 52:28.300
你不用管这个函数怎么实现的

52:28.300 --> 52:30.380
它总之它能够拿到这个电影

52:30.380 --> 52:31.420
id拿到了

52:31.420 --> 52:32.460
那么这里呢

52:32.460 --> 52:33.580
协法跟之前也一样

52:33.580 --> 52:34.940
是不拿到服务器的返回结果

52:36.620 --> 52:38.700
等到它服务器拿到数据之后

52:38.700 --> 52:39.980
它会运行这个回调函数

52:41.100 --> 52:42.780
好这个回调函数它本身就是电影

52:42.780 --> 52:44.140
它就是一个电影对象

52:44.140 --> 52:45.580
它就是一个电影对象

52:45.580 --> 52:46.620
那么我们现在是不是要

52:46.620 --> 52:47.580
选择那个电影对象

52:47.580 --> 52:48.460
因为我们最终是要用

52:48.460 --> 52:49.420
使用movey这个组件

52:49.420 --> 52:50.140
对吧

52:50.140 --> 52:51.420
是要使用movey这个组件

52:52.540 --> 52:53.340
那么我们这里怎么来

52:53.340 --> 52:54.700
选择那个电影组件呢

52:54.780 --> 52:55.740
是不是要给它一个属像

52:56.460 --> 52:57.580
给它一个属像什么属像

52:58.860 --> 52:59.500
data对吧

52:59.500 --> 52:59.660
是吧

52:59.660 --> 53:00.540
给它这个属像

53:00.540 --> 53:01.740
这个属像是来自于哪呢

53:01.740 --> 53:02.460
我们是不是在这里

53:02.460 --> 53:03.900
要配置一个data的

53:03.900 --> 53:04.860
我们的自己的数据

53:04.860 --> 53:05.340
对吧

53:05.340 --> 53:06.300
我们自己的数据

53:06.300 --> 53:06.860
就是movey

53:07.420 --> 53:07.660
movey

53:08.700 --> 53:10.140
默认的是比方说

53:10.140 --> 53:10.700
比方说

53:11.260 --> 53:12.700
默认的是一个

53:13.420 --> 53:14.060
闹吧

53:14.060 --> 53:15.500
比方说默认是一个闹

53:16.460 --> 53:18.220
那么当我们拿到数据之后

53:18.220 --> 53:19.260
从这里拿到数据之后

53:19.260 --> 53:20.300
是不是重新给大家复职

53:20.860 --> 53:22.780
一切都是数据的响应是

53:23.340 --> 53:24.060
要改变界面

53:24.140 --> 53:25.020
一定是改变数据

53:25.500 --> 53:25.660
好

53:26.300 --> 53:27.900
那么这里的数据是不是重新给它复职

53:27.900 --> 53:29.100
重新给它复职过后

53:30.380 --> 53:35.260
将服务器的电影对象

53:35.900 --> 53:37.340
复职给movey

53:38.380 --> 53:40.060
将服务器的电影对象复职给这个movey

53:40.700 --> 53:40.860
好

53:40.860 --> 53:42.700
那么一个人复职是不是就响应识了

53:42.700 --> 53:43.580
就响应识了

53:44.140 --> 53:44.300
好

53:44.300 --> 53:44.780
那么这里呢

53:44.780 --> 53:45.580
就会重新渲染

53:45.580 --> 53:45.900
对吧

53:45.900 --> 53:46.140
好

53:46.140 --> 53:47.180
那么这里我就给它写上

53:47.180 --> 53:47.500
是吧

53:47.500 --> 53:48.380
movey就完事了

53:48.940 --> 53:49.180
好

53:49.180 --> 53:49.820
保存看一下吧

53:52.460 --> 53:52.940
这里呢

53:52.940 --> 53:53.660
我们要重新来

53:55.020 --> 53:56.700
这里我还要给它加一个那个

53:57.020 --> 53:57.740
还要在这里

53:57.740 --> 53:58.620
就是在这

54:00.940 --> 54:01.740
跳转的时候

54:02.380 --> 54:03.500
movey历史里边

54:04.140 --> 54:04.620
movey里边

54:05.020 --> 54:06.940
这里我们是不是要写上这么一个A元书

54:07.340 --> 54:07.740
对吧

54:07.740 --> 54:09.180
我们是不是要写个A元书在这

54:09.660 --> 54:10.060
对不对

54:10.460 --> 54:11.740
咱们要写这么一个A元书

54:11.980 --> 54:13.420
当然最好不要用A元书

54:13.420 --> 54:13.740
用什么

54:13.900 --> 54:14.700
rotalink

54:15.100 --> 54:15.500
对不对

54:15.980 --> 54:17.260
咱们最好用rotalink

54:18.780 --> 54:19.260
用这个

54:19.900 --> 54:20.140
好

54:20.140 --> 54:22.300
那么这里内部显示的是电影的名称

54:23.020 --> 54:24.220
内部显示的是电影名称

54:24.700 --> 54:25.340
换个行吧

54:26.540 --> 54:27.020
好

54:27.020 --> 54:28.540
那么这里是不是要写上一个tue

54:29.420 --> 54:30.220
跳转到哪儿呢

54:30.780 --> 54:31.340
跳转到哪儿

54:32.220 --> 54:32.780
跳转到哪儿

54:32.780 --> 54:34.380
是不是跳转到movey

54:34.380 --> 54:34.860
写杠

54:34.860 --> 54:36.140
这里是不是要写上id

54:36.700 --> 54:37.260
好

54:37.260 --> 54:38.540
那这里能不能这样子写

54:39.260 --> 54:40.060
能不能这样子写

54:44.930 --> 54:45.890
能不能这样子写啊

54:50.560 --> 54:51.280
加一个什么

54:52.320 --> 54:54.720
如果在路由参数后边

54:54.720 --> 54:55.440
加一个

54:57.040 --> 54:57.840
加一个这个

54:58.000 --> 54:58.720
还能找到id吗

54:58.720 --> 54:59.200
可以啊

54:59.840 --> 55:01.120
路由参数嘛

55:02.080 --> 55:02.880
这个是啥呀

55:02.880 --> 55:03.440
movey

55:05.360 --> 55:05.840
插插插

55:05.840 --> 55:06.480
那你找不到了

55:07.840 --> 55:08.800
后边再加上一个

55:08.800 --> 55:09.360
那你找不到了

55:09.360 --> 55:10.000
那就找不到了

55:10.000 --> 55:10.720
那就找不到了

55:12.160 --> 55:12.880
不能这样写对吧

55:12.880 --> 55:14.320
因为我们先讲过插指

55:14.320 --> 55:16.560
这东西只能写到元书内容里边

55:16.560 --> 55:18.080
它不能写到元书属性里边

55:18.080 --> 55:19.120
元书属性里边

55:19.120 --> 55:21.440
你要来自于一个动态获取的东西

55:21.440 --> 55:22.480
是不是要写帽号啊

55:22.480 --> 55:22.800
对吧

55:22.800 --> 55:23.520
要写绑定

55:24.240 --> 55:25.040
那么这里呢

55:25.040 --> 55:25.840
看一下啊

55:25.840 --> 55:26.880
能不能这样子写呢

55:27.600 --> 55:28.480
这里写上什么

55:29.200 --> 55:31.760
拼接上data.下滑线id

55:32.480 --> 55:33.440
服务器的数据里边

55:33.440 --> 55:34.720
拿到这个下滑线id

55:34.720 --> 55:36.640
拿到的是下滑线id

55:36.640 --> 55:37.280
你可以看这

55:38.000 --> 55:39.280
它的id是下滑线id

55:40.400 --> 55:41.200
能不能这样子写呢

55:41.760 --> 55:43.120
这样子写就是事无相

55:43.120 --> 55:44.000
啥都不是啊

55:44.000 --> 55:45.600
还要报错了这个语法

55:45.600 --> 55:47.760
因为你现在是绑定了一个GS表达式

55:47.760 --> 55:49.200
都是我为什么要说这些

55:49.200 --> 55:50.800
都是经常犯的错误

55:51.520 --> 55:52.800
因为这个表达式

55:52.800 --> 55:53.680
它会把这个东西

55:53.680 --> 55:54.720
认为是一个GS代码

55:54.720 --> 55:56.320
那你告诉我这个GS代码在干嘛

55:56.880 --> 55:58.160
这是啥GS代码

55:58.160 --> 55:59.680
这是啥GS代码

55:59.680 --> 56:00.720
没有任何的GS代码

56:00.720 --> 56:02.560
是用这种语法输写的对吧

56:02.560 --> 56:03.360
你要给它一个什么

56:03.360 --> 56:04.880
你是要给它一个制服圈啊

56:04.880 --> 56:06.480
那你制服圈是不是得拼接

56:06.480 --> 56:08.400
对吧move前面是这个

56:08.400 --> 56:09.600
后面拼接啥

56:09.600 --> 56:11.760
拼接data.id

56:11.760 --> 56:12.400
那么这个东西

56:12.400 --> 56:14.400
才是一个GS表达式嘛

56:14.400 --> 56:15.680
对不对啊

56:15.680 --> 56:17.760
这个玩意才是一个GS表达式

56:17.760 --> 56:18.480
前面一个制服圈

56:18.480 --> 56:19.760
然后拼接上data.id

56:20.800 --> 56:21.600
那么现在我们看一下

56:24.530 --> 56:24.690
好

56:24.690 --> 56:25.090
那么现在呢

56:25.090 --> 56:26.130
我们给这个A起音

56:26.130 --> 56:27.250
那就加上一个A元数了

56:27.250 --> 56:27.730
你看看

56:27.730 --> 56:29.490
你看指上去是不是给A元数

56:29.490 --> 56:29.970
好

56:29.970 --> 56:31.090
那么现在我们点击

56:31.970 --> 56:32.450
好

56:32.450 --> 56:33.730
你看一下是不是显示出来了

56:33.730 --> 56:34.130
对吧

56:34.130 --> 56:35.090
就显示出来了

56:35.090 --> 56:35.970
就显示出来了

56:36.850 --> 56:37.570
有点恐怖

56:38.210 --> 56:38.770
我换一个

56:39.570 --> 56:39.970
点这个

56:41.890 --> 56:42.210
好

56:42.210 --> 56:43.330
你看显示出来了

56:44.050 --> 56:44.370
当然了

56:44.370 --> 56:45.170
这里的样式呢

56:45.170 --> 56:45.730
我还要外面

56:45.730 --> 56:47.410
外面这个样式有点问题

56:47.410 --> 56:48.770
我这里还要在外面

56:48.770 --> 56:49.490
套一个东西

56:50.770 --> 56:51.490
move detail

56:51.490 --> 56:53.170
还在外面套一个div

56:54.450 --> 56:55.250
叫什么

56:55.250 --> 56:56.050
data content

56:56.050 --> 56:57.330
我们之前写好的样式

56:57.410 --> 56:58.370
还要套这么一个东西

57:00.370 --> 57:01.490
外面要套这么一个div

57:02.050 --> 57:02.290
好

57:02.290 --> 57:02.690
保存

57:02.690 --> 57:03.170
保存

57:03.890 --> 57:04.050
好

57:04.050 --> 57:04.450
你看

57:04.450 --> 57:05.330
是不是显示出来了

57:05.330 --> 57:05.650
对吧

57:05.650 --> 57:06.370
就这么简单

57:06.370 --> 57:07.170
就显示出来了

57:08.610 --> 57:08.770
好

57:08.770 --> 57:10.450
那么它这里为什么要爆出了

57:10.930 --> 57:12.050
爆出的原因是什么呢

57:12.450 --> 57:15.010
原因是因为这里数据变化了两次

57:16.530 --> 57:18.370
一开始是now对吧

57:19.410 --> 57:20.370
然后后边一看

57:20.370 --> 57:21.650
这数据有两个数据

57:21.650 --> 57:22.690
一开始是now

57:22.690 --> 57:23.490
然后后边

57:23.490 --> 57:25.010
是不是要经过一段时间

57:25.490 --> 57:26.370
经过一段时间

57:26.450 --> 57:27.650
从头去拿数据

57:27.650 --> 57:28.690
拿到id嘛

57:28.690 --> 57:29.810
从头去拿数据

57:29.810 --> 57:31.090
把数据拿了过后

57:31.090 --> 57:32.530
要重新给它复制

57:32.530 --> 57:34.130
那么一开始的时候

57:34.130 --> 57:35.890
由于传递给它的是now

57:37.970 --> 57:40.610
那么在这个组件里边

57:40.610 --> 57:42.210
这个data是不是now

57:42.210 --> 57:44.290
那么读去now里边的这些数像是不是爆错了

57:45.010 --> 57:45.330
对吧

57:45.330 --> 57:47.170
读去now里边的数像是不是爆错了

57:47.170 --> 57:47.810
因此呢

57:47.810 --> 57:48.850
我们这个组件

57:48.850 --> 57:50.290
要不要显示

57:50.290 --> 57:51.490
是不是我们可以做个

57:51.490 --> 57:53.170
做个vif或者是v秀对吧

57:54.130 --> 57:56.530
这里可以用vif嘛

57:56.530 --> 57:58.290
这里就用vif就比较合适了

57:58.290 --> 57:59.890
其实这里什么时候用vif

57:59.890 --> 58:00.930
什么时候用v秀了

58:00.930 --> 58:02.850
如果说你要频繁切换显示

58:02.850 --> 58:03.570
和不显示的话

58:03.570 --> 58:05.010
用vif比较好一点

58:05.010 --> 58:06.690
如果说你只是决定一次

58:06.690 --> 58:07.650
它要不要显示的话

58:07.650 --> 58:09.250
用vif比较好一点

58:09.250 --> 58:10.850
我们这里只是决定它要不要显示

58:11.570 --> 58:13.970
那么后边不会频繁的切换显示隐藏

58:13.970 --> 58:15.570
所以说我们这里用vif比较好一点

58:16.610 --> 58:18.050
vif就是判断一下

58:18.050 --> 58:21.490
它要不要显示呢

58:21.490 --> 58:22.690
什么情况还要显示

58:22.850 --> 58:24.370
就要显示的情况下

58:24.370 --> 58:26.130
要显示的情况就是

58:26.130 --> 58:28.130
无为是不是有值

58:28.130 --> 58:29.010
对吧

58:29.010 --> 58:30.210
如果说这个东西有值

58:30.210 --> 58:31.410
是不是我就显示

58:31.410 --> 58:33.090
如果它没有值我就不显示

58:33.090 --> 58:34.770
我们做这么一个处理

58:34.770 --> 58:36.130
好 保存

58:36.130 --> 58:39.980
好了 我们现在已经看一下

58:39.980 --> 58:40.940
要等一会儿

58:40.940 --> 58:46.060
重新来刷新

58:46.060 --> 58:49.550
有点卡

58:49.550 --> 58:51.310
不知道怎么回事

58:51.310 --> 58:52.350
那现在是不是显示出来了

58:52.350 --> 58:52.990
对吧

58:52.990 --> 58:54.990
这就是通过这种方式

58:54.990 --> 58:55.790
它就不会爆错了

58:55.790 --> 58:57.390
因为刚才给大家传练的是脑

58:57.390 --> 58:59.470
那么这里由于它等半天才能显示

58:59.550 --> 59:02.670
所以说我们仍然希望能够显示一个夹载中

59:02.670 --> 59:03.950
能够显示个夹载中

59:03.950 --> 59:06.350
那么这个夹载中组件是不是可以重用

59:06.350 --> 59:12.030
我们之前写过这么一个夹载中组件

59:12.030 --> 59:14.430
组件出现的目的就是为了重用

59:14.430 --> 59:15.390
楼顶解释

59:15.390 --> 59:17.150
那重新用来用呗

59:17.150 --> 59:17.790
楼顶

59:17.790 --> 59:18.510
是不是重新来用

59:18.510 --> 59:19.550
那么是不是一样的做法

59:19.550 --> 59:20.750
我们在这里给它显示一个意思

59:20.750 --> 59:23.150
楼顶是不是正在夹载中

59:23.150 --> 59:26.430
是否正在远程获取

59:26.430 --> 59:28.430
那么如果说正在远程获取的话

59:28.430 --> 59:30.910
那么你这个组件去秀就显示

59:30.910 --> 59:31.790
意思楼顶

59:31.950 --> 59:33.790
是不是就显示出来

59:33.790 --> 59:35.550
那么这个属性什么时候变了

59:35.550 --> 59:37.310
跟之前说一样的

59:37.310 --> 59:40.270
如果说了我现在正在夹载远程

59:40.270 --> 59:41.790
是否先把它设为去

59:41.790 --> 59:43.310
然后夹载完了之后

59:43.310 --> 59:44.910
意思楼顶把它设为forced

59:44.910 --> 59:45.870
对吧

59:45.870 --> 59:48.190
是不是用这个东西搞定

59:48.190 --> 59:50.910
那么我们组件里面要注册一下

59:50.910 --> 59:52.590
组件里面要注册一下楼顶

59:52.590 --> 59:54.030
好保存

59:54.030 --> 59:55.150
你看一下

59:55.150 --> 59:56.830
刷新

59:56.830 --> 59:58.030
是不是一个夹载中的效果

59:58.030 --> 59:59.710
我们到电影业

59:59.870 --> 01:00:02.270
点下页吧

01:00:02.270 --> 01:00:03.630
好点这

01:00:03.630 --> 01:00:05.070
是不是一个夹载中效果

01:00:05.070 --> 01:00:06.910
对吧那么电影的详情页

01:00:06.910 --> 01:00:08.110
是不是就做完了

01:00:08.110 --> 01:00:12.140
对吧就做完了

01:00:12.140 --> 01:00:13.340
哎不知道怎么回事啊

01:00:13.340 --> 01:00:14.540
今天晚上

01:00:14.540 --> 01:00:21.200
不知道怎么回事怎么这么看

01:00:21.200 --> 01:00:23.040
我每天上课之前

01:00:23.040 --> 01:00:24.960
我都会去那个

01:00:24.960 --> 01:00:26.880
有个工具它可以测述

01:00:26.880 --> 01:00:28.800
每次测述都是没问题的

01:00:28.800 --> 01:00:32.000
只能说腾讯课堂可能这个服务器吧

01:00:32.000 --> 01:00:33.200
有点问题

01:00:33.200 --> 01:00:34.960
有点问题

01:00:35.040 --> 01:00:36.240
怎么办呢

01:00:36.240 --> 01:00:39.680
能不能听啊能不能听

01:00:39.680 --> 01:00:41.520
这卡能不能听

01:00:41.520 --> 01:00:43.120
应该能听吧

01:00:43.120 --> 01:00:44.800
应该能啊应该能

01:00:44.800 --> 01:00:45.840
我反正讲了慢啊

01:00:45.840 --> 01:00:46.480
我反正讲了慢

01:00:46.480 --> 01:00:47.760
今天我也不着急啊

01:00:47.760 --> 01:00:49.680
大不了也会再休息一会啊再来

01:00:49.680 --> 01:00:52.160
嗯讲了慢啊慢慢讲

01:00:52.160 --> 01:00:53.520
嗯今天晚上呢我们会

01:00:53.520 --> 01:00:55.360
反正都是录下来的啊

01:00:55.360 --> 01:00:56.560
因此呢不用担心

01:00:56.560 --> 01:00:58.000
那你录下来看录播的时候

01:00:58.000 --> 01:01:00.240
就一点不卡了啊

01:01:00.240 --> 01:01:04.240
好这里就是关于这个就是楼顶啊

01:01:04.240 --> 01:01:07.200
嗯然后就是电影的详情页对吧

01:01:07.200 --> 01:01:07.840
电影的详情页

01:01:07.840 --> 01:01:09.680
那好现在我们的路由呢

01:01:09.680 --> 01:01:11.600
就已经说了差不多了

01:01:11.600 --> 01:01:13.760
接下来我们再来说另外一个问题

01:01:13.760 --> 01:01:16.800
现在比方说咱们要做登录

01:01:16.800 --> 01:01:18.400
咱们要做的一个登录

01:01:18.400 --> 01:01:19.600
登录是不是个页面

01:01:19.600 --> 01:01:21.920
好咱们来写这么一个登录页面

01:01:21.920 --> 01:01:24.400
写这么一个登录页面

01:01:24.400 --> 01:01:25.840
好比方说啊咱们呢

01:01:25.840 --> 01:01:27.040
这里写上一个locking

01:01:27.040 --> 01:01:29.920
点儿介绍啊一个登录页

01:01:29.920 --> 01:01:31.520
来吧

01:01:31.520 --> 01:01:36.610
我开始慢慢来涉及登录功能了

01:01:36.610 --> 01:01:39.170
好div

01:01:39.170 --> 01:01:40.610
嗯这个div里面呢

01:01:40.610 --> 01:01:42.370
我们给他个内样式嘛

01:01:42.370 --> 01:01:43.490
内样式center

01:01:43.490 --> 01:01:45.730
让他居东啊让他居东

01:01:45.730 --> 01:01:47.490
我干脆把这个效果里面的

01:01:47.490 --> 01:01:49.730
CSS直接copy过来刷呢

01:01:49.730 --> 01:01:51.330
那效果里面的CSS

01:01:51.330 --> 01:01:56.400
copy过来刷呢

01:01:56.400 --> 01:01:58.240
好那么给他一个内样式center

01:01:58.240 --> 01:01:59.360
这样他就居东了啊

01:01:59.360 --> 01:02:00.080
那么这里边呢

01:02:00.080 --> 01:02:02.240
我们就简单写一下啊简单写一下

01:02:02.240 --> 01:02:03.760
写个label吧

01:02:03.760 --> 01:02:04.720
写个label

01:02:04.800 --> 01:02:06.240
这是账号

01:02:06.240 --> 01:02:07.280
啊账号

01:02:07.280 --> 01:02:08.720
然后呢一个input

01:02:08.720 --> 01:02:10.640
啊input

01:02:10.640 --> 01:02:12.560
啊这里复制一个

01:02:12.560 --> 01:02:13.600
账号

01:02:13.600 --> 01:02:16.160
这个是密码

01:02:16.160 --> 01:02:17.200
啊密码

01:02:17.200 --> 01:02:18.720
啊注意听哦

01:02:18.720 --> 01:02:21.120
登录这一块绝对不简单的

01:02:21.120 --> 01:02:22.640
password

01:02:22.640 --> 01:02:23.680
好这里呢

01:02:23.680 --> 01:02:24.880
button

01:02:24.880 --> 01:02:26.480
登录啊登录

01:02:26.480 --> 01:02:28.480
好桌上桌出来这么一个页面

01:02:28.480 --> 01:02:30.800
好那么我们顺便再复习一下啊

01:02:30.800 --> 01:02:31.600
募有了知识

01:02:31.600 --> 01:02:33.920
首先编写页面组件

01:02:34.000 --> 01:02:34.720
template

01:02:34.720 --> 01:02:36.480
首先编写页面组件

01:02:36.480 --> 01:02:37.280
然后干嘛

01:02:37.280 --> 01:02:38.880
是不是要注册路由配置啊

01:02:38.880 --> 01:02:40.800
在路由里面进行配置

01:02:40.800 --> 01:02:41.600
配置一下

01:02:41.600 --> 01:02:43.360
访问哪个组织能访问到这个路由呢

01:02:43.360 --> 01:02:45.040
访问logging这个地址

01:02:45.040 --> 01:02:46.400
他能够访问到这个组

01:02:46.400 --> 01:02:48.320
能够访问到这个组件啊

01:02:48.320 --> 01:02:50.080
导入进来

01:02:50.080 --> 01:02:52.240
logging点解释

01:02:52.240 --> 01:02:53.200
logging

01:02:53.200 --> 01:02:54.320
啊导入进来啊

01:02:54.320 --> 01:02:56.000
component

01:02:56.000 --> 01:02:57.040
好访问这个地址

01:02:57.040 --> 01:02:58.560
能够访问到这个组件对吧

01:02:58.560 --> 01:03:01.040
好咱们来试一下啊

01:03:01.040 --> 01:03:03.440
好接下来我们来访问这个地址

01:03:03.440 --> 01:03:05.040
邪纲logging

01:03:05.040 --> 01:03:06.480
啊你看是不是到登录页面了

01:03:06.480 --> 01:03:06.800
对吧

01:03:06.800 --> 01:03:08.000
到登录页面了

01:03:08.000 --> 01:03:09.520
好

01:03:09.520 --> 01:03:10.400
啊那么现在呢

01:03:10.400 --> 01:03:11.680
我们要实现登录啊

01:03:11.680 --> 01:03:12.800
我们要实现登录

01:03:12.800 --> 01:03:13.760
怎么实现呢

01:03:13.760 --> 01:03:17.200
是不是要给这个按钮加上点击事件

01:03:17.200 --> 01:03:17.600
对吧

01:03:17.600 --> 01:03:19.360
是不是要给这个按钮加上点击事件

01:03:19.360 --> 01:03:21.360
然后来判断他适逢登录成功

01:03:21.360 --> 01:03:22.080
好那么这里呢

01:03:22.080 --> 01:03:23.280
我先顺便说一下

01:03:23.280 --> 01:03:26.480
这里我们怎么来判断

01:03:26.480 --> 01:03:29.360
适逢登录成

01:03:29.360 --> 01:03:30.880
我这里写了一个模拟的方法

01:03:30.880 --> 01:03:32.080
啊在logging service里面

01:03:32.160 --> 01:03:32.640
这个方法呢

01:03:32.640 --> 01:03:33.920
你看不看得懂都无所谓

01:03:33.920 --> 01:03:34.960
因为这个方法跟我们目前

01:03:34.960 --> 01:03:35.840
这今天晚上课程没关系

01:03:35.840 --> 01:03:37.440
你只要知道怎么用就行了

01:03:37.440 --> 01:03:38.720
啊这是个登录方法

01:03:38.720 --> 01:03:40.240
那么你只要账号等于二的me

01:03:40.240 --> 01:03:41.840
密码等于一二三等于一二三

01:03:41.840 --> 01:03:42.880
我就随便写个啊

01:03:42.880 --> 01:03:44.880
他就会返回给你一个对象

01:03:44.880 --> 01:03:46.560
表示超级管理员

01:03:46.560 --> 01:03:47.680
好否则的话

01:03:47.680 --> 01:03:48.720
如果登录失败的话

01:03:48.720 --> 01:03:50.080
他会给你一个闹

01:03:50.080 --> 01:03:50.880
啊咱们来看一下吧

01:03:50.880 --> 01:03:52.640
啊来看一下

01:03:52.640 --> 01:03:54.240
登录这一块呢

01:03:54.240 --> 01:03:55.200
我们怎么来做呢

01:03:55.200 --> 01:03:56.560
给这个按钮注册一个点击事件

01:03:56.560 --> 01:03:57.040
对吧

01:03:57.040 --> 01:03:58.000
给他注册个点击事件

01:03:58.000 --> 01:03:59.360
click

01:03:59.360 --> 01:04:00.120
给他取个名字啊

01:04:00.120 --> 01:04:01.480
handle login

01:04:01.480 --> 01:04:03.320
处理登录啊处理登录

01:04:03.320 --> 01:04:06.040
好那么处理登录是不是要传账号密码

01:04:06.040 --> 01:04:07.880
message

01:04:07.880 --> 01:04:09.880
handle click

01:04:09.880 --> 01:04:11.400
handle login

01:04:11.400 --> 01:04:12.280
啊

01:04:12.280 --> 01:04:13.960
那是不是拿到账号密码

01:04:13.960 --> 01:04:15.720
啊我们要最终要调用啥

01:04:15.720 --> 01:04:17.080
调用我们刚才说的一个啊

01:04:17.080 --> 01:04:20.040
就说叫做login service

01:04:20.040 --> 01:04:21.480
啊 from

01:04:21.480 --> 01:04:23.000
来自于

01:04:23.000 --> 01:04:24.040
这东西不用管他啊

01:04:24.040 --> 01:04:24.440
不用管他

01:04:24.440 --> 01:04:26.600
那是另外一颗课程的女儿就是

01:04:26.600 --> 01:04:28.040
service is

01:04:28.200 --> 01:04:30.360
login service

01:04:30.360 --> 01:04:33.530
要介绍

01:04:33.530 --> 01:04:35.850
好那么因为这里边很多都是测试的啊

01:04:35.850 --> 01:04:37.290
有信统可以自己看一下

01:04:37.290 --> 01:04:38.330
很多都是测试的

01:04:38.330 --> 01:04:39.290
测试的函数

01:04:39.290 --> 01:04:40.730
呃实际上以后呢

01:04:40.730 --> 01:04:42.490
以后呢其实要做的事情很简单

01:04:42.490 --> 01:04:44.330
你把它改成真正的请求计

01:04:44.330 --> 01:04:47.210
请求阿尔克斯就行了啊

01:04:47.210 --> 01:04:48.730
其他地方都不用改

01:04:48.730 --> 01:04:49.770
好我们这里呢

01:04:49.770 --> 01:04:51.210
找到这个就是login

01:04:51.210 --> 01:04:52.490
啊

01:04:52.490 --> 01:04:53.610
好那么登录的时候

01:04:53.610 --> 01:04:55.210
点击的时候是要调用这个函数啊

01:04:55.210 --> 01:04:56.090
函数里边什么

01:04:56.090 --> 01:04:57.770
点点什么login对吧

01:04:57.770 --> 01:04:58.650
登录

01:04:58.730 --> 01:05:02.250
登录这里是不是要填写一个啊

01:05:02.250 --> 01:05:05.910
呃帐号啊帐号

01:05:05.910 --> 01:05:07.430
是吧帐号填字

01:05:07.430 --> 01:05:08.870
啊帐号

01:05:08.870 --> 01:05:10.230
是不是要把密码填字

01:05:10.230 --> 01:05:11.430
对吧密码填字

01:05:11.430 --> 01:05:13.830
好那么他到底有没有登录成功呢

01:05:13.830 --> 01:05:14.950
我们来看一下啊

01:05:14.950 --> 01:05:16.790
通过这种方式跟之前一样

01:05:16.790 --> 01:05:18.630
看一下服务器的返回结果是啥

01:05:18.630 --> 01:05:20.230
我们输出服务器的返回结果

01:05:20.230 --> 01:05:21.670
比方说我们这里就填这个

01:05:21.670 --> 01:05:23.430
你看一下服务器的返回结果是啥

01:05:23.430 --> 01:05:23.750
保存

01:05:26.230 --> 01:05:29.530
好看一下控制台

01:05:29.530 --> 01:05:30.970
啊帐号我们这里随便写一个

01:05:31.130 --> 01:05:32.330
啊这个东西都无所谓

01:05:32.330 --> 01:05:33.850
因为我们根本没有没有用到

01:05:33.850 --> 01:05:34.970
文闷框里面的帐号密码

01:05:34.970 --> 01:05:35.450
对吧

01:05:35.450 --> 01:05:36.810
好那么这里点击登录

01:05:36.810 --> 01:05:38.010
就得到log对吧

01:05:38.010 --> 01:05:38.890
登录失败啊

01:05:38.890 --> 01:05:40.330
登录失败得到log你看

01:05:40.330 --> 01:05:41.370
得到log

01:05:41.370 --> 01:05:42.810
好那么比方说这里写上一个

01:05:42.810 --> 01:05:43.530
aradmi

01:05:43.530 --> 01:05:45.130
这里写上一个123123

01:05:45.130 --> 01:05:45.610
你看一下

01:05:47.610 --> 01:05:48.650
啊点击登录

01:05:48.650 --> 01:05:49.450
就得到一个对象

01:05:49.450 --> 01:05:50.410
比方登录成功了

01:05:50.410 --> 01:05:52.570
login id登录帐号为aradmi

01:05:52.570 --> 01:05:55.690
呃呃用户的名称为超级管理员

01:05:55.690 --> 01:05:56.970
啊对吧

01:05:56.970 --> 01:05:58.170
就就这就是登录啊

01:05:58.170 --> 01:06:00.410
写了这么一个简单简单的效果出来

01:06:00.570 --> 01:06:02.010
好了那么现在第一个问题

01:06:02.010 --> 01:06:04.810
这里边这个位置和这个位置要填啥

01:06:04.810 --> 01:06:06.410
是不是填拥护填写的

01:06:06.410 --> 01:06:07.690
不是我们写词的对吧

01:06:07.690 --> 01:06:09.130
是要填拥护填写的

01:06:09.130 --> 01:06:10.490
好那么这个问题来了

01:06:10.490 --> 01:06:12.650
我们怎么来获取拥护填写的

01:06:13.770 --> 01:06:15.530
啊咱们怎么来获取拥护填写的

01:06:16.330 --> 01:06:18.170
啊可以用这个挺球地址可以用啊

01:06:18.170 --> 01:06:19.290
可以用都可以用的啊

01:06:19.290 --> 01:06:20.490
哎有人说到了对吧

01:06:20.490 --> 01:06:23.050
用vmode啊双向绑定

01:06:23.050 --> 01:06:24.810
我们的数据一定是来

01:06:24.810 --> 01:06:26.010
要么来自于状

01:06:26.010 --> 01:06:28.330
状态要么来自于属性

01:06:28.330 --> 01:06:29.530
一定是来自于这两个地方

01:06:29.610 --> 01:06:31.290
不可能在别的地方来了啊

01:06:31.290 --> 01:06:32.570
其实别的地方也能来啊

01:06:32.570 --> 01:06:33.850
只是我们不设计的

01:06:33.850 --> 01:06:34.810
绝大部分时候呢

01:06:34.810 --> 01:06:36.490
我们官方建议你呢

01:06:36.490 --> 01:06:38.410
也尽量用这两个东西来解决问题

01:06:38.410 --> 01:06:40.410
而不要去用那些花里扶烧的东西

01:06:40.410 --> 01:06:41.930
有的时候呢花里扶烧的东西多了

01:06:42.730 --> 01:06:44.330
你觉得好像很秀的样子

01:06:44.330 --> 01:06:46.010
在别人面前显败一下对吧

01:06:46.010 --> 01:06:47.290
实际上真正的开发的时候

01:06:47.290 --> 01:06:49.130
少用少用我一秒

01:06:50.010 --> 01:06:52.170
这里边要除非你把他

01:06:52.170 --> 01:06:53.690
把他这个掌控的非常

01:06:53.690 --> 01:06:55.450
把掌握的非常非常透彻

01:06:55.450 --> 01:06:57.450
把这套思想和理念掌握的很透彻

01:06:58.330 --> 01:06:59.050
做尽量少用

01:06:59.050 --> 01:07:00.570
尽量我们数据的就放到

01:07:00.570 --> 01:07:03.210
就从属性和data里边来

01:07:03.210 --> 01:07:04.250
状态里边来

01:07:04.250 --> 01:07:06.090
那么我们这里写两个状态

01:07:06.090 --> 01:07:07.770
一个是什么login id

01:07:07.770 --> 01:07:08.490
对吧一个状

01:07:08.490 --> 01:07:09.930
login id

01:07:09.930 --> 01:07:11.210
默认为控制不串

01:07:11.210 --> 01:07:12.570
一个是login password的

01:07:12.570 --> 01:07:13.770
默认为控制不串

01:07:13.770 --> 01:07:14.410
一个是账号

01:07:14.410 --> 01:07:15.530
一个是密码

01:07:15.530 --> 01:07:16.890
好那么这里呢

01:07:16.890 --> 01:07:18.970
双向绑定vmod

01:07:18.970 --> 01:07:20.010
那么这里是绑定啥

01:07:20.010 --> 01:07:22.010
就是绑定login id

01:07:22.010 --> 01:07:23.130
好这里绑定啥呢

01:07:23.130 --> 01:07:26.170
这里绑定login password的

01:07:26.170 --> 01:07:26.490
对吧

01:07:26.570 --> 01:07:27.930
是不是绑定这两个

01:07:27.930 --> 01:07:29.370
好那么这样子绑定了之后

01:07:29.370 --> 01:07:30.330
稳定框一遍

01:07:30.330 --> 01:07:31.450
是不是他也跟着变的

01:07:31.450 --> 01:07:32.810
这两个数据也跟着变的

01:07:32.810 --> 01:07:34.090
因此我们这里就大胆的

01:07:34.090 --> 01:07:35.530
把这两个数据扔过来就行了

01:07:35.530 --> 01:07:36.250
因为这两个数据

01:07:36.250 --> 01:07:38.410
一定是跟稳定框对应的

01:07:38.410 --> 01:07:39.450
稳定框一边是啥

01:07:39.450 --> 01:07:40.410
他们两个就是啥

01:07:40.410 --> 01:07:40.890
对吧

01:07:40.890 --> 01:07:42.250
这是很简单的一个效果

01:07:42.250 --> 01:07:43.210
好保存

01:07:43.210 --> 01:07:44.330
那么现在我们看一下

01:07:44.330 --> 01:07:45.370
如果说我们这里随便写个

01:07:45.370 --> 01:07:46.730
帐号密码点击

01:07:50.490 --> 01:07:51.050
拿错了

01:07:51.050 --> 01:07:52.090
是不是z

01:07:52.090 --> 01:07:55.460
z

01:07:55.460 --> 01:07:56.900
好这里随便写个帐号密码

01:07:56.900 --> 01:07:58.100
你看是不是得到辣

01:07:58.180 --> 01:07:58.980
表示登录失败

01:07:58.980 --> 01:07:59.380
对不对

01:07:59.380 --> 01:08:00.340
表示登录失败

01:08:00.340 --> 01:08:01.380
这里能我们比较说

01:08:01.380 --> 01:08:01.860
写上一个

01:08:01.860 --> 01:08:04.020
儿的命123123点击登录

01:08:04.020 --> 01:08:04.740
所以得到一个

01:08:06.340 --> 01:08:07.220
登录成功

01:08:07.220 --> 01:08:07.620
对不对

01:08:07.620 --> 01:08:08.660
所以得到一个登录成功

01:08:09.380 --> 01:08:09.940
没问题吧

01:08:10.580 --> 01:08:11.860
他得到这么一个登录成功

01:08:13.060 --> 01:08:13.460
好吧

01:08:14.660 --> 01:08:14.980
你看

01:08:15.780 --> 01:08:16.260
那么这里的

01:08:16.260 --> 01:08:17.620
当然我就可以判断

01:08:17.620 --> 01:08:18.580
这个东西到底是啥

01:08:18.580 --> 01:08:19.860
是不是在进行处理的

01:08:19.860 --> 01:08:20.500
对吧

01:08:20.500 --> 01:08:21.220
要不要跳转页面

01:08:21.220 --> 01:08:22.260
跳转页面我是不是也讲过

01:08:22.260 --> 01:08:23.700
用代码的跳转页面也讲过

01:08:25.060 --> 01:08:26.500
好那么接下来的问题

01:08:26.500 --> 01:08:27.380
还不在这了

01:08:29.060 --> 01:08:30.180
接下来有大嘴问题了

01:08:32.550 --> 01:08:33.270
什么问题呢

01:08:34.630 --> 01:08:36.550
现在的登录状态

01:08:36.550 --> 01:08:39.430
有可能很多地方都要使用

01:08:40.710 --> 01:08:42.870
登录状态可能很多地方都要使用

01:08:43.510 --> 01:08:44.150
比方说这

01:08:45.670 --> 01:08:47.350
这里是不是要获取当下的登录状态

01:08:47.990 --> 01:08:49.270
好那么我们现在研究一个

01:08:50.150 --> 01:08:51.910
这个非常棘手的问题

01:08:53.270 --> 01:08:54.470
这个玩意注意听

01:08:55.350 --> 01:08:56.390
这里一定要注意听

01:08:56.390 --> 01:08:57.830
5U里边最难的地方来了

01:09:00.700 --> 01:09:01.580
一定要注意听

01:09:02.540 --> 01:09:03.820
这是不是一个组件

01:09:04.540 --> 01:09:05.020
对吧

01:09:05.020 --> 01:09:05.820
这是个组件吗

01:09:05.820 --> 01:09:06.140
对不对

01:09:06.940 --> 01:09:09.420
好那么这个地方是不是这个组件的显示

01:09:09.420 --> 01:09:10.220
显示的内容

01:09:10.780 --> 01:09:12.620
这个显示内容我直接可以copy过来

01:09:12.620 --> 01:09:13.660
它其实就是

01:09:13.660 --> 01:09:15.020
其实就是一段ATM代码

01:09:16.860 --> 01:09:17.580
一段ATM代码

01:09:18.060 --> 01:09:19.100
它是这样子的

01:09:19.100 --> 01:09:19.980
它是这样子的

01:09:21.340 --> 01:09:22.060
给大家看一下

01:09:22.060 --> 01:09:23.020
它代码是这样子的

01:09:23.420 --> 01:09:24.460
在Head组件里边

01:09:24.460 --> 01:09:25.100
Head组件里边

01:09:25.100 --> 01:09:26.140
我们把它稍微改造一下

01:09:26.140 --> 01:09:27.020
Head组件里边

01:09:27.660 --> 01:09:29.180
我们把这个地方放到哪呢

01:09:29.180 --> 01:09:30.220
放到一个DIV

01:09:30.220 --> 01:09:31.100
内名为Left

01:09:31.660 --> 01:09:32.300
放到这里边

01:09:33.100 --> 01:09:33.660
靠左

01:09:33.660 --> 01:09:35.340
我们都是写好的这个内容式

01:09:35.340 --> 01:09:36.300
都是写好的

01:09:36.300 --> 01:09:37.500
然后下面一个DIV

01:09:37.500 --> 01:09:38.300
内名为Right

01:09:39.820 --> 01:09:40.300
写好的

01:09:40.300 --> 01:09:40.940
都是写好的

01:09:41.500 --> 01:09:42.620
这里不能用class name

01:09:42.620 --> 01:09:43.260
用class

01:09:45.020 --> 01:09:46.620
好那么这里边有个span

01:09:46.620 --> 01:09:47.740
就这里显示的是

01:09:48.700 --> 01:09:49.980
当前登录

01:09:51.340 --> 01:09:52.220
登录的用户

01:09:52.780 --> 01:09:53.500
好下面一个按钮

01:09:54.380 --> 01:09:55.020
退出登录

01:09:56.380 --> 01:09:57.260
退出登录

01:09:57.260 --> 01:09:57.660
看一下啊

01:09:59.100 --> 01:10:00.140
这是实现效果对吧

01:10:00.140 --> 01:10:01.180
这是实现效果

01:10:01.180 --> 01:10:03.020
那么我们在这个组件里边

01:10:03.020 --> 01:10:04.460
是不是要用到这个东西

01:10:04.460 --> 01:10:05.420
那么这里填啥

01:10:06.460 --> 01:10:07.420
首先第一个问题

01:10:08.700 --> 01:10:09.660
第一个问题

01:10:09.660 --> 01:10:10.540
这个组件

01:10:11.260 --> 01:10:12.460
它是不是不知道填啥

01:10:13.100 --> 01:10:13.420
对不对

01:10:13.420 --> 01:10:15.020
它不知道这里登录的用户是啥

01:10:15.020 --> 01:10:16.860
因为登入功能又不是我做的

01:10:16.860 --> 01:10:17.900
我又被说登入功能

01:10:17.900 --> 01:10:19.100
我咋知道这里要填啥呢

01:10:19.900 --> 01:10:21.580
那么是不是要应该用属性

01:10:22.380 --> 01:10:23.500
咱们来看一下这个问题啊

01:10:32.570 --> 01:10:34.250
咱们的组件结构是这样的结构

01:10:36.090 --> 01:10:36.810
App组件

01:10:37.450 --> 01:10:39.530
App组件下面有个什么组件呢

01:10:39.530 --> 01:10:41.450
比方说我们现在是在首业对吧

01:10:42.410 --> 01:10:44.090
App组件下面有一个Header组件

01:10:44.650 --> 01:10:45.610
有两个组件组成

01:10:46.010 --> 01:10:46.730
一个是Header

01:10:47.210 --> 01:10:50.170
比方说我们目前在电影业

01:10:50.170 --> 01:10:50.810
电影业

01:10:51.690 --> 01:10:52.410
一个是Header

01:10:52.410 --> 01:10:53.370
一个是Movie Nest

01:10:53.370 --> 01:10:54.490
是不是有这两个组件

01:10:54.490 --> 01:10:55.050
对不对

01:10:55.050 --> 01:10:56.010
有这两个组件

01:10:56.010 --> 01:10:58.330
App下面还有可能还有别的组件

01:10:58.330 --> 01:10:58.970
比方说Logging

01:10:59.450 --> 01:10:59.770
登录

01:11:00.970 --> 01:11:02.650
Logging是不是也是在这里

01:11:02.650 --> 01:11:03.050
对不对

01:11:03.050 --> 01:11:04.570
好那么现在的问题

01:11:04.570 --> 01:11:05.370
在哪呢

01:11:05.450 --> 01:11:07.290
问题在于Header组件

01:11:07.930 --> 01:11:08.730
Header这个组件

01:11:08.730 --> 01:11:10.730
它要显示当前登录的用户

01:11:11.130 --> 01:11:12.410
它没有这个数据

01:11:12.410 --> 01:11:13.610
没有这个数据怎么办

01:11:13.610 --> 01:11:14.490
是不是需要

01:11:14.490 --> 01:11:15.610
它需要一个属性啊

01:11:16.330 --> 01:11:18.010
它需要一个属性给我

01:11:18.010 --> 01:11:19.050
比方说该取个名字

01:11:19.050 --> 01:11:21.690
这个属性的名字叫做Logging優点吧

01:11:21.690 --> 01:11:22.810
Logging優点

01:11:22.810 --> 01:11:24.970
是不是得需要一个属性啊

01:11:26.970 --> 01:11:28.490
它得通过一个属性给它

01:11:28.490 --> 01:11:28.810
对吧

01:11:30.090 --> 01:11:31.770
但是App里边

01:11:31.770 --> 01:11:33.210
它是不是得把这个属性

01:11:33.210 --> 01:11:34.490
因为App在使用这个组件

01:11:34.490 --> 01:11:35.210
对吧

01:11:35.290 --> 01:11:36.970
在App里边是不是在使用这个组件

01:11:36.970 --> 01:11:37.930
你看一下

01:11:37.930 --> 01:11:39.450
App里边是不是在使用Header

01:11:39.450 --> 01:11:40.650
如果它写了这个属性

01:11:40.650 --> 01:11:42.250
那是不是得传给它

01:11:42.250 --> 01:11:42.810
对不对

01:11:42.810 --> 01:11:44.410
是不是得传给它

01:11:44.410 --> 01:11:45.370
是不是得传给它

01:11:45.370 --> 01:11:46.970
是不是在Header里边传给它

01:11:46.970 --> 01:11:49.210
在App里边是在App里边

01:11:49.210 --> 01:11:51.130
是不是得把这个属性传给它

01:11:51.130 --> 01:11:52.650
但是App里边有这个数据吗

01:11:52.650 --> 01:11:53.770
是不是也没有

01:11:53.770 --> 01:11:54.970
这个数据是谁的

01:11:54.970 --> 01:11:56.330
是不是Logging这个组件的

01:11:57.370 --> 01:11:57.690
对吧

01:11:57.690 --> 01:11:58.890
是不是Logging这个组件的

01:12:00.010 --> 01:12:01.530
我们在Logging这个组件里边

01:12:01.530 --> 01:12:02.330
它有这个数据

01:12:03.450 --> 01:12:04.330
我们换个圈圈嘛

01:12:05.210 --> 01:12:06.170
给它设置为红色

01:12:06.170 --> 01:12:08.090
我们用红色来表示有这个数据

01:12:08.090 --> 01:12:09.050
我们的数据在哪里

01:12:09.930 --> 01:12:11.370
但是这个地方能把

01:12:11.370 --> 01:12:12.490
它就是这个Header组件

01:12:12.490 --> 01:12:14.170
能够获取到这个东西的数据

01:12:14.170 --> 01:12:15.370
肯定获取不到

01:12:15.370 --> 01:12:16.810
因为数据只有两个来源

01:12:16.810 --> 01:12:17.050
对吧

01:12:17.050 --> 01:12:18.490
目前数据只有两个来源

01:12:18.490 --> 01:12:19.610
一个是来自Windows

01:12:19.610 --> 01:12:20.730
一个是来自于属性

01:12:20.730 --> 01:12:22.010
一个来自于自己的状态

01:12:22.010 --> 01:12:23.450
它自己肯定没有这样的状态

01:12:24.170 --> 01:12:25.690
那么它只能来自于属性

01:12:25.690 --> 01:12:27.210
属性它又没法传过来

01:12:27.210 --> 01:12:29.050
是不是只能副组件传过来

01:12:29.050 --> 01:12:30.410
那这个时候怎么办呢

01:12:30.410 --> 01:12:31.850
是不是出了一些问题

01:12:31.850 --> 01:12:32.570
对吧

01:12:32.570 --> 01:12:33.450
是不是出了一些问题

01:12:34.410 --> 01:12:36.490
那么这个时候怎么办呢

01:12:36.490 --> 01:12:38.490
有一种最简单的办法

01:12:38.490 --> 01:12:40.730
就叫做状态提升

01:12:41.610 --> 01:12:43.610
注意听到这里是5U里面最难的

01:12:43.610 --> 01:12:45.610
如果说你这一块听不懂的话

01:12:45.610 --> 01:12:47.050
那接下来后边

01:12:47.050 --> 01:12:48.490
我们后边讲的这个就是5UX

01:12:48.490 --> 01:12:49.610
所有的东西都听不懂了

01:12:49.610 --> 01:12:51.610
有些东西叫做状态提升

01:12:51.610 --> 01:12:53.610
因为现在这个数据过不来

01:12:53.610 --> 01:12:54.490
这个东西过不来

01:12:54.490 --> 01:12:55.610
还有障碍

01:12:55.610 --> 01:12:56.890
因为login这个组件

01:12:56.890 --> 01:12:58.490
它并没有使用Header

01:12:58.490 --> 01:13:00.490
谁在使用这个组件

01:13:00.490 --> 01:13:01.450
谁就给它传进数据

01:13:01.450 --> 01:13:02.010
对吧

01:13:02.490 --> 01:13:03.450
由于login这个组件

01:13:03.450 --> 01:13:05.050
是不是没有使用Header

01:13:05.050 --> 01:13:06.010
对不对

01:13:06.010 --> 01:13:07.210
因此呢

01:13:07.210 --> 01:13:09.130
这个数据过不来

01:13:09.130 --> 01:13:10.090
拿不到这个数据

01:13:10.090 --> 01:13:10.890
它有没有登录

01:13:10.890 --> 01:13:12.250
当时登录用的名字是啥

01:13:12.250 --> 01:13:13.450
拿不到这个数据

01:13:13.450 --> 01:13:14.810
明白这个意思吗

01:13:14.810 --> 01:13:16.250
所以说呢

01:13:16.250 --> 01:13:17.850
现在我们要做这么一件事

01:13:17.850 --> 01:13:19.370
叫做状态提升

01:13:19.370 --> 01:13:21.130
我们把这个红色叫做状态

01:13:21.130 --> 01:13:22.890
这个黄色表示属性

01:13:22.890 --> 01:13:24.570
我们把这个状态提到哪呢

01:13:24.570 --> 01:13:26.410
提到App里边

01:13:26.410 --> 01:13:28.650
提到App里边

01:13:28.650 --> 01:13:30.090
那么提到App里边

01:13:30.170 --> 01:13:32.330
由于这个状态在App里边

01:13:32.330 --> 01:13:33.290
那么这个App里边

01:13:33.290 --> 01:13:36.010
是不是把这个数据可以传过去了

01:13:36.010 --> 01:13:37.130
是不是可以传过去了

01:13:37.130 --> 01:13:38.570
这个数据

01:13:38.570 --> 01:13:39.850
你不是要登录

01:13:39.850 --> 01:13:40.810
登录的用户吗

01:13:40.810 --> 01:13:42.090
我传给你

01:13:42.090 --> 01:13:43.930
我就把这个数据传给你

01:13:43.930 --> 01:13:45.210
这个没问题吧

01:13:45.210 --> 01:13:46.650
我把我的状态的数据

01:13:46.650 --> 01:13:48.570
传给你作为属性传给你

01:13:48.570 --> 01:13:49.530
是不是没问题

01:13:49.530 --> 01:13:51.450
那你就会正常显示的对吧

01:13:51.450 --> 01:13:52.330
但是这个数据

01:13:52.330 --> 01:13:53.370
它是不是有可能会变化

01:13:53.370 --> 01:13:54.970
比方说当注销了

01:13:54.970 --> 01:13:56.570
注销了是不是会变化

01:13:56.570 --> 01:13:57.210
还有什么呢

01:13:57.210 --> 01:13:58.170
还有登录成功了

01:13:58.170 --> 01:14:00.010
这个数据是不是也会变化

01:14:00.330 --> 01:14:01.370
那么这个数据

01:14:01.370 --> 01:14:02.810
是不是要logging这个组件

01:14:02.810 --> 01:14:04.490
才能让那个数据发生变化

01:14:04.490 --> 01:14:05.690
那么这个组件干嘛呢

01:14:05.690 --> 01:14:06.730
扔出视线

01:14:08.010 --> 01:14:10.250
它不去

01:14:10.250 --> 01:14:11.770
它没有这个状态了

01:14:11.770 --> 01:14:13.690
状态不再属于这个logging组件了

01:14:13.690 --> 01:14:14.490
它做什么呢

01:14:14.490 --> 01:14:15.370
扔出状态

01:14:15.370 --> 01:14:16.730
就是扔出视线

01:14:16.730 --> 01:14:18.570
在这里抛出视线

01:14:20.090 --> 01:14:22.010
就跟我们之前出了个微模的

01:14:22.010 --> 01:14:23.930
怎么注册视线是一样的

01:14:23.930 --> 01:14:26.490
就说App在使用这个logging组件

01:14:26.490 --> 01:14:26.890
对吧

01:14:26.890 --> 01:14:28.730
那么是不是可以注册视线

01:14:28.890 --> 01:14:30.490
当它事件发生的时候

01:14:30.490 --> 01:14:32.010
比方它登录成功引发一个事件

01:14:32.010 --> 01:14:33.610
登录失败引发一个事件

01:14:33.610 --> 01:14:36.250
当登录成功之后

01:14:36.250 --> 01:14:38.250
我是不可以把这个数据状态改了

01:14:38.250 --> 01:14:39.050
那一改的话

01:14:39.050 --> 01:14:40.090
是不是它又接受到响应了

01:14:40.090 --> 01:14:41.130
因为响应是嘛

01:14:41.130 --> 01:14:41.610
它一改

01:14:41.610 --> 01:14:42.570
它的状态发生变化

01:14:42.570 --> 01:14:44.090
它是不是要重新渲染

01:14:44.090 --> 01:14:44.970
它一重新渲染

01:14:44.970 --> 01:14:46.490
导致到它的属性发生变化

01:14:46.490 --> 01:14:47.930
是不是它也重新渲染了

01:14:47.930 --> 01:14:48.250
对吧

01:14:48.250 --> 01:14:50.490
那它自然而然继续利用了新的状态了

01:14:52.650 --> 01:14:55.210
如果说你没有学习过更多的新知识

01:14:55.290 --> 01:14:58.650
那么目前只能是使用这种方案

01:14:59.690 --> 01:15:01.530
组件之间通信传遞数据

01:15:01.530 --> 01:15:02.890
目前只能使用这种方案

01:15:03.450 --> 01:15:06.570
实际上组件通信之间通信是有很多种方式的

01:15:06.570 --> 01:15:09.690
目前我们讲了两个最核心的

01:15:09.690 --> 01:15:10.970
一个是通过什么

01:15:10.970 --> 01:15:12.570
一个是通过属性来传遞数据

01:15:12.570 --> 01:15:13.610
一个是通过

01:15:14.730 --> 01:15:16.810
就是事件来传遞数据

01:15:16.810 --> 01:15:17.850
事件

01:15:17.850 --> 01:15:20.090
你看事件是不是可以把数据发送过去

01:15:20.090 --> 01:15:23.290
那么它来改变这个状态

01:15:23.290 --> 01:15:23.770
对吧

01:15:23.770 --> 01:15:24.890
我们去这么两种方式

01:15:25.290 --> 01:15:26.170
其他还有更多的方式

01:15:26.170 --> 01:15:27.290
就是其他方式我们用的少一点

01:15:28.330 --> 01:15:30.410
在我们这两种方式下面

01:15:30.410 --> 01:15:32.090
我们只能这样做状态提升

01:15:32.890 --> 01:15:34.410
你会发现这样状态提升过后

01:15:34.410 --> 01:15:35.610
好像也没啥问题了

01:15:35.610 --> 01:15:36.650
也能解决问题

01:15:36.650 --> 01:15:37.530
但是你想一想

01:15:37.530 --> 01:15:41.130
在一个复杂系统里边

01:15:43.690 --> 01:15:45.530
这些时间可能要共享数据的情况

01:15:45.530 --> 01:15:46.250
是不是可能很多

01:15:46.810 --> 01:15:47.930
是不是可能特别特别多

01:15:47.930 --> 01:15:48.970
就拿这个登录为例

01:15:49.850 --> 01:15:51.050
就拿这个登录为例

01:15:51.050 --> 01:15:52.890
不要说这个组件要跟这个组件共享数据

01:15:52.890 --> 01:15:53.130
对吧

01:15:53.130 --> 01:15:53.930
它改了数据

01:15:53.930 --> 01:15:54.730
它改了这个数据

01:15:54.730 --> 01:15:55.770
它要变化

01:15:55.770 --> 01:15:57.210
就它们两个数据要共享

01:15:58.170 --> 01:15:58.650
怎么办呢

01:15:58.650 --> 01:16:00.010
目前没有办法只能提升

01:16:00.010 --> 01:16:00.890
只能提升

01:16:00.890 --> 01:16:01.450
提到这

01:16:01.450 --> 01:16:02.090
对吧

01:16:02.090 --> 01:16:02.650
只能提升

01:16:03.530 --> 01:16:05.770
那么以后比较组件多了

01:16:05.770 --> 01:16:07.610
比较无非历史里面也要用到这个数据

01:16:07.610 --> 01:16:08.330
是不是又要传递

01:16:09.370 --> 01:16:10.170
又要传递

01:16:10.170 --> 01:16:10.650
对吧

01:16:10.650 --> 01:16:12.490
它又要传递一次

01:16:14.780 --> 01:16:16.220
这个传递的数据会越来越多

01:16:16.220 --> 01:16:16.700
越来越多

01:16:17.500 --> 01:16:18.620
就越来越繁琐

01:16:18.620 --> 01:16:19.260
越来越麻烦

01:16:20.220 --> 01:16:20.620
比方说

01:16:20.620 --> 01:16:22.460
那么这个黑带下面的组件

01:16:22.460 --> 01:16:23.820
比方说它这里还有一个组件

01:16:23.820 --> 01:16:24.380
compo

01:16:24.380 --> 01:16:25.580
它也要用到这个数据

01:16:26.060 --> 01:16:27.420
它自己也没有

01:16:27.420 --> 01:16:27.580
对吧

01:16:27.580 --> 01:16:28.540
它自己也没有这个数据

01:16:28.540 --> 01:16:29.820
它必须要别人传给它

01:16:29.820 --> 01:16:30.540
那怎么办

01:16:30.540 --> 01:16:32.460
App把自己的数据传给Header

01:16:32.460 --> 01:16:34.540
Header再把这个属性的值又传给

01:16:35.500 --> 01:16:37.420
Header把这个属性的值又传给

01:16:37.420 --> 01:16:37.980
compo

01:16:37.980 --> 01:16:38.220
对吧

01:16:38.220 --> 01:16:39.420
所以一层一层传下去

01:16:39.420 --> 01:16:41.020
如果说它里面还有组件

01:16:41.020 --> 01:16:41.740
又要用到这个数据

01:16:41.740 --> 01:16:42.780
是不是一层一层传递

01:16:45.020 --> 01:16:46.140
极其的繁琐

01:16:47.020 --> 01:16:47.820
是不是极其的繁琐

01:16:52.940 --> 01:16:53.580
有什么问题吗

01:16:57.610 --> 01:16:58.570
是不是极其的繁琐了

01:16:58.570 --> 01:16:58.970
这样子

01:16:59.930 --> 01:17:00.570
好

01:17:00.570 --> 01:17:02.250
那么这还是只是一个数据

01:17:02.250 --> 01:17:04.650
还是只是当前登录的用户的数据

01:17:04.650 --> 01:17:07.130
那如果说还有别的数据也要共享

01:17:07.130 --> 01:17:08.730
比方说我们页面中有很多地方

01:17:08.730 --> 01:17:10.090
都要显示一个电影列表

01:17:12.010 --> 01:17:13.690
这个数据我办反复获取

01:17:13.690 --> 01:17:15.690
一获获取一个反复获取

01:17:15.690 --> 01:17:16.490
没什么意义

01:17:16.490 --> 01:17:17.610
它们都是共享的

01:17:17.610 --> 01:17:18.730
都是共享的

01:17:18.730 --> 01:17:20.250
一个边的其他地方全部跟这边

01:17:20.250 --> 01:17:22.090
像这种情况如果说多了

01:17:22.090 --> 01:17:23.530
那么组件之间共享数据

01:17:23.530 --> 01:17:25.530
是不是全在提升到顶层组件里边

01:17:25.530 --> 01:17:26.810
这是数据1

01:17:26.810 --> 01:17:28.490
这还仅仅是数据1

01:17:29.130 --> 01:17:30.810
还可能会有数据2

01:17:30.810 --> 01:17:33.290
那么这个App的压力是不是太大了

01:17:33.290 --> 01:17:35.050
还可能又会有数据3

01:17:35.050 --> 01:17:36.010
对不对

01:17:36.010 --> 01:17:37.290
所以还有这种情况

01:17:37.290 --> 01:17:38.890
还有数据4

01:17:38.890 --> 01:17:39.610
它快疯掉了

01:17:39.610 --> 01:17:40.330
在后边

01:17:40.330 --> 01:17:42.890
你会发现App的代码本来很简洁的

01:17:42.890 --> 01:17:44.010
后来它为了

01:17:44.010 --> 01:17:45.130
为了解决这样的问题

01:17:45.130 --> 01:17:46.410
它到处是一起共享数据

01:17:47.450 --> 01:17:50.650
因此当这种情况发生的多了

01:17:50.650 --> 01:17:54.890
五六这个框架就已经

01:17:54.890 --> 01:17:56.890
处理起来就已经比较棘手了

01:17:56.970 --> 01:17:58.890
比如我们这里还要解决一个数据的问题

01:17:58.890 --> 01:18:03.990
现在开始要影像五六X了

01:18:03.990 --> 01:18:04.550
什么问题呢

01:18:06.550 --> 01:18:06.870
下面

01:18:08.550 --> 01:18:12.970
影像五六X

01:18:12.970 --> 01:18:14.890
五六X要解决什么问题呢

01:18:14.890 --> 01:18:19.770
用于解决大量的复杂的

01:18:22.250 --> 01:18:24.890
共享数据问题

01:18:27.610 --> 01:18:30.490
组件间共享数据的问题

01:18:31.530 --> 01:18:32.970
所以说你首先要知道

01:18:32.970 --> 01:18:35.050
五六X它出现的原因

01:18:35.050 --> 01:18:36.010
它的作用

01:18:36.010 --> 01:18:37.930
你才能很好地去使用它

01:18:37.930 --> 01:18:40.010
不是说你拿到一个小的系统

01:18:40.010 --> 01:18:41.770
就去用五六X来解决

01:18:41.770 --> 01:18:43.770
实际上像我们这么小的

01:18:43.770 --> 01:18:45.130
将我们给大家做个案例

01:18:45.130 --> 01:18:46.650
这个案例整理一个系统

01:18:46.650 --> 01:18:48.330
根本就用不到五六X

01:18:48.330 --> 01:18:49.770
你直接就提到五六里面

01:18:49.770 --> 01:18:51.770
提到这个App里面解决就完事了

01:18:51.770 --> 01:18:52.730
就很好就解决了

01:18:52.730 --> 01:18:54.810
根本就用不到五六X

01:18:54.810 --> 01:18:58.010
只有在复杂系统里面才会用到

01:18:58.010 --> 01:18:59.530
这就是为什么很多同学

01:18:59.610 --> 01:19:00.650
解决到五六X里面

01:19:00.650 --> 01:19:02.090
觉得老火的原因

01:19:02.090 --> 01:19:04.330
因为它没有接触过复杂的系统

01:19:04.330 --> 01:19:05.530
它只接触过简单的系统

01:19:05.530 --> 01:19:07.290
而且它都没什么意义

01:19:07.290 --> 01:19:08.250
本来很简单的东西

01:19:08.250 --> 01:19:10.090
怎么搞得反而复杂了

01:19:10.090 --> 01:19:11.930
是因为我们在简单的系统里面

01:19:11.930 --> 01:19:12.650
去用这个东西

01:19:12.650 --> 01:19:15.770
它自然而然就会变得复杂

01:19:15.770 --> 01:19:17.770
因为它是用来解决复杂系统的

01:19:17.770 --> 01:19:20.810
包括五六X的官网也明确告诉你

01:19:20.810 --> 01:19:23.130
这个东西就是用来解决复杂系统的

01:19:23.130 --> 01:19:24.330
大型应用的

01:19:24.330 --> 01:19:25.450
你在小型应用

01:19:25.450 --> 01:19:29.130
微型应用里面根本就用不到这个东西

01:19:29.210 --> 01:19:30.090
所以说

01:19:30.090 --> 01:19:31.130
但是又怎么办呢

01:19:31.130 --> 01:19:33.690
我们上课又不可能专门去讲一个复杂系统

01:19:33.690 --> 01:19:34.970
讲复杂系统我光是给你讲

01:19:34.970 --> 01:19:36.970
需求讲一个月有啥意义呢

01:19:37.930 --> 01:19:40.730
所以说我们也只能用以小见大

01:19:40.730 --> 01:19:42.410
但是我给大家说清楚

01:19:42.410 --> 01:19:47.290
以后你在学的过程中会感觉

01:19:47.290 --> 01:19:48.330
五六X过后

01:19:48.330 --> 01:19:50.810
可能感觉好像反而麻烦了一些了

01:19:50.810 --> 01:19:52.250
会有这种感觉是正常的

01:19:52.250 --> 01:19:54.170
因为你没有接触过复杂系统

01:19:54.170 --> 01:19:58.730
它其实它五六X实际上是降低复杂系统的复杂度的

01:19:58.810 --> 01:20:01.290
但是由于我们目前的系统比较简单

01:20:01.290 --> 01:20:03.850
所以说感觉上没有任何降低反而变得复杂了

01:20:03.850 --> 01:20:06.170
我偏给大家把原因说清楚

01:20:06.170 --> 01:20:08.570
但是我们要监视五六X的知识

01:20:08.570 --> 01:20:10.810
所以说也会在这个系统里面用

01:20:10.810 --> 01:20:12.410
那么我们刚才看到了

01:20:12.410 --> 01:20:14.330
这个地方有个登录的用户

01:20:14.330 --> 01:20:15.450
对吧登录用户

01:20:15.450 --> 01:20:17.530
那么这个东西是不是共享数据

01:20:17.530 --> 01:20:19.770
这个共享数据

01:20:19.770 --> 01:20:22.970
我们就可以把它放到五六X的一边来处理

01:20:22.970 --> 01:20:24.970
因为它就是来处理大量的

01:20:24.970 --> 01:20:28.090
复杂的主经验共享数据的问题

01:20:28.650 --> 01:20:29.850
哪怕在复杂系统里面

01:20:29.850 --> 01:20:33.050
也不是把所有的数据都放到五六X里面

01:20:33.050 --> 01:20:35.050
这也是我发现的一个非常

01:20:36.250 --> 01:20:39.770
哪怕是那个就是

01:20:42.570 --> 01:20:44.970
比较好的院校出生的同学

01:20:44.970 --> 01:20:47.450
我都发现了都会出现这个问题

01:20:47.450 --> 01:20:48.410
他到了公司里面

01:20:48.410 --> 01:20:49.850
啥都往五六X里面放

01:20:51.130 --> 01:20:52.490
表达里面绑定的

01:20:52.490 --> 01:20:54.890
用微墨的绑定的东西他都往里面放

01:20:54.890 --> 01:20:56.490
没必要放的是啥

01:20:56.490 --> 01:20:58.010
放共享数据

01:20:58.010 --> 01:21:00.010
如果说这个数据只被这个组件使用

01:21:00.010 --> 01:21:02.250
它根本不会跟任何组件其他组件共享

01:21:02.250 --> 01:21:03.370
不要往这里边放

01:21:03.370 --> 01:21:03.850
放啥呢

01:21:03.850 --> 01:21:04.890
不要往这里边放

01:21:04.890 --> 01:21:05.610
你看这个是什么

01:21:05.610 --> 01:21:06.810
它放的是共享数据

01:21:11.380 --> 01:21:13.620
需求里觉得讲不掉一个约吗

01:21:13.620 --> 01:21:16.500
一个复杂系统需求随便随便一个约

01:21:17.300 --> 01:21:18.020
随随便便一个约

01:21:20.020 --> 01:21:23.140
所以为什么现在要敏捷开发呢

01:21:23.140 --> 01:21:24.740
只能一次做一点

01:21:24.740 --> 01:21:25.700
一次做一点对吧

01:21:25.700 --> 01:21:27.140
这样子灵活一点

01:21:27.140 --> 01:21:28.020
一次做一点

01:21:28.020 --> 01:21:29.140
不然的话一直动不了手

01:21:29.140 --> 01:21:31.300
不然就像以前在瀑布流开发的时候

01:21:31.300 --> 01:21:33.540
需求讲一个非常非常正常的

01:21:33.540 --> 01:21:35.220
不要说需求讲一个月了

01:21:35.220 --> 01:21:37.780
需求调研都得好久好久

01:21:41.830 --> 01:21:43.510
那么这里再说一点

01:21:43.510 --> 01:21:45.110
它只想解决共享数据

01:21:45.110 --> 01:21:47.510
不要把什么数据往里边扔

01:21:47.510 --> 01:21:49.510
这什么不太好的开发方式

01:21:50.710 --> 01:21:52.150
那它怎么来解决呢

01:21:52.150 --> 01:21:53.670
它的解决方式是这样子

01:21:53.670 --> 01:21:55.430
它提了一个单独的模块出来

01:21:56.470 --> 01:21:58.550
这个模块叫做数据仓库

01:22:00.230 --> 01:22:01.190
叫做数据仓库

01:22:02.310 --> 01:22:03.510
这个仓库

01:22:03.510 --> 01:22:06.070
我们的共享数据全部放到个仓库里边

01:22:07.350 --> 01:22:09.830
咱们这里的共享数据全部放到

01:22:12.650 --> 01:22:13.850
就是这里的共享数据

01:22:17.860 --> 01:22:21.060
这点击至于点成

01:22:21.060 --> 01:22:22.180
扔过了

01:22:25.560 --> 01:22:26.120
切死我了

01:22:27.640 --> 01:22:28.280
你们懂的

01:22:28.280 --> 01:22:28.440
对了

01:22:28.440 --> 01:22:29.000
你们懂的

01:22:29.000 --> 01:22:29.720
你们懂的

01:22:29.720 --> 01:22:31.000
就是它的共享

01:22:31.000 --> 01:22:32.120
这数据全部放到这

01:22:32.120 --> 01:22:33.320
全部放到仓库里边去了

01:22:34.440 --> 01:22:35.480
全部放到仓库里边去了

01:22:37.000 --> 01:22:38.600
然后把这个仓库放到哪呢

01:22:38.600 --> 01:22:39.800
放到五右实力里边去

01:22:40.840 --> 01:22:42.680
把这个仓库放到五右实力里边去

01:22:45.940 --> 01:22:46.660
这个蓝色

01:22:49.540 --> 01:22:50.980
这个什么蓝色

01:22:50.980 --> 01:22:51.300
预设

01:22:52.900 --> 01:22:53.460
这个绿色

01:22:54.820 --> 01:22:56.260
它做了一个数据仓库

01:22:58.420 --> 01:23:00.740
我们的共享数据全部放到数据仓库里边

01:23:01.300 --> 01:23:02.580
全部放到数据仓库里边

01:23:03.300 --> 01:23:04.980
比方说我们要更改数据

01:23:05.140 --> 01:23:07.940
是向数据仓库引发事件去更改数据

01:23:07.940 --> 01:23:08.740
更改的是什么

01:23:08.740 --> 01:23:10.660
更改的是数据仓库里边的数据

01:23:10.660 --> 01:23:13.300
我们分发数据把数据拿过去

01:23:13.300 --> 01:23:14.420
把数据拿下去

01:23:14.420 --> 01:23:16.340
也是从仓库里边拿着数据

01:23:16.340 --> 01:23:19.140
也就是这些组件全部共享数据仓库里边的东西

01:23:19.780 --> 01:23:21.540
每一个组件都可以共享

01:23:21.540 --> 01:23:24.980
保持这个App组件的存进

01:23:24.980 --> 01:23:25.940
保持它的存进

01:23:25.940 --> 01:23:26.900
它不做任何其他事情

01:23:26.900 --> 01:23:27.940
它不管数据了

01:23:27.940 --> 01:23:29.140
专门放一个模块

01:23:29.140 --> 01:23:30.980
数据仓库来管这个数据

01:23:30.980 --> 01:23:32.260
明白这个意思吗

01:23:32.340 --> 01:23:34.660
这就是VUX的最核心的理念

01:23:35.620 --> 01:23:36.740
那么我们怎么来用呢

01:23:36.740 --> 01:23:37.380
这个VUX

01:23:37.940 --> 01:23:39.940
我们在理一步一步来用

01:23:40.500 --> 01:23:41.860
接下来我们要做的事情就是

01:23:41.860 --> 01:23:45.380
把locking user把登录这一块

01:23:45.380 --> 01:23:48.420
登录的用户放到仓库里边去

01:23:48.420 --> 01:23:50.020
咱们把它放到仓库里边去

01:23:50.020 --> 01:23:51.140
好 看一下怎么放

01:23:51.140 --> 01:23:52.580
首先我们在工程结构上

01:23:52.580 --> 01:23:54.580
首先要把VUX引用进来

01:23:56.340 --> 01:23:58.180
我们这里VUX单码已经准备好了

01:23:58.180 --> 01:23:59.380
复制单贴过来就行了

01:23:59.380 --> 01:24:00.820
跟之前VU Router是一样的

01:24:02.420 --> 01:24:03.540
把VUX三清过来

01:24:03.540 --> 01:24:04.980
然后我们在页面中

01:24:04.980 --> 01:24:06.420
是不是要引用这个VUX

01:24:06.420 --> 01:24:07.060
在哪里引用呢

01:24:07.060 --> 01:24:08.100
我们就在这儿吧

01:24:08.100 --> 01:24:09.380
在我们自己的代码之前就行了

01:24:10.180 --> 01:24:10.900
要写个

01:24:10.900 --> 01:24:12.500
SRC VUX

01:24:12.500 --> 01:24:13.540
叫解释

01:24:15.220 --> 01:24:15.620
就这个

01:24:16.580 --> 01:24:18.180
好 那么接下来我们凭是怎么用呢

01:24:18.180 --> 01:24:19.140
通常情况下呢

01:24:19.140 --> 01:24:22.260
我们一般会在这个SRC里边

01:24:22.260 --> 01:24:23.300
建一个文件夹

01:24:23.300 --> 01:24:24.020
叫做Store

01:24:24.020 --> 01:24:25.140
Store什么意思

01:24:25.140 --> 01:24:26.020
什么意思

01:24:26.020 --> 01:24:28.100
是不是组建仓库的意思

01:24:29.700 --> 01:24:30.820
对吧 是不是仓库的意思

01:24:31.300 --> 01:24:32.820
好 那么在这里边来写上一个

01:24:32.820 --> 01:24:33.780
index的解释

01:24:33.780 --> 01:24:35.220
咱们先写个简单的

01:24:35.220 --> 01:24:36.420
先写这么一个简单的

01:24:37.380 --> 01:24:38.580
index的解释

01:24:38.580 --> 01:24:39.860
现在9点20了

01:24:40.580 --> 01:24:41.220
要不然这样子

01:24:42.340 --> 01:24:43.220
要不然这样子

01:24:43.220 --> 01:24:45.700
我们休息个两分钟好吧

01:24:45.700 --> 01:24:47.380
我去趟洗手间

01:24:53.320 --> 01:24:53.880
休息两分钟

01:24:57.960 --> 01:24:58.440
喝点水

01:24:58.440 --> 01:25:00.040
水也喝完了

01:25:00.040 --> 01:25:01.160
咱们放手哥吧

01:25:07.350 --> 01:25:08.070
他还更新

01:25:09.910 --> 01:25:10.870
他更啥呀

01:25:11.590 --> 01:25:12.630
我去吧

01:29:28.230 --> 01:29:29.590
说了怎么这么卡的

01:29:34.390 --> 01:29:35.910
说了现在年龄大了

01:29:36.470 --> 01:29:38.070
不像以前那么中二了

01:29:38.630 --> 01:29:40.310
但是每次看到这些片段

01:29:40.950 --> 01:29:42.150
还是忍不住喊一句

01:29:42.150 --> 01:29:43.030
富高多

01:29:43.030 --> 01:29:43.430
对吧

01:29:54.600 --> 01:29:55.560
来吧 继续啊

01:29:57.080 --> 01:29:58.520
我们刚才说到这个VUX

01:30:02.740 --> 01:30:05.700
这里边我们在创建了一个index的解释

01:30:06.260 --> 01:30:07.940
这个代码里边写啥呢

01:30:07.940 --> 01:30:10.100
写的就是数据仓库

01:30:11.220 --> 01:30:11.940
并且呢

01:30:11.940 --> 01:30:13.300
因为我们这里分模块的

01:30:13.300 --> 01:30:15.380
我们把它写到了一个单独的文件

01:30:15.380 --> 01:30:18.660
跟这个就是Rotor这里一样

01:30:18.660 --> 01:30:20.500
我们创建好了仓库之后

01:30:24.550 --> 01:30:25.270
要把导出

01:30:25.830 --> 01:30:26.550
然后我们这里的东西

01:30:27.350 --> 01:30:28.150
会导出一个东西

01:30:29.910 --> 01:30:30.550
导出的东西

01:30:30.550 --> 01:30:32.310
我们在index里边要用

01:30:32.470 --> 01:30:33.430
怎么用呢

01:30:33.430 --> 01:30:34.790
看着这样子用的

01:30:34.790 --> 01:30:35.350
import

01:30:37.620 --> 01:30:38.580
导入这个什么

01:30:38.580 --> 01:30:39.780
我们的仓库

01:30:39.780 --> 01:30:40.100
store

01:30:40.740 --> 01:30:41.060
from

01:30:42.260 --> 01:30:42.660
store

01:30:43.300 --> 01:30:43.700
写钢

01:30:43.700 --> 01:30:44.660
因这个事儿就要解释

01:30:46.180 --> 01:30:46.740
导入这个

01:30:47.220 --> 01:30:48.180
然后配置

01:30:48.180 --> 01:30:49.460
把这个store配置在这

01:30:52.060 --> 01:30:52.940
我讲慢一点

01:30:52.940 --> 01:30:54.220
卡的话我讲慢一点

01:30:54.220 --> 01:30:57.900
后边大家看录播的话

01:30:57.900 --> 01:30:58.700
就没有那么卡了

01:31:00.920 --> 01:31:01.880
哎呀 我又很抽仓了

01:31:01.880 --> 01:31:03.080
我真的很抽仓了

01:31:04.760 --> 01:31:05.400
怎么办呢

01:31:05.400 --> 01:31:06.440
我也没办法

01:31:06.440 --> 01:31:07.160
我也没办法

01:31:08.200 --> 01:31:09.640
好 我们把这个仓库放到这

01:31:09.640 --> 01:31:10.200
放到这

01:31:11.160 --> 01:31:12.120
那么这里呢

01:31:12.120 --> 01:31:13.480
我们配置好了这个路由

01:31:14.440 --> 01:31:17.640
那么这个路由已经配置好了

01:31:17.640 --> 01:31:19.000
那么这个仓库的配置方式

01:31:19.000 --> 01:31:19.960
跟路由是一样的

01:31:19.960 --> 01:31:21.160
这说明了啥

01:31:21.160 --> 01:31:22.520
说明了你这里配置的时候

01:31:22.520 --> 01:31:24.840
是不是属性名必须是store

01:31:25.640 --> 01:31:25.960
对吧

01:31:27.080 --> 01:31:28.120
所以必须是store

01:31:29.000 --> 01:31:30.520
好 那么也就说你这里写个属性

01:31:30.520 --> 01:31:31.480
store是不是不行

01:31:32.040 --> 01:31:33.160
是这样子肯定是不行

01:31:33.160 --> 01:31:34.760
所以说之前有同学

01:31:34.760 --> 01:31:36.120
在工作中遇到这样的问题

01:31:36.280 --> 01:31:37.960
我说这不是最基本的吗

01:31:37.960 --> 01:31:38.840
你怎么没搞清楚呢

01:31:39.400 --> 01:31:40.760
这里属性名必须是store

01:31:42.760 --> 01:31:43.800
好 那么这接下来

01:31:44.440 --> 01:31:45.640
我们一会再聊别的

01:31:45.640 --> 01:31:46.360
咱们先上课

01:31:48.120 --> 01:31:49.720
好 那么这个store配置好了

01:31:49.720 --> 01:31:51.160
那么关键又回到这来

01:31:51.160 --> 01:31:53.160
这里怎么来导出一个仓库呢

01:31:53.160 --> 01:31:54.040
仓库怎么来呢

01:31:54.680 --> 01:31:55.800
怎么来创建一个仓库

01:31:55.800 --> 01:31:57.640
仓库的创建非常简单

01:31:57.640 --> 01:31:58.760
怎么创建呢

01:31:58.760 --> 01:32:00.920
通过这个代码

01:32:01.480 --> 01:32:04.200
new will x的store

01:32:04.520 --> 01:32:06.680
这里写配置对象

01:32:07.560 --> 01:32:11.240
通过这个来创建仓库

01:32:11.240 --> 01:32:15.400
通常一个五幼应用

01:32:15.400 --> 01:32:19.480
对应一个仓库

01:32:19.480 --> 01:32:22.360
一个五幼应用只对应一个仓库

01:32:22.360 --> 01:32:23.560
因为仓库只能有一个

01:32:23.560 --> 01:32:25.160
就像那个图例表画的一样

01:32:25.160 --> 01:32:28.040
我们把这个这个东西关了

01:32:28.040 --> 01:32:30.040
就像这个数据仓库

01:32:30.040 --> 01:32:31.000
这里是不是只画了一个

01:32:31.000 --> 01:32:32.200
对吧 只有一个数据仓库

01:32:32.200 --> 01:32:33.160
一个五幼应用

01:32:33.240 --> 01:32:34.360
它只有一个数据仓库

01:32:35.320 --> 01:32:36.760
那么我们就在这里来

01:32:36.760 --> 01:32:38.440
比方我们在仓库这里

01:32:38.440 --> 01:32:39.720
仓库这里我尽量讲慢一点

01:32:39.720 --> 01:32:41.320
因为这里会越到后面越复杂

01:32:41.960 --> 01:32:43.640
我们这里怎么来创建仓库

01:32:43.640 --> 01:32:45.560
所以六一个五幼x

01:32:45.560 --> 01:32:46.600
这个五幼x哪来的

01:32:46.600 --> 01:32:48.360
就是我们这个介石文件

01:32:48.360 --> 01:32:50.200
跟里面给我们提供了一个仓库

01:32:50.200 --> 01:32:52.040
五幼x第二Stone

01:32:52.840 --> 01:32:54.360
这Stone是它里面的构造函数

01:32:54.360 --> 01:32:55.560
你可以这样理解

01:32:55.560 --> 01:32:57.160
一个五幼x是一个对象

01:32:57.160 --> 01:32:58.360
对吧 五幼x是一个对象

01:32:58.360 --> 01:33:00.040
它里面有一个Stone

01:33:00.040 --> 01:33:01.560
是一个什么是一个构造函数

01:33:01.560 --> 01:33:02.360
你可以这样理解

01:33:03.400 --> 01:33:04.360
你可以这样理解

01:33:04.920 --> 01:33:06.680
那么这里边传的是什么呢

01:33:06.680 --> 01:33:08.360
传的就是一个配置对象

01:33:09.480 --> 01:33:10.200
配置对象

01:33:10.200 --> 01:33:12.520
那么现在重点是在这个配置对象里边

01:33:12.520 --> 01:33:14.120
有什么东西可以配置

01:33:15.800 --> 01:33:19.880
配置对象中需要可以配置

01:33:21.000 --> 01:33:21.720
下面这些东西

01:33:22.280 --> 01:33:23.080
下面的这一种

01:33:24.200 --> 01:33:25.480
一个个说 一个个说

01:33:25.480 --> 01:33:26.360
第一个State

01:33:27.560 --> 01:33:28.840
State是什么意思呢

01:33:28.840 --> 01:33:32.840
State表示的是仓库的默认状态

01:33:33.720 --> 01:33:35.480
仓库的默认状态

01:33:35.480 --> 01:33:37.000
就这里边不是要写数据吗

01:33:37.000 --> 01:33:38.120
对吧 有很多很多的数据

01:33:38.120 --> 01:33:39.880
那么这一有哪些数据呢

01:33:40.760 --> 01:33:42.200
你就可以配置到这个State里边

01:33:43.000 --> 01:33:43.880
这里面配置State

01:33:44.600 --> 01:33:45.400
默认状态

01:33:45.400 --> 01:33:46.920
然后这个状态里边有哪些呢

01:33:46.920 --> 01:33:49.160
其中有一个叫做Login user

01:33:49.160 --> 01:33:50.360
其中有一个这么一个东西

01:33:50.840 --> 01:33:51.400
这么一个东西

01:33:52.040 --> 01:33:53.000
这个东西是啥呢

01:33:53.800 --> 01:33:57.080
这个东西它表示的是

01:33:59.000 --> 01:34:00.840
我这里我这里突然想起个问题

01:34:00.840 --> 01:34:02.120
我这里顺便写一下

01:34:02.200 --> 01:34:03.240
这突然想起个问题

01:34:03.720 --> 01:34:06.120
我们这里用一个State

01:34:06.120 --> 01:34:07.800
这东西跟你没什么关系

01:34:07.800 --> 01:34:08.440
没什么关系

01:34:08.920 --> 01:34:10.360
我就突然想起这么一个问题

01:34:10.360 --> 01:34:10.840
一秒钟

01:34:12.600 --> 01:34:14.600
把这个谋利一下

01:34:14.600 --> 01:34:15.400
需要一段时间

01:34:15.400 --> 01:34:16.520
这东西跟你没关系

01:34:16.520 --> 01:34:17.160
没关系

01:34:17.160 --> 01:34:20.280
根本就把这个东西稍微改一下

01:34:21.000 --> 01:34:23.960
Login有点表示当前登陆的用户

01:34:23.960 --> 01:34:24.440
对吧

01:34:24.440 --> 01:34:25.960
表示当前登陆的用户

01:34:26.760 --> 01:34:28.200
当前登陆的用户里边

01:34:28.200 --> 01:34:29.080
它又是一个对象

01:34:29.080 --> 01:34:30.280
我们这里就这样的配置

01:34:30.280 --> 01:34:31.560
当然这里可以按照

01:34:31.720 --> 01:34:33.320
大家喜好来进行配置

01:34:33.880 --> 01:34:35.480
当前登陆的用户是什么呢

01:34:35.480 --> 01:34:36.920
里边有个Data署项

01:34:37.640 --> 01:34:40.760
Data署项给它设置为

01:34:42.280 --> 01:34:45.640
当前登陆的用户为空

01:34:46.440 --> 01:34:48.120
当前登陆的用户为空

01:34:48.840 --> 01:34:53.320
那么还有一个属性叫EaseLoginForce

01:34:53.320 --> 01:34:55.160
表示什么意思

01:34:55.160 --> 01:34:57.000
当前正在登陆

01:34:57.640 --> 01:34:58.600
当前正在登陆

01:34:58.600 --> 01:34:59.800
这都是状态

01:34:59.800 --> 01:35:00.280
对吧

01:35:00.280 --> 01:35:01.240
有可能我们登陆的时候

01:35:01.240 --> 01:35:02.440
还要显示一个模板

01:35:02.440 --> 01:35:03.400
就是一个盟程

01:35:03.400 --> 01:35:04.440
是不是指数登陆中

01:35:04.440 --> 01:35:04.760
对吧

01:35:04.760 --> 01:35:06.280
登陆中的一个盟程

01:35:06.280 --> 01:35:07.240
夹载中的一个盟程

01:35:08.440 --> 01:35:10.840
EaseLogin表示是否正在登陆

01:35:12.440 --> 01:35:15.320
当然这个好像应该这样子写了

01:35:15.880 --> 01:35:16.840
是不是应该这样子写了

01:35:18.040 --> 01:35:18.840
EaseLogin嘛

01:35:18.840 --> 01:35:19.720
还是用EaseLogin

01:35:21.720 --> 01:35:22.280
能看懂吗

01:35:22.280 --> 01:35:23.000
能不能看懂

01:35:23.000 --> 01:35:24.200
这就是我们整个状态

01:35:24.200 --> 01:35:24.600
对吧

01:35:24.600 --> 01:35:26.360
整个状态里边有个登陆用户

01:35:26.920 --> 01:35:28.360
登陆用户里边有个什么

01:35:28.360 --> 01:35:29.400
有个Data

01:35:29.400 --> 01:35:29.640
对吧

01:35:29.640 --> 01:35:30.920
表示当前登陆的用户

01:35:31.400 --> 01:35:32.440
如果说登陆成功了

01:35:32.440 --> 01:35:33.880
那这里是不是一个对象

01:35:33.880 --> 01:35:34.840
这里就是一个对象

01:35:35.400 --> 01:35:36.280
如果说登陆成功了

01:35:36.280 --> 01:35:37.000
它是不是一个对象

01:35:37.000 --> 01:35:37.960
对象里边有个什么

01:35:37.960 --> 01:35:40.600
一个Login ID

01:35:40.600 --> 01:35:41.720
比方说等于OrderMe

01:35:42.360 --> 01:35:43.880
然后有个Name

01:35:43.880 --> 01:35:44.520
对吧

01:35:44.520 --> 01:35:46.040
等于超级管理员

01:35:46.040 --> 01:35:46.760
是不是登陆成功了

01:35:46.760 --> 01:35:47.880
登陆成功的状态

01:35:47.880 --> 01:35:48.760
对吧

01:35:48.760 --> 01:35:50.040
那么没有登陆的状态

01:35:50.040 --> 01:35:50.840
那就是Hasnow

01:35:51.400 --> 01:35:52.920
那么这里写的是默认值

01:35:53.480 --> 01:35:55.000
仓库的默认状状态

01:35:55.880 --> 01:35:56.760
那么这个仓库里边

01:35:56.760 --> 01:35:57.960
默认就是这一个对象

01:35:57.960 --> 01:35:58.920
一个对象里面有一个属象

01:35:59.640 --> 01:35:59.800
好

01:35:59.800 --> 01:36:01.560
为什么我不直接这样子写呢

01:36:01.560 --> 01:36:02.680
有一些朋友肯定想问

01:36:02.680 --> 01:36:04.120
为什么我不直接这样子写呢

01:36:04.840 --> 01:36:05.960
那么这样子写的话

01:36:05.960 --> 01:36:07.720
你是不是容易跟其他的状态

01:36:07.720 --> 01:36:08.680
造成冲突

01:36:08.680 --> 01:36:10.200
比方说到时候还有电影

01:36:10.920 --> 01:36:12.680
比方说到时候还有电影

01:36:12.680 --> 01:36:14.600
电影的话是不是也有一直楼顶

01:36:14.600 --> 01:36:14.840
对吧

01:36:14.840 --> 01:36:15.880
到时候还有电影

01:36:15.880 --> 01:36:16.920
就不好区分了

01:36:16.920 --> 01:36:18.920
比方说电影的当前页码

01:36:18.920 --> 01:36:19.960
电影的什么

01:36:19.960 --> 01:36:20.760
电影的数据

01:36:20.760 --> 01:36:21.720
是不是有多了一个Data

01:36:21.720 --> 01:36:21.880
对吧

01:36:21.880 --> 01:36:23.000
就终于导致重民

01:36:23.000 --> 01:36:23.960
而且不好区分

01:36:23.960 --> 01:36:25.880
所以说我们再牵套一个对象

01:36:26.360 --> 01:36:27.000
没有意思吧

01:36:27.000 --> 01:36:27.960
再牵套一个对象

01:36:27.960 --> 01:36:28.440
那么比方说

01:36:28.440 --> 01:36:30.120
以后电影的话是不是可以写到这

01:36:30.120 --> 01:36:32.040
无位置是不是可以写到这

01:36:32.040 --> 01:36:32.520
对吧

01:36:32.520 --> 01:36:34.360
无位置Data是一个数组

01:36:34.360 --> 01:36:35.160
是不是可以写到这

01:36:35.160 --> 01:36:36.120
配级1对不对

01:36:37.240 --> 01:36:37.880
没有意思吗

01:36:38.600 --> 01:36:40.200
就整个网站里边

01:36:40.200 --> 01:36:42.360
有哪些共享状态全部写到这

01:36:43.080 --> 01:36:44.040
全部写到这

01:36:44.040 --> 01:36:44.760
就这么个意思

01:36:54.730 --> 01:36:55.530
再说一次

01:36:55.530 --> 01:36:58.490
卡我现在也也也决定不了这个事情

01:36:58.490 --> 01:36:59.690
我也决定不了这个事情

01:37:01.210 --> 01:37:02.810
我反正尽量慢一点讲

01:37:02.810 --> 01:37:03.850
让每个同学都听到

01:37:04.810 --> 01:37:07.290
后边录制的课程里边

01:37:07.290 --> 01:37:08.010
它就不会卡了

01:37:09.930 --> 01:37:11.930
当前就是这个Data

01:37:11.930 --> 01:37:13.530
表示当前登录来登录来用户

01:37:13.530 --> 01:37:14.810
老板这一楼进来表示

01:37:14.810 --> 01:37:15.930
是否正在登录

01:37:15.930 --> 01:37:16.970
好就是State的配置

01:37:16.970 --> 01:37:18.090
这个没问题吧

01:37:18.090 --> 01:37:19.050
默认状态

01:37:19.050 --> 01:37:20.810
这个东西配置就相当于是啥呢

01:37:20.810 --> 01:37:23.210
相当于是你把在主键里边写到的啥

01:37:24.090 --> 01:37:25.770
相当于是在主键里边

01:37:25.770 --> 01:37:28.410
你写的那个Data

01:37:29.610 --> 01:37:30.010
在哪

01:37:30.730 --> 01:37:31.930
相当于在主键里边

01:37:31.930 --> 01:37:32.570
你写的Data

01:37:33.290 --> 01:37:33.850
对吧

01:37:33.850 --> 01:37:34.810
在这

01:37:34.810 --> 01:37:35.930
是否默认状态

01:37:35.930 --> 01:37:36.250
对吧

01:37:36.250 --> 01:37:36.730
默认状态

01:37:36.730 --> 01:37:37.530
相当于是这个

01:37:37.530 --> 01:37:39.290
只不过我们现在把它放到仓库里边了

01:37:39.290 --> 01:37:40.250
这第一个配置

01:37:40.250 --> 01:37:41.850
这个配置是很好理解的

01:37:41.850 --> 01:37:43.130
也非常非常简单

01:37:43.130 --> 01:37:43.850
第二个配置

01:37:44.650 --> 01:37:46.490
状态是不是有可能会变了

01:37:47.290 --> 01:37:48.570
状态是不是有可能会变

01:37:49.130 --> 01:37:49.770
好

01:37:49.770 --> 01:37:51.050
第二个配置就是配置

01:37:51.850 --> 01:37:53.850
状态有哪些变化

01:37:54.490 --> 01:37:55.370
这个配置叫做什么呢

01:37:55.370 --> 01:37:56.330
Mattation

01:37:58.170 --> 01:38:00.090
Mattation这个单词就是变化的意思

01:38:00.090 --> 01:38:01.050
可变的意思

01:38:02.010 --> 01:38:02.890
这个是什么

01:38:02.890 --> 01:38:03.770
配置的是

01:38:04.490 --> 01:38:05.130
状态

01:38:06.250 --> 01:38:07.370
有哪些变化

01:38:08.090 --> 01:38:08.810
哪些变化

01:38:10.410 --> 01:38:10.650
好

01:38:10.650 --> 01:38:11.290
那么

01:38:11.290 --> 01:38:12.330
这里边配置的是什么呢

01:38:12.330 --> 01:38:13.610
它是这样的配置的

01:38:13.610 --> 01:38:14.410
看着啊

01:38:14.410 --> 01:38:15.210
这是State的配置

01:38:15.210 --> 01:38:16.330
状态的配置

01:38:16.330 --> 01:38:17.210
接下来我们来配置这个

01:38:17.690 --> 01:38:18.490
Mattation

01:38:19.610 --> 01:38:20.650
它是一个对象

01:38:20.650 --> 01:38:22.170
它配置为一个对象

01:38:22.170 --> 01:38:22.650
配置

01:38:23.690 --> 01:38:24.650
状态

01:38:24.650 --> 01:38:26.090
有哪些变化

01:38:26.890 --> 01:38:28.490
每一个变化

01:38:28.490 --> 01:38:29.530
是一个函数

01:38:32.100 --> 01:38:33.220
这里开始复杂起来了

01:38:34.420 --> 01:38:36.340
也就是说我们要改变状态

01:38:37.220 --> 01:38:40.420
只能够通过这里的配置函数来改变

01:38:40.420 --> 01:38:41.700
你绝对不能

01:38:42.500 --> 01:38:44.180
使用其他方式来改变状态

01:38:45.220 --> 01:38:46.900
这里有个特别特别重要的一点

01:38:47.620 --> 01:38:49.540
就是Mattation

01:38:51.140 --> 01:38:55.380
是状态变化的唯一原因

01:38:56.740 --> 01:38:58.740
一定要好好地理解这句话

01:38:59.300 --> 01:39:01.140
Mattation是状态发生变化

01:39:01.140 --> 01:39:01.780
的唯一原因

01:39:01.780 --> 01:39:03.140
就是你要改变状态

01:39:03.140 --> 01:39:04.260
你必须要在这里边

01:39:04.980 --> 01:39:06.260
使用这里边的函数

01:39:06.260 --> 01:39:07.940
你必须要调用这里边的函数来改变

01:39:07.940 --> 01:39:09.700
而不能只绝对不能直接改变状态

01:39:10.180 --> 01:39:11.140
绝对不能直接改变

01:39:12.260 --> 01:39:12.900
为什么呢

01:39:12.900 --> 01:39:15.060
它要让状态的发生变化了

01:39:16.100 --> 01:39:17.700
变化的原因唯一

01:39:17.700 --> 01:39:18.900
唯一的好处在于

01:39:18.900 --> 01:39:21.860
如果说将来状态出了问题

01:39:21.860 --> 01:39:23.780
我可以非常好的跟踪

01:39:24.420 --> 01:39:26.500
状态经过了哪些变化出了问题

01:39:26.500 --> 01:39:28.020
是哪一个变化出了问题

01:39:28.660 --> 01:39:30.740
它这样子是主要是为了调试

01:39:31.860 --> 01:39:33.380
其实还有一个点

01:39:33.380 --> 01:39:34.820
是为了单项数据流

01:39:35.460 --> 01:39:37.060
不过你现在不是很好理解

01:39:37.060 --> 01:39:38.420
为什么会因为单项数据流

01:39:39.700 --> 01:39:41.140
要用这种模式

01:39:41.140 --> 01:39:43.140
这个要说来话很长很长

01:39:43.540 --> 01:39:45.060
但是大家现在只需要记住

01:39:46.820 --> 01:39:48.100
你要让状态发生变化

01:39:48.100 --> 01:39:49.300
一定要在这里边写配置

01:39:49.780 --> 01:39:50.820
而不能在其他任何地方

01:39:50.820 --> 01:39:52.420
让状态发生变化

01:39:52.420 --> 01:39:54.260
好那这里边怎么配置呢

01:39:54.260 --> 01:39:55.300
比方说我们这种状态

01:39:55.300 --> 01:39:56.820
是不是有两种情况会改变

01:39:56.820 --> 01:39:58.260
一种情况是改变的

01:39:58.260 --> 01:40:00.260
意思楼顶设置意思楼顶对吧

01:40:00.420 --> 01:40:01.860
好我们这里写这么一个函数

01:40:01.860 --> 01:40:03.780
set意思楼顶

01:40:05.060 --> 01:40:06.980
就是改变这个函数干嘛的

01:40:06.980 --> 01:40:07.540
打个注释

01:40:08.180 --> 01:40:10.100
这是用于改变

01:40:12.020 --> 01:40:16.180
是否正在登陆的状态

01:40:16.980 --> 01:40:18.020
就是改变这个属性

01:40:18.020 --> 01:40:19.140
改变状态里边这个东西

01:40:20.020 --> 01:40:22.180
好那么这个东西怎么改变呢

01:40:23.780 --> 01:40:24.660
它这里边呢

01:40:24.660 --> 01:40:26.020
首先它有第一个函数

01:40:26.660 --> 01:40:27.620
第一个函数

01:40:27.780 --> 01:40:29.060
第一个函数是语言

01:40:29.060 --> 01:40:30.580
就是当前的状态

01:40:31.620 --> 01:40:33.700
我们通常就用set的表示

01:40:33.700 --> 01:40:34.340
这个函数

01:40:35.380 --> 01:40:38.980
参数set表示当前的状态

01:40:39.460 --> 01:40:40.980
它会自动给你传过来

01:40:40.980 --> 01:40:42.420
到时候它会传过来

01:40:42.420 --> 01:40:43.140
它告诉你

01:40:43.140 --> 01:40:44.580
以目前的状态是啥

01:40:44.580 --> 01:40:46.020
它这样子传给你

01:40:46.020 --> 01:40:46.580
明白这个意思吗

01:40:47.620 --> 01:40:48.420
表示当前的状态

01:40:49.220 --> 01:40:51.060
好那么它第二个参数是啥呢

01:40:51.060 --> 01:40:52.740
第二个参数叫做payload

01:40:54.420 --> 01:40:55.300
可有可无

01:40:56.340 --> 01:40:57.220
payload

01:40:57.300 --> 01:40:57.780
可选

01:40:58.260 --> 01:40:58.980
这是可选的

01:40:59.940 --> 01:41:03.220
该参数表示额外的信息

01:41:05.140 --> 01:41:06.100
payload是什么意思

01:41:06.100 --> 01:41:07.060
payload叫做复杂

01:41:08.660 --> 01:41:09.300
叫做复杂

01:41:10.020 --> 01:41:10.660
你以后呢

01:41:10.660 --> 01:41:11.860
你把这东西学清楚了

01:41:11.860 --> 01:41:13.700
对你以后学习rayAggs的

01:41:13.700 --> 01:41:15.700
rayDucks也是非常有帮助的

01:41:16.900 --> 01:41:17.620
它叫做复杂

01:41:17.620 --> 01:41:18.740
复杂就是复加信息

01:41:18.740 --> 01:41:19.620
你可以这样理解

01:41:19.620 --> 01:41:20.820
复带着一些信息

01:41:21.860 --> 01:41:23.300
一个是表示当前状态

01:41:23.300 --> 01:41:25.220
一个是额外的一些信息

01:41:25.220 --> 01:41:26.500
好那么现在呢

01:41:26.820 --> 01:41:27.380
我告诉大家

01:41:27.860 --> 01:41:29.940
比方说现在这个喊数要干嘛呢

01:41:29.940 --> 01:41:32.260
要改变这个东西对吧

01:41:32.260 --> 01:41:33.940
它的目标是要改变这个东西

01:41:33.940 --> 01:41:34.740
那么改变那个东西

01:41:34.740 --> 01:41:37.460
到底要把它改成q还是改成force呢

01:41:38.500 --> 01:41:39.700
现在是不是一定为force

01:41:40.260 --> 01:41:41.300
现在是不是一定为force

01:41:41.300 --> 01:41:42.020
不一定哦

01:41:42.020 --> 01:41:43.780
因为它状态会不断的变化

01:41:43.780 --> 01:41:45.700
你不知道它现在状态变成q还是force了

01:41:45.700 --> 01:41:46.580
你不知道的

01:41:47.220 --> 01:41:48.020
所以说呢

01:41:48.020 --> 01:41:48.740
你这一块

01:41:49.540 --> 01:41:50.340
你这一块

01:41:50.340 --> 01:41:51.940
你是不是要传给我呀

01:41:51.940 --> 01:41:52.820
到时候要怎么改变

01:41:52.820 --> 01:41:54.420
是不是要传给我对吧

01:41:54.420 --> 01:41:55.140
是不是要传给我

01:41:55.140 --> 01:41:56.100
你这里要传个q

01:41:56.580 --> 01:41:58.260
那么我就表示把它设置为q

01:41:58.260 --> 01:41:59.540
你这里传的是force

01:41:59.540 --> 01:42:00.740
我就把它设置为force

01:42:00.740 --> 01:42:01.940
就这么简单

01:42:01.940 --> 01:42:03.220
所以这个字呆嘛怎么写呢

01:42:04.420 --> 01:42:05.620
State不是意思的啊

01:42:06.420 --> 01:42:08.180
得到当前状态里边的什么

01:42:08.740 --> 01:42:10.020
login user

01:42:10.020 --> 01:42:10.820
然后什么

01:42:10.820 --> 01:42:11.780
is loading

01:42:13.220 --> 01:42:14.100
把它设置为什么

01:42:14.820 --> 01:42:15.780
设置为payload

01:42:18.180 --> 01:42:19.460
把设置为payload了

01:42:19.460 --> 01:42:20.740
那么到时候怎么调用呢

01:42:20.740 --> 01:42:21.620
你可以这样理解啊

01:42:21.620 --> 01:42:22.900
到时候我们就这样调用

01:42:22.900 --> 01:42:24.500
is loading把原来状态

01:42:24.500 --> 01:42:25.860
把当前状态传给它

01:42:25.860 --> 01:42:27.060
当前状态传给它

01:42:27.060 --> 01:42:27.940
然后该传一个q

01:42:28.020 --> 01:42:29.300
是不是把它设为q了

01:42:29.300 --> 01:42:29.620
对吧

01:42:29.620 --> 01:42:31.140
把is loading设为q了

01:42:31.140 --> 01:42:32.340
把它设为force

01:42:32.340 --> 01:42:32.580
是吧

01:42:32.580 --> 01:42:34.100
is loading设为force了

01:42:34.100 --> 01:42:34.820
对吧

01:42:34.820 --> 01:42:36.020
我们到时候就这样调用

01:42:36.020 --> 01:42:36.980
你可以这样理解啊

01:42:36.980 --> 01:42:37.700
可以这样理解

01:42:38.500 --> 01:42:40.020
但是实际上是不是这样调用的啊

01:42:40.820 --> 01:42:41.460
面对是吗

01:42:42.100 --> 01:42:42.340
好

01:42:42.340 --> 01:42:43.300
这个代码能不能看懂

01:42:43.300 --> 01:42:43.780
这个代码

01:42:44.740 --> 01:42:46.020
这个代码能不能看懂

01:42:51.420 --> 01:42:52.940
有没有什么问题啊

01:42:52.940 --> 01:42:53.740
有没有什么问题

01:42:53.740 --> 01:42:54.300
这个代码

01:42:54.860 --> 01:42:55.660
有问题就问啊

01:42:56.300 --> 01:42:57.180
这会有讲慢一点

01:42:57.820 --> 01:42:58.060
好

01:42:58.060 --> 01:43:00.140
那么到时候怎么调用这个函数呢

01:43:00.140 --> 01:43:01.100
怎么来调用呢

01:43:01.260 --> 01:43:02.540
你看着到时候是这样调用的

01:43:02.940 --> 01:43:04.300
你这里不是导出一个状

01:43:04.300 --> 01:43:05.420
导出一个仓库吗

01:43:05.420 --> 01:43:05.660
好

01:43:05.660 --> 01:43:06.940
这个仓库是一个对象

01:43:07.900 --> 01:43:08.780
你不是直接调用

01:43:08.780 --> 01:43:10.060
你不能直接调用啊

01:43:10.060 --> 01:43:11.580
你是不能不能直接调用这个

01:43:13.180 --> 01:43:14.380
所以说一点啊

01:43:14.380 --> 01:43:17.900
mattation参数

01:43:17.900 --> 01:43:18.700
一个有两个啊

01:43:18.700 --> 01:43:19.420
一个state

01:43:19.420 --> 01:43:20.460
一个是payload

01:43:21.420 --> 01:43:22.060
一共有两个

01:43:22.620 --> 01:43:22.860
好

01:43:23.500 --> 01:43:24.860
调用mattation

01:43:25.500 --> 01:43:26.620
不可以直接调用

01:43:26.620 --> 01:43:27.180
mattation

01:43:27.900 --> 01:43:28.940
不可以直接调用

01:43:29.660 --> 01:43:31.580
你也没有机会去直接调用它

01:43:31.580 --> 01:43:32.060
mattation

01:43:32.700 --> 01:43:37.340
必须通过仓库对象的

01:43:37.340 --> 01:43:39.180
什么commet寒数

01:43:40.780 --> 01:43:44.440
必须通过这个进行调用

01:43:46.120 --> 01:43:47.720
它必须要通过这种方式来进行调用

01:43:47.720 --> 01:43:48.920
commet是表示什么意思

01:43:48.920 --> 01:43:50.040
表示提交的意思

01:43:50.040 --> 01:43:51.160
表示提交的意思

01:43:51.160 --> 01:43:52.600
就是提交一次更改

01:43:52.600 --> 01:43:53.320
我要更改了

01:43:53.320 --> 01:43:54.280
我要更改数据了

01:43:54.280 --> 01:43:54.520
来

01:43:54.520 --> 01:43:55.400
我提交一次更改

01:43:55.400 --> 01:43:56.120
让你去更改

01:43:56.680 --> 01:43:56.920
好

01:43:56.920 --> 01:43:58.600
那么怎么来提交更改呢

01:43:58.600 --> 01:43:59.400
它是这样子的

01:43:59.400 --> 01:44:00.120
这样子来做的

01:44:01.400 --> 01:44:02.600
有些东西呢

01:44:02.600 --> 01:44:03.480
一时半会呢

01:44:03.480 --> 01:44:04.920
可能你很难领会到

01:44:04.920 --> 01:44:05.960
它的哲学理念

01:44:05.960 --> 01:44:07.000
这里面包含了很多的

01:44:07.000 --> 01:44:08.040
哲学思想来的里边

01:44:08.520 --> 01:44:09.720
你可能一时半会很好

01:44:09.720 --> 01:44:10.760
很难理解

01:44:10.760 --> 01:44:11.160
但是呢

01:44:11.160 --> 01:44:12.360
你先用

01:44:12.360 --> 01:44:13.320
就是这样子用

01:44:13.320 --> 01:44:14.600
用久了过后

01:44:14.600 --> 01:44:15.880
然后老实再告诉你

01:44:15.880 --> 01:44:19.000
它是基于什么样的原因来设计

01:44:19.000 --> 01:44:20.040
我当时记得

01:44:20.040 --> 01:44:22.680
我当时讲reactor的状态处理的时候

01:44:22.680 --> 01:44:23.800
它也是类似的方式

01:44:23.800 --> 01:44:25.640
不过reactor更加复杂一点

01:44:25.640 --> 01:44:26.840
讲reactor的时候

01:44:26.840 --> 01:44:28.760
我当时记得是我讲了40多分钟

01:44:28.760 --> 01:44:30.040
就讲了它的历史由来

01:44:30.520 --> 01:44:31.160
它是怎么

01:44:31.160 --> 01:44:33.240
它经历到什么样的痛苦

01:44:33.240 --> 01:44:35.560
才走到了今天的这样的一个局面

01:44:35.560 --> 01:44:37.640
还形成了这么一种模式

01:44:37.640 --> 01:44:39.960
它接见了好多好多的知识

01:44:39.960 --> 01:44:41.880
它就解决了这个问题

01:44:41.880 --> 01:44:43.960
这里边有很多很多的冤冤的

01:44:43.960 --> 01:44:44.680
我们这里呢

01:44:45.720 --> 01:44:47.720
就没有那么多时间讲了

01:44:47.720 --> 01:44:48.040
这里呢

01:44:48.040 --> 01:44:49.640
我们就告诉他怎么用就行了

01:44:50.920 --> 01:44:52.200
仓库拿来

01:44:52.200 --> 01:44:52.760
拿到了对吧

01:44:52.760 --> 01:44:54.120
这仓库对象怎么用

01:44:54.120 --> 01:44:54.760
commet

01:44:56.040 --> 01:44:56.520
commet

01:44:57.880 --> 01:44:58.440
commet

01:44:58.440 --> 01:44:59.720
仓库对象里边有这么一个东西

01:44:59.720 --> 01:45:01.480
叫commet提交

01:45:01.480 --> 01:45:01.880
好

01:45:01.880 --> 01:45:03.320
提交的时候怎么提交呢

01:45:03.320 --> 01:45:05.640
有两个参数要传递

01:45:05.640 --> 01:45:07.240
第一个参数传递的是

01:45:08.360 --> 01:45:09.640
matician的名称

01:45:12.440 --> 01:45:13.720
笔记详细一点

01:45:13.720 --> 01:45:15.000
commet参数1

01:45:17.220 --> 01:45:19.140
matician的名称

01:45:19.940 --> 01:45:20.980
第二参数2

01:45:21.940 --> 01:45:22.420
payload

01:45:23.540 --> 01:45:24.340
就传递这个东西

01:45:25.140 --> 01:45:26.580
也就是第一个参数传啥呢

01:45:26.580 --> 01:45:27.860
传的是commet

01:45:27.860 --> 01:45:28.340
就是这个

01:45:28.340 --> 01:45:29.540
我们要调用这个函数对吧

01:45:29.620 --> 01:45:31.220
是不是它就是matician的名称

01:45:31.220 --> 01:45:31.700
对吧

01:45:31.700 --> 01:45:33.060
它就是一个matician

01:45:33.060 --> 01:45:34.580
就是一个可变函数

01:45:34.580 --> 01:45:36.820
就叫做它是可以改变仓库状态的函数

01:45:38.020 --> 01:45:39.860
我们把这个名称放过来

01:45:39.860 --> 01:45:40.580
它是个支付串

01:45:41.540 --> 01:45:42.580
第二个参数传啥

01:45:42.580 --> 01:45:44.420
传的就是你这里需要的payload

01:45:45.300 --> 01:45:46.820
传的就是你需要的payload

01:45:46.820 --> 01:45:47.460
就这么简单

01:45:48.180 --> 01:45:48.900
那么传啥

01:45:48.900 --> 01:45:49.780
就是传一个q

01:45:50.740 --> 01:45:51.620
传个q对吧

01:45:52.340 --> 01:45:52.580
好

01:45:52.580 --> 01:45:53.300
那么我们来看一下

01:45:53.860 --> 01:45:56.180
我们这里先输出仓库之前的状态

01:45:56.900 --> 01:45:58.020
仓库里边有个属性

01:45:58.020 --> 01:45:58.580
叫做state

01:45:59.540 --> 01:46:00.740
仓库里边有个属性叫做state

01:46:00.740 --> 01:46:01.700
表示之前的状态

01:46:02.260 --> 01:46:03.700
然后我们改变了之后

01:46:03.700 --> 01:46:04.980
再输出之后的状态

01:46:05.860 --> 01:46:06.180
state

01:46:06.740 --> 01:46:07.300
咱们来看一下

01:46:08.420 --> 01:46:08.980
仓库里边

01:46:09.620 --> 01:46:10.740
之前的状态之后的状态

01:46:14.420 --> 01:46:15.060
这里包错了

01:46:15.460 --> 01:46:15.780
到什么

01:46:16.740 --> 01:46:17.220
然后

01:46:18.820 --> 01:46:19.940
the server response

01:46:19.940 --> 01:46:21.460
status是04

01:46:24.410 --> 01:46:24.810
OK

01:46:25.690 --> 01:46:26.890
will x is not defined

01:46:28.410 --> 01:46:29.690
我页面上

01:46:31.050 --> 01:46:32.170
我页面上写错了

01:46:32.170 --> 01:46:32.730
asets

01:46:34.250 --> 01:46:34.570
找不到

01:46:34.570 --> 01:46:35.690
他找不到这个will x

01:46:36.490 --> 01:46:36.810
写错了

01:46:37.370 --> 01:46:39.050
那你看之前的状态

01:46:39.850 --> 01:46:40.410
我们这样打

01:46:40.410 --> 01:46:41.130
真要打打也不行

01:46:41.130 --> 01:46:42.890
因为这样子我一点就重新计算了

01:46:42.890 --> 01:46:43.850
重新计算了

01:46:43.850 --> 01:46:44.490
我们这样子吧

01:46:45.450 --> 01:46:45.850
这样子

01:46:46.410 --> 01:46:47.930
拿到仓库里边的状态

01:46:49.130 --> 01:46:50.250
然后仓库里边的状态

01:46:50.250 --> 01:46:51.210
状态里边不是有一个

01:46:51.210 --> 01:46:52.170
我们看一下状态里边

01:46:52.170 --> 01:46:53.610
状态里边不是一个locking user吗

01:46:53.610 --> 01:46:54.170
对吧

01:46:54.170 --> 01:46:54.330
好

01:46:54.330 --> 01:46:55.530
第二locking user

01:46:56.410 --> 01:46:57.050
第二什么

01:46:57.530 --> 01:46:58.170
is loading

01:46:59.450 --> 01:47:00.010
看一下这个

01:47:03.590 --> 01:47:04.070
看一下这个

01:47:04.790 --> 01:47:05.910
我们先把他之前的

01:47:05.910 --> 01:47:06.630
is loading打印出来

01:47:06.630 --> 01:47:07.350
再把他之后的

01:47:07.350 --> 01:47:08.550
is loading打印出来

01:47:08.550 --> 01:47:08.790
好

01:47:08.790 --> 01:47:09.110
看一下

01:47:09.910 --> 01:47:11.350
那一开始是force

01:47:11.350 --> 01:47:11.590
对吧

01:47:11.590 --> 01:47:12.550
一开始是force

01:47:12.550 --> 01:47:12.950
然后呢

01:47:12.950 --> 01:47:14.070
经过这么一句代码

01:47:14.070 --> 01:47:15.510
是提交了一次更改

01:47:15.510 --> 01:47:15.830
对吧

01:47:15.830 --> 01:47:17.030
提交这么一次更改

01:47:17.030 --> 01:47:17.990
那么他就变成了q

01:47:18.630 --> 01:47:19.270
那么这个代码

01:47:19.270 --> 01:47:20.310
实际上在做什么呢

01:47:20.310 --> 01:47:21.670
实际上他会在内部

01:47:22.150 --> 01:47:23.190
帮你去调用

01:47:23.190 --> 01:47:25.350
名称为sets is loading的mattation

01:47:26.390 --> 01:47:28.230
他会去帮你调用这个东西

01:47:28.230 --> 01:47:29.430
并且他会自动的把

01:47:29.430 --> 01:47:31.110
把当前的状态传过来

01:47:31.110 --> 01:47:32.470
他会自动的传过来

01:47:32.470 --> 01:47:33.670
并且他把你这个复杂

01:47:34.310 --> 01:47:35.190
把你这个复杂

01:47:35.190 --> 01:47:36.070
也会传过来

01:47:36.710 --> 01:47:37.910
他会自动的帮你调用

01:47:37.910 --> 01:47:39.030
你不能去直接调用

01:47:39.030 --> 01:47:40.070
你不能去直接调用

01:47:40.070 --> 01:47:41.350
你必须要通过这种方式

01:47:43.190 --> 01:47:44.230
软件开发

01:47:44.230 --> 01:47:45.110
有很多很多的

01:47:45.110 --> 01:47:45.910
折去层面的东西

01:47:45.910 --> 01:47:46.630
超级超级多

01:47:49.750 --> 01:47:50.070
好

01:47:50.070 --> 01:47:50.710
那么这里呢

01:47:51.910 --> 01:47:52.550
说就完了

01:47:52.550 --> 01:47:52.870
对吧

01:47:52.870 --> 01:47:53.430
就完了

01:47:53.430 --> 01:47:54.630
说到我们以后要改变状态

01:47:54.630 --> 01:47:55.270
怎么改变

01:47:55.270 --> 01:47:56.390
如果说你想改变

01:47:56.390 --> 01:47:57.270
仓库的状态

01:47:57.270 --> 01:47:58.710
你只能提交马特行

01:47:58.710 --> 01:47:59.830
你不可能有其他帮忙

01:48:00.390 --> 01:48:01.990
最终只能提交马特行

01:48:03.030 --> 01:48:03.750
所以说这里

01:48:03.830 --> 01:48:05.030
马特行就这样子写

01:48:05.030 --> 01:48:05.350
好

01:48:05.350 --> 01:48:06.470
那么现在我们写了一个马特行

01:48:06.470 --> 01:48:07.030
对吧

01:48:07.030 --> 01:48:08.310
那么我们还再来一个

01:48:08.310 --> 01:48:10.870
再来一个登陆用户

01:48:10.870 --> 01:48:11.670
登陆用户

01:48:11.670 --> 01:48:13.030
就说说是这个玩意

01:48:13.030 --> 01:48:13.990
说是这个玩意

01:48:13.990 --> 01:48:14.310
好

01:48:14.310 --> 01:48:15.990
那么这里我们写

01:48:15.990 --> 01:48:17.110
SET

01:48:17.110 --> 01:48:18.470
SET什么

01:48:18.470 --> 01:48:19.830
locking user吧

01:48:19.830 --> 01:48:20.790
sets user吧

01:48:20.790 --> 01:48:21.750
sets user

01:48:21.750 --> 01:48:22.070
好

01:48:22.790 --> 01:48:23.510
当前状态

01:48:23.510 --> 01:48:24.470
第一个参数是固定的

01:48:24.470 --> 01:48:25.830
一定是当前状态

01:48:25.830 --> 01:48:27.030
第二个参数是什么呢

01:48:27.030 --> 01:48:28.790
第二个参数是不是也是复杂

01:48:28.790 --> 01:48:29.030
对吧

01:48:29.030 --> 01:48:29.590
也是复杂

01:48:29.590 --> 01:48:30.630
当然你可以换成

01:48:30.630 --> 01:48:31.590
别的参数的名字

01:48:31.590 --> 01:48:33.270
参数的名字里随变换

01:48:33.350 --> 01:48:35.270
那么这个复杂当你自己约定好

01:48:35.270 --> 01:48:35.990
约定好

01:48:35.990 --> 01:48:36.870
也要传一个什么呢

01:48:36.870 --> 01:48:39.350
传一个用户对象进来

01:48:39.350 --> 01:48:41.350
由热OBG

01:48:41.350 --> 01:48:43.030
称名字里随便规定

01:48:43.030 --> 01:48:44.630
这是设置用户

01:48:44.630 --> 01:48:49.030
用于改变登陆的用户

01:48:49.030 --> 01:48:50.550
用于改变登陆的用户

01:48:50.550 --> 01:48:50.790
好

01:48:50.790 --> 01:48:52.710
那么有些同学就在这里想

01:48:52.710 --> 01:48:53.590
这里是不是要用

01:48:53.590 --> 01:48:55.910
RX请求要远程请求

01:48:55.910 --> 01:48:57.350
要远程请求去得到用户

01:48:57.350 --> 01:48:59.030
然后再来进行更改

01:48:59.030 --> 01:49:00.150
这里又是一个重点了

01:49:00.150 --> 01:49:01.670
一个特别特别重要的一个点

01:49:06.120 --> 01:49:10.280
没提醒中的代码

01:49:10.280 --> 01:49:15.000
没提醒韩束必须保持纯净

01:49:15.000 --> 01:49:17.080
必须是一个

01:49:20.120 --> 01:49:21.000
也不能说纯韩束

01:49:21.000 --> 01:49:22.200
因为它毕竟改了数据的

01:49:22.200 --> 01:49:23.000
我们这样说吧

01:49:23.000 --> 01:49:25.640
没提醒韩束中不可以

01:49:26.680 --> 01:49:30.120
不可以出现异步操作

01:49:32.040 --> 01:49:34.680
异步等副作用操作

01:49:34.760 --> 01:49:35.880
什么叫异步

01:49:35.880 --> 01:49:37.240
就是RX请求等一会儿

01:49:37.240 --> 01:49:38.280
什么Timeout

01:49:38.280 --> 01:49:39.800
这些东西都属于异步

01:49:39.800 --> 01:49:41.800
要等一会儿才运行的东西

01:49:41.800 --> 01:49:44.280
在MultiTaking里边是绝对不能出现的

01:49:44.280 --> 01:49:46.200
所以这里边能不能写RX请求赞吗

01:49:46.200 --> 01:49:47.480
能不能用这个东西

01:49:47.480 --> 01:49:49.400
能不能用这个Locking Service

01:49:49.400 --> 01:49:51.320
然后这里不是一个Locking Service吗

01:49:51.320 --> 01:49:52.600
Locking Service

01:49:52.600 --> 01:49:55.160
我们要登录嘛对不对

01:49:55.160 --> 01:49:56.440
写个

01:49:56.440 --> 01:49:57.720
Flaw

01:49:57.720 --> 01:49:59.000
Flaw

01:49:59.000 --> 01:50:02.300
Flaw

01:50:02.300 --> 01:50:03.580
Flaw

01:50:03.580 --> 01:50:04.860
Flaw

01:50:04.860 --> 01:50:06.140
Flaw

01:50:06.540 --> 01:50:07.420
Flaw

01:50:07.420 --> 01:50:08.700
Flaw

01:50:08.700 --> 01:50:09.980
Service

01:50:09.980 --> 01:50:11.260
Locking Service

01:50:11.260 --> 01:50:12.540
我们这里不是要登录嘛对吧

01:50:12.540 --> 01:50:14.380
这里边不是有登录方法吗

01:50:14.380 --> 01:50:15.340
对不对Locking

01:50:15.340 --> 01:50:16.780
登录方法传入帐号和密码

01:50:16.780 --> 01:50:17.900
帐号密码传进去

01:50:17.900 --> 01:50:20.220
这个方法我们知道是一个异步方法

01:50:20.220 --> 01:50:22.780
它要经过一段时间才能执行完对吧

01:50:22.780 --> 01:50:25.340
在MultiTaking里边是绝对不能出现这些东西的

01:50:25.340 --> 01:50:27.180
它叫做副作用操作

01:50:27.180 --> 01:50:28.300
还有什么呢

01:50:28.300 --> 01:50:30.700
还有什么给DOM事件操作DOM元素

01:50:30.700 --> 01:50:31.740
还有什么

01:50:31.740 --> 01:50:33.020
还有操作什么

01:50:33.180 --> 01:50:34.860
就是Local Storage

01:50:34.860 --> 01:50:36.860
就设计本地存储

01:50:36.860 --> 01:50:39.500
这些都还要改变歪步变量

01:50:39.500 --> 01:50:41.340
比方这里有个变量

01:50:41.340 --> 01:50:43.820
改变歪步变量的一些东西

01:50:43.820 --> 01:50:44.860
这些都不允许

01:50:44.860 --> 01:50:46.460
这都是副作用操作

01:50:46.460 --> 01:50:49.660
在MultiTaking里边都不允许

01:50:49.660 --> 01:50:50.620
为什么不允许呢

01:50:50.620 --> 01:50:52.300
它又涉及到一些问题

01:50:52.300 --> 01:50:53.580
它为了重现

01:50:53.580 --> 01:50:55.340
它是为了跟踪

01:50:55.340 --> 01:50:56.780
它是为了就是有些调试的时候

01:50:56.780 --> 01:50:58.540
为了跟踪状态

01:50:58.540 --> 01:51:00.540
比方说我到时候要做时光旅行

01:51:00.540 --> 01:51:01.340
就是从一个数据

01:51:01.420 --> 01:51:03.100
从数据状态A变状的状态B

01:51:03.100 --> 01:51:04.700
再从状态B变到状态C

01:51:04.700 --> 01:51:07.020
我觉得数据好像就出了一点问题

01:51:07.020 --> 01:51:07.820
我想看一下

01:51:07.820 --> 01:51:10.460
状态C之前的状态是什么东西呢

01:51:10.460 --> 01:51:10.860
对不对

01:51:10.860 --> 01:51:12.540
我想看一下之前的状态是什么东西

01:51:12.540 --> 01:51:12.700
好

01:51:12.700 --> 01:51:15.100
那么我想从状态C回到状态B

01:51:15.100 --> 01:51:19.420
如果说你在状态B变到状态C的过程中

01:51:19.420 --> 01:51:21.020
做了一些副作用操作

01:51:21.020 --> 01:51:22.300
到时候你还原的时候

01:51:22.300 --> 01:51:23.980
你已经没办法彻底还原

01:51:23.980 --> 01:51:25.740
也不要用你请求的服务器

01:51:25.740 --> 01:51:26.940
那么你到时候还原的时候

01:51:26.940 --> 01:51:28.780
怎么撤销上一次请求了

01:51:28.780 --> 01:51:29.500
你撤销不了

01:51:29.500 --> 01:51:30.460
你已经请求已经完了

01:51:31.580 --> 01:51:33.340
所以说你到时候还原的时候

01:51:33.340 --> 01:51:34.540
特别不好还原

01:51:34.540 --> 01:51:37.100
它就必须要让你是一个纯粹的函数

01:51:37.100 --> 01:51:38.700
它没有任何副作用操作

01:51:38.700 --> 01:51:41.340
总之如果说你现在不是很理解副作用的话

01:51:41.340 --> 01:51:42.940
那么你现在就记住

01:51:42.940 --> 01:51:45.180
这里边是绝对不能有远程请求

01:51:45.180 --> 01:51:46.300
不能有异步

01:51:46.300 --> 01:51:47.660
我们这里详细的说一下

01:51:48.540 --> 01:51:50.220
就是没有

01:51:50.220 --> 01:51:53.580
而且可是没有动物处理

01:51:54.940 --> 01:51:56.140
没有外部辩量

01:51:56.140 --> 01:51:57.500
外部数据处理

01:51:58.140 --> 01:51:59.180
就是外部的辩量

01:51:59.260 --> 01:52:00.940
对外部的辩量进行负责更改

01:52:00.940 --> 01:52:01.340
没有

01:52:02.140 --> 01:52:03.340
没有当前时间

01:52:04.300 --> 01:52:05.100
当前时间

01:52:06.700 --> 01:52:08.220
没有水积数

01:52:08.860 --> 01:52:10.140
这些东西都不能在这里面出现

01:52:10.700 --> 01:52:11.820
都不能在这里面出现

01:52:12.940 --> 01:52:14.860
就是说你要保证什么呢

01:52:14.860 --> 01:52:16.940
保证我今天这个时候

01:52:16.940 --> 01:52:17.740
调用这个

01:52:17.740 --> 01:52:18.940
就这一次从一个状态

01:52:19.580 --> 01:52:22.140
就是我这里到时候触发这个康妹扯的时候

01:52:22.140 --> 01:52:23.420
康妹扯这里的参数不变

01:52:24.860 --> 01:52:25.420
不变

01:52:25.420 --> 01:52:26.780
之前的状态是啥

01:52:27.660 --> 01:52:28.380
不变

01:52:28.460 --> 01:52:31.100
那么他等到的之后的状态一定是完全一致的

01:52:31.100 --> 01:52:32.780
无论你当的多少次都是完全一致的

01:52:33.420 --> 01:52:34.780
是不能出现有任何这些东西的

01:52:34.780 --> 01:52:35.900
这些东西都做做副作用

01:52:36.860 --> 01:52:37.260
副作用

01:52:39.660 --> 01:52:40.940
State里边可以写方法

01:52:40.940 --> 01:52:41.260
不行

01:52:41.660 --> 01:52:42.540
State里边是状态

01:52:42.540 --> 01:52:43.500
是不能写方法的

01:52:43.500 --> 01:52:44.620
这里边是不能写方法的

01:52:46.220 --> 01:52:46.860
好那么这里

01:52:46.860 --> 01:52:47.980
Sets有点咋怎么写呢

01:52:47.980 --> 01:52:48.940
就说很简单

01:52:48.940 --> 01:52:50.460
说这里的代码其实很简单

01:52:51.260 --> 01:52:52.060
就是你要注意

01:52:52.060 --> 01:52:53.740
你不要去划责天主就行了

01:52:53.740 --> 01:52:54.300
怎么做呢

01:52:54.860 --> 01:52:55.580
怎么做呢

01:52:55.580 --> 01:52:57.020
data就login有这

01:52:57.980 --> 01:52:58.620
叫data

01:52:59.580 --> 01:53:00.700
不是改变这个数据吗

01:53:00.700 --> 01:53:01.660
把这个数据改成什么

01:53:01.660 --> 01:53:02.380
你不是O比器

01:53:02.380 --> 01:53:02.940
完了

01:53:02.940 --> 01:53:03.260
没了

01:53:03.260 --> 01:53:03.900
就这么简单

01:53:03.900 --> 01:53:04.700
就这么简单

01:53:04.700 --> 01:53:06.300
所以这里边的代码往往很简单

01:53:06.300 --> 01:53:07.980
往往都是非常非常简单的

01:53:07.980 --> 01:53:08.700
你给他什么数据

01:53:08.700 --> 01:53:10.140
他就帮你完成复职

01:53:11.100 --> 01:53:12.060
大部分代码都是这样子

01:53:12.620 --> 01:53:13.500
好这么Motations

01:53:15.260 --> 01:53:15.740
但是呢

01:53:15.740 --> 01:53:17.180
我们的状态变化

01:53:17.180 --> 01:53:18.540
不能永远没有副作用

01:53:18.540 --> 01:53:20.620
总得有一些地方来处理副作用

01:53:20.620 --> 01:53:20.940
好

01:53:20.940 --> 01:53:22.780
他专门给你提供了这么一个配置

01:53:22.780 --> 01:53:23.660
来处理副作用

01:53:23.660 --> 01:53:23.900
好

01:53:23.900 --> 01:53:25.020
现在我们说第三个配置了

01:53:25.660 --> 01:53:25.980
State

01:53:25.980 --> 01:53:26.860
Motation说完了

01:53:27.180 --> 01:53:28.300
这两个都非常非常简单

01:53:28.300 --> 01:53:28.940
就是你要注意

01:53:28.940 --> 01:53:30.460
Motation是不能有副作用的

01:53:30.460 --> 01:53:30.700
好

01:53:30.700 --> 01:53:31.820
那么现在就是Action

01:53:33.100 --> 01:53:34.940
配置副作用操作

01:53:35.900 --> 01:53:37.500
不要说你R加克斯请求

01:53:37.500 --> 01:53:38.460
你本地存储

01:53:38.460 --> 01:53:39.980
这些东西都可以通过Action

01:53:40.460 --> 01:53:40.940
来完成

01:53:41.900 --> 01:53:42.220
好

01:53:42.220 --> 01:53:43.580
那么现在我们来看一下

01:53:43.580 --> 01:53:44.060
Action

01:53:45.020 --> 01:53:45.740
第三个配置

01:53:48.460 --> 01:53:49.020
Action

01:53:50.620 --> 01:53:50.860
好

01:53:50.860 --> 01:53:52.300
Action里边配置啥呢

01:53:52.300 --> 01:53:53.100
它的配置

01:53:53.740 --> 01:53:55.500
配置就是副作用操作

01:53:56.380 --> 01:53:57.340
每个Action

01:53:58.300 --> 01:54:00.860
每个Action是一个函数

01:54:01.740 --> 01:54:02.780
这个函数它就没有要求

01:54:02.780 --> 01:54:04.780
你必须是一个存函数

01:54:04.780 --> 01:54:05.420
不能有副作用

01:54:05.420 --> 01:54:06.140
它就没有要求了

01:54:06.620 --> 01:54:08.620
那么它的写法跟Motation差不多

01:54:08.620 --> 01:54:10.140
咱们来写一下Action

01:54:10.140 --> 01:54:10.780
怎么写的呢

01:54:11.100 --> 01:54:12.540
比方说我们写一个副作用操作

01:54:12.540 --> 01:54:13.980
就表示login登录

01:54:13.980 --> 01:54:15.020
登录的副作用操作

01:54:15.820 --> 01:54:16.700
你要给我存

01:54:16.700 --> 01:54:18.300
就是它的第一个看出是啥呢

01:54:18.300 --> 01:54:19.500
第一个看出叫做context

01:54:19.500 --> 01:54:20.220
叫上下文

01:54:24.390 --> 01:54:25.030
每个

01:54:25.830 --> 01:54:26.390
每个

01:54:27.350 --> 01:54:30.230
每个Action是一个函数

01:54:31.510 --> 01:54:32.310
参数

01:54:32.790 --> 01:54:33.430
1

01:54:33.830 --> 01:54:35.350
上下文对象

01:54:36.630 --> 01:54:39.190
几乎等同于

01:54:39.190 --> 01:54:40.710
等同于

01:54:41.750 --> 01:54:43.030
仓库对象

01:54:43.030 --> 01:54:45.590
相当于是它把仓库对象给你传过来了

01:54:45.590 --> 01:54:46.870
它整个仓库给你传过来了

01:54:46.870 --> 01:54:48.150
几乎等同于仓库对象

01:54:48.150 --> 01:54:48.790
好

01:54:48.790 --> 01:54:49.430
参数2

01:54:50.710 --> 01:54:51.750
参数2是什么呢

01:54:51.750 --> 01:54:51.990
Payload

01:54:51.990 --> 01:54:53.270
Payload

01:54:53.270 --> 01:54:54.550
这是Action

01:54:54.710 --> 01:54:55.830
这是Action

01:54:55.830 --> 01:54:58.390
Action它不会给你直接给你状态的

01:54:58.390 --> 01:54:59.670
不会给你直接给你状态

01:54:59.670 --> 01:55:01.190
那么它会给你一个上下文对象

01:55:01.190 --> 01:55:02.230
context

01:55:02.230 --> 01:55:04.070
第二个看出是什么

01:55:04.070 --> 01:55:04.790
Payload

01:55:04.790 --> 01:55:06.070
Payload到里面

01:55:06.070 --> 01:55:10.950
那么你需要给我自己约定好你到底要传什么东西

01:55:10.950 --> 01:55:12.470
比方说到时候要传什么

01:55:12.470 --> 01:55:17.590
需要传入账号和密码

01:55:17.590 --> 01:55:18.870
因为你要远程请求

01:55:18.870 --> 01:55:20.390
要完成登录是否要传入账号密码

01:55:20.390 --> 01:55:21.670
那么我们就约定好

01:55:21.670 --> 01:55:22.710
自行约定好

01:55:22.710 --> 01:55:23.430
约定好

01:55:23.590 --> 01:55:25.270
到时候你要登录的时候

01:55:25.270 --> 01:55:26.710
你要调用这个函数的时候

01:55:26.710 --> 01:55:28.470
你要给我传入个账号密码

01:55:28.470 --> 01:55:29.590
放到这个蚕数里面

01:55:29.590 --> 01:55:31.030
放到这个蚕数里面

01:55:31.030 --> 01:55:32.070
所以传个对象进来

01:55:32.070 --> 01:55:33.270
对象里面有Lokin ID

01:55:33.270 --> 01:55:34.310
有Lokin password的

01:55:34.310 --> 01:55:36.870
那你到时候你要给我这样传递

01:55:36.870 --> 01:55:37.990
Lokin ID

01:55:37.990 --> 01:55:39.270
这是自己约定的

01:55:39.270 --> 01:55:41.030
Lokin password的

01:55:41.030 --> 01:55:43.910
自行约定好这个格式

01:55:43.910 --> 01:55:45.510
那么这里怎么用呢

01:55:45.510 --> 01:55:46.630
怎么来使用呢

01:55:46.630 --> 01:55:48.310
这里随便写副作用

01:55:48.310 --> 01:55:49.430
随便你怎么写

01:55:49.430 --> 01:55:51.190
比方说一开始登录的时候

01:55:51.190 --> 01:55:52.870
是不是要把它变成夹载中

01:55:53.190 --> 01:55:54.230
把它变成夹载中

01:55:54.230 --> 01:55:55.830
那么怎么把它变成夹载中呢

01:55:55.830 --> 01:55:57.030
你能不能这样子写

01:55:57.030 --> 01:55:58.230
因为我们刚才说了

01:55:58.230 --> 01:55:59.910
这个抗体格式那意识于

01:56:01.190 --> 01:56:02.550
几乎等同于仓库

01:56:02.550 --> 01:56:03.510
有些朋友就想了

01:56:03.510 --> 01:56:04.790
这个东西既然是一个仓库

01:56:04.790 --> 01:56:05.590
能不能这样子写

01:56:06.070 --> 01:56:06.790
能不能这样子写

01:56:07.430 --> 01:56:08.470
Lokin U-Z

01:56:08.470 --> 01:56:10.070
一声Lokin

01:56:10.070 --> 01:56:10.790
把它设为q

01:56:11.270 --> 01:56:11.990
能不能这样子写

01:56:14.390 --> 01:56:15.270
只能传两个

01:56:15.270 --> 01:56:15.990
只能有两个

01:56:15.990 --> 01:56:17.030
只能有两个参数

01:56:17.030 --> 01:56:18.150
它首先能不能这样子写

01:56:19.270 --> 01:56:20.310
为什么不能这样子写

01:56:20.870 --> 01:56:21.510
为什么不能

01:56:24.090 --> 01:56:24.970
为什么不能这样子写

01:56:24.970 --> 01:56:25.770
我们刚才说过的

01:56:31.500 --> 01:56:33.740
只能用Motat同事

01:56:34.460 --> 01:56:35.500
只能用Motation

01:56:35.500 --> 01:56:36.700
只能用Motation

01:56:36.700 --> 01:56:38.460
因为Motation是数据变化的

01:56:38.460 --> 01:56:39.500
唯一原因

01:56:40.140 --> 01:56:41.820
你这里不能直接更改数据的

01:56:41.820 --> 01:56:43.820
只用Motation有权力更改数据

01:56:43.820 --> 01:56:44.780
其他地方都没有任何

01:56:44.780 --> 01:56:45.900
权力更改数据

01:56:45.900 --> 01:56:47.420
所以说你这里绝对不能这样子写

01:56:47.420 --> 01:56:49.340
这是初学的荣誉犯的错误

01:56:50.540 --> 01:56:51.500
那么这里我们要改

01:56:51.500 --> 01:56:52.860
把它变成去怎么变的

01:56:52.860 --> 01:56:53.660
怎么变的

01:56:53.660 --> 01:56:55.660
要去触发Motation

01:56:55.660 --> 01:56:56.220
怎么触发

01:56:56.780 --> 01:56:57.980
是我们刚才学过的

01:56:57.980 --> 01:56:59.740
contact是commet

01:56:59.740 --> 01:57:01.340
提交状态更改

01:57:01.340 --> 01:57:02.300
提交一个什么

01:57:02.300 --> 01:57:03.260
提交一个Motation

01:57:03.980 --> 01:57:04.620
提交什么

01:57:04.620 --> 01:57:05.500
怎么Motation

01:57:05.500 --> 01:57:06.940
set is loading

01:57:06.940 --> 01:57:07.180
对吧

01:57:07.180 --> 01:57:07.900
我们刚才写过了

01:57:07.900 --> 01:57:08.060
是吧

01:57:08.060 --> 01:57:09.020
把它设为去

01:57:09.020 --> 01:57:09.340
对吧

01:57:09.340 --> 01:57:10.300
把它设为去

01:57:10.300 --> 01:57:10.860
那么它会

01:57:10.860 --> 01:57:12.540
在内部会调用这个函数

01:57:12.540 --> 01:57:14.140
把之前的状态传进去

01:57:14.140 --> 01:57:15.420
然后把这个去传进去

01:57:15.420 --> 01:57:15.580
对吧

01:57:15.580 --> 01:57:16.620
它就会设置成去了

01:57:17.180 --> 01:57:18.140
要用这种方式

01:57:18.540 --> 01:57:19.660
必须要提交

01:57:20.140 --> 01:57:20.700
提交什么

01:57:20.700 --> 01:57:21.660
提交一个Motation

01:57:21.660 --> 01:57:22.940
你不能直接更改的

01:57:22.940 --> 01:57:23.580
这是x

01:57:23.580 --> 01:57:24.300
它不是Motation

01:57:25.260 --> 01:57:27.020
那么把它设为去过后

01:57:27.020 --> 01:57:28.620
表示正在登录中

01:57:28.620 --> 01:57:30.780
然后现在我们是不是你可以利用

01:57:30.780 --> 01:57:33.020
我们刚才用的Login Service

01:57:33.020 --> 01:57:33.900
是不是可以用这个

01:57:33.900 --> 01:57:35.020
Login Service干嘛

01:57:35.020 --> 01:57:35.740
Login对吧

01:57:35.740 --> 01:57:36.300
登录

01:57:36.300 --> 01:57:37.180
帐号传进去

01:57:37.180 --> 01:57:37.820
Payload

01:57:39.820 --> 01:57:41.100
Login ID

01:57:43.100 --> 01:57:44.140
要传个对象进去

01:57:44.140 --> 01:57:45.100
要传个对象进去

01:57:45.100 --> 01:57:46.140
单参的

01:57:47.260 --> 01:57:48.540
那么这里要用什么

01:57:48.540 --> 01:57:48.860
Pay

01:57:50.460 --> 01:57:50.940
不

01:57:50.940 --> 01:57:52.060
这个函数不是单参的

01:57:52.060 --> 01:57:52.860
这个函数

01:57:52.860 --> 01:57:53.660
Payload

01:57:55.260 --> 01:57:56.860
点Login ID

01:57:56.860 --> 01:57:57.980
Payload的

01:57:57.980 --> 01:57:59.580
点Login Password

01:57:59.580 --> 01:57:59.900
对吧

01:57:59.900 --> 01:58:00.940
就把这样传进去

01:58:00.940 --> 01:58:02.380
然后是什么Zing

01:58:02.380 --> 01:58:03.820
拿到服务器的返回结果

01:58:03.820 --> 01:58:04.140
对不对

01:58:04.140 --> 01:58:05.020
在这里随便写

01:58:05.020 --> 01:58:05.740
这里随便写

01:58:05.740 --> 01:58:06.940
你怎么去写这个

01:58:06.940 --> 01:58:08.140
就是登录

01:58:08.140 --> 01:58:09.100
你自己这里随便写

01:58:10.140 --> 01:58:10.300
好

01:58:10.300 --> 01:58:11.580
那么登录程

01:58:11.580 --> 01:58:12.380
就是登录

01:58:12.380 --> 01:58:13.820
这里是去进行登录

01:58:14.940 --> 01:58:15.180
好

01:58:15.180 --> 01:58:17.660
那么登录完成之后

01:58:18.620 --> 01:58:19.660
拿到服务器的结果

01:58:19.660 --> 01:58:20.540
是不是有可能登录成功

01:58:20.540 --> 01:58:21.340
有可能登录失败

01:58:21.340 --> 01:58:21.740
对吧

01:58:21.740 --> 01:58:22.620
判断一下

01:58:22.620 --> 01:58:23.900
如果说你登录成功

01:58:23.980 --> 01:58:24.780
这里是不是登录成功

01:58:24.780 --> 01:58:25.820
有值

01:58:25.820 --> 01:58:26.780
登录成功

01:58:26.780 --> 01:58:28.220
我刚才写过了

01:58:28.220 --> 01:58:30.060
L是不是登录失败

01:58:30.060 --> 01:58:31.420
登录失败

01:58:31.420 --> 01:58:32.700
不管你是登录成功

01:58:32.700 --> 01:58:33.580
还是登录失败

01:58:33.580 --> 01:58:34.700
是不是我们都要把这个

01:58:35.740 --> 01:58:37.420
set一种loading设为force

01:58:37.420 --> 01:58:38.700
表示没有在登录了

01:58:38.700 --> 01:58:39.500
刚才是正在登录

01:58:39.500 --> 01:58:41.100
现在已经从服务器拿到结果了

01:58:41.100 --> 01:58:41.740
已经确定了

01:58:41.740 --> 01:58:43.100
到底有没有登录成功

01:58:43.100 --> 01:58:43.980
已经确定下来了

01:58:43.980 --> 01:58:45.340
是不是把它设为force

01:58:45.340 --> 01:58:46.460
那么登录成功过后

01:58:46.460 --> 01:58:47.500
我们要干嘛呢

01:58:47.500 --> 01:58:48.540
登录成功过后

01:58:48.540 --> 01:58:50.540
我们是不是要设置当前用户

01:58:50.540 --> 01:58:52.460
是不是把这个数据状态发生变化

01:58:52.460 --> 01:58:53.740
这是当前用户

01:58:53.820 --> 01:58:55.020
那么这里干嘛

01:58:55.020 --> 01:58:56.300
是不是context

01:58:56.300 --> 01:58:59.100
叫commet

01:58:59.100 --> 01:59:00.540
set is

01:59:00.540 --> 01:59:01.900
set是什么

01:59:01.900 --> 01:59:03.180
set user对不对

01:59:03.180 --> 01:59:04.860
触发这个码推行

01:59:04.860 --> 01:59:06.060
把什么传进去

01:59:06.060 --> 01:59:08.060
把服务器的返回结果传进去

01:59:08.060 --> 01:59:09.500
也就是这个模式下面

01:59:09.500 --> 01:59:12.220
码推行它是不知道这个数据哪来的

01:59:12.220 --> 01:59:13.020
它根本就不管

01:59:13.020 --> 01:59:14.460
我管理数据哪来的

01:59:14.460 --> 01:59:15.500
反正就是这个东西

01:59:15.500 --> 01:59:16.860
你给我我就变

01:59:16.860 --> 01:59:18.060
给我我就变

01:59:18.060 --> 01:59:19.900
那么数据来的哪来的呢

01:59:19.900 --> 01:59:21.500
取决于负重的操作

01:59:21.500 --> 01:59:22.620
往往是负重的操作

01:59:22.700 --> 01:59:24.700
拿到的

01:59:24.700 --> 01:59:26.380
是把这两块分开的

01:59:26.380 --> 01:59:27.020
登录成功是不是

01:59:27.020 --> 01:59:27.980
是这个玩意儿

01:59:27.980 --> 01:59:28.380
对吧

01:59:28.380 --> 01:59:29.020
登录失败是不是

01:59:29.020 --> 01:59:30.140
啥都不做就完事了

01:59:30.140 --> 01:59:31.740
啥都不做就完事了

01:59:31.740 --> 01:59:33.260
登录失败你还要做啥呢

01:59:33.260 --> 01:59:34.700
对不对

01:59:34.700 --> 01:59:35.020
你看

01:59:35.020 --> 01:59:36.620
login写完了

01:59:36.620 --> 01:59:38.620
login写完了

01:59:38.620 --> 01:59:41.420
我们甚至还可以把当前登录的用户

01:59:41.420 --> 01:59:43.820
把这个把这个当前登录的用户对象

01:59:43.820 --> 01:59:44.700
保存到哪呢

01:59:44.700 --> 01:59:45.980
保存到local storage里面

01:59:45.980 --> 01:59:47.260
我们做一些额外的事情

01:59:47.260 --> 01:59:48.220
额外的操作

01:59:48.220 --> 01:59:51.260
就是保存用户信息

01:59:51.260 --> 01:59:53.260
到local storage

01:59:53.260 --> 01:59:55.260
就是本地存出 storage

01:59:55.260 --> 01:59:56.460
好

01:59:56.460 --> 01:59:58.460
这里local storage set item

01:59:58.460 --> 01:59:59.820
这东西没啥好说了

01:59:59.820 --> 02:00:00.620
这个很简单

02:00:00.620 --> 02:00:01.260
随便给个嘛

02:00:01.260 --> 02:00:02.700
login user

02:00:02.700 --> 02:00:04.060
那么这里呢

02:00:04.060 --> 02:00:05.740
比如说比方说

02:00:08.860 --> 02:00:10.860
这里保存的是resp

02:00:10.860 --> 02:00:11.660
对吧

02:00:11.660 --> 02:00:13.100
当然它只能保存制服串

02:00:13.100 --> 02:00:14.220
我们要用json

02:00:14.220 --> 02:00:15.900
叫shrinky fee

02:00:15.900 --> 02:00:17.100
保存进去

02:00:17.100 --> 02:00:18.060
是吧

02:00:18.060 --> 02:00:19.020
这个是不是很简单

02:00:19.020 --> 02:00:19.820
这个很简单

02:00:19.980 --> 02:00:21.580
这也不是vue里边的知识

02:00:21.580 --> 02:00:23.180
atm5里边的知识

02:00:23.180 --> 02:00:24.380
就是保存到本地存出

02:00:24.380 --> 02:00:25.740
我们一会看一下就行了

02:00:25.740 --> 02:00:27.420
看一下就行了

02:00:27.420 --> 02:00:27.660
好

02:00:27.660 --> 02:00:29.580
那么这里是不是写完了

02:00:29.580 --> 02:00:31.420
写完了

02:00:31.420 --> 02:00:32.940
看一下是在哪

02:00:32.940 --> 02:00:34.380
处理一下

02:00:34.380 --> 02:00:35.580
stats出示状态

02:00:35.580 --> 02:00:37.820
matting怎么来发生变化

02:00:37.820 --> 02:00:39.340
有哪些变化

02:00:39.340 --> 02:00:40.380
x是

02:00:40.380 --> 02:00:41.980
那么这里面处理副作用

02:00:41.980 --> 02:00:42.620
处理副作用

02:00:42.620 --> 02:00:43.820
在副作用的操作过程中

02:00:43.820 --> 02:00:46.060
可能会不断的去提交matting

02:00:46.060 --> 02:00:48.220
让状态发生变化

02:00:48.300 --> 02:00:49.820
这是仓库里边的管理

02:00:49.820 --> 02:00:50.380
仓库的功能

02:00:50.380 --> 02:00:51.500
你看跟界面有关系吗

02:00:51.500 --> 02:00:52.780
一点关系都没有

02:00:52.780 --> 02:00:55.020
纯粹的数据处理

02:00:55.020 --> 02:00:56.940
把它提成一个单独的模块了

02:00:56.940 --> 02:00:57.900
那么现在的问题是

02:00:57.900 --> 02:00:59.980
login它怎么去调用呢

02:00:59.980 --> 02:01:03.770
现在的问题是第二个问题

02:01:03.770 --> 02:01:06.490
必不能直接调用

02:01:06.490 --> 02:01:07.690
跟那个matting一样

02:01:07.690 --> 02:01:09.290
x

02:01:09.290 --> 02:01:12.330
必须通过dispatch

02:01:12.330 --> 02:01:14.330
比如通过这个

02:01:14.330 --> 02:01:16.170
仓库对象

02:01:16.170 --> 02:01:18.810
第二dispatch

02:01:18.810 --> 02:01:20.010
调用

02:01:20.010 --> 02:01:21.210
通过一个dispatch来调用

02:01:21.210 --> 02:01:22.010
怎么调用呢

02:01:22.010 --> 02:01:23.370
我给大家演示一下

02:01:23.370 --> 02:01:25.370
刚才我演示了commet

02:01:25.370 --> 02:01:26.810
刚才我们演示了commet

02:01:26.810 --> 02:01:28.650
那么现在我们来演示一下

02:01:28.650 --> 02:01:33.900
这个

02:01:33.900 --> 02:01:35.340
我们把这个store

02:01:35.340 --> 02:01:36.540
放到window里边

02:01:36.540 --> 02:01:38.060
放到window里边

02:01:38.060 --> 02:01:39.740
我们在控制台里边演示

02:01:39.740 --> 02:01:41.100
放到window里边

02:01:41.100 --> 02:01:42.300
store

02:01:42.300 --> 02:01:42.940
放到window里边

02:01:42.940 --> 02:01:45.340
我们方便来控制台给大家调试

02:01:45.340 --> 02:01:46.540
那么现在我们可以看到

02:01:46.540 --> 02:01:47.340
这里一个store了

02:01:47.340 --> 02:01:48.540
一个仓库对象了

02:01:48.540 --> 02:01:49.420
仓库对象

02:01:49.420 --> 02:01:50.140
仓库对象里边

02:01:50.140 --> 02:01:51.660
除了有commet之外

02:01:51.660 --> 02:01:53.420
还有一个什么dispatch

02:01:54.380 --> 02:01:55.020
dispatch

02:01:55.020 --> 02:01:56.220
叫分发

02:01:56.220 --> 02:01:56.780
exing

02:01:56.780 --> 02:01:58.380
它一定是分发出去了

02:01:58.380 --> 02:02:00.060
dispatch

02:02:00.060 --> 02:02:00.220
好

02:02:00.220 --> 02:02:01.900
那么dispatch里边填上了

02:02:01.900 --> 02:02:03.820
第一个填的是exing的名称

02:02:03.820 --> 02:02:05.340
填的是exing的名称

02:02:05.340 --> 02:02:06.300
exing的什么名字

02:02:06.300 --> 02:02:07.180
是不是叫logging

02:02:07.180 --> 02:02:07.500
对吧

02:02:07.500 --> 02:02:08.780
exing的名字叫logging

02:02:08.780 --> 02:02:09.580
第二台都填上了

02:02:09.580 --> 02:02:10.860
填的是个payload的

02:02:10.860 --> 02:02:11.580
怎么约定的

02:02:11.580 --> 02:02:12.540
约定好了的

02:02:12.540 --> 02:02:13.580
你要给我传两个数据

02:02:13.580 --> 02:02:14.460
logging id

02:02:14.460 --> 02:02:16.060
二的命

02:02:16.060 --> 02:02:17.820
logging password的

02:02:17.820 --> 02:02:18.780
123123

02:02:18.780 --> 02:02:20.380
然后传的这个东西

02:02:20.380 --> 02:02:20.620
好

02:02:20.620 --> 02:02:21.740
一回车

02:02:21.740 --> 02:02:23.340
一回车

02:02:24.060 --> 02:02:25.260
所以它就完成了

02:02:25.260 --> 02:02:25.980
接下来我们来看一下

02:02:25.980 --> 02:02:27.580
仓库里边的状态

02:02:27.580 --> 02:02:29.020
stop

02:02:29.020 --> 02:02:30.060
就是

02:02:30.060 --> 02:02:31.020
仓库里边的状态

02:02:31.020 --> 02:02:33.020
状态状态就是那个

02:02:34.140 --> 02:02:35.660
set

02:02:35.660 --> 02:02:37.180
看一下仓库状态

02:02:37.180 --> 02:02:40.060
状态里边logging有准的看一下

02:02:40.060 --> 02:02:40.860
data

02:02:40.860 --> 02:02:42.220
是有数据了

02:02:42.220 --> 02:02:43.020
你看logging id

02:02:43.020 --> 02:02:44.300
是不是拿到数据了

02:02:44.300 --> 02:02:45.180
对吧

02:02:45.180 --> 02:02:47.180
仓库里的仓库是不是有值的

02:02:47.180 --> 02:02:48.060
你都定为forced

02:02:48.060 --> 02:02:48.300
对吧

02:02:48.300 --> 02:02:48.940
是不是有值的

02:02:48.940 --> 02:02:49.340
对不对

02:02:49.340 --> 02:02:50.940
而且它是经过几次变化

02:02:50.940 --> 02:02:52.620
才变成这样的值

02:02:52.700 --> 02:02:53.740
再后再后我们再看一下

02:02:53.740 --> 02:02:55.660
我们本地存处

02:02:55.660 --> 02:02:57.820
我们再看一下我们本地存处

02:02:57.820 --> 02:02:58.620
storage

02:02:58.620 --> 02:03:00.940
local storage

02:03:00.940 --> 02:03:01.740
本地存处说

02:03:01.740 --> 02:03:02.620
如果说你

02:03:02.620 --> 02:03:03.340
不是能了解的话

02:03:03.340 --> 02:03:06.140
其实这一块你直接忽略掉也行

02:03:06.140 --> 02:03:07.660
也找到招不成多少影响

02:03:07.660 --> 02:03:08.220
你看一下

02:03:08.220 --> 02:03:09.660
这里边是不是存了一个logging user

02:03:09.660 --> 02:03:10.380
对吧

02:03:10.380 --> 02:03:11.740
你看是不是存了这么一个东西

02:03:11.740 --> 02:03:12.380
logging id

02:03:12.380 --> 02:03:12.860
二的命

02:03:12.860 --> 02:03:13.180
dame

02:03:13.180 --> 02:03:13.980
我也超级管理员

02:03:13.980 --> 02:03:15.500
是不是存了本地存处里边

02:03:15.500 --> 02:03:16.460
本地存处的好处在于

02:03:16.460 --> 02:03:17.020
你刷新页面

02:03:17.020 --> 02:03:18.300
它不会丢失

02:03:18.300 --> 02:03:19.180
不然你放到编帐里边

02:03:19.180 --> 02:03:20.220
它会丢失的

02:03:20.220 --> 02:03:21.740
本地存刷就不会丢失

02:03:21.820 --> 02:03:22.540
不会丢失

02:03:23.660 --> 02:03:24.540
这个是不搞定的

02:03:24.540 --> 02:03:25.660
这是副作用操作

02:03:25.660 --> 02:03:26.940
副作用操作

02:03:26.940 --> 02:03:29.580
那么还有没有别的副作用操作呢

02:03:29.580 --> 02:03:30.300
这里有没有别的呢

02:03:30.300 --> 02:03:31.500
当然有

02:03:31.500 --> 02:03:33.020
很伦想的还有一个logging out

02:03:33.020 --> 02:03:33.500
对吧

02:03:33.500 --> 02:03:34.540
logging out登出

02:03:34.540 --> 02:03:35.180
对不对

02:03:35.180 --> 02:03:36.700
登出

02:03:36.700 --> 02:03:38.860
就是退出登录

02:03:38.860 --> 02:03:40.140
退出登录

02:03:40.140 --> 02:03:41.660
退出登录怎么退出

02:03:41.660 --> 02:03:43.180
怎么退出登录

02:03:43.180 --> 02:03:44.380
怎么来退出登录

02:03:44.380 --> 02:03:45.820
退出登录的方式

02:03:45.820 --> 02:03:46.780
是不是这样子写的

02:03:46.780 --> 02:03:48.060
首先

02:03:48.060 --> 02:03:49.740
状态要发怎么发生变化

02:03:49.820 --> 02:03:51.980
状态也是不是要提交一个commet

02:03:51.980 --> 02:03:53.180
set user

02:03:53.180 --> 02:03:54.780
也要把它设置为now

02:03:54.780 --> 02:03:55.500
对不对

02:03:55.500 --> 02:03:56.780
是不是把游戏设置为now

02:03:56.780 --> 02:03:57.500
对不对

02:03:57.500 --> 02:03:58.380
这个没问题吧

02:03:58.380 --> 02:03:59.180
退出登录了

02:03:59.180 --> 02:04:00.780
状态是不是得发生变化

02:04:00.780 --> 02:04:01.660
然后还要干嘛

02:04:01.660 --> 02:04:03.100
是不是要把本地存刷清空

02:04:03.100 --> 02:04:04.700
这些都是副作用

02:04:04.700 --> 02:04:05.580
这个东西副作用

02:04:05.580 --> 02:04:06.140
上面这句话

02:04:06.140 --> 02:04:07.980
大家还不是副作用

02:04:07.980 --> 02:04:08.300
好

02:04:08.300 --> 02:04:10.780
本地存刷清空remove item

02:04:10.780 --> 02:04:11.660
把这种logging id

02:04:11.660 --> 02:04:14.140
这个本地存刷给移除掉

02:04:14.140 --> 02:04:15.100
就是退出登录

02:04:15.100 --> 02:04:16.140
就这么简单

02:04:16.140 --> 02:04:17.260
这么简单

02:04:17.260 --> 02:04:18.860
退出登录这是

02:04:18.940 --> 02:04:19.580
好 再来

02:04:19.580 --> 02:04:20.460
还有啥呢

02:04:20.460 --> 02:04:21.900
还要一开始刷新

02:04:21.900 --> 02:04:24.220
因为我一开始可能没有触发X型对吧

02:04:24.220 --> 02:04:26.140
一开始可能没有触发X型

02:04:26.140 --> 02:04:28.620
那么一开始刷新页面的时候

02:04:28.620 --> 02:04:30.060
最开始的时候

02:04:30.060 --> 02:04:31.660
我得运行一次

02:04:31.660 --> 02:04:33.020
叫做

02:04:33.020 --> 02:04:35.740
叫做同步本地存出

02:04:35.740 --> 02:04:39.580
sync local

02:04:39.580 --> 02:04:40.460
这是什么呢

02:04:40.460 --> 02:04:43.580
就是初始

02:04:43.580 --> 02:04:47.900
划使同步本地存出

02:04:47.980 --> 02:04:49.500
因为我们的状态在哪呢

02:04:49.500 --> 02:04:50.460
状态这些东西

02:04:50.460 --> 02:04:51.180
不非是对象

02:04:51.180 --> 02:04:52.700
它在那一存里边

02:04:52.700 --> 02:04:54.540
你重新刷新页面是不是全没了

02:04:54.540 --> 02:04:55.820
你哪怕之前登录过了

02:04:55.820 --> 02:04:57.500
你刷新页面是不是有全没了

02:04:57.500 --> 02:04:58.060
对不对

02:04:58.060 --> 02:04:59.260
又变成没登录了

02:04:59.260 --> 02:05:01.100
所以说既然我们本地存出里边有

02:05:01.100 --> 02:05:03.500
本地存出刷新是不会消失的

02:05:03.500 --> 02:05:04.940
我们需要把刷新的时候

02:05:04.940 --> 02:05:07.260
需要把本地存出同步到登录里边来

02:05:07.260 --> 02:05:07.500
是吧

02:05:07.500 --> 02:05:08.620
同步到这里边来

02:05:08.620 --> 02:05:08.780
好

02:05:08.780 --> 02:05:11.100
那么同步本地存出

02:05:11.100 --> 02:05:12.220
怎么来同步呢

02:05:12.220 --> 02:05:13.740
怎么来同步呢

02:05:13.740 --> 02:05:14.540
看着

02:05:14.540 --> 02:05:15.500
我们首先从本地

02:05:15.500 --> 02:05:16.300
首先判断一下

02:05:16.300 --> 02:05:18.300
本地存出里边有没有东西

02:05:18.300 --> 02:05:19.500
先从本地存出里边去拿

02:05:19.500 --> 02:05:20.300
拿东西

02:05:20.300 --> 02:05:21.100
拿东西

02:05:21.100 --> 02:05:24.300
从local storage

02:05:24.300 --> 02:05:25.900
get item

02:05:25.900 --> 02:05:26.700
logging

02:05:26.700 --> 02:05:27.100
由这

02:05:27.100 --> 02:05:28.300
是不是从里边拿东西

02:05:28.300 --> 02:05:29.420
判断一下

02:05:29.420 --> 02:05:32.700
当前本地存出里面拿出来的东西呢

02:05:32.700 --> 02:05:34.460
如果有拿出来的东西

02:05:34.460 --> 02:05:36.060
如果东西已经拿出来了

02:05:36.060 --> 02:05:37.420
已经拿出来的东西了

02:05:37.420 --> 02:05:39.420
说明是不是已经登录过了

02:05:39.420 --> 02:05:41.180
已经登录过了

02:05:41.180 --> 02:05:42.540
就可能继续说

02:05:42.540 --> 02:05:44.060
这个时候已经登录过了

02:05:44.060 --> 02:05:45.260
但是你页面刷新了

02:05:45.340 --> 02:05:46.780
之前的数据丢失了

02:05:46.780 --> 02:05:48.140
就内存里边的数据丢失了

02:05:48.140 --> 02:05:49.500
但是本地存出里边知道

02:05:49.500 --> 02:05:50.860
它之前是登录过的

02:05:50.860 --> 02:05:51.980
那怎么办呢

02:05:51.980 --> 02:05:52.940
把这个数据拿出来

02:05:52.940 --> 02:05:53.340
你看一下

02:05:53.340 --> 02:05:54.540
这个本地存出里边的数据

02:05:54.540 --> 02:05:56.220
它是一个接胜格式的字幕刷

02:05:56.220 --> 02:05:56.780
看没

02:05:56.780 --> 02:05:58.060
是不是一个字幕刷

02:05:58.060 --> 02:05:58.860
这么个字幕刷

02:05:58.860 --> 02:05:59.100
好

02:05:59.100 --> 02:06:00.060
我们要通过这种模式

02:06:00.060 --> 02:06:01.900
把它转换成一个对象

02:06:01.900 --> 02:06:02.780
接胜

02:06:02.780 --> 02:06:03.980
get post

02:06:03.980 --> 02:06:05.260
把这个本地存出里边的东西

02:06:05.260 --> 02:06:07.020
转换成对象

02:06:07.020 --> 02:06:09.500
就是一个优劳对象

02:06:09.500 --> 02:06:10.140
说拿

02:06:10.140 --> 02:06:11.340
拿出来

02:06:11.340 --> 02:06:13.340
拿出本地存出的用户对象

02:06:13.420 --> 02:06:15.420
拿出来过后干嘛

02:06:15.420 --> 02:06:16.380
是不是又来了

02:06:16.380 --> 02:06:17.660
contact is a comets

02:06:17.660 --> 02:06:19.100
提交更改

02:06:19.100 --> 02:06:20.060
set user

02:06:20.060 --> 02:06:21.260
把用户传进去

02:06:21.260 --> 02:06:22.460
对吧

02:06:22.460 --> 02:06:24.620
同步到状态

02:06:24.620 --> 02:06:26.460
这些都是副作用操作

02:06:26.460 --> 02:06:28.060
所以我们写到x里面

02:06:28.060 --> 02:06:30.060
同步到状态

02:06:30.060 --> 02:06:31.580
然后l是

02:06:31.580 --> 02:06:33.580
如果说本地存出里边也没有

02:06:33.580 --> 02:06:35.580
本地存出里边是啥都没有

02:06:35.580 --> 02:06:37.100
那是不是啥都不操作就完事了

02:06:37.100 --> 02:06:37.580
对吧

02:06:37.580 --> 02:06:39.100
我就不用去同步任何东西了

02:06:39.100 --> 02:06:40.540
然后l是

02:06:40.540 --> 02:06:41.980
本地存出里边也没有

02:06:41.980 --> 02:06:43.420
同步任何东西了

02:06:43.420 --> 02:06:45.020
如果说本地存出里边啥都没有

02:06:45.020 --> 02:06:47.420
我就不用去同步任何东西了

02:06:47.420 --> 02:06:47.980
好吧

02:06:47.980 --> 02:06:48.860
这就写完了

02:06:48.860 --> 02:06:49.340
对不对

02:06:49.340 --> 02:06:50.460
那就写完了

02:06:50.460 --> 02:06:50.700
好

02:06:50.700 --> 02:06:52.300
那么我们一开始的时候

02:06:52.300 --> 02:06:53.260
在注意开始的时候

02:06:53.260 --> 02:06:55.020
是不是要同步一次本地存出

02:06:55.020 --> 02:06:55.340
对吧

02:06:55.340 --> 02:06:56.460
是不是要同步一次

02:06:56.460 --> 02:06:56.620
好

02:06:56.620 --> 02:06:57.260
那么比方说

02:06:57.260 --> 02:06:57.980
我们在这里

02:06:57.980 --> 02:07:00.380
store是不是也先去触发一次

02:07:00.380 --> 02:07:01.820
store dispatch

02:07:01.820 --> 02:07:04.060
是不是也先触发一次什么

02:07:04.060 --> 02:07:04.940
sync

02:07:04.940 --> 02:07:05.820
login

02:07:05.820 --> 02:07:07.340
sync user

02:07:07.340 --> 02:07:08.620
sync local

02:07:08.620 --> 02:07:09.980
sync local

02:07:09.980 --> 02:07:10.940
是不是也触发一个

02:07:11.020 --> 02:07:12.540
那么这一次他没有配楼的

02:07:12.540 --> 02:07:13.900
他这一次没有额外的参数

02:07:13.900 --> 02:07:15.180
所以说你不需要配楼的

02:07:15.180 --> 02:07:16.700
你不需要传配楼的

02:07:16.700 --> 02:07:16.860
好

02:07:16.860 --> 02:07:19.260
这里同步本地存出

02:07:21.100 --> 02:07:21.340
好

02:07:21.340 --> 02:07:21.740
咱们看一下

02:07:22.940 --> 02:07:23.420
这样子

02:07:23.420 --> 02:07:27.580
我们由于我们一开始刷新一面过后

02:07:27.580 --> 02:07:29.500
它有一个同步本地存出

02:07:29.500 --> 02:07:30.860
那么也就意味着

02:07:30.860 --> 02:07:32.700
我们在这里通过仓库

02:07:32.700 --> 02:07:34.140
拿去拿状态

02:07:34.140 --> 02:07:35.740
拿这个login user

02:07:35.740 --> 02:07:37.500
我们来看一下login user里边

02:07:37.500 --> 02:07:38.380
是不是一开始

02:07:38.380 --> 02:07:39.660
我们什么都没有做的时候

02:07:39.660 --> 02:07:40.620
它的数据都出来了

02:07:40.620 --> 02:07:41.100
对吧

02:07:41.100 --> 02:07:44.060
因为它从本地存出里边是不是取出来了

02:07:44.060 --> 02:07:44.380
对不对

02:07:46.300 --> 02:07:48.460
登出这里不要去考虑什么路由

02:07:48.460 --> 02:07:49.180
我建议你

02:07:49.900 --> 02:07:53.180
我建议你在这仓库里边不要去考虑路由

02:07:53.180 --> 02:07:55.020
仓库里边只考虑数据

02:07:55.020 --> 02:07:55.900
只考虑数据

02:07:55.900 --> 02:07:57.020
不要去考虑别的

02:07:57.020 --> 02:07:58.540
他就想这个数据怎么变化

02:07:58.540 --> 02:07:59.580
有哪些变化

02:07:59.580 --> 02:08:01.180
我们需要怎么来处理数据

02:08:01.180 --> 02:08:03.500
完全专心自质地去考虑数据

02:08:03.500 --> 02:08:04.860
实际上你们以后在公司里边

02:08:05.820 --> 02:08:06.860
很有可能

02:08:07.820 --> 02:08:09.740
专门有人开发这个仓库

02:08:10.460 --> 02:08:11.500
专门有人来开发数据

02:08:11.500 --> 02:08:13.020
他都不知道界面是啥

02:08:13.020 --> 02:08:14.540
但是他知道功能是啥

02:08:14.540 --> 02:08:16.060
我不知道界面上怎么去登录的

02:08:16.060 --> 02:08:17.580
但是我知道功能有个登录

02:08:17.580 --> 02:08:19.180
我就可以把数据写出来

02:08:19.180 --> 02:08:20.780
也就是这里是不依赖界面

02:08:20.780 --> 02:08:22.860
也不是依赖任何路由其他东西的

02:08:22.860 --> 02:08:23.820
什么都不依赖

02:08:23.820 --> 02:08:25.260
我只处理数据

02:08:25.260 --> 02:08:26.780
专门有人写界面

02:08:26.780 --> 02:08:28.060
专门有人写数据

02:08:28.060 --> 02:08:29.020
可以分开来写

02:08:30.140 --> 02:08:30.540
看呗

02:08:31.500 --> 02:08:32.300
好那么现在呢

02:08:32.300 --> 02:08:33.900
我们数据是不是到仓库里边了

02:08:33.900 --> 02:08:35.580
你看这个仓库功能很强大

02:08:35.660 --> 02:08:37.020
它能够保存数据

02:08:37.020 --> 02:08:38.380
它能够变化数据

02:08:38.380 --> 02:08:39.660
它还能处理一些副作用

02:08:40.780 --> 02:08:41.580
那么现在呢

02:08:41.580 --> 02:08:43.340
我们再回到组建里边

02:08:43.340 --> 02:08:44.700
组建里边你看一下

02:08:44.700 --> 02:08:45.740
这里还需要data吗

02:08:46.300 --> 02:08:47.100
所以不需要了

02:08:47.740 --> 02:08:48.540
数据在哪

02:08:48.540 --> 02:08:49.740
数据在仓库里边

02:08:51.100 --> 02:08:52.460
数据是不是在仓库里边

02:08:54.060 --> 02:08:55.340
数据就在仓库里边

02:08:55.340 --> 02:08:56.700
这里还是要个data嘛

02:08:56.700 --> 02:08:57.980
要不然来粘存一下

02:08:57.980 --> 02:08:59.900
这个data的作用是粘存

02:08:59.900 --> 02:09:01.740
这个login id和login password的

02:09:01.740 --> 02:09:02.460
粘存一下

02:09:03.500 --> 02:09:04.300
粘存数据

02:09:06.540 --> 02:09:08.300
粘存数据

02:09:08.300 --> 02:09:09.420
粘存数据

02:09:09.420 --> 02:09:10.380
好那么登录的时候

02:09:10.380 --> 02:09:11.740
你看一下怎么登录

02:09:11.740 --> 02:09:12.380
登录的时候

02:09:12.380 --> 02:09:13.740
我们调用这个handlelogin

02:09:13.740 --> 02:09:14.300
对吧

02:09:14.300 --> 02:09:14.860
登录

02:09:14.860 --> 02:09:16.220
登录怎么登录

02:09:16.220 --> 02:09:18.060
是不是要使用仓库啊

02:09:18.060 --> 02:09:19.180
要用仓库来登录

02:09:19.180 --> 02:09:19.500
对吧

02:09:19.500 --> 02:09:21.420
要去触发什么仓库的副作用

02:09:22.380 --> 02:09:23.180
副作用处理

02:09:23.180 --> 02:09:23.980
就是这个login

02:09:23.980 --> 02:09:24.380
对吧

02:09:24.380 --> 02:09:24.700
是吧

02:09:24.700 --> 02:09:25.340
要触发这个东西

02:09:25.340 --> 02:09:26.140
要分发action

02:09:26.700 --> 02:09:27.820
好怎么来分发呢

02:09:27.820 --> 02:09:28.780
好这里有一个知识

02:09:32.220 --> 02:09:33.740
就是vux

02:09:33.740 --> 02:09:35.340
vux实际上是独立的

02:09:35.340 --> 02:09:37.580
实际上它的核心代码是独立的

02:09:37.660 --> 02:09:39.340
跟vux没有任何关系

02:09:39.340 --> 02:09:41.580
但是它有一部分代码是跟vux关联起来的

02:09:42.620 --> 02:09:43.180
联合

02:09:44.140 --> 02:09:45.740
就是加vux

02:09:47.260 --> 02:09:49.100
就是在vux的组件中

02:09:49.100 --> 02:09:49.900
在组件中

02:09:51.020 --> 02:09:53.100
在vux组件中

02:09:55.020 --> 02:09:55.580
应该这样说

02:09:58.620 --> 02:10:03.100
当注册了vux后

02:10:03.580 --> 02:10:07.580
什么叫注册vux在这里

02:10:08.540 --> 02:10:10.140
这里在注册vux

02:10:10.140 --> 02:10:11.100
可不可以注册进去

02:10:11.100 --> 02:10:11.900
配置进去

02:10:11.900 --> 02:10:12.940
当配置了

02:10:12.940 --> 02:10:13.980
我们用配置了

02:10:13.980 --> 02:10:15.580
当配置了vux后

02:10:17.500 --> 02:10:18.940
我讲这么久你们反不反啊

02:10:19.420 --> 02:10:20.300
你们反不反啊

02:10:25.320 --> 02:10:27.240
当配置了vux后

02:10:27.240 --> 02:10:28.120
不反就好

02:10:28.120 --> 02:10:28.680
反正就好

02:10:28.680 --> 02:10:29.960
我讲了我觉得讲了太久了

02:10:29.960 --> 02:10:31.240
我怕你们听反了

02:10:31.720 --> 02:10:33.160
当配置了vux之后

02:10:35.000 --> 02:10:37.080
我也是希望能够尽量给你们多讲的东西

02:10:38.040 --> 02:10:40.120
当配置到vux后

02:10:41.720 --> 02:10:43.480
所有vux实力

02:10:43.480 --> 02:10:44.760
包括组件实力

02:10:45.160 --> 02:10:47.640
都会出现一个属性

02:10:47.640 --> 02:10:48.440
什么属性呢

02:10:49.000 --> 02:10:49.640
属性的名字

02:10:49.640 --> 02:10:50.680
一看你就知道它意思了

02:10:52.040 --> 02:10:53.320
是不是跟那个路由类似差不多

02:10:53.320 --> 02:10:53.560
对吧

02:10:53.560 --> 02:10:54.520
它是不是得到一个属性

02:10:54.520 --> 02:10:55.640
Stone对不对

02:10:55.640 --> 02:10:56.760
好那么这里呢

02:10:56.760 --> 02:10:57.880
我要怎么来触发

02:10:58.440 --> 02:10:58.840
Stone

02:10:59.720 --> 02:11:01.160
什么commet

02:11:01.800 --> 02:11:02.360
对吧

02:11:02.360 --> 02:11:03.000
是不是这样子

02:11:04.600 --> 02:11:06.120
都用什么Dispatch

02:11:06.120 --> 02:11:06.760
对不对

02:11:06.920 --> 02:11:07.960
是不是Dispatch

02:11:07.960 --> 02:11:08.760
Dispatch

02:11:09.640 --> 02:11:10.120
对吧

02:11:10.120 --> 02:11:11.080
Dispatch

02:11:11.080 --> 02:11:12.280
好那么这个Dispatch

02:11:13.320 --> 02:11:14.680
里边写啥呢

02:11:14.680 --> 02:11:15.320
触发啥呢

02:11:15.880 --> 02:11:16.760
触发那个就是

02:11:18.120 --> 02:11:20.360
触发那个就是我们的Action

02:11:20.360 --> 02:11:21.400
Action的名称是啥

02:11:21.400 --> 02:11:22.440
看一下刚才的Action名称

02:11:22.440 --> 02:11:23.000
Login对吧

02:11:23.000 --> 02:11:24.120
触发这个Login Action

02:11:24.680 --> 02:11:25.560
这是名称

02:11:25.560 --> 02:11:26.760
然后后面是Payload

02:11:26.760 --> 02:11:27.640
Payload都要写啥

02:11:27.640 --> 02:11:29.000
所以要写两个Login ID

02:11:30.360 --> 02:11:31.080
等于啥呢

02:11:31.080 --> 02:11:32.760
就等于ZS.Login ID

02:11:32.760 --> 02:11:33.000
对吧

02:11:33.000 --> 02:11:35.640
我们占存的状态里边一个Login ID

02:11:35.640 --> 02:11:36.600
Login Password

02:11:36.920 --> 02:11:38.200
ZS.Login

02:11:39.320 --> 02:11:39.960
我想我一跳

02:11:39.960 --> 02:11:40.840
我以为我流鼻血了

02:11:41.400 --> 02:11:42.280
Login Password

02:11:43.400 --> 02:11:43.720
是吧

02:11:43.720 --> 02:11:44.840
把这两个数据扔进去

02:11:44.840 --> 02:11:45.080
对吧

02:11:45.080 --> 02:11:45.880
这是我们的复杂

02:11:46.360 --> 02:11:46.760
对不对

02:11:46.760 --> 02:11:47.160
复杂

02:11:47.480 --> 02:11:48.600
把这个扔进去

02:11:48.600 --> 02:11:50.040
扔进去它是不是完成登录了

02:11:50.040 --> 02:11:50.360
对吧

02:11:50.360 --> 02:11:51.080
它就能知道

02:11:51.080 --> 02:11:52.280
它有没有完成登录

02:11:52.280 --> 02:11:52.600
对不对

02:11:52.600 --> 02:11:53.080
它就去

02:11:53.080 --> 02:11:54.040
它就去做这件事

02:11:54.280 --> 02:11:55.160
它就去做这件事

02:11:56.200 --> 02:11:56.760
要这一次吧

02:11:57.240 --> 02:11:57.640
好

02:11:57.640 --> 02:11:58.040
保存

02:11:58.200 --> 02:11:58.520
保存

02:12:01.000 --> 02:12:01.800
咱们来试一下

02:12:02.920 --> 02:12:03.720
试一下

02:12:03.720 --> 02:12:05.080
我们先把本地存储三了

02:12:06.040 --> 02:12:07.080
起码本地存储

02:12:09.080 --> 02:12:10.760
我们不删本地存储嘛

02:12:10.760 --> 02:12:11.400
先删了

02:12:11.400 --> 02:12:11.800
删了

02:12:11.800 --> 02:12:12.520
本地存储删了

02:12:15.460 --> 02:12:16.180
这个删掉

02:12:16.180 --> 02:12:16.740
进内置

02:12:17.380 --> 02:12:18.580
这东西啥用啊

02:12:18.580 --> 02:12:19.140
删掉

02:12:19.140 --> 02:12:19.700
删掉得了

02:12:20.260 --> 02:12:20.980
进内置

02:12:20.980 --> 02:12:21.300
删了

02:12:21.300 --> 02:12:21.620
删了

02:12:21.620 --> 02:12:22.020
删了

02:12:22.020 --> 02:12:22.740
删了

02:12:22.740 --> 02:12:23.380
删掉

02:12:23.380 --> 02:12:24.340
本地存储删掉

02:12:24.340 --> 02:12:25.060
那么接下来

02:12:25.060 --> 02:12:25.940
我们来点登录

02:12:26.740 --> 02:12:27.620
随便下写一个

02:12:28.980 --> 02:12:29.460
点登录

02:12:30.340 --> 02:12:31.220
我们得首先重新刷新

02:12:31.220 --> 02:12:31.780
重新刷新

02:12:32.420 --> 02:12:33.060
下写一个

02:12:33.060 --> 02:12:33.540
点登录

02:12:34.180 --> 02:12:34.900
没有反应对吧

02:12:34.900 --> 02:12:35.300
没有反应

02:12:35.300 --> 02:12:36.580
我们来看一下仓库里边

02:12:36.980 --> 02:12:37.460
仓库里边

02:12:37.460 --> 02:12:38.020
State

02:12:38.020 --> 02:12:38.660
Nokin U-Dirt

02:12:39.540 --> 02:12:40.340
看一下有没有数据

02:12:41.380 --> 02:12:41.940
So now

02:12:41.940 --> 02:12:42.340
对吧

02:12:42.340 --> 02:12:43.060
So now

02:12:43.060 --> 02:12:43.540
Force

02:12:43.540 --> 02:12:44.340
is not in force

02:12:45.140 --> 02:12:45.620
没问题吧

02:12:46.180 --> 02:12:46.500
好

02:12:46.500 --> 02:12:47.060
那么现在呢

02:12:47.060 --> 02:12:48.420
我们看本地存储里边有没有东西

02:12:48.420 --> 02:12:49.140
什么没东西

02:12:49.140 --> 02:12:49.460
对吧

02:12:49.460 --> 02:12:49.940
空的

02:12:49.940 --> 02:12:50.100
好

02:12:50.100 --> 02:12:51.460
那么先我们写个正确的

02:12:51.460 --> 02:12:52.260
Udemy

02:12:52.260 --> 02:12:52.660
123

02:12:52.660 --> 02:12:53.140
123

02:12:53.140 --> 02:12:54.100
点登录

02:12:54.100 --> 02:12:54.980
我这里没有提示

02:12:54.980 --> 02:12:57.060
有时候感觉看不见效果

02:12:57.060 --> 02:12:58.020
那么我们看一下这个

02:12:58.020 --> 02:12:58.820
Nokin U-Dirt里边

02:13:00.020 --> 02:13:00.980
是有数据了

02:13:00.980 --> 02:13:01.300
对吧

02:13:01.300 --> 02:13:02.260
是有数据了

02:13:02.260 --> 02:13:03.300
然后再看本地存储

02:13:03.780 --> 02:13:05.140
本地存储里边是不是有数据了

02:13:05.140 --> 02:13:05.540
对吧

02:13:05.540 --> 02:13:06.420
有数据了

02:13:06.580 --> 02:13:08.180
是不是就连到仓库里边去了

02:13:08.180 --> 02:13:09.060
对不对

02:13:09.060 --> 02:13:10.020
就连到仓库里去了

02:13:10.020 --> 02:13:11.380
就这么一个意思

02:13:11.380 --> 02:13:11.620
好

02:13:11.620 --> 02:13:12.340
那么现在呢

02:13:12.340 --> 02:13:12.900
比方说

02:13:12.900 --> 02:13:14.420
我们还要做提示

02:13:14.420 --> 02:13:16.020
它有没有东西成功呢

02:13:16.020 --> 02:13:16.820
要做提示

02:13:17.380 --> 02:13:19.140
那么我们现在怎么样知道

02:13:19.140 --> 02:13:20.180
这个dispatch之后

02:13:20.180 --> 02:13:22.420
这个X型之后的状态是啥呢

02:13:22.420 --> 02:13:24.020
我们怎么知道这个状态是啥呢

02:13:25.140 --> 02:13:27.140
X型里边可以返回东西

02:13:27.700 --> 02:13:28.820
是可以返回东西的

02:13:28.820 --> 02:13:29.780
在X型里边

02:13:29.780 --> 02:13:31.220
也说这里我们可以返回

02:13:31.220 --> 02:13:32.340
可以return

02:13:32.340 --> 02:13:33.300
返回一个东西

02:13:34.500 --> 02:13:35.780
那么返回啥呢

02:13:35.860 --> 02:13:36.740
返回的是

02:13:37.700 --> 02:13:38.900
或者是force

02:13:39.460 --> 02:13:41.300
返回的是true或者是force

02:13:41.300 --> 02:13:43.140
但是遗憾的是啥呢

02:13:43.140 --> 02:13:43.620
遗憾呢

02:13:43.620 --> 02:13:44.820
我们这里是一步处理

02:13:44.820 --> 02:13:45.220
看到没

02:13:46.100 --> 02:13:47.700
我们这里是不是一步处理

02:13:47.700 --> 02:13:48.500
对吧

02:13:48.500 --> 02:13:51.140
我们要等一会才会运行这个函数

02:13:51.140 --> 02:13:54.660
这个函数要一秒钟之后才会运行

02:13:55.380 --> 02:13:56.100
一秒钟之后

02:13:56.100 --> 02:13:57.940
这个login早就运行结束了

02:13:57.940 --> 02:13:58.100
对吧

02:13:58.100 --> 02:13:58.900
它是一步处理的

02:13:58.900 --> 02:13:59.460
看到没

02:13:59.460 --> 02:14:00.340
这一块有点难度

02:14:01.300 --> 02:14:02.580
但是这里没办法

02:14:02.580 --> 02:14:04.020
必须要用到这一块的知识

02:14:04.020 --> 02:14:04.900
如果说你这里

02:14:04.980 --> 02:14:06.340
就是如果说你不提示的话

02:14:06.340 --> 02:14:06.980
无所谓

02:14:06.980 --> 02:14:07.940
无所谓

02:14:07.940 --> 02:14:08.900
但是你要提示

02:14:08.900 --> 02:14:09.940
你要挑转页面的话

02:14:09.940 --> 02:14:11.140
就必须要用到这个知识的

02:14:11.140 --> 02:14:12.500
你必须要用到这个知识的

02:14:12.500 --> 02:14:13.780
那我肯定知道

02:14:13.780 --> 02:14:15.060
你没有学过一步

02:14:15.060 --> 02:14:16.100
没有学过promise

02:14:16.100 --> 02:14:17.780
你这一块肯定理解不了

02:14:17.780 --> 02:14:18.740
肯定理解不了

02:14:18.740 --> 02:14:19.300
正常的

02:14:19.300 --> 02:14:20.020
那么这一块

02:14:20.020 --> 02:14:21.700
你可以心里面有个底

02:14:21.700 --> 02:14:22.660
我先放一放

02:14:22.660 --> 02:14:24.260
知道这一块还有一点欠缺

02:14:24.260 --> 02:14:25.140
那么咱们以后

02:14:25.140 --> 02:14:26.580
学新的promise之后

02:14:26.580 --> 02:14:27.940
你再回过头来看这一块

02:14:27.940 --> 02:14:28.740
你就能看懂了

02:14:29.380 --> 02:14:30.980
那么这里我会怎么处理呢

02:14:30.980 --> 02:14:31.860
我会要正常处理

02:14:31.860 --> 02:14:33.300
我把这个函数变成一步函数

02:14:35.860 --> 02:14:36.980
这一块我再说一次

02:14:36.980 --> 02:14:38.500
肯定有同学看不懂

02:14:38.500 --> 02:14:39.860
这一块看不懂的话

02:14:39.860 --> 02:14:41.380
放一放

02:14:41.380 --> 02:14:42.340
这一块不是我们的

02:14:42.340 --> 02:14:43.540
vux的知识

02:14:43.540 --> 02:14:44.980
不是vux的知识

02:14:44.980 --> 02:14:46.580
你们以后学到promise的话

02:14:46.580 --> 02:14:47.540
再回过头来看

02:14:47.540 --> 02:14:48.340
就看懂了

02:14:48.340 --> 02:14:50.260
我这里只能直接写了

02:14:50.260 --> 02:14:51.540
因为这一块没办法

02:14:51.540 --> 02:14:52.900
他要用到这一块知识

02:14:55.620 --> 02:14:56.900
很多地方

02:14:56.900 --> 02:14:58.820
ES6必须要把它完整地学完

02:14:58.820 --> 02:14:59.700
这是毫无疑问的

02:15:01.380 --> 02:15:02.340
他得用到这一块知识

02:15:03.940 --> 02:15:04.420
return

02:15:05.060 --> 02:15:05.860
这里盘转

02:15:09.700 --> 02:15:11.060
我把写成这么多格式

02:15:11.060 --> 02:15:13.220
你看得懂得自然明白我什么意思

02:15:13.220 --> 02:15:14.420
自然明白我什么意思

02:15:14.420 --> 02:15:15.940
去表示登录成功

02:15:15.940 --> 02:15:16.980
这里返回force

02:15:16.980 --> 02:15:17.780
表示登录失败

02:15:18.500 --> 02:15:20.020
我这里也就说可以返回

02:15:20.020 --> 02:15:20.820
返回一个值

02:15:21.460 --> 02:15:23.380
这种情况下登录这里就经常常见

02:15:23.380 --> 02:15:24.180
非常非常常见

02:15:24.980 --> 02:15:26.100
返回一个处分的force

02:15:26.100 --> 02:15:27.540
表示是否登录成功还是失败

02:15:28.100 --> 02:15:29.060
成功返回处

02:15:29.060 --> 02:15:30.260
失败返回force

02:15:30.260 --> 02:15:31.540
那么到了这边

02:15:31.540 --> 02:15:32.580
到了这边我们要处理

02:15:32.580 --> 02:15:33.380
怎么处理呢

02:15:33.380 --> 02:15:35.140
我们触发这个xn之后

02:15:35.140 --> 02:15:36.420
这个函数要变成一步的

02:15:37.460 --> 02:15:38.020
我们等待

02:15:39.220 --> 02:15:40.340
result

02:15:41.220 --> 02:15:42.260
也就是说我们可以知道

02:15:42.260 --> 02:15:43.780
触发的结果是什么

02:15:43.780 --> 02:15:45.860
它会返回这个触发的结果

02:15:46.420 --> 02:15:47.540
这个结果要么为q

02:15:47.540 --> 02:15:48.260
要么为force

02:15:48.260 --> 02:15:49.380
是不是可以判断了

02:15:49.380 --> 02:15:50.420
那么这里就代码

02:15:50.420 --> 02:15:51.700
你就能听懂了

02:15:51.700 --> 02:15:53.300
前面代码你肯定不知道在写啥

02:15:53.300 --> 02:15:54.500
那么下面代码你能听懂

02:15:54.500 --> 02:15:55.140
我现在告诉你

02:15:55.140 --> 02:15:55.620
这个东西就是

02:15:56.740 --> 02:15:57.540
这个东西就是什么

02:15:57.540 --> 02:15:58.580
就是这里返回的结果

02:15:59.220 --> 02:16:01.140
就是这里返回的结果

02:16:01.700 --> 02:16:02.420
要么返回q

02:16:02.420 --> 02:16:03.220
要么返回force

02:16:04.100 --> 02:16:05.620
那么如果说它为真

02:16:06.100 --> 02:16:06.980
表示登录成功

02:16:06.980 --> 02:16:07.300
对吧

02:16:07.300 --> 02:16:07.940
登录成功干嘛

02:16:08.340 --> 02:16:08.900
你说干嘛

02:16:08.900 --> 02:16:10.100
是不是挑转

02:16:12.330 --> 02:16:12.810
挑转到哪

02:16:12.810 --> 02:16:13.530
挑转到手页

02:16:13.530 --> 02:16:13.770
对吧

02:16:14.410 --> 02:16:15.930
挑转到手页

02:16:16.890 --> 02:16:17.210
好

02:16:17.210 --> 02:16:17.610
else

02:16:18.170 --> 02:16:18.810
l是干嘛

02:16:20.250 --> 02:16:21.050
失败了干嘛

02:16:21.050 --> 02:16:21.450
er not

02:16:22.650 --> 02:16:25.050
账号密码错误

02:16:26.250 --> 02:16:26.570
对不对

02:16:27.530 --> 02:16:28.170
对不对

02:16:28.170 --> 02:16:28.730
是吧

02:16:28.730 --> 02:16:29.290
是不是这样子

02:16:30.090 --> 02:16:31.210
好那么咱们来看一下

02:16:32.010 --> 02:16:32.650
随便写一个

02:16:33.850 --> 02:16:34.970
等了一秒钟

02:16:34.970 --> 02:16:35.770
账号一秒错误

02:16:36.810 --> 02:16:37.210
er的密

02:16:37.930 --> 02:16:38.730
123123

02:16:38.730 --> 02:16:39.210
登录成功

02:16:40.250 --> 02:16:40.970
是挑转到手页

02:16:41.930 --> 02:16:42.090
好

02:16:42.090 --> 02:16:43.610
咱们再加上加载中的效果

02:16:43.610 --> 02:16:44.810
再把加载中的效果加上

02:16:46.090 --> 02:16:46.490
import

02:16:46.970 --> 02:16:47.210
好

02:16:47.210 --> 02:16:48.570
到这里就不要挪行设备事了

02:16:48.570 --> 02:16:50.490
数据有专门的仓库来处理

02:16:51.130 --> 02:16:51.930
挪紧

02:16:52.650 --> 02:16:52.970
from

02:16:53.850 --> 02:16:54.170
写缸

02:16:54.650 --> 02:16:55.050
对了

02:16:55.050 --> 02:16:55.530
写缸

02:16:55.530 --> 02:16:56.090
component

02:16:56.650 --> 02:16:57.210
挪紧

02:16:57.210 --> 02:16:57.930
把这个挪紧

02:16:57.930 --> 02:16:58.810
挪紧组建加上

02:16:58.810 --> 02:16:59.050
啊

02:16:59.050 --> 02:16:59.850
挪紧组建加上

02:17:00.170 --> 02:17:00.490
好

02:17:00.490 --> 02:17:01.450
那么现在我们来看

02:17:01.450 --> 02:17:01.530
啊

02:17:01.530 --> 02:17:02.570
现在还有形式说

02:17:02.570 --> 02:17:03.130
都着急哦

02:17:03.130 --> 02:17:03.770
还有形式

02:17:05.770 --> 02:17:07.450
那么我们现在要显示这个组建

02:17:07.450 --> 02:17:07.850
看着啊

02:17:07.850 --> 02:17:08.570
又形式出现了

02:17:09.210 --> 02:17:10.250
这个组建里面不是有个

02:17:10.250 --> 02:17:11.530
不是有个属性吗

02:17:11.530 --> 02:17:12.330
秀对吧

02:17:12.330 --> 02:17:13.370
是否显示

02:17:13.370 --> 02:17:14.330
这里填啥了

02:17:14.330 --> 02:17:15.370
我们之前咋写的

02:17:15.370 --> 02:17:16.170
是不是在这里写的

02:17:17.530 --> 02:17:19.770
但是这个数据仓库里面是不是有啊

02:17:20.490 --> 02:17:21.450
仓库里面是不是有

02:17:22.170 --> 02:17:24.010
仓库里面是不是有这个数据啊

02:17:24.010 --> 02:17:25.050
所以有这个ease loading

02:17:25.050 --> 02:17:25.770
所以有这个数据

02:17:26.410 --> 02:17:26.570
好

02:17:26.570 --> 02:17:27.930
那么我们现在是不是需要获取

02:17:27.930 --> 02:17:28.810
仓库里面的数据

02:17:29.690 --> 02:17:30.490
怎么获取呢

02:17:30.490 --> 02:17:31.530
有些人肯定

02:17:31.530 --> 02:17:33.130
比较聪明的同学肯定会想到这个

02:17:33.130 --> 02:17:33.290
哎

02:17:33.290 --> 02:17:35.210
我这里不是可以写上store吗

02:17:35.210 --> 02:17:35.530
对吧

02:17:35.530 --> 02:17:36.490
然后stats对吧

02:17:36.490 --> 02:17:37.290
login user

02:17:37.850 --> 02:17:38.490
login user

02:17:39.210 --> 02:17:40.490
就是ease loading

02:17:40.490 --> 02:17:41.210
ease loading

02:17:42.170 --> 02:17:43.050
是不是写上这个

02:17:43.050 --> 02:17:43.290
好

02:17:43.290 --> 02:17:44.090
保存一看一下吧

02:17:44.650 --> 02:17:45.850
我们再回到登录也

02:17:45.850 --> 02:17:46.490
回到登录也

02:17:47.290 --> 02:17:48.650
这里我们学典写一个

02:17:48.650 --> 02:17:49.130
点登录

02:17:50.810 --> 02:17:51.450
有反应吗

02:17:51.450 --> 02:17:52.410
是不是没有反应啊

02:17:53.050 --> 02:17:53.850
是不是没有反应

02:17:53.850 --> 02:17:54.410
为什么呢

02:17:54.410 --> 02:17:56.330
因为你这个数据不是想用式的

02:17:56.330 --> 02:17:57.050
我们之前说过

02:17:57.050 --> 02:17:59.130
组建的想用

02:17:59.130 --> 02:18:01.210
什么时候会重新渲染

02:18:01.210 --> 02:18:02.570
是不是属性或者是

02:18:03.290 --> 02:18:04.730
数状态发生变化的时候

02:18:04.730 --> 02:18:05.850
才会重新渲染

02:18:05.850 --> 02:18:06.730
你这个是属性吗

02:18:06.730 --> 02:18:07.210
不是

02:18:07.210 --> 02:18:07.850
是状态吗

02:18:07.850 --> 02:18:08.170
不是

02:18:08.570 --> 02:18:09.450
它就不会重新渲染

02:18:09.930 --> 02:18:11.210
所以我们要怎么办呢

02:18:11.210 --> 02:18:12.250
我们要用这种方式

02:18:12.250 --> 02:18:13.050
这是一种固定

02:18:13.050 --> 02:18:14.490
基本上是固定的模式了

02:18:15.290 --> 02:18:16.490
写个computing的

02:18:16.490 --> 02:18:17.690
写个计算属性

02:18:17.690 --> 02:18:18.650
计算属性是不是属性

02:18:18.650 --> 02:18:19.290
还是属性吗

02:18:20.090 --> 02:18:22.330
那么我们计算属性的里面写个啥呢

02:18:22.330 --> 02:18:23.210
写个ease loading

02:18:23.770 --> 02:18:25.530
一个ease loading这个计算属性

02:18:25.530 --> 02:18:26.490
它来自于哪呢

02:18:26.490 --> 02:18:26.970
来自于这

02:18:28.090 --> 02:18:28.730
它来自于这

02:18:30.090 --> 02:18:31.050
就这么简单

02:18:31.050 --> 02:18:32.090
你把这个ease loading写到这

02:18:32.650 --> 02:18:33.050
写这

02:18:33.610 --> 02:18:34.410
把ease loading写这

02:18:34.410 --> 02:18:34.810
完了

02:18:34.810 --> 02:18:35.210
没了

02:18:36.170 --> 02:18:36.810
就这样子写

02:18:36.810 --> 02:18:37.850
ease loading是不是写这

02:18:37.850 --> 02:18:38.250
就完了

02:18:39.450 --> 02:18:41.450
你看一下这是不是就完了

02:18:41.450 --> 02:18:41.930
就完了

02:18:41.930 --> 02:18:42.090
对吧

02:18:42.090 --> 02:18:42.890
就是该封装一下

02:18:42.890 --> 02:18:44.090
封装成一个计算属性

02:18:44.570 --> 02:18:45.690
封装成一个计算属性

02:18:46.490 --> 02:18:46.970
没问题吧

02:18:47.370 --> 02:18:48.410
从仓库里面状态里面

02:18:48.410 --> 02:18:49.370
打到这个ease loading

02:18:50.090 --> 02:18:50.570
把它放到这

02:18:51.050 --> 02:18:53.050
仓库会自行管理这个数据

02:18:53.050 --> 02:18:54.890
而且在计算属性里边

02:18:54.890 --> 02:18:56.570
一旦这个数据发生变化

02:18:56.570 --> 02:18:58.410
它也会计算这个仓库依赖的

02:18:58.410 --> 02:19:00.330
它会算出来这是个仓库依赖

02:19:00.330 --> 02:19:02.090
那么如果这个东西发生变化

02:19:02.090 --> 02:19:03.370
计算属性会重新计算

02:19:04.170 --> 02:19:05.290
所以说我们这里记一笔

02:19:06.250 --> 02:19:11.210
如果组件需要使用仓库中的数据

02:19:11.210 --> 02:19:12.890
刚才我们讲了组件触发

02:19:12.890 --> 02:19:13.130
对吧

02:19:13.130 --> 02:19:14.330
组件触发仓库的数据

02:19:14.330 --> 02:19:15.770
就用实动来触发就行了

02:19:15.770 --> 02:19:17.530
如果需要使用仓库中的数据

02:19:18.970 --> 02:19:20.090
需要写到

02:19:20.890 --> 02:19:23.690
需要使用计算属性封装

02:19:24.490 --> 02:19:26.090
需要使用计算属性封装

02:19:27.370 --> 02:19:28.890
好那么这种封装方式

02:19:30.890 --> 02:19:32.490
有点感觉有点麻烦

02:19:32.490 --> 02:19:32.890
对不对

02:19:32.890 --> 02:19:33.850
有点麻烦

02:19:34.010 --> 02:19:37.130
好那么这里它其实可以提供了一个简单的写法

02:19:37.130 --> 02:19:38.170
一个减变的写法

02:19:38.730 --> 02:19:39.770
可以使用

02:19:39.770 --> 02:19:42.970
vuex里边的map state

02:19:42.970 --> 02:19:44.170
map state

02:19:44.650 --> 02:19:45.290
函数

02:19:45.930 --> 02:19:46.970
减化操作

02:19:46.970 --> 02:19:48.570
这个东西了解一下就行了

02:19:48.570 --> 02:19:49.370
我们来写一下

02:19:49.370 --> 02:19:50.170
其实也很简单

02:19:50.170 --> 02:19:51.770
这一块也非常非常简单

02:19:51.770 --> 02:19:53.930
那么这个东西它给你写成啥了

02:19:56.490 --> 02:19:57.930
这个东西它给你写成啥了

02:19:57.930 --> 02:19:58.730
写成这么一种代码

02:20:00.010 --> 02:20:02.250
vuex的map state

02:20:02.810 --> 02:20:03.770
这里面写配置

02:20:04.170 --> 02:20:05.210
这里面写个数组

02:20:05.210 --> 02:20:06.010
数组是什么呢

02:20:09.380 --> 02:20:10.820
这里要这样子写

02:20:10.820 --> 02:20:11.860
这里要这样子写

02:20:12.820 --> 02:20:13.460
要这样子写

02:20:14.500 --> 02:20:17.300
就是要写个属性叫做 is loading

02:20:18.180 --> 02:20:18.660
state

02:20:19.540 --> 02:20:20.020
state

02:20:20.020 --> 02:20:24.180
is loading user

02:20:24.180 --> 02:20:27.220
is loading

02:20:28.820 --> 02:20:29.380
就这个代码

02:20:30.900 --> 02:20:33.060
这个代码它会自动帮你生成这个东西

02:20:34.020 --> 02:20:34.340
你看一下

02:20:34.340 --> 02:20:34.820
对照一下

02:20:34.820 --> 02:20:35.300
你明白了

02:20:35.300 --> 02:20:35.780
对照一下吧

02:20:36.900 --> 02:20:39.300
这个代码它会自动帮你生成这个代码

02:20:39.300 --> 02:20:40.740
会自动帮你生成这么一个对象

02:20:41.460 --> 02:20:42.020
自动生成

02:20:42.900 --> 02:20:44.020
自动生成这么一个对象

02:20:44.020 --> 02:20:44.740
就完了

02:20:44.740 --> 02:20:45.220
map state

02:20:48.340 --> 02:20:49.060
看一下

02:20:49.940 --> 02:20:50.420
你看

02:20:50.420 --> 02:20:51.300
我这个配置里边

02:20:51.300 --> 02:20:52.100
写了一个is loading

02:20:52.100 --> 02:20:53.140
所以它生成的对象里边

02:20:53.140 --> 02:20:54.340
它一定有一个is loading属性

02:20:54.980 --> 02:20:56.580
那么is loading来自于哪呢

02:20:57.780 --> 02:20:58.660
那么它来自于哪呢

02:20:58.660 --> 02:20:59.940
它到时候会调用这个函数

02:20:59.940 --> 02:21:01.540
它会把状态传进去

02:21:01.540 --> 02:21:02.740
整个仓库的状态传进去

02:21:03.060 --> 02:21:04.740
那么你根据这个整个仓库的状态

02:21:04.740 --> 02:21:05.780
拿到这个is loading

02:21:06.660 --> 02:21:07.780
就稍微简单一点

02:21:07.780 --> 02:21:08.900
其实也简单不了多少

02:21:08.900 --> 02:21:09.380
对吧

02:21:09.380 --> 02:21:10.260
稍微简单一点

02:21:10.260 --> 02:21:11.060
稍微简单一点

02:21:11.060 --> 02:21:11.300
你看

02:21:11.300 --> 02:21:12.900
还不如这样子写容易理解

02:21:12.900 --> 02:21:14.420
还不如这样子写容易理解

02:21:14.980 --> 02:21:15.220
好

02:21:15.220 --> 02:21:15.700
咱们看一下

02:21:19.350 --> 02:21:19.510
诶

02:21:19.510 --> 02:21:20.470
这里应该爆错了

02:21:20.470 --> 02:21:21.190
应该爆错了

02:21:21.190 --> 02:21:21.910
那地方爆错了

02:21:21.910 --> 02:21:22.310
我看一下

02:21:23.190 --> 02:21:24.310
store is not defend

02:21:25.590 --> 02:21:26.470
它说store

02:21:26.470 --> 02:21:27.190
哦this

02:21:27.190 --> 02:21:28.070
this.store

02:21:30.870 --> 02:21:31.350
它说

02:21:31.350 --> 02:21:32.630
还没有注册逐渐

02:21:32.630 --> 02:21:33.750
还没有注册逐渐

02:21:33.750 --> 02:21:34.310
component

02:21:36.490 --> 02:21:36.810
loading

02:21:38.010 --> 02:21:38.330
好

02:21:38.330 --> 02:21:38.730
看一下

02:21:39.690 --> 02:21:40.730
这里我们写上一个

02:21:40.730 --> 02:21:41.450
写上一个

02:21:41.450 --> 02:21:42.090
点击

02:21:42.090 --> 02:21:42.650
夹载中

02:21:42.650 --> 02:21:43.210
对吧

02:21:43.210 --> 02:21:43.850
哎呀

02:21:43.850 --> 02:21:45.050
为什么是这样的

02:21:45.050 --> 02:21:46.170
这样的一个界面呢

02:21:48.650 --> 02:21:51.530
我这个地方用的是

02:21:51.530 --> 02:21:52.970
loading用的是abs nodes

02:21:55.110 --> 02:21:56.070
我们放这吧

02:21:56.070 --> 02:21:56.470
放这

02:21:57.110 --> 02:21:57.190
好

02:21:57.190 --> 02:21:57.830
这东西放这

02:21:58.470 --> 02:21:59.910
外面再套一个dav

02:21:59.910 --> 02:22:00.790
再套一个dav

02:22:01.750 --> 02:22:02.070
好

02:22:02.070 --> 02:22:02.470
再来啊

02:22:05.700 --> 02:22:06.180
好

02:22:06.180 --> 02:22:06.660
夹载中

02:22:06.660 --> 02:22:07.140
对吧

02:22:07.140 --> 02:22:08.020
正好密码错误

02:22:08.500 --> 02:22:08.900
好

02:22:08.900 --> 02:22:09.620
再来

02:22:09.620 --> 02:22:10.100
夹载中

02:22:11.060 --> 02:22:11.380
啊

02:22:11.380 --> 02:22:12.340
正好密码错误

02:22:12.820 --> 02:22:12.900
好

02:22:12.900 --> 02:22:13.540
那么再来

02:22:13.540 --> 02:22:14.260
耳朵密

02:22:14.260 --> 02:22:15.300
123123

02:22:15.300 --> 02:22:15.860
登录

02:22:15.860 --> 02:22:16.580
夹载中

02:22:16.580 --> 02:22:17.220
跳转

02:22:17.220 --> 02:22:17.540
对吧

02:22:17.540 --> 02:22:17.940
说完了

02:22:20.820 --> 02:22:21.140
对

02:22:21.140 --> 02:22:21.780
少许个this

02:22:22.500 --> 02:22:22.900
对啊

02:22:22.900 --> 02:22:24.420
就是我刚才一开始就说的

02:22:24.420 --> 02:22:25.620
它就感觉更复杂了

02:22:25.620 --> 02:22:26.660
就感觉更复杂了

02:22:28.580 --> 02:22:29.060
一会呢

02:22:29.060 --> 02:22:29.780
它有的时候

02:22:29.780 --> 02:22:31.060
就是一说到的map status

02:22:31.060 --> 02:22:31.300
是吧

02:22:31.300 --> 02:22:31.940
map status

02:22:31.940 --> 02:22:32.740
有的时候还是要

02:22:32.740 --> 02:22:33.540
也能够起到

02:22:33.540 --> 02:22:34.820
简化操作的效果

02:22:34.820 --> 02:22:35.860
有的时候能起到

02:22:35.860 --> 02:22:36.500
我们以后再说

02:22:36.980 --> 02:22:37.140
好

02:22:37.140 --> 02:22:37.620
那么这里呢

02:22:37.620 --> 02:22:38.900
我们把灯物搞定了

02:22:38.900 --> 02:22:39.700
还有灯

02:22:39.700 --> 02:22:40.820
那么我们header里面

02:22:40.820 --> 02:22:41.460
我们header里面

02:22:41.460 --> 02:22:42.500
是不是可以搞定了

02:22:42.500 --> 02:22:43.540
这个地方显示啥呀

02:22:44.340 --> 02:22:44.980
这个地方

02:22:44.980 --> 02:22:45.220
好

02:22:45.220 --> 02:22:46.500
那么比方说这个位置

02:22:46.500 --> 02:22:46.980
这个位置

02:22:46.980 --> 02:22:48.180
它要不要显示

02:22:48.180 --> 02:22:49.540
比方说这里写个微衣服

02:22:49.540 --> 02:22:51.140
它要不要显示这个区域

02:22:51.140 --> 02:22:52.740
是不是取决于有没有登录啊

02:22:52.740 --> 02:22:53.300
你没有登录

02:22:53.300 --> 02:22:54.260
你退出什么登录了

02:22:54.260 --> 02:22:54.660
对吧

02:22:54.660 --> 02:22:55.780
取决于有没有登录

02:22:55.780 --> 02:22:56.660
那么这个有没有登录

02:22:56.660 --> 02:22:58.020
是不是来自于仓库里边的

02:22:58.020 --> 02:22:59.220
locking user

02:22:59.220 --> 02:23:00.260
调data

02:23:00.260 --> 02:23:01.300
是不是维空

02:23:01.300 --> 02:23:01.860
对吧

02:23:01.860 --> 02:23:02.900
是不是取决于这个了

02:23:02.900 --> 02:23:03.060
好

02:23:03.060 --> 02:23:03.540
那么这里

02:23:03.540 --> 02:23:04.180
行普提的

02:23:05.540 --> 02:23:06.180
locking user

02:23:07.140 --> 02:23:07.780
locking user

02:23:11.100 --> 02:23:11.340
好

02:23:11.420 --> 02:23:14.060
那这里怎么才能显示这个区域呢

02:23:14.060 --> 02:23:14.860
是不是locking user

02:23:14.860 --> 02:23:15.980
要有值

02:23:15.980 --> 02:23:16.540
来自于哪

02:23:16.540 --> 02:23:16.940
this

02:23:17.500 --> 02:23:17.980
来自于哪

02:23:19.340 --> 02:23:20.060
this点

02:23:20.060 --> 02:23:20.780
什么stats

02:23:20.780 --> 02:23:21.020
点

02:23:22.140 --> 02:23:23.420
locking user

02:23:24.380 --> 02:23:25.340
locking user

02:23:25.340 --> 02:23:25.740
第二

02:23:26.460 --> 02:23:27.100
this is store

02:23:28.300 --> 02:23:29.100
stats

02:23:29.100 --> 02:23:29.900
点locking user

02:23:29.900 --> 02:23:30.300
点什么

02:23:30.300 --> 02:23:30.780
data

02:23:30.780 --> 02:23:31.580
对吧

02:23:31.580 --> 02:23:32.380
所以来自于这

02:23:32.380 --> 02:23:33.260
对不对

02:23:33.260 --> 02:23:34.140
纯粹来自于

02:23:34.140 --> 02:23:35.500
看仓库里边的这种东西

02:23:35.500 --> 02:23:36.380
那么我们就看

02:23:36.380 --> 02:23:37.500
使用这个计算属性

02:23:37.500 --> 02:23:38.220
看下locking user

02:23:38.220 --> 02:23:39.020
有没有值呢

02:23:39.020 --> 02:23:40.060
如果说它有值的话

02:23:40.060 --> 02:23:41.020
那就显示这个区域

02:23:41.340 --> 02:23:42.620
显示的时候怎么显示呢

02:23:42.620 --> 02:23:44.220
这个东西是不是很简单了

02:23:44.220 --> 02:23:45.340
显示就是locking user

02:23:45.340 --> 02:23:46.060
点什么

02:23:46.060 --> 02:23:47.260
点name对不对

02:23:47.260 --> 02:23:48.300
就这么简单

02:23:48.300 --> 02:23:49.340
就非常简单了

02:23:49.340 --> 02:23:50.620
你看这份共享数据了

02:23:50.620 --> 02:23:50.860
对吧

02:23:50.860 --> 02:23:52.780
都是数据全从仓库里边来

02:23:52.780 --> 02:23:53.020
对吧

02:23:53.020 --> 02:23:54.620
共享的数据都是从仓库里边来

02:23:54.620 --> 02:23:55.580
超级管理员

02:23:55.580 --> 02:23:56.460
对不对

02:23:56.460 --> 02:23:56.700
好

02:23:56.700 --> 02:23:58.300
那么现在我们来实现退出登录

02:23:58.300 --> 02:23:59.900
你看一回非常简单了

02:23:59.900 --> 02:24:00.460
退出登录

02:24:00.460 --> 02:24:00.780
click

02:24:02.620 --> 02:24:03.020
handle

02:24:03.740 --> 02:24:04.220
cli

02:24:04.220 --> 02:24:04.940
handle

02:24:04.940 --> 02:24:05.420
就是locking out

02:24:05.420 --> 02:24:06.140
什么

02:24:06.140 --> 02:24:06.620
locking

02:24:07.340 --> 02:24:07.820
out

02:24:07.820 --> 02:24:08.380
退出登录

02:24:08.380 --> 02:24:09.180
你看一下怎么退出

02:24:10.380 --> 02:24:11.180
这里messets

02:24:16.790 --> 02:24:17.670
locking out

02:24:19.190 --> 02:24:20.150
我看一下现在还有多少人

02:24:21.670 --> 02:24:23.270
我看你们可以啊

02:24:23.270 --> 02:24:24.470
现在都10点半了

02:24:24.470 --> 02:24:25.750
还有118人

02:24:25.750 --> 02:24:26.150
可以

02:24:26.150 --> 02:24:26.310
可以

02:24:26.310 --> 02:24:26.790
不错的

02:24:26.790 --> 02:24:27.430
不错的

02:24:28.390 --> 02:24:29.430
这是出乎我的利益了

02:24:29.430 --> 02:24:31.110
我说今天晚上讲下来

02:24:31.110 --> 02:24:32.630
可以估计到后面就二三四个人了

02:24:33.670 --> 02:24:34.710
locking out

02:24:34.710 --> 02:24:35.350
退出登录

02:24:35.350 --> 02:24:35.990
退出登录的话

02:24:35.990 --> 02:24:36.630
我们这里怎么办

02:24:37.190 --> 02:24:38.230
this store

02:24:39.110 --> 02:24:40.070
dispatch

02:24:40.070 --> 02:24:40.790
触发对吧

02:24:40.790 --> 02:24:41.590
分发x

02:24:41.590 --> 02:24:42.310
分发x

02:24:42.310 --> 02:24:42.950
写什么

02:24:42.950 --> 02:24:43.430
写那个

02:24:44.150 --> 02:24:45.750
我真满身汗了

02:24:45.750 --> 02:24:46.390
等一下

02:24:46.390 --> 02:24:46.710
等一下

02:24:46.710 --> 02:24:47.430
我脱一下衣服

02:24:52.170 --> 02:24:53.290
直播脱衣服

02:24:53.930 --> 02:24:54.730
dispatch

02:24:54.730 --> 02:24:55.690
触发什么

02:24:55.690 --> 02:24:56.410
触发x

02:24:56.410 --> 02:24:57.290
什么x呢

02:24:57.290 --> 02:24:58.170
什么x

02:24:58.170 --> 02:24:59.450
是不是这个x

02:24:59.450 --> 02:25:00.410
locking out

02:25:00.410 --> 02:25:00.810
对吧

02:25:00.810 --> 02:25:01.770
它需不需要复杂

02:25:01.770 --> 02:25:02.810
需不需要耳外的参数

02:25:02.810 --> 02:25:03.290
不需要

02:25:03.290 --> 02:25:04.330
你触发就完事了

02:25:05.290 --> 02:25:06.410
退出登录

02:25:06.410 --> 02:25:06.810
好

02:25:06.810 --> 02:25:07.050
退出登录

02:25:07.050 --> 02:25:07.530
完了过后

02:25:07.530 --> 02:25:08.330
是不是要跳转

02:25:08.330 --> 02:25:08.810
对吧

02:25:08.810 --> 02:25:10.010
rotor

02:25:10.010 --> 02:25:11.450
push

02:25:11.450 --> 02:25:12.330
跳到哪

02:25:12.330 --> 02:25:13.290
跳到登录

02:25:13.290 --> 02:25:14.570
保存

02:25:14.570 --> 02:25:15.850
你看一下

02:25:16.090 --> 02:25:16.570
你看一下

02:25:17.210 --> 02:25:17.770
退出登录

02:25:17.770 --> 02:25:18.250
登录

02:25:18.250 --> 02:25:18.650
点击

02:25:18.650 --> 02:25:19.210
是不是退出了

02:25:19.210 --> 02:25:20.330
神奇的是

02:25:20.330 --> 02:25:21.930
它自动这里就自动消失了

02:25:21.930 --> 02:25:22.490
为什么

02:25:22.490 --> 02:25:23.450
因为仓库里不知道

02:25:23.450 --> 02:25:24.090
退出登录过后

02:25:24.090 --> 02:25:25.610
仓库的数据是不是变了

02:25:25.610 --> 02:25:26.970
仓库的数据一变

02:25:26.970 --> 02:25:28.170
那么这个计算属性的

02:25:28.170 --> 02:25:29.450
依赖项是不是变了

02:25:29.450 --> 02:25:30.570
计算属性一变

02:25:30.570 --> 02:25:32.010
是不是要重新渲染

02:25:32.010 --> 02:25:32.970
是不是重新渲染

02:25:32.970 --> 02:25:33.450
重新渲染

02:25:33.450 --> 02:25:34.890
它发现这个locking u 转没指了

02:25:34.890 --> 02:25:36.010
所以这块狙

02:25:36.010 --> 02:25:37.290
自然不出来了

02:25:37.290 --> 02:25:38.410
这个东西自然就消失了

02:25:38.410 --> 02:25:39.210
然后再登录

02:25:39.210 --> 02:25:39.930
耳朵命

02:25:39.930 --> 02:25:41.050
123

02:25:42.650 --> 02:25:43.050
登录

02:25:43.050 --> 02:25:44.250
你看是不是自动出来了

02:25:44.330 --> 02:25:45.450
仓库一变

02:25:45.450 --> 02:25:46.570
整个

02:25:46.570 --> 02:25:48.570
就是用了仓库的数据的组件

02:25:48.570 --> 02:25:49.610
它都会变

02:25:49.610 --> 02:25:50.410
都会变

02:25:50.410 --> 02:25:53.530
所以它们用的是同一个仓库里边的东西

02:25:53.530 --> 02:25:55.210
从一个仓库里边的东西

02:25:55.210 --> 02:25:56.010
你看logging 组件

02:25:56.010 --> 02:25:57.690
它改变了仓库里边的数据

02:25:57.690 --> 02:26:00.650
导致了仓库重新刷新了这些组件

02:26:00.650 --> 02:26:01.930
重新渲染这些组件

02:26:01.930 --> 02:26:04.170
因为这些组件在通过计算属性使用它们

02:26:09.290 --> 02:26:09.850
再喝口水

02:26:15.670 --> 02:26:16.630
上面可以直接使用

02:26:17.110 --> 02:26:18.470
因为logging又是个对象

02:26:19.750 --> 02:26:21.430
因为这个地方logging又是个对象

02:26:21.430 --> 02:26:22.390
这个data不是个对象

02:26:22.390 --> 02:26:23.190
仓库里边

02:26:23.190 --> 02:26:24.230
你看一下

02:26:24.230 --> 02:26:25.350
怎么控制在那边打印一下

02:26:26.390 --> 02:26:28.070
它不就是个普通对象吗

02:26:28.070 --> 02:26:28.710
Stone

02:26:28.710 --> 02:26:29.350
delete

02:26:30.950 --> 02:26:32.230
logging有点你看一下

02:26:32.230 --> 02:26:33.110
不就是个对象吗

02:26:33.110 --> 02:26:34.470
对象里面不是data吗

02:26:34.470 --> 02:26:34.630
对吧

02:26:34.630 --> 02:26:35.830
我们得到了不是data吗

02:26:35.830 --> 02:26:37.190
对吧logging有点data

02:26:37.190 --> 02:26:37.830
它是个对象

02:26:37.830 --> 02:26:38.150
你看

02:26:38.710 --> 02:26:40.390
在对象里面不就有那么属性吗

02:26:40.390 --> 02:26:41.190
不就那么属性吗

02:26:41.190 --> 02:26:42.470
我直接取就完事了

02:26:42.470 --> 02:26:43.510
我拿到不就是个对象

02:26:44.550 --> 02:26:44.790
好

02:26:44.790 --> 02:26:45.510
登录就搞定了

02:26:45.510 --> 02:26:45.990
对吧

02:26:45.990 --> 02:26:46.550
登录就搞定了

02:26:47.510 --> 02:26:47.750
好

02:26:47.750 --> 02:26:49.270
接下来我们还要做一件事

02:26:49.750 --> 02:26:51.430
这件事就有技术难度了

02:26:52.470 --> 02:26:53.350
就有点意思了

02:26:53.350 --> 02:26:54.150
就有点意思了

02:26:54.870 --> 02:26:55.910
我们现在要做的是什么呢

02:26:55.910 --> 02:26:56.950
我们要把那个rotor

02:26:57.670 --> 02:27:00.790
我们把那个就是数据跟我们的路由结合起来

02:27:02.070 --> 02:27:04.230
有些页面是不能直接访问的

02:27:05.190 --> 02:27:06.950
比方说举个例子

02:27:06.950 --> 02:27:07.910
电影页

02:27:08.950 --> 02:27:10.870
电影页是不能直接访问的

02:27:11.750 --> 02:27:13.350
必须要登录才能访问

02:27:13.350 --> 02:27:14.470
那么现在我们没有登录

02:27:14.470 --> 02:27:14.710
你看

02:27:15.270 --> 02:27:15.830
没有登录

02:27:16.870 --> 02:27:17.270
你看

02:27:18.950 --> 02:27:19.670
我点到啥了

02:27:19.670 --> 02:27:20.950
我点到登录按钮去了

02:27:22.310 --> 02:27:22.550
好

02:27:23.430 --> 02:27:25.030
电影页没有登录也可以访问

02:27:25.030 --> 02:27:25.270
对吧

02:27:25.270 --> 02:27:26.790
那么我们比方说

02:27:26.790 --> 02:27:29.030
电影页必须要登录过后才能访问

02:27:29.030 --> 02:27:30.070
而且有不少的页面

02:27:30.070 --> 02:27:31.270
都是要登录过后才能访问

02:27:32.230 --> 02:27:33.750
那么我们怎么来处理呢

02:27:34.310 --> 02:27:35.190
这种情况下

02:27:35.190 --> 02:27:37.030
我们如果说最简单的办法

02:27:37.590 --> 02:27:38.550
就在这里面处理

02:27:39.670 --> 02:27:40.470
在这里面

02:27:40.470 --> 02:27:42.310
就是在movie配级这里

02:27:43.190 --> 02:27:43.510
对不对

02:27:43.510 --> 02:27:44.550
就在movie配级在这里

02:27:44.550 --> 02:27:45.430
在这里处理对吧

02:27:45.590 --> 02:27:46.870
这里Creator的时候

02:27:46.870 --> 02:27:47.910
一开始的时候判断一下

02:27:47.910 --> 02:27:48.710
当天有没有登录

02:27:48.710 --> 02:27:49.110
没有登录

02:27:49.110 --> 02:27:50.230
扔回去登录

02:27:50.870 --> 02:27:52.230
跳转到登录页面去登录

02:27:52.230 --> 02:27:53.350
在这里处理

02:27:53.350 --> 02:27:54.950
但是如果说你很多页面

02:27:54.950 --> 02:27:55.910
都有这样的需求的话

02:27:55.910 --> 02:27:57.110
就会导致很多重复带

02:27:58.150 --> 02:27:59.590
因此我给大家说一下

02:27:59.590 --> 02:28:01.590
这一块它怎么有一种处理方式

02:28:02.070 --> 02:28:05.190
就是在路由里边使用导航守卫

02:28:05.190 --> 02:28:07.190
这一块我们不会太深的讲

02:28:07.190 --> 02:28:08.470
讲一个最简单的例子

02:28:08.470 --> 02:28:09.110
就登录

02:28:09.110 --> 02:28:09.990
因为登录这里一块

02:28:09.990 --> 02:28:11.670
通常都要跟导航守卫配合起来用

02:28:12.630 --> 02:28:13.430
又回到导航了

02:28:14.230 --> 02:28:15.430
关于导航守卫

02:28:18.660 --> 02:28:19.460
导航守卫

02:28:20.180 --> 02:28:21.460
导航守卫什么意思呢

02:28:21.460 --> 02:28:24.580
导航守卫是一些配置

02:28:25.220 --> 02:28:29.540
一些路就是Rotor的配置

02:28:29.540 --> 02:28:30.500
配置函数

02:28:32.820 --> 02:28:33.780
这些函数

02:28:35.060 --> 02:28:42.260
不同的函数在不同的时机运行

02:28:42.260 --> 02:28:43.780
它会在不同的时候运行

02:28:43.780 --> 02:28:45.700
就跟有点像生命周期对吧

02:28:45.780 --> 02:28:46.900
有点像生命周期

02:28:46.900 --> 02:28:51.380
但是这个是Rotor路由里边的函数

02:28:51.380 --> 02:28:54.340
那么导航守卫的这一块东西其实很多的

02:28:54.340 --> 02:28:56.420
我们这里就简单说一个

02:28:56.420 --> 02:28:57.940
就是为了实现登录的

02:28:57.940 --> 02:28:59.300
导航守卫里边

02:28:59.300 --> 02:29:00.340
我们在导航里边

02:29:00.340 --> 02:29:02.260
Rotor里边怎么来配置导航守卫呢

02:29:02.260 --> 02:29:04.500
我们其中有一个导航守卫

02:29:05.060 --> 02:29:06.020
就像一个守卫一样

02:29:06.020 --> 02:29:07.220
要经过它

02:29:07.220 --> 02:29:07.460
对吧

02:29:07.460 --> 02:29:08.180
要经过它

02:29:08.660 --> 02:29:10.900
叫做B4一起

02:29:11.380 --> 02:29:12.580
我们在这里说一下

02:29:13.220 --> 02:29:18.170
好

02:29:18.170 --> 02:29:18.570
我说一下

02:29:19.210 --> 02:29:19.690
什么意思

02:29:20.650 --> 02:29:21.770
这个表示的是

02:29:21.770 --> 02:29:25.930
註册全局导航守卫

02:29:27.450 --> 02:29:29.690
名称叫做B4一起

02:29:32.490 --> 02:29:33.930
传入的函数

02:29:33.930 --> 02:29:35.210
什么时候运行这个函数

02:29:35.210 --> 02:29:36.330
你传入的是一个函数

02:29:36.330 --> 02:29:36.570
对吧

02:29:36.570 --> 02:29:37.930
关键是看这个函数

02:29:37.930 --> 02:29:38.970
你传入的这个函数

02:29:38.970 --> 02:29:40.170
什么时候运行的

02:29:40.170 --> 02:29:47.850
会在每次进入页面之前运行

02:29:48.410 --> 02:29:50.410
它会在每次进入页面之前运行

02:29:50.410 --> 02:29:51.770
我们这里输出一下

02:29:51.770 --> 02:29:53.370
比如说from to

02:29:54.330 --> 02:29:55.690
输出一下from to

02:29:55.690 --> 02:29:57.370
我们会不会输出一句话

02:29:57.370 --> 02:29:58.330
输出一句话

02:29:58.330 --> 02:29:59.530
就是运行了

02:29:59.530 --> 02:30:00.650
运行了

02:30:00.650 --> 02:30:01.130
你看一下

02:30:01.530 --> 02:30:02.250
B4一起

02:30:05.860 --> 02:30:06.100
好

02:30:06.100 --> 02:30:06.820
那么这里比方说

02:30:06.820 --> 02:30:07.220
我们要跳

02:30:07.220 --> 02:30:08.100
你看一开始运行的

02:30:08.100 --> 02:30:08.260
对吧

02:30:08.260 --> 02:30:09.300
一开始进入了什么

02:30:09.300 --> 02:30:10.260
进入了母尾页面

02:30:10.260 --> 02:30:10.580
对吧

02:30:10.580 --> 02:30:12.020
进入这个页面运行了

02:30:12.020 --> 02:30:12.980
如果点电影页

02:30:12.980 --> 02:30:14.180
你看说也运行了

02:30:14.180 --> 02:30:14.740
对吧

02:30:14.740 --> 02:30:15.700
然后再点首页

02:30:15.700 --> 02:30:16.740
是不是有运行的

02:30:16.740 --> 02:30:16.980
对吧

02:30:16.980 --> 02:30:18.660
这个函数每一次要进入页面

02:30:18.660 --> 02:30:19.780
它都会运行

02:30:19.940 --> 02:30:21.460
你会发现页面没有变了

02:30:21.460 --> 02:30:22.420
没有切换了

02:30:22.420 --> 02:30:22.900
为什么

02:30:22.900 --> 02:30:24.340
一旦你写了这个函数过后

02:30:26.100 --> 02:30:29.460
一旦注册了该首位

02:30:31.220 --> 02:30:32.820
除非在首位中

02:30:33.460 --> 02:30:36.820
首位中雕用next函数

02:30:36.820 --> 02:30:37.540
第三个函数

02:30:37.540 --> 02:30:38.980
它会给你传一个next函数

02:30:39.620 --> 02:30:42.500
否则不会改变地址

02:30:43.620 --> 02:30:45.060
否则的话地址是不会改变的

02:30:45.060 --> 02:30:46.180
你看一下现在地址变吧

02:30:46.740 --> 02:30:47.620
点的点去都没有变

02:30:47.620 --> 02:30:47.940
对吧

02:30:47.940 --> 02:30:49.140
但这个导航首位在运行

02:30:49.140 --> 02:30:49.460
看没

02:30:50.180 --> 02:30:51.700
就是到底要不要跳转

02:30:51.700 --> 02:30:54.020
是不是全频里的控制

02:30:54.020 --> 02:30:54.340
对吧

02:30:54.340 --> 02:30:55.380
全频里的控制

02:30:55.380 --> 02:30:56.340
它怎么控制的

02:30:56.340 --> 02:30:57.380
它这里有两个函数

02:30:57.380 --> 02:30:58.020
一个是for on

02:30:58.020 --> 02:30:58.820
一个是to

02:30:58.820 --> 02:31:00.020
for on to是什么呢

02:31:00.020 --> 02:31:00.740
答应一下

02:31:01.620 --> 02:31:01.860
to

02:31:03.460 --> 02:31:03.860
你看一下

02:31:06.230 --> 02:31:07.270
点击电影页

02:31:07.830 --> 02:31:08.230
for on

02:31:11.190 --> 02:31:14.070
从电影页要跳到哪儿了

02:31:14.070 --> 02:31:15.990
想要跳到哪儿

02:31:15.990 --> 02:31:17.110
想要跳到这个

02:31:17.110 --> 02:31:18.230
我刚点首页

02:31:18.230 --> 02:31:19.110
点首页

02:31:19.110 --> 02:31:20.550
想要跳到首页

02:31:20.550 --> 02:31:20.870
对吧

02:31:20.950 --> 02:31:21.830
想要跳到首页

02:31:22.470 --> 02:31:23.350
明白的意思吧

02:31:23.350 --> 02:31:25.350
想从电影页跳到首页

02:31:25.910 --> 02:31:27.430
就是for on表示的是

02:31:27.430 --> 02:31:28.390
for on表示的是

02:31:28.950 --> 02:31:31.030
之前想从哪个页面跳过来

02:31:31.910 --> 02:31:33.830
从哪个页面跳到这个页面

02:31:33.830 --> 02:31:34.790
这是两个对象

02:31:34.790 --> 02:31:37.190
这两个对象你可以把理解成为

02:31:37.190 --> 02:31:38.150
就是这里的配置

02:31:38.870 --> 02:31:40.790
比方说你要从首页跳到电影

02:31:40.790 --> 02:31:41.990
for on就是这个

02:31:41.990 --> 02:31:42.790
to就是这个

02:31:42.790 --> 02:31:43.590
你可以这样理解

02:31:44.630 --> 02:31:45.750
for on是这个

02:31:45.750 --> 02:31:46.710
to就是这个

02:31:46.710 --> 02:31:47.430
你可以这样理解

02:31:48.390 --> 02:31:48.950
好

02:31:48.950 --> 02:31:50.470
那么现在我们要判断

02:31:51.830 --> 02:31:52.950
看着

02:31:52.950 --> 02:31:53.910
我们要判断这么一个东西

02:31:54.790 --> 02:31:55.750
判断to

02:31:55.750 --> 02:31:57.430
to也要刀的页面

02:31:58.070 --> 02:31:59.990
是否需要登录

02:31:59.990 --> 02:32:00.790
是否判断这东西

02:32:00.790 --> 02:32:01.830
那么怎么来判断

02:32:01.830 --> 02:32:03.030
to是不是需要登录呢

02:32:03.030 --> 02:32:04.630
这里又说了要制造一个知识

02:32:04.630 --> 02:32:06.230
在导航配置里边

02:32:06.230 --> 02:32:08.790
可以加入一些额外的信息

02:32:08.790 --> 02:32:09.750
配置到哪

02:32:09.750 --> 02:32:10.550
配置到meta里面

02:32:10.550 --> 02:32:11.830
meta里面

02:32:11.830 --> 02:32:13.190
meta里面我们配置个对象

02:32:13.190 --> 02:32:14.710
配置为去嘛

02:32:14.710 --> 02:32:15.590
把配置为去

02:32:15.590 --> 02:32:16.390
我们这样配置吧

02:32:16.390 --> 02:32:18.070
我们就下配置一个

02:32:18.070 --> 02:32:19.830
meta随便写写啥

02:32:20.070 --> 02:32:21.030
这里写啥都可以

02:32:21.030 --> 02:32:22.630
写支付出来写数字

02:32:22.630 --> 02:32:23.990
写一个对象啥都可以

02:32:23.990 --> 02:32:25.190
啥都可以写

02:32:25.190 --> 02:32:25.990
什么都可以配置

02:32:25.990 --> 02:32:27.190
通常都是配置对象

02:32:27.190 --> 02:32:28.550
小小还是配置个对象

02:32:29.270 --> 02:32:29.990
配置个对象

02:32:29.990 --> 02:32:30.710
meta是一个对象

02:32:31.430 --> 02:32:32.630
meta叫做原数据

02:32:32.630 --> 02:32:33.350
原数据的知识

02:32:33.350 --> 02:32:35.350
我又不要再加深了

02:32:35.350 --> 02:32:37.270
meta就是一个自定义的数据

02:32:37.270 --> 02:32:38.390
这是自定义数据

02:32:39.030 --> 02:32:39.910
自定义的数据

02:32:41.110 --> 02:32:41.990
这个数据

02:32:41.990 --> 02:32:44.550
该数据通常在

02:32:45.430 --> 02:32:48.790
会被导航所谓使用

02:32:49.910 --> 02:32:51.030
就自定义的数据

02:32:51.030 --> 02:32:52.390
比方Lid

02:32:53.270 --> 02:32:54.150
locking

02:32:55.030 --> 02:32:55.750
需要登录

02:32:56.230 --> 02:32:56.950
把数为去

02:32:56.950 --> 02:32:58.630
就是你这个页面是需要登录的

02:32:59.110 --> 02:32:59.830
把数为去

02:33:00.710 --> 02:33:01.430
好那么这里

02:33:03.750 --> 02:33:04.230
这里

02:33:05.510 --> 02:33:07.510
比方说电影详情页

02:33:07.510 --> 02:33:09.190
电影详情页也是需要登录的

02:33:09.830 --> 02:33:11.430
好那么在导航所谓里边来

02:33:11.430 --> 02:33:12.310
是不是可以判断了

02:33:12.310 --> 02:33:13.030
我判断一下

02:33:13.030 --> 02:33:15.110
tude的meta有没有值

02:33:15.110 --> 02:33:16.310
如果有值的话

02:33:16.310 --> 02:33:17.430
tude的meta

02:33:18.630 --> 02:33:20.710
Lidlocking是不是有值

02:33:20.710 --> 02:33:21.270
对吧

02:33:21.270 --> 02:33:24.950
首先看一下tude的meta是不是有值

02:33:24.950 --> 02:33:27.350
你要挑转到的页面有这个meta

02:33:27.350 --> 02:33:28.150
配置的meta

02:33:28.150 --> 02:33:30.550
并且meta里面Lidlocking是有值的

02:33:30.550 --> 02:33:34.310
OK那么说明了需要登录的页面

02:33:35.350 --> 02:33:36.550
是不是需要登录的页面

02:33:36.550 --> 02:33:36.870
对吧

02:33:38.230 --> 02:33:39.110
这就是导航所谓

02:33:39.110 --> 02:33:39.590
对不对

02:33:39.590 --> 02:33:41.270
这是一个需要登录的页面

02:33:42.150 --> 02:33:43.270
那么需要登录

02:33:43.270 --> 02:33:45.190
这是一个需要登录的页面

02:33:45.190 --> 02:33:47.110
那它到底有没有登录了

02:33:47.110 --> 02:33:48.630
有没有登录是不是在倉库里边

02:33:48.630 --> 02:33:49.830
我们把倉库导入进来

02:33:50.790 --> 02:33:53.750
Stone,Floor,Dial鞋杠

02:33:53.750 --> 02:33:56.870
Stone,Index,Dial解释

02:33:56.870 --> 02:33:58.950
从倉库里边导入进来

02:33:58.950 --> 02:34:00.630
那么这里判断一下

02:34:00.630 --> 02:34:01.750
你有没有登录呢

02:34:01.750 --> 02:34:03.990
Stone,State,Login,User

02:34:05.830 --> 02:34:07.990
Dial,Data是不是有值

02:34:07.990 --> 02:34:08.470
对吧

02:34:08.470 --> 02:34:09.910
是不是这个是已登录

02:34:09.910 --> 02:34:10.230
对吧

02:34:10.230 --> 02:34:10.870
已登录

02:34:10.870 --> 02:34:11.830
已登录干嘛

02:34:11.830 --> 02:34:13.110
如果说你需要登录

02:34:13.110 --> 02:34:13.910
但是我现在

02:34:13.910 --> 02:34:15.590
并且我现在又已经登录了

02:34:15.590 --> 02:34:16.390
是不是放行

02:34:16.390 --> 02:34:16.870
对吧

02:34:16.870 --> 02:34:17.910
可以可以挑转

02:34:17.910 --> 02:34:19.430
可以挑转就是调用那个时

02:34:20.150 --> 02:34:20.550
放行

02:34:21.670 --> 02:34:22.150
通过

02:34:22.150 --> 02:34:22.950
你去挑转吧

02:34:24.470 --> 02:34:24.790
对吧

02:34:24.790 --> 02:34:26.150
首页是不是加了一个关卡

02:34:26.150 --> 02:34:27.110
限制你

02:34:27.110 --> 02:34:27.350
好

02:34:27.350 --> 02:34:28.630
如果说你没有登录

02:34:30.150 --> 02:34:30.950
你需要登录

02:34:30.950 --> 02:34:31.990
但是你没有登录

02:34:31.990 --> 02:34:32.230
干嘛

02:34:33.270 --> 02:34:34.470
挑转到Login

02:34:36.310 --> 02:34:38.230
挑转到登录

02:34:38.230 --> 02:34:39.350
登录页

02:34:39.350 --> 02:34:42.710
那个时候是可以放参数的

02:34:42.710 --> 02:34:43.910
放了参数

02:34:43.910 --> 02:34:45.430
就是挑转到什么地址

02:34:45.430 --> 02:34:46.310
挑转到登录页

02:34:47.110 --> 02:34:47.350
好

02:34:47.350 --> 02:34:48.550
这是需要登录的情况

02:34:48.630 --> 02:34:49.750
如果说你不需要登录

02:34:49.750 --> 02:34:50.310
不需要登录

02:34:50.310 --> 02:34:51.270
然后还说啥呢

02:34:51.270 --> 02:34:51.830
直接放行

02:34:52.550 --> 02:34:53.190
你都不需要登录

02:34:53.190 --> 02:34:53.990
直接放行就完事了

02:34:54.790 --> 02:34:56.070
是不是这里还一块逻辑

02:34:56.630 --> 02:34:56.950
对吧

02:35:01.300 --> 02:35:02.500
是不是这里还一块逻辑

02:35:03.140 --> 02:35:03.300
好

02:35:03.300 --> 02:35:04.980
那么这里一块逻辑拿出来

02:35:04.980 --> 02:35:05.220
哎

02:35:05.220 --> 02:35:06.020
这里我们看一下

02:35:06.580 --> 02:35:07.140
那么现在呢

02:35:07.140 --> 02:35:08.180
我们再刷新电影业

02:35:08.180 --> 02:35:09.300
啊刷新电影业

02:35:09.300 --> 02:35:09.780
哎

02:35:09.780 --> 02:35:10.900
他居然还有哪个还能登录啊

02:35:11.460 --> 02:35:11.940
OK呀

02:35:13.900 --> 02:35:15.580
我这里哪里写错了吗

02:35:15.580 --> 02:35:16.060
OK呀

02:35:16.860 --> 02:35:17.740
4比4一起啊

02:35:17.740 --> 02:35:18.060
我记得

02:35:18.620 --> 02:35:20.300
4比4之前我写了效果的

02:35:20.380 --> 02:35:21.740
效果的都是写的比4一起

02:35:22.300 --> 02:35:23.100
4比4一起

02:35:24.140 --> 02:35:25.180
4比4一起啊

02:35:26.140 --> 02:35:27.100
刚才的运行的话

02:35:27.100 --> 02:35:28.300
他肯定是比4一起

02:35:29.180 --> 02:35:29.900
那么我们看一下

02:35:29.900 --> 02:35:31.580
他到底是哪里出了问题

02:35:31.580 --> 02:35:31.740
哦

02:35:32.540 --> 02:35:32.780
对呀

02:35:32.780 --> 02:35:33.580
当前没有登录啊

02:35:33.580 --> 02:35:34.460
当前是没有登录的

02:35:35.500 --> 02:35:36.780
当前是没有登录的

02:35:36.780 --> 02:35:36.940
好

02:35:36.940 --> 02:35:37.740
我们这里输出一下

02:35:38.060 --> 02:35:38.620
输出一下

02:35:39.260 --> 02:35:39.820
我们这里吧

02:35:39.820 --> 02:35:40.300
这样子

02:35:40.300 --> 02:35:40.700
一bug

02:35:41.980 --> 02:35:42.860
打个断点

02:35:42.860 --> 02:35:43.420
调试一下

02:35:44.220 --> 02:35:44.380
好

02:35:44.380 --> 02:35:45.420
看一下怎么回事

02:35:45.420 --> 02:35:46.780
这样调试的话就很

02:35:46.780 --> 02:35:47.260
很简单了

02:35:48.140 --> 02:35:48.860
F10

02:35:48.860 --> 02:35:49.260
Meta

02:35:50.300 --> 02:35:51.100
你的locking

02:35:51.100 --> 02:35:51.740
undefend

02:35:52.380 --> 02:35:54.060
我们目前访问的是什么呢

02:35:54.060 --> 02:35:55.580
访问的是move也对吧

02:35:55.580 --> 02:35:57.340
move也是需要登录的呀

02:35:58.220 --> 02:35:59.660
move也是需要登录的

02:36:01.420 --> 02:36:03.100
move也是有这个meta的

02:36:03.100 --> 02:36:04.060
那说明啥呢

02:36:04.060 --> 02:36:05.340
to里面这个meta

02:36:05.340 --> 02:36:06.460
meta没有值

02:36:07.740 --> 02:36:08.220
哎

02:36:08.220 --> 02:36:09.580
to里面meta没有值

02:36:14.040 --> 02:36:15.960
to里面是meta没有值

02:36:15.960 --> 02:36:17.160
to为什么是鞋杠呢

02:36:17.960 --> 02:36:18.200
哦

02:36:18.200 --> 02:36:18.520
等一下

02:36:18.520 --> 02:36:20.920
我这里重新重新重新重新运行词

02:36:22.760 --> 02:36:23.560
等一下啊

02:36:23.640 --> 02:36:25.000
我把这个页面重新运行词

02:36:26.360 --> 02:36:27.080
说话安全吗

02:36:28.760 --> 02:36:29.080
啊

02:36:29.080 --> 02:36:29.720
点电影

02:36:30.600 --> 02:36:31.000
哎

02:36:31.000 --> 02:36:31.880
这里出问题了

02:36:32.600 --> 02:36:33.800
这个to里面不太对

02:36:33.800 --> 02:36:33.960
啊

02:36:33.960 --> 02:36:35.160
这个to里面不太对

02:36:35.160 --> 02:36:35.800
刷新一次

02:36:38.950 --> 02:36:39.990
before each

02:36:39.990 --> 02:36:40.310
to

02:36:42.860 --> 02:36:43.500
to里面

02:36:47.580 --> 02:36:48.940
它为什么是一个

02:36:50.300 --> 02:36:51.580
它为什么是那个

02:36:52.940 --> 02:36:53.260
呃

02:36:54.460 --> 02:36:55.740
首页呢

02:36:55.740 --> 02:36:57.340
它不应该是首页啊

02:36:59.800 --> 02:37:01.240
我调的是电影页

02:37:02.200 --> 02:37:03.080
它不应该是首页

02:37:03.080 --> 02:37:03.960
是哪个地方写出来

02:37:05.960 --> 02:37:06.840
哦哦哦

02:37:06.840 --> 02:37:08.280
是front and to的位置

02:37:08.280 --> 02:37:09.160
我的天呐

02:37:10.280 --> 02:37:11.640
对对对对

02:37:12.040 --> 02:37:13.240
是front and to的位置啊

02:37:13.240 --> 02:37:13.880
第一个是to

02:37:13.880 --> 02:37:14.680
第二个是front

02:37:14.680 --> 02:37:15.880
第二个是front

02:37:15.880 --> 02:37:16.040
啊

02:37:16.040 --> 02:37:17.640
我说都是反的呢

02:37:19.560 --> 02:37:19.880
啊

02:37:20.440 --> 02:37:21.000
你看一下

02:37:21.000 --> 02:37:21.400
是不是到

02:37:21.880 --> 02:37:22.440
登录页了

02:37:22.440 --> 02:37:22.680
对吧

02:37:22.680 --> 02:37:23.320
点电影页

02:37:23.320 --> 02:37:23.800
点不过去

02:37:23.800 --> 02:37:24.040
对吧

02:37:24.040 --> 02:37:24.680
点不过去

02:37:24.680 --> 02:37:25.480
首页没问题

02:37:25.480 --> 02:37:26.360
电影要需要登录

02:37:26.360 --> 02:37:27.080
是不是点不过去

02:37:27.080 --> 02:37:27.640
对吧

02:37:27.640 --> 02:37:28.520
因为现在没有登录

02:37:28.520 --> 02:37:29.160
是不是点不过去

02:37:29.800 --> 02:37:30.760
你进不了电影页

02:37:30.760 --> 02:37:31.800
是不是有一个权限控制

02:37:32.200 --> 02:37:33.080
在导航所谓里边

02:37:33.080 --> 02:37:33.720
配合

02:37:33.720 --> 02:37:34.360
配合那个

02:37:34.360 --> 02:37:34.600
是吧

02:37:34.600 --> 02:37:35.160
仓库

02:37:35.160 --> 02:37:35.960
是不是搞定了

02:37:35.960 --> 02:37:36.360
这个

02:37:36.360 --> 02:37:37.000
这东西了

02:37:37.000 --> 02:37:37.720
你登录过后

02:37:37.720 --> 02:37:38.680
你看一下登录过后

02:37:38.680 --> 02:37:39.880
登录过后就可以了

02:37:39.880 --> 02:37:40.440
电影页

02:37:40.440 --> 02:37:40.680
是吧

02:37:40.680 --> 02:37:41.320
它通过了

02:37:41.320 --> 02:37:41.800
啊通过了

02:37:41.800 --> 02:37:42.920
因为已经登录了

02:37:42.920 --> 02:37:43.400
对吧

02:37:43.400 --> 02:37:43.960
已经登录了

02:37:44.760 --> 02:37:44.920
啊

02:37:44.920 --> 02:37:45.880
是不是就可以过去了

02:37:45.880 --> 02:37:46.120
对吧

02:37:46.120 --> 02:37:47.000
就是往前这么一个效果

02:37:47.560 --> 02:37:47.880
对不对

02:37:48.600 --> 02:37:48.840
好

02:37:49.560 --> 02:37:50.360
最后一件事啊

02:37:50.360 --> 02:37:51.000
最后一件事

02:37:52.760 --> 02:37:53.080
啊

02:37:53.080 --> 02:37:53.720
最后一件事啊

02:37:54.680 --> 02:37:55.880
我说什么回事啊

02:37:55.880 --> 02:37:56.760
最后一件事

02:37:56.760 --> 02:37:58.280
就是我们的仓库里边了

02:37:58.280 --> 02:38:00.200
肯定数据是不是不止登录用户

02:38:00.840 --> 02:38:02.440
所以不止这个登录用户啊

02:38:02.440 --> 02:38:03.800
是不是还有一些别的数据啊

02:38:04.440 --> 02:38:05.560
比方说电影

02:38:05.560 --> 02:38:07.080
那我们要把电影在这里管理

02:38:07.080 --> 02:38:08.040
是不是代码越来越多

02:38:08.040 --> 02:38:08.840
代码一向啊

02:38:08.840 --> 02:38:10.920
这个仓库里边管理很多很多数据

02:38:10.920 --> 02:38:12.280
那么代码是不是越来越多

02:38:13.320 --> 02:38:15.320
仓库也可以分模块

02:38:15.880 --> 02:38:17.000
一个模块的一个文件

02:38:17.560 --> 02:38:18.440
也可以分模块的

02:38:18.440 --> 02:38:20.120
比方login有点单独来处理

02:38:20.920 --> 02:38:22.120
单独来处理

02:38:22.120 --> 02:38:24.280
好比方说我们login有点复过来啊

02:38:26.120 --> 02:38:26.840
login有点

02:38:26.840 --> 02:38:28.040
导出了就不再是一个

02:38:28.040 --> 02:38:29.480
六一个views多了啊

02:38:29.560 --> 02:38:32.200
因为一个一个工程只需要六一次

02:38:32.200 --> 02:38:32.840
这个views多

02:38:33.400 --> 02:38:34.920
那么就像组建那样子啊

02:38:34.920 --> 02:38:36.680
其他组建都是最被跟组建使用的

02:38:37.240 --> 02:38:38.520
你只需要一些配置就行了

02:38:39.720 --> 02:38:41.720
一个模块只需要一些配置就行了

02:38:41.720 --> 02:38:43.960
模块里边把这个东西给我开起来

02:38:43.960 --> 02:38:44.520
spaced

02:38:45.560 --> 02:38:47.160
表示开启命名空间

02:38:47.160 --> 02:38:48.600
你别管是什么意思啊

02:38:49.160 --> 02:38:50.120
开启命名空间

02:38:51.240 --> 02:38:53.000
这个东西你想了不要想就开起来

02:38:53.000 --> 02:38:54.440
因为在你们以后在公司

02:38:54.440 --> 02:38:56.520
一定是开启这个东西的命名空间

02:38:56.520 --> 02:38:57.160
开启命名空间

02:38:57.160 --> 02:38:58.440
我以后说会有什么样的变化

02:38:59.560 --> 02:39:00.600
其他代码都一样啊

02:39:00.600 --> 02:39:01.800
其他代码完全一样

02:39:01.800 --> 02:39:04.680
你看状态里边状态里边我们就直接写了啊

02:39:04.680 --> 02:39:06.120
就不再使用login有点了啊

02:39:06.120 --> 02:39:07.640
因为也没有别的数据了

02:39:07.640 --> 02:39:09.720
对吧我们就这里只处理login有点

02:39:09.720 --> 02:39:11.400
只处理这当登录的用户

02:39:11.400 --> 02:39:12.920
所以说我们这里就直接写了

02:39:12.920 --> 02:39:14.760
data也是login啊直接写了

02:39:14.760 --> 02:39:17.320
所以我们state里边就也没有login有的了啊

02:39:17.320 --> 02:39:22.390
也没有login有的了直接写了啊这里啊

02:39:22.390 --> 02:39:23.350
我们看一下啊login

02:39:25.110 --> 02:39:28.310
login有点就点login有的的数

02:39:28.310 --> 02:39:29.990
还有没有啊没了啊

02:39:30.150 --> 02:39:31.670
好来看代码其他都没变啊

02:39:31.670 --> 02:39:32.790
其他都没有变化

02:39:32.790 --> 02:39:34.630
就是单独的写个文件

02:39:34.630 --> 02:39:35.670
把这个东西开起来

02:39:35.670 --> 02:39:37.830
把这个东西开起没了啊没了

02:39:38.710 --> 02:39:40.470
你是nody啊你看是不是没了啊

02:39:40.470 --> 02:39:43.110
其他代码完全一样啊完全一样啊

02:39:43.110 --> 02:39:43.670
完全一样

02:39:44.870 --> 02:39:47.590
然后到我们的仓库在这里

02:39:47.590 --> 02:39:48.630
在这里进行处理

02:39:48.630 --> 02:39:49.750
在这里进行合并

02:39:50.870 --> 02:39:53.110
你看着在这里这些代码就没了

02:39:53.110 --> 02:39:54.230
我们只需要导入什么呢

02:39:54.230 --> 02:39:58.070
导入这个login有的啊 from

02:39:58.230 --> 02:40:00.550
吊鞋杠login有的点解释在这里

02:40:02.150 --> 02:40:02.790
modules

02:40:03.430 --> 02:40:04.950
modules什么意思啊就是模块啊

02:40:06.470 --> 02:40:09.190
配置模块啊配置模块

02:40:09.190 --> 02:40:10.950
然后呢这个属性名

02:40:10.950 --> 02:40:12.870
属性名啊就表示的是

02:40:13.750 --> 02:40:15.510
总的模块里面的状态

02:40:16.070 --> 02:40:18.390
的对的属性名啊的属性名

02:40:18.390 --> 02:40:20.150
比方我们这里先配置一个abc嘛

02:40:20.150 --> 02:40:22.950
先配置一个abc啊这里写login有的

02:40:23.910 --> 02:40:26.630
先配置一个abc啊我们先假设配置一个abc

02:40:26.630 --> 02:40:27.990
好咱们来看一下我们的仓库

02:40:28.950 --> 02:40:30.230
咱们来看一下我们的仓库

02:40:30.790 --> 02:40:31.110
保存

02:40:31.670 --> 02:40:33.430
这里可能有些地方要爆错啊

02:40:33.990 --> 02:40:36.230
我们先到首页嘛首页不会爆错了

02:40:36.230 --> 02:40:37.830
首页有些地方也在爆错

02:40:37.830 --> 02:40:39.030
我们先把那个去掉

02:40:39.030 --> 02:40:39.990
先把个dbug去掉

02:40:40.710 --> 02:40:41.990
dbug我们写到那儿了

02:40:41.990 --> 02:40:42.870
写到这个rotor里面

02:40:43.510 --> 02:40:44.550
dbug有点反

02:40:44.550 --> 02:40:44.950
去掉啊

02:40:46.550 --> 02:40:47.910
好刷新啊刷新

02:40:47.910 --> 02:40:49.670
好首页里面其实也要爆错

02:40:49.670 --> 02:40:50.950
我以后会说什么错误

02:40:50.950 --> 02:40:52.070
好咱们看一下仓库

02:40:52.070 --> 02:40:52.790
仓库里面state

02:40:54.820 --> 02:40:55.700
是不是有个abc

02:40:55.700 --> 02:40:56.420
abc哪来的

02:40:57.300 --> 02:40:59.060
abc应用的是这个模块

02:40:59.780 --> 02:41:01.700
就是一个模块一个东西

02:41:01.700 --> 02:41:03.060
abc说应用了这个模块

02:41:03.460 --> 02:41:05.220
这个模块还得管理自己的数据

02:41:05.220 --> 02:41:06.900
对吧把它分小了对吧

02:41:06.900 --> 02:41:08.820
把它分小了abc是一个模块

02:41:08.820 --> 02:41:10.100
模块呢它是来自于这个

02:41:10.900 --> 02:41:11.620
来自于这个

02:41:11.620 --> 02:41:12.820
因为这个这里写的是啥

02:41:12.820 --> 02:41:14.340
那么这个总的仓库

02:41:14.340 --> 02:41:15.540
仓库只有一个对吧

02:41:15.540 --> 02:41:17.940
说仓库里面一定是一个非常大的对象

02:41:17.940 --> 02:41:19.620
所以总的仓库里面

02:41:19.620 --> 02:41:20.740
那个属性名就是啥

02:41:21.700 --> 02:41:22.340
就这么个意思

02:41:23.860 --> 02:41:24.740
你可以这样理解啊

02:41:24.740 --> 02:41:26.500
其实这个东西还可以签套很深的

02:41:26.500 --> 02:41:27.940
我们这里不要把讲复杂了

02:41:29.860 --> 02:41:31.860
你看一下这里abc是吧

02:41:33.380 --> 02:41:34.980
但是我们这里肯定要取个有意义的名字

02:41:34.980 --> 02:41:36.100
是不是就取个罗品优质

02:41:36.100 --> 02:41:36.420
对吧

02:41:36.420 --> 02:41:37.300
那这样子属性名

02:41:37.700 --> 02:41:39.060
属性名就变量名字一样

02:41:39.060 --> 02:41:40.500
那去掉一个罗品优质

02:41:41.540 --> 02:41:42.260
没问题吧

02:41:42.260 --> 02:41:43.300
配置一个模块

02:41:43.300 --> 02:41:45.620
那后面再要配置电影是不是一次写了

02:41:45.620 --> 02:41:46.900
对吧movie.js

02:41:46.900 --> 02:41:48.020
是吧一次写了

02:41:48.020 --> 02:41:49.460
这又是一个模块的吧

02:41:49.460 --> 02:41:50.340
这又是一个模块

02:41:51.300 --> 02:41:52.180
这又是一个模块

02:41:53.140 --> 02:41:53.460
这里

02:41:54.020 --> 02:41:54.420
来吧

02:41:55.220 --> 02:41:56.420
这里有导入

02:41:58.340 --> 02:41:58.740
导入

02:41:59.380 --> 02:42:00.020
movie

02:42:00.020 --> 02:42:00.820
movie

02:42:00.820 --> 02:42:02.020
是不是又是一个模块

02:42:02.020 --> 02:42:02.820
对不对

02:42:02.820 --> 02:42:04.820
只不过这个模块里面我们啥都没写

02:42:04.820 --> 02:42:05.540
这写一个吧

02:42:05.540 --> 02:42:06.180
写个

02:42:06.180 --> 02:42:06.980
写个电影就是

02:42:08.420 --> 02:42:09.300
电影数据吧

02:42:09.300 --> 02:42:09.940
电影数据

02:42:11.860 --> 02:42:13.380
或者是movie s

02:42:13.380 --> 02:42:13.860
就这样吧

02:42:13.860 --> 02:42:14.260
就这样

02:42:15.300 --> 02:42:15.700
好了

02:42:15.700 --> 02:42:16.420
你看一下

02:42:16.420 --> 02:42:17.780
是不是就导入了两个模块了

02:42:18.740 --> 02:42:19.780
就导入了两个模块了

02:42:19.780 --> 02:42:20.100
对不对

02:42:20.740 --> 02:42:21.140
你看一下

02:42:21.140 --> 02:42:21.700
状态里边

02:42:22.340 --> 02:42:23.380
仓库状态里边

02:42:23.380 --> 02:42:23.940
Stone

02:42:23.940 --> 02:42:24.260
State

02:42:25.860 --> 02:42:27.220
状态里边是不是有两个模块

02:42:27.220 --> 02:42:27.860
罗品优质

02:42:27.860 --> 02:42:28.180
movie

02:42:28.180 --> 02:42:28.420
对吧

02:42:28.500 --> 02:42:29.780
各自管理各自的数据

02:42:30.820 --> 02:42:32.500
而且模块里边

02:42:33.860 --> 02:42:35.540
提交那个action的时候

02:42:36.100 --> 02:42:37.940
所以有可能会造成名称冲突

02:42:38.500 --> 02:42:39.380
你看你这个地方

02:42:39.380 --> 02:42:41.220
你用的set一直漏定

02:42:41.220 --> 02:42:42.020
那么movie里边

02:42:42.020 --> 02:42:43.940
所以也有可能会是用set一直漏定

02:42:43.940 --> 02:42:44.260
对吧

02:42:44.260 --> 02:42:45.060
是不是action的

02:42:45.060 --> 02:42:46.580
就是那个maturation的名称

02:42:46.580 --> 02:42:48.340
或者是action的名称会造成冲突

02:42:48.340 --> 02:42:49.300
因为有很多个模块

02:42:49.780 --> 02:42:51.700
所以这就是为什么要开启这个

02:42:52.260 --> 02:42:54.020
为什么要开启命名空间

02:42:54.020 --> 02:42:56.100
开启了命名空间之后

02:42:56.100 --> 02:42:58.100
在外边要出发

02:42:58.180 --> 02:42:59.220
对应的action

02:42:59.220 --> 02:43:01.060
必须要把这个模块名加上

02:43:01.940 --> 02:43:03.460
必须要把这个模块名

02:43:03.460 --> 02:43:04.820
就把这个名字加上

02:43:04.820 --> 02:43:06.260
比方说我们刚才这里

02:43:06.260 --> 02:43:07.380
刚才这里在登录吗

02:43:07.380 --> 02:43:07.860
对吧

02:43:07.860 --> 02:43:08.980
在是不是在这里登录

02:43:08.980 --> 02:43:10.180
我们在这里干嘛

02:43:10.180 --> 02:43:10.980
是不是要

02:43:10.980 --> 02:43:12.260
这里就是来自于State

02:43:12.260 --> 02:43:12.740
Nokin user

02:43:12.740 --> 02:43:13.380
对吧

02:43:13.380 --> 02:43:14.020
一样的

02:43:14.020 --> 02:43:15.140
那么在这里是不是要登录

02:43:15.140 --> 02:43:16.580
这里是不是要触发

02:43:16.580 --> 02:43:17.700
分发这个action

02:43:17.700 --> 02:43:18.340
分发action

02:43:18.340 --> 02:43:20.260
我们现在犹豫有了命名空间

02:43:20.260 --> 02:43:22.020
为了防止名称冲突

02:43:22.020 --> 02:43:24.500
那么这里要前面要加上模块名

02:43:24.500 --> 02:43:25.700
Nokin user

02:43:25.700 --> 02:43:27.700
要加上模块名一个鞋杠

02:43:27.780 --> 02:43:28.980
这样子名称就不会冲突了

02:43:28.980 --> 02:43:31.220
因为模块名不会冲突对吧

02:43:31.220 --> 02:43:32.500
好那么同样的道理

02:43:32.500 --> 02:43:34.580
刚才在登出的时候

02:43:34.580 --> 02:43:36.420
在登出的时候

02:43:36.420 --> 02:43:38.020
在这个

02:43:38.020 --> 02:43:38.900
在那个header

02:43:38.900 --> 02:43:40.100
把header逐渐里边

02:43:40.100 --> 02:43:42.180
在登出的时候

02:43:42.180 --> 02:43:45.060
那么是不是也要加上模块名

02:43:45.060 --> 02:43:46.420
Nokin user

02:43:46.420 --> 02:43:47.620
Nokin out

02:43:47.620 --> 02:43:48.900
好那么一开始的时候

02:43:48.900 --> 02:43:50.020
index的时候

02:43:50.020 --> 02:43:52.820
是不是也要加上模块名

02:43:52.820 --> 02:43:54.100
Nokin user

02:43:54.100 --> 02:43:55.300
sync local

02:43:55.300 --> 02:43:55.620
是吧

02:43:55.620 --> 02:43:56.340
是不是完了

02:43:56.340 --> 02:43:57.860
对吧

02:43:57.860 --> 02:43:59.140
一样的

02:43:59.140 --> 02:44:00.820
接下来就是一样的

02:44:00.820 --> 02:44:01.540
登出

02:44:01.540 --> 02:44:02.180
是不是一样的

02:44:02.180 --> 02:44:04.340
对吧

02:44:04.340 --> 02:44:05.460
就是模块

02:44:05.460 --> 02:44:07.300
你们以后的公司里面使用那个

02:44:07.300 --> 02:44:08.660
仓库肯定要分模块的

02:44:08.660 --> 02:44:10.180
因为系统不够复杂了

02:44:10.180 --> 02:44:10.980
工厂的数据很多

02:44:10.980 --> 02:44:12.740
肯定要分不同的模块来做的

02:44:12.740 --> 02:44:13.780
但是你要知道

02:44:13.780 --> 02:44:14.820
在内部的话

02:44:14.820 --> 02:44:17.620
模块内部是不需要加模块名的

02:44:17.620 --> 02:44:20.420
是不需要加命名空间的

02:44:20.420 --> 02:44:21.700
我们这里记一笔吧

02:44:21.700 --> 02:44:22.900
记一笔

02:44:22.900 --> 02:44:25.560
笔记

02:44:25.640 --> 02:44:27.400
仓库中可以配置

02:44:27.400 --> 02:44:30.440
就是还有一个配置就是modules

02:44:30.440 --> 02:44:32.680
配置模块

02:44:32.680 --> 02:44:35.960
模块

02:44:35.960 --> 02:44:37.400
模块

02:44:37.400 --> 02:44:43.560
模块中通常都会配置name

02:44:43.560 --> 02:44:45.400
spaced

02:44:45.400 --> 02:44:46.840
委屈

02:44:46.840 --> 02:44:51.480
以防止命名冲突

02:44:51.480 --> 02:44:52.760
命名冲突

02:44:52.760 --> 02:44:55.080
在除了模块内部

02:44:55.160 --> 02:44:57.240
除了模块内部

02:44:57.240 --> 02:44:59.080
外部再使用

02:44:59.080 --> 02:45:01.640
再使用那个

02:45:01.640 --> 02:45:03.880
再触发action

02:45:03.880 --> 02:45:06.120
或mattation

02:45:06.120 --> 02:45:09.560
使必须添加模块名

02:45:09.560 --> 02:45:10.760
也就是命名空间

02:45:10.760 --> 02:45:13.560
也就是命名空间

02:45:13.560 --> 02:45:15.080
除了模块内部不用添加

02:45:15.080 --> 02:45:17.240
因为模块内部处理的是自己的数据

02:45:17.240 --> 02:45:18.600
这就是context

02:45:18.600 --> 02:45:19.240
我刚才说

02:45:19.240 --> 02:45:20.680
context跟stone

02:45:20.680 --> 02:45:21.960
几乎一样

02:45:21.960 --> 02:45:22.600
就是几

02:45:22.600 --> 02:45:23.880
为什么叫几乎一样

02:45:23.880 --> 02:45:24.840
因为都是在内部

02:45:24.840 --> 02:45:25.960
内部的话叫上下文

02:45:25.960 --> 02:45:26.280
对吧

02:45:26.280 --> 02:45:27.960
在我们这个环境里边

02:45:27.960 --> 02:45:29.160
我们这个上下文中

02:45:29.160 --> 02:45:29.800
你触发的时候

02:45:29.800 --> 02:45:31.880
是不用添加模块名的

02:45:31.880 --> 02:45:33.320
但是在外部的时候

02:45:33.320 --> 02:45:34.040
你触发的时候

02:45:34.040 --> 02:45:35.480
是要添加模块名的

02:45:35.480 --> 02:45:37.240
你看是不是要添加模块名

02:45:37.240 --> 02:45:37.960
对吧

02:45:37.960 --> 02:45:39.240
那么这样子分了模块之后

02:45:39.240 --> 02:45:40.120
你看我们现在

02:45:40.120 --> 02:45:41.000
花几分钟时间

02:45:41.000 --> 02:45:42.440
就可以把电影的数据提出来

02:45:42.440 --> 02:45:43.160
电影的数据

02:45:43.160 --> 02:45:45.480
来我们电影的数据

02:45:45.480 --> 02:45:46.280
我觉得我好猛

02:45:46.280 --> 02:45:46.680
我真的

02:45:46.680 --> 02:45:48.360
我都快想了三个小时了

02:45:48.360 --> 02:45:50.200
我真的流鼻

02:45:50.200 --> 02:45:51.240
那么这里的电影数据

02:45:51.240 --> 02:45:52.600
来

02:45:52.760 --> 02:45:53.480
来

02:45:53.480 --> 02:45:54.360
配级

02:45:54.360 --> 02:45:55.000
第几页

02:45:55.000 --> 02:45:56.200
第一页

02:45:56.200 --> 02:45:56.760
头头

02:45:56.760 --> 02:45:57.800
总数据量

02:45:57.800 --> 02:45:58.360
总数据量

02:45:58.360 --> 02:45:59.640
我们说的还是复制吧

02:45:59.640 --> 02:46:00.600
确实难得写

02:46:00.600 --> 02:46:01.960
难得写

02:46:01.960 --> 02:46:02.920
配级是Movie

02:46:02.920 --> 02:46:03.720
Movie配级

02:46:03.720 --> 02:46:04.760
Movie配级

02:46:04.760 --> 02:46:06.040
这要肯定要导入这个

02:46:06.040 --> 02:46:07.720
肯定要导入这个

02:46:07.720 --> 02:46:09.560
Movie Service

02:46:09.560 --> 02:46:11.960
我们看一下我们写的过程

02:46:11.960 --> 02:46:13.000
到这个

02:46:13.000 --> 02:46:13.400
没问题

02:46:13.400 --> 02:46:14.200
没问题

02:46:14.200 --> 02:46:15.560
然后Movie配级里边

02:46:15.560 --> 02:46:17.160
还要到

02:46:17.160 --> 02:46:18.200
还有哪些状态呢

02:46:18.200 --> 02:46:19.240
状态是不是这些

02:46:19.240 --> 02:46:20.040
对吧

02:46:20.040 --> 02:46:22.040
这些

02:46:22.120 --> 02:46:23.160
这是

02:46:23.160 --> 02:46:25.320
把钱关掉

02:46:25.320 --> 02:46:26.200
状态就是这些

02:46:26.200 --> 02:46:27.400
这些就是状态对吧

02:46:27.400 --> 02:46:27.960
这些

02:46:27.960 --> 02:46:29.240
所以这些状态

02:46:29.240 --> 02:46:30.760
那么有哪些改变状态呢

02:46:30.760 --> 02:46:30.920
好

02:46:30.920 --> 02:46:31.960
我们这里给大家写一个

02:46:31.960 --> 02:46:33.880
写个改变状态的一个通用方法

02:46:33.880 --> 02:46:35.000
我特别喜欢这种方法

02:46:35.000 --> 02:46:36.760
叫set state

02:46:36.760 --> 02:46:38.120
设置整个状态

02:46:38.120 --> 02:46:39.640
你给我传个对象进来

02:46:39.640 --> 02:46:40.360
比方说

02:46:40.360 --> 02:46:41.960
这里第一个参数是

02:46:41.960 --> 02:46:42.680
状态对吧

02:46:42.680 --> 02:46:43.880
第一个参数是陪漏的

02:46:43.880 --> 02:46:44.120
好

02:46:44.120 --> 02:46:46.200
你给我传一个新的状态进来

02:46:46.200 --> 02:46:47.800
一个传一个新的状态对象进来

02:46:47.800 --> 02:46:48.760
当时我们怎么传进来

02:46:48.760 --> 02:46:49.560
就这样的传递

02:46:49.640 --> 02:46:50.840
比方说我要设置一只loading

02:46:50.840 --> 02:46:52.200
我就把一只loading设为去

02:46:52.200 --> 02:46:54.280
一只loading设为去

02:46:54.280 --> 02:46:55.400
我就这样传递

02:46:55.400 --> 02:46:56.200
这样传递过去

02:46:56.200 --> 02:46:57.880
那么它只会改变一只loading

02:46:57.880 --> 02:46:59.240
不会改变其他东西

02:46:59.240 --> 02:46:59.400
好

02:46:59.400 --> 02:47:01.880
那么这个东西怎么来写呢

02:47:01.880 --> 02:47:03.640
怎么来写呢

02:47:03.640 --> 02:47:05.560
缝印循环

02:47:05.560 --> 02:47:06.440
缝印循环

02:47:06.440 --> 02:47:07.080
循环什么

02:47:07.080 --> 02:47:08.120
循环new state

02:47:08.120 --> 02:47:10.120
就是循环你给它传递的对象

02:47:10.120 --> 02:47:10.920
对吧

02:47:10.920 --> 02:47:11.560
这里还可以给

02:47:11.560 --> 02:47:12.840
还一个默认值

02:47:12.840 --> 02:47:14.200
给参数一个默认值

02:47:14.200 --> 02:47:15.080
如果它没有传递的话

02:47:15.080 --> 02:47:16.200
一个空对象

02:47:16.200 --> 02:47:16.440
好

02:47:16.440 --> 02:47:17.800
循环你这个对象

02:47:17.800 --> 02:47:19.400
是不是拿到一个个的属性名

02:47:19.400 --> 02:47:21.960
然后把这个state原来的属性名

02:47:21.960 --> 02:47:23.960
是不是改成new state的

02:47:23.960 --> 02:47:25.480
什么属性对应的属性值

02:47:25.480 --> 02:47:25.720
对吧

02:47:25.720 --> 02:47:26.600
就这样改

02:47:26.600 --> 02:47:27.400
就这样改

02:47:27.400 --> 02:47:28.840
就完了

02:47:28.840 --> 02:47:29.640
set state

02:47:29.640 --> 02:47:30.280
对吧

02:47:30.280 --> 02:47:31.560
这样子是不是通用了

02:47:31.560 --> 02:47:31.800
对吧

02:47:31.800 --> 02:47:32.280
通用了

02:47:32.280 --> 02:47:33.960
你想设置多少就设置多少

02:47:33.960 --> 02:47:34.280
对不对

02:47:39.800 --> 02:47:41.000
蒙正常的

02:47:41.000 --> 02:47:42.840
我觉得如果说第一次你接触

02:47:42.840 --> 02:47:44.520
我要一个是你不蒙

02:47:44.520 --> 02:47:46.840
我第一次接触的时候都蒙了

02:47:46.840 --> 02:47:47.880
但是这是骗人的

02:47:47.880 --> 02:47:49.720
因为我之前学过那个dux

02:47:49.880 --> 02:47:51.560
学过那个dux的人不可能蒙的

02:47:51.560 --> 02:47:53.240
但是我第一次接触那个dux

02:47:53.240 --> 02:47:53.960
我真的是蒙了

02:47:53.960 --> 02:47:54.760
我真的是蒙了

02:47:54.760 --> 02:47:55.400
就这么模式

02:47:55.400 --> 02:47:56.920
我真的是蒙了

02:47:56.920 --> 02:47:58.120
所以说这个要反复看

02:47:58.120 --> 02:47:58.600
反复看

02:47:58.600 --> 02:48:01.590
反复去琢磨

02:48:01.590 --> 02:48:03.510
要知道我看的还是文档

02:48:03.510 --> 02:48:04.710
我还不是这么交承了

02:48:04.710 --> 02:48:05.510
你们还会交承

02:48:05.510 --> 02:48:07.190
给你用一个完整的案例

02:48:07.190 --> 02:48:07.910
一次一次

02:48:07.910 --> 02:48:09.190
还在这给你写过来的

02:48:09.190 --> 02:48:10.070
我还得是文档

02:48:10.070 --> 02:48:10.710
兄弟

02:48:10.710 --> 02:48:12.150
那个谁真的是老虎

02:48:12.150 --> 02:48:13.110
这里呢

02:48:13.110 --> 02:48:14.150
还有maticians

02:48:15.830 --> 02:48:16.550
maticians

02:48:19.670 --> 02:48:20.470
我这写错了

02:48:20.470 --> 02:48:21.190
写错了

02:48:21.590 --> 02:48:22.470
写错了

02:48:22.470 --> 02:48:23.910
这个是x形式

02:48:23.910 --> 02:48:24.870
这个是x形式

02:48:24.870 --> 02:48:25.670
这是matic形式

02:48:25.670 --> 02:48:25.910
对吧

02:48:25.910 --> 02:48:26.790
改变数据

02:48:26.790 --> 02:48:27.030
好

02:48:27.030 --> 02:48:28.630
那么这里的x形式

02:48:28.630 --> 02:48:29.510
x形式是副作用

02:48:29.510 --> 02:48:29.750
对吧

02:48:29.750 --> 02:48:30.550
副作用

02:48:30.550 --> 02:48:32.310
那么就是分业获取电影

02:48:32.310 --> 02:48:33.430
废棋

02:48:33.430 --> 02:48:36.870
根据当前的分业设置来获取电影

02:48:36.870 --> 02:48:37.670
废棋

02:48:37.670 --> 02:48:38.630
connex

02:48:39.910 --> 02:48:40.550
什么意思

02:48:40.550 --> 02:48:44.870
就是根据当前的分业设置

02:48:44.870 --> 02:48:46.230
获取电影

02:48:46.230 --> 02:48:47.670
获取电影数据

02:48:47.670 --> 02:48:48.470
获取电影数据

02:48:48.470 --> 02:48:48.630
是吧

02:48:48.630 --> 02:48:49.910
设置到这个muvice里面

02:48:49.910 --> 02:48:50.470
对吧

02:48:50.550 --> 02:48:51.430
设置到data是吧

02:48:51.430 --> 02:48:53.190
data是

02:48:53.190 --> 02:48:53.910
设置到这里面

02:48:53.910 --> 02:48:54.230
对吧

02:48:54.230 --> 02:48:54.710
是不是

02:48:54.710 --> 02:48:55.750
设置到这里面

02:48:55.750 --> 02:48:56.710
data是

02:48:56.710 --> 02:48:57.030
好

02:48:57.030 --> 02:48:57.190
来

02:48:57.190 --> 02:48:58.470
我们来获取电影数据

02:48:58.470 --> 02:48:59.510
这个不是有个函数吗

02:48:59.510 --> 02:48:59.830
对吧

02:48:59.830 --> 02:49:00.550
muvice service

02:49:02.070 --> 02:49:03.510
然后getmuvice

02:49:04.310 --> 02:49:04.790
传啥

02:49:04.790 --> 02:49:06.230
第一个就是什么

02:49:06.230 --> 02:49:07.190
第一个是yema

02:49:07.190 --> 02:49:07.750
connex

02:49:08.870 --> 02:49:09.750
stats

02:49:09.750 --> 02:49:10.630
叫什么

02:49:10.630 --> 02:49:11.030
叫什么

02:49:12.790 --> 02:49:13.830
来自哪

02:49:13.830 --> 02:49:16.230
connex叫setstats的什么

02:49:16.230 --> 02:49:16.710
配级

02:49:16.710 --> 02:49:17.750
对不对

02:49:17.750 --> 02:49:19.030
当前装

02:49:19.030 --> 02:49:19.670
current

02:49:19.670 --> 02:49:20.390
当前的

02:49:20.390 --> 02:49:21.270
当前的yema

02:49:21.270 --> 02:49:22.230
对不对

02:49:22.230 --> 02:49:23.350
这里不用加命名空间

02:49:24.870 --> 02:49:25.910
这里不用加命名空间

02:49:27.590 --> 02:49:28.070
没问题吧

02:49:29.830 --> 02:49:30.070
好

02:49:30.070 --> 02:49:30.950
那么这里呢

02:49:30.950 --> 02:49:32.070
当前的yema

02:49:32.070 --> 02:49:32.790
然后呢

02:49:32.790 --> 02:49:33.910
一总业数

02:49:33.910 --> 02:49:34.390
没有

02:49:34.390 --> 02:49:35.270
每页线多少条

02:49:35.270 --> 02:49:37.110
stats的配级sets

02:49:37.110 --> 02:49:38.710
模块内部是不用加命名空间的

02:49:39.430 --> 02:49:40.150
说这样的获取

02:49:41.110 --> 02:49:41.670
这样获取

02:49:41.670 --> 02:49:42.870
我们之前拿起来的Zin

02:49:42.870 --> 02:49:43.270
对吧

02:49:43.270 --> 02:49:43.830
Zin

02:49:43.830 --> 02:49:45.110
拿到服务器的响应结果

02:49:46.310 --> 02:49:47.750
你现在还觉得登录简单吗

02:49:48.710 --> 02:49:49.670
至少登录了一块

02:49:49.670 --> 02:49:50.630
反正现在写完了

02:49:50.630 --> 02:49:51.750
现在才写完

02:49:51.750 --> 02:49:53.670
其实如果说考虑更多东西的话

02:49:53.670 --> 02:49:54.790
都还没有写完

02:49:54.790 --> 02:49:55.830
好那么这里呢

02:49:55.830 --> 02:49:56.630
Zin

02:49:56.630 --> 02:49:57.190
然后呢

02:49:57.190 --> 02:49:58.950
干嘛服务器是不是拿到一个结果了

02:49:58.950 --> 02:50:00.230
服务器结果是不是有什么

02:50:00.230 --> 02:50:01.110
我们之前说过的

02:50:01.110 --> 02:50:02.150
服务器的结果是toto

02:50:02.790 --> 02:50:03.830
salsa

02:50:03.830 --> 02:50:04.550
dataS

02:50:04.550 --> 02:50:04.870
salsa

02:50:04.870 --> 02:50:05.110
对吧

02:50:05.830 --> 02:50:06.870
这是服务器的结果

02:50:06.870 --> 02:50:07.830
那么我们干嘛

02:50:07.830 --> 02:50:08.790
我们干嘛

02:50:08.790 --> 02:50:10.470
是不是要设置数据啊

02:50:10.470 --> 02:50:11.910
要干嘛contact

02:50:11.910 --> 02:50:12.550
comment

02:50:12.550 --> 02:50:13.110
提交

02:50:13.110 --> 02:50:13.830
matation

02:50:13.830 --> 02:50:14.790
什么matation

02:50:14.790 --> 02:50:16.470
是不是这个setsDat

02:50:17.430 --> 02:50:17.830
然后呢

02:50:17.830 --> 02:50:18.710
给他设置什么

02:50:18.710 --> 02:50:19.750
设置dataS

02:50:20.790 --> 02:50:21.830
dataS来自于哪

02:50:21.830 --> 02:50:23.670
来自於resp.dataS

02:50:23.670 --> 02:50:24.710
设置toto

02:50:24.710 --> 02:50:26.230
来自于resp

02:50:26.230 --> 02:50:28.150
reesp.toto

02:50:28.150 --> 02:50:28.710
对不对

02:50:28.710 --> 02:50:29.830
是不是来设置这个

02:50:29.830 --> 02:50:30.230
对吧

02:50:30.230 --> 02:50:32.230
那你直接把Risb傳過去不玩了嗎?

02:50:32.230 --> 02:50:34.230
Risb不就是一個對象嗎?

02:50:34.230 --> 02:50:36.230
它不就是這樣的格式嗎?

02:50:36.230 --> 02:50:38.230
那這裡就會循環複製 對吧?

02:50:38.230 --> 02:50:40.230
複製給它,循環給它複製

02:50:40.230 --> 02:50:42.230
commit

02:50:42.230 --> 02:50:44.230
電影這一塊,如果說你聽不懂的話

02:50:44.230 --> 02:50:46.230
也無所謂了,反正你知道

02:50:46.230 --> 02:50:48.230
我來寫另外一個模塊,跟那個登錄用戶

02:50:48.230 --> 02:50:50.230
已經沒關係了,寫另外一個模塊

02:50:50.230 --> 02:50:52.230
這是一個副作用,只是想給大家多寫一點

02:50:52.230 --> 02:50:54.230
既然都已經快11點了

02:50:54.230 --> 02:50:56.230
我就無所謂了,多寫一點

02:50:56.230 --> 02:50:58.230
好,廢棄

02:50:58.230 --> 02:51:00.230
commit

02:51:00.230 --> 02:51:02.230
然後我們還有這個

02:51:02.230 --> 02:51:04.230
一開始把它設置為Loading

02:51:04.230 --> 02:51:06.230
我看現在還有100人嗎?

02:51:06.230 --> 02:51:08.230
劉碧

02:51:08.230 --> 02:51:10.230
你們真的劉碧,你們真的聽得下去

02:51:10.230 --> 02:51:12.230
劉碧

02:51:12.230 --> 02:51:14.230
說明大家對技術的渴望真的

02:51:14.230 --> 02:51:16.230
真的讓我挺感動的

02:51:16.230 --> 02:51:18.230
set set

02:51:18.230 --> 02:51:20.230
即使繼續觸發這個

02:51:20.230 --> 02:51:22.230
就是Mattation

02:51:22.230 --> 02:51:24.230
一直Loading設備去

02:51:24.230 --> 02:51:26.230
你看這個非常靈活

02:51:26.230 --> 02:51:28.230
用這個提醒可以處理任何

02:51:28.230 --> 02:51:30.230
任何格式的數據

02:51:30.230 --> 02:51:32.230
我想改這個,就傳這個

02:51:32.230 --> 02:51:34.230
我想改這個這兩個,我就傳這兩個

02:51:34.230 --> 02:51:36.230
想改哪些,改哪些

02:51:36.230 --> 02:51:38.230
通用的一個處理函數

02:51:38.230 --> 02:51:40.230
好,那麼這裡處理完了過後

02:51:40.230 --> 02:51:42.230
我們就把set set再設為Force

02:51:42.230 --> 02:51:44.230
這設為Force

02:51:44.230 --> 02:51:46.230
對不對,說這樣子寫

02:51:46.230 --> 02:51:48.230
廢棄嘛,根據當前的

02:51:48.230 --> 02:51:50.230
yea嘛,廢棄Size來

02:51:50.230 --> 02:51:52.230
設置數據

02:51:52.230 --> 02:51:54.230
好,那麼現在這個東西寫好了

02:51:54.230 --> 02:51:56.230
我們再回到電影頁面

02:51:56.230 --> 02:51:58.230
因為現在已經把電影變成一個共享數據了

02:51:58.230 --> 02:52:00.230
那麼我們再回到電影頁面

02:52:00.230 --> 02:52:02.230
電影頁面還用這些玩意

02:52:02.230 --> 02:52:04.230
是不是一個都用不著了

02:52:04.230 --> 02:52:06.230
可能在倉庫裡面還用得著你嗎

02:52:06.230 --> 02:52:08.230
是不是用不著了

02:52:08.230 --> 02:52:10.230
用不著了,用不著了

02:52:10.230 --> 02:52:12.230
那麼現在這個東西也用不著了

02:52:12.230 --> 02:52:14.230
對不對,用不著了,這些數據

02:52:14.230 --> 02:52:16.230
全部放到計算屬性裡面

02:52:16.230 --> 02:52:18.230
我們這個東西是不是也用不著了

02:52:18.230 --> 02:52:20.230
這次Movice是不是也用不著了

02:52:20.230 --> 02:52:22.230
對不對,都用不著了

02:52:22.230 --> 02:52:24.230
現在加在完成過後

02:52:24.230 --> 02:52:26.230
我們要幹嘛呢

02:52:26.230 --> 02:52:28.230
讓它去獲取數據

02:52:28.230 --> 02:52:30.230
Store

02:52:30.230 --> 02:52:32.230
Dispatch

02:52:32.230 --> 02:52:34.230
Dispatch是什麼

02:52:34.230 --> 02:52:36.230
Movie

02:52:36.230 --> 02:52:38.230
看著,命名空間

02:52:38.230 --> 02:52:40.230
Movie

02:52:40.230 --> 02:52:42.230
斜槓

02:52:42.230 --> 02:52:44.230
Fate

02:52:44.230 --> 02:52:46.230
觸發X型

02:52:46.230 --> 02:52:48.230
獲取數據

02:52:48.230 --> 02:52:50.230
觸發X型,獲取數據

02:52:51.230 --> 02:52:52.230
是不是寫到這兒

02:52:52.230 --> 02:52:53.230
我們剛才寫的

02:52:53.230 --> 02:52:54.230
有哪些數據要獲取

02:52:54.230 --> 02:52:55.230
從倉庫裡面來的

02:52:55.230 --> 02:52:56.230
哪些數據要獲取

02:52:56.230 --> 02:52:58.230
Current,是不是要獲取

02:52:58.230 --> 02:53:00.230
Current,哪來的

02:53:06.230 --> 02:53:08.230
要不然你就把這個打印出來看一下

02:53:08.230 --> 02:53:09.230
你要的數據在哪

02:53:09.230 --> 02:53:11.230
總之從倉庫裡面去把數據找到,獲取

02:53:11.230 --> 02:53:13.230
然後呢

02:53:13.230 --> 02:53:14.230
除了Current之外

02:53:14.230 --> 02:53:17.230
還有什麼PageSize

02:53:17.230 --> 02:53:19.230
是不是也要寫PageSize

02:53:19.230 --> 02:53:21.230
這樣寫下來是不是很麻煩

02:53:21.230 --> 02:53:22.230
是不是很麻煩

02:53:22.230 --> 02:53:23.230
那麼這個時候

02:53:23.230 --> 02:53:24.230
拍上用場了

02:53:24.230 --> 02:53:25.230
我們那個MapState

02:53:25.230 --> 02:53:27.230
拍上用場了

02:53:27.230 --> 02:53:29.230
MapState出現

02:53:29.230 --> 02:53:30.230
我們把這個付出來

02:53:30.230 --> 02:53:32.670
現在我們用MapState

02:53:32.670 --> 02:53:34.670
來搞定這件事情

02:53:34.670 --> 02:53:37.670
Wilux,MapState

02:53:37.670 --> 02:53:38.670
第一個參數

02:53:38.670 --> 02:53:39.670
你可以寫命名空間

02:53:39.670 --> 02:53:40.670
給它一個默認的命名空間

02:53:40.670 --> 02:53:41.670
命名空間是什麼呢

02:53:41.670 --> 02:53:42.670
是Movie

02:53:42.670 --> 02:53:44.670
你看,命名空間的名字對應這個

02:53:44.670 --> 02:53:45.670
不是對應這個

02:53:45.670 --> 02:53:46.670
對應這裡

02:53:46.670 --> 02:53:47.670
這裡寫的名字

02:53:47.670 --> 02:53:49.670
這是命名空間的名字

02:53:49.670 --> 02:53:50.670
那麼這裡命名空間是Movie

02:53:50.670 --> 02:53:52.670
那麼它只在Movie裡面取數據

02:53:52.670 --> 02:53:53.670
後面寫個中夥號

02:53:53.670 --> 02:53:55.670
我們需要哪些數據

02:53:55.670 --> 02:53:57.670
需要的是Current

02:53:57.670 --> 02:53:59.670
它可以這樣子寫

02:53:59.670 --> 02:54:01.670
需要的是PageSize

02:54:01.670 --> 02:54:04.670
它會自動幫你生成這個代碼

02:54:04.670 --> 02:54:06.670
它會自動幫你生成這個代碼

02:54:06.670 --> 02:54:08.670
因為你命名空間告訴它了

02:54:08.670 --> 02:54:09.670
你要的屬性名告訴它了

02:54:09.670 --> 02:54:12.670
它就會直接幫你生成這個代碼

02:54:12.670 --> 02:54:14.670
PageSize,對吧

02:54:14.670 --> 02:54:15.670
PageSize

02:54:15.670 --> 02:54:17.670
然後得到什麼呢

02:54:17.670 --> 02:54:20.670
得到那個還有什麼

02:54:20.670 --> 02:54:21.670
還有什麼

02:54:21.670 --> 02:54:23.670
還有我們哪還需要什麼數據

02:54:23.670 --> 02:54:24.670
還需要那個

02:54:24.670 --> 02:54:26.670
我們這裡用DataS

02:54:26.670 --> 02:54:28.670
還需要DataS

02:54:28.670 --> 02:54:30.670
因為我們倉庫裡面有DataS這個數據

02:54:30.670 --> 02:54:31.670
還需要一直留定

02:54:31.670 --> 02:54:34.670
這些東西都需要

02:54:34.670 --> 02:54:37.670
這是我們需要的數據

02:54:37.670 --> 02:54:38.670
還需要什麼呢

02:54:38.670 --> 02:54:42.500
還需要偷偷

02:54:42.500 --> 02:54:44.500
所以我們都需要數據

02:54:44.500 --> 02:54:46.500
好,這些都從倉庫裡面來

02:54:46.500 --> 02:54:47.500
什麼意思

02:54:47.500 --> 02:54:51.500
用命名空間下面找到這些數據

02:54:51.500 --> 02:54:53.500
把它變成計算屬性

02:54:53.500 --> 02:54:54.500
把它變成這麼一個對象

02:54:54.500 --> 02:54:56.500
形成一個計算屬性

02:54:56.500 --> 02:54:57.500
放到這兒

02:54:57.500 --> 02:54:59.500
放到這兒就這麼意思

02:54:59.500 --> 02:55:01.500
好,來看一下電影

02:55:01.500 --> 02:55:03.500
這裡出錯了

02:55:03.500 --> 02:55:05.500
看一下哪裡出

02:55:05.500 --> 02:55:12.220
Lots found in MapState Movie

02:55:12.220 --> 02:55:13.220
這裡要寫個寫綱

02:55:13.220 --> 02:55:15.220
需要寫個寫綱

02:55:15.220 --> 02:55:18.220
不對

02:55:18.220 --> 02:55:19.220
明白了

02:55:19.220 --> 02:55:21.220
我沒有開啟命名空間

02:55:21.220 --> 02:55:23.220
忘了開啟命名空間

02:55:23.220 --> 02:55:25.220
Name is best

02:55:25.220 --> 02:55:27.220
沒關係,反正是路平

02:55:27.220 --> 02:55:32.860
出來

02:55:32.860 --> 02:55:35.860
都是從倉庫裡面來的數據

02:55:35.860 --> 02:55:36.860
你看我們這個組件裡面

02:55:36.860 --> 02:55:37.860
有沒有控制數據

02:55:37.860 --> 02:55:38.860
什麼數據都沒有控制

02:55:38.860 --> 02:55:40.860
好,分頁怎麼辦呢

02:55:40.860 --> 02:55:41.860
分頁怎麼辦呢

02:55:41.860 --> 02:55:42.860
分頁的時候

02:55:42.860 --> 02:55:44.860
你還能這樣子寫嗎

02:55:44.860 --> 02:55:45.860
你還能這樣子寫嗎

02:55:45.860 --> 02:55:46.860
肯定不能了

02:55:46.860 --> 02:55:47.860
更改頁嘛

02:55:47.860 --> 02:55:48.860
怎麼更改

02:55:48.860 --> 02:55:49.860
怎麼更改頁嘛

02:55:49.860 --> 02:55:50.860
要說怎麼更改頁嘛

02:55:50.860 --> 02:55:51.860
是不是要這樣子更改

02:55:51.860 --> 02:55:54.860
this叫什麼

02:55:54.860 --> 02:55:55.860
store

02:55:55.860 --> 02:55:56.860
dispatch

02:55:56.860 --> 02:55:57.860
通過這種方式來更改

02:55:57.860 --> 02:55:59.860
commit

02:55:59.860 --> 02:56:01.860
這種方式來更改頁嘛

02:56:01.860 --> 02:56:02.860
什麼命名空間

02:56:02.860 --> 02:56:03.860
movie

02:56:03.860 --> 02:56:04.860
set state

02:56:04.860 --> 02:56:06.860
然後這裡傳什麼

02:56:06.860 --> 02:56:07.860
就在這兒

02:56:07.860 --> 02:56:09.860
交往這個set state

02:56:09.860 --> 02:56:10.860
傳什麼

02:56:10.860 --> 02:56:11.860
傳一個新的狀態

02:56:11.860 --> 02:56:12.860
新的狀態是什麼

02:56:12.860 --> 02:56:13.860
current

02:56:13.860 --> 02:56:14.860
新的頁嘛

02:56:14.860 --> 02:56:15.860
新的頁嘛為什麼

02:56:15.860 --> 02:56:17.860
為new page

02:56:17.860 --> 02:56:18.860
要先更改頁嘛

02:56:18.860 --> 02:56:19.860
先更改頁嘛過後

02:56:19.860 --> 02:56:20.860
然後再幹嘛

02:56:20.860 --> 02:56:21.860
store

02:56:21.860 --> 02:56:22.860
dispatch

02:56:22.860 --> 02:56:23.860
是不是觸發X

02:56:23.860 --> 02:56:24.860
分發X

02:56:24.860 --> 02:56:25.860
movie

02:56:25.860 --> 02:56:26.860
廢棄

02:56:26.860 --> 02:56:27.860
分發X

02:56:27.860 --> 02:56:29.860
這句話還需要嘛

02:56:29.860 --> 02:56:30.860
不需要了

02:56:30.860 --> 02:56:31.860
你這裡

02:56:31.860 --> 02:56:32.860
頁面上

02:56:32.860 --> 02:56:34.860
組件裡只需要去處理邏輯就行了

02:56:34.860 --> 02:56:35.860
就是顯示邏輯

02:56:35.860 --> 02:56:37.860
數據全部在倉庫裡邊

02:56:37.860 --> 02:56:38.860
看著

02:56:41.860 --> 02:56:42.860
點下頁

02:56:43.860 --> 02:56:44.860
倉庫裡邊編織

02:56:44.860 --> 02:56:45.860
工廠數據編了

02:56:45.860 --> 02:56:46.860
倉庫裡邊在處理數據

02:56:46.860 --> 02:56:47.860
下頁

02:56:48.860 --> 02:56:50.860
組件裡面不處理數據了

02:56:50.860 --> 02:56:51.860
看沒

02:56:51.860 --> 02:56:52.860
而且最後

02:56:52.860 --> 02:56:53.860
最後

02:56:53.860 --> 02:56:54.860
本天到最後

02:56:54.860 --> 02:56:55.860
最後

02:56:55.860 --> 02:57:03.270
再給大家看一個好玩的

02:57:03.270 --> 02:57:04.270
會不會語能學者了

02:57:04.270 --> 02:57:05.270
睡著了

02:57:06.270 --> 02:57:07.270
還在這兒同學打個一

02:57:07.270 --> 02:57:08.270
還在這兒同學打個一

02:57:08.270 --> 02:57:19.100
你們的旁觀

02:57:19.100 --> 02:57:20.100
跟我的旁觀一樣強

02:57:20.100 --> 02:57:21.100
那我告訴你們

02:57:22.100 --> 02:57:23.100
我都快憋不住了

02:57:30.860 --> 02:57:31.860
最後一個

02:57:31.860 --> 02:57:32.860
說完就下課了

02:57:32.860 --> 02:57:33.860
今天我也太累了

02:57:33.860 --> 02:57:34.860
同學們也太累了

02:57:34.860 --> 02:57:35.860
但是

02:57:35.860 --> 02:57:36.860
我講得很開心

02:57:36.860 --> 02:57:37.860
同學們估計

02:57:37.860 --> 02:57:38.860
不知道聽到還不開心

02:57:39.860 --> 02:57:40.860
看著

02:57:40.860 --> 02:57:41.860
value input

02:57:41.860 --> 02:57:42.860
是不是可以用vmod

02:57:49.140 --> 02:57:50.140
vmod

02:57:50.140 --> 02:57:51.140
雙向綁定

02:57:52.140 --> 02:57:53.140
雙向綁定

02:57:53.140 --> 02:57:54.140
但是

02:57:54.140 --> 02:57:55.140
不好意思

02:57:55.140 --> 02:57:57.140
你利用這種方式寫出來的

02:57:57.140 --> 02:57:58.140
計算屬性

02:57:58.140 --> 02:57:59.140
它是不可能有雙向綁定的

02:57:59.140 --> 02:58:00.140
它只會生成這個

02:58:01.140 --> 02:58:02.140
是沒有set

02:58:03.140 --> 02:58:04.140
它是沒有set

02:58:04.140 --> 02:58:05.140
因為這是計算屬性

02:58:05.140 --> 02:58:06.140
現在current是計算屬性

02:58:06.140 --> 02:58:08.140
那麼當分業的時候

02:58:08.140 --> 02:58:09.140
想給它複製的時候

02:58:09.140 --> 02:58:10.140
是不是沒法複製

02:58:10.140 --> 02:58:11.140
因為它是計算屬性

02:58:11.140 --> 02:58:12.140
它只有get

02:58:12.140 --> 02:58:13.140
你看我現在有分業

02:58:13.140 --> 02:58:14.140
爆錯

02:58:15.140 --> 02:58:16.140
他說

02:58:16.140 --> 02:58:17.140
current

02:58:17.140 --> 02:58:18.140
它沒有被註冊為

02:58:18.140 --> 02:58:20.140
一個有setter的配置

02:58:20.140 --> 02:58:21.140
你看current

02:58:21.140 --> 02:58:22.140
是不是這樣子

02:58:22.140 --> 02:58:23.140
它這個含書出來

02:58:23.140 --> 02:58:24.140
就是這個樣子

02:58:24.140 --> 02:58:25.140
所以說

02:58:25.140 --> 02:58:26.140
它沒有set

02:58:27.140 --> 02:58:28.140
咋辦呢

02:58:28.140 --> 02:58:29.140
你看著

02:58:29.140 --> 02:58:38.040
我們用一個特別神奇的處理方式

02:58:38.040 --> 02:58:39.040
能看懂嗎

02:58:39.040 --> 02:58:40.040
這個代碼

02:58:40.040 --> 02:58:41.040
這個網頁

02:58:41.040 --> 02:58:42.040
是不是返回一個對象

02:58:42.040 --> 02:58:43.040
你以為這個map set

02:58:43.040 --> 02:58:44.040
是不是返回一個對象

02:58:44.040 --> 02:58:45.040
是不是返回這個東西

02:58:45.040 --> 02:58:47.040
我用展開運算幅

02:58:47.040 --> 02:58:48.040
展開運算幅

02:58:48.040 --> 02:58:49.040
是不是把它分解出來了

02:58:49.040 --> 02:58:51.040
是不是想用這兩個東西

02:58:51.040 --> 02:58:52.040
把這兩個東西

02:58:52.040 --> 02:58:54.040
放到這個位置

02:58:54.040 --> 02:58:56.040
放到這個位置

02:58:56.040 --> 02:58:57.040
我們這裡不需要current

02:58:57.040 --> 02:58:58.040
不需要current

02:58:58.040 --> 02:58:59.040
把這兩個東西

02:58:59.040 --> 02:59:00.040
放到這個位置

02:59:00.040 --> 02:59:01.040
就是這個東西

02:59:01.040 --> 02:59:02.040
這個東西

02:59:02.040 --> 02:59:03.040
這個東西

02:59:03.040 --> 02:59:04.040
把它分解出來

02:59:04.040 --> 02:59:05.040
放到這個位置

02:59:05.040 --> 02:59:06.040
分到一個大的對象裏面

02:59:06.040 --> 02:59:07.040
然後

02:59:07.040 --> 02:59:09.040
我們再加上一個create

02:59:09.040 --> 02:59:10.040
create

02:59:10.040 --> 02:59:11.040
current

02:59:11.040 --> 02:59:12.040
它有get

02:59:12.040 --> 02:59:14.040
也有set

02:59:14.040 --> 02:59:17.120
是不是也有get

02:59:17.120 --> 02:59:18.120
也有set

02:59:18.120 --> 02:59:19.120
get咋寫

02:59:20.120 --> 02:59:21.120
之前寫過的

02:59:21.120 --> 02:59:22.120
手寫都寫過的

02:59:22.120 --> 02:59:23.120
set

02:59:23.120 --> 02:59:24.120
movie

02:59:24.120 --> 02:59:25.120
意思

02:59:25.120 --> 02:59:26.120
loading

02:59:27.120 --> 02:59:29.120
the current

02:59:29.120 --> 02:59:30.120
get

02:59:30.120 --> 02:59:31.120
set咋寫

02:59:31.120 --> 02:59:35.200
這不就是set

02:59:35.200 --> 02:59:36.200
這不就是set

02:59:36.200 --> 02:59:37.200
set

02:59:37.200 --> 02:59:38.200
set它的時候幹嘛

02:59:38.200 --> 02:59:39.200
觸發

02:59:39.200 --> 02:59:41.200
做x

02:59:41.200 --> 02:59:42.200
觸發

02:59:42.200 --> 02:59:43.200
推行

02:59:43.200 --> 02:59:44.200
分發x

02:59:44.200 --> 02:59:45.200
這不就是set

02:59:45.200 --> 02:59:46.200
你給我一個新的頁碼

02:59:46.200 --> 02:59:47.200
我幹嘛

02:59:47.200 --> 02:59:48.200
先改變

02:59:48.200 --> 02:59:49.200
倉庫裏的頁碼

02:59:49.200 --> 02:59:50.200
再重新

02:59:51.200 --> 02:59:52.200
對吧

02:59:52.200 --> 02:59:53.200
沒事就不要了

02:59:56.200 --> 02:59:58.200
這是超操作

02:59:58.200 --> 02:59:59.200
微墨的

02:59:59.200 --> 03:00:01.200
照樣可以用在倉庫裏面

03:00:01.200 --> 03:00:02.200
但是你要注意

03:00:02.200 --> 03:00:03.200
在倉庫裏面用微墨的時候

03:00:03.200 --> 03:00:04.200
由於它是資訊算屬性

03:00:04.200 --> 03:00:05.200
它沒有set

03:00:05.200 --> 03:00:06.200
你得手動寫set

03:00:06.200 --> 03:00:07.200
你得手動寫

03:00:10.200 --> 03:00:11.200
三個字展開運算符

03:00:11.200 --> 03:00:13.200
這是es6裏面的東西

03:00:13.200 --> 03:00:14.200
es6裏面的東西

03:00:17.960 --> 03:00:18.960
不要點熱點

03:00:18.960 --> 03:00:19.960
不行

03:00:19.960 --> 03:00:20.960
這個不符合語法

03:00:21.960 --> 03:00:22.960
不要連這個語法

03:00:22.960 --> 03:00:23.960
是對象裏面

03:00:23.960 --> 03:00:24.960
人寫這個

03:00:24.960 --> 03:00:25.960
人寫語句

03:00:25.960 --> 03:00:26.960
不能寫語句

03:00:26.960 --> 03:00:28.960
這樣寫就變成表達式了

03:00:28.960 --> 03:00:30.960
表達式得到了對象展開

03:00:30.960 --> 03:00:31.960
比方說

03:00:31.960 --> 03:00:33.960
比方說我們這裏展開一個對象

03:00:33.960 --> 03:00:35.960
比方說我們展開一個

03:00:36.960 --> 03:00:40.870
這裏是個對象

03:00:40.870 --> 03:00:41.870
這裏是個對象

03:00:41.870 --> 03:00:42.870
對象展開

03:00:42.870 --> 03:00:43.870
這樣子一展開

03:00:43.870 --> 03:00:44.870
相當於是

03:00:44.870 --> 03:00:45.870
它把a等於1寫到這裏

03:00:45.870 --> 03:00:46.870
b等於2寫到這裏

03:00:46.870 --> 03:00:47.870
相當於是這麽個意思

03:00:47.870 --> 03:00:48.870
相當於是這麽個意思

03:00:49.870 --> 03:00:50.870
上面這個代碼

03:00:50.870 --> 03:00:51.870
有相當於是這個代碼

03:00:51.870 --> 03:00:52.870
但是有的時候

03:00:52.870 --> 03:00:54.870
我不知道對象裏面有哪些屬性

03:00:54.870 --> 03:00:55.870
我就可以

03:00:55.870 --> 03:00:56.870
就像這種情況

03:00:56.870 --> 03:00:58.870
我也不知道它反回出來是怎麽玩意

03:00:58.870 --> 03:01:00.870
它反回出來一定是這個東西

03:01:00.870 --> 03:01:01.870
這種格式

03:01:01.870 --> 03:01:02.870
一個對象

03:01:02.870 --> 03:01:04.870
我就把對象裏面的成員展開

03:01:05.870 --> 03:01:11.230
多個計算屬性

03:01:11.230 --> 03:01:13.230
這就是多個計算屬性

03:01:13.230 --> 03:01:15.230
這就是多個計算屬性

03:01:15.230 --> 03:01:17.230
這不是多個計算屬性

03:01:18.230 --> 03:01:19.230
這麽有好幾個

03:01:19.230 --> 03:01:21.230
MapStats的用法很靈活

03:01:21.230 --> 03:01:22.230
還有很多的細節

03:01:22.230 --> 03:01:24.230
我們就不一一展開了

03:01:24.230 --> 03:01:25.230
平時用的話

03:01:25.230 --> 03:01:26.230
你差不多就這樣用了

03:01:27.230 --> 03:01:28.230
行了吧

03:01:28.230 --> 03:01:30.230
那咱們今天也就不再廢話了

03:01:30.230 --> 03:01:32.230
我們就十一點了

03:01:32.230 --> 03:01:33.230
十一點了

03:01:33.230 --> 03:01:35.230
我覺得騰訊服務器都快扛不住了

03:01:35.230 --> 03:01:36.230
這個母尾廢棄

03:01:36.230 --> 03:01:37.230
就是觸發這個X型

03:01:37.230 --> 03:01:39.230
就觸發這個X型

03:01:39.230 --> 03:01:40.230
觸發這個X型

03:01:40.230 --> 03:01:41.230
要加命名空間的

03:01:42.230 --> 03:01:43.230
你的問題

03:01:43.230 --> 03:01:44.230
你的問題是啥

03:01:44.230 --> 03:01:46.230
逐漸調用MapStats

03:01:46.230 --> 03:01:47.230
含述的時候

03:01:47.230 --> 03:01:49.230
要傳一個Payload的

03:01:49.230 --> 03:01:51.230
那個Stats具體指的是什麽

03:01:51.230 --> 03:01:52.230
是倉庫的默認值

03:01:52.230 --> 03:01:53.230
它不是倉庫的默認值

03:01:53.230 --> 03:01:54.230
是倉庫的當前值

03:01:54.230 --> 03:01:56.230
倉庫它不是不斷的變化

03:01:56.230 --> 03:01:58.230
是不斷的變化

03:01:58.230 --> 03:01:59.230
那麽每一次變化

03:01:59.230 --> 03:02:01.230
是不是你要知道當前的值是什麽

03:02:01.230 --> 03:02:03.230
要知道當前的值是什麽

03:02:03.230 --> 03:02:04.230
是倉庫的當前的值

03:02:04.230 --> 03:02:06.230
它會自動傳給你

03:02:06.230 --> 03:02:07.230
它會自動傳給你

03:02:07.230 --> 03:02:09.230
就是倉庫當前是什麽狀態

03:02:13.610 --> 03:02:17.300
後台訪問

03:02:17.300 --> 03:02:19.300
後台訪問控制是功能

03:02:19.300 --> 03:02:21.300
路由守衛守衛是技術點

03:02:21.300 --> 03:02:22.300
不是一個東西

03:02:22.300 --> 03:02:24.300
我們可以用路由守衛

03:02:24.300 --> 03:02:26.300
來實現後台訪問控制

03:02:26.300 --> 03:02:27.300
應該這樣說

03:02:27.300 --> 03:02:28.300
大家晚安

03:02:28.300 --> 03:02:29.300
我們這裏不廢話了

03:02:29.300 --> 03:02:30.300
明天讓我們對

03:02:30.300 --> 03:02:31.300
我們學過的知識做一些總結

03:02:31.300 --> 03:02:32.300
然後呢

03:02:32.300 --> 03:02:33.300
給大家掌握一下

03:02:33.300 --> 03:02:34.300
吳立友的未來

03:02:34.300 --> 03:02:36.300
吳立友推薦什麽書

03:02:36.300 --> 03:02:37.300
推薦官方文道

03:02:37.300 --> 03:02:38.300
和元旦

03:02:39.300 --> 03:02:40.300
不推薦

03:02:40.300 --> 03:02:41.300
不太推薦書籍

03:02:42.300 --> 03:02:44.300
反正你問我推薦什麽

03:02:44.300 --> 03:02:45.300
我就推薦官方文道

03:02:45.300 --> 03:02:46.300
然後推薦元旦

03:02:46.300 --> 03:02:48.940
然後推薦我的課程

03:02:48.940 --> 03:02:50.940
然後推薦大常隔的課程

03:02:50.940 --> 03:02:51.940
然後推薦杜義的課程

03:02:51.940 --> 03:02:52.940
一問就是這樣

03:02:55.820 --> 03:02:57.820
拜拜

03:02:57.820 --> 03:02:58.820
趕快睡覺了

03:02:58.820 --> 03:03:03.100
拜託

03:03:03.100 --> 03:03:05.100
文道的話就拜託了

