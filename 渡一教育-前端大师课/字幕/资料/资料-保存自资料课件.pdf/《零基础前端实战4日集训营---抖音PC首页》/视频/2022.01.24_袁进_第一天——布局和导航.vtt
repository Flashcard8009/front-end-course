WEBVTT

00:00.000 --> 00:06.000
好 咱们进入我们农历

00:06.000 --> 00:10.000
农历2021年的最后一个集训员了

00:10.000 --> 00:16.000
这个集训员跟过去的集训员其实目标都是一样的

00:16.000 --> 00:21.000
就是专门的针对我们刚刚学完ATM和CSS

00:21.000 --> 00:23.000
可能做的练习不够

00:23.000 --> 00:26.000
也不知道我们ATM和CSS这些知识点学完之后

00:26.000 --> 00:29.000
我们能做什么 怎么把这些知识点用起来

00:29.000 --> 00:32.000
这部分学员我们做了这么一个集训员

00:32.000 --> 00:36.000
通过一个完整的例子 把它开发完之后

00:36.000 --> 00:39.000
我们对ATM和CSS不能说过了吧

00:39.000 --> 00:44.000
至少应该说70% 80%就可以 已经没问题了

00:44.000 --> 00:47.000
在整个的项目的开发过程中

00:47.000 --> 00:50.000
我们会用到大量的我们之前学过的知识

00:50.000 --> 00:54.000
当然也会产生一些新的知识

00:54.000 --> 00:57.000
新的知识我们一定会讲解 不用担心

00:57.000 --> 01:01.000
整个这个项目里边我们是以ATM和CSS为主

01:01.000 --> 01:06.000
解释这个东西纯属体验的

01:06.000 --> 01:10.000
可能如果说你专门过来听解释的话

01:10.000 --> 01:14.000
可能这个课程你已经过了这个阶段了

01:14.000 --> 01:16.000
你应该听咱们后边的课程了

01:16.000 --> 01:19.000
因为我们这个课程主要是ATM和CSS

01:19.000 --> 01:22.000
解释在哪呢 解释主要在这

01:22.000 --> 01:24.000
指上去的时候有个视频播放

01:24.000 --> 01:27.000
就这一块用到了一些解释

01:27.000 --> 01:30.000
说实话这个解释还有点复杂

01:30.000 --> 01:32.000
所以说我们在最后一个部分吧

01:32.000 --> 01:34.000
这个部分简单的说一下

01:34.000 --> 01:36.000
这是我们整个的规划

01:36.000 --> 01:38.000
但是重点还是ATM和CSS

01:38.000 --> 01:40.000
如果说你没有学过解释也不用管

01:40.000 --> 01:42.000
我们不是有个打标反线吗

01:42.000 --> 01:46.000
打标反线里边不包含解释的内容

01:46.000 --> 01:49.000
就说你打标反线

01:49.000 --> 01:51.000
就把4天的课听完

01:51.000 --> 01:54.000
听完过后你只要用ATM和CSS

01:54.000 --> 01:56.000
把这个玩意儿做出来就可以了

01:56.000 --> 01:59.000
解释部分你可以不用管

01:59.000 --> 02:02.000
不进行打标反线的考量

02:02.000 --> 02:07.000
就是直接跟大家说一下这个情况

02:07.000 --> 02:09.000
然后我们整个的开发中

02:09.000 --> 02:12.000
会用到一些CSS3的新知识

02:12.000 --> 02:14.000
包括今天晚上

02:14.000 --> 02:16.000
今天晚上我们就会用到一些新知识

02:16.000 --> 02:18.000
我们这里给同学们

02:18.000 --> 02:20.000
准备好了一个文档

02:20.000 --> 02:23.000
这个文档是使用markdown来编写的

02:23.000 --> 02:25.000
所以说同学们需要下载一个工具

02:25.000 --> 02:27.000
只有下载的工具

02:27.000 --> 02:29.000
你才能够打开这个文档

02:29.000 --> 02:30.000
工具在哪呢

02:30.000 --> 02:34.000
在这个链接里边我给大家发一下吧

02:34.000 --> 02:38.270
我就发到这儿了

02:38.270 --> 02:39.270
调一下声音

02:39.270 --> 02:41.270
如果声音不敢调大了

02:41.270 --> 02:42.270
那个瓜瓜瓜同学

02:42.270 --> 02:43.270
我声音真不敢调大了

02:43.270 --> 02:45.270
因为调大的时候

02:45.270 --> 02:48.270
要出现炸麦的

02:48.270 --> 02:53.270
就能麻烦你把耳机调大一点

02:53.270 --> 02:54.270
就Typer了

02:54.270 --> 02:56.270
进入这个百度网盘链接

02:56.270 --> 03:01.270
当然前面条件你再下载一个百度网盘

03:01.270 --> 03:02.270
进入这个链接之后

03:02.270 --> 03:04.270
有一个工具和环境这个文件夹

03:04.270 --> 03:07.270
进去之后有两个指文件夹

03:07.270 --> 03:09.270
一个是windows系统的

03:09.270 --> 03:10.270
一个是mark系统的

03:10.270 --> 03:12.270
那看你是什么系统

03:12.270 --> 03:13.270
那windows里边

03:13.270 --> 03:14.270
windows里边的话

03:14.270 --> 03:16.270
其他的东西都不用管

03:16.270 --> 03:17.270
你只需要下载这个就行了

03:17.270 --> 03:18.270
Typer

03:18.270 --> 03:20.270
下载这个

03:20.270 --> 03:22.270
还有一个是横杠三二的

03:22.270 --> 03:23.270
我估计呢

03:23.270 --> 03:26.270
应该是没有同学需要下这个版本

03:26.270 --> 03:27.270
你直接下载

03:27.270 --> 03:28.270
上面这个版本就行了

03:28.270 --> 03:30.270
下载之后安装

03:30.270 --> 03:31.270
下一步下一步

03:31.270 --> 03:32.270
我就不掩饰了

03:32.270 --> 03:34.270
安装完了之后呢

03:34.270 --> 03:36.270
我们这个课件

03:36.270 --> 03:38.270
你就可以双击打开了

03:38.270 --> 03:39.270
这个课件里边

03:39.270 --> 03:40.270
包含我们这几天

03:40.270 --> 03:42.270
所需要用到的

03:42.270 --> 03:44.270
所有的新知识

03:44.270 --> 03:45.270
以及呢

03:45.270 --> 03:47.270
我们开发过程中

03:47.270 --> 03:48.270
需要用到的各种

03:48.270 --> 03:50.270
什么颜色啊背景颜色啊

03:50.270 --> 03:52.270
字体大小啊等等等等信息

03:52.270 --> 03:53.270
全部在这里

03:53.270 --> 03:56.270
所以你需要下载这个工具

03:56.270 --> 03:58.270
然后还有说

03:58.270 --> 04:00.270
还有一个事情就是

04:00.270 --> 04:02.270
咱们如何来学习

04:02.270 --> 04:03.270
这一个呢

04:03.270 --> 04:05.270
是一个比较重要的一个环节

04:05.270 --> 04:06.270
因为很多同学呢

04:06.270 --> 04:07.270
我发现啊

04:07.270 --> 04:09.270
没有报咱们班长同学

04:09.270 --> 04:10.270
有一个有很多同学

04:10.270 --> 04:11.270
这么一个问题

04:11.270 --> 04:12.270
就是我看A.M.L.CSS

04:12.270 --> 04:13.270
看了半年了

04:13.270 --> 04:15.270
我不知道这里有没有这样的同学啊

04:15.270 --> 04:16.270
看了半年了

04:16.270 --> 04:19.270
甚至有些同学都看了一年了

04:19.270 --> 04:20.270
这一关都还没有过

04:20.270 --> 04:22.270
实际上我们A.M.L.CSS

04:22.270 --> 04:24.270
是不需要这么久的

04:24.270 --> 04:26.270
我们需要两周

04:26.270 --> 04:27.270
三周

04:27.270 --> 04:29.270
最多最多顶天的四周

04:29.270 --> 04:31.270
就应该能够把这一块过了

04:31.270 --> 04:33.270
就完完全全的过去了

04:33.270 --> 04:34.270
为什么很多同学

04:34.270 --> 04:35.270
还是没有过去呢

04:35.270 --> 04:37.270
他写代码其实也写了不少

04:37.270 --> 04:38.270
零零碎碎的

04:38.270 --> 04:40.270
他看了很多的项目课程

04:40.270 --> 04:41.270
也看了不少

04:41.270 --> 04:42.270
做出来的效果呢

04:42.270 --> 04:43.270
也挺多的

04:43.270 --> 04:44.270
但是呢

04:44.270 --> 04:45.270
这一关就是过不去

04:45.270 --> 04:46.270
这是为什么呢

04:46.270 --> 04:47.270
主要是呢

04:47.270 --> 04:49.270
你在训练的时候

04:49.270 --> 04:51.270
说完了就在写代码的时候

04:51.270 --> 04:55.270
没有一个科学的写代码的方式

04:55.270 --> 04:56.270
什么叫科学呢

04:56.270 --> 04:57.270
简单来说

04:57.270 --> 04:58.270
你得自己写

04:58.270 --> 05:01.270
就是我们虽然说有这个回放

05:01.270 --> 05:02.270
但是呢

05:02.270 --> 05:03.270
你不能依靠我们的回放

05:03.270 --> 05:05.270
回放只是一个

05:05.270 --> 05:08.270
主体的这么一个过程

05:08.270 --> 05:10.270
就是你实在解决不了了

05:10.270 --> 05:11.270
在群里边问

05:11.270 --> 05:13.270
发现也解决不了

05:13.270 --> 05:15.270
但是这种情况一般很少很少啊

05:15.270 --> 05:16.270
群里边问

05:16.270 --> 05:17.270
达一老师帮你解决

05:17.270 --> 05:18.270
一般都能解决的

05:18.270 --> 05:19.270
实在解决不了了

05:19.270 --> 05:21.270
那么你看一下回放

05:21.270 --> 05:23.270
看一下袁老师的元代码

05:23.270 --> 05:24.270
是可以的

05:24.270 --> 05:26.270
但是这是兜底的过

05:26.270 --> 05:27.270
这是一个兜底的方案

05:27.270 --> 05:28.270
它一定不是一个

05:28.270 --> 05:30.270
第一选择的方案

05:30.270 --> 05:32.270
当你出现问题的时候

05:32.270 --> 05:33.270
你第一要解

05:33.270 --> 05:34.270
第一的方案是什么呢

05:34.270 --> 05:36.270
第一方就是思考

05:36.270 --> 05:37.270
调试

05:37.270 --> 05:39.270
打开流量器的调试工具栏

05:39.270 --> 05:41.270
点击右键检查

05:41.270 --> 05:43.270
在这里边去完成调试

05:43.270 --> 05:44.270
检查它各种样式

05:44.270 --> 05:45.270
比方说这个地方

05:45.270 --> 05:47.270
就出现了一些样式的问题

05:47.270 --> 05:49.270
检查这些东西

05:49.270 --> 05:50.270
还不行

05:50.270 --> 05:51.270
搞不定

05:51.270 --> 05:52.270
搞不定在群里边问

05:52.270 --> 05:54.270
截图

05:54.270 --> 05:56.270
关键地方打上箭头

05:56.270 --> 05:59.270
在群里边寻求帮助

05:59.270 --> 06:01.270
你一定要经历这个

06:01.270 --> 06:03.270
思索求解

06:03.270 --> 06:05.270
讨论

06:05.270 --> 06:07.270
询问

06:07.270 --> 06:09.270
然后问题得到解答

06:09.270 --> 06:11.270
一定要经历这个过程

06:11.270 --> 06:12.270
这个过程最终

06:12.270 --> 06:14.270
问题有没有解答不重要

06:14.270 --> 06:15.270
重要的是

06:15.270 --> 06:17.270
你一定要经历这个过程

06:17.270 --> 06:19.270
如果说你没有经历这个过程

06:19.270 --> 06:20.270
你把效果解出来

06:20.270 --> 06:21.270
我告诉你

06:21.270 --> 06:23.270
你这个效果解出来跟没写一样

06:23.270 --> 06:24.270
真的一样吗

06:24.270 --> 06:25.270
就一样

06:25.270 --> 06:26.270
真的就是一模一样的

06:26.270 --> 06:27.270
跟你完全没写

06:27.270 --> 06:28.270
就是一样的

06:28.270 --> 06:30.270
因为你写了过

06:30.270 --> 06:31.270
反正这个代码

06:31.270 --> 06:33.270
存在老师那里超来的

06:33.270 --> 06:34.270
那最多就是

06:34.270 --> 06:36.270
练习了一项你的打字速度

06:36.270 --> 06:38.270
你说还有什么帮助呢

06:38.270 --> 06:39.270
很多同学在写完代码之后

06:39.270 --> 06:40.270
把效果做出来了

06:40.270 --> 06:41.270
做出来了过后

06:41.270 --> 06:42.270
给朋友一炫耀

06:42.270 --> 06:43.270
还不错

06:43.270 --> 06:44.270
但是里边的代码

06:44.270 --> 06:45.270
为什么要这样子写

06:45.270 --> 06:46.270
没一样代码什么意思

06:46.270 --> 06:47.270
他完全不知道

06:47.270 --> 06:49.270
那这个代码写出来有什么意义呢

06:49.270 --> 06:51.270
这个叫做无效的训练

06:51.270 --> 06:53.270
我们学习不追求

06:53.270 --> 06:55.270
学习的速度

06:55.270 --> 06:56.270
但是我们一定要追求

06:56.270 --> 06:57.270
学习的效果

06:57.270 --> 06:59.270
这也是我在

06:59.270 --> 07:01.270
在搬机群里边不断的强调

07:01.270 --> 07:02.270
不断的强调的

07:02.270 --> 07:03.270
你没有学习效果的话

07:03.270 --> 07:05.270
你速度再快没用的

07:05.270 --> 07:07.270
就说说一些

07:07.270 --> 07:09.270
前言

07:09.270 --> 07:10.270
好不说多了

07:10.270 --> 07:11.270
我们就开始

07:11.270 --> 07:13.270
进入咱们这个

07:13.270 --> 07:15.270
效果的制作

07:15.270 --> 07:16.270
这个效果呢

07:16.270 --> 07:17.270
今天晚上做到哪呢

07:17.270 --> 07:18.270
我也不知道

07:18.270 --> 07:20.270
反正就是这四天

07:20.270 --> 07:22.270
这四天我要把这个东西完成

07:22.270 --> 07:23.270
这四天每一天做到

07:23.270 --> 07:24.270
什么位置

07:24.270 --> 07:25.270
那个不重要的

07:25.270 --> 07:26.270
反正我们四天

07:26.270 --> 07:27.270
今天晚上能做到哪

07:27.270 --> 07:28.270
算了

07:28.270 --> 07:29.270
好吧

07:29.270 --> 07:31.270
我们来首先

07:31.270 --> 07:33.270
看一下这个文档

07:33.270 --> 07:35.270
效果的掩饰地址在这

07:35.270 --> 07:37.270
同学们发下这个文档

07:37.270 --> 07:38.270
下去过后

07:38.270 --> 07:39.270
我会把这个文档发下来

07:39.270 --> 07:40.270
发下来之后

07:40.270 --> 07:42.270
你们就可以看到这个

07:42.270 --> 07:44.270
看到这个东西了

07:44.270 --> 07:47.270
我们在具体开始做之前

07:47.270 --> 07:48.270
有一个新知识

07:48.270 --> 07:50.270
我是必须要讲解的

07:50.270 --> 07:51.270
因为我们整个页面里边

07:51.270 --> 07:53.270
有很多很多地方

07:53.270 --> 07:54.270
都会用到这个新知识

07:54.270 --> 07:55.270
这个知识

07:55.270 --> 07:57.270
我们一定要把它讲解清楚

07:57.270 --> 07:59.270
这个知识就是弹性盒

07:59.270 --> 08:01.270
弹性盒这个知识

08:01.270 --> 08:03.270
是C3里边的内容

08:03.270 --> 08:05.270
也就是说

08:05.270 --> 08:06.270
我们在C3里边

08:06.270 --> 08:09.270
布局不再使用浮动了

08:09.270 --> 08:11.270
浮动是来做什么事情的呢

08:11.270 --> 08:14.270
浮动是来做文字环绕的

08:14.270 --> 08:15.270
但是我们那个项目里边

08:15.270 --> 08:16.270
又没有文字环绕

08:16.270 --> 08:17.270
对吧

08:17.270 --> 08:19.270
我们很多时候

08:19.270 --> 08:20.270
以前用浮动布局

08:20.270 --> 08:21.270
是没有办法

08:21.270 --> 08:22.270
是被逼的

08:22.270 --> 08:26.270
你又不允许我用表格布局

08:26.270 --> 08:27.270
那我只能用浮动布局了

08:27.270 --> 08:29.270
那我还能怎么办呢

08:29.270 --> 08:30.270
以前是没办法

08:30.270 --> 08:31.270
但是C3出来之后

08:31.270 --> 08:33.270
我们有新的布局方式了

08:33.270 --> 08:34.270
包括弹性盒

08:34.270 --> 08:37.270
包括你们将来要学习的网格

08:37.270 --> 08:39.270
网格不是表格

08:39.270 --> 08:40.270
是网格

08:40.270 --> 08:42.270
我们这个项目里边

08:42.270 --> 08:43.270
用不到网格

08:43.270 --> 08:45.270
用的就是弹性盒

08:45.270 --> 08:46.270
好 弹性盒

08:46.270 --> 08:47.270
我们来学习一下

08:47.270 --> 08:49.270
弹性盒里边内容很多

08:49.270 --> 08:50.270
但是这些内容

08:50.270 --> 08:52.270
它出现了会出现一些

08:52.270 --> 08:54.270
非常多的单词

08:54.270 --> 08:56.270
会出现一些非常多的属性名

08:56.270 --> 08:57.270
属性值

08:57.270 --> 08:59.270
但是不需要大家去背

08:59.270 --> 09:00.270
一个都不需要背

09:00.270 --> 09:01.270
咱们学习开发

09:01.270 --> 09:04.270
不需要你去记忆任何东西

09:04.270 --> 09:05.270
你唯一要记忆的

09:05.270 --> 09:07.270
就是老师的思路

09:07.270 --> 09:09.270
其他的不需要你记忆

09:09.270 --> 09:10.270
那么这些问题

09:10.270 --> 09:11.270
如果说你忘了单词怎么办

09:11.270 --> 09:12.270
查阅文档

09:12.270 --> 09:14.270
在后期我们课程里边

09:14.270 --> 09:16.270
会给大家大量的这种文档

09:16.270 --> 09:18.270
让大家进行查阅

09:18.270 --> 09:19.270
那么弹性盒就是这样

09:19.270 --> 09:20.270
这个文档也是

09:20.270 --> 09:21.270
弹性盒这一块文档

09:21.270 --> 09:23.270
也是我们从后期课程里边

09:23.270 --> 09:25.270
提出出来

09:25.270 --> 09:26.270
放到这儿的

09:26.270 --> 09:27.270
弹性盒这一块东西

09:27.270 --> 09:29.270
有的它就不再使用浮动了

09:29.270 --> 09:31.270
浮动那个玩意

09:31.270 --> 09:33.270
又麻烦又不好用

09:33.270 --> 09:34.270
对吧

09:34.270 --> 09:35.270
所以说我们有了C3之后

09:35.270 --> 09:36.270
基本上不再使用浮动了

09:36.270 --> 09:38.270
以前还说

09:38.270 --> 09:39.270
我们要兼容

09:39.270 --> 09:40.270
我们要兼容旧版本

09:40.270 --> 09:42.270
现在不考虑这个事情

09:42.270 --> 09:43.270
已经过了这么多年了

09:43.270 --> 09:46.270
你还要去兼容IE6

09:46.270 --> 09:48.270
我就不知道你做的是什么项目

09:48.270 --> 09:49.270
当然有些项目

09:49.270 --> 09:51.270
可能面向政府部门的

09:51.270 --> 09:52.270
或者是面向银行的

09:52.270 --> 09:53.270
可能还会有这样的问题

09:53.270 --> 09:55.270
但是大部分互联网项目

09:55.270 --> 09:56.270
都不需要

09:56.270 --> 09:57.270
去兼容那些老板

09:57.270 --> 09:58.270
不能浏览起来

09:58.270 --> 09:59.270
弹性盒大胆的使用

09:59.270 --> 10:00.270
好

10:00.270 --> 10:01.270
我们来看一下弹性盒

10:01.270 --> 10:02.270
是什么意思

10:02.270 --> 10:05.270
我这里给他做个掩饰

10:05.270 --> 10:07.270
我这里新建一个页面

10:07.270 --> 10:09.270
叫做弹性盒吧

10:09.270 --> 10:12.270
其实它并不复杂

10:12.270 --> 10:15.580
给我十多二十分钟

10:15.580 --> 10:16.580
也就把它说清楚了

10:16.580 --> 10:18.580
比方说这里一个DIV

10:18.580 --> 10:19.580
一个容器

10:19.580 --> 10:20.580
康平的

10:20.580 --> 10:22.580
它里边有很多小的DIV

10:22.580 --> 10:24.580
就三个吧

10:24.580 --> 10:27.580
然后我们来写一些它的样式

10:27.580 --> 10:29.580
里边的小的DIV

10:29.580 --> 10:31.580
我给它一个宽度

10:31.580 --> 10:33.580
宽度的比方说

10:33.580 --> 10:35.580
100个像素

10:35.580 --> 10:38.580
然后高度也100个像素

10:38.580 --> 10:40.580
然后给它一个波段吧

10:40.580 --> 10:41.580
一个像素SOLY的

10:41.580 --> 10:43.580
一个边框

10:43.580 --> 10:45.580
然后再给它一个背景颜色

10:45.580 --> 10:46.580
你们都喜欢

10:46.580 --> 10:47.580
咪咪巴塞巴塞

10:47.580 --> 10:48.580
对吧

10:48.580 --> 10:49.580
我们就给它一个颜色吧

10:49.580 --> 10:50.580
好

10:51.580 --> 10:53.580
目前你看到是这样子的

10:53.580 --> 10:54.580
为什么呢

10:54.580 --> 10:56.580
因为它们是快核

10:56.580 --> 10:59.580
一个DIV它是要独占一行的

10:59.580 --> 11:01.580
所以说它们这样子的素色排列了

11:01.580 --> 11:02.580
那过去我们需要

11:02.580 --> 11:04.580
让它横着排列怎么办呢

11:04.580 --> 11:06.580
就需要

11:06.580 --> 11:09.580
我先给它扛天的一个波段

11:09.580 --> 11:11.580
一个像素SOLY的

11:11.580 --> 11:13.580
然后红色吧

11:13.580 --> 11:15.580
你看红色有个边框

11:15.580 --> 11:17.580
它里边的三个指元素

11:17.580 --> 11:19.580
纵向排列

11:19.580 --> 11:22.580
过去我们如果说需要让它横向排列的话

11:22.580 --> 11:23.580
我们需要怎么样

11:23.580 --> 11:26.580
让这些元素是不是要把它浮动起来

11:26.580 --> 11:27.580
但现在不需要了

11:27.580 --> 11:29.580
有了弹性盒之后

11:29.580 --> 11:31.580
我们只需要做一件事

11:31.580 --> 11:33.580
给这个容器

11:33.580 --> 11:34.580
以前我们是改动它

11:34.580 --> 11:35.580
让它浮动

11:35.580 --> 11:36.580
现在我们不需要动它

11:36.580 --> 11:38.580
只需要动这个容器

11:38.580 --> 11:39.580
给这个容器

11:39.580 --> 11:41.580
一个属性叫做

11:41.580 --> 11:44.580
Display Flex

11:44.580 --> 11:45.580
好

11:45.580 --> 11:46.580
我们这里一保存

11:46.580 --> 11:47.580
然后我们看一下页面

11:47.580 --> 11:48.580
是不是横向排列了

11:48.580 --> 11:49.580
就这么简单

11:49.580 --> 11:51.580
就这么简单

11:51.580 --> 11:52.580
我们来看一下

11:52.580 --> 11:53.580
它到底是怎么回事

11:53.580 --> 11:55.580
当一个元素

11:55.580 --> 11:57.580
它设置这个属性

11:57.580 --> 11:59.580
叫做Display Flex

11:59.580 --> 12:00.580
就是弹性盒

12:00.580 --> 12:02.580
当一个元素设置了

12:02.580 --> 12:04.580
Display Flex之后

12:04.580 --> 12:05.580
我们把这个元素

12:05.580 --> 12:08.580
就称之为弹性容器

12:08.580 --> 12:10.580
这里一个数语

12:10.580 --> 12:11.580
数语大家要知道

12:11.580 --> 12:13.580
弹性容器

12:13.580 --> 12:15.580
那么现在是哪个是弹性容器

12:15.580 --> 12:16.580
是不是它

12:16.580 --> 12:17.580
为什么呢

12:17.580 --> 12:19.580
它给它设置了一个Display Flex

12:19.580 --> 12:21.580
它就弹性容器

12:21.580 --> 12:24.580
它的所有的指元素

12:24.580 --> 12:25.580
只要指元素

12:25.580 --> 12:26.580
它是它的指元素

12:26.580 --> 12:27.580
对吧

12:27.580 --> 12:28.580
指元素

12:28.580 --> 12:29.580
它里面那个A元素呢

12:29.580 --> 12:31.580
这个是不是它的指元素

12:31.580 --> 12:33.580
不是

12:33.580 --> 12:35.580
或者换句话说

12:35.580 --> 12:37.580
它的直接的指元素

12:37.580 --> 12:41.580
称之为弹性项目

12:41.580 --> 12:43.580
弹性项目

12:43.580 --> 12:44.580
先把数语搞清楚

12:44.580 --> 12:46.580
什么叫弹性容器

12:47.580 --> 12:48.580
Display Flex

12:48.580 --> 12:49.580
这个元素是弹性容器

12:49.580 --> 12:50.580
什么叫弹性项目

12:50.580 --> 12:52.580
它的直接的指元素

12:52.580 --> 12:53.580
是弹性项目

12:54.580 --> 12:55.580
这是两个概念

12:55.580 --> 12:57.580
很简单的

12:57.580 --> 12:59.580
然后还有两个概念

12:59.580 --> 13:00.580
当一个元素

13:00.580 --> 13:03.580
它被设置了Display Flex

13:03.580 --> 13:06.580
它变成了弹性容器之后

13:06.580 --> 13:07.580
它里边呢

13:07.580 --> 13:09.580
会生成两个方向

13:09.580 --> 13:10.580
这两个方向

13:10.580 --> 13:11.580
你是看不见的

13:11.580 --> 13:12.580
你说在页面上

13:12.580 --> 13:13.580
我能不能看见

13:13.580 --> 13:14.580
这两个箭头啊

13:14.580 --> 13:15.580
方向没有看不见的

13:15.580 --> 13:17.580
它确确实实是存在的

13:17.580 --> 13:18.580
就好比说

13:18.580 --> 13:19.580
我们生活中

13:19.580 --> 13:20.580
空气你看不见

13:20.580 --> 13:21.580
但是它存在

13:21.580 --> 13:23.580
那这里是一样的意思

13:23.580 --> 13:24.580
有两个方向

13:24.580 --> 13:26.580
一个是从左向右的

13:26.580 --> 13:28.580
叫做主轴方向

13:28.580 --> 13:30.580
一个是从上到下的

13:30.580 --> 13:32.580
叫做侧轴方向

13:32.580 --> 13:34.580
一个叫主轴

13:34.580 --> 13:35.580
从左到右

13:35.580 --> 13:36.580
一个叫侧轴

13:36.580 --> 13:37.580
从上到下

13:37.580 --> 13:38.580
好

13:38.580 --> 13:39.580
那么这两

13:39.580 --> 13:40.580
现在我们有四个概念了

13:40.580 --> 13:41.580
弹性容器

13:41.580 --> 13:42.580
弹性项目

13:42.580 --> 13:43.580
主轴

13:43.580 --> 13:44.580
好

13:44.580 --> 13:45.580
那么接下来

13:45.580 --> 13:46.580
我要说一个解论了

13:46.580 --> 13:47.580
解论是什么呢

13:47.580 --> 13:49.580
默认情况下

13:49.580 --> 13:51.580
弹性项目

13:51.580 --> 13:53.580
沿着主轴

13:53.580 --> 13:55.580
依次排列

13:55.580 --> 13:57.580
主轴是不是从左到右的

13:57.580 --> 13:59.580
于是这些弹性项目

13:59.580 --> 14:01.580
就从左到右进行排列

14:01.580 --> 14:03.580
在侧轴上

14:03.580 --> 14:05.580
进行拉伸

14:05.580 --> 14:07.580
什么叫拉伸

14:07.580 --> 14:08.580
什么叫拉伸

14:08.580 --> 14:09.580
好

14:09.580 --> 14:10.580
你看一下我们这里一块

14:10.580 --> 14:11.580
这一块好像看不出来

14:11.580 --> 14:12.580
就拉伸啊

14:12.580 --> 14:13.580
因为它这个高度

14:13.580 --> 14:14.580
本来就是100个像素

14:14.580 --> 14:15.580
但是我们现在

14:15.580 --> 14:16.580
把这个高度

14:16.580 --> 14:17.580
给它注射掉

14:17.580 --> 14:18.580
你看着啊

14:18.580 --> 14:19.580
我没有给它设置高度了

14:19.580 --> 14:20.580
然后我把

14:20.580 --> 14:21.580
副元素的容器

14:21.580 --> 14:22.580
你看一下

14:22.580 --> 14:23.580
我给它设置一个

14:23.580 --> 14:25.580
300个像素

14:25.580 --> 14:26.580
好

14:26.580 --> 14:27.580
我们来看一下

14:27.580 --> 14:28.580
这个结果

14:28.580 --> 14:29.580
你会发现

14:29.580 --> 14:30.580
这三个元素的高度

14:30.580 --> 14:32.580
充满了副元素

14:32.580 --> 14:33.580
为什么呀

14:33.580 --> 14:34.580
这三个元素

14:34.580 --> 14:35.580
我们是没有设置高度的

14:35.580 --> 14:36.580
我们来看一下

14:36.580 --> 14:37.580
检查元素

14:37.580 --> 14:38.580
这个指元素

14:38.580 --> 14:39.580
有没有设置高度

14:39.580 --> 14:40.580
没有设置高度

14:40.580 --> 14:41.580
对吧

14:41.580 --> 14:42.580
我们知道一个元素

14:42.580 --> 14:43.580
它没有设置高度

14:43.580 --> 14:44.580
它里面没有内容

14:44.580 --> 14:45.580
那么它的高度

14:45.580 --> 14:46.580
应该是多少啊

14:46.580 --> 14:48.580
是不是应该是零

14:48.580 --> 14:49.580
但是现在是零吗

14:49.580 --> 14:50.580
不是

14:50.580 --> 14:51.580
它高度为300

14:51.580 --> 14:52.580
你看一面上

14:52.580 --> 14:53.580
看这

14:53.580 --> 14:54.580
是不是300

14:54.580 --> 14:55.580
对吧

14:55.580 --> 14:56.580
为什么是300

14:56.580 --> 14:57.580
因为副元素就是300

14:57.580 --> 14:59.580
这就是从

14:59.580 --> 15:00.580
实践中

15:00.580 --> 15:01.580
我们可以看到

15:01.580 --> 15:03.580
这个结论是正确的

15:03.580 --> 15:04.580
主轴上

15:04.580 --> 15:05.580
依次排列

15:05.580 --> 15:06.580
车轴上

15:06.580 --> 15:07.580
拉伸

15:07.580 --> 15:08.580
好

15:08.580 --> 15:09.580
这一块没问题吧

15:09.580 --> 15:10.580
没问题

15:10.580 --> 15:16.070
太高声了

15:16.070 --> 15:18.070
有这么高声吗

15:18.070 --> 15:19.070
有这么高声

15:19.070 --> 15:20.070
你没吓我

15:20.070 --> 15:21.070
你是逗我玩吗

15:21.070 --> 15:23.070
不至于吧

15:23.070 --> 15:25.070
我用那个白眼松的话

15:25.070 --> 15:27.070
为你们不至于吧

15:27.070 --> 15:29.070
从轴到右

15:29.070 --> 15:30.070
主轴

15:30.070 --> 15:31.070
从上到下

15:31.070 --> 15:32.070
车轴

15:32.070 --> 15:33.070
它的指元素

15:33.070 --> 15:34.070
在主轴上

15:34.070 --> 15:35.070
从轴到右排列

15:35.070 --> 15:36.070
在车轴上

15:36.070 --> 15:37.070
拉伸

15:37.070 --> 15:38.070
好

15:38.070 --> 15:39.070
那么这其实

15:39.070 --> 15:40.070
弹性和最基本

15:40.070 --> 15:41.070
最基本的东西就搞定了

15:41.070 --> 15:42.070
剩下的东西

15:42.070 --> 15:43.070
又是来玩了

15:43.070 --> 15:44.070
怎么玩

15:44.070 --> 15:45.070
比如说

15:45.070 --> 15:46.070
我主轴

15:46.070 --> 15:47.070
我主轴上

15:47.070 --> 15:48.070
我不想这样

15:48.070 --> 15:49.070
从轴到右排列

15:49.070 --> 15:50.070
我能不能从右上

15:50.070 --> 15:51.070
左排列呢

15:51.070 --> 15:52.070
我能不能居中呢

15:52.070 --> 15:54.070
这些都是可以玩的

15:54.070 --> 15:55.070
比如说车轴上

15:55.070 --> 15:56.070
我不想拉伸

15:56.070 --> 15:57.070
我能不能在车轴上

15:57.070 --> 15:59.070
也从上到下排列呢

15:59.070 --> 16:00.070
这些都是可以玩的

16:00.070 --> 16:01.070
知道了

16:01.070 --> 16:03.070
那么具体就是怎么玩的

16:03.070 --> 16:04.070
那这些东西

16:04.070 --> 16:05.070
你们就不需要去背了

16:05.070 --> 16:06.070
还有有些同学

16:06.070 --> 16:07.070
高度紧张

16:07.070 --> 16:08.070
后面还有这么多东西

16:08.070 --> 16:09.070
不着急

16:09.070 --> 16:10.070
不用紧张

16:10.070 --> 16:12.070
直到这个是个基本概念之后

16:12.070 --> 16:13.070
你知道这些

16:13.070 --> 16:15.070
每一个东西都可以改的

16:15.070 --> 16:17.070
那么具体要改什么

16:17.070 --> 16:18.070
比如说

16:18.070 --> 16:19.070
有一天我不想

16:19.070 --> 16:20.070
主轴上这样排列了

16:20.070 --> 16:21.070
我要让它居中

16:21.070 --> 16:22.070
那就要查一下

16:22.070 --> 16:23.070
主轴排列就完事了

16:23.070 --> 16:26.070
我车轴不想让它拉伸

16:26.070 --> 16:27.070
你就查一下

16:27.070 --> 16:28.070
车轴排列就行了

16:28.070 --> 16:29.070
对吧

16:29.070 --> 16:30.070
你查越解决问题

16:30.070 --> 16:31.070
好

16:31.070 --> 16:32.070
一个个看吧

16:32.070 --> 16:33.070
下一个

16:33.070 --> 16:34.070
更改方向

16:34.070 --> 16:35.070
这啥意思

16:35.070 --> 16:36.070
默认情况下

16:36.070 --> 16:37.070
我们的主轴方向

16:37.070 --> 16:39.070
从左到右

16:39.070 --> 16:40.070
车轴的线

16:40.070 --> 16:41.070
看到没

16:41.070 --> 16:42.070
从左到右

16:42.070 --> 16:45.070
车轴的线是从上到下

16:45.070 --> 16:46.070
能不能改

16:46.070 --> 16:47.070
可以改的

16:47.070 --> 16:48.070
怎么改

16:48.070 --> 16:49.070
就通过这个属性改

16:49.070 --> 16:50.070
你需要背吗

16:50.070 --> 16:51.070
你需要背这个单词吗

16:51.070 --> 16:52.070
不需要

16:52.070 --> 16:53.070
你只需要知道

16:53.070 --> 16:54.070
它的方向可以改

16:54.070 --> 16:55.070
主轴方向可以改

16:55.070 --> 16:57.070
车轴方向也可以改

16:57.070 --> 16:58.070
到时候你

16:58.070 --> 16:59.070
真的需要改的时候

16:59.070 --> 17:01.070
你就跑到这来查一查

17:01.070 --> 17:03.070
反正就这么四种情况

17:03.070 --> 17:04.070
你要改成哪种情况

17:04.070 --> 17:05.070
你把个代码

17:05.070 --> 17:07.070
扩过去就可以了

17:07.070 --> 17:09.070
真正正确的学代码

17:09.070 --> 17:11.070
学习一些编程的方式

17:11.070 --> 17:13.070
你理解概念之后

17:13.070 --> 17:16.070
剩下的事情就是查越

17:16.070 --> 17:18.070
说概念是最重要的

17:18.070 --> 17:19.070
而不是代码

17:19.070 --> 17:21.070
代码反而不重要

17:21.070 --> 17:22.070
你们知道以后

17:22.070 --> 17:23.070
在公司里面开发

17:23.070 --> 17:24.070
里面是怎么开发的

17:24.070 --> 17:26.070
你们以为就像

17:26.070 --> 17:28.070
电影里面那个黑客一样

17:28.070 --> 17:29.070
不停地敲代码

17:29.070 --> 17:30.070
不是的

17:30.070 --> 17:31.070
你们在公司里面开发

17:31.070 --> 17:33.070
是不

17:33.070 --> 17:35.070
打开了很多很多的

17:35.070 --> 17:36.070
浏览器窗口

17:36.070 --> 17:39.070
然后查越文章解决问题

17:39.070 --> 17:41.070
前段开发就是这样

17:41.070 --> 17:45.070
好我们回到这来

17:45.070 --> 17:46.070
我们来看一下吧

17:46.070 --> 17:47.070
剩下的东西就放轻松

17:47.070 --> 17:48.070
看一下就行了

17:48.070 --> 17:49.070
它可不可以

17:49.070 --> 17:51.070
更改方向可以

17:51.070 --> 17:53.070
默认情况下是这样子的

17:53.070 --> 17:54.070
那我要想改成

17:54.070 --> 17:56.070
这样子可不可以呢

17:56.070 --> 17:57.070
可以啊

17:57.070 --> 17:59.070
主轴方向从右向左

17:59.070 --> 18:01.070
车轴方向从上到下

18:01.070 --> 18:02.070
那我们的元素

18:02.070 --> 18:04.070
是不是在主轴上

18:04.070 --> 18:05.070
依次排列

18:05.070 --> 18:06.070
主轴是从右向左的

18:06.070 --> 18:08.070
那就是一二三四

18:08.070 --> 18:10.070
车轴上拉伸

18:10.070 --> 18:11.070
继续拉伸

18:11.070 --> 18:12.070
对吧

18:12.070 --> 18:14.070
它能不能改成这样子呢

18:14.070 --> 18:15.070
主轴从上到下

18:15.070 --> 18:17.070
车轴从左到右

18:17.070 --> 18:18.070
可不可以啊

18:18.070 --> 18:19.070
可以

18:19.070 --> 18:20.070
那改了之后呢

18:20.070 --> 18:22.070
我们的元素就变成了

18:22.070 --> 18:24.070
在主轴上

18:24.070 --> 18:25.070
依次排列

18:25.070 --> 18:26.070
依二三四

18:26.070 --> 18:27.070
还是一样

18:27.070 --> 18:28.070
车轴上拉伸

18:28.070 --> 18:30.070
那主轴能不能改成这样子呢

18:30.070 --> 18:31.070
也可以

18:31.070 --> 18:33.070
你到时候需要忍

18:33.070 --> 18:34.070
我就不去说

18:34.070 --> 18:36.070
具体那个属性怎么写了

18:36.070 --> 18:38.070
那不重要了

18:38.070 --> 18:39.070
现在我们已经知道了

18:39.070 --> 18:40.070
它方向可以改

18:40.070 --> 18:42.070
到时候去查就完事了

18:42.070 --> 18:43.070
比方说有一天

18:43.070 --> 18:45.070
我想把它改成这个样子

18:45.070 --> 18:46.070
那我怎么办呢

18:46.070 --> 18:47.070
我一查

18:47.070 --> 18:49.070
我要更改方向

18:49.070 --> 18:50.070
更改那个轴的方向

18:50.070 --> 18:51.070
那我一查

18:51.070 --> 18:52.070
那就是这个代码

18:52.070 --> 18:54.070
扔过去完事

18:54.070 --> 18:56.070
先到复原书里边

18:56.070 --> 18:59.070
叫做flex direction

18:59.070 --> 19:00.070
这个单词也很好记

19:00.070 --> 19:02.070
flex是弹性和

19:02.070 --> 19:04.070
弹性方向

19:04.070 --> 19:05.070
方向是什么呢

19:05.070 --> 19:06.070
方向我们看一下这里

19:06.070 --> 19:08.070
可能reverse

19:08.070 --> 19:13.470
可能reverse

19:13.470 --> 19:15.470
我看一下

19:15.470 --> 19:17.470
为什么变成这个样子的

19:17.470 --> 19:19.470
因为它没有高度

19:19.470 --> 19:20.470
它现在没有高度

19:20.470 --> 19:21.470
高度的话比方说

19:21.470 --> 19:24.470
给它一个30

19:24.470 --> 19:26.470
所以从下往上排了

19:26.470 --> 19:27.470
给它一个内容吧

19:27.470 --> 19:30.470
一二三

19:30.470 --> 19:31.470
是

19:31.470 --> 19:33.470
从下往上排

19:33.470 --> 19:35.470
侧肘为什么没有拉伸呢

19:35.470 --> 19:36.470
侧肘

19:36.470 --> 19:38.470
因为它宽度给它固定了

19:38.470 --> 19:39.470
它没法拉伸

19:39.470 --> 19:41.470
那一宽度给它取消掉

19:41.470 --> 19:43.470
它就要拉伸了

19:43.470 --> 19:44.470
就这么简单

19:44.470 --> 19:45.470
所以说这些东西

19:45.470 --> 19:46.470
不要去背

19:46.470 --> 19:47.470
一背就完蛋了

19:47.470 --> 19:48.470
你就被就陷入到

19:48.470 --> 19:50.470
无穷无尽的细节里边去了

19:50.470 --> 19:52.470
那你这个学习

19:52.470 --> 19:54.470
就搞不下去了

19:54.470 --> 19:55.470
不要去背这些

19:55.470 --> 19:56.470
查就完事了

19:56.470 --> 19:57.470
但是一般情况下

19:57.470 --> 19:58.470
绝大部分情况下

19:58.470 --> 19:59.470
我们都不需要

19:59.470 --> 20:00.470
改变它的方向

20:00.470 --> 20:01.470
不太需要改变它的方向

20:01.470 --> 20:03.780
但不是说一定的

20:03.780 --> 20:04.780
有的时候我们去

20:04.780 --> 20:05.780
确实需要改变

20:05.780 --> 20:06.780
但我们那个项目里边

20:06.780 --> 20:07.780
还没有遇到

20:07.780 --> 20:09.780
不需要改变方向

20:09.780 --> 20:10.780
回到这个情况

20:10.780 --> 20:12.780
然后我们再看一下

20:12.780 --> 20:15.780
主轴的排列是可以改的

20:15.780 --> 20:16.780
它默认情况下

20:16.780 --> 20:19.780
是在主轴上依次排列

20:19.780 --> 20:21.780
我们也可以让它

20:21.780 --> 20:23.780
靠右来排列

20:23.780 --> 20:25.780
整体上靠右

20:25.780 --> 20:27.780
就通过这个属性来改

20:27.780 --> 20:29.780
比方说我们来看一下

20:29.780 --> 20:31.780
justify content

20:31.780 --> 20:33.780
这就是调整了

20:33.780 --> 20:35.780
主轴的排列方式

20:35.780 --> 20:40.890
你看是不是排到这了

20:40.890 --> 20:42.890
整体上排到右边去了

20:42.890 --> 20:43.890
有点像那个什么

20:43.890 --> 20:44.890
pixel line

20:44.890 --> 20:46.890
有点像那个意思

20:46.890 --> 20:47.890
然后还可以用这种方式

20:47.890 --> 20:48.890
我就不解释到

20:48.890 --> 20:50.890
一看这个图就明白了

20:50.890 --> 20:52.890
还可以用specified wrong的

20:52.890 --> 20:53.890
这两个图

20:53.890 --> 20:54.890
能看出区元吗

20:54.890 --> 20:55.890
能看出来

20:55.890 --> 20:56.890
应该能看出来

20:56.890 --> 20:57.890
还有justify content center

20:57.890 --> 20:59.890
让整体居中

20:59.890 --> 21:00.890
还有specified even

21:00.890 --> 21:01.890
你自己看

21:01.890 --> 21:02.890
你需要哪种

21:03.890 --> 21:04.890
茶院

21:04.890 --> 21:05.890
茶院就完事

21:05.890 --> 21:06.890
不要你现在需要居中

21:06.890 --> 21:07.890
你就茶院一下

21:10.890 --> 21:12.890
就是写上center

21:13.890 --> 21:14.890
保存

21:14.890 --> 21:15.890
就居中了

21:17.890 --> 21:18.890
其实很简单的

21:19.890 --> 21:20.890
然后现在主轴

21:20.890 --> 21:22.890
车轴排列

21:22.890 --> 21:24.890
通过这个属性来改变

21:24.890 --> 21:25.890
车轴排列

21:25.890 --> 21:26.890
默认情况下

21:26.890 --> 21:27.890
是不是这样

21:27.890 --> 21:28.890
这里拉伸的

21:28.890 --> 21:29.890
你不需要拉伸

21:29.890 --> 21:30.890
那怎么办

21:30.890 --> 21:31.890
你可以用这种方式

21:31.890 --> 21:32.890
排列

21:32.890 --> 21:33.890
可以用这种方式

21:33.890 --> 21:34.890
排列

21:34.890 --> 21:35.890
也可以用这种方式

21:35.890 --> 21:36.890
你爱用哪种

21:36.890 --> 21:37.890
用哪种都行

21:37.890 --> 21:38.890
那比方说

21:38.890 --> 21:39.890
现在我不需要你拉伸了

21:39.890 --> 21:40.890
那我车轴上

21:40.890 --> 21:41.890
需要你居中

21:41.890 --> 21:43.890
那你就这样写

21:43.890 --> 21:45.890
这样写完之后

21:45.890 --> 21:47.890
不就居中了吗

21:47.890 --> 21:48.890
车轴上就居中了

21:48.890 --> 21:49.890
主轴上居中

21:49.890 --> 21:51.890
车轴上也居中了

21:51.890 --> 21:52.890
那么他现在没有拉伸了

21:52.890 --> 21:54.890
他的高度就变成自动了

21:54.890 --> 21:55.890
高度变成自动

21:56.890 --> 21:58.890
被他的内容撑开

21:59.890 --> 22:00.890
简单吧

22:00.890 --> 22:01.890
这一块没问题吧

22:01.890 --> 22:02.890
没问题 Q2E

22:02.890 --> 22:06.220
写个代码

22:06.220 --> 22:07.220
马上就进入写代码了

22:07.220 --> 22:08.220
马上后边

22:08.220 --> 22:10.220
到处是弹性和这个项目里边

22:11.220 --> 22:12.220
你现在只需要知道

22:12.220 --> 22:13.220
这些基本概念

22:13.220 --> 22:14.220
然后知道

22:14.220 --> 22:15.220
我现在讲这些东西

22:15.220 --> 22:17.220
不是让你们去学习这些代码

22:17.220 --> 22:18.220
这个代码不重要

22:18.220 --> 22:19.220
你多写几次

22:19.220 --> 22:21.220
你们很快就熟悉了

22:21.220 --> 22:23.220
我现在是要让你们

22:23.220 --> 22:25.220
理解弹性和里边的基本概念

22:25.220 --> 22:26.220
什么叫主轴

22:26.220 --> 22:27.220
什么叫车轴

22:27.220 --> 22:29.220
什么叫弹性容器

22:29.220 --> 22:31.220
什么叫弹性项目

22:31.220 --> 22:33.220
这个比里边代码重要的多的多的多

22:33.220 --> 22:35.220
因为你只要了解这些基本概念

22:35.220 --> 22:37.220
就可以采取文档了

22:37.220 --> 22:38.220
不然的话

22:38.220 --> 22:39.220
那个文档给力都不知道

22:39.220 --> 22:40.220
什么意思

22:40.220 --> 22:41.220
你只要能采取文档

22:41.220 --> 22:42.220
这个事就解决了

22:43.220 --> 22:44.220
好 接下来

22:44.220 --> 22:46.220
这是一个新的概念

22:46.220 --> 22:48.220
叫做弹性容项目伸缩

22:48.220 --> 22:49.220
这是什么意思呢

22:50.220 --> 22:51.220
下面有个例子

22:51.220 --> 22:52.220
把例子先看懂

22:53.220 --> 22:54.220
或者我们看这个

22:54.220 --> 22:55.220
看这个

22:55.220 --> 22:56.220
这上面也行

22:57.220 --> 22:58.220
比方说吧

22:58.220 --> 22:59.220
我们就这

23:00.220 --> 23:02.220
我们先不让你居中

23:02.220 --> 23:03.220
主轴上先不居中

23:03.220 --> 23:04.220
我们车轴上也不居中

23:04.220 --> 23:06.220
这样看得更加清楚一点

23:06.220 --> 23:07.220
这个高度收成100%

23:08.220 --> 23:09.220
好 变这个样子

23:10.220 --> 23:11.220
变这个样子之后

23:11.220 --> 23:12.220
你会发现了

23:12.220 --> 23:14.220
我们现在有三个弹性项目

23:14.220 --> 23:15.220
对吧

23:15.220 --> 23:16.220
在副元素里边

23:16.220 --> 23:18.220
容器里边有三个弹性项目

23:18.220 --> 23:19.220
其实你这个时候

23:19.220 --> 23:21.220
你通过这个调试工具

23:21.220 --> 23:22.220
它也给你提示的非常清楚

23:22.220 --> 23:24.220
你看你指着这个副元素

23:25.220 --> 23:26.220
它会告诉你

23:26.220 --> 23:27.220
有一些虚现的地方

23:27.220 --> 23:28.220
看到没

23:28.220 --> 23:29.220
虚现的地方

23:29.220 --> 23:30.220
这个虚现的地方

23:30.220 --> 23:31.220
什么意思

23:31.220 --> 23:33.220
就表示这个元素的

23:33.220 --> 23:35.220
就是容器的剩余空间

23:35.220 --> 23:37.220
它还剩余的这么多空间

23:37.220 --> 23:38.220
就这个蛋糕

23:38.220 --> 23:40.220
它还没有分完

23:40.220 --> 23:41.220
它剩了一部分

23:42.220 --> 23:43.220
那么这剩了这一部分

23:43.220 --> 23:45.220
默认情况下呢

23:45.220 --> 23:46.220
都不感动

23:46.220 --> 23:47.220
对吧

23:47.220 --> 23:48.220
这个1 2 3

23:48.220 --> 23:49.220
这些指元素

23:49.220 --> 23:51.220
都不好意思去拿

23:52.220 --> 23:53.220
能不能让他们好意思

23:53.220 --> 23:54.220
去拿呢

23:54.220 --> 23:55.220
可以的

23:55.220 --> 23:57.220
这就是弹性项目伸出

23:57.220 --> 23:58.220
什么叫伸出

23:58.220 --> 24:00.220
吃掉剩余空间

24:00.220 --> 24:02.220
当剩余空间充足的时候

24:02.220 --> 24:04.220
吃掉剩余空间

24:04.220 --> 24:06.220
当剩余空间不足的时候

24:06.220 --> 24:08.220
让出空间

24:08.220 --> 24:10.220
这就是伸出

24:10.220 --> 24:11.220
所谓伸出

24:11.220 --> 24:13.220
是在组轴方向

24:13.220 --> 24:14.220
不是撤走

24:14.220 --> 24:15.220
是组轴

24:15.220 --> 24:18.220
当弹性容器有额外空间的时候

24:18.220 --> 24:20.220
是否需要拉伸

24:21.220 --> 24:22.220
当空间不足的时候

24:22.220 --> 24:24.220
是否需要压缩

24:25.220 --> 24:27.220
那具体怎么做呢

24:27.220 --> 24:29.220
在弹性项目上

24:29.220 --> 24:30.220
你看这个地方

24:30.220 --> 24:32.220
我都给打了重点的

24:32.220 --> 24:34.220
一个代码应该写到哪儿

24:34.220 --> 24:35.220
如果说你要做伸说的话

24:35.220 --> 24:37.220
应该写到弹性项目上

24:37.220 --> 24:38.220
使用什么属性呢

24:38.220 --> 24:40.220
使用Flex属性

24:40.220 --> 24:44.220
它可以设置拉伸和压缩比例

24:44.220 --> 24:45.220
怎么写呢

24:45.220 --> 24:46.220
就这样子写

24:46.220 --> 24:47.220
拉伸比例压缩比例

24:47.220 --> 24:48.220
然后一个初始尺寸

24:48.220 --> 24:49.220
初始尺寸

24:49.220 --> 24:51.220
基本上就写个凹凸就可以了

24:51.220 --> 24:52.220
什么意思

24:53.220 --> 24:55.220
第一个元素弹性项目

24:56.220 --> 24:58.220
零零一百像素

24:58.220 --> 24:59.220
啥意思啊

25:00.220 --> 25:01.220
零表示的是

25:02.220 --> 25:03.220
这个第一个是

25:04.220 --> 25:05.220
不拉伸

25:05.220 --> 25:06.220
第二个零呢

25:06.220 --> 25:07.220
不压缩

25:08.220 --> 25:10.220
初始尺寸一百像素

25:12.220 --> 25:13.220
第二个看一下

25:13.220 --> 25:15.220
Flex一零一百

25:15.220 --> 25:16.220
啥意思啊

25:17.220 --> 25:18.220
我要拉伸

25:18.220 --> 25:20.220
当空间充足的时候

25:20.220 --> 25:23.220
我要吃掉剩余空间的一份

25:23.220 --> 25:25.220
这个叫做一份

25:26.220 --> 25:27.220
注意儿话音啊

25:27.220 --> 25:29.220
第二个呢表示我不压缩

25:29.220 --> 25:30.220
空间不足的时候

25:30.220 --> 25:31.220
我不让出空间

25:31.220 --> 25:33.220
就拉伸比例为一

25:33.220 --> 25:34.220
不压缩

25:34.220 --> 25:35.220
接下来我写了一个

25:35.220 --> 25:37.220
二零一百

25:37.220 --> 25:38.220
表示什么意思啊

25:38.220 --> 25:40.220
表示我初始尺寸是一百

25:41.220 --> 25:42.220
剩余空间充足的时候

25:42.220 --> 25:44.220
我要吃掉两份

25:44.220 --> 25:45.220
不压缩

25:45.220 --> 25:46.220
第二个是零

25:46.220 --> 25:47.220
不压缩

25:47.220 --> 25:49.220
其实说了半天啥意思

25:50.220 --> 25:52.220
当我们空间充足的时候

25:52.220 --> 25:54.220
有色的剩余空间

25:54.220 --> 25:55.220
空间充足

25:56.220 --> 25:57.220
那就分呗

25:58.220 --> 26:00.220
你呢分你一份

26:00.220 --> 26:01.220
不给你

26:01.220 --> 26:03.220
你分一份

26:03.220 --> 26:04.220
你分两份

26:05.220 --> 26:06.220
是不是他吃一份

26:06.220 --> 26:07.220
他吃两份

26:07.220 --> 26:09.220
就把剩余空间就吃掉了

26:09.220 --> 26:10.220
吃完了就变这样子

26:10.220 --> 26:11.220
你看一下是不是

26:11.220 --> 26:13.220
他增长了一份

26:13.220 --> 26:14.220
他增长了两份

26:15.220 --> 26:16.220
懂了意思吗

26:16.220 --> 26:17.220
就吃了

26:17.220 --> 26:18.220
就按比例吃嘛

26:18.220 --> 26:19.220
那就相当于

26:19.220 --> 26:20.220
空间分

26:20.220 --> 26:21.220
平均分成三份

26:21.220 --> 26:22.220
给你一份

26:22.220 --> 26:23.220
给你两份

26:23.220 --> 26:25.220
这就这么意思

26:25.220 --> 26:27.220
好比方说我们来一下

26:27.220 --> 26:30.220
就在调试来吧

26:30.220 --> 26:33.220
我单独对第三个元素去设置一个flex

26:34.220 --> 26:35.220
一

26:35.220 --> 26:36.220
你看我

26:36.220 --> 26:37.220
我后面买没写

26:37.220 --> 26:38.220
他就直接就成满了

26:38.220 --> 26:39.220
零

26:39.220 --> 26:40.220
凹凸

26:40.220 --> 26:42.220
凹凸就表示直接使用他的宽度

26:42.220 --> 26:44.220
凹凸表示初始尺寸

26:44.220 --> 26:45.220
初始尺寸

26:45.220 --> 26:46.220
如果说写凹凸的话

26:46.220 --> 26:48.220
就表示使用他的宽度

26:48.220 --> 26:49.220
初始尺寸

26:49.220 --> 26:51.220
那么这个是什么意思呢

26:51.220 --> 26:53.220
就是这个意思

26:53.220 --> 26:55.220
我现在空间不是很充足吗

26:55.220 --> 26:57.220
你看这两个元素

26:57.220 --> 26:59.220
他默认不吃掉生云空间

26:59.220 --> 27:01.220
那他要独吃一份

27:01.220 --> 27:03.220
那独吃一份就吃完了

27:03.220 --> 27:04.220
对吧

27:04.220 --> 27:06.220
你不要问我一份是多少

27:06.220 --> 27:07.220
他是按比

27:07.220 --> 27:09.220
这个叫做按比例

27:09.220 --> 27:10.220
其他人都不吃

27:10.220 --> 27:12.220
你就只有你吃一份

27:12.220 --> 27:13.220
那比例

27:13.220 --> 27:14.220
那就肯定是把它吃完

27:14.220 --> 27:15.220
对吧

27:15.220 --> 27:16.220
其他人都不吃

27:16.220 --> 27:18.220
其他人要跟着吃的

27:18.220 --> 27:20.220
那就一人来一点

27:20.220 --> 27:21.220
对吧

27:21.220 --> 27:23.220
所以一人来一点

27:23.220 --> 27:24.220
二合三

27:24.220 --> 27:25.220
一人来一点

27:25.220 --> 27:26.220
你看

27:26.220 --> 27:28.220
其实你指着这个元素

27:28.220 --> 27:29.220
看到没看到没

27:29.220 --> 27:31.220
元素除了这个

27:31.220 --> 27:32.220
隐隐虚线部分

27:32.220 --> 27:34.220
就是它元式的尺寸

27:34.220 --> 27:35.220
那个尖头部分

27:35.220 --> 27:37.220
是不是被他吃掉的尺寸

27:37.220 --> 27:39.220
再看第三个

27:39.220 --> 27:40.220
这个元素

27:40.220 --> 27:41.220
它元式的尺寸是一般

27:41.220 --> 27:42.220
尖头部分

27:42.220 --> 27:43.220
那个横线部分

27:43.220 --> 27:45.220
是不是被他吃掉的尺寸

27:45.220 --> 27:46.220
懂那意思吧

27:46.220 --> 27:47.220
这一块能理解吗

27:47.220 --> 27:48.220
能理解Q和E

27:49.220 --> 27:50.220
第二个字

27:50.220 --> 27:51.220
马上就讲

27:51.220 --> 27:56.200
我们先把这个指示点过了

27:56.200 --> 27:57.200
过了之后

27:57.200 --> 27:58.200
过了之后

27:58.200 --> 27:59.200
我们马上就

27:59.200 --> 28:00.200
这像我们的一个项目里面

28:00.200 --> 28:02.200
到处产业之后

28:02.200 --> 28:04.200
做完这个项目之后

28:04.200 --> 28:06.200
你一定会练得滚瓜烂手

28:06.200 --> 28:08.200
第二个尺寸是什么意思呢

28:08.200 --> 28:10.200
第二个尺寸

28:10.200 --> 28:11.200
刚才同学在问

28:11.200 --> 28:12.200
第二个数字是什么意思呢

28:12.200 --> 28:15.200
它表示压缩的比例

28:15.200 --> 28:16.200
当然是拿身

28:16.200 --> 28:17.200
拿身什么情况

28:17.200 --> 28:18.200
空间充足

28:18.200 --> 28:19.200
还有剩余空间

28:19.200 --> 28:20.200
我们就吃

28:22.200 --> 28:23.200
还有压缩

28:24.200 --> 28:26.200
如果说空间不足怎么办

28:26.200 --> 28:27.200
比方说这种情况

28:28.200 --> 28:29.200
空间不足

28:29.200 --> 28:30.200
现在空间都没有了

28:30.200 --> 28:31.200
你吃

28:31.200 --> 28:32.200
你吃什么

28:32.200 --> 28:33.200
我都没有剩余空间了

28:33.200 --> 28:35.200
现在是空间不足的问题

28:35.200 --> 28:36.200
你要让出来

28:36.200 --> 28:38.200
要把空间让出来

28:39.200 --> 28:40.200
那怎么来让

28:40.200 --> 28:42.200
默认情况下

28:42.200 --> 28:43.200
是

28:43.200 --> 28:45.200
默认情况下是这样子的

28:45.200 --> 28:47.200
这些子元素

28:48.200 --> 28:50.200
都是很规矩的小孩

28:50.200 --> 28:52.200
他不贪心

28:52.200 --> 28:53.200
他都不吃

28:53.200 --> 28:55.200
有空间不吃

28:55.200 --> 28:56.200
除非你让他吃

28:56.200 --> 28:58.200
否则他默认是不吃的

28:58.200 --> 29:00.200
刚才我们也看到了

29:00.200 --> 29:01.200
刷新意思

29:01.200 --> 29:03.200
这些元素是不是都没有吃成余空间

29:03.200 --> 29:04.200
默认不吃

29:05.200 --> 29:07.200
但是这些小孩很规矩

29:07.200 --> 29:08.200
很听话

29:08.200 --> 29:09.200
当副元素

29:09.200 --> 29:10.200
家里边

29:10.200 --> 29:12.200
房子太小了

29:12.200 --> 29:13.200
郭德纲

29:13.200 --> 29:14.200
一个箱子里边

29:14.200 --> 29:16.200
一个3平米的卧室

29:16.200 --> 29:17.200
卧室里边

29:17.200 --> 29:19.200
一家8口人

29:19.200 --> 29:21.200
那这个时候只能挤一挤了

29:21.200 --> 29:22.200
家里边住不下了

29:22.200 --> 29:24.200
让大家都让出一点

29:24.200 --> 29:25.200
比方说

29:25.200 --> 29:26.200
我们这里的元素

29:26.200 --> 29:27.200
我给他多写一点

29:27.200 --> 29:29.200
DIV点item

29:29.200 --> 29:31.200
我们给他写上一个20个

29:31.200 --> 29:32.200
10个吧

29:32.200 --> 29:34.200
其实10个就够了

29:34.200 --> 29:36.200
写了10个item

29:36.200 --> 29:38.200
那我们来看一下

29:38.200 --> 29:40.200
发现他没有溢出

29:40.200 --> 29:41.200
看到没

29:41.200 --> 29:43.200
他本来宽度是100的

29:43.200 --> 29:44.200
是不是没有溢出

29:44.200 --> 29:45.200
说明这些孩子

29:45.200 --> 29:47.200
真的很懂事

29:47.200 --> 29:50.200
每个人都让出了一部分空间

29:50.200 --> 29:51.200
你看我指着他的时候

29:51.200 --> 29:53.200
阴影部分是他原式的尺寸

29:53.200 --> 29:55.200
那个横线部分

29:55.200 --> 29:57.200
就是他让出来的尺寸

29:57.200 --> 29:59.200
每个人都让了一点

29:59.200 --> 30:01.200
是不是就把空间挤一挤

30:01.200 --> 30:02.200
就挤下了

30:02.200 --> 30:03.200
对不对

30:03.200 --> 30:04.200
就这么个意思

30:05.200 --> 30:07.200
但是让这个行为

30:07.200 --> 30:09.200
我们是可以调整的

30:10.200 --> 30:12.200
我们可以让有些人让的多一点

30:12.200 --> 30:13.200
有些人不让

30:13.200 --> 30:16.200
我们通常学这个压缩的时候

30:16.200 --> 30:18.200
主要就是学习

30:18.200 --> 30:20.200
如何让他不要让空间

30:20.200 --> 30:21.200
有些孩子

30:21.200 --> 30:24.200
是家中的天之交子

30:25.200 --> 30:26.200
其他人都可以让

30:26.200 --> 30:28.200
我老大我不能让

30:28.200 --> 30:29.200
比方说吧

30:29.200 --> 30:30.200
就他

30:30.200 --> 30:31.200
老大我不希望他让

30:31.200 --> 30:32.200
那怎么办呢

30:32.200 --> 30:33.200
flex

30:34.200 --> 30:35.200
你神不神说

30:35.200 --> 30:37.200
你吃不吃剩余空间

30:37.200 --> 30:38.200
现在不是我们考虑的

30:38.200 --> 30:39.200
你要吃又吃

30:39.200 --> 30:41.200
反正跟我现在没什么关系

30:41.200 --> 30:43.200
关键是你不能压缩

30:47.470 --> 30:48.470
这个话什么意思

30:48.470 --> 30:50.470
第一个我们刚才讲过了

30:50.470 --> 30:51.470
不拉伸

30:51.470 --> 30:53.470
有剩余空间我也不吃

30:53.470 --> 30:54.470
当然你要吃也无所谓

30:54.470 --> 30:57.470
反正现在根本就不是空间充足的时候

30:57.470 --> 30:58.470
你吃不吃都无所谓的

30:58.470 --> 31:00.470
现在是空间不足

31:00.470 --> 31:01.470
关键是第二个

31:01.470 --> 31:02.470
我不压缩

31:02.470 --> 31:04.470
空间不足就不足

31:04.470 --> 31:05.470
我就不压缩

31:06.470 --> 31:08.470
你看他是不是没有让出空间

31:08.470 --> 31:09.470
那怎么办

31:09.470 --> 31:11.470
其他就让多一点

31:11.470 --> 31:13.470
其他人那就多让一点

31:13.470 --> 31:15.470
一人让一点

31:15.470 --> 31:17.470
那如果说都不让

31:17.470 --> 31:18.470
那如果说都不让

31:18.470 --> 31:20.470
都不让那就没办法了

31:22.470 --> 31:23.470
都不让

31:23.470 --> 31:25.470
都不让那就成这个样子了

31:25.470 --> 31:26.470
那就超出了

31:26.470 --> 31:28.470
挤不下就出去

31:29.470 --> 31:30.470
只能这样子

31:31.470 --> 31:33.470
听懂了就非常简单了

31:33.470 --> 31:34.470
就伸说

31:34.470 --> 31:35.470
你不要去背

31:35.470 --> 31:36.470
千万不要去背

31:36.470 --> 31:37.470
我就怕你们

31:37.470 --> 31:39.470
想到脑袋瓜又去背这个东西

31:39.470 --> 31:40.470
背这个又痛苦

31:40.470 --> 31:42.470
我又不想看你们痛苦

31:42.470 --> 31:43.470
又背不下来

31:44.470 --> 31:45.470
查越就完事了

31:45.470 --> 31:46.470
你知道有这么回事

31:46.470 --> 31:48.470
查越就完事了

31:49.470 --> 31:50.470
最后一个概念

31:50.470 --> 31:51.470
主轴换行

31:51.470 --> 31:52.470
默认情况下

31:52.470 --> 31:53.470
他就是排不下

31:53.470 --> 31:54.470
他也不换行的

31:54.470 --> 31:55.470
打死不换行

31:56.470 --> 31:57.470
营活一点吧

31:57.470 --> 31:58.470
你换行吗

31:58.470 --> 31:59.470
能不能换行呢

31:59.470 --> 32:00.470
可以

32:00.470 --> 32:01.470
可以换行的

32:01.470 --> 32:02.470
非常简单

32:02.470 --> 32:04.470
你只需要给容器设置一个属性

32:04.470 --> 32:05.470
叫做flag是wap

32:05.470 --> 32:06.470
wap什么意思

32:06.470 --> 32:07.470
就换行

32:08.470 --> 32:09.470
默认是lowwap

32:09.470 --> 32:10.470
不换行

32:10.470 --> 32:12.470
那个设置为wap就换

32:14.470 --> 32:15.470
他就换行

32:15.470 --> 32:16.470
排不下就换行

32:17.470 --> 32:18.470
就完事了

32:18.470 --> 32:20.470
这就是那个弹性说

32:21.470 --> 32:23.470
基本概念清楚了

32:23.470 --> 32:24.470
然后他能做哪些事

32:24.470 --> 32:26.470
能做哪些改动

32:26.470 --> 32:27.470
知道了

32:27.470 --> 32:28.470
就算你忘记了

32:28.470 --> 32:29.470
你看一下这个目录

32:29.470 --> 32:31.470
也可以帮助你想起来

32:31.470 --> 32:32.470
剩下的事情

32:32.470 --> 32:34.470
就是我们在实战中去应用

32:35.470 --> 32:36.470
需要什么差跃

32:36.470 --> 32:37.470
需要什么差跃

32:37.470 --> 32:38.470
就可以了

32:39.470 --> 32:40.470
弹性和我们就讲到这

32:40.470 --> 32:41.470
当然讲到这

32:41.470 --> 32:42.470
我知道

32:42.470 --> 32:44.470
同学们可能还是心中不稳

32:44.470 --> 32:46.470
为什么没有练习过

32:46.470 --> 32:49.470
马上很快就会有大量的练习

32:49.470 --> 32:50.470
接下来

32:50.470 --> 32:52.470
我们就开始来开发我们的项目

32:52.470 --> 32:54.470
首先我们来认识一下

32:54.470 --> 32:55.470
我们的工程结构

32:56.470 --> 32:57.470
工程结构

32:57.470 --> 32:58.470
在工程里边

32:58.470 --> 33:00.470
我们有三个文件夹

33:00.470 --> 33:01.470
一个是二set

33:01.470 --> 33:02.470
这个文件夹

33:02.470 --> 33:04.470
里边放的是支援文件

33:04.470 --> 33:05.470
包括图片

33:06.470 --> 33:08.470
随便找了一些图片

33:08.470 --> 33:10.470
然后包括一个视频

33:10.470 --> 33:11.470
都在这里

33:11.470 --> 33:13.470
反正所有的资源都在这里

33:14.470 --> 33:15.470
四页写字不用说了

33:15.470 --> 33:17.470
这里边放四页写字文件

33:17.470 --> 33:18.470
介石里边放介石文件

33:18.470 --> 33:19.470
这里边有两个

33:19.470 --> 33:20.470
你不要去删它

33:20.470 --> 33:21.470
我们将来会有用的

33:22.470 --> 33:24.470
页面就这个页面

33:24.470 --> 33:25.470
这里面里面除了一个台头之外

33:25.470 --> 33:26.470
啥也没有

33:27.470 --> 33:29.470
这就是我们目前的情况

33:29.470 --> 33:31.980
工程结构

33:31.980 --> 33:32.980
清楚了吗

33:32.980 --> 33:33.980
清楚的话

33:33.980 --> 33:40.380
就个一

33:40.380 --> 33:41.380
我看一下前面的问题

33:47.600 --> 33:48.600
是啊 这个台子很规矩

33:48.600 --> 33:49.600
你不让它吃

33:49.600 --> 33:50.600
它就不吃了

33:52.600 --> 33:54.600
换行能不能让它有空气

33:54.600 --> 33:55.600
那这个问题问得好

33:55.600 --> 33:56.600
那你觉得

33:56.600 --> 33:58.600
应该查院哪一个目录

33:59.600 --> 34:01.600
你要对应到目录上来

34:01.600 --> 34:03.600
反正弹性盒就能做这么些事

34:03.600 --> 34:05.600
那你到底要做哪些事

34:05.600 --> 34:07.600
那你是不是要

34:07.600 --> 34:09.600
改变主轴的排列

34:09.600 --> 34:11.600
这不就有空气了吗

34:11.600 --> 34:14.600
你要使用哪种有空气的方式

34:14.600 --> 34:18.190
你自己选

34:18.190 --> 34:20.190
好 那么这个工程结构清楚了

34:20.190 --> 34:23.190
我们将来写它的全局样式

34:23.190 --> 34:25.190
因为我们知道写一个项目的时候

34:25.190 --> 34:26.190
总会有一些全局的样式

34:26.190 --> 34:28.190
比方说我们最常见的全局样式

34:28.190 --> 34:29.190
就是这个玩意儿

34:29.190 --> 34:31.190
对 朋友们都写过

34:31.190 --> 34:32.190
一个信号

34:32.190 --> 34:33.190
然后一个Marking 0

34:33.190 --> 34:35.190
一个Candy 0

34:35.190 --> 34:36.190
就这么一个东西

34:36.190 --> 34:38.190
好 就是这些全局的样式

34:38.190 --> 34:41.190
我们单独用一个CSS文件来写

34:41.190 --> 34:43.190
index.css

34:44.190 --> 34:46.190
我们在页面上去引用它

34:46.190 --> 34:47.190
这里顺便说一下

34:47.190 --> 34:48.190
页面上还有一个小问题

34:48.190 --> 34:49.190
我们先把它解决了

34:49.190 --> 34:51.190
就是这个地方

34:51.190 --> 34:52.190
这个地方

34:52.190 --> 34:54.190
这里面有个图标

34:54.190 --> 34:56.190
这个图标

34:56.190 --> 34:57.190
你看我们这儿

34:57.190 --> 34:58.190
是不是一个图标

34:58.190 --> 35:00.190
这里实际上就是一个图片

35:00.190 --> 35:02.190
那么这个图片如何来做呢

35:02.190 --> 35:04.190
是需要通过一句代码

35:04.190 --> 35:06.190
这个代码你们也不要去背

35:06.190 --> 35:07.190
连元老师都背不住

35:07.190 --> 35:09.190
写了这么多年都背不住

35:09.190 --> 35:11.190
怎么写呢 就link

35:11.190 --> 35:13.190
然后呢 下面你看这个

35:13.190 --> 35:14.190
bybacom

35:14.190 --> 35:17.190
它有智能提示的

35:17.190 --> 35:18.190
你在这个位置

35:18.190 --> 35:20.190
写上图标的路径

35:20.190 --> 35:23.190
这里顺便说一句

35:23.190 --> 35:25.190
我不知道现在有多少同学

35:25.190 --> 35:27.190
还在写这种路径

35:27.190 --> 35:28.190
在前期学习的时候

35:28.190 --> 35:29.190
不要写这种路径

35:29.190 --> 35:32.190
这种路径叫绝对路径

35:32.190 --> 35:35.190
统一使用相对路径

35:35.190 --> 35:36.190
好吧

35:36.190 --> 35:37.190
第二 鞋杠开头

35:37.190 --> 35:38.190
表示当前目睹下边的

35:38.190 --> 35:40.190
而CS目睹下边的这个文件

35:40.190 --> 35:41.190
bybacom

35:41.190 --> 35:43.190
你看它这里有提示

35:43.190 --> 35:45.190
是不是就表示这个图片

35:45.190 --> 35:46.190
对吧 有图片

35:46.190 --> 35:47.190
保存

35:47.190 --> 35:49.190
保存之后你会发现

35:49.190 --> 35:51.190
我们这里图片出来了

35:51.190 --> 35:52.190
看到没有

35:52.190 --> 35:53.190
这是这个

35:53.190 --> 35:54.190
非常简单

35:54.190 --> 35:55.190
bybacom

35:55.190 --> 35:56.190
再来一次

35:56.190 --> 35:57.190
link

35:57.190 --> 35:58.190
冒号

35:58.190 --> 35:59.190
bybacom

35:59.190 --> 36:00.190
根据提示

36:00.190 --> 36:02.190
把这个地方给改一下

36:02.190 --> 36:03.190
完成了

36:03.190 --> 36:04.190
然后我们去引用一下

36:04.190 --> 36:06.190
我们的CSS

36:06.190 --> 36:07.190
index

36:07.190 --> 36:08.190
CSS

36:09.190 --> 36:11.190
好 这里边我们写上一些

36:11.190 --> 36:12.190
全局的样式

36:12.190 --> 36:13.190
有哪些全局样式

36:13.190 --> 36:14.190
我们需要处理呢

36:14.190 --> 36:16.190
我这里有一些注释

36:16.190 --> 36:18.190
你按照这个注释

36:18.190 --> 36:19.190
把它完成就行了

36:19.190 --> 36:22.190
第一个 选中所有的元素

36:22.190 --> 36:24.190
清除默认样式

36:24.190 --> 36:25.190
默认样式

36:25.190 --> 36:26.190
我们平时清除就两句话

36:26.190 --> 36:27.190
对吧 一个是margin 0

36:27.190 --> 36:28.190
一个是panning 0

36:28.190 --> 36:30.190
所以就这两句话

36:30.190 --> 36:32.190
因为浏览现在给一些元素

36:32.190 --> 36:33.190
加了一些margin

36:33.190 --> 36:34.190
加了一些panning很烦人

36:34.190 --> 36:36.190
我们把它清除掉

36:36.190 --> 36:38.190
其实这里还有一句话

36:38.190 --> 36:39.190
需要处理

36:39.190 --> 36:41.190
这句话就是

36:41.190 --> 36:42.190
boss setting

36:42.190 --> 36:43.190
border boss

36:43.190 --> 36:45.190
这个东西我们后边

36:45.190 --> 36:46.190
在课程里边

36:46.190 --> 36:47.190
就是以后你们

36:47.190 --> 36:48.190
正规学习的时候

36:48.190 --> 36:49.190
我们还会讲

36:49.190 --> 36:51.190
这个玩意现在你就可以

36:51.190 --> 36:52.190
这么理解

36:52.190 --> 36:53.190
我也会讲一讲

36:53.190 --> 36:55.190
这个球迅其实并不复杂

36:55.190 --> 36:57.190
你要不愿意听的话

36:57.190 --> 36:58.190
我就先给你来一句

36:58.190 --> 37:01.190
最简单的总结

37:01.190 --> 37:02.190
就是这句话

37:02.190 --> 37:04.190
你写了

37:04.190 --> 37:06.190
写了就不掉头发

37:06.190 --> 37:11.780
不写就掉头发

37:11.780 --> 37:12.780
就这么简单

37:12.780 --> 37:13.780
你写了

37:13.780 --> 37:14.780
你会发现

37:14.780 --> 37:15.780
开发原来很舒服的

37:15.780 --> 37:16.780
你不写的话

37:16.780 --> 37:18.780
头发就稍稍往外掉

37:18.780 --> 37:19.780
就这么简单

37:19.780 --> 37:20.780
你就理解

37:20.780 --> 37:21.780
你就必须要写就行了

37:21.780 --> 37:23.780
以后你们做网的业开发

37:23.780 --> 37:24.780
先来一个信号

37:24.780 --> 37:26.780
把这两个玩意儿清零

37:26.780 --> 37:28.780
然后来去这个

37:28.780 --> 37:29.780
就不掉头发了

37:29.780 --> 37:30.780
那这个玩意儿

37:30.780 --> 37:31.780
是什么意思呢

37:31.780 --> 37:32.780
你看写的话

37:32.780 --> 37:33.780
没有什么反应

37:33.780 --> 37:34.780
对吧

37:34.780 --> 37:35.780
是啊

37:35.780 --> 37:36.780
你现在还没开始做

37:36.780 --> 37:37.780
你头发还没有感觉

37:37.780 --> 37:38.780
当然没有反应

37:38.780 --> 37:39.780
包括Syner

37:39.780 --> 37:40.780
你看一下

37:40.780 --> 37:41.780
一头剩千言

37:41.780 --> 37:42.780
叫啥意思

37:42.780 --> 37:44.780
默认情况下

37:44.780 --> 37:45.780
这个玩意儿

37:45.780 --> 37:46.780
这个属性值

37:46.780 --> 37:47.780
它的默认值是

37:47.780 --> 37:49.780
contain box

37:49.780 --> 37:51.780
就是你写不写这个属性

37:51.780 --> 37:52.780
它这个默认值

37:52.780 --> 37:54.780
它都是contain box

37:54.780 --> 37:55.780
你不写

37:55.780 --> 37:56.780
它也是这个值

37:56.780 --> 37:58.780
那么在这个值的影响下

37:58.780 --> 38:00.780
我们不是学过合模型吗

38:00.780 --> 38:01.780
我们的合模型

38:01.780 --> 38:03.780
会有什么样的现象呢

38:03.780 --> 38:04.780
它就会有一个这样的现象

38:04.780 --> 38:05.780
这个现象呢

38:05.780 --> 38:06.780
倒不是一个奇怪的现象

38:06.780 --> 38:08.780
它是一个凡人的现象

38:08.780 --> 38:09.780
其实我

38:09.780 --> 38:10.780
当老师这么多年了

38:10.780 --> 38:11.780
ATMC里边

38:11.780 --> 38:13.780
最大到最大的问题就是

38:13.780 --> 38:14.780
就是这里

38:14.780 --> 38:16.780
产生了无数的问题了

38:16.780 --> 38:18.780
所以我不断的强调

38:18.780 --> 38:19.780
不断的强调

38:19.780 --> 38:20.780
一定要把这句话加上

38:20.780 --> 38:21.780
加上就不出问题

38:21.780 --> 38:22.780
什么意思呢

38:22.780 --> 38:24.780
明明一个盒子

38:24.780 --> 38:25.780
我给它设置的宽高

38:25.780 --> 38:27.780
是一百成一百

38:27.780 --> 38:29.780
但是我加上了pending

38:29.780 --> 38:31.780
加上了border之后

38:31.780 --> 38:32.780
这个盒子的宽

38:32.780 --> 38:34.780
整个盒子可见部分

38:34.780 --> 38:36.780
可以看到的那一部分

38:36.780 --> 38:37.780
是不是包含边框

38:37.780 --> 38:38.780
包含pending

38:38.780 --> 38:40.780
包含内容

38:40.780 --> 38:42.780
就变成一百三了

38:42.780 --> 38:45.780
好多朋友在这里纠结

38:45.780 --> 38:46.780
明明说的是一百成一百

38:46.780 --> 38:48.780
为什么这个盒子变大了

38:48.780 --> 38:49.780
想了半天

38:49.780 --> 38:51.780
原来是pending加进去了

38:51.780 --> 38:53.780
border加进去了

38:53.780 --> 38:54.780
这里加进去了

38:54.780 --> 38:55.780
我不希望这个盒子

38:55.780 --> 38:56.780
这么大怎么办

38:56.780 --> 38:58.780
我去调杯

38:58.780 --> 39:00.780
调宽度减少一点

39:00.780 --> 39:03.780
调得头发掉了

39:03.780 --> 39:04.780
还没有学介石

39:04.780 --> 39:05.780
就掉头发了

39:05.780 --> 39:07.780
就掉得圆不圆

39:07.780 --> 39:08.780
这个怎么办呢

39:08.780 --> 39:10.780
就一非常简单的一句话

39:10.780 --> 39:11.780
就可以解决

39:11.780 --> 39:14.780
把box sizing变成border box

39:14.780 --> 39:15.780
啥意思

39:15.780 --> 39:16.780
border啥意思

39:16.780 --> 39:19.780
border表示的是边框

39:19.780 --> 39:20.780
box什么意思

39:20.780 --> 39:22.780
盒子边框盒

39:22.780 --> 39:23.780
啥意思

39:23.780 --> 39:24.780
再看前面的

39:24.780 --> 39:25.780
box什么意思

39:25.780 --> 39:26.780
盒子 sizing什么意思

39:26.780 --> 39:28.780
尺寸

39:29.780 --> 39:31.780
盒子的尺寸

39:31.780 --> 39:34.780
是包含边框盒在内的

39:34.780 --> 39:36.780
所有一起的尺寸

39:36.780 --> 39:37.780
于是在这种情况下

39:37.780 --> 39:39.780
我们用同样的

39:39.780 --> 39:40.780
其他代码都一样

39:40.780 --> 39:42.780
宽高一百成一百

39:42.780 --> 39:43.780
设置的是什么

39:43.780 --> 39:45.780
设置的不是内容部分

39:45.780 --> 39:47.780
设置的是整个盒子

39:47.780 --> 39:48.780
包含边框

39:48.780 --> 39:49.780
包含pending

39:49.780 --> 39:50.780
包含内容

39:50.780 --> 39:52.780
整个盒子一百成一百

39:52.780 --> 39:54.780
那你给了pending怎么办

39:54.780 --> 39:56.780
把内容往里边挤

39:56.780 --> 39:57.780
懂这意思吗

39:58.780 --> 40:00.780
这样子就可以保证这个盒子

40:00.780 --> 40:02.780
看到的就是一百成一百

40:02.780 --> 40:03.780
它不会变化

40:03.780 --> 40:04.780
听懂了吗

40:04.780 --> 40:05.780
听懂QQ1

40:05.780 --> 40:06.780
这一块呢

40:06.780 --> 40:07.780
其实你们也不用去申究

40:07.780 --> 40:09.780
你把那个写上就完事了

40:09.780 --> 40:10.780
你说写就完事

40:11.780 --> 40:12.780
会被多大事了

40:12.780 --> 40:13.780
又费不了多大事了

40:13.780 --> 40:15.780
写上就完事了

40:15.780 --> 40:16.780
你就不掉头发了

40:16.780 --> 40:17.780
你放心

40:17.780 --> 40:18.780
绝对不掉头发了

40:18.780 --> 40:19.780
当然以后

40:19.780 --> 40:20.780
学到介石掉不了头发了

40:20.780 --> 40:21.780
那也是后发了

40:22.780 --> 40:24.780
其实我们

40:24.780 --> 40:27.780
我们开发说掉头发都是

40:27.780 --> 40:28.780
自嘲的

40:28.780 --> 40:29.780
自嘲的

40:29.780 --> 40:30.780
都是段子

40:30.780 --> 40:31.780
不要当真了

40:31.780 --> 40:32.780
就掉不了头发

40:32.780 --> 40:33.780
跟你的精英有关系

40:33.780 --> 40:34.780
跟那个

40:34.780 --> 40:35.780
就太满

40:35.780 --> 40:37.780
怎么把什么那个

40:37.780 --> 40:38.780
什么坏事

40:38.780 --> 40:40.780
什么锅盾往代码身上甩

40:40.780 --> 40:41.780
也不合适

40:42.780 --> 40:43.780
好了

40:43.780 --> 40:44.780
我就说到这

40:44.780 --> 40:45.780
所以说为什么我这里

40:45.780 --> 40:46.780
要加上这个

40:46.780 --> 40:47.780
选中所有的元素

40:47.780 --> 40:48.780
给他来一个这个

40:48.780 --> 40:49.780
好 接下来

40:49.780 --> 40:51.780
设置A元素的样式

40:51.780 --> 40:52.780
是这样

40:52.780 --> 40:54.780
我们页面上有

40:54.780 --> 40:56.780
比方说我们的页面上写一个A元素

40:58.780 --> 41:01.350
A元素

41:01.350 --> 41:02.350
A元素的有

41:02.350 --> 41:04.350
它有浏览器的默认样式

41:04.350 --> 41:05.350
你看是不是

41:05.350 --> 41:07.350
有一个特殊的颜色

41:07.350 --> 41:09.350
浏览器的默认样式

41:09.350 --> 41:10.350
还有一个什么呢

41:10.350 --> 41:11.350
还有一个就是下滑线

41:11.350 --> 41:12.350
对吧

41:12.350 --> 41:13.350
当然我们平时

41:13.350 --> 41:14.350
上网的过程中会发现

41:14.350 --> 41:16.350
页面上很少很少有A元素

41:16.350 --> 41:17.350
有下滑线的

41:17.350 --> 41:18.350
因此我选中

41:18.350 --> 41:19.350
所有的A元素

41:19.350 --> 41:21.350
先把他的下滑线给他去掉

41:22.350 --> 41:23.350
把下滑线去掉

41:24.350 --> 41:25.350
下滑线没了

41:26.350 --> 41:28.350
然后颜色怎么办呢

41:28.350 --> 41:29.350
颜色

41:29.350 --> 41:31.350
A元素的颜色怎么办

41:32.350 --> 41:33.350
A元素的颜色的文

41:33.350 --> 41:34.350
往往会这样子写

41:35.350 --> 41:36.350
让它继承

41:36.350 --> 41:37.350
负元素的颜色

41:37.350 --> 41:38.350
这句话的意思是

41:39.350 --> 41:40.350
继承

41:40.350 --> 41:42.350
负元素的颜色

41:43.350 --> 41:44.350
那么这里为什么要这样子写

41:45.350 --> 41:46.350
为啥

41:46.350 --> 41:47.350
其他元素不这样写

41:47.350 --> 41:48.350
A元素要这样子写

41:48.350 --> 41:49.350
A元素不是本身

41:49.350 --> 41:50.350
颜色不是本身

41:50.350 --> 41:51.350
就有继承吗

41:51.350 --> 41:52.350
这一步我不再展开

41:52.350 --> 41:53.350
因为这个展开了

41:53.350 --> 41:55.350
不是一两句话说得完的

41:56.350 --> 41:57.350
如果说你看过我的

41:57.350 --> 41:58.350
那个Atmos

41:58.350 --> 41:59.350
也是有意结课

41:59.350 --> 42:00.350
我在讲这个事情

42:00.350 --> 42:01.350
没看过的话

42:01.350 --> 42:02.350
那么后期课程里面

42:02.350 --> 42:03.350
也会有专门意结课

42:03.350 --> 42:04.350
来讲这个事情

42:04.350 --> 42:06.350
叫属性值的计算过程

42:06.350 --> 42:07.350
这里没法展开了

42:08.350 --> 42:09.350
总之一把这句话写上

42:09.350 --> 42:10.350
写上的好处有在于

42:10.350 --> 42:11.350
你看我将来

42:11.350 --> 42:12.350
可以给他的负元素

42:12.350 --> 42:13.350
设置颜色

42:13.350 --> 42:14.350
你看我不用直接

42:14.350 --> 42:15.350
给A元素设置

42:15.350 --> 42:16.350
给负元素Body

42:16.350 --> 42:18.350
设置一个颜色为红色

42:18.350 --> 42:19.350
A元素变红色了

42:19.350 --> 42:20.350
所以跟其他元素

42:20.350 --> 42:21.350
就一样了

42:22.350 --> 42:23.350
其他元素都会

42:23.350 --> 42:24.350
继承负元素的颜色

42:24.350 --> 42:25.350
但是A元素

42:25.350 --> 42:27.350
看上去好像有点特殊

42:27.350 --> 42:29.350
比方说你没有这句话

42:29.350 --> 42:30.350
你看没有这句话

42:30.350 --> 42:31.350
我给负元素设置

42:31.350 --> 42:32.350
红色就没用

42:32.350 --> 42:33.350
你看我把A元素

42:33.350 --> 42:34.350
这句话去掉了

42:35.350 --> 42:36.350
那我给负元素设置

42:36.350 --> 42:37.350
红色就没用

42:37.350 --> 42:39.350
A元素没有受到影响

42:39.350 --> 42:41.350
A元素好像有点特殊

42:41.350 --> 42:42.350
其实它不是特殊

42:42.350 --> 42:43.350
只需要一块知识

42:44.350 --> 42:45.350
我们现在把它写上

42:45.350 --> 42:46.350
基本上以后

42:46.350 --> 42:47.350
你们做网页开发

42:48.350 --> 42:50.350
基本上都固定代吧

42:50.350 --> 42:53.660
基本上是固定代

42:53.660 --> 42:54.660
好了

42:54.660 --> 42:55.660
然后第三步

42:55.660 --> 42:58.660
设置页面整体文字颜色

42:59.660 --> 43:01.660
就是给页面的整个页面

43:01.660 --> 43:03.660
设置一个文字颜色

43:03.660 --> 43:05.660
当然我们整个页面的文字颜色

43:05.660 --> 43:07.660
可能也有很多变化了

43:07.660 --> 43:09.660
你看这里的文字颜色

43:09.660 --> 43:12.660
和目前选中的文字颜色

43:12.660 --> 43:13.660
都不一样

43:13.660 --> 43:15.660
比方时间的文字颜色

43:15.660 --> 43:17.660
包括这里的文字颜色

43:17.660 --> 43:19.660
那么为什么我们要统一设置呢

43:20.660 --> 43:23.660
其实上网的过程中你会发现

43:23.660 --> 43:25.660
哪一个网站

43:25.660 --> 43:27.660
所有的文字颜色都是一样的

43:27.660 --> 43:28.660
没有吧

43:28.660 --> 43:29.660
它总会有区别

43:29.660 --> 43:31.660
但是大体上是一样的

43:31.660 --> 43:32.660
有特殊的地方

43:32.660 --> 43:34.660
让我们再特殊设置

43:34.660 --> 43:35.660
就完事了

43:35.660 --> 43:37.660
我们现在整体上设置一个

43:37.660 --> 43:38.660
那么这个颜色

43:38.660 --> 43:39.660
设置的是什么呢

43:40.660 --> 43:44.660
是一个透明度为0.7的白色

43:44.660 --> 43:45.660
什么叫透明度

43:46.660 --> 43:47.660
什么叫透明度

43:48.660 --> 43:50.660
这里我给大家

43:50.660 --> 43:52.660
演示一下吧

43:54.660 --> 43:55.660
我见个页面

43:55.660 --> 43:56.660
来演示一下

43:56.660 --> 44:02.730
因为有些同学可能不知道

44:02.730 --> 44:03.730
我这时候的透明度

44:03.730 --> 44:05.730
还不是那个

44:05.730 --> 44:06.730
Opacity

44:06.730 --> 44:08.730
还不是Opacity

44:09.730 --> 44:10.730
我在找张图

44:10.730 --> 44:12.730
或者在这里随便找张图片

44:12.730 --> 44:13.730
我不是有个成哥吗

44:13.730 --> 44:15.730
对吧 我就把成哥当背景了

44:15.730 --> 44:16.730
我在这里

44:16.730 --> 44:18.730
给body说一张背景

44:19.730 --> 44:20.730
Beground

44:21.730 --> 44:22.730
UIL

44:24.730 --> 44:25.730
R6

44:25.730 --> 44:28.730
有一个成哥的图片

44:29.730 --> 44:30.730
看一下吧

44:31.730 --> 44:33.730
有点大

44:34.730 --> 44:36.730
我给它设置一个尺寸吧

44:36.730 --> 44:38.730
Beground size

44:38.730 --> 44:39.730
100%

44:43.260 --> 44:45.260
这也太大了吧

44:47.260 --> 44:48.260
50%

44:48.260 --> 44:51.700
行了 就这样吧

44:52.700 --> 44:54.700
这里有一张图片

44:54.700 --> 44:55.700
那图片不是重点

44:55.700 --> 44:57.700
我主要是为了有图片

44:57.700 --> 44:59.700
方便演示透明度

44:59.700 --> 45:01.700
比方说我现在有一个文字

45:01.700 --> 45:02.700
成哥

45:02.700 --> 45:03.700
两个字

45:05.700 --> 45:09.700
我现在给它设置一个文字大小

45:09.700 --> 45:11.700
看它清楚一点

45:11.700 --> 45:13.700
放大3倍

45:13.700 --> 45:15.700
看到没 这两个字

45:15.700 --> 45:17.700
目前就是不透明的

45:17.700 --> 45:19.700
看到没 是不是不透明的

45:19.700 --> 45:21.700
在两个字出现的地方

45:21.700 --> 45:23.700
是遮住了后边的背景

45:23.700 --> 45:24.700
它不透明的

45:24.700 --> 45:25.700
能不能改呢

45:25.700 --> 45:27.700
实际上是可以改的

45:27.700 --> 45:30.700
可以改某一个颜色的透明度

45:30.700 --> 45:31.700
比方说我在这里

45:31.700 --> 45:32.700
设置一个文字颜色

45:32.700 --> 45:33.700
比方说我设置为

45:33.700 --> 45:36.700
RGB白色

45:36.700 --> 45:37.700
白色是什么

45:37.700 --> 45:38.700
255

45:38.700 --> 45:39.700
255

45:39.700 --> 45:40.700
255

45:40.700 --> 45:41.700
这边是白色

45:42.700 --> 45:44.700
它真的是把后边的覆盖掉了

45:44.700 --> 45:46.700
怎么来进行透明呢

45:46.700 --> 45:48.700
所有需要颜色的地方

45:48.700 --> 45:49.700
都可以设置透明度

45:49.700 --> 45:52.700
表示这个颜色本身就是透明的

45:52.700 --> 45:53.700
那么怎么写呢

45:53.700 --> 45:55.700
就是RGBA

45:55.700 --> 45:57.700
RGB我们不用解释了

45:57.700 --> 45:58.700
红绿蓝

45:58.700 --> 45:59.700
那A是什么呢

45:59.700 --> 46:01.700
叫Alpha通道

46:01.700 --> 46:03.700
这个Alpha通道就是透明度的意思

46:03.700 --> 46:05.700
0表示完全透明

46:05.700 --> 46:06.700
就看不见了

46:06.700 --> 46:08.700
1表示完全不透明

46:08.700 --> 46:10.700
那中间可以有很多纸

46:10.700 --> 46:13.700
比方说0.9

46:13.700 --> 46:15.700
你看是不是

46:15.700 --> 46:17.700
能看到一个文字慢慢变透明吗

46:17.700 --> 46:18.700
看到没

46:18.700 --> 46:20.700
慢慢变透明

46:21.700 --> 46:23.700
所以有这个意思

46:23.700 --> 46:26.700
这就是透明度的意思

46:26.700 --> 46:27.700
我们这里

46:27.700 --> 46:30.700
要设置的就是透明度为

46:30.700 --> 46:33.700
0.7的

46:33.700 --> 46:35.700
白色

46:35.700 --> 46:36.700
其实我这里顺便说一下

46:36.700 --> 46:39.700
在我们很多现代的网页上

46:39.700 --> 46:41.700
这是一个非常常见的做法了

46:41.700 --> 46:43.700
已经是一个非常常见的做法了

46:43.700 --> 46:45.700
就是我们不具具体的

46:45.700 --> 46:47.700
设置文字的颜色

46:47.700 --> 46:48.700
要么就是白色

46:48.700 --> 46:49.700
要么就是黑色

46:49.700 --> 46:51.700
我就通过透明度来

46:51.700 --> 46:52.700
设置文字的颜色

46:52.700 --> 46:54.700
这样子的文字可以在

46:54.700 --> 46:56.700
页面上展现一个非常好的效果

46:56.700 --> 47:00.700
它可以在不同的背景下边

47:00.700 --> 47:02.700
都可以得到非常好的

47:02.700 --> 47:03.700
显示效果

47:03.700 --> 47:04.700
这是一个

47:04.700 --> 47:05.700
现在一些常见的

47:05.700 --> 47:06.700
设计上的做法

47:06.700 --> 47:07.700
当然你们是前端

47:07.700 --> 47:08.700
你们也不用太过于

47:08.700 --> 47:09.700
care这件事

47:09.700 --> 47:11.700
你把这些设计师

47:11.700 --> 47:13.700
要考虑的事情

47:13.700 --> 47:15.700
好了 这就是设置完了

47:15.700 --> 47:16.700
好 接下来第四步

47:16.700 --> 47:19.700
完成整体两栏布局

47:19.700 --> 47:23.140
我们现在回到我们的页面了

47:23.140 --> 47:27.150
现在我们页面上啥页没有

47:27.150 --> 47:30.150
我们现在要完成两栏

47:30.150 --> 47:33.590
两栏布局

47:33.590 --> 47:35.590
什么叫两栏布局

47:35.590 --> 47:38.590
看整个页面

47:38.590 --> 47:40.590
我这里好像有这个

47:40.590 --> 47:44.540
我这里

47:44.540 --> 47:46.540
整体布局

47:46.540 --> 47:48.540
整个页面

47:48.540 --> 47:51.540
最小宽度为1200相数

47:51.540 --> 47:54.540
什么叫最小宽度为1200相数

47:54.540 --> 47:56.540
就不能再小了

47:56.540 --> 47:58.540
实际上我们抖音的官网

47:58.540 --> 48:00.540
它还是考虑到了移动端的

48:00.540 --> 48:02.540
就页面缩小之后

48:02.540 --> 48:04.540
它会进行重新排版

48:04.540 --> 48:06.540
这就是预到响应师布局

48:06.540 --> 48:08.540
不过我们现在去讲响应师布局

48:08.540 --> 48:09.540
对很多同学来说

48:09.540 --> 48:11.540
言之过掌

48:11.540 --> 48:13.540
你们还需要学习很多知识才行

48:13.540 --> 48:15.540
我们这里就不去考虑

48:15.540 --> 48:16.540
什么响应师布局了

48:16.540 --> 48:18.540
我们就考虑PC端

48:18.540 --> 48:20.540
在很多的PC端网页上

48:20.540 --> 48:22.540
它有一个最小宽度

48:22.540 --> 48:25.540
就是你的网页不能太小了

48:25.540 --> 48:27.540
你太小我就没法显示了

48:27.540 --> 48:29.540
跟那个设计稿已经

48:29.540 --> 48:32.540
我都不知道拿这个设计稿怎么弄了

48:32.540 --> 48:34.540
设计师也不知道怎么弄了

48:34.540 --> 48:35.540
所以你不能太小

48:35.540 --> 48:36.540
你看这个网页

48:36.540 --> 48:37.540
看着

48:37.540 --> 48:39.540
这是我们最终的效果

48:39.540 --> 48:41.540
里面就按照我的效果来做

48:41.540 --> 48:43.540
这大的时候可以

48:43.540 --> 48:44.540
没问题

48:44.540 --> 48:45.540
再小一点也没问题

48:45.540 --> 48:46.540
我得也能适应

48:46.540 --> 48:47.540
再小一点也能适应

48:47.540 --> 48:49.540
但是你小到一定程度过后

48:49.540 --> 48:50.540
我就不动了

48:50.540 --> 48:52.540
你看我现在就没动了

48:52.540 --> 48:53.540
没法太小了

48:53.540 --> 48:54.540
再小了

48:54.540 --> 48:55.540
这就没法排了

48:55.540 --> 48:56.540
知道吧

48:56.540 --> 48:57.540
那么这里我们

48:57.540 --> 48:59.540
所以说我们在PC端的网页上

48:59.540 --> 49:00.540
很多时候

49:00.540 --> 49:03.540
它都会设置一个最小宽度

49:03.540 --> 49:04.540
表示你不能再小了

49:04.540 --> 49:06.540
往往这个最小宽度是什么呢

49:06.540 --> 49:07.540
往往就是设计师

49:07.540 --> 49:09.540
给你的设计稿的宽度

49:09.540 --> 49:11.540
设计师给你设计稿

49:11.540 --> 49:12.540
1200相处

49:12.540 --> 49:14.540
那你的最小宽度就是1200

49:14.540 --> 49:15.540
再一点可以

49:15.540 --> 49:16.540
我整体放大嘛

49:16.540 --> 49:18.540
你小了我就没法弄了

49:18.540 --> 49:19.540
因为我设计稿就那么宽

49:19.540 --> 49:22.540
所以说这个最小宽度怎么弄呢

49:22.540 --> 49:24.540
我们往往

49:24.540 --> 49:26.540
给这个

49:26.540 --> 49:27.540
可以给body

49:27.540 --> 49:28.540
可以给别的都小

49:28.540 --> 49:29.540
都小

49:29.540 --> 49:31.540
比方给body吧

49:31.540 --> 49:34.540
给body设置一个min位置

49:34.540 --> 49:36.540
最小宽度1200相处

49:36.540 --> 49:37.540
好

49:37.540 --> 49:38.540
咱们来试一下

49:38.540 --> 49:40.540
给它设置的min位置之后

49:40.540 --> 49:42.540
最小宽度1200相处之后

49:46.460 --> 49:47.460
放心

49:47.460 --> 49:49.460
你看body目前的宽度是多少

49:49.460 --> 49:51.460
宽度是1532

49:51.460 --> 49:53.460
那么接下来慢慢变小

49:54.460 --> 49:56.460
好像目前没有发生什么变化

49:56.460 --> 49:57.460
没有发生什么异常

49:57.460 --> 49:58.460
你看

49:58.460 --> 49:59.460
到了一个点之后

49:59.460 --> 50:01.460
小渝到1200之后你看

50:01.460 --> 50:02.460
现在说小渝1200了

50:02.460 --> 50:03.460
看一个这里

50:04.460 --> 50:05.460
是不是小渝1200了

50:05.460 --> 50:07.460
出现了横向的滚动条

50:09.460 --> 50:11.460
body仍然看一面上

50:11.460 --> 50:13.460
body仍然保持1200的宽度

50:14.460 --> 50:15.460
最小就能到1200

50:15.460 --> 50:16.460
你再不能再小了

50:16.460 --> 50:17.460
再小我就出现滚动条了

50:18.460 --> 50:19.460
就这么个意思

50:19.460 --> 50:20.460
就是最小宽度的意思

50:21.460 --> 50:23.460
在最小宽度的加持上

50:23.460 --> 50:25.460
它就有可能一面说小到一定程度的时候

50:25.460 --> 50:27.460
出现横向滚动条

50:27.460 --> 50:28.460
但是有些一面

50:28.460 --> 50:30.460
我又不希望它出现横向滚动条

50:31.460 --> 50:32.460
比方像像我这

50:32.460 --> 50:34.460
我也没有出现横向滚动条了

50:34.460 --> 50:35.460
没有

50:35.460 --> 50:37.460
因为我不认为

50:37.460 --> 50:39.460
现在还有小于1200

50:39.460 --> 50:41.460
4口的PC端电

50:41.460 --> 50:43.460
因此我就不给它出现横向滚动条

50:43.460 --> 50:44.460
那这又怎么办呢

50:45.460 --> 50:46.460
这又怎么办呢

50:46.460 --> 50:47.460
那我就去设置ATM

50:49.900 --> 50:50.900
你body不是太宽的吗

50:50.900 --> 50:52.900
导致整个网页

50:52.900 --> 50:53.900
出现了横向滚动条

50:53.900 --> 50:54.900
然后我给大家加上一个

50:54.900 --> 50:55.900
overflow height

50:56.900 --> 50:57.900
就避免

50:58.900 --> 50:59.900
出现

51:01.900 --> 51:02.900
滚动条

51:02.900 --> 51:05.720
好 保存一下看一下

51:06.720 --> 51:07.720
现在我们再来看一下

51:07.720 --> 51:11.310
说小

51:12.310 --> 51:13.310
说小

51:13.310 --> 51:14.310
说小

51:14.310 --> 51:15.310
说小

51:16.310 --> 51:17.310
好 你看body

51:18.310 --> 51:19.310
看一下它的核模型吧

51:19.310 --> 51:20.310
看下面

51:21.310 --> 51:22.310
1200

51:22.310 --> 51:23.310
实际上

51:23.310 --> 51:24.310
我们的4口

51:24.310 --> 51:25.310
已经没有那么宽了

51:25.310 --> 51:26.310
你看 目前的

51:26.310 --> 51:27.310
都已经小到这种程度了

51:27.310 --> 51:29.310
但body仍然是1200

51:29.310 --> 51:30.310
它说

51:30.310 --> 51:31.310
body这边都还有 对吧

51:31.310 --> 51:32.310
看不见了

51:32.310 --> 51:33.310
一出隐藏了

51:34.310 --> 51:35.310
我们先把这一块做了

51:36.310 --> 51:37.310
这一块有没有什么问题

51:37.310 --> 51:38.310
没问题吧 QQE

51:41.520 --> 51:42.520
名为只是什么意思

51:42.520 --> 51:43.520
就是最小宽度的意思

51:43.520 --> 51:44.520
就是最小宽度的意思

51:45.520 --> 51:49.860
响应式没有那么简单的

51:49.860 --> 51:50.860
没有那么简单的

51:50.860 --> 51:51.860
它可能涉及到

51:51.860 --> 51:52.860
整个布局的

51:52.860 --> 51:53.860
上面的变化

51:53.860 --> 51:54.860
没有那么简单的

51:54.860 --> 51:55.860
不仅仅是

51:55.860 --> 51:57.860
你这个叫做百分比布局

51:57.860 --> 51:58.860
它还不叫响应式布局

51:58.860 --> 51:59.860
响应式布局

51:59.860 --> 52:00.860
是根据不同的

52:00.860 --> 52:01.860
4口宽度

52:01.860 --> 52:03.860
做不同的布局模型

52:03.860 --> 52:06.300
还不一样的

52:07.300 --> 52:08.300
好 我们先把

52:08.300 --> 52:09.300
这个事情搞定了

52:09.300 --> 52:10.300
那咱现在说

52:10.300 --> 52:11.300
现在终于可以做

52:11.300 --> 52:12.300
两栏布局了

52:12.300 --> 52:13.300
好 我们来看一下

52:13.300 --> 52:14.300
两栏布局

52:14.300 --> 52:16.300
整个宽度是

52:16.300 --> 52:17.300
1200个

52:19.300 --> 52:21.610
像素

52:21.610 --> 52:22.610
然后呢

52:24.610 --> 52:25.610
我们左边

52:25.610 --> 52:27.610
是一个定宽的

52:27.610 --> 52:28.610
172

52:29.610 --> 52:30.610
右边呢

52:31.610 --> 52:33.610
是要充满剩余空间

52:34.610 --> 52:35.610
是要做这么一件事

52:35.610 --> 52:37.610
背景我都给你写好了

52:37.610 --> 52:38.610
就是我现在

52:38.610 --> 52:39.610
要做这么一件事

52:39.610 --> 52:40.610
整个的宽度

52:40.610 --> 52:41.610
最小宽度1200

52:41.610 --> 52:42.610
但是有没有可能

52:42.610 --> 52:43.610
超过1200

52:43.610 --> 52:44.610
完全有可能

52:44.610 --> 52:45.610
完全有可能超过1200

52:46.610 --> 52:47.610
等一下我这里

52:47.610 --> 52:48.610
设置一下宽级件

52:50.610 --> 52:51.610
铁图

52:51.610 --> 52:54.240
怎么铁图的

52:59.880 --> 53:00.880
我整个的宽度

53:00.880 --> 53:01.880
是1200

53:02.880 --> 53:03.880
里边呢

53:03.880 --> 53:04.880
就这一部分

53:04.880 --> 53:05.880
它有可能会超过1200

53:05.880 --> 53:06.880
但是不管

53:06.880 --> 53:07.880
左边

53:07.880 --> 53:09.880
一定是172的宽度

53:09.880 --> 53:10.880
右边

53:10.880 --> 53:11.880
反正右边

53:11.880 --> 53:12.880
还剩多少的就充满

53:13.880 --> 53:14.880
首先我们来写

53:14.880 --> 53:15.880
这个元素结构

53:15.880 --> 53:16.880
对元素结构

53:16.880 --> 53:17.880
很容易写

53:18.880 --> 53:19.880
就一个DIV

53:20.880 --> 53:21.880
一个DIV

53:21.880 --> 53:22.880
然后呢

53:22.880 --> 53:23.880
给它一个内央式吧

53:23.880 --> 53:25.880
容器

53:25.880 --> 53:27.880
里边分为左右两个部分

53:27.880 --> 53:28.880
对吧

53:28.880 --> 53:29.880
左边是什么呢

53:29.880 --> 53:31.880
左边是DIV

53:33.880 --> 53:34.880
给它取个名字

53:34.880 --> 53:35.880
叫側边蓝

53:35.880 --> 53:36.880
orside

53:37.880 --> 53:38.880
側边蓝

53:38.880 --> 53:39.880
右边那个呢

53:39.880 --> 53:40.880
叫妹

53:40.880 --> 53:41.880
主区

53:41.880 --> 53:42.880
打个注释

53:43.880 --> 53:45.880
这是側边蓝

53:46.880 --> 53:48.880
这是主区

53:48.880 --> 53:50.880
主区

53:51.880 --> 53:53.880
就写成了这么一个结构

53:53.880 --> 53:55.880
好 接下来我们来玩这个事情

53:55.880 --> 53:56.880
怎么来布局

53:56.880 --> 53:57.880
不成这个样子呢

53:58.880 --> 53:59.880
怎么来布局

53:59.880 --> 54:00.880
不成这个样子

54:01.880 --> 54:02.880
我首先要做到

54:02.880 --> 54:03.880
第一件事

54:03.880 --> 54:04.880
是不是让那个

54:04.880 --> 54:05.880
康天那儿

54:05.880 --> 54:09.880
要充满整个容器啊

54:09.880 --> 54:11.880
是不是要做这么一件事

54:11.880 --> 54:12.880
我要让那个

54:12.880 --> 54:13.880
康天那儿

54:13.880 --> 54:14.880
充满整个容器

54:15.880 --> 54:17.880
我怎么来写呢

54:17.880 --> 54:18.880
首先是康天那儿

54:18.880 --> 54:19.880
选动它

54:20.880 --> 54:21.880
怎么让它充满整个容器

54:21.880 --> 54:22.880
宽度很简单

54:22.880 --> 54:24.880
宽度就是一个百分之百

54:24.880 --> 54:26.880
是不是就充满了

54:26.880 --> 54:28.880
充满了这个保底了

54:28.880 --> 54:29.880
好 我们来试一下

54:29.880 --> 54:31.880
看一下宽度行不行

54:31.880 --> 54:34.190
照这个保底

54:35.190 --> 54:36.190
看一下目前的宽度

54:36.190 --> 54:38.190
保底的宽度多少呢

54:38.190 --> 54:39.190
1536

54:39.190 --> 54:41.190
它的DIV充满了1536

54:41.190 --> 54:42.190
没问题

54:42.190 --> 54:48.060
我们来说小一点

54:48.060 --> 54:49.060
你看

54:49.060 --> 54:50.060
保底目前的宽度

54:50.060 --> 54:51.060
现在的石口已经很小了

54:51.060 --> 54:52.060
对吧

54:52.060 --> 54:53.060
保底目前的宽度

54:53.060 --> 54:54.060
1200嘛

54:54.060 --> 54:55.060
那么这个DIV最小宽度

54:55.060 --> 54:56.060
也是1200

54:56.060 --> 54:57.060
没问题吧

54:57.060 --> 54:58.060
没问题

54:58.060 --> 55:00.060
宽度这一块没问题

55:00.060 --> 55:02.060
那现在高度怎么办呢

55:02.060 --> 55:03.060
高度

55:03.060 --> 55:05.060
高度怎么办

55:05.060 --> 55:07.060
高度我要充满什么

55:07.060 --> 55:09.060
充满整个石口

55:09.060 --> 55:11.060
就是这个窗口有多大

55:11.060 --> 55:12.060
这个窗口有多高

55:12.060 --> 55:13.060
我就多高

55:13.060 --> 55:14.060
那我怎么知道

55:14.060 --> 55:16.060
窗口有多高呢

55:16.060 --> 55:18.060
这里设立到一个新的指示

55:18.060 --> 55:19.060
叫做石口单位

55:19.060 --> 55:20.060
很简单

55:20.060 --> 55:22.060
非常非常简单

55:23.060 --> 55:24.060
卸这三支尺

55:24.060 --> 55:27.060
用VW和VH作为单位

55:27.060 --> 55:28.060
分别表示

55:28.060 --> 55:30.060
石口宽度和石口高度

55:30.060 --> 55:31.060
石口是什么

55:31.060 --> 55:32.060
石口就是你

55:32.060 --> 55:33.060
你这个可以看得见的窗口

55:33.060 --> 55:34.060
就这个窗口

55:34.060 --> 55:35.060
可以看得见的

55:35.060 --> 55:38.270
比方说

55:38.270 --> 55:40.270
11VH表示

55:40.270 --> 55:42.270
石口高度的1%

55:42.270 --> 55:45.270
100VW表示的是

55:45.270 --> 55:47.270
石口宽度的100%

55:47.270 --> 55:49.270
那我现在要充满

55:49.270 --> 55:51.270
整个石口高度

55:51.270 --> 55:53.270
怎么办

55:53.270 --> 55:55.270
是不是设置了100VH

55:55.270 --> 55:57.270
V是什么意思

55:57.270 --> 55:59.270
VH是什么意思

55:59.270 --> 56:01.270
Wheel port

56:01.270 --> 56:03.270
石口Height高度

56:03.270 --> 56:05.270
VH

56:05.270 --> 56:06.270
石口高度

56:06.270 --> 56:07.270
100%的石口高度

56:07.270 --> 56:09.270
你这个窗口有多高

56:09.270 --> 56:10.270
我就跟着有多高

56:10.270 --> 56:11.270
就这么简单

56:11.270 --> 56:12.270
比方说

56:12.270 --> 56:13.270
我现在给他一个背景

56:13.270 --> 56:14.270
是红色

56:14.270 --> 56:15.270
你看一下

56:15.270 --> 56:16.270
整个屏幕都红了

56:16.270 --> 56:18.270
你看一下这个DIV

56:18.270 --> 56:19.270
高度有多少

56:19.270 --> 56:21.270
346.4

56:21.270 --> 56:22.270
看那个页面上

56:22.270 --> 56:23.270
然后我把石口

56:23.270 --> 56:25.270
稍微给他调整一下

56:25.270 --> 56:26.270
你看

56:26.270 --> 56:27.270
石口变高了

56:27.270 --> 56:29.270
还变成424

56:29.270 --> 56:30.270
对吧

56:30.270 --> 56:32.270
就是个可视窗口

56:32.270 --> 56:33.270
懂了意思吧

56:33.270 --> 56:34.270
那么现在

56:34.270 --> 56:35.270
我就是要

56:35.270 --> 56:36.270
让这个container

56:36.270 --> 56:37.270
刚好把整个页面

56:37.270 --> 56:38.270
全部充满

56:38.270 --> 56:40.270
就要这么接受

56:40.270 --> 56:41.270
好

56:41.270 --> 56:42.270
那么接下来

56:42.270 --> 56:43.270
又是他里边的

56:43.270 --> 56:44.270
他里边不是分成

56:44.270 --> 56:45.270
左右两个部分吗

56:45.270 --> 56:47.270
我们把这一块讲完了

56:47.270 --> 56:48.270
可以回答

56:48.270 --> 56:49.270
跟同学们互动

56:50.270 --> 56:51.270
不是分为

56:51.270 --> 56:52.270
左右两个部分吗

56:52.270 --> 56:53.270
现在来吧

56:53.270 --> 56:55.270
背景颜色去了

56:55.270 --> 56:56.270
左边是什么

56:56.270 --> 56:57.270
而side

56:57.270 --> 56:59.270
定宽有一个背景颜色

56:59.270 --> 57:00.270
右边是什么呢

57:00.270 --> 57:01.270
右边

57:01.270 --> 57:02.270
我们先把背景颜色写了

57:02.270 --> 57:03.270
背景比较简单

57:03.270 --> 57:04.270
而side

57:05.270 --> 57:06.270
这个背景颜色

57:06.270 --> 57:09.270
是060716

57:10.270 --> 57:12.270
然后这个main

57:12.270 --> 57:13.270
这个是背景颜色

57:13.270 --> 57:15.270
是161722

57:16.270 --> 57:17.270
先把这个玩意写了

57:17.270 --> 57:18.270
看上去都差不多

57:18.270 --> 57:19.270
其实是有区别的

57:19.270 --> 57:20.270
这两个是有区别的

57:22.270 --> 57:23.270
那怎么弄呢

57:24.270 --> 57:25.270
你定宽

57:25.270 --> 57:26.270
首先

57:26.270 --> 57:28.270
你们怎么来横向排列

57:29.270 --> 57:30.270
那么现在

57:30.270 --> 57:32.270
我们学过了弹性合

57:33.270 --> 57:34.270
就不需要再用幅动了

57:34.270 --> 57:35.270
我看一下同学们

57:35.270 --> 57:36.270
会怎么弄

57:38.270 --> 57:39.270
VH就是这个

57:39.270 --> 57:41.270
他就是四口宽度的百分比

57:42.270 --> 57:43.270
你就知道这个100VH

57:43.270 --> 57:45.270
就是百分之百的四口高度

57:46.270 --> 57:47.270
50VH就是

57:47.270 --> 57:48.270
百分之50的四口高度

57:48.270 --> 57:49.270
就是这个意思

57:54.270 --> 57:56.270
你是说跟他有什么区别是吧

57:57.270 --> 57:58.270
百分比呢

57:59.270 --> 58:00.270
你要看用到什么地方

58:00.270 --> 58:01.270
比较容易宽高的时候

58:01.270 --> 58:02.270
用百分比的时候

58:02.270 --> 58:03.270
大部分时候

58:03.270 --> 58:05.270
都是随着负元素来变动的

58:06.270 --> 58:07.270
对不对

58:07.270 --> 58:08.270
随着负元素的高度来变动的

58:08.270 --> 58:10.270
负元素的宽度来变动的

58:10.270 --> 58:12.270
而用VH呢

58:12.270 --> 58:13.270
是随着四口的宽度

58:13.270 --> 58:14.270
高度来变动的

58:15.270 --> 58:16.270
为什么我这里高度

58:16.270 --> 58:17.270
没有用百分比呢

58:17.270 --> 58:19.270
因为负元素是没有高度的

58:20.270 --> 58:21.270
你不信你看一下

58:21.270 --> 58:23.270
我这个负元素不写高度

58:23.270 --> 58:25.270
你看这个包里的高度是多少

58:25.270 --> 58:27.270
包里的高度是多少

58:27.270 --> 58:29.270
包里的高度是零

58:29.270 --> 58:30.270
为什么是零

58:30.270 --> 58:31.270
因为它里边没东西

58:32.270 --> 58:34.270
但包里的高度是零

58:34.270 --> 58:36.270
你再给它DIV去设置一个

58:36.270 --> 58:37.270
高度百分之百

58:40.160 --> 58:41.160
有用吗

58:41.160 --> 58:42.160
没用

58:42.160 --> 58:43.160
它负元素高度是零

58:43.160 --> 58:44.160
你百分之百

58:44.160 --> 58:46.160
负元素高度你还不是零

58:46.160 --> 58:48.160
所以说你这里不行的

58:49.160 --> 58:50.160
就这么一个情况

58:52.160 --> 58:54.160
没有VH之前用什么充满高度

58:54.160 --> 58:55.160
还有办法

58:55.160 --> 58:57.160
你可以自己去想一想

58:58.160 --> 58:59.160
我可以给你提个想

58:59.160 --> 59:00.160
你只要想办法

59:00.160 --> 59:01.160
把这个body

59:02.160 --> 59:04.160
高度给它充满整个屏幕就行了

59:05.160 --> 59:07.160
或者你把它进行固定定位

59:08.160 --> 59:09.160
固定定位过后

59:09.160 --> 59:10.160
它是不是相对于四口

59:10.160 --> 59:11.160
相对于四口之后

59:11.160 --> 59:13.160
你的高度就可以设置百分之百了

59:14.160 --> 59:16.160
而且你们就自己想办法

59:16.160 --> 59:17.160
仍然是可以的

59:20.160 --> 59:22.160
没有现在那么简单了对不对

59:23.160 --> 59:24.160
好

59:24.160 --> 59:25.160
现在就说回来

59:25.160 --> 59:26.160
那么这个布局

59:26.160 --> 59:27.160
其实同学们想一想

59:27.160 --> 59:28.160
用弹性盒

59:31.160 --> 59:33.160
反正为什么不设置高度百分之百

59:33.160 --> 59:35.160
我刚才不是才演示的吗同学

59:35.160 --> 59:36.160
我刚刚才演示的

59:36.160 --> 59:37.160
我再重复了

59:39.160 --> 59:40.160
这里为什么

59:40.160 --> 59:42.160
这里我们应该是用弹性盒

59:42.160 --> 59:43.160
来完成这件事

59:43.160 --> 59:44.160
我们来想一想

59:44.160 --> 59:46.160
弹性盒为什么就可以完成这件事呢

59:46.160 --> 59:47.160
首先红相排列

59:48.160 --> 59:49.160
弹性盒不是有两个方向吗

59:49.160 --> 59:51.160
一个组轴从左到右

59:51.160 --> 59:52.160
它本身就是红相排列的

59:53.160 --> 59:54.160
红相排列很好解决

59:55.160 --> 59:56.160
撤走拉伸

59:56.160 --> 59:58.160
弹性盒本来就是撤走拉伸了

59:58.160 --> 01:00:00.160
撤走拉伸也非常好解决

01:00:01.160 --> 01:00:03.160
那怎么来搞定定宽

01:00:03.160 --> 01:00:04.160
定宽很简单

01:00:04.160 --> 01:00:06.160
你把宽度固定就行了

01:00:07.160 --> 01:00:09.160
怎么来搞定充满顺域空间呢

01:00:09.160 --> 01:00:10.160
让它拉伸

01:00:10.160 --> 01:00:11.160
撕掉顺域空间

01:00:13.160 --> 01:00:14.160
是不是完事了

01:00:14.160 --> 01:00:16.160
说这个地方用弹性盒

01:00:16.160 --> 01:00:17.160
是特别好解决这个问题的

01:00:18.160 --> 01:00:19.160
于是呢

01:00:19.160 --> 01:00:20.160
我们就来弄

01:00:20.160 --> 01:00:21.160
弹性盒怎么弄

01:00:21.160 --> 01:00:22.160
把复元素

01:00:23.160 --> 01:00:27.140
把它的复元素

01:00:29.140 --> 01:00:30.140
把它的复元素

01:00:30.140 --> 01:00:32.140
把它变成弹性盒

01:00:32.140 --> 01:00:33.140
对吧

01:00:33.140 --> 01:00:34.140
Display

01:00:36.140 --> 01:00:37.140
变弹性盒

01:00:38.140 --> 01:00:41.140
然后指元素自动成为弹性项目

01:00:41.140 --> 01:00:43.140
给它定一个宽度

01:00:43.140 --> 01:00:44.140
宽度为172

01:00:47.220 --> 01:00:48.220
然后它呢

01:00:48.220 --> 01:00:50.220
我不知道你的宽度是多少

01:00:50.220 --> 01:00:51.220
我不知道

01:00:51.220 --> 01:00:53.220
你就把顺域空间充满就行了

01:00:54.220 --> 01:00:55.220
你可以拉伸

01:00:55.220 --> 01:00:56.220
不压缩

01:00:56.220 --> 01:00:57.220
这里也不需要理压缩

01:00:57.220 --> 01:00:59.220
宽度是足够的

01:00:59.220 --> 01:01:00.220
就够了

01:01:01.220 --> 01:01:02.220
好 这么来看一下

01:01:02.220 --> 01:01:04.220
瞬间完成两栏布局

01:01:04.220 --> 01:01:06.220
以前要做这个两栏布局

01:01:07.220 --> 01:01:08.220
也不说不能做

01:01:08.220 --> 01:01:09.220
肯定是能做的

01:01:09.220 --> 01:01:11.220
有点麻烦

01:01:12.220 --> 01:01:14.220
现在做这个两栏布局

01:01:14.220 --> 01:01:15.220
特别轻松

01:01:15.220 --> 01:01:17.220
这几行代码就搞定了

01:01:17.220 --> 01:01:19.220
弹性盒有很多这样的用处

01:01:20.220 --> 01:01:22.220
后续还会看到很多

01:01:23.220 --> 01:01:25.220
好了 这个两栏布局就做完了

01:01:25.220 --> 01:01:27.220
目前我们就推进到这了

01:01:27.220 --> 01:01:29.220
整体布局就完成了

01:01:29.220 --> 01:01:31.220
看一下这一块来回答

01:01:31.220 --> 01:01:32.220
同学们的问题

01:01:35.360 --> 01:01:37.360
为什么高度一定要和视口一样高

01:01:37.360 --> 01:01:39.360
为什么不定一个具体的高度

01:01:39.360 --> 01:01:40.360
那好

01:01:40.360 --> 01:01:41.360
如果说我要定一个具体的高度

01:01:41.360 --> 01:01:43.360
请问你定多少

01:01:43.360 --> 01:01:45.360
来吧 你定多少

01:01:46.360 --> 01:01:48.360
我现在给你定多少

01:01:49.360 --> 01:01:51.360
你定多少都不合适

01:01:51.360 --> 01:01:53.360
你定多少 你就说你定多少

01:01:55.360 --> 01:01:56.360
你没法写这个高度

01:01:56.360 --> 01:01:57.360
你没法写

01:01:57.360 --> 01:01:59.360
你不要让你定个1000个像素

01:01:59.360 --> 01:02:00.360
那有些屏幕比较高

01:02:00.360 --> 01:02:01.360
那超过1000个像素

01:02:01.360 --> 01:02:02.360
那下面是什么

01:02:02.360 --> 01:02:03.360
下面是白的

01:02:04.360 --> 01:02:05.360
对吧 你定少了

01:02:05.360 --> 01:02:06.360
那也不行

01:02:06.360 --> 01:02:08.360
你定多 再高一点

01:02:08.360 --> 01:02:09.360
再2000个像素

01:02:09.360 --> 01:02:10.360
那就没必要了

01:02:10.360 --> 01:02:11.360
定那么高干嘛

01:02:11.360 --> 01:02:12.360
我的内容都没用那么高

01:02:14.360 --> 01:02:15.360
没法定了

01:02:15.360 --> 01:02:16.360
就是你想要定具体高度

01:02:16.360 --> 01:02:18.360
那你定多少呢

01:02:21.310 --> 01:02:23.310
Flex不是固定定位的值吗

01:02:23.310 --> 01:02:24.310
你可能当时记错了

01:02:24.310 --> 01:02:26.310
那个叫做Fegust

01:02:30.310 --> 01:02:32.310
Flex是弹性合的意思

01:02:32.310 --> 01:02:34.310
Fegust是固定的意思

01:02:39.440 --> 01:02:40.440
不好

01:02:41.440 --> 01:02:42.440
不好

01:02:42.440 --> 01:02:43.440
我知道你可能学过那个

01:02:43.440 --> 01:02:45.440
但是那个首先就是语法错误

01:02:45.440 --> 01:02:47.440
你这样的写法是语法错误

01:02:48.440 --> 01:02:49.440
你要完整的写的话

01:02:49.440 --> 01:02:50.440
应该这样的写

01:02:51.440 --> 01:02:53.440
还要给空格的

01:02:53.440 --> 01:02:55.440
但是即便这样的写也不行

01:02:55.440 --> 01:02:56.440
有些朋友不知道

01:02:56.440 --> 01:02:57.440
他在问什么

01:02:57.440 --> 01:02:58.440
他在问那个

01:02:58.440 --> 01:03:00.440
我们后边要接触的一个叫做

01:03:00.440 --> 01:03:01.440
计算俗销

01:03:02.440 --> 01:03:03.440
也不行

01:03:03.440 --> 01:03:04.440
为什么呢

01:03:05.440 --> 01:03:06.440
什么叫剩余空间

01:03:06.440 --> 01:03:07.440
同学

01:03:08.440 --> 01:03:10.440
我这个DIV

01:03:10.440 --> 01:03:11.440
它的复原数

01:03:11.440 --> 01:03:13.440
它的宽度可不是

01:03:13.440 --> 01:03:14.440
诗口宽度

01:03:15.440 --> 01:03:17.440
它的宽度有可能超过诗口的

01:03:17.440 --> 01:03:18.440
比方说

01:03:19.440 --> 01:03:21.440
到我们的页面很小的时候

01:03:27.850 --> 01:03:29.850
你看现在诗口宽

01:03:29.850 --> 01:03:31.850
诗口连700个像素都不到

01:03:31.850 --> 01:03:32.850
刚刚700个像素

01:03:32.850 --> 01:03:34.850
你看看抗天了多宽

01:03:34.850 --> 01:03:35.850
抗天了

01:03:35.850 --> 01:03:36.850
1200

01:03:36.850 --> 01:03:38.850
如果说你用100VW

01:03:38.850 --> 01:03:40.850
100VW多少

01:03:40.850 --> 01:03:41.850
700个像素

01:03:41.850 --> 01:03:42.850
再减去172

01:03:43.850 --> 01:03:44.850
那剩下的只有这么一点

01:03:45.850 --> 01:03:46.850
但是实际上那个DIV

01:03:46.850 --> 01:03:47.850
还有很宽的

01:03:47.850 --> 01:03:48.850
还有很多的声音空间

01:03:48.850 --> 01:03:50.850
你没有去吃

01:03:50.850 --> 01:03:51.850
懂得意思吧

01:03:51.850 --> 01:03:52.850
你不能这样的写

01:03:52.850 --> 01:03:54.850
你先来好好去琢磨

01:03:54.850 --> 01:03:59.660
刚才说的话

01:03:59.660 --> 01:04:00.660
好了

01:04:01.660 --> 01:04:02.660
好了 那我们继续了

01:04:03.660 --> 01:04:05.660
接下来我们再做那个左侧区域

01:04:05.660 --> 01:04:06.660
之前打算看今天晚上

01:04:06.660 --> 01:04:08.660
能不能把左侧区域做完

01:04:08.660 --> 01:04:10.660
但是我估摸着不翘

01:04:10.660 --> 01:04:11.660
没关系

01:04:11.660 --> 01:04:12.660
反正我们之前时间总归

01:04:12.660 --> 01:04:13.660
把它弄完的

01:04:13.660 --> 01:04:14.660
我们不去

01:04:14.660 --> 01:04:16.660
追求每一天的目标

01:04:16.660 --> 01:04:18.660
我们追求整体目标就行了

01:04:18.660 --> 01:04:20.660
整体目标我们的时间把它完成

01:04:21.660 --> 01:04:22.660
同学们

01:04:22.660 --> 01:04:23.660
这种心态

01:04:23.660 --> 01:04:24.660
也要学得了

01:04:24.660 --> 01:04:25.660
原老师都不着急

01:04:25.660 --> 01:04:26.660
你们着急了

01:04:27.660 --> 01:04:28.660
写作作业

01:04:28.660 --> 01:04:29.660
写东西

01:04:29.660 --> 01:04:30.660
写东西的时候

01:04:30.660 --> 01:04:32.660
不要为了一味的去追求的速度

01:04:32.660 --> 01:04:33.660
你光去追求速度

01:04:33.660 --> 01:04:35.660
不去追求效果

01:04:35.660 --> 01:04:37.660
不把每一行代码理解清楚

01:04:37.660 --> 01:04:38.660
为什么要这样去弄

01:04:38.660 --> 01:04:40.660
那就是学

01:04:40.660 --> 01:04:42.660
训练没多大意义的

01:04:42.660 --> 01:04:43.660
我们要追求的是

01:04:43.660 --> 01:04:44.660
训练的效果

01:04:44.660 --> 01:04:46.660
就好为了说你们去做健身

01:04:46.660 --> 01:04:48.660
教练的会教你们

01:04:48.660 --> 01:04:50.660
如何把动作做标准

01:04:50.660 --> 01:04:51.660
我不追求你一定要做多少个

01:04:51.660 --> 01:04:53.660
不重要

01:04:53.660 --> 01:04:55.660
一定要标准动作下

01:04:55.660 --> 01:04:57.660
做到你最大的努力

01:04:57.660 --> 01:04:59.660
能做多少个

01:04:59.660 --> 01:05:00.660
做多少个

01:05:00.660 --> 01:05:02.660
这才能够有锻炼的效果

01:05:02.660 --> 01:05:04.660
像我们学习随时是一样的

01:05:04.660 --> 01:05:06.660
要有一个正确的方式去学

01:05:06.660 --> 01:05:08.660
一个脚印往前走

01:05:08.660 --> 01:05:10.660
不要去追求速度

01:05:12.660 --> 01:05:13.660
像我们那个二十七七的群里边

01:05:13.660 --> 01:05:15.660
天天有人在那边

01:05:15.660 --> 01:05:16.660
反而晒

01:05:16.660 --> 01:05:18.660
天天里边在那里卷卷卷卷卷

01:05:18.660 --> 01:05:20.660
其实跳来跳去就是那些学得快的

01:05:20.660 --> 01:05:22.660
把那些学得

01:05:22.660 --> 01:05:24.660
就正常进度的人都下得不得了

01:05:25.660 --> 01:05:27.660
反复的天天要给他们做那个

01:05:27.660 --> 01:05:29.660
心理辅导

01:05:29.660 --> 01:05:30.660
不要怕

01:05:30.660 --> 01:05:31.660
不要去追求速度

01:05:31.660 --> 01:05:33.660
一定要追求效果

01:05:33.660 --> 01:05:35.660
好我们开始左侧区域

01:05:35.660 --> 01:05:37.660
左侧区域其实就两部分

01:05:37.660 --> 01:05:39.660
一个是LOGO

01:05:39.660 --> 01:05:41.660
一个是剩下的东西

01:05:41.660 --> 01:05:43.660
剩下的部分

01:05:44.660 --> 01:05:45.660
用两部分

01:05:45.660 --> 01:05:47.660
我们来写呗

01:05:47.660 --> 01:05:48.660
左侧区域

01:05:48.660 --> 01:05:50.660
好接下来我们要开始了

01:05:50.660 --> 01:05:51.660
分化文件了

01:05:51.660 --> 01:05:53.660
你看我现在音这个时候的CSS

01:05:53.660 --> 01:05:55.660
有四五十行了

01:05:55.660 --> 01:05:56.660
这个文件

01:05:56.660 --> 01:05:57.660
我现在订一下

01:05:57.660 --> 01:05:58.660
这个文件的

01:05:58.660 --> 01:06:00.660
只做统一样式

01:06:01.660 --> 01:06:02.660
统一样式

01:06:02.660 --> 01:06:05.660
什么要清除瀏覽性的默认样式

01:06:05.660 --> 01:06:06.660
整体布局

01:06:06.660 --> 01:06:08.660
统一和整体的样式

01:06:08.660 --> 01:06:09.660
只做这些

01:06:09.660 --> 01:06:10.660
其他的样式

01:06:10.660 --> 01:06:11.660
我要写到其他的世界上的文件

01:06:11.660 --> 01:06:12.660
你得去

01:06:13.660 --> 01:06:14.660
为啥这样子的

01:06:14.660 --> 01:06:15.660
方便管理

01:06:15.660 --> 01:06:17.660
不然的话以后一面多了

01:06:17.660 --> 01:06:19.660
全部代码揉到一个文件里边

01:06:20.660 --> 01:06:22.660
茶月也不方便

01:06:22.660 --> 01:06:24.660
这样子我们通过文件来

01:06:24.660 --> 01:06:26.660
稍微的管理一下

01:06:26.660 --> 01:06:27.660
就好比你们在

01:06:27.660 --> 01:06:29.660
用那个Windows电脑的时候

01:06:29.660 --> 01:06:31.660
是不是把不同的东西

01:06:31.660 --> 01:06:32.660
放到文件夹里边

01:06:32.660 --> 01:06:34.660
把一些视频的学习资料

01:06:34.660 --> 01:06:36.660
把它买到一个很深的文件夹里边去了

01:06:36.660 --> 01:06:37.660
对不对

01:06:37.660 --> 01:06:38.660
要分门别类

01:06:38.660 --> 01:06:39.660
就这个意思

01:06:39.660 --> 01:06:41.660
那么现在我们要做一个側边栏

01:06:41.660 --> 01:06:43.660
做側边栏的时候

01:06:43.660 --> 01:06:45.660
我们这里写上一个

01:06:45.660 --> 01:06:46.660
这么一个CSS文件

01:06:46.660 --> 01:06:48.660
去个名字叫做Erside

01:06:48.660 --> 01:06:49.660
叫CSS

01:06:49.660 --> 01:06:51.660
这个文件里面

01:06:51.660 --> 01:06:53.660
来做側边栏的所有东西

01:06:53.660 --> 01:06:55.660
側边栏的所有样式

01:06:55.660 --> 01:06:57.660
都在这里边

01:06:57.660 --> 01:06:58.660
好我们在这里呢

01:06:58.660 --> 01:07:02.480
去引用一下这个CSS

01:07:02.480 --> 01:07:04.480
Erside

01:07:04.480 --> 01:07:07.480
好側边栏有什么东西呢

01:07:07.480 --> 01:07:09.480
目前来看的话

01:07:09.480 --> 01:07:10.480
就两个部分

01:07:10.480 --> 01:07:11.480
一个是logo

01:07:11.480 --> 01:07:12.480
一个是剩下

01:07:12.480 --> 01:07:13.480
下面这一坨

01:07:13.480 --> 01:07:14.480
对吧下面这一坨

01:07:14.480 --> 01:07:15.480
我们一会再说

01:07:15.480 --> 01:07:17.480
我们先把logo搞定

01:07:17.480 --> 01:07:19.480
好为了避免

01:07:19.480 --> 01:07:20.480
因为我们后边会写

01:07:20.480 --> 01:07:21.480
很多的样式

01:07:21.480 --> 01:07:22.480
内样式

01:07:22.480 --> 01:07:23.480
一些很多的标圈

01:07:23.480 --> 01:07:25.480
为了避免内样式冲突

01:07:25.480 --> 01:07:26.480
我这里呢

01:07:26.480 --> 01:07:27.480
自行

01:07:27.480 --> 01:07:29.480
我告诫我自己

01:07:29.480 --> 01:07:31.480
为了避免冲突

01:07:31.480 --> 01:07:33.480
为了

01:07:33.480 --> 01:07:35.480
为了避免内样式

01:07:35.480 --> 01:07:36.480
对吧

01:07:36.480 --> 01:07:37.480
内样

01:07:37.480 --> 01:07:38.480
对吧

01:07:38.480 --> 01:07:39.480
内样式

01:07:39.480 --> 01:07:41.480
名称

01:07:41.480 --> 01:07:42.480
冲突

01:07:42.480 --> 01:07:46.370
所有内样式

01:07:48.370 --> 01:07:50.370
内样式

01:07:50.370 --> 01:07:52.370
加上前随

01:07:52.370 --> 01:07:54.370
Erside

01:07:54.370 --> 01:07:55.370
这样子避免了

01:07:55.370 --> 01:07:56.370
跟后面那个妹

01:07:56.370 --> 01:07:57.370
里面的样式冲突

01:07:57.370 --> 01:07:58.370
加上更前随

01:07:58.370 --> 01:07:59.370
后面一样

01:07:59.370 --> 01:08:00.370
这里边所有的内样式

01:08:00.370 --> 01:08:02.370
加上一个前随妹

01:08:02.370 --> 01:08:03.370
这样子

01:08:03.370 --> 01:08:04.370
这是个命名规范

01:08:04.370 --> 01:08:05.370
不过现在

01:08:05.370 --> 01:08:06.370
目前前端

01:08:06.370 --> 01:08:07.370
命名规范

01:08:07.370 --> 01:08:09.370
内样式的命名规范

01:08:09.370 --> 01:08:11.370
好像也没有那么在意的

01:08:11.370 --> 01:08:12.370
为什么呢

01:08:12.370 --> 01:08:13.370
你们以后学了

01:08:13.370 --> 01:08:14.370
工程化之后

01:08:14.370 --> 01:08:15.370
就会发现

01:08:15.370 --> 01:08:16.370
内样式有了

01:08:16.370 --> 01:08:17.370
工程化的加持

01:08:17.370 --> 01:08:18.370
是不可能冲突的

01:08:18.370 --> 01:08:20.370
不可能冲突的

01:08:20.370 --> 01:08:21.370
那么我们在前期

01:08:21.370 --> 01:08:23.370
还是老实一点

01:08:23.370 --> 01:08:24.370
还是老实一点

01:08:24.370 --> 01:08:25.370
还是乖一点

01:08:25.370 --> 01:08:26.370
我们这里

01:08:26.370 --> 01:08:28.370
就写上那么一个A元数

01:08:28.370 --> 01:08:29.370
因为Local区域

01:08:29.370 --> 01:08:30.370
往往是一个

01:08:30.370 --> 01:08:32.370
往往是一个超链接

01:08:32.370 --> 01:08:34.370
点击过可以跳到首页的

01:08:34.370 --> 01:08:35.370
所以用一个A元数

01:08:35.370 --> 01:08:36.370
A元数里边

01:08:36.370 --> 01:08:38.370
写上一个A起1

01:08:38.370 --> 01:08:39.370
来表示

01:08:39.370 --> 01:08:41.370
整个网页的标题

01:08:41.370 --> 01:08:42.370
叫做抖音

01:08:43.370 --> 01:08:44.370
不得要来个图

01:08:44.370 --> 01:08:46.370
它是个图片

01:08:46.370 --> 01:08:47.370
是

01:08:47.370 --> 01:08:48.370
但是我们几乎

01:08:48.370 --> 01:08:49.370
所有的网页

01:08:49.370 --> 01:08:51.370
都是这么玩的

01:08:51.370 --> 01:08:52.370
就是A元数

01:08:52.370 --> 01:08:53.370
里边A起

01:08:53.370 --> 01:08:54.370
或者是A起里边

01:08:54.370 --> 01:08:55.370
A元数

01:08:55.370 --> 01:08:56.370
反正调一调去

01:08:56.370 --> 01:08:57.370
都是这个意思

01:08:57.370 --> 01:08:58.370
为什么要这样玩呢

01:08:58.370 --> 01:08:59.370
你看完

01:08:59.370 --> 01:09:00.370
诚哥的Atmos

01:09:00.370 --> 01:09:01.370
应该知道

01:09:01.370 --> 01:09:02.370
这是为了

01:09:02.370 --> 01:09:04.370
搜索引擎优化

01:09:04.370 --> 01:09:05.370
就是当我们样式

01:09:05.370 --> 01:09:06.370
失销的时候

01:09:06.370 --> 01:09:07.370
因为搜索引擎

01:09:07.370 --> 01:09:09.370
它是不会看你样式的

01:09:10.370 --> 01:09:12.370
它就看你的网页内容

01:09:12.370 --> 01:09:13.370
它看到内容

01:09:13.370 --> 01:09:14.370
它就知道

01:09:14.370 --> 01:09:15.370
你这个网站

01:09:15.370 --> 01:09:17.370
标题是抖音

01:09:17.370 --> 01:09:18.370
它就要起这么一个作用

01:09:19.370 --> 01:09:20.370
好吧

01:09:20.370 --> 01:09:21.370
OK 那么就写出来了

01:09:21.370 --> 01:09:22.370
那接下来

01:09:22.370 --> 01:09:23.370
我给大家写它的样式

01:09:23.370 --> 01:09:25.370
我们稍微的调整一下

01:09:25.370 --> 01:09:27.370
我们的浏览器吧

01:09:28.370 --> 01:09:29.370
稍微调整一下浏览器

01:09:29.370 --> 01:09:30.370
这样我们左右

01:09:30.370 --> 01:09:31.370
分一样蓝

01:09:32.370 --> 01:09:34.370
方便我们看来开发

01:09:34.370 --> 01:09:35.370
这样看到舒服一点

01:09:37.370 --> 01:09:39.370
好 那我们的样式里边去

01:09:40.370 --> 01:09:41.370
这个给它个内样式

01:09:41.370 --> 01:09:43.370
叫做

01:09:43.370 --> 01:09:45.370
Elside

01:09:45.370 --> 01:09:46.370
logo

01:09:46.370 --> 01:09:47.370
加上前处

01:09:47.370 --> 01:09:48.370
Elside

01:09:48.370 --> 01:09:49.370
logo

01:09:49.370 --> 01:09:50.370
logo方面的样式

01:09:51.370 --> 01:09:54.190
logo

01:09:54.190 --> 01:09:55.190
找到什么

01:09:55.190 --> 01:09:57.190
Elside

01:09:57.190 --> 01:10:00.660
logo

01:10:00.660 --> 01:10:02.660
首先我要引

01:10:02.660 --> 01:10:03.660
我要让你这个

01:10:04.660 --> 01:10:06.660
这个文字不显示

01:10:06.660 --> 01:10:07.660
怎么不显示呢

01:10:07.660 --> 01:10:08.660
说找到这个Ace

01:10:08.660 --> 01:10:09.660
把它隐藏就完事了

01:10:10.660 --> 01:10:11.660
我就说找到这个Ace

01:10:11.660 --> 01:10:12.660
然后呢

01:10:12.660 --> 01:10:13.660
Display

01:10:15.660 --> 01:10:16.660
Display呢

01:10:16.660 --> 01:10:17.660
隐藏就完事了

01:10:17.660 --> 01:10:18.660
所以看不见了

01:10:18.660 --> 01:10:20.660
然后我要显示什么呢

01:10:20.660 --> 01:10:21.660
我要显示的是

01:10:21.660 --> 01:10:23.660
这个一个图片

01:10:23.660 --> 01:10:25.660
我要显示的是一个图片

01:10:25.660 --> 01:10:27.660
那我怎么显示一个图片呢

01:10:27.660 --> 01:10:28.660
我说用背景图就可以了

01:10:28.660 --> 01:10:29.660
Elside

01:10:29.660 --> 01:10:30.660
logo

01:10:30.660 --> 01:10:32.660
给它设置一张背景图

01:10:32.660 --> 01:10:34.660
bygo

01:10:34.660 --> 01:10:35.660
url

01:10:35.660 --> 01:10:40.120
logo

01:10:40.120 --> 01:10:41.120
编辑

01:10:41.120 --> 01:10:42.120
不是

01:10:42.120 --> 01:10:43.120
不是这个文件

01:10:47.500 --> 01:10:49.940
Elside

01:10:49.940 --> 01:10:50.940
logo

01:10:50.940 --> 01:10:51.940
svg

01:10:52.940 --> 01:10:54.940
我的图片跑哪去了呢

01:10:54.940 --> 01:10:56.940
图片你看到这里是夹仔出来的

01:10:56.940 --> 01:10:57.940
是在的

01:10:57.940 --> 01:10:58.940
你看是不是在的

01:10:59.940 --> 01:11:01.940
那我的图片跑哪去了

01:11:02.940 --> 01:11:03.940
图片跑哪去了

01:11:04.940 --> 01:11:05.940
跑哪去了呢

01:11:05.940 --> 01:11:07.940
是因为我的A元素没有宽高

01:11:07.940 --> 01:11:09.940
因为它里边的Ace被隐藏了

01:11:09.940 --> 01:11:10.940
是被隐藏了

01:11:11.940 --> 01:11:12.940
被隐藏之后

01:11:12.940 --> 01:11:14.940
没有宽高了

01:11:14.940 --> 01:11:15.940
宽高没了

01:11:16.940 --> 01:11:17.940
宽高没了

01:11:17.940 --> 01:11:20.940
自然有背景图它显示不出来

01:11:20.940 --> 01:11:21.940
把宽高加上

01:11:21.940 --> 01:11:22.940
那么宽高是多少呢

01:11:22.940 --> 01:11:24.940
一般就是设置背景图的宽高

01:11:24.940 --> 01:11:26.940
背景图的宽高是91×34

01:11:28.940 --> 01:11:29.940
宽度

01:11:29.940 --> 01:11:30.940
为

01:11:32.940 --> 01:11:33.940
91

01:11:34.940 --> 01:11:36.940
高度为34

01:11:36.940 --> 01:11:40.440
设置的没反应

01:11:40.440 --> 01:11:41.440
你看到没

01:11:41.440 --> 01:11:42.440
好像这些东西

01:11:42.440 --> 01:11:44.440
同学们一定要学会调试

01:11:44.440 --> 01:11:45.440
点击右键

01:11:45.440 --> 01:11:46.440
检查出问题的嘛

01:11:46.440 --> 01:11:47.440
对吧

01:11:47.440 --> 01:11:48.440
出问题怎么调试

01:11:48.440 --> 01:11:50.440
调试难弄过来

01:11:51.440 --> 01:11:53.440
找到出问题的元素

01:11:54.440 --> 01:11:55.440
下面有它的样式

01:11:55.440 --> 01:11:56.440
也可以看一下

01:11:56.440 --> 01:11:58.440
它在页面上的尺寸

01:11:58.440 --> 01:11:59.440
尺寸是多少

01:11:59.440 --> 01:12:00.440
还是0×0

01:12:00.440 --> 01:12:01.440
也就是说什么呢

01:12:01.440 --> 01:12:03.440
我的样式给它设置进去了

01:12:03.440 --> 01:12:05.440
你看这里已经出现样式了

01:12:05.440 --> 01:12:07.440
它的尺寸还是0×0

01:12:07.440 --> 01:12:09.440
你们觉得为啥呀

01:12:09.440 --> 01:12:12.140
你们觉得为啥呀

01:12:12.140 --> 01:12:16.340
这是一个很经典的问题

01:12:16.340 --> 01:12:18.340
也是经常发生的问题

01:12:18.340 --> 01:12:20.340
袁老师工作十年了

01:12:20.340 --> 01:12:21.340
也经常发生这样的问题

01:12:21.340 --> 01:12:22.340
他写着写着

01:12:23.340 --> 01:12:25.340
有点反应过来了

01:12:25.340 --> 01:12:26.340
它是一个什么玩意

01:12:26.340 --> 01:12:27.340
它是一个航和

01:12:27.340 --> 01:12:28.340
所以宽高无效

01:12:28.340 --> 01:12:29.340
那怎么办呢

01:12:29.340 --> 01:12:31.340
要把它变成快和

01:12:31.340 --> 01:12:35.230
变成快和就可以了

01:12:35.230 --> 01:12:38.230
然后它现在没有居中

01:12:38.230 --> 01:12:39.230
这里我们要看一下

01:12:39.230 --> 01:12:41.230
我们目标的效果是这样子的

01:12:41.230 --> 01:12:43.230
它的高度是60

01:12:43.230 --> 01:12:45.230
这就有意思了

01:12:46.230 --> 01:12:48.230
它的高度是60

01:12:50.230 --> 01:12:51.230
然后它还要居中

01:12:51.230 --> 01:12:52.230
所以说这一块区

01:12:52.230 --> 01:12:54.230
我们重新审视一下

01:12:54.230 --> 01:12:56.230
袁老师呢

01:12:56.230 --> 01:12:58.230
打算换一个做法

01:12:58.230 --> 01:12:59.230
这样做

01:12:59.230 --> 01:13:00.230
你们也可以有别的做法

01:13:00.230 --> 01:13:01.230
都可以

01:13:01.230 --> 01:13:02.230
只要你们能够实现

01:13:02.230 --> 01:13:03.230
这样的效果就行

01:13:03.230 --> 01:13:05.230
袁老师打算这样做

01:13:05.230 --> 01:13:08.230
我这里不再使用A元素

01:13:08.230 --> 01:13:10.230
我这里是一个DIV

01:13:11.230 --> 01:13:13.230
这是一个A元素

01:13:13.230 --> 01:13:15.230
A元素在这

01:13:15.230 --> 01:13:16.230
我让这个A元素

01:13:16.230 --> 01:13:19.230
在DIV里的居中

01:13:19.230 --> 01:13:21.230
我打算这样做

01:13:22.230 --> 01:13:24.230
你只要能听懂我的做法就行了

01:13:24.230 --> 01:13:26.230
你们有什么别的想法都可以

01:13:26.230 --> 01:13:27.230
你们下来自于是

01:13:27.230 --> 01:13:29.230
这些做法还很多

01:13:29.230 --> 01:13:31.230
所以说我打算怎么样了

01:13:31.230 --> 01:13:32.230
我打算在A元素外面

01:13:32.230 --> 01:13:34.230
再套一个DIV

01:13:34.230 --> 01:13:36.230
让这个A元素在DIV里面居中

01:13:36.230 --> 01:13:38.230
你看目前我的A元素

01:13:38.230 --> 01:13:39.230
是什么情况呢

01:13:39.230 --> 01:13:41.230
我给它一个

01:13:41.230 --> 01:13:42.230
给它一个Outline

01:13:42.230 --> 01:13:44.230
给它一个外边框

01:13:44.230 --> 01:13:45.230
给它外边框

01:13:45.230 --> 01:13:46.230
同学们可以看一下

01:13:46.230 --> 01:13:48.860
目前在这

01:13:48.860 --> 01:13:51.860
我希望在它外面套一个DIV

01:13:52.860 --> 01:13:54.860
那样所谓

01:13:54.860 --> 01:13:55.860
那里面的A元素

01:13:55.860 --> 01:13:57.860
就不要这个A元素了

01:13:57.860 --> 01:13:58.860
就这种写法

01:13:58.860 --> 01:14:00.860
加一层结构

01:14:00.860 --> 01:14:02.860
这个意思

01:14:02.860 --> 01:14:06.620
而Side里面

01:14:06.620 --> 01:14:08.620
我选中的是A元素

01:14:08.620 --> 01:14:09.620
A元素

01:14:09.620 --> 01:14:10.620
还是一样

01:14:10.620 --> 01:14:11.620
A元素

01:14:11.620 --> 01:14:12.620
刚才

01:14:12.620 --> 01:14:13.620
之前就选中了A元素

01:14:13.620 --> 01:14:14.620
那么现在的

01:14:14.620 --> 01:14:15.620
而Side的Logo

01:14:15.620 --> 01:14:16.620
表示DIV了

01:14:16.620 --> 01:14:17.620
所以我才重新选中

01:14:17.620 --> 01:14:18.620
A元素

01:14:18.620 --> 01:14:19.620
给它设置宽高

01:14:19.620 --> 01:14:20.620
设置背景

01:14:20.620 --> 01:14:22.620
A起引长

01:14:23.620 --> 01:14:25.620
而Side的Logo

01:14:25.620 --> 01:14:26.620
这是外面的DIV

01:14:26.620 --> 01:14:27.620
外面的DIV

01:14:27.620 --> 01:14:28.620
给它一个高度

01:14:28.620 --> 01:14:29.620
60

01:14:29.620 --> 01:14:30.620
我给它加一个

01:14:30.620 --> 01:14:31.620
外边框

01:14:31.620 --> 01:14:32.620
同学们可以看一下

01:14:32.620 --> 01:14:33.620
一个像素

01:14:33.620 --> 01:14:35.620
稍微的红色

01:14:36.620 --> 01:14:37.620
目前在这

01:14:37.620 --> 01:14:38.620
目前外面的DIV

01:14:38.620 --> 01:14:39.620
是这么高

01:14:39.620 --> 01:14:41.620
这是目前的DIV

01:14:41.620 --> 01:14:42.620
它宽度是充满的

01:14:42.620 --> 01:14:44.620
然后高度是60

01:14:44.620 --> 01:14:45.620
现在我要

01:14:45.620 --> 01:14:46.620
让这个A元素

01:14:46.620 --> 01:14:48.620
在DIV里面居中

01:14:48.620 --> 01:14:51.190
这有个居中方案了

01:14:51.190 --> 01:14:52.190
里面学过很多的

01:14:52.190 --> 01:14:53.190
居中方案

01:14:54.190 --> 01:14:55.190
那现在我要

01:14:55.190 --> 01:14:56.190
袁老师要告诉你们

01:14:56.190 --> 01:14:57.190
一个新的居中方案

01:14:57.190 --> 01:14:59.190
就是弹性核居中

01:14:59.190 --> 01:15:01.190
怎么居中呢

01:15:01.190 --> 01:15:02.190
我把这个DIV

01:15:02.190 --> 01:15:04.190
变成一个弹性核

01:15:05.190 --> 01:15:06.190
可不可以

01:15:06.190 --> 01:15:08.890
可以啊

01:15:08.890 --> 01:15:09.890
变成弹性核

01:15:09.890 --> 01:15:10.890
变成弹性核之后

01:15:10.890 --> 01:15:11.890
你说它里面

01:15:11.890 --> 01:15:12.890
就一个元素

01:15:12.890 --> 01:15:13.890
变成弹性核了

01:15:13.890 --> 01:15:14.890
对吧

01:15:14.890 --> 01:15:15.890
这个DIV里面

01:15:15.890 --> 01:15:16.890
是不是只有一个指元素

01:15:16.890 --> 01:15:17.890
它变成

01:15:18.890 --> 01:15:19.890
这个DIV里面

01:15:19.890 --> 01:15:20.890
是不是只有一个指元素

01:15:20.890 --> 01:15:21.890
就是A元素吗

01:15:22.890 --> 01:15:23.890
它变成弹性核了

01:15:23.890 --> 01:15:24.890
它变成弹性核了

01:15:24.890 --> 01:15:25.890
它变成弹性核了

01:15:25.890 --> 01:15:26.890
怎么来居中呢

01:15:26.890 --> 01:15:27.890
居中我是不是

01:15:27.890 --> 01:15:28.890
就处理两件

01:15:28.890 --> 01:15:29.890
说就行了

01:15:29.890 --> 01:15:30.890
一个是主轴上

01:15:30.890 --> 01:15:32.890
justified content

01:15:32.890 --> 01:15:33.890
你忘了就去查

01:15:34.890 --> 01:15:36.890
主轴排列

01:15:36.890 --> 01:15:37.890
是不是有居中方案

01:15:37.890 --> 01:15:38.890
多个元素可以居中

01:15:38.890 --> 01:15:39.890
一个元素

01:15:39.890 --> 01:15:40.890
是不是也能居中

01:15:41.890 --> 01:15:42.890
是一样的

01:15:42.890 --> 01:15:46.460
主轴上居中

01:15:47.460 --> 01:15:48.460
然后再进行

01:15:49.460 --> 01:15:50.460
align items

01:15:50.460 --> 01:15:51.460
测轴上居中

01:15:51.460 --> 01:15:53.460
这是起金

01:15:53.460 --> 01:15:54.460
到目前为止

01:15:55.460 --> 01:15:57.460
整个CSS技术站里边

01:15:57.460 --> 01:15:59.460
所有的居中方案里边

01:15:59.460 --> 01:16:01.460
最完美的居中方式

01:16:01.460 --> 01:16:02.460
其他的居中方式

01:16:02.460 --> 01:16:03.460
或多或少

01:16:03.460 --> 01:16:05.460
都要么有些局限

01:16:05.460 --> 01:16:06.460
要么有一些问题

01:16:07.460 --> 01:16:09.460
这是最完美的居中方式

01:16:09.460 --> 01:16:10.460
单个项目里边

01:16:10.460 --> 01:16:11.460
单个元素

01:16:11.460 --> 01:16:12.460
在副元素里面居中

01:16:12.460 --> 01:16:13.460
弹性核

01:16:13.460 --> 01:16:15.460
是最完美的居中方式

01:16:16.460 --> 01:16:17.460
没有比它更好的

01:16:20.460 --> 01:16:21.460
那么现在我把那些边框

01:16:21.460 --> 01:16:22.460
都要去掉

01:16:25.340 --> 01:16:27.340
楼口区域就写完了

01:16:28.340 --> 01:16:30.340
看一下这一块里面什么问题

01:16:30.340 --> 01:16:34.770
不光是方便

01:16:34.770 --> 01:16:35.770
是因为过去的

01:16:35.770 --> 01:16:36.770
很多居中方案

01:16:36.770 --> 01:16:37.770
都有局限的

01:16:37.770 --> 01:16:38.770
都有局限

01:16:38.770 --> 01:16:39.770
你们知道那个

01:16:39.770 --> 01:16:40.770
绝对定位居中

01:16:40.770 --> 01:16:42.770
必须定宽高

01:16:43.770 --> 01:16:44.770
所以必须定宽高

01:16:44.770 --> 01:16:46.770
这个玩意不需要你定宽高

01:16:46.770 --> 01:16:47.770
无所谓的

01:16:47.770 --> 01:16:48.770
你这个宽高定不定

01:16:48.770 --> 01:16:49.770
它都可以居中

01:16:50.770 --> 01:16:52.770
这里还顺便给大家说一下

01:16:52.770 --> 01:16:53.770
顺便给大家说一下

01:16:53.770 --> 01:16:54.770
就是

01:17:00.530 --> 01:17:01.530
我这块一件

01:17:06.890 --> 01:17:07.890
顺便给大家说一下

01:17:07.890 --> 01:17:10.890
弹性核和弹性项目

01:17:10.890 --> 01:17:12.890
全部为快核

01:17:13.890 --> 01:17:14.890
你看这个A元素

01:17:14.890 --> 01:17:15.890
A元素是啥

01:17:15.890 --> 01:17:17.890
它是弹性核吗

01:17:17.890 --> 01:17:18.890
它是弹性项目

01:17:18.890 --> 01:17:19.890
它只元素弹性项目

01:17:19.890 --> 01:17:20.890
对吧

01:17:20.890 --> 01:17:22.890
弹性项目自动变为快核

01:17:22.890 --> 01:17:23.890
所以说这句话你可以不要

01:17:24.890 --> 01:17:25.890
两个人一样

01:17:25.890 --> 01:17:26.890
你写不写都是快核

01:17:27.890 --> 01:17:28.890
怎么来验证呢

01:17:28.890 --> 01:17:30.890
你可以点击就件检查

01:17:31.890 --> 01:17:32.890
找到这个A元素

01:17:33.890 --> 01:17:34.890
找到A元素

01:17:34.890 --> 01:17:36.890
找到这computed

01:17:36.890 --> 01:17:38.890
最终的事业材质是属性

01:17:39.890 --> 01:17:41.890
你搜一下

01:17:42.890 --> 01:17:43.890
变block了

01:17:43.890 --> 01:17:44.890
它是灰色的

01:17:44.890 --> 01:17:45.890
灰色的什么意思

01:17:45.890 --> 01:17:47.890
不能更改

01:17:47.890 --> 01:17:48.890
就这个不是不能更改

01:17:48.890 --> 01:17:50.890
就这个属性不是

01:17:50.890 --> 01:17:52.890
我写单一码改的

01:17:52.890 --> 01:17:54.890
就是我没有写单一码去更改它

01:17:55.890 --> 01:17:56.890
比方说你去看一下

01:17:56.890 --> 01:17:58.890
它的那个color

01:17:58.890 --> 01:17:59.890
它就不是灰色的

01:17:59.890 --> 01:18:01.890
说明我写单码改过的

01:18:02.890 --> 01:18:03.890
在哪里改的

01:18:03.890 --> 01:18:04.890
在这里改的

01:18:04.890 --> 01:18:05.890
对吧

01:18:05.890 --> 01:18:06.890
但是display是灰色的

01:18:06.890 --> 01:18:08.890
说明我没有去更改过它

01:18:08.890 --> 01:18:09.890
没有去更改过它

01:18:09.890 --> 01:18:10.890
它仍然为快核

01:18:10.890 --> 01:18:11.890
它自动的

01:18:11.890 --> 01:18:12.890
自动变为快核的

01:18:12.890 --> 01:18:13.890
所以说这里不需要写

01:18:13.890 --> 01:18:15.890
就在那个浮动变为快核

01:18:15.890 --> 01:18:16.890
绝对定位变为快核

01:18:16.890 --> 01:18:17.890
是一样的道理

01:18:17.890 --> 01:18:19.890
你不需要去特意的写它

01:18:20.890 --> 01:18:21.890
好 那么这个就写完了

01:18:21.890 --> 01:18:22.890
那接下来

01:18:23.890 --> 01:18:24.890
还有几分钟

01:18:24.890 --> 01:18:25.890
我们能做一点试一点吧

01:18:25.890 --> 01:18:26.890
做不了 明天我们又来

01:18:26.890 --> 01:18:27.890
没关系了

01:18:27.890 --> 01:18:29.890
四天时间整个刀都可以搬弄完了

01:18:29.890 --> 01:18:30.890
这个页面其实

01:18:30.890 --> 01:18:31.890
你上手之后

01:18:31.890 --> 01:18:33.890
这个页面并不复杂

01:18:33.890 --> 01:18:35.890
你别看到我们好像有很多的知识

01:18:35.890 --> 01:18:37.890
每个字都很简单

01:18:37.890 --> 01:18:38.890
有些知识可能内容很多

01:18:38.890 --> 01:18:40.890
将来你们的后期合成里面

01:18:40.890 --> 01:18:41.890
还会继续学习

01:18:41.890 --> 01:18:43.890
现在我们只需要了解一些

01:18:43.890 --> 01:18:45.890
本项目需要用到的就可以了

01:18:45.890 --> 01:18:47.890
其实东西并不多

01:18:47.890 --> 01:18:49.890
好 我们看那个

01:18:49.890 --> 01:18:51.890
左侧的整体布局

01:18:51.890 --> 01:18:53.890
下面这个区域

01:18:53.890 --> 01:18:55.890
我们先不说它里面有什么内容

01:18:55.890 --> 01:18:56.890
内容无所谓

01:18:56.890 --> 01:18:57.890
我们一会儿后

01:18:57.890 --> 01:18:59.890
明天慢慢再写都无所谓

01:18:59.890 --> 01:19:00.890
关键是这个区域

01:19:00.890 --> 01:19:02.890
我怎么把它做成这个样子

01:19:02.890 --> 01:19:04.890
它有一个滚动条

01:19:04.890 --> 01:19:05.890
原老师不推

01:19:05.890 --> 01:19:07.890
我没有看到你这边有滚动条

01:19:07.890 --> 01:19:08.890
你滚动条在哪

01:19:08.890 --> 01:19:09.890
我隐藏了

01:19:09.890 --> 01:19:11.890
但它实际上是有滚动条的

01:19:11.890 --> 01:19:13.890
实际上是有滚动条的

01:19:13.890 --> 01:19:15.890
我们先把滚动条弄出来再说

01:19:15.890 --> 01:19:17.890
就这个区域它一定是定高的

01:19:17.890 --> 01:19:19.890
不然它怎么来出现滚动条呢

01:19:19.890 --> 01:19:21.890
这个区域的高度一定是固定的

01:19:21.890 --> 01:19:24.890
它内容超过了高度之后

01:19:24.890 --> 01:19:25.890
出现滚动条

01:19:26.890 --> 01:19:27.890
懂了意思吗

01:19:27.890 --> 01:19:28.890
那也就是说这个区域

01:19:28.890 --> 01:19:30.890
我应该怎么写呢

01:19:30.890 --> 01:19:31.890
基本的逻辑就是这样子的

01:19:31.890 --> 01:19:33.890
你看这是上面的楼

01:19:33.890 --> 01:19:35.890
下面应该是什么

01:19:35.890 --> 01:19:36.890
叫做

01:19:36.890 --> 01:19:39.890
额赛的美女吧

01:19:39.890 --> 01:19:41.890
额赛的妹嘛

01:19:41.890 --> 01:19:44.890
側边蓝的主区

01:19:44.890 --> 01:19:46.890
理解的意思吧

01:19:46.890 --> 01:19:50.890
側边蓝的主区域

01:19:50.890 --> 01:19:53.890
为什么我取名字不取美女呢

01:19:54.890 --> 01:19:56.890
因为它下面不仅仅是美女

01:19:56.890 --> 01:19:58.890
下面还有叶脚

01:19:58.890 --> 01:19:59.890
都在这里边

01:19:59.890 --> 01:20:01.890
側边蓝的主区

01:20:01.890 --> 01:20:02.890
里边它啥内容

01:20:02.890 --> 01:20:04.890
我们先随便下写一些内容吧

01:20:04.890 --> 01:20:05.890
先随便下写

01:20:05.890 --> 01:20:06.890
就生成一段随机生成一段

01:20:06.890 --> 01:20:08.890
生成一个签个文字

01:20:08.890 --> 01:20:09.890
随便下写一些

01:20:09.890 --> 01:20:11.890
把内容多称一下

01:20:11.890 --> 01:20:12.890
随便生成

01:20:12.890 --> 01:20:14.890
这个叫Lauré 乱书假文

01:20:14.890 --> 01:20:15.890
它没啥用

01:20:15.890 --> 01:20:16.890
没啥用的

01:20:16.890 --> 01:20:18.890
它就是来随机生成一些文字

01:20:18.890 --> 01:20:19.890
帮你填充一下版面

01:20:19.890 --> 01:20:21.890
方便你调试的

01:20:21.890 --> 01:20:22.890
目前就这个鬼样子

01:20:22.890 --> 01:20:24.890
现在我们现在要去设置一下

01:20:26.890 --> 01:20:28.890
肯定要给它订高度

01:20:28.890 --> 01:20:30.890
高度我现在不知道订多少

01:20:30.890 --> 01:20:31.890
现在还不知道

01:20:31.890 --> 01:20:33.890
然后我们肯定会这样的写带

01:20:33.890 --> 01:20:34.890
怎么写呢

01:20:37.890 --> 01:20:38.890
横向

01:20:38.890 --> 01:20:39.890
你不要给我出现滚踪条

01:20:39.890 --> 01:20:41.890
横向你一定不要给我出现滚踪条

01:20:41.890 --> 01:20:43.890
横向为Hit

01:20:43.890 --> 01:20:45.890
中向Scroll

01:20:45.890 --> 01:20:46.890
没见过吧

01:20:46.890 --> 01:20:47.890
这种写法

01:20:47.890 --> 01:20:48.890
它可以写两个值的

01:20:48.890 --> 01:20:49.890
一个是横向的

01:20:49.890 --> 01:20:50.890
隐藏

01:20:50.890 --> 01:20:51.890
中向的出现滚踪条

01:20:51.890 --> 01:20:52.890
于是横向

01:20:52.890 --> 01:20:54.890
如果说你要这样的写的话

01:20:54.890 --> 01:20:55.890
那横向也会有滚踪条

01:20:55.890 --> 01:20:59.520
先别争输

01:20:59.520 --> 01:21:03.240
看不见

01:21:03.240 --> 01:21:05.620
横向

01:21:05.620 --> 01:21:06.620
Hit 隐藏

01:21:08.620 --> 01:21:09.620
隐藏

01:21:09.620 --> 01:21:13.270
中向

01:21:13.270 --> 01:21:14.270
出现滚踪条

01:21:15.270 --> 01:21:16.270
看到没

01:21:17.270 --> 01:21:18.270
好

01:21:18.270 --> 01:21:20.270
那么现在问题是

01:21:20.270 --> 01:21:21.270
现在能滚动吗

01:21:21.270 --> 01:21:22.270
不能滚动

01:21:22.270 --> 01:21:23.270
为什么呢

01:21:23.270 --> 01:21:24.270
因为我没有给它订高

01:21:24.270 --> 01:21:25.270
高度没有固定

01:21:27.270 --> 01:21:28.270
高度没有固定

01:21:30.270 --> 01:21:31.270
它没有办法出现滚踪条

01:21:31.270 --> 01:21:32.270
什么叫滚踪条

01:21:33.270 --> 01:21:35.270
内容超过了高度

01:21:35.270 --> 01:21:36.270
才会出现滚踪条

01:21:36.270 --> 01:21:37.270
你高度都没有固定

01:21:37.270 --> 01:21:38.270
它内容

01:21:38.270 --> 01:21:39.270
它高度就被内容撑开了

01:21:39.270 --> 01:21:40.270
对吧

01:21:40.270 --> 01:21:41.270
内容比方说我们看一下

01:21:41.270 --> 01:21:43.270
这个神和元素

01:21:43.270 --> 01:21:47.990
看妹

01:21:47.990 --> 01:21:48.990
你看它高度多少

01:21:48.990 --> 01:21:50.990
9380

01:21:50.990 --> 01:21:51.990
高度被撑开了

01:21:51.990 --> 01:21:52.990
所以它高度一定要固定

01:21:52.990 --> 01:21:53.990
那问题是高度写多少

01:21:53.990 --> 01:21:55.990
现在麻烦是又来了

01:21:55.990 --> 01:21:57.990
高度写多少

01:21:57.990 --> 01:22:00.990
你写多少都不合适

01:22:00.990 --> 01:22:02.990
我们希望它的高度是什么

01:22:02.990 --> 01:22:05.990
是整个四口高度

01:22:05.990 --> 01:22:07.990
这是不是充满四口的

01:22:07.990 --> 01:22:09.990
整个四口高度

01:22:09.990 --> 01:22:11.990
减去上边这一部分

01:22:12.990 --> 01:22:14.990
100这多少

01:22:14.990 --> 01:22:16.990
60对吧

01:22:16.990 --> 01:22:17.990
减去60

01:22:17.990 --> 01:22:19.990
你说我希望它高度

01:22:19.990 --> 01:22:20.990
你自动计算

01:22:20.990 --> 01:22:22.990
我希望你自动计算

01:22:22.990 --> 01:22:24.990
计算

01:22:24.990 --> 01:22:25.990
计算什么呢

01:22:25.990 --> 01:22:28.990
四口高度

01:22:28.990 --> 01:22:30.990
减去60个相处

01:22:30.990 --> 01:22:32.990
我希望你自动计算

01:22:32.990 --> 01:22:34.990
那这个怎么能做到呢

01:22:34.990 --> 01:22:35.990
可以做到的

01:22:35.990 --> 01:22:38.990
在C3里边有这么一个写法

01:22:38.990 --> 01:22:40.990
就是这一部分的内容

01:22:40.990 --> 01:22:41.990
计算属性

01:22:41.990 --> 01:22:42.990
你至于看一下

01:22:42.990 --> 01:22:44.990
我这里直接写了

01:22:44.990 --> 01:22:47.990
这不小心解答了

01:22:47.990 --> 01:22:51.370
怎么计算

01:22:51.370 --> 01:22:52.370
calci

01:22:52.370 --> 01:22:53.370
calculator

01:22:53.370 --> 01:22:56.370
比较计算的意思

01:22:56.370 --> 01:22:57.370
计算

01:22:57.370 --> 01:22:58.370
计算什么呢

01:22:58.370 --> 01:23:00.370
那里边写上计算的内容

01:23:00.370 --> 01:23:02.370
四口高度怎么写

01:23:02.370 --> 01:23:03.370
100对吧

01:23:03.370 --> 01:23:04.370
我们学过的

01:23:04.370 --> 01:23:05.370
减去60

01:23:05.370 --> 01:23:06.370
真的能可以吗

01:23:06.370 --> 01:23:07.370
它就可以

01:23:07.370 --> 01:23:11.450
它就可以

01:23:11.450 --> 01:23:13.450
这就是我们想要的效果

01:23:13.450 --> 01:23:14.450
它就可以

01:23:14.450 --> 01:23:16.450
至于怎么来隐藏滚动条

01:23:16.450 --> 01:23:17.450
我们之后再说

01:23:17.450 --> 01:23:19.450
我现在打算把滚动条先留着

01:23:19.450 --> 01:23:20.450
为什么要留着呢

01:23:20.450 --> 01:23:22.450
方便我们后边查看

01:23:22.450 --> 01:23:23.450
调试

01:23:23.450 --> 01:23:25.450
调试全部把左边篮做完之后

01:23:25.450 --> 01:23:27.450
滚动条很容易隐藏的

01:23:27.450 --> 01:23:29.450
非常容易

01:23:29.450 --> 01:23:31.450
这个区域我们整体布局就写完了

01:23:31.450 --> 01:23:32.450
那么后边

01:23:32.450 --> 01:23:34.450
它里边用菜单又打写

01:23:34.450 --> 01:23:36.450
我们后边再说吧

01:23:36.450 --> 01:23:37.450
好吧

01:23:37.450 --> 01:23:38.450
今天我们就到这了

01:23:38.450 --> 01:23:40.450
看看同学有什么问题没有

01:23:42.450 --> 01:23:44.450
滚动条可以设样式

01:23:44.450 --> 01:23:46.450
你看我最终的效果里边

01:23:46.450 --> 01:23:48.450
就给滚动条设置了样式的

01:23:48.450 --> 01:23:50.450
这里边是没有滚动条该隐藏的

01:23:50.450 --> 01:23:51.450
你看这边的滚动条

01:23:51.450 --> 01:23:59.820
不知道你们看不看见

01:23:59.820 --> 01:24:01.820
你看这边的滚动条

01:24:05.380 --> 01:24:06.380
注意

01:24:06.380 --> 01:24:08.380
很细啊滚动条

01:24:08.380 --> 01:24:09.380
很小

01:24:09.380 --> 01:24:11.380
不知道你们能不能看得见

01:24:11.380 --> 01:24:13.380
这边的滚动条就设置了样式的

01:24:13.380 --> 01:24:14.380
可以设样式的

01:24:14.380 --> 01:24:16.380
我们后边再说

01:24:16.380 --> 01:24:18.380
我看一下还有什么问题

01:24:18.380 --> 01:24:20.380
文档肯定都要发的

01:24:20.380 --> 01:24:22.380
overflow hidden scroll

01:24:22.380 --> 01:24:24.380
直接看这吧

01:24:24.380 --> 01:24:26.380
overflow hidden 你能理解吗

01:24:26.380 --> 01:24:29.380
overflow scroll 能理解吗

01:24:29.380 --> 01:24:30.380
你先把这个理解了

01:24:30.380 --> 01:24:32.380
然后你看一下这

01:24:33.380 --> 01:24:35.380
这是我们那个很长的元素

01:24:40.100 --> 01:24:42.100
顺便说多说两句吧

01:24:43.100 --> 01:24:44.100
这个overflow

01:24:44.100 --> 01:24:46.100
它其实是一个复合属性

01:24:47.100 --> 01:24:51.500
知道什么叫复合属性吗

01:24:51.500 --> 01:24:53.500
所以说为什么一定要让你们去看

01:24:54.500 --> 01:24:56.500
一定要去看我的settings

01:24:57.500 --> 01:24:59.500
不是说我在这个机构的资料里面

01:24:59.500 --> 01:25:01.500
去给你做这个推荐

01:25:01.500 --> 01:25:03.500
不知道你们的知识

01:25:03.500 --> 01:25:04.500
冬天下期凑一下

01:25:04.500 --> 01:25:06.500
我都不知道哪来的

01:25:06.500 --> 01:25:08.500
你说这些东西都应该学过的

01:25:08.500 --> 01:25:09.500
复合属性是什么意思

01:25:09.500 --> 01:25:11.500
就把多个属性

01:25:11.500 --> 01:25:12.500
揉在一起

01:25:12.500 --> 01:25:14.500
比方说你们像一个白光的

01:25:14.500 --> 01:25:15.500
这个属性是不是

01:25:15.500 --> 01:25:17.500
很多个属性的组合

01:25:17.500 --> 01:25:18.500
哪些属性的组合

01:25:18.500 --> 01:25:19.500
哪一大堆

01:25:19.500 --> 01:25:20.500
白光的color

01:25:20.500 --> 01:25:22.500
白光的image

01:25:22.500 --> 01:25:25.500
白光的prison

01:25:25.500 --> 01:25:26.500
一大堆

01:25:26.500 --> 01:25:27.500
后面不写了

01:25:27.500 --> 01:25:28.500
它可以把这些东西

01:25:28.500 --> 01:25:30.500
全部揉在一个属性里面写

01:25:30.500 --> 01:25:31.500
这个属性叫做复合属性

01:25:31.500 --> 01:25:33.500
实际上这个overflow

01:25:33.500 --> 01:25:35.500
表示一出过后怎么办

01:25:35.500 --> 01:25:37.500
这其实就是一个复合属性

01:25:37.500 --> 01:25:39.500
原来说你怎么知道是复合属性的

01:25:39.500 --> 01:25:41.500
你看调是蓝

01:25:41.500 --> 01:25:42.500
调是工具里面

01:25:42.500 --> 01:25:43.500
凡是复合属性

01:25:43.500 --> 01:25:45.500
都会加一个三角形

01:25:45.500 --> 01:25:46.500
你看可以展开的

01:25:46.500 --> 01:25:49.500
它实际上是两个属性的组合

01:25:49.500 --> 01:25:51.500
一个是x軸

01:25:51.500 --> 01:25:53.500
橫向上溢出了怎么办

01:25:53.500 --> 01:25:56.500
纵向上溢出了怎么办

01:25:56.500 --> 01:25:58.500
它实际上是两个属性

01:25:58.500 --> 01:26:00.500
如果说你这里只写一个的话

01:26:00.500 --> 01:26:01.500
比方说只写一个hide

01:26:01.500 --> 01:26:02.500
那表示什么意思呢

01:26:02.500 --> 01:26:03.500
橫向溢出隐藏

01:26:03.500 --> 01:26:06.500
纵向溢出也隐藏

01:26:06.500 --> 01:26:07.500
懂得意思吗

01:26:07.500 --> 01:26:08.500
那你写两个字呢

01:26:08.500 --> 01:26:10.500
那就是橫向溢出隐藏

01:26:10.500 --> 01:26:13.500
纵向溢出滚动条

01:26:13.500 --> 01:26:15.500
就这么意思

01:26:15.500 --> 01:26:19.970
这也叫做数学属性

01:26:19.970 --> 01:26:21.970
我讲的是数学属性

01:26:21.970 --> 01:26:22.970
诚哥讲的是不合属性

01:26:22.970 --> 01:26:23.970
有一个意思

01:26:23.970 --> 01:26:24.970
鲍德也有

01:26:24.970 --> 01:26:25.970
鲍德也是

01:26:25.970 --> 01:26:26.970
一个鲍德

01:26:26.970 --> 01:26:27.970
一个ps稍微的

01:26:27.970 --> 01:26:29.970
就是通过浏览器调是工具

01:26:29.970 --> 01:26:30.970
浏览器调是工具

01:26:30.970 --> 01:26:31.970
一定要里面去用

01:26:31.970 --> 01:26:33.970
你用不用的属

01:26:33.970 --> 01:26:34.970
先暂时不说

01:26:34.970 --> 01:26:35.970
一定要去用

01:26:35.970 --> 01:26:37.970
这里面有很多很多信息

01:26:37.970 --> 01:26:38.970
你展开看一下

01:26:38.970 --> 01:26:39.970
你看鲍德

01:26:39.970 --> 01:26:41.970
是有很多的属性

01:26:41.970 --> 01:26:43.970
它把全部揉在一块儿了

01:26:43.970 --> 01:26:45.970
鲍德top color

01:26:45.970 --> 01:26:47.970
什么意思

01:26:47.970 --> 01:26:50.970
顶部的边框的颜色

01:26:50.970 --> 01:26:51.970
我这里没有写颜色

01:26:51.970 --> 01:26:52.970
是不是就引领小颜色

01:26:52.970 --> 01:26:53.970
有什么初始字

01:26:53.970 --> 01:26:54.970
初始字什么意思

01:26:54.970 --> 01:26:55.970
鲍德的初始字

01:26:55.970 --> 01:26:56.970
颜色初始字的领色

01:26:56.970 --> 01:26:57.970
跟字体颜色一样

01:26:57.970 --> 01:26:59.970
全是细节

01:26:59.970 --> 01:27:00.970
然后这里style

01:27:00.970 --> 01:27:01.970
solid

01:27:01.970 --> 01:27:02.970
你看吧

01:27:02.970 --> 01:27:03.970
仔细看

01:27:03.970 --> 01:27:04.970
鲍德还可以设图片

01:27:04.970 --> 01:27:05.970
只不过这种操作

01:27:05.970 --> 01:27:07.970
由于太风骚

01:27:07.970 --> 01:27:14.130
一般不用

01:27:14.130 --> 01:27:16.130
网页右键

01:27:16.130 --> 01:27:17.130
这是个好问题

01:27:17.130 --> 01:27:18.130
这是一个好问题

01:27:18.130 --> 01:27:19.130
网页右键检查

01:27:19.130 --> 01:27:21.130
如何基础调试

01:27:21.130 --> 01:27:23.130
调试这个事情

01:27:23.130 --> 01:27:25.130
一般出现在你

01:27:25.130 --> 01:27:27.130
遇到问题了

01:27:27.130 --> 01:27:29.130
进行调试

01:27:29.130 --> 01:27:31.130
其实袁老师还建议你们

01:27:31.130 --> 01:27:32.130
哪怕没有问题

01:27:32.130 --> 01:27:33.130
也建议你们调试

01:27:33.130 --> 01:27:34.130
你写一点代码

01:27:34.130 --> 01:27:35.130
就调试一下

01:27:35.130 --> 01:27:36.130
看什么

01:27:36.130 --> 01:27:38.130
看尺寸

01:27:38.130 --> 01:27:39.130
看你的

01:27:39.130 --> 01:27:41.130
想的跟它生成出来的一不一样

01:27:41.130 --> 01:27:42.130
点击右键

01:27:42.130 --> 01:27:43.130
任何一个地方点右键

01:27:43.130 --> 01:27:44.130
点检查

01:27:44.130 --> 01:27:47.130
找到出问题的元素

01:27:47.130 --> 01:27:49.130
右边看它的样式

01:27:49.130 --> 01:27:51.130
不是经常有同学

01:27:51.130 --> 01:27:52.130
出现这样的问题吧

01:27:52.130 --> 01:27:54.130
特别是初学者

01:27:54.130 --> 01:27:55.130
经常我都不知道

01:27:55.130 --> 01:27:57.130
这个问题出现了多少次了

01:27:58.130 --> 01:27:59.130
你们自己

01:27:59.130 --> 01:28:00.130
自己感受一下

01:28:00.130 --> 01:28:02.130
真不真实

01:28:02.130 --> 01:28:03.130
这种问题

01:28:03.130 --> 01:28:04.130
在调试工具下面

01:28:04.130 --> 01:28:06.130
无所遁形

01:28:06.130 --> 01:28:07.130
你看那个妹元素

01:28:07.130 --> 01:28:08.130
出了问题了

01:28:08.130 --> 01:28:09.130
找到那个妹元素

01:28:09.130 --> 01:28:10.130
看右边的样式

01:28:10.130 --> 01:28:11.130
你会发现

01:28:11.130 --> 01:28:12.130
我们写的代码

01:28:12.130 --> 01:28:13.130
根本没有生效

01:28:13.130 --> 01:28:14.130
说明什么

01:28:14.130 --> 01:28:15.130
说明我们的选择器

01:28:15.130 --> 01:28:17.130
没有选中它

01:28:17.130 --> 01:28:19.130
那你这个时候找什么

01:28:19.130 --> 01:28:20.130
你区别要看这

01:28:20.130 --> 01:28:21.130
不需要看这

01:28:21.130 --> 01:28:23.130
你只需要找选择器就行了

01:28:23.130 --> 01:28:24.130
一堆笔就知道了

01:28:24.130 --> 01:28:25.130
我单词写错了

01:28:27.130 --> 01:28:28.130
有的时候

01:28:28.130 --> 01:28:29.130
比如说

01:28:29.130 --> 01:28:32.660
我们这里

01:28:32.660 --> 01:28:33.660
背景图

01:28:33.660 --> 01:28:34.660
背景颜色

01:28:34.660 --> 01:28:35.660
选中出问题的元素

01:28:35.660 --> 01:28:36.660
看右边

01:28:36.660 --> 01:28:37.660
右边发现

01:28:37.660 --> 01:28:38.660
选择器选中了它

01:28:38.660 --> 01:28:39.660
不然

01:28:39.660 --> 01:28:40.660
它就不会出现在这

01:28:40.660 --> 01:28:41.660
选中了它

01:28:41.660 --> 01:28:42.660
然后

01:28:42.660 --> 01:28:43.660
你会发现

01:28:43.660 --> 01:28:44.660
这里有一个东西

01:28:44.660 --> 01:28:45.660
感叹号

01:28:46.660 --> 01:28:47.660
下面有一个提示指的

01:28:48.660 --> 01:28:49.660
什么意思

01:28:50.660 --> 01:28:51.660
未知的

01:28:51.660 --> 01:28:52.660
property

01:28:52.660 --> 01:28:53.660
属性name

01:28:54.660 --> 01:28:55.660
名

01:28:55.660 --> 01:28:56.660
这个属性名

01:28:56.660 --> 01:28:57.660
它不认识

01:28:57.660 --> 01:28:59.660
说明它说明你属性名写错了

01:28:59.660 --> 01:29:00.660
检查一下

01:29:00.660 --> 01:29:02.660
只要能够说巧

01:29:02.660 --> 01:29:04.660
错误范围就很容易检查了

01:29:05.660 --> 01:29:07.660
这里多加的一个

01:29:07.660 --> 01:29:08.660
又发现

01:29:08.660 --> 01:29:09.660
又不生效了

01:29:09.660 --> 01:29:10.660
指着它看一下

01:29:10.660 --> 01:29:11.660
感叹号

01:29:11.660 --> 01:29:12.660
invalid

01:29:12.660 --> 01:29:14.660
无效的property

01:29:14.660 --> 01:29:15.660
属性value

01:29:15.660 --> 01:29:17.660
无效的属性值

01:29:17.660 --> 01:29:18.660
说明它这里写错了

01:29:18.660 --> 01:29:19.660
属性值写错了

01:29:19.660 --> 01:29:20.660
你检查一下

01:29:20.660 --> 01:29:21.660
你总不能检查出来的

01:29:22.660 --> 01:29:23.660
基本的用法

01:29:23.660 --> 01:29:24.660
然后

01:29:24.660 --> 01:29:25.660
这边看核模型

01:29:25.660 --> 01:29:26.660
看它的尺寸

01:29:26.660 --> 01:29:27.660
内容

01:29:27.660 --> 01:29:28.660
谈定

01:29:29.660 --> 01:29:30.660
就这些东西

01:29:30.660 --> 01:29:31.660
基本上就这些东西

01:29:35.660 --> 01:29:36.660
GS调色

01:29:36.660 --> 01:29:37.660
那么讲

01:29:38.660 --> 01:29:39.660
成员

01:29:39.660 --> 01:29:40.660
那就

01:29:40.660 --> 01:29:41.660
GS调色

01:29:41.660 --> 01:29:42.660
我们后面都会说

01:29:42.660 --> 01:29:43.660
在缩水池里面调吧

01:29:43.660 --> 01:29:45.660
因为logo那里是

01:29:45.660 --> 01:29:46.660
设置背景图

01:29:46.660 --> 01:29:47.660
一边没有内容

01:29:48.660 --> 01:29:50.660
设置高度之后就不会了

01:29:51.660 --> 01:29:52.660
对

01:29:52.660 --> 01:29:53.660
没有内容还高度远离吗

01:29:53.660 --> 01:29:54.660
好了

01:29:54.660 --> 01:29:55.660
那我这边就差不多了

01:29:55.660 --> 01:29:56.660
差不多了

01:29:56.660 --> 01:29:57.660
今天

01:29:57.660 --> 01:29:58.660
一个半小时吧

01:29:58.660 --> 01:29:59.660
我们基本上

01:29:59.660 --> 01:30:00.660
希望

01:30:00.660 --> 01:30:01.660
袁老师美好的愿望

01:30:01.660 --> 01:30:02.660
就是每天一个半小时

01:30:02.660 --> 01:30:03.660
我们也不算轻轻松松

01:30:03.660 --> 01:30:04.660
我们

01:30:05.660 --> 01:30:06.660
循序监禁的

01:30:06.660 --> 01:30:07.660
把这个效果搞定

