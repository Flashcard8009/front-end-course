WEBVTT

00:00.000 --> 00:02.000
哈喽哈喽 同学们大家好啊

00:02.000 --> 00:04.000
又来到今天呢 美丽题的大业时间啊

00:04.000 --> 00:05.000
我是你们丁老师

00:05.000 --> 00:06.000
ok 来看看今天题目吧

00:06.000 --> 00:08.000
今天题目的战友一看有些长啊

00:08.000 --> 00:10.000
别怕 咱们一点来分析

00:10.000 --> 00:12.000
呃 问这段代码的真正结果是什么

00:12.000 --> 00:13.000
那我们看吧

00:13.000 --> 00:15.000
首先声明一个dance等于一千

00:15.000 --> 00:17.000
这个没什么说的单纯的辩量声明

00:17.000 --> 00:19.000
请接着 定一个对象obj

00:19.000 --> 00:21.000
呃obj 等于一个对象里面有dance属性直微时

00:21.000 --> 00:23.000
声明了一个ifn函数

00:23.000 --> 00:25.000
呃 这个 这个函数呢

00:25.000 --> 00:26.000
行参是ifn

00:26.000 --> 00:27.000
然后让这个ifn执行

00:27.000 --> 00:28.000
说明ifn

00:28.000 --> 00:30.000
我们将来传来是一个参数的

00:30.000 --> 00:31.000
呃 是一个函数 对吧

00:31.000 --> 00:33.000
然后让arguments0执行

00:33.000 --> 00:35.000
当中看到这样的同学们说

00:35.000 --> 00:36.000
诶 考点是什么

00:36.000 --> 00:37.000
这个关于arguments的一个考点哈

00:37.000 --> 00:39.000
别着急 接着往下看

00:39.000 --> 00:40.000
那这个对象声明完之后

00:40.000 --> 00:41.000
又声明了一个ifn函数

00:41.000 --> 00:43.000
这个ifn函数干嘛呢

00:43.000 --> 00:44.000
呃 这个console

00:44.000 --> 00:46.000
输出this2dance

00:46.000 --> 00:47.000
能看到这道题里面

00:47.000 --> 00:48.000
不仅有arguments

00:48.000 --> 00:49.000
同时还有this的

00:49.000 --> 00:51.000
诶 这样的一个考点哈

00:51.000 --> 00:52.000
那先看 通过流暖器

00:52.000 --> 00:54.000
我们先看看它的真结果是什么

00:54.000 --> 00:55.000
来刷新

00:55.000 --> 00:57.000
诶 一千和四

00:57.000 --> 00:58.000
对吧

00:58.000 --> 00:59.000
呃 那在这儿

00:59.000 --> 01:00.000
我们知道

01:00.000 --> 01:02.000
呃 ob 接点ifn执行

01:02.000 --> 01:04.000
传来 还弱干个参数

01:04.000 --> 01:06.000
诶 那在这个

01:06.000 --> 01:08.000
也就是说这个函数执行了两次

01:08.000 --> 01:09.000
对吧 因为在这里面

01:09.000 --> 01:11.000
诶 这个函数执行

01:11.000 --> 01:12.000
导致ifn执行了两次

01:12.000 --> 01:13.000
对吧

01:13.000 --> 01:14.000
一个是单程执行

01:14.000 --> 01:15.000
一个是单程执行

01:15.000 --> 01:16.000
另一个是arguments

01:16.000 --> 01:17.000
这种形式执行

01:17.000 --> 01:18.000
对吧

01:18.000 --> 01:19.000
诶 那OK

01:19.000 --> 01:20.000
那在这种情况下

01:20.000 --> 01:21.000
第一个一千

01:21.000 --> 01:22.000
呃 原因是什么呢

01:22.000 --> 01:23.000
咱们来看看

01:23.000 --> 01:24.000
我相信同学们

01:24.000 --> 01:25.000
大多数的疑问

01:25.000 --> 01:26.000
停留在第二个

01:26.000 --> 01:27.000
四

01:27.000 --> 01:28.000
那我们先把第一个分析一下

01:28.000 --> 01:29.000
那首先ifn

01:29.000 --> 01:30.000
ifn是什么

01:30.000 --> 01:31.000
是这个函数对吧

01:31.000 --> 01:33.000
这个函 当这个函数执行的时候

01:33.000 --> 01:34.000
是不是单纯执行啊

01:34.000 --> 01:35.000
对吧

01:35.000 --> 01:36.000
那单纯执行

01:36.000 --> 01:37.000
我们知道z4的指向

01:37.000 --> 01:38.000
它有一个原则

01:38.000 --> 01:39.000
啊 第一原则

01:39.000 --> 01:41.000
谁调用z4指向谁

01:41.000 --> 01:42.000
单纯这么写

01:42.000 --> 01:43.000
对吧

01:43.000 --> 01:44.000
相当于没人调用

01:44.000 --> 01:45.000
其实没人调用的话

01:45.000 --> 01:46.000
它还可以理解成

01:46.000 --> 01:47.000
window.ifn执行

01:47.000 --> 01:48.000
那意味着

01:48.000 --> 01:49.000
这里面的z4指向谁啊

01:49.000 --> 01:50.000
指向window对吧

01:50.000 --> 01:51.000
那window上有没有在此

01:51.000 --> 01:52.000
有啊 是不是一千

01:52.000 --> 01:53.000
所以说第一个只是一千

01:53.000 --> 01:54.000
现在这个同学们

01:55.000 --> 01:56.000
懂得明白

01:56.000 --> 01:57.000
这个咱不多说了

01:57.000 --> 01:58.000
看第二个

01:58.000 --> 02:00.000
argument40执行

02:00.000 --> 02:01.000
也就是说argument40

02:01.000 --> 02:03.000
是不是就等于这个ifn啊

02:03.000 --> 02:04.000
这个应该没什么问题的

02:04.000 --> 02:05.000
对吧

02:05.000 --> 02:06.000
那么它等于这个ifn

02:06.000 --> 02:08.000
那既然它等于ifn执行

02:08.000 --> 02:10.000
那是不是跟它是不是一样呢

02:10.000 --> 02:11.000
对吧

02:11.000 --> 02:12.000
很多同学说

02:12.000 --> 02:13.000
那第二个也应该是一千

02:13.000 --> 02:14.000
它怎么是4呢

02:14.000 --> 02:16.000
那首先这个4

02:16.000 --> 02:17.000
z4

02:17.000 --> 02:18.000
这个4在哪来的

02:18.000 --> 02:19.000
同学们看好了

02:19.000 --> 02:20.000
我们这传的

02:20.000 --> 02:21.000
是不是4个参数啊

02:21.000 --> 02:23.000
这是4个时参对吧

02:23.000 --> 02:24.000
那么我们argument4上面来

02:24.000 --> 02:25.000
我们在这输出一下

02:25.000 --> 02:26.000
argument4长度

02:26.000 --> 02:27.000
把argument4输出一下

02:27.000 --> 02:28.000
可以做点log

02:28.000 --> 02:29.000
啥呀

02:29.000 --> 02:30.000
argument4

02:32.000 --> 02:33.000
argument4

02:33.000 --> 02:34.000
来

02:34.000 --> 02:35.000
刷新

02:35.000 --> 02:36.000
是吧

02:36.000 --> 02:37.000
看啊

02:37.000 --> 02:38.000
这里面是不是0123

02:38.000 --> 02:39.000
然后它的z4是4啊

02:39.000 --> 02:41.000
那说明我们这里面输出的

02:41.000 --> 02:42.000
这个4是谁啊

02:42.000 --> 02:43.000
是argument4在4

02:43.000 --> 02:44.000
它的长度

02:44.000 --> 02:45.000
那为什么是它呢

02:45.000 --> 02:46.000
对吧

02:46.000 --> 02:47.000
不谁调用这次指向谁吗

02:47.000 --> 02:48.000
没错

02:48.000 --> 02:49.000
那同学们这

02:49.000 --> 02:50.000
可不可以看成这样

02:51.000 --> 02:52.000
接下来给大家

02:52.000 --> 02:53.000
写一个模拟

02:53.000 --> 02:54.000
假如说我有个对象

02:54.000 --> 02:56.000
叫arg

02:56.000 --> 02:57.000
argument

02:57.000 --> 02:58.000
args

02:58.000 --> 02:59.000
等于空对象

02:59.000 --> 03:01.000
然后让args

03:01.000 --> 03:02.000
它里面的一个0

03:02.000 --> 03:03.000
等于我啥呀

03:03.000 --> 03:05.000
等于我的iPhone

03:05.000 --> 03:06.000
是吧

03:06.000 --> 03:07.000
我的iPhone

03:07.000 --> 03:08.000
那就是等于

03:08.000 --> 03:09.000
我们定义的这个喊出呗

03:09.000 --> 03:10.000
那接下来

03:10.000 --> 03:13.000
我让args0

03:13.000 --> 03:14.000
执行

03:14.000 --> 03:15.000
对吧

03:15.000 --> 03:16.000
那这不好理解这样

03:16.000 --> 03:17.000
我们假如说

03:17.000 --> 03:18.000
给它.iPhone

03:18.000 --> 03:19.000
WiPhone可以吧

03:19.000 --> 03:21.000
那这我让

03:22.000 --> 03:23.000
iPhone

03:24.000 --> 03:25.000
iPhone执行

03:25.000 --> 03:26.000
那是不是谁调用

03:26.000 --> 03:27.000
这次指向谁啊

03:27.000 --> 03:28.000
这个这次是不是指向

03:28.000 --> 03:29.000
这个argument4

03:29.000 --> 03:30.000
当这个argument4里面

03:30.000 --> 03:31.000
有一个什么

03:31.000 --> 03:32.000
Zans等于4

03:32.000 --> 03:33.000
或者等于我

03:33.000 --> 03:34.000
对吧

03:34.000 --> 03:35.000
那是不是输出的就是4了

03:35.000 --> 03:36.000
是吧

03:36.000 --> 03:37.000
那这一段代码

03:37.000 --> 03:39.000
其实跟它是一模一样的

03:39.000 --> 03:40.000
大家不要单纯说

03:40.000 --> 03:41.000
是把这个喊出

03:41.000 --> 03:42.000
拿出来执行

03:42.000 --> 03:43.000
这里面存在一个

03:43.000 --> 03:44.000
隐尸的list指向

03:44.000 --> 03:45.000
指向的是argument4

03:45.000 --> 03:46.000
它也是一个对象

03:46.000 --> 03:47.000
它是一个类书组

03:47.000 --> 03:48.000
对吧

03:48.000 --> 03:49.000
那么所以说

03:49.000 --> 03:50.000
在这这一点

03:50.000 --> 03:51.000
大家要注意

03:51.000 --> 03:52.000
这一点大家要注意

03:52.000 --> 03:53.000
关于argument4

03:53.000 --> 03:54.000
零执行

03:54.000 --> 03:55.000
list指向的是argument4

03:55.000 --> 03:56.000
所以说

03:56.000 --> 03:57.000
Zans指向argument4

03:57.000 --> 03:58.000
里面这个长度

03:58.000 --> 03:59.000
是这样的

04:00.000 --> 04:01.000
OK

04:01.000 --> 04:02.000
那么关于今天的

04:02.000 --> 04:03.000
每日议题的讲解就到这

04:03.000 --> 04:04.000
如果同学

04:04.000 --> 04:05.000
对argument4

04:05.000 --> 04:06.000
对于喊出

04:06.000 --> 04:07.000
对于list不太了解

04:07.000 --> 04:08.000
回去看看

04:08.000 --> 04:09.000
咱们的公开课当中

04:09.000 --> 04:11.000
JS当中的

04:11.000 --> 04:12.000
list指向

04:12.000 --> 04:13.000
以及包括我们的

04:13.000 --> 04:14.000
喊出内容

04:14.000 --> 04:15.000
OK 那今天的

04:15.000 --> 04:16.000
讲解就到这

04:16.000 --> 04:17.000
咱们之后再见

