WEBVTT

00:00.620 --> 00:04.620
我已经知道你们的这个对我的热情了

00:04.620 --> 00:07.620
昨天的课怎么样?

00:07.620 --> 00:08.620
回去自己写了吗?

00:08.620 --> 00:12.960
回去写了吗?

00:12.960 --> 00:15.960
看到今天的这个来的同学有点少

00:15.960 --> 00:16.960
好像掉了十几个人

00:16.960 --> 00:19.960
我记得第一天大概是134人

00:19.960 --> 00:20.960
昨天135人

00:20.960 --> 00:22.960
今天怎么就125人了呢

00:22.960 --> 00:24.960
少了那十人去哪了

00:24.960 --> 00:26.960
看回放的时候听着

00:26.960 --> 00:28.960
没来的这十个人我点你们名了

00:28.960 --> 00:30.960
为什么没来

00:30.960 --> 00:33.960
好了

00:33.960 --> 00:35.960
无论你们写完还是没写完

00:35.960 --> 00:38.960
咱们坚持着把这最后一节扣听完

00:38.960 --> 00:41.960
听完了之后有了一个大概的思路

00:41.960 --> 00:44.960
你们再回去坚持自己的代码去写就可以了

00:44.960 --> 00:47.960
好了 那咱们现在今天做的第一件事情是什么呀

00:47.960 --> 00:49.960
切换分支对不对

00:49.960 --> 00:51.960
我们就利用大概这几天的时间

00:51.960 --> 00:53.960
先熟悉熟悉git的操作

00:53.960 --> 00:55.960
然后等你们以后

00:55.960 --> 00:57.960
听完这个课之后

00:57.960 --> 00:59.960
没事自己写个demo的时候

00:59.960 --> 01:01.960
也这样去传一下

01:01.960 --> 01:03.960
这样子有一个熟悉的过程

01:03.960 --> 01:05.960
你们未来接收起来会更好一些

01:05.960 --> 01:07.960
那我们想要去切换的分支

01:07.960 --> 01:09.960
用的是checkout

01:09.960 --> 01:11.960
想要创建一个分支是用的checkout

01:11.960 --> 01:14.960
加上b了之后就是再切换过去

01:14.960 --> 01:17.960
那我们起个名字叫sir的第三节课

01:17.960 --> 01:19.960
接着我们用code的点把它给打开

01:19.960 --> 01:20.960
注意哈

01:20.960 --> 01:22.960
不用说非得像我这样装

01:22.960 --> 01:24.960
因为我这习惯了

01:24.960 --> 01:26.960
打开的话你直接在控制台里面打开

01:26.960 --> 01:28.960
不是 在这个命令航空区里面打开

01:28.960 --> 01:29.960
更方便一点

01:29.960 --> 01:31.960
如果说你的这个vscode下来的时候

01:31.960 --> 01:33.960
并没有给你去配那个环境面料

01:33.960 --> 01:34.960
你就打不开

01:34.960 --> 01:35.960
你也别急

01:35.960 --> 01:37.960
你要不然你自己上完百度下

01:37.960 --> 01:38.960
怎么去配

01:38.960 --> 01:39.960
但是怎么去配呢

01:39.960 --> 01:40.960
对于你们大家有点难

01:40.960 --> 01:41.960
所以说这个时候

01:41.960 --> 01:43.960
还没有什么编程基础

01:43.960 --> 01:45.960
搞这方面的经验的时候

01:45.960 --> 01:47.960
你就操一点

01:47.960 --> 01:48.960
对不对

01:48.960 --> 01:49.960
直接把这个文案夹拽进来

01:49.960 --> 01:51.960
不仅也能打开了吗

01:51.960 --> 01:53.960
没有必要非得像我这么装

01:53.960 --> 01:54.960
OK

01:54.960 --> 01:55.960
你就打不开是吧

01:55.960 --> 01:56.960
打不开之后

01:56.960 --> 01:57.960
直接拽进来也可以

01:57.960 --> 01:58.960
还没有什么影响

01:58.960 --> 02:01.960
这个只不过是vscode自带的一个

02:01.960 --> 02:03.960
小小的一个小功能而已

02:05.960 --> 02:06.960
OK

02:06.960 --> 02:09.960
那咱们今天就接着上节课来写

02:09.960 --> 02:11.960
咱们先把它给打开

02:11.960 --> 02:13.960
OpenVSLAX Server来看一下

02:13.960 --> 02:18.850
大概就是这个样子的

02:18.850 --> 02:19.850
这个样子

02:19.850 --> 02:21.850
我们昨天已经把动画给写了

02:21.850 --> 02:22.850
包括说我点击开始

02:22.850 --> 02:23.850
小鸟可以坠了

02:23.850 --> 02:24.850
它可以坠了

02:24.850 --> 02:27.850
但是我们现在想要去

02:27.850 --> 02:29.850
判断这样一个所谓的

02:29.850 --> 02:30.850
临界条件

02:30.850 --> 02:31.850
判断的是什么

02:31.850 --> 02:33.850
上天和入地

02:33.850 --> 02:34.850
对不对

02:34.850 --> 02:35.850
只要你到天上了

02:35.850 --> 02:36.850
它会输

02:36.850 --> 02:37.850
只要你到地上了

02:37.850 --> 02:38.850
它也会输

02:38.850 --> 02:40.850
但是我们现在只能去验证一种

02:40.850 --> 02:41.850
就是什么

02:41.850 --> 02:42.850
只能落地

02:42.850 --> 02:43.850
我们现在还没有让它

02:43.850 --> 02:45.850
往上爬的这样的一个操作

02:45.850 --> 02:46.850
你得点一下

02:46.850 --> 02:48.850
能够往上面去走一会

02:48.850 --> 02:49.850
然后再往下去降

02:49.850 --> 02:50.850
对不对

02:50.850 --> 02:51.850
所以咱们今天

02:51.850 --> 02:54.850
就先把这个功能给写出来

02:54.850 --> 02:56.850
把这个功能给写出来

02:56.850 --> 02:57.850
OK

02:57.850 --> 02:58.850
咱们

02:58.850 --> 03:00.850
我们要写的

03:00.850 --> 03:01.850
这样的一个功能

03:01.850 --> 03:02.850
就是当你去点击

03:02.850 --> 03:04.850
整个复原宿的时候

03:04.850 --> 03:06.850
小鸟会往上去爬一下

03:06.850 --> 03:08.850
小鸟往上去爬

03:08.850 --> 03:09.850
那么我们是不是就要来

03:09.850 --> 03:10.850
又要来写一个

03:10.850 --> 03:12.850
点击事件了

03:12.850 --> 03:13.850
我们说了

03:13.850 --> 03:14.850
把事件都集中的

03:14.850 --> 03:15.850
放到哪里面去

03:15.850 --> 03:17.850
进行处理来着

03:17.850 --> 03:19.850
在哪里来进行处理

03:19.850 --> 03:21.850
是不是我们写的一个函数

03:21.850 --> 03:22.850
叫做handle

03:22.850 --> 03:23.850
叫做handle

03:23.850 --> 03:24.850
我们上一节课写了一个

03:24.850 --> 03:25.850
handle start

03:25.850 --> 03:26.850
那这节课呢

03:26.850 --> 03:27.850
我们要再来写

03:27.850 --> 03:29.850
一个点击复原宿的事件

03:29.850 --> 03:30.850
那我们可以给它起个名字

03:30.850 --> 03:32.850
叫做handle click

03:32.850 --> 03:34.850
叫做handle click

03:34.850 --> 03:40.740
那其实

03:40.740 --> 03:43.740
这个往上面去跳的

03:43.740 --> 03:44.740
往上面去

03:44.740 --> 03:46.740
filler这样的一个操作

03:46.740 --> 03:48.740
应该用什么样的一个思路

03:48.740 --> 03:49.740
来进行处理

03:49.740 --> 03:50.740
用什么样的思路

03:50.740 --> 03:51.740
来进行处理

03:51.740 --> 03:53.740
click

03:53.740 --> 03:55.740
想一下

03:55.740 --> 03:56.740
你是不是只需要

03:56.740 --> 03:58.740
让那个top值

03:58.740 --> 03:59.740
让那个top值

03:59.740 --> 04:01.740
改变一下就可以了

04:01.740 --> 04:03.740
我们往下的时候

04:03.740 --> 04:06.740
往下的时候是什么

04:06.740 --> 04:07.740
top值增加

04:07.740 --> 04:08.740
对不对

04:08.740 --> 04:10.740
那想让往上你top值

04:10.740 --> 04:12.740
减小是不是就可以了呀

04:12.740 --> 04:13.740
因为咱们越往上

04:13.740 --> 04:14.740
top是越来越小的

04:14.740 --> 04:16.740
我们所说的这个top

04:16.740 --> 04:19.740
是相对于复原宿的顶边的

04:19.740 --> 04:22.740
是相对于复原宿的顶边的

04:22.740 --> 04:24.740
所以说这块咱们就直接在这里面

04:24.740 --> 04:25.740
让谁呀

04:25.740 --> 04:29.740
让每一次的那个burd

04:29.740 --> 04:30.740
stop都变一下

04:30.740 --> 04:32.740
因为我们每一次让小鸟

04:32.740 --> 04:34.740
它的top有一个变化

04:34.740 --> 04:35.740
我们是不是都通过

04:35.740 --> 04:38.740
这个小鸟降落的一个部长

04:38.740 --> 04:40.740
去进行处理的呀

04:40.740 --> 04:41.740
对不对

04:41.740 --> 04:42.740
小鸟的部长一开始为零

04:42.740 --> 04:44.740
然后的过30毫秒

04:44.740 --> 04:45.740
1

04:45.740 --> 04:46.740
然后2345678910

04:46.740 --> 04:47.740
1123

04:47.740 --> 04:48.740
等等等等

04:48.740 --> 04:49.740
那等你想要往回

04:49.740 --> 04:51.740
往上面去飞的时候

04:51.740 --> 04:53.740
我直接让它等于一个复实

04:53.740 --> 04:56.740
然后再让它往后面再去累加

04:56.740 --> 04:57.740
是不是就可以了呀

04:57.740 --> 04:58.740
第一次为复实

04:58.740 --> 05:00.740
第二次加1复9复8复7复6

05:00.740 --> 05:02.740
复5复4复3复2复1

05:02.740 --> 05:03.740
0

05:03.740 --> 05:04.740
然后又开始往下去落

05:04.740 --> 05:05.740
它有这样往上

05:05.740 --> 05:07.740
然后再下来的一个过程

05:07.740 --> 05:08.740
对不对

05:08.740 --> 05:09.740
这个思路很简单

05:09.740 --> 05:10.740
就主要就是让它

05:10.740 --> 05:12.740
变成是一个复实就可以了

05:12.740 --> 05:13.740
那好

05:13.740 --> 05:14.740
那咱们来写一下点击事件

05:14.740 --> 05:15.740
给this.el

05:15.740 --> 05:17.740
来监听一下点击事件

05:17.740 --> 05:18.740
当你去点击它的时候

05:18.740 --> 05:20.740
来执行一个函数

05:20.740 --> 05:23.740
在这个函数内部需要让

05:23.740 --> 05:24.740
要谁呀

05:24.740 --> 05:25.740
让this.el

05:25.740 --> 05:26.740
bord的step y

05:26.740 --> 05:27.740
等于一个复实

05:27.740 --> 05:28.740
但是注意

05:28.740 --> 05:29.740
这里面的this

05:29.740 --> 05:30.740
不是bord了

05:30.740 --> 05:32.740
而是你去监听的那样的一个

05:32.740 --> 05:33.740
那样的一个元素

05:33.740 --> 05:35.740
所以咱们在外面

05:35.740 --> 05:36.740
保存一下帅谱

05:36.740 --> 05:37.740
等于一个this

05:37.740 --> 05:38.740
在里面

05:38.740 --> 05:40.740
我们来换成是一个soft

05:40.740 --> 05:41.740
OK

05:41.740 --> 05:43.740
那现在咱们再来看一下

05:43.740 --> 05:44.740
来点击

05:44.740 --> 05:45.740
点点点点

05:45.740 --> 05:46.740
它会往上

05:46.740 --> 05:49.740
但是这个操作就很怪异

05:49.740 --> 05:51.740
怎么可以来观察一下

05:51.740 --> 05:52.740
来

05:52.740 --> 05:53.740
我现在刷新

05:53.740 --> 05:54.740
点击

05:54.740 --> 05:55.740
看着

05:55.740 --> 05:56.740
小鸟

05:56.740 --> 05:59.740
它会先往上面去跳一下

05:59.740 --> 06:02.740
为什么先会往上去走一下呢

06:02.740 --> 06:03.740
来

06:03.740 --> 06:04.740
再来点击

06:04.740 --> 06:05.740
看着往上飞了

06:05.740 --> 06:06.740
然后往下了

06:06.740 --> 06:07.740
为什么会这样啊

06:07.740 --> 06:09.740
因为我们监听的是谁

06:09.740 --> 06:12.740
监听的是复元素的点击事件

06:12.740 --> 06:14.740
你只要点它一下

06:14.740 --> 06:16.740
小鸟的这样的一个step y

06:16.740 --> 06:18.740
不长就会为复实

06:18.740 --> 06:20.740
那你当你去点击这个

06:20.740 --> 06:22.740
开始游戏的时候

06:22.740 --> 06:24.740
你是不是就已经点击了复元素啊

06:24.740 --> 06:26.740
它是不是在这个复元素内部呀

06:26.740 --> 06:27.740
对不对

06:27.740 --> 06:30.740
那算说这块咱们就不应该

06:30.740 --> 06:32.740
当你去点击开始的时候

06:32.740 --> 06:35.740
就不应该去执行这一个逻辑

06:35.740 --> 06:38.740
那是不是我们就要去判断一下了

06:38.740 --> 06:41.740
如果说我当前点击到的这样的一个元素

06:41.740 --> 06:45.740
它是点击开始的这样的一个元素的话

06:45.740 --> 06:49.740
我就不去对不长进行一下重新的设置

06:49.740 --> 06:51.740
那怎么样能够去找到

06:51.740 --> 06:54.740
怎么样能够拿到你点击的那个元素呢

06:54.740 --> 06:56.740
怎么样能够拿到啊

06:56.740 --> 06:58.740
通过谁

06:58.740 --> 07:00.740
是不是有个事件对象异呀

07:00.740 --> 07:03.740
你通过事件对象异身上的一个target

07:03.740 --> 07:04.740
这个target

07:04.740 --> 07:07.740
就是你触发了这个事件的那个元素

07:07.740 --> 07:10.740
那是不是就拿到了那个dome了呀

07:10.740 --> 07:11.740
对不对

07:11.740 --> 07:12.740
咱们可以来console一下

07:12.740 --> 07:14.740
console.log一个1.target

07:16.740 --> 07:17.740
打开

07:17.740 --> 07:19.740
我来刷新一下console

07:19.740 --> 07:21.740
我点击开始

07:21.740 --> 07:22.740
看这个元素

07:22.740 --> 07:23.740
是不是就是start呀

07:23.740 --> 07:25.740
就找到这个元素了

07:25.740 --> 07:27.740
那我怎么样能够判断

07:27.740 --> 07:29.740
我点击的是start

07:29.740 --> 07:30.740
而不是el呢

07:30.740 --> 07:32.740
它们两个有什么区别呀

07:32.740 --> 07:34.740
start元素和复元素

07:34.740 --> 07:37.740
它们两个的区别是什么

07:37.740 --> 07:39.740
两个人长得一模一样

07:39.740 --> 07:42.740
那你怎么去区分它们呀

07:42.740 --> 07:44.740
一个两个双胞胎对吧

07:44.740 --> 07:45.740
站在你面前

07:45.740 --> 07:47.740
你一个叫小A

07:47.740 --> 07:48.740
一个叫小B

07:48.740 --> 07:49.740
那它们能够区分的

07:49.740 --> 07:50.740
就是它们的名字

07:50.740 --> 07:53.740
所以咱们再去判断两个元素

07:53.740 --> 07:55.740
它们是谁或者谁的时候

07:55.740 --> 07:57.740
看看它们叫什么名不就可以了吗

07:57.740 --> 07:58.740
那也说

07:58.740 --> 08:00.740
只要我点击到的这个元素

08:00.740 --> 08:02.740
它的名字叫做start

08:02.740 --> 08:05.740
就说明它是点击开始的那个元素了

08:05.740 --> 08:06.740
对不对

08:06.740 --> 08:07.740
所以说呢

08:07.740 --> 08:08.740
这样是不是就能够判断出来了呀

08:08.740 --> 08:10.740
那怎么样能够去判断

08:10.740 --> 08:11.740
哎

08:11.740 --> 08:12.740
它的这个类名里面

08:12.740 --> 08:13.740
包含一个start呢

08:13.740 --> 08:15.740
那也很简单哈

08:15.740 --> 08:16.740
在dom

08:16.740 --> 08:18.740
这个在dom元素上

08:18.740 --> 08:20.740
有方法叫做class list

08:20.740 --> 08:22.740
这个在上节课当中

08:22.740 --> 08:23.740
我们已经接触过了

08:23.740 --> 08:24.740
已经接触过了

08:24.740 --> 08:28.740
它能够获取到一个元素的类名的列表

08:28.740 --> 08:30.740
那它的身上呢

08:30.740 --> 08:31.740
有两个方法

08:31.740 --> 08:33.740
我们是我们上节课用过的

08:33.740 --> 08:34.740
一个是remove

08:34.740 --> 08:35.740
移除一个元素

08:35.740 --> 08:37.740
一个是移除一个类名

08:37.740 --> 08:38.740
一个是爱的

08:38.740 --> 08:39.740
添加一个类名

08:39.740 --> 08:40.740
那同样的

08:40.740 --> 08:41.740
还有另外一个

08:41.740 --> 08:42.740
叫做contance

08:42.740 --> 08:44.740
它是能够去判断

08:44.740 --> 08:47.740
这个dom元素的类名的列表当中

08:47.740 --> 08:50.740
是否包含你传进去的那个类名

08:50.740 --> 08:52.740
如果说包含了的话

08:52.740 --> 08:54.740
那么这个整体的

08:54.740 --> 08:55.740
含书的反馈值

08:55.740 --> 08:57.740
是一个不耳直处

08:57.740 --> 08:58.740
如果说不包含的话

08:58.740 --> 08:59.740
它的反馈值

08:59.740 --> 09:01.740
是一个不耳直 false

09:01.740 --> 09:03.740
那这把就回用了吧

09:03.740 --> 09:04.740
我只需要去判断一下

09:04.740 --> 09:05.740
一点target

09:05.740 --> 09:07.740
它的class list当中

09:07.740 --> 09:09.740
是否contance

09:09.740 --> 09:11.740
包含了一个类名start

09:11.740 --> 09:13.740
我就能够确定我点击到的

09:13.740 --> 09:15.740
是不是那个点击开始了

09:15.740 --> 09:17.740
看这我点击它 false

09:17.740 --> 09:18.740
点击这 false

09:18.740 --> 09:20.740
点击小鸟 false

09:20.740 --> 09:22.740
点击点击开始处

09:22.740 --> 09:24.740
这是不是就能够判断出来了呀

09:24.740 --> 09:25.740
对不对

09:25.740 --> 09:26.740
就能够判断出来了

09:26.740 --> 09:27.740
好嘞

09:27.740 --> 09:28.740
那这块呢

09:28.740 --> 09:30.740
我们就可以来aff一下

09:30.740 --> 09:31.740
aff

09:31.740 --> 09:33.740
一点target

09:33.740 --> 09:34.740
我直接复制一下吧

09:34.740 --> 09:35.740
算了

09:35.740 --> 09:36.740
我不复制了

09:36.740 --> 09:37.740
改一下

09:38.740 --> 09:42.180
如果它点击

09:42.180 --> 09:44.180
放这里来

09:44.180 --> 09:46.180
这是不是就把这个判断条件

09:46.180 --> 09:47.180
给搞定了呀

09:47.180 --> 09:48.180
那么我们再来看一下

09:48.180 --> 09:49.180
点击开始

09:49.180 --> 09:50.180
哎

09:50.180 --> 09:52.180
它好像还是会往上一下呢

09:52.180 --> 09:53.180
没关系

09:53.180 --> 09:55.180
如果说它

09:55.180 --> 09:58.180
如果说它不包含的话

09:58.180 --> 10:00.180
我们采取

10:00.180 --> 10:02.180
让它的不成变一下

10:02.180 --> 10:03.180
刚才这逻辑有问题

10:03.180 --> 10:05.180
如果说不包含的话

10:05.180 --> 10:07.180
才让它往上喊

10:07.180 --> 10:08.180
再来点击开始

10:08.180 --> 10:09.180
它就不往上了

10:09.180 --> 10:10.180
而是往下了

10:10.180 --> 10:11.180
对不对

10:11.180 --> 10:12.180
就往下了

10:12.180 --> 10:13.180
有同学说

10:13.180 --> 10:15.180
不是有一个start flag吗

10:15.180 --> 10:18.180
你用这个判断也可以

10:18.180 --> 10:19.180
那我们可以来试一下

10:19.180 --> 10:21.180
如果说当前的

10:21.180 --> 10:23.180
这个start flag

10:23.180 --> 10:26.940
self.start flag

10:26.940 --> 10:28.940
它存放着的是

10:28.940 --> 10:30.940
当前的游戏是否已经开始了

10:30.940 --> 10:31.940
对不对

10:31.940 --> 10:32.940
那这样我们来判断一下

10:32.940 --> 10:33.940
看看是否可以吧

10:33.940 --> 10:34.940
来点击

10:34.940 --> 10:37.940
它还是会稍稍的往上一点

10:37.940 --> 10:38.940
因为有一个什么

10:38.940 --> 10:40.940
同步执行的一个效果

10:40.940 --> 10:41.940
它是什么

10:41.940 --> 10:43.940
你点击了这个地方

10:43.940 --> 10:45.940
点击了这个地方

10:45.940 --> 10:47.940
它还是会直接执行

10:47.940 --> 10:48.940
这里边的一个逻辑

10:48.940 --> 10:50.940
虽然你用它是没有什么用的

10:50.940 --> 10:51.940
它们俩是一起来执行的

10:51.940 --> 10:52.940
一起来执行的

10:52.940 --> 10:53.940
清楚了吗

10:53.940 --> 10:54.940
所以咱们最好用什么

10:54.940 --> 10:56.940
用这个元素身上的

10:56.940 --> 10:58.940
类名去进行判断

10:58.940 --> 11:00.940
会更严谨一些

11:00.940 --> 11:01.940
会更严谨一些

11:01.940 --> 11:02.940
好了

11:02.940 --> 11:04.940
那现在咱们再来看一下

11:04.940 --> 11:05.940
刷新

11:05.940 --> 11:06.940
再来看一下

11:06.940 --> 11:08.940
这个小鸟

11:08.940 --> 11:10.940
它是不是没落到底的时候

11:10.940 --> 11:11.940
就怎么样

11:11.940 --> 11:13.940
就死了

11:13.940 --> 11:15.940
就死了

11:15.940 --> 11:16.940
为什么呀

11:16.940 --> 11:17.940
哎

11:17.940 --> 11:19.940
怎么还上去了呢

11:19.940 --> 11:23.960
刷新刷新刷新

11:23.960 --> 11:24.960
OK

11:24.960 --> 11:26.960
它怎么没落到底的时候

11:26.960 --> 11:27.960
就死掉了呢

11:27.960 --> 11:29.960
为什么会有这样的一个现象呢

11:29.960 --> 11:31.960
咱们明明判断的是

11:31.960 --> 11:32.960
当你的小鸟

11:32.960 --> 11:35.960
它到零件值570的时候

11:35.960 --> 11:37.960
才去执行什么

11:37.960 --> 11:38.960
执行feel game

11:38.960 --> 11:40.960
那为什么现在这个小鸟

11:40.960 --> 11:41.960
它就出现

11:41.960 --> 11:42.960
它就没有到底的时候

11:42.960 --> 11:43.960
就死了呀

11:43.960 --> 11:44.960
哎对

11:44.960 --> 11:46.960
是因为过渡导致的

11:46.960 --> 11:47.960
你想一下

11:47.960 --> 11:49.960
我们这个小鸟

11:49.960 --> 11:51.960
是不是当你的top值改变了的时候

11:51.960 --> 11:54.960
有一个300毫秒的过渡时间呀

11:54.960 --> 11:55.960
那也就是说

11:55.960 --> 11:56.960
我们每一次

11:56.960 --> 11:58.960
让小鸟去一动个

11:58.960 --> 11:59.960
一向速的时候

11:59.960 --> 12:01.960
它都需要用300毫秒的

12:01.960 --> 12:03.960
一个时间来完成

12:03.960 --> 12:05.960
那你当你累积的时候

12:05.960 --> 12:06.960
累积

12:06.960 --> 12:08.960
其实你现在小鸟都应该

12:08.960 --> 12:09.960
已经到哪里了呀

12:09.960 --> 12:10.960
小鸟都已经到

12:10.960 --> 12:12.960
比如说到570向速了

12:12.960 --> 12:14.960
但是你在页面上

12:14.960 --> 12:15.960
由于有一个过渡的效果

12:15.960 --> 12:17.960
它还在中间呢

12:17.960 --> 12:18.960
因为我们说了

12:18.960 --> 12:19.960
走一向速

12:19.960 --> 12:21.960
它都需要用300毫秒的时间

12:21.960 --> 12:23.960
但是我们这个定时器

12:23.960 --> 12:25.960
设置的这样的一个top值

12:25.960 --> 12:26.960
它是不等待的

12:26.960 --> 12:27.960
它是不等待的

12:27.960 --> 12:28.960
所以说呢

12:28.960 --> 12:30.960
我们要想让小鸟往下去追的话

12:30.960 --> 12:33.960
应该把小鸟的过渡给取消

12:33.960 --> 12:35.960
应该把小鸟的过渡给取消

12:35.960 --> 12:37.960
那在哪里去取消啊

12:37.960 --> 12:39.960
是不是当你去点击了

12:39.960 --> 12:41.960
点击开始这个文字的时候

12:41.960 --> 12:44.960
去把小鸟的过渡给干掉啊

12:44.960 --> 12:45.960
对不对

12:45.960 --> 12:47.960
那又回到这个时间当中来了

12:47.960 --> 12:49.960
我们直接来设置一下

12:49.960 --> 12:56.040
让小鸟的style当中的transition

12:56.040 --> 12:57.040
为一个难

12:57.040 --> 12:59.040
这样子就取消掉了

12:59.040 --> 13:01.040
那怎么再来

13:01.040 --> 13:02.040
点击开始

13:02.040 --> 13:03.040
看

13:03.040 --> 13:05.040
它是不是就直接落下来了呀

13:05.040 --> 13:06.040
再放心一下

13:06.040 --> 13:08.040
再点击开始下来了

13:08.040 --> 13:09.040
对不对

13:09.040 --> 13:11.040
这样是不是就没有什么问题了

13:11.040 --> 13:12.040
OK

13:12.040 --> 13:13.040
那这个呢就解决掉了

13:13.040 --> 13:14.040
这个就是上节课

13:14.040 --> 13:16.040
我跟大家说的那个小线相

13:16.040 --> 13:18.040
然后留到这一刻就来把它也搞定了

13:18.040 --> 13:19.040
好了

13:19.040 --> 13:21.040
那现在咱们再来测试一下

13:21.040 --> 13:22.040
还相信一下

13:22.040 --> 13:23.040
我点击开始让小鸟往上

13:23.040 --> 13:24.040
这是不就上去了

13:24.040 --> 13:25.040
然后往上

13:25.040 --> 13:26.040
你看

13:26.040 --> 13:27.040
到底的时候

13:27.040 --> 13:28.040
它是不是就怎么样

13:28.040 --> 13:29.040
就死了

13:29.040 --> 13:30.040
再来点击开始

13:30.040 --> 13:31.040
我一直按

13:31.040 --> 13:32.040
往上

13:32.040 --> 13:33.040
是不是就上去了呀

13:33.040 --> 13:34.040
对吧

13:34.040 --> 13:35.040
这个就写完了

13:35.040 --> 13:36.040
我们要再来进行

13:36.040 --> 13:39.040
下一次碰撞的一个检测

13:39.040 --> 13:41.040
因为碰撞检测有两种

13:41.040 --> 13:42.040
一种是零件值

13:42.040 --> 13:44.040
一种是柱子的一个碰撞

13:44.040 --> 13:47.040
那要想进行柱子的一个碰撞检测的话

13:47.040 --> 13:51.040
我们需要先让柱子出来吧

13:51.040 --> 13:53.040
是不是得先让柱子出来呀

13:53.040 --> 13:55.040
所以说应该怎么办

13:55.040 --> 13:57.040
先去创建出来柱子

13:57.040 --> 14:00.040
那什么时候去创建柱子呀

14:00.040 --> 14:02.040
什么时候去创建柱子

14:02.040 --> 14:04.040
是不是得当你去

14:04.040 --> 14:06.040
点击开始的时候

14:06.040 --> 14:08.040
去创建出来这个柱子

14:08.040 --> 14:10.040
ok 那我们在handle starter当中

14:10.040 --> 14:12.040
来执行一个函数

14:12.040 --> 14:13.040
比如说管它叫做

14:13.040 --> 14:16.040
create

14:16.040 --> 14:18.040
一个pack

14:18.040 --> 14:24.800
这个函数是专门用来去创建柱子的

14:24.800 --> 14:28.800
这一个函数能够创建出来一个柱子

14:28.800 --> 14:30.800
那我们来想一下

14:30.800 --> 14:32.800
怎么样去创建柱子

14:32.800 --> 14:34.800
你怎么样去描述这个柱子

14:34.800 --> 14:36.800
咋去描述啊

14:36.800 --> 14:40.370
想一下 思考一下

14:40.370 --> 14:44.940
你想你描述一个人

14:44.940 --> 14:45.940
你是不是得说

14:45.940 --> 14:47.940
他现在在几点钟方向

14:47.940 --> 14:49.940
在你前面几步 右面几步

14:49.940 --> 14:51.940
先把他的位置给描述出来

14:51.940 --> 14:54.940
其次是穿着什么衣服长什么样

14:54.940 --> 14:55.940
对不对

14:55.940 --> 14:57.940
是不是要这样子去描述一个人啊

14:57.940 --> 14:59.940
不用够做函数啊

14:59.940 --> 15:01.940
对 他多高啊

15:01.940 --> 15:03.940
多胖 是胖还是瘦啊

15:03.940 --> 15:05.940
他衣服穿什么

15:05.940 --> 15:07.940
他具体在哪个方位啊

15:07.940 --> 15:09.940
你把他的这个位置给描述出来

15:09.940 --> 15:11.940
那所以我们想要去创建一个柱子

15:11.940 --> 15:14.940
我们也要去考虑这个柱子在哪

15:14.940 --> 15:15.940
那你看啊

15:15.940 --> 15:17.940
柱子是不是应该是一顿啊

15:17.940 --> 15:18.940
这是一个柱子

15:18.940 --> 15:20.940
这是底下

15:20.940 --> 15:22.940
那长一点啊

15:22.940 --> 15:27.980
放下 我重来一下

15:27.980 --> 15:29.980
OK 在这

15:29.980 --> 15:32.980
上面一个柱子

15:32.980 --> 15:34.980
下边一个柱子

15:34.980 --> 15:36.980
那距离他们的复原素

15:36.980 --> 15:37.980
多远呢

15:37.980 --> 15:38.980
给一个直

15:38.980 --> 15:39.980
对不对

15:39.980 --> 15:40.980
给一个直 OK

15:40.980 --> 15:42.980
那上面的这个柱子有多高

15:42.980 --> 15:43.980
下面这个柱子有多高

15:43.980 --> 15:46.980
他使用的这样的一个背景是什么

15:46.980 --> 15:48.980
咱们都是我们在这样的一个

15:48.980 --> 15:49.980
create pipe当中

15:49.980 --> 15:51.980
要去考虑的一个问题

15:51.980 --> 15:52.980
OK

15:52.980 --> 15:54.980
那首先咱们先把他的一个

15:54.980 --> 15:56.980
高度给求出来

15:56.980 --> 15:58.980
高度给求出来

15:58.980 --> 16:00.980
pipe一个height

16:00.980 --> 16:02.980
声明出来一个变量

16:02.980 --> 16:03.980
pipe height

16:03.980 --> 16:04.980
那么注意

16:04.980 --> 16:06.980
上柱子和下柱子

16:06.980 --> 16:08.980
他们俩的高度他是不一的

16:08.980 --> 16:10.980
但是有一个地方

16:10.980 --> 16:12.980
是始终是一样的

16:12.980 --> 16:13.980
我们可以来观察一下

16:13.980 --> 16:14.980
来点击

16:14.980 --> 16:15.980
看这

16:15.980 --> 16:17.980
每一个柱子之间的

16:17.980 --> 16:18.980
这样的一个间隙

16:18.980 --> 16:19.980
它是固定的

16:19.980 --> 16:20.980
它是固定的

16:20.980 --> 16:21.980
但是

16:21.980 --> 16:24.980
上下柱子的高度是随机的

16:24.980 --> 16:25.980
也就是说

16:25.980 --> 16:26.980
他们两个随机

16:26.980 --> 16:28.980
评分剩下的这个空间

16:28.980 --> 16:30.980
除了空隙之间的这个空间

16:30.980 --> 16:32.980
然后最矮是多少呢

16:32.980 --> 16:33.980
注意

16:33.980 --> 16:35.980
我们的这个柱子

16:35.980 --> 16:37.980
最矮不能小于50像素

16:37.980 --> 16:38.980
要不然它就没了

16:38.980 --> 16:39.980
要不然就能没了

16:39.980 --> 16:41.980
所以我们就要给个范围

16:41.980 --> 16:42.980
就给个范围

16:42.980 --> 16:43.980
一个柱子

16:43.980 --> 16:45.980
它的一个高度

16:45.980 --> 16:46.980
最少为50像素

16:46.980 --> 16:48.980
最少为50像素

16:48.980 --> 16:50.980
然后其次是空间是怎么样

16:50.980 --> 16:52.980
有600

16:52.980 --> 16:53.980
减去150

16:53.980 --> 16:55.980
450的一个空间

16:55.980 --> 16:56.980
对不对

16:56.980 --> 16:57.980
想一下

16:57.980 --> 16:58.980
对

16:58.980 --> 17:00.980
中间的间隙是固定的

17:00.980 --> 17:03.980
上下和上柱子和下柱子的高度

17:03.980 --> 17:04.980
是随机的

17:04.980 --> 17:06.980
但是最低是一个50像素

17:06.980 --> 17:08.980
那我们来按照这个思路

17:08.980 --> 17:09.980
来想一下

17:09.980 --> 17:10.980
怎么样去写

17:10.980 --> 17:11.980
怎么样去写

17:11.980 --> 17:12.980
首先

17:12.980 --> 17:13.980
你得去求一下吧

17:13.980 --> 17:15.980
求一下上柱子的一个高度

17:15.980 --> 17:17.980
或一个up height

17:17.980 --> 17:18.980
懂于谁呀

17:18.980 --> 17:19.980
懂于谁

17:19.980 --> 17:21.980
随机的一个高度

17:21.980 --> 17:23.980
随机的高度

17:23.980 --> 17:24.980
那是不是就是

17:24.980 --> 17:26.980
mys,ear,floor

17:27.980 --> 17:29.980
mys,random

17:29.980 --> 17:31.980
求一个随机数

17:31.980 --> 17:32.980
mys,random

17:32.980 --> 17:33.980
求一个随机数

17:33.980 --> 17:34.980
那这个随机数

17:34.980 --> 17:36.980
给的是几到几之间呀

17:36.980 --> 17:38.980
几到几之间

17:38.980 --> 17:41.980
0到1之间的一个小数

17:41.980 --> 17:44.980
那如果说我想要去求得一个柱子的话

17:44.980 --> 17:47.980
它肯定不是0到1之间的一个像素吧

17:47.980 --> 17:48.980
那都没了

17:48.980 --> 17:49.980
是不是

17:49.980 --> 17:50.980
就没了

17:50.980 --> 17:51.980
所以这块我们应该

17:51.980 --> 17:53.980
先来求得一个整数

17:53.980 --> 17:54.980
就比如说

17:54.980 --> 17:55.980
我们中间

17:55.980 --> 17:57.980
让柱子中间的这样的一个间隙

17:57.980 --> 17:59.980
是150像素

17:59.980 --> 18:00.980
是150像素

18:00.980 --> 18:01.980
那么也就是说

18:01.980 --> 18:03.980
上柱子和下柱子

18:03.980 --> 18:05.980
加在一起是多少

18:05.980 --> 18:07.980
上柱子和下柱子加在一起

18:07.980 --> 18:09.980
是不是600减去450

18:09.980 --> 18:10.980
等于几呀

18:10.980 --> 18:11.980
减去150等于减

18:11.980 --> 18:12.980
450吧

18:12.980 --> 18:13.980
450

18:13.980 --> 18:15.980
除以2等于减

18:15.980 --> 18:17.980
除以2等于减

18:17.980 --> 18:18.980
够算一下

18:18.980 --> 18:19.980
225

18:19.980 --> 18:22.290
也就是说呢

18:22.290 --> 18:23.290
我们一个柱子

18:23.290 --> 18:24.290
最好的柱子

18:24.290 --> 18:25.290
比如说呢

18:25.290 --> 18:27.290
我们一个柱子最好是随机的

18:27.290 --> 18:29.290
0到225之间的一个数字

18:29.290 --> 18:32.290
那我就乘胜一个225

18:32.290 --> 18:33.290
乘胜一个225

18:33.290 --> 18:34.290
OK

18:34.290 --> 18:35.290
好了

18:35.290 --> 18:36.290
那么我问大家

18:36.290 --> 18:38.290
由于你乘胜一个225之后

18:38.290 --> 18:41.290
我求的这个数字是多少啊

18:41.290 --> 18:42.290
是多少

18:42.290 --> 18:46.290
就是0到225之间的一个

18:46.290 --> 18:47.290
什么数啊

18:47.290 --> 18:48.290
小数吧

18:48.290 --> 18:50.290
但是我要求整

18:50.290 --> 18:51.290
我要取整

18:51.290 --> 18:52.290
那所以呢

18:52.290 --> 18:53.290
我来给它进行一下

18:53.290 --> 18:55.290
向下取整

18:55.290 --> 18:56.290
也就是说

18:56.290 --> 19:00.290
比如说你求得了一个210.999

19:00.290 --> 19:01.290
这样的一个小数

19:01.290 --> 19:04.290
我就把它变成是一个210像素

19:04.290 --> 19:05.290
我要去取整

19:05.290 --> 19:06.290
我要去取整

19:06.290 --> 19:07.290
清楚了吧

19:07.290 --> 19:09.290
这个是没有什么问题

19:09.290 --> 19:11.290
取得让你up hat

19:11.290 --> 19:12.290
但是

19:12.290 --> 19:14.290
虽然说能够通过这样的形式

19:14.290 --> 19:15.290
求得什么

19:15.290 --> 19:19.290
请求得0到225之间的一个整数

19:19.290 --> 19:21.290
但是也不是我们想要的

19:21.290 --> 19:22.290
因为我们说了

19:22.290 --> 19:25.290
住子它最小多少

19:25.290 --> 19:27.290
最短最短是50像素

19:27.290 --> 19:29.290
但是你现在0到225之间

19:29.290 --> 19:31.290
那是啥了呀

19:31.290 --> 19:32.290
是啥了

19:32.290 --> 19:34.290
你还可能是小于50的呀

19:34.290 --> 19:35.290
那所以呢

19:35.290 --> 19:38.290
我在前面再加上一个50

19:38.290 --> 19:39.290
那如果说你在前面

19:39.290 --> 19:40.290
加上一个50的话

19:40.290 --> 19:42.290
它求得的这样的一个区间

19:42.290 --> 19:43.290
是多少了呀

19:43.290 --> 19:47.290
是50到275之间的一个整数了

19:47.290 --> 19:48.290
那我想要什么

19:48.290 --> 19:50.290
想要50到225之间的一个小数

19:50.290 --> 19:52.290
所以我后面就不能乘上225了

19:52.290 --> 19:55.290
而是去乘上一个175

19:55.290 --> 19:56.290
这个能懂吧

19:56.290 --> 19:58.290
求得上住子的一个高度

19:58.290 --> 20:00.290
上住子的一个高度

20:00.290 --> 20:01.290
接着我是不是就可以

20:01.290 --> 20:03.290
根据这样一个down hat

20:03.290 --> 20:04.290
up hat

20:04.290 --> 20:06.290
求得一个down hat呀

20:06.290 --> 20:09.290
那down hat是多少

20:09.290 --> 20:10.290
是多少

20:10.290 --> 20:12.290
是不是就是600像素

20:12.290 --> 20:15.290
减去中间的150像素

20:15.290 --> 20:17.290
再去减去一个谁呀

20:17.290 --> 20:19.290
减去一个up hat

20:19.290 --> 20:20.290
ok

20:20.290 --> 20:22.290
有朋友说了

20:22.290 --> 20:23.290
顾久南文同学说

20:23.290 --> 20:24.290
master random

20:24.290 --> 20:26.290
出来的不是0到1之间的小数吗

20:26.290 --> 20:27.290
是啊

20:27.290 --> 20:29.290
刚刚不是一直都跟大家说吗

20:29.290 --> 20:31.290
你master random

20:31.290 --> 20:33.290
是0到1之间的一个小数

20:33.290 --> 20:36.290
但是乘上一个175了

20:36.290 --> 20:40.290
不就是一个0到175之间的小数了吗

20:40.290 --> 20:41.290
想一下

20:41.290 --> 20:42.290
0到1

20:42.290 --> 20:43.290
对吧

20:43.290 --> 20:44.290
0到1

20:44.290 --> 20:45.290
他们呢

20:45.290 --> 20:47.290
乘上一个175

20:47.290 --> 20:50.290
那不就等于0到175了吗

20:50.290 --> 20:51.290
是不是

20:51.290 --> 20:54.290
这是一个比较简单的数学运算

20:54.290 --> 20:55.290
给了一个范围而已

20:55.290 --> 20:56.290
给了一个范围

20:56.290 --> 20:57.290
ok

20:57.290 --> 21:00.290
那down hat就出来了

21:00.290 --> 21:01.290
那我们是不是就可以

21:01.290 --> 21:03.290
根据这个up hat

21:03.290 --> 21:04.290
和这个down hat

21:04.290 --> 21:06.290
去取出来一个什么呀

21:06.290 --> 21:10.290
去生成出来一个元素

21:10.290 --> 21:11.290
生成出来一个元素

21:11.290 --> 21:13.290
那生成元素

21:13.290 --> 21:15.290
你不能只有高吧

21:15.290 --> 21:16.290
你是不是还得有宽度啊

21:16.290 --> 21:18.290
你是不是还得有它的一个

21:18.290 --> 21:19.290
所谓的柱子啊

21:19.290 --> 21:20.290
那这个柱子

21:20.290 --> 21:22.290
我们不会什么converse

21:22.290 --> 21:23.290
啥都不会

21:23.290 --> 21:24.290
那我们用什么呀

21:24.290 --> 21:25.290
用图片来做

21:25.290 --> 21:26.290
用图片来做

21:26.290 --> 21:28.290
那如果说你这块设置的话

21:28.290 --> 21:30.290
你想要用到js当中

21:30.290 --> 21:32.290
去进行一个集中的设置

21:32.290 --> 21:33.290
会比较麻烦

21:33.290 --> 21:34.290
那所以呢

21:34.290 --> 21:36.290
我们就放到Css当中去进行设置

21:36.290 --> 21:38.290
那怎么去设置呢

21:38.290 --> 21:39.290
想一下

21:39.290 --> 21:40.290
想一下

21:40.290 --> 21:41.290
我有一个元素

21:41.290 --> 21:42.290
这个元素呢

21:42.290 --> 21:43.290
还没创建出来呢

21:43.290 --> 21:45.290
但是我想在它创建出来之后呢

21:45.290 --> 21:47.290
能够去使用到一个样式

21:47.290 --> 21:49.290
那我是不是就可以给它一个类名

21:49.290 --> 21:51.290
通过那个类名去进行设置呀

21:51.290 --> 21:53.290
是不是这样的

21:53.290 --> 21:55.290
对不对

21:55.290 --> 21:57.290
想一下

21:57.290 --> 21:59.290
因为我们要在js当中

21:59.290 --> 22:02.290
去给它设置背景图片

22:02.290 --> 22:03.290
去设置宽度

22:03.290 --> 22:05.290
这种固定的样式

22:05.290 --> 22:07.290
会比较麻烦

22:07.290 --> 22:08.290
会比较麻烦

22:08.290 --> 22:09.290
我们放到Css当中

22:09.290 --> 22:10.290
去进行集中管理

22:10.290 --> 22:11.290
不会更好吗

22:11.290 --> 22:12.290
是不是

22:12.290 --> 22:13.290
所以咱们这块呢

22:13.290 --> 22:14.290
就最好写出来一个类名

22:14.290 --> 22:15.290
写出来一个类名

22:15.290 --> 22:16.290
管它叫什么呢

22:16.290 --> 22:17.290
叫做puff

22:17.290 --> 22:19.290
一旦我把管子

22:19.290 --> 22:20.290
这样的一个元素

22:20.290 --> 22:21.290
给创建出来了

22:21.290 --> 22:23.290
我就给它设置上

22:23.290 --> 22:25.290
这样的一个类名

22:25.290 --> 22:26.290
不就可以了吗

22:26.290 --> 22:28.290
它这个不就生效了吗

22:28.290 --> 22:29.290
对不对

22:29.290 --> 22:30.290
OK

22:30.290 --> 22:31.290
好了

22:31.290 --> 22:32.290
我现在给它一个宽度

22:32.290 --> 22:33.290
因为它们的宽度

22:33.290 --> 22:34.290
都是固定的

22:34.290 --> 22:36.290
给一个52像素

22:36.290 --> 22:37.290
接着

22:37.290 --> 22:38.290
再给个什么呢

22:38.290 --> 22:40.290
上柱子和下柱子

22:40.290 --> 22:42.290
是不是都有一个背景图片呢

22:42.290 --> 22:43.290
是不是都有一个背景图片

22:43.290 --> 22:44.290
比如说

22:44.290 --> 22:46.290
咱现在就在这块

22:46.290 --> 22:47.290
来写一个DIV

22:47.290 --> 22:49.290
管它叫做puff

22:49.290 --> 22:50.290
管它叫做puff

22:50.290 --> 22:52.290
给它设置一个宽度

22:52.290 --> 22:53.290
为一个52

22:53.290 --> 22:54.290
高度呢

22:54.290 --> 22:57.290
给一个150像素吧

22:57.290 --> 22:58.290
给一个150像素

22:58.290 --> 22:59.290
接着

22:59.290 --> 23:00.290
给它一个Background

23:00.290 --> 23:01.290
Color

23:01.290 --> 23:02.290
为一个Ride

23:02.290 --> 23:03.290
咱们来看一下

23:03.290 --> 23:04.290
有没有

23:04.290 --> 23:05.290
刷新一下

23:05.290 --> 23:07.290
没有出现

23:07.290 --> 23:09.290
我放到哪里去了呀

23:09.290 --> 23:11.290
我放到暗的当中去了

23:11.290 --> 23:12.290
尴尬了

23:12.290 --> 23:13.290
把它拿出来

23:13.290 --> 23:14.290
把这个元素拿出来

23:14.290 --> 23:15.290
放到暗的

23:15.290 --> 23:16.290
兄弟元素上

23:16.290 --> 23:17.290
说再来看

23:17.290 --> 23:18.290
看这儿

23:18.290 --> 23:19.290
它是不是就在这儿了呀

23:19.290 --> 23:20.290
对不对

23:20.290 --> 23:21.290
OK

23:21.290 --> 23:22.290
那其实呢

23:22.290 --> 23:23.290
我们是不是得需要去给它

23:23.290 --> 23:24.290
变成是一个管子

23:24.290 --> 23:25.290
那管子

23:25.290 --> 23:26.290
我们说了用什么

23:26.290 --> 23:28.290
用背景图片来做

23:28.290 --> 23:29.290
那这块有个puff1

23:29.290 --> 23:30.290
puff1来看一下

23:30.290 --> 23:31.290
哎

23:31.290 --> 23:32.290
是

23:32.290 --> 23:33.290
你看

23:33.290 --> 23:34.290
这应该是下柱子吧

23:34.290 --> 23:35.290
因为下柱子长什么呀

23:35.290 --> 23:36.290
它这个

23:36.290 --> 23:37.290
道道

23:37.290 --> 23:39.290
这个上边的这个口

23:39.290 --> 23:40.290
朝上

23:40.290 --> 23:41.290
那下柱子呢

23:41.290 --> 23:42.290
这个口

23:42.290 --> 23:43.290
朝下

23:43.290 --> 23:44.290
所以咱们应该给

23:44.290 --> 23:45.290
上柱子去设置一个

23:45.290 --> 23:47.290
背景图片为什么呀

23:47.290 --> 23:49.290
为这个puff2.png

23:49.290 --> 23:50.290
来 设置一下

23:50.290 --> 23:51.290
使用UIL

23:51.290 --> 23:52.290
当前录像下的

23:52.290 --> 23:53.290
嗯

23:53.290 --> 23:54.290
上一集录像下的

23:54.290 --> 23:55.290
嗯

23:55.290 --> 23:58.290
Amages当中的puff2.png

23:58.290 --> 23:59.290
那咱们再来看

23:59.290 --> 24:00.290
有没有什么问题

24:00.290 --> 24:02.290
好像是有点问题

24:02.290 --> 24:03.290
为什么有点问题呢

24:03.290 --> 24:04.290
因为

24:04.290 --> 24:06.290
由于说你这个元素的

24:06.290 --> 24:07.290
高度

24:07.290 --> 24:08.290
150像素

24:08.290 --> 24:09.290
比图片小

24:09.290 --> 24:10.290
那

24:10.290 --> 24:11.290
又因为你一个元素

24:11.290 --> 24:13.290
去使用这个图片的话

24:13.290 --> 24:15.290
它是从图片的哪开始啊

24:15.290 --> 24:16.290
左上就要开始的

24:16.290 --> 24:17.290
那随着这块

24:17.290 --> 24:19.290
你是不是应该去调整一下

24:19.290 --> 24:21.290
这个图片的一个

24:21.290 --> 24:22.290
Y方向

24:22.290 --> 24:24.290
数值方向上的一个位置呀

24:24.290 --> 24:25.290
对不对

24:25.290 --> 24:26.290
对

24:26.290 --> 24:27.290
用projection

24:27.290 --> 24:28.290
那随着这块我们来设置一下

24:28.290 --> 24:29.290
让

24:29.290 --> 24:30.290
background.projection.y

24:30.290 --> 24:32.290
为一个bottom

24:32.290 --> 24:34.290
让它从图片的底部

24:34.290 --> 24:35.290
开始去用

24:35.290 --> 24:36.290
那这块

24:36.290 --> 24:37.290
它是不是就出来了呀

24:37.290 --> 24:38.290
这个是上柱子

24:38.290 --> 24:40.290
那我们是不是还有下柱子呀

24:40.290 --> 24:42.290
那下柱子的话

24:42.290 --> 24:43.290
假设说我们现在

24:43.290 --> 24:45.290
这块用的就是下柱子

24:45.290 --> 24:47.290
那它的一个background.ground.image

24:47.290 --> 24:49.290
应该使用的是谁呀

24:49.290 --> 24:52.290
background.ground.image

24:52.290 --> 24:54.290
使用的是刚刚说的

24:54.290 --> 24:56.290
什么pip1.2

24:56.290 --> 24:57.290
偏这吧

24:57.290 --> 24:58.290
再来看

24:58.290 --> 24:59.290
说的是它

24:59.290 --> 25:00.290
那同样的

25:00.290 --> 25:02.290
你是不是得让那个管子

25:02.290 --> 25:03.290
那个口

25:03.290 --> 25:04.290
在上边呀

25:04.290 --> 25:06.290
那咱们是不是得仍然去设置一下

25:06.290 --> 25:07.290
什么

25:07.290 --> 25:08.290
在它的一个定位

25:08.290 --> 25:10.290
你不能让它从bottom开始了

25:10.290 --> 25:11.290
而是不需要再去

25:11.290 --> 25:12.290
单独的去设置一下了

25:12.290 --> 25:13.290
是不是

25:13.290 --> 25:14.290
这个就是下柱子了

25:14.290 --> 25:15.290
那你看

25:15.290 --> 25:17.290
我们上柱子和下柱子

25:17.290 --> 25:19.290
它们两个很有共同的样式

25:19.290 --> 25:20.290
又有不同的样式

25:20.290 --> 25:21.290
那此时

25:21.290 --> 25:23.290
是不是多设置一个class

25:23.290 --> 25:24.290
会更好一点

25:24.290 --> 25:27.290
上柱子就叫做pipal.app

25:29.290 --> 25:30.290
下柱子呢

25:30.290 --> 25:34.290
叫做pipal.bottom

25:34.290 --> 25:36.290
我们通过这两个

25:36.290 --> 25:37.290
内名

25:37.290 --> 25:39.290
去给它设置不同的样式

25:39.290 --> 25:40.290
通过相同的内名

25:40.290 --> 25:41.290
去给它设置

25:41.290 --> 25:43.290
相同的

25:43.290 --> 25:44.290
样式就可以了

25:44.290 --> 25:45.290
对不对

25:45.290 --> 25:46.290
那咱们把它拿过来

25:46.290 --> 25:47.290
我们说了

25:47.290 --> 25:48.290
上下柱子

25:48.290 --> 25:49.290
background

25:49.290 --> 25:50.290
使用pip1

25:50.290 --> 25:53.290
然后不需要去给它设置position

25:53.290 --> 25:54.290
那上柱子呢

25:54.290 --> 25:56.290
需要去给它设置position

25:56.290 --> 25:58.290
咱把它集中的拿下来

25:58.290 --> 25:59.290
之后

25:59.290 --> 26:00.290
我们就单独的给它

26:00.290 --> 26:01.290
来添加class就可以了

26:01.290 --> 26:02.290
比如说

26:02.290 --> 26:04.290
再来一个pipal.app

26:04.290 --> 26:05.290
看这

26:05.290 --> 26:06.290
上柱子了呀

26:06.290 --> 26:08.290
再把它变成是一个pipal.bottom

26:08.290 --> 26:11.290
这是不是下柱子的一个样式了呀

26:11.290 --> 26:12.290
对不对

26:12.290 --> 26:13.290
那这个就搞定了

26:13.290 --> 26:15.290
接着我们再来分析一下

26:15.290 --> 26:16.290
分析什么呢

26:16.290 --> 26:17.290
每一个柱子

26:17.290 --> 26:19.290
它所在的位置都不一样

26:19.290 --> 26:21.290
而且他们还会去移动

26:21.290 --> 26:22.290
自己的位置

26:22.290 --> 26:24.290
那这个显然是用什么来做的

26:24.290 --> 26:25.290
是吧

26:25.290 --> 26:27.290
还是一样的道理吧

26:27.290 --> 26:28.290
用定位

26:28.290 --> 26:29.290
对不对

26:29.290 --> 26:30.290
让它相对于

26:30.290 --> 26:31.290
副元素来一个定位

26:31.290 --> 26:32.290
所以pip

26:32.290 --> 26:34.290
给它一个position

26:35.290 --> 26:36.290
我最最开始的时候

26:36.290 --> 26:37.290
我给它设置top

26:37.290 --> 26:39.290
不给的是top

26:39.290 --> 26:40.290
给的是一个live的

26:40.290 --> 26:41.290
让它距离屏幕的

26:41.290 --> 26:43.290
左边为一个300像素

26:43.290 --> 26:44.290
那么它呢

26:44.290 --> 26:45.290
就到这里来了

26:47.290 --> 26:49.290
bottom那什么意思

26:49.290 --> 26:51.290
你是说这个类名吗

26:51.290 --> 26:52.290
类名吗

26:52.290 --> 26:53.290
app是上

26:53.290 --> 26:54.290
bottom是下

26:54.290 --> 26:56.290
bottom是下

26:56.290 --> 26:57.290
一个上柱子

26:57.290 --> 26:58.290
一个下柱子

26:58.290 --> 27:01.290
我们用类名来进行了区分

27:01.290 --> 27:02.290
清楚了吗

27:06.330 --> 27:07.330
ok ok

27:09.330 --> 27:10.330
说什么呢

27:10.330 --> 27:11.330
position那

27:12.330 --> 27:14.330
position那说什么呢

27:14.330 --> 27:16.330
4401组织下语言

27:16.330 --> 27:18.330
没有看懂你的意思

27:18.330 --> 27:19.330
我先往下来讲

27:23.330 --> 27:24.330
position y吗

27:24.330 --> 27:26.330
position y吗

27:26.330 --> 27:28.330
position y

27:28.330 --> 27:30.330
bottom代表着

27:30.330 --> 27:32.330
我们从这个图片的

27:32.330 --> 27:33.330
底部开始

27:33.330 --> 27:35.330
给这个元素

27:35.330 --> 27:37.330
设置图片的背景

27:37.330 --> 27:39.330
默认是从顶部开始

27:39.330 --> 27:40.330
从左上就要开始

27:40.330 --> 27:42.330
那如果说我们是bottom呢

27:42.330 --> 27:44.330
就从这个底下开始

27:44.330 --> 27:46.330
就用这个图片的底部啦

27:46.330 --> 27:47.330
用图片的底部

27:47.330 --> 27:49.330
而不是用顶部了

27:49.330 --> 27:50.330
清楚了吧

27:50.330 --> 27:51.330
这个是y哈

27:51.330 --> 27:53.330
这是y设置bottom的一个意思

27:53.330 --> 27:54.330
嗯 ok

27:54.330 --> 27:56.330
那今儿咱们再回到正题

27:56.330 --> 27:57.330
我们现在呢

27:57.330 --> 28:00.330
要让这个柱子

28:00.330 --> 28:01.330
一个

28:01.330 --> 28:02.330
两个柱子

28:02.330 --> 28:04.330
所以咱们现在再来写一个柱子

28:04.330 --> 28:05.330
现在用的是一个piple

28:05.330 --> 28:06.330
bottom

28:06.330 --> 28:08.330
再来一个piple什么来着

28:08.330 --> 28:09.330
up 是吧

28:09.330 --> 28:13.980
删新一下

28:13.980 --> 28:15.980
看一下有吗

28:15.980 --> 28:17.980
ok 都在这呢

28:17.980 --> 28:18.980
因为它们的定位是一样的

28:18.980 --> 28:19.980
那我问大家哈

28:19.980 --> 28:21.980
它们是不是水平方向

28:21.980 --> 28:23.980
是在同一个坐标上

28:23.980 --> 28:25.980
是不是上下这一对柱子

28:25.980 --> 28:26.980
距离屏幕的

28:26.980 --> 28:27.980
左边的位置都是一样的

28:27.980 --> 28:29.980
但是距离屏幕

28:29.980 --> 28:31.980
上方的位置是不一样的

28:31.980 --> 28:32.980
你上柱子

28:32.980 --> 28:33.980
top为零

28:33.980 --> 28:34.980
下柱子呢

28:34.980 --> 28:35.980
top为多少呀

28:35.980 --> 28:36.980
不知道

28:36.980 --> 28:38.980
但是我知道它bottom为零

28:38.980 --> 28:40.980
那你是不是得通过这样的一个定位

28:40.980 --> 28:41.980
来进区分

28:41.980 --> 28:42.980
所以说呢

28:42.980 --> 28:43.980
这块给个什么呀

28:43.980 --> 28:46.980
up 给一个零

28:46.980 --> 28:47.980
bottom呢

28:47.980 --> 28:48.980
给个什么

28:48.980 --> 28:50.980
bottom为一个零

28:50.980 --> 28:51.980
那这样是不是

28:51.980 --> 28:53.980
一个再上一个再下来呀

28:53.980 --> 28:54.980
对不对

28:54.980 --> 28:55.980
咱们来看一下哈

28:55.980 --> 28:56.980
看一个再上一个再下

28:56.980 --> 28:58.980
这个就区分开了

28:58.980 --> 28:59.980
这就是一对柱子

28:59.980 --> 29:01.980
就出现了

29:01.980 --> 29:03.980
一对柱子就出现了

29:03.980 --> 29:04.980
但是

29:04.980 --> 29:06.980
我们的这样的一个life的值

29:06.980 --> 29:07.980
是不能写死的

29:07.980 --> 29:10.980
你写死了就没有任何意义了

29:10.980 --> 29:12.980
因为我们这个life是需要进行

29:12.980 --> 29:13.980
变化的

29:13.980 --> 29:14.980
而且每一对柱子

29:14.980 --> 29:16.980
出现的位置都不一样

29:16.980 --> 29:17.980
所以咱们这个life的值呢

29:17.980 --> 29:19.980
就不写在css当中了

29:19.980 --> 29:20.980
我们需要通过

29:20.980 --> 29:23.980
js来进行动态的设置

29:23.980 --> 29:25.980
ok 清楚了吧

29:25.980 --> 29:26.980
清楚了吧

29:26.980 --> 29:27.980
好了哈

29:27.980 --> 29:28.980
那这块呢

29:28.980 --> 29:29.980
咱们就开始往下来写了

29:29.980 --> 29:30.980
我们现在有

29:30.980 --> 29:32.980
有高度

29:32.980 --> 29:33.980
有上个柱子的高度

29:33.980 --> 29:34.980
和下柱子的高度

29:34.980 --> 29:37.980
接着我再去生成元素的时候

29:37.980 --> 29:39.980
给他们去设置什么呀

29:39.980 --> 29:42.980
去设置不同的class就可以了

29:42.980 --> 29:44.980
去设置不同的class就可以了

29:44.980 --> 29:46.980
那生成元素的这个操作

29:46.980 --> 29:48.980
要怎么去做呢

29:48.980 --> 29:49.980
怎么去做

29:49.980 --> 29:50.980
首先

29:50.980 --> 29:51.980
你应该是一个div

29:51.980 --> 29:52.980
那好 我来握一个

29:52.980 --> 29:55.980
我来握一个Odiv

29:55.980 --> 29:58.980
等于document.create一个

29:58.980 --> 30:00.980
一个element

30:00.980 --> 30:01.980
填一个div

30:01.980 --> 30:03.980
这就创建出来一个div元素了

30:03.980 --> 30:05.980
接着我去给这个div元素

30:05.980 --> 30:08.980
它身上的class的列表里面

30:08.980 --> 30:09.980
去添加个什么呀

30:09.980 --> 30:11.980
添加个

30:11.980 --> 30:12.980
添加个什么

30:12.980 --> 30:13.980
一个叫做pipe

30:13.980 --> 30:14.980
一个呢

30:14.980 --> 30:16.980
叫做pipe up

30:16.980 --> 30:18.980
那我来按的一下

30:18.980 --> 30:20.980
添加一个pipe

30:20.980 --> 30:21.980
接着

30:21.980 --> 30:23.980
再来添加一个pipe up

30:23.980 --> 30:24.980
ok

30:24.980 --> 30:25.980
接着你添加完成了之后

30:25.980 --> 30:27.980
你还得去动态的设置

30:27.980 --> 30:29.980
它的一个height吧

30:29.980 --> 30:30.980
等于什么

30:30.980 --> 30:31.980
等于一个upheight

30:31.980 --> 30:33.980
加上一个px

30:33.980 --> 30:34.980
加上一个px

30:34.980 --> 30:35.980
接着

30:35.980 --> 30:36.980
应该怎么办

30:36.980 --> 30:37.980
接着你再把

30:37.980 --> 30:39.980
这样的一个生成好的元素

30:39.980 --> 30:41.980
扔到复元素内部去

30:41.980 --> 30:42.980
那我是不是就意味着

30:42.980 --> 30:45.980
我需要再拿到this.el

30:45.980 --> 30:47.980
来Urpan的一个chow的

30:47.980 --> 30:49.980
Urpan的一个chow的

30:49.980 --> 30:51.980
把它给加进去

30:51.980 --> 30:53.980
OdivC进去

30:53.980 --> 30:54.980
是不是这样的

30:54.980 --> 30:55.980
那咱们来试一下哈

30:55.980 --> 30:57.980
我先把这两个元素干掉

30:57.980 --> 30:58.980
然后呢我来点击一下

30:58.980 --> 30:59.980
开始

30:59.980 --> 31:00.980
看这儿

31:00.980 --> 31:01.980
这是不就进来了呀

31:01.980 --> 31:02.980
这是不就进来了呀

31:02.980 --> 31:03.980
对不对

31:03.980 --> 31:04.980
那同样的

31:04.980 --> 31:05.980
你想要再去

31:05.980 --> 31:07.980
创建另外的一个

31:07.980 --> 31:08.980
另外的一个元素

31:08.980 --> 31:10.980
你是不是还得再走这一遭啊

31:10.980 --> 31:12.980
是不是还得再走这一遭

31:12.980 --> 31:14.980
也说你这一块的

31:14.980 --> 31:16.980
一个逻辑就偶和了

31:16.980 --> 31:18.980
那其实我们这一块

31:18.980 --> 31:19.980
是不是可以抽离出来

31:19.980 --> 31:20.980
成为一个函数啊

31:20.980 --> 31:22.980
因为你创建元素

31:22.980 --> 31:24.980
你创建元素这个操作

31:24.980 --> 31:26.980
你可能不仅仅在这个函数

31:26.980 --> 31:28.980
这个架子当中都会用到

31:28.980 --> 31:30.980
你在其他的文件当中

31:30.980 --> 31:31.980
也可能会用到

31:31.980 --> 31:33.980
它是一个公共的函数

31:33.980 --> 31:35.980
也就可以被称之为一个工具函数

31:35.980 --> 31:37.980
那如果一旦是一个

31:37.980 --> 31:38.980
工具函数的话

31:38.980 --> 31:40.980
我们就可以不用把它写在

31:40.980 --> 31:42.980
当前的这个工作区域内了

31:42.980 --> 31:43.980
而是

31:43.980 --> 31:45.980
再来新建一个文件

31:45.980 --> 31:47.980
叫做youtube4.js

31:47.980 --> 31:49.980
这个就是我们自己

31:49.980 --> 31:52.980
去存放工具函数的地方

31:52.980 --> 31:54.980
在这块来写一个function

31:54.980 --> 31:56.980
叫做一个createELE

31:56.980 --> 31:58.980
用这个函数

31:58.980 --> 32:00.980
去创建出来一个元素

32:00.980 --> 32:01.980
清楚了吧

32:01.980 --> 32:02.980
清楚了吧 同学们

32:02.980 --> 32:04.980
我们来自己封装出来一个

32:04.980 --> 32:06.980
创建元素的函数

32:07.980 --> 32:10.980
那创建元素你需要用什么呀

32:10.980 --> 32:11.980
你需要用到什么

32:11.980 --> 32:12.980
首先得知道

32:12.980 --> 32:14.980
我创建出来的元素是什么

32:14.980 --> 32:16.980
你让我去创建DIV啊

32:16.980 --> 32:17.980
还是去创建死板啊

32:17.980 --> 32:19.980
还是创建AI还是创建A美值啊

32:19.980 --> 32:20.980
对不对

32:20.980 --> 32:21.980
所以第一个我要知道是

32:21.980 --> 32:23.980
我创建出来的这个元素的

32:23.980 --> 32:25.980
它的一个名字

32:25.980 --> 32:26.980
标签名是什么

32:26.980 --> 32:28.980
ELE name

32:28.980 --> 32:29.980
其次是什么

32:29.980 --> 32:30.980
其次是我得知道

32:30.980 --> 32:32.980
你要给这个元素

32:32.980 --> 32:34.980
去设置什么样的一个class

32:34.980 --> 32:36.980
要不要去设置class

32:36.980 --> 32:37.980
所以这块呢

32:37.980 --> 32:38.980
我来一个

32:38.980 --> 32:39.980
接收一个classAR

32:39.980 --> 32:40.980
那这个呢

32:40.980 --> 32:42.980
就代表的是一个类名的数组

32:42.980 --> 32:44.980
为什么需要说一个数组呢

32:44.980 --> 32:45.980
因为当你去创建出来

32:45.980 --> 32:46.980
一个元素的时候

32:46.980 --> 32:49.980
你可能会去给它添加一个类名

32:49.980 --> 32:52.980
也可能会去给它添加两个类名

32:52.980 --> 32:54.980
甚至可能是三四五六个

32:54.980 --> 32:55.980
都有可能

32:55.980 --> 32:58.980
那如果说多个的话你叫不准

32:58.980 --> 33:00.980
你不知道你到底要去写多少个参数

33:00.980 --> 33:02.980
所以我们就把它都扔到一个数组

33:02.980 --> 33:04.980
当中去进行管理就可以了

33:04.980 --> 33:06.980
这个是类名的一个设置

33:06.980 --> 33:08.980
其次是你是不是还得再去

33:08.980 --> 33:10.980
手都能给它去设置一些样式啊

33:10.980 --> 33:12.980
那你设置什么样式啊

33:12.980 --> 33:15.980
在咱们的占地一个功能当中

33:15.980 --> 33:17.980
我需要去给它设置一下高度

33:17.980 --> 33:20.980
那可能在其他人的一个需求当中

33:20.980 --> 33:22.980
要去给它设置一下wise

33:22.980 --> 33:23.980
还要去设置一下color

33:23.980 --> 33:25.980
设置一下fundasize

33:25.980 --> 33:26.980
所以说呢

33:26.980 --> 33:27.980
我们接受的第三个参数

33:27.980 --> 33:29.980
应该是一个对象

33:29.980 --> 33:31.980
对象当中存放着的是

33:31.980 --> 33:35.980
你去给它设置的样式的一个集合

33:35.980 --> 33:36.980
清楚了吧

33:36.980 --> 33:37.980
ok

33:37.980 --> 33:39.980
那现在咱们来写里面的逻辑了哈

33:39.980 --> 33:41.980
首先创建出来一个元素

33:41.980 --> 33:42.980
或一个DOM

33:42.980 --> 33:43.980
导于什么

33:43.980 --> 33:46.980
Dopument.create一个element

33:46.980 --> 33:48.980
把元素的名字听下去了

33:48.980 --> 33:49.980
进来

33:49.980 --> 33:51.980
有时候你给它传递一个div

33:51.980 --> 33:53.980
它就创建出来一个div

33:53.980 --> 33:54.980
ok

33:54.980 --> 33:55.980
创建出来元素之后

33:55.980 --> 33:58.980
我要去给它添加类名了吧

33:58.980 --> 33:59.980
那类名在哪呢呀

33:59.980 --> 34:01.980
在这个列表当中的

34:01.980 --> 34:03.980
在classar当中的

34:03.980 --> 34:04.980
诶有同学们蒙了哈

34:04.980 --> 34:06.980
蒙我再重讲一遍

34:06.980 --> 34:07.980
好吧我再重讲一遍

34:07.980 --> 34:09.980
这块别蒙啊别蒙

34:09.980 --> 34:11.980
想象一下冲了一下

34:11.980 --> 34:12.980
你看我们现在

34:12.980 --> 34:14.980
在index.js当中

34:14.980 --> 34:16.980
想要去创建元素

34:16.980 --> 34:17.980
对不对

34:17.980 --> 34:19.980
想要去创建元素

34:19.980 --> 34:20.980
对不对

34:20.980 --> 34:21.980
是这样的吧

34:21.980 --> 34:23.980
回答我这个问题先

34:23.980 --> 34:24.980
你们先回答

34:24.980 --> 34:25.980
我喝口水

34:25.980 --> 34:31.470
ok

34:31.470 --> 34:33.470
那我们把思路放大一点

34:33.470 --> 34:35.470
把思路放大一点

34:35.470 --> 34:36.470
现在

34:36.470 --> 34:38.470
我们写的这一部是创建出来

34:38.470 --> 34:39.470
一个元素

34:39.470 --> 34:40.470
是吧

34:40.470 --> 34:42.470
我要想再去创建出来一个元素

34:42.470 --> 34:44.470
我还得再写一遍

34:44.470 --> 34:46.470
还是再写一遍

34:46.470 --> 34:47.470
接着

34:47.470 --> 34:49.470
我要再创建出来一个元素

34:49.470 --> 34:50.470
我还要再写一遍

34:50.470 --> 34:52.470
那这个时候为了去解偶

34:52.470 --> 34:53.470
什么叫偶啊

34:53.470 --> 34:54.470
偶和在一起了

34:54.470 --> 34:55.470
代码都长得一样

34:55.470 --> 34:57.470
你就是不断的去复制粘贴而已

34:57.470 --> 34:58.470
那这个时候

34:58.470 --> 34:59.470
我们就要考虑到

34:59.470 --> 35:01.470
去封装出来一个函数了

35:01.470 --> 35:03.470
那这个函数解偶的话

35:03.470 --> 35:05.470
你可以写在你的这个

35:05.470 --> 35:07.470
index.js当中

35:07.470 --> 35:08.470
如果在这里面来写个

35:08.470 --> 35:09.470
create一个re

35:09.470 --> 35:11.470
create一个element

35:11.470 --> 35:12.470
没什么问题

35:12.470 --> 35:13.470
你写在这里

35:13.470 --> 35:14.470
封装出来一个函数

35:14.470 --> 35:15.470
ok可以的

35:15.470 --> 35:17.470
但是再把思路放大一点

35:17.470 --> 35:19.470
我们假设

35:19.470 --> 35:21.470
现在写一个大的项目

35:21.470 --> 35:22.470
写个大的项目

35:22.470 --> 35:23.470
不仅是你一个人

35:23.470 --> 35:24.470
再去写这个项目

35:24.470 --> 35:26.470
其他人也在写

35:26.470 --> 35:28.470
其他人也有要去

35:28.470 --> 35:29.470
创建出来

35:29.470 --> 35:31.470
生成元素的这样一个需求

35:31.470 --> 35:32.470
那你说呢

35:32.470 --> 35:33.470
这个函数

35:33.470 --> 35:35.470
你们需要去共用了

35:35.470 --> 35:36.470
多少需要这样的一个功能

35:36.470 --> 35:37.470
那你写一遍

35:37.470 --> 35:38.470
他写一遍

35:38.470 --> 35:39.470
没必要

35:39.470 --> 35:40.470
那这个时候呢

35:40.470 --> 35:42.470
我们就把这个函数给抽离出来

35:42.470 --> 35:44.470
放到工具文件当中

35:44.470 --> 35:45.470
放到utils里面

35:45.470 --> 35:48.470
utils里面所有的函数

35:48.470 --> 35:49.470
都是工具函数

35:49.470 --> 35:50.470
都是我们

35:50.470 --> 35:52.470
大家都可以要去用到的

35:52.470 --> 35:53.470
对于我们来讲

35:53.470 --> 35:54.470
都是有帮助的

35:54.470 --> 35:55.470
这个叫做utils

35:55.470 --> 35:56.470
ok

35:56.470 --> 35:57.470
所以我们就把它

35:57.470 --> 35:58.470
挪到这个里面来了

35:58.470 --> 35:59.470
清楚了吧

35:59.470 --> 36:00.470
这个就是为什么要去

36:00.470 --> 36:01.470
创建出来一个

36:01.470 --> 36:02.470
utils.js的一个目的

36:02.470 --> 36:03.470
你这个文件

36:03.470 --> 36:05.470
在任何的一个项目当中

36:05.470 --> 36:07.470
你都能够看到一个名字

36:07.470 --> 36:09.470
叫做utils.js的一个文件

36:09.470 --> 36:10.470
清楚了吧

36:10.470 --> 36:11.470
ok

36:11.470 --> 36:13.470
接着咱们再把视线集中

36:13.470 --> 36:15.470
到create.le

36:15.470 --> 36:17.470
有说创建元素的这个函数上

36:17.470 --> 36:19.470
那你想要去创建出来一个元素

36:19.470 --> 36:21.470
你首先得知道

36:21.470 --> 36:22.470
你要去创建什么吧

36:22.470 --> 36:23.470
比如说

36:23.470 --> 36:25.470
你是女妈

36:25.470 --> 36:26.470
或者说你是造人

36:26.470 --> 36:27.470
你是造物主

36:27.470 --> 36:28.470
给你

36:28.470 --> 36:31.470
你今天想要去造出来一个生命

36:31.470 --> 36:33.470
那你造出来的生命是什么呀

36:33.470 --> 36:34.470
你可以是个猫

36:34.470 --> 36:35.470
是个狗

36:35.470 --> 36:36.470
是个人

36:36.470 --> 36:37.470
是个猪

36:37.470 --> 36:38.470
是个罗子

36:38.470 --> 36:39.470
是个驴都行

36:39.470 --> 36:40.470
那你想要去创出来的东西

36:40.470 --> 36:41.470
它总有个名吧

36:41.470 --> 36:42.470
对不对

36:42.470 --> 36:43.470
那现在我们是造物主

36:43.470 --> 36:45.470
我要去创出来个元素

36:45.470 --> 36:46.470
那首先就要告诉我

36:46.470 --> 36:48.470
我要去创出来这个元素

36:48.470 --> 36:49.470
是什么

36:49.470 --> 36:50.470
是div还是spun

36:50.470 --> 36:52.470
还是amage还是a

36:52.470 --> 36:54.470
所以就是通过谁俩告诉

36:54.470 --> 36:56.470
通过参数来告诉

36:56.470 --> 36:57.470
所以第一个参数

36:57.470 --> 36:59.470
就是e,le,name

36:59.470 --> 37:00.470
元素的名字

37:00.470 --> 37:01.470
这是第一个

37:01.470 --> 37:02.470
ok

37:02.470 --> 37:04.470
那当你去创建好的一个元素之后

37:04.470 --> 37:07.470
你是不是得去给它起个名啊

37:07.470 --> 37:08.470
你想

37:08.470 --> 37:09.470
你生下来了

37:09.470 --> 37:10.470
你妈过你就

37:10.470 --> 37:11.470
哎人

37:11.470 --> 37:12.470
人你过来

37:12.470 --> 37:13.470
是吧这小孩你过来

37:13.470 --> 37:14.470
你没名吗

37:14.470 --> 37:15.470
你是不是得有个名啊

37:15.470 --> 37:17.470
咱得把名也安排上吧

37:17.470 --> 37:18.470
那有的时候你可能有好几个名

37:18.470 --> 37:20.470
你不仅有英文名

37:20.470 --> 37:21.470
不仅有中文名

37:21.470 --> 37:22.470
还有英文名

37:22.470 --> 37:23.470
还有日文名

37:23.470 --> 37:24.470
还有法文名

37:24.470 --> 37:25.470
还有小名

37:25.470 --> 37:26.470
还有外号

37:26.470 --> 37:27.470
所以说呢

37:27.470 --> 37:28.470
一个人的名字

37:28.470 --> 37:29.470
它是很多个的

37:29.470 --> 37:31.470
那对于我们的这个元素来讲

37:31.470 --> 37:33.470
一个元素的类名

37:33.470 --> 37:34.470
也有很多

37:34.470 --> 37:35.470
就比如说我们小

37:35.470 --> 37:37.470
去创建出来的这样一个柱子

37:37.470 --> 37:38.470
一个柱子

37:38.470 --> 37:39.470
上柱子

37:39.470 --> 37:40.470
也叫pap

37:40.470 --> 37:42.470
同时也叫pap

37:42.470 --> 37:43.470
对不对

37:43.470 --> 37:44.470
那如果说

37:44.470 --> 37:46.470
我们在不确定的情况下

37:46.470 --> 37:48.470
一个参数去包含一个类名的话

37:48.470 --> 37:50.470
这个参数要学很多

37:50.470 --> 37:52.470
比如说你看这哈

37:52.470 --> 37:53.470
来接受一个参数

37:53.470 --> 37:54.470
class name

37:54.470 --> 37:56.470
一只是第一个类名

37:56.470 --> 37:57.470
然后再来一个

37:57.470 --> 37:58.470
class name

37:58.470 --> 37:59.470
二是第二个类名

37:59.470 --> 38:00.470
class name

38:00.470 --> 38:02.470
三是第三个类名

38:02.470 --> 38:03.470
这里是不确定的

38:03.470 --> 38:04.470
因为你不知道

38:04.470 --> 38:05.470
你要去创建出来

38:05.470 --> 38:06.470
这个元素

38:06.470 --> 38:07.470
到底有几个类名

38:07.470 --> 38:09.470
所以说我们要规定什么

38:09.470 --> 38:11.470
规定把名字都放到

38:11.470 --> 38:13.470
数组当中来进行管理

38:13.470 --> 38:15.470
你只要让我给它添加类名了

38:15.470 --> 38:16.470
你就把这个数组里面扔

38:16.470 --> 38:18.470
我之后对这个数组

38:18.470 --> 38:19.470
再进行集中的操作就可以了

38:19.470 --> 38:21.470
我这块只写一个参数就OK了

38:21.470 --> 38:22.470
对不对

38:22.470 --> 38:23.470
只写一个参数就OK了

38:23.470 --> 38:25.470
这个是数组的

38:25.470 --> 38:27.470
是类名的一个数组

38:27.470 --> 38:28.470
OK 好了

38:28.470 --> 38:29.470
那下一个

38:29.470 --> 38:31.470
你想要你有名字了

38:31.470 --> 38:32.470
对吧

38:32.470 --> 38:33.470
你得出去见人了吧

38:33.470 --> 38:34.470
你长大了

38:34.470 --> 38:35.470
你见人

38:35.470 --> 38:36.470
你总不能不穿衣服吧

38:36.470 --> 38:38.470
你是不是得有自己的样式啊

38:38.470 --> 38:39.470
有自己

38:39.470 --> 38:40.470
你今天穿个裙子也好

38:40.470 --> 38:42.470
穿个这个夹克也好

38:42.470 --> 38:43.470
穿个裤子

38:43.470 --> 38:45.470
穿个这个背心都可以

38:45.470 --> 38:47.470
你是不是得有自己的一个样式了

38:47.470 --> 38:48.470
那放到我们元素上来

38:48.470 --> 38:50.470
我们元素是不是也有样式啊

38:50.470 --> 38:51.470
我这个Pyp

38:51.470 --> 38:53.470
我是不是就要去在Jas当中

38:53.470 --> 38:55.470
去给它设置一下高度啊

38:55.470 --> 38:56.470
对不对

38:56.470 --> 38:57.470
设置高度

38:57.470 --> 38:58.470
所以第三个参数

38:58.470 --> 38:59.470
我们要集合的就是

38:59.470 --> 39:01.470
给一个元素去设置样式

39:01.470 --> 39:02.470
但是

39:02.470 --> 39:05.470
一个元素的样式可以有很多

39:05.470 --> 39:08.470
你可能不仅仅只去设置Height吧

39:08.470 --> 39:09.470
你可能没准哪一天

39:09.470 --> 39:10.470
要去给它设置Wise

39:10.470 --> 39:12.470
或者是另外一个同事

39:12.470 --> 39:14.470
要去给它创建出来

39:14.470 --> 39:15.470
这样的一个元素

39:15.470 --> 39:17.470
去设置Color

39:17.470 --> 39:18.470
去设置FunSize

39:18.470 --> 39:20.470
去设置LandHeight

39:20.470 --> 39:21.470
这都是有可能的吧

39:21.470 --> 39:23.470
那又回到刚才那个问题了

39:23.470 --> 39:25.470
我们不能把这样的一个样式

39:25.470 --> 39:26.470
去放到哪啊

39:26.470 --> 39:27.470
单独的放到这样的一个

39:27.470 --> 39:28.470
材质当中去了

39:28.470 --> 39:29.470
那我们放到哪里去

39:29.470 --> 39:30.470
进行描述啊

39:30.470 --> 39:32.470
放到对象当中去进行描述

39:32.470 --> 39:34.470
那这块为什么又是对象了呢

39:34.470 --> 39:35.470
你想一下

39:35.470 --> 39:37.470
我们去写一个样式

39:37.470 --> 39:40.470
它不就是一个一个的建值顿吗

39:40.470 --> 39:41.470
BackgroundColor

39:41.470 --> 39:43.470
V,Ride,Height

39:43.470 --> 39:45.470
V,150相速

39:45.470 --> 39:46.470
Wise,V,52相速

39:46.470 --> 39:48.470
这不就是建值顿吗

39:48.470 --> 39:49.470
那所以咱们用

39:49.470 --> 39:50.470
对象去描述

39:50.470 --> 39:52.470
它是最合理的

39:52.470 --> 39:53.470
那反过来

39:53.470 --> 39:54.470
一个类名

39:54.470 --> 39:56.470
那是不是就是一个列表啊

39:56.470 --> 39:57.470
你看

39:57.470 --> 39:58.470
你放的时候

39:58.470 --> 39:59.470
是不是一个PypleApp呀

39:59.470 --> 40:01.470
你用去建值顿去描述吗

40:01.470 --> 40:02.470
不用

40:02.470 --> 40:03.470
放到数组里面

40:03.470 --> 40:04.470
就可以了

40:04.470 --> 40:05.470
这个是参数的

40:05.470 --> 40:06.470
一个设定的目的

40:06.470 --> 40:08.470
这个能清楚吧

40:08.470 --> 40:09.470
能清楚吗

40:09.470 --> 40:10.470
清楚啊

40:10.470 --> 40:12.470
给我说一下啊

40:12.470 --> 40:18.750
OK

40:18.750 --> 40:19.750
好了

40:19.750 --> 40:20.750
那咱们就进入到

40:20.750 --> 40:21.750
逻辑代码当中了

40:21.750 --> 40:22.750
首先第一个

40:22.750 --> 40:23.750
我们想要去写

40:23.750 --> 40:24.750
这个函数的目的

40:24.750 --> 40:25.750
就是去创建元素的

40:25.750 --> 40:26.750
那好

40:26.750 --> 40:27.750
我们就利用

40:27.750 --> 40:30.750
Document.CreateElement

40:30.750 --> 40:32.750
把元素给创建出来

40:32.750 --> 40:34.750
创建出来了之后

40:34.750 --> 40:35.750
咱们是不是就要

40:35.750 --> 40:37.750
给它去起名了呀

40:37.750 --> 40:38.750
那由于说

40:38.750 --> 40:40.750
ClassAR是一个数组

40:40.750 --> 40:42.750
你需要把这个数组里面的

40:42.750 --> 40:44.750
所有的类名

40:44.750 --> 40:46.750
都给这个元素设置上

40:46.750 --> 40:47.750
那你是不是就得对它来

40:47.750 --> 40:49.750
进行个循环了呀

40:49.750 --> 40:51.750
是不来个循环了呀

40:51.750 --> 40:52.750
OK 那好

40:52.750 --> 40:53.750
那么就来一个

40:53.750 --> 40:54.750
for

40:54.750 --> 40:55.750
for

40:55.750 --> 40:56.750
for

40:56.750 --> 40:57.750
for

40:57.750 --> 40:58.750
for

40:58.750 --> 40:59.750
for

40:59.750 --> 41:00.750
for

41:00.750 --> 41:01.750
for

41:01.750 --> 41:02.750
for

41:02.750 --> 41:03.750
for

41:03.750 --> 41:04.750
for

41:04.750 --> 41:06.750
那每一次循环的时候

41:06.750 --> 41:08.750
你都往这个

41:08.750 --> 41:09.750
创建出来的元素的

41:09.750 --> 41:11.750
列表里面去

41:11.750 --> 41:12.750
爱的一个

41:12.750 --> 41:13.750
当前

41:13.750 --> 41:15.750
循环当中数组的那一位

41:15.750 --> 41:17.750
是不是就OK了

41:17.750 --> 41:19.750
这是不是就给加上去了呀

41:19.750 --> 41:21.750
这个名字咱就起好了

41:21.750 --> 41:22.750
接着你得得去

41:22.750 --> 41:23.750
穿衣服了

41:23.750 --> 41:24.750
是不是

41:24.750 --> 41:25.750
那穿衣服也同样的呀

41:25.750 --> 41:26.750
你得对这个对象

41:26.750 --> 41:28.750
去循环一下吧

41:28.750 --> 41:29.750
循环的过程当中

41:29.750 --> 41:30.750
往它身上去

41:30.750 --> 41:31.750
比如说你给它

41:31.750 --> 41:32.750
穿个裙子

41:32.750 --> 41:33.750
裙子长什么样啊

41:33.750 --> 41:34.750
给它穿个衣服

41:34.750 --> 41:35.750
这衣服长什么样啊

41:35.750 --> 41:36.750
进行一下描述

41:36.750 --> 41:37.750
那现在问题是

41:37.750 --> 41:38.750
怎么样对一个对象

41:38.750 --> 41:39.750
去循环

41:39.750 --> 41:41.750
其实也很简单

41:41.750 --> 41:42.750
在诚哥的课里面

41:42.750 --> 41:43.750
肯定说过了

41:43.750 --> 41:44.750
for

41:44.750 --> 41:45.750
for

41:45.750 --> 41:46.750
for

41:46.750 --> 41:47.750
for

41:47.750 --> 41:48.750
for

41:48.750 --> 41:49.750
for

41:49.750 --> 41:50.750
for

41:50.750 --> 41:51.750
for

41:51.750 --> 41:52.750
for

41:52.750 --> 41:53.750
for

41:53.750 --> 41:54.750
for

41:54.750 --> 41:55.750
for

41:55.750 --> 41:56.750
for

41:56.750 --> 41:57.750
for

41:57.750 --> 41:58.750
for

41:58.750 --> 41:59.750
for

41:59.750 --> 42:00.750
for

42:00.750 --> 42:01.750
for

42:01.750 --> 42:02.750
for

42:02.750 --> 42:03.750
for

42:03.750 --> 42:04.750
for

42:04.750 --> 42:05.750
for

42:05.750 --> 42:06.750
for

42:06.750 --> 42:07.750
for

42:07.750 --> 42:08.750
for

42:08.750 --> 42:09.750
for

42:09.750 --> 42:10.750
for

42:10.750 --> 42:11.750
for

42:11.750 --> 42:12.750
for

42:12.750 --> 42:13.750
for

42:13.750 --> 42:14.750
for

42:14.750 --> 42:15.750
for

42:15.750 --> 42:16.750
for

42:16.750 --> 42:17.750
for

42:17.750 --> 42:18.750
for

42:18.750 --> 42:19.750
for

42:19.750 --> 42:20.750
for

42:20.750 --> 42:21.750
for

42:21.750 --> 42:22.750
for

42:22.750 --> 42:23.750
for

42:23.750 --> 42:24.750
for

42:24.750 --> 42:25.750
for

42:25.750 --> 42:26.750
for

42:26.750 --> 42:27.750
for

42:27.750 --> 42:28.750
for

42:28.750 --> 42:29.750
for

42:29.750 --> 42:30.750
for

42:30.750 --> 42:31.750
for

42:31.750 --> 42:33.790
你点的话是啥了呀

42:33.790 --> 42:36.510
你点的话是去拿到对象当中

42:36.510 --> 42:38.470
t为key的那个元素

42:38.470 --> 42:39.950
但是我现在想的是什么

42:39.950 --> 42:42.710
想要用的是key这样的一个变量

42:42.710 --> 42:43.390
那注意

42:43.390 --> 42:45.310
如果说你要用变量的话

42:45.310 --> 42:47.030
就不能用点这种形式了

42:47.030 --> 42:49.070
而是用方块号

42:49.070 --> 42:50.230
而是用方块号

42:50.230 --> 42:51.470
ok

42:51.470 --> 42:52.630
这就用上了

42:52.630 --> 42:53.950
用上了之后

42:53.950 --> 42:54.430
哎

42:54.430 --> 42:56.470
你是不是得去给他设置个啥了呀

42:56.470 --> 42:58.630
设置他真正的一个值了

42:58.630 --> 42:59.390
那是谁

42:59.390 --> 43:01.270
是不是对应的y6啊

43:01.270 --> 43:03.630
那就是styleobj当中的key

43:03.630 --> 43:04.830
那这个元素

43:04.830 --> 43:07.470
咱们是不是就把它给设置好了呀

43:07.470 --> 43:09.630
那设置好了之后

43:09.630 --> 43:10.910
你给谁用啊

43:10.910 --> 43:12.710
同学们给谁用啊

43:12.710 --> 43:14.310
你这个函数

43:14.310 --> 43:15.270
创建出来的元素

43:15.270 --> 43:17.630
你是不是得拿到这个里边来呀

43:17.630 --> 43:19.470
那所以说你这个函数

43:19.470 --> 43:21.150
他得有返回值吧

43:21.150 --> 43:24.630
返回的值就得是你创建出来的元素吧

43:24.630 --> 43:26.910
这样子你才能够接得住啊

43:26.910 --> 43:27.550
对不对

43:27.550 --> 43:28.030
好了

43:28.030 --> 43:29.070
那这个函数呢

43:29.150 --> 43:31.470
咱们就把它给封装好了

43:31.470 --> 43:33.750
接着咱们在这块来用啊

43:33.750 --> 43:34.670
在这块来用

43:34.670 --> 43:39.430
首先我们想要去创建出来一个上柱子

43:39.430 --> 43:41.790
起个名字叫做op

43:41.790 --> 43:42.310
pap

43:42.310 --> 43:43.950
叫做oppap

43:43.950 --> 43:45.150
那等于谁呀

43:45.150 --> 43:48.390
数就等于createere

43:48.390 --> 43:50.430
传上第一个参数div

43:50.430 --> 43:51.670
传上第二个参数

43:52.590 --> 43:54.150
pap和谁呀

43:54.150 --> 43:56.310
和一个papap

43:57.350 --> 43:58.430
pap-ap

43:58.430 --> 44:00.190
接着传上第三个参数

44:00.190 --> 44:02.390
你要去给他设置一下height了吧

44:02.390 --> 44:03.350
height为谁呀

44:03.350 --> 44:07.270
是不是为这个upheight加上一个px

44:07.270 --> 44:09.950
那这样可以创建出来吗

44:09.950 --> 44:11.350
理论上是可以的

44:11.350 --> 44:12.910
但是实际上不行

44:12.910 --> 44:14.190
为什么不行啊

44:14.190 --> 44:16.630
咱们还没引入这个文件呢

44:16.630 --> 44:17.110
对不对

44:17.110 --> 44:18.230
这文件连引都没引

44:18.230 --> 44:20.670
你用它里面这个函数能用得上吗

44:20.670 --> 44:21.350
不能用

44:21.350 --> 44:22.710
所以咱们要去引入一下

44:22.710 --> 44:24.310
那在哪去引啊

44:24.310 --> 44:25.510
在哪去引

44:25.510 --> 44:28.710
你是引在index的前面还是后面啊

44:28.710 --> 44:30.270
那时候我们就要去考虑到

44:30.270 --> 44:32.190
这样的一个关系了呀

44:32.190 --> 44:33.350
是不是

44:33.350 --> 44:36.110
因为我要在index.js当中去使用

44:36.110 --> 44:37.910
youtube里面的一个函数

44:37.910 --> 44:41.430
所以说youtube这个函数必须得在

44:41.430 --> 44:42.230
在哪啊

44:42.230 --> 44:45.550
在这个index.js的前面去引入

44:45.550 --> 44:46.950
要不然你用不到它

44:46.950 --> 44:47.670
用不到它

44:47.670 --> 44:47.990
好了

44:47.990 --> 44:50.230
那现在咱们来console一下

44:50.230 --> 44:53.350
console.log一个opap

44:53.350 --> 44:55.510
能不能够出现啊

44:55.510 --> 44:56.310
点击

44:56.310 --> 44:56.790
看这

44:56.790 --> 44:58.270
这是不是就创建出来了呀

44:58.270 --> 45:00.910
接着咱们再把它扔进去不就可以了吗

45:00.910 --> 45:03.070
js.er的Urpan的一个child

45:03.070 --> 45:03.990
Urpan的谁呀

45:03.990 --> 45:06.110
opap

45:06.110 --> 45:06.710
那再来看

45:06.710 --> 45:07.310
点击

45:07.310 --> 45:08.670
这是不是就出来了呀

45:08.670 --> 45:09.310
那同样的

45:09.310 --> 45:12.070
我们是不是还得再去创建出来一个下注子

45:12.070 --> 45:12.950
下注子

45:12.950 --> 45:13.230
来

45:13.230 --> 45:15.070
word一个

45:15.070 --> 45:16.510
word

45:16.510 --> 45:16.910
一个

45:16.910 --> 45:17.670
o

45:17.670 --> 45:18.790
down

45:18.790 --> 45:19.470
up

45:19.470 --> 45:20.830
downpap

45:20.830 --> 45:21.750
等于一个

45:21.750 --> 45:22.390
create

45:23.310 --> 45:23.990
div

45:23.990 --> 45:25.070
class名字

45:25.070 --> 45:26.430
一个是pap

45:26.430 --> 45:29.270
一个是pap.down

45:29.270 --> 45:31.310
然后接着去给它设置一下

45:31.310 --> 45:32.310
样式hite

45:32.310 --> 45:33.270
hite为谁了呀

45:33.270 --> 45:36.390
是不是就为这个downhite加成一个px样

45:36.390 --> 45:36.950
接着

45:36.950 --> 45:38.950
你再将这样的一个

45:38.950 --> 45:40.630
down

45:40.630 --> 45:41.790
down这个pap

45:41.790 --> 45:43.390
迁加进复原速当中去

45:45.150 --> 45:45.510
再一个

45:45.510 --> 45:46.950
down

45:46.950 --> 45:47.270
ok

45:47.270 --> 45:48.710
那咱们再来看

45:48.710 --> 45:49.630
点击

45:49.630 --> 45:51.470
诶刷新一下有问题啊

45:51.510 --> 45:53.070
肯定是哪里出现问题了

45:53.070 --> 45:54.870
downhite加成一个px

45:54.870 --> 45:56.350
elepap

45:56.350 --> 45:56.670
不是

45:56.670 --> 45:57.470
这是bautom

45:57.470 --> 45:58.350
名字起错了

45:58.350 --> 45:59.790
名字起得有点奇迹

45:59.790 --> 46:01.470
有点奇迹了

46:01.470 --> 46:02.230
那咱们再来看

46:02.230 --> 46:02.990
点击开始

46:02.990 --> 46:04.190
这是不是就出现了呀

46:04.190 --> 46:04.910
一个再上

46:04.910 --> 46:05.630
一个再下

46:05.630 --> 46:06.230
好了

46:06.230 --> 46:08.830
那现在咱们再去思考一个问题

46:08.830 --> 46:10.990
我们这一个createpap呀

46:10.990 --> 46:13.430
它能够去创建出来一个元素

46:13.430 --> 46:15.470
那我们是不是要有多个

46:15.470 --> 46:16.790
多个pap呀

46:16.790 --> 46:18.750
那是不是我们得再去执行

46:18.750 --> 46:21.070
saf.createpap之前

46:21.110 --> 46:22.790
也说需要去多次执行

46:22.790 --> 46:24.350
那我们是不是来个循环呀

46:24.350 --> 46:24.870
对不对

46:24.870 --> 46:26.070
比如说我现在来

46:26.070 --> 46:26.710
fold

46:26.710 --> 46:27.710
ward一个i

46:27.710 --> 46:28.550
抖一个0

46:28.550 --> 46:30.590
i小于一个7

46:30.590 --> 46:32.270
比如说我要创建出来7个柱子

46:32.270 --> 46:32.550
然后呢

46:32.550 --> 46:33.870
i加加

46:33.870 --> 46:35.270
在这个循环里面

46:35.270 --> 46:37.190
我们去多次执行一下

46:37.190 --> 46:37.470
ok

46:37.470 --> 46:38.350
那现在再来看

46:38.350 --> 46:39.350
点击开始

46:39.350 --> 46:40.550
这就有7对了

46:40.550 --> 46:41.910
咱们可以大概来看一下

46:41.910 --> 46:42.750
有很多

46:42.750 --> 46:43.470
有很多

46:43.470 --> 46:43.990
对不对

46:43.990 --> 46:45.230
那很多柱子

46:45.230 --> 46:48.030
不能都在屏幕的左边吧

46:48.030 --> 46:49.270
那成啥事了呀

46:49.270 --> 46:50.470
那多尴尬呀

46:50.470 --> 46:51.030
是不是

46:51.030 --> 46:52.470
所以我们应该让它分开

46:52.470 --> 46:53.910
那怎么去分开呀

46:53.910 --> 46:55.030
怎么去分开

46:55.030 --> 46:57.870
去控制它离屏幕左边的一个距离

46:57.870 --> 47:00.150
是通过CSS当中的

47:00.150 --> 47:02.430
LIFT值去进行判断的吧

47:02.430 --> 47:06.790
那所以说你给每一对柱子去设置的时候

47:06.790 --> 47:09.470
是不是都应该有一个不同的LIFT呀

47:09.470 --> 47:11.110
有一个不同的LIFT

47:11.110 --> 47:11.710
对吧

47:11.710 --> 47:12.950
那所以说呢

47:12.950 --> 47:14.110
怎么去做

47:14.110 --> 47:15.550
你不能说把这个

47:15.550 --> 47:17.230
你在这里面去ward一个x

47:17.230 --> 47:18.270
总于一个值吧

47:18.270 --> 47:19.190
你ward一个值

47:19.190 --> 47:20.270
就去写死了

47:20.270 --> 47:21.310
每一对都一样

47:21.310 --> 47:23.670
所以咱们只能从再去执行的时候来

47:23.670 --> 47:24.790
进行下手

47:24.790 --> 47:26.390
我每一次执行的时候

47:26.390 --> 47:28.750
都让它去接受一个参数x

47:28.750 --> 47:31.350
这个x动态的

47:31.350 --> 47:33.710
去存放了这个元素

47:33.710 --> 47:34.990
也说这一对柱子

47:34.990 --> 47:37.230
距离屏幕左边的一个距离

47:37.230 --> 47:39.310
那是不是就能够找出来了呀

47:39.310 --> 47:40.310
因为你是什么

47:40.310 --> 47:41.870
在循环里面去执行的

47:41.870 --> 47:44.390
你每一次循环的这个i都不一样

47:44.390 --> 47:45.310
i都不一样

47:45.310 --> 47:47.630
那只要说你每一次给它传进去的

47:47.630 --> 47:48.510
这样一个数值

47:48.510 --> 47:49.750
是根据i来的

47:49.750 --> 47:50.790
是不是就可以了呀

47:50.790 --> 47:52.230
比如说我第一对柱子

47:52.230 --> 47:54.270
我让它距离屏幕左边是

47:54.270 --> 47:56.070
300相速

47:56.070 --> 47:56.950
300相速

47:56.950 --> 47:58.470
那是不是得承认一个几呀

47:58.470 --> 48:01.390
承认一个i加上一个e吧

48:01.390 --> 48:01.990
是不是

48:01.990 --> 48:03.150
第一对是300

48:03.150 --> 48:04.230
第二对是600

48:04.230 --> 48:05.550
第三对是900

48:05.550 --> 48:06.670
然后1200

48:06.670 --> 48:07.630
1500

48:07.630 --> 48:08.430
1800

48:08.430 --> 48:09.230
2100

48:09.230 --> 48:10.230
是这样的吧

48:10.230 --> 48:10.590
对不对

48:10.590 --> 48:11.790
所以应该来一个300

48:11.790 --> 48:13.470
承认一个i加e吧

48:13.470 --> 48:14.830
因为i是从几开始的

48:14.830 --> 48:15.790
从零开始

48:15.790 --> 48:16.550
从零开始

48:16.550 --> 48:17.110
OK

48:17.110 --> 48:18.830
那这个x咱们就拿到了

48:18.870 --> 48:20.550
接着我们是不是就可以在这来来

48:20.550 --> 48:21.230
设置什么呀

48:21.230 --> 48:21.950
LIFE

48:21.950 --> 48:23.030
LIFE只给个啥呀

48:23.030 --> 48:24.910
x加上一个px

48:24.910 --> 48:26.230
那同样的底下也是

48:26.230 --> 48:28.990
LIFE x加上一个px

48:28.990 --> 48:32.030
那你看通过这样的一种形式

48:32.030 --> 48:36.150
我们首先不需要去重复的去写创建

48:36.150 --> 48:37.830
元素的这样一个代码了

48:37.830 --> 48:40.310
其次是我们的代码更直观了吧

48:40.310 --> 48:41.550
我不需要一步一步的

48:41.550 --> 48:42.830
撕掉点什么什么

48:42.830 --> 48:43.590
然后呢

48:43.590 --> 48:44.790
我这样子去

48:44.790 --> 48:47.350
主航的去读我去给它设置什么

48:47.350 --> 48:48.270
这样一个样式了

48:48.270 --> 48:50.470
我只需要看这个对象就可以了

48:50.470 --> 48:51.670
这个对象长的还和

48:51.670 --> 48:53.070
css差不多

48:53.070 --> 48:54.830
我是不是一眼我就能撩到了呀

48:54.830 --> 48:56.430
是不这种方式会更好一点

48:56.430 --> 48:58.070
我们代码会更好去阅读了

48:58.070 --> 49:00.350
所以说你工具函数里面写什么功能

49:00.350 --> 49:02.110
咱写一次就行了

49:02.110 --> 49:04.790
除非说你后面要有更多的一个功能加进来

49:04.790 --> 49:05.390
对不对

49:05.390 --> 49:05.750
好了

49:05.750 --> 49:06.990
那现在咱们验证一下

49:06.990 --> 49:08.150
点击开始

49:08.150 --> 49:10.950
你看这柱子是不是就出来了呀

49:10.950 --> 49:11.230
对不对

49:11.230 --> 49:11.870
就出来了

49:11.870 --> 49:13.230
但现在有一个小问题

49:13.230 --> 49:14.230
问题是什么呀

49:14.230 --> 49:15.030
柱子

49:15.030 --> 49:17.030
它的一个zindex比较高

49:17.030 --> 49:18.230
为什么比较高啊

49:18.270 --> 49:20.030
因为它是后创建出来的

49:20.030 --> 49:23.030
我们在前面和上第一节课的时候

49:23.030 --> 49:25.510
就说过后来者居上

49:25.510 --> 49:27.670
那由于说我想让它出现在

49:27.670 --> 49:29.550
mask和and的底下

49:29.550 --> 49:31.350
那我是不是应该把他们之间的

49:31.350 --> 49:34.750
一个zindex都相应的调一下呀

49:34.750 --> 49:36.710
给这个pipe设置一下

49:36.710 --> 49:38.710
zindex为一个e

49:38.710 --> 49:43.190
接着再去给mask设置一个zindex

49:43.190 --> 49:44.870
让他们逐步往上加哈

49:44.870 --> 49:47.110
mask设置一个

49:47.150 --> 49:49.430
zindex为一个2

49:49.430 --> 49:49.830
然后呢

49:49.830 --> 49:52.150
and是不是得需要在mask上面呀

49:52.150 --> 49:54.670
说再来给他设置一个zindex为一个3

49:54.670 --> 49:55.750
那现在再来看看

49:55.750 --> 49:58.030
是不是我们想要的一个结果了呀

49:58.030 --> 49:58.630
对不对

49:58.630 --> 49:59.150
好了

49:59.150 --> 50:02.550
那现在的柱子咱们是创建好了

50:02.550 --> 50:05.990
接着咱们得让这个柱子去运动了吧

50:05.990 --> 50:06.710
你看

50:06.710 --> 50:09.590
开始的时候刷新一下点击

50:09.590 --> 50:13.190
柱子是不是随着天空一起去移动的呀

50:13.190 --> 50:15.350
随着天空一起去移动的吧

50:15.350 --> 50:16.710
那所以说呢

50:16.710 --> 50:18.270
怎么样去设置啊

50:18.270 --> 50:19.790
想一下

50:19.790 --> 50:22.270
他移动的速度跟天空一样啊

50:22.270 --> 50:23.350
那也说明

50:23.350 --> 50:26.070
他的life值在不断的在改变

50:26.070 --> 50:30.310
每一次改变的速度和频率

50:30.310 --> 50:33.390
都和天空改变的是一样的

50:33.390 --> 50:35.110
都和天空改变的是一样的

50:35.110 --> 50:35.510
对

50:35.510 --> 50:38.430
放到公共的那个定时器上

50:38.430 --> 50:39.710
放到公共的定时器上

50:39.710 --> 50:41.590
有时候放到这个里面来

50:41.590 --> 50:43.590
跟四该木放到一起

50:43.590 --> 50:44.510
那同样的

50:44.510 --> 50:47.310
每一次去更改的life值

50:47.310 --> 50:49.470
也就是剪掉的life值

50:49.470 --> 50:53.910
是不是也都应该和死盖死盖普是一样的呀

50:53.910 --> 50:56.110
他和天空移动速度是一样的

50:56.110 --> 50:57.310
所以他们两个呢

50:57.310 --> 50:59.910
是不是就共用同一个变量了呀

50:59.910 --> 51:00.670
对吧

51:00.670 --> 51:01.070
好了

51:01.070 --> 51:02.510
那咱们先来写一下

51:02.510 --> 51:04.270
在这块

51:04.270 --> 51:07.510
来写一个pipe木吧

51:07.510 --> 51:12.140
pipe移动的这样的一个函数

51:12.140 --> 51:12.700
ok

51:12.700 --> 51:14.180
那pipe去移动

51:14.180 --> 51:15.020
你想一下

51:15.020 --> 51:21.740
怎么能够让这些个管子元素一同去进行移动呢

51:21.740 --> 51:22.940
思考一下这个问题

51:22.940 --> 51:24.420
怎么一同去进行移动

51:26.380 --> 51:28.660
你是不是得怎么样

51:28.660 --> 51:29.740
怎么样

51:29.740 --> 51:31.100
来个放学环吧

51:31.100 --> 51:33.140
然后拿到所有的元素吧

51:33.140 --> 51:33.740
是不是

51:33.740 --> 51:35.020
拿到所有的元素

51:35.020 --> 51:35.780
接着呢

51:35.780 --> 51:38.500
给所有的这样些元素共同的去设置

51:38.500 --> 51:39.740
他们的life值

51:39.740 --> 51:42.300
减去一个死盖死盖普

51:42.300 --> 51:42.820
对不对

51:42.820 --> 51:43.060
ok

51:43.060 --> 51:43.580
好了

51:43.580 --> 51:44.740
那现在有个问题就是

51:44.740 --> 51:47.980
我们的我们的柱子到底有几对

51:47.980 --> 51:49.780
刚才好像是写了个数字

51:49.780 --> 51:50.420
写了个几

51:50.420 --> 51:51.420
写了个七

51:51.420 --> 51:52.460
但是

51:52.460 --> 51:53.100
我万一说

51:53.100 --> 51:55.180
后面想要去写8对呢

51:55.180 --> 51:55.900
写8对的话

51:55.900 --> 51:58.100
那我这块是不是还得改一下这个数字啊

51:58.100 --> 51:58.900
那同样的

51:58.900 --> 52:01.140
你是不是还得在上面也去改一下呀

52:01.140 --> 52:03.740
因为我们在这里面仍然要来个放循环

52:03.740 --> 52:06.420
对这些柱子去进行一下循环

52:06.420 --> 52:06.860
对不对

52:06.860 --> 52:09.380
所以我还要再来搞一个数字进行谈断

52:09.380 --> 52:11.620
那这样你改就改两个地方了

52:11.660 --> 52:13.660
改两个地方就就很烦

52:13.660 --> 52:15.500
因为你也不知道这些又在哪了

52:15.500 --> 52:17.820
所以咱们碰到这种情况的时候呢

52:17.820 --> 52:20.380
都用一个变量来存放着它

52:20.380 --> 52:20.820
比如说

52:20.820 --> 52:23.540
我在这块来写一个pap lens

52:23.540 --> 52:27.460
用于存放着我柱子的对数为一个七

52:27.460 --> 52:29.500
那我们再去用的时候用用的就是

52:29.500 --> 52:31.140
this点pap lens了

52:31.140 --> 52:31.860
对不对

52:31.860 --> 52:33.260
这样的话就不需要

52:33.260 --> 52:36.020
不需要以后我们手动去改谈了

52:36.020 --> 52:37.460
包括说上面这块也是的

52:39.140 --> 52:40.980
来一个pap lens

52:40.980 --> 52:41.340
ok

52:42.620 --> 52:44.420
这个没什么问题吧

52:44.420 --> 52:45.860
存放了一个变量而已

52:45.860 --> 52:47.220
存放了一个变量

52:47.220 --> 52:47.740
好了

52:47.740 --> 52:52.020
那接着我们怎么样能够在这个循环当中

52:52.020 --> 52:56.980
去拿到一个这么多对元素呢

52:56.980 --> 52:58.060
怎么去拿

52:58.060 --> 53:00.580
你想了我这个获取一下

53:00.580 --> 53:03.860
获取一下所有叫做pap的元素

53:03.860 --> 53:05.380
获取所有叫做pap元素

53:05.380 --> 53:09.140
然后统一的去对它进行一下怎么样

53:09.140 --> 53:10.380
更改他们的left

53:10.380 --> 53:12.540
这个思路没有什么问题

53:12.540 --> 53:13.580
但是你想想

53:13.580 --> 53:17.540
我们这个pap木执行的这样的一个速度

53:17.540 --> 53:20.620
是很就是带速率还是很快的

53:20.620 --> 53:21.820
隔30毫秒执行次

53:21.820 --> 53:22.980
隔30毫秒执行次

53:22.980 --> 53:24.180
你每一次去执行

53:24.180 --> 53:27.700
你都要去document去整个文章里面去查

53:27.700 --> 53:29.020
找这些元素

53:29.020 --> 53:31.060
那这个性能很不友好

53:31.060 --> 53:32.220
很不好

53:32.220 --> 53:33.380
所以咱们最好怎么办

53:33.380 --> 53:35.180
我每次不去查了

53:35.180 --> 53:35.660
我不去

53:35.660 --> 53:37.180
我省去查的这部操作

53:37.180 --> 53:38.900
我怎么样呢

53:38.900 --> 53:39.940
怎么样呢

53:39.980 --> 53:40.900
我是先的

53:40.900 --> 53:42.380
我创建好这个元素的时候

53:42.380 --> 53:43.580
我就存着

53:43.580 --> 53:44.780
我把它给存着

53:44.780 --> 53:46.820
就比如说我现在有一个辩量

53:48.620 --> 53:50.300
叫做papAR

53:50.300 --> 53:54.820
这里面存放着的是一对一对的柱子

53:54.820 --> 53:56.740
那一对一对柱子怎么存啊

53:56.740 --> 53:58.780
你一对里面就有上柱子

53:58.780 --> 53:59.740
又有下柱子

53:59.740 --> 54:00.220
是不是

54:00.220 --> 54:02.540
所以咱们最好放到一个对象当中去存

54:02.540 --> 54:03.780
比如说里面有个up

54:03.780 --> 54:04.780
up是一个元素

54:04.780 --> 54:08.060
有一个up

54:08.060 --> 54:08.980
有一个down

54:09.020 --> 54:10.900
down它也是一个元素

54:10.900 --> 54:12.660
那这样是不是就存放着了

54:12.660 --> 54:15.860
那你再去执行这个放寻环的时候

54:15.860 --> 54:16.660
执行这个放寻环

54:16.660 --> 54:17.700
想要拿元素的时候

54:17.700 --> 54:19.380
我从这个数组里面拿

54:19.380 --> 54:20.420
是不是就行了呀

54:20.420 --> 54:20.980
对不对

54:20.980 --> 54:22.740
那这数组能实现写好吗

54:22.740 --> 54:23.860
那绝对不能啊

54:23.860 --> 54:25.700
因为你在一开始的时候

54:25.700 --> 54:27.060
柱子还没创建呢

54:27.060 --> 54:27.540
对不对

54:27.540 --> 54:30.260
咱们只有再把柱子创建出来的时候

54:30.260 --> 54:32.020
往这个数组里面放

54:32.020 --> 54:33.900
是最最合理的时候

54:33.900 --> 54:35.020
所以咱们就去找到

54:35.020 --> 54:36.740
创建柱子这个函数

54:36.780 --> 54:38.140
那在这里面

54:38.140 --> 54:39.460
去添加一下

54:39.460 --> 54:41.340
往这个piple

54:41.340 --> 54:45.020
ARR当中去push一个对象

54:45.020 --> 54:46.620
push是什么意思呢

54:46.620 --> 54:49.660
push它是数组身上的一个方法

54:49.660 --> 54:52.940
是往数组的末尾添加一个

54:52.940 --> 54:54.340
或者多个元素的

54:54.340 --> 54:55.780
比如说你添一个对象

54:55.780 --> 54:56.220
ok

54:56.220 --> 54:58.540
它就往这个数组里面去添一个对象

54:58.540 --> 55:00.540
那如果说你要写两个参数

55:00.540 --> 55:01.460
或者写三个参数

55:01.460 --> 55:02.460
写四个参数呢

55:02.460 --> 55:04.340
就多往这个数组里面去添加

55:04.340 --> 55:04.980
记住喊

55:04.980 --> 55:06.020
这个叫做push

55:06.940 --> 55:07.380
ok

55:07.380 --> 55:08.820
那每一次去添加的时候

55:08.820 --> 55:09.980
我都去添加一个

55:09.980 --> 55:11.380
因为我每次要去存放

55:11.380 --> 55:13.020
一顿柱子的信息嘛

55:13.020 --> 55:14.340
那一顿柱子的信息

55:14.340 --> 55:16.780
就都存放在一个对象当中了

55:16.780 --> 55:17.340
ok

55:17.340 --> 55:17.700
那好

55:17.700 --> 55:19.460
那这块来写一个up

55:19.460 --> 55:20.820
up代表着上柱子

55:20.820 --> 55:22.700
那就是o-up-piple

55:22.700 --> 55:23.620
再来一个down

55:23.620 --> 55:25.100
down代表着下柱子

55:25.100 --> 55:27.580
来一个o-down-piple

55:27.580 --> 55:30.700
那是不是我们天然就能够拿到这个

55:30.700 --> 55:32.300
数拿到这个柱子了

55:32.300 --> 55:35.060
就不需要再从文档里面去查询一下了

55:35.980 --> 55:36.660
是不是

55:36.660 --> 55:38.100
那再回到这里来

55:38.100 --> 55:41.740
回到piple幕里面

55:43.020 --> 55:44.900
让管子移动的这个函数

55:44.900 --> 55:45.220
ok

55:45.220 --> 55:45.780
在这里

55:45.780 --> 55:47.060
在这个piple幕里面

55:47.060 --> 55:49.620
我是不是就能够天然的通过谁

55:49.620 --> 55:50.900
通过这个i

55:50.900 --> 55:54.260
拿到对应所引的那一顿柱子了

55:54.260 --> 55:54.820
呀

55:54.820 --> 55:55.500
是不是

55:55.500 --> 55:55.860
ok

55:55.860 --> 55:56.500
所以这块来

55:56.500 --> 55:58.340
我一个o-up-piple

55:58.340 --> 55:59.620
拿到上柱子

55:59.620 --> 56:03.660
等于this-piple

56:03.700 --> 56:04.620
ar当中

56:04.620 --> 56:07.020
第2个里面的up

56:07.020 --> 56:07.580
接着

56:07.580 --> 56:09.980
你再把下柱子给找到

56:09.980 --> 56:12.260
过一个o-down-piple

56:12.260 --> 56:12.780
等于到

56:14.260 --> 56:14.980
上下

56:14.980 --> 56:16.500
我是不是都拿到了呀

56:16.500 --> 56:17.180
接着

56:17.180 --> 56:18.220
我再怎么样

56:18.220 --> 56:19.060
过一个

56:19.060 --> 56:22.980
你要去给它设置的life值

56:22.980 --> 56:24.460
因为你想让它移动吗

56:24.460 --> 56:25.300
那你每一次

56:25.300 --> 56:26.180
是不是都每一次

56:26.180 --> 56:27.860
执行这个piple幕的时候

56:27.860 --> 56:30.060
都得让它的life值有改变呀

56:30.060 --> 56:31.740
你先把这个改变的那个

56:31.740 --> 56:33.980
life给设置出来

56:33.980 --> 56:35.380
给声明出来

56:35.380 --> 56:36.300
那懂于谁呀

56:36.300 --> 56:38.820
懂于当前的up-piple

56:38.820 --> 56:39.420
第2

56:39.420 --> 56:40.900
off-site-life

56:40.900 --> 56:43.660
拿到它当前的一个life的值

56:43.660 --> 56:44.620
减去

56:44.620 --> 56:46.020
这4.4Ga

56:46.020 --> 56:46.580
4.5

56:46.580 --> 56:48.020
不就可以了吗

56:48.020 --> 56:49.180
那这块团里面可能想了

56:49.180 --> 56:49.620
哎

56:49.620 --> 56:50.140
老师

56:50.140 --> 56:52.340
你这是为什么使用的是off-site-life

56:52.340 --> 56:53.900
而不是死掉点life呢

56:53.900 --> 56:54.540
注意一下

56:54.540 --> 56:55.460
死掉点life

56:55.460 --> 56:57.860
也能够去取到当前这个元素

56:57.860 --> 56:58.580
life的值

56:58.580 --> 56:59.420
但是取到的话

56:59.420 --> 57:00.740
是在ps单位的

57:00.740 --> 57:01.660
是个字不串

57:01.660 --> 57:03.580
但如果说你用off-site-life的话

57:03.580 --> 57:05.100
它直接取到是一个数值

57:05.100 --> 57:05.940
是个数字

57:05.940 --> 57:06.420
这样的话

57:06.420 --> 57:08.340
你就可以直接去用它去减了

57:08.340 --> 57:09.900
只用它去减就可以了

57:09.900 --> 57:10.380
ok

57:10.380 --> 57:11.340
那这个x

57:11.340 --> 57:12.540
我们就求得了

57:12.540 --> 57:13.540
求得了之后

57:13.540 --> 57:15.420
我是不是就可以用

57:15.420 --> 57:16.300
去设置谁呀

57:16.300 --> 57:19.660
设置o-up-piple-style-life的

57:19.660 --> 57:20.220
懂于谁呀

57:20.220 --> 57:21.220
懂于x

57:21.220 --> 57:22.500
加上一个px

57:22.500 --> 57:24.700
接着你是不是还可以同样的去设置

57:24.700 --> 57:27.780
o-down-piple-style-life

57:27.780 --> 57:29.740
懂于x加上一个px呀

57:29.740 --> 57:30.540
我相信

57:30.580 --> 57:32.100
团队之后有个疑问说

57:32.100 --> 57:32.500
哎

57:32.500 --> 57:34.380
你这块为什么只去拿到

57:34.380 --> 57:37.380
app上柱子的一个life的值呢

57:37.380 --> 57:39.220
你下柱子怎么不拿呀

57:39.220 --> 57:40.660
很简单的一个道理吗

57:40.660 --> 57:42.740
他们的是一对

57:42.740 --> 57:44.860
一对柱子life的值是一样的

57:44.860 --> 57:45.780
你没必要

57:45.780 --> 57:47.500
没必要两个都取

57:47.500 --> 57:48.700
没必要两个都取

57:48.700 --> 57:49.260
是不是

57:49.260 --> 57:49.740
ok

57:49.740 --> 57:51.980
那我通过这样的一个逻辑

57:51.980 --> 57:54.780
就可以让让你一个管子去移动了

57:54.780 --> 57:56.500
那我在哪里去执行啊

57:56.500 --> 57:57.620
在哪里去执行啊

57:57.620 --> 58:00.340
是不是还是得放到animate里面来执行

58:00.380 --> 58:03.820
所以这会来个self.piple-moo

58:03.820 --> 58:04.340
piple-moo

58:04.340 --> 58:04.860
ok

58:04.860 --> 58:06.660
那这块是有一个问题的

58:06.660 --> 58:09.420
你不能一上来就让管子去移动吧

58:09.420 --> 58:10.780
你管子还没有的时候

58:10.780 --> 58:12.260
让它移动干嘛呀

58:12.260 --> 58:12.860
是不是

58:12.860 --> 58:15.460
所以说这个函数执行是有条件的

58:15.460 --> 58:18.500
是当前我们的这样一个游戏

58:18.500 --> 58:20.060
已经开始了

58:20.060 --> 58:21.220
再去执行

58:21.220 --> 58:23.540
所以说你应该把它放到这个里边来

58:23.540 --> 58:25.300
那你看原来是不是判断过一个呀

58:25.300 --> 58:26.980
那咱把它拿到下面去了

58:26.980 --> 58:31.450
放到一起就可以了

58:31.490 --> 58:33.410
请请我的屏幕

58:33.410 --> 58:33.850
好了

58:33.850 --> 58:35.450
那咱们来看一下

58:35.450 --> 58:36.970
点击开始

58:36.970 --> 58:37.610
哎

58:37.610 --> 58:38.850
好像给我报了个错

58:40.370 --> 58:42.010
报了这么多个错

58:42.010 --> 58:44.450
说piple-up-of-animate-moo

58:44.450 --> 58:45.770
在91行

58:46.610 --> 58:47.890
91行91行

58:47.890 --> 58:48.890
找一下啊

58:48.890 --> 58:49.730
在这里

58:49.730 --> 58:51.690
o-up-piple

58:51.690 --> 58:55.610
等于this.piple-ar当中i.up

58:55.610 --> 58:59.590
我存的是什么

58:59.590 --> 59:01.070
哎存的就是up

59:01.070 --> 59:02.150
this.piple-ar

59:02.310 --> 59:03.190
push一个它

59:04.590 --> 59:05.230
没有关系啊

59:05.230 --> 59:06.070
咱们来揪揪错

59:07.350 --> 59:08.110
在这里面

59:08.110 --> 59:11.270
我们说了找不到这个里面的一个元素

59:11.270 --> 59:12.310
那这就很过分了

59:14.070 --> 59:16.630
打印一下console.log一个

59:16.630 --> 59:19.870
this.piple-ar当中的di个

59:20.870 --> 59:21.830
看一看有没有

59:23.070 --> 59:24.190
点击

59:24.190 --> 59:25.630
哎一直都是安定犯的

59:25.630 --> 59:25.990
那好

59:25.990 --> 59:28.590
我们再回到底下去进行一下判断

59:28.590 --> 59:30.950
在这个create-piple当中

59:30.990 --> 59:32.390
我们有没有去

59:33.270 --> 59:34.150
添加进去呢

59:35.590 --> 59:36.710
看一看piple-ar

59:38.430 --> 59:38.910
点击

59:40.350 --> 59:42.270
哎这个函数没执行啊

59:42.270 --> 59:43.230
同学们看到了吗

59:43.230 --> 59:45.150
这个函数没执行

59:45.150 --> 59:47.830
create-piple在这里面

59:47.830 --> 59:49.350
哎执行了呀

59:49.350 --> 59:51.350
piple.pipelance

59:51.350 --> 59:52.230
那好

59:52.230 --> 59:52.910
console一下

59:52.910 --> 59:54.270
console.log一个

59:54.270 --> 59:54.710
插插插

59:56.270 --> 59:57.670
再来点击

59:57.670 --> 59:58.670
还是没执行

59:58.670 --> 01:00:00.390
哎出问题了哈

01:00:00.430 --> 01:00:01.830
当你去点击它的时候

01:00:01.830 --> 01:00:02.830
有一个pipelance

01:00:02.830 --> 01:00:04.030
pipelance咱们没存吗

01:00:05.230 --> 01:00:05.870
有啊

01:00:05.870 --> 01:00:06.550
一个7

01:00:11.380 --> 01:00:15.380
我们再来看一下哈

01:00:15.380 --> 01:00:17.540
点击start的时候

01:00:17.540 --> 01:00:18.820
啊this啊

01:00:18.820 --> 01:00:19.500
对对对

01:00:19.500 --> 01:00:20.260
同学们哈

01:00:20.260 --> 01:00:21.900
看死在this身上了

01:00:21.900 --> 01:00:23.100
死在this身上了

01:00:23.100 --> 01:00:25.140
直接用this身上的pipelance了

01:00:25.140 --> 01:00:26.420
所以有问题

01:00:26.420 --> 01:00:26.660
哎

01:00:26.660 --> 01:00:28.260
常年在这个河边走

01:00:28.260 --> 01:00:29.500
哪有不识写

01:00:29.500 --> 01:00:30.540
等你们以后哈

01:00:30.540 --> 01:00:32.060
就是学到es6的时候

01:00:32.060 --> 01:00:33.860
就可以不用这种方式了

01:00:33.860 --> 01:00:35.380
用这种方式总是会出现

01:00:35.380 --> 01:00:36.180
这样的一个问题

01:00:36.180 --> 01:00:37.740
就是你明天想去使用this

01:00:37.740 --> 01:00:38.780
但是this不是他自己

01:00:38.780 --> 01:00:39.820
你就得用soft

01:00:39.820 --> 01:00:41.060
就会耗费时间

01:00:41.060 --> 01:00:42.580
你看刚刚咱们就浪费一点时间

01:00:42.580 --> 01:00:43.100
对不对

01:00:43.100 --> 01:00:45.220
那以后咱们学到箭头函数的时候

01:00:45.220 --> 01:00:47.100
学到es6里面箭头函数的时候

01:00:47.100 --> 01:00:48.700
就不需要这么麻烦了哈

01:00:48.700 --> 01:00:50.580
以后就可以告别这种形式了哈

01:00:50.580 --> 01:00:51.700
再也不用去使了

01:00:51.700 --> 01:00:52.940
因为我平时自己写在码

01:00:52.940 --> 01:00:54.820
是绝对不会用这种方式的

01:00:54.820 --> 01:00:56.060
就是让我去使用这种方式

01:00:56.060 --> 01:00:56.700
我都不用

01:00:56.700 --> 01:00:57.700
但是给你们上课呢

01:00:57.700 --> 01:00:58.340
没有办法

01:00:58.340 --> 01:00:58.460
哈

01:00:58.460 --> 01:00:59.380
因为大家都不会

01:00:59.380 --> 01:01:00.500
所以就只能用这种方式

01:01:00.500 --> 01:01:01.940
就可以了哈

01:01:01.940 --> 01:01:02.300
OK

01:01:02.300 --> 01:01:03.940
那咱们来看一下点击

01:01:03.940 --> 01:01:04.940
哎出现了

01:01:05.420 --> 01:01:06.580
出现了之后

01:01:06.580 --> 01:01:08.300
我们的这个没有移动

01:01:08.300 --> 01:01:09.340
没有移动是因为什么

01:01:09.340 --> 01:01:10.460
因为我注视掉了

01:01:10.460 --> 01:01:10.780
哈

01:01:10.780 --> 01:01:11.660
再来一遍

01:01:11.660 --> 01:01:12.740
点击开始

01:01:12.740 --> 01:01:14.180
哎有移动了

01:01:14.180 --> 01:01:16.660
这是不是小鸟就可以移动了呀

01:01:16.660 --> 01:01:17.020
对不对

01:01:17.020 --> 01:01:17.980
小鸟就可以移动了

01:01:17.980 --> 01:01:18.660
OK

01:01:18.660 --> 01:01:20.540
那现在小鸟移动了之后

01:01:20.540 --> 01:01:22.340
我就要去判断一下

01:01:22.340 --> 01:01:25.580
小鸟跟柱子的一个零戒指了

01:01:27.060 --> 01:01:29.980
判断小鸟和柱子的一个碰撞检测

01:01:29.980 --> 01:01:31.220
碰撞检测

01:01:31.220 --> 01:01:33.900
那怎么样去进行一下碰撞检测呀

01:01:34.900 --> 01:01:38.350
怎么样去进行碰撞检测

01:01:38.350 --> 01:01:39.350
思考一下

01:01:39.350 --> 01:01:40.110
思考一下

01:01:41.110 --> 01:01:44.030
当你的这样一个什么

01:01:44.030 --> 01:01:45.310
你的小鸟

01:01:45.310 --> 01:01:48.430
和离的他最近的那个柱子

01:01:48.430 --> 01:01:50.230
没碰上上柱子

01:01:50.230 --> 01:01:52.550
也没碰上下柱子的时候

01:01:52.550 --> 01:01:55.190
就证明这个小鸟他没碰上

01:01:55.190 --> 01:01:55.830
对吧

01:01:55.830 --> 01:01:57.510
这句话好像说的是废话一样

01:01:57.510 --> 01:02:00.270
但是怎么样能够落实到代码里面呢

01:02:00.270 --> 01:02:03.190
就是怎么样能够在这个炸制派盘当中

01:02:03.270 --> 01:02:05.750
求进行一下判断呢

01:02:05.750 --> 01:02:07.430
进行一下判断

01:02:07.430 --> 01:02:08.510
你想一下

01:02:08.510 --> 01:02:11.510
我们小鸟和这样一个柱子

01:02:11.510 --> 01:02:12.710
香蕉啊

01:02:12.710 --> 01:02:15.110
就是香铃的

01:02:15.110 --> 01:02:17.590
就是也就是说他们相遇的一个问题

01:02:17.590 --> 01:02:19.830
就是小学五年级的总是会碰到什么

01:02:19.830 --> 01:02:21.030
相遇的一个问题

01:02:21.030 --> 01:02:24.030
他们相遇的时候有几种范围

01:02:24.030 --> 01:02:25.550
有什么范围

01:02:25.550 --> 01:02:26.110
看这哈

01:02:26.110 --> 01:02:27.670
我来写了一个图片

01:02:27.670 --> 01:02:29.670
图示让一

01:02:29.670 --> 01:02:32.110
看这柱子和小鸟

01:02:32.150 --> 01:02:33.270
小鸟在左

01:02:33.270 --> 01:02:34.550
柱子在右的时候

01:02:34.550 --> 01:02:36.430
这是不是一种相遇啊

01:02:36.430 --> 01:02:36.790
对不对

01:02:36.790 --> 01:02:37.350
相遇

01:02:37.350 --> 01:02:38.830
那什么时候离开呀

01:02:38.830 --> 01:02:39.910
什么时候离开

01:02:39.910 --> 01:02:40.950
小鸟在左

01:02:40.950 --> 01:02:42.230
柱子在右的时候

01:02:42.230 --> 01:02:43.430
这是离开

01:02:43.430 --> 01:02:44.590
那这个时候

01:02:44.590 --> 01:02:47.510
柱子他自己的一个x的一个范围

01:02:47.510 --> 01:02:50.230
比如说他life 的值的一个范围是多少

01:02:50.230 --> 01:02:50.910
想一下

01:02:50.910 --> 01:02:55.020
life 的值的范围是多少

01:02:55.020 --> 01:02:56.900
有想到吗

01:02:56.900 --> 01:02:58.060
这话我就不绕弯子了

01:02:58.060 --> 01:02:59.260
咱这来说吧

01:02:59.260 --> 01:03:01.100
时间有点本贪了

01:03:01.100 --> 01:03:02.060
首先来看这

01:03:02.060 --> 01:03:06.300
当小鸟和柱子刚刚开始相遇的时候

01:03:06.300 --> 01:03:10.340
柱子的x值是95相速

01:03:10.340 --> 01:03:12.540
为什么是95相速啊

01:03:12.540 --> 01:03:15.100
为什么95相速

01:03:15.100 --> 01:03:16.300
为什么95相速

01:03:16.300 --> 01:03:17.500
因为小鸟

01:03:17.500 --> 01:03:21.620
距离屏幕左边是80

01:03:21.620 --> 01:03:23.660
然后小鸟本身他又30

01:03:23.660 --> 01:03:25.300
那可能听我这样说

01:03:25.300 --> 01:03:27.300
老师那你为啥说是95相速啊

01:03:27.300 --> 01:03:28.220
不应该是101吗

01:03:28.220 --> 01:03:29.020
你坑谁呢

01:03:29.020 --> 01:03:29.700
你骗谁呢

01:03:29.700 --> 01:03:30.460
当我小孩

01:03:30.460 --> 01:03:31.940
80加30不会算

01:03:31.940 --> 01:03:33.940
但我们不要忽略一个点

01:03:33.940 --> 01:03:35.220
这个点是什么

01:03:35.220 --> 01:03:37.500
小鸟他有一个margin life

01:03:37.500 --> 01:03:39.020
唯一个负的食物

01:03:39.020 --> 01:03:41.500
咱们不能把那个负食物给忽略了

01:03:41.500 --> 01:03:42.620
所以说应该怎么样

01:03:42.620 --> 01:03:44.780
所以是小鸟的中心点

01:03:44.780 --> 01:03:47.740
距离屏幕左边才是80

01:03:47.740 --> 01:03:49.180
然后小鸟的中心点

01:03:49.180 --> 01:03:51.180
到小鸟的边边是15

01:03:51.180 --> 01:03:52.780
那80加15呢

01:03:52.780 --> 01:03:54.580
就是一个95相速

01:03:54.580 --> 01:03:56.700
这是他们两个相遇的时候

01:03:56.700 --> 01:03:58.420
他们两个相遇的时候

01:03:58.420 --> 01:03:59.180
就说了吧

01:03:59.180 --> 01:04:00.620
OK 还有什么

01:04:00.660 --> 01:04:02.100
他们两个离开的时候

01:04:02.100 --> 01:04:03.820
我先把这个给记下来

01:04:03.820 --> 01:04:08.910
相遇的时候

01:04:08.910 --> 01:04:10.830
pap的x

01:04:10.830 --> 01:04:12.110
动于95

01:04:12.110 --> 01:04:14.510
那小鸟离开了这个柱子呢

01:04:14.510 --> 01:04:16.750
也是柱子略过了小鸟

01:04:16.750 --> 01:04:17.790
来看土石二

01:04:17.790 --> 01:04:18.470
看这

01:04:18.470 --> 01:04:20.550
小鸟在柱子的右侧

01:04:20.550 --> 01:04:22.150
那小鸟的中心点

01:04:22.150 --> 01:04:24.150
距离屏幕的左边是80

01:04:24.150 --> 01:04:25.150
再加上柱子

01:04:25.150 --> 01:04:27.870
他本身的一个宽度是52

01:04:27.870 --> 01:04:30.750
那此时柱子的life值为多少啊

01:04:30.830 --> 01:04:33.110
是不是80减去52

01:04:33.110 --> 01:04:34.270
得几啊

01:04:34.270 --> 01:04:35.070
得几

01:04:36.390 --> 01:04:37.910
80减52得几

01:04:37.910 --> 01:04:38.750
我算一下

01:04:38.750 --> 01:04:39.590
等于一个8

01:04:39.590 --> 01:04:41.750
然后7减5等于28

01:04:41.750 --> 01:04:42.030
对不对

01:04:42.030 --> 01:04:42.630
28

01:04:42.630 --> 01:04:43.710
那不要忘记

01:04:43.710 --> 01:04:44.870
是不是还有什么

01:04:44.870 --> 01:04:47.070
还有半个小鸟呢

01:04:47.070 --> 01:04:49.630
28减去15得几

01:04:49.630 --> 01:04:50.510
得13

01:04:50.510 --> 01:04:53.550
所以当柱子离开小鸟的时候

01:04:53.550 --> 01:04:56.590
papx动于13

01:04:56.590 --> 01:04:57.310
OK

01:04:57.310 --> 01:04:59.990
这个是他们两个x之间的一个范围

01:04:59.990 --> 01:05:00.430
那好

01:05:00.430 --> 01:05:01.470
咱们来判断一下

01:05:01.470 --> 01:05:05.190
如果说当前我拿到了pap的x

01:05:05.190 --> 01:05:08.070
他是小鱼动于95

01:05:08.070 --> 01:05:09.150
并且什么

01:05:09.150 --> 01:05:13.110
并且papx是大鱼动于13的时候

01:05:13.110 --> 01:05:16.310
他们是在相遇的时候

01:05:16.310 --> 01:05:17.190
在过场呢

01:05:17.190 --> 01:05:17.870
左过场呢

01:05:17.870 --> 01:05:19.470
两个车互相略过的时候

01:05:19.470 --> 01:05:21.190
这是他们之间的一个距离

01:05:21.190 --> 01:05:21.670
对不对

01:05:21.670 --> 01:05:23.790
当柱子小鱼95

01:05:23.790 --> 01:05:25.110
大鱼13的时候

01:05:25.110 --> 01:05:28.270
他们两个是在相遇的一个过程当中的

01:05:28.270 --> 01:05:29.590
那在相遇的过程当中

01:05:29.590 --> 01:05:32.350
我是不是只要确定小鸟的

01:05:32.350 --> 01:05:34.910
他本身的套布值

01:05:34.910 --> 01:05:36.430
不要怎么样

01:05:36.430 --> 01:05:40.790
不要小鱼上柱子的一个什么

01:05:40.790 --> 01:05:42.990
上柱子的一个高度

01:05:42.990 --> 01:05:43.590
对不对

01:05:43.590 --> 01:05:45.990
以及小鱼什么

01:05:45.990 --> 01:05:47.150
以及大鱼谁

01:05:47.150 --> 01:05:50.350
大鱼上柱子加上150的一个高度

01:05:50.350 --> 01:05:50.950
你想一下

01:05:50.950 --> 01:05:53.970
来画个图案

01:05:53.970 --> 01:05:54.890
整个图案

01:05:54.890 --> 01:05:55.770
看这

01:05:55.770 --> 01:05:57.690
这是上柱子的一个高度吧

01:05:57.690 --> 01:05:58.810
这是一个小鸟

01:05:58.810 --> 01:06:00.450
假如小鸟他的套布值

01:06:00.890 --> 01:06:02.330
为这儿了

01:06:02.330 --> 01:06:05.090
小鱼上柱子的一个高度了

01:06:05.090 --> 01:06:06.690
那他是不是就顶着了呀

01:06:06.690 --> 01:06:08.690
那顶着是不是要死啊

01:06:08.690 --> 01:06:09.410
对不对

01:06:09.410 --> 01:06:11.650
所以小鸟的套布值

01:06:11.650 --> 01:06:14.450
不能小鱼上柱子的高度

01:06:14.450 --> 01:06:15.610
那同样的

01:06:15.610 --> 01:06:17.890
这是一个下柱子

01:06:17.890 --> 01:06:18.850
下柱子

01:06:18.850 --> 01:06:21.210
小鸟的一个套布值

01:06:21.210 --> 01:06:23.690
大鱼了上柱子的高度

01:06:23.690 --> 01:06:27.770
加上一个150的一个高度

01:06:27.770 --> 01:06:29.610
那是不是就撞到下柱子了

01:06:29.610 --> 01:06:31.410
那他们说就碰撞在一起了

01:06:31.410 --> 01:06:32.970
那是不是也死啊

01:06:32.970 --> 01:06:33.490
是不是

01:06:33.490 --> 01:06:34.890
我们只要把这个

01:06:34.890 --> 01:06:37.090
把中间的这个范围给

01:06:37.090 --> 01:06:38.330
给套出来

01:06:38.330 --> 01:06:39.250
就正明着

01:06:39.250 --> 01:06:40.050
你在这里面

01:06:40.050 --> 01:06:41.410
只要在这个范围内

01:06:41.410 --> 01:06:42.410
你是安全的

01:06:42.410 --> 01:06:44.890
只要一旦出了这个范围就不行了

01:06:44.890 --> 01:06:46.170
是不是这样的

01:06:46.170 --> 01:06:46.810
来回答我

01:06:46.810 --> 01:06:48.130
是不是这样的

01:06:48.130 --> 01:06:48.930
不是这样的话

01:06:48.930 --> 01:06:49.930
我再给你们讲一下

01:06:49.930 --> 01:06:53.210
喝口水

01:06:53.210 --> 01:06:54.450
看到一了

01:06:54.450 --> 01:06:55.410
好嘞

01:06:55.410 --> 01:06:56.010
那好

01:06:56.010 --> 01:06:57.850
那假设说我们现在喊

01:06:57.850 --> 01:06:58.250
来

01:06:58.250 --> 01:06:59.970
我问了一个什么

01:06:59.970 --> 01:07:01.050
有个辩量

01:07:01.050 --> 01:07:03.250
我问了一个pipewy

01:07:03.250 --> 01:07:04.610
这个pipewy是谁呀

01:07:04.610 --> 01:07:05.610
是一个

01:07:05.610 --> 01:07:07.890
上柱子的一个高度

01:07:07.890 --> 01:07:10.650
是上柱子的一个高度

01:07:10.650 --> 01:07:12.850
比如说等于一个数值吧

01:07:12.850 --> 01:07:14.090
比如等于一个绝对9

01:07:14.090 --> 01:07:14.570
ok

01:07:14.570 --> 01:07:16.010
接着又有什么

01:07:16.010 --> 01:07:19.620
又有一个pipew

01:07:19.620 --> 01:07:21.020
pipew什么呢

01:07:21.020 --> 01:07:21.460
算了

01:07:21.460 --> 01:07:22.020
我这样吧

01:07:22.020 --> 01:07:23.740
假如说我有一个pipewy

01:07:23.740 --> 01:07:26.820
里面存放着的是上柱子的高度

01:07:26.820 --> 01:07:30.420
以及上柱子加上150的一个高度

01:07:30.420 --> 01:07:32.060
假如说上柱子就为200

01:07:32.060 --> 01:07:33.380
下柱子就为200

01:07:33.380 --> 01:07:35.100
加上一个150

01:07:35.100 --> 01:07:36.780
那我是不是只要去判断

01:07:36.780 --> 01:07:37.580
判断谁呀

01:07:37.580 --> 01:07:39.780
拿到当前的一个bwer的y

01:07:39.780 --> 01:07:40.460
假如说

01:07:40.460 --> 01:07:42.500
咱先把这个数字调在这里之后

01:07:42.500 --> 01:07:44.700
咱们再去写正常的一个逻辑

01:07:44.700 --> 01:07:46.260
假如bwer的y就等于一个

01:07:46.260 --> 01:07:47.220
嗯

01:07:47.220 --> 01:07:47.780
又是

01:07:47.780 --> 01:07:48.300
好吧

01:07:48.300 --> 01:07:50.140
那接着我说要判断什么呀

01:07:50.140 --> 01:07:51.740
当你pipewx

01:07:51.740 --> 01:07:53.060
在这个范围内的时候

01:07:53.060 --> 01:07:53.860
在这范围内

01:07:53.860 --> 01:07:56.500
跟小鸟相遇了的时候

01:07:56.500 --> 01:08:00.170
并且什么

01:08:00.170 --> 01:08:01.170
哎

01:08:01.170 --> 01:08:03.810
套是一个哈

01:08:03.810 --> 01:08:05.290
并且

01:08:05.290 --> 01:08:06.690
你bwer的y

01:08:06.690 --> 01:08:07.850
他怎么样

01:08:07.850 --> 01:08:08.530
刚才说了

01:08:08.530 --> 01:08:11.290
小鱼等于pipewy

01:08:11.290 --> 01:08:13.810
上柱子的高度的时候就死了

01:08:13.810 --> 01:08:15.130
或者是谁呀

01:08:15.130 --> 01:08:15.810
或者是谁

01:08:15.810 --> 01:08:16.770
或者是说

01:08:16.770 --> 01:08:20.260
你这个bwer的y

01:08:20.260 --> 01:08:21.020
bwer的y

01:08:24.020 --> 01:08:25.300
小鸟的高度

01:08:25.300 --> 01:08:26.260
大于谁

01:08:26.260 --> 01:08:30.260
大于等于pipewy

01:08:30.260 --> 01:08:31.780
他当中的

01:08:31.780 --> 01:08:34.100
这个下柱子的一个高度

01:08:34.100 --> 01:08:34.580
有说呢

01:08:34.580 --> 01:08:36.420
上柱子加上150的一个高度

01:08:36.420 --> 01:08:38.180
那我是不是整体的

01:08:38.180 --> 01:08:39.900
这样的一个游戏就输掉了

01:08:39.900 --> 01:08:40.620
是这样的吧

01:08:40.620 --> 01:08:42.100
落实到戴马上就这样的

01:08:42.100 --> 01:08:43.420
那现在主要问题是

01:08:43.420 --> 01:08:46.380
我们怎么样能够拿到小鸟的一个高度

01:08:46.380 --> 01:08:48.500
小鸟的高度在哪啊

01:08:48.500 --> 01:08:49.380
在哪存着呢

01:08:50.580 --> 01:08:52.700
this.bwer的top

01:08:52.700 --> 01:08:54.500
就是小鸟的高度吧

01:08:54.500 --> 01:08:55.460
来拿一下

01:08:55.460 --> 01:08:57.460
this.bwer的top

01:08:57.460 --> 01:08:57.980
ok

01:08:57.980 --> 01:09:00.660
接着pipewy去哪去拿

01:09:01.620 --> 01:09:03.220
pipewy去哪去拿

01:09:03.220 --> 01:09:07.500
怎么样能够拿到这一对柱子的一个高度呢

01:09:09.100 --> 01:09:12.780
那是不是最好我们有地方去存着呀

01:09:12.780 --> 01:09:13.660
在哪去存

01:09:14.500 --> 01:09:15.300
在哪去存

01:09:15.300 --> 01:09:16.780
我们是不是有一个什么

01:09:16.780 --> 01:09:17.980
pipewyAR

01:09:17.980 --> 01:09:19.380
这个pipewyAR里面

01:09:19.380 --> 01:09:21.260
存放着上柱子和下柱子

01:09:21.260 --> 01:09:22.540
那我是不是也可以同样的

01:09:22.540 --> 01:09:25.340
再去存放着这一对柱子的一个信息呀

01:09:25.340 --> 01:09:26.340
这就是柱子的信息

01:09:26.340 --> 01:09:28.220
就是你上柱子的一个高度

01:09:28.220 --> 01:09:31.620
以及上柱子加上150的一个高度

01:09:31.620 --> 01:09:32.780
是不是就可以了呀

01:09:32.820 --> 01:09:33.380
对不对

01:09:33.380 --> 01:09:37.180
所以咱们就找到我们去创建pipew的那个

01:09:37.740 --> 01:09:38.340
函数

01:09:39.140 --> 01:09:39.940
create pipe

01:09:40.820 --> 01:09:41.500
太多了

01:09:41.500 --> 01:09:42.020
在这里

01:09:42.020 --> 01:09:43.580
我再去给它加上一个y

01:09:43.980 --> 01:09:44.980
y等于一个几

01:09:44.980 --> 01:09:47.660
y等于一个up height

01:09:48.700 --> 01:09:52.100
和一个up height加上一个150

01:09:52.100 --> 01:09:53.500
这是不是有存着了呀

01:09:53.500 --> 01:09:56.100
只要我去到这个柱子里面去拿

01:09:56.100 --> 01:09:56.900
就可以了

01:09:56.900 --> 01:09:57.540
那好

01:09:57.540 --> 01:09:59.940
那去这个柱子里拿是没有什么问题的

01:09:59.940 --> 01:10:01.700
但是我去到柱子里面的

01:10:01.700 --> 01:10:03.020
哪一个去拿呀

01:10:03.020 --> 01:10:04.580
你有那么多个

01:10:04.580 --> 01:10:05.380
值

01:10:05.380 --> 01:10:05.900
是吧

01:10:05.900 --> 01:10:06.940
七对柱子

01:10:06.940 --> 01:10:07.820
有七个值

01:10:07.820 --> 01:10:09.500
我距离去拿哪一个呀

01:10:09.500 --> 01:10:11.180
那你不跟我整事的吗

01:10:11.180 --> 01:10:12.180
虽然存了去了

01:10:12.180 --> 01:10:13.460
但你不告诉我怎么拿

01:10:13.460 --> 01:10:14.500
那这不行

01:10:14.500 --> 01:10:15.980
那我们思考一下

01:10:15.980 --> 01:10:17.140
我当前

01:10:17.140 --> 01:10:19.940
我小鸟没有略过第一根

01:10:19.940 --> 01:10:21.460
第一对柱子的时候

01:10:21.460 --> 01:10:23.660
是不是也就是我需要去数组里面的

01:10:23.660 --> 01:10:24.820
第零个去拿

01:10:24.820 --> 01:10:28.500
那当我小鸟成功的走到了拿

01:10:28.500 --> 01:10:30.460
成功的过了第一根柱子

01:10:30.460 --> 01:10:32.620
我是不是应该去第一根柱子里面去

01:10:32.620 --> 01:10:33.100
用什么

01:10:33.100 --> 01:10:34.180
去第一

01:10:34.180 --> 01:10:36.740
去第一对柱子里面去拿了吧

01:10:36.740 --> 01:10:39.500
那这个和谁是相关连的呀

01:10:39.500 --> 01:10:41.940
对和分数去相关连的

01:10:41.940 --> 01:10:43.380
我分数为零的时候

01:10:43.380 --> 01:10:44.860
我就去分

01:10:44.860 --> 01:10:46.540
第零对柱子里面去拿

01:10:46.540 --> 01:10:47.020
对不对

01:10:47.020 --> 01:10:48.260
我分数为一的时候

01:10:48.260 --> 01:10:49.580
我就去到分

01:10:49.580 --> 01:10:51.020
这个第一对柱子里面去拿

01:10:51.020 --> 01:10:52.300
就没有问题了

01:10:52.300 --> 01:10:52.980
所以这块

01:10:52.980 --> 01:10:53.500
来

01:10:53.500 --> 01:10:56.340
咱们用一个变量来存着它

01:10:56.340 --> 01:10:59.310
来一个四高

01:10:59.310 --> 01:11:00.310
只为一个零

01:11:00.350 --> 01:11:02.230
初始的说你分得是零

01:11:02.230 --> 01:11:02.790
是不是

01:11:02.790 --> 01:11:03.230
ok

01:11:03.230 --> 01:11:05.270
那这块我是不是就可以怎么样

01:11:05.270 --> 01:11:06.310
诶

01:11:06.310 --> 01:11:08.710
我一个index

01:11:08.710 --> 01:11:09.630
懂于

01:11:09.630 --> 01:11:10.630
第四点

01:11:10.630 --> 01:11:11.510
四高

01:11:11.510 --> 01:11:11.990
好了

01:11:11.990 --> 01:11:12.550
那接着

01:11:12.550 --> 01:11:13.750
我去到这个

01:11:13.750 --> 01:11:17.350
pipelar当中的dindex

01:11:17.350 --> 01:11:19.750
所言里面去拿到这个y

01:11:19.750 --> 01:11:21.110
是不是就可以了呀

01:11:21.110 --> 01:11:22.670
这个是不是没毛病啊

01:11:22.670 --> 01:11:23.190
对不对

01:11:23.190 --> 01:11:23.710
好了

01:11:23.710 --> 01:11:25.790
那这个pipelar咱们就解决了

01:11:25.790 --> 01:11:27.830
接着pipelax

01:11:27.830 --> 01:11:29.590
咱是不是也得搞定一下呀

01:11:29.590 --> 01:11:30.790
pipelax是谁

01:11:30.790 --> 01:11:32.510
是一对柱子

01:11:32.510 --> 01:11:35.830
它距离屏幕左边的一个距离

01:11:35.830 --> 01:11:37.190
那去哪儿拿呀

01:11:37.190 --> 01:11:39.190
是不是还得去那个数组当中

01:11:39.190 --> 01:11:40.950
对应的那个俗译上去拿

01:11:40.950 --> 01:11:41.270
那就是

01:11:41.270 --> 01:11:42.070
第四点

01:11:42.070 --> 01:11:46.670
pipelar当中的dindex里面的up

01:11:46.670 --> 01:11:48.470
它的一个offside life

01:11:48.470 --> 01:11:50.790
拿到上柱子的一个life值

01:11:50.790 --> 01:11:53.790
不就证明拿到了这一对柱子life的值了吗

01:11:53.790 --> 01:11:54.310
是不是

01:11:54.310 --> 01:11:54.750
ok

01:11:54.750 --> 01:11:57.630
那这个咱们是不是就写完了呀

01:11:57.630 --> 01:11:58.350
这是

01:11:58.350 --> 01:12:01.150
你进行一个碰撞检测

01:12:01.150 --> 01:12:04.150
检测有没有撞到柱子的这样一个操作

01:12:04.150 --> 01:12:04.710
对不对

01:12:04.710 --> 01:12:05.390
ok

01:12:05.390 --> 01:12:07.150
那怎么来玩一下

01:12:07.150 --> 01:12:08.310
点击

01:12:08.310 --> 01:12:08.590
哎

01:12:08.590 --> 01:12:09.190
死了

01:12:09.190 --> 01:12:09.910
是不是

01:12:09.910 --> 01:12:10.310
说什么

01:12:10.310 --> 01:12:11.790
i is no defined

01:12:11.790 --> 01:12:15.950
index.js第128行用i了吗

01:12:15.950 --> 01:12:17.950
哪用i了呀

01:12:17.950 --> 01:12:19.230
哦哦哦

01:12:19.230 --> 01:12:21.470
一哈是一哈

01:12:21.470 --> 01:12:23.310
这是零哈

01:12:23.310 --> 01:12:23.830
ok好了

01:12:23.830 --> 01:12:24.470
再来一下哈

01:12:24.470 --> 01:12:25.990
点击开始

01:12:25.990 --> 01:12:26.630
我撞啊

01:12:26.630 --> 01:12:27.990
没装对哈

01:12:28.030 --> 01:12:29.390
我装底下吧

01:12:29.390 --> 01:12:29.910
反正

01:12:29.910 --> 01:12:30.350
反正

01:12:30.350 --> 01:12:31.310
这是不是就死了

01:12:31.310 --> 01:12:34.430
这是不是咱就能够正常的玩了呀

01:12:34.430 --> 01:12:36.470
我碰撞检测检测柱子就完事了

01:12:36.470 --> 01:12:37.430
就这么一个思路

01:12:37.430 --> 01:12:38.910
给一个中间那个区域

01:12:38.910 --> 01:12:40.470
在这个中间去过

01:12:40.470 --> 01:12:42.390
是能够完美的过去的

01:12:42.390 --> 01:12:43.150
不在中间

01:12:43.150 --> 01:12:44.070
他就死

01:12:44.070 --> 01:12:44.550
好了

01:12:44.550 --> 01:12:45.790
那接下来

01:12:45.790 --> 01:12:46.910
我们要再去想了

01:12:46.910 --> 01:12:48.270
那你过去了

01:12:48.270 --> 01:12:49.710
你现在能够撞上过去了

01:12:49.710 --> 01:12:50.470
没有问题

01:12:50.470 --> 01:12:52.630
那你能够撞上

01:12:52.630 --> 01:12:53.670
还死了没问题

01:12:53.670 --> 01:12:54.870
但是你过去了的话

01:12:54.870 --> 01:12:56.550
你是不是得给我一个分数啊

01:12:56.550 --> 01:12:57.870
是不是得给个分数啊

01:12:57.870 --> 01:12:59.390
那分数在哪去给啊

01:12:59.390 --> 01:13:02.070
那咱们是不是应该再去写另外的一个函数啊

01:13:02.070 --> 01:13:03.590
这个函数叫做什么呀

01:13:03.590 --> 01:13:04.910
添加分数

01:13:04.910 --> 01:13:05.190
对不对

01:13:05.190 --> 01:13:06.230
叫做加分

01:13:06.230 --> 01:13:07.750
那加分想一下

01:13:07.750 --> 01:13:11.590
我们应该在哪里去进行执行

01:13:11.590 --> 01:13:12.390
在哪去执行

01:13:13.710 --> 01:13:17.510
你是不是每一次小鸟在落下的这个过程当中

01:13:17.510 --> 01:13:19.990
你就要去判断一下碰撞检测

01:13:19.990 --> 01:13:21.030
你就要去看一下

01:13:21.030 --> 01:13:22.230
是否要加分啊

01:13:22.230 --> 01:13:22.990
是不是

01:13:22.990 --> 01:13:23.870
所以说这块哈

01:13:23.870 --> 01:13:27.830
咱们在这个点击了小鸟落下的时候啊

01:13:27.950 --> 01:13:29.110
不仅碰撞检测

01:13:29.110 --> 01:13:30.950
还要再去看看加分

01:13:30.950 --> 01:13:32.190
因为你碰撞检测

01:13:32.190 --> 01:13:33.590
检测未成功的话

01:13:33.590 --> 01:13:34.950
就证明你怎么样

01:13:34.950 --> 01:13:36.030
你死掉了

01:13:36.030 --> 01:13:36.670
你死掉的话

01:13:36.670 --> 01:13:38.590
就直接出现那个死那个界面了

01:13:38.590 --> 01:13:39.790
你加分也执行不了了

01:13:39.790 --> 01:13:40.910
执行也没必要了

01:13:40.910 --> 01:13:41.630
是不是

01:13:41.630 --> 01:13:43.590
然后如果说你碰撞检测过了的话

01:13:43.590 --> 01:13:46.190
你的这个分数才会正常的一个加上哈

01:13:46.190 --> 01:13:46.670
那好

01:13:46.670 --> 01:13:48.350
那在这块咱们来写一下哈

01:13:48.350 --> 01:13:50.070
我把它写在这吧

01:13:50.070 --> 01:13:55.960
来一个爱的死高加分

01:13:55.960 --> 01:13:56.520
加分

01:13:56.520 --> 01:13:59.240
那加分怎么去加呀

01:13:59.280 --> 01:14:01.480
加分怎么去加

01:14:01.480 --> 01:14:03.440
你是不是还得去知道什么

01:14:03.440 --> 01:14:04.000
知道

01:14:04.000 --> 01:14:04.400
哎

01:14:04.400 --> 01:14:05.320
你你不能说

01:14:05.320 --> 01:14:06.760
你只要碰撞检测

01:14:06.760 --> 01:14:07.640
没没失败

01:14:07.640 --> 01:14:08.480
你就加一份吧

01:14:08.480 --> 01:14:09.480
那这肯定不行

01:14:09.480 --> 01:14:11.080
你总是得有个范围吧

01:14:11.080 --> 01:14:12.280
范围是什么

01:14:12.280 --> 01:14:13.000
范围是什么

01:14:13.000 --> 01:14:14.160
什么时候

01:14:14.160 --> 01:14:15.760
柱子离开小鸟

01:14:15.760 --> 01:14:16.320
什么时候

01:14:16.320 --> 01:14:17.480
柱子离开小鸟

01:14:17.480 --> 01:14:20.600
当你的柱子小鱼13的时候离开小鸟

01:14:20.600 --> 01:14:23.040
因为当你住的正好等于13的时候

01:14:23.040 --> 01:14:24.560
他们两个刚刚离开

01:14:24.560 --> 01:14:26.560
还剩下那么一相处

01:14:26.560 --> 01:14:27.280
在什么

01:14:27.280 --> 01:14:28.240
在重合着呢

01:14:28.240 --> 01:14:30.640
但是当你小鱼13的时候就正好离开

01:14:30.640 --> 01:14:33.520
如果说你能够走到正好离开这块

01:14:33.520 --> 01:14:34.880
碰撞检测还成功了

01:14:34.880 --> 01:14:37.640
那是不是要分数加1了呀

01:14:37.640 --> 01:14:38.280
对不对

01:14:38.280 --> 01:14:38.880
好了

01:14:38.880 --> 01:14:39.920
那所以这块呢

01:14:39.920 --> 01:14:41.800
我要去拿到papx

01:14:41.800 --> 01:14:43.560
看看是不是小鱼13

01:14:43.560 --> 01:14:45.360
如果说小鱼13了的话

01:14:45.360 --> 01:14:47.240
我的这样的一个分数死高

01:14:47.240 --> 01:14:49.440
就要去进行自身加1了

01:14:49.440 --> 01:14:49.880
那好

01:14:49.880 --> 01:14:50.680
那同样的

01:14:50.680 --> 01:14:53.040
你去拿这个所谓的papx

01:14:53.040 --> 01:14:54.720
是不是也应该去哪儿啊

01:14:54.720 --> 01:14:57.440
去papar当中去拿到

01:14:57.480 --> 01:14:59.560
用了一个所引去找到里面的app

01:14:59.560 --> 01:15:01.320
去找到它的一个offside life

01:15:01.320 --> 01:15:03.000
那同样的所引怎么去拿呀

01:15:03.000 --> 01:15:04.360
通过分数来拿

01:15:04.360 --> 01:15:06.960
vstr死高

01:15:06.960 --> 01:15:07.880
是这样的吧

01:15:07.880 --> 01:15:09.000
没有什么问题

01:15:09.000 --> 01:15:09.520
对不对

01:15:09.520 --> 01:15:10.120
ok

01:15:10.120 --> 01:15:11.480
那现在想一下

01:15:11.480 --> 01:15:12.400
我死高加了

01:15:12.400 --> 01:15:15.080
我加了之后是不是展示在页面上啊

01:15:15.080 --> 01:15:17.520
展示在页面上的话

01:15:17.520 --> 01:15:18.920
怎么搞

01:15:18.920 --> 01:15:20.960
是不是也去操作一下那个道路元素啊

01:15:20.960 --> 01:15:23.600
哪个道路元素死高这个道路元素

01:15:23.600 --> 01:15:24.520
所以这块呢

01:15:24.520 --> 01:15:25.760
怎么就直接在这里面

01:15:25.760 --> 01:15:27.080
让它显示在上面

01:15:27.080 --> 01:15:28.040
就这次点

01:15:28.040 --> 01:15:29.240
哦死高

01:15:29.240 --> 01:15:29.920
点

01:15:29.920 --> 01:15:30.840
inner

01:15:30.840 --> 01:15:31.360
inner

01:15:32.560 --> 01:15:33.440
text

01:15:33.440 --> 01:15:36.520
等于加加过后的死高

01:15:36.520 --> 01:15:37.920
上面这步我们就省了

01:15:37.920 --> 01:15:39.680
一句话就搞定了

01:15:39.680 --> 01:15:40.680
一句话就搞定了

01:15:40.680 --> 01:15:41.240
好了哈

01:15:41.240 --> 01:15:44.100
咱来点击

01:15:44.100 --> 01:15:44.580
一分

01:15:45.900 --> 01:15:46.380
两分

01:15:47.460 --> 01:15:47.980
三分

01:15:49.180 --> 01:15:49.700
四分

01:15:50.660 --> 01:15:51.020
四

01:15:51.940 --> 01:15:53.100
这块是不是就完事了呀

01:15:53.100 --> 01:15:54.380
你之后能够加分了

01:15:54.380 --> 01:15:55.420
是不是能够加分了

01:15:55.420 --> 01:15:56.220
那好

01:15:56.220 --> 01:15:58.820
那咱们再去想另外的一个问题

01:15:58.820 --> 01:15:59.780
什么问题呢

01:15:59.780 --> 01:16:00.540
来点击哈

01:16:00.540 --> 01:16:01.460
玩一会哈

01:16:01.460 --> 01:16:01.940
一分

01:16:03.220 --> 01:16:03.740
两分

01:16:05.340 --> 01:16:05.900
三分

01:16:07.220 --> 01:16:07.740
四分

01:16:09.140 --> 01:16:09.540
五分

01:16:10.660 --> 01:16:11.100
六分

01:16:12.260 --> 01:16:12.980
七分

01:16:12.980 --> 01:16:14.940
哎没了

01:16:14.940 --> 01:16:16.780
没有柱子了

01:16:16.780 --> 01:16:18.100
怎么办

01:16:18.100 --> 01:16:19.820
再去生成柱子吗

01:16:19.820 --> 01:16:20.300
可以

01:16:20.300 --> 01:16:21.260
没有问题

01:16:21.260 --> 01:16:22.500
一旦你啊

01:16:22.500 --> 01:16:23.700
柱子没有了的时候

01:16:23.700 --> 01:16:24.900
就说当你的死高

01:16:24.900 --> 01:16:26.700
比如说你围舞的时候

01:16:26.700 --> 01:16:27.940
你就让它非常机智的

01:16:27.940 --> 01:16:29.620
还再去生成几个柱子

01:16:29.620 --> 01:16:30.820
这是没什么问题的

01:16:30.820 --> 01:16:31.740
没有什么问题

01:16:31.740 --> 01:16:33.740
但是我不想那么去做

01:16:33.740 --> 01:16:34.340
那么做的话

01:16:34.340 --> 01:16:35.260
思路很简单

01:16:35.260 --> 01:16:36.300
一下就能写完

01:16:36.300 --> 01:16:37.500
咱们换一种思路

01:16:37.500 --> 01:16:40.700
我想让第一顿柱子过了屏幕之后

01:16:40.700 --> 01:16:43.540
我移动到最后一个柱子的后面去

01:16:45.020 --> 01:16:46.100
哎对

01:16:46.100 --> 01:16:46.900
七啊

01:16:46.900 --> 01:16:47.780
七变零吗

01:16:47.780 --> 01:16:48.820
零变七啊

01:16:48.820 --> 01:16:50.380
零半之后一个哈

01:16:50.380 --> 01:16:51.100
想一下哈

01:16:51.100 --> 01:16:52.380
我我一个柱子

01:16:52.380 --> 01:16:53.580
移到屏幕之后

01:16:53.580 --> 01:16:54.580
哎过去了

01:16:54.580 --> 01:16:55.580
是不是过了之后

01:16:55.580 --> 01:16:57.460
紧接着变到最后去了

01:16:57.460 --> 01:16:58.780
啊变到最后去了

01:16:58.780 --> 01:16:59.660
那也就是说

01:16:59.660 --> 01:17:03.140
他需要到最后一个柱子的后面

01:17:03.140 --> 01:17:05.660
三百像素的地方重新出现

01:17:06.700 --> 01:17:07.180
是不是

01:17:08.340 --> 01:17:10.340
那我们是不是得有一个值

01:17:10.340 --> 01:17:13.500
来存放着当前这个柱子的

01:17:13.500 --> 01:17:14.500
所以啊

01:17:14.500 --> 01:17:15.540
为什么呀

01:17:15.540 --> 01:17:16.540
因为你看看

01:17:16.540 --> 01:17:17.980
我们虽然说

01:17:17.980 --> 01:17:19.740
想要让它移动

01:17:19.740 --> 01:17:21.140
但是移动的话

01:17:21.140 --> 01:17:22.340
只是视觉上

01:17:22.340 --> 01:17:24.220
它们的排列方式变了

01:17:24.220 --> 01:17:26.460
那它存放在这个Pype AR

01:17:26.460 --> 01:17:28.580
这个数组当中的位置还没变吧

01:17:29.540 --> 01:17:30.180
是不是

01:17:30.180 --> 01:17:31.100
是不是还没变

01:17:32.820 --> 01:17:33.780
想想看

01:17:33.780 --> 01:17:36.420
我们地零根柱子放到最后面去了

01:17:36.420 --> 01:17:38.740
只是位置改变了而已

01:17:38.740 --> 01:17:41.020
它存放在数组当中的这个

01:17:41.020 --> 01:17:42.460
所比如说它地零根

01:17:42.460 --> 01:17:44.420
它还是地零根对象吧

01:17:44.420 --> 01:17:44.980
对不对

01:17:44.980 --> 01:17:45.820
那所以呢

01:17:45.820 --> 01:17:48.220
我们想要去让它拿到

01:17:48.220 --> 01:17:50.020
跟最后一个柱子

01:17:50.020 --> 01:17:51.180
距离三百像素

01:17:51.180 --> 01:17:52.900
那咱首先得存放着

01:17:52.900 --> 01:17:55.020
当前在视觉上

01:17:55.020 --> 01:17:57.060
在整个页面的视觉上

01:17:57.060 --> 01:17:58.260
最后一个的柱子

01:17:58.260 --> 01:17:59.300
所以是几吧

01:17:59.300 --> 01:18:00.060
比如说

01:18:00.060 --> 01:18:01.620
LAST

01:18:01.620 --> 01:18:02.580
来一个Pype吧

01:18:02.580 --> 01:18:04.980
Pype Last Index

01:18:04.980 --> 01:18:06.860
初始的时候为几呀

01:18:06.860 --> 01:18:08.060
为六吧

01:18:08.060 --> 01:18:09.940
是不是为六啊

01:18:09.940 --> 01:18:11.140
我没有七个柱子

01:18:11.140 --> 01:18:12.540
零一二三四五六

01:18:12.540 --> 01:18:14.420
那最后一根可不就是六吗

01:18:14.420 --> 01:18:15.020
那你之后

01:18:15.020 --> 01:18:16.100
你第一根

01:18:16.100 --> 01:18:17.140
移过去了之后

01:18:17.140 --> 01:18:19.140
你要距离第六个

01:18:19.140 --> 01:18:21.020
元素三百像素

01:18:21.020 --> 01:18:23.220
那当你原来的第零个

01:18:23.220 --> 01:18:24.580
柱子变成视觉上的

01:18:24.580 --> 01:18:25.660
最后一个的时候

01:18:25.660 --> 01:18:26.940
你这个LAST index

01:18:26.940 --> 01:18:28.700
是不是应该变成零了呀

01:18:28.700 --> 01:18:29.060
对不对

01:18:29.060 --> 01:18:29.740
变成零了

01:18:29.740 --> 01:18:31.060
之后你

01:18:31.060 --> 01:18:31.860
第一根柱子

01:18:31.860 --> 01:18:32.780
移到最后的时候

01:18:32.780 --> 01:18:33.860
你在视觉上

01:18:33.860 --> 01:18:35.140
最后一根柱子

01:18:35.140 --> 01:18:36.900
所以是不是一呀

01:18:36.900 --> 01:18:37.900
是这样的吧

01:18:37.900 --> 01:18:38.380
OK

01:18:38.380 --> 01:18:39.740
我们俩记住这个思路

01:18:39.740 --> 01:18:40.700
那好

01:18:40.700 --> 01:18:42.020
咱们再回到一开始

01:18:42.020 --> 01:18:44.060
我怎么样能够判断出来

01:18:44.060 --> 01:18:45.860
当前的柱子

01:18:45.860 --> 01:18:47.980
移动到屏幕那边去了

01:18:47.980 --> 01:18:49.340
我看不见了

01:18:49.340 --> 01:18:50.500
怎么样去判断

01:18:50.500 --> 01:18:51.500
在哪能够去判断

01:18:53.500 --> 01:18:54.900
我们是不是有一个函数

01:18:54.900 --> 01:18:55.700
叫做

01:18:55.700 --> 01:18:57.300
PAP幕

01:18:57.300 --> 01:18:58.260
在这PAP幕里面

01:18:58.260 --> 01:18:59.900
是不是就一个X

01:18:59.900 --> 01:19:00.580
是不是

01:19:00.580 --> 01:19:01.060
OK

01:19:01.060 --> 01:19:01.580
我这一块

01:19:01.580 --> 01:19:03.340
是不是就可以来判断一下X

01:19:03.340 --> 01:19:06.420
当你X小于一个数数字的时候

01:19:06.420 --> 01:19:07.420
比如小于几呢

01:19:09.100 --> 01:19:10.140
给个数字吧

01:19:10.140 --> 01:19:11.860
小于-52

01:19:11.860 --> 01:19:13.860
为什么小于-52

01:19:13.860 --> 01:19:15.020
为什么呀

01:19:15.020 --> 01:19:19.300
因为我们柱子的宽度是52像素

01:19:19.300 --> 01:19:20.780
当你的这个柱子

01:19:20.780 --> 01:19:22.340
正好-52的时候

01:19:22.340 --> 01:19:24.380
证明这个柱子附过去了

01:19:24.380 --> 01:19:25.420
是不是就过去了呀

01:19:25.420 --> 01:19:27.740
所以这块来一个小于-52

01:19:27.740 --> 01:19:28.220
OK

01:19:28.220 --> 01:19:31.340
当你柱子小于-52的时候

01:19:31.340 --> 01:19:32.700
我要去怎么办呢

01:19:32.700 --> 01:19:36.420
我要去拿到最后一根柱子的

01:19:36.420 --> 01:19:37.380
锁引

01:19:37.380 --> 01:19:39.860
拿到最后一根柱子的

01:19:39.860 --> 01:19:41.580
这样理一个LIFE的值

01:19:41.580 --> 01:19:42.020
对吧

01:19:42.020 --> 01:19:43.820
在它的基础之上

01:19:43.820 --> 01:19:46.420
加上300就可以了

01:19:46.420 --> 01:19:47.180
好

01:19:47.180 --> 01:19:49.820
或者一个LAST-PIEP-LIFE

01:19:49.820 --> 01:19:52.620
等于DES2

01:19:52.620 --> 01:19:53.300
谁来着

01:19:53.300 --> 01:19:56.980
PIEP-LRA当中的DES2

01:19:56.980 --> 01:20:04.100
LAST-PIEP-LAST-INDEX的UP当中的

01:20:04.100 --> 01:20:05.620
OFFSITE-LIFE

01:20:05.620 --> 01:20:09.380
这就拿到最后一根柱子的LIFE值了

01:20:09.380 --> 01:20:09.660
OK

01:20:09.660 --> 01:20:11.900
有同学说52怎么来的呀

01:20:11.900 --> 01:20:13.580
怎么来的呀

01:20:13.580 --> 01:20:14.420
你想一想

01:20:14.420 --> 01:20:16.260
你过一个墙

01:20:16.260 --> 01:20:17.860
你怎么样能够让墙

01:20:17.860 --> 01:20:19.420
这边的人看不到你呀

01:20:19.420 --> 01:20:21.340
是不是你的身体只好过去了呀

01:20:21.340 --> 01:20:21.780
也说呢

01:20:21.780 --> 01:20:24.500
你移动了你一个身体的一个宽度

01:20:24.500 --> 01:20:26.220
那相对于我们这个柱子来讲

01:20:26.220 --> 01:20:28.580
是不是就往这个屏幕的左边

01:20:28.580 --> 01:20:30.380
移动了它一个自己呀

01:20:30.380 --> 01:20:33.740
那我们一个柱子的宽度是多少来着

01:20:33.740 --> 01:20:34.300
在这

01:20:34.300 --> 01:20:35.820
是不是是52啊

01:20:35.820 --> 01:20:36.500
对不对

01:20:36.500 --> 01:20:37.180
就是52

01:20:37.180 --> 01:20:38.980
也就是它自己的一个宽度啊

01:20:38.980 --> 01:20:39.700
好嘞

01:20:39.700 --> 01:20:40.260
很简单

01:20:40.260 --> 01:20:42.100
一个小逻辑啊

01:20:42.100 --> 01:20:42.660
OK

01:20:42.660 --> 01:20:44.660
这一块我根据

01:20:44.700 --> 01:20:45.940
最后一根柱子

01:20:45.940 --> 01:20:49.060
所以我拿到了它的OFFSITE-LIFE值

01:20:49.060 --> 01:20:51.540
接着我去设置谁

01:20:51.540 --> 01:20:55.010
我去设置谁

01:20:55.010 --> 01:20:58.450
设置当前的这个柱子

01:20:58.450 --> 01:21:00.210
也说

01:21:00.210 --> 01:21:01.450
Base.pap

01:21:01.450 --> 01:21:03.610
RR当中的DIG

01:21:03.610 --> 01:21:04.930
为什么是DIG呀

01:21:04.930 --> 01:21:06.530
因为你循环的时候

01:21:06.530 --> 01:21:08.530
你是不是就能够拿到这几根柱子呀

01:21:08.530 --> 01:21:09.010
对不对

01:21:09.010 --> 01:21:11.090
它的DIG当中的谁呀

01:21:12.530 --> 01:21:13.890
当中的谁

01:21:13.890 --> 01:21:14.170
哎

01:21:14.170 --> 01:21:15.490
不是说当中的谁了

01:21:15.490 --> 01:21:16.330
这一块

01:21:16.330 --> 01:21:18.930
这块是不是直接有这个OAP-PAP和DON-PAP

01:21:18.930 --> 01:21:19.930
咱不用再去拿了

01:21:19.930 --> 01:21:20.930
不用再去拿了

01:21:20.930 --> 01:21:23.850
直接去设置这个OAP-PAP

01:21:23.850 --> 01:21:28.130
它的一个STILE-LIFE

01:21:28.130 --> 01:21:29.290
懂于谁

01:21:29.290 --> 01:21:33.610
懂于LAST-PAP-LIFE加上一个300

01:21:33.610 --> 01:21:34.650
加上300

01:21:34.650 --> 01:21:36.530
让它们之间的距离是300

01:21:36.530 --> 01:21:38.330
再去加上一个PX

01:21:38.330 --> 01:21:39.210
那同样的

01:21:39.210 --> 01:21:41.010
你是不是也可以去设置谁呀

01:21:41.010 --> 01:21:44.620
设置DON

01:21:44.620 --> 01:21:44.940
哎

01:21:44.940 --> 01:21:45.900
不是吧

01:21:45.900 --> 01:21:48.180
DON-PAP-STILE-LIFE

01:21:48.220 --> 01:21:51.500
懂于这个300加上一个PX

01:21:51.500 --> 01:21:52.940
是不是

01:21:52.940 --> 01:21:56.460
这样这个逻辑没有什么问题吧

01:21:56.460 --> 01:21:58.140
这个逻辑是不是没有什么问题

01:21:59.420 --> 01:21:59.980
ok

01:21:59.980 --> 01:22:01.380
那接着我们来想一下

01:22:01.380 --> 01:22:03.820
我们都在这里边去设置它了

01:22:03.820 --> 01:22:06.860
底下这个还有必要再去设置一下吗

01:22:06.860 --> 01:22:07.980
还有必要吗

01:22:07.980 --> 01:22:09.540
因为你小于52了

01:22:09.540 --> 01:22:10.780
你已经让它上到最后了

01:22:10.780 --> 01:22:12.060
然后你之前把这个F之后

01:22:12.060 --> 01:22:13.420
你又让它回去了

01:22:13.420 --> 01:22:14.740
这玩啥呢呀

01:22:14.740 --> 01:22:15.260
是不是

01:22:15.260 --> 01:22:16.780
所以咱们的这个

01:22:16.780 --> 01:22:19.420
这层循环底下就不需要去执行了

01:22:19.420 --> 01:22:21.580
那怎么样去跳出这次循环

01:22:21.580 --> 01:22:23.220
执行下次循环呢

01:22:23.220 --> 01:22:25.540
用CONTAINU

01:22:25.540 --> 01:22:26.060
ok

01:22:26.060 --> 01:22:27.260
那咱们来测试一下

01:22:27.260 --> 01:22:28.260
再来查一下

01:22:29.060 --> 01:22:29.580
来吧

01:22:31.060 --> 01:22:32.020
1

01:22:32.020 --> 01:22:33.060
2

01:22:33.060 --> 01:22:34.860
我应该把那个LANS改小一点

01:22:34.860 --> 01:22:36.660
这玩的时间还能短一点

01:22:36.660 --> 01:22:37.940
4

01:22:37.940 --> 01:22:39.140
5

01:22:39.140 --> 01:22:39.620
6

01:22:39.620 --> 01:22:40.660
看这

01:22:40.660 --> 01:22:41.020
哎

01:22:41.020 --> 01:22:42.100
看到了吗

01:22:42.100 --> 01:22:43.260
多了柱子了

01:22:43.260 --> 01:22:44.740
柱子肯定是多了

01:22:44.740 --> 01:22:45.860
柱子肯定是多了

01:22:45.900 --> 01:22:48.580
只不过是有一些小问题发生了

01:22:48.580 --> 01:22:49.700
有一些小问题发生了

01:22:49.700 --> 01:22:50.660
算是什么呢

01:22:50.660 --> 01:22:51.980
最后一个是柱子

01:22:51.980 --> 01:22:52.860
LAST

01:22:52.860 --> 01:22:54.380
PAP INTEX是第

01:22:54.380 --> 01:22:55.020
呃

01:22:55.020 --> 01:22:55.940
第几个

01:22:55.940 --> 01:22:56.540
是第几个

01:22:57.820 --> 01:22:58.980
是第6个

01:22:58.980 --> 01:23:01.460
咱们是存是666吗

01:23:01.460 --> 01:23:01.580
啊

01:23:01.580 --> 01:23:01.900
6个

01:23:01.900 --> 01:23:02.580
没问题

01:23:02.580 --> 01:23:04.180
但是你下一次

01:23:04.180 --> 01:23:05.100
你再去放的时候

01:23:05.100 --> 01:23:06.220
能放在那了吗

01:23:06.220 --> 01:23:06.820
不能

01:23:06.820 --> 01:23:07.380
是不是

01:23:07.380 --> 01:23:10.220
那咱这个锁影是不是得去更新一下

01:23:10.220 --> 01:23:10.380
哎

01:23:10.380 --> 01:23:10.820
对

01:23:10.820 --> 01:23:11.860
更新一下

01:23:11.860 --> 01:23:12.340
做这块

01:23:12.340 --> 01:23:14.220
你再让

01:23:14.220 --> 01:23:16.180
PAP LAST INTEX加几

01:23:16.180 --> 01:23:17.180
加加

01:23:17.180 --> 01:23:18.260
但是你加加之后

01:23:18.260 --> 01:23:19.620
你想一下

01:23:19.620 --> 01:23:21.620
你已经是最后一根6了

01:23:21.620 --> 01:23:23.100
然后呢

01:23:23.100 --> 01:23:24.780
然后加一是会变七

01:23:24.780 --> 01:23:27.180
有第七个元素吗

01:23:27.180 --> 01:23:28.100
有第七个吗

01:23:28.100 --> 01:23:28.580
没有

01:23:28.580 --> 01:23:30.780
因为咱们反复玩的都是

01:23:30.780 --> 01:23:32.980
这这总共有七个

01:23:32.980 --> 01:23:33.860
总共有七个

01:23:33.860 --> 01:23:35.140
零一二三四五六

01:23:35.140 --> 01:23:35.940
这样的一个锁影

01:23:35.940 --> 01:23:36.820
总共七个

01:23:36.820 --> 01:23:37.940
但是我说有七的话

01:23:37.940 --> 01:23:38.660
怎么样

01:23:38.660 --> 01:23:40.940
是不是有第八个柱子了呀

01:23:40.980 --> 01:23:42.380
就是第八个柱子了

01:23:42.380 --> 01:23:44.180
所以这块我们应该去想一下

01:23:44.180 --> 01:23:45.780
我当我第零个柱子

01:23:45.780 --> 01:23:47.660
移动到最后的时候

01:23:47.660 --> 01:23:50.140
我视觉上最后一个柱子的锁影

01:23:50.140 --> 01:23:51.620
是不是零了

01:23:51.620 --> 01:23:53.740
是第零个元素吧

01:23:53.740 --> 01:23:54.740
对吧

01:23:54.740 --> 01:23:55.180
ok

01:23:55.180 --> 01:23:55.820
那好

01:23:55.820 --> 01:23:56.900
那这个你想一下

01:23:56.900 --> 01:23:58.740
应该怎么办

01:23:58.740 --> 01:23:59.540
怎么办

01:23:59.540 --> 01:24:02.140
你让它先加一

01:24:02.140 --> 01:24:04.660
this.pap last inex加一

01:24:04.660 --> 01:24:06.180
你去模上个谁呀

01:24:06.180 --> 01:24:08.260
模上一个this.pap last

01:24:08.260 --> 01:24:10.180
不就可以了吗

01:24:10.180 --> 01:24:11.620
是不是

01:24:11.620 --> 01:24:12.620
想一下

01:24:12.620 --> 01:24:13.380
你看看

01:24:13.380 --> 01:24:15.020
当前

01:24:15.020 --> 01:24:16.180
还没过去的时候

01:24:16.180 --> 01:24:17.580
第一个柱子没过去的时候

01:24:17.580 --> 01:24:19.100
它是几了呀

01:24:19.100 --> 01:24:19.900
还是几

01:24:21.340 --> 01:24:22.140
是六

01:24:22.140 --> 01:24:23.460
第零个柱子过去的时候

01:24:23.460 --> 01:24:24.940
锁影该变成是零了

01:24:24.940 --> 01:24:25.420
那好

01:24:25.420 --> 01:24:26.420
那你应该

01:24:26.420 --> 01:24:28.260
你的逻辑应该是让这个

01:24:28.260 --> 01:24:29.980
最后一个锁影加一

01:24:29.980 --> 01:24:30.220
对不对

01:24:30.220 --> 01:24:31.100
自身加一

01:24:31.100 --> 01:24:31.700
加一之后

01:24:31.700 --> 01:24:34.020
但由于说我们想要让它为零

01:24:34.020 --> 01:24:35.820
那你说模上七是不是就可以了呀

01:24:35.820 --> 01:24:36.700
六加一

01:24:36.700 --> 01:24:37.460
得七

01:24:37.460 --> 01:24:38.500
七模七

01:24:38.500 --> 01:24:40.060
得零

01:24:40.060 --> 01:24:40.940
对不对

01:24:40.940 --> 01:24:42.540
这是不是就能够找到了呀

01:24:42.540 --> 01:24:44.980
只要你下一次又过去一根

01:24:44.980 --> 01:24:46.260
加上一为一

01:24:46.260 --> 01:24:47.700
一模上七得解

01:24:47.700 --> 01:24:48.420
为一

01:24:48.420 --> 01:24:49.260
再下一根呢

01:24:49.260 --> 01:24:50.300
二模七为二

01:24:50.300 --> 01:24:51.900
这不就通了吗

01:24:51.900 --> 01:24:53.140
是不是就通了呀

01:24:53.140 --> 01:24:53.620
ok

01:24:53.620 --> 01:24:54.820
那咱们再来看一下

01:24:54.820 --> 01:24:56.700
有没有什么问题发生

01:24:56.700 --> 01:24:57.420
来点击

01:24:59.420 --> 01:25:01.020
零一

01:25:01.020 --> 01:25:01.220
哎

01:25:01.220 --> 01:25:03.060
其实我想打包给你们一起讲

01:25:03.060 --> 01:25:04.060
这太耐磨时间了

01:25:06.060 --> 01:25:06.860
四

01:25:06.860 --> 01:25:08.380
五

01:25:08.380 --> 01:25:09.540
六

01:25:09.540 --> 01:25:10.460
咱甭说别的

01:25:10.460 --> 01:25:12.140
你看到这算是死了

01:25:12.140 --> 01:25:13.220
但是你看

01:25:13.220 --> 01:25:13.940
你看什么

01:25:13.940 --> 01:25:16.180
这柱子是不是正好在那了呀

01:25:16.180 --> 01:25:16.780
是不是

01:25:16.780 --> 01:25:19.060
但为什么现在有问题了呢

01:25:19.060 --> 01:25:21.340
问题出现在哪了呀

01:25:21.340 --> 01:25:21.860
在哪

01:25:23.220 --> 01:25:24.060
在

01:25:24.060 --> 01:25:24.660
找

01:25:24.660 --> 01:25:26.740
元素的锁影上

01:25:26.740 --> 01:25:27.420
看这哈

01:25:27.420 --> 01:25:29.460
咱们原来用index用的是谁

01:25:29.460 --> 01:25:30.460
用的是死膏

01:25:30.460 --> 01:25:31.060
对不对

01:25:31.060 --> 01:25:33.380
那当你死膏都为七了的时候

01:25:33.380 --> 01:25:34.780
还有那个元素吗

01:25:34.780 --> 01:25:35.820
没有了

01:25:35.820 --> 01:25:38.740
那咱们是不是还得拿第零个元素啊

01:25:38.740 --> 01:25:39.180
对不对

01:25:39.180 --> 01:25:40.340
因为在视觉上

01:25:40.340 --> 01:25:42.380
所谓的那第七个元素

01:25:42.380 --> 01:25:44.340
就是我们的第零个元素

01:25:44.340 --> 01:25:46.020
飘过去的而已

01:25:46.020 --> 01:25:48.740
所以这块你同样也是摩上一个谁呀

01:25:48.740 --> 01:25:50.580
摩上一个dece点

01:25:50.580 --> 01:25:51.900
pipelance

01:25:51.900 --> 01:25:52.540
那同样的

01:25:52.540 --> 01:25:54.700
上面是不是还有个地方也用上了呀

01:25:54.700 --> 01:25:56.500
咱们一样的来改一下哈

01:25:56.500 --> 01:25:57.940
在哪来着

01:25:57.940 --> 01:25:59.340
去加分的时候吧

01:25:59.340 --> 01:26:00.700
加分是在这哈

01:26:00.700 --> 01:26:02.340
这块也是啊

01:26:02.340 --> 01:26:03.420
摩上一个他

01:26:03.420 --> 01:26:04.540
之后咱们再来看

01:26:04.540 --> 01:26:06.060
来点击零

01:26:07.300 --> 01:26:08.180
一分

01:26:08.180 --> 01:26:10.100
过去了两分

01:26:10.100 --> 01:26:10.620
三分

01:26:12.220 --> 01:26:12.700
四分

01:26:13.940 --> 01:26:14.340
五

01:26:15.940 --> 01:26:16.260
六

01:26:17.700 --> 01:26:18.100
七

01:26:19.460 --> 01:26:19.820
八

01:26:21.180 --> 01:26:21.500
哎

01:26:21.500 --> 01:26:21.860
九

01:26:22.860 --> 01:26:23.220
十

01:26:24.300 --> 01:26:25.420
十一

01:26:25.420 --> 01:26:26.820
我四一个

01:26:26.820 --> 01:26:28.540
这是不就完事了

01:26:28.540 --> 01:26:31.340
是不是这个就是一个逻辑上的一个问题

01:26:31.340 --> 01:26:33.100
这个逻辑的思维啊

01:26:33.100 --> 01:26:34.540
大家呢下课啊

01:26:34.540 --> 01:26:37.980
从我的这个代码上下载下来之后

01:26:37.980 --> 01:26:39.140
好好捋一遍

01:26:39.140 --> 01:26:40.660
因为我不指着你们上课

01:26:40.660 --> 01:26:43.380
能把这个逻辑能够全部的捋懂

01:26:43.380 --> 01:26:43.620
哈

01:26:43.620 --> 01:26:45.580
就是我我相信会有人能够捋懂

01:26:45.580 --> 01:26:46.620
但是不能说

01:26:46.620 --> 01:26:49.580
保证所有人都能把这个逻辑给小巷的到

01:26:49.580 --> 01:26:50.900
因为还是比较绕的

01:26:50.900 --> 01:26:51.700
清楚了吧

01:26:51.700 --> 01:26:52.540
这块哈

01:26:52.540 --> 01:26:54.540
如果你大概听思路没有什么问题

01:26:54.540 --> 01:26:57.220
咱们就进入到下一个阶段了

01:26:57.220 --> 01:26:58.060
已经蒙蒙了

01:26:58.060 --> 01:26:59.300
是吧

01:26:59.300 --> 01:27:00.060
意料到了哈

01:27:00.060 --> 01:27:01.340
在我的意料之外了

01:27:01.340 --> 01:27:04.020
回去一定要拿原码好好看一遍

01:27:04.020 --> 01:27:05.460
一定要自己写一遍

01:27:05.460 --> 01:27:06.060
清楚了吧

01:27:06.060 --> 01:27:07.060
因为这个逻辑吧

01:27:07.100 --> 01:27:08.980
它有一个视觉上的一个效果

01:27:08.980 --> 01:27:10.820
你一点转过来

01:27:10.820 --> 01:27:11.620
再来说一遍

01:27:11.620 --> 01:27:13.140
再来说一遍哈

01:27:13.140 --> 01:27:14.540
这么多人蒙我再说一遍吧

01:27:14.540 --> 01:27:16.260
咱也别怕这个时间的问题啊

01:27:16.260 --> 01:27:18.180
因为对我对于我来讲

01:27:18.180 --> 01:27:19.700
脱藏是常事哈

01:27:19.700 --> 01:27:20.500
看这哈

01:27:20.500 --> 01:27:22.340
假如说我就不多讲了哈

01:27:22.340 --> 01:27:23.740
咱们就有三个柱子

01:27:23.740 --> 01:27:24.820
好不好三个柱子

01:27:24.820 --> 01:27:27.780
让这三个柱子还来回的去寻环

01:27:27.780 --> 01:27:29.100
那你看

01:27:29.100 --> 01:27:30.060
这三个柱子

01:27:30.060 --> 01:27:31.220
所以也没零

01:27:31.220 --> 01:27:33.180
一二对不对

01:27:33.180 --> 01:27:34.700
我这是一个墙啊

01:27:34.700 --> 01:27:36.140
假如说现在这是墙

01:27:36.140 --> 01:27:37.100
柱子是移动

01:27:37.100 --> 01:27:38.020
移动了之后

01:27:38.020 --> 01:27:38.940
假如墙

01:27:38.940 --> 01:27:40.140
零过去了

01:27:40.140 --> 01:27:40.980
零过去了之后

01:27:40.980 --> 01:27:42.540
我需要让这个零去到哪

01:27:42.540 --> 01:27:43.940
去到二的这个后面

01:27:43.940 --> 01:27:46.180
原来所引为零的这个元素

01:27:46.180 --> 01:27:47.740
应该去到二的后面了

01:27:48.860 --> 01:27:49.860
去到这

01:27:49.860 --> 01:27:51.260
它是第零个

01:27:51.260 --> 01:27:52.260
它是第零个

01:27:52.260 --> 01:27:54.940
接着当你第一个元素

01:27:54.940 --> 01:27:57.540
当你第一个元素过了墙之后

01:27:57.540 --> 01:28:00.060
它又放到为零的这个元素过后了

01:28:00.060 --> 01:28:02.140
这个逻辑大家应该懂吧

01:28:02.140 --> 01:28:03.100
这个是不是应该懂了

01:28:05.220 --> 01:28:05.900
同学们

01:28:05.900 --> 01:28:07.060
这个是不是应该懂了

01:28:12.870 --> 01:28:13.150
对

01:28:13.150 --> 01:28:14.070
就是一个轮波腿

01:28:14.070 --> 01:28:14.790
螺接

01:28:14.790 --> 01:28:15.510
好了

01:28:15.510 --> 01:28:17.190
接着咱们来想一下

01:28:17.190 --> 01:28:20.350
我们在这个里边去搞所引

01:28:20.350 --> 01:28:21.750
不就是这么一回事吗

01:28:21.750 --> 01:28:23.750
我们反复的去变

01:28:23.750 --> 01:28:25.790
最后一根柱子的所引

01:28:25.790 --> 01:28:26.470
你想

01:28:26.470 --> 01:28:27.630
我们最后一个柱子

01:28:27.630 --> 01:28:28.550
最开始的时候

01:28:28.550 --> 01:28:30.030
视觉上是第六根

01:28:30.030 --> 01:28:31.390
那你过去一根之后

01:28:31.390 --> 01:28:32.550
你在逻辑上

01:28:32.550 --> 01:28:34.270
你是不是得让它去进行加一呀

01:28:34.270 --> 01:28:36.590
因为确实你后面又有一根柱子了

01:28:36.590 --> 01:28:37.150
加一

01:28:37.150 --> 01:28:39.550
但是由于我们在逻辑上

01:28:39.550 --> 01:28:40.870
是将前一个

01:28:40.870 --> 01:28:42.750
第一根柱子移到后面去了

01:28:42.750 --> 01:28:44.110
所以我们应该让它为零

01:28:44.110 --> 01:28:45.390
那怎么为零啊

01:28:45.390 --> 01:28:46.630
七磨上一个七

01:28:46.630 --> 01:28:48.070
是不是为一个零了呀

01:28:48.070 --> 01:28:48.510
对不对

01:28:48.510 --> 01:28:50.870
那其实这个逻辑就是比较简单一点

01:28:50.870 --> 01:28:52.310
你只要把这个逻辑打通了

01:28:52.310 --> 01:28:53.630
打通自己的人多二卖

01:28:53.630 --> 01:28:54.710
就没什么问题

01:28:54.710 --> 01:28:56.430
大家回去看看原码

01:28:56.430 --> 01:28:58.310
看看原码有什么不会的话

01:28:58.310 --> 01:28:59.070
可以问问我

01:28:59.070 --> 01:28:59.630
可以问我

01:29:00.870 --> 01:29:02.510
是不是过了七根柱子之后

01:29:02.510 --> 01:29:03.550
鸟从哪里过

01:29:03.550 --> 01:29:04.390
多有规了

01:29:04.390 --> 01:29:05.110
对

01:29:05.110 --> 01:29:06.990
我们可以换一下

01:29:06.990 --> 01:29:08.110
刚要讲到这

01:29:08.110 --> 01:29:10.470
因为发现柱子移过去了之后

01:29:10.470 --> 01:29:12.150
那你那高度又是一样的

01:29:12.150 --> 01:29:13.150
那七个一循环

01:29:13.150 --> 01:29:14.710
七个一循环有啥意思

01:29:14.710 --> 01:29:16.630
你重新给它设置一下呗

01:29:16.630 --> 01:29:17.110
是不是

01:29:17.110 --> 01:29:18.190
你重新给它设置一下

01:29:18.190 --> 01:29:21.070
所以高度咱重新来搞一下

01:29:21.070 --> 01:29:21.990
重新来搞一下

01:29:21.990 --> 01:29:23.230
怎么重新搞

01:29:23.230 --> 01:29:25.590
是不是还得去重求一下呀

01:29:25.590 --> 01:29:28.920
怎么去求外

01:29:28.920 --> 01:29:30.760
比如求的一个上柱子的高度

01:29:30.760 --> 01:29:33.040
和一个下柱子的高度

01:29:33.040 --> 01:29:35.560
接着再去给上柱子设置高度

01:29:35.560 --> 01:29:36.640
再去给下属

01:29:36.640 --> 01:29:37.920
下柱子去设置高度

01:29:37.920 --> 01:29:38.400
是不是

01:29:38.400 --> 01:29:40.240
比如说你这块喊喊

01:29:40.240 --> 01:29:40.720
在这里

01:29:43.640 --> 01:29:45.440
比如说我直接写下面了

01:29:45.440 --> 01:29:46.040
在这了

01:29:46.040 --> 01:29:47.040
OK

01:29:47.040 --> 01:29:48.080
去新求一下

01:29:48.080 --> 01:29:49.240
因为你新运行一下

01:29:49.240 --> 01:29:50.520
不就是新求一下吗

01:29:50.520 --> 01:29:51.680
接着去设置

01:29:51.680 --> 01:29:53.200
O-A-P-P-D-R

01:29:53.200 --> 01:29:56.280
S-D-L-D-R-H-T

01:29:56.280 --> 01:29:59.960
等于A-P-H-T加上一个PX

01:29:59.960 --> 01:30:00.600
同样的

01:30:00.600 --> 01:30:02.680
下柱子也是一样的一个道理

01:30:02.680 --> 01:30:04.600
但是这块代码就有点偶和了

01:30:04.600 --> 01:30:05.720
偶和在哪了呀

01:30:05.720 --> 01:30:08.240
偶和在你反复去求

01:30:08.240 --> 01:30:10.880
上柱子的高度和下柱子的高度了

01:30:10.880 --> 01:30:11.800
你不断的

01:30:11.800 --> 01:30:13.640
一会儿在这求一会儿在那求

01:30:13.640 --> 01:30:15.640
所以这部操作咱们最好呢

01:30:15.640 --> 01:30:18.520
也去封装成为一个函数来用

01:30:18.520 --> 01:30:19.400
比如说叫做

01:30:19.400 --> 01:30:26.000
Gate-P-P-H-T

01:30:26.000 --> 01:30:29.370
方式

01:30:29.370 --> 01:30:29.890
OK

01:30:29.890 --> 01:30:30.850
那在这里面呢

01:30:30.850 --> 01:30:32.210
咱们来

01:30:32.210 --> 01:30:33.730
执行这一步

01:30:33.730 --> 01:30:34.530
然后Return

01:30:34.530 --> 01:30:35.970
因为你要求的之后

01:30:35.970 --> 01:30:37.010
在别的地方使嘛

01:30:37.010 --> 01:30:38.650
那你就把它给Return出去

01:30:38.650 --> 01:30:40.130
Return一个Up-H-T

01:30:40.130 --> 01:30:41.690
或者Return一个Up

01:30:41.690 --> 01:30:43.130
为一个Up-H-T

01:30:43.130 --> 01:30:44.930
接着再Return一个Done

01:30:44.930 --> 01:30:46.290
为一个Done-H-T

01:30:46.290 --> 01:30:47.530
那你在别的地方

01:30:47.530 --> 01:30:50.250
是不是就不用反复去执行这两个逻辑了呀

01:30:50.250 --> 01:30:51.530
你只要怎么样

01:30:51.530 --> 01:30:52.690
去获取一下

01:30:52.690 --> 01:30:55.010
执行一下这个Gate-P-H-T

01:30:55.010 --> 01:30:55.370
然后呢

01:30:55.370 --> 01:30:57.610
再去给它设置一下高度就可以了

01:30:57.610 --> 01:30:58.130
是不是

01:30:58.130 --> 01:30:58.650
那这个呢

01:30:58.650 --> 01:30:59.450
我就不演示了

01:30:59.450 --> 01:31:00.690
因为比较简单

01:31:00.690 --> 01:31:01.730
用演示吗

01:31:01.730 --> 01:31:02.330
用演示吗

01:31:02.330 --> 01:31:02.730
演示话

01:31:02.730 --> 01:31:03.530
再演示一下

01:31:03.530 --> 01:31:04.410
不演示的话

01:31:04.410 --> 01:31:05.650
过去就可以了

01:31:05.650 --> 01:31:08.440
又不用

01:31:08.440 --> 01:31:09.560
等你们一会儿

01:31:09.560 --> 01:31:15.980
可能咱没有延迟

01:31:15.980 --> 01:31:17.620
没有人说话吗

01:31:17.620 --> 01:31:18.940
延迟不能这么大吧

01:31:18.980 --> 01:31:21.500
吓得我以为我又卡掉了

01:31:21.500 --> 01:31:22.140
没人说话

01:31:22.140 --> 01:31:23.020
我就直接演示了

01:31:23.020 --> 01:31:23.940
哈

01:31:23.940 --> 01:31:25.500
哎嘛呀

01:31:25.500 --> 01:31:26.860
啊不用是吧

01:31:26.860 --> 01:31:27.860
不用我就不演示了

01:31:27.860 --> 01:31:27.940
哈

01:31:27.940 --> 01:31:30.140
因为你就让这个函数啊

01:31:30.140 --> 01:31:31.380
再让这个函数

01:31:31.380 --> 01:31:33.860
在这里面去执行一下就可以了

01:31:33.860 --> 01:31:34.740
执行一下就可以了

01:31:34.740 --> 01:31:37.700
然后分别的去取到这个对象当中的Up和Done

01:31:37.700 --> 01:31:38.540
就OK了哈

01:31:38.540 --> 01:31:39.580
这块就过了哈

01:31:39.580 --> 01:31:40.980
好了

01:31:40.980 --> 01:31:41.420
OK

01:31:41.420 --> 01:31:43.620
那接着我们要去处理的是什么呀

01:31:43.620 --> 01:31:46.060
是你失败的时候的一个逻辑了

01:31:46.060 --> 01:31:46.980
失败的时候

01:31:46.980 --> 01:31:48.900
还应该有谁

01:31:49.340 --> 01:31:50.180
别蒙圈哈

01:31:50.180 --> 01:31:50.940
慢慢看哈

01:31:50.940 --> 01:31:51.620
慢慢看

01:31:51.620 --> 01:31:52.980
这个这个小游戏

01:31:52.980 --> 01:31:55.260
他的一个逻辑还是比较复杂的

01:31:55.260 --> 01:31:56.300
还是比较复杂的

01:31:56.300 --> 01:31:57.340
就是你们

01:31:57.340 --> 01:31:58.980
千万不要指望着哈

01:31:58.980 --> 01:32:00.100
在一个课上

01:32:00.100 --> 01:32:02.460
能够把老师所有的逻辑都读懂

01:32:02.460 --> 01:32:02.980
都读懂

01:32:02.980 --> 01:32:04.860
这个肯定是做不到的

01:32:04.860 --> 01:32:07.500
除非说你有很长时间的一个基点

01:32:07.500 --> 01:32:08.860
你写了很多的Demo

01:32:08.860 --> 01:32:10.420
你做了很多的练习之后

01:32:10.420 --> 01:32:10.820
OK

01:32:10.820 --> 01:32:11.540
你能够明白

01:32:11.540 --> 01:32:12.900
大概老师这样的一个思路

01:32:12.900 --> 01:32:14.540
那如果说你是第一次做的话

01:32:14.540 --> 01:32:16.700
那可能这个逻辑对于你而言

01:32:16.700 --> 01:32:18.140
会有一点点的难

01:32:18.180 --> 01:32:19.220
你难的话呢

01:32:19.220 --> 01:32:21.060
先不要去过多的去管

01:32:21.060 --> 01:32:22.780
先把这个思路大概的记住

01:32:22.780 --> 01:32:24.580
因为咱们这个课是有回放的

01:32:24.580 --> 01:32:25.740
你可以反复的去听

01:32:25.740 --> 01:32:26.660
反复的去看

01:32:26.660 --> 01:32:28.300
然后你多去做练习

01:32:28.300 --> 01:32:30.620
把这个逻辑高高懂就可以了

01:32:30.620 --> 01:32:31.860
高高懂就可以了

01:32:31.860 --> 01:32:32.380
好了

01:32:32.380 --> 01:32:34.980
那咱们来看失败的这样一个逻辑

01:32:34.980 --> 01:32:37.660
失败了之后咱们不是有分吗

01:32:37.660 --> 01:32:39.260
看一下咱是不是有分

01:32:39.260 --> 01:32:39.700
对吧

01:32:39.700 --> 01:32:40.180
分的话

01:32:40.180 --> 01:32:43.860
你这块你的这样的一个结果

01:32:43.860 --> 01:32:46.220
你这次玩的结果是不是显示在这儿

01:32:46.220 --> 01:32:48.100
所以说咱们应该去拿谁呀

01:32:48.300 --> 01:32:50.540
去拿那个Final Scall吧

01:32:50.540 --> 01:32:54.700
咱是不是有一个元素存放着最终的一个分数啊

01:32:54.700 --> 01:32:55.660
就是这个

01:32:55.660 --> 01:32:56.940
哪儿来着

01:32:56.940 --> 01:32:57.460
诶诶诶

01:32:57.460 --> 01:32:57.780
这儿呢

01:32:57.780 --> 01:32:58.580
Final Scall

01:32:58.580 --> 01:33:00.980
所以咱们把它给取到

01:33:00.980 --> 01:33:02.700
仍然是在上面来取

01:33:03.940 --> 01:33:06.020
那这块咱们就可以直接通过

01:33:06.020 --> 01:33:07.220
O&来取了

01:33:07.220 --> 01:33:09.300
因为它是它的一个里面字元素

01:33:09.300 --> 01:33:12.980
叫做Final Scall

01:33:13.740 --> 01:33:14.540
起个名字

01:33:14.540 --> 01:33:18.960
叫做Final Scall

01:33:19.000 --> 01:33:19.840
ok 下面

01:33:20.840 --> 01:33:24.900
设置一下

01:33:24.900 --> 01:33:27.060
这次点OFinal Scall点

01:33:27.060 --> 01:33:28.340
Inner Text

01:33:28.340 --> 01:33:31.620
懂于当前的一个Scall

01:33:31.620 --> 01:33:32.620
ok 来检查

01:33:32.620 --> 01:33:33.460
还有没有什么问题

01:33:33.460 --> 01:33:35.340
过一个吧就

01:33:35.340 --> 01:33:36.380
过一个死啊

01:33:36.380 --> 01:33:37.660
ok 这是不就一了

01:33:37.660 --> 01:33:39.500
那这个问题我们就搞懂了

01:33:39.500 --> 01:33:40.180
搞懂了之后

01:33:40.180 --> 01:33:43.180
咱们再进入到这个排名的这个这个地方

01:33:43.180 --> 01:33:44.580
排名怎么去排

01:33:44.580 --> 01:33:46.020
首先我们要去明确

01:33:46.020 --> 01:33:47.140
怎么去存

01:33:47.140 --> 01:33:47.700
存的话

01:33:47.700 --> 01:33:51.300
昨天已经跟大家说过了Local Star和Session Star了

01:33:51.340 --> 01:33:53.540
那永远说我们的这个界面

01:33:53.540 --> 01:33:56.260
你看我今天给你们玩了有8次吗

01:33:56.260 --> 01:33:56.940
没有吧

01:33:56.940 --> 01:33:58.100
是不是没有玩8次啊

01:33:59.100 --> 01:34:00.100
是吧

01:34:00.100 --> 01:34:02.380
但是他仍然还展示了8个排名

01:34:02.380 --> 01:34:05.660
所以这个肯定是一个Local Starage

01:34:05.660 --> 01:34:08.620
因为Local Starage是永久管存的

01:34:08.620 --> 01:34:09.540
不是管存

01:34:09.540 --> 01:34:10.980
是永久存储的

01:34:10.980 --> 01:34:12.260
那Session Starage

01:34:12.260 --> 01:34:14.580
是当前绘画期内存储

01:34:14.580 --> 01:34:16.260
也说你把这个标权关了

01:34:16.260 --> 01:34:17.180
它就没了

01:34:17.180 --> 01:34:17.700
是不是

01:34:17.700 --> 01:34:19.820
所以咱们存取求排名

01:34:19.980 --> 01:34:21.740
存排名的这部操作

01:34:21.740 --> 01:34:24.660
应该是放到Local Starage当中的

01:34:24.660 --> 01:34:26.700
但是这个时候

01:34:26.700 --> 01:34:28.300
我们要去思考一个问题了

01:34:28.300 --> 01:34:31.980
就是存取Local Starage这个操作

01:34:31.980 --> 01:34:35.380
它不仅仅是在我们这一个功能里面去用

01:34:35.380 --> 01:34:39.100
可能一直在做在强调其他同事

01:34:39.100 --> 01:34:40.820
你想象的那个其他同事

01:34:40.820 --> 01:34:41.780
你想象到

01:34:41.780 --> 01:34:42.860
万一有同事

01:34:42.860 --> 01:34:45.260
也需要用到帐的一个存和取呢

01:34:45.260 --> 01:34:47.620
那是不是应该去封装一个工具了呀

01:34:47.620 --> 01:34:49.580
就是不是封装一个工具

01:34:49.580 --> 01:34:50.060
好了

01:34:50.060 --> 01:34:50.740
那这块呢

01:34:50.740 --> 01:34:54.020
咱们来打开Utils的.js

01:34:54.020 --> 01:34:54.660
在这里面

01:34:54.660 --> 01:34:57.620
咱们来封装一个存数据

01:34:57.620 --> 01:35:00.140
和取数据的这样的一个函数

01:35:01.460 --> 01:35:03.340
先来存吧

01:35:03.340 --> 01:35:05.300
来一个site local

01:35:05.300 --> 01:35:08.700
代表着你存的这样的一个函数

01:35:08.700 --> 01:35:09.460
你想一下

01:35:09.460 --> 01:35:11.180
我们要去对Local Starage

01:35:11.180 --> 01:35:13.220
Solarage的存要怎么办呀

01:35:13.220 --> 01:35:16.230
要怎么办

01:35:16.230 --> 01:35:16.750
怎么办

01:35:16.750 --> 01:35:17.990
来着

01:35:17.990 --> 01:35:19.470
想一下

01:35:19.550 --> 01:35:22.750
是不是Local Starage.site Atom

01:35:22.750 --> 01:35:24.470
是不是昨天课里面去交的

01:35:24.470 --> 01:35:24.910
然后呢

01:35:24.910 --> 01:35:26.230
首先给一个k值

01:35:26.230 --> 01:35:27.950
其次是给一个y6值

01:35:27.950 --> 01:35:28.910
那对应的

01:35:28.910 --> 01:35:31.790
你这块是不是就直接让它去接受一个k

01:35:31.790 --> 01:35:33.510
和y6就可以了

01:35:33.510 --> 01:35:35.390
接着把它拿进去

01:35:35.390 --> 01:35:36.390
是不是就ok了

01:35:36.390 --> 01:35:38.270
这是不是就存上了呀

01:35:38.270 --> 01:35:39.030
就很简单

01:35:39.030 --> 01:35:41.390
封装这么一非常简单的一个函数

01:35:41.390 --> 01:35:41.830
ok

01:35:41.830 --> 01:35:43.470
接着你再来取

01:35:43.470 --> 01:35:45.950
来一个git local

01:35:45.950 --> 01:35:47.590
那你怎么去取呀

01:35:47.590 --> 01:35:48.270
是不是

01:35:48.270 --> 01:35:51.310
Local Starage.site Atom

01:35:51.310 --> 01:35:53.270
给一个k就好了

01:35:53.270 --> 01:35:53.870
那同样的

01:35:53.870 --> 01:35:56.430
你这个函数也让它去接受一个k值

01:35:56.430 --> 01:35:57.470
就ok了

01:35:57.470 --> 01:35:58.150
对不对

01:35:58.150 --> 01:36:00.630
但是不要忘记一点

01:36:00.630 --> 01:36:01.830
忘记什么呀

01:36:01.830 --> 01:36:02.910
如果说

01:36:02.910 --> 01:36:05.150
y6的值是什么

01:36:06.670 --> 01:36:07.750
y6的值

01:36:07.750 --> 01:36:10.070
它是一个数组

01:36:10.070 --> 01:36:11.390
或者是对象人的话

01:36:11.390 --> 01:36:14.750
我们最好死军之范一下

01:36:14.750 --> 01:36:16.150
死军之范一下

01:36:16.150 --> 01:36:18.030
那所以说这块怎么办呀

01:36:18.070 --> 01:36:19.670
是不是可以去看一下

01:36:19.670 --> 01:36:21.110
y6的一个tap

01:36:21.110 --> 01:36:22.390
它的一个类型

01:36:22.390 --> 01:36:23.950
如果说它的类型

01:36:23.950 --> 01:36:25.310
为一个object

01:36:25.310 --> 01:36:26.310
并且呢

01:36:26.310 --> 01:36:26.990
它怎么样

01:36:26.990 --> 01:36:28.270
它不为一个难

01:36:28.270 --> 01:36:30.110
那这个时候我就用j3.2

01:36:30.110 --> 01:36:31.110
死军之范一下

01:36:31.110 --> 01:36:32.270
给它存进去

01:36:32.270 --> 01:36:33.430
对不对

01:36:33.430 --> 01:36:33.990
ok

01:36:33.990 --> 01:36:34.750
所以这块呢

01:36:34.750 --> 01:36:38.470
a for top of value

01:36:38.470 --> 01:36:41.310
等于等于object

01:36:41.310 --> 01:36:47.390
并且tap of value

01:36:47.430 --> 01:36:49.230
或者value

01:36:49.230 --> 01:36:51.350
value它是不为难的

01:36:51.350 --> 01:36:53.470
不等于等于难

01:36:53.470 --> 01:36:54.510
那这个时候证明

01:36:54.510 --> 01:36:55.470
它是一个数组

01:36:55.470 --> 01:36:57.070
或者是一个对象

01:36:57.070 --> 01:36:57.510
那么呢

01:36:57.510 --> 01:36:59.150
我就让value等于谁呀

01:36:59.150 --> 01:37:01.390
等于j3.2死军之范

01:37:01.390 --> 01:37:03.510
一个value

01:37:03.510 --> 01:37:04.070
ok

01:37:04.070 --> 01:37:06.070
这块是不是就可以了呀

01:37:06.070 --> 01:37:08.590
就不用我们非得在外面去

01:37:08.590 --> 01:37:09.990
变成是一个字无窍吧

01:37:09.990 --> 01:37:11.310
我们直接把它封装进这个

01:37:11.310 --> 01:37:12.830
函数内部就可以了

01:37:12.830 --> 01:37:13.470
那同样的

01:37:13.470 --> 01:37:14.150
你取的时候

01:37:14.150 --> 01:37:15.110
你可以想一下

01:37:15.110 --> 01:37:15.310
哎

01:37:15.310 --> 01:37:15.870
什么时候

01:37:15.870 --> 01:37:16.950
它可能是一个数组

01:37:16.950 --> 01:37:18.430
什么时候可能是一个对象

01:37:18.430 --> 01:37:19.190
那你

01:37:19.190 --> 01:37:20.470
通过字无窍去判断

01:37:20.470 --> 01:37:21.150
它是一个数组

01:37:21.150 --> 01:37:21.790
或者对象的话呢

01:37:21.790 --> 01:37:23.070
有点难

01:37:23.070 --> 01:37:24.470
但是你可以取个巧

01:37:24.470 --> 01:37:28.110
如果说这个数字无窍的一个手

01:37:28.110 --> 01:37:29.470
它的第一个

01:37:29.470 --> 01:37:31.150
第一个这个字无窍里面的

01:37:31.150 --> 01:37:32.510
只是一个方块号

01:37:32.510 --> 01:37:33.990
或者是一个对象的话

01:37:33.990 --> 01:37:34.670
那这个时候

01:37:34.670 --> 01:37:35.790
它是不是就是一个数组

01:37:35.790 --> 01:37:36.950
或者一个字无窍的呀

01:37:36.950 --> 01:37:38.430
你就可以perce一下

01:37:38.430 --> 01:37:40.190
你可以这样子去写一下

01:37:40.190 --> 01:37:41.830
你可以这样子去写一下

01:37:41.830 --> 01:37:42.150
ok

01:37:42.150 --> 01:37:44.350
咱们就用这种方式

01:37:44.350 --> 01:37:44.750
比如说

01:37:44.750 --> 01:37:46.030
无窍一个value

01:37:46.030 --> 01:37:46.990
等于它

01:37:46.990 --> 01:37:48.110
如果说

01:37:48.110 --> 01:37:50.470
value当中的第零个

01:37:50.470 --> 01:37:52.350
等于等于

01:37:52.350 --> 01:37:53.390
这个

01:37:53.390 --> 01:37:54.830
或者

01:37:54.830 --> 01:37:57.230
value当中的第零个

01:37:57.230 --> 01:37:58.190
等于等于

01:37:58.190 --> 01:37:58.990
一个这个

01:37:58.990 --> 01:38:00.590
那就证明它是一个数组

01:38:00.590 --> 01:38:02.070
或者是一个对象

01:38:02.070 --> 01:38:03.310
那我返回的时候

01:38:03.310 --> 01:38:05.470
因为我要通过这个函数去拿值

01:38:05.470 --> 01:38:06.790
我直接认个谁呀

01:38:06.790 --> 01:38:07.790
我直接认一个

01:38:07.790 --> 01:38:09.990
json.perce

01:38:09.990 --> 01:38:11.190
一个value

01:38:11.190 --> 01:38:12.950
是不是就可以了呀

01:38:12.950 --> 01:38:13.550
对不对

01:38:13.550 --> 01:38:14.750
然后其他的情况

01:38:14.750 --> 01:38:16.430
我就直接返回一个正常的值

01:38:16.430 --> 01:38:17.390
就可以了

01:38:17.390 --> 01:38:17.990
是不是

01:38:17.990 --> 01:38:18.870
那这两个函数

01:38:18.870 --> 01:38:20.270
我们是不是就封装好了呀

01:38:20.270 --> 01:38:21.430
那封装好了之后

01:38:21.430 --> 01:38:23.630
咱们再去来做一下

01:38:23.630 --> 01:38:25.390
再去来做一下

01:38:25.390 --> 01:38:25.990
ok

01:38:25.990 --> 01:38:28.230
那在这个正常的一个逻辑当中

01:38:28.230 --> 01:38:31.630
我们是不是每一次去加分了

01:38:31.630 --> 01:38:33.990
每一次去爱的Scour了的时候

01:38:33.990 --> 01:38:34.750
我都要

01:38:34.750 --> 01:38:35.550
不是Scour

01:38:35.550 --> 01:38:37.590
每一次结束了的时候

01:38:37.590 --> 01:38:39.030
结束了的时候

01:38:39.030 --> 01:38:39.950
你失败了的时候

01:38:39.950 --> 01:38:42.070
我都要去存一下

01:38:42.070 --> 01:38:42.590
对不对

01:38:42.630 --> 01:38:46.530
我都要去存一下

01:38:46.530 --> 01:38:48.210
那怎么去存呢

01:38:48.210 --> 01:38:50.050
在哪去存呢

01:38:50.050 --> 01:38:51.090
思考一下这个问题啊

01:38:51.090 --> 01:38:51.490
先

01:38:51.490 --> 01:38:53.650
我然后给同学来解决这个问题

01:38:53.650 --> 01:38:54.810
取出来的时候

01:38:54.810 --> 01:38:57.170
不总是自付串形式的数捉

01:38:57.170 --> 01:38:57.690
对呀

01:38:57.690 --> 01:38:59.490
我不是说是一个自付串吗

01:38:59.490 --> 01:39:01.770
是不是就说的是一个自付串啊

01:39:01.770 --> 01:39:04.700
对不对

01:39:04.700 --> 01:39:05.580
有什么问题吗

01:39:10.570 --> 01:39:11.330
不是

01:39:11.330 --> 01:39:12.970
因为咱们这块

01:39:12.970 --> 01:39:15.490
取出来的可能是一个

01:39:15.490 --> 01:39:16.730
其他的一个值

01:39:16.730 --> 01:39:18.530
比如说你真正是一个数值呢

01:39:18.570 --> 01:39:19.850
是一个自付串一呢

01:39:19.850 --> 01:39:22.210
或者一个自付串这个二十啊

01:39:22.210 --> 01:39:23.810
或者是一个自付串处啊

01:39:23.810 --> 01:39:26.690
他都不会被转变成为一个正常的数组

01:39:26.690 --> 01:39:28.690
或者是或者是对象的

01:39:28.690 --> 01:39:31.450
所以只有说当你是一个数组自付串

01:39:31.450 --> 01:39:34.730
或者是对象自付串的时候

01:39:34.730 --> 01:39:37.330
或者数组自付串或者对象自付串的时候

01:39:37.330 --> 01:39:38.050
他会怎么样

01:39:38.050 --> 01:39:40.530
他才要把它转变成为一个真正的数组

01:39:40.530 --> 01:39:42.890
和一个真正的对象

01:39:42.890 --> 01:39:43.370
ok

01:39:43.370 --> 01:39:46.370
然后这块为什么要再去判断一下呀

01:39:46.370 --> 01:39:48.250
因为我们要去给他去存值

01:39:48.250 --> 01:39:49.650
如果说歪有

01:39:49.650 --> 01:39:51.570
他是对象的话

01:39:51.570 --> 01:39:53.530
他存进去的只是一个方块号

01:39:53.530 --> 01:39:55.330
object object

01:39:55.330 --> 01:39:57.490
如果说存的是一个数组的话

01:39:57.490 --> 01:39:58.810
他隐尸的形转换

01:39:58.810 --> 01:40:00.610
他没有外面那个方块号了

01:40:00.610 --> 01:40:01.850
所以咱们在上节课的时候

01:40:01.850 --> 01:40:02.970
是不是就说过

01:40:02.970 --> 01:40:03.690
用什么

01:40:03.690 --> 01:40:05.810
如果说是数组或者自付串的时候

01:40:05.810 --> 01:40:07.410
用json.stunify

01:40:07.410 --> 01:40:10.570
先把它变成是一个自付串

01:40:10.570 --> 01:40:13.970
之后再给他存进local storage当中

01:40:13.970 --> 01:40:15.010
清楚了吧

01:40:15.010 --> 01:40:16.090
ok

01:40:16.090 --> 01:40:17.290
这个就不多说了

01:40:17.290 --> 01:40:19.490
之后我们再来看

01:40:19.490 --> 01:40:22.290
在我们要死了的时候

01:40:22.290 --> 01:40:23.530
有时候要死了的时候

01:40:23.530 --> 01:40:25.610
我们是不是应该

01:40:25.610 --> 01:40:29.690
把这个数据给展示出来呀

01:40:29.690 --> 01:40:30.770
那也就是说

01:40:30.770 --> 01:40:32.330
在最最最开始的时候

01:40:32.330 --> 01:40:36.170
我们是不是应该先从我们的local storage当中

01:40:36.170 --> 01:40:39.650
把存放着的数据给拿出来

01:40:39.650 --> 01:40:40.810
是不是

01:40:40.810 --> 01:40:42.730
是不是先把存放的数据拿出来

01:40:42.730 --> 01:40:45.010
接着等你失败了的时候

01:40:45.010 --> 01:40:46.890
你去往那个数据里面

01:40:46.890 --> 01:40:47.610
去怎么样

01:40:47.610 --> 01:40:49.530
去添加一个值

01:40:49.530 --> 01:40:51.290
去添加一个值

01:40:51.290 --> 01:40:54.890
之后再对添加的值进行一下排序

01:40:54.890 --> 01:40:56.210
排完序了之后

01:40:56.210 --> 01:40:58.170
再去重新的存处一下

01:40:58.170 --> 01:41:01.810
并且把这个排名给展示出来

01:41:01.810 --> 01:41:03.410
对不对

01:41:03.410 --> 01:41:04.170
是不是

01:41:04.170 --> 01:41:04.690
ok

01:41:04.690 --> 01:41:05.210
那好

01:41:05.210 --> 01:41:07.210
那咱们最好一开始的时候

01:41:07.210 --> 01:41:08.170
就先取

01:41:08.170 --> 01:41:10.050
取出来的时候放在哪里呀

01:41:10.050 --> 01:41:12.650
放到一个数组里面存着

01:41:12.650 --> 01:41:14.330
这个数组给他起个名字吧

01:41:14.330 --> 01:41:16.850
就叫做一个死告AR

01:41:16.850 --> 01:41:18.610
因为我们想要去存放

01:41:18.610 --> 01:41:21.010
一组一组的这样的一个数据的话呢

01:41:21.010 --> 01:41:23.250
他肯定是一个一个的对象

01:41:23.250 --> 01:41:25.530
放到一个数组里面去的

01:41:25.530 --> 01:41:28.130
所以这块来写一个

01:41:28.130 --> 01:41:30.290
死告AR

01:41:30.290 --> 01:41:31.570
那最最开始的时候

01:41:31.570 --> 01:41:33.650
他能是一个数组吗

01:41:33.650 --> 01:41:36.210
如果说你没有的话

01:41:36.210 --> 01:41:38.850
就你压根就没有从本地数据

01:41:38.850 --> 01:41:40.410
那他可以是一个数组

01:41:40.410 --> 01:41:42.450
但是你存了本地数据了之后

01:41:42.450 --> 01:41:44.930
是不是就不应该是一个数组了

01:41:44.930 --> 01:41:46.730
而是从什么

01:41:46.730 --> 01:41:51.290
而是你从这样的一个本地数据里面

01:41:51.290 --> 01:41:54.170
获取到的这样的一个数据呀

01:41:54.170 --> 01:41:54.770
是不是

01:41:54.770 --> 01:41:55.610
所以这块

01:41:55.610 --> 01:41:57.690
我们再去给他复职的时候

01:41:57.690 --> 01:41:59.930
最好是通过一个函数来做

01:41:59.930 --> 01:42:03.570
这个函数先去获取一下本地数据

01:42:03.570 --> 01:42:06.410
之后看看获取到的这样的一个值

01:42:06.410 --> 01:42:07.770
再去给他复职

01:42:07.770 --> 01:42:08.290
ok

01:42:08.290 --> 01:42:10.450
那该的死告做的就是这样的一个事情

01:42:10.450 --> 01:42:11.890
咱首先来拿一下

01:42:11.890 --> 01:42:13.410
握一个死告AR

01:42:13.410 --> 01:42:14.570
从哪去拿呀

01:42:14.570 --> 01:42:16.690
从Local当中去拿

01:42:16.690 --> 01:42:18.170
拿的话拿谁呢

01:42:18.170 --> 01:42:20.290
注意我们想要去存放

01:42:20.290 --> 01:42:22.650
关于分数的一个排名的话

01:42:22.650 --> 01:42:24.010
给他存放的函值

01:42:24.010 --> 01:42:26.010
就起名字叫做死告

01:42:26.010 --> 01:42:27.730
起名字叫做死告

01:42:27.730 --> 01:42:28.770
接着

01:42:28.770 --> 01:42:31.170
我们再去判断拿到的死告是谁

01:42:31.170 --> 01:42:33.330
那如果说我们是第一次去拿的话

01:42:33.330 --> 01:42:33.810
有时候呢

01:42:33.810 --> 01:42:36.210
我们还没有去存过呢

01:42:36.210 --> 01:42:37.530
没有存过就意味着

01:42:37.530 --> 01:42:39.530
这个死告的这个函值不存在

01:42:39.530 --> 01:42:43.860
那函值不存在的情况下

01:42:43.860 --> 01:42:45.340
写一下

01:42:45.340 --> 01:42:48.180
函值

01:42:48.180 --> 01:42:50.180
函值不存在

01:42:50.180 --> 01:42:51.260
值为什么

01:42:51.260 --> 01:42:53.260
值为它是一个难

01:42:53.260 --> 01:42:54.220
它就没有啊

01:42:54.220 --> 01:42:54.980
值为一个难

01:42:54.980 --> 01:42:56.420
那我们是不是判断一下

01:42:56.420 --> 01:42:58.100
如果说你为难的话

01:42:58.100 --> 01:43:00.820
我想要的帐立一个数据

01:43:00.820 --> 01:43:03.420
它也应该是一个数组

01:43:03.420 --> 01:43:04.380
而不是为难

01:43:04.380 --> 01:43:07.140
因为我后面要往这个数组里面去添值

01:43:07.140 --> 01:43:08.940
是不是往数组里面去添值

01:43:08.940 --> 01:43:09.540
所以这块呢

01:43:09.540 --> 01:43:10.900
我直接纸蹭个什么

01:43:10.900 --> 01:43:13.580
纸蹭个一个死告AR

01:43:13.580 --> 01:43:16.860
看一看它是否是等于一个难

01:43:16.860 --> 01:43:17.700
等于一个难

01:43:17.700 --> 01:43:20.180
比如说看它是否是一个真值

01:43:20.180 --> 01:43:20.500
对不对

01:43:20.500 --> 01:43:21.820
如果说是一个真值的话

01:43:21.820 --> 01:43:22.300
那好

01:43:22.300 --> 01:43:24.340
直接返回死告AR

01:43:24.340 --> 01:43:26.140
如果说不是真值的话

01:43:26.140 --> 01:43:28.180
我返回的就是一个空数组

01:43:28.180 --> 01:43:29.940
不是真值的时候有什么呀

01:43:29.940 --> 01:43:30.540
难

01:43:30.540 --> 01:43:31.580
空自负串

01:43:31.580 --> 01:43:32.180
零

01:43:32.180 --> 01:43:32.900
False

01:43:32.900 --> 01:43:33.660
还有一个什么

01:43:33.660 --> 01:43:34.700
还有个这个什么来着

01:43:36.860 --> 01:43:37.500
零二

01:43:37.500 --> 01:43:38.340
False

01:43:38.340 --> 01:43:39.220
空串

01:43:39.220 --> 01:43:40.260
那五个值哈

01:43:40.260 --> 01:43:42.820
我这个这个还有还有这个这个什么来着

01:43:43.820 --> 01:43:45.420
忘记了

01:43:45.420 --> 01:43:46.100
还忘记了

01:43:46.100 --> 01:43:46.860
突然猛出来

01:43:46.860 --> 01:43:48.100
总之你们懂得哈

01:43:48.100 --> 01:43:50.220
五个五个假值五个假值

01:43:50.220 --> 01:43:51.140
哈

01:43:51.140 --> 01:43:51.820
ok

01:43:51.820 --> 01:43:53.100
那我们来看一下

01:43:53.100 --> 01:43:55.420
这一块现在取出来的是什么

01:43:55.420 --> 01:43:56.260
还有难哈

01:43:56.260 --> 01:43:57.300
难和安得范的哈

01:43:57.300 --> 01:43:59.100
难和安得范的哈

01:43:59.100 --> 01:43:59.460
ok

01:44:00.740 --> 01:44:02.420
突然间就猛出了哈

01:44:02.420 --> 01:44:03.420
那这一块哈

01:44:03.420 --> 01:44:04.860
咱们是不是就直接很懂于谁呀

01:44:04.860 --> 01:44:05.820
懂一个this点

01:44:05.820 --> 01:44:06.820
概他死告

01:44:06.820 --> 01:44:07.460
懂一个this点

01:44:07.460 --> 01:44:08.180
概他死告

01:44:08.180 --> 01:44:10.780
咱们先来看一看这一步是什么

01:44:10.780 --> 01:44:12.340
this点死告AR

01:44:13.380 --> 01:44:14.020
看一看

01:44:14.020 --> 01:44:16.100
是不是打印出来的是一个空的数组

01:44:16.100 --> 01:44:16.420
哎

01:44:16.420 --> 01:44:17.300
怎么试一个什么

01:44:17.300 --> 01:44:17.540
啊

01:44:17.540 --> 01:44:18.020
没知行

01:44:18.020 --> 01:44:18.260
哈

01:44:19.460 --> 01:44:21.540
看是不是空的数组说什么

01:44:21.540 --> 01:44:22.660
counter rate

01:44:22.660 --> 01:44:23.260
property

01:44:23.260 --> 01:44:24.100
0 of難

01:44:24.100 --> 01:44:24.580
ok

01:44:24.580 --> 01:44:25.780
那这块就有问题了

01:44:27.060 --> 01:44:29.020
咱们封装的这个函数就有问题了

01:44:29.020 --> 01:44:31.500
因为他拿出来的可能是一个难

01:44:31.500 --> 01:44:32.380
可能是一个难

01:44:32.380 --> 01:44:33.740
所以这块如果说

01:44:33.740 --> 01:44:34.540
value

01:44:34.540 --> 01:44:36.340
懂于懂于难的话

01:44:36.340 --> 01:44:37.420
那怎么怎么办呢

01:44:37.420 --> 01:44:39.340
直接把这个value给 return回去

01:44:39.340 --> 01:44:40.620
不让他执行下面了

01:44:40.620 --> 01:44:41.940
让他变得更健壮一点

01:44:41.940 --> 01:44:42.780
那怎么再来看

01:44:42.900 --> 01:44:44.860
这块是不是就是一个空串了呀

01:44:44.860 --> 01:44:46.620
是一个空的数组了呀

01:44:46.620 --> 01:44:47.100
对不对

01:44:47.100 --> 01:44:48.460
那这个咱们就拿到了

01:44:48.460 --> 01:44:50.940
那有了这样的一个空的数组之后

01:44:50.940 --> 01:44:54.380
我们在每一次死掉的时候

01:44:54.380 --> 01:44:56.300
比如说我们每一次死掉的时候

01:44:56.300 --> 01:44:59.460
我们就往这个数组里面去怎么样

01:44:59.460 --> 01:45:02.540
去添加上这一次的什么

01:45:02.540 --> 01:45:04.780
这一次的一个成绩

01:45:04.780 --> 01:45:06.660
添加上这一次的一个成绩

01:45:06.660 --> 01:45:08.180
那这一次的成绩

01:45:09.500 --> 01:45:12.260
我是不是得通过一个函数来做了呀

01:45:12.260 --> 01:45:13.700
因为我要去添加成绩了

01:45:13.700 --> 01:45:13.980
是吧

01:45:13.980 --> 01:45:15.020
要去添加成绩

01:45:15.020 --> 01:45:16.420
所以这块咱们要写个函数

01:45:16.420 --> 01:45:17.820
叫做SiteScore

01:45:17.820 --> 01:45:25.000
往我们的分数当中去存一个分数

01:45:25.000 --> 01:45:25.800
添加一个分数

01:45:25.800 --> 01:45:26.280
ok

01:45:26.280 --> 01:45:27.720
那这块是不是有意味着

01:45:27.720 --> 01:45:29.600
我要往当前的

01:45:29.600 --> 01:45:33.840
score AR里面去铺是一个对象了呀

01:45:33.840 --> 01:45:34.760
因为我们说了

01:45:34.760 --> 01:45:37.120
这个数组当中是一个一个的对象

01:45:37.120 --> 01:45:39.000
对象里面存放着的是

01:45:39.000 --> 01:45:41.960
当前的这个排名的一个信息

01:45:41.960 --> 01:45:43.480
当前的排名的信息

01:45:43.480 --> 01:45:43.960
ok

01:45:43.960 --> 01:45:46.640
那我们这个排名有什么信息呀

01:45:46.640 --> 01:45:47.360
只有两个

01:45:47.360 --> 01:45:48.520
一个是分数

01:45:48.520 --> 01:45:49.880
一个是什么

01:45:49.880 --> 01:45:52.640
一个是当前的一个时间

01:45:52.640 --> 01:45:52.960
对不对

01:45:52.960 --> 01:45:53.880
一个是分数

01:45:53.880 --> 01:45:55.680
一个是当前的时间

01:45:55.680 --> 01:45:56.200
ok

01:45:56.200 --> 01:45:57.880
那这块分数在哪呢

01:45:57.880 --> 01:46:00.560
是不是就存放着存放在哪里啊

01:46:00.560 --> 01:46:03.520
存放在当前的一个score当中了

01:46:03.520 --> 01:46:05.520
是不是存放在当前一个score当中了

01:46:05.520 --> 01:46:06.400
那时间呢

01:46:06.400 --> 01:46:07.960
你直接NewDate一下

01:46:07.960 --> 01:46:08.960
是不是就可以了

01:46:08.960 --> 01:46:09.400
好了

01:46:09.400 --> 01:46:11.040
那这块来一个score

01:46:11.040 --> 01:46:11.800
唯一一个

01:46:11.800 --> 01:46:13.360
Date点score

01:46:13.360 --> 01:46:14.560
那Time

01:46:14.560 --> 01:46:16.080
也是当前的一个时间

01:46:16.080 --> 01:46:18.000
你想要存放的是什么样的类型啊

01:46:18.000 --> 01:46:19.720
2020年的点

01:46:19.720 --> 01:46:20.880
2006.15

01:46:20.880 --> 01:46:21.760
然后呢

01:46:21.760 --> 01:46:22.520
10

01:46:22.520 --> 01:46:23.400
帽号分

01:46:23.400 --> 01:46:24.440
帽号描

01:46:24.440 --> 01:46:27.520
那你通过什么样的一种函数能够得到啊

01:46:27.520 --> 01:46:29.480
没有任何的一个函数支持

01:46:29.480 --> 01:46:30.360
所以这块呢

01:46:30.360 --> 01:46:31.280
我们要怎么办

01:46:31.280 --> 01:46:33.480
我们可以自己去封装了吧

01:46:33.480 --> 01:46:35.920
因为我们要去取时间是很简单的

01:46:35.920 --> 01:46:37.040
取时间通过谁呀

01:46:37.040 --> 01:46:38.200
通过NewDate

01:46:38.200 --> 01:46:40.720
那通过NewDate给到你的

01:46:40.720 --> 01:46:42.600
是很多奇奇怪怪的这样一个值

01:46:42.600 --> 01:46:44.200
并不是我们想要的

01:46:44.200 --> 01:46:45.120
这样一个类型

01:46:45.120 --> 01:46:45.640
是不是

01:46:45.640 --> 01:46:46.760
那我们想要的这个类型

01:46:46.760 --> 01:46:49.480
我们就自己去得到就可以了

01:46:49.480 --> 01:46:51.760
所以这块来一个GateDate

01:46:51.760 --> 01:46:54.280
GateDate方式

01:46:54.280 --> 01:46:56.760
首先把当前的一个日期拿到

01:46:56.760 --> 01:46:57.040
Date

01:46:57.040 --> 01:47:00.400
等于一个NewDate

01:47:00.400 --> 01:47:01.440
对于一个NewDate

01:47:01.440 --> 01:47:01.920
好了

01:47:01.920 --> 01:47:03.360
接着我们去拿到年

01:47:03.360 --> 01:47:04.360
怎么去拿年来的

01:47:04.360 --> 01:47:05.400
来复习一下啊

01:47:05.400 --> 01:47:06.160
Ware一个Year

01:47:06.160 --> 01:47:08.080
等于D1.2

01:47:08.080 --> 01:47:09.960
GateFullYear

01:47:09.960 --> 01:47:10.520
执行

01:47:10.520 --> 01:47:10.920
OK

01:47:10.960 --> 01:47:12.360
再来Ware一个Mount

01:47:13.520 --> 01:47:14.880
Mount

01:47:14.880 --> 01:47:18.120
mouunt

01:47:18.120 --> 01:47:19.560
等于D1.2

01:47:19.560 --> 01:47:21.360
GateMount

01:47:22.760 --> 01:47:23.480
Mount

01:47:23.480 --> 01:47:24.800
那它是什么

01:47:24.800 --> 01:47:26.640
取得月份是从0开始的

01:47:26.640 --> 01:47:28.120
所以说要咱们要真正的一个

01:47:28.120 --> 01:47:30.080
人类的一个月份是要加1的

01:47:30.080 --> 01:47:32.560
接着要去取得今天的一个日

01:47:32.560 --> 01:47:33.560
日是什么

01:47:33.560 --> 01:47:35.840
日是D1.2

01:47:35.840 --> 01:47:37.360
GateDate

01:47:37.360 --> 01:47:37.720
对不对

01:47:37.720 --> 01:47:38.680
GateDate

01:47:38.680 --> 01:47:39.240
OK

01:47:39.240 --> 01:47:40.800
接着要取到10

01:47:40.800 --> 01:47:42.000
那就来个Aver

01:47:42.000 --> 01:47:45.120
等于D.GateAverse

01:47:45.120 --> 01:47:45.960
执行

01:47:45.960 --> 01:47:48.480
再来一个Minute

01:47:48.480 --> 01:47:49.600
Minute

01:47:49.600 --> 01:47:50.240
取到分

01:47:50.240 --> 01:47:52.320
D.GateMinute

01:47:52.320 --> 01:47:53.040
执行

01:47:53.040 --> 01:47:55.320
还有一个秒数Second的

01:47:55.320 --> 01:47:58.320
等于D.GateSecond执行

01:47:58.320 --> 01:47:59.000
OK

01:47:59.000 --> 01:48:01.760
那这个时候我只要把他们的一个拼接

01:48:01.760 --> 01:48:03.440
给返回回去就可以了

01:48:03.440 --> 01:48:04.880
因为取到什么

01:48:04.880 --> 01:48:06.920
取到都是一个一个的数值

01:48:06.920 --> 01:48:08.920
我只要拼在一起就可以了

01:48:08.920 --> 01:48:09.520
是不是

01:48:09.520 --> 01:48:12.880
那我要变成2020.06点什么

01:48:12.880 --> 01:48:15.320
第2这个17

01:48:15.320 --> 01:48:16.720
然后空格

01:48:16.720 --> 01:48:19.800
然后一个21.53

01:48:19.800 --> 01:48:22.560
或者是来个57秒的这种形式

01:48:22.560 --> 01:48:23.120
是不是

01:48:23.120 --> 01:48:23.800
那此时

01:48:23.800 --> 01:48:26.520
我就可以在外面包上一个自付串

01:48:26.520 --> 01:48:29.080
那这个自付串是一个模板自付串

01:48:29.080 --> 01:48:31.400
这块我更喜欢于用模板自付串

01:48:31.400 --> 01:48:33.840
而不是自付串拼接的这样一种方式

01:48:33.840 --> 01:48:35.680
自付串拼接你看看就看乱了

01:48:35.680 --> 01:48:36.880
但是放到模板自付串里面

01:48:36.880 --> 01:48:38.960
你看会非常方便

01:48:38.960 --> 01:48:41.000
那怎么样能够在模板自付串里面

01:48:41.000 --> 01:48:43.280
去添加一个变量呢

01:48:43.280 --> 01:48:44.200
那很简单

01:48:44.200 --> 01:48:47.160
在这里面用上一个Dollar花花号

01:48:47.160 --> 01:48:50.760
你就可以随便的把这个变量拼接在这个里面了

01:48:50.760 --> 01:48:53.440
那你看这块2020是不是1啊

01:48:53.440 --> 01:48:54.000
对不对

01:48:54.000 --> 01:48:54.960
要来个点

01:48:54.960 --> 01:48:56.320
那后面是不是还有什么

01:48:56.320 --> 01:48:58.120
还有一个Mounts啊

01:48:58.120 --> 01:48:58.680
Mounts

01:48:58.680 --> 01:48:59.040
OK

01:48:59.040 --> 01:49:00.720
那后面是不是还有个天

01:49:00.720 --> 01:49:01.560
就是D

01:49:01.560 --> 01:49:03.560
接着来一个hour

01:49:03.560 --> 01:49:05.760
hour

01:49:05.760 --> 01:49:06.400
hour

01:49:06.400 --> 01:49:06.840
OK

01:49:06.840 --> 01:49:08.520
接着再来一个53

01:49:08.520 --> 01:49:09.920
什么是分

01:49:09.920 --> 01:49:11.040
minute

01:49:11.040 --> 01:49:12.800
然后再来一个57

01:49:12.800 --> 01:49:14.720
是秒是second

01:49:14.720 --> 01:49:16.920
那这块是不是就得到了呀

01:49:16.920 --> 01:49:18.960
接着你就把它存在这个里面

01:49:18.960 --> 01:49:21.520
那就是this.getData

01:49:21.520 --> 01:49:26.080
就拿到我们想要拿得的这样的一个自付串了

01:49:26.080 --> 01:49:26.600
对不对

01:49:26.600 --> 01:49:29.120
那SiteScore这样的一个函数

01:49:29.120 --> 01:49:31.040
我们需要在哪去执行啊

01:49:31.040 --> 01:49:31.720
你想一想

01:49:31.720 --> 01:49:35.920
我们什么时候去设置这样的一个SiteScore啊

01:49:35.920 --> 01:49:39.790
什么时候去设置啊

01:49:39.790 --> 01:49:41.950
是不是当你失败了的时候

01:49:41.950 --> 01:49:42.830
你失败的时候

01:49:42.830 --> 01:49:44.710
我们才要去设置一下分数

01:49:44.710 --> 01:49:45.270
哎对

01:49:45.270 --> 01:49:46.830
去找到field game

01:49:46.830 --> 01:49:47.670
那就直接在这

01:49:47.670 --> 01:49:50.990
来this.SiteScore

01:49:50.990 --> 01:49:51.950
执行一下

01:49:51.950 --> 01:49:52.590
那好

01:49:52.590 --> 01:49:54.030
咱们执行的时候呢

01:49:54.030 --> 01:49:55.070
我们就这样子来做

01:49:55.070 --> 01:49:56.950
打印一下console.log

01:49:56.950 --> 01:49:58.390
一个this.score

01:49:58.390 --> 01:49:58.990
anr

01:49:58.990 --> 01:50:01.470
看看它是一个什么样的一个数组啊

01:50:01.470 --> 01:50:02.990
来刷新一下

01:50:02.990 --> 01:50:03.550
点击

01:50:06.110 --> 01:50:07.110
死

01:50:07.110 --> 01:50:07.550
看这

01:50:08.710 --> 01:50:09.310
看这里嘛

01:50:09.990 --> 01:50:12.030
Score为一分存证的

01:50:12.030 --> 01:50:13.150
Time为一个

01:50:13.150 --> 01:50:15.590
2020年617

01:50:15.590 --> 01:50:16.270
踏踏踏

01:50:16.270 --> 01:50:17.950
21.55.34

01:50:17.950 --> 01:50:19.550
那这个就有一个问题了

01:50:19.550 --> 01:50:20.390
问题是什么

01:50:20.390 --> 01:50:22.230
我们想要的是这种格式

01:50:23.030 --> 01:50:25.110
就是0615

01:50:25.110 --> 01:50:27.150
但凡是你是个位数的

01:50:27.150 --> 01:50:29.830
我们都要在前面补一个零

01:50:29.830 --> 01:50:30.830
前面补一个零

01:50:30.830 --> 01:50:32.950
那所以说这个时候我们要怎么办呢

01:50:32.950 --> 01:50:33.230
哎

01:50:33.230 --> 01:50:34.070
加是一个零

01:50:34.070 --> 01:50:36.070
那你总不能说你每次都判断一下

01:50:36.070 --> 01:50:36.270
哎

01:50:36.270 --> 01:50:37.670
mouse是不是小鱼

01:50:37.670 --> 01:50:38.150
10啊

01:50:38.150 --> 01:50:38.590
小鱼10

01:50:38.590 --> 01:50:39.070
不个零

01:50:39.070 --> 01:50:39.550
不小鱼10

01:50:39.550 --> 01:50:40.110
不补

01:50:40.110 --> 01:50:41.790
然后this是不是小鱼10啊

01:50:41.790 --> 01:50:42.550
啊补

01:50:42.550 --> 01:50:43.270
小鱼的话呢

01:50:43.270 --> 01:50:44.750
补不小鱼的不补

01:50:44.750 --> 01:50:45.110
对

01:50:45.110 --> 01:50:45.950
逻辑是这样的

01:50:45.950 --> 01:50:47.870
但是你不能直接写在这个里面

01:50:47.870 --> 01:50:48.790
太low了

01:50:48.790 --> 01:50:49.430
太low了

01:50:49.430 --> 01:50:51.070
那我们这个时候是不考虑的

01:50:51.070 --> 01:50:54.030
还是再来封装一个工具函数啊

01:50:54.030 --> 01:50:54.390
是不是

01:50:54.390 --> 01:50:55.310
封装工具函数

01:50:55.310 --> 01:50:55.470
好

01:50:55.470 --> 01:50:56.550
那我们来写一个

01:50:56.550 --> 01:50:57.870
function

01:50:57.870 --> 01:50:59.110
for night

01:50:59.110 --> 01:51:01.190
一个number

01:51:01.190 --> 01:51:03.230
它接收了一个数字

01:51:03.230 --> 01:51:04.350
我们在这里面

01:51:04.350 --> 01:51:07.030
如果说number小于10的话

01:51:07.030 --> 01:51:07.910
那好

01:51:07.910 --> 01:51:09.190
证明它是个位数了

01:51:09.190 --> 01:51:11.030
我return一个零

01:51:11.030 --> 01:51:12.470
加上一个number

01:51:12.470 --> 01:51:12.990
接着

01:51:12.990 --> 01:51:14.310
如果说不小于10

01:51:14.310 --> 01:51:15.670
我直接return number

01:51:15.670 --> 01:51:16.750
是不是就可以了呀

01:51:16.750 --> 01:51:18.390
也就是我只要在外面

01:51:18.390 --> 01:51:20.590
在这些个数字的外面

01:51:20.590 --> 01:51:23.110
加上一个format执行

01:51:23.110 --> 01:51:24.110
就可以了

01:51:24.110 --> 01:51:24.550
对不对

01:51:24.550 --> 01:51:27.110
加上一个format执行就可以了哈

01:51:27.110 --> 01:51:28.870
这块搞一下吧

01:51:28.870 --> 01:51:31.510
我就直接怎么样了

01:51:31.510 --> 01:51:34.070
我直接全选弄一下了哈

01:51:34.070 --> 01:51:35.710
快点哈

01:51:35.710 --> 01:51:37.190
ctrl-v一下

01:51:37.230 --> 01:51:38.070
来个括号

01:51:38.070 --> 01:51:38.830
然后包上

01:51:38.830 --> 01:51:39.790
这就齐活了

01:51:39.790 --> 01:51:39.910
哈

01:51:39.910 --> 01:51:40.990
咱们再来看

01:51:40.990 --> 01:51:42.030
来点击一下哈

01:51:43.550 --> 01:51:43.910
死了

01:51:43.910 --> 01:51:45.430
看这

01:51:45.430 --> 01:51:46.710
0617

01:51:46.710 --> 01:51:47.430
0617

01:51:47.430 --> 01:51:48.430
这就搞定了

01:51:48.430 --> 01:51:49.430
这就完事了

01:51:49.430 --> 01:51:49.990
OK

01:51:49.990 --> 01:51:51.110
那完事了之后

01:51:51.110 --> 01:51:53.110
我们是不是就得去怎么样

01:51:53.110 --> 01:51:56.350
去local site一下了吧

01:51:56.350 --> 01:51:56.710
是不是

01:51:56.710 --> 01:51:57.990
给它设置进去

01:51:57.990 --> 01:51:58.710
那同样的

01:51:58.710 --> 01:52:00.990
还是在sitescar这块

01:52:00.990 --> 01:52:03.190
我们拿到这样一个数字

01:52:03.190 --> 01:52:05.430
我们不就要去往这个里面去传嘛

01:52:05.430 --> 01:52:06.950
就来一个sitelocal

01:52:06.950 --> 01:52:07.510
然后呢

01:52:07.510 --> 01:52:08.470
传递

01:52:08.470 --> 01:52:09.190
一个key

01:52:09.190 --> 01:52:10.310
key叫做scar

01:52:10.310 --> 01:52:11.350
传的指是谁呀

01:52:11.350 --> 01:52:14.470
就是ZS.scar

01:52:14.470 --> 01:52:15.190
OK

01:52:15.190 --> 01:52:16.030
那这个时候

01:52:16.030 --> 01:52:17.910
咱们来打开控制台

01:52:17.910 --> 01:52:19.990
瞅一瞅哈

01:52:19.990 --> 01:52:21.510
application

01:52:21.510 --> 01:52:23.110
打开local storage

01:52:23.110 --> 01:52:24.550
现在是什么

01:52:24.550 --> 01:52:25.950
什么都没有的一个状态

01:52:25.950 --> 01:52:27.790
来点击

01:52:27.790 --> 01:52:28.550
我过一个

01:52:28.550 --> 01:52:29.990
来死一个

01:52:29.990 --> 01:52:30.710
死

01:52:30.710 --> 01:52:32.030
这块是不是加减了呀

01:52:32.030 --> 01:52:32.910
scar为1

01:52:32.910 --> 01:52:34.630
time为2020的

01:52:34.630 --> 01:52:35.750
6月17

01:52:35.750 --> 01:52:36.030
OK

01:52:36.030 --> 01:52:36.630
好了

01:52:36.630 --> 01:52:37.350
那接着

01:52:37.350 --> 01:52:38.910
咱们再来重新刷新一下

01:52:38.910 --> 01:52:39.510
看这

01:52:39.510 --> 01:52:41.350
第一次我们在index.js

01:52:41.350 --> 01:52:42.830
第46号上打的一出来的

01:52:42.830 --> 01:52:44.590
是不是这个数组了呀

01:52:44.590 --> 01:52:45.110
对不对

01:52:45.110 --> 01:52:45.430
然后呢

01:52:45.430 --> 01:52:46.470
咱们再来一个

01:52:46.470 --> 01:52:47.350
再走一个

01:52:47.350 --> 01:52:48.430
来点击

01:52:48.430 --> 01:52:49.430
死一个

01:52:49.430 --> 01:52:50.150
看这块

01:52:50.150 --> 01:52:50.790
这里面哈

01:52:50.790 --> 01:52:52.430
看这是不是有一个零了呀

01:52:52.430 --> 01:52:53.830
这不是就存进来了呀

01:52:53.830 --> 01:52:55.750
这不就搞定了吗

01:52:55.750 --> 01:52:57.670
是不是就搞定了呀

01:52:57.670 --> 01:52:59.510
那搞定了之后

01:52:59.510 --> 01:53:01.710
那咱们是不是就可以通过

01:53:01.710 --> 01:53:04.790
我们设置过后的这样一个scar

01:53:04.790 --> 01:53:07.110
去进行渲染了呀

01:53:07.110 --> 01:53:07.710
对不对

01:53:07.710 --> 01:53:08.710
渲染谁呀

01:53:08.710 --> 01:53:10.670
你不能这里面都写死吧

01:53:10.670 --> 01:53:12.110
你写死成啥了呀

01:53:12.110 --> 01:53:13.150
玩谁呢呀

01:53:13.150 --> 01:53:13.790
是不是

01:53:13.790 --> 01:53:16.230
所以这块我们是不是应该再来

01:53:16.230 --> 01:53:17.270
rander一下呀

01:53:17.270 --> 01:53:18.070
比如说来一个

01:53:18.070 --> 01:53:22.550
this is render rank list

01:53:22.550 --> 01:53:23.190
执行

01:53:23.190 --> 01:53:23.710
OK

01:53:23.710 --> 01:53:24.830
那再来写一个这个

01:53:24.830 --> 01:53:28.670
rander rank list方式

01:53:28.670 --> 01:53:30.310
那在这个里面当中

01:53:30.310 --> 01:53:31.510
我只要

01:53:31.590 --> 01:53:33.030
搜索一下谁呀

01:53:33.030 --> 01:53:35.030
搜索一块搜索一下

01:53:35.030 --> 01:53:37.150
当前的

01:53:37.150 --> 01:53:40.230
this.scar ar就行了

01:53:40.230 --> 01:53:41.070
对不对

01:53:41.070 --> 01:53:42.670
scar ar

01:53:42.670 --> 01:53:43.310
好了

01:53:43.310 --> 01:53:44.110
那在这块

01:53:44.110 --> 01:53:46.110
我们是每一次都需要生成

01:53:46.110 --> 01:53:48.230
这样的一个li的一个结构

01:53:48.230 --> 01:53:48.750
对不对

01:53:48.750 --> 01:53:50.230
那这块我偏步这样子

01:53:50.230 --> 01:53:51.710
去一个一个去生成

01:53:51.710 --> 01:53:53.350
我不通过create element

01:53:53.350 --> 01:53:54.230
这种形式了

01:53:54.230 --> 01:53:55.990
这种形式不好阅读

01:53:55.990 --> 01:53:56.990
我不好去维护

01:53:56.990 --> 01:53:57.950
不好调试

01:53:57.950 --> 01:53:59.190
所以咱们怎么去用呢

01:53:59.190 --> 01:54:01.870
我们用innerhtml

01:54:01.870 --> 01:54:03.870
innerhtml可以

01:54:03.870 --> 01:54:06.670
被设置等于一个道目自负串

01:54:06.670 --> 01:54:08.670
你设置懂一个道目自负串的话呢

01:54:08.670 --> 01:54:09.830
就证明着什么

01:54:09.830 --> 01:54:10.790
就证明着

01:54:10.790 --> 01:54:12.750
你给它里面设置了一个

01:54:12.750 --> 01:54:14.550
内置的html元素

01:54:14.550 --> 01:54:15.790
这样子就行了

01:54:15.790 --> 01:54:16.910
所以我们循环的时候

01:54:16.910 --> 01:54:18.790
每次循环都生成出来

01:54:18.790 --> 01:54:20.310
这样的一个自负串就OK了

01:54:20.310 --> 01:54:21.710
那么在每一次

01:54:21.710 --> 01:54:23.070
在执行循环之前呢

01:54:23.070 --> 01:54:24.870
我们来work一个template

01:54:24.870 --> 01:54:26.790
等于一个空串

01:54:26.790 --> 01:54:28.070
循环过后

01:54:28.070 --> 01:54:30.630
循环里面每次都加等于谁

01:54:30.630 --> 01:54:32.830
加等于这里边的一个

01:54:32.830 --> 01:54:33.630
新的自负串

01:54:33.630 --> 01:54:34.990
然后拼在一起

01:54:34.990 --> 01:54:36.950
那看一下吧

01:54:36.950 --> 01:54:38.030
这里边的这个

01:54:38.030 --> 01:54:40.550
值应该怎么去改

01:54:40.550 --> 01:54:42.390
1数据变成识节

01:54:42.390 --> 01:54:44.470
是i加上1了吧

01:54:44.470 --> 01:54:45.590
因为你从0开始

01:54:45.590 --> 01:54:47.430
但是我们排名是从1开始的

01:54:47.430 --> 01:54:48.750
然后分数

01:54:48.750 --> 01:54:49.710
那就等于谁

01:54:49.710 --> 01:54:51.870
就等于Zsr死告

01:54:51.870 --> 01:54:54.830
死告ARR当中的DI个

01:54:54.830 --> 01:54:56.390
里面的死告了

01:54:56.390 --> 01:54:56.990
是不是

01:54:56.990 --> 01:54:57.910
那这个time

01:54:57.910 --> 01:54:59.270
是不是也是同理呀

01:54:59.270 --> 01:55:00.950
等于的是

01:55:00.950 --> 01:55:06.950
Zsr死告ARR当中的DI个里面的time

01:55:06.950 --> 01:55:07.470
OK

01:55:07.470 --> 01:55:08.830
那设置完成了之后

01:55:08.830 --> 01:55:11.230
你应该把这个template的设置给谁

01:55:11.230 --> 01:55:12.150
设置给谁

01:55:12.150 --> 01:55:14.190
是不是设置给这个元素

01:55:14.190 --> 01:55:15.390
rank list

01:55:15.390 --> 01:55:17.190
那所以咱们把这个rank list

01:55:17.190 --> 01:55:19.590
它也给它取出来

01:55:19.590 --> 01:55:21.550
放到这

01:55:21.550 --> 01:55:22.390
c

01:55:22.390 --> 01:55:23.190
OK

01:55:23.190 --> 01:55:30.590
叫做rank list

01:55:30.590 --> 01:55:31.790
换一下

01:55:31.870 --> 01:55:34.310
rank-list

01:55:34.310 --> 01:55:38.750
在下面用一下它

01:55:38.750 --> 01:55:43.150
this.rank list.innerhtml

01:55:43.150 --> 01:55:44.990
等于template

01:55:44.990 --> 01:55:46.710
那这样子我们再来看

01:55:46.710 --> 01:55:47.270
来

01:55:47.270 --> 01:55:49.030
点击开始

01:55:49.030 --> 01:55:53.140
我来过两个吧

01:55:53.140 --> 01:55:53.980
诶

01:55:53.980 --> 01:55:54.700
看这2

01:55:54.700 --> 01:55:55.060
诶

01:55:55.060 --> 01:55:58.450
这块怎么没有执行呢

01:55:58.450 --> 01:55:59.410
嗯

01:55:59.410 --> 01:56:03.090
randerrank list.template

01:56:03.090 --> 01:56:04.610
每次去生成

01:56:04.690 --> 01:56:06.250
randerrank等于一个template

01:56:06.250 --> 01:56:06.570
那好

01:56:06.570 --> 01:56:08.050
我们来调试一下

01:56:08.050 --> 01:56:09.050
来调试一下

01:56:09.050 --> 01:56:15.120
console.log一个template

01:56:15.120 --> 01:56:18.120
来点击开始

01:56:18.120 --> 01:56:18.520
诶

01:56:18.520 --> 01:56:20.240
这块是一个空串

01:56:20.240 --> 01:56:21.200
没执行的

01:56:21.200 --> 01:56:22.560
点烂子

01:56:22.560 --> 01:56:23.320
干嘛呢

01:56:23.320 --> 01:56:24.080
再来一次

01:56:24.080 --> 01:56:27.420
点击开始

01:56:27.420 --> 01:56:28.140
看这

01:56:28.140 --> 01:56:29.460
这是不就可以了呀

01:56:29.460 --> 01:56:29.860
对不对

01:56:29.860 --> 01:56:30.860
这就可以了

01:56:30.860 --> 01:56:33.860
只不过是每一次的前面的123

01:56:33.860 --> 01:56:36.140
你都得去判断一下

01:56:36.140 --> 01:56:38.180
123你都得去判断一下

01:56:38.180 --> 01:56:40.660
那这一块的话就比较简单了

01:56:40.660 --> 01:56:41.460
比较简单了

01:56:41.460 --> 01:56:43.620
你只需要在这里面来搞一下

01:56:43.620 --> 01:56:45.060
是不是来搞一下

01:56:45.060 --> 01:56:45.660
比如说

01:56:45.660 --> 01:56:48.380
来wore一个dick array class

01:56:48.380 --> 01:56:49.980
初始的时候为一个空

01:56:49.980 --> 01:56:51.980
接着你判断当前的障礼的i

01:56:51.980 --> 01:56:53.020
打一个switch

01:56:53.020 --> 01:56:54.060
switch一个i

01:56:54.060 --> 01:56:57.060
如果说当前的这个i为0的话

01:56:57.060 --> 01:56:57.420
那好

01:56:57.420 --> 01:56:59.180
你就让这个dick array class

01:56:59.180 --> 01:57:00.100
等于几样

01:57:00.100 --> 01:57:03.380
等于一个first

01:57:03.380 --> 01:57:03.740
然后呢

01:57:03.740 --> 01:57:05.620
不如也可

01:57:05.620 --> 01:57:07.860
接着 case 为1的时候

01:57:07.860 --> 01:57:09.980
因为咱们只来前三名嘛

01:57:09.980 --> 01:57:10.740
没一的时候

01:57:10.740 --> 01:57:11.780
证明你是第二个

01:57:11.780 --> 01:57:13.060
second

01:57:13.060 --> 01:57:14.900
然后 break

01:57:14.900 --> 01:57:15.300
ok

01:57:15.300 --> 01:57:19.110
接着再来一个case

01:57:19.110 --> 01:57:20.670
一个二

01:57:20.670 --> 01:57:22.510
dick array class

01:57:22.510 --> 01:57:23.710
等于一个thir的

01:57:25.470 --> 01:57:28.190
这块来一个 break

01:57:28.190 --> 01:57:28.710
ok

01:57:28.710 --> 01:57:29.870
然后呢

01:57:29.870 --> 01:57:30.550
不用管了

01:57:30.550 --> 01:57:31.470
就不用管了

01:57:31.470 --> 01:57:32.030
接着呢

01:57:32.030 --> 01:57:34.750
咱们把这个dick array class指数的

01:57:34.750 --> 01:57:37.110
让你一个类名给它放进来

01:57:37.110 --> 01:57:37.950
是不是就ok

01:57:37.950 --> 01:57:38.990
呀呀

01:57:39.030 --> 01:57:39.790
这哪行了

01:57:39.790 --> 01:57:42.110
dick array class来复制一下

01:57:42.110 --> 01:57:42.350
来

01:57:42.350 --> 01:57:43.350
粘一粘

01:57:43.350 --> 01:57:44.070
点击

01:57:44.070 --> 01:57:45.070
死一个

01:57:45.070 --> 01:57:45.510
看这

01:57:45.510 --> 01:57:47.070
123是不是就出来了

01:57:47.070 --> 01:57:48.630
这个咱们是不是就搞定了呀

01:57:48.630 --> 01:57:49.990
接着还剩最后一个了

01:57:49.990 --> 01:57:51.190
咱就快说了

01:57:51.190 --> 01:57:52.190
重新开始

01:57:52.190 --> 01:57:53.310
那重新开始的话呢

01:57:53.310 --> 01:57:54.750
咱们来写一个

01:57:54.750 --> 01:57:55.950
来写个事件

01:57:55.950 --> 01:57:56.910
handle 一个

01:57:56.910 --> 01:57:57.510
restart

01:57:57.510 --> 01:57:59.230
咱们放到一起去

01:57:59.230 --> 01:58:00.630
来写一个handle

01:58:00.630 --> 01:58:02.950
restart

01:58:02.950 --> 01:58:05.750
restart

01:58:05.750 --> 01:58:08.030
方式

01:58:08.030 --> 01:58:08.670
好了

01:58:08.670 --> 01:58:10.230
这里面你要去拿到谁呀

01:58:10.230 --> 01:58:12.230
拿到这样的一个restart

01:58:12.230 --> 01:58:13.790
这个元素

01:58:13.790 --> 01:58:14.790
是不是元素

01:58:14.790 --> 01:58:16.990
那元素咱也得再去取一下

01:58:16.990 --> 01:58:17.630
这块呢

01:58:17.630 --> 01:58:19.670
仍然是同样的一个逻辑

01:58:19.670 --> 01:58:23.510
去来拿一个restart

01:58:23.510 --> 01:58:24.270
名字呢

01:58:24.270 --> 01:58:27.430
是不是就叫做restart呀

01:58:27.430 --> 01:58:27.830
ok

01:58:27.830 --> 01:58:29.230
拿到它之后

01:58:29.230 --> 01:58:33.020
在这里面

01:58:33.020 --> 01:58:36.620
去找到这个元素

01:58:36.620 --> 01:58:37.060
来

01:58:37.060 --> 01:58:38.060
this

01:58:38.060 --> 01:58:39.380
好像拿起错了

01:58:39.380 --> 01:58:40.620
方式

01:58:40.620 --> 01:58:41.060
方式

01:58:41.060 --> 01:58:41.500
ok

01:58:41.500 --> 01:58:43.380
this.allrestart

01:58:43.380 --> 01:58:46.660
去监听一下它的点击事件

01:58:46.660 --> 01:58:47.620
点击事件

01:58:47.620 --> 01:58:51.540
我想让它重新去运行一下这个

01:58:51.540 --> 01:58:53.380
还执行一下这个游戏

01:58:53.380 --> 01:58:54.740
该怎么去执行啊

01:58:54.740 --> 01:58:55.340
你想一下

01:58:55.340 --> 01:58:57.460
该怎么去执行

01:58:57.460 --> 01:58:58.580
思考一下

01:58:58.580 --> 01:59:00.420
思考一下该怎么去执行

01:59:00.420 --> 01:59:01.940
有没有什么思路啊

01:59:01.940 --> 01:59:06.340
有没有什么思路

01:59:06.340 --> 01:59:07.540
有思路吗

01:59:07.540 --> 01:59:07.780
ok

01:59:07.780 --> 01:59:08.780
init

01:59:08.780 --> 01:59:09.580
可以

01:59:09.580 --> 01:59:11.580
但是在执行所谓的

01:59:11.580 --> 01:59:13.860
这样的一个init值钱

01:59:13.860 --> 01:59:17.860
咱们是不是得让页面重新去刷新一下呀

01:59:17.860 --> 01:59:18.540
是不是

01:59:18.540 --> 01:59:21.460
咱得让它去重新刷新一下吧

01:59:21.460 --> 01:59:21.900
对吧

01:59:21.900 --> 01:59:22.460
好了

01:59:22.460 --> 01:59:23.540
那所以说这块啊

01:59:23.540 --> 01:59:26.020
咱怎么能够让它去进行刷新呢

01:59:26.020 --> 01:59:26.620
很简单

01:59:26.620 --> 01:59:27.340
记住

01:59:27.340 --> 01:59:29.300
找到window.location

01:59:29.300 --> 01:59:31.580
去调用它里面的一个reload的

01:59:31.580 --> 01:59:33.180
这样的一个方法就可以了

01:59:33.180 --> 01:59:34.500
咱们先来验证一下

01:59:34.500 --> 01:59:37.260
这个函数能不能够正常的运行

01:59:37.260 --> 01:59:37.580
来

01:59:37.580 --> 01:59:39.020
this.handlerestart

01:59:39.020 --> 01:59:39.900
执行一下

01:59:39.900 --> 01:59:40.500
ok

01:59:40.500 --> 01:59:42.260
咱们来死一个

01:59:42.260 --> 01:59:43.020
死一下

01:59:43.020 --> 01:59:43.860
重新开始

01:59:43.860 --> 01:59:45.060
是不是刷新了呀

01:59:45.060 --> 01:59:46.700
但是刷新完事了之后

01:59:46.700 --> 01:59:50.420
我想让它直接进入到游戏的这个阶段

01:59:50.420 --> 01:59:52.100
直接进入到游戏的这个阶段

01:59:52.100 --> 01:59:53.700
那怎么办呀

01:59:53.700 --> 01:59:55.100
怎么办

01:59:55.100 --> 01:59:55.740
记住喊

01:59:55.740 --> 01:59:58.420
我每一次玩完了之后

01:59:58.420 --> 02:00:00.300
我要再重新开始都直接进入

02:00:00.300 --> 02:00:02.060
我再打开一个新的标签页

02:00:02.060 --> 02:00:04.740
再进来还是点击开始的这个界面

02:00:04.740 --> 02:00:07.580
那所以说我们是不是应该存出一个数据啊

02:00:07.580 --> 02:00:09.300
这个数据应该是什么

02:00:09.300 --> 02:00:12.220
应该是只存留在绘画期的

02:00:12.220 --> 02:00:13.660
那么我们就可以用

02:00:13.660 --> 02:00:15.620
SessionStorage

02:00:15.620 --> 02:00:17.300
用SessionStorage

02:00:17.300 --> 02:00:18.140
所以咱们呢

02:00:18.140 --> 02:00:22.620
再去点击重新开始的时候要怎么办

02:00:22.620 --> 02:00:25.300
Sight一个SessionStorage

02:00:25.300 --> 02:00:25.580
ok

02:00:25.580 --> 02:00:28.020
那之后我就不直接去封装函数了

02:00:28.020 --> 02:00:29.340
咱们直接在里面

02:00:29.340 --> 02:00:30.420
Sight一下

02:00:30.420 --> 02:00:32.860
SessionStorage.site

02:00:32.860 --> 02:00:35.180
比如说我来一个play

02:00:35.180 --> 02:00:35.900
玩过吗

02:00:35.900 --> 02:00:36.820
如果说玩过的话

02:00:36.820 --> 02:00:38.100
我存一个处

02:00:38.100 --> 02:00:39.580
那在每一次的时候

02:00:39.580 --> 02:00:41.460
我都要先去取一下

02:00:41.460 --> 02:00:43.700
如果说他玩过了的话呢

02:00:43.700 --> 02:00:46.860
我就直接不让他出现那个什么了

02:00:46.860 --> 02:00:51.620
不让他出现那个点击开始的这个界面

02:00:51.620 --> 02:00:54.940
而是直接进入到游戏的这个阶段

02:00:54.940 --> 02:00:56.820
直接进入到游戏的这个阶段

02:00:56.820 --> 02:00:57.380
那好

02:00:57.380 --> 02:00:59.140
那怎么直接进入游戏呀

02:00:59.140 --> 02:01:00.940
我们在哪开始游戏了呀

02:01:00.940 --> 02:01:02.340
是不是当我们去点击

02:01:02.340 --> 02:01:04.660
这个点击开始的时候才开始游戏了呀

02:01:04.660 --> 02:01:06.340
所以我们要再去执行个什么

02:01:06.380 --> 02:01:07.580
再去执行一下

02:01:07.580 --> 02:01:09.500
这个里面的逻辑

02:01:09.500 --> 02:01:11.020
执行一下这个函数

02:01:11.020 --> 02:01:11.700
注意一下

02:01:11.700 --> 02:01:13.660
执行这个函数

02:01:13.660 --> 02:01:15.100
那所以说应该怎么办

02:01:16.260 --> 02:01:17.060
应该怎么办

02:01:17.060 --> 02:01:20.020
我们把这个函数给他抽离出来

02:01:20.020 --> 02:01:20.900
比如说来一个start

02:01:22.740 --> 02:01:23.140
function

02:01:24.780 --> 02:01:25.380
ok

02:01:25.380 --> 02:01:27.740
把这里面的值都抽离出来

02:01:27.740 --> 02:01:28.980
那为了方便一点

02:01:28.980 --> 02:01:30.740
我就不把他改成是

02:01:30.740 --> 02:01:31.340
this了哈

02:01:31.340 --> 02:01:32.500
我直接握一个self了

02:01:32.500 --> 02:01:33.660
要不然咱还得改

02:01:33.660 --> 02:01:34.420
还得花时间

02:01:34.420 --> 02:01:35.380
还没用哈

02:01:35.380 --> 02:01:35.860
接着

02:01:35.860 --> 02:01:37.820
我们让他等于执行个这个

02:01:38.660 --> 02:01:39.940
一个start

02:01:41.140 --> 02:01:41.860
ok

02:01:41.860 --> 02:01:44.620
那么每一次去执行的时候

02:01:44.620 --> 02:01:46.500
每一次去执行的时候

02:01:46.500 --> 02:01:47.540
我重新开始

02:01:47.540 --> 02:01:49.380
我只要去执行下这个start

02:01:49.380 --> 02:01:50.660
是不是就ok了呀

02:01:50.660 --> 02:01:51.380
对不对

02:01:51.380 --> 02:01:51.860
好

02:01:51.860 --> 02:01:55.220
那咱们在unit的时候来加个判断条件

02:01:55.220 --> 02:01:56.260
加判断条件

02:01:56.260 --> 02:01:58.380
如果说当前的

02:01:58.380 --> 02:02:01.140
30th solid里面有一个什么

02:02:01.140 --> 02:02:02.460
有一个play

02:02:02.460 --> 02:02:03.980
就证明我玩过了

02:02:03.980 --> 02:02:04.980
玩过了的话

02:02:04.980 --> 02:02:08.180
我就直接去执行这个start

02:02:08.180 --> 02:02:09.460
不就可以了吗

02:02:09.460 --> 02:02:09.740
ok

02:02:09.740 --> 02:02:10.540
那咱们来开始一下

02:02:10.540 --> 02:02:11.980
点击有问题

02:02:11.980 --> 02:02:13.060
又给我抱错了

02:02:13.060 --> 02:02:14.620
为什么会抱错了

02:02:14.620 --> 02:02:16.460
为什么会抱错呢

02:02:16.460 --> 02:02:18.660
问题出现在这个函数里面了

02:02:18.660 --> 02:02:19.620
start里面

02:02:19.620 --> 02:02:21.300
因为你在这里直接执行了

02:02:21.300 --> 02:02:23.100
你这里面的dase为什么了呀

02:02:23.100 --> 02:02:23.660
不是

02:02:23.660 --> 02:02:25.420
因为你这个函数

02:02:25.420 --> 02:02:27.580
就相当于原来写在这里的function

02:02:27.580 --> 02:02:29.060
这个里面的dase

02:02:29.060 --> 02:02:30.260
为谁

02:02:30.260 --> 02:02:31.500
为那个元素

02:02:31.500 --> 02:02:33.300
所以你应该去手动的

02:02:33.300 --> 02:02:35.340
去强制的显示的

02:02:35.340 --> 02:02:37.740
去改变一下它的dase

02:02:37.740 --> 02:02:38.740
那改变dase

02:02:38.740 --> 02:02:40.020
call of play能用吗

02:02:40.020 --> 02:02:40.660
不能用

02:02:40.660 --> 02:02:41.300
为什么呀

02:02:41.300 --> 02:02:42.380
因为call of play

02:02:42.380 --> 02:02:45.340
只在你去执行这个函数的时候

02:02:45.340 --> 02:02:47.340
能够去更改它里面的dase

02:02:47.340 --> 02:02:49.260
我们要不执行这个函数

02:02:49.260 --> 02:02:50.180
去改变它的dase

02:02:50.180 --> 02:02:51.580
所以说直接用谁呀

02:02:51.580 --> 02:02:52.620
直接用半的

02:02:52.620 --> 02:02:53.540
用半的

02:02:53.540 --> 02:02:54.460
好了

02:02:54.460 --> 02:02:54.780
ok

02:02:54.780 --> 02:02:55.660
那咱们再来看

02:02:55.660 --> 02:02:57.100
点击开始

02:02:57.100 --> 02:02:58.580
然后来

02:02:58.580 --> 02:02:59.500
死一个

02:02:59.500 --> 02:03:00.940
然后重新开始

02:03:00.940 --> 02:03:01.420
哎

02:03:01.420 --> 02:03:02.380
有问题啊

02:03:02.420 --> 02:03:03.700
没有去执行啊

02:03:03.700 --> 02:03:04.500
没有去执行

02:03:04.500 --> 02:03:05.060
咱们来看看

02:03:05.060 --> 02:03:06.780
有没有成功的设置上

02:03:06.780 --> 02:03:07.860
来个application

02:03:07.860 --> 02:03:08.980
css knowledge

02:03:08.980 --> 02:03:10.780
这里面有一个处

02:03:12.780 --> 02:03:14.660
只有一个呢

02:03:14.660 --> 02:03:15.460
没有设置上吗

02:03:17.220 --> 02:03:17.780
看一下

02:03:17.780 --> 02:03:18.460
看一下

02:03:19.620 --> 02:03:21.100
就不要了

02:03:21.100 --> 02:03:21.620
在哪

02:03:21.620 --> 02:03:21.940
在哪

02:03:21.940 --> 02:03:22.220
在哪

02:03:22.220 --> 02:03:23.500
在哪

02:03:23.500 --> 02:03:25.820
有一个handle restart

02:03:25.820 --> 02:03:26.820
然后这里面呢

02:03:26.820 --> 02:03:29.020
你不能在刷新之前去

02:03:29.020 --> 02:03:30.740
怎么不能在刷新之后去损

02:03:30.740 --> 02:03:32.020
而在刷新之前去损

02:03:32.340 --> 02:03:34.020
要不然他刷新之后就没了

02:03:34.020 --> 02:03:35.540
咱再点击一下

02:03:35.540 --> 02:03:35.900
来

02:03:35.900 --> 02:03:37.460
这块死一个

02:03:37.460 --> 02:03:38.580
再重新开始

02:03:38.580 --> 02:03:38.820
哎

02:03:38.820 --> 02:03:39.780
还是没有存上

02:03:39.780 --> 02:03:40.580
有个问题

02:03:40.580 --> 02:03:43.140
css knowledge.setitem

02:03:43.140 --> 02:03:44.260
这也整啥呢

02:03:44.260 --> 02:03:44.820
item

02:03:44.820 --> 02:03:45.380
好了

02:03:45.380 --> 02:03:46.220
就我来点击

02:03:47.580 --> 02:03:48.140
死一个

02:03:48.140 --> 02:03:48.980
看看这里有吗

02:03:50.820 --> 02:03:51.580
application

02:03:52.660 --> 02:03:53.020
哎

02:03:53.020 --> 02:03:54.020
刷新一下

02:03:54.020 --> 02:03:54.660
还没有吗

02:03:54.660 --> 02:03:55.740
重新开始

02:03:55.740 --> 02:03:55.900
哎

02:03:55.900 --> 02:03:56.460
这就有了

02:03:56.460 --> 02:03:56.620
哈

02:03:56.620 --> 02:03:57.500
这就已经有了

02:03:57.500 --> 02:03:57.980
ok

02:03:57.980 --> 02:03:58.460
好了

02:03:58.460 --> 02:04:00.260
这个咱们就完事了

02:04:00.260 --> 02:04:01.620
咱们这整个游戏呢

02:04:01.660 --> 02:04:02.380
就写完了

02:04:02.380 --> 02:04:02.820
现在

02:04:02.820 --> 02:04:02.980
哈

02:04:02.980 --> 02:04:04.020
大家只要记住

02:04:04.020 --> 02:04:05.500
回去自己留个小作业

02:04:05.500 --> 02:04:06.060
哈

02:04:06.060 --> 02:04:07.620
咱们只展示八个

02:04:07.620 --> 02:04:08.780
只展示八个

02:04:08.780 --> 02:04:09.060
然后呢

02:04:09.060 --> 02:04:10.100
你们自己来写一下

02:04:10.100 --> 02:04:10.660
就可以了

02:04:10.660 --> 02:04:12.420
也说我们每一次去循环

02:04:12.420 --> 02:04:13.220
这个数组的时候

02:04:13.220 --> 02:04:14.580
循环八次就可以了

02:04:14.580 --> 02:04:16.020
那咱们这整个游戏呢

02:04:16.020 --> 02:04:17.060
就到这里了

02:04:17.060 --> 02:04:17.860
游戏就到这里了

02:04:17.860 --> 02:04:18.220
哈

02:04:18.220 --> 02:04:19.300
分数排名

02:04:19.300 --> 02:04:19.780
哎对

02:04:19.780 --> 02:04:21.500
分数排名怎么排呀

02:04:21.500 --> 02:04:22.580
用

02:04:22.580 --> 02:04:24.660
gs当中数组里面的

02:04:24.660 --> 02:04:26.100
salt这个方法

02:04:26.100 --> 02:04:27.620
用salt这个方法就ok了

02:04:27.620 --> 02:04:27.940
哈

02:04:27.940 --> 02:04:29.300
给大家来展示一下

02:04:29.300 --> 02:04:30.420
有一个set score

02:04:30.420 --> 02:04:30.980
对不对

02:04:31.020 --> 02:04:31.900
每一次的时候

02:04:31.900 --> 02:04:33.300
你都让这个scal

02:04:33.300 --> 02:04:34.940
a2去调用它里面的

02:04:34.940 --> 02:04:35.980
salt方法

02:04:35.980 --> 02:04:37.300
那salt这个方法

02:04:37.300 --> 02:04:38.820
在咱们乘哥德克里面

02:04:38.820 --> 02:04:39.900
应该是讲过了

02:04:39.900 --> 02:04:41.380
它里面怎么去排名啊

02:04:41.380 --> 02:04:42.020
你可以

02:04:42.020 --> 02:04:44.100
逆序也可以去降序

02:04:44.100 --> 02:04:45.140
根据你传递的

02:04:45.140 --> 02:04:46.620
这样的一个参数

02:04:46.620 --> 02:04:47.820
是有关系

02:04:47.820 --> 02:04:48.820
是有关系的哈

02:04:48.820 --> 02:04:49.420
咱们这样

02:04:49.420 --> 02:04:50.060
在这里面

02:04:50.060 --> 02:04:51.620
传递一个回调函数

02:04:51.620 --> 02:04:52.700
里面有个a和b

02:04:52.700 --> 02:04:55.060
是每一次数组当中的

02:04:55.060 --> 02:04:56.500
这样的一个返回结果

02:04:56.500 --> 02:04:57.180
如果说

02:04:57.180 --> 02:04:59.300
以每一次都返回b

02:04:59.300 --> 02:04:59.620
b

02:04:59.620 --> 02:05:01.740
如果说想要在a的前面的话

02:05:01.740 --> 02:05:03.820
要让它去返回一个正数

02:05:03.820 --> 02:05:04.420
就可以了

02:05:04.420 --> 02:05:04.940
那这块呢

02:05:04.940 --> 02:05:06.420
返回一个b.scal

02:05:06.420 --> 02:05:08.100
减去一个a.scal

02:05:08.100 --> 02:05:08.780
就可以了

02:05:08.780 --> 02:05:11.380
它能够进行一个正常的一个排序

02:05:11.380 --> 02:05:11.660
那好

02:05:11.660 --> 02:05:12.500
咱们来看一下

02:05:12.500 --> 02:05:15.060
这块是不是就211 10000

02:05:15.060 --> 02:05:16.020
0000就ok了

02:05:16.020 --> 02:05:16.940
对不对

02:05:16.940 --> 02:05:18.180
那咱们再改一下吧

02:05:18.180 --> 02:05:19.500
也没什么了哈

02:05:19.500 --> 02:05:22.100
你想要去想要去展示8个的话

02:05:22.100 --> 02:05:24.700
你这块就直接i小于一个8

02:05:24.700 --> 02:05:25.660
不就完事了吗

02:05:25.660 --> 02:05:26.060
是不是

02:05:26.060 --> 02:05:26.980
这块就8个了

02:05:26.980 --> 02:05:27.780
就完事了哈

02:05:27.780 --> 02:05:28.820
这是salt

02:05:28.820 --> 02:05:32.300
他的一个用法 回去的话好好复习一下

02:05:32.300 --> 02:05:35.180
salt他的一个用法之后呢

02:05:35.180 --> 02:05:37.740
看明白了 这个呢 排名你也就会了哈

02:05:37.740 --> 02:05:40.100
好了 那这整体的一个游戏呢

02:05:40.100 --> 02:05:42.220
咱们就把它给写完了 写完了之后呢

02:05:42.220 --> 02:05:43.260
我们不要忘记哈

02:05:43.260 --> 02:05:45.060
来git一下

02:05:45.060 --> 02:05:46.900
不是这个哈 不是这个

02:05:46.900 --> 02:05:52.390
不是这个 点击git

02:05:52.390 --> 02:05:56.150
然后我们想要git i的一个点

02:05:56.150 --> 02:05:58.630
添加到项目当中

02:05:58.630 --> 02:06:01.190
git commit一个-m

02:06:01.190 --> 02:06:03.950
比如说来一个game over 哈 完事了

02:06:03.950 --> 02:06:05.230
然后添加进去

02:06:05.230 --> 02:06:06.590
然后铺式 铺式

02:06:06.590 --> 02:06:09.190
orange到一个salt上

02:06:09.190 --> 02:06:11.190
ok 添加上去了之后啊

02:06:11.190 --> 02:06:13.630
我们想要在线去展示一下

02:06:13.630 --> 02:06:15.470
这个游戏该怎么办呢

02:06:15.470 --> 02:06:17.230
其实非常的简单哈

02:06:17.230 --> 02:06:19.790
咱们先等待着它铺式上去

02:06:19.790 --> 02:06:24.610
git hub.com

02:06:24.610 --> 02:06:26.930
看一下

02:06:26.930 --> 02:06:30.250
打开这个shanshan flatpaper的

02:06:30.250 --> 02:06:33.210
ok 然后咱们现在来看一下哈

02:06:33.210 --> 02:06:36.370
要慢哈 这个网

02:06:36.370 --> 02:06:37.810
有一个ser的 是不是

02:06:37.810 --> 02:06:39.810
那好 我们想要在线去展示

02:06:39.810 --> 02:06:42.330
那打开settings 打开settings

02:06:42.330 --> 02:06:45.050
它有一个git hub.io这样的一个页面

02:06:45.050 --> 02:06:47.490
能够直接在git hub上去展示哈

02:06:47.490 --> 02:06:50.370
在下面直接找啊 直接找

02:06:50.370 --> 02:06:51.730
找找找找找找找找

02:06:51.730 --> 02:06:54.330
有一个git hub pages

02:06:54.330 --> 02:06:57.370
ok 它会让你去选择一个什么

02:06:57.370 --> 02:06:58.690
选择一个分支

02:06:58.690 --> 02:06:59.530
那你会发现呢

02:06:59.530 --> 02:07:01.450
有它能够只去选择谁呀

02:07:01.450 --> 02:07:03.810
选择master这样的一个分支

02:07:03.810 --> 02:07:05.690
选择master这样的一个分支

02:07:05.690 --> 02:07:07.730
那分支怎么合并呢

02:07:07.730 --> 02:07:08.570
怎么合并呢

02:07:08.570 --> 02:07:09.730
那好 很简单

02:07:09.730 --> 02:07:11.610
我们先回到主分支

02:07:11.610 --> 02:07:14.250
git checkout master

02:07:14.250 --> 02:07:16.210
接着git merge

02:07:16.210 --> 02:07:18.410
谁 merge ser的

02:07:18.410 --> 02:07:19.690
给它合并上

02:07:19.690 --> 02:07:23.470
诶 merge

02:07:23.470 --> 02:07:24.430
ok 回车

02:07:24.430 --> 02:07:25.350
回车了之后

02:07:25.350 --> 02:07:29.950
我们再把这样的一个添加进去

02:07:29.950 --> 02:07:32.830
就是git m一个under

02:07:32.830 --> 02:07:38.910
然后push git push arrange到master上

02:07:38.910 --> 02:07:40.230
回车

02:07:40.230 --> 02:07:41.590
回车之后我们来等待

02:07:41.590 --> 02:07:51.160
我们回到master分支上来看一下

02:07:51.160 --> 02:07:53.400
等它一小会儿啊

02:07:53.400 --> 02:07:55.840
刷新一下

02:07:55.840 --> 02:07:58.160
诶 有问题哈

02:07:58.160 --> 02:07:58.560
看这儿

02:07:58.560 --> 02:08:00.400
这是不是就都添加上来了呀

02:08:00.400 --> 02:08:02.800
添上之后我们再去点击settings

02:08:02.800 --> 02:08:04.440
然后往下去发

02:08:04.440 --> 02:08:05.320
往下去拉哈

02:08:05.320 --> 02:08:15.130
往下去拉

02:08:15.130 --> 02:08:22.340
ok这块来点击master不让吃

02:08:22.420 --> 02:08:27.180
我这网上有点慢还是慢

02:08:27.180 --> 02:08:27.820
这块哈

02:08:27.820 --> 02:08:29.780
你只要刷新等它完毕了

02:08:29.780 --> 02:08:30.900
你设置上之后

02:08:30.900 --> 02:08:32.460
它就会给你一个什么呢

02:08:32.460 --> 02:08:33.420
给你一个网址

02:08:33.420 --> 02:08:35.380
就比如说我们现在还看到的

02:08:35.380 --> 02:08:39.930
我的那个页面

02:08:39.930 --> 02:08:41.850
打开这个

02:08:41.850 --> 02:08:42.890
咱这么慢啊

02:08:42.890 --> 02:08:53.460
太慢了啊

02:08:53.460 --> 02:08:55.380
比如说我这块有个flap paper的

02:08:55.380 --> 02:08:57.960
对不对

02:08:57.960 --> 02:08:59.680
把这块好像也完事了

02:08:59.680 --> 02:09:01.840
ok 咱往下来走啊

02:09:01.840 --> 02:09:03.280
走走走走走

02:09:03.280 --> 02:09:03.720
看这儿

02:09:03.720 --> 02:09:04.760
这是不是就打开了呀

02:09:04.760 --> 02:09:05.920
它就给你一个网址

02:09:05.920 --> 02:09:07.280
说你已经在这里发布了

02:09:07.280 --> 02:09:07.960
然后点击

02:09:07.960 --> 02:09:08.960
ok点击的话

02:09:08.960 --> 02:09:10.400
你发现一个问题哈

02:09:10.400 --> 02:09:12.840
这个第一次加载你的网速慢

02:09:12.840 --> 02:09:14.520
慢的话图片它上过来

02:09:14.520 --> 02:09:16.720
所以就会有一个空白的一个时候

02:09:16.720 --> 02:09:18.800
展示出来是咱们那个非常丑的

02:09:18.800 --> 02:09:20.400
这样的一个红色的背景

02:09:20.400 --> 02:09:22.160
但如果说我们未来不用图片做

02:09:22.160 --> 02:09:23.760
比如用class来做的话呢

02:09:23.760 --> 02:09:25.600
就不会有这样的一个事情发生了

02:09:25.600 --> 02:09:25.800
哈

02:09:25.800 --> 02:09:26.320
那当然呢

02:09:26.320 --> 02:09:27.960
这都是后面要去学习的知识

02:09:27.960 --> 02:09:28.800
你前期呢

02:09:28.800 --> 02:09:30.920
先学会利用图片的这种方式

02:09:30.920 --> 02:09:33.000
把这个游戏给做出来就可以了

02:09:33.000 --> 02:09:33.680
就可以了

02:09:33.680 --> 02:09:34.120
ok

02:09:34.160 --> 02:09:35.640
那咱们这整个游戏呢

02:09:35.640 --> 02:09:37.040
就把它给写完了

02:09:37.040 --> 02:09:38.320
那我的这个课程呢

02:09:38.320 --> 02:09:39.280
也就到这里了

02:09:39.280 --> 02:09:41.080
我相信这些课对于你们俩加上

02:09:41.080 --> 02:09:41.720
虐哈

02:09:41.720 --> 02:09:42.960
是不是有点虐

02:09:42.960 --> 02:09:43.360
虐的话

02:09:43.360 --> 02:09:44.520
有没有什么关系哈

02:09:44.520 --> 02:09:45.680
大家课下哈

02:09:45.680 --> 02:09:47.320
拿到这样的一个呃

02:09:47.320 --> 02:09:48.040
原码啊

02:09:48.040 --> 02:09:48.920
你们下原码

02:09:48.920 --> 02:09:50.360
还就别直接克龙我的

02:09:50.360 --> 02:09:51.440
还听我的哈

02:09:51.440 --> 02:09:53.080
直接切换分支啊

02:09:53.080 --> 02:09:55.080
切换到我的这样一个分支上

02:09:55.080 --> 02:09:56.680
去进行下载就可以了

02:09:56.680 --> 02:09:57.720
比如说我呃

02:09:57.720 --> 02:09:58.640
这块啊

02:09:58.640 --> 02:10:00.080
切换到三节课的分支

02:10:00.080 --> 02:10:02.360
然后再点击左侧的这个download

02:10:02.360 --> 02:10:04.280
有一个download的纸

02:10:04.280 --> 02:10:06.840
你把这个压缩包给给下载下来

02:10:06.840 --> 02:10:08.520
是说以后怎么样能够去

02:10:08.520 --> 02:10:10.840
把别人的这个代码克龙中还能找分支

02:10:10.840 --> 02:10:12.760
这是你们以后要去写的事情

02:10:12.760 --> 02:10:13.640
你们前期

02:10:13.640 --> 02:10:16.040
就先用这么简单的方式来做就可以了

02:10:16.040 --> 02:10:17.000
不要贪多哈

02:10:17.000 --> 02:10:17.880
也不要去想

02:10:17.880 --> 02:10:18.200
哎

02:10:18.200 --> 02:10:19.920
那我想去实验那个功能怎么办

02:10:19.920 --> 02:10:20.880
咱们先一步一步

02:10:20.880 --> 02:10:23.200
按部就办的去做就可以了哈

02:10:23.200 --> 02:10:23.600
ok

02:10:23.600 --> 02:10:24.400
好了哈

02:10:24.400 --> 02:10:24.600
呃

02:10:24.600 --> 02:10:26.040
那我今天这个课程呢

02:10:26.040 --> 02:10:26.960
就到这里了

02:10:26.960 --> 02:10:28.520
咱们这三天的时光呢

02:10:28.520 --> 02:10:31.320
也就跟我先say say bye bye了哈

02:10:31.360 --> 02:10:32.400
那同样后面呢

02:10:32.400 --> 02:10:34.440
这个徐老师还会过来跟大家呢

02:10:34.440 --> 02:10:36.840
说一些他要跟大家安排的一些事情

02:10:36.840 --> 02:10:38.760
看我们叫徐老师过来了

02:10:38.760 --> 02:10:45.880
哈叫徐老师已经等半天了哈

02:10:45.880 --> 02:10:46.600
然后大家哈

02:10:46.600 --> 02:10:47.920
一定要拿圆码

02:10:47.920 --> 02:10:48.680
好好分析

02:10:48.680 --> 02:10:49.840
好好做一下哈

