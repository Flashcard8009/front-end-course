WEBVTT

00:00.000 --> 00:04.000
来吧 防斗截流有多少同学知道

00:04.000 --> 00:06.000
有同学知道吗 这是啥

00:06.000 --> 00:08.000
一听这个名字知道是啥不

00:08.000 --> 00:09.000
或者说 什么截流

00:09.000 --> 00:12.000
对 还有时候同学们有没有去查一查

00:12.000 --> 00:15.000
行了 别管你知不知道 来吧

00:15.000 --> 00:18.000
咱们这道题问的是防斗与截流是吧

00:19.000 --> 00:22.000
防斗与截流

00:23.000 --> 00:26.000
OK 六之一二 那这次我让你完全通透

00:26.000 --> 00:28.000
哪怕说你不会写代码的

00:28.000 --> 00:30.000
那你也了解啥是防斗与截流

00:30.000 --> 00:33.000
先来听两个大八的故事

00:33.000 --> 00:36.000
两个大八的故事

00:36.000 --> 00:42.380
两个大八的故事

00:44.380 --> 00:47.380
有路播 你们总想着路播的事

00:47.380 --> 00:50.380
就是脑子里听同学们对自己负责

00:50.380 --> 00:52.380
不要想着 因为有路播

00:52.380 --> 00:54.380
你就可以怎么怎么招了 好吗

00:55.380 --> 00:56.380
来

00:56.380 --> 00:59.380
这有同学把二 可以把左下有一

00:59.380 --> 01:00.380
挡到啥了

01:01.380 --> 01:02.380
挡到啥了

01:03.380 --> 01:04.380
来吧

01:05.380 --> 01:08.380
你如果关注点不在这 你就看不到他

01:08.380 --> 01:09.380
谢谢

01:09.380 --> 01:11.380
先给同学们说两个大八的故事 啥呢

01:11.380 --> 01:13.380
丁老师现在在哈尔滨

01:13.380 --> 01:16.380
然后这个中途要回家 对吧

01:16.380 --> 01:18.380
那老师家在哪 刚才许老师简单介绍了一下

01:18.380 --> 01:20.380
亚伟华业厂 那个亚伟

01:20.380 --> 01:22.380
让一个小镇子

01:24.380 --> 01:25.380
等会儿

01:26.380 --> 01:27.380
自动保存

01:29.380 --> 01:31.380
那这个两个大八怎么样呢

01:31.380 --> 01:35.380
就是从哈尔滨到丁老师家有两类大八车

01:35.380 --> 01:37.380
有两类大八车 哪两类呢

01:37.380 --> 01:39.380
给大家说一下 就是

01:39.380 --> 01:40.380
这个

01:40.380 --> 01:43.380
哪两类 这个A类型的大八

01:44.380 --> 01:45.380
干嘛呢

01:45.380 --> 01:47.380
到丁老师家 他有一个特点

01:47.380 --> 01:48.380
他有个特点啥呢

01:48.380 --> 01:51.380
当这个车上有一个人之后

01:51.380 --> 01:53.380
就是车上上去一个

01:57.170 --> 01:59.170
上去一个人之后

01:59.170 --> 02:00.170
一个人之后怎么着呢

02:00.170 --> 02:02.170
五分钟之内

02:02.170 --> 02:05.310
不上

02:05.310 --> 02:07.310
人干嘛呢 就发车

02:07.310 --> 02:10.940
来 就是我这个大八车

02:10.940 --> 02:13.940
正在我的这个后车点等着

02:13.940 --> 02:15.940
直到大八上上了一个人之后

02:15.940 --> 02:17.940
并且之后的五分钟之内

02:17.940 --> 02:19.940
没人上车干嘛呢

02:19.940 --> 02:20.940
我就进行发车

02:20.940 --> 02:22.940
那如果之后的五分钟之内

02:22.940 --> 02:23.940
上人了怎么办

02:23.940 --> 02:24.940
五分钟之后上人了

02:24.940 --> 02:26.940
那从最后上的这个人之后

02:26.940 --> 02:28.940
再等五分钟

02:28.940 --> 02:29.940
然后再发车

02:29.940 --> 02:31.940
这么讲 同学们能听懂吗

02:32.940 --> 02:33.940
我听懂了

02:33.940 --> 02:35.940
这么讲 同学们能听懂吗

02:36.940 --> 02:38.940
就是他是一个发车的一个规则

02:38.940 --> 02:40.940
发车的一个规则

02:40.940 --> 02:42.940
干嘛呢 就是这个A

02:42.940 --> 02:43.940
这个A类大八干嘛呢

02:43.940 --> 02:45.940
他首先是车点上去一个人

02:45.940 --> 02:46.940
他不能空跑 对吧

02:46.940 --> 02:47.940
这也不符合现实

02:47.940 --> 02:49.940
还有同学别就这说

02:49.940 --> 02:50.940
车多大能不能一直上人

02:50.940 --> 02:51.940
别考虑那一个

02:51.940 --> 02:52.940
咱就说

02:52.940 --> 02:54.940
这个他的一个上车的规则就是

02:54.940 --> 02:56.940
只要车上有人之后干嘛呢

02:56.940 --> 02:57.940
五分钟之内不上人

02:57.940 --> 02:58.940
咱就发车

02:58.940 --> 03:01.940
但是如果假如这个4分59秒来人了

03:01.940 --> 03:02.940
那不好意思

03:02.940 --> 03:04.940
来完人之后再等五分钟

03:04.940 --> 03:05.940
那之后

03:05.940 --> 03:07.940
那如果说这个5分01秒来人

03:07.940 --> 03:08.940
那他只能做下一趟了

03:08.940 --> 03:09.940
对吧 只能做下一趟了

03:09.940 --> 03:11.940
这是A类大八的一个特点

03:11.940 --> 03:13.940
A类大八的一个特点

03:13.940 --> 03:14.940
然后那B类大八呢

03:14.940 --> 03:15.940
跟我们就比较像了

03:17.940 --> 03:22.620
他咋了呢

03:22.620 --> 03:24.620
同样 同样

03:24.620 --> 03:25.620
同样 也是车上干嘛呢

03:25.620 --> 03:26.620
上人

03:27.620 --> 03:28.620
上人

03:29.620 --> 03:30.620
哎 也是

03:30.620 --> 03:32.620
前提是必须得有人

03:32.620 --> 03:37.790
车上上去人之后怎么着呢

03:37.790 --> 03:38.790
就是

03:38.790 --> 03:40.790
上完人之后干嘛呢

03:40.790 --> 03:42.790
五分钟之后发车

03:42.790 --> 03:48.220
五分钟之后发车

03:48.220 --> 03:50.220
就是车上有一个人之后干嘛呢

03:50.220 --> 03:51.220
等五分钟

03:51.220 --> 03:52.220
五分钟你别管说

03:52.220 --> 03:53.220
没来人或者来了十个人

03:53.220 --> 03:55.220
都发车

03:55.220 --> 03:56.220
都发车

03:56.220 --> 03:58.850
大家能懂不

03:58.850 --> 03:59.850
车上

03:59.850 --> 04:00.850
能懂 能懂

04:01.850 --> 04:03.850
车上来一个人之后干嘛呢

04:03.850 --> 04:04.850
等五分钟

04:04.850 --> 04:05.850
这五分钟之内

04:05.850 --> 04:07.850
你只要来人就上车

04:07.850 --> 04:08.850
你这个不来的

04:08.850 --> 04:10.850
来不来我五分钟之后都发车

04:10.850 --> 04:11.850
能回看

04:12.850 --> 04:13.850
OK

04:13.850 --> 04:15.850
OK 这个能不能回看

04:15.850 --> 04:16.850
这个不重要

04:16.850 --> 04:17.850
来听课

04:17.850 --> 04:19.850
你要明白咱们讲的什么内容

04:20.850 --> 04:22.850
能 就是例子不现实

04:22.850 --> 04:23.850
那就 没事

04:23.850 --> 04:24.850
不现实别听

04:24.850 --> 04:26.850
没关系 没关系

04:27.850 --> 04:28.850
那个

04:28.850 --> 04:30.850
直接发车直接都讲不利

04:30.850 --> 04:32.850
这个不重要

04:32.850 --> 04:33.850
不重要

04:33.850 --> 04:35.850
就是 你可以考虑

04:35.850 --> 04:37.850
它可是高铁是大蛇 随便

04:37.850 --> 04:38.850
啊 随便

04:38.850 --> 04:39.850
目的是为了啥呀

04:39.850 --> 04:40.850
目的是为了啥呀

04:40.850 --> 04:42.850
那哪个方导是解留的

04:43.850 --> 04:45.850
一会儿给大家接脚

04:45.850 --> 04:46.850
来来来 我说

04:46.850 --> 04:48.850
听我 来来 听我说

04:48.850 --> 04:49.850
你什么这个

04:49.850 --> 04:50.850
什么什么这个

04:50.850 --> 04:51.850
这个现实抢购啊

04:51.850 --> 04:52.850
什么什么其他例子

04:52.850 --> 04:53.850
不重要啊

04:53.850 --> 04:54.850
不重要

04:54.850 --> 04:55.850
不重要

04:55.850 --> 04:56.850
你讲 这个

04:56.850 --> 04:58.850
这个 听不懂就算了

04:58.850 --> 04:59.850
听不懂就算了

04:59.850 --> 05:00.850
不现实 对吧

05:00.850 --> 05:01.850
代码现实吗 是吧

05:01.850 --> 05:02.850
啊 这个这个

05:02.850 --> 05:03.850
难道要给你讲

05:03.850 --> 05:04.850
里面是咋装的吗 是吧

05:04.850 --> 05:05.850
我们这个这个

05:05.850 --> 05:06.850
电脑二斤制

05:06.850 --> 05:08.850
已经写的每一个字怎么存的吗 是吧

05:08.850 --> 05:09.850
啊 那这个

05:09.850 --> 05:10.850
如果要想就研究那个呢

05:10.850 --> 05:12.850
咱们这堂课确是不合适啊

05:12.850 --> 05:13.850
来

05:13.850 --> 05:15.850
上面呢 给大家介绍了

05:15.850 --> 05:17.850
这个两个大巴的一个特征

05:17.850 --> 05:19.850
两个大巴的一个特征干嘛呢

05:19.850 --> 05:21.850
就是我们目的不是说

05:21.850 --> 05:22.850
上一个人发一辆车

05:22.850 --> 05:23.850
这个很不现实 对吧

05:23.850 --> 05:24.850
就哪怕说

05:24.850 --> 05:25.850
是大巴车是无限的

05:25.850 --> 05:27.850
我上一个人可以发一辆车

05:27.850 --> 05:28.850
但是

05:28.850 --> 05:29.850
接收 哪怕说

05:29.850 --> 05:30.850
压不利 没有那么大地方 对吧

05:30.850 --> 05:31.850
一万个人

05:31.850 --> 05:32.850
坐一万辆车就过去了

05:32.850 --> 05:34.850
压不利 你装瘦不了啊 对吧

05:34.850 --> 05:36.850
那我给他制定一个规则干嘛呢

05:36.850 --> 05:38.850
我一辆车尽可能多装一些人

05:38.850 --> 05:39.850
然后

05:39.850 --> 05:40.850
哎 这个一趟拉过去

05:40.850 --> 05:41.850
一边减少这个

05:41.850 --> 05:43.850
车的一个流动量

05:43.850 --> 05:44.850
本质上都是这样

05:44.850 --> 05:45.850
啊 都是这样干嘛呢

05:45.850 --> 05:46.850
前提是

05:46.850 --> 05:47.850
我一辆车装一个人

05:47.850 --> 05:48.850
那后来说

05:48.850 --> 05:49.850
一辆车能不能装多个人

05:49.850 --> 05:51.850
啊 这样的事

05:51.850 --> 05:52.850
啊 这样的事

05:52.850 --> 05:53.850
那本质上

05:53.850 --> 05:55.850
他们是两个规则啊

05:55.850 --> 05:57.850
他们本质上是两个规则

05:57.850 --> 05:58.850
那么

05:58.850 --> 05:59.850
这个

05:59.850 --> 06:00.850
A呢 对吧

06:00.850 --> 06:01.850
说

06:01.850 --> 06:02.850
我上去一个人之后

06:02.850 --> 06:03.850
5分钟之内不上人

06:03.850 --> 06:04.850
咱就走

06:04.850 --> 06:05.850
5分钟上人之后

06:05.850 --> 06:06.850
咱们再等5分钟

06:06.850 --> 06:07.850
那针对于这种情况呢

06:07.850 --> 06:08.850
给他起个名字

06:08.850 --> 06:09.850
叫防斗

06:10.850 --> 06:11.850
防斗

06:11.850 --> 06:12.850
那啥叫防斗

06:12.850 --> 06:13.850
防斗动嘛 对吧

06:13.850 --> 06:14.850
反复横跳

06:14.850 --> 06:15.850
防止反复横跳

06:15.850 --> 06:16.850
就是你来人

06:16.850 --> 06:17.850
我就装 你来人我就装

06:17.850 --> 06:18.850
那啥时候

06:18.850 --> 06:19.850
一段时间内不上人了

06:19.850 --> 06:20.850
OK 我就走

06:20.850 --> 06:22.850
那接下来这个节流

06:22.850 --> 06:23.850
啥叫节流啊

06:23.850 --> 06:27.860
所谓的节约流量嘛

06:27.860 --> 06:28.860
就是说把我们原来

06:28.860 --> 06:29.860
这个

06:29.860 --> 06:31.860
要多次触发的事情

06:31.860 --> 06:32.860
放到一起

06:32.860 --> 06:34.860
每隔一段时间触发一次

06:34.860 --> 06:36.860
因为他们的目标是一样的

06:36.860 --> 06:37.860
他们目标是一样的

06:37.860 --> 06:38.860
所以说

06:38.860 --> 06:40.860
一个叫防斗 一个是节流

06:40.860 --> 06:42.860
那他们本质上

06:42.860 --> 06:43.860
都是为了节省

06:43.860 --> 06:45.860
我们这样的一个操作的势子

06:45.860 --> 06:47.860
就是说这个操作的

06:47.860 --> 06:48.860
这个次数

06:48.860 --> 06:50.860
减少操作的次数

06:50.860 --> 06:51.860
当然了 有同学在评论区

06:51.860 --> 06:53.860
说老师讲的这个例子

06:53.860 --> 06:54.860
通透 有的老师说

06:54.860 --> 06:55.860
你几个举的例子不现实

06:55.860 --> 06:57.860
懂的都懂

06:57.860 --> 06:59.860
不懂的我也不强求你 对吧

06:59.860 --> 07:00.860
毕竟今天的话题

07:00.860 --> 07:02.860
可能有些高端 是吧

07:03.860 --> 07:05.860
那么无论说这个防斗也好

07:05.860 --> 07:06.860
节流也好

07:06.860 --> 07:07.860
那你想想

07:07.860 --> 07:09.860
当一辆车发出去之后

07:09.860 --> 07:10.860
当一辆车发出去之后

07:10.860 --> 07:12.860
会咋样

07:12.860 --> 07:13.860
像刚才说的那样 对吧

07:13.860 --> 07:15.860
一个车如果装一个人

07:15.860 --> 07:17.860
哭哭往亚伯利去发

07:17.860 --> 07:18.860
你这个发车 对吧

07:18.860 --> 07:19.860
你这个亚伯利

07:19.860 --> 07:21.860
他会接收很多车

07:21.860 --> 07:22.860
他需要把这个车里面的人

07:22.860 --> 07:23.860
搞出来 对吧

07:23.860 --> 07:24.860
那首先那里面

07:24.860 --> 07:26.860
有没有那么多服务人员

07:26.860 --> 07:27.860
能不能接应这些车

07:27.860 --> 07:28.860
那其实在这里面发车

07:28.860 --> 07:29.860
大家可以理解成

07:29.860 --> 07:30.860
我们若干个操作

07:30.860 --> 07:32.860
或者是网络请求

07:34.860 --> 07:35.860
咱说网络请求更可适

07:35.860 --> 07:36.860
因为本来他就是

07:36.860 --> 07:38.860
A到B的一个操作

07:38.860 --> 07:39.860
对吧

07:39.860 --> 07:40.860
A到B的一个操作

07:40.860 --> 07:41.860
对吧

07:41.860 --> 07:42.860
那我是从哈尔滨

07:42.860 --> 07:43.860
到亚伯利也好

07:43.860 --> 07:44.860
我是从哈尔滨

07:44.860 --> 07:45.860
到母南疆也好

07:45.860 --> 07:46.860
就是A到B的一个操作

07:46.860 --> 07:47.860
那如果这个

07:47.860 --> 07:49.860
A到B的过程过于频繁

07:49.860 --> 07:51.860
那你说B他能处理得了吗

07:51.860 --> 07:52.860
处理不了

07:52.860 --> 07:53.860
那所以说我就需要

07:53.860 --> 07:54.860
在这个过程中

07:54.860 --> 07:56.860
给他加上一些思想

07:56.860 --> 07:57.860
对吧

07:57.860 --> 08:00.860
尽可能的减少这样的一个次数

08:00.860 --> 08:02.860
尽可能的减少一些次数

08:02.860 --> 08:05.860
这个比喻同学们能听懂吗

08:05.860 --> 08:08.620
尽可能减少次数

08:08.620 --> 08:10.620
以便于说减少B的一个压力

08:10.620 --> 08:12.620
减少B的压力

08:12.620 --> 08:14.620
当然说现在没写代码

08:14.620 --> 08:15.620
只是说给大家举个例子

08:15.620 --> 08:17.620
方便你们去懂

08:17.620 --> 08:18.620
当然了

08:18.620 --> 08:19.620
那你说很多东西

08:19.620 --> 08:21.620
你不能说这个钻牛咬尖

08:21.620 --> 08:22.620
没有意义

08:22.620 --> 08:23.620
目的是你能懂就可以了

08:23.620 --> 08:24.620
你别说车多大

08:24.620 --> 08:25.620
能装多少人

08:25.620 --> 08:26.620
对吧

08:26.620 --> 08:28.620
那就不是咱们这堂课

08:28.620 --> 08:29.620
OK

08:29.620 --> 08:31.620
那这个是咱们说的一个基本思想

08:31.620 --> 08:32.620
基本思想

08:32.620 --> 08:34.620
目的就是干嘛呢

08:34.620 --> 08:39.450
提高我们的利用率对吧

08:39.450 --> 08:40.450
提高利用率

08:40.450 --> 08:42.450
包括我们干嘛呢

08:42.450 --> 08:43.450
减少这样的一个次数

08:43.450 --> 08:45.450
包括减少他的一个压力

08:45.450 --> 08:47.450
也就是减少服务器压力

08:47.450 --> 08:48.450
对的

08:48.450 --> 08:49.450
减少B的压力

08:49.450 --> 08:50.450
OK

08:50.450 --> 08:51.450
来

08:51.450 --> 08:52.450
那么在这

08:52.450 --> 08:53.450
在这

08:53.450 --> 08:54.450
你说那我们什么情况下

08:54.450 --> 08:55.450
会用到房东

08:55.450 --> 08:56.450
什么时候

08:56.450 --> 08:57.450
什么情况下

08:57.450 --> 08:58.450
会用到接流呢

08:58.450 --> 08:59.450
哪有房东

08:59.450 --> 09:00.450
哪有接流

09:00.450 --> 09:01.450
那来看看

09:01.450 --> 09:02.450
来看看

09:02.450 --> 09:04.450
常用的就是一个输入框

09:04.450 --> 09:05.450
因为这里面的场景比较多

09:05.450 --> 09:06.450
咱们举一个

09:06.450 --> 09:08.450
来个输入框

09:08.450 --> 09:09.450
input

09:09.450 --> 09:12.450
包括你现在打开百度也行

09:12.450 --> 09:15.450
包括这个百度他也行

09:15.450 --> 09:16.450
就因为就是搜索

09:16.450 --> 09:17.450
做个搜索

09:17.450 --> 09:18.450
ID

09:18.450 --> 09:20.450
等于mp

09:20.450 --> 09:21.450
然后在这干嘛呢

09:21.450 --> 09:22.450
我们把这个元素呼吁到

09:22.450 --> 09:24.450
无论一个input

09:24.450 --> 09:26.450
document.datElement

09:26.450 --> 09:27.450
ID

09:27.450 --> 09:28.450
什么的

09:28.450 --> 09:29.450
这个mp

09:30.450 --> 09:31.450
干嘛呢

09:31.450 --> 09:33.450
就是每次这个input

09:33.450 --> 09:34.450
被输入的时候

09:34.450 --> 09:35.450
我们需要拿到他里面的

09:35.450 --> 09:37.450
字数或者发送一个请求

09:37.450 --> 09:38.450
发送一个请求

09:38.450 --> 09:39.450
OK

09:39.450 --> 09:40.450
来

09:40.450 --> 09:43.450
input.oninput

09:43.450 --> 09:44.450
绑定一个input的时间

09:44.450 --> 09:45.450
对吧

09:45.450 --> 09:47.450
当他每次这个

09:47.450 --> 09:49.450
当他每次

09:49.450 --> 09:50.450
输入的时候

09:50.450 --> 09:51.450
干嘛呢

09:51.450 --> 09:52.450
去发送一个数据

09:52.450 --> 09:53.450
那在这发送

09:53.450 --> 09:54.450
出好吧

09:54.450 --> 09:56.450
发送数据

09:56.450 --> 09:57.450
那发送啥数据呢

09:57.450 --> 10:00.450
加上我们这个e.target.value

10:00.450 --> 10:03.450
或者是我们的这个input.value

10:03.450 --> 10:04.450
也行

10:04.450 --> 10:05.450
OK

10:06.450 --> 10:08.450
字体放大点

10:08.450 --> 10:10.450
这个我觉得还好了

10:10.450 --> 10:11.450
因为你可能有同学

10:11.450 --> 10:12.450
用手机看

10:12.450 --> 10:13.450
看着可能就有些小

10:13.450 --> 10:14.450
尽可能用电脑看

10:14.450 --> 10:15.450
这个因为代码之后

10:15.450 --> 10:16.450
会越来越多

10:16.450 --> 10:17.450
这个如果放太大的话

10:17.450 --> 10:19.450
这个老师就别帮我操作

10:20.450 --> 10:21.450
如果用电脑看

10:21.450 --> 10:22.450
同学就比较方便了

10:23.450 --> 10:24.450
你说

10:25.450 --> 10:26.450
这个有点大

10:26.450 --> 10:27.450
行了

10:27.450 --> 10:28.450
咱就

10:28.450 --> 10:29.450
这不能再大了

10:29.450 --> 10:30.450
再大的话

10:30.450 --> 10:31.450
再再大不行了

10:31.450 --> 10:32.450
写不了代码了

10:32.450 --> 10:33.450
写不了代码了

10:33.450 --> 10:34.450
OK

10:34.450 --> 10:35.450
那咱们现在通过

10:35.450 --> 10:36.450
这个页面来看一下

10:36.450 --> 10:37.450
这样的一个效果

10:37.450 --> 10:38.450
对吧

10:38.450 --> 10:39.450
所以说很简陋

10:39.450 --> 10:40.450
咱们通过控制台

10:40.450 --> 10:41.450
来测试一下

10:42.450 --> 10:43.450
通过来

10:43.450 --> 10:44.450
控制台来测试一下

10:52.140 --> 10:53.140
来

10:53.140 --> 10:54.140
看这个输出

10:54.140 --> 10:55.140
比方说

10:55.140 --> 10:56.140
我们想干嘛的

10:56.140 --> 10:57.140
搜一个网纸荣耀是吧

10:57.140 --> 11:02.010
搜一个网纸荣耀

11:02.010 --> 11:03.010
搜一个网纸荣耀

11:03.010 --> 11:04.010
大家来看一下

11:04.010 --> 11:05.010
来看一下

11:05.010 --> 11:06.010
我们这里面发送了多少条请求

11:07.010 --> 11:08.010
对吧

11:08.010 --> 11:09.010
如果你每一次按键

11:09.010 --> 11:10.010
每一次按键干嘛

11:10.010 --> 11:11.010
都发一次请求

11:11.010 --> 11:12.010
是不是

11:12.010 --> 11:13.010
你说的啥

11:13.010 --> 11:14.010
它都会往外发

11:14.010 --> 11:15.010
对吧

11:15.010 --> 11:16.010
你说

11:16.010 --> 11:17.010
根据百度搜的引擎

11:17.010 --> 11:18.010
你去往外发数据的时候

11:18.010 --> 11:19.010
百度的服务器

11:19.010 --> 11:20.010
是不是得响应你一个数据

11:21.010 --> 11:22.010
它需要频繁的

11:22.010 --> 11:24.010
做数据库的一个搜索

11:25.010 --> 11:26.010
频繁的做数据库搜索

11:26.010 --> 11:27.010
然而你目的只是说

11:27.010 --> 11:28.010
要网纸荣耀

11:28.010 --> 11:29.010
其他的前面这些

11:29.010 --> 11:30.010
都不需要

11:31.010 --> 11:32.010
都不需要

11:32.010 --> 11:33.010
本身上其实

11:34.010 --> 11:35.010
我们想要的就是

11:35.010 --> 11:36.010
把网纸荣耀这个数据

11:36.010 --> 11:37.010
发送数据来

11:37.010 --> 11:38.010
前面的这些

11:38.010 --> 11:39.010
其实都不重要

11:39.010 --> 11:40.010
对吧

11:40.010 --> 11:41.010
给大家做一个例子

11:41.010 --> 11:43.010
就是让大家看到干嘛

11:43.010 --> 11:44.010
如果

11:44.010 --> 11:45.010
我们每次做一个按键

11:45.010 --> 11:46.010
去发送一个请求

11:46.010 --> 11:48.010
服务器会接受大量的数据

11:48.010 --> 11:49.010
而且是无效的数据

11:49.010 --> 11:50.010
哪个是有效的

11:50.010 --> 11:51.010
其实就是这个网纸荣耀

11:51.010 --> 11:52.010
似乎算是有效的

11:53.010 --> 11:55.010
这样的话怎么办

11:56.010 --> 11:57.010
同学们可以想一下

11:57.010 --> 11:58.010
我们上面这个A大8

11:58.010 --> 11:59.010
和B大8

11:59.010 --> 12:00.010
是处理的

12:00.010 --> 12:01.010
针对于这种情况

12:01.010 --> 12:02.010
它是怎么做的

12:02.010 --> 12:03.010
无论说OK

12:03.010 --> 12:04.010
你这个上去一个人

12:04.010 --> 12:06.010
相当于你键盘进行了一次输入

12:06.010 --> 12:07.010
对吧

12:07.010 --> 12:08.010
那你说这个正常人

12:08.010 --> 12:09.010
对吧 正常人输入

12:09.010 --> 12:10.010
它不会太慢

12:10.010 --> 12:12.010
咱假设0.5秒之内

12:12.010 --> 12:13.010
它不输入了干嘛

12:13.010 --> 12:14.010
发送一个请求

12:14.010 --> 12:16.010
对比A大8的这种情形

12:17.010 --> 12:19.010
对吧 从第一个字符开始

12:19.010 --> 12:23.410
从第一个字母开始

12:23.410 --> 12:24.410
干嘛

12:24.410 --> 12:26.410
从第一个字母开始

12:26.410 --> 12:27.410
这个0.5秒内

12:28.410 --> 12:29.410
对吧

12:29.410 --> 12:30.410
0.5秒内

12:30.410 --> 12:31.410
没有文字输入

12:32.410 --> 12:33.410
对吧

12:33.410 --> 12:38.340
0.5秒内

12:38.340 --> 12:39.340
没有文字输入干嘛

12:39.340 --> 12:40.340
发送请求

12:40.340 --> 12:43.620
对吧

12:43.620 --> 12:44.620
0.5秒内

12:44.620 --> 12:45.620
没有文字输入发送请求

12:45.620 --> 12:46.620
是不是跟

12:46.620 --> 12:47.620
第一个A大8的特点一样

12:47.620 --> 12:48.620
对吧

12:48.620 --> 12:49.620
车上上去一个人

12:49.620 --> 12:50.620
5分钟之内

12:50.620 --> 12:51.620
不上人 咱就走

12:52.620 --> 12:53.620
对吧

12:53.620 --> 12:54.620
我们也可以

12:54.620 --> 12:55.620
是从输入

12:55.620 --> 12:56.620
第一个字母开始

12:56.620 --> 12:57.620
0.5秒之内

12:57.620 --> 12:58.620
没有文字输入

12:58.620 --> 12:59.620
咱们就发送请求

12:59.620 --> 13:00.620
对吧

13:00.620 --> 13:01.620
那接下来干嘛

13:01.620 --> 13:02.620
我们是需要

13:02.620 --> 13:04.620
把这样的一个函数

13:04.620 --> 13:05.620
把这样的函数干嘛

13:05.620 --> 13:08.620
让它具有防抖的特性

13:08.620 --> 13:09.620
那接下来

13:09.620 --> 13:10.620
我们就要实现一个函数

13:10.620 --> 13:11.620
函数干嘛

13:11.620 --> 13:12.620
这样

13:12.620 --> 13:14.620
我们把它单独处理出来

13:14.620 --> 13:15.620
比方说

13:15.620 --> 13:16.620
给它写个名字

13:17.620 --> 13:18.620
就叫阿雅克斯

13:18.620 --> 13:19.620
好吧

13:19.620 --> 13:21.620
就叫阿雅克斯

13:21.620 --> 13:22.620
OK 那这个地方

13:22.620 --> 13:23.620
等于我们这个阿雅克斯

13:23.620 --> 13:25.620
就是当我们这个

13:25.620 --> 13:26.620
音波的被输入的时候

13:26.620 --> 13:28.620
会调用这个阿雅克斯函数

13:28.620 --> 13:29.620
调用阿雅克斯函数

13:29.620 --> 13:30.620
那接下来

13:30.620 --> 13:32.620
我们需要把这个阿雅克斯改一下

13:32.620 --> 13:33.620
改什么呢

13:33.620 --> 13:35.620
它最终也是输出这样的

13:35.620 --> 13:36.620
一个断代码

13:36.620 --> 13:37.620
但是有一个要求

13:37.620 --> 13:38.620
这什么呢

13:38.620 --> 13:39.620
从第一个字母开始

13:39.620 --> 13:40.620
0.5秒后

13:40.620 --> 13:41.620
没有文字输入

13:41.620 --> 13:42.620
它就输出

13:42.620 --> 13:43.620
或者是调用这个函数

13:43.620 --> 13:45.620
否则的话不调用

13:45.620 --> 13:47.620
那我们接下来写的这个函数

13:47.620 --> 13:48.620
就是防抖

13:48.620 --> 13:49.620
对吧

13:49.620 --> 13:50.620
那防抖的这个名称叫什么呢

13:50.620 --> 13:51.620
方身

13:55.620 --> 13:56.620
那这里面有啥呢

13:56.620 --> 13:58.620
第一个是我们要防抖的函数

13:58.620 --> 13:59.620
第二个

13:59.620 --> 14:00.620
是什么呢

14:00.620 --> 14:02.620
我们要等待的时间

14:02.620 --> 14:04.620
这个fn

14:04.620 --> 14:05.620
干嘛呢

14:05.620 --> 14:06.620
是我们这个要

14:06.620 --> 14:08.620
这个让它具有

14:09.620 --> 14:11.620
防抖的函数

14:11.620 --> 14:12.620
wait

14:12.620 --> 14:13.620
是干嘛呢

14:13.620 --> 14:15.620
是我们这个时间间隔

14:15.620 --> 14:17.620
时间间隔

14:18.620 --> 14:20.620
那我们这个实现这个函数

14:20.620 --> 14:21.620
这个函数最终干嘛呢

14:21.620 --> 14:24.620
它会返回一个函数

14:24.620 --> 14:26.620
这个函数可以返回一个函数

14:26.620 --> 14:28.620
那返回的函数怎么样呢

14:28.620 --> 14:30.620
返回的函数

14:30.620 --> 14:31.620
干嘛呢

14:31.620 --> 14:32.620
跟fn

14:32.620 --> 14:37.060
具有同样的功能

14:37.060 --> 14:38.060
功能

14:39.060 --> 14:41.060
但是它差在哪呢

14:41.060 --> 14:42.060
差在哪呢

14:42.060 --> 14:43.060
跟fn有同样的功能

14:43.060 --> 14:47.900
但是具有防抖的特性

14:47.900 --> 14:49.900
防抖的特性

14:50.900 --> 14:51.900
ok

14:51.900 --> 14:53.900
那意味着

14:53.900 --> 14:54.900
这个device

14:54.900 --> 14:55.900
对吧

14:55.900 --> 14:56.900
干嘛呢

14:56.900 --> 14:57.900
它要返回一个函数

14:57.900 --> 14:59.900
要返回一个函数

14:59.900 --> 15:03.470
return

15:03.470 --> 15:05.470
return一个function

15:05.470 --> 15:06.470
方式

15:06.470 --> 15:08.470
也就是说我们这里面干嘛呢

15:08.470 --> 15:10.470
下面有一个word

15:10.470 --> 15:11.470
index

15:11.470 --> 15:13.470
等于device

15:13.470 --> 15:14.470
bounce

15:14.470 --> 15:15.470
什么的

15:15.470 --> 15:16.470
这个index

15:16.470 --> 15:17.470
把函数传进来

15:17.470 --> 15:18.470
然后

15:18.470 --> 15:19.470
500毫秒

15:19.470 --> 15:20.470
对吧 0.5秒

15:20.470 --> 15:21.470
干嘛呢

15:21.470 --> 15:23.470
device返回的

15:23.470 --> 15:25.470
也是一个index函数

15:25.470 --> 15:27.470
它具有index的一个功能

15:27.470 --> 15:28.470
但是呢

15:28.470 --> 15:29.470
是如果5秒之内

15:29.470 --> 15:30.470
不再触发这个函数

15:30.470 --> 15:32.470
这个函数就执行

15:33.470 --> 15:34.470
那ok

15:34.470 --> 15:35.470
返回的这个函数

15:35.470 --> 15:36.470
返回的这个函数干嘛呢

15:36.470 --> 15:37.470
它具有这样的计时功能

15:37.470 --> 15:38.470
对吧

15:38.470 --> 15:39.470
具有计时的一个功能

15:39.470 --> 15:40.470
ok

15:40.470 --> 15:41.470
那在这里面

15:41.470 --> 15:42.470
来

15:43.470 --> 15:44.470
那什么叫5秒之后

15:44.470 --> 15:45.470
那

15:45.470 --> 15:46.470
它需要进行一个记录

15:46.470 --> 15:47.470
每次输入

15:47.470 --> 15:49.470
它都需要

15:49.470 --> 15:50.470
就是每次执行的话

15:50.470 --> 15:51.470
它需要

15:51.470 --> 15:52.470
重新开始电视系对吧

15:52.470 --> 15:53.470
当这个函数

15:53.470 --> 15:54.470
每次执行的时候

15:54.470 --> 15:55.470
都需要开始电视系

15:55.470 --> 15:56.470
ok

15:56.470 --> 15:57.470
那上面干嘛呢

15:57.470 --> 15:58.470
我们生命一个变量

15:58.470 --> 15:59.470
like

15:59.470 --> 16:01.470
这个目的是为什么呢

16:01.470 --> 16:03.470
我们作为一个

16:03.470 --> 16:04.470
定时器id记录器

16:04.470 --> 16:06.470
一边说我们清空id

16:06.470 --> 16:07.470
什么在这用

16:07.470 --> 16:09.470
那我们返回的这个函数干嘛呢

16:09.470 --> 16:10.470
里面可以传参数对吧

16:10.470 --> 16:11.470
那在这里面

16:11.470 --> 16:12.470
利用不定的参数

16:12.470 --> 16:13.470
也就是我们的这个

16:13.470 --> 16:15.470
库尔运算浮

16:15.470 --> 16:16.470
ARG

16:16.470 --> 16:17.470
就是包括说你这个

16:17.470 --> 16:18.470
iPhone可以传肉干的参数

16:18.470 --> 16:19.470
直接传到这里来

16:19.470 --> 16:20.470
传到这里来

16:20.470 --> 16:21.470
然后紧接着

16:21.470 --> 16:22.470
到这里干嘛呢

16:22.470 --> 16:23.470
我们清空一下

16:23.470 --> 16:25.470
这个timeout

16:26.470 --> 16:27.470
我们把这个

16:27.470 --> 16:28.470
原来的这个电视器清掉

16:28.470 --> 16:29.470
因为干嘛呢

16:29.470 --> 16:31.470
每次执行这个

16:31.470 --> 16:32.470
因为这个函数被返回了

16:32.470 --> 16:34.470
因为是每次要执行这个函数

16:34.470 --> 16:35.470
那这个函数

16:35.470 --> 16:36.470
每次执行的时候干嘛呢

16:36.470 --> 16:38.470
先把原来的电视器关掉

16:38.470 --> 16:39.470
然后再干嘛呢

16:39.470 --> 16:40.470
开启一个电视器

16:40.470 --> 16:42.470
timeout

16:44.470 --> 16:45.470
开启一个电视器

16:45.470 --> 16:49.170
开启一个电视器

16:49.170 --> 16:51.170
这是直接写电动函数吧

16:51.170 --> 16:54.180
直接写电动函数吧

16:54.180 --> 16:55.180
然后开启这个电视器

16:55.180 --> 16:57.180
这电视器写多长时间呢

16:57.180 --> 16:59.180
也就是我们的这个

16:59.180 --> 17:00.180
为的时间

17:00.180 --> 17:01.180
为的时间

17:01.180 --> 17:03.180
然后那在这里面

17:03.180 --> 17:04.180
在这里面

17:04.180 --> 17:05.180
那这里面要做什么事呢

17:05.180 --> 17:06.180
就是如果

17:06.180 --> 17:08.180
如果在这个

17:08.180 --> 17:09.180
0.5秒内

17:09.180 --> 17:10.180
没有执行这个函数

17:10.180 --> 17:11.180
干嘛呢

17:11.180 --> 17:12.180
让我们的这个

17:12.180 --> 17:13.180
iPhone执行

17:13.180 --> 17:14.180
那它的参数呢

17:14.180 --> 17:15.180
也就是我们这个

17:15.180 --> 17:16.180
这个方式

17:16.180 --> 17:17.180
这里面传的这个参数

17:17.180 --> 17:18.180
OK

17:18.180 --> 17:19.180
再写进来

17:21.500 --> 17:22.500
目的就是什么呢

17:22.500 --> 17:24.500
什么叫0.5秒内没有执行

17:24.500 --> 17:26.500
0.5秒内没有执行

17:26.500 --> 17:27.500
就是为的时间内

17:27.500 --> 17:29.500
如果没有执行这个函数

17:29.500 --> 17:30.500
你想想

17:30.500 --> 17:31.500
执行这个函数

17:31.500 --> 17:32.500
原来轻的

17:32.500 --> 17:33.500
原来充电电视器

17:33.500 --> 17:34.500
就是被干掉了

17:34.500 --> 17:35.500
对吧

17:35.500 --> 17:36.500
它会新产生一个电视器

17:36.500 --> 17:37.500
那直到说

17:37.500 --> 17:38.500
这个电视器没被干掉

17:38.500 --> 17:40.500
并且成功执行了

17:40.500 --> 17:41.500
里面的函数

17:41.500 --> 17:42.500
才会被做

17:42.500 --> 17:43.500
对吧

17:43.500 --> 17:44.500
才会被执行

17:44.500 --> 17:45.500
那因为这里面

17:45.500 --> 17:46.500
我们不这么写

17:47.500 --> 17:48.500
这个Galax

17:48.500 --> 17:49.500
干嘛呢

17:49.500 --> 17:50.500
给它进行了一个防抖化

17:50.500 --> 17:51.500
然后接下来

17:52.500 --> 17:53.500
Input

17:53.500 --> 17:54.500
OnInput

17:54.500 --> 17:55.500
准什么呢

17:55.500 --> 17:56.500
等于

17:56.500 --> 17:57.500
这个下滑线

17:57.500 --> 17:58.500
Galax

17:58.500 --> 17:59.500
来

17:59.500 --> 18:00.500
这个时候

18:00.500 --> 18:01.500
放心

18:01.500 --> 18:02.500
这个时候

18:02.500 --> 18:03.500
只要写字

18:03.500 --> 18:04.500
不是太慢的

18:04.500 --> 18:05.500
王者

18:05.500 --> 18:06.500
容

18:06.500 --> 18:07.500
要

18:07.500 --> 18:08.500
对吧

18:08.500 --> 18:09.500
在这

18:09.500 --> 18:10.500
所以说丁老师

18:10.500 --> 18:11.500
这个写字比较慢

18:11.500 --> 18:12.500
在这我们看到

18:12.500 --> 18:13.500
它确实发送了

18:13.500 --> 18:14.500
三色数据

18:14.500 --> 18:15.500
因为写的比较慢

18:15.500 --> 18:16.500
当然写的比较快的话

18:16.500 --> 18:17.500
只会发动一次

18:17.500 --> 18:18.500
打字手动

18:18.500 --> 18:19.500
对吧

18:19.500 --> 18:20.500
放动

18:21.500 --> 18:22.500
并没有

18:22.500 --> 18:25.450
来来

18:25.450 --> 18:26.450
王者容要

18:27.450 --> 18:28.450
OK

18:28.450 --> 18:29.450
那这样的话

18:29.450 --> 18:30.450
相对于我们之前来说

18:30.450 --> 18:31.450
相对于我们之前那种

18:31.450 --> 18:32.450
跟手动没关系

18:32.450 --> 18:33.450
跟天天

18:33.450 --> 18:34.450
徐老师瞎说

18:35.450 --> 18:36.450
来来来

18:36.450 --> 18:37.450
那你看

18:37.450 --> 18:38.450
相对于我们之前

18:38.450 --> 18:39.450
仍然打王者容要

18:39.450 --> 18:40.450
这四个字

18:40.450 --> 18:42.450
发送了多少请求

18:42.450 --> 18:43.450
对服务器有多少压力

18:43.450 --> 18:44.450
相反

18:44.450 --> 18:45.450
我们在这对吧

18:45.450 --> 18:46.450
所以说丁老师

18:46.450 --> 18:47.450
手也有点惨

18:47.450 --> 18:48.450
对吧

18:48.450 --> 18:50.450
他也执行了两次

18:50.450 --> 18:51.450
但是很明显

18:51.450 --> 18:52.450
原来

18:52.450 --> 18:54.450
一个字母一次的话

18:54.450 --> 18:55.450
王者容要多少次

18:55.450 --> 18:57.450
小说也得有十次了吧

18:57.450 --> 18:58.450
这下干嘛

18:58.450 --> 18:59.450
减到了两次

18:59.450 --> 19:00.450
对吧

19:00.450 --> 19:01.450
减少到了两次

19:01.450 --> 19:02.450
回过头来

19:02.450 --> 19:04.450
咱们再看看这个函数

19:04.450 --> 19:05.450
这个

19:05.450 --> 19:06.450
但时间太长的话

19:06.450 --> 19:07.450
也不好

19:07.450 --> 19:08.450
因为咱们前端嘛

19:08.450 --> 19:09.450
本身上也是这个

19:09.450 --> 19:10.450
这个这个

19:10.450 --> 19:11.450
用户

19:11.450 --> 19:12.450
这个这个交互设计师

19:12.450 --> 19:13.450
所以说这个时间

19:13.450 --> 19:14.450
完全是

19:14.450 --> 19:15.450
这个这个

19:15.450 --> 19:16.450
评感觉来

19:16.450 --> 19:17.450
当然说你这个

19:17.450 --> 19:18.450
如果是潘金森

19:18.450 --> 19:19.450
一直按这键盘

19:19.450 --> 19:20.450
那就不太行了

19:20.450 --> 19:21.450
其他的都可以

19:21.450 --> 19:22.450
其他都可以

19:22.450 --> 19:23.450
来来来

19:23.450 --> 19:24.450
这个咱咱这个

19:24.450 --> 19:25.450
就不说

19:25.450 --> 19:26.450
官场话了

19:26.450 --> 19:27.450
你别管说

19:27.450 --> 19:28.450
杜依牛牛

19:28.450 --> 19:29.450
听课就完了

19:29.450 --> 19:30.450
对对对

19:30.450 --> 19:31.450
你一直秉承一个原则

19:31.450 --> 19:32.450
就是你来了

19:32.450 --> 19:33.450
你对得起你的时间

19:33.450 --> 19:35.450
你别说对不起丁老师

19:35.450 --> 19:36.450
你跟丁老师没关系

19:36.450 --> 19:37.450
你学到了就是你的

19:37.450 --> 19:38.450
你学不到

19:38.450 --> 19:39.450
丁老师使多大劲

19:39.450 --> 19:40.450
你仍然也不是你的

19:40.450 --> 19:41.450
对

19:41.450 --> 19:42.450
所以说来听课

19:42.450 --> 19:43.450
把自己

19:43.450 --> 19:44.450
把学习放到第一位

19:44.450 --> 19:45.450
我这我听懂了

19:45.450 --> 19:46.450
ok

19:46.450 --> 19:47.450
听不懂对吧

19:47.450 --> 19:48.450
再问老师这是为啥

19:48.450 --> 19:49.450
这个这个

19:49.450 --> 19:50.450
为什么要这么写

19:50.450 --> 19:51.450
你得明白怎么

19:51.450 --> 19:52.450
才能让自己成长

19:52.450 --> 19:54.450
那当然了说这个

19:54.450 --> 19:55.450
这个知识杜依的

19:55.450 --> 19:56.450
这个

19:56.450 --> 19:57.450
这个同学呢

19:57.450 --> 19:58.450
当然欢迎了

19:58.450 --> 19:59.450
这个就就

19:59.450 --> 20:00.450
客套话来听课

20:00.450 --> 20:01.450
这时间也很紧

20:01.450 --> 20:02.450
丁老师也不喜欢

20:02.450 --> 20:03.450
跟你们说太多别的

20:03.450 --> 20:04.450
对有机会

20:04.450 --> 20:06.450
在这个去甲不立滑雪

20:06.450 --> 20:07.450
在这个你们丁老师

20:07.450 --> 20:08.450
带你们去

20:08.450 --> 20:09.450
体验体验这个冰雪之枪

20:09.450 --> 20:10.450
对

20:10.450 --> 20:11.450
现在在你们放个丝花炮

20:11.450 --> 20:12.450
来啊

20:12.450 --> 20:13.450
来看着啊

20:13.450 --> 20:14.450
咱们再回顾一下

20:14.450 --> 20:15.450
咱们再回顾一下

20:15.450 --> 20:16.450
艾克斯上面写的一个寒树

20:16.450 --> 20:17.450
这个寒树干嘛呢

20:17.450 --> 20:18.450
咱们就模拟

20:18.450 --> 20:20.450
他叫一个发送请求

20:20.450 --> 20:21.450
发送请求

20:21.450 --> 20:22.450
那所以说他就是一个输出

20:22.450 --> 20:23.450
输出

20:23.450 --> 20:24.450
那你这个

20:24.450 --> 20:25.450
到底是真发送

20:25.450 --> 20:26.450
还假发送

20:26.450 --> 20:27.450
写一个寒树去代替嘛

20:27.450 --> 20:28.450
对吧

20:28.450 --> 20:29.450
他是一个

20:29.450 --> 20:30.450
寒树

20:30.450 --> 20:31.450
那原来

20:31.450 --> 20:32.450
原来什么样的

20:32.450 --> 20:33.450
原来是没有这个

20:33.450 --> 20:34.450
没有

20:34.450 --> 20:35.450
原来没有他

20:35.450 --> 20:36.450
对吧

20:36.450 --> 20:37.450
原来是这种艾克斯

20:37.450 --> 20:38.450
正常你只要是

20:38.450 --> 20:39.450
只要是输入了

20:39.450 --> 20:40.450
他就会发送

20:40.450 --> 20:41.450
只要输入

20:41.450 --> 20:42.450
他就会发送

20:42.450 --> 20:43.450
那这样的话

20:43.450 --> 20:44.450
会很影响我们这个

20:44.450 --> 20:46.450
因为你每次发送一次

20:46.450 --> 20:47.450
对服务器的压力很大

20:47.450 --> 20:48.450
影响力

20:48.450 --> 20:49.450
对

20:49.450 --> 20:50.450
对对

20:50.450 --> 20:51.450
就是过程是A到B的嘛

20:51.450 --> 20:52.450
但如果说

20:52.450 --> 20:53.450
你

20:53.450 --> 20:54.450
你就想

20:54.450 --> 20:55.450
你车你只拉一个人

20:55.450 --> 20:56.450
你销多少辆车

20:56.450 --> 20:57.450
去拉这些人

20:57.450 --> 20:59.450
并且这些车都开过去了之后

20:59.450 --> 21:00.450
压力那么大

21:00.450 --> 21:02.450
地方能解决这么多车嘛

21:02.450 --> 21:03.450
对吧

21:03.450 --> 21:04.450
那我们为何不让这个

21:04.450 --> 21:05.450
一个车多拉点

21:05.450 --> 21:06.450
过去

21:06.450 --> 21:07.450
对吧

21:07.450 --> 21:08.450
这个车位也能停

21:08.450 --> 21:09.450
人还不少拉

21:09.450 --> 21:10.450
那其实原理就是这样

21:10.450 --> 21:12.450
从第一个字母开始

21:12.450 --> 21:13.450
0.5秒之后

21:13.450 --> 21:14.450
没有文字输入

21:14.450 --> 21:15.450
发送性求

21:15.450 --> 21:16.450
那你看

21:16.450 --> 21:17.450
刚同学说老师

21:17.450 --> 21:18.450
这个

21:18.450 --> 21:19.450
别考虑抄载这个事

21:19.450 --> 21:20.450
我就说了你别

21:20.450 --> 21:21.450
你老

21:21.450 --> 21:23.450
老才刚就不太好玩了

21:23.450 --> 21:24.450
讲这个例子

21:24.450 --> 21:25.450
没人让同学们

21:25.450 --> 21:26.450
更好的理解

21:26.450 --> 21:27.450
你要抬杠的话

21:27.450 --> 21:28.450
算了

21:28.450 --> 21:29.450
咱们这个课

21:29.450 --> 21:30.450
就是都是这个

21:30.450 --> 21:32.450
需要有一定基础的

21:32.450 --> 21:33.450
咱们这是

21:33.450 --> 21:34.450
比式体的一个讲节

21:34.450 --> 21:35.450
能才有比式体的人

21:35.450 --> 21:37.450
几乎几乎把前端的

21:37.450 --> 21:38.450
这种技术几乎都是

21:38.450 --> 21:39.450
我们已经把

21:39.450 --> 21:40.450
大家认为是一种

21:40.450 --> 21:41.450
已经是技术很棒了

21:41.450 --> 21:42.450
或者是已经

21:42.450 --> 21:43.450
石破的这样的

21:43.450 --> 21:44.450
所以说像胡亭海叔

21:44.450 --> 21:45.450
这样的都属于ES6的东西

21:45.450 --> 21:46.450
在这里面

21:46.450 --> 21:47.450
不过做太多的生格

21:47.450 --> 21:48.450
去讲解

21:48.450 --> 21:49.450
对

21:49.450 --> 21:50.450
就不难不及了

21:51.450 --> 21:52.450
这讲了一道题

21:52.450 --> 21:53.450
二分钟

21:53.450 --> 21:54.450
咱这只是讲了个房斗

21:54.450 --> 21:55.450
接流还没说呢

21:55.450 --> 21:56.450
那没事

21:56.450 --> 21:57.450
你们有听不懂的

21:57.450 --> 21:58.450
咱再来一遍

22:00.450 --> 22:02.450
这个35岁后台转前端

22:02.450 --> 22:03.450
这先别说这个事

22:03.450 --> 22:04.450
先听课

22:04.450 --> 22:05.450
现在这个编达一边听课

22:05.450 --> 22:06.450
影响同学们的听课体验

22:06.450 --> 22:07.450
好吧

22:07.450 --> 22:08.450
听听老师一句劝

22:08.450 --> 22:09.450
咱就先把课干懂

22:09.450 --> 22:10.450
这堂课就没白来

22:10.450 --> 22:11.450
是吧

22:11.450 --> 22:12.450
可能讲到10点

22:12.450 --> 22:13.450
对吧 讲到10点半

22:13.450 --> 22:14.450
那你最起码

22:14.450 --> 22:15.450
你对得起你的时间

22:15.450 --> 22:17.450
来 听课

22:17.450 --> 22:18.450
35岁的故事

22:18.450 --> 22:20.450
等我一会跟你讲

22:20.450 --> 22:21.450
对倒听课

22:21.450 --> 22:22.450
因为大家有

22:22.450 --> 22:23.450
我相信很多同学都是

22:23.450 --> 22:24.450
百忙之中

22:24.450 --> 22:26.450
周末明明休息的时间过来听课

22:26.450 --> 22:27.450
我觉得很不错

22:27.450 --> 22:28.450
对 很不错

22:28.450 --> 22:29.450
很棒的

22:29.450 --> 22:30.450
都是为自己

22:30.450 --> 22:31.450
以后有担当的人

22:31.450 --> 22:33.450
用到在这个时间来学习

22:33.450 --> 22:34.450
好了

22:34.450 --> 22:35.450
咱们再看一下这个

22:35.450 --> 22:36.450
房斗函数

22:36.450 --> 22:37.450
来 咱们再看一下

22:37.450 --> 22:38.450
这个房斗函数

22:38.450 --> 22:39.450
那房斗函数干嘛呢

22:39.450 --> 22:41.450
强到是0.5秒

22:41.450 --> 22:42.450
没有文字输入

22:42.450 --> 22:44.450
那返回这个函数

22:44.450 --> 22:45.450
假如说不清楚定时期

22:45.450 --> 22:48.450
是不是0.5秒就执行了这个

22:48.450 --> 22:49.450
对吧

22:49.450 --> 22:51.450
0.5秒是不是就执行了它

22:51.450 --> 22:52.450
对吗

22:52.450 --> 22:53.450
0.5秒

22:53.450 --> 22:54.450
就会执行了它

22:54.450 --> 22:56.450
但是我们说了

22:56.450 --> 22:58.450
0.5秒内没有文字输入

22:58.450 --> 23:00.450
假如说我这个时间

23:00.450 --> 23:01.450
这个函数

23:01.450 --> 23:03.450
第一次和第二次出发中间

23:03.450 --> 23:04.450
空了0.5秒

23:04.450 --> 23:05.450
空了0.5秒

23:05.450 --> 23:07.450
这个定时期才会执行

23:07.450 --> 23:09.450
如果小于0.5秒干嘛呢

23:09.450 --> 23:11.450
就被清除掉了

23:11.450 --> 23:12.450
就被清除掉了

23:12.450 --> 23:13.450
不声明他们怎么清空

23:13.450 --> 23:14.450
上面声明了

23:14.450 --> 23:16.450
而且清除定时期

23:16.450 --> 23:17.450
定时期返回的是啥

23:17.450 --> 23:18.450
返回的是一个定时期ID

23:18.450 --> 23:19.450
对吧

23:19.450 --> 23:20.450
第一个定时期

23:20.450 --> 23:21.450
第二个定时期返回的是个数

23:21.450 --> 23:23.450
拿它就是为了计个数

23:23.450 --> 23:25.450
拿它就是为了计个数

23:25.450 --> 23:26.450
这个啥呢

23:26.450 --> 23:27.450
你开启的第一个定时期

23:27.450 --> 23:28.450
你开启的第二个定时期

23:28.450 --> 23:29.450
对吧

23:29.450 --> 23:30.450
0.5秒之内给它关掉

23:30.450 --> 23:31.450
0.5秒之后

23:31.450 --> 23:33.450
这个函数才会执行

23:34.450 --> 23:35.450
可理话不是

23:35.450 --> 23:36.450
可理话不是

23:36.450 --> 23:38.450
本人上就是一段时间内

23:38.450 --> 23:40.450
把它执行一次

23:40.450 --> 23:42.450
就是这个口误

23:42.450 --> 23:43.450
重说一遍

23:43.450 --> 23:45.450
当你做这件事的最后一次

23:45.450 --> 23:46.450
0.5秒之内

23:46.450 --> 23:47.450
或者一段时间之内

23:47.450 --> 23:49.450
没有再次出发这个事情的时候

23:49.450 --> 23:50.450
这个事情执行

23:51.450 --> 23:52.450
A大8

23:52.450 --> 23:53.450
就A大8的例子就这个

23:53.450 --> 23:54.450
对

23:54.450 --> 23:55.450
车上上去一个人

23:55.450 --> 23:56.450
空车咱指定时不跑

23:56.450 --> 23:57.450
车上有人干嘛呢

23:57.450 --> 23:58.450
并且五分钟不上人

23:58.450 --> 23:59.450
咱就发车

23:59.450 --> 24:00.450
这样的一个例子

24:00.450 --> 24:02.450
一旦上人重新计时

24:02.450 --> 24:03.450
Timer是临时变量

24:03.450 --> 24:04.450
同学们看着

24:04.450 --> 24:05.450
返回的是这个函数

24:05.450 --> 24:07.450
每次都让这个函数执行

24:07.450 --> 24:08.450
这里面是有B包的

24:08.450 --> 24:09.450
这个Timer

24:09.450 --> 24:10.450
每次访问的是它

24:10.450 --> 24:12.450
这里面是有B包的

24:13.450 --> 24:14.450
跟0不0时没关系

24:14.450 --> 24:15.450
对吧

24:15.450 --> 24:16.450
至于说B包啥回事

24:16.450 --> 24:17.450
这个咱在这不说了

24:17.450 --> 24:18.450
要讲的话

24:18.450 --> 24:19.450
今天得干到12点了

24:20.450 --> 24:22.450
所以这个是咱们第一个房斗

24:22.450 --> 24:24.450
那至于说这个类似于房斗

24:24.450 --> 24:26.450
就是我们说的这个

24:26.450 --> 24:27.450
八通请求这个跟它

24:27.450 --> 24:29.450
还有相似的例子吗

24:29.450 --> 24:30.450
有的是啊同学

24:30.450 --> 24:32.450
你看比方说我们的这个

24:32.450 --> 24:33.450
鼠标移动

24:34.450 --> 24:36.450
鼠标移动

24:37.450 --> 24:38.450
包括我们的滚动条

24:40.450 --> 24:41.450
包括我们的滚动条

24:41.450 --> 24:42.450
那你想想

24:42.450 --> 24:43.450
鼠标你动一下

24:43.450 --> 24:45.450
然后你动一下

24:45.450 --> 24:47.450
你要执行一千行代码

24:47.450 --> 24:48.450
你想你连续动一面

24:48.450 --> 24:49.450
就会变得卡顿

24:50.450 --> 24:51.450
能懂吗

24:51.450 --> 24:52.450
但因为鼠标只要动的话

24:52.450 --> 24:54.450
它就会触发这个鼠标的

24:54.450 --> 24:55.450
滚动移动事件

24:55.450 --> 24:56.450
而且这个移动事件

24:56.450 --> 24:58.450
对应的步骤还太多

24:58.450 --> 24:59.450
对吧

24:59.450 --> 25:00.450
GS本来单线成的

25:00.450 --> 25:02.450
你移动一下就要执行一千行代码

25:02.450 --> 25:03.450
你动第二下又执行一千行

25:03.450 --> 25:04.450
但你第一行

25:04.450 --> 25:05.450
第一个一千行代码

25:05.450 --> 25:06.450
没执行完

25:06.450 --> 25:07.450
你又动了一下

25:07.450 --> 25:08.450
对吧

25:08.450 --> 25:09.450
所以说这个信用站

25:09.450 --> 25:10.450
会积压越来越多的代码

25:10.450 --> 25:11.450
以至于说一面卡顿

25:11.450 --> 25:12.450
那相反

25:12.450 --> 25:13.450
那你看啊

25:13.450 --> 25:14.450
只要我不动

25:14.450 --> 25:16.450
我最终到哪停下来之后

25:16.450 --> 25:17.450
它只需要给我记录一个

25:17.450 --> 25:19.450
出指点和终指点的一个位置

25:19.450 --> 25:20.450
就可以了

25:20.450 --> 25:21.450
只需要记录两次

25:21.450 --> 25:22.450
而不是说你一直动

25:22.450 --> 25:26.450
它一直处理

25:26.450 --> 25:29.820
如果达第一题的时候写这样的

25:29.820 --> 25:30.820
例子可以吗

25:30.820 --> 25:31.820
可以 完全没问题

25:31.820 --> 25:33.820
这个是S6的困染运算符

25:33.820 --> 25:35.820
S6的困染运算符

25:35.820 --> 25:37.820
你要跟面试官能说明白

25:37.820 --> 25:38.820
啥是房董啥是节流

25:38.820 --> 25:39.820
并且写个例子

25:39.820 --> 25:40.820
就完全OK了

25:40.820 --> 25:42.820
如果在这说这么多

25:42.820 --> 25:43.820
其实也兼顾了一些

25:43.820 --> 25:44.820
没有同学

25:44.820 --> 25:45.820
没有基础的同学

25:45.820 --> 25:46.820
过来干嘛呢

25:46.820 --> 25:47.820
想听代码看不懂

25:47.820 --> 25:48.820
能听懂思想也是好的

25:48.820 --> 25:50.820
丁老师说话点是这个

25:50.820 --> 25:51.820
对 先把思想听懂了

25:51.820 --> 25:52.820
所以对以后的这个情人代码

25:52.820 --> 25:53.820
落成落实生代码

25:53.820 --> 25:54.820
也是个前提

25:54.820 --> 25:55.820
对吧 哪怕说老师

25:55.820 --> 25:56.820
我前端没有

25:56.820 --> 25:57.820
我是过来捧个热场

25:57.820 --> 25:59.820
你把这个A大8 B大8的故事听懂了

25:59.820 --> 26:00.820
这咱们说句没白来 知道吗

26:00.820 --> 26:01.820
关于达文字描述的

26:01.820 --> 26:02.820
一般在一口事

26:02.820 --> 26:03.820
就面试过那种

26:03.820 --> 26:04.820
如果不让你落实到

26:04.820 --> 26:05.820
这个代码层面的话

26:05.820 --> 26:06.820
你用逻辑

26:06.820 --> 26:08.820
这种故事的方式

26:08.820 --> 26:09.820
给他描述也可以

26:09.820 --> 26:10.820
对 因为你想想

26:10.820 --> 26:11.820
你想想

26:11.820 --> 26:12.820
你既然都能用一个故事

26:12.820 --> 26:13.820
去描述给他

26:13.820 --> 26:14.820
说明你真的懂

26:14.820 --> 26:15.820
对

26:15.820 --> 26:16.820
而不是硬生生的

26:16.820 --> 26:18.820
去给你讲一个这个逻辑

26:18.820 --> 26:19.820
这是ES6的

26:19.820 --> 26:20.820
这个不定参数

26:20.820 --> 26:21.820
不定参数

26:21.820 --> 26:24.820
相当于类似于我们的arguments

26:24.820 --> 26:25.820
那咱们同学

26:25.820 --> 26:27.820
是一会儿想不完了

26:27.820 --> 26:28.820
这问题

26:28.820 --> 26:29.820
这问题

26:29.820 --> 26:30.820
咱们还二百多人

26:30.820 --> 26:31.820
没都来

26:31.820 --> 26:32.820
要都来的话

26:32.820 --> 26:33.820
我感觉今天得通宵了

26:33.820 --> 26:34.820
知道吗

26:34.820 --> 26:35.820
那说第二个

26:35.820 --> 26:37.820
黄董 第二个干嘛呢 接流

26:37.820 --> 26:43.630
怎么等着第七题呢

26:43.630 --> 26:45.630
这才第一题

26:45.630 --> 26:47.630
没事 没关系

26:47.630 --> 26:48.630
好 慢慢来

26:48.630 --> 26:50.630
大可不必

26:50.630 --> 26:52.630
接流 接流

26:52.630 --> 26:54.630
接流跟黄董差不多

26:54.630 --> 26:55.630
干嘛呢

26:55.630 --> 26:56.630
也有一个函数

26:56.630 --> 26:57.630
方身

26:57.630 --> 27:00.630
这个

27:00.630 --> 27:02.630
THRO

27:02.630 --> 27:03.630
DTLE

27:03.630 --> 27:04.630
同样

27:04.630 --> 27:06.630
一个i分 一个w

27:06.630 --> 27:08.630
来

27:08.630 --> 27:10.630
这个上面还是拿这个利润来说

27:10.630 --> 27:12.630
车上上去一个人

27:12.630 --> 27:13.630
上去一个人什么

27:13.630 --> 27:15.630
相当于这个函数执行完之后

27:15.630 --> 27:17.630
五分钟就发车

27:17.630 --> 27:19.630
就是两秒之内 对吧

27:19.630 --> 27:20.630
只要这个事开始了

27:20.630 --> 27:21.630
两秒之后

27:21.630 --> 27:23.630
这个函数就会执行

27:23.630 --> 27:25.630
这样的一个东西

27:25.630 --> 27:26.630
它其实也是需要的

27:26.630 --> 27:28.630
也是需要的

27:28.630 --> 27:29.630
干嘛呢

27:29.630 --> 27:31.630
还是这个i分

27:31.630 --> 27:32.630
干嘛呢

27:32.630 --> 27:34.630
执行一次

27:34.630 --> 27:35.630
执行一次

27:35.630 --> 27:37.630
执行一次怎么着呢

27:37.630 --> 27:40.630
等待w的时间

27:40.630 --> 27:43.630
后再执行

27:43.630 --> 27:44.630
i分

27:44.630 --> 27:45.630
对不对

27:45.630 --> 27:46.630
不是i分执行一次

27:46.630 --> 27:48.630
i分要执行的时候

27:48.630 --> 27:50.630
i分要执行的时候

27:50.630 --> 27:51.630
干嘛呢

27:51.630 --> 27:52.630
等待w的时间之后

27:52.630 --> 27:54.630
再执行i分

27:54.630 --> 27:57.940
然后在这 同样

27:57.940 --> 28:00.940
light一个time

28:00.940 --> 28:01.940
等一个空的

28:01.940 --> 28:02.940
也是需要定时期

28:02.940 --> 28:05.940
因为它都是一个延迟执行

28:05.940 --> 28:06.940
延迟执行

28:06.940 --> 28:08.940
换回一个

28:08.940 --> 28:10.940
brg

28:10.940 --> 28:11.940
干嘛呢

28:11.940 --> 28:13.940
在这里面

28:13.940 --> 28:15.940
判断一下

28:15.940 --> 28:17.940
如果有time

28:17.940 --> 28:19.940
如果有time干嘛呢

28:19.940 --> 28:22.940
有time就不管它

28:22.940 --> 28:23.940
有time就不管它

28:23.940 --> 28:25.940
因为它还在计时当中

28:25.940 --> 28:26.940
有time就不管

28:26.940 --> 28:28.940
没有time干嘛呢

28:28.940 --> 28:31.940
让这个time等于一个定时期

28:31.940 --> 28:34.940
set timeout

28:34.940 --> 28:35.940
等于一个定时期

28:35.940 --> 28:37.940
那在这里面

28:37.940 --> 28:39.940
在这个电视器里面干嘛呢

28:39.940 --> 28:41.940
让我这个

28:41.940 --> 28:44.940
i分

28:44.940 --> 28:47.940
i分执行

28:47.940 --> 28:48.940
让i分执行

28:48.940 --> 28:50.940
同时是多少时间呢

28:50.940 --> 28:52.940
这个w的时间

28:52.940 --> 28:54.940
看着 这句话很关键

28:54.940 --> 28:55.940
这句话很关键

28:55.940 --> 28:56.940
干嘛呢

28:56.940 --> 28:58.940
如果没有开启定时期

28:58.940 --> 29:04.980
那就开启一个

29:04.980 --> 29:05.980
如果没有开启定时期

29:05.980 --> 29:07.980
咱就开启一个

29:07.980 --> 29:08.980
如果有

29:08.980 --> 29:09.980
如果有

29:09.980 --> 29:10.980
那OK

29:10.980 --> 29:11.980
那就啥都不管

29:11.980 --> 29:12.980
不管

29:12.980 --> 29:13.980
等着这个定时期执行就完了

29:13.980 --> 29:14.980
那OK

29:14.980 --> 29:15.980
那还是这样

29:15.980 --> 29:16.980
那这个呢

29:16.980 --> 29:17.980
x就

29:17.980 --> 29:19.980
等于一个

29:19.980 --> 29:23.480
这个怎么读

29:23.480 --> 29:24.480
我还真不会呀

29:24.480 --> 29:25.480
看着

29:25.480 --> 29:26.480
这个是啥意思呢

29:26.480 --> 29:27.480
这个是

29:27.480 --> 29:29.480
每0.5秒发送一次

29:29.480 --> 29:30.480
每0.5秒

29:30.480 --> 29:31.480
或者这改成2秒发送

29:31.480 --> 29:35.500
2秒发送一次

29:35.500 --> 29:36.500
对吧

29:36.500 --> 29:37.500
还是

29:37.500 --> 29:38.500
然后我们在输入的时候

29:38.500 --> 29:41.500
网 耳 容 药

29:41.500 --> 29:42.500
对吧

29:42.500 --> 29:44.500
它其实是2秒发送了一次

29:44.500 --> 29:47.500
2秒发送了一次

29:47.500 --> 29:54.580
看着啊

29:54.580 --> 29:55.580
对

29:55.580 --> 29:56.580
因为这个

29:56.580 --> 29:57.580
这个是2秒完成了这一次

29:57.580 --> 29:59.580
如果你再继续输入的话

29:59.580 --> 30:04.200
是可以的

30:04.200 --> 30:05.200
等会啊

30:05.200 --> 30:06.200
这点少了一项

30:06.200 --> 30:07.200
少了一项 我说的不对

30:07.200 --> 30:08.200
就是

30:08.200 --> 30:09.200
我们干嘛呢

30:09.200 --> 30:10.200
因为

30:10.200 --> 30:11.200
如果没有

30:11.200 --> 30:13.200
定时期重置的功能的话

30:13.200 --> 30:14.200
它就没办法

30:14.200 --> 30:15.200
再开启下次定时期了

30:15.200 --> 30:21.930
来来来

30:21.930 --> 30:22.930
对吧

30:22.930 --> 30:23.930
干嘛呢

30:23.930 --> 30:24.930
每隔2秒发送

30:24.930 --> 30:26.930
每隔2秒发送一次

30:26.930 --> 30:27.930
每隔2秒发送一次

30:27.930 --> 30:28.930
这个呢也是为了

30:28.930 --> 30:30.930
节约我们的这个

30:30.930 --> 30:32.930
发送的一个次数

30:32.930 --> 30:34.930
减少这个浏览器

30:34.930 --> 30:36.930
这个浮气的对于

30:36.930 --> 30:40.300
想要的一个压力

30:40.300 --> 30:42.300
就是你

30:42.300 --> 30:43.300
这个对于说

30:43.300 --> 30:44.300
这个截流

30:44.300 --> 30:45.300
你用这个

30:45.300 --> 30:46.300
这个时间处理也行

30:46.300 --> 30:47.300
你用的Date对象也行

30:47.300 --> 30:48.300
你用这个定时期

30:48.300 --> 30:49.300
也可以啊

30:49.300 --> 30:50.300
都行

30:50.300 --> 30:51.300
都行

30:51.300 --> 30:52.300
包括这里面

30:52.300 --> 30:53.300
对吧

30:53.300 --> 30:54.300
有的人说有类似问题

30:54.300 --> 30:55.300
有类的问题干啥

30:55.300 --> 30:56.300
当然这里面

30:56.300 --> 30:57.300
咱也没写的意思

30:57.300 --> 30:58.300
包括说这里面

30:58.300 --> 30:59.300
也不需要

30:59.300 --> 31:00.300
去靠谁

31:00.300 --> 31:01.300
需要opless

31:01.300 --> 31:02.300
跟那个没有关系

31:02.300 --> 31:03.300
跟那个没有关系

31:03.300 --> 31:04.300
无论是这里面

31:04.300 --> 31:05.300
上面的这个

31:05.300 --> 31:06.300
这个防斗

31:06.300 --> 31:08.300
还是说下面的这个截流

31:08.300 --> 31:09.300
目的都是为了让我们这个代码

31:09.300 --> 31:10.300
干嘛呢

31:10.300 --> 31:11.300
延迟行

31:11.300 --> 31:12.300
而且

31:12.300 --> 31:13.300
增加我们代码的

31:13.300 --> 31:14.300
一个支撑效率

31:14.300 --> 31:15.300
一边说

31:15.300 --> 31:17.300
这个都是从A到B的一个过程

31:17.300 --> 31:19.300
减少B的一个压力

31:21.300 --> 31:23.300
咋感觉听不懂呢

31:24.300 --> 31:25.300
正常

31:25.300 --> 31:26.300
正常

31:26.300 --> 31:28.300
你说截流在哪里用的比较多

31:28.300 --> 31:29.300
这个完全是

31:29.300 --> 31:31.300
看具体的一个拥有情况

31:31.300 --> 31:33.300
你无论说这个

31:33.300 --> 31:34.300
其实你说

31:34.300 --> 31:36.300
这个截流用在这个输入框这

31:36.300 --> 31:37.300
并不合适

31:37.300 --> 31:38.300
但是他可以用在滚动条

31:38.300 --> 31:40.300
当滚动条滚动的时候

31:40.300 --> 31:41.300
可以用

31:41.300 --> 31:43.300
当滚动条滚动的时候可以用

31:43.300 --> 31:44.300
这个月王同学

31:44.300 --> 31:45.300
我不知道你基础怎么样

31:45.300 --> 31:47.300
我不知道你基础怎么样

31:47.300 --> 31:49.300
包括来听咱们这堂课的时候

31:49.300 --> 31:50.300
跟同学说了

31:50.300 --> 31:52.300
这个基础只能要好一点

31:52.300 --> 31:53.300
你包括这里面

31:53.300 --> 31:54.300
写的都是ES6的语法

31:54.300 --> 31:55.300
你包括这里面

31:55.300 --> 31:56.300
这个

31:56.300 --> 31:57.300
酷然运算符

31:58.300 --> 31:59.300
对 虽然很多

31:59.300 --> 32:00.300
所以说刚才说的

32:00.300 --> 32:01.300
这次

32:01.300 --> 32:03.300
这课是逍遥基础同学来听

32:03.300 --> 32:04.300
下一个

32:07.300 --> 32:08.300
就是包括

32:09.300 --> 32:10.300
咱们的轮目图

32:10.300 --> 32:12.300
或者说我们一面滚动

32:12.300 --> 32:13.300
需要这个截流比较多

32:13.300 --> 32:14.300
因为刚才咱们

32:14.300 --> 32:15.300
用的输入框举例子

32:15.300 --> 32:17.300
在这咱就不多说了

32:17.300 --> 32:18.300
因为要一直举例子

32:18.300 --> 32:19.300
举不完了

32:19.300 --> 32:20.300
好吧

32:20.300 --> 32:21.300
第一题就这样

32:22.300 --> 32:23.300
一大把

32:23.300 --> 32:24.300
你这样的同学

32:24.300 --> 32:25.300
关于戴马在看的话

32:25.300 --> 32:26.300
咱们课后

32:26.300 --> 32:27.300
到时候把这个圆满

32:27.300 --> 32:28.300
我发给大家

32:28.300 --> 32:29.300
没事

32:29.300 --> 32:30.300
不要着急

32:30.300 --> 32:31.300
同学们 这样

32:31.300 --> 32:32.300
你学习

32:32.300 --> 32:33.300
我们应该是一个

32:33.300 --> 32:34.300
螺旋式的学习

32:34.300 --> 32:35.300
你知道吗

32:35.300 --> 32:36.300
螺旋式的学习

32:36.300 --> 32:37.300
现在点老师您讲完之后

32:37.300 --> 32:38.300
你脑子有些吗

32:38.300 --> 32:39.300
这个可以承认

32:39.300 --> 32:40.300
必须接受

32:40.300 --> 32:41.300
他干嘛呢

32:41.300 --> 32:42.300
往后先学着

32:42.300 --> 32:43.300
没准有某个时间课

32:43.300 --> 32:44.300
你先懂了

32:44.300 --> 32:45.300
包括说咱们先把

32:45.300 --> 32:46.300
所有题讲完

32:46.300 --> 32:47.300
解决决大多数同学的问题之后

32:47.300 --> 32:48.300
哪再有疑问

32:48.300 --> 32:49.300
对吧

32:49.300 --> 32:50.300
并且课后还没想通

32:50.300 --> 32:52.300
咱们讲完之后再问

32:52.300 --> 32:53.300
好吧

32:53.300 --> 32:54.300
咱们不耽误

32:54.300 --> 32:55.300
同学们的这个私下

32:55.300 --> 32:56.300
这个时间

32:56.300 --> 32:57.300
好吧

32:57.300 --> 32:59.300
OK 这是咱第一题

32:59.300 --> 33:00.300
第一题

33:00.300 --> 33:01.300
如果第一题停着困难的话

33:01.300 --> 33:02.300
第二题会更难

33:02.300 --> 33:06.640
就是哪行戴马是

33:06.640 --> 33:08.640
上去一个人之后

33:08.640 --> 33:09.640
所谓的上去一个人

33:09.640 --> 33:11.640
就是这个函数开始执行

33:11.640 --> 33:13.640
这个返回的函数开始执行

33:13.640 --> 33:15.640
返回的函数开始执行

33:15.640 --> 33:16.640
是上去第一个人

33:16.640 --> 33:17.640
就是你这个

33:17.640 --> 33:18.640
他打第一字的时候

33:18.640 --> 33:20.640
就已经上去了

33:20.640 --> 33:21.640
对 返回

33:21.640 --> 33:25.210
就是这个返回函数

33:25.210 --> 33:27.210
执行相当于这个

33:27.210 --> 33:28.210
得上人

33:28.210 --> 33:32.820
来 上人

33:32.820 --> 33:34.820
然后这个

33:34.820 --> 33:35.820
到时间

33:35.820 --> 33:36.820
对吧

33:36.820 --> 33:37.820
到时间发车

33:37.820 --> 33:38.820
这个wait嘛

33:38.820 --> 33:39.820
开冒的

33:39.820 --> 33:40.820
到时间发车

33:40.820 --> 33:45.930
而且你再想想

33:45.930 --> 33:46.930
你再想想这个

33:46.930 --> 33:47.930
五分钟之后发车

33:47.930 --> 33:49.930
上去第一个人

33:49.930 --> 33:50.930
上去第一个人之后

33:50.930 --> 33:51.930
五分钟发车

33:51.930 --> 33:52.930
OK 那这个函数执行

33:52.930 --> 33:53.930
干嘛呢

33:53.930 --> 33:54.930
我就这个并且

33:54.930 --> 33:55.930
这电视器是空的时候

33:55.930 --> 33:56.930
我开起电视器

33:56.930 --> 33:58.930
五分钟之后执行

33:58.930 --> 34:00.930
我们要传到这个函数

34:01.930 --> 34:03.930
OK 这是咱们第一题

34:05.930 --> 34:06.930
来 都在这里面

34:06.930 --> 34:07.930
都在这里面

34:07.930 --> 34:08.930
咱们之后给大家想

34:08.930 --> 34:09.930
然后第二题

34:09.930 --> 34:11.930
第二题的话就比较难了

34:11.930 --> 34:12.930
第二题就比较难了

34:12.930 --> 34:13.930
可能说

34:13.930 --> 34:14.930
这个时间

34:14.930 --> 34:16.930
会日常回到地狱

34:16.930 --> 34:17.930
来

34:17.930 --> 34:18.930
第二题呢

34:18.930 --> 34:20.930
咱也别写什么

34:20.930 --> 34:22.930
这叫浏览期任务

34:22.930 --> 34:27.520
第二题什么来着

34:27.520 --> 34:29.520
给他们看一下题

34:30.520 --> 34:31.520
来

34:35.520 --> 34:36.520
这个题

34:36.520 --> 34:37.520
挺难的

34:37.520 --> 34:39.520
来 这道题绝对不是那么简单的

34:39.520 --> 34:40.520
而且今天呢

34:40.520 --> 34:41.520
会给大家讲这个CO的

34:41.520 --> 34:42.520
全都是赶货

34:42.520 --> 34:44.520
全都是赶货

34:44.520 --> 34:45.520
今天全是赶货

34:45.520 --> 34:46.520
就是

34:46.520 --> 34:48.520
你说一个听不懂

34:48.520 --> 34:50.520
你给丁老师弄得很懵

34:50.520 --> 34:51.520
我不知道是我讲的

34:51.520 --> 34:52.520
我说的字你听不懂

34:52.520 --> 34:53.520
还说

34:53.520 --> 34:55.520
是你前端基础不扎实

34:55.520 --> 34:56.520
听不懂

34:56.520 --> 34:58.520
可能还没有学到那个点

34:58.520 --> 34:59.520
先把基础打好

34:59.520 --> 35:00.520
再回来听

35:00.520 --> 35:01.520
别着急

35:01.520 --> 35:03.520
或者先听那个思想就可以

35:03.520 --> 35:04.520
比如说A大巴 B大巴

35:04.520 --> 35:06.520
你能把这个搞明白就可以了

35:06.520 --> 35:08.520
若是到代码层面

35:08.520 --> 35:09.520
你能听得懂多少就听得懂多少

35:09.520 --> 35:10.520
对不对

35:10.520 --> 35:11.520
那你

35:11.520 --> 35:13.520
看过学工签字

35:13.520 --> 35:14.520
你听不懂基础

35:14.520 --> 35:15.520
不着急

35:15.520 --> 35:16.520
听思路

35:16.520 --> 35:18.520
这个浏览期任务也是一样

35:18.520 --> 35:19.520
先听思路

35:19.520 --> 35:20.520
来 同理们

35:20.520 --> 35:21.520
第二题

35:21.520 --> 35:22.520
第一题先放哪

35:22.520 --> 35:23.520
听不懂先放哪

35:23.520 --> 35:24.520
咱们之后再给大家说一遍

35:24.520 --> 35:25.520
这都不是事

35:25.520 --> 35:26.520
来 第二题

35:26.520 --> 35:27.520
今天先来听第二题

35:27.520 --> 35:28.520
第一题没听懂我放哪

35:28.520 --> 35:29.520
都不要再想了

35:29.520 --> 35:30.520
来 跟我

35:30.520 --> 35:32.520
第二个叫浏览期任务

35:32.520 --> 35:33.520
浏览期任务

35:33.520 --> 35:34.520
浏览期任务

35:34.520 --> 35:35.520
这里面有个啥呢

35:35.520 --> 35:37.520
叫Promise

35:37.520 --> 35:39.520
有一个Satemount

35:39.520 --> 35:40.520
对吧 还有一个什么

35:40.520 --> 35:41.520
Think of Wait

35:41.520 --> 35:44.520
这俩好像没咋用我 是吧

35:44.520 --> 35:45.520
Wait

35:45.520 --> 35:46.520
OK

35:46.520 --> 35:47.520
而且丁老师这里面

35:47.520 --> 35:48.520
给大家起了个名字

35:48.520 --> 35:50.520
叫浏览期任务

35:50.520 --> 35:51.520
任务

35:51.520 --> 35:52.520
啥叫任务

35:52.520 --> 35:54.520
上周听微客

35:54.520 --> 35:55.520
就是咱这种

35:55.520 --> 35:56.520
这周内听微客

35:56.520 --> 35:57.520
我给大家讲过

35:57.520 --> 35:58.520
定时期这个课

35:58.520 --> 36:00.520
咱们强调了一个任务

36:00.520 --> 36:01.520
在浏览期里面任务

36:01.520 --> 36:03.520
是由主要任务跟次要任务的

36:03.520 --> 36:04.520
对吧

36:04.520 --> 36:05.520
如果听过微客的同学

36:05.520 --> 36:06.520
是知道的

36:06.520 --> 36:10.020
主要任务和次要任务

36:10.020 --> 36:12.020
主要任务和次要任务

36:12.020 --> 36:13.020
对吧

36:13.020 --> 36:14.020
你先听我说

36:14.020 --> 36:15.020
你先别问问题

36:15.020 --> 36:16.020
先听我说

36:16.020 --> 36:18.020
包括还是零几数的同学

36:18.020 --> 36:19.020
把我前面那个例子听懂

36:19.020 --> 36:20.020
就好了

36:20.020 --> 36:21.020
我不知道同学们

36:21.020 --> 36:22.020
读没读过一本书

36:22.020 --> 36:23.020
啥书呢

36:23.020 --> 36:26.020
叫这个高校人士的

36:27.020 --> 36:29.020
高校人士的

36:29.020 --> 36:30.020
习大习惯

36:30.020 --> 36:35.420
习惯

36:35.420 --> 36:36.420
怎么呢

36:36.420 --> 36:38.420
里面我记得是第七章

36:38.420 --> 36:39.420
还是第八章

36:39.420 --> 36:40.420
有一个标题叫做

36:40.420 --> 36:41.420
钥匙第一

36:41.420 --> 36:44.980
钥匙第一

36:44.980 --> 36:45.980
来 钥匙第一

36:45.980 --> 36:47.980
那啥叫钥匙第一呢

36:47.980 --> 36:48.980
先把这个浏览期任务

36:48.980 --> 36:49.980
先放一下

36:49.980 --> 36:50.980
先说这个

36:50.980 --> 36:51.980
高校人士的

36:51.980 --> 36:52.980
习大习惯

36:52.980 --> 36:53.980
钥匙第一

36:53.980 --> 36:54.980
啥叫钥匙第一呢

36:54.980 --> 36:55.980
人生在世

36:55.980 --> 36:56.980
要经历很多事情

36:56.980 --> 36:57.980
而且很多事情都要决策

36:57.980 --> 36:58.980
那这样的话

36:58.980 --> 36:59.980
我就需要

36:59.980 --> 37:00.980
根据某种程度

37:00.980 --> 37:01.980
对这些事情进行分类

37:01.980 --> 37:02.980
什么的

37:02.980 --> 37:03.980
我们常说的

37:03.980 --> 37:04.980
诶 四条

37:04.980 --> 37:06.980
轻重缓急 对吗

37:06.980 --> 37:07.980
诶 轻重缓急

37:07.980 --> 37:09.980
这个事情重要急

37:09.980 --> 37:10.980
诶 重要紧急

37:10.980 --> 37:11.980
重要 但不紧急

37:11.980 --> 37:12.980
对吧

37:12.980 --> 37:13.980
不重要 但紧急

37:13.980 --> 37:15.980
但不重要 又不紧急

37:15.980 --> 37:16.980
对吧 要分成

37:16.980 --> 37:17.980
这样的四个任务

37:17.980 --> 37:21.620
诶 重要紧急

37:21.620 --> 37:23.620
那 重要 但不紧急

37:23.620 --> 37:29.230
那 然后还有这个

37:29.230 --> 37:30.230
紧急 但不重要

37:30.230 --> 37:36.190
然后还有一个是

37:36.190 --> 37:38.190
既不紧急 也不重要

37:38.190 --> 37:41.660
我重要不紧急

37:41.660 --> 37:42.660
哈哈哈

37:42.660 --> 37:43.660
说明你们丁老师

37:43.660 --> 37:44.660
对一个一道题

37:44.660 --> 37:45.660
定义囚禁 是吧

37:45.660 --> 37:46.660
来来来

37:46.660 --> 37:48.660
来来 就是你听到这就可以了

37:48.660 --> 37:49.660
干什么呢

37:49.660 --> 37:50.660
我们把任务分类完之后

37:50.660 --> 37:51.660
干嘛呢

37:51.660 --> 37:52.660
是不是把这个任务

37:52.660 --> 37:53.660
一旦分类之后

37:53.660 --> 37:54.660
我就知道我先做什么

37:54.660 --> 37:55.660
再做什么

37:55.660 --> 37:56.660
再再做什么 对吧

37:56.660 --> 37:58.660
那这个任务分类

37:58.660 --> 37:59.660
就是决定了

37:59.660 --> 38:01.660
我要做事的一个顺序

38:01.660 --> 38:02.660
对吗

38:02.660 --> 38:03.660
对吧 我把事情

38:03.660 --> 38:04.660
一旦分完类

38:04.660 --> 38:05.660
先做 重要紧急的

38:05.660 --> 38:06.660
把这个事做完之后

38:06.660 --> 38:07.660
再做 重要不紧急的

38:07.660 --> 38:08.660
以便于说

38:08.660 --> 38:09.660
别把重要不紧急的

38:09.660 --> 38:10.660
变成重要紧急的

38:10.660 --> 38:11.660
然后再做紧急不重要的

38:11.660 --> 38:12.660
最后再做那个

38:12.660 --> 38:13.660
不紧急不重要的

38:13.660 --> 38:15.660
这个强度是什么呢

38:15.660 --> 38:16.660
分类

38:16.660 --> 38:17.660
然后他们会有一个

38:17.660 --> 38:19.660
执行顺序 对吧

38:19.660 --> 38:22.660
分类 执行顺序

38:22.660 --> 38:23.660
不同的类目

38:23.660 --> 38:34.840
有不同的执行顺序

38:34.840 --> 38:35.840
对吧

38:35.840 --> 38:36.840
这个

38:36.840 --> 38:37.840
好像是这个人

38:37.840 --> 38:38.840
但是忘了

38:38.840 --> 38:40.840
人都会把

38:40.840 --> 38:41.840
我们生活中的

38:41.840 --> 38:42.840
所事分成

38:42.840 --> 38:43.840
若干的任务

38:43.840 --> 38:44.840
包括跟他们的

38:44.840 --> 38:45.840
紧急程度

38:45.840 --> 38:46.840
轻重缓急

38:46.840 --> 38:47.840
然后我们会

38:47.840 --> 38:48.840
按照这四块

38:48.840 --> 38:49.840
一次执行

38:49.840 --> 38:50.840
那同样

38:50.840 --> 38:51.840
浏览器

38:51.840 --> 38:53.840
也有这样的一个机制

38:53.840 --> 38:54.840
浏览器

38:54.840 --> 38:55.840
也有这样的机制

38:55.840 --> 38:56.840
对于浏览器里面

38:56.840 --> 38:57.840
也有什么的

38:57.840 --> 39:00.840
主要任务

39:00.840 --> 39:02.840
主任务

39:02.840 --> 39:03.840
对吧

39:03.840 --> 39:07.050
次要任务

39:07.050 --> 39:08.050
比次要任务

39:08.050 --> 39:09.050
还次要的任务

39:09.050 --> 39:11.420
这是大白话了

39:11.420 --> 39:12.420
当然

39:12.420 --> 39:13.420
他们有专门的名字

39:13.420 --> 39:14.420
比次要任务

39:14.420 --> 39:18.120
还次要的任务

39:18.120 --> 39:19.120
OK

39:19.120 --> 39:20.120
那意味着

39:20.120 --> 39:21.120
在浏览器里面

39:21.120 --> 39:23.120
分成这三个层次去执行

39:23.120 --> 39:24.120
对吧

39:24.120 --> 39:25.120
也就是我们的

39:25.120 --> 39:26.120
善同学说的优先机

39:26.120 --> 39:28.120
那优先机

39:28.120 --> 39:29.120
那同样

39:29.120 --> 39:30.120
人生有这样的一个

39:30.120 --> 39:31.120
对任务的分类

39:31.120 --> 39:32.120
浏览器也有

39:32.120 --> 39:34.120
那浏览器也有

39:34.120 --> 39:36.120
那到底是

39:36.120 --> 39:37.120
啥是主任务

39:37.120 --> 39:38.120
啥是次要任务

39:38.120 --> 39:39.120
啥是比次要

39:39.120 --> 39:40.120
还次要的任务呢

39:40.120 --> 39:42.120
那在这个浏览器里面

39:42.120 --> 39:43.120
有主任务

39:43.120 --> 39:44.120
分成主任务

39:44.120 --> 39:45.120
然后干嘛呢

39:45.120 --> 39:47.120
V任务

39:47.120 --> 39:50.500
以及红任务

39:50.500 --> 39:51.500
红

39:52.500 --> 39:53.500
任务

39:53.500 --> 39:54.500
红任务

39:54.500 --> 39:55.500
那其实这个主任务

39:55.500 --> 39:56.500
就对应这主要任务

39:56.500 --> 39:57.500
这个V任务

39:57.500 --> 39:58.500
对应的是次要任务

39:58.500 --> 39:59.500
红任务对应的是

39:59.500 --> 40:00.500
比次要任务

40:00.500 --> 40:01.500
还次要的任务

40:01.500 --> 40:02.500
比次要任务

40:02.500 --> 40:03.500
还次要的任务

40:03.500 --> 40:04.500
只不过在这里面

40:04.500 --> 40:05.500
有他们的一个专业名词

40:05.500 --> 40:06.500
向同学们说的

40:06.500 --> 40:07.500
这个什么

40:07.500 --> 40:08.500
红任务V任务

40:08.500 --> 40:10.500
在这就说到了

40:10.500 --> 40:11.500
那怎么区分

40:11.500 --> 40:13.500
它这样的一个顺序呢

40:13.500 --> 40:14.500
那这样给大家写个代码

40:14.500 --> 40:16.500
咱们测试一下就行了

40:16.500 --> 40:17.500
测试一下

40:17.500 --> 40:18.500
根据测试来区分

40:18.500 --> 40:19.500
哪个是主任务

40:19.500 --> 40:20.500
哪个是

40:20.500 --> 40:21.500
这个这个

40:21.500 --> 40:22.500
这个V任务

40:22.500 --> 40:23.500
包括是次要任务

40:23.500 --> 40:24.500
来

40:24.500 --> 40:27.500
set time out

40:27.500 --> 40:32.750
干嘛呢

40:32.750 --> 40:34.750
来console the log

40:34.750 --> 40:36.750
set time out

40:36.750 --> 40:37.750
time out

40:37.750 --> 40:41.770
在这就输入一个time out

40:41.770 --> 40:42.770
然后

40:42.770 --> 40:48.300
来个零

40:48.300 --> 40:50.300
来个零

40:50.300 --> 40:51.300
然后这个

40:51.300 --> 40:52.300
我们再

40:52.300 --> 40:53.300
干嘛呢

40:53.300 --> 40:55.300
输出

40:55.300 --> 40:57.300
慢慢

40:57.300 --> 40:58.300
然后这里面

40:58.300 --> 40:59.300
在干嘛呢

40:59.300 --> 41:03.300
promise.resolve

41:03.300 --> 41:16.370
promise.resolve.z

41:16.370 --> 41:17.370
输出

41:17.370 --> 41:18.370
输出

41:18.370 --> 41:19.370
VL

41:19.370 --> 41:20.370
这样的一个promise

41:20.370 --> 41:22.370
这样的一个promise对象

41:22.370 --> 41:23.370
咱们

41:23.370 --> 41:24.370
浏览器来看一下

41:24.370 --> 41:25.370
或者说同学们说一下

41:25.370 --> 41:26.370
你们猜一下

41:26.370 --> 41:27.370
他们的执行顺序

41:27.370 --> 41:28.370
这个输出

41:28.370 --> 41:32.130
应该输出什么

41:32.130 --> 41:34.130
LH同学说

41:34.130 --> 41:35.130
先输出它

41:35.130 --> 41:36.130
再输出

41:36.130 --> 41:37.130
Zen 再输出

41:37.130 --> 41:39.130
time out 是吧

41:39.130 --> 41:40.130
我们看一下

41:40.130 --> 41:45.580
来

41:45.580 --> 41:46.580
浏览器来验证一下

41:46.580 --> 41:50.620
这里面

41:50.620 --> 41:51.620
就说说到promise的知识

41:51.620 --> 41:52.620
慢

41:52.620 --> 41:53.620
Zen

41:53.620 --> 41:54.620
才冒子

41:54.620 --> 41:55.620
对吧

41:55.620 --> 41:56.620
来看着

41:56.620 --> 41:57.620
才冒子是最先写的

41:57.620 --> 41:58.620
包括这还写了个零呢

41:58.620 --> 42:00.620
它是最先声明的这个语句

42:00.620 --> 42:02.620
但是它最后输出

42:02.620 --> 42:04.620
但是它最后输出

42:04.620 --> 42:05.620
然后这有个慢

42:05.620 --> 42:06.620
对吧

42:06.620 --> 42:07.620
包括这有个Zen

42:07.620 --> 42:10.180
那如果把这个慢

42:10.180 --> 42:11.180
也放到下面呢

42:11.180 --> 42:12.180
对吧

42:12.180 --> 42:13.180
那其实还是什么呢

42:13.180 --> 42:14.180
慢

42:15.180 --> 42:16.180
一样的 对吧

42:16.180 --> 42:17.180
一样的

42:17.180 --> 42:18.180
OK 那在这里面

42:18.180 --> 42:20.180
正好对应这三个任务

42:20.180 --> 42:21.180
主任务什么呢

42:21.180 --> 42:23.180
先不说主任务

42:23.180 --> 42:24.180
微任务

42:24.180 --> 42:25.180
你看

42:25.180 --> 42:27.180
promise.zen 写在time out

42:27.180 --> 42:28.180
但是它的执行顺序

42:28.180 --> 42:29.180
比time out 之前

42:29.180 --> 42:31.180
放到time out 之前

42:31.180 --> 42:32.180
所以说

42:32.180 --> 42:33.180
微任务

42:33.180 --> 42:34.180
就是我们这个

42:36.180 --> 42:37.180
我们的红任务

42:37.180 --> 42:39.180
是promise.zen

42:39.180 --> 42:41.180
Prototype

42:41.180 --> 42:45.010
包括还有很多

42:45.010 --> 42:47.010
什么Catch

42:47.010 --> 42:48.010
Fantasy

42:49.010 --> 42:50.010
没说错呀

42:50.010 --> 42:51.010
没说错呀

42:58.250 --> 43:07.060
我说的

43:07.060 --> 43:09.060
我说的

43:09.060 --> 43:11.060
我说的红任务是promise 是吗

43:11.060 --> 43:12.060
口

43:17.060 --> 43:19.060
没写错就行

43:19.060 --> 43:20.060
你们给我

43:20.060 --> 43:22.060
搞懵了

43:22.060 --> 43:23.060
就是

43:23.060 --> 43:24.060
通过这两条

43:24.060 --> 43:25.060
我们能看出来

43:25.060 --> 43:26.060
写在下面的

43:26.060 --> 43:27.060
却先执行

43:27.060 --> 43:28.060
比如说promise.zen

43:28.060 --> 43:29.060
它的优先级

43:29.060 --> 43:30.060
是高于Hong

43:30.060 --> 43:32.060
这个高于Citimate

43:32.060 --> 43:34.060
那其实除了这个什么

43:34.060 --> 43:35.060
这个promise

43:35.060 --> 43:36.060
除了Citimate

43:36.060 --> 43:38.060
其他的就是主任务

43:38.060 --> 43:39.060
新手不疑

43:39.060 --> 43:40.060
因为这个新手

43:40.060 --> 43:41.060
这不是一个任务

43:41.060 --> 43:43.060
手可能快一点

43:43.060 --> 43:44.060
新可能慢一点

43:44.060 --> 43:45.060
因为确实比较着急

43:45.060 --> 43:47.060
一看到这样的一个时间

43:47.060 --> 43:48.060
一看到这样的一个时间

43:48.060 --> 43:49.060
这个咱们后面

43:49.060 --> 43:50.060
还有四道题

43:50.060 --> 43:51.060
而且这道题

43:51.060 --> 43:53.060
才刚刚开始

43:53.060 --> 43:54.060
刚开始吗

43:54.060 --> 43:55.060
刚刚开始

43:55.060 --> 43:56.060
我去接杯水

43:58.060 --> 43:59.060
来来来

43:59.060 --> 44:00.060
咱继续

44:00.060 --> 44:01.060
没事 刚说错了

44:01.060 --> 44:02.060
咱从来补一下

44:02.060 --> 44:03.060
补一下什么呢

44:03.060 --> 44:04.060
就是这个微任务

44:04.060 --> 44:05.060
在这里面就是

44:05.060 --> 44:06.060
promise.pro.tab.zen

44:06.060 --> 44:08.060
然后这个红任务

44:08.060 --> 44:09.060
就是这个Citimate

44:09.060 --> 44:10.060
他们的一个

44:10.060 --> 44:12.060
我们说了先执行主任务

44:12.060 --> 44:13.060
就像这个

44:13.060 --> 44:14.060
坑速点烙个

44:14.060 --> 44:15.060
包括说一个复讯法案

44:15.060 --> 44:16.060
包括说一个函数

44:16.060 --> 44:18.060
它都属于这个主任务

44:18.060 --> 44:19.060
因为它不在

44:19.060 --> 44:20.060
promise.zen里面

44:20.060 --> 44:21.060
也不属于Citimate

44:21.060 --> 44:22.060
里面的函数

44:22.060 --> 44:23.060
能懂吗

44:23.060 --> 44:24.060
那这个说

44:24.060 --> 44:25.060
这个红任务

44:25.060 --> 44:26.060
红任务还有吗

44:26.060 --> 44:27.060
有啊

44:27.060 --> 44:28.060
就像这个Citimate

44:28.060 --> 44:33.100
这个Citimate

44:33.100 --> 44:34.100
Citimate

44:34.100 --> 44:35.100
以及说这个什么

44:35.100 --> 44:36.100
我们动画

44:36.100 --> 44:38.100
Request Animation Frame

44:38.100 --> 44:39.100
都属于

44:39.100 --> 44:40.100
都属于

44:40.100 --> 44:41.100
那包括这个

44:41.100 --> 44:42.100
这个微任务

44:42.100 --> 44:44.100
Promise.pro.tab

44:44.100 --> 44:45.100
包括Node环境里面

44:45.100 --> 44:46.100
Nest Take也是

44:46.100 --> 44:47.100
Process.nest Take

44:47.100 --> 44:48.100
那也是

44:48.100 --> 44:49.100
那Node环境里面

44:49.100 --> 44:50.100
咱不说了

44:50.100 --> 44:51.100
那这个是大家

44:51.100 --> 44:52.100
在浏览器环境中

44:52.100 --> 44:53.100
能见到的

44:53.100 --> 44:54.100
能见的

44:54.100 --> 44:58.890
事件

44:58.890 --> 44:59.890
正常的任务

44:59.890 --> 45:00.890
就是主任务

45:00.890 --> 45:01.890
只不过是

45:01.890 --> 45:02.890
当你点击的时候

45:02.890 --> 45:03.890
它才会执行

45:03.890 --> 45:04.890
当你点击的时候

45:04.890 --> 45:05.890
它才会执行

45:07.890 --> 45:08.890
就是

45:08.890 --> 45:09.890
因为你看

45:09.890 --> 45:10.890
在这里面

45:10.890 --> 45:11.890
给大家看的

45:11.890 --> 45:12.890
这个代码

45:12.890 --> 45:13.890
给大家看的

45:13.890 --> 45:14.890
这个代码

45:14.890 --> 45:15.890
无非就是一个Citimate

45:15.890 --> 45:16.890
和Promise

45:16.890 --> 45:17.890
就这两货

45:17.890 --> 45:18.890
就这两货

45:19.890 --> 45:20.890
你回掉

45:20.890 --> 45:21.890
只能代表

45:21.890 --> 45:22.890
它是一部任务

45:22.890 --> 45:24.890
你说它是红任务

45:24.890 --> 45:26.890
因为它没办法

45:26.890 --> 45:27.890
是你当你回掉

45:27.890 --> 45:28.890
的时候

45:28.890 --> 45:29.890
它才会执行

45:29.890 --> 45:30.890
当你执掉

45:30.890 --> 45:31.890
当你回掉的时候

45:31.890 --> 45:32.890
才会执行

45:32.890 --> 45:33.890
意并不大

45:35.890 --> 45:36.890
OK

45:36.890 --> 45:37.890
那在这

45:37.890 --> 45:38.890
给大家说了一个

45:38.890 --> 45:39.890
什么的红任务为任务

45:39.890 --> 45:40.890
就是

45:40.890 --> 45:41.890
给它分这个

45:41.890 --> 45:42.890
主要任务为任务

45:42.890 --> 45:43.890
红任务

45:43.890 --> 45:44.890
目的是强调这个任务的一个

45:44.890 --> 45:45.890
执行顺序

45:45.890 --> 45:46.890
执行顺序

45:46.890 --> 45:48.890
那写完这个

45:48.890 --> 45:49.890
写完这个

45:49.890 --> 45:50.890
给大家看完了

45:50.890 --> 45:51.890
它的一个执行顺序之后

45:51.890 --> 45:53.890
给它看完执行顺序之后

45:53.890 --> 45:54.890
无非就是什么

45:54.890 --> 45:55.890
Promise

45:55.890 --> 45:56.890
点击

45:56.890 --> 45:57.890
那个优先级

45:57.890 --> 45:58.890
是高于Citimate

45:58.890 --> 45:59.890
也就是它是为任务

45:59.890 --> 46:00.890
它是红任务

46:00.890 --> 46:01.890
包括说我们

46:01.890 --> 46:02.890
主任务执行完之后

46:02.890 --> 46:03.890
执行为任务

46:03.890 --> 46:04.890
为任务执行完

46:04.890 --> 46:05.890
再执行红任务

46:05.890 --> 46:06.890
包括红任务执行完之后

46:06.890 --> 46:07.890
干嘛呢

46:07.890 --> 46:08.890
还有新的为任务的话

46:08.890 --> 46:09.890
再执行为任务

46:09.890 --> 46:10.890
那是这样的一个过程

46:10.890 --> 46:11.890
这样的过程

46:12.890 --> 46:13.890
OK 那咱继续

46:13.890 --> 46:14.890
咱继续

46:14.890 --> 46:15.890
这个是

46:15.890 --> 46:16.890
这个

46:17.890 --> 46:18.890
在面试中

46:18.890 --> 46:20.890
常见到的一串代码

46:20.890 --> 46:21.890
一串代码

46:21.890 --> 46:22.890
那当然了

46:22.890 --> 46:23.890
当然了

46:23.890 --> 46:24.890
那这个

46:24.890 --> 46:27.900
这个东西

46:27.900 --> 46:28.900
the single weight

46:28.900 --> 46:29.900
是什么东西

46:29.900 --> 46:30.900
来哈

46:30.900 --> 46:31.900
那在这呢

46:31.900 --> 46:33.900
就给大家搞一个

46:33.900 --> 46:34.900
更难一点的

46:34.900 --> 46:35.900
好吧 给大家讲一下

46:35.900 --> 46:39.180
Generator and CO

46:39.180 --> 46:40.180
给大家讲个这个

46:40.180 --> 46:42.180
给大家讲个这个

46:43.180 --> 46:44.180
因为

46:44.180 --> 46:46.180
the single weight

46:46.180 --> 46:48.180
是基于Generator and CO的

46:49.180 --> 47:02.180
对

47:02.180 --> 47:03.180
对

47:03.180 --> 47:04.180
常常同学说的对

47:04.180 --> 47:05.180
没问题

47:05.180 --> 47:06.180
没问题

47:06.180 --> 47:07.180
那上面的话

47:07.180 --> 47:08.180
无非就是他们的

47:08.180 --> 47:09.180
一个执行顺序

47:09.180 --> 47:10.180
包括说Promise与法

47:10.180 --> 47:11.180
那这个咱们在这堂课里面

47:11.180 --> 47:12.180
就不说了

47:12.180 --> 47:13.180
就不说了

47:13.180 --> 47:14.180
就是听不懂同学

47:14.180 --> 47:15.180
听懂上面这个就可以了

47:15.180 --> 47:16.180
就是浏览器执行的任务

47:16.180 --> 47:18.180
它会把任务进行分类

47:18.180 --> 47:19.180
然后不同任务

47:19.180 --> 47:20.180
它的一个执行顺序是不一样的

47:20.180 --> 47:21.180
到这就可以了

47:21.180 --> 47:22.180
然后接下来

47:22.180 --> 47:23.180
咱们说说这个

47:23.180 --> 47:24.180
the single weight

47:24.180 --> 47:25.180
它不是说直接就有的

47:25.180 --> 47:26.180
它不是直接就有的

47:26.180 --> 47:27.180
咱说呢

47:27.180 --> 47:28.180
给大家写两个函数

47:28.180 --> 47:29.180
看不懂的

47:29.180 --> 47:30.180
就看个热闹就好吗

47:30.180 --> 47:31.180
方身

47:31.180 --> 47:32.180
这个f1

47:33.180 --> 47:34.180
value

47:34.180 --> 47:35.180
然后干嘛呢

47:35.180 --> 47:36.180
这个return

47:36.180 --> 47:38.180
一个new promise

47:39.180 --> 47:42.190
suc

47:42.190 --> 47:43.190
干嘛呢

47:43.190 --> 47:44.190
suc value

47:46.190 --> 47:47.190
我给大家写两个函数

47:52.190 --> 47:54.190
return一个new promise

47:56.190 --> 47:57.190
它俩基本一样

48:00.080 --> 48:03.080
suvl代表两个不同的函数

48:03.080 --> 48:04.080
代表两个不同的函数

48:04.080 --> 48:05.080
代表两个不同的函数

48:05.080 --> 48:06.080
然后接下来干嘛呢

48:06.080 --> 48:08.080
给大家来搞一个generator函数

48:08.080 --> 48:09.080
就是生成器

48:09.080 --> 48:10.080
生成什么

48:10.080 --> 48:11.080
生成迭代器的函数

48:11.080 --> 48:12.080
share

48:12.080 --> 48:14.080
这个fn

48:14.080 --> 48:15.080
value

48:16.080 --> 48:17.080
在这里面干嘛呢

48:17.080 --> 48:19.080
return一个value 1

48:19.080 --> 48:20.080
等于什么呢

48:20.080 --> 48:23.840
等于这个要的

48:24.840 --> 48:25.840
要的什么呢

48:25.840 --> 48:29.340
f1 value

48:29.340 --> 48:31.340
return一个value 2

48:32.340 --> 48:35.340
等于要的f2

48:35.340 --> 48:38.660
value 1

48:38.660 --> 48:41.660
然后这个suc value 1和value 2

48:46.210 --> 48:47.210
正常来说呢

48:47.210 --> 48:48.210
这个函数要执行的话

48:48.210 --> 48:50.210
无非就是什么呢

48:50.210 --> 48:52.210
这个return一个

48:52.210 --> 48:54.210
return fn

48:54.210 --> 48:55.210
等于fn执行

48:55.210 --> 48:56.210
然后什么呢

48:56.210 --> 48:57.210
return fn

48:57.210 --> 48:59.210
return fn.next

49:00.210 --> 49:02.210
这个点next

49:02.210 --> 49:03.210
点next去执行

49:04.210 --> 49:09.850
通过这种方式去执行

49:09.850 --> 49:10.850
但这个方式执行的话

49:10.850 --> 49:11.850
大家看不到结果

49:11.850 --> 49:12.850
所以在这呢

49:12.850 --> 49:13.850
给大家变一下

49:13.850 --> 49:14.850
给大家变一下

49:14.850 --> 49:15.850
干嘛呢

49:15.850 --> 49:16.850
counts

49:16.850 --> 49:17.850
执行

49:17.850 --> 49:18.850
return fn

49:18.850 --> 49:19.850
等于什么呢

49:19.850 --> 49:20.850
等于fn执行

49:20.850 --> 49:21.850
然后这里面

49:21.850 --> 49:22.850
传一个

49:22.850 --> 49:23.850
比方说我们传个1

49:23.850 --> 49:24.850
好吗

49:24.850 --> 49:25.850
比方说我们传个1

49:26.850 --> 49:27.850
然后这个

49:28.850 --> 49:35.640
来

49:35.640 --> 49:36.640
嗯 传个s

49:36.640 --> 49:40.080
要的和promise结合效果

49:40.080 --> 49:41.080
能不能当promise

49:42.080 --> 49:43.080
可以

49:43.080 --> 49:44.080
但是还不完全

49:44.080 --> 49:45.080
在这你把这个结合

49:45.080 --> 49:46.080
代码写完之后

49:46.080 --> 49:47.080
就能看到了

49:47.080 --> 49:49.080
38号

49:49.080 --> 49:50.080
plo mi se

49:50.080 --> 49:51.080
OK

49:52.080 --> 49:53.080
OK啊

49:53.080 --> 49:54.080
OK

49:54.080 --> 49:55.080
那好

49:55.080 --> 49:56.080
在这干嘛呢

49:56.080 --> 49:57.080
我们把他的一个

49:57.080 --> 49:58.080
执行结果

49:58.080 --> 49:59.080
反过来我们把你

49:59.080 --> 50:00.080
出来看一下

50:00.080 --> 50:01.080
我们来看一下

50:01.080 --> 50:02.080
什么呢

50:02.080 --> 50:03.080
结果负值

50:04.080 --> 50:05.080
value

50:05.080 --> 50:06.080
但

50:06.080 --> 50:07.080
等于什么呢

50:07.080 --> 50:09.080
等于 run fn

50:09.080 --> 50:10.080
next

50:11.080 --> 50:12.080
这个函数的

50:12.080 --> 50:13.080
这个这个迪带器

50:13.080 --> 50:14.080
往下迪带

50:14.080 --> 50:15.080
然后干嘛呢

50:15.080 --> 50:16.080
我们可以这个

50:16.080 --> 50:17.080
输出一下蛋

50:17.080 --> 50:18.080
输出一下蛋

50:18.080 --> 50:21.460
就是看这个迪带器

50:21.460 --> 50:22.460
是否迪带完成

50:22.460 --> 50:23.460
看这个迪带器

50:23.460 --> 50:24.460
是否迪带完成

50:25.460 --> 50:26.460
新来分

50:26.460 --> 50:27.460
这个是 generator

50:27.460 --> 50:29.460
我们的生成器

50:29.460 --> 50:36.800
是我们的生成器

50:36.800 --> 50:37.800
生成器生成什么呢

50:37.800 --> 50:41.620
生成迪带器

50:41.620 --> 50:42.620
这是简单复习一下

50:42.620 --> 50:43.620
迪带器

50:43.620 --> 50:47.000
迪带器的作用干嘛呢

50:47.000 --> 50:49.000
为数据

50:49.000 --> 50:53.080
提供

50:53.080 --> 50:55.080
统一的

50:55.080 --> 50:57.080
统一

50:57.080 --> 50:58.080
便利

50:58.080 --> 50:59.080
方式

50:59.080 --> 51:01.080
就是 follow 循环

51:02.080 --> 51:03.080
在这里面都有

51:03.080 --> 51:04.080
在这里面都有

51:05.080 --> 51:07.080
你包括这个关键字

51:07.080 --> 51:08.080
只能在这个生成器

51:08.080 --> 51:09.080
海书里面去写

51:09.080 --> 51:10.080
其他的包式

51:10.080 --> 51:11.080
其他的包式

51:12.080 --> 51:13.080
OK

51:13.080 --> 51:14.080
那这个

51:14.080 --> 51:15.080
这个蛋代表的

51:15.080 --> 51:16.080
如果这个 false 的话

51:16.080 --> 51:17.080
因为它代表

51:17.080 --> 51:18.080
它没有结束

51:18.080 --> 51:20.900
False

51:20.900 --> 51:26.740
OK

51:26.740 --> 51:27.740
False代表没有结束

51:27.740 --> 51:28.740
没有结束干嘛呢

51:28.740 --> 51:29.740
可以继续

51:29.740 --> 51:30.740
继续这个蛋

51:30.740 --> 51:31.740
包括说你把这个 value 输出一下

51:31.740 --> 51:32.740
value 的话

51:32.740 --> 51:34.740
应该是 a promise 对象

51:34.740 --> 51:36.740
value 是 promise 对象

51:36.740 --> 51:37.740
但是是 fulfill 的

51:37.740 --> 51:38.740
也就是成功的

51:38.740 --> 51:39.740
成功的

51:39.740 --> 51:40.740
那这样的话是成功的话

51:40.740 --> 51:41.740
干嘛呢

51:41.740 --> 51:42.740
我可以让这个 value 继续执行

51:42.740 --> 51:43.740
value 继续执行

51:43.740 --> 51:44.740
干嘛呢

51:44.740 --> 51:45.740
value

51:45.740 --> 51:46.740
点 zin

51:47.740 --> 51:48.740
这个

51:48.740 --> 51:49.740
这个

51:49.740 --> 51:51.740
把这个 value 先下传

51:51.740 --> 51:52.740
就是那个 e

51:52.740 --> 51:53.740
那个 e

51:53.740 --> 51:54.740
干嘛呢

51:54.740 --> 51:55.740
让我们的这个

51:56.740 --> 51:57.740
迭代器

51:57.740 --> 51:58.740
让我们的这个迭代器

51:58.740 --> 51:59.740
进行再次迭代

52:00.740 --> 52:01.740
value 蛋

52:03.740 --> 52:04.740
终于是 run

52:04.740 --> 52:05.740
iPhone.next

52:05.740 --> 52:06.740
然后把谁呢

52:06.740 --> 52:07.740
把 value 传进来

52:07.740 --> 52:08.740
把 value 传进来

52:08.740 --> 52:09.740
这样的话

52:09.740 --> 52:10.740
你还可以看到它的

52:10.740 --> 52:11.740
蛋

52:11.740 --> 52:12.740
以及我们的 value

52:13.740 --> 52:14.740
如果但是说的话

52:14.740 --> 52:15.740
意味着迭代器结束了

52:15.740 --> 52:16.740
这时候还没有

52:16.740 --> 52:17.740
还没有完事

52:17.740 --> 52:18.740
还没有完事

52:18.740 --> 52:19.740
那没有完事的话

52:19.740 --> 52:20.740
咱继续

52:20.740 --> 52:21.740
继续

52:21.740 --> 52:22.740
继续啥呢

52:22.740 --> 52:23.740
value 点 zin

52:24.740 --> 52:25.740
value 点 zin

52:26.740 --> 52:27.740
什么呢

52:27.740 --> 52:28.740
这个 value

52:29.740 --> 52:32.620
下面的这个

52:32.620 --> 52:33.620
这个

52:33.620 --> 52:35.940
这个

52:35.940 --> 52:39.080
Const

52:40.080 --> 52:41.080
value 蛋

52:42.080 --> 52:43.080
终于 run

52:43.080 --> 52:45.080
iPhone.next

52:45.080 --> 52:46.080
value

52:47.080 --> 52:48.080
把这个拿过

52:48.080 --> 52:49.080
仍然拿过来

52:49.080 --> 52:50.080
看他们是否结束

52:59.480 --> 53:00.480
仍然 ok

53:00.480 --> 53:01.480
这个11

53:01.480 --> 53:02.480
这个11是多少

53:02.480 --> 53:03.480
46行之行

53:03.480 --> 53:04.480
46行是哪

53:04.480 --> 53:05.480
走到这

53:05.480 --> 53:06.480
这个生成器

53:06.480 --> 53:07.480
包括要的

53:07.480 --> 53:08.480
它干嘛呢

53:08.480 --> 53:09.480
可以控制代码执行

53:09.480 --> 53:11.480
你每次调用一个 next

53:11.480 --> 53:13.480
它会往下执行一步

53:13.480 --> 53:14.480
翻开始

53:14.480 --> 53:15.480
第一步可能走的是这

53:15.480 --> 53:16.480
第二步走的是这

53:16.480 --> 53:17.480
包括这

53:17.480 --> 53:18.480
第三步呢

53:18.480 --> 53:19.480
是把这些都做完了

53:19.480 --> 53:20.480
那这个时候

53:20.480 --> 53:21.480
蛋是什么处

53:21.480 --> 53:22.480
代表它走完了

53:22.480 --> 53:24.480
那在这样的一个过程

53:24.480 --> 53:25.480
这样的过程就是

53:25.480 --> 53:26.480
我们这个迭代器

53:26.480 --> 53:28.480
包括我们这个任务的一个过程

53:28.480 --> 53:30.480
我们这个任务的过程

53:30.480 --> 53:31.480
那把它呢

53:31.480 --> 53:32.480
可以给它再次改化一下

53:32.480 --> 53:34.480
再次进化一下

53:34.480 --> 53:35.480
干嘛呢

53:35.480 --> 53:36.480
封装成一个函数

53:36.480 --> 53:37.480
封装成一个函数

53:37.480 --> 53:38.480
就把上面这个过程

53:38.480 --> 53:39.480
给它封装成一个函数

53:42.820 --> 53:43.820
把上面这个

53:43.820 --> 53:44.820
因为上面本来

53:44.820 --> 53:45.820
它就是一个

53:45.820 --> 53:46.820
相当于地规一样的函数

53:46.820 --> 53:47.820
给它封装一下

53:47.820 --> 53:49.820
function next

53:49.820 --> 53:50.820
next

53:50.820 --> 53:52.820
然后这里面传一个 run

53:53.820 --> 53:54.820
iPhone 以及什么的

53:54.820 --> 53:56.820
我们这个 value

53:56.820 --> 53:57.820
然后同样

53:57.820 --> 53:58.820
上面干嘛呢

53:58.820 --> 53:59.820
判断一下

53:59.820 --> 54:00.820
这个获取我们的

54:00.820 --> 54:02.820
value 以及 dan

54:02.820 --> 54:03.820
什么的 run

54:03.820 --> 54:04.820
iPhone 点 nest

54:06.820 --> 54:07.820
然后干嘛呢

54:07.820 --> 54:08.820
判断我们这个

54:08.820 --> 54:09.820
如果蛋是处

54:09.820 --> 54:10.820
意味着这个

54:10.820 --> 54:12.820
迭代器结束了

54:12.820 --> 54:13.820
那干嘛呢

54:13.820 --> 54:14.820
我们这个

54:14.820 --> 54:15.820
如果

54:15.820 --> 54:16.820
如果蛋是处的话

54:16.820 --> 54:17.820
直接 return

54:17.820 --> 54:20.820
否则的话怎么着呢

54:20.820 --> 54:21.820
否则的话

54:21.820 --> 54:22.820
我们这个

54:22.820 --> 54:23.820
value

54:23.820 --> 54:24.820
点 z

54:24.820 --> 54:27.900
干嘛呢

54:27.900 --> 54:28.900
在这里面

54:28.900 --> 54:29.900
我们可以直接

54:29.900 --> 54:30.900
把这个 next

54:30.900 --> 54:31.900
地规调用一下

54:31.900 --> 54:32.900
把我们这个 run

54:32.900 --> 54:33.900
iPhone 和我们这个

54:33.900 --> 54:34.900
处理化的这个 value

54:34.900 --> 54:35.900
传给它

54:35.900 --> 54:36.900
处理化这个 value 传给它

54:37.900 --> 54:39.900
那包括在这里面的时候

54:39.900 --> 54:41.900
我们就可以去调用这个 next

54:41.900 --> 54:42.900
什么呢

54:42.900 --> 54:44.900
是这个 iPhone 1

54:44.900 --> 54:46.900
包括处理化的直

54:46.900 --> 54:47.900
是什么呢

54:47.900 --> 54:48.900
是一个

54:48.900 --> 54:49.900
处理化的直

54:49.900 --> 54:50.900
在这里面就不用给了

54:50.900 --> 54:52.900
是方便后面调用的

54:52.900 --> 54:53.900
比如说这样的话

54:53.900 --> 54:54.900
结果

54:58.980 --> 54:59.980
这个地方

54:59.980 --> 55:03.990
需要传一下这个 value

55:03.990 --> 55:04.990
这样的话

55:04.990 --> 55:05.990
这个直也会拿得到

55:05.990 --> 55:06.990
也会拿得到

55:06.990 --> 55:07.990
那这个呢

55:07.990 --> 55:09.990
是一个 next 函数

55:09.990 --> 55:10.990
这个 next 函数

55:10.990 --> 55:12.990
配合着我们这样的一个 generator

55:12.990 --> 55:13.990
干嘛呢

55:13.990 --> 55:14.990
它就能实现

55:14.990 --> 55:16.990
接下来这样的一个变身

55:17.990 --> 55:18.990
sync

55:18.990 --> 55:19.990
方身

55:19.990 --> 55:21.990
上 iPhone

55:21.990 --> 55:22.990
value

55:23.990 --> 55:24.990
干嘛呢

55:24.990 --> 55:25.990
这个 value

55:25.990 --> 55:26.990
等于什么呢

55:28.990 --> 55:30.990
这个 f1

55:30.990 --> 55:32.990
只行把这个 value 传进去

55:32.990 --> 55:34.990
然后 last 一个 value

55:36.990 --> 55:37.990
等于 a weight

55:39.990 --> 55:41.990
咱们没课件啊

55:41.990 --> 55:42.990
就是就纯手奖

55:42.990 --> 55:44.990
纯脑子奖

55:44.990 --> 55:45.990
f2 只行

55:45.990 --> 55:46.990
把谁呢

55:46.990 --> 55:47.990
把这个 value 1 拿过来

55:47.990 --> 55:48.990
干嘛呢

55:48.990 --> 55:49.990
输出

55:50.990 --> 55:51.990
value 1

55:51.990 --> 55:53.990
把这个 value 1和 value 2

55:54.990 --> 55:55.990
那在这里面

55:55.990 --> 55:56.990
其实你看

55:56.990 --> 55:57.990
它俩啥区别

55:57.990 --> 55:58.990
把这个信号

55:58.990 --> 55:59.990
换成了 sync

55:59.990 --> 56:00.990
把这个要的

56:00.990 --> 56:01.990
换成了 weight

56:01.990 --> 56:02.990
同时呢

56:02.990 --> 56:04.990
它输出的结果是什么呢

56:04.990 --> 56:05.990
这个

56:05.990 --> 56:06.990
这个

56:06.990 --> 56:07.990
这个

56:07.990 --> 56:08.990
这直接写

56:08.990 --> 56:09.990
刚才分之行就行

56:09.990 --> 56:11.990
你看看会是啥样的

56:22.490 --> 56:26.140
来看一下

56:28.650 --> 56:46.380
52

56:46.380 --> 56:47.380
对对对

56:47.380 --> 56:48.380
这没传直

56:48.380 --> 56:49.380
没传直

56:49.380 --> 56:50.380
对对对

56:51.380 --> 56:52.380
我说呢

56:52.380 --> 56:53.380
因为它俩是一样的

56:53.380 --> 56:54.380
它俩是一样的

56:54.380 --> 56:56.380
它俩其实是一样的

56:56.380 --> 56:57.380
给大家写到这

56:57.380 --> 56:58.380
其实它俩是一样的

56:58.380 --> 56:59.380
是一样的

56:59.380 --> 57:00.380
就是无论说

57:00.380 --> 57:01.380
上面的这个

57:01.380 --> 57:02.380
你看它俩很像了

57:02.380 --> 57:03.380
它俩很像了

57:03.380 --> 57:04.380
我会把这个信号

57:04.380 --> 57:05.380
变成了 sync

57:05.380 --> 57:06.380
把这个要的变成了 weight

57:06.380 --> 57:07.380
只不过说

57:07.380 --> 57:09.380
这个单纯的 generator

57:09.380 --> 57:10.380
需要配合着我们这样的

57:10.380 --> 57:11.380
next 函数

57:11.380 --> 57:12.380
才能实现

57:12.380 --> 57:14.380
上面这样的一个效果

57:14.380 --> 57:15.380
这才是这个

57:15.380 --> 57:16.380
sync and weight

57:16.380 --> 57:18.380
的一个发展过程

57:18.380 --> 57:19.380
发展过程

57:19.380 --> 57:21.380
就是从原来的生成纪函数

57:21.380 --> 57:22.380
变成了

57:22.380 --> 57:23.380
后来的我们这样的一个

57:23.380 --> 57:24.380
sync and weight的方式

57:24.380 --> 57:25.380
什么呢

57:25.380 --> 57:34.840
一步代码同步化

57:34.840 --> 57:36.840
一步代码同步化

57:36.840 --> 57:37.840
就是你这个

57:37.840 --> 57:38.840
你看这个 sync and weight

57:38.840 --> 57:39.840
它更简洁

57:39.840 --> 57:40.840
你知道这个 sync and weight

57:40.840 --> 57:41.840
怎么来的吗

57:41.840 --> 57:43.840
你用着很舒服

57:43.840 --> 57:44.840
在面试的时候

57:44.840 --> 57:45.840
你要了解它这样的一个

57:45.840 --> 57:47.840
迭代器的一个过程

57:47.840 --> 57:48.840
你用的话

57:48.840 --> 57:50.840
任何技术用起来都不难

57:50.840 --> 57:52.840
它的一个手册写得很清楚

57:52.840 --> 57:53.840
这个

57:53.840 --> 57:55.840
这个 nest 是那个精髓

57:55.840 --> 57:56.840
这个精髓

57:56.840 --> 57:57.840
包括说

57:57.840 --> 57:58.840
我们可以下载一个

57:58.840 --> 57:59.840
这个 ceo 模块

57:59.840 --> 58:01.840
你可以看一下

58:01.840 --> 58:03.840
你下载一个 ceo 模块

58:03.840 --> 58:04.840
其实主要代码

58:04.840 --> 58:05.840
跟我们写的一样

58:05.840 --> 58:06.840
你看一下在这里面

58:06.840 --> 58:08.840
index.js

58:08.840 --> 58:09.840
你看这个 ceo 模块

58:09.840 --> 58:11.840
这个 tg 写的

58:11.840 --> 58:13.840
这个 ceo

58:13.840 --> 58:14.840
你看

58:14.840 --> 58:15.840
这个这个这个 function

58:15.840 --> 58:16.840
这个

58:16.840 --> 58:17.840
这只说没有 es6 的写法

58:17.840 --> 58:18.840
单纯写的

58:18.840 --> 58:19.840
让这个函数执行

58:19.840 --> 58:20.840
单纯执行

58:20.840 --> 58:21.840
然后这里面

58:21.840 --> 58:23.840
有一些辅助函数

58:23.840 --> 58:24.840
一些辅助函数

58:24.840 --> 58:26.840
但是代码并没有多少

58:26.840 --> 58:27.840
代码并没有多少

58:27.840 --> 58:28.840
这只是给大家去看

58:28.840 --> 58:31.840
其实咱们写的这个 next

58:31.840 --> 58:33.840
就是 ceo 模块的一个核心代码

58:33.840 --> 58:35.840
ceo 模块的一个核心代码

58:35.840 --> 58:36.840
干嘛呢

58:36.840 --> 58:37.840
这个 next 函数

58:37.840 --> 58:40.840
配合着我们的这个 generator

58:40.840 --> 58:42.840
这样的一个生成器函数

58:42.840 --> 58:43.840
才能实现咱们这个

58:43.840 --> 58:45.840
惡性的价格 weight

58:45.840 --> 58:46.840
这呢

58:46.840 --> 58:47.840
我相信很多东西

58:47.840 --> 58:48.840
听不太懂

58:48.840 --> 58:49.840
因为尤其像生成器这

58:49.840 --> 58:50.840
可能根本就没研究

58:50.840 --> 58:51.840
包括生成器

58:51.840 --> 58:52.840
它的一个执行过程

58:52.840 --> 58:53.840
在这咱也不多说了

58:53.840 --> 58:54.840
在这也不多说了

58:54.840 --> 58:56.840
就是你回去

58:56.840 --> 58:57.840
如果想补的话

58:57.840 --> 58:58.840
专心补一补

58:58.840 --> 58:59.840
但这确实很值钱

58:59.840 --> 59:01.840
可以告诉你们

59:02.840 --> 59:03.840
这个地方呢

59:03.840 --> 59:04.840
我就我在问你们说

59:04.840 --> 59:05.840
能听懂了吧

59:05.840 --> 59:06.840
这是呢

59:06.840 --> 59:07.840
大家着重一块

59:07.840 --> 59:08.840
什么呢

59:08.840 --> 59:09.840
就是我们对于任务的一个分类

59:09.840 --> 59:11.840
对于任务的一个分类

59:11.840 --> 59:15.860
然后然后这个这个

59:15.860 --> 59:16.860
主任务

59:16.860 --> 59:17.860
微任务 红任务

59:17.860 --> 59:18.860
主任务是哪些

59:18.860 --> 59:19.860
微任务是哪些

59:19.860 --> 59:20.860
红任务是哪些

59:20.860 --> 59:21.860
直到这个就可以了

59:21.860 --> 59:22.860
知道这个

59:22.860 --> 59:23.860
这些就可以了

59:23.860 --> 59:24.860
下面这个代码的时候

59:24.860 --> 59:26.860
大家是关于这个

59:26.860 --> 59:27.860
这个这个这个上面写了

59:27.860 --> 59:28.860
什么呢

59:28.860 --> 59:29.860
Generator加CO

59:29.860 --> 59:31.860
它转换成了SyncGalwait

59:31.860 --> 59:33.860
你看它俩其实

59:33.860 --> 59:37.490
它俩其实长得很像

59:37.490 --> 59:38.490
你看没看懂

59:38.490 --> 59:39.490
它俩长得很像

59:39.490 --> 59:42.950
就是这个

59:42.950 --> 59:44.950
是在你面试会加分的

59:44.950 --> 59:45.950
但你可能说

59:45.950 --> 59:46.950
开发的时候你用不到

59:46.950 --> 59:47.950
开发的话你直接用成品

59:47.950 --> 59:49.950
和SyncGalwait就行了

59:49.950 --> 59:51.950
你直接这么用就行了

59:51.950 --> 59:53.950
但是你看它俩很像

59:53.950 --> 59:54.950
它俩很像

59:54.950 --> 59:56.950
是基于我们这个代码

59:56.950 --> 59:57.950
控制的这样的一个生成器

59:57.950 --> 59:59.950
配合着我们自己写的一个

59:59.950 --> 01:00:00.950
CO模块

01:00:00.950 --> 01:00:03.950
实现了这样的一个效果

01:00:03.950 --> 01:00:07.520
实现了这样的一个效果

01:00:07.520 --> 01:00:08.520
这只不算是

01:00:08.520 --> 01:00:09.520
额外的给大家扩展的

01:00:09.520 --> 01:00:11.520
但其实这个

01:00:11.520 --> 01:00:12.520
这个这个这个

01:00:12.520 --> 01:00:13.520
这个这个

01:00:13.520 --> 01:00:14.520
这个这个

01:00:14.520 --> 01:00:15.520
说到这么多

01:00:15.520 --> 01:00:16.520
就是我们的这个

01:00:16.520 --> 01:00:17.520
这个这个

01:00:17.520 --> 01:00:20.520
SyncGalwait

01:00:20.520 --> 01:00:23.520
本身

01:00:23.520 --> 01:00:24.520
干嘛呢

01:00:24.520 --> 01:00:26.520
本身是我们的这个

01:00:26.520 --> 01:00:30.980
Promise的V法堂

01:00:31.980 --> 01:00:32.980
不是

01:00:32.980 --> 01:00:34.980
本身是Promise的语法堂

01:00:34.980 --> 01:00:35.980
本身是Promise的语法堂

01:00:35.980 --> 01:00:37.980
里面是有Promise的

01:00:37.980 --> 01:00:38.980
只不过

01:00:38.980 --> 01:00:40.980
只不过它的一个形成过程

01:00:40.980 --> 01:00:45.380
是我们的这个Generator

01:00:45.380 --> 01:00:46.380
v1

01:00:46.380 --> 01:00:47.380
1

01:00:47.380 --> 01:00:48.380
2

01:00:48.380 --> 01:00:49.380
v2

01:00:49.380 --> 01:00:51.380
Generator加上我们这个CO模块

01:00:51.380 --> 01:00:54.380
也是加上我们刚才写的这个NAS寒出

01:00:54.380 --> 01:00:56.380
来实现这个SyncGalwait

01:00:56.380 --> 01:01:01.360
对对对对对对对

01:01:01.360 --> 01:01:03.360
就是Generator加CO

01:01:03.360 --> 01:01:04.360
Generator加CO

01:01:04.360 --> 01:01:05.360
只不过换了一种形式

01:01:05.360 --> 01:01:06.360
你看

01:01:06.360 --> 01:01:07.360
你看啊

01:01:07.360 --> 01:01:09.360
它俩是不是很像

01:01:09.360 --> 01:01:11.360
然后它呢干嘛呢

01:01:11.360 --> 01:01:13.360
需要配上一个NAS的寒数

01:01:13.360 --> 01:01:16.060
它俩很像

01:01:16.060 --> 01:01:17.060
但是这个呢

01:01:17.060 --> 01:01:19.060
配上一个NAS的寒数

01:01:19.060 --> 01:01:21.060
它俩的输出结果就一样了

01:01:21.060 --> 01:01:23.060
看到了吗

01:01:23.060 --> 01:01:24.060
这个

01:01:24.060 --> 01:01:26.060
和这个它俩长的差不多

01:01:26.060 --> 01:01:27.060
但是下面那个

01:01:27.060 --> 01:01:28.060
需要配上一个NAS寒数

01:01:28.060 --> 01:01:30.060
它们这种输出的结果就一样了

01:01:30.060 --> 01:01:31.060
所以说

01:01:31.060 --> 01:01:32.060
从它固得到它

01:01:32.060 --> 01:01:34.060
里面是加了一个NAS寒数

01:01:34.060 --> 01:01:35.060
这个NAS寒数呢

01:01:35.060 --> 01:01:36.060
就是TGA写的

01:01:36.060 --> 01:01:38.060
就是写Note的那个小伙写的

01:01:38.060 --> 01:01:42.330
这个

01:01:42.330 --> 01:01:59.490
对 就是这个

01:01:59.490 --> 01:02:01.490
TGA的CO寒数

01:02:01.490 --> 01:02:05.500
TGA的CO寒数

01:02:05.500 --> 01:02:07.820
不是这个

01:02:07.820 --> 01:02:08.820
Generator

01:02:08.820 --> 01:02:10.820
这个是

01:02:10.820 --> 01:02:14.830
它写的

01:02:14.830 --> 01:02:16.830
index.js

01:02:16.830 --> 01:02:18.830
这个其实是刚才咱看的那个

01:02:18.830 --> 01:02:19.830
之前咱看的那个

01:02:19.830 --> 01:02:21.830
就是核心代码跟咱们写的一样

01:02:21.830 --> 01:02:23.830
都是执行NAS的寒数

01:02:23.830 --> 01:02:25.830
只不过这里面写了一个抱错

01:02:25.830 --> 01:02:27.830
写了一个抱错

01:02:27.830 --> 01:02:29.830
NAS

01:02:29.830 --> 01:02:30.830
这个

01:02:30.830 --> 01:02:31.830
这是迭代器的一些知识

01:02:31.830 --> 01:02:32.830
是让这个值

01:02:32.830 --> 01:02:33.830
让它跑起来

01:02:33.830 --> 01:02:34.830
让它跑起来

01:02:34.830 --> 01:02:36.830
让这个生成器

01:02:36.830 --> 01:02:37.830
生成的迭代器

01:02:37.830 --> 01:02:38.830
让这个迭代器跑起来

01:02:38.830 --> 01:02:39.830
知道吧

01:02:39.830 --> 01:02:45.980
干嘛呢

01:02:45.980 --> 01:02:46.980
让这个迭代器跑起来

01:02:46.980 --> 01:02:48.980
它返回了一个对象

01:02:48.980 --> 01:02:49.980
这个迭代器

01:02:49.980 --> 01:02:50.980
它返回的一定是这个

01:02:50.980 --> 01:02:51.980
外流和弹

01:02:51.980 --> 01:02:52.980
外流和弹

01:02:52.980 --> 01:02:58.940
然后在这里面

01:02:58.940 --> 01:03:00.940
这个可以把这些值

01:03:00.940 --> 01:03:01.940
这个如果弹结束

01:03:01.940 --> 01:03:02.940
如果是处的话

01:03:02.940 --> 01:03:03.940
因为这个迭代器结束了

01:03:03.940 --> 01:03:05.940
如果没结束的话

01:03:05.940 --> 01:03:06.940
干嘛呢

01:03:06.940 --> 01:03:08.940
所以就用这个一Promise方式

01:03:08.940 --> 01:03:09.940
继续调用它

01:03:10.940 --> 01:03:11.940
所以说有个Single Weight

01:03:11.940 --> 01:03:13.940
它就是Promise的一个法堂

01:03:13.940 --> 01:03:15.940
包括它的一个执行过程

01:03:15.940 --> 01:03:16.940
也是Promise的一个特点

01:03:16.940 --> 01:03:18.940
所以说这个Single Weight

01:03:18.940 --> 01:03:22.510
也属于这个违任务里面

01:03:22.510 --> 01:03:25.020
weight

01:03:25.020 --> 01:03:26.020
当然了

01:03:26.020 --> 01:03:27.020
这个不能单纯这么说

01:03:27.020 --> 01:03:29.020
是完全是看这个寒数定义的

01:03:29.020 --> 01:03:31.020
如果它定义的是一个普通寒数

01:03:31.020 --> 01:03:32.020
那它就是主任务

01:03:32.020 --> 01:03:34.020
它定义的是普通任务

01:03:34.020 --> 01:03:36.020
它就是主任务

01:03:36.020 --> 01:03:37.020
当然可以看回放

01:03:37.020 --> 01:03:38.020
当然可以看回放

01:03:38.020 --> 01:03:39.020
那这个该说不说呢

01:03:39.020 --> 01:03:40.020
给同学们讲的比较难

01:03:40.020 --> 01:03:42.020
但是很值钱

01:03:42.020 --> 01:03:43.020
很值钱

01:03:43.020 --> 01:03:45.020
因为也确实这个地方

01:03:45.020 --> 01:03:46.020
我讲的时候吧

01:03:46.020 --> 01:03:47.020
我能感受到同学们那个无力

01:03:47.020 --> 01:03:48.020
因为我

01:03:48.020 --> 01:03:51.020
我相信这写同学就蒙了一堆

01:03:51.020 --> 01:03:53.020
对 现在都有Single Weight了

01:03:53.020 --> 01:03:54.020
对对对

01:03:54.020 --> 01:03:56.020
我想写到这同学们就蒙一堆是吧

01:03:56.020 --> 01:03:57.020
包括这个Promise为啥这么写

01:03:57.020 --> 01:03:58.020
可能还有蒙了同学

01:03:58.020 --> 01:03:59.020
包括说

01:03:59.020 --> 01:04:01.020
这老师你写的是啥对吧

01:04:01.020 --> 01:04:02.020
我太懂

01:04:02.020 --> 01:04:03.020
这都属于这个

01:04:03.020 --> 01:04:04.020
所谓高级GS部分了

01:04:04.020 --> 01:04:06.020
这个咱就不多说了好吧

01:04:06.020 --> 01:04:07.020
在这堂课呢

01:04:07.020 --> 01:04:08.020
在这堂课呢

01:04:08.020 --> 01:04:10.020
这块最重要的就是这个

01:04:10.020 --> 01:04:13.020
这个这个这个这个这个

01:04:13.020 --> 01:04:15.020
这个NAS

01:04:15.020 --> 01:04:16.020
这个NAS函数

01:04:16.020 --> 01:04:19.780
就是一个CO模块

01:04:19.780 --> 01:04:20.780
就面试的时候

01:04:20.780 --> 01:04:21.780
这个东西挺重要的

01:04:21.780 --> 01:04:22.780
你说Single Weight

01:04:22.780 --> 01:04:24.780
你能说到CO模块

01:04:24.780 --> 01:04:25.780
你能把这个里面

01:04:25.780 --> 01:04:26.780
迭代器的这个过程

01:04:26.780 --> 01:04:27.780
跟面课官讲懂

01:04:27.780 --> 01:04:28.780
那你就很nice了

01:04:28.780 --> 01:04:29.780
因为Single Weight

01:04:29.780 --> 01:04:31.780
用起来很容易

01:04:31.780 --> 01:04:32.780
很容易

01:04:32.780 --> 01:04:36.790
很容易

01:04:36.790 --> 01:04:37.790
这才第二题

01:04:37.790 --> 01:04:38.790
对 没错

01:04:38.790 --> 01:04:39.790
这才第二题

01:04:39.790 --> 01:04:40.790
因为这道题吧

01:04:40.790 --> 01:04:41.790
就是

01:04:41.790 --> 01:04:42.790
不是说单纯的给大家

01:04:42.790 --> 01:04:44.790
讲讲黄任务为任务

01:04:44.790 --> 01:04:45.790
你就完了

01:04:45.790 --> 01:04:46.790
那很简单

01:04:46.790 --> 01:04:47.790
说到的是Single Weight

01:04:47.790 --> 01:04:48.790
对吧

01:04:48.790 --> 01:04:49.790
最近都都用它

01:04:49.790 --> 01:04:50.790
那它的底层是啥呢

01:04:50.790 --> 01:04:52.790
给大家多讲了一些

01:04:54.790 --> 01:04:55.790
OK 那这就干掉

01:04:55.790 --> 01:04:56.790
这也用不上

01:04:56.790 --> 01:05:01.580
OK 第二题

01:05:02.580 --> 01:05:03.580
行了 第二题咱们就这样

01:05:03.580 --> 01:05:04.580
咱们就这样

01:05:04.580 --> 01:05:05.580
就是能听懂多少

01:05:05.580 --> 01:05:06.580
听懂多少

01:05:06.580 --> 01:05:07.580
这个代码之后

01:05:07.580 --> 01:05:08.580
也会发给大家

01:05:08.580 --> 01:05:09.580
好吧

01:05:09.580 --> 01:05:10.580
然后第三题

01:05:10.580 --> 01:05:11.580
第三题咱们V柯总讲

01:05:12.580 --> 01:05:13.580
看了袁老师

01:05:13.580 --> 01:05:14.580
ES6的话

01:05:14.580 --> 01:05:15.580
看着有简单了

01:05:15.580 --> 01:05:16.580
来 第三题

01:05:16.580 --> 01:05:19.340
什么呢

01:05:19.340 --> 01:05:20.340
BFC是吧

01:05:21.340 --> 01:05:22.340
这个咱们讲好多遍了

01:05:22.340 --> 01:05:24.340
我这个快点讲好吗

01:05:25.340 --> 01:05:26.340
你看

01:05:26.340 --> 01:05:27.340
就是你用的时候

01:05:27.340 --> 01:05:28.340
你开发的时候

01:05:28.340 --> 01:05:29.340
你用不用BFC不重要

01:05:29.340 --> 01:05:30.340
但是

01:05:30.340 --> 01:05:31.340
面试真问

01:05:32.340 --> 01:05:33.340
同学你了解BFC吗

01:05:33.340 --> 01:05:34.340
你说一下BFC吗

01:05:34.340 --> 01:05:35.340
是吧

01:05:35.340 --> 01:05:36.340
你就是

01:05:36.340 --> 01:05:37.340
你开发的时候

01:05:37.340 --> 01:05:38.340
你用不用

01:05:38.340 --> 01:05:39.340
你这个你老大也不看

01:05:39.340 --> 01:05:41.340
基本上看不到

01:05:41.340 --> 01:05:42.340
更多的是什么呢

01:05:42.340 --> 01:05:44.340
是这个这个这个这个

01:05:44.340 --> 01:05:45.340
面试的时候会用的

01:05:45.340 --> 01:05:46.340
更多吧

01:05:46.340 --> 01:05:47.340
OK

01:05:47.340 --> 01:05:48.340
再来吧

01:05:48.340 --> 01:05:49.340
那就BFC吧

01:05:51.340 --> 01:05:52.340
不要BFC

01:05:52.340 --> 01:05:53.340
不要BFC就听

01:05:53.340 --> 01:05:54.340
咱们讲微课

01:05:54.340 --> 01:05:55.340
讲那么多遍也不听

01:05:55.340 --> 01:05:56.340
那你真的是

01:05:56.340 --> 01:05:57.340
那个啥了

01:06:00.340 --> 01:06:01.340
来

01:06:01.340 --> 01:06:02.340
不要BFC

01:06:02.340 --> 01:06:03.340
不要BFC来吧

01:06:07.540 --> 01:06:08.540
来

01:06:08.540 --> 01:06:09.540
BFC

01:06:09.540 --> 01:06:10.540
BFC全成什么呢

01:06:10.540 --> 01:06:11.540
Blog

01:06:11.540 --> 01:06:12.540
快耳机

01:06:12.540 --> 01:06:13.540
快耳机

01:06:13.540 --> 01:06:14.540
格式化

01:06:14.540 --> 01:06:15.540
Fore-metting

01:06:15.540 --> 01:06:16.540
Fore-metting

01:06:16.540 --> 01:06:17.540
Contacts

01:06:17.540 --> 01:06:18.540
C1T

01:06:18.540 --> 01:06:19.540
EXT

01:06:19.540 --> 01:06:20.540
快耳机

01:06:20.540 --> 01:06:23.370
上下文

01:06:23.370 --> 01:06:24.370
上下文

01:06:24.370 --> 01:06:25.370
那咋了呢

01:06:25.370 --> 01:06:26.370
你说到这

01:06:26.370 --> 01:06:27.370
没得分

01:06:27.370 --> 01:06:28.370
你只说把它翻译了一下

01:06:28.370 --> 01:06:30.370
那没把它翻译了一下

01:06:30.370 --> 01:06:31.370
这个BFC呢

01:06:32.370 --> 01:06:33.370
BFC

01:06:33.370 --> 01:06:34.370
就是

01:06:34.370 --> 01:06:35.370
这个BFC有个特点

01:06:42.920 --> 01:06:43.920
这个BFC干嘛呢

01:06:43.920 --> 01:06:47.870
它是啥不重要

01:06:47.870 --> 01:06:48.870
它能干啥很重要

01:06:52.820 --> 01:06:55.780
快耳机

01:06:55.780 --> 01:06:56.780
快耳机

01:06:56.780 --> 01:06:57.780
快耳机

01:06:57.780 --> 01:06:58.780
刚把上下文

01:06:58.780 --> 01:07:03.260
它是啥不重要

01:07:03.260 --> 01:07:04.260
它能干啥

01:07:05.260 --> 01:07:06.260
什么呢

01:07:06.260 --> 01:07:07.260
新的渲染区域

01:07:07.260 --> 01:07:08.260
这个

01:07:08.260 --> 01:07:09.260
就是什么呢

01:07:09.260 --> 01:07:10.260
新的

01:07:11.260 --> 01:07:12.260
渲染规则

01:07:14.260 --> 01:07:15.260
新的渲染规则

01:07:15.260 --> 01:07:16.260
BFC

01:07:16.260 --> 01:07:18.260
那咋叫新的渲染规则呢

01:07:18.260 --> 01:07:19.260
有啥特点吗

01:07:19.260 --> 01:07:20.260
有

01:07:20.260 --> 01:07:21.260
不如BFC能做啥事呢

01:07:21.260 --> 01:07:22.260
面试的时候

01:07:22.260 --> 01:07:23.260
咋这点就行了

01:07:23.260 --> 01:07:24.260
干嘛呢

01:07:24.260 --> 01:07:25.260
BFC

01:07:25.260 --> 01:07:26.260
第一个

01:07:26.260 --> 01:07:36.260
这是第一条 第二条 BFC 加上浮动 实现赶紧学老师的水

01:07:36.260 --> 01:07:43.640
BFC加浮动 实现斗篮不举

01:07:43.640 --> 01:07:47.640
那先说第一个 BFC 包括子元素 那啥叫包裹子元素

01:07:47.640 --> 01:07:50.640
啥叫包裹子元素 那子元素正常不及不都能包裹吗

01:07:50.640 --> 01:07:56.980
这里面说的比较特殊的两个 一个是浮动元素

01:07:59.670 --> 01:08:03.670
一个是浮动元素 一个是我们的这个

01:08:05.670 --> 01:08:08.670
就是我们所说的这个麻烦匀塌线问题

01:08:08.670 --> 01:08:12.670
麻烦塌线 那这儿给大家举个例子

01:08:15.670 --> 01:08:21.670
DiV点 father 下面DiV点算 对吧

01:08:21.670 --> 01:08:24.670
无论是浮动元素 还是麻烦塌线

01:08:24.670 --> 01:08:27.670
它都强调的是一个父子关系 然后写些样式

01:08:28.670 --> 01:08:35.970
然后干嘛呢 咱们先来把默认的样式说实话一下

01:08:35.970 --> 01:08:44.300
麻烦匀匀匀 然后这个

01:08:44.300 --> 01:08:51.620
来 father 干嘛呢 宽高100

01:08:51.620 --> 01:08:56.400
你面试的时候 你把这两点跟他说清楚

01:08:56.400 --> 01:08:59.400
并且把这个例子写出来 那就满分 知道吧

01:08:59.400 --> 01:09:02.400
对 麻烦塌线 给大家写例子

01:09:02.400 --> 01:09:05.400
一会儿你看得懂 然后给他来个被颜色

01:09:06.400 --> 01:09:10.400
咱先说浮动 说浮动的话 它不需要高度

01:09:10.400 --> 01:09:12.400
不需要高度 干嘛呢 来个border就行

01:09:13.400 --> 01:09:15.400
这个是GX

01:09:17.400 --> 01:09:22.400
CFA 这是父级元素 然后子级元素点算

01:09:24.400 --> 01:09:30.400
Vis什么的 这个50相速 高度什么的50相速

01:09:31.400 --> 01:09:35.400
正常情况下 再来个被颜色 能看得到它

01:09:35.400 --> 01:09:39.400
FAC 那正常情况下能看得到它 能看到到它

01:09:39.400 --> 01:09:42.400
啥样的 就是这个负级元素 包裹是子元素

01:09:42.400 --> 01:09:46.400
负级元素包裹子元素 就是这个粉色把这个绿色盛开了

01:09:46.400 --> 01:09:48.400
对吧 OK 那干嘛呢 给子元素加个浮动

01:09:48.400 --> 01:09:54.400
display float 加了个浮动

01:09:54.400 --> 01:09:56.400
加浮动之后干嘛呢 你会发现

01:09:56.400 --> 01:09:59.400
负级元素包裹不住 无法包出子元素

01:09:59.400 --> 01:10:01.400
那怎么让负元素包住子元素呢

01:10:01.400 --> 01:10:04.400
你可以选择轻触浮动 当然你可以出发BFC

01:10:04.400 --> 01:10:06.400
在负级上出发BFC怎么出发呢 常用的什么

01:10:06.400 --> 01:10:09.400
All Flow 还得对吧 出发BFC了

01:10:09.400 --> 01:10:12.400
OK 可以包得住 然后包括 除了它还有吗

01:10:12.400 --> 01:10:17.400
有啊 这个Position Absolute 也行啊

01:10:17.400 --> 01:10:19.400
然后还有吗 有啊 啥呢

01:10:20.400 --> 01:10:22.400
咱们的这个 这个

01:10:23.400 --> 01:10:30.840
这个这个这个这个这个

01:10:30.840 --> 01:10:32.840
也行啊 对吧 包括这个同时说Display Table

01:10:32.840 --> 01:10:34.840
那这个用的不太多 它确实可以啊

01:10:34.840 --> 01:10:37.840
因为Display只要不为这个这个这个这个Block都行

01:10:37.840 --> 01:10:40.840
或者一难Block也行 也能包得住

01:10:40.840 --> 01:10:44.840
也能包得住 那这些呢都是用来出发BFC的方式

01:10:44.840 --> 01:10:47.840
出发BFC之后干嘛呢 可以包裹住子元素

01:10:47.840 --> 01:10:50.840
包括说咱们这个Display啊 Blacks

01:10:50.840 --> 01:10:54.840
一样可以啊 都可以包裹啊 都可以包裹

01:10:54.840 --> 01:10:58.840
那同样这些元素也有个特点干嘛呢 出发BFC啊

01:10:58.840 --> 01:11:02.840
但同学们仔细看一下 无论是All Flow 还得Position Float Display

01:11:02.840 --> 01:11:06.840
他们都有专门的一个功能 他们专门的一个功能

01:11:06.840 --> 01:11:09.840
不及设高 那就不叫包裹了同学

01:11:09.840 --> 01:11:11.840
不及设高不叫包裹

01:11:11.840 --> 01:11:15.840
我 我这个元素希望让子元素撑开 能懂吗

01:11:15.840 --> 01:11:19.840
有的时候高度是 高度是通过子元素撑开的

01:11:19.840 --> 01:11:23.840
不是说你设高 这需要子元素撑开的

01:11:23.840 --> 01:11:28.340
那所以说 所以说这个时候就需要不及

01:11:28.340 --> 01:11:31.340
包括住子元素 OK 那在这个地方干嘛呢

01:11:31.340 --> 01:11:33.340
有个专门的属性 CS3提供的

01:11:33.340 --> 01:11:36.340
什么呢 包裹Root 干嘛呢

01:11:36.340 --> 01:11:40.340
这个属性没有任何副作用 但是专门用来出发BFC的

01:11:40.340 --> 01:11:43.340
专门用来出发BFC的

01:11:43.340 --> 01:11:47.340
OK啊 这个是第一个 第一个浮动元素

01:11:47.340 --> 01:11:49.340
就是BFC干嘛可以包裹浮动元素

01:11:49.340 --> 01:11:52.340
Father 通过这个 包括上面这些肉干属性干嘛呢

01:11:52.340 --> 01:11:53.340
可以出发BFC

01:11:53.340 --> 01:11:56.340
BFC可以包裹入浮动元素

01:11:56.340 --> 01:11:58.340
那塌陷呢 也是一样

01:11:58.340 --> 01:12:00.340
塌陷也是一样 把这个住掉

01:12:00.340 --> 01:12:02.340
那啥叫塌陷呢

01:12:02.340 --> 01:12:06.340
那这个负元素来吧 这个宽高 高度来100像素

01:12:06.340 --> 01:12:09.340
来100像素 这个

01:12:09.340 --> 01:12:12.340
没有背景颜色是吧

01:12:12.340 --> 01:12:16.340
背景颜色 CFA

01:12:16.340 --> 01:12:18.340
然后这个是子元素 对吧

01:12:18.340 --> 01:12:22.340
子元素干嘛呢 来一个Margin Top

01:12:22.340 --> 01:12:24.340
100像素

01:12:24.340 --> 01:12:26.340
Margin Top100像素

01:12:26.340 --> 01:12:28.340
这个比较简单啊 对吧

01:12:28.340 --> 01:12:30.340
你会发现 哎呦

01:12:30.340 --> 01:12:33.340
100

01:12:33.340 --> 01:12:35.340
上面这个元素 上面也是100对吧

01:12:35.340 --> 01:12:37.340
那你发现 这个元素

01:12:37.340 --> 01:12:40.340
它并没有说距离的 这个上边框100像素

01:12:40.340 --> 01:12:43.340
而什么呢 距离这个这个这个

01:12:43.340 --> 01:12:45.340
它穿透了附近

01:12:45.340 --> 01:12:47.340
它俩供距离上边界100像素 是吧

01:12:47.340 --> 01:12:49.340
这个地方改成50啊

01:12:49.340 --> 01:12:51.340
50100都行啊

01:12:51.340 --> 01:12:53.340
只不过上面这个距离会变短一点 不变短一点

01:12:53.340 --> 01:12:55.340
但是我希望的是这个元素

01:12:55.340 --> 01:12:57.340
相对于负元素来干嘛呢

01:12:57.340 --> 01:12:58.340
哎 在Margin Top

01:12:58.340 --> 01:13:01.340
它距离负元素的一个上边距

01:13:01.340 --> 01:13:02.340
那这个时候干嘛呢

01:13:02.340 --> 01:13:05.340
你同样可以通过上面的这些方法

01:13:05.340 --> 01:13:08.340
给它包裹住 你看看它

01:13:08.340 --> 01:13:10.340
对吧 这样的话就解决了咱们

01:13:10.340 --> 01:13:12.340
Margin Top线的一个问题

01:13:12.340 --> 01:13:14.340
通过它也行 上面这些都行

01:13:14.340 --> 01:13:16.340
你随便打开一个 都行

01:13:16.340 --> 01:13:19.340
都行 那这个就是两个问题

01:13:19.340 --> 01:13:21.340
BXC可以包裹止元素

01:13:21.340 --> 01:13:23.340
常见的就是浮动元素和塌线

01:13:23.340 --> 01:13:25.340
那至于说老师这个Margin合并呢

01:13:25.340 --> 01:13:28.340
Margin合并就是解决Margin塌线

01:13:28.340 --> 01:13:32.720
包括说你能不能写 不写合并的代码

01:13:32.720 --> 01:13:34.720
这些用个Margin bottom

01:13:34.720 --> 01:13:36.720
这些是两倍的Margin不就完了吗

01:13:36.720 --> 01:13:38.720
这个Margin合并其实

01:13:38.720 --> 01:13:40.720
原理就是解决Margin塌线

01:13:40.720 --> 01:13:43.720
一样的 这个咱就不写例子了

01:13:43.720 --> 01:13:45.720
OK啊 这是上面这个

01:13:45.720 --> 01:13:47.720
什么呢 这个包括

01:13:47.720 --> 01:13:49.720
包括BXC 包括止元素

01:13:49.720 --> 01:13:51.720
那接下来干嘛呢 搞一个

01:13:51.720 --> 01:13:53.720
这个BXC实现灯篮布局

01:13:53.720 --> 01:13:55.720
那其实就是BXC元素

01:13:55.720 --> 01:13:58.720
与BXC元素之间的一个位置关系

01:13:59.720 --> 01:14:03.720
兄弟元素 位置分明

01:14:05.720 --> 01:14:07.720
但这里面有一个特点叫什么

01:14:07.720 --> 01:14:08.720
不是说所有BXC

01:14:08.720 --> 01:14:10.720
包括Position absolute

01:14:10.720 --> 01:14:12.720
包括Float这些BXC元素

01:14:12.720 --> 01:14:14.720
它本身元素还有一些特点

01:14:14.720 --> 01:14:16.720
所以说这里面基本上BXC元素

01:14:16.720 --> 01:14:18.720
加上浮动元素 实现灯篮布局

01:14:18.720 --> 01:14:19.720
来 咱们看一下

01:14:21.720 --> 01:14:23.720
div.ropper

01:14:23.720 --> 01:14:26.720
干嘛呢 div.left

01:14:27.720 --> 01:14:29.720
div.right

01:14:29.720 --> 01:14:31.720
minhg

01:14:31.720 --> 01:14:35.290
然后div.center

01:14:35.290 --> 01:14:37.290
三个元素 三个元素

01:14:37.290 --> 01:14:39.290
上面呢 再来个钥匙

01:14:39.290 --> 01:14:42.660
把上面一个住掉

01:14:42.660 --> 01:14:43.660
来

01:14:43.660 --> 01:14:46.660
干嘛呢 点left

01:14:46.660 --> 01:14:48.660
对 这个元素

01:14:48.660 --> 01:14:50.660
宽度 100 香素

01:14:50.660 --> 01:14:52.660
高度 100 香素

01:14:52.660 --> 01:14:56.550
背影颜色 FAC

01:14:56.550 --> 01:14:59.550
然后同样 我让我这个

01:14:59.550 --> 01:15:04.630
right 一样

01:15:04.630 --> 01:15:06.630
两个元素一样的

01:15:06.630 --> 01:15:08.630
有两个反元素嘛

01:15:08.630 --> 01:15:10.630
因为这个写的比这个浏览器有放大

01:15:10.630 --> 01:15:12.630
做小点 两个100 香素的元素

01:15:12.630 --> 01:15:14.630
干嘛呢 同时给它加个浮动

01:15:14.630 --> 01:15:16.630
loat left

01:15:16.630 --> 01:15:18.630
干嘛呢 会跑到这来

01:15:18.630 --> 01:15:20.630
那接下来干嘛呢 我给这个

01:15:20.630 --> 01:15:23.630
right 加一个loat right

01:15:23.630 --> 01:15:26.630
loat right

01:15:26.630 --> 01:15:28.630
它会跑到这边来

01:15:28.630 --> 01:15:30.630
会跑到这边来 那接下来干嘛呢

01:15:30.630 --> 01:15:32.630
给我们这个center

01:15:32.630 --> 01:15:34.630
我只需要给它一个高度

01:15:34.630 --> 01:15:36.630
100 香素

01:15:36.630 --> 01:15:39.630
150 给它区分开

01:15:39.630 --> 01:15:41.630
然后再来个背影颜色

01:15:43.630 --> 01:15:45.630
FAC 不行

01:15:45.630 --> 01:15:47.630
CFA 这样方能区分开

01:15:47.630 --> 01:15:50.630
来 看见一下 下面是这个

01:15:50.630 --> 01:15:52.630
什么呢 下面是这个center元素

01:15:52.630 --> 01:15:54.630
由于它俩图立温档流 它飘起来了

01:15:54.630 --> 01:15:56.630
所以说在下面这个元素上面

01:15:56.630 --> 01:15:58.630
这是温档流的一个概念

01:15:58.630 --> 01:16:00.630
然后在这儿

01:16:00.630 --> 01:16:02.630
干嘛呢 我们这个center

01:16:02.630 --> 01:16:04.630
让它出发BXE 干嘛呢

01:16:04.630 --> 01:16:06.630
你可以说overflow还等

01:16:06.630 --> 01:16:08.630
干嘛呢 实现

01:16:08.630 --> 01:16:10.630
实现这样的一个三蓝布局

01:16:10.630 --> 01:16:12.630
实现这样的三蓝布局

01:16:12.630 --> 01:16:14.630
左右固定 中间自适应

01:16:14.630 --> 01:16:16.630
左右固定 中间自适应

01:16:17.630 --> 01:16:19.630
当然说了 那除了它还有嘛

01:16:19.630 --> 01:16:20.630
包括说刚才说的

01:16:20.630 --> 01:16:22.630
display follow route 一样的

01:16:22.630 --> 01:16:24.630
出发 专门用来出发BXE的属性

01:16:24.630 --> 01:16:26.630
而且这个干嘛呢 把它去掉

01:16:26.630 --> 01:16:28.630
就是两蓝布局

01:16:28.630 --> 01:16:30.630
我们的右侧固定

01:16:30.630 --> 01:16:32.630
左侧自适应

01:16:32.630 --> 01:16:34.630
那同样 你把它去掉 把它还原回来

01:16:34.630 --> 01:16:37.630
就是左侧固定 右侧自适应

01:16:37.630 --> 01:16:40.630
无论两个三蓝 这咱们都写出来了

01:16:40.630 --> 01:16:42.630
非常经典

01:16:42.630 --> 01:16:45.630
这个就是我们BXE的两个特征

01:16:45.630 --> 01:16:47.630
把这个你打给面试官 那绝对满

01:16:47.630 --> 01:16:51.630
而且你就是对这个已经理解得很独特了

01:16:51.630 --> 01:16:53.630
能懂吧 理解得很独到了

01:16:53.630 --> 01:16:55.630
就是说BXE包固子元素

01:16:55.630 --> 01:16:57.630
强调的是浮动元素 它现在合并

01:16:57.630 --> 01:16:59.630
其实都用的是BXE

01:16:59.630 --> 01:17:01.630
然后还有就是 刚才咱们实现的这个

01:17:01.630 --> 01:17:03.630
多蓝布局 两蓝也好 三蓝也好

01:17:03.630 --> 01:17:04.630
这个能听懂吗

01:17:04.630 --> 01:17:06.630
我应该微客都讲了不止一遍了

01:17:06.630 --> 01:17:07.630
同学们

01:17:07.630 --> 01:17:08.630
这个非常经典

01:17:08.630 --> 01:17:10.630
每个同学有希望你背一背的

01:17:10.630 --> 01:17:12.630
所以你们以后呢 不如用不上

01:17:12.630 --> 01:17:14.630
你说上面那个这个任务这个比较难

01:17:14.630 --> 01:17:16.630
但这个BXE还是很简单的

01:17:16.630 --> 01:17:19.630
顺便布局跟这个差一点

01:17:19.630 --> 01:17:20.630
差一点

01:17:21.630 --> 01:17:23.630
不用控制 不用控制

01:17:23.630 --> 01:17:24.630
因为它ROPER本来

01:17:24.630 --> 01:17:26.630
这个ROPER本来就是溯元素

01:17:26.630 --> 01:17:28.630
本来就快元素 跟那个没关系

01:17:28.630 --> 01:17:31.630
原码的话呢 在课后呢

01:17:31.630 --> 01:17:32.630
去找点学过的药就可以了

01:17:32.630 --> 01:17:34.630
对 咱们之后会发到学里

01:17:34.630 --> 01:17:35.630
会发到学里

01:17:35.630 --> 01:17:43.770
对对对

01:17:44.770 --> 01:17:46.770
OK啊 咱继续

01:17:47.770 --> 01:17:50.770
再一次再一次 其他就有点办了

01:17:50.770 --> 01:17:54.080
那指定的呀

01:17:54.080 --> 01:17:56.080
有群的同学 有群的

01:17:56.080 --> 01:17:57.080
来来来 加这个

01:17:57.080 --> 01:17:58.080
这个课没有群

01:17:58.080 --> 01:17:59.080
这个课是这样的

01:17:59.080 --> 01:18:01.080
来来来 我先停

01:18:01.080 --> 01:18:02.080
我要许老师说一会

01:18:02.080 --> 01:18:03.080
我一直在讲 喝口水啊

01:18:03.080 --> 01:18:04.080
喝口水

01:18:04.080 --> 01:18:05.080
同学们 同学们 同学

01:18:05.080 --> 01:18:07.080
是刚进咱们这个直播间 是吧

01:18:07.080 --> 01:18:08.080
咱们这个群呢

01:18:08.080 --> 01:18:09.080
咱们这个课

01:18:09.080 --> 01:18:10.080
相当于一个小的

01:18:10.080 --> 01:18:12.080
这样的一个公开课一样

01:18:12.080 --> 01:18:14.080
它就是给同学们加了这么一个餐

01:18:14.080 --> 01:18:16.080
给同学们去分享了这样的一个

01:18:16.080 --> 01:18:20.080
从咱们这个大厂的比试题

01:18:20.080 --> 01:18:23.080
两节课 每节课讲七道题

01:18:23.080 --> 01:18:24.080
压力特别大

01:18:24.080 --> 01:18:25.080
因为每道题

01:18:25.080 --> 01:18:27.080
我们这个丁老师讲的特别细

01:18:27.080 --> 01:18:29.080
不是告诉你这题答案是什么

01:18:29.080 --> 01:18:30.080
就OK了

01:18:30.080 --> 01:18:31.080
而是讲这个原理

01:18:31.080 --> 01:18:33.080
讲这底层 讲这东西怎么去用

01:18:33.080 --> 01:18:35.080
它是知识点的来龙去脉

01:18:35.080 --> 01:18:37.080
争取这样同学们

01:18:37.080 --> 01:18:38.080
哪怕你是有点基础

01:18:38.080 --> 01:18:39.080
能让你听得懂

01:18:39.080 --> 01:18:40.080
也是我们独一

01:18:40.080 --> 01:18:41.080
为做教育来讲

01:18:41.080 --> 01:18:43.080
同学真的能够学到知识 是不是

01:18:43.080 --> 01:18:44.080
那么这次呢

01:18:44.080 --> 01:18:46.080
也是助力这个金三银四

01:18:46.080 --> 01:18:47.080
这样的一个招聘剂

01:18:47.080 --> 01:18:48.080
把这个题拿出来

01:18:48.080 --> 01:18:49.080
说不定你们现在去面试

01:18:49.080 --> 01:18:50.080
明天去面试碰到这道题

01:18:50.080 --> 01:18:51.080
你们就转到了

01:18:51.080 --> 01:18:52.080
你们就可能打出来了

01:18:52.080 --> 01:18:54.080
就有可能被录取 对不对

01:18:54.080 --> 01:18:55.080
但这只是一个巧合

01:18:55.080 --> 01:18:56.080
但我们重点是

01:18:56.080 --> 01:18:58.080
希望同学们能通过这个知识点

01:18:58.080 --> 01:19:00.080
能够挖取这个知识点背后的东西

01:19:00.080 --> 01:19:03.080
我们在整个的这个学习过程当中

01:19:03.080 --> 01:19:04.080
我们知道什么东西

01:19:04.080 --> 01:19:05.080
这个东西是知己然

01:19:05.080 --> 01:19:06.080
还有知己所欲然

01:19:06.080 --> 01:19:07.080
并不是仅仅告诉你答案而已

01:19:07.080 --> 01:19:08.080
所以说这段课

01:19:08.080 --> 01:19:09.080
讲到就很慢了

01:19:09.080 --> 01:19:10.080
还没讲完

01:19:10.080 --> 01:19:11.080
就算说实验很长

01:19:11.080 --> 01:19:13.080
但希望同学们能够好好听

01:19:13.080 --> 01:19:14.080
我相信你们收获

01:19:14.080 --> 01:19:15.080
一定会很大的

01:19:15.080 --> 01:19:16.080
那么这个课是

01:19:16.080 --> 01:19:17.080
我俩是谁批

01:19:17.080 --> 01:19:18.080
没有

01:19:18.080 --> 01:19:19.080
没有进这个

01:19:19.080 --> 01:19:21.080
没有 我没有在这个单独的这个课

01:19:21.080 --> 01:19:22.080
进一个群

01:19:22.080 --> 01:19:24.080
就是在公益群里面

01:19:24.080 --> 01:19:25.080
给大家发一个通知

01:19:25.080 --> 01:19:26.080
让大家听 是吧

01:19:26.080 --> 01:19:28.080
本来这个课就是一块九

01:19:28.080 --> 01:19:29.080
你们就是

01:19:29.080 --> 01:19:31.080
一块九都买什么

01:19:31.080 --> 01:19:32.080
现在一块九什么也买不到

01:19:32.080 --> 01:19:33.080
对不对 什么也买不到

01:19:33.080 --> 01:19:34.080
半天可乐

01:19:34.080 --> 01:19:35.080
但是鱼乐已经买不到

01:19:35.080 --> 01:19:36.080
感觉这样

01:19:36.080 --> 01:19:38.080
就大家能感受到这么好的一个课程

01:19:38.080 --> 01:19:39.080
真的是很赚

01:19:39.080 --> 01:19:40.080
所以说呢

01:19:40.080 --> 01:19:41.080
也不是赚

01:19:41.080 --> 01:19:42.080
就说你大家能好听

01:19:42.080 --> 01:19:43.080
只要你们能好听

01:19:43.080 --> 01:19:44.080
你们丁老师

01:19:44.080 --> 01:19:45.080
你们没白讲

01:19:45.080 --> 01:19:46.080
没白讲

01:19:46.080 --> 01:19:47.080
好 同学们

01:19:47.080 --> 01:19:48.080
咱继续

01:19:48.080 --> 01:19:49.080
继续 好吧

01:19:49.080 --> 01:19:50.080
没关系 不能说了

01:19:50.080 --> 01:19:51.080
然后这个

01:19:51.080 --> 01:19:53.080
有同学说说弹性布局

01:19:53.080 --> 01:19:54.080
这么告诉你同学

01:19:54.080 --> 01:19:55.080
这么写的撒篮布局

01:19:55.080 --> 01:19:57.080
是兼容性最好的

01:19:57.080 --> 01:19:58.080
如果有机会你入职腾讯

01:19:58.080 --> 01:19:59.080
腾讯哪个部门呢

01:19:59.080 --> 01:20:00.080
腾讯新闻

01:20:00.080 --> 01:20:01.080
腾讯新闻

01:20:01.080 --> 01:20:03.080
腾讯新闻我再说一遍

01:20:03.080 --> 01:20:04.080
你就别管说

01:20:04.080 --> 01:20:05.080
什么收入新闻

01:20:05.080 --> 01:20:06.080
各种新闻

01:20:06.080 --> 01:20:07.080
必然要向下兼容

01:20:07.080 --> 01:20:09.080
因为政府

01:20:09.080 --> 01:20:11.080
有钱它不买电脑你信吗

01:20:11.080 --> 01:20:12.080
对吧

01:20:12.080 --> 01:20:13.080
那不买电脑怎么样

01:20:13.080 --> 01:20:14.080
就会

01:20:14.080 --> 01:20:15.080
它会用一个很老的浏览器

01:20:15.080 --> 01:20:16.080
你写的再画画

01:20:16.080 --> 01:20:17.080
不好意思 浏览器识别不了

01:20:17.080 --> 01:20:18.080
也就是说我之前在搜狐

01:20:18.080 --> 01:20:20.080
我们老大网友

01:20:20.080 --> 01:20:23.080
IE8 华东验证码第一人

01:20:23.080 --> 01:20:24.080
啥样子呢

01:20:24.080 --> 01:20:25.080
在浏览器里面

01:20:25.080 --> 01:20:26.080
写了一个操作系统

01:20:26.080 --> 01:20:27.080
用C语言

01:20:27.080 --> 01:20:28.080
编一C语言

01:20:28.080 --> 01:20:29.080
干嘛呢

01:20:29.080 --> 01:20:30.080
就是在页面中

01:20:30.080 --> 01:20:34.080
用GS 写了一个操作系统

01:20:34.080 --> 01:20:35.080
编一C语言

01:20:35.080 --> 01:20:36.080
用C语言

01:20:36.080 --> 01:20:37.080
控制实现了一个

01:20:37.080 --> 01:20:38.080
页面华东窗口这样的效果

01:20:38.080 --> 01:20:40.080
那都起飞了

01:20:41.080 --> 01:20:42.080
我再说一遍

01:20:42.080 --> 01:20:44.080
别问 这个是个人有路过吗

01:20:44.080 --> 01:20:46.080
首先 咱们公开直播课

01:20:46.080 --> 01:20:47.080
不是任何付费的课程

01:20:47.080 --> 01:20:48.080
都是没有回放的

01:20:48.080 --> 01:20:49.080
但是咱们这个课

01:20:49.080 --> 01:20:50.080
是专门给大家提供了

01:20:50.080 --> 01:20:52.080
这样的一个回放功能

01:20:52.080 --> 01:20:53.080
你不用担心没有回放的问题

01:20:53.080 --> 01:20:54.080
先好好听

01:20:54.080 --> 01:20:56.080
能来听比你看回放

01:20:56.080 --> 01:20:57.080
就好多了

01:20:57.080 --> 01:20:58.080
你有这么多

01:20:58.080 --> 01:20:59.080
回放视频你也不看

01:20:59.080 --> 01:21:01.080
就跟买很多书一样

01:21:01.080 --> 01:21:02.080
买很多书放家里你也不看

01:21:02.080 --> 01:21:03.080
对

01:21:03.080 --> 01:21:05.080
就是大家就是

01:21:05.080 --> 01:21:06.080
这张照片

01:21:06.080 --> 01:21:07.080
好东西也好

01:21:07.080 --> 01:21:08.080
对吧

01:21:08.080 --> 01:21:09.080
看着听好

01:21:09.080 --> 01:21:10.080
然后那个书放家吃回

01:21:10.080 --> 01:21:11.080
是吧

01:21:11.080 --> 01:21:12.080
不都是这样吗

01:21:12.080 --> 01:21:13.080
能来听 弄好听

01:21:13.080 --> 01:21:14.080
对 你能来听就好好听

01:21:14.080 --> 01:21:16.080
不要 就是做事

01:21:16.080 --> 01:21:18.080
我们一定要拼尽全力

01:21:18.080 --> 01:21:19.080
不要落想

01:21:19.080 --> 01:21:20.080
给自己留后手

01:21:20.080 --> 01:21:21.080
有路过是不是

01:21:21.080 --> 01:21:22.080
我现在就可以不认真听了

01:21:22.080 --> 01:21:23.080
跟那个没关系

01:21:23.080 --> 01:21:24.080
我先周末

01:21:24.080 --> 01:21:25.080
我先玩一玩

01:21:25.080 --> 01:21:26.080
等我有时间

01:21:26.080 --> 01:21:27.080
那完全是两个状态

01:21:27.080 --> 01:21:28.080
别人都已经就业了

01:21:28.080 --> 01:21:29.080
你还在

01:21:29.080 --> 01:21:30.080
我才能翻书放家

01:21:30.080 --> 01:21:31.080
对

01:21:31.080 --> 01:21:32.080
意义并不大

01:21:32.080 --> 01:21:33.080
而且你既然选择来了

01:21:33.080 --> 01:21:34.080
这么长时间

01:21:34.080 --> 01:21:35.080
咱多少学的东西

01:21:35.080 --> 01:21:36.080
没白来

01:21:37.080 --> 01:21:38.080
好了 这个玩事

01:21:38.080 --> 01:21:39.080
第三题玩事

01:21:39.080 --> 01:21:40.080
第三题玩事

01:21:40.080 --> 01:21:41.080
这个第四题

01:21:41.080 --> 01:21:43.080
给大家看第四题提供

01:21:43.080 --> 01:21:44.080
这个 这条题

01:21:44.080 --> 01:21:45.080
我相信很多图片

01:21:45.080 --> 01:21:46.080
那么懵的是啥 是吧

01:21:46.080 --> 01:21:47.080
来

01:21:47.080 --> 01:21:48.080
第四题

01:21:48.080 --> 01:21:49.080
第四题是啥

01:21:49.080 --> 01:21:50.080
这个徐老师

01:21:50.080 --> 01:21:51.080
你感觉第四题

01:21:51.080 --> 01:21:52.080
考的是啥

01:21:52.080 --> 01:21:53.080
我觉得考的是

01:21:53.080 --> 01:21:54.080
包装类的一个知识点

01:21:54.080 --> 01:21:55.080
对吧

01:21:55.080 --> 01:21:57.080
你们谁说徐老师技术不好

01:21:57.080 --> 01:21:58.080
我打死他

01:21:58.080 --> 01:22:00.080
包装类 原型

01:22:00.080 --> 01:22:01.080
包装类 原型

01:22:01.080 --> 01:22:02.080
时间太长了

01:22:02.080 --> 01:22:04.080
包装类 原型

01:22:04.080 --> 01:22:05.080
就是给大家选的

01:22:05.080 --> 01:22:06.080
这些方法都很经典

01:22:06.080 --> 01:22:07.080
那其实这条题

01:22:07.080 --> 01:22:08.080
不难 对吧

01:22:08.080 --> 01:22:09.080
就什么呢

01:22:09.080 --> 01:22:10.080
物而一个

01:22:10.080 --> 01:22:11.080
这个

01:22:11.080 --> 01:22:12.080
什么呢

01:22:12.080 --> 01:22:13.080
物而一个

01:22:13.080 --> 01:22:14.080
不这样

01:22:14.080 --> 01:22:15.080
咱也不说这个事

01:22:15.080 --> 01:22:16.080
跟同学们讲一个

01:22:16.080 --> 01:22:17.080
不是万个职员

01:22:17.080 --> 01:22:19.080
咱们杜一的快乐职员

01:22:19.080 --> 01:22:20.080
你们说谁

01:22:20.080 --> 01:22:21.080
快乐职员

01:22:21.080 --> 01:22:22.080
不是说谁

01:22:22.080 --> 01:22:23.080
快乐职员

01:22:23.080 --> 01:22:24.080
谁呢

01:22:24.080 --> 01:22:25.080
邓哥

01:22:25.080 --> 01:22:26.080
邓哥 成哥

01:22:26.080 --> 01:22:27.080
对吧

01:22:27.080 --> 01:22:28.080
邓哥 成哥

01:22:28.080 --> 01:22:29.080
成哥

01:22:29.080 --> 01:22:30.080
成哥也很快

01:22:30.080 --> 01:22:31.080
因为大家

01:22:31.080 --> 01:22:32.080
就是听过咱们公开的同学

01:22:32.080 --> 01:22:33.080
对成哥很了解

01:22:33.080 --> 01:22:34.080
咱们不多说了

01:22:34.080 --> 01:22:35.080
那为啥说

01:22:35.080 --> 01:22:36.080
这道题跟成哥

01:22:36.080 --> 01:22:38.080
包括这快乐职员有关呢

01:22:38.080 --> 01:22:39.080
因为成哥大家都知道

01:22:39.080 --> 01:22:40.080
人是一个

01:22:40.080 --> 01:22:41.080
人如旗帅

01:22:41.080 --> 01:22:42.080
对吧

01:22:42.080 --> 01:22:43.080
人很帅的一个人

01:22:43.080 --> 01:22:44.080
对吧

01:22:44.080 --> 01:22:45.080
当上来

01:22:45.080 --> 01:22:46.080
给大家处理这样的题

01:22:46.080 --> 01:22:47.080
物而一个

01:22:47.080 --> 01:22:48.080
STR

01:22:48.080 --> 01:22:49.080
等于成哥很帅

01:22:49.080 --> 01:22:51.460
是吧

01:22:51.460 --> 01:22:52.460
成哥很帅

01:22:52.460 --> 01:22:53.460
成哥很帅

01:22:53.460 --> 01:22:54.460
干嘛呢

01:22:54.460 --> 01:22:55.460
很坏

01:22:55.460 --> 01:22:56.460
STR等于3

01:22:56.460 --> 01:22:57.460
等于3

01:22:57.460 --> 01:22:58.460
然后输出一下

01:22:58.460 --> 01:22:59.460
STR

01:22:59.460 --> 01:23:00.460
并且告诉大家

01:23:00.460 --> 01:23:01.460
什么

01:23:01.460 --> 01:23:02.460
浏览器是不会骗人的

01:23:02.460 --> 01:23:03.460
对吧

01:23:03.460 --> 01:23:04.460
浏览器是不会骗人的

01:23:04.460 --> 01:23:05.460
然后这个

01:23:05.460 --> 01:23:07.460
最容易得出来的结果

01:23:07.460 --> 01:23:08.460
浏览器

01:23:08.460 --> 01:23:10.460
浏览器是不会骗人的

01:23:10.460 --> 01:23:11.460
成哥很帅

01:23:11.460 --> 01:23:12.460
是吧

01:23:12.460 --> 01:23:13.460
是吧

01:23:13.460 --> 01:23:15.460
如果看到咱们公开课的时候

01:23:15.460 --> 01:23:17.460
有的是看到这个公开课的时候

01:23:17.460 --> 01:23:18.460
成哥讲过这个例子

01:23:18.460 --> 01:23:19.460
这个例子绝对听过

01:23:19.460 --> 01:23:20.460
只要听过咱们公开课的

01:23:20.460 --> 01:23:21.460
一定听过

01:23:21.460 --> 01:23:23.460
所以说我把它称之为快乐职员

01:23:23.460 --> 01:23:24.460
公开课还没有

01:23:24.460 --> 01:23:25.460
谁没有听过

01:23:25.460 --> 01:23:26.460
应该都听过

01:23:26.460 --> 01:23:27.460
肯定会讲过这个

01:23:27.460 --> 01:23:28.460
肯定会讲过这个

01:23:28.460 --> 01:23:29.460
对吧

01:23:29.460 --> 01:23:30.460
我上次来咱们不一学习的人

01:23:30.460 --> 01:23:31.460
这个课应该都听过

01:23:31.460 --> 01:23:32.460
行了

01:23:32.460 --> 01:23:33.460
所以说就简单复习

01:23:33.460 --> 01:23:34.460
这道题跟它很像

01:23:34.460 --> 01:23:35.460
啥样呢

01:23:35.460 --> 01:23:36.460
先把这个题写出来

01:23:36.460 --> 01:23:37.460
因为只能写一行

01:23:37.460 --> 01:23:38.460
问一个A

01:23:38.460 --> 01:23:40.460
就问一个number等于5

01:23:40.460 --> 01:23:41.460
然后干嘛呢

01:23:41.460 --> 01:23:45.460
让这个number.add3.

01:23:45.460 --> 01:23:46.460
这个这个这个

01:23:46.460 --> 01:23:47.460
这个这个这个

01:23:47.460 --> 01:23:48.460
这个那个简法

01:23:48.460 --> 01:23:50.460
简法是什么

01:23:50.460 --> 01:23:53.460
minus

01:23:53.460 --> 01:23:56.460
minus

01:23:56.460 --> 01:23:57.460
其实就是

01:23:57.460 --> 01:23:59.460
实现一个

01:23:59.460 --> 01:24:01.460
5加3

01:24:01.460 --> 01:24:02.460
-2的一个过程

01:24:02.460 --> 01:24:04.460
5加3-2的一个过程

01:24:04.460 --> 01:24:05.460
而且这里面干嘛呢

01:24:05.460 --> 01:24:08.900
有链式调用对吧

01:24:08.900 --> 01:24:09.900
链式调用

01:24:09.900 --> 01:24:10.900
对吧

01:24:10.900 --> 01:24:12.900
我可以调一个再调一个

01:24:12.900 --> 01:24:14.900
调一个再调一个

01:24:14.900 --> 01:24:15.900
OK啊

01:24:15.900 --> 01:24:16.900
那是这个呢

01:24:16.900 --> 01:24:17.900
就是咱们这道题的一个重点

01:24:17.900 --> 01:24:19.900
那说到这咱得继续往下来

01:24:19.900 --> 01:24:20.900
为啥这么说呢

01:24:20.900 --> 01:24:21.900
同学们问个事呢

01:24:21.900 --> 01:24:22.900
我们在学习

01:24:22.900 --> 01:24:23.900
GS当中的变量

01:24:23.900 --> 01:24:25.900
别考虑其他的

01:24:25.900 --> 01:24:27.900
学习这个GS变量的时候

01:24:27.900 --> 01:24:28.900
来

01:24:28.900 --> 01:24:29.900
咱们考虑一个事

01:24:29.900 --> 01:24:30.900
考虑一个事

01:24:30.900 --> 01:24:31.900
那啥呢

01:24:31.900 --> 01:24:32.900
我们变量分为

01:24:32.900 --> 01:24:34.900
原始值和引用值

01:24:34.900 --> 01:24:39.210
引用值就是所谓的地址是吧

01:24:39.210 --> 01:24:40.210
引用值

01:24:40.210 --> 01:24:41.210
那么在这里面

01:24:41.210 --> 01:24:43.210
原始值干嘛呢

01:24:43.210 --> 01:24:45.210
是不能干嘛呢

01:24:45.210 --> 01:24:47.210
调用方法和属性的

01:24:47.210 --> 01:24:52.160
原始值是不能调用方法和属性的

01:24:52.160 --> 01:24:53.160
一就是以

01:24:53.160 --> 01:24:54.160
一没有其他内容

01:24:54.160 --> 01:24:56.160
要不它就不叫原始值了

01:24:56.160 --> 01:24:58.160
要不它就不叫原始值了

01:24:58.160 --> 01:24:59.160
那你说对吧

01:24:59.160 --> 01:25:01.160
那我能不能给这个自付串

01:25:01.160 --> 01:25:02.160
干嘛

01:25:02.160 --> 01:25:05.160
这个

01:25:05.160 --> 01:25:08.600
成个真帅

01:25:08.600 --> 01:25:09.600
干嘛呢

01:25:09.600 --> 01:25:11.600
我希望访问他这样的一个程度

01:25:11.600 --> 01:25:12.600
对吧

01:25:12.600 --> 01:25:13.600
那原则上

01:25:13.600 --> 01:25:14.600
原始值

01:25:14.600 --> 01:25:16.600
它是没有属性和方法的

01:25:16.600 --> 01:25:17.600
你这么调用

01:25:17.600 --> 01:25:18.600
它也是抱错的

01:25:18.600 --> 01:25:19.600
原

01:25:19.600 --> 01:25:21.600
这个原始值没有

01:25:21.600 --> 01:25:22.600
那这个时候

01:25:22.600 --> 01:25:23.600
浏览器底层干嘛

01:25:23.600 --> 01:25:24.600
给它做了一个处理

01:25:24.600 --> 01:25:25.600
干嘛呢

01:25:25.600 --> 01:25:26.600
你没有

01:25:26.600 --> 01:25:27.600
但是我还不能让它抱错

01:25:27.600 --> 01:25:28.600
咋办

01:25:28.600 --> 01:25:34.090
把自付串

01:25:34.090 --> 01:25:36.090
转换成

01:25:36.090 --> 01:25:44.620
自付串类型的对象

01:25:44.620 --> 01:25:45.620
那对象就有属性

01:25:45.620 --> 01:25:47.620
对象就有方法了吧

01:25:47.620 --> 01:25:48.620
对吧

01:25:48.620 --> 01:25:49.620
那就把自付串

01:25:49.620 --> 01:25:50.620
转换成自付串类型的对象

01:25:50.620 --> 01:25:51.620
那怎么转呢

01:25:51.620 --> 01:25:52.620
New一个

01:25:52.620 --> 01:25:54.620
sprint

01:25:54.620 --> 01:25:55.620
那这个呢

01:25:55.620 --> 01:25:56.620
就是咱们所说的包容类

01:25:56.620 --> 01:25:57.620
那对于这个

01:25:57.620 --> 01:25:58.620
自付串也好

01:25:58.620 --> 01:25:59.620
对于数字也好

01:25:59.620 --> 01:26:00.620
我们都有

01:26:00.620 --> 01:26:01.620
NewSprint

01:26:01.620 --> 01:26:04.190
NewNumber

01:26:04.190 --> 01:26:05.190
以及NewBluing

01:26:05.190 --> 01:26:06.190
那原则上

01:26:06.190 --> 01:26:07.190
这撒货

01:26:07.190 --> 01:26:08.190
这撒货

01:26:08.190 --> 01:26:09.190
原始值

01:26:09.190 --> 01:26:10.190
自付串

01:26:10.190 --> 01:26:11.190
数字和Bluing

01:26:11.190 --> 01:26:12.190
它本身

01:26:12.190 --> 01:26:14.190
那通过调用这样的一个方法

01:26:14.190 --> 01:26:15.190
别管显示

01:26:15.190 --> 01:26:16.190
还是隐尸调用

01:26:16.190 --> 01:26:17.190
干嘛呢

01:26:17.190 --> 01:26:18.190
把它转换成

01:26:18.190 --> 01:26:21.190
转换成对应类型的对象

01:26:21.190 --> 01:26:24.190
转换成对应类型的对象

01:26:24.190 --> 01:26:25.190
对啊

01:26:25.190 --> 01:26:27.190
原始值对类面就是引用值

01:26:27.190 --> 01:26:30.190
因为我们这里面的属性

01:26:30.190 --> 01:26:31.190
只有两个

01:26:31.190 --> 01:26:32.190
一个叫原始值

01:26:32.190 --> 01:26:33.190
一个叫引用值

01:26:33.190 --> 01:26:35.700
没有其他

01:26:35.700 --> 01:26:37.700
那你就像这个Number 15

01:26:37.700 --> 01:26:38.700
它本身是什么

01:26:38.700 --> 01:26:40.700
原始值

01:26:40.700 --> 01:26:42.700
那能让它调用方法

01:26:42.700 --> 01:26:44.700
那必须先把它干嘛呢

01:26:44.700 --> 01:26:45.700
转换成引用值

01:26:45.700 --> 01:26:48.700
那有说Name.add

01:26:49.700 --> 01:26:51.700
实际上是这样的

01:26:51.700 --> 01:26:53.700
实际上是

01:26:53.700 --> 01:26:56.700
NewNumber

01:26:56.700 --> 01:26:58.700
NewMbr

01:26:58.700 --> 01:26:59.700
Number什么呢

01:26:59.700 --> 01:27:00.700
Name

01:27:00.700 --> 01:27:02.700
然后点Add

01:27:02.700 --> 01:27:04.700
NewNumberName.add

01:27:04.700 --> 01:27:06.700
把它转换成数字类型的对象

01:27:06.700 --> 01:27:08.700
然后再调用 add 方法

01:27:08.700 --> 01:27:10.700
再调用 add 方法

01:27:10.700 --> 01:27:11.700
那在这里面

01:27:11.700 --> 01:27:13.700
那既然说数字

01:27:13.700 --> 01:27:14.700
那数字

01:27:14.700 --> 01:27:15.700
数字1

01:27:15.700 --> 01:27:16.700
那它对应的什么呢

01:27:16.700 --> 01:27:17.700
我刚才说了是Number

01:27:17.700 --> 01:27:18.700
对吧

01:27:18.700 --> 01:27:19.700
Number

01:27:19.700 --> 01:27:20.700
Number是个

01:27:20.700 --> 01:27:21.700
是个构作函数

01:27:21.700 --> 01:27:22.700
那构作函数就会啥

01:27:22.700 --> 01:27:24.700
有原型啊

01:27:24.700 --> 01:27:25.700
有原型啊

01:27:25.700 --> 01:27:26.700
那这道题

01:27:26.700 --> 01:27:28.700
就说到原型上的一个编程

01:27:28.700 --> 01:27:29.700
能不能

01:27:29.700 --> 01:27:30.700
哎

01:27:30.700 --> 01:27:31.700
这个东西

01:27:31.700 --> 01:27:32.700
这个提示的好可言

01:27:32.700 --> 01:27:37.610
Number

01:27:37.610 --> 01:27:38.610
Prototype

01:27:38.610 --> 01:27:39.610
点什么呢

01:27:39.610 --> 01:27:40.610
Add 方法

01:27:40.610 --> 01:27:41.610
这个Add 方法里面

01:27:41.610 --> 01:27:43.610
会传一个value

01:27:43.610 --> 01:27:44.610
无非就计算

01:27:44.610 --> 01:27:45.610
它这样的一个结果吧

01:27:45.610 --> 01:27:46.610
对吧

01:27:46.610 --> 01:27:47.610
计算它这样的结果

01:27:47.610 --> 01:27:48.610
干嘛呢

01:27:48.610 --> 01:27:49.610
Zs

01:27:49.610 --> 01:27:50.610
Zs

01:27:50.610 --> 01:27:51.610
谁调用

01:27:51.610 --> 01:27:52.610
谁是这个Zs对吧

01:27:52.610 --> 01:27:53.610
那Zs 干嘛呢

01:27:53.610 --> 01:27:54.610
就相当于

01:27:54.610 --> 01:27:56.610
当前的这个5

01:27:56.610 --> 01:27:57.610
对应的一个

01:27:57.610 --> 01:27:59.610
数字类型的对象

01:27:59.610 --> 01:28:00.610
那你说这地方

01:28:00.610 --> 01:28:01.610
你可以直接返回

01:28:01.610 --> 01:28:02.610
Zs

01:28:02.610 --> 01:28:03.610
加value

01:28:03.610 --> 01:28:04.610
可不可以

01:28:04.610 --> 01:28:05.610
可以

01:28:05.610 --> 01:28:06.610
直播这里面

01:28:06.610 --> 01:28:10.560
设计到一个什么呢

01:28:10.560 --> 01:28:12.560
等于一个方式

01:28:12.560 --> 01:28:14.560
等于方式

01:28:15.560 --> 01:28:16.560
这个地方直接返回

01:28:16.560 --> 01:28:17.560
这个直接返回

01:28:17.560 --> 01:28:18.560
这个Zs

01:28:18.560 --> 01:28:19.560
跟我们这个value相加

01:28:19.560 --> 01:28:20.560
可以

01:28:20.560 --> 01:28:21.560
那这里面设计到什么呢

01:28:21.560 --> 01:28:22.560
一个Zs 本身对象

01:28:22.560 --> 01:28:23.560
对吧

01:28:23.560 --> 01:28:24.560
引用值

01:28:24.560 --> 01:28:29.000
引用值

01:28:29.000 --> 01:28:31.000
加上原始值

01:28:31.000 --> 01:28:33.000
引用值加上原始值

01:28:33.000 --> 01:28:34.000
那这里面

01:28:34.000 --> 01:28:35.000
其实它本身上是

01:28:35.000 --> 01:28:40.190
Zs.value of

01:28:40.190 --> 01:28:42.190
value of 函数

01:28:42.190 --> 01:28:43.190
就这个

01:28:43.190 --> 01:28:44.190
调用这个方法

01:28:44.190 --> 01:28:45.190
给它转换成

01:28:45.190 --> 01:28:46.190
就是

01:28:46.190 --> 01:28:47.190
原始值

01:28:47.190 --> 01:28:48.190
引用值

01:28:48.190 --> 01:28:49.190
转换成原始值

01:28:49.190 --> 01:28:50.190
再做原始值

01:28:50.190 --> 01:28:54.170
原始值相加

01:28:54.170 --> 01:28:55.170
它本身上

01:28:55.170 --> 01:28:56.170
会有一个value of 方法

01:28:56.170 --> 01:28:58.170
同样那个减法也是

01:28:58.170 --> 01:29:02.170
Number.project.

01:29:02.170 --> 01:29:03.170
这个

01:29:03.170 --> 01:29:05.170
mius

01:29:05.170 --> 01:29:06.170
等于一个

01:29:06.170 --> 01:29:07.170
方式

01:29:07.170 --> 01:29:08.170
value

01:29:08.170 --> 01:29:09.170
干嘛呢

01:29:09.170 --> 01:29:10.170
return

01:29:10.170 --> 01:29:12.170
Zs.value of

01:29:12.170 --> 01:29:13.170
什么呢

01:29:13.170 --> 01:29:14.170
减去我们这个value

01:29:14.170 --> 01:29:15.170
就可以了

01:29:15.170 --> 01:29:17.170
并且把它返回

01:29:17.170 --> 01:29:18.170
并且把它返回

01:29:18.170 --> 01:29:19.170
以便于方面

01:29:19.170 --> 01:29:20.170
我们的链式调用

01:29:20.170 --> 01:29:21.170
返回来干嘛呢

01:29:21.170 --> 01:29:22.170
返回来是个数字

01:29:22.170 --> 01:29:23.170
既然是数字

01:29:23.170 --> 01:29:24.170
它就有这个加法减法

01:29:24.170 --> 01:29:25.170
以至于说

01:29:25.170 --> 01:29:26.170
你看

01:29:26.170 --> 01:29:27.170
它是不是5加3-2

01:29:27.170 --> 01:29:28.170
这样的一个值是多少

01:29:28.170 --> 01:29:29.170
6

01:29:29.170 --> 01:29:30.170
这样试一试

01:29:30.170 --> 01:29:32.170
把它放下面来

01:29:32.170 --> 01:29:37.020
把它放到下面来

01:29:37.020 --> 01:29:38.020
这样

01:29:38.020 --> 01:29:40.020
console.log

01:29:40.020 --> 01:29:41.020
什么呢

01:29:41.020 --> 01:29:42.020
nam

01:29:42.020 --> 01:29:43.020
加3-2

01:29:43.020 --> 01:29:44.020
看这样的一个结果是多少

01:29:44.020 --> 01:29:46.900
6

01:29:46.900 --> 01:29:47.900
对吧

01:29:47.900 --> 01:29:48.900
包括说

01:29:48.900 --> 01:29:49.900
你可以继续调用

01:29:49.900 --> 01:29:50.900
再

01:29:50.900 --> 01:29:51.900
再

01:29:51.900 --> 01:29:52.900
再

01:29:52.900 --> 01:29:53.900
再

01:29:53.900 --> 01:29:54.900
再

01:29:54.900 --> 01:29:55.900
再

01:29:55.900 --> 01:29:56.900
再这个

01:29:56.900 --> 01:29:57.900
这个

01:29:57.900 --> 01:29:58.900
这个

01:29:58.900 --> 01:29:59.900
minus2

01:30:00.900 --> 01:30:01.900
对吧

01:30:01.900 --> 01:30:02.900
相当于加了3-2

01:30:02.900 --> 01:30:03.900
就用的值就是7

01:30:07.340 --> 01:30:08.340
直接写到原型里

01:30:08.340 --> 01:30:09.340
不用写两次可以吗

01:30:09.340 --> 01:30:10.340
I的

01:30:10.340 --> 01:30:11.340
放到proto tab里面

01:30:14.340 --> 01:30:15.340
你是说

01:30:15.340 --> 01:30:16.340
你是说

01:30:16.340 --> 01:30:17.340
你是说这样吗

01:30:18.340 --> 01:30:19.340
你是说

01:30:20.340 --> 01:30:23.340
number.proto

01:30:23.340 --> 01:30:25.340
tap.tap

01:30:26.340 --> 01:30:27.340
懂一个对象

01:30:27.340 --> 01:30:28.340
里面有这个爱的方法

01:30:28.340 --> 01:30:29.340
和

01:30:29.340 --> 01:30:30.340
这个

01:30:30.340 --> 01:30:31.340
这个简法吧

01:30:31.340 --> 01:30:32.340
你是说这样吗

01:30:32.340 --> 01:30:35.490
仓狼同学

01:30:35.490 --> 01:30:36.490
那这样的话不行

01:30:36.490 --> 01:30:37.490
就是这么

01:30:37.490 --> 01:30:39.490
目前来做是没有问题的

01:30:39.490 --> 01:30:40.490
但是你改变了

01:30:40.490 --> 01:30:41.490
原型对象

01:30:41.490 --> 01:30:46.020
改变了原型对象

01:30:46.020 --> 01:30:47.020
这样做不好

01:30:47.020 --> 01:30:48.020
这个做不好

01:30:48.020 --> 01:30:50.020
改变了原型对象

01:30:50.020 --> 01:30:51.020
这样做不好

01:30:51.020 --> 01:30:55.250
行了

01:30:55.250 --> 01:30:56.250
因为第四题

01:30:56.250 --> 01:30:57.250
比较简单

01:30:57.250 --> 01:30:58.250
咱快点过了

01:30:58.250 --> 01:30:59.250
包括第五题也不难

01:31:00.250 --> 01:31:01.250
老师说

01:31:01.250 --> 01:31:02.250
这个第七题

01:31:02.250 --> 01:31:03.250
啥时候能等到

01:31:03.250 --> 01:31:04.250
是吧

01:31:04.250 --> 01:31:08.610
第五题

01:31:08.610 --> 01:31:09.610
因为number

01:31:09.610 --> 01:31:11.610
上面还有些其他的方法

01:31:11.610 --> 01:31:12.610
number

01:31:12.610 --> 01:31:13.610
还有一些其他的方法

01:31:13.610 --> 01:31:14.610
你不是说

01:31:14.610 --> 01:31:21.140
单纯内构造寒树的事

01:31:21.140 --> 01:31:22.140
同学

01:31:22.140 --> 01:31:23.140
你看number

01:31:23.140 --> 01:31:24.140
是不是还有tofx

01:31:24.140 --> 01:31:25.140
那么这个tozrin

01:31:25.140 --> 01:31:26.140
number

01:31:26.140 --> 01:31:27.140
tozrin

01:31:27.140 --> 01:31:28.140
还有进纸转换的

01:31:28.140 --> 01:31:29.140
你如果把这些

01:31:29.140 --> 01:31:32.740
覆盖这些方法

01:31:32.740 --> 01:31:33.740
就没有了

01:31:33.740 --> 01:31:34.740
它是显示调用

01:31:34.740 --> 01:31:35.740
我们明明

01:31:35.740 --> 01:31:36.740
确实显示调用的

01:31:36.740 --> 01:31:37.740
这些寒树

01:31:37.740 --> 01:31:38.740
不过在这里面

01:31:38.740 --> 01:31:39.740
会有内形转换

01:31:39.740 --> 01:31:40.740
咱们把这些

01:31:40.740 --> 01:31:41.740
内形转换的

01:31:41.740 --> 01:31:44.240
过程给它表达了

01:31:44.240 --> 01:31:45.240
也行

01:31:45.240 --> 01:31:46.240
也行

01:31:46.240 --> 01:31:47.240
但是搞好顺序

01:31:47.240 --> 01:31:52.050
搞好前后顺序

01:31:52.050 --> 01:31:53.050
来

01:31:53.050 --> 01:31:54.050
来

01:31:54.050 --> 01:31:56.050
咱这个第四题完事

01:31:56.050 --> 01:31:57.050
第四题完事

01:31:57.050 --> 01:31:59.940
咱继续

01:31:59.940 --> 01:32:00.940
第五题

01:32:00.940 --> 01:32:04.210
五什么呢

01:32:04.210 --> 01:32:05.210
居中

01:32:05.210 --> 01:32:06.210
center

01:32:06.210 --> 01:32:07.210
这个呢

01:32:07.210 --> 01:32:08.210
我就快点了

01:32:08.210 --> 01:32:09.210
咱就写常用的

01:32:09.210 --> 01:32:10.210
好吧

01:32:10.210 --> 01:32:11.210
咱们就写

01:32:11.210 --> 01:32:16.820
常用的居中方式

01:32:16.820 --> 01:32:17.820
元素

01:32:18.820 --> 01:32:22.820
垂直水平居中

01:32:22.820 --> 01:32:24.820
水平垂直居中的方式

01:32:25.820 --> 01:32:26.820
讲完

01:32:26.820 --> 01:32:27.820
这道题

01:32:27.820 --> 01:32:28.820
第五题

01:32:28.820 --> 01:32:29.820
第六题

01:32:29.820 --> 01:32:30.820
就第七题了

01:32:30.820 --> 01:32:32.820
这个大口味同学还在不

01:32:32.820 --> 01:32:33.820
在

01:32:34.820 --> 01:32:35.820
居中

01:32:35.820 --> 01:32:36.820
这是水平居中

01:32:36.820 --> 01:32:38.820
咱们说水平垂直居中

01:32:38.820 --> 01:32:39.820
水平垂直居中

01:32:39.820 --> 01:32:40.820
你那个是

01:32:40.820 --> 01:32:41.820
近宽元素

01:32:41.820 --> 01:32:43.820
水平居中的方式

01:32:43.820 --> 01:32:44.820
OK

01:32:45.820 --> 01:32:46.820
咱们就写个div

01:32:46.820 --> 01:32:47.820
atom

01:32:49.820 --> 01:32:50.820
对

01:32:50.820 --> 01:32:51.820
然后在这里面

01:32:51.820 --> 01:32:52.820
干嘛呢

01:32:52.820 --> 01:32:54.820
给atom

01:32:54.820 --> 01:32:55.820
来写默认的纸

01:32:55.820 --> 01:32:56.820
默认的

01:32:56.820 --> 01:32:57.820
piling

01:32:57.820 --> 01:33:06.340
零

01:33:06.340 --> 01:33:07.340
margin

01:33:07.340 --> 01:33:08.340
零

01:33:08.340 --> 01:33:09.340
然后干嘛呢

01:33:09.340 --> 01:33:10.340
让我们这个

01:33:10.340 --> 01:33:12.340
给我们这个atom

01:33:13.340 --> 01:33:15.340
宽度是100相速

01:33:15.340 --> 01:33:17.340
高度是100相速

01:33:17.340 --> 01:33:20.340
然后让它水直

01:33:20.340 --> 01:33:21.340
水平垂直居中的方式

01:33:21.340 --> 01:33:22.340
说话说得多

01:33:22.340 --> 01:33:23.340
嘴点飘

01:33:23.340 --> 01:33:25.340
然后背领颜色

01:33:25.340 --> 01:33:27.340
fc

01:33:28.340 --> 01:33:29.340
定位加translate

01:33:29.340 --> 01:33:30.340
OK

01:33:30.340 --> 01:33:31.340
来吧

01:33:31.340 --> 01:33:32.340
那怎么办呢

01:33:32.340 --> 01:33:33.340
第一个方法就是

01:33:33.340 --> 01:33:34.340
我们这个定位

01:33:34.340 --> 01:33:37.740
position

01:33:37.740 --> 01:33:38.740
fsroot

01:33:38.740 --> 01:33:39.740
干嘛呢

01:33:39.740 --> 01:33:40.740
left

01:33:40.740 --> 01:33:42.740
这个

01:33:42.740 --> 01:33:46.020
50%

01:33:46.020 --> 01:33:47.020
left 50%

01:33:47.020 --> 01:33:48.020
泡吧

01:33:48.020 --> 01:33:49.020
50%

01:33:50.020 --> 01:33:52.020
那这样的话

01:33:52.020 --> 01:33:54.020
只是说让它左上角

01:33:54.020 --> 01:33:55.020
居中了

01:33:55.020 --> 01:33:56.020
那接下来我需要让它毁断

01:33:56.020 --> 01:33:58.020
我可以利用margin的方式

01:33:58.020 --> 01:33:59.020
margin泡泡

01:33:59.020 --> 01:34:01.020
负得100相速

01:34:01.020 --> 01:34:03.020
负得100相速

01:34:03.020 --> 01:34:05.020
margin left

01:34:05.020 --> 01:34:06.020
负100

01:34:06.020 --> 01:34:07.020
那这样的话

01:34:07.020 --> 01:34:08.020
就可以实现

01:34:08.020 --> 01:34:09.020
让这个元素

01:34:09.020 --> 01:34:11.020
水直水平垂中

01:34:11.020 --> 01:34:12.020
OK

01:34:12.020 --> 01:34:13.020
这是一种方式

01:34:13.020 --> 01:34:15.020
但这种方式不大好办

01:34:15.020 --> 01:34:16.020
50%

01:34:16.020 --> 01:34:18.020
对 50%

01:34:18.020 --> 01:34:19.020
50%

01:34:19.020 --> 01:34:21.020
对

01:34:21.020 --> 01:34:22.020
我觉得差点意思

01:34:22.020 --> 01:34:24.020
因为整体偏上

01:34:24.020 --> 01:34:25.020
对

01:34:25.020 --> 01:34:26.020
这样是对的

01:34:26.020 --> 01:34:27.020
这样是对的

01:34:27.020 --> 01:34:28.020
宽度一半

01:34:28.020 --> 01:34:29.020
对吧

01:34:29.020 --> 01:34:30.020
宽度一半

01:34:30.020 --> 01:34:31.020
对对对

01:34:31.020 --> 01:34:32.020
没问题

01:34:32.020 --> 01:34:34.020
没问题

01:34:34.020 --> 01:34:35.020
宽度一半

01:34:35.020 --> 01:34:36.020
但是这个有问题

01:34:36.020 --> 01:34:37.020
那假如说如果

01:34:37.020 --> 01:34:38.020
它变成200

01:34:38.020 --> 01:34:39.020
是吧

01:34:39.020 --> 01:34:40.020
它变成200

01:34:40.020 --> 01:34:41.020
那这就得是负100

01:34:42.020 --> 01:34:43.020
负100

01:34:43.020 --> 01:34:44.020
对吧

01:34:44.020 --> 01:34:45.020
这样的话

01:34:45.020 --> 01:34:46.020
它并用起来并不舒服

01:34:46.020 --> 01:34:47.020
并不舒服

01:34:47.020 --> 01:34:48.020
有时候说靠克是吧

01:34:48.020 --> 01:34:49.020
OK

01:34:49.020 --> 01:34:50.020
那这个地方

01:34:50.020 --> 01:34:51.020
也可以说

01:34:51.020 --> 01:34:52.020
不写margin泡泡和margin left

01:34:52.020 --> 01:34:53.020
干嘛呢

01:34:53.020 --> 01:34:55.020
利用我们的transform

01:34:55.020 --> 01:34:57.020
我们的过渡

01:34:57.020 --> 01:34:58.020
我们这个

01:34:58.020 --> 01:34:59.020
然后translate

01:34:59.020 --> 01:35:01.020
translate

01:35:01.020 --> 01:35:02.020
什么呢

01:35:02.020 --> 01:35:03.020
这个水平方向

01:35:03.020 --> 01:35:06.020
这个移动50%

01:35:06.020 --> 01:35:07.020
负的

01:35:07.020 --> 01:35:09.020
然后这个数值方向

01:35:09.020 --> 01:35:11.020
也反向移动50%

01:35:11.020 --> 01:35:12.020
那这样的话

01:35:12.020 --> 01:35:13.020
也能实现一个

01:35:13.020 --> 01:35:14.020
垂直水平居中

01:35:14.020 --> 01:35:16.020
也能实现这样的一个效果

01:35:16.020 --> 01:35:18.020
也能实现一个这样的效果

01:35:18.020 --> 01:35:19.020
OK

01:35:19.020 --> 01:35:21.020
也能实现这样的一个效果

01:35:21.020 --> 01:35:22.020
这个

01:35:22.020 --> 01:35:23.020
只不过它相对动态的

01:35:23.020 --> 01:35:24.020
无论说你上面

01:35:24.020 --> 01:35:25.020
一个300 400

01:35:25.020 --> 01:35:26.020
你随便改

01:35:26.020 --> 01:35:27.020
它仍然还是

01:35:27.020 --> 01:35:28.020
垂直水平居中的

01:35:28.020 --> 01:35:29.020
一样的

01:35:29.020 --> 01:35:30.020
OK

01:35:30.020 --> 01:35:31.020
这是它

01:35:31.020 --> 01:35:32.020
这是第二种方法

01:35:32.020 --> 01:35:34.020
这第三种方法干嘛呢

01:35:34.020 --> 01:35:35.020
给我们的这个body

01:35:35.020 --> 01:35:37.020
就是说通过flex布局

01:35:37.020 --> 01:35:39.020
display flex

01:35:39.020 --> 01:35:40.020
display flex

01:35:40.020 --> 01:35:41.020
在这的话

01:35:41.020 --> 01:35:43.020
如果说你单纯给它

01:35:43.020 --> 01:35:44.020
改这个flex

01:35:44.020 --> 01:35:46.020
单纯给它改这个flex的话

01:35:46.020 --> 01:35:47.020
flex行

01:35:47.020 --> 01:35:48.020
为啥呢

01:35:48.020 --> 01:35:49.020
你试一下

01:35:49.020 --> 01:35:51.020
如果单纯给这个flex的话

01:35:51.020 --> 01:35:52.020
我们把这些东西

01:35:52.020 --> 01:35:53.020
给它删掉

01:35:53.020 --> 01:35:55.020
什么定位这些东西

01:35:55.020 --> 01:35:56.020
给它删掉

01:35:56.020 --> 01:35:57.020
就来一个

01:35:57.020 --> 01:35:59.020
就来一个技术

01:35:59.020 --> 01:36:00.020
技术元素

01:36:03.020 --> 01:36:04.020
grade

01:36:04.020 --> 01:36:05.020
grade 还不错

01:36:05.020 --> 01:36:06.020
因为常用的

01:36:06.020 --> 01:36:07.020
就是这个flex用的比较多

01:36:07.020 --> 01:36:09.020
那么这个

01:36:09.020 --> 01:36:12.020
land items center

01:36:12.020 --> 01:36:13.020
主楼方向局中

01:36:13.020 --> 01:36:15.020
然后这个

01:36:15.020 --> 01:36:18.020
just fine content center

01:36:18.020 --> 01:36:19.020
这个主楼和交代这种方向

01:36:19.020 --> 01:36:20.020
同时局中

01:36:20.020 --> 01:36:21.020
这样的话

01:36:21.020 --> 01:36:22.020
它只能干嘛呢

01:36:22.020 --> 01:36:23.020
做到水平居中

01:36:23.020 --> 01:36:24.020
那为啥不水平居中

01:36:24.020 --> 01:36:25.020
是因为

01:36:25.020 --> 01:36:26.020
body没有撑开全屏

01:36:26.020 --> 01:36:27.020
撑开全屏

01:36:27.020 --> 01:36:28.020
比如说

01:36:28.020 --> 01:36:30.020
在这来个position fixed

01:36:30.020 --> 01:36:31.020
然后干嘛呢

01:36:31.020 --> 01:36:32.020
让它撑满全屏

01:36:32.020 --> 01:36:33.020
puff 0

01:36:33.020 --> 01:36:34.020
left 0

01:36:34.020 --> 01:36:36.020
以及bottom 0

01:36:36.020 --> 01:36:38.020
甚至说我们的这个right 0

01:36:40.020 --> 01:36:41.020
首先让这个body

01:36:41.020 --> 01:36:43.020
能撑满全屏之后

01:36:43.020 --> 01:36:44.020
让它在这个

01:36:44.020 --> 01:36:45.020
整个元素内

01:36:45.020 --> 01:36:46.020
进行垂直水平居中

01:36:46.020 --> 01:36:47.020
这种方式

01:36:47.020 --> 01:36:48.020
这种方式

01:36:50.020 --> 01:36:51.020
对 这flex

01:36:51.020 --> 01:36:52.020
这个是我们比较常用的

01:36:52.020 --> 01:36:53.020
但是如果

01:36:53.020 --> 01:36:54.020
考虑兼容性的话

01:36:54.020 --> 01:36:56.020
还是上面这个比较合适

01:36:56.020 --> 01:36:59.020
这个垂直水平居中

01:36:59.020 --> 01:37:00.020
这三个就ok了

01:37:01.020 --> 01:37:02.020
对 刚说了嘛

01:37:02.020 --> 01:37:03.020
考虑到兼容性的话

01:37:03.020 --> 01:37:04.020
上面那个比较合适

01:37:04.020 --> 01:37:06.020
对 而且情况不一样

01:37:06.020 --> 01:37:07.020
包括说有的是

01:37:07.020 --> 01:37:08.020
有的是这个

01:37:08.020 --> 01:37:09.020
我单纯是

01:37:09.020 --> 01:37:11.020
垂直水平居中

01:37:11.020 --> 01:37:13.020
有的是垂直水平居中

01:37:13.020 --> 01:37:14.020
有的是垂直水平居中

01:37:14.020 --> 01:37:16.020
咱们这垂直水平居中

01:37:16.020 --> 01:37:17.020
同时满足

01:37:17.020 --> 01:37:18.020
同时满足

01:37:21.160 --> 01:37:22.160
文字

01:37:22.160 --> 01:37:23.160
拉嗨的等于嗨的

01:37:23.160 --> 01:37:24.160
那可能是跟字体有关

01:37:24.160 --> 01:37:25.160
因为有的字体

01:37:25.160 --> 01:37:27.160
它感觉就不是

01:37:27.160 --> 01:37:28.160
航空轮高度

01:37:28.160 --> 01:37:29.160
就让它居中

01:37:29.160 --> 01:37:30.160
跟字体有关

01:37:31.160 --> 01:37:33.160
垂直水平居中

01:37:33.160 --> 01:37:36.160
ok 因为这个都比较简单

01:37:36.160 --> 01:37:37.160
咱就快点过

01:37:37.160 --> 01:37:38.160
因为难的东西

01:37:38.160 --> 01:37:39.160
咱多点讲

01:37:39.160 --> 01:37:40.160
后面的 是吧

01:37:40.160 --> 01:37:41.160
第几个了

01:37:41.160 --> 01:37:42.160
第六个了

01:37:42.160 --> 01:37:44.160
马上到今天的这个结尾的

01:37:44.160 --> 01:37:45.160
箭头寒树

01:37:45.160 --> 01:37:46.160
箭头寒树

01:37:46.160 --> 01:37:47.160
箭头寒树

01:37:47.160 --> 01:37:49.790
看着题吧

01:37:50.790 --> 01:37:51.790
箭头寒树

01:37:52.790 --> 01:37:53.790
箭头寒树

01:37:53.790 --> 01:37:54.790
是

01:37:54.790 --> 01:37:55.790
箭头寒树

01:37:55.790 --> 01:37:56.790
问普通寒树

01:37:56.790 --> 01:37:58.790
有箭头寒树的一个区别

01:37:58.790 --> 01:38:00.790
就是相当于有讲到

01:38:00.790 --> 01:38:01.790
研究资料的这个

01:38:01.790 --> 01:38:02.790
这个箭头寒树

01:38:02.790 --> 01:38:03.790
箭头寒树

01:38:03.790 --> 01:38:04.790
其实

01:38:05.790 --> 01:38:06.790
其实

01:38:08.790 --> 01:38:09.790
刚才那面是提

01:38:09.790 --> 01:38:10.790
打那三个

01:38:10.790 --> 01:38:11.790
可以的

01:38:11.790 --> 01:38:12.790
就可以的

01:38:12.790 --> 01:38:13.790
就可以的

01:38:13.790 --> 01:38:15.790
包括说你把gray的布局写上

01:38:15.790 --> 01:38:16.790
也没有问题

01:38:16.790 --> 01:38:17.790
而且这道题吧

01:38:17.790 --> 01:38:18.790
你不一定说这个

01:38:18.790 --> 01:38:19.790
对的 这三个

01:38:19.790 --> 01:38:20.790
对 就是你

01:38:20.790 --> 01:38:21.790
这个

01:38:21.790 --> 01:38:22.790
因为它有写能写很多个

01:38:22.790 --> 01:38:24.790
要写能写很多个

01:38:25.790 --> 01:38:26.790
来吧

01:38:26.790 --> 01:38:27.790
先把这个箭头寒树

01:38:27.790 --> 01:38:28.790
跟他们说一嘴

01:38:28.790 --> 01:38:29.790
就是你学过的

01:38:29.790 --> 01:38:30.790
没学过的

01:38:30.790 --> 01:38:31.790
当个响听一听

01:38:31.790 --> 01:38:32.790
因为这个东西

01:38:32.790 --> 01:38:33.790
跟我们原来

01:38:33.790 --> 01:38:34.790
还不太一样

01:38:34.790 --> 01:38:35.790
为啥呢

01:38:35.790 --> 01:38:36.790
来吧

01:38:36.790 --> 01:38:37.790
我直接给大家写

01:38:37.790 --> 01:38:40.810
这个咱就不做测试了

01:38:40.810 --> 01:38:41.810
secret

01:38:41.810 --> 01:38:42.810
什么的

01:38:42.810 --> 01:38:43.810
来 正常来说

01:38:43.810 --> 01:38:44.810
我们想写两个书

01:38:44.810 --> 01:38:45.810
相加的话

01:38:45.810 --> 01:38:46.810
ab

01:38:46.810 --> 01:38:47.810
对吧

01:38:47.810 --> 01:38:48.810
我们直接return

01:38:48.810 --> 01:38:49.810
ab

01:38:49.810 --> 01:38:50.810
然后这里面

01:38:50.810 --> 01:38:51.810
存在一个寒树声明

01:38:51.810 --> 01:38:52.810
就爱的 是吧

01:38:52.810 --> 01:38:53.810
如果你用箭头寒树

01:38:53.810 --> 01:38:54.810
它就不存在寒树声明

01:38:54.810 --> 01:38:55.810
它是正常的一个变量

01:38:55.810 --> 01:38:56.810
你用light的声明

01:38:56.810 --> 01:38:57.810
用ward声明也行

01:38:58.810 --> 01:38:59.810
一件是es6

01:38:59.810 --> 01:39:00.810
咱就用es6的方法

01:39:00.810 --> 01:39:02.810
Consta的Gullad

01:39:02.810 --> 01:39:03.810
干嘛呢

01:39:03.810 --> 01:39:05.810
总于ab

01:39:05.810 --> 01:39:06.810
干嘛呢

01:39:06.810 --> 01:39:07.810
什么是箭头寒树

01:39:07.810 --> 01:39:08.810
箭头寒树一定

01:39:08.810 --> 01:39:09.810
得有这样的一个箭头

01:39:09.810 --> 01:39:11.810
然后在这里面干嘛呢

01:39:11.810 --> 01:39:13.810
这a加b

01:39:13.810 --> 01:39:14.810
包括说

01:39:14.810 --> 01:39:15.810
老师 最后的一个大锅号

01:39:15.810 --> 01:39:16.810
你不用写吗

01:39:16.810 --> 01:39:20.180
这个大骨B说得很对

01:39:20.180 --> 01:39:22.180
因为咱们说区别的话

01:39:22.180 --> 01:39:23.180
先把这个东西

01:39:23.180 --> 01:39:24.180
给大家介绍一下

01:39:24.180 --> 01:39:25.180
当然对于寒树来说

01:39:25.180 --> 01:39:27.180
它可以实现寒树简写

01:39:27.180 --> 01:39:29.180
可以实现寒树简写

01:39:29.180 --> 01:39:30.180
不用Consta

01:39:30.180 --> 01:39:31.180
我们来一个iPhone

01:39:31.180 --> 01:39:32.180
干嘛呢

01:39:32.180 --> 01:39:34.180
如果想实现a的平方的话

01:39:34.180 --> 01:39:35.180
我可以直接这么写

01:39:35.180 --> 01:39:37.180
hA

01:39:37.180 --> 01:39:38.180
可以直接这么写

01:39:38.180 --> 01:39:39.180
就是什么呢

01:39:39.180 --> 01:39:40.180
箭头寒树当中

01:39:40.180 --> 01:39:45.350
当参数为一个

01:39:45.350 --> 01:39:47.350
当参数为一个的时候咋招呢

01:39:47.350 --> 01:39:48.350
我们的这个

01:39:48.350 --> 01:39:50.350
我们的这个

01:39:50.350 --> 01:39:52.350
这个这个

01:39:52.350 --> 01:39:54.350
锅号可以省略

01:39:55.350 --> 01:40:00.970
这个当寒树体为一行

01:40:02.970 --> 01:40:05.970
寒树体为一行

01:40:06.970 --> 01:40:07.970
跟着去把指点说完了

01:40:07.970 --> 01:40:09.970
说明很多人还是有了解

01:40:09.970 --> 01:40:10.970
对对对那没关系啊

01:40:10.970 --> 01:40:11.970
就说了你会了

01:40:11.970 --> 01:40:12.970
那那有啥

01:40:12.970 --> 01:40:14.970
你边说这个没听过的

01:40:14.970 --> 01:40:15.970
过来看路过的同学

01:40:15.970 --> 01:40:16.970
能学到什么东西

01:40:16.970 --> 01:40:17.970
咱们这个我想

01:40:17.970 --> 01:40:18.970
插播一下

01:40:18.970 --> 01:40:19.970
就咱们这个平等区里面的同学

01:40:19.970 --> 01:40:21.970
就咱们现在直播间的同学

01:40:21.970 --> 01:40:22.970
有没有咱们独一的这个

01:40:22.970 --> 01:40:23.970
VIP选

01:40:23.970 --> 01:40:24.970
就咱们全天班同学

01:40:24.970 --> 01:40:25.970
有吗

01:40:25.970 --> 01:40:26.970
有同学回不下

01:40:26.970 --> 01:40:27.970
回不下医务看一下

01:40:27.970 --> 01:40:29.970
也应该有不少是吧

01:40:30.970 --> 01:40:31.970
OK啊

01:40:31.970 --> 01:40:33.970
那你们你们这又这个

01:40:34.970 --> 01:40:36.970
咱们的付费班不够你们学的吗

01:40:37.970 --> 01:40:38.970
你认识出来给我们打广告

01:40:38.970 --> 01:40:39.970
不太合适啊

01:40:40.970 --> 01:40:41.970
不靠几个同学

01:40:41.970 --> 01:40:42.970
像咱们独一的这个

01:40:43.970 --> 01:40:44.970
整了半天咱们都自己人

01:40:44.970 --> 01:40:46.970
算了不演了不演了不演了

01:40:48.970 --> 01:40:49.970
来来来继续

01:40:49.970 --> 01:40:50.970
当复习了

01:40:50.970 --> 01:40:51.970
就是当复习了

01:40:51.970 --> 01:40:52.970
这就是

01:40:54.970 --> 01:40:55.970
这就是这个

01:40:55.970 --> 01:40:56.970
这就是基本的一个

01:40:56.970 --> 01:40:57.970
键头寒树的一个使用

01:40:57.970 --> 01:40:58.970
主要强调

01:40:58.970 --> 01:40:59.970
键头寒树键头寒树

01:40:59.970 --> 01:41:00.970
就因为有它

01:41:00.970 --> 01:41:01.970
这个箭头

01:41:01.970 --> 01:41:02.970
而且这个箭头

01:41:02.970 --> 01:41:04.970
它本来就代表了一个

01:41:04.970 --> 01:41:05.970
数据流向的一个过程

01:41:06.970 --> 01:41:07.970
数据流向的过程

01:41:07.970 --> 01:41:08.970
包括写B包的时候

01:41:08.970 --> 01:41:09.970
这个也更好写

01:41:09.970 --> 01:41:10.970
你可能说

01:41:10.970 --> 01:41:11.970
你什么呢

01:41:11.970 --> 01:41:12.970
Constate一个F

01:41:12.970 --> 01:41:13.970
什么呢

01:41:13.970 --> 01:41:14.970
A推出

01:41:15.970 --> 01:41:17.970
这个箭头写到一起

01:41:17.970 --> 01:41:19.970
B推出C

01:41:22.970 --> 01:41:23.970
这啥呢

01:41:23.970 --> 01:41:24.970
A加B

01:41:24.970 --> 01:41:25.970
是吧

01:41:26.970 --> 01:41:27.970
A寒树反过

01:41:27.970 --> 01:41:28.970
这个A

01:41:28.970 --> 01:41:29.970
这个反过那个寒树

01:41:29.970 --> 01:41:30.970
寒树是B

01:41:30.970 --> 01:41:31.970
反过A加B

01:41:32.970 --> 01:41:33.970
防身

01:41:33.970 --> 01:41:34.970
F1

01:41:35.970 --> 01:41:36.970
A

01:41:42.030 --> 01:41:43.030
然后这个Return

01:41:46.560 --> 01:41:47.560
防身

01:41:47.560 --> 01:41:48.560
B

01:41:51.190 --> 01:41:52.190
Return

01:41:52.190 --> 01:41:53.190
A加B

01:41:53.190 --> 01:41:54.190
是吧

01:41:54.190 --> 01:41:55.190
这样的一个简写

01:41:55.190 --> 01:41:56.190
这样的一个简写

01:41:56.190 --> 01:41:57.190
OK 上面都说的是

01:41:57.190 --> 01:41:58.190
关于

01:41:58.190 --> 01:41:59.190
这个

01:41:59.190 --> 01:42:00.190
箭头寒树的一个基本介绍

01:42:00.190 --> 01:42:01.190
基本介绍

01:42:03.190 --> 01:42:04.190
来

01:42:04.190 --> 01:42:05.190
那这个

01:42:05.190 --> 01:42:06.190
那接下来

01:42:06.190 --> 01:42:07.190
再说一说

01:42:07.190 --> 01:42:08.190
他们的一个区别

01:42:08.190 --> 01:42:09.190
他们区别

01:42:12.530 --> 01:42:13.530
干嘛呢

01:42:13.530 --> 01:42:14.530
不存在寒树声明

01:42:14.530 --> 01:42:15.530
不是

01:42:15.530 --> 01:42:17.530
不存在寒树声明整体提升

01:42:17.530 --> 01:42:19.530
不存在这个提升

01:42:19.530 --> 01:42:20.530
不存在

01:42:20.530 --> 01:42:21.530
这个

01:42:21.530 --> 01:42:23.530
寒树声明

01:42:23.530 --> 01:42:24.530
因为它本身

01:42:24.530 --> 01:42:25.530
它不算是

01:42:25.530 --> 01:42:26.530
通过方式声明的

01:42:26.530 --> 01:42:27.530
才叫寒树声明

01:42:27.530 --> 01:42:28.530
它不是通过的

01:42:28.530 --> 01:42:29.530
所以说不存在寒树声明

01:42:29.530 --> 01:42:30.530
然后还有

01:42:30.530 --> 01:42:31.530
它不

01:42:31.530 --> 01:42:32.530
没有寒树声明

01:42:32.530 --> 01:42:33.530
干嘛呢

01:42:33.530 --> 01:42:34.530
还不能使用

01:42:34.530 --> 01:42:35.530
对

01:42:35.530 --> 01:42:36.530
正常我们这个方式

01:42:36.530 --> 01:42:37.530
通用的话

01:42:37.530 --> 01:42:38.530
可以生成一个对象

01:42:38.530 --> 01:42:39.530
对 包括寒树

01:42:39.530 --> 01:42:40.530
它是构造寒树

01:42:40.530 --> 01:42:41.530
比方说来

01:42:41.530 --> 01:42:42.530
乌尔一个

01:42:43.530 --> 01:42:44.530
等于

01:42:44.530 --> 01:42:45.530
随便

01:42:45.530 --> 01:42:46.530
咱就写个空寒树

01:42:46.530 --> 01:42:47.530
好吧 就写个空寒树

01:42:47.530 --> 01:42:48.530
你如果你有一个

01:42:48.530 --> 01:42:49.530
iPhone会怎么样

01:42:52.160 --> 01:43:00.210
你有个iPhone会怎么样

01:43:00.210 --> 01:43:02.210
iPhone is not a constructor

01:43:02.210 --> 01:43:03.210
不是

01:43:03.210 --> 01:43:04.210
不是过多寒树

01:43:04.210 --> 01:43:05.210
所以说不能用

01:43:05.210 --> 01:43:06.210
不能用

01:43:06.210 --> 01:43:07.210
然后

01:43:07.210 --> 01:43:08.210
那除了这个还有啥

01:43:08.210 --> 01:43:09.210
不能用

01:43:09.210 --> 01:43:10.210
然后这个

01:43:10.210 --> 01:43:11.210
没有arguments

01:43:13.210 --> 01:43:14.210
没有

01:43:14.210 --> 01:43:15.210
没有

01:43:15.210 --> 01:43:16.210
这个十三列表

01:43:16.210 --> 01:43:17.210
arguments

01:43:18.210 --> 01:43:19.210
没有这个东西

01:43:20.210 --> 01:43:21.210
那这里面

01:43:21.210 --> 01:43:22.210
如果没有怎么代替

01:43:22.210 --> 01:43:23.210
我们刚才写的

01:43:23.210 --> 01:43:24.210
那个酷然预算符

01:43:24.210 --> 01:43:25.210
就是

01:43:25.210 --> 01:43:27.210
点点点arg用它去代替

01:43:33.230 --> 01:43:34.230
输出

01:43:34.230 --> 01:43:35.230
我们的arg

01:43:35.230 --> 01:43:36.230
它反过来就是个数组

01:43:36.230 --> 01:43:37.230
进行扩展

01:43:37.230 --> 01:43:38.230
你这样的话

01:43:38.230 --> 01:43:39.230
你看

01:43:39.230 --> 01:43:40.230
F1

01:43:40.230 --> 01:43:41.230
1 2 3 4 5

01:43:41.230 --> 01:43:44.250
对吧

01:43:44.250 --> 01:43:45.250
反过来就是个数组

01:43:45.250 --> 01:43:46.250
反过来是一个数组

01:43:46.250 --> 01:43:47.250
那如果你这里面

01:43:47.250 --> 01:43:48.250
访问这个arguments的话

01:43:48.250 --> 01:43:49.250
就不行了

01:43:49.250 --> 01:43:52.250
arguments

01:43:52.250 --> 01:43:53.250
这样的话就不行了

01:43:54.250 --> 01:43:55.250
对吧

01:43:55.250 --> 01:43:56.250
arguments

01:43:56.250 --> 01:43:57.250
没有这个东西

01:43:57.250 --> 01:43:58.250
没有arguments

01:43:58.250 --> 01:43:59.250
没有这个东西

01:43:59.250 --> 01:44:00.250
OK

01:44:00.250 --> 01:44:01.250
这样的话给大家标号

01:44:01.250 --> 01:44:02.250
标号

01:44:02.250 --> 01:44:03.250
1 2 3点

01:44:03.250 --> 01:44:04.250
对

01:44:04.250 --> 01:44:05.250
因为下面还有个例子

01:44:05.250 --> 01:44:06.250
你们看不清楚

01:44:06.250 --> 01:44:07.250
我们有同学

01:44:07.250 --> 01:44:08.250
就是遇到这样一边

01:44:08.250 --> 01:44:09.250
把这几点说出来

01:44:09.250 --> 01:44:10.250
对

01:44:10.250 --> 01:44:11.250
然后接下来

01:44:11.250 --> 01:44:12.250
那除了这些还有吗

01:44:12.250 --> 01:44:13.250
有

01:44:13.250 --> 01:44:14.250
这个不能使用

01:44:14.250 --> 01:44:15.250
没有arguments

01:44:15.250 --> 01:44:16.250
那最重要的是

01:44:16.250 --> 01:44:17.250
这个z

01:44:17.250 --> 01:44:18.250
箭头寒树里面

01:44:18.250 --> 01:44:20.250
这个z很重要

01:44:20.250 --> 01:44:21.250
为什么呢

01:44:21.250 --> 01:44:22.250
这个z很强

01:44:22.250 --> 01:44:23.250
很强

01:44:23.250 --> 01:44:25.250
有一个z绑定这样的一个特点

01:44:25.250 --> 01:44:26.250
你不能说没有

01:44:26.250 --> 01:44:27.250
对

01:44:27.250 --> 01:44:28.250
这个指向很固定

01:44:28.250 --> 01:44:29.250
对

01:44:29.250 --> 01:44:30.250
这个里面那个z呢

01:44:30.250 --> 01:44:31.250
说实话

01:44:31.250 --> 01:44:32.250
箭头寒树里面是没有z

01:44:32.250 --> 01:44:33.250
对

01:44:33.250 --> 01:44:34.250
常常同学说的没有z

01:44:34.250 --> 01:44:35.250
是没问题的

01:44:35.250 --> 01:44:36.250
那你说那我这里面

01:44:36.250 --> 01:44:37.250
还能用到z

01:44:37.250 --> 01:44:39.250
就是用z它不抱错

01:44:39.250 --> 01:44:40.250
这样的一句话

01:44:40.250 --> 01:44:41.250
可以用

01:44:41.250 --> 01:44:42.250
对

01:44:42.250 --> 01:44:43.250
那说一说

01:44:43.250 --> 01:44:44.250
这里面的z干嘛呢

01:44:44.250 --> 01:44:46.250
它的这个绑定规则是什么呢

01:44:46.250 --> 01:44:47.250
绑定规则是什么呢

01:44:47.250 --> 01:44:53.420
绑定上下文种的z

01:44:53.420 --> 01:44:54.420
上下文

01:44:54.420 --> 01:44:55.420
啥叫上下文

01:44:55.420 --> 01:44:56.420
这个有印象吗

01:44:56.420 --> 01:44:57.420
综拥狱嘛

01:44:57.420 --> 01:44:58.420
对吧

01:44:58.420 --> 01:44:59.420
咱们说es就引入快综拥狱

01:44:59.420 --> 01:45:01.420
那也是综拥狱当中z

01:45:01.420 --> 01:45:03.420
综拥狱当中z

01:45:03.420 --> 01:45:04.420
来吧

01:45:04.420 --> 01:45:05.420
那我们来写一个

01:45:05.420 --> 01:45:06.420
咱说

01:45:06.420 --> 01:45:07.420
这个lite

01:45:07.420 --> 01:45:08.420
一个opg

01:45:08.420 --> 01:45:09.420
综拥狱

01:45:09.420 --> 01:45:10.420
这个

01:45:10.420 --> 01:45:11.420
邓哥

01:45:11.420 --> 01:45:12.420
对name

01:45:12.420 --> 01:45:13.420
这个opg吧

01:45:13.420 --> 01:45:14.420
别拿邓哥了

01:45:14.420 --> 01:45:15.420
这个

01:45:15.420 --> 01:45:16.420
炒凉饭

01:45:16.420 --> 01:45:17.420
不太好炒

01:45:17.420 --> 01:45:18.420
来

01:45:18.420 --> 01:45:19.420
然后iPhone呢

01:45:19.420 --> 01:45:20.420
如果是普通写函书

01:45:20.420 --> 01:45:21.420
console.log

01:45:21.420 --> 01:45:22.420
什么的

01:45:22.420 --> 01:45:23.420
zname

01:45:23.420 --> 01:45:24.420
这样的话

01:45:24.420 --> 01:45:25.420
之前的obj

01:45:25.420 --> 01:45:26.420
当

01:45:26.420 --> 01:45:28.420
obj.fn这么调用的时候

01:45:28.420 --> 01:45:29.420
这它没问题

01:45:29.420 --> 01:45:31.420
ok 我们再来一个fn1

01:45:31.420 --> 01:45:32.420
干嘛呢

01:45:32.420 --> 01:45:33.420
剑头海书

01:45:34.420 --> 01:45:36.860
少了个多号

01:45:36.860 --> 01:45:37.860
在这干嘛呢

01:45:37.860 --> 01:45:38.860
我们输出

01:45:38.860 --> 01:45:40.860
zname

01:45:40.860 --> 01:45:41.860
zname

01:45:41.860 --> 01:45:42.860
或者

01:45:43.860 --> 01:45:44.860
那这个时候

01:45:44.860 --> 01:45:45.860
如果你调用fn1的话

01:45:45.860 --> 01:45:47.860
咱别说zname

01:45:47.860 --> 01:45:48.860
就看z是谁吧

01:45:48.860 --> 01:45:49.860
他是obj还是谁呢

01:45:49.860 --> 01:45:53.300
他是window

01:45:53.300 --> 01:45:54.300
他是window

01:45:54.300 --> 01:45:56.300
那为啥是window呢

01:45:56.300 --> 01:45:58.300
这个

01:45:58.300 --> 01:45:59.300
剑头海书作用誉

01:45:59.300 --> 01:46:00.300
他还是会有的

01:46:00.300 --> 01:46:02.300
他还是会有的

01:46:02.300 --> 01:46:04.300
当前 作用语

01:46:04.300 --> 01:46:05.300
怎么办呢

01:46:05.300 --> 01:46:06.300
去看上级作用语

01:46:06.300 --> 01:46:07.300
当容籍

01:46:08.300 --> 01:46:09.300
这个作用语里面

01:46:09.300 --> 01:46:10.300
这次

01:46:10.300 --> 01:46:11.300
由上级作用语决定

01:46:11.300 --> 01:46:13.300
上级作用语就是window

01:46:13.300 --> 01:46:14.300
上级作用语里面

01:46:14.300 --> 01:46:15.300
这次是谁

01:46:15.300 --> 01:46:16.300
就是window

01:46:16.300 --> 01:46:17.300
你说剑头海书

01:46:17.300 --> 01:46:18.300
可以吗

01:46:18.300 --> 01:46:20.930
能改

01:46:20.930 --> 01:46:21.930
能改

01:46:21.930 --> 01:46:22.930
怎么改

01:46:22.930 --> 01:46:23.930
如果在这里面

01:46:23.930 --> 01:46:24.930
假如在这里面

01:46:24.930 --> 01:46:25.930
那作用一个fn1

01:46:25.930 --> 01:46:27.890
等于一个剑头海书

01:46:27.890 --> 01:46:33.130
看着啊 看着 看着 给它改了一下 给它改了一下

01:46:33.130 --> 01:46:35.770
半的改不了 半的改不了

01:46:35.770 --> 01:46:38.570
来 这个apply code都改不了 看着啊

01:46:38.570 --> 01:46:41.490
这个改变 改变建筒喊数这次的唯一方式

01:46:41.490 --> 01:46:52.130
就是你改变作用语当中的ness

01:46:52.130 --> 01:46:53.610
改变作用语当中的ness

01:46:53.610 --> 01:46:57.370
然后你让fn一直行

01:46:57.370 --> 01:47:00.250
看着啊 在这个fn里面 这个喊数里面

01:47:00.250 --> 01:47:02.810
定义了一个建筒喊数 让这个建筒喊数执行

01:47:02.810 --> 01:47:07.130
当你这么去调用的时候

01:47:07.570 --> 01:47:10.850
这个喊数里面的ness指向谁

01:47:10.850 --> 01:47:13.570
obj.fn fn这里面的ness指向谁

01:47:13.570 --> 01:47:16.850
ness指向谁 obj吧

01:47:16.850 --> 01:47:20.970
对吧 obj 那所以说这个里面输出的ness是谁

01:47:20.970 --> 01:47:22.410
应该是我们的obj 对吧

01:47:22.410 --> 01:47:27.350
那如果说这个obj.fn干嘛呢

01:47:27.350 --> 01:47:31.110
点扣 扣谁呢 扣温度

01:47:31.110 --> 01:47:33.630
扣温度 那这个时候

01:47:33.630 --> 01:47:34.950
ness是谁啊

01:47:34.950 --> 01:47:37.190
就是这个喊数 fn这个喊数里面的ness

01:47:37.190 --> 01:47:38.310
是不是指向温度了

01:47:38.310 --> 01:47:39.550
对 温度

01:47:39.550 --> 01:47:40.550
对 那所以说

01:47:40.550 --> 01:47:42.030
那如果它执行的话

01:47:42.030 --> 01:47:44.230
输出的就是温度

01:47:44.230 --> 01:47:45.670
输出的就是温度

01:47:45.670 --> 01:47:47.110
那有时候老师你这不能改吗

01:47:47.110 --> 01:47:49.550
能改我们说的是改变作用语当中的ness

01:47:49.550 --> 01:47:50.990
那如果在这干嘛呢

01:47:50.990 --> 01:47:53.670
还是fn1

01:47:53.670 --> 01:47:54.870
还是fn1

01:47:54.870 --> 01:47:59.560
打招呢

01:47:59.560 --> 01:48:02.520
可能做点道个ness

01:48:02.520 --> 01:48:03.960
那在这如果啊

01:48:03.960 --> 01:48:05.280
把这俩干掉

01:48:05.280 --> 01:48:06.880
如果你说改什么呢

01:48:06.880 --> 01:48:09.400
这个were一个fn

01:48:09.400 --> 01:48:11.680
等于obj.fn1

01:48:11.680 --> 01:48:13.800
是吧 我让这个fn执行

01:48:13.800 --> 01:48:16.640
fn执行指向谁啊

01:48:16.640 --> 01:48:20.240
温度 那你说obj.fn1呢

01:48:20.240 --> 01:48:22.880
包括你说我扣obj对吧

01:48:22.880 --> 01:48:23.920
我让这个fn1

01:48:23.920 --> 01:48:26.280
類似指向obj行不行呢

01:48:26.280 --> 01:48:27.320
还是温度

01:48:27.320 --> 01:48:29.000
那还是温度

01:48:29.000 --> 01:48:29.920
所以说你扣

01:48:29.920 --> 01:48:31.400
你包括apply能不能改

01:48:31.400 --> 01:48:31.960
不能改

01:48:31.960 --> 01:48:35.560
were一个new fn

01:48:35.560 --> 01:48:36.440
等于什么呢

01:48:36.440 --> 01:48:37.840
等于fn.半的

01:48:37.840 --> 01:48:39.080
半的谁呢obj

01:48:39.080 --> 01:48:40.960
让这个ness指向

01:48:40.960 --> 01:48:42.800
fn的这个指向只有obj

01:48:42.800 --> 01:48:43.680
让new fn执行

01:48:47.440 --> 01:48:48.400
干嘛呢

01:48:48.400 --> 01:48:49.560
还是温度

01:48:49.560 --> 01:48:50.720
那还是温度

01:48:50.720 --> 01:48:52.320
你想改变

01:48:52.320 --> 01:48:53.640
你想改变谁啊

01:48:53.640 --> 01:48:55.280
你想改变我们这个

01:48:55.280 --> 01:48:57.760
这个箭头函数里面的ness

01:48:57.760 --> 01:49:00.720
你只能去改变他的

01:49:00.720 --> 01:49:01.760
作用语当中的ness

01:49:01.760 --> 01:49:03.920
否则是改变不了他的

01:49:03.920 --> 01:49:05.720
那否则是改变不了他的

01:49:05.720 --> 01:49:09.000
他的一个强度跟半的一样很强

01:49:09.000 --> 01:49:11.080
改变他所在作用语当中的ness

01:49:11.080 --> 01:49:11.640
对对对

01:49:11.640 --> 01:49:13.560
如果你想改变这个箭头函数当

01:49:13.560 --> 01:49:14.800
这个this的话

01:49:14.800 --> 01:49:17.720
你只能改变他所属作用语当ness

01:49:17.720 --> 01:49:18.920
只有这个方法是有效的

01:49:18.920 --> 01:49:20.560
其他方法是无效的

01:49:20.560 --> 01:49:21.960
所以说就像这个

01:49:21.960 --> 01:49:23.280
就像给他扩展很多是吧

01:49:23.280 --> 01:49:24.440
对 就像这个东西啊

01:49:24.440 --> 01:49:25.760
就是面试的时候常问的

01:49:25.760 --> 01:49:26.600
你就像上面那个

01:49:26.600 --> 01:49:28.320
只是说他们的一些小特点

01:49:28.320 --> 01:49:29.200
但是this呢

01:49:29.200 --> 01:49:31.320
是这个箭头函数独有的

01:49:31.320 --> 01:49:33.560
就包括说我们这个这个这个

01:49:33.560 --> 01:49:35.400
在这个电视器里面对吧

01:49:35.400 --> 01:49:36.600
你说一旦遇到this问题

01:49:36.600 --> 01:49:37.000
怎么办的

01:49:37.000 --> 01:49:39.560
你用箭头函数他会绑定综音域

01:49:39.560 --> 01:49:41.600
他的上级综音域里面的ness

01:49:41.600 --> 01:49:44.200
跟谁调用的都没有关系了

01:49:44.200 --> 01:49:46.440
这是箭头函数的特点

01:49:49.440 --> 01:49:50.960
这是箭头函数的特点

01:49:54.940 --> 01:49:56.460
这是箭头函数的特点啊

01:49:56.460 --> 01:49:57.260
同学的规则

01:49:57.260 --> 01:49:58.780
你把他给记住

01:49:58.780 --> 01:49:59.460
这是规则

01:49:59.460 --> 01:50:00.780
对 我们规定的加法

01:50:00.780 --> 01:50:01.740
他就得这么高

01:50:01.740 --> 01:50:05.210
这么高

01:50:05.210 --> 01:50:06.650
这个也没有问题同学们

01:50:06.650 --> 01:50:07.490
没有问题同学

01:50:07.490 --> 01:50:08.650
回不家一

01:50:09.610 --> 01:50:11.930
这是我们当时做这个函数

01:50:11.930 --> 01:50:12.730
他就长这样

01:50:12.730 --> 01:50:15.850
对 记住 记住 记住 记住 记住

01:50:15.850 --> 01:50:16.970
对 规则

01:50:16.970 --> 01:50:18.050
就跟你原来的方式

01:50:18.050 --> 01:50:19.050
为什么可以改

01:50:19.050 --> 01:50:20.370
为什么可以改啊 规则

01:50:20.370 --> 01:50:22.810
对 甚至是浏览器给咱们定义的呀

01:50:22.810 --> 01:50:23.970
对

01:50:23.970 --> 01:50:27.370
语法 语法 语法 语法就规定的

01:50:27.370 --> 01:50:28.570
而且咱们这儿是了

01:50:28.570 --> 01:50:29.290
你怎么

01:50:29.290 --> 01:50:30.170
你怎么改变

01:50:30.170 --> 01:50:31.490
类似指向都不好使

01:50:31.490 --> 01:50:32.970
他最终输出都是温度啊

01:50:32.970 --> 01:50:34.370
同学

01:50:34.370 --> 01:50:37.570
包括还有这个什么呢

01:50:37.570 --> 01:50:38.490
刚才同学说了

01:50:38.490 --> 01:50:46.380
箭头函数没有原型

01:50:46.380 --> 01:50:49.140
没有原型指的是没有proto type

01:50:49.140 --> 01:50:50.380
没有proto type

01:50:50.380 --> 01:50:51.220
它作为

01:50:51.220 --> 01:50:52.980
因为它不是构造函数

01:50:52.980 --> 01:50:53.860
所以没有原型

01:50:53.860 --> 01:50:54.500
知道吧

01:50:54.500 --> 01:50:58.180
因为箭头函数不是构造函数

01:50:58.180 --> 01:50:59.940
所以没有原型

01:50:59.940 --> 01:51:03.020
但是这个箭头函数

01:51:03.020 --> 01:51:05.380
是有这个刚刚 刚刚的

01:51:05.380 --> 01:51:09.300
它是作为函数的实力的

01:51:09.300 --> 01:51:10.180
它是有它的

01:51:10.180 --> 01:51:10.700
是有它的

01:51:10.700 --> 01:51:12.140
因为它作为对象的时候

01:51:12.140 --> 01:51:13.740
当箭头函数作为对象的时候

01:51:13.740 --> 01:51:14.980
对象可以通过这个属性

01:51:14.980 --> 01:51:18.340
就访问它对象构造函数的原型

01:51:18.340 --> 01:51:19.700
对 只有构造函数才有原型

01:51:19.700 --> 01:51:20.780
所以是它没有原型

01:51:20.780 --> 01:51:22.660
那以上的就是箭头函数的一个区域别

01:51:22.660 --> 01:51:23.300
最重要呢

01:51:23.300 --> 01:51:25.860
在UZS这点

01:51:25.860 --> 01:51:27.020
因为这个时间问题啊

01:51:27.020 --> 01:51:30.380
只能说大概的给大家过一遍

01:51:30.380 --> 01:51:31.060
对呀

01:51:31.060 --> 01:51:33.300
只要是函数就是作用语

01:51:33.300 --> 01:51:34.340
就是只要是函数

01:51:34.340 --> 01:51:35.700
只要是大货号都是作用语

01:51:35.700 --> 01:51:37.660
包括ES路里面引入了这个

01:51:37.660 --> 01:51:41.070
块几作用语

01:51:41.070 --> 01:51:42.990
那块几作用语

01:51:42.990 --> 01:51:46.310
那只要是个大货号都能用

01:51:46.310 --> 01:51:50.010
比方说这么写

01:51:50.010 --> 01:51:51.130
可能说我没这么写过

01:51:51.130 --> 01:51:52.730
你在这里面写LAT一个A

01:51:52.730 --> 01:51:54.090
10

01:51:54.090 --> 01:51:57.090
你在外面访问A是访问不到的

01:51:57.090 --> 01:51:57.810
访问不到的

01:51:57.810 --> 01:51:59.970
因为A只在这个大货号里面有效

01:51:59.970 --> 01:52:01.570
但大货号你得区别一下

01:52:01.570 --> 01:52:04.370
这个里面写语句的这个大货号叫作用语

01:52:04.370 --> 01:52:07.210
你别跟我说你前面淘个A付也好

01:52:07.210 --> 01:52:09.490
你淘个付寻还也行

01:52:09.490 --> 01:52:11.490
这都行

01:52:11.490 --> 01:52:14.370
但前提是你别把这个东西也当作作用语了

01:52:14.370 --> 01:52:15.450
这可不是

01:52:15.450 --> 01:52:17.370
这可不是作用语啊 同学

01:52:17.370 --> 01:52:19.290
这可不是作用语

01:52:19.290 --> 01:52:21.690
这是对象

01:52:21.690 --> 01:52:24.170
大货号只有它是对象

01:52:24.170 --> 01:52:25.250
它是对象

01:52:25.250 --> 01:52:26.890
能识别这样的快送语的话

01:52:26.890 --> 01:52:28.770
就不烂就扣死它

01:52:28.770 --> 01:52:34.580
在里面

01:52:34.580 --> 01:52:37.380
ok 来 最后一道题了

01:52:37.380 --> 01:52:39.780
今天咱八点讲到了十点半

01:52:39.780 --> 01:52:40.860
因为那个谁还在不在

01:52:40.860 --> 01:52:41.900
大可不必

01:52:41.900 --> 01:52:42.860
对 大可不必

01:52:42.860 --> 01:52:44.060
在不在了

01:52:44.060 --> 01:52:46.620
终于等到你的第七题了

01:52:46.620 --> 01:52:47.780
在了

01:52:47.780 --> 01:52:48.580
按了点

01:52:48.620 --> 01:52:49.620
第七题是什么了

01:52:49.620 --> 01:52:51.020
我忘了第七题

01:52:51.020 --> 01:52:52.100
第七题

01:52:52.100 --> 01:52:55.380
如何快速查找出特定实验点和

01:52:55.380 --> 01:52:56.940
或者时间内的

01:52:56.940 --> 01:52:58.700
是身段的那个弹幕

01:52:58.700 --> 01:53:00.740
我觉得这个题是算法题

01:53:00.740 --> 01:53:01.060
对

01:53:01.060 --> 01:53:02.300
因为我跟大家说一讲

01:53:02.300 --> 01:53:04.300
就是现在不管是哪个大超

01:53:04.300 --> 01:53:05.700
在面试题当中

01:53:05.700 --> 01:53:08.180
一定在第一轮面试和第二轮面试当中

01:53:08.180 --> 01:53:09.420
一定会有这样的算法题

01:53:09.420 --> 01:53:11.100
尤其是像这个头条

01:53:11.100 --> 01:53:12.420
字节这样的企业

01:53:12.420 --> 01:53:13.340
一定会有算法题

01:53:13.340 --> 01:53:14.580
你去帮阿里同训都会有

01:53:14.580 --> 01:53:16.380
对 阿里同训还录什么的

01:53:16.380 --> 01:53:17.820
现在在前端对话的话

01:53:17.940 --> 01:53:18.780
找个好企业

01:53:18.780 --> 01:53:19.620
好公司的话

01:53:19.620 --> 01:53:21.580
算法题一定是得必备

01:53:21.580 --> 01:53:23.180
那这道题不难

01:53:23.180 --> 01:53:24.500
不难

01:53:24.500 --> 01:53:25.300
不是那么难

01:53:25.300 --> 01:53:27.100
主要是你把它分心明白

01:53:27.100 --> 01:53:28.580
那算法题目的是

01:53:28.580 --> 01:53:30.180
你用什么样的数据结构

01:53:30.180 --> 01:53:31.540
去来规定这些数据

01:53:31.540 --> 01:53:33.140
然后再看数据什么特点

01:53:33.140 --> 01:53:36.100
采取什么样的方法去处理就好了

01:53:36.100 --> 01:53:36.940
那同学们

01:53:36.940 --> 01:53:38.540
这道题咱先不说别的

01:53:39.580 --> 01:53:40.420
来 弹幕

01:53:41.500 --> 01:53:42.500
啥是弹幕 同学

01:53:42.500 --> 01:53:43.820
凶起

01:53:43.820 --> 01:53:44.700
啥是弹幕

01:53:44.700 --> 01:53:45.460
对吧

01:53:45.460 --> 01:53:47.660
下次一定是发射着弹幕 是吧

01:53:47.660 --> 01:53:48.620
下次一定

01:53:49.740 --> 01:53:50.340
是吧

01:53:50.340 --> 01:53:51.340
下次一定

01:53:51.340 --> 01:53:52.460
什么

01:53:52.460 --> 01:53:54.380
CPDD

01:53:54.380 --> 01:53:54.900
是吧

01:53:54.900 --> 01:53:56.020
YYDS

01:53:56.020 --> 01:53:57.700
是吧

01:53:57.700 --> 01:53:59.020
甚至说

01:53:59.020 --> 01:54:01.820
什么笑死我了 是吧

01:54:01.820 --> 01:54:04.380
这些都是弹幕 是吧

01:54:04.380 --> 01:54:06.540
我这可能我岁数大了

01:54:06.540 --> 01:54:08.100
什么意思

01:54:08.100 --> 01:54:10.060
对

01:54:10.060 --> 01:54:11.260
很多

01:54:11.260 --> 01:54:13.140
年轻人共同方数人特别

01:54:13.140 --> 01:54:15.180
来

01:54:15.180 --> 01:54:16.060
别管事实

01:54:16.060 --> 01:54:16.540
别管事实

01:54:16.540 --> 01:54:17.460
同学们想个事

01:54:17.860 --> 01:54:18.940
想个啥呢

01:54:18.940 --> 01:54:20.140
就是

01:54:20.140 --> 01:54:21.220
你说弹幕

01:54:21.220 --> 01:54:22.620
它是不是应该

01:54:22.620 --> 01:54:24.020
应该是这样的

01:54:24.020 --> 01:54:26.580
来

01:54:26.580 --> 01:54:28.140
它弹幕应该是这样的

01:54:28.140 --> 01:54:29.940
弹幕的内容

01:54:29.940 --> 01:54:30.540
对吧

01:54:30.540 --> 01:54:36.500
下次一定

01:54:36.500 --> 01:54:37.580
对吧

01:54:37.580 --> 01:54:39.220
弹幕的内容是下次一定

01:54:39.220 --> 01:54:41.180
然后作者

01:54:41.180 --> 01:54:41.940
谁发的呢

01:54:41.940 --> 01:54:43.460
老邓 白嫖 对吧

01:54:43.460 --> 01:54:44.180
老邓

01:54:44.180 --> 01:54:45.260
不是老邓

01:54:45.260 --> 01:54:45.660
对吧

01:54:45.660 --> 01:54:46.300
下次一定

01:54:46.300 --> 01:54:47.700
老邓也行

01:54:47.700 --> 01:54:48.860
然后时间

01:54:48.860 --> 01:54:50.940
是这个视频当中的E-Mail

01:54:50.940 --> 01:54:51.660
对吧

01:54:51.700 --> 01:54:52.460
E-Mail的时候

01:54:52.460 --> 01:54:53.460
老邓发了一个

01:54:53.460 --> 01:54:56.660
下次一定的弹幕

01:54:56.660 --> 01:54:57.260
对吧

01:54:57.260 --> 01:54:57.980
E-Mail的时候

01:54:57.980 --> 01:54:58.940
老邓发了一个

01:54:58.940 --> 01:55:00.180
下次一定这样的一个弹幕

01:55:00.180 --> 01:55:00.980
对吧

01:55:00.980 --> 01:55:02.660
那如果假如我再来一个

01:55:02.660 --> 01:55:03.140
我再来一个

01:55:03.140 --> 01:55:04.580
我问一个OE

01:55:04.580 --> 01:55:05.500
干嘛呢

01:55:05.500 --> 01:55:07.460
这个老邓过于活泼

01:55:07.460 --> 01:55:08.340
对吧

01:55:08.340 --> 01:55:08.700
对吧

01:55:08.700 --> 01:55:10.260
然后再又非常调皮

01:55:10.260 --> 01:55:12.540
来了一个上次给了 是吧

01:55:12.540 --> 01:55:13.540
上次给了

01:55:13.540 --> 01:55:14.940
然后同样

01:55:14.940 --> 01:55:19.340
这个作者还是老邓发的

01:55:19.340 --> 01:55:20.340
然后干嘛呢

01:55:20.380 --> 01:55:24.020
在这个视频的第二秒发的

01:55:24.020 --> 01:55:27.180
在这个视频的第二秒发的

01:55:27.180 --> 01:55:29.220
那同学们看着

01:55:29.220 --> 01:55:34.100
那这个是代表一条弹幕的一个例子

01:55:34.100 --> 01:55:35.860
一条弹幕的一个例子

01:55:35.860 --> 01:55:36.740
那你想想

01:55:36.740 --> 01:55:37.420
你想想

01:55:38.660 --> 01:55:39.340
对

01:55:39.340 --> 01:55:40.380
曹昂同学说的很对

01:55:40.380 --> 01:55:44.180
我是不是应该用一个数组装着他们

01:55:44.180 --> 01:55:46.060
一个数组装着他们

01:55:46.060 --> 01:55:47.380
那问同学们一个事

01:55:47.380 --> 01:55:48.580
为什么用数组装

01:55:48.580 --> 01:55:52.020
知道吗

01:55:52.020 --> 01:56:00.350
为什么用数组装知道吗

01:56:00.350 --> 01:56:02.070
为什么用数组装

01:56:02.070 --> 01:56:03.550
方便查找好便利

01:56:03.550 --> 01:56:04.510
方便便利

01:56:04.510 --> 01:56:07.790
你们说的都是后面的原因

01:56:07.790 --> 01:56:09.590
看着这句话很重要

01:56:09.590 --> 01:56:11.550
这句话很重要

01:56:11.550 --> 01:56:12.790
因为有序

01:56:14.510 --> 01:56:17.190
这句话是解这道题的一个关键点

01:56:17.190 --> 01:56:18.190
因为有序

01:56:20.030 --> 01:56:21.310
数组是有序的

01:56:21.310 --> 01:56:22.150
这个有问题吗

01:56:22.150 --> 01:56:22.470
同学们

01:56:23.470 --> 01:56:24.750
101234每项

01:56:24.750 --> 01:56:25.990
它的下标是有序的

01:56:25.990 --> 01:56:29.140
对吧

01:56:29.140 --> 01:56:29.500
对吧

01:56:29.500 --> 01:56:31.660
下标是有序的

01:56:31.660 --> 01:56:32.780
那同样这里面的

01:56:32.780 --> 01:56:33.460
因为数组

01:56:33.460 --> 01:56:34.380
它可以是有序

01:56:34.380 --> 01:56:34.900
可以是有序

01:56:34.900 --> 01:56:36.100
但是这下标有序

01:56:36.100 --> 01:56:36.500
对吧

01:56:36.500 --> 01:56:37.580
方便查好数据

01:56:37.580 --> 01:56:38.940
那同时

01:56:38.940 --> 01:56:41.260
同时这个有序加了这么多谈号

01:56:41.260 --> 01:56:43.620
还有说我们的数据是有序的

01:56:45.380 --> 01:56:53.590
数据也是有序的

01:56:53.590 --> 01:56:54.950
数据有序

01:56:54.950 --> 01:56:56.070
那为啥数据有序

01:56:56.070 --> 01:56:56.990
同学们听好了

01:56:56.990 --> 01:56:58.270
啥叫数据有序

01:56:58.270 --> 01:57:00.710
是不是第一秒的弹幕

01:57:00.710 --> 01:57:02.150
第二秒的弹幕

01:57:02.150 --> 01:57:03.910
第三秒的弹幕

01:57:03.910 --> 01:57:04.750
第四秒的弹幕

01:57:04.750 --> 01:57:05.550
对吧

01:57:05.550 --> 01:57:07.470
我说让你找到第四秒的弹幕

01:57:07.470 --> 01:57:08.590
你是不是原则上

01:57:08.590 --> 01:57:12.600
你直接从这个4里面找就行了

01:57:12.600 --> 01:57:13.320
数据有序

01:57:13.320 --> 01:57:14.760
就是这样的一个数

01:57:14.760 --> 01:57:16.600
我一个是Ree

01:57:16.600 --> 01:57:17.040
干嘛呢

01:57:18.680 --> 01:57:20.760
1 2 3 5

01:57:22.520 --> 01:57:25.600
7 8什么什么

01:57:25.600 --> 01:57:26.040
10

01:57:28.680 --> 01:57:32.720
12 15 20

01:57:32.720 --> 01:57:34.720
这里面1 2 3 4 5 6 8 10

01:57:34.720 --> 01:57:35.680
12 15 20

01:57:35.680 --> 01:57:36.840
这个代表什么呢

01:57:36.840 --> 01:57:39.200
代表的是我们发弹幕的一个时间

01:57:40.320 --> 01:57:41.520
发弹幕的一个时间

01:57:41.520 --> 01:57:42.600
因为用数组存

01:57:42.600 --> 01:57:44.240
而且这个弹幕是有序的

01:57:44.240 --> 01:57:47.160
因为我们的视频是从头到尾的

01:57:47.160 --> 01:57:47.680
对吧

01:57:47.680 --> 01:57:48.360
从头到尾的

01:57:48.360 --> 01:57:49.240
那一定是

01:57:49.240 --> 01:57:51.440
一定是在某一个时刻

01:57:51.440 --> 01:57:53.040
它会有一个弹幕

01:57:53.040 --> 01:57:53.480
对吗

01:57:53.480 --> 01:57:54.440
我这么讲能懂吗

01:57:56.990 --> 01:57:58.070
我这么讲能懂吗

01:57:58.070 --> 01:57:59.350
就是我们这个数据

01:57:59.350 --> 01:58:00.270
它是有序的

01:58:01.270 --> 01:58:03.550
时间是从短到多

01:58:03.550 --> 01:58:04.510
从短到多

01:58:05.390 --> 01:58:06.030
对吧

01:58:06.030 --> 01:58:07.390
那就相当于

01:58:07.390 --> 01:58:08.630
这会咱们就转化了

01:58:08.670 --> 01:58:11.190
是从1到20这一堆数据里面

01:58:11.190 --> 01:58:12.430
快速找个数 对吧

01:58:13.590 --> 01:58:15.310
包括说你不说弹幕这个事

01:58:15.310 --> 01:58:16.070
不说弹幕这个事

01:58:16.070 --> 01:58:16.950
你想想

01:58:16.950 --> 01:58:18.230
因为我刚才说了这么多

01:58:18.230 --> 01:58:21.150
目的是跟同学们强调数据是有序的

01:58:22.510 --> 01:58:24.870
有序是它的一个特点

01:58:24.870 --> 01:58:27.030
比方说比方同学们问你们个事

01:58:27.030 --> 01:58:28.790
这个因为我家旁边是

01:58:28.790 --> 01:58:31.710
咱们这个哈尔比尼哈西这边的一个

01:58:31.710 --> 01:58:33.270
细红小学校

01:58:33.270 --> 01:58:35.390
每天早上他们都排队上学

01:58:35.390 --> 01:58:39.780
那咱们排队会有个特点同学

01:58:39.820 --> 01:58:41.260
排队排队

01:58:42.700 --> 01:58:43.780
排队啥特点呢

01:58:43.780 --> 01:58:45.660
是不是从小到大

01:58:45.660 --> 01:58:46.620
或者从大到小

01:58:46.620 --> 01:58:47.580
从来到低

01:58:47.580 --> 01:58:48.340
从来到高

01:58:48.340 --> 01:58:49.940
对 从小到大

01:58:50.420 --> 01:58:50.820
对吧

01:58:50.820 --> 01:58:52.180
从低到高

01:58:52.580 --> 01:58:53.580
从高到低

01:58:53.580 --> 01:58:55.020
它是有这样的一个顺序的

01:58:55.500 --> 01:58:55.940
对吧

01:58:55.940 --> 01:58:56.860
从小到大也好

01:58:56.860 --> 01:58:57.540
从大到小也好

01:58:57.540 --> 01:58:58.460
它是有序的

01:58:58.460 --> 01:58:58.900
对吧

01:58:58.900 --> 01:58:59.540
那假如说

01:58:59.540 --> 01:59:00.220
既然好了

01:59:00.220 --> 01:59:01.580
你们从小到大已经排完了

01:59:01.580 --> 01:59:03.140
这20个学生也排好了

01:59:03.140 --> 01:59:04.940
我想在咱班找到

01:59:04.940 --> 01:59:05.860
我在哈尔比尼哈西

01:59:05.860 --> 01:59:06.980
在咱班找到什么

01:59:06.980 --> 01:59:08.140
那1米6的同学

01:59:08.140 --> 01:59:09.740
这个小学一年纪好像没没有

01:59:09.780 --> 01:59:11.700
在咱班找到一个1米的同学

01:59:11.700 --> 01:59:12.180
对吧

01:59:12.180 --> 01:59:14.540
你们现在已经从小到大排起来了

01:59:14.540 --> 01:59:16.180
我想找一个1米的同学

01:59:16.180 --> 01:59:17.660
同学们告诉我该咋找

01:59:21.510 --> 01:59:21.870
对吧

01:59:21.870 --> 01:59:23.030
它是从小排到大的

01:59:23.030 --> 01:59:24.750
然后我在从这同学们这里面

01:59:24.750 --> 01:59:25.830
这个找

01:59:25.830 --> 01:59:27.070
哎 这个 这个

01:59:27.910 --> 01:59:28.790
1米的同学

01:59:28.790 --> 01:59:29.590
咋找

01:59:30.830 --> 01:59:32.310
包括说咋找最快

01:59:38.180 --> 01:59:39.380
啊 洗过泥气

01:59:41.890 --> 01:59:42.370
对

01:59:42.370 --> 01:59:43.890
这里面有些同学说对了

01:59:43.890 --> 01:59:51.860
其实这道题考的就是一个二分茶招

01:59:52.100 --> 01:59:53.580
考的就是一个二分茶招

01:59:53.860 --> 01:59:55.340
考的就是一个二分茶招

01:59:56.460 --> 01:59:57.140
咱们说

01:59:57.140 --> 01:59:59.860
要是这个身高收1米的同学

01:59:59.860 --> 02:00:00.740
要1米的同学

02:00:00.740 --> 02:00:01.540
其他人不要

02:00:01.980 --> 02:00:02.940
其他人不要

02:00:03.940 --> 02:00:05.740
这道题本质上考的就是二分茶招

02:00:05.740 --> 02:00:06.220
干嘛

02:00:06.220 --> 02:00:07.580
我要第三秒的弹幕

02:00:07.580 --> 02:00:08.460
是不是要找到

02:00:08.460 --> 02:00:10.500
这个第三秒弹幕所在的位置就行了

02:00:10.940 --> 02:00:11.340
对吧

02:00:11.340 --> 02:00:12.340
对半茶招

02:00:12.340 --> 02:00:13.460
为什么说对半茶招

02:00:13.460 --> 02:00:14.660
它的效率高呢

02:00:15.660 --> 02:00:16.380
2的14房

02:00:16.380 --> 02:00:17.420
大家知道是多少吗

02:00:20.320 --> 02:00:21.000
2的14房

02:00:21.000 --> 02:00:21.800
知道是多少吗

02:00:22.960 --> 02:00:23.960
1024对吗

02:00:25.680 --> 02:00:26.600
1024

02:00:27.120 --> 02:00:27.680
意味着

02:00:27.680 --> 02:00:29.400
如果你对半招的话

02:00:29.400 --> 02:00:30.520
你找10次

02:00:30.520 --> 02:00:31.920
你就能找1000多人

02:00:34.660 --> 02:00:35.900
你就能找1000多

02:00:35.900 --> 02:00:36.580
10次

02:00:36.580 --> 02:00:37.860
能找1200

02:00:37.860 --> 02:00:38.500
1000

02:00:40.100 --> 02:00:40.620
10次

02:00:40.620 --> 02:00:41.900
相当于能找1000人

02:00:42.420 --> 02:00:44.820
但如果说你从1000个人里面找

02:00:44.820 --> 02:00:45.580
挨个招的话

02:00:45.580 --> 02:00:46.500
是不是需要1000次

02:00:50.360 --> 02:00:50.680
对吧

02:00:50.680 --> 02:00:51.320
1000个

02:00:51.320 --> 02:00:52.320
如果挨个招的话

02:00:52.320 --> 02:00:53.320
是需要1000次的

02:00:55.240 --> 02:00:57.160
但如果你这么对半招

02:00:57.160 --> 02:00:58.520
10次就能找1000个

02:00:58.520 --> 02:00:59.240
你想想

02:00:59.240 --> 02:01:00.520
数越大

02:01:00.520 --> 02:01:02.200
我们找的这个次数

02:01:02.240 --> 02:01:02.880
也就越少

02:01:02.880 --> 02:01:03.920
它的性能越高

02:01:04.880 --> 02:01:06.800
所以这道题考的就是一个二分茶招

02:01:08.560 --> 02:01:09.520
考的是二分茶招

02:01:09.520 --> 02:01:11.000
因为我们做什么事

02:01:11.520 --> 02:01:12.320
达到目的

02:01:13.840 --> 02:01:15.400
达到目的不是最终的结果

02:01:15.400 --> 02:01:16.760
我们尽可能用少的资源

02:01:16.760 --> 02:01:18.480
少的时间来达到这样的目的

02:01:18.760 --> 02:01:19.880
所以说这里面

02:01:22.000 --> 02:01:25.400
这个要有算法的一个优先度

02:01:26.000 --> 02:01:28.920
所以说这道题考的就是二分茶招

02:01:30.800 --> 02:01:31.680
那就像假如说

02:01:31.720 --> 02:01:32.400
在这里面

02:01:32.400 --> 02:01:33.280
假如说在这里面

02:01:33.280 --> 02:01:36.360
假如说咱们找三

02:01:36.360 --> 02:01:37.880
咱们就在这个数组里面找三

02:01:38.760 --> 02:01:40.480
咱们在这个数组里面找三

02:01:40.480 --> 02:01:41.160
那按照同学们说

02:01:41.160 --> 02:01:43.320
二分茶招第一次中间

02:01:43.320 --> 02:01:44.240
应该是齐这个位置

02:01:44.240 --> 02:01:44.800
对吧

02:01:44.800 --> 02:01:48.640
就是先是从一到二十

02:01:48.640 --> 02:01:49.200
对吧

02:01:49.200 --> 02:01:51.640
从一到二十就是第一位到最后一位

02:01:51.640 --> 02:01:52.240
干嘛呢

02:01:52.240 --> 02:01:53.440
去找 去找几呢

02:01:53.440 --> 02:01:55.040
去找 去找三

02:01:55.800 --> 02:01:57.240
那第一次看中间这个指

02:01:57.240 --> 02:01:58.440
中间这个是定七也好

02:01:58.440 --> 02:01:59.680
定八也好都行

02:01:59.680 --> 02:02:01.560
定七也好 定八也好也行

02:02:01.560 --> 02:02:03.520
中间这个七比三大比三小

02:02:03.520 --> 02:02:04.560
比三大 对吧

02:02:04.560 --> 02:02:05.360
那后面的

02:02:05.360 --> 02:02:06.120
它比三大

02:02:06.120 --> 02:02:07.480
后面的一定比三大

02:02:07.480 --> 02:02:09.160
所以说我们现在只需要在

02:02:09.160 --> 02:02:11.960
一到七里面找三就行了 对吧

02:02:13.280 --> 02:02:13.800
对吧

02:02:13.800 --> 02:02:16.120
那一到七的中间是多少呢

02:02:16.120 --> 02:02:17.600
一 二 三 四 五 六 七

02:02:17.600 --> 02:02:19.240
那中间可能是四

02:02:19.240 --> 02:02:19.720
对吧

02:02:19.720 --> 02:02:21.640
那发现四干嘛呢

02:02:21.640 --> 02:02:23.560
这个是七 七比三大 对吧

02:02:23.560 --> 02:02:24.280
这是四呢

02:02:24.280 --> 02:02:26.200
四 四比三还大

02:02:26.200 --> 02:02:27.680
那我只需要看什么呢

02:02:27.680 --> 02:02:31.200
一到四这样的一个曲减

02:02:31.200 --> 02:02:31.640
对吧

02:02:31.640 --> 02:02:33.560
一到四这样的曲减里面找三

02:02:33.560 --> 02:02:35.120
然后一到四这个曲减里面找三

02:02:35.120 --> 02:02:36.800
它对一半我们可以取到二

02:02:36.800 --> 02:02:37.360
对吧

02:02:37.360 --> 02:02:38.400
那二比三怎么样

02:02:38.400 --> 02:02:39.120
二比三小吧

02:02:40.440 --> 02:02:41.040
对吧

02:02:41.040 --> 02:02:42.160
二比三小

02:02:42.160 --> 02:02:42.800
那干嘛呢

02:02:42.800 --> 02:02:44.680
就我直接可以从

02:02:44.680 --> 02:02:46.400
三到四里面去取就可以了

02:02:48.080 --> 02:02:48.720
等会啊

02:02:48.720 --> 02:02:49.800
我觉得这个不太对

02:02:49.800 --> 02:02:51.040
二到四

02:02:51.040 --> 02:02:51.360
看着

02:02:53.200 --> 02:02:54.040
来来来

02:02:54.040 --> 02:02:54.880
这我从说一遍

02:02:54.880 --> 02:02:55.640
从说一遍

02:02:55.640 --> 02:02:56.280
一到二十

02:02:56.280 --> 02:02:57.760
第一个中间是七对吧

02:02:57.760 --> 02:02:58.800
中间一是七

02:02:58.800 --> 02:02:59.960
那这个位置就不需要从

02:02:59.960 --> 02:03:01.000
一到七去取

02:03:01.000 --> 02:03:02.240
一到六去取就可以了

02:03:02.240 --> 02:03:03.720
为什么七本来就比它大

02:03:03.720 --> 02:03:05.480
你直接从六去取不就完了吗

02:03:05.480 --> 02:03:05.920
对吧

02:03:05.920 --> 02:03:06.840
一到六去取

02:03:06.840 --> 02:03:08.960
那六的一半正好是三

02:03:08.960 --> 02:03:09.240
对吧

02:03:09.240 --> 02:03:11.040
那直接就完事了

02:03:11.040 --> 02:03:12.640
直接两次就找到了

02:03:12.640 --> 02:03:13.480
两次就找到了

02:03:15.240 --> 02:03:16.800
所以说接下来我们

02:03:16.800 --> 02:03:17.960
对 就是二查数

02:03:17.960 --> 02:03:19.320
就是二查数

02:03:19.320 --> 02:03:21.080
本身上就是这样的一个对半

02:03:21.080 --> 02:03:21.960
折半查找

02:03:21.960 --> 02:03:22.680
二分查找

02:03:26.270 --> 02:03:26.550
来吧

02:03:26.550 --> 02:03:28.550
那咱们就来搞一个这样的函数吧

02:03:28.550 --> 02:03:28.870
好吧

02:03:28.870 --> 02:03:29.910
咱们就搞一个这样的函数

02:03:30.910 --> 02:03:31.910
方身

02:03:36.910 --> 02:03:38.110
算法的思想啊

02:03:38.110 --> 02:03:39.310
不分前后台

02:03:39.310 --> 02:03:39.990
算法就是

02:03:39.990 --> 02:03:42.830
算法是思想

02:03:42.830 --> 02:03:47.310
是思想它不分前后

02:03:47.310 --> 02:03:48.950
来 这里面有一个orally

02:03:48.950 --> 02:03:50.510
有一个value

02:03:50.510 --> 02:03:52.150
干嘛呢

02:03:52.150 --> 02:04:00.380
在数组里面查找value

02:04:00.380 --> 02:04:02.380
在orally里面查找value

02:04:02.380 --> 02:04:05.540
那这数学购和算法的一个值是啥

02:04:05.540 --> 02:04:06.460
那这个时候干嘛呢

02:04:06.460 --> 02:04:09.220
我们需要知道我们的开始值

02:04:09.220 --> 02:04:11.580
就是start

02:04:11.580 --> 02:04:12.300
它等于多少呢

02:04:12.300 --> 02:04:14.380
也就是数组的领位

02:04:14.380 --> 02:04:16.500
从领位开始

02:04:16.500 --> 02:04:18.900
然后我们的这个按的呢

02:04:18.900 --> 02:04:20.260
就是我们的结束

02:04:20.260 --> 02:04:21.020
是从什么呢

02:04:21.020 --> 02:04:25.350
readersance开始

02:04:25.350 --> 02:04:26.070
然后干嘛呢

02:04:26.070 --> 02:04:28.310
如果这个start

02:04:28.310 --> 02:04:31.110
小于等于按的

02:04:31.110 --> 02:04:31.470
是吧

02:04:31.470 --> 02:04:33.230
如果这个start小于等于按的

02:04:33.230 --> 02:04:33.830
干嘛呢

02:04:33.830 --> 02:04:34.830
折中

02:04:34.830 --> 02:04:36.830
let这个

02:04:36.830 --> 02:04:37.830
这个mid

02:04:37.830 --> 02:04:38.270
干嘛呢

02:04:38.270 --> 02:04:39.350
等于它们的一半

02:04:39.350 --> 02:04:40.470
那这个一半怎么取呢

02:04:40.470 --> 02:04:41.070
plus in它

02:04:41.070 --> 02:04:41.990
向下去

02:04:41.990 --> 02:04:42.430
向下去

02:04:42.430 --> 02:04:43.070
什么呢

02:04:43.070 --> 02:04:44.670
这个这个

02:04:44.670 --> 02:04:46.030
这个按的

02:04:46.030 --> 02:04:47.630
减去start

02:04:47.630 --> 02:04:47.990
干嘛呢

02:04:47.990 --> 02:04:49.070
在数以二折中嘛

02:04:49.070 --> 02:04:50.150
对半查找

02:04:50.150 --> 02:04:51.390
对半查找

02:04:51.390 --> 02:04:52.510
那这个干嘛呢

02:04:52.510 --> 02:04:53.910
就是当我们前面值

02:04:53.910 --> 02:04:56.190
比后面值小的时候

02:04:56.190 --> 02:04:57.350
按中间这个值

02:04:57.350 --> 02:04:58.550
然后根据中间这个值

02:04:58.550 --> 02:04:59.430
判断一下

02:04:59.430 --> 02:05:00.470
如果orally慢的

02:05:00.470 --> 02:05:01.950
也就是中间的这个数

02:05:01.950 --> 02:05:02.790
怎么着呢

02:05:02.790 --> 02:05:04.390
如果等于谁啊

02:05:04.390 --> 02:05:06.270
等于我们的这个value

02:05:06.270 --> 02:05:06.790
怎么着呢

02:05:06.790 --> 02:05:08.110
说明我们找到了

02:05:08.110 --> 02:05:09.990
直接把这个

02:05:09.990 --> 02:05:11.590
这个位置返回就行了

02:05:11.590 --> 02:05:13.110
直接把这个位置返回

02:05:13.110 --> 02:05:13.950
那没找到

02:05:13.950 --> 02:05:15.710
或者说其他情况怎么算呢

02:05:15.710 --> 02:05:19.470
如果这个arri慢的

02:05:19.470 --> 02:05:20.270
干嘛呢

02:05:20.270 --> 02:05:24.230
比我们的这个value要大

02:05:24.230 --> 02:05:25.550
我们这个慢的

02:05:25.550 --> 02:05:27.910
比它大怎么办

02:05:27.910 --> 02:05:28.870
那慢的比它大

02:05:28.870 --> 02:05:29.550
就相当于讲说

02:05:29.550 --> 02:05:30.630
我想找8

02:05:30.630 --> 02:05:31.710
一个是7

02:05:31.710 --> 02:05:32.150
对吧

02:05:32.150 --> 02:05:33.310
8比7大怎么办

02:05:33.310 --> 02:05:34.870
它是在它的后面

02:05:34.870 --> 02:05:35.270
对吧

02:05:35.270 --> 02:05:36.070
在它的后面

02:05:36.070 --> 02:05:37.070
那这个时候怎么办呢

02:05:37.070 --> 02:05:38.470
应该让我们的这个

02:05:38.470 --> 02:05:39.630
这个start

02:05:39.630 --> 02:05:40.950
让我们的开始这个值

02:05:40.950 --> 02:05:41.670
start

02:05:41.670 --> 02:05:42.310
等于什么呢

02:05:42.310 --> 02:05:45.270
等于慢的加1

02:05:45.270 --> 02:05:46.110
对吧

02:05:46.110 --> 02:05:47.950
那加完1之后呢

02:05:47.950 --> 02:05:48.630
加完1之后

02:05:48.630 --> 02:05:51.670
是不是需要再次计算这个过程

02:05:51.670 --> 02:05:52.870
再次计算这个过程

02:05:52.870 --> 02:05:55.150
那所以说这个地方就不是f了

02:05:55.150 --> 02:05:57.190
改成没有

02:05:57.190 --> 02:05:58.350
改成没有

02:05:58.350 --> 02:05:59.390
那如果start

02:05:59.390 --> 02:06:01.670
这个如果慢的值比value要大的话

02:06:01.670 --> 02:06:03.550
那应该是

02:06:03.550 --> 02:06:07.510
搞错了

02:06:07.510 --> 02:06:09.950
如果中间的一个值比它要大

02:06:09.950 --> 02:06:10.990
说明它在左边

02:06:10.990 --> 02:06:12.270
它在左边应该是简易

02:06:12.270 --> 02:06:13.430
在左边应该是简易

02:06:13.430 --> 02:06:15.630
在左边是简易

02:06:15.630 --> 02:06:17.790
在左边是简易

02:06:17.790 --> 02:06:19.070
然后

02:06:19.070 --> 02:06:20.510
重新复制完之后干嘛呢

02:06:20.510 --> 02:06:21.270
继续执行

02:06:21.270 --> 02:06:23.590
continue

02:06:23.590 --> 02:06:29.890
continue

02:06:29.890 --> 02:06:31.650
哦对对对

02:06:31.650 --> 02:06:32.570
讲了一晚上

02:06:32.570 --> 02:06:33.530
可脑子有点乱了

02:06:33.530 --> 02:06:36.090
有些乱了有些乱了

02:06:36.090 --> 02:06:36.890
对对对

02:06:36.890 --> 02:06:37.730
按的按的按的

02:06:37.770 --> 02:06:39.690
我们把这个最终点

02:06:39.690 --> 02:06:42.130
这个放到中间往左的一个位置

02:06:42.130 --> 02:06:43.650
并且让这个循环继续执行

02:06:44.850 --> 02:06:46.050
那同样

02:06:46.050 --> 02:06:46.610
再来

02:06:46.610 --> 02:06:48.130
array

02:06:48.130 --> 02:06:49.290
mand

02:06:49.290 --> 02:06:49.930
干嘛呢

02:06:49.930 --> 02:06:51.450
它要比这个value小的话

02:06:51.450 --> 02:06:51.850
怎么算

02:06:53.370 --> 02:06:54.730
按的等于什么呢

02:06:54.730 --> 02:06:55.490
不是不是按的

02:06:55.490 --> 02:06:56.650
start

02:06:56.650 --> 02:06:57.290
开始

02:06:57.290 --> 02:06:58.450
开始等于什么的

02:06:58.450 --> 02:06:59.890
我们的这个mand加义

02:07:02.610 --> 02:07:03.490
这两个位置

02:07:03.490 --> 02:07:04.690
就相当于我们移动指针

02:07:04.690 --> 02:07:06.410
判断它所在的一个位置

02:07:06.410 --> 02:07:08.570
然后这个移动完之后

02:07:08.650 --> 02:07:09.370
也让它继续

02:07:10.970 --> 02:07:12.810
那如果这个循环跳出了

02:07:12.810 --> 02:07:13.370
说明啥事

02:07:13.370 --> 02:07:14.170
说明没找到

02:07:14.170 --> 02:07:15.570
我们直接返回附一就完了

02:07:16.650 --> 02:07:18.130
返回附一就完了

02:07:18.130 --> 02:07:19.250
在这我们干嘛呢

02:07:19.250 --> 02:07:20.370
输出一个

02:07:20.370 --> 02:07:21.490
比如说在我们上面那个

02:07:21.490 --> 02:07:21.970
array

02:07:21.970 --> 02:07:23.970
这个这个banner research

02:07:23.970 --> 02:07:24.810
我们找一个什么呢

02:07:24.810 --> 02:07:26.250
在array里面找一个

02:07:27.330 --> 02:07:28.290
找一个

02:07:28.290 --> 02:07:29.210
找一个11

02:07:29.210 --> 02:07:30.330
这点没11对吧

02:07:30.330 --> 02:07:31.050
找11的话

02:07:31.050 --> 02:07:32.610
就应该什么输出附一对吧

02:07:36.170 --> 02:07:36.970
附近打开一个

02:07:45.460 --> 02:07:46.300
不是

02:07:46.460 --> 02:07:47.100
死循环了

02:07:48.940 --> 02:07:49.980
看看哪出问题了

02:08:03.180 --> 02:08:05.060
这个我们输组的骑士位置干嘛

02:08:05.060 --> 02:08:05.980
这应该是简易啊

02:08:05.980 --> 02:08:06.660
这应该是简易

02:08:06.660 --> 02:08:07.620
不简易不行

02:08:07.620 --> 02:08:09.140
因为输组最后一个取不到

02:08:09.140 --> 02:08:09.540
取不到

02:08:09.540 --> 02:08:10.380
最后一个取不到

02:08:11.940 --> 02:08:13.180
所以说刚才陷入了死循环

02:08:15.860 --> 02:08:16.620
这还是

02:08:19.900 --> 02:08:28.980
array

02:08:28.980 --> 02:08:40.410
这是中间那个指

02:08:40.410 --> 02:08:51.770
按的点start

02:08:51.770 --> 02:08:52.210
对呀

02:08:53.490 --> 02:08:54.170
来看一下

02:08:54.170 --> 02:08:58.420
输出一下这个start和按的

02:08:58.420 --> 02:08:59.580
看看它俩出在哪

02:09:12.430 --> 02:09:13.110
嗯

02:09:14.470 --> 02:09:23.060
哎死循环这样

02:09:23.060 --> 02:09:35.560
看看哪出问题了

02:09:35.560 --> 02:09:37.160
哎这个正常是返回附一啊

02:09:37.160 --> 02:09:38.680
直接返回附一了

02:09:38.680 --> 02:09:41.660
然后这个地方

02:09:41.660 --> 02:09:42.740
肯推扭继续

02:09:44.660 --> 02:09:45.860
通常啊

02:09:45.860 --> 02:09:52.660
难道说这个地方是小鱼

02:09:52.660 --> 02:09:53.340
小鱼也不对

02:09:53.340 --> 02:09:54.740
它也是一直在执行的

02:09:55.860 --> 02:10:01.470
就是应该是小鱼等于啊

02:10:01.470 --> 02:10:02.230
关掉关掉关掉

02:10:03.630 --> 02:10:04.190
嗯

02:10:19.940 --> 02:10:29.380
应该是这个应该是这个

02:10:29.380 --> 02:10:31.460
这个地方Continue

02:10:31.460 --> 02:10:38.040
下面的话就不需要了

02:10:38.040 --> 02:10:38.600
嗯

02:10:39.840 --> 02:10:43.710
这是啥问题呢

02:10:43.710 --> 02:10:44.710
肯定有肯定可以了

02:10:44.710 --> 02:10:48.830
好散了

02:10:48.830 --> 02:10:59.980
嗯

02:10:59.980 --> 02:11:00.740
那不对

02:11:00.740 --> 02:11:04.940
等会啊

02:11:04.940 --> 02:11:08.630
这是啥问题呢

02:11:08.630 --> 02:11:09.470
多水多水

02:11:10.990 --> 02:11:15.720
等会啊

02:11:15.720 --> 02:11:20.020
这是啥问题呢

02:11:20.020 --> 02:11:20.700
Farce Incense

02:11:22.220 --> 02:11:23.060
这个没有问题啊

02:11:23.060 --> 02:11:39.400
这是我们取中间的这个指

02:11:39.400 --> 02:11:47.860
来我们看看

02:11:47.860 --> 02:11:57.610
52好错了

02:11:57.610 --> 02:11:58.690
那不对没有命中

02:11:58.690 --> 02:11:59.970
哎中了啊

02:11:59.970 --> 02:12:00.530
呃

02:12:03.730 --> 02:12:07.960
61啊

02:12:07.960 --> 02:12:09.440
呃

02:12:09.440 --> 02:12:10.960
52行的话

02:12:10.960 --> 02:12:12.440
应该是按的简讯

02:12:12.440 --> 02:12:16.070
Begin to 2

02:12:16.070 --> 02:12:17.550
这个是

02:12:17.550 --> 02:12:26.020
这个是中间的一半吗

02:12:26.020 --> 02:12:27.300
011

02:12:27.300 --> 02:12:27.740
对呀

02:12:27.740 --> 02:12:29.020
整体是011

02:12:29.020 --> 02:12:29.380
然后

02:12:30.540 --> 02:12:34.460
它的一半

02:12:34.460 --> 02:12:42.190
是加

02:12:42.190 --> 02:12:50.410
怎么能是

02:12:50.410 --> 02:12:51.690
加

02:12:51.690 --> 02:12:57.510
这个地方是加吗

02:12:57.510 --> 02:13:10.750
这个地方是加吗

02:13:10.750 --> 02:13:12.550
嗯

02:13:12.550 --> 02:13:14.190
我们要它的一一半

02:13:16.110 --> 02:13:16.910
一

02:13:16.910 --> 02:13:17.110
对

02:13:18.470 --> 02:13:19.030
一半

02:13:20.910 --> 02:13:28.140
一半

02:13:28.140 --> 02:13:29.340
这个这个这个是

02:13:29.340 --> 02:13:30.660
哎呀

02:13:30.660 --> 02:13:40.370
这是什么情况呢

02:13:40.370 --> 02:13:41.690
它找的一半

02:13:42.770 --> 02:13:43.050
对呀

02:13:43.050 --> 02:13:46.500
我们用按的

02:13:46.500 --> 02:13:47.060
不对啊

02:13:47.060 --> 02:13:48.260
不对不对不对

02:13:48.260 --> 02:13:49.140
假如说我们找的

02:13:49.140 --> 02:13:53.220
假如说我们找一个二

02:13:53.220 --> 02:13:54.060
我们找一个二

02:13:56.600 --> 02:13:57.040
哎

02:13:58.240 --> 02:13:59.160
奇怪了啊

02:14:01.160 --> 02:14:02.120
看着啊

02:14:02.120 --> 02:14:03.160
这个这个过程啊

02:14:03.160 --> 02:14:03.720
这个过程

02:14:03.880 --> 02:14:09.940
呃

02:14:09.940 --> 02:14:10.380
对

02:14:10.380 --> 02:14:11.160
对

02:14:11.180 --> 02:14:11.700
对

02:14:11.700 --> 02:14:12.820
对

02:14:12.820 --> 02:14:13.460
对

02:14:13.460 --> 02:14:17.260
对

02:14:17.260 --> 02:14:17.380
对

02:14:17.380 --> 02:14:19.340
对

02:14:19.340 --> 02:14:20.600
对

02:14:20.620 --> 02:14:22.060
在讲一晚上脑子制度了

02:14:22.060 --> 02:14:22.380
是 加

02:14:22.380 --> 02:14:22.500
是

02:14:22.500 --> 02:14:22.900
加

02:14:24.100 --> 02:14:24.500
对

02:14:24.500 --> 02:14:24.700
啊

02:14:24.700 --> 02:14:25.180
来

02:14:25.180 --> 02:14:26.220
这是这么回事啊

02:14:26.220 --> 02:14:26.460
对

02:14:26.460 --> 02:14:27.580
从这儿看的话

02:14:27.580 --> 02:14:29.220
这刚开始啊

02:14:29.220 --> 02:14:29.900
这给是12个数

02:14:29.900 --> 02:14:30.300
对吧

02:14:30.300 --> 02:14:31.340
它的下标是12

02:14:32.340 --> 02:14:33.780
它的下标是12

02:14:33.780 --> 02:14:34.780
那么刚开始找

02:14:34.780 --> 02:14:36.340
它应该是1加12

02:14:36.340 --> 02:14:37.340
1加上12

02:14:38.820 --> 02:14:39.660
對對他們說的對

02:14:39.660 --> 02:14:40.100
說的對

02:14:40.100 --> 02:14:41.500
這個講了一晚上課

02:14:41.500 --> 02:14:42.180
腦子昏了

02:14:43.060 --> 02:14:43.500
V2

02:14:43.500 --> 02:14:43.940
對對對

02:14:43.940 --> 02:14:45.220
香蕉香蕉

02:14:45.220 --> 02:14:47.540
這樣的一個位置所謂的13那一半

02:14:47.540 --> 02:14:49.900
13那一半就是這個6點多

02:14:49.900 --> 02:14:50.820
就是算6

02:14:50.820 --> 02:14:51.180
對吧

02:14:51.180 --> 02:14:51.700
算6

02:14:52.260 --> 02:14:54.260
那就說在第6這個位置上去找

02:14:55.300 --> 02:14:56.580
在第6這個位置上去找

02:14:56.580 --> 02:14:57.420
那這個從6

02:14:57.420 --> 02:14:58.820
那可能是6到12

02:15:00.620 --> 02:15:01.260
6到12

02:15:02.660 --> 02:15:03.420
6到12

02:15:03.420 --> 02:15:04.260
那6到12

02:15:04.340 --> 02:15:05.260
這樣的一個位置

02:15:05.260 --> 02:15:06.540
這個這個這個

02:15:07.820 --> 02:15:08.460
發的一半

02:15:08.460 --> 02:15:09.220
6加12

02:15:13.140 --> 02:15:14.620
這個這個2

02:15:14.860 --> 02:15:15.580
對對對對

02:15:16.500 --> 02:15:17.380
18 19

02:15:17.380 --> 02:15:17.820
對對對

02:15:17.820 --> 02:15:19.060
這樣是這樣是沒問題的

02:15:19.500 --> 02:15:20.580
這樣是沒問題的

02:15:20.580 --> 02:15:21.460
這樣是沒問題的

02:15:22.060 --> 02:15:22.860
對對對對

02:15:24.260 --> 02:15:25.260
啊搞搞混了

02:15:25.260 --> 02:15:25.780
搞混了

02:15:27.340 --> 02:15:28.340
這樣的話就沒問題了

02:15:28.340 --> 02:15:29.220
這樣的話就沒問題了

02:15:29.900 --> 02:15:30.740
好不容易這個

02:15:32.300 --> 02:15:32.740
ok啊

02:15:32.740 --> 02:15:34.300
就是2對應的位置是1

02:15:34.300 --> 02:15:34.740
對吧

02:15:34.740 --> 02:15:35.660
比如說找個5

02:15:35.660 --> 02:15:36.300
什麼的都行

02:15:38.860 --> 02:15:39.420
4

02:15:39.420 --> 02:15:40.420
包括說找100

02:15:44.380 --> 02:15:44.820
ok啊

02:15:45.380 --> 02:15:45.820
沒問題啊

02:15:45.820 --> 02:15:46.220
沒問題

02:15:46.220 --> 02:15:46.660
這樣的話

02:15:46.660 --> 02:15:47.540
這就完成了

02:15:47.540 --> 02:15:48.060
就完成了

02:15:48.060 --> 02:15:49.300
這道題本身不難

02:15:49.300 --> 02:15:49.900
本身不難

02:15:49.900 --> 02:15:51.220
更多的是關於書籍

02:15:51.220 --> 02:15:52.780
構根算法的一個思考

02:15:52.780 --> 02:15:53.420
一個思考

02:15:53.420 --> 02:15:54.420
關於這道題

02:15:54.420 --> 02:15:55.340
為什麼用數組

02:15:55.340 --> 02:15:57.060
包括說它的一個特點

02:15:57.060 --> 02:15:57.780
就包括說

02:15:57.780 --> 02:15:59.140
為什麼用二分查找前提

02:15:59.140 --> 02:16:00.340
是數據一定是有序

02:16:00.980 --> 02:16:01.820
一定是有序

02:16:04.900 --> 02:16:05.380
ok啊

02:16:12.180 --> 02:16:12.980
這個的話

02:16:13.820 --> 02:16:14.940
這個還是要加的

02:16:14.940 --> 02:16:15.740
還是要加的

02:16:15.820 --> 02:16:16.500
還是要加的

02:16:17.060 --> 02:16:18.180
你不加肯定有的話

02:16:18.180 --> 02:16:18.860
就是這個地方

02:16:18.860 --> 02:16:19.380
就是什麼呢

02:16:19.380 --> 02:16:20.100
Alsof

02:16:20.100 --> 02:16:21.260
就保證他們別進來

02:16:21.900 --> 02:16:22.900
保證他們別進來

02:16:22.900 --> 02:16:24.020
這個地方也是Alsof

02:16:25.820 --> 02:16:26.980
你不加肯定有的話

02:16:26.980 --> 02:16:27.980
加上Alsof也行

02:16:30.120 --> 02:16:31.560
就是保證他們別進來

02:16:32.560 --> 02:16:32.920
al

02:16:32.920 --> 02:16:34.200
因為他們三只能走一個

02:16:34.200 --> 02:16:34.800
要麽相等

02:16:34.800 --> 02:16:35.640
要麽大要麽小

02:16:36.160 --> 02:16:36.640
你萬一

02:16:36.640 --> 02:16:38.480
你萬一這個加減的話

02:16:38.480 --> 02:16:40.120
他可能會讓他們衝突

02:16:40.120 --> 02:16:41.280
所以說保證

02:16:41.280 --> 02:16:42.560
這個這個每個值

