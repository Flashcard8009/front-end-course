WEBVTT

00:00.240 --> 00:03.060
这一课是一个选修课程

00:03.320 --> 00:05.360
因为有的时候

00:05.880 --> 00:09.200
在面试的时候面试官可能会问你这三个东西的

00:09.460 --> 00:10.480
一些面试问题

00:10.740 --> 00:13.540
所以说我用一个选修课程给大家解释

00:14.060 --> 00:18.420
这一块你学不学跟你平时做代码开发没有啥关系

00:18.680 --> 00:20.460
完全不影响你的代码

00:20.720 --> 00:21.740
你该咋写咋写

00:22.000 --> 00:23.540
跟什么阿家课实在都没有关系

00:24.040 --> 00:25.320
它是一些原理层面的

00:25.840 --> 00:27.380
这些东西可能跟运萎有关系

00:28.020 --> 00:31.980
面试的时候有可能会考察你这些基础知识

00:32.500 --> 00:33.520
位上的主要是

00:34.540 --> 00:35.580
特别是销涨的时候

00:35.820 --> 00:38.380
他认为你是一个计算机专业的学生

00:38.900 --> 00:41.460
那么你在大学里面应该学过这些东西

00:41.720 --> 00:43.260
应该对这些东西是有了解的

00:43.520 --> 00:44.280
所以说我在这里

00:44.540 --> 00:46.320
统一用一个课程来解释一下

00:46.840 --> 00:50.160
这三个概念SSL和TLS

00:50.420 --> 00:51.700
以及ATBS

00:51.960 --> 00:52.720
这三个东西

00:52.980 --> 00:56.040
有些同学可能没见过 但是至少听出过这个东西

00:56.300 --> 00:57.080
ATBS

00:57.580 --> 01:00.140
像这个东西其实我们平时上网的时候见到过

01:00.400 --> 01:01.420
比方说

01:01.680 --> 01:02.700
像我那个网站

01:04.240 --> 01:05.020
像这个网站

01:05.520 --> 01:07.580
你看有些网站访问的时候你是使用什么

01:07.840 --> 01:09.100
ATBS协议

01:09.360 --> 01:11.160
那么就前面会有一个不安全

01:11.660 --> 01:15.000
那使凡是显示这个不安全的话那肯定就是ATBS协议

01:15.760 --> 01:17.040
那如果说你是ATBS

01:17.300 --> 01:18.840
比方说像他们的同性科堂

01:19.600 --> 01:21.900
你看这里是不是ATBS 前面就有一把鼠

01:22.420 --> 01:24.220
说明啥 说明这个网站是安全的

01:24.940 --> 01:27.660
我们比较直观的一个能看到

01:27.920 --> 01:31.080
他跟ATBS的一个区别对吧 在用户体验这一块

01:31.860 --> 01:34.660
然后另外的话你这两个东西是什么东西呢

01:34.920 --> 01:36.720
这两个网站是在传输上的

01:37.480 --> 01:38.760
好 我们来说一下这两个

01:39.020 --> 01:42.600
一个是SSL 它叫做Secure Sockets Layer

01:43.380 --> 01:45.160
安全套节制协议

01:45.680 --> 01:46.960
反正就是做安全用的

01:47.460 --> 01:49.000
主要是搞定传输安全

01:49.260 --> 01:52.340
就咱们计算机安全有很多的方面

01:53.300 --> 01:54.860
包括了个代码安全

01:55.180 --> 01:56.860
包括我们的数据安全

01:57.160 --> 01:59.060
那这里主要是传输安全

01:59.540 --> 02:01.240
什么叫传输安全啊 就是你写的

02:01.760 --> 02:04.240
以写的帐号密码提交的信息 发送到服务器

02:04.240 --> 02:05.860
对吧 请求的数据到服务器

02:06.060 --> 02:09.540
那么这个传送过程中不要让第三方能够

02:09.540 --> 02:10.820
窃取道理的信息

02:11.220 --> 02:13.980
同时也不要让第三方能够更改的信息

02:13.980 --> 02:16.340
因为我们知道在网络的通信过程中

02:16.340 --> 02:19.740
其实你的消息和服务器之间的消息发送

02:20.100 --> 02:21.540
它是要经过很多节点的

02:21.980 --> 02:23.260
比方说你在这

02:23.660 --> 02:24.380
服务器在这

02:24.900 --> 02:26.380
那你们之间要传输的话

02:26.620 --> 02:28.340
中间会经过很多的节点

02:28.620 --> 02:30.940
那么这些东西我们可以认为它是一些路由器

02:31.780 --> 02:34.900
那么通过这种一步一步到达服务器的

02:35.500 --> 02:36.220
通过这种方式

02:36.500 --> 02:37.780
一步一步到达服务器

02:37.980 --> 02:39.540
然后服务器那边也是一样

02:39.980 --> 02:40.980
通过这些路由器

02:41.300 --> 02:42.460
一步一步到达侧服端

02:42.780 --> 02:44.340
那么中间那就是很多的路由器

02:44.340 --> 02:46.020
每个路由器都是一个节点

02:46.660 --> 02:49.260
那这个节点里面就可能会中一些病毒啊

02:49.580 --> 02:50.900
或者是植入一些木马呀

02:50.900 --> 02:54.940
总之第三方就有可能通过这个节点

02:55.260 --> 02:57.140
能够监听到底传输的消息

02:57.660 --> 02:59.100
然后呢更改这个消息

02:59.300 --> 03:00.300
对吧进行篡改

03:00.820 --> 03:01.980
那么为什么要做安全

03:01.980 --> 03:03.380
就是为了防止这件事

03:03.900 --> 03:06.100
当然这个过程是比较曲折的

03:07.380 --> 03:09.060
然后第二个TSL

03:09.060 --> 03:11.860
TLS是叫做传输成安全协议

03:11.860 --> 03:13.900
其实这两个玩意是一个东西

03:14.540 --> 03:16.980
TLS是SSL的升级版

03:17.460 --> 03:20.540
所以我们有的时候说TLS和SSL

03:20.740 --> 03:22.940
两个实际上都几乎都是一样的

03:23.180 --> 03:24.300
并没有太大的区别

03:24.860 --> 03:26.940
然后关键是这两个东西

03:27.540 --> 03:29.260
跟那个ATPS有什么区别呢

03:29.460 --> 03:32.180
ATPS它的全程叫做一床串

03:32.180 --> 03:33.020
但是你看这

03:33.940 --> 03:35.340
Secure sockets layer

03:35.860 --> 03:37.260
Secure sockets layer

03:37.260 --> 03:37.940
啥意思啊

03:38.180 --> 03:42.380
就是它就是建立在SSL协议之上的ATPS协议

03:43.180 --> 03:45.420
所以说这个其实关系就明确了

03:45.620 --> 03:47.420
如果说我们不使用ATPS的话

03:47.460 --> 03:49.700
我们的协议上层

03:49.700 --> 03:51.500
就应用层使用的是ATP

03:51.740 --> 03:52.060
对吧

03:52.060 --> 03:53.740
我们什么请求投

03:54.100 --> 03:56.220
请求行使用的是这个协议

03:56.780 --> 04:00.620
然后我们下边就是使用TCP协议

04:00.620 --> 04:01.940
是不是三出货手 四指挥手

04:01.940 --> 04:03.500
然后中间就已经传输数据

04:04.900 --> 04:06.740
然后如果说我们使用ATPS的话

04:06.740 --> 04:09.500
就相当于是在TCP上面加了一层

04:10.220 --> 04:13.140
就安全协议SSL和TLS

04:13.820 --> 04:14.740
这两个其实是一个东西

04:15.580 --> 04:17.380
那么这个主要是做安全的

04:17.700 --> 04:18.060
知道吧

04:18.060 --> 04:19.340
还是要经过三出握手

04:19.340 --> 04:21.220
三出握手再做一些安全处理

04:21.220 --> 04:24.100
那么后续的传输就没有安全问题了

04:24.100 --> 04:25.500
是做这么一个处理的

04:25.740 --> 04:28.140
然后在它上面再搭一个ATDP

04:28.140 --> 04:29.340
那就是ATPS

04:29.580 --> 04:31.180
所以ATPS就是这么一个东西

04:31.380 --> 04:33.580
因此我们要学习ATPS的话

04:33.580 --> 04:35.700
其实就是要学习SSL

04:36.060 --> 04:37.220
或者是TLS

04:37.220 --> 04:37.820
两个一样

04:37.820 --> 04:38.900
我们认为两个一样

04:39.340 --> 04:40.900
其实你把这个东西搞清楚了

04:40.900 --> 04:42.780
ATPS就没有什么神秘的了

04:43.020 --> 04:44.460
因为它自己没有什么东西

04:44.620 --> 04:46.020
它主要就是套了一个这个东

04:46.020 --> 04:46.820
这一层

04:47.460 --> 04:48.060
知道了

04:48.060 --> 04:48.340
好

04:48.340 --> 04:51.020
那么我们来了解一下这个东西到底是啥

04:51.220 --> 04:52.980
这里我给大家做了一个

04:53.380 --> 04:54.100
PPT

04:55.260 --> 04:56.980
用一个灵魂画手画的

04:58.260 --> 04:59.900
这一块因为它比较复杂

04:59.900 --> 05:00.740
知道吧

05:00.740 --> 05:02.260
它是绕着不得了

05:02.460 --> 05:04.620
其实同学们也可以体验一下

05:05.340 --> 05:07.980
在互联网中要解决这个安全问题

05:08.140 --> 05:09.380
是多么的困难

05:09.620 --> 05:11.540
因为互联网设计的初中

05:11.540 --> 05:15.420
其实就是开放性的网络

05:15.700 --> 05:16.540
开放性的网络

05:16.540 --> 05:18.340
其实有一个特点叫做历鸣性

05:18.660 --> 05:20.380
就是你不知道发这个消息的人

05:20.380 --> 05:22.820
他这个自然人到底是谁

05:23.020 --> 05:24.700
只知道有一个消息发出来了

05:24.700 --> 05:25.980
也不是他是人是谁

05:26.540 --> 05:30.020
消息说关于这个互联网安全

05:30.780 --> 05:32.860
其实也在讨论要不要进行实名

05:33.020 --> 05:34.460
就实名过后就好简单了

05:34.460 --> 05:34.860
对吧

05:35.260 --> 05:36.260
你要搞坏事

05:36.260 --> 05:37.940
我可以让你搞坏事

05:37.940 --> 05:39.580
你搞坏事我可能马上定位到底

05:39.660 --> 05:40.660
我知道你是谁

05:41.020 --> 05:42.780
所以说通过法律的角度

05:42.780 --> 05:44.260
通过其他的方式

05:44.260 --> 05:45.620
来解决这个安全的问题

05:45.660 --> 05:47.540
但是由于互联网他设计的初中

05:47.540 --> 05:50.780
他就是有历鸣性这个特性存占

05:50.780 --> 05:52.900
所以造成了很多的安全性问题

05:53.220 --> 05:53.860
然后我们来看一下

05:53.860 --> 05:55.020
这个安全性怎么造成的

05:55.300 --> 05:57.780
比方说现在我们互联网中有两个角色

05:57.780 --> 05:58.660
一个是客户端

05:58.660 --> 06:00.460
比方说弄个客户端

06:00.460 --> 06:01.940
然后一个是服务器

06:01.940 --> 06:02.900
比方说是Molica

06:03.140 --> 06:04.620
两个人要发出消息

06:04.900 --> 06:07.580
但是有一个恶意的攻击者

06:08.020 --> 06:08.980
比方说诚哥

06:08.980 --> 06:10.460
我举别人也不合适了

06:10.620 --> 06:12.140
我就咱们这三个主角

06:12.140 --> 06:13.820
就算这个三个人还是玩

06:14.220 --> 06:15.020
怎么来玩的

06:15.100 --> 06:17.340
这两个人是不知道有诚哥存在的

06:17.340 --> 06:18.940
就是你在上网的时候

06:18.940 --> 06:21.420
你不知道中间那些节点

06:21.420 --> 06:23.260
有没有被攻击了

06:23.460 --> 06:23.940
是吧

06:23.940 --> 06:24.900
所以说我们这里

06:25.100 --> 06:26.780
他们两个是不知道诚哥存在的

06:26.780 --> 06:27.020
好

06:27.020 --> 06:27.660
我们来看一下

06:28.020 --> 06:29.980
比方说邓哥客户端

06:29.980 --> 06:30.820
他要发一个消息

06:30.820 --> 06:32.500
就请求服务器

06:32.500 --> 06:33.140
Molica

06:33.140 --> 06:33.980
然后发一个消息

06:34.140 --> 06:34.700
我爱你

06:34.940 --> 06:35.900
进行表白

06:36.420 --> 06:37.220
那么这个时候

06:37.500 --> 06:39.060
他有可能会出现一个什么情况

06:39.060 --> 06:40.740
因为中间的网络传输

06:40.740 --> 06:43.140
他会经过很多路由器的节点

06:43.780 --> 06:44.700
那么其中一个节点

06:44.700 --> 06:46.380
那就可能诚哥在那里

06:46.380 --> 06:47.180
功后多时了

06:47.180 --> 06:49.740
都说此路是我开

06:49.740 --> 06:50.500
此山是我

06:50.940 --> 06:51.660
怎么说的

06:52.420 --> 06:53.500
此树是我栽

06:53.860 --> 06:54.780
此山是我开

06:54.780 --> 06:56.140
都要达此路过

06:56.140 --> 06:57.180
我给你进行创改

06:57.580 --> 06:57.900
好

06:57.900 --> 06:58.500
比方说

06:58.500 --> 06:59.700
邓哥发了一个我爱你

06:59.700 --> 07:01.700
那么在某一个中间节点

07:01.820 --> 07:03.300
就被诚哥拿到这个消息了

07:03.780 --> 07:05.060
想要你像

07:05.340 --> 07:06.260
撬墙角是吧

07:06.260 --> 07:06.900
你不行

07:06.900 --> 07:08.060
那我给你改一下

07:08.060 --> 07:09.220
把这个消息改一下

07:09.220 --> 07:10.620
变成了我恨你

07:11.740 --> 07:13.780
那么就把这个消息发给了Molica

07:13.860 --> 07:15.740
那么他服务器接收到的消息

07:15.740 --> 07:17.220
他不知道被串改过了

07:17.220 --> 07:18.780
他就认为是一个正常的消息

07:18.780 --> 07:20.740
就认为这个消息是诚哥发过来的

07:20.740 --> 07:21.460
那这个后果了

07:21.460 --> 07:22.900
就有点不可想象了

07:23.500 --> 07:25.500
那么这种情况如何来避免的

07:25.500 --> 07:27.700
就是说中间这个节点

07:28.060 --> 07:31.340
他能够属意的监听这种消息

07:31.340 --> 07:32.660
这种消息就是明文消息

07:32.660 --> 07:34.060
他没有经过加密的

07:34.340 --> 07:35.940
他能够监听这个消息

07:36.100 --> 07:36.580
对吧

07:36.580 --> 07:38.660
而且还能够属意串改这个消息

07:38.660 --> 07:39.500
这难不住

07:40.460 --> 07:42.060
像我们这个ATP协议

07:42.780 --> 07:43.980
像这个ATP协议

07:44.780 --> 07:45.820
就是这个情况

07:48.090 --> 07:50.250
就是你这边请求我这个网页

07:50.250 --> 07:52.130
可能是看到了另外一个

07:52.810 --> 07:54.250
莫名其妙的网页

07:54.250 --> 07:54.850
那说明啥

07:54.850 --> 07:56.170
说明中间被串改过了

07:56.170 --> 07:56.690
对不对

07:56.690 --> 07:57.970
服务器那边响应的结果

07:57.970 --> 07:59.170
也有可能会被串改

07:59.170 --> 08:00.570
我刚才觉得例子是

08:00.570 --> 08:02.290
客户端的发的消息被串改了

08:02.290 --> 08:03.290
那服务器给服务器

08:03.290 --> 08:04.050
给服务器响应的消息

08:04.050 --> 08:05.250
也有可能被他串改

08:05.250 --> 08:05.610
对吧

08:05.610 --> 08:07.090
本来我给你发了一个正常的网页

08:07.090 --> 08:09.010
结果你看到一些莫名其妙的东西

08:09.530 --> 08:10.330
这就是有的时候

08:10.330 --> 08:11.570
你上网的过程中

08:11.570 --> 08:12.650
你发现一些网站

08:12.650 --> 08:14.650
老是一些右下角弹框

08:14.650 --> 08:15.650
特别是一些小网站

08:15.650 --> 08:16.930
像我这种小网站

08:16.930 --> 08:18.530
右下角可能弹一个广告

08:19.410 --> 08:20.210
那是怎么回事

08:20.210 --> 08:22.210
那就可能是被中间串改过了

08:22.890 --> 08:23.970
这口网页在中间

08:23.970 --> 08:25.970
给你加了一条广告在这个页面上

08:25.970 --> 08:27.010
有可能

08:27.010 --> 08:29.010
它不是这个网站本身要加的广告

08:29.450 --> 08:30.490
网站本身没有广告

08:30.490 --> 08:32.930
结果了中间被加了一个广告了

08:32.930 --> 08:35.050
就可能会有这么一个情况出现

08:36.050 --> 08:37.330
那么如何来解决呢

08:37.330 --> 08:38.210
我们就要用那个

08:38.210 --> 08:41.930
我们马上要学习的这个SSL来解决

08:42.650 --> 08:43.170
怎么做呢

08:43.170 --> 08:44.090
我们来一步一步看

08:44.090 --> 08:45.930
SSL是怎么演化的

08:45.930 --> 08:47.330
怎么来解决这个问题的

08:47.330 --> 08:48.650
首先比较容易想到的就是

08:48.650 --> 08:49.530
我进行加密

08:50.330 --> 08:50.730
对不对

08:50.730 --> 08:52.130
那加密有很多的方式

08:52.130 --> 08:53.050
是不是我们学过的

08:53.050 --> 08:54.170
有什么对称加密啊

08:54.170 --> 08:55.050
非对称加密

08:55.050 --> 08:56.450
那这里肯定不能用哈希了

08:56.450 --> 08:57.690
因为哈希是解不了密的

08:57.690 --> 08:58.130
对吧

08:58.130 --> 09:00.210
所以我们必须要能够解密才行

09:00.210 --> 09:02.210
那么对称加密和非对称加密呢

09:02.210 --> 09:03.210
我们选一种

09:03.210 --> 09:05.290
我们这里比较选择对称加密

09:06.130 --> 09:07.810
那选择对称加密的好处在什么呢

09:07.810 --> 09:09.530
因为对称加密的加密速度

09:09.530 --> 09:11.170
和解密速度是非常快的

09:11.210 --> 09:13.170
像我们网络通信过程的话

09:13.170 --> 09:16.250
我们有很多的数据要来来回回不停的发

09:16.250 --> 09:18.250
所以说我们要需要选择一个效率

09:18.250 --> 09:19.090
比较高的方式

09:19.090 --> 09:20.810
比方说对称加密

09:20.810 --> 09:22.210
那比方说能用对称加密吧

09:22.210 --> 09:24.250
那我们看一下会有什么样的问题

09:24.250 --> 09:25.930
对称加密就是有生成一个密钥

09:25.930 --> 09:27.210
只有一个密钥

09:27.210 --> 09:28.370
信息加上这个密钥

09:28.370 --> 09:29.410
加上一个固定的算法

09:29.410 --> 09:31.810
就可以得到一个加密的信息

09:31.810 --> 09:33.570
然后加密的信息呢

09:33.570 --> 09:35.810
加上一个使用密钥

09:35.810 --> 09:37.370
加上一个固定的解密算法

09:37.370 --> 09:40.570
那么得到一个原文信息

09:40.770 --> 09:42.290
比方说我们用一个对称加密

09:42.290 --> 09:43.250
用对称加密的话

09:43.250 --> 09:43.930
我们来看一下

09:43.930 --> 09:46.130
如果正常通信的话就应该是这样子

09:46.130 --> 09:48.250
首先客户端这边向服务系询问

09:48.250 --> 09:49.570
我们也先要通信了

09:49.570 --> 09:51.450
通信你给我一个密钥吧

09:51.450 --> 09:52.530
我们要用对称加密

09:52.530 --> 09:53.610
你得把密钥给我呀

09:53.610 --> 09:54.290
你不给我密钥

09:54.290 --> 09:55.010
我到时候怎么

09:55.010 --> 09:57.050
你发个给我的消息我怎么解密呢

09:57.050 --> 09:59.090
说不定你把这个密钥给我

09:59.090 --> 10:02.130
那么服务系那就把这个密钥给了客户端

10:02.130 --> 10:03.810
那么客户端后续发消息

10:03.810 --> 10:04.890
就使用这个密钥

10:04.890 --> 10:05.930
对这个消息性加密

10:05.930 --> 10:08.090
比方说我爱你这三个字

10:08.090 --> 10:10.250
用这个对称加密算法

10:10.370 --> 10:12.210
用这个密钥给它加密

10:12.210 --> 10:13.370
把加密信息发过去

10:13.930 --> 10:14.570
那我们来看一下

10:14.570 --> 10:16.170
这样的通信有没有什么问题的

10:16.170 --> 10:17.530
比方说成哥他又出现了

10:17.530 --> 10:19.450
成哥还是技术很还是很牛的

10:19.730 --> 10:21.690
他总能够解决一些问题

10:22.250 --> 10:22.570
好

10:22.570 --> 10:24.250
那么我们来看这个过程有什么问题的

10:24.250 --> 10:25.370
首先第一步

10:25.370 --> 10:27.610
服务器要告诉客户端

10:27.610 --> 10:28.690
我们用的密钥是啥

10:28.690 --> 10:29.010
是不是

10:29.010 --> 10:30.370
要把这个服务器的T1

10:30.370 --> 10:32.090
就是这个对称加密的T1

10:32.090 --> 10:34.050
告诉客户端

10:34.890 --> 10:36.250
我们使用的密钥是啥

10:37.610 --> 10:37.850
好

10:37.850 --> 10:38.810
那么成哥那边

10:38.810 --> 10:40.090
是不是被成哥窃取到了

10:40.290 --> 10:41.730
成哥是不是就知道这个T1了

10:42.130 --> 10:42.690
对吧

10:42.930 --> 10:43.690
你防不住的

10:44.250 --> 10:46.490
那T1他就把保存起来了

10:46.890 --> 10:48.410
那么他现在不干预

10:48.410 --> 10:49.650
我不管你

10:49.970 --> 10:51.930
然后他有原封不动的

10:51.930 --> 10:53.450
把这个T1发送给邓哥

10:53.450 --> 10:54.810
当然他可以做的事情很多

10:54.810 --> 10:56.490
他可以给他发送另外一个密钥都可以

10:56.690 --> 10:58.970
但是比方说我们这里成哥很坏的

10:59.210 --> 11:00.210
他就告诉他

11:00.210 --> 11:01.450
那你就用T1吧

11:01.450 --> 11:02.530
只不过他多了一步

11:02.530 --> 11:04.250
他就把这个东西保存在自己那一端了

11:04.810 --> 11:07.610
那你看过程是不是又还原了

11:07.610 --> 11:07.970
对吧

11:08.210 --> 11:08.930
毫无用处

11:09.410 --> 11:12.370
那这边用T1去加密这个三个字

11:12.850 --> 11:14.250
成哥他也有这个T1

11:14.250 --> 11:15.530
他之前发那个密钥的时候

11:15.530 --> 11:16.410
他就被窃取到了

11:16.850 --> 11:18.130
然后他就用T1

11:18.130 --> 11:19.330
又把这个消息又解密

11:19.330 --> 11:22.370
小杨你还是想给我干这种事情

11:22.370 --> 11:23.730
所以说又干嘛呢

11:24.290 --> 11:25.050
又给你改了

11:25.410 --> 11:26.450
改成这个我恨你了

11:26.850 --> 11:28.410
还是用T1加密

11:28.410 --> 11:29.410
他自己有

11:29.770 --> 11:30.330
对成加密

11:30.610 --> 11:31.930
他只要有这个密钥就可以了

11:32.290 --> 11:33.130
那么对他进行加密

11:33.130 --> 11:35.210
那这边一解密的话

11:35.210 --> 11:36.930
就完了

11:37.570 --> 11:39.170
所以这个问题还是解决不了

11:39.930 --> 11:41.250
那么现在我们接下来看一下

11:41.250 --> 11:42.490
另外一种加密方式

11:42.650 --> 11:44.210
叫做非对成加密

11:44.490 --> 11:45.930
就是不要两个密钥

11:45.930 --> 11:46.970
一个公钥一个食药

11:46.970 --> 11:48.290
而这里我给大家说一下

11:48.570 --> 11:51.090
一般来说是用公钥加密食药解密

11:51.090 --> 11:52.530
但是反过来也是可以的

11:52.690 --> 11:55.170
用食药加密公药解密也是可以的

11:56.130 --> 11:57.250
好了这是关于这个

11:57.250 --> 11:58.810
甚至我们用食药签名

11:58.810 --> 12:00.770
公药来验证这个签名是不是有

12:01.290 --> 12:02.650
正确的都是可以的

12:02.650 --> 12:03.890
都是一些数学算法

12:04.170 --> 12:05.490
像我们如果说你之前看了

12:05.490 --> 12:07.610
咱们那个GWT的一个课程知道

12:07.610 --> 12:08.650
那个签名对吧

12:08.650 --> 12:10.370
GWT绝对最后一段签名

12:10.370 --> 12:12.090
那么就是食药签名公药

12:12.730 --> 12:13.530
那个不是

12:13.530 --> 12:15.610
用的是对成加密

12:15.610 --> 12:17.050
其实他也可以用非对成的

12:17.050 --> 12:19.610
那就是用食药签名公药来验证

12:20.010 --> 12:20.970
都是可以的

12:21.970 --> 12:23.970
总之他有一对密钥

12:23.970 --> 12:25.090
那么比方说我们这里

12:25.090 --> 12:26.610
信息通过公药加密

12:27.010 --> 12:28.330
变成一个这个样子

12:29.410 --> 12:30.850
然后加密信息

12:30.850 --> 12:33.130
通过食药解密得到原始信息

12:34.050 --> 12:36.050
好接下来我们来看一下这个问题

12:36.050 --> 12:37.730
问题又出来了

12:38.250 --> 12:41.730
那比方说现在我们食药就不能随便发出去了

12:41.730 --> 12:42.130
对吧

12:42.130 --> 12:43.570
我们发出去的是公药

12:43.570 --> 12:46.170
那么摩尼卡的首先把公药给这个邓格

12:46.490 --> 12:48.050
邓格的用公药加密

12:48.730 --> 12:50.530
对吧用公药加密我爱你三个字

12:50.530 --> 12:51.410
发给了摩尼卡

12:52.010 --> 12:53.970
摩尼卡一看

12:54.530 --> 12:56.450
那我现在给你回一个吧

12:56.450 --> 12:57.810
回一个消息

12:57.810 --> 12:59.370
比方说现在没有成格

12:59.370 --> 13:00.970
你看没有成格都要出问题

13:01.250 --> 13:02.170
我先给你回个消息吧

13:02.170 --> 13:03.050
你是个好人

13:03.250 --> 13:04.370
那么他应该用什么加密

13:04.370 --> 13:05.490
所以还是用公药加密

13:06.690 --> 13:08.250
加密过后完了

13:08.250 --> 13:09.490
邓格这边解不了密

13:09.490 --> 13:10.730
为什么邓格这边解不了密

13:10.730 --> 13:11.730
因为他没有食药

13:12.050 --> 13:13.450
他不知道摩尼卡回的是啥

13:13.730 --> 13:15.010
他这个密文他解不开

13:15.570 --> 13:16.610
所以遇到这么一个问题

13:17.490 --> 13:18.970
好那么我们现在又来想

13:19.290 --> 13:20.810
能不能这个问题能不能解决呢

13:21.370 --> 13:23.250
好你看我们现在又用这种方式了

13:24.130 --> 13:26.170
他办法就想了办法很多

13:26.570 --> 13:27.690
都是为了解决这个问题

13:28.490 --> 13:29.330
现在我们这样

13:29.810 --> 13:31.610
你先给我一个公药不是吗

13:31.610 --> 13:33.250
你肯定不能给我食药

13:33.250 --> 13:34.890
食药永远只有他来保存

13:34.890 --> 13:36.170
食药不给别人

13:36.890 --> 13:37.730
好然后呢

13:38.810 --> 13:40.490
邓格这边先不发消息

13:40.850 --> 13:42.970
先生成一个对称加密的密药

13:43.250 --> 13:44.210
随即生成一个

13:44.210 --> 13:45.570
之前不是用对称加密吗

13:45.570 --> 13:45.970
对吧

13:46.410 --> 13:48.530
我们后边的通信都使用对称加密

13:48.530 --> 13:49.530
还是使用对称加密

13:49.730 --> 13:51.450
只不过呢我把对称加密呢

13:51.450 --> 13:52.450
用公药

13:53.490 --> 13:55.250
把这个密药进行加密

13:56.330 --> 13:56.970
懂不懂意思吗

13:56.970 --> 13:58.410
我这里生成一个

13:58.410 --> 14:00.050
生成一个就是对称加密的密药

14:00.050 --> 14:01.370
就是跟最开始是一样的

14:01.890 --> 14:02.890
跟这里是一样

14:03.490 --> 14:04.610
生成这么一个密药

14:05.010 --> 14:06.050
对称加密的密药

14:06.450 --> 14:07.930
那么只不过呢我对这个密药呢

14:07.930 --> 14:08.730
是用公

14:08.850 --> 14:10.090
因为我不能原文发出去

14:10.090 --> 14:10.850
原文发出去

14:10.850 --> 14:12.810
又可能被诚哥来获取了

14:12.890 --> 14:14.210
所以说呢我们这里的最好

14:14.210 --> 14:16.850
对他本身比较密药的名字叫ABC

14:16.970 --> 14:18.690
对他的ABC用公药加密

14:18.690 --> 14:19.690
就变成密文了

14:19.810 --> 14:22.090
用密文的形式把对称加密的密药

14:22.090 --> 14:22.890
发给摩尼卡

14:22.890 --> 14:24.530
因为摩尼卡这边有私药

14:24.530 --> 14:25.730
是不是就可以把它解开

14:25.930 --> 14:27.490
于是摩尼卡那边就会保存

14:28.490 --> 14:29.490
对称加密的密药

14:29.650 --> 14:31.890
那后续呢就使用对称加密的密药

14:32.330 --> 14:33.010
对文字

14:33.410 --> 14:34.210
对原文

14:34.210 --> 14:35.690
明文进行那个加密

14:35.890 --> 14:36.970
那么比较说对他

14:36.970 --> 14:38.210
摩尼这三个字

14:38.210 --> 14:40.370
使用什么对称加密来进行发送

14:40.610 --> 14:42.370
那么这边由于有对称加密的密药

14:42.370 --> 14:43.250
是可以解开的

14:43.250 --> 14:44.930
那他该毁了一个你是个好人

14:45.130 --> 14:46.130
发个好人卡

14:46.130 --> 14:47.410
他也使用对称加密

14:47.410 --> 14:48.570
那么这边他也是有

14:48.570 --> 14:49.570
因为对称加密密药

14:49.570 --> 14:50.490
是他自己生成的吧

14:50.810 --> 14:52.730
所以说他自己也有一个对称加密密药

14:52.730 --> 14:53.610
他也可以解开

14:53.610 --> 14:54.010
对吧

14:54.010 --> 14:55.290
这样子是不是既安全

14:55.290 --> 14:56.530
一步妨碍通信

14:56.730 --> 14:57.850
而且效率还很高

14:57.850 --> 14:59.450
因为对称加密的效率是很高的

14:59.770 --> 15:01.330
好像看上去是挺完美的

15:01.330 --> 15:01.770
对不对

15:02.090 --> 15:03.410
好像看上去挺完美

15:03.610 --> 15:04.450
但是呢这里

15:04.570 --> 15:05.810
因为为什么完美的说

15:05.810 --> 15:08.330
你像这个密药能不能被承诺获取

15:09.890 --> 15:10.410
获取不到

15:10.410 --> 15:11.010
为什么呢

15:11.010 --> 15:12.810
因为这个消息是被公药加密的

15:12.810 --> 15:14.010
需要施药来解密

15:14.010 --> 15:15.170
承诺那边有没有施药

15:15.170 --> 15:16.650
施药只有这个服务器有

15:16.650 --> 15:17.730
承诺那边是没有施药的

15:17.730 --> 15:18.530
他解不了密

15:18.730 --> 15:20.730
就说承诺那边是获取不到这个东西的

15:22.330 --> 15:23.730
但是承诺很聪明的

15:24.170 --> 15:24.970
他怎么办

15:25.130 --> 15:26.370
他就在第一步卡你

15:26.730 --> 15:27.250
他怎么做

15:27.250 --> 15:27.770
他这样

15:28.850 --> 15:30.410
小杨你想给我玩这套

15:31.410 --> 15:32.850
刀高一尺膜高一杖

15:33.930 --> 15:35.170
那么你给我发一个工

15:35.170 --> 15:36.490
想把公药发给他的时候

15:36.490 --> 15:37.570
这个时候承诺获取到了

15:37.930 --> 15:38.770
我就把你

15:38.770 --> 15:40.250
你不是要想用公药吗

15:40.410 --> 15:40.810
后来

15:40.810 --> 15:42.210
后续想用对承加密吗

15:42.210 --> 15:42.730
来吧

15:42.850 --> 15:44.250
我把公药给你保存一下

15:44.490 --> 15:45.730
我把公药保存起来了

15:46.090 --> 15:46.330
好

15:46.330 --> 15:46.970
然后呢

15:47.650 --> 15:50.170
我自己又生成一对公药

15:50.530 --> 15:51.930
我自己生成一对公药

15:53.290 --> 15:54.410
就是一个密药对

15:54.410 --> 15:55.050
公药也有

15:55.050 --> 15:55.730
施药也有

15:56.130 --> 15:57.530
然后我给邓格发的

15:57.730 --> 15:59.250
就不是你给我发的那个公药了

15:59.250 --> 16:00.090
我给你篡改了

16:00.090 --> 16:00.610
把公药

16:00.970 --> 16:02.010
公药篡改成什么了

16:02.250 --> 16:03.130
篡改成T3

16:03.130 --> 16:04.330
他自己生成的公药

16:04.650 --> 16:05.690
邓格那边不知道

16:05.690 --> 16:07.530
他老老实实的保存了这个公药

16:07.530 --> 16:08.810
他认为就是莫莉卡给他的

16:09.450 --> 16:09.930
是不是呢

16:09.930 --> 16:11.090
其实我肯定就不是

16:11.370 --> 16:11.530
好

16:11.530 --> 16:13.850
那接下来的问题是不是又移休了

16:13.850 --> 16:14.890
还是解决不了

16:15.810 --> 16:17.970
那后边他生成一个对承加密的密药

16:17.970 --> 16:18.530
T2

16:19.050 --> 16:19.450
然后呢

16:19.450 --> 16:21.690
用把用那个公药T3

16:21.690 --> 16:23.330
把对承加密的T2加密

16:23.450 --> 16:25.250
成个那边说是我的公药

16:25.250 --> 16:26.290
那我还不能解密嘛

16:26.330 --> 16:27.930
所以说就把用施药

16:28.090 --> 16:29.690
把这个密管就解开了

16:29.690 --> 16:30.210
得到什么

16:30.210 --> 16:31.050
得到了T2

16:31.570 --> 16:32.450
他就拿到了

16:33.770 --> 16:34.530
然后呢

16:34.530 --> 16:36.450
他对他对这个T2再使用

16:36.450 --> 16:37.810
他之前发了个T1

16:37.810 --> 16:39.330
就是这个公药来进行加密

16:39.330 --> 16:41.730
因为莫莉卡那边要认这个公药嘛

16:41.730 --> 16:43.090
所以说这个公药他也有

16:43.090 --> 16:44.290
成哥一开始就过去到了

16:44.410 --> 16:46.410
就是用T1对他进行加密发给莫莉卡

16:46.610 --> 16:47.650
莫莉卡那边呢

16:47.650 --> 16:49.090
他有T1的施药

16:49.090 --> 16:50.330
所以说他拿到了T2

16:50.330 --> 16:52.010
总之最终的目的是什么

16:52.010 --> 16:53.170
T2邓格有

16:53.170 --> 16:54.090
莫莉卡有

16:54.090 --> 16:55.010
他也有了

16:55.890 --> 16:57.130
那后续还用说吧

16:57.410 --> 16:59.370
那说问题就依旧了

16:59.650 --> 17:00.570
那后续又来了

17:00.570 --> 17:01.650
我用T2加密

17:01.650 --> 17:03.210
但是我这里也有T2

17:03.210 --> 17:04.050
我就解开

17:04.170 --> 17:05.570
能解开的话我就可以开

17:07.090 --> 17:07.490
是吧

17:07.490 --> 17:08.610
就遇到这么一个问题

17:08.730 --> 17:10.170
后来发现就变成了个机身弹

17:10.170 --> 17:11.090
单身机动问题

17:11.410 --> 17:12.370
你绕了一大圈

17:12.370 --> 17:13.530
你第一步解决不了

17:13.530 --> 17:14.730
那就永远解决不了

17:14.730 --> 17:15.370
这个问题

17:15.730 --> 17:17.130
那第一步怎么解决呢

17:17.130 --> 17:18.690
就是根源原因在什么

17:18.690 --> 17:20.730
在于一个可信度的问题

17:20.730 --> 17:22.650
什么东西是我能信任的

17:23.690 --> 17:24.450
绕了半天

17:24.450 --> 17:25.730
我发现都不能信任

17:26.490 --> 17:27.530
邓格那边

17:28.530 --> 17:29.210
他不知道

17:29.210 --> 17:30.090
他受到一个消息

17:30.090 --> 17:30.850
他不知道这个消息

17:30.850 --> 17:31.930
有没有被篡改过

17:32.210 --> 17:33.250
是莫莉卡发过来的

17:33.250 --> 17:34.330
还是不是莫莉卡发过来

17:34.330 --> 17:34.930
我都不知道

17:34.930 --> 17:35.690
啥都不知道

17:36.530 --> 17:37.850
无法被信任的问题

17:38.170 --> 17:38.890
那么这个时候

17:38.890 --> 17:40.370
就必须要引入第三方了

17:41.010 --> 17:42.010
只有第三方

17:42.130 --> 17:43.530
就是让全世界都知道

17:43.530 --> 17:44.330
这些机构

17:44.570 --> 17:45.450
你们都要信任

17:45.970 --> 17:48.250
这是整个世界

17:48.250 --> 17:49.410
都公认的

17:49.570 --> 17:50.370
公共机构

17:50.610 --> 17:51.450
那么这就是

17:51.610 --> 17:53.010
正书般发机构

17:53.050 --> 17:53.930
叫做CA

17:55.050 --> 17:56.330
全世界有好几家

17:56.850 --> 17:58.130
但是大部分都在美国

17:59.170 --> 18:00.690
那么正书般发机构

18:00.690 --> 18:03.250
就是全世界被全世界所信任的机构

18:04.010 --> 18:05.290
那么它是怎么做的呢

18:05.290 --> 18:06.570
它就是来颁发正书的

18:07.330 --> 18:08.250
你这个正书

18:08.250 --> 18:09.250
只要是我颁发的

18:09.250 --> 18:10.410
那你绝对可以信任

18:10.930 --> 18:11.690
没问题的

18:11.690 --> 18:12.970
我不会乱来的

18:13.490 --> 18:14.650
那如果说他乱来怎么办

18:14.650 --> 18:15.530
那就没着了

18:15.530 --> 18:17.090
他不可能吃多了

18:17.090 --> 18:17.570
他乱来

18:17.570 --> 18:18.090
他要赚

18:18.090 --> 18:19.370
他这个还是赚钱的

18:19.650 --> 18:20.210
还是赚钱的

18:20.210 --> 18:21.290
正书是要去买的

18:21.290 --> 18:21.690
知道吧

18:22.410 --> 18:22.770
好

18:22.770 --> 18:23.730
然后咱们来看一下

18:23.730 --> 18:24.770
正书般发机构

18:25.290 --> 18:25.930
那怎么办呢

18:25.930 --> 18:26.570
现在摩特卡

18:26.570 --> 18:28.170
想跟那个

18:28.170 --> 18:29.570
比方摩特卡是服务器

18:29.570 --> 18:30.730
想跟邓哥之间

18:30.730 --> 18:31.770
来传输消息

18:31.770 --> 18:33.170
安全的传输消息

18:33.650 --> 18:34.690
那么那个时候

18:34.930 --> 18:36.330
他就要去买一个正书

18:36.810 --> 18:38.090
这个正书需要花点钱

18:38.090 --> 18:39.210
这个钱还不小

18:39.210 --> 18:40.850
有没有免费的油

18:41.210 --> 18:42.170
免费的正书

18:42.170 --> 18:43.570
反正有会遇到很多问题

18:43.850 --> 18:46.290
而且期限也只有一年

18:46.930 --> 18:48.850
免费一年之后你必须要换

18:48.850 --> 18:50.290
换正书有点麻烦

18:51.810 --> 18:52.370
一般来说

18:52.370 --> 18:53.730
正儿把你的商业机构

18:53.730 --> 18:54.930
肯定要去买正书的

18:54.930 --> 18:56.170
然后这个正书的价格

18:56.170 --> 18:58.370
那就差别比较大了

18:58.650 --> 18:59.770
几万块钱一年的

18:59.770 --> 19:01.170
有几十万的都有

19:02.250 --> 19:03.050
那么这里款了

19:03.050 --> 19:04.250
反正重要给点钱

19:05.330 --> 19:07.250
然后你有一个域名

19:07.250 --> 19:07.770
不是吗

19:07.770 --> 19:08.250
对不对

19:08.250 --> 19:10.290
那么这个正书会绑定到域名

19:10.530 --> 19:12.090
一般来说会绑定到域名

19:12.450 --> 19:13.930
最早的时候跟域名没关系

19:13.930 --> 19:14.650
现在

19:15.530 --> 19:18.530
TLS升级之后

19:18.530 --> 19:19.890
可以跟域名进行绑定

19:19.930 --> 19:20.850
所以现在一般

19:20.850 --> 19:22.530
我们可以对域名进行绑定

19:22.530 --> 19:24.090
当然也可以用一个犯域名

19:24.090 --> 19:26.090
就是你这个域名用这个正书

19:26.090 --> 19:28.170
ABCA这个域名也可以用这个正书

19:28.170 --> 19:30.050
就所有的二级域名用同一个正书

19:30.050 --> 19:31.930
当然这个看怎么给钱了

19:32.690 --> 19:35.410
总之就是给了一定的钱

19:35.410 --> 19:37.570
然后把域名给他

19:37.570 --> 19:38.570
然后

19:39.570 --> 19:41.970
还要给他自己要生成一个密药队

19:42.130 --> 19:43.330
就是公药和市药

19:43.330 --> 19:45.010
把公药给他

19:45.650 --> 19:46.810
给这个正书机构

19:47.650 --> 19:49.530
这些正书机构收到钱了

19:49.930 --> 19:51.170
收到这些申请信息了

19:51.170 --> 19:52.290
申请一个正书

19:53.090 --> 19:53.770
这个时候

19:53.970 --> 19:55.530
他就会给你办办一个正书

19:56.330 --> 19:58.050
每一个机构

19:58.050 --> 20:00.570
他有自己的一套公药和私药

20:00.690 --> 20:02.490
私药永远他自己保存

20:02.490 --> 20:03.570
永远不会泄漏的

20:03.730 --> 20:04.970
如果说哪一天

20:05.090 --> 20:06.570
这些机构的私药泄漏了

20:06.570 --> 20:08.170
全世界不得了

20:08.890 --> 20:10.330
真的是太可怕了

20:11.210 --> 20:12.450
这个私药他保存得很好

20:12.450 --> 20:14.490
这个东西不是你操心的事情

20:14.490 --> 20:15.930
是他自己要操心的事情

20:15.930 --> 20:17.170
这个私药他不会泄漏的

20:17.650 --> 20:19.090
公药全世界发

20:19.930 --> 20:20.770
全世界发发

20:20.770 --> 20:21.770
所有人

20:21.770 --> 20:23.170
你就往一查

20:23.170 --> 20:24.330
总能够查到

20:24.490 --> 20:26.050
每一个机构他自己的公药

20:26.050 --> 20:27.450
公药是全世界发的

20:28.170 --> 20:29.690
然后给你办办一个正书

20:29.690 --> 20:30.330
那么我们来看一下

20:30.330 --> 20:32.170
这个正书到底是一个什么东西

20:32.690 --> 20:33.930
到底是一个什么东西

20:34.450 --> 20:36.210
正书其实就这么几个东西

20:36.330 --> 20:37.530
一个是你的网站

20:37.970 --> 20:39.330
榜林的哪个域名

20:40.530 --> 20:42.410
然后一个是你的正书办法机构

20:42.410 --> 20:43.690
就是我的机构是谁

20:45.730 --> 20:48.250
然后是两个加密信息

20:48.890 --> 20:50.170
一个加密信息

20:50.810 --> 20:53.970
是使用正书办法机构的私药进行加密的

20:54.610 --> 20:55.370
加密啥

20:55.370 --> 20:58.370
加密这个服务器的公药

20:58.850 --> 20:59.730
加密这个公药

21:00.170 --> 21:00.930
有什么用了

21:00.930 --> 21:02.210
以后一会你就知道了

21:02.730 --> 21:03.730
再加密这个东西

21:04.890 --> 21:06.370
一个的另外一个也是使用

21:06.370 --> 21:08.330
那个正书办法机构的私药加密的

21:09.930 --> 21:10.850
你看这里是不是反的

21:10.850 --> 21:11.690
用私药加密

21:11.690 --> 21:12.050
对吧

21:12.210 --> 21:13.250
用私药进行加密的

21:13.250 --> 21:13.890
加密的是什么

21:13.890 --> 21:14.690
一个正书签名

21:14.690 --> 21:15.410
以后我才会说

21:15.410 --> 21:16.690
正书签名是什么东西

21:17.170 --> 21:18.810
好从这个图里边我们可以看出

21:18.810 --> 21:21.210
一个正书里边我们可以得到哪些信息

21:23.210 --> 21:25.170
你是哪个域名的

21:25.170 --> 21:25.570
对吧

21:26.970 --> 21:28.170
你是哪个机构办法的

21:29.410 --> 21:31.970
然后有两个加密信息

21:32.490 --> 21:33.490
是私药加密的

21:34.010 --> 21:35.810
那私药加密是不是可以公药解密

21:35.810 --> 21:35.970
对吧

21:35.970 --> 21:36.690
对成加密

21:37.690 --> 21:38.570
非对成加密

21:38.810 --> 21:40.410
私药加密公药就可以解密

21:40.890 --> 21:42.050
那么公药以解密

21:43.570 --> 21:44.130
公药以解密

21:44.130 --> 21:45.970
是不是就可以拿到这个服务器的公药

21:46.930 --> 21:47.930
可以拿到这个

21:47.930 --> 21:48.490
对吧

21:48.490 --> 21:50.450
公药以解密是不是可以拿到正书签名

21:51.690 --> 21:52.290
对不对

21:52.290 --> 21:53.290
那有时候说

21:53.290 --> 21:54.490
那公药全世界发

21:54.490 --> 21:55.850
这个公药全世界发

21:55.850 --> 21:57.810
它用私药加密起什么意义呢

21:58.810 --> 21:59.850
起个什么样的意义呢

21:59.850 --> 22:01.570
它用私药去加密这个东西

22:01.970 --> 22:03.290
那公药就可以解密开

22:03.890 --> 22:05.290
意义就在哪呢

22:05.290 --> 22:06.610
在不能伪造

22:07.970 --> 22:08.890
就相当于是

22:08.890 --> 22:10.890
你因为这个私药是谁

22:10.890 --> 22:11.770
只有谁有

22:11.770 --> 22:13.970
只有那个正书机构有

22:14.650 --> 22:15.170
对吧

22:15.490 --> 22:16.330
你可以解密

22:16.330 --> 22:16.970
这没问题

22:17.330 --> 22:18.290
但是你解密过后

22:18.290 --> 22:20.490
你想用另外一个东西去加密

22:20.490 --> 22:21.530
那别人就解不开了

22:22.930 --> 22:23.450
懂的意思吧

22:23.450 --> 22:24.690
比方说一个黑客

22:25.090 --> 22:26.810
比方说有一个中间人

22:26.810 --> 22:27.650
比方说成哥

22:27.650 --> 22:28.890
他又要来搞事情了

22:29.770 --> 22:30.970
在颁发正书的时候

22:30.970 --> 22:32.450
成哥是不是也可以拿到这个

22:32.450 --> 22:32.890
域名

22:32.890 --> 22:34.010
也可以拿到一个颁发机构

22:34.010 --> 22:34.210
对吧

22:34.210 --> 22:34.810
也可以拿到

22:34.810 --> 22:36.370
而且这两个是不是可以解开

22:36.370 --> 22:37.370
成哥就解开了什么

22:37.370 --> 22:38.290
一个域名

22:38.970 --> 22:39.330
然后呢

22:39.330 --> 22:40.490
一个机构

22:40.490 --> 22:41.050
然后呢

22:41.050 --> 22:42.090
一个服务器的

22:42.090 --> 22:43.490
就是摩利卡那边的公药

22:44.450 --> 22:45.530
提一

22:45.530 --> 22:46.690
然后可以拿到一个什么

22:46.690 --> 22:48.850
证书签名

22:48.850 --> 22:49.650
对不对

22:49.650 --> 22:49.890
好

22:49.890 --> 22:52.050
那么成哥又想来搞事情

22:52.050 --> 22:54.010
他把这想把公药提一换了

22:54.010 --> 22:54.210
对吧

22:54.210 --> 22:57.870
就有点相当于在这

22:57.870 --> 22:58.750
对吧

22:58.750 --> 22:59.790
就在这

22:59.790 --> 23:01.390
公药提一发过来

23:01.390 --> 23:02.870
他把公药提一给换了

23:02.870 --> 23:03.430
他能换吗

23:03.430 --> 23:05.230
现在他就没法换了

23:05.230 --> 23:06.390
为啥没法换了呢

23:06.390 --> 23:07.270
你看哈

23:07.270 --> 23:08.830
他对一个公药提一

23:08.830 --> 23:09.550
要换的话

23:09.550 --> 23:11.350
那是不是也得对他进行加密啊

23:11.350 --> 23:12.150
因为这个证书里边

23:12.150 --> 23:13.630
他的要求就是要加密

23:13.630 --> 23:14.510
就这一步要加密

23:14.510 --> 23:14.990
对吧

23:15.030 --> 23:17.070
那他用什么加密呢

23:17.070 --> 23:18.590
他想换成一个自己的

23:18.590 --> 23:20.190
他把这个换了

23:20.190 --> 23:20.950
换成一个什么

23:20.950 --> 23:24.030
换成一个自己的公药提三

23:26.150 --> 23:26.750
他怎么换的

23:26.750 --> 23:27.910
要进行加密的呀

23:27.910 --> 23:29.230
他用什么加密呀

23:29.230 --> 23:30.830
他拿不到这个私药提啊

23:30.830 --> 23:31.790
他怎么来加密呢

23:31.790 --> 23:33.070
他没法加密

23:33.070 --> 23:34.590
那他自己生成一个私药

23:34.590 --> 23:36.470
什么叫可以

23:36.470 --> 23:40.630
那么就是自己的私药提

23:40.630 --> 23:42.310
来加密这个公药

23:42.310 --> 23:43.390
那么这样子

23:43.430 --> 23:44.670
把这个东西发给了

23:44.670 --> 23:46.510
邓哥邓哥就蒙了

23:46.510 --> 23:48.510
因为他自己的私药提

23:48.510 --> 23:49.590
邓哥是用什么公

23:49.590 --> 23:51.190
是什么公药来解密的

23:51.190 --> 23:52.150
是用这个机构

23:52.150 --> 23:54.350
向全世界发布的公药解密的

23:54.350 --> 23:55.630
他解不开这个

23:55.630 --> 23:56.990
解不开说明这个证书是什么

23:56.990 --> 23:58.230
被改动过

23:58.230 --> 23:59.270
他就不能要

23:59.270 --> 24:01.030
邓哥那边就把直接把抛弃掉了

24:01.030 --> 24:03.630
你这个我现在中间有中间人攻击

24:03.630 --> 24:05.110
我们不能玩了

24:05.110 --> 24:06.630
懂了意思吧

24:06.630 --> 24:08.910
所以说他伪造不了

24:08.910 --> 24:10.110
我们再来看签名

24:10.110 --> 24:11.550
签名是在做什么事情的呢

24:11.590 --> 24:14.070
也是在做类似一样的事情

24:14.070 --> 24:15.030
一个签名里面

24:15.030 --> 24:16.270
其实就包含三个部分

24:16.270 --> 24:17.390
一个是域名

24:17.390 --> 24:19.030
一个是公药key

24:19.030 --> 24:21.910
就是CA的机构的公药key

24:21.910 --> 24:23.550
一个是服务器的公药key

24:23.550 --> 24:24.630
他把这三个东西

24:24.630 --> 24:28.310
再用那个机构的私药进行加密

24:28.310 --> 24:29.790
那么这个网友起什么作用呢

24:31.470 --> 24:33.390
那邓哥就退一步嘛

24:33.390 --> 24:34.790
他成个退一步

24:34.790 --> 24:37.310
我动不了这个

24:37.310 --> 24:38.830
我动不了这个公药key

24:38.830 --> 24:41.390
因为我没有他的私药加不了密

24:41.430 --> 24:42.630
那我能不能改

24:42.630 --> 24:43.630
我这个网上也动不了

24:43.630 --> 24:43.910
对吧

24:43.910 --> 24:45.830
也是通过私药key加密的

24:45.830 --> 24:46.990
改不了没法篡改

24:46.990 --> 24:48.590
我能够获取但是没法篡改

24:50.070 --> 24:51.030
那或许没用

24:51.030 --> 24:51.710
问题是

24:51.710 --> 24:52.430
那我怎么办呢

24:52.430 --> 24:53.830
我改一个域名行不行

24:53.830 --> 24:55.630
我改机构行不行

24:55.630 --> 24:57.510
也他把一个域名改了

24:57.510 --> 24:59.110
本来访问的是Molli卡铁康

24:59.110 --> 25:01.790
他把它改为了成哥铁康

25:01.790 --> 25:03.550
那这样子行不行呢

25:03.550 --> 25:04.430
也不行

25:04.430 --> 25:06.230
因为他的存在

25:06.230 --> 25:09.430
证书签名里边的东西

25:09.470 --> 25:11.430
他就包含了这个域名

25:11.430 --> 25:11.910
看到没

25:11.910 --> 25:13.030
就包含了这个域名

25:13.030 --> 25:14.150
那到时候一验证

25:14.150 --> 25:15.710
这个东西跟这个东西对不上

25:15.710 --> 25:16.230
对不上的话

25:16.230 --> 25:17.150
这证书是无效的

25:18.430 --> 25:19.590
包括你去改什么

25:19.590 --> 25:21.630
改机构也没用

25:21.630 --> 25:23.790
这个机构里边就包含了机构的公药

25:23.790 --> 25:24.790
那改这个东西

25:24.790 --> 25:27.150
跟证书签名那边的东西又对不上

25:27.150 --> 25:28.790
他又说把证书签名也改了吧

25:28.790 --> 25:29.870
那改了又出问题了

25:29.870 --> 25:30.950
改了过后你怎么加密

25:32.110 --> 25:33.310
所以私药已经拿不到

25:33.310 --> 25:35.390
拿不到私药你就没法加密啊

25:35.390 --> 25:36.150
一起不加密的话

25:36.150 --> 25:37.630
那边就不认了

25:37.630 --> 25:38.790
就邓哥那边就不认了

25:38.830 --> 25:41.870
就这个问题就把证格就卡住了

25:41.870 --> 25:42.710
它是真没招了

25:43.910 --> 25:44.950
那么现在你看

25:44.950 --> 25:46.470
我们的逻辑变成这样子了

25:47.710 --> 25:50.390
邓哥首先说我要给你发消息了

25:50.390 --> 25:51.430
我来个请求

25:51.430 --> 25:53.990
ATPS请求给你发消息了

25:53.990 --> 25:55.070
那么服务习一看

25:55.070 --> 25:57.070
那你是ATPS请求

25:57.070 --> 25:59.350
那我给你颁发一个证书吧

25:59.350 --> 26:00.710
给你颁发一个证书

26:00.710 --> 26:02.830
首先服务习那边会有一个公药和私药

26:02.830 --> 26:04.070
给你咬对他自己的

26:05.510 --> 26:06.550
然后他之前的证书

26:06.550 --> 26:07.750
是他之前申请好的

26:08.710 --> 26:10.190
来就给你颁发一个证书

26:10.190 --> 26:10.830
颁发过来了

26:11.910 --> 26:12.870
那么邓哥

26:13.430 --> 26:14.590
这个证书是没法伪造的

26:14.590 --> 26:15.710
我之前在反复的说

26:15.710 --> 26:16.830
中间人是搞不定的

26:17.590 --> 26:19.310
然后邓哥把证书一看

26:19.310 --> 26:20.790
你这个玉民对

26:20.790 --> 26:22.470
我给我请求的玉民是一致的

26:22.470 --> 26:23.630
没问题对得上

26:23.630 --> 26:25.230
然后这个证书办法机构

26:25.230 --> 26:26.990
我知道你的机构是谁了

26:26.990 --> 26:27.590
公药

26:27.590 --> 26:29.630
一个服务习的公药是不是这里

26:29.630 --> 26:31.190
解密之后就拿到了

26:31.190 --> 26:32.070
公药就拿到了

26:32.070 --> 26:33.070
然后证书签名

26:33.070 --> 26:35.870
我用那个CA的公药解密

26:35.870 --> 26:37.070
是不是拿到证书签名了

26:37.070 --> 26:39.190
然后我还要对一下验证签名

26:39.190 --> 26:40.750
看一个签名里边的内容

26:40.750 --> 26:42.830
和这个对不对的伤

26:42.830 --> 26:44.670
和这个公药对不对的伤

26:44.670 --> 26:46.910
还有这个东西对不对的伤

26:46.910 --> 26:48.230
全要验证一下

26:48.230 --> 26:49.230
验证就通过了

26:49.230 --> 26:49.790
那就OK了

26:49.790 --> 26:51.590
那么之后就可以玩了

26:51.590 --> 26:53.870
那这一步能不能被控制

26:53.870 --> 26:55.110
被逞厄控制

26:55.110 --> 26:55.830
不行

26:55.830 --> 26:58.310
你看第一步无法被篡改

26:58.310 --> 26:59.190
你看怎么来篡改

26:59.190 --> 27:00.070
你刚说怎么弄

27:00.070 --> 27:01.510
没法弄了

27:01.510 --> 27:02.790
比方说给他发了个证书

27:02.790 --> 27:03.910
证书拿到这个证书

27:03.910 --> 27:04.630
证书能不能拿到

27:04.630 --> 27:06.550
能这个是没问题的

27:06.590 --> 27:08.790
他解开过看到一大堆怎么弄

27:08.790 --> 27:09.830
这两个肯定搞不定了

27:09.830 --> 27:10.750
你不要想了

27:10.750 --> 27:12.910
因为你没有CA的

27:12.910 --> 27:14.270
食药你加不了密

27:14.270 --> 27:15.270
你改了随便改

27:15.270 --> 27:16.670
改了加不了密

27:16.670 --> 27:17.390
你乱加密的话

27:17.390 --> 27:18.950
那边解都解不开

27:18.950 --> 27:20.990
解不开那肯定是被创来过了

27:20.990 --> 27:21.390
没法改

27:21.390 --> 27:22.950
那只能改这两个吧

27:22.950 --> 27:23.950
那这两个能改吗

27:23.950 --> 27:24.830
也改不了

27:24.830 --> 27:25.830
啥都改不了

27:25.830 --> 27:26.910
因为这两个在哪里

27:26.910 --> 27:28.790
在证书签名里边也有对应的

27:28.790 --> 27:29.510
你这两个一改

27:29.510 --> 27:30.630
比方要改到这个

27:30.630 --> 27:31.910
要改成ABC的

27:31.910 --> 27:33.670
那断后的验证签名就通不过

27:33.670 --> 27:34.230
通不过的话

27:34.270 --> 27:35.630
那就是一个不安全的年纪

27:36.630 --> 27:38.830
有的时候你们访问网站的时候

27:38.830 --> 27:40.070
不知道有没有看到过

27:40.070 --> 27:42.310
访问一个ATPS的时候

27:43.670 --> 27:44.750
网站的时候

27:44.750 --> 27:46.030
他会告诉你这个网站

27:46.030 --> 27:46.990
它不安全

27:46.990 --> 27:49.110
访问ATPS还是怎么会不安全的

27:49.110 --> 27:50.710
它有两种可能

27:50.710 --> 27:51.590
第一种可能

27:52.030 --> 27:54.870
就是这个证书在被中间人

27:54.870 --> 27:55.710
改过了

27:55.710 --> 27:57.030
像这种也不改过了

27:57.030 --> 27:58.350
我这个不知道

27:58.350 --> 27:59.390
现在应该正常的网站

27:59.390 --> 28:00.750
应该都看不到这个情况

28:00.750 --> 28:02.590
然后看一下我的网站以前也没有

28:04.950 --> 28:06.790
你要连接不是私密连接

28:06.790 --> 28:08.870
就看到这个东西

28:08.870 --> 28:09.910
那么这个东西

28:09.910 --> 28:11.390
要么就是它没有证书

28:11.390 --> 28:12.630
根本就没有证书

28:12.630 --> 28:14.230
或者是给颁发了一个

28:14.230 --> 28:15.710
不是权威机构的证书

28:15.710 --> 28:16.790
你浏览器一看

28:16.790 --> 28:17.950
你这个证书这个机构

28:17.950 --> 28:19.030
我都不认识

28:19.030 --> 28:20.550
那你自然不能

28:20.550 --> 28:22.350
自然会有一个警告

28:22.350 --> 28:23.750
或者是他被篡改过了

28:23.750 --> 28:25.270
他都有可能会出现的那种情况

28:27.590 --> 28:28.630
所以他搞搞不定

28:28.630 --> 28:29.790
他只能拿到这些信息

28:29.790 --> 28:31.590
都没用的那些信息

28:31.590 --> 28:32.110
他搞不定

28:32.110 --> 28:33.030
他改不了

28:33.070 --> 28:33.990
改不了的话

28:35.430 --> 28:36.470
那后续就一样了

28:37.390 --> 28:38.750
你看拿到服务器供药过后

28:38.750 --> 28:41.630
我用供药来生成一个对成加密密药

28:41.630 --> 28:44.710
后续就用对成加密密药来进行通信

28:45.830 --> 28:48.150
诚哥一点办法都没有

28:48.150 --> 28:48.710
一点办法

28:48.710 --> 28:50.790
只能眼睁睁看着这个消息在流动

28:50.790 --> 28:52.430
一点干干的办法都没有

28:52.430 --> 28:54.790
那你说诚哥能不能获取消息呢

28:54.790 --> 28:56.070
也获取不了

28:56.070 --> 28:56.870
为什么呢

28:56.870 --> 28:59.030
因为诚哥拿不到这个

28:59.030 --> 28:59.670
他拿不到

29:00.950 --> 29:01.750
你想啊

29:01.750 --> 29:02.990
这个东西是用什么加密的

29:02.990 --> 29:04.070
是用供药Q加密的

29:04.070 --> 29:04.910
需要谁来解密

29:04.910 --> 29:06.390
需要这个私药Q解密

29:06.390 --> 29:07.510
诚哥没有这个私药Q

29:08.910 --> 29:09.510
他解密不了

29:09.510 --> 29:10.550
他连这个都拿不到

29:10.550 --> 29:11.630
拿不到这个

29:11.630 --> 29:13.110
诚哥只能看到一群

29:13.110 --> 29:14.550
一大堆乱马发来发去

29:14.550 --> 29:15.670
他不知道啥意思

29:15.670 --> 29:16.750
更加改不了

29:16.750 --> 29:18.030
他用啥改呢

29:18.030 --> 29:19.470
改了过后那边又解不了密的

29:19.470 --> 29:20.670
对方就解不了密的

29:20.670 --> 29:21.750
一解密就出问题

29:21.750 --> 29:23.430
出问题就知道这个信息被篡改过了

29:24.950 --> 29:26.270
他不能造成后续的影响

29:27.590 --> 29:30.470
所以说就是通过这种方式去完成了

29:31.430 --> 29:32.790
那么整个逻辑

29:32.790 --> 29:33.670
就是这样的一个逻辑

29:33.670 --> 29:34.430
RTPS协议呢

29:34.430 --> 29:37.190
就是直接使用了TCP

29:37.190 --> 29:38.990
然后RTPS协议呢

29:38.990 --> 29:40.510
就加了一层SSL

29:40.510 --> 29:42.510
这个是TLS

29:46.370 --> 29:48.450
然后我们要完成一个网站

29:48.450 --> 29:50.570
使用ATPS服务的话

29:50.570 --> 29:52.890
其实就是要去买一个

29:52.890 --> 29:55.330
主要是要在服务系那边去申请一个证书

29:56.610 --> 29:57.970
我们一般用于学习的话

29:57.970 --> 29:59.090
可以申请一个免费的

29:59.090 --> 30:00.450
用一年算一年吧

30:00.890 --> 30:04.850
然后客户端那边把证书那些配置好之后

30:05.410 --> 30:06.930
就使用ATPS就可以访问

30:08.050 --> 30:10.890
这就是关于这两个协议

30:10.890 --> 30:12.130
好 接下来我们讲面试题

30:12.130 --> 30:14.930
面试题里边我们有些地方要去做一些补充

30:15.570 --> 30:17.730
好 我们看一下面试题里边

30:17.730 --> 30:20.210
首先介绍一下ATPS中间人攻击

30:20.210 --> 30:22.050
那个中间人攻击是什么意思呢

30:23.810 --> 30:26.970
就是说刚才那个诚哥的角色就是中间人

30:26.970 --> 30:28.210
对吧 本来是两方通信者

30:28.210 --> 30:29.010
他多了一方

30:30.010 --> 30:32.450
瞧瞧摸摸的在那里搞事情

30:32.450 --> 30:33.450
这就是中间人

30:33.450 --> 30:35.290
中间人攻击其实

30:35.290 --> 30:37.810
其实面试题里边问到了什么ATPS

30:37.810 --> 30:41.810
SSL、TLS都指的一个意思

30:42.330 --> 30:45.450
那么我们就同样的回答就行了

30:45.850 --> 30:48.450
中间人攻击有两种方式

30:48.450 --> 30:51.730
但是就是这样说

30:51.730 --> 30:55.530
中间人攻击ATPS是来解决中间人攻击的

30:56.330 --> 30:58.130
但是ATPS出现之后

30:58.330 --> 31:00.450
还能不能进行中间人攻击的

31:00.450 --> 31:03.490
还是有希望的 难度太大了

31:04.810 --> 31:06.690
那么怎么来攻击呢

31:06.690 --> 31:07.690
有两种方式

31:07.690 --> 31:10.610
一种式叫做SSL截持攻击

31:11.090 --> 31:12.050
它是什么意思呢

31:13.250 --> 31:13.930
它是在这

31:17.810 --> 31:18.570
就在这一步

31:19.530 --> 31:22.050
在这一步就强行伪造证书

31:22.690 --> 31:23.570
强行伪造

31:23.930 --> 31:25.050
把办法机都改了

31:25.570 --> 31:27.290
然后攻击要去全部改了

31:27.290 --> 31:28.490
证书签名里边改了

31:28.530 --> 31:29.530
自己用一个施药

31:29.530 --> 31:30.730
不用那个Ca的施药了

31:30.730 --> 31:32.290
就自己生成施药的加密

31:32.290 --> 31:33.970
反正就是一个伪造的证书发给邓哥

31:34.770 --> 31:36.810
那么邓哥那边就验证肯定通不过

31:36.810 --> 31:37.210
对吧

31:37.770 --> 31:40.170
他有可能验证签名能通过

31:40.170 --> 31:42.050
但是他不是一个知名机构办法的

31:42.050 --> 31:43.330
为什么验证签名能通过

31:43.330 --> 31:45.210
因为他这边证书签名也改了

31:46.690 --> 31:49.050
加密的时候就这两个不是要加密吗

31:49.050 --> 31:51.490
加密的时候是用自己的施药加密

31:51.490 --> 31:53.490
那邓哥用知名机构办法的

31:53.490 --> 31:54.730
这个功耀肯定解不开

31:55.650 --> 31:57.730
那邓哥还要去改这个

31:57.730 --> 31:58.730
那邓哥还要改这个

31:58.730 --> 31:59.530
改这个地方

31:59.530 --> 32:02.090
改成比如说改成自己的机构

32:02.090 --> 32:02.490
对吧

32:03.050 --> 32:03.890
邓哥的机构叫什么

32:03.890 --> 32:04.410
叫杜依

32:04.410 --> 32:04.570
对吧

32:04.570 --> 32:05.610
改成杜依的机构

32:06.130 --> 32:07.970
然后给他办法一个功耀

32:08.250 --> 32:10.090
那么他又要用杜依的功耀去解

32:10.490 --> 32:11.970
但是他发现杜依这个机构

32:11.970 --> 32:13.210
不是知名机构

32:13.210 --> 32:14.010
他不认的

32:14.330 --> 32:15.410
所以说他就会出现这个

32:17.930 --> 32:18.970
他就会出现这个东西

32:20.010 --> 32:20.490
那么

32:21.810 --> 32:23.330
出现这种东西

32:23.370 --> 32:24.530
或者是一些别的警告

32:24.530 --> 32:26.730
总之用户里面就会出现一个警告

32:27.770 --> 32:28.570
那么这个时候

32:29.010 --> 32:30.290
能不能消除这个警告

32:30.290 --> 32:31.970
那你是真没招了

32:32.570 --> 32:33.730
成功了是真没招了

32:33.930 --> 32:35.010
消除不了这个警告

32:35.490 --> 32:36.330
那怎么办呢

32:37.370 --> 32:39.330
一般就会通过一些别的方式

32:39.330 --> 32:40.610
一些优导的方式

32:40.930 --> 32:42.210
让用户不要担心

32:42.410 --> 32:44.410
然后点击继续浏览

32:46.530 --> 32:47.290
继续前往

32:48.690 --> 32:49.450
懂这个意思吗

32:49.450 --> 32:50.930
让他继续浏览

32:51.490 --> 32:52.570
所以他只能这样做了

32:52.570 --> 32:53.170
别招了

32:53.770 --> 32:55.370
然后这是解释攻击

32:55.370 --> 32:56.730
还有就是剥离攻击

32:56.730 --> 32:57.850
这种攻击就

32:58.490 --> 32:59.290
比较狠一点

32:59.290 --> 33:00.850
也不是那么容易发现

33:01.210 --> 33:02.370
这种攻击是怎么攻击

33:02.370 --> 33:03.850
他用这种方式

33:05.930 --> 33:07.890
比方说他想

33:08.450 --> 33:10.290
他想去拿这个ATP

33:10.970 --> 33:12.250
他想请求ATPS

33:12.250 --> 33:13.610
这个服务

33:14.330 --> 33:15.290
然后这边

33:16.450 --> 33:17.490
是不是给他一个证书

33:17.770 --> 33:19.650
这个时候成哥别给他证书了

33:19.650 --> 33:20.450
证书都不给他

33:21.690 --> 33:22.850
直接告诉客户端

33:22.970 --> 33:24.810
我服务器不支持ATPS

33:24.810 --> 33:25.690
就骗他了

33:25.890 --> 33:26.890
本来是支持的

33:26.890 --> 33:28.170
我就告诉他我不支持

33:28.170 --> 33:29.370
请使用ATP

33:29.730 --> 33:30.730
来进行访问

33:31.010 --> 33:32.610
或者就告诉他一个三连的重定项

33:33.170 --> 33:35.010
给我重定项到ATP来进行访问

33:35.770 --> 33:36.610
知道这个意思吗

33:36.850 --> 33:37.650
就是说

33:38.770 --> 33:41.130
就把这个ATPS该剥离了

33:41.130 --> 33:41.850
就不要证书了

33:41.850 --> 33:42.770
以后就不要证书了

33:42.770 --> 33:43.570
你不要加密了

33:43.570 --> 33:45.090
也不要搞什么对称加密的一套了

33:45.090 --> 33:46.290
一个个名文发过来

33:46.450 --> 33:48.810
然后我这边跟服务器之间来进行加密

33:49.050 --> 33:49.330
对吧

33:49.330 --> 33:50.410
来进行加密传输

33:51.370 --> 33:53.690
相当有点像一个代理的角色

33:54.090 --> 33:55.770
用这种方式来进行处理

33:56.770 --> 33:58.890
那么这种方式叫玻璃攻击

33:59.570 --> 34:00.570
玻璃攻击

34:01.050 --> 34:02.890
用户是不太容易被发现

34:03.610 --> 34:04.450
所以说

34:04.450 --> 34:05.890
为什么现在浏览器里边

34:06.130 --> 34:07.490
所有的ATP协议

34:07.490 --> 34:08.930
前面都给你显示不安全

34:09.770 --> 34:11.730
因为有可能他服务器就是ATPS

34:11.970 --> 34:14.010
但是你这里显示ATP

34:15.130 --> 34:17.130
说明一下有可能中间人

34:17.370 --> 34:18.810
给你搞了一个玻璃攻击出来

34:19.530 --> 34:21.130
所以说这是这么一种情况

34:22.130 --> 34:24.530
这是地道体中间的ATPS

34:24.530 --> 34:25.210
有了之后

34:25.730 --> 34:26.690
还能怎么攻击

34:26.690 --> 34:27.770
就这个两种方式了

34:28.810 --> 34:29.770
都挺难的

34:31.250 --> 34:32.650
然后介绍握手过程

34:32.650 --> 34:33.730
什么叫握手过程

34:33.730 --> 34:35.690
就是这么几个过程

34:37.960 --> 34:38.800
就是这几个过程

34:38.800 --> 34:40.280
第一步办发证书

34:40.600 --> 34:42.640
然后这几步过程

34:42.920 --> 34:43.320
那么

34:44.320 --> 34:45.320
把它详细的列出来

34:45.320 --> 34:46.200
就是这么几步

34:46.320 --> 34:47.800
第一个客户端请求服务器

34:48.000 --> 34:48.640
高速服务器

34:49.360 --> 34:52.480
就是我大传给你进行加密传输了

34:52.680 --> 34:55.280
我支持的那些加密传法

34:55.760 --> 34:58.920
然后我们密钥长度最好设置为多少

34:58.920 --> 35:01.000
反正就是高出一些约定的一些信息

35:01.000 --> 35:02.000
就第一一开始

35:02.000 --> 35:02.960
最开始的时候

35:03.240 --> 35:04.880
还不是摩利卡发证书给他

35:04.880 --> 35:06.600
顺哥去请求服务器

35:07.440 --> 35:09.320
告诉他我要给你进行加密传输了

35:09.320 --> 35:10.080
就这么一件事

35:10.440 --> 35:11.080
然后第二步

35:11.080 --> 35:13.760
服务器就响应和供药和服务器证书

35:13.760 --> 35:15.320
证书里边其实包含供药了

35:15.920 --> 35:18.160
就是就把证书给客户端

35:18.160 --> 35:19.160
就第二步

35:19.720 --> 35:20.440
第三步

35:21.120 --> 35:23.320
客户端验证证书是不是合法

35:23.320 --> 35:23.960
是不是在这一步

35:25.160 --> 35:25.760
进行验证

35:25.760 --> 35:26.520
就第三步

35:27.760 --> 35:28.920
验证完成之后

35:29.600 --> 35:30.920
生成一个绘画密钥

35:33.320 --> 35:35.680
然后用服务器的供药加密密钥

35:35.680 --> 35:37.000
用它来加密它

35:37.360 --> 35:39.320
把绘画密钥传送给服务器

35:39.640 --> 35:40.280
第四步

35:40.440 --> 35:42.120
服务器使用私药解密

35:43.640 --> 35:44.680
得到这个绘画密钥

35:45.360 --> 35:46.640
它使用私药来解密

35:46.840 --> 35:47.640
得到绘画密钥

35:47.640 --> 35:48.120
服务器二

35:48.120 --> 35:48.720
那么这样子

35:48.720 --> 35:50.280
两边都有这个绘画密钥

35:51.120 --> 35:52.200
然后告诉

35:52.200 --> 35:53.680
在响应的客户端说

35:54.440 --> 35:56.360
我的密我已经准备好了

35:56.920 --> 35:58.120
那么这句话呢

35:58.120 --> 36:00.040
就是用对称加密来

36:00.200 --> 36:01.200
加密传过去的

36:01.480 --> 36:02.840
所以这里还有一步

36:02.840 --> 36:04.280
用它来加密一句话

36:04.280 --> 36:04.840
那句话呢

36:04.840 --> 36:06.040
可能当然不是用中文

36:06.040 --> 36:08.240
就是我已经准备好了

36:08.240 --> 36:09.600
就是一个特殊的字节

36:09.840 --> 36:12.040
然后发给客户端

36:13.440 --> 36:14.400
然后客户端呢

36:14.600 --> 36:15.600
再用功耀

36:15.600 --> 36:17.880
就是这个T2来进行解密

36:18.280 --> 36:19.080
然后就知道了

36:19.080 --> 36:20.240
服务器已经准备就绪了

36:20.880 --> 36:22.480
那么就是后续的小区传输了

36:22.480 --> 36:23.920
那就该怎么请求

36:24.440 --> 36:25.480
请求又发出去了

36:25.480 --> 36:27.200
就ATB请求又发出去了

36:27.200 --> 36:28.400
那么当然所有的请求

36:28.400 --> 36:29.400
包括请求头

36:29.400 --> 36:31.680
包括那个请求体

36:32.040 --> 36:33.160
都是经过加密的

36:34.040 --> 36:34.440
好吧

36:34.440 --> 36:37.120
这是握手的过程

36:37.120 --> 36:38.280
ATB握手的过程

36:38.280 --> 36:40.960
其实也是TLS握手的过程

36:42.000 --> 36:44.160
第三个ATB S握手过程中

36:44.200 --> 36:46.320
客户端是如何验证证书合法性的

36:46.640 --> 36:48.080
就是它如何来做这个验证的

36:49.240 --> 36:49.480
好

36:49.480 --> 36:50.280
怎么来验证呢

36:50.480 --> 36:52.560
第一步教验证书的办法机构

36:52.560 --> 36:54.080
是否受客户端信任

36:54.280 --> 36:55.040
就这个机构

36:55.040 --> 36:56.760
是不是知名机构

36:58.160 --> 36:59.480
其实能不能信任

36:59.480 --> 37:00.600
非知名机构呢

37:00.600 --> 37:01.280
也可以

37:01.600 --> 37:02.400
其实可以的

37:03.160 --> 37:04.320
不知道同学们有没有用过

37:04.320 --> 37:05.760
一些银行的网站啊

37:06.080 --> 37:07.160
银行的网站呢

37:07.160 --> 37:08.480
一般他可能就

37:08.480 --> 37:10.400
可以给你办法一些证书

37:11.040 --> 37:11.880
那个证书呢

37:12.280 --> 37:13.320
可能不是知名机构

37:13.320 --> 37:14.480
就是他自己办法的

37:14.480 --> 37:16.320
那么他让你去信任他

37:16.640 --> 37:18.200
有可能会出现这种情况的

37:19.040 --> 37:21.720
这个需要用户做一些安装证书的操作

37:21.720 --> 37:23.040
说一些手动的操作

37:23.680 --> 37:24.520
但是是可以的

37:24.880 --> 37:26.200
总之他要验证一下

37:26.520 --> 37:27.880
在这个证书

37:27.880 --> 37:29.080
在操作系统上

37:29.080 --> 37:30.360
是不是受信任的

37:31.080 --> 37:32.280
这是第一步

37:32.440 --> 37:32.640
好

37:32.640 --> 37:34.200
如果受信任还要验证

37:34.200 --> 37:35.680
这个证书是不是被吊销

37:36.560 --> 37:37.840
有可能证书用着用着

37:37.840 --> 37:39.720
他就被那个权威机构吊销了

37:39.720 --> 37:40.520
拿这个情况

37:40.520 --> 37:41.240
那就说不准了

37:41.240 --> 37:42.920
一般来说不会去吊销你的

37:43.320 --> 37:45.920
你这个网站确实涉嫌

37:46.520 --> 37:48.360
这些反人类的活动

37:48.360 --> 37:50.720
他可能就会直接给你吊销了

37:51.480 --> 37:53.120
那怎么在验证的有两种方式

37:53.120 --> 37:54.240
一个是CRL

37:54.240 --> 37:55.560
一个是OSCP

37:55.800 --> 37:57.920
OCSP

37:57.920 --> 37:59.280
CRL是什么意思呢

37:59.640 --> 38:00.640
它是指的是

38:00.640 --> 38:02.280
那些证书的办法机构

38:02.280 --> 38:04.120
就是Ca这些机构

38:04.120 --> 38:06.880
它是用全世界的一些大的节点

38:07.400 --> 38:08.760
去共享一个文件

38:08.760 --> 38:10.160
那个文件里面要记录了

38:10.360 --> 38:14.400
目前所有的那个申请的证书的一些信息

38:14.400 --> 38:15.880
哪些UIL地址

38:15.880 --> 38:17.120
又证书信息

38:17.480 --> 38:19.600
哪些是被吊销了的

38:19.600 --> 38:20.640
就这么个意思

38:21.080 --> 38:22.720
那么请求的时候

38:22.720 --> 38:23.840
继续查阅一下

38:23.840 --> 38:25.600
就拿到这个证书之后

38:25.600 --> 38:28.000
验证没问题通过之后

38:28.480 --> 38:30.880
去查通过这些关键节点

38:30.880 --> 38:31.720
查阅一下

38:32.000 --> 38:34.000
看有没有在吊销列表里面

38:34.560 --> 38:35.600
这是地荣方式

38:36.160 --> 38:38.400
这种方式的效率有点低

38:38.440 --> 38:39.600
以前一般使用第二种方式

38:39.600 --> 38:40.440
叫OCSP

38:40.440 --> 38:41.840
都是浏览器自动完成的

38:42.800 --> 38:43.680
它是怎么验证的呢

38:43.680 --> 38:46.560
它就是直接请求那个证书办法机构

38:46.560 --> 38:47.760
直接请求那个机构

38:48.160 --> 38:49.840
它就没有什么文件

38:49.840 --> 38:51.320
不进行分发了

38:51.760 --> 38:54.080
那个机构就在数据库里面验证

38:54.080 --> 38:55.360
看你是不是吊销了

38:55.600 --> 38:57.080
然后告诉你一个结果

38:57.320 --> 38:58.280
吊销了就是True

38:58.280 --> 38:59.400
没有吊销就是Vors

38:59.400 --> 39:01.600
就比方说这种格式形式来告诉你

39:01.960 --> 39:02.600
懂了意思吧

39:02.600 --> 39:04.600
总之你看一下证书里面被吊销

39:04.600 --> 39:06.320
第三个部分对比系统时间

39:06.960 --> 39:09.320
看一下证书是否在有效期内

39:09.320 --> 39:11.160
因为每个证书

39:11.160 --> 39:12.520
它都有一些时间的

39:12.520 --> 39:13.600
有效期时间

39:13.600 --> 39:14.680
然后还要验证一下

39:14.680 --> 39:16.280
证书是不是在有效期内

39:16.280 --> 39:17.720
都是在这一步去完成的

39:18.840 --> 39:19.920
然后第四步

39:21.080 --> 39:22.080
就是

39:22.920 --> 39:27.240
通过教验对方是否存在证书的私要

39:27.640 --> 39:29.720
判断胜出了网站域名

39:29.720 --> 39:31.600
是否和域名一致

39:31.600 --> 39:32.640
其实教验是什么呢

39:32.640 --> 39:33.800
教验的是这个签名

39:34.400 --> 39:35.600
就教验那个签名

39:35.680 --> 39:37.080
跟这些东西是不是一致的

39:37.080 --> 39:37.920
验证签名

39:37.920 --> 39:40.240
就通过这些步骤来证明

39:40.240 --> 39:41.800
这个证书确实是没问题的

39:42.360 --> 39:42.800
好吧

39:42.800 --> 39:43.760
这是这个第三题

39:43.760 --> 39:44.440
第四题

39:44.440 --> 39:46.280
TTS验证身份

39:46.280 --> 39:48.160
也就是这个验证身份验证的过程

39:49.880 --> 39:51.360
跟那个握手过程是一样的

39:51.360 --> 39:52.040
不说了

39:52.320 --> 39:54.360
为什么需要CA机构对证书签名

39:54.360 --> 39:56.160
为什么要引入一个第三方机构

39:56.440 --> 39:58.000
主要是解决信任问题

39:58.240 --> 39:59.760
不然的话我就不知道哪些东西

39:59.760 --> 40:00.440
是可以信任的

40:00.440 --> 40:02.560
因为证书也是可以被任何人

40:03.000 --> 40:05.400
按照证书就是通过一个算法

40:05.440 --> 40:06.640
生存出来的这么一个东西

40:06.640 --> 40:07.120
对吧

40:07.440 --> 40:09.280
那任何人都可以通过一个算法生存出来

40:09.760 --> 40:10.960
只是利要不一样而已

40:10.960 --> 40:12.160
那哪个是我可以信任

40:12.160 --> 40:13.280
哪个是不可以信任的

40:13.560 --> 40:15.080
所以说要引入第三方机构

40:15.080 --> 40:16.760
主要就是解决可信任的问题

40:16.760 --> 40:17.160
对吧

40:17.160 --> 40:19.760
让这个全世界都认可一些机构

40:21.040 --> 40:22.480
如果说没有一个权威签名的话

40:22.480 --> 40:24.200
科普当就无法制造一个证书

40:25.080 --> 40:25.640
就增加了

40:25.640 --> 40:26.840
这没有增加这个概念了

40:26.840 --> 40:27.160
对吧

40:27.160 --> 40:28.760
所有的证书都是真的

40:29.400 --> 40:31.480
除了增加了中间人攻击的风险

40:31.760 --> 40:32.960
TTS没有意义了

40:33.720 --> 40:35.240
如何解释TTS

40:36.120 --> 40:36.920
提供思路

40:37.640 --> 40:38.840
其实就是

40:39.280 --> 40:42.840
其实把这个东西再回答一次就可以了

40:43.960 --> 40:45.760
就其实要么就是伪造证书

40:45.760 --> 40:46.800
要么就是剥离攻击

40:46.800 --> 40:48.480
我这就好像只回答了这个

40:48.720 --> 40:49.480
这个参考答案

40:49.480 --> 40:51.480
只回答了一个伪造证书的做法

40:54.110 --> 40:54.910
好

40:56.070 --> 40:56.630
没了

40:56.630 --> 40:57.990
这就是这东西

40:57.990 --> 40:58.590
是不是有点复杂

40:58.590 --> 40:59.150
有点糟

41:00.150 --> 41:01.070
是这么回说

41:01.070 --> 41:01.790
确实有点糟

41:01.790 --> 41:03.390
因为网络安全本身就比较糟

41:03.750 --> 41:05.510
而且他有一些真正式的原因

41:05.510 --> 41:06.630
跟数学还有关系

41:07.230 --> 41:08.190
挺挺糟的

41:08.190 --> 41:08.910
但是这个玩意

41:08.910 --> 41:09.550
我再说一次

41:09.550 --> 41:11.470
跟我们平时开发没有什么关系

41:11.470 --> 41:12.550
面试题的时候

41:13.190 --> 41:15.190
不是说这些问题一定要回答出来

41:15.190 --> 41:15.870
不是说的

41:15.870 --> 41:16.470
不是的

41:16.830 --> 41:18.990
你无法回答面试中的所有问题的

41:18.990 --> 41:20.190
告诉你不太可能的

41:20.750 --> 41:21.990
能回答出来的

41:21.990 --> 41:23.750
当然是一个很好的加分项

41:23.750 --> 41:24.910
提高自己的竞争力

41:24.910 --> 41:25.830
就是起着每个作用

41:26.510 --> 41:26.790
OK

41:26.790 --> 41:27.710
这就是这里可能内容

