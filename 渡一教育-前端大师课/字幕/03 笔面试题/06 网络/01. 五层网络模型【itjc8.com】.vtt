WEBVTT

00:03.500 --> 00:06.380
各位同学 大家好 我是袁老师

00:06.380 --> 00:09.800
这一块咱们来学习五层网络模型

00:10.320 --> 00:13.500
这一块的知识首先它比较多

00:13.800 --> 00:16.520
实际上你们可以在网上收一下

00:16.520 --> 00:18.760
像计算机网络这一块

00:19.020 --> 00:23.120
整个课程其实就学的是五层网络模型

00:23.440 --> 00:25.080
它有多少知识呢

00:25.580 --> 00:29.820
可能四五百页的书它不太装得下

00:29.820 --> 00:30.940
就这么多

00:31.100 --> 00:34.400
而且这一块的知识是一块考研的课程

00:34.900 --> 00:36.100
它知识多

00:36.500 --> 00:38.560
第二这一块知识它比较抽象

00:39.100 --> 00:41.620
因为看不见摸不着

00:42.220 --> 00:44.540
你看不见每一层到底发生了什么事

00:44.700 --> 00:48.620
但是它确实实实在在每时每刻都在发生

00:49.060 --> 00:51.420
你在上网的过程中你打开一个网页

00:51.660 --> 00:56.500
或者是你通过聊天工具给别人发出一堆消息

00:56.660 --> 00:59.820
它都是实实在在的经过了这么几个程式

01:00.300 --> 01:01.820
然后把消息发出去

01:02.540 --> 01:04.660
但是它确实有比较抽象

01:04.660 --> 01:07.740
你看不见整个过程是什么样子的

01:09.100 --> 01:12.660
那么我们这里作为一个前端开发者

01:13.060 --> 01:15.820
我们学这一块的知识要学到什么程度呢

01:16.260 --> 01:19.180
学到能够应对一道面试题就可以了

01:19.620 --> 01:21.940
那么这道面试题就是问你五层

01:21.940 --> 01:24.860
说一说让你谈一谈网络的五层模型

01:25.140 --> 01:28.660
你能够简单的把五层模型它的基本知识

01:28.780 --> 01:30.620
给咱们描述出来就可以了

01:31.260 --> 01:34.460
因为再深的话它这个不是一两节课

01:34.820 --> 01:35.780
能够打得住的

01:36.260 --> 01:38.940
可能会又多花几个月的时间的研究这一块

01:38.940 --> 01:39.620
没有必要

01:40.140 --> 01:42.900
因为对我们平时开发的话影响

01:43.700 --> 01:44.580
微乎其微

01:44.740 --> 01:47.460
所以说我们这一块的浅长折止

01:47.980 --> 01:49.700
好吧对知识要抱有惊为之心

01:50.700 --> 01:53.500
首先我们来聊一聊分层的意义

01:53.940 --> 01:57.700
我们说五层网络模型这个层到底啥意思

01:58.180 --> 01:59.500
为什么要分层呢

02:00.380 --> 02:03.220
其实这个分层的简单理解就是分模块

02:03.540 --> 02:05.100
一向我们一个功能复杂了

02:05.100 --> 02:06.900
我们是不是要把分层不同的模块

02:06.900 --> 02:09.700
每一个模块做一件比较独立的事情

02:10.140 --> 02:12.140
分层的意思差不多

02:12.260 --> 02:14.220
但是也有一些微小的区别

02:14.460 --> 02:17.180
总之就是因为这件事太复杂了

02:17.380 --> 02:19.660
所以说我们需要把它分解开来

02:20.180 --> 02:22.140
每一层完成一块功能

02:23.140 --> 02:26.820
那么说我们网络真的就这么复杂吗

02:27.020 --> 02:28.300
真的就这么复杂

02:28.700 --> 02:29.460
你想啊

02:29.660 --> 02:32.540
你在微信里边在QQ里边给别人发一段消息

02:32.540 --> 02:34.300
比如说你发了一段我爱你

02:34.860 --> 02:36.220
就说三个字对吧

02:36.580 --> 02:38.060
那么它是怎么样

02:38.900 --> 02:41.500
从你的电脑上跑到对方的电脑上的

02:41.980 --> 02:44.220
这里面的问题可多了多了去了

02:44.540 --> 02:46.140
一大堆的问题需要解决

02:46.260 --> 02:49.740
绝对不是我们平时学的一个阿加克斯就可以解决的

02:49.740 --> 02:52.820
其实它里面遇到了很多很多的问题

02:52.940 --> 02:54.820
都需要解决这些问题特别复杂

02:55.260 --> 02:56.940
因此这么复杂的问题

02:56.940 --> 02:59.380
我们当然要把它进行分模块的思想

02:59.380 --> 03:00.380
把它分开

03:00.580 --> 03:02.340
然后一块一块单独来处理

03:02.940 --> 03:03.940
这里我举了个例子

03:04.460 --> 03:05.940
比方说你有一杯

03:07.180 --> 03:08.140
你调制了

03:09.300 --> 03:11.220
一杯82年的可可可乐

03:11.940 --> 03:13.380
这个时候觉得味道不错

03:13.380 --> 03:15.140
想分享给你的朋友王富贵

03:15.660 --> 03:17.660
但是你们已经十年没有联系了

03:17.660 --> 03:19.900
那么你怎么样把可可给它呢

03:20.140 --> 03:21.540
就模拟一个网络通信

03:21.780 --> 03:23.780
那么你可能会要考虑很多问题

03:24.180 --> 03:25.700
比方说你要用什么装可乐呢

03:25.700 --> 03:27.140
很多人有什么东西在装

03:27.580 --> 03:29.020
你用塑料瓶可不可以装

03:29.260 --> 03:29.860
可以啊

03:29.860 --> 03:30.700
这个我写错了

03:31.700 --> 03:33.020
要塑料瓶是吧

03:34.220 --> 03:35.340
这怎么写的

03:35.740 --> 03:37.980
塑料瓶能不能装呢

03:38.620 --> 03:38.980
可以

03:38.980 --> 03:40.140
你用玻璃瓶能不能装

03:40.140 --> 03:40.580
可以

03:40.580 --> 03:41.620
梅气罐能不能装

03:41.620 --> 03:42.380
也可以

03:42.380 --> 03:43.500
它都能装对吧

03:43.660 --> 03:45.980
它是要解决装可乐的问题

03:45.980 --> 03:47.180
是不是有很多种方案

03:47.420 --> 03:47.980
对不对

03:48.660 --> 03:50.700
那么这个问题如果说解决了的话

03:50.700 --> 03:52.020
那么我们可能要考虑

03:52.260 --> 03:55.100
我们怎么样让可乐保持处于一个低温状态的

03:55.100 --> 03:55.340
对吧

03:55.340 --> 03:57.260
因为大家都知道

03:57.260 --> 03:58.740
爱可可乐的同学都知道

03:59.180 --> 04:00.180
这个可乐啊

04:00.180 --> 04:01.940
它如果说是常温保存的

04:01.940 --> 04:06.100
它就跟那个低温保存的可乐完全是两种饮料

04:06.100 --> 04:06.500
对不对

04:06.500 --> 04:08.420
所以我们要让它始终处于低温

04:08.420 --> 04:10.140
这样子获得最好的口感

04:10.540 --> 04:11.620
那怎么来办呢

04:11.620 --> 04:12.940
我们可以有很多种方案

04:12.940 --> 04:14.220
比方说有保温杯

04:14.220 --> 04:15.380
可以用个小冰箱

04:15.540 --> 04:16.500
带电池的

04:16.500 --> 04:17.780
或者是用个冰盒

04:18.100 --> 04:19.500
冷电运输都可以

04:19.740 --> 04:21.500
我们可以有很多种方案选择

04:21.580 --> 04:22.900
那么解决问题

04:22.900 --> 04:24.580
解决的问题其实就一个

04:25.420 --> 04:27.700
它就是如何来不让它处于低温

04:28.700 --> 04:29.620
那么第三个问题

04:29.620 --> 04:31.540
如果说这些问题都解决了

04:31.540 --> 04:32.780
那我还要考虑

04:33.420 --> 04:34.620
我怎么样保证

04:34.620 --> 04:36.980
可乐在运输的过程中不被人偷喝呢

04:37.580 --> 04:37.820
对吧

04:37.820 --> 04:39.180
这是一个安全性的问题

04:39.500 --> 04:41.100
那么比方说我们可以想到的方案

04:41.100 --> 04:42.820
可以给它贴个封条

04:43.220 --> 04:44.300
那么到了之后呢

04:44.300 --> 04:46.100
看那个封条有没有被拆过

04:46.100 --> 04:46.620
对吧

04:46.620 --> 04:48.460
像你们平时送快递的时候

04:48.460 --> 04:50.780
说快递上面都有一些密封的东西

04:51.500 --> 04:53.740
让你知道快递是没有被拆过的

04:54.060 --> 04:55.220
比方说还可以骗它

04:55.220 --> 04:55.340
对吧

04:55.340 --> 04:56.340
上面写个毒药

04:56.500 --> 04:57.340
它就不敢喝了

04:57.700 --> 05:00.060
这些都是解决问题的具体办法

05:00.060 --> 05:01.300
但是我们解决的问题

05:01.300 --> 05:03.620
目标就是让它如何保证不偷喝

05:04.500 --> 05:05.300
那么还有一个问题

05:05.300 --> 05:07.580
你如何王富贵10年没联系了

05:07.580 --> 05:09.700
你是不是你得找到他在哪

05:09.700 --> 05:10.140
对吧

05:10.140 --> 05:11.900
你要得到王富贵的地址

05:12.180 --> 05:13.420
那么这里有很多种方案

05:13.420 --> 05:14.860
比方说你去报案失踪

05:14.980 --> 05:17.140
或者是联系私人侦探

05:17.140 --> 05:18.980
或者是联系污流公司的朋友

05:19.020 --> 05:20.260
都可以得到他的地址

05:20.260 --> 05:21.660
总之方案有很多

05:21.660 --> 05:22.580
各有优劣

05:23.140 --> 05:25.700
最后的你还要解决如何运输的问题

05:25.860 --> 05:26.980
你可以有执行车

05:26.980 --> 05:27.300
汽车

05:27.300 --> 05:28.020
火车

05:28.420 --> 05:29.020
高铁飞机

05:29.020 --> 05:29.660
火箭

05:29.740 --> 05:31.340
这些都是他的运输方案

05:31.740 --> 05:33.180
所以说我们可以通透这个地址

05:33.180 --> 05:34.060
可以看出

05:34.060 --> 05:37.460
我们运送这个82年的可可可勒

05:37.900 --> 05:40.020
其实有很多问题需要解决的

05:40.260 --> 05:41.340
而且每一个问题

05:41.340 --> 05:42.940
它有不同的解决方案

05:43.060 --> 05:45.300
于是我们就可以把它形成一个分层结构

05:46.020 --> 05:47.340
然后我们可以这样认为

05:47.500 --> 05:48.940
当这个分层结构

05:48.940 --> 05:50.380
并不是网络的五层模型

05:50.380 --> 05:51.700
我只是举个例子

05:51.700 --> 05:53.740
帮大家理解为什么要分层

05:54.140 --> 05:55.100
然后这个可可

05:55.100 --> 05:56.660
首先我们要经过一个包装层

05:56.660 --> 05:57.460
把它包装起来

05:57.460 --> 05:57.860
对吧

05:57.860 --> 05:58.740
用什么包装

05:58.740 --> 06:00.180
这个包装层要解决的问题

06:00.380 --> 06:01.940
就是要固定可可的形态

06:01.940 --> 06:02.820
让它变成

06:02.980 --> 06:04.540
不然它是一摊水

06:04.540 --> 06:05.100
对不对

06:05.100 --> 06:06.340
你怎么运输呢

06:06.340 --> 06:07.660
所以要把它包装起来

06:07.780 --> 06:09.380
具体用输料瓶

06:09.780 --> 06:10.900
还是用煤气罐

06:11.420 --> 06:12.860
是不是都是具体的方案

06:12.860 --> 06:14.060
我们有很多种方案

06:14.060 --> 06:15.220
可以共选择

06:16.260 --> 06:18.100
然后接下来包装好了之后

06:18.100 --> 06:19.620
我们是不是要交给温控层

06:19.780 --> 06:20.060
对吧

06:20.060 --> 06:21.660
从上到下进行消负

06:21.660 --> 06:23.420
上一层做好的事情

06:23.420 --> 06:24.300
交给下一层

06:24.860 --> 06:26.740
那么下一层就不用管包装了

06:26.740 --> 06:27.740
反正你给它弄好了

06:27.740 --> 06:28.620
管理用什么包装

06:28.620 --> 06:29.220
无所谓

06:29.780 --> 06:31.180
然后我就解决什么

06:31.180 --> 06:33.460
我又解决如何保持低温运输

06:33.700 --> 06:35.020
那方案是不是有很多

06:35.180 --> 06:36.420
有没有小冰箱

06:36.420 --> 06:38.540
有那个冷炼运输都可以

06:39.300 --> 06:41.220
好温控层解决完了过后

06:41.460 --> 06:42.820
又交给下一层

06:42.940 --> 06:45.660
这个层是从上到下流动的

06:46.380 --> 06:48.380
下一层就不用解决包装了

06:48.380 --> 06:49.340
也不用解决温控了

06:49.340 --> 06:49.900
不管了

06:49.900 --> 06:51.260
管理上面要给我啥

06:51.380 --> 06:51.820
无所谓

06:51.820 --> 06:53.340
我现在就解决安全性的问题

06:53.620 --> 06:55.380
比如说我再用一个纸盒子的一包

06:55.380 --> 06:56.660
然后给它提个封条

06:56.780 --> 06:58.060
或者上面写个有毒

06:58.220 --> 06:58.500
对吧

06:58.500 --> 07:00.020
这就是安全层解决的问题

07:00.500 --> 07:02.100
好安全层解决完了过后

07:02.100 --> 07:03.500
再又交给下一层

07:03.700 --> 07:05.540
下一层就要找地址的

07:05.660 --> 07:07.020
那么你可以有很多种方案

07:07.020 --> 07:08.020
比方包案失踪

07:08.020 --> 07:09.340
找私人侦探

07:09.500 --> 07:11.100
找到这个王复官的地址

07:11.740 --> 07:12.900
那么就是巡职层

07:13.060 --> 07:15.540
那么这一层我们不要再给它贴一个标先

07:15.900 --> 07:17.140
具体的地址在哪

07:17.380 --> 07:19.580
那么你至于你我怎么获取到这个地址

07:19.580 --> 07:20.020
无所谓

07:20.020 --> 07:21.060
我有很多种方案

07:21.780 --> 07:23.340
最后交给这个运输层

07:23.340 --> 07:24.740
那么就选择运输工具了

07:24.740 --> 07:27.020
自行车 汽车 火车 高铁 飞机 火箭

07:27.020 --> 07:27.500
都可以

07:27.500 --> 07:28.500
都把不同的方案

07:28.980 --> 07:29.780
然后最后呢

07:29.780 --> 07:31.940
就是包裹就交到了王复官的手里

07:32.860 --> 07:34.340
这就是一个点击的本层节奏

07:34.820 --> 07:35.940
那么从这个地址中

07:35.940 --> 07:36.980
我们可以看出

07:37.340 --> 07:39.300
每一个层它是相对独立的

07:39.340 --> 07:41.740
它只需解决这一层遇到的问题就行了

07:42.100 --> 07:43.220
那么解决问题的时候

07:43.220 --> 07:44.460
是有很多种方案的

07:45.820 --> 07:46.580
然后呢

07:47.220 --> 07:48.380
我们每一层

07:48.380 --> 07:50.620
无需考虑上层的交付

07:50.620 --> 07:51.340
这啥意思呢

07:51.340 --> 07:52.580
比方说你这个温控层

07:52.580 --> 07:53.780
你要控制口感的

07:54.340 --> 07:55.700
你不用去考虑包装层

07:55.700 --> 07:56.420
他用什么包装

07:56.420 --> 07:57.420
他管他用什么包装

07:57.420 --> 07:58.940
反正我就控制口感就行了

07:59.420 --> 08:00.140
懂得意思吗

08:00.140 --> 08:02.100
他不用管上层给力的是啥

08:02.540 --> 08:03.860
不管给力的是啥

08:03.860 --> 08:06.580
我都能通过这个这一层来给你解决

08:07.100 --> 08:07.500
对吧

08:07.540 --> 08:09.900
他只需要把自己的结果交给下层结合

08:09.900 --> 08:10.940
比方温控层

08:10.940 --> 08:13.060
他解决了低温运输的问题

08:13.060 --> 08:14.740
他就把比方加了一个小冰箱

08:14.740 --> 08:16.540
他就把这个小冰箱交给安全层

08:16.540 --> 08:17.940
那么对安全层而言

08:17.940 --> 08:20.820
安全层他也不用管温控层给他的是什么东西

08:20.820 --> 08:22.140
你管你给我什么东西

08:22.140 --> 08:23.140
你给我一个

08:24.380 --> 08:26.140
夹了冰块的一个盒子

08:27.020 --> 08:28.700
我反正我给你贴上风调

08:28.980 --> 08:30.340
你给我一个小冰箱

08:30.340 --> 08:31.180
我给你贴上风调

08:31.180 --> 08:32.380
我不管你给我说啥

08:32.380 --> 08:33.220
就是下一层

08:33.220 --> 08:35.100
他不管上一层结果的啥东西

08:35.100 --> 08:36.340
他只管这一层的东西

08:36.420 --> 08:38.580
然后把这一层封装好之后交给下一层

08:40.820 --> 08:43.900
而且每一层他有多种方案可以供选择

08:44.740 --> 08:47.540
不同的方案他不会对上下层造成影响

08:47.540 --> 08:48.340
你想

08:48.340 --> 08:50.020
比方说你这个安全层

08:50.020 --> 08:51.100
我是贴风调

08:51.100 --> 08:52.380
还是贴个有毒

08:52.380 --> 08:53.900
对上面的温控有影响吗

08:53.900 --> 08:54.740
没有影响

08:54.740 --> 08:56.100
对下面的寻子有影响吗

08:56.100 --> 08:56.980
没有影响

08:56.980 --> 08:58.780
它这个方案可以随时切换的

08:59.460 --> 09:00.100
懂了意思吗

09:01.660 --> 09:02.740
而且我们还可以看出

09:02.740 --> 09:05.540
每一层会在上一层的基础上增加一些额外的信息

09:05.620 --> 09:06.420
这个很好理解

09:06.940 --> 09:09.540
你这个包装层你是不是加了一个包装吗

09:10.220 --> 09:11.660
对对你加了一个管理室

09:11.660 --> 09:14.060
每一栖锅还是玻璃杯

09:14.060 --> 09:15.020
是不是都加了一个包装

09:15.020 --> 09:15.660
加了一些东西

09:15.660 --> 09:16.020
对吧

09:16.020 --> 09:17.420
它不是一个唇的可乐了

09:18.060 --> 09:20.060
然后温控层你是不是加了一些东西

09:20.060 --> 09:22.740
温控层你加了一个冰箱或者一些冰块

09:22.740 --> 09:24.980
安全层是不是加了一个风调

09:25.980 --> 09:28.140
寻子层是不是加了一个地址标圈

09:28.140 --> 09:30.060
对对运输层加了一个拖拉机

09:30.940 --> 09:31.460
总之呢

09:31.460 --> 09:33.420
每一层他是不是加一些额外的东西

09:33.420 --> 09:35.140
这就是一个分层结构

09:35.180 --> 09:37.540
以他形成的形成了这么一种特点

09:37.540 --> 09:39.940
你看他跟模块是不是相比的话

09:39.940 --> 09:40.980
有一些自己的特点

09:40.980 --> 09:41.420
对吧

09:41.420 --> 09:43.460
首先他从上到下进行传递

09:44.060 --> 09:46.820
上一层就是上一层的东西交给下一层

09:46.820 --> 09:48.060
下一层再交给下一层

09:48.620 --> 09:50.180
而且每一层很独立

09:50.180 --> 09:50.580
对吧

09:50.580 --> 09:53.740
他有一些比较强的比较有规律的关系

09:54.620 --> 09:54.820
好

09:54.820 --> 09:57.100
那么我们了解了分层的意义之后

09:57.540 --> 10:00.020
分层的意义就解决复杂问题

10:00.300 --> 10:01.780
把复杂问题简单化

10:02.500 --> 10:04.860
然后让每一层的方案可以互相替代

10:05.940 --> 10:06.620
然后接下来的

10:06.620 --> 10:07.300
我们来看一下

10:07.300 --> 10:09.260
我们真正的网络五成模型

10:10.300 --> 10:11.420
我们的网络

10:11.420 --> 10:13.460
我们在设备上

10:13.460 --> 10:15.460
无论是手机还是你的电脑

10:15.460 --> 10:16.820
还是其他的网络设备

10:17.820 --> 10:19.740
你只要跟网络相关的

10:19.740 --> 10:21.060
那么就设计到一个问题

10:21.060 --> 10:24.340
我怎么样把我的东西传给你

10:24.660 --> 10:24.900
对吧

10:24.900 --> 10:26.700
这里边有好多好多问题要考虑

10:27.340 --> 10:28.060
有

10:28.060 --> 10:30.700
这边比方说举随便举一些例子

10:31.980 --> 10:34.020
那么我给你的东西到底是啥

10:34.100 --> 10:35.700
我是给你发辆的聊天消息

10:35.700 --> 10:37.220
我还是给你发到邮件的

10:38.220 --> 10:40.260
那么这就是应用程序要解决的问题

10:40.900 --> 10:41.980
这一程要解决什么问题

10:42.540 --> 10:45.300
就是你给我发的消息到底是什么东西

10:45.900 --> 10:46.860
它是做什么用的

10:47.260 --> 10:48.300
你给我发的是一个图片

10:49.140 --> 10:51.180
还是给我发的是一个邮件

10:51.940 --> 10:53.420
还是给我发的一个普通文件

10:54.020 --> 10:56.100
还是给我发的一段文本消息

10:56.460 --> 10:57.780
还是给我发的一个网页

10:58.500 --> 11:01.100
所以说这一块它要规定相应的消息格式

11:01.740 --> 11:02.900
那么我们平时做

11:02.900 --> 11:04.540
我们作为前段开发者的话

11:06.140 --> 11:08.340
目前只接触过应用程

11:09.020 --> 11:10.940
应用程里边有很多的协议

11:10.940 --> 11:12.420
这些协议是啥意思呢

11:12.420 --> 11:14.660
就相当于是我们上面的不同的方案

11:15.220 --> 11:16.500
包装程有很多的方案

11:16.500 --> 11:16.860
对吧

11:16.860 --> 11:18.220
有玻璃杯

11:19.380 --> 11:20.460
有那个维修花

11:20.860 --> 11:21.980
它每一程有不同的方案

11:21.980 --> 11:23.340
那么这些协议就是个意思

11:23.940 --> 11:25.580
它每一程可以有不同的协议

11:25.580 --> 11:26.900
来处理不同的场景

11:27.420 --> 11:28.620
所谓的应用程

11:28.860 --> 11:29.740
其实就是说

11:29.740 --> 11:32.660
我们在互联网应用的过程中

11:32.660 --> 11:34.460
产生了一些特定的应用需求

11:34.460 --> 11:37.940
比如说我们上网去访问网页

11:37.940 --> 11:40.220
那么访问网页不就是一个应用场景吗

11:40.220 --> 11:41.420
那么在这个场景里边

11:41.420 --> 11:43.340
我们跟服务器之间如何交互

11:44.140 --> 11:46.740
那么这个时候我们通常使用的是ATP协议

11:46.740 --> 11:48.140
所以我们学习的ATP协议

11:48.140 --> 11:49.620
实际上就是应用程的协议

11:50.340 --> 11:51.220
那么它就规定了

11:51.220 --> 11:53.500
我的要访问网页的话

11:53.500 --> 11:54.940
那么这个消息格式

11:54.940 --> 11:56.180
应该是什么样子呢

11:56.220 --> 11:58.940
应该有一个请求响应的模式

11:58.940 --> 12:00.060
请求的时候

12:00.060 --> 12:01.940
我要附带一个请求头

12:01.940 --> 12:03.060
还有一个请求体

12:03.060 --> 12:03.620
对吧

12:03.620 --> 12:05.300
响应的时候有一个响应头

12:05.300 --> 12:05.900
响应体

12:05.900 --> 12:07.260
它就规定这个消息格式

12:07.900 --> 12:09.220
当然除了ATP协议之外

12:09.220 --> 12:10.660
还有些别的协议

12:10.660 --> 12:12.340
这个是处理文件的

12:12.980 --> 12:15.500
要做文件共享的FTP协议

12:15.500 --> 12:17.300
比方说你们以后公司里边

12:17.300 --> 12:20.060
我们要公司要做一个文件共享系统

12:20.060 --> 12:20.260
对吧

12:20.260 --> 12:21.820
所有人都可以在上传文件

12:21.820 --> 12:23.380
到一个公共的空间

12:23.380 --> 12:24.940
就有点类似于百度网盘那种

12:24.940 --> 12:26.900
但是只是公司私有的

12:26.900 --> 12:28.060
不是公共的

12:28.060 --> 12:30.820
那么这个时候就可以搭一个FTP服务器

12:31.340 --> 12:34.060
通过FTP协议来实现文件共享

12:34.420 --> 12:36.460
那么这个DNS我们后边会讲

12:36.460 --> 12:38.020
这是玉敏检系协议

12:38.020 --> 12:40.860
然后这个玩意是来处理邮件的

12:40.860 --> 12:42.140
这个玩意也是处理邮件的

12:42.140 --> 12:42.860
一个是发邮件

12:42.860 --> 12:44.100
一个是收邮件

12:44.100 --> 12:45.980
总之它不同的应用场景里边

12:45.980 --> 12:48.140
它规定了不同的协议

12:48.140 --> 12:49.540
来进行消息传输

12:49.540 --> 12:50.380
就这么个意思

12:50.380 --> 12:51.980
就是应用成样搞定的事

12:51.980 --> 12:52.820
你要说这个话

12:52.820 --> 12:54.580
还有得要彻底的理解

12:57.060 --> 12:58.100
就不用想了

12:58.100 --> 12:59.700
我们就简单的一件就行了

12:59.700 --> 13:00.420
有彻底的一件

13:00.420 --> 13:01.580
我们要讲太多东西了

13:02.340 --> 13:02.540
好

13:02.540 --> 13:04.020
让我们来看传输程

13:04.020 --> 13:05.820
传输程要解决什么问题呢

13:06.380 --> 13:07.820
它要解决的主要问题就是

13:07.820 --> 13:09.900
如何保证消息的可靠传输

13:10.500 --> 13:11.540
这是啥意思呢

13:11.740 --> 13:14.100
比方说你传一个123过去

13:14.420 --> 13:16.700
但它到了对方的计算机的时候

13:16.700 --> 13:17.900
可能不是123了

13:18.260 --> 13:19.900
它的文字错乱了

13:19.900 --> 13:21.420
比方说变成213

13:22.060 --> 13:23.660
是不是传输错误了

13:24.220 --> 13:25.140
那么这个时候

13:25.500 --> 13:26.700
对一方如何知道

13:26.700 --> 13:28.380
这个数据是错误的

13:29.660 --> 13:31.060
它如何知道这个是错误的

13:31.060 --> 13:32.940
同时它又如何知道

13:32.940 --> 13:33.900
它错误了过后

13:33.900 --> 13:34.740
它又怎么办

13:35.420 --> 13:36.700
这些都是问题

13:36.700 --> 13:38.100
那么这些问题

13:38.100 --> 13:40.620
我们把它统称为可靠传输

13:40.620 --> 13:42.860
比方说你能传一个321

13:42.860 --> 13:44.620
别过到了对方的设31

13:44.620 --> 13:45.660
少了一个2

13:46.020 --> 13:47.220
丢失了一个数据

13:47.220 --> 13:47.940
丢包了

13:47.940 --> 13:49.540
那么这个时候又怎么办

13:50.300 --> 13:54.180
这些都是传输层要解决的事情

13:54.380 --> 13:56.700
那么传输层主要有两种协议

13:56.700 --> 13:59.700
一个是TCP协议

13:59.700 --> 14:01.100
一个是UDP协议

14:01.460 --> 14:02.740
那么TCP协议

14:02.740 --> 14:04.620
它是处理可靠传输的

14:04.820 --> 14:06.620
就是你只要使用这个协议

14:06.620 --> 14:08.700
那么双方之间的数据

14:08.700 --> 14:09.820
它就不可能错乱

14:09.820 --> 14:12.220
一定是规则的有趣的

14:12.540 --> 14:14.580
我们平时上网的时候

14:14.580 --> 14:16.700
用的协议大部分都是TCP协议

14:17.700 --> 14:20.780
因为它对消息的准确性要求很高

14:21.580 --> 14:22.420
然后例子放

14:22.420 --> 14:24.500
像我们ATDP协议

14:24.500 --> 14:25.060
对吧

14:25.580 --> 14:29.020
我们说ATDP协议是搭建在TCP协议之上的

14:29.020 --> 14:30.100
那这是什么意思呢

14:30.100 --> 14:32.340
就跟我们上面的可乐的粒子是一样的

14:32.340 --> 14:34.740
在应用程我用ATDP协议

14:34.740 --> 14:36.540
那么使用一种消息格式

14:36.700 --> 14:39.100
然后交给你过后

14:39.100 --> 14:42.300
你负责把它可靠的传输到对方

14:42.940 --> 14:45.500
那么这个时候你可以使用TCP协议

14:45.860 --> 14:48.660
保证消息是正确传给对方的

14:49.140 --> 14:51.340
所以说当我们去使用ATDP协议的时候

14:51.580 --> 14:52.980
我们就不用考虑

14:52.980 --> 14:55.860
万一我这里消息丢了一半咋办

14:55.860 --> 14:56.500
对吧

14:56.500 --> 14:58.180
万一传了一半没传完咋办

14:58.180 --> 14:59.140
你不用考虑这件事

14:59.140 --> 15:01.740
因为这件事TCP协议放你考虑的

15:03.020 --> 15:04.940
另外一个是UDP协议

15:04.940 --> 15:07.460
这个协议它不解决可靠传输

15:07.460 --> 15:08.260
无所谓

15:08.460 --> 15:10.500
反正我给你说要去发出来

15:10.500 --> 15:11.780
所有人都听得到

15:11.780 --> 15:14.100
就好比在村里边哪个喇叭喊了一声

15:14.100 --> 15:14.700
对吧

15:14.860 --> 15:18.220
TCP协议好比说我发通知的时候

15:18.220 --> 15:19.500
我每家每户

15:19.500 --> 15:20.740
挨家挨户

15:21.300 --> 15:22.180
进门

15:22.180 --> 15:24.940
然后悄悄地告诉你

15:24.940 --> 15:26.420
我有什么样的通知

15:26.420 --> 15:28.620
就人对人一对一地告诉你

15:29.420 --> 15:31.620
那么UDP协议就相当于是我哪个喇叭

15:31.620 --> 15:32.940
在村里边喊了一声

15:32.940 --> 15:34.380
那有的时候别人没听见

15:34.380 --> 15:35.220
或者是听错了

15:35.220 --> 15:36.180
那就不管了

15:36.420 --> 15:37.820
就这个玩意还是有用的

15:37.820 --> 15:39.460
比方看一些直播的时候

15:39.660 --> 15:41.740
有的时候数据传输了

15:41.740 --> 15:43.020
丢了几帧无所谓

15:43.060 --> 15:45.140
你可能觉得画面卡了一下

15:45.140 --> 15:46.380
或者撕裂了一下

15:46.380 --> 15:46.860
对吧

15:46.860 --> 15:49.140
或者是声音断了一下

15:49.140 --> 15:51.100
也不整体上不影响

15:51.100 --> 15:51.820
那么这个时候

15:51.820 --> 15:53.220
你可以选择UDP协议

15:54.220 --> 15:54.500
好

15:54.500 --> 15:56.820
总之这就是传输程要搞的事

15:56.820 --> 15:57.180
对吧

15:57.180 --> 15:58.500
消息的可靠传输

16:00.060 --> 16:01.500
下一层网络层

16:01.740 --> 16:03.620
网络层要解决什么问题呢

16:03.620 --> 16:03.980
对吧

16:03.980 --> 16:05.500
你现在消息也有了

16:05.500 --> 16:05.700
对吧

16:05.700 --> 16:07.420
我也能够保证可靠传输了

16:07.420 --> 16:08.180
那么这个时候

16:08.180 --> 16:09.300
我给谁呀

16:09.580 --> 16:10.900
我传输给谁呀

16:11.140 --> 16:11.940
那么这个时候

16:11.980 --> 16:13.660
就要靠网络层来发力了

16:14.060 --> 16:15.540
那么他要解决什么问题呢

16:15.540 --> 16:16.620
他要解决的就是

16:16.620 --> 16:17.500
我把这个数据

16:18.380 --> 16:21.060
怎么样从互联网终找到对方

16:21.300 --> 16:22.100
要找到人

16:22.100 --> 16:23.380
不然我给谁呢

16:23.380 --> 16:23.980
对不对

16:24.180 --> 16:25.340
那么这里有个重要的解决

16:25.340 --> 16:26.140
就是IP协议

16:26.140 --> 16:26.740
像我们说的

16:26.740 --> 16:27.780
平时说的IP地址

16:27.780 --> 16:28.380
对不对

16:28.380 --> 16:30.780
那么IP地址就是网络层的东西

16:32.020 --> 16:33.220
像我们的一些设备

16:33.220 --> 16:34.420
注意这个玩意不是协议

16:34.860 --> 16:35.660
它是设备

16:36.700 --> 16:38.140
那么我们平时用的度游戏

16:38.140 --> 16:39.860
它也是属于网络层的协议

16:39.860 --> 16:41.020
网络层的设备

16:42.380 --> 16:44.180
总之在茫茫互联网终

16:44.180 --> 16:45.380
我如何找到对方

16:45.740 --> 16:46.860
而且找到对方的时候

16:46.860 --> 16:47.940
是不是有多条路径

16:47.940 --> 16:48.380
对吧

16:48.380 --> 16:49.620
条说大陆通过网吧

16:49.620 --> 16:51.660
而你现在你要到你们

16:51.940 --> 16:54.420
你们那个城市的万达网上

16:55.500 --> 16:57.020
那是不是有很多条路

16:57.020 --> 16:58.340
那走哪一条最近呢

16:58.340 --> 16:58.740
对不对

16:58.740 --> 17:00.620
这个网络层也要解决这个问题

17:00.740 --> 17:00.940
对吧

17:00.940 --> 17:01.940
一个寻子的问题

17:01.940 --> 17:02.820
寻路的问题

17:04.380 --> 17:06.060
然后接下来下一层

17:06.460 --> 17:07.660
叫做数据�络层

17:07.660 --> 17:08.580
这一块就比较抽象了

17:09.180 --> 17:10.260
那么这是什么意思呢

17:10.260 --> 17:11.820
你看前面搞定了这些事情

17:11.820 --> 17:13.340
之后又交给往下移交

17:13.340 --> 17:14.660
交给数据链路层了

17:14.660 --> 17:16.100
它又要解决什么问题呢

17:17.020 --> 17:20.220
我们的数据已经通过IP地址

17:20.220 --> 17:20.940
找到了对方

17:20.940 --> 17:21.140
对吧

17:21.140 --> 17:23.980
已经挑到了对方的网络里面去

17:23.980 --> 17:26.420
但是我们的互联网是这样子的

17:26.860 --> 17:28.500
我们的互联网不是

17:28.620 --> 17:29.500
一台计算机

17:29.500 --> 17:30.380
一台计算机

17:30.380 --> 17:31.580
然后直接相连的

17:31.860 --> 17:33.860
它中间有很多的节点

17:34.100 --> 17:34.380
对吧

17:34.380 --> 17:35.380
很多的节点

17:35.420 --> 17:36.460
那么这些节点

17:36.500 --> 17:38.460
它们之间又会形成指望

17:38.700 --> 17:40.820
它会形成这种格式

17:40.980 --> 17:43.380
比方说这是一个指望

17:44.500 --> 17:45.980
然后这也是一个指望

17:47.980 --> 17:50.420
现在我要从这儿

17:51.580 --> 17:52.420
我要从这儿

17:53.300 --> 17:54.140
发到这儿

17:54.540 --> 17:55.660
那么我们发的是谁呢

17:55.660 --> 17:57.500
我们是要把我们的消息通过

17:57.500 --> 17:58.900
这是比方说这是录游戏

17:59.260 --> 18:00.540
我们要通过这个录游戏

18:00.540 --> 18:01.820
发给怎么发呢

18:01.900 --> 18:03.020
发到这个录游戏

18:03.460 --> 18:05.940
实际上我们把这个数据发给谁呢

18:05.940 --> 18:06.660
发给他了

18:07.180 --> 18:08.100
然后发给他过后

18:08.100 --> 18:10.300
他如何把这个数据准确分配到这儿

18:10.980 --> 18:12.460
他不分配给其他计算机

18:12.660 --> 18:15.020
也就是说我们在一个指望

18:15.020 --> 18:15.900
相当于是一个

18:16.020 --> 18:17.500
你可以离开局域网

18:17.780 --> 18:19.300
在一个指望里边

18:19.860 --> 18:22.180
再继续寻找我们的目标

18:22.180 --> 18:24.420
那么这个时候要靠数据链路上

18:24.820 --> 18:26.300
这个是比较抽象的

18:26.540 --> 18:28.180
那么这一块要靠数据链路上

18:28.980 --> 18:30.540
它解决的问题是

18:30.740 --> 18:33.020
我已经成功的到达了对方的指望

18:33.700 --> 18:35.260
到达到了这个地址

18:35.740 --> 18:39.300
那么我如何在指望中找到那台计算机

18:40.180 --> 18:41.620
这是他要解决的问题

18:42.660 --> 18:44.340
好那么最后一个

18:44.540 --> 18:45.900
这些问题全都解决了

18:46.020 --> 18:47.620
好了现在要真实的发送了

18:47.620 --> 18:48.980
那么接下来就到了物理场了

18:49.220 --> 18:52.140
物理场就是真实的把这个信息发出出去

18:52.260 --> 18:53.500
把前面的都解决了

18:54.340 --> 18:56.100
那么这个信息怎么发出出去了

18:56.100 --> 18:57.820
那就这个情况就很多了

18:58.100 --> 18:58.900
你给我的是什么

18:58.900 --> 19:00.580
给我的是一个二净值数据

19:00.820 --> 19:02.340
这些东西全是二净值数据

19:02.580 --> 19:03.500
在计算机里边

19:04.100 --> 19:04.940
不能有其他数据

19:04.940 --> 19:05.940
全都是二净值的

19:06.460 --> 19:08.660
那么这个二净值数据我怎么发出去了

19:09.340 --> 19:10.940
发送的方式是不是有很多

19:11.660 --> 19:14.260
有光线 双角线 同样这样

19:14.260 --> 19:15.620
这些东西不要了解就行了

19:15.620 --> 19:16.900
不用去计算机

19:17.300 --> 19:19.980
总之呢这些东西都是物理程的设备

19:20.260 --> 19:21.620
他要解决的问题就是

19:22.060 --> 19:25.420
我该怎么样把这些一鸣一鸣的这些信号

19:25.580 --> 19:26.900
把这些二净值

19:27.140 --> 19:29.380
变成一个真正可以发送的信号

19:30.020 --> 19:31.460
那么这种信号是多种多样的

19:31.460 --> 19:32.900
比方说你用一些网线

19:33.140 --> 19:34.060
它就是个电型

19:34.460 --> 19:35.900
它通过电子传输的

19:36.580 --> 19:38.500
它把它转换成不同的波形

19:38.740 --> 19:39.300
发出去

19:39.300 --> 19:40.540
那么转换成哪一种波形

19:40.540 --> 19:42.100
这些都是物理程要解决的问题

19:43.060 --> 19:45.300
然而比方说你用的是光线

19:45.300 --> 19:46.740
那光线的是光线号

19:47.540 --> 19:49.340
那么这个时候又要设备到一个问题了

19:49.340 --> 19:50.420
我如何

19:50.820 --> 19:53.420
这个光从哪个角度射出去的

19:53.940 --> 19:55.180
怎么样去反弹呢

19:55.900 --> 19:57.980
到了对方过后对方怎么去解析呢

19:57.980 --> 19:58.900
这些都是问题

19:59.300 --> 20:01.100
我说你使用Wi-Fi那是电磁波

20:01.420 --> 20:03.100
那么这个波段频率是多少

20:03.500 --> 20:04.340
这些都是问题

20:04.340 --> 20:06.100
都需要物理程来去定义的

20:06.940 --> 20:07.620
总之呢

20:07.860 --> 20:09.380
这些问题通过这些程

20:09.380 --> 20:10.540
我们的真正的数据

20:11.220 --> 20:12.020
通过这个程

20:12.260 --> 20:13.460
我们真正的数据来了

20:13.460 --> 20:14.180
来应用程

20:14.180 --> 20:15.820
应用程解决格式

20:16.700 --> 20:19.540
然后传输程解决可靠传辑

20:20.180 --> 20:21.780
交给网络程网络程决解决

20:21.780 --> 20:22.780
怎么去找对方

20:23.740 --> 20:25.060
好交给数据电动程

20:25.060 --> 20:27.940
电动程解决怎么去在一个职望里面

20:27.940 --> 20:29.820
准确的找到那台计算机

20:30.300 --> 20:32.820
然后再交给物理程发生真实的传输

20:33.340 --> 20:34.900
那么这就是五成网络模型

20:35.540 --> 20:36.980
刚才有几个点忘了说了

20:36.980 --> 20:37.900
给大家补充一下

20:38.180 --> 20:39.580
一个是数据电动程里面

20:40.380 --> 20:41.020
像这个

20:41.460 --> 20:43.500
数据电动程和物理程这些东西

20:44.380 --> 20:45.380
看一眼就行了

20:45.740 --> 20:46.540
看一眼就行了

20:46.540 --> 20:47.580
这个不用去深究

20:48.540 --> 20:50.700
数据电动程有一个重要的鞋就是MAC

20:51.700 --> 20:52.980
这个MAC是什么意思呢

20:53.180 --> 20:54.820
这个MAC我们称之为MAC地址

20:54.820 --> 20:56.860
实际上你们如果说在控制台里面

20:56.860 --> 20:58.140
都可以看到自己的MAC地址

21:00.060 --> 21:02.340
然后你们Windows的话就输入IP config

21:03.300 --> 21:04.820
那么这里MAC的话就输入

21:05.020 --> 21:05.900
IP config

21:06.500 --> 21:07.140
一会儿

21:07.820 --> 21:08.780
你看这些东西

21:08.980 --> 21:09.860
就是MAC地址

21:10.300 --> 21:13.060
这个MAC地址是跟网卡绑在一起的

21:13.300 --> 21:13.980
是跟网卡

21:13.980 --> 21:14.900
就一张网卡

21:14.900 --> 21:16.380
它就有一个MAC地址

21:16.900 --> 21:17.820
当然你看有的人会看到

21:17.820 --> 21:19.540
我这个电脑上为什么这么多MAC地址

21:19.540 --> 21:19.780
对吧

21:19.780 --> 21:21.420
你看这里有一个

21:21.420 --> 21:23.020
因为我这样子它有些虚帝网卡

21:23.700 --> 21:25.300
虚帝网卡是它就不用去深究了

21:25.300 --> 21:25.940
总之

21:26.420 --> 21:28.620
理论上一个网卡就一个MAC地址

21:29.700 --> 21:31.580
那么它跟IP有什么区别呢

21:31.580 --> 21:32.460
大家了解一下

21:33.180 --> 21:35.260
IP我们说MAC地址是唯一的

21:35.260 --> 21:35.820
是唯一的

21:35.820 --> 21:37.500
一个网卡就有一个唯一的MAC地址

21:37.500 --> 21:38.420
全球唯一

21:38.860 --> 21:40.780
它是在生产网卡的时候

21:40.780 --> 21:42.300
直接看它焊进去了

21:42.540 --> 21:43.020
知道吧

21:44.100 --> 21:45.260
其实也能赶

21:45.260 --> 21:47.100
只是我们一般也不去改它

21:47.500 --> 21:48.540
它直接焊进去了

21:48.780 --> 21:50.780
所以它出场的时候MAC地址就定下来了

21:51.260 --> 21:52.100
全球唯一

21:52.620 --> 21:54.660
那么我们MAC地址跟IP地址

21:54.660 --> 21:56.100
说IP地址也是唯一的

21:56.100 --> 21:57.420
那MAC地址也是唯一的

21:57.420 --> 21:58.460
它们有什么区别呢

21:58.980 --> 22:00.260
你可以这样理解

22:00.900 --> 22:03.340
MAC地址就相当于你的身份证号

22:04.260 --> 22:05.540
无论你在哪

22:05.980 --> 22:07.660
你的身份证号是不变的

22:07.860 --> 22:09.060
所以说MAC地址

22:09.460 --> 22:11.460
它不能标识网络位置

22:12.100 --> 22:13.620
它不知道你在哪个网络的

22:13.940 --> 22:15.020
你只要买了这台电脑

22:15.020 --> 22:15.860
你只要不换电脑

22:15.860 --> 22:16.660
不换网卡

22:17.300 --> 22:18.940
你把这个电脑今天在成都

22:19.540 --> 22:20.420
是这个MAC地址

22:20.420 --> 22:21.540
明天你拿到北京

22:21.540 --> 22:22.500
还是这个MAC地址

22:22.900 --> 22:24.300
它跟网卡绑在一起的

22:24.740 --> 22:25.180
知道吧

22:26.540 --> 22:29.260
那么IP是跟网络绑在一起的

22:29.620 --> 22:32.740
它能在同一个职网里面唯一

22:32.740 --> 22:33.740
这是啥意思

22:33.740 --> 22:35.180
比如说今天我在成都

22:35.180 --> 22:36.460
连了一个局域网

22:36.460 --> 22:37.500
连到一台路由器

22:37.820 --> 22:39.300
它给我分配了一个IP地址

22:39.900 --> 22:42.260
那么只能保证在这台路由器的范围内

22:42.260 --> 22:42.940
是唯一的

22:43.940 --> 22:45.740
然后有一天我跑到北京去了

22:45.940 --> 22:46.980
跑到北京去开会

22:47.740 --> 22:49.060
我连了另外一个路由器

22:49.060 --> 22:50.220
或者是连了另外一个WiFi

22:50.220 --> 22:51.980
它又给我了另外一个IP地址

22:52.500 --> 22:55.260
IP地址在计划机里面是经常电动的

22:55.500 --> 22:57.540
它是标识着你的网络环境

22:58.500 --> 23:01.100
在同一个网络下边是唯一的

23:01.100 --> 23:02.060
是这么个意思

23:03.100 --> 23:04.300
IP地址相当于是什么呢

23:04.300 --> 23:05.340
将来MAC地址

23:05.340 --> 23:07.660
如果说内比于你的身份证号的话

23:07.940 --> 23:12.100
IP地址相当于是你的目前的通讯地址

23:12.340 --> 23:13.420
目前你在哪

23:13.660 --> 23:15.020
所以这个玩意经常会变动的

23:15.540 --> 23:16.380
就这么个意思

23:17.900 --> 23:19.780
好了这是五成网络模型

23:19.780 --> 23:21.380
其实像那个五成网络模型

23:21.860 --> 23:23.540
我们平时根本打敲烧

23:23.540 --> 23:25.260
也就是应用成那个ATDP

23:26.140 --> 23:29.260
然后我们后边会学习到TCP

23:30.860 --> 23:31.660
会学到这个

23:32.380 --> 23:34.540
我们最多就研究到这就可以了

23:34.540 --> 23:36.220
其他的我们紧做了解

23:36.820 --> 23:40.060
除非你将来要去做一些通讯工程

23:40.580 --> 23:41.620
比方说像华为

23:41.900 --> 23:43.940
华为的核心业务就在这三成

23:45.060 --> 23:46.540
就在这三成里面玩

23:46.540 --> 23:47.780
比方说我们说了5G

23:48.260 --> 23:49.700
5G就在这三成里面玩

23:49.980 --> 23:50.980
跟上层没关系

23:51.580 --> 23:52.780
所以以后5G出来了

23:52.780 --> 23:54.460
对我们这个应用程有什么影响

23:55.420 --> 23:57.580
从这一套理论上说没有什么影响

23:57.860 --> 24:00.820
那么至于它网速加快了之后

24:00.820 --> 24:02.140
延迟变低了之后

24:02.140 --> 24:03.740
会不会产生新的应用程协议

24:03.740 --> 24:04.340
拉缩不准

24:04.940 --> 24:06.780
但是至少从这个结构上说

24:06.900 --> 24:09.220
我们是完全是可以利用ATDP

24:09.220 --> 24:10.860
TCP都是没问题的

24:12.180 --> 24:14.620
好了这是咱们的五成网络模型

24:15.460 --> 24:17.740
好接下来我们来学习五成网络模型

24:17.740 --> 24:18.620
演成了一个知识

24:18.620 --> 24:20.460
就是数据的解封装和解封装

24:20.460 --> 24:21.820
我们在回答面试期的时候

24:21.980 --> 24:24.220
第一要回答出这个五成网络模型

24:24.260 --> 24:25.620
每一成它解决什么问题

24:25.620 --> 24:26.940
有哪些协议

24:27.820 --> 24:29.060
然后我们还要回答出

24:29.060 --> 24:31.100
它的数据的封装和解封装

24:31.340 --> 24:31.980
这二层意思

24:32.380 --> 24:34.620
这个逻辑就跟上面的逻辑是一样的

24:34.900 --> 24:37.140
每一层是不是会加入一些额外的信息

24:37.660 --> 24:38.140
对不对

24:38.260 --> 24:38.940
加个杯子

24:38.940 --> 24:39.780
加个煤气罐

24:40.060 --> 24:42.580
那么这里加个小冰箱

24:42.740 --> 24:43.700
这里加个风调

24:43.700 --> 24:45.740
每一层会加一些额外的东西

24:45.980 --> 24:48.140
都是为了做一些特定的事情

24:48.580 --> 24:49.660
那么这里也是一样

24:50.100 --> 24:53.500
比方说邓哥要给他的女神脆花

24:53.620 --> 24:54.660
要发一句我爱你

24:55.100 --> 24:57.060
那么这三个字上你不能直接给他弄过去

24:57.060 --> 24:58.060
直接弄过去

24:58.820 --> 25:00.340
你需要有很多层来处理

25:00.980 --> 25:03.140
首先直接到到应用层

25:03.500 --> 25:05.540
应用层它要确定协议的

25:05.540 --> 25:06.860
你要用什么协议发

25:07.140 --> 25:08.540
比方你用阿加克斯发的

25:08.740 --> 25:09.940
那么使用的是什么协议

25:10.220 --> 25:11.300
ADP协议

25:11.780 --> 25:15.980
那么应用层它就会在这三个字基础上

25:15.980 --> 25:17.380
给你加一段信息

25:17.500 --> 25:19.860
你看我们把它叫做封装

25:20.020 --> 25:21.020
就加一个头部

25:21.660 --> 25:22.940
也叫做手部

25:22.940 --> 25:23.940
是一个意思

25:25.340 --> 25:25.940
头部

25:27.260 --> 25:27.860
手部

25:28.060 --> 25:28.940
都是一个意思

25:29.260 --> 25:30.060
那么这里的

25:30.060 --> 25:31.700
比方说在ADP协议里面

25:31.820 --> 25:32.860
我们的头部是啥

25:32.860 --> 25:34.940
我们的ADP协议里面头部不就是那个吗

25:35.140 --> 25:35.460
对吧

25:35.460 --> 25:36.620
请求头

25:37.220 --> 25:37.820
对不对

25:38.380 --> 25:38.700
对吧

25:38.700 --> 25:40.340
我们的正文就是请求体

25:40.540 --> 25:41.260
就这么个意思

25:41.260 --> 25:42.460
它会加一些头部

25:44.260 --> 25:44.940
这个好理解

25:44.940 --> 25:45.140
对吧

25:45.140 --> 25:47.340
这个我们应用层也用过了这么多次

25:47.340 --> 25:48.340
好理解

25:48.540 --> 25:50.420
那么接下来它就把这个消息

25:51.180 --> 25:52.180
它就把这个玩意儿

25:52.180 --> 25:53.660
又交给传输层

25:54.780 --> 25:56.140
那么这个传输层呢

25:56.140 --> 25:56.940
拿到这个消息过

25:56.940 --> 25:57.740
它管理是啥

25:57.740 --> 25:59.620
它不管你应用层用的是什么协议

26:00.260 --> 26:00.900
然后呢

26:00.900 --> 26:01.700
传输层呢

26:01.700 --> 26:03.020
它又会给你加个头部

26:04.380 --> 26:06.260
为什么传输层也要加头部啊

26:06.540 --> 26:08.180
因为传输层要解决

26:08.300 --> 26:10.780
那个我们说我要解决可靠传输的问题

26:10.780 --> 26:11.260
对吧

26:11.340 --> 26:12.260
它要解决

26:14.180 --> 26:17.260
就是我如何知道这个消息是正确发过去的

26:17.260 --> 26:18.780
那么肯定需要一些额外的信息

26:18.860 --> 26:21.220
比如说要去做一些交验等等

26:21.220 --> 26:22.380
一些额外的信息

26:22.620 --> 26:23.460
那么这些信息呢

26:23.460 --> 26:25.100
它也会形成它的头部

26:25.260 --> 26:26.140
这个玩意儿呢

26:26.140 --> 26:27.580
传输层的TCP协议

26:27.580 --> 26:28.460
我们后边呢

26:28.460 --> 26:30.620
还会稍微详细的给大家说一下

26:31.660 --> 26:31.860
好

26:31.860 --> 26:32.620
这是传输层的

26:32.620 --> 26:33.540
也会加头部

26:33.820 --> 26:34.780
好那么这个消息呢

26:34.780 --> 26:35.820
又到了网络层

26:35.820 --> 26:37.500
网络层不管上面给我的是啥

26:37.860 --> 26:38.780
我管理给我的是啥

26:38.780 --> 26:40.300
反正我又给你加一些头部

26:40.500 --> 26:41.620
这个头部用来做什么呢

26:41.620 --> 26:43.540
用来做网络寻职的

26:43.940 --> 26:44.900
就要通过

26:45.660 --> 26:47.340
就是比方我的IP是啥

26:47.620 --> 26:48.820
对方的IP是啥

26:48.820 --> 26:49.340
对吧

26:49.820 --> 26:53.260
那么下一条就是我下一条路走哪

26:53.820 --> 26:56.060
我可能有很多条路可以走

26:56.060 --> 26:57.140
下一条路该走哪

26:57.540 --> 27:00.540
最近它要通过这个头部告诉

27:02.660 --> 27:03.860
然后接下来到

27:03.860 --> 27:04.500
这个消息呢

27:04.500 --> 27:05.900
又到了数据链路层

27:06.300 --> 27:07.100
数据链路层呢

27:07.100 --> 27:08.140
它又在这个消息的头

27:08.140 --> 27:09.140
又加了一个头

27:09.140 --> 27:11.700
同时数据链路层还加了一个尾巴

27:13.420 --> 27:15.380
那么你不用管这个头和尾巴是啥

27:15.660 --> 27:16.860
它主要解决的问题呢

27:16.860 --> 27:19.380
就是在指望内如何传输

27:19.380 --> 27:20.940
其实这里边加的是什么呢

27:20.940 --> 27:23.380
加的也就是我的麦克迪指示啥

27:24.300 --> 27:25.820
对方的麦克迪指示啥

27:26.180 --> 27:28.100
就加的是这个内容

27:28.860 --> 27:29.820
最后到了物理城

27:29.820 --> 27:31.380
物理城它不加头也不加尾

27:31.900 --> 27:33.580
物理城直接把它转成的信号

27:33.980 --> 27:37.860
那么就看你使用的是什么样的一个传输设备了

27:38.380 --> 27:39.820
你使用的光线还是光信号

27:39.820 --> 27:40.780
你使用的是

27:42.180 --> 27:43.620
网线它就是电信号

27:44.060 --> 27:44.580
总之呢

27:44.580 --> 27:47.940
它把这个二听之数据变成信号

27:48.660 --> 27:49.700
于是那就可以传输了

27:50.060 --> 27:50.900
那么整个过程

27:50.900 --> 27:52.340
我们认为它叫做封装

27:52.780 --> 27:54.300
就是我们的原始消息

27:54.620 --> 27:57.340
一块一块一块给它加上一些头部

27:57.340 --> 27:58.900
一些尾部就可以传输了

27:59.740 --> 28:00.980
好传输过后

28:00.980 --> 28:01.860
到了对方过后

28:01.860 --> 28:02.420
对方呢

28:02.860 --> 28:04.460
它不能直接拿这个消息来去用

28:04.780 --> 28:05.980
它要解封装

28:06.780 --> 28:09.100
它首先物理城把这个信号还原

28:09.580 --> 28:11.300
还原过后交给数据链路层

28:12.020 --> 28:12.700
数据链路层

28:12.700 --> 28:15.260
你看数据链路层是不是拿到这个完整的数据了

28:15.780 --> 28:17.700
好数据链路层就把头去掉

28:17.700 --> 28:18.980
把这个尾巴也去掉

28:19.620 --> 28:20.620
因为它看到这个头

28:20.620 --> 28:21.620
看到那个尾巴就知道了

28:22.620 --> 28:24.780
你是那个麦克地址发过来的

28:25.340 --> 28:26.140
发给我的

28:26.140 --> 28:26.380
对吧

28:26.380 --> 28:27.300
不是发给别人的

28:27.980 --> 28:29.500
那么它就知道了很多信息

28:30.180 --> 28:32.180
然后它就抓了解封装之后

28:32.180 --> 28:34.020
又把这个消息交给网络层

28:34.860 --> 28:35.540
网络层一看

28:35.540 --> 28:37.140
你这个IP地址

28:37.780 --> 28:39.780
到这刚好是我的IP地址

28:40.020 --> 28:40.500
行了

28:40.500 --> 28:41.420
那我就要了呗

28:42.020 --> 28:43.300
那么它又抓了解封装

28:43.620 --> 28:45.100
于是那就还原成这种消息

28:45.940 --> 28:46.940
然后交给传输层

28:46.940 --> 28:48.340
传输层也来教育一下

28:48.340 --> 28:50.660
你给我发的消息有没有错误

28:51.060 --> 28:53.420
传输过程中是不是丢了一些数据

28:53.420 --> 28:55.500
或者是数据是不是错了

28:55.500 --> 28:56.340
等等

28:57.180 --> 28:58.420
这是传输层要搞定的事

28:59.100 --> 29:00.100
那么这些信息哪来

29:00.340 --> 29:01.340
就是来自于这个头部

29:02.260 --> 29:02.820
懂了意思吗

29:03.340 --> 29:05.060
那么它再把这个头部一去掉

29:05.260 --> 29:06.980
就变成了应用层的消息

29:07.500 --> 29:08.380
应用层一看

29:08.420 --> 29:09.140
ATB协议

29:09.140 --> 29:11.220
ATB协议里边我把头一去掉

29:11.500 --> 29:13.580
消息体里边不就是我的证文吗

29:13.980 --> 29:15.540
于是我就拿到了原始那种

29:16.100 --> 29:16.780
所以说我们

29:17.580 --> 29:20.260
虽然说我们平时用阿里克斯用的挺爽的

29:21.780 --> 29:25.580
但实际上我们的阿里克斯还是要经过这么五层

29:25.580 --> 29:28.020
只不过这些事情的你不用做了

29:29.140 --> 29:30.620
操作系统帮你做好了

29:31.220 --> 29:33.500
你只需要用ATB发过去

29:33.500 --> 29:35.860
剩下的全部交给操作系统完成

29:36.580 --> 29:37.540
帮你搞定的

29:37.900 --> 29:38.620
就这么个意思

29:39.100 --> 29:40.500
就是封装和解封装

29:42.100 --> 29:45.100
好 最后我们来了解一下一个常识

29:45.820 --> 29:49.180
因为我们有的时候在网上可能可以看到

29:49.540 --> 29:51.940
说我们的网络四层网络模型

29:52.180 --> 29:53.340
五层网络模型

29:53.340 --> 29:54.540
七层网络模型

29:55.180 --> 29:57.300
为什么原老师只讲了一个五层呢

29:58.020 --> 29:59.420
那四层的七层有啥意思

29:59.420 --> 30:00.700
它是这么一个关系

30:01.060 --> 30:01.740
给他说一下

30:02.460 --> 30:03.740
最早

30:04.300 --> 30:08.140
最早产生的协议就是TCP IP协议

30:09.420 --> 30:10.460
就这两层的协议

30:11.740 --> 30:12.500
一个是这

30:13.260 --> 30:14.020
一个是这

30:15.300 --> 30:16.860
那么基于这两个协议

30:17.100 --> 30:18.380
然后衍生出来了

30:18.380 --> 30:20.180
包括数据链路有怎么传递

30:20.180 --> 30:21.700
用什么物理信号

30:22.220 --> 30:23.260
包括应用程用什么东西

30:23.260 --> 30:25.300
就衍生出了一系列的协议

30:26.300 --> 30:29.380
那么这些协议分布到四个层次

30:29.900 --> 30:30.660
最早的时候

30:31.140 --> 30:32.660
就是应用程传输程网络程

30:33.180 --> 30:34.180
物理链路程

30:34.700 --> 30:38.300
这个物理链路程的相当于是五层里边的数据链路和物理程合并

30:39.060 --> 30:40.100
最早就是四层

30:42.140 --> 30:44.380
这个四层网络模型实际上是被

30:45.140 --> 30:46.980
全世界各大公司

30:47.260 --> 30:49.820
和各种机构都是非常认可的

30:50.060 --> 30:51.340
因为实施了很多年了

30:51.860 --> 30:53.660
大家都认可这套模型

30:54.420 --> 30:55.380
后来呢

30:56.220 --> 30:58.780
有一个世界标准组织OVSI

30:59.340 --> 31:00.780
他参了一脚

31:01.220 --> 31:02.460
说放着我来吧

31:02.460 --> 31:06.380
这件事我们标准组织不下场说不过去

31:06.780 --> 31:09.340
于是他又搞出了一个七层网络模型

31:10.780 --> 31:12.420
这七层网络模型相对于五层

31:12.420 --> 31:13.900
就多了一个表示程绘化程

31:14.700 --> 31:16.180
那么这七层网络模型呢

31:16.180 --> 31:20.620
实际上只存在于教科书和理论当中

31:21.060 --> 31:22.580
实际中并没有应用

31:23.340 --> 31:25.420
就相当于是教好不教做

31:25.420 --> 31:27.140
大家都觉得挺好的

31:27.140 --> 31:28.660
然后继续用这个四层模型

31:29.780 --> 31:31.420
然后七层出来之后

31:31.420 --> 31:32.900
说七层现在没有人用的

31:34.500 --> 31:36.020
七层出来之后呢

31:36.020 --> 31:37.700
受到这个七层网络模型

31:37.700 --> 31:39.700
它一些理论的启发

31:39.700 --> 31:40.660
所以说呢

31:40.660 --> 31:42.460
现在让我们一个构建出来

31:42.460 --> 31:44.660
这么一套五层网络模型

31:45.020 --> 31:46.980
相当于是把物理列入成的数据

31:46.980 --> 31:48.820
分成了数据列入成和物理成

31:49.620 --> 31:52.060
那么在实际中我们用的是几层了

31:52.060 --> 31:54.380
我们可以认为它用的是四层

31:54.380 --> 31:56.420
也可以认为它用的是五层

31:56.420 --> 31:57.660
都无所谓

31:58.020 --> 31:59.900
因为这个层次的划分

31:59.900 --> 32:02.060
是我们逻辑的划分

32:02.060 --> 32:03.060
啥意思啊

32:03.060 --> 32:05.980
就相当于是我这个可乐玉书

32:07.700 --> 32:10.380
反正这些事都是可以做的

32:10.380 --> 32:11.140
都是要做的

32:12.100 --> 32:13.740
无非就是说

32:13.740 --> 32:17.780
我认为这个寻子和玉书是一层还是两层

32:17.780 --> 32:19.220
是不是都可以对吧

32:19.220 --> 32:20.500
无所谓嘛

32:20.500 --> 32:21.420
我认为它是两层

32:21.420 --> 32:22.500
它也要做这些事

32:22.500 --> 32:23.300
我认为它是一层

32:23.300 --> 32:24.580
它也要做这些事

32:24.580 --> 32:25.940
算是无所谓的嘛

32:25.940 --> 32:28.060
因此我们现在都可以说

32:28.060 --> 32:29.100
认为它是五层也可以

32:29.100 --> 32:30.780
认为它是四层也可以

32:30.780 --> 32:31.700
这就是这么一个情况

32:33.220 --> 32:33.860
今天感冒

32:35.020 --> 32:36.180
最后到面试题

32:36.180 --> 32:38.620
就是问你网络的五层模型

32:38.620 --> 32:39.660
让你谈一谈

32:39.660 --> 32:40.740
那怎么谈呢

32:40.740 --> 32:42.380
首先要告诉他五层是啥

32:43.380 --> 32:44.460
从上到下来说

32:44.460 --> 32:45.820
从下到上来说都可以

32:46.820 --> 32:48.260
告诉他五层是啥

32:48.260 --> 32:51.980
然后要告诉他这个消息是怎么传递的

32:51.980 --> 32:55.460
他有一个家包就是封装的过程

32:55.460 --> 32:58.860
往头里边不断的添加头

32:58.860 --> 33:00.460
到数据连络产还添加一个尾巴

33:02.300 --> 33:04.020
然后接收消息的时候

33:04.020 --> 33:05.980
要从下到上解包

33:05.980 --> 33:07.540
就解封装

33:07.540 --> 33:09.420
你看这就是这个过程

33:09.420 --> 33:10.020
对吧

33:10.020 --> 33:11.260
把这个回答出来

33:12.180 --> 33:12.340
好

33:12.340 --> 33:14.140
然后这可以再详细的说一说

33:14.140 --> 33:16.700
每一层有什么样的解决什么问题

33:16.700 --> 33:18.340
用的是什么协议

33:18.340 --> 33:19.980
应用层解决的是

33:19.980 --> 33:23.700
应用场景中的消息格式

33:23.740 --> 33:26.260
原来说网页用什么消息格式

33:26.260 --> 33:28.260
邮件用什么消息格式

33:28.260 --> 33:32.420
传输成要主要解决的是可靠传输

33:34.500 --> 33:35.860
网络成的主要解决的是

33:35.860 --> 33:38.500
定位网络在互联网中定位目标

33:38.500 --> 33:39.700
以及寻找出一个路径

33:41.220 --> 33:43.580
数据连络成了主要的解决的问题

33:43.580 --> 33:45.580
是如何在指望

33:45.580 --> 33:47.580
说的更专业一点的叫做广播域

33:47.580 --> 33:48.780
那至于什么叫广播域

33:49.980 --> 33:51.700
就不谈了

33:52.700 --> 33:56.180
就是把数据如何在一个指望里边有效传播

33:57.180 --> 33:57.980
它里边

33:57.980 --> 34:00.020
Market地址就是在这一层

34:00.900 --> 34:02.380
那么物理层是要解决

34:03.340 --> 34:05.300
二进制数据如何转变成信号

34:06.100 --> 34:07.300
他们之间的互转问题

34:07.300 --> 34:09.100
信号怎么变成二进制数据

34:09.100 --> 34:10.500
二进制数据又怎么变成信号

34:11.260 --> 34:12.180
就解决这些人的问题

34:12.940 --> 34:13.900
那么这样子

34:13.900 --> 34:15.980
这道理就回答得非常完善了

34:16.860 --> 34:19.340
这就是咱们的五层网络模型

34:20.300 --> 34:21.500
这就是这些可能全部内容了

