WEBVTT

00:00.180 --> 00:02.300
好了 这节课呢 我们来聊一聊

00:02.300 --> 00:04.660
浏览器的一个重要的安全策略

00:04.660 --> 00:06.200
叫做同源策略

00:06.200 --> 00:10.780
我们平时说的跨域问题其实就是因为同源策略造成的

00:10.780 --> 00:15.300
所以说呢 因为这个同源策略是浏览器的策略

00:15.300 --> 00:20.180
所以说我们跨域问题呢 也只有在浏览器的环境里边才会产生

00:20.180 --> 00:25.420
如果说一些桌面应用程序 比方说你像桌面上安装的QQ

00:25.420 --> 00:28.340
那像这种东西呢 它就不会产生任何的跨域问题

00:28.340 --> 00:30.100
因为它不是浏览器 对吧

00:30.100 --> 00:33.820
比方说你们将来开发一些手机端的APP应用

00:33.820 --> 00:36.420
那么像这种东西呢 它也不会产生跨域

00:36.420 --> 00:38.420
跨域呢 是浏览器产生的

00:38.420 --> 00:41.700
所以说只有在浏览器的环境里边才会有跨域问题

00:41.700 --> 00:43.260
这个大家一定要记住

00:43.260 --> 00:44.500
那为什么会产生跨域呢

00:44.500 --> 00:46.500
是因为浏览器它有从同源策略

00:46.500 --> 00:49.060
那么我们这一课呢 就在学习浏览器同源策略

00:49.060 --> 00:51.060
到底是一个什么样的东西

00:51.060 --> 00:55.540
那么至于浏览器它为什么要去设置这个浏览策略呢

00:55.540 --> 00:57.860
我们将来有机会的话 我开节课来讲

00:57.860 --> 01:01.300
因为那一块可能会讲的比较多 比较深

01:01.300 --> 01:05.220
最后我们就来了解浏览器的同源策略到底是什么

01:05.220 --> 01:08.260
那么首先我们就要了解原到底是什么

01:08.260 --> 01:10.980
同源嘛 对吧 同一个原 那个原到底是啥

01:10.980 --> 01:13.460
其实非常简单 原的话就三个东西

01:13.460 --> 01:16.260
一个是协议 一个是主机 一个是端口

01:16.260 --> 01:18.420
我们平时写EOL地址里边

01:18.420 --> 01:20.100
最开始写的不就是协议吗

01:20.100 --> 01:22.580
然后是主机 对吧 然后是这种端口号

01:22.580 --> 01:24.500
没有写端口号的话就一个默认的

01:24.500 --> 01:26.340
比方说80 对不对

01:27.060 --> 01:29.300
如果这三个东西都相等

01:29.300 --> 01:31.700
那么我们就认为它是同源的

01:31.700 --> 01:34.260
如果说这三个东西有一个不同

01:34.260 --> 01:36.100
我们就认为它是不同原

01:36.100 --> 01:38.660
我们就称之为跨原或者是跨域

01:38.660 --> 01:41.300
我们说的跨域跟跨源是一个意思

01:41.300 --> 01:44.980
所以平时说的话我们比较倾向于说这个跨域

01:44.980 --> 01:47.300
好 咱们比箱比方说举一些例子

01:47.300 --> 01:50.660
这里有两个原 我们看他们到底是不是同源

01:50.660 --> 01:54.340
首先第一个原和第二个原他们是不是同源了

01:54.420 --> 01:57.700
他们只有路径不一样的路径我们完全不考虑

01:57.700 --> 02:02.260
我们只看协议相同 主机名相同

02:02.260 --> 02:05.380
端口号默认都是80 相同于是他们就同源

02:06.100 --> 02:08.180
那下面的看一下不同原的

02:08.180 --> 02:09.940
你看这个协议不一样

02:09.940 --> 02:11.220
对吧 不同原

02:11.220 --> 02:14.980
第三个端口号不一样不同原

02:14.980 --> 02:17.700
然后第四个主机名不一样

02:17.700 --> 02:20.740
也许说那个127.0.0.1和那个镂口号

02:20.740 --> 02:21.940
是不是同一个主机吗

02:21.940 --> 02:23.780
是同一个主机 但他们写出来不一样

02:23.780 --> 02:27.140
那也是不同原 也是跨原的

02:27.140 --> 02:30.980
那么这里呢 最后一个就是也是主机名不一样

02:30.980 --> 02:34.340
一个是3W-6.0 只要有一点不同的不行

02:34.340 --> 02:38.180
那么他也是不同原 这就是原的概念

02:38.180 --> 02:40.660
那么了解了原的概念之后

02:40.660 --> 02:43.860
我们再来看同源策略它到底是怎么回事

02:43.860 --> 02:47.460
那么下面有段话 这段话可能比较抽象 我慢慢解释

02:47.460 --> 02:49.220
同源策略是啥意思呢

02:49.380 --> 02:51.780
如果说一个页面的原

02:51.780 --> 02:56.180
和页面运行过程中夹载的原

02:56.180 --> 02:58.180
它们不一致 它们跨原了

02:58.180 --> 03:00.500
那么出于安全考虑的浏览器

03:00.500 --> 03:02.660
会对这些资源的做一些限制

03:02.660 --> 03:05.300
啥意思啊 我们首先来看

03:05.300 --> 03:06.980
什么叫页面的原

03:06.980 --> 03:08.500
页面的原非常简单

03:08.500 --> 03:09.940
就是你打开一个页面

03:09.940 --> 03:12.580
这个地址栏上它显示的原

03:12.580 --> 03:13.780
就是页面的原

03:13.780 --> 03:15.460
非常简单对吧

03:15.460 --> 03:18.660
那什么叫页面运行过程中夹载的原呢

03:18.820 --> 03:19.780
这啥意思呢

03:19.780 --> 03:21.700
你渲染一个页面

03:21.700 --> 03:22.980
页面中是不是有很多资源

03:22.980 --> 03:25.060
比方说音频 图片

03:25.060 --> 03:26.180
还有什么呢

03:26.180 --> 03:27.460
还有一些CSS

03:27.460 --> 03:28.820
外部的CSS链接

03:28.820 --> 03:31.060
对吧 还有GS的链接

03:31.060 --> 03:33.540
是这些都是外部资源夹载的原

03:33.540 --> 03:35.140
那么这些原

03:35.140 --> 03:36.900
如果说跟页面的原不一致

03:36.900 --> 03:38.020
就产生了跨原

03:38.020 --> 03:40.100
我们很多时候呢

03:40.100 --> 03:41.300
觉得跨余问题呢

03:41.300 --> 03:43.700
好像就只有阿基克斯会产生

03:43.700 --> 03:45.700
阿基克斯呢只是跨余问题的一种

03:45.700 --> 03:47.940
其他的地方呢也会产生跨余问题

03:48.420 --> 03:49.140
只不过呢

03:49.140 --> 03:50.580
我们再慢慢来解释吧

03:50.580 --> 03:52.260
一个是比方说像这里

03:52.260 --> 03:54.260
这个页面中有一些另可元素

03:54.260 --> 03:56.260
对吧 另可去链接的一些CSS

03:56.260 --> 03:57.700
你看这些CSS

03:57.700 --> 03:59.460
如果说是这样的一个地址

03:59.460 --> 04:00.500
那么它的原呢

04:00.500 --> 04:03.780
就跟我们的页面的原是不一致的

04:03.780 --> 04:05.860
这有什么 这有跨余问题

04:05.860 --> 04:06.900
那这里

04:06.900 --> 04:07.860
GS

04:07.860 --> 04:10.660
你看这里也是链接的一个外部的GS

04:10.660 --> 04:12.260
这个GS如果说它的原

04:12.260 --> 04:14.020
跟我们的页面的原不一致

04:14.020 --> 04:15.620
它也会产生跨余问题

04:15.700 --> 04:16.740
那比方说图片

04:16.740 --> 04:17.940
图片这里也是一样

04:17.940 --> 04:19.380
也有跨余问题

04:19.380 --> 04:21.380
那么比较常见的就是阿基克斯

04:21.380 --> 04:23.380
阿基克斯比方说你淘宝去请求了

04:23.380 --> 04:24.980
京东的一个接口

04:24.980 --> 04:26.100
那么这个时候呢

04:26.100 --> 04:27.780
就会产生一个跨余问题

04:28.980 --> 04:31.780
浏览器会对这些跨余的地方

04:31.780 --> 04:33.140
都做出一些限制

04:33.140 --> 04:34.580
只不过呢对每一种资源呢

04:34.580 --> 04:35.620
它限制的

04:36.740 --> 04:38.180
严格程度不一样

04:38.180 --> 04:40.820
比方说像对这些CSS的链接

04:40.820 --> 04:42.980
GS的链接 图片链接

04:42.980 --> 04:44.500
它就比较宽松一点

04:44.660 --> 04:46.740
你基本上都可以请求得到

04:46.740 --> 04:48.260
只不过呢它的限制呢

04:48.260 --> 04:50.180
我们现在不去单独去讲这种下

04:50.180 --> 04:52.500
它有一点点不一样的地方

04:52.500 --> 04:54.340
不过我们平时感觉不到

04:54.340 --> 04:55.620
觉得都可以访问

04:55.620 --> 04:58.260
我们终点研究的是这个阿基克斯

04:58.260 --> 05:00.820
就是你在页面的运行过程中

05:00.820 --> 05:02.820
你用阿基克斯去请求的地址

05:02.820 --> 05:04.980
跟页面的地址它不一样

05:04.980 --> 05:06.260
那么这个时候呢

05:06.260 --> 05:08.580
它限制的是非常非常凶狠的

05:08.580 --> 05:10.500
那它到底是怎么限制的呢

05:10.500 --> 05:11.700
我们来看下面的那图

05:12.260 --> 05:14.340
比方说淘宝的请求过程中

05:14.420 --> 05:16.100
去请求了京东

05:16.820 --> 05:18.020
去请求了京东

05:18.020 --> 05:19.140
那么这个时候呢

05:19.140 --> 05:20.180
有没有发出请求呢

05:20.180 --> 05:21.860
它只是让有发出请求

05:21.860 --> 05:23.300
服务器呢也有响应

05:23.300 --> 05:25.300
但是响应一旦到了浏览器

05:25.300 --> 05:26.820
浏览器马上就立即禁止了

05:27.140 --> 05:29.860
不准理GS再获取到这个响应

05:30.180 --> 05:32.100
那么这就是它的策略

05:32.100 --> 05:35.300
不允许阿基克斯访问跨于资源

05:35.620 --> 05:37.060
比方说我举个例子

05:37.060 --> 05:40.260
我现在呢去改动

05:41.620 --> 05:43.300
改动了现在目前的员势什么

05:43.380 --> 05:44.820
目前页面的员势什么

05:44.820 --> 05:45.860
就是百度

05:45.860 --> 05:48.180
页面的员势只看这个地址

05:48.180 --> 05:49.700
接下来呢我去请求

05:49.700 --> 05:52.260
用费息去请求那个京东

05:52.260 --> 05:57.540
然后请求淘宝吧

05:58.820 --> 06:00.100
试一下京东

06:00.100 --> 06:01.380
你看

06:01.620 --> 06:03.300
这里没有报错

06:03.300 --> 06:04.340
没有报说说明什么

06:04.340 --> 06:06.500
说明京东它是允许我们跨于的

06:06.500 --> 06:08.020
这个没想到

06:08.020 --> 06:09.060
这个确实没想到

06:09.060 --> 06:11.620
然后呢我们再去请求淘宝吧

06:12.900 --> 06:14.420
你看是不是发生了问题

06:14.420 --> 06:15.700
它给你报了一个错

06:15.860 --> 06:16.980
请求发出了

06:17.220 --> 06:18.260
然后呢请求回来了

06:18.260 --> 06:19.540
但是浏览器禁止

06:19.540 --> 06:21.060
你继续操作

06:21.060 --> 06:23.380
也有你获取不到这个请求结果

06:23.380 --> 06:24.660
于是发生了这样一个错误

06:24.660 --> 06:26.580
如果说将来你们看到这样的一个错误

06:26.580 --> 06:27.220
类似于这样说

06:27.220 --> 06:28.500
巴拉巴拉说了一大堆

06:28.500 --> 06:32.340
那么就是说的就是现在发生跨越了

06:32.340 --> 06:33.620
你的服务器那边跨越

06:33.620 --> 06:35.940
没有去解决这个跨越问题

06:35.940 --> 06:37.460
所以说导致的这个错误

06:37.460 --> 06:38.740
它不允许你

06:38.740 --> 06:40.020
继续访问了

06:40.020 --> 06:41.300
就这么个意思

06:41.300 --> 06:42.580
反正看到这个错误

06:42.580 --> 06:43.860
就说明了发生了跨越问题

06:43.860 --> 06:45.140
懂的意思吧

06:45.300 --> 06:47.700
由于那浏览器对阿迦克斯的限制

06:47.700 --> 06:48.980
是非常非常凶狠的

06:48.980 --> 06:50.260
非常非常暴力的

06:50.260 --> 06:52.580
它就不准不准的访问

06:52.580 --> 06:53.380
那么

06:53.380 --> 06:56.100
所谓说我们平时说的跨越问题

06:56.100 --> 06:57.700
通常都指的是

06:57.700 --> 07:00.260
阿迦克斯这一块发生的跨越

07:00.260 --> 07:02.260
实际上呢真实的跨越

07:02.260 --> 07:04.100
还可以存在于别的地方

07:04.100 --> 07:05.380
但是我们平时说的

07:05.380 --> 07:06.900
就说的是阿迦克斯

07:06.900 --> 07:08.340
那么这个跨越问题产生了

07:08.340 --> 07:09.140
但是有的时候呢

07:09.140 --> 07:10.740
我们确实需要

07:10.740 --> 07:12.260
跨越区访问资源

07:12.260 --> 07:13.700
那么这个时候怎么办呢

07:13.780 --> 07:15.860
就需要解决跨越问题

07:15.860 --> 07:17.460
通常解决的方式呢

07:17.460 --> 07:18.580
有这么三种

07:18.580 --> 07:19.780
一种是代理

07:19.780 --> 07:20.740
非常常见的

07:20.740 --> 07:22.580
我们使用无诱区开发一个程序

07:22.580 --> 07:23.060
对吧

07:23.060 --> 07:25.220
应用程序是不是都要去配置一下

07:25.220 --> 07:26.740
请求接口那一块的代理

07:26.740 --> 07:27.060
对不对

07:27.060 --> 07:28.820
我们之前做的个人不可项目

07:28.820 --> 07:30.180
是不是也这样做的

07:30.180 --> 07:30.580
然后呢

07:30.580 --> 07:32.420
CRS也是比较常用的

07:32.420 --> 07:33.700
这个大家可能没学习过

07:33.700 --> 07:35.460
我们之后来进行讲解

07:35.460 --> 07:36.340
然后呢

07:36.340 --> 07:37.380
接生坯

07:37.380 --> 07:39.220
这个呢是过去比较常用的

07:39.220 --> 07:40.740
现在基本上

07:40.740 --> 07:41.700
很少使用的

07:41.700 --> 07:42.740
它有很多的限制

07:42.740 --> 07:43.380
不过呢

07:43.380 --> 07:44.980
作为过去的一种常用方式

07:44.980 --> 07:46.820
可能面试体里边也会出现

07:46.820 --> 07:47.540
它会问你

07:47.540 --> 07:49.620
跨越问题有哪些常见的解决办法

07:49.620 --> 07:50.580
那么你都要把

07:50.580 --> 07:52.020
至少要回答出这三个

07:52.020 --> 07:53.620
把这三个回答出来就OK了

07:53.620 --> 07:55.300
其实还有一些别的解决办法

07:55.300 --> 07:57.620
那些解决办法由于太过于古老

07:57.620 --> 08:00.420
而且限制和问题特别多

08:00.420 --> 08:02.580
所以说我们就不过多去设计吧

08:03.620 --> 08:05.700
其实无论你使用哪一种方式

08:05.700 --> 08:07.300
都是要让浏览器知道

08:08.100 --> 08:09.460
虽然说我跨越了

08:09.460 --> 08:10.420
跨越了没事

08:10.420 --> 08:11.380
但是呢

08:11.460 --> 08:12.980
我们都是自家人

08:12.980 --> 08:14.420
服务器那边也允许我跨越

08:14.420 --> 08:16.260
就像刚才是京东那样子

08:16.260 --> 08:17.220
我请求京东

08:17.220 --> 08:18.180
他没有发生跨越问题

08:18.180 --> 08:19.940
说明服务器允许我们跨越

08:19.940 --> 08:21.140
那么都是自己人的

08:21.140 --> 08:22.580
所以说就不要拦截了

08:22.580 --> 08:23.780
是这么个意思

08:23.780 --> 08:24.660
这三种方式

08:24.660 --> 08:25.860
我们后边

08:25.860 --> 08:27.780
单独的去开课来进行讲解

08:27.780 --> 08:29.380
我们这就可能就学习

08:29.380 --> 08:30.180
同源策略

08:30.180 --> 08:32.020
有的时候面试体会直接问你

08:32.020 --> 08:34.980
说你来聊一聊同源策略吧

08:34.980 --> 08:35.940
那你怎么去聊呢

08:35.940 --> 08:36.900
首先你要聊

08:36.900 --> 08:38.820
原道理是什么东西

08:38.820 --> 08:40.180
就是三个夹起来

08:40.340 --> 08:41.460
什么叫同源

08:41.460 --> 08:42.100
什么叫跨越

08:42.100 --> 08:43.540
跨越跨越

08:43.540 --> 08:44.980
然后你再聊

08:44.980 --> 08:47.860
同源策略是什么样的一种策略

08:47.860 --> 08:49.300
就是页面的源

08:49.300 --> 08:51.060
和页面运行过程中夹起来的源

08:51.060 --> 08:51.940
它不一致

08:51.940 --> 08:53.620
那就发生了跨越

08:53.620 --> 08:54.340
那么这个时候

08:54.340 --> 08:56.100
浏览器会做出一些限制

08:57.540 --> 08:59.380
只不过它限制的最严重的

08:59.380 --> 09:00.580
是阿迪克斯

09:00.580 --> 09:01.780
所以说你聊一聊

09:01.780 --> 09:03.060
阿迪克斯是怎么限制的

09:03.060 --> 09:04.740
它不允许你发生跨越质源

09:05.860 --> 09:06.820
然后再聊一聊

09:06.820 --> 09:07.860
解决办法有哪些

09:08.580 --> 09:09.140
三种

09:09.140 --> 09:09.620
代理

09:09.620 --> 09:10.420
CLS

09:10.420 --> 09:11.140
和GMP

09:11.140 --> 09:12.180
那么这三种呢

09:12.180 --> 09:13.780
我们后边有单独的课

09:13.780 --> 09:15.860
来详细的讲解

09:15.860 --> 09:16.580
然后你再把

09:17.140 --> 09:18.580
你可以继续说

09:18.580 --> 09:19.060
如果说

09:19.060 --> 09:19.460
你觉得

09:20.020 --> 09:20.820
它允许你

09:20.820 --> 09:21.700
让继续说一下

09:21.700 --> 09:23.060
那个每一个方式

09:23.060 --> 09:24.820
有什么样的一个特点

09:24.820 --> 09:25.620
那么你就可以

09:25.620 --> 09:26.980
用我们后边课的知识

09:26.980 --> 09:28.020
给它详细的阐述

09:28.580 --> 09:28.980
OK

09:28.980 --> 09:30.260
这就是同源策略

