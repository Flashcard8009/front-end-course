WEBVTT

00:00.110 --> 00:08.110
这节课的话我们来看一下index的DB通过定时期轮寻的方式

00:08.110 --> 00:11.110
来实现跨标签业的通信

00:11.110 --> 00:16.110
indexDB的话我们在前面讲离线存储的时候是不是已经讲过了

00:16.110 --> 00:23.110
所以我们这边就看一下通过indexDB如何来实现跨标签业通信

00:23.110 --> 00:24.110
其实也很简单

00:24.110 --> 00:29.110
就是另外一个页面是不停的去读取indexDB的内容

00:30.110 --> 00:34.110
对不对 一个页面的话用来改 改这个indexDB的内容

00:34.110 --> 00:40.110
另外一个页面的话不停的通过setter interval这种定时期不停的去读

00:40.110 --> 00:44.110
好 那我这边的话 我们来看一下我们的项目目落

00:44.110 --> 00:46.110
项目目落的话有这么三个

00:46.110 --> 00:51.110
一个是index.html 一个是index2.html

00:51.110 --> 00:54.110
一会的话要实现这两个标签业的通信

00:54.110 --> 00:56.110
好 然后这个DB.js

00:56.110 --> 01:01.110
这里面的话我们就把我们之前的一些方法我就直接拿过来了

01:01.110 --> 01:04.110
这边有一个这个openDB

01:04.110 --> 01:07.110
有一个这个 这个是打开数据库的

01:07.110 --> 01:10.110
然后有一个这个新增 and data

01:10.110 --> 01:12.110
这个是添加数据的

01:12.110 --> 01:17.110
然后这个这个是get data by key 通过这个组件

01:17.110 --> 01:19.110
来获取数据的

01:19.110 --> 01:22.110
好 那我们这边的话我们一个一个来

01:22.110 --> 01:26.110
我们首先干嘛呢 我们首先先来写index2

01:26.110 --> 01:31.110
我们在index2里面我们把这个学生的这个数据

01:31.110 --> 01:32.110
我们把它渲染出来

01:32.110 --> 01:35.110
好 我这边我这边的话写一个he

01:35.110 --> 01:38.110
这边的话一个学生表

01:38.110 --> 01:41.110
好 然后接下来我这边给一个table

01:41.110 --> 01:44.110
table的话给一个id id的话tab

01:44.110 --> 01:46.110
一会的话设置一下样式

01:46.110 --> 01:47.110
这会就设置嘛

01:47.110 --> 01:51.110
这边的话style

01:51.110 --> 01:53.110
然后接下来的话这边table

01:53.110 --> 01:55.110
table的话给了一个border

01:55.110 --> 01:58.110
但我这个样式不会设置的太好看

01:58.110 --> 02:00.110
我这边的话只是为了做效果

02:00.110 --> 02:03.110
最简单的看上去像一个表格

02:03.110 --> 02:04.110
就可以了

02:04.110 --> 02:06.110
这边的话这个border

02:06.110 --> 02:09.110
border 然后这个

02:09.110 --> 02:12.110
然后设置一下

02:12.110 --> 02:16.110
然后接下来的话设置一下table下面的这个td

02:16.110 --> 02:19.110
table下面td 然后给一个这个border

02:19.110 --> 02:22.110
epx solid

02:22.110 --> 02:23.110
ok

02:23.110 --> 02:25.110
好 然后接下来的话在这个table里面

02:25.110 --> 02:28.110
table里面的话我们这边的话就可以设置

02:28.110 --> 02:31.110
tr 然后接下来这边

02:31.110 --> 02:33.110
就用td嘛

02:33.110 --> 02:34.110
td

02:34.110 --> 02:35.110
好 我们有什么呀

02:35.110 --> 02:37.110
我们是不是有学号

02:37.110 --> 02:39.110
对吧 我们过来看一眼

02:39.110 --> 02:41.110
过来看一眼 在这里

02:41.110 --> 02:43.110
plugation

02:43.110 --> 02:47.110
然后马上我把这个放大

02:47.110 --> 02:50.110
这个的话在index db

02:50.110 --> 02:51.110
这个

02:51.110 --> 02:53.110
这个表

02:53.110 --> 02:55.110
我们是不是有这个学号

02:55.110 --> 02:57.110
有这个姓名

02:57.110 --> 02:59.110
然后有这个连零

02:59.110 --> 03:00.110
对吧 有这三个

03:00.110 --> 03:02.110
所以说我们这边回到这边

03:02.110 --> 03:03.110
这边有学号

03:03.110 --> 03:06.110
有姓名

03:06.110 --> 03:08.110
有姓名

03:08.110 --> 03:10.110
然后有

03:10.110 --> 03:12.110
然后有连零

03:12.110 --> 03:13.110
ok

03:13.110 --> 03:15.110
好 然后我们先写一个

03:15.110 --> 03:16.110
写一个死的数据

03:16.110 --> 03:18.110
学号的话是1号

03:18.110 --> 03:19.110
那接下来这边 比如说

03:19.110 --> 03:20.110
谢杰

03:20.110 --> 03:22.110
然后连零18岁

03:22.110 --> 03:24.110
再写一个

03:24.110 --> 03:26.110
比如说2号

03:26.110 --> 03:28.110
2号的话 这个的话

03:28.110 --> 03:30.110
比如说是张三

03:30.110 --> 03:31.110
张三19岁

03:31.110 --> 03:33.110
好 保存一下

03:33.110 --> 03:34.110
保存一下之后

03:34.110 --> 03:35.110
然后接下来

03:35.110 --> 03:36.110
我们这边来看一下这边

03:36.110 --> 03:38.110
这边是不是就出来了

03:38.110 --> 03:39.110
对吧

03:39.110 --> 03:41.110
这个简简单单的表格就出来了

03:41.110 --> 03:42.110
好 出来之后

03:42.110 --> 03:44.110
然后接下来的话 下一步

03:44.110 --> 03:46.110
这个的话肯定是要注释掉的

03:46.110 --> 03:49.110
一会的话通过这个

03:49.110 --> 03:50.110
好 然后这个

03:50.110 --> 03:51.110
Table有了

03:51.110 --> 03:52.110
Table有了之后

03:52.110 --> 03:53.110
然后接下来的话

03:53.110 --> 03:55.110
我们这边引入什么呢

03:55.110 --> 03:57.110
引入

03:57.110 --> 03:59.110
db.js

03:59.110 --> 04:01.110
那是不是就有这三个方法

04:01.110 --> 04:02.110
对不对

04:02.110 --> 04:04.110
这边打开数据库的方法

04:04.110 --> 04:07.110
然后新增数据的方法

04:07.110 --> 04:09.110
然后读取数据的方法

04:09.110 --> 04:11.110
有这么三个

04:11.110 --> 04:12.110
好 然后接下来的话

04:12.110 --> 04:13.110
在这边

04:13.110 --> 04:15.110
script

04:15.110 --> 04:16.110
这里

04:16.110 --> 04:17.110
这里的话

04:17.110 --> 04:19.110
我首先的话

04:19.110 --> 04:21.110
我封装一个方法

04:21.110 --> 04:22.110
这边的话

04:22.110 --> 04:23.110
function

04:23.110 --> 04:24.110
function一个叫做

04:24.110 --> 04:26.110
render table

04:26.110 --> 04:28.110
渲染这个表格

04:28.110 --> 04:31.110
这个的话是一个异步方法

04:31.110 --> 04:32.110
这边

04:32.110 --> 04:34.110
sync

04:34.110 --> 04:35.110
是个异步方法

04:35.110 --> 04:36.110
好 然后接下来

04:36.110 --> 04:37.110
这边回头的话

04:37.110 --> 04:39.110
一会调用一下这个方法

04:39.110 --> 04:40.110
render table

04:40.110 --> 04:41.110
好 在这里面

04:41.110 --> 04:42.110
这里面我干嘛呢

04:42.110 --> 04:43.110
这里面的话

04:43.110 --> 04:44.110
我就一步一步来做

04:44.110 --> 04:45.110
首先的话这边

04:45.110 --> 04:48.110
db等于一个await

04:48.110 --> 04:51.110
然后open

04:51.110 --> 04:53.110
open db

04:53.110 --> 04:54.110
对吧

04:54.110 --> 04:55.110
然后我们的数据库

04:55.110 --> 04:58.110
数据库的话叫做studb

04:58.110 --> 05:00.110
然后传一个这个

05:00.110 --> 05:02.110
版本号1

05:02.110 --> 05:04.110
是不是得到一个数据库对象

05:04.110 --> 05:05.110
好 数据库对象

05:05.110 --> 05:06.110
然后接下来的话

05:06.110 --> 05:08.110
这边

05:08.110 --> 05:10.110
await

05:11.110 --> 05:12.110
await

05:12.110 --> 05:13.110
调什么呢

05:13.110 --> 05:15.110
调一个get

05:15.110 --> 05:17.110
get这个data

05:17.110 --> 05:20.110
然后by key

05:20.110 --> 05:21.110
获取所有的数据

05:21.110 --> 05:23.110
然后把我们的db对象

05:23.110 --> 05:24.110
把它传进去

05:24.110 --> 05:26.110
接下来把我们的表名

05:26.110 --> 05:28.110
表名的话是

05:28.110 --> 05:30.110
表名stu

05:30.110 --> 05:31.110
是吧

05:31.110 --> 05:32.110
好 然后下这边

05:32.110 --> 05:33.110
stu

05:33.110 --> 05:34.110
好 得到什么呢

05:34.110 --> 05:35.110
得到我们的数据

05:35.110 --> 05:38.110
stuinferred

05:38.110 --> 05:39.110
得到这个数据

05:39.110 --> 05:40.110
好 得到这个数据之后

05:40.110 --> 05:42.110
然后接下来我们把它渲染一下

05:42.110 --> 05:44.110
我们这边再封装一个函数

05:44.110 --> 05:45.110
然后把它扔到这个

05:45.110 --> 05:47.110
封装的这个函数里面

05:47.110 --> 05:50.110
好 然后接下来在这边

05:50.110 --> 05:51.110
这边的话我们就把这个函数

05:51.110 --> 05:52.110
我们来写一下

05:52.110 --> 05:56.110
好 这边的function render

05:56.110 --> 05:57.110
对吧

05:57.110 --> 05:58.110
然后接收一个什么呢

05:58.110 --> 06:00.110
接收一个数捉

06:00.110 --> 06:01.110
你拿到的数据

06:01.110 --> 06:02.110
这种是不是应该是数捉

06:02.110 --> 06:04.110
数捉里面是不是一个一个的对象

06:04.110 --> 06:05.110
对不对

06:05.110 --> 06:06.110
好 然后接下来我这边

06:06.110 --> 06:08.110
let一个tab

06:08.110 --> 06:13.110
等于一个document.query selector

06:13.110 --> 06:14.110
拿到什么呢

06:14.110 --> 06:16.110
拿到那个表格

06:16.110 --> 06:17.110
对不对

06:17.110 --> 06:18.110
这个表格有一个id

06:18.110 --> 06:20.110
tab 拿到它

06:20.110 --> 06:21.110
拿到它之后

06:21.110 --> 06:22.110
然后接下来的话

06:22.110 --> 06:24.110
这边tab

06:24.110 --> 06:27.110
点这个inner html

06:27.110 --> 06:30.110
它就应该是等于

06:30.110 --> 06:31.110
等于什么呢

06:31.110 --> 06:33.110
先把这一块

06:33.110 --> 06:37.810
这一块先把它拿过来

06:37.810 --> 06:40.810
这个是我们的表头

06:40.810 --> 06:41.810
是吧

06:41.810 --> 06:42.810
好 完事了之后

06:42.810 --> 06:43.810
然后干嘛呢

06:43.810 --> 06:45.810
然后这边

06:45.810 --> 06:47.810
let一个st2

06:47.810 --> 06:49.810
等于一个你传入了ar

06:49.810 --> 06:51.810
我通过这个map

06:51.810 --> 06:52.810
去便利

06:52.810 --> 06:55.810
接下来拿到每一项

06:55.810 --> 06:56.810
对不对

06:56.810 --> 06:57.810
拿到每一项之后

06:57.810 --> 07:00.810
然后我返回

07:00.810 --> 07:01.810
返回什么呢

07:01.810 --> 07:05.810
返回是不是应该是这个

07:05.810 --> 07:06.810
对不对

07:06.810 --> 07:08.810
这一块

07:08.810 --> 07:10.810
然后这里面

07:10.810 --> 07:13.810
这里面的话就应该是

07:13.810 --> 07:14.810
一个一个来

07:14.810 --> 07:18.810
这边的话就是item.stuid

07:18.810 --> 07:19.810
对不对

07:19.810 --> 07:23.810
然后stuname

07:23.810 --> 07:25.810
stuname

07:25.810 --> 07:26.810
然后还有什么

07:26.810 --> 07:31.810
还有stuname

07:31.810 --> 07:32.810
对不对

07:32.810 --> 07:33.810
好 然后完事

07:33.810 --> 07:34.810
完事之后

07:34.810 --> 07:36.810
我们这边的话

07:36.810 --> 07:38.810
然后把这个st2

07:38.810 --> 07:40.810
这边的话join一下

07:40.810 --> 07:43.810
因为它这个map返回的是一个数组

07:43.810 --> 07:44.810
我们这边join一下

07:44.810 --> 07:45.810
join完了之后

07:45.810 --> 07:50.810
然后接下来这边table.inrhtm

07:50.810 --> 07:53.810
加等于的这个st2

07:53.810 --> 07:54.810
对不对

07:54.810 --> 07:55.810
OK

07:55.810 --> 07:57.810
这里的话就是写完了

07:57.810 --> 07:58.810
写完了之后

07:58.810 --> 07:59.810
我们保存一下

07:59.810 --> 08:00.810
我们来看一下

08:00.810 --> 08:01.810
好 这边

08:01.810 --> 08:02.810
你看这边那是不是

08:02.810 --> 08:03.810
我本地仓库

08:03.810 --> 08:05.810
拉的出去

08:05.810 --> 08:06.810
看到没有

08:06.810 --> 08:07.810
是不是就都出来了

08:07.810 --> 08:08.810
OK

08:08.810 --> 08:09.810
都出来了

08:09.810 --> 08:10.810
都出来了之后

08:10.810 --> 08:12.810
然后接下来的话回到哪里了

08:12.810 --> 08:16.810
回到我们的这个index.htm

08:16.810 --> 08:18.810
回到这边

08:18.810 --> 08:19.810
好 这边的话

08:19.810 --> 08:21.810
我们就是来新增学生

08:21.810 --> 08:24.810
这边的话新增

08:24.810 --> 08:27.810
新增学生

08:27.810 --> 08:29.810
好 这边写个div

08:29.810 --> 08:31.810
这里的话有一个span

08:31.810 --> 08:34.810
学生学号

08:34.810 --> 08:36.810
但这个学号的话

08:36.810 --> 08:38.810
理论上来讲的话

08:38.810 --> 08:40.810
应该是做它自征

08:40.810 --> 08:41.810
对不对

08:41.810 --> 08:42.810
这里不应该是输入

08:42.810 --> 08:44.810
但我们这边只是为了

08:44.810 --> 08:47.810
演示这个跨标签也通信

08:47.810 --> 08:49.810
这个问题不大

08:49.810 --> 08:50.810
好 接下来这边的话

08:50.810 --> 08:52.810
stuid

08:52.810 --> 08:54.810
好 然后再复制两份

08:54.810 --> 08:58.700
好 然后一个是什么呢

08:58.700 --> 09:00.700
一个是学生姓名

09:00.700 --> 09:03.260
对吧

09:03.260 --> 09:04.260
学生姓名

09:04.260 --> 09:07.260
这边是stuname

09:07.260 --> 09:10.960
然后stuname

09:10.960 --> 09:13.960
这个是学生年龄

09:13.960 --> 09:17.910
年龄

09:17.910 --> 09:20.910
这个是sturh

09:20.910 --> 09:25.290
好 接下来下面

09:25.290 --> 09:27.290
下面的话给一个按钮

09:27.290 --> 09:29.290
button

09:29.290 --> 09:34.290
这个的话就是新增学生

09:34.290 --> 09:35.290
给个id

09:35.290 --> 09:38.290
id的话这边andbtn

09:39.290 --> 09:41.290
好 这边投风

09:41.290 --> 09:42.290
ok

09:42.290 --> 09:43.290
好 然后加这边

09:43.290 --> 09:45.290
这边的话也把这个数据库

09:45.290 --> 09:46.290
把它引进来

09:46.290 --> 09:48.290
这边的话就是

09:48.290 --> 09:49.290
当前目录是吧

09:49.290 --> 09:51.290
db.js

09:51.290 --> 09:53.290
好 然后接下来在这里

09:53.290 --> 09:55.290
这里的话我就干嘛呢

09:55.290 --> 09:57.290
首先你dbo仍然是要打开

09:57.290 --> 09:59.290
open db

09:59.290 --> 10:00.290
打开

10:00.290 --> 10:03.290
好 这边就是studb

10:03.290 --> 10:04.290
对吧

10:04.290 --> 10:06.290
好 然后加这边版本号

10:06.290 --> 10:09.290
完了之后它返回一个promise

10:09.290 --> 10:13.370
让我们这边认

10:13.370 --> 10:16.370
然后拿到一个db

10:16.370 --> 10:18.370
好 接下来这边干嘛呢

10:18.370 --> 10:19.370
这边的话

10:19.370 --> 10:21.370
我们首先这边获取一下

10:21.370 --> 10:28.580
let一个btn等于一个document

10:28.580 --> 10:32.140
document

10:32.140 --> 10:39.380
这边的话是document

10:39.380 --> 10:44.380
document.query selector

10:44.380 --> 10:47.380
这边的话警号andbtn

10:47.380 --> 10:48.380
ok

10:48.380 --> 10:49.380
好 然后接下来在这边

10:49.380 --> 10:51.380
这边的话给btn

10:51.380 --> 10:55.940
绑一个点击事件

10:55.940 --> 10:56.940
那这个点击事件里面

10:56.940 --> 10:57.940
我们就做什么事情呢

10:57.940 --> 10:58.940
这点击事件里面

10:58.940 --> 11:02.940
我们是不是就是掉anddata

11:02.940 --> 11:03.940
这个方法

11:03.940 --> 11:04.940
对不对

11:04.940 --> 11:06.940
然后加第一个参数是你的db

11:06.940 --> 11:09.940
第二个参数是你的表明

11:09.940 --> 11:10.940
第三个参数

11:10.940 --> 11:11.940
第三个参数是不是

11:11.940 --> 11:13.940
就是应该是个对象

11:13.940 --> 11:14.940
对不对

11:14.940 --> 11:17.940
这边就是stuid

11:17.940 --> 11:21.940
对应的值就是stuid

11:21.940 --> 11:22.940
就这里

11:22.940 --> 11:23.940
这里的话理论上来讲

11:23.940 --> 11:25.940
你是不是应该是一个一个去获取一下

11:25.940 --> 11:27.940
好 我这边获取一下吧

11:27.940 --> 11:28.940
好 这边的话

11:28.940 --> 11:35.940
stuid等于一个document.query selector

11:35.940 --> 11:37.940
好 这边的话

11:37.940 --> 11:40.940
警号stuid

11:40.940 --> 11:41.940
复制两份

11:41.940 --> 11:48.050
这个的话是lamb

11:48.050 --> 11:49.050
这里lamb

11:49.050 --> 11:53.050
这个的话是h

11:53.050 --> 11:55.050
然后这里h

11:55.050 --> 11:56.050
对吧

11:56.050 --> 11:57.050
好 那接下来这边就是

11:57.050 --> 11:59.050
应该是stuid.value

11:59.050 --> 12:00.050
复制两份

12:00.050 --> 12:03.050
好 这边就是应该是lamb

12:03.050 --> 12:06.050
这里的话就是应该是lamb

12:06.050 --> 12:07.050
好 接下来这里

12:07.050 --> 12:10.050
这里的话就应该是h

12:10.050 --> 12:12.050
然后h

12:12.050 --> 12:14.050
对吧 掉这个方法

12:14.050 --> 12:15.050
然后接下来干嘛呢

12:15.050 --> 12:18.050
接下来把这三项把它清空

12:18.050 --> 12:26.050
这边点value等于一个stuname.value

12:26.050 --> 12:30.050
等于一个stueg.value

12:30.050 --> 12:32.050
把它清空等于一个空

12:32.050 --> 12:34.050
好 保存一下

12:34.050 --> 12:35.050
保存了之后

12:35.050 --> 12:37.050
然后就要这边来看一下

12:37.050 --> 12:38.050
是不是就有了

12:38.050 --> 12:39.050
对不对

12:39.050 --> 12:40.050
有了之后

12:40.050 --> 12:41.050
然后接下来我们这边

12:41.050 --> 12:43.050
我们来新增一个学生

12:43.050 --> 12:44.050
那学生的话

12:44.050 --> 12:46.050
现在学号应该是18号了

12:46.050 --> 12:48.050
对吧 新增一个比较卸节

12:48.050 --> 12:49.050
年龄

12:49.050 --> 12:51.050
18

12:51.050 --> 12:52.050
新增

12:52.050 --> 12:53.050
好 当我点击新增的时候

12:53.050 --> 12:54.050
你可以看到这儿没变

12:54.050 --> 12:55.050
对不对

12:55.050 --> 12:56.050
但是这儿变了

12:56.050 --> 12:57.050
你注意这儿变了

12:57.050 --> 12:58.050
让我这边的话

12:58.050 --> 13:00.050
我刷新一下

13:00.050 --> 13:01.050
刷新一下

13:01.050 --> 13:02.050
你看

13:02.050 --> 13:04.050
这边的话是不是就进去了

13:04.050 --> 13:05.050
看到没有

13:05.050 --> 13:06.050
这边

13:06.050 --> 13:08.050
这边这个数据就过来了

13:08.050 --> 13:10.050
这边它前面好像是数字

13:10.050 --> 13:12.050
前面的id是数字

13:12.050 --> 13:14.050
这个是字符串

13:14.050 --> 13:15.050
好

13:15.050 --> 13:16.050
这边就过来了

13:16.050 --> 13:18.050
那我如何做到什么呢

13:18.050 --> 13:19.050
如何做到就是

13:19.050 --> 13:21.050
我这边点击新增学生之后

13:21.050 --> 13:23.050
然后接下来这边

13:23.050 --> 13:25.050
发生一个变化呢

13:25.050 --> 13:27.050
实时的发生一个变化呢

13:27.050 --> 13:28.050
很简单

13:28.050 --> 13:29.050
那我这边干嘛呢

13:29.050 --> 13:32.050
我添加一个轮型

13:32.050 --> 13:34.050
来到我们index2

13:34.050 --> 13:35.050
来到这边

13:35.050 --> 13:36.050
这边的话

13:36.050 --> 13:37.050
你这里的话

13:37.050 --> 13:39.050
是不是第一次

13:39.050 --> 13:40.050
渲染

13:40.050 --> 13:41.050
对不对

13:41.050 --> 13:42.050
然后接下来的话

13:42.050 --> 13:43.050
我这边

13:43.050 --> 13:47.050
我就写一个定时器

13:47.050 --> 13:48.050
定时器

13:48.050 --> 13:49.050
然后接下来

13:49.050 --> 13:51.050
这边是一个一步的函数

13:51.050 --> 13:52.050
function

13:52.050 --> 13:55.050
每个一秒执行

13:55.050 --> 13:56.050
好

13:56.050 --> 13:57.050
在这个一步的函数里面

13:57.050 --> 13:58.050
我们做什么呢

13:58.050 --> 13:59.050
我们这边的话

13:59.050 --> 14:03.050
重新获取所有的数据

14:03.050 --> 14:04.050
看到没有

14:04.050 --> 14:05.050
重新获取所有的数据

14:05.050 --> 14:06.050
只不过这边

14:06.050 --> 14:07.050
我给什么呢

14:07.050 --> 14:10.050
给成这个Stu2

14:10.050 --> 14:11.050
啊这边

14:11.050 --> 14:13.050
这个StuInfer2

14:13.050 --> 14:15.050
复制给这个变量

14:15.050 --> 14:16.050
好

14:16.050 --> 14:17.050
然后接下来的话

14:17.050 --> 14:19.050
这边两个进行一个比较

14:19.050 --> 14:22.050
就是StuInfer2

14:22.050 --> 14:26.260
它的论识

14:26.260 --> 14:31.260
如果不等于StuInfer

14:31.260 --> 14:34.020
点论识

14:34.020 --> 14:36.020
那说明什么

14:36.020 --> 14:37.020
说明你的数据

14:37.020 --> 14:39.020
是不是有更新

14:39.020 --> 14:40.020
对不对

14:40.020 --> 14:41.020
就是实时的每个一秒

14:41.020 --> 14:42.020
我就会去重新取一下

14:42.020 --> 14:43.020
所有的数据

14:43.020 --> 14:44.020
你的数据

14:44.020 --> 14:45.020
如果没有更新的话

14:45.020 --> 14:46.020
取出来长度

14:46.020 --> 14:47.020
是不是应该是一样的

14:47.020 --> 14:48.020
对不对

14:48.020 --> 14:49.020
那现在如果长度不一样

14:49.020 --> 14:50.020
说明更新了

14:50.020 --> 14:51.020
好

14:51.020 --> 14:52.020
更新了之后

14:52.020 --> 14:54.020
那我这边就直接StuInfer

14:54.020 --> 14:58.020
等于一个最新的StuInfer2

14:58.020 --> 14:59.020
然后接下来这边

14:59.020 --> 15:02.020
重新调Render方法

15:02.020 --> 15:05.020
StuInfer

15:05.020 --> 15:06.020
看到没有

15:06.020 --> 15:07.020
或者这边其实

15:07.020 --> 15:08.020
不用复制也可以

15:08.020 --> 15:09.020
对不对

15:09.020 --> 15:10.020
直接就是调Render方法

15:10.020 --> 15:12.020
把这个StuInfer2

15:12.020 --> 15:13.020
传信来

15:13.020 --> 15:14.020
这边也可以

15:14.020 --> 15:15.020
对不对

15:15.020 --> 15:16.020
就不需要复制

15:16.020 --> 15:17.020
这样不需要复制的话

15:17.020 --> 15:18.020
那你这个StuInfer

15:18.020 --> 15:20.020
使用就是第一次的值

15:20.020 --> 15:21.020
对吧

15:21.020 --> 15:22.020
没有得到及时的更新

15:22.020 --> 15:23.020
但这个无所谓

15:23.020 --> 15:24.020
好

15:24.020 --> 15:25.020
然后我们这边保存一下

15:25.020 --> 15:27.020
我来看一下好不好使

15:27.020 --> 15:28.020
好

15:28.020 --> 15:30.020
把这个关了吧

15:30.020 --> 15:31.020
好

15:31.020 --> 15:32.020
我们这边学号

15:32.020 --> 15:33.020
添加一个19号

15:33.020 --> 15:35.020
添加一个谁的

15:35.020 --> 15:38.020
添加一个比如说

15:38.020 --> 15:40.020
老代

15:40.020 --> 15:43.520
比如老成

15:43.520 --> 15:44.520
老成

15:44.520 --> 15:47.520
老成今年的话38岁

15:47.520 --> 15:48.520
OK

15:48.520 --> 15:50.520
点击新增学生

15:50.520 --> 15:51.520
看到没有

15:51.520 --> 15:53.520
这边是不是就OK了

15:53.520 --> 15:54.520
对不对

15:54.520 --> 15:55.520
这边再添加一个

15:55.520 --> 15:56.520
有20

15:56.520 --> 15:58.520
比如说老牛

15:58.520 --> 16:00.520
老牛的话今年

16:00.520 --> 16:01.520
40岁

16:01.520 --> 16:03.520
新增

16:03.520 --> 16:04.520
是不是就OK了

16:04.520 --> 16:05.520
对不对

16:05.520 --> 16:06.520
就OK了

16:06.520 --> 16:07.520
所以说你看我们

16:07.520 --> 16:08.520
这边的话就通过什么

16:08.520 --> 16:10.520
通过这个index DB

16:10.520 --> 16:12.520
就这里

16:12.520 --> 16:13.520
通过index DB

16:13.520 --> 16:15.520
然后通过定时期

16:15.520 --> 16:16.520
轮寻的方式

16:16.520 --> 16:18.520
也可以实现

16:18.520 --> 16:20.520
跨标签页的通信

16:20.520 --> 16:22.520
也可以实现这个通信

16:22.520 --> 16:24.520
大家下来的话可以把这个例子

16:24.520 --> 16:25.520
自己写一写

16:25.520 --> 16:26.520
好吧

16:26.520 --> 16:27.520
index DB的话

16:27.520 --> 16:28.520
我们在那个离线存储

16:28.520 --> 16:29.520
才学了的

16:29.520 --> 16:31.520
对不对

16:31.520 --> 16:33.520
这就靠就先到这里

