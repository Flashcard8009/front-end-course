WEBVTT

00:00.180 --> 00:03.260
好 接下来的话 我们来看一下这个Cookie

00:03.500 --> 00:05.820
Cookie的话也可以做这个

00:06.580 --> 00:08.620
这个跨标签页的通信

00:08.880 --> 00:10.940
你会发现只要凡是就是

00:11.180 --> 00:13.740
你可以做这个浏览器离线存储的

00:14.000 --> 00:16.560
他都可以做跨标签页通信

00:16.820 --> 00:19.380
对不对 无论是Cookie也好 还是这个

00:19.640 --> 00:21.180
vibor storage也好

00:21.420 --> 00:22.460
就local storage嘛

00:22.700 --> 00:25.780
然后或者是什么呢 或者是这个index DB

00:26.040 --> 00:27.320
这些是不是都是浏览器

00:27.580 --> 00:29.360
就是客户端存储的一些方案

00:29.620 --> 00:30.140
对不对

00:30.180 --> 00:33.500
这些方案的话都可以做跨标签页的通信

00:34.020 --> 00:35.560
对不对 他是肯定能够做的

00:35.820 --> 00:37.860
所以我们这边呢 我们来看一下这个Cookie

00:38.120 --> 00:39.920
那Cookie的话 这边仍然是

00:40.180 --> 00:42.980
一样的是通过什么呢 通过轮旋的方式

00:43.240 --> 00:45.280
去监听Cookie的这个变化

00:45.540 --> 00:46.820
从而达到

00:47.080 --> 00:48.600
一个多标签页

00:48.860 --> 00:49.640
通信的目的

00:49.900 --> 00:50.400
OK

00:50.660 --> 00:52.460
好 那我们这边还是把这个例子写一下嘛

00:53.220 --> 00:54.500
首先来到这个

00:55.260 --> 00:56.040
页面1

00:56.300 --> 00:58.600
页面1的话 我这边就设置一下Cookie

00:59.100 --> 00:59.620
这边

01:00.900 --> 01:01.920
script

01:02.700 --> 01:05.260
好 这边的话就是设置

01:06.020 --> 01:06.520
Cookie

01:07.300 --> 01:08.320
好 那我这边就是

01:08.580 --> 01:11.400
document.cookie

01:13.180 --> 01:14.220
好 等于一个

01:14.480 --> 01:17.800
这边的话Lame 等于一个什么呢 等于一个解决

01:18.560 --> 01:19.080
OK

01:19.340 --> 01:20.620
好 这边的话cancel一下

01:20.880 --> 01:22.400
cancel.log

01:23.160 --> 01:24.200
Cookie

01:25.480 --> 01:26.760
已经设置成功

01:27.280 --> 01:28.040
已经

01:28.300 --> 01:29.320
设置

01:30.040 --> 01:30.800
成功

01:31.060 --> 01:32.080
OK 搞定

01:32.340 --> 01:34.080
好 保存一下 过来揉一眼

01:34.340 --> 01:36.180
这边是不是Cookie设置成功

01:36.440 --> 01:39.640
好 然后接下来的话在这个index2这边

01:41.300 --> 01:42.580
就是第二个页面

01:42.840 --> 01:43.860
好 第二个页面

01:45.400 --> 01:46.940
这边的话script

01:47.700 --> 01:51.020
好 我们这边的话 然后拿到当前的Cookie

01:52.300 --> 01:56.660
Cookie 等于一个document.cookie

01:57.240 --> 02:00.620
拿到 对吧 拿到之后 然后接下来的话 我们这边log一下

02:01.980 --> 02:05.320
log一下这边 当前的Cookie

02:06.080 --> 02:07.580
当前的

02:08.080 --> 02:08.900
Cookie

02:09.160 --> 02:10.180
直为

02:11.960 --> 02:12.740
直为什么呢

02:13.260 --> 02:15.560
这边是不是应该是Cookie

02:17.880 --> 02:18.400
对不对

02:18.660 --> 02:19.160
OK

02:19.420 --> 02:20.960
好 那这边保存一下

02:21.220 --> 02:22.500
保存了之后过来揉一眼

02:22.760 --> 02:23.520
是不是拿到了

02:23.780 --> 02:25.820
好 拿到之后 然后接下来的话 这边

02:26.080 --> 02:27.360
开一个定时器

02:28.200 --> 02:30.900
set the integral function

02:31.660 --> 02:34.480
因为你这个Cookie是什么 是不是是一个制服串

02:35.240 --> 02:36.780
对不对 是一串制服串

02:37.040 --> 02:39.080
所以我这边的话 我就可以去比较

02:39.340 --> 02:40.880
我这边就可以意识

02:41.400 --> 02:44.840
你这个我重新拿document.cookie

02:45.100 --> 02:46.520
是不是获取最新的Cookie

02:46.780 --> 02:49.280
最新的Cookie 如果不等于

02:49.540 --> 02:52.140
我之前 之前这一次

02:52.400 --> 02:53.420
获取到的Cookie

02:53.680 --> 02:54.700
那说明什么

02:54.960 --> 02:57.020
说明是不是东西 就是这个Cookie

02:57.060 --> 02:57.780
有更新

02:58.040 --> 03:00.340
对不对 好 那我们这边cancel一下

03:00.860 --> 03:01.880
cancel一下

03:02.140 --> 03:03.160
就是Cookie

03:04.440 --> 03:06.500
Cookie有更新

03:07.260 --> 03:08.800
有更新

03:09.060 --> 03:10.580
最新的

03:10.840 --> 03:12.640
直为

03:13.140 --> 03:13.660
什么呢

03:14.180 --> 03:14.940
这边用那个

03:15.460 --> 03:16.740
用制服串模板

03:17.240 --> 03:18.520
最新的直为

03:18.780 --> 03:20.320
这边那是不是应该是

03:20.580 --> 03:22.620
document.cookie

03:23.640 --> 03:24.160
对不对

03:24.420 --> 03:26.980
好 接下来把最新的直也付给谁一份

03:27.480 --> 03:28.260
付给这个

03:28.520 --> 03:31.060
这个Cookie这个辩量是不是给他复制一份

03:31.840 --> 03:32.340
对不对

03:32.600 --> 03:33.360
好 这边的话

03:33.620 --> 03:34.140
Cookie

03:35.160 --> 03:35.680
ok

03:36.440 --> 03:38.500
好 然后接下来你这边的话 可以再加一句话

03:38.760 --> 03:40.020
就是Cookie有更新

03:40.540 --> 03:41.560
这个不用讲

03:41.820 --> 03:42.840
加不加都无所谓

03:43.100 --> 03:44.380
反正这边重新付了直就可以了

03:44.900 --> 03:45.660
保存一下

03:46.420 --> 03:47.460
好 我们来看一下毫保史

03:48.220 --> 03:51.040
这边Cookie已经成功设置 然后加这边的话是不是

03:51.800 --> 03:53.080
lamb等于卸节

03:53.340 --> 03:55.640
对不对 好 然后加我这边document.cookie

03:55.900 --> 03:56.680
点

03:57.220 --> 03:59.020
egg 等于个18

03:59.280 --> 04:00.040
走

04:03.120 --> 04:04.900
这边的话

04:06.800 --> 04:08.340
set interval

04:11.660 --> 04:13.200
当前的Cookie值

04:13.720 --> 04:15.000
好 这边刷新一下呢

04:19.000 --> 04:20.520
这边怎么没有生效呢

04:20.780 --> 04:21.800
好 我们来看一下

04:22.320 --> 04:23.340
document

04:24.620 --> 04:25.400
哦

04:25.900 --> 04:26.420
这里

04:26.920 --> 04:27.960
这里是不是写错了

04:28.220 --> 04:29.740
这里应该是document

04:30.040 --> 04:31.080
点Cookie

04:33.080 --> 04:34.100
点Cookie

04:34.360 --> 04:35.380
然后点这个

04:35.640 --> 04:37.940
egg 等于一个18

04:38.980 --> 04:39.480
诶

04:40.000 --> 04:40.520
我看一下

04:41.280 --> 04:42.300
哦 错了啊 错了

04:42.560 --> 04:43.320
我一下子晕了

04:43.580 --> 04:46.660
这边应该是document.cookie 等于一个什么

04:46.920 --> 04:47.920
这边是不是egg

04:48.180 --> 04:49.720
对吧 是应该是这样子来设置的

04:49.980 --> 04:51.000
好 走

04:51.780 --> 04:53.560
看到没有 这边Cookie有更新

04:53.820 --> 04:56.900
最新的值为lamb等于卸节egg 等于18

04:57.160 --> 04:58.940
看到没有 只要你更新这个Cookie

04:59.200 --> 05:00.480
只要你一更新

05:00.940 --> 05:01.440
诶

05:01.700 --> 05:03.500
看这边怎么清空啊 这样子

05:03.760 --> 05:07.860
只要你更新 比如我这边document.cookie

05:08.620 --> 05:11.700
大家我这边等于一个什么呢 我修改这个lamb

05:12.460 --> 05:16.040
lamb 等于一个什么呢 现在是卸节是吧 我改成张三

05:16.560 --> 05:17.080
走

05:17.840 --> 05:18.360
看到没有

05:18.620 --> 05:24.240
Cookie有更新 最新的值为egg 等于18 然后lamb等于一个张三

05:25.260 --> 05:25.780
看到没有

05:26.040 --> 05:28.080
大家这边我再来加一个

05:28.340 --> 05:30.380
document.cookie

05:31.200 --> 05:33.500
那加一个什么呢 加一个这个gender

05:35.040 --> 05:37.340
gender 等于一个mail 走

05:38.620 --> 05:40.660
看到没有 有更新最新的值色

05:40.920 --> 05:42.840
egg 等于18 lamb等于张三

05:43.100 --> 05:44.260
gender 等于mail

05:45.020 --> 05:45.540
看到没有

05:46.040 --> 05:48.100
这个就是cookie

05:48.620 --> 05:52.700
使用这个cookie 也能够达到这个就是跨标签页

05:52.960 --> 05:53.980
通信的这个目的

05:54.740 --> 05:57.060
看到没有 只要你要通过这个setter interval

05:57.320 --> 05:58.580
去这个轮型

05:58.780 --> 06:04.300
基本上就设置每个一秒吧 每个一秒去问一次 每个一秒去问一次

06:05.060 --> 06:11.580
好吧啊 这就是通过这个cookie啊 cookie定时器轮型的方式实现跨标签页通信

06:12.100 --> 06:14.420
好 这节课就先到这里啊 再见

