WEBVTT

00:00.880 --> 00:02.920
大家好 我是谢老师

00:03.180 --> 00:05.240
这节课的话 我们来看一下

00:05.480 --> 00:08.040
一个很重要的东西 一个是过渡

00:08.300 --> 00:09.840
一个是动画

00:10.100 --> 00:12.660
这两个的话都是CSS3

00:12.920 --> 00:14.440
新增加的这个特性

00:14.700 --> 00:17.000
然后用的的话 场景也非常的多

00:17.260 --> 00:19.060
在这个面试的时候

00:19.320 --> 00:20.340
也会经常被问到

00:20.600 --> 00:21.360
比如你看这边

00:21.880 --> 00:23.160
这个经典的面试题

00:23.660 --> 00:25.200
C3中trization和

00:25.460 --> 00:28.020
这个animation属性分别有哪些

00:28.280 --> 00:30.060
这个是来自于这个bilibili

00:30.260 --> 00:31.600
的这个面试题

00:31.860 --> 00:32.620
那第二个

00:32.880 --> 00:35.440
CSS动画是如何实现的

00:35.700 --> 00:37.480
那这个是不是就是这个animation

00:37.740 --> 00:39.020
对不对 考察到这个

00:39.540 --> 00:40.560
所以我们这边的话

00:40.820 --> 00:42.600
这节课我们就来看一下这两个东西

00:42.860 --> 00:44.920
一个是过渡 一个是动画

00:45.680 --> 00:47.220
好了 首先我们来看这个过渡

00:47.720 --> 00:48.740
过渡是什么呢

00:49.000 --> 00:52.080
过渡的话它可以使就是一个状态

00:52.340 --> 00:54.380
变化到另一个状态时

00:54.640 --> 00:56.940
它变化更加的这个平滑

00:57.700 --> 00:59.240
你看这边它做了个比喻

00:59.440 --> 01:01.240
就这个C3的这个过渡功能

01:01.500 --> 01:03.540
像一种什么的 像一种黄油

01:04.060 --> 01:06.100
像一种黄油 可以就是

01:06.360 --> 01:09.440
从一个状态变化到另一个状态的时候更加的湿滑

01:09.700 --> 01:12.000
我们这边我们来看一个快速入门的这个实力

01:12.760 --> 01:14.040
比如我这边有个div

01:14.560 --> 01:16.600
然后接下来的话我这边div

01:17.620 --> 01:21.460
宽 我给个150 高 给个150

01:21.720 --> 01:23.520
然后接下来给了一个背景颜色

01:24.800 --> 01:25.300
radar

01:25.560 --> 01:26.060
OK

01:26.320 --> 01:27.600
好 那现在我们这边来看一下

01:28.060 --> 01:29.600
好这个div是不是在这个位置

01:29.860 --> 01:32.940
好 然后接下来的话我们设置这个div

01:34.220 --> 01:36.000
div它horl的时候

01:36.260 --> 01:39.840
我们设置它这个高度我们改成多少呢 改成一个500

01:40.860 --> 01:42.400
好 那接下来我们这边我们来看一下

01:42.660 --> 01:43.160
刷新

01:43.940 --> 01:45.220
锁标一上去

01:45.980 --> 01:47.780
你看这边高度是不是发生了变化

01:48.540 --> 01:51.100
高度的话确确实实发生了变化

01:51.360 --> 01:53.420
但是这个变化它非常的什么呢

01:53.660 --> 01:54.700
非常的这个突然

01:55.200 --> 01:55.700
对不对

01:55.960 --> 01:56.740
非常的突然

01:56.940 --> 01:58.780
那这个时候你就可以加一个什么呢

01:59.040 --> 02:00.160
加一个过渡

02:00.420 --> 02:02.060
好 我们先来看这个快速入门

02:02.320 --> 02:05.140
这个过渡的属性名叫做trization

02:05.640 --> 02:07.380
好 然后接下来的话这边这个horl

02:07.640 --> 02:10.140
代表什么呢 代表所有的这个属性

02:10.400 --> 02:12.420
我都要应用这个过渡的这个样式

02:12.680 --> 02:14.600
好 然后下这边写一个实戒

02:14.860 --> 02:15.640
比如说一秒

02:16.140 --> 02:18.200
好 然后接下来回头我们这边刷新

02:18.960 --> 02:21.260
好 注意 我锁标一上去的时候

02:22.040 --> 02:22.540
看到没有

02:22.800 --> 02:25.360
它是不是就会有一个很平滑的过渡效果

02:25.620 --> 02:26.640
然后锁标一开

02:27.720 --> 02:28.360
看到没有

02:28.620 --> 02:30.520
这就会有一个很平滑的过渡效果

02:30.780 --> 02:33.100
这个的话其实就是我们的过渡

02:33.600 --> 02:35.920
这是这个快速入门失礼

02:36.160 --> 02:37.440
你不加的话 它的这个

02:37.700 --> 02:40.000
变化的时候它会非常的生硬

02:40.260 --> 02:42.560
你一旦加了这个trization过渡效果之后

02:42.820 --> 02:45.640
你会发现两个状态的这个变化

02:46.140 --> 02:49.480
这个之间它是有一个很平滑的这个过渡效果的

02:49.740 --> 02:51.780
过渡的过渡是不也就是过渡

02:52.300 --> 02:54.600
对不对 和它的这个名字是能够对上的

02:55.220 --> 02:58.220
好 这是关于这个过渡的快速入门失礼

02:58.760 --> 03:00.860
看完了快速入门失礼之后

03:00.860 --> 03:03.920
然后接下来我们就来看这个关于这个trization过渡

03:04.160 --> 03:05.600
它的一个具体的

03:05.860 --> 03:06.380
语法

03:07.400 --> 03:09.700
它这个trization我们刚用的这个trization

03:09.960 --> 03:11.240
它其实是一条

03:11.500 --> 03:12.260
复合属性

03:13.020 --> 03:13.800
复合属性

03:14.060 --> 03:16.620
它是有好几个属性组成的

03:17.120 --> 03:17.900
哪几个属性呢

03:18.400 --> 03:20.460
首先第一个是这个trization property

03:21.220 --> 03:22.240
代表什么呢

03:22.440 --> 03:25.260
指的是这个过渡 你要过渡哪个属性

03:25.520 --> 03:27.820
我们刚才用的是什么 我们刚是不是用的是这个or

03:28.080 --> 03:29.100
or代表什么呢

03:29.360 --> 03:30.900
代表就是所有能够

03:31.160 --> 03:32.680
过渡的我们都要

03:32.940 --> 03:34.220
这个使用这个过渡

03:34.740 --> 03:37.560
然后接下来的话是这个trization duration

03:38.320 --> 03:39.600
这个我们刚是不是也设置了的

03:40.360 --> 03:44.460
对不对 就是你过渡的时间 比我们这边可以把时间改一下我们改成10秒

03:45.740 --> 03:47.280
改成10秒你看一下 现在是不是

03:47.540 --> 03:49.840
一秒钟是不是很快 我刷新一下

03:50.360 --> 03:51.120
好 然后在这边

03:51.620 --> 03:52.140
你看

03:52.860 --> 03:55.520
我设置的是10秒 所以它从一个状态

03:55.780 --> 03:57.700
切换到另一个状态的时候

03:57.960 --> 04:00.120
它所花的时间是10秒

04:00.640 --> 04:02.180
这个很好理解 是吧

04:02.700 --> 04:03.460
好 大家这边

04:03.980 --> 04:05.760
trization timing function

04:06.020 --> 04:08.060
这个是指的是你的过渡函数

04:08.320 --> 04:09.860
这个一会我们下面来看

04:10.120 --> 04:12.160
然后接下来这个是trization delay

04:12.420 --> 04:13.940
就是延迟时间

04:14.200 --> 04:16.520
这个什么意思 这个我马上也可以给大家

04:16.780 --> 04:19.080
展示一下 比如说我这边的话过渡时间是一秒

04:19.580 --> 04:20.620
我们重新回到一秒

04:21.380 --> 04:21.880
OK

04:22.240 --> 04:26.600
对吧 好 然后将我后面再写一个时间 我写一个什么呢 我写个三秒

04:27.360 --> 04:31.960
那后面这个时间它就是什么呢 后面这个时间它就是延迟

04:32.740 --> 04:38.120
也就是说我从一个状态变化到另一个状态的时候 我要三秒之后

04:38.620 --> 04:39.640
再进行变化

04:39.900 --> 04:40.920
好 我们这边我们来看一下

04:41.440 --> 04:41.940
刷新

04:42.720 --> 04:44.000
好 注意 我鼠标一上去

04:47.100 --> 04:50.940
看到没有 是不是三秒钟之后 是不是它这个状态才发生的变化

04:51.200 --> 04:52.740
包括我鼠标我一开

04:56.110 --> 04:58.670
看了没有 是不是三秒之后才发生变化

04:58.930 --> 05:00.970
这个的话其实就是延迟

05:01.230 --> 05:04.550
好 那接下来我们下面来看一下一些细节的问题

05:04.810 --> 05:05.570
首先第一个

05:05.830 --> 05:10.710
trization property 这个刚才说了就是过渡的属性 你可以写是这个lang

05:10.970 --> 05:14.550
就可选值 他可写的值有lang 有or

05:14.810 --> 05:17.350
or就是所有属性都会获得

05:17.610 --> 05:18.370
过渡效果

05:18.630 --> 05:21.710
那加这边 property property就是写你具体的

05:22.230 --> 05:24.010
要过渡的这个属性

05:24.210 --> 05:25.590
比如说我这边我举个例子

05:26.010 --> 05:32.150
比如说我们这边harve的时候 除了高度要变化 然后接下来这个背景颜色要发生变化

05:32.410 --> 05:33.690
变成这个sky blue

05:34.450 --> 05:36.250
由于我这边 我把这个先去掉

05:37.010 --> 05:39.150
由于我这边我写的是or

05:39.570 --> 05:44.950
写的是or的话 那接下来两个都会发生变化 比如说就都会有这个过渡效果 比我这边走

05:46.230 --> 05:46.750
看到没有

05:47.510 --> 05:51.870
高度的话会有个过渡效果 颜色的变化是不是也会有一个

05:52.630 --> 05:53.150
过渡效果

05:53.890 --> 05:59.290
看到没有 那我这边可以干嘛 那我这边 比如说我只想针对这个高度 那我这边就可以

06:00.050 --> 06:00.330
hit

06:01.090 --> 06:03.650
hit是一秒 然后再让我这边刷新

06:04.170 --> 06:04.930
好 你看

06:05.170 --> 06:07.490
颜色上面是不是他就没有过渡效果

06:08.010 --> 06:11.850
对不对 颜色的话你鼠标一上去他瞬间就变化了

06:12.090 --> 06:15.170
但是这个高度的话有这个过渡效果

06:15.430 --> 06:17.210
所以这边你就可以指定

06:17.470 --> 06:19.010
具体的这个过渡属性

06:19.530 --> 06:20.290
是哪个

06:21.810 --> 06:22.330
好

06:22.790 --> 06:23.570
然后

06:23.830 --> 06:29.710
需要注意 就是不是说所有的属性都可以过渡 这一点一定要注意

06:30.470 --> 06:36.110
不是所有的属性都能过渡 只有这个终点值的属性

06:36.370 --> 06:38.150
才能进行过渡效果

06:38.410 --> 06:41.230
那有同学可能就要问了 什么叫做终点值

06:41.490 --> 06:44.310
其实这个比较好理解 比如你看我们刚才那个

06:44.810 --> 06:45.570
我们这个

06:45.830 --> 06:49.150
刚才这个高度的变化 从150

06:49.610 --> 06:50.490
变到500

06:50.750 --> 06:55.770
让他是不是首先是151 152 153 然后一直加加加加加加到500

06:56.530 --> 06:58.050
是不是他就会有这种终点值

06:58.570 --> 06:59.850
对不对 包括这个颜色

07:00.370 --> 07:01.650
颜色他也有终点值

07:02.410 --> 07:04.030
为什么有终点值呢 因为你这个

07:04.290 --> 07:06.770
红色 红色他是不是就是RGB 255

07:07.270 --> 07:08.290
对不对 255

07:08.550 --> 07:09.330
然后0 0

07:09.590 --> 07:11.370
然后你变到这个SkyBlu

07:11.630 --> 07:13.930
SkyBlu是不是有一个RGB值

07:14.450 --> 07:18.290
对不对 他的RGB值是不是其实就是三个数字

07:18.490 --> 07:21.830
所以三个数字之间 他可以一点一点的这个进行一个变化

07:22.090 --> 07:23.630
他也是有终点值的

07:24.390 --> 07:28.230
但是有一些属性他就没有终点值 比如说什么呢 比如说这个

07:29.510 --> 07:30.010
看到没有

07:30.270 --> 07:32.070
DisplayLangBlock

07:32.330 --> 07:34.630
让一个元素消失或者显示

07:34.890 --> 07:36.410
这个东西他是没有终点值的

07:36.670 --> 07:39.230
为什么 因为你要么就是Lang 要么是Block

07:39.490 --> 07:42.310
你不可能说我从这个Lang切换到Block之间

07:42.570 --> 07:45.890
还有一些什么其他其他的值一点一点切换过来的

07:46.150 --> 07:46.650
不是

07:47.170 --> 07:48.190
不是

07:48.330 --> 07:51.910
所以我们这边的话 比如说我要做一个这个元素消失

07:52.170 --> 07:53.610
比如说这边Hour的时候

07:54.390 --> 07:57.450
我们这边我们可以来试一下吗 我们这边让他Display

07:57.710 --> 07:59.510
试一个这个Lang

07:59.770 --> 08:01.550
好 然后这样我们这边我们刷新一下

08:02.330 --> 08:02.830
你看

08:03.350 --> 08:04.110
看到没有

08:04.370 --> 08:05.390
这没有过度效果

08:05.910 --> 08:07.950
看到没有 因为他要么就是Lang 要么就是Block

08:08.210 --> 08:09.230
没有终点值

08:09.750 --> 08:12.510
Lang有同学会说Lang 我这个我就是想做一个

08:12.770 --> 08:14.610
让他慢慢的消失

08:15.110 --> 08:15.890
怎么办呢

08:16.150 --> 08:17.950
有办法吗 你这边可以用什么吗

08:17.970 --> 08:18.930
你可以用这个吗

08:19.690 --> 08:20.970
可以用Upsetting吗

08:21.730 --> 08:24.050
因为Upsetting依旧是显示0就是不显示

08:24.310 --> 08:26.270
那0到1之间他是不是会有一个

08:26.530 --> 08:27.890
这个有很多这个终点值

08:28.390 --> 08:29.670
对不对 你刷新一下

08:34.030 --> 08:35.050
我们这边的话

08:35.310 --> 08:37.610
UpsettingHour的是All

08:37.870 --> 08:38.890
因为这边写的Hit

08:39.150 --> 08:40.430
好 这边重新改成All

08:41.450 --> 08:42.730
好 这边刷新一下

08:44.270 --> 08:44.770
看到没有

08:45.030 --> 08:46.570
是不是就有一个过度效果

08:47.250 --> 08:50.610
对不对 就有过度效果 为了证明我把那个刚改回去

08:51.390 --> 08:53.950
这边的DisplayLang

08:55.750 --> 08:56.250
刷新

08:56.510 --> 08:58.550
你看DisplayLang是不是没有的

08:59.330 --> 08:59.830
对不对

09:00.090 --> 09:00.850
这个是没有的

09:01.110 --> 09:04.450
然后这样你这边的话你把它改成这个Upsetting

09:05.210 --> 09:05.730
改成这个

09:05.990 --> 09:08.790
改成这个的话他就是有一个过度效果

09:09.050 --> 09:12.370
因为Upsetting的话他0到1之间这个切换

09:12.630 --> 09:14.170
他就有这个终点值

09:15.710 --> 09:16.210
OK

09:16.670 --> 09:19.070
而具体哪些支持这个过度属性

09:19.330 --> 09:21.890
我们刚才说了是不是有中间值的才会支持

09:22.150 --> 09:24.710
那具体哪些有中间值 我这边有个表

09:24.970 --> 09:26.510
但这个的话你不需要去背

09:27.270 --> 09:29.070
不需要去背 你大致摟一眼

09:29.330 --> 09:31.370
大致看一下有这么一些属性

09:31.630 --> 09:32.650
大致看一下就可以了

09:33.930 --> 09:35.670
这是这个 首先第一个

09:35.930 --> 09:38.030
TrizationPoperty

09:38.290 --> 09:39.310
那第二个属性

09:39.570 --> 09:42.630
第二个属性叫做TrizationDuration

09:43.410 --> 09:45.950
这个是时间 这个也没什么好说的

09:46.110 --> 09:48.390
这个你可以设置成秒或者好秒

09:48.650 --> 09:51.230
默认值是0 代表是即时的

09:51.790 --> 09:52.810
好 接下来下一个

09:53.330 --> 09:55.630
TrizationTamingFunction

09:55.890 --> 09:59.470
这个是什么呢 这个是设置你过度的一个速度

09:59.990 --> 10:00.830
它其实

10:01.070 --> 10:03.310
这边有这么几个值 一个是Near

10:03.570 --> 10:04.590
这个是云朔

10:04.850 --> 10:05.610
然后叫Ease

10:05.870 --> 10:09.190
Ease是先从慢速到快 然后又到慢速

10:09.710 --> 10:10.430
EaseIn

10:10.690 --> 10:12.010
先慢后快

10:12.270 --> 10:15.090
就是慢速开始 就是慢速开始

10:15.310 --> 10:16.450
大家EaseOut

10:16.710 --> 10:17.850
慢速结束

10:18.370 --> 10:19.850
大家EaseInOut

10:20.110 --> 10:22.210
就是慢速开始和结束

10:22.470 --> 10:24.010
我们这边我们来看一下就可以了

10:24.510 --> 10:25.410
比如我们这边的话

10:26.310 --> 10:27.850
我们就还是设置Hit

10:28.610 --> 10:30.150
Hit设置一个500

10:30.650 --> 10:33.730
然后这样我们这边让我们先写一个Layer

10:34.490 --> 10:36.290
好 然后接下来我们这边刷新

10:37.050 --> 10:38.210
走 你看

10:38.470 --> 10:39.690
它是不是云朔的

10:40.650 --> 10:41.410
云朔的

10:41.670 --> 10:44.230
好 然后这样我这边让我改一下 我比如我改成这个

10:44.950 --> 10:46.350
EaseIn

10:47.010 --> 10:49.310
好 然后它刚开始就会很慢 让我们刷新

10:50.590 --> 10:52.110
后面是不是就会快一些

10:52.370 --> 10:52.890
走开

10:53.150 --> 10:55.650
好 然后接下来这边可能有的同学说

10:55.910 --> 10:57.230
这个好像不太明显

10:57.490 --> 10:58.010
是吧

10:58.270 --> 10:59.030
不太明显

10:59.290 --> 11:01.070
我们把这个改长一点呢

11:01.850 --> 11:03.130
改成比如说900

11:04.410 --> 11:06.710
大家这边的话来体会一下

11:06.970 --> 11:11.330
我把这个时间也稍微设置长一点点嘛 比如说两秒

11:13.110 --> 11:13.630
刷新

11:14.090 --> 11:15.110
然后来看

11:16.910 --> 11:18.650
说后面明显速度要快一些

11:19.210 --> 11:20.230
对不对 然后加这边

11:20.490 --> 11:21.010
移开

11:22.030 --> 11:23.830
这个就是这个

11:24.090 --> 11:25.610
贪民方形

11:25.870 --> 11:27.150
就过渡了这个速度

11:27.410 --> 11:29.450
你要注意一下就是前面这几个

11:29.710 --> 11:33.810
前面这几个都可以通过最后一个 最后一个叫做被塞尔曲线

11:34.570 --> 11:37.130
都可以通过被塞尔曲线来

11:37.390 --> 11:38.150
实现

11:38.410 --> 11:42.250
当然关于这个被塞尔曲线的话 我这里就不展开讲了

11:42.450 --> 11:46.550
后面有时间的话 我单独来一节课来讲这个被塞尔曲线

11:46.810 --> 11:49.110
你这边的话 你知道就是这几个

11:49.370 --> 11:52.450
这几个的话 其实都可以通过被塞尔曲线来实现

11:52.710 --> 11:53.710
知道这个就可以了

11:55.540 --> 11:56.820
好 然后接下来下一个

11:57.340 --> 11:59.380
下一个是trization delay

11:59.640 --> 12:00.920
这个刚好我是不是已经演示了

12:01.680 --> 12:03.480
这个是什么 这个就是延迟

12:04.000 --> 12:05.020
延迟多少秒

12:05.280 --> 12:06.040
但是你要注意

12:06.300 --> 12:09.260
这个的话它不仅可以设置为正数还可以设置为

12:09.620 --> 12:10.380
负数

12:11.160 --> 12:12.700
那这个负数是什么意思呢

12:12.860 --> 12:15.940
负数的话就是从你整体过渡时间中

12:16.200 --> 12:17.780
做一个减法运算

12:18.040 --> 12:19.060
比方我举个例子

12:19.820 --> 12:20.840
比如就这个嘛

12:21.360 --> 12:21.860
就这个

12:22.880 --> 12:23.920
好 来到这边

12:24.680 --> 12:27.100
比如说我们这边 我们这边整体是不是5秒

12:27.360 --> 12:28.780
然后减个两秒

12:29.300 --> 12:31.860
减个两秒的话 相当于是直接从第几秒开始

12:32.120 --> 12:33.640
直接从第三秒开始

12:34.160 --> 12:35.700
你这边你看一下 比如刷新

12:36.460 --> 12:36.960
过去

12:37.220 --> 12:37.740
看了没有

12:38.000 --> 12:39.780
是不是直接从第三秒开始

12:40.560 --> 12:41.320
再来

12:41.840 --> 12:42.600
看了没有

12:42.700 --> 12:44.740
我把这个稍微弄短一点嘛

12:45.000 --> 12:46.280
弄成500

12:48.080 --> 12:48.580
刷新

12:49.620 --> 12:50.120
看了没有

12:50.900 --> 12:52.180
然后接下来

12:52.940 --> 12:53.460
看了没有

12:53.720 --> 12:56.520
它这个就是可以设置为负值

12:58.060 --> 13:00.360
好 然后这边多个元素过渡

13:00.620 --> 13:03.440
多个元素过渡的话 你这边就写多组就可以了

13:03.700 --> 13:04.200
不用我这边了

13:04.460 --> 13:05.480
ban光的carner

13:05.740 --> 13:08.040
两秒 然后下这边以斗号分隔

13:08.560 --> 13:09.580
斗号分隔

13:09.840 --> 13:11.100
然后下这边

13:11.360 --> 13:11.880
5秒

13:12.100 --> 13:15.660
但你如果是所有元素你都要过渡的话 直接写什么

13:15.920 --> 13:16.960
直接写这个all

13:17.460 --> 13:18.220
要方便一些

13:20.540 --> 13:23.600
然后下一个 下一个就是这个官员hover17

13:23.860 --> 13:25.400
不同的过渡设置

13:25.660 --> 13:28.480
比如你看我这边div 我设置了一个triz行

13:28.740 --> 13:31.040
然后接下来的话这个hover这边

13:31.300 --> 13:32.820
设置了一个triz行

13:33.080 --> 13:35.900
那你鼠标hover的时候 他应用了就是这个

13:36.660 --> 13:40.260
然后接下来你鼠标移开的时候 应用了就是这个

13:40.720 --> 13:45.320
这个作为一个了解 比如说我这边的话 我这边也设了一个triz行

13:46.600 --> 13:50.200
triz行 我这边是多少呢 我这边是10秒

13:50.720 --> 13:52.760
然后你这边回去的话是这个

13:53.020 --> 13:53.520
1秒

13:53.780 --> 13:55.820
所以我这边的话我hover的时候

13:56.080 --> 13:58.400
hover的时候它运用的过渡效果就是什么 就是这个

13:58.660 --> 14:01.200
所以它是10秒 但我鼠标移开的时候

14:01.460 --> 14:03.520
鼠标移开的时候它就应用了就是这个

14:04.020 --> 14:05.040
比我们这边我们来看一下

14:05.560 --> 14:06.060
刷新

14:07.100 --> 14:07.600
你看

14:08.320 --> 14:10.120
看了没有啊 非常的慢

14:10.380 --> 14:15.760
是不是10秒钟 对不对 就是应用的是hover里面写的那个triz行的过渡效果

14:16.020 --> 14:17.540
好 然后鼠标移开

14:18.060 --> 14:19.580
是不是应用的是哪个

14:19.840 --> 14:21.880
应用的是是不是这里写的triz行

14:22.140 --> 14:25.480
对不对啊 但一般的话不会单独设置

14:25.740 --> 14:28.800
这个看你具体你写项目的时候 你的这个需求

14:29.060 --> 14:32.640
一般的话就在这 这上面设置这个一个

14:32.900 --> 14:33.920
就OK了

14:34.120 --> 14:34.980
就OK了

14:36.440 --> 14:38.480
好 然后接下来关于这个过渡

14:39.000 --> 14:41.040
也提供了一个事件

14:41.300 --> 14:44.360
这个事件的话就是配合着jess来用的

14:44.620 --> 14:47.180
经常的话我们就是有些操作啊

14:47.440 --> 14:50.000
我们需要就是过渡效果

14:50.520 --> 14:51.540
结束之后

14:52.300 --> 14:53.080
再执行

14:53.840 --> 14:55.760
哎 就是我要等你这个过渡效果

14:56.020 --> 14:58.960
结束之后 然后接下来我再做后续的这个操作

14:59.220 --> 15:01.260
那我怎么知道它的这个过渡效果

15:01.520 --> 15:02.280
有没有结束呢

15:02.640 --> 15:06.440
它这边呢给我们提供了一个叫做triz行 恩的的事件

15:07.600 --> 15:09.140
通过这个triz行恩的

15:09.400 --> 15:12.040
我就可以干嘛呢 我就可以监听到这个过渡效果

15:12.200 --> 15:13.000
有没有结束

15:14.000 --> 15:17.540
结束了之后 然后接下来我再做后面的操作

15:17.800 --> 15:19.280
啊 比如说我们这边让我们来看一下嘛

15:19.840 --> 15:22.040
啊 就这段代码嘛 直接把这段代码拿过来

15:25.970 --> 15:27.670
啊 这边就一个div

15:27.930 --> 15:30.770
大家这边对应的是div的样式

15:33.360 --> 15:34.760
div的样式

15:35.000 --> 15:35.960
啊 各实化一下

15:36.400 --> 15:39.560
啊 然后这里 这里的话 然后有一段这个

15:40.520 --> 15:41.560
有一段这个脚本

15:48.490 --> 15:49.490
vn script

15:51.600 --> 15:52.880
ok 好 我们来看一下这个代码

15:53.400 --> 15:59.520
这代码的话 就是我绑了一个事件点击的时候 我干嘛呀 我让它的高度是不是变成这个四百

16:00.240 --> 16:03.960
对不对 然后这样我这边监听什么呢 监听这个triz行恩的事件

16:04.520 --> 16:09.120
当你的整个这个过渡效果结束之后 那这样我打印出这句话

16:09.480 --> 16:11.240
啊 好 那这样我们这边我们来看一下

16:12.200 --> 16:16.700
把这边打开 刷新一下

16:17.740 --> 16:19.020
好 我这边让我点击一下

16:21.350 --> 16:27.470
好 大家这边看没有 说出发了 哎 说说就是在过渡效果结束之后

16:27.990 --> 16:29.270
然后接下来话 呃

16:30.310 --> 16:32.670
这边触发这个triz行恩的事件

16:33.310 --> 16:37.990
啊 这是关于我们整个这个过渡就给大家介绍完了

16:38.750 --> 16:42.070
啊 这个还是比较简单啊 而且非常好用 非常好用

16:42.870 --> 16:47.190
然后下一个 下一个的话是关于这个动画

16:47.910 --> 16:50.870
c3的这个动画啊 这个也是用的相当的多

16:51.710 --> 16:56.950
这个在我们的c3里面 新增了一个什么呢 新增了一个叫做animation的这个模块

16:57.710 --> 17:03.990
他就允许你做做出什么呢 做出类似于flash 最早我们做动画都是用flash

17:04.550 --> 17:10.390
这可能有同学听过 有同学可能没听过啊 可能就是年龄偏小一点同学没听过这个东西

17:10.870 --> 17:14.670
以前早期的时候互联网你要做这个动画 全是通过的flash

17:15.430 --> 17:21.910
啊 他的话就是可以通过这个animation模块 制作出类似于flash

17:22.550 --> 17:29.190
一样的这个动画 好 我们这边首先还是看一个这个快速入门的这个势力啊 这边有一个这个div 是吧

17:29.590 --> 17:36.130
好 我把这个样式 我把拿过来 这边直接拿过来

17:37.090 --> 17:40.290
再画一下 好这个这个就不要了

17:42.210 --> 17:49.890
啊 这个id 啊id可以不上当 好 我们这边我们来看一下 这边呢很简单啊 这边呢首先去除默认的margin padding

17:50.290 --> 17:55.970
然后这边呢有个盒子是宽100高100有个背景颜色 好 大家这边的话设置了一个这个

17:56.770 --> 18:02.370
绝对定位 好 然后接下来的话 这边这边就是什么呢 这边animation就是在使用动画

18:02.930 --> 18:05.890
使用哪个动画 使用一个名为taste的动画

18:06.530 --> 18:10.530
这动画播放多长时间呢 播放5秒钟

18:11.570 --> 18:15.890
也就是在5秒钟以内 你要把这个叫做taste的动画

18:16.530 --> 18:22.450
播放完 那这个taste的动画具体它是就是怎么动呢 是在下面

18:22.850 --> 18:27.330
下面你进行这个一个声明 你看我这边tracking frames

18:27.890 --> 18:32.290
啊 大家这边taste 声明一个动画 动画的名字叫做taste

18:33.010 --> 18:40.050
然后接下来在0的时候 我的left是0 top是0 25%的时候left400 top0

18:40.690 --> 18:43.970
40%的时候left400 top200

18:44.530 --> 18:52.690
65%的时候left0 top200 最后100%的时候啊 然后叫left0 top0 也就是100%的时候重新和这个百分

18:52.930 --> 19:01.970
是不是重新回到0%的这个位置啊 对不对 我们这边的话就称之为什么呢 称之为设置了几个关键证啊 比如这是一个证

19:02.530 --> 19:04.450
这是一证 这是一证

19:05.170 --> 19:12.850
这是一证 一共能设置多少证呢 一共是从0%到100%

19:13.490 --> 19:18.210
你想设置多少证就设置多少证 但一般的话我们只设置关键证就可以了

19:18.450 --> 19:25.410
比如你看我这边 我这边并没有从0% 然后1% 2% 3%一直写到100% 我不可能这样子写

19:25.730 --> 19:28.850
对不对 所以我只设置几证关键证就可以了

19:29.250 --> 19:35.170
然后接下来他就会自动的从这一证到这一证自动的进行一个过渡

19:35.970 --> 19:41.810
比如你这一证 这一证是不是left是0 top是0 大家这边left是变成400了 那你的盒子是不是就是从

19:42.370 --> 19:48.690
比如从这个位置left0 top0 然后变成left400 top0 大家是不是移动到这个位置

19:49.730 --> 19:53.890
对不对 大家40%的时候left不变 top

19:54.610 --> 19:57.170
加200 是不是差不多就移动到这个位置啊

19:57.730 --> 20:00.930
对不对 我们来看一下吧 来看一下 把这个关了

20:01.970 --> 20:02.290
小心

20:03.970 --> 20:12.050
看到没有啊 我们这边就做了一个这个动画啊 你看5秒钟 刚好5秒钟啊 这个动画播放完毕

20:14.770 --> 20:22.130
好 我们这边回到这边 在上面的代码中 我们声明了一个名为taste的这个动画

20:23.090 --> 20:30.370
并且在这个di位里面 在di位里面 是不是通过这个animation关键字 应用了这个叫做taste的这个动画

20:30.690 --> 20:36.530
然后规定它什么呢 规定它5秒钟播放完毕啊 5秒钟播放完毕

20:37.170 --> 20:44.450
好了 接下来我们就要看一些细节上面的东西了啊 刚才那个快速入门司令我们已经看了 对吧 那这样我们来看这个细节上面的问题

20:45.170 --> 20:50.770
我们使用这个c3的这个animation制作这个动画 包含两个部分

20:51.730 --> 20:57.730
哪两个部分呢 一个是这个关键帧 你首先要声明一个动画 比如我们刚才这个位置

20:58.850 --> 20:59.330
这个位置

21:00.770 --> 21:07.410
这个是不是我们就在声明一个动画 这动画的名字叫做什么 是不是叫做taste的 那这样我们里面插入了一些是关键帧

21:07.970 --> 21:12.610
那这样设置关键帧是不是这个样式 然后接下来他就会自动比如从这一帧

21:13.410 --> 21:14.850
过渡到这一帧

21:15.810 --> 21:17.330
他会自动的进行一个这个过渡

21:17.490 --> 21:25.330
好 这边的话声明动画哈圈 keyframes 然后加这边的话就是你动画的名字 然后里面的话就是

21:26.210 --> 21:28.530
关键帧以及对应的这个样式

21:29.330 --> 21:30.930
啊 这边有对应的这个属性说明

21:32.850 --> 21:38.130
好 在上面的视力中 我们声明动画的代码就是这个啊 这个刚刚已经看到了

21:38.770 --> 21:44.770
我们在这个动画里面我们设置了五个时间段分别是25% 45% 45%

21:45.410 --> 21:49.730
百分之百 然后不同的时间段我们是不是写了一些不同的样式啊

21:50.450 --> 21:53.890
对不对 大家他就会自动的从一个时间段过渡到

21:54.530 --> 21:59.730
过渡到另外一个时间段啊 整个流程是非常平滑的

22:00.450 --> 22:07.890
啊 这是声明动画 声明完了之后 然后下一个下一个就是干嘛呢 下一个就是使用动画

22:09.170 --> 22:11.570
怎么使用呢 这边通过animation

22:12.530 --> 22:13.650
这个通过这个属性

22:14.210 --> 22:22.930
但是大家可以看到animation的话 它的这个属性值是比较多的啊 有lamb, duration, timing, function, delay

22:23.170 --> 22:26.770
你会发现前面是个和什么是一样的

22:27.650 --> 22:28.450
前面是个属性

22:29.330 --> 22:32.210
是不是和我们刚才讲的trization是一样的呀

22:33.170 --> 22:35.730
对不对 说这四个属性我压分我都不需要讲

22:36.050 --> 22:38.930
因为就和刚才的这个trization是一样的

22:39.250 --> 22:41.650
那这样我们看后面 后面他还多了几个

22:42.210 --> 22:47.730
iterration count direction fade mode和play state

22:48.210 --> 22:52.530
那我们这边我们来看一下啊 前面四个我就不讲了啊 前面四个就和刚才是一样的

22:52.930 --> 22:57.570
大家这个iterrate count 这个是什么呢 这个是定义动画的播放次数

22:58.050 --> 23:00.050
这个的话是是否反向播放

23:00.770 --> 23:03.410
啊 这个的话是就是动画不播放时

23:03.810 --> 23:09.570
它的一个状态 以及这个动画现在是运行还是停止

23:10.370 --> 23:15.570
好 那我们来看一下啊 我们来看一下 一个一个来看一下 前面四个就不用看了 我们主要看后面四个

23:16.050 --> 23:18.770
首先是这个iterration count 这个很好理解

23:19.250 --> 23:23.890
就是你的动画播放多少次啊 比如说我们刚才的话我们这边刷新

23:26.520 --> 23:26.920
刷新

23:27.720 --> 23:30.520
好 这边这边他是不是播放这个一次啊

23:31.240 --> 23:36.120
对不对 那我这边呢 我想让他播放两次啊 那接下来的话 我这边我觉得写个二

23:37.240 --> 23:38.680
写个二 好 那我们这边刷新

23:41.520 --> 23:46.160
啊 这边一次完了 好 然后接下来这边是播放第二次啊

23:47.440 --> 23:54.000
颗秒啊 这个就是次数 那如果我想让他无限播放 那既然他有个关键字叫做这个infinite

23:54.880 --> 23:57.120
这个就是无限播放 我们把这个时间调短一点

23:57.840 --> 24:01.280
把这个时间调成一秒啊 大家这边来看一下

24:01.840 --> 24:02.160
刷新

24:03.360 --> 24:07.360
看见没有 他就一直播放 因为你那个写的是infinite

24:08.160 --> 24:11.680
啊 所以他这边就一直播放啊 这个是这个属性

24:13.360 --> 24:18.000
好 然后接下来的话是这个direction direction就是动画播放完毕之后

24:18.800 --> 24:24.880
然后他默认是什么呢 默认是他会回到这个骑士状态啊 那我们这个我们来看一下 我们首先把这个动画改一下

24:27.110 --> 24:29.270
先把这个动画改一下改成这个样子

24:30.230 --> 24:37.990
就不就让他的话就是移到这个右下角啊 我们这边呢 比如说来个两秒 先这个一次

24:40.870 --> 24:41.750
好 我们这边刷新一下

24:43.190 --> 24:49.590
好 就到这就完了啊 我们这动画我们干设置就是从这儿到这儿就完了啊 你看下这个 你看下代码嘛

24:50.070 --> 24:54.310
是不是left先是00 然后加这边说400 然后加这边400

24:54.710 --> 25:01.270
对不对 那这边呢 就是从这儿 首先是00 然后加到这儿 到这儿啊 但是你注意 我这边

25:02.070 --> 25:06.950
啊 播放完毕之后他会自动干嘛呀 是不是自动回到骑士状态

25:07.670 --> 25:12.230
对不对 那我这边就可以设置什么呢 我这边的话就可以设置这个direction

25:12.950 --> 25:18.230
可以设置这个属性 这个属性的话有那么一些值啊 比如这边的话是这个

25:19.830 --> 25:20.550
啊 我看一下

25:21.750 --> 25:28.310
哦 这个这个是你播放的这个方向啊 错了错了这个的话direction direction的话它这个是

25:28.790 --> 25:35.670
你这个播放的是否反向播放回去啊 比如说这边它有一些值 就是比如这个normal

25:36.070 --> 25:41.910
就是正常播放 然后接下reverse它是什么呢 它是反向播放啊 比如我们这边我们来试一下

25:43.190 --> 25:49.990
我们这边先来再来看一下啊 正常情况下是不是这样子啊 对不对 那接下来我这边让我填一个reverse

25:51.670 --> 25:53.350
好 然后接下来我们这边刷新

25:55.510 --> 26:00.790
看到没有 它就反着来播放的啊 然后接下来还有什么呢 还有就是这个

26:01.830 --> 26:05.350
这个alternate这个其实用的挺多的 这个指的就是

26:06.310 --> 26:08.870
激速次 正向播放 偶速次

26:09.350 --> 26:11.670
反向播放 那比如说我这边让我设置个两次

26:13.270 --> 26:17.270
设置个两次 然后加这边的话这个alternate 那它这边就应该是什么

26:17.990 --> 26:21.430
首先 是不是这边一次啊 然后接下来回来

26:22.310 --> 26:25.750
是不是两次啊 对不对 就是一去一回啊

26:26.790 --> 26:31.350
一般就是这个 大家这个就是反了 这个是激速次 反向 偶速次

26:32.230 --> 26:35.590
正向啊 大家还有initial and inculcate

26:36.630 --> 26:43.590
好 你要注意就是无论它是正向播放还是反向播放 都是它都会算一次次数 这个刚我们是比你看到了

26:43.990 --> 26:50.390
对不对 刚我们次数写的是二 然后我们用这个alternate的时候 你会发现它反向播放也会算一次

26:51.110 --> 26:51.910
这个要注意

26:53.270 --> 27:00.070
好 然后加这个fail mode 这个其实就是刚我说的那个 就是播放完毕之后的状态

27:00.950 --> 27:06.550
默认情况下播放完毕之后 它是干嘛呀 回到起点 对不对 这边再来看嘛

27:07.830 --> 27:09.750
这边 刷新

27:11.350 --> 27:15.910
播放完了 这回到起点 对不对 然后加你这边就可以通过这个设置这个

27:16.470 --> 27:22.390
animation fail mode 来设置它播放完了状态 比如你这边你可以设置它是什么呢

27:22.710 --> 27:25.110
这个forwards 代表就是

27:25.590 --> 27:30.950
保持播放 就是动画结束后的这个状态 比如我们把这个 把它设置上

27:31.670 --> 27:32.310
forwards

27:32.950 --> 27:35.030
ok 好 然后加我们这边刷新一下

27:37.120 --> 27:42.320
看到没有 我的div是不是就是停在了动画播放完毕时候的这个位置

27:43.040 --> 27:48.800
看到没有 一般的话其实就这个字用的多 就这个forwards用的多 其他的话你也可以看一下

27:49.040 --> 27:53.120
有这个backwards 其实相当于就是回到它起始的这个状态

27:53.840 --> 27:57.200
那其实就和不设置是不是差不多的 给我们这边我们来看一下

27:57.840 --> 27:58.240
刷新

28:00.470 --> 28:04.070
是不是回去了 对不对 说到这里的话其实就这个字

28:04.790 --> 28:06.550
这个字用的比较多 forwards

28:07.430 --> 28:10.710
好 然后接下来最后一个 最后一个是这个

28:11.670 --> 28:13.670
animation place date

28:14.230 --> 28:19.590
这个是什么呢 这个是就是规定你这个动画 是正在运行还是暂停

28:20.150 --> 28:22.950
啊 就是获取你这个动画 当前这个

28:23.830 --> 28:27.750
呃 不是不是获取当前的状态 而是什么呢 就是

28:28.550 --> 28:30.630
就设置你这个动画 是播放

28:31.190 --> 28:35.030
还是这个暂停 比如我把你的这个animation place date

28:35.430 --> 28:37.190
设置为什么呢 设置为这个purched

28:37.910 --> 28:40.310
那它就是暂停 我设置为running

28:40.790 --> 28:43.750
它就播放啊 比如说我们这边把我们的代码改造一下

28:44.630 --> 28:46.790
怎么改造呢 我们首先让它就是

28:47.510 --> 28:48.470
呃 无限播放

28:50.150 --> 28:51.190
infit

28:51.830 --> 28:53.910
对吧 大家这边啊 alternate

28:54.390 --> 28:56.790
啊 首先我们让它无限播放

28:59.220 --> 29:00.980
OK啊 时间可以设短一点

29:03.360 --> 29:08.640
刷新啊 这边是不是一直播放 对不对 好 然后接下来我们这边我们可以搞一个按钮

29:09.200 --> 29:11.200
有这边在这上面搞一个fart

29:12.160 --> 29:13.840
好 然后接下来这边的话就是啊

29:14.640 --> 29:16.560
呃 一个是暂停

29:18.660 --> 29:19.380
写中文吧

29:20.580 --> 29:21.860
这边的话是暂停

29:23.620 --> 29:24.980
然后这边的话是继续

29:27.670 --> 29:29.750
继续好 这边的话给个id

29:30.870 --> 29:34.950
id的话比如说pausvtn

29:35.350 --> 29:37.270
然后接下来这边id

29:37.590 --> 29:40.310
等于一个比如说play vtn

29:40.710 --> 29:42.790
好 然后接下来我们这边的script

29:43.750 --> 29:46.230
先把这两个按钮拿到

29:47.030 --> 29:52.310
哇 一个这个等于一个document.get element by id

29:53.350 --> 29:54.230
先把它拿到

29:54.550 --> 29:56.150
然后接下来这边的话是这个play

29:57.270 --> 29:58.070
play button

29:58.790 --> 30:00.070
好 然后接下来再把这个

30:02.230 --> 30:03.190
再把这个div

30:04.310 --> 30:05.190
div也拿到

30:07.270 --> 30:09.590
OK 好了 接下来我们来绑实验

30:09.590 --> 30:11.510
如果你按这个play button

30:12.950 --> 30:14.230
当你按了这个之后

30:14.230 --> 30:15.990
那接下来的话我就设置什么呢

30:15.990 --> 30:16.870
我设置这个

30:17.990 --> 30:23.430
设置这个odiv点这个style点什么呢

30:24.550 --> 30:25.190
点这个

30:26.630 --> 30:29.110
这个adimation play state

30:31.190 --> 30:31.910
设置这个

30:31.910 --> 30:33.190
它就应该等于什么呢

30:33.190 --> 30:34.230
等于那个值

30:34.790 --> 30:35.990
它那个值是什么呢

30:37.030 --> 30:38.070
running是吧

30:38.070 --> 30:39.990
running就是动画播放的意思

30:41.030 --> 30:41.830
好 然后接下来

30:41.830 --> 30:43.190
如果你点这个perse

30:44.070 --> 30:44.630
点这个

30:45.110 --> 30:45.830
点这个按钮

30:46.390 --> 30:47.750
那你点这个按钮的话

30:47.750 --> 30:50.070
那这样我就设置它的这个状态是什么呢

30:50.070 --> 30:51.270
就是这个perse

30:52.630 --> 30:52.950
OK

30:54.790 --> 30:56.230
好 那这样我们这边我们来看一下

30:56.790 --> 30:57.190
刷新

30:59.350 --> 31:00.870
OK 这边的话它那个

31:01.750 --> 31:02.870
会把这个按钮挡住

31:02.870 --> 31:04.470
因为它设的绝对定位是吧

31:04.470 --> 31:06.150
我们这边呢把这个再设置一下

31:06.710 --> 31:07.750
这边让我们设置

31:07.750 --> 31:09.190
我就直接拿我这的

31:09.670 --> 31:10.710
拿我这的代码吧

31:10.790 --> 31:11.990
我这边是设置好了的

31:11.990 --> 31:13.270
给了一个top30

31:17.780 --> 31:20.340
OK 这样子它就不会挡住那个按钮了

31:20.340 --> 31:21.860
因为我们设置了绝对定位

31:21.860 --> 31:22.420
是吧

31:22.420 --> 31:24.420
好 那这样我们这边暂停

31:26.820 --> 31:27.780
这边哪写错了

31:29.300 --> 31:30.340
这边没有爆错

31:30.340 --> 31:32.020
没有爆错的话我看一下啊

31:33.140 --> 31:34.180
是不是这个perse的

31:34.180 --> 31:35.220
perse的写错了

31:36.420 --> 31:38.100
adimation play state

31:40.020 --> 31:41.540
adimation play state

31:44.770 --> 31:45.810
style

31:45.810 --> 31:47.490
adimation play state

31:48.370 --> 31:49.970
这个是perse btn

31:53.360 --> 31:55.040
perse btn

31:55.040 --> 31:55.920
这个暂停

32:00.040 --> 32:01.640
哦 这边是unclick是吧

32:01.640 --> 32:03.080
啊 这边少写个c啊

32:03.080 --> 32:03.640
这个也是

32:04.920 --> 32:07.000
OK 好 然后再在这边呢刷新一下

32:07.480 --> 32:09.240
好 那再在这边来暂停

32:09.240 --> 32:09.640
看到没有

32:10.520 --> 32:11.480
你看这个动画是不是

32:11.480 --> 32:12.680
它就暂停播放了

32:12.680 --> 32:13.800
为什么暂停播放了

32:13.800 --> 32:15.400
因为你这边设置它的这个

32:15.400 --> 32:17.560
adimation play state啊这里

32:17.640 --> 32:19.880
设置它的adimation play state 为什么了

32:19.880 --> 32:20.680
是为perse的

32:21.240 --> 32:23.720
perse的你就让这个动画播放暂停了

32:25.080 --> 32:26.920
然后就让我这边让我点这个继续

32:27.560 --> 32:29.000
它是不是继续开始播放

32:29.000 --> 32:30.760
对不对 暂停继续

32:30.760 --> 32:31.560
暂停

32:31.560 --> 32:32.200
看到没有

32:32.200 --> 32:33.560
我这样子我是不是就可以

32:33.560 --> 32:35.960
很好的控制这个动画

32:35.960 --> 32:37.560
它究竟是暂停播放

32:37.560 --> 32:38.520
还是继续播放

32:39.240 --> 32:39.880
看到没有

32:39.880 --> 32:41.640
我这边的话就可以

32:41.640 --> 32:43.320
做这个上面的控制

32:43.320 --> 32:44.840
所以你看一下这里啊

32:44.840 --> 32:46.200
adimation play state

32:46.760 --> 32:47.800
规定动画

32:47.800 --> 32:49.880
正在运行还是暂停

32:49.880 --> 32:51.000
也很好理解

32:51.000 --> 32:51.560
是吧

32:51.560 --> 32:52.200
很好理解

32:53.000 --> 32:53.880
ok

32:53.880 --> 32:55.480
最后的话就是关于这个

32:55.480 --> 32:56.600
动画对应的事件

32:57.160 --> 32:58.760
它和这个过渡不一样

32:58.760 --> 33:00.520
过渡的话它只提供了什么呢

33:00.520 --> 33:02.360
只提供了这个trization end

33:02.920 --> 33:05.000
就当我过渡完成之后

33:05.800 --> 33:07.720
我这边触发这个trization end

33:08.280 --> 33:09.640
过渡的话就只有这个

33:09.640 --> 33:10.840
但是adimation的话

33:10.840 --> 33:12.200
它会有三个事件

33:12.200 --> 33:12.920
哪三个呢

33:12.920 --> 33:14.760
一个是adimation start

33:14.760 --> 33:17.320
adimation inter iteration

33:17.320 --> 33:19.880
和这个adimation end

33:19.880 --> 33:22.440
start就是开始的时候触发

33:22.440 --> 33:25.240
iterration就是重复播放的时候触发

33:25.240 --> 33:27.560
然后接下来这边这个end就是

33:27.560 --> 33:28.840
结束后

33:28.840 --> 33:31.400
你这个动画播放完成了

33:31.400 --> 33:32.440
触发

33:32.440 --> 33:33.720
也非常的简单

33:33.720 --> 33:34.760
这个我就不失利了

33:34.760 --> 33:36.280
你下来可以自己试一下

33:36.280 --> 33:37.160
明白没有

33:37.160 --> 33:38.840
这个非常的简单

33:38.840 --> 33:39.880
ok

33:39.880 --> 33:40.600
好

33:40.600 --> 33:42.280
接下来回到我们的这个整体

33:43.240 --> 33:47.640
CS3中trization和adimation属性分别有哪些

33:47.640 --> 33:49.160
那你回头现在再来看这道题子

33:49.160 --> 33:50.360
不就很简单了

33:50.360 --> 33:50.760
对不对

33:50.760 --> 33:54.120
你把我上面写的那个trization的属性

33:54.120 --> 33:55.400
和adimation的属性

33:55.400 --> 33:57.400
那你把它就是挪裂出来

33:57.400 --> 33:58.680
挪裂出来之后

33:58.680 --> 34:00.200
然后接下来这边

34:00.200 --> 34:01.560
大致介绍一下

34:01.560 --> 34:02.840
那就可以了

34:02.840 --> 34:03.880
第二个

34:03.880 --> 34:07.160
CS动画如何实现

34:07.160 --> 34:09.000
如何实现是不是分两步

34:09.000 --> 34:10.920
首先的话是不是先要定义

34:11.080 --> 34:11.800
定义了之后

34:11.800 --> 34:13.960
然后接下来是不是再去用

34:13.960 --> 34:15.640
主要就是这样子来实现了

34:15.640 --> 34:16.920
然后接下来用这个

34:16.920 --> 34:18.280
使用CS做动画

34:18.280 --> 34:20.760
那有这么一些属性

34:20.760 --> 34:23.240
然后其他就没什么了

34:23.240 --> 34:25.960
其实这两个面试题其实挺简单的

34:25.960 --> 34:27.560
只不过通过这道面试题的话

34:27.560 --> 34:30.360
然后我们把这个trization和这个adimation

34:30.360 --> 34:33.240
我们再把这两个C3的新特性

34:33.240 --> 34:35.400
我们再把它过一下

34:35.400 --> 34:35.960
下来的话

34:35.960 --> 34:39.240
大家自己把这个整个这个过度和动画

34:39.240 --> 34:40.680
自己试一试

34:40.680 --> 34:41.720
下来写一写

34:41.720 --> 34:43.080
挺有意思的这个

34:43.080 --> 34:45.000
特别是刚刚开始接触的时候

34:45.000 --> 34:48.280
会觉得这个东西也非常好玩

34:48.280 --> 34:50.120
好这节课就先到这里

34:50.120 --> 34:51.240
再见

