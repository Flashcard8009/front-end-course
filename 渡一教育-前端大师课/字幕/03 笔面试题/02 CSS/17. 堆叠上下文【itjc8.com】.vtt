WEBVTT

00:00.690 --> 00:05.290
好 大家好 我是谢老师 这节课的话 我们来看一下这个知识点

00:05.550 --> 00:07.090
沉迭上下文

00:07.350 --> 00:11.690
首先的话 这边的话 还是一道经典整体 这里的话他问你

00:11.950 --> 00:15.530
请减速什么是沉迭上下文

00:15.790 --> 00:21.690
以及什么呢 以及这个什么是沉迭等级 还有什么是沉迭顺序

00:22.190 --> 00:26.290
你看这边的话 涉及到让你减速这边 好几个这个概念

00:26.690 --> 00:30.890
对不对 好 那我们这边的话 我们一个一个来看 那我们首先的话来看这个

00:31.150 --> 00:31.930
沉迭上下文

00:33.210 --> 00:38.070
在介绍这个沉迭上下文之前的话 我们首先要介绍一下这个HTML文档中

00:38.330 --> 00:39.850
一个这个三维的这个概念

00:40.370 --> 00:43.190
这个的话 其实在之前讲这个变形的时候

00:43.690 --> 00:48.810
你如果听过我的变形啊 就是在讲这个3D变形的时候 这个是介绍过的

00:49.330 --> 00:50.610
这个说的是什么呢

00:51.130 --> 00:53.930
就是我们平时的话 我们从这个设备中端

00:54.650 --> 00:59.250
我们看我们的这个HTML文档 他都是一个什么呢 都是一个平面的

00:59.770 --> 01:01.810
比如说举个例子 比如说我这边的话

01:02.330 --> 01:03.610
打开了这个淘宝

01:04.130 --> 01:06.170
对不对 淘宝的话你看这边

01:06.690 --> 01:10.530
当我浏览这个淘宝的这个首页的时候 他就是一个HTML文档嘛

01:11.290 --> 01:14.370
对不对 那这边的话 我们看上去他是一个平面的

01:14.870 --> 01:17.170
对吧 但是呢 实际上

01:17.690 --> 01:22.810
实际上 实际上的话 我们HTML文档中的这个元素

01:23.010 --> 01:25.690
它是存在于三个维度中的

01:26.610 --> 01:31.050
哪三个维度呢 有一个x是走 有一个y走

01:31.450 --> 01:34.010
还有一个什么呢 还有一个z走

01:34.850 --> 01:36.610
看到没有 还有一个z走

01:37.210 --> 01:39.930
x是走的话 他表示的是水平位置

01:40.370 --> 01:42.810
而这个y走的话 表示的是这个垂直位置

01:43.130 --> 01:43.930
而这个z走

01:44.250 --> 01:49.530
z走的话 他就表示了 屏幕由内向外的这个位置

01:50.010 --> 01:53.570
这边的话 我有一张图啊 有一张图 你看这个图就非常好理解

01:54.090 --> 01:58.890
这个的话是x走 这个是y走 好 然后接下来的话 这边

01:59.610 --> 02:00.490
这边是不是就是这一种

02:01.650 --> 02:06.810
对不对 面向就是就是离我们这个 就是面向我们这个屏幕观察者的

02:07.370 --> 02:10.570
啊 面向我们这个屏幕观察者啊 ok

02:11.290 --> 02:14.610
好 然后我们这边的话 我们要讨论了这个成谍上下文

02:15.090 --> 02:19.050
他就是我们HTML中一个什么呢 一个三维的这个概念

02:19.690 --> 02:27.370
啊 如果一个这个元素 他含有这个成谍上下文 那么他在这个z走上面 他就高人意的

02:28.290 --> 02:33.130
啊 那他最终的表现是什么呢 最终的表现就是他离我们的这个屏幕观察者

02:33.570 --> 02:38.170
更近啊 其实再说通俗一点就是什么呢 就是就是你两个元素

02:39.050 --> 02:41.890
比如说折叠了 对不对 谁盖住谁

02:42.690 --> 02:48.690
一般来讲的话 你离这个屏幕观察者更近的 他是不是会盖住这个离屏幕观察者更远的

02:49.410 --> 02:55.930
对不对 说主要就是讨论一个啊 你这个元素 就是重叠的时候 谁盖住谁

02:56.570 --> 02:58.370
ok啊 好

02:59.370 --> 03:04.490
那现在的话 我们来看一下啊 这边啊 这个 我如果想让一个元素更加靠前

03:05.130 --> 03:07.290
那我干嘛呢 我就给他创建一个

03:07.850 --> 03:13.410
成谍上下文 那具体的创建方法有哪些呢 我们来看一下啊 首先的话 这边有三种

03:14.050 --> 03:20.650
第一个的话 就是我们HTML中的这个根元素 就HTML那个标签 他本身就是一个

03:21.050 --> 03:24.250
成谍上下文啊 我们称之为什么呢 称之为这个根

03:24.970 --> 03:30.290
这个成谍上下文 ok 啊 正常情况下的话 就是你如果没有其他元素

03:30.930 --> 03:38.130
啊 没有设置任何的这个成谍上下文的话 那这个整个文档里面就一个成谍上下文 就是什么呢 就是这个HTML

03:38.570 --> 03:40.850
根成谍上下文 ok

03:41.810 --> 03:45.850
好 然后如果我要手动设置的话 啊 比如说我是一个普通元素

03:46.410 --> 03:51.050
普通元素我要手动设置 怎么设置呢 首先的话我要给他设置定位

03:51.930 --> 03:53.850
啊 定位的话就是这个POSITION属性

03:54.650 --> 04:00.210
当我们知道这个POSITION属性他有五个 对不对 有五个 那这里的话就是非Static

04:01.050 --> 04:04.250
啊 也就是说非静态定位 因为我默认是不是就是静态定位

04:04.970 --> 04:10.730
对不对 说这里的话首先第一个条件 你这边的话要设置定位 定位的值是非Static

04:11.250 --> 04:15.690
然后接下来 第二个条件 要设置什么呢 要设置ZIN DEX

04:16.450 --> 04:17.370
啊 要设置这个值

04:18.090 --> 04:23.650
当你啊 具备这两个条件的时候 那这个普通元素的话 他也会

04:24.250 --> 04:26.610
啊 产生一个成谍上下文

04:27.530 --> 04:31.250
看到没有 他也会产生一个成谍上下文啊

04:32.010 --> 04:36.890
然后接下来第三个 第三个就是什么呢 第三个就是我们的这个CSS3

04:37.610 --> 04:40.090
CSS3里面有一些这个新属性

04:40.810 --> 04:46.610
这些新属性的话 也可以产生这个成谍上下文啊 那我们这边的话一会我们来看一下

04:47.210 --> 04:47.450
好吧

04:48.330 --> 04:53.090
ok 好 那接下来我们这边赶紧来试验一下啊 我这边那举了一个很简单的例子

04:53.570 --> 04:56.610
比如说我这边的话有两个DIV 我们这边来看一下

04:57.330 --> 05:04.370
好 两个DIV一个是DIV1一个是DIV2 好 然后接下来的话我这边让我来设置这个样式

05:04.570 --> 05:09.690
好 然后接下来我就 这个样式很简单 我就直接把他拷贝过去

05:10.650 --> 05:16.970
这边的话 给了一个style 我们来简单看一下嘛 这边的话这个DIV宽200高200

05:17.610 --> 05:18.410
然后接下来1

05:19.130 --> 05:24.250
是锐的 然后接下来2是有一个这个blue 好 然后接下来第二个这个

05:25.250 --> 05:28.970
第二个DIV我设置了一个margin top 怎么我设置的是一个负值

05:29.450 --> 05:34.490
负100 那此时的话两个DIV是不是就会产生一个折叠现象

05:35.250 --> 05:37.130
对不对 好 那我们这边我们来看一下

05:38.570 --> 05:39.370
好 我们这边打开

05:40.490 --> 05:49.050
打开之后啊 你看一下 那现在的话默认就是谁盖住谁 是不是第二个这个DIV盖住第一个DIV

05:50.250 --> 05:52.770
对不对 第二个盖住第一个

05:53.930 --> 05:58.290
为什么啊 原因很简单 你这边的话 现在的话

05:59.690 --> 06:09.170
现在的话 他们两个这个DIV 对于他们两个来讲的话 他们你没有设置这个层叠上下温 那现在的话 他们就是处于什么呢 处于这个跟

06:09.770 --> 06:11.850
层叠上下温 就是这个html

06:12.410 --> 06:17.930
就这个html跟层叠上下温里面 好 然后接下来这两个的话 那现在他的这个

06:18.410 --> 06:22.130
层叠的顺序就是什么呢 就是哪个在后面

06:22.730 --> 06:27.050
就哪个就盖住谁 你看这个tu tu的话是不是在这个1

06:27.690 --> 06:35.930
后面 对不对 说说他就满足什么呢 后来居上原则 就后面的元素会盖住前面的元素

06:36.810 --> 06:44.170
哎 这个很好理解吧 对不对 好 然后接下来的话 我这边 我做一件事情 我做什么事情呢

06:45.290 --> 06:50.330
我这边的话 我给这个1 设置了一个position relative

06:51.290 --> 06:57.370
是不是设置了一个定位 对不对 然后同时的话 我设置了一个什么呢 设置了一个z杠英dex

06:57.770 --> 07:07.210
好 那不得了 那你这边的话 你这个1这个元素 他就会产生一个什么呀 他就会产生一个层叠上下温

07:08.210 --> 07:13.690
对不对 他产生一个层叠上下温 根据我们刚才所讲的 你产生这个层叠上下温啊

07:14.170 --> 07:22.410
呃 这边产生了这个 如果一个元素含有层叠上下温 他就什么呢 他就是在这轴上面高人意的

07:23.050 --> 07:27.050
啊 最终表现就是什么呢 就是他离屏幕观察者更近

07:27.930 --> 07:31.290
那既然他离屏幕观察者更近了 那就应该是谁盖住谁

07:31.930 --> 07:34.650
是不是应该红色的这个diy 盖住这个

07:35.290 --> 07:38.250
蓝色的diy 对不对 好 那我们这边 我来试一下

07:38.970 --> 07:46.330
好 我们这边的话 把它打开啊 我们这边这样子啊 大家可以实实的看到这个效果 好 我们这边给红色的

07:46.970 --> 07:49.050
设置一个position relative

07:49.610 --> 07:52.490
然后设置个z index 给个1

07:52.970 --> 07:58.330
好 根据刚才所讲的 当你设置了这两个属性之后 让我的这个1

07:59.210 --> 08:01.770
1的话 是不是就是有这个成叠上下温

08:02.730 --> 08:06.330
对不对啊 具备这个成立 他就会生成一个成叠上下温

08:06.730 --> 08:10.170
那他的话 就会比你的这个普通元素 是不是高人一等啊

08:11.050 --> 08:13.690
对不对 高人一等 好 那接下来我们这边保存

08:15.450 --> 08:20.490
你看 这边的话 是不是就是红色的这个 盖住了蓝色的这个

08:21.450 --> 08:26.490
看到没有 你看这个的话 就是一个成立上下温 一个这个最快速的一个势力

08:27.130 --> 08:29.530
ok 看上去的话 是不是还是挺简单的

08:30.170 --> 08:34.970
对不对 好 那这个东西真的就这么简单吗 其实不是啊 其实不是

08:35.450 --> 08:37.530
这里面的话 其实还会涉及到一些

08:38.090 --> 08:40.970
深层次的概念 那我们这边我们来看一下啊

08:41.610 --> 08:45.450
那这里的话 还会涉及到什么呢 一个就是成叠等级

08:46.250 --> 08:49.130
另外一个是成叠顺序

08:49.930 --> 08:53.050
ok 这两个东西 这两个概念啊 我们一个个来看

08:53.610 --> 08:55.130
首先的话 这个成叠等级

08:55.690 --> 08:59.930
成叠等级的话 这个英语叫做这个stacking level

09:00.490 --> 09:03.210
他是什么呢 他是一个偏概念的东西

09:04.170 --> 09:05.930
他指的是什么呢 他指的是

09:06.330 --> 09:12.250
如果两个元素 两个元素在同一个成叠上下温中

09:13.050 --> 09:16.090
两个元素如果在同一个成叠上下温中 然后呢

09:16.650 --> 09:18.330
成叠等级越大

09:18.970 --> 09:23.210
你的这个元素等级越高 他就干嘛呢 他就越靠前

09:24.010 --> 09:25.370
看到没有 他是一个偏概念

09:25.770 --> 09:27.370
一个偏概念的这个描述

09:27.930 --> 09:29.610
好了 接下来这里就会有个问题

09:30.330 --> 09:35.770
什么问题呢 你说这边成叠 这个成叠等级越大的元素越靠前

09:36.010 --> 09:38.330
我怎么知道他成叠等级大不大呀

09:39.610 --> 09:40.090
对不对

09:40.330 --> 09:44.730
有朋友说 这个我设置就好了吗 我设置那个z-index

09:45.450 --> 09:48.250
啊z-index 然后接下来 我这边给他设置

09:48.810 --> 09:52.650
设置的值越大 他的等级就越大呗啊 这个他确实是

09:52.890 --> 09:57.530
你可以通过z-index来设置这个成叠等级 但是呢

09:57.690 --> 10:03.130
他这个成叠等级 其实更多的是通过什么呢 通过成叠顺序来

10:03.370 --> 10:03.930
体现的

10:05.210 --> 10:05.610
知道吧

10:05.850 --> 10:08.090
不是说你光设置一个成叠

10:08.330 --> 10:12.330
这个成叠等级啊 我把那个纸z-index设置大一点

10:13.130 --> 10:18.490
啊 他这个等级就很高啊 不是 这里还有一个很关键的东西 叫做成叠顺序

10:18.970 --> 10:22.250
啊 成叠顺序的话 这边叫做stacking order

10:22.650 --> 10:24.810
他就是一个具体的规则了

10:25.290 --> 10:26.730
那我们这边我们来看一下啊

10:27.690 --> 10:35.690
在这个css2.1的这个年代啊 注意是css2.1啊 就是这边我们先不讨论css3

10:36.170 --> 10:42.810
先不讨论css3啊 那我们的这个成叠顺序遵循什么呢 遵循下面这张图

10:44.090 --> 10:48.890
你看一下 首先的话这个成叠上下文这个背景啊 他是在最下面的

10:49.370 --> 10:51.770
然后接下来z-index为这个负

10:52.410 --> 10:54.410
好 然后接下来的话 这边的话是这个

10:54.970 --> 11:02.730
啊block啊块和 然后接下来这边浮动的这个盒子 然后接下来的话这个行内盒 然后接下来z-index auto

11:03.210 --> 11:06.970
啊 然后接下z-index0 然后接下z-index 为正

11:07.450 --> 11:10.730
你看这边的话是不是会有这么几个这个不同的这个顺序

11:11.690 --> 11:15.050
对不对 说不是说简单的我把这个z-index

11:16.250 --> 11:21.210
设置的越大 它的等级就越高 你比如说你现在的话处于这个成绩

11:21.770 --> 11:24.810
那个成绩 就是这边的话你是属于这个bankground的

11:25.370 --> 11:26.410
啊 设置这个背景

11:26.970 --> 11:28.730
那你如果现在是处于这个

11:29.210 --> 11:32.090
成绩的话 你把那个z-index你无论

11:32.650 --> 11:35.610
设置的为多大 你都不可能超过这个成绩

11:36.170 --> 11:40.410
看了没有 比如说我在这个成绩 我在这个成绩 这个成绩我哪怕我把这个z-index

11:41.130 --> 11:42.170
设置为负的

11:42.410 --> 11:43.770
而且很小很小

11:44.090 --> 11:46.330
然后这边的话 我现在处于这个成绩

11:46.730 --> 11:50.410
我把这个z-index设置得很大很大很大 但是你都不可能

11:50.810 --> 11:51.690
跨越它

11:52.730 --> 11:53.210
知道吧

11:53.530 --> 11:55.530
说真真真正的决定这个成

11:55.770 --> 11:58.090
这个成 这个成绩等级的

11:58.330 --> 12:00.410
它是什么呢 它是成绩顺序

12:01.530 --> 12:05.530
啊 我再说一遍啊 就是决定你成这个成绩等级

12:06.010 --> 12:10.890
究竟是大还是小 它是靠什么来决定的呢 靠成绩顺序来

12:11.930 --> 12:12.650
这个决定的

12:13.210 --> 12:17.290
啊 但是你如果这个成绩顺序 比如说我现在就在同一层 我们现在都在这一层

12:18.010 --> 12:19.050
看了没有

12:19.290 --> 12:22.010
都在这一层 那都在这一层的话 那就是根据什么了

12:22.250 --> 12:24.410
根据你这个z-index的值

12:24.650 --> 12:26.090
对不对 值越大

12:26.330 --> 12:27.610
它等级越高

12:28.650 --> 12:29.290
明白吧

12:29.770 --> 12:30.250
OK

12:30.570 --> 12:33.850
这边是关于这个成绩等级和成绩顺序

12:34.250 --> 12:37.210
一个是概念 一个是具体的规则

12:37.530 --> 12:38.970
成绩等级是概念

12:39.530 --> 12:41.210
对不对 等级越高

12:41.450 --> 12:42.330
它越靠前

12:42.570 --> 12:44.410
而这个成绩顺序它就是具体的

12:44.890 --> 12:48.650
规则了 究竟谁在最下面 谁在第2层 谁在第3层

12:48.890 --> 12:50.010
是不是有个具体的规则

12:50.810 --> 12:51.290
对不对

12:53.050 --> 12:55.050
好 那接下来我们这边来看一下

12:55.290 --> 13:00.090
刚才的话讨论的是什么呢 讨论是两个元素 它如果在同一个

13:00.330 --> 13:01.290
成绩上下纹

13:01.770 --> 13:02.330
里面

13:02.570 --> 13:05.450
我们现在的话 我们两个处于同一个成绩上下纹中

13:05.690 --> 13:08.090
好 那接下来这边比较的话 就是按照这个

13:08.330 --> 13:09.770
成绩顺序来比较

13:10.010 --> 13:11.530
好 那这里的话还有一种情况

13:12.330 --> 13:12.970
什么情况呢

13:13.290 --> 13:16.810
如果我两个元素不在同一个

13:17.050 --> 13:18.330
成绩上下纹中

13:19.370 --> 13:21.690
我两个元素下个就没有在这个

13:21.930 --> 13:25.290
就是同一个成绩上下纹中 那这个时候怎么比较呢

13:25.530 --> 13:30.650
这个时候比较的就是他们所在的成绩上下纹的这个

13:30.890 --> 13:31.930
成绩等级

13:32.170 --> 13:34.490
也就是所谓的重复现象

13:34.970 --> 13:36.250
重复 什么意思

13:36.490 --> 13:37.290
就是比如说

13:37.530 --> 13:39.850
一会我会举例子

13:40.090 --> 13:41.370
我一会会举例子

13:41.690 --> 13:43.370
这里我举了一个生活中的例子

13:43.930 --> 13:46.730
我们来看一下吧 假设的话有一个这个官员A

13:46.970 --> 13:48.490
他是这个审级领导

13:49.050 --> 13:49.850
他是审级的

13:50.090 --> 13:52.650
另外一个什么呢 另外一个领导他是宪级的

13:52.890 --> 13:54.730
一个宪级领导 一个宪级领导

13:55.210 --> 13:58.010
宪级领导下面他有一个秘书 他有一个保姆

13:58.250 --> 14:01.610
宪级领导 他也有一个秘书 也有一个保姆

14:02.090 --> 14:04.170
那请问 那我这边的话

14:04.650 --> 14:09.530
我这个A1 A-1和B-1 虽然都是秘书

14:09.730 --> 14:11.530
但是你觉得这两个有没有可比性

14:12.290 --> 14:13.830
这完全没有可比性

14:14.090 --> 14:17.410
对不对 我一个是审级的 一个你这个是宪级的

14:17.690 --> 14:21.510
对不对 让我这个秘书 我这个秘书肯定是比你的这个秘书

14:21.770 --> 14:22.790
这个B-1

14:23.050 --> 14:23.810
是不是要大

14:24.070 --> 14:27.910
对不对 甚至我这边的话 我这个审级的这个保姆

14:28.170 --> 14:29.970
我的一个小保姆

14:30.230 --> 14:33.810
我的等级都比你的这个宪级领导的这个秘书

14:34.070 --> 14:35.330
等级要高得多

14:36.050 --> 14:41.170
克伦比奥 说他比的就是他们所处的这个成叠上下文的成叠等级

14:41.430 --> 14:43.210
以后我们举个例子 大家就知道

14:43.990 --> 14:44.490
好吧

14:44.750 --> 14:45.270
ok

14:45.770 --> 14:49.870
好 然后关于现在的话这个概念啊 概念的话就讲完了

14:50.130 --> 14:53.710
那接下来的话 我们这边就来看一些这个实战的这个案例

14:53.970 --> 14:57.030
通过这些实战的案例的话 我们来加深

14:57.290 --> 14:59.350
对这个成叠上下文的一个理解

15:01.130 --> 15:05.230
那在讲这个实战案例之前的话 我们这边的话先来做一个总结

15:05.530 --> 15:10.950
那这边的话就是这个成叠上下文 他的这个等级究竟是如何进行判断的呢

15:11.210 --> 15:11.990
首先看

15:12.250 --> 15:16.330
比较的两个元素是否在同一个

15:16.590 --> 15:17.870
成叠上下文中

15:18.650 --> 15:19.930
克伦比奥 首先比较

15:20.190 --> 15:21.710
好 如果是

15:22.490 --> 15:23.250
如果是

15:23.510 --> 15:26.830
那如果是的话 那就是谁的这个成叠等级大

15:27.090 --> 15:28.110
谁就在上面

15:28.630 --> 15:30.930
那我怎么看这个成叠等级大呢

15:31.190 --> 15:34.770
是不是根据上面的这个成叠顺序图啊

15:35.790 --> 15:38.350
对不对 根据这个成叠顺序图啊

15:38.610 --> 15:42.710
好 那接下来如果两个元素没有在同一个成叠上下文中

15:43.210 --> 15:48.070
那我比较什么 这我们比较他的这个成叠上下文的这个

15:48.330 --> 15:49.110
成叠等级

15:49.870 --> 15:52.430
对不对 比较这个成叠上下文的成叠等级

15:52.690 --> 15:54.230
一会会举例子

15:54.490 --> 15:55.510
好 接下来

15:56.270 --> 16:03.710
如果两个元素 他的这个成叠这个成叠等级也相同 成叠顺序也相同 也就是什么都相同

16:03.930 --> 16:06.730
那这个时候就是什么 这个时候就是后来居上

16:07.490 --> 16:08.530
后来居上

16:08.790 --> 16:15.950
就是动物结构中后面的元素 他的这个成叠等级在前面的元素

16:16.210 --> 16:16.710
至上

16:17.230 --> 16:20.310
OK 这边就是做了这么一个总结

16:20.570 --> 16:24.130
你回头的话 每次你做这个成叠上下文的这个题的时候

16:24.390 --> 16:25.170
你可以把这个

16:25.430 --> 16:27.990
就是这一块 自己拿出来再看一看

16:28.750 --> 16:29.250
好吧

16:29.510 --> 16:32.070
好 那接下来我们就要开始来写这个例子了

16:32.270 --> 16:34.490
写一点这个实际的例子

16:34.750 --> 16:36.890
来加深大家的这个印象

16:37.390 --> 16:42.790
OK 好 那我这边呢 这个势力一 我就先把这个 我直接把HTML结构 我把它拿过来

16:44.190 --> 16:45.070
HTML结构

16:46.110 --> 16:48.910
好 拿过来 拿过来之后 我们这边我们看一下

16:49.170 --> 16:50.190
这边有两个盒子

16:50.710 --> 16:52.750
一个1 一个这个2

16:53.270 --> 16:57.110
对不对 然后接下来两个盒子里面又分别有什么呢 有这个纸盒子

16:57.590 --> 17:05.950
啊 纸 就是他们的纸元数 纸元数的话 然后接下来的话 这边的话 设置了Zindex是99 这边的话 设置Zindex是1

17:06.210 --> 17:10.630
那很明显 他的Zindex是99 要比他什么大的多

17:11.150 --> 17:15.510
对不对啊 当然你现在的话 没有设置这个定位 还没有任何意义

17:15.950 --> 17:17.990
好 我们这边把这边的这个代码把它补全

17:19.350 --> 17:21.550
OK 好 这边我们首先DIV

17:23.310 --> 17:26.230
DIV的话 宽给个200 高给个

17:26.910 --> 17:27.270
200

17:27.990 --> 17:31.350
啊 好 然后接下来的话 这边这边的话 点1

17:32.270 --> 17:34.510
点万是谁 点万是不是这个大盒子

17:35.350 --> 17:42.750
对不对 就这就是这边第一个啊 第一个部分 点万的话 我这边我给了他一个 边光的canner

17:43.470 --> 17:49.070
锐的 好 然后接下来的话 这边Position Relative 然后Zindex

17:50.550 --> 17:54.390
一啊 我这边的话 直接把拿过来吧 我这边就不敲了啊

17:55.190 --> 17:59.960
这边拿过来 我们直接拿过来分析 把他拿过来

18:02.040 --> 18:06.400
拿过来之后 我们来看一下啊 首先的话 我们这边先不考虑这个item

18:07.280 --> 18:12.200
啊 我们把东西弄简单一点 对吧 先不考虑item 好 那接下来我们这边 我们来看一下

18:13.080 --> 18:14.200
来到我们的浏览器

18:15.960 --> 18:17.040
啊 这边保存一下

18:18.600 --> 18:25.240
OK 那现在的话就是什么呢 现在就是简简单单的 有一个DIV1 那这个是我们的DIV1

18:25.880 --> 18:32.360
有一个DIV2 那这个是我们的DIV2啊 对不对 然后接下来一个1一个2

18:32.840 --> 18:34.920
啊 然后接下来他们的话 1和2

18:35.680 --> 18:37.160
有没有这个承迭上下文

18:38.160 --> 18:43.720
有没有 有 对不对 有为什么你这个1你设置了定位 然后设置了Zindex

18:44.160 --> 18:47.360
好 然后接下来这个2也设置了定位 设置了Zindex

18:48.120 --> 18:51.160
OK 对不对 好那接下来 第2个问题

18:51.880 --> 18:58.960
他们两个这个承迭上下文 哈 就这两个 这个承迭上下文和这个承迭上下文 谁的等级高

19:00.440 --> 19:01.080
谁的等级高

19:01.760 --> 19:09.120
这很明显这个2的等级高 为什么 因为他的这个Zindex值为2 你的Zindex值是多少 这不1啊

19:09.960 --> 19:13.880
对不对 1 OK 好 然后接下来我们把这个注射打开

19:16.380 --> 19:17.380
好 我们把这个注射打开

19:18.380 --> 19:23.340
这里的话 1下面有个指约数 2下面也有一个指约数

19:24.260 --> 19:31.820
对不对 好 两个指约数的话都是什么 首先都是定位了的 对不对 都是定位的了 好 然后接下来这边都设置了Zindex

19:32.500 --> 19:38.020
啊 都设置Zindex 好 那接下来的话 我们这边我们来看一下 我这边一保存

19:39.860 --> 19:46.340
好 你这边看一下 1下面的这个盒子是什么呢 是这个black 也就是说是一个这个黑色的盒子

19:46.820 --> 19:54.060
黑色 但是他是这个宽高100啊100 好2 2的话 他这边的话 也是一个宽高色100

19:54.900 --> 19:56.500
啊 你看一下 现在谁盖住谁

19:57.700 --> 20:01.820
谁盖住谁 是不是很明显这个2下面的这个指约数

20:02.420 --> 20:06.060
盖住了什么呀 是不是盖住了1下面的指约数

20:07.140 --> 20:12.060
对不对 明明我这个1下面的这个指约数 我Zindex是99

20:12.980 --> 20:21.300
对不对 比你这个大得多 为什么是你盖住我 而不是说我这个黑色的 盖住粉色的

20:22.060 --> 20:24.580
啊 偏偏是粉色的 盖住黑色的

20:25.460 --> 20:28.140
啊 回头的话 来看 反复来找

20:28.860 --> 20:33.820
啊 我们这边也来看 首先的话 他们两个是否处于同一个层谍上下文

20:35.620 --> 20:36.820
有没有在同一个层谍上下文

20:37.700 --> 20:46.540
有没有 你这边你回头看一下有没有 是没有啊 对不对 对于这个item来讲 他所处的这个层谍上下文 他往上找 是不找到这个1

20:47.340 --> 20:51.420
对不对 这个item他所处的层谍上下文 往上找 是不找到这个2

20:52.500 --> 21:00.100
对不对 好 他们没有处在同一个层谍上下文 那么如果不处在同一个层谍上下文 比较什么

21:00.580 --> 21:05.460
是比较的是他们所处的层谍上下文的层谍等级

21:06.420 --> 21:10.420
对不对 也就是最终比较的是这个1和2的

21:11.180 --> 21:17.620
层谍等级 那1和2的层谍等级谁大 你看一下 是很明显这个2要大呀

21:18.820 --> 21:23.100
对不对 这个2要大 啊 说说最终的话 无论你这个指源数

21:24.700 --> 21:31.140
无论你的这个指源数啊 你的zindex有多大 那不好意思 你所处的这个层谍上下文

21:32.020 --> 21:39.860
层谍上下文就比这个另外一个指源数 他所处的层谍上下文 等级要低 说无论你多大 你都是

21:40.540 --> 21:42.940
被这个第2个 这个压着的

21:43.820 --> 21:47.860
看到没有 被第2个压着的 啊 这个就是我们所讲的 这里

21:50.780 --> 21:53.180
这里啊 所谓的重复现象

21:54.220 --> 21:56.060
看到没有 重复现象啊

21:57.180 --> 21:59.260
好 这是第1个实力 ok

22:00.220 --> 22:02.460
好 那接下来 我们这边 我们来看第2个实力

22:03.460 --> 22:05.580
啊 把这个人还是重新拿过来啊

22:07.880 --> 22:08.560
好 把这

22:09.320 --> 22:09.880
拿过来

22:10.920 --> 22:13.840
格式画一下 然后接下来 把这个样式

22:15.840 --> 22:16.360
把他拿过来

22:17.880 --> 22:19.080
好 然后这里

22:22.280 --> 22:22.760
把他拿过来

22:23.640 --> 22:27.440
ok 格式画一下 好 那接下来这个 这个的话 我们来观察一下

22:28.280 --> 22:31.560
首先的话 这边仍然是box1下面有个翘的1

22:32.040 --> 22:34.280
box2下面有一个翘的2

22:35.080 --> 22:35.360
对不对

22:36.640 --> 22:38.960
好 我们上去的话 看一下这个cs结构

22:39.600 --> 22:44.640
cs结构的话 这个box1 box2 都设置了什么 都设置了relative

22:45.720 --> 22:49.440
啊 但是虽然设置了relative 但是有没有设置zindex

22:50.960 --> 22:51.600
有没有设置啊

22:52.360 --> 22:53.760
说没有设置zindex啊

22:54.400 --> 22:58.080
对不对 没有设置zindex 他们会不会生成这个层谍上下文

22:58.600 --> 22:59.360
这不会生产

23:00.120 --> 23:06.520
对不对 那么对于这个chow的1和chow的2来讲 他们两是不是处于同一个

23:07.040 --> 23:07.560
层谍上下文

23:08.320 --> 23:11.400
注意哈 你这边的话 你可以把视频暂停了 自己思考一下

23:12.680 --> 23:15.480
是不是处于同一个层谍上下文

23:16.000 --> 23:16.760
是不是啊

23:17.280 --> 23:20.880
对不对 你不要看着这边啊 这个浅套 他在这个box1下面

23:21.120 --> 23:22.400
这个在box2下面

23:22.640 --> 23:26.240
但是你box1和box2 你压根就没有产生

23:26.440 --> 23:29.520
层谍上下文 说chow的1、chow的2

23:29.780 --> 23:32.840
他们仍然是什么呢 仍然是处于同一个

23:33.100 --> 23:36.940
层谍上下文 哪个层谍上下文呢 就是我们的这个html

23:37.200 --> 23:37.720
跟

23:37.980 --> 23:38.740
层谍上下文

23:39.240 --> 23:39.760
OK

23:40.280 --> 23:44.360
好 那他们处于这个同一个层谍上下文的话 那比较就是比较什么

23:44.620 --> 23:46.420
是比较这个zindex啊

23:48.200 --> 23:49.480
对不对 比较zindex

23:49.740 --> 23:51.540
zindex值 谁大

23:51.800 --> 23:52.560
谁就在上面

23:52.760 --> 23:56.860
所以说应该是这个盒子 就宽200 高100的在上面

23:57.380 --> 24:00.440
然后宽100 高200的在下面

24:00.700 --> 24:02.240
好 那我们这边我们来看一下

24:03.260 --> 24:04.300
这边保存

24:05.060 --> 24:05.560
你看

24:05.820 --> 24:07.360
是不是这个盒子在上面

24:07.880 --> 24:08.900
这个盒子在

24:09.160 --> 24:09.660
下面

24:10.440 --> 24:11.200
对不对

24:11.460 --> 24:11.960
OK

24:12.480 --> 24:15.800
好 然后接下来的话 下一步 下一道题

24:17.080 --> 24:18.360
下道题 4D3

24:18.880 --> 24:21.700
4D3的话 我们就把上面的这个css

24:21.900 --> 24:23.440
我们稍做修改

24:23.960 --> 24:30.100
稍微做一个修改 我们给这边box1和box2 我们干嘛呢 我们这边的话添加这两个代码

24:30.360 --> 24:32.920
你注意 添加了这两个代码之后

24:33.180 --> 24:34.200
结果就不一样了

24:37.110 --> 24:39.170
这个relative本身就有 是吧 OK

24:39.430 --> 24:43.270
那就添加了一个什么呢 添加了zindex 等于零

24:43.770 --> 24:47.870
好 这个时候当你一添加之后 然后接下来我们来分析一步

24:48.850 --> 24:55.090
那现在的话 这个对于chow的一来讲 他所处的这个成列上下文是不是就是box1了

24:56.410 --> 25:00.890
对不对 然后对于这个chow的二来讲 他所处的这个成列上下文就是什么

25:01.390 --> 25:02.410
是不是就是这个box2

25:02.930 --> 25:07.030
对不对 那他现在就是什么呢 他现在就是不在同一个

25:07.530 --> 25:08.810
成列上下文下面

25:09.330 --> 25:12.910
对不对 那如果不在同一个成列上下文 我们这边我们来看

25:13.890 --> 25:21.570
不在同一个成列上下文 比较的是什么 比较的是成叠上下文的什么 是不是成叠等级

25:22.850 --> 25:28.170
对不对 成列等级 也就是他们的这个复业数也就是box1和box2的成列等级

25:28.730 --> 25:32.050
那box1和box2 他们的这个成列等级是不是都是什么

25:32.570 --> 25:33.770
是不是都是一样的

25:34.610 --> 25:39.330
对不对 你看这边设置都是设置一样的 那这个时候怎么搞呢

25:40.310 --> 25:44.950
这个时候咋办 这个时候的话 那就应该是这边第三条了

25:45.510 --> 25:51.550
啊 当两个元素成叠等级相同 顺序也相同的时候干嘛呢 是不是后来居上

25:52.310 --> 25:57.230
对不对 后面的元素的这个成叠等级 在前面的元素

25:57.750 --> 26:02.790
直上 那我们看谁在后面 谁在后面是box2在后面

26:03.830 --> 26:07.870
对不对 box2在后面的话 那就是应该是谁在上面 是不是这个

26:08.490 --> 26:16.210
这个宽100高200的 是不是他在上面 是不是啊 那我们这边我们来看一下啊 我们这边保存

26:18.130 --> 26:18.570
看到没有

26:19.450 --> 26:21.490
是不是就是第二个跑到上面去了

26:22.570 --> 26:26.810
对不对 就跑到上面去了 啊 这边的话是这个例子

26:27.690 --> 26:33.410
你每个例子我讲完之后 你如果就是稍微有点没反应过来 你可以自己把这个视频暂停一下

26:33.830 --> 26:38.510
暂停一下之后来看一下看一看 然后接下来结合什么呢 结合这边的这个总结

26:39.630 --> 26:42.190
ok 结合这边的总结啊再看一看

26:43.150 --> 26:45.830
好 然后接下来我们再看下一个啊 再看下一个

26:47.230 --> 26:48.030
好 下一个是这个

26:49.390 --> 26:50.830
下一个的话有个这个图片

26:52.390 --> 26:55.590
好 我这边还是仍然把这个HTML结构 拿过来

26:56.590 --> 26:58.070
然后把这个CSS

26:58.990 --> 26:59.390
拿过来

27:03.150 --> 27:04.310
好 放到这个位置

27:06.660 --> 27:10.700
好 然后接下来我们这边 仍然我们来分析一波 来分析一波

27:11.260 --> 27:12.420
好 这边的话box

27:13.140 --> 27:15.460
box下面有一个什么呢 有一个image

27:16.140 --> 27:18.940
但是对于box来讲 他只设置了定位

27:20.020 --> 27:22.220
对不对 只设置了定位没有设置什么

27:23.100 --> 27:25.140
没有设置这个zindex

27:25.940 --> 27:30.540
那你这个box就是一个什么 是不是就是一个普通元素而已

27:31.620 --> 27:35.780
对不对 就是一个普通的这个快捷元素啊 好 然后接下来对于这个

27:36.140 --> 27:42.500
这个item 就是这个image 这个图片 对于这个图片来讲 他设置了定位和zindex

27:43.380 --> 27:44.140
那他是不是就是

27:45.180 --> 27:52.940
会有个这个成列上下文 对不对 但是对于这个item来讲的话 他要去找他所处的成列上下文的话 会找到谁

27:53.580 --> 27:55.140
是不是会找到这个html

27:56.300 --> 28:02.940
对不对 会找到这个html 这个跟成列上下文啊 好 那接下来的话 现在的话是谁盖住谁呢

28:03.400 --> 28:10.720
你这边的话 你的这个box box是一个普通的元素 好 然后接下来这边 这边的话 你是设置了一个这个附一

28:11.440 --> 28:13.400
设置了一个附一 好 根据我们这边

28:14.840 --> 28:19.640
根据我们这边这个成列顺序啊 那你这边那时候就是你的这个box

28:20.360 --> 28:27.320
会盖住谁 是不是盖住这个zindex为负的值的这个元素啊 对不对 好 那现在我们这边我们来看一下

28:28.300 --> 28:33.940
啊 保存 看到没有 是不是就是这个box 会盖住这个图片

28:35.380 --> 28:40.660
对不对 会盖住这个图片啊 但是我这边的话 我如果稍作修改

28:42.380 --> 28:44.940
稍作修改 我这边的话zindex

28:45.660 --> 28:48.980
啊 我给这个box设置个zindex 比如说我给他设置很大

28:49.980 --> 28:51.260
啊 设置这个9999

28:51.920 --> 29:01.160
对不对 99999 设置的很大 好 然后接下来的话 看上去的话 我这边一保存的话 那当然是应该是他盖住他

29:02.080 --> 29:06.360
但是你这边你看一下 是不是啊 那我们这边一保存

29:07.760 --> 29:12.160
你看 谁盖住谁 是不是这个图片盖住了

29:12.920 --> 29:13.760
这个box

29:14.880 --> 29:20.520
哎 这个就很奇怪了 对不对 为什么反而是这个图片盖住了box呢

29:21.180 --> 29:25.020
啊 原因很简单 你这边的话 你现在给box

29:25.700 --> 29:34.140
设置了什么呢 设置了又设置了这个定位 又设置了这个zindex 那这个box会变成一个层级上下弯

29:34.620 --> 29:40.900
或者说产生一个层级上下弯 对不对 那对于这个Image元素来讲 他往上找的话

29:41.780 --> 29:46.620
他找到他所处的层级上下弯 就不再是html根元素了

29:47.600 --> 29:56.040
之前的话是html根元素 对不对 之前是html根元素 那现在就不是了 现在找到的是谁 现在找到的话 他是这个box

29:57.400 --> 30:06.280
找到的是box啊box是他所处的这个层裂上下弯 那box是他所处的这个层裂上下弯 那接下来你这边扔上看这个图

30:07.720 --> 30:12.120
啊 扔上看这个图 那你这个box的话就处于哪一层 是处于这一层

30:13.100 --> 30:15.420
是不是处于这一层 刚才box是处于这一层

30:16.340 --> 30:20.180
对不对 刚才我box是普通元素 所以刚才box是处于这一层

30:20.820 --> 30:28.540
但是你现在的话 你给他设置了一个zindex之后 他反而的话 对于这个item来讲啊 对于这个Image来讲

30:29.100 --> 30:32.500
啊 他能找到的这个层 所处的层级上下弯 是不是就是他了

30:33.380 --> 30:36.500
对不对 说现在box就处于哪一层了 就处于这一层了

30:37.360 --> 30:44.000
这一层的话 无论你的zindex设置为多大啊 你是不是都不可能超过这一层啊

30:45.120 --> 30:51.080
是不可能超过这一层 对不对 说这里的话 就是为什么你看到这个box 哎 我明明这边设置很大

30:51.840 --> 30:55.320
反而的话 就是还是在什么呢 还在这个图片下面

30:56.320 --> 30:59.920
就是这个原因 没有吧 就是这个原因啊

31:01.280 --> 31:02.800
好 这边是这个实力

31:04.120 --> 31:05.240
好 然后我们这边继续

31:06.880 --> 31:12.760
好 然后接下来的话 4D6 我们来看一下这个4D6 4D6的话 代码稍微长一点 但是一点都不难啊

31:13.560 --> 31:14.520
好 这边我们来看一下

31:17.940 --> 31:22.060
好 然后接下来的话 这里把这个css 我们把他过来

31:28.140 --> 31:30.460
ok 好 然后接下来 这边保存一下

31:31.820 --> 31:32.100
这里

31:32.860 --> 31:33.300
保存一下

31:38.320 --> 31:44.560
好 这边保存一下 好 保存了之后 然后接下来出现了是不是很多个这个相互 成敌了这个d2

31:45.300 --> 31:47.460
对不对 好 那这样 我们这边一层一层来看

31:48.180 --> 31:52.500
那首先的话 这边有一个这个parlence 然后接下来有个choud1有个choud2

31:53.140 --> 31:56.500
啊 那我们这边先把什么呢 先把这个choud2下面的指援数

31:57.220 --> 31:58.060
我们先把它注射掉

31:59.180 --> 32:04.500
啊 注射掉了之后 然后这边有个parlence 有个choud1choud2 那接下来我们来分析一波啊

32:05.060 --> 32:08.580
parlence 首先来看parlence parlence的话会不会生成成敌上下弯

32:09.040 --> 32:19.280
是会 因为你这边有定位 有zindex 那对于choud1以及choud2来讲 它们所处的成敌上下弯就是谁 是不是就是这个parlence

32:20.160 --> 32:25.680
对不对 好那choud1和choud2它是属于什么 是不是同一个成敌上下弯下面

32:26.200 --> 32:30.040
那同一个成敌上下弯下面 是不是zindex值谁大

32:31.240 --> 32:33.960
是不是谁就在上面 那很明显这个choud1

32:34.420 --> 32:35.700
他的zindex值

32:36.460 --> 32:39.020
更大 他是不是就是应该是盖住这个choud2

32:39.740 --> 32:42.980
对不对 你看这边我比如说把这个choud1注射掉

32:44.220 --> 32:45.180
你看这边是不是choud2

32:45.820 --> 32:48.260
对不对 然后接下来我把这个choud1再打开

32:49.380 --> 32:51.540
可不可以啊 他是不是把他盖住了 ok

32:52.180 --> 32:56.940
好 然后接下来我这边我先还是把choud1注射掉啊 好 然后接下来对于choud2来讲

32:57.420 --> 33:00.380
choud2来讲的话 他下面是不是有一个choud

33:01.100 --> 33:03.580
这个2-1和choud2

33:04.380 --> 33:05.460
对不对 我们把它打开

33:06.980 --> 33:07.380
把它打开

33:08.260 --> 33:15.260
好 那choud2-1和2-2对于这两个合适来讲 他们所处的这个成敌上下纹是谁

33:16.060 --> 33:17.060
是不是就是这个choud2

33:18.260 --> 33:23.540
对不对 choud2就是他们两个 就这两个合字 2-1和2-2 他们所处的

33:24.220 --> 33:28.380
成敌上下纹 那也就是说choud2-1和2-2

33:29.460 --> 33:30.540
他们两个的话就是

33:31.520 --> 33:37.040
处于同一个成敌上下纹 那同一个成敌上下纹的话 那这边的话是不是就谁大谁在上面

33:37.240 --> 33:41.920
那也就是说你看这边很明显是2-1 应该在2-2的上面

33:42.720 --> 33:44.040
对不对 那关键是这里

33:45.200 --> 33:47.720
这里很有意思 这边的话choud2是多少

33:48.200 --> 33:49.280
choud2是-1

33:50.240 --> 33:53.600
然后这边是999 然后这边是-9999

33:54.600 --> 33:59.880
那难道说就是你的choud2会在这个2-2的上面吗

34:01.000 --> 34:01.360
思考

34:01.760 --> 34:02.400
思考

34:02.800 --> 34:06.000
choud2会在choud2-2上面吗

34:06.640 --> 34:07.560
不会

34:08.320 --> 34:16.800
不会 为什么 因为对于这个2-1和2-2来讲 他们所处的是什么 他们所处的成敌上下纹是不是这个

34:17.400 --> 34:20.200
choud2 对不对 也就是说choud2是处于哪个等级

34:20.920 --> 34:22.680
choud2的话是处于

34:23.680 --> 34:25.600
就是成敌顺序中 是不是这一块

34:25.980 --> 34:28.380
对不对 这一块

34:29.300 --> 34:33.940
说你这边无论你这个choud2 你这个zindex 设置为是多少

34:34.500 --> 34:39.580
那我这边的这个2-1和2-2 我都会在你的上面

34:40.220 --> 34:47.020
而不可能跑到你的下面 对不对 但是这两个元素的话 这两个元素的话 因为他们是处于同一个

34:47.540 --> 34:51.900
这个成敌上下纹 他们俩比的就是什么 是比的就是zindex

34:53.020 --> 34:54.860
对不对 好 那我们这边我们来看一下

34:55.820 --> 34:56.580
好 这边保存

34:57.860 --> 35:06.500
克里米亚2-1盖住2-2 但是呢 无论是2-1还是2-2 他们都会干嘛 是不是都在choud2上面

35:07.420 --> 35:11.060
对不对 这choud2上面 因为你说choud2是什么 是不是背景

35:11.700 --> 35:15.780
对不对 边光的背景 他是处于刚说了 他是处于

35:16.380 --> 35:16.940
这一层的

35:17.820 --> 35:18.100
对不对

35:19.620 --> 35:24.060
好 好 然后接下来的话 我如果再把这个choud1打开

35:24.440 --> 35:26.400
请问choud1应该是在哪个位置

35:28.400 --> 35:30.520
你想一想choud1应该是在哪个位置

35:32.240 --> 35:34.440
这个时候的话这个choud1

35:35.040 --> 35:37.360
choud1和choud2刚才比较的话

35:38.480 --> 35:43.000
choud1和choud2 谁在上面 是不是choud1在上面

35:43.760 --> 35:49.000
对不对 那你既然这个choud1在上面的话 那我把这个choud1打开 那他也是在什么

35:49.760 --> 35:51.160
是不是也是在最上面

35:52.120 --> 35:53.480
对不对 也是在最上面

35:54.360 --> 36:00.240
OK 这个就是一个比较综合的这个势力 大家可以把这个势力自己再看一看

36:01.040 --> 36:06.040
好吧 这个势力的话就把刚才的上面的那几个知识点就都用到了

36:08.800 --> 36:10.280
好 然后接下来的话 最后

36:11.880 --> 36:13.560
最后的话 我们把这个

36:14.360 --> 36:20.760
把这个css3中这个属性对这个承迭上下文的影响 我们把这个说一下

36:21.420 --> 36:24.420
我们刚才在讲这个承迭上下文的时候 我们回到前面

36:25.420 --> 36:28.780
前面我们在讲这个承迭上下文的时候 这里有个位置

36:30.180 --> 36:34.420
在讲那个深层承迭上下文

36:36.670 --> 36:38.270
在哪个位置 我看一下啊

36:40.550 --> 36:46.270
哦 这里 这里啊 这里 我们这边讲的是什么 是不是css2.1年代

36:47.270 --> 36:49.870
对不对 css2.1的这个年代

36:50.490 --> 36:58.010
css3的话 他新增了很多属性 那很多属性的话 他是对这个承迭上下文 他也是有影响的

36:58.690 --> 37:03.450
那么来看一下哪些 啊 比如说这边 副元素的display属性值为

37:04.170 --> 37:12.370
flex 指源素的zindex属性值不为auto的时候 指源素它会变成一个承迭上下文元素

37:13.090 --> 37:16.770
啊 然后就在这边upcity 他属性值不是1的时候

37:17.410 --> 37:19.690
啊 他会变成一个承迭上下文元素

37:20.090 --> 37:26.570
啊 包括什么这个triceform属性值不是那 啊 然后还有这个mix blend mode不是这个normal

37:27.610 --> 37:34.730
大家这个filter不是那啊 你看 这就是css2很多属性 他都会对这个承迭上下文有影响呀

37:35.690 --> 37:42.090
对不对啊 那我们这边我们看一个就好了啊 看一个就好 就大家知道 知道这么一个现象就好了

37:42.970 --> 37:44.810
比如说这个 拿这个来举例

37:45.790 --> 37:54.340
然后首先把这个结构拿过来 好 然后加这边的话 把这个代码拿过来

38:04.180 --> 38:08.140
这里啊 好 那我们来看一下 简单看一下这个代码

38:08.860 --> 38:15.260
这里的话有一个这个box box 下面有一个这个parent parent 下面有一个什么 这边有一个这个chill的

38:15.820 --> 38:23.220
对不对 好 然后接下来这边的话 对于这个chill的来讲 翘的的话 他本身啊 这边设置了定位设置了zindex

38:23.680 --> 38:29.560
好 然后接下来对于这个parent来讲 你设置了zindex 但是你没有设置什么

38:30.520 --> 38:31.520
你有没有设置定位

38:32.640 --> 38:38.320
这没有设置定位 对不对 没有设置定位 没有设置定位的话 那你这个parent就是一个什么

38:38.720 --> 38:40.880
就是一个普通的这个元素

38:41.880 --> 38:47.800
对不对 普通的元素 那对于我这个chill的来讲chill的 他现在所处的承迭上下文就应该是什么

38:48.620 --> 38:54.260
他现在所处的这个承迭上下文 是不是就是应该是html跟承迭上下文

38:55.460 --> 39:01.380
对不对 跟承迭上下文 他在这个跟承迭上下文下面啊 然后他也在跟承迭上下文下面

39:01.700 --> 39:10.780
好 然后接下来两个进行比较的话 他是普通元素 他是这个zindex为复制的 那是不是他应该在下面 他应该在上面

39:12.060 --> 39:15.500
对不对 你看这个图吗 看我们的这个承迭顺序图

39:16.240 --> 39:22.600
一个是普通的盒子啊 现在这个parent是不是就是普通的盒子啊 而这个zindex就是那个chill的

39:23.160 --> 39:25.160
chill的话是不是zindex是负责

39:26.040 --> 39:33.240
对不对 所以他的话就应该在什么 他是不是就是应该在上面parent应该在上面对不对 我们保存一下 我们来看一下是不是

39:34.520 --> 39:41.200
你看一下parent是不是就在上面 对不对 好那接下来的话我这边让我做一个小小的修改

39:42.180 --> 39:47.820
什么小小的修改呢 我这边的话给点box 最点box是谁 点box是这个盒子

39:48.460 --> 39:52.620
也就是他们最外层的这个容器 好我设置一个display

39:53.820 --> 39:55.420
为一个flex

39:56.900 --> 40:03.740
当我给他设置一个display flex的时候 好那接下来我们这边我们来看一下啊 这边就变了啊 这边就变了

40:04.640 --> 40:11.920
来看这里 当副元素display为flex的时候 副元素谁box 是不是设置了 对不对

40:12.400 --> 40:17.680
然后指元素的zindex不为auto的时候 指元素就这个parent

40:18.240 --> 40:23.400
他的zindex是不是不为auto 对不对 好 那么这个时候指元素

40:23.880 --> 40:24.360
他就是

40:25.080 --> 40:28.200
他变成了一个成叠上下文元素 什么意思

40:29.060 --> 40:33.460
什么意思 也就是说我现在的话对于我这个chout来讲

40:34.700 --> 40:43.860
对于我这chout来讲 我往上找啊 往上找找我所处的成叠上下文 就不再是找到这个html根元素了 找到的是谁

40:44.340 --> 40:45.540
找到的是parent

40:46.460 --> 40:50.620
对不对parent是我的什么呢 是我的这个成叠上下文

40:51.740 --> 40:57.380
看到没有parent是我的成叠上下文 那么现在的话parent就从刚才的一个普通元素

40:57.680 --> 40:59.880
变成了什么了 就是刚才

41:01.600 --> 41:09.280
刚才parent的话 是不是在这在这一层 对不对 一个普通元素 他就变成了什么 他说变成了一个这个成叠上下文

41:10.360 --> 41:14.040
对不对 变成了一个这个成叠上下文 变成了一个背景

41:15.000 --> 41:21.160
OK 所以说我这边的话 我的这个chout的 是不是就是应该是在你的这个parent之上啊

41:22.320 --> 41:25.760
对不对 那我们这边我们来看一下 是不是 这边保存

41:26.880 --> 41:27.240
看到没有

41:27.600 --> 41:31.240
那我这边 我现在这个chout的 是不是就在你这个parent之上了

41:32.280 --> 41:41.880
啊 所说这个cs3里面的一些属性啊 他确实确确确实实也会干嘛呢 也会对我们的这个成叠上下文是不是产生影响

41:42.960 --> 41:51.920
对不对 也会产生影响啊 这个的话就不一个一个看了啊 这个你有兴趣你自己下来啊 做一下这个实验 我就不一个一个带着看了

41:52.380 --> 42:00.180
OK 好 那这些课的话就给大家介绍了 关于这个成叠上下文 成叠等级 以及成叠顺序

42:00.740 --> 42:03.740
啊 那你这边再回答这道题的时候 这也就可以回答了

42:04.540 --> 42:09.940
对不对啊 首先成叠上下文的这个概念 什么是成叠上下文啊 就是我们这边

42:11.300 --> 42:21.180
呃 成叠上下文的话 他是有一个这个x走 y走和z走啊 你的这个成叠上下文 然后等级越高 是不是离我们这个屏幕观察者越近

42:22.340 --> 42:28.940
对不对 然后成叠上下文的触发条件啊 这边三个啊 首先的话 这个根成叠上下文

42:29.660 --> 42:34.860
然后普通元素设置position属性为非static 然后有这个zindex

42:35.580 --> 42:43.580
他就会创建一个成叠上下文 好 大家z这个c3中一些新属性也可以产生成叠上下文 干什么看了

42:44.140 --> 42:48.500
对不对 好 大家这个成叠等级 成叠等级的话他是一个概念

42:49.220 --> 42:59.700
啊 理论上来讲的话 就是等级越高 他就是越靠前 对不对 那等级等级我通过什么来评判等级 那这边是不是有个成叠顺序啊

43:00.540 --> 43:06.860
对不对 通过这个成叠顺序啊 但我如果我是在一个顺序里面 那是不是就是看这个zindex的这个值

43:08.100 --> 43:17.580
对不对 OK 这个就是关于整个成叠上下文的这个内容啊 大家下来的话可以自己再看一看 把刚才的那些势力

43:17.580 --> 43:22.820
自己再写一写 好吧 好 这期课就先到这里啊 再见

