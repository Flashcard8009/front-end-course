WEBVTT

00:00.050 --> 00:05.490
这节课咱们来调一个非常基础的也非常常见的面识题

00:06.290 --> 00:08.290
就让你产售一下vmod的原理

00:09.810 --> 00:13.810
这个玩意呢 其实要回答的话 一句话其实也就ok了

00:14.610 --> 00:17.650
就是我们之前常说的vmod是一个语法堂

00:18.530 --> 00:23.010
它能生成一个属性 一个事件 什么属性呢 input属性

00:23.570 --> 00:25.970
value属性 事件呢 input事件

00:26.930 --> 00:31.410
但是呢 这样子回答的话 你拿不了高分啊 也不能从其他的面试者里边拖影而出

00:31.410 --> 00:33.650
所以说我们尽量的把它回答全面一点

00:34.130 --> 00:35.250
那我们来看一下怎么回答

00:35.810 --> 00:40.050
vmod它既可以作用与表单元素 什么叫表单元素 我们之前有个例子对吧

00:40.290 --> 00:42.690
做了也有vmod这个例子 还记得吗

00:43.170 --> 00:47.410
这个表单元素说有文本框 密码框 多选框 还有这些

00:48.050 --> 00:49.890
下达列表 都是表单元素啊

00:50.370 --> 00:54.290
它既可以作用与表单元素 也可以作用于自定义组建

00:55.250 --> 00:59.410
自定义组建也可以用vmod 这我们之前没有用过 对吧 以后我们用一下

01:00.290 --> 01:04.210
但是无论是作用于表单元素 还是自作用于自定义组建

01:04.850 --> 01:07.010
无论是哪一种情况 它都是一个语法堂

01:07.570 --> 01:11.090
就它这个玩意呢 它最终会生成一个属性和一个事件

01:11.890 --> 01:14.450
属性呢 很多情况下都是value属性 那不是一定的

01:15.730 --> 01:19.330
事件呢 很多情况下都是input事件 那不是一定的

01:20.290 --> 01:22.770
那我们怎么来证明这一点呢 看着啊

01:23.090 --> 01:27.410
这里我们之前做了这么一个表单 这里边用了很多的vmod

01:27.890 --> 01:31.490
用了很多的 接下来我们来看一下 因为我们知道模板里边的东西啊

01:31.650 --> 01:34.610
它最终会生成什么虚底节点 对吧 vload

01:34.850 --> 01:38.290
那我们来看一下vload里边 还有没有这个玩意儿就知道了

01:39.010 --> 01:40.690
好 我们来看一下啊

01:41.570 --> 01:42.770
在这里边

01:43.490 --> 01:45.650
monty的 我们输出一下

01:46.530 --> 01:48.050
当前的vload

01:49.410 --> 01:51.810
好 保存啊 现在我们打开检查

01:52.530 --> 01:54.210
看控制台 是不是一个vload出来了

01:54.610 --> 01:55.490
vload里边展开

01:55.970 --> 01:59.570
目前呢 我们有两个左边的一个forme元素 右边一个div

01:59.730 --> 02:01.090
我们展开左边的forme元素

02:02.210 --> 02:05.650
然后里边有一个qt有很多的div 每个div其实就是一行

02:06.210 --> 02:07.410
我们首先看第一行吧

02:07.890 --> 02:09.570
第一行这个div里边有两个qt

02:09.730 --> 02:11.890
其中有一个input 我们关键就看这个input

02:12.210 --> 02:15.170
因为我们在input上面用了一个什么vmod

02:15.570 --> 02:17.890
那么在虚的节链里边编一层虚的节链过后

02:17.890 --> 02:19.010
这个vmod还在不在呢

02:19.810 --> 02:20.610
打开这个data

02:21.650 --> 02:25.090
在不在呢 其实它还是有季度的啊 在哪里呢 在这里

02:25.650 --> 02:27.410
就是我们这个节链里边

02:27.810 --> 02:30.370
有哪些指令啊 它会把指令全部放这儿

02:30.690 --> 02:32.690
那么这个指令呢 其实已经意义不大了

02:32.850 --> 02:34.690
在这里呢 这个指令已经意义不大了

02:35.330 --> 02:36.530
真正其作用的是在这儿

02:37.250 --> 02:40.370
它这个指令会编译成为什么呢 编译成为一个value

02:41.730 --> 02:42.290
abc

02:42.690 --> 02:45.890
这个abc哪来的 是不是通过这个vmod绑立进来的

02:46.770 --> 02:48.450
这个login id读出来是不是就abc

02:48.530 --> 02:50.770
你看login id啊 读出来是不是abc

02:51.010 --> 02:52.450
它把vmod放到它的value属性里边了

02:52.690 --> 02:55.730
因此呢 我们这个稳闷框看上去是不是一开始就一个abc

02:56.130 --> 02:58.050
是在这里起作用的啊

02:59.010 --> 03:01.730
然后当稳闷框改变的时候 我们要改变数据 你看

03:01.890 --> 03:02.770
是不是要改变数据

03:03.410 --> 03:05.810
那么这个改变数据 为什么可以改变数据呢

03:05.810 --> 03:07.890
是因为它注册了一个看on 实践

03:08.370 --> 03:09.170
input实践

03:10.210 --> 03:11.970
有时候说 这里为什么有个blur呢

03:11.970 --> 03:13.330
这个blur不用管它啊

03:13.330 --> 03:14.850
因为它要考虑到一些修饰服

03:15.170 --> 03:17.090
比方说我们之前说过vmod呢

03:17.250 --> 03:18.370
它有一个什么nessy

03:19.330 --> 03:20.530
那么也就是说

03:20.770 --> 03:23.090
它不是立即改变 将来之后才改变

03:23.090 --> 03:26.850
那么这个时候呢 你需要用弄到那个blur时间

03:26.850 --> 03:28.450
让它失去交参的时候再改变

03:28.450 --> 03:29.650
这东西我们不用关系

03:29.650 --> 03:32.610
因为我们最核心的vmod会编印成什么呢

03:32.610 --> 03:36.980
会编印成一个value

03:37.780 --> 03:38.660
一个input

03:38.980 --> 03:40.180
它会编印成这么两个东西

03:40.660 --> 03:42.020
这种其中是这两个

03:42.340 --> 03:44.820
所以从这一点呢 可以看出它是一个语法常

03:45.780 --> 03:47.540
这是把这一点回答上

03:48.260 --> 03:50.100
当它作用于表单元素的时候呢

03:50.660 --> 03:53.060
唯有它会根据表单元素内形

03:53.860 --> 03:56.820
到底是一个文本框还是一个多显单选

03:57.140 --> 03:59.140
而生成合适的属性和事件

03:59.140 --> 04:00.020
我们刚才看到了

04:00.500 --> 04:02.500
一个文本框的话 它生成的是什么

04:02.900 --> 04:06.580
生成的是一个value属性和一个input时间

04:07.220 --> 04:08.420
但是不是所有的都是

04:08.420 --> 04:09.700
value属性和input时间呢

04:09.700 --> 04:10.260
那不一定

04:10.820 --> 04:11.620
我们来看一下

04:11.620 --> 04:13.220
如果是多选框会怎么样呢

04:14.980 --> 04:15.620
找一找啊

04:16.340 --> 04:18.500
这是第一个行 第二行 第三行

04:18.500 --> 04:19.940
第三行就是个多选框

04:19.940 --> 04:21.460
里边有很多人的label

04:21.460 --> 04:22.660
我们随便找一个label吧

04:23.700 --> 04:25.220
这里input

04:25.220 --> 04:26.180
这是个多选框

04:26.180 --> 04:27.140
我们来看一下 是不是

04:27.140 --> 04:28.020
你看一面上

04:28.660 --> 04:29.380
是不是多选框

04:30.980 --> 04:31.940
好 我们来看一下

04:31.940 --> 04:33.140
多选框的时候

04:33.140 --> 04:34.260
我们使用了vmod

04:34.740 --> 04:36.660
你看 多选框我们使用了vmod

04:36.660 --> 04:37.940
那么它会生成什么呢

04:38.500 --> 04:40.180
它会生成data里面找

04:41.540 --> 04:43.140
生成的属性是不是变了

04:43.140 --> 04:44.100
变成什么属性呢

04:44.740 --> 04:46.420
变成了一个check属性

04:46.820 --> 04:48.580
和一个迁击属性

04:48.580 --> 04:49.860
迁击时间

04:49.860 --> 04:51.780
这不是再是一个value和input

04:52.500 --> 04:54.660
那么这一点呢是伍佑自动完成的

04:54.660 --> 04:58.420
它会根据你vmod作用的表达元素的类型

04:58.980 --> 05:02.340
来判定到底应该生成什么样的属性

05:02.340 --> 05:03.460
和什么样的时间

05:03.460 --> 05:03.940
只不过呢

05:03.940 --> 05:05.460
我们平时举例的时候呢

05:05.460 --> 05:06.660
稳闷框用了多一点

05:06.660 --> 05:07.300
所以说呢

05:07.300 --> 05:08.340
它生成的东西呢

05:08.340 --> 05:10.100
是input和value

05:10.100 --> 05:11.220
但是不是一定的啊

05:11.220 --> 05:12.180
你把这一点回答上

05:12.180 --> 05:13.300
是不是就已经打败

05:13.380 --> 05:14.260
很多的辨识者了

05:17.220 --> 05:18.660
那么下面可以举个例子

05:18.660 --> 05:19.860
作用稳闷框的时候生成什么

05:19.860 --> 05:21.460
作用单元和多片的时候生成什么

05:22.420 --> 05:22.660
好

05:22.660 --> 05:23.140
接下来呢

05:23.140 --> 05:24.900
我们来看自定义组建的情况

05:24.900 --> 05:26.740
刚才是作用于表达元素对吧

05:26.740 --> 05:29.220
它也可以作用于自定义组建

05:29.780 --> 05:31.940
当它作用于自定义组建的时候呢

05:31.940 --> 05:33.300
默认情况下

05:33.300 --> 05:34.260
也就是它可以改的

05:34.740 --> 05:37.620
它会生成一个value属性和一个input时间

05:37.620 --> 05:38.180
啥意思啊

05:38.500 --> 05:39.860
比方说我们有个自定义组建

05:39.860 --> 05:42.500
你看使用了vmod绑定一个数据

05:42.580 --> 05:46.420
那么还有等效率给它传了一个value属性进去

05:46.420 --> 05:48.100
然后呢注册了一个时间

05:48.100 --> 05:50.100
把时间里边拨出来的数据呢

05:50.100 --> 05:53.460
复制给这个data绑定的数据

05:53.460 --> 05:54.100
啥意思呢

05:54.100 --> 05:54.820
我举个例子吧

05:55.540 --> 05:56.420
比方说我这里呢

05:57.300 --> 05:58.820
希望把年龄改一下啊

05:59.540 --> 06:02.100
把这个年龄呢改成不用文闷框

06:02.820 --> 06:03.700
就是一个数字

06:03.700 --> 06:04.500
左边一个加号

06:04.500 --> 06:05.300
右边一个减号

06:05.860 --> 06:06.500
左边一个减号

06:06.500 --> 06:07.300
右边一个加号

06:07.300 --> 06:08.740
那么我们可以写个自定义组建

06:11.120 --> 06:12.720
给它写个number吧

06:13.200 --> 06:13.920
自定义组建

06:14.960 --> 06:16.160
这个自定义组建呢

06:16.160 --> 06:17.600
要做的事情很简单啊

06:17.600 --> 06:18.560
它要做什么事呢

06:18.560 --> 06:19.600
我们就写个da位吧

06:22.640 --> 06:23.200
看一下啊

06:25.660 --> 06:26.220
这里边

06:26.780 --> 06:28.860
我们尽量把它变成一个含和啊

06:29.420 --> 06:30.300
那就用个da位吧

06:30.300 --> 06:31.260
我们用那样式吧

06:32.140 --> 06:33.660
number container

06:35.950 --> 06:36.510
写一下啊

06:38.190 --> 06:39.630
number container

06:39.630 --> 06:41.070
把设置为dispay

06:41.070 --> 06:41.790
inline block

06:43.470 --> 06:44.510
好里边呢

06:44.510 --> 06:46.190
我们设置一下

06:47.390 --> 06:48.190
就三个东西吧

06:48.190 --> 06:48.990
一个是button

06:49.390 --> 06:49.790
减

06:50.110 --> 06:50.990
一个是button

06:50.990 --> 06:51.550
加

06:51.550 --> 06:53.150
中间要显示一个数字

06:53.150 --> 06:54.430
那么中间是显示这个数字呢

06:54.430 --> 06:55.870
我是不知道显示啥的

06:55.870 --> 06:56.750
我们这里边

06:58.110 --> 06:59.470
再写一个span

06:59.470 --> 07:01.790
稍微的做一下样式

07:02.510 --> 07:05.310
左右呢设置为五个相处吧

07:06.270 --> 07:08.350
中间这个span元数里边显示啥呢

07:08.350 --> 07:09.790
是不是要传过来呀

07:09.790 --> 07:11.470
到底我就这里就是显示一个数字

07:11.470 --> 07:12.110
左边一个减

07:12.110 --> 07:12.590
右边一个加

07:12.590 --> 07:13.310
中间显示个数字

07:13.310 --> 07:14.510
这个数字是啥

07:14.510 --> 07:15.630
我这里肯定做不了组

07:16.270 --> 07:17.630
因为它可能是任何东西

07:17.630 --> 07:18.750
有可能是显示库存

07:18.750 --> 07:19.790
有可能是显示连领

07:19.790 --> 07:21.070
我也不知道显示啥

07:21.070 --> 07:22.030
那么你传过来

07:22.030 --> 07:23.630
所以我们要定一个属性

07:23.630 --> 07:25.870
属性呢我就懒得去写验证了啊

07:26.510 --> 07:27.790
你给我传一个什么呢

07:27.790 --> 07:28.190
number

07:29.390 --> 07:30.030
传进来

07:30.030 --> 07:31.550
那么我们这里是不是写可以显示

07:32.670 --> 07:33.950
number对吧

07:34.910 --> 07:36.350
好我既然我们来用一下啊

07:36.350 --> 07:36.990
app里边呢

07:36.990 --> 07:38.830
我们找到这

07:38.830 --> 07:39.150
导入

07:40.670 --> 07:41.150
import

07:42.110 --> 07:42.510
number

07:44.350 --> 07:44.670
number

07:46.110 --> 07:46.990
注册一下

07:46.990 --> 07:47.790
comp-lens

07:51.170 --> 07:53.570
现在我们把number替换掉这个

07:56.930 --> 07:57.810
连临这一块

07:57.810 --> 07:59.650
我们不再使用input是元素的

07:59.650 --> 08:01.010
而改为使用什么呢

08:01.010 --> 08:02.050
使用这个number主键

08:03.010 --> 08:04.690
还有个number主键里边是不是有一个

08:05.250 --> 08:06.690
有一个属性要传递啊

08:06.690 --> 08:07.330
什么属性呢

08:07.330 --> 08:07.890
就是number

08:07.890 --> 08:09.490
我们把它改成value吧

08:09.490 --> 08:11.010
改成个属性的名字叫value

08:11.010 --> 08:12.370
好你给我传一个value进来

08:13.570 --> 08:14.130
为什么呢

08:14.130 --> 08:15.810
是不是为form-data

08:15.970 --> 08:17.090
12h

08:17.970 --> 08:19.330
好来看一下啊

08:19.330 --> 08:20.210
保存

08:20.210 --> 08:20.930
你看这个年龄

08:20.930 --> 08:23.810
哎没显示出来了

08:23.810 --> 08:26.370
他说这个无版里面啊

08:26.370 --> 08:27.650
无版里面这要改成value

08:29.090 --> 08:29.570
好放心

08:29.570 --> 08:31.250
你看这个年龄是不是显示到这了

08:31.250 --> 08:31.570
对吧

08:32.290 --> 08:34.210
是不是这整个这一块就是一个主键

08:34.850 --> 08:35.810
对不对

08:35.810 --> 08:36.050
好

08:36.690 --> 08:38.770
那么这个主键出来了过后呢

08:38.770 --> 08:39.330
接下来

08:40.770 --> 08:42.690
我们现在稍改变它

08:42.690 --> 08:43.410
点了这个按钮

08:45.970 --> 08:47.090
这是一个普通按钮

08:50.050 --> 08:51.650
不然它点了过后就提交表达了

08:54.930 --> 08:55.730
点了过后呢

08:55.730 --> 08:57.330
我们希望了改变这个年龄

08:57.330 --> 08:57.810
怎么办呢

08:57.810 --> 08:58.770
改变这个数字

08:58.770 --> 09:00.530
那么我们是不是要注册点击时间

09:00.530 --> 09:01.650
然后注册点击时间吧

09:02.210 --> 09:03.890
点击的时候我要干嘛呀

09:04.690 --> 09:07.010
我这里是不是要改变value减减

09:07.010 --> 09:08.290
但是我这里能改吗

09:08.290 --> 09:10.610
它是别人传过来的属性是不是改不了啊

09:10.610 --> 09:11.250
那怎么办呢

09:11.250 --> 09:12.450
我只能扔出去

09:12.450 --> 09:13.490
抛出一个时间啊

09:13.490 --> 09:15.330
我这就不写了啊

09:15.330 --> 09:16.770
或者说我们写一个吧

09:16.770 --> 09:17.650
没舍字

09:17.650 --> 09:18.530
运行一个函数

09:19.650 --> 09:20.370
handle

09:22.210 --> 09:23.090
handleclient

09:23.090 --> 09:24.450
或者是handleclick

09:25.970 --> 09:26.930
你给我传一个吧

09:27.570 --> 09:28.290
value

09:28.290 --> 09:29.650
你给我传一个新的值

09:29.650 --> 09:31.330
我们希望了这里调用这个函数

09:32.130 --> 09:33.890
当然这直接写到这里也可以

09:33.890 --> 09:34.610
handleclick

09:36.530 --> 09:39.730
那么我们期望的是把value减1传进去

09:39.730 --> 09:41.970
我希望了把这个值之前48

09:41.970 --> 09:43.010
那我传一个17进去

09:43.010 --> 09:44.530
我希望把这个值改为17

09:45.410 --> 09:47.410
那么这里呢我就希望把这个值呢改为

09:50.050 --> 09:50.690
改为19

09:50.690 --> 09:51.810
就这么个意思

09:51.810 --> 09:53.410
它原来的当前的值呢加1

09:53.410 --> 09:55.010
就是它期望改变了值

09:55.010 --> 09:56.050
但是我这里能改吗

09:56.050 --> 09:57.650
我这里能不能写这个东西啊

09:57.650 --> 09:58.610
不行啊

09:58.610 --> 09:59.490
因为它是属性

09:59.490 --> 10:00.530
它是不能改的啊

10:00.530 --> 10:04.210
就是属向不可更改

10:04.210 --> 10:04.850
那怎么办

10:04.850 --> 10:06.610
那这东西非常基础的问题

10:06.610 --> 10:08.130
是不是要扔出去啊

10:08.130 --> 10:09.490
让商标的组件来改

10:09.490 --> 10:09.970
对吧

10:09.970 --> 10:11.650
属性是从商标的组件传过来的

10:11.650 --> 10:12.930
这个数据不属于我

10:12.930 --> 10:14.770
那么属于谁扔出去

10:14.770 --> 10:15.570
你自己去

10:15.570 --> 10:16.530
自己去处理

10:16.610 --> 10:18.130
这不这里我们要抛出视线

10:18.130 --> 10:19.330
那么抛出一个视线

10:19.330 --> 10:20.130
amnit

10:21.250 --> 10:21.970
视线的名字呢

10:21.970 --> 10:23.570
我就该取一个名字叫做input

10:23.570 --> 10:24.850
input的视线

10:24.850 --> 10:26.450
好这个视线呢

10:26.450 --> 10:27.410
给它一个数据

10:27.410 --> 10:27.970
什么数据呢

10:27.970 --> 10:28.850
就是留value

10:28.850 --> 10:31.410
我希望了把这个值改成这个样子

10:32.850 --> 10:33.170
明白吧

10:33.170 --> 10:34.690
一个属性一个视线

10:34.690 --> 10:35.410
如果属性明了

10:35.410 --> 10:36.530
我随便取了一个value

10:36.530 --> 10:37.010
视线明了

10:37.010 --> 10:38.130
我随便取了一个input

10:38.930 --> 10:40.370
好接下来到这边来

10:40.370 --> 10:42.770
这边我们是不是可以注册这个视线啊

10:42.770 --> 10:43.810
是不是什么input的视线

10:43.810 --> 10:45.010
是不是可以注册啊

10:45.170 --> 10:46.370
它那边有一个事件

10:46.370 --> 10:47.250
点了按钮过后

10:47.250 --> 10:48.530
它就会触发这个事件

10:48.530 --> 10:50.210
视线里边是不是有个数据啊

10:50.210 --> 10:51.010
数据扔过来的

10:51.010 --> 10:52.050
这个数据是不是可以通过

10:52.050 --> 10:53.410
1分才能过去

10:53.410 --> 10:54.450
这个数据

10:54.450 --> 10:55.490
那么我们要做的事情

10:55.490 --> 10:56.130
是不是很简单

10:56.130 --> 10:56.850
把这个数据呢

10:56.850 --> 10:57.810
复制给谁

10:57.810 --> 10:59.090
复制给formdata

10:59.090 --> 11:00.610
对吧

11:00.610 --> 11:02.530
把新的数据重新给它复制

11:02.530 --> 11:03.570
这个数据一变化

11:03.570 --> 11:04.930
那么这个玩意是不是重新宣扰

11:04.930 --> 11:05.330
对吧

11:05.970 --> 11:06.850
一重新宣扰了

11:06.850 --> 11:09.330
这里是不是就传了新的属性进去

11:09.330 --> 11:10.290
新的属性传进去了

11:10.290 --> 11:11.890
过后这里显示新的值了

11:11.890 --> 11:12.370
对吧

11:12.450 --> 11:13.810
就形成这么一个效果

11:13.810 --> 11:14.050
好

11:14.050 --> 11:14.450
保存啊

11:14.450 --> 11:15.090
看一下

11:15.090 --> 11:15.650
行不行呢

11:16.610 --> 11:19.010
点击点击点击点击点击

11:19.010 --> 11:19.570
是不是可以了

11:20.530 --> 11:21.410
对不对

11:21.410 --> 11:23.650
那么我们现在给看到的现象就是

11:23.650 --> 11:25.170
给它传了一个Matic属性

11:25.170 --> 11:26.530
给它传了一个Input时间

11:26.530 --> 11:28.450
像自定组件传了这个东西

11:28.450 --> 11:30.210
而且事件里边的写法呢

11:30.210 --> 11:30.850
是固定的

11:30.850 --> 11:31.570
就这种写法

11:32.610 --> 11:34.130
那我们这一句话呢

11:34.130 --> 11:37.090
就等消于用一个语法堂的做法

11:39.170 --> 11:39.570
Number

11:40.450 --> 11:40.850
Yeah

11:43.570 --> 11:44.690
就是Vmode

11:46.290 --> 11:46.930
Form Data

11:48.050 --> 11:48.450
Edge

11:49.010 --> 11:49.730
一模一样的

11:50.370 --> 11:50.690
好

11:50.690 --> 11:51.730
来看一下吧

11:52.610 --> 11:53.330
放心

11:53.330 --> 11:53.650
你看

11:54.370 --> 11:55.250
是不是效果一样的

11:56.290 --> 11:58.370
我们再来用最好的方式来证明

11:58.370 --> 11:59.410
就是看它这个Vload

11:59.970 --> 12:01.330
我们展开这个Vload

12:01.330 --> 12:02.530
然后找到这一行

12:02.530 --> 12:03.170
第几行

12:03.170 --> 12:04.450
1 2 3 4 5

12:04.450 --> 12:05.010
第五个

12:05.490 --> 12:06.690
左边的Form元素里面

12:06.690 --> 12:07.650
第五个指源数

12:08.610 --> 12:09.250
下边为4

12:09.730 --> 12:11.730
这个DIV里面有一个组件

12:12.450 --> 12:13.090
组件就这个

12:13.090 --> 12:13.570
看

12:13.570 --> 12:14.690
是不是有Number的组件

12:14.690 --> 12:15.490
然后展开它

12:16.050 --> 12:17.650
这个Vload是一个组件

12:17.650 --> 12:18.530
我们要看哪呢

12:18.530 --> 12:18.850
看这

12:19.410 --> 12:20.850
Component Options

12:20.850 --> 12:22.690
就像组件传递的配置

12:23.250 --> 12:24.130
我们来展开看一下

12:25.490 --> 12:25.810
你看

12:27.170 --> 12:29.170
我们的展开这个属性里边

12:29.170 --> 12:32.210
是不是有一个Value的指

12:32.210 --> 12:32.930
是不是18

12:32.930 --> 12:34.370
是不是Value传进去了

12:34.370 --> 12:36.850
而且它是不是传递了一个Nationals

12:36.850 --> 12:38.130
传递了一个坚定函数

12:38.130 --> 12:39.970
是不是Input函函数

12:39.970 --> 12:40.530
对吧

12:40.690 --> 12:42.130
也就说我们像Input

12:42.130 --> 12:43.250
传递了一个函数

12:43.250 --> 12:44.370
就通过这种方式

12:44.370 --> 12:45.890
像Input传递了一个函数

12:45.890 --> 12:47.890
然后通过Value传递了一个数据

12:47.890 --> 12:49.330
说这个东西就是一个迷法堂

12:49.810 --> 12:50.370
没了意思吧

12:51.090 --> 12:53.170
这就是Vmod

12:53.170 --> 12:55.090
它作用于自定义组件的时候

12:55.090 --> 12:55.970
它的情况

12:55.970 --> 12:57.410
但是这是默认情况

12:57.410 --> 12:58.770
这种情况能不能改呢

12:58.770 --> 12:59.890
实际上是可以改的

12:59.890 --> 13:00.930
你可以改啥呀

13:00.930 --> 13:02.210
你可以改它生成的

13:02.770 --> 13:05.650
就Vmod生成的Value属性的

13:05.650 --> 13:07.730
也就是属性的名字和Input

13:07.730 --> 13:09.010
而是事件的名字

13:09.010 --> 13:10.130
怎么改呢

13:10.210 --> 13:12.690
需要这里在组件里面配置一下一个mod

13:13.250 --> 13:13.890
那这种情况呢

13:13.890 --> 13:15.570
我们一般也不用去改它

13:15.570 --> 13:16.450
如果需要改的话

13:16.450 --> 13:17.090
你可以改

13:17.490 --> 13:17.970
怎么改呢

13:17.970 --> 13:18.850
你可以这样改

13:19.090 --> 13:19.970
我们在组件里边

13:19.970 --> 13:22.450
我希望了你这个Vmod传递给我的时候

13:22.450 --> 13:24.690
生成的属性名字

13:24.690 --> 13:25.570
我把它改一下

13:27.490 --> 13:28.690
默认是Value对吧

13:28.690 --> 13:29.810
生成的属性名字是Value

13:29.810 --> 13:32.370
那么我们可以把个Prob改成

13:33.330 --> 13:33.810
其他的

13:33.810 --> 13:35.250
然后改成Number

13:37.280 --> 13:39.840
我们把事件改成迁迹

13:40.560 --> 13:41.200
你看啊

13:43.570 --> 13:44.610
这样就改了

13:44.610 --> 13:46.130
那么改了过后现在还有效果吗

13:47.170 --> 13:47.730
你看啊

13:47.730 --> 13:48.370
现在还有效果吗

13:48.370 --> 13:49.250
是不是没效果了

13:50.050 --> 13:50.770
对不对

13:50.770 --> 13:51.810
它传递了Value吗

13:51.810 --> 13:52.530
它没有传递Value

13:52.530 --> 13:53.490
我们来看一下Value的

13:54.450 --> 13:55.010
左边

13:55.570 --> 13:56.210
第五个

13:57.650 --> 13:58.210
求准

13:58.690 --> 13:59.730
你看传递过来的东西

14:00.050 --> 14:00.610
Options

14:01.810 --> 14:02.370
你看

14:02.370 --> 14:03.490
联系的传递的是什么

14:03.490 --> 14:04.450
传递的是迁迹

14:04.450 --> 14:05.570
而不再是Input了

14:06.050 --> 14:07.570
ProbsData的传递的

14:07.570 --> 14:09.090
因为我这里没有声名Prob

14:09.090 --> 14:10.210
它这里没有传过来

14:10.210 --> 14:12.610
实际上传递的是Number

14:12.770 --> 14:14.610
所以我们把Probs的声名引一下

14:15.250 --> 14:15.890
你看

14:15.890 --> 14:17.170
现在就可以看得清楚了

14:18.770 --> 14:19.410
没关系

14:19.410 --> 14:20.530
报处跟它报处吧

14:22.450 --> 14:24.050
这个这里打开

14:24.050 --> 14:24.770
打开

14:25.330 --> 14:26.210
第五个

14:26.850 --> 14:27.330
这里

14:28.130 --> 14:28.850
Options

14:29.330 --> 14:29.810
你看

14:29.810 --> 14:31.890
传递的是不是Number和Change

14:31.890 --> 14:32.450
对吧

14:32.450 --> 14:34.210
那么这个玩意会影响

14:34.210 --> 14:35.650
别人用这个组件的时候

14:35.650 --> 14:37.170
使用Vmod的时候

14:37.170 --> 14:39.410
它生成了属性名和事件名

14:39.410 --> 14:40.770
就起着没有作用

14:40.770 --> 14:42.290
那么现在我们要改正确的话

14:42.450 --> 14:43.890
这里要用Number

14:46.860 --> 14:48.140
那么生存的事件的

14:48.140 --> 14:49.660
事件名字要用Change

14:50.300 --> 14:51.180
那就玩笑了

14:51.980 --> 14:52.300
好

14:52.300 --> 14:53.020
报处

14:53.020 --> 14:53.820
现在就可以了

14:55.100 --> 14:55.340
好

14:55.340 --> 14:57.100
这就是咱们这就可要讲的东西

14:57.100 --> 14:58.300
非常的简单

14:58.300 --> 14:59.100
Vmod

14:59.100 --> 14:59.900
那么面试的时候

14:59.900 --> 15:01.260
把这些东西打出来就OK了

