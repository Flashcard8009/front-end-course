WEBVTT

00:00.240 --> 00:03.120
咱们这些课呢来做一个小的练习啊

00:03.120 --> 00:05.360
就是来做一个萌尘组件

00:05.360 --> 00:07.720
学到这呢 大家应该知道什么叫萌尘了吧

00:07.720 --> 00:09.840
不用解释的吧 对吧 就是一个

00:10.480 --> 00:14.400
一个半透明的东西 把整个页面给它遮住啊 写成这么一个组件

00:14.400 --> 00:17.840
这个组件呢 我打算把它写成一个比较通用性的组件

00:17.840 --> 00:20.960
可能我们后边呢 都可能会用到啊 都可能会用到

00:20.960 --> 00:25.000
所以说呢 我们这里呢 在这里src目录下面呢 建议文件夹啊

00:25.200 --> 00:26.000
compolance

00:26.720 --> 00:32.480
compolance 就是我们的组件 就是一些通用性的组件呢 我们都把它写到这里边 好吧

00:33.600 --> 00:35.480
好 现在我们新建个文件啊 给他取个名字

00:36.640 --> 00:41.400
叫做model 点解释 是一个萌尘组件 由于他只做萌尘

00:42.840 --> 00:48.240
这个萌尘里边有什么东西啊 我不care 我一点都不care

00:48.720 --> 00:53.200
那你该有什么东西 你给我传进来就行了啊 所以说我到比方说他是一个广告

00:53.680 --> 00:59.040
他是一个什么 一个出车对话框 或者是一个登陆对话框 其实什么东西都可以

00:59.320 --> 01:05.840
但是呢 我只是把萌尘给你处理好啊 其他的事情呢 我不管 每个组件呢 他只做一件事啊 只做一件事

01:06.640 --> 01:11.920
好 那么这个萌尘组件呢 我就直接使用函数组件吧 他也没有什么状态啊 也没有什么神秘周期

01:12.080 --> 01:16.320
他就是显示不显示不显示就完事了啊 我们这里呢就可以

01:17.200 --> 01:18.720
写上一个啊rfc

01:19.680 --> 01:26.880
啊萌尘组件 然后呢这个div呢他肯定有个内样式啊 class name 为什么呢 为那个

01:28.000 --> 01:33.520
就是model啊model啊 这里让我们建一个css文件啊model css

01:34.000 --> 01:39.360
啊 我们通常情况下呢都都会把这个啊 这里我说一下这个工程结构

01:39.840 --> 01:45.200
就是有两种做法这里 一种做法呢就是说把他直接放到根木度下边

01:45.680 --> 01:52.160
也通用了新的组件了 把它放到根木度下边 然后呢就是说也蒙就是组件的名字呢是model js

01:52.640 --> 01:53.120
然后呢

01:53.840 --> 01:59.440
他的那个就是css呢 就是放一个同名的文件作为他的css 这是一种做法

02:00.160 --> 02:03.120
啊 当然了 这里边还可以组织一些结构啊 比方说common

02:03.760 --> 02:11.040
表示通用组件啊 通用组件 把这个里边这个放过来啊 是一样的 是一样的啊 这是一样的做法

02:11.760 --> 02:15.600
还有另外一种做法呢 另外一种做法就是新建一个文件夹

02:17.040 --> 02:20.560
组件叫什么名字 我们就这个文件夹呢 就使用什么名字

02:20.800 --> 02:26.080
就是model啊 比方说这是个蒙层组件啊 那么蒙层组件里边 他可能有css

02:26.400 --> 02:32.240
可能有js对吧 我们直接建一个文件夹啊 把这个蒙层组件的所有东西呢都放放到这个文件夹里边

02:33.040 --> 02:38.160
好 这个文件夹里边的那个名字呢 就稍微改一下了啊 就不再用这个名字了 用什么 用index

02:38.720 --> 02:42.400
好 我一会解释为什么 为什么要用这个名字啊 为什么要用这个名字

02:42.720 --> 02:50.320
因为用了index之后呢 咱们一会去用这个组件的时候啊 比方说啊 我们一会来测试一下啊 the component里边测试一下

02:51.920 --> 02:57.520
test.js啊 在这个里边呢 我们测试一下这个组件啊 比方说啊 这为什么会有个

02:58.800 --> 03:06.240
这个rcc啊 一个内组件啊 这里边呢 我们要使用这个蒙层组件 import 那我们怎么导入呢 你看着啊 怎么导入

03:08.640 --> 03:10.640
model

03:13.970 --> 03:21.890
comment里边直接导入model 后面就不写了啊 就不写了 为什么可以不行啊 大家应该可以应该知道啊 因为这个蒙层组

03:22.290 --> 03:32.850
因为这个文件夹里边呢 如果你直写了一个文件夹的名字 你没有写文件的名字 他默认情况下呢 会去读取啥 读取这个文件夹里边的index.js

03:33.570 --> 03:35.330
对吧 他是会这样去读取

03:35.810 --> 03:46.370
所以说呢 我们这里就可以直写文件夹就行了 这也是一种做法 这种做法呢 就感觉就管理起来呢 更加集中 对吧 所有的组件跟这个组件相关的就全部写到这

03:46.930 --> 03:52.930
啊 管理起来相对集中一点 就是看具体你们以后到公司里边 他们是怎么样的风格啊

03:53.410 --> 03:58.770
这两种风格都可以 一种是写到外面啊 一种是用这种方式来写 把组织一下结构

03:59.730 --> 04:03.970
好 那么这里呢 这个盟程 我就直接来用呗啊 直接把用进来啊

04:05.890 --> 04:08.290
啊 摸着 那么到时候用的时候呢

04:09.810 --> 04:11.250
怎么回事 摸着

04:12.050 --> 04:15.650
啊 然后呢 这里边我们就随便传那个东西啊 随便传一个东西

04:15.970 --> 04:20.450
那么因为 因为他这个组件里边 他并不知道里边应该显示啥 他只是给你做了个盟程

04:20.930 --> 04:23.170
那这里边就是任何东西都可以往里边传

04:23.730 --> 04:29.810
好吧 我们到时候用的时候呢 就可以用这种方式来来进行使用啊 这就是一个非常简单的一个盟程组件

04:30.770 --> 04:31.970
好了啊 那咱们

04:32.770 --> 04:36.770
那既然都写到这 我们就来测试一下吧啊 就来测试一下 import

04:37.410 --> 04:37.730
呃

04:38.610 --> 04:40.210
那个test from

04:41.250 --> 04:46.370
component test 这里边我们就直接使用test这个组件啊 来测试一下

04:50.240 --> 04:50.560
啊

04:51.520 --> 04:55.600
我看一下啊 我之前已经运行了啊 已经运行了 那怎么这里呢

04:57.200 --> 05:02.320
啊 这里关掉啊 其他的啊 目前呢没有显示任何东西 对吧 目前没有显示任何东西

05:02.640 --> 05:07.040
好 现在呢 我们再来制作这个组件 这个组件呢 有个内样式啊 有个内样式model

05:07.280 --> 05:09.680
啊 我们在这里面呢 就写个这么一个内样式啊model

05:09.920 --> 05:12.880
然后呢 在这边呢 把导入进来啊 把这个css导入进来

05:13.920 --> 05:20.000
我什么又去写的一个林可去了啊 真的快搞成神经分裂了啊 一讲公开 公开客和这个东西混折起啊

05:20.240 --> 05:23.120
真的快搞成神经分裂了啊 这里呢 把个

05:24.320 --> 05:25.280
把个导入进来啊

05:26.480 --> 05:29.360
第二 写个啊 index css

05:30.320 --> 05:34.720
好 导入进来过后呢 我们给他一些内样式啊 model 里边 他肯定是plation啊

05:34.800 --> 05:38.080
所以他元素结构放在哪 其实无所谓 因为他始终是fixed

05:38.400 --> 05:43.360
啊 始终是固定定位 那么宽度呢 百分之百啊 高度呢 百分之百

05:44.000 --> 05:47.520
对吧 所以完成了 呃 然后呢 给他个背景颜色啊

05:48.480 --> 05:53.440
啊 这个背景颜色 我说一下啊 背景颜色 那么这个背景颜色的话

05:55.280 --> 05:58.880
呃 我还是希望他能够传递啊 能够传递过来

05:59.360 --> 06:03.040
传递个背景颜色进来 所以说呢 我们这里呢 尽量把他做的

06:04.000 --> 06:10.640
怎么样 做的就是更加友好一点啊 就是说更加灵活一点 他可以传递的啊 通过一个props来进行传递

06:11.200 --> 06:15.440
传递一个背景颜色 传递一个透明度啊 把这些东西都传递进来

06:16.400 --> 06:20.800
好 比方说背景颜色的话啊 我们这里可以这样子来处理

06:22.240 --> 06:23.600
比方说啊 datas

06:26.160 --> 06:28.480
我们从这个props里边啊 把这个

06:29.120 --> 06:34.560
解构出来啊 把他解构出来 把他相当于是把对象的东西复制一下啊 放到这个datas里边

06:34.960 --> 06:41.360
为什么要放过来呢 因为我们可能会有一些默认值 如果你没有传递的话 那么我们可以给他一些默认值

06:41.520 --> 06:47.920
对吧 我们这里都可以处理啊 都可以进行处理啊 就判断一下吧 如果这个datas里边包含了什么呢

06:48.400 --> 06:50.800
我们这样子 这样子来写 这样子啊

06:51.920 --> 06:53.440
我们写一个default

06:54.480 --> 06:58.960
一个默认属性啊 一个默认属性 就是默认属性里边有哪些东西呢

06:59.360 --> 07:04.560
默认属性 默认属性里面有个bg啊 就是背景颜色啊 背景颜色

07:04.960 --> 07:08.640
背景颜色呢 我们默认为当然就是个颜色代码对吧 可以是

07:09.440 --> 07:11.840
可以是rtb啊 可以是那个

07:13.040 --> 07:17.120
就是六进制的都可以 总之呢 你给我一个背景颜色

07:17.760 --> 07:23.200
好吧 给我一个背景颜色 但是呢 这样子呢 我以后要跟那个透明度就是

07:24.160 --> 07:25.120
跟那个透明度

07:27.680 --> 07:33.120
组合性来不太好组合 那行吧 那这样子吧 你直接给我给我传递一个 你传啥我用啥

07:33.200 --> 07:38.240
行吗 你传啥我用啥 比方说你给我传默认情况下呢 他是这个这个颜色啊 您

07:38.720 --> 07:43.600
您 您得五啊 默认情况是这个 当然那你可以重新传递给我覆盖掉

07:44.240 --> 07:50.080
然后呢 接下来我们使用这样的一种一个代码啊 使用这样的一个代码 就是说啊 得到

07:52.000 --> 07:54.720
得到最终的最终的属性 就是把

07:55.920 --> 08:03.360
这个属性啊 覆盖掉默认属性啊 如果你有的话 是不是就把覆盖掉了 对吧 这是一个常见操作啊 这是默认属性

08:05.200 --> 08:08.160
其实我们后边呢 还会专门来讲默认属性 我们先这样做吧

08:09.120 --> 08:17.440
这里呢 我们使用一个data是吧 你传得到数据 数据来自于哪呢 来自于objects而散

08:19.760 --> 08:21.920
然后呢 default props

08:23.280 --> 08:29.760
props 对吧 我们为了避免去改动这两个东西啊 他肯定不能改对吧 他倒是可以改

08:29.840 --> 08:33.760
但是我们尽量也为了避免避免他改动 所以说我第一个参数呢 放了一个空对象

08:34.400 --> 08:38.880
好 这样子呢 我们就混合这些对象啊 混合这些对象 得到了一个新的对象

08:39.440 --> 08:43.840
然后呢 我们把这个新的对象里边的 bg 放到这 对吧 是不是就完事了啊

08:44.400 --> 08:46.720
把新的对象里边 bg 放到这啊 style

08:47.680 --> 08:55.360
他是个对象 对吧 他在央视里边一个白光啊 背景颜色 背景颜色等于什么呢 等于这个data 是里边的什么 bg

08:56.480 --> 08:59.520
这样子放过来 准备完事了啊 保存看一下吧

09:00.000 --> 09:06.000
你看 哦 还没有设置座标 对吧 没有设置座标啊 这里一个问题

09:06.640 --> 09:08.720
nav 乘零啊 top 指零

09:09.440 --> 09:16.080
保存啊 那一看 是不是个蒙城 对吧 把整个网页就铺满了啊 铺满了 哎 看上去好像不像是个蒙城的

09:16.640 --> 09:25.120
是因为我们这个里边没东西啊 我这个div里边没东西 那行吧 那我们为了测试呢 给他一张图片嘛 给他一张图片啊

09:25.840 --> 09:30.640
啊 27 这样子看得清楚一点啊 主要是

09:32.000 --> 09:38.670
这个复制一下啊 这里给他一个图片 张开过来啊 保存

09:39.870 --> 09:46.910
好 你看一下 是吧 把车住了 对吧 无论怎么去滚动滚动条啊 那么这个蒙城始终存在 看到没 始终存在

09:47.950 --> 09:53.950
好 这就是个蒙城 是不是创建好了 那么现在呢 我们不仅可以 他不仅有默认的背景颜色

09:54.270 --> 10:01.390
但是如果你想改他的背景颜色的话 也非常非常的轻松 比方说啊 我们这里要改这个背景颜色 怎么改的 这个要传一个 bg 进去就行了啊

10:01.870 --> 10:05.230
rgba 重新要传一个啊 比方说传了一个0

10:07.070 --> 10:09.790
就是255 002

10:10.830 --> 10:14.990
3 比方说吧 随便传一个啊 传了过进去过后 他是变成这个蒙城的

10:15.710 --> 10:20.430
对不对啊 你可以改变他的背景 也可以不管他啊 就非常的灵活

10:21.390 --> 10:28.110
好 然后呢 这里边有什么东西呢 这里边呢 肯定要换个div 因为他不管显示什么东西 他一定是居中的 对不对

10:28.350 --> 10:34.990
他一定是居中的啊 那么这里呢 放一个div给他的那样式啊 什么那样式呢 就是center

10:36.350 --> 10:38.110
就是model center

10:39.390 --> 10:44.670
蒙城居中的这么一个div 给这个div呢 书写一个样式啊 书写一个样式

10:45.630 --> 10:47.070
model center

10:47.790 --> 10:53.630
那什么样式呢 主要的目的呢 是给他一个就是啊 给他一个居中啊 给他一个居中

10:54.910 --> 11:02.830
让他居中啊 然后居中的话 我们就使用net 50%啊 使用cc3里边的书写啊 然后使用transform

11:03.550 --> 11:04.190
transnet

11:05.390 --> 11:06.110
net

11:07.230 --> 11:08.750
附的50%

11:09.310 --> 11:10.590
然后呢 附的50%

11:12.350 --> 11:13.150
好 保存一下

11:13.950 --> 11:14.590
好 你看一下

11:15.550 --> 11:24.130
哦 这里面 这里面还要放个什么 还要放置那个probs里边的啊 不是就data室里边的什么敲嘴

11:25.250 --> 11:25.650
放着这个

11:26.770 --> 11:27.570
好 保存看一下

11:29.600 --> 11:37.680
哎 好像不太对 是吧 不太对啊 咱们来看哦 没有设置位置对吧 没有 并没有设置位置吧 居中啊 我这里并没有把他决定绝对定位

11:38.080 --> 11:40.400
plation absolute 啊 绝对定位

11:41.040 --> 11:43.520
好 保存看一下 你看是不是居中了

11:43.840 --> 11:50.400
那么这里边的东西是什么呢 你就自行设置了啊 你看这东西居中了 我的我的主要功能呢 是给你

11:50.640 --> 11:52.880
显示一个盟城 然后把这里边的东西呢

11:53.840 --> 11:58.320
然后呢 你给我传这个东西呢 我把它放到中间的这个div里面 这就是个主线的主要目的

11:58.720 --> 12:04.000
那这里边的div有什么样的样式啊 他有什么样的内容啊 你自己随便了啊 跟我就没有什么关系了

12:04.400 --> 12:12.080
啊 就是这么一个主线 非常非常简单 但是非常非常实用 比如说将来我们要弹出盟城怎么办呢 我们可以用一个状态来控制啊

12:12.400 --> 12:13.280
一个状态来控制

12:13.680 --> 12:14.080
stat

12:15.120 --> 12:15.440
stat

12:17.280 --> 12:18.080
呃

12:19.360 --> 12:20.080
比方说啊

12:20.080 --> 12:20.480
shoot

12:22.510 --> 12:23.070
shoot mode

12:23.790 --> 12:24.350
shoot mode

12:25.070 --> 12:28.350
把他设为q 把他设为force嘛 把他设为force

12:28.830 --> 12:33.630
那么这个这个东西到底要不要显示呢 到底要不要显示 我们可以用这种方式 对吧

12:33.950 --> 12:36.430
用这种方式啊 写上这个这么一个表拿式

12:37.790 --> 12:41.230
像这么一个表拿式 这么一个表拿式呢 就是说this is stat

12:42.030 --> 12:42.510
stat

12:42.670 --> 12:44.270
第2shoot mode

12:44.990 --> 12:47.470
如果要显示的话 okay 那我给你这个东西

12:48.030 --> 12:50.110
把扩起来啊 做一个表拿式 扩起来

12:51.230 --> 12:54.990
for物责的话 那我就给你一个什么脑啊 啥都不显示

12:56.030 --> 13:02.510
啊 保存看一下吧 一开始是不是不显示的 对吧 不显示的 okay 那么这里呢 如果把他设为q 是不是可以显示的

13:02.990 --> 13:06.350
对不对 那你之后呢 是不是可以用的使用者

13:06.990 --> 13:08.350
是不是就可以使用这个

13:09.070 --> 13:13.310
这个状态来控制这个萌城的显示和隐藏了

13:14.030 --> 13:18.830
没问题吧 比较说啊 咱们这里呢 再写个按钮啊 按钮

13:19.390 --> 13:22.110
一开始呢 是不显示的啊 force

13:23.230 --> 13:24.350
显示

13:26.350 --> 13:27.630
显示萌城

13:29.390 --> 13:31.470
给他加上一个onclick

13:32.030 --> 13:33.070
onclick

13:36.880 --> 13:40.560
然后呢 显示萌城

13:41.200 --> 13:45.120
嗯 这里边呢 我们给他写上一个

13:46.720 --> 13:49.280
就是 z set state

13:50.080 --> 13:53.200
把这个什么 把这个shoot mode 把它设为什么 q

13:54.000 --> 13:54.880
对吧 就完成了

13:55.840 --> 14:01.200
保存啊 有这么一个按钮啊 看一下 下面是不是一个按钮 对吧 点击 你看是不是显示萌城了

14:02.160 --> 14:05.920
好了 那么这个萌城怎么隐藏了啊 怎么隐藏了

14:06.800 --> 14:10.240
啊 这个萌城的隐隐藏的话

14:10.960 --> 14:16.480
一般来说的话 你是要在这里边 对吧 萌城这里边可能要有个div啊 什么乱七八糟

14:16.480 --> 14:22.320
他这里边有个关闭啊 比方说这里边 除了a7元素之外呢 还有一个button啊 关闭萌城

14:22.720 --> 14:26.880
啊 关闭萌城 其实通常情况下呢 这整个萌城中间这一部分呢

14:27.280 --> 14:30.400
他一般是有个白色背景 那我就要设置一下了

14:30.960 --> 14:33.600
整个萌城中间这一部分呢 往往是有个白色背景

14:35.040 --> 14:35.600
保存啊

14:36.960 --> 14:41.600
显示萌城啊 有中间这部分一个白色背景 好 那么这里关闭萌城是我自己设置的 对吧

14:42.000 --> 14:45.280
不是在这个主间里边 对不对 这个主间里边鬼知道这里边有什么东西

14:45.680 --> 14:50.320
是使用者呢 去控制的 那么这个关闭萌城呢 我就做什么了 onclick

14:52.400 --> 14:53.120
啊 onclick

14:54.960 --> 14:58.720
啊 然后呢 这里呢 是不是 又来一次啊

14:59.680 --> 15:05.280
我自己没有写 因为这是这里只是做测试啊 所以说 我没有写去写什么把它写成函数了

15:06.000 --> 15:08.080
好 保存啊 看一下 显示萌城

15:08.560 --> 15:13.520
关闭萌城 显示萌城关闭萌城 是吧 外面是不是可以控制的 对不对 这个主间就写好了

15:14.560 --> 15:16.640
啊 有的时候呢 还有这么一个需求啊

15:17.360 --> 15:22.560
那刚才我还是把要不然把它设置成一个圆角怎么样 算了算了 我不要去划舍天主了

15:22.960 --> 15:23.200
啊

15:23.920 --> 15:37.760
我尽量不要划舍天主 因为这个尽量通用啊 所以说很多地方就不要写死了啊 你要用啊 你要用什么圆角啊 这些东西乱七八糟的玩意 你自己去做啊 你自己去做 我只是给你负责剧中 我连背景颜色也不给你设置了

15:38.320 --> 15:39.440
背景颜色也不给你设置

15:40.000 --> 15:43.840
你自己去做啊 我尽量通用一点啊 尽量通用一点 免得为以后的

15:44.480 --> 15:46.560
写死了过后了以后用起来不太灵活

15:47.280 --> 15:51.760
我只是给你负责剧中 剩下的事情你自己搞定好 关闭萌城啊 显示萌城关闭萌城

15:53.440 --> 16:00.720
如果说这个萌城点击这个萌城歪维的部分啊 点击这个萌城歪维的部分 他也要实现关闭

16:01.520 --> 16:07.040
也要实现关闭 那么这个东西怎么做呢 点击萌城歪维的部分 他也要实现关闭

16:07.600 --> 16:14.560
好 那么这个时候呢 我们可以通过一个属性啊 通过一个属性来指示一下 指示一下这个组件

16:14.880 --> 16:21.520
说就是说你点击外层是不是可以自动关闭啊 点击外层是不是可以自动关闭

16:22.480 --> 16:26.240
来指示一下这个组件 好ok啊 那咱们呢

16:28.000 --> 16:30.800
就写上其实我们这里要做的事情就是

16:31.520 --> 16:39.520
给这个div加上一个事件啊 然后呢这个事件呢我不处理 因为我没法控制 没有办法控制自己要不要关闭

16:39.680 --> 16:42.480
对吧 我没有办法控制自己要不要关闭

16:42.880 --> 16:49.680
所以说呢 因为他又没有状态 对不对 他又没有状态 这是个无状态的组件 他是个寒宿组件嘛 寒宿组件是没有状态的

16:50.400 --> 16:53.040
通常情况下呢 我们做这些组件的时候呢

16:53.840 --> 17:01.280
有这么一个通常有这么一个原则啊 特别是做一些基础的用于显示的组件的时候呢 通常都不会给他设置状态

17:02.160 --> 17:06.720
完全让别人来控制他的显示隐藏 所以说呢 这一块呢 我刚才这样子

17:07.360 --> 17:15.040
给这个div呢 注册一个点击事件 当点击这个div的时候啊 当点击这个div的时候 干嘛呢

17:15.440 --> 17:21.520
我抛出一个事件 你来控制要不要隐藏啊 你来控制要不要隐藏

17:22.160 --> 17:24.400
好吧 好 那么这里呢 我们

17:26.080 --> 17:31.920
写上这么一个东西啊 你看这里处理起来非常灵活 onclick 点击这个div点击的时候

17:33.200 --> 17:37.280
啊 干嘛呢 这个div点击的时候 我点击到div了

17:38.160 --> 17:44.560
点击的时候 我要不要隐藏了 我让别人来控制 我自己不做控 不做任何控制

17:45.200 --> 17:52.640
自己不做任何控制 让别人来控制 所以我这里呢 应该是使用一个事件 把这个事件扔出去 让别人来处理

17:52.960 --> 18:00.640
好 怎么来处理呢 我直接认为这个属性里边呢 就有这么啊或者说这个data是反正混合之后了嘛 啊

18:00.960 --> 18:07.360
这个两个是不是混合之后的对象 对不对啊 我们认为呢 这里呢 你要给我传一个东西进来 什么东西呢

18:08.960 --> 18:10.720
unclose 啊unclose

18:11.440 --> 18:16.080
你要怎么去隐藏 你自己去搞定 总之呢 我触发的这个事件 你爱隐藏不隐藏 随便你

18:16.640 --> 18:24.400
随便你啊 那么 当然如果你不传递的话 这个东西是undefine的 undefine的如果复制过去的话 那么他到时候就不会运行任何函数

18:25.040 --> 18:27.840
不会运行任何函数 就是我把这个事情呢交给你来处理

18:28.480 --> 18:36.240
没问题吧啊 我们把交给你来处理 那么比方说啊 有有了这么一个事件过后了 这边是不是可以写同样的啊 比方说我们刚才还是把他写成函数吧

18:36.640 --> 18:38.480
修默的啊修默的

18:41.520 --> 18:45.360
啊 就是修默的就是其实很简单啊 就是这个把设为q

18:47.200 --> 18:48.800
啊 然后hide mode

18:51.440 --> 18:56.000
隐藏蒙城啊 蒙城他自己不控制隐藏显示 他只是做一个显示而已

18:56.400 --> 19:02.000
怎么来 要不要隐藏 什么时候隐藏 怎么去隐藏 你自己隐藏的时候要做啥 你自己去搞定

19:03.200 --> 19:06.080
有状态的主见自己去搞定 我是一个无状态的主见

19:06.720 --> 19:08.240
好 那么这里呢 我们就这样子写啊

19:08.800 --> 19:14.640
稍微减约一点 这是修默的啊 这里呢 就是啊 unclick this

19:15.440 --> 19:20.320
hide mode 点击这里边的按钮呢 要关闭蒙城 然后呢 这里边有个事件啊 就是unclose

19:22.400 --> 19:28.800
这是hide mode啊 如果给他复制了 那么我点击外面了也会隐藏 保存看一下了

19:29.760 --> 19:35.040
啊 点击显示啊 点击外面了所以也隐藏了 点击显示啊 再点击也隐藏了

19:35.840 --> 19:37.680
好 当然呢 点击这个所以也可以隐藏

19:38.560 --> 19:45.920
对不对啊 让y城来控制 自己不做任何控制 自己只是一个无状态 他都做的事情就是根据属性把这些东西显示出来

19:46.400 --> 19:50.720
啊 当然如果你不希望点击y城能隐藏了 你把这句话去掉就完事了

19:51.440 --> 19:55.120
啊 保存 点击显示 你看点现在隐藏不了了啊

19:56.560 --> 20:00.800
好 现在我们再看一下啊 再尽量还剩最后一个点 再看一下这个东西

20:01.600 --> 20:07.200
呃 有没有八个呢 点击一下 你看这个点这里边东西他也隐藏了

20:07.840 --> 20:12.400
点中间这一部分里边东西也隐藏了啊 如果我把背景颜色加上 大家可能更加清楚一点

20:13.520 --> 20:17.120
说实话 这里呢 算了 不在这里加 为了

20:17.680 --> 20:20.640
为了尽量的通用啊 我不在这里加任何东西

20:22.750 --> 20:24.910
我来这里边加 来这里加个DV

20:28.020 --> 20:30.260
就是这里边有什么样子 你自己去做啊 我不管

20:30.820 --> 20:33.780
啊 我不管你 好 这里面写上一个style

20:35.620 --> 20:37.220
呃 写上一个background

20:38.100 --> 20:39.460
background

20:43.020 --> 20:44.300
白色啊 看一下吧

20:45.180 --> 20:47.500
这里边套一个DV 这个DV一个背景颜色白色

20:47.900 --> 20:52.780
好 显示啊 那我点这里边部分的时候 你看是不是也隐藏了 为什么

20:53.260 --> 20:56.540
是有事件冒泡 这是不是不符合逻辑的

20:56.940 --> 21:02.540
对吧 哪怕你点击蒙城要隐藏 也是点击y为的要隐藏 点击里边的是不会隐藏的

21:02.940 --> 21:06.460
那么这件事呢 谁来处理的 这件事可以让这个逐渐来处理

21:07.020 --> 21:11.820
因为这是这个逐渐的核心逻辑 对吧 你要隐藏可以 要不要隐藏呢 我不知道

21:12.060 --> 21:15.580
但是呢 什么时候要隐藏我是非常清楚的

21:16.140 --> 21:18.700
什么时候要触发这个事件我是非常清楚的 也就是

21:19.020 --> 21:21.660
当我们点击中间这一部分的时候呢 是不会触发事件的

21:22.220 --> 21:24.380
啊 只有点击y为的时候才会触发这个事件

21:25.100 --> 21:28.700
没问题吧 okay啊 那咱们呢 这里面就可以这样子写

21:29.820 --> 21:31.020
啊 封装一下

21:31.980 --> 21:34.940
判断一下啥呢 不是有个事件参数y吗 对不对啊

21:35.500 --> 21:40.300
有事件参数y啊 以为他有个事件冒泡对吧 这里有一个事件冒泡

21:41.180 --> 21:43.020
啊 那么这个事件冒泡呢

21:43.340 --> 21:47.020
也就是说那如果是冒泡上来的事件呢 我就不做处理了

21:47.340 --> 21:52.460
啊 我就不做处理了 我只是说点击了自己本身啊 点击了本身过后了

21:52.940 --> 21:54.540
啊 我要进行隐藏

21:55.340 --> 21:55.900
没啥意思吗

21:56.620 --> 22:00.940
哎 那我们这里怎么写呢 就判断一下呗啊 判断一下

22:01.260 --> 22:04.940
判断一下意思吗 这个y一点 它这个判断方式有很多啊

22:05.260 --> 22:06.620
这个y点target

22:07.420 --> 22:11.100
是不是变成动物元素了 跟以前学的动物元素是一样的操作了

22:11.500 --> 22:15.580
看一下这个y点target才叫什么 class name是不是等于model

22:15.580 --> 22:20.380
我们用用这个class来判断嘛啊 但这个方式有很多啊 方式有很多

22:21.020 --> 22:24.220
啊 然后通过它来判断 如果是这个model的话

22:25.500 --> 22:26.220
可以用什么

22:27.580 --> 22:32.860
然后这个时候来才进行隐藏啊 就是data是unclose

22:33.420 --> 22:36.620
才触发这个事件啊 这个时候才会触发这个事件

22:37.660 --> 22:39.900
只是判断一下啊 保存那看一下

22:40.540 --> 22:44.620
那现在的显示盟程 你看点里边了不会有反应了啊 点外层了才能隐藏

22:45.180 --> 22:49.500
怎么样 就判断一下 就是说其他的情况我就不触发了啊 就不触发了

22:50.380 --> 22:56.540
啊 当然这里的判断方式很多啊 大家可以自行去发挥一下想象里 总之呢 如果他点的是自己自己这个div

22:56.780 --> 22:57.660
ok 我们才隐藏

22:58.540 --> 23:02.060
好了啊 那就这样子呢 一个盟程组件就制作完成了

23:02.540 --> 23:07.020
啊 我们把它做一个公共组件啊 咱们后边呢都有可能会用到的 下来大家把它写一遍啊

23:07.180 --> 23:11.900
这是第一个小的demo 啊 下期可能咱们再做一个啊 再做一个 因为像这个

23:12.540 --> 23:16.380
修准了这个东西呢 他很简单 但是他用途呢还蛮多的

23:17.820 --> 23:18.220
看一下啊

