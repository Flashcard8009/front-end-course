WEBVTT

00:00.750 --> 00:06.910
上级课咱们把菜单布局这东西说了

00:06.910 --> 00:10.190
但是上级课好像有点没说漏了

00:10.190 --> 00:11.750
我这几课把它补充一下

00:11.750 --> 00:12.910
就说啥呢

00:12.910 --> 00:15.230
就是一开始表示这里是我们访问的地址

00:15.230 --> 00:15.630
对吧

00:15.630 --> 00:17.230
然后我们一刷新

00:17.230 --> 00:18.350
一刷新

00:18.350 --> 00:23.470
这个地方还处理起来还是稍微有那么一丢丢的难度

00:23.470 --> 00:24.750
就在我们这一刷新呢

00:24.750 --> 00:28.430
倒是它目前选中的是这个倒是没什么问题了

00:28.990 --> 00:30.350
只不过呢

00:30.350 --> 00:31.310
这一块呢

00:31.310 --> 00:33.030
它没有默认展开

00:33.030 --> 00:34.630
它有这么一个问题

00:34.630 --> 00:36.470
那你这个学生管理学生查询

00:36.470 --> 00:37.870
你不应该展开选中吗

00:37.870 --> 00:38.630
对吧

00:38.630 --> 00:40.110
当然这些都是小问题

00:40.110 --> 00:40.910
小问题

00:40.910 --> 00:43.190
那么如果说我们要处理

00:43.190 --> 00:43.830
怎么办呢

00:43.830 --> 00:45.350
是不是还得看文档

00:45.350 --> 00:46.630
咱们的文档里边

00:46.630 --> 00:48.390
你看一下怎么来控制展开的

00:48.390 --> 00:49.430
对吧

00:49.430 --> 00:51.150
在那个菜单

00:51.150 --> 00:52.790
导航菜单里边

00:52.790 --> 00:53.950
它这里边有告诉你

00:53.950 --> 00:55.630
怎么来控制展开

00:55.630 --> 00:56.390
你看一下吧

00:58.510 --> 01:00.470
这个在哪呢

01:00.470 --> 01:01.230
这里

01:01.230 --> 01:02.430
在哪

01:02.430 --> 01:02.750
在哪

01:02.750 --> 01:03.350
3

01:03.350 --> 01:03.470
2

01:03.470 --> 01:03.990
3

01:04.990 --> 01:06.750
这个找一下

01:07.750 --> 01:08.710
在这

01:08.710 --> 01:09.670
选中的

01:09.670 --> 01:10.470
这选中的

01:10.470 --> 01:11.870
展开应该是Open

01:11.870 --> 01:13.230
Open

01:14.070 --> 01:15.390
Open

01:15.910 --> 01:16.430
Open

01:16.430 --> 01:16.870
对

01:16.870 --> 01:17.670
这里

01:17.670 --> 01:19.230
OpenKiss

01:19.230 --> 01:20.230
它也是一个数组

01:20.230 --> 01:23.110
它到底跟那个Snaghty的Kiss是一样的

01:23.110 --> 01:25.110
那个Snaghty的Kiss表示了说

01:25.110 --> 01:27.910
哪些菜单项是被选中的

01:28.150 --> 01:30.070
这个OpenKiss是哪些

01:30.070 --> 01:32.190
紫菜单是被展开的

01:32.190 --> 01:34.910
所以说它需要给紫菜单一个Kiss

01:34.910 --> 01:36.230
给紫菜单一个Kiss

01:36.230 --> 01:38.150
然后让这个紫菜单展开

01:38.150 --> 01:38.710
不要忘了

01:38.710 --> 01:40.710
我们这里找到这个迷你

01:42.030 --> 01:42.550
我们当时

01:42.550 --> 01:43.950
这里下面就可以标了

01:45.150 --> 01:46.630
在这我们不

01:49.110 --> 01:51.110
二赛的里边

01:51.110 --> 01:54.150
我们比方说要把学生管理展开

01:54.150 --> 01:54.710
对吧

01:54.710 --> 01:55.750
要把它展开

01:55.750 --> 01:57.390
那么是不是要给它一个Kiss

01:57.430 --> 01:59.270
我们得给这个紫菜单一个Kiss

01:59.270 --> 02:01.470
比方说123随便给一个

02:01.470 --> 02:03.390
那么我们展开它怎么展开呢

02:03.390 --> 02:05.470
就是OpenKiss

02:06.590 --> 02:08.750
哪些紫菜单是展开的

02:08.750 --> 02:10.630
那么这里我们给它个Kiss

02:10.630 --> 02:13.310
给它一个数组就是123

02:13.310 --> 02:14.950
那么这个紫菜单是要被展开的

02:14.950 --> 02:16.430
当然这个数组里边可以写多项

02:16.430 --> 02:17.910
如果你有多个紫菜单的话

02:17.910 --> 02:18.710
都需要展开的话

02:18.710 --> 02:19.630
你可以写多项

02:19.630 --> 02:21.110
好保存

02:21.110 --> 02:22.030
你看看

02:22.030 --> 02:22.550
这一刷新

02:23.790 --> 02:24.990
你看是不是不能展开的

02:24.990 --> 02:25.590
对吧

02:25.590 --> 02:26.470
不能展开的

02:26.510 --> 02:28.350
而且现在折叠不起来了

02:28.350 --> 02:30.430
你看是不是折叠不起来了

02:30.430 --> 02:31.990
为啥折叠不起来了

02:31.990 --> 02:33.150
为啥折叠不起来

02:33.150 --> 02:34.190
是不是因为

02:34.190 --> 02:35.230
你现在是吧

02:35.230 --> 02:36.670
相当于是个受控组件了

02:36.670 --> 02:37.710
它始终是展开的

02:37.710 --> 02:37.990
对吧

02:37.990 --> 02:38.950
始终是展开的

02:38.950 --> 02:41.550
那么它另外还有一个属性的叫做

02:41.550 --> 02:42.470
另外一个就是

02:42.470 --> 02:43.510
不是受控组件

02:43.510 --> 02:46.070
它这个跟那个Input元素是一样的

02:46.070 --> 02:47.350
一个它设置的Values

02:47.350 --> 02:49.190
你就不能随便改动它了

02:49.190 --> 02:51.510
它必须要等于它的Values

02:51.510 --> 02:54.510
如果说你只是让它初始的时候

02:54.510 --> 02:55.590
有一个状态的话

02:55.590 --> 02:59.430
那么你可以使用Default OpenTest

02:59.430 --> 03:00.750
一开始的时候

03:00.750 --> 03:02.110
因为一开始的时候

03:02.110 --> 03:03.590
哪些材材材是展开的

03:03.590 --> 03:06.310
那么后边它就自行决定了

03:06.310 --> 03:07.270
你看

03:07.270 --> 03:07.950
这样子

03:07.950 --> 03:09.230
它一开始的时候展开了

03:09.230 --> 03:09.470
对吧

03:09.470 --> 03:10.630
那么后边就可以折叠了

03:10.630 --> 03:12.030
就这两个属性

03:12.030 --> 03:14.750
它的区别就这么一点区别

03:14.750 --> 03:14.950
好

03:14.950 --> 03:16.030
这是这一块

03:16.030 --> 03:17.830
然后关键是我们怎么去控制它

03:17.830 --> 03:19.830
因为我们到时候

03:19.830 --> 03:22.030
如果说要考虑到以后的话

03:22.030 --> 03:25.190
那这个菜单是不是肯定不只有一个

03:25.350 --> 03:26.470
不只有一个菜单

03:26.470 --> 03:27.870
比如说学生管理

03:27.870 --> 03:29.710
还有什么课程管理

03:29.710 --> 03:30.990
还有什么学籍管理

03:30.990 --> 03:32.790
这可能都有很多菜单

03:32.790 --> 03:33.630
那么哪个子

03:33.630 --> 03:34.990
就是默认情况下

03:34.990 --> 03:37.270
哪个子菜单是展开的

03:37.270 --> 03:39.990
是不是你得判断

03:39.990 --> 03:40.910
你得控制

03:40.910 --> 03:41.390
对吧

03:41.390 --> 03:42.190
你得控制

03:42.190 --> 03:45.550
也就是你给它这个数组到底是啥

03:45.550 --> 03:47.550
是不是这个东西

03:47.550 --> 03:50.190
你这个东西还得想想办法

03:50.190 --> 03:51.910
那么我们的逻辑是啥呢

03:51.910 --> 03:52.470
就是说

03:52.470 --> 03:53.990
如果说这个子菜单下面

03:54.030 --> 03:57.270
有一个菜单是被选中了

03:57.270 --> 03:58.750
如果说它的子

03:58.750 --> 03:59.630
就像这里

03:59.630 --> 04:01.830
它的子菜单里面有一个被选中了

04:01.830 --> 04:03.510
那么它又一定要展开

04:03.510 --> 04:04.830
也一定要默认展开

04:04.830 --> 04:05.230
对吧

04:05.230 --> 04:06.910
我们的逻辑是这个样子的

04:06.910 --> 04:07.990
只要它有选中

04:07.990 --> 04:09.510
它就一定要被展开

04:09.510 --> 04:11.750
那么这一块我怎么来

04:11.750 --> 04:15.270
知道哪一个子菜单又没有被选中了

04:15.270 --> 04:19.870
这里我们给大家提供一种处理办法吧

04:19.870 --> 04:21.990
比方说我这里给大家举个例子

04:22.950 --> 04:24.670
我们这里有个辨量

04:24.670 --> 04:26.110
叫menu config

04:26.110 --> 04:27.790
就是我们一个写个对象

04:27.790 --> 04:31.390
就是我们的菜单的一个配置

04:31.390 --> 04:33.190
我们把它写成这么一种结构

04:33.190 --> 04:33.910
大家看着

04:33.910 --> 04:35.710
我把它写成这么一种结构

04:35.710 --> 04:38.030
每一个菜单的就是一个对象

04:38.030 --> 04:39.230
每个菜单就是个对象

04:39.230 --> 04:41.470
它有自己的标题

04:41.470 --> 04:43.990
有自己的标题

04:43.990 --> 04:45.670
标题是比方说

04:45.670 --> 04:49.190
第一个标题我看都不用了

04:49.190 --> 04:50.230
都不用了

04:50.230 --> 04:51.270
有自己的keyz

04:51.270 --> 04:53.150
每个菜单有自己的keyz

04:53.150 --> 04:54.830
比方说第一个菜单

04:54.830 --> 04:56.710
第一个菜单像是什么

04:56.710 --> 04:58.390
这应该是个数组

04:58.390 --> 04:59.470
应该是个数组

05:00.550 --> 05:02.270
等一下重新来

05:02.270 --> 05:04.070
就是我们的菜单配置里面

05:04.070 --> 05:05.950
每一个菜单是一个对象

05:05.950 --> 05:06.830
这个对象里边比方说

05:06.830 --> 05:08.230
这个后台管理手艺

05:08.230 --> 05:10.030
它是个菜单对象

05:10.030 --> 05:12.630
这个对象我们给它写上这么一个东西

05:12.630 --> 05:13.910
就是路径

05:13.910 --> 05:15.070
pass内

05:15.070 --> 05:16.590
路径连接到哪了

05:16.590 --> 05:17.950
连接到这

05:17.950 --> 05:19.710
然后标题是啥

05:19.750 --> 05:23.150
标题是后台管理手艺

05:23.150 --> 05:23.870
后台管理手艺

05:23.870 --> 05:25.190
这就是个菜单

05:25.190 --> 05:26.190
我们把对象写好

05:26.190 --> 05:27.790
一会我们循环这个数组

05:27.790 --> 05:29.390
来生成这个结构

05:29.390 --> 05:29.710
对吧

05:29.710 --> 05:30.470
我们可不可以这样做

05:30.470 --> 05:32.110
是不是可以这样做

05:32.110 --> 05:34.310
然后我们继续写

05:34.310 --> 05:36.550
然后下面这个学生管理

05:36.550 --> 05:37.030
对吧

05:37.030 --> 05:38.470
学生管理

05:38.470 --> 05:41.470
那么pass内

05:41.470 --> 05:42.950
或者我们把它叫做key

05:42.950 --> 05:44.750
叫做key

05:44.750 --> 05:46.470
就叫做key

05:46.470 --> 05:49.390
后台就是学生管理的key

05:49.430 --> 05:53.110
我们就给它取个名字叫做

05:54.750 --> 05:56.950
student manager

05:56.950 --> 05:59.070
给它取个key的名字

05:59.070 --> 06:02.070
然后给它title的名字是什么

06:02.070 --> 06:04.350
学生管理

06:04.350 --> 06:06.110
然后它是不是有指菜单

06:06.110 --> 06:06.870
它有指菜单的话

06:06.870 --> 06:08.390
我们给它写个key

06:08.390 --> 06:09.430
写上这么一个属性

06:09.430 --> 06:10.190
key

06:11.710 --> 06:12.870
这个又是个数组

06:12.870 --> 06:14.030
那么指菜单里边

06:14.030 --> 06:15.350
是不是每一个又有指菜单

06:15.350 --> 06:15.950
对吧

06:15.950 --> 06:17.870
又有又是个菜单

06:17.910 --> 06:18.910
菜单是不是又有key

06:18.910 --> 06:19.950
key是什么

06:19.950 --> 06:21.910
student

06:21.910 --> 06:23.790
然后title是什么

06:23.790 --> 06:26.190
学生查询

06:26.190 --> 06:27.150
对吧

06:27.150 --> 06:29.070
这里两个菜单

06:29.070 --> 06:30.590
一个是学生查询

06:30.590 --> 06:31.790
一个是什么

06:31.790 --> 06:33.630
添加学生

06:33.630 --> 06:35.870
添加学生

06:35.870 --> 06:37.950
就是添加学生

06:37.950 --> 06:39.550
就是我们要把我们的菜单

06:39.550 --> 06:40.750
写成一个对象

06:40.750 --> 06:42.190
写成一个对象结构

06:42.190 --> 06:44.030
那么现在我们就是

06:44.030 --> 06:45.150
通过这个对象结构

06:45.150 --> 06:47.510
来生成这些组件

06:47.550 --> 06:48.270
那么这样子

06:48.270 --> 06:49.990
它每一个地方是不是有key的

06:49.990 --> 06:50.430
对吧

06:50.430 --> 06:52.550
那么到时候我们就来判断

06:52.550 --> 06:53.670
某个地方

06:53.670 --> 06:55.510
某一个key有准是不是可以选中的

06:55.510 --> 06:56.910
选中了我刚才怎么办

06:56.910 --> 06:57.910
没有选中该怎么办

06:57.910 --> 06:59.310
我们是不是可以判断了

06:59.310 --> 07:00.430
对不对

07:00.430 --> 07:01.230
那么比较多

07:01.230 --> 07:03.350
我们写了这么一个config

07:03.350 --> 07:04.190
好写到之后

07:04.190 --> 07:05.430
那么这一坨

07:05.430 --> 07:06.830
我们是不是可以

07:06.830 --> 07:07.550
这一块

07:07.550 --> 07:09.430
是不是可以把它生成出来

07:09.430 --> 07:10.750
循环这个数组

07:10.750 --> 07:12.030
这个数组的每一个对象

07:12.030 --> 07:13.790
是不是对应一个什么

07:13.790 --> 07:14.670
menuitem

07:14.670 --> 07:15.270
对吧

07:15.310 --> 07:16.670
好来我们这里写

07:17.830 --> 07:18.710
menu

07:19.270 --> 07:21.950
我们用menuconfig

07:21.950 --> 07:22.710
用map

07:22.710 --> 07:22.990
对吧

07:22.990 --> 07:23.670
把个数组

07:23.670 --> 07:24.630
硬设

07:24.630 --> 07:25.470
数组的里面

07:25.470 --> 07:27.270
每一项是不是有一个

07:27.270 --> 07:28.190
相当于是一个菜单

07:28.190 --> 07:28.950
菜单对象

07:28.950 --> 07:30.550
相当于就是这么一个对象

07:30.550 --> 07:32.990
好拿到这个对象之后了

07:32.990 --> 07:34.390
拿到这个对象之后了

07:34.390 --> 07:35.110
干嘛呢

07:35.110 --> 07:36.510
我们这里是不是要返回

07:36.510 --> 07:37.670
返回一个啥

07:37.670 --> 07:39.750
返回的是不是一个menuitem

07:39.750 --> 07:39.990
对吧

07:39.990 --> 07:41.270
就返回这么一个东西

07:41.270 --> 07:43.070
返回这么一个东西

07:43.070 --> 07:44.550
menuitem key等于啥

07:44.550 --> 07:48.150
key是不等于item.key

07:48.150 --> 07:49.270
two是什么

07:49.270 --> 07:50.830
到哪个地址是等于啥

07:50.830 --> 07:52.430
是不等于item.key

07:52.430 --> 07:53.950
也是item.key

07:53.950 --> 07:56.110
好这里的标题是什么

07:56.110 --> 07:58.310
item.title

07:58.310 --> 08:00.310
你看我们是不是可以写成这么一种结构

08:00.310 --> 08:01.830
来映射出一个menu

08:01.830 --> 08:02.790
当然我们一会

08:02.790 --> 08:03.670
直接在这里就写

08:03.670 --> 08:04.910
直接写上menu

08:06.070 --> 08:06.710
明白这个意思吗

08:06.710 --> 08:07.670
我们是可以把

08:07.670 --> 08:08.750
数组里面每一项

08:08.750 --> 08:10.230
就映射成一个menuitem

08:10.230 --> 08:12.150
但是这样子写的还是有点问题

08:12.150 --> 08:12.990
什么问题呢

08:12.990 --> 08:15.150
就是说如果说他有紫菜单

08:15.150 --> 08:15.870
你返回的

08:15.870 --> 08:18.910
应该是不是应该不是menuitem

08:18.910 --> 08:19.950
应该是一个什么了

08:19.950 --> 08:21.750
应该是一个submenu

08:21.750 --> 08:22.150
对吧

08:22.150 --> 08:24.110
是不是应该submenu

08:24.110 --> 08:24.950
是个意思吧

08:24.950 --> 08:27.150
所以我们这里要判断一下

08:27.150 --> 08:29.790
如果说你这个item的qt

08:29.790 --> 08:31.590
qt有值

08:31.590 --> 08:32.670
也就是说你这个东西

08:32.670 --> 08:33.670
是一个紫菜单

08:33.670 --> 08:35.590
我该干什么

08:35.590 --> 08:37.270
如果你不是紫菜单那么简单

08:37.270 --> 08:39.510
我就直接给你返回就完事了

08:39.510 --> 08:40.910
就这么个意思

08:40.910 --> 08:42.310
如果你是紫菜单的话

08:42.350 --> 08:43.150
我应该干嘛

08:43.150 --> 08:44.030
你不是紫菜单的话

08:44.030 --> 08:45.750
我又应该干嘛

08:45.750 --> 08:47.870
如果说你是一个紫菜单的话

08:47.870 --> 08:49.230
你如果有紫菜单的话

08:49.230 --> 08:50.270
我应该返回啥了

08:50.270 --> 08:51.990
所以返回这么一种结构

08:51.990 --> 08:52.950
submenu

08:52.950 --> 08:53.990
对吧

08:53.990 --> 08:55.950
是返回这么一个东西

08:55.950 --> 08:56.790
submenu

08:56.790 --> 08:57.910
那么这个key等于啥

08:57.910 --> 09:02.230
key是不是还是等于item.key

09:02.230 --> 09:03.870
那么这个title呢

09:03.870 --> 09:04.950
title是什么

09:04.950 --> 09:07.830
title是不是来自于item.title

09:07.830 --> 09:08.750
给大家举个例子

09:08.750 --> 09:10.990
你可以用这种方式来控制一下

09:10.990 --> 09:13.190
那么这个紫菜单里边是有哪些菜单

09:13.190 --> 09:13.750
是不是

09:13.750 --> 09:14.790
这里又要映射

09:14.790 --> 09:16.790
把这个qo损这个数组

09:16.790 --> 09:19.790
qo的那个数组映射成一个一个的菜单

09:19.790 --> 09:21.230
那么这里呢

09:22.630 --> 09:25.230
就是submenu是吗

09:25.230 --> 09:28.030
我们这里可以把qo损又映射

09:28.030 --> 09:29.790
又来进行映射

09:29.790 --> 09:33.220
subitem

09:33.220 --> 09:35.460
又把它映射成为一个菜单

09:35.460 --> 09:38.340
就是映射成这么一种结构了

09:38.340 --> 09:40.300
就映射成这么一种结构

09:40.300 --> 09:42.820
你看把它的qo损又映射成这么一种结构

09:42.820 --> 09:46.020
那么这里自然而然要使用的是subitem

09:46.020 --> 09:47.820
subitem

09:47.820 --> 09:48.580
对吧

09:48.580 --> 09:49.620
是不是可以映射

09:49.620 --> 09:49.980
好了嘛

09:49.980 --> 09:52.460
这个把这个submenu是放到这儿

09:52.460 --> 09:54.620
所以我们就可以通过对象来配置

09:54.620 --> 09:55.740
来进行处理了

09:55.740 --> 09:56.300
那么这里呢

09:56.300 --> 09:58.540
我们替换掉这个menu

09:58.540 --> 10:00.180
你会发现结果是一样的

10:00.180 --> 10:01.340
结果当然是一样的

10:01.340 --> 10:02.300
看一下这个代码

10:02.300 --> 10:03.500
你可以暂停看一下这个代码

10:03.500 --> 10:04.020
理解一下

10:07.020 --> 10:07.540
好

10:07.540 --> 10:09.900
然后你看结果是一样的

10:09.940 --> 10:10.900
没有什么区别

10:11.900 --> 10:13.140
没有什么区别

10:13.140 --> 10:14.620
那么现在的问题是

10:14.620 --> 10:16.020
我们这里呢

10:17.220 --> 10:19.780
defaults open keys该填啥了

10:19.780 --> 10:20.380
这里

10:20.940 --> 10:24.180
是不是我们要知道哪些菜单

10:24.180 --> 10:25.540
只菜单是被选中的

10:25.540 --> 10:25.820
对吧

10:25.820 --> 10:27.180
是不是要知道这个东西

10:27.180 --> 10:28.060
对吧

10:28.060 --> 10:29.060
是不是要知道这个

10:29.060 --> 10:29.300
好

10:29.300 --> 10:29.780
来吧

10:29.780 --> 10:30.340
我们来

10:30.340 --> 10:32.060
我们这里无非就是两层菜单

10:32.060 --> 10:33.420
我们写个千套的循环

10:33.420 --> 10:34.860
实际上这里要做的更好一点

10:34.860 --> 10:35.820
肯定要用地规

10:35.820 --> 10:37.140
我不相信那么复杂

10:37.140 --> 10:38.820
大家有能力的同学

10:38.860 --> 10:39.900
下面可以想一下

10:39.900 --> 10:42.380
如果说这里边还千套的层次更深

10:42.380 --> 10:43.220
那么应该怎么办

10:43.220 --> 10:44.540
肯定要用地规了

10:44.540 --> 10:45.260
我们这里呢

10:45.260 --> 10:46.300
就用复循环

10:46.300 --> 10:48.100
或者是用什么

10:48.100 --> 10:49.260
用for all嘛

10:49.260 --> 10:50.300
用for all

10:50.300 --> 10:52.300
就是item

10:53.300 --> 10:54.420
item

10:54.420 --> 10:57.500
然后循环这个就是menu

10:57.500 --> 10:59.300
config

10:59.300 --> 10:59.620
好

10:59.620 --> 11:01.500
然后下面再写个for all循环

11:01.500 --> 11:03.220
submit item

11:03.220 --> 11:05.100
循环item的求准

11:05.100 --> 11:06.260
当然前提条件

11:06.260 --> 11:07.740
得有求准

11:07.780 --> 11:08.940
如果说item

11:08.940 --> 11:11.180
有值

11:11.180 --> 11:13.300
那么我就循环你的求准

11:13.300 --> 11:13.580
好

11:15.660 --> 11:16.780
判断一下

11:16.780 --> 11:18.740
如果说你这个sub item

11:18.740 --> 11:19.620
它的什么

11:19.620 --> 11:21.260
key值等于了什么

11:21.260 --> 11:22.340
location

11:22.340 --> 11:23.660
past name

11:23.660 --> 11:25.100
什么等于了当前地址

11:25.100 --> 11:27.500
那么你这个子菜单像是不是要展开的

11:27.500 --> 11:28.300
那么你要

11:28.300 --> 11:30.140
就是你是要被选中的

11:30.140 --> 11:31.180
你被选中了过后

11:31.180 --> 11:33.660
你的负菜单是不是这个item

11:33.660 --> 11:35.220
是不是item这个东西

11:35.220 --> 11:36.700
要被要展开

11:36.700 --> 11:37.820
是不是它要展开

11:37.820 --> 11:39.620
咱们来写这么一个数组

11:39.620 --> 11:40.660
写这个数组

11:40.660 --> 11:43.220
open keys

11:43.220 --> 11:44.700
open keys写这么个数组

11:44.700 --> 11:47.060
网组数组里边说加一项就完事了

11:47.060 --> 11:49.820
poosh加一项item.key

11:49.820 --> 11:50.180
对吧

11:50.180 --> 11:52.140
把他的负菜单加进去

11:52.140 --> 11:53.860
加到的数组里边去

11:53.860 --> 11:55.260
当然你还可以前提条件

11:55.260 --> 11:56.140
还可以判断一下

11:56.140 --> 11:57.780
负菜单里面有没有这个key

11:57.780 --> 11:58.900
如果有的话就不加了

12:00.540 --> 12:03.660
open keys includes对吧

12:03.660 --> 12:05.420
是不是包含什么item.key

12:09.720 --> 12:11.280
是不是不包含item.key

12:11.280 --> 12:12.120
如果不包含的话

12:12.120 --> 12:13.240
往数组里边加一起

12:13.240 --> 12:13.440
好

12:13.440 --> 12:14.640
我们这里输出一下

12:14.640 --> 12:16.200
open keys

12:16.200 --> 12:17.360
保存

12:17.360 --> 12:18.440
你看一下这里

12:18.440 --> 12:19.640
邮件检查

12:19.640 --> 12:20.520
控制台里边

12:20.520 --> 12:21.640
你看他输出

12:21.640 --> 12:22.920
这个数组里边只有一项

12:22.920 --> 12:23.960
是不是students manager

12:23.960 --> 12:24.400
对吧

12:24.400 --> 12:26.000
默认现在是他被选中了

12:26.000 --> 12:28.600
所以说他自然而然应该展开

12:28.600 --> 12:30.160
那么我们现在就把一个open keys

12:30.160 --> 12:31.160
是不是放这

12:31.160 --> 12:31.400
对吧

12:31.400 --> 12:33.760
这些东西都可以灵活处理的

12:33.760 --> 12:34.520
保存

12:37.040 --> 12:38.000
是吧

12:38.120 --> 12:38.600
是不是可以

12:38.600 --> 12:39.640
他不能展开了

12:39.640 --> 12:40.960
就把这个地方说一下

12:40.960 --> 12:43.200
出来起来稍微的稍险麻烦一点

12:43.200 --> 12:44.160
稍险麻烦一点

12:45.080 --> 12:45.200
好

12:45.200 --> 12:48.240
这是关于这个

12:52.190 --> 12:53.030
这是这一块

12:54.470 --> 12:56.950
然后我们这一块就菜单这一块就完了

12:56.950 --> 12:58.870
接下来我们来看表格

12:58.870 --> 13:00.150
因为我们这一块

13:01.150 --> 13:03.230
这里是不是用学生要用到表格

13:03.230 --> 13:03.550
对吧

13:03.550 --> 13:04.790
学生要用到表格

13:04.790 --> 13:04.990
好

13:04.990 --> 13:05.550
来吧

13:05.550 --> 13:07.470
我们在表格这里来看一下

13:07.470 --> 13:08.510
来看一下表格这里

13:09.750 --> 13:11.550
咱们找到这个

13:13.030 --> 13:13.550
找到哪

13:14.670 --> 13:17.790
这component student table

13:17.790 --> 13:18.110
哎

13:18.110 --> 13:19.790
这里是不是我们的展示组件

13:19.790 --> 13:20.710
我们之前是啥写的

13:20.710 --> 13:22.310
之前是不是自己写的样式

13:22.310 --> 13:22.590
对吧

13:22.590 --> 13:24.430
自己写的css

13:24.430 --> 13:25.990
那么这个东西不要了

13:25.990 --> 13:27.070
不要了

13:27.070 --> 13:28.470
哪有什么css

13:28.470 --> 13:29.750
不需要了

13:29.750 --> 13:31.030
把这个我们自己写的css

13:31.030 --> 13:31.430
该去

13:31.430 --> 13:31.870
该去掉

13:33.110 --> 13:33.790
css去掉

13:33.790 --> 13:34.270
不要了

13:34.270 --> 13:36.030
没什么意义

13:36.030 --> 13:37.470
现在直接用nd里边的table

13:38.390 --> 13:38.670
好

13:38.750 --> 13:39.030
来吧

13:39.030 --> 13:41.070
我们来做成一模一样的效果

13:41.070 --> 13:42.590
做成一模一样的效果

13:42.590 --> 13:42.750
好

13:42.750 --> 13:43.870
那么这里你看

13:43.870 --> 13:44.510
哎

13:44.510 --> 13:45.230
这现在爆错了

13:45.230 --> 13:45.470
是吧

13:46.590 --> 13:47.550
怎么爆错了

13:47.550 --> 13:47.990
刷新一下

13:47.990 --> 13:49.350
应该没得爆错了

13:49.350 --> 13:50.230
现在就这样子

13:50.230 --> 13:51.030
这样子

13:51.030 --> 13:53.030
那么现在我们搞定表格

13:53.030 --> 13:53.150
好

13:53.150 --> 13:54.790
我们来看一下nd里面

13:54.790 --> 13:55.350
nd里面

13:55.350 --> 13:56.150
它的表格

13:57.150 --> 13:58.190
我们找一找

14:00.740 --> 14:02.140
下面是数据入入

14:02.140 --> 14:02.700
数据入入

14:02.700 --> 14:04.100
我们现在先不着急

14:04.100 --> 14:06.380
我们看一下表格

14:07.380 --> 14:08.700
table

14:08.700 --> 14:09.500
这是nd里面

14:09.500 --> 14:10.700
给我们提供了一个组件

14:10.700 --> 14:12.300
table这个组件

14:12.300 --> 14:13.060
那么这个组件

14:13.060 --> 14:15.620
它就是可以用于显示表格

14:15.620 --> 14:17.660
那么这里的用法非常非常多

14:17.660 --> 14:19.260
它的功能极其强大

14:20.540 --> 14:21.740
我们现在大概过一下

14:21.740 --> 14:22.540
先大概过一下

14:22.540 --> 14:24.420
看看它的例子效果

14:24.420 --> 14:26.060
一个是普通的表格

14:26.060 --> 14:26.740
就这么一个东西

14:26.740 --> 14:27.940
普通的表格

14:27.940 --> 14:29.300
然后有什么

14:29.300 --> 14:31.260
可以加复选框的表格

14:31.260 --> 14:32.620
加复选框的表格

14:32.620 --> 14:33.980
还可以精确的控制

14:33.980 --> 14:36.100
有些地方是不能选中的

14:36.100 --> 14:37.820
然后呢

14:37.860 --> 14:39.580
这里是个复选框

14:39.580 --> 14:40.820
这是Reno的

14:42.380 --> 14:43.380
这里呢

14:44.180 --> 14:45.020
看一下

14:45.620 --> 14:46.940
这里还可以加排序

14:46.940 --> 14:48.060
加排序的表格

14:48.060 --> 14:48.740
不过这个排序

14:48.740 --> 14:51.260
我们一般要用阿迦克斯跟浮起联动

14:51.260 --> 14:53.060
由于我这里接口里面了

14:53.060 --> 14:54.620
没有排序

14:54.620 --> 14:56.460
所以说这里也不管它了

14:56.460 --> 14:58.140
总之它这个表格的用法

14:58.140 --> 15:00.300
非常非常多

15:00.300 --> 15:01.060
咱们来看一下

15:01.060 --> 15:02.820
这个表格基本使用方式

15:04.180 --> 15:04.820
有些东西

15:04.820 --> 15:07.340
我这个就不一一挨在的讲了

15:07.380 --> 15:08.060
不一挨在的讲

15:08.060 --> 15:09.820
这些API很多很多

15:09.820 --> 15:10.620
大家有兴趣的同学

15:10.620 --> 15:11.740
可以自己去阅读一下

15:11.740 --> 15:12.540
都不难

15:12.540 --> 15:13.340
难的地方

15:13.340 --> 15:15.100
我自然而然会告诉大家

15:15.100 --> 15:16.780
会总之着重来进行讲解

15:17.380 --> 15:18.420
一个是表格

15:18.420 --> 15:20.220
他说这里面最重要的是

15:20.220 --> 15:22.980
要指定一个表格的数据源

15:22.980 --> 15:23.940
什么意思

15:23.940 --> 15:26.660
就是你这个表格要显示那么多行

15:26.660 --> 15:27.060
对吧

15:27.060 --> 15:28.940
他到底要显示多少行

15:28.940 --> 15:30.380
是不是要给他指定数据源

15:30.380 --> 15:31.540
数据是哪些

15:31.540 --> 15:32.060
对吧

15:32.060 --> 15:33.980
就是要给他指定数据数组

15:33.980 --> 15:34.340
好

15:34.340 --> 15:35.180
那么他说

15:35.220 --> 15:37.220
你要通过这个表格的属性

15:37.220 --> 15:41.420
data source来指定表格的数据

15:41.420 --> 15:42.620
是这么个意思

15:42.620 --> 15:44.300
通过这个data source属性

15:44.300 --> 15:47.620
来指定表格的数据

15:47.620 --> 15:48.860
那么这个data source

15:48.860 --> 15:50.460
跟我们之前的props里边的

15:50.460 --> 15:51.300
什么stues

15:51.300 --> 15:52.980
是不是一个意思

15:52.980 --> 15:53.980
我们之前有显示表格

15:53.980 --> 15:55.260
是不是要显示很多行

15:55.260 --> 15:55.500
对吧

15:55.500 --> 15:56.780
你要给我传一个数据

15:56.780 --> 15:58.020
那么是不是一个意思

15:58.020 --> 15:59.620
那就自然而然就是一个意思

15:59.620 --> 16:01.100
就是一个意思

16:01.100 --> 16:02.340
所以说我们stue

16:02.340 --> 16:03.900
data source很简单

16:03.940 --> 16:05.780
就直接来自于哪呢

16:05.780 --> 16:08.460
是不是直接来自于这个stues

16:08.460 --> 16:08.740
对吧

16:08.740 --> 16:10.380
是不是直接来自于这

16:10.380 --> 16:11.180
好

16:11.180 --> 16:12.820
那么现在我们这一块

16:12.820 --> 16:14.580
就不用我们自己写的了

16:14.580 --> 16:16.700
不用我们自己写的

16:16.700 --> 16:18.260
我们使用nd里边的table

16:20.100 --> 16:21.340
input

16:21.340 --> 16:21.940
nd

16:23.180 --> 16:23.460
准备

16:24.900 --> 16:26.140
from

16:26.140 --> 16:26.500
table

16:30.020 --> 16:31.660
这里是table

16:31.660 --> 16:32.300
表格

16:32.340 --> 16:33.700
我们直接使用nd里面

16:33.700 --> 16:34.980
给我们带来表格

16:34.980 --> 16:36.580
这个逐渐

16:36.580 --> 16:37.980
我们来看一下它的属性

16:37.980 --> 16:40.100
其中一个属性叫做data source

16:40.100 --> 16:41.340
这个属性要给它一个啥

16:41.340 --> 16:43.700
是不是给它一个props里边的stues

16:43.700 --> 16:44.220
对吧

16:44.220 --> 16:45.980
把学生的数据要给它

16:45.980 --> 16:46.540
这是这一个

16:46.540 --> 16:47.420
这一个

16:47.420 --> 16:47.900
那么现在呢

16:47.900 --> 16:48.700
我们刷新

16:51.630 --> 16:52.110
那么现在呢

16:52.110 --> 16:52.870
我们点击右键

16:52.870 --> 16:53.910
检查

16:53.910 --> 16:54.390
你看

16:55.590 --> 16:57.230
这里到时现在目前倒是看不到

16:57.230 --> 16:57.870
因为我

16:57.870 --> 16:59.470
它并不知道要显示哪些地

16:59.470 --> 17:01.510
它并不知道要显示哪些地

17:01.510 --> 17:01.750
好

17:01.750 --> 17:02.350
不刀击

17:02.350 --> 17:03.590
不刀击

17:03.630 --> 17:04.750
我们还在那看

17:06.660 --> 17:07.140
然后呢

17:07.140 --> 17:08.980
这是表格数据给它了

17:08.980 --> 17:09.260
对吧

17:09.260 --> 17:10.020
数据给它了

17:10.020 --> 17:12.180
然后要显示哪些列呢

17:12.180 --> 17:13.980
每一列显示什么数据呢

17:13.980 --> 17:15.580
你这个东西是不是得指进给它

17:15.580 --> 17:16.860
那么它是怎么配置的呢

17:16.860 --> 17:17.540
它告诉你

17:17.540 --> 17:19.020
你再配置一个这么一个东西

17:19.020 --> 17:19.660
一个数据

17:19.660 --> 17:22.180
来表示我有哪些列要显示

17:22.180 --> 17:23.220
你只告诉它的行

17:23.220 --> 17:24.220
有哪些数据要显示

17:24.220 --> 17:24.740
还不够

17:24.740 --> 17:26.700
那边有哪些列

17:26.700 --> 17:28.220
这个东西是对应行的

17:28.220 --> 17:28.740
这个数据

17:28.740 --> 17:30.300
每一个数据就是一行

17:30.300 --> 17:31.620
那么还有一个东西要对应列

17:31.620 --> 17:32.020
列呢

17:32.020 --> 17:33.500
它也是一个数据

17:33.540 --> 17:34.780
叫做Close

17:34.780 --> 17:35.700
Close

17:35.700 --> 17:37.420
它也是这么一个数据

17:37.420 --> 17:37.580
好

17:37.580 --> 17:39.220
那么这个数据里边的配置

17:39.220 --> 17:40.820
每个数据里边每个是个对象

17:40.820 --> 17:42.860
一个对象就表示一列

17:42.860 --> 17:46.060
它还抬头表示你觉得什么意思

17:46.060 --> 17:48.740
是列的标题

17:48.740 --> 17:49.100
对吧

17:49.100 --> 17:50.900
是不是列的标题

17:50.900 --> 17:51.100
好

17:51.100 --> 17:53.700
那么下面还有一个data index和t

17:53.700 --> 17:55.180
是不是就有一点这两个数据

17:55.180 --> 17:56.980
这两个数据是啥意思呢

17:56.980 --> 17:59.220
咱们来看它的API稳当

17:59.220 --> 18:00.780
有的时候你搞不清楚它什么意思

18:00.780 --> 18:02.500
你去看它API稳当

18:02.540 --> 18:03.580
它说呢

18:03.580 --> 18:04.300
什么意思呢

18:04.300 --> 18:06.020
data index表示什么意思呢

18:06.020 --> 18:07.900
它表示的是

18:07.900 --> 18:09.300
列的数据

18:09.300 --> 18:10.660
你看啊

18:10.660 --> 18:12.940
这个东西要给你洗洗

18:12.940 --> 18:16.900
这个需要一点逻辑啊

18:16.900 --> 18:18.220
我们的数据

18:18.220 --> 18:20.500
就data source指定的是什么呢

18:20.500 --> 18:22.380
它指定的是

18:22.380 --> 18:23.940
表格有哪些行

18:23.940 --> 18:25.820
每一行是一个对象

18:25.820 --> 18:26.580
对吧

18:26.580 --> 18:28.700
这是不是data source里面指定的东西

18:28.700 --> 18:30.540
每一行是一个对象

18:30.540 --> 18:32.100
那么Close呢

18:32.100 --> 18:33.860
它指定的是哪些列

18:33.900 --> 18:35.180
每一列呢

18:35.180 --> 18:36.820
又是一个对象

18:36.820 --> 18:39.620
那么比方说这一列

18:39.620 --> 18:41.820
这一列你是不是得告诉它

18:41.820 --> 18:44.620
除了列的标题是个name之外

18:44.620 --> 18:46.500
列的标题要告诉它之外

18:46.500 --> 18:48.100
你是不是得告诉它

18:48.100 --> 18:51.740
我应该从行的那个对象里边

18:51.740 --> 18:54.460
取出哪个数据啊

18:54.460 --> 18:55.740
你是不是得告诉它呀

18:55.740 --> 18:56.900
不然它怎么知道

18:56.900 --> 18:58.660
你它只知道这一行对应

18:58.660 --> 18:59.500
对应的那个对

18:59.500 --> 19:00.060
比方说啊

19:00.780 --> 19:03.980
我们这里这样这样子啊

19:03.980 --> 19:06.060
比方说学生

19:06.060 --> 19:07.980
学生姓名

19:07.980 --> 19:09.460
学生姓名abc

19:09.460 --> 19:10.780
学生年龄

19:10.780 --> 19:11.980
就写两个就行了啊

19:11.980 --> 19:13.020
这是一个对象对吧

19:13.020 --> 19:13.980
这是这是什么

19:13.980 --> 19:15.340
这是data source

19:15.340 --> 19:19.710
这是data source

19:19.710 --> 19:20.670
对吧

19:20.670 --> 19:22.310
给它个数组嘛

19:22.310 --> 19:23.350
再来

19:23.350 --> 19:25.190
name呢

19:25.190 --> 19:27.910
bcd年龄13

19:27.910 --> 19:29.270
再来一个吧

19:30.270 --> 19:33.070
比方那个数组里边有三个

19:33.070 --> 19:34.630
它是不是要显示三行

19:34.630 --> 19:36.270
是不是显示三行

19:36.270 --> 19:36.870
对吧

19:36.870 --> 19:37.270
好

19:37.270 --> 19:38.670
那么现在的clnce

19:38.670 --> 19:40.270
clnce

19:40.270 --> 19:41.950
要配置列

19:41.950 --> 19:43.070
配置列的时候

19:43.070 --> 19:45.270
每一列它是一个对象

19:45.270 --> 19:46.470
Title呢表示

19:46.470 --> 19:49.070
这一列的标题是姓名

19:49.070 --> 19:50.550
好

19:50.550 --> 19:51.750
这一列的标题要告诉它

19:51.750 --> 19:53.510
那么标题是姓名

19:53.510 --> 19:55.910
你觉得它有这么智能吗

19:55.910 --> 19:57.390
它怎么知道这一列

19:57.430 --> 19:59.350
具体每一行的时候

19:59.350 --> 20:00.990
那个单元格里面显示的

20:00.990 --> 20:03.190
就是对象的lamb属性了

20:03.190 --> 20:04.550
它怎么知道呢

20:04.550 --> 20:06.870
比方说你要到时候做这个表格

20:06.870 --> 20:09.190
我们这件是不是写死的啊

20:09.190 --> 20:11.470
我们这件是不是把它写死了

20:11.470 --> 20:11.950
对吧

20:11.950 --> 20:14.670
写死的还没法通用了这个组件

20:14.670 --> 20:18.660
我们当时怎么写的

20:18.660 --> 20:20.020
等一下啊

20:20.020 --> 20:21.460
当时我们是不是这样子写的

20:21.460 --> 20:22.940
是不是把它写死了

20:22.940 --> 20:24.140
每一列要显示什么东西

20:24.140 --> 20:25.420
是不是写死在这了

20:25.420 --> 20:27.860
但是它现在做的做成的是一个通用组件

20:27.860 --> 20:29.460
它不能写死

20:29.500 --> 20:31.460
那么现在问题就来了

20:31.460 --> 20:33.460
它到时候它知道

20:33.460 --> 20:35.860
我第一行显示这个对象

20:35.860 --> 20:39.060
那第一列我显示这个对象的哪个属性呢

20:39.060 --> 20:40.060
第一列在这里配置的

20:40.060 --> 20:40.500
对吧

20:40.500 --> 20:42.180
第一列我显示这个对象的哪个属性呢

20:42.180 --> 20:43.460
明白这个意思吗

20:43.460 --> 20:45.940
第二列我又显示这个对象的哪个属性吗

20:45.940 --> 20:46.100
对吧

20:46.100 --> 20:47.380
它是不知道的

20:47.380 --> 20:48.860
所以说你要怎么告诉它

20:48.860 --> 20:52.020
就通过这个data index告诉它

20:52.020 --> 20:53.260
所以data index

20:53.260 --> 20:56.860
要data index

20:59.810 --> 21:04.200
data index

21:04.200 --> 21:05.280
在这

21:05.280 --> 21:06.680
它的意思就是说

21:06.680 --> 21:08.760
我要从这个对象里边

21:08.760 --> 21:12.080
读哪个属性在这一列进行显示

21:12.080 --> 21:13.160
就这么个意思

21:13.160 --> 21:15.520
它就这么个意思

21:15.520 --> 21:16.640
明白吧

21:16.640 --> 21:19.160
所以说我们这里data index

21:19.160 --> 21:21.720
是不是要配置

21:21.720 --> 21:23.200
那么比方说姓名

21:23.200 --> 21:25.440
姓名是不是配置的是学生的姓名

21:25.440 --> 21:26.080
好像就是name

21:26.080 --> 21:26.520
对吧

21:26.520 --> 21:27.440
name

21:27.440 --> 21:29.200
那么这个key是什么东西呢

21:29.240 --> 21:30.000
这个key

21:31.920 --> 21:32.600
他说

21:35.240 --> 21:37.720
他说这个就是reaction里面需要的key

21:37.720 --> 21:39.400
因为他到时候生成的时候

21:39.400 --> 21:40.880
是不是要生成一大堆组件

21:40.880 --> 21:41.760
兄弟节点

21:41.760 --> 21:42.400
对吧

21:42.400 --> 21:44.520
他需要生成兄弟节点

21:44.520 --> 21:45.680
所以

21:45.680 --> 21:46.360
不是

21:46.360 --> 21:47.360
还不在这

21:47.360 --> 21:47.920
这还不

21:47.920 --> 21:48.200
对

21:48.200 --> 21:48.640
可能的

21:48.640 --> 21:49.800
是在这

21:49.800 --> 21:52.040
就是他要生成一大堆兄弟节点

21:52.040 --> 21:53.080
那么这个兄弟节点

21:53.080 --> 21:54.640
要保持伪衣

21:54.640 --> 21:56.000
要有一个伪衣

21:56.000 --> 21:56.880
之前我们说过

21:56.880 --> 21:58.400
reaction的渲染原理

21:58.440 --> 22:00.240
就是reaction的兄弟节点

22:00.240 --> 22:02.000
需要的key字

22:02.000 --> 22:05.680
那么这个key的话

22:05.680 --> 22:06.840
我们就给他写上

22:06.840 --> 22:08.720
这一列的话

22:08.720 --> 22:09.480
就给他写

22:09.480 --> 22:10.480
就给他用相同的吧

22:10.480 --> 22:11.200
都用name

22:12.720 --> 22:16.320
表示这一列的东西都是对应的

22:16.320 --> 22:17.800
对应的就是姓名

22:17.800 --> 22:19.400
那么当然这里也可以补写

22:19.400 --> 22:21.120
因为你写data index

22:21.120 --> 22:21.920
写data index的时候

22:21.920 --> 22:22.840
我们也可以补写

22:22.840 --> 22:24.320
我们通常使用key的话

22:24.320 --> 22:25.840
一般是情况下

22:25.840 --> 22:27.480
是要用到哪呢

22:27.480 --> 22:30.040
是要用到那个就是行里边

22:30.040 --> 22:31.960
列里边我们一般写上data index的时候

22:31.960 --> 22:33.280
就可以不用key了

22:33.280 --> 22:35.160
就可以不用key了

22:35.160 --> 22:36.040
data index

22:36.040 --> 22:38.280
年年是不是 age

22:38.280 --> 22:39.200
有柱子吗

22:39.200 --> 22:40.240
好像有柱子

22:40.240 --> 22:42.240
来试一下吧

22:42.240 --> 22:44.950
保存

22:44.950 --> 22:46.550
刷新

22:46.550 --> 22:47.710
这里没出来

22:47.710 --> 22:49.350
没出来看一下是不是包错了

22:49.350 --> 22:50.470
哪个地方是不是包错了

22:50.470 --> 22:51.630
他现在包了一个错

22:54.030 --> 22:55.430
明白了

22:55.430 --> 22:57.870
他现在出现了个问题的原因

22:57.910 --> 22:58.830
在哪呢

22:59.990 --> 23:02.550
他现在出问题出现的原因在这

23:02.550 --> 23:03.670
他就说

23:03.670 --> 23:05.350
你现在每一行

23:06.270 --> 23:09.870
他必须要有一个唯一的key纸

23:09.870 --> 23:12.150
因为他到时候生成很多的tr

23:12.150 --> 23:15.070
所以说他要保证

23:15.070 --> 23:16.070
当然不是tr原则

23:16.070 --> 23:16.950
他是用dav

23:16.950 --> 23:18.150
他是用dav

23:18.150 --> 23:21.910
他要保证每一行有一个唯一的key纸

23:21.910 --> 23:23.710
那么他怎么来保证这一点呢

23:23.710 --> 23:24.830
你要通过table

23:24.830 --> 23:26.350
这里可能还没加进去

23:27.990 --> 23:31.070
clums

23:31.070 --> 23:32.950
加进去应该可以显示出

23:32.950 --> 23:33.470
对

23:33.470 --> 23:35.270
显示是可以显示出来了

23:35.270 --> 23:36.830
好像没有连细是吧

23:36.830 --> 23:37.550
没有连细

23:37.550 --> 23:39.590
之前显示啥

23:39.590 --> 23:40.910
之前显示啥

23:40.910 --> 23:45.450
我看一下

23:45.450 --> 23:49.870
刷新色

23:49.870 --> 23:51.390
看一下他之前显示啥

23:55.390 --> 23:57.190
这个是name

23:57.190 --> 23:58.350
还有什么

23:58.350 --> 23:58.870
birth

23:58.870 --> 23:59.110
对吧

23:59.110 --> 24:00.150
出生日期

24:00.150 --> 24:00.830
行吧

24:00.830 --> 24:01.670
出生日期

24:02.670 --> 24:04.950
显示到是能显示

24:04.950 --> 24:05.710
只是一个警告

24:05.710 --> 24:07.310
我们把这个警告先解决了

24:07.310 --> 24:08.310
birth

24:08.310 --> 24:09.990
出生日期

24:09.990 --> 24:12.230
那么现在我们要做的事情

24:12.230 --> 24:13.350
就是说

24:13.350 --> 24:15.750
他要要求你每一行有一个唯一的key纸

24:15.750 --> 24:16.350
对吧

24:16.350 --> 24:18.390
那么这个key纸怎么给他呢

24:18.390 --> 24:19.550
怎么给他呢

24:19.550 --> 24:20.630
不要在这里看

24:20.630 --> 24:21.510
这里是column

24:21.510 --> 24:23.270
就是column的配置里面

24:23.270 --> 24:24.870
column里面的配置的东西

24:24.870 --> 24:27.190
我们要跑到table里面去看

24:27.190 --> 24:28.310
table里面

24:28.310 --> 24:30.430
因为我要告诉他每个对象的t

24:30.470 --> 24:33.030
从哪里表示的唯一标识

24:33.030 --> 24:36.780
我们来看一下

24:36.780 --> 24:37.780
table的API

24:37.780 --> 24:39.780
我们往上找一找

24:39.780 --> 24:42.620
table的API

24:42.620 --> 24:46.460
这里边应该是有东西可以指定的

24:46.460 --> 24:50.210
应该是有东西可以指定

24:50.210 --> 24:51.210
找一找

24:51.210 --> 24:53.010
好 这里rowkey

24:53.010 --> 24:54.890
表示每一个行

24:54.890 --> 24:56.210
表格了每一行

24:56.210 --> 24:57.690
他对应的key纸

24:57.690 --> 24:59.490
也就是说

24:59.490 --> 25:01.050
这个东西它是一个啥的

25:01.050 --> 25:02.210
它也就是说

25:02.210 --> 25:03.090
你给它的每一行

25:03.090 --> 25:05.090
它用一个对象生成一行

25:05.090 --> 25:06.090
一个对象生成一行

25:06.090 --> 25:07.690
一个对象生成一行

25:07.690 --> 25:09.090
那么这一行生成到界面上

25:09.090 --> 25:10.210
是不是要给key

25:10.210 --> 25:12.210
那么key它应该读的是

25:12.210 --> 25:15.050
这个对象的哪一个属性名

25:15.050 --> 25:16.170
就这么个意思

25:16.170 --> 25:19.450
把这个属性的哪一个属性当作key

25:19.450 --> 25:20.330
那么我们看一下

25:20.330 --> 25:21.770
这是服务器给我们的结果

25:21.770 --> 25:23.170
那服务器是不是给的id

25:23.170 --> 25:25.250
那么我们就是用id来当作key

25:25.250 --> 25:27.050
说我们要表个里面配置

25:27.050 --> 25:29.810
叫做rowkey

25:29.810 --> 25:31.290
它还可以配置为一个函数

25:31.290 --> 25:31.970
就是说

25:31.970 --> 25:35.970
如果说你的key纸是通过一个函数来算出来的

25:35.970 --> 25:38.810
那么你可以在函数里面

25:38.810 --> 25:39.890
返回一个key纸

25:39.890 --> 25:41.010
返回一个字母串key纸

25:41.010 --> 25:41.490
都行

25:41.490 --> 25:42.850
可以给它一个字母串

25:42.850 --> 25:43.970
也可以给它一个函数

25:43.970 --> 25:46.330
这个函数返回一个字母串

25:46.330 --> 25:48.570
它会把整个对象传给你

25:48.570 --> 25:49.250
也可以

25:49.250 --> 25:51.690
我们这里就简单的给它一个字母串

25:51.690 --> 25:52.530
就是id

25:52.530 --> 25:54.130
用id来作为key纸

25:54.130 --> 25:55.050
好 一保存

25:55.050 --> 25:56.410
那么现在你刷新

25:56.410 --> 25:57.690
你看

25:57.690 --> 25:58.810
刚才的错误是不是没了

25:58.810 --> 25:59.970
这个错误之前说过

26:00.010 --> 26:01.290
是个迪瓦里边的东西

26:01.290 --> 26:02.850
跟我们没关系

26:02.850 --> 26:03.650
好

26:03.650 --> 26:04.650
是不是搞定了

26:04.650 --> 26:06.450
对吧

26:06.450 --> 26:06.650
好

26:06.650 --> 26:09.130
那么我们继续写

26:09.130 --> 26:09.370
好

26:09.370 --> 26:10.210
那么现在

26:10.210 --> 26:12.290
你看现在分页都已经可以了

26:12.290 --> 26:12.570
分页

26:12.570 --> 26:15.250
就是我们只不过是我们自己写的分页主见而已

26:15.250 --> 26:15.930
你看

26:15.930 --> 26:16.730
是不是可以分页

26:16.730 --> 26:17.170
对吧

26:17.170 --> 26:18.250
分页了

26:18.250 --> 26:18.450
好

26:18.450 --> 26:19.290
我们再继续来

26:19.290 --> 26:20.730
不着急

26:20.730 --> 26:23.050
那么现在我们还要

26:23.050 --> 26:24.450
还要做的事情是啥呢

26:24.450 --> 26:26.090
就是

26:26.090 --> 26:27.490
这里的信息差不多了

26:27.490 --> 26:28.530
信息差不多了

26:28.570 --> 26:29.770
我们还有一点

26:29.770 --> 26:31.450
还有个就是性别

26:31.450 --> 26:32.130
比方说

26:32.130 --> 26:33.330
我们现在第二点

26:33.330 --> 26:34.890
要显示一个性别

26:36.690 --> 26:36.850
好

26:36.850 --> 26:37.570
这里的性别

26:38.690 --> 26:38.850
好

26:38.850 --> 26:41.530
如果说你这里还是写个什么sex

26:41.530 --> 26:41.970
对吧

26:41.970 --> 26:42.970
写个sex

26:42.970 --> 26:44.250
你显示出来的是啥呢

26:44.250 --> 26:44.810
你看一下

26:46.090 --> 26:47.770
你现在算是0000

26:47.770 --> 26:48.810
1啊

26:48.810 --> 26:49.610
哎

26:49.610 --> 26:50.170
111

26:50.170 --> 26:50.370
哎

26:50.370 --> 26:51.690
没1吗

26:51.690 --> 26:52.610
我看一下

26:52.610 --> 26:54.330
女士1是吧

26:54.330 --> 26:56.570
哎

26:56.570 --> 26:58.210
sex

26:58.290 --> 26:59.490
啊

26:59.490 --> 27:00.490
data index

27:00.490 --> 27:01.530
我看一下

27:01.530 --> 27:07.290
怎么没有1呢

27:07.290 --> 27:12.470
这里刷新词啊

27:12.470 --> 27:14.510
这里找到对象

27:14.510 --> 27:16.270
sex为0

27:16.270 --> 27:16.390
哎

27:16.390 --> 27:17.390
这个是全是0啊

27:17.390 --> 27:20.510
没有1吗

27:20.510 --> 27:20.710
哎

27:20.710 --> 27:21.270
这是

27:21.270 --> 27:24.460
这个是全是0啊

27:24.460 --> 27:26.260
我看一下这个查询的条件呢

27:27.540 --> 27:28.380
查询的条件

27:29.700 --> 27:30.300
啊

27:32.140 --> 27:35.820
给了这个是没有呢

27:35.820 --> 27:37.980
配就没有给这个是啊

27:37.980 --> 27:40.060
那为什么查出来全是0呢

27:40.100 --> 27:41.780
啊有没有1呢

27:41.780 --> 27:42.620
是这个那是个

27:42.620 --> 27:43.100
那个是个

27:43.100 --> 27:45.700
那个是个数据有问题啊

27:45.700 --> 27:46.780
那跟我们也没关系啊

27:48.020 --> 27:49.020
这个是0

27:49.020 --> 27:50.780
然后我们这里看一下啊

27:50.780 --> 27:51.260
呃

27:51.260 --> 27:52.060
这里的刷新

27:53.780 --> 27:54.260
刷新

27:55.220 --> 27:55.980
Friend by page

27:59.510 --> 28:00.150
找一找啊

28:00.150 --> 28:03.790
我看一下这个地方好像是有点问题啊

28:03.790 --> 28:04.830
好像是有点问题

28:04.830 --> 28:06.070
他请求的地址

28:07.630 --> 28:08.350
我看一下再看一下

28:08.350 --> 28:09.910
再好好看一下请求的地址

28:09.910 --> 28:11.710
他请求的地址好像有点问题啊

28:12.470 --> 28:13.590
好像有点问题

28:13.590 --> 28:14.430
看没

28:14.430 --> 28:17.270
我这里的地址男里边是给了这个keyz

28:17.270 --> 28:18.590
给了这个sex的

28:18.590 --> 28:18.950
但是呢

28:18.950 --> 28:20.710
他没有给我传过去啊

28:20.710 --> 28:22.830
没有请求的时候没有传过去

28:22.830 --> 28:22.990
好

28:22.990 --> 28:23.470
那么这个时候

28:23.470 --> 28:25.270
我们要监控那个瑞大克斯的啊

28:25.270 --> 28:26.390
这是我们之前写的啊

28:26.390 --> 28:27.110
好像有点bug

28:31.860 --> 28:33.900
这里靠面词重新来一次啊

28:33.900 --> 28:37.020
刷新好

28:37.020 --> 28:37.420
这里

28:37.420 --> 28:38.420
这边

28:38.420 --> 28:42.780
然后他触发到的埃克型是fake student

28:42.780 --> 28:44.100
触发的这个埃克型

28:44.100 --> 28:45.500
给的埃克型内容是啊

28:45.500 --> 28:46.420
就是这个

28:46.460 --> 28:47.860
然后目前的状态呢

28:47.860 --> 28:48.540
目前的状态呢

28:48.540 --> 28:50.460
students里面condition

28:50.460 --> 28:51.420
sex为一啊

28:51.420 --> 28:52.380
这是对的

28:52.380 --> 28:53.300
这是对的

28:53.300 --> 28:56.120
然后呢这里

28:56.120 --> 28:58.880
然后就是在这里的过程中出了问题啊

28:58.880 --> 29:00.040
在这个过程中出了问题

29:00.040 --> 29:00.160
好

29:00.160 --> 29:01.800
我们找到models里面

29:01.800 --> 29:03.040
到students里面去看一下

29:05.160 --> 29:06.600
在这个fake students里面

29:07.680 --> 29:08.680
condition

29:08.680 --> 29:10.640
我们把condition打印出来

29:10.640 --> 29:11.680
输出condition

29:11.680 --> 29:12.560
打印出来

29:12.560 --> 29:14.120
condition应该是没问题的啊

29:14.120 --> 29:14.840
应该是没问题的

29:15.840 --> 29:18.280
这个是为eq为控制不出来

29:18.280 --> 29:18.920
对啊

29:18.920 --> 29:19.840
没问题的

29:19.840 --> 29:21.200
那么把这个condition呢

29:21.200 --> 29:22.920
去运行这个surge students

29:22.920 --> 29:25.000
那就是我们之前写API的时候写的问题

29:25.000 --> 29:25.920
有问题

29:25.920 --> 29:26.960
surge students

29:27.960 --> 29:28.240
哦

29:28.240 --> 29:28.600
明白了

29:28.600 --> 29:28.920
明白了

29:28.920 --> 29:29.040
哦

29:29.040 --> 29:29.600
没问题啊

29:29.600 --> 29:30.000
是我

29:31.360 --> 29:32.160
这是我之前说的

29:32.160 --> 29:33.080
他的接口呢

29:33.080 --> 29:34.840
谁的写的不是很好啊

29:34.840 --> 29:35.720
因为他没有关键字

29:35.720 --> 29:36.800
你就查不到女生了

29:36.800 --> 29:37.320
对吧

29:37.320 --> 29:38.520
你还得写个关键字

29:38.520 --> 29:40.000
你还得写个关键字才行

29:41.160 --> 29:41.400
好

29:41.400 --> 29:42.800
你看是有性别为一的

29:42.800 --> 29:43.240
对吧

29:43.240 --> 29:44.040
有性别为一的

29:45.000 --> 29:45.640
好

29:45.640 --> 29:46.080
这是

29:47.120 --> 29:48.400
关于这个性别

29:48.400 --> 29:50.680
但是性别这一块显示的时候

29:50.680 --> 29:51.920
我们是不是

29:51.920 --> 29:54.120
不是用这种方式来显示啊

29:54.120 --> 29:54.400
对吧

29:54.400 --> 29:56.120
是不是不是用这种方式来显示

29:56.120 --> 29:57.640
是用别的方式

29:57.640 --> 29:59.000
比方说我要显示个主见在这

29:59.000 --> 30:01.080
或者是显示一个男和女在这

30:01.080 --> 30:03.960
所以你得控制一下

30:03.960 --> 30:04.360
对吧

30:04.360 --> 30:05.560
你得控制一下

30:05.560 --> 30:07.520
那么这个玩意又怎么来控制呢

30:07.520 --> 30:08.040
那你想啊

30:08.040 --> 30:09.400
这个东西应该在哪里配置啊

30:10.560 --> 30:11.720
你觉得应该在哪里配置

30:11.720 --> 30:13.720
是在表格里边配置呢

30:13.760 --> 30:15.560
还是应该在列里边配置

30:15.560 --> 30:16.840
所以我们要知道干嘛啊

30:16.840 --> 30:19.520
我要性别要显示男和女

30:20.240 --> 30:22.200
我不是直接把这个性别属性读出来

30:23.080 --> 30:26.720
而是要显示的是男或者是女

30:26.720 --> 30:27.800
那么这种情况下

30:27.800 --> 30:29.680
我应该在表格里边配置

30:29.680 --> 30:33.260
还是在列里边配置呢

30:33.260 --> 30:34.740
他肯定是在列呀

30:35.700 --> 30:37.420
列里面不在控制他显

30:37.420 --> 30:38.620
这里列显示啥吗

30:38.620 --> 30:39.740
对吧

30:39.740 --> 30:42.180
这里列从属性里边读出来直接显示

30:42.180 --> 30:44.300
那么他一定还有别的配置方式

30:44.620 --> 30:47.060
可以凝固的配置他显示的东西

30:47.060 --> 30:48.700
所以说肯定是在列里边配置

30:48.700 --> 30:50.220
因此我们找API的话

30:51.100 --> 30:54.020
应该是是不是应该在列里面去找这个API

30:54.020 --> 30:54.420
对不对

30:54.420 --> 30:56.300
可能里面去找这个API

30:56.300 --> 30:56.460
好

30:56.460 --> 30:57.540
咱们来看一下啊

30:57.540 --> 30:58.020
看一下

31:00.620 --> 31:01.620
这里边呢

31:05.590 --> 31:06.910
这里啊

31:06.910 --> 31:08.910
Render

31:08.910 --> 31:11.030
也就是说这里边还可以配置为一个

31:11.030 --> 31:13.030
配置一个函数叫Render函数

31:14.630 --> 31:16.310
配置为Render函数

31:16.350 --> 31:19.390
这个Render函数返回的结果

31:20.950 --> 31:25.190
那么分别为当前行的值

31:25.190 --> 31:27.110
当前行数据当前行数

31:27.110 --> 31:27.830
没问题

31:27.830 --> 31:29.270
那么他这里面就可以

31:30.470 --> 31:32.750
手动的来控制他显示什么

31:32.750 --> 31:34.590
比方说我这里就返回一个蓝

31:34.590 --> 31:35.750
试一下

31:35.750 --> 31:38.450
返回一个蓝

31:38.450 --> 31:40.250
你看是不是全是全是蓝了

31:40.250 --> 31:40.690
对吧

31:40.690 --> 31:42.770
也可以通过Render来控制

31:42.770 --> 31:44.570
那么这个Render是一个函数

31:44.570 --> 31:45.330
那么这个函数呢

31:45.330 --> 31:46.530
他告诉你呢

31:46.570 --> 31:48.250
他有三个函数你可以接收

31:48.250 --> 31:49.850
当然你用不到的话也无所谓

31:49.850 --> 31:51.290
他有三个函数

31:51.290 --> 31:52.370
第一个函数呢

31:52.370 --> 31:54.490
表示当前行的值

31:54.490 --> 31:55.090
第二个函数呢

31:55.090 --> 31:56.650
是当前行的对象

31:56.650 --> 31:59.250
第三个函数是当前行的锁印

31:59.250 --> 31:59.770
你看一下吧

32:00.890 --> 32:03.210
我们这三个都打印出来

32:03.210 --> 32:04.050
Text

32:04.050 --> 32:05.490
Record

32:05.490 --> 32:06.450
Index

32:06.450 --> 32:06.610
好

32:06.610 --> 32:10.280
打印出来看一下是啥

32:10.280 --> 32:10.440
好

32:10.440 --> 32:11.160
这里

32:11.160 --> 32:13.160
这里这个函数运行了很多次

32:13.160 --> 32:14.600
你想一想这个道理呗

32:14.600 --> 32:17.160
每一行是不是得运行一次啊

32:17.200 --> 32:19.280
每一行是不是得运行一次

32:19.280 --> 32:19.680
是吧

32:19.680 --> 32:20.440
是这个意思吧

32:20.440 --> 32:22.560
每一行都得运行一次

32:22.560 --> 32:24.360
因为每一行都有这一列存在

32:24.360 --> 32:26.480
所以他得运行一下函数

32:26.480 --> 32:28.120
来生成这一列的数据

32:28.120 --> 32:29.680
是生成这一列的信息

32:29.680 --> 32:30.360
那么这里呢

32:30.360 --> 32:33.080
你看是不是每一行都运行了一次

32:33.080 --> 32:35.160
那么第一个数据实际

32:35.160 --> 32:36.160
看全部是零

32:36.160 --> 32:36.440
是吧

32:36.440 --> 32:37.880
这里全部是零

32:37.880 --> 32:40.600
那么如果说这里写语的话

32:42.040 --> 32:43.160
检查询

32:43.160 --> 32:43.320
好

32:43.320 --> 32:44.400
你看

32:44.400 --> 32:45.400
这里就全部是一了

32:45.400 --> 32:45.840
诶

32:45.840 --> 32:46.120
是吧

32:47.840 --> 32:49.240
unclose

32:49.240 --> 32:50.320
is not a function

32:51.920 --> 32:57.330
什么意思

32:57.330 --> 32:58.050
哦

32:58.050 --> 32:59.730
之前是不是还写到事件的

33:01.650 --> 33:03.050
什么unclose

33:03.050 --> 33:04.770
is not a function

33:04.770 --> 33:05.690
这是哪里面的错误

33:05.690 --> 33:06.050
看一下

33:07.850 --> 33:09.930
这个是哪里面的错误呢

33:11.490 --> 33:11.930
probs

33:11.930 --> 33:18.140
unclose

33:18.140 --> 33:18.500
看一下

33:18.500 --> 33:19.140
这边报了错

33:19.140 --> 33:22.060
这边没有报错

33:22.060 --> 33:23.700
这是哪里面的错误

33:23.700 --> 33:24.300
刷新识

33:25.300 --> 33:26.860
一开始没有错误

33:26.860 --> 33:31.000
然后我这里重新搜索一下

33:31.000 --> 33:32.240
没有错误

33:32.240 --> 33:33.080
没有错误

33:33.080 --> 33:35.280
那么现在我们写个语

33:35.280 --> 33:35.720
点击

33:38.520 --> 33:40.080
那你看现在第一个数据

33:40.080 --> 33:41.680
第一个参数字变成一了

33:41.680 --> 33:43.240
所以说第一个参数是啥呢

33:43.240 --> 33:44.680
你觉得是啥

33:44.680 --> 33:45.920
我这个讲的过程的话

33:45.920 --> 33:46.840
主要是给你灌输

33:46.840 --> 33:48.080
怎么去看这个文档

33:48.080 --> 33:49.920
怎么去理解它的东西

33:49.920 --> 33:51.920
那么这个第一个参数是啥呢

33:51.920 --> 33:54.680
是不是它是根据这个对象里边的

33:54.720 --> 33:58.200
这个data int这个是这个属性读出来的

33:58.200 --> 34:00.160
你看我们对象里边不是有sex吗

34:00.160 --> 34:01.560
sex

34:01.560 --> 34:03.160
sex

34:03.160 --> 34:04.840
这里有sex属性

34:04.840 --> 34:06.840
1

34:06.840 --> 34:08.520
这里

34:08.520 --> 34:09.120
这里

34:09.120 --> 34:10.080
0

34:10.080 --> 34:11.680
所以根据这个属性读出来的

34:11.680 --> 34:13.480
你这里配置到data int的时候

34:13.480 --> 34:15.480
它就会通过这个东西去读

34:15.480 --> 34:16.520
把这个属性读出来

34:16.520 --> 34:17.360
给传进来

34:17.360 --> 34:18.760
看你要干嘛

34:18.760 --> 34:20.480
然后recorder是啥呢

34:20.480 --> 34:22.440
recorder是不是整个对象

34:22.440 --> 34:22.680
对吧

34:22.680 --> 34:23.680
你给它的数组里边

34:23.680 --> 34:24.800
一行就是个对象

34:24.800 --> 34:26.280
它把整个对象给你

34:26.280 --> 34:27.480
第三个参数是啥呢

34:27.480 --> 34:29.160
表示这是第几行

34:29.160 --> 34:30.120
你看

34:30.120 --> 34:30.920
6

34:30.920 --> 34:31.640
7

34:31.640 --> 34:31.880
8

34:31.880 --> 34:33.080
所以增加对吧

34:33.080 --> 34:34.320
第几行

34:34.320 --> 34:36.440
所以说你可以根据这些信息

34:36.440 --> 34:37.960
根据这些想要的信息

34:37.960 --> 34:39.920
来返回一个

34:39.920 --> 34:41.760
返回任意的东西

34:41.760 --> 34:43.640
比方说你想返回什么就返回什么

34:43.640 --> 34:45.640
甚至这里还可以返回一个组件都可以

34:45.640 --> 34:46.880
没任何问题

34:46.880 --> 34:49.280
总之你返回什么还就宣传什么

34:49.280 --> 34:51.160
那么这里就非常简单了

34:51.200 --> 34:52.800
我们这第一个参数就知道了

34:52.800 --> 34:54.520
它就直接试试

34:54.520 --> 34:55.520
返回什么呢

34:55.520 --> 34:56.200
三分于算符

34:56.200 --> 34:56.920
试试

34:56.920 --> 34:58.760
如果等于1

34:58.760 --> 35:01.200
等于1

35:01.200 --> 35:02.240
那怎么办呢

35:02.240 --> 35:03.920
我们就显示女

35:03.920 --> 35:06.240
否则的话显示男

35:06.240 --> 35:06.640
是吧

35:06.640 --> 35:08.200
说这样处理就完手了

35:08.200 --> 35:09.560
保存

35:09.560 --> 35:12.350
这里刷新

35:12.350 --> 35:13.790
你这里是个全是女

35:13.790 --> 35:14.910
这里点击男

35:14.910 --> 35:15.830
所以全是男

35:15.830 --> 35:16.550
对吧

35:16.550 --> 35:19.030
然后这里不现

35:19.030 --> 35:20.230
点一下也

35:20.230 --> 35:22.190
有男

35:22.190 --> 35:23.910
女的

35:23.910 --> 35:24.870
在后边

35:24.870 --> 35:26.030
所以有男有女

35:26.030 --> 35:27.030
对吧

35:27.030 --> 35:28.990
这就是可以灵活的进行处理

35:28.990 --> 35:30.350
对吧

35:30.350 --> 35:32.870
这是这一块

35:32.870 --> 35:34.830
再比方说再举个例子吧

35:34.830 --> 35:35.670
再举个例子

35:35.670 --> 35:37.030
比方说出生

35:37.030 --> 35:38.670
这个姓名这一块

35:38.670 --> 35:39.870
我想用

35:39.870 --> 35:41.150
换一种

35:41.150 --> 35:43.030
换一种样式显示

35:43.030 --> 35:44.390
我不光是显示一个字不错

35:44.390 --> 35:46.270
我想换的漂亮一点

35:46.270 --> 35:47.590
比方说我想用这个

35:47.590 --> 35:48.070
Tag

35:48.070 --> 35:50.270
标签

35:50.270 --> 35:51.230
我想用这个东西

35:51.230 --> 35:52.110
用这种格子

35:52.110 --> 35:52.830
用这种

35:52.830 --> 35:54.750
这个东西来显示

35:54.750 --> 35:56.350
显示那个就是

35:56.350 --> 35:57.350
用户的名字

35:57.350 --> 35:59.150
用这个东西来显示用户的名字

35:59.150 --> 35:59.790
比方说吧

35:59.790 --> 36:00.670
举个例子

36:00.670 --> 36:01.990
就随便举个例子

36:01.990 --> 36:03.670
或者说我们用那个

36:03.670 --> 36:06.670
用那个就是之前学过的那个就是

36:06.670 --> 36:08.310
Type Graphics

36:08.310 --> 36:09.230
这里边

36:09.230 --> 36:10.470
用这里边的东西

36:10.470 --> 36:12.230
来显示用户的名字

36:12.230 --> 36:13.190
他有哪些

36:13.190 --> 36:14.710
不知道他有这种显示方式吗

36:14.710 --> 36:17.110
跑哪去了

36:17.110 --> 36:18.470
有这种显示方式吗

36:18.470 --> 36:19.030
对吧

36:19.030 --> 36:19.590
用户的名字

36:19.590 --> 36:21.030
我们把它用这种显示方式

36:21.070 --> 36:21.510
好吧

36:21.510 --> 36:22.430
来吧

36:22.430 --> 36:23.950
那么在用户的姓名这一块

36:23.950 --> 36:26.030
是不是我们也可以写Render函数

36:26.030 --> 36:27.430
对吧

36:27.430 --> 36:29.550
你把这个Name传给我

36:29.550 --> 36:30.790
用户的姓名传给我

36:30.790 --> 36:31.750
然后我给你包装一下

36:31.750 --> 36:33.030
给你返回一个啥呢

36:33.030 --> 36:37.610
返回的是一个Type Graphics

36:37.610 --> 36:39.170
我们在这里

36:39.170 --> 36:40.090
解构

36:40.090 --> 36:41.090
解构出什么呢

36:41.090 --> 36:43.370
解构出它里边的Text

36:43.370 --> 36:45.210
Text逐渐

36:45.210 --> 36:47.010
Type Graphics

36:47.010 --> 36:47.490
好

36:47.490 --> 36:48.930
那么我们这里返回的是什么呢

36:48.930 --> 36:50.530
返回的是一个组件

36:50.530 --> 36:51.370
可不可以返回组件

36:51.370 --> 36:51.810
可以的

36:52.250 --> 36:53.770
没有任何问题

36:53.770 --> 36:54.810
返回一个组件

36:54.810 --> 36:56.210
这个组件的内容

36:56.210 --> 36:58.410
自然就是用户的姓名

36:58.410 --> 36:59.690
然后这个组件里边属性

36:59.690 --> 37:00.970
我们把这个组件样式拿出来

37:00.970 --> 37:02.250
看一下

37:02.250 --> 37:04.250
组件就是什么

37:04.250 --> 37:05.370
Mark

37:05.370 --> 37:06.450
加上这个Mark属性

37:08.250 --> 37:09.570
保存

37:09.570 --> 37:10.570
那么你看一下

37:10.570 --> 37:11.450
用户的姓名

37:11.450 --> 37:13.010
是不是变成这样的格式了

37:13.010 --> 37:13.850
对吧

37:13.850 --> 37:16.370
这个可以任意的方式

37:16.370 --> 37:18.010
来进行控制

37:18.010 --> 37:19.410
不要说用户姓名要加出

37:19.410 --> 37:21.490
我们可以用Bode

37:21.490 --> 37:23.850
使装

37:23.850 --> 37:26.370
用户的姓名加出

37:26.370 --> 37:26.650
好

37:26.650 --> 37:27.290
你看

37:27.290 --> 37:29.530
变成这样的格式了

37:29.530 --> 37:29.770
好

37:29.770 --> 37:30.650
那么最后一页

37:30.650 --> 37:31.130
最后一页

37:31.130 --> 37:32.170
我们要显示一个什么

37:32.170 --> 37:33.450
详情页

37:33.450 --> 37:33.970
对吧

37:33.970 --> 37:35.770
说要显示一个详情

37:35.770 --> 37:36.050
诶

37:36.050 --> 37:36.650
都是详情

37:36.650 --> 37:37.210
就是对

37:37.210 --> 37:38.210
就是详情

37:38.210 --> 37:39.650
或者叫做修改吧

37:39.650 --> 37:41.970
叫做修改

37:41.970 --> 37:43.370
title

37:43.370 --> 37:45.570
就是操作

37:45.570 --> 37:45.930
好

37:45.930 --> 37:48.170
那么操作这一块呢

37:48.170 --> 37:49.770
我们也没有什么Data Index

37:49.770 --> 37:50.570
或者Data Index

37:50.570 --> 37:51.450
就写ID嘛

37:51.450 --> 37:53.170
就写ID

37:53.170 --> 37:54.170
就写ID

37:54.170 --> 37:54.690
然后呢

37:54.690 --> 37:55.690
我们要宣传什么呢

37:55.690 --> 37:58.770
我们要宣传的是一些A元素

37:58.770 --> 37:59.170
对吧

37:59.170 --> 38:01.010
一些超链接

38:01.010 --> 38:01.370
是吧

38:01.370 --> 38:03.250
我是不是要宣传一些超链接

38:03.250 --> 38:03.370
好

38:03.370 --> 38:04.210
那么这个超链接

38:04.210 --> 38:05.530
你可以直接用Link

38:05.530 --> 38:05.810
对吧

38:05.810 --> 38:06.610
用Link

38:06.610 --> 38:09.370
也可以用它的按钮的那种链接模式

38:09.370 --> 38:09.810
对吧

38:09.810 --> 38:11.250
用按钮的链接模式也可以

38:11.250 --> 38:12.290
比方说我们就用And

38:12.290 --> 38:14.370
就不用Link了

38:14.370 --> 38:16.010
我们直接用And

38:16.010 --> 38:17.530
And里面不是有bottom吗

38:17.530 --> 38:18.050
对吧

38:18.050 --> 38:20.420
按钮

38:20.420 --> 38:20.740
好

38:20.740 --> 38:22.740
我们这里直接用按钮

38:22.740 --> 38:23.660
我们这里的按钮呢

38:23.660 --> 38:27.020
其实返回到也是一个return

38:27.020 --> 38:28.140
返回到一个按钮

38:28.140 --> 38:28.700
按钮里面呢

38:28.700 --> 38:30.020
就是一个详情

38:30.020 --> 38:31.300
详情

38:31.300 --> 38:32.420
详情

38:32.420 --> 38:35.100
它一个Type为

38:35.100 --> 38:36.140
Type为什么

38:36.140 --> 38:37.060
Link

38:37.060 --> 38:38.780
Link又详情

38:38.780 --> 38:39.020
好

38:39.020 --> 38:40.540
链接的地址到哪了

38:40.540 --> 38:41.180
链接的地址

38:41.180 --> 38:42.620
是我们之前写过的

38:42.620 --> 38:43.180
对吧

38:43.180 --> 38:45.460
链接的地址在哪去

38:45.460 --> 38:46.220
所以链接到

38:46.220 --> 38:46.620
诶

38:46.620 --> 38:47.740
这里有个模板

38:47.740 --> 38:48.820
这不错吗

38:49.820 --> 38:51.700
链接的地址

38:51.700 --> 38:52.900
链接到

38:52.900 --> 38:54.140
student

38:54.140 --> 38:56.100
后面是不是要跟个学生的ID

38:56.100 --> 38:56.260
好

38:56.260 --> 38:57.940
ID是不是这里绑定了ID的

38:57.940 --> 38:58.300
对吧

38:58.300 --> 38:59.460
这里列绑定了ID的

38:59.460 --> 39:01.260
我们把这个ID放过来

39:01.260 --> 39:03.740
说就完事了

39:04.940 --> 39:05.180
好

39:05.180 --> 39:06.060
保存

39:06.060 --> 39:06.700
你看一下

39:07.540 --> 39:07.700
好

39:07.700 --> 39:09.140
那这里是不是一个详情

39:09.140 --> 39:09.660
对吧

39:09.660 --> 39:10.540
点击

39:10.540 --> 39:11.540
不想跳到这里

39:13.220 --> 39:13.860
学生详情

39:13.860 --> 39:15.300
我们是用的是啥

39:16.500 --> 39:17.420
用的是啥

39:17.420 --> 39:18.580
学生详情

39:19.220 --> 39:19.700
我看一下

39:19.700 --> 39:20.540
学生详情

39:20.540 --> 39:22.100
我是之前把3调了吗

39:22.100 --> 39:22.900
又把3调了

39:22.900 --> 39:23.260
哦

39:23.260 --> 39:25.700
之前想配置的时候又把3调了

39:25.700 --> 39:26.220
那没关系

39:26.220 --> 39:27.380
我们之后再做

39:27.380 --> 39:28.700
马上把它做出来

39:28.700 --> 39:29.660
很简单

39:29.660 --> 39:31.700
学生详情也很简单

39:31.700 --> 39:32.940
多了ID

39:32.940 --> 39:34.140
链接式

39:34.140 --> 39:35.220
这里RFC

39:37.140 --> 39:38.860
学生详情

39:38.860 --> 39:45.700
也学生的ID

39:46.780 --> 39:47.900
这里呢

39:47.900 --> 39:49.060
解构出来march

39:50.500 --> 39:51.700
解构march

39:51.940 --> 39:52.340
这里呢

39:52.340 --> 39:53.740
来自于march

39:53.740 --> 39:54.460
第二什么呢

39:55.580 --> 39:57.420
第二Paris

39:57.420 --> 39:58.500
第二ID

39:58.500 --> 39:58.860
好

39:58.860 --> 39:59.180
保存

40:00.940 --> 40:01.700
你看详情

40:01.700 --> 40:02.740
5170

40:02.740 --> 40:03.020
对吧

40:05.820 --> 40:07.580
那么现在再点这个详情

40:10.340 --> 40:11.500
没问题吧

40:11.500 --> 40:12.740
没问题

40:12.740 --> 40:13.380
那么现在

40:13.380 --> 40:14.740
但是他这个link

40:14.740 --> 40:17.340
他有他这个link元素

40:17.340 --> 40:18.340
他这个link元素

40:18.340 --> 40:19.740
他是不是刷新了页面了

40:19.740 --> 40:20.900
你看

40:20.900 --> 40:21.780
所以刷新了页面了

40:21.780 --> 40:23.060
这里

40:23.060 --> 40:23.780
刷新了页面

40:23.780 --> 40:25.900
因为他就是一个普通的A元素

40:25.900 --> 40:27.540
但他也会有这么一个问题

40:27.540 --> 40:29.260
他是一个普通的A元素

40:30.380 --> 40:32.300
那这一块又怎么办呢

40:32.300 --> 40:34.340
这一块你可以使用

40:34.340 --> 40:36.620
那个router里面的link

40:36.620 --> 40:38.820
也可以用这种方式来做

40:38.820 --> 40:39.980
也行

40:39.980 --> 40:40.900
看一下

40:40.900 --> 40:41.940
在这个

40:41.940 --> 40:42.300
在这

40:44.180 --> 40:45.380
我们这里

40:45.380 --> 40:46.540
不用这个ref了

40:46.540 --> 40:47.860
不用这个ref是无效

40:47.860 --> 40:49.060
我们这里咋办

40:49.100 --> 40:51.020
是不是用写这个unclick

40:51.020 --> 40:51.380
对吧

40:51.380 --> 40:52.860
写unclick

40:52.860 --> 40:54.020
把这个剪切一下

40:55.820 --> 40:57.180
给按钮写一个unclick

40:59.460 --> 41:00.460
当我们

41:02.220 --> 41:03.700
点击这个按钮的时候

41:03.700 --> 41:05.860
我们是不是使用history里面的poohy

41:05.860 --> 41:06.380
对吧

41:06.380 --> 41:07.780
使用history里面的poohy

41:07.780 --> 41:09.340
那么就把这个student table

41:09.340 --> 41:12.820
就用这个props里面的history

41:12.820 --> 41:13.700
叫poohy

41:14.900 --> 41:15.940
是不是跳到这个地址

41:15.940 --> 41:16.780
就完事了

41:16.780 --> 41:18.180
就这么简单

41:18.180 --> 41:18.980
这个东西

41:19.020 --> 41:19.900
没什么好说的

41:19.900 --> 41:20.500
我们这里呢

41:20.500 --> 41:23.340
把它用这个wizrouter比包装一下

41:23.340 --> 41:24.580
用wizrouter

41:24.580 --> 41:26.900
importwizrouter

41:26.900 --> 41:31.340
from wumiwizrouter

41:32.620 --> 41:33.700
用这个wizrouter

41:33.700 --> 41:34.820
把这个主键包装一下

41:36.740 --> 41:37.060
看一下

41:38.740 --> 41:39.380
那么现在呢

41:39.380 --> 41:40.020
跳转

41:40.020 --> 41:40.780
说明没问题了

41:40.780 --> 41:41.300
对吧

41:41.300 --> 41:42.740
他直接跳转过去了

41:42.740 --> 41:43.580
跳转

41:43.580 --> 41:44.300
对吧

41:44.300 --> 41:44.740
直接过去了

41:45.980 --> 41:47.700
这是这个朝链接

41:47.700 --> 41:48.300
朝链接

41:49.980 --> 41:51.380
然后呢

41:51.380 --> 41:53.380
我们再看一下

41:53.380 --> 41:54.380
就看这儿了

41:55.100 --> 41:57.740
就要看这个表格的分页了

41:57.740 --> 41:59.460
要看这个表格的分页

41:59.460 --> 42:00.820
这个表格里边

42:00.820 --> 42:02.980
我们怎么去对它进行分页呢

42:03.500 --> 42:04.540
其实呢

42:04.540 --> 42:07.820
它里边本来就给你提供了这么一个分页组件

42:07.820 --> 42:09.980
本身就给你提供了这个分页组件

42:09.980 --> 42:10.780
咱们来看一下吧

42:10.780 --> 42:12.220
我们两种方式用一下

42:12.220 --> 42:13.940
它表格里边有自带分页

42:13.940 --> 42:16.420
它也单独给你使用了分页组件

42:16.540 --> 42:17.060
实际上呢

42:17.060 --> 42:20.020
你只要把分页组件学会了

42:20.020 --> 42:21.460
那么表格里边的分页呢

42:21.460 --> 42:23.140
道理是一样的

42:23.140 --> 42:25.020
道理是完全一样的

42:25.020 --> 42:27.980
所以说你最重要的是要学会分页组件

42:27.980 --> 42:28.140
好

42:28.140 --> 42:29.300
那么这个分页组件呢

42:29.300 --> 42:30.860
我们之前也写过这么一个

42:30.860 --> 42:32.540
我们自己写过这个配件的吧

42:32.540 --> 42:33.260
分页组件

42:33.260 --> 42:35.220
我们当时还写了不少的带嘛

42:35.220 --> 42:36.300
那么这个配件呢

42:36.300 --> 42:37.060
我们目前呢

42:37.060 --> 42:40.260
就没有必要去使用我们的自己写的配件组件了

42:40.260 --> 42:42.020
直接用它就完事了

42:42.020 --> 42:43.780
比方说这就可以直接把它删了

42:43.780 --> 42:44.940
都可以

42:44.980 --> 42:46.580
我们之前在containers里边

42:46.580 --> 42:47.500
在容器组件里边

42:47.500 --> 42:48.780
是不是连接了这个配件组件

42:48.780 --> 42:48.980
对吧

42:48.980 --> 42:50.380
那现在肯定找不到了

42:50.380 --> 42:51.340
那不用它的

42:51.340 --> 42:53.140
不用我们自己写的配件了

42:53.140 --> 42:54.260
因为它已经写好了

42:54.260 --> 42:55.580
叫配件类型

42:55.580 --> 42:56.940
这个组件已经给你写好了

42:56.940 --> 42:58.580
你直接用就完事了

42:58.580 --> 43:00.700
导致这个配件类型组件

43:00.700 --> 43:01.500
来自于哪呢

43:01.500 --> 43:03.420
来自于nd

43:03.420 --> 43:05.740
里边它本身又带了一个配件类型组件

43:05.740 --> 43:06.500
我们这里

43:06.500 --> 43:09.820
也就是我们它里边也需要配置很多的属性

43:09.820 --> 43:11.420
也需要配置一些事件

43:11.420 --> 43:12.300
那么我们这里呢

43:12.300 --> 43:13.540
也就是连接过去

43:13.540 --> 43:14.780
连接到它这里

43:14.820 --> 43:16.620
好咱们连接一下吧

43:16.620 --> 43:18.820
好我们看一下它里边需要哪些属性

43:18.820 --> 43:19.900
需要哪些属性

43:20.900 --> 43:21.820
它现在肯定抱错

43:21.820 --> 43:23.700
因为这些属性不太对

43:23.700 --> 43:25.460
这里我们来看一下

43:25.460 --> 43:26.500
它有哪些属性

43:26.500 --> 43:29.300
一个是current表示当前页数

43:29.300 --> 43:30.980
当前的页码是什么

43:30.980 --> 43:32.260
那么是不是current在里

43:32.260 --> 43:33.380
来自于这一样的

43:33.380 --> 43:34.340
对吧

43:34.340 --> 43:35.260
还有什么呢

43:35.260 --> 43:37.460
还有种配级size

43:37.460 --> 43:39.900
每页的条数也就是limit

43:39.900 --> 43:40.740
这就是配级size

43:40.740 --> 43:42.980
把它换成配级size就完事了

43:42.980 --> 43:45.100
好那么种的数据量呢

43:45.100 --> 43:46.460
你看一下

43:46.460 --> 43:47.980
种的数据量

43:53.060 --> 43:53.660
种的数量

43:53.660 --> 43:55.980
头头是一样的数据总数

43:55.980 --> 43:57.140
什么跟我们之前一样的

43:57.140 --> 43:59.220
它只是它帮你写好了

43:59.220 --> 44:00.620
然后还有就是

44:00.620 --> 44:02.900
页码的数量

44:02.900 --> 44:06.300
我们来看一下

44:06.300 --> 44:07.660
页码的数量

44:08.620 --> 44:09.100
找一找

44:13.250 --> 44:16.840
目前当前页数

44:16.840 --> 44:17.760
我看一下这里

44:18.760 --> 44:23.710
每页可以显示到的条

44:23.710 --> 44:24.870
不是

44:24.870 --> 44:25.870
这里

44:26.870 --> 44:28.310
修头头

44:28.310 --> 44:29.470
适逢显示

44:29.470 --> 44:32.030
适逢显示数据总量

44:32.030 --> 44:33.670
这东西不用显示

44:33.670 --> 44:38.000
数据的

44:38.000 --> 44:39.120
就是它没有

44:39.120 --> 44:40.320
它没有东西可以设置

44:40.320 --> 44:41.640
它有多少页码

44:41.640 --> 44:42.440
它没有去

44:42.440 --> 44:43.280
有东西这样设置

44:43.280 --> 44:44.680
但是它可以变

44:44.680 --> 44:46.600
只是你要写些麻烦一点

44:46.600 --> 44:47.680
那么现在你看一下

44:47.680 --> 44:49.760
是不是就已经给你分好页了

44:49.760 --> 44:50.440
对吧

44:50.440 --> 44:51.640
就已经给你分好页了

44:51.760 --> 44:53.600
但是现在还不能切换页

44:53.600 --> 44:55.800
因为你没有处理事件

44:55.800 --> 44:57.000
你没有处理事件

44:57.000 --> 44:58.800
它有个事件叫做unchanged

44:58.800 --> 44:59.840
有这么一个事件

44:59.840 --> 45:01.120
叫做unchanged

45:02.120 --> 45:03.960
我们之前叫做unpackaged

45:03.960 --> 45:04.440
对吧

45:04.440 --> 45:06.360
现在叫做unchanged这个事件

45:06.360 --> 45:07.560
这个事件里面

45:07.560 --> 45:09.280
它会给你传两个参数过来

45:09.280 --> 45:10.520
一个是packaged

45:10.520 --> 45:12.480
就当新的页码

45:12.480 --> 45:13.840
改变之后的页码

45:13.840 --> 45:15.640
和这个packaged size

45:15.640 --> 45:17.680
有可能它那个packaged size会改变

45:17.680 --> 45:20.440
那么新的就是页容量是多少

45:20.440 --> 45:21.280
那么它会传给你

45:21.320 --> 45:22.560
那么这里有一样的道理

45:22.560 --> 45:23.240
是吧

45:23.240 --> 45:23.800
一样的道理

45:23.800 --> 45:24.880
你之前的写法是一样

45:24.880 --> 45:26.560
我们稍微改变

45:26.560 --> 45:27.440
就可以实现分页了

45:27.440 --> 45:27.720
对吧

45:27.720 --> 45:28.960
是不是一样的

45:28.960 --> 45:30.600
对吧

45:30.600 --> 45:31.440
你看

45:31.440 --> 45:32.640
我们把id显示出来吧

45:32.640 --> 45:34.520
因为很多学生的数据是一样的

45:34.520 --> 45:35.720
所以大家看上去

45:35.720 --> 45:37.040
看的不是很明显

45:37.040 --> 45:40.620
我们把id也显示出来

45:40.620 --> 45:42.300
title

45:42.300 --> 45:43.740
就是学号

45:43.740 --> 45:45.660
学号

45:45.660 --> 45:48.140
学号的话就是data index

45:48.140 --> 45:49.740
显示stue number

45:49.740 --> 45:50.980
好像是这个

45:50.980 --> 45:51.220
好

45:53.100 --> 45:53.380
不对

45:53.380 --> 45:56.630
那就是消息的O

45:56.630 --> 45:57.430
也不对

45:57.430 --> 45:58.150
看一下

45:58.150 --> 46:02.100
看一下服务器的给我的结果是什么

46:02.100 --> 46:05.610
刷新

46:05.610 --> 46:08.850
服务器给我的学号

46:08.850 --> 46:09.930
s number

46:09.930 --> 46:14.090
s number

46:14.090 --> 46:15.410
那么现在学号什么显示出来的

46:15.410 --> 46:16.570
是吧

46:16.570 --> 46:18.210
OK

46:18.210 --> 46:19.210
没问题吧

46:19.210 --> 46:19.370
好

46:19.370 --> 46:20.290
现在分页就可以分页了

46:20.290 --> 46:21.330
就这么简单

46:21.330 --> 46:22.330
但是它这个分页里面

46:22.330 --> 46:23.930
还有就是

46:23.930 --> 46:25.770
各种各样的就是

46:25.770 --> 46:26.890
样式外观

46:26.890 --> 46:28.170
那么大家可以有兴趣的话

46:28.170 --> 46:29.810
比方说还可以实现这个东西

46:29.850 --> 46:30.490
实现这个东西

46:30.490 --> 46:31.290
没想到调

46:31.290 --> 46:33.290
直接调转到低级都会实现

46:33.290 --> 46:35.370
比方说我们要实现这么一个东西

46:35.370 --> 46:36.690
我们看一下怎么来

46:36.690 --> 46:37.850
怎么来

46:37.850 --> 46:40.250
怎么来就设置

46:40.250 --> 46:42.770
怎么来设置

46:42.770 --> 46:46.330
我们这里要实现这个调制多少页

46:46.330 --> 46:46.970
对吧

46:46.970 --> 46:49.490
要调制多少页

46:49.490 --> 46:51.450
short quick jumper

46:51.450 --> 46:53.330
实现快速跳转

46:53.330 --> 46:55.090
我们在配件里面

46:55.090 --> 46:56.290
直接配置一下

46:56.290 --> 46:57.930
配件里面

46:57.970 --> 47:00.730
再配置一下这个属性

47:00.730 --> 47:01.570
把设置去

47:01.570 --> 47:01.850
对吧

47:01.850 --> 47:02.850
就完事了

47:02.850 --> 47:04.650
保存

47:04.650 --> 47:05.970
你看

47:05.970 --> 47:06.730
说可以

47:06.730 --> 47:07.810
设置快速跳转

47:07.810 --> 47:08.170
对吧

47:08.170 --> 47:08.890
快速跳转

47:08.890 --> 47:10.370
然后我们这里写个5

47:10.370 --> 47:11.370
一回车

47:11.370 --> 47:13.010
就跳到第五页了

47:13.010 --> 47:13.370
对吧

47:13.370 --> 47:15.690
就这么简单

47:15.690 --> 47:18.090
这是关于这一块

47:18.090 --> 47:19.650
然后还有啥呢

47:19.650 --> 47:20.610
分页我们搞定了

47:20.610 --> 47:22.610
然后我们还插这里

47:22.610 --> 47:24.410
就是个搜索条

47:24.410 --> 47:25.930
好搜索条的话

47:25.930 --> 47:26.490
就在这

47:26.530 --> 47:27.890
student's search bar

47:27.890 --> 47:28.610
就在这

47:28.610 --> 47:29.730
我们之前自己搜写的

47:29.730 --> 47:30.050
对吧

47:30.050 --> 47:31.250
搜写了一些DAV

47:31.250 --> 47:32.210
什么的东西

47:32.210 --> 47:34.370
我们无非就是把主件替换一下

47:34.370 --> 47:36.050
无非就把主件替换一下

47:36.050 --> 47:37.850
首先这个input的主件

47:37.850 --> 47:38.850
是不是可以替换掉

47:38.850 --> 47:39.930
这文本框

47:39.930 --> 47:40.890
我们来看nt里面

47:40.890 --> 47:43.130
还给我们做了一个很漂亮的文本框

47:43.130 --> 47:44.890
我们看一下这个输入框

47:44.890 --> 47:46.290
input就这么简单

47:46.290 --> 47:46.810
非常简单

47:46.810 --> 47:47.610
就是一个输入框

47:47.610 --> 47:48.090
基本

47:48.090 --> 47:50.250
我们现在就用的是一个基本的输入框

47:50.250 --> 47:50.810
就行了

47:50.810 --> 47:51.770
它有不同的尺寸

47:51.770 --> 47:52.490
都可以配置的

47:52.490 --> 47:53.890
都可以通过属性配置的

47:53.890 --> 47:55.010
还可以加钱罪

47:55.010 --> 47:55.690
加后罪

47:55.730 --> 47:57.890
比方说我们来一个钱罪的

47:57.890 --> 47:59.410
带钱罪的文本框

47:59.410 --> 48:00.770
我们来看一下

48:00.770 --> 48:02.690
来一个带钱罪的文本框

48:05.130 --> 48:06.690
这里呢

48:06.690 --> 48:07.770
我们这里看一下

48:07.770 --> 48:11.080
它这里

48:11.080 --> 48:12.160
是input

48:12.160 --> 48:13.160
input

48:14.720 --> 48:16.080
这里把这个复制一下

48:16.080 --> 48:16.760
复制一下

48:16.760 --> 48:17.640
拿过来

48:17.640 --> 48:18.840
直接拿过来

48:19.800 --> 48:20.960
那么这个

48:20.960 --> 48:24.440
I don't before

48:24.440 --> 48:26.960
就是在前边给它加到一些文本

48:27.000 --> 48:27.640
那么文本呢

48:27.640 --> 48:29.080
我们就写关键字

48:29.080 --> 48:30.560
关键字

48:30.560 --> 48:31.200
就不要这个

48:31.200 --> 48:33.440
前面两个几个字了

48:33.440 --> 48:34.400
after

48:34.400 --> 48:35.480
就之后加的文本

48:35.480 --> 48:36.480
我们不要

48:36.480 --> 48:37.280
default value

48:37.280 --> 48:38.520
不要

48:38.520 --> 48:40.360
我们就把这东西写过来

48:40.360 --> 48:41.440
value写过来

48:41.440 --> 48:42.000
然后呢

48:42.000 --> 48:42.920
on-chain级

48:42.920 --> 48:44.400
是不是写过来

48:44.400 --> 48:47.040
这里on-chain级写过来

48:47.040 --> 48:47.800
是完了

48:47.800 --> 48:48.640
对不对

48:48.640 --> 48:49.320
我们先写一下

48:49.320 --> 48:50.400
看行不行吗

48:50.400 --> 48:53.630
保存

48:53.630 --> 48:56.420
这里刷新

48:56.420 --> 48:57.980
这里出问题了

48:58.020 --> 48:58.900
它input

48:58.900 --> 49:00.780
input准备打我说进来是吧

49:00.780 --> 49:01.900
ok

49:01.900 --> 49:03.180
input

49:03.180 --> 49:04.940
input

49:04.940 --> 49:05.820
from

49:05.820 --> 49:06.820
end

49:07.980 --> 49:08.980
保存

49:09.900 --> 49:10.940
你看

49:10.940 --> 49:11.860
文本框是不是出来了

49:11.860 --> 49:12.180
对吧

49:12.180 --> 49:13.580
文本框出来了

49:13.580 --> 49:15.220
你看前面有个关键字

49:15.220 --> 49:15.420
好

49:15.420 --> 49:16.260
但是文本框

49:16.260 --> 49:16.980
它是一个

49:16.980 --> 49:17.740
它是一个夸一盒

49:17.740 --> 49:18.780
它撑满了的

49:18.780 --> 49:20.100
我能不能不让它撑满了

49:20.100 --> 49:20.740
能不能让它

49:20.740 --> 49:22.780
不要变成夸一盒了

49:22.780 --> 49:23.260
能不能让它

49:23.260 --> 49:23.980
不要变成夸一盒了

49:23.980 --> 49:25.660
我们来看一下它的API

49:25.660 --> 49:26.580
它应该有

49:26.580 --> 49:27.700
它会有这个API

49:27.700 --> 49:30.020
能让它不要变成夸一盒了

49:30.020 --> 49:31.620
我们看一下

49:31.620 --> 49:32.900
它里边还有多行文门框

49:32.900 --> 49:34.860
就是input里边还带了一个主键

49:34.860 --> 49:36.220
叫text arrear

49:36.220 --> 49:38.820
表示多行文门框

49:38.820 --> 49:40.020
还有这个是search

49:40.020 --> 49:40.900
search

49:40.900 --> 49:42.580
那么我们用search吧

49:42.580 --> 49:43.060
用search

49:43.060 --> 49:44.180
我们一会再用search

49:44.180 --> 49:46.100
一会再用search

49:46.100 --> 49:48.700
我们就先把这个input搞定

49:48.700 --> 49:49.580
我看一下

49:49.580 --> 49:51.980
它里边应该是有一个

49:54.980 --> 49:56.180
size

49:56.180 --> 49:56.900
prefix

49:56.980 --> 49:57.820
disable

49:59.340 --> 49:59.940
type

50:02.700 --> 50:03.620
好像没有

50:03.620 --> 50:03.940
对吧

50:03.940 --> 50:04.940
没有

50:04.940 --> 50:06.700
没有的话

50:06.700 --> 50:08.980
我们得自己去手写代码

50:08.980 --> 50:11.620
来控制一下这里的

50:11.620 --> 50:13.260
我们这样子吧

50:13.260 --> 50:14.140
我们这样

50:14.140 --> 50:16.420
我们用外面包一个弹性盒

50:16.420 --> 50:16.740
行吧

50:16.740 --> 50:17.740
我们之前学过这个

50:17.740 --> 50:18.500
就是布局的

50:18.500 --> 50:18.900
对吧

50:18.900 --> 50:20.460
我们用外面包一个弹性盒

50:20.460 --> 50:22.540
一个文门框放到一个盒子里边

50:22.540 --> 50:24.060
一个文门框放到一个盒子里边

50:24.060 --> 50:25.940
我们是用弹性盒

50:25.940 --> 50:26.540
在and里边

50:26.580 --> 50:27.740
我们导入布局

50:27.740 --> 50:28.700
导入这个肉

50:28.700 --> 50:30.860
就是三南布局

50:30.860 --> 50:32.180
肉和cow

50:32.180 --> 50:32.900
来吧

50:33.820 --> 50:35.620
我们这里写上一个肉

50:36.740 --> 50:37.620
肉组件

50:37.620 --> 50:40.980
type为flex弹性盒

50:40.980 --> 50:43.060
然后这里边包含很多列

50:43.060 --> 50:44.660
一列就是cow

50:45.700 --> 50:47.180
一列就是cow

50:47.780 --> 50:48.540
一列

50:48.540 --> 50:52.900
一列我都不写战斗号列了

50:52.900 --> 50:54.300
justify

50:54.300 --> 50:56.140
start

50:57.020 --> 50:59.420
这里把文门框放进来

50:59.420 --> 51:00.380
放进来

51:00.380 --> 51:00.860
包含

51:01.980 --> 51:02.860
你看

51:02.860 --> 51:04.740
因为这个列

51:04.740 --> 51:06.660
它相当于是在弹性盒里边

51:06.660 --> 51:08.460
那么跟后边的东西是一次排列的

51:08.460 --> 51:09.220
对吧

51:09.220 --> 51:10.540
跟后边的东西是一次排列的

51:10.540 --> 51:12.540
所以说我们可以用这种方式

51:12.540 --> 51:15.540
这是关于关键字这一块

51:15.540 --> 51:16.180
关键字这一块

51:16.180 --> 51:17.500
是不是可以出来了

51:17.500 --> 51:18.460
那么关键字这一块

51:18.460 --> 51:19.420
我们刚才还说了

51:19.420 --> 51:21.580
它还可以把它设成

51:21.580 --> 51:23.740
src那个组件

51:23.740 --> 51:25.460
src组件

51:25.500 --> 51:27.300
src组件跟那个input的组件

51:27.300 --> 51:28.900
用法了基本一致

51:28.900 --> 51:30.260
input.src

51:31.540 --> 51:32.460
你可以把解构出来

51:32.460 --> 51:33.100
对吧

51:33.100 --> 51:34.940
我们这里可以使用src组件

51:34.940 --> 51:35.660
也可以

51:35.660 --> 51:36.900
也可以

51:36.900 --> 51:38.620
保存

51:38.620 --> 51:39.300
用法是一样的

51:39.300 --> 51:40.220
多了这么一个玩意

51:40.220 --> 51:40.780
对吧

51:40.780 --> 51:42.140
这样子一回车

51:42.140 --> 51:44.340
一回车它也会触发

51:44.340 --> 51:45.700
也会触发某一些东西

51:45.700 --> 51:46.380
你看

51:46.380 --> 51:47.900
这个src组件

51:47.900 --> 51:48.820
src组件里边

51:50.940 --> 51:51.900
src组件里边

51:51.900 --> 51:53.220
有一个叫N-t-8-tun

51:54.220 --> 51:55.460
不对

51:55.460 --> 51:57.260
就是un-src

51:57.260 --> 51:58.420
点击搜索

51:58.420 --> 51:59.900
会按下回车键的时候

51:59.900 --> 52:01.100
还会触发一个函数

52:01.100 --> 52:02.300
会触发一个函数

52:02.300 --> 52:03.660
那么这个触发的函数

52:03.660 --> 52:05.300
我们也可以把它对应到这

52:05.300 --> 52:05.700
对吧

52:05.700 --> 52:06.700
把它对应到这

52:06.700 --> 52:09.060
z-handle-src

52:09.060 --> 52:09.300
好

52:09.300 --> 52:09.700
这里呢

52:09.700 --> 52:10.460
我们来吧

52:13.460 --> 52:15.500
这里我们un-src

52:16.380 --> 52:17.700
也可以对应到这个函数

52:17.700 --> 52:19.900
z-handle-src

52:21.900 --> 52:22.500
对

52:22.500 --> 52:23.100
z-handle-src

52:23.180 --> 52:24.100
handle-src

52:25.100 --> 52:25.380
好

52:25.380 --> 52:26.540
保存

52:26.540 --> 52:29.110
你看一下

52:29.110 --> 52:30.070
一回车

52:30.070 --> 52:31.030
所以也可以搜索

52:31.030 --> 52:31.710
对吧

52:31.710 --> 52:32.430
也可以搜索

52:33.270 --> 52:33.510
好

52:33.510 --> 52:34.270
这是这一块

52:34.270 --> 52:34.910
关键字

52:36.270 --> 52:36.470
好

52:36.470 --> 52:36.990
继续

52:36.990 --> 52:38.310
继续

52:38.310 --> 52:40.590
然后边是一个选择性别

52:40.590 --> 52:41.510
选择性别的话

52:41.510 --> 52:42.470
是一个单选框

52:42.470 --> 52:42.710
对吧

52:42.710 --> 52:43.310
单选框

52:43.310 --> 52:43.750
我们来看一下

52:43.750 --> 52:45.670
它里边有没有给我们提供单选框的

52:45.670 --> 52:46.230
redu

52:46.230 --> 52:47.270
单选框

52:47.270 --> 52:47.630
看没

52:47.630 --> 52:48.750
说可以提供的

52:48.750 --> 52:48.870
好

52:48.870 --> 52:51.390
我们现在要有几个选项

52:51.390 --> 52:52.390
可以供用选择

52:52.390 --> 52:52.910
那么这里呢

52:52.910 --> 52:54.710
我们可以是不是可以使用这个

52:54.710 --> 52:56.110
使用这种模式

52:56.110 --> 52:57.430
组合式的单选框

52:57.430 --> 52:57.670
来吧

52:57.670 --> 52:58.790
我们用一下这个模式

52:58.790 --> 52:59.990
这些东西都很简单

52:59.990 --> 53:02.110
你可以自己去参与一下代码

53:02.110 --> 53:03.590
因为我这里这么多API

53:03.590 --> 53:05.390
我不可能一个个讲也没有什么意义

53:05.390 --> 53:07.630
我们就要用到哪一块讲那一块

53:07.630 --> 53:08.790
那么其他的一基本用法

53:08.790 --> 53:10.550
大家可以看一下这个API

53:10.550 --> 53:10.710
好

53:10.710 --> 53:12.590
那么我们看一下这个组合的单选框

53:12.590 --> 53:14.190
首先导入这个redu

53:14.190 --> 53:14.430
好

53:14.430 --> 53:14.750
来吧

53:14.750 --> 53:19.060
导入

53:19.060 --> 53:19.700
说实话

53:19.700 --> 53:20.420
给大家说实话

53:20.420 --> 53:21.220
像这种API

53:21.220 --> 53:22.060
我经常忘

53:22.060 --> 53:23.500
所以说要经常查询

53:23.500 --> 53:25.100
就是你用的时候去查就行了

53:25.140 --> 53:27.060
你不用去一个个使劲用备

53:27.060 --> 53:27.220
好

53:27.220 --> 53:28.060
那么这个redu

53:28.060 --> 53:29.260
我们要把很多的redu

53:29.260 --> 53:31.380
一个一个的单选框放到一个组里边

53:31.380 --> 53:32.100
那怎么做呢

53:32.100 --> 53:33.820
你看他这里边用了一个用到的什么

53:33.820 --> 53:34.940
redu group

53:34.940 --> 53:36.620
怎么把它复制过来

53:36.620 --> 53:37.900
redu group

53:37.900 --> 53:38.460
好

53:38.460 --> 53:40.420
就是一个单选框的组

53:40.420 --> 53:40.780
对吧

53:40.780 --> 53:41.740
单选框的组

53:41.740 --> 53:41.900
好

53:41.900 --> 53:42.940
那么这里边呢

53:42.940 --> 53:45.020
是不是相当于是个下拉列表的样子

53:45.020 --> 53:46.220
一个个选项

53:46.220 --> 53:46.460
对吧

53:46.460 --> 53:47.300
一个个选项

53:47.300 --> 53:49.580
那么你这里边那些的是redu button

53:49.580 --> 53:50.060
好

53:50.060 --> 53:51.500
每一个button的对应一个value

53:51.500 --> 53:52.420
对应一个value

53:52.420 --> 53:53.580
那是不是就

53:53.580 --> 53:55.060
你懂我意思是吧

53:55.540 --> 53:56.260
value为什么

53:56.260 --> 53:58.380
-1表示什么不限性别

53:58.380 --> 53:59.700
不限

53:59.700 --> 54:00.980
然后这个value为什么

54:00.980 --> 54:01.660
为难

54:01.660 --> 54:03.860
一个value为女

54:03.860 --> 54:05.740
这是女

54:05.740 --> 54:06.380
上面的

54:06.380 --> 54:07.180
还

54:07.180 --> 54:09.140
这是难

54:09.140 --> 54:10.620
这里是0

54:10.620 --> 54:11.940
就完了对吧

54:11.940 --> 54:12.900
第4是value

54:12.900 --> 54:16.620
默认的就是value值是-1

54:16.620 --> 54:18.100
默认的value值是-1

54:18.100 --> 54:18.900
当然这个value值

54:18.900 --> 54:20.380
我们可以直接把它售空

54:20.380 --> 54:21.580
只应该书写value

54:21.580 --> 54:22.980
直接让它售空

54:23.020 --> 54:23.660
售空的话

54:23.660 --> 54:25.780
我们是不是跟这里一样

54:25.780 --> 54:26.020
对吧

54:26.020 --> 54:27.020
售空的是什么

54:27.020 --> 54:27.900
售空就是z

54:27.900 --> 54:29.820
stat.6

54:29.820 --> 54:33.180
然后等于这个状态里边的6值

54:33.180 --> 54:33.620
对吧

54:33.620 --> 54:35.340
等于这个值

54:35.340 --> 54:36.460
没问题吧

54:36.460 --> 54:38.340
然后等于这个值就完成了

54:38.340 --> 54:38.500
好

54:38.500 --> 54:41.220
然后当发生变化的时候

54:41.220 --> 54:41.940
发生变化的时候

54:41.940 --> 54:43.980
是不是要写个函数

54:43.980 --> 54:45.140
要写个函数

54:45.140 --> 54:46.300
那么发生变化的时候

54:46.300 --> 54:47.700
干嘛呢

54:47.700 --> 54:51.960
handle radio change

54:51.960 --> 54:52.920
就搞定这个

54:52.920 --> 54:53.240
对吧

54:53.240 --> 54:54.640
handle radio change就完成了

54:54.680 --> 54:56.520
我们之前写好了函数

54:56.520 --> 54:58.320
重新设置个状态的值就完成了

55:02.200 --> 55:04.000
它之前还要是个事件参数

55:04.000 --> 55:04.280
意义对吧

55:04.280 --> 55:05.640
然后我们就要重新写了

55:05.640 --> 55:06.720
我们得重新写了

55:06.720 --> 55:07.680
这个handle radio

55:07.680 --> 55:09.480
就是当它变化的时候

55:09.480 --> 55:11.200
它会把新的值给传过来

55:11.200 --> 55:11.960
6 value

55:11.960 --> 55:13.080
新的值传过来

55:13.080 --> 55:14.480
那么我们来输出一下

55:14.480 --> 55:15.120
6 value

55:16.600 --> 55:17.360
保存

55:17.360 --> 55:17.920
你看一下吧

55:19.720 --> 55:20.160
这样子

55:20.160 --> 55:22.320
你看我们这里是不是显示不现

55:23.120 --> 55:23.600
这怎么了

55:24.640 --> 55:27.990
you try to check the probe

55:27.990 --> 55:29.030
把这三个就删掉了

55:29.030 --> 55:30.030
这三个就删掉了

55:30.030 --> 55:32.260
不要了

55:32.260 --> 55:32.580
刷新

55:34.180 --> 55:34.740
好了

55:34.740 --> 55:38.020
那么现在我们选择男

55:38.020 --> 55:38.820
他得到了一个

55:38.820 --> 55:39.700
得到了是一个

55:39.700 --> 55:40.540
什么

55:40.540 --> 55:43.340
得到了是一个对象

55:43.340 --> 55:45.260
得到了是一个对象

55:45.260 --> 55:46.940
然后在这里选择女

55:46.940 --> 55:48.780
得到了又是一个对象

55:48.780 --> 55:49.420
target

55:51.460 --> 55:52.700
target是什么呢

55:53.700 --> 55:56.660
target就表示你选中的那个

55:56.660 --> 55:58.420
就是动物元素

55:58.420 --> 55:59.180
动物元素

55:59.180 --> 56:00.020
真实动物元素

56:00.020 --> 56:02.860
就是那个叫啥呢

56:02.860 --> 56:03.900
那个东西叫做

56:03.900 --> 56:05.020
那个input元素

56:05.020 --> 56:05.260
对吧

56:05.260 --> 56:06.580
就是那个input元素

56:06.580 --> 56:06.780
好

56:06.780 --> 56:07.580
所以说我们这里

56:07.580 --> 56:09.900
直接通过handle

56:09.900 --> 56:10.900
就在这里

56:10.900 --> 56:12.580
我们要重新去设置

56:12.580 --> 56:14.220
z set set set

56:14.220 --> 56:15.100
重新设置啥呢

56:15.100 --> 56:17.060
sets为啥呢

56:17.060 --> 56:18.700
为之前还不是

56:18.700 --> 56:19.940
还不是真正的动物元素

56:19.940 --> 56:21.220
它这里给你封装了一下

56:21.340 --> 56:22.220
它表示value字

56:22.220 --> 56:23.260
它不是知识不错了

56:23.260 --> 56:24.580
那么你这里直接设置

56:24.580 --> 56:26.580
就是世界参数

56:26.580 --> 56:28.100
1点target

56:28.100 --> 56:29.340
就是目标那个

56:29.340 --> 56:30.980
类似于动物对象的东西

56:30.980 --> 56:33.180
然后它的什么value字

56:33.180 --> 56:34.540
你选中的那个value字

56:34.540 --> 56:36.700
重新设置到性别里边

56:36.700 --> 56:37.940
重新设置到性别里边

56:37.940 --> 56:38.940
就完事了

56:38.940 --> 56:39.140
好

56:39.140 --> 56:40.140
你看

56:40.140 --> 56:40.500
对吧

56:40.500 --> 56:41.860
是不是可以选中了

56:41.860 --> 56:43.940
对不对

56:43.940 --> 56:44.140
好

56:44.140 --> 56:46.980
这就是性别

56:46.980 --> 56:49.580
选中性别

56:49.580 --> 56:50.820
好

56:50.820 --> 56:51.780
然后我们希望

56:51.780 --> 56:53.700
我们希望这一出现有弹性和

56:53.700 --> 56:55.100
但是我希望这个

56:55.100 --> 56:56.940
每一列之间有一点渐细

56:56.940 --> 56:57.780
有一点空间

56:57.780 --> 56:58.540
有点渐细

56:58.540 --> 57:00.180
我们看一下之前的布局

57:00.180 --> 57:02.300
之前的三个系统的布局

57:02.300 --> 57:05.060
它里边有可以提供渐细的

57:05.060 --> 57:06.820
叫做galp

57:06.820 --> 57:07.940
叫做galp

57:07.940 --> 57:09.620
我们看一下吧

57:09.620 --> 57:11.020
getter

57:11.020 --> 57:13.860
三个之间的间隔

57:13.860 --> 57:15.140
比方说我们来这里

57:15.140 --> 57:15.780
肉这里

57:15.780 --> 57:17.140
其他一个galp

57:17.140 --> 57:17.860
getter

57:17.860 --> 57:22.290
getter比方说是10

57:22.330 --> 57:24.410
你看是隔了10个项术

57:24.410 --> 57:27.130
隔了一点距离

57:27.130 --> 57:28.650
那么下面就是一个按钮了

57:28.650 --> 57:29.770
按钮是不是我们可以使用

57:29.770 --> 57:32.290
它给我们提供的按钮

57:32.290 --> 57:35.490
button

57:35.490 --> 57:36.530
就这么个按钮

57:36.530 --> 57:39.570
那么换成这个按钮就完事了

57:39.570 --> 57:40.530
保存

57:40.530 --> 57:42.450
只是把按钮变一下

57:42.450 --> 57:44.130
把它变成一个type

57:44.130 --> 57:47.850
为primary

57:47.850 --> 57:48.690
你看一下

57:48.690 --> 57:49.530
说变了

57:49.530 --> 57:50.210
对吧

57:50.370 --> 57:50.730
最后了

57:50.730 --> 57:52.050
上下距离留点距离

57:52.050 --> 57:53.490
上下留点距离

57:53.490 --> 57:54.250
留点距离的话

57:54.250 --> 57:55.530
那么这个东西

57:55.530 --> 57:57.930
你可以写自己写样式的

57:57.930 --> 58:00.090
你可以自己书写样式的

58:00.090 --> 58:02.130
那么这里

58:02.130 --> 58:04.370
书写样式的话

58:04.370 --> 58:05.890
我们把它放到一个类

58:05.890 --> 58:08.530
放到哪呢

58:08.530 --> 58:10.370
我看一下

58:10.370 --> 58:14.370
书写一个样式的话

58:14.370 --> 58:16.330
我们可以在这里

58:16.330 --> 58:18.170
看一下能不能写个style

58:18.170 --> 58:19.290
好像这里不行

58:19.370 --> 58:23.210
还有肉还不能让你写style

58:23.210 --> 58:26.420
我看一下

58:26.420 --> 58:27.620
还不能让你写style

58:27.620 --> 58:29.820
那么我们这里就给它

58:29.820 --> 58:32.180
外面套一个div

58:32.180 --> 58:34.420
当中这一块可以少量的写一点

58:34.420 --> 58:36.020
我们自己的特有的那样式

58:36.020 --> 58:37.260
因为它也不知道下面有啥

58:37.260 --> 58:38.580
所以它没有给间隔

58:38.580 --> 58:40.260
那么我们这里就拿那些那样式了

58:40.260 --> 58:42.420
直接写个style

58:42.420 --> 58:44.100
这里就是margin

58:44.100 --> 58:45.300
button

58:45.300 --> 58:50.260
给它写上一个20个相处

58:50.260 --> 58:51.540
那么你下面有20个相处

58:51.580 --> 58:53.300
就完了

58:53.300 --> 58:57.380
这就是把这一块查询

58:57.380 --> 59:00.500
这个查询条搞定了

59:00.500 --> 59:01.740
那么做成一个比较漂亮的

59:01.740 --> 59:03.340
这么一个界面

59:03.340 --> 59:05.260
这一块差不多是这样子的

59:05.260 --> 59:05.860
讲了什么呢

59:05.860 --> 59:06.820
讲了表格

59:06.820 --> 59:08.420
讲了查询条

59:08.420 --> 59:09.740
涉及到了新的总监哪些呢

59:09.740 --> 59:10.700
table

59:10.700 --> 59:12.220
然后闻闷框

59:12.220 --> 59:14.100
然后radio

59:14.100 --> 59:15.580
还有什么分页

59:15.580 --> 59:16.540
我刚才还没有说

59:16.540 --> 59:18.380
还有一个点没有说

59:18.380 --> 59:19.700
就是说如果这个表格里面

59:19.700 --> 59:21.340
它本身自带分页的

59:21.380 --> 59:22.060
其实大家这些东西

59:22.060 --> 59:23.900
大家都可以自行去看一下

59:23.900 --> 59:26.300
因为讲不完的实在太多了

59:26.300 --> 59:28.100
也没有必要讲完

59:28.100 --> 59:30.940
要一个个讲真的是太傻了

59:30.940 --> 59:32.700
表格我们来看一下

59:32.700 --> 59:35.860
看一下它的说法

59:35.860 --> 59:36.860
它怎么来去实现

59:36.860 --> 59:39.420
在表格里面自行去实现分页

59:39.420 --> 59:42.620
而不依赖培训的一线这个组建

59:42.620 --> 59:44.340
来看一下吧

59:44.340 --> 59:45.820
这个表格里面

59:45.820 --> 59:48.300
那过一下就行了

59:48.300 --> 59:49.900
分页

59:49.940 --> 59:52.540
表格分页

59:52.540 --> 59:53.420
我看这里

59:53.420 --> 01:00:03.720
目录里面应该有一个分页

01:00:05.720 --> 01:00:06.520
搜索一下

01:00:06.520 --> 01:00:07.520
分页

01:00:09.440 --> 01:00:10.440
分页

01:00:11.040 --> 01:00:11.840
分页

01:00:11.840 --> 01:00:12.960
就这个

01:00:12.960 --> 01:00:14.680
它是一个分页器

01:00:14.680 --> 01:00:15.880
分页器

01:00:15.880 --> 01:00:17.760
那么分页器配置的是什么

01:00:17.760 --> 01:00:18.960
培计内形

01:00:18.960 --> 01:00:20.880
那么这个配置的培计内形

01:00:20.880 --> 01:00:22.560
它跟我们刚才

01:00:22.560 --> 01:00:25.080
它说它跟培计内形的组建的配置

01:00:25.080 --> 01:00:26.720
是完全一致的

01:00:26.760 --> 01:00:28.200
是完全一致的

01:00:28.200 --> 01:00:29.760
你就这样去配置就完事了

01:00:29.760 --> 01:00:30.320
对吧

01:00:30.320 --> 01:00:31.280
就是这么个意思

01:00:31.280 --> 01:00:32.840
你直接设置一个培计内形

01:00:32.840 --> 01:00:33.960
然后设置为一个对象

01:00:33.960 --> 01:00:35.360
那么对象的配置的方式

01:00:35.360 --> 01:00:37.840
跟刚才那个培计内形是完全一致的

01:00:37.840 --> 01:00:40.040
你看刚才我们配置那个培计内形的时候

01:00:41.240 --> 01:00:42.280
我们直接拿一个吧

01:00:42.280 --> 01:00:42.840
拿一个

01:00:42.840 --> 01:00:43.920
一步复杂这个玩意

01:00:45.120 --> 01:00:46.640
也就是我们这里不需要这个组建了

01:00:46.640 --> 01:00:48.280
我们直接在表格里面进行分页

01:00:48.280 --> 01:00:50.200
直接在表格里面进行分页

01:00:50.200 --> 01:00:52.560
那么表格里面是不是要配置培计内形

01:00:52.960 --> 01:00:53.440
是吧

01:00:53.440 --> 01:00:54.800
是不是要配置培计内形

01:00:54.800 --> 01:00:55.960
那么这里呢

01:00:56.080 --> 01:00:57.160
我们看一下表格

01:00:57.840 --> 01:00:59.160
表格这里是不是要配置这个

01:00:59.800 --> 01:01:00.720
培计

01:01:01.960 --> 01:01:03.840
怎么什么什么属性

01:01:03.840 --> 01:01:04.680
培计内形

01:01:06.040 --> 01:01:06.720
那么这个属性

01:01:07.240 --> 01:01:08.800
可以通过这个属性传给我

01:01:09.400 --> 01:01:10.680
可以通过这个属性传给我

01:01:11.240 --> 01:01:13.000
通过属性传给我这个培计内形

01:01:13.000 --> 01:01:14.760
那么我们在容器组建里边

01:01:14.760 --> 01:01:16.000
给它传递这个数据的时候

01:01:16.000 --> 01:01:16.160
是吧

01:01:16.160 --> 01:01:16.840
多一个数据

01:01:16.840 --> 01:01:18.280
就是培计内形的这个数据

01:01:18.280 --> 01:01:18.600
好

01:01:18.600 --> 01:01:20.040
现在我们在容器组建里边

01:01:20.640 --> 01:01:22.120
到容器组建里边

01:01:22.120 --> 01:01:24.560
容器组建叫student table container

01:01:24.560 --> 01:01:25.880
在这个组建里边

01:01:26.000 --> 01:01:26.840
在这个组建里边

01:01:26.840 --> 01:01:28.800
我们除了要传这个student之外

01:01:28.800 --> 01:01:30.760
是不是还得传递一个培计内形

01:01:31.120 --> 01:01:31.480
是吧

01:01:31.480 --> 01:01:32.920
是不是还要传递一个培计内形

01:01:34.160 --> 01:01:35.000
培计内形

01:01:38.600 --> 01:01:39.320
是不是要传递这个

01:01:39.880 --> 01:01:40.400
传递这个

01:01:42.840 --> 01:01:44.160
到现在写写写

01:01:44.160 --> 01:01:45.320
感觉有点麻烦

01:01:45.320 --> 01:01:46.560
感觉有点麻烦

01:01:46.560 --> 01:01:47.720
因为这里要传递什么

01:01:47.720 --> 01:01:49.200
是不是还是跟刚才一样

01:01:49.200 --> 01:01:50.720
要传递这个current

01:01:50.720 --> 01:01:51.320
total

01:01:51.320 --> 01:01:52.440
payee size

01:01:52.440 --> 01:01:53.400
share quickjump

01:01:53.400 --> 01:01:54.640
都要传递过去

01:01:54.680 --> 01:01:55.920
然后还要传递

01:01:55.920 --> 01:01:58.080
还要分开传递一个onchain级时间

01:01:58.080 --> 01:02:00.760
那么这个onchain级也在培计内形的配置里边

01:02:00.760 --> 01:02:02.640
也在培计内形的配置里边

01:02:02.640 --> 01:02:03.720
所以说这里的配置

01:02:03.720 --> 01:02:05.560
我们跟着这样子写吧

01:02:05.560 --> 01:02:08.480
因为它一会儿连接的时候要分开传递

01:02:09.120 --> 01:02:10.720
所以我们这里能跟着这样子写

01:02:11.040 --> 01:02:11.880
这样子写的了

01:02:12.800 --> 01:02:14.360
你不是要给我这么一些数据吗

01:02:14.360 --> 01:02:14.920
current

01:02:14.920 --> 01:02:16.200
我这里可以重新来一次

01:02:16.200 --> 01:02:18.200
来自于props的current

01:02:18.720 --> 01:02:19.400
来自于这

01:02:20.320 --> 01:02:22.880
你不是要对照来写

01:02:23.600 --> 01:02:24.600
不是要total吗

01:02:25.200 --> 01:02:27.280
我们来自于props.total

01:02:28.280 --> 01:02:30.840
你不是要需要给我一个payee size吗

01:02:30.840 --> 01:02:32.520
payee size我就直接写死的了

01:02:32.520 --> 01:02:33.840
或者说你给我也行

01:02:33.840 --> 01:02:35.000
给我也行

01:02:35.760 --> 01:02:37.760
因为在仓库里面确实应该给它

01:02:37.760 --> 01:02:39.040
来自于props.total

01:02:39.040 --> 01:02:40.280
payee size

01:02:40.280 --> 01:02:42.120
props.total什么

01:02:42.120 --> 01:02:43.000
payee size

01:02:44.000 --> 01:02:45.200
然后呢

01:02:45.200 --> 01:02:46.000
还要什么呢

01:02:46.000 --> 01:02:47.280
这个东西我就直接写死了

01:02:47.280 --> 01:02:48.680
这个东西我就直接写死了

01:02:48.680 --> 01:02:49.200
total

01:02:49.200 --> 01:02:51.160
还有什么onchain级对吧

01:02:51.160 --> 01:02:52.840
还有什么onchain级

01:02:52.840 --> 01:02:54.600
onchain级呢

01:02:54.680 --> 01:02:58.800
你给我一个就是props.onchain级

01:02:58.800 --> 01:02:59.520
ok

01:02:59.520 --> 01:03:01.720
你给我在属性里面给我传这些东西

01:03:01.720 --> 01:03:02.560
好来吧

01:03:02.560 --> 01:03:03.480
那我们到这边来

01:03:03.480 --> 01:03:04.320
contain到里边来

01:03:04.320 --> 01:03:06.520
是不是把这边扔过去就完事了

01:03:07.040 --> 01:03:09.200
该多传这么一些属性就完事了

01:03:09.200 --> 01:03:09.720
对吧

01:03:09.720 --> 01:03:11.040
多传这么一些属性

01:03:11.640 --> 01:03:12.120
好

01:03:12.120 --> 01:03:12.600
然后呢

01:03:12.600 --> 01:03:14.200
再还有还有一个东西就是

01:03:14.680 --> 01:03:15.680
maps

01:03:15.680 --> 01:03:17.040
dispatch to props

01:03:17.760 --> 01:03:18.800
还有这么一个东西

01:03:20.440 --> 01:03:20.720
好

01:03:20.720 --> 01:03:22.680
这东西我们还算连接进去

01:03:23.040 --> 01:03:23.520
好

01:03:23.600 --> 01:03:24.600
那么这个时候呢

01:03:24.600 --> 01:03:26.280
你是不是要得给我传递

01:03:26.280 --> 01:03:27.720
就是他的处理函数

01:03:27.720 --> 01:03:29.720
就是onchain级

01:03:29.720 --> 01:03:30.480
onchain级

01:03:30.480 --> 01:03:31.840
当页面改变的时候

01:03:31.840 --> 01:03:33.040
你要处理的东西

01:03:33.040 --> 01:03:33.760
那么这些东西

01:03:33.760 --> 01:03:35.200
现在就跑到表格里边去了

01:03:35.200 --> 01:03:35.400
对吧

01:03:35.400 --> 01:03:36.840
表格里边还自带分页

01:03:36.840 --> 01:03:37.240
ok

01:03:37.240 --> 01:03:38.440
我们就这样连接一晚上

01:03:38.440 --> 01:03:39.600
那么这样子一来的话

01:03:39.600 --> 01:03:41.400
student的配角是不是可以不用了

01:03:41.400 --> 01:03:42.600
我们在页面里边

01:03:43.040 --> 01:03:44.200
页面里边

01:03:44.200 --> 01:03:44.960
index里边

01:03:44.960 --> 01:03:46.600
student的配角是不是可以不用了

01:03:46.600 --> 01:03:47.560
不用这个东西了

01:03:47.560 --> 01:03:48.680
配角不要了

01:03:48.680 --> 01:03:50.160
你看照样能分页

01:03:51.160 --> 01:03:53.840
因为他本身就是在自带分页功能

01:03:54.600 --> 01:03:55.680
你看是不是在这

01:03:55.680 --> 01:03:56.280
对吧

01:03:56.280 --> 01:03:57.400
自带分页功能

01:03:58.240 --> 01:03:59.040
没问题吧

01:04:00.320 --> 01:04:01.240
是一样的

01:04:01.240 --> 01:04:02.160
一样的

01:04:03.960 --> 01:04:04.960
这里不现

01:04:07.900 --> 01:04:08.740
是一样的

01:04:09.340 --> 01:04:09.620
好

01:04:09.620 --> 01:04:10.500
这是这一块

01:04:11.220 --> 01:04:11.900
分页

01:04:12.380 --> 01:04:13.700
还有就是一个楼顶

01:04:13.700 --> 01:04:15.340
就正在夹载中

01:04:15.340 --> 01:04:17.020
正在夹载中这个效果

01:04:17.020 --> 01:04:18.180
其实他也给你做了

01:04:18.180 --> 01:04:19.540
你不用去自己写

01:04:19.620 --> 01:04:21.780
你不用去写student的楼顶了

01:04:21.780 --> 01:04:22.780
你不用写了

01:04:23.220 --> 01:04:24.980
student的楼顶不要了

01:04:24.980 --> 01:04:26.620
叫这个楼顶组件我们也不要了

01:04:27.420 --> 01:04:29.980
这个什么model组件不要了

01:04:29.980 --> 01:04:31.500
没什么用了

01:04:31.740 --> 01:04:32.300
然后呢

01:04:32.300 --> 01:04:34.260
什么楼顶组件没用了

01:04:34.260 --> 01:04:36.940
student楼顶

01:04:37.460 --> 01:04:40.380
student楼顶没用了

01:04:40.380 --> 01:04:41.540
这东西都没用了

01:04:42.020 --> 01:04:42.460
好

01:04:42.460 --> 01:04:43.620
我们直接

01:04:43.620 --> 01:04:45.540
他表格里边直接能够自带

01:04:45.540 --> 01:04:47.620
自带的就是正在夹载中的效果

01:04:47.620 --> 01:04:48.260
在哪呢

01:04:48.300 --> 01:04:49.940
我们看要有一个表格里边

01:04:49.940 --> 01:04:50.900
楼顶

01:04:50.900 --> 01:04:52.460
页面是否正在夹载中

01:04:52.460 --> 01:04:54.580
很多组件他都有这个东西

01:04:54.580 --> 01:04:56.860
包括我们之前学到的安柳组件

01:04:56.860 --> 01:04:57.620
是不是也有

01:04:57.620 --> 01:04:59.300
你设置这个楼顶就完事了

01:04:59.300 --> 01:05:02.420
也就是说表格组件里边是不是还要加个楼顶

01:05:02.420 --> 01:05:04.340
我们这里Isga传过去

01:05:04.340 --> 01:05:05.940
student的table里边

01:05:05.940 --> 01:05:07.580
你不是要一个楼顶吗

01:05:07.580 --> 01:05:07.980
ok

01:05:07.980 --> 01:05:09.860
我这里也不知道我是不是正在夹载中

01:05:09.860 --> 01:05:10.460
我也不知道

01:05:10.460 --> 01:05:12.340
通过属性来传给我

01:05:13.980 --> 01:05:14.820
楼顶

01:05:14.820 --> 01:05:15.980
通过属性来传给我

01:05:16.940 --> 01:05:18.900
我这个组件主要是给你封装一下

01:05:18.900 --> 01:05:19.540
有哪些列

01:05:20.820 --> 01:05:21.980
那么现在呢

01:05:21.980 --> 01:05:24.700
在student的table的就是容器里边

01:05:24.700 --> 01:05:25.700
容器组件里边

01:05:26.300 --> 01:05:27.700
那么是不是还要多传一个

01:05:27.700 --> 01:05:28.380
就是楼顶

01:05:28.380 --> 01:05:29.100
对吧

01:05:29.100 --> 01:05:29.740
楼顶

01:05:29.740 --> 01:05:30.900
楼顶为啥呢

01:05:30.900 --> 01:05:31.900
State

01:05:32.780 --> 01:05:33.420
啥

01:05:33.940 --> 01:05:34.420
是啥

01:05:34.420 --> 01:05:35.340
我们之前打写的

01:05:36.340 --> 01:05:38.140
看那个就是这里

01:05:38.140 --> 01:05:38.900
仓库

01:05:38.900 --> 01:05:40.260
我们再这样子看

01:05:40.260 --> 01:05:41.100
看得清楚一点

01:05:45.370 --> 01:05:46.050
在这里

01:05:47.210 --> 01:05:48.010
楼顶

01:05:48.090 --> 01:05:50.650
看State里边楼顶的Effects

01:05:50.650 --> 01:05:52.490
是不是等于Students

01:05:53.490 --> 01:05:55.050
怎么等于Students Copy

01:05:55.050 --> 01:05:56.250
他也多了一个Copy

01:05:57.890 --> 01:06:00.970
是不是等于Students Fetched Students

01:06:01.730 --> 01:06:03.250
也说我们这里看一查

01:06:03.250 --> 01:06:06.290
看的是State里边楼顶的属性

01:06:06.290 --> 01:06:09.970
它里边的Effects

01:06:10.810 --> 01:06:12.010
的第二什么

01:06:12.010 --> 01:06:14.250
第二个Students Fetched Students

01:06:14.250 --> 01:06:15.650
是不是等于处

01:06:15.650 --> 01:06:16.490
主要是看这个

01:06:17.210 --> 01:06:18.450
是不是等于处

01:06:18.450 --> 01:06:20.130
保存

01:06:20.130 --> 01:06:20.570
你看一下

01:06:23.930 --> 01:06:26.630
怎么了

01:06:26.630 --> 01:06:28.110
Fetched

01:06:28.110 --> 01:06:29.150
哦

01:06:29.150 --> 01:06:29.990
这里

01:06:29.990 --> 01:06:31.350
我们得用这种

01:06:31.350 --> 01:06:32.350
这个是

01:06:33.630 --> 01:06:35.510
不是一个合法的标识服务

01:06:35.510 --> 01:06:35.870
这样子

01:06:37.390 --> 01:06:38.030
你看

01:06:38.030 --> 01:06:39.350
是不是自带楼顶的

01:06:39.350 --> 01:06:39.670
你看

01:06:40.990 --> 01:06:42.030
看到没

01:06:42.030 --> 01:06:43.310
有全程来转

01:06:43.310 --> 01:06:44.230
还没

01:06:44.230 --> 01:06:44.870
全程来转

01:06:46.350 --> 01:06:47.350
因为我们速度很快

01:06:47.550 --> 01:06:48.110
速度很快

01:06:48.110 --> 01:06:49.790
所以说感觉不出来

01:06:49.790 --> 01:06:50.990
那么我们这样子

01:06:50.990 --> 01:06:52.790
以后因为它速度很快

01:06:52.790 --> 01:06:53.630
因为它速度很快

01:06:53.630 --> 01:06:55.990
我们这样子测试一下

01:06:55.990 --> 01:06:57.590
我们在Students里

01:06:57.590 --> 01:07:00.190
我们在Services里面

01:07:00.190 --> 01:07:00.950
搜索的时候

01:07:00.950 --> 01:07:02.430
我们先等一会

01:07:02.430 --> 01:07:05.010
等一会

01:07:05.010 --> 01:07:07.250
我们这里写上这么一个辅助函数

01:07:08.250 --> 01:07:09.730
或者我们来这也行

01:07:09.730 --> 01:07:11.090
模型里边也行

01:07:11.090 --> 01:07:12.490
模型里面我们先等一会

01:07:12.490 --> 01:07:13.970
等一会再去搜索

01:07:13.970 --> 01:07:15.890
等一会再去搜索

01:07:15.930 --> 01:07:17.490
这里比方说

01:07:17.490 --> 01:07:19.490
我们这里写个辅助函数

01:07:20.050 --> 01:07:20.650
方个型

01:07:21.530 --> 01:07:22.010
点内

01:07:24.410 --> 01:07:27.010
Many Seconds

01:07:27.690 --> 01:07:31.050
Return一个NewPromiseResult

01:07:33.010 --> 01:07:33.690
这里

01:07:34.290 --> 01:07:35.410
SetTimeout

01:07:35.410 --> 01:07:36.770
等待疫苗

01:07:36.770 --> 01:07:39.490
等待你指定的时间之后

01:07:39.490 --> 01:07:40.810
我们再去Result

01:07:42.090 --> 01:07:43.370
写上这么一个点内函数

01:07:44.450 --> 01:07:45.290
然后我们在这里

01:07:45.370 --> 01:07:46.530
使用Ealt

01:07:47.690 --> 01:07:48.210
点内

01:07:50.140 --> 01:07:51.380
给它一个一秒钟

01:07:51.380 --> 01:07:52.220
一秒钟

01:07:53.500 --> 01:07:54.020
保存

01:07:56.260 --> 01:07:57.020
你看一下

01:07:58.580 --> 01:07:58.980
对吧

01:07:58.980 --> 01:07:59.980
这就是一个家在小伙

01:08:00.260 --> 01:08:00.780
对不对

01:08:02.340 --> 01:08:03.340
这就是MD

01:08:05.180 --> 01:08:06.300
这里边东西

01:08:06.300 --> 01:08:07.340
不用去使进一倍

01:08:07.340 --> 01:08:08.300
不用使进一倍

01:08:08.300 --> 01:08:08.900
但是

01:08:09.220 --> 01:08:10.460
你这个练习得完成

01:08:10.460 --> 01:08:11.900
你下来要把这个练习完成

01:08:11.900 --> 01:08:13.100
一边做练习

01:08:13.100 --> 01:08:14.020
一边去

01:08:14.020 --> 01:08:15.380
我都建议你不要去看

01:08:15.380 --> 01:08:16.300
再看我的视频了

01:08:16.300 --> 01:08:17.380
你跟着我走一遍

01:08:17.460 --> 01:08:18.980
然后你一边做练习

01:08:18.980 --> 01:08:20.540
一边去查阅API文档

01:08:20.540 --> 01:08:21.820
肯定过程中

01:08:21.820 --> 01:08:23.260
要经常遇到很多问题

01:08:23.700 --> 01:08:25.420
那么你好好去阅读文档

01:08:25.420 --> 01:08:26.940
慢慢的就会养成

01:08:26.940 --> 01:08:29.180
阅读文档来解决问题的习惯

01:08:29.180 --> 01:08:31.740
而这个习惯对于里面的开发来说

01:08:31.740 --> 01:08:32.940
是非常重要的

01:08:33.380 --> 01:08:35.060
有了这样的能力之后

01:08:35.420 --> 01:08:37.420
你后边就会越来越少的

01:08:37.420 --> 01:08:38.420
去依赖老师了

01:08:38.420 --> 01:08:39.700
不是我不跟你讲

01:08:39.700 --> 01:08:41.140
我可以挨在这里跟你讲

01:08:41.140 --> 01:08:42.380
尽管我很多东西都忘了

01:08:42.380 --> 01:08:43.020
差不多了

01:08:43.020 --> 01:08:43.660
但是没关系

01:08:43.660 --> 01:08:44.340
我一看他文档

01:08:44.340 --> 01:08:45.220
我就回忆起来了

01:08:45.900 --> 01:08:47.660
所以我可以跟你讲

01:08:47.660 --> 01:08:48.740
是没有什么意义

01:08:48.740 --> 01:08:50.420
花费的时间也蛮多的

01:08:50.420 --> 01:08:52.260
所以我希望大家在一边做的时候

01:08:52.260 --> 01:08:53.500
一边去查阅他的文档

01:08:53.500 --> 01:08:55.780
基本上他代码都非常简洁

01:08:56.460 --> 01:08:57.820
而且容易理解

01:08:57.820 --> 01:08:59.620
这一块学习显没有什么难度

01:08:59.620 --> 01:09:01.100
主要是查阅文档的习惯

01:09:01.100 --> 01:09:02.060
大家要养成

01:09:02.060 --> 01:09:02.500
好吧

01:09:02.500 --> 01:09:03.980
这是表格是不是搞定了

01:09:04.820 --> 01:09:06.100
那么表格也现在搞定了

01:09:06.100 --> 01:09:07.140
给大家预告一下

01:09:07.140 --> 01:09:08.180
咱们下节课

01:09:08.180 --> 01:09:10.340
要做一个比较麻烦的事情了

01:09:10.580 --> 01:09:11.580
就是表单

01:09:11.820 --> 01:09:13.020
因为表单这一块

01:09:13.140 --> 01:09:13.700
为什么麻烦

01:09:13.820 --> 01:09:14.980
因为它涉及到验证

01:09:16.300 --> 01:09:17.580
它涉及到验证

01:09:17.580 --> 01:09:18.820
就是要有很多数据

01:09:18.820 --> 01:09:20.660
你要去验证一下对不对

01:09:20.820 --> 01:09:21.780
那么这里

01:09:21.780 --> 01:09:23.220
会比较麻烦一点

01:09:23.220 --> 01:09:25.020
我下一课再给大家说

01:09:25.020 --> 01:09:25.620
好吧

01:09:25.620 --> 01:09:27.420
那么这一课没到这里的

01:09:27.780 --> 01:09:28.300
拜拜

