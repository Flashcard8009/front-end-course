WEBVTT

00:00.430 --> 00:05.430
这些课咱们来研究一下Reacts里面的表单元素

00:05.430 --> 00:09.430
当然我们这些说的表单元素啊 指的是Reacts元素啊

00:09.430 --> 00:12.430
一个对象而不是ATM的元素

00:12.430 --> 00:15.430
Reacts里面的表单元素呢

00:15.430 --> 00:20.430
它显得在用法上显得稍微有那么一点点特殊

00:20.430 --> 00:22.430
要介绍这一块的东西呢

00:22.430 --> 00:26.430
我们首先来认识一个概念 叫做受控逐渐

00:27.430 --> 00:30.430
受控逐渐和非受控逐渐

00:32.430 --> 00:34.430
这个概念先认识一下啊

00:34.430 --> 00:36.430
什么叫做受控逐渐呢

00:36.430 --> 00:39.430
但他们两个是完全相反的概念

00:39.430 --> 00:43.430
这叫受控逐渐的 就是逐渐的使用者

00:43.430 --> 00:45.430
就是我使用这个逐渐的人呢

00:45.430 --> 00:48.430
就是我一个逐渐 他可能是会使用别的逐渐对吧

00:48.430 --> 00:51.430
使用某一个逐渐的人

00:51.430 --> 00:55.430
有权利 有能力

00:55.430 --> 01:04.430
完全控制 控制该逐渐的行为和内容

01:04.430 --> 01:06.430
比方说吧 一个闻闷框

01:06.430 --> 01:08.430
我用这个闻闷框逐渐的时候

01:08.430 --> 01:11.430
它里边要显示什么内容 我完全可以控制

01:11.430 --> 01:13.430
这就是一个受控逐渐

01:13.430 --> 01:16.430
受控逐渐它往往是

01:16.430 --> 01:20.430
不是说一定 往往是没有自己的状态

01:21.430 --> 01:29.430
通常情况下 受控逐渐往往没有自身的状态

01:29.430 --> 01:37.430
其内容完全受到属性的控制

01:37.430 --> 01:39.430
你可以把它理解为就是个寒暑逐渐

01:39.430 --> 01:41.430
寒暑逐渐是不是没有状态

01:41.430 --> 01:43.430
对吧 它的所有的显色东西

01:43.430 --> 01:45.430
就全是由属性来决定的

01:45.430 --> 01:47.430
那么属性是谁提供的

01:47.430 --> 01:49.430
是不是使用这个逐渐的人来提供的

01:49.430 --> 01:51.430
使用这个逐渐的人给它提供啥

01:51.430 --> 01:52.430
它就显示它

01:52.430 --> 01:53.430
这就是个受控逐渐

01:53.430 --> 01:55.430
外面的人可以控制它

01:55.430 --> 01:57.430
通常情况下不是说一定的

01:57.430 --> 02:01.740
然后这个非受控逐渐的

02:01.740 --> 02:03.740
刚好是相反的

02:03.740 --> 02:08.740
就是逐渐的使用者没有能力

02:08.740 --> 02:13.740
控制该逐渐的行为和内容

02:13.740 --> 02:19.740
逐渐的行为和内容完全自行控制

02:19.740 --> 02:21.740
它自己控制自己的内容

02:21.740 --> 02:23.740
自己控制自己里面的行为

02:23.740 --> 02:25.740
这是非受控逐渐

02:25.740 --> 02:26.740
那么通常情况下

02:26.740 --> 02:28.740
非受控逐渐里面它往往是有状态

02:28.740 --> 02:31.740
而几乎是没有给你提供属性

02:31.740 --> 02:34.740
然后没有办法让你用

02:34.740 --> 02:36.740
这是这两种组建形态

02:36.740 --> 02:39.740
而表单组建的

02:39.740 --> 02:41.740
就是什么文本框

02:41.740 --> 02:43.740
单选框 多选框

02:43.740 --> 02:45.740
下来列表 多行文本框

02:45.740 --> 02:46.740
像这些东西

02:46.740 --> 02:47.740
这是表单组建

02:47.740 --> 02:51.740
表单组建它有两种组建的叠加形式

02:51.740 --> 02:53.740
就是它既可以是受控组建

02:53.740 --> 02:55.740
又可以是非受控组建

02:55.740 --> 02:58.740
它是给你进行的处理过的

02:58.740 --> 03:00.740
所以咱们使用表单元素的时候

03:00.740 --> 03:03.740
大家要小心一点 要注意一下

03:03.740 --> 03:06.740
就说表单元素

03:06.740 --> 03:08.740
表单组建

03:08.740 --> 03:12.740
默认情况下是受控组建

03:12.740 --> 03:14.740
是非受控组建

03:14.740 --> 03:16.740
它自己有自己的状态

03:16.740 --> 03:21.740
就是表单组建默认情况下的例子

03:21.740 --> 03:23.740
比方说咱们来举些例子

03:23.740 --> 03:25.740
在这里边我们建立

03:25.740 --> 03:27.740
也别在这里边了

03:27.740 --> 03:28.740
就在app里边

03:28.740 --> 03:31.740
在这里边我们写这么一个input元素

03:31.740 --> 03:32.740
input元素

03:32.740 --> 03:34.740
这是不是个表单元素

03:34.740 --> 03:36.740
这就是一个表单组建

03:36.740 --> 03:37.740
然后我们啥都不干

03:37.740 --> 03:38.740
你看一下吧

03:38.740 --> 03:40.740
你看一下这个现象

03:40.740 --> 03:42.740
这里边能不能输入文字

03:42.740 --> 03:45.740
那这些文字我这里能得到吗

03:45.740 --> 03:48.740
是不是拿不到这些文字

03:48.740 --> 03:49.740
就拿不到这些文字

03:49.740 --> 03:51.740
咱们把它写成一个内组建

03:51.740 --> 03:52.740
RCC

03:52.740 --> 03:54.740
把它写成内组建得了

03:54.740 --> 03:57.740
因为我们为了一会演示方便

03:57.740 --> 04:02.660
保存一下

04:02.660 --> 04:04.660
你看一下我们这里可以写东西

04:04.660 --> 04:06.660
你看这里边显示的内容

04:06.660 --> 04:08.660
是不是完全有这个input元素

04:08.660 --> 04:10.660
自行决定的

04:10.660 --> 04:12.660
它自行控制的

04:12.660 --> 04:14.660
我这里是不是没有办法控制它

04:14.660 --> 04:15.660
对不对 没有办法控制它

04:15.660 --> 04:16.660
那么这个时候

04:16.660 --> 04:18.660
它就是一个非受控组建

04:18.660 --> 04:20.660
默认情况下

04:20.660 --> 04:23.660
情况下

04:23.660 --> 04:27.660
它是一个非受控组建

04:27.660 --> 04:29.660
这是默认情况下

04:29.660 --> 04:31.660
那么怎么把它变成一个受控组建

04:31.660 --> 04:33.660
因为它如果是一个非受控组建的话

04:33.660 --> 04:35.660
会显得有些麻烦

04:35.660 --> 04:37.660
因为当时我肯定要获取

04:37.660 --> 04:38.660
这个里边的内容对吧

04:38.660 --> 04:39.660
能不能获取呢

04:39.660 --> 04:40.660
其实以后我们学习了

04:40.660 --> 04:41.660
更多的知识过程了

04:41.660 --> 04:43.660
因为发现还是有办法获取的

04:43.660 --> 04:45.660
只是比较麻烦一点

04:45.660 --> 04:47.660
更多的时候我们希望这个玩意

04:47.660 --> 04:49.660
它直接就是一个受控组建

04:49.660 --> 04:51.660
它里边显示什么东西

04:51.660 --> 04:53.660
我完全可以控制

04:53.660 --> 04:55.660
怎么来控制

04:55.660 --> 04:56.660
可以通过我这个组建

04:56.660 --> 04:58.660
就是组建的使用者

04:58.660 --> 05:00.660
他自身的状态来进行控制

05:00.660 --> 05:02.660
那么怎么把它变成一个受控组建

05:02.660 --> 05:04.660
非常非常简单

05:04.660 --> 05:06.660
默认情况下是非受控组建

05:06.660 --> 05:09.660
一旦将

05:09.660 --> 05:12.660
设置了表单组建的

05:12.660 --> 05:14.660
Value属性

05:14.660 --> 05:18.660
则其变为受控组建

05:18.660 --> 05:20.660
变成了受控组建

05:20.660 --> 05:22.660
Value是什么

05:22.660 --> 05:24.660
就是表达了值对不对

05:24.660 --> 05:27.660
看着咱们这里写这么一个东西

05:27.660 --> 05:28.660
写一个状态

05:28.660 --> 05:30.660
不用写状态

05:30.660 --> 05:32.660
先别写状态

05:32.660 --> 05:34.660
我们直接来Input

05:34.660 --> 05:36.660
给它写上一个Value值

05:36.660 --> 05:37.660
就一个闻闷框

05:37.660 --> 05:38.660
123

05:38.660 --> 05:39.660
看一下

05:39.660 --> 05:40.660
保存看一下

05:40.660 --> 05:41.660
那这里是123

05:41.660 --> 05:42.660
看到没

05:42.660 --> 05:44.660
这个属性哪来的

05:44.660 --> 05:45.660
是不是我给它的

05:45.660 --> 05:47.660
是不是我可以控制它里面的东西

05:47.660 --> 05:48.660
就这么简单

05:48.660 --> 05:50.660
没有什么复杂的

05:50.660 --> 05:51.660
一切都非常非常自然

05:51.660 --> 05:53.660
但是接着大家再看一下

05:53.660 --> 05:54.660
往往这里边写东西

05:54.660 --> 05:55.660
你看写不进去了

05:55.660 --> 05:57.660
为什么写不进去了

05:57.660 --> 05:58.660
因为它受控了

05:58.660 --> 06:00.660
什么叫受控

06:00.660 --> 06:02.660
被这句代码所控制

06:02.660 --> 06:03.660
这个代码里边

06:03.660 --> 06:05.660
它给它一个Value值

06:05.660 --> 06:06.660
这个Value值

06:06.660 --> 06:07.660
那就是123

06:07.660 --> 06:08.660
那它就是123

06:08.660 --> 06:09.660
永远都是123

06:09.660 --> 06:11.660
那如果它要改变怎么办

06:11.660 --> 06:13.660
接下来再看

06:13.660 --> 06:14.660
检查

06:14.660 --> 06:15.660
它这里包了一个

06:15.660 --> 06:16.660
也不算错误

06:16.660 --> 06:17.660
是一个警告

06:17.660 --> 06:18.660
它说

06:19.660 --> 06:22.660
你既然提供了一个Value属性

06:22.660 --> 06:23.660
给了一个表单

06:23.660 --> 06:24.660
表单域

06:24.660 --> 06:26.660
给了一个表单组建

06:26.660 --> 06:27.660
那么它就变成那个

06:27.660 --> 06:28.660
受控组建了

06:28.660 --> 06:29.660
但是

06:29.660 --> 06:31.660
你却没有给它另外一个

06:31.660 --> 06:32.660
事件

06:32.660 --> 06:33.660
叫做Unchanted

06:33.660 --> 06:34.660
Unchanted事件

06:34.660 --> 06:36.660
Unchanted是

06:36.660 --> 06:38.660
表单组建里边的通用事件

06:38.660 --> 06:39.660
就是说

06:39.660 --> 06:41.660
表单里边变化的时候

06:41.660 --> 06:42.660
它干什么事情

06:42.660 --> 06:44.660
你没有给它提供这么一个事件处理

06:44.660 --> 06:47.660
所以说它会导致一个结果就是

06:47.660 --> 06:48.660
这个表单里边

06:48.660 --> 06:50.660
东西是无法变化的

06:50.660 --> 06:51.660
是无法变化的

06:51.660 --> 06:52.660
它说

06:52.660 --> 06:53.660
如果你没有提供这个属性

06:53.660 --> 06:55.660
没有提供这个事件的话

06:55.660 --> 06:56.660
它的结果是什么呢

06:56.660 --> 06:58.660
结果Zis will render

06:58.660 --> 07:00.660
结果它会渲染出一个什么

07:00.660 --> 07:02.660
止毒的表单语

07:02.660 --> 07:03.660
它会渲染出一个

07:03.660 --> 07:04.660
止毒的表单语

07:04.660 --> 07:05.660
那么我们看一下

07:05.660 --> 07:06.660
是不是一个止毒的呢

07:06.660 --> 07:07.660
看一下这个Input

07:07.660 --> 07:08.660
它并不是一个止毒的

07:08.660 --> 07:10.660
它并没有加上read only

07:10.660 --> 07:11.660
对吧

07:11.660 --> 07:12.660
并没有加上

07:12.660 --> 07:13.660
但是呢

07:13.660 --> 07:14.660
实际上表现出来的效果呢

07:14.660 --> 07:15.660
它就是止毒的

07:15.660 --> 07:17.660
你只能看

07:17.660 --> 07:18.660
你不能改

07:18.660 --> 07:19.660
怎么样都改不了

07:19.660 --> 07:20.660
为什么

07:20.660 --> 07:21.660
因为我把它写死了

07:21.660 --> 07:22.660
它的字

07:22.660 --> 07:23.660
你看这意思吧

07:23.660 --> 07:24.660
我把它写死了

07:24.660 --> 07:27.660
你变成那个止毒的表单语了

07:27.660 --> 07:28.660
但是呢

07:28.660 --> 07:29.660
它说

07:29.660 --> 07:30.660
它就觉得不太对劲

07:30.660 --> 07:31.660
如果你要做一个

07:31.660 --> 07:32.660
止毒的表单语

07:32.660 --> 07:34.660
那你为什么不加上read only呢

07:34.660 --> 07:35.660
加上read only就行了

07:35.660 --> 07:36.660
它就变成一个

07:36.660 --> 07:37.660
止毒的表单语

07:37.660 --> 07:38.660
你看现在就不报错了

07:38.660 --> 07:39.660
对吧

07:39.660 --> 07:40.660
就没有报警告了

07:40.660 --> 07:41.660
你加上这个东西

07:41.660 --> 07:43.660
就表示我确实要加

07:43.660 --> 07:44.660
我确实就是要

07:44.660 --> 07:45.660
做一个止毒的表单语

07:45.660 --> 07:46.660
那就没问题了

07:46.660 --> 07:48.660
但是你又没有加这个

07:48.660 --> 07:49.660
它可能它就认为呢

07:49.660 --> 07:51.660
你可能自己写单码的时候

07:51.660 --> 07:52.660
忽略了

07:52.660 --> 07:53.660
忽略了这个东西

07:53.660 --> 07:55.660
所以说它就报了一个警告

07:55.660 --> 07:56.660
然后它继续说

07:56.660 --> 07:57.660
它说

07:57.660 --> 07:58.660
如果呢

07:58.660 --> 07:59.660
这个表单语啊

07:59.660 --> 08:01.660
就是这个表单主见的

08:01.660 --> 08:04.660
它是可以变化的

08:05.660 --> 08:06.660
另外一个单词叫做

08:09.660 --> 08:10.660
如果这个表单语呢

08:10.660 --> 08:12.660
确实是可以变化的

08:12.660 --> 08:13.660
那么请你不要再使用

08:18.660 --> 08:19.660
就使用这个

08:19.660 --> 08:20.660
这个属性

08:20.660 --> 08:21.660
就说它默认的值是什么

08:21.660 --> 08:22.660
默认的值是123

08:22.660 --> 08:23.660
这样子没问题

08:23.660 --> 08:24.660
那之后可以改

08:24.660 --> 08:26.660
那么现在的表单主见

08:26.660 --> 08:27.660
是不是还是一个

08:27.660 --> 08:28.660
非收控主见

08:28.660 --> 08:29.660
对吧

08:29.660 --> 08:30.660
我不能控制它

08:30.660 --> 08:31.660
我只能控制它的初始值

08:31.660 --> 08:32.660
那今后的值呢

08:32.660 --> 08:35.660
我是没法把它完全控制的

08:36.660 --> 08:37.660
那么再写回去

08:37.660 --> 08:39.660
写回去它又要报这个警告

08:39.660 --> 08:40.660
说什么意思呢

08:40.660 --> 08:41.660
我们再来连起来读一次

08:41.660 --> 08:44.660
就说你把它变成了一个收控主见

08:44.660 --> 08:45.660
但是呢又没有给它加上

08:45.660 --> 08:46.660
rid only

08:46.660 --> 08:47.660
所以说你的可能

08:47.660 --> 08:48.660
你可能的意思呢说

08:48.660 --> 08:49.660
它不是一个制度的

08:49.660 --> 08:50.660
它可以改

08:50.660 --> 08:51.660
但是呢你又没有加上

08:51.660 --> 08:52.660
这个世界

08:52.660 --> 08:53.660
它有部分没有办法改

08:53.660 --> 08:55.660
因为你把它写死了

08:55.660 --> 08:57.660
说了半天

08:57.660 --> 08:58.660
怎么办了

08:58.660 --> 08:59.660
现在个问题

08:59.660 --> 09:00.660
怎么办了

09:00.660 --> 09:01.660
你看完我就这样办呗

09:01.660 --> 09:02.660
我写个状态

09:03.660 --> 09:04.660
你们有无忧的知识的话

09:04.660 --> 09:05.660
那就很好理解了

09:05.660 --> 09:06.660
对吧

09:07.660 --> 09:08.660
无忧里面表单主见

09:08.660 --> 09:09.660
是不是也得有个相应的

09:09.660 --> 09:11.660
数据对应上去

09:11.660 --> 09:12.660
对吧

09:14.660 --> 09:15.660
这里呢

09:15.660 --> 09:16.660
比方说啊

09:16.660 --> 09:17.660
我们就给它写个

09:18.660 --> 09:19.660
默认值呢

09:19.660 --> 09:20.660
就是123

09:20.660 --> 09:21.660
好

09:21.660 --> 09:22.660
我们这里写它呢

09:22.660 --> 09:23.660
这里来自于

09:25.660 --> 09:27.660
来自于这个

09:28.660 --> 09:29.660
好

09:29.660 --> 09:30.660
然后再加上一个事件

09:30.660 --> 09:31.660
当然现在还是一样的情况

09:31.660 --> 09:33.660
还是一样的错误

09:33.660 --> 09:34.660
因为它变化不了

09:34.660 --> 09:36.660
因为这个State没法变化

09:36.660 --> 09:37.660
那么写在State过程

09:37.660 --> 09:39.660
State是不是有机会变化

09:39.660 --> 09:40.660
给它注册这个事件

09:40.660 --> 09:41.660
Unchanged

09:41.660 --> 09:42.660
不是Uninput

09:42.660 --> 09:43.660
是Unchanged

09:44.660 --> 09:45.660
它把统一成这个事件了

09:46.660 --> 09:47.660
在这个事件里边

09:47.660 --> 09:48.660
这个事件有一个参数啊

09:49.660 --> 09:50.660
参数是什么呢

09:50.660 --> 09:51.660
这个参数就是

09:54.220 --> 09:55.220
我们之前说过

09:55.220 --> 09:56.220
这个事件参数

09:56.220 --> 09:57.220
无非就是E对不对

09:57.220 --> 09:58.220
E

09:59.220 --> 10:01.220
E作为事件参数

10:01.220 --> 10:02.220
就是说这个

10:02.220 --> 10:04.220
事件参数对象

10:04.220 --> 10:05.220
那么我们可以通过

10:05.220 --> 10:06.220
这个E点什么

10:06.220 --> 10:07.220
Target点Value

10:07.220 --> 10:08.220
是不是可以获取

10:08.220 --> 10:09.220
这个表单的数据

10:09.220 --> 10:10.220
对吧

10:10.220 --> 10:11.220
当我们改变的时候

10:11.220 --> 10:12.220
获取这个表单数据

10:12.220 --> 10:13.220
然后把这个表单数据

10:13.220 --> 10:15.220
是不是重新设置状态

10:15.220 --> 10:16.220
OK this

10:16.220 --> 10:17.220
State

10:19.220 --> 10:20.220
等于这个

10:20.220 --> 10:21.220
对吧

10:21.220 --> 10:22.220
你这样子一看

10:22.220 --> 10:23.220
我们一改变

10:23.220 --> 10:24.220
它里边的东西

10:24.220 --> 10:25.220
它是不是重新

10:25.220 --> 10:26.220
给它状态设置的

10:26.220 --> 10:27.220
一重新设置状态

10:27.220 --> 10:28.220
是不是要重新渲染

10:28.220 --> 10:29.220
一重新渲染

10:29.220 --> 10:30.220
是不是把新的状态

10:30.220 --> 10:31.220
一副字给它了

10:31.220 --> 10:32.220
对不对

10:32.220 --> 10:34.220
形成这么一种逻辑结构

10:34.220 --> 10:35.220
于是这个表单

10:35.220 --> 10:36.220
它既能改变

10:36.220 --> 10:37.220
而且它里边的东西

10:37.220 --> 10:39.220
我们可以完全的控制

10:39.220 --> 10:40.220
控制它

10:40.220 --> 10:42.220
你看一下

10:42.220 --> 10:44.220
是不是完全可以控制

10:44.220 --> 10:45.220
并且我们将来

10:45.220 --> 10:46.220
要得到这个数据

10:46.220 --> 10:47.220
是不是非常容易

10:47.220 --> 10:49.220
比方说下面一个button

10:49.220 --> 10:50.220
点击

10:50.220 --> 10:53.220
获取文本框的值

10:53.220 --> 10:54.220
怎么来获取

10:54.220 --> 10:55.220
看着

10:55.220 --> 10:57.220
unclick

10:57.220 --> 10:58.220
获取文框的值

10:58.220 --> 10:59.220
怎么获取呢

11:01.220 --> 11:03.220
是不是直接

11:03.220 --> 11:04.220
把这个状态拿到

11:04.220 --> 11:05.220
就完事了

11:05.220 --> 11:06.220
就这么简单

11:06.220 --> 11:07.220
拿到这个状态

11:08.220 --> 11:09.220
对吧

11:09.220 --> 11:10.220
这个状态里边的值

11:10.220 --> 11:11.220
跟这个文本框的值

11:11.220 --> 11:12.220
真实显示的值

11:12.220 --> 11:13.220
是完全对应的

11:13.220 --> 11:14.220
因为这个文本框的值

11:14.220 --> 11:15.220
就是来自于这个值

11:15.220 --> 11:16.220
它不可能来自于

11:16.220 --> 11:17.220
别的地方

11:17.220 --> 11:18.220
它是完全受控的

11:18.220 --> 11:19.220
受到我们

11:19.220 --> 11:21.220
组建的使用者的控制

11:21.220 --> 11:22.220
保存看一下

11:22.220 --> 11:23.220
你看着

11:23.220 --> 11:24.220
我们这里随便写个

11:24.220 --> 11:25.220
获取文框的值

11:25.220 --> 11:26.220
因为状态里边

11:26.220 --> 11:27.220
就是这个值

11:27.220 --> 11:28.220
所以说你直接拿状态

11:29.220 --> 11:30.220
好

11:30.220 --> 11:31.220
那么这样子

11:31.220 --> 11:32.220
一来变成受控组建过后

11:32.220 --> 11:33.220
我们可以玩出

11:33.220 --> 11:34.220
很多很多的花样

11:34.220 --> 11:35.220
出来

11:35.220 --> 11:36.220
可以玩出很多花样

11:36.220 --> 11:37.220
出来

11:37.220 --> 11:38.220
比方说什么花样

11:38.220 --> 11:40.220
咱们做这么一个组建

11:40.220 --> 11:41.220
比方说

11:41.220 --> 11:43.220
number input

11:43.220 --> 11:44.220
解释

11:44.220 --> 11:45.220
做这么一个组建

11:45.220 --> 11:46.220
这个组建

11:46.220 --> 11:48.220
它只能输入

11:48.220 --> 11:49.220
只能输入数字

11:49.220 --> 11:51.220
它只能输入数字

11:51.220 --> 11:52.220
看着

11:52.220 --> 11:53.220
我们这里

11:54.220 --> 11:55.220
写上这么一个组建

11:55.220 --> 11:56.220
把它写成一个

11:57.220 --> 11:58.220
什么组建

11:58.220 --> 11:59.220
把它写成个函数组建

11:59.220 --> 12:01.220
还是写成一个

12:01.220 --> 12:02.220
内组建

12:02.220 --> 12:03.220
它不能是函数组建

12:03.220 --> 12:05.220
把它写成内组建

12:05.220 --> 12:06.220
内组建里面

12:06.220 --> 12:07.220
就是一个文门框

12:07.220 --> 12:08.220
input tag

12:08.220 --> 12:09.220
当然

12:09.220 --> 12:10.220
你可以直接在这里写

12:10.220 --> 12:11.220
number

12:11.220 --> 12:13.220
这是atm5里面的新的元素

12:13.220 --> 12:15.220
咱们比方就text

12:15.220 --> 12:16.220
text

12:16.220 --> 12:17.220
它这里面有个状态

12:17.220 --> 12:18.220
有个状态

12:19.220 --> 12:20.220
stat

12:21.220 --> 12:22.220
举个例子

12:22.220 --> 12:23.220
var

12:23.220 --> 12:25.220
是一个控制不串

12:26.220 --> 12:27.220
然后这里面

12:29.220 --> 12:30.220
写上

12:30.220 --> 12:31.220
value

12:31.220 --> 12:32.220
等于什么呢

12:32.220 --> 12:34.220
thisstat.var

12:34.220 --> 12:35.220
写上这个东西

12:37.220 --> 12:38.220
然后

12:41.220 --> 12:42.220
当改变的时候

12:42.220 --> 12:43.220
我干嘛呢

12:46.620 --> 12:47.620
当我改变它的时候

12:48.620 --> 12:49.620
我是不是可以把

12:49.620 --> 12:50.620
它的当前的值拿到

12:50.620 --> 12:51.620
对吧

12:51.620 --> 12:52.620
当前的值拿到

12:52.620 --> 12:54.620
一点talkage.value

12:54.620 --> 12:55.620
拿到

12:55.620 --> 12:56.620
好

12:56.620 --> 12:58.620
我们要去掉

12:58.620 --> 13:00.620
这个e里面的这些

13:00.620 --> 13:02.620
不是数字的东西

13:02.620 --> 13:03.620
不是数字的东西

13:03.620 --> 13:04.620
我们得把它全部去掉

13:05.620 --> 13:06.620
要替换掉

13:06.620 --> 13:08.620
这里面不是数字的东西

13:08.620 --> 13:09.620
怎么来替换呢

13:09.620 --> 13:10.620
就是var

13:10.620 --> 13:12.620
等于什么varreplace

13:12.620 --> 13:13.620
replace

13:13.620 --> 13:14.620
正的表达是嘛

13:14.620 --> 13:15.620
对不对

13:15.620 --> 13:16.620
替换掉非数字

13:16.620 --> 13:17.620
是不是斜槓

13:17.620 --> 13:18.620
大写的d

13:18.620 --> 13:19.620
对不对

13:19.620 --> 13:20.620
小写的d是数字

13:20.620 --> 13:21.620
大写的d就是非数字

13:21.620 --> 13:23.620
把非数字替换成

13:23.620 --> 13:24.620
两个空白

13:24.620 --> 13:25.620
就是空白之符

13:26.620 --> 13:27.620
对吧

13:27.620 --> 13:29.620
我们把这样子一替换

13:29.620 --> 13:30.620
这样子一替换

13:30.620 --> 13:31.620
好

13:31.620 --> 13:32.620
替换过后

13:32.620 --> 13:33.620
我们再把var

13:33.620 --> 13:34.620
重新设置状态

13:34.620 --> 13:36.620
set state

13:36.620 --> 13:37.620
var

13:37.620 --> 13:38.620
来自于var

13:38.620 --> 13:39.620
对吧

13:39.620 --> 13:41.620
当然也会直接这样写

13:41.620 --> 13:42.620
好

13:42.620 --> 13:44.620
就写成了这么一个逐渐了

13:44.620 --> 13:45.620
好

13:45.620 --> 13:46.620
咱们来试一下

13:46.620 --> 13:47.620
来试一下

13:47.620 --> 13:48.620
number input

13:48.620 --> 13:49.620
我们倒进来

13:50.620 --> 13:51.620
import

13:51.620 --> 13:52.620
number input

13:52.620 --> 13:54.620
from

13:54.620 --> 13:55.620
component

13:55.620 --> 13:56.620
number input

13:56.620 --> 13:57.620
倒进来

13:57.620 --> 13:58.620
然后来这边

13:58.620 --> 13:59.620
用一下

13:59.620 --> 14:03.920
数字调

14:03.920 --> 14:04.920
好

14:04.920 --> 14:05.920
下边

14:05.920 --> 14:06.920
用一下

14:07.920 --> 14:08.920
好

14:08.920 --> 14:09.920
看一下

14:09.920 --> 14:10.920
那这里面你看

14:10.920 --> 14:12.920
你写其他字没用

14:12.920 --> 14:13.920
没用

14:13.920 --> 14:14.920
它只能写数字

14:14.920 --> 14:15.920
只能写数字

14:15.920 --> 14:16.920
你写其他字没用的

14:16.920 --> 14:17.920
没用的

14:17.920 --> 14:18.920
只能写数字

14:18.920 --> 14:19.920
看没

14:19.920 --> 14:20.920
这就做成了一个

14:20.920 --> 14:21.920
只能输入文化的逐渐

14:21.920 --> 14:23.920
因为它非常非常的灵活

14:23.920 --> 14:24.920
我们这里呢

14:24.920 --> 14:25.920
它要能够显示什么字

14:25.920 --> 14:27.920
它全凭这个state的边的var

14:27.920 --> 14:29.920
你只要保证var的指示正确的

14:29.920 --> 14:31.920
那就没有任何问题了

14:31.920 --> 14:34.920
这就是表单组件里面的

14:34.920 --> 14:35.920
受控组件

14:35.920 --> 14:36.920
该怎么来写

14:36.920 --> 14:37.920
好

14:37.920 --> 14:38.920
行了

14:38.920 --> 14:39.920
咱们来看一下

14:39.920 --> 14:40.920
看一下这里面还有的

14:40.920 --> 14:42.920
除了文本框之外

14:42.920 --> 14:43.920
比方说

14:43.920 --> 14:44.920
还有一些常见的组件

14:44.920 --> 14:45.920
该怎么来玩

14:45.920 --> 14:46.920
一个的说吧

14:46.920 --> 14:47.920
比方说

14:48.920 --> 14:49.920
那个

14:49.920 --> 14:50.920
input

14:52.920 --> 14:53.920
input

14:53.920 --> 14:55.920
type为checkbox

14:55.920 --> 14:56.920
checkbox

14:57.920 --> 14:58.920
那么这个东西如何来

14:58.920 --> 14:59.920
变成受控组件的

14:59.920 --> 15:00.920
这个玩意

15:00.920 --> 15:02.920
怎么来变成受控组件的

15:02.920 --> 15:04.920
它要用这个

15:04.920 --> 15:06.920
它无非就是两个状态

15:06.920 --> 15:07.920
一个是选中

15:07.920 --> 15:08.920
一个是没有选中

15:08.920 --> 15:10.920
那么这点比较特殊

15:10.920 --> 15:11.920
它变成受控组件

15:11.920 --> 15:12.920
它不是设置valu制

15:12.920 --> 15:13.920
而是设置什么

15:13.920 --> 15:14.920
check制

15:15.920 --> 15:16.920
是否选中

15:16.920 --> 15:17.920
是否选中

15:17.920 --> 15:18.920
这里要说一下

15:20.920 --> 15:23.920
单选和多选框

15:23.920 --> 15:25.920
需要设置

15:25.920 --> 15:26.920
check制

15:26.920 --> 15:28.920
需要设置这个东西

15:28.920 --> 15:29.920
那么这个东西

15:29.920 --> 15:30.920
它是一个布尔属性

15:30.920 --> 15:31.920
就是可以是true

15:31.920 --> 15:33.920
也可以是force

15:33.920 --> 15:34.920
咱们这样子

15:34.920 --> 15:35.920
check制

15:35.920 --> 15:36.920
一开始

15:36.920 --> 15:37.920
把它设为true

15:37.920 --> 15:38.920
行了

15:38.920 --> 15:39.920
我们这里

15:39.920 --> 15:40.920
就给它复制

15:40.920 --> 15:43.920
复制为Zestate的check制

15:43.920 --> 15:44.920
保存

15:44.920 --> 15:45.920
看一下

15:45.920 --> 15:46.920
你看

15:46.920 --> 15:47.920
默认情况下就是选中的

15:47.920 --> 15:48.920
对吧

15:48.920 --> 15:49.920
但是它又爆出了

15:49.920 --> 15:50.920
它说的是

15:50.920 --> 15:52.920
你没有注册

15:52.920 --> 15:53.920
那么它现在是不是改变不了

15:53.920 --> 15:54.920
点不了

15:55.920 --> 15:56.920
然后让我们写上

15:56.920 --> 15:57.920
unchain

15:58.920 --> 15:59.920
一样道理

16:02.920 --> 16:03.920
我们就重新设置状态

16:03.920 --> 16:04.920
set state

16:05.920 --> 16:06.920
check制

16:06.920 --> 16:07.920
设置为什么

16:07.920 --> 16:09.920
设置为这个1.target的

16:09.920 --> 16:10.920
check制

16:10.920 --> 16:11.920
对吧

16:11.920 --> 16:12.920
这样子来设置

16:13.920 --> 16:14.920
保存

16:14.920 --> 16:15.920
你看

16:16.920 --> 16:17.920
没问题吧

16:17.920 --> 16:19.920
这变成了个受控组件了

16:19.920 --> 16:20.920
我们可以

16:20.920 --> 16:21.920
到时候可以通过状态里面

16:21.920 --> 16:22.920
就非常轻松的

16:22.920 --> 16:23.920
可以获取

16:23.920 --> 16:24.920
有没有选中

16:25.920 --> 16:26.920
这是这个

16:27.920 --> 16:28.920
再来

16:28.920 --> 16:30.920
多选框这一块的话

16:30.920 --> 16:31.920
就是

16:31.920 --> 16:33.920
这是一种最简单的控制方式

16:33.920 --> 16:35.920
但是有的时候

16:35.920 --> 16:36.920
咱们可能希望

16:37.920 --> 16:38.920
举个例子

16:40.920 --> 16:41.920
我们这里

16:41.920 --> 16:43.920
可能是这个样子的

16:45.920 --> 16:46.920
什么例子呢

16:47.920 --> 16:49.920
咱们有很多的数据

16:49.920 --> 16:51.920
就是有一个数主

16:51.920 --> 16:52.920
比方说

16:52.920 --> 16:54.920
我们这里不是这个玩意

16:54.920 --> 16:56.920
它是有个数主

16:56.920 --> 16:57.920
数主是

16:57.920 --> 16:58.920
loves

16:58.920 --> 17:00.920
表示爱好

17:00.920 --> 17:01.920
爱好

17:01.920 --> 17:02.920
什么

17:02.920 --> 17:03.920
足球

17:03.920 --> 17:05.920
足球

17:05.920 --> 17:06.920
什么

17:06.920 --> 17:08.920
篮球

17:08.920 --> 17:09.920
什么

17:09.920 --> 17:10.920
音乐

17:11.920 --> 17:14.490
然后呢

17:14.490 --> 17:15.490
是其他

17:15.490 --> 17:16.490
比方说

17:16.490 --> 17:17.490
有这么一个数主

17:17.490 --> 17:18.490
然后呢

17:18.490 --> 17:19.490
它还有一个数主叫

17:19.490 --> 17:20.490
choose

17:20.490 --> 17:21.490
choose love

17:21.490 --> 17:23.490
我们选中的爱好

17:23.490 --> 17:25.490
默认是一个空数主

17:25.490 --> 17:27.490
它有可能是这种情况

17:27.490 --> 17:29.490
我们有很多的多选框

17:29.490 --> 17:30.490
每个多选框里边

17:30.490 --> 17:31.490
有一些数据

17:31.490 --> 17:32.490
有一些数据

17:32.490 --> 17:33.490
那么这个东西

17:33.490 --> 17:34.490
该怎么来控制呢

17:35.490 --> 17:36.490
我们还要获得

17:36.490 --> 17:38.490
它选中的那些数据

17:38.490 --> 17:39.490
来 发挥想象力呗

17:39.490 --> 17:41.490
全是介石

17:41.490 --> 17:42.490
没有什么特别的

17:42.490 --> 17:43.490
没有那些

17:43.490 --> 17:44.490
那些那些新知识

17:44.490 --> 17:46.490
都是用介石去完成的

17:46.490 --> 17:47.490
来吧

17:47.490 --> 17:48.490
我们把所有的爱好

17:48.490 --> 17:50.490
是不是可以把它生成一个多选框

17:50.490 --> 17:51.490
loves

17:52.490 --> 17:54.490
this

17:54.490 --> 17:55.490
就是state

17:55.490 --> 17:56.490
map

17:57.490 --> 17:58.490
然后呢

17:59.490 --> 18:01.490
每一个

18:02.490 --> 18:03.490
loves

18:03.490 --> 18:04.490
数主里面

18:04.490 --> 18:05.490
每一项

18:05.490 --> 18:06.490
每个制服圈

18:06.490 --> 18:07.490
是不是要对应一个

18:07.490 --> 18:08.490
input元素

18:08.490 --> 18:09.490
对吧

18:09.490 --> 18:10.490
input元素

18:10.490 --> 18:11.490
就多选框

18:11.490 --> 18:12.490
7个boss

18:12.490 --> 18:13.490
7个boss

18:13.490 --> 18:14.490
当然你还可以用什么

18:14.490 --> 18:15.490
还可以给这个7个boss

18:15.490 --> 18:16.490
加上value

18:17.490 --> 18:18.490
随便吧

18:18.490 --> 18:19.490
加不加都不所谓

18:19.490 --> 18:20.490
比方说就不加吧

18:20.490 --> 18:21.490
就比方说就不加吧

18:21.490 --> 18:22.490
我们给它掏一个这个

18:22.490 --> 18:23.490
掏一个nabel

18:23.490 --> 18:25.490
掏一个nabel元素

18:25.490 --> 18:27.490
nabel元素都没有必要写这个了

18:27.490 --> 18:28.490
直接把它作为止元素

18:29.490 --> 18:32.120
放这

18:33.120 --> 18:34.120
最终我们返回

18:34.120 --> 18:35.120
得到的是一个什么

18:35.120 --> 18:36.120
得到的是一个就是

18:36.120 --> 18:37.120
多选框的数组

18:37.120 --> 18:38.120
7个boss

18:40.120 --> 18:41.120
得到这么一个数组

18:41.120 --> 18:43.120
最终我们会把这个数组放这

18:44.120 --> 18:45.120
最终把这个数组

18:46.120 --> 18:47.120
就是7个boss

18:48.120 --> 18:49.120
把数组放这

18:49.120 --> 18:50.120
把数组放这

18:51.120 --> 18:52.120
这里边

18:53.120 --> 18:54.120
再来看

18:54.120 --> 18:55.120
这个input里边

18:55.120 --> 18:56.120
我们换个行吧

18:57.120 --> 18:58.120
扩起来

18:58.120 --> 19:01.520
换个行

19:01.520 --> 19:06.460
这type

19:06.460 --> 19:10.750
好看着

19:10.750 --> 19:12.750
那么这里的文字能显示啥

19:12.750 --> 19:14.750
文字就是不是就显示这个玩意

19:14.750 --> 19:15.750
就显示个制服串

19:15.750 --> 19:16.750
我们

19:16.750 --> 19:17.750
便利这个制服串

19:17.750 --> 19:19.750
用这个制服串来进行映射

19:19.750 --> 19:20.750
那么每一个制服串

19:20.750 --> 19:21.750
是不是这个东西

19:21.750 --> 19:22.750
我们把制服串放这

19:22.750 --> 19:23.750
制服串放这

19:24.750 --> 19:25.750
看没

19:25.750 --> 19:26.750
就非常灵活的处理就行了

19:26.750 --> 19:28.750
然后这个input里边

19:28.750 --> 19:30.750
它除了有这个类型之外

19:30.750 --> 19:31.750
还有什么要受空

19:31.750 --> 19:32.750
对不对

19:32.750 --> 19:33.750
受空我们刚才是不是说了

19:33.750 --> 19:34.750
应该设置什么check

19:34.750 --> 19:37.750
他是否应该选中的关键看什么

19:37.750 --> 19:38.750
那现在看

19:38.750 --> 19:40.750
我们这个状态里边

19:40.750 --> 19:41.750
只有这些东西

19:41.750 --> 19:42.750
关键看什么

19:42.750 --> 19:43.750
他能不能选中关键看什么

19:44.750 --> 19:46.750
看一下我们选中的这个状态里边

19:47.750 --> 19:48.750
比方说我们选中里边

19:48.750 --> 19:49.750
有一个篮球

19:50.750 --> 19:52.750
那么看一下这个数组里边

19:52.750 --> 19:53.750
比方说还有一个音乐

19:54.750 --> 19:56.750
比方说这个数组里边

19:56.750 --> 19:57.750
包含了这个文本

19:57.750 --> 19:59.750
是不是可以选中

19:59.750 --> 20:00.750
对不对

20:00.750 --> 20:01.750
就灵活处理就行了

20:01.750 --> 20:02.750
我不能说

20:02.750 --> 20:03.750
把些西字墨鞋

20:03.750 --> 20:04.750
全部给你们讲

20:05.750 --> 20:07.750
讲的话你就完全

20:07.750 --> 20:09.750
变成一个就是什么

20:09.750 --> 20:10.750
变成个音乐了

20:10.750 --> 20:11.750
变成个聚音了

20:11.750 --> 20:13.750
你只能张嘴吃难

20:13.750 --> 20:15.750
什么都往你嘴里面喂

20:15.750 --> 20:16.750
脚碎了往你嘴里面喂

20:16.750 --> 20:17.750
我就是提

20:17.750 --> 20:18.750
给大家提一个思路

20:18.750 --> 20:20.750
那么遇到类似的情况

20:20.750 --> 20:21.750
你们都可以这样子处理的

20:21.750 --> 20:23.750
那它是否选中

20:23.750 --> 20:24.750
是否选中我们应该

20:24.750 --> 20:25.750
怎么来处理呢

20:25.750 --> 20:26.750
是否选中

20:26.750 --> 20:27.750
是否选中的话

20:27.750 --> 20:29.750
我们应该处理的方式就是

20:29.750 --> 20:31.750
往这个切个词里边

20:31.750 --> 20:33.750
是不是要加一个

20:33.750 --> 20:35.750
判断对吧

20:35.750 --> 20:36.750
判断什么

20:36.750 --> 20:37.750
判断Z

20:38.750 --> 20:39.750
Z

20:39.750 --> 20:40.750
Stats

20:40.750 --> 20:41.750
Choose

20:41.750 --> 20:42.750
Love

20:42.750 --> 20:44.750
我们选中的爱好里边

20:44.750 --> 20:45.750
是不是include

20:45.750 --> 20:47.750
是不是包含这个文本

20:47.750 --> 20:49.750
如果包含是不是要选中

20:49.750 --> 20:50.750
对不对

20:50.750 --> 20:52.750
我们就这样子来控制

20:52.750 --> 20:54.750
然后再注册Unchain几事件

20:54.750 --> 20:56.750
当我们改变的时候

20:58.750 --> 21:00.750
当我们改变它的值的时候

21:00.750 --> 21:01.750
干嘛呢

21:01.750 --> 21:03.750
是不是要重新设置这个玩意儿

21:03.750 --> 21:04.750
对不对

21:04.750 --> 21:05.750
要重新设置这个玩意儿

21:05.750 --> 21:07.750
怎么来设置呢

21:07.750 --> 21:08.750
怎么来设置这个玩意儿

21:08.750 --> 21:10.750
如果它改变过后

21:10.750 --> 21:11.750
你是把它选

21:11.750 --> 21:12.750
它的选中的话

21:12.750 --> 21:13.750
是没有

21:13.750 --> 21:15.750
比方说判断一下吧

21:15.750 --> 21:17.750
如果EtherTockets

21:17.750 --> 21:18.750
切个词

21:18.750 --> 21:19.750
它如果没有选中

21:19.750 --> 21:21.750
是不是要把它的文本取消

21:21.750 --> 21:22.750
对不对

21:22.750 --> 21:23.750
它如果没有选中

21:23.750 --> 21:25.750
要把这个文本取消

21:25.750 --> 21:27.750
从这个书组里边移除掉

21:27.750 --> 21:28.750
那就移除呗

21:28.750 --> 21:29.750
怎么移除

21:29.750 --> 21:30.750
Z

21:30.750 --> 21:31.750
Stats

21:31.750 --> 21:32.750
Stats

21:33.750 --> 21:34.750
设置状态

21:34.750 --> 21:35.750
状态里边的什么

21:35.750 --> 21:36.750
Choose

21:36.750 --> 21:37.750
Love

21:37.750 --> 21:39.750
是不是得到一个新的书组

21:39.750 --> 21:40.750
这个书组是不是要把

21:40.750 --> 21:42.750
之前的那一项移除掉

21:42.750 --> 21:44.750
关键是怎么移除呢

21:44.750 --> 21:45.750
想一想

21:45.750 --> 21:46.750
怎么把这个

21:46.750 --> 21:48.750
当前的这个文本

21:48.750 --> 21:49.750
把它从这里边移除掉

21:49.750 --> 21:50.750
怎么移除

21:50.750 --> 21:51.750
想一想呗

21:51.750 --> 21:53.750
就这个东西跟5u

21:53.750 --> 21:54.750
确实要麻烦一点

21:54.750 --> 21:55.750
因为reaction

21:55.750 --> 21:56.750
它没有给你封装

21:56.750 --> 21:57.750
5u是给你封装好了

21:57.750 --> 21:58.750
你可以直接用

21:58.750 --> 21:59.750
如果你要封装的话

21:59.750 --> 22:01.750
你可以自己去封装一个

22:01.750 --> 22:02.750
自己去封装一个

22:02.750 --> 22:03.750
OK

22:03.750 --> 22:04.750
那这里呢

22:04.750 --> 22:05.750
该怎么来移除这个东西呢

22:05.750 --> 22:07.750
这里我们是不是可以利用

22:07.750 --> 22:08.750
Filter

22:08.750 --> 22:09.750
对不对

22:09.750 --> 22:10.750
Z

22:10.750 --> 22:11.750
Stats

22:12.750 --> 22:13.750
Choose

22:13.750 --> 22:14.750
Love

22:14.750 --> 22:15.750
Filter

22:15.750 --> 22:16.750
对吧

22:16.750 --> 22:17.750
选中啥呢

22:17.750 --> 22:19.750
就是只保留那些

22:20.750 --> 22:21.750
这里

22:21.750 --> 22:22.750
L

22:22.750 --> 22:24.750
只保留那些L

22:24.750 --> 22:26.750
它不等于

22:26.750 --> 22:28.750
因为它没有选中

22:28.750 --> 22:29.750
没有选中

22:29.750 --> 22:30.750
没有选中的话

22:30.750 --> 22:31.750
要是不是要把这一项

22:31.750 --> 22:32.750
比方说篮球这一项

22:32.750 --> 22:33.750
要给它移除掉

22:33.750 --> 22:35.750
那么不等于什么IT

22:35.750 --> 22:36.750
就是It

22:36.750 --> 22:37.750
Item

22:37.750 --> 22:38.750
不等于这个的

22:38.750 --> 22:40.750
只保留这个不等于这个的

22:40.750 --> 22:41.750
等于这个的

22:41.750 --> 22:42.750
是不是把移除掉了

22:42.750 --> 22:43.750
对不对

22:43.750 --> 22:44.750
我们重新给它数字复制

22:44.750 --> 22:46.750
千万不要去用这种方式

22:46.750 --> 22:48.750
什么Choose,Love

22:48.750 --> 22:50.750
什么就是

22:50.750 --> 22:51.750
Splice

22:51.750 --> 22:52.750
千万不要用这个

22:52.750 --> 22:53.750
因为这个东西

22:53.750 --> 22:54.750
它会改变元数组

22:54.750 --> 22:55.750
它会把这个数组改变

22:55.750 --> 22:56.750
我们说过

22:56.750 --> 22:57.750
Stats里边东西

22:57.750 --> 22:58.750
不要变化

22:58.750 --> 22:59.750
不要变化

22:59.750 --> 23:00.750
重新给它复制就行了

23:00.750 --> 23:02.750
最好给它一个新的东西

23:02.750 --> 23:03.750
对吧

23:03.750 --> 23:05.750
我们可以用Filter来实现

23:05.750 --> 23:06.750
没问题吧

23:06.750 --> 23:07.750
好

23:07.750 --> 23:08.750
Ls

23:08.750 --> 23:09.750
Ls是什么

23:09.750 --> 23:10.750
Ls

23:10.750 --> 23:11.750
就是说

23:11.750 --> 23:12.750
它里边呢

23:12.750 --> 23:13.750
它是

23:13.750 --> 23:14.750
我刚才是

23:14.750 --> 23:15.750
就是选中

23:15.750 --> 23:16.750
这才是没有选中

23:16.750 --> 23:17.750
这才是没有选中

23:17.750 --> 23:18.750
好

23:18.750 --> 23:19.750
如果是选中的情况下

23:19.750 --> 23:21.750
是不是往它里边加一下

23:21.750 --> 23:22.750
对不对

23:22.750 --> 23:23.750
往里边加一下就完事了

23:23.750 --> 23:24.750
Ls

23:24.750 --> 23:25.750
Stats

23:25.750 --> 23:26.750
往里边加一下

23:26.750 --> 23:27.750
Choose,Love

23:27.750 --> 23:28.750
数组

23:28.750 --> 23:29.750
数组里边呢

23:29.750 --> 23:30.750
我们写什么

23:30.750 --> 23:31.750
把之前那个展开

23:31.750 --> 23:32.750
对不对

23:32.750 --> 23:33.750
Ls

23:33.750 --> 23:34.750
Stats

23:34.750 --> 23:35.750
Choose,Love

23:35.750 --> 23:36.750
展开

23:36.750 --> 23:37.750
然后给它加一下

23:37.750 --> 23:38.750
加一下什么

23:38.750 --> 23:39.750
Item

23:39.750 --> 23:41.750
再加一下就完事了

23:41.750 --> 23:42.750
于是

23:42.750 --> 23:43.750
每一个

23:43.750 --> 23:44.750
每一个就是

23:44.750 --> 23:45.750
字幕创了

23:45.750 --> 23:46.750
它对应这么一个结构

23:46.750 --> 23:48.750
这么一个结构

23:48.750 --> 23:49.750
好

23:49.750 --> 23:50.750
咱们来看一下吧

23:50.750 --> 23:51.750
保存

23:51.750 --> 23:52.750
好

23:52.750 --> 23:53.750
首先看到这里呢

23:53.750 --> 23:54.750
没有key

23:54.750 --> 23:55.750
行吧

23:55.750 --> 23:56.750
给它加个keyz

23:56.750 --> 23:57.750
加个keyz

23:57.750 --> 23:59.750
key的话

23:59.750 --> 24:00.750
key的话

24:00.750 --> 24:01.750
我给它个啥呢

24:01.750 --> 24:04.750
就给它这个文本吧

24:04.750 --> 24:05.750
给它加个keyz

24:05.750 --> 24:07.750
反正也是唯一的

24:07.750 --> 24:08.750
你看

24:08.750 --> 24:09.750
是不是默认这两个选中了

24:09.750 --> 24:10.750
对吧

24:10.750 --> 24:11.750
接下来

24:11.750 --> 24:14.750
来获取我们选中的项

24:14.750 --> 24:16.750
获取选中的

24:16.750 --> 24:17.750
值

24:17.750 --> 24:19.750
哪些被选中了

24:19.750 --> 24:23.580
unclick

24:23.580 --> 24:24.580
获取选中的值呢

24:24.580 --> 24:26.580
我们这里就直接输出

24:26.580 --> 24:27.580
输出什么呢

24:27.580 --> 24:29.580
Zs,Stats,Choose,Love

24:29.580 --> 24:30.580
我们选中的

24:30.580 --> 24:31.580
选中的结果

24:31.580 --> 24:33.580
保存看一下

24:33.580 --> 24:34.580
目前获取

24:34.580 --> 24:35.580
你看是不是获取这两个

24:35.580 --> 24:36.580
然后这个勾选

24:36.580 --> 24:37.580
然后选个其他

24:37.580 --> 24:38.580
再获取

24:38.580 --> 24:39.580
你看是不是这个

24:39.580 --> 24:40.580
这个勾上

24:40.580 --> 24:41.580
这个减缺

24:41.580 --> 24:42.580
全部都取消掉

24:42.580 --> 24:44.580
你看是不是空输主

24:44.580 --> 24:45.580
对吧

24:45.580 --> 24:46.580
是不是也是对应的

24:46.580 --> 24:48.580
用文状态是完全对应的

24:48.580 --> 24:50.580
这是多选框

24:50.580 --> 24:52.580
那么单选框的话

24:52.580 --> 24:55.580
是不是完全类似的道理

24:55.580 --> 24:56.580
对不对

24:56.580 --> 24:58.580
单选框是完全类似的道理

24:58.580 --> 25:00.580
我这里就不多扯当然

25:00.580 --> 25:01.580
好

25:01.580 --> 25:03.580
还有什么这个下达列表

25:03.580 --> 25:04.580
下达列表

25:04.580 --> 25:06.580
这个主持点

25:06.580 --> 25:08.580
还有下达列表

25:08.580 --> 25:11.580
下达列表的话

25:11.580 --> 25:12.580
是一样的道理

25:12.580 --> 25:14.580
它也是Value

25:14.580 --> 25:15.580
比方说

25:15.580 --> 25:17.580
我们这里写个是那个字

25:17.580 --> 25:18.580
是那个字

25:18.580 --> 25:20.580
IDNAM

25:20.580 --> 25:22.580
这些东西就不要了

25:22.580 --> 25:25.580
这里边我们写上一些程式

25:25.580 --> 25:27.580
Option

25:27.580 --> 25:30.580
Value就是北京

25:30.580 --> 25:33.580
这是北京

25:33.580 --> 25:34.580
北京

25:34.580 --> 25:38.580
然后Option再写个上海

25:38.580 --> 25:40.580
上海

25:40.580 --> 25:43.580
上海

25:43.580 --> 25:44.580
就写

25:44.580 --> 25:45.580
再写个吧

25:45.580 --> 25:47.580
再写个深圳

25:47.580 --> 25:49.580
深圳

25:49.580 --> 25:51.580
深圳

25:51.580 --> 25:52.580
OK

25:52.580 --> 25:53.580
然后我们把它变成受控的

25:53.580 --> 25:54.580
希望它受控

25:54.580 --> 25:55.580
那么是不是也是

25:55.580 --> 25:56.580
在状态里边加一个

25:56.580 --> 25:57.580
加一个

25:57.580 --> 26:00.580
就是

26:00.580 --> 26:02.580
Sealwa

26:02.580 --> 26:03.580
表示默认选中

26:03.580 --> 26:04.580
北京

26:04.580 --> 26:06.580
注意跟Y6只对应

26:06.580 --> 26:07.580
OK

26:07.580 --> 26:09.580
我们这里呢

26:09.580 --> 26:10.580
得到什么

26:10.580 --> 26:12.580
Value给它设置为

26:12.580 --> 26:14.580
ZestState的

26:14.580 --> 26:16.580
Sealwa

26:16.580 --> 26:18.580
好 看一下吧

26:18.580 --> 26:20.580
看一下 保存

26:20.580 --> 26:21.580
哦 仍然报错

26:21.580 --> 26:22.580
因为现在改变不了

26:22.580 --> 26:23.580
对吧 改变不了

26:23.580 --> 26:24.580
因为它是受控的

26:24.580 --> 26:26.580
是不是也要写Unchanged

26:26.580 --> 26:28.580
对吧 Unchanged

26:28.580 --> 26:30.580
好 这里写上Unchanged

26:30.580 --> 26:33.580
然后就Zestate

26:33.580 --> 26:35.580
好 就是

26:35.580 --> 26:36.580
Sealwa

26:36.580 --> 26:37.580
设置为什么

26:37.580 --> 26:40.580
E

26:40.580 --> 26:41.580
E点

26:41.580 --> 26:42.580
Target

26:42.580 --> 26:43.580
Value

26:43.580 --> 26:44.580
对吧

26:44.580 --> 26:45.580
那个文明框是不是一样的

26:45.580 --> 26:47.580
完全一样的

26:47.580 --> 26:48.580
好 你看一下

26:48.580 --> 26:49.580
现在是不是可以选中了

26:49.580 --> 26:50.580
选中了

26:50.580 --> 26:51.580
当然你要获取的话

26:51.580 --> 26:52.580
是不是直接从这个地方拿

26:52.580 --> 26:53.580
拿就完事了

26:53.580 --> 26:55.580
还要包含什么

26:55.580 --> 26:57.580
多航文明框是一样的

26:57.580 --> 26:58.580
多航文明框的用法

26:58.580 --> 26:59.580
不要去用什么

26:59.580 --> 27:00.580
InnerTex

27:00.580 --> 27:01.580
InnerAtm

27:01.580 --> 27:02.580
不要去用这个

27:02.580 --> 27:03.580
直接用Value

27:03.580 --> 27:04.580
用法是一样的

27:04.580 --> 27:05.580
还是用Unchanged

27:05.580 --> 27:06.580
完全一样

27:06.580 --> 27:08.580
用法完全一样

27:08.580 --> 27:09.580
这就是

27:09.580 --> 27:11.580
关于在这里面

27:11.580 --> 27:13.580
如何让它是受控

27:13.580 --> 27:15.580
这里有个小技巧

27:15.580 --> 27:16.580
就是说有的时候

27:16.580 --> 27:17.580
我们的表单里边

27:17.580 --> 27:18.580
肯定是

27:18.580 --> 27:20.580
通常不止一个表单

27:20.580 --> 27:21.580
通常有很多个

27:21.580 --> 27:23.580
那每一个都这样子写

27:23.580 --> 27:24.580
是不是太麻烦了

27:24.580 --> 27:25.580
你看

27:25.580 --> 27:26.580
每一个都这样去写一遍

27:26.580 --> 27:27.580
是不是太麻烦了

27:27.580 --> 27:30.580
有没有更加简洁的方式呢

27:30.580 --> 27:32.580
如果你要一个表单

27:32.580 --> 27:33.580
一个表单里边

27:33.580 --> 27:34.580
它有很多个

27:34.580 --> 27:36.580
有很多个表单元素

27:36.580 --> 27:37.580
有没有更加简洁的方式

27:37.580 --> 27:39.580
来处理这个问题呢

27:39.580 --> 27:41.580
接下来我给大家介绍一下

27:41.580 --> 27:43.580
有一种非常非常巧妙的方式

27:43.580 --> 27:45.580
都是利用介绍的特点

27:45.580 --> 27:47.580
跟这个什么

27:47.580 --> 27:49.580
没有什么直接的关系

27:49.580 --> 27:51.580
咱们这里写个组件

27:53.580 --> 27:55.580
FormTest

27:55.580 --> 27:56.580
这个表单里边

27:56.580 --> 27:58.580
有很多个表单组件

27:58.580 --> 28:00.580
我们这里写更内组件

28:00.580 --> 28:02.580
RCC

28:03.580 --> 28:04.580
跟内组件

28:04.580 --> 28:06.580
这里面我们写上个State

28:11.580 --> 28:12.580
接下来

28:12.580 --> 28:14.580
我要往这里边有个表单

28:14.580 --> 28:16.580
这个表单里边有很多项

28:16.580 --> 28:17.580
有很多的表单项

28:17.580 --> 28:19.580
这里就不管样式了

28:19.580 --> 28:20.580
就不管样式了

28:20.580 --> 28:21.580
我就随便写了

28:21.580 --> 28:22.580
我把这个复制一下

28:22.580 --> 28:23.580
然后这边

28:23.580 --> 28:25.580
把这些乱七八糟的删掉

28:25.580 --> 28:31.860
这些乱七八糟的删掉

28:31.860 --> 28:33.860
这里面只需要去把导入进来

28:33.860 --> 28:35.860
导入进来

28:36.860 --> 28:38.860
FormTest

28:42.370 --> 28:43.370
Component

28:43.370 --> 28:45.370
FormTest

28:45.370 --> 28:47.370
这个组件发挥

28:47.370 --> 28:50.770
就完了

28:50.770 --> 28:52.770
我们在这里边写

28:52.770 --> 28:54.770
FormTest里边

28:54.770 --> 28:55.770
这里边

28:55.770 --> 28:56.770
状态里边

28:56.770 --> 28:58.770
咱们给它写上一些出字

28:58.770 --> 28:59.770
就是我们这里

28:59.770 --> 29:00.770
整个表单里边

29:00.770 --> 29:02.770
有些默认值

29:02.770 --> 29:03.770
一开始是什么值

29:03.770 --> 29:04.770
我们是不是把写上

29:04.770 --> 29:05.770
比方说

29:05.770 --> 29:06.770
咱们表单里边

29:06.770 --> 29:07.770
有什么账号

29:07.770 --> 29:08.770
login id

29:08.770 --> 29:10.770
给它写上

29:10.770 --> 29:11.770
login id

29:11.770 --> 29:12.770
那就是为空

29:12.770 --> 29:14.770
然后login password

29:14.770 --> 29:15.770
密码

29:15.770 --> 29:16.770
也为空

29:16.770 --> 29:17.770
然后

29:17.770 --> 29:18.770
性别

29:18.770 --> 29:19.770
性别

29:19.770 --> 29:20.770
就是

29:20.770 --> 29:22.770
6

29:22.770 --> 29:23.770
性别的话

29:23.770 --> 29:24.770
为mail

29:24.770 --> 29:25.770
为男

29:25.770 --> 29:27.770
有可能是mail

29:27.770 --> 29:28.770
有可能是female

29:28.770 --> 29:30.770
性别为男

29:30.770 --> 29:31.770
然后

29:31.770 --> 29:33.770
我们再写上什么呢

29:33.770 --> 29:34.770
再写上什么

29:34.770 --> 29:35.770
爱号

29:35.770 --> 29:37.770
那不是

29:37.770 --> 29:38.770
那不是的话

29:38.770 --> 29:39.770
是一个数字

29:39.770 --> 29:40.770
对吧

29:40.770 --> 29:41.770
爱号

29:41.770 --> 29:43.770
比方说足球

29:43.770 --> 29:45.770
我们用football

29:45.770 --> 29:47.770
什么basket

29:47.770 --> 29:49.770
kits

29:49.770 --> 29:50.770
ball

29:50.770 --> 29:52.770
然后呢

29:54.770 --> 29:55.770
我们就全用

29:55.770 --> 29:56.770
用英文吧

29:56.770 --> 29:57.770
我们再换东西

29:57.770 --> 30:00.770
然后呢是movie

30:00.770 --> 30:01.770
电影

30:01.770 --> 30:03.770
然后呢是music

30:03.770 --> 30:04.770
音乐

30:04.770 --> 30:05.770
然后呢是other

30:05.770 --> 30:06.770
其他

30:06.770 --> 30:08.770
这是我们选中的爱号

30:08.770 --> 30:09.770
选中的爱号

30:09.770 --> 30:11.770
choose

30:11.770 --> 30:13.770
choose

30:13.770 --> 30:14.770
选中的爱号

30:14.770 --> 30:15.770
接下来呢

30:15.770 --> 30:16.770
我们再来写一个

30:16.770 --> 30:18.770
就是all nerves

30:18.770 --> 30:20.770
所有的爱号

30:20.770 --> 30:21.770
就love

30:21.770 --> 30:22.770
所有的爱号

30:22.770 --> 30:23.770
所有的爱号

30:23.770 --> 30:24.770
我们换一种写法

30:24.770 --> 30:25.770
换一种写法

30:25.770 --> 30:26.770
就是这个东西呢

30:26.770 --> 30:27.770
应该是选中的value值

30:27.770 --> 30:28.770
对吧

30:28.770 --> 30:29.770
因为我们知道

30:29.770 --> 30:30.770
多选框呢

30:30.770 --> 30:31.770
它是有value值的

30:31.770 --> 30:32.770
服务器呢

30:32.770 --> 30:33.770
它可能需要的是value值

30:34.770 --> 30:35.770
所以说我们这里呢

30:35.770 --> 30:36.770
选中的value值呢

30:36.770 --> 30:37.770
把它获取到

30:37.770 --> 30:38.770
然后呢

30:38.770 --> 30:39.770
这个爱号里面呢

30:39.770 --> 30:41.770
它既要提供value值

30:41.770 --> 30:42.770
又要提供文本

30:42.770 --> 30:43.770
所以说爱号这里呢

30:43.770 --> 30:44.770
是一个律项

30:44.770 --> 30:45.770
咱们先把数据

30:45.770 --> 30:46.770
给它们描述好

30:46.770 --> 30:47.770
那么value值呢

30:47.770 --> 30:49.770
是football

30:49.770 --> 30:51.770
football

30:52.770 --> 30:53.770
然后呢

30:53.770 --> 30:54.770
文本text

30:54.770 --> 30:56.770
是足球

30:56.770 --> 30:57.770
这是一个爱号

30:57.770 --> 30:59.770
咱们这样子

30:59.770 --> 31:00.770
三四

31:00.770 --> 31:02.770
五个就行了

31:02.770 --> 31:04.770
然后这个basketball

31:04.770 --> 31:06.770
然后呢movie

31:06.770 --> 31:08.770
然后呢music

31:08.770 --> 31:09.770
然后other

31:09.770 --> 31:10.770
这里呢

31:10.770 --> 31:13.770
我们写上篮球

31:13.770 --> 31:15.770
然后这里写上电影

31:15.770 --> 31:18.770
这里写上音乐

31:18.770 --> 31:19.770
这个是其他

31:19.770 --> 31:20.770
OK

31:20.770 --> 31:21.770
现在呢

31:21.770 --> 31:22.770
我们一开始呢

31:22.770 --> 31:23.770
是一个都没选中

31:23.770 --> 31:24.770
一个都没选中

31:24.770 --> 31:26.770
这是我们选中的结果

31:26.770 --> 31:27.770
好

31:27.770 --> 31:28.770
接下来啊

31:28.770 --> 31:29.770
这是爱号

31:29.770 --> 31:30.770
然后还有啥呢

31:30.770 --> 31:31.770
大家下个列表吧

31:31.770 --> 31:33.770
我们把所有的表单都

31:33.770 --> 31:34.770
包含进去

31:34.770 --> 31:35.770
下列表

31:35.770 --> 31:36.770
下列表的话

31:36.770 --> 31:39.770
我们这里写上一个就是

31:39.770 --> 31:40.770
下列表城市嘛

31:40.770 --> 31:41.770
city

31:41.770 --> 31:42.770
城市

31:42.770 --> 31:43.770
城市呢

31:43.770 --> 31:45.770
为空嘛

31:45.770 --> 31:47.770
一开始为空

31:47.770 --> 31:49.770
或者是为富一嘛

31:49.770 --> 31:50.770
富一

31:50.770 --> 31:51.770
表示没有选择城市

31:51.770 --> 31:53.770
没有选择城市

31:53.770 --> 31:54.770
OK

31:54.770 --> 31:55.770
那我们就写好了

31:55.770 --> 31:56.770
或者一开始为北京嘛

31:56.770 --> 31:57.770
北京

31:57.770 --> 31:58.770
随便写个啊

31:58.770 --> 31:59.770
好

31:59.770 --> 32:01.770
我们写整个表单的初始数据

32:01.770 --> 32:02.770
以后呢

32:02.770 --> 32:03.770
我们渲染表单的时候呢

32:03.770 --> 32:05.770
就要根据这些初始数据

32:05.770 --> 32:06.770
来进行渲染

32:06.770 --> 32:07.770
好

32:07.770 --> 32:08.770
接下来我们来写

32:08.770 --> 32:09.770
这个render里边的东西

32:09.770 --> 32:10.770
好

32:10.770 --> 32:11.770
一个来啊

32:11.770 --> 32:12.770
我们这里不管样式的啊

32:12.770 --> 32:13.770
就直接来

32:13.770 --> 32:14.770
一个div

32:14.770 --> 32:15.770
div里边是账号

32:15.770 --> 32:16.770
对吧

32:16.770 --> 32:17.770
第一个是账号

32:17.770 --> 32:18.770
账号呢

32:18.770 --> 32:19.770
我们写个文门框

32:19.770 --> 32:20.770
input元素

32:20.770 --> 32:21.770
他的什么呢

32:21.770 --> 32:22.770
他的value值

32:22.770 --> 32:23.770
是不要受控

32:23.770 --> 32:24.770
对吧

32:24.770 --> 32:25.770
来自于哪

32:25.770 --> 32:26.770
zstats的

32:26.770 --> 32:27.770
什么

32:27.770 --> 32:28.770
locking id

32:28.770 --> 32:29.770
啊

32:29.770 --> 32:30.770
并且呢

32:30.770 --> 32:31.770
还要设置什么

32:31.770 --> 32:32.770
unchanged

32:32.770 --> 32:34.770
unchanged

32:34.770 --> 32:35.770
注意

32:35.770 --> 32:36.770
这个unchanged

32:36.770 --> 32:37.770
如果我们每次写的话

32:37.770 --> 32:38.770
我烦死了

32:38.770 --> 32:39.770
因为他们的代码都差不多

32:39.770 --> 32:40.770
所以说

32:40.770 --> 32:41.770
我觉得很挺烦的

32:41.770 --> 32:42.770
因此呢

32:42.770 --> 32:43.770
这个unchanged呢

32:43.770 --> 32:44.770
我把它

32:44.770 --> 32:45.770
放到一个函数里边

32:45.770 --> 32:46.770
统一处理

32:46.770 --> 32:47.770
我们这个地方

32:47.770 --> 32:48.770
我就讲这个

32:48.770 --> 32:49.770
如何来进行

32:49.770 --> 32:50.770
统一处理

32:50.770 --> 32:51.770
没有任何的新知识

32:51.770 --> 32:52.770
都是利用介石

32:52.770 --> 32:54.770
原本的一些能力

32:54.770 --> 32:55.770
因为介石

32:55.770 --> 32:56.770
本身就很灵活了

32:56.770 --> 32:57.770
我们利用介石

32:57.770 --> 32:59.770
本身的能力来进行处理

32:59.770 --> 33:01.770
handle change

33:01.770 --> 33:03.770
处理改变的事件

33:03.770 --> 33:04.770
在这里面

33:04.770 --> 33:06.770
我们以后在这里面写东西

33:06.770 --> 33:07.770
因此呢

33:07.770 --> 33:08.770
当他改变的时候

33:08.770 --> 33:09.770
以后所有的表弹项

33:09.770 --> 33:11.770
全部用这个

33:11.770 --> 33:13.770
handle change

33:13.770 --> 33:15.770
全部用这个玩意儿

33:15.770 --> 33:17.770
全部用这个玩意儿

33:17.770 --> 33:18.770
行了啊

33:18.770 --> 33:19.770
那么这个文明话是不是写好了

33:19.770 --> 33:21.770
然后再加一个东西

33:21.770 --> 33:22.770
加什么东西呢

33:22.770 --> 33:23.770
加个name属性

33:23.770 --> 33:25.770
因为一般来说的话

33:25.770 --> 33:27.770
表弹项都有个name属性

33:27.770 --> 33:29.770
这个name属性我们加啥呢

33:29.770 --> 33:31.770
跟他那个属性对应

33:31.770 --> 33:33.770
为什么要加这个

33:33.770 --> 33:34.770
我说一下

33:34.770 --> 33:36.770
加了这个东西过后

33:36.770 --> 33:39.770
因为我们以后是统一的处理

33:39.770 --> 33:40.770
我在这里面

33:40.770 --> 33:42.770
函数里面处理的时候

33:42.770 --> 33:44.770
他可能是各种各样的表弹元素

33:44.770 --> 33:46.770
他有可能是文闷框

33:46.770 --> 33:48.770
有可能是密码框

33:48.770 --> 33:50.770
有可能是下列表

33:50.770 --> 33:52.770
那文闷框也有可能会多个

33:52.770 --> 33:53.770
有多个

33:53.770 --> 33:54.770
我这里就不知道

33:54.770 --> 33:56.770
应该改变谁的数据了

33:56.770 --> 33:57.770
明白的意思吧

33:57.770 --> 33:58.770
我根本就不知道

33:58.770 --> 33:59.770
应该改变谁的数据

33:59.770 --> 34:00.770
所以说呢

34:00.770 --> 34:01.770
我们要通过这个name属性

34:01.770 --> 34:02.770
我才能知道

34:02.770 --> 34:04.770
我要改变哪一个数据

34:04.770 --> 34:05.770
这个表弹项

34:05.770 --> 34:06.770
它对应到

34:06.770 --> 34:08.770
状态里边哪一个属性

34:08.770 --> 34:10.770
状态里边哪一个属性

34:10.770 --> 34:11.770
才能对应

34:11.770 --> 34:12.770
所以说我们这里

34:12.770 --> 34:13.770
通过name了

34:13.770 --> 34:14.770
就可以搞定了

34:14.770 --> 34:16.770
OK我们这样子写出来过后

34:16.770 --> 34:17.770
先别看别的

34:17.770 --> 34:18.770
我们就看这个文闷框

34:18.770 --> 34:19.770
它能不能受控

34:19.770 --> 34:20.770
下面我们加个按钮

34:20.770 --> 34:22.770
最后我们加个按钮

34:22.770 --> 34:23.770
都用辟源书

34:23.770 --> 34:25.770
辟源书它主要是默认有一个

34:25.770 --> 34:26.770
上下的间隔

34:26.770 --> 34:28.770
它主要是一个上下的间隔

34:28.770 --> 34:30.770
它这里报什么说

34:30.770 --> 34:31.770
这里辟源书

34:31.770 --> 34:33.770
这个是DIB

34:33.770 --> 34:34.770
它有一个上下的间隔

34:34.770 --> 34:36.770
因为我整个懒的是这样子的

34:36.770 --> 34:37.770
这里就按钮

34:37.770 --> 34:39.770
按钮里边我们就unclick

34:40.770 --> 34:41.770
这个地方很简单

34:41.770 --> 34:43.770
我们就点击过后

34:43.770 --> 34:44.770
就输出

34:44.770 --> 34:45.770
输出

34:45.770 --> 34:47.770
当前的所有状态

34:47.770 --> 34:48.770
当前的所有状态

34:48.770 --> 34:49.770
就整个表弹项的状态

34:50.770 --> 34:51.770
OK没问题吧

34:52.770 --> 34:53.770
我们把这里

34:53.770 --> 34:54.770
就是获取表弹状态

34:54.770 --> 34:56.770
表弹状态

34:56.770 --> 34:57.770
表弹数据

34:57.770 --> 35:00.460
好保存

35:00.460 --> 35:02.460
咱们来看一下文闷框

35:02.460 --> 35:04.460
目前只有一个文闷框

35:04.460 --> 35:05.460
目前的表弹数据

35:05.460 --> 35:07.460
当然都是空的

35:07.460 --> 35:08.460
它也是受控的

35:08.460 --> 35:09.460
也是受控的

35:09.460 --> 35:10.460
你看现在写的没反应

35:10.460 --> 35:11.460
为什么没反应呢

35:11.460 --> 35:12.460
是因为我们没有对

35:12.460 --> 35:14.460
unchain几时间的进行处理

35:14.460 --> 35:15.460
这里没有处理

35:15.460 --> 35:16.460
那这里怎么处理呢

35:16.460 --> 35:18.460
处理的最终目标是不是

35:18.460 --> 35:20.460
要调用这个set state

35:20.460 --> 35:22.460
这是处理的最终目标

35:22.460 --> 35:23.460
它要调用这么个东西

35:23.460 --> 35:25.460
那么有两个问题

35:25.460 --> 35:27.460
要解决属性名是啥

35:27.460 --> 35:29.460
属性值是啥

35:29.460 --> 35:31.460
首先说属性值

35:31.460 --> 35:34.460
属性值是不是非常简单

35:34.460 --> 35:36.460
属性值是啥

35:36.460 --> 35:39.460
属性值是不是1点

35:39.460 --> 35:41.460
target

35:41.460 --> 35:42.460
点value

35:42.460 --> 35:44.460
这个1点target

35:44.460 --> 35:45.460
就是动物元素

35:45.460 --> 35:46.460
真实的动物元素

35:46.460 --> 35:47.460
所以我们这里

35:47.460 --> 35:48.460
可以很轻松的

35:48.460 --> 35:51.460
来获取到它的属性值

35:51.460 --> 35:54.460
关键是

35:54.460 --> 35:56.460
那么属性值放这

35:56.460 --> 35:58.460
关键是属性名是啥

35:58.460 --> 36:00.460
我们给哪个属性重新复制呢

36:00.460 --> 36:02.460
是不是要通过name属性来读取

36:02.460 --> 36:04.460
这里面存的是不是属性名

36:04.460 --> 36:05.460
对吧

36:05.460 --> 36:07.460
来拿到它的name属性

36:07.460 --> 36:08.460
name属性是啥

36:08.460 --> 36:10.460
是不是就是1点target

36:10.460 --> 36:11.460
就是真实的动物元素

36:11.460 --> 36:13.460
读它的name属性不完了吗

36:13.460 --> 36:14.460
注意

36:14.460 --> 36:17.460
我能不能这样子放过来

36:17.460 --> 36:19.460
能不能直接把name放过来

36:19.460 --> 36:20.460
肯定是不行的

36:20.460 --> 36:21.460
为什么不行

36:21.460 --> 36:22.460
这是读属性值

36:22.460 --> 36:24.460
读取属性值

36:24.460 --> 36:27.460
读取表单的值

36:27.460 --> 36:28.460
这个是读咱们

36:28.460 --> 36:32.460
读取表单的name属性

36:32.460 --> 36:34.460
能不能直接放过来

36:34.460 --> 36:35.460
不能

36:35.460 --> 36:36.460
为什么不能

36:36.460 --> 36:37.460
因为这样子的话

36:37.460 --> 36:38.460
还就是给name属性复制

36:38.460 --> 36:39.460
相当于在这里

36:39.460 --> 36:40.460
加了一个name属性

36:40.460 --> 36:41.460
那不是我们想要的

36:41.460 --> 36:42.460
对吧

36:42.460 --> 36:43.460
我们是应该干嘛呢

36:43.460 --> 36:45.460
是应该把这个变量的值

36:45.460 --> 36:47.460
作为属性名

36:47.460 --> 36:49.460
怎么做

36:49.460 --> 36:53.460
是不是要用属性表达式

36:53.460 --> 36:54.460
用属性表达式

36:54.460 --> 36:55.460
对吧

36:55.460 --> 36:57.460
这样子来复制

36:57.460 --> 36:58.460
这样子来复制

36:58.460 --> 36:59.460
当然

36:59.460 --> 37:01.460
你也可以先建一个对象

37:01.460 --> 37:02.460
建一个对象

37:02.460 --> 37:03.460
比方说

37:03.460 --> 37:06.460
就是new state

37:06.460 --> 37:08.460
新的状态

37:08.460 --> 37:09.460
或者叫

37:09.460 --> 37:11.460
更加那个

37:11.460 --> 37:14.460
标准的名名叫做partial state

37:14.460 --> 37:16.460
新的部分状态

37:16.460 --> 37:17.460
因为这里只有一部分的状态

37:17.460 --> 37:19.460
并不是全部的状态

37:19.460 --> 37:21.460
那么它是个空对象

37:21.460 --> 37:23.460
这个对象里边

37:23.460 --> 37:25.460
有一个属性

37:25.460 --> 37:27.460
属性通过这个变量的值

37:27.460 --> 37:28.460
来获取属性的名称

37:28.460 --> 37:29.460
等于

37:29.460 --> 37:31.460
然后把新的状态

37:31.460 --> 37:32.460
放进来

37:32.460 --> 37:33.460
是不是一样的

37:33.460 --> 37:35.460
这里只不过是使用了字面量

37:35.460 --> 37:37.460
这种方式是新建对象

37:37.460 --> 37:39.460
都可以

37:39.460 --> 37:40.460
这种方式可以

37:40.460 --> 37:42.460
刚才我们用的

37:42.460 --> 37:44.460
这种方式也可以

37:44.460 --> 37:46.460
set state

37:46.460 --> 37:49.460
new partial

37:49.460 --> 37:50.460
用了这个东西

37:50.460 --> 37:51.460
是不是也可以

37:51.460 --> 37:53.460
都行

37:53.460 --> 37:54.460
两种方式

37:54.460 --> 37:55.460
那咱们来看一下吧

37:55.460 --> 37:56.460
你看

37:56.460 --> 37:57.460
现在是不是可以收空了

37:57.460 --> 37:58.460
对吧

37:58.460 --> 37:59.460
可以收空了

37:59.460 --> 38:00.460
点击获取

38:00.460 --> 38:01.460
你看login id

38:01.460 --> 38:02.460
是不是可以得到了

38:02.460 --> 38:03.460
那么有了这么一个喊出过

38:03.460 --> 38:05.460
后边写在是不是很简单了

38:05.460 --> 38:06.460
然后再来

38:06.460 --> 38:07.460
密码框

38:07.460 --> 38:08.460
密码框

38:08.460 --> 38:09.460
这里是什么password

38:09.460 --> 38:13.460
名是什么login password

38:13.460 --> 38:14.460
那么这里

38:14.460 --> 38:15.460
是login password

38:15.460 --> 38:17.460
这里还是一样的

38:17.460 --> 38:18.460
保存

38:18.460 --> 38:19.460
你看一下

38:19.460 --> 38:20.460
这里

38:20.460 --> 38:22.460
这是密码框

38:22.460 --> 38:23.460
点击

38:23.460 --> 38:24.460
你看密码是不是也有了

38:24.460 --> 38:25.460
对不对

38:25.460 --> 38:28.460
是不是非常简单

38:28.460 --> 38:30.460
我们先把简单的写好

38:30.460 --> 38:31.460
然后再看一下

38:31.460 --> 38:32.460
下达列表

38:32.460 --> 38:33.460
是那个

38:33.460 --> 38:34.460
下达列表

38:34.460 --> 38:36.460
什么属性

38:36.460 --> 38:38.460
这个是lame属性

38:38.460 --> 38:40.460
lame属性

38:40.460 --> 38:42.460
就是city

38:42.460 --> 38:43.460
city

38:43.460 --> 38:45.460
然后它的value

38:45.460 --> 38:46.460
是不是收空

38:46.460 --> 38:48.460
来自于

38:48.460 --> 38:49.460
city

38:49.460 --> 38:50.460
它里边的程式

38:50.460 --> 38:51.460
来吧

38:51.460 --> 38:52.460
随便写几个

38:52.460 --> 38:54.460
然后北京

38:54.460 --> 38:56.460
北京

38:56.460 --> 38:57.460
然后Option

38:57.460 --> 38:59.460
然后就是

38:59.460 --> 39:01.460
上海

39:01.460 --> 39:02.460
上海

39:02.460 --> 39:03.460
然后再来一个

39:03.460 --> 39:04.460
随便来一个

39:04.460 --> 39:08.030
成都

39:08.030 --> 39:10.030
保存

39:10.030 --> 39:11.030
咱们看

39:11.030 --> 39:12.030
一开始是北京

39:12.030 --> 39:13.030
然后这里

39:13.030 --> 39:14.030
这说什么

39:14.030 --> 39:16.030
没有写onchange

39:16.030 --> 39:18.030
onchange不能忘

39:18.030 --> 39:19.030
onchange

39:19.030 --> 39:20.030
是不是一样的

39:20.030 --> 39:22.030
z handle change

39:22.030 --> 39:24.030
统一用函数来处理

39:24.030 --> 39:25.030
保存

39:25.030 --> 39:26.030
你看一下

39:26.030 --> 39:27.030
上海点击

39:27.030 --> 39:28.030
然后这里

39:28.030 --> 39:30.030
city看一下

39:30.030 --> 39:31.030
city

39:31.030 --> 39:32.030
上海

39:32.030 --> 39:33.030
是不是回到了

39:33.030 --> 39:34.030
然后成都

39:34.030 --> 39:35.030
点击

39:35.030 --> 39:37.030
你看是不是回到了

39:37.030 --> 39:39.030
没问题吧

39:39.030 --> 39:41.030
那么今天的关键是看

39:41.030 --> 39:42.030
单选框和多选框

39:42.030 --> 39:44.030
这两个肯定要特殊处理

39:44.030 --> 39:45.030
那毫无疑问

39:45.030 --> 39:46.030
肯定要特殊处理

39:46.030 --> 39:47.030
好比方说单选框

39:47.030 --> 39:48.030
单选框

39:48.030 --> 39:49.030
单选框这里

39:49.030 --> 39:50.030
要有一个性别

39:50.030 --> 39:51.030
对吧

39:51.030 --> 39:52.030
性别

39:52.030 --> 39:53.030
来个label

39:53.030 --> 39:54.030
label

39:54.030 --> 39:55.030
label里边

39:55.030 --> 39:56.030
我们写上一个什么

39:56.030 --> 39:57.030
性别

39:57.030 --> 39:59.030
性别就是input

39:59.030 --> 40:00.030
type为什么

40:00.030 --> 40:01.030
radio

40:01.030 --> 40:03.030
给它个name属性

40:03.030 --> 40:04.030
name属性为啥

40:04.030 --> 40:06.030
name属性为sex

40:06.030 --> 40:07.030
为什么要为sex

40:07.030 --> 40:09.030
跟前面是不是要对应的

40:09.030 --> 40:10.030
对吧

40:10.030 --> 40:11.030
它也要对应到这个属性

40:11.030 --> 40:13.030
就说name属性为sex

40:13.030 --> 40:14.030
id就不要了

40:14.030 --> 40:16.030
然后受到它的y6值

40:16.030 --> 40:18.030
y6值为啥呢

40:18.030 --> 40:21.030
y6值为mail

40:21.030 --> 40:22.030
mail

40:22.030 --> 40:23.030
y6值为mail

40:23.030 --> 40:24.030
好

40:24.030 --> 40:25.030
然后给它写上什么

40:25.030 --> 40:27.030
unchanged

40:27.030 --> 40:28.030
unchanged

40:28.030 --> 40:29.030
是不是一样的

40:29.030 --> 40:31.030
还是使用它来获取

40:31.030 --> 40:33.030
res handle change

40:33.030 --> 40:34.030
好

40:34.030 --> 40:35.030
然后再来一个

40:35.030 --> 40:36.030
这是

40:36.030 --> 40:38.030
这是男

40:38.030 --> 40:40.030
再来一个女

40:41.030 --> 40:42.030
这元素里在写

40:42.030 --> 40:44.030
把元素里逃不掉

40:44.030 --> 40:45.030
女

40:45.030 --> 40:46.030
好

40:46.030 --> 40:47.030
然后这里呢

40:47.030 --> 40:49.030
我们写上famel

40:49.030 --> 40:50.030
famel

40:50.030 --> 40:51.030
好

40:51.030 --> 40:52.030
handle change

40:52.030 --> 40:53.030
好像也没啥了

40:53.030 --> 40:55.030
一没有什么特殊的

40:55.030 --> 40:56.030
这里至少这里

40:56.030 --> 40:57.030
没有什么特殊的

40:57.030 --> 40:58.030
对不对

40:58.030 --> 41:00.030
没有啥特殊的呢

41:00.030 --> 41:01.030
没有啥特殊的

41:01.030 --> 41:03.030
保存看一下吧

41:03.030 --> 41:04.030
一开始应该是

41:04.030 --> 41:06.030
难被选中的

41:06.030 --> 41:08.030
它确实

41:08.030 --> 41:09.030
这里就是切个车

41:09.030 --> 41:10.030
有点特殊

41:10.030 --> 41:11.030
切个车

41:11.030 --> 41:13.030
它是否被选中了

41:13.030 --> 41:14.030
是否能选中呢

41:14.030 --> 41:15.030
关键是看什么

41:15.030 --> 41:17.030
看什么res state里边的

41:17.030 --> 41:18.030
six的值

41:18.030 --> 41:20.030
是不是等于mail

41:20.030 --> 41:21.030
如果等于mail的话

41:21.030 --> 41:22.030
是不是要选中

41:22.030 --> 41:23.030
那么这里呢

41:23.030 --> 41:24.030
女这里呢

41:24.030 --> 41:25.030
是不是要等于famel

41:25.030 --> 41:26.030
对不对

41:26.030 --> 41:27.030
如果等于famel

41:27.030 --> 41:28.030
它就选中

41:28.030 --> 41:29.030
它总之要么等于mail

41:29.030 --> 41:31.030
要么等于famel

41:31.030 --> 41:32.030
对吧

41:32.030 --> 41:33.030
好

41:33.030 --> 41:34.030
其他就没啥了

41:34.030 --> 41:35.030
保存你看一下

41:35.030 --> 41:36.030
选中

41:36.030 --> 41:37.030
选中

41:37.030 --> 41:39.030
选中

41:39.030 --> 41:41.030
这里我把atm4去掉

41:41.030 --> 41:44.600
跟文字也关联在一起

41:44.600 --> 41:45.600
好

41:45.600 --> 41:46.600
选中

41:46.600 --> 41:47.600
选中

41:47.600 --> 41:48.600
比方说看一下

41:48.600 --> 41:49.600
或许表达数据

41:49.600 --> 41:50.600
你看一下six

41:50.600 --> 41:51.600
是不是等于famel了

41:51.600 --> 41:52.600
为什么这么神奇

41:52.600 --> 41:54.600
因为你看一下是一样的

41:54.600 --> 41:55.600
是一样的

41:55.600 --> 41:56.600
你看value只有mail

41:56.600 --> 41:57.600
有famel

41:57.600 --> 41:58.600
那么这里呢

41:58.600 --> 41:59.600
当我们

41:59.600 --> 42:00.600
改变的时候

42:00.600 --> 42:01.600
我们是不是独到

42:01.600 --> 42:02.600
它的name属性

42:02.600 --> 42:03.600
对应的属性敏扬

42:03.600 --> 42:04.600
拿到了

42:04.600 --> 42:05.600
它的值是不是拿到了

42:05.600 --> 42:06.600
我们重新给它复制

42:06.600 --> 42:07.600
重新复制过了

42:07.600 --> 42:08.600
是不是重新渲染

42:08.600 --> 42:09.600
重新渲染的时候

42:09.600 --> 42:10.600
以前是没有

42:10.600 --> 42:11.600
现在变成了famel了

42:11.600 --> 42:12.600
那么这个判断是不通过

42:12.600 --> 42:13.600
它为force

42:13.600 --> 42:14.600
所以它没有选中

42:14.600 --> 42:16.600
那么它的判断是不通过了

42:16.600 --> 42:17.600
它的表达是为真

42:17.600 --> 42:19.600
所以它选中了

42:19.600 --> 42:21.600
是一样的

42:21.600 --> 42:22.600
那么这里多选框

42:22.600 --> 42:23.600
稍微有点区别

42:23.600 --> 42:24.600
并不是多选框

42:24.600 --> 42:25.600
本身有区别

42:25.600 --> 42:26.600
是因为我们这要循环

42:26.600 --> 42:28.600
主要是这里要循环

42:28.600 --> 42:29.600
其他都没啥

42:29.600 --> 42:30.600
然后多选框

42:30.600 --> 42:32.600
我们是要维护数组

42:32.600 --> 42:33.600
就这个地方有区别

42:33.600 --> 42:35.600
因为维护的不是单个子

42:35.600 --> 42:37.600
是维护的数组

42:37.600 --> 42:38.600
因此多选框这里

42:38.600 --> 42:40.600
那我们要单独处理一下

42:40.600 --> 42:42.600
我们这里专门写个函数

42:42.600 --> 42:43.600
专门写个函数

42:43.600 --> 42:46.600
get

42:46.600 --> 42:47.600
这里是什么

42:47.600 --> 42:48.600
这里是love

42:48.600 --> 42:49.600
love is

42:49.600 --> 42:50.600
get

42:50.600 --> 42:51.600
love

42:51.600 --> 42:54.600
得到所有的就是

42:54.600 --> 42:55.600
多选框

42:55.600 --> 42:57.600
love check

42:57.600 --> 43:01.640
boxes

43:01.640 --> 43:03.640
这个

43:03.640 --> 43:07.640
这个是获取所有的

43:07.640 --> 43:09.640
爱好

43:09.640 --> 43:10.640
多选框

43:10.640 --> 43:12.640
然后我们这里

43:12.640 --> 43:14.640
调用这个函数

43:14.640 --> 43:16.640
bs

43:16.640 --> 43:17.640
z

43:17.640 --> 43:18.640
get

43:18.640 --> 43:19.640
love checkboxes

43:19.640 --> 43:22.640
然后把bs放到就完事了

43:22.640 --> 43:24.640
这是爱好

43:24.640 --> 43:28.680
爱好

43:28.680 --> 43:30.680
放到就完事了

43:30.680 --> 43:32.680
那么关键这里边怎么写呢

43:32.680 --> 43:33.680
这里边的话

43:33.680 --> 43:34.680
我们就是根据

43:34.680 --> 43:36.680
状态里边的love是对吧

43:36.680 --> 43:37.680
来生成多选框

43:37.680 --> 43:39.680
我们之前是不是写过

43:39.680 --> 43:40.680
来吧

43:40.680 --> 43:41.680
bs

43:41.680 --> 43:42.680
get

43:42.680 --> 43:44.680
stats里边了什么

43:44.680 --> 43:47.680
choose loves

43:47.680 --> 43:49.680
不是choose loves

43:49.680 --> 43:51.680
sloves

43:51.680 --> 43:52.680
loves

43:52.680 --> 43:53.680
然后做什么呢

43:53.680 --> 43:55.680
做map

43:55.680 --> 43:57.680
之前都写过了

43:57.680 --> 43:59.680
把它映射成为一个

43:59.680 --> 44:01.680
get是x的表达式

44:01.680 --> 44:02.680
把它映射出来

44:02.680 --> 44:03.680
好

44:03.680 --> 44:04.680
每一个是什么呢

44:04.680 --> 44:06.680
每一个就是个nabel

44:06.680 --> 44:07.680
每一个就是nabel

44:07.680 --> 44:08.680
好

44:08.680 --> 44:10.680
nabel里边是不是有两个东西

44:10.680 --> 44:11.680
一个是文本

44:11.680 --> 44:12.680
一个是什么

44:12.680 --> 44:13.680
一个是文本

44:13.680 --> 44:15.680
文本就是

44:15.680 --> 44:16.680
eat

44:16.680 --> 44:18.680
文本就是item

44:18.680 --> 44:20.680
一个是input元素

44:20.680 --> 44:22.680
we checkbox

44:22.680 --> 44:23.680
咱们来看一下这个

44:23.680 --> 44:25.680
names当然毫无疑问

44:25.680 --> 44:26.680
对应到属性名

44:26.680 --> 44:28.680
这个是完全一致的

44:28.680 --> 44:29.680
choose loves

44:29.680 --> 44:31.680
names它对应到这个

44:31.680 --> 44:33.680
id就没有了

44:33.680 --> 44:34.680
然后让我们一个个看

44:34.680 --> 44:35.680
checked

44:35.680 --> 44:36.680
是否选中

44:36.680 --> 44:37.680
应该怎么来

44:37.680 --> 44:38.680
是否选中

44:38.680 --> 44:39.680
是不是说过的

44:40.680 --> 44:42.680
choose loves

44:42.680 --> 44:44.680
是否包含什么

44:44.680 --> 44:46.680
是否包含当前这一项

44:46.680 --> 44:47.680
当前这个文本

44:47.680 --> 44:48.680
如果包含的话

44:48.680 --> 44:50.680
那肯定要选中

44:50.680 --> 44:51.680
我们选中了它

44:51.680 --> 44:52.680
这数据里边都选中了它

44:52.680 --> 44:53.680
所以说你这里要选中

44:53.680 --> 44:55.680
完全跟数据进行对应

44:55.680 --> 44:57.680
然后unchanged

44:57.680 --> 44:58.680
当改变的时候

44:58.680 --> 45:00.680
还是一样的

45:00.680 --> 45:01.680
this handle change

45:01.680 --> 45:02.680
还是一样的

45:02.680 --> 45:04.680
交给它来处理

45:04.680 --> 45:05.680
交给它来处理

45:05.680 --> 45:07.680
保存你看一下

45:07.680 --> 45:08.680
保存了

45:09.680 --> 45:10.680
对吧

45:10.680 --> 45:12.680
那说objects are not valid

45:12.680 --> 45:14.680
or react child

45:16.680 --> 45:17.680
没问题

45:18.680 --> 45:19.680
到什么

45:20.680 --> 45:21.680
看一下

45:22.680 --> 45:23.680
都说啥了

45:25.680 --> 45:26.680
首先是key

45:26.680 --> 45:27.680
它还报了一个警告

45:27.680 --> 45:28.680
就是key

45:28.680 --> 45:29.680
我没有这个key

45:29.680 --> 45:31.680
ok 我把key给它加上

45:31.680 --> 45:33.680
一个错误一个错误解决

45:33.680 --> 45:34.680
key 给它加上

45:34.680 --> 45:35.680
就是这个文本

45:35.680 --> 45:37.680
直接把文本当成key

45:38.680 --> 45:39.680
明白了

45:39.680 --> 45:40.680
明白了

45:40.680 --> 45:42.680
我的choose nulls里面是制服串

45:42.680 --> 45:44.680
我这个是制服串

45:45.680 --> 45:46.680
但是这个 nulls里面

45:46.680 --> 45:47.680
它这个it

45:47.680 --> 45:48.680
这个it

45:48.680 --> 45:49.680
它不是制服串

45:49.680 --> 45:50.680
它是个对象

45:50.680 --> 45:51.680
看到没

45:51.680 --> 45:52.680
它是个对象

45:52.680 --> 45:53.680
一个 nulls它就是个对象

45:53.680 --> 45:54.680
看到没

45:54.680 --> 45:55.680
是这个

45:55.680 --> 45:57.680
所以说我们这里判断的是什么

45:57.680 --> 45:58.680
判断的是它的value

45:58.680 --> 45:59.680
都是一个地方

45:59.680 --> 46:01.680
另外一个地方key的指

46:01.680 --> 46:03.680
还有应该是value

46:03.680 --> 46:04.680
然后这个地方

46:04.680 --> 46:05.680
显示是文本

46:05.680 --> 46:07.680
显示在界面上是文本

46:07.680 --> 46:09.680
因为我这个每一个地方是个对象

46:09.680 --> 46:10.680
我之前

46:10.680 --> 46:12.680
我忘了

46:14.680 --> 46:15.680
它现在还是报这个错

46:15.680 --> 46:17.680
没有这个tease

46:17.680 --> 46:19.680
我不是写这个tease吗

46:19.680 --> 46:21.680
不写了吗

46:21.680 --> 46:22.680
这个tease应该写到这

46:22.680 --> 46:24.680
不能写到这个指援书里面

46:24.680 --> 46:26.680
要写到根源书里面

46:27.680 --> 46:28.680
写到这

46:29.680 --> 46:30.680
保存

46:31.680 --> 46:32.680
行了

46:34.680 --> 46:36.680
关键是现在改变事件

46:36.680 --> 46:38.680
改变事件现在肯定要出问题

46:38.680 --> 46:39.680
肯定是不行了

46:39.680 --> 46:40.680
因为改变事件

46:40.680 --> 46:42.680
我是把它复制成什么

46:42.680 --> 46:43.680
复制成一个制服串了

46:43.680 --> 46:44.680
把它的value值拿出来

46:44.680 --> 46:46.680
变成了一个制服串

46:46.680 --> 46:48.680
它每一个还有一个value值

46:48.680 --> 46:49.680
每个input都有一个value值

46:49.680 --> 46:51.680
因为我们一会儿拿到它的value值

46:52.680 --> 46:53.680
它每个都有一个value值

46:53.680 --> 46:55.680
value值就来自于ease对方value

46:56.680 --> 46:57.680
保存

46:57.680 --> 46:58.680
它每个都有value值

46:58.680 --> 46:59.680
看一下这个结构

46:59.680 --> 47:00.680
先看结构

47:00.680 --> 47:01.680
元素结构里面

47:01.680 --> 47:02.680
每个label下面

47:02.680 --> 47:03.680
你看一下

47:03.680 --> 47:04.680
它有这个什么

47:04.680 --> 47:05.680
一个value值

47:06.680 --> 47:07.680
这是它的文本

47:07.680 --> 47:09.680
value值是basketball

47:09.680 --> 47:10.680
这是它的文本

47:10.680 --> 47:11.680
对吧

47:11.680 --> 47:12.680
我们把这个结构先做出来

47:12.680 --> 47:13.680
就这里一块

47:13.680 --> 47:15.680
要好好去理解一下

47:15.680 --> 47:17.680
主要是它多了一个value值

47:17.680 --> 47:18.680
并且它的切合者的判断方式

47:18.680 --> 47:19.680
是用书主里面

47:19.680 --> 47:21.680
是否包含某一项来进行判断的

47:22.680 --> 47:24.680
那么现在我们仍然是没法选

47:25.680 --> 47:27.680
或者说我们只能选中一个

47:27.680 --> 47:28.680
为什么呢

47:28.680 --> 47:30.680
来看一下我们获取数据就知道了

47:30.680 --> 47:32.680
一获取数据你看一下

47:32.680 --> 47:34.680
我们这个choose now

47:34.680 --> 47:35.680
你看它变成一个字幕圈了

47:35.680 --> 47:37.680
你看到没变成个字幕圈了

47:37.680 --> 47:40.680
它不是说它变成是一个数据

47:40.680 --> 47:42.680
变成一个单选方的模式了

47:42.680 --> 47:44.680
所以它肯定要特殊处理

47:44.680 --> 47:46.680
它在处理onchain级的时候

47:46.680 --> 47:47.680
肯定要特殊处理

47:47.680 --> 47:48.680
所以我们这里判断一下

47:48.680 --> 47:51.680
如果一点target

47:51.680 --> 47:54.680
这个元素是一个什么呢

47:54.680 --> 47:56.680
是一个它的type

47:57.680 --> 47:59.680
就是它的type name

47:59.680 --> 48:00.680
应该它的type值

48:00.680 --> 48:01.680
type值等于了

48:01.680 --> 48:03.680
什么check box

48:03.680 --> 48:04.680
如果等于这个

48:04.680 --> 48:06.680
那么它应该是一个多选框

48:06.680 --> 48:07.680
多选框

48:07.680 --> 48:09.680
那么对多选框这一块

48:09.680 --> 48:11.680
当然不是多选框要特殊处理

48:11.680 --> 48:13.680
主要是这里是用数组循环渲染的

48:13.680 --> 48:15.680
所以对这一块要进行处理

48:15.680 --> 48:17.680
因为我们这里的数据是一个数组

48:17.680 --> 48:19.680
该特殊处理的是叫特殊处理

48:19.680 --> 48:21.680
看这种情况下多选框

48:21.680 --> 48:22.680
多选框的话

48:22.680 --> 48:24.680
我们要对这个value值

48:24.680 --> 48:25.680
名属性值是一样的

48:25.680 --> 48:27.680
关键是一个value值

48:27.680 --> 48:29.680
对value值进行特殊处理

48:30.680 --> 48:33.680
进行特殊处理

48:33.680 --> 48:35.680
进行特殊处理

48:35.680 --> 48:37.680
怎么来进行特殊处理呢

48:37.680 --> 48:38.680
怎么来进行特殊处理呢

48:38.680 --> 48:40.680
是不是跟之前一样的

48:40.680 --> 48:42.680
value值已经拿到了

48:42.680 --> 48:44.680
那么我们就判断一下

48:44.680 --> 48:45.680
它是否被选中

48:45.680 --> 48:47.680
如果一点target

48:47.680 --> 48:48.680
check

48:48.680 --> 48:50.680
被选中了

48:50.680 --> 48:52.680
是不是往这里面加东西

48:52.680 --> 48:53.680
对不对

48:53.680 --> 48:54.680
往这里面加东西

48:54.680 --> 48:56.680
我们定一个

48:56.680 --> 48:58.680
定一个就是

49:00.680 --> 49:02.680
就给挖重新复制

49:02.680 --> 49:03.680
给挖重新复制

49:03.680 --> 49:04.680
复什么值呢

49:04.680 --> 49:06.680
就是先把这个展开

49:06.680 --> 49:07.680
set

49:07.680 --> 49:08.680
它里边的什么

49:08.680 --> 49:09.680
choose left

49:09.680 --> 49:10.680
以前的数组展开

49:10.680 --> 49:12.680
再加一个新的值

49:12.680 --> 49:13.680
一点target

49:13.680 --> 49:14.680
就是挖

49:14.680 --> 49:15.680
挖本身对吧

49:15.680 --> 49:17.680
之前我们拿到这个数据了

49:17.680 --> 49:18.680
拿到这个它的value值了

49:18.680 --> 49:19.680
已经拿到了

49:19.680 --> 49:20.680
通过这个value已经拿到了

49:20.680 --> 49:21.680
比方选中的主球

49:21.680 --> 49:23.680
那么拿到就是复制波

49:23.680 --> 49:24.680
然后把这个复制波

49:24.680 --> 49:26.680
加到这个新的数组里边去

49:26.680 --> 49:27.680
然后重新给它复制

49:27.680 --> 49:28.680
因为以后呢

49:28.680 --> 49:29.680
我们设置的回去呢

49:29.680 --> 49:30.680
就是用这个设置的

49:31.680 --> 49:32.680
好看一下

49:32.680 --> 49:33.680
如果它没有选中

49:33.680 --> 49:34.680
是不是要把它去掉

49:34.680 --> 49:35.680
对不对

49:35.680 --> 49:36.680
去掉来自于

49:36.680 --> 49:37.680
set

49:37.680 --> 49:38.680
choose left

49:38.680 --> 49:39.680
filter

49:39.680 --> 49:40.680
filter

49:40.680 --> 49:41.680
然后来吧

49:41.680 --> 49:42.680
去掉

49:42.680 --> 49:44.680
如果它不等于什么

49:44.680 --> 49:45.680
不等于

49:45.680 --> 49:46.680
挖

49:46.680 --> 49:47.680
就保留

49:47.680 --> 49:48.680
否则等于挖的话

49:48.680 --> 49:49.680
就去掉

49:49.680 --> 49:50.680
对吧

49:50.680 --> 49:51.680
就重新给它复制就完成了

49:51.680 --> 49:52.680
那么对它进行特殊处理一下

49:52.680 --> 49:53.680
就完成

49:53.680 --> 49:54.680
就多了几行代

49:55.680 --> 49:56.680
那你看一下

49:56.680 --> 49:57.680
这样子的

49:57.680 --> 49:59.680
我们由于进行的统一的处理

49:59.680 --> 50:00.680
你看代码是不是精简了

50:00.680 --> 50:01.680
非常非常多了

50:01.680 --> 50:02.680
我们只有一个初始状态

50:02.680 --> 50:04.680
然后统一处理的代码只有这么一点

50:04.680 --> 50:06.680
还加上注释的

50:06.680 --> 50:07.680
只有这么一点

50:07.680 --> 50:08.680
然后这边

50:08.680 --> 50:09.680
这边呢

50:09.680 --> 50:10.680
我们就是宣展

50:10.680 --> 50:12.680
那这些宣展的元素你不能省略

50:12.680 --> 50:13.680
你怎么省略呢

50:13.680 --> 50:14.680
你在哪个框架下

50:14.680 --> 50:16.680
在5u里面也不能省略

50:16.680 --> 50:17.680
怎么省略呢

50:17.680 --> 50:19.680
不然它知道你要宣展哪些元素呢

50:19.680 --> 50:20.680
对吧

50:20.680 --> 50:21.680
就完成了

50:21.680 --> 50:22.680
保存看一下

50:22.680 --> 50:24.680
是不是现在可以选中多个了

50:24.680 --> 50:25.680
数据你看一下

50:25.680 --> 50:26.680
这个True Snaps

50:26.680 --> 50:27.680
是吧

50:27.680 --> 50:28.680
就可以得到多个了

50:28.680 --> 50:29.680
这就是可以

50:29.680 --> 50:31.680
以后你们要写一个表单的时候

50:31.680 --> 50:33.680
就可以用类似于这种方式

50:33.680 --> 50:34.680
给大家打开一个思路

50:34.680 --> 50:36.680
用类似于这样的方式

50:36.680 --> 50:38.680
来处理一个表单元素

50:38.680 --> 50:39.680
就同时

50:39.680 --> 50:41.680
统一的进行处理

50:41.680 --> 50:42.680
OK

50:42.680 --> 50:45.680
这是关于表单元素这一块

50:45.680 --> 50:47.680
下面可能还是按照惯例

50:47.680 --> 50:48.680
咱们来做一个demo

