WEBVTT

00:00.880 --> 00:04.880
上节课咱们讲到了那个约定式路由

00:04.880 --> 00:06.880
在我们使用无密接时的时候

00:06.880 --> 00:11.880
绝大部分时候咱们使用的都是约定式路由

00:11.880 --> 00:12.880
因为它非常简单

00:12.880 --> 00:13.880
而且呢

00:13.880 --> 00:16.880
我们就可以解脱我们很多精力

00:16.880 --> 00:18.880
让我们把注意力的关注到业务上

00:18.880 --> 00:21.880
而不是它的那些技术点上

00:21.880 --> 00:25.880
这也是很多框架需要去解决的一个问题

00:25.880 --> 00:26.880
但是呢

00:26.880 --> 00:27.880
我们这节课呢

00:27.880 --> 00:29.880
为什么还要去讲那个配置式路由呢

00:29.880 --> 00:31.880
是因为我们之前说过

00:31.880 --> 00:32.880
无密接时呢

00:32.880 --> 00:36.880
它你虽然用的是约定式路由

00:36.880 --> 00:37.880
但它最终呢

00:37.880 --> 00:39.880
会把它转换为配置式路由

00:39.880 --> 00:40.880
所以说呢

00:40.880 --> 00:41.880
我们有必要了

00:41.880 --> 00:43.880
去了解一下配置式路由

00:43.880 --> 00:45.880
其实这个路由配置啊

00:45.880 --> 00:48.880
我们以前在学习Retro Rotor的时候

00:48.880 --> 00:49.880
自己做过

00:49.880 --> 00:50.880
对吧

00:50.880 --> 00:51.880
不知道大家还有没有印象

00:51.880 --> 00:52.880
当时

00:52.880 --> 00:55.880
我现在也有时间有点久远了

00:55.880 --> 00:56.880
我又眼望了

00:56.880 --> 00:58.880
我当时有没有介绍过这个库

00:58.880 --> 00:59.880
其实无所谓

00:59.880 --> 01:00.880
它的实现原理呢

01:00.880 --> 01:01.880
跟我们就算没有介绍过

01:01.880 --> 01:02.880
它的实现原理

01:02.880 --> 01:04.880
跟我们刚刚之前用的那个

01:04.880 --> 01:07.880
之前做的那个约定式

01:07.880 --> 01:09.880
做的那个就是路由配置

01:09.880 --> 01:11.880
我们自己熟悉过路由配置

01:11.880 --> 01:12.880
这个我有印象

01:12.880 --> 01:14.880
跟我们自己熟悉的差不多

01:14.880 --> 01:17.880
叫做Retro Rotor Config

01:17.880 --> 01:18.880
这这么一个库

01:18.880 --> 01:19.880
大家有兴趣的话

01:19.880 --> 01:21.880
可以去NPM了解一下

01:21.880 --> 01:22.880
它其实的这个库呢

01:22.880 --> 01:23.880
也是集成到

01:23.880 --> 01:26.880
官方Retro Rotor这个库里边去了

01:26.880 --> 01:27.880
只不过呢

01:27.880 --> 01:28.880
它默认了是没有

01:28.880 --> 01:29.880
没有给你用

01:29.880 --> 01:30.880
没有用

01:30.880 --> 01:31.880
你要用的话

01:31.880 --> 01:32.880
你自己去用

01:32.880 --> 01:34.880
其实它就可以支持配置

01:34.880 --> 01:35.880
可以支持配置

01:35.880 --> 01:36.880
只不过呢

01:36.880 --> 01:37.880
我们平时

01:37.880 --> 01:39.880
要用官方的那个库的时候

01:39.880 --> 01:41.880
没有太用这个库

01:41.880 --> 01:42.880
但是无密接式里面

01:42.880 --> 01:43.880
把它用起来了

01:43.880 --> 01:44.880
无密接式里面

01:44.880 --> 01:45.880
就用到了这个库

01:45.880 --> 01:46.880
这个库呢

01:46.880 --> 01:47.880
它就是本身就是支持配置的

01:47.880 --> 01:48.880
它的配置方式

01:48.880 --> 01:51.880
跟我们之前学习Retro Rotor的时候

01:51.880 --> 01:53.880
我们自己写的那种配置方式

01:53.880 --> 01:55.880
极其类似几乎是完全一样

01:55.880 --> 01:57.880
好 咱们来看一下吧

01:57.880 --> 01:58.880
看一下怎么来写这个配置

01:58.880 --> 02:00.880
我们这里首先写一些页面

02:00.880 --> 02:01.880
写一些页面来说

02:01.880 --> 02:03.880
配置

02:03.880 --> 02:06.880
我们这里直接把这个取掉了

02:06.880 --> 02:09.880
这里这里可以讲的是配置是路由

02:09.880 --> 02:14.190
路由

02:14.190 --> 02:16.190
然后我们这里剪一些页面

02:16.190 --> 02:17.190
第一个页面呢

02:17.190 --> 02:19.190
就是index吧

02:19.190 --> 02:22.140
手页

02:22.140 --> 02:24.140
这里出出一个手页

02:24.140 --> 02:26.140
所有人都可以访问

02:26.140 --> 02:28.140
然后呢有个灯路页

02:29.140 --> 02:31.140
这是个灯路页

02:33.140 --> 02:35.140
然后我们这里写个文明框

02:35.140 --> 02:37.140
input

02:37.140 --> 02:38.140
text

02:38.140 --> 02:42.140
我们这里写上就是请书账号

02:42.140 --> 02:44.140
账号

02:44.140 --> 02:46.140
然后这里写个密码

02:46.140 --> 02:48.140
input

02:48.140 --> 02:49.140
type的语

02:49.140 --> 02:51.140
password

02:51.140 --> 02:54.140
下面人要写个按钮

02:54.140 --> 02:56.140
灯路

02:56.140 --> 02:59.140
我们来稍微磨立一下灯路功能

02:59.140 --> 03:00.140
稍微磨立一下

03:00.140 --> 03:02.140
我们写上这么

03:02.140 --> 03:03.140
还有一个就是

03:03.140 --> 03:04.140
个人信息线

03:04.140 --> 03:05.140
个人信息线

03:05.140 --> 03:06.140
有欢迎

03:06.140 --> 03:08.140
Welcome

03:08.140 --> 03:09.140
第二件事

03:09.140 --> 03:11.140
这是欢迎

03:11.140 --> 03:13.140
欢迎你

03:13.140 --> 03:14.140
谁谁谁

03:14.140 --> 03:16.140
咱们稍微写一下

03:16.140 --> 03:17.140
login里边

03:17.140 --> 03:19.140
账号密码

03:19.140 --> 03:22.140
然后我看一下

03:22.140 --> 03:23.140
账号密码

03:23.140 --> 03:24.140
然后点灯路

03:24.140 --> 03:27.140
然后点灯路

03:27.140 --> 03:30.650
灯路过后

03:30.650 --> 03:31.650
我判断一下

03:31.650 --> 03:32.650
账号密码是否正确

03:32.650 --> 03:33.650
那么这里呢

03:33.650 --> 03:34.650
是不是要使用ref

03:34.650 --> 03:35.650
对吧

03:35.650 --> 03:37.650
useref

03:37.650 --> 03:38.650
好

03:38.650 --> 03:39.650
这里我们使用

03:39.650 --> 03:41.650
txt

03:41.650 --> 03:43.650
login id

03:43.650 --> 03:44.650
就是

03:44.650 --> 03:46.650
useref

03:46.650 --> 03:47.650
一个

03:47.650 --> 03:48.650
txt

03:48.650 --> 03:49.650
login password

03:49.650 --> 03:51.650
账号密码

03:51.650 --> 03:52.650
然后这里呢

03:52.650 --> 03:53.650
该加上ref

03:54.650 --> 03:55.650
txt

03:55.650 --> 03:56.650
login id

03:56.650 --> 03:57.650
好

03:57.650 --> 03:58.650
这里呢

03:58.650 --> 03:59.650
该加上ref

03:59.650 --> 04:00.650
txt

04:00.650 --> 04:01.650
txt

04:01.650 --> 04:04.020
login password

04:04.020 --> 04:05.020
好

04:05.020 --> 04:06.020
然后灯路的时候

04:06.020 --> 04:07.020
我们判断一下

04:07.020 --> 04:08.020
账号密码是否正确

04:08.020 --> 04:09.020
我就有简单的判断

04:09.020 --> 04:10.020
当然这里

04:10.020 --> 04:11.020
肯定要用阿德克斯请求

04:11.020 --> 04:12.020
我自己懒得弄了

04:12.020 --> 04:13.020
简单判断一下

04:13.020 --> 04:14.020
如果Value

04:14.020 --> 04:16.020
如果说等于耳朵密

04:17.020 --> 04:19.020
并且密码

04:19.020 --> 04:20.020
或者说Value等于

04:20.020 --> 04:21.020
这个账号等于

04:21.020 --> 04:22.020
任何字都可以

04:22.020 --> 04:23.020
我们就磨立一下

04:23.020 --> 04:24.020
只要你密码了

04:24.020 --> 04:25.020
等于123123

04:25.020 --> 04:27.020
那么就表示灯路成功

04:29.020 --> 04:30.020
灯路成功

04:30.020 --> 04:31.020
灯路成功

04:31.020 --> 04:33.020
跳转到

04:33.020 --> 04:34.020
欢迎

04:34.020 --> 04:35.020
灯路成功

04:35.020 --> 04:36.020
我们首先把这个

04:36.020 --> 04:37.020
账号来保存到

04:37.020 --> 04:39.020
保存账号

04:39.020 --> 04:41.020
到local storage

04:41.020 --> 04:42.020
就是

04:42.020 --> 04:43.020
对

04:43.020 --> 04:44.020
local storage

04:44.020 --> 04:46.020
set item

04:46.020 --> 04:47.020
login id

04:47.020 --> 04:48.020
账号来保存什么

04:48.020 --> 04:49.020
txt

04:49.020 --> 04:50.020
login id

04:50.020 --> 04:51.020
current

04:51.020 --> 04:52.020
vary

04:52.020 --> 04:53.020
只要你账号密码正确

04:53.020 --> 04:55.020
我就把你保存进去

04:55.020 --> 04:56.020
然后完成跳转

04:56.020 --> 04:57.020
好

04:57.020 --> 04:58.020
跳转很简单

04:58.020 --> 04:59.020
咱们之前上节课说过

04:59.020 --> 05:00.020
用什么呢

05:00.020 --> 05:01.020
用那个rotor

05:01.020 --> 05:02.020
对吧

05:02.020 --> 05:03.020
from 5米

05:04.020 --> 05:05.020
rotor

05:06.020 --> 05:07.020
好

05:07.020 --> 05:08.020
然后我们

05:08.020 --> 05:09.020
跳转

05:09.020 --> 05:10.020
push

05:10.020 --> 05:11.020
跳到那

05:11.020 --> 05:12.020
跳到local

05:14.020 --> 05:15.020
跳到这个地址

05:15.020 --> 05:16.020
好就完了

05:16.020 --> 05:17.020
就完了

05:17.020 --> 05:18.020
账号密码错误的话

05:18.020 --> 05:19.020
我们就

05:19.020 --> 05:20.020
l4

05:21.020 --> 05:22.020
拉扯一个嘛

05:22.020 --> 05:23.020
账号

05:23.020 --> 05:25.020
货密码错误

05:25.020 --> 05:26.020
这就是个灯路页

05:26.020 --> 05:27.020
对吧

05:27.020 --> 05:28.020
非常简单

05:28.020 --> 05:29.020
咱们来看一下吧

05:30.020 --> 05:32.460
5米

05:33.460 --> 05:34.460
ya start

05:35.460 --> 05:36.460
运起来

05:36.460 --> 05:37.460
咱们来看一下

05:37.460 --> 05:39.460
先不着急写什么

05:39.460 --> 05:40.460
路由配置

05:40.460 --> 05:41.460
先不着急写

05:41.460 --> 05:42.460
咱们先把意面做好

05:42.460 --> 05:44.460
为了后边演示效果

05:47.460 --> 05:48.460
稍等一下

05:49.460 --> 05:52.030
喝水

05:59.400 --> 06:00.400
这首页

06:00.400 --> 06:01.400
对吧

06:01.400 --> 06:02.400
然后呢

06:02.400 --> 06:03.400
locking

06:03.400 --> 06:04.400
灯路页

06:04.400 --> 06:05.400
账号密码

06:05.400 --> 06:06.400
如果谁愿意写的话

06:06.400 --> 06:07.400
灯路

06:07.400 --> 06:08.400
账号密码错误

06:08.400 --> 06:09.400
如果密码写123123

06:09.400 --> 06:10.400
哎灯路

06:10.400 --> 06:11.400
是不是跳过来了

06:11.400 --> 06:12.400
对吧

06:12.400 --> 06:13.400
好那么接下来一个欢迎页

06:13.400 --> 06:14.400
欢迎页的话

06:14.400 --> 06:15.400
我们这里呢

06:15.400 --> 06:16.400
就把什么显示出来

06:16.400 --> 06:18.400
是不是把账号密码

06:18.400 --> 06:19.400
把账号显示出来

06:19.400 --> 06:20.400
欢迎你谁谁

06:20.400 --> 06:21.400
好

06:21.400 --> 06:22.400
那么这个账号呢很简单

06:22.400 --> 06:23.400
账号很简单

06:23.400 --> 06:24.400
我们这里呢

06:24.400 --> 06:25.400
locking id

06:25.400 --> 06:26.400
是不是取出来

06:26.400 --> 06:27.400
local storage

06:27.400 --> 06:28.400
对吧

06:28.400 --> 06:29.400
是不是取出来

06:29.400 --> 06:30.400
然后呢

06:30.400 --> 06:31.400
locking id

06:32.400 --> 06:33.400
把这个放在这

06:33.400 --> 06:34.400
对吧

06:34.400 --> 06:35.400
都不要属性了

06:35.400 --> 06:36.400
不用不需要属性

06:36.400 --> 06:37.400
直接放在这就行了

06:37.400 --> 06:38.400
欢迎你

06:38.400 --> 06:39.400
是不是显示出来了

06:39.400 --> 06:40.400
对吧

06:40.400 --> 06:42.400
然后我们账号重新灯路一个

06:42.400 --> 06:43.400
啊

06:43.400 --> 06:44.400
然后说

06:44.400 --> 06:45.400
啊

06:45.400 --> 06:46.400
呃

06:46.400 --> 06:47.400
远信

06:47.400 --> 06:48.400
123123

06:48.400 --> 06:49.400
点灯路

06:49.400 --> 06:50.400
是吧

06:50.400 --> 06:51.400
所以放过去了

06:51.400 --> 06:52.400
对吧

06:52.400 --> 06:53.400
然后我们这里再写个注销

06:53.400 --> 06:54.400
再写个注销

06:55.400 --> 06:56.400
button

06:56.400 --> 06:57.400
注销

06:57.400 --> 06:58.400
就注销的路

06:58.400 --> 06:59.400
unclick

06:59.400 --> 07:00.400
嗯

07:00.400 --> 07:01.400
unclick

07:02.400 --> 07:03.400
啊

07:03.400 --> 07:04.400
我们先把这个稍微实现一下啊

07:04.400 --> 07:05.400
呃

07:05.400 --> 07:06.400
其实很简单

07:06.400 --> 07:07.400
就是local storage

07:07.400 --> 07:08.400
啊什么set item

07:08.400 --> 07:09.400
啊叫什么clear

07:10.400 --> 07:11.400
啊

07:11.400 --> 07:12.400
不

07:12.400 --> 07:13.400
clear是全部全部清楚了

07:13.400 --> 07:14.400
对吧

07:14.400 --> 07:15.400
set item

07:16.400 --> 07:17.400
啊

07:17.400 --> 07:18.400
locking id

07:18.400 --> 07:19.400
把设为上了

07:19.400 --> 07:20.400
把设为啊

07:20.400 --> 07:21.400
nau

07:21.400 --> 07:22.400
啊

07:22.400 --> 07:23.400
然后呢

07:23.400 --> 07:24.400
是不是跳转

07:24.400 --> 07:25.400
对吧

07:25.400 --> 07:26.400
啊

07:26.400 --> 07:27.400
现在写跳转特别特别简单

07:27.400 --> 07:28.400
啊

07:28.400 --> 07:29.400
当然也可以使用他里边的什么

07:29.400 --> 07:30.400
还有我们换种销售方式吗

07:30.400 --> 07:31.400
他里边不是有个

07:31.400 --> 07:32.400
传了个属性进来吗

07:32.400 --> 07:33.400
history

07:33.400 --> 07:34.400
对不对

07:34.400 --> 07:35.400
啊

07:35.400 --> 07:36.400
这个地方是不是也可以跳转

07:36.400 --> 07:37.400
用这个history也可以跳转

07:37.400 --> 07:38.400
都行

07:38.400 --> 07:39.400
啊

07:39.400 --> 07:40.400
poosh

07:40.400 --> 07:41.400
啊

07:41.400 --> 07:42.400
跑到哪

07:42.400 --> 07:43.400
跑到灯路去

07:43.400 --> 07:44.400
对吧

07:44.400 --> 07:45.400
写完了

07:45.400 --> 07:46.400
好

07:46.400 --> 07:47.400
保存啊

07:47.400 --> 07:48.400
保存

07:48.400 --> 07:49.400
咱们看一下啊

07:49.400 --> 07:50.400
注销

07:50.400 --> 07:51.400
就跳过来了

07:51.400 --> 07:52.400
对吧

07:52.400 --> 07:53.400
然后我们再回到灯路页

07:53.400 --> 07:54.400
对不对

07:54.400 --> 07:55.400
一个是灯路页

07:55.400 --> 07:57.400
咱们还是写个

07:57.400 --> 07:58.400
要不然还是写个那个吧

07:58.400 --> 07:59.400
写个导航彩单

07:59.400 --> 08:01.400
你看现在导航彩单特别好写啊

08:01.400 --> 08:02.400
就写个layout玩的时候

08:03.400 --> 08:04.400
index

08:04.400 --> 08:05.400
gst

08:05.400 --> 08:06.400
写个导航彩单

08:07.400 --> 08:08.400
fc

08:09.400 --> 08:11.400
这里写上

08:11.400 --> 08:12.400
有

08:12.400 --> 08:13.400
有三个

08:13.400 --> 08:14.400
就是link

08:14.400 --> 08:15.400
三个link

08:15.400 --> 08:16.400
三个navlink

08:16.400 --> 08:18.400
navlink

08:18.400 --> 08:19.400
from

08:20.400 --> 08:22.400
不密

08:22.400 --> 08:23.400
navlink

08:24.400 --> 08:26.400
咱们稍微的去写一下样式

08:26.400 --> 08:28.400
稍微的写一下样式

08:28.400 --> 08:30.400
我们这里写这么

08:30.400 --> 08:31.400
三个

08:32.400 --> 08:33.400
navlink元素

08:34.400 --> 08:36.400
稍微的写一下样式

08:36.400 --> 08:37.400
其实这个样式呢

08:37.400 --> 08:39.400
我们后边还会详细讲

08:39.400 --> 08:41.400
它这里面对样式也做了决定的

08:41.400 --> 08:42.400
样式呢

08:42.400 --> 08:43.400
我们到时候还会讲

08:43.400 --> 08:44.400
我们这里就先随便写一个嘛

08:44.400 --> 08:46.400
index css

08:47.400 --> 08:48.400
好

08:48.400 --> 08:49.400
然后我们这里

08:49.400 --> 08:50.400
navlink

08:50.400 --> 08:51.400
这里呢

08:51.400 --> 08:52.400
嗯

08:55.350 --> 08:56.350
这是一个

08:56.350 --> 08:57.350
到手页

08:58.350 --> 08:59.350
然后呢

08:59.350 --> 09:00.350
这是

09:00.350 --> 09:02.350
登录页

09:03.350 --> 09:04.350
登录页

09:06.350 --> 09:08.350
欢迎页

09:08.350 --> 09:09.350
欢迎页

09:09.350 --> 09:10.350
2

09:11.350 --> 09:12.350
这个2的用法

09:12.350 --> 09:13.350
跟那个之前我们学过

09:13.350 --> 09:14.350
readrot里面的用法

09:14.350 --> 09:15.350
是完全一样的

09:15.350 --> 09:16.350
没有任何区别

09:17.350 --> 09:18.350
登录页

09:18.350 --> 09:19.350
locking

09:20.350 --> 09:21.350
欢迎页

09:22.350 --> 09:25.560
welcome

09:25.560 --> 09:26.560
好

09:26.560 --> 09:27.560
写好了

09:27.560 --> 09:28.560
我们在 css 里面

09:28.560 --> 09:29.560
稍微设置一下样式

09:29.560 --> 09:30.560
随着 a 元素

09:30.560 --> 09:31.560
随着 a 元素

09:31.560 --> 09:32.560
给它一个什么样式呢

09:32.560 --> 09:34.560
给它一个就是 margin

09:34.560 --> 09:35.560
上下五零

09:35.560 --> 09:36.560
左右了为三十个相数

09:36.560 --> 09:37.560
好

09:37.560 --> 09:38.560
保存

09:39.560 --> 09:40.560
来

09:40.560 --> 09:41.560
刷新一下

09:41.560 --> 09:42.560
是吧

09:44.560 --> 09:45.560
我的

09:45.560 --> 09:46.560
没放 children

09:47.560 --> 09:52.090
没有放 children

09:52.090 --> 09:53.090
probs

09:53.090 --> 09:55.660
probs

09:55.660 --> 09:56.660
叫 children

09:57.660 --> 09:58.660
好

09:59.660 --> 10:00.660
呀

10:00.660 --> 10:01.660
是爆错了吗

10:01.660 --> 10:02.660
我看呀

10:02.660 --> 10:03.660
没有爆错

10:03.660 --> 10:05.660
layout

10:06.660 --> 10:07.660
layout

10:07.660 --> 10:09.660
indexer.js

10:13.060 --> 10:15.060
我这里好像没起作用呢

10:15.060 --> 10:18.500
我这里的就是

10:18.500 --> 10:19.500
我这里的就是

10:19.500 --> 10:21.500
这个东西没有起作用啊

10:21.500 --> 10:26.980
我看一下怎么回事啊

10:26.980 --> 10:27.980
当然肯定不是这个原因啊

10:27.980 --> 10:28.980
我先把

10:29.980 --> 10:30.980
这样改一下

10:30.980 --> 10:31.980
稍微改一下

10:31.980 --> 10:32.980
当然肯定不是这个原因

10:32.980 --> 10:33.980
我看一下

10:33.980 --> 10:35.980
哪里写错了

10:35.980 --> 10:37.980
layout

10:37.980 --> 10:41.320
layout

10:41.320 --> 10:43.320
indexer.js

10:44.320 --> 10:46.320
我看一下它生成的路由配置

10:47.320 --> 10:48.320
生成的路由配置

10:48.320 --> 10:49.320
并不包含这个

10:49.320 --> 10:50.320
看没

10:50.320 --> 10:52.320
它并不包含我们的 layout

10:52.320 --> 10:56.820
并不包含我们的 layout

10:58.820 --> 11:00.820
或者说哪里写错了

11:00.820 --> 11:01.820
我来找一找啊

11:01.820 --> 11:02.820
无米

11:02.820 --> 11:04.820
看一下那个就是

11:04.820 --> 11:06.820
它的那个

11:06.820 --> 11:08.820
物路级约定

11:11.820 --> 11:13.820
我觉得应该是个很少的问题

11:13.820 --> 11:14.820
layout

11:14.820 --> 11:15.820
加个 s

11:15.820 --> 11:16.820
好

11:16.820 --> 11:17.820
行了啊

11:17.820 --> 11:18.820
咱们看一下

11:18.820 --> 11:20.820
上音

11:20.820 --> 11:21.820
呀

11:21.820 --> 11:23.820
所以重新保存一下啊

11:23.820 --> 11:24.820
保存一下

11:25.820 --> 11:26.820
还不行

11:26.820 --> 11:30.140
layout

11:30.140 --> 11:32.140
indexer.js

11:34.700 --> 11:36.700
为什么还不行呢

11:36.700 --> 11:38.700
看一下它的路由配置

11:38.700 --> 11:40.700
还是没有我们的写的 layout

11:40.700 --> 11:41.700
看没

11:41.700 --> 11:42.700
还是没有

11:42.700 --> 11:44.700
这哪里写错了

11:45.700 --> 11:47.700
srclayout

11:47.700 --> 11:53.380
写对了的呀

11:53.380 --> 11:54.380
没问题啊

11:55.380 --> 11:57.380
是它没有重新编译吗

11:57.380 --> 11:59.380
这里随便打几个风格保存

11:59.380 --> 12:01.380
让它重新编译一下

12:01.380 --> 12:02.380
看一下rotor

12:02.380 --> 12:03.380
对了

12:03.380 --> 12:04.380
现在对了

12:04.380 --> 12:05.380
现在对了

12:05.380 --> 12:06.380
那么现在呢

12:06.380 --> 12:07.380
是不是出来了

12:07.380 --> 12:09.380
但是样式没有应用进去

12:09.380 --> 12:10.380
我们这里导入样式

12:10.380 --> 12:11.380
import

12:12.380 --> 12:14.380
indexer.js

12:14.380 --> 12:15.380
OK

12:15.380 --> 12:16.380
把样式导入进来

12:17.380 --> 12:18.380
抓紧

12:18.380 --> 12:19.380
是不是应用进去了

12:20.380 --> 12:21.380
你看切换

12:21.380 --> 12:23.380
首页 登录页 欢迎页

12:23.380 --> 12:24.380
所以就可以切换了

12:24.380 --> 12:25.380
对吧

12:25.380 --> 12:27.380
那么这一块呢

12:27.380 --> 12:28.380
基本搞定了

12:30.380 --> 12:31.380
算了

12:31.380 --> 12:32.380
就这样吧

12:32.380 --> 12:33.380
样式这一块

12:33.380 --> 12:34.380
不用太贵关心

12:34.380 --> 12:36.380
样式我们后面还会装名奖

12:36.380 --> 12:38.380
它里边还有一些特点

12:38.380 --> 12:40.380
好 差不多了

12:40.380 --> 12:41.380
现在呢

12:41.380 --> 12:43.380
我们目前使用的路由

12:43.380 --> 12:44.380
是不是

12:45.380 --> 12:46.380
约定式路由

12:46.380 --> 12:47.380
对吧

12:47.380 --> 12:48.380
它会根据我们的约定

12:48.380 --> 12:49.380
然后呢

12:49.380 --> 12:50.380
在这里面是生成配置

12:50.380 --> 12:51.380
对吧

12:51.380 --> 12:52.380
生成这样的一种配置

12:52.380 --> 12:53.380
那么这些可能

12:53.380 --> 12:55.380
我们要学习配置式路由

12:55.380 --> 12:56.380
配置式路由的话

12:56.380 --> 12:58.380
就是你自己写配置

12:58.380 --> 13:01.380
如果你一旦使用了配置的话

13:01.380 --> 13:02.380
约定

13:02.380 --> 13:03.380
失效

13:03.380 --> 13:04.380
你的约定

13:04.380 --> 13:05.380
约定式路由就失效了

13:05.380 --> 13:06.380
所以说

13:06.380 --> 13:09.380
当使用了路由配置后

13:10.380 --> 13:12.380
约定式路由

13:12.380 --> 13:14.380
全部失效

13:14.380 --> 13:15.380
你的配置

13:15.380 --> 13:16.380
里边就不再是

13:16.380 --> 13:17.380
什么页面

13:17.380 --> 13:18.380
就是普通的一个文件

13:18.380 --> 13:20.380
你要自己去写配置了

13:20.380 --> 13:21.380
所以说我们通常

13:21.380 --> 13:23.380
一般补太会去写的那种

13:23.380 --> 13:24.380
配置式路由

13:24.380 --> 13:25.380
不太会

13:25.380 --> 13:26.380
好 那么如果说

13:26.380 --> 13:27.380
要写配置式路由

13:27.380 --> 13:28.380
怎么写呢

13:28.380 --> 13:29.380
大家这就可以要听

13:29.380 --> 13:30.380
这就可以要听

13:30.380 --> 13:31.380
这就可以还是有

13:31.380 --> 13:32.380
重要的东西的

13:32.380 --> 13:33.380
虽然说我们配置式路由

13:33.380 --> 13:34.380
以后不用

13:34.380 --> 13:35.380
不太会用

13:35.380 --> 13:36.380
用的都是约定式路由

13:36.380 --> 13:37.380
但是这里边

13:37.380 --> 13:38.380
会学到一些新东西

13:38.380 --> 13:39.380
对我们约定式路由

13:39.380 --> 13:40.380
也是有帮助的

13:40.380 --> 13:42.380
所以说一定要认真听

13:42.380 --> 13:44.380
好 配置有两种方式

13:44.380 --> 13:46.380
两种方式

13:46.380 --> 13:48.380
书写5米配置

13:48.380 --> 13:50.380
哪两种方式呢

13:50.380 --> 13:51.380
第一种方式是

13:51.380 --> 13:53.380
根木路

13:53.380 --> 13:55.380
使用根木路文件

13:55.380 --> 13:58.380
根木路下的文件

13:58.380 --> 13:59.380
什么文件呢

13:59.380 --> 14:00.380
叫做

14:00.380 --> 14:02.380
5米RC.js

14:02.380 --> 14:03.380
使用这个文件

14:03.380 --> 14:04.380
来书写配置

14:04.380 --> 14:06.380
第二种方式是

14:06.380 --> 14:08.380
使用

14:08.380 --> 14:10.380
根木路下的

14:10.380 --> 14:12.380
根

14:12.380 --> 14:14.380
木路下的文件

14:14.380 --> 14:15.380
哪个文件呢

14:15.380 --> 14:17.380
config 木路下面的

14:17.380 --> 14:19.380
config.js

14:19.380 --> 14:22.380
这两个文件都可以写配置

14:22.380 --> 14:24.380
任选其一都可以

14:24.380 --> 14:25.380
都可以

14:25.380 --> 14:26.380
但是只有一个

14:26.380 --> 14:27.380
会发挥作用

14:27.380 --> 14:28.380
你不要两个都写

14:28.380 --> 14:29.380
只有一个会发挥作用

14:29.380 --> 14:31.380
好 那么这里呢

14:31.380 --> 14:33.380
我们使用的是

14:33.380 --> 14:34.380
我们通常使用的是

14:34.380 --> 14:35.380
5米

14:35.380 --> 14:36.380
当然这个也不一定

14:36.380 --> 14:38.380
你看你公司里面的习惯

14:38.380 --> 14:40.380
使用这个

14:40.380 --> 14:43.380
不 在src

14:43.380 --> 14:47.140
在根木路下面

14:47.140 --> 14:49.140
在根木路下面

14:49.140 --> 14:51.140
写这么一个文件

14:51.140 --> 14:53.140
5米RC.js

14:53.140 --> 14:55.140
那么这个文件怎么写呢

14:55.140 --> 14:56.140
export default

14:56.140 --> 14:57.140
导出一个对象

14:57.140 --> 14:59.140
这个对象就是配置

14:59.140 --> 15:01.140
这里边不仅仅是有路由配置

15:01.140 --> 15:03.140
它配置非常非常多

15:03.140 --> 15:04.140
你看一下我们这里

15:04.140 --> 15:05.140
里面有配置

15:05.140 --> 15:06.140
这里面有菜单

15:06.140 --> 15:08.140
你看它配置非常非常多

15:08.140 --> 15:10.140
不仅仅是有路由配置

15:10.140 --> 15:12.140
还有包括WePack的配置

15:12.140 --> 15:13.140
有非常非常多的配置

15:13.140 --> 15:14.140
后面我们咱们会专门

15:14.140 --> 15:15.140
拿一节课

15:15.140 --> 15:17.140
来单独提一些比较常距

15:17.140 --> 15:18.140
建的配置

15:18.140 --> 15:20.140
来拿出来单独讲一下

15:20.140 --> 15:22.140
这是关于配置

15:22.140 --> 15:24.140
配置呢我们就写了这个文件

15:24.140 --> 15:25.140
导出一个对象

15:25.140 --> 15:27.140
那么我们路由怎么配置呢

15:27.140 --> 15:29.140
路由只是这些配置当中的

15:29.140 --> 15:30.140
一个配置像

15:30.140 --> 15:31.140
只是它的一个配置像

15:31.140 --> 15:32.140
你看一下它的路由是哪一个

15:32.140 --> 15:34.140
就是road

15:35.140 --> 15:36.140
就是配置这个东西

15:36.140 --> 15:37.140
所以说路由的话

15:37.140 --> 15:38.140
是不是配置到这儿

15:38.140 --> 15:39.140
road

15:39.140 --> 15:40.140
配置到这儿

15:40.140 --> 15:41.140
当然你这一块

15:41.140 --> 15:42.140
也可以单独再写一个文件

15:42.140 --> 15:44.140
再分化一个文件出去

15:44.140 --> 15:46.140
如果你觉得这里写的

15:46.140 --> 15:47.140
太繁硕的话也可以

15:47.140 --> 15:49.140
咱们单独分化一个文件出去

15:49.140 --> 15:50.140
来写这个路由配置

15:50.140 --> 15:52.140
然后这里把导入就完成了

15:52.140 --> 15:54.140
好那么这个地方写啥呢

15:54.140 --> 15:55.140
写的是一个数组

15:55.140 --> 15:56.140
其实它这里的配置

15:56.140 --> 15:58.140
跟这里很相似

15:58.140 --> 16:00.140
几乎就是一样的

16:00.140 --> 16:01.140
你看这个road

16:01.140 --> 16:02.140
是不是一个配置

16:02.140 --> 16:03.140
就是一个对象

16:03.140 --> 16:04.140
那么这个对象就是配置

16:04.140 --> 16:06.140
就是配置

16:06.140 --> 16:07.140
没问题吧

16:07.140 --> 16:09.140
好然后我们这里

16:09.140 --> 16:11.140
就去书写这么一个路由配置

16:11.140 --> 16:12.140
好那么路由配置里

16:12.140 --> 16:13.140
表示一个数组

16:13.140 --> 16:14.140
表示有多个路由

16:14.140 --> 16:16.140
对吧每个地址

16:16.140 --> 16:17.140
对应一个组件

16:17.140 --> 16:18.140
那么每个配置

16:18.140 --> 16:19.140
事实上

16:21.140 --> 16:24.140
进行路由配置时

16:24.140 --> 16:26.140
进行路由配置时

16:26.140 --> 16:28.140
每个配置

16:28.140 --> 16:29.140
每个配置

16:29.140 --> 16:32.140
就是一个匹配规则

16:32.140 --> 16:33.140
就是一个匹配规则

16:33.140 --> 16:36.140
并且每个配置

16:36.140 --> 16:38.140
是一个对象

16:38.140 --> 16:39.140
是一个对象

16:39.140 --> 16:41.140
这些对象里面的数相

16:41.140 --> 16:45.140
对象中的某些数相

16:45.140 --> 16:48.140
会直接形成

16:48.140 --> 16:51.140
road组件的数相

16:51.140 --> 16:52.140
会直接形成

16:52.140 --> 16:53.140
road组件的数相

16:53.140 --> 16:54.140
什么意思呢

16:54.140 --> 16:55.140
就是说比方说

16:55.140 --> 16:56.140
我们写road组件

16:56.140 --> 16:57.140
它又不是

16:57.140 --> 16:58.140
有配置的数相

16:58.140 --> 16:59.140
配置什么数相

16:59.140 --> 17:00.140
是不是配置

17:00.140 --> 17:01.140
一个pass数相

17:01.140 --> 17:03.140
pass数相里面

17:03.140 --> 17:05.140
咱们是不是

17:05.140 --> 17:07.140
匹配一个component

17:07.140 --> 17:08.140
匹配一个component

17:08.140 --> 17:09.140
那么这些数相

17:09.140 --> 17:10.140
就直接写到对象里面

17:10.140 --> 17:11.140
它会最终会形成

17:11.140 --> 17:12.140
road组件

17:12.140 --> 17:13.140
给你进行配置

17:13.140 --> 17:14.140
就这么简单

17:14.140 --> 17:15.140
好

17:15.140 --> 17:17.140
这component是啥呢

17:17.140 --> 17:18.140
它无非就是

17:18.140 --> 17:19.140
也是一个支付串

17:19.140 --> 17:20.140
我们以前要咋写

17:20.140 --> 17:21.140
是不是要写组件

17:21.140 --> 17:22.140
对不对

17:22.140 --> 17:23.140
是不是要写组件

17:23.140 --> 17:24.140
那么在这里

17:24.140 --> 17:25.140
就不用写组件了

17:25.140 --> 17:26.140
不用写组件了

17:26.140 --> 17:27.140
当然你要写组件的话

17:27.140 --> 17:29.140
你要去导入react

17:29.140 --> 17:30.140
也挺麻烦的

17:30.140 --> 17:31.140
我们不用去写组件了

17:31.140 --> 17:33.140
我们直接写一个路径就行了

17:33.140 --> 17:34.140
直接写路径

17:34.140 --> 17:36.140
它会自己帮你进行处理

17:36.140 --> 17:38.140
那么跟路径是相对于谁呢

17:38.140 --> 17:39.140
相对的是

17:39.140 --> 17:41.140
src目录下面的配置数文件夹

17:41.140 --> 17:43.140
这个大家一定要注意

17:43.140 --> 17:45.140
这个组件component

17:45.140 --> 17:48.140
就是要注意

17:48.140 --> 17:49.140
注意一下

17:49.140 --> 17:51.140
注意

17:51.140 --> 17:53.140
第一个就是

17:53.140 --> 17:56.140
component配置相

17:56.140 --> 17:58.140
需要填写

17:58.140 --> 18:01.140
需要填写就是

18:01.140 --> 18:05.140
页面路径

18:05.140 --> 18:07.140
页面组件的路径

18:07.140 --> 18:11.140
路径相对于谁呢

18:11.140 --> 18:13.140
相对于配置数文件夹

18:13.140 --> 18:15.140
相对于配置数文件夹

18:15.140 --> 18:17.140
就是src配置数文件夹

18:17.140 --> 18:18.140
所以说你这里

18:18.140 --> 18:19.140
就不要再去写什么

18:19.140 --> 18:20.140
底儿写纲

18:20.140 --> 18:22.140
src配置数文件夹

18:22.140 --> 18:23.140
就不要去写这个

18:23.140 --> 18:24.140
你直接写配置

18:24.140 --> 18:25.140
就直接相对配置数文件夹

18:25.140 --> 18:26.140
是不是

18:26.140 --> 18:27.140
就是index.js

18:27.140 --> 18:28.140
对吧

18:28.140 --> 18:29.140
无非就是这个

18:29.140 --> 18:30.140
是这个意思吧

18:30.140 --> 18:31.140
或者说就直接点谁

18:31.140 --> 18:32.140
点谁

18:32.140 --> 18:33.140
然后里边不是默认

18:33.140 --> 18:35.140
就是index.js

18:35.140 --> 18:36.140
对不对

18:36.140 --> 18:37.140
好保存一下

18:37.140 --> 18:38.140
保存一下

18:38.140 --> 18:39.140
那咱们看一下

18:39.140 --> 18:40.140
首页是不是出来了

18:40.140 --> 18:41.140
对不对

18:41.140 --> 18:42.140
首页出来了

18:42.140 --> 18:43.140
好

18:43.140 --> 18:44.140
然后我们再访问登录页呢

18:44.140 --> 18:45.140
login

18:45.140 --> 18:46.140
登录页有没有

18:46.140 --> 18:47.140
还有什么

18:47.140 --> 18:48.140
welcome

18:48.140 --> 18:49.140
有没有

18:49.140 --> 18:50.140
说明啥

18:50.140 --> 18:51.140
说明就是我们刚才说的

18:51.140 --> 18:52.140
当你写了配置过后

18:52.140 --> 18:54.140
之前的约定全部失效

18:54.140 --> 18:55.140
你这个配置里边

18:55.140 --> 18:57.140
写了再多东西没用

18:57.140 --> 18:58.140
它不会给你形成配置了

18:58.140 --> 18:59.140
然后我们看一下

18:59.140 --> 19:01.140
这个5米这个文件里边

19:01.140 --> 19:02.140
这个rotor

19:02.140 --> 19:03.140
这个rotor

19:03.140 --> 19:04.140
那么这个rotor里边

19:04.140 --> 19:05.140
你看一下

19:05.140 --> 19:06.140
它给你生成的路由配置

19:06.140 --> 19:07.140
是不是只有一个

19:07.140 --> 19:08.140
对吧

19:08.140 --> 19:09.140
下面这个是它的

19:09.140 --> 19:11.140
它的默认的404

19:11.140 --> 19:13.140
部署之后这个会消失

19:13.140 --> 19:14.140
只有在开发模式

19:14.140 --> 19:15.140
下面才会存在

19:15.140 --> 19:16.140
默认的404

19:16.140 --> 19:17.140
你看一下吧

19:17.140 --> 19:18.140
C盘

19:18.140 --> 19:19.140
它用一个绝对路径

19:19.140 --> 19:21.140
它在全局

19:21.140 --> 19:22.140
就是压里边

19:22.140 --> 19:23.140
全局目录里边安装的

19:23.140 --> 19:25.140
找到这个not found的第2GS

19:25.140 --> 19:26.140
用这个组件

19:26.140 --> 19:28.140
作为默认的404页面

19:28.140 --> 19:29.140
你部署之后

19:29.140 --> 19:31.140
它就会消失了

19:31.140 --> 19:33.140
这里主要是为了方便你调试

19:33.140 --> 19:35.140
好吧

19:35.140 --> 19:36.140
然后我们这里

19:36.140 --> 19:37.140
你看一下

19:37.140 --> 19:38.140
上面就是我们写的配置

19:38.140 --> 19:39.140
它把它合并到这了

19:39.140 --> 19:40.140
看到没

19:40.140 --> 19:41.140
把生成到这了

19:41.140 --> 19:42.140
那么require

19:42.140 --> 19:43.140
是吧

19:43.140 --> 19:44.140
返回上一目录

19:44.140 --> 19:45.140
返回上一目录

19:45.140 --> 19:46.140
是不是配置

19:46.140 --> 19:47.140
配置里边

19:47.140 --> 19:48.140
找到因这个事

19:48.140 --> 19:49.140
第2GS

19:49.140 --> 19:50.140
当然如果你写完的话

19:50.140 --> 19:51.140
看上去

19:51.140 --> 19:52.140
更加

19:52.140 --> 19:54.140
容易理解一点

19:54.140 --> 19:55.140
第2GS

19:55.140 --> 19:56.140
保存

19:56.140 --> 19:58.140
咱们再看这个rot

19:58.140 --> 19:59.140
你看是不是

19:59.140 --> 20:00.140
返回上一目录

20:00.140 --> 20:01.140
因这个事

20:01.140 --> 20:02.140
第2GS

20:02.140 --> 20:03.140
这就是我们配置

20:03.140 --> 20:04.140
就放在这来

20:04.140 --> 20:05.140
它会把我们的配置

20:05.140 --> 20:07.140
混合到最终的配置里边去

20:07.140 --> 20:08.140
就这么延伸

20:08.140 --> 20:09.140
所以说它会经过

20:09.140 --> 20:10.140
经过它的处理

20:10.140 --> 20:11.140
这个component这里

20:11.140 --> 20:12.140
你只需要相对于

20:12.140 --> 20:13.140
配几十文件夹就行了

20:13.140 --> 20:14.140
你不用去

20:14.140 --> 20:16.140
从根目录去找

20:16.140 --> 20:17.140
好了

20:17.140 --> 20:18.140
这是component

20:18.140 --> 20:19.140
所以说我们这里

20:19.140 --> 20:20.140
要实现

20:20.140 --> 20:21.140
是不是得继续写

20:21.140 --> 20:22.140
对吧

20:22.140 --> 20:23.140
pass

20:23.140 --> 20:24.140
为什么

20:24.140 --> 20:25.140
login

20:25.140 --> 20:27.140
当我们访问login的时候

20:27.140 --> 20:29.140
component

20:29.140 --> 20:30.140
是不是要访问

20:30.140 --> 20:31.140
哪里呢

20:31.140 --> 20:32.140
就是login

20:32.140 --> 20:33.140
第2GS

20:33.140 --> 20:34.140
对吧

20:34.140 --> 20:35.140
要访问login第2GS

20:35.140 --> 20:36.140
甚至我们都可以

20:36.140 --> 20:37.140
不用写DS

20:37.140 --> 20:38.140
不用写DS

20:38.140 --> 20:39.140
省略

20:39.140 --> 20:40.140
保存

20:40.140 --> 20:41.140
手页

20:41.140 --> 20:42.140
login

20:42.140 --> 20:43.140
你看是不是有了

20:43.140 --> 20:44.140
对吧

20:44.140 --> 20:45.140
还有一个welcome

20:45.140 --> 20:46.140
你看

20:46.140 --> 20:47.140
可以达到一样的

20:47.140 --> 20:48.140
一样的效果

20:48.140 --> 20:49.140
welcome

20:49.140 --> 20:50.140
这里边

20:50.140 --> 20:52.140
写上welcome

20:53.140 --> 20:54.140
保存

20:54.140 --> 20:55.140
你看一下

20:55.140 --> 20:57.140
这里welcome

20:57.140 --> 20:58.140
那么如果说

20:58.140 --> 20:59.140
你手写配置

20:59.140 --> 21:00.140
有什么好处呢

21:00.140 --> 21:01.140
手写配置的话

21:01.140 --> 21:02.140
要说好处的话

21:02.140 --> 21:03.140
好处又在于啥呢

21:03.140 --> 21:04.140
在于我这里

21:04.140 --> 21:06.140
就是可以

21:06.140 --> 21:08.140
随意的去更改

21:08.140 --> 21:09.140
随意的去更改

21:09.140 --> 21:10.140
这个路由规则

21:10.140 --> 21:11.140
比方说welcome

21:11.140 --> 21:12.140
我们比方说

21:12.140 --> 21:16.140
把它设置为welcome

21:16.140 --> 21:17.140
wlc

21:17.140 --> 21:18.140
可以这样子写

21:18.140 --> 21:19.140
对吧

21:19.140 --> 21:20.140
是可以这样子写的

21:20.140 --> 21:21.140
那么这里

21:21.140 --> 21:22.140
我们要访问wlc

21:22.140 --> 21:23.140
对不对

21:23.140 --> 21:24.140
就这么个意思

21:24.140 --> 21:25.140
就更加灵活一些

21:25.140 --> 21:26.140
其实

21:26.140 --> 21:27.140
这些东西

21:27.140 --> 21:28.140
我们以后再说

21:28.140 --> 21:29.140
在readings配置里面

21:29.140 --> 21:30.140
如果要完成

21:30.140 --> 21:31.140
其他的类似功能

21:31.140 --> 21:32.140
又该怎么去做

21:32.140 --> 21:33.140
其实也可以做的

21:33.140 --> 21:34.140
也可以做的

21:34.140 --> 21:36.140
然后配置项里边

21:36.140 --> 21:37.140
还可以去做

21:37.140 --> 21:39.140
一些自定义的属性

21:39.140 --> 21:40.140
就是随便你写

21:40.140 --> 21:41.140
什么属性都可以

21:41.140 --> 21:42.140
就是它虽然识别不了

21:42.140 --> 21:43.140
它虽然不产生作用

21:43.140 --> 21:44.140
但是你可能

21:44.140 --> 21:45.140
会自己拿到

21:45.140 --> 21:46.140
做一些处理

21:46.140 --> 21:47.140
比方说

21:47.140 --> 21:48.140
对吧

21:48.140 --> 21:49.140
可以写title

21:49.140 --> 21:50.140
这是首页

21:50.140 --> 21:51.140
首页

21:51.140 --> 21:53.140
这里写title

21:53.140 --> 21:55.140
这是

21:55.140 --> 21:58.140
这是登录页

21:58.140 --> 21:59.140
登录页

21:59.140 --> 22:00.140
然后这里

22:00.140 --> 22:01.140
怎么是中文都好

22:04.140 --> 22:05.140
然后这里

22:05.140 --> 22:06.140
这一块

22:06.140 --> 22:07.140
我们是

22:07.140 --> 22:08.140
给它写上一个

22:08.140 --> 22:10.140
就是欢迎页

22:10.140 --> 22:12.140
欢迎页

22:12.140 --> 22:13.140
好

22:13.140 --> 22:14.140
保存

22:14.140 --> 22:15.140
我们看一下页面

22:15.140 --> 22:16.140
页面这一块

22:16.140 --> 22:17.140
没有什么变化

22:17.140 --> 22:18.140
你看

22:18.140 --> 22:19.140
这一块

22:19.140 --> 22:20.140
倒是没有什么变化

22:20.140 --> 22:21.140
你看标题有吗

22:21.140 --> 22:22.140
页面标题有吗

22:22.140 --> 22:23.140
是没有

22:23.140 --> 22:24.140
是没有

22:24.140 --> 22:25.140
那么这个东西

22:25.140 --> 22:26.140
是自定义属性

22:26.140 --> 22:27.140
它识别不了

22:27.140 --> 22:28.140
但是它会

22:28.140 --> 22:29.140
原封不动的

22:29.140 --> 22:30.140
反应到哪呢

22:30.140 --> 22:32.140
反应到它的最终路由配置里边

22:32.140 --> 22:33.140
你看这东西是不是进去了

22:33.140 --> 22:34.140
对吧

22:34.140 --> 22:35.140
那么这个东西

22:35.140 --> 22:36.140
有什么好处呢

22:36.140 --> 22:37.140
你可以自行处理

22:37.140 --> 22:38.140
你可以配置

22:38.140 --> 22:39.140
任何其他的自定义属性

22:39.140 --> 22:40.140
比方说我们在这

22:40.140 --> 22:41.140
layout这里

22:41.140 --> 22:42.140
因为我们

22:42.140 --> 22:43.140
所有的页面

22:43.140 --> 22:44.140
都要用这个

22:44.140 --> 22:45.140
就是layout

22:45.140 --> 22:46.140
这个东西

22:46.140 --> 22:47.140
所以说

22:47.140 --> 22:48.140
我们可以在这里进行处理

22:48.140 --> 22:49.140
来这里进行处理

22:49.140 --> 22:50.140
处理的时候

22:50.140 --> 22:51.140
我们比方说

22:51.140 --> 22:52.140
就可以用这种方式吗

22:52.140 --> 22:53.140
每一次选择的时候

22:53.140 --> 22:54.140
你这个probs里边

22:54.140 --> 22:55.140
不是有这个东西吗

22:55.140 --> 22:56.140
打印出来

22:56.140 --> 22:57.140
probs

22:57.140 --> 22:58.140
你看一下吧

22:58.140 --> 22:59.140
probs

23:00.140 --> 23:02.140
看一下这个console控制台

23:02.140 --> 23:03.140
刷新

23:05.140 --> 23:07.140
我这还没有应用进去

23:07.140 --> 23:08.140
还没有把layout

23:08.140 --> 23:09.140
应用进去

23:09.140 --> 23:10.140
好

23:10.140 --> 23:11.140
行

23:11.140 --> 23:12.140
那来吧

23:12.140 --> 23:13.140
我们把layout

23:13.140 --> 23:14.140
应用进去

23:14.140 --> 23:15.140
没有使用layout

23:15.140 --> 23:16.140
看没

23:16.140 --> 23:17.140
所以没有使用layout

23:17.140 --> 23:18.140
那么我们要把layout

23:18.140 --> 23:19.140
应用进去

23:19.140 --> 23:20.140
怎么应用呢

23:20.140 --> 23:22.140
我们可以这样子写

23:22.140 --> 23:23.140
pass

23:23.140 --> 23:24.140
当我们访问

23:24.140 --> 23:25.140
任何的地址的时候

23:25.140 --> 23:26.140
当我们访问

23:26.140 --> 23:27.140
任何地址的时候

23:27.140 --> 23:28.140
然后

23:28.140 --> 23:30.140
我们要匹配到哪呢

23:30.140 --> 23:31.140
要匹配到这个layout

23:31.140 --> 23:32.140
任何地址

23:32.140 --> 23:33.140
都要匹配到这个layout

23:33.140 --> 23:35.140
匹配的component

23:35.140 --> 23:36.140
是什么呢

23:36.140 --> 23:37.140
是layout

23:37.140 --> 23:38.140
layout在哪

23:38.140 --> 23:39.140
注意

23:39.140 --> 23:40.140
一定注意

23:40.140 --> 23:41.140
目前文件夹

23:41.140 --> 23:43.140
是相对于配置文件夹

23:43.140 --> 23:45.140
你是不是得返回上级目录

23:46.140 --> 23:47.140
返回上级目录过后

23:47.140 --> 23:48.140
就到src

23:48.140 --> 23:50.140
然后再到layout

23:50.140 --> 23:51.140
然后再是什么

23:51.140 --> 23:53.140
index.js

23:53.140 --> 23:54.140
对吧

23:54.140 --> 23:55.140
所以这样子

23:55.140 --> 23:56.140
那么这样子

23:56.140 --> 23:57.140
是不是能匹配到layout

23:57.140 --> 23:58.140
看一下

23:58.140 --> 23:59.140
刷新

24:01.140 --> 24:03.140
这里可能又爆错了

24:03.140 --> 24:05.140
没有爆错

24:06.140 --> 24:08.140
我看一下

24:09.140 --> 24:11.140
我看一下生存的路由

24:11.140 --> 24:12.140
生存路由是哪

24:12.140 --> 24:13.140
rotor

24:15.140 --> 24:16.140
返回上级

24:16.140 --> 24:17.140
layout

24:18.140 --> 24:20.140
index.js

24:20.140 --> 24:21.140
没问题

24:21.140 --> 24:22.140
我看一下这里

24:22.140 --> 24:23.140
哪里

24:23.140 --> 24:25.140
为什么又匹配不上了

24:25.140 --> 24:27.140
又匹配不上了

24:27.140 --> 24:30.460
他应该

24:30.460 --> 24:32.460
应该所有的应该都匹配到这儿

24:32.460 --> 24:33.460
才行

24:33.460 --> 24:35.460
所有的应该都匹配到这儿

24:35.460 --> 24:36.460
这个匹配过来了

24:36.460 --> 24:38.460
然后再看login

24:38.460 --> 24:40.460
login没有匹配过来

24:40.460 --> 24:41.460
我看一下

24:41.460 --> 24:43.460
我们在rotor里边

24:43.460 --> 24:45.460
他给你自动

24:45.460 --> 24:47.460
因为你没有配置这个

24:47.460 --> 24:48.460
你没有配置这个

24:48.460 --> 24:49.460
他说他给你自动加了

24:49.460 --> 24:51.460
因为这个东西没认识

24:51.460 --> 24:52.460
这也是一个注意点

24:52.460 --> 24:54.460
我也经常忘记

24:54.460 --> 24:55.460
就是说

24:55.460 --> 24:56.460
如果配置向中

24:56.460 --> 24:58.460
如果配置向

24:58.460 --> 25:00.460
没有exact

25:00.460 --> 25:02.460
就精确匹配

25:02.460 --> 25:06.460
会自动添加exact

25:06.460 --> 25:08.460
为q

25:08.460 --> 25:10.460
会自动加那个配置

25:10.460 --> 25:11.460
这里很简单

25:11.460 --> 25:13.460
只要把它写上force就行了

25:13.460 --> 25:15.460
exact

25:15.460 --> 25:17.460
把它写上force就完事了

25:17.460 --> 25:19.460
不精确匹配

25:19.460 --> 25:21.460
现在访问任何地址

25:21.460 --> 25:22.460
是不是都匹配到这个了

25:22.460 --> 25:24.460
但是这不是我们想要的

25:24.460 --> 25:26.460
这是我们想要的是

25:26.460 --> 25:27.460
在这个里边

25:27.460 --> 25:29.460
还要继续进行匹配

25:29.460 --> 25:31.460
任何地址匹配到这个没问题

25:31.460 --> 25:32.460
但是匹配到这个之后

25:32.460 --> 25:34.460
还要继续匹配

25:34.460 --> 25:35.460
那怎么写呢

25:35.460 --> 25:37.460
它里边可以写上这个属性

25:37.460 --> 25:39.460
我们现在就换个行

25:40.460 --> 25:42.460
它里边还有这么一个属性

25:42.460 --> 25:43.460
叫road

25:43.460 --> 25:45.460
它的纸路由是谁

25:45.460 --> 25:47.460
那么这个东西跟5u那一块

25:47.460 --> 25:48.460
是不是类似的

25:48.460 --> 25:50.460
它的纸路由是谁

25:50.460 --> 25:52.460
那么它的纸路由匹配上了过后

25:52.460 --> 25:55.460
会放到这个组件的q

25:55.460 --> 25:57.460
放到这个组件的q

25:57.460 --> 25:58.460
会放进来

25:58.460 --> 25:59.460
所以说

25:59.460 --> 26:00.460
我们如果要达成

26:00.460 --> 26:01.460
之前的那种效果的话

26:01.460 --> 26:03.460
那么我们这里就写上一个中途号

26:03.460 --> 26:04.460
它也是一个数组

26:04.460 --> 26:05.460
我们把后边的东西

26:05.460 --> 26:07.460
写到这里边去

26:07.460 --> 26:08.460
看没

26:08.460 --> 26:09.460
我们写到这里边去

26:09.460 --> 26:10.460
就完事了

26:12.460 --> 26:13.460
保存

26:13.460 --> 26:14.460
你看

26:14.460 --> 26:16.460
我们匹配任何地址都能匹配到它

26:16.460 --> 26:17.460
对吧

26:18.460 --> 26:19.460
然后到这里边

26:19.460 --> 26:20.460
再去匹配这些东西

26:20.460 --> 26:22.460
匹配过后把它放到q的那个位置

26:23.460 --> 26:25.460
好 这里我们看一下

26:26.460 --> 26:28.460
现在404对吧

26:28.460 --> 26:29.460
你看

26:30.460 --> 26:32.460
首页 登录页 欢迎页

26:32.460 --> 26:33.460
对吧 搞定了

26:34.460 --> 26:36.460
然后我们再回到

26:36.460 --> 26:37.460
刚才的问题

26:37.460 --> 26:39.460
要把这个title应用进去

26:39.460 --> 26:40.460
那么怎么应用呢

26:40.460 --> 26:41.460
怎么应用呢

26:41.460 --> 26:43.460
我们在layout里边

26:43.460 --> 26:45.460
我们刚才已经打印出来的probs

26:45.460 --> 26:46.460
打印出来的probs

26:46.460 --> 26:48.460
点击右键 检查

26:48.460 --> 26:49.460
sauce里边

26:49.460 --> 26:50.460
我们来看一下

26:50.460 --> 26:51.460
这里

26:51.460 --> 26:52.460
刷新一次

26:52.460 --> 26:53.460
你看打印出来的probs

26:53.460 --> 26:55.460
probs里边不是一个root吗

26:55.460 --> 26:57.460
root是对应的配置

26:57.460 --> 26:59.460
对吧 是不是对应的配置

26:59.460 --> 27:00.460
没问题吧

27:00.460 --> 27:01.460
这是root里边

27:01.460 --> 27:02.460
它对应的配置

27:02.460 --> 27:03.460
然后呢

27:03.460 --> 27:04.460
这里边

27:04.460 --> 27:05.460
你看一下

27:05.460 --> 27:07.460
是不是它里边的指路由

27:07.460 --> 27:09.460
对吧 是不是指路由

27:10.460 --> 27:12.460
好 那么我们现在要干吗呢

27:12.460 --> 27:13.460
现在

27:13.460 --> 27:14.460
我们现在要干吗呢

27:14.460 --> 27:16.460
我们现在只需要能够

27:16.460 --> 27:19.460
知道我们目前的这个路径

27:19.460 --> 27:21.460
等于指路由到哪一个

27:21.460 --> 27:23.460
等于指路由到哪一个路径

27:23.460 --> 27:25.460
那么我就把它对应的title

27:25.460 --> 27:26.460
显示出来

27:26.460 --> 27:27.460
对不对

27:27.460 --> 27:28.460
是不是可以自行进行处理

27:28.460 --> 27:29.460
对吧

27:29.460 --> 27:31.460
这里可以做任何的处理

27:31.460 --> 27:32.460
任何的处理都可以

27:32.460 --> 27:33.460
好 于是呢

27:33.460 --> 27:35.460
我们这里可以写个简单的例子

27:35.460 --> 27:36.460
当然呢

27:36.460 --> 27:37.460
如果说还得

27:37.460 --> 27:38.460
还要签到更多层次的话

27:38.460 --> 27:40.460
你可能还要去做一些考虑

27:40.460 --> 27:42.460
我们这里先写这么一个简单例子

27:42.460 --> 27:45.460
这里我们写上probs

27:45.460 --> 27:46.460
probs

27:46.460 --> 27:47.460
里边又是什么属性呢

27:47.460 --> 27:48.460
root是个属性

27:48.460 --> 27:50.460
这个属性里边不是有一个

27:50.460 --> 27:51.460
是吧

27:51.460 --> 27:53.460
不是有一个就是

27:53.460 --> 27:54.460
q

27:54.460 --> 27:55.460
就是root这个属性吗

27:55.460 --> 27:56.460
对吧

27:56.460 --> 27:57.460
root里边还有一个root这个属性

27:57.460 --> 27:59.460
就是它的指路由

27:59.460 --> 28:00.460
在指路由里边去找

28:00.460 --> 28:01.460
找谁呢

28:01.460 --> 28:02.460
找到那个对象

28:02.460 --> 28:03.460
对象的pass属性

28:03.460 --> 28:05.460
等于当前的地址

28:05.460 --> 28:06.460
是不是这个意思

28:06.460 --> 28:07.460
等于当前的地址

28:07.460 --> 28:08.460
fand

28:08.460 --> 28:09.460
翻了什么呢

28:09.460 --> 28:11.460
目前的地址

28:11.460 --> 28:13.460
就是在这里边找

28:13.460 --> 28:14.460
config

28:14.460 --> 28:15.460
每一个路由配置

28:15.460 --> 28:16.460
配置里边

28:16.460 --> 28:19.460
每一个路由配置里边的pass属性

28:19.460 --> 28:21.460
去找跟什么相同

28:21.460 --> 28:22.460
是不是跟那个

28:22.460 --> 28:24.460
当前地址的passname相同

28:24.460 --> 28:25.460
对吧

28:25.460 --> 28:27.460
还给当前地址的

28:27.460 --> 28:29.460
probs里边

28:29.460 --> 28:31.460
location里边的passname

28:31.460 --> 28:32.460
相同

28:32.460 --> 28:35.460
如果说这两个相同的话

28:35.460 --> 28:36.460
当然我们现在没有

28:36.460 --> 28:38.460
用的是最简单的情况

28:38.460 --> 28:40.460
没有考虑更多的情况

28:40.460 --> 28:41.460
比方说它的规则里面

28:41.460 --> 28:42.460
有没有什么帽号

28:42.460 --> 28:43.460
这些乱七八糟的

28:43.460 --> 28:45.460
这些东西都没有考虑进去

28:45.460 --> 28:46.460
好吧

28:46.460 --> 28:47.460
我们只需要去评论

28:47.460 --> 28:48.460
这个东西就行了

28:48.460 --> 28:51.460
其实我们还要去利用那个

28:51.460 --> 28:53.460
利用march这种东西对吧

28:53.460 --> 28:54.460
我们现在呢

28:54.460 --> 28:55.460
先简单写一个

28:55.460 --> 28:56.460
写个出来再说

28:56.460 --> 28:57.460
如果说相同

28:57.460 --> 28:59.460
相同我们是不是要把这个

28:59.460 --> 29:00.460
找到对不对

29:00.460 --> 29:01.460
config

29:01.460 --> 29:02.460
是不是找到

29:02.460 --> 29:03.460
好

29:03.460 --> 29:04.460
找到了之后

29:04.460 --> 29:05.460
找到了之后

29:05.460 --> 29:06.460
判断一下

29:06.460 --> 29:08.460
我们这里定一个编辖

29:08.460 --> 29:09.460
Title

29:10.460 --> 29:11.460
无标题

29:11.460 --> 29:13.460
如果说找到了

29:13.460 --> 29:14.460
config

29:14.460 --> 29:15.460
如果找到了

29:15.460 --> 29:16.460
并且呢

29:16.460 --> 29:18.460
这个里面有标题

29:18.460 --> 29:19.460
他配置的标题

29:19.460 --> 29:22.460
那么我们就把这个Title

29:22.460 --> 29:24.460
复制为什么config

29:24.460 --> 29:25.460
Title

29:25.460 --> 29:26.460
对吧

29:26.460 --> 29:27.460
复制为这个标题

29:27.460 --> 29:28.460
好

29:28.460 --> 29:29.460
然后呢干嘛

29:29.460 --> 29:30.460
Document

29:30.460 --> 29:31.460
Title

29:31.460 --> 29:32.460
等于Title

29:32.460 --> 29:33.460
当然呢

29:33.460 --> 29:35.460
按你说这个东西还要Use Hook

29:35.460 --> 29:36.460
Use Effect

29:36.460 --> 29:37.460
对吧

29:37.460 --> 29:38.460
用那个Hook

29:38.460 --> 29:39.460
把它做成副作用

29:39.460 --> 29:41.460
因为这一块是个副作用

29:41.460 --> 29:42.460
不管它嘛

29:42.460 --> 29:43.460
就这样子写

29:43.460 --> 29:44.460
那么现在是欢迎夜

29:44.460 --> 29:45.460
对吧

29:45.460 --> 29:46.460
登录夜

29:46.460 --> 29:47.460
首夜

29:47.460 --> 29:48.460
对吧

29:48.460 --> 29:49.460
欢迎夜

29:49.460 --> 29:50.460
是不是搞定了

29:50.460 --> 29:52.460
这个主要是目的呢

29:52.460 --> 29:53.460
是为了说明一下

29:53.460 --> 29:54.460
这里的属性呢

29:54.460 --> 29:55.460
录油配置这里的属性呢

29:55.460 --> 29:56.460
还可以自己加

29:56.460 --> 29:57.460
加任何属性都可以

29:57.460 --> 29:58.460
就是

29:58.460 --> 30:00.460
每一个录油配置

30:00.460 --> 30:01.460
每一个录油配置

30:01.460 --> 30:06.460
可以添加任何属性

30:06.460 --> 30:08.460
可以添加任何属性

30:08.460 --> 30:10.460
主要说明这个

30:10.460 --> 30:11.460
好

30:11.460 --> 30:12.460
接下来这个就很重要了

30:12.460 --> 30:15.460
这是咱们这里刻的重点

30:15.460 --> 30:17.460
就是说在录油这里边呢

30:17.460 --> 30:19.460
还可以对录油进行进一步封装

30:19.460 --> 30:21.460
因为我们刚才知道

30:21.460 --> 30:23.460
在这一块配置里边

30:23.460 --> 30:25.460
每一个配置的录油

30:25.460 --> 30:27.460
最终会形成一个肉车组件

30:27.460 --> 30:28.460
对吧

30:28.460 --> 30:30.460
是不是会形成一个肉车组件

30:30.460 --> 30:31.460
哎

30:31.460 --> 30:32.460
然后

30:32.460 --> 30:33.460
这里边

30:33.460 --> 30:36.460
这线度有是不是也会形成肉车组件

30:36.460 --> 30:37.460
那么如果说

30:37.460 --> 30:39.460
你要对这个组件进一步封装

30:39.460 --> 30:40.460
怎么办呢

30:40.460 --> 30:42.460
比方说我们刚才处理标题这个问题

30:42.460 --> 30:44.460
处理标题这个问题

30:44.460 --> 30:45.460
我不在这处理

30:45.460 --> 30:47.460
我不在这处理的

30:47.460 --> 30:48.460
我要

30:48.460 --> 30:50.460
我要专门来写个组件来处理

30:50.460 --> 30:51.460
那个标题

30:51.460 --> 30:52.460
那么又该怎么办呢

30:52.460 --> 30:53.460
好比方说

30:53.460 --> 30:55.460
我们在src目录下边

30:55.460 --> 30:56.460
新建个文件夹

30:56.460 --> 30:59.460
给他取名为 Road

30:59.460 --> 31:00.460
当然这个文件夹

31:00.460 --> 31:02.460
它不是约定式的文件夹

31:02.460 --> 31:03.460
你自己取的名字

31:03.460 --> 31:04.460
那么这里呢

31:04.460 --> 31:06.460
我们主要是对录油进行预处理

31:06.460 --> 31:07.460
比方说

31:07.460 --> 31:09.460
我们这里写上这么一个

31:09.460 --> 31:11.460
这么一个组件

31:11.460 --> 31:12.460
什么组件呢

31:12.460 --> 31:13.460
叫做那个

31:13.460 --> 31:14.460
handle

31:14.460 --> 31:15.460
就是处理标题

31:15.460 --> 31:16.460
handle

31:16.460 --> 31:17.460
title

31:17.460 --> 31:18.460
而且是

31:18.460 --> 31:20.460
处理录油标题的组件

31:20.460 --> 31:22.460
RFC

31:22.460 --> 31:23.460
那这里呢

31:23.460 --> 31:24.460
我传个property来

31:24.460 --> 31:26.460
我们现在在配置里边

31:26.460 --> 31:27.460
可以用这种方式

31:27.460 --> 31:28.460
来让它进行预处理

31:28.460 --> 31:30.460
看着啊

31:30.460 --> 31:31.460
我们这个nayouts

31:31.460 --> 31:32.460
不需要处理标题的

31:32.460 --> 31:33.460
具体的页面

31:33.460 --> 31:34.460
才会有标题

31:34.460 --> 31:35.460
那么这里

31:35.460 --> 31:36.460
我们写上这么一个配置

31:36.460 --> 31:38.460
叫做roads

31:38.460 --> 31:39.460
这么一个配置

31:39.460 --> 31:40.460
这个配置里边

31:40.460 --> 31:42.460
它是一个数组

31:42.460 --> 31:43.460
数组里边写的是什么呢

31:43.460 --> 31:44.460
写的是

31:44.460 --> 31:45.460
组件路径

31:45.460 --> 31:47.460
这个路径相对于谁呢

31:47.460 --> 31:48.460
我们先记录一下

31:48.460 --> 31:49.460
我们等一会

31:49.460 --> 31:50.460
再说那个具体的

31:50.460 --> 31:51.460
什么意思

31:51.460 --> 31:53.460
roads属性

31:53.460 --> 31:55.460
是一个数组

31:55.460 --> 31:57.460
数组的每一项

31:57.460 --> 32:00.460
是一个组件路径

32:00.460 --> 32:02.460
路径

32:02.460 --> 32:04.460
相对于什么

32:04.460 --> 32:06.460
项目跟目录

32:06.460 --> 32:08.460
相对的是项目的跟目录

32:08.460 --> 32:09.460
项目是谁呢

32:09.460 --> 32:10.460
比方到这里

32:10.460 --> 32:11.460
我们要找这个组件

32:11.460 --> 32:12.460
handle title

32:12.460 --> 32:13.460
那么项目是谁呢

32:13.460 --> 32:14.460
项目是项目的跟目录

32:14.460 --> 32:15.460
看一下啊

32:15.460 --> 32:16.460
看一下我们的

32:16.460 --> 32:17.460
目前的项目的跟路

32:17.460 --> 32:18.460
我们来换个行

32:18.460 --> 32:20.460
跟目录在哪

32:20.460 --> 32:21.460
根本来是不是

32:21.460 --> 32:22.460
Uminor

32:22.460 --> 32:23.460
对不对

32:23.460 --> 32:24.460
它下面的什么

32:24.460 --> 32:25.460
src

32:25.460 --> 32:26.460
下面的什么

32:26.460 --> 32:27.460
roads

32:27.460 --> 32:28.460
下面的什么

32:28.460 --> 32:30.460
handle title

32:30.460 --> 32:31.460
点解释

32:31.460 --> 32:32.460
相对于

32:32.460 --> 32:34.460
就是在这个文件的路径

32:34.460 --> 32:35.460
这个文件它一定在跟目录下面

32:35.460 --> 32:36.460
所以说

32:36.460 --> 32:38.460
相对于是这个文件的路径

32:38.460 --> 32:40.460
相对于是这个文件的路径

32:40.460 --> 32:41.460
看看

32:41.460 --> 32:42.460
这么个意思

32:42.460 --> 32:43.460
好

32:43.460 --> 32:44.460
那么我们把这个写上

32:44.460 --> 32:46.460
首先我们观察一下

32:46.460 --> 32:48.460
最终的结果是什么

32:48.460 --> 32:52.050
刷新

32:52.050 --> 32:53.050
我们这里的首页

32:53.050 --> 32:54.050
看首页

32:54.050 --> 32:55.050
首页是不是没了

32:55.050 --> 32:56.050
我们的页面呢

32:56.050 --> 32:58.050
页面没了

32:58.050 --> 32:59.050
那为什么没了呢

32:59.050 --> 33:00.050
它转而去宣传

33:00.050 --> 33:02.050
转而去宣传这个组件去了

33:02.050 --> 33:03.050
它没有去宣传

33:03.050 --> 33:05.050
我们那个就是

33:05.050 --> 33:06.050
in这个时候这个组件

33:06.050 --> 33:07.050
它转而去宣传这个组件去了

33:07.050 --> 33:08.050
我们在这个组件里边

33:08.050 --> 33:09.050
比方说写一个

33:09.050 --> 33:10.050
H1

33:10.050 --> 33:12.050
叫做handle title

33:12.050 --> 33:14.050
写上这么一个东西

33:14.050 --> 33:15.050
保存

33:15.050 --> 33:16.050
你看一下

33:16.050 --> 33:17.050
是不是写成我们这个组件了

33:17.050 --> 33:18.050
对吧

33:18.050 --> 33:19.050
好

33:19.050 --> 33:20.050
那么我们这里记录一笔

33:20.050 --> 33:21.050
相对跟目录

33:22.050 --> 33:24.050
当匹配

33:24.050 --> 33:26.050
到路由后

33:26.050 --> 33:27.050
当匹配到路由后

33:27.050 --> 33:29.050
会转而宣传

33:29.050 --> 33:31.050
指定的

33:31.050 --> 33:32.050
转一下来

33:32.050 --> 33:35.050
该属性

33:35.050 --> 33:37.050
指定的组件

33:37.050 --> 33:39.050
它会宣传这个组件

33:39.050 --> 33:40.050
跑了去

33:40.050 --> 33:41.050
这个

33:41.050 --> 33:42.050
那么宣传这个组件

33:42.050 --> 33:44.050
那我跟这个组件有什么关系呢

33:44.050 --> 33:45.050
它是这样子

33:45.050 --> 33:47.050
它会把这个组件

33:47.050 --> 33:49.050
把component配置的组件

33:49.050 --> 33:52.050
放到这个组件的属性里边去

33:52.050 --> 33:54.050
并

33:54.050 --> 33:57.050
会将

33:57.050 --> 33:59.050
component 组件

33:59.050 --> 34:01.050
component 组件

34:01.050 --> 34:02.050
作为

34:02.050 --> 34:05.050
组件

34:05.050 --> 34:07.050
放到

34:07.050 --> 34:08.050
放到哪呢

34:08.050 --> 34:09.050
把这个

34:09.050 --> 34:10.050
组件作为

34:10.050 --> 34:11.050
组件

34:11.050 --> 34:14.050
放到那个就是

34:14.050 --> 34:16.050
那个就是

34:16.050 --> 34:18.050
匹配的组件中

34:19.050 --> 34:20.050
也就是说

34:20.050 --> 34:21.050
它会在这里呢

34:21.050 --> 34:23.050
会把这个qo准

34:23.050 --> 34:26.050
把它打印出来看一下吧

34:26.050 --> 34:27.050
保存

34:27.050 --> 34:29.490
看一下

34:29.490 --> 34:30.490
好

34:30.490 --> 34:31.490
看着

34:31.490 --> 34:32.490
那么这个qo准里边

34:32.490 --> 34:33.490
这个qo准是啥

34:33.490 --> 34:34.490
这个qo准

34:34.490 --> 34:35.490
你看一下

34:35.490 --> 34:36.490
它的对应的函数

34:36.490 --> 34:38.490
我们这个看不见

34:38.490 --> 34:39.490
index

34:39.490 --> 34:40.490
看不见

34:40.490 --> 34:42.490
也看不出来是这个函数

34:42.490 --> 34:43.490
那么这个地方

34:43.490 --> 34:44.490
它对应的函数

34:44.490 --> 34:46.490
其实就是这个index的组件

34:46.490 --> 34:47.490
看没

34:47.490 --> 34:48.490
它把放过来了

34:48.490 --> 34:49.490
它把放过来了

34:49.490 --> 34:50.490
所以说

34:50.490 --> 34:51.490
如果说你要在这里渲染

34:51.490 --> 34:52.490
index的话

34:52.490 --> 34:53.490
怎么渲染

34:53.490 --> 34:54.490
是不是在这里写上

34:54.490 --> 34:55.490
写上什么

34:55.490 --> 34:56.490
qo准

34:56.490 --> 34:57.490
probs.qo准

34:57.490 --> 34:58.490
qo准

34:58.490 --> 35:00.490
是不是就把index的渲染出来了

35:00.490 --> 35:02.490
对了

35:02.490 --> 35:04.490
我们这里

35:04.490 --> 35:05.490
这样子写

35:05.490 --> 35:09.310
或者说直接把这个qo准

35:09.310 --> 35:10.310
返回

35:10.310 --> 35:11.310
就完事了

35:11.310 --> 35:13.310
直接把这个probs.qo准返回

35:13.310 --> 35:15.620
对吧

35:15.620 --> 35:16.620
是不是就完事了

35:16.620 --> 35:18.620
它会定的

35:18.620 --> 35:20.620
那么到时候你会渲染这个组件

35:20.620 --> 35:21.620
看没

35:22.620 --> 35:23.620
那么这些东西是不是

35:23.620 --> 35:24.620
那个路由信息

35:24.620 --> 35:26.620
它一直给你传过来了

35:27.620 --> 35:28.620
那么这个render是咋的

35:28.620 --> 35:29.620
这个render呢

35:29.620 --> 35:30.620
我们目前都还用不上

35:30.620 --> 35:31.620
这个render是

35:32.620 --> 35:33.620
因为router的一个组件

35:33.620 --> 35:34.620
还记得吗

35:34.620 --> 35:35.620
router的一个组件

35:35.620 --> 35:36.620
所以这些都是基础知识

35:36.620 --> 35:37.620
也不能丢啊

35:37.620 --> 35:38.620
router的这个组件里边

35:38.620 --> 35:40.620
它不是一个属性render吗

35:40.620 --> 35:41.620
对不对

35:41.620 --> 35:42.620
它可以配置为一个函数

35:42.620 --> 35:43.620
那么它到时候

35:43.620 --> 35:44.620
会

35:44.620 --> 35:45.620
实际上我们的组件

35:45.620 --> 35:46.620
选择的时候

35:46.620 --> 35:47.620
是配置了这个render函数

35:47.620 --> 35:49.620
实际上是配置了这个render函数

35:49.620 --> 35:50.620
所以它会把这个render函数

35:50.620 --> 35:51.620
给传过来

35:51.620 --> 35:52.620
那你I用就用

35:52.620 --> 35:54.620
如果说你要去渲染

35:54.620 --> 35:56.620
就掉用这个render就完事了

35:57.620 --> 35:58.620
就完了

35:58.620 --> 35:59.620
对吧

35:59.620 --> 36:00.620
好 咱们来看一下

36:00.620 --> 36:02.620
那么现在手页是不是可以渲染出来了

36:02.620 --> 36:03.620
然后那你还可以

36:03.620 --> 36:05.620
是不是还可以额外加入一些东西

36:05.620 --> 36:06.620
对不对

36:06.620 --> 36:07.620
是不是还可以额外加入一些东西

36:07.620 --> 36:08.620
比如说DIVA

36:08.620 --> 36:09.620
你这里是

36:09.620 --> 36:10.620
就渲染标题

36:10.620 --> 36:12.620
渲染标题

36:12.620 --> 36:14.620
当然我们这里肯定不会加

36:14.620 --> 36:16.620
是不是可以加进去

36:16.620 --> 36:17.620
对吧

36:17.620 --> 36:18.620
是吧

36:18.620 --> 36:19.620
可以加进去

36:19.620 --> 36:21.620
那么就起到了这个预处理的作用

36:21.620 --> 36:23.620
就起到这么一个作用

36:23.620 --> 36:24.620
就是说我可以把

36:24.620 --> 36:25.620
你要选择的组件

36:25.620 --> 36:27.620
先就做一些处理

36:27.620 --> 36:28.620
做一些处理

36:28.620 --> 36:29.620
那么在这里

36:29.620 --> 36:31.620
比方说我们只处理标题

36:31.620 --> 36:32.620
那么是不是很简单

36:32.620 --> 36:34.620
我们在这里是不是可以获取到什么

36:34.620 --> 36:35.620
获取到road

36:35.620 --> 36:36.620
看没

36:36.620 --> 36:37.620
获取到这个

36:37.620 --> 36:38.620
获取到这个road

36:38.620 --> 36:39.620
那么我们这里

36:39.620 --> 36:40.620
就可以使用

36:42.620 --> 36:45.620
就是 document.title

36:45.620 --> 36:46.620
输出什么

36:46.620 --> 36:48.620
就是得到标题是

36:48.620 --> 36:50.620
probs.road.title

36:50.620 --> 36:51.620
对吧

36:51.620 --> 36:52.620
是不是这个

36:52.620 --> 36:53.620
保存一下

36:53.620 --> 36:54.620
你看一下

36:54.620 --> 36:55.620
首页是不是出来了

36:55.620 --> 36:56.620
对不对

36:56.620 --> 36:57.620
好

36:57.620 --> 36:58.620
那么这样子一来的话

36:58.620 --> 36:59.620
我们每一个组件

36:59.620 --> 37:00.620
是不是都可以用这个

37:00.620 --> 37:02.620
都可以反复使用了

37:02.620 --> 37:03.620
你看

37:03.620 --> 37:04.620
我们每一个组件

37:04.620 --> 37:06.620
是不是都可以反复使用这个配置

37:06.620 --> 37:07.620
这个组件

37:07.620 --> 37:08.620
是不是都可以是

37:08.620 --> 37:09.620
反复使用配置

37:09.620 --> 37:10.620
又可以达到重用的目的

37:10.620 --> 37:11.620
好

37:11.620 --> 37:12.620
保存

37:12.620 --> 37:13.620
那么现在呢

37:13.620 --> 37:14.620
我们就不需要去写

37:14.620 --> 37:15.620
一些反复的代码

37:15.620 --> 37:17.620
之前那个标题的变化

37:17.620 --> 37:18.620
对吧

37:18.620 --> 37:20.620
我们就可以做一些预处理

37:20.620 --> 37:22.620
有点像一个

37:22.620 --> 37:23.620
导航守卫

37:23.620 --> 37:24.620
对吧

37:24.620 --> 37:25.620
导航守卫

37:25.620 --> 37:26.620
好

37:26.620 --> 37:27.620
就是这一块

37:27.620 --> 37:29.620
那么基于这一点的话

37:29.620 --> 37:31.620
我们还可以做更多的事情

37:31.620 --> 37:32.620
像这一块的话

37:32.620 --> 37:33.620
它还有这么一个特点

37:33.620 --> 37:34.620
因为为什么

37:34.620 --> 37:35.620
它是一个数组呢

37:35.620 --> 37:36.620
也就是它这里

37:36.620 --> 37:37.620
可以配置多个组件

37:37.620 --> 37:38.620
它会怎么办呢

37:38.620 --> 37:39.620
它会这样子来处理

37:39.620 --> 37:40.620
比方说我们这里

37:40.620 --> 37:41.620
再写个文件

37:41.620 --> 37:42.620
比方说它

37:42.620 --> 37:43.620
我们要做这么一个处理

37:43.620 --> 37:44.620
就是全线

37:44.620 --> 37:45.620
要登录过后

37:45.620 --> 37:46.620
才能防

37:46.620 --> 37:47.620
有些页面是登录过后

37:47.620 --> 37:48.620
才能防问的

37:48.620 --> 37:49.620
没有登录是不能防问的

37:49.620 --> 37:50.620
只有登录过后

37:50.620 --> 37:51.620
才能防问

37:51.620 --> 37:52.620
没有登录

37:52.620 --> 37:53.620
不能防问

37:53.620 --> 37:54.620
那怎么办呢

37:54.620 --> 37:55.620
我们就给它写上这么一个

37:55.620 --> 37:56.620
就叫做

37:56.620 --> 37:57.620
private

37:57.620 --> 37:58.620
rotor

37:58.620 --> 37:59.620
要揭示

37:59.620 --> 38:00.620
必须要登录过后

38:00.620 --> 38:02.620
才能防问

38:02.620 --> 38:03.620
好

38:03.620 --> 38:06.190
我们这里导出

38:06.190 --> 38:11.190
我们这样子吧

38:11.190 --> 38:14.190
import

38:14.190 --> 38:15.190
link

38:15.190 --> 38:18.190
link

38:18.190 --> 38:19.190
好

38:19.190 --> 38:20.190
我们这样子

38:20.190 --> 38:21.190
我们判断它有没有登录

38:21.190 --> 38:23.190
如果说有登录的话

38:23.190 --> 38:24.190
我给你宣传

38:24.190 --> 38:25.190
你对你的主件

38:25.190 --> 38:26.190
如果说你没有登录的话

38:26.190 --> 38:27.190
我给你一句提示

38:27.190 --> 38:28.190
给你一个超链接

38:28.190 --> 38:29.190
或者说

38:29.190 --> 38:30.190
我就直接给你一个

38:30.190 --> 38:31.190
redirector都可以

38:31.190 --> 38:32.190
redirector

38:32.190 --> 38:33.190
redirector在哪里找呢

38:33.190 --> 38:34.190
就是在redirector

38:34.190 --> 38:35.190
rotor里面

38:35.190 --> 38:36.190
不是一个redirector

38:36.190 --> 38:37.190
你看这里是不是有

38:37.190 --> 38:38.190
对吧

38:38.190 --> 38:39.190
得到一个redirector

38:39.190 --> 38:40.190
主件

38:40.190 --> 38:41.190
直接挑转到某一个地址

38:41.190 --> 38:42.190
都行

38:42.190 --> 38:43.190
比方说

38:43.190 --> 38:44.190
我就给你一个

38:44.190 --> 38:45.190
就该页面必须要登录

38:45.190 --> 38:46.190
后才能防问

38:46.190 --> 38:47.190
然后请先登录

38:47.190 --> 38:49.190
就这么个意思

38:49.190 --> 38:50.190
比方说

38:50.190 --> 38:51.190
我们这里怎么来判断

38:51.190 --> 38:52.190
有没有登录呢

38:52.190 --> 38:53.190
是不是判断那个

38:53.190 --> 38:54.190
local storage

38:54.190 --> 38:55.190
get item

38:55.190 --> 38:56.190
对吧

38:56.190 --> 38:57.190
login id

38:57.190 --> 39:00.820
把login id导到

39:00.820 --> 39:02.820
导到个login id

39:02.820 --> 39:03.820
如果说你登录了

39:03.820 --> 39:04.820
这个东西一定有词

39:04.820 --> 39:05.820
当然这个

39:05.820 --> 39:06.820
不是一个好的办法

39:06.820 --> 39:07.820
不是一个好的办法

39:07.820 --> 39:08.820
因为

39:08.820 --> 39:09.820
因为这一块的话

39:09.820 --> 39:11.820
因为这一块

39:11.820 --> 39:13.820
还涉及到index请求

39:13.820 --> 39:14.820
你应该去请求

39:14.820 --> 39:16.820
服务器看服务器那边

39:16.820 --> 39:17.820
认为你有没有登录

39:17.820 --> 39:19.820
这边克服端保存的是一个keyz

39:19.820 --> 39:20.820
对不对

39:20.820 --> 39:21.820
里面都是学过的

39:21.820 --> 39:23.820
只不过我这里就简单处理一下

39:23.820 --> 39:24.820
简单处理一下

39:25.820 --> 39:26.820
来吧

39:26.820 --> 39:27.820
好

39:27.820 --> 39:28.820
这里我们看一下

39:28.820 --> 39:29.820
login id有没有值

39:29.820 --> 39:30.820
或者是这样子

39:30.820 --> 39:31.820
判断一下

39:31.820 --> 39:32.820
如果说

39:32.820 --> 39:33.820
login id有值

39:33.820 --> 39:34.820
表示已经登录了

39:34.820 --> 39:35.820
好

39:35.820 --> 39:36.820
已经登录了干嘛呢

39:36.820 --> 39:37.820
我就给你宣展

39:37.820 --> 39:38.820
宣展啥

39:38.820 --> 39:39.820
宣展求准

39:39.820 --> 39:41.820
我就给你宣展求准

39:41.820 --> 39:42.820
return problems

39:42.820 --> 39:43.820
求准

39:43.820 --> 39:44.820
给你宣展出来

39:44.820 --> 39:45.820
好

39:45.820 --> 39:46.820
ls

39:46.820 --> 39:47.820
如果说他没有值

39:47.820 --> 39:48.820
没有值的话

39:48.820 --> 39:50.820
我就给你返回一个div

39:52.820 --> 39:53.820
这样子

39:53.820 --> 39:55.820
一个p元数

39:55.820 --> 39:59.820
该页面必须要

39:59.820 --> 40:01.820
必须要登录后

40:01.820 --> 40:03.820
才可以访问

40:03.820 --> 40:05.820
请先登录

40:05.820 --> 40:06.820
好

40:06.820 --> 40:07.820
请先登录的话

40:07.820 --> 40:10.200
我们把它放到link里边

40:10.200 --> 40:12.200
把放到link里边

40:12.200 --> 40:13.200
好

40:13.200 --> 40:14.200
那么这里给一个超链接

40:14.200 --> 40:15.200
2

40:15.200 --> 40:16.200
这也是很多网站

40:16.200 --> 40:17.200
常见的一种做法

40:17.200 --> 40:18.200
好

40:18.200 --> 40:19.200
保存

40:19.200 --> 40:20.200
保存

40:20.200 --> 40:21.200
咱们来看一下

40:21.200 --> 40:22.200
登录叶

40:22.200 --> 40:23.200
欢迎叶

40:23.200 --> 40:24.200
欢迎

40:24.200 --> 40:25.200
现在还没用

40:25.200 --> 40:26.200
还没用进去

40:26.200 --> 40:27.200
我们在这里

40:27.200 --> 40:28.200
现在我们在

40:28.200 --> 40:29.200
欢迎叶这一块

40:29.200 --> 40:31.200
我们再加一个

40:31.200 --> 40:32.200
再加一个login

40:32.200 --> 40:33.200
把它放到第一个

40:33.200 --> 40:35.200
叫做private

40:36.200 --> 40:37.200
第二

40:37.200 --> 40:38.200
src

40:38.200 --> 40:39.200
road

40:39.200 --> 40:41.200
叫做private

40:41.200 --> 40:42.200
rotor

40:42.200 --> 40:43.200
那么现在会

40:43.200 --> 40:44.200
有个什么样的现象

40:44.200 --> 40:45.200
它是这样子

40:45.200 --> 40:47.200
它会把这个组件

40:47.200 --> 40:49.200
作为qt

40:49.200 --> 40:50.200
然后再把这个

40:50.200 --> 40:52.200
组件作为qt

40:52.200 --> 40:53.200
交给它

40:53.200 --> 40:54.200
运行的时候

40:54.200 --> 40:55.200
运行这个组件

40:55.200 --> 40:57.200
它是转而运行这个组件

40:57.200 --> 40:58.200
如果说这个组件里边

40:58.200 --> 41:00.200
使用了qt

41:00.200 --> 41:01.200
如果说它使用了qt

41:01.200 --> 41:03.200
是不是就渲染到了这个组件

41:03.200 --> 41:04.200
因为这个组件

41:04.200 --> 41:05.200
是不是它的qt

41:05.200 --> 41:07.200
就渲染到这个组件

41:07.200 --> 41:08.200
而渲染这个组件

41:08.200 --> 41:09.200
如果说这个组件里边

41:09.200 --> 41:10.200
使用了qt

41:10.200 --> 41:11.200
是不是就渲染到了这个组件

41:11.200 --> 41:12.200
它就一层一层传过来的

41:12.200 --> 41:14.200
它是它的qt

41:14.200 --> 41:15.200
它是它的qt

41:15.200 --> 41:16.200
那么渲染的时候

41:16.200 --> 41:17.200
渲染它

41:17.200 --> 41:18.200
如果它里面用了qt

41:18.200 --> 41:19.200
它里面用了qt

41:19.200 --> 41:20.200
就渲染它

41:20.200 --> 41:21.200
也就是说

41:21.200 --> 41:22.200
也就是相当于一个

41:22.200 --> 41:23.200
有点类似于

41:23.200 --> 41:24.200
中间件的那种效果

41:24.200 --> 41:25.200
对吧

41:25.200 --> 41:27.200
我要不要往后移交

41:27.200 --> 41:29.200
就完全看我要不要用qt

41:29.200 --> 41:30.200
属性

41:30.200 --> 41:31.200
如果我要渲染qt

41:31.200 --> 41:32.200
我就往后移交

41:32.200 --> 41:33.200
我现在处理完了

41:33.200 --> 41:34.200
我表示可以

41:34.200 --> 41:35.200
没问题

41:35.200 --> 41:36.200
可以渲染这一块的东西

41:36.200 --> 41:37.200
那么剩下来

41:37.200 --> 41:38.200
是交给后边的处理

41:38.200 --> 41:39.200
后边的处理完了过

41:39.200 --> 41:40.200
就渲染到最终的组件

41:40.200 --> 41:41.200
就这么个意思

41:41.200 --> 41:42.200
如果说我这里

41:42.200 --> 41:43.200
没有用到qt

41:43.200 --> 41:44.200
你看

41:44.200 --> 41:45.200
在这是不是就请先登录了

41:45.200 --> 41:46.200
对吧

41:46.200 --> 41:47.200
请先登录

41:47.200 --> 41:48.200
没问题吧

41:48.200 --> 41:49.200
那么这里

41:49.200 --> 41:50.200
我们甚至还可以

41:50.200 --> 41:51.200
设置一下

41:51.200 --> 41:52.200
打个名字

41:52.200 --> 41:54.200
然后让它请先登录

41:54.200 --> 41:56.200
请先登录

41:56.200 --> 41:58.200
请先登录

41:58.200 --> 41:59.200
好

41:59.200 --> 42:00.200
保存

42:00.200 --> 42:01.200
你看一下

42:01.200 --> 42:02.200
首页

42:02.200 --> 42:03.200
欢迎

42:03.200 --> 42:04.200
刷新意思

42:06.200 --> 42:08.200
Private Router

42:08.200 --> 42:09.200
看一下

42:09.200 --> 42:10.200
哪里又找不到吗

42:10.200 --> 42:11.200
又找不到

42:11.200 --> 42:14.700
哪个地方又写错了

42:29.460 --> 42:30.460
当然这是个警告

42:30.460 --> 42:34.800
应该也不影响

42:34.800 --> 42:35.800
对

42:35.800 --> 42:36.800
它这个地方

42:36.800 --> 42:39.800
确实应该是写的是

42:39.800 --> 42:40.800
这应该写的是小写

42:40.800 --> 42:42.800
应该写的是小写

42:42.800 --> 42:43.800
OK

42:43.800 --> 42:44.800
现在没问题了

42:44.800 --> 42:45.800
但是没有写作用

42:45.800 --> 42:47.800
欢迎也没有写作用

42:47.800 --> 42:48.800
我看一下

42:48.800 --> 42:49.800
欢迎也为什么没有写作用

42:49.800 --> 42:50.800
我们把它交给

42:50.800 --> 42:52.800
Routes里边的Private Router

42:52.800 --> 42:53.800
来选择

42:53.800 --> 42:55.800
然后我们这里打印出一下

42:55.800 --> 42:56.800
Login ID

42:56.800 --> 42:57.800
Login ID肯定是NOW

42:57.800 --> 42:59.800
肯定是NOW才对

42:59.800 --> 43:00.800
NOW

43:01.800 --> 43:02.800
明白了

43:04.800 --> 43:06.800
我把NOW存到哪了

43:06.800 --> 43:08.800
我把NOW存到

43:08.800 --> 43:10.800
把NOW制服串存进去了

43:10.800 --> 43:12.800
我把NOW制服串存进去了

43:12.800 --> 43:14.800
我应该设置什么

43:14.800 --> 43:17.800
这里应该设置

43:17.800 --> 43:18.800
Undefined是吧

43:18.800 --> 43:20.800
是应该设置这个是吧

43:20.800 --> 43:21.800
我一定忘了

43:21.800 --> 43:23.800
我现在在喊话一页

43:23.800 --> 43:24.800
不对

43:24.800 --> 43:26.800
Undefined也是存入制服串

43:26.800 --> 43:27.800
我一下子脑袋蒙了

43:27.800 --> 43:28.800
是怎么设置的

43:28.800 --> 43:30.800
把清空

43:30.800 --> 43:33.800
把清空

43:33.800 --> 43:36.560
Clear

43:36.560 --> 43:38.560
不是

43:38.560 --> 43:39.560
SetItem

43:39.560 --> 43:41.560
这个

43:41.560 --> 43:43.560
RemoveItem

43:43.560 --> 43:45.560
Login ID

43:45.560 --> 43:46.560
助销是把移除

43:46.560 --> 43:48.560
不是给它设置一颗制服串

43:48.560 --> 43:50.560
因为它会把任何东西

43:50.560 --> 43:52.560
转成制服串放进去

43:52.560 --> 43:53.560
助销移除

43:53.560 --> 43:54.560
现在我们到欢迎页

43:54.560 --> 43:55.560
你看一下

43:55.560 --> 43:56.560
必须要签登录

43:56.560 --> 43:58.560
你看我们这里打印出来

43:58.560 --> 43:59.560
打印出来是吧

43:59.560 --> 44:00.560
欢迎页

44:00.560 --> 44:01.560
你看 是不是NOW

44:01.560 --> 44:03.560
它找不到这个东西

44:03.560 --> 44:04.560
找不到

44:04.560 --> 44:06.560
所以它是NOW

44:06.560 --> 44:07.560
刷新式

44:07.560 --> 44:08.560
你看 现在我们访问

44:08.560 --> 44:09.560
我要抗这个页面

44:09.560 --> 44:10.560
那你看 是不是

44:10.560 --> 44:11.560
它必须要先登录

44:11.560 --> 44:12.560
对吧

44:12.560 --> 44:13.560
我们这里点登录

44:13.560 --> 44:14.560
是不是到登录页

44:14.560 --> 44:15.560
就直接进不去了

44:15.560 --> 44:16.560
看没

44:16.560 --> 44:17.560
这样账号

44:17.560 --> 44:18.560
乘水面信

44:18.560 --> 44:19.560
密码 123 123

44:19.560 --> 44:20.560
登录

44:20.560 --> 44:21.560
那么现在就可以进去了

44:21.560 --> 44:22.560
所以说我们以后

44:22.560 --> 44:24.560
像这种类似于需要权限的

44:24.560 --> 44:26.560
我们是不是会单独提一个东西

44:26.560 --> 44:27.560
在处理

44:27.560 --> 44:28.560
我们在配置里边

44:28.560 --> 44:29.560
是不是就可以

44:29.560 --> 44:30.560
只要你需要权限

44:30.560 --> 44:31.560
需要类似的权限管理

44:31.560 --> 44:32.560
那么我们就可以

44:32.560 --> 44:35.560
跟配置上就完事了

44:35.560 --> 44:37.560
实际上我们这里的所有配置

44:37.560 --> 44:39.560
在约定路由里边

44:39.560 --> 44:40.560
都可以生效

44:40.560 --> 44:41.560
都可以生效

44:41.560 --> 44:42.560
看一下

44:42.560 --> 44:43.560
我们把配置

44:43.560 --> 44:44.560
改个名字

44:44.560 --> 44:45.560
改个名字它就无效了

44:45.560 --> 44:46.560
因为它约定好了这个名字

44:46.560 --> 44:48.560
配置的文件必须是这个名字

44:48.560 --> 44:49.560
比方改成2

44:49.560 --> 44:50.560
水面改一个

44:50.560 --> 44:51.560
配置有失效了

44:51.560 --> 44:52.560
配置有失效了

44:52.560 --> 44:53.560
你看 欢迎

44:53.560 --> 44:54.560
现在又可以进去了

44:54.560 --> 44:55.560
配置有失效了

44:55.560 --> 44:56.560
那么如果说

44:56.560 --> 44:58.560
那么现在标题也没用了

44:58.560 --> 45:00.560
标题也没用了

45:00.560 --> 45:01.560
标题是不是也没用了

45:01.560 --> 45:02.560
那么现在

45:02.560 --> 45:04.560
如何来把这些

45:04.560 --> 45:05.560
额外的属性

45:05.560 --> 45:06.560
Title

45:06.560 --> 45:07.560
还有额外的Route

45:07.560 --> 45:08.560
配置进去了

45:08.560 --> 45:09.560
如何配置进去了

45:09.560 --> 45:12.560
我们通过注释的方式

45:12.560 --> 45:13.560
加进去

45:13.560 --> 45:15.560
就是配置里边的信息

45:15.560 --> 45:18.560
就是

45:18.560 --> 45:20.560
路由配置的信息

45:20.560 --> 45:23.560
路由配置中的信息

45:23.560 --> 45:25.560
同样

45:25.560 --> 45:28.560
可以放到

45:28.560 --> 45:31.560
约定式路由中

45:31.560 --> 45:34.560
方式是

45:34.560 --> 45:35.560
为

45:35.560 --> 45:38.560
约定式路由

45:38.560 --> 45:41.560
添加第1个

45:41.560 --> 45:45.560
添加第1个文档注释

45:45.560 --> 45:48.560
文档注释

45:48.560 --> 45:50.560
注释的格式

45:50.560 --> 45:51.560
是

45:51.560 --> 45:52.560
YAM格式

45:52.560 --> 45:54.560
YAM就是一种

45:54.560 --> 45:55.560
注释格式

45:55.560 --> 45:56.560
这种文档格式

45:56.560 --> 45:57.560
大家有兴趣的话

45:57.560 --> 45:58.560
就可以查一下

45:58.560 --> 45:59.560
这个非常非常简单

45:59.560 --> 46:01.560
我一会儿一说就明白了

46:01.560 --> 46:02.560
它也是一种文档格式

46:02.560 --> 46:04.560
它有点类似于阶省

46:04.560 --> 46:05.560
有点类似于阶省

46:05.560 --> 46:06.560
它也不太一样

46:06.560 --> 46:07.560
也不太一样

46:07.560 --> 46:08.560
我们一会儿说一下

46:08.560 --> 46:09.560
说一下就知道了

46:09.560 --> 46:10.560
然后我们看一下

46:10.560 --> 46:11.560
比方说

46:11.560 --> 46:12.560
我们在index里边

46:12.560 --> 46:13.560
我们要配置标题

46:13.560 --> 46:14.560
那么怎么配置呢

46:14.560 --> 46:15.560
加上一个文档注释

46:15.560 --> 46:16.560
但是必须是

46:16.560 --> 46:18.560
这个文件的第1个文档注释

46:18.560 --> 46:20.560
这是有约定的

46:20.560 --> 46:22.560
那么这个注释里边写啥呢

46:22.560 --> 46:23.560
这个文档注释里边写啥呢

46:23.560 --> 46:25.560
就写格式

46:25.560 --> 46:26.560
就写格式

46:26.560 --> 46:27.560
这个格式写的就是

46:27.560 --> 46:28.560
YAM格式

46:28.560 --> 46:29.560
YAM格式

46:29.560 --> 46:30.560
你看一下

46:30.560 --> 46:31.560
目前是不是没有标题

46:31.560 --> 46:32.560
对吧

46:32.560 --> 46:33.560
你看这些最终生成的配置

46:33.560 --> 46:34.560
是没有标题的

46:34.560 --> 46:35.560
那么我们这里

46:35.560 --> 46:36.560
title标题加上

46:36.560 --> 46:38.560
写法跟阶省差不多

46:38.560 --> 46:39.560
只不过阶省格式

46:39.560 --> 46:40.560
是不是要加上两个双引号

46:40.560 --> 46:41.560
这里不用

46:41.560 --> 46:43.560
任何东西都不要加双引号

46:43.560 --> 46:44.560
title是什么呢

46:44.560 --> 46:45.560
title首页

46:46.560 --> 46:47.560
保存

46:47.560 --> 46:48.560
你看一下

46:48.560 --> 46:49.560
最终生成的配置里边

46:51.560 --> 46:52.560
等一下

46:52.560 --> 46:56.960
首页呢

46:56.960 --> 46:57.960
保存

46:58.960 --> 47:04.580
等一下

47:04.580 --> 47:06.580
我的配置呢

47:06.580 --> 47:12.090
等一下

47:12.090 --> 47:14.090
我看一下这个怎么回事

47:15.090 --> 47:23.030
对

47:23.030 --> 47:25.030
要放到最开始

47:25.030 --> 47:27.030
要放到最开始

47:27.030 --> 47:28.030
这里

47:28.030 --> 47:30.030
需要将注释

47:30.030 --> 47:32.030
需要将注释

47:32.030 --> 47:35.030
放到最开始的位置

47:35.030 --> 47:37.030
放到最开始的位置

47:37.030 --> 47:38.030
那么这里

47:38.030 --> 47:39.030
就表示我们这里的

47:39.030 --> 47:41.030
额外的路由配置

47:41.030 --> 47:42.030
额外的路由配置

47:42.030 --> 47:43.030
你看一下

47:43.030 --> 47:44.030
是不是加进去了

47:44.030 --> 47:45.030
title加进去了

47:45.030 --> 47:46.030
那么这里加进去了之后

47:46.030 --> 47:47.030
自然而然就生销了

47:47.030 --> 47:48.030
因为最终其中的

47:48.030 --> 47:49.030
是这有一块

47:49.030 --> 47:50.030
这一块加进去

47:50.030 --> 47:52.030
自然而然就生销了

47:52.030 --> 47:53.030
那么现在

47:53.030 --> 47:54.030
我们在login里边

47:54.030 --> 47:55.030
所以也可以写上

47:56.030 --> 47:58.030
这里title

47:58.030 --> 48:00.030
这里是登录页

48:01.030 --> 48:02.030
保存

48:02.030 --> 48:04.030
你看看路由里边

48:05.030 --> 48:06.030
这里要加空格

48:06.030 --> 48:07.030
这里要加个空格

48:07.030 --> 48:08.030
帽号后面加个空格

48:08.030 --> 48:09.030
这是标准格式

48:10.030 --> 48:11.030
登录页

48:11.030 --> 48:12.030
对吧

48:12.030 --> 48:13.030
登录页

48:13.030 --> 48:14.030
这里还要记一笔

48:16.790 --> 48:17.790
一样格式

48:19.790 --> 48:20.790
建置队

48:20.790 --> 48:21.790
首先是建置队

48:21.790 --> 48:23.790
帽号后

48:23.790 --> 48:25.790
需要加上空格

48:25.790 --> 48:26.790
空格

48:26.790 --> 48:28.790
那么这里

48:28.790 --> 48:30.790
这里在登录

48:30.790 --> 48:31.790
登录页

48:31.790 --> 48:32.790
搞定了

48:32.790 --> 48:37.320
然后我们这里welcome

48:37.320 --> 48:39.320
这里是title

48:39.320 --> 48:40.320
加上一个配置

48:40.320 --> 48:41.320
这是欢迎

48:41.320 --> 48:43.320
欢迎页

48:43.320 --> 48:44.320
保存

48:44.320 --> 48:45.320
你看

48:46.320 --> 48:47.320
欢迎也是不加进去了

48:47.320 --> 48:48.320
好

48:48.320 --> 48:49.320
咱们看一下

48:49.320 --> 48:50.320
这里加进去

48:50.320 --> 48:52.320
肯定是自然而然就生销了

48:53.320 --> 48:54.320
现在没有生销

48:54.320 --> 48:55.320
原因是

48:55.320 --> 48:57.320
因为我们还没有用这个玩意

48:57.320 --> 48:58.320
所以还没有用这个玩意

48:58.320 --> 49:00.320
那么这个玩意怎么配置呢

49:00.320 --> 49:01.320
是不是又是加一个配置箱

49:01.320 --> 49:02.320
对吧

49:02.320 --> 49:03.320
又是加一个配置箱

49:03.320 --> 49:04.320
ok

49:04.320 --> 49:05.320
配置箱是什么

49:05.320 --> 49:06.320
road

49:06.320 --> 49:08.320
那它是什么玩意呢

49:08.320 --> 49:09.320
它是不是个数组

49:09.320 --> 49:10.320
数组怎么写

49:10.320 --> 49:11.320
你不能写中货号

49:11.320 --> 49:12.320
这里不能写中货号

49:12.320 --> 49:13.320
数组

49:13.320 --> 49:14.320
所以这个配置里边

49:14.320 --> 49:15.320
还有多个箱

49:15.320 --> 49:16.320
数组用什么呢

49:16.320 --> 49:17.320
换个行

49:17.320 --> 49:19.320
按一下Type键

49:19.320 --> 49:21.320
Type键就是缩进

49:21.320 --> 49:22.320
不过在VSCode里边

49:22.320 --> 49:24.320
缩进它是用空格实现的

49:24.320 --> 49:26.320
缩进是用空格实现的

49:26.320 --> 49:27.320
就是你这里缩进多个

49:27.320 --> 49:28.320
你看一下

49:28.320 --> 49:29.320
所以一个一个的空格

49:29.320 --> 49:31.320
因为YAM注释里边

49:31.320 --> 49:33.320
它是不允许有Type缩进的

49:33.320 --> 49:34.320
它只能有空格

49:34.320 --> 49:36.320
在YAM注释里边

49:37.320 --> 49:39.320
如果某个

49:39.320 --> 49:40.320
属性

49:40.320 --> 49:41.320
有

49:42.320 --> 49:44.320
多个箭

49:44.320 --> 49:45.320
或多个纸

49:45.320 --> 49:46.320
比方的数组

49:46.320 --> 49:47.320
才有多个纸

49:47.320 --> 49:48.320
或者是一个键箱

49:48.320 --> 49:49.320
还有多个箭

49:49.320 --> 49:50.320
那么

49:50.320 --> 49:53.320
需要进行缩进

49:53.320 --> 49:55.320
但是实际上是空格

49:55.320 --> 49:56.320
它是不支持Type键的

49:56.320 --> 49:58.320
它是只能支持空格

49:58.320 --> 49:59.320
但是在VSCode里边

49:59.320 --> 50:00.320
它本来就是空格

50:00.320 --> 50:02.320
这些东西都是空格

50:02.320 --> 50:03.320
那么我们这里

50:03.320 --> 50:04.320
写上数组

50:04.320 --> 50:05.320
数组怎么写

50:05.320 --> 50:07.320
数组的每一项写个横杆

50:07.320 --> 50:09.320
后面直接写就行了

50:09.320 --> 50:10.320
路征是哪呢

50:10.320 --> 50:11.320
相对于谁呢

50:11.320 --> 50:12.320
我们之前说过的

50:12.320 --> 50:13.320
这个配置里边

50:13.320 --> 50:14.320
它的路征

50:14.320 --> 50:16.320
相对于的是根木炉

50:16.320 --> 50:17.320
所以说我们这里

50:17.320 --> 50:19.320
src是一样的

50:19.320 --> 50:21.320
roads

50:21.320 --> 50:22.320
然后

50:22.320 --> 50:23.320
handle

50:23.320 --> 50:24.320
title

50:24.320 --> 50:25.320
点解释

50:25.320 --> 50:26.320
对吧

50:26.320 --> 50:27.320
所以写进去了

50:27.320 --> 50:28.320
保存

50:28.320 --> 50:29.320
保存过后

50:29.320 --> 50:30.320
我们来看一下这个rotor

50:30.320 --> 50:31.320
你看

50:31.320 --> 50:33.320
是不是生成了一个rotor这个配置

50:33.320 --> 50:34.320
对吧

50:34.320 --> 50:35.320
生成是rotor配置的

50:35.320 --> 50:36.320
咱们来看一下

50:36.320 --> 50:37.320
这边

50:37.320 --> 50:38.320
刷新

50:39.320 --> 50:40.320
现在点首页

50:40.320 --> 50:41.320
是不是有首页了

50:41.320 --> 50:43.320
但登录页和欢迎页

50:43.320 --> 50:44.320
还没有变化

50:44.320 --> 50:46.320
登录页和欢迎页的话

50:46.320 --> 50:47.320
我们来设置一下

50:47.320 --> 50:49.320
登录页和欢迎页

50:49.320 --> 50:51.320
我们这里

50:51.320 --> 50:52.320
把这个加上

50:52.320 --> 50:53.320
登录

50:57.760 --> 50:58.760
这样子

51:00.760 --> 51:01.760
加上

51:01.760 --> 51:02.760
然后欢迎页

51:02.760 --> 51:04.760
欢迎页是不是有两个

51:04.760 --> 51:05.760
因为它还有个全线

51:05.760 --> 51:06.760
还有个全线

51:06.760 --> 51:08.760
全线再加一个

51:08.760 --> 51:09.760
数

51:09.760 --> 51:10.760
数组

51:10.760 --> 51:11.760
对习写就行了

51:11.760 --> 51:12.760
src

51:12.760 --> 51:14.760
全线加前面

51:14.760 --> 51:18.030
加前面

51:18.030 --> 51:20.030
点解钢

51:20.030 --> 51:22.030
点解钢

51:22.030 --> 51:23.030
点解钢

51:23.030 --> 51:24.030
src

51:24.030 --> 51:25.030
rotor

51:25.030 --> 51:26.030
还有什么

51:26.030 --> 51:27.030
private

51:27.030 --> 51:28.030
rotor

51:28.030 --> 51:29.030
点解释

51:29.030 --> 51:30.030
对吧

51:30.030 --> 51:31.030
好

51:31.030 --> 51:32.030
那么这些都是会形成配置

51:32.030 --> 51:33.030
保存

51:33.030 --> 51:34.030
我们来看一下配置

51:34.030 --> 51:35.030
好

51:35.030 --> 51:36.030
配置里边你看

51:36.030 --> 51:37.030
每个是不是加上rotor

51:37.030 --> 51:38.030
这个

51:38.030 --> 51:39.030
对吧

51:39.030 --> 51:40.030
是不是加上去

51:40.030 --> 51:41.030
完全一样的效果

51:41.030 --> 51:42.030
你看

51:42.030 --> 51:43.030
登录

51:43.030 --> 51:44.030
登录页

51:44.030 --> 51:45.030
没问题

51:45.030 --> 51:46.030
欢迎要先登录

51:46.030 --> 51:47.030
好

51:47.030 --> 51:48.030
没问题吧

51:49.030 --> 51:50.030
说明

51:50.030 --> 51:51.030
就是

51:51.030 --> 51:52.030
约定深路由

51:52.030 --> 51:54.030
绝大部分时候

51:54.030 --> 51:56.030
都可以完成配置深路由的东西

51:56.030 --> 51:57.030
所以说

51:57.030 --> 51:58.030
我们以后

51:58.030 --> 51:59.030
绝大部分时候

51:59.030 --> 52:01.030
用的都是约定深路由了

52:01.030 --> 52:03.030
但是有的时候

52:03.030 --> 52:05.030
可能

52:05.030 --> 52:06.030
某种原因

52:06.030 --> 52:08.030
可能某种原因

52:08.030 --> 52:09.030
你可能需要对无米

52:09.030 --> 52:11.030
本身的框架

52:11.030 --> 52:12.030
做一些少量的更改

52:12.030 --> 52:14.030
可能要对一个路由的配置

52:14.030 --> 52:16.030
进行全局的处理等等

52:16.030 --> 52:18.030
可能会使用到配置深路由

52:18.030 --> 52:19.030
看具体的情况

52:19.030 --> 52:20.030
但绝大部分时候

52:20.030 --> 52:21.030
我们都使用的是约定深路由

52:21.030 --> 52:23.030
因为太方便了

52:23.030 --> 52:26.030
无米官方也建议你使用约定深路由

52:26.030 --> 52:27.030
路由这一块

52:27.030 --> 52:30.030
咱们就做完了

52:30.030 --> 52:31.030
下节课

52:31.030 --> 52:34.030
要不然我们来一个完整的例子

52:34.030 --> 52:35.030
算了

52:35.030 --> 52:36.030
还不行

52:36.030 --> 52:38.030
这个仓库怎么处理

52:38.030 --> 52:40.030
我完整的例子也做不了

52:40.030 --> 52:42.030
我们把仓库取了过后再说

52:42.030 --> 52:44.030
那么这路由这一块就搞定了

52:44.030 --> 52:45.030
大家还去练习一下

52:45.030 --> 52:47.030
主要是练习一下这一块

52:47.030 --> 52:48.030
主要是练习一下

52:48.030 --> 52:50.030
在约定深路由里边

52:50.030 --> 52:52.030
这个东西有什么用

52:52.030 --> 52:53.030
这个相对的主线

52:53.030 --> 52:54.030
应该怎么去写

52:54.030 --> 52:56.030
这个主线该起什么样的作用

52:56.030 --> 52:57.030
怎么来进行控制权限

52:57.030 --> 52:59.030
主要是把这东西去练习一下

52:59.030 --> 53:00.030
好吧

53:00.030 --> 53:02.030
这是关于路由这一块

