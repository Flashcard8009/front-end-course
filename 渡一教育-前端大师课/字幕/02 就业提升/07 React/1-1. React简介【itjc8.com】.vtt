WEBVTT

00:00.560 --> 00:06.160
同学们大家好 我姓袁 我叫袁靳

00:06.160 --> 00:12.160
这门课叫做React全家统 将用我来给大家讲解这门课程

00:12.160 --> 00:17.960
这第一节课我们对React所有的概述 让大家认识一下这门技术

00:17.960 --> 00:22.360
我们首先看到React 我这里说一下这个东西

00:22.360 --> 00:25.760
我这里的笔记是用markdown来记录的

00:25.960 --> 00:31.160
因此大家下去拿到原代码之后呢 就是原代码里就包含我的笔记 对吧

00:31.760 --> 00:36.960
拿到这个笔原代码之后呢 大家可以直接看这个markdown的原文件啊 就这个原文件

00:37.360 --> 00:42.760
也可以呢 去安装一个插件 看上去呢 更加友好一点 安装什么插件呢

00:43.320 --> 00:46.360
其实vscode呢 它自带了一个就是

00:47.360 --> 00:54.560
就是那个能够显示markdown文件的工具啊 它自带了一个就这个东西 你看一下就打开侧边域了

00:55.160 --> 01:01.160
打开一下 你看 这边就可以预兰出来啊 这个markdown的文件啊 这样子的看上去要舒服一点

01:01.460 --> 01:08.860
当然也可以去安装一个插件啊 我强烈的推荐大家安装一个插件叫做收下吧 叫做markdown

01:11.160 --> 01:15.040
叫做这个啊previewpreview什么意思啊 就预兰啊

01:16.160 --> 01:23.360
叫什么意思呢 就是预兰增强 安装一下这个插件 安装了之后呢 你会发现侧边哪里边呢 多了这么一个东西啊

01:23.560 --> 01:29.760
就多了一个就是预兰 预兰按钮 就这个东西 看没啊 你点一下它啊 点一下它

01:30.640 --> 01:36.680
这边然后点击右键opening browser 在浏览器里边打开啊 我们打开一下啊

01:37.760 --> 01:39.560
这样子看上去呢 更加舒服一点啊

01:40.360 --> 01:42.680
所以大家推荐大家啊 去安装一下这个插件

01:43.440 --> 01:51.040
首先是呢 rex rex的官网啊 官网就这个地址啊 他有中文有其他语言都有 所以我们看一下这个官网啊

01:52.040 --> 01:58.400
啊 就这个地址啊 就官网里边让他有文档有教程啊 我们的讲解顺序呢

01:59.160 --> 02:05.680
整体上跟官网差不多 但是呢 讲解的细微程度肯定要比官网啊 要细得多

02:06.200 --> 02:13.440
而且呢 就是取得一些案例啊 要比官网来要使用的多啊 所以说我们还是把它做成一个教程了

02:13.920 --> 02:18.400
不过从这门课开始啊 应该要应该说要从伍佑开始

02:18.800 --> 02:25.360
伍佑一开始 从伍佑一开始的大家学习的时候呢 就一就要一边结合我们的视频教程

02:25.880 --> 02:33.640
一边呢 去结合官网 要养成一个能够阅读官方文档的一个习惯 因为我们学习前端的话

02:34.880 --> 02:36.840
学习到后边啊 咱们这个课呢

02:37.520 --> 02:41.880
肯定是有了一些新技术过后呢 我们尽量是往课程里面加

02:42.640 --> 02:48.160
但是呢 前端的技术发展非常非常快 东西非常非常多 如果你

02:49.200 --> 02:54.760
没有一个阅读文档的能力的话 后续到了公司以后就业之后

02:55.320 --> 03:00.080
你的职业发展道路呢 也挺坎克的 所以说呢 大家尽量的啊

03:00.920 --> 03:05.720
看完视频教程过后呢 没事的时候呢 去读一下官网 对大家非常非常有好处

03:06.280 --> 03:11.560
好吧 这是react的官网啊 我们首先说第一个点啊 什么是react

03:12.840 --> 03:13.080
啊

03:14.680 --> 03:18.760
其实呢react这个东西呢 没有大家想象的那么

03:19.480 --> 03:21.960
庞大 也没有大家想象那么高大上

03:22.440 --> 03:28.200
它是什么东西呢 首先它是由facebook研发的啊 它的公司是出品的公司是facebook

03:28.680 --> 03:32.840
facebook的公司大家应该都知道吧 对吧 就是类似于呢 国内的微博

03:33.400 --> 03:35.800
加上微信啊 就相当于这么个东西

03:36.600 --> 03:42.120
它是由这个公司研发的 它用来解决什么问题呢 是用来解决UI复杂度的问题

03:42.600 --> 03:49.400
因为当时呢 facebook里边 内部的项目里边 他们要处理很多UI界面的一些功能

03:49.800 --> 03:56.520
他会会发现了这个UI界面处理起来 非常非常的麻烦 于是呢 他们就自行开发出来了一套

03:57.160 --> 04:05.240
啊 一套东西 就是react来解决 主要的目的呢 是来解决用户界面的复杂度 UI就是用户界面吧

04:06.520 --> 04:11.400
那么它的本质是什么呢 本质是一个开源的java scripts cool

04:11.960 --> 04:18.920
注意啊 我这里没有说什么框架啊 我就说它是一个java scripts cool 就类似于什么jacquery啊

04:19.560 --> 04:27.400
lodash啊mockjess啊像这种东西啊 是一个cool 它的级别没有那么大 它不是什么框架啊 它就是一个cool

04:28.200 --> 04:30.760
目前呢 它是由react联合社区维护

04:31.560 --> 04:39.400
这个联合社区呢 有facebook的成员也有一些个人开发者啊 他们联合起来来维护这个jess cool

04:40.120 --> 04:48.120
我们从观望里边也可以看到很清楚啊 它说的很清楚就是用于构建用户界面的jess cool

04:48.440 --> 04:53.080
所以它是主要目的呢 就是来处理界面上各种各样的问题来降低

04:53.960 --> 04:58.920
啊 就是我们的页面中的界面的复杂度啊 主要是来处理这么一个东西

04:59.720 --> 05:02.680
啊 既然是jess cool 它肯定是依赖 既是语言 对吧

05:03.640 --> 05:11.080
好 然后呢 下面有个注意点啊 就是说很多人呢 对react的理解上呢 可能多多少少呢 存在一些问题啊

05:11.800 --> 05:20.040
也不能说问题吧 可能有这么一种习惯 老实认为呢react跟viu一样啊 他是一个什么mavn框架啊

05:21.320 --> 05:24.840
哎 我这个普通话这个音域口语啊 真的是口角啊 真的是

05:25.640 --> 05:34.840
认为呢react跟viu一样也是一个mav vm框架 或者说有些人呢 还会说react呢 是一个mvc框架的

05:35.640 --> 05:41.960
试图部分啊 老实把它跟框架扯在一起 实际上呢react跟框架没有什么关系

05:42.280 --> 05:45.480
他就是一个cool 他用来解决用户界面的问题

05:46.280 --> 05:52.600
因此呢 从官方网站上可以看到啊react呢 它本身对自己宣传的是非常非常低调的啊

05:52.920 --> 05:57.160
他只是知道自己的定位是什么啊 他就是用来构建用户界面的

05:57.800 --> 06:02.040
这正因为如此呢react里边很多特点呢 都跟这个东西相关

06:02.600 --> 06:06.440
他为什么非常非常容易扩展他的社区为什么这么活跃

06:07.080 --> 06:11.080
因为他做的事情真的不多 他就做了一个就是处理用户界面

06:11.640 --> 06:16.440
剩下的事情呢全部交给第三方插件去完成啊 第三方的cool去完成

06:17.400 --> 06:21.800
所以说react呢 因为他本身的这种对自己的定位

06:22.200 --> 06:25.800
所以说跟无忧呢还是有很大的区别的 那咱们看一下无忧啊

06:26.760 --> 06:28.520
无忧里边他说的就比较那个

06:29.400 --> 06:30.200
就是

06:31.320 --> 06:33.320
比较高达上了啊 我们看一下无忧的官网

06:33.640 --> 06:39.320
无忧的说 说的是他是一个界式框架 对吧 那有些同学说那框架到底是什么东西啊

06:39.640 --> 06:43.720
框架有一个显著特点啊 他框架呢他带有侵入性

06:44.680 --> 06:51.000
什么叫侵入性呢 就是要改变你的开发代码的方式

06:51.720 --> 06:57.000
啊 你要用什么方式开发代码 而且呢他要求你必须要用这种方式来开发

06:57.480 --> 06:58.600
啊 不能用其他的方式

06:59.080 --> 07:01.400
他有一套完整的规则啊 让你

07:02.360 --> 07:05.800
整个系统都用都要用这种方式来开发

07:06.840 --> 07:09.720
啊 这就是框架的一个显著特点 他具有侵入性

07:09.800 --> 07:15.720
但是如果x他的侵入性非常非常小 你可以用这种方式写也可以用另一种方式写

07:15.960 --> 07:17.400
他非常非常的灵活

07:17.640 --> 07:19.720
真因为如此呢 他就可以很好的

07:19.960 --> 07:22.280
与一些第三方的插件来进行融合

07:22.520 --> 07:24.040
你其实看一下无忧里边

07:24.840 --> 07:30.440
他的第三方的库多不多了还是蛮多的 但是他的核心的东西 比方说什么路由啊

07:30.840 --> 07:33.160
比方说他的什么那个就是

07:34.040 --> 07:37.880
数据处理啊 比方说无忧x对吧 都是官方出品的

07:38.040 --> 07:47.960
第三方呢 要融合进来了可能就没有那么容易了啊没有那么容易了 因为无忧呢 他的侵入性还是比较高的

07:48.440 --> 07:55.480
因此呢 无忧呢 他把自己宣称为一个jsc框架 但是rex非常低调啊 就说自己就是一个jsc

07:56.120 --> 07:57.480
这是官运第一个点啊

07:58.040 --> 08:02.600
就是什么是rex 他主要目的呢是用于解决UI复杂度的

08:03.800 --> 08:05.000
好 再说下一个啊

08:05.960 --> 08:09.400
rex的特点 咱们快说过一下 因为像这些东西啊

08:09.720 --> 08:14.840
咱们后边写聚集的程序的时候 在讲解这个课程的时候呢 大家慢慢就会体会到了

08:15.320 --> 08:16.440
第一个呢 就是轻量

08:17.560 --> 08:20.120
rex的元代码非常非常少

08:20.760 --> 08:24.120
加起来加注释啊 他的开发版啊 因为我们知道

08:24.600 --> 08:29.880
元代码里边呢 他有开发版有压缩版对吧 压缩版就是那种就是叫做

08:30.040 --> 08:33.640
这个中文怎么翻译了 这个东西

08:34.200 --> 08:37.400
一般的话 元代码有两个版本 一个就是development

08:37.960 --> 08:38.680
development

08:41.000 --> 08:43.480
一个就是开发版 一个就是product

08:44.920 --> 08:45.960
product就是

08:47.000 --> 08:52.680
就是发布版 就是产品版 产品版一般是都是经过压缩的啊 包括结块也也是这样 对吧

08:52.840 --> 08:57.720
他一个压缩版本和一个没有压缩版本 没有压缩版本里边了 他就包含了各种注释

08:58.200 --> 09:00.680
啊 而且代码的结构上写的比较清晰

09:01.400 --> 09:02.680
rex的开发版

09:03.160 --> 09:09.560
加上他所谓的元代码 加上注释一共就3000行 你看我们平时上那个公开直播课

09:10.440 --> 09:17.560
呃 一个多小时也就写了多 写了多少代码 一般的话 加上atm和css的话 一般两三百行代码要有吧

09:17.880 --> 09:21.560
对不对 所以他的代码真的是不多啊 就3000来行代码

09:21.800 --> 09:26.360
所以说他非常非常的轻量 这是他第一个特点啊 第一个特点呢 他是他的原生

09:27.320 --> 09:34.120
他的所有代码呢 都是使用原生的结石书写二层的啊 不依赖其他的任何库

09:34.360 --> 09:41.960
那这里呢 说的不是很准确啊 实际上他会依赖一点点库啊 一点点库 那几个库呢 也非常非常极其轻量

09:42.680 --> 09:46.680
呃 依赖好像我记得啊 依赖两个库啊 就依赖两个库

09:47.240 --> 09:51.640
呃 那两个库呢 也非常非常轻量 几乎是可以认为他不依赖其他任何库

09:52.200 --> 09:56.600
全部代码都是用原生结石书写二层的啊 这是他第二个特点啊 原生

09:58.120 --> 10:00.040
呃 第三个特点呢 是易扩展

10:00.600 --> 10:06.520
就是react对代码的封装程度呢 比较低 他不像woo呢 他使用了啊 他没有使用

10:06.920 --> 10:12.920
就是react啊 他没有使用什么样的魔法 什么样魔法呢 你看一下woo里面他就使用了魔法了

10:13.960 --> 10:17.880
呃 魔法是什么东西呢 就是一些黑科技啊 一些非常非常

10:18.360 --> 10:26.040
怪异的东西 就是我们看上去呢 哎 怎么出现这么神奇的现象 就像这些这种东西啊 就是我们把它认为是魔法

10:26.440 --> 10:33.320
woo里面使用了什么魔法呢 woo里面你们学过woo啊 应该知道啊 woo的一个核心原理就使用了什么defan

10:34.600 --> 10:37.880
property 对吧 woo里面说用了这个东西 对不对

10:38.440 --> 10:43.960
啊 他用了这个东西呢干嘛呢 你写了一个对象 把它挂载到哪里 把它挂载到data上面

10:44.280 --> 10:49.800
那么他会把data里面的属性呢 用defanproperty 把它挂载到woo的实力里面去

10:50.360 --> 10:58.120
对吧 他使用了这种魔法 但是呢react他几乎是没有使用任何的魔法啊 几乎是没有 他用了一点点

10:58.440 --> 11:04.280
没有使用过多的去使用魔法 因此呢 他的很多代码呢都非常非常好理解

11:04.680 --> 11:10.120
他就是用原生技艺是按部就班的一个个把写出来的啊 没有使用什么魔法

11:11.000 --> 11:18.040
但是呢 同时呢 一会我们说一说啊 之后我们学习也会看到 但是呢 这样子一来呢 也会造成一个问题呢

11:18.360 --> 11:25.560
你学习起来呢 看上去呢 他比woo的使用上来会感觉上有些麻烦啊 会觉得有些麻烦

11:26.200 --> 11:31.320
啊 因为他没有使用什么魔法 都是用原生的解释 就是挨债的解出来的

11:31.800 --> 11:33.640
啊 我们之后学习的时候就体会到了

11:34.440 --> 11:40.200
但是也因为如此呢 所以说react里边很多功能啊 他都可以扩展

11:40.680 --> 11:46.760
都可以非常轻松的扩展 因为你没有对他进行过于没有对他进行过渡的封装

11:47.160 --> 11:53.080
所以说可以很轻松的跟其他第三方的工具啊 跟第三方的库啊 进行结合

11:53.560 --> 11:55.560
啊 这就是他第三个特点啊 一扩展

11:56.600 --> 12:02.600
啊 第四个特点呢 他是 这是一个非常非常重要的一个特点 他不依赖速度环境

12:03.320 --> 12:07.320
react他实际上只依赖一个东西 就是解释语言本身

12:07.960 --> 12:12.760
啊 他就是用解释语言本身写的 你要用他的话也只能用解释语言

12:13.160 --> 12:16.600
所以他就依赖这个东西 他其他不依赖任何其他东西

12:17.400 --> 12:20.040
包括运行环境 因为我

12:20.840 --> 12:27.160
应该是 如果你看了我之前讲的那个ges课程的话应该知道啊 我当时非常非常强调了一点

12:27.320 --> 12:34.120
就是说咱们ges他只是一个语言啊 我们把它叫做es语言标准对吧 我们现在

12:34.520 --> 12:37.400
学到es6学到es7对不对

12:38.040 --> 12:43.240
那么他是一个语言标准 语言语言呢他并不会依赖速度环境

12:43.640 --> 12:45.480
这个语言他运行在浏览器环境

12:46.040 --> 12:49.480
运行在手机端运行在桌面端随便啊 随便

12:49.880 --> 12:56.840
你速度环境里边可能会给他提供一些新的api 比方说浏览器环境里边你会给他提供一个温斗对象对吧

12:57.160 --> 13:00.760
还有什么document对象 那这些是数组环境提供的

13:01.560 --> 13:06.280
啊 那么到了别的数组环境里边可能又提供了别的东西了啊 是这么个意思

13:07.320 --> 13:10.920
由于react他只依赖原生的解释语言

13:11.880 --> 13:14.760
他不依赖速度环境就意味着啥呢

13:15.400 --> 13:18.600
react可以被轻松的移植到浏览器

13:19.240 --> 13:22.440
啊 浏览器速度环境啊 桌面应用

13:23.400 --> 13:26.120
移动端这些都可以适配react

13:26.920 --> 13:33.320
理论上都可以适配 这也是为什么我们后边学习那个rn就是react native

13:34.200 --> 13:37.960
我们现在越来越火了对吧 我们要用react的原因

13:37.960 --> 13:41.960
因为他非常容易跟那个就是第三方的工具啊 第三方的扣进行结合

13:42.200 --> 13:45.800
也能够在跟在不同的数组环境下边也能够使用

13:46.360 --> 13:49.000
你可以看到我们后边会讲react原码

13:49.480 --> 13:51.960
因为看到react整个接待码里边呢

13:52.840 --> 13:57.960
他是没有写任何一项什么document类啊 什么window啊这些东西都没有写啊 都没有写

13:58.920 --> 14:02.120
好吧 这是他的这个特点啊 不依赖速度环境

14:02.360 --> 14:04.120
所以说他可以被轻松的移植

14:05.480 --> 14:09.960
那么5u呢 以后他说5u 5u实际上是依赖了速度环境的啊

14:10.200 --> 14:13.640
不过他里边呢 他里边呢 进行了后来进行了拆分

14:13.960 --> 14:16.680
一开始是他是依赖了速度环境的 他只能用于网页

14:17.240 --> 14:22.120
而后来呢进行了拆分啊 拆分成了就是5u core啊 就是5u核心库

14:22.360 --> 14:24.520
核心库里边呢 他就没有依赖速度环境了

14:24.680 --> 14:27.480
但是我们平时用了5u呢 用了那个js啊

14:27.640 --> 14:31.240
他是全部一起打包的啊 他里边是依赖了速度环境的

14:32.440 --> 14:37.480
所以说5u他在移动端发展呢 他就没有这个react那么快啊

14:37.880 --> 14:41.800
因为react最开始的时候他就是不依赖速度环境的

14:42.440 --> 14:44.440
啊 非常的深思深思熟虑

14:45.160 --> 14:49.800
好 下一个特点啊 就是关于渐进式啊 渐进式呢 大家学习了5u应该能够体会到

14:49.800 --> 14:53.720
就是什么意思呢 就是说我们对一个先有的工程呢 进行改造

14:54.120 --> 14:55.800
改造的时候呢 我们可以

14:56.760 --> 14:59.720
一点一点的改 不用把整个工程全部推翻重来

15:00.120 --> 15:02.600
一点一点的改 是这么个意思啊 就是渐进式

15:03.240 --> 15:05.240
react呢 他不是一个框架啊

15:06.200 --> 15:10.360
因为他不是一个框架 对整个工程呢 没有强制约束力 我们之前说

15:10.680 --> 15:14.120
框架呢 他就有侵入性 他要求的必须要怎么样怎么样

15:14.280 --> 15:20.120
react呢 这种要求很少很少啊 他对整个工程呢 几乎是没有任何强制的约束力的

15:20.360 --> 15:25.960
所以说呢 我们可以轻松的跟其他的怎么接query啊 跟他其他的库进行融合

15:26.200 --> 15:28.200
我们一个页面里边既可以有接query

15:28.600 --> 15:30.600
也可以有react

15:31.160 --> 15:34.360
所以说我们到到时候呢 要去改造一个网站的话

15:34.600 --> 15:38.040
我们可以一点一点的改造 不用那么着急啊 不用把整个推翻

15:38.440 --> 15:41.320
当然我们讲课的时候呢 我们主要是讲解

15:41.960 --> 15:46.280
从一开始搭建工程的时候就使用react 这是我们主要讲解的方向

15:46.920 --> 15:49.880
好吧 这是关于他的这个特点啊 渐进式

15:52.040 --> 15:54.040
下一个啊 他是单项数据流

15:54.600 --> 15:58.120
这个呢 你们在学习vue的时候呢 应该也接触过 就是

15:59.160 --> 16:04.280
vue也好啊react也好 他们都是主见化开发啊 都是主见化开发

16:04.520 --> 16:08.680
就是把我们的网页呢 分成一个一个块 每一个块呢 是一个组件

16:09.000 --> 16:14.440
大组件呢 包小组件 小组件里面也有小组件啊 每一个组件呢 他具有样式

16:15.240 --> 16:18.280
具有内容啊 样式式啊 css

16:18.600 --> 16:22.520
内容式啊 介式 还有什么功能 内容式 ATML

16:23.320 --> 16:25.800
功能是什么 就是介式啊 就介式

16:25.960 --> 16:28.440
所以说react他本身也是主见化开发

16:28.840 --> 16:31.080
那么组件之间的数据交互

16:31.480 --> 16:37.640
就是一个组件的数据要到另一个组件里面去 他是怎么流动的呢 他是字顶而下的流动

16:38.920 --> 16:47.160
就是说我们就像就类似于什么 类似于ATML的文档结构一样 ATML文档是不是一个数 对吧 我们把它称之为动数对不对

16:47.640 --> 16:52.200
动数 那么在react里面吧 他叫做组件数啊 就是一个组件数

16:52.520 --> 16:55.960
这个组件数的数据呢 是字顶 就是从根开始

16:56.680 --> 17:03.800
往下流动的 后面我们学习的时候呢 大家具体就可以感受到了啊 这他有一个特点 我们这里呢 先有什么个印象就行了

17:05.000 --> 17:10.520
然后呢react跟无忧的可能是最大的区别吧 就在于react里面呢

17:11.160 --> 17:15.560
他的界面啊 他在哪里声明的呢 他在GS代码里边声明的

17:16.040 --> 17:21.080
他的界面呢 不是在啊 我们无忧在哪里说明的 无忧是在模板里边的吧

17:21.480 --> 17:30.120
无忧里边是在哪 是在template里边进行声明的界面啊 所以说无忧的界面呢 他更加像一个什么呢 更加像一个ATML

17:30.760 --> 17:35.240
人家像一个ATML代码 而那个react里边的代码呢 他就

17:36.760 --> 17:41.720
感觉上就不是很像ATML了 他更加像什么 更加像GS

17:42.280 --> 17:46.920
所以说他是在GS里边声明界面 那么这个东西哪个好 哪个差呢

17:47.240 --> 17:52.680
这东西不好说 各有各的优势啊 各有各的优势 你在GS代码里边去声明界面

17:53.320 --> 17:56.120
更加的灵活 因为GTS的语言特性

17:57.000 --> 18:01.720
决定了他的功能上一定是比谁强大 一定是比ATML强大 对吧

18:02.200 --> 18:07.880
你在ATML里面声明的东西和在GS里面声明的东西 那肯定是灵活度上 肯定是GS更占优

18:08.440 --> 18:12.760
但是呢 要从学习的成本上来看的话 那肯定是

18:13.720 --> 18:18.600
不要占优一点 因为他是用ATML代码 谁不会ATML呢 对不对 都学到这来了

18:18.680 --> 18:24.360
ATML已经非常非常熟悉了 所以说我用我们熟悉的ATML代码来声明界面呢

18:24.920 --> 18:30.600
更加符合咱们人的思维习惯 但是灵活度肯定没有在GS里面声明

18:31.160 --> 18:32.680
就是那么灵活

18:33.560 --> 18:37.160
是这么个意思啊 好 我们后边学习 聚集的学习的时候呢 就会

18:37.640 --> 18:42.200
非常清楚的感受到这些特点了啊 我们先来大致的认识一下这些特点

18:43.080 --> 18:46.840
好 下面呢 是我对react和vue呢 做了一个对比

18:48.040 --> 18:54.520
首先是那个全球使用量啊 这个全球使用量上 那么我这里打勾的就占优的啊 就占优的

18:54.840 --> 19:00.440
就是react肯定要占优 因为国外的很多公司呢 都会首选react

19:01.720 --> 19:04.920
国内呢 使用的比较多的是vue

19:05.320 --> 19:11.480
国内的使用的比较多的是vue 所以说 我们咱们国内的很多的课程

19:12.200 --> 19:21.640
可能比较偏重于vue 比较偏重于vue 但是呢 如果你以后要经营一些外企的话 你肯定要学习react

19:22.280 --> 19:29.000
啊 这第一个啊 这前面两个啊 就是使用量上 就是在npm的下载量上呢 react是要占优的

19:29.560 --> 19:31.960
啊 在npm的下载量上 react是要占优

19:32.760 --> 19:35.880
啊 但是vue呢 也差不了多少啊 vue发展的也蛮快的

19:36.520 --> 19:39.880
啊 第三个对比呢 是他们的性能 他们的性能呢

19:40.360 --> 19:47.000
因为他们的实现原理大致相同 所以说他们的性能呢 都是比较强的啊 都是比较强的

19:47.480 --> 19:52.120
啊 里面学习vue肯定学习了什么虚地dome 对不对啊 那么react他也是这样做的

19:52.840 --> 19:58.760
应该说react vue后来做vue的时候啊 咱们邮寓习大臣做vue的时候

19:59.400 --> 20:07.320
肯定是参考了大量的react里边的原理啊 他是按照这个react那一套东西来实现底层的就是逻辑的

20:08.280 --> 20:12.200
啊 因为react先出来嘛 对不对啊 vue呢 是后边出来了

20:13.160 --> 20:19.400
啊 这是关于他们的性能啊 性能啊 他下面这个呢 是上手程度 拉这个毫无疑问

20:20.280 --> 20:27.080
从来没有任何一个就是前端的uik或者说框架吧啊 你有的时候我们我们说习惯了

20:27.320 --> 20:32.840
说前端呢 有三个框架 vue react和安格拉 安格拉我们现在国内几乎是不长用

20:32.840 --> 20:37.160
所以说 我们安格拉那这个课程呢 做一个选休啊 做一个选休课程

20:38.280 --> 20:46.600
就是说一上手了 肯定是三大框架中 肯定是vue最占优的 他学习的真的是太容易了啊 太舒服了

20:47.240 --> 20:51.000
不知道大家有没有看那个vue的那个官方网站

20:51.720 --> 20:57.480
他的这个视频教程啊 就几分钟啊 你可以去看一下官方网里面的视频教程 大家看一下

20:58.280 --> 21:03.560
我不 我这里不播放啊 不播放 就是说你们下来有兴趣的话 自己看一下

21:04.600 --> 21:06.680
在哪里呢 学习一个教程

21:08.200 --> 21:09.160
哎 我记得

21:11.080 --> 21:18.380
哎 在哪里呢 哎 这里我突然一下找不到了啊 突然一下找不到了

21:19.740 --> 21:22.220
vue是什么 我看一下这里

21:23.580 --> 21:30.220
我记得vue上面是有一个视频教程的啊 是有一个视频教程的 讲得非常非常好 几分钟时间 就几分钟时间

21:30.460 --> 21:36.460
你就可以体会到vue的强大 所以说我们要说那个一上手的话 那毫无疑问一定是vue

21:36.940 --> 21:46.140
但是要说到灵活度啊 要能够灵活的拆分 灵活的定制啊 定制里边的很多东西的话 那vue的话就有点

21:46.780 --> 21:52.300
用起来的话就有点牢活了啊 就有点牢活了 因为vue对有些东西呢 他由于使用了一些

21:53.260 --> 21:53.660
魔法

21:54.220 --> 21:56.540
就是 比方说我们刚才说那个define property

21:57.020 --> 22:00.940
使用了这些东西呢 我们到时候扩展起来呢 会遇到很多很多的障碍

22:01.500 --> 22:06.380
所以你要说定制灵活度的话 那一定是react着占有啊 这个毫无疑问的

22:06.940 --> 22:13.900
这正因为如此呢 所以说很多的大型企业 因为大型企业里面的功能很复杂 它的业务场景呢比较特殊

22:14.540 --> 22:24.140
因此呢 他更加愿意选择react这种灵活度比较高的 他里边不缺技术大神也不缺工程师啊 这些东西他成本不用去考虑

22:24.620 --> 22:27.580
所以说呢 他更加用意愿意选择了react

22:28.140 --> 22:34.300
就说你react学不学呢 那肯定得学呀 你不学react能称为一个全田的工程师吗 那肯定不能啊

22:34.540 --> 22:41.740
就是五有和react这两个是必学的 安格拉拉那个东西呢你可以选修啊 可以选修 但是目前我们国内呢

22:42.140 --> 22:46.140
确实用的没有那么多了 而且他的市场份量呢 现在也比较小

22:46.620 --> 22:49.340
所以react和五有了这两个东西是必学的啊

22:50.460 --> 22:59.820
五有了相对来讲呢 就会在中小型企业里面用的比较多 因为中小企业企业里边呢 他没有请那么多工程师啊 请不请那么多大神

23:00.300 --> 23:02.300
所以说呢 他一般愿意请一些就是

23:03.180 --> 23:07.660
呃 初学者或者是有一点点工作经验就行 那么五有呢

23:08.220 --> 23:13.340
是学习的最简单的成本最低的 所以说他愿意使用五有 而且做起来最快的

23:13.740 --> 23:17.020
对吧 所以说中小企业的里边呢 他比较适合五有

23:17.660 --> 23:24.700
为什么在中国里边 说中国啊 都说说说说的是中国啊 为什么在国内呢 五有用的比较多呢 因为他中小企业非常非常多

23:25.420 --> 23:25.980
越来越意思吧

23:26.860 --> 23:31.180
好 然后关于生态 就他的整个生态环境 那肯定是react 要占有

23:31.740 --> 23:35.260
react 的社区肯定是活跃度要高了多 为什么呢 因为

23:36.220 --> 23:39.980
facebook 了解一下 这么庞大的一个企业 他在去

23:40.540 --> 23:45.980
呃 作为主力去推动这个技术 那肯定他的生态呢 要比五有的生态呢 要丰富一些

23:46.620 --> 23:54.220
不过五有里边我们平时用的话 就是他官方出品的一些东西 对吧 五有啊 五有rotor啊 五有rex啊 这些东西

23:54.460 --> 24:00.860
所以说我们用他官方的出品的就已经够了啊 已经够了 一些第三方库呢 有的时候呢 我们觉得有些好用的也会也会用

24:01.260 --> 24:08.700
但是呢react 几乎是被一些庞大的第三方库包围起来的一个东西 主要的生态环境呢 要比五有好一些啊

24:09.180 --> 24:11.020
这他们的做了一个对比

24:12.300 --> 24:17.900
好 然后接下来说一下 就是跟那个支持五官的东西了啊 就是说一下咱们的这个课程

24:18.300 --> 24:25.420
怎么来学习 因为我们学习的是react全家统 所以说这个课程呢 肯定是时长会拉的比较长一点啊

24:26.780 --> 24:34.380
整体原则啊 咱们学习的路径 整体的原则是先了熟悉api 就熟悉他怎么用 先能干活

24:34.860 --> 24:40.220
你活都不能干 你我解释半天元 你解释完了过后 你听到云粒物理的

24:40.780 --> 24:44.940
仍然写不出来东西 所以说我们首先呢 学习他的api啊 怎么去用他

24:45.500 --> 24:48.780
把这一部分学习完了过后呢 再去深入理解原理

24:49.100 --> 24:55.180
深入理解原理的时候呢 我就会设计到怎么圆码呀 一些操作的小技巧啊 怎么去

24:56.220 --> 25:00.460
改善这一份 就是怎么去定制这一块的功能啊 等等等等

25:01.100 --> 25:06.380
怎么去自己写一个类似的功能出来呀 就是要这些东西的啊 就是我们先来熟悉

25:06.780 --> 25:11.900
api 先能干活 能干活之后呢 咱们再去理解原理 这也是咱们

25:12.220 --> 25:16.780
呃 特别是我的课程里边啊 比较愿意采用的一种方式

25:17.100 --> 25:21.340
这对无论是对初学者也好 对有一些基础的也好 都比较

25:22.060 --> 25:24.460
嗯 都比较友好 这种这种顺序

25:24.940 --> 25:27.260
都比较友好一点 你如果就是

25:28.140 --> 25:32.860
是一个有经验的啊 开发者 你接触过这一块知识 那么你api快速过一下

25:33.260 --> 25:37.180
后边呢 就主要是看他原理部分 那如果你是一个初学者

25:37.500 --> 25:40.860
没有接触react 那么你好好跟着课程把react

25:41.020 --> 25:44.380
把他的api 当初先熟悉了 先能干活 然后再去理解他的原理

25:45.020 --> 25:48.860
因此呢 基于这样的原则呢 咱们把课程呢 分为了这么一些部分啊

25:50.060 --> 25:55.980
第一部分呢 我们肯定是讲react本身啊 不使用任何的 几乎是不使用任何的第三方库

25:56.620 --> 25:59.980
就使用react本身的东西啊 我们看一下react

26:00.620 --> 26:05.660
里边提供了哪些api啊 该怎么去使用 这里边呢 又分为两个部分啊

26:05.980 --> 26:08.300
第一个部分呢 是他的基本使用方式

26:09.100 --> 26:15.100
就最基础最基础最核心的内容 那么是学完这部分之后呢 你要有能力制作各种组件

26:15.420 --> 26:18.860
并且呢 理解react的基本运作原理 这他基础部分

26:20.060 --> 26:25.180
而经纪部分呢 我们要掌握的是react里边一些也不能叫什么黑科技吧

26:25.580 --> 26:30.700
应该是说就是react里边一些很特别的东西啊 很特别的东西

26:31.100 --> 26:33.740
我们可以利用这些东西呢 能够提高我们的代码质量

26:34.380 --> 26:37.500
让我们代码了没 没有那么难看 学习来着没有那么累

26:38.060 --> 26:43.420
我们主要是分成这么两个部分啊 那么这两个部分学完之后呢 我们把react先结束

26:44.380 --> 26:47.340
当然呢 语言 语言马上我们现在还不着急讲啊

26:48.060 --> 26:51.660
好 我们把react结束之后呢 我们再学习react rotor

26:51.900 --> 26:55.820
就相当于是view rotor 就是路由 路由 我们再学习这一块

26:56.220 --> 26:58.860
而这一块都比较简单了 然后再学习redux

26:59.340 --> 27:05.980
它相当于是什么view x 它的就是一个数据 数据处理库 一个数据的处理库

27:07.020 --> 27:12.860
react里边还有本身 他本身是一个非常非常庞大的东西 他有他自己的功能

27:13.180 --> 27:17.020
也有了各种一些第三方的库给他对他进行支持

27:17.500 --> 27:20.780
所以说他不像view x里边 他只有一个对吧 学习一个就行了

27:21.020 --> 27:24.940
但是react他要学习很多东西 说这一块呢 讲的时间也可能比较长

27:25.100 --> 27:30.060
好 接下来呢 把这三个东西学习完了过后 你可以对比view嘛

27:30.300 --> 27:36.540
view当时我们学习的时候 应该也差不多是使用这样的一个顺序来学习 学习的过后是不是开始来

27:37.180 --> 27:40.380
搭建工程了 对吧 搭建工程来做一些东西了

27:41.020 --> 27:47.660
我们这里的后边就学习一下他的第三方脚头架 我们之前学view的时候呢 你可能没有接触过第三方的脚头架

27:48.060 --> 27:52.300
都是用的是官方的 对吧 五有里面 他提供了一个view silly 对吧 cli

27:52.860 --> 28:00.460
他提供了自己的脚头架 那么就react里面了 他有自己的脚头架 我们一开始呢 用的就是他官方提供的脚头架 但是呢

28:01.020 --> 28:02.780
他官方提供的脚头架 说实话

28:03.500 --> 28:11.980
没有那么好用啊 没有那么好用 嗯 因此呢 有一些第三方的脚头架 比方说阿里出品的就是无米啊 这个脚头架呢 用起蛮好用的

28:12.140 --> 28:17.100
而且呢 现在市场上用的也比较多 所以说呢 我们到时候会学习一个第三方脚头架无米

28:17.660 --> 28:22.860
后边呢 包括我们做一些东西的时候呢 都学习到之后呢 我们都会使用这个脚头架来做

28:23.900 --> 28:29.260
好 后边呢 我们学习的是一个ui库 就跟类似于什么view的elementui或者是ifu

28:29.980 --> 28:35.180
就是一个ui库ui库呢 我们学习的是阿里的ui库 就是and design

28:36.140 --> 28:40.700
好吧 好 那么这些东西学习完了过后呢react是全家统了 就基本结束了

28:41.180 --> 28:44.460
就是你可以干活了啊 就这一部分学习完了过你可以干活了

28:45.180 --> 28:52.780
最后呢 我们带来学习它的原码部分 就是深入的去理解react里边的东西 它到底是怎么回事

28:53.420 --> 28:57.100
那么我们就设计到react的原码分析 以及reduct的原码分析

28:57.980 --> 29:04.780
好吧 我们把干活和原码部分的理解呢 把它分开 才分开来进行讲解

29:05.500 --> 29:10.060
我们是用这样的讲解顺序啊 最后呢 我们说一下关于这个课程啊

29:11.020 --> 29:14.220
啊 这个课程呢 我们由于是一个录制的视频课程

29:15.100 --> 29:19.020
所以说首先呢 我是肯定可以放开来讲 我没有任何约束

29:19.500 --> 29:27.100
因为如果说直播课或者是线下课的话 或多或少呢 会受到一些时长的限制

29:27.580 --> 29:34.300
毕竟成本嘛 对不对 但是呢 视频教程没有 视频教程我就敞开来讲 我想讲啥讲啥

29:34.700 --> 29:41.340
而且呢 讲的越多越好 对不对 所以说我们视频教程里面呢 我就是尽量会把各方面全部讲到

29:42.300 --> 29:52.140
那么我们视频教程里面到时候一定会分章节啊 不像不像那个线下 线下课课或者是直播课 就是第一节课一个小时 第二节课一个小时

29:52.220 --> 29:57.340
肯定不会这样子 我们视频课程里面可以可以 会根据它的支持点内容

29:57.740 --> 30:01.820
以支持点内容来切分章节啊 来切分这个课程的时长

30:02.540 --> 30:07.100
然后比方一个支持点 它该是一个半小时 就是一个半小时 它该是五分钟 就是五分钟

30:07.420 --> 30:13.660
啊 我们会用这种方式来讲解 那么我们的视频里边呢 视频名字上面呢 我现在说一个点啊 就是说

30:14.060 --> 30:17.260
有可能视频名字上面会出现这个关键字叫做demo

30:17.900 --> 30:23.020
表示了一个演示对吧 如果课程 视频的课程名字前面有这个字样的话

30:23.500 --> 30:30.940
表示这门课呢 就这一节课啊 是一个小练习 那么这个小练习呢 需要同学们听完讲解之后

30:31.580 --> 30:39.180
自行独立完成 一定要去独立完成一次啊 不然的话你光是在那里听 你学到现在那应该能体会到吧

30:39.740 --> 30:44.700
就是咱们学习技术的话 你光听是没用的 你一定要自己把它做出来

30:45.100 --> 30:49.020
所以说你出现这个字样的课程啊 你听了之后呢 你要把自己做出来啊

30:50.300 --> 30:53.580
然后第二个呢 是如果出现了扩展关键字呢 就表示这个

30:54.540 --> 31:00.300
是一个选秀内容 就算你不学习的话 也不会影响后边的课程啊 后边的学习不会影响了

31:01.100 --> 31:05.020
啊 就是做一些课外知识了解 好吧 出现这样的关键字的

31:05.900 --> 31:09.500
好 然后呢 是关于本门课的原代码 原代码呢

31:10.060 --> 31:16.140
到时候呢 你问一下你的就是群里边啊 具体怎么去拿这个原代码呢 我目前呢

31:17.020 --> 31:21.500
还不是很清楚 大家可以问一下群里面 原代码一定是可以拿到的 这个是毫无疑问的

31:22.060 --> 31:25.100
然后呢 我说一下这个原代码呢 我是使用disk管理的

31:25.820 --> 31:34.940
每一节课代码呢 是一个独立的分支啊 比方说啊 我们这里比较低节课吧 低节课我们不是一个概述吗 对吧 你看一下我们目前的

31:35.420 --> 31:37.500
git分支啊git branch

31:38.140 --> 31:44.380
你看一下 是不是两个分支 一个是master 一个是就是本节课的课程名字1-1啊 1-1

31:44.860 --> 31:51.340
是吧 然后呢 第一个是张杰敏 第二是课程的编号 张杰编号 课程编号 然后课程名字

31:51.580 --> 31:57.500
你看 是不是多了一个分支 对吧 拿到原代码之后呢 你要像看哪一节课的原代码 你自己去切换分支

31:58.140 --> 32:02.300
disk都是学过的 对吧 自己去切换就行了 后面的分支肯定会越来越多越来越多

32:03.100 --> 32:10.380
好吧 这是第一个啊 然后呢就说 某些文件夹和文件呢 它不属于原代码管理范畴

32:10.940 --> 32:15.180
包括你们之前学习的个无忧的时候 无忧的时候呢 我们学习的时候

32:15.740 --> 32:21.100
不是要的脚头架吗 脚头架不是要安装很多第三方库吗 对吧 load嘛就是里边 文件夹里边

32:21.420 --> 32:26.140
不是有很多东西嘛 对不对 那么这个load嘛就是文件夹了 我是把忽略掉的

32:26.860 --> 32:32.780
啊 我是把它忽略掉的 拿这个玩意儿不然里边东西太多了啊 到时候原代码考完就考不过去

32:33.100 --> 32:38.860
所以说你一定是把这个文件夹忽略掉的 还包括一些什么发布文件 发布文件夹disk啊

32:39.020 --> 32:44.060
build啊 还有什么上传的文件夹 反正反正我可能会忽略掉一些文件夹啊

32:44.620 --> 32:49.660
那么特别是个load嘛 就是那么大家拿到这个原代码之后呢 你会发现啊

32:50.060 --> 32:54.140
就是你进入某一节课的 就是进入了某一节课的

32:54.780 --> 32:59.980
原代码之后呢 你会发现他少了这么一个文件夹 就是load嘛就是 那么你需要自己安装一下

33:00.460 --> 33:04.780
啊 自己安装 知道怎么安装吧 对吧 npm install对不对

33:05.340 --> 33:09.500
或者是ear install对不对啊 把安装一下依赖就行了

33:10.300 --> 33:14.300
然后呢 关于这个npm呢 本门课了所有第三方库安装了 均使用ear

33:14.700 --> 33:17.580
啊 因为ear它有缓存 所以说安装起来比较快一点啊

33:17.660 --> 33:20.060
所以说我们军会使用这个ear进行安装

33:20.860 --> 33:28.300
好了 就说完了啊 就说完了 这节课呢 我们对这个react做了一个概述 嗯 包括这个课程呢 讲了一些关于课程的东西

33:28.940 --> 33:32.620
好 那行了啊 那咱们下节课开始 就来正式的进入react的学习

