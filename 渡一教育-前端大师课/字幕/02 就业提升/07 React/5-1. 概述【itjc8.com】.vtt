WEBVTT

00:00.370 --> 00:08.370
好 这个章节呢 咱们来学习的是一个第三方的插件

00:08.370 --> 00:14.370
叫做rexrotor 也叫做rex路由

00:14.370 --> 00:21.370
我首先这节课呢 我们来大概介绍一下 一下跟路由

00:21.370 --> 00:27.370
为什么需要路由 以及呢 咱们网站一个站点开发

00:27.370 --> 00:32.370
它的一些场景 我们把跟路由相关的东西都介绍一下

00:32.370 --> 00:37.370
因为一旦设计到路由的话 那肯定会设计到一个概念就是站点

00:37.370 --> 00:40.370
我们都知道一个站点 就是一个网站

00:40.370 --> 00:43.370
它肯定是有很多很多的页面组成的

00:43.370 --> 00:49.370
而我们自从学了5u之后呢 到现在的rex他们呢

00:49.370 --> 00:55.370
通常都是用他们来做一个单页应用程序

00:55.370 --> 01:00.370
所以说呢 我们这一块呢 先解释一下咱们站点的构成

01:00.370 --> 01:04.370
已经呢 单页应用程序 它是怎么回事

01:04.370 --> 01:08.370
然后呢 我们再慢慢的去影像路由

01:08.370 --> 01:12.370
因为我发现呢 有些同学呢 对这一块的东西呢 就很模糊

01:12.370 --> 01:15.370
他不知道一个站点 他到底是怎么回事

01:15.370 --> 01:20.370
因为在学校里边 你说完全把一个站点全部开发出来吧

01:20.370 --> 01:23.370
那个时间耗时也太长了 对吧

01:23.370 --> 01:27.370
而且呢 在线教育呢 他有这么一个特点 就是

01:27.370 --> 01:30.370
你要做一个团队项目的话

01:30.370 --> 01:33.370
这个实实起来呢 还是比较困难的

01:33.370 --> 01:35.370
大家做项目的时候呢 都是一个人来开发

01:35.370 --> 01:38.370
你说你一个人开发一个完整的站点

01:38.370 --> 01:40.370
你提回到这里面所有东西的话

01:40.370 --> 01:42.370
这个耗时真的是太恐怖了

01:42.370 --> 01:44.370
所以说你在学习阶段的话

01:44.370 --> 01:47.370
可能不太容易去开发一个完整的站点

01:47.370 --> 01:50.370
可能就开发那么一点点功能 对吧

01:50.370 --> 01:53.370
去练习一下技术 所以说对站点的开发呢

01:53.370 --> 01:55.370
这一块呢 是比较模糊的

01:55.370 --> 01:58.370
所以说呢 我们现在呢 首先呢

01:58.370 --> 02:02.370
来介绍这么一个东西 就是站点

02:02.370 --> 02:05.370
也就是说 我们整个网站 他到底是怎么回事

02:05.370 --> 02:09.370
这里呢 我们还是以 又来一个PPT嘛

02:09.370 --> 02:12.370
以这个PPT来进行讲解

02:14.370 --> 02:15.370
演示

02:16.370 --> 02:19.370
我这里画个图啊 就是说怎么回事呢

02:19.370 --> 02:23.370
就咱们的网站呢 不说网站嘛

02:23.370 --> 02:28.370
我们整个公司里面呢 他是有一套产品线

02:28.370 --> 02:31.370
当然呢 这个可大可小

02:31.370 --> 02:35.370
因为很多公司呢 他是有多个产品

02:35.370 --> 02:39.370
而有些公司呢 他只有一个产品

02:39.370 --> 02:41.370
我们就这样子从大的方向来说吧

02:41.370 --> 02:44.370
我们整个公司呢 可能有多个产品

02:44.370 --> 02:46.370
那么组成了一个产品线

02:46.370 --> 02:49.370
这些产品线的产品之间呢 他们相互依赖

02:49.370 --> 02:53.370
啊 举个例子吧 比方说咱们腾讯对吧

02:53.370 --> 02:55.370
他就有很多很多的产品

02:55.370 --> 02:58.370
有啥些产品呢 QQ是一个产品吧

02:58.370 --> 03:02.370
QQ封间是个产品吧 QQ宠物

03:02.370 --> 03:05.370
还有什么呢 还有一些QQ游戏对吧

03:05.370 --> 03:07.370
这些都是他不同的产品线

03:07.370 --> 03:09.370
这些产品线之间呢 肯定有

03:09.370 --> 03:11.370
多多少少的一些相互的依赖

03:12.370 --> 03:17.370
这里的产品线下面呢 他又分成了各种各样的产品

03:17.370 --> 03:21.130
就具体的产品

03:21.130 --> 03:24.130
大概说一下啊 大概说一下

03:24.130 --> 03:27.130
这个东西要说来说起来的话

03:27.130 --> 03:29.130
那就话就特别特别长了

03:29.130 --> 03:31.130
我们大概说一下啊

03:31.130 --> 03:33.130
一到了不同的公司里面呢

03:33.130 --> 03:36.130
可能会遇到不同的场景

03:36.130 --> 03:38.130
他有多个产品

03:38.130 --> 03:40.130
那么每一个产品呢

03:40.130 --> 03:43.130
他又有可能有多个占点

03:43.130 --> 03:45.130
他可能会有多个占点

03:45.130 --> 03:47.130
但是通常情况呢 一个产品呢

03:47.130 --> 03:49.130
对应到一个占点 就是一个网站

03:49.130 --> 03:51.130
当然他也不一定是网站的

03:51.130 --> 03:54.130
可能还有移动端 还有移动端这些东西

03:54.130 --> 03:57.130
那么我们就以网站为例嘛

03:57.130 --> 03:59.130
比方说这个产品里边呢

03:59.130 --> 04:02.130
他有 他对应到一个占点

04:02.130 --> 04:05.570
他这么一种结构

04:05.570 --> 04:06.570
一个产品的对应一个占点

04:06.570 --> 04:08.570
但是有的特殊情况下呢

04:08.570 --> 04:09.570
一个产品的可能

04:09.570 --> 04:11.570
会对应多个占点

04:11.570 --> 04:13.570
都是有可能的 有可能的

04:13.570 --> 04:15.570
比方说有些公司呢 他一个产品

04:15.570 --> 04:19.570
他为了适应不同国家的用户的操作习惯

04:19.570 --> 04:22.570
可能要做 要设计不同的占点

04:22.570 --> 04:24.570
要完全重新设计

04:24.570 --> 04:25.570
还不是说改变一下语言

04:25.570 --> 04:27.570
改变一下文字就完事了

04:27.570 --> 04:29.570
他可能要全部重新设计

04:29.570 --> 04:31.570
这有可能的 但是一般情况下呢

04:31.570 --> 04:33.570
就只有一个占点

04:33.570 --> 04:35.570
那么个占点相当于是什么呢

04:35.570 --> 04:37.570
就相当于是我们的网站了

04:37.570 --> 04:39.570
就是一个域名 一个域名

04:39.570 --> 04:41.570
比方说百度 比方说新浪

04:41.570 --> 04:42.570
比方说微博 对吧

04:42.570 --> 04:44.570
微博不就是新浪的一个产品线吧

04:44.570 --> 04:46.570
新浪有很多产品

04:46.570 --> 04:49.570
其中一个产品线就是微博

04:49.570 --> 04:51.570
于是呢 比方说

04:51.570 --> 04:53.570
我们访问微博

04:53.570 --> 04:55.570
来看一下

04:55.570 --> 04:57.570
访问微博

04:57.570 --> 05:01.570
那么微博呢 其实就是新浪的一个产品

05:01.570 --> 05:03.570
对吧 就是新浪微博

05:03.570 --> 05:05.570
好 那么这个

05:05.570 --> 05:07.570
这个产品 这个占点下面呢

05:07.570 --> 05:10.570
它又会包含很多的功能块

05:11.570 --> 05:13.570
一个占点下面 可能会包含

05:13.570 --> 05:16.570
很多的功能块

05:16.570 --> 05:18.570
功能块

05:18.570 --> 05:21.570
比方说微博 微博这个占点

05:21.570 --> 05:23.570
它可能会包含哪些功能块呢

05:23.570 --> 05:26.570
它可能会包含微博本身 对吧

05:26.570 --> 05:29.570
还会包含什么呢 就是新闻

05:29.570 --> 05:33.880
还会包含什么呢 短视频

05:33.880 --> 05:35.880
这些都是微博这个产品下面的

05:35.880 --> 05:38.880
占点下面的功能块

05:38.880 --> 05:40.880
那么这些功能块之间呢

05:40.880 --> 05:41.880
他们有没有联系呢

05:41.880 --> 05:43.880
多多少少呢 可能会有一些联系

05:43.880 --> 05:47.880
但是呢 又相对来说比较独立

05:47.880 --> 05:50.880
而我们开发的单页应用程序

05:50.880 --> 05:51.880
是什么意思呢

05:51.880 --> 05:53.880
往往指的是

05:53.880 --> 05:56.880
指的不是整个 整个占点是单页应用程序

05:56.880 --> 05:58.880
而指的是一个功能块的下边

05:58.880 --> 06:00.880
它往往是一个单页应用程序

06:00.880 --> 06:02.880
它往往是这么个意思

06:03.880 --> 06:05.880
就是微博下面的

06:05.880 --> 06:07.880
它又有这么一个单页应用程序

06:07.880 --> 06:09.880
而新闻下面的是一个单页应用程序

06:09.880 --> 06:11.880
短视频的又是个单页应用程序

06:11.880 --> 06:12.880
它往往指的是这么个意思

06:12.880 --> 06:13.880
给它看一下吧

06:13.880 --> 06:15.880
比方说我们这里的微博

06:15.880 --> 06:16.880
你看这里有首页

06:16.880 --> 06:18.880
你看页面有没有刷新

06:18.880 --> 06:21.880
你看 别看这 你看那个浏览器

06:21.880 --> 06:23.880
浏览器这里

06:23.880 --> 06:25.880
浏览器这里看有没有圈圈在转

06:25.880 --> 06:26.880
比方说我们这里刷新

06:26.880 --> 06:28.880
你看这里有个圈圈在转 对吧

06:28.880 --> 06:30.880
说明刷新的页面 对不对

06:30.880 --> 06:32.880
我们刷新页面什么意思

06:32.880 --> 06:34.880
就是从浏览器重新去请求页面

06:34.880 --> 06:37.880
从浏览器重新去拿到页面元代

06:37.880 --> 06:38.880
这叫刷新页面

06:38.880 --> 06:40.880
那么其他的时候比方说

06:40.880 --> 06:42.880
我的收藏 你看有没有刷新页面

06:42.880 --> 06:43.880
并没有 对吧

06:43.880 --> 06:45.880
说明它是一个单页应用程序

06:45.880 --> 06:48.880
没有再重新去请求浏览器的页面了

06:48.880 --> 06:49.880
并没有重新请求了

06:49.880 --> 06:51.880
而是直接利用当前页面

06:51.880 --> 06:52.880
重新渲染

06:52.880 --> 06:54.880
用戒也是能完成整个页面的渲染

06:54.880 --> 06:56.880
比方说我的战 对吧

06:56.880 --> 06:58.880
然后这里点热门温博

06:58.880 --> 06:59.880
你看

06:59.880 --> 07:02.880
温博里边它有可能又分为多个单页应用程序

07:02.880 --> 07:03.880
这说不准的 对吧

07:03.880 --> 07:05.880
它有可能分成指的功能块

07:05.880 --> 07:08.880
不然温博下面又分为几个小的功能块

07:08.880 --> 07:10.880
每个功能块又是个单页应用程序

07:10.880 --> 07:13.880
我们这个情况非常多

07:13.880 --> 07:16.880
我这里一点说明什么问题呢

07:16.880 --> 07:17.880
说明的是啥问题呢

07:17.880 --> 07:18.880
说明的就是

07:18.880 --> 07:24.830
我把这个戒个图放进来

07:24.830 --> 07:28.830
就是说呢

07:28.830 --> 07:34.830
单页就是无论是使用無诱

07:34.830 --> 07:36.830
还是reactor

07:36.830 --> 07:40.830
开发的单页应用程序

07:40.830 --> 07:46.830
可能只是该占点的一部分

07:46.830 --> 07:48.830
这是它的某一个功能块

07:48.830 --> 07:51.830
某一个功能块

07:51.830 --> 07:53.830
当然有些小公司里边的小产品

07:54.830 --> 07:57.830
它可能是整个网站就是一个单页应用程序

07:57.830 --> 07:58.830
就一个页面

07:58.830 --> 08:00.830
但是更多的时候

08:00.830 --> 08:02.830
就是说稍微上一点规模的应用程序

08:02.830 --> 08:05.830
它可能不太会把整个网站

08:05.830 --> 08:07.830
做成一个单页应用程序

08:07.830 --> 08:09.830
而是网站里边的每一个功能块

08:09.830 --> 08:11.830
做一个单页应用程序

08:11.830 --> 08:12.830
是这么回事

08:12.830 --> 08:13.830
大家搞清楚

08:13.830 --> 08:14.830
是这么回事

08:14.830 --> 08:18.830
所以说咱们开发的单页应用

08:18.830 --> 08:21.830
可能只是对应到我们网站里边

08:21.830 --> 08:23.830
就是某一个部分

08:23.830 --> 08:24.830
对吧

08:24.830 --> 08:25.830
某一个部分

08:25.830 --> 08:27.830
而我们一个单页应用里边

08:27.830 --> 08:29.830
一个单页应用里边

08:29.830 --> 08:32.830
一个单页应用里边

08:32.830 --> 08:39.830
可能会划分为多个页面

08:39.830 --> 08:42.830
那么这里的页面只能是

08:42.830 --> 08:46.830
几乎完全不同的页面效果

08:46.830 --> 08:47.830
这个不是真正的页面

08:47.830 --> 08:49.830
不是说一个eternal文件

08:49.830 --> 08:50.830
因为传统上来说

08:50.830 --> 08:53.830
一个页面它就是一个eternal文件

08:53.830 --> 08:56.830
一套完全不一样的eternal元代码

08:56.830 --> 08:58.830
但是我们在单页应用程序里边

08:58.830 --> 08:59.830
它划分为多个页面

08:59.830 --> 09:00.830
这个页面

09:00.830 --> 09:03.830
它只是说它的渲染效果不一样

09:03.830 --> 09:04.830
说白了

09:04.830 --> 09:07.830
说白了是什么不同了

09:07.830 --> 09:09.830
说白了这个页面指的是什么

09:09.830 --> 09:11.830
主件

09:11.830 --> 09:13.830
所以说我们要开发一个单页应用

09:13.830 --> 09:14.830
它不可避免的

09:14.830 --> 09:16.830
要遇到这么一个问题

09:16.830 --> 09:17.830
什么问题

09:17.830 --> 09:20.830
就是说需要根据

09:20.830 --> 09:25.830
如果要在单页应用中

09:25.830 --> 09:29.830
完成主件的切换

09:29.830 --> 09:32.830
就是从一个主件切换到另一个主件

09:32.830 --> 09:33.830
那么会怎么样呢

09:33.830 --> 09:35.830
我们需要

09:35.830 --> 09:37.830
需要根据

09:37.830 --> 09:39.830
需要实现一个功能

09:39.830 --> 09:45.210
需要实现下面两个功能

09:45.210 --> 09:47.210
如果你要完成主件的切换的话

09:47.210 --> 09:49.210
需要实现下面两个功能

09:49.210 --> 09:50.210
一个功能

09:50.210 --> 09:51.210
注意重要的功能

09:51.210 --> 09:52.210
什么功能

09:52.210 --> 09:56.210
是根据不同的页面地址

09:56.210 --> 09:59.210
展示不同的主件

09:59.210 --> 10:00.210
展示不同的主件

10:00.210 --> 10:02.210
这是最核心最核心的功能

10:02.210 --> 10:04.210
比方说咱们看一下

10:04.210 --> 10:05.210
我们这里呢

10:05.210 --> 10:07.210
刚才打开这里

10:07.210 --> 10:09.210
这个我的收藏

10:09.210 --> 10:10.210
这是一个页面

10:10.210 --> 10:11.210
手页

10:11.210 --> 10:13.210
这是一个页面

10:13.210 --> 10:14.210
好

10:14.210 --> 10:15.210
那你看一下

10:15.210 --> 10:16.210
我把这个页面地址复制一下

10:16.210 --> 10:18.210
我们在这里打开

10:18.210 --> 10:21.210
是不是根据这个页面地址渲染出来

10:21.210 --> 10:22.210
比方说

10:22.210 --> 10:23.210
比方说吧

10:23.210 --> 10:24.210
它是用Racket做的

10:24.210 --> 10:26.210
那么它会根据这个页面地址

10:26.210 --> 10:28.210
来渲染出整个页面

10:28.210 --> 10:30.210
整个页面就可以把它看成个根主件

10:30.210 --> 10:31.210
大的主件

10:31.210 --> 10:32.210
把渲染出这么一个东西

10:32.210 --> 10:33.210
对不对

10:33.210 --> 10:35.210
没问题吧

10:35.210 --> 10:36.210
然后呢

10:36.210 --> 10:37.210
如果说

10:37.210 --> 10:38.210
如果说

10:38.210 --> 10:40.210
我们这里的访问

10:40.210 --> 10:42.210
我的收藏

10:42.210 --> 10:44.210
我们这里复制一下地址

10:44.210 --> 10:46.210
然后把地址放过来

10:46.210 --> 10:47.210
你看一下

10:47.210 --> 10:49.210
是不是仍然展示了这个主件

10:49.210 --> 10:51.210
我的收藏这个主件

10:51.210 --> 10:53.210
就这么个意思

10:53.210 --> 10:56.210
比方说我们这里点击分类

10:56.210 --> 10:59.210
你看也没有跳转页面

10:59.210 --> 11:02.210
根据不同的地址展示不同的主件

11:02.210 --> 11:05.210
这是它最核心最核心的功能

11:05.210 --> 11:06.210
这是第一个

11:06.210 --> 11:07.210
要实现这个功能

11:07.210 --> 11:08.210
第二个功能

11:08.210 --> 11:12.210
是要完成无刷新的跳转

11:12.210 --> 11:15.780
就是整个页面不刷新

11:15.780 --> 11:17.780
因为一刷新就意味着

11:17.780 --> 11:19.780
重新从服务器去请求东西

11:19.780 --> 11:20.780
对吧

11:20.780 --> 11:22.780
我们不用去从服务器去请求任何东西

11:22.780 --> 11:23.780
我们就在本地

11:23.780 --> 11:26.780
就在浏览器内部完成

11:26.780 --> 11:27.780
主件的重新渲染

11:27.780 --> 11:29.780
就是无刷刷新的跳转

11:29.780 --> 11:32.780
只要你能够实现这两个东西

11:32.780 --> 11:33.780
相当于

11:33.780 --> 11:34.780
你就能够实现

11:34.780 --> 11:37.780
在单一应用里边切换主件了

11:37.780 --> 11:38.780
就这么个意思

11:38.780 --> 11:40.780
比方说我们在这里

11:40.780 --> 11:41.780
点击这个

11:41.780 --> 11:43.780
什么我的站

11:43.780 --> 11:44.780
你看一下是不是没刷新页面

11:44.780 --> 11:45.780
那么点了过后

11:45.780 --> 11:46.780
是不是挑转了页面

11:46.780 --> 11:47.780
你看改变了地址

11:47.780 --> 11:48.780
再看一下

11:48.780 --> 11:49.780
点首页

11:49.780 --> 11:50.780
你看这个地址是不是变了

11:50.780 --> 11:51.780
地址变了

11:51.780 --> 11:53.780
然后由于地址变化了

11:53.780 --> 11:54.780
那么导致

11:54.780 --> 11:55.780
它不同的页面地址

11:55.780 --> 11:57.780
展示了不同的主件

11:57.780 --> 11:58.780
主件也跟着变了

11:58.780 --> 12:00.780
那么我们点击这个东西

12:00.780 --> 12:02.780
点击这个

12:02.780 --> 12:03.780
这些按钮

12:03.780 --> 12:04.780
什么这些元素

12:04.780 --> 12:06.780
点击这些东西的时候

12:06.780 --> 12:09.780
它能够实现无刷新的切换地址

12:09.780 --> 12:10.780
所以说这一块

12:10.780 --> 12:11.780
我们再准确的说的话

12:11.780 --> 12:14.780
应该实现无刷新的地址切换

12:14.780 --> 12:16.780
无刷新的地址切换

12:16.780 --> 12:17.780
所以说

12:17.780 --> 12:19.780
咱们要实现

12:19.780 --> 12:21.780
实现来挑转页面的话

12:21.780 --> 12:24.780
那么必须要实现这两个功能

12:24.780 --> 12:26.780
如果说

12:26.780 --> 12:28.780
如果一个

12:28.780 --> 12:31.780
如果实现了

12:31.780 --> 12:35.780
以上两个功能

12:35.780 --> 12:38.780
则认为

12:38.780 --> 12:39.780
这样说吧

12:39.780 --> 12:41.780
我们认为

12:41.780 --> 12:43.780
我们认为

12:43.780 --> 12:45.780
我们把实现了

12:45.780 --> 12:47.780
以上两个功能的

12:47.780 --> 12:51.090
插件

12:51.090 --> 12:54.090
称之为

12:54.090 --> 12:56.090
称之为路由

12:56.090 --> 12:58.090
就这么个意思

12:58.090 --> 13:00.090
路由最核心的东西是什么

13:00.090 --> 13:02.090
最核心的东西就是

13:02.090 --> 13:03.090
打个注射

13:03.090 --> 13:04.090
这是核心

13:04.090 --> 13:06.090
最核心的东西是这一部分

13:06.090 --> 13:08.090
根据不同的地址

13:08.090 --> 13:10.090
展示不同的组件

13:10.090 --> 13:12.090
因此我们这个章简的讲

13:12.090 --> 13:14.090
路由的时候

13:14.090 --> 13:16.090
着重讲的就是它

13:16.090 --> 13:18.090
那么实现无刷新的地址切换

13:18.090 --> 13:20.090
这个实义其实是非常简单的

13:20.090 --> 13:22.090
我们可能会花很少很少的篇幅来讲

13:22.090 --> 13:24.090
因为它太简单了

13:24.090 --> 13:26.090
而且也没有什么东西

13:26.090 --> 13:28.090
主要的核心在这一部分

13:28.090 --> 13:30.090
根据不同的页面地址

13:30.090 --> 13:32.090
展示不同的组件

13:32.090 --> 13:33.090
没问题吧

13:33.090 --> 13:35.090
这是路由的概念

13:35.090 --> 13:36.090
已经路由是怎么来的

13:36.090 --> 13:37.090
以及单印应用程序

13:37.090 --> 13:38.090
到底是什么

13:38.090 --> 13:40.090
它在我们整个三点中起到一个

13:40.090 --> 13:42.090
起到一个就是什么位置

13:42.090 --> 13:44.090
这是关于

13:44.090 --> 13:46.090
这一部分

13:46.090 --> 13:48.090
而另外一部分我们就说一下

13:48.090 --> 13:51.090
咱们在React这个具体的技术里边

13:51.090 --> 13:53.090
我们实现路由的方法

13:53.090 --> 13:54.090
实现路由的方法

13:54.090 --> 13:55.090
我们通常可以

13:55.090 --> 13:56.090
要么就是自己写

13:56.090 --> 13:57.090
你自己写代码

13:57.090 --> 13:59.090
后边我们会讲

13:59.090 --> 14:01.090
如果说你要自己写一个路由的话

14:01.090 --> 14:02.090
该怎么去写

14:02.090 --> 14:04.090
另外更多的时候

14:04.090 --> 14:05.090
我们是使用一些

14:05.090 --> 14:08.090
现成的开发好的工具

14:08.090 --> 14:09.090
开发好的插件

14:09.090 --> 14:11.090
来帮我们完成这样的功能

14:11.090 --> 14:13.090
其实我们自己写也可以

14:13.090 --> 14:14.090
到时候看一下

14:14.090 --> 14:15.090
也没有那么难

14:15.090 --> 14:17.090
那么我们使用的是什么呢

14:17.090 --> 14:19.090
最常用的在React里面

14:19.090 --> 14:21.090
就是使用React Rotor

14:21.090 --> 14:23.090
使用这个

14:23.090 --> 14:25.090
这个就是第三方库

14:25.090 --> 14:26.090
来实现路由

14:26.090 --> 14:28.090
那么使用这个库

14:28.090 --> 14:29.090
它是这样子

14:29.090 --> 14:30.090
这个库里边

14:30.090 --> 14:32.090
我们通常安装的时候

14:32.090 --> 14:34.090
它会包含两个部分

14:34.090 --> 14:36.090
一个部分是什么呢

14:36.090 --> 14:38.090
就是React Rotor本身

14:38.090 --> 14:39.090
就这个库

14:39.090 --> 14:40.090
React Rotor

14:40.090 --> 14:41.090
就这个库

14:41.090 --> 14:44.090
它是路由核心库

14:44.090 --> 14:46.090
它里边包含了

14:46.090 --> 14:48.090
包含了诸多

14:48.090 --> 14:52.090
和路由功能相关的

14:52.090 --> 14:54.090
核心代码

14:54.090 --> 14:56.090
就说的比较抽象

14:56.090 --> 14:58.090
比如说一些计算方法

14:58.090 --> 14:59.090
一些函数

14:59.090 --> 15:00.090
一些对象

15:00.090 --> 15:01.090
这些东西

15:01.090 --> 15:04.090
它能够实现路由最核心的功能

15:04.090 --> 15:06.090
这是这个库

15:06.090 --> 15:10.090
另外一个库叫做React Rotor Dome

15:10.090 --> 15:11.090
这个是什么呢

15:11.090 --> 15:16.090
这个是利用路由核心库

15:16.090 --> 15:19.090
然后结合

15:19.090 --> 15:22.090
实际的页面

15:22.090 --> 15:24.090
实现

15:24.090 --> 15:27.090
跟页面

15:27.090 --> 15:31.090
路由密切相关的功能

15:31.090 --> 15:33.090
这个东西怎么能理解呢

15:33.090 --> 15:35.090
你可以把这个React Rotor

15:35.090 --> 15:39.090
理解成就像React和React Dome的关系

15:39.090 --> 15:41.090
React它是一个核心库

15:41.090 --> 15:43.090
它能够实现各种各样的功能

15:43.090 --> 15:45.090
最核心的功能在它里边实现

15:45.090 --> 15:47.090
另外一个就是React Dome

15:47.090 --> 15:48.090
React Dome里面

15:48.090 --> 15:50.090
是不是实现跟Dome相关的功能

15:50.090 --> 15:52.090
那么这个东西也是一样的

15:52.090 --> 15:54.090
它来实现最核心的功能

15:54.090 --> 15:56.090
它是专门着重于实现

15:56.090 --> 15:58.090
跟页面相关的功能

15:58.090 --> 15:59.090
就是这么

15:59.090 --> 16:01.090
它把它分化成了两个库

16:01.090 --> 16:03.090
所以说这样子分化了有个好处在于

16:03.090 --> 16:04.090
那么将来

16:04.090 --> 16:07.090
如果说我们不在页面中使用

16:07.090 --> 16:09.090
比方说不在页面中

16:09.090 --> 16:10.090
去使用路由了

16:10.090 --> 16:11.090
而换成手机端了

16:11.090 --> 16:13.090
那么仍然可以实现路由

16:13.090 --> 16:15.090
我们这个核心库不变

16:15.090 --> 16:17.090
我们就是另外加一个

16:17.090 --> 16:19.090
跟手机端相适配的库就行了

16:19.090 --> 16:20.090
就跟React一样

16:20.090 --> 16:22.090
React为什么能够实现手机端

16:22.090 --> 16:27.090
能够实现开发安卓应用

16:27.090 --> 16:28.090
iOS应用

16:28.090 --> 16:30.090
开发手机端App程序

16:30.090 --> 16:31.090
为什么呢

16:31.090 --> 16:32.090
因为它有两个库

16:32.090 --> 16:33.090
一个是核心库

16:33.090 --> 16:34.090
核心库的话

16:34.090 --> 16:36.090
跟最终的界面是没有什么关系的

16:36.090 --> 16:37.090
它主要实现功能的

16:37.090 --> 16:39.090
你看不到任何的界面

16:39.090 --> 16:40.090
那么另外一个库

16:40.090 --> 16:44.090
它就是React

16:44.090 --> 16:47.090
利用核心库

16:47.090 --> 16:48.090
跟界面打交道的库

16:48.090 --> 16:49.090
那么到时候

16:49.090 --> 16:50.090
我们学的时候

16:50.090 --> 16:51.090
叫做React Native

16:51.090 --> 16:54.090
那么那个库是跟手机端打交道的

16:54.090 --> 16:56.090
所以说它核心库可以不变

16:56.090 --> 16:58.090
保持比较稳定的一个状态

16:58.090 --> 16:59.090
明白这个意思吗

16:59.090 --> 17:01.090
所以说在React Router里面

17:01.090 --> 17:03.090
它也是把它分化完这两个东西

17:03.090 --> 17:05.090
因此我们安装的时候

17:05.090 --> 17:07.090
比方说

17:07.090 --> 17:10.090
如果是在页面中

17:10.090 --> 17:12.090
实现路由的话

17:12.090 --> 17:14.090
那么我们需要安装

17:14.090 --> 17:16.090
需要安装什么呢

17:16.090 --> 17:17.090
当然你直接安装它

17:17.090 --> 17:18.090
想不想可以

17:18.090 --> 17:19.090
只是有的地方

17:19.090 --> 17:20.090
有的地方用起来

17:20.090 --> 17:21.090
很多地方要

17:21.090 --> 17:23.090
跟那个页面相关的东西

17:23.090 --> 17:24.090
很多地方要熟悉

17:24.090 --> 17:25.090
不太方便

17:25.090 --> 17:27.090
所以说我们更多的时候

17:27.090 --> 17:28.090
需要安装这个库

17:28.090 --> 17:30.090
需要安装这个库

17:30.090 --> 17:32.090
就这么个意思

17:32.090 --> 17:34.090
这次我们概述这里

17:34.090 --> 17:36.090
大概介绍一下路由是什么东西

17:36.090 --> 17:40.090
其实你学习了VU里面的VU Router

17:40.090 --> 17:41.090
那么这一块理解起来

17:41.090 --> 17:43.090
就非常非常简单了

17:43.090 --> 17:46.090
就没有什么需要我额外讲的了

17:46.090 --> 17:47.090
所以说我们这里

17:47.090 --> 17:49.090
要是引出这个Router

17:49.090 --> 17:51.090
以及它有哪些库组成

17:51.090 --> 17:53.090
另外我们安装的时候

17:53.090 --> 17:55.090
需要安装什么

17:55.090 --> 17:56.090
安装这个东西

17:56.090 --> 17:58.090
接下来我们就直接安装了

17:58.090 --> 18:00.090
我们找到这个Router

18:00.090 --> 18:02.090
直接在这里面安装

18:02.090 --> 18:05.090
这里写上ER

18:05.090 --> 18:06.090
ADD

18:06.090 --> 18:08.090
然后是什么

18:08.090 --> 18:10.090
叫Router

18:10.090 --> 18:12.090
OK 等它安装

18:12.090 --> 18:15.400
放在那边看

18:15.400 --> 18:17.400
这里有些警告

18:17.400 --> 18:19.400
一些以前的安装的库

18:19.400 --> 18:20.400
一些依赖库过期了

18:20.400 --> 18:22.400
跟我们这里的库没有什么关系

18:22.400 --> 18:23.400
没有什么关系

18:23.400 --> 18:25.400
不用在意

18:25.400 --> 18:29.990
稍等一下

18:29.990 --> 18:30.990
我们这些课

18:30.990 --> 18:31.990
其实就差不多了

18:31.990 --> 18:33.990
我们主要安装晚上就完成了

18:33.990 --> 18:35.990
OK 安装完成了

18:35.990 --> 18:36.990
安装完成之后

18:36.990 --> 18:37.990
我们看一下Packy点节省

18:37.990 --> 18:39.990
那里边现在是不是多了一个了

18:39.990 --> 18:41.990
哎呀 这啥玩意

18:41.990 --> 18:42.990
看一下

18:42.990 --> 18:44.990
这里边

18:44.990 --> 18:46.990
这里边我们看一下Dependences

18:46.990 --> 18:47.990
那里边是不是多了一个

18:48.990 --> 18:49.990
Router

18:49.990 --> 18:50.990
对不对

18:50.990 --> 18:51.990
它不仅安装到这个库

18:51.990 --> 18:52.990
我们来看一下

18:52.990 --> 18:53.990
load嘛juice里边

18:53.990 --> 18:55.990
它还安装了这个

18:55.990 --> 18:57.990
Router

18:57.990 --> 18:58.990
你看 是不是依赖库

18:58.990 --> 18:59.990
因为这个库

18:59.990 --> 19:01.990
它本身依赖于Router

19:01.990 --> 19:03.990
所以说它也会同时把这个库

19:03.990 --> 19:04.990
也安装了

19:04.990 --> 19:05.990
OK 就完了

19:05.990 --> 19:06.990
我们大家下来

19:06.990 --> 19:07.990
先把这个库安装好

19:07.990 --> 19:08.990
安装好之后

19:08.990 --> 19:09.990
我们后边

19:09.990 --> 19:10.990
这个章节后边

19:10.990 --> 19:12.990
再慢慢的去介绍

19:12.990 --> 19:13.990
它怎么去使用

19:13.990 --> 19:14.990
介绍的顺序

19:14.990 --> 19:15.990
我们是用这种顺序

19:15.990 --> 19:16.990
先来看

19:16.990 --> 19:17.990
它如何

19:17.990 --> 19:19.990
根据不同的页面地址

19:19.990 --> 19:20.990
展示不同的组件

19:20.990 --> 19:22.990
另外我们后边再看

19:22.990 --> 19:24.990
如何来完成地址切换

19:24.990 --> 19:25.990
因为地址一切换

19:25.990 --> 19:27.990
是不是要展示主员的必要

19:27.990 --> 19:28.990
对不对

19:28.990 --> 19:29.990
我们先来学习

19:29.990 --> 19:30.990
第一部分

19:30.990 --> 19:31.990
好吧

19:31.990 --> 19:32.990
OK

19:32.990 --> 19:33.990
那咱们

19:33.990 --> 19:34.990
大家下来把它安装好

19:34.990 --> 19:36.990
咱们这些可以到这里了

