WEBVTT

00:00.690 --> 00:05.690
这些课呢我们使用脚手架来搭建这个react工程

00:06.290 --> 00:10.490
就我们上面课呢用的是什么呢用的是在页面上直接引用借是对吧

00:11.090 --> 00:14.290
这种方式呢我们以后呢几乎是不会用的啊

00:14.590 --> 00:16.990
所以说我们后边呢全是用脚手架来搭建

00:17.490 --> 00:21.290
那么这个脚手架呢它有很多在react里边呢

00:21.590 --> 00:22.690
它有官方的脚手架

00:23.690 --> 00:28.290
官方的脚手架就是createreact app这个脚手下

00:29.290 --> 00:32.490
也有了第三方的第三方的脚手架

00:32.490 --> 00:35.890
因为官方的脚手架呢功能还是非常非常齐全

00:36.090 --> 00:38.490
只不过呢拥起来不是很好用啊

00:38.490 --> 00:39.690
会比较麻烦一点

00:39.890 --> 00:42.890
不过我们前面学习的时候呢不会受到什么影响

00:42.890 --> 00:44.590
所以我们前边学习的时候呢

00:44.590 --> 00:46.790
为了学习react的核心原力

00:46.890 --> 00:49.890
所以说我们还是会用这个这个脚手架官方的脚手架

00:50.390 --> 00:52.690
然后呢还有一些第三方的比方说什么next

00:52.690 --> 00:55.790
点介石呢或者是什么5米介石呢

00:55.990 --> 00:58.790
啊这些脚手架我们后边呢会专门来选择

00:58.790 --> 01:00.790
这个5米介石来进行学习

01:01.290 --> 01:03.690
好我们这里呢首先安装官方的脚手架啊

01:03.890 --> 01:05.990
其实呢我们这里安装呢我们前面说过啊

01:05.990 --> 01:08.290
我都会使用12来进行安装

01:08.290 --> 01:09.190
因为它有缓存

01:09.190 --> 01:10.490
所以说安装起来的比较快

01:10.990 --> 01:13.590
我们这里呢可以直接在这哈

01:13.590 --> 01:15.090
可以直接在这进行安装

01:15.890 --> 01:17.590
啊可以在这进行安装

01:17.590 --> 01:19.690
因为我们这里的目录呢就已经是这个目录了

01:19.690 --> 01:20.190
对吧

01:20.190 --> 01:23.290
并且呢我的命令航工具呢本身就用的是power show

01:23.990 --> 01:26.590
也可以呢专门去打开一个power show

01:27.190 --> 01:30.390
来进行安装都行啊都行随便啊随便

01:30.990 --> 01:33.690
好我们这里呢就可以直接使用12的命令啊

01:33.690 --> 01:35.390
12create啊

01:35.390 --> 01:37.790
我们之前学过这个命令对吧create这个命令

01:37.790 --> 01:40.790
这个命令呢可以直接它可以做两件事

01:40.790 --> 01:44.390
第一个呢是全局给你安装一个脚手架工具

01:44.690 --> 01:47.490
另一个呢就是马上去运行这个脚手架工具

01:47.590 --> 01:49.990
就是说他可以同时做两件事好

01:49.990 --> 01:51.890
安装什么呢react app

01:52.090 --> 01:55.290
其实这个脚手架的全称叫做create react app

01:55.290 --> 01:56.990
对吧他的全称叫做这个

01:56.990 --> 01:59.790
但是我们之前学过12这个create这个命令啊

02:00.290 --> 02:03.590
他会给你补权啊会把这个脚手架的名称给你补权

02:03.590 --> 02:05.090
就说安装的实际上是啥

02:05.090 --> 02:06.990
实际上还是这个create react app

02:07.590 --> 02:10.790
好后边呢然后马上就运行这个命令

02:10.790 --> 02:11.790
运行这个命令的时候呢

02:11.790 --> 02:14.190
他需要取一个工程的名字啊

02:14.190 --> 02:16.190
名字的话我们就放到这个目录吧

02:16.190 --> 02:17.590
名字的话名字叫啥呢

02:17.590 --> 02:18.790
随便叫取一个吧

02:19.190 --> 02:19.590
嗯

02:22.290 --> 02:22.890
ner

02:23.690 --> 02:24.690
学习react

02:24.690 --> 02:26.690
对吧取个这么这么一个工程的名字

02:26.990 --> 02:27.890
好回测啊

02:28.690 --> 02:30.290
行了让他慢慢安装吧啊

02:30.590 --> 02:32.290
这里呢很会报一些警告啊

02:32.290 --> 02:33.990
这个警告了跟你们没啥关系啊

02:33.990 --> 02:35.290
跟你们没啥关系是

02:35.290 --> 02:37.490
是之前安装的5u的版本呢

02:37.490 --> 02:39.590
有些版本的呃过期了啊

02:39.590 --> 02:41.290
有些版本过期了我后来没更新

02:41.290 --> 02:42.290
所以说不用去管啊

02:42.290 --> 02:43.890
不用去管还有一些5米

02:43.890 --> 02:45.690
现在我们我们还没有设计到这个5米

02:45.690 --> 02:46.490
教授下对吧

02:46.490 --> 02:47.290
还没有设计到他

02:47.290 --> 02:48.990
所以说是其他酷的问题啊

02:48.990 --> 02:50.090
就不用去管他啊

02:50.090 --> 02:51.390
让他慢慢安装吧啊

02:51.790 --> 02:52.590
咱们呢啊

02:52.590 --> 02:54.190
他这里安装一个教授加成功了啊

02:54.190 --> 02:55.990
让他慢慢去安装搭建工程

02:56.190 --> 02:58.090
好咱们来看一下啊工程里边

02:58.290 --> 02:59.690
工程里边的现在已经出现了

02:59.690 --> 03:02.090
就是一个package的节省对吧

03:02.190 --> 03:02.790
已经出现这个

03:02.790 --> 03:04.790
我们现在暂时看一下吧

03:04.990 --> 03:06.090
这里面还没东西啊

03:06.490 --> 03:08.890
嗯说一下为什么还会安装这么久

03:09.790 --> 03:11.090
是因为呢我们虽然说

03:11.090 --> 03:13.490
react这个这个东西呢

03:13.590 --> 03:15.890
他本身他一旦的不多啊

03:15.890 --> 03:17.790
只能一旦那么一点点东西

03:18.190 --> 03:18.590
但是呢

03:18.690 --> 03:20.190
如果我们要搭建一个react

03:20.190 --> 03:21.690
react的工程的话

03:21.990 --> 03:23.690
一向啊一个工程里边是不是啊

03:23.690 --> 03:25.690
设计到什么阿迦克斯请求

03:25.890 --> 03:28.890
设计到什么单码的兼容性对吧

03:28.890 --> 03:29.790
要用bable

03:29.990 --> 03:33.490
还设计到什么单码风格检查E.S.Lint

03:33.590 --> 03:36.790
他工程里边他设计到很多乱七八糟的东西

03:37.090 --> 03:38.790
这些东西跟react本身呢

03:38.790 --> 03:40.090
是没有什么关联的

03:40.190 --> 03:40.990
但是呢

03:40.990 --> 03:42.890
我们工程中可能会需要

03:42.990 --> 03:43.690
所以说呢

03:43.790 --> 03:44.690
他这个教授家呢

03:44.690 --> 03:47.790
把我们这些常见的需要用到的东西呢

03:47.890 --> 03:49.090
都给我们安装进来了

03:49.090 --> 03:51.490
所以说安装的时间呢稍微久一点

03:52.090 --> 03:52.590
好吧

03:52.790 --> 03:54.790
我们这里呢使用的是压篮安装啊

03:54.790 --> 03:55.790
应该差不多了啊

03:55.790 --> 03:57.190
安装好了啊

03:57.190 --> 03:58.390
他最多安装了多好了

03:58.890 --> 03:59.990
一分多钟啊

03:59.990 --> 04:00.890
一分多钟啊

04:00.890 --> 04:01.590
差不多啊

04:01.590 --> 04:02.390
差不多好

04:02.390 --> 04:04.590
咱们来看一下我们的工程结构啊

04:05.390 --> 04:07.790
嗯这里边我们看一下他有没有这个git

04:08.790 --> 04:10.190
啊看一下

04:10.390 --> 04:11.390
他没有给你加git

04:11.390 --> 04:11.790
对吧

04:11.790 --> 04:12.590
没有加git

04:12.990 --> 04:14.090
往往是这样子啊

04:14.090 --> 04:16.290
他如果发现了你的工程里边

04:16.290 --> 04:17.590
他已经有git了

04:17.590 --> 04:19.390
他不会给你安装git了啊

04:19.690 --> 04:20.490
如果没有的话

04:20.490 --> 04:21.590
他一般会给你安装

04:22.390 --> 04:22.590
好

04:22.590 --> 04:23.690
然后这个工程里边呢

04:23.690 --> 04:24.990
什么这个ya look不用看了吧

04:24.990 --> 04:25.390
对吧

04:25.490 --> 04:27.490
这个rid mini这个东西也没有什么意义啊

04:27.490 --> 04:28.290
不用看了啊

04:28.490 --> 04:30.290
这个拍一点节省我们来看一下啊

04:30.290 --> 04:30.990
就这里边

04:31.590 --> 04:32.190
这里边呢

04:32.190 --> 04:33.390
我们可以看到了

04:33.390 --> 04:34.290
他一方面呢

04:34.290 --> 04:35.390
是个browser list

04:35.390 --> 04:36.090
他这里面呢

04:36.090 --> 04:37.390
给你解决了一些什么

04:37.490 --> 04:39.290
兼容性的啊配置

04:39.390 --> 04:41.690
就是要适应适应哪些浏览器啊

04:41.690 --> 04:42.990
这是我们以前讲的那个什么

04:42.990 --> 04:43.790
web pack的社会

04:43.790 --> 04:44.590
你讲过了对吧

04:45.090 --> 04:45.590
然后呢

04:45.590 --> 04:46.790
这里有些脚本啊

04:46.790 --> 04:47.790
这个脚本呢

04:47.790 --> 04:49.190
他给你设置了这么一些脚本

04:49.190 --> 04:52.890
一个是start运行运行工程啊

04:52.890 --> 04:54.390
就是我们在做开发的时候

04:54.390 --> 04:55.790
要调试的时候呢

04:55.790 --> 04:57.190
我们会运行这个工程

04:57.190 --> 04:58.690
我们使用这个命令啊

04:58.790 --> 04:59.990
start啊

04:59.990 --> 05:00.890
一个呢是build

05:00.890 --> 05:02.290
就是我们开发完了之后呢

05:02.290 --> 05:03.190
要部署

05:03.290 --> 05:04.790
我们可以使用build的命令

05:05.490 --> 05:05.790
还有呢

05:05.790 --> 05:06.890
我们要测试的时候呢

05:06.890 --> 05:08.290
我们现在还没有讲测试啊

05:08.290 --> 05:09.390
说测试的东西呢

05:09.390 --> 05:10.490
我们目前用不到

05:10.590 --> 05:11.290
测试的时候呢

05:11.290 --> 05:12.190
就用这个命令

05:12.690 --> 05:12.790
好

05:12.790 --> 05:14.090
这个一几个测试什么意思呢

05:14.090 --> 05:15.490
他叫做反变意

05:15.790 --> 05:17.490
他里面有很多的配置啊

05:17.490 --> 05:18.490
你看那些配置呢

05:18.490 --> 05:19.390
我们都看不到

05:19.590 --> 05:20.990
都是给你隐藏掉的

05:21.190 --> 05:23.090
那么如果你要配置这些东西的话

05:23.090 --> 05:24.090
你需要反变意

05:24.090 --> 05:25.790
把这些配置文件暴露

05:25.990 --> 05:27.690
当然我们现在也不会暴露他啊

05:27.690 --> 05:29.090
我们现在也不会讲配置

05:29.090 --> 05:31.190
我们现在讲的是最核心的东西

05:31.690 --> 05:32.890
所以我们现在用到了命令呢

05:32.890 --> 05:33.690
就这一个

05:33.790 --> 05:34.890
就是启动工程

05:35.290 --> 05:35.690
好

05:35.790 --> 05:37.190
以后我们之后呢

05:37.290 --> 05:38.490
完成开发之后呢

05:38.490 --> 05:39.890
可能会使用build的命令啊

05:39.890 --> 05:41.290
以后我们已经行演示

05:41.690 --> 05:42.790
我们现在演示一下吧

05:43.090 --> 05:44.090
也很简单啊

05:44.890 --> 05:46.190
可以清楚一下啊

05:46.590 --> 05:47.090
然后呢

05:47.090 --> 05:48.590
我们这里是用一二start

05:49.890 --> 05:50.690
伟特哎

05:50.790 --> 05:51.390
到了吗

05:51.690 --> 05:52.290
什么了

05:52.990 --> 05:53.490
嗯

05:55.300 --> 05:56.100
啊这里

05:56.200 --> 05:57.800
啊这里没有进入这个目录啊

05:57.800 --> 05:58.900
没有进入这个目录

05:59.000 --> 05:59.900
rags那

06:00.300 --> 06:01.100
进入这个目录

06:01.200 --> 06:03.300
然后是用一二啊start

06:03.800 --> 06:05.900
看一下吧啊开始运行啊

06:05.900 --> 06:06.700
执行这个命令

06:06.900 --> 06:07.900
执行这个start命令

06:07.900 --> 06:08.900
开始启动工程

06:09.200 --> 06:10.300
啊他这个wavpike

06:10.300 --> 06:11.500
那些什么打包工具啊

06:11.500 --> 06:12.600
全部给你配置好的啊

06:12.600 --> 06:13.200
你都不用管

06:13.200 --> 06:14.300
你直接用就行了

06:14.600 --> 06:16.900
啊他第一次启动的稍微慢一点啊

06:17.200 --> 06:18.000
稍微慢一点

06:18.300 --> 06:20.300
没有套的他要打包兵型编译

06:20.600 --> 06:21.000
好

06:22.000 --> 06:24.100
啊可以看到啊咱们的页面就显示出来了啊

06:24.100 --> 06:25.300
这是一个默认的页面

06:26.200 --> 06:27.900
好吧这就是运行工程啊

06:27.900 --> 06:29.200
运行工程一二start

06:29.500 --> 06:31.600
并且呢我们后边改动了代码之后呢

06:31.600 --> 06:33.600
他默认是放了这个端口号的啊

06:33.600 --> 06:34.700
3000这个端口号

06:35.000 --> 06:36.400
以后呢我们改了这个

06:36.400 --> 06:37.900
就是工程的代码之后呢

06:37.900 --> 06:40.100
他会实施刷新啊热更新

06:40.200 --> 06:42.400
我们以前讲wavpike的时候也讲过对吧

06:42.900 --> 06:44.700
啊这是启动工程啊

06:44.700 --> 06:46.000
你看看工程就已经启动了

06:46.000 --> 06:48.500
并且一直在监听我们文件文件的变化

06:48.500 --> 06:49.700
跟这个5u差不多

06:50.500 --> 06:51.700
我们也可以使用啊

06:51.700 --> 06:52.380
把停滞啊

06:52.380 --> 06:54.100
c来进行停滞

06:54.600 --> 06:55.500
清除一下啊

06:55.500 --> 06:56.600
也可以使用一二

06:56.800 --> 06:57.800
build

06:58.300 --> 06:59.100
就是部属

06:59.900 --> 07:01.700
好咱们来看一下部属这个名领啊

07:01.800 --> 07:02.900
就用到这个两个名领

07:02.900 --> 07:04.200
后边的名领我们都用不上

07:04.400 --> 07:06.600
你会看到他生成了一个build文件夹啊

07:06.800 --> 07:08.700
啊他会把我们的工程的打包

07:08.700 --> 07:10.200
放到这这个文件夹里边

07:11.000 --> 07:12.900
好让他打包让他自己打包吧

07:12.900 --> 07:14.600
我们不管他了啊不管他了

07:15.400 --> 07:17.800
好ok啊这是关于这里面两个命令

07:18.000 --> 07:20.600
好这里边呢是esnint啊esnint

07:20.600 --> 07:23.000
我们之前讲过讲wavpike的时候讲过

07:23.200 --> 07:26.100
这个esnint是一个代码风格检查啊

07:26.100 --> 07:28.300
风格检查那么他继承自哪了

07:28.300 --> 07:29.500
继承自rex app

07:29.800 --> 07:31.600
那么可以检查我们里边的代码了

07:31.600 --> 07:33.100
是不是符合规范的啊

07:33.740 --> 07:34.600
好咱们来看一下

07:34.600 --> 07:36.300
他里边的就是依赖箱

07:36.540 --> 07:37.700
依赖箱呢

07:37.700 --> 07:38.900
他就依赖两个东西

07:38.900 --> 07:40.200
一个是rex本身

07:40.600 --> 07:42.700
目前的版本是16.8.6

07:42.700 --> 07:45.000
啊可能你看到这个视频教程的时候呢

07:45.000 --> 07:46.800
可能会版本有点点变化啊

07:46.800 --> 07:48.000
但是大致上都差不多

07:48.400 --> 07:50.000
还有一个依赖呢是我们之前学过的

07:50.000 --> 07:51.100
对吧rex dome

07:51.200 --> 07:52.000
他是负责什么了

07:52.000 --> 07:54.000
负责把我们rex里面对象

07:54.100 --> 07:56.000
转换成真实的动物啊

07:56.000 --> 07:57.300
他的版本也是一样的

07:57.800 --> 07:59.700
还有一个依赖的是rex script

07:59.700 --> 08:00.540
这是什么东西呢

08:00.540 --> 08:01.600
就是下面这个东西

08:01.700 --> 08:03.300
就是来启动脚本的啊

08:03.300 --> 08:04.700
这东西就启动脚本的

08:05.000 --> 08:06.100
好其他就没啥了

08:06.300 --> 08:08.100
对对好现在应该打包完成了啊

08:08.500 --> 08:09.400
打包完成了

08:09.600 --> 08:11.700
好就是最终打包出来就是这样的结果

08:12.000 --> 08:13.500
既也是放这啊

08:13.500 --> 08:14.900
css放这啊

08:14.900 --> 08:15.900
他是这样的打包的

08:16.800 --> 08:17.400
好了啊

08:17.500 --> 08:19.900
那么这我们认识一下这个package的接声

08:20.300 --> 08:21.600
好然后再看一下别的吧

08:21.800 --> 08:22.800
啊再看一下别的

08:22.800 --> 08:24.100
好他这里边加了一个

08:24.100 --> 08:24.900
计册一个

08:24.900 --> 08:26.100
这个东西我们

08:27.100 --> 08:28.100
行吗放这吧

08:28.100 --> 08:28.900
放这吧

08:29.000 --> 08:29.800
也无所谓

08:30.200 --> 08:31.800
好然后主要是看一下这个

08:32.200 --> 08:33.800
呃一个是public目录

08:33.900 --> 08:34.700
这个目录里边呢

08:34.700 --> 08:36.400
就是放一些静态资源

08:36.500 --> 08:38.700
这个跟那个伍佑是不是一样的

08:38.800 --> 08:39.400
对不对

08:39.400 --> 08:40.500
跟伍佑是不是一样的

08:40.700 --> 08:42.000
放一些静态资源

08:42.100 --> 08:43.100
这个静态资源呢

08:43.100 --> 08:44.800
里边提供一个页面模板

08:44.800 --> 08:45.200
看没

08:45.300 --> 08:46.100
页面模板

08:46.100 --> 08:47.100
那这个模板里边呢

08:47.100 --> 08:47.700
很多东西呢

08:47.700 --> 08:49.000
我们也不太需要

08:49.000 --> 08:50.600
所以说我们把三一三吧啊

08:50.800 --> 08:52.500
不太需要的这些乱七八糟的东西就

08:52.500 --> 08:53.400
就扔掉了啊

08:53.400 --> 08:54.600
其实我们之后呢

08:54.700 --> 08:55.700
的伍佑的

08:55.700 --> 08:57.700
就是就是个react的程序呢

08:57.700 --> 08:58.400
是加到哪的

08:58.400 --> 09:00.000
就加了个div里面啊

09:00.000 --> 09:00.600
加到这的

09:00.600 --> 09:01.600
所以说这些乱七八糟的东西

09:01.600 --> 09:02.600
我就把删掉啊

09:02.700 --> 09:03.900
什么是no scripts

09:03.900 --> 09:05.000
这个不要这个元素呢

09:05.000 --> 09:05.800
它指的是

09:05.800 --> 09:06.600
如果没

09:06.600 --> 09:09.600
如果你的浏览器没有启用这个介石

09:09.600 --> 09:11.100
那么它会给你显示这个内容

09:11.600 --> 09:11.900
好吧

09:11.900 --> 09:15.200
因为现在很多东西都依赖于介石来运行

09:15.700 --> 09:15.900
好

09:15.900 --> 09:16.800
这个是个title啊

09:16.800 --> 09:18.000
这个东西无所谓的啊

09:18.100 --> 09:19.400
像这个什么manifest

09:19.400 --> 09:20.200
我们现在呢

09:20.600 --> 09:21.800
不知道你们学过没有啊

09:21.800 --> 09:22.800
不知道你们学过没有

09:22.800 --> 09:23.500
如果没学过的话

09:23.500 --> 09:24.200
直接扒三了啊

09:24.200 --> 09:25.700
跟我们现在也没什么关系

09:26.000 --> 09:26.200
好

09:26.200 --> 09:26.900
这个什么

09:26.900 --> 09:28.400
sim卡了这些东西都没啥意

09:28.400 --> 09:28.800
没啥意

09:28.800 --> 09:30.000
这个字件干掉啊

09:30.000 --> 09:30.800
干掉啊

09:30.800 --> 09:31.600
这个short

09:31.800 --> 09:32.600
呃

09:32.800 --> 09:33.900
short icon啊

09:33.900 --> 09:35.300
这个地方可以留着吧

09:35.300 --> 09:35.500
啊

09:35.500 --> 09:37.100
就这个就这个文件啊

09:37.100 --> 09:37.800
就这个文件

09:38.500 --> 09:39.400
啊把留着吧啊

09:39.400 --> 09:40.300
留着啊

09:41.000 --> 09:41.300
好

09:41.300 --> 09:41.700
然后呢

09:41.700 --> 09:42.700
这个manifest

09:42.700 --> 09:43.900
节省的这个东西没啥用

09:43.900 --> 09:44.600
删掉啊

09:44.700 --> 09:46.100
把我跟我们没什么用

09:46.100 --> 09:48.200
跟我们没什么关系的东西把删掉啊

09:48.700 --> 09:49.700
这是public目录

09:49.700 --> 09:51.900
所以说它里边就提供了一个就是

09:51.900 --> 09:53.400
网页的这个图片啊

09:53.400 --> 09:55.100
就这个地方的图片啊

09:55.100 --> 09:56.600
已经了一个静态页面

09:56.900 --> 09:57.900
好其他就没啥了

09:58.700 --> 09:58.900
好

09:58.900 --> 09:59.300
然后呢

09:59.300 --> 10:00.600
这个src目录啊

10:00.600 --> 10:01.500
我们主要是看这

10:01.800 --> 10:02.400
这里边呢

10:02.400 --> 10:04.700
他就有很多的代码了

10:04.700 --> 10:07.800
包括我们什么一些css支援啊

10:07.900 --> 10:09.700
什么介石代码啊

10:09.800 --> 10:10.900
测试代码啊

10:10.900 --> 10:11.900
这些乱七八的东西呢

10:11.900 --> 10:13.400
全部都在这啊

10:13.400 --> 10:14.400
全部都在这

10:14.700 --> 10:15.500
没啥意思吧

10:15.900 --> 10:16.900
但这里边的东西呢

10:16.900 --> 10:19.100
我们目前呢看到的啊

10:19.100 --> 10:22.100
看到的启动的入口在哪呢

10:22.100 --> 10:23.300
启动的入口在这

10:23.500 --> 10:25.100
在index的介石

10:25.200 --> 10:26.600
这是我们启动的入口

10:27.000 --> 10:28.400
好这个入口里边呢

10:28.400 --> 10:30.000
我看一下这个入口里边啊

10:30.100 --> 10:31.400
他做了哪些事情

10:31.700 --> 10:33.400
那么首先这个service worker

10:33.400 --> 10:35.200
跟我们现在没什么关系啊

10:35.200 --> 10:36.300
跟我们现在没什么关系

10:36.300 --> 10:38.900
因为你们可能还没有学那个pwa

10:39.100 --> 10:40.500
还没有学这个东西啊

10:40.500 --> 10:41.200
所以说这个东西呢

10:41.200 --> 10:42.200
跟我们现在没啥关系

10:42.200 --> 10:43.600
直接把三条干掉的了

10:44.000 --> 10:45.600
好那么上面那个东西干掉

10:45.800 --> 10:47.200
好把这个service worker

10:47.200 --> 10:48.600
这个文件也干掉啊

10:48.600 --> 10:50.500
跟我们目前没啥关系的东西干掉

10:51.400 --> 10:51.800
好

10:51.900 --> 10:53.500
然后我们现在主要目的是要

10:53.500 --> 10:55.400
写自己写个hollower的出来啊

10:55.400 --> 10:57.200
这是我们的主要目的啊

10:57.200 --> 10:57.800
然后呢

10:57.800 --> 10:58.900
我们这里可以看到啊

10:58.900 --> 11:00.200
他引用了两个

11:00.600 --> 11:01.300
两个东西

11:01.300 --> 11:02.000
一个是什么

11:02.000 --> 11:03.100
一个是react

11:03.300 --> 11:04.000
一个是什么呢

11:04.000 --> 11:05.300
一个是react dome

11:05.300 --> 11:05.800
对吧

11:05.900 --> 11:07.400
他引用了这么两个东西

11:07.700 --> 11:08.200
好

11:08.200 --> 11:08.700
然后呢

11:08.700 --> 11:10.700
还引用了一个css文件

11:11.000 --> 11:11.900
css文件在哪呢

11:11.900 --> 11:12.700
在这啊

11:12.700 --> 11:13.200
这个文件

11:13.200 --> 11:14.000
我们现在呢

11:14.000 --> 11:15.100
css也没必要用

11:15.100 --> 11:15.400
对吧

11:15.400 --> 11:16.000
也没必要用

11:16.000 --> 11:17.400
后面要用的时候再说吧

11:17.600 --> 11:18.400
好干掉

11:18.600 --> 11:19.400
css干掉

11:19.400 --> 11:20.600
好这个文件干掉

11:20.700 --> 11:22.600
就是我们尽量把工程简化一下

11:23.300 --> 11:23.500
好

11:23.500 --> 11:23.900
然后呢

11:23.900 --> 11:26.300
他用了一个东西叫做app

11:26.500 --> 11:26.800
对吧

11:26.800 --> 11:27.400
这个app

11:27.400 --> 11:28.900
这个app我们是不是现在还没学过

11:28.900 --> 11:29.100
对吧

11:29.100 --> 11:30.600
他这种东西叫做主键

11:30.800 --> 11:32.000
啊我们现在还没有学主键

11:32.000 --> 11:33.500
所以说这东西全部干掉

11:34.100 --> 11:35.100
干掉干掉干掉

11:35.700 --> 11:36.900
啊这个什么都忘记把它

11:36.900 --> 11:38.200
就保留一个index的设计

11:38.200 --> 11:38.800
css

11:39.000 --> 11:39.800
其他啥都不要

11:40.200 --> 11:40.900
啥都不要

11:42.000 --> 11:42.800
啊没有这意思吧

11:42.800 --> 11:44.100
那么你看一下这个代码

11:44.100 --> 11:45.400
跟我们之前在一页面上

11:45.400 --> 11:46.600
顺行的代码有啥区别了

11:47.000 --> 11:48.000
顺没区别了

11:48.400 --> 11:49.000
对不对

11:49.200 --> 11:49.900
有啥区别了

11:49.900 --> 11:51.100
顺完全没区别了

11:51.100 --> 11:54.100
我们以前的页面上无非就是用css来引用的

11:54.100 --> 11:54.700
那么现在呢

11:54.700 --> 11:55.900
我们是用啊

11:55.900 --> 11:58.100
es6的模块化的方式来引用的

11:58.100 --> 11:58.900
就这个区别的

11:58.900 --> 12:00.400
你看我们之前用css引用

12:00.500 --> 12:02.500
用sqlips的元素来引用

12:02.600 --> 12:03.400
那么目前呢

12:03.400 --> 12:04.200
我们使用的是

12:04.800 --> 12:06.700
模块化的方式来引用导入进来

12:07.200 --> 12:08.200
那么现在来吧

12:08.400 --> 12:09.200
来一次啊

12:09.300 --> 12:10.200
那我们这里呢

12:10.300 --> 12:11.900
就用csx

12:12.000 --> 12:13.200
来写一下这个代码

12:13.600 --> 12:15.100
啊写一下he

12:16.500 --> 12:18.500
然后呢这里面写个Hello world

12:19.200 --> 12:19.700
world

12:20.300 --> 12:21.700
还有些再写个10辈嘛

12:21.700 --> 12:23.000
啊10辈元素

12:23.900 --> 12:24.300
对吧

12:24.800 --> 12:25.200
啊

12:25.600 --> 12:26.400
他就写完了啊

12:26.400 --> 12:27.100
就写完了

12:27.700 --> 12:29.400
所以跟我们之前说一样的啊

12:29.400 --> 12:30.400
保存一下啊

12:30.400 --> 12:31.200
保存一下

12:31.300 --> 12:31.900
咱们

12:32.200 --> 12:32.800
clear

12:33.000 --> 12:33.400
然后呢

12:33.400 --> 12:34.500
一样运行出来

12:34.500 --> 12:35.000
start

12:35.900 --> 12:36.600
啊运行出来

12:36.600 --> 12:38.000
看一下是不是能看到效果

12:38.400 --> 12:39.900
跟之前的是一样的啊

12:39.900 --> 12:40.700
是一样的

12:42.100 --> 12:42.600
嗯

12:44.000 --> 12:44.900
啊运行出来啊

12:47.290 --> 12:49.190
好只不过大家要注意一下啊

12:49.390 --> 12:50.390
你看是不是一样的

12:50.990 --> 12:51.590
看一下吧

12:51.790 --> 12:52.290
检查

12:52.890 --> 12:53.790
也写一元素

12:53.790 --> 12:54.390
Hello world

12:54.390 --> 12:54.890
失败

12:54.890 --> 12:55.390
对吧

12:55.590 --> 12:57.890
那些没有跟我们目前没有什么关系的东西

12:57.890 --> 12:59.190
我们直接把干掉啊

12:59.190 --> 13:00.990
就保留一个index这些解释

13:01.090 --> 13:02.490
他一会儿启动的时候呢

13:02.690 --> 13:03.790
他就会启动这个东西

13:04.190 --> 13:05.590
啊因为他是安装了

13:05.790 --> 13:06.790
webpack的啊

13:07.090 --> 13:09.290
他只不过webpack了给你隐藏掉了啊

13:09.290 --> 13:10.690
配置给你隐藏掉了

13:10.790 --> 13:12.290
他把写到写到这里边去了

13:12.390 --> 13:13.490
啊这里边有很多东西

13:14.790 --> 13:15.990
好大家注意一下啊

13:15.990 --> 13:18.090
就是说你这个东西呢千万不要删

13:18.390 --> 13:20.690
看上去呢好像没有用到这个东西对吧

13:20.790 --> 13:21.990
但是我们之前说过

13:22.090 --> 13:23.590
这个东西呢会不会变变异

13:23.590 --> 13:24.590
变异成啥呢

13:24.590 --> 13:26.390
所以变异成这个react

13:26.390 --> 13:28.090
create element对吧

13:28.090 --> 13:29.590
他会变异成这个东西

13:29.890 --> 13:30.590
那你想啊

13:30.590 --> 13:31.890
如果你没有导入这个包

13:32.490 --> 13:33.490
他怎么变异呢

13:33.490 --> 13:34.390
你这个地方呢

13:34.390 --> 13:35.890
你这个对象是确实的

13:35.990 --> 13:37.190
说确实这个对象

13:37.190 --> 13:38.490
所以他没法变异

13:38.490 --> 13:39.690
因此呢你这一块

13:39.790 --> 13:42.290
凡是使用jsx的地方啊

13:42.290 --> 13:43.290
我们这里记一笔吧

13:44.190 --> 13:48.290
凡是使用jsx的文件

13:48.790 --> 13:51.390
必须导入react

13:51.590 --> 13:53.990
因为他最终会变异成为react

13:53.990 --> 13:54.590
第二

13:54.690 --> 13:56.090
什么create element

13:56.790 --> 13:57.890
是这么回事啊

13:57.890 --> 13:58.590
这么回事

13:59.590 --> 14:01.190
好另外呢我再说一点啊

14:01.190 --> 14:03.290
就是说我们这个工程里边呢

14:03.290 --> 14:04.390
他这个后维名啊

14:04.390 --> 14:05.890
这个js的后维名呢

14:05.890 --> 14:07.490
你可以使用js

14:07.790 --> 14:09.990
也可以使用这个后维名

14:09.990 --> 14:11.190
就jsx

14:11.390 --> 14:13.190
也行啊也行

14:13.790 --> 14:15.990
jsx和js

14:16.490 --> 14:19.190
这两个后维名在react这个工程里边

14:19.190 --> 14:21.290
他都支持啊都支持的

14:21.290 --> 14:22.590
我们来看一下吧啊

14:22.590 --> 14:23.490
保存我们现在当然

14:23.490 --> 14:25.290
那个文件要重新启动了啊

14:25.290 --> 14:27.090
文件变了要重新启动了

14:27.290 --> 14:28.390
就文件后维名变了

14:28.390 --> 14:29.090
他找不到了啊

14:29.090 --> 14:30.590
之前那个启动文件找不到了

14:30.890 --> 14:31.890
好咱们启动一次啊

14:31.890 --> 14:33.090
你会看到是一样的效果

14:34.290 --> 14:34.690
啊

14:36.500 --> 14:37.100
你会发现呢

14:37.100 --> 14:39.700
如果你把它变成了jsx过后呢

14:39.700 --> 14:41.400
他会把它识别为什么

14:41.400 --> 14:42.900
把它识别为react文件

14:42.900 --> 14:44.200
我们把这个地方打开啊

14:44.200 --> 14:45.300
大家看得清楚一点

14:45.500 --> 14:46.900
查看这个外观

14:46.900 --> 14:48.000
这里一个状态囊

14:48.400 --> 14:49.600
啊你看下面的状态囊

14:49.800 --> 14:51.000
你看一下这个文件啊

14:51.000 --> 14:52.800
是不是他识别为什么

14:52.800 --> 14:54.300
javascript的react

14:54.300 --> 14:56.600
他知道这里面写的有react代码

14:56.600 --> 14:58.400
也就是这里边可能会出现是吗

14:58.500 --> 15:00.300
可能会出现jsx

15:00.500 --> 15:00.700
对吧

15:00.700 --> 15:02.000
他可能会出现这个东西

15:02.700 --> 15:03.100
好

15:03.700 --> 15:04.600
那么你看是不是一样的

15:04.600 --> 15:04.800
对吧

15:04.800 --> 15:05.700
完全一样的

15:05.800 --> 15:08.000
那如果你使用的是js文件的话

15:08.500 --> 15:08.600
啊

15:08.600 --> 15:10.100
如果你使用的是js文件的话

15:10.100 --> 15:12.800
那么他会把它识别为javascript啊

15:13.600 --> 15:14.000
啊

15:14.200 --> 15:15.200
但是呢也没关系啊

15:15.200 --> 15:15.800
都一样

15:15.800 --> 15:17.400
后面我们会进行一下配置

15:17.400 --> 15:18.600
配置了之后呢

15:19.300 --> 15:20.100
就是在这里边

15:20.100 --> 15:21.800
哪怕他识别成js文件

15:21.800 --> 15:25.000
你在这里边也可以使用jsx啊

15:25.000 --> 15:25.900
也没有问题

15:26.200 --> 15:27.800
我后面会进行一下配置啊

15:27.800 --> 15:29.100
配置完了就就完事了

15:29.600 --> 15:30.900
所以说无所谓啊

15:30.900 --> 15:33.000
你看你i用哪种用哪种啊

15:33.000 --> 15:34.600
就是就是react里边的

15:34.600 --> 15:36.200
他既支持js后维

15:36.200 --> 15:38.700
也支持了jsx后维

15:39.200 --> 15:40.800
你看现在hardware都写出来了

15:40.800 --> 15:41.100
对吧

15:41.100 --> 15:42.300
但是你心里面要知道啊

15:42.300 --> 15:43.300
这个hardware的

15:43.400 --> 15:45.000
他最终会转换成

15:45.200 --> 15:46.400
createreact

15:46.800 --> 15:47.400
element

15:47.600 --> 15:49.500
createreactcreateelement

15:49.500 --> 15:51.100
最终会转换成那样的代码

15:51.700 --> 15:52.000
好

15:52.000 --> 15:53.600
这是我们目前的脚手架啊

15:53.700 --> 15:55.500
那么我们之后的学习呢

15:55.600 --> 15:57.700
都会在这个脚手架基础上

15:57.800 --> 15:58.800
来进行学习

15:59.000 --> 16:00.100
就是说大家下来了

16:00.200 --> 16:01.900
先把这个脚手架搭建好

16:02.100 --> 16:03.500
搭建好之后呢

16:03.500 --> 16:04.600
把这些乱七八糟

16:04.600 --> 16:06.300
跟我们没啥关系的文件啊

16:06.400 --> 16:07.100
像这样子啊

16:07.100 --> 16:08.200
给他删掉啊

16:08.200 --> 16:08.900
给他删掉

16:09.100 --> 16:10.600
那我们只保留我们现在需要的

16:10.600 --> 16:12.900
这个index的介绍就可以了

16:13.400 --> 16:13.900
好吧

16:13.900 --> 16:15.800
大家去搭建这么一个脚手架啊

