WEBVTT

00:00.620 --> 00:05.620
好 来吧 这些看了咱们做一个自定义的动画组建

00:06.820 --> 00:13.180
通过制作这么一个自定义的动画组建的让大家知道Rx这个东西呢是非常非常灵活的

00:13.700 --> 00:21.700
其实呢 老师上课啊 一方面呢是交给大家这些API怎么去使用 一方面呢交给大家这些基础理论

00:22.500 --> 00:25.700
更重要的是慢慢的去培养大家的这种一种

00:26.660 --> 00:27.140
呃

00:28.140 --> 00:31.300
程序思维 就是我们要做一些开发 因为

00:32.180 --> 00:37.620
因为很多时候呢 一些第三方库也好 或者是他本身的Rx库也好

00:38.580 --> 00:48.180
他并不能解决所有的问题啊 你要很方便的解决所有的问题的话 那我不是说我就尽量的拼命去学习各种啊好用的第三方库

00:48.540 --> 00:56.140
这个不是正图 正图呢是你要学习到他这个库里边 就是接触一个第三方库 你要学他的这种思维模式

00:56.700 --> 01:06.220
哪怕没有啊 你比方说以后你遇到一个需求 没有这种类似的第三方库 那么你自己要能够写出来啊 这才是最最好的学习方式

01:06.740 --> 01:14.700
所以说 为什么让大家多去练习呢 就是要一定要去熟悉代码 熟悉API 熟悉这种开发的方式 这才是最重要的

01:15.660 --> 01:18.340
好 这一课呢 我们上呃 做一个自定义的那个

01:19.340 --> 01:20.340
呃 动画组建啊

01:21.340 --> 01:22.140
就上节课了

01:23.020 --> 01:38.340
就前面的课程中啊 咱们呢 用了很多他自带的一些组建 那么这些组建呢 用起来呢 感觉就有点麻烦 比方说每次都要去写一些 css 文件 对吧 感觉又很麻烦的样子 那能不能我们平时 比方说我们网站中啊 经常有一些

01:38.900 --> 01:41.700
相同的动画效果 那么能不能就直接

01:42.260 --> 01:46.620
封装一个组建啊 来减变我们后边的开发呢 当然是没有任何问题的

01:47.020 --> 01:55.740
比方说咱们呢 网站里边经常都会出现一个淡入淡出的效果 对吧 好 于是呢 我就写这么一个组建啊 我在common

01:56.460 --> 02:00.980
在公共组建里边建立一个新建文念奖啊 给他取个名字叫做faid

02:01.860 --> 02:02.460
trization

02:04.260 --> 02:12.300
这是一个什么组建呢 这是一个专门用于控制淡入淡出动画的这么一个组建 好 这里呢 给他写个英德斯点解释啊

02:13.300 --> 02:21.300
啊 我们好像前面都是一直用的 hook 对吧 那这里呢 我们用内组建还是用啥呢 还是用韩式组建呢

02:22.060 --> 02:29.500
好像都无所谓吧 韩式组建吗 得了啊 韩式组建得了 因为这个东西好像也没有什么状态啊 没有什么状态啊

02:30.300 --> 02:30.500
faid

02:31.620 --> 02:40.180
trization啊 这么个组建 到时候呢 我要用这个组建的时候怎么用呢 我们首先 你做一个东西的时候呢 你再想到到时候我们怎么用

02:40.780 --> 02:48.660
咋用呢 我们可以这样子来用啊 比方说我们这里呢 写这么一个啊 写这么一个就是导入进来吧

02:49.500 --> 02:53.260
from a rex transition group 啊 比方说吧

02:54.820 --> 02:59.220
我们都感觉先不用导入他吧 我们直接导入这个 导入我们自己写的

03:00.180 --> 03:08.420
component common啊 fade transition啊 导入这个东西 导入进来之后呢 咱们怎么来用呢 我们先把这个图件写出来啊

03:09.420 --> 03:09.860
fade

03:11.580 --> 03:19.660
trization啊 到时候呢 我们用法呢 跟他的那个csstrization的用法呢 是完全一致的啊 是完全一致的

03:19.940 --> 03:26.420
只不过他自带了一个单入单出效果啊 自带了一个单入单出效果 而其他的用法呢 是完全一致的

03:27.300 --> 03:33.460
好 那么比方说吧啊 比方说 我们这里呢 这个app里边呢 比方说我们写个内组件啊

03:36.740 --> 03:40.940
现在就好像一直没有写的内组件 对吧 好久没写过了啊 那写一下吧啊

03:41.900 --> 03:43.660
extentreact

03:44.540 --> 03:55.820
啊呗component啊 继承过来 那么他里边呢 有个状态啊 有个状态 状态就是嗯秀啊 是否显示啊 莫认为去吗 莫认为去

03:56.460 --> 04:03.780
好 那么他有一个render啊 有个render 到时候咱们咋 咋显示呢 咱们显示比方说就显示一个he元数吧

04:04.180 --> 04:10.260
好吧 就显示一个he元数 好 那么这里呢 我们废的传辑信啊 使用的

04:11.380 --> 04:19.780
咱们到时候就这样子使用啊 废的传辑信 好 那么里边呢 我们就给他传一个he元数啊 一个标题啊 一个标题啊 这边外面套个dmv吗

04:20.900 --> 04:30.340
啊 然后呢 下面呢 有个按钮 点击这个按钮呢 就是切换显示状态啊 切换显示状态 怎么切换呢 切换的方式呢 就是unclick

04:31.300 --> 04:31.860
unclick

04:33.220 --> 04:47.620
啊 点击过后呢 我们this set state啊 把这个shu呢变成什么的this state 第二shu啊 其实你用关了 hook之后呢 你再用这个内阻尖 感觉好像反而不习惯了 对不对 感觉好繁殊啊 感觉啊 这里能不能把导出啊

04:48.100 --> 04:49.940
export 啊 default导出

04:50.820 --> 04:56.740
啊 到时候呢 怎么使用呢 那么这个地方的用法呢 跟那个css transition是完全一致的啊 一点去 去别的没有

04:57.220 --> 04:58.900
好 那么这里呢 this state show

04:59.620 --> 05:01.220
是吧 啊 就完了

05:02.340 --> 05:09.300
那么这个比应呢 就表示是否显示啊 是否显示啊 这个为去的时候就显示啊 为forced的时候就

05:10.420 --> 05:12.100
不显示啊 咱们运行出来啊

05:14.500 --> 05:15.860
前面那个 okay

05:16.900 --> 05:18.180
呃 重新启动一下吧

05:19.140 --> 05:19.940
yarn start

05:21.890 --> 05:30.290
啊 看一下吧 咱们的用法呢 就是这样的用法啊 就是它它的用法跟css的属性一样 只不过呢 我们就不用去写这些弯强拔刀的那样式了啊

05:30.530 --> 05:39.170
那样式呢 我们就给它抹去了啊 就不用去写了啊 当然了 什么timeouts呢 这些东西呢 也可以有啊 也可以有 因为这些呢 也可以给它一个默认值啊

05:40.210 --> 05:46.210
啊 这些东西都可以有啊 这就是这个 我们要达到的一个目标啊 达到这么一个目标

05:46.770 --> 05:48.610
呀 你啊 你啊

05:49.410 --> 05:55.890
哦 对了啊 对了的 目前没有没有任何显示东西对吧 因为上了 因为我们现在是自定义的一个组件

05:56.130 --> 06:02.450
我们希望呢 变成这个样子 但是呢 现在呢 这里面显示出来是 因为我们给它传了求准了 那这个组件里边又没用求准

06:02.930 --> 06:06.290
是不是没用 对吧 给它传了求准 但是还没用啊 没用

06:06.930 --> 06:14.050
好 那么我们接下来开始写这个组件啊 慢慢来完善 比方说这里呢 有很多的啊 就是有很多属性啊 props啊 很多属性

06:15.010 --> 06:17.330
啊 这些属性呢 我们达到之后啊

06:18.450 --> 06:24.210
因为这些属性呢 跟css传辑的属性是一样的 所以说呢 我们这里的直接封装一个css传辑

06:25.170 --> 06:29.410
啊 from啊 倒入这个reacts transition group

06:30.930 --> 06:32.530
封装一个css传辑

06:33.650 --> 06:37.410
然后这里边呢 你没有什么div啊 就直接来css传辑

06:38.050 --> 06:45.410
直接来就行了 咱们把这个属性里边的东西呢 全部给它啊 咱们的属性展开全部给它 因为它的属性是一样的 对不对

06:45.810 --> 06:50.450
是一样的啊 没问题吧 嗯 好 那么接下来呢

06:51.170 --> 06:58.050
嗯 接下来呢 我们现在要在这里边呢 去做什么事呢 我们要去做这么一件事 就是

06:58.690 --> 07:06.290
他里边 你看一下 目前显示出来的 对吧 因为他有给他加了css传辑啊 再加css传辑 那么点击千万状态 你看一下

07:06.610 --> 07:11.730
马上就变成一个sysdown了啊 然后又变成interdown了啊 因为他没有timeout啊 没有timeout

07:12.210 --> 07:13.890
所以说呢 我们这里呢 嗯

07:14.530 --> 07:19.650
他没有传timeout的话 我们给他一个默认值 就是一点点来修复嘛啊一点点来修复

07:20.130 --> 07:23.810
啊 他没有传timeout的话 我们给他一个默认值啊 那么默认值

07:24.930 --> 07:30.610
啊 函数的就是 组件的默认值是说学过的 对不对啊 学过的嘛啊 这个没什么好说的啊

07:31.010 --> 07:33.570
transition.default props

07:34.610 --> 07:37.650
其中有一个属相 他有默认值叫timeout

07:38.210 --> 07:42.210
如果说你没有传辑的话 那么我们就500毫秒啊 500毫秒

07:42.770 --> 07:48.690
保存啊 你看一下 那么你没有传辑这个timeout呢 我们这里就自动的有了一个timeout啊 看一下

07:49.250 --> 07:57.410
你看 是不是有个切换过程 你仔细看啊 那样是 看没500毫秒类切换啊 当然呢 我们这里如果说多写点 给他看清楚一点啊 五秒钟

08:00.190 --> 08:00.830
啊 看一下啊

08:02.510 --> 08:04.670
看一下 五秒钟之后变成那个exit down

08:05.790 --> 08:12.670
看没啊 好 然后呢 再点击 啊 enter 一个interactive啊 然后enter down 啊 enter down

08:13.230 --> 08:18.030
看没 对吧 没问题吧啊 当然你传辑呢 我们就使用你传辑的东西 好吧

08:18.750 --> 08:22.510
啊 这是关于这个timeout啊 我给他一个默认值啊 一个默认值

08:23.390 --> 08:26.030
好 这是关于这一块 好 接下来呢 还没完

08:26.830 --> 08:34.030
那么现在呢 要设计到那样事了 对吧 我们要要搞定这个单出单出 因为啊 为什么给 再说一下啊 为什么给默认值

08:34.030 --> 08:38.910
因为在一个网站里边 往往的他们的切换的时间间格呢

08:39.310 --> 08:46.030
大致相同啊 肯定多多少少有些差异 但大致是相同的 所以我们给一个默认值 就会少传一个属性

08:46.990 --> 08:53.150
好 那么这里面的那些央视 我们是不是可以直接在这里写央视啊 indexer.css 把封装一下嘛

08:53.710 --> 08:57.150
好 然后这里导入这个央视 import import

08:58.430 --> 09:01.790
点写刚 indexer.css 导入这个央视

09:03.630 --> 09:05.790
好 导入央视过后呢 这个央视里边呢

09:06.830 --> 09:11.630
是不是就可以啊 可以写具体的央视代码了 对不对啊 具体的内央视代码

09:12.190 --> 09:16.510
对吧 没问题吧 哎 我们就可以直接写内央视代码了 但是这里又出现一个问题

09:17.470 --> 09:20.750
那里这里的内央视万一外面改了怎么办

09:22.110 --> 09:28.110
哎 这个是个问题哦 这个内央视万一外面改了怎么办啊 你告诉我怎么办

09:28.990 --> 09:36.430
你在这里呢 因为我们刚才说了这个class names啊 这里因为它的属性呢跟那个是是一致的 跟那个css 全信是一致的

09:36.670 --> 09:42.670
这边传的属性呢会直接远峰不动的传到这边 对不对啊 这是都是我们开发过程中的解决的问题啊

09:43.390 --> 09:46.590
那么这里呢 如果说给他给了他一个表的费的嘛

09:48.270 --> 09:54.750
给了他一个就是css 你那里看一下 那是不是加了一个费的了 前面 加了一个钱追了 对不对

09:55.630 --> 09:59.710
是吧 是这个意思吧 好 所以说呢 这一块内央视呢

10:00.430 --> 10:01.950
那么这里有两种做法

10:02.590 --> 10:08.030
第一种呢 就是允许你传递 允许你传递内央视的话 那么我们这里呢

10:08.750 --> 10:13.710
要做一些额外的处理 数量起来可能稍微比较复杂一点啊 稍微比较复杂一点啊

10:14.430 --> 10:20.750
我们看这个讲完了之后再说 好吧 再说啊 到时候讲完了之后呢 你基本就知道了 如果说

10:22.350 --> 10:27.790
你这里呢 不给内央视 就是说我不允许你给内央视 那样是呢 我是自己控制的

10:28.510 --> 10:31.870
我 你要用我这个组件 那你肯定啊 因为

10:33.070 --> 10:35.870
灵活度和那个异用性

10:36.750 --> 10:41.950
这两个呢 多多少少是有些矛盾的 灵活度和异用性

10:43.070 --> 10:49.310
那就比方比方说无忧他可能好不好用 他肯定比rad好用 但是呢 他灵活度肯定要谦确一些

10:49.790 --> 10:55.150
你给了足够的灵活度呢 就会发现他用起来没有那么舒服了啊 包括这里也是一样

10:55.470 --> 11:02.270
如果说我要给你提供那样式的话啊 我可能会遇到很多问题 最终呢还是可能会导致灵活度的下降

11:02.990 --> 11:07.470
那如果说我不允许你提供那样式的话 因为我们这个废的传承性啊

11:08.110 --> 11:12.350
就是我们为这个网站单独来做的 你既然要用这个东西 那么

11:13.470 --> 11:16.990
他的样式呢 都是固定式的啊 都是固定式的样式

11:17.550 --> 11:23.310
所以说呢 我不太允许你啊 不太允许你给他加那样式 就根本就不允许你有这个属相

11:23.710 --> 11:29.150
根本就不允许你有这个属相 比方说你加这个属相 我就当你没加啊 当你没加比方加那个abc

11:30.110 --> 11:34.910
我就当你没有加啊 那么用起来呢 这个组件就用的很方便 你不用去管什么那样式的

11:37.870 --> 11:43.070
就说你用我这个组件 那你就是一定要做这个单独单出啊 你不 你不用去管什么那样式 我给你处理

11:43.790 --> 11:47.150
好 那么就比方说我们遇到这样的需求 就是让那个属性无效

11:48.030 --> 11:52.110
啊 我们我们就是不是就不能把所有的属性放过来了啊 那有些人会来说

11:53.390 --> 11:58.030
我能不能在后边给他加上一个class name的啊 复改他的属性了 比方说

11:58.510 --> 12:03.390
把它变成fit 那么他这个时候是fit还是abc呢 哎 这东西我以前讲过没有啊 讲过没有

12:03.870 --> 12:13.150
所以讲过的 对吧 好像是讲过的吧啊 就是他属性的 如果与同名属性的话会复改啊 复改 复改前面的啊 复改前面的 这样子 这样子当然也可以啊 也可以

12:13.390 --> 12:19.230
这也是一种方式啊 也是一种方式 那么这个属性是不是无效了 因为我们这里给了他一个属性啊 给了他一个属性

12:19.390 --> 12:24.350
但是你要注意初写顺序啊 你要注意初写顺序 如果说你这个东西写前面的话 你看一下

12:27.020 --> 12:33.260
说变成abc了 对不对 变成abc了 他是后边的复改前边的啊 后边的复改前边的什么个意思

12:33.740 --> 12:38.940
好 所以说我们也可以用这种方式 就是给他一个固定的内央式啊 给他一个固定的内央式

12:39.180 --> 12:43.580
那么你给他设置的内央式是不是没用了 对不对 咱们可以用这种方式来处理

12:43.820 --> 12:48.780
好 也就是你可以不用设置内央式了 我们也可以在这里写个说明文档 你可以传来很多东西 东西是

12:49.100 --> 12:56.300
无效的啊 就跟那个输一起传来随性过后了 你使用了那个东西过后 在css传来随性里面是不是可以不用这个硬这个属性的

12:56.700 --> 12:58.300
对不对 是这么个意思啊

12:59.340 --> 13:06.140
好 那么现在呢 我给他指定了一个class names啊 ok 那么内央式又搞定了啊 就像这些问题呢 虽然说我们后边呢

13:06.380 --> 13:10.220
用这种方式来处理的 但是你一定要考虑到啊 考虑到有这样的一个问题

13:10.940 --> 13:13.820
好 那么也就是我们央式里面就写上fit

13:14.780 --> 13:16.460
首先淡出啊 淡出

13:17.020 --> 13:21.180
淡出的话 我们就是设置这么一个css active

13:21.580 --> 13:25.580
对吧 设这个啊 淡出 淡出的时候呢 我们把它设成trization

13:26.700 --> 13:30.700
啊 我们先暂时给他500毫秒嘛啊 先暂时给他500毫秒

13:31.180 --> 13:34.460
然后呢 把opacity呢 身为0啊 就是淡出效果

13:35.020 --> 13:39.740
做完了 看一下吧 点击 做一个淡出效果 对吧 一个淡出效果

13:40.220 --> 13:43.340
啊 那么他最后呢 有个一个sits down啊 一个sits down

13:43.900 --> 13:46.780
当他完成的时候啊 一个sits down

13:47.500 --> 13:51.900
完成的时候呢 opacity呢 要把它设为0啊 opacity要把设为0

13:52.860 --> 13:55.260
好 看一下 淡出是不搞定的 对不对

13:55.820 --> 14:00.540
好了 那么接下来是淡入啊 淡入 淡入呢 首先进入enter啊 进入enter

14:00.700 --> 14:03.900
一个sits enter 好 进入到enter之后呢

14:05.420 --> 14:07.420
我们首先呢 把opacity给它设为0

14:08.700 --> 14:12.220
好 然后在下 这个样式应用完成之后

14:12.780 --> 14:19.340
马上呢 它变成了enter active对吧 马上变成这个样式了

14:19.980 --> 14:23.660
啊 刚刚进入的时候啊 先把样式变成opacity变成0

14:24.140 --> 14:27.180
然后呢 马上把它变成什么了 变成那个就是

14:28.620 --> 14:33.500
opacity等于1 然后transition等于什么500毫秒

14:34.860 --> 14:39.900
好 这样子来处理 好 保存你看一下 那么现在的主件是不是可以完成淡入淡出的情况呢

14:40.780 --> 14:43.580
哎 淡入 淡入还有好像还有一点问题啊

14:44.220 --> 14:45.660
呃 opacity等于0

14:46.380 --> 14:50.700
transition 500毫秒 哎 没问题啊 没问题啊 我看一下啊

14:51.820 --> 14:58.700
fade enter down 哎 哎 这是怎么回事呢

14:59.980 --> 15:04.140
呃 fade enter active

15:04.780 --> 15:07.980
我写错了吗 我把这个时间设为设长一点啊

15:08.940 --> 15:13.340
呃 5秒钟吧 5秒钟时间设长一点 我看一下我哪个地方写错了

15:14.300 --> 15:18.700
点击 fade没问题 fade down 啊 最终会变成fade down

15:20.060 --> 15:24.140
ok 然后点击 enter 它瞬间就出来了啊 瞬间就出来了

15:24.780 --> 15:27.340
transition 500毫秒 opacity

15:29.260 --> 15:33.740
哎 这是怎么回事呢 不可能是这个顺序啊 这个顺序应该不是不可能的啊

15:34.460 --> 15:40.460
不可能是这个顺序 哎 我看一下啊 哪个地方写错了 fade enter 应该是

15:41.020 --> 15:45.420
有可能是那样式的名字写错了 enter 哎 再来啊

15:46.460 --> 15:53.860
active 哎 但是不会啊 不会是那样式的名字写错了 因为这都是应用进去了

15:54.580 --> 15:56.900
应用进去了 transition 500毫秒

15:57.460 --> 16:03.500
那这样 我们直接打这个元素来测试 opacity 0

16:03.580 --> 16:04.540
opacity 0

16:05.900 --> 16:09.260
transition 等于500毫秒

16:10.700 --> 16:16.220
opacity 0去掉 是有一个单 现在是可以啊 看没 现在是可以的

16:17.260 --> 16:22.940
那为什么点这不行了 我看一下啊 为什么点这不行 这个很奇怪啊

16:24.460 --> 16:35.140
啊 这个给它消失啊 当过后了 opacity 等于0 然后呢 active fade enter

16:37.380 --> 16:42.900
哦 我的天呐 我觉得你们都快急死了 对吧 这个脑残干嘛呢

16:44.260 --> 16:45.780
啊 好 ok

16:47.060 --> 16:53.860
好 ok 是吧 是完成了 对吧 但是呢 我们这里的时间啊 这里的时间是500毫秒 这边的时间呢是5000 对不对

16:54.420 --> 16:59.300
那把它改成一样的 好 这里呢 看一下 隐藏 显示 隐藏

17:00.180 --> 17:04.980
啊 显示 是吧 那么之后呢 是不是很好用了这个逐渐 对吧 我们就不用去管那些样式了

17:05.060 --> 17:09.940
我们只用控制它 显示隐藏就完了 它自己会去用这个啊 弹路弹图的样式

17:11.220 --> 17:17.860
但是呢 这里还有个问题 什么问题呢 就是说你这个时间啊 没有统一 就比方说我们这里

17:19.620 --> 17:26.660
传了一个timeout进来啊 传了一个timeout进来 这个属性传的进来了 传进来了之后呢 比方说我们这里传了一个

17:27.140 --> 17:33.460
1000 那么是不是该在一秒钟之内弹弹出 对吧 是不是该在一秒钟之内弹弹出

17:33.940 --> 17:39.460
那这里还是500毫秒 啊 虽然说一秒钟之内改变了这个啊 比方说我们写长一点啊 5秒钟

17:40.180 --> 17:48.580
你可以看发现 这里呢 他这里的真实的弹弹出是收到样式控制的 样式这里说的是500毫秒 但是内鸣的切换

17:50.100 --> 17:52.580
内鸣的切换 是5秒钟

17:53.380 --> 17:57.780
啊 一看内鸣 5秒钟之后才切换到当 对吧 内鸣的切换是5秒钟

17:58.420 --> 18:01.780
啊 你看 这里说一下就出来了 那肯定不是我们想要的

18:01.940 --> 18:08.340
我们肯定是希望那个时间是统一的 对吧 肯定希望时间是统一的 那这个东西怎么来处理呢 这个就麻烦了

18:09.060 --> 18:13.060
啊 那么比方说我们这里time out 要给他传其他的数据 怎么处理呢

18:14.260 --> 18:19.700
好 因为我们现在问题是在css里边 是不可能在这里去读他属性了 对吧

18:20.340 --> 18:27.300
动态的读属性只是不可能的 对不对 而且呢 因为而且他使用的是内鸣 对不对 切换的是内鸣

18:28.260 --> 18:35.380
因此呢 这个trash 性了啊 这个trash 性了 我们是没办法把他放到那个style 样式里边了

18:35.860 --> 18:40.100
那怎么办呢 那么我们这里呢 回忆一下啊 给大家回忆一下

18:41.060 --> 18:45.140
回忆什么呢 回想我们之前那个讲这个re

18:45.780 --> 18:46.980
在第一节课的时候

18:48.740 --> 18:51.300
re的trash 性就这些东西要灵活运用啊

18:52.260 --> 18:56.020
在讲第一节课的时候 我给大家讲过那个trash 性那个逐渐

18:56.980 --> 18:58.420
啊 我们能打开啊

18:59.220 --> 19:06.180
trash 性那个组建里边呢 他有一些事件的他是啊 他是有一些事件的 就是什么on enter

19:06.660 --> 19:09.460
当进入的时候 哎呦在下面啊 下面

19:12.610 --> 19:13.570
呃 在哪呢

19:16.290 --> 19:22.050
哦 在on entering啊 在正在进入的时候啊 on enter

19:22.690 --> 19:29.650
啊 这些 这些时候 那么这些有一些勾字函数 对吧 我们可以利用 其实可以利用这个勾字函数

19:30.130 --> 19:31.250
来处理这个问题

19:32.290 --> 19:36.690
就是手动的往这个dorm元素里边 给他加上trash 性

19:37.410 --> 19:41.730
啊 给他加上trash 性 也就是说我们在这个央视里边呢 不写了

19:42.530 --> 19:46.610
这个央视里边不写了啊 甚至呢我们这里还可以合并这个央视 对吧 央视就变得

19:47.090 --> 19:49.810
就是内央视里边变得非常简单了啊

19:50.290 --> 19:52.370
好 那么这里呢

19:54.370 --> 19:58.690
啊 对了吧 没问题吧 啊 这里对了啊

20:00.370 --> 20:02.050
这个 把这些合并了啊

20:07.150 --> 20:08.110
好 变这个样子啊

20:12.220 --> 20:15.020
一个sits down 我看一下啊 一个sits down

20:17.100 --> 20:19.740
废的一个sits active

20:20.620 --> 20:21.660
一个sits active

20:22.540 --> 20:22.860
啊

20:24.220 --> 20:27.180
对啊 没问题啊 没问题啊 废的enter

20:27.820 --> 20:31.740
啊 没问题啊 变成这个样子 就这里边了不再去写什么transition了啊

20:32.300 --> 20:36.700
好 那么我们把全程里放到哪了 放到这个世界里面 给大家提供一些事件勾字函数

20:37.100 --> 20:38.860
比方第一个啊 on什么

20:39.580 --> 20:41.260
在进入之前啊

20:42.060 --> 20:48.060
在进入就是切换到entering这个状态之前啊 切换到这个状态之前 on什么 enter

20:49.020 --> 20:53.020
切换到那个勾字函数 这里边它会闯立一个函数进来 就是我们的动物对象

20:53.500 --> 20:56.540
看一下吧 我们这里输出一下 输出一下就动

20:56.940 --> 20:58.460
load 你看一下输出的是啥

21:00.220 --> 21:00.700
啊 这里

21:03.260 --> 21:08.380
啊 点击啊 没有啊 出来了 你看是不是输出这个玩意儿 对不对 输出这个玩意儿

21:09.100 --> 21:15.260
好 那么这里呢 我们当进入的时候呢 我们给它手动的加上啊 add 什么

21:15.980 --> 21:17.260
啊 class list

21:18.060 --> 21:19.900
哦 不是啊 their style

21:20.620 --> 21:23.020
transition 手动的加上这个transition

21:23.740 --> 21:31.660
啊 加上什么呢 等于多少呢 可以用opacity嘛啊 我们就指定单个属性啊 只有这个属性才会应用这个样式啊 opacity

21:33.340 --> 21:35.340
多少呢 就是

21:35.820 --> 21:40.140
多少时间呢 我们这里是可以拼接了啊 这里就可以拼接了啊 因为我们放到style里边了

21:40.380 --> 21:44.700
拼接出什么了 props 属性里边的timeout啊 拼接这个字啊

21:45.500 --> 21:49.020
这么多毫秒 好 保存你看一下 onenter

21:49.900 --> 21:51.900
看一下啊 那么点击

21:52.940 --> 21:58.940
你看一下 onenter 是不是搞定的 对不对 对吧 5000毫秒 对不对啊 是不是 onenter 搞定了

21:59.980 --> 22:04.620
好 但是这个东西不能永远持续啊 当你完成完成进入之后

22:05.180 --> 22:10.540
啊 当你变成完成进入之后 那我是不是得把这个东西移除掉对不对 得把这个东西移除掉

22:11.180 --> 22:12.860
onenter的 又来

22:13.980 --> 22:18.940
对啊 这些灵活运用 好 那么这里那么输出啊 输出啊 就是

22:19.900 --> 22:24.380
呃 结束啊 看一下吧 这个结束看一下什么时间点输出了

22:25.420 --> 22:27.020
点击 切换

22:28.060 --> 22:31.020
你看什么timeout 结束过后啊 输出的 对不对

22:31.660 --> 22:35.180
实际上那个 css 传输的那个组件 他就是利用了这些勾字函数

22:35.500 --> 22:40.780
往这里边去加了一些那样式 对吧 那既然他可以加那样式的 我们就加style 不可以吗 当然可以啊

22:41.340 --> 22:43.500
load style 啊 transition

22:44.540 --> 22:47.420
transition 又把那个transition应该移除掉 对吧

22:48.220 --> 22:50.940
好 那么这里呢 我们把这个时间写短一点啊 1000

22:51.740 --> 22:53.340
啊 这里就外面就可以控制了 对不对

22:54.300 --> 22:57.580
对啊 看进入啊 一秒钟 是吧 是不是可以控制的

22:58.060 --> 23:02.700
啊 控制完了过来看 他transition了 又把去掉了 对不对 把去掉了啊 因为

23:03.020 --> 23:05.980
我们不希望他一直持续 因为可能会影响到后续的操作

23:06.860 --> 23:09.580
啊 比方了后续的里边的东西 他不希望有transition的存在

23:10.460 --> 23:12.780
对吧 好 那么接下来呢

23:13.900 --> 23:22.460
这是 enter 那么一个css 是不是一样的 对吧 当一个css的时候啊 那这里是不是有重复代码啊 重代码你可以提取一下嘛啊 提取一下 比方说

23:23.260 --> 23:25.420
add 啊 transition

23:27.260 --> 23:28.540
add transition load

23:29.660 --> 23:31.100
把这个写出来啊

23:32.940 --> 23:35.740
对吧 然后呢 加加一个remove transition

23:37.020 --> 23:39.420
啊 这里呢 把这个写过来

23:41.500 --> 23:46.940
对吧 就完事了啊 那咱们呢 咱们这里呢 就可以直接使用那个 我们现在存在的add transition

23:47.260 --> 23:48.940
啊 这里呢 我们直接使用

23:49.420 --> 23:50.940
thisremove transition

23:51.340 --> 23:53.900
好了么 on一个css的时候 是不是add transition

23:54.460 --> 23:59.740
on一个css的啊 当结束的时候 是不是 thisremove transition 对吧

24:00.700 --> 24:01.500
啊 没问题吧

24:02.380 --> 24:05.580
啊 这里应该用this啊 this the props

24:06.220 --> 24:07.100
this the props

24:08.700 --> 24:09.660
啊 是不是没问题

24:10.380 --> 24:15.820
哎呦哎呦哎呦 这这这这 我写的是哪 我都写的是哪 我的天啊 我这是函数组件

24:16.380 --> 24:18.940
啊函数点直接用就行了啊 直接用就行了

24:21.260 --> 24:26.780
哦 这这这的写法也不对了 对吧 我要干嘛呢 我的 我把当成内组件来使用了啊 函数

24:26.780 --> 24:28.140
它是个普通函数组件啊

24:32.400 --> 24:34.320
它是一个普通的函数组件

24:35.920 --> 24:39.520
所以说这里timeout啊 这里传过来嘛 timeout

24:40.560 --> 24:48.450
传过来啊 这里啊 这里参数传过来啊 这里复制一下啊

24:49.810 --> 24:51.890
啊 这里也是啊remove transition

24:52.930 --> 24:57.250
啊 这个复制一下啊 复制一下啊 只需要传个load进来就行了

24:58.690 --> 25:01.810
好 完了啊 好 那么接下来 那么这里就是直接使用这个

25:02.370 --> 25:07.730
呃 直接使用这个就是函数组件了 不过呢这个timeout怎么办呢

25:08.370 --> 25:11.970
这个timeout得传过去啊啊 这个timeout得传过去啊

25:12.530 --> 25:15.010
啊 那这样吧 我们这里调整扣啊扣

25:16.450 --> 25:19.570
这意思不绑定啊 不绑定这意思 跟这意思没有什么关系对吧

25:20.130 --> 25:26.370
然后呢 呃 不行 因为它那个那个函数还是得写一个load

25:26.930 --> 25:30.370
还是得写这个add transition load传进去

25:30.530 --> 25:36.530
然后prob's点 timeout传进去啊 因为它有两个参数啊 你再这样写啊 这里

25:37.330 --> 25:41.090
替换一下啊 这个remove传进就可以直接放过来了啊 因为它只需要一个参数load

25:41.250 --> 25:44.770
本身呢 它这个事件里边它本身就有一个参数load对吧 对吧 对应过去

25:45.090 --> 25:48.290
啊 所以说这样的 哎呀 处理 好 接下来我们看一下啊

25:49.970 --> 25:54.690
点击 你看呀 是不是没问题了 点击 是不是没问题了 点击

25:55.890 --> 25:59.410
啊 你看 你看这个style 是不是不停的在切换 我们把它换成5秒钟

25:59.970 --> 26:00.530
啊 5秒钟

26:02.370 --> 26:04.290
你看 它进度就统一的了 点击

26:06.370 --> 26:11.810
看没 逐渐淡出啊 最后这里变当的时候呢 你看这里style也没了 说明上

26:11.810 --> 26:15.410
说明那个css出来车性 它就是用这种类似的方式来做的 再点击

26:15.890 --> 26:19.010
啊 你看这个车性是不是出来了 对吧 哎

26:19.570 --> 26:23.090
是不是没问题了 对吧 就没问题了啊 就完全

26:23.650 --> 26:27.650
可以灵活的去操作啊 灵活的去操作 那么还有一个问题就是appear

26:28.610 --> 26:31.970
如果说首次出现的时候呢 你看它还是一下就出现了

26:31.970 --> 26:35.250
这个那样子呢 没有得到应用 对吧 这个那样子没有得到应用

26:35.250 --> 26:37.970
所以这个那样子呢 我们还是要处理一下appear

26:38.530 --> 26:43.970
好 appear的话 我们这里写上css啊 appear的话一开始出现的时候啊

26:44.610 --> 26:48.130
一开始出现的时候 我们还是把那个appear

26:49.490 --> 26:52.770
appear啊 设为opacity0

26:53.410 --> 26:56.130
然后呢 当那个appear

26:58.050 --> 27:01.570
active active的时候啊 应该是fade appear

27:03.810 --> 27:08.370
当active active的时候吧 变成1 跟那个enter是一样的 对吧 是不是一样的 对吧

27:08.770 --> 27:12.930
fade enter是0 一开始是0 然后马上把它变成1一个过度的效果

27:13.250 --> 27:15.650
好 保存 你看一下啊 刷新

27:16.690 --> 27:21.570
那么appear呢 它倒是有这个那样子 但是它没有动画啊 没有动画 为什么呢

27:22.050 --> 27:24.530
为什么没动画 失约 是不是 再看一下啊

27:26.370 --> 27:31.330
哎 等一下啊 刷新 哦 所以有动画 对 有动画怎么会没动画 对 有动画

27:31.330 --> 27:35.250
因为这个事件的触发 就夹那个那样 这个这个事件的触发

27:35.490 --> 27:41.170
当你使用了appear之后呢 它这个enter事件呢 也会触发啊 因为它会进入enter阶段 对吧

27:41.330 --> 27:46.050
它会进入enter阶段 因此呢 它也会触发这个事件啊 情况上的那一样是不太一样

27:47.010 --> 27:52.290
好 就写完了啊 这个fade 全程形 那么这个组件写完了之后 其实也没多少代嘛

27:52.690 --> 28:01.090
这个组件写完了之后呢 我们之后就可以非常非常方便的用这个组件来制作一个啊 非常简单的单 单入单出啊 保存 把它离开

28:02.370 --> 28:07.170
啊 单入 啊 单出 单出 单出 对吧 可以用它做一个非常简单的单出

28:07.490 --> 28:14.530
包括呢 我们后边可以跟那个 利用这个组件 跟那些什么输一起啊 输一起全程形来联用 比方说啊 我们这里复制一个

28:15.250 --> 28:20.530
我们可以跟那个输一起的这个全程形来联用啊 比方说这里输一起全程形 是吧

28:21.810 --> 28:24.450
好 那么这个 这个地方呢 我们外面套一个输一起全程形

28:26.610 --> 28:27.890
那套一个输一起全程形

28:29.330 --> 28:35.650
好 那么这里边是不是不用去设置什么硬的 对不对 不用去设置的什么硬的 对不对 那就直接使用key就完事了啊

28:35.890 --> 28:43.650
key就完事了 好 那咱们来看一下吧啊 使用那个key 使用那个key之后啊 加上那个输一起全程形 那这里边呢 我们

28:44.370 --> 28:46.690
啊 看一看 看一下用过 用过啥呢

28:48.210 --> 28:53.410
嗯 这里边呢 我们这样子写吧 嗯 this state show啊

28:54.130 --> 29:01.010
这里是显示了啊 这里否则的话显示这两个字啊 显示隐藏啊 就用这个废的全程形

29:01.490 --> 29:07.810
它能够 如果说离开的时候了 它单 单入 单出 然后呢 显示的时候 它是单入 对不对

29:08.370 --> 29:10.770
啊 你看一下稍微改一下 稍微改一下就完了

29:10.770 --> 29:12.530
啊 你还显示

29:16.110 --> 29:18.350
哎 隐藏了 隐藏了 我看一下啊

29:19.950 --> 29:28.190
嗯 这样子咱们调试一下啊 用rat调试一下 是我哪个地方没考虑到吗 用rat调试一下

29:29.950 --> 29:37.790
呃 这是我们的组件 废的transition这个组件 他给了我 我给了他一个key值 对吧 一开始是true 这个没有什么问题

29:38.750 --> 29:45.550
看一下啊 应该是哪个地方没调试到 顺便帮帮大家看一下 遇到问题的时候 怎么去调试

29:46.510 --> 29:54.430
呃 这个废的transition主意呢 我给了他一个key值没问题 而pr为true 贪冒车为多少啊 贪冒车没写 就是默认值500

29:54.670 --> 29:59.870
这些都没问题 然后他自动的给你了一个硬的属性 对吧 因为一开始是true嘛 对不对

30:00.190 --> 30:07.150
所以说一开始呢 你看一下有一个蛋 蛋看到没 一开始一个单 单入的效果 对吧 一个单入的效果 咱们把这个

30:07.950 --> 30:12.750
把这个贪冒车加上啊 贪冒车加上 比方说三三秒钟

30:14.270 --> 30:21.550
啊 有三秒钟的蛋入效果 看没 再来啊 三秒钟的蛋入效果 一开始是没有问题的 对吧 是没有问题的 然后接着看后边为什么会出问题

30:22.350 --> 30:28.510
呃 然后呢 话 现在呢 我现在点击切换状态

30:29.470 --> 30:31.230
点击缺换状态的话 他应该把这个

30:32.110 --> 30:37.390
呃 应该把这个硬变成去变成force 这是这个组件 他自动操作的 把这个硬变成force

30:38.750 --> 30:43.150
哦 这个没问题 没问题 你看 好 接下来我继续看啊

30:44.750 --> 30:50.990
明白了 大家注意到没 再来一次啊 我忽略到一个问题啊 忽略掉一个问题

30:53.150 --> 31:01.150
看一看啊 就这儿 随隙这个组件啊 呃 然后呢 我们这里呢 点再看啊 再看 再看这边这个组件

31:02.110 --> 31:10.350
点击切换状态的时候呢 他一开始显示的 然后把它切换成隐藏 对吧 这个了隐藏 一会儿呢 另外两个字要出现 对吧 另外两个字要出现

31:10.990 --> 31:14.030
呃 然后现在呢 他肯定是要把这个硬变成force

31:14.750 --> 31:18.510
然后呢 等三秒钟结束过后呢 他要改变这个key的值

31:19.790 --> 31:22.350
所以是吧 他得改变这个key的值才行

31:23.070 --> 31:24.030
好 点击切换

31:26.210 --> 31:30.610
他为什么没有改变这个key的值 现在就关键在这个问题 这个key的值没有发生变化

31:31.570 --> 31:38.530
这个key的值 key的值应该变成force的 对吧 它没发生变化 是为什么呢 是因为这个这个组件啊 思维起出来 是因为这个组件

31:38.770 --> 31:42.210
它让它的值组件呢 传递到一个东西 叫做on一個city的

31:43.250 --> 31:45.730
传递到这么一个东西 它是一个函数 在这个

31:46.450 --> 31:49.330
呃 处理函数里边呢 他会怎么样呢 他会

31:50.210 --> 31:54.610
把 有了这个处理函数之后呢 他会在这个处理函数之内完成这个切换

31:55.170 --> 31:59.410
但是呢 他传了这个on一个city的进去呢 我们是怎么操作的呢 你看一下这边

32:00.130 --> 32:05.170
我们 他 我们把他的属性全部拿过来了 放在这 对吧 一说这里呢 是不是有一个on一个city的 对不对

32:05.570 --> 32:10.770
是不是有个退出了这个属性 但是呢 我们后边又自己注册了一个on一个city的属性 是把他覆盖掉了

32:11.890 --> 32:14.530
没问题吧 是不是把之前那个属性覆盖掉了 对吧

32:15.330 --> 32:20.370
哎 所以说导致了这个问题 导致了这个 他给我传递的属性里边那个on一个city的 是不是没有调用

32:20.690 --> 32:23.810
包括什么on enter的 是不是 是不是也要做类似的处理

32:24.450 --> 32:27.890
那这个东西怎么来处理呢 这东西 哎 刚才我写内组件算了

32:28.050 --> 32:29.730
这样子分开写挺不好挺

32:30.450 --> 32:36.530
呃 或者说我这样吧 我把这两个函数写里边也无所谓吧 这两个函数写里边也无所谓

32:37.250 --> 32:40.690
好 那么这里不要timeouts了啊 直接来自于propster timeouts

32:41.650 --> 32:45.970
把这两个函数写里边 然后这里呢 我们就直接add transition

32:47.650 --> 32:51.330
add transition 这里呢也是add transition

32:52.050 --> 33:01.490
好 呃 然后在这两个函数里边呢 我们要做一下操作啊 就是on一个city的这个这个函数里边啊 就是remove transition里边啊

33:03.330 --> 33:10.450
on一个city的这个函数里边我们还要做一个额外的操作 干脆我就直接在这里写吧 哎呀 直接在这里写的了

33:14.140 --> 33:23.580
在这里写remove load 传进去 在这个on一个city的里边呢 他要做什么处理呢 就是说如果说你属性给我传了一个on一个city的

33:25.020 --> 33:31.660
你给我传了这么一个东西啊 我们看一下这个on一个city的他需要什么参数啊 on一个city的transition这个出现啊

33:32.140 --> 33:33.180
on一个city的

33:34.060 --> 33:40.780
啊 两个参数 load啊 那如果说你给我传了这个属性的话 我还要去调用一下你给我传进的这个属性

33:41.180 --> 33:45.100
所以我再说一次啊 这个这个问题是怎么导致的 为什么切换了过后再

33:45.420 --> 33:48.940
他为什么没有新的元素出现啊 只有 只有旧的元素

33:49.340 --> 33:54.460
因为新的元素出现了 他有一个前提条件 就是他给你传了一个 传了一个就是

33:55.100 --> 33:57.900
回掉函数 就相当于事件进去啊 你看点击

33:58.460 --> 34:04.460
你看是不是可以传了一个on一个city的进去 但是呢 你没有调用他 于是他没有切换啊 你看现在是不是切换了

34:05.260 --> 34:11.260
你没有去调用他 所以他没有切换 那么我们由于这里加了一个on一个city的 所以就把之前的覆盖

34:11.980 --> 34:17.820
覆盖掉了啊 明白这个意思吗 所以说我们要在属性里面去调用一下 他给我传递的这个on一个city的

34:17.980 --> 34:23.100
我不能不能光做自己的事情 他给我传递的事情就不做了 他给我传递的事情我是要完成切换的

34:23.340 --> 34:29.500
但是呢 我没有去切换 对吧 就是这个问题导致的啊 那么enter的是不是一样的啊 enter的是一样的啊

34:30.220 --> 34:31.020
enter的load

34:31.820 --> 34:38.780
你看enter的是不是有几个属性啊 enter的有两个属性啊 有两个属性 虽然我都传给你啊 一个load

34:39.100 --> 34:39.740
is appear

34:41.500 --> 34:44.700
啊 这两个属性我都传给你啊 那么这里remove

34:45.500 --> 34:47.980
还有谁写load传进去 然后呢 这

34:48.940 --> 34:53.180
判断一下 如果说啊 或者是用这种方式嘛probs on enter的

34:53.980 --> 34:58.300
啊 如果说有这个属性的话 有这个属性的话 我就调用一下这个属性啊 on enter

34:58.940 --> 35:06.060
把这两个参数传给你 is appear 你要你要做什么事情你去做啊 你去做 反正我做了自己的事情之后呢 你要做什么事情你自己去做

35:06.540 --> 35:09.820
好吧 啊 这里也是一样啊 这里也可以用这种类似的写法

35:13.230 --> 35:13.470
嗯

35:15.070 --> 35:17.630
好了啊 我们把这两句话加上 保存看一下啊

35:19.310 --> 35:21.790
那么现在呢 一开始显示的啊 然后切换

35:23.230 --> 35:29.870
三秒钟之后隐藏 然后这个这个东西啊 三秒钟之内出现啊 你看 我们把时间稍微稍微短一点啊 五百毫秒

35:31.630 --> 35:32.190
啊 显示

35:34.030 --> 35:38.110
看一下是不是没问题了 对吧 就没问题了啊 刚才没考虑到这种情况啊

35:39.070 --> 35:43.870
好 这是这个switch啊switch这个组件 好 那么switch这个组件写了之后呢

35:44.590 --> 35:55.470
switch 你看现在用起来是不是很简单了 对不对 现在用起来就超级简单了啊 现在用起来非常非常简单啊 比之前的要写各种样的样式要舒服多了啊 有了这个封装的好后的组件的话

35:56.350 --> 36:00.910
嗯 然后我们继续啊 来比方说一个列表呢 啊 一个列表我们再看一下啊 一个列表

36:01.870 --> 36:10.110
列表的话 我们要用什么组件呢 就是transition group 啊 要使用这个组件啊 这个组件呢 我们也是啊

36:11.070 --> 36:11.710
transition group

36:13.150 --> 36:20.430
啊 那这里呢 变成添加啊 添加啊 添加 那么这里呢 状态的话 我们给他一个状态就是

36:21.150 --> 36:25.550
task 是吗啊 用之前的那种做法啊 task 是同样的啊 导入uid

36:26.030 --> 36:32.830
哎 我好像好像这个版本也没安装啊 有没有安装啊 好像没有安装 重新安装一下吧 要ad ui d

36:36.270 --> 36:42.430
安装一下啊 把导入进来我这里去先帮帮忙写着啊 之前都写过了啊 所以很简单

36:43.790 --> 36:46.190
好 task 好 然后呢 这里边呢

36:47.550 --> 36:52.110
啊 我们写上一些对象吧 默认有两个对象啊 id 等于 uu

36:52.830 --> 36:59.950
uid 然后呢 那么呢 是啊 任务一啊 这里写出来啊 yeah start

37:01.710 --> 37:03.310
start 嗯 start

37:04.750 --> 37:08.350
好 让他运行吧 我们不管他 然后呢 这里再来一个啊 任务二

37:09.550 --> 37:17.040
啊 两个任务 好 三个任务啊 三个任务 啊 二

37:17.920 --> 37:20.080
三啊 三个任务啊 这里

37:21.040 --> 37:24.800
呃 然后我们这边呢 我们就怎么选了呢 我们这样选了啊

37:26.080 --> 37:31.520
this task uh state tasks uh map 映射啊 映射

37:32.160 --> 37:33.120
每一个

37:33.840 --> 37:39.440
每一个就是啊 呃 任务 它映射成为一个费的组件啊 就是个费的组件

37:40.320 --> 37:41.280
印上这么一个组件

37:42.960 --> 37:46.720
然后呢 这个transition group 呢 我们给大家加上一个component啊 让他

37:46.800 --> 37:52.400
然后他选择了uil 啊 他选择了uil元素啊 那这里边的每一个每一个任务呢 就是一个li

37:52.640 --> 37:57.120
啊 就是个li li 里边呢 我们就显示任务的名称 t.name 对吧

37:57.520 --> 38:00.720
好 那么这个keyz呢 keyz 天上呢 keyz 就填那个

38:02.000 --> 38:04.720
t.t.id啊 t.id

38:05.440 --> 38:08.480
好吧 好 一个t.name 后面来给加上一个按钮

38:09.520 --> 38:10.800
button啊 删除

38:12.240 --> 38:12.800
unclick

38:13.760 --> 38:17.920
好 点击删除的时候呢 我们要z set set重新设置状态

38:18.240 --> 38:22.560
那么这个task 这个任务呢 要重新设置一个数组啊 这个数组来自于哪呢

38:22.560 --> 38:25.600
来自于之前的那个数组 然后filter

38:25.600 --> 38:26.400
filter

38:26.400 --> 38:27.680
filter

38:27.680 --> 38:30.800
他的id不等于

38:30.800 --> 38:32.560
不等于t.id

38:33.040 --> 38:34.560
重新设置这个数组

38:34.560 --> 38:36.240
那么把删除掉就完事了 对吧

38:36.240 --> 38:39.840
由于有这个组件的存在 我们就不需要去管什么样式啊 一种东西 不用管了啊

38:39.840 --> 38:40.960
就直接使用这个组件

38:41.680 --> 38:46.080
当他出现的时候 他自然会啊 自然会就是担入啊 自然会担入

38:47.760 --> 38:49.520
那么添加的时候呢 也是一样啊

38:50.320 --> 38:54.480
得到一个就是任务名称 任务名称的话 我们这里用window

38:54.880 --> 38:56.560
点propt 简单一点嘛啊

38:57.120 --> 38:58.880
请输入任务名称

38:59.840 --> 39:00.640
ok

39:00.640 --> 39:01.440
然后呢 我们这里

39:03.600 --> 39:05.680
把之前的数组啊拿到

39:06.640 --> 39:10.000
给他一个新数组啊 把之前的数组展开

39:10.000 --> 39:11.120
this is dead tasks

39:11.120 --> 39:13.120
好 然后呢 给他一个新任务

39:13.120 --> 39:14.400
新任务就是个对象

39:14.400 --> 39:16.160
id等于uuid

39:16.160 --> 39:18.720
然后呢 name呢 就是个name

39:18.720 --> 39:19.760
名字

39:19.760 --> 39:22.160
好 没了啊 没了 你看

39:22.160 --> 39:24.800
那么现在呢 我们只需要搞定这个列表就行了

39:24.800 --> 39:26.960
他自动的就会有单用单处的效果

39:26.960 --> 39:27.920
啊 自动就有了

39:27.920 --> 39:29.600
好 保存 你看一下

39:29.600 --> 39:32.000
拿一个地方一个写错了

39:33.200 --> 39:34.240
没写错了

39:34.240 --> 39:35.200
没写错了

39:36.000 --> 39:37.200
嗯 我看一下啊

39:38.560 --> 39:41.120
呃 这里为什么没有任何显示呢

39:41.680 --> 39:43.440
为什么没有任何显示呢 保存

39:44.240 --> 39:44.880
刷新一下

39:45.600 --> 39:46.080
ok

39:46.080 --> 39:47.840
啊 你看一看是不是有个大单捉

39:47.840 --> 39:49.200
点击过后是不是有个单捉

39:49.200 --> 39:50.320
点击过后是不是有个单捉

39:50.320 --> 39:51.040
添加过后

39:51.680 --> 39:52.880
啊 是不是有个任务

39:52.880 --> 39:54.080
有个单捉效果

39:54.080 --> 39:54.480
对吧

39:55.040 --> 39:55.440
哎

39:56.080 --> 39:56.640
好 这就是

39:57.280 --> 39:59.520
可以自行去封装一些组件啊

39:59.520 --> 40:00.480
封装一些组件

40:00.480 --> 40:02.160
那么我们封装了一个fade transition

40:02.160 --> 40:03.760
那是不是还可以封装一些什么

40:03.840 --> 40:05.680
滑动啊 这些之类的东西对吧

40:05.680 --> 40:06.720
所以都可以封装

40:06.720 --> 40:07.280
对不对

40:07.280 --> 40:08.400
哎 都可以封装

40:08.400 --> 40:08.880
啊

40:08.880 --> 40:10.400
大家自行可以发挥想象力了

40:10.960 --> 40:12.240
ok 这就是自定义的

40:12.240 --> 40:14.080
呃 组织每个效果出来就够了啊

40:14.080 --> 40:15.440
大家来去自己去做一下

40:15.440 --> 40:17.280
体会一下这个过程

40:17.280 --> 40:19.280
那么这个通过这个练习了

40:19.280 --> 40:21.120
大家也可以对这个组件呢

40:21.600 --> 40:22.960
对这一套动画组件呢

40:22.960 --> 40:24.720
也有更加深刻的人士

40:24.720 --> 40:25.840
实际上呢

40:25.840 --> 40:28.880
在react里边肯定是不止有这么一种动画组件

40:28.880 --> 40:29.280
对吧

40:29.280 --> 40:32.320
它其实官方文档里边也提到了

40:32.400 --> 40:34.400
说 呃 其实呢

40:34.400 --> 40:35.360
还有一些组件

40:35.360 --> 40:37.200
比方说像这个react motion

40:37.200 --> 40:38.400
啊 这个组件

40:38.400 --> 40:39.600
啊 大家可以有兴趣的话

40:39.600 --> 40:40.560
自己可以去看一下啊

40:40.560 --> 40:41.760
我就没有那么

40:41.760 --> 40:44.000
不可能把第三方库全部讲完的啊

40:44.000 --> 40:45.600
不只讲一些常见的

40:45.600 --> 40:46.240
他说呢

40:46.240 --> 40:48.880
呃 我这个react transition group

40:48.880 --> 40:49.760
这个库呢

40:49.760 --> 40:50.800
他不像

40:50.800 --> 40:52.800
啊 不像那个什么react motion

40:52.800 --> 40:53.920
这种动画库

40:53.920 --> 40:56.400
他本身呢不带有任何的动画效果

40:56.400 --> 40:57.600
他只是做一些

40:57.600 --> 40:58.640
啊

40:58.640 --> 40:59.920
呃

41:00.000 --> 41:01.520
央视的切换啊

41:01.520 --> 41:02.720
什么状态的切换

41:02.720 --> 41:03.920
要做什么样的效果

41:03.920 --> 41:05.040
要做什么样的动画效果

41:05.040 --> 41:06.800
你自己凝聚去做啊

41:06.800 --> 41:08.720
他说啊 我这个库呢

41:08.720 --> 41:11.520
没有动画央

41:11.520 --> 41:14.480
他自身不带任何的动画央视啊

41:14.480 --> 41:15.040
他说

41:15.040 --> 41:17.200
他只是给你提供了一些啊

41:17.200 --> 41:18.320
过度的

41:18.320 --> 41:19.840
过度的阶段啊

41:19.840 --> 41:20.480
然后呢

41:20.480 --> 41:22.320
控制一些内的央视

41:22.320 --> 41:23.360
和一些

41:23.360 --> 41:24.320
呃 一组组

41:24.320 --> 41:26.080
一组元素啊

41:26.080 --> 41:27.600
他只是来做这些处理

41:27.600 --> 41:29.280
那么具体的

41:29.360 --> 41:30.720
具体怎么去处理

41:30.720 --> 41:31.520
怎么去处理呢

41:31.520 --> 41:32.720
你自己去搞定

41:32.720 --> 41:33.360
啊

41:33.360 --> 41:35.040
那么大家可以去了解一下这个库啊

41:35.040 --> 41:37.120
我就没有那么多时间讲了啊

41:37.120 --> 41:38.160
他以后有机会嘛

41:38.160 --> 41:38.800
如果说

41:38.800 --> 41:39.360
以后吧

41:39.360 --> 41:40.320
我目前

41:40.320 --> 41:42.240
比较紧迫的课程落完了之后呢

41:42.240 --> 41:43.680
看有机会我给大家讲一讲啊

41:43.680 --> 41:45.040
一些其他的第三方库

41:45.040 --> 41:45.760
其实呢

41:45.760 --> 41:46.720
大家也不用

41:46.720 --> 41:48.480
不要太过于的去

41:48.480 --> 41:50.240
特别是学习到后边的时候啊

41:50.240 --> 41:52.160
不要太过于的一旦老师

41:52.160 --> 41:53.440
因为讲这个东西啊

41:53.440 --> 41:54.480
是讲不完的

41:54.480 --> 41:55.440
技术太多了

41:55.440 --> 41:56.720
我实际上跟大家说

41:56.720 --> 41:58.000
呃

41:58.000 --> 41:59.520
你要学技术

41:59.520 --> 42:00.320
你可能

42:00.320 --> 42:01.440
从现在开始

42:01.440 --> 42:02.640
不吃饭不睡觉

42:02.640 --> 42:03.680
一直学

42:03.680 --> 42:05.760
学到隔壁那一天都学不完

42:05.760 --> 42:07.200
太多了东西

42:07.200 --> 42:07.680
所以说呢

42:07.680 --> 42:08.800
大家学校的时候呢

42:08.800 --> 42:09.520
一是要有去

42:09.520 --> 42:10.080
有说选择

42:10.080 --> 42:11.520
我们学习最核心的

42:11.520 --> 42:12.320
啊最底

42:12.320 --> 42:13.760
核心的原理

42:13.760 --> 42:15.360
和一些编程思维

42:15.360 --> 42:16.480
这是最重要的

42:16.480 --> 42:16.960
然后是

42:16.960 --> 42:17.360
怎样的

42:17.360 --> 42:18.720
什么第三方库啊

42:18.720 --> 42:19.760
什么API啊

42:19.760 --> 42:20.720
大家没事的时候

42:20.720 --> 42:21.680
自己去看一下啊

42:21.680 --> 42:23.120
看一下也可以搞定的

42:23.120 --> 42:24.480
你像这个玩意儿

42:24.480 --> 42:26.800
啊你哪怕你看不懂英文教程吧

42:26.960 --> 42:28.320
一带百度里面去收一下

42:28.320 --> 42:29.280
rex

42:29.280 --> 42:30.000
模型

42:30.000 --> 42:30.640
看一下

42:30.640 --> 42:31.520
有没有呢

42:31.520 --> 42:32.400
说的也有

42:32.400 --> 42:32.960
对不对

42:32.960 --> 42:33.680
也有啊

42:33.680 --> 42:34.400
大家看一下

42:34.400 --> 42:35.840
当然我肯定是推荐

42:35.840 --> 42:36.720
看官方文的

42:36.720 --> 42:37.920
我个人的话

42:37.920 --> 42:39.000
是不会太会去看什么

42:39.000 --> 42:40.400
减速啊这些东西

42:40.400 --> 42:40.520
啊

42:40.520 --> 42:40.720
绝尽

42:40.720 --> 42:41.280
那有的时候

42:41.280 --> 42:42.880
翻翻直估还是可以啊

42:42.880 --> 42:43.520
怎么

42:43.520 --> 42:44.320
有些API

42:44.320 --> 42:45.360
怎么极客事件啊

42:45.360 --> 42:45.760
这些人

42:45.760 --> 42:47.040
有的社会看一下

42:47.040 --> 42:48.000
但大部分时候呢

42:48.000 --> 42:48.800
我是看官网

42:48.800 --> 42:49.920
因为官网给的东西

42:49.920 --> 42:51.200
那是最准确的啊

42:51.200 --> 42:52.800
最不容易出现理解错误的

42:52.800 --> 42:54.000
因为我发现百度里边

42:54.000 --> 42:55.360
很多很多的帖子

42:55.360 --> 42:56.000
他们理解

42:56.000 --> 42:57.600
多多套套都有一些问题

42:57.600 --> 42:59.040
能看官网的话

42:59.040 --> 43:00.480
尽量看官网

43:00.480 --> 43:01.280
好吧

43:01.280 --> 43:01.840
嗯

43:01.840 --> 43:02.080
好

43:02.080 --> 43:02.480
这是啊

43:02.480 --> 43:02.800
这是

43:02.800 --> 43:03.200
大家下来

43:03.200 --> 43:04.720
一定要去练习一下啊

43:04.720 --> 43:06.720
这是这个制定的一个

43:06.720 --> 43:07.680
承诺性书件

43:07.680 --> 43:07.920
好

43:07.920 --> 43:08.400
那么支持呢

43:08.400 --> 43:09.520
咱们动画就讲完了啊

43:09.520 --> 43:10.640
动画讲完了

