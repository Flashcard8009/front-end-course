WEBVTT

00:00.430 --> 00:03.430
好 这节课呢 咱们来说另外一个

00:03.430 --> 00:06.430
也是非常非常常见的一个场景

00:06.430 --> 00:09.430
就是受保护的页面

00:09.430 --> 00:12.430
就是什么意思呢 就是有些页面呢

00:12.430 --> 00:17.430
它可能需要经过某种认证

00:17.430 --> 00:20.430
或者是登录 或者是某一个权

00:20.430 --> 00:24.430
具有某一个权限 才能够访问

00:24.430 --> 00:27.430
像这样的页面 那么像这样的页面怎么来处理

00:27.430 --> 00:29.430
我们这节课呢 给大家提供一个思路

00:29.430 --> 00:31.430
当然那也只是一个思路

00:31.430 --> 00:33.430
它的做法呢 肯定还有其他的做法

00:33.430 --> 00:35.430
大家可以去发挥一下强项力

00:35.430 --> 00:38.430
这里我给大家说一个例子吧

00:38.430 --> 00:42.430
这里我们用一个PBT来演示我们要做什么

00:42.430 --> 00:45.430
就比方说呢 我们有这么一个页面

00:45.430 --> 00:47.430
这么一些页面啊

00:47.430 --> 00:53.430
有顶级的页面呢 我们可能有一个登录

00:53.430 --> 00:54.430
一个登录页

00:54.430 --> 00:57.430
那么一个登录页其实就是授权页

00:57.430 --> 01:00.430
对吧 授权页 就是你不是没权限吗

01:00.430 --> 01:02.430
没权限的话就挑到一个登录页来给你授权

01:02.430 --> 01:04.430
这么一个页面

01:04.430 --> 01:09.430
然后呢 还有一个就是公共页

01:09.430 --> 01:11.430
公共页面

01:11.430 --> 01:15.430
公共页面是什么呢 就是所有人都可以访问

01:15.430 --> 01:17.430
不管你有没有权限都可以访问

01:17.430 --> 01:20.430
当然公共页有可能有很多对吧 有可能有很多

01:20.430 --> 01:24.430
比方说公共页下面还有可能会有一些分支对吧

01:24.430 --> 01:27.430
你访问公共页 因为我们组建是有签

01:27.430 --> 01:29.430
路由是有签套的嘛

01:29.430 --> 01:30.430
你访问这个路由的时候呢

01:30.430 --> 01:33.430
他可能会进入别的路由的组建

01:33.430 --> 01:35.430
就是一些纸页面 对不对

01:35.430 --> 01:39.430
都有可能 总之他就是所有人都可以访问

01:39.430 --> 01:43.430
然后呢 还有一种页面呢 就是那个

01:43.430 --> 01:45.430
受保护的页面

01:45.430 --> 01:49.430
我们主要是研究着一块 受保护的页面

01:49.430 --> 01:53.430
那么这种页面是必须要授权之后才能访问

01:53.430 --> 01:54.430
像这两个页面

01:54.430 --> 01:58.430
就说如果说你没有进行授权

01:58.430 --> 01:59.430
你没有登录

01:59.430 --> 02:01.430
比方说没有 或者是没有其他权限

02:01.430 --> 02:03.430
你没有经过授权之后呢

02:03.430 --> 02:05.430
你去访问这个页面是访问不到的

02:05.430 --> 02:08.430
如果说未授权的时候去访问的话

02:08.430 --> 02:11.430
那么他会怎么样呢 他会给你挑转到

02:11.430 --> 02:16.430
他会给你挑转到登录页 就是授权页

02:16.430 --> 02:20.430
那么这种情况就是 未授权访问

02:21.430 --> 02:24.430
那么这个时候呢 如果说你访问这个页面

02:24.430 --> 02:25.430
没有授权

02:25.430 --> 02:28.430
那么这个时候他会挑转到登录页

02:28.430 --> 02:30.430
好 挑转到登录页过后呢

02:30.430 --> 02:33.430
如果说登录页完成登录了

02:33.430 --> 02:34.430
他已经完成登录了

02:34.430 --> 02:35.430
是不是得挑回来啊

02:35.430 --> 02:36.430
对不对

02:36.430 --> 02:38.430
为什么你点不过来

02:39.430 --> 02:43.430
就登录页完成授权之后 你得挑回来

02:43.430 --> 02:44.430
得挑回来

02:44.430 --> 02:45.430
这也是常说的

02:45.430 --> 02:47.430
比方说你在上网的时候

02:47.430 --> 02:49.430
看到有些页面需要登录的

02:49.430 --> 02:52.430
你登录完成之后是不是要挑回到这个页面去了

02:52.430 --> 02:53.430
对吧

02:53.430 --> 02:57.430
授权之后 挑回

02:57.430 --> 02:59.430
当然前提条件是

02:59.430 --> 03:01.430
你是从这个页面挑过去了

03:01.430 --> 03:04.430
所以说他完成授权之后他挑回来

03:04.430 --> 03:06.430
那么另一种情况是什么呢

03:06.430 --> 03:07.430
另一种情况是

03:07.430 --> 03:10.430
如果说你直接访问了登录页

03:10.430 --> 03:11.430
你直接访问的

03:11.430 --> 03:14.430
那么访问之后呢 就直接挑转到这

03:14.430 --> 03:17.430
可能挑转到首页吧

03:17.430 --> 03:19.430
比方说这是首页

03:21.430 --> 03:22.430
公公页

03:22.430 --> 03:23.430
明白的意思吧

03:23.430 --> 03:25.430
就是我们接下来要做的事情

03:25.430 --> 03:27.430
就是说我们有三种页面

03:27.430 --> 03:28.430
不是说三个

03:28.430 --> 03:29.430
不是说三个

03:29.430 --> 03:30.430
是三种

03:30.430 --> 03:31.430
因为我这里演示的时候

03:31.430 --> 03:33.430
肯定不会太写太多的页面

03:33.430 --> 03:34.430
有什么意义呢

03:34.430 --> 03:35.430
就写一个就行了

03:35.430 --> 03:36.430
但是你要知道

03:36.430 --> 03:38.430
我们有三种页面

03:38.430 --> 03:40.430
他们的做法都是相同的

03:40.430 --> 03:41.430
一个登录页

03:41.430 --> 03:43.430
一个登录页一般只有一个

03:43.430 --> 03:45.430
也有可能有多少个 说不准

03:45.430 --> 03:46.430
首页是公共页

03:46.430 --> 03:48.430
当然不一定只有首页

03:48.430 --> 03:50.430
还有可能有很多其他页面

03:50.430 --> 03:51.430
还有受保护的页面

03:51.430 --> 03:52.430
就是必须要授权

03:52.430 --> 03:54.430
当我们直接访问登录页之后

03:54.430 --> 03:55.430
完成登录

03:55.430 --> 03:56.430
当然登录错误的话

03:56.430 --> 03:57.430
就不挑吧

03:57.430 --> 03:58.430
就抱错

03:58.430 --> 03:59.430
如果说完成登录

03:59.430 --> 04:01.430
他就跑到首页去

04:01.430 --> 04:03.430
跑到其中一个公共页去

04:03.430 --> 04:05.430
我们就说

04:05.430 --> 04:07.430
跑到其中一个公共页去

04:07.430 --> 04:09.430
如果说

04:09.430 --> 04:11.430
我们访问直接去访问

04:11.430 --> 04:13.430
受保护的页面没有授权

04:13.430 --> 04:14.430
如果已经授权了

04:14.430 --> 04:15.430
那就直接访问

04:15.430 --> 04:16.430
如果说没有授权的话

04:16.430 --> 04:18.430
他就挑回到登录页

04:18.430 --> 04:19.430
而登录页

04:19.430 --> 04:20.430
这个时候再完成登录的话

04:20.430 --> 04:21.430
他又挑转回

04:21.430 --> 04:23.430
之前你访问的页面

04:23.430 --> 04:26.430
我们要完成这么一个功能

04:26.430 --> 04:28.430
要完成这样的功能的话

04:28.430 --> 04:29.430
我们首先把页面

04:29.430 --> 04:31.430
给他写出来

04:31.430 --> 04:33.430
当然我这里就简单的

04:33.430 --> 04:34.430
写几个页面就行了

04:34.430 --> 04:36.430
一个是logging

04:36.430 --> 04:38.430
这是一个登录页

04:38.430 --> 04:40.430
RFC

04:40.430 --> 04:41.430
登录页

04:41.430 --> 04:44.430
登录页里面就写上一个啥呢

04:44.430 --> 04:46.430
我都懒得写账号密码了

04:46.430 --> 04:48.430
因为什么账号密码错误

04:48.430 --> 04:50.430
这些东西跟我有啥关系的

04:50.430 --> 04:51.430
对不对

04:51.430 --> 04:53.430
跟我们目前讲的东西没啥关系

04:53.430 --> 04:55.430
我就直接写个按钮德了

04:55.430 --> 04:59.430
这是一个登录授权

04:59.430 --> 05:01.430
登录授权页

05:01.430 --> 05:03.430
直接写个按钮德了

05:03.430 --> 05:06.430
就登录

05:06.430 --> 05:08.430
一点了过后来登录成功

05:08.430 --> 05:11.430
该页面只做测试

05:11.430 --> 05:14.430
该页面仅做测试

05:14.430 --> 05:18.430
点击下方按钮

05:18.430 --> 05:21.430
计登录成功

05:21.430 --> 05:22.430
目前的什么事件

05:22.430 --> 05:23.430
我们先暂时不着急些

05:23.430 --> 05:25.430
先把页面给他做出来

05:25.430 --> 05:28.430
然后再建一个首页

05:28.430 --> 05:29.430
Welcome

05:29.430 --> 05:32.430
或者是Home.js

05:32.430 --> 05:34.430
首页

05:34.430 --> 05:38.430
这里就是首页

05:38.430 --> 05:42.430
现在我们再建一个授权

05:42.430 --> 05:44.430
就是一个私有页面

05:44.430 --> 05:49.430
这个页面需要授权之后才能访问

05:49.430 --> 05:52.430
比如说个人中心

05:52.430 --> 05:54.430
Personal

05:54.430 --> 05:55.430
RFC

05:55.430 --> 05:57.430
这是一个个人中心页面

05:57.430 --> 06:00.430
个人中心

06:00.430 --> 06:03.430
如果你看到该页面

06:03.430 --> 06:07.430
说明你已经完成了授权

06:07.430 --> 06:10.430
完成了登录

06:10.430 --> 06:12.430
就这么三个组建

06:12.430 --> 06:13.430
好 写好了之后

06:13.430 --> 06:16.430
我们在App里边把导入进来

06:16.430 --> 06:17.430
当然他们有不同的路径

06:17.430 --> 06:18.430
用不同的路进去访问

06:18.430 --> 06:19.430
我们先不说什么授权

06:19.430 --> 06:20.430
不授权

06:20.430 --> 06:22.430
我们先把它做成一个个的路由

06:22.430 --> 06:24.430
它有不同的路进去访问

06:24.430 --> 06:26.430
好 这里我们先导入

06:26.430 --> 06:30.430
导入React

06:30.430 --> 06:32.430
Rotor

06:32.430 --> 06:34.430
然后这里 Browser Rotor

06:34.430 --> 06:35.430
Rotor

06:35.430 --> 06:38.430
然后这里是

06:41.430 --> 06:44.430
然后这里是

06:44.430 --> 06:45.430
Rotor

06:45.430 --> 06:47.430
然后后边还有那些

06:47.430 --> 06:49.430
还有Rot

06:49.430 --> 06:52.430
还有Switch

06:53.430 --> 06:55.430
差不多了

06:55.430 --> 06:57.430
那么这里App这里

06:57.430 --> 06:59.430
我们首先显示一个导航

06:59.430 --> 07:01.430
显示一个导航

07:01.430 --> 07:03.430
Ul 或者是Nav

07:03.430 --> 07:04.430
Nav元素

07:04.430 --> 07:06.430
里边我们就写

07:06.430 --> 07:08.430
还是用Ul 换个航

07:09.430 --> 07:11.430
我们这里写上几个Li

07:11.430 --> 07:13.430
乘行3

07:13.430 --> 07:15.430
里边有一些link

07:15.430 --> 07:17.430
能进行导航

07:17.430 --> 07:18.430
或者用lap

07:18.430 --> 07:20.430
随便吧 就用link 得了

07:20.430 --> 07:21.430
link

07:21.430 --> 07:23.430
link元素里边的第一个就是

07:23.430 --> 07:25.430
首页

07:25.430 --> 07:27.430
首页粒粒到哪儿去了

07:27.430 --> 07:29.430
首页粒粒到哪儿去了

07:29.430 --> 07:30.430
首页粒粒到就是

07:30.430 --> 07:32.430
鞋杠 就根木路

07:32.430 --> 07:33.430
就是首页

07:33.430 --> 07:35.430
这是这个

07:35.430 --> 07:37.430
这里呢

07:37.430 --> 07:39.430
这里是登陆页

07:39.430 --> 07:40.430
登陆页

07:40.430 --> 07:42.430
鞋杠

07:42.430 --> 07:43.430
登陆页

07:43.430 --> 07:44.430
好 再来

07:44.430 --> 07:46.430
然后是

07:46.430 --> 07:48.430
个人中心

07:48.430 --> 07:50.430
这个东西必须要授权之后才能访问

07:51.430 --> 07:52.430
比方说

07:52.430 --> 07:53.430
列到这个地址

07:53.430 --> 07:55.430
这里是三个的

07:55.430 --> 07:56.430
链接

07:56.430 --> 07:58.430
下面就是页面的总区

07:58.430 --> 08:00.430
主区里边

08:00.430 --> 08:02.430
它要根据不同的路由

08:02.430 --> 08:04.430
来显示不同的组件

08:04.430 --> 08:06.430
主区要根据不同的路由

08:06.430 --> 08:08.430
显示不同的组件

08:08.430 --> 08:10.430
这里就直接是

08:10.430 --> 08:12.430
用router

08:12.430 --> 08:14.430
整个包起来

08:14.430 --> 08:18.510
router

08:18.510 --> 08:20.510
整个包起来

08:22.510 --> 08:23.510
router呢

08:23.510 --> 08:25.510
这里边我们使用

08:25.510 --> 08:27.510
route来进行匹配

08:27.510 --> 08:29.510
来吧

08:29.510 --> 08:30.510
首先

08:30.510 --> 08:32.510
route

08:32.510 --> 08:33.510
首页

08:33.510 --> 08:34.510
首先登陆页

08:34.510 --> 08:36.510
首先让匹配登陆页

08:36.510 --> 08:37.510
因为登陆页

08:37.510 --> 08:38.510
登陆页

08:38.510 --> 08:39.510
你看一下

08:39.510 --> 08:41.510
能够匹配这个地址

08:41.510 --> 08:42.510
能够匹配这个地址

08:42.510 --> 08:43.510
是不是就一定能够匹配它

08:43.510 --> 08:44.510
对不对

08:44.510 --> 08:45.510
为了避免

08:45.510 --> 08:47.510
我们把尽量特殊的

08:47.510 --> 08:49.510
尽量把特殊的前边

08:49.510 --> 08:50.510
输入一起

08:50.510 --> 08:52.510
只能匹配一个

08:52.510 --> 08:54.510
输入一起只能匹配一个

08:54.510 --> 08:56.510
要么来匹配登陆

08:56.510 --> 08:57.510
pass

08:57.510 --> 08:58.510
楼影

08:58.510 --> 08:59.510
匹配登陆

08:59.510 --> 09:01.510
那么调整到component

09:01.510 --> 09:02.510
哪个component呢

09:02.510 --> 09:03.510
哪个呢

09:03.510 --> 09:04.510
使用input

09:04.510 --> 09:05.510
导入进来

09:05.510 --> 09:07.510
导入到

09:07.510 --> 09:09.510
home

09:09.510 --> 09:10.510
把全部导入进来

09:10.510 --> 09:11.510
from

09:11.510 --> 09:13.510
叫home

09:13.510 --> 09:15.510
复制

09:15.510 --> 09:17.510
多了

09:17.510 --> 09:19.510
这里是

09:19.510 --> 09:21.510
parcel

09:21.510 --> 09:23.510
parcel

09:23.510 --> 09:25.510
这里是login

09:25.510 --> 09:27.510
login

09:27.510 --> 09:28.510
OK

09:28.510 --> 09:29.510
那么这里呢

09:29.510 --> 09:30.510
我们就直接写上

09:30.510 --> 09:31.510
login

09:31.510 --> 09:32.510
这是

09:32.510 --> 09:33.510
登陆页

09:33.510 --> 09:34.510
然后

09:34.510 --> 09:35.510
首页

09:35.510 --> 09:36.510
home

09:36.510 --> 09:37.510
首页就是直接

09:37.510 --> 09:38.510
各种中心

09:38.510 --> 09:39.510
parcel

09:39.510 --> 09:43.140
parcel

09:43.140 --> 09:44.140
好

09:44.140 --> 09:45.140
然后是首页

09:45.140 --> 09:46.140
然后再匹配首页

09:46.140 --> 09:48.140
首页是

09:49.140 --> 09:50.140
就写完了

09:50.140 --> 09:52.140
这个组件结构就写

09:52.140 --> 09:54.140
这个组件就写出来了

09:54.140 --> 09:55.140
咱们看一下

09:55.140 --> 09:56.140
保存

09:56.140 --> 09:57.140
当然现在呢

09:57.140 --> 09:58.140
没有

09:58.140 --> 09:59.140
没有就是

09:59.140 --> 10:01.140
做任何的

10:01.140 --> 10:02.140
授权处理

10:02.140 --> 10:03.140
没有做这些事情

10:03.140 --> 10:04.140
我们只是把

10:04.140 --> 10:05.140
界面感显示出来

10:05.140 --> 10:06.140
要start

10:06.140 --> 10:07.140
看一下吧

10:24.100 --> 10:25.100
看着

10:25.100 --> 10:26.100
这里是不是有导航

10:26.100 --> 10:27.100
对吧

10:27.100 --> 10:28.100
有导航

10:28.100 --> 10:29.100
首页

10:29.100 --> 10:30.100
登陆页

10:30.100 --> 10:31.100
个人中心

10:31.100 --> 10:32.100
个人中心怎么

10:32.100 --> 10:33.100
为什么显示首页呢

10:34.100 --> 10:35.100
个人中心

10:35.100 --> 10:36.100
为什么显示首页呢

10:37.100 --> 10:39.100
parcel

10:39.100 --> 10:40.100
parcel

10:40.100 --> 10:41.100
对

10:41.100 --> 10:42.100
个人中心

10:43.100 --> 10:44.100
怎么跑去

10:44.100 --> 10:45.100
显示首页去了

10:45.100 --> 10:46.100
看一下

10:46.100 --> 10:47.100
到底怎么回事

10:47.100 --> 10:48.100
个人中心

10:48.100 --> 10:50.100
他连接到的地址

10:50.100 --> 10:51.100
是这个地址

10:51.100 --> 10:52.100
这个地址呢

10:52.100 --> 10:54.100
他匹配的时候呢

10:54.100 --> 10:55.100
从上往上

10:55.100 --> 10:56.100
从上往下匹配

10:57.100 --> 10:58.100
然后匹配到他

10:58.100 --> 10:59.100
不能匹配

10:59.100 --> 11:00.100
他

11:00.100 --> 11:01.100
这里写错了

11:02.100 --> 11:03.100
parcel

11:04.100 --> 11:05.100
加了个s

11:06.100 --> 11:07.100
parcel

11:07.100 --> 11:08.100
这样子

11:08.100 --> 11:10.100
因为他访问的地址

11:10.100 --> 11:11.100
发现前两个都不能匹配

11:11.100 --> 11:13.100
但是下面不是精确匹配

11:13.100 --> 11:15.100
所以说匹配到下面的

11:15.100 --> 11:16.100
保存

11:16.100 --> 11:17.100
看一下

11:18.100 --> 11:19.100
那么现在呢

11:19.100 --> 11:20.100
到个人中心

11:20.100 --> 11:21.100
你看

11:21.100 --> 11:22.100
可以看到了

11:23.100 --> 11:24.100
没问题

11:24.100 --> 11:26.100
这是这一块写出来了

11:26.100 --> 11:28.100
那么接下来

11:28.100 --> 11:29.100
我要来完成授权

11:31.100 --> 11:33.100
那么到底有没有授权

11:33.100 --> 11:34.100
比方说

11:34.100 --> 11:35.100
我们登陆叶

11:35.100 --> 11:36.100
登陆成功之后

11:36.100 --> 11:38.100
是不是要完成授权

11:38.100 --> 11:39.100
做个标识

11:39.100 --> 11:41.100
对一个东西做一个标识

11:41.100 --> 11:42.100
表示我登陆成功了

11:43.100 --> 11:44.100
另外呢

11:44.100 --> 11:46.100
我们就是

11:46.100 --> 11:48.100
一会到这个页面

11:48.100 --> 11:49.100
是不是要判断

11:49.100 --> 11:50.100
你有没有登陆成功

11:50.100 --> 11:51.100
对不对

11:51.100 --> 11:52.100
是不是要判断

11:52.100 --> 11:53.100
你有没有登陆成功

11:53.100 --> 11:54.100
好

11:54.100 --> 11:55.100
那么像这些事情的

11:55.100 --> 11:56.100
都涉及到

11:56.100 --> 11:58.100
要操作同一个数据

11:58.100 --> 11:59.100
就是有一个数据

11:59.100 --> 12:01.100
它们是共同的数据

12:02.100 --> 12:03.100
就是有一个数据

12:03.100 --> 12:04.100
是共同的

12:04.100 --> 12:06.100
就是授权信息

12:06.100 --> 12:08.100
就到底有没有授权

12:08.100 --> 12:09.100
这些信息

12:09.100 --> 12:10.100
是不是公有的

12:10.100 --> 12:12.100
那么这些公有的数据

12:12.100 --> 12:13.100
我们可以怎么办

12:13.100 --> 12:14.100
以后你们学了

12:14.100 --> 12:15.100
Redux之后

12:15.100 --> 12:16.100
你们可以用

12:16.100 --> 12:17.100
Redux来处理

12:18.100 --> 12:19.100
如果说你现在

12:19.100 --> 12:20.100
还没有学Redux

12:20.100 --> 12:21.100
非常非常简单

12:21.100 --> 12:22.100
简单的物得了

12:22.100 --> 12:23.100
你就写个对象

12:23.100 --> 12:24.100
就完成

12:24.100 --> 12:25.100
你就新建个文件

12:25.100 --> 12:27.100
导出一个对象就完成了

12:27.100 --> 12:28.100
就是

12:29.100 --> 12:31.100
logininfo

12:31.100 --> 12:32.100
logininfo

12:33.100 --> 12:34.100
这个不是逐渐

12:34.100 --> 12:36.100
我们把小写

12:36.100 --> 12:37.100
这不是逐渐

12:37.100 --> 12:39.100
它就是一个对象

12:39.100 --> 12:40.100
因为我们知道

12:40.100 --> 12:42.100
模块导出的对象

12:42.100 --> 12:44.100
因为模块还有缓存

12:44.100 --> 12:45.100
它导出的对象

12:45.100 --> 12:47.100
会被各个模块

12:47.100 --> 12:48.100
所反复使用

12:48.100 --> 12:49.100
使用的是同一个对象

12:49.100 --> 12:51.100
所以我们直接导出

12:51.100 --> 12:52.100
就完成了

12:52.100 --> 12:53.100
导出了

12:53.100 --> 12:54.100
导出一个对象

12:54.100 --> 12:55.100
这个对象里边

12:55.100 --> 12:56.100
记录了

12:56.100 --> 12:57.100
islogin

12:57.100 --> 12:58.100
是否登录

12:58.100 --> 13:00.100
默认为force

13:00.100 --> 13:01.100
表示没有登录

13:01.100 --> 13:02.100
是否登录

13:02.100 --> 13:03.100
表示没有登录

13:03.100 --> 13:04.100
当然你还可以记录

13:04.100 --> 13:05.100
当前登录了

13:05.100 --> 13:06.100
账号

13:06.100 --> 13:07.100
当前登录了密码

13:07.100 --> 13:08.100
当前登录了用户对象

13:08.100 --> 13:09.100
都可以记录

13:09.100 --> 13:10.100
都可以记录

13:10.100 --> 13:12.100
把它放到一个对象里边

13:12.100 --> 13:13.100
然后我们

13:13.100 --> 13:14.100
当然也可以把它放在

13:14.100 --> 13:15.100
商商文里边

13:15.100 --> 13:16.100
都行

13:16.100 --> 13:17.100
以后我们学了Redux之后

13:17.100 --> 13:18.100
这个东西

13:18.100 --> 13:19.100
实际上放到

13:19.100 --> 13:20.100
放在的

13:20.100 --> 13:22.100
数据仓户里边了

13:22.100 --> 13:23.100
我们再写一些方法

13:24.100 --> 13:25.100
为了方便处理

13:25.100 --> 13:26.100
我们再写一些方法

13:26.100 --> 13:27.100
login

13:27.100 --> 13:28.100
几个login方法

13:28.100 --> 13:30.100
我也不要张号密码

13:30.100 --> 13:31.100
因为只是做测试

13:31.100 --> 13:33.100
login方法就很简单

13:33.100 --> 13:34.100
就是this

13:34.100 --> 13:35.100
意思

13:35.100 --> 13:36.100
login

13:36.100 --> 13:38.100
把设为去就完成了

13:38.100 --> 13:39.100
就这么简单

13:39.100 --> 13:41.100
超级超级简单

13:41.100 --> 13:43.100
然后login out

13:43.100 --> 13:45.100
当然如果以后要

13:45.100 --> 13:46.100
丰富这一块的功能的话

13:46.100 --> 13:47.100
那当然可以去

13:47.100 --> 13:48.100
感一下这些代码

13:48.100 --> 13:50.100
大概的结构就这样子

13:50.100 --> 13:51.100
this

13:51.100 --> 13:52.100
因为我们现在呢

13:52.100 --> 13:54.100
没有学习那个Redux

13:54.100 --> 13:55.100
所以说呢

13:55.100 --> 13:56.100
只能用这种方式在做

13:56.100 --> 13:57.100
输为force

13:57.100 --> 13:58.100
就完了

13:58.100 --> 13:59.100
就完了

13:59.100 --> 14:00.100
或者我写这两个方法

14:00.100 --> 14:01.100
算了吧

14:01.100 --> 14:02.100
写这样的方法

14:02.100 --> 14:03.100
当然不写也行

14:03.100 --> 14:05.100
直接到导书对象就完事了

14:05.100 --> 14:06.100
也很简单

14:06.100 --> 14:07.100
也很简单

14:08.100 --> 14:10.100
登录的时候

14:10.100 --> 14:11.100
我干嘛呢

14:11.100 --> 14:12.100
登录的时候

14:12.100 --> 14:13.100
要干嘛呢

14:13.100 --> 14:14.100
登录的时候

14:14.100 --> 14:15.100
我很简单

14:15.100 --> 14:16.100
unclick

14:17.100 --> 14:19.100
我们先把这个功能搞定

14:19.100 --> 14:20.100
登录的时候

14:20.100 --> 14:21.100
这个功能是不是登录之后

14:21.100 --> 14:22.100
如果没有

14:22.100 --> 14:24.100
如果没有特别情况的话

14:24.100 --> 14:25.100
我们挑战到首页对吧

14:25.100 --> 14:27.100
所以说登录之后很简单

14:27.100 --> 14:29.100
好我们这里怎么做呢

14:29.100 --> 14:30.100
登录之后

14:30.100 --> 14:31.100
我们找了一个对象

14:31.100 --> 14:33.100
因为是同一个对象嘛

14:33.100 --> 14:34.100
我们把导书进来

14:34.100 --> 14:35.100
logininfo

14:35.100 --> 14:36.100
from

14:36.100 --> 14:38.100
logininfo

14:38.100 --> 14:39.100
导书进来

14:39.100 --> 14:40.100
我们要干嘛呢

14:40.100 --> 14:41.100
我们就是logininfo

14:41.100 --> 14:42.100
login

14:42.100 --> 14:43.100
调一个login方法

14:43.100 --> 14:44.100
登录

14:44.100 --> 14:46.100
登录完成之后

14:46.100 --> 14:47.100
当然你可以

14:47.100 --> 14:49.100
当然你可以把它写成一步的

14:49.100 --> 14:50.100
这个东西我不用说了吧

14:50.100 --> 14:51.100
你自己去写就完事了

14:51.100 --> 14:52.100
你把它写成一步的

14:52.100 --> 14:54.100
因为登录的可能要跟服戏之

14:54.100 --> 14:56.100
肯定要跟服戏之间进行交互

14:56.100 --> 14:57.100
所以说呢

14:57.100 --> 14:58.100
你得

14:58.100 --> 15:00.100
写个一步的看一下

15:00.100 --> 15:02.100
看一下就是有没有登录成功

15:04.100 --> 15:05.100
那么这里无所谓

15:05.100 --> 15:07.100
我们这里自己去处理

15:07.100 --> 15:09.100
这里登录完成之后

15:09.100 --> 15:11.100
完成之后是不是要跳转了

15:11.100 --> 15:12.100
我们这里利用

15:12.100 --> 15:13.100
probs里边

15:14.100 --> 15:15.100
因为这是页面嘛

15:15.100 --> 15:16.100
probs里边

15:16.100 --> 15:17.100
使用

15:17.100 --> 15:18.100
history

15:18.100 --> 15:19.100
pooh

15:19.100 --> 15:20.100
跳转

15:20.100 --> 15:21.100
跳转了

15:21.100 --> 15:22.100
是不是首页

15:22.100 --> 15:23.100
我们目前只搞定

15:23.100 --> 15:24.100
跳转到首页的情况

15:26.100 --> 15:27.100
好

15:27.100 --> 15:28.100
保存

15:28.100 --> 15:29.100
保存

15:29.100 --> 15:30.100
看一下

15:30.100 --> 15:31.100
登录页

15:32.100 --> 15:33.100
点击登录

15:33.100 --> 15:35.100
你看是不是跳到首页了

15:35.100 --> 15:36.100
要登录成功了

15:36.100 --> 15:38.100
因为我这里没有做什么提示

15:38.100 --> 15:39.100
啥都没弄

15:39.100 --> 15:40.100
就做简单一点

15:40.100 --> 15:41.100
就这么个意思

15:41.100 --> 15:43.100
因为我终点的问题都不在这

15:43.100 --> 15:45.100
就算当了以后

15:46.100 --> 15:47.100
就算当了以后

15:47.100 --> 15:49.100
以后我们会做一个完整的

15:49.100 --> 15:50.100
真实的登录功了

15:50.100 --> 15:52.100
现在我们就大概这样吧

15:53.100 --> 15:54.100
好

15:54.100 --> 15:55.100
现在我们看到这个页面

15:55.100 --> 15:56.100
这才是重点

15:57.100 --> 15:58.100
这个页面

15:58.100 --> 15:59.100
它是要等到

15:59.100 --> 16:00.100
授权之后

16:00.100 --> 16:02.100
就是完成了授权

16:02.100 --> 16:03.100
你才能访问

16:04.100 --> 16:06.100
关键是我怎么来写个代码呢

16:07.100 --> 16:09.100
我能不能在这个函数里边

16:09.100 --> 16:10.100
利用什么生命周期

16:10.100 --> 16:11.100
或者是

16:11.100 --> 16:12.100
什么副作用函数

16:12.100 --> 16:13.100
副作用函数

16:13.100 --> 16:15.100
Use Effect Hook

16:15.100 --> 16:17.100
利用这些副作用函数

16:17.100 --> 16:19.100
能不能在这里边去判断

16:19.100 --> 16:20.100
到底有没有登录成功呢

16:21.100 --> 16:22.100
当然可以

16:22.100 --> 16:23.100
你可以这样去做

16:23.100 --> 16:25.100
但是这样做并不好

16:25.100 --> 16:27.100
为什么这样做不好呢

16:27.100 --> 16:28.100
是因为

16:29.100 --> 16:30.100
在这

16:30.100 --> 16:31.100
我们现在的

16:31.100 --> 16:33.100
受保护的页面

16:33.100 --> 16:35.100
就这个受保护的页面了

16:35.100 --> 16:36.100
它不只一个

16:36.100 --> 16:37.100
它有可能有很多个

16:37.100 --> 16:38.100
我们网站里边

16:38.100 --> 16:40.100
可能有很多的受保护的页面

16:40.100 --> 16:42.100
你不能只考虑一个页面

16:42.100 --> 16:43.100
那如果说你一个页面

16:43.100 --> 16:44.100
起了很多代码

16:44.100 --> 16:45.100
去搞定这件事情

16:46.100 --> 16:47.100
那么其他页面怎么办呢

16:47.100 --> 16:48.100
其他页面怎么处理呢

16:48.100 --> 16:50.100
是不是要写同样的代码

16:50.100 --> 16:52.100
就会造成很多的重复代码

16:53.100 --> 16:54.100
那么说到这呢

16:54.100 --> 16:55.100
就是很多的同学

16:55.100 --> 16:56.100
应该想到

16:56.100 --> 16:57.100
我们以前按照以前学过的知识

16:57.100 --> 16:58.100
应该用啥

16:58.100 --> 17:00.100
所以应该可以用高阶主见了

17:00.100 --> 17:01.100
对吧

17:01.100 --> 17:02.100
用高阶主见

17:02.100 --> 17:03.100
或者是用一些自定义的Hook

17:03.100 --> 17:05.100
来解决这些问题

17:05.100 --> 17:06.100
然后呢

17:06.100 --> 17:07.100
我们这节课呢

17:08.100 --> 17:09.100
学习另外一种方式

17:09.100 --> 17:11.100
一种更好的方式

17:11.100 --> 17:12.100
来解决这个问题

17:12.100 --> 17:15.100
就是自定义一个路由

17:16.100 --> 17:17.100
路由是不是主见

17:17.100 --> 17:18.100
我们这里写的这个什么

17:18.100 --> 17:20.100
ROAD这些东西是不是主见

17:20.100 --> 17:21.100
对吧

17:21.100 --> 17:22.100
这些都是主见

17:22.100 --> 17:23.100
它根据不同的地址

17:23.100 --> 17:24.100
然后呢

17:24.100 --> 17:25.100
来

17:25.100 --> 17:27.100
显示展示不同的主见

17:27.100 --> 17:28.100
对不对

17:28.100 --> 17:30.100
这里就是一个主见ROAD

17:30.100 --> 17:31.100
那么我们现在写一个

17:31.100 --> 17:33.100
自定义的主见ROAD

17:33.100 --> 17:34.100
好

17:34.100 --> 17:35.100
我们这里新建一个

17:35.100 --> 17:36.100
写一个叫做

17:36.100 --> 17:38.100
给它取个名字叫做Protected

17:38.100 --> 17:40.100
表示受保护的

17:40.100 --> 17:42.100
ROAD.js

17:42.100 --> 17:43.100
我们写上这么一个主见

17:43.100 --> 17:44.100
刚写的还是主见吗

17:44.100 --> 17:45.100
还是主见

17:46.100 --> 17:48.100
那一会我们使用的时候

17:48.100 --> 17:49.100
怎么使用呢

17:49.100 --> 17:50.100
你看着

17:50.100 --> 17:51.100
我们一会就可以这样子使用

17:51.100 --> 17:52.100
我们先说怎么来用

17:52.100 --> 17:53.100
Protected

17:53.100 --> 17:55.100
ROAD

17:55.100 --> 17:56.100
from

17:56.100 --> 17:57.100
Protected

17:57.100 --> 17:58.100
ROAD

17:58.100 --> 17:59.100
我们到时候就这样子

17:59.100 --> 18:00.100
哇

18:00.100 --> 18:01.100
这个地方

18:01.100 --> 18:02.100
你不是受保护吗

18:02.100 --> 18:03.100
对不对

18:03.100 --> 18:04.100
你这个要

18:04.100 --> 18:05.100
授权之后才能访问

18:05.100 --> 18:06.100
OK

18:06.100 --> 18:07.100
我把它变成Protected

18:07.100 --> 18:08.100
ROAD.js

18:08.100 --> 18:09.100
完了没了

18:09.100 --> 18:10.100
它的用法跟ROAD.js

18:10.100 --> 18:11.100
完全一模一样

18:11.100 --> 18:13.100
一点区别都没有

18:13.100 --> 18:14.100
跟这个ROAD.js

18:14.100 --> 18:15.100
用法完全一样

18:15.100 --> 18:17.100
没有任何区别

18:17.100 --> 18:18.100
唯一的区别就是

18:18.100 --> 18:19.100
把这个主见名字

18:19.100 --> 18:20.100
改成Protected.js

18:20.100 --> 18:22.100
我们就要实现这样的功能

18:22.100 --> 18:23.100
也就是说

18:23.100 --> 18:24.100
当我们只要实现了

18:24.100 --> 18:25.100
只要使用这样的路由

18:25.100 --> 18:26.100
它就会进行判断

18:26.100 --> 18:28.100
进行验证

18:28.100 --> 18:29.100
如果说

18:29.100 --> 18:31.100
如果说你

18:31.100 --> 18:33.100
返回的

18:33.100 --> 18:34.100
对

18:34.100 --> 18:35.100
如果说你现在没有登录

18:35.100 --> 18:37.100
我就给你挑转到登录页

18:37.100 --> 18:39.100
如果说你已经登录了

18:39.100 --> 18:40.100
OK

18:40.100 --> 18:41.100
我就给你正常的去

18:41.100 --> 18:42.100
显示这个主见

18:42.100 --> 18:43.100
对吧

18:43.100 --> 18:44.100
我叫做这么一件事

18:44.100 --> 18:45.100
好

18:45.100 --> 18:46.100
那么这样子注意

18:46.100 --> 18:47.100
这是我们自己

18:47.100 --> 18:48.100
定义的一个主见

18:48.100 --> 18:50.100
不要看它名字叫做ROAD

18:50.100 --> 18:51.100
它跟ROAD.js

18:51.100 --> 18:52.100
没有任何关系

18:52.100 --> 18:53.100
它可以叫ABC的主见

18:53.100 --> 18:54.100
可以叫任何名字

18:54.100 --> 18:55.100
好

18:55.100 --> 18:56.100
那么这是我们自己写的主见

18:56.100 --> 18:57.100
那这个主见里边

18:57.100 --> 18:58.100
怎么操作呢

18:58.100 --> 18:59.100
怎么操作呢

18:59.100 --> 19:00.100
一看着

19:00.100 --> 19:01.100
我这里呢

19:01.100 --> 19:03.100
给大家介绍一个

19:04.100 --> 19:07.100
之前我们没有讲到的一个知识

19:07.100 --> 19:08.100
这个知识

19:08.100 --> 19:09.100
我们之前没有讲到

19:09.100 --> 19:10.100
我们先把东西放这

19:10.100 --> 19:11.100
放这吧

19:11.100 --> 19:12.100
什么知识

19:12.100 --> 19:14.100
我们先打个注释

19:14.100 --> 19:15.100
有个知识

19:15.100 --> 19:17.100
是ROAD里边还有个属性

19:17.100 --> 19:18.100
我们当时没有讲到

19:18.100 --> 19:20.100
因为之前也用不到这个东西

19:20.100 --> 19:21.100
什么属性

19:21.100 --> 19:22.100
比方说PASS

19:22.100 --> 19:23.100
PASS

19:23.100 --> 19:25.100
我们随便写个Personal

19:25.100 --> 19:27.100
叫做Render属性

19:27.100 --> 19:28.100
这个Render属性

19:28.100 --> 19:29.100
就跟我们之前

19:29.100 --> 19:32.100
学的React里面的RenderProps

19:32.100 --> 19:34.100
就是展示属性

19:34.100 --> 19:36.100
是完全一致的

19:36.100 --> 19:37.100
完全一致的

19:37.100 --> 19:38.100
就是说

19:38.100 --> 19:39.100
我们之前写的都是什么

19:39.100 --> 19:41.100
匹配到路径

19:41.100 --> 19:42.100
匹配到路径去

19:42.100 --> 19:44.100
去渲染某一个主见

19:44.100 --> 19:45.100
对吧

19:45.100 --> 19:46.100
去渲染某一个主见

19:46.100 --> 19:47.100
有的时候

19:47.100 --> 19:48.100
我们可能

19:48.100 --> 19:50.100
情况稍微复杂一点

19:50.100 --> 19:51.100
就是

19:51.100 --> 19:52.100
当我匹配到一个

19:52.100 --> 19:54.100
匹配到一个路径的时候

19:54.100 --> 19:56.100
我要去运行一个函数

19:56.100 --> 19:57.100
什么函数

19:57.100 --> 19:58.100
就是Render函数

19:58.100 --> 20:00.100
它还有这么一个函数

20:00.100 --> 20:01.100
这个函数

20:01.100 --> 20:03.100
比方说我们这里

20:03.100 --> 20:04.100
这个函数

20:04.100 --> 20:06.100
需要返回一个结果

20:06.100 --> 20:07.100
返回什么结果

20:07.100 --> 20:09.100
返回一个主见

20:09.100 --> 20:11.100
就是返回一个元素

20:11.100 --> 20:12.100
返回一个可选的东西

20:12.100 --> 20:14.100
比方说返回一个ABC

20:14.100 --> 20:15.100
看着

20:15.100 --> 20:16.100
保存

20:16.100 --> 20:17.100
那么接下来

20:17.100 --> 20:19.100
它匹配到个人的东西过后

20:19.100 --> 20:21.100
它就显示一个支付串ABC

20:21.100 --> 20:23.100
就是返回一个

20:23.100 --> 20:24.100
节点

20:24.100 --> 20:25.100
可以生成React节点的东西

20:25.100 --> 20:27.100
当然也可以返回一个AQ元素

20:27.100 --> 20:28.100
你想返回什么

20:28.100 --> 20:29.100
返回什么

20:29.100 --> 20:30.100
对吧

20:30.100 --> 20:32.100
这就是Render这个属性

20:32.100 --> 20:34.100
保存

20:34.100 --> 20:35.100
你看

20:35.100 --> 20:36.100
各种东西它就返回这个东西了

20:36.100 --> 20:38.100
非常简单

20:38.100 --> 20:39.100
那么这个Render

20:39.100 --> 20:40.100
我们之前还学过

20:40.100 --> 20:41.100
Rose还有切尔准

20:41.100 --> 20:43.100
切尔准它也可以是个函数

20:43.100 --> 20:45.100
Render和切尔准的区别在哪呢

20:45.100 --> 20:47.100
我打个注释说一下

20:47.100 --> 20:51.100
就是Render和切尔准

20:51.100 --> 20:53.100
因为切尔准它也可以是个函数

20:53.100 --> 20:54.100
的区别

20:54.100 --> 20:57.100
在于Render是匹配

20:57.100 --> 20:59.100
都才能显示

20:59.100 --> 21:01.100
才会运行

21:03.100 --> 21:05.100
切尔准

21:05.100 --> 21:07.100
无论是否匹配

21:07.100 --> 21:09.100
都会运行

21:09.100 --> 21:11.100
都会运行

21:11.100 --> 21:13.100
是这么回事

21:13.100 --> 21:15.100
Render是匹配之后才会运行

21:15.100 --> 21:17.100
切尔准是无论是否匹配都会运行

21:17.100 --> 21:18.100
就这个区别

21:18.100 --> 21:20.100
切尔准我们相对来说用的少一点

21:20.100 --> 21:22.100
Render用的相对来说

21:22.100 --> 21:23.100
稍微多一点

21:23.100 --> 21:24.100
就是有的时候

21:24.100 --> 21:26.100
你可能要展示什么组件

21:26.100 --> 21:27.100
经过一个判断

21:27.100 --> 21:28.100
需要经过一个处理

21:28.100 --> 21:29.100
OK

21:29.100 --> 21:30.100
那么这个时候

21:30.100 --> 21:31.100
你可以使用Render

21:31.100 --> 21:33.100
你不是直接显示某个组件

21:33.100 --> 21:34.100
它可能要经过一个处理

21:34.100 --> 21:35.100
一个函数来处理

21:35.100 --> 21:37.100
那么你可以使用Render

21:37.100 --> 21:38.100
明白我的意思吗

21:38.100 --> 21:41.100
我们介绍一下这个属性

21:41.100 --> 21:43.100
那么了解这个属性过后

21:43.100 --> 21:44.100
还有这个

21:44.100 --> 21:46.100
Render里面它有个参数

21:46.100 --> 21:47.100
它有参数

21:47.100 --> 21:48.100
它会把什么传给你呢

21:48.100 --> 21:51.100
它会把上下文的对象传给你

21:51.100 --> 21:53.100
有上下文的一边的数据传给你

21:53.100 --> 21:54.100
比如说

21:54.100 --> 21:56.100
可以通过在这里面输出

21:56.100 --> 21:58.100
输出什么Values

21:58.100 --> 21:59.100
看一下啊

21:59.100 --> 22:00.100
保存

22:00.100 --> 22:01.100
右键检查

22:01.100 --> 22:02.100
控制台

22:02.100 --> 22:03.100
你看一下

22:03.100 --> 22:04.100
得到Objects

22:04.100 --> 22:05.100
History Location

22:05.100 --> 22:06.100
March对吧

22:06.100 --> 22:07.100
March

22:07.100 --> 22:08.100
对不对

22:08.100 --> 22:09.100
这三个属性都给你了

22:09.100 --> 22:10.100
对不对

22:10.100 --> 22:11.100
OK

22:11.100 --> 22:12.100
那么这里呢

22:12.100 --> 22:13.100
它会把上下文的这些东西

22:13.100 --> 22:15.100
全部都给你

22:15.100 --> 22:16.100
好

22:16.100 --> 22:17.100
当然你要用的话就用

22:17.100 --> 22:18.100
不用的话就算了

22:18.100 --> 22:19.100
好

22:19.100 --> 22:21.100
都是关于这个Render

22:21.100 --> 22:22.100
好

22:22.100 --> 22:23.100
那么接下来

22:23.100 --> 22:25.100
我们现在搞定这个主键

22:25.100 --> 22:26.100
这个主键

22:26.100 --> 22:27.100
我把这些信息全部告诉你

22:27.100 --> 22:29.100
它的用法跟Root是完全一样的

22:29.100 --> 22:30.100
好

22:30.100 --> 22:31.100
那么到这个主键里面来

22:31.100 --> 22:32.100
到这个主键里面来

22:32.100 --> 22:33.100
我们干嘛呢

22:33.100 --> 22:34.100
它不是给我了很多属性吗

22:34.100 --> 22:35.100
对不对

22:35.100 --> 22:36.100
给我了很多属性

22:36.100 --> 22:37.100
好

22:37.100 --> 22:38.100
这个主键里面干嘛呢

22:38.100 --> 22:39.100
我这样子来

22:39.100 --> 22:40.100
返回这个东西

22:40.100 --> 22:42.100
我给它包装一下

22:42.100 --> 22:43.100
返回的是一个啥呢

22:43.100 --> 22:45.100
返回的是一个Root

22:47.100 --> 22:49.100
返回的是一个Root

22:49.100 --> 22:51.100
from a react

22:51.100 --> 22:52.100
Root

22:53.100 --> 22:55.100
它返回的其实就是一个

22:55.100 --> 22:56.100
Root主键

22:56.100 --> 22:58.100
我给你包装一下

22:58.100 --> 23:00.100
这个Root主键的属性

23:00.100 --> 23:02.100
这个Root主键的属性

23:02.100 --> 23:04.100
直接把Prob's属性

23:04.100 --> 23:06.100
拿过来就完事了

23:06.100 --> 23:08.100
直接把Prob's里面的属性

23:08.100 --> 23:09.100
全部拿过来

23:09.100 --> 23:10.100
因为它的用法呢

23:10.100 --> 23:11.100
跟这个

23:11.100 --> 23:12.100
跟那个

23:12.100 --> 23:13.100
这边的用法是不是一样的

23:13.100 --> 23:14.100
那这边传令的属性

23:14.100 --> 23:15.100
是不是全部拿过来

23:15.100 --> 23:16.100
对不对

23:16.100 --> 23:17.100
全部拿过来

23:17.100 --> 23:18.100
但是呢

23:18.100 --> 23:20.100
其中不包含什么属性

23:20.100 --> 23:22.100
不包含什么

23:22.100 --> 23:23.100
Component

23:23.100 --> 23:24.100
Render

23:24.100 --> 23:25.100
这些是不包含的

23:25.100 --> 23:26.100
为什么呢

23:26.100 --> 23:27.100
如果说

23:27.100 --> 23:28.100
我们这里给它Component

23:28.100 --> 23:29.100
这个属性对吧

23:29.100 --> 23:30.100
Pass属性

23:30.100 --> 23:31.100
Component属性

23:31.100 --> 23:32.100
那么如果说

23:32.100 --> 23:33.100
我这里把Component

23:33.100 --> 23:34.100
也拿过来了

23:34.100 --> 23:35.100
那是不是不合适的

23:35.100 --> 23:36.100
那就相当于是

23:36.100 --> 23:37.100
直接选的主键了

23:37.100 --> 23:39.100
就没有经过任何判断了

23:39.100 --> 23:40.100
就这样做是不合适的

23:40.100 --> 23:41.100
因此呢

23:41.100 --> 23:42.100
我们这里

23:42.100 --> 23:43.100
这些属性

23:43.100 --> 23:44.100
这个属性里面

23:44.100 --> 23:45.100
是不能包含什么

23:45.100 --> 23:46.100
Component

23:46.100 --> 23:47.100
这个属性的

23:47.100 --> 23:49.100
是不能包含这个属性的

23:49.100 --> 23:50.100
也不能包含Render

23:50.100 --> 23:51.100
也不能包含秀卷

23:51.100 --> 23:52.100
这些要做渲染的属性

23:52.100 --> 23:53.100
都不包含

23:53.100 --> 23:54.100
都不包含

23:54.100 --> 23:55.100
所以说我们怎么办呢

23:55.100 --> 23:56.100
我们这样子来处理

23:56.100 --> 23:57.100
这个ProBus

23:57.100 --> 23:58.100
我把它解构

23:58.100 --> 23:59.100
当然也可以

23:59.100 --> 24:00.100
直接在这里解构

24:00.100 --> 24:01.100
也可以在这里解构

24:01.100 --> 24:02.100
都想在这里解构吧

24:02.100 --> 24:04.100
我们这里来解构

24:04.100 --> 24:05.100
就是

24:05.100 --> 24:06.100
解构的时候

24:06.100 --> 24:07.100
我们把Component

24:07.100 --> 24:08.100
属性解构出来

24:08.100 --> 24:09.100
解构出来

24:09.100 --> 24:10.100
然后呢

24:10.100 --> 24:11.100
给它换一个名字

24:11.100 --> 24:12.100
换一个名字

24:12.100 --> 24:13.100
换成Component

24:13.100 --> 24:14.100
大写的C嘛

24:14.100 --> 24:15.100
因为主键的名字

24:15.100 --> 24:16.100
一般大写

24:16.100 --> 24:17.100
换一个名字

24:17.100 --> 24:18.100
Component

24:18.100 --> 24:19.100
是解构出来

24:20.100 --> 24:21.100
然后呢

24:21.100 --> 24:22.100
再解构什么

24:22.100 --> 24:23.100
再解构那个

24:24.100 --> 24:26.100
拍子属性不用解构了

24:26.100 --> 24:28.100
再解构那个

24:28.100 --> 24:29.100
Q属性

24:29.100 --> 24:31.100
再解构Render属性

24:31.100 --> 24:32.100
这三个属性解构出来

24:32.100 --> 24:33.100
因为这两个属性

24:33.100 --> 24:34.100
我们是不用的

24:34.100 --> 24:35.100
是不用的

24:35.100 --> 24:36.100
然后呢

24:36.100 --> 24:37.100
在这里

24:37.100 --> 24:39.100
把剩下的属性

24:40.100 --> 24:41.100
形成一个对象

24:41.100 --> 24:42.100
就剩下的属性

24:42.100 --> 24:43.100
形成一个对象

24:43.100 --> 24:44.100
这个代码能看懂吗

24:44.100 --> 24:45.100
能看懂吗

24:45.100 --> 24:46.100
应该没问题吧

24:46.100 --> 24:47.100
这代码很好懂

24:47.100 --> 24:49.100
就把这三个解构出来

24:49.100 --> 24:50.100
除了这三个之外的

24:50.100 --> 24:51.100
其他属性

24:51.100 --> 24:52.100
形成一个对象

24:52.100 --> 24:53.100
那么我们把

24:53.100 --> 24:54.100
Racer这个对象里面的

24:54.100 --> 24:55.100
所有属性展开

24:55.100 --> 24:56.100
放到这

24:56.100 --> 24:57.100
比方说你还传到

24:57.100 --> 24:58.100
什么一个ZX

24:58.100 --> 24:59.100
那些东西

24:59.100 --> 25:00.100
乱七八糟的东西

25:00.100 --> 25:01.100
我都给你放到这

25:03.100 --> 25:04.100
接下来

25:04.100 --> 25:05.100
我们在这里

25:05.100 --> 25:06.100
写上一个Render

25:06.100 --> 25:07.100
Render函数

25:09.100 --> 25:10.100
这是参数

25:10.100 --> 25:11.100
Values参数

25:14.100 --> 25:15.100
在Render函数

25:15.100 --> 25:16.100
里边是不是可以判断了

25:16.100 --> 25:17.100
怎么来判断

25:17.100 --> 25:18.100
就判断你

25:18.100 --> 25:19.100
有没有登录

25:19.100 --> 25:20.100
我们倒入进来

25:20.100 --> 25:21.100
倒入那个

25:21.100 --> 25:23.100
locking info

25:23.100 --> 25:24.100
locking info

25:25.100 --> 25:26.100
from

25:27.100 --> 25:28.100
locking info

25:28.100 --> 25:29.100
倒入进来

25:29.100 --> 25:30.100
在这里面判断

25:30.100 --> 25:31.100
有没有登录

25:31.100 --> 25:32.100
如果说

25:32.100 --> 25:33.100
locking info

25:33.100 --> 25:34.100
is locked

25:34.100 --> 25:35.100
已经登录了

25:35.100 --> 25:36.100
是不是已经授权了

25:36.100 --> 25:41.100
可以正常展示页面

25:41.100 --> 25:42.100
是可以正常展示页面的

25:42.100 --> 25:43.100
那怎么办

25:43.100 --> 25:45.100
我就直接返回

25:46.100 --> 25:47.100
返回

25:47.100 --> 25:48.100
返回

25:49.100 --> 25:50.100
component

25:50.100 --> 25:51.100
直接返回

25:54.100 --> 25:55.100
不让我写

25:56.100 --> 25:57.100
component

25:59.100 --> 26:00.100
直接返回

26:01.100 --> 26:03.100
如果说可以正常展示页面的话

26:03.100 --> 26:04.100
我就可以直接返回

26:04.100 --> 26:05.100
这个组件就完事了

26:06.100 --> 26:08.100
l是不是没有授权

26:08.100 --> 26:09.100
没有授权

26:09.100 --> 26:10.100
是不是要跳转

26:10.100 --> 26:11.100
对不对

26:11.100 --> 26:12.100
是不是要跳转

26:12.100 --> 26:13.100
我们就跳转

26:13.100 --> 26:14.100
跳转的话返回什么

26:14.100 --> 26:15.100
返回什么东西

26:15.100 --> 26:16.100
可以跳转

26:16.100 --> 26:17.100
你不能在这里使用

26:17.100 --> 26:18.100
什么history

26:18.100 --> 26:19.100
跳转

26:19.100 --> 26:20.100
你要返回一个组件

26:20.100 --> 26:21.100
它要宣传组件

26:21.100 --> 26:22.100
什么组件可以跳转

26:22.100 --> 26:23.100
是不是刚学过的

26:23.100 --> 26:24.100
什么组件

26:24.100 --> 26:25.100
是不是readyregs

26:25.100 --> 26:26.100
对吧

26:26.100 --> 26:27.100
就是readyregs的组件

26:27.100 --> 26:29.100
专门用于跳转的

26:29.100 --> 26:30.100
我们就返回这个组件

26:30.100 --> 26:31.100
readyregs

26:31.100 --> 26:32.100
这个组件

26:32.100 --> 26:34.100
来完成跳转

26:34.100 --> 26:35.100
给它写个属性

26:35.100 --> 26:36.100
跳转到哪呢

26:36.100 --> 26:38.100
是不是跳转到固定的locking

26:38.100 --> 26:39.100
对不对

26:39.100 --> 26:40.100
跳转到这个地址

26:41.100 --> 26:42.100
保存看一下

26:42.100 --> 26:43.100
那么现在呢

26:43.100 --> 26:44.100
我们就写好的那个组件了

26:44.100 --> 26:45.100
直接把它封装一下

26:45.100 --> 26:47.100
所以说readyregs

26:47.100 --> 26:48.100
是非常灵活的

26:48.100 --> 26:49.100
它无非就是可以做一些组件

26:49.100 --> 26:50.100
你用组件的玩法

26:50.100 --> 26:51.100
怎么玩都可以

26:51.100 --> 26:53.100
那么这里我们看一下

26:53.100 --> 26:54.100
我们就这样的方式

26:54.100 --> 26:56.100
来使用这个组件了

26:56.100 --> 26:58.100
保存看一下

26:58.100 --> 27:00.100
现在我们点击

27:00.100 --> 27:02.100
个人中心

27:02.100 --> 27:03.100
点击个人中心

27:03.100 --> 27:04.100
你看就跳转到登录页了

27:04.100 --> 27:05.100
你看

27:05.100 --> 27:07.100
明明我这个个人中心的链接是personal

27:07.100 --> 27:09.100
它跳转到登录页了

27:09.100 --> 27:10.100
当然你这样子跳得太快了

27:10.100 --> 27:12.100
你中间还可以用一个过渡的页面

27:12.100 --> 27:13.100
比较说

27:13.100 --> 27:14.100
给它显示一个倒计时

27:14.100 --> 27:15.100
五秒钟之后

27:15.100 --> 27:16.100
你现在没有登录

27:16.100 --> 27:17.100
请先登录

27:17.100 --> 27:18.100
五秒钟之后

27:18.100 --> 27:19.100
跳转到登录页

27:19.100 --> 27:20.100
那么

27:20.100 --> 27:21.100
你可以写个中间页面

27:21.100 --> 27:22.100
那这里就跳转到中间页面

27:22.100 --> 27:23.100
对不对

27:23.100 --> 27:24.100
跳转到一个中间页面

27:24.100 --> 27:25.100
提示到页面

27:25.100 --> 27:26.100
然后它来跳转到登录页

27:26.100 --> 27:27.100
都行

27:27.100 --> 27:28.100
好

27:28.100 --> 27:29.100
这里呢

27:29.100 --> 27:30.100
你看

27:30.100 --> 27:31.100
点击个人中心

27:31.100 --> 27:32.100
它要进行登录授权了

27:32.100 --> 27:34.100
因为你目前是没有授权的

27:35.100 --> 27:36.100
好

27:36.100 --> 27:37.100
现在呢

27:37.100 --> 27:38.100
这个问题就搞定了

27:38.100 --> 27:39.100
对吧

27:39.100 --> 27:40.100
登录页授权之后才能访问

27:40.100 --> 27:41.100
如果没有授权的话

27:41.100 --> 27:42.100
它会跳转到登录页

27:42.100 --> 27:43.100
对吧

27:43.100 --> 27:44.100
这个问题就搞定了

27:44.100 --> 27:45.100
那么现在最后一个问题

27:46.100 --> 27:47.100
就登录页

27:47.100 --> 27:49.100
完成授权之后

27:49.100 --> 27:50.100
怎么挑回来

27:51.100 --> 27:52.100
分析是这个问题

27:52.100 --> 27:54.100
登录页完成授权之后

27:54.100 --> 27:55.100
怎么挑回来的问题

27:56.100 --> 27:57.100
那怎么来挑回来的

27:57.100 --> 27:58.100
这个登录页

27:58.100 --> 27:59.100
完成授权之后

27:59.100 --> 28:00.100
这里呢

28:00.100 --> 28:02.100
有两种做法

28:03.100 --> 28:05.100
第一种做法呢

28:05.100 --> 28:07.100
是把你当前的页面地址

28:07.100 --> 28:08.100
就是你

28:08.100 --> 28:09.100
你

28:09.100 --> 28:11.100
到一个授权页的时候

28:11.100 --> 28:13.100
你不是要挑到登录页吗

28:13.100 --> 28:15.100
因为现在问题就是登录页

28:15.100 --> 28:16.100
它不知道

28:16.100 --> 28:18.100
是怎么到登录页的

28:18.100 --> 28:19.100
它到底是从哪个页面

28:19.100 --> 28:20.100
到登录页的

28:20.100 --> 28:21.100
它不知道

28:21.100 --> 28:23.100
所以说呢

28:23.100 --> 28:24.100
你要告诉登录页

28:24.100 --> 28:25.100
我是从哪个页面

28:25.100 --> 28:26.100
挑到登录页的

28:26.100 --> 28:27.100
那么登录页

28:27.100 --> 28:28.100
完成登录之后

28:28.100 --> 28:29.100
它会挑回去

28:30.100 --> 28:31.100
那么怎么来告诉登录页

28:31.100 --> 28:32.100
我是哪个页面

28:32.100 --> 28:33.100
挑过来的呢

28:33.100 --> 28:34.100
这里有两种做法

28:34.100 --> 28:36.100
我给大家都说一下

28:36.100 --> 28:38.100
一种是比较纠的做法

28:38.100 --> 28:39.100
纠的做法呢

28:39.100 --> 28:40.100
是什么呢

28:40.100 --> 28:41.100
纠的做法就是

28:41.100 --> 28:42.100
在这里呢

28:42.100 --> 28:44.100
挑的登录页的时候呢

28:44.100 --> 28:46.100
给它写个地址男参数

28:46.100 --> 28:48.100
叫做return ui

28:48.100 --> 28:49.100
当然呢

28:49.100 --> 28:50.100
也可以用一个对象

28:50.100 --> 28:51.100
这两种的话都做一次嘛

28:51.100 --> 28:52.100
用一个对象

28:52.100 --> 28:54.100
就是passname

28:54.100 --> 28:55.100
挑转到哪呢

28:55.100 --> 28:56.100
passname

28:56.100 --> 28:57.100
挑转到

28:57.100 --> 28:59.100
挑转到

28:59.100 --> 29:00.100
locking

29:00.100 --> 29:01.100
然后呢

29:01.100 --> 29:03.100
这对象

29:04.100 --> 29:05.100
passname

29:05.100 --> 29:06.100
挑转到locking

29:06.100 --> 29:07.100
然后呢

29:07.100 --> 29:08.100
search

29:08.100 --> 29:09.100
不是可以写地址男参数吗

29:09.100 --> 29:10.100
对吧

29:10.100 --> 29:11.100
地址男参数有哪些呢

29:11.100 --> 29:12.100
就一个参数

29:12.100 --> 29:14.100
叫return url

29:14.100 --> 29:15.100
就是

29:15.100 --> 29:17.100
返回的 url 地址

29:17.100 --> 29:19.100
返回的 url 地址

29:19.100 --> 29:20.100
好

29:20.100 --> 29:21.100
返回的 url 地址里边

29:21.100 --> 29:23.100
我们拼接上什么

29:23.100 --> 29:25.100
拼接上当前

29:25.100 --> 29:27.100
当前这个values 里边

29:27.100 --> 29:29.100
不是有个东西叫做location吗

29:29.100 --> 29:31.100
当前的location的什么

29:31.100 --> 29:32.100
passname

29:33.100 --> 29:34.100
当前的location的passname

29:34.100 --> 29:35.100
把拼接上

29:35.100 --> 29:36.100
保存一下

29:36.100 --> 29:37.100
看一下

29:37.100 --> 29:38.100
你看一下

29:38.100 --> 29:39.100
现在得到的是什么

29:40.100 --> 29:41.100
点击个的东西

29:41.100 --> 29:42.100
你看一下

29:42.100 --> 29:43.100
这个地址

29:43.100 --> 29:44.100
看没

29:45.100 --> 29:46.100
这个地址

29:46.100 --> 29:47.100
那么现在呢

29:47.100 --> 29:48.100
我们挑了的路业

29:48.100 --> 29:49.100
同时给它带了一个参数过去

29:49.100 --> 29:50.100
return url

29:50.100 --> 29:51.100
这个地址

29:51.100 --> 29:52.100
对吧

29:52.100 --> 29:53.100
我们当前的路径

29:53.100 --> 29:54.100
是不是带过去了

29:54.100 --> 29:55.100
带过去的路径之后

29:55.100 --> 29:56.100
那么你这边

29:56.100 --> 29:58.100
完成登录之后

29:58.100 --> 29:59.100
你这边完成登录之后

29:59.100 --> 30:01.100
是不是就可以

30:01.100 --> 30:03.100
使用把这个参数获取到

30:03.100 --> 30:04.100
获取到这个参数

30:04.100 --> 30:05.100
然后用那个

30:05.100 --> 30:06.100
写一下

30:06.100 --> 30:07.100
写一下

30:07.100 --> 30:08.100
我看一下我这个

30:08.100 --> 30:09.100
我这个分支

30:09.100 --> 30:10.100
有没有安装那个

30:10.100 --> 30:11.100
好像没有安装

30:11.100 --> 30:13.100
没有安装那个query stream

30:13.100 --> 30:14.100
安装一下吗

30:15.100 --> 30:18.100
der add query stream

30:18.100 --> 30:19.100
安装一下

30:19.100 --> 30:20.100
那这里呢

30:20.100 --> 30:21.100
就可以导入

30:21.100 --> 30:23.100
导入 import

30:23.100 --> 30:26.100
query qs

30:26.100 --> 30:29.100
from query stream

30:29.100 --> 30:30.100
导入这个

30:30.100 --> 30:31.100
那么下面呢

30:31.100 --> 30:32.100
我们在这里

30:32.100 --> 30:33.100
那就把它写一下

30:33.100 --> 30:34.100
我文章写一下

30:34.100 --> 30:35.100
那么到底怎么来挑转呢

30:35.100 --> 30:37.100
挑转的话有点

30:37.100 --> 30:38.100
要判断一下

30:38.100 --> 30:39.100
到底这个return url

30:39.100 --> 30:40.100
是否存在

30:40.100 --> 30:41.100
是否存在

30:41.100 --> 30:42.100
好

30:42.100 --> 30:43.100
这里我们判断一下

30:44.100 --> 30:46.100
这里我们首先用 qs

30:46.100 --> 30:47.100
post

30:47.100 --> 30:48.100
把那个什么

30:48.100 --> 30:51.100
把那个location里边的

30:51.100 --> 30:52.100
sorty

30:52.100 --> 30:53.100
解析出来

30:53.100 --> 30:55.100
解析成一个对象

30:55.100 --> 30:56.100
解析成一个对象

30:56.100 --> 30:57.100
query

30:58.100 --> 30:59.100
好

30:59.100 --> 31:00.100
解析成一个对象之后

31:00.100 --> 31:01.100
让我们判断一下

31:01.100 --> 31:03.100
如果说query里边有那个

31:03.100 --> 31:04.100
return url

31:04.100 --> 31:05.100
有这个值

31:06.100 --> 31:07.100
如果说有这个值

31:07.100 --> 31:09.100
那么我们就挑转到那

31:10.100 --> 31:11.100
就挑转到这个地址

31:13.100 --> 31:15.100
如果说你没有这个值

31:15.100 --> 31:16.100
没有这个值

31:16.100 --> 31:18.100
props history

31:18.100 --> 31:20.100
我们就挑转到首页

31:20.100 --> 31:21.100
你看一下

31:21.100 --> 31:22.100
判断一下就搞定了

31:23.100 --> 31:24.100
保存

31:25.100 --> 31:26.100
没什么好说的

31:26.100 --> 31:27.100
如果你直接进了登录页

31:27.100 --> 31:28.100
你看没有这个地址

31:28.100 --> 31:29.100
没有这个return url

31:29.100 --> 31:30.100
那么点击登录

31:30.100 --> 31:31.100
是不是就挑了首页了

31:31.100 --> 31:33.100
如果你是个人中心

31:33.100 --> 31:35.100
你现在已经完成登录了

31:35.100 --> 31:36.100
现在已经完成登录了

31:36.100 --> 31:37.100
好

31:37.100 --> 31:38.100
我们重新刷新一下

31:39.100 --> 31:40.100
重新刷新一下

31:41.100 --> 31:42.100
没启动

31:42.100 --> 31:43.100
没启动

31:43.100 --> 31:44.100
要start

31:44.100 --> 31:46.100
它用的是之前的一个版本

31:47.100 --> 31:48.100
启动一下

32:00.660 --> 32:01.660
稍等一下

32:03.660 --> 32:04.660
那么现在

32:04.660 --> 32:05.660
登录页

32:05.660 --> 32:06.660
第一次登录成功之后

32:06.660 --> 32:07.660
你看是不是到首页了

32:07.660 --> 32:08.660
登录页中心就可以显示了

32:08.660 --> 32:09.660
已经完成登录了

32:10.660 --> 32:11.660
然后刷新

32:11.660 --> 32:12.660
现在我们直接进登录页中心

32:12.660 --> 32:14.660
那么现在要进登录项全页

32:14.660 --> 32:16.660
那里看是不是有个地址

32:16.660 --> 32:17.660
return url

32:17.660 --> 32:18.660
那么现在我们点登录

32:18.660 --> 32:20.660
是不是直接挑到登录页中心了

32:20.660 --> 32:22.660
因为他把return url

32:22.660 --> 32:23.660
参数读出来了

32:23.660 --> 32:24.660
他就知道该怎么去挑转

32:24.660 --> 32:25.660
他就不会挑到首页了

32:25.660 --> 32:27.660
那么这个问题是不是也搞定了

32:27.660 --> 32:28.660
出选之后挑回

32:28.660 --> 32:29.660
也搞定了

32:29.660 --> 32:30.660
就这么个意思

32:30.660 --> 32:32.660
这是一种旧的做法

32:32.660 --> 32:33.660
因为以前

32:33.660 --> 32:35.660
没有history API

32:35.660 --> 32:36.660
没有history API

32:36.660 --> 32:37.660
它只能这样做

32:37.660 --> 32:38.660
把这个信息

32:38.660 --> 32:39.660
附在地址栏里边

32:39.660 --> 32:41.660
那么现在有另外一种做法

32:41.660 --> 32:43.660
洋冻做法都行

32:43.660 --> 32:45.660
你要说兼容性的话

32:45.660 --> 32:46.660
当然也不存在兼容性

32:46.660 --> 32:48.660
react还会搞定这些问题

32:48.660 --> 32:50.660
也不存在兼容性

32:51.660 --> 32:52.660
那看随便你

32:52.660 --> 32:53.660
随便你

32:53.660 --> 32:54.660
如果说你要把

32:55.660 --> 32:57.660
登录的信息

32:58.660 --> 32:59.660
当然我们这里

32:59.660 --> 33:00.660
登录一刷新就没了

33:00.660 --> 33:01.660
一刷新没了

33:01.660 --> 33:02.660
因为我们做的不是真实的登录

33:03.660 --> 33:05.660
如果说你要把登录的信息

33:05.660 --> 33:06.660
放到地址栏

33:06.660 --> 33:07.660
所有人都可以看得见

33:07.660 --> 33:08.660
而且可以分享地址

33:08.660 --> 33:09.660
分享地址过后了

33:09.660 --> 33:10.660
你点击过后了

33:10.660 --> 33:11.660
登录过后了

33:11.660 --> 33:13.660
可以跳转到地址里面

33:13.660 --> 33:14.660
参数里面的址

33:14.660 --> 33:15.660
都尽的话

33:15.660 --> 33:16.660
那么你就把它放到地址栏里边

33:17.660 --> 33:18.660
另外一种就是

33:18.660 --> 33:19.660
如果说你在地址栏里边

33:19.660 --> 33:20.660
不要出现这个地址

33:20.660 --> 33:21.660
我把它隐藏掉

33:21.660 --> 33:22.660
不希望我们把

33:22.660 --> 33:23.660
我要跳转的地址

33:23.660 --> 33:24.660
出现在地址栏

33:24.660 --> 33:26.660
那么你可以使用另外一种做法

33:26.660 --> 33:27.660
另外一种做法

33:27.660 --> 33:28.660
我说一下

33:28.660 --> 33:29.660
第二种做法

33:31.660 --> 33:33.660
第二种做法是这样子

33:33.660 --> 33:34.660
return

33:34.660 --> 33:35.660
return

33:37.660 --> 33:39.660
为什么不让我这样子写呢

33:42.550 --> 33:43.550
还是写一个to

33:43.550 --> 33:45.550
它还是一个对象

33:45.550 --> 33:46.550
还是一个对象

33:47.550 --> 33:48.550
这个对象里边

33:48.550 --> 33:49.550
passnet

33:49.550 --> 33:50.550
还是login

33:50.550 --> 33:51.550
但是这一次

33:51.550 --> 33:53.550
我不再使用search了

33:53.550 --> 33:54.550
但是是不是使用hash呢

33:54.550 --> 33:55.550
hash没有区别

33:55.550 --> 33:56.550
hash的话

33:56.550 --> 33:58.550
还不是在地址栏里边

33:58.550 --> 33:59.550
我们这里使用stat

34:00.550 --> 34:01.550
stat

34:01.550 --> 34:02.550
这个stat是不是

34:02.550 --> 34:04.550
我们之前说过的

34:04.550 --> 34:06.550
它是用hash API的话

34:06.550 --> 34:08.550
它是保存在

34:08.550 --> 34:10.550
保存在一个状态里边

34:10.550 --> 34:12.550
一个附加信息里边的

34:12.550 --> 34:13.550
那么这个附加信息

34:13.550 --> 34:14.550
可以是个对象

34:14.550 --> 34:15.550
可以是任何东西

34:15.550 --> 34:16.550
当然它可以是个制服串

34:16.550 --> 34:17.550
那么可以保存什么

34:17.550 --> 34:19.550
保存location

34:19.550 --> 34:20.550
总之要保存起来

34:20.550 --> 34:21.550
passnet

34:21.550 --> 34:22.550
就可以保存进来

34:22.550 --> 34:23.550
把stat保存进来

34:23.550 --> 34:24.550
那么跳转到登录页的时候

34:24.550 --> 34:26.550
它就会把这个附加信息

34:26.550 --> 34:27.550
带过去

34:27.550 --> 34:28.550
带到那个页面

34:28.550 --> 34:29.550
好

34:29.550 --> 34:30.550
那么这边来

34:30.550 --> 34:31.550
到这边来

34:31.550 --> 34:33.550
这边要获取这个信息

34:33.550 --> 34:34.550
不用这种方式

34:34.550 --> 34:35.550
对不对

34:35.550 --> 34:36.550
用另外一种方式

34:36.550 --> 34:37.550
就可以

34:37.550 --> 34:38.550
用stat的方式

34:38.550 --> 34:40.550
如果说

34:40.550 --> 34:41.550
probs

34:41.550 --> 34:44.550
里边的location

34:44.550 --> 34:45.550
stat

34:45.550 --> 34:46.550
对吧

34:46.550 --> 34:47.550
如果有值

34:47.550 --> 34:48.550
那我们怎么跳转

34:48.550 --> 34:49.550
就跳转到这个值

34:49.550 --> 34:50.550
我们之前说过的

34:50.550 --> 34:51.550
就是stat

34:51.550 --> 34:53.550
跳转到这个值

34:53.550 --> 34:54.550
好 else

34:54.550 --> 34:56.550
就跳转到

34:56.550 --> 34:58.550
跳转到手页

34:58.550 --> 34:59.550
好

34:59.550 --> 35:00.550
保存

35:00.550 --> 35:01.550
看一下

35:01.550 --> 35:02.550
现在我们点手页

35:02.550 --> 35:03.550
个人中心

35:03.550 --> 35:04.550
这里已经发生登录了

35:04.550 --> 35:05.550
刷新意思

35:05.550 --> 35:06.550
手页

35:06.550 --> 35:07.550
个人中心

35:07.550 --> 35:09.550
这里跳转的时候

35:09.550 --> 35:10.550
没有带过来

35:10.550 --> 35:11.550
对

35:11.550 --> 35:12.550
是不在地址里面

35:12.550 --> 35:13.550
对吧

35:13.550 --> 35:14.550
肯定不在地址里面

35:14.550 --> 35:15.550
我还看地址

35:15.550 --> 35:16.550
但是我们现在看一下

35:16.550 --> 35:17.550
右键检查

35:17.550 --> 35:18.550
那么我们看一下

35:18.550 --> 35:19.550
现在的history

35:19.550 --> 35:20.550
因为我们现在

35:20.550 --> 35:21.550
用的history API

35:21.550 --> 35:22.550
history里面

35:22.550 --> 35:23.550
是不是有带到一个stat

35:23.550 --> 35:24.550
stat里面

35:24.550 --> 35:25.550
是不是一个personal

35:25.550 --> 35:26.550
对不对

35:26.550 --> 35:27.550
这个东西

35:27.550 --> 35:28.550
我们都不用管

35:28.550 --> 35:29.550
它会帮你处理

35:29.550 --> 35:30.550
然后我们点击登录的时候

35:30.550 --> 35:31.550
从location里面

35:31.550 --> 35:32.550
达到这个stat

35:32.550 --> 35:33.550
对不对

35:33.550 --> 35:34.550
达到这个stat

35:34.550 --> 35:35.550
然后点击登录

35:35.550 --> 35:36.550
回到个人中心

35:36.550 --> 35:37.550
对不对

35:37.550 --> 35:39.550
回到个人中心

35:39.550 --> 35:40.550
就这么个意思

35:40.550 --> 35:41.550
就这么个意思

35:42.550 --> 35:43.550
我这里说一下

35:43.550 --> 35:44.550
说一下这个问题

35:44.550 --> 35:45.550
这个stat

35:45.550 --> 35:46.550
这个东西

35:47.550 --> 35:48.550
为什么说

35:48.550 --> 35:49.550
它放的不是history

35:49.550 --> 35:50.550
对象里面

35:50.550 --> 35:51.550
它放的是location

35:51.550 --> 35:52.550
对象里面

35:52.550 --> 35:53.550
因为这个状态信心

35:53.550 --> 35:54.550
因为我们在

35:54.550 --> 35:55.550
rex rotor里面

35:55.550 --> 35:57.550
你不一定使用的是

35:57.550 --> 35:59.550
browser rotor

35:59.550 --> 36:00.550
用的是hash rotor

36:00.550 --> 36:01.550
hash rotor也可以

36:01.550 --> 36:02.550
你不要认为

36:02.550 --> 36:03.550
hash rotor就不行

36:03.550 --> 36:04.550
hash rotor也可以

36:04.550 --> 36:05.550
我们看一下

36:05.550 --> 36:06.550
我们只把这个地方

36:06.550 --> 36:07.550
变成hash rotor

36:07.550 --> 36:08.550
你看一下

36:08.550 --> 36:09.550
刷新

36:09.550 --> 36:10.550
首页

36:10.550 --> 36:11.550
登录页

36:11.550 --> 36:12.550
个人中心

36:12.550 --> 36:13.550
个人中心

36:13.550 --> 36:14.550
点击登录

36:14.550 --> 36:16.550
是不是也会跳转过来

36:16.550 --> 36:17.550
hash rotor

36:17.550 --> 36:18.550
它也会带状态

36:18.550 --> 36:21.550
它也可以带状态的

36:21.550 --> 36:22.550
是没问题的

36:22.550 --> 36:23.550
这个地址

36:23.550 --> 36:24.550
不应该是这样子

36:24.550 --> 36:25.550
跟前面的地址没关系了

36:25.550 --> 36:26.550
它使用的是hash

36:26.550 --> 36:27.550
你看一下

36:27.550 --> 36:28.550
再看一下

36:28.550 --> 36:29.550
是不是可以跳过来

36:29.550 --> 36:30.550
对吧

36:30.550 --> 36:31.550
所以这个状态

36:31.550 --> 36:32.550
它是通用的

36:32.550 --> 36:33.550
如果你使用的是

36:33.550 --> 36:34.550
history api

36:34.550 --> 36:35.550
它是存在哪的

36:35.550 --> 36:37.550
它存到history对象里面的

36:37.550 --> 36:39.550
就是window.history对象里面的

36:39.550 --> 36:40.550
如果你使用的是

36:40.550 --> 36:41.550
hash rotor

36:41.550 --> 36:42.550
它是自保存的

36:42.550 --> 36:44.550
它是自行保存下来的

36:44.550 --> 36:46.550
你看这个

36:46.550 --> 36:47.550
好

36:47.550 --> 36:48.550
这是关于

36:48.550 --> 36:49.550
这就和我们讲的

36:49.550 --> 36:51.550
受保护的路由

36:51.550 --> 36:53.550
受保护的路由

36:53.550 --> 36:55.550
然后就没啥了

36:55.550 --> 36:56.550
就没啥了

36:56.550 --> 36:57.550
那么有了这个路由过后

36:57.550 --> 36:58.550
就是说以后的

36:58.550 --> 37:00.550
你凡是有一个页面

37:00.550 --> 37:03.550
甭管它牵套的层次有多深

37:03.550 --> 37:05.550
哪怕它是这个

37:05.550 --> 37:07.550
某个公共页面的纸页面

37:07.550 --> 37:08.550
都无所谓

37:08.550 --> 37:09.550
只要说

37:09.550 --> 37:10.550
它要必须授权

37:10.550 --> 37:11.550
如果没有授权

37:11.550 --> 37:12.550
要跳到登录页

37:12.550 --> 37:13.550
只要有这样的功能

37:13.550 --> 37:14.550
我们都可以利用它

37:14.550 --> 37:16.550
来非常轻松的完成

37:16.550 --> 37:17.550
这个路由处理

37:17.550 --> 37:18.550
那你看

37:18.550 --> 37:19.550
现在我们后边写页面的时候

37:19.550 --> 37:21.550
这些页面我们就不用去care

37:21.550 --> 37:22.550
它到底需不需要

37:22.550 --> 37:24.550
就是它到底有没有完成授权

37:24.550 --> 37:25.550
不用去care这件事情

37:25.550 --> 37:26.550
你写这个组件的时候

37:26.550 --> 37:28.550
你把它当成已经授权就行了

37:28.550 --> 37:29.550
那我们到时候

37:29.550 --> 37:30.550
配置路由的时候

37:30.550 --> 37:32.550
你把它使用这个路由来配置

37:32.550 --> 37:33.550
就完成了

37:33.550 --> 37:35.550
这就是其中一种处理方式

37:35.550 --> 37:37.550
这是我们这几课

37:37.550 --> 37:39.550
讲了这个常用的场景

