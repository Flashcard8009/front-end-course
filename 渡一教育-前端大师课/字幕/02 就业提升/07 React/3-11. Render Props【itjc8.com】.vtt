WEBVTT

00:00.690 --> 00:06.690
咱们这节课呢讲这个叫做Render Props

00:06.690 --> 00:08.690
这什么东西呢

00:08.690 --> 00:10.690
我们来举个例子吧

00:10.690 --> 00:12.690
来举个例子来说明这个问题

00:12.690 --> 00:13.690
其实这节课的东西呢

00:13.690 --> 00:17.690
它并不算是一个新的知识点

00:17.690 --> 00:22.690
它是用我们之前学习的知识来解决一些问题

00:22.690 --> 00:23.690
给大家看一下吧

00:23.690 --> 00:24.690
这么一个例子

00:24.690 --> 00:27.690
比方说呢我这里呢有这么两个组件

00:27.690 --> 00:37.690
一个组件呢叫做Moveable Panel

00:37.690 --> 00:39.690
Moveable Panel

00:39.690 --> 00:41.690
表示可以移动的一个面板

00:41.690 --> 00:43.690
这个面板呢是可以拖转可以移动的

00:43.690 --> 00:45.690
做这么一个组件啊

00:45.690 --> 00:47.690
这个组件里边就是我做的很简单啊

00:47.690 --> 00:48.690
就做的很简单

00:48.690 --> 00:51.690
就怎么老写这个东西

00:51.690 --> 00:53.690
这个面板里边呢

00:53.690 --> 00:55.690
它提供了这么一个DIV

00:55.690 --> 00:58.690
这个DIV呢是有什么样式啊

00:58.690 --> 00:59.690
有什么样式

00:59.690 --> 01:02.690
这个样式呢哪,我给它写这么一个样式吧

01:02.690 --> 01:03.690
写这么一个样式

01:03.690 --> 01:07.690
给它取叫做Stile喰想

01:07.690 --> 01:09.690
是吧咱们随便写一个

01:09.690 --> 01:11.690
说明这个问题就行了

01:11.690 --> 01:14.690
然后再导入进来啊

01:14.690 --> 01:15.690
先不着急啊

01:15.690 --> 01:17.690
先把这个问题看清楚了

01:17.690 --> 01:19.690
咱们到底要做一个什么东西出来

01:19.690 --> 01:21.690
然后呢这里面有一个那样式啊

01:21.690 --> 01:24.690
叫做 mean

01:24.690 --> 01:27.890
point point 就是这里边要记录坐标啊

01:27.890 --> 01:31.130
这个dav里边要记录坐标给他设置个样子吗啊

01:31.130 --> 01:33.170
background light blue

01:35.090 --> 01:38.330
然后呢给他设置一个宽度啊比方说

01:39.530 --> 01:40.250
500乘5半

01:42.130 --> 01:43.770
高度呢也是500个像素

01:46.410 --> 01:47.290
在那个边框吧啊

01:47.290 --> 01:51.690
border两个像素少里的行了啊行了就这样就这样吧啊

01:51.690 --> 01:53.050
咱们给他个那样子啊 point

01:54.050 --> 01:56.770
行了咱们来看一下吧啊别写别看啊

01:56.770 --> 02:00.050
在app里边我们就直接在这里加一个逐渐吧啊

02:00.050 --> 02:03.450
test test逐渐啊这个逐渐的导入性来啊

02:03.450 --> 02:06.490
导入我们的那个mover

02:07.770 --> 02:09.490
moverable panel

02:10.850 --> 02:11.410
然后from

02:12.570 --> 02:14.370
moverable panel ok啊

02:14.370 --> 02:15.490
咱们把它导入进来

02:15.490 --> 02:19.170
导入性的过程了我们这里呢就直接写个函数逐渐得了啊

02:20.130 --> 02:21.010
写个函数逐渐吧

02:21.970 --> 02:23.370
啊fc

02:24.290 --> 02:25.730
叫做test

02:26.130 --> 02:29.890
然后这里边呢我们就直接使用这个玩意啊moverable panel

02:29.890 --> 02:31.090
啊直接使用它就完事了

02:31.690 --> 02:35.450
行了啊啊咱们就把这个组件用出来啊用出来

02:36.050 --> 02:39.490
嗯然后呢在app里边把这个test呢导入进来啊

02:39.490 --> 02:43.330
test from component test

02:43.890 --> 02:45.490
这是个测试的组件

02:45.490 --> 02:48.130
test ok行了啊保存

02:48.130 --> 02:49.250
咱们看一下啊

02:50.210 --> 02:50.610
看一下

02:52.530 --> 02:54.850
这里git拜拜

02:55.730 --> 02:58.370
这里把运行出来啊这已经运行出来了啊

02:58.370 --> 02:59.330
打开浏览器就行了

03:02.690 --> 03:05.250
哎好看着啊

03:05.970 --> 03:07.490
啊现在这个组件就出来了对吧

03:07.490 --> 03:08.930
这个组件非常简单啊

03:08.930 --> 03:12.290
嗯那行吧咱们把那不要居中啊

03:12.290 --> 03:15.890
把居中吧啊行吧把居中啊margin啊0

03:16.450 --> 03:17.570
out to啊居中

03:18.450 --> 03:21.410
好这个组件里边呢是他我要干嘛呢

03:21.410 --> 03:25.890
嗯我要在这里边呢有一个小的div啊有这么一个小的div

03:25.890 --> 03:30.370
这个小的div呢他可以呢用鼠标来进行移动

03:30.370 --> 03:33.570
他跟随着鼠标移动咱们也不管什么鼠标按下去啊

03:33.570 --> 03:36.290
鼠标台协也不管这些呢啊就跟着鼠标移动就得了

03:36.290 --> 03:39.490
行了啊那咱们在这里边呢再写个小的div

03:40.530 --> 03:41.890
啊写了这么一个小的div

03:43.650 --> 03:45.810
嗯这个div里边呢我们给他一个

03:46.770 --> 03:51.010
class name或者说直接写样式嘛啊直接写个样式也行

03:51.010 --> 03:56.850
呃样式的话就是宽度啊100个像素100啊高度的话啊100

03:56.850 --> 04:01.410
然后呢背景颜色白光啊给他设置个背景颜色比方说00848C

04:02.050 --> 04:05.250
啊啊他是一个决定定位啊他是个决定定位

04:05.970 --> 04:11.730
placent absolute决定位行了啊给他写这么一个东西

04:11.970 --> 04:16.850
呃neft呢先给他暂时为你嘛啊neft0啊top 0

04:18.690 --> 04:22.450
好然后呢我们由于他决定定位了啊所以说这里复原说呢要把

04:22.450 --> 04:27.090
所谓相对定位好保存啊看一下吧啊就这么一个东西

04:27.090 --> 04:30.930
他要跟随着鼠标移动啊要跟随我们的鼠标移动

04:31.570 --> 04:34.210
好然后呢我们这里呢肯定要给这个div

04:34.370 --> 04:39.810
注册鼠标啊移动事件啊叫做arm mouse move

04:40.050 --> 04:45.170
鼠标移动事件好然后呢这个事件里面我们绑定一个函数啊绑定一个函数

04:45.170 --> 04:47.170
什么函数呢我们就用那个

04:48.690 --> 04:52.370
handle handle mouse move

04:52.930 --> 04:56.610
当鼠标移动的时候他一个处理函数啊有一个事件参数意

04:57.250 --> 05:01.490
然后这个函数这个事件执行的时候呢咱们干嘛呢

05:01.650 --> 05:08.130
我们把这个鼠标的位置啊保存到状态里边我这里有个状态啊状态里边呢有一个x啊

05:08.130 --> 05:12.530
就是横坐标啊默认为0重坐标呢默认为0

05:13.330 --> 05:18.290
好然后呢鼠标移动的时候我们干嘛呢我们要把这个鼠标啊在这个

05:18.290 --> 05:24.450
元素上边的偏一亮啊偏一亮那算出来给x重新复制给y呢重新复制

05:24.450 --> 05:26.530
我们要做这个事啊就是更新

05:27.330 --> 05:30.930
x和y的值啊更新x y的值

05:32.450 --> 05:38.290
啊既然我们上级和学习了这个pure component对吧那么我们之后都尽量用这个啊都尽量用这个

05:39.090 --> 05:44.690
好更新x y的值啊啊怎么更新呢我们要可以通过这个e点什么 target

05:45.330 --> 05:49.890
啊不可以通过参数e啊得到什么得到那个offset

05:50.610 --> 05:56.850
offset x和什么offset y对吧把把打印出来啊通过实验参数e得到offset

05:57.490 --> 05:59.650
x和offset

06:01.090 --> 06:04.290
y好保存啊咱们来看一下啊

06:05.730 --> 06:07.170
有有

06:08.050 --> 06:11.810
哦这个地方啊这个地方没写完啊这个地方来自于这个函数

06:12.850 --> 06:18.290
保存啊看一下好我们看一下控制台啊他输出了怎么是两个undefend的呢

06:19.490 --> 06:22.130
不应该有值吗为什么是两个undefend的

06:22.690 --> 06:23.330
看一下啊

06:24.290 --> 06:29.570
啊这里我们把这个打印出来吧啊把这个实验参数e打印出来对象打印出来

06:29.730 --> 06:30.450
保存啊

06:30.930 --> 06:31.890
看一下对象啊

06:32.690 --> 06:33.970
哦明白了啊

06:34.370 --> 06:35.970
呃他这个对象啊

06:36.530 --> 06:38.610
他还不是说这是那个

06:40.450 --> 06:42.370
他还不是说那个是那个

06:43.250 --> 06:49.730
多真实的动物的事件事件对象还不是真实我们以前学习原生解释的时候不是学过了

06:50.450 --> 06:54.370
参数动物的事件参数e本者对吧还不是那个对象啊

06:54.690 --> 06:57.810
他这个对象还不是这个对象他是把他包装过一次的

06:58.290 --> 07:01.730
啊是不太一样的啊你看这个poto看这个东西明白了啊

07:02.290 --> 07:03.250
他不是这个对象

07:04.130 --> 07:05.330
他把他包装了一次

07:05.730 --> 07:12.290
说他这里边应该是没有给你设置那个offset x啊他没有给你设置这个东西

07:12.930 --> 07:18.850
呃那行吧啊那行其实也无所谓我们可以他里边至少有那个啊至少有配截x嘛

07:19.170 --> 07:22.450
配截x和配截y对吧我们可以把配截x啊

07:23.170 --> 07:25.810
配截x和配截y打印出来

07:26.610 --> 07:30.210
啊把这样打印出来啊这样这这应该有吧啊

07:30.690 --> 07:34.370
就是他离页面左边的距离啊离页面左边的距离

07:34.770 --> 07:42.210
然后呢我们再减去减去什么了减去这个div本身啊减去这个div本身离

07:42.610 --> 07:43.970
页面左边的距离

07:44.610 --> 07:47.490
没问题吧啊咱们再减去这个div本身

07:47.730 --> 07:54.210
离页面左边的距离啊那么我们这里呢可以找到这个div啊找到这个事件员事件员是什么呢

07:54.450 --> 07:58.370
我们就可以通过啊rave来获取对吧可以通过rave来获取

07:58.930 --> 08:04.850
这我们以前学习过的知识因为我们要这里啊得到div本身的东西对吧跟动物对象相关的东西

08:04.930 --> 08:07.730
所以说那我们这里可以把div这本身的这个啊

08:08.450 --> 08:11.170
呃离左边的距离获取到

08:11.970 --> 08:17.570
呃学到这呢有些朋友可能有疑问啊就是说那我这里能不能直接使用target呢

08:17.810 --> 08:22.050
能不能在这里用这个动物元素用这个真实的动物元素来获取他的位置呢

08:22.450 --> 08:22.770
呃

08:23.570 --> 08:27.890
实际上是不行的啊因为为什么呢因为一会呢我们鼠标可能在这上面移动

08:28.130 --> 08:34.290
那么一会呢你的一点target或者是他的啊或者是他的位置了啊所以说这样子呢

08:34.690 --> 08:38.850
呃不是很好啊不是很好呃因此呢我们

08:39.810 --> 08:44.850
最好是能够获取啊不要我我现在要干嘛啊谁说我要干嘛

08:45.170 --> 08:49.890
我要做的我要得到的是鼠标位置是这个相对于这个div的鼠标位置

08:50.210 --> 08:54.290
啊我要得到的鼠标位置是相对于他的啊相对于这个div的鼠标位置

08:54.530 --> 08:59.090
不要在这个位置啊这个位置的话应该是100×100啊鼠标我们现在鼠标的位置

09:00.130 --> 09:05.170
应该应该是100×100那么现在呢比较的横坐标横坐标的话我们要得到啊

09:05.570 --> 09:10.770
这一部分鼠标的就你屏幕左边的距离剪去什么了剪去这个div

09:11.410 --> 09:14.210
左边的屏幕的距离啊我们要得到这个东西

09:14.610 --> 09:17.330
原来明白我的意思吗啊我要得到这个东西

09:17.330 --> 09:20.130
所以说我必须要剪这个div的屏幕的左边的距离

09:20.130 --> 09:22.610
因此我不能用时间远啊不能用时间远

09:22.610 --> 09:25.730
因为有一会呢说不准说不准我的鼠标就跑到他上面移动了

09:25.730 --> 09:32.210
跑到他上面移动的时候那一点一点target呢得到就是他的啊就是这个动物元素了

09:32.210 --> 09:35.010
啊那肯定是不准确的啊那么我们这里呢

09:35.090 --> 09:37.810
必须要得到这个div啊他的位置

09:37.810 --> 09:39.810
因此呢我们这里给他加上一个Rift啊

09:39.810 --> 09:42.450
Rift的话我们这里写这么一个嘛

09:43.810 --> 09:44.610
div rift

09:45.730 --> 09:46.130
呃

09:47.010 --> 09:50.610
就写一个函数或者就不给他创建一个对象啊rekt

09:52.370 --> 09:54.450
crazy什么啊Rift

09:55.170 --> 09:56.210
啊创建这么一个对象

09:57.170 --> 10:00.130
行了啊那咱们把这个div rift给他啊

10:00.690 --> 10:03.170
给他之后呢那么这里呢我们就可以通过什么

10:03.250 --> 10:04.770
z是div rift

10:04.770 --> 10:05.810
第二什么corrent

10:05.810 --> 10:07.810
是不是来获取这个div的动物对象

10:07.810 --> 10:11.890
但这个动物对象里面有一个方法叫做get bound

10:11.890 --> 10:13.090
rekt

10:13.090 --> 10:14.850
写对没有啊这个方法

10:14.850 --> 10:16.050
反正你记得自己尝穿啊

10:16.850 --> 10:18.610
就是得到他的一个举行区域

10:19.650 --> 10:21.410
啊叫做get bound

10:22.210 --> 10:23.170
client rekt

10:24.450 --> 10:25.410
这个方法啊

10:26.050 --> 10:29.090
好那么现在呢我们调用这个方法啊得到一个举行区域

10:29.970 --> 10:30.850
rekt

10:30.930 --> 10:33.890
那么这个举行区域里边还有提供了两个值啊

10:33.890 --> 10:35.090
我们把这个打印出来嘛

10:35.090 --> 10:37.890
把这个对象打印出来啊这个不打印了

10:37.890 --> 10:38.370
保存

10:38.930 --> 10:39.570
你看一下啊

10:41.090 --> 10:41.970
水白一动的时候

10:41.970 --> 10:42.690
哎哎哎

10:42.690 --> 10:43.090
保存

10:43.730 --> 10:46.050
this div rift is not a function

10:46.770 --> 10:48.130
哎我记得是这个呀

10:48.130 --> 10:49.490
那我现在试一下嘛啊

10:49.490 --> 10:51.410
用这个智能测试啊

10:51.410 --> 10:53.010
好像也用过原生动物了啊

10:54.130 --> 10:55.410
这东西一不用就忘了

10:56.050 --> 10:59.490
get bounding啊对了嘛 bounding嘛不是 bound

11:01.410 --> 11:03.890
好再保存一下啊打印一下这个东西

11:06.640 --> 11:09.200
好一动啊你看是不是拿到了对吧

11:09.200 --> 11:12.640
拿到这个x拿到了什么y对不对啊

11:12.640 --> 11:14.800
拿到这个x拿到了y啊

11:14.800 --> 11:16.320
就是这个这个元素

11:16.320 --> 11:19.920
你页面左边的距离和你页面上边的距离啊

11:19.920 --> 11:22.640
当然这个left top值呢也是一样啊

11:22.640 --> 11:23.760
left top值

11:23.760 --> 11:25.600
我们可以用left top值

11:25.600 --> 11:28.000
left和top值啊

11:28.000 --> 11:30.240
ok 那么现在呢我们这里就得到什么

11:30.800 --> 11:31.120
left

11:32.080 --> 11:34.640
啊通过这个对象里边把解构嘛啊解构

11:35.520 --> 11:39.200
得到什么left和top值得到这个元素的left和top

11:40.400 --> 11:42.080
好然后呢我们在这里呢

11:42.080 --> 11:43.680
是不是能拿到什么1点

11:43.680 --> 11:47.280
一个就是你页面左边的距离和你页面上边的距离

11:47.280 --> 11:51.200
是鼠标里页面左边和鼠标里页面上边

11:51.200 --> 11:53.200
比方我们鼠标在这那么得到的是

11:53.200 --> 11:55.520
鼠标里页面左边的距离在这一部分

11:55.520 --> 11:57.680
和鼠标里页面上边的距离这一部分

11:57.760 --> 12:01.040
然后减去这个div本身你左边的距离和你上面的距离

12:01.040 --> 12:04.400
是不是就相对于这个div的距离了对不对

12:04.400 --> 12:06.480
ok 我们把两个相减啊两个相减

12:07.040 --> 12:08.240
好那么这里呢

12:08.240 --> 12:10.320
我们这里就重新设置状态啊

12:10.320 --> 12:12.800
set state设置状态状态里边x

12:13.920 --> 12:15.120
啊x

12:15.120 --> 12:15.360
呃

12:16.080 --> 12:20.320
我们先先拿到嘛x等于什么1点配级 x

12:20.320 --> 12:21.440
减去left

12:22.080 --> 12:25.440
啊然后y呢等于1点配级 y

12:25.440 --> 12:26.000
减去

12:28.080 --> 12:28.400
top

12:29.120 --> 12:29.920
啊把两个相减

12:30.720 --> 12:33.920
啊x y放进来啊重新设置

12:33.920 --> 12:35.440
好我们这里呢把x y输出

12:36.160 --> 12:37.760
log x y输出看一下

12:38.800 --> 12:39.280
保存

12:40.240 --> 12:41.760
当我们鼠标移动的时候你看一下

12:42.560 --> 12:43.840
是不是正确的值了

12:43.840 --> 12:44.320
对不对

12:44.320 --> 12:47.680
哎在上面就正确的值了啊就相对于这个div的正确的值

12:48.560 --> 12:51.360
好那么现在我们改变了状态之后啊

12:51.360 --> 12:53.040
咱们改变了这个状态之后

12:53.040 --> 12:55.040
那么现在呢我们在react里边

12:55.040 --> 12:57.600
我们的渲染是根据状态渲染的对吧

12:57.600 --> 13:00.640
我们希望这个div呢跟随着我们鼠标移动

13:00.640 --> 13:01.600
那怎么来移动呢

13:01.600 --> 13:03.680
那么这个left是不是就给它设置为什么

13:04.400 --> 13:05.520
z stets

13:05.520 --> 13:06.960
第二啊x

13:06.960 --> 13:08.320
当我们状态变化的时候呢

13:08.320 --> 13:10.400
它就会自动的去重新渲染

13:10.400 --> 13:11.200
重新渲染的时候呢

13:11.200 --> 13:12.960
它就会把我们的新的状态呢放进去

13:14.000 --> 13:15.280
好保存啊

13:15.280 --> 13:16.240
那你看一下

13:16.240 --> 13:18.160
那么现在这个div是不是跟着我们鼠标移动了

13:18.160 --> 13:18.800
对吧

13:18.800 --> 13:21.360
哎它就跟着我们鼠标移动了啊就这么个意思啊

13:21.360 --> 13:23.200
看呗啊跟着我们鼠标移动了

13:24.240 --> 13:24.720
没问题吧

13:25.280 --> 13:26.960
哎就是我们这一部分的做法啊

13:27.040 --> 13:27.920
跟着我们鼠标移动了

13:29.120 --> 13:31.040
当然只是在这个div范围内啊

13:31.040 --> 13:32.240
我其他就没写了啊

13:32.240 --> 13:34.000
当然你可以给它加上一个样式嘛

13:34.000 --> 13:35.600
比方说overflow还等啊

13:35.600 --> 13:38.000
一出就隐藏啊也行啊也行

13:38.720 --> 13:39.920
啊你看啊啊

13:41.040 --> 13:42.160
ok做成这么一个效果

13:42.160 --> 13:44.320
那当然如果你希望它在中间的话啊

13:44.320 --> 13:45.520
它的位置在中间的话

13:45.520 --> 13:47.520
那你这里是不是处理一下就完事了

13:47.520 --> 13:48.880
啊你这里处理一下啊

13:48.880 --> 13:50.800
比方说这里x和y呢

13:50.800 --> 13:52.240
我们给它减去一个什么

13:52.240 --> 13:54.800
x减去一个宽度的一半就是50

13:54.800 --> 13:56.560
这里减去高度的一半50

13:57.120 --> 13:58.400
对吧也也行啊

13:58.400 --> 14:00.640
总之根据鼠标当前的位置来设置就行了

14:00.640 --> 14:02.800
你看现在鼠标就在中间了啊

14:02.800 --> 14:04.560
就这么一个意思啊这么一个意思

14:05.760 --> 14:07.360
好那么写好了之后呢

14:07.360 --> 14:08.240
这个主意就写完了

14:09.440 --> 14:10.720
接下来我们再来写个组件

14:11.920 --> 14:13.360
你会发现问题所在了

14:14.080 --> 14:15.200
比方再来一个组件啊

14:15.760 --> 14:19.440
叫做show mouse point

14:20.480 --> 14:22.320
就是显示鼠标位置

14:23.040 --> 14:23.840
有这么一个组件

14:23.840 --> 14:25.520
它用来显示鼠标位置的

14:26.080 --> 14:27.600
好那么这个组件呢我们写一下

14:28.400 --> 14:30.000
你会发现这个组件呢

14:30.000 --> 14:31.440
跟这个组件呢就差不多

14:32.880 --> 14:33.840
跟这个组件是一模

14:33.840 --> 14:35.440
基本上是一模一样的啊

14:35.440 --> 14:39.920
它名字叫做show mouse point

14:39.920 --> 14:41.360
只不过呢它里边没有一次

14:41.360 --> 14:43.280
没有什么div啊没有这个东西

14:43.920 --> 14:45.280
它里边呢是什么呢

14:45.280 --> 14:47.200
就是比方说写个p元数嘛啊

14:47.200 --> 14:48.560
或者是写个h2元数

14:49.280 --> 14:50.880
就鼠标x

14:50.880 --> 14:53.520
x为多少啊显示到就行了

14:53.600 --> 14:56.320
它只做这么一件事啊显示到就行了

14:56.320 --> 14:57.680
stat.x

14:58.320 --> 14:59.200
然后呢鼠标

15:00.640 --> 15:01.200
鼠标

15:03.040 --> 15:03.840
鼠标y

15:06.320 --> 15:08.400
然后呢使用thisstat y

15:09.200 --> 15:11.120
好看一下啊这个组件

15:11.120 --> 15:13.120
我们在tester里边也把这个组件导入进了

15:13.760 --> 15:14.240
import

15:15.120 --> 15:17.520
show mouse point

15:18.160 --> 15:18.880
point from

15:20.080 --> 15:21.040
show mouse point

15:22.000 --> 15:23.600
这里使用这个组件啊

15:24.160 --> 15:25.440
show mouse point

15:26.240 --> 15:27.520
保存看一下吧

15:28.640 --> 15:30.480
那么现在呢我们有两个组件了啊

15:30.480 --> 15:31.520
这个组件里边呢

15:31.520 --> 15:32.640
这个组件里边呢

15:32.640 --> 15:34.000
你看它就是这样子啊

15:34.000 --> 15:35.360
一个移动的div

15:35.360 --> 15:36.240
那么下面这个组件呢

15:36.240 --> 15:38.080
它是用来显示鼠标位置的啊

15:38.080 --> 15:39.280
显示鼠标位置的

15:39.280 --> 15:39.760
你看看

15:41.440 --> 15:42.000
鼠标位置

15:42.960 --> 15:44.880
好那么我们可以把一个小数去掉嘛

15:44.880 --> 15:45.600
看着也挺烦的

15:46.240 --> 15:46.880
小数去掉

15:47.600 --> 15:49.520
ex的话我们把它转换成

15:50.480 --> 15:51.760
pause int

15:54.320 --> 15:55.040
小数去掉

15:57.200 --> 15:58.240
好下面呢也是

15:59.200 --> 15:59.920
转换成整数

16:02.080 --> 16:03.200
啊就是该怎么去操作

16:03.200 --> 16:04.000
你自己去操作

16:04.640 --> 16:05.600
好保存啊

16:05.600 --> 16:07.200
那么下面显示鼠标位置

16:08.000 --> 16:08.480
没问题吧

16:09.360 --> 16:09.600
哎

16:11.440 --> 16:13.040
这一块哦这一块有问题

16:13.040 --> 16:13.760
哦这一块有问题

16:13.760 --> 16:14.560
因为它出现了

16:15.040 --> 16:16.240
中向的滚动条了

16:16.240 --> 16:16.960
对吧

16:16.960 --> 16:19.120
它出现了中向的滚动条了

16:19.200 --> 16:20.080
那么这里呢

16:20.080 --> 16:21.200
我们这里处理一下

16:21.200 --> 16:21.920
处理一下

16:21.920 --> 16:23.520
不再是配级x了

16:23.520 --> 16:25.040
应该是用client x

16:25.040 --> 16:26.000
减去left

16:26.000 --> 16:27.760
用client y

16:27.760 --> 16:28.720
减去top

16:28.720 --> 16:29.680
这个client y

16:29.680 --> 16:30.480
client x呢

16:30.480 --> 16:32.080
就相对于四口的距离

16:32.080 --> 16:33.840
鼠标相对于四口的距离

16:33.840 --> 16:34.960
刚才的配级x

16:34.960 --> 16:35.760
配级y呢

16:35.760 --> 16:36.640
相对的是那个

16:37.680 --> 16:38.880
整个网页的

16:38.880 --> 16:40.400
相对于是整个网页的距离

16:40.400 --> 16:41.760
那么现在就没问题了

16:41.760 --> 16:42.480
现在没问题了

16:43.920 --> 16:45.040
好那么这边也是一样

16:45.040 --> 16:45.840
啊这边也是一样

16:46.960 --> 16:47.440
大家可以

16:48.000 --> 16:48.960
这些不是重点啊

16:49.200 --> 16:49.840
我说了半天

16:49.840 --> 16:50.960
这些东西都不是重点

16:51.680 --> 16:53.120
大家可以发现这个问题在哪了

16:53.120 --> 16:54.640
我要说的问题是啥了

16:54.640 --> 16:55.840
我要说的是这两个组件

16:55.840 --> 16:57.440
有很多的重复代码看到没

16:58.240 --> 16:58.960
像这些东西是不是

16:58.960 --> 17:00.160
全是重复代码

17:00.160 --> 17:00.640
对吧

17:00.640 --> 17:01.680
它这些网页码到了玩意儿

17:01.680 --> 17:02.640
全是重复代码

17:02.640 --> 17:04.000
它不同的是什么

17:04.000 --> 17:05.600
不同的只是渲染的时候

17:05.600 --> 17:07.200
渲染的不一样而已

17:07.200 --> 17:08.720
它的各种处理逻辑

17:08.720 --> 17:09.920
都是完全一样的

17:10.480 --> 17:11.200
你看这些

17:11.200 --> 17:13.120
只有这一部分不一样

17:13.840 --> 17:14.960
它各种处理逻辑

17:14.960 --> 17:16.080
是完全一样的

17:16.720 --> 17:18.240
那么面对这种情况

17:18.320 --> 17:19.200
该怎么来处理呢

17:20.560 --> 17:21.520
有两种办法

17:21.520 --> 17:22.080
我们说一下说一下

17:22.080 --> 17:23.200
说一下这个情况是什么

17:24.000 --> 17:24.640
有时候

17:25.280 --> 17:26.400
某些组件

17:27.360 --> 17:30.000
某些组件的各种功能

17:30.800 --> 17:33.120
其处理逻辑

17:34.240 --> 17:35.680
几乎完全相同

17:36.880 --> 17:40.400
只是显示的界面不一样

17:42.960 --> 17:44.640
那么面对这种情况

17:44.640 --> 17:45.120
你看这里

17:45.840 --> 17:47.440
你看这两个功能是完全一样的

17:47.920 --> 17:49.600
一个是可移动的DIV

17:49.600 --> 17:50.720
一个是这个玩意儿

17:50.720 --> 17:51.200
对吧

17:51.200 --> 17:52.640
它只是显示的东西不同

17:52.640 --> 17:53.120
也就是说

17:53.120 --> 17:53.920
再换句话说

17:53.920 --> 17:55.120
只是Render的时候

17:55.600 --> 17:56.640
Render的时候

17:56.640 --> 17:57.840
这里边的东西不一样

17:58.480 --> 18:00.640
那么面对这种情况下

18:00.640 --> 18:01.520
我们就可以使用

18:02.080 --> 18:03.280
这两种方式

18:03.280 --> 18:04.640
认选其一

18:04.640 --> 18:05.920
第一种方式是使用

18:08.320 --> 18:09.120
建议使用

18:09.120 --> 18:10.240
建议下面的

18:11.360 --> 18:12.320
方式

18:12.320 --> 18:13.040
认选

18:14.000 --> 18:14.960
其一

18:14.960 --> 18:15.760
来解决

18:16.720 --> 18:19.280
解决重复代码的问题

18:20.000 --> 18:21.680
其实这个解决重复代码的过程

18:21.680 --> 18:24.560
就是横切关注点

18:24.560 --> 18:26.000
是不是我们之前说过的这个东西

18:26.000 --> 18:26.800
什么时候说过的

18:27.920 --> 18:28.880
横切关注点

18:29.360 --> 18:30.800
就是你看这两个组件

18:31.280 --> 18:32.720
它们有共同的一些东西

18:32.720 --> 18:33.920
就是要得到鼠标位置

18:34.560 --> 18:36.240
拿到鼠标位置过后干嘛

18:36.240 --> 18:37.200
显示啥东西

18:37.200 --> 18:37.920
它不知道

18:37.920 --> 18:39.440
但是拿到鼠标位置

18:39.440 --> 18:41.840
监听Amos Mood的事件

18:41.840 --> 18:43.600
这些东西都是一致的

18:44.320 --> 18:45.040
那么这些

18:45.040 --> 18:46.640
我们把它单独抽离出去

18:46.640 --> 18:48.400
形成一个横切的关注点

18:48.400 --> 18:50.400
那么我们这里有两种方式

18:50.400 --> 18:52.080
一种就是使用我们

18:52.080 --> 18:54.000
这节课要学习的Render Props

18:55.040 --> 18:57.200
第二种方式就是使用HLC

18:57.200 --> 18:58.400
高阶组件

18:58.400 --> 19:00.000
这两种方式都可以解决这个问题

19:00.000 --> 19:00.720
因为高阶组件

19:00.720 --> 19:02.080
它也是用来解决

19:02.080 --> 19:03.600
横切关注点的问题

19:03.600 --> 19:05.920
这两者其实区别不大

19:05.920 --> 19:06.800
区别不大

19:06.800 --> 19:09.280
Render Props只是给你提供了

19:09.280 --> 19:10.320
一种方案而已

19:10.960 --> 19:12.160
那么什么样的方案

19:12.160 --> 19:12.960
大家看着

19:13.040 --> 19:14.560
非常非常地神奇

19:14.560 --> 19:15.200
这种方案

19:15.200 --> 19:17.520
其实没有用到任何的新知识

19:17.520 --> 19:19.360
没有用到任何的新知识

19:19.360 --> 19:20.880
它就是告诉你

19:20.880 --> 19:23.200
我现在写这么一个组件

19:23.200 --> 19:25.600
叫做Mouse

19:25.600 --> 19:26.960
Mouse

19:26.960 --> 19:27.920
你一声

19:29.440 --> 19:31.040
鼠标监听的组件

19:31.040 --> 19:34.430
这个组件的作用是

19:34.430 --> 19:35.630
把它形成一个Pure

19:35.630 --> 19:37.310
Pure Component

19:37.310 --> 19:38.430
Pure Component

19:38.430 --> 19:40.030
应该有一个

19:40.030 --> 19:41.310
R

19:41.310 --> 19:42.990
CP

19:42.990 --> 19:43.870
CP

19:43.950 --> 19:44.910
应该是这个

19:44.910 --> 19:45.950
不是

19:45.950 --> 19:46.590
不是

19:46.590 --> 19:48.670
我记得是有一个快捷键的

19:48.670 --> 19:49.950
RCP

19:49.950 --> 19:51.550
RPC

19:51.550 --> 19:53.390
这个RPC

19:53.390 --> 19:55.390
那么这个组件的作用是什么呢

19:55.390 --> 19:56.750
我给大家打算个注释

19:56.750 --> 20:01.790
该组件用于监听鼠标的变化

20:01.790 --> 20:02.910
它就在做这个事

20:02.910 --> 20:04.190
显示什么我不管

20:04.190 --> 20:05.550
我只需要你监听

20:05.550 --> 20:07.310
我只需要用来监听鼠标的变化

20:07.310 --> 20:08.510
就行了

20:08.510 --> 20:09.790
那么这里边的东西

20:09.790 --> 20:11.230
我们来把它复制一下

20:11.230 --> 20:12.270
直接粘贴过来

20:12.270 --> 20:13.470
是不是一样的

20:14.030 --> 20:15.790
是完全一样的

20:15.790 --> 20:16.990
这东西

20:16.990 --> 20:19.790
你就能用来监听鼠标的变化得了

20:19.790 --> 20:21.070
那么导入一个那样式

20:21.070 --> 20:21.790
一个那样式

20:21.790 --> 20:22.590
什么那样式呢

20:22.590 --> 20:24.830
就是style.css

20:24.830 --> 20:26.270
把css导入进来

20:26.270 --> 20:27.630
那么其他东西都一样

20:27.630 --> 20:30.350
什么你看我监听鼠标发生了变化的时候

20:30.350 --> 20:31.710
重新设置状态

20:31.710 --> 20:33.230
把这些事情做了

20:33.230 --> 20:35.310
那么要显示什么的时候

20:35.310 --> 20:36.590
我不知道

20:36.590 --> 20:38.990
我不知道要显示什么

20:38.990 --> 20:40.270
不知道要显示什么

20:40.270 --> 20:41.790
那么这个时候是不是可以利用

20:42.590 --> 20:42.910
对吧

20:42.910 --> 20:44.350
我们之前学过了什么

20:44.350 --> 20:45.150
这里显示什么

20:48.990 --> 20:50.670
把这个东西告诉我

20:50.670 --> 20:51.870
那么我在这里显示

20:52.830 --> 20:53.550
但是呢

20:53.550 --> 20:55.310
这样子会有一个问题

20:55.310 --> 20:56.350
有一个什么问题呢

20:56.350 --> 20:57.710
我给大家看一下

20:57.710 --> 20:58.910
如果你这样子写的话

20:59.870 --> 21:01.390
那么到时候用的时候呢

21:01.390 --> 21:02.270
不是很好用

21:02.990 --> 21:04.110
我们把之前的复制一下

21:04.750 --> 21:05.390
那么现在呢

21:05.390 --> 21:07.150
我们不再使用这两个组件了

21:07.150 --> 21:08.350
导入什么呢

21:08.350 --> 21:09.230
导入那个

21:12.750 --> 21:15.310
from mouse listener

21:16.030 --> 21:16.590
导入这个

21:18.110 --> 21:19.550
那么这里边呢

21:19.550 --> 21:20.590
这里边

21:20.590 --> 21:25.310
我们要给这个 mouse listener

21:25.310 --> 21:25.950
这个组件

21:28.690 --> 21:30.050
给这个组件是不是加内容

21:30.050 --> 21:30.530
对不对

21:30.530 --> 21:31.010
加内容

21:31.010 --> 21:31.810
你给它什么内容

21:31.810 --> 21:32.770
它就显示什么内容吗

21:33.490 --> 21:34.370
没问题吧

21:34.370 --> 21:35.650
我们把切尔准放到这

21:35.650 --> 21:36.690
那么这个内容

21:36.690 --> 21:38.770
它会作为属性切尔准传进过去

21:38.770 --> 21:39.490
那么这样子呢

21:39.490 --> 21:40.610
逆车里边写啥

21:40.610 --> 21:41.570
它就显示啥

21:41.570 --> 21:42.690
比方说我们这里写上

21:43.490 --> 21:44.050
鼠标

21:45.010 --> 21:45.650
横坐标

21:46.530 --> 21:48.450
横坐标是啥啥

21:48.450 --> 21:49.410
然后重坐标

21:50.290 --> 21:52.610
重坐标是啥啥

21:53.330 --> 21:54.610
问题在哪呢

21:54.610 --> 21:55.570
问题在于这里

21:55.570 --> 21:57.490
我怎么来得到这个横重坐标呢

21:58.050 --> 21:59.170
这个横重坐标是谁的

21:59.170 --> 22:00.530
是不是它里边的东西

22:00.530 --> 22:02.210
我得不到它里边的东西

22:02.210 --> 22:03.170
它里边的状态

22:03.170 --> 22:04.130
外面怎么能得到了

22:04.130 --> 22:04.690
得不到的

22:06.050 --> 22:06.850
明白这个意思吗

22:06.850 --> 22:08.130
我这里得不到这个玩意啊

22:08.130 --> 22:08.530
关键是

22:09.330 --> 22:10.610
那么这个时候怎么办呢

22:11.090 --> 22:12.610
如果你还记得

22:12.610 --> 22:15.490
我们之前学过了那个上下文的话

22:16.050 --> 22:17.650
它当时做了这么一件事

22:18.050 --> 22:20.050
上下文里边那个切尔准呢

22:20.050 --> 22:21.570
它是一个函数

22:22.130 --> 22:23.410
当时我们是怎么写的

22:23.410 --> 22:24.930
当时上下文的就是那个

22:24.930 --> 22:26.770
呃就不是一个康休门吗

22:26.770 --> 22:28.210
康休门这个组件啊

22:28.210 --> 22:29.250
react

22:29.250 --> 22:29.970
叫什么

22:29.970 --> 22:32.610
呃不是那个上下文里边一个啊

22:32.610 --> 22:34.050
有一个这么个东西啊

22:34.050 --> 22:36.530
叫做康休门还记得吗

22:36.530 --> 22:37.490
对吧这个组件

22:37.490 --> 22:38.770
这个组件里边是不是提供了一个

22:39.730 --> 22:41.410
让你写一个函数在这里

22:41.410 --> 22:43.250
它会把你的数据呢给你传过来

22:44.210 --> 22:46.850
然后把这个函数的返回结果宣传到这

22:46.850 --> 22:48.130
它会做这么一件事

22:48.130 --> 22:49.010
那么现在呢

22:49.010 --> 22:50.770
我们可以做同样的事

22:50.770 --> 22:51.650
我希望呢

22:52.530 --> 22:54.130
我这里给你写个函数

22:54.130 --> 22:55.490
有个参数啊

22:55.490 --> 22:56.850
有个参数啊

22:56.850 --> 22:57.410
mouse嘛

22:58.130 --> 22:59.250
有个参数

22:59.250 --> 23:00.370
那么你呢

23:00.370 --> 23:02.210
把这个鼠标的位置啊

23:02.210 --> 23:03.250
那个对象啊

23:03.250 --> 23:04.290
给我传过来

23:05.250 --> 23:05.890
给我传

23:05.890 --> 23:07.970
把它当成一个函数传过来

23:08.050 --> 23:09.330
作为参数传过来

23:09.330 --> 23:10.690
传过来过后呢

23:10.690 --> 23:11.490
那么我这里

23:12.130 --> 23:14.210
这个函数呢会有一个返回结果啊

23:14.210 --> 23:15.330
会有一个返回结果

23:15.330 --> 23:16.290
返回啥呢

23:16.290 --> 23:17.170
就返回一个

23:18.370 --> 23:19.250
就这么一个嘛

23:19.250 --> 23:20.290
这么一个东西嘛啊

23:20.290 --> 23:21.490
然后呢把这个放进来

23:22.450 --> 23:23.730
我要显示这个玩意

23:24.290 --> 23:25.410
那么这里是不是好写了

23:25.410 --> 23:26.610
对吧mouse.x

23:27.810 --> 23:28.770
mouse.y

23:28.770 --> 23:29.650
看一下啊

23:29.650 --> 23:31.090
这是我希望的结果

23:31.730 --> 23:33.650
我跟你传的求准呢

23:33.650 --> 23:35.570
它不是说是一个元数

23:35.570 --> 23:36.610
而是一个函数

23:37.570 --> 23:39.810
我希望给你传递一个函数

23:39.810 --> 23:40.610
然后呢

23:40.610 --> 23:41.570
你去雕用

23:41.570 --> 23:43.250
你帮我雕用一下这个函数

23:43.250 --> 23:45.170
把你的数据呢给我传过来

23:45.170 --> 23:47.170
然后我这里边给你会给你返回一个

23:47.170 --> 23:48.210
要渲染的内容

23:48.210 --> 23:49.490
你把这个内容渲染出来

23:51.010 --> 23:52.610
那么这个情况下

23:52.610 --> 23:53.650
这个边该咋写了

23:54.290 --> 23:55.490
其实这一简单

23:55.490 --> 23:57.490
你就把它当成函数掉进不完了嘛

23:57.490 --> 23:58.370
对不对

23:58.370 --> 23:59.650
你这里传的是不是函数

23:59.650 --> 24:01.010
这个玩意是不是函数

24:01.010 --> 24:02.530
传的是不是函数进来嘛

24:02.530 --> 24:04.210
那你把它当成函数掉进不完了嘛

24:04.210 --> 24:05.570
掉的时候给它一个啥

24:05.650 --> 24:07.090
给它把我们的状态给它

24:07.090 --> 24:08.370
状态里面不是有XY吗

24:08.370 --> 24:09.330
对不对

24:09.330 --> 24:10.290
把它参数给它

24:10.290 --> 24:11.730
那么这个参数是不是传到这来了

24:12.610 --> 24:13.170
好

24:13.170 --> 24:13.570
然后呢

24:13.570 --> 24:14.530
这里来雕用函数

24:14.530 --> 24:16.930
把函数的返回结果显示到这

24:16.930 --> 24:18.370
那么你看这个函数的返回结果

24:18.370 --> 24:20.050
是不是就可以选择的东西

24:20.050 --> 24:20.370
对吧

24:21.250 --> 24:21.730
就完了

24:22.450 --> 24:23.490
我就要讲这个东西

24:23.490 --> 24:24.610
我要说的就是这个东西

24:25.650 --> 24:26.210
那里看一下

24:27.010 --> 24:27.330
现在

24:28.210 --> 24:28.530
是吧

24:29.090 --> 24:30.450
是不是可以显示了

24:30.450 --> 24:32.050
但是这样子一分离过后

24:32.050 --> 24:33.330
它就变得非常灵活了

24:33.330 --> 24:34.050
你看这个组件

24:35.010 --> 24:36.850
它可以重复使用了

24:36.850 --> 24:38.850
它不仅仅是可以用在这种情况

24:38.850 --> 24:39.810
它各种情况都可以用

24:39.810 --> 24:40.450
比方说

24:40.450 --> 24:42.770
我们刚才不是写了一个mouse

24:42.770 --> 24:43.570
联系了吗

24:45.090 --> 24:45.650
联系了

24:47.650 --> 24:49.090
为什么没智能提示呢

24:49.090 --> 24:49.810
mouse联系了

24:50.850 --> 24:51.410
那么现在呢

24:51.410 --> 24:52.930
我重新选择了一个东西

24:52.930 --> 24:53.810
重新选择了一个

24:53.810 --> 24:55.090
我刚才选择的这个对吧

24:55.090 --> 24:55.570
对吧

24:55.570 --> 24:56.930
我重新选择了一个

24:56.930 --> 24:58.370
你把数标位置传给我

24:58.370 --> 24:59.170
传给我过后呢

24:59.170 --> 24:59.970
我重新选择了一个

25:03.060 --> 25:03.780
重新选择啥呢

25:04.740 --> 25:05.860
选择一个这么玩意吧

25:05.860 --> 25:07.220
我们之前不是做一个可移动的

25:07.220 --> 25:08.260
div吗

25:08.260 --> 25:08.660
对不对

25:08.660 --> 25:08.900
好

25:08.900 --> 25:09.220
OK

25:09.220 --> 25:10.180
我把这个div扔过去

25:10.660 --> 25:11.140
扔进来

25:12.020 --> 25:12.420
对吧

25:12.420 --> 25:13.300
它就非常灵活了

25:13.300 --> 25:14.740
我只要把这个显示的

25:14.740 --> 25:16.820
UIX一新的东西传给你就行了

25:16.820 --> 25:17.060
好

25:17.060 --> 25:18.180
这里是来自于什么

25:18.180 --> 25:18.660
mouse

25:18.660 --> 25:19.780
这个参数

25:19.780 --> 25:20.820
mouse.x

25:20.820 --> 25:22.100
这里来自于参数

25:22.100 --> 25:22.740
mouse.y

25:23.620 --> 25:23.940
你看

25:23.940 --> 25:24.580
这样子是不是完了

25:25.140 --> 25:25.540
保存

25:25.540 --> 25:26.100
你看一下吧

25:27.060 --> 25:27.460
你看

25:27.460 --> 25:28.340
这样子也搞定了

25:28.340 --> 25:29.140
这样子也搞定了

25:30.100 --> 25:31.540
所以说最终我们

25:31.540 --> 25:33.460
在这里的这个组件里边

25:33.540 --> 25:34.660
在这个组件里边

25:34.660 --> 25:36.500
我们只给它提供了什么

25:36.500 --> 25:38.420
只给它在这儿

25:38.420 --> 25:39.140
这个组件里边

25:39.140 --> 25:40.740
我们只用来监听数据

25:41.620 --> 25:42.740
具体怎么显示

25:42.740 --> 25:43.940
或者说哪一部分

25:43.940 --> 25:45.620
我不知道该怎么显示的话

25:45.620 --> 25:46.660
我让你传过来

25:46.660 --> 25:47.940
传一个函数进来

25:47.940 --> 25:50.580
到时候我得到了数据能给你

25:50.580 --> 25:52.180
你I怎么显示怎么显示

25:52.180 --> 25:54.660
我会把这个函数的返回结果显示到这儿

25:55.460 --> 25:55.620
好

25:55.620 --> 25:57.860
那么这边只需要去传函数就行了

25:57.860 --> 25:58.180
看了没

25:59.140 --> 26:01.620
其实这就是render props的原理

26:02.340 --> 26:03.220
你看一下

26:03.220 --> 26:04.340
它为什么叫props

26:04.900 --> 26:05.780
你看一下这里

26:06.580 --> 26:08.100
这里是children是不是props

26:08.100 --> 26:08.580
对吧

26:08.580 --> 26:10.580
children是不是属性

26:10.580 --> 26:11.140
对不对

26:11.860 --> 26:13.300
这个属性是不是用于

26:13.300 --> 26:14.100
它是一个函数

26:14.100 --> 26:15.540
它用于渲染的

26:15.540 --> 26:16.660
这就是render props

26:16.660 --> 26:18.340
render props的本质含义就是

26:19.460 --> 26:20.340
传递

26:21.140 --> 26:22.260
某个组件

26:23.780 --> 26:26.500
需要某个属性

26:27.540 --> 26:28.820
然后该属性

26:29.380 --> 26:31.140
是一个函数

26:31.940 --> 26:34.180
函数的返回值

26:34.980 --> 26:36.100
用于渲染

26:36.740 --> 26:38.740
这个函数的返回值会被用于渲染

26:38.740 --> 26:40.340
那么这个函数的参数

26:40.340 --> 26:41.620
函数的参数

26:42.180 --> 26:45.220
会传递为需要的数据

26:45.940 --> 26:47.060
那么这个组件里边

26:47.060 --> 26:48.340
它调用这个函数的时候

26:48.340 --> 26:50.340
它会把这个参数能将用的参数传给你

26:50.340 --> 26:51.860
没有任何新知识

26:51.860 --> 26:52.900
没有任何新知识

26:52.900 --> 26:54.420
这就是我们要学习的东西

26:54.420 --> 26:55.700
那么这样子你看

26:55.700 --> 26:58.020
是不是达到这个组件可以通用的目的了

26:58.740 --> 27:00.020
那里边以后

27:00.020 --> 27:01.460
你i怎么玩

27:01.460 --> 27:02.820
反正我把数标位置给你

27:02.820 --> 27:04.020
i显示啥显示啥

27:04.020 --> 27:04.980
我就不管了

27:04.980 --> 27:05.460
对吧

27:05.460 --> 27:07.860
都是利用介式本身的灵活度

27:07.860 --> 27:09.380
来做出来这么一个效果

27:10.500 --> 27:11.460
没问题吧

27:11.460 --> 27:12.900
另外当然另外一点

27:12.900 --> 27:13.460
就是说

27:13.460 --> 27:15.060
这里最好撤样子

27:15.060 --> 27:16.500
你不要再这样这样的写

27:16.500 --> 27:17.140
为什么呢

27:17.140 --> 27:17.940
因为我们之前说过

27:17.940 --> 27:19.380
这个是个纯组件

27:19.380 --> 27:21.380
这个玩意儿是个纯组件

27:21.380 --> 27:22.420
纯组件的话

27:23.460 --> 27:24.660
你这样子写的话

27:24.660 --> 27:26.500
你达不到这个纯组件的

27:26.580 --> 27:27.460
就是那种

27:28.100 --> 27:29.940
用不上那个纯组件的好处

27:29.940 --> 27:30.900
因为你这里每一次

27:30.900 --> 27:32.660
传给它的是一个新的函数

27:32.660 --> 27:33.380
所以最好了

27:33.380 --> 27:34.980
我们把它写出来

27:34.980 --> 27:36.980
handle mouse move

27:37.700 --> 27:38.660
写出来

27:38.660 --> 27:39.460
写这么一个函数

27:40.980 --> 27:42.100
大家注意一下

27:42.100 --> 27:42.660
就是注意

27:43.300 --> 27:44.500
注意纯组件

27:45.540 --> 27:49.840
纯组件的函数

27:50.640 --> 27:54.080
注意纯组件的属性

27:55.360 --> 27:55.680
就是

27:57.040 --> 27:57.920
尽量避免

27:58.400 --> 28:00.000
尽量避免每次

28:00.720 --> 28:01.760
传递的

28:01.760 --> 28:02.320
render

28:03.760 --> 28:04.880
render props

28:05.680 --> 28:06.080
props

28:06.640 --> 28:07.920
的地址不一致

28:08.560 --> 28:09.520
因为不一致的话

28:09.520 --> 28:10.880
它进行前比较的时候

28:10.880 --> 28:11.440
比较出来的

28:11.440 --> 28:12.400
它就是vforce

28:12.400 --> 28:13.840
它就认为该重新选的

28:13.840 --> 28:15.040
实际上它可能里边的数据

28:15.040 --> 28:15.840
并没有更新

28:15.840 --> 28:16.800
就是尽量避免

28:16.800 --> 28:17.680
这个地址不一致

28:18.240 --> 28:18.960
那么我们这里

28:18.960 --> 28:20.080
把handle mouse move

28:20.560 --> 28:20.880
写

28:22.080 --> 28:23.600
不是叫handle mouse move

28:23.600 --> 28:23.920
叫做

28:24.880 --> 28:26.640
render point

28:27.280 --> 28:28.000
写成个函数

28:28.560 --> 28:28.960
mouse

28:30.160 --> 28:30.560
ok

28:30.560 --> 28:31.680
我就把这个写成这个函数

28:33.780 --> 28:34.260
放过来

28:34.980 --> 28:35.300
好

28:36.820 --> 28:38.820
render point is not defend

28:40.900 --> 28:42.180
写成个函数了吗

28:42.180 --> 28:43.060
我写成个函数了

28:43.620 --> 28:44.340
把它扩起来

28:44.340 --> 28:45.300
把它变成个表达式

28:48.820 --> 28:51.060
render props is not defend

28:51.940 --> 28:52.580
哎我这里

28:54.580 --> 28:55.460
我这样了

28:55.460 --> 28:55.940
我这样

28:55.940 --> 28:57.060
这样子前呢

28:57.060 --> 28:57.860
把整个扩起来

28:58.820 --> 29:01.140
哎它为什么识别不了了

29:02.660 --> 29:04.100
哎它为什么识别不了了

29:04.100 --> 29:04.980
这是个函数

29:08.690 --> 29:10.290
哎等一下等一下

29:10.290 --> 29:11.570
蒙了蒙了蒙了

29:11.570 --> 29:12.850
这个为什么识别

29:12.850 --> 29:13.170
哦

29:14.130 --> 29:15.010
我的天呐

29:15.010 --> 29:16.290
这是个test

29:16.290 --> 29:17.570
这是个函数组件

29:17.570 --> 29:19.330
我把它当成内组件来使用了

29:20.290 --> 29:21.410
render point

29:21.410 --> 29:22.050
把它写到这吧

29:22.050 --> 29:22.610
把它写到这

29:23.330 --> 29:24.530
我说怎么回事呢

29:25.250 --> 29:25.810
然后呢

29:25.810 --> 29:26.690
这里还有一个就是

29:27.570 --> 29:29.170
render div

29:29.650 --> 29:30.050
div

29:30.450 --> 29:31.010
把它写到这

29:33.520 --> 29:34.000
啊写到这

29:35.360 --> 29:36.720
啊那么就写成两个函数了

29:36.720 --> 29:37.040
对吧

29:37.040 --> 29:38.000
render point

29:38.000 --> 29:38.720
好那么这里呢

29:38.720 --> 29:39.920
给它的函数名字叫做

29:39.920 --> 29:40.880
render point

29:40.880 --> 29:42.240
给这里的函数名字叫做

29:42.960 --> 29:44.000
render div

29:44.000 --> 29:44.400
这样子呢

29:44.400 --> 29:45.920
他们每一次就是同一个函数了

29:45.920 --> 29:47.200
啊就不会出现那个

29:48.080 --> 29:49.120
效率低的问题了

29:49.120 --> 29:50.320
导致重新宣传的问题了

29:50.960 --> 29:51.600
啊保存啊

29:52.480 --> 29:53.600
啊那么这里你看

29:53.600 --> 29:54.320
是完事了

29:54.320 --> 29:55.680
对吧啊这里也是一样

29:56.720 --> 29:58.640
啊只不过呢

29:58.640 --> 30:00.160
有一点点区别就在于

30:00.240 --> 30:01.360
render props呢

30:01.360 --> 30:03.280
传递的属性名字

30:03.280 --> 30:04.320
它不是说

30:04.320 --> 30:05.360
传递的是签讯

30:06.080 --> 30:06.880
就这个区别

30:06.880 --> 30:07.680
其他没有区别了

30:07.680 --> 30:09.040
啊没有任何区别了

30:09.040 --> 30:10.560
它传递的属性名字叫做

30:10.560 --> 30:10.960
render

30:11.680 --> 30:13.120
就完了啊就完了

30:13.120 --> 30:15.680
但是它它没有说强行要求的属性

30:15.680 --> 30:17.120
名字必须为render

30:17.120 --> 30:17.680
啊

30:17.680 --> 30:18.800
所以我们这里记一笔啊

30:19.520 --> 30:20.080
通常

30:21.360 --> 30:24.320
通常该属性的名字

30:24.320 --> 30:25.360
叫做

30:25.360 --> 30:25.920
render

30:25.920 --> 30:27.760
但是呢没有强制要求的

30:27.760 --> 30:28.480
必须是render

30:28.480 --> 30:30.320
所以说它名字叫做render props呢

30:30.320 --> 30:31.200
对不对

30:31.200 --> 30:32.240
没有强制要求的啊

30:32.240 --> 30:33.200
你爱用什么属性

30:33.200 --> 30:34.000
用什么属性

30:34.000 --> 30:35.120
无所谓的啊

30:36.560 --> 30:37.120
它只不过呢

30:37.120 --> 30:37.680
告诉你啊

30:37.680 --> 30:39.280
它用这个名字叫做render

30:39.280 --> 30:41.120
一般来说叫这个名字

30:42.400 --> 30:43.040
对吧

30:43.040 --> 30:44.400
你之前用的名字叫什么

30:44.400 --> 30:45.920
之前用的名字叫做children

30:45.920 --> 30:46.720
对不对

30:46.720 --> 30:47.920
好那么这边呢

30:47.920 --> 30:49.200
就可以用什么

30:49.200 --> 30:50.720
调用render呗对不对

30:50.720 --> 30:51.760
用什么区别呢

30:51.760 --> 30:52.880
没有任何其他的区别

30:53.520 --> 30:54.320
啊保存你看一下

30:54.320 --> 30:55.040
一样的啊

30:55.040 --> 30:55.840
完全一样的

30:55.840 --> 30:56.560
看到

30:56.560 --> 30:57.360
啊完全一样的

30:58.080 --> 30:59.840
哎这两个不一样啊

30:59.840 --> 31:00.240
这两个

31:00.960 --> 31:02.160
这些形成一样了啊

31:02.160 --> 31:02.880
render div

31:05.950 --> 31:06.430
好厉害

31:07.070 --> 31:08.190
啊是不是没有什么区别

31:08.190 --> 31:08.510
对不对

31:09.870 --> 31:10.830
好ok啊

31:10.830 --> 31:12.990
这是关于render props

31:12.990 --> 31:14.430
它可以解决这个问题啊

31:14.430 --> 31:17.470
用来解决那个横切点

31:17.470 --> 31:18.190
啊就是关

31:18.190 --> 31:19.390
横切关注点的问题

31:20.270 --> 31:22.110
那么我们之前学过hoc

31:22.910 --> 31:23.550
这个玩意呢

31:23.550 --> 31:25.550
它也可以解决这个问题啊

31:25.550 --> 31:26.990
一通常在顺便说一下啊

31:26.990 --> 31:27.790
就说有些人说

31:27.790 --> 31:29.550
那如果它没有传递怎么办

31:29.870 --> 31:30.670
如果没有传递的话

31:30.670 --> 31:31.950
你可以给默认值吗

31:31.950 --> 31:32.350
对不对

31:32.350 --> 31:33.950
可以给一个给一个默认值吗

31:33.950 --> 31:34.590
啊就是说

31:34.590 --> 31:36.590
你这里可以这样子写吧啊

31:36.590 --> 31:38.430
如果this props

31:40.350 --> 31:40.990
判断一下吧

31:40.990 --> 31:41.710
this props

31:41.710 --> 31:42.350
render

31:42.350 --> 31:43.790
有没有值啊

31:43.790 --> 31:45.310
如果有值的话啊

31:45.310 --> 31:46.350
如果有值的话

31:46.350 --> 31:47.550
那么你调用这个函数

31:47.550 --> 31:48.110
得到结果

31:48.110 --> 31:48.910
确认出来

31:48.910 --> 31:50.110
如果没有值的话啊

31:50.110 --> 31:51.150
就给它个默认值啊

31:51.150 --> 31:51.870
默认值放到这

31:52.510 --> 31:52.750
对吧

31:52.750 --> 31:53.470
你随便写啊

31:53.470 --> 31:53.870
随便写

31:53.870 --> 31:54.910
默认值可以是元素

31:54.910 --> 31:55.390
随便写

31:55.390 --> 31:56.190
三目一算符吗

31:57.710 --> 31:57.950
好

31:57.950 --> 31:59.310
那么我们再看另外一个点啊

31:59.390 --> 32:01.550
之前我们学过高阶组件

32:01.550 --> 32:03.950
那么高阶组件它本来也是用来解决这个问题的

32:03.950 --> 32:04.270
对吧

32:04.270 --> 32:04.910
横切点

32:04.910 --> 32:06.910
横切关注点的问题

32:06.910 --> 32:07.710
那么高阶组件

32:07.710 --> 32:09.390
同样可以解决这个问题啊

32:09.390 --> 32:10.030
只不过呢

32:10.030 --> 32:11.550
在这种场景下边

32:11.550 --> 32:12.590
用高阶组件的话

32:12.590 --> 32:13.390
就没有用那个

32:13.390 --> 32:14.030
render props

32:14.030 --> 32:15.470
用的那么方便了啊

32:15.470 --> 32:15.950
因为

32:15.950 --> 32:16.510
render props

32:16.510 --> 32:18.110
它就专门来宣展就是

32:18.110 --> 32:19.470
它专门来解决这个问题的

32:19.470 --> 32:22.270
就是来宣展就是那些界面不一样

32:22.270 --> 32:22.670
但是呢

32:22.670 --> 32:24.270
功能基本基本上相同

32:24.270 --> 32:25.790
它来解决这个问题的

32:25.790 --> 32:27.870
好那么hoc它解决的面更广

32:27.870 --> 32:28.750
当然它这个问题呢

32:28.830 --> 32:29.790
它也能解决

32:29.790 --> 32:30.510
那么比方说啊

32:30.510 --> 32:33.630
咱们用hoc的模式来解决一下这个问题

32:33.630 --> 32:33.950
啊

32:33.950 --> 32:34.750
貌

32:34.750 --> 32:35.550
啊

32:35.550 --> 32:36.670
wiz

32:36.670 --> 32:37.230
还记得吗

32:37.230 --> 32:38.990
我们hoc我们的一般的事情

32:38.990 --> 32:40.190
wiz开头啊

32:40.190 --> 32:40.910
wiz

32:40.910 --> 32:41.550
mouse

32:41.550 --> 32:42.110
listener

32:43.470 --> 32:43.630
啊

32:43.630 --> 32:44.510
来解决这个问题啊

32:44.510 --> 32:45.790
看一下这个东西该怎么来写

32:45.790 --> 32:46.670
我写对面的单词

32:47.470 --> 32:48.590
应该没问题啊

32:48.590 --> 32:50.910
好那么hoc就是一个高阶组件嘛

32:50.910 --> 32:51.630
对不对啊

32:51.630 --> 32:53.550
就是一个高阶组件啊

32:53.550 --> 32:54.910
然后呢这里返回啊

32:54.910 --> 32:55.550
返回一个

32:56.270 --> 32:57.550
函数就完成了啊

32:57.630 --> 32:59.310
这个函数的名字呢叫做wiz

32:59.310 --> 32:59.790
啊

32:59.790 --> 33:00.270
什么

33:00.270 --> 33:01.310
mouse

33:01.310 --> 33:01.870
listener

33:03.550 --> 33:05.470
你给我传一个组件进来

33:05.470 --> 33:06.830
你给我传一个组件进来

33:06.830 --> 33:07.470
叫comp

33:08.190 --> 33:08.350
啊

33:08.350 --> 33:09.310
你给我传进来

33:09.310 --> 33:12.110
然后呢我会把这个相应的数据呢给你

33:12.110 --> 33:12.270
啊

33:12.270 --> 33:13.310
然后你去显示

33:13.310 --> 33:14.430
哎怎么显示怎么显示

33:14.430 --> 33:15.470
跟我有什么关系

33:15.470 --> 33:16.590
啊跟我没啥关系

33:16.590 --> 33:17.630
哎咋显示咋显示

33:18.510 --> 33:18.910
好

33:18.910 --> 33:20.990
然后呢我们这里把这个是吗

33:20.990 --> 33:22.270
你给我传一个组件进来啊

33:22.990 --> 33:23.310
comp

33:24.190 --> 33:26.190
然后我给你返回一个新的组件

33:26.190 --> 33:26.910
这个组件呢

33:27.630 --> 33:28.190
是什么组件

33:28.190 --> 33:28.830
就是这个组件

33:29.790 --> 33:30.430
啊

33:30.430 --> 33:31.150
就是这个组件

33:32.750 --> 33:33.950
我给你返回这么一个组件

33:35.470 --> 33:37.230
啊不用不用导出了啊

33:37.230 --> 33:39.470
这个组件用来专门来用来监听啊

33:39.470 --> 33:40.670
监听叫mouse

33:40.670 --> 33:41.390
listener啊

33:41.390 --> 33:43.070
用来专门来用来监听那个

33:44.030 --> 33:45.230
鼠标的位置的变化

33:46.110 --> 33:46.910
pure component

33:47.470 --> 33:47.710
啊

33:47.710 --> 33:48.750
他把它放到状态里边

33:49.470 --> 33:51.550
然后呢你给我显示这个组件的时候呢

33:51.550 --> 33:52.750
我把组件放这

33:52.750 --> 33:53.870
我把你给我的组件放这

33:54.670 --> 33:54.910
啊

33:55.790 --> 33:56.830
你给我一个组件吧

33:56.910 --> 33:57.230
对吧

33:57.230 --> 33:58.030
我把这个组件放这

33:58.030 --> 33:58.110
啊

33:58.110 --> 34:00.270
当然我要把人类名导入进来啊

34:00.270 --> 34:00.670
inport

34:01.150 --> 34:02.190
叫style

34:02.190 --> 34:02.990
叫css

34:04.190 --> 34:04.510
好

34:04.510 --> 34:05.710
我把你给我的组件放这

34:06.670 --> 34:07.390
这个组件

34:07.390 --> 34:08.430
它里边有哪些属

34:08.430 --> 34:09.550
它里边的属性啊

34:09.870 --> 34:10.190
啊

34:10.830 --> 34:11.950
它里边的属性啊

34:12.510 --> 34:13.310
嗯

34:13.310 --> 34:13.950
我看一下啊

34:14.590 --> 34:14.990
嗯

34:15.870 --> 34:16.510
对啊对啊

34:16.510 --> 34:16.910
没问题

34:17.390 --> 34:17.630
啊

34:20.900 --> 34:22.420
它里边的属性啊

34:22.420 --> 34:25.140
我们一次把当前的属性展开啊

34:26.260 --> 34:26.740
哎

34:26.740 --> 34:27.300
写错了啊

34:29.380 --> 34:31.380
把当前的属性展开probs

34:31.380 --> 34:31.700
啊

34:31.700 --> 34:32.660
属性展开

34:32.660 --> 34:33.460
展开之后呢

34:33.460 --> 34:36.020
我在页外的给你一个属给你两个属性

34:36.020 --> 34:36.980
哪两个属性呢

34:36.980 --> 34:37.940
一个是x

34:37.940 --> 34:40.580
x来自于s status的x

34:40.580 --> 34:41.780
还有一个是y

34:41.780 --> 34:45.060
y来自于s status的y

34:45.060 --> 34:45.620
啊

34:45.620 --> 34:48.260
除了你传给我这个组件的属性之外

34:48.260 --> 34:50.340
你传给我这个组件的属性之外

34:50.340 --> 34:52.820
那么我还给你页外的两个属性x y

34:52.820 --> 34:54.740
那么你到时候爱怎么用怎么用

34:54.740 --> 34:54.980
啊

34:54.980 --> 34:56.260
就是个高階组件

34:56.260 --> 34:57.140
啊高階组件

34:57.140 --> 34:58.820
他就用这种方式来来玩

34:59.780 --> 35:00.500
好

35:00.500 --> 35:01.140
那么现在呢

35:01.140 --> 35:02.500
我们在这里边啊

35:02.500 --> 35:03.060
在这里边

35:03.060 --> 35:04.180
我们就可以写了啊

35:04.180 --> 35:05.220
啊

35:05.220 --> 35:06.740
用高階组件再试一次嘛

35:06.740 --> 35:06.980
啊

35:06.980 --> 35:08.340
这个把复制一下啊

35:08.340 --> 35:10.020
用高階组件来试一次

35:10.020 --> 35:10.420
啊

35:10.420 --> 35:11.060
我们这里呢

35:11.060 --> 35:12.420
就把就不是含述了啊

35:12.420 --> 35:16.660
就是组件一个叫做point

35:16.660 --> 35:17.700
啊point

35:17.700 --> 35:18.420
probs

35:18.420 --> 35:19.060
这个组件呢

35:19.060 --> 35:20.340
返回返回什么呢

35:20.340 --> 35:20.740
返回这个

35:22.580 --> 35:22.900
啊

35:22.900 --> 35:23.780
返回这个玩意儿

35:23.780 --> 35:24.900
横座边来自于哪呢

35:24.900 --> 35:26.180
probs里边的x

35:26.180 --> 35:27.700
啊probs里边的y

35:27.700 --> 35:28.100
啊

35:28.980 --> 35:29.780
这是个这个组件

35:29.780 --> 35:31.220
你要把x y传给我

35:31.220 --> 35:33.060
那么我把这个东西显示出来

35:33.060 --> 35:33.300
好

35:33.300 --> 35:34.020
另外一个组件呢

35:34.020 --> 35:34.740
就是来自于

35:35.140 --> 35:35.540
啊

35:36.340 --> 35:36.740
mov

35:37.460 --> 35:37.940
div

35:39.620 --> 35:39.780
啊

35:39.780 --> 35:40.660
那么这个div呢

35:40.660 --> 35:41.620
返回啊

35:41.620 --> 35:42.580
返回这么这么个东西

35:43.220 --> 35:44.580
是不是一样的

35:44.580 --> 35:45.460
你说是不是一样的

35:46.020 --> 35:46.180
啊

35:46.180 --> 35:46.820
有啥区别呢

35:47.940 --> 35:48.660
啊

35:48.660 --> 35:49.460
不要这个的啊

35:49.460 --> 35:50.260
不需要这个玩意儿

35:52.910 --> 35:53.470
扩起来吧

35:56.500 --> 35:56.740
啊

35:56.740 --> 35:56.980
然后呢

35:56.980 --> 35:58.100
这里来自于什么

35:58.100 --> 35:59.540
属性里边的x

35:59.540 --> 35:59.620
啊

35:59.620 --> 36:01.140
他会通过属性来传给我

36:01.140 --> 36:02.740
反正不管是谁是属性给我的

36:02.740 --> 36:03.620
给我就行了啊

36:04.260 --> 36:05.700
那么我写这么两个组件

36:05.700 --> 36:06.180
然后呢

36:06.180 --> 36:07.940
用高階主页包装一下啊

36:07.940 --> 36:09.300
用高階主页包装一下

36:09.300 --> 36:09.860
那么这里

36:10.260 --> 36:10.500
啊

36:11.060 --> 36:12.740
with mouse evener

36:12.740 --> 36:13.940
even to listener

36:13.940 --> 36:15.300
mouse listener

36:15.300 --> 36:15.860
好来吧

36:16.980 --> 36:17.300
啊

36:18.340 --> 36:20.340
mouse point

36:21.780 --> 36:23.060
包装得到一个新的组件

36:24.100 --> 36:24.420
const

36:25.620 --> 36:26.660
等于with

36:27.940 --> 36:29.940
with mouse listener

36:30.660 --> 36:32.500
把那个旧组件传进去

36:32.500 --> 36:34.260
把我要包装的组件传进去

36:34.260 --> 36:34.820
那么他就会

36:35.540 --> 36:37.860
给他增加监听的功能

36:37.860 --> 36:38.740
const

36:38.740 --> 36:39.140
然后呢

36:39.140 --> 36:41.380
给他加上mouse

36:43.220 --> 36:44.740
mouse div

36:45.860 --> 36:48.260
with mouse listener

36:48.900 --> 36:50.820
把那个mood div传进去

36:51.700 --> 36:52.980
好就得到两个新组件了

36:52.980 --> 36:53.380
对吧

36:53.380 --> 36:53.620
好

36:53.620 --> 36:53.860
ok

36:53.860 --> 36:54.500
那么以后呢

36:54.500 --> 36:55.380
我在渲染的时候呢

36:55.380 --> 36:56.100
渲染啥呢

36:56.100 --> 36:57.780
就渲染这两个新组件就完事了啊

36:58.500 --> 36:59.700
渲染这两个新组件

36:59.780 --> 37:00.580
一个这个啊

37:00.580 --> 37:01.380
一个这个啊

37:01.380 --> 37:02.340
这种都都不要了

37:03.940 --> 37:04.260
对吧

37:04.260 --> 37:05.940
这是高階组件的做法

37:05.940 --> 37:06.980
完全一样的啊

37:06.980 --> 37:07.780
效果完全一样

37:08.820 --> 37:09.300
保存

37:09.300 --> 37:10.340
你看一下吧

37:10.340 --> 37:12.020
效果是完全一样的啊

37:12.020 --> 37:13.700
高階组件的增强功能

37:13.700 --> 37:15.060
所以这两种做法都可以啊

37:15.060 --> 37:15.940
都可以

37:15.940 --> 37:17.140
就看你自己喜欢哪一种

37:18.020 --> 37:18.260
好

37:18.260 --> 37:19.220
一般来说的话

37:19.220 --> 37:20.980
如果仅仅是ui

37:20.980 --> 37:22.820
渲染ui的逻辑不一样

37:22.820 --> 37:23.860
其他的都一样的话

37:23.860 --> 37:25.380
只是界面上变化不一样的话

37:25.380 --> 37:26.980
我们一般会用render props

37:26.980 --> 37:28.100
但是你用高階组件

37:28.100 --> 37:28.820
没有任何问题

37:30.180 --> 37:31.860
高階组件上更加具有通用性

37:32.420 --> 37:33.460
它不仅可以横切

37:34.100 --> 37:36.980
就是把那个ui部分不一样的地方

37:38.260 --> 37:39.220
人打出来

37:39.220 --> 37:40.500
把相同的部分切出来

37:40.500 --> 37:42.580
它还可以横切其他的任何的关注点

37:42.580 --> 37:44.260
都可以把它提取出来

37:44.260 --> 37:45.540
包括一些生命周期啊

37:45.540 --> 37:46.900
包括一些优化呀对吧

37:46.900 --> 37:48.420
我们都可以把它提取出来

37:49.300 --> 37:50.100
好吧

37:50.100 --> 37:50.580
ok啊

37:50.580 --> 37:51.780
这里我们就讲这么一个东西

37:51.780 --> 37:52.500
render props

37:52.500 --> 37:53.540
它并不是一个新知识

37:54.180 --> 37:55.860
它是用我们之前的知识呢

37:55.860 --> 37:58.420
用一种模式来解决这些内情的问题

37:58.420 --> 37:59.220
这种东西呢

37:59.300 --> 38:00.820
这种方式的这种思维呢

38:00.820 --> 38:01.700
大家需要学会

38:02.260 --> 38:03.620
大家下来呢去练习一下

38:03.620 --> 38:04.740
做一下这个练习

38:04.740 --> 38:06.500
其他的也没有什么练习可以做了

