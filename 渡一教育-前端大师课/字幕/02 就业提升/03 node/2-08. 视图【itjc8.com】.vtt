WEBVTT

00:00.000 --> 00:02.160
这一刻咱们来讲一讲试图

00:02.160 --> 00:05.000
想来想去也没有把它作为扩展课程了

00:05.000 --> 00:07.240
因为它毕竟比较简单

00:07.240 --> 00:08.960
咱们也只是接触它

00:08.960 --> 00:10.800
不接触它生成次的原理

00:10.800 --> 00:14.000
我们接触它比较使用成名量的东西

00:14.000 --> 00:15.480
试图其实很简单

00:15.480 --> 00:18.760
就是说如果说咱们去操作一个数据库的时候

00:18.760 --> 00:20.400
有一些查询

00:20.400 --> 00:22.280
就是我们需要的数据

00:22.280 --> 00:23.400
我把它打开

00:23.400 --> 00:26.640
Levicate

00:26.640 --> 00:29.520
就是我们存的数据格式

00:29.560 --> 00:30.760
是一个样子

00:30.760 --> 00:32.880
但是我们需要的数据格式

00:32.880 --> 00:34.400
可能是另外一个样子

00:34.400 --> 00:35.720
就好比说我们存的时候

00:35.720 --> 00:37.840
比方说公司部门 员工

00:37.840 --> 00:39.200
对吧 我们分三个表来存

00:39.200 --> 00:41.000
这是符合设计原则的

00:41.000 --> 00:42.240
我们在设计数据库的时候

00:42.240 --> 00:43.880
不是讲过三大范氏吗

00:43.880 --> 00:46.360
我们肯定是不会把所有东西往一个表里边扔

00:46.360 --> 00:48.400
但是有的时候我们查的时候

00:48.400 --> 00:50.320
我们可能希望把查询的结果里面

00:50.320 --> 00:53.000
有公司名 有部门名 有员工这些信息

00:53.000 --> 00:54.720
都把它包含进去

00:54.720 --> 00:56.160
那么每一次查询是不是

00:56.160 --> 00:57.960
我们都要去连三个表

00:57.960 --> 00:59.320
就特别的麻烦

00:59.400 --> 01:02.000
那么我们希望把这个查询结果

01:02.000 --> 01:03.560
给它保存起来

01:03.560 --> 01:05.360
保存到一个缓存里边

01:05.360 --> 01:07.720
然后每一次去查那个缓存的表

01:07.720 --> 01:10.040
那么这个缓存的表就是试图

01:10.040 --> 01:11.480
其实试图非常简单

01:11.480 --> 01:13.560
就是缓存一个表格出来

01:13.560 --> 01:14.280
根据一个查询

01:14.280 --> 01:15.440
来缓存一个表格

01:15.440 --> 01:17.960
然后针对这个表格来进行查询

01:17.960 --> 01:19.960
比方说我们直接来

01:19.960 --> 01:21.360
试图它是属于

01:21.360 --> 01:23.800
就是如果说你要创建一个试图的话

01:23.800 --> 01:25.200
创建试图

01:25.200 --> 01:27.480
就是操作试图

01:27.480 --> 01:28.360
属于什么呢

01:28.360 --> 01:30.080
属于DDL

01:30.080 --> 01:33.720
属于数据对象定义语言

01:33.720 --> 01:36.360
它不是操纵记录的

01:36.360 --> 01:37.760
它是操纵对象的

01:37.760 --> 01:39.200
一个试图就是一个对象

01:39.200 --> 01:40.280
试图在哪里看一下

01:40.280 --> 01:41.680
我们的Nivecat里面

01:41.680 --> 01:42.520
不是在这吗

01:42.520 --> 01:43.000
对不对

01:43.000 --> 01:45.880
你可以用这种UI的方式

01:45.880 --> 01:47.440
在这里新建一个试图

01:47.440 --> 01:49.120
在这里去新建一个试图

01:49.120 --> 01:50.120
非常简单

01:50.120 --> 01:53.680
也可以自己写车课单码来进行新建

01:53.680 --> 01:55.240
咱们来看一下吧

01:55.240 --> 01:56.280
其实很简单

01:56.280 --> 01:57.480
你在这里点击右键

01:57.480 --> 01:58.280
新建一个试图

01:58.280 --> 02:00.520
我们重新来一次

02:00.520 --> 02:01.200
点击右键

02:01.200 --> 02:02.480
新建一个试图

02:02.480 --> 02:03.720
然后这边写什么

02:03.720 --> 02:05.320
就写查询语句

02:05.320 --> 02:07.560
咱们上节课不是写了很多查询语句吗

02:07.560 --> 02:09.920
我们把VSCode打开

02:09.920 --> 02:12.080
VSCode

02:12.080 --> 02:13.880
上节课不是写了很多搜索语句吗

02:13.880 --> 02:16.760
那么这些搜索语句能不能打开

02:16.760 --> 02:18.440
我们随便找一个吧

02:18.440 --> 02:22.240
就是每一个公司的以及部门的信息

02:22.240 --> 02:24.480
以及员工的信息

02:24.480 --> 02:26.720
复制一下

02:26.720 --> 02:28.160
我们把暂停过来

02:28.160 --> 02:30.400
那么这里就是不是每一个公司

02:30.400 --> 02:31.200
所有的公司

02:31.200 --> 02:32.440
以及所有的部门

02:32.440 --> 02:34.040
以及所有的员工信息

02:34.040 --> 02:36.800
然后我们把那个列给它控制一下

02:36.800 --> 02:38.120
控制一下这个列

02:38.120 --> 02:38.720
首先

02:38.720 --> 02:41.320
挨在这写一下吧

02:41.320 --> 02:42.280
公司的ID

02:42.280 --> 02:44.520
我们给它命名为CID

02:44.520 --> 02:46.160
然后公司的名字

02:46.160 --> 02:46.680
列

02:46.680 --> 02:49.960
给它命名为CNN

02:49.960 --> 02:52.200
CNN

02:52.200 --> 02:53.480
然后公司的

02:53.520 --> 02:54.520
其他就没什么信息了

02:54.520 --> 02:57.160
然后部门的ID

02:57.160 --> 02:57.720
给它命名为

02:57.720 --> 02:59.000
因为有列名重复

02:59.000 --> 02:59.400
对吧

02:59.400 --> 03:00.680
DID

03:00.680 --> 03:01.560
部门的名字

03:01.560 --> 03:06.800
给它命名为DNN

03:06.800 --> 03:08.560
然后员工的ID

03:08.560 --> 03:10.480
给它命名为EID

03:10.480 --> 03:11.520
员工的名字

03:11.520 --> 03:12.320
NN

03:12.320 --> 03:14.000
给它命名为ENN

03:14.000 --> 03:15.480
员工的薪水

03:15.480 --> 03:16.880
1.3L

03:16.880 --> 03:19.080
给它命名为

03:19.080 --> 03:20.280
就3L

03:20.280 --> 03:21.520
那后面我就不命名了

03:21.520 --> 03:23.120
后面我就不命名了

03:23.240 --> 03:25.320
那么后边的我们把

03:25.320 --> 03:27.200
员工的其他信息写一点

03:27.200 --> 03:27.920
3L

03:27.920 --> 03:38.440
还有1.1.

03:38.440 --> 03:39.480
Location

03:39.480 --> 03:40.760
1.Join.Dead

03:40.760 --> 03:42.160
我们就查这些信息

03:42.160 --> 03:42.800
对不对

03:42.800 --> 03:43.600
那么这些信息

03:43.600 --> 03:45.560
我们把它写好之后

03:45.560 --> 03:46.120
写好之后

03:46.120 --> 03:47.360
我们这里直接点运

03:47.360 --> 03:49.160
直接运行

03:49.160 --> 03:49.560
保存

03:49.560 --> 03:50.640
这里点保存

03:50.640 --> 03:51.680
其实我们可以点这

03:51.680 --> 03:52.240
收口语

03:52.240 --> 03:54.040
看他跟帮我们生成的搜索语句

03:54.040 --> 03:55.820
也就是说这个不就是搜索语句吗

03:55.820 --> 03:57.360
这是我们查询的搜索语句

03:57.360 --> 03:59.660
并不是创建仕图的搜索语句

03:59.660 --> 04:00.700
我们看一下搜索语呢

04:00.940 --> 04:01.980
其实非常简单

04:02.480 --> 04:04.020
搜索语里边写的是什么呢

04:04.020 --> 04:06.060
create view创建一个仕图

04:06.820 --> 04:10.160
放到这个数据库里边给仕图取个名字

04:10.160 --> 04:11.700
这个名字我现在还没有取

04:12.220 --> 04:14.000
然后后边就是不是你看二字

04:14.000 --> 04:15.800
二字后边是不是我们的搜索语句

04:16.060 --> 04:16.560
对不对

04:16.560 --> 04:17.580
我们的搜索语句在这

04:17.840 --> 04:20.900
其实非常简单创建仕图的语法就是create view

04:20.900 --> 04:22.180
然后的仕图名字

04:22.180 --> 04:23.960
然后二字后边就写搜索语句

04:24.220 --> 04:25.000
就写完了

04:25.500 --> 04:26.800
写完了过我们这里点冒存

04:26.800 --> 04:28.580
比方让我取一个仕图名字

04:28.580 --> 04:29.360
给他取一个吧

04:30.120 --> 04:30.880
比方说

04:32.680 --> 04:33.200
什么呢

04:33.960 --> 04:34.460
amp

04:34.980 --> 04:35.480
info

04:35.740 --> 04:36.780
info

04:36.780 --> 04:38.060
运员工的信息

04:38.060 --> 04:39.080
完整的信息

04:39.340 --> 04:40.100
点击确定

04:40.620 --> 04:41.640
这个仕图创建好了

04:42.140 --> 04:43.680
创建好仕图过后这个有什么用呢

04:43.680 --> 04:44.200
我们这里

04:44.960 --> 04:45.480
不说别的

04:45.480 --> 04:46.500
我们双击这个仕图打开

04:47.020 --> 04:47.520
你看

04:47.780 --> 04:49.060
这个仕图打开过后

04:49.060 --> 04:51.360
实际上它就是运行了我们的查询语句

04:52.080 --> 04:54.380
你看是不是每一个公司的名字

04:54.380 --> 04:55.400
部门的名字

04:55.400 --> 04:56.940
已经个人的信息

04:56.940 --> 04:58.220
是不是我们根据我们的查询

04:58.220 --> 04:59.240
是不是都有了

04:59.240 --> 04:59.760
对不对

04:59.760 --> 05:01.040
这些结果都有了

05:01.560 --> 05:02.840
因此这个仕图创建好了

05:02.840 --> 05:03.600
那么我们

05:03.600 --> 05:04.880
如何来利用这个仕图呢

05:04.880 --> 05:06.160
比方说我们现在去查询

05:06.420 --> 05:07.440
去新建个查询

05:07.440 --> 05:10.260
那么查的时候如果说我要查什么公司信息

05:10.260 --> 05:11.540
员工信息这些东西

05:11.540 --> 05:13.840
比方说我们要查杜一的所有员工

05:13.840 --> 05:14.340
对吧

05:14.340 --> 05:15.380
以前是不是要连表

05:15.380 --> 05:16.400
那么现在我们不用了

05:16.400 --> 05:17.680
直接去查询仕图

05:17.680 --> 05:18.960
仕图就说info

05:18.960 --> 05:19.480
对吧

05:19.480 --> 05:19.980
where

05:21.840 --> 05:23.880
这个仕图的表的数据

05:23.880 --> 05:25.320
它不在硬盘上

05:25.320 --> 05:26.320
知道吧

05:26.320 --> 05:27.480
它是在内存里边

05:27.480 --> 05:28.680
还存起来的

05:28.680 --> 05:30.280
那么这里where

05:30.280 --> 05:33.240
条件是我们的公司的名字

05:33.240 --> 05:34.000
StayName

05:34.000 --> 05:34.680
对不对

05:34.680 --> 05:35.600
like

05:35.600 --> 05:36.240
对不对

05:38.160 --> 05:38.960
杜一

05:39.760 --> 05:40.600
杜一

05:41.600 --> 05:42.400
杜一

05:43.400 --> 05:47.000
杜杜杜杜杜杜杜杜杜杜杜杜杜杜

05:47.000 --> 05:48.680
杜杜杜杜杜杜杜杜一

05:49.040 --> 05:49.540
好

05:49.540 --> 05:50.920
小完了运行

05:50.920 --> 05:52.200
你看是不是又查出来了

05:52.200 --> 05:53.520
那么就把杜一教育的所谓的

05:53.520 --> 05:54.640
员工信息查出来了

05:54.640 --> 05:55.240
对不对

05:55.240 --> 05:57.040
那有了这个仕图的帮助过后

05:57.040 --> 05:58.080
是不是变得很简单

05:58.080 --> 05:58.440
对不对

05:58.440 --> 05:58.960
好

05:58.960 --> 06:00.080
这是关于仕图啊

06:00.080 --> 06:00.640
特别简单

06:00.640 --> 06:01.400
其实还可以

06:01.400 --> 06:02.280
还其实仕图里面

06:02.280 --> 06:03.120
还有很多知识的

06:03.120 --> 06:04.080
比方说我们

06:04.080 --> 06:05.400
当然要修改仕图的话

06:05.400 --> 06:06.560
也是这里点击修改

06:06.720 --> 06:07.560
这里设计试图

06:07.560 --> 06:08.440
重新设计一次

06:08.440 --> 06:10.440
这一过后呢 你看涉口语了

06:10.440 --> 06:13.440
比方说我们这里随便再加一个吧

06:13.440 --> 06:14.440
再加一个

06:14.440 --> 06:16.440
seedle

06:16.440 --> 06:18.440
好 只要写了过后 你看

06:18.440 --> 06:19.440
这里是不是

06:19.440 --> 06:21.440
这里有个

06:21.440 --> 06:22.440
defan

06:22.440 --> 06:23.440
defan5u

06:23.440 --> 06:25.440
defan5u 是不是修改试图

06:25.440 --> 06:26.440
对不对

06:26.440 --> 06:28.440
它会生成相应的涉口语句

06:28.440 --> 06:30.440
那么这个试图呢 我刚才说到哪儿呢

06:30.440 --> 06:32.440
其实针对试图的话

06:32.440 --> 06:34.440
你还可以往试图里边加数据

06:34.440 --> 06:36.440
还可以往试图里边删数据

06:36.440 --> 06:38.440
但是呢 我们通常不要这样做

06:38.440 --> 06:40.440
通常试图呢 都是用来查询的

06:40.440 --> 06:42.440
另外呢 试图

06:42.440 --> 06:44.440
其实还有一些底层的原类性的东西

06:44.440 --> 06:46.440
我们作为前段的话 不用过多了解

06:46.440 --> 06:47.440
我们只需要知道

06:47.440 --> 06:48.440
试图呢 它出现的目的

06:48.440 --> 06:50.440
就是为了方便我们的

06:50.440 --> 06:51.440
查询

06:51.440 --> 06:53.440
让我们的 减少我们的

06:53.440 --> 06:54.440
涉口语句

06:54.440 --> 06:55.440
那么减少的涉口语句

06:55.440 --> 06:56.440
什么意思呢

06:56.440 --> 06:57.440
只是让我们少许点代码

06:57.440 --> 06:58.440
其实不是的

06:58.440 --> 06:59.440
减少涉口语句

06:59.440 --> 07:00.440
还有一个重要的意义

07:00.440 --> 07:02.440
就是减少网络传输

07:02.440 --> 07:03.440
我们之后呢

07:03.440 --> 07:04.440
在下一个章节

07:04.440 --> 07:05.440
我们会学习

07:05.440 --> 07:07.440
在漏误的里边如何来操作

07:07.440 --> 07:08.440
买涉口

07:08.440 --> 07:09.440
那么那个时候呢

07:09.440 --> 07:11.440
需要在漏误的程序

07:11.440 --> 07:12.440
跟买涉口数据库之间

07:12.440 --> 07:13.440
传输涉口语句

07:13.440 --> 07:14.440
在程序里边

07:14.440 --> 07:16.440
给它传输一些涉口语句

07:16.440 --> 07:18.440
你涉口语句越简单

07:18.440 --> 07:19.440
代码量越少

07:19.440 --> 07:21.440
那么传输的东西呢就越少

07:21.440 --> 07:22.440
对吧

07:22.440 --> 07:24.440
只是这么一个意思

07:24.440 --> 07:26.440
这是关于这个试图

07:26.440 --> 07:27.440
其他没啥

07:27.440 --> 07:28.440
那么这一章呢

07:28.440 --> 07:30.440
我们就学习完了

07:30.440 --> 07:32.440
买涉口学习完了

07:32.440 --> 07:33.440
之后啊

07:33.440 --> 07:35.440
咱们只是在

07:35.440 --> 07:37.440
数据库里边进行操作

07:37.440 --> 07:38.440
那么我们肯定更重要的是

07:38.440 --> 07:39.440
要在程序里边

07:39.440 --> 07:41.440
让它自动的去操作数据库

07:41.440 --> 07:42.440
那么这个东西

07:42.440 --> 07:43.440
该怎么办呢

07:43.440 --> 07:45.440
咱们下一章来具体的讲解

07:45.440 --> 07:46.440
在漏的解释里边

07:46.440 --> 07:48.440
如何来操作这个买涉口

07:48.440 --> 07:49.440
好

07:49.440 --> 07:50.440
我们这一章就到这里了

