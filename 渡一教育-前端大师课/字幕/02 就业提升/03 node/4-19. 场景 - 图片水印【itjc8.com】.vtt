WEBVTT

00:00.000 --> 00:02.000
啊 图片水印

00:03.320 --> 00:07.680
哎呀 这个事情 讲着讲着的事情真的是讲不完啊

00:07.680 --> 00:09.200
越讲越多 越讲越多

00:09.200 --> 00:11.520
然后讲着讲着又想起了一新的场景

00:12.020 --> 00:14.840
后端是个无底洞 前端其实也是

00:15.360 --> 00:20.220
那么后端我还是自己约束一下吧 不然这个没完没了这个事情

00:20.480 --> 00:24.060
我感觉在讲的话 快开一个新的课程出来讲场景了

00:24.320 --> 00:25.600
图片水印想了

00:25.860 --> 00:28.920
图片水印就是你们上网的时候 看了一些图片对吧

00:28.920 --> 00:30.460
你上传了一些图片过后呢

00:30.720 --> 00:33.780
用户上传图片过后呢 还会加一个水印在图片上面

00:34.800 --> 00:37.360
那么这种情况下呢 实际上是这样子啊

00:38.140 --> 00:39.160
实际上是这样

00:39.420 --> 00:41.220
就是用户上传原始图片

00:42.480 --> 00:44.540
上传原始图片

00:45.560 --> 00:48.380
他有几种方案啊 我一个说一下吧

00:48.640 --> 00:52.720
这些方案呢 我就讲一种就行了啊 咱们前端不要搞得太深了

00:52.980 --> 00:56.320
一地种方案就是上传时

00:56.820 --> 00:57.840
加水印

00:58.560 --> 00:59.340
这是地种方案

00:59.840 --> 01:01.480
就是用户上传原始图片

01:01.740 --> 01:02.920
然后呢 服务器呢

01:03.420 --> 01:04.960
到服务器对吧

01:05.220 --> 01:07.260
服务器呢 保留原始图片

01:08.800 --> 01:10.080
保留原始

01:10.600 --> 01:11.360
图片

01:11.620 --> 01:12.640
以及

01:12.900 --> 01:15.200
水印图片 就加了水印的图片

01:15.720 --> 01:16.740
这是第一种方式

01:17.000 --> 01:22.120
这种方式好处在哪呢 就是后边用户请求图片的时候 直接请求一个水印图片就完事了

01:22.380 --> 01:23.900
不用去请求原始图片了

01:24.160 --> 01:25.960
但是原始图片得保留啊 你不保留的话

01:26.220 --> 01:27.740
到时候水印要编了怎么办

01:28.560 --> 01:32.920
这个事情就麻烦了 你没有原始图片了啊 那还得去去水印麻烦的要事

01:33.420 --> 01:34.960
这个时候这是第一种方案

01:35.480 --> 01:37.000
第二种方案呢是

01:38.800 --> 01:41.360
动态加水印

01:42.900 --> 01:45.460
就是用户上传原始图片

01:46.220 --> 01:48.280
上传原始图片

01:48.780 --> 01:51.100
然后呢 服务器呢 就直保留原始图片

01:52.620 --> 01:53.400
直保留

01:53.900 --> 01:56.220
就像我们现在的做法 对吧 直保留原始图片

01:56.940 --> 01:59.100
当我们请求图片时

01:59.380 --> 02:00.780
请求图片时

02:01.540 --> 02:06.260
服务器收到请求 然后呢 动态加水印

02:07.180 --> 02:10.760
这种方案的好处在哪呢 这种方案的好处呢 就是我们随时可变

02:11.020 --> 02:14.600
就是水印呢 你想改的话 你一下就改了 对吧 不用去做额外的处理

02:14.860 --> 02:16.660
如果说你用第一种方式的话

02:17.940 --> 02:23.060
生成个水印图片 当时水印要改的时候 你还得写个程序 根据新的原始图片

02:23.300 --> 02:25.620
重新覆盖掉水印图片 还得写个程序 对吧

02:25.980 --> 02:30.260
你当然离开时可以把这个程序写好 那动态水印的好处在于可以随时改

02:30.780 --> 02:32.940
但是呢 动态水印不太好的地方就在于

02:33.500 --> 02:39.060
它的请求呢 想用的时间增加了 因为你每一次请求服务器要把它图片读到内存

02:39.580 --> 02:43.980
然后在内存里边去改图片数据 对吧 加水印其实就是改出图片数据 没有什么别的

02:44.700 --> 02:48.540
那改了个图片数据呢 那肯定是服务器增加了压力啊 很大的压力

02:48.860 --> 02:54.420
比方说有100个人同时请求图片 那服务器有一个内存里面要复制100份数据出来

02:54.900 --> 03:01.820
就是增加了很大的压力 所以说用的更多的可能是上传 用的更多的应该是个上传指加水印啊

03:02.460 --> 03:03.220
当然呢 如果说

03:04.660 --> 03:08.220
那么到时候水印要改 你可能要单独写个程序 但这些事情呢

03:08.820 --> 03:11.380
前段可以做 后段也可以做 没办法 你把这些可以学就可以做了

03:11.780 --> 03:17.220
包括呢 其实这些科学的之后呢 你还知道 我们服务器呢 还可以把你上传一个图片的时候 这个图片很大

03:17.420 --> 03:21.820
服务器可以把裁剪 裁剪成原始大中小的啊 四种图片尺寸

03:22.620 --> 03:26.900
都保留到服务器 然后通过不同的地址呢 可以访问不同的图片 这都可以做的啊

03:27.300 --> 03:32.100
其实呢 就是利用一个第三方库 当然呢 你能不能不用第三方库去写这个东西呢 当然可以

03:32.820 --> 03:38.700
你去写的话就肯定是麻烦死了 你还得知道一个多媒体里面的数据格式 因为图片是二斤制数据吧

03:38.980 --> 03:42.940
它的二斤制数据到底是怎么存处的 它是一种什么样的格式 你必须要清楚

03:43.340 --> 03:50.620
你不清楚的话 你处理不了图片的 而且呢 不同的图片格式 比如JPG PNG 它们的存处的方式都是不一样的

03:50.980 --> 03:51.740
是有区别的

03:52.140 --> 03:58.900
那么你要单独去处理 它是非常麻烦的啊 一般来说 我们开发者呢 去处理图片的时候 一般会使用一个第三方库

03:59.260 --> 04:03.100
在这个接式里面我们可以使用这个gimp 啊 这个第三方库 其实还有很多啊

04:03.740 --> 04:08.220
这边呢 我给大家介绍一个吧 这个gimp呢 用的还是蛮多的 有10k啊 10k的啊 star

04:09.020 --> 04:13.660
啊 这个第三方库用起来非常简单啊 它稳当在这 叫做gimp package

04:14.460 --> 04:16.380
啊 先安装吧

04:17.180 --> 04:17.620
先安装

04:19.020 --> 04:23.020
np a npmi gimp 安装了再说

04:24.460 --> 04:32.780
然后他这边怎么用呢 他告诉你 就导入这个gimp啊 然后他就是可以读图片啊 你看 没可以读图片啊 读出来是一个啥呢 读出来他可以用

04:32.780 --> 04:39.820
毁掉模式啊 然后呢 也可以也用那个promise的这种模式 他都支持啊 你读读的一张图片给他个图片路径

04:39.820 --> 04:42.140
你就可以读 读出来过后就是一个进步对象

04:42.140 --> 04:44.340
得到的就是个进步对象

04:44.340 --> 04:47.220
进步对象读到过后你可以改尺寸

04:47.220 --> 04:50.900
改它的就是图片的画质 改这个图片的挥度

04:50.900 --> 04:54.580
然后改完了过后把它写到一个新的路径里面去保存就完事了

04:54.580 --> 04:55.860
前面就改 随便改

04:55.860 --> 04:58.460
改完了过后写到新的路径里面去完事了

04:58.980 --> 05:02.580
然后它告诉你它读图片也可以读很多方式

05:02.580 --> 05:04.100
有图片路径的方式

05:04.100 --> 05:06.260
有的还有什么 读网络图片它也可以读

05:06.260 --> 05:07.540
它会自动把图片下载下来

05:07.580 --> 05:09.740
然后把它读成一个对象

05:09.740 --> 05:12.740
也可以读一个图片的就是进步的

05:12.740 --> 05:15.500
也可以读一个进步的就是实力

05:15.500 --> 05:17.260
也可以读一个buffer 都可以读

05:17.260 --> 05:19.980
总之它读完了过后生存的就是进步实力

05:19.980 --> 05:22.180
然后它读到实力过后

05:22.180 --> 05:24.900
它告诉你实力里面有很多很多方法

05:24.900 --> 05:27.940
包括什么 改变尺寸 还有裁箭

05:27.940 --> 05:29.420
这个是啥玩意 这个是

05:29.420 --> 05:32.300
这个是这个是这个东西

05:32.300 --> 05:34.060
这个单词怎么翻译这个东西

05:34.660 --> 05:36.500
这个单词翻译不了

05:36.500 --> 05:39.180
就是往图片里面去加一些东西

05:39.180 --> 05:40.860
比方说加另一张图片给它覆盖过去

05:40.860 --> 05:42.700
像我们水印不就是覆盖过去吗

05:42.700 --> 05:43.740
对不对 现在呢

05:43.740 --> 05:46.300
为了给大家演示 我这里呢

05:46.300 --> 05:47.620
搞两张图片出来吧

05:47.620 --> 05:49.780
一个是原式图片 随便搞一个

05:49.780 --> 05:51.380
这个原式图片用来测试

05:51.380 --> 05:53.660
就是往这个图片里面加水印来测试一下

05:53.660 --> 05:55.660
我们给它取个名字叫arrange

05:55.660 --> 05:57.180
这是原式图片

05:57.180 --> 05:58.660
然后再来搞一个水印图片

05:58.660 --> 06:01.100
水印图片我们再往上去收一下

06:01.100 --> 06:01.860
随便找一个

06:01.860 --> 06:03.700
水印图片一般这是一公司的logo

06:03.780 --> 06:04.860
或者加一个文字 对吧

06:04.860 --> 06:07.100
就是一般是设计给你做的

06:07.100 --> 06:09.020
生成一个水印图片

06:09.020 --> 06:10.260
那我这里就随便来一个吧

06:10.260 --> 06:11.660
一边哈士奇

06:11.660 --> 06:13.860
我也用别的图片也不太好的

06:13.860 --> 06:14.660
就用这个玩意吧

06:16.580 --> 06:17.900
就这两个吧

06:17.900 --> 06:18.820
我把几个图

06:21.140 --> 06:21.740
就这两个

06:23.540 --> 06:24.260
下载下来

06:24.260 --> 06:25.300
给它取个名字叫water

06:27.140 --> 06:27.620
行了

06:27.620 --> 06:28.900
那么现在不是两张图片了吧

06:28.900 --> 06:29.980
一个是原式图片

06:29.980 --> 06:31.180
一个是水印图片

06:31.180 --> 06:32.260
假如这个是水印图片

06:32.300 --> 06:33.940
让它看上去有像

06:33.940 --> 06:36.500
然后我们把这个拖到那个

06:37.820 --> 06:40.780
拖到那个就是这里面来加进去

06:42.260 --> 06:43.220
好了

06:43.220 --> 06:43.980
图片的出来了

06:43.980 --> 06:44.700
对吧

06:44.700 --> 06:46.260
orange water

06:46.260 --> 06:48.180
接下来我们就在英这个社里面写吧

06:48.180 --> 06:50.420
就先把它写一写

06:50.420 --> 06:51.900
要不然我建个模块

06:51.900 --> 06:52.700
或者是怎么样

06:52.700 --> 06:53.940
就是需要再写吧

06:55.220 --> 06:57.300
以往说我们这里写个异部函数

06:57.300 --> 06:58.220
分个型

06:58.220 --> 06:59.020
test吧

06:59.020 --> 07:00.740
测试一下

07:00.740 --> 07:02.020
我们这里不是有两张图片吗

07:02.060 --> 07:04.180
我先把两张图片的路径拿到

07:04.180 --> 07:05.060
pass

07:05.060 --> 07:06.180
require

07:06.180 --> 07:06.660
pass

07:07.940 --> 07:11.180
第一个就是路径

07:12.860 --> 07:16.380
叫做water pass

07:16.380 --> 07:17.380
water pass

07:17.380 --> 07:18.340
或者是water file

07:18.340 --> 07:19.940
总之就是一个水印图片的路径

07:19.940 --> 07:20.820
水印图片的路径

07:20.820 --> 07:21.660
我们可以用pass

07:21.660 --> 07:22.860
resolve

07:22.860 --> 07:23.860
当前目录

07:23.860 --> 07:24.940
下面的什么呢

07:24.940 --> 07:26.220
water.jpg

07:26.220 --> 07:26.420
对吧

07:26.420 --> 07:27.900
这是第一个图片的路径

07:27.900 --> 07:28.340
然后呢

07:28.340 --> 07:29.540
第二个图片的路径

07:29.540 --> 07:30.460
是原式图片

07:30.460 --> 07:31.420
orange

07:31.460 --> 07:32.100
orange

07:32.100 --> 07:32.860
pass

07:33.620 --> 07:34.380
resolve

07:34.380 --> 07:36.620
当前目录下面的哪个呢

07:36.860 --> 07:37.980
orange

07:38.740 --> 07:39.500
jpg

07:39.500 --> 07:39.780
对吧

07:39.780 --> 07:40.700
就是原式图片

07:41.460 --> 07:42.100
好

07:42.100 --> 07:43.420
那么现在用两张图片的

07:43.420 --> 07:45.580
我们无非就是把这个图片的东西

07:45.580 --> 07:47.300
放到这个盖到这个图片上

07:47.300 --> 07:47.580
然后呢

07:47.580 --> 07:48.740
保存到一个新的路径

07:48.740 --> 07:48.940
对吧

07:48.940 --> 07:49.780
我们给他再来一个

07:49.780 --> 07:50.780
再来一个手心吧

07:50.780 --> 07:52.580
就是pocket pass

07:52.580 --> 07:54.100
就是我们处理完了过后

07:54.100 --> 07:56.540
要保存成一张新的图片

07:56.540 --> 07:58.140
当然你可以把原式图片

07:58.140 --> 07:59.100
图片复改掉

07:59.100 --> 08:00.700
但是我们一般不这样做

08:00.780 --> 08:02.900
我们来有一个新的图片

08:03.420 --> 08:05.300
第二个例如说我们这里的

08:06.580 --> 08:07.380
6嘛

08:07.380 --> 08:08.300
6JPG

08:08.660 --> 08:09.060
ok

08:09.660 --> 08:11.380
写上这么三个路径

08:11.900 --> 08:12.700
这是水硬图片

08:12.700 --> 08:13.340
这是原式图片

08:13.340 --> 08:14.700
这是我们处理完过后

08:14.700 --> 08:15.780
要保存的新的图片

08:16.100 --> 08:17.020
然后现在怎么处理呢

08:17.020 --> 08:18.260
首先我们要导入这个

08:18.460 --> 08:18.900
gimp

08:18.900 --> 08:19.540
这个cool

08:19.780 --> 08:20.300
require

08:20.620 --> 08:20.980
gimp

08:21.940 --> 08:22.660
导入这个cool

08:22.860 --> 08:23.780
这个cool里边呢

08:23.780 --> 08:24.700
刚才你们看到了

08:24.700 --> 08:25.780
他里面提供了一个方法

08:25.780 --> 08:26.140
叫什么

08:26.140 --> 08:26.620
read

08:26.620 --> 08:27.100
对吧

08:27.220 --> 08:27.820
读一个

08:27.820 --> 08:28.620
读一个图片

08:28.620 --> 08:30.060
我们把水硬图片加进去

08:30.340 --> 08:31.260
读一个图片

08:31.500 --> 08:33.420
然后我们是不是还要把原式图片读出来

08:33.420 --> 08:33.620
对吧

08:33.620 --> 08:34.940
生成两个gimp对象

08:35.180 --> 08:36.740
一个是水硬图片的gimp对象

08:36.740 --> 08:38.180
一个是原式图片的gimp对象

08:38.180 --> 08:39.140
当然我们可以一起读

08:39.580 --> 08:41.260
我们不用说等

08:41.260 --> 08:42.580
把这个读完了再去读它

08:42.580 --> 08:44.340
也不用说把他读完了再去读它

08:44.340 --> 08:45.100
我们一起读嘛

08:45.100 --> 08:45.460
对吧

08:45.460 --> 08:46.540
我们可以用个promise

08:46.540 --> 08:48.060
反过来是promise嘛

08:48.460 --> 08:49.780
这种灵活处理

08:50.500 --> 08:51.980
开发是非常非常灵活的

08:51.980 --> 08:53.180
不该把他学死了

08:54.140 --> 08:55.060
说一开始

08:55.060 --> 08:57.220
要达到很灵活的能力

08:57.860 --> 08:59.180
确实需要一个过程

09:02.150 --> 09:03.630
那么这里是不是返回一个promise

09:03.630 --> 09:04.070
对吧

09:04.070 --> 09:05.190
返回一个promise

09:05.190 --> 09:06.990
就等两个图片都处理完了过后

09:06.990 --> 09:08.270
反过来是否两个gimp对象

09:08.270 --> 09:09.670
那么我们位置等待一下

09:10.190 --> 09:12.150
然后这边我们可以用解构的方式

09:12.150 --> 09:13.150
一个是water

09:13.310 --> 09:14.110
一个是

09:15.550 --> 09:16.150
orange

09:17.230 --> 09:18.030
那么这样的读出来

09:18.030 --> 09:19.550
是不是这个water是个gimp对象

09:19.550 --> 09:21.150
这个orange是个gimp对象

09:21.150 --> 09:22.350
那么现在怎么处理呢

09:22.510 --> 09:23.950
这样我们用个最简单的处理方式

09:23.950 --> 09:24.750
你看一下这里

09:25.630 --> 09:27.510
他用这个就用这个方法

09:27.510 --> 09:28.710
他可以混合图片的

09:28.710 --> 09:29.630
就在这个方法

09:29.790 --> 09:30.510
component

09:30.590 --> 09:31.350
component

09:31.350 --> 09:32.110
怎么翻译

09:32.110 --> 09:32.550
混合的

09:32.550 --> 09:32.950
对吧

09:32.950 --> 09:33.830
混合图片

09:33.830 --> 09:34.710
那怎么来传呢

09:34.710 --> 09:35.550
他说告诉你

09:35.870 --> 09:38.590
在这个张图片上面去混合这个图片

09:38.990 --> 09:40.150
这个叫做圆图

09:40.150 --> 09:40.950
这个叫做圆

09:40.950 --> 09:42.030
这个叫做目标

09:42.510 --> 09:43.390
把这个圆图片

09:43.390 --> 09:44.990
混合到这个目标图片上面

09:44.990 --> 09:46.510
那我们混合一下

09:46.510 --> 09:48.310
我们这个orange这个图片

09:48.710 --> 09:50.670
我们用compose it

09:51.230 --> 09:51.950
然后混合什么呢

09:51.950 --> 09:52.830
混合water

09:53.950 --> 09:54.710
water

09:54.710 --> 09:56.070
混合水硬图片

09:56.070 --> 09:57.030
然后第二个参数

09:57.030 --> 09:59.630
第三个参数是这个图片的做标

09:59.670 --> 10:01.430
就像一个网易上的做标一样

10:01.430 --> 10:01.750
对吧

10:01.750 --> 10:03.590
左上角的X做标和Y做标

10:03.590 --> 10:04.590
比方说我们随便写个吧

10:04.590 --> 10:05.790
左上角的10

10:05.790 --> 10:06.950
Y做标是10

10:06.950 --> 10:08.910
第三个参数是一个option

10:08.910 --> 10:09.950
是一个配置

10:09.950 --> 10:11.270
他告诉你配置有三个配置

10:11.270 --> 10:12.430
一个是mode

10:12.430 --> 10:13.590
一个是opacity source

10:13.590 --> 10:15.790
一个是opacity test

10:15.790 --> 10:16.830
这个mod是怎么呢

10:16.830 --> 10:18.510
这个mod我们查一下吧

10:19.110 --> 10:19.910
扶植一下

10:22.640 --> 10:23.680
他说说吧

10:24.400 --> 10:26.160
这个mod我们看一下吧

10:26.160 --> 10:27.040
这个单词

10:27.040 --> 10:28.160
他没有详细解释

10:28.160 --> 10:29.320
他解释得比较粗烈

10:29.320 --> 10:31.920
单词这个blend是混合的意思

10:32.080 --> 10:35.080
source是我们的就是混合的图片 over

10:35.080 --> 10:36.360
这个什么意思呢

10:36.360 --> 10:38.080
就是它是一个长量

10:38.080 --> 10:39.560
那我们把它写一下吧

10:39.560 --> 10:40.360
mod

10:40.360 --> 10:41.160
这他默认值

10:41.160 --> 10:42.120
长的就是这个

10:43.000 --> 10:43.640
这啥意思呢

10:43.640 --> 10:45.080
就是说我们的source

10:45.080 --> 10:47.080
就是这个图片在这个图片之上

10:47.080 --> 10:48.120
是不是满足要求了

10:48.120 --> 10:49.720
本来就是这个图片在这个图片之上

10:49.720 --> 10:50.200
对吧

10:50.200 --> 10:51.560
那没问题了

10:51.560 --> 10:52.920
那么后边两个参数

10:52.920 --> 10:54.160
是opacity source

10:54.160 --> 10:55.240
opacity test

10:55.240 --> 10:56.240
那什么意思呢

10:56.240 --> 10:57.160
opacity什么意思

10:57.160 --> 10:57.960
透明度吗

10:57.960 --> 10:58.920
透明度

10:58.920 --> 11:00.320
您就是完全透明

11:00.320 --> 11:01.240
依旧是完全不透明

11:01.240 --> 11:01.720
对不对

11:01.840 --> 11:02.880
那么

11:02.880 --> 11:03.760
为什么有两个呢

11:03.760 --> 11:05.000
因为我们这有两张图片

11:05.000 --> 11:06.440
就是它的透明度和它的透明度

11:06.440 --> 11:07.320
它叫做test

11:07.320 --> 11:08.760
就是destination

11:08.760 --> 11:10.040
就是目标图片的透明度

11:10.040 --> 11:11.560
和圆图片的透明度

11:11.560 --> 11:12.960
那么我肯定是设置它的透明度

11:12.960 --> 11:13.400
对吧

11:13.400 --> 11:14.640
所以我们只需要设置它就行了

11:14.640 --> 11:15.880
比方说我们设置个0

11:16.720 --> 11:19.640
比方说我们设置个0.3

11:20.280 --> 11:21.160
透明度

11:21.160 --> 11:21.680
好

11:21.680 --> 11:22.160
写完了

11:22.160 --> 11:23.200
我就写完了

11:23.200 --> 11:24.680
写完了过后我们要保存

11:24.680 --> 11:25.000
对吧

11:25.000 --> 11:26.200
我们要保存

11:26.200 --> 11:27.000
component

11:27.000 --> 11:27.480
完了过后

11:27.480 --> 11:29.080
我们要component

11:29.080 --> 11:30.040
得到的是一个进步对象

11:30.040 --> 11:30.280
OK

11:30.320 --> 11:31.280
我们保存

11:31.280 --> 11:32.560
orange

11:32.560 --> 11:33.760
然后保存

11:33.760 --> 11:35.720
就是用什么保存

11:37.560 --> 11:38.160
混合

11:38.160 --> 11:40.120
混合完了过后

11:40.120 --> 11:40.600
然后呢

11:40.600 --> 11:41.920
我们用write

11:41.920 --> 11:42.520
保存到哪呢

11:42.520 --> 11:44.080
保存到target pass

11:45.920 --> 11:47.640
那么这个我们可以用个await

11:47.640 --> 11:48.840
因为保存需要段时间

11:48.840 --> 11:49.480
对不对

11:49.480 --> 11:49.680
好

11:49.680 --> 11:49.960
来吧

11:49.960 --> 11:50.760
我们调用这个函数

11:50.760 --> 11:51.560
test试一下吧

11:53.400 --> 11:53.800
试一下

11:54.840 --> 11:55.720
npm is start

11:58.300 --> 11:59.020
保错了

11:59.020 --> 11:59.460
它说什么呢

12:00.460 --> 12:01.460
this is

12:02.940 --> 12:03.620
它说什么

12:06.820 --> 12:08.260
gimp is not defined

12:09.380 --> 12:10.540
它说gimp没有定

12:10.540 --> 12:10.860
哦

12:10.860 --> 12:11.540
这个地方

12:11.540 --> 12:12.340
小写的计

12:13.140 --> 12:13.540
保存

12:16.430 --> 12:18.110
你看了是不是这个新的图片出来了

12:18.110 --> 12:18.390
对吧

12:18.390 --> 12:19.190
6.jpg

12:19.190 --> 12:20.150
你看这个小狗

12:20.150 --> 12:22.110
是不是就躺在这了

12:22.110 --> 12:22.750
这就是水印

12:22.750 --> 12:23.070
对不对

12:23.070 --> 12:23.870
这就是水印

12:23.870 --> 12:25.750
当然我们可以把它完善一下

12:25.750 --> 12:26.990
稍微完善一下

12:26.990 --> 12:28.790
比方说我们可以写个函数

12:28.790 --> 12:29.710
单准来写个函数

12:31.950 --> 12:32.550
mark

12:33.750 --> 12:35.710
就是给一个图片加水印

12:35.710 --> 12:37.070
这个函数就是

12:37.070 --> 12:39.990
给一张图片加水印

12:41.710 --> 12:43.270
你把一些必要的参数传给我

12:43.270 --> 12:46.790
首先你是要传给我一个就是水印图片

12:46.790 --> 12:47.830
水印图片

12:47.830 --> 12:49.790
一个你要传给我这个orange

12:50.590 --> 12:51.390
原式图片

12:52.550 --> 12:54.030
然后你给我传一个target

12:55.150 --> 12:56.510
target就是目标

12:56.510 --> 12:57.510
我们保存了目标

12:57.510 --> 12:59.110
你把这三个东西传给我

12:59.110 --> 13:00.950
然后我可以再传一些吧

13:00.990 --> 13:02.430
比方说我们的图片里边

13:02.430 --> 13:05.030
不是这个要根据实际情况

13:05.030 --> 13:06.230
比方说我们的图片很大

13:06.230 --> 13:07.110
那水印就很大

13:07.110 --> 13:07.830
图片很小

13:07.830 --> 13:08.710
水印就很小

13:08.710 --> 13:11.430
那么我们可以让原式图片和我们水印的

13:11.430 --> 13:12.350
是不是有个比例

13:12.350 --> 13:12.990
对吧

13:12.990 --> 13:14.190
比方说我们这个比例

13:14.310 --> 13:17.790
我们可以用这个proper

13:19.350 --> 13:20.990
我自己查一下吧

13:21.590 --> 13:23.550
就这个我们之前查过的

13:23.790 --> 13:24.310
就这个

13:24.310 --> 13:25.030
就这个单词

13:25.030 --> 13:26.430
proper

13:27.990 --> 13:28.630
不出来

13:31.790 --> 13:33.950
proportion

13:33.950 --> 13:35.230
proportion

13:35.230 --> 13:36.310
比例

13:36.310 --> 13:37.150
比例

13:37.150 --> 13:37.830
比例

13:37.830 --> 13:38.750
跟他摸那个比例

13:38.750 --> 13:39.830
比方说

13:40.830 --> 13:41.750
实

13:42.750 --> 13:43.550
这个比例

13:43.550 --> 13:44.070
对吧

13:44.070 --> 13:44.910
然后摸那个比例

13:44.910 --> 13:46.870
你可以给我给我给我修改

13:46.870 --> 13:48.870
就是原式图片的宽度

13:48.870 --> 13:49.830
处理

13:49.830 --> 13:51.270
水印图片的宽度

13:51.270 --> 13:52.350
就是比例

13:52.630 --> 13:54.910
然后我们再来一个就是

13:54.910 --> 13:56.630
我们用我们要放到右下角

13:56.630 --> 13:57.150
对吧

13:57.150 --> 13:58.630
那么你右边的比例

13:58.630 --> 14:00.430
就你右边有多少

14:00.670 --> 14:01.710
你右边多少宽度

14:01.710 --> 14:02.910
那么这个东西还是一个比例

14:02.910 --> 14:03.870
你看一般来说

14:03.870 --> 14:04.590
图片越小

14:04.590 --> 14:06.230
你右边就越短

14:06.230 --> 14:07.510
距离就越短

14:07.510 --> 14:08.470
那么图片越大

14:08.470 --> 14:09.470
你右边就越大

14:09.470 --> 14:10.590
那么就相当于是

14:10.590 --> 14:12.350
原式图片宽度的

14:12.350 --> 14:14.230
相当于是原式图片宽度的

14:15.230 --> 14:15.790
多少倍

14:15.790 --> 14:16.950
零点凝几倍

14:16.950 --> 14:17.430
对吧

14:17.430 --> 14:18.790
那么到右边的距离

14:18.790 --> 14:19.670
或者到下面的距离

14:19.670 --> 14:20.350
都是一个比例

14:20.350 --> 14:22.110
我们可以用个margin

14:22.110 --> 14:23.070
margin

14:23.070 --> 14:24.390
proper

14:24.390 --> 14:25.630
刚才读的啥

14:25.630 --> 14:26.110
这是

14:27.550 --> 14:29.670
proportion

14:29.870 --> 14:31.430
margin proportion

14:32.630 --> 14:33.950
感觉真像个啥子一样

14:34.750 --> 14:36.150
那么我们写个零点凝5

14:36.150 --> 14:36.870
比方说

14:36.870 --> 14:38.830
那就是整个宽度的零点凝5

14:38.830 --> 14:40.070
和整个高度的零点凝5

14:40.070 --> 14:40.270
对吧

14:40.270 --> 14:41.230
你左边右边的距离

14:41.230 --> 14:42.230
和你下面的距离

14:42.230 --> 14:42.950
那行了

14:42.950 --> 14:44.430
那咱们在这边来写一些

14:45.030 --> 14:45.790
复制一下

14:47.550 --> 14:49.150
那么这边我们就是

14:49.470 --> 14:51.430
water file

14:51.430 --> 14:52.590
orange file

14:52.590 --> 14:52.990
对吧

14:52.990 --> 14:53.670
一样的道理

14:53.670 --> 14:54.230
对不对

14:54.510 --> 14:55.990
那么这边好了过后

14:55.990 --> 14:57.110
我们这接下来要干嘛

14:57.110 --> 14:59.390
今天还不着急写图片的水印

14:59.430 --> 15:00.190
我们应该干嘛呢

15:00.190 --> 15:01.030
应该就是

15:01.670 --> 15:03.630
对水印图片

15:03.630 --> 15:05.190
也不能改原式图片来的尺寸

15:05.190 --> 15:05.750
对吧

15:05.750 --> 15:09.030
对水印图片进行说放

15:09.870 --> 15:10.510
进行说放

15:10.510 --> 15:11.750
那么我们学了说放过后

15:11.750 --> 15:13.590
以后除了做水印之外

15:13.590 --> 15:15.670
你还可以对原式图片也进行说放

15:15.670 --> 15:16.430
存几张

15:16.430 --> 15:17.150
好几张图片

15:17.150 --> 15:17.630
对吧

15:17.630 --> 15:18.670
那么怎么来说放呢

15:18.670 --> 15:19.790
其实非常简单

15:19.790 --> 15:22.110
它就是用这个water

15:22.110 --> 15:23.230
比方我们对它在说放

15:23.230 --> 15:24.230
就是一个scale

15:24.230 --> 15:24.910
对吧

15:24.910 --> 15:26.190
这个东西能理一下

15:26.190 --> 15:27.230
一就是一倍

15:27.230 --> 15:28.390
零点五倍

15:29.390 --> 15:30.270
二倍对不对

15:30.270 --> 15:31.750
就不是这样子说放了吗

15:31.750 --> 15:33.550
那么关键是说放多少呢

15:34.670 --> 15:35.830
说放多少呢

15:35.830 --> 15:36.870
那么我们你看

15:36.870 --> 15:37.710
我们比方说

15:37.710 --> 15:39.590
我们这里有一个逻辑在这里边

15:39.590 --> 15:41.390
比方说原式图片

15:41.390 --> 15:43.550
就是当前

15:43.550 --> 15:45.310
当前的情况是

15:45.310 --> 15:48.270
原式图宽度

15:48.270 --> 15:53.430
比上水印图的宽度

15:54.110 --> 15:54.990
比方说吧

15:54.990 --> 15:55.910
等于

15:56.510 --> 15:57.470
等于三

15:57.950 --> 15:59.510
比方等于五

15:59.510 --> 16:00.350
比方说10比2

16:00.350 --> 16:01.790
10比2是不是5

16:01.790 --> 16:03.110
对不对

16:03.110 --> 16:03.670
比方说吧

16:03.670 --> 16:04.710
举个例子

16:04.710 --> 16:07.030
那么我们目标的比例是什么呢

16:07.030 --> 16:07.670
目标的比例

16:07.670 --> 16:09.110
我们这里写的是10

16:09.110 --> 16:09.630
对吧

16:09.630 --> 16:11.670
那么目标的比例是不是10比1

16:11.670 --> 16:12.350
对不对

16:12.350 --> 16:14.270
什么目标的比例是10

16:14.270 --> 16:15.750
那么我们水印图片

16:15.750 --> 16:17.950
你觉得应该放大还是缩小

16:17.950 --> 16:21.950
水印图片的宽度应该是放大还是缩小

16:21.950 --> 16:23.030
是不是要缩小啊

16:23.030 --> 16:23.430
对不对

16:23.430 --> 16:24.030
是要缩小

16:24.030 --> 16:25.350
缩小多少倍呢

16:25.350 --> 16:26.750
是不是五除一十

16:26.790 --> 16:27.110
对吧

16:27.110 --> 16:27.630
五除一十

16:27.630 --> 16:29.230
就是变成你以前的0.5倍

16:29.230 --> 16:29.870
所以说我们

16:29.870 --> 16:31.670
只要把当前图片的比例算出来

16:31.670 --> 16:33.430
然后再处于目标就完成了

16:33.430 --> 16:33.670
好

16:33.670 --> 16:35.550
因此我们算一下当前图片的比例

16:37.310 --> 16:38.150
当前的

16:42.550 --> 16:44.710
然后当前的就是我们可以这样子

16:44.710 --> 16:46.950
Orange它的Bitmap

16:46.950 --> 16:48.070
它的就是位图

16:48.070 --> 16:51.150
位图就是一个一个的就是那个

16:51.150 --> 16:51.670
像素点

16:51.670 --> 16:53.350
这种图片格式

16:53.350 --> 16:54.750
然后取它的宽度

16:54.750 --> 16:58.270
宽度再去处于什么Water的

16:58.310 --> 17:01.150
那个位图Bitmap的宽度

17:01.150 --> 17:01.430
是吧

17:01.430 --> 17:02.750
所以算出当前比例

17:02.750 --> 17:04.190
然后我们的目标比例

17:05.110 --> 17:05.870
是已经有了

17:05.870 --> 17:06.110
对吧

17:06.110 --> 17:12.230
Proportion

17:12.230 --> 17:13.750
目标比例Proportion

17:13.750 --> 17:17.070
然后我们去设置一下Orange

17:18.630 --> 17:19.710
设置Water

17:19.710 --> 17:20.310
Scale

17:21.510 --> 17:22.990
把当前的比例

17:25.390 --> 17:26.870
是把当前的比例

17:26.870 --> 17:27.830
目标比例

17:27.830 --> 17:29.190
Proportion

17:29.230 --> 17:31.310
处于当前的比例

17:31.310 --> 17:32.150
是这样吗

17:32.150 --> 17:32.550
不是

17:32.550 --> 17:33.310
是当前比例

17:33.310 --> 17:34.230
处于目标比例

17:34.230 --> 17:34.910
写法案了

17:36.150 --> 17:37.950
当前比例去处于目标比例

17:38.950 --> 17:40.430
Proportion

17:40.430 --> 17:41.110
对不对

17:41.110 --> 17:41.470
是不是

17:41.470 --> 17:42.870
来一个说放

17:42.870 --> 17:44.350
把水印说发了过后

17:44.350 --> 17:45.870
我们再去写这个水印

17:45.870 --> 17:49.680
把这个代码复制过来

17:49.680 --> 17:50.600
说发完了过后

17:50.600 --> 17:54.410
我们再去写入水印

17:54.410 --> 18:00.140
写入水印

18:00.140 --> 18:00.380
好

18:00.380 --> 18:02.460
咱们看一下

18:02.500 --> 18:05.100
我们这边就把这个地方

18:05.100 --> 18:06.180
就调到上面那个函数了

18:06.180 --> 18:07.220
叫做Mark

18:09.460 --> 18:11.340
Water传进去

18:11.340 --> 18:12.740
Orange传进去

18:13.940 --> 18:18.110
然后Targets传进去

18:18.110 --> 18:19.390
TargetsFile对吧

18:21.350 --> 18:21.630
好

18:21.630 --> 18:22.070
保存

18:24.230 --> 18:25.990
接下来我们看一下新图片

18:26.750 --> 18:27.070
是吧

18:27.070 --> 18:28.110
所以按比例说小了

18:28.110 --> 18:28.750
对不对

18:28.750 --> 18:29.870
如果你觉得太小的话

18:29.870 --> 18:32.310
你可以把这个比例稍微放小一点

18:32.310 --> 18:33.030
比方的5倍

18:35.690 --> 18:36.970
是不是变大了一点了

18:36.970 --> 18:37.690
对吧

18:37.690 --> 18:38.010
好

18:38.010 --> 18:39.250
那么这是这个地方搞定了

18:39.250 --> 18:40.650
那么图片位置就是X

18:40.650 --> 18:41.170
Y了

18:41.170 --> 18:41.410
对吧

18:41.410 --> 18:42.410
位置

18:42.410 --> 18:45.130
我们要首先算出它离右边的距离

18:45.130 --> 18:46.330
因为我们放了右下角

18:46.330 --> 18:46.730
对吧

18:46.730 --> 18:48.530
放离右边的距离和离下边的距离

18:48.530 --> 18:49.810
这个很好算

18:49.810 --> 18:51.450
计算位置

18:51.450 --> 18:52.210
我们算一下

18:52.210 --> 18:54.170
这个就是Right离右边的距离

18:54.170 --> 18:54.650
怎么算呢

18:54.650 --> 18:57.570
就是原始图片的宽度

18:57.570 --> 18:59.770
乘以这个Marking的比例

18:59.770 --> 19:00.170
对吧

19:00.170 --> 19:01.210
Marking是0.05

19:01.210 --> 19:02.250
就宽度乘以这个比例

19:02.250 --> 19:03.570
就是离右边的距离

19:03.650 --> 19:05.290
然后离下边的距离

19:05.290 --> 19:08.290
我们可以用原始图片的高度

19:08.290 --> 19:10.650
乘以Marking

19:10.650 --> 19:11.850
Properation

19:11.850 --> 19:12.850
对吧

19:12.850 --> 19:15.170
所以右边和下边就算出来了

19:15.170 --> 19:16.290
那么我们要算的是什么

19:16.290 --> 19:16.610
组

19:16.610 --> 19:18.130
这个图片的左上角的坐标

19:18.130 --> 19:19.370
左上角的坐标是不是

19:19.370 --> 19:21.170
就是我们来算X

19:21.170 --> 19:24.050
X就是原始图片的宽度

19:24.050 --> 19:25.850
减去离右边的距离

19:25.850 --> 19:28.170
再减去自身这个属硬图片的宽度

19:28.170 --> 19:28.810
对吧

19:30.010 --> 19:32.170
那么Y坐标就是

19:32.210 --> 19:34.610
原始图片的高度

19:34.610 --> 19:36.170
减去Button

19:36.170 --> 19:41.250
再减去随硬图片的高度

19:41.250 --> 19:45.760
那么XY传进去

19:45.760 --> 19:46.440
保存

19:47.960 --> 19:49.200
那你可是不是在照了

19:49.200 --> 19:49.920
对吧

19:49.920 --> 19:50.840
你右边要宽一点

19:50.840 --> 19:51.840
因为宽度要宽一点

19:51.840 --> 19:52.600
我们算是比例

19:52.600 --> 19:53.160
对不对

19:53.160 --> 19:53.480
好了

19:53.480 --> 19:54.800
比例如果说你觉得多的话

19:54.800 --> 19:56.280
0.01吗

19:56.280 --> 19:58.400
这个可以调整的

19:58.400 --> 19:59.240
随意就放照了

19:59.240 --> 20:00.000
对吧

20:00.000 --> 20:00.120
好

20:00.120 --> 20:01.520
那么我们就得到一个新的图片

20:01.520 --> 20:02.360
OK

20:02.360 --> 20:03.720
那么现在我们把这个函数

20:03.720 --> 20:04.360
实现了过后

20:04.480 --> 20:06.480
我们复制一下吧

20:08.360 --> 20:09.720
到那个就是Route里面去

20:09.720 --> 20:11.480
我们之前不是做过上传图片吗

20:11.480 --> 20:12.720
upload对吧

20:12.720 --> 20:14.080
我们把函数写到这儿

20:15.640 --> 20:21.630
把这个代码扔过来

20:21.630 --> 20:22.350
写到这儿

20:22.350 --> 20:26.320
拍是应有了

20:26.320 --> 20:29.600
那么这边就删除掉了

20:29.600 --> 20:30.240
很留着吧

20:30.240 --> 20:31.680
你们可以看一下

20:31.680 --> 20:33.320
引力是加上

20:33.320 --> 20:34.920
那么上传图片这里

20:34.920 --> 20:36.720
我们可以给图片加水营了

20:36.720 --> 20:37.920
这个方法已经有了

20:37.920 --> 20:39.640
那么什么时候加水营呢

20:40.920 --> 20:42.480
什么时候加水营呢

20:42.480 --> 20:43.680
我们可以这样子

20:43.680 --> 20:47.600
就是他这边

20:47.600 --> 20:49.520
我们在这里的时候

20:49.520 --> 20:50.720
在这里的时候

20:50.720 --> 20:51.960
是不是已经上传完成了

20:51.960 --> 20:52.240
对吧

20:52.240 --> 20:53.760
已经把原式图片拿到了

20:53.760 --> 20:54.560
对不对

20:54.560 --> 20:55.880
已经把原式图片拿到了

20:55.880 --> 20:57.920
但是我现在原式图片了

20:57.920 --> 20:58.280
不要

20:58.280 --> 21:00.560
我不把它保存到Ore

21:00.560 --> 21:01.440
upload里边了

21:01.440 --> 21:03.400
我们把它保存到Oreng里边

21:03.400 --> 21:05.000
把它保存到这儿

21:05.000 --> 21:06.480
我们新建个文件夹

21:06.480 --> 21:08.200
Oreng

21:08.200 --> 21:09.320
我们把个原式图片

21:09.400 --> 21:09.960
保存到这儿

21:11.880 --> 21:13.280
Oreng

21:13.280 --> 21:15.920
然后我们把水营图片放到这里边

21:15.920 --> 21:17.120
没了意思吧

21:17.120 --> 21:18.240
水营图片放这儿

21:18.240 --> 21:21.280
原式图片放Oreng

21:21.280 --> 21:22.200
那么原式图片

21:22.200 --> 21:23.520
我们看它会自动保存的

21:23.520 --> 21:24.480
我们不用管

21:24.480 --> 21:24.600
好

21:24.600 --> 21:26.200
等它原式图片保存完了

21:26.200 --> 21:26.960
过后在这儿了

21:26.960 --> 21:27.520
对吧

21:27.520 --> 21:29.120
这个是不是得到

21:29.120 --> 21:30.880
我们用相同的文件名

21:30.880 --> 21:34.680
用一模一样的文件名

21:34.680 --> 21:37.400
然后它保存到这个upload里边

21:37.400 --> 21:37.920
在这里

21:39.400 --> 21:43.020
夹水营

21:43.020 --> 21:43.220
好

21:43.220 --> 21:44.300
我们就调用了什么

21:44.300 --> 21:45.860
调用之前那个marker方法

21:45.860 --> 21:46.180
对吧

21:46.180 --> 21:47.180
一个个来吧

21:47.180 --> 21:48.020
marker方法

21:48.020 --> 21:48.420
第一个

21:48.420 --> 21:50.740
传水应图片

21:50.740 --> 21:51.460
水应图片

21:51.460 --> 21:53.580
我们就给它传啥呢

21:53.580 --> 21:55.140
我就给它传这个吧

21:55.140 --> 21:56.300
我就给它传这个

21:56.300 --> 21:56.940
水应图片

21:56.940 --> 21:57.820
我们可以把保存到

21:57.820 --> 22:00.380
这个public目录下面的这儿吧

22:00.380 --> 22:01.540
email级里边

22:01.540 --> 22:02.220
给它保存到这儿

22:03.740 --> 22:04.220
water

22:05.620 --> 22:06.500
给它复制一下

22:07.500 --> 22:07.820
复制

22:08.940 --> 22:09.460
粘贴到这儿

22:10.460 --> 22:11.180
把保存到这儿

22:12.860 --> 22:14.060
然后我把个orange

22:14.060 --> 22:15.660
也从计刺里边去掉

22:16.660 --> 22:17.500
计刺一个

22:18.500 --> 22:19.260
public

22:19.780 --> 22:20.540
orange

22:20.540 --> 22:21.620
这个地方应该去掉

22:23.220 --> 22:23.420
好

22:23.420 --> 22:25.340
然后水应图片的位置

22:25.340 --> 22:26.940
我们这里用一个产量

22:26.940 --> 22:27.460
得到

22:28.020 --> 22:29.500
water pass

22:30.180 --> 22:31.900
pass result

22:31.900 --> 22:33.340
当前目录

22:33.340 --> 22:35.540
返回上级

22:35.540 --> 22:36.540
然后public

22:38.460 --> 22:39.100
image

22:40.420 --> 22:41.780
下面的water

22:41.780 --> 22:42.660
第二pg

22:42.660 --> 22:42.940
对吧

22:42.940 --> 22:44.300
这是水应图片的目录

22:44.300 --> 22:44.500
好

22:44.500 --> 22:45.420
第一个参数是不是有了

22:45.420 --> 22:46.580
水应图片的目录

22:46.580 --> 22:46.860
好

22:46.860 --> 22:47.500
第二个参数

22:47.500 --> 22:49.220
第二参数是原式图片

22:49.220 --> 22:50.140
在原式图片的话

22:50.140 --> 22:51.300
我这里有可能

22:51.300 --> 22:52.540
因为它保存是一步的

22:52.540 --> 22:53.100
知道吧

22:53.100 --> 22:54.340
它保存是一步的

22:54.340 --> 22:55.340
所以说它这个时候

22:55.340 --> 22:56.860
它不一定有原式图片

22:56.860 --> 22:57.580
已经生成出来了

22:57.580 --> 22:58.180
不一定的

22:59.420 --> 23:00.780
我没有具体的看文档

23:00.780 --> 23:01.620
那么最好的就是

23:01.620 --> 23:02.820
利用它的buffer

23:02.820 --> 23:03.460
因为我们知道

23:03.460 --> 23:04.220
这个rack里边

23:04.580 --> 23:05.580
它是有一个buffer的

23:06.180 --> 23:07.060
我记得之前

23:07.060 --> 23:07.820
我看一下吧

23:09.780 --> 23:14.330
我们把这个

23:14.330 --> 23:15.330
把这个rack输出

23:15.330 --> 23:16.410
把这个rack输出

23:16.410 --> 23:17.210
我们看一下

23:17.210 --> 23:18.410
rack file就行了

23:18.410 --> 23:19.770
输出rack file

23:21.680 --> 23:23.120
我们来输出一下

23:23.120 --> 23:23.840
这边

23:23.840 --> 23:24.160
OK

23:24.160 --> 23:24.720
没问题

23:24.720 --> 23:26.000
现在我们到public里边

23:26.000 --> 23:27.760
我们之前在浏览器里面访问一下

23:27.760 --> 23:28.480
吧

23:28.480 --> 23:29.480
localhost

23:30.120 --> 23:31.240
5008

23:32.240 --> 23:33.280
就是印这个手的

23:35.200 --> 23:36.000
选择一个文件

23:36.000 --> 23:38.400
随便选择一个桌面

23:40.080 --> 23:40.800
就这个

23:41.600 --> 23:42.120
提交

23:43.520 --> 23:44.360
还要today

23:46.520 --> 23:47.520
我这里

23:47.520 --> 23:49.360
把之前有一个限制

23:50.560 --> 23:51.680
我不要限制了

23:52.080 --> 23:52.800
不要限制了

23:55.570 --> 23:56.050
重新来

23:58.000 --> 23:58.400
提交

23:59.520 --> 23:59.960
好了

24:00.240 --> 24:00.800
提交完成了

24:00.800 --> 24:01.200
我们看一下

24:01.200 --> 24:02.280
这里打印出来的结果

24:02.800 --> 24:03.760
file name

24:04.680 --> 24:05.800
它没有buffer

24:06.480 --> 24:07.320
它没有buffer

24:08.680 --> 24:09.200
我看一下

24:09.200 --> 24:10.280
我记得是有的

24:11.120 --> 24:12.520
我记得是有的那个

24:15.090 --> 24:15.970
叫做buffer

24:15.970 --> 24:16.810
有啊

24:17.170 --> 24:18.290
我们输出一下buffer呢

24:18.490 --> 24:19.130
它是不是没有

24:19.130 --> 24:20.890
这只是没有给我显示出来

24:21.450 --> 24:21.930
buffer

24:24.200 --> 24:24.680
再来

24:26.990 --> 24:27.550
orange

24:28.270 --> 24:28.710
提交

24:29.470 --> 24:30.390
然后我们看一下

24:30.390 --> 24:30.830
控制台

24:31.310 --> 24:31.870
undefend

24:32.190 --> 24:33.390
它就没够显

24:33.390 --> 24:34.230
它就没有

24:34.230 --> 24:34.830
它保存

24:34.830 --> 24:36.230
用文件的方式来保存的时候

24:36.230 --> 24:36.790
它就没有

24:37.150 --> 24:38.270
你看原始图片已经有了

24:39.470 --> 24:40.430
那么它就没有buffer

24:40.430 --> 24:40.950
没有buffer

24:40.950 --> 24:41.670
那没办法了

24:42.590 --> 24:44.110
那我只能得到它的原始路径了

24:44.550 --> 24:45.270
它原始路径

24:45.270 --> 24:45.790
pass

24:45.790 --> 24:46.070
是吧

24:46.070 --> 24:46.630
说在这

24:47.030 --> 24:47.390
对不对

24:47.910 --> 24:48.390
在这

24:48.390 --> 24:49.110
那么pass

24:49.110 --> 24:50.110
我们把个pass拿到

24:51.070 --> 24:52.230
这是天

24:52.510 --> 24:53.310
这是这个

24:53.310 --> 24:53.870
req

24:53.870 --> 24:54.470
file

24:54.470 --> 24:55.230
点pass

24:55.990 --> 24:57.150
这是原始图片

24:57.470 --> 24:58.270
然后后边

24:58.270 --> 24:58.910
target

24:58.910 --> 24:59.150
file

24:59.150 --> 24:59.750
我们存的

24:59.750 --> 25:01.070
新的路径是什么呢

25:01.070 --> 25:02.550
新的路径是这样

25:02.670 --> 25:03.430
新的路径

25:03.430 --> 25:04.950
我们要勾件一下

25:05.950 --> 25:07.950
new pass

25:09.390 --> 25:10.270
新的路径

25:11.350 --> 25:12.470
新的路径

25:12.470 --> 25:13.790
就是新的路径

25:13.790 --> 25:14.950
是来自于

25:15.270 --> 25:16.390
这个就是

25:20.750 --> 25:21.590
用pass

25:21.910 --> 25:22.750
result

25:23.350 --> 25:24.350
当前目录

25:24.350 --> 25:25.590
返回上级目录

25:25.790 --> 25:26.670
返回上级目录

25:26.670 --> 25:27.350
public

25:27.350 --> 25:28.190
然后

25:28.550 --> 25:29.390
upload

25:29.630 --> 25:30.270
到这

25:30.430 --> 25:32.310
然后文件名

25:32.310 --> 25:33.590
用一样的文件名

25:33.790 --> 25:34.470
file

25:34.830 --> 25:35.910
用一样的文件名

25:35.910 --> 25:37.030
这是我们新的路径

25:37.030 --> 25:38.430
把新的路径传过去

25:39.350 --> 25:39.670
好了

25:39.670 --> 25:40.750
我们U2要记制不变

25:40.750 --> 25:41.630
保持不变

25:42.470 --> 25:44.070
我们这里等待它完成

25:44.070 --> 25:44.990
二位置

25:45.150 --> 25:45.870
加水印

25:46.270 --> 25:46.950
保存

25:47.230 --> 25:48.230
咱们把这个两个三了

25:48.230 --> 25:49.430
这两个我们刚才测试的

25:49.550 --> 25:50.590
接下来再来看

25:52.030 --> 25:53.670
照这边来选择一个文件

25:54.550 --> 25:55.070
这里

25:55.390 --> 25:56.030
提交

25:57.350 --> 25:58.550
文件出来了

25:59.070 --> 25:59.910
我们的狗呢

26:02.730 --> 26:04.050
我这个图片太大了

26:04.050 --> 26:05.250
这个图片太大了

26:05.810 --> 26:08.890
这里面是我放大了

26:09.930 --> 26:10.730
我的狗呢

26:11.970 --> 26:12.450
在这

26:12.450 --> 26:13.650
这个图片太大了

26:13.650 --> 26:14.530
所以加了水印的

26:14.930 --> 26:15.930
这样子我们这里

26:15.930 --> 26:17.330
这是加了水印的图片

26:17.570 --> 26:18.570
这是原式图片

26:18.570 --> 26:18.850
对吧

26:18.850 --> 26:19.450
都有了

26:20.250 --> 26:20.690
对不对

26:20.690 --> 26:22.090
这就是图片水印

26:22.170 --> 26:23.290
当然你可以用类似的方式

26:23.290 --> 26:24.730
因为它这里面提供了很多功能

26:25.170 --> 26:26.890
你可以用这种上传的时候

26:26.890 --> 26:28.210
再去保存多个图片

26:28.730 --> 26:29.890
图片进行裁剑

26:29.890 --> 26:30.810
进行说放

26:31.130 --> 26:32.370
进行质量的调整

26:32.370 --> 26:33.050
这些都可以的

26:33.170 --> 26:34.170
你们灵活处理

26:34.450 --> 26:35.450
我就不一一说明

26:35.450 --> 26:36.170
你可以去看一下

26:36.810 --> 26:37.810
包括一个Resize

26:38.330 --> 26:38.850
Scale

26:39.370 --> 26:40.570
那么还有这个裁剑

26:40.570 --> 26:41.050
对不对

26:41.250 --> 26:41.890
都可以的

26:42.610 --> 26:44.450
你们去可以去继续用一下

26:44.730 --> 26:45.690
我这里不再说了

26:45.690 --> 26:46.210
所以说

26:46.250 --> 26:46.970
其实还有个常理

26:46.970 --> 26:48.170
就是对图片的裁剑

26:48.330 --> 26:49.450
浮起保存多分

26:49.770 --> 26:50.450
多分图片

26:50.450 --> 26:51.610
那么你们自寻搞定

26:51.810 --> 26:52.330
一般来说

26:52.330 --> 26:53.610
跟你说一下裁剑的话

26:53.650 --> 26:54.370
一般来说

26:54.370 --> 26:55.810
比方说一个图片生成的名字

26:55.810 --> 26:56.290
是这个

26:57.090 --> 26:57.890
叫杰皮剑

26:58.130 --> 26:59.250
如果裁剑了过后

26:59.250 --> 27:00.690
还有这样比方说大图

27:00.690 --> 27:01.970
我们可以加上一个Big

27:02.650 --> 27:04.250
叫杰皮剑加上个后维

27:04.410 --> 27:05.050
中图

27:05.050 --> 27:06.010
用名字都一样的

27:06.330 --> 27:06.850
Made

27:06.850 --> 27:07.530
叫杰皮剑

27:07.690 --> 27:08.730
这个就是圆图

27:09.370 --> 27:10.890
圆图或者是加上个Orange

27:11.530 --> 27:12.210
小图

27:12.410 --> 27:14.050
比方说迷你

27:14.210 --> 27:14.930
叫杰皮剑

27:15.210 --> 27:16.890
就是根据你加个后维就完成了

27:16.890 --> 27:17.770
这样的客户端请求

27:17.770 --> 27:18.730
也非常好请求

27:18.770 --> 27:19.330
那么到时候

27:19.330 --> 27:22.210
你保存原图图片保存几分

27:22.210 --> 27:23.290
原图图片保存一份

27:23.490 --> 27:24.890
upload里边保存几份

27:24.890 --> 27:27.250
带水印的裁剑过后的图片

27:27.250 --> 27:27.690
都可以

27:29.050 --> 27:29.330
好了

27:29.330 --> 27:31.810
那么这里就是关于图片的上传

27:32.210 --> 27:33.330
给大家开一些思路

