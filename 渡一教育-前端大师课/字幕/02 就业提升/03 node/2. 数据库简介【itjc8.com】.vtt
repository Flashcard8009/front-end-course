WEBVTT

00:00.500 --> 00:03.380
咱们第一张就结束了

00:03.380 --> 00:04.940
接下来我们进入第二张

00:04.940 --> 00:06.420
卖车课

00:06.420 --> 00:09.100
我们这门课呢 叫做note接课

00:09.100 --> 00:10.780
实际上卖车课啊 这个东西啊

00:10.780 --> 00:12.820
跟note接课没什么关系

00:12.820 --> 00:15.380
它是属于数据库的翻车

00:15.380 --> 00:18.620
我们说我们这几课呢 先对数据库做一个简介

00:18.620 --> 00:20.580
对于前端开发者来说啊

00:20.580 --> 00:24.380
这个数据库啊 它是一个全新的指示

00:24.380 --> 00:26.980
它跟前端没有什么关系

00:27.180 --> 00:30.900
它是一个纯粹的后端领域的一块知识

00:30.900 --> 00:33.420
而且呢 这个知识啊

00:33.420 --> 00:36.260
它的水非常非常深啊

00:36.260 --> 00:38.020
它的深度啊

00:38.020 --> 00:39.460
它已经达到什么程度了的

00:39.460 --> 00:40.460
达到数据库

00:40.460 --> 00:41.540
你专门学数据库

00:41.540 --> 00:42.940
你可以就业

00:42.940 --> 00:45.220
你只学数据库啊

00:45.220 --> 00:48.420
然后就有一个东西叫做数据库管理员

00:48.420 --> 00:49.820
对吧 dba

00:49.820 --> 00:51.460
你们学一个招聘网上收一下

00:51.460 --> 00:53.540
它可以专门成为一个职业的

00:53.540 --> 00:54.820
你们学前端学了这么久

00:54.860 --> 00:57.740
你应该知道成为一个职业

00:57.740 --> 01:00.380
需要多么大的一个知识量

01:00.380 --> 01:01.180
所以说呢

01:01.180 --> 01:02.780
数据库这一块啊

01:02.780 --> 01:05.660
它是第一 首先它是一个纯粹的后端知识

01:05.660 --> 01:06.060
第二呢

01:06.060 --> 01:09.060
它们跟那个漏德协是没有直接的关联

01:09.060 --> 01:09.860
第三呢

01:09.860 --> 01:11.660
它的水非常深

01:11.660 --> 01:14.100
那么对于我们前端开发者而言的话

01:14.100 --> 01:15.100
数据库要不要学

01:15.100 --> 01:16.580
肯定要学啊

01:16.580 --> 01:18.420
因为你毕竟要多多讨讨了解一些后端

01:18.420 --> 01:21.140
那数据库肯定是你着不着不开的

01:21.140 --> 01:22.260
第二个呢

01:22.260 --> 01:22.940
要学的话

01:22.940 --> 01:23.660
但是呢

01:23.660 --> 01:25.260
由于它在面试的时候啊

01:25.260 --> 01:26.860
前端面试的时候

01:26.860 --> 01:29.540
我反正从来没有听到过有面试官

01:29.540 --> 01:32.540
会面对前端开发者面试数据库的知识

01:32.540 --> 01:34.140
他可能就问一问

01:34.140 --> 01:35.180
有没有接触过数据库

01:35.180 --> 01:36.300
接触的是整个数据库

01:36.300 --> 01:38.220
可能就问了这么几句就完事了

01:38.220 --> 01:40.740
他不会去问你数据库里边的知识

01:40.740 --> 01:43.500
所以说我们学习数据库的真正的作用呢

01:43.500 --> 01:45.580
是在真实的开发地边

01:45.580 --> 01:48.340
如果说你要用漏德协是大一台服务器

01:48.340 --> 01:52.460
可能你要在数据库里边存一些东西

01:52.460 --> 01:54.860
那么我们这就可能就先来聊一聊

01:54.860 --> 01:57.100
这个数据库它到底是一个什么玩意

01:57.100 --> 01:58.740
它能解决什么样的问题

01:58.740 --> 02:00.220
那么我们能用它干嘛

02:00.220 --> 02:01.980
它跟漏德协是没关系

02:01.980 --> 02:02.500
但是呢

02:02.500 --> 02:03.740
我们为什么又要学它

02:03.740 --> 02:03.940
对吧

02:03.940 --> 02:06.580
我们简单来聊一聊

02:06.580 --> 02:08.540
首先我们来看数据库能干什么

02:10.060 --> 02:11.260
它主要的作用呢

02:11.260 --> 02:12.900
是这么四个方面

02:12.900 --> 02:13.300
第一个呢

02:13.300 --> 02:16.380
是能够持久的存出数据

02:16.380 --> 02:19.060
哪里想我们之前的数据存哪儿了

02:19.060 --> 02:20.420
就两个位置嘛

02:20.420 --> 02:21.940
一个是存变量里边

02:22.140 --> 02:24.140
不管你是一个数字

02:24.140 --> 02:24.700
字无串

02:24.700 --> 02:25.740
还是一个对象也好

02:25.740 --> 02:27.580
总之是存变量里边的

02:27.580 --> 02:29.540
存变量里边还有一个什么样的特点

02:29.540 --> 02:30.700
变量在哪个地方

02:30.700 --> 02:32.380
是不是在内存里边

02:32.380 --> 02:34.300
而内存是一个什么样的特点

02:34.300 --> 02:36.500
内存的存取速度很快

02:36.500 --> 02:36.740
对吧

02:36.740 --> 02:39.380
直接跟CPU来打交道

02:39.380 --> 02:39.980
第二个呢

02:39.980 --> 02:42.620
内存的它非常容易丢失

02:42.620 --> 02:43.340
对吧

02:43.340 --> 02:44.620
你一断电

02:44.620 --> 02:45.820
进行重启

02:45.820 --> 02:47.940
或者是你把程序一退

02:47.940 --> 02:49.660
是不是之前的内存里边

02:49.660 --> 02:50.420
东西就没了

02:50.420 --> 02:51.020
对不对

02:51.060 --> 02:53.060
你之前好不容易用户的操作

02:53.060 --> 02:55.700
你把变量里边的某些属性会变化

02:55.700 --> 02:56.180
对吧

02:56.180 --> 02:58.300
把这些变化的值都变化好了

02:58.300 --> 02:59.500
然后你只要一关程序

02:59.500 --> 03:01.820
全部一切的都得重新来

03:01.820 --> 03:04.020
这也是以前一个可能在问

03:04.020 --> 03:05.740
就是咱们网页上的数据

03:05.740 --> 03:07.100
怎么把它保存起来

03:07.100 --> 03:08.660
后来咱们学到阿迦克斯

03:08.660 --> 03:10.500
我们用阿迦克斯代保存的

03:10.500 --> 03:12.820
比方说你添加一个用户

03:12.820 --> 03:13.500
注册一个用户

03:13.500 --> 03:15.580
你是一个阿迦克斯请求

03:15.580 --> 03:16.940
那么这个请求呢

03:16.940 --> 03:18.740
服务器那边会把数据保存起来

03:18.740 --> 03:19.500
它怎么保存的

03:19.540 --> 03:20.820
它就是用数据保存的

03:21.500 --> 03:24.380
我们内存是不能持久性的存储数据的

03:24.380 --> 03:26.460
而且内存的容量也非常有限

03:26.460 --> 03:27.100
对吧

03:27.100 --> 03:29.660
数据过实际上解决的问题

03:29.660 --> 03:32.140
用一句最本质的话来说

03:32.140 --> 03:39.300
就是来适配内存和磁盘之间的存储格式

03:39.300 --> 03:40.260
不一致

03:40.260 --> 03:42.220
它来解决这样的问题

03:42.220 --> 03:45.100
如果说内存跟磁盘的存储格式是一致的

03:45.100 --> 03:46.380
它就没有什么问题了

03:46.540 --> 03:49.580
因为我们知道存在那个磁盘里面存储

03:49.580 --> 03:52.020
它存储就是一个平面的数据

03:52.020 --> 03:52.220
对吧

03:52.220 --> 03:53.260
一个字幕刷

03:53.260 --> 03:55.340
或者是一个二进字的编码

03:55.340 --> 03:55.740
对吧

03:55.740 --> 03:57.980
它一个非常非常平面的数据

03:57.980 --> 04:00.420
它跟我们内存的格式就不太一样

04:00.420 --> 04:02.340
导致了我们

04:02.340 --> 04:04.460
但是磁盘它是可以永久存储的

04:04.460 --> 04:04.700
对不对

04:04.700 --> 04:06.020
所以我们数据过存的时候

04:06.020 --> 04:07.420
也是存在磁盘上

04:07.420 --> 04:09.580
存在硬盘文件里面

04:09.580 --> 04:11.420
在磁盘里面都是有文件形式

04:11.420 --> 04:12.380
来存储数据的

04:12.380 --> 04:14.020
所以它存在文件里面了

04:14.020 --> 04:15.060
由于格式不一致

04:15.100 --> 04:17.060
所以说我们需要一个专门的东西来

04:17.060 --> 04:17.740
帮我们管理

04:17.740 --> 04:19.380
这就是数据库

04:19.380 --> 04:20.140
数据库

04:20.140 --> 04:22.540
当然我们能不能持久化数据

04:22.540 --> 04:23.780
我们能不能不用数据库

04:23.780 --> 04:24.420
当然也可以

04:24.420 --> 04:25.740
比方说你用一个接受文件

04:25.740 --> 04:25.900
对吧

04:25.900 --> 04:26.620
我们现在学的

04:26.620 --> 04:28.060
扰的接受里面文件处理

04:28.060 --> 04:28.620
对不对

04:28.620 --> 04:30.820
我们写一个内容到文件里面去

04:30.820 --> 04:32.260
要用的时候把读出来

04:32.260 --> 04:33.460
但是如果说数据一大

04:33.460 --> 04:34.380
这个东西很难管理

04:35.500 --> 04:38.060
你看我们比方说你做一个系统

04:38.060 --> 04:38.660
不说多多了

04:38.660 --> 04:40.220
100万个用户

04:40.220 --> 04:42.140
每个用户的战案

04:42.180 --> 04:43.980
他的信息他发布的文章

04:43.980 --> 04:45.420
乱七八糟的信息

04:45.420 --> 04:47.060
可能占10kb

04:47.060 --> 04:48.660
那一看一百万个用户

04:48.660 --> 04:50.380
都有占多少空间

04:50.380 --> 04:51.860
你这个程序一启动

04:51.860 --> 04:52.860
得占多少空间

04:52.860 --> 04:54.180
因为你要把这些东西读出来

04:54.180 --> 04:55.020
一不读出来的话

04:55.020 --> 04:55.620
一不到内存

04:55.620 --> 04:59.740
他怎么来读取这些具体的数据呢

04:59.740 --> 05:02.140
而且你读的过程中也很麻烦

05:02.140 --> 05:03.140
你的文件太大了

05:03.140 --> 05:04.260
你存的数据越来越多

05:04.260 --> 05:04.820
文件太大了

05:04.820 --> 05:06.820
比方说你用接受格式来存储

05:06.820 --> 05:08.780
你要精确的读其中一个用户的信息

05:08.780 --> 05:09.860
是不是很难读

05:09.860 --> 05:10.100
对不对

05:10.100 --> 05:11.420
你只能把全部把它读到内存

05:11.420 --> 05:13.380
然后再用内存里边的数组的筛选

05:13.380 --> 05:14.100
把它读出来

05:14.100 --> 05:15.060
就很麻烦

05:15.060 --> 05:17.260
所以数据过程专门来解决这些问题

05:17.260 --> 05:19.860
它能够持久的存储数据

05:19.860 --> 05:23.020
而且它能够自动的备份数据

05:23.020 --> 05:24.820
而且可以轻松的来恢复数据

05:24.820 --> 05:27.060
就是你之前比方说我们每隔一天

05:27.060 --> 05:29.420
去备份一次数据

05:29.420 --> 05:31.700
那么如果说后边遇到一些数据问题

05:31.700 --> 05:33.900
我们不至于造成太大的损失

05:33.900 --> 05:37.060
我们可以把恢复到之前的一个时间点

05:37.140 --> 05:41.460
它最重要的是能够快速的存取数据

05:41.460 --> 05:42.420
它不仅能够存取

05:42.420 --> 05:44.060
而且是非常快速的存取

05:44.060 --> 05:46.020
我们要往里边加一条数据

05:46.020 --> 05:47.700
而且非常快速

05:47.700 --> 05:50.060
要取一条数据也只取那么一点点

05:50.060 --> 05:51.380
我们取我们需要的数据

05:51.380 --> 05:52.380
只取那么一点点

05:52.380 --> 05:53.780
快速的存取

05:53.780 --> 05:55.940
第二个就是权限控制

05:55.940 --> 05:57.260
它可以让某些用户

05:57.260 --> 06:00.060
这些用户不是说中端用户

06:00.060 --> 06:01.580
是我们开发者

06:01.580 --> 06:02.740
到了你到公司里边

06:02.740 --> 06:04.340
他一般给你分配

06:04.340 --> 06:06.300
如果说你要操作数据户的话

06:06.300 --> 06:07.900
他一般会给你分配一个账号

06:07.900 --> 06:09.180
利用这个账号

06:09.180 --> 06:13.380
能够获取对数据户有限的操作权限

06:13.380 --> 06:14.380
它能做到这些

06:14.380 --> 06:15.900
那么这些普通的文件能不能做到

06:15.900 --> 06:18.540
能但是你自己要做很多事情

06:18.540 --> 06:20.300
数据户是把这些事情给你做好了

06:20.300 --> 06:23.500
你只要去学习它怎么用就行了

06:23.500 --> 06:25.060
当然我们再重申一次

06:25.060 --> 06:27.300
我们这一章节虽然讲数据户

06:27.300 --> 06:30.260
但是不会讲得非常非常深

06:30.260 --> 06:31.020
不会讲得太深

06:31.020 --> 06:33.660
我们把关键的知识给大家点到机制

06:33.660 --> 06:35.220
有些深的地方给它点到机制

06:35.220 --> 06:39.060
我们终点的是讲我们平时可能会用到的东西

06:39.060 --> 06:40.580
因为对显端来说数据户

06:40.580 --> 06:43.340
它不是一个特别特别重要的点

06:43.340 --> 06:45.100
好 今天我们来看一下数据户的分类

06:45.100 --> 06:47.300
这个数据户的类型

06:47.300 --> 06:48.580
我再多说两句

06:48.580 --> 06:49.420
就是前端的话

06:49.420 --> 06:51.220
学习数据户它主要是来存什么呢

06:51.220 --> 06:53.900
存一些跟前端相关的数据

06:53.900 --> 06:56.980
比方说日制

06:56.980 --> 06:58.180
用户的访问数据

06:58.180 --> 07:00.860
用户的偏好设置这些东西

07:00.860 --> 07:03.900
那么它可能会存到数据户里面

07:03.940 --> 07:05.380
一个是我们数据户的分类

07:05.380 --> 07:06.940
主要是分成三种

07:06.940 --> 07:10.540
最主要的是前面两种关系型和非关系型

07:10.540 --> 07:11.940
关系型是什么意思呢

07:11.940 --> 07:13.740
关系数据户我们看它的特点

07:13.740 --> 07:17.140
它的特点它是以表和表的关联构成的数据结构

07:17.140 --> 07:21.220
它的数据结构是它关注的是表和表之间的关联

07:21.220 --> 07:23.140
数据户在关系型数据户里面

07:23.140 --> 07:25.100
你可以怎么去理解

07:25.100 --> 07:28.900
关系型数据户你可以把它理解成一个一个销表

07:28.900 --> 07:31.420
一个销表里面是不是有很多的表格

07:31.420 --> 07:32.980
你看我们随便新建一个

07:32.980 --> 07:36.580
一个销表没有怎么用过

07:36.580 --> 07:37.620
一个销

07:37.620 --> 07:39.500
你看这是不是一个表格

07:39.500 --> 07:40.260
一个表格

07:40.260 --> 07:41.180
那么

07:42.180 --> 07:43.980
这里我们复制一个

07:43.980 --> 07:45.380
移动或复制

07:45.380 --> 07:46.740
点击确定

07:48.060 --> 07:49.140
移动或复制

07:49.140 --> 07:50.220
移到最后

07:51.780 --> 07:53.780
点到就行了

07:53.780 --> 07:56.580
那你看现在是不是四个表格了

07:56.580 --> 07:58.940
你可以认为整个工作表

07:58.940 --> 08:00.180
就整个一个销的工作表

08:00.180 --> 08:04.940
它就是一个数据户

08:04.940 --> 08:08.140
那么这里边它会分为很多的表

08:08.140 --> 08:09.140
很多的表格

08:09.140 --> 08:09.900
对不对

08:09.900 --> 08:12.100
那么这些表格之间的数据可能是有关联的

08:12.100 --> 08:15.940
比方第一个表格我们记录的是学生信息

08:15.940 --> 08:17.660
第二个表格是不是记录了班级信息

08:17.660 --> 08:19.300
班级跟学生是不是有关联的

08:19.300 --> 08:21.500
第三个表格是不是记录的是老师信息

08:21.500 --> 08:23.300
老师跟班级跟学生是不是都有关联

08:23.300 --> 08:25.220
第四个表格可能记录的是考试信息

08:25.220 --> 08:27.540
那么考试信息是不是跟这些东西都有关联

08:27.540 --> 08:28.140
对不对

08:28.180 --> 08:30.980
那么它要关注的是表格与表格之间的关联

08:30.980 --> 08:32.060
表与表之间的关联

08:32.060 --> 08:33.380
整个就是一个数据户

08:33.380 --> 08:34.860
它有多张表注程

08:34.860 --> 08:37.220
这就是关信型数据户的特点

08:37.220 --> 08:38.420
它的优点是什么呢

08:38.420 --> 08:42.180
它的优点是能够表达复杂的数据关系

08:42.180 --> 08:45.740
像如果说你开发一个后端系统

08:45.740 --> 08:47.740
后端系统里边业务数据很复杂的

08:47.740 --> 08:49.260
就像我们刚才觉得几个例子

08:49.260 --> 08:54.900
学生老师班级还有考试成绩

08:54.900 --> 08:55.820
对吧

08:55.820 --> 08:56.820
像这些东西

08:56.820 --> 08:58.180
如果说把摊开来

08:58.180 --> 08:59.820
就是详细记录下来的话

08:59.820 --> 09:01.460
关系也慢复杂的

09:01.460 --> 09:03.620
当然我们实际的开发中

09:03.620 --> 09:05.020
实际的后端系统里边

09:05.020 --> 09:06.540
它的复杂性更高

09:06.540 --> 09:07.940
那么这些东西就特别适合

09:07.940 --> 09:09.780
用关系数据库来存储

09:09.780 --> 09:11.980
因为它就能够表达复杂的数据关系

09:11.980 --> 09:12.780
表与表

09:12.780 --> 09:15.620
每一块数据每块数据是怎么关联的

09:15.620 --> 09:18.420
而且它提供了一个强大的查询语言

09:18.420 --> 09:20.460
我们把它叫舌口

09:20.460 --> 09:21.420
通过这个语言

09:21.420 --> 09:24.300
我们这一张截学习数据库

09:24.300 --> 09:26.300
主要就是学习它的查询语言

09:27.300 --> 09:29.940
它的查询语言能够精确的找到

09:29.940 --> 09:31.180
你想要的数据

09:31.180 --> 09:32.580
你在海量数据里边

09:32.580 --> 09:34.020
我们要找到一个小块

09:34.020 --> 09:35.500
比方某一个拥护张三

09:35.500 --> 09:37.180
它所发布过的文章

09:37.180 --> 09:38.660
或者是它在

09:38.660 --> 09:41.700
最近这三天内发布过的文章

09:41.700 --> 09:42.780
对吧

09:42.780 --> 09:44.220
那么或者是我要查询

09:44.220 --> 09:45.340
最近这三天内

09:45.340 --> 09:50.740
它追受欢迎的前三篇文章

09:50.740 --> 09:52.660
那么这些都可以轻松的通过

09:52.660 --> 09:53.700
它的查询语言

09:53.780 --> 09:55.380
从表格里边精确的找到

09:56.740 --> 09:56.940
好

09:56.940 --> 09:57.660
这是它的优点

09:57.660 --> 09:59.460
它的缺点也有

09:59.460 --> 10:01.700
它缺点是读写性能比较差

10:01.700 --> 10:03.340
因为它的数据关系比较复杂

10:03.340 --> 10:04.700
它里边内部的存储机构

10:06.260 --> 10:07.260
我就不过分说了吧

10:07.260 --> 10:08.380
点到提示

10:08.380 --> 10:11.460
总之它有意它要处理这些关系

10:11.460 --> 10:14.620
又受限于它的内部存储机制

10:14.620 --> 10:16.300
所以它的读写性能是比较差的

10:16.300 --> 10:17.660
你往里边写一条数据

10:17.660 --> 10:19.180
或者是改一条数据

10:19.180 --> 10:21.380
消耗的性能

10:22.020 --> 10:23.820
相对于非关系性

10:23.820 --> 10:26.220
会非关性形容数据回来说

10:26.220 --> 10:27.620
是比较差的

10:27.620 --> 10:29.620
特别是对于海量数据的读据

10:29.620 --> 10:30.860
比方说上一条数据

10:30.860 --> 10:31.980
几天万条数据

10:31.980 --> 10:34.820
对这样的数据的查询和读据

10:34.820 --> 10:37.100
查询和写入都是比较差的

10:37.100 --> 10:39.060
而它的数据结构比较实版

10:39.060 --> 10:39.980
怎么叫比较实版呢

10:39.980 --> 10:40.780
就好必说

10:40.780 --> 10:41.740
你这里一个表格

10:41.740 --> 10:44.020
这个表格就五列

10:44.020 --> 10:45.300
第一列学生学号

10:45.300 --> 10:46.420
第二列学生姓名

10:46.420 --> 10:48.300
第三列学生的年龄

10:48.300 --> 10:49.580
第四列学生的手机号

10:49.580 --> 10:51.340
第五列学生的地址

10:51.380 --> 10:52.220
那么你从此以后

10:52.220 --> 10:53.660
只能写这五列新习

10:53.660 --> 10:56.020
你不能临时的去多加一列

10:56.020 --> 10:56.860
你不行了

10:56.860 --> 10:58.900
不像JS语言里面的对象

10:58.900 --> 11:00.420
我什么时候想给他加一个手型

11:00.420 --> 11:01.300
就加一个手型

11:01.300 --> 11:02.140
他不行了

11:02.140 --> 11:02.820
他不行了

11:02.820 --> 11:03.820
他的列是固定的

11:03.820 --> 11:07.100
所以说他的结构是相对比较稳定的

11:07.100 --> 11:08.100
我们但是同时一代

11:08.100 --> 11:09.260
他的结构比较失败

11:09.260 --> 11:11.340
他不是很灵活

11:11.340 --> 11:12.620
他是有他的优点

11:12.620 --> 11:14.260
也有他的缺点

11:14.260 --> 11:15.100
那么我们平时

11:15.100 --> 11:16.700
如果说用关硬型数据库的话

11:16.700 --> 11:17.620
一般用于什么呢

11:17.620 --> 11:18.420
用于存储

11:18.420 --> 11:19.580
复杂的数据

11:19.580 --> 11:20.940
特别是业务数据

11:20.980 --> 11:21.620
后端的话

11:21.620 --> 11:24.100
基本上使用的是关硬型数据库

11:24.100 --> 11:27.220
大部分业务数据使用的是关硬型数据库

11:27.220 --> 11:28.140
什么叫业务数据

11:28.140 --> 11:31.100
用户的信息

11:31.100 --> 11:31.860
用户的密码

11:31.860 --> 11:32.820
这些东西用户的信息

11:32.820 --> 11:33.420
对吧

11:33.420 --> 11:34.940
用户发布过的文章

11:34.940 --> 11:36.340
每个文章的评论

11:36.340 --> 11:38.100
那么像这些内容的业务数据

11:38.100 --> 11:40.660
我们就一般用关硬型数据库

11:40.660 --> 11:42.940
比较有代表性的关硬型数据库

11:42.940 --> 11:44.300
有这么三个

11:44.300 --> 11:45.780
Oracle

11:45.780 --> 11:47.220
甲骨文的公司的

11:47.220 --> 11:48.740
Messical

11:48.740 --> 11:49.740
还有这个

11:49.780 --> 11:50.380
Score Server

11:50.380 --> 11:51.220
这是微转的

11:51.220 --> 11:51.860
我们学一张

11:51.860 --> 11:52.660
我们学习买车口

11:52.660 --> 11:54.260
所以说我们这一张学习的是

11:54.260 --> 11:55.540
数据库中的

11:55.540 --> 11:58.860
关硬型数据库中的买车口

11:58.860 --> 12:00.420
前端一般会不会接触这两个

12:00.420 --> 12:02.220
这两个太重量级了

12:02.220 --> 12:02.900
太重量级了

12:02.900 --> 12:05.260
一般是后端人员才会接触

12:05.260 --> 12:05.980
我们前端的话

12:05.980 --> 12:08.460
一般使用的是关硬型数据库

12:08.460 --> 12:09.300
后端人员的话

12:09.300 --> 12:12.620
其实是让这三个都应该要了解一些

12:12.620 --> 12:14.180
要终点学习一个

12:14.180 --> 12:15.500
这是关硬型数据库

12:15.500 --> 12:16.940
了解一下

12:16.940 --> 12:18.460
然后是非关硬型数据库

12:18.460 --> 12:19.380
非关硬型数据库

12:19.420 --> 12:20.380
我们这门课

12:20.380 --> 12:21.340
你弄的接受这门课

12:21.340 --> 12:22.980
我们不会设计

12:22.980 --> 12:24.940
但是我们后边

12:24.940 --> 12:27.620
我记得咱们度以有专门的

12:27.620 --> 12:30.500
非关硬型数据库的一个课程

12:30.500 --> 12:31.300
如果有兴趣的同学

12:31.300 --> 12:32.180
可以去了解

12:32.180 --> 12:33.740
但是我觉得前端

12:33.740 --> 12:36.700
你只需要了解一个数据库就够了

12:36.700 --> 12:38.100
买车口比较最常见的

12:38.100 --> 12:39.620
非关硬型数据库

12:39.620 --> 12:40.260
你可以了解

12:40.260 --> 12:41.220
了解

12:41.220 --> 12:43.700
你可以去了解增加自己的竞争力

12:43.700 --> 12:45.460
这也是有好处的

12:45.460 --> 12:46.580
当然它也

12:46.660 --> 12:48.260
非关硬型数据库其实不拦的

12:48.260 --> 12:49.620
比较简单的

12:49.620 --> 12:50.980
它学习成本很低

12:50.980 --> 12:51.140
好

12:51.140 --> 12:51.820
非关硬型数据库

12:51.820 --> 12:52.740
它的特点是什么

12:52.740 --> 12:53.500
它的特点是

12:53.500 --> 12:55.300
它的纯粹数据的结构

12:55.300 --> 12:56.980
非常简单

12:56.980 --> 12:58.100
那它一般来说

12:58.100 --> 13:02.060
市面上纯粹非关硬型数据库的话

13:02.060 --> 13:03.260
有好多种

13:03.260 --> 13:05.620
有大概4种纯粹方式

13:05.620 --> 13:07.700
我这里该介绍两种

13:07.700 --> 13:08.340
一个是

13:08.340 --> 13:08.940
因为我们这里

13:08.940 --> 13:10.380
这门课也不是讲非关硬型数

13:10.380 --> 13:12.540
一个是文档型

13:12.540 --> 13:13.500
文档型

13:13.500 --> 13:14.740
文档型是什么意思呢

13:14.740 --> 13:15.700
它就不是表格了

13:15.740 --> 13:17.660
它的纯粹数据它就不是表格了

13:17.660 --> 13:18.540
它是

13:18.540 --> 13:20.820
就是它是有一个数据

13:20.820 --> 13:21.500
一块数据

13:21.500 --> 13:22.300
比方一个用户

13:22.300 --> 13:22.980
一个用户

13:22.980 --> 13:24.700
它就是一篇文档

13:24.700 --> 13:25.300
知道吧

13:25.300 --> 13:26.700
就是一篇文档

13:26.700 --> 13:27.740
这篇文档里边

13:27.740 --> 13:28.980
可以存出各种各样的信息

13:28.980 --> 13:30.140
你想写什么信息

13:30.140 --> 13:31.420
什么信息

13:31.420 --> 13:32.860
你可以随时给它加一些信息

13:32.860 --> 13:34.020
随时给它减一些信息

13:34.020 --> 13:34.700
都可以

13:34.700 --> 13:36.340
它就是一篇文章

13:36.340 --> 13:37.220
一个数据

13:37.220 --> 13:38.460
一块数据是一篇文章

13:38.460 --> 13:39.220
那么有很多数据

13:39.220 --> 13:40.980
就是很多篇文章

13:40.980 --> 13:41.940
叠起来的

13:41.940 --> 13:43.820
这就是文档型数据库

13:43.860 --> 13:45.820
还有就是那个兼职队数据库

13:47.380 --> 13:48.140
兼职队型的

13:48.140 --> 13:49.540
就是key value

13:49.540 --> 13:50.820
那么key value大家都知道

13:50.820 --> 13:51.260
对吧

13:51.260 --> 13:52.420
就是什么

13:52.420 --> 13:54.380
新名什么什么年龄什么什么

13:54.380 --> 13:55.460
就是key value对吧

13:55.460 --> 13:57.460
那么像这种结构存出的数据

13:57.460 --> 13:58.500
就兼职队型

13:58.500 --> 14:00.420
它的结构是非常非常简单的

14:01.420 --> 14:02.820
它的优点就是什么呢

14:02.820 --> 14:04.260
格式非常灵活

14:04.260 --> 14:06.260
无论是文档型还是那个

14:06.260 --> 14:07.500
兼职队型

14:07.500 --> 14:08.820
它的格式都非常灵活

14:08.820 --> 14:10.420
因为你随时可以改这个箭

14:10.420 --> 14:10.980
改这个字

14:10.980 --> 14:12.420
随时可以改那个文档里面

14:12.420 --> 14:13.340
各种内容

14:13.340 --> 14:14.180
随意的更改

14:14.180 --> 14:15.780
它就不像那个表格

14:15.780 --> 14:16.700
它的劣势固定的

14:16.700 --> 14:17.500
对吧

14:17.500 --> 14:18.460
它可以不固定的

14:18.460 --> 14:19.460
它非常灵活的

14:20.220 --> 14:21.700
它的优点还有就是

14:21.700 --> 14:23.540
海量数据的读写效率很高

14:23.540 --> 14:26.340
这是叫它的底层设计原理

14:26.860 --> 14:28.060
但是我们只要知道

14:28.060 --> 14:29.020
它的海量读写数据

14:29.020 --> 14:30.060
它非常高就行了

14:30.860 --> 14:32.660
那么它的缺点其实也很明显

14:32.660 --> 14:34.460
它难以表示是复杂的数据

14:35.220 --> 14:36.820
数据一复杂就麻烦了

14:36.820 --> 14:37.940
它就不好表达了

14:37.940 --> 14:40.100
它很难表达数据数据之间的关联

14:40.100 --> 14:41.100
它能不能表达能

14:41.100 --> 14:43.300
但是肯定是没有关系数据表达的好

14:43.780 --> 14:45.660
另外它对于复杂查询效率不好

14:45.660 --> 14:47.220
像刚刚刚我举的例子

14:47.220 --> 14:52.020
查某一个学生最近学习的三门

14:52.020 --> 14:54.100
最近学习的三门课中

14:54.940 --> 14:57.020
每门课考试了多少次

14:57.660 --> 14:59.180
像这种复杂的数据查询

14:59.180 --> 15:02.220
这个非关系数据库就很麻烦了查起来

15:02.220 --> 15:03.940
它其实适合比较简单的查询

15:04.340 --> 15:05.820
所以说机率这样的特点

15:05.820 --> 15:07.060
它的拥土是什么呢

15:07.060 --> 15:09.140
它的拥土一般是准处了一些数据

15:09.140 --> 15:10.220
结构简单的数据

15:10.220 --> 15:11.060
比如说

15:12.020 --> 15:13.260
用户的访问记录

15:13.620 --> 15:14.940
哪个用户什么时间

15:15.780 --> 15:16.740
访问了我们哪个页面

15:17.740 --> 15:19.460
就访问就存这个东西

15:19.460 --> 15:20.380
没有其他数据了

15:20.380 --> 15:21.380
就存个数据

15:21.380 --> 15:22.940
那么这个数据是不是非常害

15:22.940 --> 15:23.980
数据量非常大

15:23.980 --> 15:24.500
对不对

15:24.500 --> 15:26.900
这个访问数据库数据量是非常大的

15:26.900 --> 15:27.940
而且它数据结构简单

15:27.940 --> 15:29.740
特别适合用关系数据库来查询

15:30.460 --> 15:31.420
来处理

15:35.100 --> 15:36.620
这里我再多说一点

15:36.620 --> 15:37.220
就是说

15:38.260 --> 15:39.820
你们校园学学前端开发者

15:40.660 --> 15:42.100
你们有可能将来

15:42.140 --> 15:43.940
有可能会用到关系数据库

15:43.940 --> 15:45.060
也有可能会用到

15:45.060 --> 15:46.140
有可能会用到关系型

15:46.140 --> 15:47.660
也有可能会用到非关系型

15:47.660 --> 15:48.780
他们的场景是什么的

15:49.500 --> 15:51.620
如果说你开发一个国安法网站

15:51.620 --> 15:52.620
却在国安法网站

15:52.620 --> 15:53.540
还需要什么客户端

15:53.540 --> 15:54.660
参与你前端去自行搞定

15:54.660 --> 15:55.660
把全部搞定

15:55.660 --> 15:57.100
服务器到客户端全部搞定

15:57.100 --> 15:58.260
你自己搞定就行了

15:58.260 --> 16:00.020
那你用那个介绍大服务器

16:00.020 --> 16:01.300
因为国安法网站它也不复杂

16:01.300 --> 16:01.900
对吧

16:01.900 --> 16:03.300
国安法网就是发布一些新闻

16:03.300 --> 16:05.140
发布一些产品的案例

16:05.140 --> 16:06.260
图片这些东西

16:06.260 --> 16:07.620
有一个简单的后台

16:07.620 --> 16:09.900
它本身就不复杂

16:09.900 --> 16:10.500
那么这样子

16:10.500 --> 16:11.500
但是它里边也

16:11.500 --> 16:12.740
这些数据也有关联

16:12.740 --> 16:12.900
对吧

16:12.900 --> 16:14.900
有可能还要用活动路这些东西

16:14.900 --> 16:16.340
还是有关联的

16:16.340 --> 16:17.140
因此

16:17.140 --> 16:19.180
那么用关系型数据库就可以存出

16:20.300 --> 16:21.140
还有一种情况

16:21.140 --> 16:21.900
就是你到

16:21.900 --> 16:23.140
就是你再那个什么

16:23.140 --> 16:23.780
出发铅啊

16:23.780 --> 16:24.300
微博中国

16:24.300 --> 16:25.180
还接一些私货

16:25.180 --> 16:25.500
对吧

16:25.500 --> 16:27.140
你不能去专门找个社后端人员

16:28.020 --> 16:30.540
如果说接一些前端的一些小的项目

16:30.540 --> 16:31.460
挣两万块

16:31.460 --> 16:32.100
那么这个时候

16:32.100 --> 16:33.020
你自己写数据库

16:33.020 --> 16:35.620
一般可以会使用的关系型数据库

16:36.700 --> 16:37.660
另外非关系型

16:37.660 --> 16:38.820
你们也可能会用到

16:38.860 --> 16:39.900
比方大型系统

16:39.900 --> 16:40.620
大型系统的话

16:40.620 --> 16:41.940
后端已经跟你说好了

16:41.940 --> 16:43.180
他的数据库已经帮你打好

16:43.180 --> 16:43.700
你不用管

16:43.700 --> 16:44.500
肯定没关系

16:44.500 --> 16:46.260
你只要用接口去寻求他就行了

16:46.260 --> 16:48.420
他那边数据一个管理的非常好了

16:48.420 --> 16:50.900
他肯定是后边用的是关系型数据库

16:50.900 --> 16:52.300
那么到了你前端

16:52.300 --> 16:54.340
你可能还是要凝持纯一些数据

16:54.340 --> 16:55.460
比方说访问记录

16:55.460 --> 16:56.460
用户的偏好设置

16:56.460 --> 16:56.820
对吧

16:56.820 --> 16:58.420
有些东西后端不管的

16:58.420 --> 16:59.020
那么这个时候

16:59.020 --> 17:00.020
你可以用非关系型

17:02.580 --> 17:03.420
对于就业来说

17:03.420 --> 17:04.900
我觉得学习一个就够了

17:04.900 --> 17:07.940
但是对于提升竞争力的话

17:07.980 --> 17:09.260
后边我建议大家看完了

17:09.260 --> 17:10.260
漏的介绍课程过后

17:10.260 --> 17:11.820
后边咱们还是有那个

17:11.820 --> 17:12.820
非关系型数据库

17:12.820 --> 17:14.300
你可以去看一下

17:14.300 --> 17:14.420
好

17:14.420 --> 17:15.820
非关系型数据库

17:15.820 --> 17:19.460
咱们这里主要代表的有三个

17:19.460 --> 17:21.300
mongolDB

17:21.300 --> 17:23.940
这个是咱们杜亦课程里面也有

17:23.940 --> 17:24.140
对吧

17:24.140 --> 17:24.940
Redis

17:24.940 --> 17:26.980
Redis不知道我们现在杜亦有没有

17:26.980 --> 17:27.700
如果说没有的话

17:27.700 --> 17:29.060
我们我后面会加一个

17:29.060 --> 17:29.540
加个课程

17:29.540 --> 17:31.140
专门讲Redis

17:31.140 --> 17:31.420
然后呢

17:31.420 --> 17:33.740
这个是Membase

17:33.740 --> 17:35.020
主要的代表就这么三个

17:35.020 --> 17:36.140
其实还有很多了

17:36.180 --> 17:37.300
这非关系型数据库

17:38.460 --> 17:38.860
好

17:38.860 --> 17:40.100
那么这里我们了解了两个

17:40.100 --> 17:40.580
对吧

17:40.580 --> 17:41.940
最后面向对象数据库

17:41.940 --> 17:42.940
我就不讲了

17:42.940 --> 17:43.700
这个东西是什么了

17:43.700 --> 17:45.500
这个东西跟里面没有什么关系

17:45.500 --> 17:46.100
这个是什么

17:46.100 --> 17:46.700
java

17:46.700 --> 17:47.300
csharp

17:47.300 --> 17:48.700
这些面向对象的语言

17:48.700 --> 17:49.620
强类型的语言

17:49.620 --> 17:50.700
编译型的语言

17:50.700 --> 17:52.460
他们如果说

17:52.460 --> 17:53.940
要把内存里边的对象

17:55.420 --> 17:56.740
原封不动的存到硬盘

17:56.740 --> 17:57.900
因为硬盘的格式跟那边

17:57.900 --> 17:58.740
肯定是不一样的

17:58.740 --> 18:00.860
存持的方式方案都不一样

18:00.860 --> 18:01.820
跟这种面向对象语言

18:01.820 --> 18:02.860
存在的方案都不一样

18:04.060 --> 18:05.380
所以说他要把它存到数据库

18:05.380 --> 18:06.900
然后经过适配

18:06.900 --> 18:08.420
如果说要原封不动的

18:08.420 --> 18:09.180
通过存到数据库

18:09.180 --> 18:10.260
然后从数据库里面

18:10.260 --> 18:11.740
直接拿出来就还原到内存

18:11.740 --> 18:12.620
那么这种时候

18:12.620 --> 18:14.300
你要用面向对象数据库

18:14.300 --> 18:15.940
这个东西用的比较少一点

18:15.940 --> 18:17.340
而且面向对象数据库

18:17.340 --> 18:18.940
拥起来是非常方便的

18:18.940 --> 18:20.140
但是很遗憾的是

18:20.140 --> 18:21.860
他一般都是商业机构给你做的

18:21.860 --> 18:22.620
都是要收费的

18:24.620 --> 18:25.380
这是关于

18:25.380 --> 18:26.260
myscore是免费的

18:26.260 --> 18:28.260
我们学的myscore是免费的

18:28.260 --> 18:29.900
这是数据库的内容

18:29.900 --> 18:31.180
然后我们最后再说一下

18:31.180 --> 18:32.420
数据库的数据

18:32.420 --> 18:33.660
就咱们学一个数据库

18:33.660 --> 18:35.300
有些基本的概念

18:35.340 --> 18:36.260
虽然说面试

18:36.260 --> 18:37.700
还不会怎么不会去问道理

18:37.700 --> 18:38.900
我们自己了解一下

18:38.900 --> 18:39.700
了解一下

18:39.700 --> 18:40.580
听个演

18:40.580 --> 18:41.700
混个演手

18:41.700 --> 18:43.180
一个是db

18:43.180 --> 18:43.780
db什么意思

18:43.780 --> 18:45.380
data.b is就是数据库

18:45.380 --> 18:46.380
就是一个数据库

18:46.380 --> 18:47.540
我们可以认为一个数据库

18:47.540 --> 18:48.700
就是这么一个表

18:48.700 --> 18:49.980
一个大表

18:49.980 --> 18:50.660
一个就是一个

18:50.660 --> 18:51.380
一个是一个文件

18:51.380 --> 18:52.180
文件里面

18:52.180 --> 18:53.260
它就存了很多表格

18:53.260 --> 18:54.180
你可以这样理解

18:54.180 --> 18:55.500
实际上肯定不是的

18:55.500 --> 18:56.460
你可以这样理解

18:56.460 --> 18:58.060
myscore是关心型数据库

18:58.060 --> 18:58.260
对吧

18:58.260 --> 18:59.580
就可以这样理解

18:59.580 --> 19:00.940
还有一个叫dbaldata.b

19:00.940 --> 19:02.100
是administ twitter

19:02.100 --> 19:04.500
叫数据库管理员

19:04.540 --> 19:05.580
他是一个职业

19:05.580 --> 19:06.340
你们去网上搜

19:06.340 --> 19:07.460
他是一个职业

19:07.460 --> 19:09.740
他有些公司要招聘这个东西的

19:09.740 --> 19:10.340
他就什么都不

19:10.340 --> 19:11.260
其他什么事情都不管

19:11.260 --> 19:12.380
什么前端不管

19:12.380 --> 19:13.060
什么后端

19:13.060 --> 19:14.340
单一码开发不管

19:14.340 --> 19:15.340
专门来管理数据库

19:15.340 --> 19:16.740
你就知道这里边水又多深了

19:18.940 --> 19:21.900
还有这个是数据库管理系统

19:23.100 --> 19:24.420
数据库管理系统怎么理解

19:24.420 --> 19:25.420
你可以理解为

19:25.420 --> 19:26.700
我们安装了个office

19:26.700 --> 19:27.780
你要安装了office

19:27.780 --> 19:28.780
才能去打开这个文件

19:28.780 --> 19:29.940
它打开里面去管理

19:29.940 --> 19:31.100
对不对

19:31.100 --> 19:32.380
所以说他给你提供这样

19:32.380 --> 19:33.620
浪费发达的工具

19:33.700 --> 19:36.060
不然的话就是一个无法管理的表格

19:36.060 --> 19:36.940
没法往里边

19:36.940 --> 19:37.980
你很难往里边加那种

19:37.980 --> 19:39.380
你很难把那种读出来

19:39.380 --> 19:41.340
所以说你需要一套数据库管理工具

19:41.340 --> 19:42.700
来帮你管理数据库

19:42.700 --> 19:44.140
比方说我们说的mysco

19:44.140 --> 19:44.700
对吧

19:44.700 --> 19:45.780
数据库管理工具

19:47.260 --> 19:49.020
还有就是dbs

19:49.020 --> 19:50.940
dbs叫做数据库管理系统

19:50.940 --> 19:52.820
dbs是一个很大的概念

19:52.820 --> 19:54.460
它里面包含了数据库

19:54.460 --> 19:56.180
就数据库是我们自己做的

19:56.180 --> 19:56.660
对吧

19:56.660 --> 19:57.940
然后数据库管理工具

19:57.940 --> 19:59.540
工具工具的时候需要安装的

19:59.540 --> 20:00.860
来管理我们的数据库的

20:00.860 --> 20:01.700
然后dba

20:01.700 --> 20:02.780
包括有数据库管理员

20:03.140 --> 20:05.500
都可以形成一个完整的数据库管理系统

20:05.500 --> 20:06.660
它里面包含很多概念

20:06.660 --> 20:07.860
很多东西

20:07.860 --> 20:09.980
它是一个大的范畴

20:10.620 --> 20:12.740
大概的了解一下这些数据就行了

20:12.740 --> 20:14.940
特别是你要知道dbs是什么意思

20:15.780 --> 20:16.420
那么这次的课

20:16.420 --> 20:18.340
我们就简单地对数据库来做一个介绍

20:18.340 --> 20:20.820
咱们再来共同介绍

20:20.820 --> 20:22.340
漏了几十个数据库有没有关系

20:22.340 --> 20:23.620
没有直接关系

20:23.620 --> 20:24.380
没有直接关系

20:24.380 --> 20:26.060
不过我们学完了数据库之后

20:26.060 --> 20:27.540
我们可以在漏的介绍里面

20:27.540 --> 20:29.220
用代码的形式

20:29.220 --> 20:30.900
来往数据库里面加东西

20:30.900 --> 20:31.780
用代码的形式

20:32.620 --> 20:34.460
去读数据库里面的东西

20:34.460 --> 20:35.620
但是我们最重要的是

20:35.620 --> 20:36.860
要先把数据库学习

20:36.860 --> 20:38.580
我们学习什么数据库

20:38.580 --> 20:40.180
学习迈车库

20:40.180 --> 20:40.860
它是一个什么数据库

20:40.860 --> 20:42.460
它是个关系型数据库

20:42.460 --> 20:42.860
好了

20:42.860 --> 20:44.180
我们这些可能先把这些简论

20:44.180 --> 20:45.420
基本的概念给大家介绍一下

