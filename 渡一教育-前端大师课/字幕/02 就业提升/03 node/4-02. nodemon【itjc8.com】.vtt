WEBVTT

00:00.110 --> 00:05.270
好 这些可以介绍一个非常有趣而且很实用的一个工具啊 叫做loader猛

00:06.390 --> 00:17.390
就说什么呢 现在呢 我们这个在load里面开发程序啊 就遇到一个问题啊 就比如说像特别像这个开发服务器程序的时候 我们比方说吧 随便来一个吧 随便来一个

00:18.710 --> 00:25.590
啊 然后rake race 咱们这里呢先等一下吧啊 发送一个啊 123

00:26.590 --> 00:30.750
好 保存啊 接下来呢 我们运行啊load index

00:32.070 --> 00:38.430
好 运行过后呢 我们到浏览器里边去请求一下啊 或者在那个postman里边去请求也行啊 比方postman嘛

00:39.550 --> 00:44.910
postman 然后这里呢 是随便随便去吧 因为我们是监听任何请求 对吧 得到的是123

00:45.550 --> 00:47.750
然后呢 我们去改一下代码 比方说改成456

00:48.510 --> 00:55.350
保存 好 然后在的postman里边去请求一下 是不是还是123 为什么呢 因为代码改了过后你得重新运行 对吧 是不是

00:55.350 --> 00:57.470
所以重新运行都得应得的是 很麻烦

00:58.310 --> 01:05.630
因此呢 我希望了当有一个东西能够监控文件的变化 文件变化过后呢 你重新给我重新运行 自动就重新运行了

01:06.270 --> 01:14.790
所以说这个东西工具是什么呢 工具就是人都那么非常非常简单啊 怎么用了这个他的网站 你看一下吧 自己去看啊 这个很简单很简单

01:15.190 --> 01:16.390
好 咱们看一下怎么来用

01:17.430 --> 01:18.950
首先安装 停止

01:19.830 --> 01:24.630
npm i 啊 然后呢 横杠地吧 这个开发一战就行了 对吧

01:25.270 --> 01:37.830
load 安装他啊 稍微等一下啊 这个东西有点多 好 安装好了 安装好了 怎么用呢 特别特别简单 你把他当成load来用就行了

01:38.230 --> 01:41.910
npx load 然后index 你看吗

01:43.350 --> 01:48.710
是不是运行了 对吧 当成load来运行就行了 然后接下来看postman 请求13456

01:49.590 --> 01:51.190
咱们给他变成abc 保存

01:52.550 --> 02:01.670
你看保存之后 他会自动重新运行 看没有 restarting 对吧 然后去应用所谓的 就是重新启动 以应用所谓的更改

02:02.230 --> 02:04.550
啊 所以是不是重新运行的load 啊 赢

02:05.110 --> 02:07.670
这个这个这个代码 对吧 load index

02:08.310 --> 02:18.230
好 那么这里呢 我们就重新运行的啊 再发送是不是abc了 对不对 就非常非常简单啊 那么这个地方呢 我们也可以有很多种运行方式

02:18.470 --> 02:22.950
比方说可以把它用到那个package接下来 这里呢 我们写上一个start

02:24.230 --> 02:34.070
这边我们就使用load 啊load 啊load 的时候 实际上我们刚才是写的是直接一个小本名字 对吧 也可以用这种方式啊 用一个横杠

02:34.950 --> 02:36.870
x 其实你可以通过他的命令来看

02:39.300 --> 02:45.620
load 横杠h 啊帮助npx load 横杠h帮助

02:46.100 --> 02:53.620
帮助里面他告诉你啊 他有这么一些参数啊 比方说x啊叫excute或者是两个横杠excute都行啊 表示是执行一段脚奔

02:53.860 --> 02:59.460
这个脚奔可以是任何脚奔 比方说我们在这里呢 就可以执行一段npx啊wrong

02:59.940 --> 03:00.340
呃

03:01.140 --> 03:04.100
那什么呢 server 好 咱们去下面去配置一个

03:04.660 --> 03:09.620
配置一个server 这个server呢 配置load index 对吧 都都一样啊 都一样 你看啊

03:09.860 --> 03:15.220
当我们文件变化的时候 他去执行一段脚奔 执行脚奔的时候呢 执行什么脚奔呢 执行这段脚奔

03:15.380 --> 03:22.260
这段脚奔是不是在运行这个 对吧 这个东西就是load的 所以它很灵活的啊 非常非常灵活 那么这里边可以写任何东西啊

03:22.820 --> 03:28.660
比方说咱们 当然这个东西也不是专门给express来准备的 就是反正load的这一load的这个

03:29.140 --> 03:33.460
环境里边 你要监控文件的变化 让它重启我们的load的 都可以使用这种方式

03:33.940 --> 03:37.060
好 咱们就可以使用npm start 对吧 从我这种方式来运行

03:38.180 --> 03:41.220
你看 是不是 没问题吧 啊 同仁 然后我们来

03:41.940 --> 03:49.540
改一下啊 改一下代码 abc 123 保存啊 保存过后你看 这边是不是又同 就是又重新运行的一次啊 这边我们这里

03:49.940 --> 03:55.060
好 所以说后边呢 我们就可以直接改代码了啊 不用去自己手中重新运行了 就这么一个情况

03:55.540 --> 04:00.180
然后呢 目前呢 他是这样子啊 他监控的范围呢 有一点广 比方说我这个拍几点节省

04:01.140 --> 04:05.620
我们把清空啊 好拍点节省里边 我们加几个空格 然后去保存

04:06.100 --> 04:12.100
你还是不是又重新运行的 对吧 就连这些东西改动他都要重新运行 所以有些东西是没有必要的啊

04:12.820 --> 04:16.900
因此呢 我们可以再多一些额外的配置 怎么配置呢 你可以给他写个配置文件

04:18.580 --> 04:22.260
啊 也可以通过那个命令行参数去配置啊 不过这个配置文件肯定要舒服一点

04:22.580 --> 04:26.660
他配置文件的名称呢 叫做load猛点节省 也是一个节省格式的配置文件

04:27.140 --> 04:30.100
这个配置文件里边写啥呢 你可以看一下他的文档里边

04:30.820 --> 04:36.980
这里有个地方有个例子啊 这个可以配置到这个拍点节省里边

04:37.620 --> 04:44.740
通过这个什么 通过load猛config来进行配置啊 也可以配置到别的文件里边 通过这个config命令行里边通过这个config啊

04:44.740 --> 04:50.740
有点类似vipike对吧 通过这个命令行来指定配置文件 他默认的配置文件就是load猛点节省

04:51.220 --> 04:53.540
那么这个配置文件呢 他这里对在这

04:54.180 --> 04:59.860
有那么一个例子啊 告诉你可以写哪些东西啊 我们平时用不到那些东西 我们就用这么几个一个是一个漏

05:01.060 --> 05:03.060
呃 一个是这个 嗯 叫做

05:04.100 --> 05:06.580
呃 叫做叫做叫做啥呢 watch

05:07.860 --> 05:08.340
这个配置

05:09.620 --> 05:10.580
啊 咱们看一下吧 watch

05:11.300 --> 05:15.940
这个配置是我们要监听的监听哪些文件啊 这里边你是一个

05:16.900 --> 05:23.380
数组 每个数组里边每一项呢 是一个字乌串 字乌串呢 就写一个匹配的表达是跟那个地尺一个load的解放呢 是差不多的

05:23.780 --> 05:26.580
比方说我只监控了什么文件呢 我只监控解是文件

05:27.220 --> 05:33.700
其他的文件不监控了 对吧 接受文件不要 对吧 或者是我们也监控接受文件吧 监控这两个文件

05:34.180 --> 05:39.300
对吧 好 那咱们来看一下啊 呃 这样子写的之后呢 我们

05:41.540 --> 05:42.660
停止啊 重新来

05:43.380 --> 05:43.780
start

05:44.500 --> 05:47.780
好 那么现在你看啊 他现在监控的文件是解是啊

05:48.660 --> 05:49.700
呃 接受

05:50.340 --> 05:53.140
他监控是这么一些 对吧 监控这两个文件

05:53.620 --> 05:56.100
呃 那么这其实他还可以配置个extensions

05:56.900 --> 06:04.500
还可以配置这个 extensions什么意思呢 表示的是监控的那个文件迷 文件的后维啊 也可以啊 你通过那个

06:05.060 --> 06:08.820
监控的路径和监控的文件后维都可以都可以进行配置

06:09.300 --> 06:12.660
明白了意思吧 好 那么监控的 比方说我们现在再去改动这个md

06:13.060 --> 06:14.820
再去改动再改动这个文件保存

06:15.860 --> 06:17.220
你看他有没有重新启动呢

06:17.860 --> 06:21.300
哎 看一下 是不是没有重新启动了 再来啊 保存

06:22.020 --> 06:25.300
说明有什么 没有重新启动了 对不对 好 这是关于这个

06:25.780 --> 06:28.420
warch啊 这个配置 那么还有一个呢 就是

06:28.980 --> 06:35.060
我不希望了 他改动这种 这种也是接受文件嘛 对不对 他改动这种文件呢 我也不希望他能够重新运行

06:35.220 --> 06:38.980
那么这个时候呢 我们可以在这个基础上呢 进一步去移除掉

06:39.540 --> 06:43.300
一些监控 怎么呢 移除了 到这个配置里边 我们可以写这个一个洞

06:45.060 --> 06:48.580
啊 忽略掉某一些文件 忽略掉什么呢 怎么package这样接受

06:49.060 --> 06:51.540
对吧 还有什么呢 还有那个就是

06:55.000 --> 06:55.880
package

06:56.440 --> 07:01.080
后边我们加上一个新号嘛 反正是包含了package 后边有任何东西啊 点接受

07:01.240 --> 07:04.680
都 我都可以都不允许他重新运行

07:05.080 --> 07:06.520
然后呢 他有什么load them

07:07.000 --> 07:10.680
要接受 像这些接受配置文件啊 我们都不需要他重新运行

07:11.160 --> 07:13.800
好 保存 然后呢 我们这里来重新运行

07:15.960 --> 07:19.160
好 运行 然后呢 我们现在去改一下package接受

07:19.720 --> 07:23.560
保存 你他是不是没有重新运行的package and lock

07:24.600 --> 07:29.400
保存 是没有重新运行的 然后呢 还有什么这个load那么点接受 改动这个

07:30.040 --> 07:36.120
保存 是没有重新运行对不对啊 这是把忽略掉 忽略掉里边呢 我们通常还会写上load modules

07:36.760 --> 07:41.000
对吧 这个目录下面的电动我也不希望他重新运行啊 这这一块

07:41.560 --> 07:47.480
呃 然后呢 还可以忽略掉什么呢 还可以忽略掉啊有一些目录啊 比方说像这个public目录

07:47.960 --> 07:52.280
我们一般来放什么呢 放静态支援的 对吧 这些的是在放 比方说这里边也有GS

07:52.760 --> 07:56.760
这里边的GS呢 是放到浏览器环境里边运行的跟load环境没有关系

07:57.160 --> 08:01.080
好 所以说这里边的GS呢 我也不希望他重新运行 你看现在重新运行的 对吧

08:01.240 --> 08:05.160
所以我们还要忽略掉public目录下面 好 然后再重启

08:08.150 --> 08:10.550
好 既然我们看一下这个A调接受 我们现在再去改动他

08:11.190 --> 08:15.110
保存 是不是没有重新运行的 对吧 其他的GS是正常的 比方说这里

08:15.910 --> 08:21.670
保存 是不是重新运行的 这里呢 就是用load门了 可以非常方便的那个

08:21.990 --> 08:25.510
能够把我们重启我们的应用 其他的没啥了啊 我们把这个

08:25.990 --> 08:31.670
他也删除了 嗯 好 那么这是关于这一块load门 想想还有什么呢

08:32.470 --> 08:36.150
嗯 没啥了 哦 还这个 还这个配置还蛮用的 就叫做m

08:37.590 --> 08:40.710
就是环境 就是这个我看一下 这个m

08:41.270 --> 08:45.670
就是配置一些环境辨量啊 这环境辨量不是永久的啊 我们之前讲过那个环境辨量

08:45.670 --> 08:50.710
在什么呢 保管理期内里讲过对吧 配置一些环境辨量 这是临时的 就是运行的时候呢

08:50.710 --> 08:54.550
还会给你加一些环境辨量 那么比方说我们最常用的就是mallow的m

08:55.110 --> 08:58.150
对不对啊 比方说我们这里呢 把配置成为development

08:59.190 --> 09:04.070
啊 在开发 因为load那么肯定是用于开发环境嘛 开发环境里边做一些调试啊

09:04.070 --> 09:06.150
那么环境辨量呢 就把它设置为development

09:06.550 --> 09:10.630
那么到时候呢 我如果说我要根据不同的环境呢 要去做不同的事

09:10.710 --> 09:14.870
我们就可以判断这个环境辨量了 比方说我们在index里边输出一下吧

09:14.870 --> 09:15.990
输出一下process

09:16.630 --> 09:16.870
m

09:18.390 --> 09:19.030
loadm

09:22.010 --> 09:23.450
好 保存

09:24.170 --> 09:27.660
接下来我们来看一下运行

09:28.140 --> 09:29.660
好 你看是不是输出了development

09:30.300 --> 09:32.300
对不对 好 可以给它配置一些环境辨量

09:32.860 --> 09:36.220
好 其他就没啥了啊 就介绍一下这个load那么它的使用方式

09:36.220 --> 09:39.180
非常简单 我们把它用起来过后呢 方便我们后边的处理

