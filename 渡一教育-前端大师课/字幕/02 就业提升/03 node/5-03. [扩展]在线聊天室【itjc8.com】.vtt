WEBVTT

00:00.690 --> 00:02.990
然后我们到浏览器里边去

00:03.490 --> 00:05.550
找到这个localhost 5008

00:05.810 --> 00:07.090
你看这就是我们的静态页面

00:07.610 --> 00:15.030
好 这个静态页面怎么用呢 就是首先输入里程 输入了里程过后了一回车 回车就会进入聊天室 但是我现在都没有功能

00:15.530 --> 00:19.370
为了方便我们后边处理我已经写了一个GS 就这个GS

00:19.630 --> 00:23.210
我就告诉你怎么用就行了 有兴趣的同学去看一下 这些都是非常传统的鞋法

00:23.470 --> 00:26.290
我们点击右键 检查 看一下GS怎么用

00:26.550 --> 00:28.070
它提供了一个权具变量

00:28.330 --> 00:28.850
配级

00:29.370 --> 00:30.130
权具变量

00:30.330 --> 00:33.450
这里边提供了一些函数 你看

00:33.710 --> 00:37.550
现在用户的名字是不是这个 表示我当前的用户名

00:38.070 --> 00:39.610
unlocking

00:39.870 --> 00:40.630
表示

00:40.890 --> 00:45.230
这个用户名好像没啥用 无所谓吧 放在这 扔这吧 我反正就是处理界面的

00:45.750 --> 00:50.870
这里边有一些函数 什么addlog addmessage 有当前发达的一些函数 我一会再说

00:51.130 --> 00:53.930
这里有两个事件 一个是unlocking 就是表示

00:54.450 --> 00:56.490
即将登录的时候要处理的事件

00:56.690 --> 01:02.070
一个是unmessage 即将我发送消息的时候要处理的事件 目前这个两个事件都是空的 我没有注册

01:02.590 --> 01:07.190
好 这就是这个对象 这对象里面怎么用呢 首先我们看这个方法

01:07.970 --> 01:08.470
intu

01:08.990 --> 01:13.350
表示进入聊天室 以只要一调用这个方法就进入聊天室 就切换界面

01:13.590 --> 01:17.190
这个对象就是纯粹用来处理界面的 就切换界面

01:17.690 --> 01:18.470
你而言是吧

01:18.730 --> 01:19.950
intu

01:20.250 --> 01:21.270
进入聊天室

01:21.850 --> 01:27.570
然后还有什么呢 还有比方说还有这个addlog 夹住一个日字 夹住一个日字

01:28.130 --> 01:32.010
你看一下这是什么意思吗 一回车 你看日子就显示到这

01:32.410 --> 01:36.810
对吧 调的那个方法他就会把日子显示到这 就是处理界面的 我已经写好了

01:37.490 --> 01:41.490
其实将这种方法呢 你们大家也可以学会啊 你可以学习一下

01:42.410 --> 01:44.850
就跟那个功能五官就把ui处理的

01:45.610 --> 01:51.210
然后呢 我们也可以使用那个addu 添加一个用户 比方说我们这里学面写一个

01:51.470 --> 01:59.130
添加一个用户 一回车 你看这个用户 这里显示出一个消息 这里的用户出现了啊 这里的在线人数多了一个对吧

01:59.730 --> 02:00.410
再添加一个

02:01.410 --> 02:06.530
是不是又添加一个用户 对吧 再添加一个用户 二啊 就调的那个方法 他是更改界面的啊 其他都没啥

02:07.410 --> 02:11.930
然后呢 这些点点这个用户啊 他可以切换这里的东西 你看他会自动切换

02:13.490 --> 02:15.970
而且切换过后呢 你看看一下这个page啊

02:16.590 --> 02:23.430
page对象里边有有一个方法叫做get target user 就是我目前是给谁发消息 我们看一下

02:23.830 --> 02:27.590
所以得到这个对吧 他就把这个 他就把这个界面上这个东西得到啊 其实很简单

02:28.150 --> 02:35.750
得到目标用户啊 我们给到底给谁发消息 啊 比方说这里切换到所有人 所有人的话还是脑啊 所有人是脑

02:36.510 --> 02:39.070
你要意思吧 好 这是过这一块啊 再来

02:41.150 --> 02:42.750
嗯 我们看一下这个page里边还有什么呀

02:43.490 --> 02:51.850
嗯 还有添加一个消息 添加消息的是要传三个参数 第一个参数呢是谁发的消息 把谁发的消息 比方说

02:53.730 --> 02:59.250
abc然后呢 第二个是消息内容啊 消息内容 第三个呢是

03:00.930 --> 03:06.290
给谁发啊bcd 你看看 他只是改变界面啊 其他没有任何功能

03:07.270 --> 03:13.070
就是他就把这个 他就拼接一个元素放到这 他就这么简单abc消息那种bcd

03:13.910 --> 03:19.510
如果说你给所有人发的话 那么这里就写了啊 这是只是处理界面的啊 只是处理界面的

03:20.110 --> 03:21.310
看呗 就这么个意思

03:22.430 --> 03:25.990
这是发送消息 这是添加消息 然后还有啥的

03:26.710 --> 03:31.190
哦 还有就是remove有的啊 就是移除掉一个用户 比方GFFG

03:32.170 --> 03:38.090
啊 你看移除掉一个用户 你看他就是这里显示 他退出了聊天室 然后呢 这边少了一个人啊 人数减1

03:39.210 --> 03:41.810
另外的意思吧 最后这么个意思啊 就这么个意思

03:42.370 --> 03:46.250
然后呢 我们看一下还有什么呢 如果说移除了用户名不存在的话 还有什么都不会发生

03:47.050 --> 03:50.690
啊 什么都不会发生 对吧 我把界面先写好 然后还有啥呢

03:52.010 --> 03:52.490
还有啥呢

03:53.850 --> 03:56.290
没啥了对吧 然后还有两个世界 一个是unlocking

03:57.030 --> 04:01.510
我们这里刷新意思吧unlocking 就是当我们登录的时候 他触发的世界

04:02.430 --> 04:09.710
这个世界呢 我们看一下 我给他注册一个函数 他会传一个参数进来 表示登录了用户名 我把这个用户名输出 要不说我们这里一回车

04:10.790 --> 04:18.630
我们这里还没还没注册 注册完了 好一回车 你看是不是就输出这个 对吧 然后我们再写一回车 你看 这个世界是不是运行的

04:19.230 --> 04:24.230
对吧 好 然后呢 他还有一个世界啊 我先进入一个聊天室 into 加入

04:24.650 --> 04:30.290
进入这个聊天室 然后呢 他还有个世界叫做unsyn的message

04:31.170 --> 04:33.450
那么他这里呢 会有三个参数 abc

04:35.010 --> 04:40.090
我之前都测试过的 好有三个参数 那么这个时候是什么意思呢 就是我这里

04:41.290 --> 04:46.250
如何发生一个消息啊 发生个消息 一回车 你看是不是触发这个世界

04:47.290 --> 04:53.250
消息的 这是我谁发送的啊 谁发送 这是谁发送的发送的消息 就是我

04:54.030 --> 04:58.670
我是谁 然后这是消息内容 这是发送给谁的 如果说是所有人的话就是那

04:59.510 --> 05:04.790
没人意味着吧 就这么意思 然后呢 在这里边还提供了两个啊 一个cleared input

05:06.510 --> 05:12.910
清空这个消息啊 就提供了这个啊 清空的消息就没了啊 都是处理界面的啊 跟那个功能没有一毛钱关系

05:13.510 --> 05:18.710
好 这是我们的界面 好 界面写好了过后了 我们现在开始真的进行socket的通信了

05:19.170 --> 05:24.130
这是个聊天室嘛 对吧 聊天室肯定要做一个socket 因为呢 我发一个消息 他用我们马上要制造消息

05:24.450 --> 05:27.530
对吧 要实施性 实施性比较高 没有用socket来做

05:28.090 --> 05:32.930
那么我们在做socket之前呢 大家需要知道的是 我们需要去规定一个消息格式

05:33.730 --> 05:40.330
就是我们服务端跟客户端怎么来进行交互 要把他约定好 不然的话越写越端 我们这里呢已经给大家写好了啊

05:42.090 --> 05:42.730
好 给他看一下

05:43.850 --> 05:48.130
我们分成两个地方 一个是客户端发送 一个是服务器发送 我们大开看一下啊 然后再慢慢来写

05:48.630 --> 05:56.030
客户端有可能向服务器主动推送哪些消息呢 比方说客户端会询问服务器 目前有哪些在线的用户

05:56.990 --> 06:00.110
啊 发送的消息名车就是个世界名啊 是User

06:00.710 --> 06:04.150
消息内容没有消息内容啊 就是问一下服务器 我们现在有哪些用户

06:05.630 --> 06:11.670
那么这个时候呢 你不要去想服务器 想拥啊 他们之间是不一定有想拥的啊 就是我给你发消息我就不管了

06:11.870 --> 06:16.310
你给我发消息我就收 就这么个意思啊 当然这个东西其实也可以用att再做

06:16.810 --> 06:23.970
不过呢 我现在既然练习的是烧盔车啊 因为会让人在用户是一个简单的寻求想硬模式嘛 对吧 就可以用attp来做

06:24.130 --> 06:26.690
因为我们express呢 跟那个烧盔车是可以连着用的

06:27.490 --> 06:31.890
但是我们现在为了练习烧盔车 多用烧盔车来做 啊 第一个登录 我们也用烧盔车

06:32.490 --> 06:36.930
啊 发送一个消息名称是logging 就是世界名是logging 消息内容呢 是一个用户名

06:37.650 --> 06:43.610
发送到服务器啊 然后呢 还有就是我们消息啊 就是客户端聊天嘛 对吧

06:43.870 --> 06:49.670
消贸能发送一个消息 那么消息的名称是message 世界名是message 那么消息的内容是一个对象啊 我给谁

06:50.350 --> 06:57.110
目标用户闹的话就表示所有人啊 发送什么样的消息 对吧 我就不要写了啊 我就是服务器有记录了

06:57.830 --> 06:59.030
好 然后服务器那边啊

07:00.230 --> 07:07.630
你看之前客户端不是要询问吗 所谓战线用户 对吧 服务器那边要给他一个回应 服务器发送的消息也有 消息名称U字 跟这边有对应

07:08.330 --> 07:15.770
然后呢 消息内容是一个用户输入 登录的时候呢 服务器也要有回应 服务器发送一个消息啊logging 消息内容是true 或者是force

07:16.130 --> 07:17.930
true表示登录成功 force表示登录失败

07:18.770 --> 07:26.370
好 新用户进入 那么新用户新来的时候呢 服务器也会推送消息给客户端 那么表示user in 用户名 哪个用户新来了

07:26.810 --> 07:30.210
好 用户离开 那么发送个消息 user out

07:30.910 --> 07:38.110
就用户名 哪个用户离开了 新消息来了啊 有人给你发到一个新消息 那么消息名称是留隙message 内容啊是谁

07:39.030 --> 07:41.430
发送了什么消息给你啊 就这么个意思

07:42.430 --> 07:44.750
明儿意思吧 ok 啊 这是关于这个啊

07:45.910 --> 07:49.270
呃 双方的约定的消息格式 那来吧 我们就开始写

07:50.390 --> 07:57.150
首先呢 我们来写写这两个啊 写写这一个吧 获取当前所在所有在线用户

07:57.890 --> 08:04.890
来吧 我们来写 先写来写客户端 因为是客户端主动发送嘛 那么服务器这边呢 肯我们先把客户端写了再说啊 写了再说

08:05.770 --> 08:12.690
新建一个啊 在GS里面新建一个啊 表示chart 叫GS 聊天啊 聊天的

08:14.090 --> 08:14.610
你用一下呢

08:15.490 --> 08:16.170
GS啊

08:17.090 --> 08:21.810
chart js 那么这边呢 我们是不是可以使用那个sockets 对不对啊sockets

08:24.520 --> 08:25.680
第二什么的connect

08:26.680 --> 08:31.320
connect 连接服务器 那么我们就不写这个连接地址了啊 就用当前地址

08:31.920 --> 08:35.000
来进行连接服务器 连接完了过后呢 是不是得到一个

08:35.920 --> 08:39.240
io 对不对 不得到一个io 我们看一下之前的文道

08:40.080 --> 08:42.720
你看我一几颗 没想我都一点忘了

08:44.640 --> 08:46.560
啊 这里边documentation

08:49.680 --> 08:54.080
嗯 看一下客户端 哦io就要connect 你看我就写错了

08:54.820 --> 08:57.860
io接connect 连接服务器 然后得到一个sockets

08:58.580 --> 09:03.500
好了 那么这边呢 我们得了个sockets过后呢 我们就可以发送消息了啊 首先是客户端发送

09:05.500 --> 09:16.940
客户端发送消息给服务器 那么怎么来发送呢 什么时间什么时候发送 你看啊 我们的聊天室里边 首先我们这里呢 要获取的是

09:17.440 --> 09:26.490
发达一下 发达一下 这 这 我们这里呢 先做登录吧啊 我们要发送的消息是登录

09:27.250 --> 09:33.450
发送的内容呢 是用户名 对不对 那么这个时候呢 我们什么时候做登录呢 你看客户端这边是不是要在这里呢

09:34.530 --> 09:39.250
这里写完了过后按回车登录 对不对 那么我们在配级里边是有这个时间 我们刚才写了的

09:39.530 --> 09:46.570
配级里边我们提供的这个时间online 我已经写好了 这些东西都是跟Ui相关的啊 就监听监听那个键盘事件 按了回车过后就

09:46.990 --> 09:50.430
出发这个时间 好 那么我们这里呢配级online

09:52.510 --> 09:55.110
配级online

09:57.070 --> 10:01.990
写个时间啊 这里边给我传的是一个用户名 有在内 我们输出一下

10:03.150 --> 10:04.350
输出一下 输出

10:06.390 --> 10:09.430
有在内 你看一下吧 保存刷新

10:12.830 --> 10:17.550
他现在点不到啊 点不到正常的一回车你看是不是出发了这个时间 对吧

10:19.150 --> 10:22.190
一回车是不是出发了 对不对啊 就这么简单

10:23.110 --> 10:26.630
好 那么这个时候呢 我们该怎么办呢 我们是要发送消息到服务器

10:27.750 --> 10:33.750
啊 那么用什么mx 那么约定的事件消息名称是什么呢 要的约定的消息名称是logging

10:34.710 --> 10:40.310
好 那么我们这里就发送消息了logging 那么消息的内容是什么呢 内容就是用户名啊 有在内

10:40.910 --> 10:43.310
好吧 这个人给服务器 让服务器去处理 我就不管了

10:43.970 --> 10:49.290
就这么简单 好了吗 服务器这边是不是要写 服务器这边写的我单独建一个文件啊 来写服务器

10:50.050 --> 10:51.850
也来 也来一个chart 给他介绍

10:53.490 --> 10:54.050
chart server嘛

10:54.690 --> 10:55.250
chart server

10:55.970 --> 11:03.010
介绍 好 那么这个模块呢 我就导出啊 导出一个函数嘛啊 导出一个函数 你给我一个server

11:03.410 --> 11:08.290
我来进行处理 因为我们知道 烧黑城了 这里边要 要返回的就是

11:09.650 --> 11:12.450
要处理的就是要给他一个server啊 他来进行处理

11:12.830 --> 11:16.750
明儿的意思吧 所以说你要把这个server给他 因此呢 我们的微博收集成东西可以这样子寻

11:17.790 --> 11:19.310
呃 这边导入这个chart

11:21.790 --> 11:26.750
chart server啊 他不是一个函数吗 是不是一个函数啊 你给他server就完事了

11:27.550 --> 11:31.750
把个server给他就完事了 剩下的事情不用你管啊 那么我们这边写啥呢

11:32.390 --> 11:33.590
就是把之前的代码扔过来

11:34.590 --> 11:45.830
啊 就是我们这边需要建立一个服务器 对不对啊 建立一个服务器 然后呢 是不是要监听啊 监听的连接 对不对啊 一个新的 一个新的用户连接进来了 对吧 是不是要监听

11:46.610 --> 11:48.770
明儿的意思吧啊 就这么个意思

11:49.530 --> 11:53.570
好 那么我们这里 好 那么我们这里要监听啥呢 是不是要监听这个啊

11:54.530 --> 12:01.370
监听什么locking 啊locking这个消息 对不对啊 这是监听客户端消息

12:02.150 --> 12:05.670
好locking这个消息 当我们得到这个locking的消息的时候

12:06.510 --> 12:12.750
看一下这边啊 当我们把用户他把用户连会发送给我 对不对 那么我们这里这里说要得到有个用户连

12:13.190 --> 12:15.590
有招内 是不是要得到输出什么

12:18.150 --> 12:23.950
data嘛 输出data 你看一下吧 好 接下来我们来看一下 服务器

12:24.890 --> 12:35.550
哎 爆错了 怎么了 烧屁肠 哎呦 哦 这里别倒入 倒入啊

12:37.190 --> 12:42.550
好 好 没问题了啊 服务器这边没问题了 然后呢 到客户端这边来 客户端这边

12:44.510 --> 12:47.230
刷新 好 来吧 去掉

12:48.550 --> 12:52.750
好 我们这里 比方说成哥要进入进入聊天室了 一回车

12:53.390 --> 12:56.630
好 那你看服务器这边是不是要成哥了 对吧 他把消息给我发过来了

12:57.430 --> 13:03.710
原来的意思吧 好 那么服务器是不是要回应消息 那么在这里要回应 那怎么来回应呢 你看这个文的文道

13:04.430 --> 13:08.110
服务器呢 也要发送一个消息给客户端 消息的名称也是noggin

13:08.830 --> 13:16.310
消息的内容是什么呢 true 或者是force true表示登录成功 因为我这里难得去写账号密码了 登录成功 那force表示登录失败

13:17.230 --> 13:24.390
啊 那么什么时候登录失败呢 表示李称已存在 就是我们现在呢 就是已经登录了很多用户了 对吧 如果说李称已经我们的用户列表里边用

13:24.690 --> 13:35.370
李称已经存在了 你就不能进去了 你要换一个李称 对不对 或者是一些特殊的李称 比方有人取个名字叫的所有人 这也不好 对吧 所以说呢 我把这个李称呢 要限制一下

13:35.850 --> 13:44.370
那么我们要判断这个李称 是不是合理的 那么我们这里可以 当然这个东西可以记录到数据户啊 有哪些用户 那么我们这里就干脆用个数据得了 哪个去用数据户了

13:45.030 --> 14:11.310
U20 就是一个数据 这个数据里边呢 只要拿到一个用户 我就可能往这个数据里边夹一下 我就判断一下 判断一下这个数据里边有没有这个东西 我们比方说 比方说几个例子 如果说data等于什么所有人 这是个特殊的值 对吧 或者是U20include data 那么表示什么用户啊 用户李称不可用

14:12.290 --> 14:20.050
所以这种情况啊 李称不可用的话 我们怎么办 那么我们是不是给他socket

14:21.770 --> 14:23.050
那个什么amnit

14:24.010 --> 14:32.170
login 你看一下文档啊 始终注意到文档 我们给他发送的消息名称是login 然后呢 消息内容是true或者是force 那么我们就是force 对不对 不可用

14:33.290 --> 14:36.730
好 那么我们来看一下啊 这种情况 我们在这里再测试一下

14:39.840 --> 14:49.840
这些都去了啊 这是客户端 客户端的话 我们要监听服务器消息 客户端监听服务器消息 好来吧

14:50.800 --> 14:58.760
一个socket 我们监听啊啊login 服务器给我发送的回来的回应的login消息 那么得到一个结果 对不对 result

14:59.800 --> 15:08.370
出出vout好 看一下吧 我们看一下客户端跟服务器之间的交互 比方说我这里取个名字叫所有人

15:08.670 --> 15:10.190
一回车

15:13.510 --> 15:20.670
跑错了吗 没跑错啊 我这边刷新啊 应该是没刷新啊 那么这边应该取个名字 所有人一回车

15:21.270 --> 15:26.550
说服务器告诉我不行对吧 这个案子是不行的 好 如果说我取个正常的名字一回车

15:29.390 --> 15:37.150
正常的名 正常的名字我服务器还没有响应对不对 但是看到那个force对吧 所以表示不行对不对啊 表示不行 那么这边就很很简单了啊

15:37.530 --> 15:43.810
我们到服务器那边 如果说可以用 里程不可用的话就这样子 好 里程可用的话怎么办呢 我首先把这个

15:44.410 --> 15:50.490
用户名 是不是加到这个优责室里边 对不对啊 我们再往优责室里边 铺写一个啊 铺写一个什么呢

15:51.210 --> 15:53.970
data 对吧 铺写一个data

15:54.970 --> 15:58.490
原来的意思吧 然后呢 然后呢

16:00.130 --> 16:05.530
嗯 哦 这里还有一个问题啊 还有一个小问题 就是我们不仅要记录用户名

16:06.230 --> 16:15.710
我们不仅要记录用户名 还要记录这个用户名所对应的saucer车 为什么呢 将来可能有用啊 我们先 你先不管为什么 因为我现在很难给你解释

16:16.430 --> 16:22.190
我们先把都记录下来 以后这里边每一个呢 是一个对象啊 每一个是一个对象对象呢 是这样子啊 优责内

16:22.870 --> 16:29.590
等于啥啥啥啥 然后saucer车是一个对象啊 所有的对象就是这个东西 每一个用户的连接对象 我们把记录下来

16:30.230 --> 16:35.430
好 那么这里呢 我该应该这样子去 铺写的时候呢 铺写什么呢 我就这里不能用inclusive

16:36.150 --> 16:37.070
我们用这种方式

16:38.110 --> 16:43.110
看一下用field 看一下这个用户的user name 是不是

16:43.990 --> 16:44.870
等于data

16:45.790 --> 16:51.830
看这两个是不是一样的 那么得到一个得到一个数组对不对 看一个数组的长度 是不是大于零

16:52.390 --> 16:54.070
对不对 这样子还转用户是不是存在

16:54.790 --> 17:02.350
明儿意思吧 我们这里边这里边的格式是这样子的 我们马上就可以写了 好 如果说用户不存在的话 那么就是用户可用啊 里称可用

17:03.090 --> 17:10.330
好 如果说里称里称可用的话怎么办啊 里称可用的话 我们就加一个对象进去 对象是什么user name

17:11.170 --> 17:15.570
等于什么的data 表示个可用的对吧 然后呢sockets

17:17.690 --> 17:20.930
就是这个sockets 把这个加进去 明儿意思吧

17:21.970 --> 17:24.410
好 这是关于这个logging

17:25.330 --> 17:31.210
就写完了 然后来把加号数组里边去 然后呢 还不要忘了 给客户端响应一个啊 mslogging

17:31.710 --> 17:38.310
表示去 表示ok 里称可用的 明儿的意思吧 里称是可用的 好 我们同时呢 其实还可以在这

17:39.350 --> 17:42.830
记录一下当前的用户名 啊 比方说我们有一个类似和user

17:43.670 --> 17:47.510
当前的用户名 一开始以开始为控制户串

17:48.870 --> 17:55.630
当前用户名 就这个用户是谁 我们把记录下来 同时设置一下啊和user 等于

17:56.270 --> 17:58.030
data 对吧 都是用户名

17:58.970 --> 18:03.970
好了 那么这里就是logging 客户端给我们发一个消息logging进来 然后呢 我看一下你给这个用户名

18:04.530 --> 18:08.130
能不能用 不能用的话 我给你给你发这个发一个消息force

18:08.570 --> 18:14.250
然后呢 如果说可用的话 我把加入到数组里边去 加入到数组里边去 其实这里边还有很多细节的验证啊 我都没有去做

18:14.610 --> 18:19.970
因为他如果说反复登录的话 这个要出问题的 讲了就讲了很多很多用户了 只能拿着去弄这些东西的啊

18:20.810 --> 18:25.770
然后呢 把用户名保留下来 对吧 就这么个意思 好 那么这是这个logging

18:26.750 --> 18:30.830
好 那么到了客户端这边呢 我们要判断 你给我反而回到到底是去还是force

18:31.230 --> 18:38.270
如果说是 如果说是去的话怎么样 然后是force的话怎么样 force的话很简单 我就而拉扯一下啊 用户名

18:38.870 --> 18:42.390
就是里称不可用 请更换

18:43.150 --> 18:47.870
里称啊 那么请更换里称我是不是要把里称清空 那么我们就可以用配戟可以

18:48.950 --> 18:49.350
可丽尔

18:49.850 --> 18:58.650
啊 拿着写的啊 拿着写的啊 就是这样 里称不可用 请更换里称 如果说可用的话 怎么样 page into chart入 对不对 我刚才写了的

18:59.690 --> 19:02.730
page into chart入

19:06.060 --> 19:09.740
就这个函数 调整它 那么就进入去 进入这个聊天室

19:10.620 --> 19:12.380
好 写好了 我们来看一下吧

19:13.740 --> 19:20.380
这边刷新 这东西 这种词 可能一开始大家肯定不适应啊 本来适应 因为我们习惯了itp这种模式

19:21.340 --> 19:23.700
好 然后呢 这边刷新啊 我们这边无期清空

19:24.660 --> 19:27.820
好 这边来吧 来个城 所有人

19:29.780 --> 19:32.260
里称不可用 对吧 然后呢 来个城哥

19:33.700 --> 19:38.740
就进去了 对吧 进去了啊 那么这边是这个

19:39.700 --> 19:42.540
这个情况 是不是搞定了 这个登录就已经搞定了

19:43.340 --> 19:49.140
然后呢 现在呢 我们要进去过后来还要获取当前在线的用户 有哪些用户是在线的

19:49.440 --> 19:53.040
那么客户端是不是要发一个消息到users 发一个这样的消息 对不对

19:54.080 --> 19:57.840
那么还有一个 就是进去过后

19:59.280 --> 20:01.760
intuit chart入 进去过后是不是又要发消息了

20:02.160 --> 20:05.480
sockets ammage users

20:06.240 --> 20:11.040
进去过后是要发出发这个消息到服务器 那么消息内容呢 消息内容是控制不错 啥都不给他

20:11.480 --> 20:14.040
啥都不给他 不用给他 你告诉我所有的用户就行了

20:14.900 --> 20:19.380
那么服务器这边怎么来告诉所有的用户呢 如果说服务器收到消息

20:23.110 --> 20:28.030
sockets user 他收到这个消息 他没有给我任何东西 无所谓

20:28.590 --> 20:34.590
只要你收到这个消息 我就把这个这个数组是不是全部给你 对吧 但是我不给你这个数组里边还保存了什么

20:34.710 --> 20:39.030
保存了sockets的对象 那我就不给你sockets的对象了 我给你啥呢 我给你那个

20:39.550 --> 20:46.320
就是 我们打印出来吧 打印一下打印一下打印一下 users

20:47.140 --> 20:50.460
好 保存 咱们来看一下 小心

20:54.100 --> 21:00.380
来吧 我们来诚哥进去 好 进去过后你看 说数组里边是不是有一个 对吧 目前只有一个人 诚哥

21:01.060 --> 21:09.100
sockets 那么这边呢 这个东西我就不要了啊 这个sockets对象我就不要了 这个sockets对象呢 我给我把那个我就用这种方式

21:12.250 --> 21:19.190
ar users用mac 我只需要 user name就行了

21:20.090 --> 21:27.090
那么我把这个这个这个数组是不是扔给你 对不对sockets 我们就用amid同样的 users

21:28.610 --> 21:34.810
看这个文档 服务器那边要给他当前在行的用户 是不是消息名称还是有者子 然后给他用户数组

21:35.250 --> 21:36.370
好 我们把用户数组给他

21:36.870 --> 21:44.510
一二二 好给他 那么到了客户端这边是不是要接收 对不对 是不是有点不适应啊 一开始慢慢习惯吧 好 那么这边呢

21:45.190 --> 21:49.430
我得要给他发这个这个消息 那么如果说服务器的消息来了 我要接收对吧

21:49.870 --> 21:56.950
嗯 users 如果说服务器给我了一个消息 users 数组 好 那么我们来给我一个 users 那么客户端输出 users

21:58.350 --> 22:05.750
保存好 咱们来看一下吧 小心 诚哥

22:06.530 --> 22:14.570
好 回车 好 进来了 你看服务器给我们的是啥 给我们的是个数组诚哥 好 咱们再来一个啊 再来一个客户端

22:16.290 --> 22:19.090
又来 现在呢 我们表示邓哥

22:20.290 --> 22:23.330
回车 哎呦 这边 检查 控制台

22:24.330 --> 22:32.170
是不是给我们了两个 诚哥也在线 邓哥也在线 对吧 所以就要这样 这两个 那这里就简单了 对不对 那我们这里是不是用forf循环

22:32.670 --> 22:39.750
循环那个 users 每次循环干嘛 每次循环往那个调用那个配系里边的有方法add user 把我们之前

22:40.150 --> 22:43.670
就在UI.js里面写的啊 你可以自行在这里测试

22:45.910 --> 22:51.870
add user 自行测试 把这个U闯进去完成了 好 保存 再来

22:53.070 --> 22:55.950
刷新 这边刷新 然后呢

22:56.990 --> 22:58.670
服务器这边 我们再写诚哥

22:59.650 --> 23:05.330
刚才已经进去了 诚哥已经进去了 我现在还没有做退出 那么换一个吧 换一个

23:06.010 --> 23:07.010
比方说原歌

23:09.950 --> 23:15.190
原歌 我估计吧 我们在开发的过程中要把读义的所有老师用完

23:15.950 --> 23:22.590
你看 是吧 是不是这样子啊 又表示 你看看 现在目前在线如是三个

23:23.570 --> 23:31.410
好 那么这是关于这个啊 好像是不能对自己说话 无所谓吧 我们这些不用去关注这些细节 我们把整体做了就行了

23:32.250 --> 23:37.690
然后接下来呢 我们看一下啊 这两个这个两个是不完了 服务器发送消息 科普丹发送消息都完了

23:38.690 --> 23:42.250
对不对 然后现在还有一个情况就是新用户进入

23:44.370 --> 23:46.530
和用户离开 我们把这个东西做了

23:47.250 --> 23:52.010
有一个新的用户新来了 我要告诉所有人 有新的用户来了 服务器要主动推送给科普丹

23:52.550 --> 23:59.390
用户离开了 我要告诉所有人啊 用户离开了 那怎么样 我知道才知道有新用户进入呢 我们到服务器这边来

24:00.150 --> 24:07.030
什么情况下表示新用户进入了 是不是logging为处的时候 就这个地方 是吧 是不是表示新用户进入了

24:07.750 --> 24:08.710
新用户

24:10.390 --> 24:15.950
进入 那么这个时候我们是不是要推送给科普丹 表示有所给推送给所有的科普丹

24:16.630 --> 24:20.070
哪个用户来了 对吧 那我怎么样推送给所有的科普丹呢

24:20.410 --> 24:24.850
Sockets里面有这么一个东西 叫做 Broadcast 广播

24:26.250 --> 24:30.370
它表示什么意思呢 它表示我要发送一个消息给

24:30.890 --> 24:36.090
除了自己之外的所有的链接 因为我们服务器记录了所有的链接通道 一个科普丹来了

24:37.530 --> 24:39.610
服务器跟这个科普丹链接 比方说啊

24:42.530 --> 24:48.470
是这样子 我这里就随便画一个吧 这是我们的服务器

24:49.450 --> 24:50.450
只要有一个

24:51.690 --> 24:52.690
用这个表示服务器

24:53.810 --> 24:57.050
只要有一个科普丹来了 那么就有一个通道

24:58.170 --> 25:01.210
这是第二个科普丹 第三个科普丹 第四个科普丹

25:01.610 --> 25:07.250
一个科普丹只要还没断开 那么就在服务器之间建立一个通道 其实在服务器表现为是一个Sockets对象

25:07.970 --> 25:12.370
那么其中一个Sockets 我要广播到其他Sockets 那怎么办呢 就通过这个 Broadcast

25:12.930 --> 25:14.410
广播 就除了自己之外

25:15.150 --> 25:18.070
我把消息发送给所有的其他Sockets

25:18.390 --> 25:24.230
因为我们这里获取到只是自己的Sockets 就这一个用户的Sockets 我要发送给所有的Sockets

25:24.630 --> 25:25.510
就用Broadcast

25:26.230 --> 25:28.910
那么MX 什么呢 我们刚才看一下这里

25:33.830 --> 25:35.110
新用户金兰 那叫Usernin

25:36.070 --> 25:39.390
那么消息的是什么呢 消息内容就是用户名

25:39.710 --> 25:40.630
用户名的话 我们就

25:41.250 --> 25:43.170
这个用户金兰了 用户名就是这个玩意儿

25:45.450 --> 25:46.970
好 那咱们科普丹这边呢

25:47.490 --> 25:50.050
科普丹这边也很简单 科普丹这边是不是要接收

25:51.090 --> 25:52.050
对不对 是不是要接收

25:52.570 --> 25:54.130
那么接收的话

25:55.610 --> 25:56.210
我看一下啊

25:57.170 --> 25:59.770
要接收我们这边的就

26:02.700 --> 26:03.100
监听

26:04.300 --> 26:05.060
Usernin

26:05.340 --> 26:10.700
当一个新的用户金兰了 还会给我一个Usernin 那我怎么办 就是配合起ADD Usernin

26:10.940 --> 26:11.980
这个就非常简单

26:12.360 --> 26:13.480
好 保存 我们再来看一下

26:14.320 --> 26:17.480
现在呢 服务器这边 我们重序一下服务器吧

26:20.180 --> 26:21.380
给你右车啊 关掉

26:22.980 --> 26:24.660
嗯 重序一下服务器

26:27.630 --> 26:28.550
好 刷新一下啊

26:29.830 --> 26:30.030
刷新

26:31.550 --> 26:31.750
OK

26:33.030 --> 26:35.350
现在呢 我们用乘哥 先乘哥先进去

26:36.270 --> 26:37.270
好 你看 乘哥是不是进来了

26:37.790 --> 26:39.110
然后呢 再来 邓哥

26:40.470 --> 26:43.070
邓哥带进来

26:43.930 --> 26:47.930
你看 邓哥是不是进来了 在邓哥的界面里边 说有两个对不对

26:47.930 --> 26:49.930
但乘哥的界面里边说也有两个

26:49.930 --> 26:51.930
因为服务器推了一个邓哥进来了

26:51.930 --> 26:52.930
比方说我们再来一个

26:53.930 --> 26:54.930
我们把它分开吧

26:54.930 --> 26:56.930
分开你们看得清楚一点

27:00.240 --> 27:02.240
这个 开好多窗口啊 这个测试

27:03.240 --> 27:05.240
再来一个啊 你看 注意看这边啊

27:05.240 --> 27:06.240
再来一个

27:06.240 --> 27:08.240
我们再把这个也分开

27:13.580 --> 27:14.580
呃 原哥

27:15.440 --> 27:16.440
一回车

27:16.440 --> 27:18.440
你看 这边是不是推充过来了 服务器

27:18.440 --> 27:21.440
对吧 把新进来的用户推充到其他客户端了

27:21.440 --> 27:23.440
好 这就是这一块

27:24.440 --> 27:25.440
好 又来啊

27:26.440 --> 27:28.440
看着养亂了 养亂了

27:28.440 --> 27:30.440
新用户是不是搞定了

27:30.440 --> 27:31.440
那用户离开了

27:31.440 --> 27:32.440
用户跑了怎么办

27:32.440 --> 27:34.440
那么什么叫用户离开

27:34.440 --> 27:35.440
是不是socket断开了

27:35.440 --> 27:37.440
对吧 是不是socket断开了

27:37.440 --> 27:39.440
好 那么这么看 怎么这里看

27:39.440 --> 27:41.440
如果说这个socket

27:41.440 --> 27:43.440
服务器不会主动断开的

27:44.300 --> 27:46.300
就是叫disconnect

27:46.300 --> 27:48.300
是这个时间名吗

27:48.300 --> 27:50.300
我有点忘了啊

27:50.300 --> 27:53.870
socket

27:53.870 --> 27:55.870
看一下吧 是不是这个时间名

27:55.870 --> 27:57.870
在document里

27:57.870 --> 27:59.870
在server API

27:59.870 --> 28:01.870
看一下时间名

28:01.870 --> 28:05.500
disconnect

28:05.500 --> 28:09.580
对了

28:09.580 --> 28:11.580
好 当这个socket断开之后呢

28:11.580 --> 28:13.580
断开干嘛呢

28:13.580 --> 28:15.580
我是不是要通知其他客户端

28:15.580 --> 28:17.580
有个人跑了对吧

28:18.440 --> 28:20.440
那么这里怎么通知

28:20.440 --> 28:22.440
我们就用socket

28:22.440 --> 28:24.440
然后呢

28:24.440 --> 28:26.440
还是一样

28:26.440 --> 28:28.440
birdcast emit

28:28.440 --> 28:30.440
叫做user out

28:30.440 --> 28:32.440
有人跑了谁跑了

28:32.440 --> 28:34.440
是不是记录在这儿的

28:34.440 --> 28:36.440
当前用户跑了

28:36.440 --> 28:38.440
记录到这儿了可user

28:38.440 --> 28:40.440
不行如此 我还要干嘛呢

28:40.440 --> 28:42.440
我还要把这个user里面是不是那个东西去掉

28:42.440 --> 28:44.440
对吧 那怎么的

28:44.440 --> 28:46.440
从数字里面删除一下

28:46.440 --> 28:48.440
我们用filter

28:48.440 --> 28:50.440
应这个时候

28:50.440 --> 28:52.440
这个东西都不好找啊

28:52.440 --> 28:54.440
我们这样吧

28:54.440 --> 28:56.440
删除了

28:56.440 --> 29:00.260
循环删除吧

29:00.260 --> 29:02.260
n等于0

29:02.260 --> 29:04.260
n小于user's

29:04.260 --> 29:06.260
加加

29:06.260 --> 29:08.260
我一直觉得介石里面那个删除

29:08.260 --> 29:10.260
按照条件来删除

29:10.260 --> 29:12.260
这个做的不是那么好

29:12.260 --> 29:14.260
或者我们这样的这种方式吧

29:14.260 --> 29:16.260
从新复制的嘛

29:16.260 --> 29:18.260
把我们用户也不多

29:18.260 --> 29:20.260
再重新复制

29:20.260 --> 29:22.260
user's等于user's

29:22.260 --> 29:23.260
filter

29:23.260 --> 29:24.260
保留什么呢

29:24.260 --> 29:26.260
我们只保留那个

29:26.260 --> 29:28.260
用户的user's内

29:28.260 --> 29:30.260
不等于

29:30.260 --> 29:32.260
couruser's的

29:32.260 --> 29:33.260
只保留这个

29:33.260 --> 29:34.260
我们把这个user's去掉

29:34.260 --> 29:35.260
对吧

29:35.260 --> 29:37.260
好 那么这样就完事了

29:37.260 --> 29:39.260
这就删除了嘛

29:39.260 --> 29:40.260
好 那来吧

29:40.260 --> 29:41.260
我们来这边

29:41.260 --> 29:42.260
扣端这边是不是要监听

29:42.260 --> 29:44.260
socket

29:44.260 --> 29:45.260
叫做什么呢

29:45.260 --> 29:47.260
叫做那个discount

29:47.260 --> 29:49.260
叫做user out

29:49.260 --> 29:51.260
user out

29:51.260 --> 29:53.260
你看他会广播到其他客户端

29:53.260 --> 29:54.260
对不对

29:54.260 --> 29:55.260
其他客户端是不可以监听

29:55.260 --> 29:56.260
当用户退出的时候

29:56.260 --> 29:58.260
哪个用户退出了呢

29:58.260 --> 29:59.260
user's内

29:59.260 --> 30:00.260
那么我们这要干嘛呢

30:00.260 --> 30:01.260
page

30:01.260 --> 30:02.260
removeuser

30:02.260 --> 30:04.260
我们之前写好的这个接口

30:04.260 --> 30:05.260
好 奥存

30:05.260 --> 30:06.260
我们又来看

30:06.260 --> 30:11.180
我的天啊

30:13.180 --> 30:14.180
这边

30:14.180 --> 30:16.180
这是一个

30:17.180 --> 30:18.180
这两个

30:18.180 --> 30:20.180
好 这两个吧

30:20.180 --> 30:21.180
两个

30:21.180 --> 30:23.180
然后这里重启一下服务器

30:24.180 --> 30:26.180
好 刷新

30:26.180 --> 30:30.190
这边刷新

30:30.190 --> 30:32.190
好 来 一个个来

30:32.190 --> 30:34.190
首先是乘客

30:34.190 --> 30:36.190
进去

30:36.190 --> 30:38.190
然后呢 是凳哥

30:38.190 --> 30:40.190
进去

30:40.190 --> 30:42.190
怎么两个乘客呢

30:42.190 --> 30:45.820
放心

30:45.820 --> 30:46.820
凳哥退出了

30:46.820 --> 30:47.820
这个是正常的

30:47.820 --> 30:50.820
那么凳哥进去

30:50.820 --> 30:52.820
这样对吧

30:52.820 --> 30:54.820
然后呢 凳哥跑掉

30:54.820 --> 30:56.820
比方说我们这里刷新

30:56.820 --> 30:57.820
或者是退出

30:57.820 --> 30:58.820
刷新吗

30:58.820 --> 30:59.820
凳哥退出了

30:59.820 --> 31:00.820
退出了两件事

31:00.820 --> 31:01.820
对吧

31:01.820 --> 31:02.820
就这么简单

31:02.820 --> 31:03.820
对吧 就完了

31:03.820 --> 31:05.820
好 这是这一块

31:06.820 --> 31:07.820
那么这退出

31:07.820 --> 31:08.820
退出就搞定了

31:08.820 --> 31:09.820
然后新消息

31:09.820 --> 31:10.820
新消息是叫两端

31:10.820 --> 31:11.820
一个是客户端那边

31:11.820 --> 31:12.820
要发送新消息

31:12.820 --> 31:14.820
一个是服务器要发送新消息

31:14.820 --> 31:15.820
对吧

31:15.820 --> 31:17.820
好 客户端那边发送新消息

31:17.820 --> 31:18.820
什么时候发送呢

31:18.820 --> 31:19.820
是的

31:19.820 --> 31:20.820
我们不是一个世界版

31:20.820 --> 31:21.820
我们看一下

31:21.820 --> 31:22.820
当时写的事件

31:22.820 --> 31:24.820
别忘了

31:24.820 --> 31:26.820
就是配计

31:26.820 --> 31:28.820
帮sendmessage

31:28.820 --> 31:30.820
就这个事件

31:30.820 --> 31:32.820
帮sendmessage

31:34.820 --> 31:36.820
就是我是谁

31:36.820 --> 31:37.820
然后呢

31:37.820 --> 31:39.820
消息内容是啥

31:39.820 --> 31:41.820
给谁发

31:41.820 --> 31:42.820
给谁发

31:42.820 --> 31:43.820
是不是用这种方式

31:43.820 --> 31:45.820
那么我这里是不是就是

31:45.820 --> 31:47.820
发送到服务器

31:47.820 --> 31:49.820
就是发送一个消息过去

31:49.820 --> 31:51.820
看一下这边

31:51.820 --> 31:53.820
发送个消息过去

31:53.820 --> 31:55.820
message

31:55.820 --> 31:57.820
发送到服务器

31:57.820 --> 31:59.820
然后呢

31:59.820 --> 32:00.820
这里边呢

32:00.820 --> 32:02.820
我们找一找那个就是

32:02.820 --> 32:03.820
发送消息

32:03.820 --> 32:04.820
内容是怎么了

32:04.820 --> 32:05.820
内容是一个对象

32:05.820 --> 32:06.820
内容是一个对象

32:06.820 --> 32:08.820
发送给谁呢

32:08.820 --> 32:10.820
发送给谁

32:10.820 --> 32:11.820
就是这里的

32:11.820 --> 32:12.820
对吧

32:12.820 --> 32:13.820
就是

32:13.820 --> 32:14.820
好

32:14.820 --> 32:15.820
message呢

32:15.820 --> 32:16.820
就是康廷城的消息的内容

32:16.820 --> 32:17.820
就是message

32:17.820 --> 32:18.820
我其实不要了

32:18.820 --> 32:20.820
我这个消息是可以不要的

32:20.820 --> 32:21.820
然后这是发送到服务器

32:21.820 --> 32:22.820
那么告诉我

32:22.820 --> 32:24.820
我发了一个消息给他

32:24.820 --> 32:25.820
那么这里呢

32:25.820 --> 32:26.820
我们在这里呢

32:26.820 --> 32:27.820
需要去往界面上

32:27.820 --> 32:28.820
加一条消息对吧

32:28.820 --> 32:31.820
我们可以在这里写一个

32:31.820 --> 32:33.820
叫做add

32:33.820 --> 32:35.820
message

32:35.820 --> 32:37.820
那么就是配计

32:37.820 --> 32:38.820
add

32:38.820 --> 32:39.820
message

32:39.820 --> 32:40.820
我们就在客户端

32:40.820 --> 32:41.820
我是谁呢

32:41.820 --> 32:43.820
我不就是在配计里面的一个属性叫密

32:43.820 --> 32:44.820
那就是我

32:44.820 --> 32:45.820
或者就是用这个密

32:45.820 --> 32:46.820
我是谁

32:46.820 --> 32:47.820
然后呢消息内容呢

32:47.820 --> 32:48.820
这个

32:48.820 --> 32:49.820
发送给谁呢

32:49.820 --> 32:50.820
对吧

32:50.820 --> 32:52.820
这就是我们把消息发送给服务器

32:52.820 --> 32:53.820
好

32:53.820 --> 32:54.820
那么服务器那边是不是可以要监听

32:54.820 --> 32:56.820
同样的要监听

32:56.820 --> 32:57.820
sockets

32:57.820 --> 32:58.820
监听什么message

32:58.820 --> 32:59.820
那么看一下

32:59.820 --> 33:01.820
给我的信息是什么呢

33:01.820 --> 33:02.820
得到结果

33:02.820 --> 33:03.820
data

33:03.820 --> 33:05.820
输出data

33:05.820 --> 33:06.820
好

33:06.820 --> 33:11.380
再来看一下

33:11.380 --> 33:12.380
先不用多

33:12.380 --> 33:13.380
先不用多个端

33:13.380 --> 33:14.380
很绕的

33:14.380 --> 33:17.970
放心

33:17.970 --> 33:18.970
好

33:18.970 --> 33:19.970
来吧

33:19.970 --> 33:20.970
这边呢我写个

33:20.970 --> 33:21.970
成歌

33:22.970 --> 33:23.970
进去了

33:23.970 --> 33:24.970
然后呢我成歌呢

33:24.970 --> 33:26.970
对所有人说

33:26.970 --> 33:27.970
123

33:27.970 --> 33:28.970
一回车

33:28.970 --> 33:29.970
你看服务器是不是

33:29.970 --> 33:30.970
消息到2

33:30.970 --> 33:31.970
发送给谁

33:31.970 --> 33:32.970
那我表示所有人对吧

33:32.970 --> 33:33.970
content

33:33.970 --> 33:34.970
123

33:34.970 --> 33:35.970
好来吧

33:35.970 --> 33:36.970
我们再来当录一个

33:36.970 --> 33:38.970
nurphos

33:38.970 --> 33:40.970
这是凳哥

33:40.970 --> 33:43.730
凳哥进来了

33:43.730 --> 33:44.730
成歌那边也有了

33:44.730 --> 33:45.730
好那么现在呢

33:45.730 --> 33:47.730
成歌要发送给邓哥

33:47.730 --> 33:48.730
这个央视

33:48.730 --> 33:56.140
流浪期弄大一点

33:56.140 --> 33:57.140
好来吧

33:57.140 --> 33:59.140
对邓哥说

33:59.140 --> 34:00.140
说一句话

34:00.140 --> 34:01.140
回车

34:01.140 --> 34:02.140
你看

34:02.140 --> 34:03.140
科普端这边

34:03.140 --> 34:04.140
介面上改更新了

34:04.140 --> 34:05.140
那么邓哥这边

34:05.140 --> 34:07.140
消息也发动到服务器了

34:07.140 --> 34:09.140
服务器只是现在还没有处理

34:09.140 --> 34:10.140
所以邓哥这边是没有收到的

34:10.140 --> 34:11.140
服务器没有处理

34:11.140 --> 34:12.140
没了意思吧

34:12.140 --> 34:13.140
现在目前是这个样子

34:13.140 --> 34:15.140
那么现在要服务器处理的

34:15.140 --> 34:16.140
服务器怎么处理呢

34:16.140 --> 34:17.140
服务器

34:17.140 --> 34:18.140
诶服务器

34:18.140 --> 34:19.140
监听到这个消息

34:19.140 --> 34:20.140
那么这个消息呢

34:20.140 --> 34:21.140
它到底发送给谁呢

34:21.140 --> 34:23.140
如果说是发送给所有人

34:23.140 --> 34:24.140
那就很简单了

34:24.140 --> 34:25.140
又是用一个 broadcast

34:25.140 --> 34:26.140
对吧

34:26.140 --> 34:27.140
那么我看一下这个消息

34:27.140 --> 34:29.140
判断一下

34:29.140 --> 34:31.140
如果说

34:31.140 --> 34:33.140
data

34:33.140 --> 34:34.140
第二什么呢

34:34.140 --> 34:35.140
tue

34:35.140 --> 34:36.140
如果有值

34:36.140 --> 34:41.140
那么是发送给指定的用户

34:41.140 --> 34:42.140
对不对

34:42.140 --> 34:43.140
是不是发送给指定的用户

34:43.140 --> 34:45.140
else

34:45.140 --> 34:48.140
是发送给所有人

34:48.140 --> 34:49.140
好如果说发送给

34:49.140 --> 34:50.140
所有人的话

34:50.140 --> 34:51.140
非常非常简单

34:51.140 --> 34:55.140
我们就用socket broadcast

34:55.140 --> 34:56.140
然后用什么呢

34:56.140 --> 34:57.140
amd

34:57.140 --> 34:58.140
看一下吧

34:58.140 --> 35:00.140
给他提供一个什么

35:00.140 --> 35:01.140
新消息

35:01.140 --> 35:02.140
new message

35:02.140 --> 35:03.140
表示新消息来了

35:03.140 --> 35:04.140
然后按照要求

35:04.140 --> 35:06.140
我要给力可对象

35:06.140 --> 35:07.140
是哪个用户发送的呢

35:07.140 --> 35:08.140
哪个用户发送的

35:08.140 --> 35:09.140
就是我发送的

35:09.140 --> 35:10.140
我就不是这个玩意

35:10.140 --> 35:11.140
对吧

35:11.140 --> 35:12.140
这个用户发送的

35:12.140 --> 35:13.140
消息的内容是什么呢

35:13.140 --> 35:16.140
内容就是data.content

35:16.140 --> 35:17.140
对吧

35:17.140 --> 35:18.140
发送给所有人很简单

35:19.140 --> 35:21.140
新消息告诉你

35:21.140 --> 35:22.140
好那么客户端那边

35:22.140 --> 35:23.140
说要监听新消息

35:23.140 --> 35:25.140
我不管这个新消息怎么来的

35:25.140 --> 35:27.140
你只要给了我新消息

35:27.140 --> 35:28.140
我就监听

35:28.140 --> 35:29.140
监听新消息

35:29.140 --> 35:30.140
那么就是results

35:30.140 --> 35:31.140
服务器给我的结果

35:31.140 --> 35:32.140
那我要怎么办

35:32.140 --> 35:34.140
我就是其实就很简单

35:34.140 --> 35:35.140
用page

35:35.140 --> 35:36.140
add

35:36.140 --> 35:37.140
message

35:37.140 --> 35:39.140
哪个用户发送的呢

35:39.140 --> 35:40.140
我们就results

35:40.140 --> 35:41.140
from

35:41.140 --> 35:43.140
发送的消息内容是什么呢

35:43.140 --> 35:44.140
results content

35:44.140 --> 35:46.140
发送给谁的呢

35:46.140 --> 35:47.140
发送给我的

35:47.140 --> 35:48.140
哦不对

35:48.140 --> 35:51.140
这边还要写上一个to

35:51.140 --> 35:52.140
to

35:52.140 --> 35:53.140
还要写上一个发送给谁的

35:53.140 --> 35:55.140
还要写上一个to

35:55.140 --> 35:56.140
那么这边

35:56.140 --> 35:59.140
接收消息的人

35:59.140 --> 36:02.140
如果是now

36:02.140 --> 36:05.140
表示所有人

36:05.140 --> 36:06.140
好那么这边

36:06.140 --> 36:08.140
我们还要给他一个to

36:08.140 --> 36:10.140
就用这个吧

36:10.140 --> 36:14.140
to的话我们给他

36:14.140 --> 36:16.140
就用data.to吧

36:16.140 --> 36:18.140
发送给所有人吧

36:18.140 --> 36:20.140
就用data.to

36:20.140 --> 36:22.140
data.to

36:22.140 --> 36:24.140
好那么这边to的话也是一样

36:24.140 --> 36:26.140
results.to

36:26.140 --> 36:28.140
好了那么发送给所有人

36:28.140 --> 36:29.140
很简单了对吧

36:29.140 --> 36:30.140
好那来吧

36:30.140 --> 36:32.140
我们这边试一下

36:32.140 --> 36:33.140
又来又重新来

36:33.140 --> 36:34.140
试一下

36:34.140 --> 36:37.580
又重新来

36:37.580 --> 36:39.890
这里是

36:39.890 --> 36:40.890
乘哥

36:40.890 --> 36:42.890
进去

36:42.890 --> 36:43.890
登哥

36:43.890 --> 36:45.890
进去

36:45.890 --> 36:47.890
这里为什么又

36:47.890 --> 36:51.970
又来

36:51.970 --> 36:53.970
为什么有两个乘哥呢

36:53.970 --> 36:55.970
这出问题了

36:55.970 --> 36:57.970
这个地方出问题了

36:57.970 --> 36:59.970
先弄好再说吧

36:59.970 --> 37:01.970
乘哥

37:01.970 --> 37:02.970
这是登哥

37:02.970 --> 37:06.980
他这边给了我

37:06.980 --> 37:12.600
三个用户

37:12.600 --> 37:15.980
他给了我三个用户

37:15.980 --> 37:18.980
哦我明白了

37:18.980 --> 37:21.980
哦我明白了

37:21.980 --> 37:23.980
是这个地方的原因

37:23.980 --> 37:25.980
就是我刚才给我用户的时候

37:25.980 --> 37:26.980
有可能另一个客户端

37:26.980 --> 37:28.980
他还没有进入到聊天室见面

37:28.980 --> 37:29.980
没啥意思吧

37:29.980 --> 37:31.980
他还没有进入到聊天室见面

37:31.980 --> 37:33.980
没有进入到聊天室见面的时候

37:33.980 --> 37:34.980
就导致了

37:34.980 --> 37:37.980
这个聊天室里边呢

37:37.980 --> 37:39.980
导致了这个聊天

37:39.980 --> 37:40.980
就是他还

37:40.980 --> 37:42.980
就是乘哥登录的时候

37:42.980 --> 37:43.980
登哥都还没

37:43.980 --> 37:44.980
登哥已经有稍微扯了

37:44.980 --> 37:45.980
但是他还没有

37:45.980 --> 37:46.980
他还没有进入到

37:46.980 --> 37:47.980
聊天室的见面

37:47.980 --> 37:48.980
因此

37:48.980 --> 37:50.980
但是他个消息是收到了

37:50.980 --> 37:51.980
这个消息是收到了服务器的

37:51.980 --> 37:52.980
因此他把个用户

37:52.980 --> 37:53.980
已经加到聊天室里边去了

37:53.980 --> 37:55.980
然后进入了聊天室过后

37:55.980 --> 37:56.980
再重新获取了用户

37:56.980 --> 37:57.980
就导致了重复了

37:57.980 --> 37:58.980
他是这么一个情况

37:58.980 --> 38:01.980
那我这里判断一下吧

38:01.980 --> 38:03.980
我看怎么判断

38:03.980 --> 38:04.980
怎么判断

38:04.980 --> 38:06.980
我每一次进了聊天室过后

38:06.980 --> 38:07.980
进了聊天室过后

38:07.980 --> 38:09.980
我要去得到这个游热室

38:09.980 --> 38:10.980
得到游热室的时候

38:10.980 --> 38:12.980
我要把这个见面清空

38:12.980 --> 38:13.980
见面还原

38:13.980 --> 38:14.980
我要把见面还原

38:14.980 --> 38:16.980
所以说改动一下这个UI

38:16.980 --> 38:17.980
这个UI呢

38:17.980 --> 38:19.980
我要把见面还原

38:20.980 --> 38:21.980
我写个函数

38:24.980 --> 38:25.980
把这个聊天室

38:25.980 --> 38:26.980
就是拿这个聊天室的见面还原

38:26.980 --> 38:28.980
还原成最初最初的情况

38:35.180 --> 38:36.180
然后怎么还原呢

38:36.180 --> 38:38.180
我看一下添加一个用户

38:39.180 --> 38:40.180
把这个单码复制一下

38:44.860 --> 38:46.860
不许构建什么li

38:46.860 --> 38:48.860
我要把这个User List

38:48.860 --> 38:53.180
我要把这个User

38:54.180 --> 38:55.180
User

38:57.870 --> 38:59.870
我要把这个User

39:00.870 --> 39:02.870
它的内容全部清空

39:03.870 --> 39:06.870
我要把User内容全部清空

39:06.870 --> 39:09.760
这样

39:09.760 --> 39:14.120
User

39:15.120 --> 39:17.120
找了它的内容

39:19.120 --> 39:20.120
我现在说User

39:22.690 --> 39:24.690
User是之前记录过的

39:24.690 --> 39:25.690
User List

39:25.690 --> 39:27.690
对我要把User List清空

39:28.690 --> 39:29.690
User List

39:29.690 --> 39:30.690
还挺没有

39:30.690 --> 39:32.690
我要只给它复制为这个一个

39:34.690 --> 39:35.690
复制这一个

39:37.690 --> 39:39.690
然后把这个数字变了

39:39.690 --> 39:41.690
把这个数字变了

39:42.690 --> 39:43.690
数字

39:43.690 --> 39:46.320
我看一下

39:49.210 --> 39:50.210
这个地方

39:50.210 --> 39:52.210
我要把数字变了

39:52.210 --> 39:58.210
把数字变成0

40:00.840 --> 40:01.840
先清空

40:01.840 --> 40:03.840
清空了过后再来处理剩下的事情

40:04.840 --> 40:05.840
好了

40:05.840 --> 40:06.840
没有问题了吧

40:06.840 --> 40:09.840
然后我把那个东西再清除一下

40:09.840 --> 40:10.840
这个东西再清除一下

40:10.840 --> 40:11.840
User List

40:12.840 --> 40:14.840
这个东西再清除一下

40:14.840 --> 40:17.730
User List

40:18.730 --> 40:19.730
在前面

40:19.730 --> 40:26.780
再清除一下

40:26.780 --> 40:27.780
行了

40:27.780 --> 40:28.780
行了

40:29.780 --> 40:30.780
好那么这边呢

40:30.780 --> 40:31.780
到那个客户端这边来

40:31.780 --> 40:33.780
当我进入到这个

40:33.780 --> 40:35.780
当我获取到用服务器的

40:35.780 --> 40:36.780
这个东西的时候

40:36.780 --> 40:37.780
我先去清除

40:37.780 --> 40:38.780
Inlet

40:38.780 --> 40:39.780
User List

40:39.780 --> 40:40.780
先清除这个东西

40:40.780 --> 40:42.780
那么现在应该不会有问题了

40:43.780 --> 40:44.780
来吧

40:44.780 --> 40:45.780
刷新

40:46.780 --> 40:47.780
这边也刷新

40:48.780 --> 40:49.780
这边是乘哥

40:50.780 --> 40:51.780
进去

40:51.780 --> 40:52.780
这边是邓哥

40:53.780 --> 40:54.780
进去

40:54.780 --> 40:55.780
现在不会有问题了

40:55.780 --> 40:56.780
没问题了

40:56.780 --> 40:58.780
那么现在的乘哥发一个消息

40:58.780 --> 40:59.780
乘哥给所有人说

40:59.780 --> 41:00.780
一二三

41:01.780 --> 41:02.780
好那边这边

41:02.780 --> 41:03.780
是不是也刷到了

41:03.780 --> 41:04.780
他怎么刷到了

41:04.780 --> 41:06.780
他就靠这里刷到了

41:06.780 --> 41:07.780
看面

41:07.780 --> 41:08.780
好那么这边

41:08.780 --> 41:10.780
如果说乘哥对邓哥说

41:12.780 --> 41:13.780
回车

41:13.780 --> 41:14.780
那么邓哥这边

41:15.780 --> 41:16.780
邓哥这边

41:16.780 --> 41:17.780
我现在只处理了所有人

41:17.780 --> 41:19.780
还没有沾针对某一个人

41:19.780 --> 41:20.780
只处理了所有人

41:20.780 --> 41:21.780
那么现在是不是没问题了

41:21.780 --> 41:23.780
那么这里还有一个问题

41:23.780 --> 41:24.780
就是

41:24.780 --> 41:26.780
当我发送消息的时候

41:26.780 --> 41:27.780
当我发送消息的时候

41:27.780 --> 41:28.780
我要把他清空

41:28.780 --> 41:30.780
把他一个音铺子清空

41:30.780 --> 41:31.780
可以

41:31.780 --> 41:32.780
音铺子清空

41:32.780 --> 41:33.780
好了

41:33.780 --> 41:35.780
然后后面这个

41:35.780 --> 41:37.780
就是发送给指定的用户

41:37.780 --> 41:38.780
如果说这个消息

41:38.780 --> 41:39.780
是发送给指定的用户的话

41:39.780 --> 41:41.780
那么这个to是不是用户名

41:41.780 --> 41:42.780
那我是不是要从这个

41:42.780 --> 41:43.780
输主里面去找

41:43.780 --> 41:44.780
现在就知道了吧

41:44.780 --> 41:45.780
我为什么在输主里面

41:45.780 --> 41:46.780
要进入这个烧黑车

41:46.780 --> 41:47.780
那么这个时候

41:47.780 --> 41:48.780
我就不能占用这个烧黑车

41:48.780 --> 41:49.780
来Mate

41:49.780 --> 41:50.780
因为这个烧黑车

41:50.780 --> 41:51.780
用这个烧黑车的话

41:51.780 --> 41:52.780
就相当于是

41:52.780 --> 41:54.780
张三给我发了一个消息

41:54.780 --> 41:56.780
说发给李氏

41:56.780 --> 41:57.780
结果我把这个消息

41:57.780 --> 41:59.780
发给李还是发给张三了

41:59.780 --> 42:00.780
是不是我要去找

42:00.780 --> 42:01.780
李氏的烧黑车

42:01.780 --> 42:02.780
来发送这个消息

42:02.780 --> 42:03.780
这就是为什么

42:03.780 --> 42:04.780
我刚才要寄入这个烧黑车

42:04.780 --> 42:05.780
好

42:05.780 --> 42:06.780
那么我们在输主里面去找

42:07.780 --> 42:08.780
filter用找

42:08.780 --> 42:09.780
filter来找吧

42:10.780 --> 42:11.780
filter

42:13.780 --> 42:14.780
找到

42:14.780 --> 42:16.780
U点U在内

42:16.780 --> 42:17.780
等于什么呢

42:17.780 --> 42:19.780
等于data2

42:23.050 --> 42:24.050
US

42:24.050 --> 42:25.050
如果说找到了

42:25.050 --> 42:26.050
lens大于0

42:26.050 --> 42:27.050
是不是找到了

42:27.050 --> 42:28.050
找到了过后

42:28.050 --> 42:29.050
我们的用户是什么呢

42:29.050 --> 42:31.050
用户就是U

42:32.050 --> 42:34.050
我们就干脆干

42:34.050 --> 42:35.050
不管他找没找到

42:35.050 --> 42:36.050
肯定是找到了

42:36.050 --> 42:37.050
因为我们目前的情况

42:37.050 --> 42:38.050
肯定是要找到了

42:38.050 --> 42:40.050
找到这个U

42:40.050 --> 42:42.050
用户U

42:42.050 --> 42:44.050
找到这个用户

42:44.050 --> 42:46.050
其实也有可能没有找到

42:46.050 --> 42:47.050
这个情况了

42:47.050 --> 42:48.050
就是用户推出了

42:48.050 --> 42:49.050
这个地方推出了

42:49.050 --> 42:50.050
在这个地方没变

42:50.050 --> 42:51.050
不要登革推出了

42:51.050 --> 42:52.050
这个地方没了

42:52.050 --> 42:53.050
在这个地方没变

42:53.050 --> 42:54.050
不管他了

42:55.050 --> 42:56.050
那么这里

42:56.050 --> 42:57.050
找到这个用户

42:57.050 --> 42:59.050
然后U里边有个烧黑车

42:59.050 --> 43:01.050
用它来amnit

43:01.050 --> 43:02.050
消息

43:04.050 --> 43:06.050
newmessage

43:06.050 --> 43:07.050
是不是有点糟

43:07.050 --> 43:08.050
这个地方有点糟

43:08.050 --> 43:09.050
所以说烧黑车的地方

43:09.050 --> 43:10.050
我之前真有一点

43:10.050 --> 43:11.050
想把它作为扩展课程

43:11.050 --> 43:12.050
没事

43:12.050 --> 43:13.050
这个听不懂没关系

43:13.050 --> 43:14.050
里面以后

43:14.050 --> 43:15.050
写说给它的地方

43:15.050 --> 43:17.050
实际上是很少的

43:17.050 --> 43:18.050
方片子

43:18.050 --> 43:20.050
2就是给它2

43:21.050 --> 43:22.050
你看这两个

43:22.050 --> 43:23.050
好像是一样的对吧

43:24.050 --> 43:25.050
这两个是不是一样的

43:28.420 --> 43:29.420
这两个是一样的

43:29.420 --> 43:30.420
OK

43:30.420 --> 43:31.420
行了

43:31.420 --> 43:32.420
保存

43:32.420 --> 43:33.420
好来吧

43:33.420 --> 43:34.420
我们再来试一下

43:34.420 --> 43:36.860
刷新

43:37.860 --> 43:38.860
刷新

43:38.860 --> 43:41.370
然后关了

43:42.370 --> 43:44.370
拿一个乘鸽进去

43:45.370 --> 43:47.370
拿一个凳�进去

43:48.370 --> 43:49.370
再来一个

43:54.370 --> 43:56.370
现在是不是3个用户了

43:56.370 --> 43:58.370
那么现在诚哥说

43:58.370 --> 44:00.370
今天

44:00.370 --> 44:02.370
下午开会

44:03.370 --> 44:04.370
你看

44:04.370 --> 44:05.370
是不是所有人都收到了

44:05.370 --> 44:06.370
对吧

44:06.370 --> 44:08.370
然后邓哥说

44:10.370 --> 44:11.370
邓哥说

44:11.370 --> 44:14.370
你觉得我帅吗

44:14.370 --> 44:15.370
对吗

44:15.370 --> 44:16.370
对魔力卡强强的说

44:16.370 --> 44:17.370
一回车

44:17.370 --> 44:18.370
是不看不到

44:18.370 --> 44:19.370
对吧

44:19.370 --> 44:20.370
但是呢

44:20.370 --> 44:21.370
魔力卡能看到

44:21.370 --> 44:22.370
看一看

44:22.370 --> 44:23.370
魔力卡

44:23.370 --> 44:25.370
邓哥回来有一些

44:26.370 --> 44:29.870
非常帅

44:29.870 --> 44:30.870
好

44:30.870 --> 44:31.870
那么邓哥

44:31.870 --> 44:32.870
邓哥是可以看到的

44:32.870 --> 44:33.870
对吧

44:33.870 --> 44:34.870
但诚哥是看不到的

44:34.870 --> 44:35.870
都跟聊天室

44:35.870 --> 44:36.870
说出来了

44:36.870 --> 44:37.870
非常简易

44:37.870 --> 44:38.870
非常简易的聊天室

44:38.870 --> 44:39.870
也没有去动用什么数据库

44:39.870 --> 44:40.870
其实这些东西

44:40.870 --> 44:41.870
都可以存数据库的

44:41.870 --> 44:42.870
这聊天季度

44:42.870 --> 44:43.870
都可以存数据库的

44:43.870 --> 44:44.870
你看什么时候存

44:44.870 --> 44:45.870
新消息过了

44:45.870 --> 44:46.870
就准备

44:46.870 --> 44:47.870
谁发的发的什么内容

44:47.870 --> 44:48.870
一直存数据库的

44:48.870 --> 44:49.870
什么时间发的

44:49.870 --> 44:50.870
都可以存

44:50.870 --> 44:51.870
包括就是

44:51.870 --> 44:52.870
所谓的用户

44:52.870 --> 44:54.870
我们也可以存起来

44:54.870 --> 44:55.870
那么这个用户有没有登录

44:55.870 --> 44:56.870
我也可以把它存起来

44:56.870 --> 44:57.870
对吧

44:57.870 --> 44:58.870
这些东西都可以存的

44:58.870 --> 44:59.870
这是我这里面

44:59.870 --> 45:00.870
就用一个数据搞定就行了

45:00.870 --> 45:01.870
这就是一个聊天室

45:01.870 --> 45:02.870
有点热

45:02.870 --> 45:03.870
有点热

45:03.870 --> 45:04.870
但是因为你要记住

45:04.870 --> 45:05.870
我们的

45:05.870 --> 45:06.870
我也把收集车

45:06.870 --> 45:07.870
这种方式

45:07.870 --> 45:08.870
它就不再是那种

45:08.870 --> 45:09.870
请求响应的那种模式

45:09.870 --> 45:10.870
我给的东西

45:10.870 --> 45:11.870
你马上给我

45:11.870 --> 45:12.870
也反回一个结果

45:12.870 --> 45:13.870
它就不是这种

45:13.870 --> 45:14.870
一胆一回的格式

45:14.870 --> 45:15.870
我就不管你

45:15.870 --> 45:16.870
你要回我

45:16.870 --> 45:17.870
我再单独去监听

45:17.870 --> 45:18.870
你看

45:18.870 --> 45:19.870
这全都是分开的

45:19.870 --> 45:21.870
我直观给你发

45:21.870 --> 45:22.870
你看这边

45:22.870 --> 45:23.870
我直观给你发

45:23.870 --> 45:24.870
那你什么时候回我

45:24.870 --> 45:25.870
我在单独来监听

45:25.870 --> 45:26.870
你回我的消息

45:26.870 --> 45:28.870
它是那种分开的

45:28.870 --> 45:29.870
完全是分开的

45:29.870 --> 45:31.870
因为谁都可以发生主动

45:31.870 --> 45:32.870
就这么一个回事

45:32.870 --> 45:33.870
总之

45:33.870 --> 45:34.870
这个招臂的形式

45:34.870 --> 45:35.870
对我们的编辑代码

45:35.870 --> 45:36.870
来说的话

45:36.870 --> 45:37.870
最大的难点在于什么

45:37.870 --> 45:39.870
在于这个接口设计

45:39.870 --> 45:40.870
这个接口设计

45:40.870 --> 45:41.870
你没有点程序经验

45:41.870 --> 45:44.870
还是不是很好设计的

45:44.870 --> 45:45.870
那么这是关于

45:45.870 --> 45:47.870
这个外表烧黑色

45:47.870 --> 45:48.870
就讲到这了

45:48.870 --> 45:50.870
你说讲到三张

45:50.870 --> 45:51.870
也没有去讲的特别特别深

45:51.870 --> 45:53.870
因为以后你们出去

45:53.870 --> 45:56.870
你们使用烧黑色的场地比较少

45:56.870 --> 45:57.870
可能你要工作过

45:57.870 --> 45:58.870
三年四年

45:58.870 --> 46:00.870
去开发一些比较特殊的项目的时候

46:00.870 --> 46:01.870
可能会用到这个烧黑色

46:01.870 --> 46:02.870
OK

46:02.870 --> 46:03.870
那么就关于这个东西

