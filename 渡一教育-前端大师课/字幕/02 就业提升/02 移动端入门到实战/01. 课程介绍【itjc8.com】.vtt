WEBVTT

00:00.110 --> 00:05.750
各位同学 大家好 从今天开始 我们将进入一个UniApp的实战课程学习

00:05.750 --> 00:08.830
我呢 是本阶段的课程朱家老师 韩老师

00:08.830 --> 00:11.910
我们这个阶段的课程 主要分为两部分构成

00:11.910 --> 00:14.470
首先呢 我们是这个基础部分

00:14.470 --> 00:17.870
然后呢 其次是后期的我们项目部分

00:17.870 --> 00:21.430
那基础部分呢 我们会学习UniApp 包括小程序

00:21.430 --> 00:24.230
也就是微信小程序的一些基础EPI

00:24.230 --> 00:27.390
目的是让同学们能够快速的掌握小程序

00:27.390 --> 00:29.790
以及UniApp的一个开发基础

00:30.070 --> 00:33.470
来更好的实现我们的后期的项目按历制作

00:33.470 --> 00:36.190
那项目部分 我会带领大家从零开始

00:36.190 --> 00:39.270
去实现一个跨端的UniApp项目按历

00:39.270 --> 00:41.750
对于UniApp以及小程序来说

00:41.750 --> 00:45.430
相信同学们获得获少的 之前是有一些了解的

00:45.430 --> 00:47.630
如果不了解怎么办呢 也不用担心

00:47.630 --> 00:50.670
我们接下来啊 就一起去了解一下

00:50.670 --> 00:53.750
UniApp以及小程序的一些相关内容

00:53.750 --> 00:56.750
那么首先啊 我们先来说这个UniApp它是什么

00:56.910 --> 01:00.950
UniApp它是由DeCloud公司研发的一个使用Vue.js

01:00.950 --> 01:03.830
开发所有前端应用的这样一个框架

01:03.830 --> 01:07.150
概念非常简单 它就是一个跨端的框架

01:07.150 --> 01:10.750
它能够实现让我们去编写一套代码的同时

01:10.750 --> 01:13.110
把应用发布到多个平台

01:13.110 --> 01:16.310
比如说Android, iOS, H5

01:16.310 --> 01:18.750
包括多个平台的小程序

01:18.750 --> 01:20.830
它都是可以实现的

01:20.830 --> 01:23.670
我们可以看一下它这个官方文档

01:23.670 --> 01:26.270
在这里面我们打开这个链接

01:26.310 --> 01:29.910
这个呢 就是UniApp的一个官方文档

01:29.910 --> 01:32.390
里边呢 有一些掩饰的案例

01:32.390 --> 01:33.750
我们来尝试一下

01:33.750 --> 01:36.230
同学们可以看到下面是它的这个

01:36.230 --> 01:38.190
个个的一个发布平台

01:38.190 --> 01:41.190
那么现在啊 就让我们掏出手机动一动手指

01:41.190 --> 01:43.710
扫一下它下面的这个二维码

01:43.710 --> 01:46.670
然后呢 可以亲自去体验一下UniApp

01:46.670 --> 01:48.950
在不同平台上的一个体验

01:48.950 --> 01:51.190
同学们现在啊 可以暂停一下视频

01:51.190 --> 01:53.830
体验一下UniApp在各端的一个表现

01:53.870 --> 01:56.270
然后呢 再继续来听我的一个讲解

01:57.870 --> 02:00.590
好了 那现在让我们继续回来

02:00.590 --> 02:02.070
我们的课程学习

02:02.070 --> 02:04.350
刚才体验这个UniApp

02:04.350 --> 02:05.630
是不是感觉不错

02:05.630 --> 02:07.550
接下来呢 我们就是要实现

02:07.550 --> 02:09.270
通过UniApp的学习

02:09.270 --> 02:12.110
然后使用UniApp去写一个

02:12.110 --> 02:14.590
可以多端运行的项目

02:14.590 --> 02:16.230
那么我们啊 先说一下

02:16.230 --> 02:18.750
学习UniApp的一个本质

02:18.750 --> 02:21.430
主要原因啊 就是以下几个方面

02:21.470 --> 02:24.470
才让我们进行UniApp的一个学习

02:24.470 --> 02:27.510
第一点呢 就是移动端的技术太多了

02:27.510 --> 02:29.070
所以啊 跨端框架的

02:29.070 --> 02:31.510
一定是未来的一个发展趋势

02:31.510 --> 02:33.070
选择这个Uni框架

02:33.070 --> 02:35.830
是因为它可以帮我们节省很多的时间

02:35.830 --> 02:36.830
和这个成本

02:36.830 --> 02:40.750
同时呢 它还是使用Vilge S去开发的

02:40.750 --> 02:43.350
学习成本相对来说也是比较低的

02:43.350 --> 02:44.030
并且呢

02:44.030 --> 02:46.550
Declod公司对UniApp的重视程度

02:46.550 --> 02:47.710
也是很高的

02:47.710 --> 02:49.870
我们从它的这个更新频率来看

02:49.870 --> 02:52.470
也能看出它的一些各种进步

02:52.470 --> 02:53.470
第二点是什么呢

02:53.470 --> 02:57.030
就是它可以实现一套代码多端发布

02:57.030 --> 02:59.990
相信大部分接触过前端的同学

02:59.990 --> 03:03.990
都会被现在各种平台的一个代码搞得呢

03:03.990 --> 03:05.230
胶头烂恶

03:05.230 --> 03:08.310
每一个平台都有一套代码来维护成本

03:08.310 --> 03:09.350
高得不像话

03:09.350 --> 03:10.350
那能怎么办呢

03:10.350 --> 03:12.470
这里面我们就可以使用UniApp

03:12.470 --> 03:14.310
帮我们解决这个问题

03:14.310 --> 03:16.150
我们只要写一套代码

03:16.150 --> 03:18.310
就可以实现一个多端发布

03:18.350 --> 03:21.070
避免了我们去写多平台的一个代码

03:21.070 --> 03:21.710
所以说啊

03:21.710 --> 03:24.030
它更受开发者的一个亲爱

03:24.030 --> 03:24.830
第三点呢

03:24.830 --> 03:28.270
就是UniApp有一个完整的生态

03:28.270 --> 03:30.390
受企业的一个亲爱

03:30.390 --> 03:31.870
对于一个产品来说

03:31.870 --> 03:35.150
肯定是要继承一些三方的服务

03:35.150 --> 03:36.950
比如说我们的这个推送

03:36.950 --> 03:38.430
统计广告之类的

03:38.430 --> 03:40.830
现在面临这么多的平台

03:40.830 --> 03:42.470
肯定是都要去实现的

03:42.470 --> 03:44.310
但是对于这些公司来说呢

03:44.310 --> 03:47.230
用人开发的成本都会有所提高

03:47.270 --> 03:48.990
使用UniApp这些问题

03:48.990 --> 03:50.870
都可以轻松的解决掉

03:50.870 --> 03:52.790
比如说我们常用的这些推送

03:52.790 --> 03:54.390
统计广告这些服务

03:54.390 --> 03:57.230
都是合以很方便的去做一个集成

03:57.230 --> 03:59.270
只需要进行一个简单的配置

03:59.270 --> 04:00.990
就可以实现这些功能

04:00.990 --> 04:01.590
所以说呢

04:01.590 --> 04:06.430
用UniApp也是会更被企业所亲爱的

04:06.430 --> 04:07.590
基于以上三点呢

04:07.590 --> 04:11.270
所以我们有必要来对UniApp进行一个学习

04:11.270 --> 04:12.790
这样就可以快速的

04:12.790 --> 04:14.790
帮我们解决上述的问题

04:14.790 --> 04:17.110
既然要学习一个新技术

04:17.110 --> 04:20.550
我们首先是要了解它的一个优势在哪里

04:21.670 --> 04:22.430
我在这里呢

04:22.430 --> 04:23.790
从它的文档啊

04:23.790 --> 04:25.710
记录了六个方面

04:25.710 --> 04:27.590
给大家来简单的说一下

04:27.590 --> 04:30.910
同学们也可以在这个文档里面来找到它

04:30.910 --> 04:31.590
这个里面呢

04:31.590 --> 04:32.950
也是有这六个方面的

04:32.950 --> 04:34.950
首先我们来看第一个

04:34.950 --> 04:37.670
开发者案例数量最多

04:37.670 --> 04:41.270
横向比对其他的这个开发框架

04:41.270 --> 04:43.870
我们的这个UniApp的案例和开发者

04:43.870 --> 04:45.470
它是最多的

04:45.470 --> 04:46.750
几十万的应用

04:46.750 --> 04:48.350
UniApp统计的一个数字

04:48.350 --> 04:50.670
越活量有12亿

04:50.670 --> 04:53.550
而且这个数字还在不断的增加

04:53.550 --> 04:55.670
它的社区也很活跃

04:55.670 --> 04:57.630
像微信QQ群加起来

04:57.630 --> 04:59.750
总共有70多个平台

04:59.750 --> 05:00.190
第二呢

05:00.190 --> 05:01.510
就是它的这个能力

05:01.510 --> 05:03.830
不受限制的这样一个特点

05:03.830 --> 05:06.030
在平常我们去做H5开发

05:06.030 --> 05:08.230
或者是App小程序的时候

05:08.230 --> 05:10.910
都需要去编写一套独立的代码

05:10.910 --> 05:13.870
而前端开发的App更是麻烦了很多

05:13.870 --> 05:15.430
那么通过使用UniApp

05:15.430 --> 05:18.270
我们可以很方便的去解决这些问题

05:18.270 --> 05:19.110
一套代码

05:19.110 --> 05:21.750
它可以全平台的进行一个发行

05:21.750 --> 05:23.390
在跨端的这个同时

05:23.390 --> 05:25.150
还可以通过条件变异

05:25.150 --> 05:26.870
去写指定了某个平台的

05:26.870 --> 05:28.310
一些个性化的代码

05:28.310 --> 05:29.750
这个我们在案例里面

05:29.750 --> 05:31.510
都是会有提前到的

05:31.510 --> 05:32.270
第三呢

05:32.270 --> 05:34.430
我们再来说一下它的性能

05:34.430 --> 05:36.750
它的性能体验是非常优秀的

05:36.750 --> 05:39.310
在App端的使用了一个

05:39.310 --> 05:40.750
更好的Hiber的框架

05:40.750 --> 05:42.670
也就是说混合开发的框架

05:42.670 --> 05:45.710
页面打开的渲染速度是非常快的

05:45.710 --> 05:48.310
而且支持原生的一个VIX渲染

05:48.310 --> 05:51.830
提供了一个更优秀的这样一个用户体验

05:51.830 --> 05:52.550
那么在这里面

05:52.550 --> 05:54.870
先提前跟大家说一下什么是VIX呢

05:54.870 --> 05:57.190
VIX也是使用Web技术来构建的

05:57.190 --> 06:00.230
一个Android和LOS应用的一个框架

06:00.230 --> 06:02.750
同时小程序也做到了一个

06:02.750 --> 06:04.070
性能优于市场上

06:04.070 --> 06:07.390
其他框架的这么一个特点

06:07.390 --> 06:10.590
接着我们来看一下周边的一个生态丰富

06:10.590 --> 06:12.630
UniApp有自己的一个插件

06:12.630 --> 06:14.230
市场累积到现在呢

06:14.230 --> 06:17.430
已经有上千可用的这个UniApp插件了

06:17.430 --> 06:20.750
而且用UniApp还支持NPM的形式

06:20.750 --> 06:22.310
进行一个安装

06:22.310 --> 06:26.430
支持小程序组件和SDK兼容MPVO组件

06:26.430 --> 06:28.750
和项目兼容的一些VIX组件

06:28.750 --> 06:31.510
可以说它的兼容性是相当的丰富了

06:31.510 --> 06:34.150
也就是说在我们接下来的学习过程当中

06:34.150 --> 06:37.790
我们既可以从这个UniApp的这个市场里面

06:37.790 --> 06:39.870
插件市场里面直接进行安装

06:39.910 --> 06:42.510
我们还可以进行使用这种NPM的形式

06:42.510 --> 06:44.150
进行一个安装

06:44.150 --> 06:45.830
这对于我们前端的同学来说

06:45.830 --> 06:48.790
开发起来就会更加的一个方便

06:48.790 --> 06:49.430
第五个呢

06:49.430 --> 06:52.070
就是它的这个学习成本是比较低的

06:52.070 --> 06:55.590
UniApp是基于通用的一个前端技术站

06:55.590 --> 06:56.670
采用VO的语法

06:56.670 --> 07:00.390
加上一个微信小程序的这个API的方式来开发的

07:00.390 --> 07:04.230
大部分前端同学都可以很低的成本去学习

07:04.230 --> 07:07.710
而且使用起来也是相当简单的

07:07.710 --> 07:08.510
最后一个呢

07:08.510 --> 07:11.470
就是它的这个开发成本比较低

07:11.470 --> 07:15.670
UniApp一套代码可以去多平台进行一个发布

07:15.670 --> 07:18.750
那肯定是降低了我们的一个开发成本

07:18.750 --> 07:20.750
虽然是一个人干了这么多平台

07:20.750 --> 07:25.150
其实开发的时间并不会比开发单一平台多太多

07:25.150 --> 07:27.190
UniApp的一个代码负用性

07:27.190 --> 07:27.750
而且呢

07:27.750 --> 07:29.470
是非常强的

07:29.470 --> 07:31.350
哪怕是有一些平台的差异

07:31.350 --> 07:33.550
比如说我们在这个小程序上

07:33.550 --> 07:35.790
可能显示的这个界面效果

07:35.790 --> 07:37.710
我们在H5不想去显示

07:37.710 --> 07:40.110
那我们就可以使用这个平台编译

07:40.110 --> 07:41.710
做单独的一些处理

07:41.710 --> 07:42.270
这点呢

07:42.270 --> 07:43.270
对于公司来说

07:43.270 --> 07:44.550
不只是开发成本

07:44.550 --> 07:45.590
你像招聘呢

07:45.590 --> 07:46.230
管理啊

07:46.230 --> 07:48.310
还有测试各方面的这个成本

07:48.310 --> 07:50.510
都会有一个大幅的相价

07:50.510 --> 07:51.070
最后呢

07:51.070 --> 07:53.230
我们再掌握了这个HBO的差

07:53.230 --> 07:54.990
这个高效的开发神器

07:54.990 --> 07:57.390
并且可以熟练的使用之后

07:57.390 --> 07:58.670
研发的效率啊

07:58.670 --> 08:00.550
一定是会翻倍的

08:01.790 --> 08:04.990
那么通过这以上6点内容的介绍呢

08:04.990 --> 08:07.470
相信同学们对这个UniApp

08:07.470 --> 08:09.350
有了一个简单的了解

08:09.350 --> 08:10.990
我们前面说过啊

08:10.990 --> 08:12.990
Uni是基于Viu.js

08:12.990 --> 08:14.670
去开发的一个框架

08:14.670 --> 08:16.350
那我们来了解一下

08:16.350 --> 08:19.550
UniApp跟Viu之间的一个关联

08:19.550 --> 08:20.270
第一点呢

08:20.270 --> 08:21.750
就是UniApp

08:21.750 --> 08:24.990
整体是基于Viu.js去开发的

08:24.990 --> 08:27.590
它使用了Viu.js的一个开发风格

08:27.590 --> 08:29.670
有着呢和Viu.js

08:29.670 --> 08:32.150
相同的一个语法特性

08:32.150 --> 08:33.470
对于H5来说

08:33.470 --> 08:34.430
你可以啊

08:34.430 --> 08:37.430
几乎实现无差别的使用Viu的语法

08:37.430 --> 08:39.350
也就是说UniApp在H5端

08:39.350 --> 08:41.350
它是完全支持Viu语法的

08:41.350 --> 08:42.310
但是在这个里面呢

08:42.310 --> 08:44.270
我们也需要注意一些问题

08:44.270 --> 08:46.590
比如说我们接下来的代码部分啊

08:46.590 --> 08:47.470
它UniApp呢

08:47.470 --> 08:49.390
其实是对Viu的这个底层

08:49.390 --> 08:51.670
进行了一个二次封装

08:51.670 --> 08:54.230
所以在某些语法的使用当中

08:54.230 --> 08:54.910
最好呢

08:54.910 --> 08:57.110
我们是去参考文档

08:57.110 --> 08:57.470
然后呢

08:57.470 --> 09:00.070
避免出现一些不必要的这个错误

09:00.070 --> 09:02.070
所以说在每个学习的知识点中

09:02.070 --> 09:04.550
比如说咱们这个MD文档当中啊

09:04.550 --> 09:07.710
我的每一个API的参考地址啊

09:07.710 --> 09:09.270
都会给大家贴出来

09:09.270 --> 09:09.830
所以说呢

09:09.830 --> 09:12.390
这个同学们也不用担心

09:12.390 --> 09:14.590
既然说到了这个全部都支持

09:14.590 --> 09:17.590
那肯定会有不完全支持的这个情况

09:17.590 --> 09:19.510
就是是发布到App

09:19.510 --> 09:21.950
以及我们的这个小程序端使用

09:21.950 --> 09:23.350
因为这个平台的限制

09:23.350 --> 09:25.990
我们无法使用Viu的这个语法

09:25.990 --> 09:28.190
就像Want这种UI框架

09:28.190 --> 09:29.510
包括Viu Router

09:29.550 --> 09:32.470
这些Viu里面的一些内置API

09:32.470 --> 09:35.670
以及一些需要操作的这个DOM的三方插件

09:35.670 --> 09:38.070
组件我们肯定是用不了的

09:38.070 --> 09:39.190
那因为小程序啊

09:39.190 --> 09:41.310
它是不支持我们这样操作DOM的

09:41.310 --> 09:42.150
为了接引融化

09:42.150 --> 09:44.510
UniApp也是集成了这一点

09:44.510 --> 09:44.990
所以说呢

09:44.990 --> 09:47.750
我们直接的调一些其他的API

09:47.750 --> 09:50.510
来实现这种功能就OK了

09:50.510 --> 09:52.990
说完了UniApp跟Viu的关系之后

09:52.990 --> 09:54.630
那我们再来说一下

09:54.630 --> 09:58.350
这个UniApp和小程序之间的一个关系

09:59.310 --> 09:59.950
第一个呢

09:59.950 --> 10:01.550
就是组件标签

10:01.550 --> 10:04.270
靠近小程序的一个规范

10:04.270 --> 10:05.590
这个是啥意思呢

10:05.590 --> 10:06.750
虽然说UniApp啊

10:06.750 --> 10:08.630
它是基于Viu开发的

10:08.630 --> 10:09.310
但是呢

10:09.310 --> 10:11.670
组件标签是靠近小程序规范的

10:11.670 --> 10:14.190
也就是说它跟小程序特别的像

10:14.190 --> 10:15.630
就是我们去开发常规的

10:15.630 --> 10:17.070
外表应用页面的时候

10:17.070 --> 10:18.670
比如说我们使用的是一些

10:18.670 --> 10:20.350
传统的这个DMV

10:20.350 --> 10:21.670
死判这些标签

10:21.670 --> 10:22.750
但是在UniApp中啊

10:22.750 --> 10:24.750
我们使用了类似小程序的

10:24.750 --> 10:27.390
Viu,Tax,Image这些标签

10:27.430 --> 10:28.470
我们在这里边

10:28.470 --> 10:29.670
也不叫它标签

10:29.670 --> 10:30.270
那这些呢

10:30.270 --> 10:33.230
我们会在UniApp中的一个属性环节啊

10:33.230 --> 10:35.230
会有一个详细的讲解

10:35.230 --> 10:35.710
第二个

10:35.710 --> 10:37.630
就是这个接口能力

10:37.630 --> 10:39.470
JS API

10:39.470 --> 10:39.990
它呢

10:39.990 --> 10:42.310
靠近小程序开发

10:42.310 --> 10:44.350
就是我们可以在这个项目中

10:44.350 --> 10:46.510
直接使用手机的一些能力

10:46.510 --> 10:47.950
比如说去拨打电话

10:47.950 --> 10:49.750
获取一些地理位置信息

10:49.750 --> 10:50.710
这些功能

10:50.710 --> 10:52.750
实际上Viu是并没有这些功能的

10:52.750 --> 10:55.110
所以我们去使用小程序的API

10:55.110 --> 10:56.710
去完善这方面的内容

10:56.710 --> 10:58.590
用法几乎和微信小程序

10:58.590 --> 10:59.670
没有什么区别

10:59.670 --> 11:02.830
只是把VX对象换成了

11:02.830 --> 11:05.830
我们Uni这种前队的对象

11:05.830 --> 11:06.270
这个呢

11:06.270 --> 11:06.870
在后面

11:06.870 --> 11:09.030
我们也会有一个详细的讲解

11:09.030 --> 11:09.630
在这里面

11:09.630 --> 11:11.110
同学们先做一下了解

11:12.230 --> 11:12.790
最后呢

11:12.790 --> 11:16.670
就是UniApp在Viu生命周期的基础上

11:16.670 --> 11:19.790
又扩展了一个小程序的生命周期

11:19.790 --> 11:21.110
也就是说它支持

11:21.110 --> 11:23.350
完整的小程序生命周期

11:23.350 --> 11:25.270
那它的这个生命周期啊

11:25.270 --> 11:27.510
在这个UniApp的开发笔众当中

11:27.510 --> 11:29.030
它是占比还是挺大的

11:29.030 --> 11:29.710
这个呢

11:29.710 --> 11:31.910
也会做我们我们一个重点啊

11:31.910 --> 11:33.950
来进行一个学习

11:33.950 --> 11:34.910
那这个张图呢

11:34.910 --> 11:37.310
就是我们的这个UniApp开发的

11:37.310 --> 11:38.510
这个代码结构

11:38.510 --> 11:40.750
和我们传统WAP的一个区别

11:40.750 --> 11:41.310
上面呢

11:41.310 --> 11:42.510
是我们的WAP部分

11:42.510 --> 11:44.230
下面就是UniApp

11:44.230 --> 11:45.350
同学们会发现

11:45.350 --> 11:48.310
UniApp与我们平常做WAP开发

11:48.310 --> 11:49.390
一个最大的区别

11:49.390 --> 11:51.230
就是标签的一个不同

11:51.230 --> 11:53.630
至于它的这个里面的结构啊

11:53.630 --> 11:56.070
包括标签的一些属性啊

11:56.070 --> 11:57.550
几乎完全一致

11:57.550 --> 11:57.950
然后呢

11:57.950 --> 11:58.710
所以说

11:58.710 --> 11:59.750
那你看上面这个

11:59.750 --> 12:01.190
是我们的这个WAP结构

12:01.190 --> 12:02.430
里面的容器标签

12:02.430 --> 12:04.390
我们通常习惯的使用什么

12:04.390 --> 12:04.830
这种啊

12:04.830 --> 12:06.990
DIV的形式作为容器标签

12:06.990 --> 12:07.830
虽然图片呢

12:07.830 --> 12:08.670
我们使用这种

12:08.670 --> 12:11.390
AMG标签的形式来实现

12:11.390 --> 12:12.390
那在UniApp中呢

12:12.390 --> 12:13.790
我们的容器标签

12:13.790 --> 12:16.190
就使用这种view来代替

12:16.190 --> 12:16.670
然后呢

12:16.670 --> 12:18.270
比如说里面的这个图片

12:18.270 --> 12:20.910
我们就用image标签来实现

12:20.910 --> 12:21.670
并且呢

12:21.710 --> 12:22.270
这种啊

12:22.270 --> 12:24.230
它是有一个必和标签的

12:24.230 --> 12:27.270
基于我们这个传统的这个WAP相比

12:27.270 --> 12:29.230
还是有一定区别的

12:29.230 --> 12:29.670
然后呢

12:29.670 --> 12:31.350
再看一下我们这些文本

12:31.350 --> 12:31.790
文本呢

12:31.790 --> 12:33.870
我们之前是使用这种P标签

12:33.870 --> 12:35.230
但是在UniApp当中啊

12:35.230 --> 12:37.030
我们如果说对文本处理的话

12:37.030 --> 12:38.070
那我们可以使用这种

12:38.070 --> 12:40.110
tax的或者spottax的

12:40.110 --> 12:41.510
来代替这种P标签

12:41.510 --> 12:42.790
或者是spot标签

12:42.790 --> 12:44.350
是都可以的啊

12:44.350 --> 12:44.630
然后呢

12:44.630 --> 12:45.750
其实这两种语法

12:45.750 --> 12:47.310
最终我们实现的效果

12:47.310 --> 12:48.630
其实在这里面

12:48.630 --> 12:50.350
它本质上都是一样的

12:50.350 --> 12:52.310
只是说我们的这个协法有些不同

12:52.310 --> 12:53.790
所以说这个UniApp

12:53.790 --> 12:54.950
它是最快速

12:54.950 --> 12:56.470
对于我们前端同学来说

12:56.470 --> 12:57.870
上手是最快速的

12:57.870 --> 12:59.110
所以说同学们在这里面

12:59.110 --> 13:00.190
只需要注意一下

13:00.190 --> 13:01.790
就ok了

13:01.790 --> 13:02.510
那接下来呢

13:02.510 --> 13:03.150
就是同学们

13:03.150 --> 13:04.910
比较关注的一个问题

13:04.910 --> 13:07.070
通过一个课程的学习

13:07.070 --> 13:07.630
我们呢

13:07.630 --> 13:09.310
自己会有哪些收益

13:09.310 --> 13:09.750
首先呢

13:09.750 --> 13:10.830
我们会全面的

13:10.830 --> 13:11.670
去了解一下

13:11.670 --> 13:13.590
UniApp技术的这个本身

13:13.590 --> 13:14.230
最终呢

13:14.230 --> 13:15.190
去适配

13:15.190 --> 13:15.830
兼容

13:15.830 --> 13:16.430
安卓

13:16.430 --> 13:17.550
iOS

13:17.550 --> 13:19.070
以及我们的这个H5

13:19.070 --> 13:21.630
成群小城区的一个四个平台

13:21.630 --> 13:22.910
我们会掌握UniApp的

13:22.910 --> 13:25.230
一个完整的前后端开发流程

13:25.230 --> 13:26.230
这里的前后端

13:26.230 --> 13:27.710
只需要我们前端同学

13:27.710 --> 13:29.870
就可以完全的实现了

13:29.870 --> 13:30.230
我们呢

13:30.230 --> 13:31.310
使用了UniApp

13:31.310 --> 13:33.470
加上UniCloud的这种方式

13:33.470 --> 13:34.910
去做开发

13:34.910 --> 13:35.550
第三个呢

13:35.550 --> 13:36.870
就是我们掌握

13:36.870 --> 13:38.830
敏捷的这个开发技巧

13:38.830 --> 13:40.190
我们全程会学习

13:40.190 --> 13:41.950
组件化的一个开发速度

13:41.950 --> 13:43.470
让我们的带码开发效率

13:43.470 --> 13:44.350
和维护效率啊

13:44.350 --> 13:46.150
都会有所提高

13:46.150 --> 13:46.830
接下来呢

13:46.830 --> 13:47.910
我们看一下

13:47.910 --> 13:50.470
我们学习详细的知识点

13:50.470 --> 13:51.910
都会有那些

13:51.910 --> 13:54.550
我们会从基础的这个知识开始

13:54.550 --> 13:56.230
首先学习一下原生的

13:56.230 --> 13:58.390
小程序的一些知识

13:58.390 --> 13:59.750
对学习小程序的相关

13:59.750 --> 14:01.990
iPi提供了一个入门的介绍

14:01.990 --> 14:02.510
这里面啊

14:02.510 --> 14:03.790
包括它的一个结构

14:03.790 --> 14:04.630
基本的iPi

14:04.630 --> 14:06.510
以及生命周期数据处理

14:06.510 --> 14:07.630
都会有讲到

14:07.630 --> 14:08.270
接下来呢

14:08.270 --> 14:08.990
我们会学习

14:08.990 --> 14:10.910
UniApp的一个环境大建

14:10.910 --> 14:12.910
包括它的这个工具下载

14:12.910 --> 14:14.870
以及创建UniApp的一些

14:14.870 --> 14:16.110
基础知识点

14:16.110 --> 14:16.630
最后呢

14:16.670 --> 14:18.630
学习如何通过UniCloud

14:18.630 --> 14:21.550
实现一个后端服务的这个创建

14:21.550 --> 14:24.710
我们会去了解UniCloud的云开发平台

14:24.710 --> 14:25.870
包括UniCloud

14:25.870 --> 14:28.270
简单的了解环境的一个配置

14:28.270 --> 14:30.950
和UniCloud的一个基础知识

14:30.950 --> 14:31.350
在这里

14:31.350 --> 14:32.910
同学们要明确一下

14:32.910 --> 14:34.870
我们所有的基础知识的学习

14:34.870 --> 14:37.150
都是实现后期的项目制作

14:37.150 --> 14:39.350
做的一个提前的一个准备

14:39.350 --> 14:40.030
我们的课程

14:40.030 --> 14:40.590
重点呢

14:40.590 --> 14:42.790
就是实战项目的一个开发

14:42.790 --> 14:43.110
所以说

14:43.110 --> 14:45.310
我们会从页面的构建数据处理

14:45.350 --> 14:47.510
逻辑实现三个方面

14:47.510 --> 14:49.470
来进行项目讲解

14:49.470 --> 14:50.870
从每个小模块入手

14:50.870 --> 14:51.470
最终呢

14:51.470 --> 14:54.110
大建出来一个完整的项目

14:54.110 --> 14:56.270
为了提高我们的一个开发效率

14:56.270 --> 14:57.550
在开发过程当中呢

14:57.550 --> 15:01.710
同时会引用一些三方的组架

15:01.710 --> 15:02.430
然后呢

15:02.430 --> 15:03.230
最后一步

15:03.230 --> 15:05.790
我们就要去适配多平台

15:05.790 --> 15:06.670
多平台打包

15:06.670 --> 15:08.070
以及平台发布

15:08.070 --> 15:09.070
最后达到一个

15:09.070 --> 15:12.110
可以上线的这样一个标准啊

15:12.110 --> 15:12.430
好的

15:12.430 --> 15:14.190
那这些基础处的知识

15:14.190 --> 15:14.750
结构啊

15:14.750 --> 15:16.550
跟同学们介绍完之后

15:16.550 --> 15:16.990
我们呢

15:16.990 --> 15:18.190
看看这个课程

15:18.190 --> 15:20.270
会做一个什么样的项目

15:20.270 --> 15:20.910
这里面呢

15:20.910 --> 15:24.590
有我们每个中端的一个演示链接

15:24.590 --> 15:25.630
我们可以下载啊

15:25.630 --> 15:26.350
查看一下

15:26.350 --> 15:27.790
比如说这里面有H5的

15:27.790 --> 15:29.990
安卓的以及微信小程区的

15:29.990 --> 15:31.430
当然微信小程区这个

15:31.430 --> 15:34.030
你直接内部搜索就可以了

15:34.030 --> 15:34.270
好的

15:34.270 --> 15:35.430
为了演示方面呢

15:35.430 --> 15:37.030
我们现在也H5为例

15:37.030 --> 15:39.030
来看一下项目的整体结构

15:39.030 --> 15:40.670
以及它的这个业务处理

15:40.670 --> 15:41.150
首先呢

15:41.150 --> 15:42.150
我们进入之后啊

15:42.190 --> 15:44.390
这里面有三个介面

15:44.390 --> 15:45.190
主要的介面

15:45.190 --> 15:47.710
通过这个type-r来进行实现

15:47.710 --> 15:49.190
那分别是首页关注

15:49.190 --> 15:50.110
以及我的

15:50.110 --> 15:50.790
在这个里面呢

15:50.790 --> 15:51.990
已经给同学们选了

15:51.990 --> 15:54.070
我们可以对照的来看一下

15:54.070 --> 15:55.430
首先介面这一部分啊

15:55.430 --> 15:57.790
我们先来说这个首页面这一块

15:57.790 --> 15:58.830
首页面这一块

15:58.830 --> 16:00.750
它主要分为这个搜索引导

16:00.750 --> 16:02.550
以及我们的这个导航栏

16:02.550 --> 16:03.910
包括一个文章列表

16:03.910 --> 16:06.590
我们的这个文章的一个详情

16:06.590 --> 16:07.910
当然文章详情呢

16:07.910 --> 16:10.070
是经过跳转之后进行显示的

16:10.070 --> 16:11.910
那我们依次来说一下

16:11.990 --> 16:14.230
首先说这个搜索引导这个位置啊

16:14.230 --> 16:16.230
它呢是一个静态展示的

16:16.230 --> 16:17.230
我们点击之后呢

16:17.230 --> 16:18.270
它会有一个跳转

16:18.270 --> 16:21.590
跳转到我们这个搜索的一些历史信息里面

16:21.590 --> 16:23.870
比如说我们这里面进行一个

16:23.870 --> 16:25.230
有相关的搜索之后

16:25.230 --> 16:26.710
这里面会有内容展示的

16:26.710 --> 16:27.790
那它这个搜索呢

16:27.790 --> 16:30.790
是根据标题来进行搜索的

16:30.790 --> 16:33.670
比如说在这个里面搜索一个故宫博物院啊

16:35.590 --> 16:36.310
故宫

16:36.310 --> 16:36.950
OK

16:36.950 --> 16:38.110
那我在搜索的时候

16:38.110 --> 16:38.710
这个时候呢

16:38.710 --> 16:41.310
就展示出来这个故宫博物院这一条

16:41.310 --> 16:43.630
我们当前的这个文章信息了啊

16:43.630 --> 16:44.150
然后呢

16:44.150 --> 16:45.950
我清除之后这个里面呢

16:45.950 --> 16:46.950
会什么都没有

16:46.950 --> 16:47.990
当我刷新一下

16:47.990 --> 16:49.390
此时的同学们看一下

16:49.390 --> 16:50.110
这个里面呢

16:50.110 --> 16:52.950
就是我们会有一个搜索的信息存储的

16:52.950 --> 16:53.310
这个呢

16:53.310 --> 16:54.910
我们也可以做一下啊

16:54.910 --> 16:56.390
比如说这是搜索这一块

16:56.390 --> 16:57.470
我们记住这一块

16:57.470 --> 16:59.790
它是我们的这个静态展示的

16:59.790 --> 17:01.710
一个内容部分就OK了

17:01.710 --> 17:02.870
这是这一块

17:02.870 --> 17:05.790
然后呢就是底下的这个导航这一块

17:05.790 --> 17:06.670
导航这一块呢

17:06.670 --> 17:07.750
它有两个功能

17:07.750 --> 17:08.270
首先呢

17:08.270 --> 17:10.870
它要实现我们点击的时候

17:10.870 --> 17:13.510
下面的内容跟着进行一个切换

17:13.510 --> 17:14.710
还有一个内容是什么呢

17:14.710 --> 17:16.070
就是我们这个导航

17:16.070 --> 17:18.830
可以根据我们的一个偏号设置

17:18.830 --> 17:20.870
来进行一个标签的处理

17:20.870 --> 17:21.390
比如说呢

17:21.390 --> 17:23.990
现在它是显示全部的标签

17:23.990 --> 17:27.390
假如说我在这里面点击编辑之后

17:27.390 --> 17:30.030
我删除两个标签之后点击完成

17:30.030 --> 17:30.750
那此时呢

17:30.750 --> 17:32.470
我再回到这个首页面里面

17:32.470 --> 17:34.790
它由原来的这个全部的标签

17:34.790 --> 17:36.350
现在就变成了四个标签

17:36.350 --> 17:38.230
加上我们的这个全部显示按钮

17:38.230 --> 17:39.910
那这是这一块的内容

17:40.190 --> 17:41.230
列表这一块呢

17:41.230 --> 17:41.670
它呢

17:41.670 --> 17:43.310
主要就是做一个文章的

17:43.310 --> 17:44.990
一个基本信息展示

17:44.990 --> 17:45.350
然后呢

17:45.350 --> 17:46.910
这里面有几种意识形态

17:46.910 --> 17:48.470
比如说我们三张图的

17:48.470 --> 17:49.790
还有这种大图的

17:49.790 --> 17:51.950
包括我们的这个小图片的

17:51.950 --> 17:53.390
它都做一个展示

17:53.390 --> 17:54.670
而且在这个列表里面

17:54.670 --> 17:56.870
我们可以进行文章收藏

17:56.870 --> 17:58.390
我们的这个文章

17:58.390 --> 17:59.550
比如说这里面收藏

17:59.550 --> 18:01.190
和这个取消收藏的一个操作

18:01.190 --> 18:02.230
都可以实现

18:02.230 --> 18:02.910
并且呢

18:02.910 --> 18:04.990
它也是可以通根据上面

18:04.990 --> 18:06.350
进行一个关联的

18:06.350 --> 18:09.150
也就是说跟这个导航做了一个关联

18:09.190 --> 18:10.550
这是这一块内容

18:10.550 --> 18:11.150
而且呢

18:11.150 --> 18:13.150
这个我们如果说上拉的话

18:13.150 --> 18:14.270
这里面有一个

18:14.270 --> 18:16.310
自动加载的这样一个过程

18:16.310 --> 18:16.990
看到了吗

18:16.990 --> 18:18.670
这就是这一块的内容

18:18.670 --> 18:20.270
也就是说刚才咱们说的

18:20.270 --> 18:21.150
这个首页面

18:21.150 --> 18:23.310
这一块我们看到的格式区域

18:23.310 --> 18:24.510
也就是说在第一瓶里面

18:24.510 --> 18:25.190
看到的

18:25.190 --> 18:26.590
搜索导航导航栏

18:26.590 --> 18:28.310
以及我们的这个文章列表

18:28.310 --> 18:29.710
这是组成我们首页面的

18:29.710 --> 18:31.070
一个展示部分

18:31.070 --> 18:31.470
然后呢

18:31.470 --> 18:32.950
我们在这个里面

18:32.950 --> 18:33.710
首页的时候

18:33.710 --> 18:35.470
我还可以点击进去

18:35.470 --> 18:37.190
比如说随便找一篇文章

18:37.190 --> 18:38.470
直接的点入

18:38.470 --> 18:39.550
点进去之后

18:39.550 --> 18:40.710
这个里面

18:40.710 --> 18:41.510
主要是什么呢

18:41.510 --> 18:42.390
文章的标题

18:42.390 --> 18:43.870
以及作者的信息

18:43.870 --> 18:44.430
包括呢

18:44.430 --> 18:47.070
我们对这个作者的一个关注处理

18:47.070 --> 18:49.270
在这个里面是都可以实现的

18:49.270 --> 18:49.790
然后呢

18:49.790 --> 18:51.470
他下面还有一部分内容

18:51.470 --> 18:52.950
除了这个详情之外

18:52.950 --> 18:55.470
还有一个就是我们的这个评论部分

18:55.470 --> 18:57.950
比如说这里面会有一些相关的评论

18:57.950 --> 18:58.510
这里面呢

18:58.510 --> 19:00.790
我们可以一次的进行评论的输入

19:00.790 --> 19:02.030
比如说在这里面

19:02.030 --> 19:03.790
第三条评论

19:03.790 --> 19:04.190
OK

19:04.190 --> 19:05.230
我输入完成之后

19:05.230 --> 19:06.590
进行一个发布

19:06.590 --> 19:08.350
当我这个评论发布成功之后

19:08.510 --> 19:10.630
这个里面就有当前评论人的

19:10.630 --> 19:11.790
一些相关信息

19:11.790 --> 19:12.190
然后呢

19:12.190 --> 19:14.150
我们还可以针对这条评论

19:14.150 --> 19:16.350
进行一个指定的评论回复

19:16.350 --> 19:22.990
比如说指定为第三条的一个评论回复

19:22.990 --> 19:23.430
OK

19:23.430 --> 19:24.190
在这里面

19:24.190 --> 19:26.830
我们继续进行一个发布处理

19:26.830 --> 19:27.270
好的

19:27.270 --> 19:28.270
那这个时候呢

19:28.270 --> 19:29.990
我们现在来做的这个事

19:29.990 --> 19:31.710
就是针对这条信息

19:31.710 --> 19:33.870
做的一个指定的一个回复

19:33.870 --> 19:34.710
然后这里面呢

19:34.710 --> 19:36.150
会有一些相关的内容

19:36.150 --> 19:37.430
比如说我们在这个里面

19:37.470 --> 19:41.350
可以进行继续文章的收藏的这样一个操作

19:41.350 --> 19:41.830
而且呢

19:41.830 --> 19:45.310
我可以对这个文章进行一个点赞的一个操作

19:45.310 --> 19:45.870
并且呢

19:45.870 --> 19:47.630
我们这里面还可以做什么呢

19:47.630 --> 19:50.390
把这个所有的这个评论列表给展示出来

19:50.390 --> 19:50.790
这个呢

19:50.790 --> 19:55.350
就是我们文章详情界面的一些相关信息

19:55.350 --> 19:57.030
那由以上的这几部分呢

19:57.030 --> 19:59.830
就构成了我们首页面的一个核心内容

19:59.830 --> 20:02.150
也就是说搜索的一个引导

20:02.150 --> 20:03.550
我们跳转到搜索界面

20:03.550 --> 20:07.110
实现一些搜索历史记录的相关的内容处理

20:07.190 --> 20:09.110
包括我们的这个导航这一部分

20:09.110 --> 20:10.550
实现一个关联

20:10.550 --> 20:14.310
再加上一个我们可以自由的进行导航内容的一个选择

20:14.310 --> 20:14.830
然后呢

20:14.830 --> 20:18.070
最后就是这个文章列表以及文章详情这一块

20:18.070 --> 20:20.590
那当然文章列表和文章详情这一块

20:20.590 --> 20:22.350
主要是我们做的一个重点

20:22.350 --> 20:22.710
这个呢

20:22.710 --> 20:24.750
我们要明确一下啊

20:24.750 --> 20:24.950
好的

20:24.950 --> 20:26.070
那说完这个之后呢

20:26.070 --> 20:27.270
我们再来说一下

20:27.270 --> 20:29.710
第二个界面就是这个关注界面

20:29.710 --> 20:30.750
那关注界面呢

20:30.750 --> 20:31.990
主要展示的内容啊

20:31.990 --> 20:32.950
就是有两部分

20:32.950 --> 20:33.550
一个是呢

20:33.550 --> 20:34.750
我们关注的文章

20:34.750 --> 20:35.230
以及呢

20:35.230 --> 20:36.870
我们关注的这个作者

20:36.870 --> 20:37.150
他呢

20:37.150 --> 20:38.430
如果说是文章这一块

20:38.430 --> 20:39.750
我们可以点击跳进去

20:39.750 --> 20:40.630
跳进去之后呢

20:40.630 --> 20:44.230
还是我们这个指定文章的这个详情啊

20:44.230 --> 20:45.150
也就是说

20:45.150 --> 20:46.550
那我们文章详情页面

20:46.550 --> 20:48.550
他不光是在我们这个首页面

20:48.550 --> 20:50.270
可以进行一个展示

20:50.270 --> 20:50.910
而且呢

20:50.910 --> 20:52.230
在我们关注界面

20:52.230 --> 20:54.630
我们可以通过这个关注列表里面

20:54.630 --> 20:58.190
指定的跳转到我们某一个文章的详情界面

20:58.190 --> 20:59.230
那作者这一块呢

20:59.230 --> 21:00.510
他相对就比较简单了

21:00.510 --> 21:01.430
这个是呢

21:01.430 --> 21:05.510
由当前用户关注的一些文章作者的一个静态展示

21:05.510 --> 21:06.310
在这个里面呢

21:06.310 --> 21:09.030
他展示出来一些作者的这个相关信息

21:09.030 --> 21:10.390
就ok了

21:10.390 --> 21:10.950
然后呢

21:10.950 --> 21:11.590
这个里面啊

21:11.590 --> 21:13.630
有一个业务逻辑是需要我们处理的

21:13.630 --> 21:14.710
是什么业务逻辑呢

21:14.710 --> 21:16.430
比如说我们现在的一种状态

21:16.430 --> 21:17.590
是这种登录状态

21:17.590 --> 21:19.910
假如说我这里面要做了一个退出

21:19.910 --> 21:21.470
那同学们可以看一下

21:21.470 --> 21:23.510
当我现在目前是退出状态的时候

21:23.510 --> 21:26.550
如果说我再进行关注界面的点击

21:26.550 --> 21:27.510
那这时候呢

21:27.510 --> 21:29.670
我们要有一个路由拦截

21:29.670 --> 21:30.550
他的实现呢

21:30.550 --> 21:32.550
几乎和我们微有的路由拦截啊

21:32.550 --> 21:33.550
几乎一致

21:33.550 --> 21:34.950
也就是说判断一下

21:34.950 --> 21:37.190
我的这个当前进入的路径

21:37.190 --> 21:38.670
如果说你是关注界面

21:38.670 --> 21:39.150
并且呢

21:39.150 --> 21:40.630
你没有登录的情况下

21:40.630 --> 21:43.430
那我强行给你跳转到登录界面

21:43.430 --> 21:43.990
而且呢

21:43.990 --> 21:45.190
你在这个里面啊

21:45.190 --> 21:47.190
是只有进行登录完成之后

21:47.190 --> 21:50.710
才可以进行我们的这个关注界面的

21:50.710 --> 21:51.550
一个跳转

21:51.550 --> 21:54.630
并且如果说你在没有登录的情况下

21:54.630 --> 21:57.310
假如说我现在点击这个点赞的话

21:57.310 --> 21:59.110
也就是说收藏这个文章的话

21:59.110 --> 21:59.990
也是不可以的

21:59.990 --> 22:00.390
这个呢

22:00.390 --> 22:02.030
我们需要注意一下啊

22:02.030 --> 22:04.030
那我们现在实现登录一下

22:04.070 --> 22:07.350
我在这里面123456123QWE啊

22:07.350 --> 22:09.270
我们现在只有这一个号码啊

22:09.270 --> 22:13.470
同学们记一下是123456密码呢123QWE

22:13.470 --> 22:14.670
登录完成之后呢

22:14.670 --> 22:16.310
我再进入到这个关注啊

22:16.310 --> 22:16.990
这个里面呢

22:16.990 --> 22:19.950
就可以实现一个正常了

22:19.950 --> 22:20.350
这个呢

22:20.350 --> 22:22.670
就是我们关注界面的一个内容

22:22.670 --> 22:24.270
那接下来我们再说一下什么呢

22:24.270 --> 22:25.710
我的这个界面

22:25.710 --> 22:26.870
但我的这个界面呢

22:26.870 --> 22:27.950
它分为两部分啊

22:27.950 --> 22:29.150
第一部分是什么呢

22:29.150 --> 22:31.470
就是我们的这个登录状态

22:31.470 --> 22:32.190
登录状态呢

22:32.190 --> 22:33.830
这里面有一张头像

22:33.830 --> 22:34.430
然后呢

22:34.430 --> 22:36.670
后面有一个放大的这个

22:36.670 --> 22:38.470
头像的一个背景图

22:38.470 --> 22:41.150
里面显示的一些用户的基本信息

22:41.150 --> 22:41.590
然后呢

22:41.590 --> 22:42.710
底下有两个文块

22:42.710 --> 22:44.590
分别为我的文章

22:44.590 --> 22:46.710
以及我们的这个意见反馈这一块

22:46.710 --> 22:48.350
我们依次来看一下

22:48.350 --> 22:49.430
我的文章这一块

22:49.430 --> 22:50.430
展示的是什么呢

22:50.430 --> 22:53.150
就是我曾经发布的一些相关文章

22:53.150 --> 22:53.630
并且呢

22:53.630 --> 22:54.590
在这个里面

22:54.590 --> 22:56.830
我也可以实现一个跳转的

22:56.830 --> 22:59.670
展示文章详情的这样一个操作

22:59.670 --> 23:00.190
然后呢

23:00.190 --> 23:01.190
底下这部分呢

23:01.190 --> 23:03.430
就是我们的这个意见反馈这一块

23:03.430 --> 23:04.550
意见反馈这一块

23:04.550 --> 23:06.550
我们可以输入一些文字信息

23:06.550 --> 23:07.190
并且呢

23:07.190 --> 23:08.950
可以进行图片的上传

23:08.950 --> 23:10.390
比如说在这个里面

23:10.390 --> 23:13.990
贺试意见反馈

23:13.990 --> 23:15.110
给同学们写一下

23:15.110 --> 23:16.190
测试意见反馈

23:16.190 --> 23:16.870
在这个里面

23:16.870 --> 23:17.910
反馈图片

23:17.910 --> 23:20.030
我们这里面还可以进行一个

23:20.030 --> 23:20.910
图片的上传

23:20.910 --> 23:22.070
比如说在这个里面

23:22.070 --> 23:23.670
随便截一张屏啊

23:23.670 --> 23:24.070
OK

23:24.070 --> 23:24.830
打开

23:24.830 --> 23:25.550
打开之后呢

23:25.550 --> 23:26.870
我这时候就会有一个

23:26.870 --> 23:29.070
提交反馈意见的这样一个操作

23:29.070 --> 23:30.830
当我反馈提交成功之后

23:30.830 --> 23:31.630
那此时呢

23:31.630 --> 23:33.790
我又跳转到我们的这个

23:33.790 --> 23:36.310
基本的用户信息展示界面

23:36.310 --> 23:37.270
而且在这个里面

23:37.270 --> 23:38.470
它有一个隐藏的功能

23:38.470 --> 23:39.390
是哪一个功能呢

23:39.390 --> 23:41.230
就是在这个头像这一块

23:41.230 --> 23:42.990
我点击可以进行一个什么

23:42.990 --> 23:44.030
头像的切换

23:44.030 --> 23:45.310
比如说在这个里面

23:45.310 --> 23:47.390
更改一张图片

23:47.390 --> 23:47.910
然后呢

23:47.910 --> 23:50.150
我这时候会由原来的这个图片

23:50.150 --> 23:51.910
做了一个什么替换啊

23:51.910 --> 23:53.950
就是这样一个功能

23:53.950 --> 23:55.390
这个里面最后的一部分

23:55.390 --> 23:56.950
就是我们的一个退出操作

23:56.950 --> 23:58.070
如果说我退出之后

23:58.070 --> 23:58.830
那此时呢

23:58.830 --> 24:00.790
他会给我反回一个什么

24:00.790 --> 24:02.110
我们的首页面

24:02.110 --> 24:03.190
然后在这个里面

24:03.190 --> 24:05.590
其实我们再回到这个界面的话

24:05.590 --> 24:07.190
他这个里面就是展示

24:07.190 --> 24:07.950
你没有登录

24:07.950 --> 24:08.710
请点击登录

24:08.710 --> 24:10.510
如果说我点击登录的时候

24:10.510 --> 24:11.150
这时候呢

24:11.150 --> 24:12.910
他又给我跳转到登录界面

24:12.910 --> 24:13.750
我们在这个里面

24:13.750 --> 24:15.630
做一个登录就OK了

24:15.630 --> 24:16.670
那这个登录界面

24:16.670 --> 24:18.790
是我们最后要实现的这么一个模块

24:18.790 --> 24:20.470
那这个模块里面都有什么呢

24:20.470 --> 24:22.190
他有两种基本的登录形式

24:22.190 --> 24:22.710
第一种呢

24:22.710 --> 24:24.790
就是我们的这个账号登录

24:24.790 --> 24:25.990
我们可以通过这种

24:25.990 --> 24:27.510
输入账号密码的形式

24:27.510 --> 24:28.710
进行一个登录

24:28.710 --> 24:29.310
还有一种呢

24:29.310 --> 24:31.310
就是通过手机号码的形式

24:31.310 --> 24:31.630
登录

24:31.630 --> 24:33.510
比如说我在这个里面输入手机号

24:33.510 --> 24:35.750
然后进行验证码的一个获取

24:35.750 --> 24:37.190
当我获取到验证码之后

24:37.190 --> 24:39.710
也是可以实现登录的

24:39.710 --> 24:40.950
我在这里面登录一下

24:40.950 --> 24:41.790
给同学们看一下

24:43.710 --> 24:44.110
好的

24:44.110 --> 24:45.950
那我这里面获取验证码

24:45.950 --> 24:46.870
然后获取验证码

24:46.870 --> 24:48.150
其实你在这个手机上

24:48.150 --> 24:49.590
就可以查看到

24:49.590 --> 24:51.790
你自己的一个手机验证码

24:51.790 --> 24:53.030
刚才获取到的

24:53.030 --> 24:54.270
当然了必须是指定

24:54.270 --> 24:56.670
你可以接收到验证码的这个手机

24:56.670 --> 24:57.510
OK来了

24:57.550 --> 24:58.790
我在这里面输入一下

24:59.910 --> 25:01.030
850 913

25:01.030 --> 25:01.310
OK

25:01.310 --> 25:02.310
我点击立即登录

25:02.310 --> 25:02.990
那此时呢

25:02.990 --> 25:04.230
它又登录上了

25:04.230 --> 25:04.590
这个呢

25:04.590 --> 25:06.550
就是我们两个操作

25:06.550 --> 25:07.590
也就是说

25:07.590 --> 25:08.830
登录的两部分操作

25:08.830 --> 25:09.990
一个是账号登录

25:09.990 --> 25:11.990
一个是手机登录

25:11.990 --> 25:12.990
这两个功能呢

25:12.990 --> 25:15.230
我们都要实现一下

25:15.230 --> 25:15.510
好的

25:15.510 --> 25:16.990
那基于以上这些呢

25:16.990 --> 25:20.630
就是需要我们实现的这个内容

25:20.630 --> 25:22.190
然后包括一些

25:22.190 --> 25:24.790
我们在这个H5端无法看到

25:24.790 --> 25:25.190
然后呢

25:25.190 --> 25:28.430
我们在这个安卓以及IOS

25:28.430 --> 25:29.710
可以看到的一些内容

25:29.710 --> 25:30.550
比如说

25:30.550 --> 25:32.110
我们接下来还会做一个什么呢

25:32.110 --> 25:34.710
版本的安卓版本的一个检测

25:34.710 --> 25:35.230
这个呢

25:35.230 --> 25:38.270
也是我们后面要去实现的

25:38.270 --> 25:39.750
那这些讲完之后呢

25:39.750 --> 25:43.070
我们就开始进行我们的一个项目

25:43.070 --> 25:45.870
以及我们的这个知识点的一个学习

25:45.870 --> 25:46.790
最终呢

25:46.790 --> 25:50.790
去完整的把我们现在的这个项目实现出来

25:50.790 --> 25:51.070
好的

25:51.070 --> 25:52.550
那这节课就到这里

25:52.550 --> 25:53.190
谢谢大家

