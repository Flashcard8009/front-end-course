WEBVTT

00:00.000 --> 00:04.360
各位同学 大家好 这节课我们继续按立制作的一个学习

00:04.360 --> 00:08.200
那么本节课我们来完成一下选项卡的一个制作

00:08.200 --> 00:11.840
那么在本节课里面 我们会对选项卡的结构样式

00:11.840 --> 00:15.200
以及数据的获取 包括数据的一个渲染

00:15.200 --> 00:18.200
这一部分进行一个代码的编写

00:18.200 --> 00:23.200
我们首先来进行一个选项卡组件的定义

00:23.200 --> 00:26.800
回到我们的HBU的差里面

00:26.800 --> 00:31.000
这个是我们上节课的整个的一个代码

00:31.000 --> 00:34.200
这个里面我们就开始进行选项卡的一个编写

00:34.200 --> 00:37.100
首先我们先订一个选项卡组件

00:37.100 --> 00:39.300
在这个里面 新建组件

00:39.300 --> 00:43.000
这个我们可以叫它Type 8

00:43.000 --> 00:46.400
在这个里面 选中创建同名目录

00:46.400 --> 00:51.400
定义好之后 我在这个里面先保证它正确的一个引入

00:51.400 --> 00:53.500
我这里面写一个选项卡

00:53.600 --> 00:55.300
好的 那定义完成之后

00:55.300 --> 00:59.100
我在这个配置词下面的index做一个引入

00:59.100 --> 01:01.400
这个里面写一个注释

01:01.400 --> 01:03.900
下面就是我们的选项卡部分

01:03.900 --> 01:06.000
这个里面是选项卡

01:06.000 --> 01:11.700
OK 把这个Type 8给它做一个引入Type 8

01:11.700 --> 01:13.500
好的 引入Type 8之后

01:13.500 --> 01:17.200
我们来看一下它是否正常的加载到我们界面里面

01:17.200 --> 01:18.300
OK 可以 对吧

01:18.300 --> 01:21.100
可以之后我们就开始在这个基础上

01:21.100 --> 01:24.500
来进行一些结构以及样式的编写了

01:24.500 --> 01:25.600
回到Type 8之后

01:25.600 --> 01:28.800
我们首先看我们已经完成的这个案例里面

01:28.800 --> 01:30.900
Type 8里面的相关的内容

01:30.900 --> 01:34.100
我们可以看到在搜索的导航栏下面

01:34.100 --> 01:35.900
会有一个移动的选项卡

01:35.900 --> 01:39.100
这个就是我们Type 8组件里面需要显示的内容

01:39.100 --> 01:42.200
它从大的方面分 它分为两部分

01:42.200 --> 01:43.900
首先是左面和右面

01:43.900 --> 01:45.700
右面有一个Icon图标

01:45.700 --> 01:47.400
这个我们点击过去之后

01:47.400 --> 01:49.500
可以跳转到标签管理界面

01:49.500 --> 01:51.700
左面这一部分就是我们可以

01:51.700 --> 01:54.600
一个移动的选项卡的一个列表项

01:54.600 --> 01:57.500
那这个我们可以用U内的原生Scrollable

01:57.500 --> 01:59.400
来实现一下 这个就OK了

01:59.400 --> 02:01.200
里面是每一项的内容

02:01.200 --> 02:03.300
所以说我们从大的方向分

02:03.300 --> 02:04.400
分为左右结构

02:04.400 --> 02:06.200
然后里面有一个容器

02:06.200 --> 02:09.300
包括了它的选项卡的每一项就OK了

02:09.300 --> 02:10.800
那我们就来实现一下

02:10.800 --> 02:13.300
首先我们在这个最外面

02:13.300 --> 02:15.500
给它定一个class类

02:15.500 --> 02:17.500
在这个里面给它定一个什么 class

02:17.500 --> 02:19.100
我们就叫它Type

02:19.100 --> 02:23.500
然后依次到里面进行我们的代码编写

02:23.500 --> 02:25.900
首先这个上面这一部分

02:25.900 --> 02:27.700
它应该是一个滚动区域

02:27.700 --> 02:29.300
所以说在这里给同学们选一下

02:29.300 --> 02:30.700
这个叫滚动区域

02:37.410 --> 02:38.710
好 滚动区域这一块

02:38.710 --> 02:42.810
我们定义通过使用这种Scrollable的形式

02:42.810 --> 02:44.310
然后我们这个是x轴

02:44.310 --> 02:46.010
所以说把它调整一下

02:46.010 --> 02:48.010
ScrollX为错

02:48.010 --> 02:50.210
之后给它一个class类名

02:50.210 --> 02:52.610
叫Type-ScrollOK

02:52.610 --> 02:53.510
这就搞定了

02:53.510 --> 02:56.310
里面就作为我们整个存放

02:56.310 --> 02:59.910
我们所有选项卡的列表项的这一个容器

02:59.910 --> 03:03.110
那我这里面给它定一个Type-Scrollbox

03:05.410 --> 03:07.110
OK Type-Scrollbox

03:07.110 --> 03:08.210
好了 定义完成之后

03:08.210 --> 03:10.610
那接下来我们就在这个里面

03:10.610 --> 03:13.010
分别的实现选项卡的每一项

03:13.010 --> 03:15.010
那这每一项我们定一个 will

03:15.010 --> 03:17.110
首先给它一个类名

03:17.110 --> 03:19.510
Type-Scroll-Item

03:19.510 --> 03:20.810
好的 那这个定义完成之后

03:20.810 --> 03:22.610
那这里面这些项从哪来呢

03:22.610 --> 03:24.610
我们现在还没有进行数据的获取

03:24.610 --> 03:27.010
那这个里面我们先定一个假的数据

03:27.010 --> 03:28.510
这里面Hello

03:28.510 --> 03:31.210
然后我再写几项

03:31.210 --> 03:32.510
比如说这个是世界

03:32.510 --> 03:36.110
然后对这两项进行一个复制

03:36.110 --> 03:39.610
复制之后我们多实现几个OK

03:39.610 --> 03:40.910
这是第二个

03:40.910 --> 03:42.610
然后我们再实现第三个

03:45.010 --> 03:46.210
好的 一共6个

03:46.210 --> 03:47.910
这个6个就可以跟我们来

03:47.910 --> 03:49.010
暂时的进行一个

03:49.010 --> 03:50.010
我给你渲染了

03:50.010 --> 03:52.610
然后我在这里面使用v4的形式

03:52.610 --> 03:54.510
来给它做一个渲染

03:54.510 --> 03:56.210
v4这里面有

03:56.210 --> 03:58.010
然后我们是item

03:58.010 --> 03:59.910
当然你这里面会给它一个索引指

03:59.910 --> 04:02.810
那我这里面就写一个item index

04:02.810 --> 04:04.610
in our list

04:04.610 --> 04:07.210
然后这里面定义一个key

04:07.210 --> 04:09.810
等于我们的index

04:09.810 --> 04:12.210
好了 里面写好了之后

04:12.210 --> 04:14.910
那就是这个item进行一下渲染

04:14.910 --> 04:15.810
就OK了

04:15.810 --> 04:18.010
然后我们看一下里面的内容

04:18.010 --> 04:18.710
是否进来了

04:18.710 --> 04:19.410
可以 没问题

04:20.010 --> 04:20.910
没问题之后

04:20.910 --> 04:22.310
那我们再来定义

04:22.310 --> 04:24.310
底写的一个图标的部分

04:24.310 --> 04:26.610
这里面写一下图标部分

04:26.610 --> 04:27.710
好的 图标部分

04:27.710 --> 04:30.510
首先给它一个最外层的容器

04:30.510 --> 04:32.310
我们这里面添加个类名

04:32.310 --> 04:34.310
叫type accounts

04:34.310 --> 04:35.610
OK 那这个里面

04:35.610 --> 04:38.810
我们就使用unigun accounts

04:38.810 --> 04:41.710
来进行图标的一个定义

04:41.710 --> 04:43.010
unigun accounts

04:43.010 --> 04:44.810
OK 这里面有几个值

04:44.810 --> 04:46.310
首先是type

04:46.310 --> 04:47.610
type是gray

04:47.610 --> 04:49.310
这个如果说同学们不熟的话

04:49.310 --> 04:51.010
可以看它的这个文档

04:51.010 --> 04:53.310
或者是参考的这个属性

04:53.310 --> 04:54.710
然后进行一个添写

04:54.710 --> 04:56.210
给它一个size

04:56.210 --> 04:58.210
并且给它一个颜色值

04:58.210 --> 05:00.010
color 警号666

05:00.010 --> 05:01.710
OK 那我们完成之后

05:01.710 --> 05:02.610
来看一下

05:02.610 --> 05:05.210
现在图标应该是正常加载进来了

05:05.210 --> 05:05.710
对吧

05:05.710 --> 05:06.710
那加载进来之后

05:06.710 --> 05:08.810
那我们现在接下来就开始进行

05:08.810 --> 05:11.210
css样式的一个编写

05:12.410 --> 05:13.810
首先我们规定一下

05:13.810 --> 05:16.010
css的语言sas

05:16.010 --> 05:18.810
然后这里面给它一个纵域

05:18.810 --> 05:21.210
并且我们为了方便管理

05:21.210 --> 05:24.510
怎么给它外部进行一个引入

05:24.510 --> 05:28.610
那这个叫type bar.sas

05:28.610 --> 05:29.510
OK

05:29.510 --> 05:30.110
好了之后

05:30.110 --> 05:33.210
那我们就定义一下这个css文件

05:33.210 --> 05:35.410
我们这里面新建一个目录

05:35.410 --> 05:36.410
css

05:36.410 --> 05:39.210
并且里面新建一个文件

05:39.210 --> 05:40.610
选择自定义文件

05:40.610 --> 05:45.510
叫我们的type bar.sas

05:47.210 --> 05:48.210
创建完成之后

05:48.210 --> 05:51.610
保证它正常的引入这个没问题之后

05:51.610 --> 05:55.010
那咱们就可以进行样式的一个编写

05:55.010 --> 05:56.610
那我们样式编写的过程当中

05:56.610 --> 05:58.610
为了我们查看结构方便

05:58.610 --> 06:01.210
我们可以分为两瓶由外到内

06:01.210 --> 06:02.810
一次的来进行编写

06:02.810 --> 06:04.710
首先是这个type

06:04.710 --> 06:06.510
我们知道它是左右部分

06:06.510 --> 06:09.010
所以说我们为了让它左右部分

06:09.010 --> 06:10.010
都能居中显示

06:10.010 --> 06:13.010
这个里面我们用弹性和谱局来实现

06:13.010 --> 06:14.310
因为我们已经定义了

06:14.310 --> 06:15.810
弹性和谱局的混变方法

06:15.810 --> 06:19.610
那我们直接引入flex方法就ok了

06:19.610 --> 06:22.010
在这个里面我们继续给它

06:22.010 --> 06:24.410
添加一些其他的样式

06:24.410 --> 06:27.410
i的includeflex之后

06:27.410 --> 06:29.310
我们给它一个宽度值

06:29.310 --> 06:31.610
宽度值是百分之百

06:31.610 --> 06:33.810
接下来给它一个底边框

06:33.810 --> 06:37.010
border-bottomepx

06:37.010 --> 06:39.110
soul-late的景块

06:39.110 --> 06:41.610
我们给它一个f5

06:41.610 --> 06:42.810
ok 给完成之后

06:42.810 --> 06:45.410
我们再给它一个background的color

06:45.410 --> 06:48.610
因为我们最后会给整个容器添加颜色

06:48.610 --> 06:51.410
所以说给这个留一个底颜色

06:51.410 --> 06:52.810
是白颜色之后

06:52.810 --> 06:54.810
给它一个box-setting

06:54.810 --> 06:56.010
border-box

06:56.010 --> 06:58.710
ok type的样式就编写完成了

06:58.710 --> 06:59.610
编写完成之后

06:59.610 --> 07:01.810
我们一次进入这个里面

07:01.810 --> 07:04.610
里面叫type-scrow

07:04.610 --> 07:05.710
那这个type-scrow

07:05.710 --> 07:07.210
里面都有哪些样式

07:07.210 --> 07:09.410
首先我让它默认

07:09.410 --> 07:12.310
占满整个的我们的容器

07:12.310 --> 07:14.610
那这个是除了我们unit-accounts的

07:14.610 --> 07:15.810
显示位置之外

07:15.810 --> 07:17.910
剩下所有的都被它撑起来

07:17.910 --> 07:20.010
那这样就能保证我们一个

07:20.010 --> 07:21.010
这一部分的容器

07:21.010 --> 07:22.110
我们看一下实现的

07:22.110 --> 07:24.010
这一部分的整个的一个宽度

07:24.010 --> 07:26.010
都被它来进行添冲

07:26.010 --> 07:27.610
ok flex-1之后

07:27.610 --> 07:30.010
我们同样的给它一个box-setting

07:30.010 --> 07:31.310
border-box

07:31.310 --> 07:32.810
之后给它一个高度值

07:32.810 --> 07:35.610
高度给它一个90rpx

07:35.610 --> 07:37.410
或者是我们在这个里面编写的时候

07:37.410 --> 07:38.710
我们直接90px

07:38.710 --> 07:41.210
它会给我们默认的转换一下

07:41.210 --> 07:43.310
当然你这个就是少写了一个r

07:43.310 --> 07:45.710
看个人的这个喜好玩

07:45.710 --> 07:49.310
继续里面的type-scrow

07:49.310 --> 07:51.510
type-scrow这个是box

07:51.510 --> 07:53.110
里面的盒子盒子呢

07:53.110 --> 07:54.810
我们添冲什么呢

07:54.810 --> 07:55.910
盒子这一块

07:55.910 --> 07:57.010
它呢同样的

07:57.010 --> 07:59.210
我们给它一个弹性合布局

07:59.210 --> 08:02.510
at-include flex

08:02.510 --> 08:03.710
那这个flex里面

08:03.710 --> 08:06.010
我们添一个flex-start

08:06.010 --> 08:07.810
也就是说让它从前面

08:07.810 --> 08:09.410
开始进行排列

08:09.410 --> 08:10.010
对吧

08:10.010 --> 08:11.510
从左边进行排列

08:11.510 --> 08:12.510
然后这个里面

08:12.510 --> 08:15.310
我们也给它一个高度90px

08:15.310 --> 08:16.410
转换一下

08:16.410 --> 08:16.910
之后呢

08:16.910 --> 08:19.210
我们给它一个box-setting

08:19.210 --> 08:20.410
是border-box

08:20.410 --> 08:20.910
ok

08:20.910 --> 08:21.510
那这个呢

08:21.510 --> 08:22.510
几乎就定完了

08:22.510 --> 08:23.210
定义完成之后

08:23.210 --> 08:24.910
咱们再过来看一眼

08:24.910 --> 08:25.910
现在到我们这个里面

08:25.910 --> 08:26.710
你会发现啊

08:26.710 --> 08:27.610
整个的就过来了

08:27.610 --> 08:28.210
对不对

08:28.210 --> 08:29.010
那过来之后呢

08:29.010 --> 08:29.710
我们这个里面

08:29.710 --> 08:30.910
还得进行一些调解

08:30.910 --> 08:31.810
调解什么呢

08:31.810 --> 08:33.510
就是每一个type-scrow的

08:33.510 --> 08:34.510
一个item

08:34.510 --> 08:35.910
我们来做一个处理

08:35.910 --> 08:40.310
type-scrow-item

08:40.310 --> 08:41.610
那它里面有什么样式呢

08:41.610 --> 08:42.210
首先啊

08:42.210 --> 08:45.010
我给它一个flex-shank

08:45.010 --> 08:47.910
然后让它给它一个零的值

08:47.910 --> 08:49.810
好的调整完零的值之外啊

08:49.810 --> 08:51.610
它这个暂时也没有什么效果

08:51.610 --> 08:53.510
那我这里面给它一个pidding

08:53.510 --> 08:54.210
pidding呢

08:54.210 --> 08:54.610
零

08:54.610 --> 08:56.010
给它一个20px

08:56.010 --> 08:57.210
转换一下

08:57.210 --> 08:58.910
然后给它一个颜色值

08:58.910 --> 09:01.110
景333ok

09:01.110 --> 09:01.610
之后呢

09:01.610 --> 09:03.210
给它一个front-set

09:03.210 --> 09:04.110
字体大小

09:04.110 --> 09:05.710
给它一个28px

09:05.710 --> 09:06.510
ok

09:06.510 --> 09:07.310
转换一下

09:07.310 --> 09:08.710
哈喽世界哈喽世界

09:08.710 --> 09:09.810
我们刷新一下界面

09:09.810 --> 09:10.810
现在是不是就可以了

09:10.810 --> 09:12.710
123456

09:12.710 --> 09:14.210
但是好像有点少啊

09:14.210 --> 09:15.010
那这个怎么办呢

09:15.010 --> 09:16.310
我们再添加几个

09:16.310 --> 09:16.810
那这样

09:16.810 --> 09:19.210
我们给它添加几个

09:19.210 --> 09:19.410
好的

09:19.410 --> 09:21.610
我们再来看一下效果

09:21.610 --> 09:22.610
现在你会发现

09:22.610 --> 09:24.310
我们整个的这个滚动就有了

09:24.310 --> 09:25.810
但是那个这个图标呢

09:25.810 --> 09:26.210
没了

09:26.210 --> 09:27.710
图标没了是因为什么呢

09:27.710 --> 09:29.510
我们这个type-scrow这一块

09:29.510 --> 09:31.510
我们要加一个overflow

09:31.510 --> 09:33.510
还等由于是我们的这个滚动

09:33.510 --> 09:34.210
对吧

09:34.210 --> 09:35.410
我们添加一个overflow

09:35.410 --> 09:35.710
还等

09:35.710 --> 09:37.310
那我们再来看一下啊

09:37.310 --> 09:37.710
此时呢

09:37.710 --> 09:38.810
这个图标也有了

09:38.810 --> 09:39.110
对吧

09:39.110 --> 09:39.910
那我们接下来呢

09:39.910 --> 09:40.710
就对图标啊

09:40.710 --> 09:43.310
进行一些简单的调整

09:43.310 --> 09:45.210
到这个type-scrow下面

09:45.210 --> 09:47.510
我们写一下点type-gum

09:48.610 --> 09:49.310
iCloud

09:49.310 --> 09:51.910
那这个里面给他添加一些什么样式呢

09:51.910 --> 09:55.410
我们首先给他一个宽度90px

09:55.410 --> 09:56.410
让他自己啊

09:56.410 --> 09:58.910
给我们做一个rps的转换

09:58.910 --> 09:59.310
之后呢

09:59.310 --> 10:00.710
我们这个里面position

10:00.710 --> 10:01.810
给他一个ratif

10:01.810 --> 10:04.310
为什么给他一个ratif

10:04.310 --> 10:05.210
因为这个里面

10:05.210 --> 10:07.510
其实他是有一个边线在里面的

10:07.510 --> 10:08.110
所以说

10:08.210 --> 10:10.510
我们要调整一下这个边线啊

10:10.510 --> 10:10.810
好的

10:10.810 --> 10:12.310
也就是说给他一个左边

10:12.310 --> 10:12.910
左边框

10:12.910 --> 10:14.010
那我这里面啊

10:14.010 --> 10:17.210
让这个图标先进行一个g中

10:17.210 --> 10:19.610
那我们这里面写一个flex

10:21.110 --> 10:24.210
flex里面我们定一个center之后呢

10:24.210 --> 10:28.510
我们对这个边线添加一条这个左边框

10:28.510 --> 10:30.010
那这个左边框怎么添呢

10:30.010 --> 10:31.910
我们就用他的这个尾类来添加

10:33.310 --> 10:34.110
maher

10:34.110 --> 10:35.510
然后呢

10:35.510 --> 10:36.210
after

10:36.210 --> 10:39.010
这个里面给他一个content

10:39.010 --> 10:40.710
首先content是空

10:40.710 --> 10:41.210
然后呢

10:41.210 --> 10:42.810
我们给他一个position

10:42.810 --> 10:44.610
这里面给他一个absolute

10:46.410 --> 10:48.110
给他一个定位过去啊

10:48.110 --> 10:48.610
高度呢

10:48.610 --> 10:50.810
给他一个32px

10:50.810 --> 10:52.110
然后呢

10:52.110 --> 10:54.610
left让它是0之后

10:54.610 --> 10:58.510
我们再给他一个宽度是2px

10:58.510 --> 11:00.210
给他一个背景颜色

11:00.210 --> 11:01.210
这样就出来了

11:01.210 --> 11:02.410
警号滴滴滴

11:02.410 --> 11:03.110
ok

11:03.110 --> 11:03.510
那这样呢

11:03.510 --> 11:04.110
就可以了

11:04.110 --> 11:06.010
来我们看一下效果啊

11:06.010 --> 11:06.510
好的

11:06.510 --> 11:07.210
这时候你会发现啊

11:07.210 --> 11:09.610
左边这一块是不是有了一个小边线

11:09.610 --> 11:10.010
对吧

11:10.010 --> 11:10.410
而且呢

11:10.410 --> 11:12.010
我们这个图标也集中了

11:12.010 --> 11:12.410
这个呢

11:12.410 --> 11:16.810
就是我们一个css样式的这样一个处理啊

11:16.810 --> 11:17.110
好的

11:17.110 --> 11:19.710
那我们处理完这个css样式之后啊

11:19.710 --> 11:21.010
这里面其实还有一个问题

11:21.010 --> 11:22.110
是什么问题呢

11:22.110 --> 11:23.610
我们可以看一下

11:23.610 --> 11:24.910
在这个完成的里面

11:24.910 --> 11:28.410
首先如果说当前只像某一项的时候

11:28.410 --> 11:30.610
那这个里面是有一个高量状态的

11:30.610 --> 11:33.210
也就是说导航蓝这一块有一个高量

11:33.210 --> 11:35.210
那这个选项卡里面这个高量

11:35.310 --> 11:36.210
怎么来制作呢

11:36.210 --> 11:37.610
其实我们对这个

11:38.710 --> 11:41.110
Type 4 个字我们可以给他添加一个类

11:41.110 --> 11:42.410
比如说

11:42.410 --> 11:44.810
他有这种爱的点

11:44.810 --> 11:46.410
active 这种类的

11:46.410 --> 11:48.110
我给他一个color

11:48.110 --> 11:48.810
color 值呢

11:48.810 --> 11:51.210
就是我们的基础的这个颜色值

11:51.210 --> 11:52.510
dolor base color

11:52.510 --> 11:54.010
我们在这里面可以试一下

11:54.010 --> 11:54.710
怎么来试呢

11:54.710 --> 11:55.910
其实我们这里面

11:55.910 --> 11:58.710
可以给他一个major class

11:58.710 --> 11:59.110
哎

11:59.110 --> 11:59.710
sorry

11:59.710 --> 12:01.010
这里面写一下

12:01.010 --> 12:01.510
class

12:01.510 --> 12:02.910
我们可以给他一个class

12:02.910 --> 12:03.710
那这个class呢

12:03.710 --> 12:05.410
就是这个叫active

12:05.410 --> 12:07.010
动态的给他添加

12:07.010 --> 12:10.810
我们在这个里面定义一个active index

12:12.510 --> 12:13.710
那出指化的时候

12:13.710 --> 12:14.910
凌儿在这个里面

12:14.910 --> 12:17.410
我们判断一下这个active index

12:17.410 --> 12:19.710
等于等于这个index的话

12:19.710 --> 12:23.010
我们就让他添加一个active这个类

12:23.010 --> 12:23.910
那我们来试一下

12:23.910 --> 12:25.210
看是否可行

12:25.210 --> 12:25.810
到这个里面

12:25.810 --> 12:26.710
你会发现Hello

12:26.710 --> 12:27.810
是不是添加上了

12:27.810 --> 12:28.210
这个呢

12:28.210 --> 12:31.710
就是我们的一个高量状态的一个处理

12:31.710 --> 12:32.910
那处理完这个之后

12:32.910 --> 12:35.810
其实样式这一块基本上就OK了

12:35.810 --> 12:36.910
那我们接下来啊

12:36.910 --> 12:40.810
就开始进行真实数据的一个渲染

12:40.810 --> 12:42.810
如何来实现数据的获取呢

12:42.810 --> 12:43.410
这个里面

12:43.410 --> 12:46.210
我们就得通过操作

12:46.210 --> 12:47.610
我们云寒树的形式啊

12:47.610 --> 12:48.910
也就是说

12:48.910 --> 12:51.210
根据云寒树来进行我们数据库里面

12:51.210 --> 12:52.610
指定表的一个查询

12:52.610 --> 12:54.210
然后从这个表里面获取

12:54.210 --> 12:55.810
所有的一个记录值

12:55.810 --> 12:57.610
也就是说每一个集合

12:57.610 --> 13:00.010
把这个里面的内容给获取到

13:00.010 --> 13:00.910
获取到之后呢

13:00.910 --> 13:04.210
我们再进行前端数据的一个渲染

13:04.210 --> 13:05.010
那渲染的时候

13:05.010 --> 13:06.410
我们可以通过这种

13:06.410 --> 13:07.910
you need to load

13:07.910 --> 13:09.610
点call function的形式

13:09.610 --> 13:11.910
来进行数据的一个获取

13:11.910 --> 13:13.510
只不过是在数据获取的时候

13:13.510 --> 13:15.410
我们要注意一下

13:15.410 --> 13:16.510
为了保证我们

13:16.510 --> 13:18.710
typebar组件的一个

13:18.710 --> 13:20.910
只负责渲染的这样一个功能

13:20.910 --> 13:22.410
那我们这个里面数据获取呢

13:22.410 --> 13:23.810
在我们的配置界面下

13:23.810 --> 13:25.510
也就是说index界面下

13:25.510 --> 13:26.810
来进行数据获取

13:26.810 --> 13:28.810
最后呢通过probs的形式

13:28.810 --> 13:31.210
给我们的typebar进行一个数据传递

13:31.210 --> 13:32.210
就OK了啊

13:32.210 --> 13:32.710
那这样呢

13:32.710 --> 13:34.810
就是一个整个的实现过程

13:34.810 --> 13:35.610
那么实现

13:35.610 --> 13:36.510
首先第一步

13:36.510 --> 13:38.710
我们要通过云寒硕

13:38.710 --> 13:40.110
来定义一个云寒硕

13:40.110 --> 13:42.910
进行一个数据库的一个使用啊

13:42.910 --> 13:44.510
那这里面call the function

13:44.510 --> 13:45.510
我们在这个里面呢

13:45.510 --> 13:47.210
新建一个云寒硕

13:47.210 --> 13:48.210
由于我们是获取

13:48.210 --> 13:51.610
这里面就是getLabel

13:51.610 --> 13:53.110
list的定义好了

13:53.110 --> 13:54.210
OK定义好之后呢

13:54.210 --> 13:57.510
我们首先要获取数据库的引用

14:00.920 --> 14:02.220
那用什么方法呢

14:02.220 --> 14:03.220
我们在这里面

14:03.220 --> 14:05.420
可以定一个变量cancel的

14:05.420 --> 14:09.020
db等于uniclode.database

14:09.020 --> 14:09.520
然后呢

14:09.520 --> 14:12.020
我们就可以使用db这个引用啊

14:12.020 --> 14:13.620
在这里面我们打印指让

14:13.620 --> 14:14.420
其实是没有用的

14:14.420 --> 14:15.420
我们就干掉

14:15.420 --> 14:16.020
然后呢

14:16.020 --> 14:19.020
我们创建一个变量cancel

14:20.020 --> 14:26.420
collection等于我们的db.collection集合

14:26.420 --> 14:27.820
然后这个集合里面

14:27.820 --> 14:28.820
是哪一个集合

14:28.820 --> 14:30.020
是我们的这个label

14:30.020 --> 14:30.420
之后呢

14:30.420 --> 14:31.820
我们可以看一天

14:31.820 --> 14:35.220
它的这个获取的一个结果值

14:35.220 --> 14:38.820
等于一个avaitcollection方法点

14:38.820 --> 14:40.320
get形式调用

14:40.320 --> 14:40.820
最后呢

14:40.820 --> 14:42.820
我们打印一下is

14:42.820 --> 14:43.220
然后呢

14:43.220 --> 14:44.020
我们在这里面

14:44.020 --> 14:46.820
先本地运行一下这个云寒数

14:46.820 --> 14:47.820
大家不要担心

14:47.820 --> 14:49.220
本地运行云寒数呢

14:49.220 --> 14:51.020
也是调用线上数据库

14:51.020 --> 14:51.820
所以说

14:51.820 --> 14:52.520
它的一个数据啊

14:52.520 --> 14:53.120
是真实的

14:53.120 --> 14:54.620
我们从这个里面啊

14:54.620 --> 14:55.720
右键右键呢

14:55.720 --> 14:57.320
本地运行云寒数

14:57.320 --> 14:59.420
让它给我们看一个答案结果值

15:00.420 --> 15:02.020
这时候我们会看到啊

15:02.020 --> 15:03.420
本地运行的一个结果

15:03.420 --> 15:05.020
这里面有数

15:05.020 --> 15:05.920
数组六个

15:05.920 --> 15:07.020
那我们可以看一下

15:07.020 --> 15:07.720
格式化一下

15:07.720 --> 15:08.920
我们来查看

15:08.920 --> 15:09.620
这个里面呢

15:09.620 --> 15:11.020
有一个data

15:11.020 --> 15:11.520
data呢

15:11.520 --> 15:13.420
就是我们要获取的所有的内容

15:13.420 --> 15:13.920
而且呢

15:13.920 --> 15:15.120
我们可以从这个里面啊

15:15.120 --> 15:16.720
来进行一样查看

15:16.720 --> 15:19.920
打开我们的uniclode的控制台

15:19.920 --> 15:20.520
这里面

15:20.520 --> 15:22.320
我们就看到云数据库里面的

15:22.320 --> 15:23.620
所有的这个数据表

15:23.620 --> 15:25.020
然后咱们找到这个label

15:25.020 --> 15:27.020
label里面是不是只有这六项

15:27.020 --> 15:27.620
那也就是说

15:27.620 --> 15:28.520
我们此时呢

15:28.520 --> 15:30.020
就是一个正常获取啊

15:31.220 --> 15:31.920
然后再回到

15:31.920 --> 15:33.420
我们这个index.js

15:33.420 --> 15:34.220
那你获取之后

15:34.220 --> 15:35.420
其实我们刚才

15:35.420 --> 15:37.020
看到这个阶层结果的时候

15:37.020 --> 15:37.920
你会发现

15:37.920 --> 15:38.420
这个里面

15:38.420 --> 15:40.620
我们是不是要获取到它的这个data

15:40.620 --> 15:41.320
那其他的

15:41.320 --> 15:43.820
比如说这个affiliate一个douse

15:43.820 --> 15:45.720
这个咱们是不是不需要处理

15:45.720 --> 15:46.220
对吧

15:46.220 --> 15:47.320
那我这个里面怎么按

15:47.320 --> 15:50.520
我们直接的给前端返回的时候

15:50.520 --> 15:50.920
首先呢

15:50.920 --> 15:52.220
我给它一个状态码

15:52.220 --> 15:55.120
也就是说本次请求是否成功的

15:55.120 --> 15:56.320
这么一个状态码

15:56.320 --> 15:57.120
然后那零儿呢

15:57.120 --> 15:59.820
代表着本次请求就成功了啊

15:59.820 --> 16:00.220
之后呢

16:00.220 --> 16:02.820
我给它一个label list

16:04.120 --> 16:05.220
这个label list

16:05.220 --> 16:05.920
重写一下

16:06.820 --> 16:08.520
label list里面呢

16:08.520 --> 16:10.320
我们就把res.data

16:10.320 --> 16:13.620
给前端进行一个返回就ok了

16:13.620 --> 16:15.220
然后这个你喜欢成之后呢

16:15.220 --> 16:17.320
而且你本地运行也ok了

16:17.320 --> 16:18.020
那此时呢

16:18.020 --> 16:21.220
你要先进行一个云函数的上传部署

16:21.220 --> 16:21.720
否则呢

16:21.720 --> 16:23.120
一会你前端请求的时候

16:23.120 --> 16:24.520
这个是没戏的啊

16:24.520 --> 16:25.020
咱们这个呢

16:25.020 --> 16:26.120
要注意一下

16:26.120 --> 16:27.520
好了上传完成之后

16:27.520 --> 16:29.520
那我们回到前端啊

16:29.520 --> 16:31.720
前端我们到哪儿到pages下面

16:31.720 --> 16:33.020
找到index

16:33.020 --> 16:34.820
在哪个里面来进行数据获取

16:34.820 --> 16:36.020
咱们知道这个啊

16:36.020 --> 16:37.520
我们的这个导航老儿呢

16:37.520 --> 16:38.920
肯定是初始化的时候

16:38.920 --> 16:40.220
也就是说这个选项卡

16:40.220 --> 16:43.020
就是需要进行一个获取的

16:43.020 --> 16:45.520
那我们这里面使用一个onload的

16:45.520 --> 16:46.020
还说啊

16:46.020 --> 16:47.520
在这个onload的函数里面

16:47.520 --> 16:48.620
我们定一个方法

16:48.620 --> 16:52.020
这一次点一个in8label list

16:53.420 --> 16:55.720
in8label list

16:55.720 --> 16:57.920
这种方法二来进行获取

16:57.920 --> 16:59.220
那也就是说初始化的时候

16:59.220 --> 17:01.120
就对它进行一个调用

17:01.120 --> 17:01.620
然后呢

17:01.620 --> 17:04.320
我们在这个myser的里面来写下

17:04.320 --> 17:07.220
下线in8label list

17:07.220 --> 17:08.520
ok在这个里面

17:08.520 --> 17:09.620
我们调用什么方法呢

17:09.620 --> 17:11.220
我们通过这种

17:11.220 --> 17:15.420
onload的点一个calfunction的形式

17:15.420 --> 17:17.920
来对它进行一个数据的获取

17:17.920 --> 17:18.520
那这里面

17:18.520 --> 17:19.420
其实咱们知道

17:19.420 --> 17:21.620
首先第一个是有一个内幕

17:21.620 --> 17:24.020
内幕指向我们需要使用的

17:24.020 --> 17:25.920
这个云函数名字

17:25.920 --> 17:27.820
那云函数我们这里面叫

17:27.820 --> 17:30.320
getlabel list

17:30.320 --> 17:31.520
ok

17:31.520 --> 17:32.920
第一个完成之后

17:32.920 --> 17:33.920
这里面还有一个

17:33.920 --> 17:36.320
是否成功的一个响应值

17:36.320 --> 17:38.520
然后咱们在这个里面打印一个

17:38.520 --> 17:39.120
iS

17:39.120 --> 17:40.920
咱们来看一眼这个结果啊

17:42.220 --> 17:44.220
回到我们的这个界面里面

17:44.220 --> 17:45.720
界面里面我们看一下console

17:45.720 --> 17:47.020
那此时你会发现

17:47.020 --> 17:48.520
这里面有一个result

17:48.520 --> 17:51.020
result里面就一个label list

17:51.020 --> 17:51.620
对不对

17:51.620 --> 17:52.620
也就是说那这时候

17:52.620 --> 17:54.120
我们取这个label list

17:54.120 --> 17:55.220
是不是就ok了

17:55.220 --> 17:56.320
那取完label list

17:56.320 --> 17:57.520
的其实是想

17:57.520 --> 17:58.720
像这个type bar

17:58.720 --> 18:00.320
进行我们的这个

18:00.320 --> 18:02.720
选项卡的一个传递的数据

18:02.720 --> 18:03.120
对不对

18:03.120 --> 18:04.020
那我这时候呢

18:04.020 --> 18:04.920
在这个data里面

18:04.920 --> 18:07.120
我们初始化先定一下

18:07.120 --> 18:07.920
data

18:07.920 --> 18:08.420
然后呢

18:08.420 --> 18:09.620
在这个里面

18:09.620 --> 18:10.520
我们sorry啊

18:10.520 --> 18:12.720
这个里面给它进行一个调整

18:14.420 --> 18:15.720
data return

18:15.720 --> 18:16.420
我们这里面

18:16.420 --> 18:19.520
先定一个label list

18:19.520 --> 18:19.720
好的

18:19.720 --> 18:20.620
初始化是空

18:20.620 --> 18:21.420
然后在这里面

18:21.520 --> 18:23.320
只要获取到值之后

18:23.320 --> 18:26.120
我们就给它进行一个复职操作

18:26.120 --> 18:27.820
这一次点label list的

18:27.820 --> 18:29.020
但是这里面有一个问题啊

18:29.020 --> 18:29.920
什么问题呢

18:29.920 --> 18:31.320
我们先给同学们暴露出来吧

18:31.320 --> 18:32.420
咱们可以看一下

18:32.420 --> 18:33.720
我打印一下这个这一次

18:33.720 --> 18:34.920
你会发现这个这一次

18:34.920 --> 18:36.520
是有一点问题的

18:36.520 --> 18:37.420
来我们刷新一下

18:37.420 --> 18:38.620
刷新一下这个这一次呢

18:38.620 --> 18:40.220
你会发现这个这一次

18:40.220 --> 18:43.420
其实它不是我们需要的这个

18:43.420 --> 18:44.520
我们这个view对象

18:44.520 --> 18:45.020
对不对

18:45.020 --> 18:45.820
那它是谁

18:45.820 --> 18:46.920
指向我们这个方法的

18:46.920 --> 18:48.020
所以说这里面不对

18:48.020 --> 18:48.720
那咋办呢

18:48.720 --> 18:50.620
我们这里面是需要使用

18:51.620 --> 18:54.120
准确的获取到一个这一次

18:54.120 --> 18:55.520
那此时咱们再来看一眼

18:55.520 --> 18:57.120
这个这一次啊

18:57.120 --> 18:58.420
这时候这个这一次

18:58.420 --> 19:00.220
是不是指向我们这个view

19:00.220 --> 19:01.120
组架本身了

19:01.120 --> 19:01.620
对不对

19:01.620 --> 19:03.620
也就是说我们view这个对象啊

19:03.620 --> 19:05.620
那获取到它这个这一次之后

19:05.620 --> 19:08.020
我们此时就可以进行一个复职了

19:08.020 --> 19:08.620
咱们知道

19:08.620 --> 19:11.120
is有一个result

19:11.120 --> 19:12.820
然后这里面有一个什么

19:12.820 --> 19:13.620
result里面

19:13.620 --> 19:16.420
应该是有一个我们的结果值

19:16.420 --> 19:17.520
咱们看一下

19:17.520 --> 19:19.620
result里面有一个叫label list的

19:19.620 --> 19:22.120
那我们直接就可以对它进行使用了

19:22.120 --> 19:25.120
result的点label list

19:25.120 --> 19:26.620
ok拿到它之后

19:26.620 --> 19:27.520
其实这个里面呢

19:27.520 --> 19:30.520
我们就可以正常的进行一个值的获取了

19:30.520 --> 19:32.220
怎么来看值是否正常获取

19:32.220 --> 19:33.920
我们在view里面

19:33.920 --> 19:36.020
可以我们点到这个里面

19:36.020 --> 19:37.220
属要划过去之后

19:37.220 --> 19:39.820
咱们找到我们配着index list

19:39.820 --> 19:41.420
此时你会发现label list的

19:41.420 --> 19:44.020
是不是每一项进行了一个填充

19:44.020 --> 19:45.120
也就是说数组

19:45.120 --> 19:48.020
追加进去我们获取到的这几项值

19:48.020 --> 19:49.420
那你既然获取到了之后

19:49.420 --> 19:51.820
咱们说了是要为tibel bar传执的

19:51.820 --> 19:54.620
所以说那我这里面就写一下

19:54.620 --> 19:57.020
定一个label list

19:57.020 --> 19:59.620
然后呢等于我们这个里面使用到的

19:59.620 --> 20:01.120
这个label list的

20:01.120 --> 20:03.120
ok那这个定义完成之后

20:03.120 --> 20:06.020
我们回到tibel bar这个组件里面

20:06.020 --> 20:07.820
定一个什么呢probs

20:07.820 --> 20:11.220
那我这里面使用一个probs

20:11.220 --> 20:12.920
写一个label list

20:12.920 --> 20:15.020
把这个label list放过来

20:15.020 --> 20:17.420
然后呢它的默认值应该是什么

20:17.420 --> 20:18.820
a-ray数组对不对

20:18.820 --> 20:20.420
那这时候咱不给它默认值了

20:20.420 --> 20:22.620
只给它一个类型就ok了

20:22.620 --> 20:24.220
拿到这个label list的之后

20:24.220 --> 20:26.420
其实我们这个时候就不需要

20:26.420 --> 20:28.420
这个list在在这了对不对

20:28.420 --> 20:30.420
那我们直接把这个label list

20:30.420 --> 20:32.920
放在我们的这个循环里面

20:32.920 --> 20:33.620
在这个里面

20:33.620 --> 20:34.420
然后这时候呢

20:34.420 --> 20:38.020
它就会循环由index传递过来的

20:38.020 --> 20:39.620
这个label list对不对

20:39.620 --> 20:40.820
那我们来看一眼

20:40.820 --> 20:42.220
哎这里面有一个包座

20:42.220 --> 20:44.320
我们看一下是因为我们probs

20:44.320 --> 20:46.520
这块没加逗号好的

20:46.520 --> 20:47.520
再回来

20:48.020 --> 20:50.520
这个时候我们这个值虽然过来了

20:50.520 --> 20:51.520
但是这个呢

20:51.520 --> 20:53.620
因为我们每一项都是一个对象对不对

20:53.620 --> 20:55.820
所以说这时候我们需要

20:55.820 --> 20:57.120
把它这个item

20:57.120 --> 20:58.620
我们只需要渲染它的item

20:58.620 --> 21:01.020
什么item.name是不是就ok了

21:01.020 --> 21:01.820
那你会发现

21:01.820 --> 21:03.920
此时经过我们数据获取

21:03.920 --> 21:06.720
并且传直这样一系列过程之后

21:06.720 --> 21:08.920
我们的值是不是就ok了

21:08.920 --> 21:10.420
也就是说那这个呢

21:10.420 --> 21:13.120
就是我们一个完整的数据获取的

21:13.120 --> 21:14.720
这样一个过程

21:14.720 --> 21:17.120
好的那我们这几颗的内容就到这里

21:17.120 --> 21:17.820
谢谢大家

