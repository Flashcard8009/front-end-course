WEBVTT

00:00.000 --> 00:04.600
各位同学 大家好 这几课我们继续UNIAP基础的一个学习

00:04.600 --> 00:08.800
那么本几课我们来看一下UNIAP的API的相关内容

00:08.800 --> 00:11.000
这个里面是它的文档地址

00:11.000 --> 00:13.400
我们可以打开进行一下查看

00:13.400 --> 00:15.000
我们打开谷歌浏览器

00:15.000 --> 00:19.400
里面就是相关的API的一些文档信息

00:19.400 --> 00:22.800
然后其实它跟我们的组架其实是一个地址

00:22.800 --> 00:26.400
只不过是我们在导航进行一个切换就可以了

00:26.600 --> 00:30.400
这里面包含了它所有的这个UNI调用的相关API

00:30.400 --> 00:35.200
但是我们这个里面找一些我们经常使用的来进行一下讲解

00:35.200 --> 00:39.800
在这个里面我给同学们整理了一下我们常用的API相关列表

00:39.800 --> 00:43.200
首先第一个就是我们发起网络请求的一个使用

00:43.200 --> 00:46.000
使用原生的UNIAP Request来实现

00:46.000 --> 00:48.600
我们在这里面就可以进行一下测试

00:48.600 --> 00:52.400
为了测试方便我们在这里面重新创建一个项目

00:52.400 --> 00:55.400
我们这里面新建一个项目

00:55.400 --> 00:59.400
项目选择和我们上级课一样使用UNIAP

00:59.400 --> 01:02.400
我们这里面Test API

01:03.400 --> 01:05.400
模板还是使用默认模板

01:05.400 --> 01:08.400
以及UNI Cloud包括Gate

01:08.400 --> 01:10.400
我们这里面默认不进行选择

01:10.400 --> 01:12.400
好的创建完成

01:12.400 --> 01:18.400
这里面有一个HBO的project存在一个同名Test API

01:19.400 --> 01:23.400
我改一下重新改一下名字

01:23.400 --> 01:26.400
在这里面新建我们的项目

01:26.400 --> 01:30.400
这里面是Test选择UNIAP

01:30.400 --> 01:34.400
Test的下华信UNIAP API

01:36.400 --> 01:38.400
好的点击创建这时候就成功了

01:38.400 --> 01:40.400
成功之后我们首先要做一件事

01:40.400 --> 01:41.400
什么事呢

01:41.400 --> 01:44.400
如果说我们想使用微信小程序进行项目打开的话

01:44.400 --> 01:47.400
这个里面我们最好配置一个APP ID

01:47.400 --> 01:49.400
这个APP ID怎么办

01:49.400 --> 01:52.400
把你在小程序后台里面APP ID

01:52.400 --> 01:54.400
找到打开就可以了

01:54.400 --> 01:56.400
我这里面提前复制好了

01:56.400 --> 01:58.400
当然你的是要使用自己的每一个人

01:58.400 --> 02:02.400
所以说我们尽量保存一个APP ID

02:03.400 --> 02:07.400
保存好之后我们提前先把项目运行起来

02:07.400 --> 02:09.400
运行的时候我在这个里面

02:09.400 --> 02:11.400
在谷歌里面进行运行

02:11.400 --> 02:13.400
有时候点这个点不动

02:13.400 --> 02:14.400
是因为什么原因

02:14.400 --> 02:15.400
比如说在这个里面

02:15.400 --> 02:16.400
我们直接的暴用

02:16.400 --> 02:18.400
那这个你看这啊

02:18.400 --> 02:19.400
这是因为啥呢

02:19.400 --> 02:21.400
我们在Manifest.json文件里面

02:21.400 --> 02:22.400
那此时就没办法使用

02:22.400 --> 02:24.400
那如果说你想运行的话

02:24.400 --> 02:26.400
你可以在这个里面点击crowme运行

02:26.400 --> 02:29.400
或者说你将你的光标放在

02:29.400 --> 02:30.400
我们的界面里面

02:30.400 --> 02:33.400
它就可以实现一个运行了

02:33.400 --> 02:36.400
我在这个里面选择一个crowme运行

02:36.400 --> 02:39.400
然后同时在小程序里面

02:39.400 --> 02:42.400
开发者工具也将它进行一个打开

02:42.400 --> 02:45.970
ok 等待打开之后

02:45.970 --> 02:48.970
我们把谷歌浏览器的控制台

02:48.970 --> 02:50.970
给它进行一个开启

02:50.970 --> 02:51.970
开启之后

02:51.970 --> 02:53.970
我们在手机模拟器里面进行一个查看

02:53.970 --> 02:55.970
小程序同样的

02:55.970 --> 02:56.970
我们给它一个最大化

02:56.970 --> 03:00.970
然后让它在这个里面小程序也开启

03:00.970 --> 03:01.970
其实我们看小程序的时候

03:01.970 --> 03:02.970
跟同学们说一下

03:02.970 --> 03:05.970
编辑器咱们是没有必要打开的

03:05.970 --> 03:07.970
因为我们的代码编辑

03:07.970 --> 03:09.970
是不在这个里面进行的

03:09.970 --> 03:11.970
只不过是我们在小程序里面

03:11.970 --> 03:12.970
这个控制台里面

03:13.970 --> 03:15.970
所以说我们在平时打开的时候

03:15.970 --> 03:18.970
只要是把谷歌浏览器打开就ok了

03:20.970 --> 03:21.970
打开完成之后

03:21.970 --> 03:24.970
这个里面我们就来进行一个测试

03:24.970 --> 03:25.970
如何来实现测试

03:25.970 --> 03:27.970
我们写一个按钮

03:27.970 --> 03:30.970
这样我把它原生的结构给它干掉

03:30.970 --> 03:32.970
我们重新写一下

03:32.970 --> 03:34.970
把DIV标签改一下

03:34.970 --> 03:36.970
改成vill

03:36.970 --> 03:41.920
好的 里面写一个button按钮

03:41.920 --> 03:44.920
然后我们进行一个请求的发送

03:44.920 --> 03:47.920
indeclick等于一个guideDate

03:47.920 --> 03:51.920
然后这里面获取数据内容

03:51.920 --> 03:52.920
进行发送

03:52.920 --> 03:55.920
这个里面我就定一下guideDate

03:55.920 --> 03:58.920
在mys2里面进行一个定义

03:59.920 --> 04:02.920
guideDate使用Uni

04:02.920 --> 04:06.920
使用Uni.request这种形式

04:06.920 --> 04:10.920
然后这里面有一些它的相关的属性

04:10.920 --> 04:11.920
这里面相关属性

04:11.920 --> 04:13.920
但是没有一个

04:14.920 --> 04:15.920
不是一个比较完整的

04:15.920 --> 04:16.920
是因为

04:16.920 --> 04:18.920
如果说我使用Uni.request的

04:18.920 --> 04:20.920
是一定要有一个url的

04:20.920 --> 04:23.920
url代表着我们本次的一个请求地址

04:23.920 --> 04:26.920
我们如果说想看一个比较详细的

04:26.920 --> 04:28.920
还可以从这个里面来进行查看

04:28.920 --> 04:29.920
我们在网络里面

04:29.920 --> 04:32.920
有一个发起请求Uni.request的

04:32.920 --> 04:35.920
这里面有整个updata描述对象的相关参数

04:35.920 --> 04:38.920
url是我们本次请求的地址

04:38.920 --> 04:40.920
data就是我们请求的参数

04:40.920 --> 04:42.920
hider是我们携带的请求头

04:42.920 --> 04:45.920
mys2的本次请求的一个方法

04:45.920 --> 04:47.920
我们可以使用这种guide形式

04:47.920 --> 04:49.920
因为它默认值就是guide

04:49.920 --> 04:50.920
如果说你要是post的

04:50.920 --> 04:51.920
那你就指定一下

04:51.920 --> 04:54.920
使用guide我们可以不用特殊的指定

04:54.920 --> 04:57.920
这里面有一个sigSize,fail以及component

04:57.920 --> 04:59.920
这几个都是函数请示的

04:59.920 --> 05:01.920
这个代表成功失败

05:01.920 --> 05:03.920
以及不管成功或者失败

05:03.920 --> 05:05.920
完成之后的一个回到函数

05:06.920 --> 05:08.920
我在这个里面使用sigSize

05:08.920 --> 05:10.920
来进行一下坚挺就OK了

05:10.920 --> 05:12.920
首先先把这个地址给填上

05:12.920 --> 05:13.920
地址在哪呢

05:13.920 --> 05:14.920
我在这个里面

05:14.920 --> 05:16.920
给同学准备了一个

05:16.920 --> 05:18.920
咱们之前的课程里面

05:18.920 --> 05:19.920
使用到的地址

05:20.920 --> 05:21.920
然后我们就用这个

05:21.920 --> 05:23.920
来进行一下测试就OK了

05:23.920 --> 05:26.920
atd startade.do.com

05:26.920 --> 05:28.920
API higher list

05:28.920 --> 05:30.920
这是一个王者荣耀的地址

05:30.920 --> 05:32.920
sigSize这里面

05:32.920 --> 05:34.920
应该是接收一个回到函数

05:36.920 --> 05:37.920
我们需求非常简单

05:37.920 --> 05:39.920
就是我们就是点击

05:39.920 --> 05:41.920
获取数据这个按钮

05:41.920 --> 05:44.920
然后实现一个请求的获取就OK了

05:44.920 --> 05:46.920
这个接口是一个跨意接口

05:46.920 --> 05:48.920
同学们可以直接进行使用

05:48.920 --> 05:50.920
我一点击获取数据

05:51.920 --> 05:53.920
OK 此时它拿到了我们整个的

05:53.920 --> 05:54.920
响应值

05:54.920 --> 05:55.920
这里面有data

05:55.920 --> 05:57.920
data就是我们需要获取的

05:57.920 --> 05:58.920
数据信息

05:58.920 --> 06:00.920
也就是说目前来看

06:00.920 --> 06:02.920
我们在h5端的一个使用

06:02.920 --> 06:03.920
请求数据

06:03.920 --> 06:05.920
通过有你点request的这种形式

06:05.920 --> 06:06.920
是完全没问题的

06:06.920 --> 06:07.920
我们再来看一下

06:07.920 --> 06:09.920
微信开发者工具这一块

06:10.920 --> 06:12.920
我们来进行一下数据的请求

06:12.920 --> 06:14.920
此时我点击获取数据

06:14.920 --> 06:16.920
OK 此时你会发现

06:16.920 --> 06:18.920
我们的微信开发者工具里面

06:18.920 --> 06:20.920
也可以把数据正常的获取到

06:20.920 --> 06:22.920
但这里面跟同学们说一下

06:22.920 --> 06:23.920
是有一个问题的

06:23.920 --> 06:24.920
什么问题呢

06:24.920 --> 06:26.920
就是在我们的HPU的差里面

06:26.920 --> 06:29.920
我们当时在做小程序

06:29.920 --> 06:30.920
配置的时候

06:30.920 --> 06:31.920
在这里面

06:31.920 --> 06:33.920
检查安全域名和TLS版本

06:33.920 --> 06:34.920
我们给它忽略掉了

06:34.920 --> 06:36.920
如果说我们在开发过程当中

06:36.920 --> 06:38.920
这样用是没有问题的

06:38.920 --> 06:40.920
但是一旦打包上线之后

06:40.920 --> 06:41.920
这种就是会有问题

06:41.920 --> 06:43.920
如果说我们要在这个里面

06:43.920 --> 06:46.920
进行检查安全域名和TLS版本之后

06:46.920 --> 06:47.920
那这个时候

06:47.920 --> 06:48.920
我们此时获取数据

06:48.920 --> 06:50.920
就是会有一些问题的

06:50.920 --> 06:52.920
比如说我们重新的测试一下

06:52.920 --> 06:53.920
我点击获取数据

06:53.920 --> 06:54.920
那你会发现

06:54.920 --> 06:55.920
这里面有一个提示

06:55.920 --> 06:56.920
它提示什么

06:56.920 --> 06:57.920
stdata

06:57.920 --> 06:58.920
data.com

06:58.920 --> 07:00.920
它不在Request的合法域名当中

07:00.920 --> 07:02.920
这个指的是什么意思

07:02.920 --> 07:04.920
我们可以看小程序的右侧

07:04.920 --> 07:06.920
右上方的详情里面

07:06.920 --> 07:08.920
详情里面会有三项

07:08.920 --> 07:09.920
这里面有基本信息

07:09.920 --> 07:10.920
本地设置

07:10.920 --> 07:12.920
以及我们的相配置

07:12.920 --> 07:13.920
在相配置里面

07:13.920 --> 07:15.920
这有一个合法域名的添加

07:15.920 --> 07:16.920
也就是说把一些

07:16.920 --> 07:18.920
我们请求地址给做一个加白

07:18.920 --> 07:19.920
那此时

07:19.920 --> 07:21.920
它不在我们这个白名单里面

07:21.920 --> 07:23.920
所以说我们去请求的时候

07:23.920 --> 07:24.920
那这时候

07:24.920 --> 07:26.920
它就可以给我提示一个错误

07:26.920 --> 07:27.920
从而导致我们数据

07:27.920 --> 07:29.920
无法进行一个获取

07:29.920 --> 07:30.920
那这时候怎么办

07:30.920 --> 07:32.920
我们要在小程序的后台

07:32.920 --> 07:34.920
进行一个合法域名的配置

07:34.920 --> 07:35.920
也就是说把这个

07:35.920 --> 07:36.920
ATPS

07:36.920 --> 07:37.920
stdata

07:37.920 --> 07:38.920
data.com

07:38.920 --> 07:40.920
给它进行一个配置

07:40.920 --> 07:41.920
因为我们这个

07:41.920 --> 07:42.920
HPU的差里面

07:42.920 --> 07:45.920
也可以是直接进入的配置指南

07:45.920 --> 07:46.920
我们到这个

07:46.920 --> 07:47.920
MPV信里面

07:47.920 --> 07:49.920
来进行一下进入

07:49.920 --> 07:50.920
好的

07:50.920 --> 07:51.920
那这个里面

07:51.920 --> 07:52.920
从哪个里面设置呢

07:52.920 --> 07:54.920
我们从这个开发管理

07:54.920 --> 07:55.920
开发管理

07:55.920 --> 07:57.920
然后我们去找到

07:57.920 --> 07:59.920
这个服务器的域名

07:59.920 --> 08:01.920
在这个服务器域名里面

08:01.920 --> 08:03.920
它有一个request的合法域名

08:03.920 --> 08:04.920
然后呢

08:04.920 --> 08:06.920
我们在这个里面进行一个修改

08:06.920 --> 08:07.920
修改呢

08:07.920 --> 08:08.920
这时候呢

08:08.920 --> 08:09.920
需要你做一个认证

08:09.920 --> 08:10.920
那我们打开微信

08:10.920 --> 08:11.920
进行一个认证

08:11.920 --> 08:13.920
好扫描一下二维码

08:13.920 --> 08:15.920
当你这个扫描成功之后

08:15.920 --> 08:16.920
这个里面

08:16.920 --> 08:17.920
我在它后面

08:17.920 --> 08:19.920
继续进行一个

08:19.920 --> 08:20.920
我们地址的添加

08:20.920 --> 08:22.920
把刚才复制的这个地址

08:22.920 --> 08:23.920
你给它进行一个添加

08:23.920 --> 08:24.920
就OK了

08:24.920 --> 08:25.920
然后每一个地址之间

08:25.920 --> 08:27.920
这种分号来分割一下

08:27.920 --> 08:28.920
分割一下之后

08:28.920 --> 08:29.920
我们进行一个

08:29.920 --> 08:31.920
保存并提交的一个操作

08:31.920 --> 08:32.920
OK

08:32.920 --> 08:33.920
那这时候呢

08:33.920 --> 08:34.920
其实我们的合法地址

08:34.920 --> 08:35.920
就已经陆入到

08:35.920 --> 08:36.920
我们的这个小程序里了

08:36.920 --> 08:38.920
我们再回到开发者工具里面

08:38.920 --> 08:39.920
然后呢

08:39.920 --> 08:41.920
再来进行查看

08:41.920 --> 08:42.920
详情的时候

08:42.920 --> 08:43.920
你会发现

08:43.920 --> 08:44.920
我们的

08:44.920 --> 08:45.920
doedio.com

08:45.920 --> 08:46.920
应该是添加进去了

08:46.920 --> 08:47.920
在这个里面

08:47.920 --> 08:49.920
starteddoedio.com

08:49.920 --> 08:50.920
然后呢

08:50.920 --> 08:51.920
我们再进行一下

08:51.920 --> 08:52.920
刷新 编译

08:52.920 --> 08:53.920
也就是说重新编译一下

08:53.920 --> 08:55.920
此时候我再点击获取内容

08:55.920 --> 08:56.920
那这时候是不是

08:56.920 --> 08:57.920
就是一个正常的状态了

08:57.920 --> 08:58.920
所以说

08:58.920 --> 08:59.920
同学们注意一点

08:59.920 --> 09:00.920
就是什么呢

09:00.920 --> 09:02.920
我们当使用一些

09:02.920 --> 09:03.920
接口的时候

09:03.920 --> 09:04.920
比如说

09:04.920 --> 09:05.920
它一定会跟小程序

09:05.920 --> 09:06.920
不是在同一个预

09:06.920 --> 09:07.920
那咋办呢

09:07.920 --> 09:08.920
我们在这个里面

09:08.920 --> 09:09.920
如果说配置了

09:09.920 --> 09:10.920
检查安全预名之后

09:10.920 --> 09:11.920
那你一定要在

09:11.920 --> 09:12.920
开发者工具里面

09:12.920 --> 09:13.920
进行一个配置

09:13.920 --> 09:15.920
那配置怎么配置

09:15.920 --> 09:16.920
就是按我刚才这个流程

09:16.920 --> 09:17.920
实现一下

09:17.920 --> 09:18.920
就OK了

09:18.920 --> 09:19.920
其实它的这个

09:19.920 --> 09:20.920
Uniline Request

09:20.920 --> 09:22.920
APN相对比较简单

09:22.920 --> 09:23.920
直接就是使用

09:23.920 --> 09:24.920
这种形式就OK了

09:24.920 --> 09:25.920
对不对

09:25.920 --> 09:26.920
那这个呢

09:26.920 --> 09:27.920
就是Uniline Request的

09:27.920 --> 09:28.920
但是呢

09:28.920 --> 09:29.920
跟同学们说一下

09:29.920 --> 09:30.920
这个里面有一个问题

09:30.920 --> 09:31.920
是什么问题呢

09:31.920 --> 09:33.920
就是Uniline Request

09:33.920 --> 09:34.920
我们无法做一些

09:34.920 --> 09:35.920
比较完善的配置

09:35.920 --> 09:36.920
是啥意思

09:36.920 --> 09:37.920
你比如说

09:37.920 --> 09:38.920
我们在这个请求

09:38.920 --> 09:40.920
以及响应的时候

09:40.920 --> 09:41.920
做一些相关的操作

09:41.920 --> 09:42.920
假如说

09:42.920 --> 09:43.920
我们想添加一些

09:43.920 --> 09:44.920
loading效果

09:44.920 --> 09:45.920
或者是隐藏一些

09:45.920 --> 09:46.920
loading效果

09:46.920 --> 09:47.920
比如说在

09:47.920 --> 09:48.920
我们加一些

09:48.920 --> 09:49.920
全局的这个

09:49.920 --> 09:51.920
状态码的一个设置

09:51.920 --> 09:52.920
那假如说

09:52.920 --> 09:54.920
它要是状态码不等于200

09:54.920 --> 09:55.920
或者是不等于

09:55.920 --> 09:56.920
我们指定的状态码

09:56.920 --> 09:57.920
我们就给它提示一个错误

09:57.920 --> 09:58.920
那这些呢

09:58.920 --> 09:59.920
Uniline Request

09:59.920 --> 10:00.920
是没办法做的

10:00.920 --> 10:01.920
所以说呢

10:01.920 --> 10:02.920
我们为了解决这个问题

10:02.920 --> 10:03.920
怎么办

10:03.920 --> 10:04.920
我们直接的

10:04.920 --> 10:05.920
使用一个

10:05.920 --> 10:07.920
这种三方插件来实现

10:07.920 --> 10:08.920
那么有同学说了

10:08.920 --> 10:09.920
那我们可以

10:09.920 --> 10:10.920
使用原成的配置

10:10.920 --> 10:11.920
以及XO吗

10:11.920 --> 10:12.920
这个呢是不允许的

10:12.920 --> 10:13.920
在H5当中

10:13.920 --> 10:14.920
配置和XO

10:14.920 --> 10:15.920
是可以进行

10:15.920 --> 10:16.920
网络请求发送的

10:16.920 --> 10:17.920
但是在小程序当中

10:17.920 --> 10:18.920
配置是没办法

10:18.920 --> 10:19.920
进行使用的

10:19.920 --> 10:20.920
我们可以给同学们

10:20.920 --> 10:21.920
做一个测试

10:21.920 --> 10:23.920
同样的是这个问题

10:23.920 --> 10:24.920
那我们直接使用

10:24.920 --> 10:25.920
Fate这样

10:25.920 --> 10:27.920
我使用一个

10:27.920 --> 10:29.920
Async的形式

10:29.920 --> 10:31.920
Async

10:31.920 --> 10:33.920
我这里面Const

10:33.920 --> 10:34.920
Fate

10:34.920 --> 10:36.920
As等于

10:36.920 --> 10:37.920
Vate

10:37.920 --> 10:38.920
Fate

10:38.920 --> 10:39.920
Fate接的是

10:39.920 --> 10:40.920
我们这个地址

10:40.920 --> 10:41.920
咱们可以看一下

10:41.920 --> 10:43.920
Fate能不能行

10:43.920 --> 10:44.920
如果说在这个

10:44.920 --> 10:45.920
H5里面

10:45.920 --> 10:46.920
Fate应该是

10:46.920 --> 10:47.920
没有问题的

10:47.920 --> 10:49.920
我们Const

10:49.920 --> 10:50.920
Result等于

10:50.920 --> 10:51.920
As

10:51.920 --> 10:52.920
Vate

10:52.920 --> 10:54.920
As.json

10:54.920 --> 10:56.920
我打印一下

10:56.920 --> 10:57.920
Result

10:57.920 --> 10:58.920
把底气当

10:58.920 --> 10:59.920
先给它停掉

10:59.920 --> 11:00.920
然后我们先在

11:00.920 --> 11:01.920
H5里面进行

11:01.920 --> 11:02.920
一个查看

11:02.920 --> 11:03.920
此时我点击

11:03.920 --> 11:04.920
获取数据内容

11:05.920 --> 11:06.920
你会发现

11:06.920 --> 11:07.920
正常的

11:07.920 --> 11:08.920
通过Fate

11:08.920 --> 11:09.920
也可以进行一个请求

11:09.920 --> 11:10.920
但是在这个

11:10.920 --> 11:11.920
小程序里面

11:11.920 --> 11:12.920
我们这事就尴尬了

11:12.920 --> 11:13.920
因为这里面

11:13.920 --> 11:15.920
Fate is not a function

11:15.920 --> 11:16.920
它不认Fate

11:16.920 --> 11:17.920
所以说大半

11:17.920 --> 11:18.920
就像我们刚才说的

11:18.920 --> 11:19.920
这个时候

11:19.920 --> 11:20.920
我们就可以借助一些

11:20.920 --> 11:21.920
三方差价

11:21.920 --> 11:22.920
来完善

11:22.920 --> 11:23.920
我们的一个

11:23.920 --> 11:24.920
请求的一个封窗

11:24.920 --> 11:25.920
这里面就包含了

11:25.920 --> 11:26.920
一些请求的

11:26.920 --> 11:27.920
响应拦截

11:27.920 --> 11:28.920
以及我们的

11:28.920 --> 11:30.920
请求之前的拦截

11:30.920 --> 11:31.920
我们可以使用

11:31.920 --> 11:32.920
这种

11:32.920 --> 11:34.920
Echo Cook Request

11:34.920 --> 11:35.920
的mini programe

11:35.920 --> 11:36.920
这种形式

11:36.920 --> 11:37.920
非常简单

11:37.920 --> 11:38.920
我们直接的

11:38.920 --> 11:39.920
通过NPM的形式

11:39.920 --> 11:41.920
来进行一下安装

11:41.920 --> 11:42.920
我们来测试一下

11:42.920 --> 11:43.920
怎么来实现安装

11:43.920 --> 11:44.920
首先你在这个

11:44.920 --> 11:45.920
控制台里面

11:45.920 --> 11:46.920
你是没办法安装的

11:46.920 --> 11:47.920
那我打扮呢

11:47.920 --> 11:48.920
我们直接打开

11:48.920 --> 11:49.920
一个中端

11:49.920 --> 11:50.920
在指定的目录下

11:50.920 --> 11:52.920
比如说我这个

11:52.920 --> 11:53.920
找到我们这个

11:53.920 --> 11:55.920
当前文件的目录

11:55.920 --> 11:57.920
打开文件所在目录

11:57.920 --> 11:58.920
在这个里面

11:58.920 --> 12:00.920
我们打开自带的中端

12:00.920 --> 12:02.920
然后我们进行一下安装

12:02.920 --> 12:04.920
安装是如何来实现安装的

12:04.920 --> 12:05.920
就按着它这个

12:05.920 --> 12:06.920
NPM Instal

12:06.920 --> 12:07.920
Echo Cook

12:07.920 --> 12:08.920
OK

12:08.920 --> 12:09.920
这个就可以了

12:09.920 --> 12:10.920
我们来试一下

12:10.920 --> 12:11.920
NPM Instal

12:11.920 --> 12:13.920
那我们要

12:13.920 --> 12:14.920
在自己的项目里使用

12:14.920 --> 12:15.920
怎么办

12:15.920 --> 12:16.920
刚第一杯

12:16.920 --> 12:19.490
OK

12:19.490 --> 12:20.490
好的

12:20.490 --> 12:21.490
现在就是一个

12:21.490 --> 12:22.490
开始安装的状态

12:22.490 --> 12:23.490
如果说他开始安装

12:23.490 --> 12:24.490
成功之后

12:24.490 --> 12:25.490
那你的工程里面

12:25.490 --> 12:26.490
应该多了一个Node Models

12:26.490 --> 12:27.490
这种形式

12:27.490 --> 12:28.490
是不是通过我们

12:28.490 --> 12:29.490
Node Models的

12:29.490 --> 12:31.490
这个NPM包的形式安装

12:31.490 --> 12:32.490
那一定会有一个

12:32.490 --> 12:33.490
Node Models

12:33.490 --> 12:34.490
然后有了之后

12:34.490 --> 12:35.490
我们继续

12:35.490 --> 12:36.490
按着它的这个

12:36.490 --> 12:37.490
API温度

12:37.490 --> 12:38.490
一步一步的使用

12:38.490 --> 12:39.490
其实呢

12:39.490 --> 12:40.490
我们这个

12:40.490 --> 12:41.490
给他做一个导入

12:41.490 --> 12:42.490
导入在哪个里面

12:42.490 --> 12:43.490
导入

12:43.490 --> 12:45.490
就在悶点JS里面

12:45.490 --> 12:46.490
我们首先进行

12:46.490 --> 12:47.490
对他一个导入

12:47.490 --> 12:48.490
导入之后

12:48.490 --> 12:49.490
我们可以

12:49.490 --> 12:51.490
把他挂载到Uni上面

12:51.490 --> 12:52.490
也可以

12:52.490 --> 12:54.490
我们通过Vail.prototype

12:54.490 --> 12:55.490
进行

12:55.490 --> 12:57.490
原型的方式

12:57.490 --> 12:59.490
来对他进行一个挂载

12:59.490 --> 13:02.490
prototype.dollarhttp

13:02.490 --> 13:03.490
也就是说

13:03.490 --> 13:04.490
我们导入的

13:04.490 --> 13:05.490
这个等于一个

13:05.490 --> 13:06.490
dollarhttp

13:06.490 --> 13:08.490
在Vail原型上

13:08.490 --> 13:09.490
挂载一个dollarhttp

13:09.490 --> 13:10.490
之后

13:10.490 --> 13:11.490
我们如果说

13:11.490 --> 13:12.490
这种挂载形式

13:12.490 --> 13:14.490
OK了之后

13:14.490 --> 13:15.490
我们就可以在

13:15.490 --> 13:16.490
index.js里面

13:16.490 --> 13:17.490
首先

13:17.490 --> 13:18.490
我们来看一下

13:18.490 --> 13:19.490
它是否有了

13:19.490 --> 13:20.490
怎么来看

13:20.490 --> 13:21.490
我们在这个里面

13:21.490 --> 13:22.490
把下面的先给

13:22.490 --> 13:23.490
return掉

13:23.490 --> 13:24.490
然后我在这个里面

13:24.490 --> 13:25.490
做一个打印

13:25.490 --> 13:27.490
这次.dollarhttp

13:27.490 --> 13:28.490
OK

13:28.490 --> 13:29.490
我们看一下

13:29.490 --> 13:30.490
是否引入了

13:30.490 --> 13:31.490
引入之后

13:31.490 --> 13:32.490
你再来做

13:32.490 --> 13:33.490
下一步操作

13:33.490 --> 13:34.490
如果说他都没引入

13:34.490 --> 13:35.490
那这个

13:35.490 --> 13:36.490
你下一步操作

13:36.490 --> 13:37.490
就展示一下

13:37.490 --> 13:38.490
不要做了

13:38.490 --> 13:39.490
然后我把

13:39.490 --> 13:40.490
这个app.vail里面

13:40.490 --> 13:41.490
这里面有几个打印纸

13:41.490 --> 13:42.490
咱们先可以给他

13:42.490 --> 13:43.490
进行一个注释钓

13:43.490 --> 13:44.490
我们渲染好的

13:44.490 --> 13:47.490
然后咱们来刷新一下

13:47.490 --> 13:48.490
好的

13:48.490 --> 13:49.490
我一点击获取数据内容

13:49.490 --> 13:50.490
这个里面

13:50.490 --> 13:51.490
有一个request的

13:51.490 --> 13:52.490
请求对象

13:52.490 --> 13:53.490
那就说明

13:53.490 --> 13:55.490
我们request的miniprograme

13:55.490 --> 13:56.490
是引入成功了

13:56.490 --> 13:57.490
而且这种形式

13:57.490 --> 13:58.490
它是支持小程序的

13:58.490 --> 14:00.490
那我们就来试一下

14:00.490 --> 14:01.490
试一下怎么办

14:01.490 --> 14:02.490
我们就按着它的文档

14:02.490 --> 14:03.490
非常简单

14:03.490 --> 14:05.490
dollarhtt.geturl

14:05.490 --> 14:07.490
data还可以不传

14:07.490 --> 14:08.490
然后我们直接的

14:08.490 --> 14:09.490
这个里面

14:09.490 --> 14:11.490
它会有一个什么

14:11.490 --> 14:13.490
我们请求的

14:13.490 --> 14:14.490
之前的拦截

14:14.490 --> 14:15.490
以及响应的拦截

14:15.490 --> 14:16.490
那这样

14:16.490 --> 14:17.490
我们先不拦截它

14:17.490 --> 14:18.490
我们先怎么做呢

14:18.490 --> 14:19.490
我们先让这次

14:19.490 --> 14:20.490
请求成功

14:20.490 --> 14:22.490
dollarat.

14:22.490 --> 14:23.490
我们直接的

14:23.490 --> 14:24.490
这种guide形式

14:24.490 --> 14:25.490
就可以

14:25.490 --> 14:26.490
那我们就来做一下

14:26.490 --> 14:27.490
回到我们的

14:27.490 --> 14:29.490
index.vail界面

14:29.490 --> 14:30.490
我们在这个里面

14:30.490 --> 14:32.490
重新来测试一下

14:32.490 --> 14:33.490
那怎么来做呢

14:33.490 --> 14:34.490
我这里面

14:34.490 --> 14:35.490
订一个变量

14:35.490 --> 14:37.490
Cons的res等于await

14:37.490 --> 14:40.490
这次.dollarhtt.get

14:40.490 --> 14:41.490
然后第一个呢

14:41.490 --> 14:42.490
是它的请求地址

14:42.490 --> 14:44.490
我们将这个请求地址

14:44.490 --> 14:45.490
进行一个复制

14:45.490 --> 14:46.490
在这个里面

14:46.490 --> 14:47.490
进行一下请求

14:47.490 --> 14:48.490
请求完成之后

14:48.490 --> 14:49.490
在这里面

14:49.490 --> 14:51.490
我进行一个直的打印

14:51.490 --> 14:52.490
logres

14:52.490 --> 14:53.490
然后呢

14:53.490 --> 14:54.490
我们来进行一下查看

14:55.490 --> 14:56.490
好的此时有一个

14:56.490 --> 14:57.490
抱错啊

14:57.490 --> 14:58.490
那抱错是什么

14:58.490 --> 14:59.490
我们来看一眼啊

14:59.490 --> 15:00.490
这时候呢

15:00.490 --> 15:01.490
告诉我们

15:01.490 --> 15:02.490
语法错误res

15:02.490 --> 15:03.490
hasalreadydeclosed

15:03.490 --> 15:04.490
已经声明了

15:04.490 --> 15:05.490
那这个时候呢

15:05.490 --> 15:06.490
我们将底下

15:06.490 --> 15:07.490
先进行一下注释

15:07.490 --> 15:08.490
因为我们这个里面

15:08.490 --> 15:09.490
声明了

15:09.490 --> 15:10.490
然后底下

15:10.490 --> 15:12.490
又重新进行了一个声明

15:12.490 --> 15:13.490
所以说

15:13.490 --> 15:14.490
同学们遇到错误

15:14.490 --> 15:15.490
不要着急

15:15.490 --> 15:16.490
肯定是哪里有问题啊

15:16.490 --> 15:17.490
我们就按着

15:17.490 --> 15:18.490
行号进行一个查找

15:18.490 --> 15:19.490
就ok

15:19.490 --> 15:20.490
来测试一下

15:20.490 --> 15:21.490
我当我点击

15:21.490 --> 15:22.490
获取数据内容

15:22.490 --> 15:23.490
那你会发现

15:23.490 --> 15:24.490
十一和十三都打印啊

15:24.490 --> 15:25.490
这是为什么

15:25.490 --> 15:26.490
我们这个上面

15:26.490 --> 15:27.490
还有一个对吧

15:27.490 --> 15:28.490
把它也干掉

15:28.490 --> 15:29.490
重新再来一下

15:29.490 --> 15:30.490
我们刷新界面

15:30.490 --> 15:31.490
直接的在这个里面

15:31.490 --> 15:32.490
刷新一下

15:32.490 --> 15:33.490
然后点击获取

15:33.490 --> 15:34.490
数据内容

15:34.490 --> 15:35.490
date

15:35.490 --> 15:36.490
打印出来的是

15:36.490 --> 15:37.490
我们的这个数据的

15:37.490 --> 15:38.490
相关的内容

15:38.490 --> 15:39.490
在小程序里再看一下

15:39.490 --> 15:40.490
点击获取内容

15:40.490 --> 15:41.490
你会发现

15:41.490 --> 15:42.490
小程序里面

15:42.490 --> 15:43.490
也是可以正常打印

15:43.490 --> 15:44.490
那也就说明啊

15:44.490 --> 15:45.490
这个方法

15:45.490 --> 15:46.490
他对小程序

15:46.490 --> 15:47.490
是不是也支持

15:47.490 --> 15:48.490
所以说我们可以啊

15:48.490 --> 15:49.490
很轻松的使用

15:49.490 --> 15:50.490
这种三方参加

15:50.490 --> 15:51.490
那如何来进行拦截呢

15:51.490 --> 15:52.490
这也非常简单啊

15:52.490 --> 15:53.490
我们把这个

15:53.490 --> 15:55.490
给粘贴过来之后呢

15:55.490 --> 15:56.490
我们看一下

15:56.490 --> 15:57.490
在请求发动之前

15:57.490 --> 15:59.490
我们可以使用这种

15:59.490 --> 16:00.490
这次点

16:00.490 --> 16:01.490
dollardatb的形式

16:01.490 --> 16:02.490
beforerequest的

16:02.490 --> 16:03.490
然后呢

16:03.490 --> 16:04.490
我们直接在这个里面

16:04.490 --> 16:06.490
可以拿到一个相关

16:06.490 --> 16:07.490
option

16:07.490 --> 16:08.490
在这里面打印一下

16:08.490 --> 16:09.490
比如说

16:09.490 --> 16:12.490
这个是请求之前啊

16:12.490 --> 16:13.490
请求之前

16:13.490 --> 16:14.490
然后呢

16:14.490 --> 16:16.490
我们加上一个options

16:16.490 --> 16:17.490
他的

16:17.490 --> 16:18.490
我们的本次请求的

16:18.490 --> 16:19.490
一些参数

16:19.490 --> 16:20.490
应该都是在这个里面

16:20.490 --> 16:21.490
然后有这个

16:21.490 --> 16:22.490
beforerequest的

16:22.490 --> 16:23.490
那他其实

16:23.490 --> 16:24.490
还有一个什么

16:24.490 --> 16:25.490
我们的这个

16:25.490 --> 16:27.490
beforerequest的之后

16:27.490 --> 16:28.490
还有一个

16:28.490 --> 16:30.490
我们的afterrequest的

16:30.490 --> 16:31.490
对不对

16:31.490 --> 16:32.490
这里面还有一个after

16:32.490 --> 16:34.490
那我们也给他拿过来啊

16:34.490 --> 16:35.490
在这个里面

16:35.490 --> 16:36.490
我们也定一下吧

16:36.490 --> 16:37.490
这是

16:37.490 --> 16:38.490
同样的

16:38.490 --> 16:39.490
这一次点dollardatb

16:39.490 --> 16:41.490
点afterrequest的

16:41.490 --> 16:42.490
我们打印一下

16:42.490 --> 16:43.490
这个是

16:43.490 --> 16:44.490
比如说我们这个

16:44.490 --> 16:46.490
请求完成

16:46.490 --> 16:47.490
请求完成

16:47.490 --> 16:48.490
然后呢

16:48.490 --> 16:49.490
我们来看一眼

16:49.490 --> 16:50.490
他这个测试效果啊

16:50.490 --> 16:52.490
到我们的浏览器里面

16:52.490 --> 16:54.490
重新的进行一下运行

16:54.490 --> 16:55.490
然后找到我们的

16:55.490 --> 16:56.490
这个工程

16:56.490 --> 16:57.490
点击一下

16:57.490 --> 16:58.490
比如说获取数据

16:58.490 --> 17:00.490
这里面会给我发送

17:00.490 --> 17:01.490
请求之前

17:01.490 --> 17:02.490
然后呢

17:02.490 --> 17:03.490
请求之前

17:03.490 --> 17:04.490
这里面

17:04.490 --> 17:05.490
有一些我们

17:05.490 --> 17:06.490
参数

17:06.490 --> 17:07.490
比如说背的

17:07.490 --> 17:08.490
beforerequest

17:08.490 --> 17:09.490
还有data

17:09.490 --> 17:10.490
请求地址

17:10.490 --> 17:11.490
都在这个里面

17:11.490 --> 17:12.490
然后呢

17:12.490 --> 17:13.490
17行又开始给我们打印

17:13.490 --> 17:14.490
请求完成

17:14.490 --> 17:15.490
也就是说

17:15.490 --> 17:16.490
请求之前

17:16.490 --> 17:17.490
请求完成

17:17.490 --> 17:18.490
之后呢

17:18.490 --> 17:19.490
又给我们这个

17:19.490 --> 17:20.490
整个的本次请求的相关信息

17:20.490 --> 17:21.490
都给我们返回来了

17:21.490 --> 17:22.490
对不对

17:22.490 --> 17:23.490
那其实呢

17:23.490 --> 17:24.490
他的这个操作

17:24.490 --> 17:25.490
跟我们

17:25.490 --> 17:26.490
使用啊

17:26.490 --> 17:27.490
是非常相近的

17:27.490 --> 17:28.490
所以说呢

17:28.490 --> 17:29.490
我们拿起来啊

17:29.490 --> 17:30.490
上手的话

17:30.490 --> 17:31.490
应该会很快啊

17:31.490 --> 17:32.490
好的

17:32.490 --> 17:33.490
那这个呢

17:33.490 --> 17:34.490
这个网络请求的

17:34.490 --> 17:35.490
这一部分内容啊

17:35.490 --> 17:36.490
那接下来呢

17:36.490 --> 17:37.490
我们再说一下

17:37.490 --> 17:38.490
他这个上传

17:38.490 --> 17:39.490
和下载文件这一块

17:39.490 --> 17:41.490
其实上传和下载文件

17:41.490 --> 17:42.490
他也属于网络请求的一部分

17:42.490 --> 17:43.490
只不过是呢

17:43.490 --> 17:44.490
他呢

17:44.490 --> 17:45.490
针对性比较强

17:45.490 --> 17:46.490
比如说

17:46.490 --> 17:47.490
我们进行一些文件的上传

17:47.490 --> 17:48.490
然后呢

17:48.490 --> 17:49.490
还有一个文件的下载

17:49.490 --> 17:50.490
这一块

17:50.490 --> 17:51.490
如何来处理呢

17:51.490 --> 17:52.490
我们啊

17:52.490 --> 17:53.490
也要看他的这个API

17:53.490 --> 17:55.490
打开这个链接之后

17:55.490 --> 17:57.490
就是我们的一个

17:57.490 --> 17:59.490
API的这个地址啊

17:59.490 --> 18:00.490
我们看到这里面

18:00.490 --> 18:01.490
有unit upload fail

18:01.490 --> 18:02.490
有一些相关参数

18:02.490 --> 18:04.490
UIL Fails指定的上传

18:04.490 --> 18:06.490
然后我们从这个里面

18:06.490 --> 18:07.490
插件市场

18:07.490 --> 18:08.490
可以找到一些

18:08.490 --> 18:10.490
封装好的这个插件

18:10.490 --> 18:11.490
然后呢

18:11.490 --> 18:12.490
他是专门针对我们上传文件

18:12.490 --> 18:14.490
做了一些内置的封装

18:14.490 --> 18:15.490
但是呢

18:15.490 --> 18:16.490
核心底层也是通过这种

18:16.490 --> 18:18.490
unit upload fail

18:18.490 --> 18:19.490
来实现封装的啊

18:19.490 --> 18:20.490
那这样

18:20.490 --> 18:21.490
我们自己啊

18:21.490 --> 18:22.490
来实现一下

18:22.490 --> 18:23.490
找到他底前的这个例子

18:23.490 --> 18:24.490
这里面有一个例子

18:24.490 --> 18:26.490
unit出自己match

18:26.490 --> 18:27.490
出自己match是什么呢

18:27.490 --> 18:28.490
其实在这个里面

18:28.490 --> 18:30.490
它是对图片处理的

18:30.490 --> 18:31.490
那图片处理这一块

18:31.490 --> 18:32.490
我们可以啊

18:32.490 --> 18:34.490
直接来进行一下使用啊

18:34.490 --> 18:35.490
这个呢

18:35.490 --> 18:37.490
是unittruth image的文档

18:37.490 --> 18:39.490
也就是说选择图片

18:39.490 --> 18:40.490
获取一个

18:40.490 --> 18:42.490
从我们本地设备里面啊

18:42.490 --> 18:44.490
不管是你的相册里面

18:44.490 --> 18:45.490
还是说我们自行

18:45.490 --> 18:46.490
相机里面

18:46.490 --> 18:47.490
重新拍照

18:47.490 --> 18:48.490
能获取一些图片

18:48.490 --> 18:49.490
那他的这个场景

18:49.490 --> 18:50.490
其实就是啥呢

18:50.490 --> 18:52.490
我们首先获取图片

18:52.490 --> 18:53.490
获取图片成功之后呢

18:53.490 --> 18:55.490
将我们本地这张图片

18:55.490 --> 18:57.490
上传到远端服务器

18:57.490 --> 18:59.490
就是这么一个实践过程啊

19:00.490 --> 19:01.490
那我们就来做一下

19:01.490 --> 19:03.490
truth image也非常简单啊

19:03.490 --> 19:04.490
直接的在这里面

19:04.490 --> 19:05.490
你看啊

19:05.490 --> 19:06.490
unittruth image

19:06.490 --> 19:08.490
它在一篇文档

19:08.490 --> 19:09.490
counter代表着

19:09.490 --> 19:11.490
我们上传的这个

19:11.490 --> 19:12.490
几张图片一次啊

19:12.490 --> 19:14.490
然后这里面还有这个

19:14.490 --> 19:15.490
side type

19:15.490 --> 19:16.490
side type呢

19:16.490 --> 19:17.490
这里面有什么呢

19:17.490 --> 19:18.490
有这个圆图

19:18.490 --> 19:19.490
或者是压缩图啊

19:19.490 --> 19:21.490
这里面有一个选择

19:21.490 --> 19:22.490
salt type啊

19:22.490 --> 19:23.490
这里面有arbum

19:23.490 --> 19:25.490
还有一个什么comer

19:25.490 --> 19:26.490
也就是说

19:26.490 --> 19:27.490
从相册里面

19:27.490 --> 19:28.490
或者是照样机里面

19:28.490 --> 19:29.490
进行选择

19:29.490 --> 19:30.490
然后side function

19:30.490 --> 19:31.490
这个就是

19:31.490 --> 19:32.490
我们成功之后的

19:32.490 --> 19:34.490
一个响应的这个值啊

19:34.490 --> 19:35.490
然后其实它这里面

19:35.490 --> 19:36.490
差数很多

19:36.490 --> 19:37.490
我们使用的时候

19:37.490 --> 19:39.490
可以主动去看一下啊

19:39.490 --> 19:40.490
这里面有一些必选项

19:40.490 --> 19:41.490
还有一些非必选项

19:41.490 --> 19:42.490
比如说必选项

19:42.490 --> 19:43.490
是什么

19:43.490 --> 19:44.490
我们上传成功

19:44.490 --> 19:45.490
这个side

19:45.490 --> 19:46.490
对不对

19:46.490 --> 19:47.490
所以说其他的呢

19:47.490 --> 19:48.490
这些啊

19:48.490 --> 19:49.490
我们直接都可以不停的选择

19:49.490 --> 19:50.490
使用它的默认

19:50.490 --> 19:51.490
参数就可以

19:51.490 --> 19:52.490
所以说呢

19:52.490 --> 19:53.490
在这里面

19:53.490 --> 19:54.490
我们就使用这种

19:54.490 --> 19:56.490
unittruth image的形式

19:56.490 --> 19:57.490
来测试一下啊

19:57.490 --> 19:58.490
那这个打扮呢

19:58.490 --> 20:00.490
同样是使用一个button按钮

20:00.490 --> 20:01.490
button按钮呢

20:01.490 --> 20:03.490
我们这里面写一个什么

20:03.490 --> 20:04.490
at click

20:04.490 --> 20:05.490
然后呢

20:05.490 --> 20:07.490
我们post

20:07.490 --> 20:09.490
mg uploadmg吧

20:09.490 --> 20:10.490
或者是

20:10.490 --> 20:12.490
uploadmg ok

20:12.490 --> 20:13.490
那我这里面写一个

20:13.490 --> 20:15.490
上传图片

20:15.490 --> 20:19.440
上传图片

20:19.440 --> 20:21.440
来给同学们测试一下啊

20:21.440 --> 20:23.440
这个uploadmg

20:23.440 --> 20:24.440
那我们就来定一下

20:24.440 --> 20:26.440
在这儿写一个

20:26.440 --> 20:28.440
uploadmg ok

20:29.440 --> 20:30.440
然后呢

20:30.440 --> 20:32.440
把刚才我复制的这一套

20:32.440 --> 20:33.440
给粘过来

20:33.440 --> 20:34.440
首先unittruthmg

20:34.440 --> 20:35.440
这个我们要知道

20:35.440 --> 20:36.440
这什么意思

20:36.440 --> 20:38.440
从本地

20:38.440 --> 20:39.440
然后呢

20:39.440 --> 20:41.440
相册或者是

20:41.440 --> 20:43.440
照相机

20:43.440 --> 20:44.440
里面

20:44.440 --> 20:45.440
然后呢

20:45.440 --> 20:47.440
进行一个图片

20:47.440 --> 20:48.440
或者是

20:48.440 --> 20:51.440
多个图片的选择

20:51.440 --> 20:52.440
然后呢

20:52.440 --> 20:53.440
我们这个里面

20:53.440 --> 20:54.440
能获取到

20:54.440 --> 20:56.440
一个或多个

20:57.440 --> 20:58.440
图片的

20:58.440 --> 20:59.440
地址

20:59.440 --> 21:00.440
这个呢

21:00.440 --> 21:01.440
我们要清楚一下

21:01.440 --> 21:02.440
如果说他成功之后

21:02.440 --> 21:03.440
这里面有一个

21:03.440 --> 21:05.440
truthmg reset

21:05.440 --> 21:06.440
然后呢

21:06.440 --> 21:07.440
我们可以给他做一个

21:07.440 --> 21:09.440
打印来看一眼啊

21:09.440 --> 21:10.440
这里面打印一下

21:10.440 --> 21:12.440
truthmg response

21:12.440 --> 21:13.440
好的那底下

21:13.440 --> 21:14.440
我们可以先

21:14.440 --> 21:15.440
不让他执行

21:15.440 --> 21:16.440
因为我现在

21:16.440 --> 21:17.440
也没指定上传地址的

21:17.440 --> 21:18.440
对不对

21:18.440 --> 21:19.440
这里面

21:19.440 --> 21:20.440
我们就先来做这个事

21:20.440 --> 21:21.440
看一下

21:21.440 --> 21:22.440
看一下我们这一块

21:22.440 --> 21:23.440
我们点击一下

21:23.440 --> 21:24.440
上传图片

21:24.440 --> 21:25.440
来做一个测试

21:26.440 --> 21:27.440
点击

21:27.440 --> 21:28.440
这个时候呢

21:28.440 --> 21:29.440
就从我这个

21:29.440 --> 21:30.440
本地里面

21:30.440 --> 21:31.440
进行一些查找

21:31.440 --> 21:32.440
那我们直接随便

21:32.440 --> 21:33.440
选一张图片吧

21:33.440 --> 21:34.440
点击打开

21:34.440 --> 21:35.440
这里面有一个

21:35.440 --> 21:36.440
iOS-G

21:36.440 --> 21:37.440
这里面还有一个

21:37.440 --> 21:39.440
typefilepass

21:39.440 --> 21:41.440
这个typefilepass

21:41.440 --> 21:42.440
就是我们获取的

21:42.440 --> 21:44.440
一个图片的信息

21:44.440 --> 21:45.440
比如说

21:45.440 --> 21:46.440
我把这个给粘贴一下

21:46.440 --> 21:47.440
粘贴一下

21:47.440 --> 21:48.440
在我们刚才

21:48.440 --> 21:49.440
这个地址里面

21:49.440 --> 21:50.440
进行一下打印

21:50.440 --> 21:51.440
你会发现

21:51.440 --> 21:52.440
这个就是我们

21:52.440 --> 21:53.440
需要上传的这个内容

21:53.440 --> 21:54.440
对吧

21:54.440 --> 21:55.440
这时候呢

21:55.440 --> 21:56.440
其实呢

21:56.440 --> 21:57.440
这个时候是

21:57.440 --> 21:58.440
获取到

21:58.440 --> 22:00.440
我们的一个图片信息了

22:00.440 --> 22:01.440
这一步

22:02.440 --> 22:03.440
那写一下

22:03.440 --> 22:04.440
其实这一步就是

22:04.440 --> 22:06.440
获取到图片信息

22:06.440 --> 22:08.440
获取到图片信息

22:08.440 --> 22:09.440
ok

22:09.440 --> 22:11.440
那你获取到图片信息之后干嘛呢

22:11.440 --> 22:12.440
你下一步

22:12.440 --> 22:13.440
是不是开始

22:13.440 --> 22:14.440
真正的进行一个什么

22:14.440 --> 22:16.440
图片的上传

22:16.440 --> 22:17.440
对吧

22:17.440 --> 22:18.440
那这一步我给写一下

22:18.440 --> 22:19.440
这个就是

22:19.440 --> 22:21.440
图片的一个上传

22:21.440 --> 22:22.440
图片上传

22:22.440 --> 22:23.440
那首先你要明确

22:23.440 --> 22:24.440
那这个是啥呢

22:24.440 --> 22:25.440
它是你后端

22:25.440 --> 22:27.440
上传图片的地址

22:27.440 --> 22:31.440
后端上传图片的一个

22:31.440 --> 22:32.440
地址信息

22:32.440 --> 22:34.440
那这个你要明确一下

22:34.440 --> 22:35.440
那其实

22:35.440 --> 22:36.440
这个是测试的

22:36.440 --> 22:37.440
我们得换成一个自己的

22:37.440 --> 22:38.440
这样呢

22:38.440 --> 22:39.440
我准备一个地址

22:39.440 --> 22:41.440
准备一个我后台的地址

22:41.440 --> 22:42.440
来做一个测试

22:42.440 --> 22:44.440
打开我这个文件

22:44.440 --> 22:46.440
这里面有一个漆牛

22:46.440 --> 22:47.440
我们就以自己

22:47.440 --> 22:48.440
漆牛的这个地址

22:48.440 --> 22:49.440
来做一个测试

22:49.440 --> 22:50.440
在这个里面

22:51.440 --> 22:52.440
把它给换成漆牛的

22:53.440 --> 22:54.440
然后呢

22:54.440 --> 22:55.440
我们这个里面

22:55.440 --> 22:56.440
还需要准备一些

22:56.440 --> 22:57.440
漆牛上传

22:57.440 --> 23:00.440
所需要的相关的参数

23:00.440 --> 23:01.440
file pass

23:01.440 --> 23:02.440
我们就使用这个

23:02.440 --> 23:03.440
temporary的file pass

23:03.440 --> 23:04.440
内幕呢

23:04.440 --> 23:05.440
我指定这个内幕

23:05.440 --> 23:06.440
但是form data

23:06.440 --> 23:07.440
我这里面得换一下

23:07.440 --> 23:09.440
因为我上传漆牛的话

23:09.440 --> 23:10.440
这里面啊

23:10.440 --> 23:12.440
在这个漆牛ipi文档里面

23:12.440 --> 23:14.440
它明确描述了

23:14.440 --> 23:15.440
我们这个k

23:15.440 --> 23:16.440
要选择

23:16.440 --> 23:17.440
然后呢

23:17.440 --> 23:18.440
还有一个token

23:18.440 --> 23:20.440
要添加进去啊

23:20.440 --> 23:21.440
这个token是个啥东西呢

23:21.440 --> 23:23.440
token其实就是我刚才

23:23.440 --> 23:24.440
这一块

23:24.440 --> 23:25.440
当然这是我的

23:25.440 --> 23:26.440
生成的token

23:26.440 --> 23:27.440
同学们可以自行

23:27.440 --> 23:28.440
在漆牛里面

23:28.440 --> 23:29.440
生成一个token

23:29.440 --> 23:31.440
来做一个这种测试

23:31.440 --> 23:32.440
或者是呢

23:32.440 --> 23:33.440
你自己搭一个

23:33.440 --> 23:34.440
临时的服务器

23:34.440 --> 23:35.440
然后指定一个

23:35.440 --> 23:36.440
上传地址也可以啊

23:36.440 --> 23:37.440
token

23:37.440 --> 23:38.440
token完成之后呢

23:38.440 --> 23:39.440
我们这里面

23:39.440 --> 23:40.440
还得需要指定一个k

23:40.440 --> 23:41.440
k就是代表

23:41.440 --> 23:44.440
上传这次文件的这个名字

23:44.440 --> 23:45.440
那我这里面

23:45.440 --> 23:46.440
就使用什么呢

23:46.440 --> 23:47.440
使用一个时间戳吧

23:47.440 --> 23:50.440
那就data.now

23:50.440 --> 23:51.440
然后我们加上

23:51.440 --> 23:53.440
一个什么.gopg

23:53.440 --> 23:54.440
指定它为gopg

23:54.440 --> 23:55.440
那这样呢

23:55.440 --> 23:56.440
就实现了一个

23:56.440 --> 23:58.440
我们上传文件的

23:58.440 --> 23:59.440
一个基本结构

23:59.440 --> 24:00.440
那咱们如果说

24:00.440 --> 24:01.440
成功之后

24:01.440 --> 24:02.440
现在要看什么呢

24:02.440 --> 24:03.440
我们成功之后

24:03.440 --> 24:05.440
其实是要看它的

24:05.440 --> 24:06.440
这个

24:06.440 --> 24:07.440
我们到这个里面

24:07.440 --> 24:08.440
我们要看这个

24:08.440 --> 24:09.440
uploadfiles.data

24:09.440 --> 24:10.440
对不对

24:10.440 --> 24:11.440
这个地址

24:11.440 --> 24:12.440
那我们能通过

24:12.440 --> 24:13.440
这个地址来进行访问

24:13.440 --> 24:14.440
那这个时候呢

24:14.440 --> 24:15.440
就代表着

24:15.440 --> 24:16.440
我们整个这个图片

24:16.440 --> 24:17.440
上传成功了

24:17.440 --> 24:18.440
然后我们看了

24:18.440 --> 24:19.440
刚才这个

24:19.440 --> 24:20.440
files pass

24:20.440 --> 24:21.440
也看到了

24:21.440 --> 24:22.440
它是一个速度的形式

24:22.440 --> 24:23.440
但是呢

24:23.440 --> 24:24.440
我现在只想让

24:24.440 --> 24:25.440
一张图片上传

24:25.440 --> 24:26.440
所以说我只传

24:26.440 --> 24:27.440
它第一张图片

24:27.440 --> 24:28.440
就ok了

24:28.440 --> 24:29.440
对吧

24:29.440 --> 24:30.440
这块就是这意思

24:30.440 --> 24:31.440
给大家写一下

24:31.440 --> 24:32.440
这个是指传

24:32.440 --> 24:36.440
我们选择的图片的

24:36.440 --> 24:39.440
第一张上传

24:39.440 --> 24:40.440
ok

24:40.440 --> 24:41.440
那就是这个意思

24:41.440 --> 24:42.440
好的

24:42.440 --> 24:43.440
那我们来看一眼

24:43.440 --> 24:45.440
来走你上传图片

24:45.440 --> 24:46.440
刷新一下

24:46.440 --> 24:47.440
咱们做一个测试

24:47.440 --> 24:48.440
上传图片

24:48.440 --> 24:50.440
这一屏一打开

24:50.440 --> 24:51.440
打开之后

24:51.440 --> 24:52.440
咱们可以查看一下

24:52.440 --> 24:53.440
network

24:53.440 --> 24:54.440
此时呢

24:54.440 --> 24:55.440
这里面有一个

24:55.440 --> 24:57.440
漆牛上传的这样一个过程

24:57.440 --> 24:58.440
然后这里面是喷顶

24:58.440 --> 24:59.440
喷顶是还没有好

24:59.440 --> 25:00.440
等它好了之后

25:00.440 --> 25:02.440
我们可以进行一个查看

25:02.440 --> 25:03.440
稍微图片

25:03.440 --> 25:04.440
可能是有一点大

25:04.440 --> 25:05.440
ok 426b

25:05.440 --> 25:06.440
这已经上传了

25:06.440 --> 25:07.440
上传完成之后

25:07.440 --> 25:08.440
这里面给我返回一个

25:08.440 --> 25:10.440
漆牛上传完图片之后的

25:10.440 --> 25:11.440
一个地址

25:11.440 --> 25:12.440
那我们通过这个

25:12.440 --> 25:13.440
外网地址来访问一下

25:13.440 --> 25:14.440
如果说成功了

25:14.440 --> 25:15.440
那就代表着

25:15.440 --> 25:16.440
我们本次

25:16.440 --> 25:17.440
上传这个图片

25:17.440 --> 25:18.440
是不是就ok了

25:18.440 --> 25:19.440
那这样

25:19.440 --> 25:20.440
我们现在可以访问到

25:20.440 --> 25:21.440
那也就是说

25:21.440 --> 25:23.440
我们将这个图片

25:23.440 --> 25:24.440
做了一个什么事

25:24.440 --> 25:25.440
首先从本地

25:25.440 --> 25:26.440
获取一张图片

25:26.440 --> 25:27.440
对吧

25:27.440 --> 25:28.440
然后从本地

25:28.440 --> 25:29.440
获取一张图片之后

25:29.440 --> 25:31.440
我们通过这种

25:31.440 --> 25:34.440
unit.uploadfail的形式

25:34.440 --> 25:35.440
指定了我们图片的

25:35.440 --> 25:37.440
上传地址

25:37.440 --> 25:40.440
图片的上传地址

25:40.440 --> 25:42.440
然后这个再写一下

25:42.440 --> 25:45.440
一般是后端提供

25:45.440 --> 25:46.440
如果说

25:46.440 --> 25:47.440
你们不会写这个

25:47.440 --> 25:48.440
也没关系

25:48.440 --> 25:49.440
因为我们如果说

25:49.440 --> 25:50.440
做正常开发的时候

25:50.440 --> 25:51.440
那在业务开发里面

25:51.440 --> 25:52.440
这个地址

25:52.440 --> 25:54.440
一般有后端提供给你

25:54.440 --> 25:57.440
传递我们选择的这个

25:57.440 --> 25:58.440
第二个就是

25:58.440 --> 25:59.440
我们传递选择的

25:59.440 --> 26:01.440
第一张图片上传

26:01.440 --> 26:02.440
我们这里面写一个

26:02.440 --> 26:03.440
指传地

26:03.440 --> 26:04.440
ok

26:04.440 --> 26:05.440
指传递我们选择的

26:05.440 --> 26:06.440
第一张图片上传

26:06.440 --> 26:08.440
这里面还有一个namefail

26:08.440 --> 26:09.440
fail指的是什么

26:09.440 --> 26:10.440
是我们这个文件类型

26:10.440 --> 26:12.440
然后formatdata

26:12.440 --> 26:13.440
formatdata里面

26:13.440 --> 26:15.440
这个里面的相关信息

26:15.440 --> 26:16.440
同学们要了解一下

26:16.440 --> 26:17.440
这个是妻牛

26:17.440 --> 26:20.440
需要的信息内容

26:20.440 --> 26:21.440
也就是说本次上传

26:21.440 --> 26:23.440
后端给你要的这些内容

26:23.440 --> 26:24.440
至于token

26:24.440 --> 26:25.440
这个是我自己生成的

26:25.440 --> 26:26.440
然后如果说

26:26.440 --> 26:27.440
你要有其他的地址的话

26:27.440 --> 26:28.440
比如说你自己

26:28.440 --> 26:29.440
创建一个后端

26:29.440 --> 26:31.440
来找一个地址

26:31.440 --> 26:32.440
那我这时候

26:32.440 --> 26:33.440
你就把这个里面formatdata

26:33.440 --> 26:34.440
你看你根据你后端

26:34.440 --> 26:35.440
他需要点什么

26:35.440 --> 26:36.440
那你就给他什么

26:36.440 --> 26:37.440
就ok了

26:37.440 --> 26:38.440
samside代表着

26:38.440 --> 26:39.440
我们本次上传

26:39.440 --> 26:40.440
那时候返回的

26:40.440 --> 26:41.440
一个成功之后的

26:41.440 --> 26:42.440
一个数据值

26:42.440 --> 26:43.440
就是这意思

26:44.440 --> 26:45.440
来取消一下

26:45.440 --> 26:46.440
然后我们找到

26:46.440 --> 26:48.440
这个上传和下载这一块

26:48.440 --> 26:50.440
uploadfail和这个初罪match

26:50.440 --> 26:51.440
我们在这个

26:51.440 --> 26:52.440
最后案例里面

26:52.440 --> 26:53.440
还会有使用到

26:53.440 --> 26:54.440
如果说

26:54.440 --> 26:55.440
同学们在这块

26:55.440 --> 26:56.440
不是特别理解的话

26:56.440 --> 26:57.440
也没关系

26:57.440 --> 26:58.440
后期我会将

26:58.440 --> 26:59.440
这个图片上传到

26:59.440 --> 27:00.440
我们自己的

27:00.440 --> 27:02.440
这个unicload的地址里面

27:02.440 --> 27:03.440
也就是说

27:03.440 --> 27:04.440
云寒树的这个地址里面

27:04.440 --> 27:05.440
是哪一部分

27:05.440 --> 27:06.440
我们可以给同学们

27:06.440 --> 27:07.440
先提前看一下

27:07.440 --> 27:08.440
那我们在这个里面

27:08.440 --> 27:09.440
先打开这个

27:09.440 --> 27:11.440
移动端的形式

27:11.440 --> 27:12.440
m.

27:12.440 --> 27:14.440
我们那个案例的

27:14.440 --> 27:15.440
访问地址

27:15.440 --> 27:16.440
来看一眼

27:16.440 --> 27:18.440
这里面是有图片上传的

27:18.440 --> 27:20.440
好的,找到这块之后

27:20.440 --> 27:21.440
我到我的里面

27:21.440 --> 27:23.440
先进行一个登录

27:23.440 --> 27:25.440
同学们还记不记得这个登录的

27:25.440 --> 27:28.440
123456123QWE

27:28.440 --> 27:29.440
是这种登录形式

27:29.440 --> 27:30.440
然后到这个里面

27:30.440 --> 27:31.440
有一个意见反馈

27:31.440 --> 27:32.440
包括我们这块

27:32.440 --> 27:34.440
都可以进行一个上传

27:34.440 --> 27:36.440
我在这个意见反馈里面

27:36.440 --> 27:38.440
我可以添加图片进行上传

27:38.440 --> 27:39.440
这样就把这个图片

27:39.440 --> 27:41.440
给它上传过去

27:41.440 --> 27:43.440
我点击打开

27:43.440 --> 27:44.440
此时它就有一个

27:44.440 --> 27:46.440
进行上传的过程

27:46.440 --> 27:47.440
当上传成功之后

27:47.440 --> 27:49.440
它会给我一个反馈值

27:49.440 --> 27:55.440
比如说测试意见内容文本

27:55.440 --> 27:58.440
好的,点击提交反馈

27:58.440 --> 27:59.440
ok,那这个时候

27:59.440 --> 28:01.440
反馈提交成功了之后

28:01.440 --> 28:03.440
其实这张图片是上传成功了

28:03.440 --> 28:04.440
你说上传成功之后

28:04.440 --> 28:06.440
你在哪个里面看

28:06.440 --> 28:07.440
我们最后

28:07.440 --> 28:08.440
做完上传之后

28:08.440 --> 28:09.440
统一的是在

28:09.440 --> 28:11.440
我们的云数据库里面

28:11.440 --> 28:13.440
来进行查看的

28:13.440 --> 28:14.440
这里面可以给大家

28:14.440 --> 28:16.440
来先提前看一下

28:16.440 --> 28:17.440
好,把这个验证码

28:17.440 --> 28:19.440
添写成功之后

28:19.440 --> 28:20.440
我们到里面

28:20.440 --> 28:22.440
进入到我们的服务空间

28:22.440 --> 28:23.440
这个我们马上就要学习

28:23.440 --> 28:24.440
同学们也别着急

28:24.440 --> 28:26.440
然后云存储里面

28:26.440 --> 28:27.440
会有我们刚才

28:27.440 --> 28:29.440
上传的这个信息

28:29.440 --> 28:30.440
ok,我们打开

28:30.440 --> 28:31.440
是不是这个

28:31.440 --> 28:32.440
就是我们刚才的

28:32.440 --> 28:33.440
上传的地址

28:33.440 --> 28:34.440
对吧,我们把它

28:34.440 --> 28:35.440
给做一个复制

28:35.440 --> 28:36.440
然后我们从这个里面

28:36.440 --> 28:38.440
来,预览的地址

28:38.440 --> 28:39.440
是不是这个里面就有了

28:39.440 --> 28:40.440
对吧

28:40.440 --> 28:41.440
那这个呢

28:41.440 --> 28:42.440
就是我们一个

28:42.440 --> 28:43.440
在最后案例里面

28:43.440 --> 28:45.440
实现上传的一个部分

28:45.440 --> 28:46.440
包括我们从这个里面

28:46.440 --> 28:47.440
因为我们地界课

28:47.440 --> 28:48.440
展示的时候

28:48.440 --> 28:49.440
也跟同学们说了

28:49.440 --> 28:50.440
这块是不是

28:50.440 --> 28:51.440
也可以进行一个图片替换

28:51.440 --> 28:53.440
也是没有问题的

28:53.440 --> 28:54.440
好的,那这个呢

28:54.440 --> 28:57.440
就是我们图片上传的这一块

28:57.440 --> 28:58.440
然后呢

28:58.440 --> 28:59.440
它结合了我们的这个

28:59.440 --> 29:01.440
由你一点upload的fail

29:01.440 --> 29:03.440
来实现一个完整的

29:03.440 --> 29:04.440
获取图片

29:04.440 --> 29:05.440
进行图片上传的

29:05.440 --> 29:07.440
这么一个过程

29:07.440 --> 29:08.440
咱们再来说一下

29:08.440 --> 29:09.440
这个downloadfail

29:09.440 --> 29:10.440
downloadfail

29:10.440 --> 29:11.440
我们使用的时候

29:11.440 --> 29:12.440
不是特别多

29:12.440 --> 29:13.440
如果说我们用到之后

29:13.440 --> 29:14.440
再给同学们来

29:14.440 --> 29:16.440
做一个详细的讲解就ok

29:16.440 --> 29:17.440
那接下来呢

29:17.440 --> 29:18.440
我们再继续说完

29:18.440 --> 29:19.440
这个上传

29:19.440 --> 29:20.440
包括图片处理这一块

29:20.440 --> 29:21.440
我们再来说一下

29:21.440 --> 29:23.440
这个数据缓存这一块

29:23.440 --> 29:24.440
其实呢

29:24.440 --> 29:25.440
我们前端

29:25.440 --> 29:27.440
不管是在这个web开发

29:27.440 --> 29:29.440
还是在小程序开发

29:29.440 --> 29:30.440
或者是我们的

29:30.440 --> 29:31.440
app开发里面

29:31.440 --> 29:32.440
都会进行一些

29:32.440 --> 29:34.440
本地数据的这个存储

29:34.440 --> 29:35.440
那我们

29:35.440 --> 29:36.440
之前在web里面

29:36.440 --> 29:38.440
通过session storage

29:38.440 --> 29:40.440
或者是我们的local storage

29:40.440 --> 29:41.440
也就是atml

29:41.440 --> 29:43.440
提供给我们的web storage

29:43.440 --> 29:44.440
进行数据损处

29:44.440 --> 29:45.440
其实在这个unip里面

29:45.440 --> 29:46.440
它也提供了

29:46.440 --> 29:47.440
它提供的叫什么呢

29:47.440 --> 29:48.440
叫get storage

29:48.440 --> 29:49.440
和set storage

29:49.440 --> 29:50.440
并且呢

29:50.440 --> 29:51.440
它有同步获取的

29:51.440 --> 29:53.440
还有这个一步处理的

29:53.440 --> 29:55.440
一步处理的是get storage

29:55.440 --> 29:57.440
同步的是get storage sync

29:57.440 --> 29:58.440
那我们就可以

29:58.440 --> 29:59.440
来试验一下

29:59.440 --> 30:00.440
这个怎么来做

30:00.440 --> 30:02.440
我们继续往下

30:02.440 --> 30:04.440
再写一个按钮button

30:04.440 --> 30:05.440
然后呢

30:05.440 --> 30:07.440
我们这个设置

30:07.440 --> 30:08.440
什么呢

30:08.440 --> 30:11.440
设置我们本地存储数据

30:11.440 --> 30:12.440
ok

30:13.440 --> 30:14.440
好

30:14.440 --> 30:16.440
这里面设置本地存储数据

30:16.440 --> 30:17.440
那我在data里面

30:17.440 --> 30:18.440
写一个值

30:18.440 --> 30:20.440
让它给存进去

30:20.440 --> 30:22.440
returnmsg

30:22.440 --> 30:23.440
我这里面

30:23.440 --> 30:26.440
就是一个hello world

30:26.440 --> 30:27.440
ok

30:27.440 --> 30:28.440
那这个里面就是它了

30:28.440 --> 30:29.440
它之后怎么办呢

30:29.440 --> 30:31.440
或者是我写一个什么

30:31.440 --> 30:32.440
写一个对象

30:32.440 --> 30:33.440
因为我们存一个

30:33.440 --> 30:34.440
基本理想的值

30:34.440 --> 30:35.440
这种情况不多

30:35.440 --> 30:36.440
那我们就写一个

30:36.440 --> 30:37.440
user info

30:37.440 --> 30:39.440
这里面有一个name

30:39.440 --> 30:40.440
l

30:40.440 --> 30:41.440
然后呢

30:41.440 --> 30:42.440
我再写一个

30:42.440 --> 30:43.440
a值

30:43.440 --> 30:44.440
20

30:44.440 --> 30:45.440
把这个数据呢

30:45.440 --> 30:47.440
给存储到我们本地

30:47.440 --> 30:48.440
就ok

30:48.440 --> 30:49.440
那我们这里面写一个

30:49.440 --> 30:50.440
按钮 add click

30:50.440 --> 30:52.440
save storage

30:52.440 --> 30:53.440
好

30:53.440 --> 30:54.440
那我们接下来呢

30:54.440 --> 30:55.440
对这个方法

30:55.440 --> 30:57.440
进行一个定义

30:57.440 --> 31:00.440
也就是这个save storage

31:00.440 --> 31:01.440
save storage

31:01.440 --> 31:02.440
在哪个里面

31:02.440 --> 31:04.440
我们在minus2的里面

31:04.440 --> 31:05.440
来写

31:05.440 --> 31:06.440
然后呢这里面注释一下

31:06.440 --> 31:08.440
这个是我们

31:08.440 --> 31:10.440
设置本地存储

31:10.440 --> 31:12.440
save storage

31:12.440 --> 31:13.440
那我们就调用

31:13.440 --> 31:14.440
它的yony

31:14.440 --> 31:16.440
方法

31:16.440 --> 31:20.440
yony.save storage

31:20.440 --> 31:21.440
save storage

31:21.440 --> 31:22.440
刚才他们说了

31:22.440 --> 31:23.440
有异部的有同步的

31:23.440 --> 31:25.440
然后他这个异部和同步的

31:25.440 --> 31:27.440
我们存储的这个时候

31:27.440 --> 31:29.440
我们传递的这个参数不一样

31:29.440 --> 31:31.440
比如说我们save storage

31:31.440 --> 31:32.440
save storage 里面

31:32.440 --> 31:33.440
是对象的形式

31:33.440 --> 31:34.440
那首先呢

31:34.440 --> 31:35.440
是这个k

31:35.440 --> 31:36.440
我们需要存储的

31:36.440 --> 31:39.440
那我们就叫 user info

31:39.440 --> 31:40.440
然后呢这里面

31:40.440 --> 31:41.440
还会有一个data

31:41.440 --> 31:42.440
data呢

31:42.440 --> 31:44.440
就是我们本次存储的

31:44.440 --> 31:45.440
这一次点

31:45.440 --> 31:47.440
user info

31:47.440 --> 31:48.440
就ok了

31:48.440 --> 31:49.440
我们先来试一下

31:49.440 --> 31:50.440
当成功之后

31:50.440 --> 31:52.440
其实还有一个save size

31:52.440 --> 31:53.440
也就是说

31:53.440 --> 31:55.440
存储成功的响应值

31:55.440 --> 31:56.440
我们在这里面

31:56.440 --> 31:59.440
可以进行一个打印啊

31:59.440 --> 32:00.440
ok 咱们来看一眼

32:00.440 --> 32:01.440
看一眼

32:01.440 --> 32:02.440
到unit app里面

32:02.440 --> 32:04.440
我们设置本地存储

32:04.440 --> 32:05.440
好的

32:05.440 --> 32:07.440
arrow set storage ok

32:07.440 --> 32:09.440
这个里面有一个arrow messd

32:09.440 --> 32:10.440
这里面提示

32:10.440 --> 32:11.440
我们存储成功了

32:11.440 --> 32:12.440
存储成功之后

32:12.440 --> 32:13.440
我们看一下

32:13.440 --> 32:14.440
这里面有user info

32:14.440 --> 32:16.440
data name ila h20

32:16.440 --> 32:17.440
对不对

32:17.440 --> 32:18.440
也就是说

32:18.440 --> 32:19.440
现在啊

32:19.440 --> 32:20.440
我们没有通过这种

32:20.440 --> 32:22.440
json.sdring file的形式

32:22.440 --> 32:23.440
给他存储一个字幕券

32:23.440 --> 32:24.440
但是他默认

32:24.440 --> 32:25.440
在这个里面啊

32:25.440 --> 32:26.440
就给我们存储进去了

32:26.440 --> 32:27.440
然后呢

32:27.440 --> 32:28.440
只是一种字幕券的形式

32:28.440 --> 32:29.440
其实也可以

32:29.440 --> 32:30.440
用对不对

32:30.440 --> 32:32.440
然后我们来获取一下他啊

32:32.440 --> 32:34.440
获取一下他怎么来获取

32:34.440 --> 32:37.440
那就调用一个unit.get storage

32:37.440 --> 32:38.440
同样啊

32:38.440 --> 32:41.440
unit.get storage

32:41.440 --> 32:42.440
同步的啊

32:42.440 --> 32:43.440
如果是一步的

32:43.440 --> 32:44.440
如果说你这块

32:44.440 --> 32:45.440
是一步存储的话

32:45.440 --> 32:46.440
那你这块

32:46.440 --> 32:47.440
也是应该是

32:47.440 --> 32:49.440
我们进行一步获取啊

32:49.440 --> 32:50.440
get storage

32:50.440 --> 32:51.440
那这个里面

32:51.440 --> 32:53.440
我们就写一个k就可以了

32:53.440 --> 32:55.440
我们使用一个object的类型

32:55.440 --> 32:56.440
k

32:56.440 --> 32:57.440
那k呢

32:57.440 --> 32:58.440
我们这个里面

32:59.440 --> 33:01.440
这里面有一个获取成功

33:01.440 --> 33:02.440
sug size

33:02.440 --> 33:03.440
打印一下

33:03.440 --> 33:04.440
res

33:04.440 --> 33:06.440
res就应该是我们

33:06.440 --> 33:07.440
拿到的这个

33:07.440 --> 33:09.440
当时存储的这个值啊

33:09.440 --> 33:10.440
如果说我们拿到

33:10.440 --> 33:11.440
这里面就证明他成功了

33:11.440 --> 33:12.440
对吧

33:12.440 --> 33:13.440
我们来做一下

33:13.440 --> 33:14.440
设置本地存储

33:14.440 --> 33:15.440
ok啊

33:15.440 --> 33:16.440
这个里面

33:16.440 --> 33:17.440
又做了一个

33:17.440 --> 33:18.440
设置本地存储

33:18.440 --> 33:20.440
先是去存了一下

33:20.440 --> 33:21.440
存了一下之后

33:21.440 --> 33:22.440
我们又获取他

33:22.440 --> 33:23.440
获取了之后

33:23.440 --> 33:24.440
这里面就拿到了一个data

33:24.440 --> 33:26.440
data是name

33:26.440 --> 33:27.440
h20

33:27.440 --> 33:28.440
然后我们成功了

33:28.440 --> 33:29.440
对吧

33:29.440 --> 33:30.440
成功之后

33:30.440 --> 33:31.440
这是这一块

33:31.440 --> 33:32.440
然后呢

33:32.440 --> 33:33.440
我们再来说一下

33:33.440 --> 33:35.440
同步的跟他有什么区别啊

33:35.440 --> 33:36.440
我们来试一下

33:36.440 --> 33:37.440
同步的这个啊

33:37.440 --> 33:38.440
比如说这个

33:38.440 --> 33:40.440
unit.set storage

33:40.440 --> 33:41.440
然后呢

33:41.440 --> 33:43.440
这里面选这个sync

33:43.440 --> 33:44.440
sync这个啊

33:44.440 --> 33:46.440
不识使用这种对象来传辞了

33:46.440 --> 33:47.440
每一个形参

33:47.440 --> 33:48.440
都是一个独立的

33:48.440 --> 33:49.440
那k呢

33:49.440 --> 33:50.440
我们就写一个

33:50.440 --> 33:52.440
userinfo

33:52.440 --> 33:53.440
ok

33:53.440 --> 33:54.440
然后呢

33:54.440 --> 33:55.440
我们在这个里面

33:56.440 --> 33:57.440
对吧

33:57.440 --> 33:58.440
我们再来一个

33:58.440 --> 33:59.440
比如说这个

33:59.440 --> 34:00.440
userinfo

34:00.440 --> 34:01.440
重新的给他写一个

34:01.440 --> 34:03.440
我们这里面写一个

34:03.440 --> 34:04.440
obg

34:04.440 --> 34:05.440
好吧

34:05.440 --> 34:07.440
只是接在这里面是

34:08.440 --> 34:09.440
name

34:09.440 --> 34:10.440
我们这里面

34:10.440 --> 34:11.440
job

34:11.440 --> 34:12.440
然后呢

34:12.440 --> 34:13.440
a置

34:13.440 --> 34:14.440
我们再给他一个

34:14.440 --> 34:15.440
60

34:16.440 --> 34:17.440
随便写大一点

34:17.440 --> 34:18.440
然后给他做一个区分

34:18.440 --> 34:19.440
此时呢

34:19.440 --> 34:20.440
我们这里面存的时候

34:20.440 --> 34:21.440
就是

34:21.440 --> 34:22.440
这一次点obg

34:22.440 --> 34:23.440
就可以了

34:23.440 --> 34:24.440
好

34:24.440 --> 34:25.440
我们再试一下

34:25.440 --> 34:26.440
使用这种

34:26.440 --> 34:27.440
unit.set storage

34:27.440 --> 34:28.440
sync

34:28.440 --> 34:29.440
它的这个

34:29.440 --> 34:30.440
主要就是

34:30.440 --> 34:31.440
传参的不一样啊

34:31.440 --> 34:33.440
我们刚才传参是什么呢

34:33.440 --> 34:35.440
是这个unit.set storage

34:35.440 --> 34:36.440
只传一个参数

34:36.440 --> 34:37.440
参数是一个对象

34:37.440 --> 34:38.440
那这个set storage

34:38.440 --> 34:39.440
sync

34:39.440 --> 34:40.440
也就是说

34:40.440 --> 34:41.440
同步的形式指的是啥呢

34:41.440 --> 34:42.440
我传多个参数啊

34:42.440 --> 34:44.440
k value的这种形式

34:44.440 --> 34:45.440
进行传递就ok了

34:45.440 --> 34:46.440
我们来试一下

34:46.440 --> 34:48.440
设置本地存储

34:48.440 --> 34:49.440
好的

34:49.440 --> 34:50.440
完成之后呢

34:50.440 --> 34:51.440
这里面应该是多了

34:51.440 --> 34:52.440
一个userinfo

34:52.440 --> 34:54.440
ObjectDateName

34:54.440 --> 34:55.440
Age

34:55.440 --> 34:56.440
就有了

34:56.440 --> 34:57.440
它的获取值呢

34:57.440 --> 34:58.440
其实也非常简单

34:58.440 --> 34:59.440
获取值

34:59.440 --> 35:00.440
我们就使用这种什么

35:00.440 --> 35:01.440
Counts的user

35:01.440 --> 35:02.440
等于一个

35:02.440 --> 35:05.440
unit.getStorage

35:05.440 --> 35:06.440
然后呢

35:06.440 --> 35:07.440
这里面有这个

35:07.440 --> 35:08.440
getStorage

35:08.440 --> 35:09.440
sync

35:09.440 --> 35:10.440
我就把这个

35:10.440 --> 35:11.440
k传进去

35:11.440 --> 35:12.440
就可以了

35:12.440 --> 35:13.440
userinfo

35:13.440 --> 35:14.440
这时候呢

35:14.440 --> 35:15.440
我就能打印出来

35:15.440 --> 35:16.440
这个user

35:16.440 --> 35:17.440
user此时

35:17.440 --> 35:18.440
就是我们刚才

35:18.440 --> 35:19.440
传递存储

35:19.440 --> 35:20.440
进去的那个值

35:20.440 --> 35:21.440
我们来看一下

35:21.440 --> 35:22.440
Name

35:22.440 --> 35:23.440
Align

35:23.440 --> 35:24.440
也可以获取到了

35:24.440 --> 35:25.440
然后我们再来测试一下

35:25.440 --> 35:26.440
小程序的一块

35:26.440 --> 35:27.440
小程序

35:27.440 --> 35:28.440
首先我们要

35:28.440 --> 35:29.440
设置本地存储数据

35:29.440 --> 35:30.440
OK

35:30.440 --> 35:31.440
设置完成了

35:31.440 --> 35:32.440
这个里面

35:32.440 --> 35:33.440
没有任何值

35:33.440 --> 35:34.440
咱们直接的再来看一眼

35:34.440 --> 35:35.440
这个问题

35:36.440 --> 35:38.440
saleStorage

35:38.440 --> 35:39.440
咱们这个里面

35:39.440 --> 35:40.440
是设置了

35:40.440 --> 35:41.440
设置之后再进行获取

35:41.440 --> 35:42.440
那我这里面

35:42.440 --> 35:43.440
先把它给注掉

35:43.440 --> 35:44.440
注掉之后

35:44.440 --> 35:45.440
我们再重新的

35:45.440 --> 35:46.440
再来试一下

35:46.440 --> 35:47.440
此时要保证

35:47.440 --> 35:48.440
你这个Storage里面

35:48.440 --> 35:49.440
是有值的

35:49.440 --> 35:50.440
userinfo

35:50.440 --> 35:51.440
打印

35:51.440 --> 35:52.440
设置本地存储

35:52.440 --> 35:53.440
72行

35:53.440 --> 35:54.440
没有值

35:54.440 --> 35:55.440
我们来看一眼

35:55.440 --> 35:56.440
72行

35:56.440 --> 35:58.440
you need a get

35:58.440 --> 35:59.440
Storage

35:59.440 --> 36:00.440
userinfo

36:00.440 --> 36:01.440
然后呢

36:01.440 --> 36:03.440
我们这个小程序里面

36:03.440 --> 36:04.440
存储的是

36:04.440 --> 36:05.440
Storage

36:05.440 --> 36:07.440
userinfo1

36:07.440 --> 36:08.440
OK

36:08.440 --> 36:09.440
我再回去

36:09.440 --> 36:10.440
获取到的是

36:10.440 --> 36:11.440
userinfo1

36:11.440 --> 36:12.440
那所以说

36:12.440 --> 36:13.440
那我们刚才存的是

36:13.440 --> 36:14.440
userinfo1

36:14.440 --> 36:15.440
获取的是

36:15.440 --> 36:16.440
userinfo

36:16.440 --> 36:17.440
对吧

36:17.440 --> 36:18.440
这个不对

36:18.440 --> 36:19.440
我这里面

36:19.440 --> 36:20.440
userinfo1

36:20.440 --> 36:21.440
那我们再来试一下

36:21.440 --> 36:22.440
看能不能有值

36:22.440 --> 36:24.440
可以到console这一块

36:24.440 --> 36:26.440
点击设置本地存储

36:26.440 --> 36:27.440
你会发现

36:27.440 --> 36:28.440
这值是不是也获取到了

36:28.440 --> 36:29.440
也就是说

36:29.440 --> 36:30.440
you need这种

36:30.440 --> 36:31.440
setStorage

36:31.440 --> 36:32.440
getStorage

36:32.440 --> 36:33.440
其实是都可以实现的

36:33.440 --> 36:34.440
那这个呢

36:34.440 --> 36:35.440
我们要清楚一下

36:35.440 --> 36:36.440
好的

36:36.440 --> 36:37.440
那这个就是

36:37.440 --> 36:38.440
数据的一个存储

36:38.440 --> 36:39.440
这一块

36:39.440 --> 36:40.440
包括我们这个

36:40.440 --> 36:41.440
removeStorage

36:41.440 --> 36:42.440
这一块

36:42.440 --> 36:43.440
就是删除吧

36:43.440 --> 36:44.440
对不对

36:44.440 --> 36:45.440
非常简单了

36:45.440 --> 36:46.440
好的那接下来

36:46.440 --> 36:47.440
咱们再说一下

36:47.440 --> 36:48.440
交互反馈这一块

36:48.440 --> 36:49.440
我们只是两个

36:49.440 --> 36:50.440
这个是啥呢

36:50.440 --> 36:51.440
就是

36:51.440 --> 36:52.440
显示一个弹窗那一块

36:52.440 --> 36:53.440
其实它呢

36:53.440 --> 36:54.440
就比较简单了

36:54.440 --> 36:55.440
我们来做一下

36:55.440 --> 36:56.440
这里面呢

36:56.440 --> 36:59.440
有一个button type

36:59.440 --> 37:00.440
然后呢

37:00.440 --> 37:01.440
我们这里面

37:01.440 --> 37:02.440
写一下

37:02.440 --> 37:03.440
显示弹窗

37:03.440 --> 37:04.440
ok

37:04.440 --> 37:05.440
在这个里面

37:05.440 --> 37:06.440
我们添一个

37:06.440 --> 37:07.440
atclick

37:10.440 --> 37:11.440
so

37:12.440 --> 37:13.440
dialogue

37:13.440 --> 37:14.440
对吧

37:14.440 --> 37:15.440
显示一个对话框

37:15.440 --> 37:16.440
然后呢

37:16.440 --> 37:17.440
把这个方法

37:17.440 --> 37:18.440
给定一下

37:18.440 --> 37:19.440
在这个里面

37:19.440 --> 37:20.440
找到save storage

37:20.440 --> 37:22.440
下面买色的

37:22.440 --> 37:23.440
这个里面

37:23.440 --> 37:24.440
so

37:24.440 --> 37:25.440
dialogue

37:25.440 --> 37:27.440
然后调用一个

37:27.440 --> 37:28.440
you need

37:28.440 --> 37:29.440
点

37:29.440 --> 37:30.440
so

37:30.440 --> 37:31.440
dialogue

37:31.440 --> 37:32.440
so loading

37:32.440 --> 37:33.440
或者是so toast

37:33.440 --> 37:34.440
对吧

37:34.440 --> 37:35.440
在这个里面

37:35.440 --> 37:36.440
是so toast

37:36.440 --> 37:37.440
然后so toast

37:37.440 --> 37:39.440
它有一些参数

37:39.440 --> 37:40.440
首先这里面

37:40.440 --> 37:41.440
肯定是有一个title

37:41.440 --> 37:42.440
然后呢

37:42.440 --> 37:44.440
我们这个对话框标题

37:44.440 --> 37:45.440
写一下

37:45.440 --> 37:46.440
对话框

37:46.440 --> 37:47.440
标题

37:47.440 --> 37:48.440
ok

37:48.440 --> 37:49.440
然后呢

37:49.440 --> 37:50.440
这个里面

37:50.440 --> 37:51.440
其实还是可以加这种

37:51.440 --> 37:52.440
account

37:52.440 --> 37:53.440
account

37:53.440 --> 37:54.440
比如说

37:54.440 --> 37:55.440
加一个成功

37:55.440 --> 37:56.440
这里面

37:56.440 --> 37:57.440
有一个circuit

37:58.440 --> 37:59.440
好

37:59.440 --> 38:00.440
来咱们试一下

38:00.440 --> 38:01.440
看行不行

38:01.440 --> 38:02.440
到这个里面

38:02.440 --> 38:03.440
显示弹窗

38:03.440 --> 38:04.440
这里面

38:04.440 --> 38:05.440
对话框标题

38:05.440 --> 38:06.440
是不是就可以了

38:06.440 --> 38:07.440
其实这些

38:07.440 --> 38:08.440
都非常简单

38:08.440 --> 38:09.440
我们可以

38:09.440 --> 38:10.440
根据这个API

38:10.440 --> 38:11.440
自行的

38:11.440 --> 38:12.440
来试验一下

38:12.440 --> 38:13.440
这个呢

38:13.440 --> 38:14.440
是它的

38:14.440 --> 38:15.440
相关的这个API地址

38:15.440 --> 38:16.440
对话框这一块

38:16.440 --> 38:17.440
直接在哪个里面

38:17.440 --> 38:19.440
跟同学们说一下

38:19.440 --> 38:21.440
是在我们的这个

38:21.440 --> 38:22.440
交互反馈这一块

38:22.440 --> 38:23.440
由你一点

38:23.440 --> 38:24.440
so toast的

38:24.440 --> 38:25.440
hide toast的

38:25.440 --> 38:26.440
然后包括so loading

38:26.440 --> 38:27.440
so loading呢

38:27.440 --> 38:28.440
是显示一个什么

38:28.440 --> 38:29.440
我们直接的

38:29.440 --> 38:30.440
一个loading效果

38:30.440 --> 38:31.440
如果说

38:31.440 --> 38:32.440
你想看一个

38:32.440 --> 38:33.440
完整的这个

38:33.440 --> 38:34.440
案例的效果的话

38:34.440 --> 38:35.440
我们还可以通过

38:35.440 --> 38:36.440
由你UI里面

38:36.440 --> 38:38.440
来进行一个查看

38:38.440 --> 38:39.440
因为在那个里面

38:39.440 --> 38:40.440
是有完整的这个

38:40.440 --> 38:41.440
例子

38:41.440 --> 38:43.440
来进行这个查看

38:43.440 --> 38:44.440
到我们所有的

38:44.440 --> 38:45.440
这个演示效果

38:45.440 --> 38:46.440
这个呢

38:46.440 --> 38:47.440
就在这里

38:47.440 --> 38:48.440
不过多的给同学们

38:48.440 --> 38:49.440
做演示了

38:49.440 --> 38:50.440
下面呢

38:50.440 --> 38:51.440
我们再继续说

38:51.440 --> 38:52.440
还有最后一个

38:52.440 --> 38:54.440
就是我们路由这一块的

38:54.440 --> 38:55.440
路由这一块

38:55.440 --> 38:56.440
指的就是

38:56.440 --> 38:57.440
我们界面跳转这一块

38:57.440 --> 38:58.440
其实昨天

38:58.440 --> 38:59.440
也已经给同学们

38:59.440 --> 39:00.440
试验过了

39:00.440 --> 39:01.440
在这个里面

39:01.440 --> 39:02.440
给同学们再补充一点

39:02.440 --> 39:03.440
如何进行

39:03.440 --> 39:05.440
路由参数的这个传递

39:05.440 --> 39:06.440
这个咋来说呢

39:06.440 --> 39:07.440
我们首先

39:07.440 --> 39:09.440
如果说要实现路由

39:09.440 --> 39:10.440
昨天也说了

39:10.440 --> 39:11.440
我们必须得

39:11.440 --> 39:12.440
一个以上的界面

39:12.440 --> 39:13.440
对吧

39:13.440 --> 39:14.440
那所以说

39:14.440 --> 39:15.440
我在这个里面

39:15.440 --> 39:16.440
又新建一个界面

39:16.440 --> 39:17.440
我们这个叫

39:17.440 --> 39:18.440
other界面

39:18.440 --> 39:19.440
然后呢

39:19.440 --> 39:20.440
这里面你选一家

39:20.440 --> 39:21.440
创建铜铭木骆

39:21.440 --> 39:22.440
使用默认模板

39:22.440 --> 39:23.440
并且呢

39:23.440 --> 39:24.440
你再拍

39:24.440 --> 39:25.440
指点接塵里面

39:25.440 --> 39:27.440
进行一个文件的配置

39:27.440 --> 39:28.440
此时呢

39:28.440 --> 39:29.440
我点击创建

39:29.440 --> 39:30.440
那你先看一下

39:30.440 --> 39:31.440
配置点接塵里面

39:31.440 --> 39:32.440
是不是进去了

39:32.440 --> 39:33.440
进去之后

39:33.440 --> 39:34.440
你在other界面

39:34.440 --> 39:35.440
然后呢

39:35.440 --> 39:36.440
这里面写一个

39:36.440 --> 39:37.440
other

39:37.440 --> 39:38.440
配置

39:38.440 --> 39:39.440
OK

39:39.440 --> 39:40.440
那这就完成了

39:40.440 --> 39:41.440
完成之后

39:41.440 --> 39:42.440
然后呢

39:42.440 --> 39:43.440
咱们昨天

39:43.440 --> 39:44.440
提前给同学们

39:44.440 --> 39:45.440
看了一下

39:45.440 --> 39:46.440
使用编程的形式

39:46.440 --> 39:47.440
跳转

39:47.440 --> 39:48.440
其实它有几种方式的

39:48.440 --> 39:49.440
button

39:49.440 --> 39:50.440
然后呢

39:50.440 --> 39:51.440
我们这里面

39:51.440 --> 39:52.440
写一个

39:52.440 --> 39:53.440
at click

39:53.440 --> 39:55.440
go other

39:55.440 --> 39:56.440
配置

39:57.440 --> 39:58.440
然后这里面

39:58.440 --> 39:59.440
写一下

39:59.440 --> 40:00.440
跳转到

40:00.440 --> 40:02.440
其他界面

40:02.440 --> 40:03.440
好的

40:03.440 --> 40:04.440
把这个

40:04.440 --> 40:05.440
go other

40:05.440 --> 40:06.440
配置

40:06.440 --> 40:07.440
给它进行一下

40:07.440 --> 40:08.440
定义

40:08.440 --> 40:09.440
我们在

40:09.440 --> 40:10.440
继续的

40:10.440 --> 40:11.440
go other

40:11.440 --> 40:12.440
配置

40:12.440 --> 40:13.440
然后呢

40:13.440 --> 40:14.440
我们通过

40:14.440 --> 40:15.440
unit.

40:15.440 --> 40:16.440
这种形式

40:16.440 --> 40:17.440
navigator2

40:18.440 --> 40:19.440
通过navigator2

40:19.440 --> 40:20.440
它会增加一个

40:20.440 --> 40:21.440
历史战

40:21.440 --> 40:22.440
首先呢

40:22.440 --> 40:23.440
我们这里面

40:23.440 --> 40:24.440
有一个url

40:24.440 --> 40:25.440
url指定的是

40:25.440 --> 40:26.440
一个我们

40:26.440 --> 40:27.440
跳转的地址

40:27.440 --> 40:28.440
点点看

40:28.440 --> 40:29.440
other

40:29.440 --> 40:30.440
或者是呢

40:30.440 --> 40:31.440
我们直接使用这种

40:31.440 --> 40:32.440
pages

40:32.440 --> 40:33.440
下面的写

40:33.440 --> 40:34.440
这种绝对录像

40:34.440 --> 40:35.440
对吧

40:35.440 --> 40:36.440
那这种呢

40:36.440 --> 40:37.440
是一种情况

40:37.440 --> 40:38.440
然后我们先来看

40:38.440 --> 40:39.440
主要unit.app

40:39.440 --> 40:40.440
我们进行跳转

40:40.440 --> 40:41.440
其他界面

40:41.440 --> 40:42.440
你会发现成功了

40:42.440 --> 40:43.440
成功之后呢

40:43.440 --> 40:44.440
有时候呢

40:44.440 --> 40:45.440
我们去一个

40:45.440 --> 40:46.440
指定界面的时候

40:46.440 --> 40:48.440
可能会传递一些参数

40:48.440 --> 40:50.440
那这个参数怎么来做啊

40:50.440 --> 40:51.440
其实你就可以在后面写

40:51.440 --> 40:52.440
这里面我写一个什么

40:52.440 --> 40:53.440
name

40:54.440 --> 40:56.440
name等于一个我们的

40:56.440 --> 40:57.440
job

40:57.440 --> 40:58.440
然后呢

40:58.440 --> 40:59.440
这里面写并且

40:59.440 --> 41:01.440
a值等于一个20

41:01.440 --> 41:02.440
你就可以通过这种形式

41:02.440 --> 41:03.440
来进行参数传递

41:03.440 --> 41:04.440
首先呢

41:04.440 --> 41:05.440
我们先保证

41:05.440 --> 41:07.440
它的这个跳转成功啊

41:07.440 --> 41:08.440
我这里面跳转到其他界面

41:08.440 --> 41:09.440
你会发现

41:09.440 --> 41:10.440
其他界面过去了

41:10.440 --> 41:11.440
过去之后呢

41:11.440 --> 41:12.440
你这里面

41:12.440 --> 41:13.440
name等于

41:13.440 --> 41:14.440
a值等于20

41:14.440 --> 41:15.440
然后呢

41:15.440 --> 41:16.440
也是可以在地址

41:16.440 --> 41:17.440
而显示的

41:17.440 --> 41:18.440
那接下来呢

41:18.440 --> 41:19.440
其实就是我们一个

41:19.440 --> 41:20.440
获取的过程

41:20.440 --> 41:21.440
是不是就OK了

41:21.440 --> 41:22.440
对不对

41:22.440 --> 41:23.440
那获取怎么来获取呢

41:23.440 --> 41:24.440
其实

41:24.440 --> 41:25.440
我们这个里面

41:25.440 --> 41:26.440
就得涉及到

41:26.440 --> 41:27.440
使用生命周期

41:27.440 --> 41:28.440
函数

41:28.440 --> 41:29.440
来进行相关的

41:29.440 --> 41:30.440
这个内容的获取了

41:30.440 --> 41:31.440
好的

41:31.440 --> 41:32.440
接下来呢

41:32.440 --> 41:33.440
我们就看一下

41:33.440 --> 41:34.440
如何通过生命周期

41:34.440 --> 41:36.440
进行参数的一个获取

41:36.440 --> 41:37.440
之中呢

41:37.440 --> 41:38.440
它的生命周期啊

41:38.440 --> 41:39.440
跟小城区非常类似

41:39.440 --> 41:40.440
也是有三种

41:40.440 --> 41:41.440
首先呢

41:41.440 --> 41:42.440
就是全局的

41:42.440 --> 41:43.440
应用生命周期

41:43.440 --> 41:44.440
以及我们

41:44.440 --> 41:45.440
每个页面的

41:45.440 --> 41:46.440
一个生命周期

41:46.440 --> 41:47.440
最后呢

41:47.440 --> 41:48.440
就是组件里面的

41:48.440 --> 41:49.440
一个生命周期

41:49.440 --> 41:50.440
那应用的生命周期呢

41:50.440 --> 41:51.440
它跟小城区

41:51.440 --> 41:52.440
是完全一致的

41:52.440 --> 41:53.440
有online 尺

41:53.440 --> 41:54.440
on show 以及on hide

41:54.440 --> 41:55.440
这个是哪一个

41:55.440 --> 41:56.440
就是我们之前啊

41:56.440 --> 41:57.440
看到的

41:57.440 --> 41:59.440
app.review 里面的这几个

41:59.440 --> 42:00.440
online 尺

42:00.440 --> 42:02.440
on show 以及on hide

42:02.440 --> 42:04.440
分别代表着

42:04.440 --> 42:05.440
我们实力

42:05.440 --> 42:06.440
创建完成

42:06.440 --> 42:07.440
也就是说这个app

42:07.440 --> 42:08.440
只执行一次

42:08.440 --> 42:10.440
包括on show

42:10.440 --> 42:11.440
我们界面显示出来

42:11.440 --> 42:12.440
或者是呢

42:12.440 --> 42:13.440
我们从后台切前台

42:13.440 --> 42:15.440
on hide代表着

42:15.440 --> 42:17.440
从前台切到后台的这几个啊

42:17.440 --> 42:18.440
然后呢

42:18.440 --> 42:19.440
还有是什么呢

42:19.440 --> 42:20.440
页面的生命周期

42:20.440 --> 42:21.440
我们想进行

42:21.440 --> 42:22.440
参数的获取呢

42:22.440 --> 42:24.440
就是通过页面的on load

42:24.440 --> 42:25.440
也就是说

42:25.440 --> 42:26.440
页面加载的

42:26.440 --> 42:27.440
这么一个生命周期

42:27.440 --> 42:28.440
函数

42:28.440 --> 42:29.440
我们可以在这个里面

42:29.440 --> 42:30.440
进行一个参数的获取

42:30.440 --> 42:31.440
同时呢

42:31.440 --> 42:32.440
它还有自己页面的

42:32.440 --> 42:33.440
on show on Friday

42:33.440 --> 42:34.440
以及on hide

42:34.440 --> 42:35.440
组件的生命周期呢

42:35.440 --> 42:37.440
它就跟vio非常相似了

42:37.440 --> 42:38.440
也就是说在vio里面

42:38.440 --> 42:40.440
使用的before created

42:40.440 --> 42:41.440
created

42:41.440 --> 42:42.440
包括before mounted

42:42.440 --> 42:44.440
这些我们都可以使用

42:44.440 --> 42:45.440
那我们现在就来

42:45.440 --> 42:47.440
进行一下参数的获取

42:47.440 --> 42:48.440
首先咱们知道

42:48.440 --> 42:49.440
是从index界面

42:49.440 --> 42:50.440
传递了一个参数

42:50.440 --> 42:51.440
到other界面

42:51.440 --> 42:52.440
所以说呢

42:52.440 --> 42:53.440
我在这个里面

42:53.440 --> 42:55.440
可以在other界面下面

42:55.440 --> 42:57.440
来进行一下定义

42:57.440 --> 42:58.440
那定义一个什么呢

42:58.440 --> 42:59.440
on load的

42:59.440 --> 43:00.440
一个生命周期函数

43:00.440 --> 43:01.440
在这个里面呢

43:01.440 --> 43:02.440
它会有一个

43:02.440 --> 43:03.440
默认的行参

43:03.440 --> 43:04.440
parmerize

43:04.440 --> 43:05.440
我这个里面呢

43:05.440 --> 43:07.440
进行一个打印parmerize

43:07.440 --> 43:08.440
那此时呢

43:08.440 --> 43:09.440
我看一眼

43:09.440 --> 43:10.440
它这个值啊

43:10.440 --> 43:11.440
ok

43:11.440 --> 43:12.440
这个里面有一个错误

43:12.440 --> 43:13.440
错误应该是

43:13.440 --> 43:15.440
我们没有加逗号

43:15.440 --> 43:16.440
好了

43:16.440 --> 43:17.440
我这里面吧

43:17.440 --> 43:18.440
逗号不全

43:18.440 --> 43:19.440
然后到other界面

43:19.440 --> 43:20.440
我们重新来一遍

43:20.440 --> 43:21.440
从首页面

43:21.440 --> 43:22.440
跳转到我们的

43:22.440 --> 43:23.440
其他界面

43:23.440 --> 43:24.440
其他界面里面

43:24.440 --> 43:25.440
传了一个参数

43:25.440 --> 43:26.440
name job age 20

43:26.440 --> 43:27.440
这个是可以的

43:27.440 --> 43:28.440
对吧

43:28.440 --> 43:29.440
我们再来看一下

43:29.440 --> 43:30.440
小程序的表现

43:30.440 --> 43:31.440
小程序表现这一块

43:31.440 --> 43:32.440
我们也是

43:32.440 --> 43:33.440
跳转到其他界面

43:33.440 --> 43:34.440
你会发现

43:34.440 --> 43:35.440
同样也是可以

43:35.440 --> 43:36.440
正常进行一个

43:36.440 --> 43:37.440
参数获取的

43:37.440 --> 43:38.440
这个呢

43:38.440 --> 43:39.440
就是他的一个生命周期的

43:39.440 --> 43:40.440
相关内容

43:40.440 --> 43:41.440
而且呢

43:41.440 --> 43:42.440
我们啊

43:42.440 --> 43:43.440
想要完全了解

43:43.440 --> 43:44.440
他这个生命周期的话

43:44.440 --> 43:45.440
我们也可以看一下

43:45.440 --> 43:46.440
他的API相关的

43:46.440 --> 43:47.440
这个文档

43:47.440 --> 43:48.440
里面呢

43:48.440 --> 43:49.440
有每一种生命周期的

43:49.440 --> 43:51.440
一个使用的介绍

43:51.440 --> 43:52.440
比如说这种

43:52.440 --> 43:53.440
alans初始化完成

43:53.440 --> 43:54.440
然后呢

43:54.440 --> 43:55.440
全局只出发一次

43:55.440 --> 43:56.440
然后呢

43:56.440 --> 43:57.440
每一种啊

43:57.440 --> 43:58.440
我希望同学们

43:58.440 --> 43:59.440
下去之后啊

43:59.440 --> 44:00.440
都进行一个

44:00.440 --> 44:01.440
详细的查看

44:01.440 --> 44:02.440
就不做过多介绍

44:02.440 --> 44:03.440
如果说

44:03.440 --> 44:04.440
按例里面有用到的话

44:04.440 --> 44:05.440
我们到那个时候呢

44:05.440 --> 44:06.440
再进行一个

44:06.440 --> 44:07.440
详细的讲解

44:07.440 --> 44:08.440
好的

44:08.440 --> 44:09.440
这就是生命周期

44:09.440 --> 44:10.440
这一块的内容

44:10.440 --> 44:11.440
然后呢

44:11.440 --> 44:12.440
接下来

44:12.440 --> 44:13.440
我们再说一个

44:13.440 --> 44:14.440
就是aunip

44:14.440 --> 44:15.440
比较有特色的内容

44:15.440 --> 44:16.440
比如说

44:16.440 --> 44:17.440
首先

44:17.440 --> 44:18.440
第一个是什么呢

44:18.440 --> 44:19.440
在unip当中

44:19.440 --> 44:20.440
我们进行

44:20.440 --> 44:21.440
布局相关的时候

44:21.440 --> 44:22.440
然后呢

44:22.440 --> 44:23.440
注意的一个点

44:23.440 --> 44:24.440
首先

44:24.440 --> 44:25.440
如果说

44:25.440 --> 44:26.440
我们在

44:26.440 --> 44:27.440
原来的web

44:27.440 --> 44:28.440
开发过程当中

44:28.440 --> 44:29.440
我们给最外层的

44:29.440 --> 44:30.440
这个容器

44:30.440 --> 44:31.440
来进行一样式的处理

44:31.440 --> 44:32.440
但是在unip当中呢

44:32.440 --> 44:33.440
我们要进行

44:33.440 --> 44:34.440
样式添加

44:34.440 --> 44:35.440
我们在这个里面

44:35.440 --> 44:36.440
就要使用page

44:36.440 --> 44:37.440
来进行

44:37.440 --> 44:38.440
样式的处理

44:38.440 --> 44:39.440
这个怎么来做啊

44:39.440 --> 44:40.440
非常简单

44:40.440 --> 44:42.440
我们以index界面为准

44:42.440 --> 44:43.440
假如说

44:43.440 --> 44:44.440
我想给全局

44:44.440 --> 44:45.440
添加一个样式内容

44:45.440 --> 44:46.440
我在这里面

44:46.440 --> 44:47.440
写一个page

44:47.440 --> 44:48.440
那我这里面

44:48.440 --> 44:50.440
就background color red

44:50.440 --> 44:51.440
ok

44:51.440 --> 44:52.440
就是全局

44:52.440 --> 44:53.440
给他一个红颜色

44:53.440 --> 44:54.440
那咱们到这个里面

44:54.440 --> 44:55.440
来看一眼

44:55.440 --> 44:56.440
我们的这个

44:56.440 --> 44:58.440
local host的80

44:58.440 --> 44:59.440
你会发现

44:59.440 --> 45:00.440
咱们到这个里面

45:00.440 --> 45:01.440
刷新一下

45:01.440 --> 45:02.440
这个里面

45:02.440 --> 45:03.440
是不是有一个红色

45:03.440 --> 45:04.440
那这个纸的市场

45:04.440 --> 45:05.440
其实我在这个里面

45:05.440 --> 45:06.440
做了这个操作之后

45:06.440 --> 45:07.440
就等于

45:07.440 --> 45:08.440
他解析的时候

45:08.440 --> 45:09.440
在h5的表现

45:09.440 --> 45:10.440
就是可以包得

45:10.440 --> 45:12.440
添加了一个背景颜色

45:12.440 --> 45:13.440
这是这一块的问题

45:13.440 --> 45:15.440
那如果说在unip的

45:15.440 --> 45:17.440
在这个小程序里面

45:17.440 --> 45:18.440
他的表现是啥样

45:18.440 --> 45:19.440
那我们刷新一下

45:19.440 --> 45:20.440
你会发现

45:20.440 --> 45:22.440
没什么作用

45:22.440 --> 45:23.440
对吧

45:23.440 --> 45:24.440
没什么作用的原因市场

45:24.440 --> 45:25.440
我们在这个里面

45:25.440 --> 45:26.440
再查看一下

45:26.440 --> 45:27.440
Stale里面

45:27.440 --> 45:28.440
我们加了一个scope

45:28.440 --> 45:29.440
那如果说

45:29.440 --> 45:31.440
把scope给解除之后

45:31.440 --> 45:32.440
你会发现

45:32.440 --> 45:33.440
小程序里面

45:33.440 --> 45:34.440
这时候他就可以了

45:34.440 --> 45:35.440
也就是说

45:35.440 --> 45:36.440
如果你全局添加

45:36.440 --> 45:38.440
这个配置的样式的时候

45:38.440 --> 45:40.440
尽量不要加这种scope

45:40.440 --> 45:42.440
如果说你加这个之后

45:42.440 --> 45:43.440
那在小程序里面

45:43.440 --> 45:44.440
表现是没有任何意义的

45:44.440 --> 45:45.440
也就是说

45:45.440 --> 45:46.440
他无法给这个

45:46.440 --> 45:47.440
最外层的这个配置

45:47.440 --> 45:48.440
进行样式添加

45:48.440 --> 45:49.440
这就是

45:49.440 --> 45:50.440
我们在这个

45:50.440 --> 45:51.440
全局的样式添加

45:51.440 --> 45:53.440
这一块的一个注意点

45:53.440 --> 45:54.440
还有一个是什么呢

45:54.440 --> 45:55.440
就是我们的这个

45:55.440 --> 45:56.440
尺寸单位

45:56.440 --> 45:57.440
小程序

45:57.440 --> 45:58.440
它在这个

45:58.440 --> 46:00.440
我们进行编写的时候

46:00.440 --> 46:01.440
可使用的单位

46:01.440 --> 46:02.440
除了我们原来的

46:02.440 --> 46:03.440
这种px

46:03.440 --> 46:05.440
remvhvw之外

46:05.440 --> 46:07.440
还可以使用rpx

46:07.440 --> 46:08.440
和upx

46:08.440 --> 46:09.440
当然不管是你这

46:09.440 --> 46:10.440
哪几种单位

46:10.440 --> 46:11.440
到最后它解析的时候

46:11.440 --> 46:12.440
都是可以

46:12.440 --> 46:13.440
正常表现出来的

46:13.440 --> 46:14.440
只不过是这种

46:14.440 --> 46:16.440
rpx和upx

46:16.440 --> 46:17.440
它是相对的单位

46:17.440 --> 46:18.440
相对什么呢

46:18.440 --> 46:19.440
设计稿

46:19.440 --> 46:20.440
进行一个变化的

46:20.440 --> 46:21.440
这样一个单位

46:21.440 --> 46:22.440
我们可以来设置一下

46:22.440 --> 46:23.440
首先

46:23.440 --> 46:24.440
假如说我这里面

46:24.440 --> 46:25.440
有一个块

46:25.440 --> 46:26.440
我在这个other

46:26.440 --> 46:27.440
见面

46:27.440 --> 46:28.440
我们这里面

46:28.440 --> 46:29.440
定了一个盒子

46:29.440 --> 46:31.440
villupox

46:31.440 --> 46:32.440
在这个里面

46:32.440 --> 46:33.440
我们就写一个box

46:33.440 --> 46:34.440
然后

46:34.440 --> 46:35.440
我在设置单位的时候

46:35.440 --> 46:37.440
点box

46:37.440 --> 46:39.440
我给它宽度300px

46:39.440 --> 46:40.440
然后

46:41.440 --> 46:42.440
不进行转移

46:42.440 --> 46:44.440
高度是一个300px

46:44.440 --> 46:46.440
background color

46:46.440 --> 46:47.440
我给它一个红颜色

46:47.440 --> 46:48.440
OK

46:48.440 --> 46:49.440
那咱们来看一下

46:49.440 --> 46:50.440
它的表现

46:50.440 --> 46:51.440
当然我把index里面

46:51.440 --> 46:52.440
这个红颜色

46:52.440 --> 46:54.440
就先给它注释掉

46:54.440 --> 46:55.440
否则它一直

46:55.440 --> 46:56.440
有这个红颜色

46:56.440 --> 46:57.440
影响咱们

46:57.440 --> 46:58.440
咱们到这个里面

46:58.440 --> 46:59.440
来查看一下

46:59.440 --> 47:00.440
刷新一下

47:00.440 --> 47:01.440
other见面

47:01.440 --> 47:02.440
对吧

47:02.440 --> 47:03.440
那我跳转到other见面

47:03.440 --> 47:05.440
咱们是

47:05.440 --> 47:06.440
iPhone678 375

47:06.440 --> 47:07.440
那此时

47:07.440 --> 47:08.440
我们来看一眼

47:08.440 --> 47:09.440
这个整好

47:09.440 --> 47:10.440
应该是多少

47:10.440 --> 47:11.440
300像素对吧

47:11.440 --> 47:12.440
但是这种

47:12.440 --> 47:13.440
它是一个什么

47:13.440 --> 47:14.440
固定单位

47:14.440 --> 47:15.440
固定单位有啥特点

47:15.440 --> 47:16.440
不管你的屏幕怎么变

47:16.440 --> 47:17.440
我这块

47:17.440 --> 47:18.440
是一直不变的

47:18.440 --> 47:19.440
假如说你iPhone678

47:19.440 --> 47:20.440
那我还是300

47:20.440 --> 47:21.440
对不对

47:21.440 --> 47:22.440
我始终不会有

47:22.440 --> 47:23.440
任何变化

47:23.440 --> 47:24.440
那这时候

47:24.440 --> 47:25.440
想一试的布局

47:25.440 --> 47:26.440
那我们就可以使用

47:26.440 --> 47:27.440
这种rpx

47:27.440 --> 47:28.440
或者upx

47:28.440 --> 47:29.440
怎么来写

47:29.440 --> 47:30.440
我这个里面

47:30.440 --> 47:32.440
小程序莫认识什么呢

47:32.440 --> 47:33.440
它的这个

47:33.440 --> 47:34.440
设计稿的基准是750

47:34.440 --> 47:35.440
也就是说

47:35.440 --> 47:37.440
在我们的这个

47:37.440 --> 47:38.440
比如说我写一个

47:38.440 --> 47:40.440
配置到这个里面

47:40.440 --> 47:41.440
other下面

47:41.440 --> 47:42.440
我假如说

47:42.440 --> 47:44.440
这里面是300px

47:44.440 --> 47:45.440
300px

47:45.440 --> 47:46.440
那你看

47:46.440 --> 47:47.440
这个里面

47:47.440 --> 47:48.440
它有一个换算规则

47:48.440 --> 47:49.440
如果说

47:49.440 --> 47:50.440
设计图不是750

47:50.440 --> 47:51.440
可以在设置

47:51.440 --> 47:52.440
编辑器配置中

47:52.440 --> 47:53.440
进行一个

47:53.440 --> 47:54.440
比例设置

47:54.440 --> 47:55.440
那这时候

47:55.440 --> 47:56.440
我到这个编辑器设置中

47:56.440 --> 47:58.440
这里面有一个px

47:58.440 --> 47:59.440
转换rpx

47:59.440 --> 48:01.440
和upx的一个比例值

48:01.440 --> 48:02.440
我这里面写一个0.85

48:02.440 --> 48:03.440
指的是啥意思呢

48:03.440 --> 48:04.440
因为它的这个

48:04.440 --> 48:05.440
基准单位是多少

48:05.440 --> 48:06.440
是这个750

48:06.440 --> 48:07.440
所以说

48:07.440 --> 48:08.440
如果说你拿到一个

48:08.440 --> 48:09.440
设计稿是多少呢

48:09.440 --> 48:10.440
假如说我要是

48:10.440 --> 48:11.440
640的设计稿

48:11.440 --> 48:12.440
也就是说

48:12.440 --> 48:14.440
相对于iPhone 6

48:14.440 --> 48:15.440
iPhone 5

48:15.440 --> 48:16.440
和iPhone 4

48:16.440 --> 48:17.440
来进行设置的话

48:17.440 --> 48:18.440
那我就是640

48:18.440 --> 48:19.440
除以一个

48:19.440 --> 48:20.440
750的基准单位

48:20.440 --> 48:22.440
那我们的一个

48:22.440 --> 48:24.440
像素px

48:24.440 --> 48:25.440
比rpx

48:25.440 --> 48:26.440
就是多少了

48:26.440 --> 48:27.440
1比0.85

48:27.440 --> 48:29.440
这样来进行一个设置

48:29.440 --> 48:30.440
那如果说

48:30.440 --> 48:31.440
你这个设计稿

48:31.440 --> 48:32.440
是750的话

48:32.440 --> 48:33.440
而且一般

48:33.440 --> 48:34.440
我们做移动团开发

48:34.440 --> 48:35.440
都是750

48:35.440 --> 48:36.440
所以说你在这个里面

48:36.440 --> 48:37.440
设置

48:37.440 --> 48:38.440
假如说你要是750

48:38.440 --> 48:39.440
那我就可以写

48:39.440 --> 48:40.440
一个1就ok了

48:40.440 --> 48:41.440
那此时

48:41.440 --> 48:42.440
它这个转换单位

48:42.440 --> 48:44.440
你拿到一个设计稿

48:44.440 --> 48:45.440
比如说我们在这里

48:45.440 --> 48:46.440
给大家画一圖

48:46.440 --> 48:48.440
你拿到一个设计稿

48:48.440 --> 48:49.440
是750的

48:49.440 --> 48:50.440
然后放在这个里面

48:50.440 --> 48:51.440
假如说

48:51.440 --> 48:52.440
每个盒子是375

48:52.440 --> 48:53.440
ok那你直接的

48:53.440 --> 48:55.440
你在正常写在码的时候

48:55.440 --> 48:57.440
那你就可以写375像素

48:57.440 --> 48:59.440
来进行一个rpx转换

48:59.440 --> 49:00.440
那此时

49:00.440 --> 49:02.440
它就会就占设备的一半了

49:02.440 --> 49:04.440
我们可以来试一下这个事

49:04.440 --> 49:06.440
回到我们RZ界面

49:06.440 --> 49:07.440
如果说

49:07.440 --> 49:08.440
我们刚才已经设置好了

49:08.440 --> 49:09.440
刚才说的是

49:09.440 --> 49:10.440
比如说

49:10.440 --> 49:11.440
我们现在有一个

49:11.440 --> 49:12.440
375的盒子

49:12.440 --> 49:13.440
那我在这里面

49:13.440 --> 49:14.440
375px

49:14.440 --> 49:15.440
转换规则

49:15.440 --> 49:16.440
就是

49:16.440 --> 49:18.440
转换成375rpx

49:18.440 --> 49:19.440
对吧

49:19.440 --> 49:20.440
那我们再来看一下

49:20.440 --> 49:23.440
375px

49:23.440 --> 49:24.440
让它给一个转换

49:24.440 --> 49:25.440
此时

49:25.440 --> 49:28.440
它应该占我们设备的一半

49:28.440 --> 49:29.440
就对了吧

49:29.440 --> 49:30.440
然后这个单位

49:30.440 --> 49:31.440
其实它是一个响应的单位

49:31.440 --> 49:32.440
我们可以看一下

49:32.440 --> 49:33.440
它是如何进行响应的

49:33.440 --> 49:34.440
现在是iPhone678

49:34.440 --> 49:35.440
对不对

49:35.440 --> 49:36.440
iPhone678

49:36.440 --> 49:37.440
它是占了一半

49:37.440 --> 49:38.440
假如说

49:38.440 --> 49:39.440
我要是调成

49:39.440 --> 49:41.440
iPhone678 plus

49:41.440 --> 49:42.440
是414了

49:42.440 --> 49:43.440
对不对

49:43.440 --> 49:44.440
那它现在应该占多少

49:44.440 --> 49:46.440
是不是应该占207

49:46.440 --> 49:47.440
也就是说

49:47.440 --> 49:48.440
现在我们滑动的时候

49:48.440 --> 49:49.440
它整好占一半

49:49.440 --> 49:50.440
是不是整好

49:50.440 --> 49:51.440
应该是207

49:51.440 --> 49:52.440
对吧

49:52.440 --> 49:53.440
OK

49:53.440 --> 49:54.440
那这个就是

49:54.440 --> 49:55.440
我们使用一个

49:55.440 --> 49:56.440
相对单位的

49:56.440 --> 49:57.440
来进行一个开发

49:57.440 --> 49:58.440
那这样

49:58.440 --> 49:59.440
它这个单位

49:59.440 --> 50:00.440
就可以随着我们的

50:00.440 --> 50:02.440
一个设备的一个更改

50:02.440 --> 50:03.440
而且自己

50:03.440 --> 50:04.440
实现一个

50:04.440 --> 50:05.440
等比的放大

50:05.440 --> 50:06.440
缩小

50:06.440 --> 50:07.440
这个使用

50:07.440 --> 50:08.440
我们要指导一下

50:08.440 --> 50:09.440
接下来

50:09.440 --> 50:10.440
最后说一个

50:10.440 --> 50:11.440
说一个什么

50:11.440 --> 50:12.440
就是UniApp的一个

50:12.440 --> 50:13.440
条件便宜

50:13.440 --> 50:14.440
因为我们同时

50:14.440 --> 50:15.440
要开发多端

50:15.440 --> 50:16.440
比如说

50:16.440 --> 50:17.440
我们的安卓IOS

50:17.440 --> 50:18.440
以及我们的H5

50:18.440 --> 50:20.440
那在开发多端的时候

50:20.440 --> 50:21.440
我们可能

50:21.440 --> 50:22.440
有在码

50:22.440 --> 50:24.440
我们在小程序上显示

50:24.440 --> 50:25.440
但是我不需要

50:25.440 --> 50:26.440
在H5显示

50:26.440 --> 50:27.440
为什么

50:27.440 --> 50:28.440
因为H5显示的

50:28.440 --> 50:29.440
这个效果

50:29.440 --> 50:30.440
或者是

50:30.440 --> 50:31.440
它不支持这种功能

50:31.440 --> 50:32.440
那这里面

50:32.440 --> 50:33.440
就可以涉及到

50:33.440 --> 50:34.440
使用这种

50:34.440 --> 50:35.440
条件便宜的形式

50:35.440 --> 50:36.440
我在这里面

50:36.440 --> 50:37.440
给大家做一个测试

50:37.440 --> 50:38.440
同学们就明白了

50:38.440 --> 50:39.440
首先

50:39.440 --> 50:40.440
我把这个瓶

50:40.440 --> 50:42.440
缩成两部分

50:42.440 --> 50:43.440
这个里面

50:43.440 --> 50:45.440
是我们的H5

50:45.440 --> 50:46.440
这一部分

50:46.440 --> 50:47.440
调整成

50:47.440 --> 50:49.440
安iPhone678的形式

50:49.440 --> 50:50.440
然后

50:50.440 --> 50:51.440
我们再做

50:51.440 --> 50:53.440
这个小程序的一个打开

50:53.440 --> 50:54.440
小程序

50:54.440 --> 50:55.440
我也调整成一半屏幕

50:55.440 --> 50:56.440
这时候

50:56.440 --> 50:57.440
它也是一个什么

50:57.440 --> 50:58.440
iPhone678

50:58.440 --> 50:59.440
对吧

50:59.440 --> 51:00.440
但是我现在

51:00.440 --> 51:01.440
有一个需求

51:01.440 --> 51:02.440
就是什么需求

51:02.440 --> 51:03.440
有的东西

51:03.440 --> 51:04.440
它在H5上展示

51:04.440 --> 51:05.440
然后

51:05.440 --> 51:06.440
它不会在小程序上展示

51:06.440 --> 51:07.440
那这个里面

51:07.440 --> 51:08.440
就会适合

51:08.440 --> 51:09.440
我们使用一个

51:09.440 --> 51:10.440
条件便宜了

51:10.440 --> 51:11.440
这时候

51:11.440 --> 51:12.440
我来写一下

51:12.440 --> 51:13.440
回到我们的

51:13.440 --> 51:14.440
HPU的差里面

51:14.440 --> 51:15.440
我在index.vio里面

51:15.440 --> 51:16.440
在下面

51:16.440 --> 51:17.440
写一个vio

51:17.440 --> 51:18.440
然后

51:18.440 --> 51:19.440
这个vio

51:19.440 --> 51:20.440
我这里面

51:20.440 --> 51:21.440
随便写一个

51:21.440 --> 51:22.440
咱们也不加样式了

51:22.440 --> 51:23.440
直接的

51:23.440 --> 51:24.440
写一个内容

51:24.440 --> 51:27.440
只能在HTML5中

51:27.440 --> 51:29.440
进行显示

51:30.440 --> 51:31.440
进行显示

51:31.440 --> 51:32.440
OK

51:32.440 --> 51:33.440
那这写完了之后

51:33.440 --> 51:34.440
打扮呢

51:34.440 --> 51:35.440
其实这个东西

51:35.440 --> 51:36.440
你要包裹起来

51:36.440 --> 51:37.440
怎么包裹呢

51:37.440 --> 51:38.440
这里面

51:38.440 --> 51:39.440
首先

51:39.440 --> 51:40.440
这里面

51:40.440 --> 51:41.440
你一输入衣服之后

51:41.440 --> 51:42.440
它这个里面

51:42.440 --> 51:43.440
一回车

51:43.440 --> 51:44.440
每一个平台的

51:44.440 --> 51:45.440
比如说

51:45.440 --> 51:46.440
EFDFH5

51:46.440 --> 51:47.440
那这代表啥

51:47.440 --> 51:48.440
这段文字

51:48.440 --> 51:49.440
假如说

51:49.440 --> 51:50.440
我拖到这个里面

51:50.440 --> 51:52.440
它只能在H5端

51:52.440 --> 51:53.440
来进行显示

51:53.440 --> 51:54.440
那至于其他端

51:54.440 --> 51:55.440
它是没办法进行显示的

51:55.440 --> 51:56.440
那我们就来查看一下

51:56.440 --> 51:57.440
对吧

51:57.440 --> 51:58.440
到H5这一块

51:58.440 --> 51:59.440
然后我们再看到

51:59.440 --> 52:00.440
小程序这一块

52:00.440 --> 52:01.440
你会发现

52:01.440 --> 52:02.440
它这个是

52:02.440 --> 52:04.440
只能在HTML5中进行显示

52:04.440 --> 52:05.440
小程序

52:05.440 --> 52:06.440
没有进行显示

52:06.440 --> 52:07.440
对不对

52:07.440 --> 52:08.440
而且呢

52:08.440 --> 52:09.440
还可以使用这种

52:09.440 --> 52:10.440
反向操作

52:10.440 --> 52:11.440
反向操作指的是啥呢

52:11.440 --> 52:12.440
我这里面

52:12.440 --> 52:13.440
再写一个

52:13.440 --> 52:15.440
EFDF

52:15.440 --> 52:16.440
EFDF代表什么呢

52:16.440 --> 52:17.440
就是说

52:17.440 --> 52:18.440
除了某一个平台

52:18.440 --> 52:19.440
其他的都显示

52:19.440 --> 52:20.440
那我这里面

52:20.440 --> 52:21.440
除了H5

52:21.440 --> 52:23.440
那这个里面

52:23.440 --> 52:24.440
写一个标签吧

52:25.440 --> 52:26.440
这句话就是

52:26.440 --> 52:29.440
除了H5平台

52:29.440 --> 52:31.440
然后其他的平台

52:31.440 --> 52:32.440
都可以

52:32.440 --> 52:34.440
实现显示

52:34.440 --> 52:35.440
那我这里面

52:35.440 --> 52:36.440
再来看一下

52:36.440 --> 52:37.440
我们放到

52:37.440 --> 52:38.440
小程序这一块

52:38.440 --> 52:39.440
然后再找到这

52:39.440 --> 52:40.440
你会发现

52:40.440 --> 52:41.440
这个句话是

52:41.440 --> 52:42.440
除了H5平台

52:42.440 --> 52:43.440
H5确实没显示

52:43.440 --> 52:44.440
对不对

52:44.440 --> 52:45.440
然后咱们这里面

52:45.440 --> 52:46.440
其他的平台都可以显示

52:46.440 --> 52:47.440
为了印证这一点

52:47.440 --> 52:48.440
我们怎么办呢

52:48.440 --> 52:50.440
我们再开启一个

52:50.440 --> 52:51.440
LOS的一个模拟器

52:51.440 --> 52:53.440
然后咱们来看一眼

52:53.440 --> 52:54.440
到这里面

52:54.440 --> 52:56.440
我们打开LOS模拟器

52:56.440 --> 52:58.440
运行F12

52:58.440 --> 52:59.440
来看一眼

52:59.440 --> 53:00.440
是不是

53:00.440 --> 53:01.440
它在这个

53:01.440 --> 53:03.440
APP应用里面

53:03.440 --> 53:04.440
也可以进行显示

53:04.440 --> 53:05.440
条件变页

53:05.440 --> 53:07.440
是我们经常使用到的

53:07.440 --> 53:08.440
因为每一个

53:08.440 --> 53:10.440
我们的这个平台

53:10.440 --> 53:12.440
它在这种显示的方式

53:12.440 --> 53:14.440
包括一些APP的支持

53:14.440 --> 53:16.440
它都不是完全相等的

53:16.440 --> 53:17.440
也就是说

53:17.440 --> 53:18.440
有的确实是不支持

53:18.440 --> 53:19.440
怎么办

53:19.440 --> 53:20.440
我们就可以通过

53:20.440 --> 53:21.440
这种条件变页的显示

53:21.440 --> 53:22.440
你看这句话

53:22.440 --> 53:23.440
是不是除了H5平台

53:23.440 --> 53:24.440
其他平台都可以显示了

53:24.440 --> 53:25.440
我们现在

53:25.440 --> 53:26.440
实现一种功能

53:26.440 --> 53:27.440
这功能是什么呢

53:27.440 --> 53:29.440
只让某一段文字

53:29.440 --> 53:31.440
在H5和APP上

53:31.440 --> 53:32.440
进行显示

53:32.440 --> 53:33.440
那这个怎么来做呢

53:33.440 --> 53:34.440
我们就可以

53:34.440 --> 53:35.440
还是使用这种

53:35.440 --> 53:36.440
条件变页

53:36.440 --> 53:37.440
efo

53:37.440 --> 53:39.440
我们首先是APP

53:39.440 --> 53:40.440
就代表APP plus

53:40.440 --> 53:42.440
然后再加一个什么

53:42.440 --> 53:43.440
H5

53:43.440 --> 53:45.440
这里面我们使用一个中红线

53:45.440 --> 53:46.440
这句话代表着

53:46.440 --> 53:48.440
只有APP应用和H5里面

53:48.440 --> 53:50.440
进行显示的内容

53:50.440 --> 53:51.440
这里面写一个

53:51.440 --> 53:54.440
只有APP及ATM5

53:54.440 --> 53:59.440
进行显示的内容

53:59.440 --> 54:00.440
OK

54:00.440 --> 54:01.440
那咱们再来看一眼

54:01.440 --> 54:03.440
咱们找到这个里面

54:03.440 --> 54:04.440
编译完成之后

54:04.440 --> 54:06.440
你会发现这里面

54:06.440 --> 54:08.440
只有APP及ATM5

54:08.440 --> 54:09.440
进行显示的内容

54:09.440 --> 54:10.440
这句话是不是有了

54:10.440 --> 54:11.440
然后再来看

54:11.440 --> 54:12.440
我们的这个

54:12.440 --> 54:13.440
BML

54:13.440 --> 54:14.440
是不是也有了

54:14.440 --> 54:15.440
APP和ATM5里面

54:15.440 --> 54:16.440
都有了之后

54:16.440 --> 54:17.440
咱们再回来看

54:17.440 --> 54:18.440
这个小程序

54:18.440 --> 54:19.440
小程序里面

54:19.440 --> 54:21.440
是默认没有这个内容的

54:21.440 --> 54:22.440
对不对

54:22.440 --> 54:24.440
这个就是它的一个条件编译

54:24.440 --> 54:26.440
然后条件编译这一块

54:26.440 --> 54:27.440
可以看一下

54:27.440 --> 54:28.440
这里面有一个

54:28.440 --> 54:30.440
非常完整的文档的

54:30.440 --> 54:31.440
然后

54:31.440 --> 54:32.440
分别我们取直

54:32.440 --> 54:34.440
APP plus

54:34.440 --> 54:35.440
H5

54:35.440 --> 54:36.440
包括我们微信

54:36.440 --> 54:37.440
小程序

54:37.440 --> 54:38.440
这些都怎么来做

54:38.440 --> 54:39.440
包括

54:39.440 --> 54:40.440
我们条件编译

54:40.440 --> 54:41.440
支持的一些文件

54:41.440 --> 54:42.440
那比如说

54:42.440 --> 54:43.440
我们微油文件

54:43.440 --> 54:44.440
是支持的

54:44.440 --> 54:45.440
GS,CSS

54:45.440 --> 54:47.440
Page.json

54:47.440 --> 54:48.440
都可以进行

54:48.440 --> 54:49.440
这种条件编译

54:49.440 --> 54:50.440
但是

54:50.440 --> 54:51.440
我们在这个

54:51.440 --> 54:52.440
不同的文件里面

54:52.440 --> 54:53.440
使用这种

54:53.440 --> 54:54.440
条件编译的语法

54:54.440 --> 54:55.440
是不一样的

54:55.440 --> 54:56.440
那比如说

54:56.440 --> 54:57.440
在JS里面

54:57.440 --> 54:58.440
我们使用这种

54:58.440 --> 54:59.440
反显卡的形式

54:59.440 --> 55:00.440
也就是说反显卡注释

55:00.440 --> 55:01.440
我们在这个

55:01.440 --> 55:02.440
微油模板里面

55:02.440 --> 55:03.440
使用什么呢

55:03.440 --> 55:04.440
使用这种

55:04.440 --> 55:05.440
我们ATML注释这种形式

55:05.440 --> 55:06.440
其实你会发现

55:06.440 --> 55:07.440
它的这种形式

55:07.440 --> 55:08.440
是不是跟我们

55:08.440 --> 55:09.440
原来的这种注释

55:09.440 --> 55:10.440
比如说

55:10.440 --> 55:11.440
每一个文件的这种注释

55:11.440 --> 55:12.440
是不是完全一样的

55:12.440 --> 55:13.440
其实呢

55:13.440 --> 55:14.440
这个呢

55:14.440 --> 55:15.440
没有什么太多的变化

55:15.440 --> 55:16.440
只不过是你在注释里面

55:16.440 --> 55:18.440
进行DEF的一个

55:18.440 --> 55:19.440
配置设置

55:19.440 --> 55:20.440
就OK了

55:20.440 --> 55:21.440
好的

55:21.440 --> 55:22.440
那这一部分呢

55:22.440 --> 55:23.440
就是我们条件编译

55:23.440 --> 55:24.440
这一块

55:24.440 --> 55:25.440
然后呢

55:25.440 --> 55:26.440
我们在这个

55:26.440 --> 55:27.440
案例里面使用到

55:27.440 --> 55:28.440
也会给同学们

55:28.440 --> 55:29.440
做一个

55:29.440 --> 55:30.440
更加详细的这个介绍

55:30.440 --> 55:31.440
好

55:31.440 --> 55:32.440
最后一个呢

55:32.440 --> 55:33.440
就是本节课的

55:33.440 --> 55:34.440
这个最后一部分

55:34.440 --> 55:35.440
我们这个里面

55:35.440 --> 55:36.440
要进行一个

55:36.440 --> 55:37.440
插件的安装

55:37.440 --> 55:38.440
因为我们这里面

55:38.440 --> 55:40.440
肯定会用到一些什么

55:40.440 --> 55:42.440
CSS的预变一处理器

55:42.440 --> 55:43.440
而且呢

55:43.440 --> 55:44.440
你看啊

55:44.440 --> 55:45.440
如果说我们默认

55:45.440 --> 55:46.440
生成一个UNIF的项目

55:46.440 --> 55:48.440
它默认这里面就有什么

55:48.440 --> 55:49.440
就有一些SARS了

55:49.440 --> 55:50.440
对不对

55:50.440 --> 55:51.440
那我们直接你说

55:51.440 --> 55:52.440
现在能不能直接使用

55:52.440 --> 55:53.440
在这个里面

55:53.440 --> 55:54.440
可以

55:54.440 --> 55:56.440
我们放到这个里面

55:56.440 --> 55:57.440
SCOBE之后

55:57.440 --> 55:59.440
我这里面写一个Language

55:59.440 --> 56:00.440
等于一个SARS

56:00.440 --> 56:02.440
那你看我能不能行啊

56:02.440 --> 56:03.440
在这个里面

56:03.440 --> 56:04.440
我写一个什么呢

56:04.440 --> 56:05.440
随便给他一个样式

56:05.440 --> 56:06.440
我这里面

56:06.440 --> 56:07.440
有没有

56:07.440 --> 56:08.440
CLASS

56:08.440 --> 56:10.440
找一个DEMO

56:10.440 --> 56:11.440
给这个DEMO

56:11.440 --> 56:12.440
添加一些样式

56:12.440 --> 56:14.440
这里面点DEMO

56:14.440 --> 56:15.440
然后呢

56:15.440 --> 56:17.440
给他加一个Color Red

56:17.440 --> 56:19.440
Color Red

56:19.440 --> 56:21.440
再加一个Fount Size

56:21.440 --> 56:22.440
是30PX

56:22.440 --> 56:23.440
OK

56:23.440 --> 56:24.440
那咱来试一下

56:24.440 --> 56:25.440
行不行啊

56:25.440 --> 56:26.440
回到我们的

56:26.440 --> 56:27.440
这个H5

56:27.440 --> 56:28.440
来看一眼

56:28.440 --> 56:29.440
你会发现

56:29.440 --> 56:30.440
这里面是不是加上了

56:30.440 --> 56:31.440
加上了

56:31.440 --> 56:32.440
这个里面

56:32.440 --> 56:33.440
原因是啥

56:33.440 --> 56:34.440
直接就能使用吗

56:34.440 --> 56:35.440
不是

56:35.440 --> 56:36.440
是因为啥呢

56:36.440 --> 56:37.440
我这个里面

56:37.440 --> 56:38.440
已经配置好了

56:38.440 --> 56:39.440
一些插件

56:39.440 --> 56:40.440
这里面在哪

56:40.440 --> 56:42.440
这有一个插件安装

56:42.440 --> 56:43.440
找到工具的一块

56:43.440 --> 56:44.440
插件安装

56:44.440 --> 56:45.440
如果说

56:45.440 --> 56:47.440
想正常的使用一些SARS

56:47.440 --> 56:48.440
或者是真机运行

56:48.440 --> 56:49.440
这些相关的鱼法

56:49.440 --> 56:50.440
怎么办

56:50.440 --> 56:51.440
你这里面要提前安装的

56:51.440 --> 56:52.440
如果说里面安装

56:52.440 --> 56:53.440
你要进行一下安装的

56:53.440 --> 56:54.440
比如说

56:54.440 --> 56:55.440
我给他卸载之后

56:55.440 --> 56:57.440
你看这个是不是还可用

56:57.440 --> 56:58.440
重新运行一下

56:58.440 --> 56:59.440
然后呢

56:59.440 --> 57:00.440
我们直接的

57:00.440 --> 57:02.440
这个停止运行

57:02.440 --> 57:03.440
可让我们

57:03.440 --> 57:05.440
然后我再重新运行

57:06.440 --> 57:07.440
可让我们运行

57:07.440 --> 57:08.440
ok

57:08.440 --> 57:09.440
再来试一下

57:09.440 --> 57:10.440
看这个SARS是否还好用

57:12.440 --> 57:13.440
demo color

57:13.440 --> 57:15.440
然后fund size是30

57:17.440 --> 57:18.440
此时呢

57:18.440 --> 57:20.440
这个时候我们就报错了

57:20.440 --> 57:21.440
报错原因是啥

57:21.440 --> 57:22.440
因为这个SARS

57:22.440 --> 57:23.440
你删除掉了吗

57:23.440 --> 57:24.440
对吧

57:24.440 --> 57:25.440
你删除掉这种鱼法

57:25.440 --> 57:26.440
它就不支持了

57:26.440 --> 57:27.440
所以说怎么办

57:27.440 --> 57:28.440
我们直接这个里面

57:28.440 --> 57:30.440
就需要进行一个什么

57:30.440 --> 57:31.440
SARS的安装

57:31.440 --> 57:32.440
如果说你这个里面

57:32.440 --> 57:33.440
报错了也不要紧

57:33.440 --> 57:34.440
那我们直接找到

57:34.440 --> 57:35.440
这个插件安装这一块

57:35.440 --> 57:36.440
到这个里面

57:36.440 --> 57:38.440
我们进行安装新插件

57:38.440 --> 57:39.440
那此时呢

57:39.440 --> 57:41.440
你这里面找到这个SARS之后

57:41.440 --> 57:43.440
你进行一个安装

57:43.440 --> 57:44.440
如果说这里面

57:44.440 --> 57:45.440
没有你需要的

57:45.440 --> 57:46.440
对吧

57:46.440 --> 57:47.440
那我咋办呢

57:47.440 --> 57:48.440
我直接的可以去

57:48.440 --> 57:49.440
前往这个市场

57:49.440 --> 57:50.440
到这里面

57:50.440 --> 57:51.440
你搜一下SARS

57:51.440 --> 57:52.440
ok

57:52.440 --> 57:53.440
那然后点击搜索

57:53.440 --> 57:54.440
点击搜索之后

57:54.440 --> 57:56.440
这里面有一个SARS变异

57:56.440 --> 57:57.440
那我们这里面

57:57.440 --> 57:58.440
进行安装就可以了

57:58.440 --> 57:59.440
使用A build的插

57:59.440 --> 58:00.440
导入插件

58:00.440 --> 58:01.440
然后这里面

58:01.440 --> 58:02.440
需要你做一个登录

58:02.440 --> 58:03.440
登录完成之后

58:03.440 --> 58:04.440
你就可以进行

58:04.440 --> 58:05.440
我们的这个插件

58:05.440 --> 58:07.440
导入到工程里面

58:07.440 --> 58:08.440
然后点击继续

58:08.440 --> 58:10.440
打开H build的插Alpha

58:10.440 --> 58:12.440
然后是否安装SARS插件

58:12.440 --> 58:13.440
我这里面选择是

58:13.440 --> 58:14.440
ok

58:14.440 --> 58:15.440
那这时候呢

58:15.440 --> 58:16.440
我们这个SARS插件

58:16.440 --> 58:17.440
就已经安装完成了

58:17.440 --> 58:18.440
安装完成之后

58:18.440 --> 58:20.440
你在重新的进行

58:20.440 --> 58:21.440
刚才我们的这个

58:21.440 --> 58:22.440
工程的刷新

58:22.440 --> 58:23.440
我们到这个里面

58:23.440 --> 58:25.440
找到我们自己的这个UniApp

58:25.440 --> 58:26.440
然后这里面刷新一下

58:26.440 --> 58:27.440
刷新一下

58:27.440 --> 58:28.440
还是不好用

58:28.440 --> 58:29.440
那咋办呢

58:29.440 --> 58:30.440
还是进行

58:30.440 --> 58:32.440
刚才的这个停止crum

58:32.440 --> 58:33.440
运行

58:33.440 --> 58:34.440
然后呢

58:34.440 --> 58:35.440
我在重新的运行

58:35.440 --> 58:36.440
一次crum

58:36.440 --> 58:37.440
那此时呢

58:37.440 --> 58:38.440
应该是没问题了

58:38.440 --> 58:40.440
咱们再来看一眼

58:40.440 --> 58:41.440
这样你的CSS

58:41.440 --> 58:43.440
这个预编一处理器啊

58:43.440 --> 58:44.440
里面的一些相关

58:44.440 --> 58:45.440
一篇语法

58:45.440 --> 58:46.440
就可以使用了

58:46.440 --> 58:47.440
ok 你会发现

58:47.440 --> 58:48.440
这时候是不是就正常了

58:48.440 --> 58:49.440
咱们刷新

58:49.440 --> 58:50.440
刚才打开这个

58:50.440 --> 58:51.440
这里面是不是

58:51.440 --> 58:52.440
只有在atm5中

58:52.440 --> 58:53.440
进行显示

58:53.440 --> 58:54.440
这是不是已经没有问题了

58:54.440 --> 58:55.440
也就是说

58:55.440 --> 58:56.440
你安装成功之后

58:56.440 --> 58:57.440
这是ok的

58:57.440 --> 58:58.440
并且呢

58:58.440 --> 59:00.440
然后这里面都会有一些

59:00.440 --> 59:01.440
这里面一些样式

59:01.440 --> 59:02.440
你就可以使用了

59:02.440 --> 59:04.440
那比如说这个里面

59:04.440 --> 59:06.440
是有一个文章标题的样式

59:06.440 --> 59:07.440
那我在这里面

59:07.440 --> 59:09.440
它有一些默认的这个风格

59:09.440 --> 59:11.440
那我写一下

59:11.440 --> 59:12.440
写这个吧

59:12.440 --> 59:13.440
color

59:13.440 --> 59:14.440
我就指定这个

59:14.440 --> 59:16.440
到来UniColor title

59:16.440 --> 59:17.440
然后呢

59:17.440 --> 59:19.440
它有一个默认的

59:19.440 --> 59:20.440
风格

59:20.440 --> 59:21.440
样式

59:21.440 --> 59:22.440
这个里面这个color很

59:22.440 --> 59:24.440
color很淡是不是

59:24.440 --> 59:25.440
不要紧

59:25.440 --> 59:26.440
我们给他调整一下

59:26.440 --> 59:28.440
这个文章标题

59:28.440 --> 59:29.440
我给他调整

59:29.440 --> 59:30.440
一个rand

59:30.440 --> 59:31.440
然后呢

59:31.440 --> 59:32.440
按我这个红颜色来设置

59:32.440 --> 59:33.440
那你看一眼

59:33.440 --> 59:34.440
他里面是不是

59:34.440 --> 59:35.440
红颜色显示了

59:35.440 --> 59:36.440
也就是说

59:36.440 --> 59:37.440
这里面定义的

59:37.440 --> 59:39.440
所有的sauce的一些相关面量

59:39.440 --> 59:40.440
我们直接都可以

59:40.440 --> 59:41.440
进行使用

59:41.440 --> 59:42.440
好的

59:42.440 --> 59:43.440
那这些呢

59:43.440 --> 59:44.440
就是我们这节课的内容

59:44.440 --> 59:46.440
我们下节课再见

