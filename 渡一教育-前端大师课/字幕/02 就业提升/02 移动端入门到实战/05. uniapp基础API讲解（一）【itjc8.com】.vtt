WEBVTT

00:01.390 --> 00:06.390
各位同学 大家好 这节课开始 我们进行UNIAP基础的一个学习

00:06.390 --> 00:09.390
我们首先了解一下UNIAP的组架

00:09.390 --> 00:14.390
在UNIAP当中组架由三部分来构成 首先就是它的基础组架

00:14.390 --> 00:19.390
还有扩展组架 以及包括我们自己创建的这种自定义组架

00:19.390 --> 00:22.390
我们先来看一下它的基础组架

00:22.390 --> 00:26.390
这个是它的文档 我们可以打开链接进行查看

00:26.390 --> 00:29.390
这个里面 我们基础组架又分为试图容器

00:29.390 --> 00:33.390
包括我们的基础内容 表单 路由跳转 以及媒体组架

00:33.390 --> 00:36.390
包括地图 画布等相关

00:36.390 --> 00:39.390
主要的这些 我在这里面给同学整理了一些

00:39.390 --> 00:43.390
也就是说我们案例里面能用到的这些 我在这里面已经做了整理

00:43.390 --> 00:46.390
首先就是它的Wheel试图容器

00:46.390 --> 00:50.390
这个试图容器类似于我们HTML当中的DIV

00:50.390 --> 00:53.390
我们都知道DIV默认是站满整行的

00:53.390 --> 00:56.390
所以说一个在Wheel里面存放的内容

00:56.390 --> 00:59.390
它是独立在一行里面进行一个显示的

00:59.390 --> 01:02.390
这个我们可以来尝试一下

01:02.390 --> 01:06.390
非常简单 我们直接在这里面创建一个Wheel就OK

01:06.390 --> 01:10.390
然后我们在这里面写一下Wheel tag

01:10.390 --> 01:14.390
OK 你此时在这里面可以进行一下查看

01:14.390 --> 01:18.390
它默认就是在一行里面进行展示 对吧

01:18.390 --> 01:22.390
就是这个 但如果说我在这个Wheel里面

01:22.390 --> 01:25.390
想进行多个内容的这个填充怎么办呢

01:25.390 --> 01:27.390
其实我这里面还可以使用什么

01:27.390 --> 01:29.390
还可以使用这种Tax的标权

01:29.390 --> 01:31.390
也就是说这种文字标权

01:31.390 --> 01:34.390
包括Wheel和Tax 其实我们在小程序里面

01:34.390 --> 01:36.390
也有出现过 对吧 也看到过

01:36.390 --> 01:38.390
我们这里面可以写一下 非常简单

01:38.390 --> 01:41.390
它的使用起来特别的轻松

01:41.390 --> 01:46.390
Tax的1 然后我可以写多个

01:46.390 --> 01:49.390
这里面我还可以定义Tax的2

01:49.390 --> 01:52.390
OK 咱们来看一下

01:52.390 --> 01:55.390
好的 这样就在一行显示了 非常的简单

01:55.390 --> 01:58.390
也就是说我们在接下来写一些结构的时候

01:58.390 --> 02:01.390
这两种标权会经常用到的

02:01.390 --> 02:03.390
除了这两种标权之外

02:03.390 --> 02:05.390
还有一种 就是这种Scroll Wheel

02:05.390 --> 02:07.390
Scroll Wheel是做什么用的

02:07.390 --> 02:10.390
它就是定义了一个可以滚动的区域

02:10.390 --> 02:13.390
这个里面我们在它的文档里面

02:13.390 --> 02:15.390
也可以进行查看到

02:15.390 --> 02:16.390
在试图容器下面

02:16.390 --> 02:19.390
Wheel的下面会有一个Scroll Wheel

02:19.390 --> 02:22.390
Scroll Wheel并且它可以规定X轴

02:22.390 --> 02:24.390
或者是Y轴的一个滚动

02:24.390 --> 02:26.390
像我们这个案例最后实现的时候

02:26.390 --> 02:28.390
假如说你看到我们这个里面

02:28.390 --> 02:30.390
文章列表这一部分

02:30.390 --> 02:31.390
文章列表这一部分

02:31.390 --> 02:33.390
其实它就是通过Scroll Wheel

02:33.390 --> 02:35.390
定义了一个可滚动区域

02:35.390 --> 02:37.390
而且这个可滚动区域

02:37.390 --> 02:39.390
它会监听一些事件

02:39.390 --> 02:41.390
比如说我们的这个处理事件

02:41.390 --> 02:43.390
往下拉的时候会有一个处理

02:43.390 --> 02:44.390
那处理之后

02:44.390 --> 02:46.390
如果说我们监听到事件之后

02:46.390 --> 02:48.390
可以进行一些数据的请求

02:48.390 --> 02:50.390
然后再次的将原来的集合

02:50.390 --> 02:52.390
进行一个拼接展示出来

02:52.390 --> 02:54.390
就是这么一个过程

02:54.390 --> 02:55.390
我们可以来试一下

02:55.390 --> 02:57.390
通过这种Scroll Wheel的形式

02:57.390 --> 02:58.390
来定义一下

02:58.390 --> 02:59.390
在它的下面

02:59.390 --> 03:01.390
我们写一个Scroll Wheel

03:01.390 --> 03:04.390
默认会给我们提示一个Scroll Wheel 2

03:04.390 --> 03:06.390
也就是说这个代表什么意思呢

03:06.390 --> 03:10.390
就是默认的是X轴的一个滚动

03:11.390 --> 03:13.390
我们使用这个的时候

03:13.390 --> 03:14.390
要记住一点

03:14.390 --> 03:18.390
就是保证我们的一个Scroll Wheel

03:18.390 --> 03:20.390
要有一个什么呢

03:20.390 --> 03:22.390
有一个高度

03:22.390 --> 03:23.390
否则呢

03:23.390 --> 03:24.390
它这个是实现不了的

03:24.390 --> 03:25.390
所以说打扮呢

03:25.390 --> 03:26.390
我在这里面

03:26.390 --> 03:28.390
可以给它订一个class-lay

03:28.390 --> 03:31.390
那咱们就叫它Scroll Wheel

03:31.390 --> 03:32.390
在这里面

03:32.390 --> 03:33.390
我就写一下

03:33.390 --> 03:34.390
点

03:34.390 --> 03:35.390
Scroll Wheel

03:35.390 --> 03:36.390
给它一个高度

03:36.390 --> 03:37.390
H

03:37.390 --> 03:39.390
给它一个200像素的高度

03:39.390 --> 03:41.390
此时它这个里面的

03:41.390 --> 03:43.390
就是形成了一个200高度的

03:43.390 --> 03:44.390
一个滚动区域

03:44.390 --> 03:45.390
我在这里面

03:45.390 --> 03:46.390
可以循环一下

03:46.390 --> 03:48.390
v4

03:48.390 --> 03:52.390
v4 item in200

03:52.390 --> 03:54.390
然后呢我写一个item

03:54.390 --> 03:57.390
OK咱们来看一下效果

03:57.390 --> 03:58.390
此时呢

03:58.390 --> 04:00.390
这个里面就定义好的一个什么

04:00.390 --> 04:01.390
看到右面有一个什么

04:01.390 --> 04:02.390
右面有一个

04:02.390 --> 04:04.390
比较短的这种滚动条

04:04.390 --> 04:05.390
它这个里面

04:05.390 --> 04:07.390
形成一个200高度的容器

04:07.390 --> 04:08.390
容器里面的内容

04:08.390 --> 04:09.390
进行一个滚动

04:09.390 --> 04:10.390
而且呢

04:10.390 --> 04:11.390
这个里面我们还可以

04:11.390 --> 04:12.390
监听一些

04:12.390 --> 04:14.390
它的这个相关的事件

04:14.390 --> 04:16.390
像这种scroll to upper

04:16.390 --> 04:17.390
以及scroll to lower

04:17.390 --> 04:18.390
这种事件

04:18.390 --> 04:19.390
我们都可以监听到

04:19.390 --> 04:21.390
那比如说scroll to lower

04:21.390 --> 04:22.390
滚动到底部

04:22.390 --> 04:23.390
或者右边的时候

04:23.390 --> 04:25.390
会触发这种scroll to lower

04:25.390 --> 04:26.390
我们就来试一下

04:26.390 --> 04:27.390
在这个里面

04:27.390 --> 04:28.390
我们定义

04:28.390 --> 04:29.390
注意定义的时候

04:29.390 --> 04:31.390
一定要在scroll wheel

04:31.390 --> 04:32.390
标签上

04:32.390 --> 04:33.390
我们这里面写一个

04:33.390 --> 04:35.390
atscroll to lower

04:35.390 --> 04:37.390
然后呢等于一个值

04:37.390 --> 04:38.390
那我们这里面

04:38.390 --> 04:39.390
scroll to lower

04:39.390 --> 04:40.390
并且呢

04:40.390 --> 04:41.390
我们把这个事件

04:41.390 --> 04:42.390
还说进行一个

04:42.390 --> 04:43.390
绑定啊

04:43.390 --> 04:44.390
vmesser

04:44.390 --> 04:45.390
然后呢这个里面

04:45.390 --> 04:47.390
写一个scroll to lower

04:47.390 --> 04:49.390
打印一个值

04:49.390 --> 04:50.390
andate

04:50.390 --> 04:51.390
也就是说

04:51.390 --> 04:52.390
到底的一个监听

04:52.390 --> 04:53.390
我们来测试一下

04:53.390 --> 04:54.390
我们往下走

04:54.390 --> 04:55.390
一直走

04:55.390 --> 04:56.390
走到底的时候

04:56.390 --> 04:57.390
你会发现这里面

04:57.390 --> 04:58.390
有一个andate的打印

04:58.390 --> 05:00.390
我们再来试一遍一下

05:00.390 --> 05:01.390
往下走的时候

05:01.390 --> 05:02.390
ok

05:02.390 --> 05:03.390
一直滚动到

05:03.390 --> 05:04.390
底部的时候

05:04.390 --> 05:05.390
有一个and到底的

05:05.390 --> 05:06.390
一个提示

05:06.390 --> 05:07.390
那其实呢

05:07.390 --> 05:08.390
我们做这种

05:08.390 --> 05:09.390
下拉加载更多的时候

05:09.390 --> 05:10.390
就可以通过

05:10.390 --> 05:12.390
这种事件的一个处发啊

05:12.390 --> 05:13.390
你看这里面

05:13.390 --> 05:14.390
是不是andate的时候

05:14.390 --> 05:15.390
我们这里面进行

05:15.390 --> 05:16.390
数据请求

05:16.390 --> 05:17.390
然后给我显示

05:17.390 --> 05:18.390
没有数据了

05:18.390 --> 05:19.390
是不是这意思

05:19.390 --> 05:20.390
对吧

05:20.390 --> 05:21.390
这就是scroll wheel

05:21.390 --> 05:22.390
这一块

05:22.390 --> 05:23.390
而且呢

05:23.390 --> 05:24.390
它可以实现一个

05:24.390 --> 05:25.390
横向的滚动啊

05:25.390 --> 05:26.390
横向滚动

05:26.390 --> 05:27.390
那你像我们这个

05:27.390 --> 05:28.390
上面的导航碗

05:28.390 --> 05:29.390
我们就可以通过

05:29.390 --> 05:30.390
这种横向滚动

05:30.390 --> 05:31.390
来进行一个实现

05:31.390 --> 05:32.390
这就是这一块的内容

05:32.390 --> 05:33.390
接下来

05:33.390 --> 05:34.390
我们再看一下什么

05:34.390 --> 05:35.390
看一下这个

05:36.390 --> 05:37.390
也就是说

05:37.390 --> 05:38.390
你看这里面

05:38.390 --> 05:39.390
有一个swiper

05:39.390 --> 05:40.390
滑动式图容器

05:40.390 --> 05:41.390
然后呢

05:41.390 --> 05:42.390
比如用于

05:42.390 --> 05:43.390
做一个轮波图的banner

05:43.390 --> 05:44.390
我们都可以

05:44.390 --> 05:45.390
用它来实现

05:45.390 --> 05:46.390
API在哪呢

05:46.390 --> 05:47.390
就是接下来的

05:47.390 --> 05:48.390
这个swiper

05:48.390 --> 05:49.390
那swiper呢

05:49.390 --> 05:50.390
同样的

05:50.390 --> 05:51.390
如果说

05:51.390 --> 05:52.390
想看一些

05:52.390 --> 05:53.390
比较完整的粒子

05:53.390 --> 05:54.390
我们可以在哪个里面

05:54.390 --> 05:55.390
看呢

05:55.390 --> 05:56.390
这里面有一个

05:56.390 --> 05:57.390
查看掩饰代码

05:57.390 --> 05:58.390
这个呢

05:58.390 --> 05:59.390
是UniUI

05:59.390 --> 06:00.390
给我们提供的

06:00.390 --> 06:01.390
然后呢

06:01.390 --> 06:02.390
它这里面

06:02.390 --> 06:03.390
有一些内置组件

06:03.390 --> 06:04.390
包括我们扩展组件的

06:04.390 --> 06:05.390
在这个里面

06:05.390 --> 06:06.390
进行查看

06:06.390 --> 06:07.390
swiper呢

06:07.390 --> 06:08.390
我们直接的

06:08.390 --> 06:09.390
这个里面

06:09.390 --> 06:10.390
可以有多种的API

06:10.390 --> 06:11.390
进行一个控制

06:11.390 --> 06:12.390
包括它的一些属性

06:12.390 --> 06:14.390
缓能片的时长了

06:14.390 --> 06:15.390
以及我们自动

06:15.390 --> 06:16.390
不放的一个

06:16.390 --> 06:17.390
间隔时长

06:17.390 --> 06:18.390
都可以实现

06:18.390 --> 06:19.390
那我们来写一下

06:19.390 --> 06:20.390
怎么来写呢

06:20.390 --> 06:21.390
我们在这个里面

06:21.390 --> 06:22.390
就是定义好

06:22.390 --> 06:24.390
这个swiper就OK了

06:24.390 --> 06:25.390
我们在这个里面

06:25.390 --> 06:26.390
swiper

06:26.390 --> 06:27.390
OK

06:27.390 --> 06:28.390
好的

06:28.390 --> 06:30.390
创建好这个swiper之后呢

06:30.390 --> 06:31.390
其实呢

06:31.390 --> 06:32.390
它默认

06:32.390 --> 06:33.390
就会给我们

06:34.390 --> 06:35.390
到这个里面

06:35.390 --> 06:36.390
swiper

06:36.390 --> 06:37.390
当然了

06:37.390 --> 06:38.390
现在是没有内容

06:38.390 --> 06:39.390
我们可以添加一块内容

06:39.390 --> 06:40.390
这里面

06:40.390 --> 06:42.390
给一个1和2

06:42.390 --> 06:43.390
好的

06:43.390 --> 06:44.390
当我定义好

06:44.390 --> 06:45.390
这个1和2之后呢

06:45.390 --> 06:47.390
我们再来进行查看一下

06:47.390 --> 06:48.390
也就是说

06:48.390 --> 06:49.390
给它添加了一个内容

06:49.390 --> 06:50.390
你会发现

06:50.390 --> 06:51.390
这里面就是

06:51.390 --> 06:52.390
来进行一个

06:52.390 --> 06:53.390
华东展示的对吧

06:53.390 --> 06:54.390
其实呢

06:54.390 --> 06:55.390
我们可以通过

06:55.390 --> 06:56.390
这种swiper

06:56.390 --> 06:57.390
来实现我们

06:57.390 --> 06:58.390
案例里面的

06:58.390 --> 06:59.390
哪一个部分啊

06:59.390 --> 07:00.390
在这个里面呢

07:00.390 --> 07:01.390
我们可以看一下

07:01.390 --> 07:02.390
我们的这个

07:02.390 --> 07:03.390
这个分类

07:03.390 --> 07:04.390
那我左右

07:04.390 --> 07:05.390
华东的时候

07:05.390 --> 07:06.390
文章是会有一个切换的

07:06.390 --> 07:07.390
在这个切换过程当中呢

07:07.390 --> 07:08.390
其实

07:08.390 --> 07:09.390
我们就可以通过

07:09.390 --> 07:10.390
这种swiper的形式

07:10.390 --> 07:11.390
来实现

07:11.390 --> 07:12.390
那如何来实现呢

07:12.390 --> 07:13.390
这种啊

07:13.390 --> 07:14.390
非常简单

07:14.390 --> 07:15.390
比如说

07:15.390 --> 07:16.390
我华东之后

07:16.390 --> 07:17.390
那我可以呢

07:17.390 --> 07:18.390
触发一个事件

07:18.390 --> 07:19.390
来找到我们

07:19.390 --> 07:20.390
当前的这个分类

07:20.390 --> 07:21.390
或者说呢

07:21.390 --> 07:22.390
我点击

07:22.390 --> 07:23.390
那上面的内容

07:23.390 --> 07:24.390
来触发

07:24.390 --> 07:25.390
下面指定的

07:25.390 --> 07:26.390
一个内容的

07:26.390 --> 07:27.390
一个展示

07:27.390 --> 07:28.390
那在这个里面呢

07:28.390 --> 07:29.390
它也是可以

07:29.390 --> 07:30.390
有一些事件

07:30.390 --> 07:31.390
来进行监听的

07:31.390 --> 07:32.390
我们往上看

07:32.390 --> 07:33.390
这个里面有什么事件呢

07:33.390 --> 07:34.390
往下面走啊

07:34.390 --> 07:35.390
这里面有

07:35.390 --> 07:36.390
Event Hallender

07:36.390 --> 07:37.390
Change啊

07:37.390 --> 07:38.390
事件啊

07:38.390 --> 07:39.390
包括我们的

07:39.390 --> 07:40.390
Transition事件

07:40.390 --> 07:41.390
以及我们的

07:41.390 --> 07:42.390
Animation Finish

07:42.390 --> 07:43.390
也就是说

07:43.390 --> 07:44.390
动画完成的这个

07:44.390 --> 07:45.390
事件啊

07:45.390 --> 07:46.390
这里面都有

07:46.390 --> 07:47.390
我们以这个

07:47.390 --> 07:48.390
AdChange 事件

07:48.390 --> 07:49.390
来做一个例子

07:49.390 --> 07:50.390
我们来看一下

07:50.390 --> 07:51.390
监听一下

07:51.390 --> 07:52.390
它

07:52.390 --> 07:53.390
同样放到

07:53.390 --> 07:54.390
我们的这个

07:54.390 --> 07:55.390
swiper里面啊

07:55.390 --> 07:56.390
我们直接就写一个

07:56.390 --> 07:57.390
AdChange

07:57.390 --> 07:58.390
那我们

07:58.390 --> 07:59.390
ChangeItem

07:59.390 --> 08:00.390
OK

08:00.390 --> 08:02.390
进行一下监听

08:02.390 --> 08:03.390
我们来查看一下

08:03.390 --> 08:04.390
到这个里面

08:04.390 --> 08:05.390
我们再

08:05.390 --> 08:06.390
定义一个

08:06.390 --> 08:07.390
ChangeItem

08:07.390 --> 08:08.390
这里面啊

08:08.390 --> 08:09.390
有一个默认的

08:09.390 --> 08:10.390
事件对象

08:10.390 --> 08:11.390
它给我们定义好了

08:11.390 --> 08:12.390
我们直接拿过来

08:12.390 --> 08:13.390
使用就可以了

08:13.390 --> 08:14.390
因为我们这里面

08:14.390 --> 08:15.390
设置了滑动时间

08:15.390 --> 08:16.390
所以说呢

08:16.390 --> 08:17.390
我们只要是

08:17.390 --> 08:18.390
看到滑动之后

08:18.390 --> 08:19.390
它就会触发一次

08:19.390 --> 08:20.390
触发一次之后

08:20.390 --> 08:21.390
这里面你能找到

08:21.390 --> 08:22.390
一个什么呢

08:22.390 --> 08:23.390
一点detail

08:23.390 --> 08:24.390
detail里面

08:24.390 --> 08:25.390
就有这个Current

08:25.390 --> 08:26.390
以及CurrentItem

08:26.390 --> 08:28.390
它里面的内容和这个

08:28.390 --> 08:29.390
包括我们的

08:29.390 --> 08:30.390
item ID

08:30.390 --> 08:31.390
这里面是不是都有展示

08:31.390 --> 08:32.390
当然了

08:32.390 --> 08:33.390
我这里面没有item ID

08:33.390 --> 08:34.390
那咋办呢

08:34.390 --> 08:35.390
其实我这里面

08:35.390 --> 08:36.390
还可以通过swiper

08:36.390 --> 08:37.390
item

08:37.390 --> 08:38.390
定义我们的

08:38.390 --> 08:39.390
item ID

08:39.390 --> 08:40.390
那我这里面

08:40.390 --> 08:41.390
1

08:41.390 --> 08:42.390
然后呢

08:42.390 --> 08:43.390
我再定一个

08:43.390 --> 08:44.390
item ID

08:44.390 --> 08:45.390
那你再看到

08:45.390 --> 08:46.390
我们这个

08:46.390 --> 08:47.390
撑止事件的时候

08:47.390 --> 08:48.390
我们就能得到

08:48.390 --> 08:49.390
它的

08:49.390 --> 08:50.390
相应的item ID

08:50.390 --> 08:51.390
我们来看一眼啊

08:52.390 --> 08:53.390
来滑动之后

08:53.390 --> 08:54.390
我们看一眼

08:54.390 --> 08:55.390
OK

08:55.390 --> 08:56.390
到这个里面

08:56.390 --> 08:57.390
下面有一个detail

08:57.390 --> 08:58.390
这个

08:59.390 --> 09:00.390
detail下面有一个

09:00.390 --> 09:01.390
CurrentItem ID

09:01.390 --> 09:02.390
是不是这个里面

09:02.390 --> 09:03.390
默认就有了

09:03.390 --> 09:04.390
然后呢

09:04.390 --> 09:05.390
往下走

09:05.390 --> 09:06.390
这里面Current

09:06.390 --> 09:07.390
应该是

09:07.390 --> 09:08.390
这个应该是我们的

09:08.390 --> 09:09.390
detail

09:09.390 --> 09:10.390
detail是1

09:10.390 --> 09:11.390
然后CurrentItem ID

09:11.390 --> 09:12.390
是2

09:12.390 --> 09:13.390
对吧

09:13.390 --> 09:14.390
这个呢就

09:14.390 --> 09:15.390
实现一个关联

09:15.390 --> 09:16.390
那这个呢

09:16.390 --> 09:17.390
就是我们

09:17.390 --> 09:18.390
经常使用到的

09:18.390 --> 09:20.390
一些试图容器组件

09:20.390 --> 09:21.390
那我们再接下来

09:21.390 --> 09:22.390
比如说

09:22.390 --> 09:23.390
其他的内容呢

09:23.390 --> 09:24.390
希望同学们

09:24.390 --> 09:25.390
下去之后

09:25.390 --> 09:26.390
自己尝试一下

09:26.390 --> 09:27.390
在这里面呢

09:27.390 --> 09:28.390
由于我们

09:28.390 --> 09:29.390
在这里面

09:29.390 --> 09:30.390
就不做过多的讲解了

09:30.390 --> 09:31.390
但是同学们

09:31.390 --> 09:32.390
一定要把这三种

09:32.390 --> 09:33.390
进行一个掌握

09:33.390 --> 09:34.390
因为我们最后

09:34.390 --> 09:36.390
在这个实现案例里面

09:36.390 --> 09:37.390
的时候

09:37.390 --> 09:38.390
一定会使用到它的

09:38.390 --> 09:39.390
接下来呢

09:39.390 --> 09:40.390
咱们再说一下

09:40.390 --> 09:41.390
这个基础内容

09:41.390 --> 09:42.390
这一部分

09:42.390 --> 09:43.390
基础内容

09:43.390 --> 09:44.390
这一个组件

09:44.390 --> 09:45.390
这一块呢

09:45.390 --> 09:46.390
分别是什么呢

09:46.390 --> 09:47.390
icon

09:47.390 --> 09:48.390
以及text

09:48.390 --> 09:49.390
regetext

09:49.390 --> 09:50.390
prograce

09:50.390 --> 09:51.390
在这个里面

09:51.390 --> 09:52.390
我们怎么来

09:52.390 --> 09:53.390
进行查找

09:53.390 --> 09:54.390
它的这个API里面

09:54.390 --> 09:55.390
也有啊

09:55.390 --> 09:56.390
这里面有基础内容

09:56.390 --> 09:57.390
分别是icon

09:57.390 --> 09:59.390
因为这个icon

09:59.390 --> 10:00.390
它原生的

10:00.390 --> 10:02.390
这种基础组件里面的icon

10:02.390 --> 10:03.390
内容是比较少的

10:03.390 --> 10:04.390
所以说怎么办呢

10:04.390 --> 10:05.390
我们如果说

10:05.390 --> 10:07.390
想实现更多图标的话

10:07.390 --> 10:08.390
两种形式

10:08.390 --> 10:09.390
第一

10:09.390 --> 10:10.390
我们下载自己的图标库

10:10.390 --> 10:11.390
第二呢

10:11.390 --> 10:12.390
我们是借助

10:12.390 --> 10:13.390
unit

10:13.390 --> 10:14.390
给我们提供的

10:14.390 --> 10:15.390
这种三方插件

10:15.390 --> 10:16.390
那我们怎么来实现

10:16.390 --> 10:17.390
我们这里面

10:17.390 --> 10:18.390
就可以来做一下

10:18.390 --> 10:19.390
首先呢

10:19.390 --> 10:20.390
如果说

10:20.390 --> 10:21.390
要使用它原生的

10:21.390 --> 10:22.390
就是用这种形式

10:22.390 --> 10:23.390
icon

10:23.390 --> 10:24.390
tap

10:24.390 --> 10:25.390
以及value

10:25.390 --> 10:26.390
然后tap

10:26.390 --> 10:28.390
包括我们的这个size

10:28.390 --> 10:29.390
那我们这个

10:29.390 --> 10:30.390
怎么来写

10:30.390 --> 10:31.390
非常简单

10:31.390 --> 10:32.390
我们直接在swiper下面

10:32.390 --> 10:34.390
就写一个icon

10:34.390 --> 10:35.390
tap呢

10:35.390 --> 10:36.390
这个value肯定不行

10:36.390 --> 10:37.390
因为它是一个动态值

10:37.390 --> 10:38.390
我们这里面

10:38.390 --> 10:39.390
可以给它一个什么呢

10:39.390 --> 10:42.390
给它一个size

10:42.390 --> 10:43.390
如果说它有的话

10:43.390 --> 10:44.390
就会给我们

10:44.390 --> 10:45.390
做一个展示

10:45.390 --> 10:46.390
没有呢

10:46.390 --> 10:47.390
就另当别论

10:47.390 --> 10:48.390
是不是这样图标就出来了

10:48.390 --> 10:49.390
对吧

10:49.390 --> 10:50.390
但是这种图标

10:50.390 --> 10:51.390
使用起来呢

10:51.390 --> 10:52.390
相对比较少

10:52.390 --> 10:53.390
那咋办呢

10:53.390 --> 10:54.390
我们这里面

10:54.390 --> 10:55.390
还可以在这个

10:55.390 --> 10:57.390
里面进行一些图标的下载

10:57.390 --> 10:58.390
那最常用的呢

10:58.390 --> 10:59.390
UniUI里面

10:59.390 --> 11:01.390
给我们提供了一个

11:01.390 --> 11:02.390
UniIcons

11:02.390 --> 11:04.390
我们可以通过这种

11:04.390 --> 11:05.390
UniIcons

11:05.390 --> 11:07.390
来进行一些图标的扩展

11:07.390 --> 11:08.390
在这个里面

11:08.390 --> 11:09.390
我们找到

11:09.390 --> 11:10.390
第一个UniIcons

11:10.390 --> 11:11.390
怎么来

11:11.390 --> 11:13.390
实现进行插件

11:13.390 --> 11:14.390
导入到我们的项目呢

11:14.390 --> 11:15.390
这个里面

11:15.390 --> 11:16.390
就给大家做一个展示

11:16.390 --> 11:17.390
首先呢

11:17.390 --> 11:18.390
我们在这个里面

11:18.390 --> 11:19.390
右侧有一个

11:19.390 --> 11:20.390
使用HBO的插

11:20.390 --> 11:21.390
导入插件

11:21.390 --> 11:22.390
以及呢

11:22.390 --> 11:23.390
我们这个

11:23.390 --> 11:24.390
使用HBO的插

11:24.390 --> 11:25.390
包括我们下载插件

11:25.390 --> 11:26.390
这个呢

11:26.390 --> 11:27.390
我们直接使用

11:27.390 --> 11:28.390
第一种形式就可以

11:28.390 --> 11:29.390
那使用这种

11:29.390 --> 11:30.390
第一种形式呢

11:30.390 --> 11:31.390
这里面使用

11:31.390 --> 11:32.390
轮写EX

11:32.390 --> 11:33.390
DeclodNight.cn

11:33.390 --> 11:34.390
关联

11:34.390 --> 11:35.390
打开应用

11:35.390 --> 11:36.390
那我直接打开

11:36.390 --> 11:37.390
HBO的插Alpha

11:37.390 --> 11:38.390
此时呢

11:38.390 --> 11:39.390
在我们的这个工程里面

11:39.390 --> 11:40.390
它这里面

11:40.390 --> 11:41.390
就有一些描述信息

11:41.390 --> 11:42.390
想把这个插件

11:42.390 --> 11:43.390
关联到我们

11:43.390 --> 11:45.390
Test的UniApp里面

11:45.390 --> 11:46.390
注意看我们左面

11:46.390 --> 11:47.390
然后一点击确定

11:47.390 --> 11:49.390
确定完成之后

11:49.390 --> 11:50.390
这里面

11:50.390 --> 11:51.390
带合并的

11:51.390 --> 11:52.390
这里面

11:52.390 --> 11:53.390
因为我之前

11:53.390 --> 11:54.390
然后呢

11:54.390 --> 11:55.390
我给它做一个合并

11:55.390 --> 11:56.390
合并完成之后

11:56.390 --> 11:58.390
这里面有一个UniModels

11:58.390 --> 11:59.390
UniModels下面

11:59.390 --> 12:01.390
就默认生成了一个UniAccounts

12:01.390 --> 12:02.390
那我们就可以

12:02.390 --> 12:04.390
进行相关的使用了

12:04.390 --> 12:05.390
那这个怎么使用啊

12:05.390 --> 12:06.390
我们可以在这个里面

12:06.390 --> 12:08.390
直接的UniAccounts

12:08.390 --> 12:10.390
直接进行使用就可以了

12:10.390 --> 12:13.390
UniGunAccounts

12:13.390 --> 12:14.390
OK

12:14.390 --> 12:15.390
然后呢

12:15.390 --> 12:16.390
这个里面

12:16.390 --> 12:17.390
分别也是有两个属性

12:17.390 --> 12:18.390
一个是Size

12:18.390 --> 12:19.390
Size

12:19.390 --> 12:20.390
我可以给它一个26

12:20.390 --> 12:21.390
Type

12:21.390 --> 12:22.390
那Type只是什么

12:22.390 --> 12:23.390
我们这个

12:23.390 --> 12:24.390
现在目前不知道

12:24.390 --> 12:25.390
怎么办呢

12:25.390 --> 12:26.390
我们可以进行一个查看

12:26.390 --> 12:27.390
那这个里面呢

12:27.390 --> 12:28.390
我们怎么来查看

12:28.390 --> 12:31.390
这里面应该是有这个代贸啊

12:31.390 --> 12:33.390
我们去找一下

12:33.390 --> 12:34.390
组件实力

12:34.390 --> 12:35.390
OK在这个里面

12:35.390 --> 12:36.390
我点击就过来了

12:36.390 --> 12:37.390
这个里面呢

12:37.390 --> 12:39.390
是它的所有的一些

12:39.390 --> 12:41.390
相关的这个代贸演示

12:41.390 --> 12:42.390
其实呢

12:42.390 --> 12:43.390
它就是在我们这个

12:43.390 --> 12:45.390
刚才我们看到的

12:45.390 --> 12:47.390
给大家展示出来的那个

12:47.390 --> 12:48.390
我们这个内置组件

12:48.390 --> 12:49.390
边上

12:49.390 --> 12:50.390
是不是有一个扩展组件

12:50.390 --> 12:51.390
我们就从这个里面

12:51.390 --> 12:52.390
进行查看就可以啊

12:52.390 --> 12:53.390
查看的时候

12:53.390 --> 12:56.390
我们找到这个UniAccounts

12:56.390 --> 12:57.390
那Type值呢

12:57.390 --> 12:59.390
我们就选择这种

12:59.390 --> 13:01.390
它底下标好的这种形式

13:01.390 --> 13:02.390
就可以啊

13:02.390 --> 13:03.390
那比如说我们下电头

13:03.390 --> 13:04.390
就使用什么

13:04.390 --> 13:05.390
RowDown

13:05.390 --> 13:06.390
那我在这个里面就写一下

13:06.390 --> 13:08.390
RowDown

13:08.390 --> 13:09.390
OK

13:09.390 --> 13:11.390
那我们来看一眼啊

13:11.390 --> 13:12.390
打开我们的工程

13:12.390 --> 13:13.390
这里面

13:13.390 --> 13:14.390
是不是有个下电头

13:14.390 --> 13:15.390
然后当然呢

13:15.390 --> 13:16.390
这里面好多图标

13:16.390 --> 13:17.390
我们可以进行一个什么

13:17.390 --> 13:18.390
查看啊

13:18.390 --> 13:19.390
使用

13:19.390 --> 13:20.390
这里面这么多

13:20.390 --> 13:21.390
基本上呢

13:21.390 --> 13:22.390
如果说你再不够的话

13:22.390 --> 13:23.390
咋办呢

13:23.390 --> 13:24.390
你再从阿里自体图标过

13:24.390 --> 13:25.390
进行一些扩展

13:25.390 --> 13:26.390
也是可以的啊

13:26.390 --> 13:27.390
这个呢

13:27.390 --> 13:29.390
就是图标这个部分啊

13:29.390 --> 13:30.390
Tex的这一块呢

13:30.390 --> 13:32.390
刚才我们已经做了测试

13:32.390 --> 13:33.390
那这个在使用的时候

13:33.390 --> 13:34.390
我们注意一下

13:34.390 --> 13:36.390
就是我们这个Tex的

13:36.390 --> 13:38.390
无法进行复文本的解析

13:38.390 --> 13:39.390
那这个是什么意思呢

13:39.390 --> 13:40.390
我们可以来一起看一下

13:40.390 --> 13:42.390
比如说我们这里面

13:42.390 --> 13:44.390
使用一个Tex的标签

13:44.390 --> 13:45.390
那这个Tex的标签呢

13:45.390 --> 13:46.390
刚才是我们

13:46.390 --> 13:48.390
直接的进行一个

13:48.390 --> 13:49.390
自付创的填充

13:49.390 --> 13:50.390
这时候呢

13:50.390 --> 13:52.390
我们给它一个动态的数据值

13:52.390 --> 13:53.390
我们定一下这个

13:53.390 --> 13:54.390
动态数据值

13:54.390 --> 13:55.390
Data下面

13:55.390 --> 13:58.390
我们进行Return的一个操作

13:58.390 --> 13:59.390
这里面呢

13:59.390 --> 14:00.390
有一个MSG

14:00.390 --> 14:03.390
然后这个是用一个DIV

14:03.390 --> 14:05.390
给它进行一个包裹

14:05.390 --> 14:06.390
那此时呢

14:06.390 --> 14:07.390
我们想这个

14:07.390 --> 14:09.390
进行DIV标签的里面的

14:09.390 --> 14:10.390
内容的一个解析

14:10.390 --> 14:12.390
看它能不能实现啊

14:12.390 --> 14:13.390
这时候

14:13.390 --> 14:14.390
我们看到标签里面

14:14.390 --> 14:15.390
你会发现啊

14:15.390 --> 14:16.390
这里面有一个爆错

14:16.390 --> 14:17.390
爆错的原因

14:17.390 --> 14:19.390
我们的ReturnMSG

14:19.390 --> 14:20.390
Data

14:20.390 --> 14:22.390
这里面写错了啊

14:22.390 --> 14:23.390
给大家调整一下

14:23.390 --> 14:24.390
好的

14:24.390 --> 14:25.390
我们再来看一下

14:25.390 --> 14:26.390
它此时解析出来的

14:26.390 --> 14:27.390
是连这个标签

14:27.390 --> 14:28.390
一起解析出来了

14:28.390 --> 14:30.390
无法进行一个什么呢

14:30.390 --> 14:31.390
我们直接的一个文本解析

14:31.390 --> 14:32.390
那这时候呢

14:32.390 --> 14:33.390
我们就可以用到

14:33.390 --> 14:34.390
这种RechTex的

14:34.390 --> 14:36.390
进行我们的这个

14:36.390 --> 14:37.390
标签的一个解析啊

14:37.390 --> 14:38.390
那怎么来实现

14:38.390 --> 14:39.390
其实呢

14:39.390 --> 14:40.390
这个东西啊

14:40.390 --> 14:41.390
非常简单

14:41.390 --> 14:42.390
它有提示的啊

14:42.390 --> 14:43.390
直接我们到这个里面

14:43.390 --> 14:44.390
RechTex的

14:44.390 --> 14:45.390
此时呢

14:45.390 --> 14:47.390
这个里面进行MSG填写了

14:47.390 --> 14:48.390
你只要

14:48.390 --> 14:49.390
把这个MSG

14:49.390 --> 14:50.390
放在这个node里面

14:50.390 --> 14:51.390
就可以了啊

14:51.390 --> 14:52.390
那我们来试一下

14:52.390 --> 14:53.390
MSG放在这个里面

14:53.390 --> 14:55.390
然后来看一眼

14:55.390 --> 14:56.390
到这个里面

14:56.390 --> 14:57.390
你会发现啊

14:57.390 --> 14:58.390
此时解析出来的

14:58.390 --> 14:59.390
这个Hallower的

14:59.390 --> 15:00.390
是不是把这个DNV标签

15:00.390 --> 15:01.390
给它拋出在外了

15:01.390 --> 15:02.390
对吧

15:02.390 --> 15:03.390
那这个呢

15:03.390 --> 15:04.390
就是RechTex的

15:04.390 --> 15:05.390
一个复文本解析的

15:05.390 --> 15:06.390
一个内容啊

15:06.390 --> 15:07.390
基础内容

15:07.390 --> 15:08.390
这一部分

15:08.390 --> 15:09.390
我们只要掌握

15:09.390 --> 15:10.390
accounts

15:10.390 --> 15:11.390
包括accounts

15:11.390 --> 15:12.390
我们可能在这个

15:12.390 --> 15:13.390
使用的时候

15:13.390 --> 15:14.390
还会使用它的这个扩展

15:14.390 --> 15:16.390
叫Uni-SOS

15:16.390 --> 15:17.390
对吧

15:17.390 --> 15:18.390
Uni-accounts

15:18.390 --> 15:19.390
因为它的图标更多嘛

15:19.390 --> 15:20.390
Tex的呢

15:20.390 --> 15:21.390
我们会有用到

15:21.390 --> 15:22.390
如果说

15:22.390 --> 15:23.390
进行复文本解析的话

15:23.390 --> 15:24.390
那这个里面

15:24.390 --> 15:26.390
我们就使用RechTex的

15:26.390 --> 15:27.390
就OK了

15:27.390 --> 15:28.390
至于进度条

15:28.390 --> 15:29.390
这一块

15:29.390 --> 15:30.390
我们暂时用不到

15:30.390 --> 15:31.390
同学们呢

15:31.390 --> 15:32.390
可以自行

15:32.390 --> 15:33.390
去测试一下

15:33.390 --> 15:34.390
然后呢

15:34.390 --> 15:35.390
文档啊

15:35.390 --> 15:36.390
是非常方便的

15:36.390 --> 15:37.390
文档在哪个里面

15:37.390 --> 15:38.390
就在我们这个里面

15:38.390 --> 15:39.390
我们去查看

15:39.390 --> 15:40.390
这个UniApp

15:40.390 --> 15:41.390
观望的时候

15:41.390 --> 15:42.390
这里面有一个progress

15:42.390 --> 15:43.390
代表着我们

15:43.390 --> 15:44.390
每一个的进度条

15:44.390 --> 15:45.390
就是这个意思啊

15:45.390 --> 15:46.390
好的

15:46.390 --> 15:47.390
那再回到

15:47.390 --> 15:48.390
我们这个文档里面啊

15:48.390 --> 15:49.390
咱们说完基础内容之后

15:49.390 --> 15:51.390
还有一个表单组件

15:51.390 --> 15:52.390
表单组件呢

15:52.390 --> 15:53.390
这个呢

15:53.390 --> 15:54.390
就和我们原生的

15:54.390 --> 15:55.390
使用差不多

15:55.390 --> 15:56.390
那这个里面呢

15:56.390 --> 15:57.390
我们使用一个input

15:57.390 --> 15:58.390
来实现一下

15:58.390 --> 15:59.390
来给同学们演示

15:59.390 --> 16:01.390
input怎么来写

16:01.390 --> 16:02.390
我在这个里面

16:02.390 --> 16:03.390
就写一个input

16:03.390 --> 16:04.390
OK

16:04.390 --> 16:05.390
那写完input之后

16:05.390 --> 16:06.390
这里面有这种

16:06.390 --> 16:07.390
Value形式啊

16:07.390 --> 16:08.390
或者是呢

16:08.390 --> 16:09.390
我也可以使用这种

16:09.390 --> 16:11.390
ValueModel的形式

16:11.390 --> 16:12.390
在这个下面

16:12.390 --> 16:13.390
再写一个Value

16:13.390 --> 16:14.390
Value里面呢

16:14.390 --> 16:15.390
我订一个数据

16:15.390 --> 16:16.390
这里面呢

16:16.390 --> 16:17.390
就是刚才我们

16:17.390 --> 16:18.390
订一好的这个MSG

16:18.390 --> 16:21.390
那我们就来进行MSG

16:21.390 --> 16:23.390
数据的修改就可以了

16:23.390 --> 16:24.390
默认的

16:24.390 --> 16:26.390
我使用这种ValueModel的形式

16:26.390 --> 16:28.390
给它进行一个绑定

16:28.390 --> 16:31.830
VModel

16:31.830 --> 16:33.830
ValueModel等于这个

16:33.830 --> 16:34.830
MSG的值

16:34.830 --> 16:35.830
然后呢

16:35.830 --> 16:36.830
我们来看一眼

16:36.830 --> 16:37.830
它能不能实现一个

16:37.830 --> 16:39.830
数据的双向绑定

16:39.830 --> 16:40.830
我们到这个里面

16:40.830 --> 16:41.830
来进行一个查看

16:41.830 --> 16:42.830
好的

16:42.830 --> 16:43.830
此时这个里面展示出来

16:43.830 --> 16:44.830
还是Hello World

16:44.830 --> 16:45.830
这个值不太好

16:45.830 --> 16:46.830
那我们怎么办

16:46.830 --> 16:47.830
来给它进行一个

16:47.830 --> 16:48.830
更改啊

16:48.830 --> 16:49.830
给它换一下

16:49.830 --> 16:51.830
把这个MSG的值

16:51.830 --> 16:52.830
我们给它一个

16:52.830 --> 16:55.830
TestValue

16:55.830 --> 16:56.830
然后呢

16:56.830 --> 16:57.830
默认给它一个

16:57.830 --> 16:58.830
初始值啊

16:58.830 --> 16:59.830
初始化

16:59.830 --> 17:01.830
数据

17:01.830 --> 17:02.830
那种好的

17:02.830 --> 17:04.830
我把这个里面的MSG

17:04.830 --> 17:06.830
两个都换掉

17:06.830 --> 17:09.830
换成TestValue值

17:09.830 --> 17:10.830
OK

17:10.830 --> 17:11.830
再来查看一下

17:11.830 --> 17:12.830
这时候呢

17:12.830 --> 17:13.830
就会有一个初始化数据

17:13.830 --> 17:15.830
两边都进行一个展示啊

17:15.830 --> 17:16.830
然后呢

17:16.830 --> 17:17.830
咱们看是否能

17:17.830 --> 17:18.830
实现双向数据绑定

17:18.830 --> 17:19.830
这个是不是没问题

17:19.830 --> 17:20.830
也就是说

17:20.830 --> 17:21.830
你在Value当中

17:21.830 --> 17:22.830
如何进行使用

17:22.830 --> 17:23.830
那我在这个里面呢

17:23.830 --> 17:24.830
就可以直接的

17:24.830 --> 17:25.830
来进行使用

17:25.830 --> 17:26.830
是非常方便的

17:26.830 --> 17:28.830
至于其他表弹的组架

17:28.830 --> 17:29.830
同学们可以

17:29.830 --> 17:30.830
去自己测试一下

17:30.830 --> 17:31.830
几乎用法

17:31.830 --> 17:32.830
和我们原来的

17:32.830 --> 17:33.830
这个语法

17:33.830 --> 17:34.830
在Value当中的语法

17:34.830 --> 17:35.830
是完全一致的

17:35.830 --> 17:37.830
比如说这个巴特安扭

17:37.830 --> 17:38.830
那这个巴特安扭

17:38.830 --> 17:39.830
再给同学们看一下

17:39.830 --> 17:40.830
这个里面是

17:40.830 --> 17:41.830
巴特安扭

17:41.830 --> 17:42.830
到这里面

17:42.830 --> 17:46.170
它这个里面

17:46.170 --> 17:47.170
默认给了一个Type

17:47.170 --> 17:48.170
是Default

17:48.170 --> 17:49.170
其实呢

17:49.170 --> 17:50.170
它这个里面

17:50.170 --> 17:51.170
是有好多默认值的

17:51.170 --> 17:52.170
我们如果说

17:52.170 --> 17:53.170
想看它的

17:53.170 --> 17:54.170
其他的这个值

17:54.170 --> 17:55.170
我们可以点开

17:55.170 --> 17:56.170
巴特里面

17:56.170 --> 17:57.170
有这个Type类型

17:57.170 --> 17:58.170
按扭的样式

17:58.170 --> 18:00.170
那至于按扭样式

18:00.170 --> 18:01.170
都有哪些

18:01.170 --> 18:02.170
我们直接的

18:02.170 --> 18:03.170
在这个里面

18:03.170 --> 18:04.170
会找到

18:04.170 --> 18:05.170
这里面Type值

18:05.170 --> 18:06.170
PamryDefault

18:06.170 --> 18:07.170
还有这种Warray

18:07.170 --> 18:08.170
红色

18:08.170 --> 18:09.170
我们来试一下

18:09.170 --> 18:10.170
把这个放到这里面

18:10.170 --> 18:11.170
Warray红色

18:11.170 --> 18:12.170
当然了

18:12.170 --> 18:13.170
如果说你对这个

18:13.170 --> 18:14.170
API不熟的话

18:14.170 --> 18:15.170
建议同学们

18:15.170 --> 18:16.170
在使用的时候

18:16.170 --> 18:18.170
一定要多参照这个API

18:18.170 --> 18:19.170
然后呢

18:19.170 --> 18:20.170
这个巴特安扭

18:20.170 --> 18:21.170
我们好像没给内容

18:21.170 --> 18:22.170
对吧

18:22.170 --> 18:23.170
我们给它一个

18:23.170 --> 18:24.170
巴特

18:24.170 --> 18:25.170
然后让它给展示出来

18:25.170 --> 18:26.170
好的

18:26.170 --> 18:27.170
那这样

18:27.170 --> 18:28.170
这是不是一个

18:28.170 --> 18:29.170
红色的按扭

18:29.170 --> 18:30.170
就设置完成了

18:30.170 --> 18:31.170
对吧

18:31.170 --> 18:32.170
其实呢

18:32.170 --> 18:33.170
是非常简单的

18:33.170 --> 18:34.170
表单组件

18:34.170 --> 18:35.170
其他的呢

18:35.170 --> 18:36.170
我们就不在

18:36.170 --> 18:37.170
做过的介绍

18:37.170 --> 18:38.170
但是呢

18:38.170 --> 18:39.170
我们在这个

18:39.170 --> 18:40.170
案例里面

18:40.170 --> 18:41.170
做个注册部分

18:41.170 --> 18:42.170
我们比如说

18:42.170 --> 18:43.170
跳到这里

18:43.170 --> 18:44.170
没有登录

18:44.170 --> 18:45.170
没有登录到这个里面

18:45.170 --> 18:46.170
我们是有一个

18:46.170 --> 18:47.170
登录的过程的

18:47.170 --> 18:48.170
那这个登录呢

18:48.170 --> 18:49.170
我们是集成了

18:49.170 --> 18:50.170
UNIAP里面的

18:50.170 --> 18:51.170
一个登录的

18:51.170 --> 18:52.170
扩展插件

18:52.170 --> 18:53.170
Logan的

18:53.170 --> 18:54.170
Farm的扩展插件

18:54.170 --> 18:55.170
也不是说

18:55.170 --> 18:56.170
直接的去使用

18:56.170 --> 18:57.170
这种原生的Farm

18:57.170 --> 18:58.170
因为我们这里面

18:58.170 --> 18:59.170
还得做一个

18:59.170 --> 19:00.170
表单的检测

19:00.170 --> 19:01.170
所以说呢

19:01.170 --> 19:02.170
我们要使用一个

19:02.170 --> 19:03.170
扩展的这种

19:03.170 --> 19:04.170
插件来实现

19:04.170 --> 19:05.170
就OK了

19:06.170 --> 19:07.170
好的

19:07.170 --> 19:08.170
那我们接下来呢

19:08.170 --> 19:09.170
再来看一下

19:09.170 --> 19:10.170
一个组架

19:10.170 --> 19:11.170
路由组架在哪呢

19:11.170 --> 19:12.170
我这里面

19:12.170 --> 19:13.170
已经给同学们写了

19:13.170 --> 19:14.170
就是一个非常简单

19:14.170 --> 19:15.170
就是我们的这个

19:15.170 --> 19:16.170
navigator

19:16.170 --> 19:18.170
页面链接跳转

19:18.170 --> 19:19.170
其实我们在

19:19.170 --> 19:20.170
做路由跳转的时候

19:20.170 --> 19:21.170
有两种形式

19:21.170 --> 19:22.170
第一种呢

19:22.170 --> 19:23.170
使用这种

19:23.170 --> 19:24.170
组架标圈的形式

19:24.170 --> 19:25.170
还有一种形式呢

19:25.170 --> 19:26.170
就是我们使用

19:26.170 --> 19:27.170
这种编程的形式

19:27.170 --> 19:28.170
进行跳转

19:28.170 --> 19:29.170
两种形式都可以

19:29.170 --> 19:30.170
那我们来看一下

19:30.170 --> 19:31.170
使用这种

19:31.170 --> 19:32.170
标圈的形式

19:32.170 --> 19:34.170
怎么来实现跳转

19:34.170 --> 19:35.170
那我们在

19:35.170 --> 19:36.170
这个里面定一下

19:37.170 --> 19:38.170
navigator

19:38.170 --> 19:39.170
好的

19:39.170 --> 19:40.170
定义完成之后呢

19:40.170 --> 19:41.170
这里面有一些

19:41.170 --> 19:43.170
我们需要的属性啊

19:43.170 --> 19:44.170
也就是说标圈属性

19:44.170 --> 19:45.170
需要我们进行一个描述

19:45.170 --> 19:47.170
那都有哪些属性呢

19:47.170 --> 19:48.170
我们回到这个里面

19:48.170 --> 19:49.170
找到我们的

19:49.170 --> 19:50.170
路由跳转

19:50.170 --> 19:51.170
navigator

19:51.170 --> 19:52.170
这里面呢

19:52.170 --> 19:53.170
已经跟我们说了

19:53.170 --> 19:54.170
这里面需要一个uon

19:54.170 --> 19:55.170
那uon呢

19:55.170 --> 19:57.170
就是我们跳转的这个地址

19:57.170 --> 19:58.170
然后还有呢

19:58.170 --> 19:59.170
open tap

19:59.170 --> 20:00.170
我们主要关注的

20:00.170 --> 20:01.170
现在目前啊

20:01.170 --> 20:02.170
是这两个就OK了

20:02.170 --> 20:03.170
至于其他传址呢

20:03.170 --> 20:05.170
在我们实际案例应用里面

20:05.170 --> 20:06.170
我们会有介绍啊

20:06.170 --> 20:07.170
那uon

20:07.170 --> 20:08.170
我们添什么呢

20:08.170 --> 20:09.170
首先这个里面啊

20:09.170 --> 20:10.170
有一个问题就是啥呢

20:10.170 --> 20:12.170
我们想跳转一个界面

20:12.170 --> 20:13.170
那必须要保证

20:13.170 --> 20:14.170
我们的界面

20:14.170 --> 20:15.170
是不是得有两个对不对

20:15.170 --> 20:16.170
但是呢

20:16.170 --> 20:17.170
我们目前啊

20:17.170 --> 20:18.170
只有一个界面

20:18.170 --> 20:19.170
怎么办呢

20:19.170 --> 20:20.170
我们要创建页面

20:20.170 --> 20:21.170
创建页面如何来实现

20:21.170 --> 20:23.170
在这个hbo的查里面

20:23.170 --> 20:24.170
我们

20:24.170 --> 20:25.170
想为unip

20:25.170 --> 20:27.170
来进行页面创建

20:27.170 --> 20:28.170
首先呢

20:28.170 --> 20:29.170
我们在这个配置词下面

20:29.170 --> 20:30.170
右键

20:30.170 --> 20:31.170
右键呢

20:31.170 --> 20:32.170
这里面有一个新键页面

20:32.170 --> 20:33.170
那我们这里面

20:33.170 --> 20:34.170
就可以写一下

20:34.170 --> 20:35.170
比如说

20:35.170 --> 20:36.170
我们这个叫other

20:36.170 --> 20:38.170
就叫other配置了啊

20:38.170 --> 20:39.170
然后呢

20:39.170 --> 20:40.170
我们这个other定义好之后呢

20:40.170 --> 20:41.170
这里面有一些选项

20:41.170 --> 20:43.170
是否创建一个同名目录

20:43.170 --> 20:44.170
最好呢

20:44.170 --> 20:45.170
建议同学吗

20:45.170 --> 20:46.170
进行一个同名目录的创建

20:46.170 --> 20:47.170
那如果说

20:47.170 --> 20:48.170
你要创建之后呢

20:48.170 --> 20:49.170
这样呢

20:49.170 --> 20:50.170
就能更好的来进行

20:50.170 --> 20:51.170
我们的这个

20:51.170 --> 20:53.170
页面的一个管理

20:53.170 --> 20:54.170
比如说

20:54.170 --> 20:55.170
我们在里面啊

20:55.170 --> 20:56.170
进行一些CSS

20:56.170 --> 20:58.170
样式的文件家的一个定义

20:58.170 --> 20:59.170
这是ok的

20:59.170 --> 21:00.170
然后底下呢

21:00.170 --> 21:01.170
会有一些模板的选择

21:01.170 --> 21:02.170
我们默认啊

21:02.170 --> 21:03.170
就选择这种

21:03.170 --> 21:04.170
这种模板就ok

21:04.170 --> 21:05.170
至于如果说

21:05.170 --> 21:06.170
你要使用了这种

21:06.170 --> 21:07.170
Stylers

21:07.170 --> 21:08.170
或者是SARS

21:08.170 --> 21:10.170
以及CSS的

21:10.170 --> 21:11.170
其他的预兵一处理啊

21:11.170 --> 21:12.170
那你在这里面

21:12.170 --> 21:13.170
指定模板就ok了

21:13.170 --> 21:14.170
然后呢

21:14.170 --> 21:15.170
下面有一个选项

21:15.170 --> 21:16.170
是否在配置点

21:16.170 --> 21:18.170
Jason中进行一个注册

21:18.170 --> 21:19.170
小程序里面

21:19.170 --> 21:20.170
我们也看到了

21:20.170 --> 21:21.170
如果说

21:21.170 --> 21:22.170
一个页面被引入的话

21:22.170 --> 21:23.170
首先呢

21:23.170 --> 21:24.170
第一步你是定义这个页面

21:24.170 --> 21:25.170
第二呢

21:25.170 --> 21:26.170
就是你在这个

21:26.170 --> 21:27.170
全局的配置点

21:27.170 --> 21:28.170
Jason里面

21:28.170 --> 21:30.170
进行配置像的一个描述

21:30.170 --> 21:31.170
我们在这里面呢

21:31.170 --> 21:32.170
也写一下

21:32.170 --> 21:33.170
创建

21:33.170 --> 21:34.170
点击创建之后

21:34.170 --> 21:35.170
他做两件事

21:35.170 --> 21:36.170
第一呢

21:36.170 --> 21:37.170
在pages下面

21:37.170 --> 21:38.170
创建了一个文件家

21:38.170 --> 21:39.170
文件家下面

21:39.170 --> 21:40.170
有一个同名文件

21:40.170 --> 21:41.170
other

21:41.170 --> 21:42.170
我在这里面写一下

21:42.170 --> 21:43.170
otherpages

21:43.170 --> 21:44.170
然后呢

21:44.170 --> 21:45.170
我们看一下配置点

21:45.170 --> 21:46.170
Jason

21:46.170 --> 21:47.170
这个里面

21:47.170 --> 21:48.170
此时呢

21:48.170 --> 21:49.170
他刷新了一下

21:49.170 --> 21:50.170
刷新了一下之后

21:50.170 --> 21:51.170
你会发现这个里面

21:51.170 --> 21:52.170
又多了一个

21:52.170 --> 21:53.170
pages

21:53.170 --> 21:54.170
下面的other

21:54.170 --> 21:55.170
其实呢

21:55.170 --> 21:56.170
这个是路径

21:56.170 --> 21:57.170
同时呢

21:57.170 --> 21:58.170
他也是一个路由

21:58.170 --> 21:59.170
如何来体现这句话呢

21:59.170 --> 22:00.170
比如说

22:00.170 --> 22:01.170
我们在这里面

22:01.170 --> 22:02.170
现在是这个

22:02.170 --> 22:03.170
localhost的8080

22:03.170 --> 22:04.170
对不对

22:04.170 --> 22:05.170
然后呢

22:05.170 --> 22:06.170
我们可以通过这种

22:06.170 --> 22:07.170
pages

22:07.170 --> 22:09.170
下面的我们

22:09.170 --> 22:10.170
other

22:10.170 --> 22:11.170
然后呢

22:11.170 --> 22:12.170
再来一个other

22:12.170 --> 22:13.170
我们进行一个查看

22:13.170 --> 22:14.170
是不是这个otherpages

22:14.170 --> 22:15.170
就展现出来了

22:15.170 --> 22:16.170
至于他的

22:16.170 --> 22:17.170
其他的一些配置啊

22:17.170 --> 22:18.170
我们讲这个

22:18.170 --> 22:20.170
Jason文件的时候

22:20.170 --> 22:21.170
会有一个

22:21.170 --> 22:22.170
终点的描述

22:22.170 --> 22:23.170
只不过是这里面

22:23.170 --> 22:24.170
我们提前看一下

22:24.170 --> 22:25.170
NavigatorBarTitleText

22:25.170 --> 22:26.170
这个指的是

22:26.170 --> 22:27.170
我们默认的

22:27.170 --> 22:29.170
导航栏的一个标体

22:29.170 --> 22:30.170
我们这里面

22:30.170 --> 22:32.170
一个叫other

22:32.170 --> 22:33.170
界面

22:33.170 --> 22:34.170
ok

22:34.170 --> 22:35.170
那这个定义好了之后

22:35.170 --> 22:36.170
我们再来看一下

22:36.170 --> 22:37.170
此时这个里面

22:37.170 --> 22:38.170
other界面就有了

22:38.170 --> 22:39.170
对不对

22:39.170 --> 22:40.170
然后呢

22:40.170 --> 22:41.170
我们再回退一下

22:41.170 --> 22:42.170
回退到这个里面

22:42.170 --> 22:43.170
怎么来跳转

22:43.170 --> 22:44.170
我们回归正题

22:44.170 --> 22:45.170
那这个里面

22:45.170 --> 22:46.170
我们既然有了

22:46.170 --> 22:47.170
就可以进行一下

22:47.170 --> 22:48.170
编写了

22:48.170 --> 22:49.170
到我们index.view里面

22:49.170 --> 22:50.170
我们此时

22:50.170 --> 22:51.170
找到Navigator

22:51.170 --> 22:53.170
指定一个url

22:53.170 --> 22:54.170
url

22:54.170 --> 22:55.170
指定一个什么呢

22:55.170 --> 22:56.170
我们这个

22:56.170 --> 22:57.170
点点刚

22:57.170 --> 22:58.170
other

22:58.170 --> 22:59.170
下面的other

22:59.170 --> 23:00.170
点到其他界面

23:00.170 --> 23:01.170
写一下

23:03.170 --> 23:04.170
其他界面

23:04.170 --> 23:05.170
ok

23:05.170 --> 23:06.170
写完之后

23:06.170 --> 23:07.170
我们看行不行

23:07.170 --> 23:08.170
我们来试一下

23:08.170 --> 23:09.170
点击跳转

23:09.170 --> 23:10.170
到其他界面

23:10.170 --> 23:11.170
这时候呢

23:11.170 --> 23:12.170
就去other了

23:12.170 --> 23:13.170
然后其实这里面

23:13.170 --> 23:14.170
是有默认指的

23:14.170 --> 23:15.170
比如说啥意思

23:15.170 --> 23:16.170
你看啊

23:16.170 --> 23:17.170
我们到这个Navigator里面

23:17.170 --> 23:18.170
这里面有一个open tab

23:18.170 --> 23:19.170
open tab

23:19.170 --> 23:20.170
指定了跳转方式

23:20.170 --> 23:21.170
那跳转方式里面

23:21.170 --> 23:22.170
这个on type

23:22.170 --> 23:23.170
有Navigator

23:23.170 --> 23:24.170
有redirect

23:24.170 --> 23:25.170
redirect

23:25.170 --> 23:26.170
它这个里面

23:26.170 --> 23:27.170
就没有这种

23:27.170 --> 23:28.170
历史记录了

23:28.170 --> 23:29.170
一个是什么

23:29.170 --> 23:30.170
switch tab

23:30.170 --> 23:31.170
switch tab指的是

23:31.170 --> 23:32.170
如果说

23:32.170 --> 23:33.170
我们有底部的

23:33.170 --> 23:34.170
type bar之后

23:34.170 --> 23:35.170
那它这个呢

23:35.170 --> 23:36.170
就是跳转到

23:36.170 --> 23:37.170
指定的type bar界面

23:37.170 --> 23:38.170
假如说我们这个里面

23:38.170 --> 23:39.170
open tab

23:39.170 --> 23:40.170
给它一个redirect

23:40.170 --> 23:42.170
我们来试一下

23:42.170 --> 23:44.170
给一个open tab

23:44.170 --> 23:46.170
这里面规定了

23:46.170 --> 23:48.170
这个redirect

23:48.170 --> 23:49.170
然后呢

23:49.170 --> 23:51.170
咱们再来做一下测试

23:51.170 --> 23:53.170
到我们的界面里面

23:53.170 --> 23:54.170
然后呢

23:54.170 --> 23:55.170
跳转其他界面

23:55.170 --> 23:56.170
你会发现

23:56.170 --> 23:57.170
上面的这个回头按钮

23:57.170 --> 23:58.170
因为redirect

23:58.170 --> 23:59.170
不会存储一个

23:59.170 --> 24:00.170
我们路由的历史记录站

24:00.170 --> 24:01.170
所以说呢

24:01.170 --> 24:02.170
它呢

24:02.170 --> 24:03.170
找不到我们历史记录站

24:03.170 --> 24:04.170
没法回退

24:04.170 --> 24:05.170
那这个回头按钮

24:05.170 --> 24:06.170
默认的就没有了

24:06.170 --> 24:07.170
这个呢

24:07.170 --> 24:08.170
就是我们Navigator的

24:08.170 --> 24:09.170
这一块

24:09.170 --> 24:10.170
然后呢

24:10.170 --> 24:11.170
我们其实还可以通过什么

24:11.170 --> 24:12.170
通过这种

24:12.170 --> 24:13.170
编程的形式

24:13.170 --> 24:14.170
来进行跳转

24:14.170 --> 24:15.170
在这里面

24:15.170 --> 24:16.170
也给大家写一下

24:16.170 --> 24:17.170
那这个有一个button

24:17.170 --> 24:18.170
对吧

24:18.170 --> 24:19.170
我们这个button

24:19.170 --> 24:21.170
就是写一下跳转

24:21.170 --> 24:22.170
到什么

24:22.170 --> 24:23.170
我们的这个

24:23.170 --> 24:24.170
arzer界面

24:24.170 --> 24:25.170
OK

24:25.170 --> 24:26.170
那这个里面

24:26.170 --> 24:27.170
是建的

24:27.170 --> 24:28.170
绑定

24:28.170 --> 24:29.170
I'd click

24:29.170 --> 24:30.170
go

24:30.170 --> 24:33.480
arzer page

24:33.480 --> 24:34.480
好

24:34.480 --> 24:35.480
写完成之后

24:35.480 --> 24:36.480
我在这个里面

24:36.480 --> 24:37.480
订一下

24:37.480 --> 24:38.480
go other page

24:38.480 --> 24:39.480
买色的里面

24:39.480 --> 24:40.480
来进行定义

24:40.480 --> 24:41.480
在这个里面

24:41.480 --> 24:42.480
dohar

24:42.480 --> 24:43.480
go other page

24:43.480 --> 24:44.480
然后我先把这些

24:44.480 --> 24:45.480
打印纸

24:45.480 --> 24:46.480
先给它关一下

24:46.480 --> 24:47.480
go other page里面

24:47.480 --> 24:49.480
我们可以通过什么呢

24:49.480 --> 24:51.480
Uni是有一个方法的

24:51.480 --> 24:52.480
然后咱们小程序

24:52.480 --> 24:54.480
是用这种VX的形式

24:54.480 --> 24:55.480
其实你在这个里面

24:55.480 --> 24:56.480
也可以使用VX的形式

24:56.480 --> 24:57.480
但是呢

24:57.480 --> 24:58.480
我们最好使用这种

24:58.480 --> 24:59.480
Uni的形式

24:59.480 --> 25:01.480
Uni.navigator

25:01.480 --> 25:02.480
这个里面

25:02.480 --> 25:03.480
我们选择navigator2

25:03.480 --> 25:05.480
那这个里面navigator2

25:05.480 --> 25:06.480
此时呢

25:06.480 --> 25:07.480
我们指定一个url

25:07.480 --> 25:09.480
那上面这个url

25:09.480 --> 25:10.480
是不是就是

25:10.480 --> 25:11.480
或者是呢

25:11.480 --> 25:12.480
我们也可以写这种

25:12.480 --> 25:13.480
绝对路件

25:13.480 --> 25:14.480
绝对路件

25:14.480 --> 25:15.480
我们选择pages

25:15.480 --> 25:16.480
下面的arzer

25:16.480 --> 25:17.480
下面的arzer

25:17.480 --> 25:19.480
我们依次来试一下

25:19.480 --> 25:20.480
如果说跳转

25:20.480 --> 25:21.480
成功之后

25:21.480 --> 25:22.480
它会有一个什么

25:22.480 --> 25:23.480
success

25:23.480 --> 25:25.480
我们做一个打印

25:25.480 --> 25:26.480
在这个里面

25:26.480 --> 25:28.480
给同学们看一下打印值

25:28.480 --> 25:29.480
ok

25:29.480 --> 25:30.480
点击console

25:30.480 --> 25:31.480
控制台

25:31.480 --> 25:32.480
然后我们刷新一下界面

25:32.480 --> 25:33.480
先回退一下

25:33.480 --> 25:35.480
回退到我们手页面

25:35.480 --> 25:37.480
就是localhost

25:37.480 --> 25:39.480
我们的8080

25:39.480 --> 25:40.480
ok

25:40.480 --> 25:41.480
到手页面之后

25:41.480 --> 25:42.480
然后呢

25:42.480 --> 25:43.480
我们这里面选择

25:43.480 --> 25:44.480
跳转到其他界面

25:44.480 --> 25:45.480
这个是没问题的

25:45.480 --> 25:46.480
对吧

25:46.480 --> 25:47.480
我们再回退一下

25:47.480 --> 25:48.480
这个里面

25:48.480 --> 25:49.480
没有历史记录

25:49.480 --> 25:50.480
好尴尬呀对吧

25:50.480 --> 25:51.480
然后我们重新来

25:51.480 --> 25:53.480
跳转到arzer界面

25:53.480 --> 25:54.480
你会发现

25:54.480 --> 25:55.480
一个arzer

25:55.480 --> 25:56.480
MSG

25:56.480 --> 25:57.480
这个里面代表着

25:57.480 --> 25:58.480
是否有错误

25:58.480 --> 25:59.480
对吧

25:59.480 --> 26:00.480
那这里面

26:00.480 --> 26:01.480
navigator2

26:01.480 --> 26:02.480
ok

26:02.480 --> 26:03.480
这个是成功状态

26:03.480 --> 26:04.480
然后这里面

26:04.480 --> 26:05.480
还会有一些

26:05.480 --> 26:06.480
描述的信息呀

26:06.480 --> 26:07.480
这个

26:07.480 --> 26:08.480
就是在这个里面

26:08.480 --> 26:09.480
然后呢

26:09.480 --> 26:10.480
我们这样

26:10.480 --> 26:11.480
也可以实现了

26:11.480 --> 26:12.480
一个跳转

26:12.480 --> 26:13.480
这个呢

26:13.480 --> 26:14.480
就是我们路由跳转的

26:14.480 --> 26:15.480
这么一个过程

26:15.480 --> 26:16.480
包括我们组件的跳转

26:16.480 --> 26:18.480
以及编程形式的跳转

26:18.480 --> 26:19.480
至于媒体组件

26:19.480 --> 26:20.480
这个里面

26:20.480 --> 26:22.480
同学们主要关注的是

26:22.480 --> 26:23.480
一个啥

26:23.480 --> 26:24.480
就ok了

26:24.480 --> 26:25.480
至于Audio

26:25.480 --> 26:26.480
和Carmel

26:26.480 --> 26:27.480
以及Video

26:27.480 --> 26:28.480
这一块

26:28.480 --> 26:29.480
我们在本案里面

26:29.480 --> 26:30.480
暂时设计不到

26:30.480 --> 26:31.480
同学们呢

26:31.480 --> 26:33.480
可以自行进行一下测试

26:33.480 --> 26:34.480
然后咱们再来说一下

26:34.480 --> 26:35.480
这个组件的

26:35.480 --> 26:36.480
公共属性集合

26:36.480 --> 26:37.480
其实呢

26:37.480 --> 26:38.480
在这个

26:38.480 --> 26:39.480
我们unip里面

26:39.480 --> 26:41.480
定义的这些组件标签

26:41.480 --> 26:42.480
它跟我们

26:42.480 --> 26:44.480
web开发里面的这个标签

26:44.480 --> 26:46.480
几乎非常类似

26:46.480 --> 26:47.480
然后呢

26:47.480 --> 26:48.480
像它的一些id

26:48.480 --> 26:49.480
class

26:49.480 --> 26:50.480
style

26:50.480 --> 26:51.480
还有这个

26:51.480 --> 26:52.480
我们其他的这个

26:52.480 --> 26:53.480
hiden

26:53.480 --> 26:54.480
hiden没有啊

26:54.480 --> 26:55.480
主要是id

26:55.480 --> 26:56.480
class

26:56.480 --> 26:57.480
以及包括style

26:57.480 --> 26:58.480
这些内容啊

26:58.480 --> 27:00.480
它原生呢

27:00.480 --> 27:01.480
都是支持的

27:01.480 --> 27:02.480
也就是说任何标签

27:02.480 --> 27:03.480
都会有这些属性

27:03.480 --> 27:04.480
你直接使用就ok

27:04.480 --> 27:06.480
然后在这个基础上呢

27:06.480 --> 27:07.480
还会有一些什么呢

27:07.480 --> 27:08.480
ref属性

27:08.480 --> 27:09.480
那这个ref

27:09.480 --> 27:10.480
有点类似于

27:10.480 --> 27:11.480
我们web里面的ref

27:11.480 --> 27:12.480
那直接

27:12.480 --> 27:13.480
我们可以获取

27:13.480 --> 27:15.480
组件的一些相关信息

27:15.480 --> 27:16.480
这个呢

27:16.480 --> 27:18.480
代表组件的一个唯一标识

27:18.480 --> 27:19.480
然后这里面

27:19.480 --> 27:20.480
注意一下

27:20.480 --> 27:21.480
还有一个hiden

27:21.480 --> 27:22.480
是否隐藏

27:22.480 --> 27:23.480
然后呢所有组件

27:23.480 --> 27:24.480
默认是显示的

27:24.480 --> 27:25.480
其实呢

27:25.480 --> 27:26.480
我们除了这种

27:26.480 --> 27:27.480
hiden的形式

27:27.480 --> 27:28.480
我们还可以用这种

27:28.480 --> 27:29.480
vio里面的

27:29.480 --> 27:30.480
v-gang

27:30.480 --> 27:32.480
开头的这种形式指令啊

27:32.480 --> 27:33.480
比如说我们通过

27:33.480 --> 27:34.480
vif这种形式

27:34.480 --> 27:36.480
是否控制它的这个

27:36.480 --> 27:37.480
隐藏

27:37.480 --> 27:38.480
包括显示

27:38.480 --> 27:39.480
这个都可以

27:39.480 --> 27:40.480
那我们来试一下啊

27:40.480 --> 27:42.480
我们回到我们的这个

27:42.480 --> 27:44.480
hpu的插里面

27:44.480 --> 27:46.480
然后呢我们定一个内容

27:46.480 --> 27:48.480
就控制它的这个隐藏显示

27:48.480 --> 27:50.480
这样再写一个button

27:50.480 --> 27:52.480
那我们at click

27:52.480 --> 27:53.480
定控制一个纸啊

27:53.480 --> 27:54.480
或者是呢

27:54.480 --> 27:55.480
我们直接不这么写了

27:55.480 --> 27:57.480
我们直接的把它干掉

27:57.480 --> 27:58.480
这里面就写一个纸啊

27:58.480 --> 28:00.480
vio

28:00.480 --> 28:02.480
然后呢这里面写一个

28:02.480 --> 28:04.480
vif

28:04.480 --> 28:05.480
一字寿

28:05.480 --> 28:06.480
ok

28:06.480 --> 28:08.480
这里面写一句话

28:08.480 --> 28:09.480
什么呢

28:09.480 --> 28:10.480
根据条件

28:10.480 --> 28:12.480
进行显示啊

28:12.480 --> 28:13.480
根据条件

28:13.480 --> 28:14.480
进行显示

28:14.480 --> 28:15.480
ok

28:15.480 --> 28:17.480
那我们在这个data里面

28:17.480 --> 28:18.480
就把这个一字寿的

28:18.480 --> 28:19.480
出使值给定一下

28:19.480 --> 28:21.480
这个叫一字寿

28:21.480 --> 28:22.480
默认呢

28:22.480 --> 28:23.480
我们让它显示出来

28:23.480 --> 28:24.480
tru

28:24.480 --> 28:25.480
这样我们来看一下

28:25.480 --> 28:26.480
这个

28:26.480 --> 28:27.480
显示结果

28:27.480 --> 28:28.480
这里面是不是根据条件

28:28.480 --> 28:30.480
显示这里面就显示出来了

28:30.480 --> 28:31.480
显示出来之后

28:31.480 --> 28:32.480
咱们通过这种

28:32.480 --> 28:34.480
vio的一个dv2s啊

28:34.480 --> 28:36.480
来给它调整一下

28:36.480 --> 28:37.480
是在这个里面

28:37.480 --> 28:38.480
unival

28:38.480 --> 28:40.480
根据条件进行显示

28:40.480 --> 28:41.480
然后呢咱们得找到

28:41.480 --> 28:42.480
这个里面的

28:42.480 --> 28:43.480
我们pages

28:43.480 --> 28:44.480
index

28:44.480 --> 28:46.480
这里面是不是有一个一字寿

28:46.480 --> 28:47.480
那我给它调整一下

28:47.480 --> 28:49.480
比如说叫

28:49.480 --> 28:50.480
false

28:50.480 --> 28:51.480
给它调整为false

28:51.480 --> 28:52.480
你会发现啊

28:52.480 --> 28:53.480
咱们回车一下

28:53.480 --> 28:54.480
ok 给它

28:54.480 --> 28:55.480
false

28:55.480 --> 28:57.480
我们ease show false

28:57.480 --> 28:59.480
然后呢咱们给它做一个

28:59.480 --> 29:00.480
inter

29:00.480 --> 29:01.480
ok

29:01.480 --> 29:02.480
那此时呢

29:02.480 --> 29:04.480
如果说我给它调整为false之后

29:04.480 --> 29:05.480
这时候它是不是就不显示了

29:05.480 --> 29:07.480
然后给它调整为tru

29:07.480 --> 29:08.480
那这时候呢

29:08.480 --> 29:09.480
我们再做一个保存

29:09.480 --> 29:10.480
是不是就ok了

29:10.480 --> 29:11.480
对吧

29:11.480 --> 29:12.480
这个呢就是我们一个

29:12.480 --> 29:13.480
根据条件显示的

29:13.480 --> 29:14.480
这一块的内容

29:14.480 --> 29:16.480
其实它和我们vio开发里面

29:17.480 --> 29:18.480
当然了

29:18.480 --> 29:19.480
你也可以使用

29:19.480 --> 29:20.480
hiden这种形式

29:20.480 --> 29:21.480
接下来呢

29:21.480 --> 29:22.480
我们再说一下

29:22.480 --> 29:23.480
这个扩展组件

29:23.480 --> 29:24.480
扩展组件这个呢

29:24.480 --> 29:25.480
我们直接的

29:25.480 --> 29:26.480
这里面有两个地址

29:26.480 --> 29:27.480
其实在刚才

29:27.480 --> 29:28.480
我们已经使用了一个

29:28.480 --> 29:29.480
扩展组件

29:29.480 --> 29:30.480
咱们可以看一下

29:30.480 --> 29:31.480
这个呢

29:31.480 --> 29:32.480
就是扩展组件的

29:32.480 --> 29:33.480
相关的地址

29:33.480 --> 29:34.480
这里面有

29:34.480 --> 29:35.480
unit

29:35.480 --> 29:36.480
pages

29:36.480 --> 29:37.480
包括看了点日历

29:37.480 --> 29:39.480
相关的使用都可以进行

29:39.480 --> 29:40.480
和我们刚才

29:40.480 --> 29:41.480
这个unit accounts

29:41.480 --> 29:42.480
使用完全一致

29:42.480 --> 29:43.480
就可以了

29:43.480 --> 29:45.480
比如说我们这个抽屉

29:45.480 --> 29:46.480
显示一个抽屉

29:46.480 --> 29:47.480
在这个

29:47.480 --> 29:48.480
我们app

29:48.480 --> 29:49.480
应用里面

29:49.480 --> 29:50.480
是不是经常会看到

29:50.480 --> 29:51.480
这种抽屉效果

29:51.480 --> 29:52.480
然后还有这种uniform

29:52.480 --> 29:53.480
原生支持的

29:53.480 --> 29:54.480
一种表单

29:54.480 --> 29:55.480
它呢

29:55.480 --> 29:56.480
就是可以进行一个

29:56.480 --> 29:57.480
效应

29:57.480 --> 29:58.480
我们刚才说了

29:58.480 --> 29:59.480
如果说

29:59.480 --> 30:00.480
实现案例的时候

30:00.480 --> 30:01.480
我们就可以使用

30:01.480 --> 30:02.480
这种uniform的的

30:02.480 --> 30:03.480
形式来给实现

30:03.480 --> 30:04.480
然后呢

30:04.480 --> 30:05.480
我们这个里面

30:05.480 --> 30:06.480
其实不光是uniform

30:06.480 --> 30:07.480
还有这种

30:07.480 --> 30:09.480
我们对日期的处理

30:09.480 --> 30:10.480
这些

30:10.480 --> 30:11.480
比如说我们unit

30:11.480 --> 30:12.480
谈picker

30:12.480 --> 30:13.480
我们可以将这些

30:13.480 --> 30:14.480
日期

30:14.480 --> 30:15.480
进行一个使用

30:15.480 --> 30:16.480
在我们的这个

30:16.480 --> 30:17.480
案例里面

30:17.480 --> 30:18.480
这个呢

30:18.480 --> 30:19.480
我们同学

30:19.480 --> 30:20.480
先知道一下

30:20.480 --> 30:21.480
就ok

30:21.480 --> 30:22.480
好的这个就是

30:22.480 --> 30:23.480
扩展组件这一块

30:23.480 --> 30:24.480
然后呢

30:24.480 --> 30:25.480
参考地址这一块

30:25.480 --> 30:26.480
你怎么来搜索

30:26.480 --> 30:27.480
其实我在这个里面

30:27.480 --> 30:28.480
它就是

30:28.480 --> 30:29.480
查件市场里面

30:29.480 --> 30:30.480
你根据这个里面的名乘

30:30.480 --> 30:31.480
然后呢

30:31.480 --> 30:32.480
在这个查件市场里面

30:32.480 --> 30:33.480
进行搜索

30:33.480 --> 30:34.480
就可以进行一个

30:34.480 --> 30:35.480
使用

30:35.480 --> 30:36.480
非常的简单

30:37.480 --> 30:38.480
跟这个unit accounts

30:38.480 --> 30:39.480
的使用

30:39.480 --> 30:40.480
是完全一致的

30:40.480 --> 30:41.480
接下来呢

30:41.480 --> 30:42.480
咱们再说一下

30:42.480 --> 30:43.480
自定义组件的使用

30:43.480 --> 30:45.480
那自定义组件

30:45.480 --> 30:47.480
这个如何来进行使用呢

30:47.480 --> 30:49.480
我们首先要创建一个什么

30:49.480 --> 30:50.480
components

30:50.480 --> 30:52.480
然后在他的文件下

30:52.480 --> 30:53.480
下面定义这个

30:53.480 --> 30:54.480
自定义组件

30:54.480 --> 30:56.480
那我们就来实现一下

30:56.480 --> 30:57.480
我们回到

30:57.480 --> 30:58.480
hbo的查之后

30:58.480 --> 30:59.480
在这个里面

30:59.480 --> 31:01.480
新建一个目录

31:01.480 --> 31:02.480
注意一下

31:02.480 --> 31:03.480
是在这个

31:03.480 --> 31:04.480
我们工程的跟目录下面

31:04.480 --> 31:06.480
新建这么一个

31:06.480 --> 31:07.480
component目录

31:07.480 --> 31:09.480
这里面写一下

31:09.480 --> 31:10.480
这个里面

31:10.480 --> 31:12.480
为什么是新建项目了

31:12.480 --> 31:13.480
我这里面点错了

31:13.480 --> 31:15.480
重新给来使用一下

31:15.480 --> 31:16.480
到这里面

31:16.480 --> 31:18.480
新建目录

31:18.480 --> 31:19.480
目录的名字叫

31:19.480 --> 31:20.480
components

31:20.480 --> 31:21.480
OK

31:21.480 --> 31:22.480
那在这里面

31:22.480 --> 31:23.480
我们定义

31:23.480 --> 31:25.480
在这里面有新建组件

31:25.480 --> 31:26.480
以及新建页面

31:26.480 --> 31:27.480
我这里面

31:27.480 --> 31:28.480
选择新建组件

31:28.480 --> 31:29.480
那我

31:29.480 --> 31:30.480
test的component

31:30.480 --> 31:31.480
OK

31:31.480 --> 31:32.480
这个里面就创建完成了

31:32.480 --> 31:33.480
创建完成之后

31:33.480 --> 31:34.480
这里面有

31:34.480 --> 31:35.480
这个模板的选择

31:35.480 --> 31:36.480
我们同样选择

31:36.480 --> 31:37.480
默认模板

31:37.480 --> 31:38.480
这里面

31:38.480 --> 31:39.480
创建同名目录

31:39.480 --> 31:40.480
点击创建

31:40.480 --> 31:41.480
创建好了之后

31:41.480 --> 31:42.480
此时

31:42.480 --> 31:43.480
它就会给我生成

31:43.480 --> 31:44.480
一个test的component

31:44.480 --> 31:45.480
这样一个位文件

31:45.480 --> 31:46.480
然后

31:46.480 --> 31:47.480
并且有一个

31:47.480 --> 31:48.480
同名目录

31:48.480 --> 31:49.480
我这里面

31:49.480 --> 31:50.480
写一下test

31:51.480 --> 31:53.480
component page

31:53.480 --> 31:54.480
OK

31:54.480 --> 31:55.480
那这个

31:55.480 --> 31:56.480
其实我们要做的事情

31:56.480 --> 31:57.480
非常简单

31:57.480 --> 31:58.480
就是在other界面下面

31:58.480 --> 31:59.480
我们给它

31:59.480 --> 32:00.480
进行一个展示

32:00.480 --> 32:01.480
就可以了

32:01.480 --> 32:02.480
怎么办

32:02.480 --> 32:03.480
那我直接的

32:03.480 --> 32:04.480
是否需要引入

32:04.480 --> 32:05.480
跟同学们说一下

32:05.480 --> 32:06.480
我们这种

32:06.480 --> 32:07.480
如果说按规定

32:07.480 --> 32:08.480
在components下面

32:08.480 --> 32:09.480
使用这种

32:09.480 --> 32:10.480
定义组件的形式

32:10.480 --> 32:11.480
那我们直接

32:11.480 --> 32:12.480
就可以使用了

32:12.480 --> 32:13.480
那我这里面

32:13.480 --> 32:14.480
就写一下test的component

32:14.480 --> 32:15.480
OK

32:15.480 --> 32:16.480
此时

32:16.480 --> 32:17.480
它就会给我们

32:17.480 --> 32:18.480
做一个展示

32:18.480 --> 32:19.480
那这时候

32:19.480 --> 32:20.480
我们刷新一些界面

32:20.480 --> 32:21.480
是不是test的component

32:21.480 --> 32:22.480
就出来了

32:22.480 --> 32:23.480
至于组件的

32:23.480 --> 32:24.480
一些其他操作

32:24.480 --> 32:25.480
比如说数据的

32:25.480 --> 32:26.480
传递这一块

32:26.480 --> 32:28.480
和我们的这个view里面

32:28.480 --> 32:29.480
是完全一致的

32:29.480 --> 32:30.480
假如说

32:30.480 --> 32:31.480
我在这个里面

32:31.480 --> 32:32.480
parent

32:32.480 --> 32:34.480
我们写一个parent data

32:34.480 --> 32:35.480
然后我们这里面

32:35.480 --> 32:37.480
写副组件的一个

32:37.480 --> 32:39.480
副组件的一个内容

32:39.480 --> 32:40.480
副组件

32:41.480 --> 32:42.480
OK 我找一下

32:43.480 --> 32:46.480
副组件的一个数据

32:46.480 --> 32:47.480
然后我这里面

32:47.480 --> 32:48.480
给这个

32:48.480 --> 32:50.480
紫组件进行传递

32:50.480 --> 32:51.480
那传递时候

32:51.480 --> 32:52.480
我们使用这种

32:52.480 --> 32:53.480
帽号parent的data

32:53.480 --> 32:54.480
OK 这里面

32:54.480 --> 32:55.480
写一个parent的data

32:55.480 --> 32:56.480
紫组件

32:56.480 --> 32:57.480
假如说

32:57.480 --> 32:58.480
test的component

32:58.480 --> 32:59.480
想接收这个值

32:59.480 --> 33:00.480
怎么办呢

33:00.480 --> 33:01.480
我这里面

33:01.480 --> 33:02.480
就还是同样的

33:02.480 --> 33:03.480
跟我们

33:03.480 --> 33:04.480
vio写法是一样

33:04.480 --> 33:05.480
prox

33:05.480 --> 33:06.480
首先我们定一下

33:06.480 --> 33:07.480
我们需要传递

33:07.480 --> 33:08.480
过来的这个值

33:08.480 --> 33:09.480
叫什么呢

33:09.480 --> 33:10.480
叫parent data

33:10.480 --> 33:12.480
它是一个stream类型

33:12.480 --> 33:14.480
那我就给它添加上

33:14.480 --> 33:15.480
就可以了

33:15.480 --> 33:16.480
然后这个时候

33:16.480 --> 33:18.480
我们就可以进行使用了

33:18.480 --> 33:20.480
这里面写一个text的

33:20.480 --> 33:21.480
sorry

33:23.480 --> 33:26.480
text的接收副组件

33:29.480 --> 33:30.480
副组件

33:30.480 --> 33:33.480
然后是传递的数据

33:33.480 --> 33:34.480
OK

33:34.480 --> 33:35.480
那这里面

33:35.480 --> 33:36.480
我们把这个值

33:36.480 --> 33:37.480
打印出来就可以了

33:37.480 --> 33:38.480
在这里面

33:38.480 --> 33:39.480
就打印一下什么呢

33:39.480 --> 33:41.480
我们的parent

33:41.480 --> 33:42.480
no data

33:42.480 --> 33:43.480
就可以了

33:43.480 --> 33:44.480
来 我们看一眼

33:44.480 --> 33:45.480
此时副组件

33:45.480 --> 33:46.480
传递的数据

33:46.480 --> 33:47.480
OK

33:47.480 --> 33:48.480
这是不是副组件数据

33:48.480 --> 33:49.480
显示过来了

33:49.480 --> 33:50.480
同样的

33:50.480 --> 33:51.480
我们紫组件

33:51.480 --> 33:52.480
给副组件

33:52.480 --> 33:53.480
传递数据

33:53.480 --> 33:54.480
也是通过咱们

33:54.480 --> 33:55.480
经常使用的

33:55.480 --> 33:56.480
Z star

33:56.480 --> 33:57.480
到了一卖的形式

33:57.480 --> 33:58.480
是可以非常快速的

33:58.480 --> 33:59.480
进行数据传递的

33:59.480 --> 34:00.480
在这里面

34:00.480 --> 34:01.480
就不做演示了

34:01.480 --> 34:02.480
那我们这些课

34:02.480 --> 34:04.480
就是把所有的

34:04.480 --> 34:05.480
这三种组件

34:05.480 --> 34:06.480
给同学们

34:06.480 --> 34:07.480
来展示

34:07.480 --> 34:08.480
至于其他一些

34:08.480 --> 34:09.480
比较这个

34:09.480 --> 34:10.480
详细的内容

34:10.480 --> 34:11.480
或者说我们这里面

34:11.480 --> 34:12.480
没有设计到的内容

34:12.480 --> 34:13.480
首先呢

34:13.480 --> 34:14.480
我们在这个案例里面

34:14.480 --> 34:15.480
基本是不会使用到的

34:15.480 --> 34:16.480
也就是说

34:16.480 --> 34:17.480
我们接下来

34:17.480 --> 34:18.480
完成的这个项目

34:18.480 --> 34:19.480
案例里面

34:19.480 --> 34:20.480
然后呢

34:20.480 --> 34:21.480
但是呢

34:21.480 --> 34:22.480
同学们最好是什么呢

34:22.480 --> 34:23.480
我们按着这个

34:23.480 --> 34:24.480
API文的

34:24.480 --> 34:25.480
可以每一个

34:25.480 --> 34:26.480
都去实现一下

34:26.480 --> 34:27.480
这样呢

34:27.480 --> 34:28.480
能更加的

34:28.480 --> 34:29.480
让我们对这种

34:29.480 --> 34:30.480
unitapp

34:30.480 --> 34:31.480
有一个熟悉的过程

34:31.480 --> 34:32.480
好的

34:32.480 --> 34:33.480
那本节课

34:33.480 --> 34:34.480
就到这里

