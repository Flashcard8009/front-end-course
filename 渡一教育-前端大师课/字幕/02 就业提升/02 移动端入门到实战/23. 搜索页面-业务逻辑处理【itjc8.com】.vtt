WEBVTT

00:00.000 --> 00:04.600
各位同学 大家好 这期课我们继续搜索界面的一个制作

00:04.600 --> 00:08.400
那么本节课我们来完成一下剩余的业务逻辑处理部分

00:08.400 --> 00:12.200
怎么来实现我们根据这以下的三个步骤

00:12.200 --> 00:14.600
就来完成整个的一个业务逻辑处理

00:14.600 --> 00:19.700
首先是我们在文本框里面要获取到一个我们输入的文本内容

00:19.700 --> 00:21.700
之后创建一个云寒朔

00:21.700 --> 00:25.600
将我们输入的文本内容传递给我们的云寒朔

00:25.800 --> 00:27.700
云寒朔查询数据库

00:27.700 --> 00:30.300
然后返回给我们一个文章列表

00:30.300 --> 00:33.900
前段在根据云寒朔返回的这个文章列表里面

00:33.900 --> 00:35.600
进行一个数据的渲染

00:35.600 --> 00:38.100
也就是说在界面当中展现出来

00:38.100 --> 00:39.700
ok 这是我们第一部分

00:39.700 --> 00:40.500
那第二部分呢

00:40.500 --> 00:43.500
其实我们知道在整个这个搜索界面里面

00:43.500 --> 00:44.900
我们可以看一下

00:44.900 --> 00:47.700
它的这个搜索界面里面其实是有两部分组成的

00:47.700 --> 00:51.300
第一部分就是刚才我们说的这个文章列表的一个展示

00:51.300 --> 00:54.600
第二部分就是我们保存一个搜索的这个历史

00:54.700 --> 00:56.700
如何来进行搜索历史的保存呢

00:56.700 --> 00:59.000
比如说我这个可以给他做一个清空浪线

01:00.100 --> 01:03.000
我这里面搜索一个内容给同学们看一下

01:03.000 --> 01:05.100
ok 选择中文的搜索啊

01:06.200 --> 01:06.700
直播

01:07.400 --> 01:09.700
当你这个输入完成之后

01:09.700 --> 01:10.500
那这个里面呢

01:10.500 --> 01:12.100
就会给你展示出一条内容

01:12.100 --> 01:14.400
此时如果说你要把这个回退了

01:14.400 --> 01:17.100
但是现在它不会保存这个搜索内容的

01:17.100 --> 01:18.600
如果说我不回推

01:18.600 --> 01:21.300
在这个卡片上我进行一下点击

01:21.300 --> 01:23.100
我们现在是没有做详情界面

01:23.100 --> 01:25.400
但是这个不影响我们点击这个卡片

01:25.900 --> 01:28.600
如果说我们点击完卡片之后再回退

01:28.600 --> 01:30.100
你会发现这时候呢

01:30.100 --> 01:34.900
就会保存了一个刚才我们获取到的这个搜索的这个关键字

01:34.900 --> 01:35.400
然后呢

01:35.400 --> 01:39.900
我还可以根据这个关键字来进行一个指定界面的一个搜索

01:39.900 --> 01:40.500
对不对

01:40.500 --> 01:40.900
然后呢

01:40.900 --> 01:44.500
你看现在我是不是把刚才这个搜索的历史的关键字

01:44.500 --> 01:45.600
给它渲染上去了

01:45.600 --> 01:46.000
之后呢

01:46.000 --> 01:48.600
把这条数据给它展示出来

01:48.600 --> 01:49.000
对不对

01:49.000 --> 01:49.400
这个呢

01:49.400 --> 01:51.900
就是它的一个整个的实现过程啊

01:51.900 --> 01:53.900
那我们一次的就来实现一下

01:53.900 --> 01:54.400
首先呢

01:54.400 --> 01:56.000
我们先实现第一部分内容

01:56.000 --> 01:58.300
就是获取到它的这个输入内容

01:58.300 --> 01:58.900
之后呢

01:58.900 --> 02:01.900
我们来把这个文章的列表做一个展示

02:02.900 --> 02:03.600
怎么来做

02:03.600 --> 02:04.200
其实呢

02:04.200 --> 02:07.100
我们可以跟这个现在已经完成的一样

02:07.100 --> 02:07.700
ok

02:07.700 --> 02:10.700
比如说这里面搜索一个直播啊

02:10.700 --> 02:12.700
那这里面我们搜索一个直播

02:12.700 --> 02:13.300
那这时候呢

02:13.300 --> 02:14.100
就给我们展示

02:14.100 --> 02:14.600
但是呢

02:14.600 --> 02:15.100
这种啊

02:15.100 --> 02:16.300
体验感不是特别好

02:16.300 --> 02:17.700
一般的我们的做法是什么呢

02:17.700 --> 02:19.800
比如说在这种移动应用里面

02:19.800 --> 02:21.400
我们要做的时候

02:21.400 --> 02:22.900
上面输入内容之后

02:22.900 --> 02:23.800
我们右下角

02:23.800 --> 02:25.400
也就是说这个软件盘里面

02:25.400 --> 02:27.900
一定是有一个什么搜索按钮的

02:27.900 --> 02:30.800
在这里可以打开模拟器给同学们看一下

02:30.800 --> 02:32.700
我们看到这个iphone的模拟器

02:32.700 --> 02:34.700
如果说当我在这个里面

02:34.700 --> 02:36.500
写入完文字之后

02:36.500 --> 02:38.100
那这里面是不是有一个按钮啊

02:38.100 --> 02:38.600
对不对

02:38.600 --> 02:40.800
那我这按钮是不是就可以点击

02:40.800 --> 02:41.600
点击的时候

02:41.600 --> 02:42.700
我们来进行搜索

02:42.700 --> 02:44.600
是不是这样体验感会更好一些

02:44.600 --> 02:45.000
对吧

02:45.000 --> 02:45.400
所以说呢

02:45.400 --> 02:47.700
我们就实现一个这种啊

02:47.700 --> 02:48.600
那怎么来做

02:48.600 --> 02:49.200
这个里面

02:49.200 --> 02:52.500
就要去查询Input的这个API了

02:52.500 --> 02:54.000
在这里也给同学们写上啊

02:54.000 --> 02:55.600
这里面有一个他的文档

02:55.600 --> 02:57.500
我们可以打开查看一下

02:57.500 --> 02:57.900
这个呢

02:57.900 --> 03:00.200
就是他的这个文档地址里面

03:00.200 --> 03:02.900
有一些需要我们使用到的属性

03:02.900 --> 03:03.400
首先呢

03:03.400 --> 03:04.300
我们来看一下

03:04.300 --> 03:06.200
这里面有一个confirm type

03:06.200 --> 03:08.300
这confirm type是干嘛呢

03:08.300 --> 03:11.200
设置键盘右下角的一个按钮的文字

03:11.200 --> 03:13.400
现在我们看到的是一个down

03:13.400 --> 03:15.100
也就是说它默认的

03:15.100 --> 03:15.900
那我这里面

03:15.900 --> 03:17.000
既然是搜索功能

03:17.000 --> 03:18.700
所以说我想让它变成什么

03:18.700 --> 03:20.200
search或者搜索对不对

03:20.200 --> 03:21.500
如果说你英文版本

03:21.500 --> 03:23.300
那你就是search中文版本呢

03:23.300 --> 03:24.500
那就变成搜索

03:24.500 --> 03:25.400
那这个咋办

03:25.400 --> 03:27.000
我直接给天上就ok了

03:27.000 --> 03:29.200
这个里面放在这

03:29.200 --> 03:34.000
第一个属性confirm type等于我们的search

03:34.000 --> 03:35.900
ok这个就搞定了

03:35.900 --> 03:36.900
搞定之后

03:36.900 --> 03:38.900
那我们继续来看

03:38.900 --> 03:39.800
首先来看一下

03:39.800 --> 03:41.500
他这个改没改变啊

03:41.500 --> 03:43.700
如果说你这个绑定之后

03:43.700 --> 03:45.800
那我们再一次点击进入的时候

03:45.800 --> 03:46.900
到这个里面

03:47.000 --> 03:48.800
你会发现这里面是不是search了

03:48.800 --> 03:49.400
对不对

03:49.400 --> 03:51.600
那此时他就发生了一个改变

03:51.600 --> 03:52.700
然后再次点击

03:52.700 --> 03:54.400
ok这时候就可以搜索了

03:54.400 --> 03:55.300
那你再次点击

03:55.300 --> 03:56.200
触发这个事件

03:56.200 --> 03:57.600
你是不是还得找到对吧

03:57.600 --> 03:59.200
这个事件是哪一个

03:59.200 --> 03:59.800
往下走

03:59.800 --> 04:02.400
这里面找到一个indconfirm

04:02.400 --> 04:03.400
confirm是干嘛的

04:03.400 --> 04:05.300
点击完成按钮时触发

04:05.300 --> 04:07.500
这里面有一个event点几套

04:07.500 --> 04:09.600
可以获取到他的内容

04:09.600 --> 04:10.300
我们这个

04:10.300 --> 04:11.700
其实不需要他的这个

04:11.700 --> 04:13.400
默认给我们的这个行参

04:13.400 --> 04:15.500
我们只需要让他这个

04:15.500 --> 04:17.400
在我们点击搜索按钮的时候

04:17.400 --> 04:18.900
触发就ok了

04:18.900 --> 04:19.700
在这个里面

04:19.700 --> 04:21.700
我们回到代码里面

04:21.700 --> 04:22.500
找到什么

04:23.300 --> 04:25.600
找到标权在这里面添加一下

04:25.600 --> 04:26.800
爱的confirm

04:26.800 --> 04:29.000
confirm我们添加一个什么事件

04:29.000 --> 04:32.100
比如说change这里面给他一个

04:32.100 --> 04:34.300
input的事件ok

04:34.300 --> 04:35.900
把这个事件就定一下

04:35.900 --> 04:38.100
在这个mys2的下面

04:38.100 --> 04:41.000
我们直接的在这个里面写一下

04:41.000 --> 04:43.300
change inputok

04:43.300 --> 04:44.800
change input我们要做点啥

04:44.800 --> 04:45.600
其实在这个里面

04:45.600 --> 04:47.900
他们人会给我们返回这个

04:47.900 --> 04:48.700
一个value值

04:48.700 --> 04:51.200
也就是说我们当前输入的这个内容

04:51.200 --> 04:51.700
但是呢

04:51.700 --> 04:53.000
我现在不想需要他

04:53.000 --> 04:54.200
为啥不想需要他呢

04:54.200 --> 04:57.700
我只想通知我们的这个附容器

04:57.700 --> 05:01.000
也就是说咱们的这个search page找到他

05:01.000 --> 05:04.400
找到page下面的search.will

05:04.400 --> 05:07.300
我只希望他通知这个里面

05:07.300 --> 05:10.600
现在我开始做这个搜索就可以了

05:10.600 --> 05:12.300
为什么你不要这个值

05:12.300 --> 05:13.400
因为这个值呢

05:13.400 --> 05:14.800
我想实现一个什么呢

05:14.800 --> 05:17.800
附 附组件里面的一个数据

05:17.800 --> 05:20.700
跟紫组件输入的这个内容的一个关联

05:20.700 --> 05:22.500
那这样做的原因是因为啥

05:22.500 --> 05:25.100
因为其实我们要实现这个功能

05:25.100 --> 05:26.100
这里面有一个步骤

05:26.100 --> 05:28.500
不知道同学们看没看

05:28.500 --> 05:29.600
在这个清空之后

05:29.600 --> 05:31.300
这里面是不是有一个直播啊

05:31.300 --> 05:33.500
那如果说你单纯的在这个里面

05:33.500 --> 05:34.800
我们直接在123

05:34.800 --> 05:36.200
然后呢就获取内容ok

05:36.200 --> 05:37.300
可以没问题

05:37.300 --> 05:38.000
但是呢

05:38.000 --> 05:39.000
你现在啊

05:39.000 --> 05:41.800
假如说你从附组件里面点击这个直播

05:41.800 --> 05:42.500
你会发现啊

05:42.500 --> 05:43.800
紫组件里面这个内容

05:43.800 --> 05:45.300
是不是也跟着发生坑干了

05:45.300 --> 05:45.900
对不对

05:45.900 --> 05:46.500
那这个呢

05:46.500 --> 05:49.900
其实就是一个附组件的一个双向数据绑定

05:49.900 --> 05:50.500
那这个呢

05:50.500 --> 05:51.800
我们怎么来做

05:51.800 --> 05:53.700
就得首先保证你这个值

05:53.700 --> 05:56.100
一定要跟附组件里面的某一个值

05:56.100 --> 05:58.700
形成一种关联才ok的

05:58.700 --> 05:59.200
所以说

05:59.200 --> 06:02.200
那我们在这个nvbar调用的时候

06:02.200 --> 06:02.600
其实呢

06:02.600 --> 06:03.200
这个里面

06:03.200 --> 06:05.400
我们是需要给他传递一个值的

06:05.400 --> 06:07.000
那我们先来实现一下

06:07.000 --> 06:07.500
首先呢

06:07.500 --> 06:10.700
我们在这个set value nvbar使用的时候

06:10.700 --> 06:11.400
在这个里面

06:11.400 --> 06:12.000
对不对

06:12.000 --> 06:14.000
有一个 is set 属性

06:14.000 --> 06:14.600
那其实呢

06:14.600 --> 06:16.200
我们这里面还会给他一个

06:16.200 --> 06:18.400
比如说叫parent value

06:19.800 --> 06:20.300
ok

06:20.300 --> 06:22.400
给他一个parent

06:22.400 --> 06:23.400
减写像就可以啊

06:23.400 --> 06:25.100
parent value等于一个值

06:25.100 --> 06:25.800
那这个值呢

06:25.800 --> 06:28.600
我也叫parent value就可以了

06:28.600 --> 06:29.000
好的

06:29.000 --> 06:29.700
那这个呢

06:29.700 --> 06:30.600
我们定一下

06:30.600 --> 06:31.700
parent value出的话

06:31.700 --> 06:32.800
肯定是没有值的对吧

06:32.800 --> 06:34.100
那我再这样定一下

06:34.100 --> 06:34.600
ok

06:34.600 --> 06:37.300
parent value给他一个空

06:37.300 --> 06:38.400
出使化之空

06:38.400 --> 06:38.900
然后呢

06:38.900 --> 06:40.000
你既然传过去了

06:40.000 --> 06:41.100
我就在这个里面

06:41.100 --> 06:44.400
接一下parent value

06:44.400 --> 06:45.300
ok

06:45.300 --> 06:46.700
那这个值是一个啥呢

06:46.700 --> 06:49.500
这个值就是应该一个死坠影类像

06:49.500 --> 06:49.700
对吧

06:49.700 --> 06:51.900
那我直接就给他添加上

06:51.900 --> 06:52.500
至于说

06:52.500 --> 06:54.500
他有没有这个就是默认值啊

06:54.500 --> 06:55.500
其实这个里面啊

06:55.500 --> 06:56.500
没有啥默认值

06:56.500 --> 06:58.900
因为他直接的出使化传过来的时候

06:58.900 --> 06:59.800
就是一个空数不串

06:59.800 --> 07:00.800
是不是就可以了

07:00.800 --> 07:02.200
那这个值直接往宣染吗

07:02.200 --> 07:03.100
其实不是啊

07:03.100 --> 07:04.600
你也不需要马上直接宣染

07:04.600 --> 07:05.900
因为我们都知道

07:05.900 --> 07:06.700
我们这个里面

07:06.700 --> 07:07.200
input

07:07.200 --> 07:08.400
可以绑定一个什么呢

07:08.400 --> 07:09.400
vgum model

07:10.300 --> 07:11.000
对吧

07:11.000 --> 07:12.000
vgum model

07:12.000 --> 07:13.200
我们这里面绑定一下

07:13.200 --> 07:14.800
比如说这里面有一个人呢

07:14.800 --> 07:16.800
有一个我们输入的

07:17.500 --> 07:18.900
search value

07:18.900 --> 07:19.500
ok

07:19.500 --> 07:20.600
那这个search value呢

07:20.600 --> 07:22.200
一会我就来定一下就可以啊

07:22.200 --> 07:23.400
因为我们在输入的时候

07:23.400 --> 07:24.500
防止用户

07:24.500 --> 07:26.200
他加一个什么控制

07:26.200 --> 07:27.800
他所有时候用一个

07:27.800 --> 07:29.000
我们的这个修制服务

07:29.000 --> 07:30.500
trim给来处理一下

07:30.500 --> 07:32.000
这个search value

07:32.000 --> 07:32.800
怎么来做

07:32.800 --> 07:34.200
它呢是一个关键啊

07:34.200 --> 07:35.800
我们在这个里面做的时候

07:35.800 --> 07:37.500
比如说这是买search的对不对

07:37.500 --> 07:39.700
我们在买search的的一个下面

07:40.700 --> 07:41.500
找到他

07:42.900 --> 07:44.500
找到我们买search的下面

07:44.500 --> 07:47.500
我们使用一个computed

07:47.500 --> 07:48.700
因为这个在我们学位

07:48.700 --> 07:50.000
有的时候都学过啊

07:50.000 --> 07:51.800
我们里面有一个什么呢

07:51.800 --> 07:53.800
我们把这个search value定一下

07:53.800 --> 07:54.900
这个呢不定一函数

07:54.900 --> 07:55.900
我们定一个对象

07:55.900 --> 07:58.400
对象里面就可以使用这种guide

07:58.400 --> 07:59.000
然后呢

07:59.000 --> 08:00.900
还会有一个什么set

08:00.900 --> 08:01.500
对不对

08:01.500 --> 08:03.400
set里面就可以接收到

08:03.400 --> 08:04.600
我这个search value

08:04.600 --> 08:06.300
输入的这个内容

08:06.300 --> 08:07.000
那这个里面

08:07.000 --> 08:09.100
首先我出日画的时候

08:09.100 --> 08:10.300
比如说他要获取值

08:10.300 --> 08:10.900
那我就把

08:10.900 --> 08:13.000
复物容器这个parent value给的

08:13.000 --> 08:13.600
对不对

08:13.600 --> 08:15.800
如果说你要是设置值的时候

08:15.800 --> 08:17.300
那我在这个里面再处理一下

08:17.300 --> 08:18.200
是不是就可以了

08:18.200 --> 08:19.000
那我这一次点

08:19.000 --> 08:21.500
dollar imat给你发送一下

08:21.500 --> 08:22.300
我们这里面啊

08:22.300 --> 08:24.300
可以指定一个事件

08:24.300 --> 08:26.900
这里面叫update value

08:26.900 --> 08:29.400
ok把这个我们获取到的这个value

08:29.400 --> 08:29.900
也就是说

08:29.900 --> 08:31.100
当前输入的这个内容

08:31.100 --> 08:32.900
给他传过去就可以了

08:32.900 --> 08:33.700
update value

08:33.700 --> 08:35.700
那我在这个服务组件里面

08:35.700 --> 08:37.700
来进行一下定义啊

08:37.700 --> 08:39.000
也就是说监听

08:39.000 --> 08:41.300
at update value等于什么呢

08:41.300 --> 08:42.500
我们在这个里面

08:42.500 --> 08:44.700
把parent value给他做一个修改

08:44.700 --> 08:48.600
parent value等于我们的dollar event

08:48.600 --> 08:50.000
那这样是不是副组件的

08:50.000 --> 08:50.900
这个parent value

08:50.900 --> 08:53.300
跟我们自组件的这个set value

08:53.300 --> 08:55.300
他们就形成了一个绑定关系

08:55.300 --> 08:55.800
对吧

08:55.800 --> 08:58.200
我们可以来看一下啊

08:58.200 --> 08:59.400
回到我们这个里面

08:59.400 --> 09:00.700
到这个view里面

09:00.700 --> 09:02.400
来进行一下查看

09:02.400 --> 09:04.000
我们先要找到这个

09:04.000 --> 09:05.400
page in nice

09:05.400 --> 09:06.300
page search

09:06.300 --> 09:07.900
ok我重新来一下啊

09:07.900 --> 09:09.000
找到他

09:09.000 --> 09:10.200
找到他之后

09:10.200 --> 09:12.600
这里面有一个page search

09:12.600 --> 09:14.900
ok这里面有一个

09:14.900 --> 09:16.300
应该是有一个parent value

09:16.300 --> 09:16.900
对吧

09:16.900 --> 09:18.900
然后里面还会有一个什么

09:18.900 --> 09:20.500
还会有一个env bar

09:20.500 --> 09:21.500
我们先看这

09:21.500 --> 09:23.400
这里面123

09:23.400 --> 09:24.300
哎刷新一下

09:24.300 --> 09:25.100
咱们再试一下

09:25.100 --> 09:26.900
重新的刷新一下

09:26.900 --> 09:28.000
刷新一下

09:28.000 --> 09:30.000
找到这个page search

09:30.000 --> 09:31.700
这里面有一个parent value

09:31.700 --> 09:32.700
我们来看一下

09:32.700 --> 09:33.900
123

09:33.900 --> 09:35.100
此时他是不是就有了

09:35.100 --> 09:35.600
对吧

09:35.600 --> 09:36.400
有了之后呢

09:36.400 --> 09:39.100
其实我们看这个里面啊

09:39.100 --> 09:39.800
他们之间呢

09:39.800 --> 09:43.500
就能形成一种关联了展开

09:43.500 --> 09:45.900
展开之后这个env bar

09:45.900 --> 09:47.000
到这个env bar里面

09:47.000 --> 09:48.300
我们看parent value

09:48.300 --> 09:49.300
是不是123

09:49.300 --> 09:51.200
然后他的这个set value

09:51.200 --> 09:52.500
最主要的我们看一下

09:52.500 --> 09:53.700
这个set value

09:53.700 --> 09:55.000
你是不是也是123

09:55.000 --> 09:56.200
如果说我修改某一方

09:56.200 --> 09:58.200
那是不是这个职业会发生更改

09:58.200 --> 10:00.500
比如说我们到这个

10:00.500 --> 10:02.300
他的副组件里面

10:02.300 --> 10:03.700
page search parent里面

10:03.700 --> 10:05.500
我说一个Hello world

10:05.500 --> 10:08.570
咱们可以看一下

10:08.570 --> 10:09.670
ok修改一下

10:09.670 --> 10:10.270
Hello world

10:10.270 --> 10:11.170
这个是不是也改了

10:11.170 --> 10:12.670
那整个就形成一个关联

10:12.670 --> 10:14.170
那这样做的好处是啥

10:14.170 --> 10:15.670
其实一会我们点击底线

10:15.670 --> 10:17.470
比如说这里面直播干掉

10:17.470 --> 10:18.170
我点击底线

10:18.170 --> 10:20.170
上面自动也实现一个什么

10:20.170 --> 10:21.470
实现一个内容的获取

10:21.470 --> 10:21.870
并且呢

10:21.870 --> 10:24.570
我们还可以进行一个数据的这个发送

10:24.570 --> 10:24.970
触发

10:24.970 --> 10:25.770
是不是都可以了

10:25.770 --> 10:26.270
对吧

10:26.270 --> 10:27.870
那这个是我们的第一步啊

10:27.870 --> 10:30.370
就是将我们的这个值给传递过去了

10:30.370 --> 10:31.170
然后呢

10:31.170 --> 10:32.170
传递过去之后

10:32.170 --> 10:33.870
他们就实现了一个双向往定

10:33.870 --> 10:35.070
那你双向往定完成之后

10:35.070 --> 10:36.670
咱们记忆去接下来

10:36.670 --> 10:38.170
要做什么呢

10:38.170 --> 10:39.370
其实我们看啊

10:39.370 --> 10:40.670
我们最后触发的时候

10:40.670 --> 10:42.270
是从这个趁着引迫的

10:42.270 --> 10:42.870
对不对

10:42.870 --> 10:46.470
然后这个是就是通知副组价

10:47.470 --> 10:51.670
进行一个搜索内容的一个查询

10:51.670 --> 10:53.670
其实查询就是要获取数据了

10:53.670 --> 10:54.170
对吧

10:54.170 --> 10:56.070
那我这里面就再来一个试验啊

10:56.070 --> 10:57.470
再来一个什么自定试验呢

10:57.470 --> 10:59.270
我这里面就可以写一下

10:59.270 --> 11:02.970
这次点dollar emat还是发送

11:02.970 --> 11:03.470
这个呢

11:03.470 --> 11:08.440
我发送一个send search data啊

11:08.440 --> 11:09.140
ok

11:09.140 --> 11:09.940
把这个事件

11:09.940 --> 11:11.840
我们再做一个坚定

11:11.840 --> 11:12.840
到我们这个里面

11:12.840 --> 11:15.040
找到他send search data

11:15.040 --> 11:17.140
前面加一个爱的符

11:17.140 --> 11:17.740
ok

11:17.740 --> 11:18.440
在这个里面

11:18.440 --> 11:21.240
爱的send search data

11:21.240 --> 11:22.640
然后呢等于

11:22.640 --> 11:24.940
那这里面直接来写一下就可以了

11:24.940 --> 11:25.540
对吧

11:25.540 --> 11:26.940
那我直接的在这个里面

11:26.940 --> 11:28.640
因为他是会有请求

11:28.640 --> 11:30.540
所以说是个下方线啊

11:30.540 --> 11:31.940
send search data

11:31.940 --> 11:32.640
ok

11:32.640 --> 11:33.440
找到他

11:33.440 --> 11:35.640
找到他之后来做一个定义

11:35.640 --> 11:37.440
sink send search data

11:37.440 --> 11:40.940
然后呢这个就是发送数据到后段啊

11:40.940 --> 11:44.140
发送数据到云寒树

11:44.140 --> 11:44.840
ok

11:44.840 --> 11:46.640
嗯在这里面来定一下

11:46.640 --> 11:51.240
concept is等于一个await

11:51.240 --> 11:53.140
那这个await里面写点啥呢

11:53.140 --> 11:54.640
其实咱们没有这个云寒树了

11:54.640 --> 11:54.840
对吧

11:54.840 --> 11:56.440
那我一会再定义就可以

11:56.440 --> 11:58.240
这次点dollarhttp

11:58.240 --> 11:59.240
然后这个里面

11:59.240 --> 12:01.940
其实是一个什么获取数据的请求

12:01.940 --> 12:02.240
对吧

12:02.240 --> 12:07.240
那我就写一个get search data

12:07.240 --> 12:07.640
ok

12:07.640 --> 12:09.140
那这里面肯定得传指啊

12:09.140 --> 12:10.840
那我把这个什么传过去呢

12:10.840 --> 12:12.240
就是我们这个set value

12:12.240 --> 12:13.740
因为他们俩已经实现关联了

12:13.740 --> 12:14.240
对不对

12:14.240 --> 12:17.240
那我直接的就把这个set value

12:17.240 --> 12:19.340
给他传过去啊

12:19.340 --> 12:19.940
ok

12:19.940 --> 12:21.240
set value传过去

12:21.240 --> 12:24.340
就是这一次点parant value

12:24.340 --> 12:24.840
好的

12:24.840 --> 12:25.940
那创建完成之后

12:25.940 --> 12:28.040
咱们就来到阿加克斯里面

12:28.040 --> 12:30.040
一步一步的来实现一下

12:30.040 --> 12:31.540
首先找到interface

12:31.540 --> 12:33.340
这个呢应该属于我们

12:33.340 --> 12:34.340
手页面的

12:34.340 --> 12:35.540
那我就放在这个里面

12:35.540 --> 12:36.540
这个叫什么呢

12:36.640 --> 12:40.740
获取搜索文章内容

12:40.740 --> 12:44.340
获取搜索文章内容

12:44.340 --> 12:47.660
订一下

12:47.660 --> 12:51.140
export

12:51.140 --> 12:52.940
这里面Const

12:52.940 --> 12:54.140
get search data

12:54.140 --> 12:55.740
等于一个data

12:55.740 --> 12:56.540
ok

12:56.540 --> 13:00.140
然后这里面是有一个阿加克斯

13:00.140 --> 13:00.740
内幕

13:00.740 --> 13:02.340
内幕其实和我们这个名字

13:02.340 --> 13:03.440
是完全一致就可以

13:03.440 --> 13:05.140
也就是说云寒树的名字

13:05.140 --> 13:07.140
这里面再订一个data

13:07.140 --> 13:08.040
创建好了之后

13:08.040 --> 13:08.940
那我在这个里面

13:08.940 --> 13:10.640
就订一个云寒树啊

13:10.640 --> 13:12.440
订云寒树在这个里面

13:12.440 --> 13:14.340
新建云寒树

13:14.340 --> 13:15.840
这个叫get search data

13:15.840 --> 13:16.840
ok

13:16.840 --> 13:17.540
放在这里面

13:17.540 --> 13:18.740
创建完成之后

13:18.740 --> 13:19.640
其实get search data

13:19.640 --> 13:20.840
你想一下它要做什么

13:20.840 --> 13:22.140
也是获取文章列表

13:22.140 --> 13:22.740
对吧

13:22.740 --> 13:23.840
那这个获取文章列表

13:23.840 --> 13:24.540
其实呢

13:24.540 --> 13:25.640
和我们这个

13:25.640 --> 13:27.440
get article list的非常像

13:27.440 --> 13:28.740
那我们就调整一下这个

13:28.740 --> 13:29.640
是不是就可以了

13:29.640 --> 13:30.240
对吧

13:30.240 --> 13:32.140
我们为了这个方便处理啊

13:32.140 --> 13:33.240
直接给它粘贴过来

13:33.240 --> 13:34.640
然后调整一下

13:34.640 --> 13:35.740
首先有一些东西啊

13:35.740 --> 13:36.940
咱们是不需要的

13:36.940 --> 13:37.540
那第一个呢

13:37.540 --> 13:39.240
是获取我们数据库的引用

13:39.240 --> 13:41.340
这个我们肯定需要

13:41.340 --> 13:42.640
然后参数这一块

13:42.640 --> 13:43.740
那就得改不改了

13:43.740 --> 13:44.340
对不对

13:44.340 --> 13:46.140
参数这一块怎么改呢

13:46.140 --> 13:48.140
首先我们来接收的

13:48.140 --> 13:49.140
现在传递过来的

13:49.140 --> 13:49.940
应该叫什么

13:49.940 --> 13:50.940
叫search value

13:50.940 --> 13:51.540
对吧

13:51.540 --> 13:52.040
所以说

13:52.040 --> 13:53.240
那我把这个里面

13:53.240 --> 13:53.940
这几个啊

13:53.940 --> 13:55.540
都给它干掉啊

13:55.540 --> 13:56.440
也就是说不要了

13:56.440 --> 13:56.840
不要了

13:56.840 --> 13:58.740
换成一个search value

13:58.740 --> 14:00.140
然后这个匹配对象

14:00.140 --> 14:01.140
因为特别少

14:01.140 --> 14:01.740
对吧

14:01.740 --> 14:02.740
那我们直接的

14:02.740 --> 14:03.640
也不要它了

14:03.640 --> 14:04.640
也不要它之后

14:04.640 --> 14:05.940
我们再来做

14:05.940 --> 14:07.740
查询到我们的这个文章

14:08.440 --> 14:09.640
然后使用聚合

14:09.640 --> 14:11.740
match这里面是的匹配

14:11.740 --> 14:12.540
匹配呢

14:12.540 --> 14:13.940
因为我们这个查询的时候

14:13.940 --> 14:14.940
咱们可以看一下

14:14.940 --> 14:17.140
这个文章的里面的内容啊

14:17.140 --> 14:19.440
我们打开这个

14:19.440 --> 14:21.040
uniclode web控制台

14:22.240 --> 14:22.840
到这个里面

14:22.840 --> 14:25.040
我们进行一下查看

14:25.040 --> 14:26.640
找到我们的这个article里面

14:26.640 --> 14:28.940
其实我们得根据一些关键字搜索

14:28.940 --> 14:29.440
对吧

14:29.440 --> 14:30.540
根据啥关键字呢

14:30.540 --> 14:32.140
它那个文章里面内容

14:32.140 --> 14:33.440
比如说我们根据证文

14:33.440 --> 14:34.740
那证文我们也不返回啊

14:34.740 --> 14:35.140
并且呢

14:35.140 --> 14:36.340
证文里面内容特别多

14:36.340 --> 14:36.940
对吧

14:36.940 --> 14:38.240
我们就可以根据这个

14:38.240 --> 14:40.040
title字段来做一个处理

14:40.040 --> 14:40.840
也就是说

14:40.840 --> 14:43.740
我们通过title来进行一个查询

14:43.740 --> 14:44.440
就ok了

14:45.640 --> 14:47.840
那我在这个match里面匹配的时候

14:47.840 --> 14:48.840
应该是匹配上

14:50.040 --> 14:52.140
直接匹配这个title就可以了

14:52.140 --> 14:52.540
哎呀

14:52.540 --> 14:53.840
这怎么沾到哪去了

14:53.840 --> 14:54.440
对吧

14:54.440 --> 14:56.040
直接在这里面写下面title

14:57.240 --> 14:57.540
ok

14:57.540 --> 14:58.640
title怎么匹配呢

14:58.640 --> 14:59.140
这个里面

14:59.140 --> 15:01.740
我们就需要有一个什么模糊匹配了

15:01.740 --> 15:03.540
那我们可以使用这种

15:03.540 --> 15:04.540
和mongles

15:04.540 --> 15:06.940
完全一致的rege exp

15:06.940 --> 15:08.240
这种形式

15:08.240 --> 15:10.640
给它来做一个匹配啊

15:10.640 --> 15:11.240
然后呢

15:11.240 --> 15:14.340
把我们传过去的这个search value

15:14.340 --> 15:15.640
给它添加进去

15:15.640 --> 15:16.640
是不是这样就可以了

15:16.640 --> 15:17.240
对吧

15:17.240 --> 15:18.940
那这个是根据匹配条件

15:18.940 --> 15:21.040
进行一个数据返回

15:21.040 --> 15:21.340
这个呢

15:21.340 --> 15:22.440
我们要清楚一下

15:22.440 --> 15:23.440
这个是new reg

15:23.440 --> 15:24.840
是模糊查询

15:25.840 --> 15:26.640
只要你包含

15:26.640 --> 15:28.340
那我就给你返回就可以了

15:28.340 --> 15:29.140
project呢

15:29.140 --> 15:31.040
同样的是我们的这个内容

15:31.040 --> 15:31.640
不返回

15:31.640 --> 15:32.040
对吧

15:32.040 --> 15:33.240
因为内容比较多

15:33.240 --> 15:36.140
然后这个其实是没有必要做分页的

15:36.140 --> 15:37.840
查询的内容也不会特别多

15:37.840 --> 15:38.240
对吧

15:38.240 --> 15:40.440
所以说我们就把这个分页干掉了

15:40.440 --> 15:42.940
把这个skype和limit都给它干掉

15:42.940 --> 15:43.440
之后呢

15:43.440 --> 15:45.040
数量我们也不要了

15:45.040 --> 15:45.640
对吧

15:45.640 --> 15:47.140
没有必要要这个数量了

15:48.440 --> 15:49.440
这个里面

15:49.440 --> 15:50.340
data的时候

15:50.340 --> 15:52.640
我只要一个article list

15:52.640 --> 15:53.640
是不是就可以了

15:53.640 --> 15:54.240
也就是说

15:54.240 --> 15:56.240
你把这个给我返回就行了

15:56.240 --> 15:57.040
返回的时候

15:57.040 --> 15:58.640
那我这头接的时候

15:58.640 --> 16:01.040
这个里面应该是加一个什么

16:01.040 --> 16:02.440
把它给做一个解构

16:02.440 --> 16:03.240
是不是就可以了

16:03.240 --> 16:06.040
然后直接的我在这里面打印一下

16:06.040 --> 16:09.440
打印一个article list的获取到内容

16:09.440 --> 16:10.840
如果说我搜索点击

16:10.840 --> 16:12.240
直接在这些都搞定之后

16:12.240 --> 16:13.940
那我直接的这个是不是就成功了

16:13.940 --> 16:14.540
对吧

16:14.540 --> 16:15.440
为了方便查看

16:15.440 --> 16:17.940
我们还是回到这个浏览器里面

16:17.940 --> 16:19.040
回到浏览器怎么办

16:19.040 --> 16:21.540
比如说现在我们这个是点击确定

16:21.540 --> 16:22.540
然后才可以呢

16:22.540 --> 16:24.040
其实我们这个回车

16:24.040 --> 16:26.040
在这个谷歌浏览器里面

16:26.040 --> 16:27.440
我们回车就是模拟了

16:27.440 --> 16:30.140
底线软件盘的一个确定输入

16:30.140 --> 16:31.240
我这里面来试一下

16:31.240 --> 16:32.440
123一挥车

16:33.640 --> 16:34.940
ok 123一挥车

16:34.940 --> 16:36.240
那这没有内容对吧

16:36.240 --> 16:37.540
没有内容代表啥意思

16:37.540 --> 16:39.340
那就没搜索到内容的

16:39.340 --> 16:40.640
这里面我们可以看一下

16:40.640 --> 16:42.940
preview 123啥没有对吧

16:42.940 --> 16:43.940
那啥没有咋办

16:43.940 --> 16:44.540
啥没有

16:44.540 --> 16:46.140
其实这个里面就显示

16:46.140 --> 16:47.340
没有搜索到相关数据

16:47.340 --> 16:48.240
对吧

16:48.240 --> 16:50.540
如果说我这个121一挥车

16:50.540 --> 16:51.640
你再看一下

16:51.640 --> 16:52.240
此时呢

16:52.240 --> 16:53.640
这里面找数据了

16:53.640 --> 16:55.540
并且这里面返回了三条数据

16:55.540 --> 16:56.840
也就是说这个里面

16:56.840 --> 16:58.940
有三个都包含这个关键字

16:58.940 --> 17:01.440
然后直接的这里面有一个

17:01.440 --> 17:02.240
1的关键字

17:02.240 --> 17:03.040
我们可以看一下

17:03.040 --> 17:04.840
4月17号

17:04.840 --> 17:06.540
17是不是包含了一个1

17:06.540 --> 17:07.840
然后接下来这个里面

17:07.840 --> 17:10.240
应该还有1s10

17:10.240 --> 17:10.540
哎

17:10.540 --> 17:11.740
10是不是有一个1

17:11.740 --> 17:12.240
对吧

17:12.240 --> 17:12.840
那这个里面

17:12.840 --> 17:15.240
其实它就是包含内容了

17:15.240 --> 17:16.440
那包含内容咋办

17:16.440 --> 17:16.940
包含内容

17:16.940 --> 17:18.740
那我们直接就来给他做一个复职

17:18.740 --> 17:19.540
就可以了

17:19.540 --> 17:21.140
咱们这里面有一个set list的吗

17:21.140 --> 17:24.240
直接的为这个set list的复职就ok了

17:24.240 --> 17:25.940
所以说在这个里面

17:25.940 --> 17:27.640
你给他解构出来之后

17:27.640 --> 17:29.340
那我们直接的可以

17:29.340 --> 17:31.940
再一次点一个set list的

17:31.940 --> 17:34.440
等于我们的这个article list

17:34.440 --> 17:37.040
ok定义完成之后

17:37.040 --> 17:38.440
那这里面就搞定了

17:39.640 --> 17:40.540
搞定了之后

17:40.540 --> 17:41.840
那我这个set list的

17:41.840 --> 17:43.440
其实就应该可以演渲了

17:43.440 --> 17:45.340
因为这里面list的item

17:45.340 --> 17:46.140
是不是整个的

17:46.140 --> 17:47.340
如果说你有长度

17:47.340 --> 17:48.240
那就显示这个

17:48.240 --> 17:50.740
否则那你就展示没有相关数据

17:50.740 --> 17:51.140
对不对

17:51.140 --> 17:51.840
那我们来试一下

17:51.840 --> 17:52.940
看行不行啊

17:52.940 --> 17:54.140
刷新一下界面

17:54.140 --> 17:54.540
然后呢

17:54.540 --> 17:55.540
我们重新搜索

17:56.540 --> 17:58.440
这个里面按一下回车

17:58.440 --> 17:59.340
此时你看啊

17:59.340 --> 18:01.640
他这个里面显示正在夹载

18:01.640 --> 18:03.340
那正在夹载这是啥意思

18:03.340 --> 18:04.240
那就说明

18:04.240 --> 18:05.040
这个里面

18:05.040 --> 18:06.540
肯定是有内容返回了

18:06.540 --> 18:07.040
对不对

18:07.040 --> 18:07.540
要不然

18:07.540 --> 18:08.740
因为这个是属于谁

18:08.740 --> 18:10.140
article list的组件的

18:10.140 --> 18:11.340
但这里面为什么

18:11.340 --> 18:12.840
没把这个数据返回出来

18:12.840 --> 18:14.540
这里面有一个问题啊

18:14.540 --> 18:15.040
是啥呢

18:15.040 --> 18:16.040
我们可以看一下

18:16.040 --> 18:17.340
这个list的item

18:17.340 --> 18:18.440
找到他

18:18.440 --> 18:19.840
这怎么点不进去了呢

18:19.840 --> 18:21.040
这个list item

18:21.040 --> 18:21.740
讨厌啊

18:21.740 --> 18:22.640
那我们直接的

18:22.640 --> 18:24.340
到这个里面来查看吗

18:24.340 --> 18:25.540
这个list item

18:25.540 --> 18:26.340
其实他里面

18:26.340 --> 18:27.840
如果说渲染的时候

18:27.840 --> 18:28.840
这个名字叫什么

18:28.840 --> 18:29.840
叫article list的

18:29.840 --> 18:30.440
对不对

18:30.440 --> 18:32.240
但是我们在这个里面啊

18:32.240 --> 18:33.740
现在是没有给他传旨的

18:33.740 --> 18:34.740
所以说这个里面

18:34.740 --> 18:36.140
我们怎么给他传一下

18:36.140 --> 18:36.840
是不是就可以了

18:36.840 --> 18:37.640
也就是说

18:37.640 --> 18:39.240
冒号article list的

18:39.240 --> 18:40.340
等于我们的这个

18:40.340 --> 18:42.040
咱这个就不叫article list的了

18:42.040 --> 18:43.340
我们叫搜索那边

18:43.340 --> 18:44.140
search list的

18:44.140 --> 18:44.540
对吧

18:44.540 --> 18:45.940
这样我们再来试一下啊

18:47.040 --> 18:47.540
你会发现

18:47.540 --> 18:48.440
这样我做完之后

18:48.440 --> 18:50.840
是不是就已经正常的展示出来了

18:50.840 --> 18:51.340
对吧

18:51.340 --> 18:53.340
比如说这里面搜索一个空格

18:53.340 --> 18:54.640
然后回车

18:54.640 --> 18:55.640
你会发现这里面

18:55.640 --> 18:56.540
还有好多数据

18:56.540 --> 18:57.340
ok

18:57.340 --> 18:58.640
正常的他也展示了

18:58.640 --> 19:00.340
但是这个展示有问题

19:00.340 --> 19:01.040
什么问题呢

19:01.040 --> 19:01.740
你看一下

19:01.740 --> 19:02.440
同学们

19:02.440 --> 19:05.040
他这个是能实现一个滚动容器了

19:05.040 --> 19:06.340
但是这个滚动容器啊

19:06.340 --> 19:09.140
不是说在这个底下实现滚动容器

19:09.140 --> 19:10.340
他是在整个界面

19:10.340 --> 19:11.740
实现一个滚动了

19:11.740 --> 19:13.440
那这种啊处理就不好了

19:13.440 --> 19:15.140
我们可以看一下结构啊

19:15.140 --> 19:16.140
在这个结构里面

19:16.140 --> 19:18.340
咱们找到这个search container

19:18.340 --> 19:20.040
你会发现这个search container

19:20.040 --> 19:21.840
咱们往下找search wrapper

19:21.840 --> 19:22.540
search wrapper

19:22.540 --> 19:23.740
这个高度显然不对

19:23.740 --> 19:24.240
对吧

19:24.240 --> 19:25.440
他这个特别高

19:25.440 --> 19:26.640
那所以说这个怎么办呢

19:26.640 --> 19:27.040
这个呢

19:27.040 --> 19:29.540
我们要给他来做一个处理

19:29.540 --> 19:30.040
也就是说

19:30.040 --> 19:31.740
把他这个整个的样式

19:31.740 --> 19:34.040
来给做一个简单的处理啊

19:34.040 --> 19:34.640
嗯

19:34.640 --> 19:35.740
怎么来处理

19:35.740 --> 19:38.640
那我们就加一个search list的container

19:39.940 --> 19:43.540
ok给他的css样式处理一下

19:43.540 --> 19:44.140
到这里面

19:45.140 --> 19:46.640
search点sars

19:46.640 --> 19:48.140
然后为了不影响上面

19:48.140 --> 19:49.540
我直接在那写了

19:49.540 --> 19:50.640
no date

19:50.640 --> 19:51.640
然后在这

19:51.640 --> 19:55.040
点search一个list的container

19:55.040 --> 19:56.740
我给他加一个什么高度

19:56.740 --> 19:57.840
100%

19:57.840 --> 19:58.440
然后呢

19:58.440 --> 20:00.940
给他加一个flex1

20:00.940 --> 20:02.740
之后给他一个or

20:02.740 --> 20:03.440
哎呀

20:03.440 --> 20:04.340
flex1

20:04.340 --> 20:05.440
给他一个or

20:05.440 --> 20:05.840
flaw

20:05.840 --> 20:06.840
一个什么head

20:07.440 --> 20:07.640
好的

20:07.640 --> 20:08.840
那这个就定义完了

20:08.840 --> 20:09.440
定义完之后

20:09.440 --> 20:11.140
咱们看回来行不行

20:11.140 --> 20:11.740
你会发现

20:11.740 --> 20:13.040
此时他连动都不动了

20:13.040 --> 20:13.340
对吧

20:13.340 --> 20:14.440
还得更尴尬了

20:14.440 --> 20:15.140
那是因为呢

20:15.140 --> 20:17.140
其实我给他加了这个

20:17.140 --> 20:18.240
search list的container

20:18.240 --> 20:19.040
高度100%

20:19.040 --> 20:20.640
flex1之后

20:20.640 --> 20:21.240
但是呢

20:21.240 --> 20:23.340
他这个容器是包含在哪的

20:23.340 --> 20:25.040
包含在我们的

20:25.040 --> 20:26.140
这个

20:26.140 --> 20:27.840
整个的在这个设置里面

20:27.840 --> 20:30.340
他是应该是包含在我们这个

20:30.340 --> 20:31.740
searchrapper里面的

20:31.740 --> 20:32.240
对不对

20:32.240 --> 20:33.240
那其实这样

20:33.240 --> 20:35.940
我们可以把它给单独的抽出来啊

20:35.940 --> 20:36.540
抽出来呢

20:36.540 --> 20:39.140
就让他自己有一套独立的结构

20:39.140 --> 20:40.040
就可以了

20:40.040 --> 20:42.340
那这个应该是我们searchrapper的

20:42.340 --> 20:43.040
对不对

20:43.040 --> 20:45.040
我们找到这个searchrapper的

20:45.040 --> 20:46.040
这个哎呀

20:46.040 --> 20:47.540
这个图标

20:47.540 --> 20:49.140
这个应该是searchrapper的

20:49.140 --> 20:51.440
我们把它放在外面啊

20:51.440 --> 20:53.740
那这样他是不是就应该是可以了

20:53.740 --> 20:55.040
我们来试一下

20:55.040 --> 20:58.140
哎searchrapper这个结构不对吗

20:58.140 --> 20:59.040
咱们来看一下

20:59.040 --> 21:01.440
这个里面好像是结构套作了

21:01.440 --> 21:03.440
vgnif vgnelse

21:03.440 --> 21:06.340
那此时这个vgnif应该放在哪了

21:06.340 --> 21:08.840
咱们这个应该是vgnif vgnelse的

21:08.840 --> 21:11.340
因为他跟我们的这个搜索包裹

21:11.340 --> 21:14.440
如果说要是进行一个同级别展示的时候

21:14.440 --> 21:16.940
那这里面是不是vgnif和vgnice

21:16.940 --> 21:19.740
他俩应该跟他外层这个形成一个关联

21:19.740 --> 21:20.440
是不是

21:20.440 --> 21:21.340
那这样就ok了

21:21.340 --> 21:22.640
咱们再来试一下

21:22.640 --> 21:23.740
来刷新界面

21:23.740 --> 21:24.740
此时呢

21:24.740 --> 21:27.140
现在这个没有搜索到相关数据啊

21:27.140 --> 21:28.940
他还一样是错乱了

21:28.940 --> 21:29.740
是因为场

21:29.740 --> 21:32.340
是因为原来我们这个no data包含在哪

21:32.340 --> 21:34.440
包含在这个searchrapper里面

21:34.440 --> 21:34.940
但是呢

21:34.940 --> 21:38.640
我们现在给这个结构拆分开之后

21:38.640 --> 21:41.040
那我们把这个no data也做一个调整

21:41.040 --> 21:42.740
给他放在这个外面

21:42.740 --> 21:45.340
不放在我们这个searchrapper里面

21:45.340 --> 21:45.740
这样呢

21:45.740 --> 21:46.540
我们两个啊

21:46.540 --> 21:47.940
就都可以来进行使用了

21:47.940 --> 21:49.440
那这样他俩是不是平几了

21:49.440 --> 21:50.340
平几就搞定了

21:50.340 --> 21:50.740
对吧

21:50.740 --> 21:52.940
咱们再来看一眼啊

21:52.940 --> 21:54.140
此时是不是没问题了

21:54.140 --> 21:56.440
也就是说现在是不是搞定了我们

21:56.440 --> 21:57.840
第一个问题就是啥呢

21:57.840 --> 21:58.940
就是我们这个

21:58.940 --> 22:00.340
他的一个滚动的问题啊

22:00.340 --> 22:02.340
那我们再来试一下这个滚动的

22:02.340 --> 22:03.540
我一回车这里面

22:03.540 --> 22:03.740
哎

22:03.740 --> 22:04.440
你看我

22:04.440 --> 22:05.740
这里面其实还有一个问题

22:05.740 --> 22:07.840
那咱们接下来就处理下一个问题

22:07.840 --> 22:08.640
咱们先看一下

22:08.640 --> 22:10.940
这个滚动效果目前来看是不是可以了

22:10.940 --> 22:11.840
对吧

22:11.840 --> 22:12.340
但是呢

22:12.340 --> 22:14.540
这里又暴露出来一个其他问题啊

22:14.540 --> 22:15.340
什么问题呢

22:15.340 --> 22:17.340
就是我们可以看一下

22:17.340 --> 22:17.840
现在呢

22:17.840 --> 22:20.540
如果说你要是搜索好多内容的时候

22:20.540 --> 22:22.040
这个里面还有一个正在夹载

22:22.040 --> 22:24.740
因为咱们现在根本就没有做这个分析

22:24.740 --> 22:25.940
所以说正在夹载

22:25.940 --> 22:28.340
也就是说尤尼罗德茂这个组件

22:28.340 --> 22:30.140
其实他没有必要展示对吧

22:30.140 --> 22:30.840
那我们这里面呢

22:30.840 --> 22:32.440
可以通过一个条件

22:32.440 --> 22:34.840
来对他进行一个限制啊

22:34.840 --> 22:37.740
这个list item他的展示条件是什么呢

22:37.740 --> 22:39.940
article list的点lamps等于0

22:39.940 --> 22:40.540
并且呢

22:40.540 --> 22:43.040
他的这个lamps大于7的时候的展示

22:43.040 --> 22:44.540
那我再让他接一个指

22:44.540 --> 22:46.840
在这个里面load the data props

22:46.840 --> 22:48.840
我这里面就是可以写一个

22:48.840 --> 22:52.440
一则寿load貓

22:52.440 --> 22:55.240
也就是说是否展示这个收罗德茂

22:55.240 --> 22:58.440
那这个里面type应该是布洛尔

22:58.440 --> 22:58.840
ok

23:01.040 --> 23:02.640
布洛尔定义完成之后

23:02.640 --> 23:03.940
那给他一个default的指

23:03.940 --> 23:05.040
因为我们守一面

23:05.040 --> 23:06.240
肯定是要展示

23:06.240 --> 23:07.640
所以说我也不想给他传指了

23:07.640 --> 23:09.440
那我直接这里面就定一个什么

23:09.440 --> 23:11.340
处就可以了啊

23:11.340 --> 23:12.940
定义完成之后

23:12.940 --> 23:14.640
那我这个一字收load貓

23:14.640 --> 23:17.040
作为一个什么展示条件对吧

23:17.040 --> 23:18.440
首先你得保证啥呢

23:18.440 --> 23:19.540
这是一个条件

23:19.540 --> 23:21.740
那他俩是形成一个什么

23:21.740 --> 23:22.640
一个货的关系

23:22.640 --> 23:24.740
那我前面我在写一个什么

23:24.740 --> 23:26.740
一字收load貓有值

23:26.740 --> 23:27.540
并且呢

23:27.540 --> 23:29.540
他才来做一个展示

23:29.540 --> 23:30.640
那这样如果说

23:30.640 --> 23:33.240
我我在这个文章列表调用的时候

23:33.240 --> 23:34.340
我不给他传

23:34.340 --> 23:36.340
不给传的使用不认值default的

23:36.340 --> 23:37.740
是不是就是这个处

23:37.740 --> 23:39.240
那你要是这个是处的话

23:39.240 --> 23:41.040
那他后面再根据

23:41.040 --> 23:42.440
我们这两个条件里面

23:42.440 --> 23:43.140
匹配过滤

23:43.140 --> 23:44.240
如果说找到之后

23:44.240 --> 23:45.040
那这就没问题了

23:45.040 --> 23:45.640
对不对

23:45.640 --> 23:46.940
什么时候给他传呢

23:46.940 --> 23:48.840
就是当我在search

23:48.840 --> 23:49.440
也就是说

23:49.440 --> 23:50.840
搜索界面的时候

23:50.840 --> 23:51.640
那你这个时候呢

23:51.640 --> 23:52.840
你就可以给这个

23:52.840 --> 23:53.940
例子的item

23:55.040 --> 23:57.240
进行一个一字收冒的传递了

23:57.240 --> 23:57.840
那此时呢

23:57.840 --> 23:59.240
我给他传递一个 false

23:59.240 --> 24:00.140
那这样做完之后

24:00.140 --> 24:01.740
咱们再来看一眼啊

24:01.740 --> 24:02.840
比如说现在

24:02.840 --> 24:04.740
现在应该是在搜索界面对吧

24:04.740 --> 24:05.540
那你看现在底

24:05.540 --> 24:06.340
是不是就没有了

24:06.340 --> 24:06.940
对吧

24:06.940 --> 24:09.340
也就是说加载更多就搞定了啊

24:09.340 --> 24:09.640
然后呢

24:09.640 --> 24:10.840
我们看这个加载更多

24:10.840 --> 24:12.040
还显不显示

24:12.040 --> 24:14.140
哎这个里面是不是在正常显示

24:14.140 --> 24:15.140
没有更多数据了

24:15.140 --> 24:15.640
是吧

24:15.640 --> 24:16.440
我们再刷新一下

24:16.440 --> 24:17.040
再试一下

24:17.640 --> 24:18.640
你看正在加载

24:18.640 --> 24:19.640
是不是也有显示

24:19.640 --> 24:20.240
对吧

24:20.240 --> 24:21.240
底下一步一步的

24:21.240 --> 24:22.540
都是没有更多数据了

24:22.540 --> 24:23.240
那这样呢

24:23.240 --> 24:24.340
整个的这个

24:24.340 --> 24:27.440
我们隐藏low的帽的这个功能

24:27.440 --> 24:28.640
就实现了啊

24:29.140 --> 24:29.740
接着呢

24:29.740 --> 24:31.440
咱们再来说下一个问题

24:31.440 --> 24:33.740
比如说现在再回到这个搜索界面

24:33.740 --> 24:35.440
你看我这里面点击一个空

24:35.840 --> 24:36.840
你会发现空了

24:36.840 --> 24:38.840
他把整个内容都给搜索出来了

24:38.840 --> 24:39.340
对吧

24:39.340 --> 24:39.940
这个呢

24:39.940 --> 24:41.940
也不太符合我们的那个需求

24:41.940 --> 24:43.240
那这个咋做呢

24:43.240 --> 24:45.440
就是我们回到这个set value里面

24:45.440 --> 24:47.740
找到我们发送的这一部分啊

24:47.740 --> 24:49.740
也就是说在这个里面send data

24:49.740 --> 24:50.340
对吧

24:50.340 --> 24:51.740
我们这个send data的时候

24:51.740 --> 24:54.440
其实你是不是得要一点条件来卡住

24:54.440 --> 24:55.940
如果说他要是空的话

24:55.940 --> 24:57.940
我们得给他处理处理对不对

24:57.940 --> 24:59.040
那什么时候是空呢

24:59.040 --> 25:00.040
我们可以打印一下

25:00.040 --> 25:02.840
console.log这次点parent value

25:02.840 --> 25:05.140
parent value如果说没有值是不是就是空啊

25:05.140 --> 25:07.540
比如说在这个里面回车敲击的时候

25:07.540 --> 25:09.140
他肯定会触发这个事件

25:09.140 --> 25:11.840
你会发现43号打印出来一个什么空

25:11.940 --> 25:12.740
那这个空呢

25:12.740 --> 25:14.140
我们就给他来限制一下

25:14.140 --> 25:17.040
也就是说这个搜索内容为空的时候

25:17.440 --> 25:19.840
搜索内容为空的时候

25:19.840 --> 25:21.640
你不可能让他去搜索一下啊

25:21.640 --> 25:22.940
如果说你让他去搜索

25:22.940 --> 25:25.040
那我们后台数据比较多的时候

25:25.040 --> 25:25.940
这个时候呢

25:25.940 --> 25:27.440
我们原来说也没做限制

25:27.440 --> 25:28.740
那这个就干大了对不对

25:28.740 --> 25:29.240
所以说呢

25:29.240 --> 25:30.940
我们这里面就给他调整一下

25:32.040 --> 25:33.440
找到console.log

25:33.440 --> 25:35.140
把它呢变为一个条件啊

25:35.140 --> 25:36.240
也不用他打印了

25:36.240 --> 25:38.340
如果说非这次点parent value

25:38.340 --> 25:40.140
也就是说你啥都没写对吧

25:40.140 --> 25:41.540
那你啥都没写的话

25:41.540 --> 25:42.240
那我怎么办

25:42.240 --> 25:45.340
我这次点search list

25:45.340 --> 25:46.740
就给他重新复制

25:46.740 --> 25:48.540
让他变成空就可以了对不对

25:48.540 --> 25:49.140
对不对

25:49.140 --> 25:49.740
然后呢

25:49.740 --> 25:51.440
我们直接给他return掉

25:51.440 --> 25:53.140
那这样是不是他就不展示了

25:53.140 --> 25:55.140
如果说你给他变成了个空

25:55.140 --> 25:55.940
那这时候呢

25:55.940 --> 25:57.840
他这个里面就显示没有数据

25:57.840 --> 25:58.640
是不是就可以了

25:58.640 --> 25:59.140
对吧

25:59.140 --> 26:00.340
我们来看一眼啊

26:00.340 --> 26:01.640
在这个里面再来试一下

26:01.640 --> 26:02.540
哎空

26:02.540 --> 26:03.040
此时呢

26:03.040 --> 26:04.940
他不会进行数据的发送

26:04.940 --> 26:05.240
对吧

26:05.240 --> 26:06.440
这是第一点

26:06.440 --> 26:07.740
咱们再来试一下

26:07.740 --> 26:08.440
到这个里面

26:08.440 --> 26:10.440
来我们点击空好的

26:10.440 --> 26:11.540
现在这时候没有对不对

26:11.540 --> 26:13.540
然后再空也没问题对吧

26:13.540 --> 26:15.740
因为我们已经做了这个trim的处理

26:15.740 --> 26:17.540
这是这一部分的内容啊

26:17.540 --> 26:17.940
然后呢

26:17.940 --> 26:19.540
还有一个是要处理的

26:19.540 --> 26:20.240
是啥处理呢

26:20.240 --> 26:22.140
比如说我现在搜索一个啊

26:23.240 --> 26:23.940
直播ok

26:23.940 --> 26:25.240
我一回车回车

26:25.240 --> 26:26.440
这时候是不是有了

26:26.440 --> 26:28.740
然后当我这个清除之后

26:28.740 --> 26:30.840
我全部都清楚了

26:30.840 --> 26:31.740
其实你这时候

26:31.740 --> 26:33.440
是不是应该不显示内容了

26:33.440 --> 26:35.740
比如说像这个直播ok回退

26:35.740 --> 26:36.740
回退完成之后

26:36.740 --> 26:39.040
那又展示原来的这个

26:39.040 --> 26:40.440
就是啥也没有就可以了

26:40.440 --> 26:40.940
对不对

26:40.940 --> 26:42.240
那你这个咋来做呢

26:42.240 --> 26:43.840
这个其实也简单呢

26:43.840 --> 26:44.940
我们在这个

26:44.940 --> 26:46.340
比如说现在啊

26:46.340 --> 26:48.140
每一步的这个按键的时候

26:48.140 --> 26:49.240
我们能不能监视的

26:49.240 --> 26:50.640
其实是可以的

26:50.640 --> 26:52.040
在这个nv8里面

26:52.040 --> 26:54.540
为什么我们这么写computer的

26:54.540 --> 26:57.240
那这时候就能看出他的这个好出来了

26:57.240 --> 26:59.740
我们打印一下这个value

26:59.740 --> 27:01.340
此时如果说你给他清空了

27:01.340 --> 27:03.640
那这个value是应该是没有值的

27:03.640 --> 27:04.340
对不对

27:04.340 --> 27:05.040
我们这里面啊

27:05.040 --> 27:06.540
123是不是有值

27:06.540 --> 27:08.440
当我清空清空走你

27:08.440 --> 27:09.840
是不是这时候就变成空了

27:09.840 --> 27:10.340
所以说呢

27:10.340 --> 27:12.440
我在这个里面就可以做一个什么

27:12.440 --> 27:13.940
判断是不是就可以了

27:13.940 --> 27:15.640
那做一个什么判断呢

27:15.640 --> 27:18.340
如果说你要是没有这个value

27:18.340 --> 27:19.440
那我直接对不起

27:19.440 --> 27:21.040
就给你干掉就可以了

27:21.040 --> 27:21.340
当然了

27:21.340 --> 27:22.140
你这个没有value

27:22.140 --> 27:24.240
你也是要给emat

27:24.240 --> 27:25.640
给这个set value

27:25.640 --> 27:26.440
给他附容器

27:26.440 --> 27:28.040
是不是要给他复制的parent value

27:28.040 --> 27:28.640
对吧

27:28.640 --> 27:30.140
那我这里面在下面判断

27:30.140 --> 27:30.940
如果说非

27:32.240 --> 27:32.740
value

27:32.740 --> 27:34.340
那我要做一件什么事呢

27:34.340 --> 27:35.440
还是发送

27:35.440 --> 27:37.240
因为我为什么要发送

27:37.240 --> 27:39.140
因为我们这个send data里面

27:39.140 --> 27:40.840
是不是做了一个处理

27:40.840 --> 27:42.340
非空的处理对不对

27:42.340 --> 27:43.440
那我们直接的

27:43.440 --> 27:45.140
这次点到了emat

27:45.140 --> 27:47.840
我们发送的事件和这个send data

27:47.840 --> 27:48.640
完全一致

27:48.640 --> 27:49.740
是不是就可以了

27:49.740 --> 27:51.540
然后如果说你是空的时候

27:51.540 --> 27:52.940
会处发这个set

27:52.940 --> 27:54.040
然后这个value呢

27:54.040 --> 27:56.840
这里面发送一个send search data

27:56.840 --> 27:58.940
到我们的这个附组件

27:58.940 --> 28:01.240
也就是说search value的里面

28:01.240 --> 28:02.240
到search value里面

28:02.240 --> 28:02.940
这个时候呢

28:02.940 --> 28:05.140
我又判断一下parent value

28:05.140 --> 28:06.140
有没有值

28:06.140 --> 28:07.040
如果说没有值

28:07.040 --> 28:08.440
那我直接让你变成空

28:08.440 --> 28:10.140
那这样就能保证一个什么

28:10.140 --> 28:11.240
他这个空的时候

28:11.240 --> 28:12.940
把下面给干掉对吧

28:12.940 --> 28:14.140
就这么一个过程

28:14.140 --> 28:15.340
那我们来实现一下

28:15.340 --> 28:17.440
首先刷新一下界面吧

28:17.440 --> 28:22.140
然后在这里面搜索一个直播

28:22.140 --> 28:23.940
哎没改变啊

28:23.940 --> 28:25.040
直播好的

28:25.040 --> 28:26.240
那这时候我一回车

28:26.240 --> 28:27.040
回车的时候

28:27.040 --> 28:29.240
这个里面就应该是展示

28:29.240 --> 28:30.640
这ok没有问题的

28:30.640 --> 28:31.040
但是呢

28:31.040 --> 28:33.140
我现在给他清空之后

28:33.140 --> 28:34.040
你会发现

28:34.040 --> 28:36.540
此时没有搜索到相关数据

28:36.540 --> 28:37.840
那这个是不是就完成了

28:37.840 --> 28:39.540
我们一整个的这个

28:39.540 --> 28:41.440
搜索的这个业务逻辑处理

28:41.440 --> 28:42.140
对不对

28:42.140 --> 28:44.440
比如说这里面搜索一个一ok

28:44.440 --> 28:45.440
然后再一回车

28:45.440 --> 28:46.840
这里面出现三个

28:46.840 --> 28:48.640
当我这个把这个一干掉之后

28:48.640 --> 28:51.040
那这里面就是没有搜索到相关数据

28:51.040 --> 28:53.140
是不是这样就可以了

28:53.140 --> 28:55.040
处理完列表展示这一块

28:55.040 --> 28:56.140
我们再来想一下

28:56.140 --> 28:59.440
就是我们搜索记录的一个展示

28:59.440 --> 29:00.440
这里面啊

29:00.440 --> 29:02.240
现在这个一直展示不出来啊

29:02.240 --> 29:02.640
是因为啥

29:02.640 --> 29:05.640
是因为我们用条件给他干掉了

29:05.640 --> 29:06.840
我们可以看一下这个

29:06.840 --> 29:09.240
其实我们出手花进入的时候

29:09.240 --> 29:11.840
他不是说展示的这个

29:11.840 --> 29:13.640
我们现在没有搜索到相关数据

29:13.640 --> 29:14.540
因为出手花的时候

29:14.540 --> 29:16.040
他没有开始进行搜索的

29:16.040 --> 29:16.540
对不对

29:16.540 --> 29:17.040
那这个呢

29:17.040 --> 29:20.340
我们可以通过一个条件来限制一下呢

29:20.340 --> 29:22.240
通过什么条件来限制他呢

29:22.240 --> 29:23.740
这里面有一个partner外料

29:23.740 --> 29:24.840
我们在下面啊

29:24.840 --> 29:25.840
再来定一下

29:25.840 --> 29:27.440
判断一下

29:27.440 --> 29:31.640
当前是否是正在进行一个搜索的状态啊

29:31.640 --> 29:34.840
那我这里面写一个什么一字搜

29:34.840 --> 29:38.030
hate story

29:38.030 --> 29:39.230
一字搜hate story呢

29:39.230 --> 29:40.930
我给他一个处啊

29:40.930 --> 29:42.430
那这个里面直接的

29:42.430 --> 29:44.030
一字搜hate story干嘛用

29:44.030 --> 29:45.630
其实出手花的时候呢

29:45.630 --> 29:46.730
咱们这个里面啊

29:46.730 --> 29:50.230
是用的这个vif false来定义的

29:50.230 --> 29:50.830
是不是

29:50.830 --> 29:52.930
那我直接的就用一字搜hate story

29:52.930 --> 29:55.030
那此时他应该是变成什么了

29:55.030 --> 29:57.330
他这时候应该是回来啊

29:57.330 --> 29:58.830
变成我们的这个搜索历史了

29:58.830 --> 29:59.330
对不对

29:59.330 --> 30:00.530
那这样就对了啊

30:00.530 --> 30:01.430
然后那这样对了

30:01.430 --> 30:02.930
什么时候开始

30:02.930 --> 30:04.930
把这个一字搜hate story

30:04.930 --> 30:06.730
给他来做一个调整呢

30:06.730 --> 30:09.330
就是当我们开始send search data

30:09.330 --> 30:11.130
也就是说真实的进行

30:11.130 --> 30:12.430
我们搜索内容呢

30:12.430 --> 30:14.030
一个相关发送的时候

30:14.030 --> 30:16.230
那这时候我们是不是要做一个处理了

30:16.230 --> 30:17.430
嗯在这个里面

30:17.430 --> 30:18.630
我们发送的时候

30:18.630 --> 30:21.930
首先把这一次点一字搜hate story

30:21.930 --> 30:23.030
给他变成一个什么

30:23.030 --> 30:24.030
等于一个 false

30:25.030 --> 30:26.230
ok 这是第一个

30:26.230 --> 30:27.330
还有一个点

30:27.330 --> 30:28.430
我们要注意一下是什么呢

30:28.430 --> 30:31.030
如果说你要是没有这个搜索到的

30:31.030 --> 30:31.930
这个内容

30:31.930 --> 30:33.830
也就是说你根本什么都没添

30:33.830 --> 30:34.730
什么都没添

30:34.730 --> 30:36.730
我说了意思的就等于一个空

30:36.730 --> 30:37.530
并且呢

30:37.530 --> 30:39.530
我这一次点一字hate

30:39.530 --> 30:41.230
一字搜hate story啊

30:41.230 --> 30:44.330
把他就给他变回来就可以了吧

30:44.330 --> 30:46.230
一字搜hate story

30:46.230 --> 30:48.530
等于一个什么处是不是就可以了

30:48.530 --> 30:49.630
那这样就能保证

30:49.630 --> 30:50.730
假如说你正在搜索

30:50.730 --> 30:51.730
那你搜索的时候

30:51.730 --> 30:52.930
这个时候啊

30:52.930 --> 30:53.930
我们如果说

30:53.930 --> 30:56.130
你按了一个控口员回车

30:56.130 --> 30:58.030
那这时候还会给你展示

30:58.030 --> 30:59.830
是一个什么搜索记录的

30:59.830 --> 31:01.930
这样一个界面就可以了

31:01.930 --> 31:02.730
我们来试一下

31:02.730 --> 31:03.930
看可不可以啊

31:03.930 --> 31:06.130
因为咱们知道这里面有一个什么直播

31:06.130 --> 31:06.430
对吧

31:06.430 --> 31:07.730
那我就搜索一下

31:07.730 --> 31:08.830
你看这里面就有了

31:08.830 --> 31:09.130
对吧

31:09.130 --> 31:10.730
当我把这个给清空之后

31:10.730 --> 31:11.330
那再回来

31:11.330 --> 31:12.430
是不是就可以了

31:12.430 --> 31:12.730
对吧

31:12.730 --> 31:14.030
这是第一个问题

31:14.030 --> 31:16.230
那第二个问题是啥呢

31:16.230 --> 31:18.230
我们这个搜索记录从哪来

31:18.230 --> 31:21.130
对什么时候会处罚这个搜索记录

31:21.130 --> 31:22.830
因为现在我们不确定啊

31:22.830 --> 31:25.130
什么时候能保留这个搜索记录

31:25.130 --> 31:27.430
比如说我现在正常搜索一

31:27.430 --> 31:28.730
你看他这个里面

31:28.730 --> 31:31.330
也是会有这个相关内容展示的

31:31.330 --> 31:32.230
但是呢

31:32.230 --> 31:33.830
这个里面如果说回退之后

31:33.830 --> 31:35.030
你会发现搜索历史

31:35.030 --> 31:36.430
其实没有进行保存

31:36.430 --> 31:37.030
对吧

31:37.030 --> 31:37.730
那你没有保存

31:37.730 --> 31:38.830
什么时候会保存呢

31:38.830 --> 31:41.130
我在这个里面再搜索一个一

31:41.130 --> 31:42.030
一不太好啊

31:42.030 --> 31:44.430
那我再搜索一个什么IOS吧

31:44.430 --> 31:44.730
好吧

31:46.030 --> 31:47.530
我搜索一个IOS

31:47.530 --> 31:48.930
咱们还没有啊

31:48.930 --> 31:50.830
因为没匹配大小写是吧

31:50.830 --> 31:52.630
那么直接的这个里面IOS

31:54.630 --> 31:55.830
直接搜索一个i呢

31:55.830 --> 31:57.030
我看一下啊

31:57.030 --> 31:58.530
还是没搜索到相关数据

31:58.530 --> 31:59.030
这不对啊

31:59.030 --> 32:00.130
这个问题啊

32:00.130 --> 32:00.430
然后呢

32:00.430 --> 32:02.530
我再搜索一个一

32:02.530 --> 32:03.430
咱们来看一下

32:03.430 --> 32:04.930
IOS难道

32:04.930 --> 32:07.030
i o s端小写的

32:07.030 --> 32:08.830
哎大写的o s

32:08.830 --> 32:10.230
这个领略原生

32:10.230 --> 32:12.630
咱们搜索一个领略原生

32:12.630 --> 32:14.530
领略原生

32:16.830 --> 32:23.120
这里面是领略原生

32:23.120 --> 32:27.320
领略原生好的

32:29.020 --> 32:32.980
原生啊

32:32.980 --> 32:34.680
OK那这时候就搜索出来了

32:34.680 --> 32:36.580
搜索出来的时候

32:36.580 --> 32:39.680
我什么时候能保存一个这个搜索的信息

32:39.680 --> 32:42.180
只有当你在这个点击的时候

32:42.180 --> 32:43.680
比如说我点击进去了

32:43.680 --> 32:44.680
点击进去之后

32:44.680 --> 32:47.280
他这里面显示这个文章详情了

32:47.280 --> 32:49.080
然后我再回退回去之后

32:49.080 --> 32:50.880
你会发现此时如果说

32:50.880 --> 32:52.480
我在这个里面再做操作

32:52.480 --> 32:54.780
你会发现领略原生是不是就过来了

32:54.780 --> 32:56.380
那也就是说我们的处发点

32:56.380 --> 32:57.480
其实是在哪呢

32:57.480 --> 32:58.680
我们的处发点

32:58.680 --> 33:01.480
其实是在这个list的卡的点击的时候

33:01.480 --> 33:01.980
对吧

33:01.980 --> 33:04.480
那所以说我们就依依次的来实现一下

33:04.480 --> 33:06.580
也就是说我们这个list的卡的

33:06.580 --> 33:09.180
通知list的item再由list的item

33:09.180 --> 33:11.880
通知他的这个副组件 search page

33:11.880 --> 33:15.180
也就是说搜索界面由搜索界面里面

33:15.180 --> 33:16.980
如果说你点击进去之后

33:16.980 --> 33:18.880
当然了你这个list卡的调整详情

33:18.880 --> 33:19.680
我不管你

33:19.680 --> 33:21.980
然后我这面呢开始做一个什么

33:21.980 --> 33:24.280
将你当前的这个搜索的内容

33:24.280 --> 33:26.080
给他做一个存储就OK了

33:26.080 --> 33:27.580
存储到哪

33:27.580 --> 33:30.180
这个我们肯定得做一个持久化存储

33:30.180 --> 33:31.180
为什么这么说

33:31.180 --> 33:32.180
我刷新一下界面

33:32.180 --> 33:33.980
你会发现原来这两条记录纸

33:33.980 --> 33:34.980
是不是都还有啊

33:34.980 --> 33:36.980
那这个我们之间可以存储在

33:36.980 --> 33:38.680
Store里面是不是就可以了

33:38.680 --> 33:39.180
对吧

33:39.180 --> 33:40.280
整个的这个实现

33:40.280 --> 33:41.580
就是这样一个过程

33:41.580 --> 33:42.880
我们就来做一下

33:42.880 --> 33:43.480
首先呢

33:43.480 --> 33:44.480
我们要找到谁

33:44.480 --> 33:48.780
就是这个listitem下面的list的卡的

33:48.780 --> 33:50.680
先到listitem里面

33:50.680 --> 33:51.580
OK

33:51.580 --> 33:52.680
每一个list的卡的呢

33:52.680 --> 33:54.580
都会有这个点击事件

33:54.580 --> 33:54.880
对吧

33:54.880 --> 33:57.680
那我们在这个点击事件里面来做事

33:57.680 --> 34:00.380
找到我们的list的卡的这个里面

34:00.380 --> 34:01.080
点击事件

34:01.080 --> 34:02.480
我们当时是不是有绑定

34:03.480 --> 34:04.780
找到每一个

34:04.780 --> 34:07.280
每一个这里面有一个go article detail

34:07.280 --> 34:09.380
也就是说跳转到详情界面

34:09.380 --> 34:11.380
其实你正常跳转详情界面

34:11.380 --> 34:11.980
可以

34:11.980 --> 34:13.380
那我们直接的在这个里面

34:13.380 --> 34:14.680
还可以做一个什么

34:14.680 --> 34:15.480
自定义事件

34:15.480 --> 34:17.880
这次点dollar emat

34:17.880 --> 34:19.780
我们要发送这个自定义事件

34:19.780 --> 34:21.980
这个叫save search history

34:23.180 --> 34:23.780
search

34:25.780 --> 34:27.980
save search history

34:27.980 --> 34:29.080
然后这个里面

34:29.080 --> 34:31.180
直接就写这么一个事件就可以了

34:31.180 --> 34:32.580
这个save search history

34:32.580 --> 34:33.780
我们要传递给谁

34:33.780 --> 34:37.080
传递给我们的这个listitem

34:37.080 --> 34:39.580
那到这个listitem里面

34:39.580 --> 34:42.580
我们直接的也要往上发送

34:42.580 --> 34:44.680
那我直接先在这订一下

34:44.680 --> 34:45.480
at

34:45.480 --> 34:48.980
然后save search history等于什么呢

34:48.980 --> 34:50.280
直接我也不在点定义了

34:50.280 --> 34:52.480
因为也不在这个组件里面做任何事

34:52.480 --> 34:53.880
那我直接就往上传

34:53.880 --> 34:55.280
dollar emat

34:55.280 --> 34:57.380
save search history

34:57.380 --> 34:57.780
OK

34:57.780 --> 35:00.580
然后直接的把它传递给谁呢

35:00.580 --> 35:01.580
传递给search

35:01.580 --> 35:03.980
search在这个里面就可以定一个什么

35:03.980 --> 35:05.780
save search history

35:05.780 --> 35:06.580
at

35:06.580 --> 35:08.380
等于我们在这个里面

35:08.380 --> 35:11.080
真实的把这个方法给定一下

35:11.080 --> 35:13.080
找到mysearch的到这个里面

35:13.080 --> 35:14.480
我们直接的过来

35:14.480 --> 35:16.580
save search history

35:16.580 --> 35:17.180
OK

35:17.180 --> 35:19.280
那这个里面其实就是我们开始

35:19.280 --> 35:20.580
真正的要做事了

35:20.580 --> 35:21.780
其实我们要做什么事

35:21.780 --> 35:24.280
首先你要能拿到我们的这个什么

35:24.280 --> 35:25.680
当前搜索的内容

35:25.680 --> 35:27.780
也就是说这次点search

35:27.780 --> 35:28.380
value啊

35:28.380 --> 35:30.980
把这个要给他获取到啊

35:30.980 --> 35:31.280
sorry

35:31.280 --> 35:33.280
我们在这个里面应该叫parent value

35:33.280 --> 35:34.280
对不对

35:34.280 --> 35:34.980
来试一下

35:34.980 --> 35:37.780
看点击能不能获取到这个parent value

35:39.480 --> 35:40.580
这个是我们的

35:40.580 --> 35:42.080
我们回到我们的这个里面

35:42.080 --> 35:43.880
我搜索一个直播

35:44.880 --> 35:45.580
回车一下

35:45.580 --> 35:47.380
回车一下此时我一点击

35:47.380 --> 35:49.880
你会发现这个直播在我们的设置界面

35:49.880 --> 35:51.180
是不是已经打印出来了

35:51.180 --> 35:51.780
对吧

35:51.780 --> 35:53.380
你只要打印出来之后

35:53.380 --> 35:55.380
那我们这个里面就可以怎么办

35:55.380 --> 35:58.380
我们直接的就可以来做这个

35:58.380 --> 35:59.380
内容的存储了

35:59.380 --> 36:01.280
也就是说当前这个

36:01.280 --> 36:04.180
直播这个内容就是我们需要

36:04.180 --> 36:06.280
进行一个存储的内容

36:06.280 --> 36:06.880
对不对

36:06.880 --> 36:08.180
那因为我们这个啊

36:08.180 --> 36:10.080
是需要一个持久化存储的

36:10.080 --> 36:10.680
怎么办呢

36:10.680 --> 36:11.680
我们在这个里面

36:11.680 --> 36:13.580
可以把它存在微差里面

36:13.580 --> 36:14.080
并且呢

36:14.080 --> 36:14.980
我们死到里面

36:14.980 --> 36:17.180
保存一份副本就OK了

36:17.180 --> 36:17.980
怎么来实现

36:17.980 --> 36:20.180
先回到我们的这个死到里面

36:20.180 --> 36:21.780
找到我们的这个数据啊

36:21.780 --> 36:23.680
然后把它先关一下

36:23.680 --> 36:27.080
阿甲克斯找到我们的这个死到

36:27.080 --> 36:28.080
死到在这个里面

36:28.080 --> 36:28.780
首先呢

36:28.780 --> 36:30.280
一次的死地的里面

36:30.280 --> 36:32.180
除了这个UserInfo之外

36:32.180 --> 36:33.480
我们还需要定一个

36:33.480 --> 36:34.080
定一个什么

36:34.080 --> 36:34.980
黑斯达瑞

36:35.980 --> 36:36.480
list

36:36.480 --> 36:37.180
ok

36:37.180 --> 36:38.780
这个黑斯达瑞list呢

36:38.780 --> 36:41.880
我首先要在我们的这个本地存储里面

36:41.880 --> 36:43.080
去获取一下

36:43.080 --> 36:43.980
看你有没有

36:43.980 --> 36:44.980
如果说你有呢

36:44.980 --> 36:46.780
那我就读取本地存储的

36:46.780 --> 36:48.980
也就是说在这个黑斯达瑞利斯的

36:48.980 --> 36:50.280
假如说你要是没有的话

36:50.280 --> 36:52.080
那我这里面给你一个空输组

36:52.080 --> 36:52.980
是不是就可以了

36:52.980 --> 36:54.380
那这个就定一完了

36:54.380 --> 36:55.580
定一完成之后

36:55.580 --> 36:58.180
那我在这个里面就有一个更改的方法

36:58.180 --> 36:58.780
对吧

36:58.780 --> 37:00.680
我们再回到mutation里面

37:00.680 --> 37:01.380
然后呢

37:01.380 --> 37:03.180
这个里面我们再写一下

37:03.180 --> 37:03.780
这叫什么

37:04.780 --> 37:06.580
修改啊

37:06.580 --> 37:11.840
修改一个历史记录存储

37:11.840 --> 37:12.240
好的

37:12.240 --> 37:13.040
在这个里面

37:13.040 --> 37:15.740
我们就来定一下历史记录存储

37:15.740 --> 37:19.840
这个可以使用一个set黑斯达瑞

37:19.840 --> 37:20.240
ok

37:20.240 --> 37:22.440
定一完这个set黑斯达瑞之后

37:22.440 --> 37:24.440
这里面会有一个state

37:24.440 --> 37:24.940
然后呢

37:24.940 --> 37:25.640
还会有一个

37:25.640 --> 37:27.640
我们传递过来的这个value

37:27.640 --> 37:29.540
如果说你有这么一个方法之后

37:29.540 --> 37:31.040
那我们直接的在这个里面

37:31.040 --> 37:32.340
是不是可以进行使用了

37:32.340 --> 37:32.840
对吧

37:32.840 --> 37:33.840
那我们通过

37:33.840 --> 37:37.440
input map mutation这种方法

37:38.840 --> 37:41.040
map mutation mutations

37:41.040 --> 37:43.340
这个map mutations的方法里面

37:43.340 --> 37:43.640
然后呢

37:43.640 --> 37:45.040
一会我们定一下

37:45.040 --> 37:45.940
是不是就可以了

37:45.940 --> 37:46.960
这个里面是

37:46.960 --> 37:48.440
服装从哪来

37:48.440 --> 37:48.840
v

37:49.740 --> 37:51.940
vchar给我们提供的这个方法

37:51.940 --> 37:54.140
那我直接的在这个里面写一下

37:55.240 --> 37:56.940
就是这里啊

37:56.940 --> 37:57.540
点点点

37:57.540 --> 37:58.240
map

37:58.240 --> 37:58.740
set

37:58.740 --> 38:00.740
map mutations

38:00.740 --> 38:02.240
把这个map

38:02.940 --> 38:03.840
mutation

38:03.840 --> 38:04.740
4

38:04.740 --> 38:05.640
ok

38:05.640 --> 38:06.140
然后呢

38:06.140 --> 38:06.840
把这个方法

38:06.840 --> 38:08.340
定一下set黑斯达瑞

38:08.340 --> 38:08.840
其实呢

38:08.840 --> 38:09.840
我search

38:09.840 --> 38:11.940
search黑斯达瑞的时候

38:11.940 --> 38:13.240
那我直接的在这里面

38:13.240 --> 38:14.140
就可以

38:14.140 --> 38:16.340
这一次点set黑斯达瑞

38:16.340 --> 38:16.840
并且呢

38:16.840 --> 38:19.440
把我们的这一次点parent value

38:19.440 --> 38:20.140
给传过去

38:20.140 --> 38:21.140
是不是就可以了

38:21.140 --> 38:22.440
如果说你传过去之后

38:22.440 --> 38:23.340
那我此时

38:23.340 --> 38:24.940
这个mutation里面

38:24.940 --> 38:26.340
是不是就可以打印出来

38:26.340 --> 38:27.040
这一个value

38:27.040 --> 38:27.640
对吧

38:27.640 --> 38:29.040
我这里面打印一下

38:29.040 --> 38:30.140
这个value

38:30.140 --> 38:30.540
ok

38:31.740 --> 38:33.440
来咱看一下是否可行啊

38:33.440 --> 38:35.740
我这里面搜索一个一二三啊

38:35.740 --> 38:36.940
一二三没有这个记录

38:36.940 --> 38:38.940
那我直接搜索一个一就可以了

38:38.940 --> 38:39.940
我这里面一点击

38:39.940 --> 38:41.640
你会发现我们mutation

38:41.640 --> 38:42.740
是不是有这个值呢

38:42.740 --> 38:43.440
有这个值

38:43.440 --> 38:44.340
你做两步操作

38:44.340 --> 38:45.540
第一步是什么呢

38:45.540 --> 38:47.840
我们在这个vchar里面存储一份

38:47.840 --> 38:48.340
之后呢

38:48.340 --> 38:49.640
我们在这个死盗里面

38:49.640 --> 38:51.040
来进行一个存储

38:51.040 --> 38:51.740
也就是说

38:51.840 --> 38:53.640
也给他存储一份啊

38:53.640 --> 38:55.340
那我们就来实现一下

38:55.340 --> 38:56.940
回到我们的这个

38:56.940 --> 38:58.740
mutation.js里面

38:58.740 --> 38:59.940
我们来做这个事

38:59.940 --> 39:00.740
那做这个事呢

39:00.740 --> 39:02.540
首先我们要获取一个啥呢

39:02.540 --> 39:04.340
获取我们的这个

39:04.340 --> 39:06.340
就是死盗的这个

39:06.340 --> 39:08.440
state里面的这个仓库

39:08.440 --> 39:09.340
也就是说

39:09.340 --> 39:10.840
刚才我们定义的这个

39:10.840 --> 39:12.540
vchar里面的这个值

39:12.540 --> 39:14.740
state里面这个hate sorry对不对

39:14.740 --> 39:16.840
那我们先来把它获取一下

39:16.840 --> 39:18.840
那这个里面我们就定一个变量

39:18.840 --> 39:22.740
let list等于state.hate sorry list

39:22.740 --> 39:25.040
那这样是不是就获取了一个什么

39:25.040 --> 39:26.240
获取了一个数组啊

39:26.240 --> 39:27.240
但是它可能是没有

39:27.240 --> 39:27.840
没有的话

39:27.840 --> 39:28.840
它是一个空数组

39:28.840 --> 39:30.140
这不影响我们对不对

39:30.140 --> 39:31.440
那我们来判断一下

39:31.440 --> 39:33.540
如果说list.lnc

39:33.540 --> 39:34.640
假如说你要有

39:35.640 --> 39:37.340
那是不是就是大于零啊

39:37.340 --> 39:37.840
对不对

39:37.840 --> 39:38.740
大于零的话

39:38.740 --> 39:39.340
然后呢

39:39.340 --> 39:40.640
我在这个什么里面找

39:40.640 --> 39:41.340
并且呢

39:41.340 --> 39:44.840
list.fan的一个什么 index

39:44.840 --> 39:46.540
我这里面去查找

39:46.540 --> 39:47.440
查找什么呢

39:47.440 --> 39:48.640
我们这个item

39:48.640 --> 39:50.740
也就是说里面的每一项

39:50.740 --> 39:51.840
那这个item

39:51.840 --> 39:54.540
假如说等于等于我们的这个value

39:54.540 --> 39:56.840
要做一个什么去重的操作对不对

39:56.840 --> 39:59.240
如果说我fan的index item

39:59.240 --> 40:00.640
等于等于value之后

40:00.640 --> 40:01.440
那我怎么办

40:01.440 --> 40:02.340
那我这个里面

40:02.340 --> 40:03.940
如果说你这个条件

40:03.940 --> 40:05.940
假如说他要是大于一了啊

40:05.940 --> 40:06.640
这里面

40:06.640 --> 40:08.940
那是不是就是说明他已经有了

40:08.940 --> 40:10.640
那有了我们就不做

40:10.640 --> 40:12.640
继续存储这样一个操作

40:12.640 --> 40:13.040
这样呢

40:13.040 --> 40:15.040
是不是就可以给他做一个什么

40:15.040 --> 40:16.840
避免重复向的这样一个操作

40:16.840 --> 40:17.540
对不对

40:17.540 --> 40:19.040
那这样如果说你要是有

40:19.040 --> 40:20.540
那我直接在这个里面

40:20.540 --> 40:21.440
就给你干掉

40:21.440 --> 40:22.540
是不是就可以了

40:22.540 --> 40:25.040
然后这个是list.lance

40:25.040 --> 40:26.740
大于零的第一个条件

40:26.740 --> 40:27.640
第二个条件呢

40:27.640 --> 40:28.540
list

40:28.540 --> 40:30.040
然后去fan的index

40:30.040 --> 40:30.940
找索引值

40:30.940 --> 40:33.140
如果说索引值要是大于几

40:33.140 --> 40:34.240
大于负一啊

40:34.240 --> 40:35.340
不应该是一

40:35.340 --> 40:37.440
那这样就是肯定这个原来就有

40:37.440 --> 40:38.640
有我就不跟你存了

40:38.640 --> 40:39.240
对吧

40:39.240 --> 40:40.640
之后如果说你要是没有

40:40.640 --> 40:41.940
没有是不是就过来了

40:41.940 --> 40:42.740
往下走

40:42.740 --> 40:43.640
那往下走怎么办

40:43.640 --> 40:45.940
我在他最前面

40:45.940 --> 40:47.340
给他做一个插入

40:47.340 --> 40:48.040
把谁插入

40:48.040 --> 40:49.040
把我们这个value

40:49.040 --> 40:50.340
给他插入进去

40:50.340 --> 40:51.840
那插入进去之后

40:51.840 --> 40:54.140
我首先给这个本地存储

40:54.140 --> 40:56.440
来做一个重新的复职

40:56.440 --> 40:57.840
那我不管你原来有没有

40:57.840 --> 41:00.340
反正现在我重新的给你做一个

41:00.340 --> 41:00.940
呃

41:00.940 --> 41:02.640
处理就可以了

41:02.640 --> 41:05.340
有你点赛的storage sync

41:05.340 --> 41:07.240
那我这里面定义了一个什么

41:07.240 --> 41:09.440
黑色dory list

41:09.440 --> 41:10.140
对吧

41:10.140 --> 41:12.140
那我们直接的把这个list

41:12.140 --> 41:14.140
给他做一个存储就可以了

41:14.140 --> 41:15.340
之后做完这个之后

41:15.340 --> 41:16.540
那我再做一件事

41:16.540 --> 41:17.240
state

41:17.240 --> 41:19.440
我们给这个黑色dory list

41:19.440 --> 41:20.940
也给他做一个复职

41:20.940 --> 41:21.640
复职是啥

41:21.640 --> 41:23.540
复职就是我们这个定义好的

41:23.540 --> 41:24.540
这个list

41:24.540 --> 41:25.340
因为你这个list

41:25.340 --> 41:27.540
是不是往里往前面追加了一下

41:27.540 --> 41:28.140
追加了一下

41:28.140 --> 41:29.740
我们重新给他做一个复职

41:29.740 --> 41:31.240
这样就可以了

41:31.240 --> 41:32.640
然后我们来测试一下

41:32.640 --> 41:33.440
比如说这里面

41:33.440 --> 41:36.240
我选择呃直播

41:36.240 --> 41:37.040
ok

41:37.040 --> 41:38.640
当我一回车

41:38.640 --> 41:39.040
然后呢

41:39.040 --> 41:40.340
我这时候点击

41:40.340 --> 41:40.940
点击之后

41:40.940 --> 41:41.940
他应该做两件事

41:41.940 --> 41:42.540
首先呢

41:42.540 --> 41:43.840
是我们微差数据里面

41:43.840 --> 41:45.240
应该有这么一个值啊

41:45.440 --> 41:46.840
咱们到这个里面

41:46.840 --> 41:48.240
黑色dory list

41:48.240 --> 41:49.240
这个直播之后

41:49.240 --> 41:50.440
那我们再看什么呢

41:50.440 --> 41:51.740
看这个

41:51.740 --> 41:52.840
我们的死道里面

41:52.840 --> 41:54.640
死道里面是不是也有一个直播

41:54.640 --> 41:55.940
那这里面就存进去了

41:55.940 --> 41:57.740
当我这个直播已经存进去之后

41:57.740 --> 41:58.940
我再想进行存储

41:58.940 --> 42:00.240
你会发现这个时候

42:00.240 --> 42:01.740
他是不是还没有任何意义了

42:01.740 --> 42:03.240
人家也就说不存了

42:03.240 --> 42:03.940
因为啥

42:03.940 --> 42:05.140
因为你现在已经有这个值了

42:05.140 --> 42:05.840
没有必要了

42:05.840 --> 42:06.240
对吧

42:06.240 --> 42:07.740
也就说不需要再存了

42:07.740 --> 42:09.540
这是这么一个处理啊

42:09.540 --> 42:09.940
然后呢

42:09.940 --> 42:10.940
我再说说一个

42:10.940 --> 42:11.840
比如说这个

42:11.840 --> 42:12.340
我看一下

42:12.340 --> 42:13.440
还有什么文章吗

42:13.440 --> 42:14.240
咱们再找几个

42:14.240 --> 42:15.240
ssr

42:15.240 --> 42:16.140
对 ok

42:16.140 --> 42:17.740
那咱们搜索一个什么

42:17.740 --> 42:19.640
ssr

42:19.640 --> 42:21.440
把这个r也写上啊

42:21.440 --> 42:21.740
好了

42:21.740 --> 42:22.640
这个ssr

42:22.640 --> 42:23.640
我们也存储一下

42:23.640 --> 42:25.640
应该这时候变成几条纸了

42:25.640 --> 42:26.640
是不是两条纸

42:26.640 --> 42:27.640
一个ssr

42:27.640 --> 42:28.740
还有一个直播

42:28.740 --> 42:29.140
然后呢

42:29.140 --> 42:30.440
并且把最后的搜索

42:30.440 --> 42:31.940
然后咱们放在最前面

42:31.940 --> 42:33.540
是不是有这么一个操作

42:33.540 --> 42:35.140
这个操作都有了之后

42:35.140 --> 42:37.740
那此时你就应该是做这个

42:37.740 --> 42:39.040
界面的渲染了吧

42:39.040 --> 42:39.640
对吧

42:39.640 --> 42:41.140
那我们就回来啊

42:41.140 --> 42:43.140
回到我们的这个set value里面

42:43.140 --> 42:44.140
回到set value里面

42:44.140 --> 42:46.040
之后我们干什么事呢

42:46.040 --> 42:47.340
因为我们这个里面

42:47.340 --> 42:48.240
有一个什么

42:48.240 --> 42:49.440
黑story list的

42:49.440 --> 42:50.440
咱没有吧

42:50.440 --> 42:51.140
没有的时候

42:51.140 --> 42:51.840
我看一下

42:51.840 --> 42:54.640
这个是根据什么显示的

42:54.640 --> 42:56.640
搜索包括这里面

42:56.640 --> 42:58.040
一字受黑story

42:58.040 --> 42:59.540
这是头部

42:59.540 --> 43:00.640
那这个里面

43:00.640 --> 43:02.840
他是两个全都展示了

43:02.840 --> 43:04.240
他也没有条件对不对

43:04.240 --> 43:05.140
因为这两个条件

43:05.140 --> 43:06.140
其实你看

43:06.140 --> 43:08.140
当前没有搜索 list

43:08.140 --> 43:09.640
然后还有一个是啥呢

43:09.640 --> 43:10.840
我们的这个相关的

43:10.840 --> 43:11.940
这个循环内容信息

43:11.940 --> 43:13.840
其实他俩应该是靠一个什么

43:13.840 --> 43:16.140
靠一个条件来做一个处理吧

43:16.140 --> 43:16.740
对不对

43:16.740 --> 43:17.440
那我这样啊

43:17.440 --> 43:18.440
我就使用什么呢

43:18.440 --> 43:19.840
使用这个state里面

43:19.840 --> 43:21.040
给我们定义的这个

43:21.040 --> 43:22.340
黑story list的

43:22.340 --> 43:25.640
控制他的这个展示和隐藏就可以了

43:25.640 --> 43:27.640
有一个map mutations

43:27.640 --> 43:28.640
还有一个方法

43:28.640 --> 43:31.140
可以跟我们使用叫map state

43:31.140 --> 43:31.540
对吧

43:33.040 --> 43:34.440
我们把这个map state

43:34.440 --> 43:35.540
也使用一下

43:35.540 --> 43:37.940
state ok

43:37.940 --> 43:39.340
在computed里面

43:39.340 --> 43:40.340
我们定义一下

43:40.340 --> 43:41.840
买四二的到这

43:41.840 --> 43:43.140
我们可以使用一下

43:44.540 --> 43:46.040
computed

43:46.040 --> 43:47.440
那这个就是点点点

43:47.440 --> 43:52.020
我们的map state

43:52.020 --> 43:53.320
map state里面

43:53.320 --> 43:54.920
我们把谁给他装进来呢

43:54.920 --> 43:56.620
就是我们刚才存储的

43:56.620 --> 43:57.720
这一个值

43:57.720 --> 43:58.920
咱们是哪一个值

43:58.920 --> 43:59.920
我们可以看一下

43:59.920 --> 44:00.820
这个state里面

44:00.820 --> 44:02.520
是不是这个黑story list的

44:02.520 --> 44:03.920
我们直接把这个v叉里面

44:03.920 --> 44:05.420
这个黑story list的

44:05.420 --> 44:07.120
拿来使用就可以了

44:07.120 --> 44:07.920
放在这个里面

44:07.920 --> 44:09.020
那黑story list的

44:09.020 --> 44:09.820
在我界面里面

44:09.820 --> 44:11.920
是不是就可以做一个什么使用了

44:11.920 --> 44:12.420
对吧

44:12.420 --> 44:13.320
那到这个里面

44:13.420 --> 44:15.120
我们也别循环这个时浪

44:15.120 --> 44:16.120
这时没什么意义

44:16.120 --> 44:16.720
对不对

44:16.720 --> 44:18.120
可以等于item ok

44:18.120 --> 44:19.320
这个都可以

44:19.320 --> 44:19.620
当然了

44:19.620 --> 44:20.720
这个我加一个吧

44:20.720 --> 44:22.020
因为它有中文啊

44:22.020 --> 44:23.320
我这里面使用一个什么

44:23.320 --> 44:24.720
使用index

44:24.720 --> 44:26.820
等于我们的这个索引值

44:26.820 --> 44:27.320
并且呢

44:27.320 --> 44:28.920
我这里面展示的就是它

44:30.120 --> 44:31.220
我们的这个item

44:31.220 --> 44:32.520
是不是这样就可以了

44:32.520 --> 44:33.120
对吧

44:33.120 --> 44:33.520
然后呢

44:33.520 --> 44:34.520
这样可以之后

44:34.520 --> 44:36.520
我们再回来看一下界面效果

44:36.520 --> 44:37.920
这时候ssr直播

44:37.920 --> 44:38.820
是不是就有了

44:38.820 --> 44:39.820
那你这个有了之后

44:39.820 --> 44:41.520
其实你现在是有搜索记录的

44:41.520 --> 44:43.120
然后当天没有搜索历史

44:43.120 --> 44:44.320
这个显然不对了

44:44.320 --> 44:44.820
对吧

44:44.820 --> 44:47.220
那我们直接让他们根据条件

44:47.220 --> 44:48.920
来进行展示就可以了

44:48.920 --> 44:49.420
也就是说

44:49.420 --> 44:52.220
一个vif和vls的关系

44:52.220 --> 44:52.720
对吧

44:52.720 --> 44:53.820
那这个vif呢

44:53.820 --> 44:54.920
其实非常好戏啊

44:54.920 --> 44:55.620
它就是什么呢

44:55.620 --> 44:58.920
我们的这个hassetory list

45:00.320 --> 45:02.520
直接把这个哎呀

45:02.520 --> 45:03.320
这里面写错了

45:03.320 --> 45:04.420
从调整一下

45:04.420 --> 45:06.620
hassetory list

45:06.620 --> 45:08.120
然后delounce

45:08.120 --> 45:10.220
是不是判断一下它的这个长度

45:10.220 --> 45:12.320
如果说你这个长度有的话

45:12.320 --> 45:13.620
那你直接展示

45:13.620 --> 45:15.220
我们现在是有搜索记录

45:15.220 --> 45:16.720
否则那那直接的

45:16.720 --> 45:18.620
是不是就没有搜索历史记录了

45:18.620 --> 45:20.220
对吧vls

45:20.220 --> 45:22.320
来咱们再回来看一眼啊

45:23.820 --> 45:26.520
现在这个里面就展示了这两个

45:26.520 --> 45:26.920
对不对

45:26.920 --> 45:29.420
然后这里面还会有一个什么清空按钮

45:29.420 --> 45:29.920
那这个呢

45:29.920 --> 45:32.920
也就是说我们最后的实现的一个内容了

45:32.920 --> 45:34.820
就是我们按钮的一个清空

45:34.820 --> 45:36.020
那这个清空咋做

45:36.020 --> 45:38.220
其实也是给它进行一个什么

45:38.220 --> 45:39.820
事件的绑定对不对

45:39.820 --> 45:40.720
然后事件绑定

45:40.720 --> 45:42.020
其实我们要操作的是

45:42.020 --> 45:43.220
v差里面的数据

45:43.220 --> 45:44.220
所以说在这个里面

45:44.220 --> 45:47.320
我们肯定得调一个v差的一个方法

45:47.320 --> 45:49.320
那我先把这个方法写一下

45:49.320 --> 45:50.220
这方法叫什么呢

45:50.220 --> 45:53.520
比如说这个叫clean history

45:53.520 --> 45:55.620
clean history

45:55.620 --> 45:56.420
ok

45:56.420 --> 45:58.020
定义这样一个方法

45:58.020 --> 46:01.420
我们回到这个mutation里面

46:01.420 --> 46:03.020
在这个里面写一下

46:03.020 --> 46:05.920
这叫什么清空

46:05.920 --> 46:08.820
清空历史搜索记录

46:08.820 --> 46:09.520
ok

46:09.520 --> 46:10.920
clean history

46:10.920 --> 46:14.120
同样的它这里面有一个state

46:14.120 --> 46:14.620
然后呢

46:14.620 --> 46:16.220
还会有一个value

46:16.220 --> 46:17.620
当然没有value了

46:17.620 --> 46:18.620
因为你都清空了

46:18.620 --> 46:19.720
你也不想给它传执了

46:19.720 --> 46:20.220
对不对

46:20.220 --> 46:23.620
那我直接的做两步操作就可以了

46:23.620 --> 46:24.520
哪两步操作呢

46:24.520 --> 46:28.020
首先是我们state点黑story list的

46:28.020 --> 46:29.520
它肯定是等于一个空了

46:29.520 --> 46:30.020
对不对

46:30.020 --> 46:30.620
也就是说

46:30.620 --> 46:31.720
那你既然都清空了

46:31.720 --> 46:33.120
你就给它一个什么

46:33.120 --> 46:33.920
给它一个空

46:33.920 --> 46:34.920
是不是就可以了

46:34.920 --> 46:35.520
然后呢

46:35.520 --> 46:38.920
我直接的通过有你点remove

46:38.920 --> 46:39.920
remove一个什么呢

46:39.920 --> 46:42.120
黑story

46:42.120 --> 46:44.420
remove一个story

46:44.420 --> 46:47.620
然后通过这种sync的形式

46:47.620 --> 46:49.820
把我们这个黑story list的

46:49.820 --> 46:50.620
给它干掉

46:50.620 --> 46:51.620
是不是就可以了

46:51.620 --> 46:53.420
也就是说通过这种形式

46:53.420 --> 46:55.320
把我们保存的本地存储的

46:55.320 --> 46:57.920
黑story list的给它弄掉啊

46:57.920 --> 46:58.120
好

46:58.120 --> 46:58.920
那咱们来试一下

46:58.920 --> 47:00.020
看行不行啊

47:00.020 --> 47:00.420
首先呢

47:00.420 --> 47:01.120
我这个里面

47:01.120 --> 47:03.120
现在有两条这个历史记录

47:03.120 --> 47:03.620
对不对

47:03.620 --> 47:06.020
那我点击一个什么清空

47:06.020 --> 47:06.620
ok呀

47:06.620 --> 47:07.820
点击清空之后

47:07.820 --> 47:09.420
其实这个里面啊

47:09.420 --> 47:10.320
我来点击一下

47:10.320 --> 47:11.120
点击清空

47:11.120 --> 47:12.020
是不是没有效果

47:12.020 --> 47:13.120
没有效果的原因是啥

47:13.120 --> 47:14.820
是因为我们虽然定义了

47:14.820 --> 47:16.820
这个mutation和state的里面

47:16.820 --> 47:18.220
相关的处理程序

47:18.220 --> 47:18.820
但是呢

47:18.820 --> 47:20.220
我们这个clear黑story

47:20.220 --> 47:21.420
是不是没有调用啊

47:21.420 --> 47:22.220
那没有调用

47:22.220 --> 47:23.420
我们就来调一下

47:23.420 --> 47:24.420
其实非常简单了

47:24.420 --> 47:25.220
这个里面

47:25.220 --> 47:26.820
我们就at click

47:26.820 --> 47:28.120
等于一个什么

47:28.120 --> 47:29.220
clean黑story

47:29.220 --> 47:30.020
是不是就可以了

47:30.020 --> 47:30.320
来

47:30.320 --> 47:31.420
咱们再来试一下

47:31.420 --> 47:33.820
刚才不算啊

47:33.820 --> 47:34.020
好的

47:34.020 --> 47:36.520
那现在我来清空

47:36.520 --> 47:37.220
还有抱错了

47:37.220 --> 47:38.420
对吧

47:38.420 --> 47:40.020
历史它一直脑底泛的

47:40.020 --> 47:40.920
来咱们看一眼

47:40.920 --> 47:41.520
是哪里的

47:41.520 --> 47:43.520
历史它一直脑底泛的

47:43.520 --> 47:44.620
我们找一下

47:44.620 --> 47:46.820
这个clean黑story

47:46.820 --> 47:48.420
clean黑story

47:48.420 --> 47:49.420
直接的隔这

47:49.420 --> 47:50.520
map mutations

47:50.520 --> 47:51.520
这里面没有问题

47:51.520 --> 47:53.820
然后我们回到这个里面

47:53.820 --> 47:55.720
有你点story值

47:55.720 --> 47:57.220
然后set storage

47:57.220 --> 47:58.020
sorry啊

47:58.020 --> 48:00.720
这个刚才粘贴的没有干掉啊

48:00.720 --> 48:01.720
把它给弄掉之后

48:01.720 --> 48:03.920
那咱们再回来啊

48:03.920 --> 48:04.720
再来试一遍

48:04.720 --> 48:05.720
由于刚才咱们的

48:05.720 --> 48:07.320
一个错误处理啊

48:07.320 --> 48:08.920
它还没有把这两条纸删除

48:08.920 --> 48:09.220
对吧

48:09.220 --> 48:10.020
正好有两条纸

48:10.020 --> 48:11.220
那我们来试一下

48:11.220 --> 48:12.320
点击清空

48:12.320 --> 48:12.620
ok

48:12.620 --> 48:15.120
现在是当前没有搜索历史记录

48:15.120 --> 48:15.520
并且呢

48:15.520 --> 48:17.020
我们看一下v差的数据

48:17.020 --> 48:17.520
到这里面

48:17.520 --> 48:18.320
payload的

48:18.320 --> 48:19.320
黑story lease的

48:19.320 --> 48:20.620
是不是现在就变成空了

48:20.620 --> 48:22.520
那这样就能实现我们一个什么

48:22.520 --> 48:23.620
把这个历史记录

48:23.620 --> 48:24.820
可以实现一个清空

48:24.820 --> 48:25.320
并且呢

48:25.320 --> 48:26.820
添加的这样一个操作

48:26.820 --> 48:27.920
我们再来试一下啊

48:27.920 --> 48:28.620
嗯

48:28.620 --> 48:29.820
再添加一个吧

48:29.820 --> 48:31.020
我们叫直播啊

48:31.020 --> 48:32.120
为什么再添加一个

48:32.120 --> 48:33.120
其实咱们这个里面啊

48:33.120 --> 48:35.320
还会有一个相关的处理的啊

48:35.320 --> 48:37.220
我这里面现在我一点机样

48:37.220 --> 48:38.720
比如说保存

48:38.720 --> 48:40.320
保存之后这个里面保存

48:40.320 --> 48:42.820
然后application里面的这个

48:42.820 --> 48:44.320
我们的黑story lease的

48:44.320 --> 48:45.820
也就是说死到里面啊

48:45.820 --> 48:46.620
黑story lease的

48:46.620 --> 48:49.620
是不是把他给他做一个清空

48:50.920 --> 48:52.320
那清空之后

48:52.320 --> 48:53.020
现在呢

48:53.020 --> 48:54.520
还有一个功能市场呢

48:54.520 --> 48:56.220
实现上下的一个关联

48:56.220 --> 48:57.220
这是啥意思

48:57.220 --> 48:58.520
当我点击直播的时候

48:58.520 --> 49:00.220
其实他马上就开始

49:00.220 --> 49:01.320
在这个里面啊

49:01.320 --> 49:02.620
进行一个搜索操作

49:02.620 --> 49:03.820
咱们可以看一下

49:03.820 --> 49:05.020
现在领略员生

49:05.020 --> 49:06.520
他是不是现在就开始搜索了

49:06.520 --> 49:07.120
那这样呢

49:07.120 --> 49:09.620
其实就是我们提高用户体验感的

49:09.620 --> 49:11.320
这么一个处理啊

49:11.320 --> 49:12.420
那这个咋来做

49:12.420 --> 49:14.120
其实现在是不是应该是

49:14.120 --> 49:15.120
绑定事件了

49:15.120 --> 49:15.820
对吧

49:15.820 --> 49:16.720
绑定什么事件呢

49:16.720 --> 49:18.520
我们到这个set view里面

49:18.520 --> 49:19.620
因为我循环的时候

49:19.620 --> 49:21.920
循环的是这个每一项

49:21.920 --> 49:22.820
那在这个里面

49:22.820 --> 49:23.720
我们就来做一下

49:23.720 --> 49:24.720
indeclick

49:24.720 --> 49:27.020
indeclick我们这里面写一个什么呢

49:27.020 --> 49:29.320
比如说这里面叫open黑story

49:31.020 --> 49:31.920
open黑story

49:31.920 --> 49:32.520
我在这个里面

49:32.520 --> 49:34.320
就可以把这个item

49:35.020 --> 49:36.620
因为你要不加item的话

49:36.620 --> 49:37.920
这时候他不知道

49:37.920 --> 49:39.520
你这个搜索关键字是啥

49:39.520 --> 49:39.820
对吧

49:39.820 --> 49:42.220
那我直接的就给他加进去

49:42.220 --> 49:43.420
open黑story

49:43.420 --> 49:44.220
在这个里面

49:44.220 --> 49:45.520
继续来定一下

49:45.520 --> 49:47.520
这个里面是通过

49:47.520 --> 49:48.520
给大家写一个注释啊

49:48.520 --> 49:49.920
这个注释是啥呢

49:49.920 --> 49:51.520
就是我们的通过

49:51.520 --> 49:55.720
点击搜索历史记录

49:57.020 --> 49:59.320
点击搜索历史记录

49:59.320 --> 50:03.920
然后进行搜索

50:03.920 --> 50:04.920
他要做两件事

50:04.920 --> 50:05.920
第一件事是啥呢

50:05.920 --> 50:08.220
就是说要把上面的引曝的框

50:08.220 --> 50:09.020
里面啊

50:09.020 --> 50:10.220
要有一个内容渲染

50:10.220 --> 50:12.820
渲染的就是我们当前的这个保存的

50:12.820 --> 50:15.020
历史搜索的这个文本信息

50:15.020 --> 50:16.220
那第二个操作是啥呢

50:16.220 --> 50:19.020
第二个操作就是开始正确的一个搜索

50:19.020 --> 50:19.920
也就是说

50:19.920 --> 50:21.620
他要做一个send and search data

50:21.620 --> 50:22.120
对吧

50:22.120 --> 50:24.720
那我们这两件事其实都非常好做

50:24.720 --> 50:25.620
直接咋做

50:25.620 --> 50:26.420
第一件事

50:26.420 --> 50:27.620
咱们先来

50:27.620 --> 50:31.220
就是我们这一次点parant

50:31.220 --> 50:33.020
value等于一个什么值呢

50:33.020 --> 50:33.820
因为我们这里面

50:33.820 --> 50:35.220
刚才传过了一个item

50:35.320 --> 50:37.520
那这里面就应该是有一个value

50:37.520 --> 50:39.420
也就是说把它渲染的这个文本

50:39.420 --> 50:41.120
给这个parantvalue复职

50:41.120 --> 50:42.420
由于我们是双相榜兵

50:42.420 --> 50:44.220
假如你parant value值呢

50:44.220 --> 50:45.720
我们这个nvbar里面

50:45.720 --> 50:46.320
此时呢

50:46.320 --> 50:47.920
因为你这里面set value

50:47.920 --> 50:49.720
是不是通过guide和set处理的

50:49.720 --> 50:50.320
对吧

50:50.320 --> 50:51.820
那你通过guide和set处理

50:51.820 --> 50:54.120
这时候这个我们set value

50:54.120 --> 50:55.220
就应该有值

50:55.220 --> 50:56.420
然后这是第一步

50:56.420 --> 50:58.120
第二步我们要做一个什么事呢

50:58.120 --> 51:00.720
再调一下这个send data方法

51:00.720 --> 51:01.620
那你现在

51:01.620 --> 51:02.880
你肯定是这个搜索

51:02.880 --> 51:03.920
旁边有内容了

51:03.920 --> 51:06.620
那我直接的去再次的请求数据

51:06.620 --> 51:07.420
是不是就可以了

51:07.420 --> 51:08.020
对吧

51:08.020 --> 51:08.520
那这个呢

51:08.520 --> 51:10.020
就是它的一个实现过程

51:10.020 --> 51:10.620
我们来试一下

51:10.620 --> 51:12.620
看可不可以

51:12.620 --> 51:13.420
点击直播

51:13.420 --> 51:15.220
你会发现有一个搜索过程

51:15.220 --> 51:15.920
那这个里面

51:15.920 --> 51:19.020
是不是现在就开始展示我当前的这个内容了

51:19.020 --> 51:19.620
对吧

51:19.620 --> 51:20.020
那这个呢

51:20.020 --> 51:22.420
就是我们整个的一个处理啊

51:22.420 --> 51:22.720
好的

51:22.720 --> 51:23.620
那到这里面呢

51:23.620 --> 51:25.320
我们整个的这个搜索啊

51:25.320 --> 51:27.020
基本上就搞定了

51:27.020 --> 51:28.520
我们都实现了哪些功能啊

51:28.520 --> 51:30.420
同学们可以再想一下

51:30.420 --> 51:31.020
首先呢

51:31.120 --> 51:32.120
我们这里面啊

51:32.120 --> 51:34.120
ss然后搜索一下

51:34.120 --> 51:35.120
你看我这里面

51:35.120 --> 51:37.520
可以进行指定内容的一个搜索

51:37.520 --> 51:38.320
然后这个里面

51:38.320 --> 51:40.720
其实我还可以跳转到详情界面的

51:40.720 --> 51:42.520
只不过我们现在没做啊

51:42.520 --> 51:44.420
除了跳转到详情界面之外

51:44.420 --> 51:45.220
我们这里面呢

51:45.220 --> 51:48.320
还会保存一个当前搜索的信息

51:48.320 --> 51:49.620
然后这是他的一个

51:49.620 --> 51:50.720
然后你这个里面

51:50.720 --> 51:52.320
如果说你要是点赞行不行

51:52.320 --> 51:53.120
也可以啊

51:53.120 --> 51:54.920
但是你现在是没有登录

51:54.920 --> 51:55.520
对吧

51:55.520 --> 51:57.920
这个业务逻辑跟我们搜索的业务逻辑

51:57.920 --> 51:58.920
不发生任何关系

51:58.920 --> 52:00.820
这个我们不用考虑啊

52:00.820 --> 52:02.120
这是这一部分

52:02.120 --> 52:04.120
那当这个部分处理完成之后

52:04.120 --> 52:06.420
比如说我把这个给回退了

52:06.420 --> 52:07.020
这时候呢

52:07.020 --> 52:09.920
他就把我们刚才的点击的

52:09.920 --> 52:12.120
这一个ssr服务端渲染

52:12.120 --> 52:13.320
搜索的这个文章

52:13.320 --> 52:14.620
然后给保存一下

52:14.620 --> 52:15.220
这个里面呢

52:15.220 --> 52:18.020
就把这个指定的文章给保存了

52:18.020 --> 52:20.320
搜索的历史记录给保存出来了

52:20.320 --> 52:22.920
那这个搜索历史记录有什么作用呢

52:22.920 --> 52:23.720
其实在这里面

52:23.720 --> 52:25.720
我们可以进行一个快捷操作

52:25.720 --> 52:26.320
也就是说

52:26.320 --> 52:28.420
我现在点击某一个的时候

52:28.420 --> 52:30.720
他还会马上给我们进行一个

52:30.920 --> 52:32.920
搜索的这样一个操作

52:32.920 --> 52:35.320
我们还可以从这个里面

52:36.520 --> 52:39.120
从模拟器里面来进行一个查看啊

52:39.120 --> 52:39.920
到模拟器里面

52:39.920 --> 52:42.220
我们打开这个里面的搜索历史

52:42.220 --> 52:43.920
那这里面我们就写一个什么

52:43.920 --> 52:46.220
ssr s

52:46.220 --> 52:48.520
然后呢 s小写的对吧

52:48.520 --> 52:50.020
搜索一个s是不是也可以啊

52:50.020 --> 52:50.220
对吧

52:50.220 --> 52:51.720
那我直接search

52:51.720 --> 52:52.720
好的这里面就有了

52:52.720 --> 52:54.020
点击search之后

52:54.020 --> 52:54.520
那这个呢

52:54.520 --> 52:56.320
就是我们搜索的相关内容

52:56.320 --> 52:57.420
搜索相关内容之后

52:57.420 --> 52:58.520
我一点击

52:58.520 --> 53:00.120
那这时候就应该保存了

53:00.120 --> 53:01.320
一个什么历史记录

53:01.320 --> 53:01.820
对吧

53:01.820 --> 53:02.320
然后呢

53:02.320 --> 53:03.920
我这个里面给他做一个什么

53:03.920 --> 53:05.420
清空套座啊

53:05.420 --> 53:06.520
按这个键啊

53:06.520 --> 53:07.120
好清空

53:07.120 --> 53:08.720
这里面是不是有一条记录了

53:08.720 --> 53:09.920
有这个记录之后

53:09.920 --> 53:11.320
那我还可以通过这个记录

53:11.320 --> 53:13.120
快速的来进行一个什么

53:13.120 --> 53:14.020
查询

53:14.020 --> 53:15.420
是不是这里面 ssr

53:15.420 --> 53:16.820
为什么说javascript

53:16.820 --> 53:17.720
好多内容啊

53:17.720 --> 53:19.720
大概一二三四四条指呢

53:19.720 --> 53:20.320
对不对

53:20.320 --> 53:21.320
然后再来搜一个

53:21.320 --> 53:23.320
比如说这里面选择一个什么呢

53:23.320 --> 53:24.220
选择一个数字吧

53:24.220 --> 53:25.220
因为咱们直到一夜

53:25.220 --> 53:26.220
可以搜取到内容

53:26.220 --> 53:26.720
对吧

53:26.720 --> 53:28.120
咱们就来试一下

53:28.120 --> 53:29.520
是不是和咱们这个

53:29.520 --> 53:30.720
里面完全一致

53:30.720 --> 53:32.120
也输入三条纸

53:32.120 --> 53:32.720
对不对

53:32.720 --> 53:33.120
这个呢

53:33.120 --> 53:35.520
就是我们整个的一个实现过程

53:36.720 --> 53:37.020
好的

53:37.020 --> 53:38.120
以上这些呢

53:38.120 --> 53:40.420
就是我们整个搜索模块的

53:40.420 --> 53:41.120
所有内容

53:41.120 --> 53:42.620
至于跟其他组件

53:42.620 --> 53:44.020
或者是其他页面

53:44.020 --> 53:45.220
我们再有关联呢

53:45.220 --> 53:46.920
在接下来的课程学习当中

53:46.920 --> 53:49.720
我们再继续的进行一个完善

53:49.720 --> 53:51.320
我们本节课就到这里

