WEBVTT

00:01.780 --> 00:06.540
各位同学 大家好 我们这节课继续UniApp的一个学习

00:06.540 --> 00:10.420
那么本节课我们来学习一下UniCloud的一个使用

00:10.420 --> 00:13.740
那下面这两个是它的一个参考文档

00:13.740 --> 00:18.300
我们在接下来的学习过程当中会经常的进行一个使用

00:18.300 --> 00:20.300
同学们要记住这两个文档

00:20.300 --> 00:26.700
因为我们以后的操作会在基于这个文档上面进行一些相关的API的一个查询

00:26.700 --> 00:28.940
那么在学习UniCloud之前

00:28.940 --> 00:34.060
我们先了解一下这个传统业务的一个开发流程

00:34.060 --> 00:36.140
在传统业务开发流程过程当中

00:36.140 --> 00:38.380
我们进行一个项目的开发过程

00:38.380 --> 00:41.660
首先是由前端进行一个代码的编写

00:41.660 --> 00:46.460
之后在与后端的同学进行一个数据的对接连条

00:46.460 --> 00:50.860
然后最后由我们的运为同学进行一个项目的发布

00:50.860 --> 00:55.220
那么随着前端这些年JS不断的扩展以及完善

00:55.260 --> 01:00.020
我们现在开发可以打破这种传统意义上的一个开发流程

01:00.020 --> 01:04.460
UniCloud就是其中比较有代表性的这么一个产品

01:04.460 --> 01:07.540
我们可以通过UniCloud的实现什么呢

01:07.540 --> 01:13.220
就是我们前端在完成自己相关的业务代码的开发同时

01:13.220 --> 01:16.580
可以使用Javascript来操作UniCloud的

01:16.580 --> 01:19.140
搭建一个完整的后端服务

01:19.140 --> 01:22.860
来为项目提供一个完整的后端的一个创建

01:22.940 --> 01:26.220
最后直接进行项目的一个打包发布

01:26.220 --> 01:32.140
那这里面就省去了后端同学一个参与的这样一个过程

01:32.140 --> 01:36.220
那我们接下来了解一下什么是UniCloud的

01:36.220 --> 01:38.620
它就是由Declod公司

01:38.620 --> 01:44.300
也就是这个出品UniApp以及我们的编辑器HBuildX这个公司

01:44.300 --> 01:48.660
联合阿里云 腾俊云为我们开发者提供的

01:48.660 --> 01:52.940
基于Soverlays模式和Javascript编程实现的一个

01:52.940 --> 01:56.740
搭建后端服务云开发的这样一个产品

01:56.740 --> 01:59.260
它主要就是不需要服务器的购买

01:59.260 --> 02:02.700
就可以实现一个完整的后端服务

02:02.700 --> 02:05.940
而且在代码编写的过程当中使用JS

02:05.940 --> 02:10.140
就可以实现所有的一个后端开发的业务流程

02:10.140 --> 02:11.820
它有哪些特点呢

02:11.820 --> 02:13.700
我们在这里面看一下

02:13.700 --> 02:17.900
首先就是用Javascript开发前后台的一个整体业务

02:17.940 --> 02:21.980
省去了我们一个后端同学必须参与到一个项目的

02:21.980 --> 02:24.620
开发环节当中这样一个过程

02:24.620 --> 02:28.340
而且这对于一些通过UniCloud的实现的业务

02:28.340 --> 02:32.180
我们的开发成本也相对的会有所下降

02:32.180 --> 02:36.620
第二个就是在不发布HTML项目的一个情况下

02:36.620 --> 02:40.300
也就是说我们我们不做BIB应用的一个开发

02:40.300 --> 02:43.460
那我们的这个域名都不需要进行被按操作了

02:43.460 --> 02:46.460
也就是说我们的小程序或者是APP应用

02:46.500 --> 02:48.180
在没有域名的情况下

02:48.180 --> 02:52.380
就能实现一个完整的后端服务的这样一个创建

02:52.380 --> 02:53.900
并且提供输出

02:53.900 --> 02:57.060
第三就是针对敏捷性的一个业务处理

02:57.060 --> 03:00.700
我们不需要前后端沟通的这样一个过程

03:00.700 --> 03:06.060
也就是省去了我们Moke数据或者是连条的这样一个过程

03:06.060 --> 03:08.140
直接进行开发就ok了

03:08.140 --> 03:12.700
所以说真正做到了前端开发所写及所得

03:12.740 --> 03:18.020
那我们接下来再说一下UNIQLO的一个开发流程

03:18.020 --> 03:20.220
如果说使用UNIQLO的开发

03:20.220 --> 03:23.740
我们首先需要创建我们的项目

03:23.740 --> 03:28.860
并且是基于我们的云开发的环境下进行项目的创建

03:28.860 --> 03:33.180
那接下来就是我们代码的编写的一个过程

03:33.180 --> 03:35.740
将代码写在云含树当中

03:35.740 --> 03:40.580
然后将我们的云含树上传到我们阿里云

03:40.620 --> 03:45.100
或者是腾讯员给我们提供的一个severless环境当中

03:45.100 --> 03:49.500
最后有我们开发者进行云含树的一个实际调用

03:49.500 --> 03:53.220
这个就是整个UNIQLO的一个实现流程

03:53.220 --> 03:57.460
现在我们看这张图感觉还是不那么特别清晰

03:57.460 --> 04:00.260
因为我们没有动手进行一个编写

04:00.260 --> 04:02.380
那在整个我们实现的过程当中

04:02.380 --> 04:03.820
同学们就会发现

04:03.820 --> 04:09.220
可以更加清晰的了解整个我们UNIQLO的实现的一个过程

04:09.260 --> 04:11.620
就是不会像现在这样比较仇向了

04:12.860 --> 04:15.820
而且在这个里面我们整个开发过程当中

04:15.820 --> 04:18.180
就是我们连接的是Declod的

04:18.180 --> 04:23.820
运行过程当中我们是直连到阿里云或者是腾讯员的一个severless环境

04:23.820 --> 04:26.300
不需要再进行一个Declod的终转

04:26.300 --> 04:29.220
这个就是一个它的开发流程

04:29.220 --> 04:33.700
那么再接下来我们再看一下UNIQLO的一个构成

04:33.700 --> 04:36.900
它的构成基本上我们可以简单理解为

04:36.900 --> 04:38.020
有这几部分

04:38.020 --> 04:40.460
首先就是我们的UNIQLO

04:40.460 --> 04:42.620
然后就是这个UN数据库

04:42.620 --> 04:45.300
最后就是我们的这个云存储

04:45.300 --> 04:48.260
那我们只要掌握这三大部分就OK了

04:48.260 --> 04:50.420
那首先来看一下这个UNIQLO

04:50.420 --> 04:53.700
UNIQLO指的是定义在一个指定node的环境当中

04:53.700 --> 04:55.620
运行的一个js环数

04:55.620 --> 04:59.260
这个就是它的一个初始化模板的一个截图

04:59.260 --> 05:01.220
我们看这段代码不太陌生

05:01.220 --> 05:06.060
它跟我们传统意义上的这个js

05:06.140 --> 05:09.980
几乎在代码编写的过程当中没有任何的差异

05:09.980 --> 05:15.620
只不过是它的这个代码运行在我们云端的一个node的js环境当中

05:15.620 --> 05:18.500
当云环数被客户端调用的时候

05:18.500 --> 05:20.860
也就是说这段代码执行的时候

05:20.860 --> 05:25.660
定义的这个代码就会被放在node环境当中进行一个执行

05:25.660 --> 05:28.100
这个是跟我们普通喊出的一个最大区别

05:29.340 --> 05:31.340
第二个就是云数据库

05:31.340 --> 05:34.140
那它既然可以提供一个完整的后端服务

05:34.140 --> 05:35.900
数据库是少不了的

05:35.900 --> 05:43.020
如果说我们刚从node的js通过我们mongo数据库的一个学习转化过来的话

05:43.020 --> 05:46.460
那在这个我们学习uniclode云数据库的时候

05:46.460 --> 05:52.300
几乎我们是零学习成本直接可以进行一个平稳的这样一个过渡

05:52.300 --> 06:01.380
因为它就是uniclode提供的一个基于json格式的一个文档型数据库和mongo是非常像的

06:01.380 --> 06:05.820
数据库中的一个每条纪录都是一个json格式对象

06:05.820 --> 06:08.660
一个数据库可以有多个集合

06:08.660 --> 06:10.820
其实这个就像我们关于一个数据库

06:10.820 --> 06:13.580
比如说my circle当中的一个数据表

06:13.580 --> 06:16.620
那集合可以看作是一个json的数组

06:16.620 --> 06:19.380
数组中每个对象那就是一条纪录

06:19.380 --> 06:22.500
纪录的格式也是json的一个对象

06:22.500 --> 06:24.260
我们这个马上就会操作到啊

06:24.260 --> 06:25.700
同学们这个也不用担心

06:27.020 --> 06:31.300
最后一部分就是云存储以及我们的这个cdn

06:31.300 --> 06:34.940
在uniclode的这个文档里面也提到过

06:34.940 --> 06:38.220
开发者在使用uniclode的一个云存储

06:38.220 --> 06:43.820
那无需再像我们传统模式那样单独的去购买一个存储空间

06:43.820 --> 06:45.980
比如说以前我们进行数据的存储

06:45.980 --> 06:49.740
我们可能单独的会搞一个空间或者说做cdn

06:49.740 --> 06:51.900
那类似的我们可能会使用骑牛啊

06:51.900 --> 06:55.620
或者是其他的提供一些云服务的这个地方

06:55.620 --> 06:57.820
我们去购买这个存储空间

06:57.820 --> 07:00.020
然后呢也就是说做一些对象存储

07:00.020 --> 07:01.740
那uniclode就不需要了

07:01.740 --> 07:05.460
然后呢我们省去了这些硬设啊流量采购这些环节

07:05.460 --> 07:07.660
uniclode的一个阿里云云存储啊

07:07.660 --> 07:11.460
和cdn免费提供给开发者进行一个使用

07:11.460 --> 07:14.940
我们可以啊同实现一个什么的多云存储

07:14.940 --> 07:18.340
进行文件的一个包括数据的一个保存操作

07:18.340 --> 07:20.660
然后调用这个存储空间的时候

07:20.660 --> 07:22.420
方法也是比较丰富的

07:22.420 --> 07:25.180
不像我们以前只能用代码的形式啊

07:25.180 --> 07:27.300
来进行这个操作

07:27.300 --> 07:28.540
我们有几种方式啊

07:28.580 --> 07:29.860
首先第一种就是呢

07:29.860 --> 07:33.180
可以啊前端操作客户端的一个API

07:33.180 --> 07:38.060
直接以直传的这种形式来实现一个云存储数据

07:38.060 --> 07:41.460
然后呢还可以通过云存储的这个web界面

07:41.460 --> 07:44.300
进行一个可视化的一个数据操作

07:44.300 --> 07:48.660
或者是呢我们使用这种uniclode的云含数上传文件

07:48.660 --> 07:51.060
到我们的这个云存储空间

07:51.060 --> 07:54.540
最主要的就是刚才我说的这三种形式啊

07:54.540 --> 07:56.300
那么其以上的这些呢

07:56.340 --> 07:58.460
我们对uniclode现在呢

07:58.460 --> 08:00.820
可以做一个简单的了解

08:00.820 --> 08:03.300
像这种云开发的技术啊

08:03.300 --> 08:05.940
已经是广泛的得到英英了

08:05.940 --> 08:07.820
比如说我们微信小程序

08:07.820 --> 08:09.100
支付宝小程序

08:09.100 --> 08:11.980
他们呢本身都有自己对应的这个云开发

08:13.900 --> 08:15.660
像我们的这个微信脚费

08:15.660 --> 08:16.940
乘车马其实呢

08:16.940 --> 08:20.180
现在都是在进行这个使用云开发

08:20.180 --> 08:20.860
但里面呢

08:20.860 --> 08:23.460
其实也有一些弊端啊

08:23.460 --> 08:26.140
就是无法实现一个跨端的开发

08:26.180 --> 08:29.700
uniclode就完美的解决了跨端的这个问题

08:29.700 --> 08:33.140
就像unip可以进行跨端开发应用

08:33.140 --> 08:34.860
这个特点是一样的

08:34.860 --> 08:35.780
uniclode呢

08:35.780 --> 08:39.700
就可以实现各端的一个跨端的这样开发

08:39.700 --> 08:40.820
那么说了这么多呢

08:40.820 --> 08:41.900
我们接下来啊

08:41.900 --> 08:48.660
就开始来进行一个我们uniclode的一个创建的这样一个过程

08:48.660 --> 08:49.340
那首先呢

08:49.340 --> 08:50.580
我们要创建的话啊

08:50.580 --> 08:54.740
要进行一个指定uniclode的一个工程的创建

08:54.740 --> 08:55.580
怎么来实现

08:55.620 --> 08:57.900
我们首先打开我们的HBU的

08:59.140 --> 09:00.540
在这个HBU的里面啊

09:00.540 --> 09:01.700
我们要做几件事

09:01.700 --> 09:02.580
首先第一呢

09:02.580 --> 09:06.140
还是我们每次经常要使用到的

09:06.140 --> 09:08.820
是我们要新建一个项目

09:08.820 --> 09:10.620
在新建项目的过程当中呢

09:10.620 --> 09:11.260
这次呢

09:11.260 --> 09:15.420
我们要进行一个选项的扩充的一个补充了

09:15.420 --> 09:16.180
那我们这里面

09:16.180 --> 09:18.020
首先创建项名程

09:18.020 --> 09:18.940
我们写一个

09:19.940 --> 09:23.380
TES的uniclode

09:23.380 --> 09:24.100
OK

09:24.100 --> 09:24.900
喜欢之后呢

09:24.900 --> 09:26.860
这个文件的这个路径啊

09:26.860 --> 09:28.300
自行来进行一个更改

09:28.300 --> 09:28.820
模板呢

09:28.820 --> 09:30.380
我还是使用模人模板

09:30.380 --> 09:31.460
但这个里面

09:31.460 --> 09:32.940
我们下面这两个选项

09:32.940 --> 09:34.540
我们要进行一个选择

09:34.540 --> 09:35.300
首先这里面

09:35.300 --> 09:36.980
启用uniclode的

09:36.980 --> 09:37.460
然后呢

09:37.460 --> 09:39.260
这里面选择上

09:39.260 --> 09:39.700
之后呢

09:39.700 --> 09:40.660
我在这个啊

09:40.660 --> 09:44.860
里面有一个阿里云和腾讯云的一个选择

09:44.860 --> 09:45.780
默认呢

09:45.780 --> 09:47.220
他是选择到阿里云

09:47.220 --> 09:48.060
然后我们这里面

09:48.060 --> 09:49.980
也可以进行腾讯云的选择

09:49.980 --> 09:50.380
这个呢

09:50.380 --> 09:51.540
你自行选择

09:51.540 --> 09:53.820
我们这个测试演示里面啊

09:53.860 --> 09:56.340
会使用这个阿里云进行演示

09:56.340 --> 09:56.900
所以说呢

09:56.900 --> 10:01.180
我们这里面使用阿里云进行一个工程的创建

10:02.260 --> 10:03.340
创建完成之后呢

10:03.340 --> 10:04.460
我们展开啊

10:04.460 --> 10:06.900
我们定义好的这个项目来看一下

10:06.900 --> 10:07.620
那这个里面啊

10:07.620 --> 10:09.900
跟我们之前创建的下面有一个区别

10:09.900 --> 10:10.420
是什么呢

10:10.420 --> 10:13.700
就是我们在这个里面多了一个uniclode

10:13.700 --> 10:14.820
然后这个uniclode

10:14.820 --> 10:15.860
这个是啥意思啊

10:15.860 --> 10:16.540
其实这个呢

10:16.540 --> 10:18.340
就是我们定义好的

10:18.340 --> 10:21.220
如果说我们创建了uniclode的服务之后

10:21.220 --> 10:22.900
谈不个认生成的文件家

10:22.900 --> 10:23.660
在这个里面

10:23.660 --> 10:25.140
首先跟同学们说一下

10:25.140 --> 10:27.420
我在这里面也给同学们写上了

10:27.420 --> 10:28.780
你第一次创建的过程

10:28.780 --> 10:29.420
这个里面

10:29.420 --> 10:33.260
首先你要保证unip应用标识的一个填写

10:33.260 --> 10:33.860
那是什么呢

10:33.860 --> 10:36.260
保证我们用户为登录状态

10:36.260 --> 10:37.620
我们怎么看登录状态

10:37.620 --> 10:39.620
就是在右下角这一块啊

10:39.620 --> 10:41.860
我们看到了有一个用户的登录

10:41.860 --> 10:42.860
那这个里面呢

10:42.860 --> 10:43.900
是第一步

10:43.900 --> 10:45.460
我们这里面还要看一下

10:45.460 --> 10:46.540
Manifest的点

10:46.540 --> 10:48.820
Jason里面有一个unip应用的

10:48.820 --> 10:50.220
这样一个标识

10:50.220 --> 10:50.780
那这个呢

10:50.780 --> 10:51.900
是他的第一步

10:51.900 --> 10:52.580
第二步呢

10:52.620 --> 10:56.140
我们要进行云服务空间的一个创建

10:56.140 --> 10:56.980
因为现在啊

10:56.980 --> 10:58.260
我们提示的是什么呢

10:58.260 --> 11:01.860
阿里云为关联我们的一个云服务空间

11:01.860 --> 11:02.420
此时呢

11:02.420 --> 11:05.340
我们要进行云服务空间的一个关联

11:05.340 --> 11:06.300
那在这个里面

11:06.300 --> 11:07.820
还得提示同学们一下啊

11:07.820 --> 11:09.740
就是说如果说

11:09.740 --> 11:12.180
你没有进行实名认证

11:12.180 --> 11:12.740
那他呢

11:12.740 --> 11:15.300
会跳转到实名认证的一个页面

11:15.300 --> 11:16.700
进行实名认证

11:16.700 --> 11:18.900
如果说实名认证审核之后

11:18.900 --> 11:20.700
可以开通服务空间

11:20.700 --> 11:21.220
如果说

11:21.220 --> 11:23.460
腾讯营实名认证提示身份证下

11:23.460 --> 11:24.980
已创建了多个账户

11:24.980 --> 11:27.020
那再需要在腾讯营官网

11:27.020 --> 11:29.380
注销一下不需要的这个账户

11:29.380 --> 11:29.860
也就是说

11:29.860 --> 11:32.180
你之前做过一些实名认证

11:32.180 --> 11:33.020
在腾讯营下

11:33.020 --> 11:34.860
那你还得做一个注销操作

11:34.860 --> 11:35.300
所以说呢

11:35.300 --> 11:37.260
我们在这里面选择了阿里云啊

11:37.260 --> 11:37.740
相对呢

11:37.740 --> 11:38.980
会简单一些

11:38.980 --> 11:39.980
但是在这个里面

11:39.980 --> 11:40.820
我跟同学们讲

11:40.820 --> 11:42.220
实名认证的时间

11:42.220 --> 11:44.500
大概审核是一天左右

11:44.500 --> 11:44.940
不过呢

11:44.940 --> 11:46.460
几个小时也有可能

11:46.460 --> 11:46.900
所以说呢

11:46.900 --> 11:48.260
我们要密切关注一下

11:48.260 --> 11:49.340
我们实名认证

11:49.340 --> 11:51.300
添写的这个邮箱就ok

11:51.300 --> 11:53.020
如果你实名认证完了之后

11:53.020 --> 11:56.140
那我再点击这个关联阿里云服务空间

11:56.140 --> 11:58.460
这里面我们右键啊

11:58.460 --> 12:00.380
关联阿里云服务空间和项目

12:00.380 --> 12:01.020
那这些呢

12:01.020 --> 12:03.780
就是我们阿里云的一些服务空间

12:03.780 --> 12:05.060
在哪个里面看啊

12:05.060 --> 12:06.340
其实我们先不着急

12:06.340 --> 12:07.180
来创建啊

12:07.180 --> 12:07.860
关联

12:07.860 --> 12:09.940
我们在这个里面右键的时候

12:09.940 --> 12:10.540
这里面呢

12:10.540 --> 12:13.180
还有一个打开unicload的一个

12:13.180 --> 12:14.500
web控制台

12:14.500 --> 12:15.780
那这个web控制台呢

12:15.780 --> 12:18.420
就是unicload给我们提供的一个

12:18.500 --> 12:21.100
后台的管理的这样一个界面

12:21.100 --> 12:22.020
我们在这个里面

12:22.020 --> 12:26.300
可以找到我们之前创建的一些服务空间

12:26.300 --> 12:27.380
那比如说

12:27.380 --> 12:29.660
TES的unicload的TES的这些啊

12:29.660 --> 12:31.860
都是我创建之前定义好的

12:31.860 --> 12:32.820
如果你有呢

12:32.820 --> 12:33.900
就在这个里面展示

12:33.900 --> 12:34.660
没有打扮呢

12:34.660 --> 12:37.380
那我直接再回到HPU的查里面

12:37.380 --> 12:39.620
我们做这个右键

12:39.620 --> 12:40.220
然后呢

12:40.220 --> 12:42.100
关联云服务空间的时候

12:42.100 --> 12:44.740
这里面有直接在指定的列表项里面

12:44.740 --> 12:47.100
关联你创建好的服务空间

12:47.140 --> 12:47.620
或者呢

12:47.620 --> 12:49.500
你新建一个服务空间

12:49.500 --> 12:50.300
我在这里面啊

12:50.300 --> 12:53.340
就进行一个新建服务空间的这样一个操作

12:54.500 --> 12:55.180
那这里面啊

12:55.180 --> 12:57.340
就会给你指定创建服务空间

12:57.340 --> 12:59.340
是阿里云还是腾俊云

12:59.340 --> 13:01.860
这里面有一个服务空间的名字

13:01.860 --> 13:02.860
然后这个名字呢

13:02.860 --> 13:03.900
有一个规则

13:03.900 --> 13:05.260
同学们在添写的时候

13:05.260 --> 13:06.220
要注意一下

13:06.220 --> 13:08.660
字母数字或者中横线啊

13:08.660 --> 13:11.060
那我直接写一个std

13:12.660 --> 13:13.660
std

13:13.660 --> 13:15.340
unicload的

13:15.380 --> 13:15.860
注意啊

13:15.860 --> 13:18.540
不要跟你之前创建的这个命名啊

13:18.540 --> 13:19.380
是相同的

13:19.380 --> 13:20.220
那这样呢

13:20.220 --> 13:20.900
会有问题

13:20.900 --> 13:22.180
所以说我这里面啊

13:22.180 --> 13:24.020
保证它的唯一性之后

13:24.020 --> 13:25.980
我直接的进行一个创建

13:27.580 --> 13:27.980
ok

13:27.980 --> 13:29.820
那你创建好之后

13:29.820 --> 13:30.940
这个界面里面啊

13:30.940 --> 13:33.580
就会直接跳转到我们这个空间

13:33.580 --> 13:34.540
空间里有什么

13:34.540 --> 13:36.740
就是我们刚才说的这几项都有

13:36.740 --> 13:37.460
云数就库

13:37.460 --> 13:38.260
云函数

13:38.260 --> 13:40.300
以及我们这个云存储

13:40.300 --> 13:40.740
然后呢

13:40.740 --> 13:43.260
再回到我们这个HPU的查里面

13:43.260 --> 13:44.060
此时呢

13:44.100 --> 13:46.220
你刷新一下这个界面

13:46.220 --> 13:46.940
那这时候呢

13:46.940 --> 13:49.180
就会有你定义好的一个

13:49.180 --> 13:50.860
stdunicload的

13:50.860 --> 13:52.940
我选择这个啊

13:52.940 --> 13:55.580
选择上之后进行一个关联操作

13:55.580 --> 13:56.580
此时你会发现啊

13:56.580 --> 13:59.020
这里面就已经进行了一个关联

13:59.020 --> 14:00.340
我们实现的流程呢

14:00.340 --> 14:01.660
就按照我这个导图啊

14:01.660 --> 14:04.780
一步一步的来完成就ok了

14:04.780 --> 14:05.140
然后呢

14:05.140 --> 14:06.500
我们接下来说一下

14:06.500 --> 14:08.700
做一个云函数的创建

14:08.700 --> 14:10.300
那我们一步一步的来实现

14:10.300 --> 14:10.860
对吧

14:10.860 --> 14:11.420
首先呢

14:11.420 --> 14:13.460
是这个云函数怎么来创建

14:13.460 --> 14:14.700
我们在这个下面啊

14:14.700 --> 14:17.380
目录下面有一个cloade function

14:17.380 --> 14:17.940
此

14:17.940 --> 14:19.300
也就是说在这个里面

14:19.300 --> 14:21.300
是不是有一个函数啊

14:21.300 --> 14:21.820
对不对

14:21.820 --> 14:23.060
那我直接隔这一块啊

14:23.060 --> 14:25.100
来进行一个右键

14:25.100 --> 14:25.540
注意啊

14:25.540 --> 14:29.140
鼠标一定要到我们的cloade functions下面

14:29.140 --> 14:29.900
在这个里面呢

14:29.900 --> 14:31.860
有一个新建云函数

14:31.860 --> 14:33.140
那我们直接的

14:33.140 --> 14:33.460
哎

14:33.460 --> 14:34.180
ok

14:34.180 --> 14:35.060
那在时候呢

14:35.060 --> 14:36.700
我们新建云函数的时候

14:36.700 --> 14:38.180
要把这个名字

14:38.180 --> 14:40.100
云函数的这个名字定义好

14:40.100 --> 14:41.740
那我这里面可以

14:41.780 --> 14:42.980
test

14:42.980 --> 14:43.660
呃

14:43.660 --> 14:44.740
test 1

14:44.740 --> 14:45.780
好吧

14:45.780 --> 14:46.860
我们以test的e啊

14:46.860 --> 14:47.940
当然这个命名

14:47.940 --> 14:48.820
没有什么意义啊

14:48.820 --> 14:50.340
我只是给他一个标识

14:50.340 --> 14:52.540
为了我们清楚的来这个

14:52.540 --> 14:53.180
呃

14:53.180 --> 14:54.300
知道一下就可以了

14:54.300 --> 14:55.980
test level 1

14:55.980 --> 14:56.620
ok

14:56.620 --> 14:57.140
那这个呢

14:57.140 --> 14:59.620
就是我们第一个云函数的创建

14:59.620 --> 15:00.220
那你会发现

15:00.220 --> 15:01.060
创建完这个

15:01.060 --> 15:02.460
第一个云函数之后

15:02.460 --> 15:05.420
和我们刚才截图的这个模板啊

15:05.420 --> 15:06.820
同学们在网上找

15:06.820 --> 15:08.420
我们刚才定义的这个模板

15:08.420 --> 15:09.260
是不是一样

15:09.260 --> 15:09.740
也就是说

15:09.740 --> 15:10.380
他出手的话

15:10.380 --> 15:12.060
会给我们提供一个模板

15:12.060 --> 15:12.500
这个呢

15:12.500 --> 15:13.820
就是一个云函数

15:13.820 --> 15:14.900
那这个云函数呢

15:14.900 --> 15:16.620
会运行在哪

15:16.620 --> 15:18.300
运行在我们云端的

15:18.300 --> 15:19.620
node的环境当中

15:19.620 --> 15:20.100
所以说呢

15:20.100 --> 15:20.700
我们啊

15:20.700 --> 15:21.980
在这个基础上

15:21.980 --> 15:23.460
来进行代码的编写

15:23.460 --> 15:24.300
就ok

15:24.300 --> 15:25.860
那怎么来操作他呢

15:25.860 --> 15:27.860
或者说我们怎么来做一些

15:27.860 --> 15:29.860
这个云函数的一个实现

15:29.860 --> 15:30.980
或者是来查看呢

15:30.980 --> 15:32.700
这个非常简单啊

15:32.700 --> 15:33.300
首先呢

15:33.300 --> 15:35.140
如果说我们在这个里面

15:35.140 --> 15:36.580
来定义好之后

15:36.580 --> 15:37.940
那我这时候

15:37.980 --> 15:39.460
我们的这个云web

15:39.460 --> 15:40.340
服务空间

15:40.340 --> 15:41.540
也就是说在这个里面

15:41.540 --> 15:42.700
应该会有云函数

15:42.700 --> 15:43.940
但是现在没有

15:43.940 --> 15:45.220
没有的原因是长的

15:45.220 --> 15:47.940
是我们还没有进行一个创建

15:47.940 --> 15:49.860
那我们怎么来进行创建

15:49.860 --> 15:50.860
这个时候呢

15:50.860 --> 15:51.540
我们啊

15:51.540 --> 15:52.580
已经创建好了

15:52.580 --> 15:54.380
其实这里面就缺少一个什么

15:54.380 --> 15:55.860
上传的过程

15:55.860 --> 15:58.020
我们在这个Test的Level1下面

15:58.020 --> 15:58.980
右键

15:58.980 --> 15:59.820
右键的时候

15:59.820 --> 16:02.300
我们点击上传部署

16:02.300 --> 16:03.580
然后ok

16:03.580 --> 16:04.060
此时啊

16:04.060 --> 16:05.420
咱们先不要考虑这个里面

16:05.420 --> 16:06.140
都是什么东西啊

16:06.140 --> 16:07.740
我们先上传部署一下

16:07.740 --> 16:09.180
当我上传部署完成之后

16:09.180 --> 16:09.860
底前呢

16:09.860 --> 16:11.620
控制台会有一个提示

16:11.620 --> 16:13.060
那在上传部署完成之后

16:13.060 --> 16:14.980
我在刷新这个时候啊

16:14.980 --> 16:17.700
这里面就会多了一个函数啊

16:17.700 --> 16:19.180
这个叫TestLevel1

16:19.180 --> 16:20.780
也就是我们创建的

16:20.780 --> 16:21.860
那创建之后啊

16:21.860 --> 16:23.060
我们来看一下

16:23.060 --> 16:25.380
这个云函数默认里面的内容

16:25.380 --> 16:26.620
都是些什么

16:26.620 --> 16:27.380
就是说

16:27.380 --> 16:30.580
刚才我们创建的这个云函数

16:30.580 --> 16:31.220
那其实呢

16:31.220 --> 16:32.260
它这个模板

16:32.260 --> 16:33.020
就是这里面啊

16:33.020 --> 16:34.820
我给同学已经做了注释

16:34.820 --> 16:35.180
首先

16:35.180 --> 16:35.660
第一个

16:35.660 --> 16:37.260
我们看到的云函数里面

16:37.260 --> 16:38.380
这个Events

16:38.380 --> 16:41.460
它为客户端上传的一个参数

16:41.460 --> 16:41.900
也就是说

16:41.900 --> 16:45.060
我们客户端进行一些参数的这个

16:45.060 --> 16:45.700
获取啊

16:45.700 --> 16:46.900
就是在这个上传

16:46.900 --> 16:47.660
然后我们

16:47.660 --> 16:48.860
比如说传统的后端

16:48.860 --> 16:51.340
获取一些前端传递的参数

16:51.340 --> 16:53.220
我们都在这个里面进行获取

16:53.220 --> 16:54.140
Contex呢

16:54.140 --> 16:55.500
包含了调用信息

16:55.500 --> 16:57.060
以及一个运行状态

16:57.060 --> 16:59.700
获取每次的一个调用的一个上下文

16:59.700 --> 17:00.460
在这个里面呢

17:00.460 --> 17:02.220
他们认识有一个打印

17:02.220 --> 17:03.500
然后这里面啊

17:03.500 --> 17:07.420
Return的是返回给客户端的一些信息内容

17:07.420 --> 17:08.860
那我们这个怎么来做

17:08.860 --> 17:10.100
我们可以来看一下

17:10.100 --> 17:11.540
我们这些是不是都有啊

17:11.540 --> 17:12.820
然后这个里面呢

17:12.820 --> 17:14.580
直接返回给客户端

17:14.580 --> 17:16.900
也就是说返回给我们前端一个Events

17:16.900 --> 17:18.780
那这个我们不让它返回Events

17:18.780 --> 17:19.780
我们返回一个什么

17:21.140 --> 17:21.660
这里面

17:21.660 --> 17:22.780
code0

17:22.780 --> 17:24.980
一般的我们是MSG

17:24.980 --> 17:25.620
然后呢

17:25.620 --> 17:27.500
我这里面给一个什么呢

17:27.500 --> 17:28.700
给一个提示啊

17:28.700 --> 17:30.940
请求成功

17:30.940 --> 17:31.500
OK

17:31.500 --> 17:32.700
那我想把这个

17:32.700 --> 17:35.060
返回给我们的一个客户端

17:35.060 --> 17:35.980
那这时候

17:35.980 --> 17:37.260
如果说你定义好了之后

17:37.260 --> 17:37.780
怎么办

17:37.780 --> 17:38.500
你这个里面啊

17:38.500 --> 17:41.420
再进行一下上传部署

17:41.420 --> 17:41.820
OK

17:41.820 --> 17:42.580
那这时候呢

17:42.580 --> 17:45.140
它会上传到我们的这个云端

17:45.140 --> 17:46.700
当你上传完成之后

17:46.700 --> 17:48.740
我们这时候可以进行一个啥呢

17:48.740 --> 17:50.020
调用来查看

17:50.020 --> 17:51.060
那怎么调用查看呢

17:51.060 --> 17:53.380
首先我们打开我们的这个chrome

17:53.380 --> 17:54.420
先运行一下

17:54.420 --> 17:57.300
这里面提前给同学们来实现运行一下啊

17:57.300 --> 17:59.140
我们先来看看它的一个演示结果

18:00.820 --> 18:01.140
好的

18:01.140 --> 18:02.340
等待h5啊

18:02.340 --> 18:04.540
打开我们的一个界面

18:04.540 --> 18:05.460
打开界面之后

18:05.460 --> 18:08.420
我们通过谷歌浏览器的一个

18:08.420 --> 18:09.460
移动端模拟器

18:09.460 --> 18:09.940
然后呢

18:09.940 --> 18:11.220
我在这个里面啊

18:11.220 --> 18:12.020
做一个什么呢

18:12.020 --> 18:14.420
做一个云寒树的一个调用啊

18:14.420 --> 18:15.380
先提前

18:15.380 --> 18:16.420
那云寒树调用呢

18:16.420 --> 18:17.900
其实也非常简单啊

18:17.900 --> 18:19.060
我们在这个前端

18:19.060 --> 18:22.220
就可以实现调用index.view

18:22.220 --> 18:23.860
index.view里面

18:23.860 --> 18:26.980
先把它的默认结构给干掉为bass

18:26.980 --> 18:27.540
然后呢

18:27.540 --> 18:29.260
把这个改成view

18:29.260 --> 18:30.700
这里面我写一个button

18:30.740 --> 18:33.180
来进行云寒树的调用

18:33.180 --> 18:33.780
button

18:33.780 --> 18:34.420
然后呢

18:34.420 --> 18:36.180
给它一个add click

18:36.180 --> 18:37.340
呃

18:37.340 --> 18:39.420
我们get data

18:39.420 --> 18:40.380
写一个寒树啊

18:41.860 --> 18:42.860
调用云寒树

18:42.860 --> 18:43.860
这里面就写一下

18:43.860 --> 18:44.460
调用

18:46.420 --> 18:47.860
调用云寒树

18:47.860 --> 18:49.020
OK

18:49.020 --> 18:51.100
把这个get data定义一下

18:51.100 --> 18:52.940
在这里vmax2的

18:52.940 --> 18:53.420
OK

18:53.420 --> 18:56.500
这个是get data

18:56.500 --> 18:57.940
在这个里面我们就写一下

18:57.940 --> 18:59.860
那这个如何来进行调用呢

18:59.860 --> 19:00.580
其实调用啊

19:00.580 --> 19:03.300
我们通过uniclote

19:03.300 --> 19:04.780
然后呢来进行调用

19:04.780 --> 19:07.620
这里面有一个call function

19:07.620 --> 19:08.700
那这个是什么呢

19:08.700 --> 19:10.980
客户端调用一个云寒树

19:10.980 --> 19:12.540
这里面已经给我们提示了

19:12.540 --> 19:13.820
那我们就使用它

19:13.820 --> 19:15.900
使用它这里面有一些

19:15.900 --> 19:18.020
我们必选项是一定要添的

19:18.020 --> 19:19.420
首先第一个就是什么呢

19:19.420 --> 19:20.820
我们的这个内幕

19:20.820 --> 19:21.620
内幕写什么呢

19:21.620 --> 19:23.940
内幕就写你云寒树的名字

19:23.940 --> 19:25.740
比如说我这个云寒树创建的

19:25.740 --> 19:28.140
叫test-level1

19:28.140 --> 19:29.060
那我就写上

19:29.100 --> 19:30.500
然后这里面还有一个什么呢

19:30.500 --> 19:31.580
还有一个data

19:31.580 --> 19:32.580
但是data呢

19:32.580 --> 19:33.580
我们现在没填

19:33.580 --> 19:35.940
那我们直接就这样写啊

19:35.940 --> 19:37.140
需求是啥呢

19:37.140 --> 19:38.460
点击调用云寒树

19:38.460 --> 19:38.980
然后呢

19:38.980 --> 19:40.580
执行该data 函数

19:40.580 --> 19:42.580
执行该的函数进行一个

19:42.580 --> 19:45.340
我们uniclote的call function的这么一个调用

19:45.340 --> 19:47.140
那你调用完成之后肯定有法规指

19:47.140 --> 19:47.660
对不对

19:47.660 --> 19:49.820
这里面还有一个什么sec size

19:49.820 --> 19:52.180
我们直接可以进行

19:52.180 --> 19:54.060
响应结果的一个打印

19:54.060 --> 19:54.420
然后呢

19:54.420 --> 19:55.660
我们先来看一下啊

19:57.660 --> 19:58.220
console

19:58.260 --> 19:59.380
找到console

19:59.380 --> 19:59.900
然后呢

19:59.900 --> 20:01.620
我们进行一个调用

20:01.620 --> 20:05.180
这样我们先把这个APP的一些钩子

20:05.180 --> 20:06.700
我们先给他注释掉

20:06.700 --> 20:07.540
到这个里面

20:07.540 --> 20:10.420
APP的钩子先停止掉啊

20:10.420 --> 20:11.020
ok

20:11.020 --> 20:12.060
那咱们来看一眼啊

20:13.980 --> 20:15.340
回到我们的浏览器

20:17.620 --> 20:19.420
我们点击调用云寒树

20:19.420 --> 20:21.780
你会发现这里面有一个结果值

20:21.780 --> 20:22.420
结果值呢

20:22.420 --> 20:23.940
就是我们和正常请求

20:23.940 --> 20:26.100
是不是类似我们从IJHR里面

20:26.100 --> 20:29.220
就看到TES的Level1进行了一个调用

20:29.220 --> 20:30.700
然后这里面有一个什么

20:30.700 --> 20:32.820
我们当然没传递参数啊

20:32.820 --> 20:34.780
这里面有一些他默认的配置信息

20:34.780 --> 20:35.980
played from平台啊

20:35.980 --> 20:36.820
proper data

20:36.820 --> 20:38.340
然后我们的一个Eline啊

20:38.340 --> 20:40.420
阿里云这里面是有一些的

20:40.420 --> 20:40.860
然后呢

20:40.860 --> 20:42.540
我们看到的这个内容

20:42.540 --> 20:46.140
就是我们本次调用的一个相关的信息

20:46.140 --> 20:46.820
嗯

20:46.820 --> 20:47.420
接下来呢

20:47.420 --> 20:48.500
我们再来说一下

20:48.500 --> 20:50.700
就是你看到了这个里面啊

20:50.700 --> 20:52.820
我们首先这里面有一个什么呢

20:52.820 --> 20:55.020
data还可以进行数据值的传递

20:55.060 --> 20:57.260
因为云寒树里面Events

20:57.260 --> 20:59.660
是不是可以获取我们传递的这个值啊

20:59.660 --> 21:00.140
对吧

21:00.140 --> 21:01.460
那我们这里面就写一个什么

21:01.460 --> 21:02.500
User name

21:02.500 --> 21:03.900
我们这里面Ellen

21:03.900 --> 21:04.460
然后呢

21:04.460 --> 21:06.300
我再写一个H20

21:07.500 --> 21:07.900
这个呢

21:07.900 --> 21:11.420
作为我们本次调用云寒树的一个传递的相关信息

21:12.540 --> 21:14.140
然后我们怎么来获取到呢

21:14.140 --> 21:15.060
其实在这个里面

21:15.060 --> 21:18.100
我们就可以从这里面来进行获取了

21:18.100 --> 21:18.660
Events

21:18.660 --> 21:19.740
Events代表什么

21:19.740 --> 21:21.500
为客户端上传的参数吗

21:21.500 --> 21:23.700
所以说我Const这个里面

21:23.700 --> 21:25.420
User name

21:26.540 --> 21:29.740
我们有解构复制的形式来进行一下获取

21:29.740 --> 21:33.260
还有一个H等于Events

21:33.260 --> 21:33.780
然后呢

21:33.780 --> 21:35.260
我们把这两个值啊

21:35.260 --> 21:37.020
给它返回给什么呢

21:37.020 --> 21:37.620
前端

21:37.620 --> 21:39.860
我们这里面data之后呢

21:39.860 --> 21:42.060
我们把User name

21:42.060 --> 21:42.580
然后呢

21:42.580 --> 21:44.940
还有这个H统一的

21:44.940 --> 21:46.460
给它传回前端

21:46.460 --> 21:48.020
或者是我们这样

21:48.020 --> 21:48.820
不这样

21:48.820 --> 21:50.820
直接的把这个data干掉啊

21:50.820 --> 21:52.700
我们在这个里面

21:52.740 --> 21:54.820
把它给做一个拼接就好了

21:54.820 --> 21:56.380
请求成功

21:56.380 --> 21:57.020
然后呢

21:57.020 --> 21:59.540
我们这个里面再写一段话

21:59.540 --> 22:00.900
传递的

22:02.260 --> 22:08.290
传递的用户名是

22:08.290 --> 22:10.250
然后在这个里面写Dollar

22:12.410 --> 22:14.250
User name

22:14.250 --> 22:15.090
ok

22:15.090 --> 22:20.730
再继续写它的年龄是DollarH

22:20.730 --> 22:22.970
把这两个给传递回去就可以了

22:22.970 --> 22:25.090
然后你这个定义完成之后

22:25.090 --> 22:25.610
咋做呢

22:25.610 --> 22:26.530
我们这个里面啊

22:26.530 --> 22:28.490
其实这样完成之后

22:28.490 --> 22:29.890
你还要做一个上传

22:29.890 --> 22:30.450
否则呢

22:30.450 --> 22:31.850
你本地调用了啊

22:31.850 --> 22:33.930
然后这里面再进行上传部署

22:33.930 --> 22:34.450
ok

22:34.450 --> 22:35.370
那这时候呢

22:35.370 --> 22:39.130
它就上传到我们的Uniclode云浮空间了啊

22:39.130 --> 22:40.010
你上传完之后

22:40.010 --> 22:40.770
那前端呢

22:40.770 --> 22:42.570
你再进行一个什么调用

22:42.570 --> 22:43.930
咱们来看一眼啊

22:43.930 --> 22:45.050
我这里面刷新

22:45.050 --> 22:46.730
然后调用运按数

22:46.730 --> 22:49.770
这个就马上给我们返回结果了

22:49.770 --> 22:50.970
那你看请求成功

22:50.970 --> 22:52.050
传递的用户名是

22:52.330 --> 22:54.010
它的年龄是20

22:54.010 --> 22:54.370
这个呢

22:54.370 --> 22:55.410
就是一个云函数的

22:55.410 --> 22:56.930
我们一个基本使用

22:56.930 --> 22:57.490
刚才说了

22:57.490 --> 23:00.130
我们直接的就是在这个前端

23:00.130 --> 23:01.570
来进行Uniclode的

23:01.570 --> 23:03.330
calfunction这种形式

23:03.330 --> 23:04.770
来进行一个调用

23:04.770 --> 23:05.330
或者说呢

23:05.330 --> 23:07.130
我们还可以通过什么形式呢

23:07.130 --> 23:08.570
比如说我们有时候做测试

23:08.570 --> 23:11.490
不方便我们前端使用这种代码的形式

23:11.490 --> 23:11.930
然后呢

23:11.930 --> 23:13.250
直接的来点击调用

23:13.250 --> 23:15.690
那我们直接就可以通过这种

23:15.690 --> 23:16.610
测试的形式

23:16.610 --> 23:18.370
来进行一个什么呢

23:18.370 --> 23:19.330
云函数的调用

23:19.330 --> 23:20.850
怎么来进行测试的形式

23:21.090 --> 23:22.210
来进行UiRu调用

23:22.210 --> 23:22.770
首先呢

23:22.770 --> 23:23.730
我们这里面啊

23:23.730 --> 23:24.130
你看啊

23:25.450 --> 23:27.170
有一个上传部署

23:27.170 --> 23:27.970
还有一个呢

23:27.970 --> 23:29.370
上传并运行

23:29.370 --> 23:30.850
那我们可以在这个里面

23:30.850 --> 23:33.610
直接的点击上传并运行就ok

23:33.610 --> 23:34.410
然后我们看一下

23:34.410 --> 23:36.330
控制台的一个打印结果啊

23:37.930 --> 23:38.330
ok

23:38.330 --> 23:40.210
那我们在这个上传完成

23:40.210 --> 23:41.450
它这里面开始运行

23:41.450 --> 23:41.930
当然了

23:41.930 --> 23:43.090
这个里面啊

23:43.090 --> 23:44.410
如果说它运行的时候

23:44.410 --> 23:45.810
它是相对比较慢的

23:45.810 --> 23:46.730
它有一个过程

23:46.730 --> 23:47.570
啥过程呢

23:47.570 --> 23:48.250
首先呢

23:48.250 --> 23:50.970
它会要上传到我们这个

23:50.970 --> 23:52.690
云函数的这个空间里面

23:52.690 --> 23:55.130
然后上传到我们这个服务空间里面之后

23:55.130 --> 23:58.130
再进行一次调用云函数的这样一个过程

23:58.130 --> 23:58.530
所以说

23:58.530 --> 24:00.050
它是有两步操作的

24:00.050 --> 24:01.050
那这个执行过程呢

24:01.050 --> 24:02.810
是相对比较慢的啊

24:02.810 --> 24:04.090
然后这个回来了

24:04.090 --> 24:05.330
返回结果是什么

24:05.330 --> 24:05.970
请求成功

24:05.970 --> 24:07.850
传递的用户名是安迪范的

24:07.850 --> 24:09.210
它的年龄是安迪范的

24:09.210 --> 24:10.210
那这个就尴尬了

24:10.210 --> 24:11.090
是因为啥呢

24:11.090 --> 24:12.450
我们通过前端调用

24:12.450 --> 24:14.570
可以传递过来Uder Name和A字

24:14.570 --> 24:14.970
但是呢

24:14.970 --> 24:17.770
我们要测试这种上传调用的时候

24:17.810 --> 24:18.730
首先来讲啊

24:18.730 --> 24:20.250
它这个名字我们不能获取

24:20.250 --> 24:20.730
对不对

24:20.730 --> 24:21.610
那这时候咋办呢

24:21.610 --> 24:23.970
我们这时候还有其他方式解决

24:23.970 --> 24:24.330
然后呢

24:24.330 --> 24:26.170
我们首先来解决第一个问题

24:26.170 --> 24:28.570
就是说刚才我们这个

24:28.570 --> 24:30.810
非得上传到云函数

24:30.810 --> 24:31.570
然后呢

24:31.570 --> 24:33.570
这个时候我们上传之后

24:33.570 --> 24:35.290
再进行运行的话比较慢

24:35.290 --> 24:36.010
所以说咋办呢

24:36.010 --> 24:38.650
我们还可以本地运行云函数

24:38.650 --> 24:39.570
你看一眼啊

24:39.570 --> 24:41.610
本地运行相对就比较快了

24:41.610 --> 24:42.530
你看这时候

24:42.530 --> 24:43.810
扣的零请求成功

24:43.810 --> 24:45.290
传递用户名是安迪范的

24:45.290 --> 24:46.330
它年龄是安迪范的

24:46.330 --> 24:48.370
虽然没解决参数的问题

24:48.370 --> 24:50.130
但是它这个运行速度是比较快

24:50.130 --> 24:50.770
对不对

24:50.770 --> 24:52.290
而且跟同学们说一想

24:52.290 --> 24:53.450
本地运行云函数

24:53.450 --> 24:56.530
它连接的也是远端的我们这个数据库

24:56.530 --> 24:57.290
所以说这点呢

24:57.290 --> 24:58.490
我们不用担心

24:58.490 --> 24:59.610
这是第一个问题

24:59.610 --> 25:02.850
我们既可以上传到我们的云浮空间

25:02.850 --> 25:04.130
运行我们云函数

25:04.130 --> 25:05.850
还可以进行本地运行

25:05.850 --> 25:06.650
那第二个问题呢

25:06.650 --> 25:08.890
就是说解决我们这个参数问题

25:08.890 --> 25:10.290
参数问题也非常好解决啊

25:10.290 --> 25:11.970
我们右键这一块的时候

25:11.970 --> 25:13.490
这里面有一个什么呢

25:13.490 --> 25:15.770
配置运行测试参数

25:15.770 --> 25:16.690
我们在这个里面

25:16.690 --> 25:18.650
可以进行一个参数的配置

25:18.650 --> 25:20.690
进行一个什么模拟

25:20.690 --> 25:22.370
那这里面我们怎么来配置

25:22.370 --> 25:23.890
你看我们需要的是什么

25:23.890 --> 25:25.530
U字Name和A字对吧

25:25.530 --> 25:27.090
那我这里面就可以写了

25:27.090 --> 25:28.210
注意在写的时候

25:28.210 --> 25:29.930
由于它是一个接吻文件

25:29.930 --> 25:30.690
所以说呢

25:30.690 --> 25:32.850
我们严格的按照接吻的形式

25:32.850 --> 25:33.890
来进行编写

25:33.890 --> 25:36.690
也就是说使用双一号的形式

25:36.690 --> 25:38.250
我写一个U字Name

25:38.250 --> 25:40.210
然后再订一个A字

25:40.210 --> 25:41.530
A字是30

25:41.530 --> 25:44.250
我们这里面给它保存一下

25:44.250 --> 25:45.290
保存一下之后

25:45.290 --> 25:47.410
我们再来进行一个测试

25:47.410 --> 25:50.370
那这里面本地运行运行数

25:50.370 --> 25:50.730
ok

25:50.730 --> 25:52.010
那你看这个里面

25:52.010 --> 25:52.610
code0

25:52.610 --> 25:53.290
MSG

25:53.290 --> 25:53.970
请求成功

25:53.970 --> 25:55.650
传递的用户名是Alan

25:55.650 --> 25:57.050
它的年龄是30

25:57.050 --> 25:58.730
这个是不是没问题了

25:58.730 --> 25:59.410
对吧

25:59.410 --> 26:00.290
那我们接下来

26:00.290 --> 26:01.290
再来回忆一下

26:01.290 --> 26:03.970
我们这个运行数的一个使用过程

26:03.970 --> 26:05.170
其实非常简单

26:05.170 --> 26:06.450
我们再来创建一个

26:06.450 --> 26:07.850
再来跟同学们说一下

26:07.850 --> 26:09.690
整个的这个过程

26:09.690 --> 26:12.850
我们把这个所有标签先关闭了

26:12.890 --> 26:15.050
首先我们回到这个

26:15.050 --> 26:16.130
code function

26:16.130 --> 26:17.730
这个文件家下面

26:17.730 --> 26:18.650
我们右键

26:18.650 --> 26:19.730
右键在这个里面

26:19.730 --> 26:21.050
新建运行数

26:21.050 --> 26:22.770
那这时候我们就可以

26:22.770 --> 26:23.810
test

26:23.810 --> 26:25.490
我们level

26:25.490 --> 26:27.170
注意不要同名

26:27.170 --> 26:28.650
这个是需要注意一下的

26:28.650 --> 26:29.810
test的level2

26:29.810 --> 26:30.570
ok

26:30.570 --> 26:32.610
那这时候我们就开始创建

26:32.610 --> 26:34.210
创建完成之后

26:34.210 --> 26:35.210
你会发现这里面

26:35.210 --> 26:36.610
就多了一个test的level2

26:36.610 --> 26:39.650
并且给定指定了一个index.js

26:39.650 --> 26:41.530
注意这个名字不要改

26:41.570 --> 26:43.890
它是我们这个运行数的一个所有文件

26:43.890 --> 26:45.130
至于你想

26:45.130 --> 26:48.410
我们在这个新增一些其他js文件

26:48.410 --> 26:51.410
你只要不是index.js文件就ok了

26:51.410 --> 26:53.850
然后它默认的这个导出的这个形式

26:53.850 --> 26:54.730
不要改变

26:54.730 --> 26:55.890
至于里面的这个内容

26:55.890 --> 26:56.650
你可以改变

26:56.650 --> 26:57.890
return的返回值

26:57.890 --> 26:59.210
你也可以是改变的

26:59.210 --> 27:01.090
这是我们这一个基本

27:01.090 --> 27:02.370
当你创建完成之后

27:02.370 --> 27:03.010
此时呢

27:03.010 --> 27:05.490
如果说你去看这个云浮空间

27:05.490 --> 27:06.330
你刷新的时候

27:06.330 --> 27:07.210
它是没有的

27:07.210 --> 27:08.210
没有是因为什么

27:08.210 --> 27:09.210
你创建完成之后

27:09.210 --> 27:11.290
因为你没上传到云浮空间

27:11.330 --> 27:11.970
所以说呢

27:11.970 --> 27:12.930
你要做一部操作

27:12.930 --> 27:13.850
你要怎么办呢

27:13.850 --> 27:15.050
上传部署

27:15.050 --> 27:15.770
并且呢

27:15.770 --> 27:18.370
你每次对我们的这个云浩硕

27:18.370 --> 27:20.170
比如说这个test的level2

27:20.170 --> 27:21.410
进行了修改之后

27:21.410 --> 27:24.330
那你每次都要有一个上传部署的这样一个过程

27:24.330 --> 27:24.770
否则呢

27:24.770 --> 27:26.170
这个是没办法

27:26.170 --> 27:27.930
做我们一个云浮空间

27:27.930 --> 27:30.410
跟本地云浩硕的一个实现同步管理

27:30.410 --> 27:31.570
这样一个操作的啊

27:32.690 --> 27:33.610
电影好了之后呢

27:33.610 --> 27:35.090
我们有时候就是

27:35.090 --> 27:36.530
因为我们也不是说有时候

27:36.530 --> 27:40.290
我们会直接的使用前端来进行什么调用

27:40.290 --> 27:43.330
比如说我们调用这个调用还说这一块

27:43.330 --> 27:43.810
是不是

27:43.810 --> 27:44.610
但是呢

27:44.610 --> 27:46.250
为了测试方便啊

27:46.250 --> 27:49.170
这个云浩硕还给我们提供了两种形式

27:49.170 --> 27:50.130
第一种是什么呢

27:50.130 --> 27:53.770
我们可以直接进行一个上传并运行

27:53.770 --> 27:56.570
也就是说把这个云浩硕test的level2

27:56.570 --> 27:58.770
上传到我们云浮空间之后呢

27:58.770 --> 27:59.730
再运行一次

27:59.730 --> 28:00.570
这是一种

28:00.570 --> 28:01.450
还有一种什么呢

28:01.450 --> 28:04.250
我们可以本地进行云浩硕的一个调用

28:04.250 --> 28:05.570
然后这是两种形式

28:05.570 --> 28:05.930
比如说呢

28:05.930 --> 28:07.010
我本地运行还说

28:07.890 --> 28:08.570
你看啊

28:08.570 --> 28:09.730
本地运行云浩硕

28:09.730 --> 28:11.170
这个疑问他没有任何内容

28:11.170 --> 28:11.610
是因为啥

28:11.610 --> 28:12.730
是因为我们前端没有传旨

28:12.730 --> 28:13.490
对不对

28:13.490 --> 28:14.930
如果说我们在测试的时候

28:14.930 --> 28:17.010
想配置一些模拟数据

28:17.010 --> 28:18.210
那我们配置模拟数据

28:18.210 --> 28:18.690
怎么办呢

28:18.690 --> 28:19.650
我们在这个里面

28:19.650 --> 28:22.690
就可以直接的进行一个什么呢

28:22.690 --> 28:27.050
配置运行测试参数的这样一个操作

28:27.050 --> 28:30.090
那配置运行测试参数的这样一个操作里面

28:30.090 --> 28:30.610
如果说呢

28:30.610 --> 28:32.650
你前台想需要什么k-value

28:32.650 --> 28:33.850
那你直接就写吧

28:33.850 --> 28:36.090
我们这里面就写一个msg

28:36.090 --> 28:37.050
ok

28:37.050 --> 28:37.810
那随便写啊

28:37.890 --> 28:39.530
叫Hello World

28:39.530 --> 28:40.290
ok

28:40.290 --> 28:41.210
宝头完成之后呢

28:41.210 --> 28:41.970
那你这个里面

28:41.970 --> 28:45.290
你肯定是想希望前台传过来一个msg

28:45.290 --> 28:49.250
那我这里面就一个Cons的msg等于event

28:49.250 --> 28:49.530
ok

28:49.530 --> 28:50.570
这就结束了啊

28:50.570 --> 28:51.210
结束之后呢

28:51.210 --> 28:54.130
我就给前端返回去扣的零

28:54.130 --> 28:54.930
然后呢

28:54.930 --> 28:58.170
msg就给它返回就可以了

28:58.170 --> 28:59.370
这些都操作完成之后

28:59.370 --> 29:01.210
那我们还可以本地运行一下

29:01.210 --> 29:02.650
我们来做一下测试

29:02.650 --> 29:04.210
那这个里面就本地运行

29:05.530 --> 29:05.850
ok

29:05.850 --> 29:06.410
扣的零

29:06.410 --> 29:08.490
msg Hello World是不是有了

29:08.490 --> 29:08.970
那这个呢

29:08.970 --> 29:09.850
就实现了啊

29:09.850 --> 29:10.530
或者是呢

29:10.530 --> 29:12.210
你最后肯定是要上传部署的

29:12.210 --> 29:14.850
那你这时候你本地运行为了速度方便吗

29:14.850 --> 29:16.450
我们本地运行ok没问题

29:16.450 --> 29:18.330
那我再上传部署一下就可以了

29:18.330 --> 29:19.450
上传部署啊

29:19.450 --> 29:23.810
它要比这个上传部署并运行是速度要快一些的啊

29:23.810 --> 29:25.330
这是这一块的内容

29:25.330 --> 29:25.770
并且呢

29:25.770 --> 29:27.890
这个云海说再跟同学们说一下

29:27.890 --> 29:28.770
我们这个云海说

29:28.770 --> 29:30.930
你看到了刚才经过好多操作

29:30.930 --> 29:31.530
这时候呢

29:31.530 --> 29:33.090
它会有一些日之打印的

29:33.090 --> 29:34.610
我们可以看一下

29:34.610 --> 29:35.530
太子的level 1

29:35.570 --> 29:36.290
这个里面呢

29:36.290 --> 29:38.490
就会有一些调用的一些

29:38.490 --> 29:39.130
呃

29:39.130 --> 29:40.290
执行的日之

29:40.290 --> 29:41.890
这里面会有一个打印啊

29:41.890 --> 29:43.170
在这个里面

29:43.170 --> 29:44.250
同学们要指导一下

29:44.250 --> 29:47.210
而且每一个云海说都会有它对应的日之啊

29:47.210 --> 29:48.090
我们这里面

29:48.090 --> 29:49.810
再看一下这个日之

29:49.810 --> 29:50.610
因为这个日之啊

29:50.610 --> 29:51.490
应该是不会有

29:51.490 --> 29:51.930
为什么呢

29:51.930 --> 29:53.570
因为我们是在本地调用的

29:53.570 --> 29:55.290
只是进行一个上传部署

29:55.290 --> 29:57.250
而没有对它进行一个相关的调用

29:57.250 --> 29:57.930
对吧

29:57.930 --> 29:59.930
那这个就是云海说这一块

29:59.930 --> 30:00.450
而且呢

30:00.450 --> 30:02.810
我们这个云海说还可以通过什么形式呢

30:02.810 --> 30:04.490
就是我们前端这种啊

30:04.490 --> 30:07.770
UniClo的一个CALL function这种形式

30:07.770 --> 30:08.610
然后这种形式呢

30:08.610 --> 30:09.410
我们一会啊

30:09.410 --> 30:11.450
还会进行一个详细的讲解

30:11.450 --> 30:11.970
同学们呢

30:11.970 --> 30:13.010
这个不用担心

30:14.250 --> 30:14.610
ok

30:14.610 --> 30:16.770
那这是云海说的这一部分啊

30:16.770 --> 30:18.450
那我们接下来再说呢

30:18.450 --> 30:19.010
是什么呢

30:19.010 --> 30:21.610
是我们的这个云服务空间啊

30:21.610 --> 30:23.690
是我们的云数据库啊

30:23.690 --> 30:25.450
云数据库的一个操作

30:25.450 --> 30:26.930
那我们直接在哪操作呢

30:26.930 --> 30:28.490
其实我们云数据库

30:28.490 --> 30:29.290
有两种形式

30:29.290 --> 30:31.130
我们直接可以在这个

30:31.130 --> 30:32.250
我们可实化的这个

30:32.250 --> 30:33.490
云web控制台里面

30:33.490 --> 30:35.170
进行这个操作

30:35.170 --> 30:35.850
还有一种呢

30:35.850 --> 30:37.450
是我们以代码的形式

30:37.450 --> 30:38.570
那我们先来看一下

30:38.570 --> 30:39.450
可实化控制台

30:39.450 --> 30:42.050
怎么对这个云数据库进行操作

30:42.050 --> 30:42.490
这个呢

30:42.490 --> 30:44.090
就是我们的云数据库

30:44.090 --> 30:44.570
首先呢

30:44.570 --> 30:46.610
我们这里面是数据表没有

30:46.610 --> 30:47.050
对吧

30:47.050 --> 30:49.370
那我们可以创建一个数据表

30:49.370 --> 30:49.850
呃

30:49.850 --> 30:52.170
我们创建一个这个叫什么名呢

30:52.170 --> 30:53.090
我们叫代码啊

30:54.530 --> 30:55.770
随便起一个名字

30:55.770 --> 30:57.090
代码直接在这里面

30:57.090 --> 30:58.770
还有这个使用OpenDB

30:58.770 --> 30:59.690
然后模板啊

30:59.690 --> 31:00.890
创建一个

31:00.890 --> 31:03.370
我们直接的一套开放的这个模板

31:03.370 --> 31:04.050
但是现在呢

31:04.050 --> 31:04.690
我们不需要

31:04.690 --> 31:07.010
我们直接的使用这种OpenDB

31:07.010 --> 31:09.850
创建一个基础的这个表就OK了

31:09.850 --> 31:10.930
创建完非常简单

31:10.930 --> 31:11.610
什么也没有

31:11.610 --> 31:11.930
对吧

31:11.930 --> 31:13.850
那我们这里面可以添加记录

31:13.850 --> 31:14.890
手动添加啊

31:14.890 --> 31:16.050
注意这里面也是什么

31:16.050 --> 31:17.770
我们的这个解审啊

31:17.770 --> 31:20.130
所以说我们这里面添一个内模

31:20.130 --> 31:20.930
然后呢

31:20.930 --> 31:23.130
是一个呃

31:23.130 --> 31:23.690
内模

31:23.690 --> 31:23.970
Ellen

31:25.090 --> 31:25.690
好吧

31:25.690 --> 31:27.050
这里面就添加完成了

31:27.050 --> 31:28.650
然后直接的我一点击确定

31:30.650 --> 31:31.650
你看到这个里面啊

31:31.650 --> 31:32.890
这里面就有一条记录了

31:32.890 --> 31:33.210
对不对

31:33.210 --> 31:34.410
那我还可以添加啊

31:34.410 --> 31:35.330
而且这种啊

31:35.330 --> 31:36.290
非关系的数据库

31:36.290 --> 31:37.210
最大的好处啊

31:37.210 --> 31:38.410
它是节子类型

31:38.410 --> 31:39.050
而且呢

31:39.050 --> 31:39.850
自断不受限

31:39.850 --> 31:41.010
你随便添写啊

31:41.010 --> 31:41.730
我们直接的

31:41.730 --> 31:43.250
可能第一个有内模

31:43.250 --> 31:43.770
对吧

31:43.770 --> 31:44.930
那我第一个有内模

31:44.930 --> 31:46.970
我给的添上一个

31:46.970 --> 31:47.610
Job

31:47.610 --> 31:48.250
然后呢

31:48.250 --> 31:49.610
我再写一个

31:49.610 --> 31:50.770
那第一个没有A字

31:50.770 --> 31:51.850
但是我这个第二个呢

31:51.850 --> 31:53.090
我就想添一个A字

31:53.090 --> 31:54.810
这里面就写一个A字

31:54.810 --> 31:56.490
30也是可以的啊

31:56.490 --> 31:58.650
那我直接点击确定

31:58.650 --> 31:59.010
OK

31:59.010 --> 32:01.330
这里面会又新增一条记录

32:01.330 --> 32:01.850
并且呢

32:01.850 --> 32:03.010
它这个ID纸啊

32:03.010 --> 32:04.690
是默认自动给生成的

32:04.690 --> 32:05.050
这个呢

32:05.050 --> 32:06.690
咱们不用去考虑啊

32:06.690 --> 32:07.010
OK

32:07.010 --> 32:09.490
那这个就是我们云数据库的一个操作啊

32:09.490 --> 32:10.530
云数据库这里面

32:10.530 --> 32:11.690
还有好多内容啊

32:11.690 --> 32:13.330
当然我们先暂时了解

32:13.330 --> 32:15.290
它一些基本的内容就可以

32:15.290 --> 32:17.690
那这个我们先直到一下啊

32:18.890 --> 32:19.130
好的

32:19.130 --> 32:20.050
再回来啊

32:20.050 --> 32:21.890
我们这个云数据库说完之后呢

32:21.890 --> 32:23.450
我们再来说一下

32:23.450 --> 32:25.930
我们的这个云存储这一块啊

32:25.930 --> 32:27.330
云存储在哪一块呢

32:27.330 --> 32:29.570
云存储就是在我们下面这一块

32:29.570 --> 32:30.410
它可以干嘛

32:30.410 --> 32:32.330
就是类似于我们一些

32:32.330 --> 32:34.490
其他的云端的这个对象存储

32:34.490 --> 32:35.810
那它可以存储一些

32:35.810 --> 32:38.050
我们的这个相关的文件啊

32:38.050 --> 32:39.130
我们点一下

32:39.130 --> 32:39.690
云存储呢

32:39.690 --> 32:40.690
有两种形式啊

32:40.690 --> 32:41.370
或者是说

32:41.370 --> 32:43.450
我们可以三种形式来进调用

32:43.450 --> 32:45.170
我们可以通过 Uniclode

32:45.170 --> 32:47.730
来这个云还数进行一个调用

32:47.730 --> 32:48.250
或者是呢

32:48.250 --> 32:49.090
往上存储文件

32:49.090 --> 32:51.130
或者是我们前端直传

32:51.130 --> 32:51.850
然后呢

32:51.850 --> 32:54.770
还可以在这个里面来做这个文件的处理

32:54.770 --> 32:55.370
那比如说

32:55.370 --> 32:56.810
这里面点击商传文件

32:57.810 --> 32:59.010
你也可以来实现啊

32:59.050 --> 33:01.770
假如说我们将文件拖载到此

33:01.770 --> 33:02.370
直接的

33:02.370 --> 33:05.010
我们就可以进行这个商传了

33:05.010 --> 33:06.610
我这里面找一个文件啊

33:08.410 --> 33:10.410
嗯给大家找一个文件

33:10.410 --> 33:11.810
我们这里面有截屏

33:11.810 --> 33:12.410
截屏呢

33:12.410 --> 33:14.410
我把这个文件拖载到此

33:14.410 --> 33:15.410
那这里面啊

33:15.410 --> 33:16.610
先把它给缩效一下

33:18.210 --> 33:19.810
把它放在左面

33:19.810 --> 33:20.690
左面之后

33:20.690 --> 33:22.690
把这个去掉去掉之后

33:22.690 --> 33:24.530
我们来进行一个什么

33:24.530 --> 33:25.970
进行一个上传

33:25.970 --> 33:27.930
因为他说了将文件拖载一下

33:27.930 --> 33:29.090
是不是就ok了

33:29.090 --> 33:30.690
我们来试一下

33:30.690 --> 33:32.170
可以选择多文件

33:32.170 --> 33:33.730
你也可以进行一个选择

33:33.730 --> 33:35.370
我这里面直接就拖载了

33:35.370 --> 33:36.250
拖载过程当中

33:36.250 --> 33:38.330
他开始就进行一个上传

33:38.330 --> 33:39.690
那当上传完成之后呢

33:39.690 --> 33:42.210
这个里面就会给我们一个提示啊

33:42.210 --> 33:43.850
如果说在没上传完成之前

33:43.850 --> 33:46.610
你不要给他进行一个什么停止操作

33:46.610 --> 33:47.130
ok

33:47.130 --> 33:48.370
那他默认就刷新了

33:48.370 --> 33:50.090
刷新之后这里面有详情

33:50.090 --> 33:50.570
详情呢

33:50.570 --> 33:51.970
就可以获取一个什么

33:51.970 --> 33:53.290
他的预览的一个地址

33:53.290 --> 33:55.690
那我们直接的拿到这个地址啊

33:55.690 --> 33:57.610
就代表他的这个唯一标识

33:57.610 --> 34:00.490
因为这个生存的都是一个唯一标识信息

34:00.490 --> 34:03.210
那这张图片是不是就上传到我们的

34:03.210 --> 34:05.170
这个云存储空间了

34:05.170 --> 34:05.690
对吧

34:05.690 --> 34:08.410
那这就是这一块云存储操作起来

34:08.410 --> 34:12.130
那其实相对是非常简单的啊

34:12.130 --> 34:15.130
然后这是云存储的这一块内容啊

34:15.130 --> 34:16.290
然后我们再回来

34:16.290 --> 34:19.370
回到我们的这个文档里面

34:19.370 --> 34:21.330
文档里面我们继续来看啊

34:21.330 --> 34:22.610
继续来看是什么呢

34:22.610 --> 34:25.850
我们的这个云寒树的一个调用啊

34:25.850 --> 34:26.810
云寒树调用呢

34:26.810 --> 34:28.330
刚才咱们看到了啊

34:28.330 --> 34:31.810
就是我们这个从前段也给同学们来试验了

34:31.810 --> 34:32.810
我们怎么试验的

34:32.810 --> 34:34.810
通过uniclode的点call function

34:34.810 --> 34:35.890
这种形式来试验的

34:35.890 --> 34:36.490
对不对

34:36.490 --> 34:37.810
然后它有两种形式

34:37.810 --> 34:38.650
第一种呢

34:38.650 --> 34:41.210
是用这种callback回调寒树的形式

34:41.210 --> 34:42.410
还有一种是什么呢

34:42.410 --> 34:43.690
promise的形式

34:43.690 --> 34:44.690
那我们接下来呢

34:44.690 --> 34:46.650
就说一下这个promise形式

34:46.650 --> 34:48.050
怎么来进行调用

34:48.050 --> 34:49.010
这是第一种啊

34:49.010 --> 34:50.650
我们调用云寒树

34:50.650 --> 34:51.450
这里面写一下

34:51.450 --> 34:54.850
是用callback的形式

34:54.850 --> 34:56.450
callback的形式

34:56.450 --> 34:59.490
进行云寒树的一个

34:59.490 --> 35:07.340
进行我们云寒树的调用

35:07.340 --> 35:07.780
调用

35:07.780 --> 35:08.300
然后呢

35:08.300 --> 35:09.700
我再写一个

35:09.700 --> 35:17.140
button at click等于promise

35:17.140 --> 35:21.140
promise然后send date

35:21.140 --> 35:22.500
使用promise形式啊

35:22.500 --> 35:23.780
那我这里面写一下

35:23.780 --> 35:29.540
使用promise调用

35:29.540 --> 35:30.140
调用

35:30.140 --> 35:30.540
OK

35:30.540 --> 35:32.300
那我直接的就把这个

35:32.380 --> 35:32.980
定一下

35:32.980 --> 35:34.860
使用promise的形式

35:34.860 --> 35:35.620
来调用

35:35.620 --> 35:38.020
在这里面getdate

35:38.020 --> 35:39.100
使用promise调用

35:39.100 --> 35:40.820
我们一般的在使用过程当中

35:40.820 --> 35:43.980
都加上async和avita修制服

35:43.980 --> 35:44.900
来实现对不对

35:44.900 --> 35:47.100
所以说这前面加一个ascent

35:47.100 --> 35:48.420
我在这里面写一下

35:48.420 --> 35:51.980
concepts等于一个avita

35:51.980 --> 35:56.180
我们还是通过unicload的啊

35:56.180 --> 35:57.980
点儿call一个function

35:57.980 --> 35:59.020
然后这个里面

35:59.020 --> 36:00.380
我还是同样

36:00.380 --> 36:01.420
来进行数据传递

36:01.420 --> 36:01.980
是吧

36:01.980 --> 36:02.460
内幕

36:02.460 --> 36:03.820
那我这里面写一个什么呢

36:03.820 --> 36:04.460
写一个

36:04.460 --> 36:05.420
我们调用第二个

36:05.420 --> 36:07.220
第二个他传的

36:07.220 --> 36:09.020
需要一个msg对吧

36:09.020 --> 36:10.620
那我直接的在这个里面

36:10.620 --> 36:11.580
在写的时候

36:11.580 --> 36:13.740
首先我们这个内幕

36:13.740 --> 36:15.580
内幕要调用第二个的话

36:15.580 --> 36:18.020
就是test的level2

36:18.020 --> 36:18.740
然后呢

36:18.740 --> 36:20.140
给他一个data

36:20.140 --> 36:22.340
data传一个msg

36:22.340 --> 36:23.140
msg呢

36:23.140 --> 36:25.380
就是一个hello

36:25.380 --> 36:27.220
你好

36:27.220 --> 36:30.540
channel对吧

36:30.540 --> 36:30.780
好

36:30.780 --> 36:31.620
写完成之后呢

36:31.620 --> 36:32.260
这个时候

36:32.260 --> 36:34.500
我们通过这种promise形式调用

36:34.500 --> 36:35.900
那我直接在这里面

36:35.900 --> 36:37.340
就可以打印什么

36:37.340 --> 36:38.980
as的这个相织

36:38.980 --> 36:39.940
那我们来看一眼

36:39.940 --> 36:42.100
他是否能实现就ok了啊

36:42.100 --> 36:43.460
回到我们的这个项目里面

36:43.460 --> 36:45.100
使用promise的形式

36:45.100 --> 36:46.180
来进行一个调用

36:46.180 --> 36:47.500
唯一电机

36:47.500 --> 36:49.660
你会发现result是不是也返回了

36:49.660 --> 36:50.620
请求成功

36:50.620 --> 36:51.540
传递的用户名

36:51.540 --> 36:52.780
他的年龄是Andy Fand

36:52.780 --> 36:53.660
这不对啊

36:53.660 --> 36:54.940
我们来看一眼啊

36:54.940 --> 36:59.020
这个为什么是调用的test level1

36:59.580 --> 37:00.220
await

37:00.220 --> 37:00.740
sorry啊

37:00.740 --> 37:01.820
这个里面写错了

37:01.820 --> 37:02.540
写错之后

37:02.540 --> 37:03.420
我们这个

37:03.420 --> 37:04.300
重新调整一下

37:04.300 --> 37:06.060
再看一眼啊

37:06.060 --> 37:06.420
好的

37:06.420 --> 37:07.460
那我们到这个里面

37:07.460 --> 37:09.860
使用promise调用result

37:09.860 --> 37:10.380
你好

37:10.380 --> 37:12.140
Channel是不是返回过来了

37:12.140 --> 37:12.580
那这个呢

37:12.580 --> 37:16.180
就是我们调用云寒数的一个使用方式

37:16.180 --> 37:17.100
他有两种形式啊

37:17.100 --> 37:18.540
这个我们要知道一下

37:18.540 --> 37:20.140
如果说通过callback这种啊

37:20.140 --> 37:23.540
他的success以及fail失败的形式

37:23.540 --> 37:25.020
包括我们的一个

37:25.020 --> 37:26.220
不管失败啊

37:26.220 --> 37:27.580
或者是成功

37:27.580 --> 37:30.340
他都执行的这个都会有啊

37:30.340 --> 37:31.180
success

37:31.180 --> 37:32.700
这个代表着成功

37:32.700 --> 37:33.660
然后fail呢

37:33.660 --> 37:35.380
代表着我们的失败

37:35.380 --> 37:36.180
compolate呢

37:36.180 --> 37:37.900
代表着什么

37:37.900 --> 37:39.260
这个是完成啊

37:39.260 --> 37:40.540
完成指的是什么意思

37:40.540 --> 37:44.580
不管成功与失败

37:44.580 --> 37:45.180
对吧

37:45.180 --> 37:47.420
他都会进行一个执行

37:47.420 --> 37:48.180
那这一节课呢

37:48.180 --> 37:50.060
就是我们所有的这个内容啊

37:50.060 --> 37:51.020
我们这个里面啊

37:51.020 --> 37:54.220
主要是这节课对我们的uniclode啊

37:54.220 --> 37:56.060
有一个简单的了解

37:56.100 --> 37:56.540
然后呢

37:56.540 --> 37:57.340
我们接下来啊

37:57.340 --> 37:58.900
使用这种云寒数啊

37:58.900 --> 38:01.220
会做一个增山改查的

38:01.220 --> 38:02.980
详细的讲解

38:02.980 --> 38:03.300
好的

38:03.300 --> 38:04.700
那我们这几课就到这里

38:04.700 --> 38:05.260
谢谢大家

