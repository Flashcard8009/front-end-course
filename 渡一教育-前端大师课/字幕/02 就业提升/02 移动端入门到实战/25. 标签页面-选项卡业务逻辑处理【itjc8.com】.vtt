WEBVTT

00:00.000 --> 00:04.800
各位同学 大家好 这节课我们继续选项卡见面的一个制作

00:04.800 --> 00:08.200
那么本节课我们就来实现一下数据的渲染

00:08.200 --> 00:12.400
以及我们用户的一个保存标签的这样一个行为

00:12.400 --> 00:15.600
那么上节课我们已经将这个Label列表

00:15.600 --> 00:19.200
也就是说我们这个渲染的这个列表获取到了

00:19.200 --> 00:21.000
那获取到了通过什么获取到呢

00:21.000 --> 00:22.000
我们可以看一下

00:22.000 --> 00:23.800
我们当时获取的时候

00:23.800 --> 00:26.800
其实就是通过VCH保存了一个数据

00:26.800 --> 00:29.800
咱们在这个里面找一下配置

00:29.800 --> 00:31.600
配置Label Admin

00:31.600 --> 00:34.100
然后呢这个里面有一个Label Lease的

00:34.100 --> 00:35.400
那这个里面我们拿到了

00:35.400 --> 00:37.100
拿到现在我们要渲染的时候

00:37.100 --> 00:38.400
这里面会有一个问题

00:38.400 --> 00:39.100
什么问题呢

00:39.100 --> 00:41.900
就是我的标签跟这个标签推荐

00:41.900 --> 00:42.600
其实呢

00:42.600 --> 00:45.800
它是有两个不同的数组来进行一个渲染的

00:45.800 --> 00:46.800
所以说在这个里面

00:46.800 --> 00:50.800
我们首先要实现一个两个数组的一个定义

00:51.800 --> 00:53.500
在定义这两个数组的时候

00:53.500 --> 00:55.000
我们要注意一点是什么呢

00:55.000 --> 00:55.800
就是说

00:55.800 --> 00:58.200
当我们这个一方发生更改的时候

00:58.200 --> 00:59.200
另一方呢

00:59.200 --> 01:00.100
也会有更改

01:00.100 --> 01:02.200
比如说我们看一下完成的这个

01:02.200 --> 01:02.900
这个里面呢

01:02.900 --> 01:05.300
有我的标签以及标签推荐

01:05.300 --> 01:07.500
那如果说我现在点击编辑

01:07.500 --> 01:09.900
假如说把每日一题调转到下面之后

01:09.900 --> 01:12.000
你会发现在这个里面

01:12.000 --> 01:12.500
其实呢

01:12.500 --> 01:14.300
我上面的标签是减少

01:14.300 --> 01:15.800
那下面的标签呢

01:15.800 --> 01:17.500
有一个增加的操作

01:17.500 --> 01:18.900
那这个里面怎么来做呢

01:18.900 --> 01:20.000
最好的实现

01:20.000 --> 01:21.500
就是说我们这两个数组

01:21.500 --> 01:23.300
通过计算属性来维护

01:23.300 --> 01:23.700
然后呢

01:23.700 --> 01:26.400
我们根据一个数据的改变

01:26.400 --> 01:28.400
实现一个这种效果

01:28.400 --> 01:29.500
也就是说什么意思呢

01:29.500 --> 01:31.500
可以给大家简单的来说一下

01:31.500 --> 01:32.000
首先呢

01:32.000 --> 01:32.800
这个里面啊

01:32.800 --> 01:35.000
它是有两个计算属性的数组

01:35.000 --> 01:36.200
然后这两个数组呢

01:36.200 --> 01:37.700
它都依赖一个值

01:37.700 --> 01:38.600
那我在本地呢

01:38.600 --> 01:39.800
维护一个值

01:39.800 --> 01:40.400
那这个值啊

01:40.400 --> 01:41.300
也是一个数组

01:41.300 --> 01:43.400
当这个数组里面发生更改的时候

01:43.400 --> 01:44.500
那这个里面的值

01:44.500 --> 01:46.600
比如说我去减少

01:46.600 --> 01:48.400
他们俩肯定是一个取反操作

01:48.400 --> 01:50.400
那如果说我在这个数组里面减少

01:50.400 --> 01:51.600
那这个数组自然而然

01:51.600 --> 01:53.200
那是不是就有一个增加的过程

01:53.200 --> 01:53.800
对不对

01:53.800 --> 01:54.700
那目前来讲

01:54.700 --> 01:56.200
他们俩使用计算属性

01:56.200 --> 01:57.500
那接下来的这个

01:57.500 --> 01:58.000
比如说

01:58.000 --> 01:59.200
那我们呃

01:59.200 --> 02:00.400
这一块的这个数组

02:00.400 --> 02:02.600
那应该使用什么呢

02:02.600 --> 02:03.000
其实啊

02:03.000 --> 02:03.900
这个数组呢

02:03.900 --> 02:05.400
我们可以依靠优德人Info

02:05.400 --> 02:06.700
但是这里有一个问题

02:06.700 --> 02:08.000
你依靠优德人Info吧

02:08.000 --> 02:08.900
这个里面

02:08.900 --> 02:09.800
其实不是特别好

02:09.800 --> 02:10.800
为什么说呢

02:10.800 --> 02:11.900
因为这个修改啊

02:11.900 --> 02:14.500
是在这个完成按钮点击的时候

02:14.500 --> 02:15.700
才会发生修改

02:15.700 --> 02:17.000
当你完成按钮不点击

02:17.000 --> 02:18.800
比如说刚才我上面是三个

02:18.800 --> 02:19.900
下面是三个

02:19.900 --> 02:21.100
我调整下来一个之后

02:21.100 --> 02:22.500
如果说我刷新界面

02:22.500 --> 02:24.500
或者说我回退一个操作之后

02:24.500 --> 02:25.600
假如说回退

02:25.600 --> 02:27.200
那你看再回来之后

02:27.200 --> 02:29.000
其实它是没有发生更改的

02:29.000 --> 02:29.700
所以说呢

02:29.700 --> 02:32.900
我们这个里面维护的一个依赖数组

02:32.900 --> 02:33.700
那这个里面呢

02:33.700 --> 02:35.900
我们最好使用一个

02:35.900 --> 02:38.400
当前页面的一个临时数组

02:38.400 --> 02:39.500
那这个临时数组呢

02:39.500 --> 02:40.800
我们可以拷贝一份

02:40.800 --> 02:41.600
拷贝一份什么呢

02:41.600 --> 02:44.200
就是我们这个微查里面存储的用户

02:44.200 --> 02:45.800
信息的雷暴IDS

02:45.800 --> 02:48.100
那我们根据这个雷暴IDS

02:48.100 --> 02:50.900
来判断当前是否包含

02:50.900 --> 02:51.600
如果说包含

02:51.600 --> 02:52.500
那你就展示

02:52.500 --> 02:53.300
如果说不包含

02:53.300 --> 02:54.800
那你就在下面展示对吧

02:54.800 --> 02:55.200
这个呢

02:55.200 --> 02:57.400
就是我们实现的一个本质

02:57.400 --> 02:57.700
ok

02:57.700 --> 02:59.100
那我们就来写一下

02:59.100 --> 02:59.900
怎么来写

02:59.900 --> 03:01.500
打开我们的编辑器

03:01.500 --> 03:02.500
在这个编辑器里

03:02.500 --> 03:03.100
咱们说了

03:03.100 --> 03:03.800
一开始啊

03:03.800 --> 03:04.700
最初的时候

03:04.700 --> 03:05.600
我们这个里面啊

03:05.600 --> 03:07.000
把这个调整一下

03:07.000 --> 03:08.200
这次点一直

03:08.200 --> 03:08.800
added

03:08.800 --> 03:11.900
并且这个刚才有一点错误啊

03:11.900 --> 03:12.200
好的

03:12.200 --> 03:13.000
那这个里面呢

03:13.000 --> 03:14.700
我们肯定要定义两数组

03:14.700 --> 03:15.500
一个是什么呢

03:15.500 --> 03:16.600
我们自己的

03:16.600 --> 03:17.300
还有一个呢

03:17.300 --> 03:18.600
是我们的这个推荐的

03:18.600 --> 03:21.200
也就是说我们这里面可以写一下

03:21.200 --> 03:22.500
定一个self

03:22.500 --> 03:24.200
label list

03:24.200 --> 03:25.200
ok

03:25.200 --> 03:25.700
然后呢

03:25.700 --> 03:27.700
这里面先委屈一个空啊

03:27.700 --> 03:30.000
咱们给他委屈一个空

03:30.000 --> 03:30.500
之后呢

03:30.500 --> 03:31.700
我在下面

03:31.700 --> 03:33.600
还有一个什么推荐的

03:33.600 --> 03:33.900
对吧

03:33.900 --> 03:34.800
recommand

03:36.000 --> 03:36.900
recommand

03:36.900 --> 03:37.800
label list

03:39.800 --> 03:40.200
ok

03:40.200 --> 03:41.200
这两个数组

03:41.200 --> 03:42.000
咱们就定一下

03:42.000 --> 03:43.000
先都给空啊

03:43.000 --> 03:44.400
我想让这个self

03:45.300 --> 03:46.200
label list

03:46.200 --> 03:47.200
去渲染哪里呢

03:47.200 --> 03:47.800
其实self

03:47.800 --> 03:48.500
label list

03:48.500 --> 03:49.600
我是想让他

03:49.600 --> 03:50.700
对上面的内容

03:50.700 --> 03:51.700
来做一个渲染

03:51.700 --> 03:53.800
也就是说这一块的内容

03:53.800 --> 03:55.000
v4item

03:55.000 --> 03:55.500
in8

03:55.500 --> 03:55.800
对不对

03:55.800 --> 03:57.500
那这个里面就不用谈了

03:57.500 --> 03:58.100
self

03:58.100 --> 03:59.000
label list

03:59.000 --> 03:59.400
ok

03:59.400 --> 04:00.500
在这个里面放上

04:00.500 --> 04:01.400
那底下这个呢

04:01.400 --> 04:02.100
底下那个

04:02.100 --> 04:03.000
其实想的一件

04:03.000 --> 04:04.800
是不是我们下面这个

04:04.800 --> 04:05.900
recommand

04:05.900 --> 04:06.500
到这个里面

04:06.500 --> 04:08.300
这里面有一个

04:08.900 --> 04:10.400
下面这里面也是八个

04:10.400 --> 04:12.000
咱们给他调整一下

04:12.000 --> 04:12.700
是不是我宣

04:12.700 --> 04:13.800
这个recommand

04:13.800 --> 04:14.400
label list

04:14.400 --> 04:15.500
是不是就可以了

04:15.500 --> 04:15.900
对吧

04:15.900 --> 04:16.700
那这两个宣

04:16.700 --> 04:17.200
那时候

04:17.200 --> 04:18.600
其实我们来看一下

04:18.600 --> 04:19.400
目前来讲

04:19.400 --> 04:21.000
如果说你这样操作之后

04:21.000 --> 04:22.000
他应该是啊

04:22.000 --> 04:23.400
谁也没有的对不对

04:23.400 --> 04:24.300
那这里面就是

04:24.300 --> 04:25.600
当前没有数据啊

04:25.600 --> 04:27.900
咱们先做一个小的处理啊

04:27.900 --> 04:29.400
那这个小的处理是什么呢

04:29.400 --> 04:30.500
我们我们看啊

04:30.500 --> 04:31.500
这里面是不是有一个

04:31.500 --> 04:32.800
没有数据的一个展示

04:32.800 --> 04:33.300
对吧

04:33.300 --> 04:34.700
其实这个没有数据啊

04:34.700 --> 04:36.400
那现在就可以根据什么了

04:36.400 --> 04:37.600
我们现在已经写好了

04:37.600 --> 04:38.600
一个计算属性

04:38.600 --> 04:39.200
那这个时候

04:39.200 --> 04:40.300
我就可以通过

04:40.300 --> 04:40.900
vif

04:40.900 --> 04:42.400
来处理一下他的

04:42.400 --> 04:43.600
显示隐藏

04:43.600 --> 04:44.600
如果说self

04:44.600 --> 04:45.800
label list

04:45.800 --> 04:46.600
点lumps

04:46.600 --> 04:48.100
去进行一个

04:48.100 --> 04:48.800
取反操作

04:48.800 --> 04:50.300
也就是说没有长度

04:50.300 --> 04:51.100
那没有长度呢

04:51.100 --> 04:53.000
我就让你显示当前没有数据

04:53.000 --> 04:53.500
否则呢

04:53.500 --> 04:55.000
那你直接显示正常的列表

04:55.000 --> 04:55.900
就可以了

04:55.900 --> 04:57.000
底下这个也一样

04:57.000 --> 04:57.600
底下这个呢

04:57.600 --> 04:58.600
我使用这个

04:58.600 --> 04:59.200
recomment

04:59.200 --> 05:00.200
label list的

05:00.200 --> 05:01.300
那这样目前来讲

05:01.300 --> 05:03.000
正常咱谁都没有对不对

05:03.000 --> 05:04.100
这是我们第一步

05:04.100 --> 05:06.600
保持了一个状态的一个情节

05:06.600 --> 05:06.900
好的

05:06.900 --> 05:08.700
那接下来我们就继续做啊

05:08.700 --> 05:09.900
这个里面写点什么呢

05:09.900 --> 05:11.100
其实咱说了

05:11.100 --> 05:12.900
如果说想让这个self

05:12.900 --> 05:14.100
label list

05:14.100 --> 05:15.300
不断的就是说

05:15.300 --> 05:16.600
根据我们一个状态

05:16.600 --> 05:17.800
只能发生改变的话

05:17.800 --> 05:19.400
那我们或者使用一个

05:19.400 --> 05:20.400
自己的这个数据

05:20.400 --> 05:21.600
或者是微查数据

05:21.600 --> 05:22.000
或者呢

05:22.000 --> 05:23.500
你再点一个计算属性

05:23.500 --> 05:25.100
那咱们这个里面使用一个什么呢

05:25.100 --> 05:26.500
因为刚才我们看到了

05:26.500 --> 05:29.200
如果说我们不点击这个

05:29.200 --> 05:30.300
完成按钮的时候

05:30.300 --> 05:30.800
其实呢

05:30.800 --> 05:32.200
我们的这个微查数据啊

05:32.200 --> 05:33.600
是不会发生更改的

05:33.600 --> 05:34.300
所以说呢

05:34.300 --> 05:35.000
在这个里面啊

05:35.000 --> 05:37.500
我们尽量使用一个微查的副本

05:37.500 --> 05:37.700
嗯

05:37.700 --> 05:38.300
如何来做

05:38.300 --> 05:40.300
我这里面使用一个watch

05:41.400 --> 05:41.700
ok

05:41.700 --> 05:43.000
那这里面写一下

05:43.000 --> 05:43.400
第一个呢

05:43.400 --> 05:43.900
就是什么呢

05:43.900 --> 05:45.800
youter info

05:45.800 --> 05:46.040
好的

05:46.040 --> 05:47.100
那这个youter info

05:47.100 --> 05:48.100
我们订一下

05:48.100 --> 05:49.900
我们使用对象的形式定义

05:49.900 --> 05:52.300
为什么使用对象的形式

05:52.300 --> 05:54.400
来进行对youter info的

05:54.400 --> 05:55.800
一个坚定的定义

05:55.800 --> 05:56.700
因为这个里面啊

05:56.700 --> 05:58.000
是有一个原因的

05:58.000 --> 06:00.000
如果说我们出手化的时候

06:00.000 --> 06:00.900
这个用户啊

06:00.900 --> 06:03.500
假如说他要是啊

06:03.500 --> 06:04.800
没有发生改变的时候

06:04.800 --> 06:06.500
那他不会是去执行的

06:06.500 --> 06:07.700
所以说这个里面

06:07.700 --> 06:09.000
他如果说没有发生改变

06:09.000 --> 06:09.600
不会执行

06:09.600 --> 06:10.600
那我们下面

06:10.600 --> 06:11.600
依赖的这个数据

06:11.600 --> 06:12.800
就没办法获取到了

06:12.800 --> 06:13.200
对不对

06:13.200 --> 06:13.700
所以说呢

06:13.700 --> 06:14.300
我这里面啊

06:14.300 --> 06:16.100
使用这种对象的形式

06:16.100 --> 06:17.800
我让他出手化的时候

06:17.800 --> 06:18.700
就执行一下

06:18.700 --> 06:19.100
这个呢

06:19.100 --> 06:22.000
也是防止我们h5端啊

06:22.000 --> 06:22.700
这个里面呢

06:22.700 --> 06:23.700
他有刷新界面的

06:23.700 --> 06:24.800
这一种行为

06:24.800 --> 06:26.900
我使用一个emdata这个属性

06:26.900 --> 06:27.500
这属性呢

06:27.500 --> 06:28.800
其实在我们学vio的时候

06:28.800 --> 06:29.400
都知道

06:29.400 --> 06:29.800
他呢

06:29.800 --> 06:31.000
就是监听

06:31.000 --> 06:32.500
在这个卧池里面

06:32.500 --> 06:34.100
监听的这个数据

06:34.100 --> 06:34.500
然后呢

06:34.500 --> 06:35.400
出手化的时候

06:35.400 --> 06:36.900
其实就调用一次啊

06:36.900 --> 06:37.300
那这里面

06:37.300 --> 06:39.000
如果说使用emdata了

06:39.000 --> 06:40.000
那我这个里面

06:40.000 --> 06:42.400
就是用Hand的形式

06:42.400 --> 06:45.500
这里面有一个new value

06:45.500 --> 06:47.000
和这个out value

06:47.000 --> 06:48.300
那这里面我们要干什么

06:48.300 --> 06:48.900
其实这里面

06:48.900 --> 06:50.300
我们能拿到一个东西啊

06:50.300 --> 06:51.600
可以给同学们看一下

06:51.600 --> 06:52.200
这次点

06:52.200 --> 06:52.900
u3

06:52.900 --> 06:53.700
info

06:53.700 --> 06:55.700
点一个label

06:55.700 --> 06:56.400
下方线

06:56.400 --> 06:57.500
idx

06:57.500 --> 06:57.800
ok

06:57.800 --> 06:58.600
那我们来看一下

06:58.600 --> 07:00.200
是否能获取到他

07:00.200 --> 07:00.600
好的

07:00.600 --> 07:01.600
有一个爆错

07:01.600 --> 07:05.850
我们把这个豆号添加一个

07:05.850 --> 07:06.850
console打印一下

07:06.850 --> 07:07.250
你看啊

07:07.250 --> 07:09.250
这里面有两个label idx

07:09.250 --> 07:09.650
也就是说

07:09.650 --> 07:10.450
出手化的时候

07:10.450 --> 07:11.850
其实我是添加了两条

07:11.850 --> 07:12.350
对不对

07:12.350 --> 07:15.250
那你添加了两条label idx

07:15.250 --> 07:16.050
那这个里面

07:16.050 --> 07:16.750
你拿到了

07:16.750 --> 07:17.150
拿到了

07:17.150 --> 07:17.950
你要干嘛呢

07:17.950 --> 07:18.450
拿到了

07:18.450 --> 07:19.550
你是不是要复职啊

07:19.550 --> 07:21.150
那我这个在data里面

07:21.150 --> 07:23.050
我们就可以按定一个值啊

07:23.050 --> 07:23.750
出手化的时候

07:23.750 --> 07:24.450
那我定一个

07:24.450 --> 07:25.350
这个值是什么呢

07:25.350 --> 07:28.550
比如说我们这个叫label idx

07:28.550 --> 07:29.750
这个是一个临时的

07:29.750 --> 07:31.950
其实做数据更改

07:31.950 --> 07:33.750
处发或者出手化渲染的时候

07:33.750 --> 07:35.650
我们还是依靠这个u3info

07:35.650 --> 07:36.550
label idx

07:36.550 --> 07:36.950
这个呢

07:36.950 --> 07:38.250
我们要明确一下

07:38.250 --> 07:39.950
也就是说这个console.log

07:39.950 --> 07:41.350
那我们替换成什么

07:41.350 --> 07:43.050
这次点label idx

07:43.050 --> 07:45.150
让他有一个复职的过程

07:45.150 --> 07:45.850
那等于他

07:45.850 --> 07:46.750
等于他之后

07:46.750 --> 07:50.250
那其实我们在这个selflabel idx里面

07:50.250 --> 07:51.950
我们就能拿到一个什么

07:51.950 --> 07:53.650
这次点label idx

07:53.650 --> 07:54.050
对不对

07:54.050 --> 07:55.250
是这种情况吗

07:55.250 --> 07:56.450
然后我们来刷新一下

07:56.450 --> 07:57.150
你看一下

07:57.150 --> 07:58.350
这里面是不是有了

07:58.350 --> 07:59.150
那有了之后

07:59.150 --> 08:01.050
我们其实这里面有两个

08:01.050 --> 08:01.550
对不对

08:01.550 --> 08:02.150
然后呢

08:02.150 --> 08:03.350
我们还能拿到一个什么

08:03.350 --> 08:04.850
再给同学们看一个

08:04.850 --> 08:05.950
这一次

08:07.050 --> 08:08.150
点二

08:08.150 --> 08:10.850
我们这里面叫label list

08:10.850 --> 08:11.750
ok

08:11.750 --> 08:12.950
那到这个里面

08:12.950 --> 08:14.250
你看这两个

08:14.250 --> 08:18.150
是我们收集到的用户保存的一个id

08:18.150 --> 08:18.650
这个值呢

08:18.650 --> 08:20.150
是我提前添加进去的

08:20.150 --> 08:21.050
那下面呢

08:21.050 --> 08:22.250
是我们每一个label

08:22.250 --> 08:24.750
也就是说上面的展示的每一个label

08:24.750 --> 08:26.150
那这每一个label里面

08:26.150 --> 08:28.550
我们就看这一条就可以

08:28.550 --> 08:29.550
每一个label里面

08:29.550 --> 08:31.050
这里面都会有一个什么呢

08:31.050 --> 08:31.450
name

08:31.450 --> 08:32.450
这个当然他是全部

08:32.450 --> 08:33.750
咱不用考虑他了

08:33.750 --> 08:35.750
这里面有一个id

08:35.750 --> 08:36.150
对吧

08:36.150 --> 08:36.950
那这个id

08:36.950 --> 08:38.350
肯定会有一个

08:38.350 --> 08:40.250
跟我们保存的这个匹配

08:40.250 --> 08:40.750
对不对

08:40.750 --> 08:41.450
然后这两个

08:41.450 --> 08:43.150
反正都存在这七个里面

08:43.150 --> 08:43.850
那怎么办

08:43.850 --> 08:45.850
我们找出存在的

08:45.850 --> 08:47.250
然后给进行一个渲染

08:47.250 --> 08:48.250
是不是就ok了

08:48.250 --> 08:49.250
也就是说

08:49.250 --> 08:50.650
其实这个操作是什么

08:50.650 --> 08:52.850
就是从一个数组里面判断

08:52.850 --> 08:55.550
是否包含另一个数组里面的

08:55.550 --> 08:56.750
指定的那些项

08:56.750 --> 08:57.250
对吧

08:57.250 --> 08:58.650
那我们怎么来写呢

08:58.650 --> 08:59.350
在这个里面

08:59.350 --> 09:02.050
我们直接的就可以return就ok了

09:02.050 --> 09:03.750
也就不需要这个打印了

09:03.750 --> 09:05.850
我们直接在这给他注释掉

09:05.850 --> 09:06.750
然后呢

09:06.750 --> 09:07.750
把它给干掉

09:07.750 --> 09:08.450
return什么

09:08.450 --> 09:11.150
首先我们这一次点label list

09:12.150 --> 09:14.150
label list

09:14.150 --> 09:14.450
ok

09:14.450 --> 09:15.650
拿到他之后

09:15.650 --> 09:16.250
然后呢

09:16.250 --> 09:18.250
我们直接的给他做一个过滤

09:18.250 --> 09:19.550
因为这个数组里面多

09:19.550 --> 09:20.050
对不对

09:20.050 --> 09:20.950
那我们谁多

09:20.950 --> 09:23.050
肯定得过滤谁啊

09:23.050 --> 09:23.650
filter

09:23.650 --> 09:24.750
filter这个里面

09:24.750 --> 09:25.950
我们做一个什么

09:25.950 --> 09:27.350
首先拿出item

09:27.350 --> 09:29.050
item是他里面的每一项

09:29.050 --> 09:31.250
这里面包含内模和ids

09:31.250 --> 09:31.950
对吧

09:31.950 --> 09:32.450
sorry

09:32.450 --> 09:33.350
内模和id

09:33.350 --> 09:33.850
对不对

09:33.850 --> 09:34.950
那我判断一个什么呢

09:34.950 --> 09:36.950
其实我们判断就是

09:36.950 --> 09:39.450
当前你这七项里面

09:39.450 --> 09:40.450
是不是

09:40.450 --> 09:42.050
然后循环辨历每一项

09:42.050 --> 09:42.650
是不是

09:42.650 --> 09:45.050
那这每一项在我们哪个里面

09:45.050 --> 09:47.350
在我们这个label ids里面

09:47.350 --> 09:48.950
那我这里面就可以使用

09:48.950 --> 09:50.350
ink lose

09:51.150 --> 09:52.150
ink lose

09:52.150 --> 09:54.750
那这个里面是不是看他是不是包含

09:54.750 --> 09:55.650
那包含怎么办

09:55.650 --> 09:57.750
就把这个item.id传进去

09:57.750 --> 09:58.650
如果说你包含

09:58.650 --> 09:59.350
那你自然而然

09:59.350 --> 10:01.350
那就会有一个什么渲染的过程

10:01.350 --> 10:01.750
对不对

10:01.750 --> 10:02.750
那我们来看一眼

10:02.750 --> 10:04.150
是否可行

10:04.150 --> 10:05.150
这样啊

10:05.150 --> 10:07.250
这里面有一个爆错

10:07.250 --> 10:08.150
item

10:08.150 --> 10:10.350
这里面是点id

10:10.650 --> 10:12.450
使用item.id

10:12.450 --> 10:12.650
好了

10:12.650 --> 10:13.150
那你看啊

10:13.150 --> 10:14.450
这个里面就已经过去了

10:14.450 --> 10:14.950
是吧

10:14.950 --> 10:16.650
这里面有两个前端开发

10:16.650 --> 10:17.550
两个前端开发

10:17.550 --> 10:19.450
这场是不是我们当时

10:19.450 --> 10:21.550
没有使用这个

10:21.550 --> 10:22.150
变量的

10:22.150 --> 10:24.750
那我这里面使用一个item.name

10:24.750 --> 10:27.650
既然都已经有了这个item了

10:27.650 --> 10:30.150
那我就使用item.xid

10:30.150 --> 10:31.150
是不是就可以了

10:31.150 --> 10:32.750
使用id来渲染

10:32.750 --> 10:33.350
前端开发

10:33.350 --> 10:34.050
后端开发

10:34.050 --> 10:35.250
这样是不是就进去了

10:35.250 --> 10:35.950
那进去之后

10:35.950 --> 10:37.550
那咱们再来说第二个

10:37.550 --> 10:38.750
第二个其实

10:38.750 --> 10:40.850
那就是对它进行一个什么

10:40.850 --> 10:41.950
取反的操作

10:41.950 --> 10:43.050
是不是就ok了

10:43.050 --> 10:44.950
也就是说把这个给干掉

10:44.950 --> 10:45.450
然后呢

10:45.450 --> 10:48.850
我们给它取一个反向操作就可以了啊

10:48.850 --> 10:49.550
保存一下

10:49.550 --> 10:51.250
然后我们来看一眼

10:51.250 --> 10:52.250
后端开发

10:52.250 --> 10:53.450
这里面还没有取反

10:53.450 --> 10:54.650
我们在这个里面

10:54.650 --> 10:55.150
非

10:55.150 --> 10:57.550
这一次点label ids

10:57.550 --> 11:00.030
ok

11:00.030 --> 11:00.830
后端开发

11:00.830 --> 11:01.530
后端开发

11:01.530 --> 11:02.930
然后这里面是好多项

11:02.930 --> 11:03.430
好多项

11:03.430 --> 11:05.230
那我们直接在这里面

11:05.230 --> 11:06.130
再处理一下

11:06.130 --> 11:07.730
把它也是调整一下

11:07.730 --> 11:08.830
叫

11:08.830 --> 11:12.330
双扩号item.xid

11:12.330 --> 11:12.930
然后呢

11:12.930 --> 11:15.630
我们把这个k也给它调整一下

11:15.630 --> 11:18.630
item.xid

11:18.630 --> 11:18.830
好的

11:18.830 --> 11:20.130
那我们再来看一下

11:20.130 --> 11:23.030
然后直接的这个item.name

11:23.030 --> 11:24.430
不应该是id啊

11:24.430 --> 11:24.630
哎

11:24.630 --> 11:25.630
sorry

11:25.630 --> 11:27.430
把它再给调整一下

11:27.430 --> 11:29.630
这个是item.name

11:30.930 --> 11:31.430
来看一眼

11:31.430 --> 11:33.630
全部移动端开发每日一题

11:33.630 --> 11:36.030
其实这个全部现在没有必要渲染了

11:36.030 --> 11:36.630
对不对

11:36.630 --> 11:38.830
所以说在整个循环便利过程当中

11:39.130 --> 11:41.930
因为它默认就包含了这个全部

11:41.930 --> 11:42.730
那我怎么办

11:42.730 --> 11:45.530
看它包含这个是不是不包含

11:45.530 --> 11:46.430
如果说不包含

11:46.430 --> 11:48.930
我在这里面再写个并且呢

11:48.930 --> 11:51.030
因为全部肯定没有item的id

11:51.030 --> 11:51.430
对吧

11:51.430 --> 11:53.330
所以说item.xid

11:53.330 --> 11:54.630
是不是这样可以了

11:54.630 --> 11:56.430
也就是说让它没有这个id的时候

11:56.430 --> 11:56.530
哎

11:56.530 --> 11:58.030
那直接它就可以过滤掉

11:58.030 --> 11:58.430
这样呢

11:58.430 --> 12:00.130
我们就实现了一个渲染

12:00.130 --> 12:00.630
那这个呢

12:00.630 --> 12:02.930
就是我们刚才来做的一个

12:02.930 --> 12:06.230
我们两个数据的这样一个渲染过程啊

12:06.230 --> 12:07.530
那渲染完数据之后

12:07.530 --> 12:08.430
我们要做什么呢

12:08.430 --> 12:11.230
其实现在我们就可以给这个按钮

12:11.230 --> 12:13.630
添加这种点击事件了对不对

12:13.630 --> 12:15.730
但是点击事件的前提是什么呢

12:15.730 --> 12:17.830
必须我们在这个里面编辑啊

12:17.830 --> 12:19.030
会有发生更改的时候

12:19.030 --> 12:21.030
也就是说它是完成状态的时候

12:21.030 --> 12:24.730
我们才可以来做这个编辑的一个操作

12:24.730 --> 12:26.930
也就是说进行我们的这个

12:26.930 --> 12:28.330
选项卡的一个添加

12:28.330 --> 12:30.330
包括删除的这样一个操作

12:30.330 --> 12:30.630
这个呢

12:30.630 --> 12:32.030
我们要明确一下

12:32.030 --> 12:32.230
好的

12:32.230 --> 12:33.430
那我们就来实现一下

12:33.430 --> 12:34.730
首先我们先做底下吧

12:34.730 --> 12:35.330
对吧

12:35.330 --> 12:36.830
底下怎么来做呢

12:36.830 --> 12:39.430
我们找到每一个在这个里面

12:39.430 --> 12:41.030
我们直接在这里面

12:41.030 --> 12:43.630
对它进行一个点击事件的添加

12:45.130 --> 12:48.530
I的Click这里面有一个changer cell phone

12:49.930 --> 12:51.730
然后这里面是list

12:51.730 --> 12:54.230
ok我写一个item

12:54.230 --> 12:57.030
好吧把这个item给它传过去

12:57.030 --> 12:59.430
然后咱们在这里面订一下

12:59.730 --> 13:03.830
my thirdchanger cell phone list

13:04.130 --> 13:04.430
然后呢

13:04.430 --> 13:05.630
把这个名字改一下吧

13:05.630 --> 13:07.330
这个叫什么changer

13:07.330 --> 13:11.630
或者叫changer label self label list

13:12.330 --> 13:14.430
self label list

13:14.430 --> 13:15.630
名字好有点长

13:15.630 --> 13:17.730
但是长一点能语异化更重一些

13:17.730 --> 13:18.230
对吧

13:18.230 --> 13:20.430
那我直接在这个里面是item

13:20.430 --> 13:22.830
ok把他这个item获取到

13:22.830 --> 13:24.330
那获取到这个item

13:24.330 --> 13:25.630
我们要干点什么事呢

13:25.630 --> 13:27.930
这个里面如果说我先判断一下

13:27.930 --> 13:30.630
如果说你非这次点ease edit

13:30.630 --> 13:31.630
不是編辑状态

13:31.630 --> 13:33.130
那我直接给你return掉

13:33.130 --> 13:34.430
什么都不让你做对吧

13:34.430 --> 13:35.830
如果说你是编辑状态

13:35.830 --> 13:38.630
那我直接的在这个里面来做事

13:38.630 --> 13:39.430
是不是就可以了

13:39.430 --> 13:40.430
我们可以打印一个

13:40.430 --> 13:42.130
直接先看一下打印什么呢

13:42.130 --> 13:44.930
就是item.下滑线id

13:44.930 --> 13:47.130
然后这个id其实是不是就是

13:47.130 --> 13:48.430
我们直接点击哪一个

13:48.430 --> 13:51.630
哪一个是不是就应该是有这个id的显示

13:51.630 --> 13:51.930
对吧

13:51.930 --> 13:53.430
那我们刷清一下

13:53.430 --> 13:55.430
比如说在这个里面点击编辑ok

13:55.430 --> 13:57.630
我一点击每一个都显示出来了

13:57.630 --> 13:59.430
那现在我要做的是啥事呢

13:59.430 --> 14:02.230
就是把我们本地维护的这个

14:02.230 --> 14:03.830
我们的这个label

14:03.830 --> 14:05.630
也就是说这个label ids

14:05.630 --> 14:07.230
给它铺实进去是不是就可以了

14:07.230 --> 14:09.930
因为你现在肯定点击下面是要追加

14:09.930 --> 14:10.230
对吧

14:10.230 --> 14:13.730
所以说就是这次点label ids.铺实

14:13.730 --> 14:14.530
铺实谁

14:14.530 --> 14:17.430
就是这个item.下滑线id

14:17.430 --> 14:18.730
那这样给他追加进去

14:18.730 --> 14:19.630
是不是就可以了

14:19.630 --> 14:20.630
我们来做一个测试

14:20.630 --> 14:21.630
看是否可行啊

14:23.030 --> 14:23.430
ok

14:23.430 --> 14:25.030
我这里面点击编辑

14:25.030 --> 14:26.530
精彩直播是不是进去了

14:26.530 --> 14:27.530
然后直上生活

14:27.530 --> 14:28.130
每日一提

14:28.130 --> 14:29.330
是不是这样都过去了

14:29.330 --> 14:30.130
那这个是为什么

14:30.130 --> 14:31.430
其实这个挺好理解

14:31.530 --> 14:33.530
最主要原因是想我修改了

14:33.530 --> 14:34.930
这个label ids

14:34.930 --> 14:36.730
因为这个selflabel list

14:36.730 --> 14:38.430
以及recommentlabel list

14:38.430 --> 14:38.930
他们俩呢

14:38.930 --> 14:41.930
又都依赖这个我们的label ids

14:41.930 --> 14:42.430
所以说

14:42.430 --> 14:44.030
当他发生更改的时候

14:44.030 --> 14:44.530
两个呢

14:44.530 --> 14:46.030
就会出发重新计算

14:46.030 --> 14:46.530
然后呢

14:46.530 --> 14:48.430
并且给我们进行一个月面

14:48.430 --> 14:50.230
重新渲染的这样一个过程

14:50.230 --> 14:50.830
对不对

14:50.830 --> 14:51.930
那这个搞定之后呢

14:51.930 --> 14:52.930
那我们再来试问一下

14:52.930 --> 14:54.030
上面这个

14:54.030 --> 14:54.930
上面是哪一个

14:54.930 --> 14:55.930
就是这个小Icon

14:55.930 --> 14:57.730
如果说我点击删除的时候

14:57.730 --> 14:59.630
我们要处理一个内容啊

14:59.630 --> 15:00.530
那这个里面就是

15:00.530 --> 15:01.330
I'd click

15:01.330 --> 15:04.030
比如说这个delete

15:05.530 --> 15:07.430
delete我们要删除一个什么

15:07.430 --> 15:09.430
删除一个label item

15:10.430 --> 15:11.530
这里面写一下

15:11.530 --> 15:12.830
delete label item

15:12.830 --> 15:14.230
同样的我把这个item

15:14.230 --> 15:15.630
给它传过去啊

15:15.630 --> 15:16.630
传过去之后

15:16.630 --> 15:18.330
这个里面往下走

15:18.330 --> 15:19.030
到这个里面

15:19.030 --> 15:20.130
我写一下啊

15:20.130 --> 15:20.830
这个是

15:21.930 --> 15:23.630
删除收藏的

15:23.630 --> 15:26.930
一个删除收藏信息

15:26.930 --> 15:28.030
OK

15:28.030 --> 15:28.730
这里面咋写

15:28.730 --> 15:30.430
那我直接写一个delete

15:30.630 --> 15:31.930
item

15:31.930 --> 15:32.830
做什么事

15:32.830 --> 15:33.530
其实这个呢

15:33.530 --> 15:35.130
还是操作一个什么呢

15:35.130 --> 15:37.130
Z star label IDS

15:37.130 --> 15:39.230
但是这个Z star label IDS

15:39.230 --> 15:41.330
你是不是要找到指定的那一项

15:41.330 --> 15:42.130
然后呢

15:42.130 --> 15:44.330
给它进行一个删除操作

15:44.330 --> 15:45.530
对不对

15:45.530 --> 15:46.030
所以说呢

15:46.030 --> 15:46.730
我们这里面

15:46.730 --> 15:48.630
可以给这个label IDS

15:48.630 --> 15:50.930
重新做一个复制就OK了

15:50.930 --> 15:51.630
也就是说

15:51.630 --> 15:53.230
Z star label IDS

15:53.230 --> 15:54.030
在这个里面

15:54.030 --> 15:55.930
我们去filter一下

15:55.930 --> 15:57.030
filter重新过滤

15:57.030 --> 15:57.830
那过滤

15:57.830 --> 15:58.930
它这个首先呢

15:58.930 --> 16:00.430
是每一个value

16:00.430 --> 16:00.930
value呢

16:00.930 --> 16:02.330
就代表每一个ID啊

16:02.330 --> 16:02.830
然后呢

16:02.830 --> 16:05.130
这个或者是我写一个吧

16:05.130 --> 16:05.730
ID

16:05.730 --> 16:06.330
好吧

16:06.330 --> 16:07.130
那这个ID

16:07.130 --> 16:08.930
看它是跟谁相等的

16:08.930 --> 16:10.230
就是这个ID

16:10.230 --> 16:11.530
是否如果说

16:11.530 --> 16:13.330
它要是不等于

16:13.330 --> 16:14.430
我们的这个

16:14.430 --> 16:14.830
什么呢

16:14.830 --> 16:16.330
就是这个item

16:16.330 --> 16:18.230
点下号线ID

16:18.230 --> 16:19.630
那只要是你不等于

16:19.630 --> 16:20.230
那这个里面

16:20.230 --> 16:21.730
我是不是就把你给干掉了

16:21.730 --> 16:22.930
是不是这么一个逻辑

16:22.930 --> 16:23.430
对吧

16:23.430 --> 16:23.930
那这个呢

16:23.930 --> 16:25.330
就是我们给label IDS

16:25.330 --> 16:26.130
重新复制的

16:26.130 --> 16:27.330
这样一个过程

16:27.330 --> 16:28.030
我们来看一下

16:28.030 --> 16:29.330
是否可行

16:29.530 --> 16:30.730
同样的点击编辑

16:30.730 --> 16:31.830
如果说你不点击编辑

16:31.830 --> 16:32.830
这个icon都出不来

16:32.830 --> 16:33.430
对吧

16:33.430 --> 16:34.430
我点击竞赛直播

16:34.430 --> 16:35.830
OK后端开发

16:35.830 --> 16:36.530
前端开发

16:36.530 --> 16:37.830
这个里面是不是就进去了

16:37.830 --> 16:38.330
对吧

16:38.330 --> 16:39.030
那整个这个呢

16:39.030 --> 16:42.030
就是我们一个简单的实现啊

16:42.030 --> 16:44.130
那么当这两个操作都做完之后

16:44.130 --> 16:45.730
现在是不是开始

16:45.730 --> 16:48.430
真正的我们对这个修改标签

16:48.430 --> 16:48.930
然后呢

16:48.930 --> 16:51.130
我们要进行什么发送后端了

16:51.130 --> 16:51.630
对不对

16:51.630 --> 16:54.130
也就是说发送给我们的云函数

16:54.130 --> 16:54.930
云函数呢

16:54.930 --> 16:56.030
在去数据库里面

16:56.030 --> 16:57.330
进行一个调整啊

16:57.330 --> 16:59.230
发送给后端

16:59.230 --> 17:00.630
那这个里面怎么来做

17:00.630 --> 17:02.430
其实就是update label

17:02.430 --> 17:03.030
对不对

17:03.030 --> 17:05.530
那我们这个如果说要处罚update label

17:05.530 --> 17:06.830
那一定是什么

17:06.830 --> 17:10.230
你这个里面应该是要进行一个调整的状态了

17:10.230 --> 17:12.630
也就是说他这个右上角的这一块

17:12.630 --> 17:14.230
应该是一个完成状态

17:14.230 --> 17:14.830
对不对

17:14.830 --> 17:16.830
那此时如果说是这种情况的话

17:16.830 --> 17:18.730
那我们就开始来做吧啊

17:18.730 --> 17:19.330
怎么来做呢

17:19.330 --> 17:21.030
首先我们要发送给后端

17:21.030 --> 17:23.230
我们要有两个值要获取一下

17:23.230 --> 17:24.230
第一个是什么

17:24.230 --> 17:25.430
用户的信息

17:25.430 --> 17:25.930
对吧

17:25.930 --> 17:27.630
用户信息其实就是谁

17:27.730 --> 17:29.130
我们的这个u字

17:30.730 --> 17:32.430
info的一个id

17:32.430 --> 17:32.830
对吧

17:32.830 --> 17:34.030
这个要给后端

17:34.030 --> 17:34.830
还有一个什么呢

17:34.830 --> 17:37.230
还有一个新的ids的集合

17:37.230 --> 17:39.030
那这个新的ids集合

17:39.030 --> 17:40.430
我们可以是一个数组

17:40.430 --> 17:42.430
那首先我们把这个两个值

17:42.430 --> 17:43.630
要获取一下

17:43.630 --> 17:45.230
这个u字info id

17:45.230 --> 17:46.630
我们直接拿来用就可以了

17:46.630 --> 17:46.930
对吧

17:46.930 --> 17:48.030
这个比较简单

17:48.030 --> 17:49.030
那这个ids呢

17:49.030 --> 17:51.030
我们其实ids也可以获取啊

17:51.030 --> 17:52.430
因为我们现在有一个什么

17:52.430 --> 17:54.730
有一个label ids对不对

17:54.730 --> 17:56.030
那我们可以看一下

17:56.030 --> 17:58.430
这个里面我们直接打印一下

17:58.430 --> 17:59.230
打印一下谁呢

17:59.230 --> 18:02.230
就是这次点self label

18:02.230 --> 18:03.630
我们直接使用self

18:03.630 --> 18:05.230
self就是自己的对不对

18:05.230 --> 18:07.530
self label list

18:07.530 --> 18:08.030
然后呢

18:08.030 --> 18:08.830
咱们来看一下

18:08.830 --> 18:09.830
它是什么值

18:11.130 --> 18:12.330
我这里面点击编辑

18:12.330 --> 18:13.230
然后点完成

18:13.230 --> 18:14.430
那这里面有五条

18:14.430 --> 18:14.730
对吧

18:14.730 --> 18:16.630
这个一次跟他对上了

18:16.630 --> 18:17.430
对上了之后

18:17.430 --> 18:18.430
其实我们要什么

18:18.430 --> 18:19.630
就要他的这个id

18:19.630 --> 18:21.330
其他的我们不想要对吧

18:21.330 --> 18:21.830
所以说

18:21.830 --> 18:23.030
那我们直接怎么办呢

18:23.030 --> 18:23.630
在这里面

18:23.630 --> 18:25.330
可以定一个变量

18:25.330 --> 18:27.230
label ids

18:27.230 --> 18:28.630
等于我们的这个

18:28.630 --> 18:31.130
这次点self list

18:31.130 --> 18:31.630
然后呢

18:31.630 --> 18:33.130
我们这里面使用输组的

18:33.130 --> 18:34.230
map方法

18:34.230 --> 18:35.930
这里面每一个item

18:35.930 --> 18:37.530
return出来item

18:37.530 --> 18:39.230
点小线id

18:39.230 --> 18:40.230
是不是就可以了

18:40.230 --> 18:41.030
然后这时候

18:41.030 --> 18:43.030
我们直接拿到它之后

18:43.030 --> 18:43.930
那这时候就可以

18:43.930 --> 18:45.330
准备进行数据发送了

18:45.330 --> 18:46.430
因为我们这个

18:46.430 --> 18:47.330
有点音放点id

18:47.330 --> 18:48.330
直接可以获取到

18:48.330 --> 18:48.830
对吧

18:48.830 --> 18:50.030
那我们这里面就定一下

18:50.030 --> 18:51.330
conce的is

18:51.330 --> 18:52.830
等于await

18:52.830 --> 18:55.030
这次点dollarhttp

18:55.030 --> 18:55.630
然后呢

18:55.630 --> 18:56.530
我们这个是修改

18:56.530 --> 18:57.030
对吧

18:57.030 --> 18:58.830
那我就使用一个update

18:58.830 --> 19:01.730
这个叫label ids

19:01.730 --> 19:02.330
ok

19:02.330 --> 19:03.530
那这里面传址吧

19:03.530 --> 19:04.030
传址

19:04.030 --> 19:04.930
第一个是什么呢

19:04.930 --> 19:06.530
我们的youzr id

19:06.530 --> 19:07.130
youzr id

19:07.130 --> 19:08.130
就是这一次点

19:08.130 --> 19:09.630
youzr info

19:09.630 --> 19:11.730
youzr info

19:11.730 --> 19:14.030
点下滑线id

19:14.030 --> 19:15.130
这是第一个址

19:15.130 --> 19:15.930
那第二个址呢

19:15.930 --> 19:16.830
我们再传一个

19:16.830 --> 19:17.730
传一个就是谁

19:17.730 --> 19:19.130
这个label ids

19:19.130 --> 19:19.830
就好了

19:19.830 --> 19:20.530
那我直接

19:20.530 --> 19:21.830
就把它给简写一下

19:21.830 --> 19:22.630
就可以了

19:22.630 --> 19:22.930
好了

19:22.930 --> 19:24.130
那这两址就传完了

19:24.130 --> 19:24.930
传完了之后呢

19:24.930 --> 19:26.430
现在咱们就一次的

19:26.430 --> 19:28.030
一步一步的开始定义

19:28.030 --> 19:29.430
这个就可以了

19:29.430 --> 19:30.330
那怎么来定义呢

19:30.330 --> 19:31.330
首先回到我们的

19:31.330 --> 19:33.230
阿甲克斯打开API

19:33.230 --> 19:34.230
interface

19:34.230 --> 19:35.430
它属于home界面的

19:35.430 --> 19:36.830
那我们直接就在这个里面

19:36.830 --> 19:38.030
来创建一下

19:38.030 --> 19:38.730
这个叫什么

19:38.730 --> 19:40.530
我们修改啊

19:40.530 --> 19:43.530
用户保存的一个

19:43.530 --> 19:46.030
选项卡标签

19:47.330 --> 19:47.830
写一下

19:47.830 --> 19:52.030
export const update ids

19:52.030 --> 19:53.230
等于data

19:53.230 --> 19:56.830
然后是这个里面

19:56.830 --> 19:59.130
调用阿甲克斯方法

19:59.130 --> 20:02.330
然后指定一个云函数的名字

20:02.330 --> 20:02.930
并且呢

20:02.930 --> 20:04.430
后面跟一个data

20:04.430 --> 20:05.330
那这个就定义完了

20:05.330 --> 20:06.330
定义完成之后

20:06.330 --> 20:07.630
我们接下来就可以

20:07.630 --> 20:10.730
对云函数进行一个创建了啊

20:10.730 --> 20:11.530
创建云函数

20:11.530 --> 20:11.930
怎么办

20:11.930 --> 20:14.230
我们直接在在这个里面

20:14.230 --> 20:16.030
新建云函数

20:16.030 --> 20:17.030
ok名字呢

20:17.030 --> 20:19.130
就叫update label ids

20:19.130 --> 20:20.030
就可以了

20:20.030 --> 20:20.930
创建完成之后

20:20.930 --> 20:22.330
那我们直接在这个里面

20:22.330 --> 20:23.030
就来做事

20:23.030 --> 20:24.030
是不是就可以了

20:24.030 --> 20:25.130
那首先呢

20:25.130 --> 20:26.130
我们这个里面啊

20:26.130 --> 20:27.730
肯定是要有一个什么呢

20:27.730 --> 20:28.930
我们数据库的引用

20:28.930 --> 20:29.230
对吧

20:29.230 --> 20:31.130
所以说我先获取一下啊

20:31.130 --> 20:32.730
const db

20:32.730 --> 20:34.830
等于我们unic load的

20:34.830 --> 20:36.330
data base

20:36.330 --> 20:37.030
之后ok

20:37.030 --> 20:38.930
那我这里面第二步是什么

20:38.930 --> 20:41.230
把前端的这个值给获取一下

20:41.230 --> 20:42.330
我们const

20:42.330 --> 20:43.430
那哪两个值

20:43.430 --> 20:45.530
就是我们刚才定义的

20:45.530 --> 20:46.930
这两一个值

20:46.930 --> 20:48.330
把他们都给拿过来

20:50.330 --> 20:51.330
拿到这个里面

20:51.330 --> 20:52.130
const

20:52.130 --> 20:52.930
这个自设点

20:52.930 --> 20:54.230
youter info ids

20:54.230 --> 20:55.530
这个我就不要了啊

20:55.530 --> 20:56.830
然后使用一个什么

20:56.830 --> 20:58.530
youter id label ids

20:58.530 --> 21:00.330
等于event

21:00.330 --> 21:00.830
对吧

21:00.830 --> 21:02.730
那这个其实我们也不需要聚合了

21:02.730 --> 21:04.330
直接就是一个修改操作

21:04.330 --> 21:04.830
对吧

21:04.830 --> 21:05.570
那么这里面

21:05.570 --> 21:06.530
await

21:06.530 --> 21:07.430
一个什么呢

21:07.430 --> 21:09.530
db.collection

21:09.530 --> 21:10.330
然后这里面

21:10.330 --> 21:12.030
是我们的这个youter表

21:12.030 --> 21:12.730
对吧

21:12.730 --> 21:14.030
把它给写上

21:14.030 --> 21:14.530
youter

21:14.530 --> 21:15.130
ok

21:15.130 --> 21:15.730
然后呢

21:15.730 --> 21:16.930
.doc

21:16.930 --> 21:19.930
通过我们的这个id进行查询

21:19.930 --> 21:21.130
youter id

21:21.130 --> 21:21.930
查询完了之后

21:21.930 --> 21:23.730
那我们使用一个update

21:23.730 --> 21:24.830
来进行修改

21:24.830 --> 21:25.730
修改哪一个

21:25.730 --> 21:28.230
就是修改我们的这个label ids

21:28.230 --> 21:29.630
这样是不是就可以了

21:29.630 --> 21:30.230
也就是说

21:30.230 --> 21:32.130
其实就是修改这个啊

21:32.130 --> 21:33.130
修改它之后

21:33.130 --> 21:34.230
那我直接这里面

21:34.230 --> 21:35.630
就做返回办

21:35.630 --> 21:37.330
如果说修改成功的话

21:37.330 --> 21:38.830
给它一个错误标识

21:38.830 --> 21:41.230
连我这里面有一个data

21:41.230 --> 21:41.630
data

21:41.630 --> 21:42.930
我就给它返回一句话

21:42.930 --> 21:43.530
这个叫什么

21:43.530 --> 21:45.330
这个叫修改成功

21:45.330 --> 21:46.030
就可以了

21:46.030 --> 21:46.430
对吧

21:46.430 --> 21:46.930
那这个呢

21:46.930 --> 21:48.830
就是我们整个一个时间过程

21:48.830 --> 21:49.330
那这里面

21:49.330 --> 21:51.630
那我们再做上传部署一下

21:51.630 --> 21:52.230
ok

21:52.230 --> 21:53.030
上传完成之后

21:53.030 --> 21:55.230
那我们直接现在就可以来做事

21:55.230 --> 21:56.630
也就是说来看一下

21:56.630 --> 21:57.430
看一下的时候

21:57.430 --> 21:59.130
我们再回到前端

21:59.130 --> 22:00.730
这里面有一个抱错

22:00.730 --> 22:01.530
再检查一下

22:01.530 --> 22:03.630
cons的label ids

22:03.630 --> 22:04.330
等于

22:04.330 --> 22:06.030
z4.dollarself

22:06.030 --> 22:06.630
ok

22:06.630 --> 22:07.530
那这个里面

22:07.530 --> 22:08.930
如果说我拿到值之后

22:08.930 --> 22:10.230
那我这要做什么事呢

22:10.230 --> 22:11.830
如果说is

22:11.830 --> 22:13.530
这里面应该是有一个什么

22:13.530 --> 22:15.530
有个is.msg

22:15.530 --> 22:15.930
对不对

22:15.930 --> 22:17.530
因为我从这个里面

22:17.530 --> 22:19.330
是返回了一个msg

22:19.330 --> 22:20.530
这样我直接写上

22:21.730 --> 22:22.130
好的

22:22.130 --> 22:23.930
那我如果说你成功了

22:23.930 --> 22:25.330
那我就给你个提示

22:25.330 --> 22:27.530
you need a show toast

22:28.230 --> 22:28.730
ok

22:28.730 --> 22:29.830
toast里面

22:29.830 --> 22:31.230
第一个是title

22:31.230 --> 22:31.530
ok

22:31.530 --> 22:32.830
那title是什么

22:32.830 --> 22:34.230
就是我们这个msg

22:34.230 --> 22:35.230
是不是就可以了

22:35.230 --> 22:35.730
之后呢

22:35.730 --> 22:37.630
至于这个其他操作

22:37.630 --> 22:38.930
咱们也先不考虑

22:38.930 --> 22:39.430
对吧

22:39.430 --> 22:41.030
那我们直接的先把这个

22:41.030 --> 22:41.730
来实现

22:41.730 --> 22:43.030
看行不行啊

22:43.030 --> 22:43.230
好的

22:43.230 --> 22:44.430
我们刷新一下界面之后

22:44.430 --> 22:45.630
这里面点边界

22:45.630 --> 22:47.330
我把每日一题添加进去

22:47.330 --> 22:49.230
咱们看一下这个请求

22:49.230 --> 22:50.230
每日一题

22:50.230 --> 22:50.630
ok

22:50.630 --> 22:51.330
过去了之后

22:51.330 --> 22:52.730
我点击完成

22:52.730 --> 22:53.230
完成呢

22:53.230 --> 22:55.230
这里面给我提示修改成功

22:55.230 --> 22:56.230
修改成功

22:56.230 --> 22:57.130
他就说明什么

22:57.130 --> 22:58.130
我们上面这一块

22:58.130 --> 22:59.230
肯定是正常执行的

22:59.230 --> 22:59.730
对吧

22:59.730 --> 23:02.430
那我们看一下update

23:02.430 --> 23:03.630
label ids

23:03.630 --> 23:05.430
然后直接的这个里面

23:05.430 --> 23:06.430
有一个什么呢

23:06.430 --> 23:07.430
user id

23:07.430 --> 23:08.230
有好多内容

23:08.230 --> 23:09.830
然后他没给我们

23:09.830 --> 23:11.330
返回结果一个零

23:11.330 --> 23:12.230
那这个里面

23:12.230 --> 23:13.130
我们也没看出来

23:13.130 --> 23:15.030
他影不影响我们这个

23:15.030 --> 23:15.630
数据库

23:15.630 --> 23:15.830
对吧

23:15.830 --> 23:16.430
那这个咋办

23:16.530 --> 23:18.030
我们直接来看一眼嘛

23:18.030 --> 23:18.830
到这个里面

23:18.830 --> 23:20.930
我们找到云数据库

23:20.930 --> 23:22.230
找到user的一项

23:22.230 --> 23:23.830
如果说你可以的话

23:23.830 --> 23:25.430
那我这里面应该是会有

23:25.430 --> 23:27.530
插入了一项

23:27.530 --> 23:28.630
一二三

23:28.630 --> 23:28.930
ok

23:28.930 --> 23:29.930
没啥问题是吧

23:29.930 --> 23:31.430
这里面是三项

23:31.430 --> 23:31.630
好的

23:31.630 --> 23:33.030
那你既然三项之后

23:33.030 --> 23:33.630
那就说明

23:33.630 --> 23:35.330
你真正的修改成功了

23:35.330 --> 23:36.430
修改成功之后

23:36.430 --> 23:37.330
这时候呢

23:37.330 --> 23:38.730
我们才可以真正的

23:38.730 --> 23:40.230
将我们的这个

23:40.230 --> 23:41.130
死刀数据

23:41.130 --> 23:42.630
来做一个什么修改了

23:42.630 --> 23:43.030
对吧

23:43.030 --> 23:43.530
那此时

23:43.530 --> 23:45.030
因为你已经修改成功了

23:45.030 --> 23:46.630
我们要跟这个后端数据库

23:46.630 --> 23:47.630
做一个同步啊

23:47.630 --> 23:48.130
对不对

23:48.130 --> 23:49.230
那同步怎么同步

23:49.230 --> 23:50.730
我把那条纸给存储一下

23:50.730 --> 23:51.730
是不是就可以了

23:51.730 --> 23:52.330
怎么来做

23:52.330 --> 23:53.030
在下面

23:53.030 --> 23:54.930
我们直接的就是调用

23:54.930 --> 23:56.730
command米息里面定義好的

23:56.730 --> 23:58.730
这次点updata

23:58.730 --> 24:00.430
这个有一个方法叫什么

24:00.430 --> 24:01.830
叫userinfo

24:01.830 --> 24:03.830
修改用户的这个方法

24:03.830 --> 24:04.130
是吧

24:05.730 --> 24:07.830
updata

24:07.830 --> 24:08.730
userinfo

24:08.730 --> 24:10.730
那这个userinfo里面

24:10.730 --> 24:11.530
我们传什么呢

24:11.530 --> 24:12.530
传一个对象

24:12.530 --> 24:13.430
首先点点点

24:13.430 --> 24:15.430
我们把这个这一次点

24:15.430 --> 24:17.230
userinfo

24:17.230 --> 24:17.730
然后呢

24:17.730 --> 24:18.730
先给他传进去

24:18.730 --> 24:19.330
之后呢

24:19.330 --> 24:20.230
我们在里面

24:20.230 --> 24:22.530
再给他labellist

24:22.530 --> 24:23.330
ok

24:23.330 --> 24:25.530
那这样是不是labelids

24:25.530 --> 24:27.130
因为我们已经保存了

24:27.130 --> 24:28.030
一个labelids

24:28.030 --> 24:29.630
那这样我们本地是不是

24:29.630 --> 24:31.730
也就是可以实现一个同步

24:31.730 --> 24:32.130
什么呢

24:32.130 --> 24:34.330
我们直接再把这个labelids

24:34.330 --> 24:35.730
给做一个插入操作

24:35.730 --> 24:36.130
对吧

24:36.130 --> 24:37.130
但是刚才呢

24:37.130 --> 24:38.130
由于我们啊

24:38.130 --> 24:39.330
刚才做这个操作的时候

24:39.330 --> 24:40.730
其实是没有插入操作

24:40.730 --> 24:41.330
那此时

24:41.330 --> 24:42.430
其实他跟数据库

24:42.430 --> 24:43.630
是不同步的

24:43.630 --> 24:45.030
我们数据库现在有几条

24:45.030 --> 24:46.930
是不是应该是有三条纸

24:46.930 --> 24:48.630
但我们这里面才有两条纸

24:48.630 --> 24:49.630
为了同步打扮呢

24:49.630 --> 24:50.930
我把它干掉啊

24:50.930 --> 24:52.530
重新的来做一遍这个事

24:52.530 --> 24:54.030
然后回到我们手页面里面

24:54.030 --> 24:54.930
刷新一下

24:54.930 --> 24:55.630
刷新一下

24:55.630 --> 24:56.730
进入之后

24:56.730 --> 24:57.930
我们这个里面

24:57.930 --> 24:59.630
l 9558

24:59.630 --> 25:01.130
ok 123 QWE

25:01.130 --> 25:01.730
立即登入

25:03.130 --> 25:04.430
此时你登入完成之后

25:04.430 --> 25:05.630
这个labelids

25:05.630 --> 25:07.130
咱们看这个userinfo

25:07.130 --> 25:08.930
userinfo获取的最新纸

25:08.930 --> 25:10.230
这个labelids里面

25:10.230 --> 25:11.130
应该是三条纸

25:11.130 --> 25:11.730
对不对

25:11.730 --> 25:12.530
那这个三条纸

25:12.530 --> 25:14.430
其实就是跟远端同步了

25:14.430 --> 25:15.830
或者你看微差里面的数据

25:15.830 --> 25:16.830
也是可以的

25:16.830 --> 25:17.730
咱们从微差里面

25:17.730 --> 25:19.430
因为我做了一个副本考备嘛

25:19.430 --> 25:20.630
所以说你在哪一块看

25:20.630 --> 25:21.730
都是可以啊

25:21.730 --> 25:22.830
那我直接这里面

25:22.830 --> 25:24.530
labelids三条数据

25:24.530 --> 25:26.730
那此时我就回来做一个操作

25:26.730 --> 25:27.630
做什么操作呢

25:27.630 --> 25:29.330
我去再增加一下

25:29.330 --> 25:30.730
比如说把一个精彩直播

25:30.730 --> 25:32.130
给他做一个添加

25:32.130 --> 25:33.230
当我现在点击的时候

25:33.230 --> 25:34.030
他是没有用的

25:34.030 --> 25:34.830
因为什么呢

25:34.830 --> 25:35.430
我这个里面

25:35.430 --> 25:36.730
必须得是编辑状态

25:36.730 --> 25:37.130
对吧

25:37.130 --> 25:38.130
我点击精彩直播

25:38.130 --> 25:38.430
ok

25:38.430 --> 25:39.930
那我现在点击完成

25:39.930 --> 25:41.530
这里面提示修改成功了

25:41.730 --> 25:42.530
提示修改成功

25:42.530 --> 25:43.330
你会发现

25:43.330 --> 25:44.730
我这个you的info

25:44.730 --> 25:45.330
这个里面

25:45.330 --> 25:47.030
也会有做了一个什么事

25:47.030 --> 25:48.030
我直接的这里面

25:48.030 --> 25:49.130
零一二三

25:49.130 --> 25:50.530
是不是插入了一条

25:50.530 --> 25:53.030
并且我们本地保存的这个值

25:53.030 --> 25:55.130
是不是应该是也多了一条

25:55.130 --> 25:56.030
对吧

25:56.030 --> 25:58.130
那现在当我们修改完成之后呢

25:58.130 --> 25:59.830
这里面我们返回的时候

25:59.830 --> 26:02.130
应该是我们的选项卡里面

26:02.130 --> 26:03.730
有四项给我们做展示

26:03.730 --> 26:05.430
但是这个里面还是一堆

26:05.430 --> 26:06.030
是不是

26:06.030 --> 26:06.930
那所以说这个啊

26:06.930 --> 26:07.530
也不正常

26:07.530 --> 26:07.930
而且呢

26:07.930 --> 26:09.230
我们出手话的时候

26:09.230 --> 26:11.030
如果说用户是登录状态

26:11.030 --> 26:11.630
这个时候呢

26:11.630 --> 26:15.130
你就要展示用户的一个自定义的选项卡

26:15.130 --> 26:16.030
那所以说这个里面

26:16.030 --> 26:17.830
我们要回到index界面

26:17.830 --> 26:20.630
给他里面选项卡做一个调整

26:20.630 --> 26:21.330
怎么来做呢

26:21.330 --> 26:23.530
我们首先找到pages

26:23.530 --> 26:26.330
下面的我们的这个index界面

26:26.330 --> 26:27.030
ok

26:27.030 --> 26:28.130
打开它打开它

26:28.130 --> 26:29.630
原来我们这个label list

26:29.630 --> 26:30.530
是在哪获取的

26:30.530 --> 26:31.530
computed获取

26:31.530 --> 26:32.030
是不是

26:32.030 --> 26:33.030
但这种获取啊

26:33.030 --> 26:33.630
其实呢

26:33.630 --> 26:35.230
你直接就拿的死桃数据

26:35.230 --> 26:37.830
那这个里面完全都给他添加进去了

26:37.830 --> 26:38.130
对吧

26:38.130 --> 26:39.630
那这个呢

26:39.630 --> 26:41.030
不太符合我们的这个需求

26:41.030 --> 26:41.530
怎么办呢

26:41.530 --> 26:42.430
我们直接的

26:42.430 --> 26:43.130
不这样用吧

26:43.130 --> 26:44.430
我们直接改一下

26:44.430 --> 26:47.130
叫label list

26:47.130 --> 26:47.830
ok

26:47.830 --> 26:49.030
使用一个什么呢

26:49.030 --> 26:51.230
使用一个函数的形式

26:51.230 --> 26:53.130
那如果说我们这里判断一下

26:53.130 --> 26:57.030
if这次点user info有值

26:57.030 --> 26:58.130
那有值代表啥

26:58.130 --> 26:59.330
代表着你这个

26:59.330 --> 27:01.230
现在用户是已经登录的状态

27:01.230 --> 27:01.730
对吧

27:01.730 --> 27:02.330
那这个

27:02.330 --> 27:04.330
你要是登录的状态的话

27:04.330 --> 27:05.630
我这个里面啊

27:05.630 --> 27:06.830
这次点active

27:06.830 --> 27:07.730
我怕乱

27:07.730 --> 27:08.230
怎么办

27:08.230 --> 27:09.530
我把它变成零

27:09.530 --> 27:11.030
为啥要这么做啊

27:11.030 --> 27:11.630
因为什么呢

27:11.630 --> 27:12.930
因为我这个user info

27:12.930 --> 27:15.430
如果说你刚才在修改界面修改之后

27:15.430 --> 27:17.230
那这个里面这个active indice

27:17.230 --> 27:17.630
其实呢

27:17.630 --> 27:18.930
就应该给他归零

27:18.930 --> 27:20.830
否则让他重新进行一个旋载

27:20.830 --> 27:21.430
否则呢

27:21.430 --> 27:22.730
他就会乱对不对

27:22.730 --> 27:23.830
那这个indice值

27:23.830 --> 27:25.230
咱们一定要保证

27:25.230 --> 27:27.730
当你的这个选项卡里面修改了

27:27.730 --> 27:28.530
选项卡修改

27:28.530 --> 27:30.930
其实就是影响了我们用户的一个信息

27:30.930 --> 27:31.430
对不对

27:31.430 --> 27:33.030
你想说影响的用户信息

27:33.030 --> 27:34.230
比如说你在这个里面

27:34.230 --> 27:36.230
你把这个里面原来是四条纸

27:36.230 --> 27:37.930
那你给添加或减少一个

27:37.930 --> 27:39.830
如果说你带前面转转转转

27:39.830 --> 27:40.830
转到第五个

27:40.830 --> 27:43.230
那你这个里面再来这个调整的时候

27:43.230 --> 27:44.930
active indice值就不对了

27:44.930 --> 27:45.330
对吧

27:45.330 --> 27:48.030
所以说我们这里面先调整一下这个

27:48.030 --> 27:50.730
我们的这个c star active indice值

27:50.730 --> 27:53.930
那这个里面是他的这个第一个调整啊

27:53.930 --> 27:55.230
那第一个调整完成之后

27:55.230 --> 27:56.030
这是efo

27:56.030 --> 27:57.130
还有一个什么呢

27:57.130 --> 27:58.830
就是一个ls的条件啊

27:58.830 --> 28:01.030
咱们应该是这种efols

28:01.030 --> 28:03.330
如果说你用户有值的话

28:03.330 --> 28:05.430
那我直接的咱们先不考虑

28:05.430 --> 28:07.430
如果说你现在没有登入

28:07.430 --> 28:08.130
没有登入

28:08.130 --> 28:09.830
就return这次点到啦

28:11.030 --> 28:11.930
死到

28:11.930 --> 28:14.230
然后到了死到有一个什么state

28:14.230 --> 28:15.030
对不对

28:15.030 --> 28:15.630
然后呢

28:15.630 --> 28:17.430
我们把他的这个label list

28:17.430 --> 28:19.430
就给他正常返回就可以了

28:19.430 --> 28:21.630
也就是说你现在其实是没有登入啊

28:21.630 --> 28:22.630
咱们来看一下

28:22.630 --> 28:23.930
那现在返回的时候

28:23.930 --> 28:24.530
肯定不正常

28:24.530 --> 28:26.030
因为他现在登入状态

28:26.030 --> 28:26.530
对吧

28:26.530 --> 28:28.230
那我们就来调整一下登入

28:28.230 --> 28:29.830
那登入状态

28:29.830 --> 28:31.430
咱们要做点什么事呢

28:31.430 --> 28:32.230
首先啊

28:32.230 --> 28:35.130
我们这个这次点active indice

28:35.130 --> 28:36.830
我们先给他归零之后

28:36.830 --> 28:37.330
然后呢

28:37.330 --> 28:39.230
我给他做一个返回

28:39.230 --> 28:40.330
返回一个数组

28:40.330 --> 28:41.030
那这个数组呢

28:41.030 --> 28:42.630
我给他做一个拼接

28:42.630 --> 28:43.630
怎么拼接呢

28:43.630 --> 28:45.830
首先你全部肯定得返回对不对

28:45.830 --> 28:46.930
那你全部返回

28:46.930 --> 28:47.930
其实就是谁呢

28:47.930 --> 28:51.130
这次点到了死到点是data点

28:51.130 --> 28:52.930
一个什么label list的

28:52.930 --> 28:54.130
那我结取一下

28:54.130 --> 28:57.130
结取我们slash是什么0

28:57.130 --> 28:58.230
然后呢结取一个

28:58.230 --> 29:00.130
这样是不是第一个给结取出来了

29:00.130 --> 29:00.730
对吧

29:00.730 --> 29:02.330
结取出来第一个之后

29:02.330 --> 29:02.930
然后呢

29:02.930 --> 29:04.230
我再点点点

29:04.230 --> 29:04.930
再点点点

29:04.930 --> 29:05.730
咱们干什么

29:05.830 --> 29:08.030
我通过这点死到点死的点

29:08.030 --> 29:08.830
label list的

29:08.830 --> 29:10.230
我做一个filter

29:10.230 --> 29:11.630
也就是说判断一下

29:13.430 --> 29:14.030
filter

29:15.430 --> 29:15.830
filter

29:15.830 --> 29:16.830
我们怎么判断呢

29:16.830 --> 29:18.430
这里面有一个item

29:18.430 --> 29:19.230
那这个item

29:19.230 --> 29:21.530
就是我们label list的的每一项

29:21.530 --> 29:22.430
那我看一下

29:22.430 --> 29:25.030
这一次点u字info点

29:25.030 --> 29:25.630
一个什么呢

29:25.630 --> 29:28.730
我们这个label ids

29:28.730 --> 29:30.030
然后他点

29:31.030 --> 29:33.030
是不是包含

29:33.830 --> 29:35.030
那这个inc loose

29:35.030 --> 29:35.730
包含什么呢

29:35.730 --> 29:38.330
包含我们的这个item点

29:38.330 --> 29:39.530
下好线id

29:39.530 --> 29:40.430
是不是就可以了

29:40.430 --> 29:40.930
对吧

29:40.930 --> 29:42.730
那这样就实现了一个什么

29:42.730 --> 29:43.930
实现了一个我们渲染

29:43.930 --> 29:45.830
然后直接的这样

29:45.830 --> 29:47.230
做了一个

29:47.230 --> 29:49.630
整个的一个过滤的这样一个过程

29:49.630 --> 29:49.830
好的

29:49.830 --> 29:51.630
那我们再来看一下效果

29:51.630 --> 29:53.930
我们来实现一下整个流程

29:53.930 --> 29:55.030
初始化刷新的时候

29:55.030 --> 29:55.730
这个里面呢

29:55.730 --> 29:58.330
他是按着我们用户的这个

29:58.330 --> 29:59.730
选项卡的一个

29:59.730 --> 30:01.530
我们的这个定义啊

30:01.530 --> 30:03.130
来给我们做一个展示

30:03.130 --> 30:05.030
也就是说当前只有四项

30:05.030 --> 30:06.430
那如果说我在这个里面

30:06.430 --> 30:07.130
我调整一下

30:07.130 --> 30:08.330
比如说这个每日一题

30:08.330 --> 30:10.130
我给他做一个减少啊

30:10.130 --> 30:12.330
这里面编辑为了减少一个

30:12.330 --> 30:14.130
然后这里面选择完成

30:14.130 --> 30:14.730
那完成之后

30:14.730 --> 30:16.330
你会发现突然间包错了

30:16.330 --> 30:17.930
包错原因是啥呢

30:17.930 --> 30:20.030
这个里面我们可以查看一下

30:20.030 --> 30:21.530
这个爆错的原因

30:21.530 --> 30:23.330
我们到这个components下面

30:23.330 --> 30:24.430
因为他这个爆错

30:24.430 --> 30:26.230
应该是给我们提示一个什么

30:26.230 --> 30:28.330
在这个list item里面爆错

30:28.330 --> 30:29.930
那我们直接的这样

30:31.030 --> 30:33.030
我们回到这个list item里面

30:33.030 --> 30:33.630
在这个里面

30:33.630 --> 30:35.730
其实你看这个选项卡是正常的

30:35.730 --> 30:36.330
但是呢

30:36.330 --> 30:39.330
我们这个里面应该是数据不正确

30:39.330 --> 30:41.730
找到我们的这个list item

30:41.730 --> 30:42.330
然后呢

30:42.330 --> 30:43.730
找到他的副级啊

30:43.730 --> 30:45.730
找到的副级article list

30:45.730 --> 30:47.330
article list的里面

30:47.330 --> 30:49.330
现在这个数据十四条

30:49.330 --> 30:50.530
十四条肯定不对

30:50.530 --> 30:51.030
对吧

30:51.030 --> 30:52.330
因为我们初始化的时候

30:52.330 --> 30:53.730
现在还没有下辣加载的

30:53.730 --> 30:55.230
他怎么可能是十四条

30:55.230 --> 30:56.830
那这个里面原因是因为啥呢

30:56.830 --> 30:57.930
其实这个里面原因啊

30:57.930 --> 30:58.830
就是因为

30:58.830 --> 31:00.930
我们应该是在article list的里面

31:00.930 --> 31:01.690
有监听

31:01.690 --> 31:02.590
label list的

31:02.590 --> 31:03.590
因为这个label list的

31:03.590 --> 31:04.890
现在是不是被我们

31:04.890 --> 31:06.090
刚才做了一个调整

31:06.090 --> 31:07.490
刚才在修改的时候

31:07.490 --> 31:09.290
所以说我们找到我们的这个

31:09.290 --> 31:11.690
组件里面来进行一个查看

31:11.690 --> 31:14.390
components下面这里面有一个article list的

31:14.390 --> 31:15.790
article list的里面

31:15.790 --> 31:18.090
咱们找到ok在这里

31:18.090 --> 31:19.290
咱们初始化的时候

31:19.290 --> 31:20.490
其实在这个里面使用了

31:20.490 --> 31:20.990
并且呢

31:20.990 --> 31:21.890
我在warch的时候

31:21.890 --> 31:25.290
也有对这个label list的进行一个什么呢

31:25.290 --> 31:27.190
我们的这个进行一个调用啊

31:27.190 --> 31:28.990
也就是说我更改label list的

31:28.990 --> 31:29.590
那这时候

31:29.590 --> 31:32.490
我直接的就会对他有一个调用

31:32.490 --> 31:34.790
使用了这次点getarticle list的

31:34.790 --> 31:36.190
那这时候如果说

31:36.190 --> 31:36.990
你有更改

31:36.990 --> 31:38.290
然后直接调用的时候

31:38.290 --> 31:40.690
那这时候是不是就

31:40.690 --> 31:41.590
他会有一个什么

31:41.590 --> 31:43.490
再次调用getarticle list的

31:43.490 --> 31:45.790
那就对当前所谓值得有了一个追加操作

31:45.790 --> 31:46.390
对吧

31:46.390 --> 31:47.490
那其实解决这个啊

31:47.490 --> 31:48.490
是非常简单的

31:48.490 --> 31:49.390
我们怎么办呢

31:49.390 --> 31:51.590
因为这个里面抱错的具体原因

31:51.590 --> 31:53.890
其实就是我们这个article data

31:53.890 --> 31:55.490
和这个load data

31:55.490 --> 31:56.290
不正确的原因

31:56.290 --> 31:56.490
对吧

31:56.490 --> 31:57.190
原来有值

31:57.190 --> 31:57.490
对吧

31:57.490 --> 31:58.490
所以说我们怎么办呢

31:58.490 --> 32:00.390
我们可以给他这个值

32:00.390 --> 32:02.190
如果说你已经更改了

32:02.190 --> 32:03.990
那我直接的article data

32:03.990 --> 32:05.390
我从前给他复制一下

32:05.390 --> 32:05.890
就可以了

32:05.890 --> 32:06.690
对吧

32:06.690 --> 32:07.090
然后呢

32:07.090 --> 32:09.090
我把这个Z4.loader data

32:09.090 --> 32:10.490
也给他做一个什么

32:10.490 --> 32:12.090
清空的复制操作

32:13.690 --> 32:14.090
ok

32:14.090 --> 32:15.390
那这样就保证了一个什么呢

32:15.390 --> 32:16.890
当你label list的修改了

32:16.890 --> 32:18.490
也就是说用户调整了

32:18.490 --> 32:20.790
他的这个自定义现象卡的操作

32:20.790 --> 32:21.790
那这时候呢

32:21.790 --> 32:23.990
处发了这个label list的更改之后

32:23.990 --> 32:25.090
他去调用的时候

32:25.090 --> 32:25.990
调用的时候

32:25.990 --> 32:27.790
我把原来的他保存

32:27.790 --> 32:29.590
当前的这一

32:29.590 --> 32:30.690
这一个选项卡

32:30.690 --> 32:32.490
这一系列的整个的这个数据

32:32.490 --> 32:33.390
我给他清空

32:33.390 --> 32:34.490
重新让他进行数据

32:34.490 --> 32:36.290
一个请求就可以了啊

32:36.290 --> 32:36.990
咱们来试一下

32:36.990 --> 32:37.990
看是否可行啊

32:39.490 --> 32:40.890
console这里面有抱错啊

32:40.890 --> 32:41.890
抱错是刚才的

32:41.890 --> 32:42.990
咱们给他干掉

32:42.990 --> 32:43.490
然后呢

32:43.490 --> 32:46.290
这里面我点击编辑编辑的时候

32:46.290 --> 32:47.190
取消一个

32:47.190 --> 32:48.390
然后完成

32:48.390 --> 32:48.890
完成之后

32:48.890 --> 32:49.590
你会发现啊

32:49.590 --> 32:50.590
这个时候就不抱错了

32:50.590 --> 32:50.990
对吧

32:50.990 --> 32:51.990
我再点击编辑

32:51.990 --> 32:52.690
再干掉一个

32:52.690 --> 32:53.290
这时候呢

32:53.290 --> 32:54.890
只有一个前团开发

32:54.890 --> 32:55.690
当我回退之后

32:55.690 --> 32:57.890
你会发现全部前端开发

32:57.890 --> 32:58.390
这个里面

32:58.390 --> 33:00.190
是不是这两项就在显示

33:00.190 --> 33:01.090
其他的也没有了

33:01.090 --> 33:01.590
对吧

33:01.590 --> 33:01.990
这个呢

33:01.990 --> 33:04.490
就是我们整个的一个实现流程

33:04.490 --> 33:06.390
那从上几颗到这几颗呢

33:06.390 --> 33:08.490
我们通过界面的结构大件

33:08.490 --> 33:09.290
包括最后

33:09.290 --> 33:10.790
我们的一个逻辑处理

33:10.790 --> 33:11.290
基本上

33:11.290 --> 33:13.590
我们的这个标签管理界面的内容

33:13.590 --> 33:14.690
就差不多了

33:14.690 --> 33:16.190
那么接下来的课程里面呢

33:16.190 --> 33:17.990
我们就开始实现

33:17.990 --> 33:21.590
文章详情里面的这个相关内容了

33:21.590 --> 33:21.890
好的

33:21.890 --> 33:23.790
那我们这几颗就先到这里

