WEBVTT

00:01.460 --> 00:06.960
各位同学 大家好 这节课我们继续用户登录代码部分的一个学习

00:06.960 --> 00:12.960
那么本节课我们来实现一下通过帐户名以及密码的形式进行一个登录的操作

00:12.960 --> 00:18.960
那我们要怎么做呢?首先我们要进行一个前端的数据的整理收集

00:18.960 --> 00:23.960
也就是说把我们这个验证之后的这个表单里面的帐户名跟密码呢

00:23.960 --> 00:27.460
要给做一次像后端发送的这样一个过程

00:27.460 --> 00:30.460
然后之后呢我们后端接受到值之后

00:30.460 --> 00:35.460
也就是说在云寒书里面进行我们的这个数据库的一个查询

00:35.460 --> 00:39.460
到我们查询到指定的用户之后返回给前端

00:39.460 --> 00:47.460
前端呢这个里面再做一个存储之后呢再返回我们跳转到用户界面之前的那一个界面

00:47.460 --> 00:50.460
就ok了 这个呢就是它的一个基本时间流程

00:50.460 --> 00:55.460
说起来挺简单 但是里面是有一些比较复杂的工作要做的

00:55.460 --> 00:58.460
那咱们接下来呢就一点点的来实现一下

00:58.460 --> 01:03.460
首先回到我们的这个代码部分 这个呢是我们上一课完成的这个代码

01:03.460 --> 01:10.460
那在这个里面其实我们现在已经能拿到我们这个UniFone表单验证之后的一个结果了

01:10.460 --> 01:15.460
我们来看一下 在这个里面打印一下我们的这个RES

01:15.460 --> 01:19.460
来看一下它的这个返回结果 我们到这个里面

01:19.460 --> 01:24.460
找到这个里面进入之后 我们在这个里面随便输入啊

01:24.460 --> 01:29.460
123QWE 然后呢我直接在这个里面123点击立即登录

01:29.460 --> 01:34.460
立即登录之后你会发现这个里面是什么 拿到一个NAME

01:34.460 --> 01:37.460
但是呢我们没有拿到这个有点NAME啊 这个代码啊

01:37.460 --> 01:42.460
我们要调整一下 调整哪一个呢 其实上几课这个里面啊

01:42.460 --> 01:48.460
我这一块是没有调整的 也就是说这个NAME应该是Password的啊

01:48.460 --> 01:53.460
好的 在调整完了之后 我们再来做一下这个里面123QWE

01:53.460 --> 01:58.460
然后呢我这里面给它一个123 你会发现此时已经拿到这个

01:58.460 --> 02:02.460
我们的整个的信息了 但是拿到信息这里面有一个问题啊

02:02.460 --> 02:06.460
比如说这个是我现在都有纸的情况下 如果说我没有纸的情况下

02:06.460 --> 02:10.460
你看着啊 我把这个纸干掉了 当我在点击登录

02:10.460 --> 02:15.460
你会发现啊这个Password的里面还是有一套纸 那这个是因为啥呢

02:15.460 --> 02:18.460
这个是因为啊 其实这UniFone里面有一个问题

02:18.460 --> 02:22.460
就是说当你清空之后 它这个纸不能完完整整的清空掉

02:22.460 --> 02:27.460
那这个时候我们要向后端提交的 可能呢这个里面就会爆错了

02:27.460 --> 02:30.460
怎么来处理这个事呢 其实也非常简单啊

02:30.460 --> 02:34.460
我们因为啊 但是啊 跟同学们说一下 上面这个就不会

02:34.460 --> 02:37.460
为什么说上面这个不会呢 因为这个上面这个啊

02:37.460 --> 02:41.460
我们已经做了其他验证 也就是说有自己的一个验证规则函数

02:41.460 --> 02:45.460
那此时如果说你这个不传的话 那它这个里面会给你提示一个

02:45.460 --> 02:50.460
用名长度不正确 那这个也相当于把这个问题给搞定了

02:50.460 --> 02:55.460
但是底下这个 因为我们只有一个Request的 也就是说必填像的一个验证

02:55.460 --> 02:59.460
这个里面就会产生这种问题啊 产生这种问题 那我们就解决一下

02:59.460 --> 03:03.460
原来我们用的是什么呢 就是这种Input的形式啊

03:03.460 --> 03:06.460
我们可以给它改一下 改成什么形式呢

03:06.460 --> 03:12.460
UniFone可以结合UniEZInput这种形式来实现啊

03:12.460 --> 03:15.460
我们在这个里面来写一下 如果说同学们不知道了

03:15.460 --> 03:18.460
怎么办呢 我们可以来下载一下 也是可以的

03:18.460 --> 03:23.460
打开这个工具 然后到这个查件安装里面

03:23.460 --> 03:28.460
我们到市场 到市场里面 这个里面就有一个什么呢

03:28.460 --> 03:32.460
我们先找一下叫UniEZInput

03:32.460 --> 03:35.460
OK 回车啊 试一下 找一下

03:35.460 --> 03:40.460
这个里面UniEZInput 我们到全部里面进行查找啊

03:41.460 --> 03:45.460
在全部里面复制过去之后进行一个搜索 OK

03:45.460 --> 03:50.460
UniEZInput的增强输入框 它这个增强输入框指的是什么意思呢

03:50.460 --> 03:54.460
就是你在输入的时候 这后面呢 会有一些小的Icon图标

03:54.460 --> 04:00.460
一般呢 它会去结合这个UniFoneZ来进行一个使用啊

04:00.460 --> 04:04.460
然后呢 这个我们其实下载方式呢 和我们这个UniFoneZ

04:04.460 --> 04:08.460
是完全一致的 那我们直接的就是在这个

04:08.460 --> 04:12.460
上面这一部分啊 点击使用HBO的查导入项目

04:12.460 --> 04:15.460
直接打开HBO的查 如果你已经 这个里面啊

04:15.460 --> 04:19.460
如果说你已经有了的话 那我们直接这部队啊

04:19.460 --> 04:22.460
重新来一下 我们再重新的导入一下

04:22.460 --> 04:26.460
这个里面啊 使用HBO的查导入查件啊 点击这个

04:26.460 --> 04:29.460
点击这个 这个里面指定工程 指定工程之后

04:29.460 --> 04:32.460
那这里面 如果说你已经安装过 那这个里面

04:32.460 --> 04:35.460
会有一个对比合并啊 因为我这里面已经安装过了

04:35.460 --> 04:38.460
我直接再给它进行一个覆盖 就可以了

04:38.460 --> 04:41.460
之后呢 我就可以进行使用了 使用方式和我们

04:41.460 --> 04:44.460
隐铺的使用是完全一致的 也就是说我们隐铺的

04:44.460 --> 04:47.460
有什么 这个里面啊 就有什么就ok了

04:47.460 --> 04:50.460
但是呢 它会把这个bug啊 给合理的处理掉

04:50.460 --> 04:54.460
我们把这个原来的这些放在隐铺的上的内容

04:54.460 --> 04:56.460
我们给它复制过来啊

04:57.460 --> 05:00.460
之后呢 我们把这个隐铺的就干掉 好的

05:00.460 --> 05:02.460
回到我们的这个代码里 你看一下

05:02.460 --> 05:05.460
经过调整之后啊 这个呢 它就长成这样子啊

05:05.460 --> 05:07.460
长成这样子 我们先不管它样式啊

05:07.460 --> 05:10.460
先来考虑一个问题 就是说 刚才的这个问题

05:10.460 --> 05:13.460
会有没有 我们这里面输入123QWE

05:13.460 --> 05:16.460
这里面有一个123 然后右面还有个小眼睛 对吧

05:16.460 --> 05:20.460
我们一点击这个灯 现在有指 如果说我清空之后

05:20.460 --> 05:23.460
再次进行点击的时候 你会发现

05:23.460 --> 05:25.460
此时刚才那个问题是不是就没有了

05:25.460 --> 05:28.460
也就是说我们调整一下 将原生的隐铺的

05:28.460 --> 05:31.460
换成有你隐铺的 就ok了

05:32.460 --> 05:35.460
然后然后这个怎么办呢 我们这个里面

05:35.460 --> 05:38.460
要把它的这个样式做一个简单的处理

05:38.460 --> 05:42.460
样式做啥处理呢 首先我们不想要这个边框 对吧

05:42.460 --> 05:47.460
那这个边框打扮呢 其实这里面有一些这个配置啊

05:47.460 --> 05:51.460
我们可以找一下输入框 带这个左右图标的

05:51.460 --> 05:55.460
然后这里面输入框金用的 还有这个密码框

05:55.460 --> 05:58.460
多韩文本取消边框 这里面有一个就是

05:58.460 --> 06:01.460
我们不使用边框 那这个我们直接放在这个

06:01.460 --> 06:04.460
UniEathInput这里面给它一个 false ok

06:04.460 --> 06:08.460
那此时呢 这个边框就应该干掉了 对吧

06:08.460 --> 06:10.460
干掉边框之后 我们再处理第二个问题

06:10.460 --> 06:14.460
就是简单的把它的这个样式 给它进行一个调整

06:14.460 --> 06:17.460
首先我们调整样式 调整哪一个呢 其实就是

06:17.460 --> 06:20.460
调整一个它的这个拍定值就ok了

06:20.460 --> 06:24.460
是哪一个的拍定值 就是我们的这个UniEathIncontent

06:24.460 --> 06:28.460
UniEathIncontentInput 我们把它的这个拍定LIFT

06:28.460 --> 06:31.460
给它调过去 ok 这样是不是就可以了对吧

06:31.460 --> 06:35.460
那我们复制它 复制它到我们的这个

06:35.460 --> 06:38.460
CSS文件里面啊 找到login

06:38.460 --> 06:41.460
login下面的CSS

06:41.460 --> 06:45.460
找到这个SARS之后 我在这里面同样的使用

06:45.460 --> 06:48.460
deep 然后呢 点 ok

06:48.460 --> 06:50.460
UniEathInput contentInput

06:50.460 --> 06:53.460
我们给它一个拍定LIFT

06:53.460 --> 06:56.460
调整一个零 来 我们看一下效果

06:56.460 --> 06:59.460
效果是不是能过来 但是你会发现怎么办

06:59.460 --> 07:01.460
我们这个拍定LIFT零是不是可以了

07:01.460 --> 07:03.460
也就是说现在上下是不是对齐了

07:03.460 --> 07:05.460
然后咱们刷新一下界面看行不行

07:05.460 --> 07:08.460
你会发现刷新界面之后 ok 这个干不掉

07:08.460 --> 07:10.460
那怎么办呢 很坚强 是不是

07:10.460 --> 07:12.460
坚强也不行啊 所以说咱们要处理一下

07:12.460 --> 07:14.460
咱们这个UniEathIncontentInput不够

07:14.460 --> 07:15.460
UniEathIncontentInput不够怎么办

07:15.460 --> 07:17.460
我们就使用SARS手解

07:17.460 --> 07:19.460
TANHARMPoRTNT

07:19.460 --> 07:20.460
也就是说TANHARIncontent

07:20.460 --> 07:22.460
这样是不是就解决了 对吧

07:22.460 --> 07:25.460
这个是一个简单的小问题的修复

07:25.460 --> 07:27.460
接下来如果说我们都有了之后

07:27.460 --> 07:30.460
那这时候我们就可以正常的进行一个

07:30.460 --> 07:32.460
我们数据的收集完成之后

07:32.460 --> 07:36.460
进行发送给云翰叔这样一个操作了

07:36.460 --> 07:38.460
那我们就来写一下

07:38.460 --> 07:41.460
回到我们的LoganView里面

07:41.460 --> 07:42.460
回到LoganView里面

07:42.460 --> 07:44.460
这时候呢 这个res此时

07:44.460 --> 07:45.460
如果说得不抱错的话

07:45.460 --> 07:48.460
那它一定是要往下走 对不对

07:48.460 --> 07:51.460
那我这时候开始进行一个真实的信息发动

07:51.460 --> 07:56.460
那这个里面就写一下发送数据到后端

07:56.460 --> 07:58.460
OK 发送数据到后端

07:58.460 --> 07:59.460
我们都要发动什么呢

07:59.460 --> 08:00.460
首先来想

08:00.460 --> 08:02.460
我们得告诉后端

08:02.460 --> 08:03.460
这次呢

08:03.460 --> 08:06.460
我们是用户名和密码登录

08:06.460 --> 08:07.460
还是说电话

08:07.460 --> 08:09.460
包括我们的这个验证码登录

08:09.460 --> 08:10.460
那所以说这个里面

08:10.460 --> 08:11.460
我们就需要一个什么呢

08:11.460 --> 08:13.460
把这个Type给它传过去

08:13.460 --> 08:14.460
那也就是说我们这里面

08:14.460 --> 08:17.460
订了一个SendDate对吧

08:17.460 --> 08:20.460
我们或者是Send的一个UserInfo

08:21.460 --> 08:24.460
OK 你这个Send的UserInfo里面

08:24.460 --> 08:25.460
你要给它传直

08:25.460 --> 08:27.460
传直呢 首先是什么呢

08:27.460 --> 08:28.460
点点点res

08:28.460 --> 08:30.460
把这个res给做一个展开

08:30.460 --> 08:31.460
之后呢

08:31.460 --> 08:33.460
我除了这个res之外

08:33.460 --> 08:35.460
我还要给它发一个Type

08:35.460 --> 08:36.460
就是把当前

08:36.460 --> 08:38.460
我们的这个定义好的这个Type类型

08:38.460 --> 08:40.460
给后端传过去就可以了

08:40.460 --> 08:41.460
然后后端

08:41.460 --> 08:42.460
根据这个Type类型指

08:42.460 --> 08:43.460
它做一个判断

08:43.460 --> 08:45.460
然后确定一下

08:45.460 --> 08:47.460
你当前是这个

08:47.460 --> 08:48.460
帐户名和密码登录

08:48.460 --> 08:49.460
还是说我们的这个

08:49.460 --> 08:50.460
第2号码

08:50.460 --> 08:52.460
跟这个验证码的一个登录

08:52.460 --> 08:53.460
就是这样一个操作

08:53.460 --> 08:55.460
好的 那在这个里面

08:55.460 --> 08:57.460
我们就定义一下

08:57.460 --> 08:58.460
Async

08:58.460 --> 08:59.460
因为它有个一部操作

08:59.460 --> 09:01.460
这里面使用一个Async

09:01.460 --> 09:03.460
我们这里面写一下

09:04.460 --> 09:05.460
给大家写一个注释

09:05.460 --> 09:07.460
发送数据

09:07.460 --> 09:09.460
到后端

09:09.460 --> 09:10.460
OK 在这里面

09:10.460 --> 09:11.460
我们做什么

09:11.460 --> 09:12.460
首先呢

09:12.460 --> 09:14.460
我们要接受后端的一个返回值

09:14.460 --> 09:15.460
所以说

09:15.460 --> 09:17.460
这里面先定一个UserInfo

09:18.460 --> 09:19.460
等于一个

09:23.460 --> 09:24.460
然后呢

09:24.460 --> 09:25.460
我们这个里面

09:25.460 --> 09:26.460
因为要发送嘛

09:26.460 --> 09:28.460
我们这里面就写一个UserLogin

09:28.460 --> 09:29.460
这是注册 对吧

09:29.460 --> 09:30.460
那注册

09:30.460 --> 09:31.460
这个里面传一个data

09:31.460 --> 09:33.460
就把我们接收的data

09:33.460 --> 09:34.460
给它传过去

09:34.460 --> 09:36.460
这里面我们再把这个行参

09:36.460 --> 09:37.460
也就是说

09:37.460 --> 09:38.460
SendUserInfo

09:38.460 --> 09:39.460
在这里面定的行参

09:39.460 --> 09:40.460
给它拿过来

09:40.460 --> 09:41.460
之后呢

09:41.460 --> 09:42.460
我这里面就打印一下

09:42.460 --> 09:44.460
什么的后端的这个返回值

09:44.460 --> 09:45.460
UserInfo

09:45.460 --> 09:46.460
就OK了

09:46.460 --> 09:47.460
返回值怎么看呢

09:47.460 --> 09:48.460
这个时候呢

09:48.460 --> 09:49.460
此时我们要一步一步的

09:49.460 --> 09:50.460
来完成了

09:50.460 --> 09:51.460
首先

09:51.460 --> 09:52.460
我们这个里面UserLogin

09:52.460 --> 09:53.460
肯定是没有的

09:53.460 --> 09:54.460
对吧

09:54.460 --> 09:55.460
那我们回到阿迦克斯

09:55.460 --> 09:56.460
到阿迦克斯里面

09:56.460 --> 09:58.460
因为这个属于用Home我块

09:58.460 --> 10:00.460
然后刚才我们做的这个是

10:00.460 --> 10:02.460
之前做的这些都是

10:02.460 --> 10:03.460
Home我块的

10:03.460 --> 10:04.460
那我这里面

10:04.460 --> 10:05.460
重新定义一个

10:05.460 --> 10:07.460
我这里面新建一个

10:07.460 --> 10:08.460
自定义文件

10:08.460 --> 10:09.460
这个叫什么呢

10:09.460 --> 10:11.460
我们叫UserInfo

10:11.460 --> 10:12.460
然后呢

10:12.460 --> 10:14.460
它的里面UserInterface

10:16.460 --> 10:17.460
也就是说

10:17.460 --> 10:19.460
跟用户相关的一些

10:19.460 --> 10:20.460
接口文件

10:20.460 --> 10:21.460
那这里面点

10:21.460 --> 10:22.460
JS文件

10:22.460 --> 10:23.460
好的你定义好之后呢

10:23.460 --> 10:25.460
其实它的这个结构

10:25.460 --> 10:26.460
跟我们的这个

10:26.460 --> 10:28.460
UserHomeInterface

10:28.460 --> 10:29.460
比较相像

10:29.460 --> 10:31.460
那我把这个就给它干掉

10:31.460 --> 10:32.460
我们只保留一个

10:32.460 --> 10:33.460
来写一下

10:33.460 --> 10:34.460
把它拿掉

10:34.460 --> 10:35.460
这个呢

10:35.460 --> 10:36.460
叫是用户登录

10:36.460 --> 10:37.460
给同学们写一下

10:37.460 --> 10:39.460
注释用户登录

10:39.460 --> 10:40.460
OK

10:40.460 --> 10:42.460
登录

10:42.460 --> 10:43.460
我们定义的叫什么

10:43.460 --> 10:44.460
是不是叫UserLogin

10:44.460 --> 10:45.460
对吧

10:45.460 --> 10:46.460
所以说我这里面

10:46.460 --> 10:48.460
就写一下UserLogin

10:48.460 --> 10:49.460
OK

10:49.460 --> 10:50.460
它这个名字

10:50.460 --> 10:51.460
和这个是完全一致的

10:51.460 --> 10:52.460
好的

10:52.460 --> 10:53.460
那这个就定义完了

10:53.460 --> 10:54.460
定义完成之后

10:54.460 --> 10:55.460
把这个等号干掉

10:55.460 --> 10:56.460
定义完成之后

10:56.460 --> 10:57.460
其实我现在

10:57.460 --> 10:59.460
前台这一块

10:59.460 --> 11:00.460
也就是说

11:00.460 --> 11:01.460
登录界面

11:01.460 --> 11:02.460
现在是能访问到什么

11:02.460 --> 11:04.460
我们的这个方法呢

11:04.460 --> 11:05.460
那这个方法呢

11:05.460 --> 11:07.460
去调用一个云寒书

11:07.460 --> 11:08.460
我现在就指定

11:08.460 --> 11:09.460
这个云寒书

11:09.460 --> 11:10.460
是不是就可以了

11:10.460 --> 11:11.460
如何来指定呢

11:11.460 --> 11:12.460
再回到我们的

11:12.460 --> 11:13.460
Uniclode function

11:13.460 --> 11:14.460
因为所有东西

11:14.460 --> 11:15.460
都是我们自己来搞

11:15.460 --> 11:16.460
所以说这个呢

11:16.460 --> 11:17.460
我们要明确一下

11:17.460 --> 11:19.460
写完前端写后端

11:19.460 --> 11:20.460
那这个里面

11:20.460 --> 11:22.460
User下滑线Login

11:22.460 --> 11:23.460
OK

11:23.460 --> 11:26.460
这里面创建一个云寒书

11:26.460 --> 11:27.460
创建好了之后

11:27.460 --> 11:28.460
这个呢

11:28.460 --> 11:29.460
我们一定要进行

11:29.460 --> 11:30.460
这个数据库的

11:30.460 --> 11:31.460
一个查询对不对

11:31.460 --> 11:32.460
所以说呢

11:32.460 --> 11:33.460
那我在这个里面

11:33.460 --> 11:35.460
要有一个数据库的引用

11:35.460 --> 11:36.460
也就是说

11:36.460 --> 11:37.460
在这个最外面

11:37.460 --> 11:39.460
有一个获取数据库的

11:39.460 --> 11:41.460
这样一个操作啊

11:41.460 --> 11:43.460
获取

11:43.460 --> 11:45.460
数据库的一个引用啊

11:45.460 --> 11:47.460
因为这个已经写好多了

11:47.460 --> 11:48.460
我们怎么做

11:48.460 --> 11:50.460
Consta一个db

11:50.460 --> 11:54.460
等于Uniclode.database

11:54.460 --> 11:55.460
对吧

11:55.460 --> 11:56.460
拿到之后

11:56.460 --> 11:57.460
那我们这里面

11:57.460 --> 11:58.460
第一步

11:58.460 --> 11:59.460
我们要做一个啥事呢

11:59.460 --> 12:00.460
首先我要把

12:00.460 --> 12:02.460
前端接收的值

12:02.460 --> 12:03.460
都给获取到

12:03.460 --> 12:05.460
那前端都给你发送什么了

12:05.460 --> 12:06.460
首先

12:06.460 --> 12:07.460
肯定有一个Login name

12:07.460 --> 12:08.460
对不对

12:08.460 --> 12:09.460
Password

12:09.460 --> 12:10.460
之后呢

12:10.460 --> 12:11.460
还会有一个fn

12:11.460 --> 12:12.460
也就是说

12:12.460 --> 12:13.460
手机

12:13.460 --> 12:14.460
并且呢

12:14.460 --> 12:15.460
它会有一个tab例行值

12:15.460 --> 12:16.460
那这些呢

12:16.460 --> 12:17.460
就是我们基本

12:17.460 --> 12:19.460
要接收的一些信息

12:19.460 --> 12:20.460
那这里面

12:20.460 --> 12:21.460
有一个event

12:21.460 --> 12:22.460
从event里面

12:22.460 --> 12:23.460
进行获取

12:23.460 --> 12:25.460
获取到之后

12:25.460 --> 12:26.460
那我现在就可以

12:26.460 --> 12:27.460
进行一个

12:27.460 --> 12:28.460
数据库的

12:28.460 --> 12:29.460
一个查询了

12:29.460 --> 12:30.460
那我这里面写一个

12:30.460 --> 12:32.460
Consta

12:32.460 --> 12:33.460
等于

12:33.460 --> 12:36.460
db.collection

12:36.460 --> 12:38.460
然后我们在这个里面

12:38.460 --> 12:39.460
collection查哪个表

12:39.460 --> 12:40.460
其实我们这里面

12:40.460 --> 12:41.460
是要查这个

12:41.460 --> 12:42.460
有点表

12:42.460 --> 12:43.460
那查有点表

12:43.460 --> 12:44.460
我们这里面

12:44.460 --> 12:45.460
使用一个聚合的

12:45.460 --> 12:46.460
形式

12:46.460 --> 12:47.460
点aggrate

12:47.460 --> 12:48.460
然后呢

12:48.460 --> 12:49.460
我们在这个里面

12:49.460 --> 12:51.460
使用点match

12:51.460 --> 12:52.460
ok

12:52.460 --> 12:53.460
之后呢

12:53.460 --> 12:54.460
最后给它做一个返回

12:54.460 --> 12:55.460
那我们一次的

12:55.460 --> 12:57.460
来给它填充一些信息

12:57.460 --> 12:58.460
首先呢

12:58.460 --> 12:59.460
这个match里面

12:59.460 --> 13:00.460
它接收的是一个啥呢

13:00.460 --> 13:01.460
就是当前的

13:01.460 --> 13:02.460
我们一个

13:02.460 --> 13:03.460
查询的关键字

13:03.460 --> 13:04.460
那我这里面

13:04.460 --> 13:05.460
要判断一下

13:05.460 --> 13:06.460
如果说

13:06.460 --> 13:07.460
我们现在

13:07.460 --> 13:08.460
接收的这个type

13:08.460 --> 13:10.460
等于

13:10.460 --> 13:11.460
account

13:11.460 --> 13:12.460
也就是说

13:12.460 --> 13:13.460
我们是使用

13:13.460 --> 13:14.460
帐户名的形式

13:14.460 --> 13:15.460
来进行登注的话

13:15.460 --> 13:16.460
那我这个里面

13:16.460 --> 13:17.460
查询的时候

13:17.460 --> 13:18.460
我就要把这个

13:18.460 --> 13:19.460
log name

13:19.460 --> 13:20.460
以及我们的这个

13:20.460 --> 13:21.460
password

13:21.460 --> 13:23.460
给它进行一个填充

13:23.460 --> 13:24.460
让它使用

13:24.460 --> 13:25.460
这两个条件

13:25.460 --> 13:26.460
来进行查询

13:26.460 --> 13:27.460
否则呢

13:27.460 --> 13:28.460
那它就使用

13:28.460 --> 13:29.460
这种f

13:29.460 --> 13:30.460
也就是说

13:30.460 --> 13:31.460
电话号码的形式

13:31.460 --> 13:32.460
来进行一个

13:32.460 --> 13:33.460
查询就ok了

13:33.460 --> 13:34.460
最后呢

13:34.460 --> 13:35.460
如果说

13:35.460 --> 13:36.460
它有这个返回

13:36.460 --> 13:37.460
结果之后

13:37.460 --> 13:38.460
要判断一下

13:38.460 --> 13:39.460
因为查询

13:39.460 --> 13:40.460
有时候

13:40.460 --> 13:41.460
你前端登录错了

13:41.460 --> 13:42.460
它是查不到的

13:42.460 --> 13:43.460
对不对

13:43.460 --> 13:44.460
所以说呢

13:44.460 --> 13:45.460
我们在这个里面

13:45.460 --> 13:46.460
先提前扣的0

13:46.460 --> 13:48.460
我们先不给

13:48.460 --> 13:49.460
前端返回指

13:49.460 --> 13:50.460
我们先来做一个测试

13:50.460 --> 13:52.460
测试怎么测试呢

13:52.460 --> 13:53.460
我们在这个里面

13:53.460 --> 13:54.460
订一个

13:54.460 --> 13:55.460
有点login

13:55.460 --> 13:56.460
我们订一个测试的

13:56.460 --> 13:57.460
一个文件

13:57.460 --> 13:58.460
这里面

13:58.460 --> 13:59.460
配置运行参数

13:59.460 --> 14:00.460
配置运行参数

14:00.460 --> 14:01.460
我们一次的

14:01.460 --> 14:02.460
要给这里面

14:02.460 --> 14:03.460
login name

14:03.460 --> 14:04.460
login name

14:04.460 --> 14:06.460
这里面使用什么

14:06.460 --> 14:07.460
这个就是在

14:07.460 --> 14:08.460
你证实数据库里面

14:08.460 --> 14:09.460
存储到的

14:09.460 --> 14:10.460
这个用户的

14:10.460 --> 14:11.460
登录的名字

14:11.460 --> 14:12.460
那我们

14:12.460 --> 14:13.460
这个得看一下了

14:13.460 --> 14:15.460
因为给到同学们的

14:15.460 --> 14:16.460
这个里面

14:16.460 --> 14:17.460
其实是没有这个名字的

14:17.460 --> 14:18.460
我们看一下

14:18.460 --> 14:20.460
这个函数列表

14:20.460 --> 14:22.460
到我们的这个云数据库

14:22.460 --> 14:24.460
回到这个云数据库里面

14:24.460 --> 14:25.460
我们找到这个优点

14:25.460 --> 14:26.460
其实呢

14:26.460 --> 14:27.460
我们可以看一下

14:27.460 --> 14:28.460
优点里面

14:28.460 --> 14:29.460
它是

14:29.460 --> 14:30.460
你看

14:30.460 --> 14:31.460
正常的来讲

14:31.460 --> 14:32.460
它是没有login name password的

14:32.460 --> 14:33.460
以及我们的

14:33.460 --> 14:34.460
这个电话号码这一下

14:34.460 --> 14:35.460
怎么办

14:35.460 --> 14:36.460
在这个里面

14:36.460 --> 14:37.460
如果说

14:37.460 --> 14:38.460
你想查停

14:38.460 --> 14:39.460
某一个

14:39.460 --> 14:40.460
就是这个值的话

14:40.460 --> 14:41.460
那这里面

14:41.460 --> 14:42.460
需要扩展

14:42.460 --> 14:43.460
我怎么扩展

14:43.460 --> 14:44.460
因为咱们最早学的时候

14:44.460 --> 14:45.460
是不是也知道

14:45.460 --> 14:46.460
我在这个里面添加一下

14:46.460 --> 14:47.460
你看我这里面

14:47.460 --> 14:48.460
添加了一个什么

14:48.460 --> 14:49.460
login name password的

14:49.460 --> 14:51.460
以及我们的一个缝

14:51.460 --> 14:52.460
那如果说

14:52.460 --> 14:53.460
这样添加完成之后

14:53.460 --> 14:55.460
它在这个集合里面

14:55.460 --> 14:56.460
去查询的时候

14:56.460 --> 14:57.460
就会找到你指定的

14:57.460 --> 14:59.460
这个匹配的

14:59.460 --> 15:00.460
这一个记录值

15:00.460 --> 15:01.460
那我们来测试一下

15:01.460 --> 15:02.460
login name

15:02.460 --> 15:03.460
我这个里面

15:03.460 --> 15:04.460
正确的是

15:05.460 --> 15:06.460
之后呢

15:06.460 --> 15:07.460
我在这个里面

15:07.460 --> 15:08.460
再给它一个

15:08.460 --> 15:09.460
password的

15:09.460 --> 15:10.460
这里面是没做加密的

15:10.460 --> 15:11.460
因为我们

15:11.460 --> 15:12.460
实现这个后端

15:12.460 --> 15:14.460
按最基本的来实现

15:14.460 --> 15:16.460
这个里面写一个什么呢

15:16.460 --> 15:17.460
123 QWE

15:17.460 --> 15:18.460
OK

15:18.460 --> 15:19.460
再把这个

15:19.460 --> 15:20.460
tap给定一下

15:20.460 --> 15:22.460
tap应该是什么

15:22.460 --> 15:23.460
我们这个是

15:23.460 --> 15:24.460
tap是账户等度

15:24.460 --> 15:26.460
这里面写一个

15:27.460 --> 15:28.460
account

15:28.460 --> 15:29.460
好的

15:29.460 --> 15:30.460
这个就定义完了

15:30.460 --> 15:31.460
定义完成之后呢

15:31.460 --> 15:32.460
我们就是在本地

15:32.460 --> 15:33.460
调用一下

15:33.460 --> 15:34.460
然后来进行一个

15:34.460 --> 15:35.460
查看

15:35.460 --> 15:36.460
看它是否好用

15:36.460 --> 15:37.460
我们这里面

15:37.460 --> 15:39.460
本地运行云寒术

15:41.460 --> 15:42.460
OK

15:42.460 --> 15:43.460
运行结果是没有的

15:43.460 --> 15:44.460
然后这个里面

15:44.460 --> 15:45.460
我们可以打印一个值

15:45.460 --> 15:46.460
来看一下

15:46.460 --> 15:47.460
打印哪一个值呢

15:47.460 --> 15:48.460
这里面是不是

15:48.460 --> 15:49.460
已经定义了一个IS

15:49.460 --> 15:50.460
那我在这里面

15:50.460 --> 15:51.460
打印一个IS

15:51.460 --> 15:52.460
给同学们看一下

15:52.460 --> 15:53.460
因为我是没把

15:53.460 --> 15:54.460
这个返回值

15:54.460 --> 15:55.460
给它做一个输出的

15:55.460 --> 15:56.460
然后呢

15:56.460 --> 15:57.460
我们在这个里面

15:57.460 --> 15:59.460
再运行一个云寒术

15:59.460 --> 16:01.460
在这个里面查看

16:01.460 --> 16:02.460
好的

16:02.460 --> 16:03.460
你看到了

16:03.460 --> 16:04.460
这个里面

16:04.460 --> 16:05.460
它是有一个信息的

16:05.460 --> 16:06.460
这里面有一个

16:06.460 --> 16:08.460
advocate docs

16:08.460 --> 16:10.460
也就是说影响的一个

16:10.460 --> 16:11.460
data

16:11.460 --> 16:12.460
这里面有一个数组

16:12.460 --> 16:13.460
那这时候就拿到了

16:13.460 --> 16:14.460
我们这个

16:14.460 --> 16:15.460
所需要的这个值

16:15.460 --> 16:16.460
如果说

16:16.460 --> 16:17.460
那我要传错了

16:17.460 --> 16:18.460
怎么办呢

16:18.460 --> 16:20.460
这时候我们再来看一下

16:20.460 --> 16:21.460
传错的时候

16:21.460 --> 16:22.460
我们可以试一下

16:22.460 --> 16:23.460
比如说我这个

16:23.460 --> 16:24.460
123qw

16:24.460 --> 16:25.460
OK

16:25.460 --> 16:26.460
是这种形式

16:26.460 --> 16:27.460
那这个密码肯定错了

16:27.460 --> 16:28.460
对吧

16:28.460 --> 16:29.460
那我们再进行

16:29.460 --> 16:31.460
本地运行云寒术

16:31.460 --> 16:32.460
现在此时呢

16:32.460 --> 16:34.460
这个advocate docs

16:34.460 --> 16:35.460
也就是说这个值

16:35.460 --> 16:36.460
它是没有了

16:36.460 --> 16:37.460
对不对

16:37.460 --> 16:38.460
也就变成零了

16:38.460 --> 16:39.460
并且data为零

16:39.460 --> 16:40.460
所以说

16:40.460 --> 16:42.460
那我知道的这种情况之后

16:42.460 --> 16:43.460
咋办呢

16:43.460 --> 16:44.460
我在这个里面

16:44.460 --> 16:45.460
就可以来定一下

16:47.460 --> 16:48.460
我这里面

16:48.460 --> 16:49.460
首先呢

16:49.460 --> 16:50.460
是这个

16:50.460 --> 16:52.460
一定会给我返回一个

16:52.460 --> 16:53.460
advocate docs

16:53.460 --> 16:54.460
这么一个变量

16:54.460 --> 16:56.460
我把它在这里面

16:56.460 --> 16:57.460
结构一下

16:57.460 --> 16:58.460
结构出它之后

16:58.460 --> 16:59.460
我们这里面

16:59.460 --> 17:00.460
还会给我们返回一个

17:00.460 --> 17:01.460
返回它

17:01.460 --> 17:02.460
对吧

17:02.460 --> 17:03.460
也就是说这两个值

17:03.460 --> 17:04.460
那我return

17:04.460 --> 17:05.460
返回给前端的时候

17:05.460 --> 17:06.460
这里面

17:06.460 --> 17:07.460
我就要做一个判断了

17:07.460 --> 17:08.460
判断什么呢

17:08.460 --> 17:10.460
把它去干掉

17:10.460 --> 17:11.460
不要这个了

17:12.460 --> 17:13.460
干掉

17:13.460 --> 17:14.460
我们

17:14.460 --> 17:16.460
通过这个advocate doc

17:16.460 --> 17:18.460
来做一个判断

17:18.460 --> 17:20.460
如果说advocate doc

17:20.460 --> 17:21.460
它要成立的话

17:21.460 --> 17:22.460
那成立肯定是大于零

17:22.460 --> 17:23.460
大于零是不是一样

17:23.460 --> 17:24.460
一也就是说

17:24.460 --> 17:25.460
它查询到用户了

17:25.460 --> 17:26.460
那我这里面

17:26.460 --> 17:27.460
写一个什么

17:27.460 --> 17:28.460
code零

17:28.460 --> 17:29.460
之后呢

17:29.460 --> 17:31.460
这里面定一个msg

17:31.460 --> 17:32.460
那这个是

17:32.460 --> 17:34.460
获取用信息成功

17:34.460 --> 17:37.460
获取用户信息成功

17:37.460 --> 17:38.460
OK

17:38.460 --> 17:39.460
这个完成之后

17:39.460 --> 17:40.460
就把data

17:40.460 --> 17:41.460
给它做一个返回

17:41.460 --> 17:43.460
data因为只有一条值

17:43.460 --> 17:44.460
是吧

17:44.460 --> 17:45.460
那我就把data

17:45.460 --> 17:46.460
下面的零

17:46.460 --> 17:47.460
给它拿过去

17:47.460 --> 17:48.460
这是成功状态

17:48.460 --> 17:49.460
如果说失败了

17:49.460 --> 17:50.460
那我在这里面

17:50.460 --> 17:51.460
code

17:51.460 --> 17:52.460
给它一个什么

17:52.460 --> 17:53.460
也就是说

17:53.460 --> 17:54.460
没有查询到这个用户

17:54.460 --> 17:55.460
那msg

17:55.460 --> 17:56.460
这里面就要判断一下了

17:56.460 --> 17:57.460
判断什么呢

17:57.460 --> 17:58.460
你当前

17:58.460 --> 17:59.460
我想给前端

17:59.460 --> 18:00.460
返回一个消息

18:00.460 --> 18:01.460
虽然你有可能不用

18:01.460 --> 18:02.460
对不对

18:02.460 --> 18:03.460
但如果说你要用的话

18:03.460 --> 18:04.460
这里面我就要判断一下

18:04.460 --> 18:05.460
你的type

18:05.460 --> 18:07.460
如果说等于

18:07.460 --> 18:08.460
account

18:08.460 --> 18:09.460
假如说你要是

18:09.460 --> 18:10.460
账户等做

18:10.460 --> 18:11.460
那我这里面

18:11.460 --> 18:12.460
就是给你提示

18:12.460 --> 18:13.460
一个什么

18:13.460 --> 18:16.460
获取用户信息失败

18:16.460 --> 18:17.460
那这个失败的原因

18:17.460 --> 18:18.460
是啥

18:18.460 --> 18:19.460
请检查用户名

18:19.460 --> 18:20.460
或密码

18:20.460 --> 18:23.460
请检查用户名

18:23.460 --> 18:25.460
或密码

18:25.460 --> 18:26.460
OK

18:26.460 --> 18:27.460
否则

18:27.460 --> 18:28.460
是手机号码登录呢

18:28.460 --> 18:29.460
那你这个里面

18:29.460 --> 18:31.460
你就是验证码

18:31.460 --> 18:33.460
或一个什么

18:33.460 --> 18:35.460
手机号码有误

18:35.460 --> 18:36.460
对不对

18:36.460 --> 18:37.460
有误

18:37.460 --> 18:38.460
OK

18:38.460 --> 18:39.460
那这个呢

18:39.460 --> 18:40.460
就是我们一个完整的

18:40.460 --> 18:41.460
整个的一个输出了

18:41.460 --> 18:42.460
那我们来看一下

18:42.460 --> 18:43.460
是否可行

18:43.460 --> 18:44.460
我们这个里面

18:44.460 --> 18:45.460
多了一个库号

18:45.460 --> 18:46.460
我搞定一下

18:46.460 --> 18:48.460
然后重新格式化一下

18:48.460 --> 18:49.460
格式化之后

18:49.460 --> 18:51.460
那我重新进行一次

18:51.460 --> 18:52.460
请求上传

18:52.460 --> 18:53.460
这里面

18:53.460 --> 18:54.460
本地先运行一次吧

18:54.460 --> 18:56.460
本地运行之后

18:56.460 --> 18:58.460
后来看一下这个结果

18:58.460 --> 19:00.460
获取用户信息失败

19:00.460 --> 19:01.460
然后请检查

19:01.460 --> 19:02.460
用户名或密码

19:02.460 --> 19:03.460
OK

19:03.460 --> 19:04.460
他说我错了

19:04.460 --> 19:05.460
错的原因是啥

19:05.460 --> 19:06.460
是因为我没给他

19:06.460 --> 19:08.460
正确指证123QWE

19:08.460 --> 19:09.460
那我们再来试一下

19:09.460 --> 19:10.460
这回给他一个

19:10.460 --> 19:11.460
正确的指证

19:11.460 --> 19:12.460
我们再进行一个

19:12.460 --> 19:14.460
本地运行云含数

19:14.460 --> 19:15.460
如果说OK之后

19:15.460 --> 19:16.460
好了

19:16.460 --> 19:17.460
现在能拿到一个

19:17.460 --> 19:18.460
data object

19:18.460 --> 19:19.460
对不对

19:19.460 --> 19:20.460
拿到这个信息

19:20.460 --> 19:21.460
那我们前段来使用

19:21.460 --> 19:22.460
就可以了

19:22.460 --> 19:23.460
当你这个处理完成之后

19:23.460 --> 19:24.460
那你在这个里面

19:24.460 --> 19:25.460
做一个什么

19:25.460 --> 19:27.460
上传部署的操作

19:27.460 --> 19:28.460
此时呢

19:28.460 --> 19:29.460
我们可以理解一下

19:29.460 --> 19:30.460
这个接口就搞定了

19:30.460 --> 19:31.460
搞定这个接口之后

19:31.460 --> 19:32.460
那接下来就是

19:32.460 --> 19:34.460
我们前段要做的事了

19:34.460 --> 19:35.460
对吧

19:35.460 --> 19:36.460
那我们前段就可以

19:36.460 --> 19:37.460
正确的来使用了

19:37.460 --> 19:38.460
OK

19:38.460 --> 19:39.460
上传完成了

19:39.460 --> 19:40.460
回到我们的

19:40.460 --> 19:41.460
这个前段这一块

19:41.460 --> 19:43.460
看一下我们写的这个代码

19:43.460 --> 19:44.460
如果说

19:44.460 --> 19:46.460
我们去这个发送之后

19:46.460 --> 19:47.460
这里面会有一个

19:47.460 --> 19:48.460
U的音报

19:48.460 --> 19:49.460
给我们做一个打印

19:49.460 --> 19:50.460
是吧

19:50.460 --> 19:51.460
那我们就来看一眼

19:51.460 --> 19:53.460
正确的来去请求一次

19:53.460 --> 19:55.460
那我们先来一个错误的

19:55.460 --> 19:57.460
123QWE

19:57.460 --> 19:58.460
Sorry

19:58.460 --> 19:59.460
我们这个里面是

19:59.460 --> 20:01.460
Alan9558

20:01.460 --> 20:02.460
OK

20:02.460 --> 20:03.460
123QW

20:03.460 --> 20:04.460
少了一个E

20:04.460 --> 20:05.460
这个

20:05.460 --> 20:06.460
我们点击登入

20:06.460 --> 20:07.460
获取用户信息失败

20:07.460 --> 20:08.460
请检查用户名和密码

20:08.460 --> 20:10.460
因为我们在请求的时候

20:10.460 --> 20:11.460
封装ATP

20:11.460 --> 20:12.460
已经把这个请求

20:12.460 --> 20:13.460
给做了拦截了

20:13.460 --> 20:14.460
如果说错误信息

20:14.460 --> 20:15.460
所以说这个

20:15.460 --> 20:16.460
是没有问题的

20:16.460 --> 20:17.460
那如果说正确呢

20:17.460 --> 20:18.460
咱们再来看一下

20:18.460 --> 20:19.460
123QWE

20:19.460 --> 20:20.460
OK

20:20.460 --> 20:21.460
我点击立即登入

20:21.460 --> 20:22.460
好的

20:22.460 --> 20:23.460
那你这个里面

20:23.460 --> 20:24.460
是拿到一条信息纸了

20:24.460 --> 20:26.460
拿到这个信息纸干嘛

20:26.460 --> 20:27.460
我们其实这个时候

20:27.460 --> 20:30.460
就可以做一个信息的存储

20:30.460 --> 20:31.460
是不是就OK了

20:31.460 --> 20:32.460
对吧

20:32.460 --> 20:33.460
那我们回到这个代码里面

20:33.460 --> 20:34.460
首先呢

20:34.460 --> 20:36.460
因为这个是一个登入操作

20:36.460 --> 20:37.460
对吧

20:37.460 --> 20:38.460
那像这种登入操作呢

20:38.460 --> 20:39.460
如果说

20:39.460 --> 20:41.460
它有正确的这个返回值之后

20:41.460 --> 20:42.460
那我们在这个里面

20:42.460 --> 20:43.460
就要做一些什么呢

20:43.460 --> 20:44.460
提示

20:44.460 --> 20:46.460
然后我这样写

20:46.460 --> 20:49.460
如果说U字音报有值的话

20:49.460 --> 20:51.460
那我们给他开启一个什么

20:51.460 --> 20:52.460
一起一个

20:52.460 --> 20:54.460
这次点收tosed

20:54.460 --> 20:56.460
提示框让他显示一下

20:56.460 --> 20:59.460
这次点收tosed

20:59.460 --> 21:00.460
OK

21:00.460 --> 21:01.460
sorry

21:01.460 --> 21:02.460
不是这次点收tosed的

21:02.460 --> 21:05.460
应该是有你点收tosed

21:05.460 --> 21:06.460
我说没有给提示嘛

21:06.460 --> 21:07.460
对吧

21:07.460 --> 21:11.770
第一个我们指定一个title

21:11.770 --> 21:12.770
那这个title是什么

21:12.770 --> 21:15.770
用户登入成功

21:15.770 --> 21:16.770
OK

21:16.770 --> 21:17.770
它登入成功之后

21:17.770 --> 21:18.770
那这个里面

21:18.770 --> 21:19.770
我把这个icon

21:19.770 --> 21:20.770
就给它干掉一下

21:20.770 --> 21:22.770
icon给它一个null

21:22.770 --> 21:24.770
这里面null代表着没有

21:24.770 --> 21:25.770
对吧

21:25.770 --> 21:26.770
null

21:26.770 --> 21:27.770
OK

21:27.770 --> 21:28.770
好了定义完成之后

21:28.770 --> 21:31.770
那如果说你这个成功了之后

21:31.770 --> 21:32.770
那我这个里面

21:32.770 --> 21:33.770
首先第一

21:33.770 --> 21:35.770
我把你这个提示框

21:35.770 --> 21:36.770
给你显示出来了

21:36.770 --> 21:37.770
然后呢

21:37.770 --> 21:39.770
其实我还要你做一个什么呢

21:39.770 --> 21:40.770
你刚才从哪来的

21:40.770 --> 21:42.770
然后你再给我翻回去

21:42.770 --> 21:43.770
是不是就可以了

21:43.770 --> 21:44.770
对不对

21:44.770 --> 21:45.770
那我这个里面

21:45.770 --> 21:46.770
先来试第一个功能

21:46.770 --> 21:47.770
咱们来试一下

21:47.770 --> 21:48.770
是否可以成功

21:48.770 --> 21:51.770
显示我们的这个弹框

21:51.770 --> 21:54.770
L98123QW

21:54.770 --> 21:55.770
OK

21:55.770 --> 21:56.770
立即登入

21:56.770 --> 21:57.770
好的用户登入成功

21:57.770 --> 21:58.770
登入成功之后

21:58.770 --> 21:59.770
那在这个里面呢

21:59.770 --> 22:01.770
当它这个登入信息

22:01.770 --> 22:02.770
也给我们显示完成之后

22:02.770 --> 22:03.770
我在这个里面

22:03.770 --> 22:05.770
就可以让它做一个什么

22:05.770 --> 22:06.770
跳转

22:06.770 --> 22:08.770
那也就是说set time out

22:08.770 --> 22:09.770
那这里面

22:09.770 --> 22:10.770
给它一个时间

22:10.770 --> 22:11.770
时间是多少呢

22:11.770 --> 22:13.770
我们可以给一个1500秒

22:13.770 --> 22:14.770
然后因为什么呢

22:14.770 --> 22:16.770
因为这个弹框消失

22:16.770 --> 22:17.770
用户登入弹框

22:17.770 --> 22:19.770
那个消失默认也是1500毫秒

22:19.770 --> 22:20.770
对吧

22:20.770 --> 22:21.770
那我在这个里面

22:21.770 --> 22:22.770
就做一个什么事

22:22.770 --> 22:24.770
Uni.NavigateBack

22:24.770 --> 22:26.770
就让它返回这个

22:26.770 --> 22:28.770
之前它过来的这个界面

22:28.770 --> 22:29.770
就OK了

22:29.770 --> 22:30.770
NavigateBack里面

22:30.770 --> 22:32.770
我们也不写其他内容

22:32.770 --> 22:33.770
咱们来试一下

22:33.770 --> 22:34.770
看是否可行

22:34.770 --> 22:35.770
在这个里面

22:35.770 --> 22:36.770
123

22:38.770 --> 22:39.770
再登录一下

22:39.770 --> 22:41.770
123QW有1.G登入

22:41.770 --> 22:42.770
OK

22:42.770 --> 22:43.770
登入成功之后

22:43.770 --> 22:45.770
当然它刷新了这个界面

22:45.770 --> 22:46.770
然后呢

22:46.770 --> 22:47.770
还没有这个跳过去

22:47.770 --> 22:48.770
是因为它

22:48.770 --> 22:49.770
是因为它现在找不到

22:49.770 --> 22:50.770
这个历史记录站了

22:50.770 --> 22:51.770
那我们再来试一下

22:51.770 --> 22:52.770
在这个里面

22:52.770 --> 22:54.770
我从这个首页面过来的

22:54.770 --> 22:55.770
这个它肯定有历史记录站

22:55.770 --> 22:56.770
对吧

22:56.770 --> 22:57.770
然后在这个里面

22:57.770 --> 22:58.770
是进行一个

22:58.770 --> 23:00.770
登录Lin958之后

23:00.770 --> 23:02.770
123QW1

23:02.770 --> 23:03.770
点击立即登录

23:03.770 --> 23:04.770
OK登录成功之后

23:04.770 --> 23:05.770
好的

23:05.770 --> 23:06.770
它现在呢

23:06.770 --> 23:07.770
就给我做了一个

23:07.770 --> 23:09.770
返回我们首页面的

23:09.770 --> 23:11.770
这样一个操作

23:11.770 --> 23:12.770
那这个呢

23:12.770 --> 23:13.770
就是我们实现的

23:13.770 --> 23:14.770
第一个需求

23:14.770 --> 23:16.770
返回原来的这个界面里面

23:16.770 --> 23:17.770
拿到这个信息干嘛呢

23:17.770 --> 23:18.770
其实这个里面

23:18.770 --> 23:19.770
就涉及到我们

23:19.770 --> 23:20.770
第二个问题

23:20.770 --> 23:21.770
我们要将这个信息

23:21.770 --> 23:23.770
进行一个存储

23:23.770 --> 23:24.770
因为这个信息啊

23:24.770 --> 23:26.770
在好多界面里面

23:26.770 --> 23:27.770
都会使用到

23:27.770 --> 23:28.770
所以说呢

23:28.770 --> 23:30.770
我们对这个信息的存储

23:30.770 --> 23:31.770
在这个里面

23:31.770 --> 23:32.770
我们要做一个什么呢

23:32.770 --> 23:33.770
最好是使用

23:33.770 --> 23:35.770
使到的形式啊

23:35.770 --> 23:36.770
来进行一个存储

23:36.770 --> 23:38.770
使到的形式

23:38.770 --> 23:39.770
进行存储

23:39.770 --> 23:41.770
因为Uni里面

23:41.770 --> 23:42.770
UniApp里面

23:42.770 --> 23:43.770
默认已经内置了VX

23:43.770 --> 23:44.770
所以说

23:44.770 --> 23:45.770
我们就可以用

23:45.770 --> 23:47.770
全局的状态管理机

23:47.770 --> 23:49.770
来实现存储的功能

23:49.770 --> 23:50.770
怎么来做呢

23:50.770 --> 23:51.770
我们先把

23:51.770 --> 23:53.770
这个所有的这个合并

23:53.770 --> 23:54.770
折叠一个所有

23:54.770 --> 23:55.770
那首先呢

23:55.770 --> 23:56.770
我们要

23:56.770 --> 23:57.770
其实这个使用

23:57.770 --> 23:58.770
和我们的这个

23:58.770 --> 23:59.770
原生的VU里面

23:59.770 --> 24:00.770
是完全一致的

24:00.770 --> 24:01.770
所以说呢

24:01.770 --> 24:02.770
我们就按着VU的

24:02.770 --> 24:03.770
使用方式

24:03.770 --> 24:04.770
就可以了

24:04.770 --> 24:06.770
首先我新建一个

24:06.770 --> 24:07.770
目录

24:07.770 --> 24:08.770
这个目录里面

24:08.770 --> 24:09.770
存放我们所有的

24:09.770 --> 24:10.770
VX数据啊

24:11.770 --> 24:12.770
包括一些

24:12.770 --> 24:14.770
Mutation以及Action的操作

24:14.770 --> 24:15.770
这个里面呢

24:15.770 --> 24:17.770
我们定一些入口文件

24:17.770 --> 24:19.770
以及State Mutation Actions

24:19.770 --> 24:20.770
的一个导出

24:20.770 --> 24:21.770
那这样

24:21.770 --> 24:22.770
为了方便快速的

24:22.770 --> 24:23.770
创建文件

24:23.770 --> 24:24.770
我这里面是

24:24.770 --> 24:25.770
用这种命令的形式

24:25.770 --> 24:26.770
来给同学们

24:26.770 --> 24:27.770
创建一下

24:27.770 --> 24:28.770
首先呢

24:28.770 --> 24:30.770
我们得有一个入口文件

24:30.770 --> 24:31.770
那我就是

24:31.770 --> 24:32.770
index.js

24:32.770 --> 24:33.770
之后

24:33.770 --> 24:34.770
创建完成之后

24:34.770 --> 24:35.770
我这里面

24:35.770 --> 24:36.770
还有一个

24:36.770 --> 24:37.770
改变状态的

24:37.770 --> 24:39.770
Mutations.js

24:39.770 --> 24:40.770
之后

24:40.770 --> 24:43.770
再定一个Actions.js

24:43.770 --> 24:45.770
Actions.js

24:45.770 --> 24:46.770
OK

24:46.770 --> 24:47.770
这几个文件

24:47.770 --> 24:48.770
定义好了之后

24:48.770 --> 24:49.770
咱们打开啊

24:49.770 --> 24:50.770
这个里面

24:50.770 --> 24:51.770
应该有几个的

24:51.770 --> 24:52.770
对不对

24:52.770 --> 24:53.770
那我们依依次的啊

24:53.770 --> 24:54.770
sorry

24:54.770 --> 24:55.770
应该还缺一个

24:55.770 --> 24:56.770
缺一个什么呢

24:56.770 --> 24:57.770
缺一个我们保存状态的

24:57.770 --> 24:59.770
State.js

24:59.770 --> 25:00.770
好了

25:00.770 --> 25:01.770
都定义完成之后

25:01.770 --> 25:02.770
那我这里面

25:02.770 --> 25:03.770
就开始

25:03.770 --> 25:04.770
从入口寒说

25:04.770 --> 25:05.770
开始写了

25:05.770 --> 25:06.770
它跟我们

25:06.770 --> 25:07.770
正常的VU使用

25:07.770 --> 25:08.770
是完全一致的

25:08.770 --> 25:09.770
首先呢

25:09.770 --> 25:10.770
可以导入

25:10.770 --> 25:11.770
vue.frome

25:11.770 --> 25:12.770
从这个vue

25:12.770 --> 25:13.770
导入进来

25:13.770 --> 25:14.770
导入进来之后呢

25:14.770 --> 25:15.770
我们再定一个

25:15.770 --> 25:17.770
vue.char

25:17.770 --> 25:19.770
vue.char.frome

25:19.770 --> 25:20.770
从哪来呢

25:20.770 --> 25:21.770
就是从vue.ex

25:21.770 --> 25:22.770
因为它已经内置了

25:22.770 --> 25:23.770
所以说我们直接

25:23.770 --> 25:24.770
就可以使用啊

25:24.770 --> 25:25.770
之后呢

25:25.770 --> 25:26.770
我们依依次的

25:26.770 --> 25:27.770
把我们的

25:27.770 --> 25:28.770
这几个定义好的文件

25:28.770 --> 25:29.770
可以导入进来

25:29.770 --> 25:30.770
第一个是我们的

25:30.770 --> 25:31.770
状态机

25:31.770 --> 25:33.770
State.frome

25:33.770 --> 25:34.770
从哪来

25:34.770 --> 25:35.770
从我们的.gang

25:35.770 --> 25:36.770
这里面的是

25:36.770 --> 25:37.770
State.js

25:37.770 --> 25:38.770
之后呢

25:38.770 --> 25:39.770
我们依依次的

25:39.770 --> 25:41.770
Import Mutations

25:43.770 --> 25:44.770
frome

25:44.770 --> 25:45.770
从我们的.gang

25:45.770 --> 25:46.770
Mutations

25:46.770 --> 25:47.770
给引入

25:47.770 --> 25:48.770
引入之后

25:48.770 --> 25:49.770
我们再进行

25:49.770 --> 25:50.770
定义

25:50.770 --> 25:52.770
Import Actions

25:52.770 --> 25:53.770
frome

25:53.770 --> 25:54.770
从我们的

25:54.770 --> 25:55.770
.gang Actions

25:55.770 --> 25:56.770
.js

25:56.770 --> 25:57.770
引入

25:57.770 --> 25:58.770
OK

25:58.770 --> 25:59.770
全部引入之后

25:59.770 --> 26:00.770
那我先做一件事

26:00.770 --> 26:01.770
让vue

26:01.770 --> 26:02.770
使用这个

26:02.770 --> 26:03.770
vue.yout

26:03.770 --> 26:04.770
然后这个

26:04.770 --> 26:05.770
里面是

26:05.770 --> 26:06.770
vue.ex

26:06.770 --> 26:07.770
OK

26:07.770 --> 26:08.770
是个大写的

26:08.770 --> 26:09.770
好了

26:09.770 --> 26:10.770
写完这个之后

26:10.770 --> 26:11.770
那我们继续写

26:11.770 --> 26:12.770
这时候我们要做什么

26:12.770 --> 26:13.770
对它进行一个导出

26:13.770 --> 26:14.770
导出一个什么呢

26:14.770 --> 26:16.770
导出一个默认对象

26:16.770 --> 26:17.770
这个默认对象是啥

26:17.770 --> 26:19.770
就是我们实力化出来的

26:19.770 --> 26:20.770
这个

26:20.770 --> 26:21.770
vue死到

26:21.770 --> 26:22.770
vue.char

26:22.770 --> 26:23.770
这个里面是

26:23.770 --> 26:24.770
点一个

26:24.770 --> 26:25.770
死到

26:25.770 --> 26:26.770
和我们的

26:26.770 --> 26:27.770
正常的写法

26:27.770 --> 26:28.770
是完全其致的

26:28.770 --> 26:29.770
vue.char死到

26:29.770 --> 26:30.770
这个里面

26:30.770 --> 26:31.770
我们就把

26:31.770 --> 26:32.770
这个State

26:32.770 --> 26:33.770
给它填充进去

26:33.770 --> 26:34.770
包括我们的

26:34.770 --> 26:36.770
Mutations

26:37.770 --> 26:38.770
OK

26:38.770 --> 26:40.770
这个Mutations

26:40.770 --> 26:41.770
填充完了之后

26:41.770 --> 26:42.770
这个里面

26:42.770 --> 26:43.770
还有一个

26:43.770 --> 26:45.770
是我们的Actions

26:45.770 --> 26:46.770
好的

26:46.770 --> 26:47.770
全部都填充完成之后

26:47.770 --> 26:48.770
那这时候呢

26:48.770 --> 26:50.770
我们就是将

26:50.770 --> 26:51.770
我们的这个

26:51.770 --> 26:53.770
导出的这个死到对象呢

26:53.770 --> 26:55.770
我们要对它进行一个挂载

26:55.770 --> 26:56.770
在哪个里面挂载

26:56.770 --> 26:57.770
就在我们的这个

26:57.770 --> 26:58.770
悶点这个s里面

26:58.770 --> 27:00.770
进行一个挂载

27:00.770 --> 27:01.770
那挂载的时候

27:01.770 --> 27:02.770
首先呢

27:02.770 --> 27:03.770
我们知道这个死到

27:03.770 --> 27:04.770
给它导出

27:05.770 --> 27:06.770
死到

27:06.770 --> 27:07.770
fram

27:07.770 --> 27:08.770
从哪来

27:08.770 --> 27:09.770
从我们的点

27:09.770 --> 27:11.770
死到下面的index

27:11.770 --> 27:12.770
入口文件里面

27:12.770 --> 27:13.770
输出

27:13.770 --> 27:14.770
输出的时候

27:14.770 --> 27:15.770
我在这个里面

27:15.770 --> 27:16.770
进行一个挂载

27:16.770 --> 27:17.770
好的

27:17.770 --> 27:18.770
那我进行一个保存

27:18.770 --> 27:19.770
保存之后

27:19.770 --> 27:20.770
那我们回到界面

27:20.770 --> 27:21.770
只要没有错就OK

27:21.770 --> 27:22.770
对吧

27:22.770 --> 27:23.770
然后你怎么看

27:23.770 --> 27:24.770
这个有没有问题

27:24.770 --> 27:25.770
比如说呢

27:25.770 --> 27:26.770
我们现在

27:26.770 --> 27:27.770
已经这个有值了

27:27.770 --> 27:28.770
那我们直接的

27:28.770 --> 27:29.770
在这个里面

27:29.770 --> 27:30.770
是不是能看到

27:30.770 --> 27:31.770
vchar的一些相关信息

27:31.770 --> 27:32.770
我在这个里面

27:32.770 --> 27:33.770
可以做一个测试

27:33.770 --> 27:34.770
现在已经定义

27:34.770 --> 27:35.770
好死到死的了

27:35.770 --> 27:36.770
对吧

27:36.770 --> 27:37.770
但是它没有任何输出

27:37.770 --> 27:38.770
那我们就给它输出一个

27:38.770 --> 27:39.770
expult

27:39.770 --> 27:41.770
然后default

27:41.770 --> 27:43.770
我们这个default的一个什么

27:43.770 --> 27:44.770
导出一个对象

27:44.770 --> 27:45.770
对吧

27:45.770 --> 27:46.770
那这个对象里面

27:46.770 --> 27:47.770
就我们定义的

27:47.770 --> 27:49.770
第一个UserInfo

27:51.770 --> 27:52.770
UserInfo

27:52.770 --> 27:53.770
默认给它一个空推向

27:53.770 --> 27:54.770
那我们看一下

27:54.770 --> 27:55.770
在这个工具里面

27:55.770 --> 27:56.770
能不能看到

27:56.770 --> 27:57.770
我们点击一下

27:57.770 --> 27:58.770
UserInfo是不是有了

27:58.770 --> 27:59.770
对吧

27:59.770 --> 28:00.770
那出手话的时候

28:00.770 --> 28:01.770
首先我们给UserInfo

28:01.770 --> 28:02.770
复制

28:02.770 --> 28:03.770
我们这个里面

28:03.770 --> 28:04.770
给它一个什么值呢

28:04.770 --> 28:05.770
我们可以给它

28:05.770 --> 28:07.770
指定一个默认的值

28:07.770 --> 28:08.770
那这个默认值是啥呢

28:08.770 --> 28:09.770
其实你想

28:09.770 --> 28:10.770
如果说

28:10.770 --> 28:11.770
我们这个为了

28:11.770 --> 28:12.770
这个速度快一些

28:12.770 --> 28:14.770
因为我们获取用信息

28:14.770 --> 28:15.770
每次都得进行查询

28:15.770 --> 28:16.770
而且我们后期

28:16.770 --> 28:18.770
还得做这种路由拦截

28:18.770 --> 28:19.770
对H5端

28:19.770 --> 28:20.770
所以说怎么办呢

28:20.770 --> 28:22.770
我们在这个本地存储里面

28:22.770 --> 28:24.770
存储一份用户信息的

28:24.770 --> 28:25.770
这个内容

28:25.770 --> 28:26.770
如果说有

28:26.770 --> 28:27.770
我直接的在这个

28:27.770 --> 28:28.770
程序启动的时候

28:28.770 --> 28:29.770
把这个

28:29.770 --> 28:31.770
我们本地存储里面的信息

28:31.770 --> 28:32.770
UserInfo就OK了

28:32.770 --> 28:33.770
如果说没有

28:33.770 --> 28:34.770
那我就给它反回一个

28:34.770 --> 28:35.770
NOW就OK了

28:35.770 --> 28:36.770
也就是说

28:36.770 --> 28:37.770
那我这里时候

28:37.770 --> 28:38.770
我就想读取一个

28:38.770 --> 28:41.770
GateStorage

28:41.770 --> 28:42.770
同步读取

28:42.770 --> 28:43.770
StorageSync

28:43.770 --> 28:48.770
我要读取一个UserInfo

28:48.770 --> 28:49.770
OK

28:49.770 --> 28:50.770
如果说你有呢

28:50.770 --> 28:51.770
那你直接

28:51.770 --> 28:52.770
给这个UserInfo

28:52.770 --> 28:53.770
做一个复制

28:53.770 --> 28:54.770
假如说你要是没有

28:54.770 --> 28:55.770
那我这里面

28:55.770 --> 28:56.770
就给它一个什么NOW

28:56.770 --> 28:57.770
也就是说UserInfo

28:57.770 --> 28:58.770
没有信息

28:58.770 --> 28:59.770
对不对

28:59.770 --> 29:00.770
就是这么一个操作

29:00.770 --> 29:01.770
肯定是得不到的

29:01.770 --> 29:02.770
如果说没有

29:02.770 --> 29:03.770
它就得不到

29:03.770 --> 29:04.770
对不对

29:04.770 --> 29:05.770
得不到

29:05.770 --> 29:06.770
它就是一个空的对象

29:06.770 --> 29:07.770
之后呢

29:07.770 --> 29:08.770
这个里面我们定义好的之后

29:08.770 --> 29:09.770
那接下来

29:09.770 --> 29:10.770
我们是不是得有一个

29:10.770 --> 29:11.770
复制操作

29:11.770 --> 29:12.770
对吧

29:12.770 --> 29:13.770
如果说我们的这个

29:13.770 --> 29:14.770
是一些易不操作的话

29:14.770 --> 29:15.770
那这个里面

29:15.770 --> 29:16.770
我们就在Action里面存放

29:16.770 --> 29:18.770
如果说是同步操作的话

29:18.770 --> 29:19.770
那怎么办呢

29:19.770 --> 29:20.770
我们直接的

29:20.770 --> 29:21.770
在Mutations里面

29:21.770 --> 29:22.770
是不是也可以做

29:23.770 --> 29:24.770
所以说这个呢

29:24.770 --> 29:26.770
我们就在Mutation里面定义

29:27.770 --> 29:28.770
但是呢

29:28.770 --> 29:29.770
我这个Action

29:29.770 --> 29:30.770
对象吧

29:30.770 --> 29:31.770
这个里面

29:31.770 --> 29:32.770
然后回到我们的

29:32.770 --> 29:33.770
Mutation

29:33.770 --> 29:35.770
EatBotDefault

29:35.770 --> 29:37.770
我们导出一个对象

29:37.770 --> 29:38.770
这个对象里面

29:38.770 --> 29:39.770
肯定有方法

29:39.770 --> 29:40.770
第一个方法是

29:40.770 --> 29:41.770
我们在这里面写一个

29:41.770 --> 29:44.770
Update修改用信息的

29:44.770 --> 29:48.770
UpdateUserInfo

29:49.770 --> 29:52.980
好的

29:52.980 --> 29:53.980
UpdateUserInfo

29:53.980 --> 29:54.980
这个方法

29:54.980 --> 29:55.980
然后呢

29:55.980 --> 29:56.980
我们这里面

29:56.980 --> 29:57.980
肯定有什么

29:57.980 --> 29:58.980
有这个State

29:58.980 --> 29:59.980
对不对

29:59.980 --> 30:00.980
还有我们接收到的

30:00.980 --> 30:02.980
UserInfo

30:02.980 --> 30:03.980
可以

30:03.980 --> 30:04.980
我们在这里面

30:04.980 --> 30:05.980
打印一下什么呢

30:05.980 --> 30:06.980
这个UserInfo

30:06.980 --> 30:07.980
好的

30:07.980 --> 30:08.980
如果说

30:08.980 --> 30:09.980
我们在这个前台

30:09.980 --> 30:10.980
假如说

30:10.980 --> 30:11.980
我们调用这个

30:11.980 --> 30:12.980
比如说在这个Logan界面里面

30:12.980 --> 30:13.980
我们调用这个

30:13.980 --> 30:14.980
UpdateUserInfo

30:14.980 --> 30:15.980
方法

30:15.980 --> 30:16.980
那直接的

30:16.980 --> 30:17.980
我们给这个State

30:17.980 --> 30:18.980
点UserInfo

30:18.980 --> 30:19.980
给它做一个复制

30:19.980 --> 30:20.980
是不是就可以了

30:20.980 --> 30:21.980
对不对

30:21.980 --> 30:22.980
也就是说呢

30:22.980 --> 30:23.980
我在这个里面

30:23.980 --> 30:25.980
State.UserInfo

30:25.980 --> 30:27.980
是它等于我们什么呢

30:27.980 --> 30:28.980
这个里面

30:28.980 --> 30:29.980
UserInfo

30:29.980 --> 30:30.980
当然了

30:30.980 --> 30:31.980
我们在这里面

30:31.980 --> 30:32.980
做一个打印

30:32.980 --> 30:33.980
也来看一下

30:33.980 --> 30:35.980
回到我们的那个Logan界面里面

30:35.980 --> 30:36.980
Logan界面里面

30:36.980 --> 30:37.980
现在是不是

30:37.980 --> 30:39.980
我们要做一个什么

30:39.980 --> 30:40.980
使用死盗形式

30:40.980 --> 30:41.980
进行存取数据了

30:41.980 --> 30:42.980
对不对

30:42.980 --> 30:43.980
那我就调用这个

30:43.980 --> 30:44.980
Mutation里面的

30:44.980 --> 30:45.980
这个UpdateUserInfo

30:45.980 --> 30:46.980
就可以啊

30:46.980 --> 30:47.980
怎么来使用

30:47.980 --> 30:48.980
我们可以使用

30:48.980 --> 30:49.980
一个快捷的

30:49.980 --> 30:50.980
这个函数

30:50.980 --> 30:51.980
Import

30:51.980 --> 30:52.980
我们这里面

30:52.980 --> 30:53.980
是不是有一个Map

30:53.980 --> 30:54.980
State

30:54.980 --> 30:55.980
对不对

30:55.980 --> 30:56.980
Foodrum

30:56.980 --> 30:57.980
从哪来呢

30:57.980 --> 30:58.980
WeX里面

30:58.980 --> 30:59.980
有一个Maps

30:59.980 --> 31:01.980
我们使用MapMutation

31:05.980 --> 31:07.980
MapMutations

31:07.980 --> 31:08.980
然后呢

31:08.980 --> 31:10.980
我就可以通过MapMutations

31:10.980 --> 31:12.980
来进行一个定义了

31:12.980 --> 31:13.980
然后这个里面

31:13.980 --> 31:15.980
写完了之后

31:15.980 --> 31:16.980
怎么办

31:16.980 --> 31:17.980
我们到这个

31:17.980 --> 31:19.980
MySer的下面

31:19.980 --> 31:21.980
来做一个处理

31:21.980 --> 31:22.980
在这个位置

31:22.980 --> 31:23.980
写一下

31:23.980 --> 31:24.980
点点点

31:24.980 --> 31:25.980
给它做一个结构

31:25.980 --> 31:26.980
MapMutations

31:26.980 --> 31:28.980
结构出哪个方法

31:28.980 --> 31:31.980
是我们的UpdateUserInfo

31:31.980 --> 31:32.980
方法

31:32.980 --> 31:33.980
然后呢

31:33.980 --> 31:34.980
我在这个里面

31:34.980 --> 31:35.980
就可以使用

31:35.980 --> 31:36.980
这个UpdateUserInfo

31:36.980 --> 31:37.980
方法

31:37.980 --> 31:38.980
然后呢

31:38.980 --> 31:39.980
给它进行一个传指

31:39.980 --> 31:40.980
这一次点

31:40.980 --> 31:41.980
UpdateUserInfo

31:41.980 --> 31:43.980
将我们的这个UserInfo

31:43.980 --> 31:44.980
给它做一个传递

31:44.980 --> 31:45.980
就可以了

31:45.980 --> 31:46.980
然后

31:46.980 --> 31:47.980
我们做一个传递

31:47.980 --> 31:48.980
最终的目的是啥

31:48.980 --> 31:49.980
其实最终的目的

31:49.980 --> 31:51.980
就是在这个Mutations里面

31:51.980 --> 31:52.980
是不是给它做一个修改

31:52.980 --> 31:53.980
对吧

31:53.980 --> 31:54.980
那我们来看一下

31:54.980 --> 31:55.980
是否可行

31:55.980 --> 31:56.980
我们到这个

31:56.980 --> 31:57.980
登录界面

31:57.980 --> 31:58.980
登录界面

31:58.980 --> 31:59.980
我们打印一下这个值

31:59.980 --> 32:00.980
然后呢

32:00.980 --> 32:02.980
L958

32:02.980 --> 32:03.980
保证你正常的

32:03.980 --> 32:04.980
正确登录

32:04.980 --> 32:05.980
我们一点击登录

32:05.980 --> 32:06.980
好的

32:06.980 --> 32:07.980
登录成功之后

32:07.980 --> 32:08.980
其实你会发现

32:08.980 --> 32:09.980
我们的这个Mutations里面

32:09.980 --> 32:11.980
是不是已经把这个

32:11.980 --> 32:12.980
值已经存储到了

32:12.980 --> 32:13.980
对吧

32:13.980 --> 32:14.980
存储到之后

32:14.980 --> 32:15.980
我们还可以从这个里面

32:15.980 --> 32:16.980
看一下

32:16.980 --> 32:17.980
点击一下

32:17.980 --> 32:19.980
UserInfo里面有值了

32:19.980 --> 32:22.980
UserInfo里面有值之后

32:22.980 --> 32:23.980
这个其实呢

32:23.980 --> 32:24.980
咱们说了

32:24.980 --> 32:25.980
初始化的时候

32:25.980 --> 32:27.980
可能会在这个

32:27.980 --> 32:29.980
我们本地存储里面

32:29.980 --> 32:30.980
获取数据

32:30.980 --> 32:31.980
所以说呢

32:31.980 --> 32:32.980
对这个操作呢

32:32.980 --> 32:34.980
我们除了在这个微差里面

32:34.980 --> 32:35.980
存储一份之后

32:35.980 --> 32:36.980
我们也要把这个

32:36.980 --> 32:38.980
本地存储里面的这个数据

32:38.980 --> 32:40.980
给同步的做一个更新

32:40.980 --> 32:41.980
那怎么更新呢

32:41.980 --> 32:42.980
我就是

32:42.980 --> 32:43.980
做一个覆盖就可以了

32:43.980 --> 32:45.980
Unit.setStorage

32:45.980 --> 32:46.980
然后这里面

32:46.980 --> 32:47.980
使用它的这个

32:47.980 --> 32:48.980
同步方法sync

32:48.980 --> 32:50.980
把谁进行一个

32:50.980 --> 32:51.980
调整UserInfo

32:51.980 --> 32:52.980
那如果说

32:52.980 --> 32:53.980
你一开始没有

32:53.980 --> 32:54.980
我给你追加吧

32:54.980 --> 32:55.980
对吧

32:55.980 --> 32:56.980
User有呢怎么办

32:56.980 --> 32:57.980
我给你重新覆盖

32:57.980 --> 32:58.980
就ok了

32:58.980 --> 32:59.980
然后咱们来看一下

32:59.980 --> 33:00.980
是否可行呢

33:00.980 --> 33:01.980
这里面呢

33:01.980 --> 33:03.980
我再进行一次登录

33:03.980 --> 33:05.980
L958

33:05.980 --> 33:06.980
然后123QW

33:06.980 --> 33:07.980
我一电机

33:07.980 --> 33:08.980
DG登录

33:08.980 --> 33:09.980
好的登录成功之后

33:09.980 --> 33:10.980
他也跳过去了

33:10.980 --> 33:11.980
跳过去我们这个

33:11.980 --> 33:12.980
微差里面

33:12.980 --> 33:13.980
是有数据的

33:13.980 --> 33:14.980
对吧

33:14.980 --> 33:15.980
微差里面有数据之后

33:15.980 --> 33:16.980
我们再来看一下

33:16.980 --> 33:17.980
本地存储

33:17.980 --> 33:18.980
是否还有数据

33:18.980 --> 33:19.980
这个里面就会有一个

33:19.980 --> 33:21.980
UserInfo的信息

33:21.980 --> 33:22.980
然后这个信息呢

33:22.980 --> 33:23.980
就是我们要获取的

33:23.980 --> 33:24.980
这个相关内容

33:24.980 --> 33:26.980
其实我们拿到这个之后

33:26.980 --> 33:27.980
我们的Lex

33:27.980 --> 33:28.980
就可以做了

33:28.980 --> 33:29.980
因为什么呢

33:29.980 --> 33:30.980
因为我们知道

33:30.980 --> 33:31.980
为哪一个用户

33:31.980 --> 33:32.980
也就是说

33:32.980 --> 33:33.980
当天登录这个用户

33:33.980 --> 33:34.980
来进行相关的

33:34.980 --> 33:36.980
这个文章收藏的

33:36.980 --> 33:37.980
这样一个操作了

33:37.980 --> 33:38.980
这个呢

33:38.980 --> 33:40.980
其实就是可以实现了

33:40.980 --> 33:41.980
好的

33:41.980 --> 33:42.980
那这个呢

33:42.980 --> 33:43.980
就是我们本节课

33:43.980 --> 33:45.980
使用这种

33:45.980 --> 33:46.980
我们账户名

33:46.980 --> 33:47.980
跟密码的形式

33:47.980 --> 33:49.980
来进行一个登录操作

33:49.980 --> 33:50.980
那么下节课呢

33:50.980 --> 33:52.980
我们再来完成一下

33:52.980 --> 33:53.980
通过我们手机号码

33:53.980 --> 33:54.980
跟验证码的形式

33:54.980 --> 33:55.980
来进行一个

33:55.980 --> 33:57.980
登录操作的处理

33:57.980 --> 33:58.980
我们这节课

33:58.980 --> 33:59.980
就到这里

