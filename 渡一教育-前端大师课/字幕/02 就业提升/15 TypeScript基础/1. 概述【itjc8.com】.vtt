WEBVTT

00:00.820 --> 00:03.820
大家好 我是多一教育 微博前辈讲师 元静

00:03.820 --> 00:06.820
这节课呢 咱们继续来学习TS

00:07.820 --> 00:12.820
哎呀 终于啊 终于咱们要学习到TS这么累了

00:12.820 --> 00:19.820
其实累这个概念呢 我每一次讲到这一块呢 心里面都惩惶惩恐

00:19.820 --> 00:24.820
为什么呢 因为累这个概念呢 它涉及到一个思想

00:24.820 --> 00:28.820
叫做 面向对象的思想

00:28.820 --> 00:32.820
要搞清楚这个思想可不简单了 同学们

00:32.820 --> 00:34.820
真的是太不简单了

00:34.820 --> 00:41.820
所以说呢 我每一次讲到累这一块 我也自己在反复的反思研究

00:41.820 --> 00:45.820
该怎么样用什么样的讲法 才能够让大家理解

00:45.820 --> 00:48.820
后来发现呢 我用什么样的讲法都没用

00:48.820 --> 00:52.820
因为这个思想它不是一朝一夕能够建立起来的

00:53.820 --> 00:57.820
我就说我自己吧 我自己 当然我个人比较笨了

00:57.820 --> 01:04.820
我自己的话 我把面向对象这一块 应该算是小幼成就

01:04.820 --> 01:07.820
达到小幼成就这么一个水平的话

01:07.820 --> 01:12.820
我用了多长时间呢 用了三年 真正三年的同学们

01:12.820 --> 01:16.820
所以说 要让我用几节课的时间

01:16.820 --> 01:21.820
让你能够体会到这种思想 它的精髓 它的核心

01:21.820 --> 01:23.820
真的是太难了

01:23.820 --> 01:27.820
但是呢 你们 比如说你以前开发的过程中

01:27.820 --> 01:31.820
有没有用到累呢 有用到 比方说reactor 对吧

01:31.820 --> 01:34.820
我们写过一个内组件 有没有用到对象呢

01:34.820 --> 01:37.820
也平时经常会用 两个大颇号就是一个对象

01:37.820 --> 01:40.820
那能不能说我们以前开发程序

01:40.820 --> 01:44.820
就用的是面向对象思想的 不是的

01:44.820 --> 01:48.820
完全两码式 你用了累 用了对象

01:48.820 --> 01:52.820
对象不代表你拥有了面向对象的思维方式

01:52.820 --> 01:57.820
你写代码的方式呢 比方说你用一些前端框架

01:57.820 --> 02:02.820
都是按照前端框架给你的思维模式来书写代码

02:02.820 --> 02:06.820
而你的思维的切入点并不是面向对象

02:06.820 --> 02:09.820
所以说 这一块呢 我想了又想

02:09.820 --> 02:13.820
我后来决定 在讲这个ts的时候呢

02:13.820 --> 02:17.820
不要去改变啊 至少在基础部分

02:17.820 --> 02:19.820
不要去改变大家的思维方式

02:19.820 --> 02:22.820
因为那一块改造过程呢会有点痛苦

02:22.820 --> 02:25.820
而且呢 现在前端的整个大环境下面呢

02:25.820 --> 02:30.820
面向对象这种思想呢 还没有被前端整个社区

02:30.820 --> 02:33.820
认可下来 还没至少还没有形成一种

02:33.820 --> 02:35.820
一种最佳时间

02:35.820 --> 02:39.820
所以说呢 基于目前这个环境也基于实际情况

02:39.820 --> 02:42.820
咱们在讲这个ts中的内的时候啊

02:42.820 --> 02:44.820
特别是咱们在基础部分啊

02:44.820 --> 02:46.820
咱们现在是ts基础吗

02:46.820 --> 02:48.820
基础部分讲这个内的时候呢

02:48.820 --> 02:51.820
不会涉及到任何的面向对象思想

02:51.820 --> 02:54.820
思想层面完全不涉及

02:54.820 --> 02:57.820
只涉及呢 给大家了解一下ts里边

02:57.820 --> 02:59.820
书写内的一些语法

02:59.820 --> 03:01.820
内我们其实并不陌生

03:01.820 --> 03:03.820
我们写一个Rex的组件

03:03.820 --> 03:05.820
或者是你们自己也见过一些内对吧

03:05.820 --> 03:07.820
通过class关键是来见过一些内

03:07.820 --> 03:10.820
见到这些内之后呢 我们通过nu

03:10.820 --> 03:11.820
这个内 内名

03:11.820 --> 03:13.820
然后加上一些构造函数的参数

03:13.820 --> 03:15.820
就可以创建一个对象了

03:15.820 --> 03:17.820
这个对象里边拥有内的属性

03:17.820 --> 03:21.820
拥有内的方法 这都有了

03:21.820 --> 03:23.820
所以说我们用的它呢 其实并不会陌生

03:23.820 --> 03:26.820
因为这个内呢 本身是ts里面支持的部分

03:26.820 --> 03:29.820
ts加强了一些语法

03:29.820 --> 03:31.820
做了一些语法的增强

03:31.820 --> 03:33.820
因为ts有的东西它肯定要支持

03:33.820 --> 03:35.820
超级嘛 对不对

03:35.820 --> 03:37.820
可选的静态的内雄系统

03:37.820 --> 03:39.820
而且是ts的超级

03:39.820 --> 03:41.820
所以说ts有的内的功能呢

03:41.820 --> 03:43.820
它是全支持的 没有任何问题

03:43.820 --> 03:47.820
不过同时 它会给你加了一些新的语法

03:47.820 --> 03:49.820
让你可以增强内的功能

03:49.820 --> 03:52.820
写起来呢 更加的严谨 更加的舒服

03:52.820 --> 03:56.820
我们只去讨论这一块新增语法的部分

03:56.820 --> 03:57.820
只讨论这一部分

03:57.820 --> 04:00.820
而不去讨论更多的关于

04:00.820 --> 04:02.820
面向对象思想的这一部分

04:02.820 --> 04:04.820
所以说咱们学习内的时候

04:04.820 --> 04:09.820
学习内的时候 基础部分

04:10.820 --> 04:17.820
学习内的时候 仅讨论新增的语法部分

04:17.820 --> 04:19.820
但是新增的语法部分

04:19.820 --> 04:21.820
就是新增了这一块语法

04:21.820 --> 04:26.820
有些语法跟面向对象的思想是紧密相关的

04:26.820 --> 04:29.820
跟面向对象的思想是紧密相关的

04:29.820 --> 04:32.820
比如说抽象内 抽象方法这些

04:32.820 --> 04:36.820
有些语法跟面向对象的思想紧密相关

04:36.820 --> 04:38.820
所以说这一部分的新增语法

04:38.820 --> 04:40.820
我们也不在这节课里面

04:40.820 --> 04:43.820
去做任何的宣讲和讨论

04:43.820 --> 04:44.820
我们只讨论那些

04:44.820 --> 04:46.820
我们非常容易理解

04:46.820 --> 04:47.820
并且在技术部分

04:47.820 --> 04:49.820
我们不是有个项目实战吗

04:49.820 --> 04:53.820
在项目实战中需要拥到的这些语法

04:53.820 --> 04:56.820
我们仅去讨论这些内容

04:56.820 --> 04:59.820
其他的思想部分的内容

04:59.820 --> 05:00.820
咱们留到进节部分

05:00.820 --> 05:02.820
我们来慢慢聊一聊

05:02.820 --> 05:04.820
当然那一块我也不会聊得太深

05:04.820 --> 05:06.820
因为前段时间的大环境

05:06.820 --> 05:08.820
还不太适合

05:08.820 --> 05:10.820
用纯面向对象的思维来进行开发

05:10.820 --> 05:11.820
OK

05:11.820 --> 05:13.820
这里我先把这个问题

05:13.820 --> 05:16.820
我的讲解方式给他说明一下

05:16.820 --> 05:17.820
说明白一下

