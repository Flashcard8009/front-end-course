WEBVTT

00:00.880 --> 00:06.380
OK 咱们最后一个组建就是游戏组建

00:06.880 --> 00:09.380
游戏组建要做什么事呢

00:09.880 --> 00:11.380
咱们游戏组建

00:11.880 --> 00:13.880
这个笔记有点乱

00:13.880 --> 00:16.880
游戏组建它要做的事情就是

00:17.880 --> 00:23.880
提供数据 提供并维护游戏中的数据

00:24.380 --> 00:26.880
就是数据怎么去变化

00:26.880 --> 00:30.380
数据有哪些这就是游戏组建要做的事

00:31.380 --> 00:33.880
也就是说咱们游戏这个组建

00:33.880 --> 00:35.880
它要控制整个游戏的进程

00:36.380 --> 00:38.380
它设计到所有的游戏数据

00:38.380 --> 00:41.880
并且它能够自己能维护游戏数据

00:42.380 --> 00:45.380
所以说这个游戏组建是一个有状态组建

00:45.880 --> 00:48.880
也就是容器组建 有状态组建

00:49.380 --> 00:52.880
好 咱们在这个文念甲里边新建一个组建

00:53.380 --> 00:55.880
叫做游戏组建

00:56.380 --> 00:57.880
TSX

00:58.380 --> 01:01.380
这里面我们把它设置成为一个游戏组建

01:01.380 --> 01:03.880
首先导入React

01:03.880 --> 01:05.380
都是不要忘记了

01:06.380 --> 01:08.880
然后这里导出Class

01:08.880 --> 01:10.880
一个组建 它是个内组建

01:10.880 --> 01:11.880
因为它是有状态的

01:12.880 --> 01:15.880
取个名字就叫做GameCompose

01:16.380 --> 01:18.880
然后计程 计程字哪呢

01:18.880 --> 01:21.880
计程字React.Component

01:21.880 --> 01:22.880
计程字这

01:22.880 --> 01:24.380
按照我们之前的说法

01:24.380 --> 01:26.880
这里是不是应该给一些范祥

01:26.880 --> 01:28.880
对吧 给一些范祥

01:28.880 --> 01:30.880
首先这个范祥的第一个内形

01:30.880 --> 01:32.880
就指的是

01:32.880 --> 01:33.880
它有没有属性

01:33.880 --> 01:35.880
有没有需要传递给它的属性

01:35.880 --> 01:36.880
这个没有

01:36.880 --> 01:37.880
不需要传递任何属性

01:37.880 --> 01:39.880
因此属性这里

01:39.880 --> 01:42.880
然后设置为一个空对象就完事了

01:42.880 --> 01:44.880
然后第二个内形

01:44.880 --> 01:46.880
指的是它的状态

01:46.880 --> 01:48.880
它有哪些状态

01:48.880 --> 01:50.880
我们可以定一个接口

01:50.880 --> 01:52.880
或者是内形别名

01:52.880 --> 01:54.880
来表示这个组建的状态

01:54.880 --> 01:56.880
有哪些东西

01:56.880 --> 01:58.880
interface

01:58.880 --> 02:02.880
这里定名为I state的状态

02:03.880 --> 02:06.880
这里我们比较容易想到的是

02:06.880 --> 02:08.880
它里面有这么一些状态

02:08.880 --> 02:10.880
就是首先是一个

02:10.880 --> 02:11.880
所有的棋子

02:11.880 --> 02:13.880
有哪些棋子

02:13.880 --> 02:14.880
我们棋盘里面

02:14.880 --> 02:16.880
是不是有9×9的格子吗

02:16.880 --> 02:18.880
以后我们要调用

02:18.880 --> 02:19.880
棋盘组建的时候

02:19.880 --> 02:20.880
需要告诉他

02:20.880 --> 02:21.880
我们有哪些棋子

02:21.880 --> 02:23.880
所以说这里面有个属性

02:24.880 --> 02:25.880
棋子

02:25.880 --> 02:27.880
棋子是什么内形呢

02:27.880 --> 02:29.880
跟我们之前写的棋盘对象

02:29.880 --> 02:31.880
棋盘组建是一样的

02:33.880 --> 02:34.880
只不过现在不是属性了

02:34.880 --> 02:35.880
是状态

02:35.880 --> 02:38.880
这是状态的第一个属性

02:38.880 --> 02:40.880
还有什么状态呢

02:40.880 --> 02:42.880
我们可以想一想

02:42.880 --> 02:43.880
看一下这个游戏

02:43.880 --> 02:44.880
这边

02:44.880 --> 02:46.880
还有什么状态

02:46.880 --> 02:48.880
就是当前游戏的进程

02:48.880 --> 02:50.880
你看游戏的进程有这么几种

02:50.880 --> 02:52.880
一个是正在游戏中

02:52.880 --> 02:54.880
双方都在落资

02:54.880 --> 02:55.880
双方都在落资

02:55.880 --> 02:57.880
正在游戏中

02:57.880 --> 02:59.880
一个是黑方胜利

02:59.880 --> 03:01.880
一个是红方胜利

03:01.880 --> 03:02.880
还有一个是平局

03:02.880 --> 03:04.880
有这么一些游戏的进程

03:04.880 --> 03:06.880
游戏的状态

03:06.880 --> 03:07.880
那游戏的状态的话

03:07.880 --> 03:09.880
我也把它写成一个美剧吧

03:09.880 --> 03:10.880
因为这个有可能

03:10.880 --> 03:11.880
其他地方也会用到

03:11.880 --> 03:13.880
我这里再导出一个美剧

03:15.880 --> 03:16.880
赢了

03:16.880 --> 03:18.880
叫做game standards

03:18.880 --> 03:20.880
游戏的状态

03:20.880 --> 03:22.880
游戏的状态有这么几种

03:22.880 --> 03:24.880
一种是

03:24.880 --> 03:26.880
gaming

03:26.880 --> 03:28.880
正在游戏中

03:28.880 --> 03:29.880
打个注射

03:29.880 --> 03:31.880
正在游戏中

03:31.880 --> 03:32.880
然后这个注射最好

03:32.880 --> 03:33.880
最好使用的

03:33.880 --> 03:34.880
怎么打呢

03:34.880 --> 03:35.880
用一个文档注射

03:35.880 --> 03:38.880
叫dark comment

03:38.880 --> 03:41.880
正在游戏中

03:41.880 --> 03:43.880
还有呢

03:43.880 --> 03:45.880
是rid win

03:45.880 --> 03:46.880
红方胜利

03:46.880 --> 03:47.880
打成个注射

03:47.880 --> 03:49.880
红方胜利

03:50.880 --> 03:52.880
然后还有就是黑方胜利

03:52.880 --> 03:54.880
black win

03:54.880 --> 03:56.880
黑方胜利

03:56.880 --> 03:58.880
黑方胜利

03:58.880 --> 03:59.880
好 下面

03:59.880 --> 04:01.880
还有一个是平局

04:01.880 --> 04:03.880
equal

04:03.880 --> 04:05.880
equal

04:05.880 --> 04:07.880
平局

04:07.880 --> 04:08.880
平局的单词

04:08.880 --> 04:09.880
是不是这个单词

04:09.880 --> 04:10.880
不知道

04:10.880 --> 04:11.880
随便吧

04:11.880 --> 04:12.880
就这个equal

04:12.880 --> 04:13.880
好 我们这里写了个美剧

04:13.880 --> 04:15.880
game standards

04:15.880 --> 04:16.880
这边呢

04:16.880 --> 04:18.880
游戏状态

04:18.880 --> 04:21.880
可以使用一个game standards

04:21.880 --> 04:22.880
它的类型呢

04:22.880 --> 04:23.880
就是个美剧

04:23.880 --> 04:26.880
game standards

04:26.880 --> 04:29.880
好 我们目前能够想到的话

04:29.880 --> 04:31.880
先想这么两个属性吧

04:31.880 --> 04:32.880
以后呢

04:32.880 --> 04:34.880
如果还有缺失的话再加

04:34.880 --> 04:35.880
好 这里

04:35.880 --> 04:36.880
跟他约束一下

04:36.880 --> 04:38.880
约束为iState

04:38.880 --> 04:40.880
就是咱们开发过程中

04:40.880 --> 04:41.880
有些事情呢

04:41.880 --> 04:43.880
可能不是一开始就能想到的

04:43.880 --> 04:44.880
我们想到哪些呢

04:44.880 --> 04:46.880
再往里面去加

04:46.880 --> 04:47.880
好 这里面写上

04:47.880 --> 04:48.880
既然是内组件

04:48.880 --> 04:49.880
它得有个函数吧

04:49.880 --> 04:50.880
random

04:50.880 --> 04:51.880
有这么一个函数

04:51.880 --> 04:52.880
这个函数呢

04:52.880 --> 04:53.880
需要返回

04:53.880 --> 04:55.880
需要返回返回啥呢

04:55.880 --> 04:57.880
返回

04:57.880 --> 04:59.880
一个div吧

04:59.880 --> 05:00.880
再取个内名

05:00.880 --> 05:02.880
实话实说

05:02.880 --> 05:05.880
这个容器组件的话

05:05.880 --> 05:06.880
一般不给内名

05:06.880 --> 05:08.880
一般不涉及到任何的样式

05:08.880 --> 05:10.880
一般不涉及到任何的样式

05:10.880 --> 05:11.880
那我就算了吧

05:11.880 --> 05:12.880
不加吧

05:12.880 --> 05:13.880
甚至我连div都可以不要

05:13.880 --> 05:14.880
用一个空解点

05:14.880 --> 05:15.880
用一个空解点

05:16.880 --> 05:18.880
到时候有个样式

05:18.880 --> 05:19.880
居中怎么办呢

05:19.880 --> 05:21.880
算了还是个加上吧

05:21.880 --> 05:22.880
按理说

05:22.880 --> 05:23.880
我先给大家说一下

05:23.880 --> 05:25.880
严格来说的话

05:25.880 --> 05:27.880
容器组件是不能设置的样式的

05:27.880 --> 05:29.880
那如果你这里有样式怎么办呢

05:29.880 --> 05:30.880
你还要继续分化

05:30.880 --> 05:33.880
把这个东西组成一个展示组件

05:33.880 --> 05:35.880
它只接受一些属性作为数据

05:35.880 --> 05:37.880
然后再做一个组件

05:37.880 --> 05:38.880
给它提供数据

05:38.880 --> 05:40.880
按理严格来说

05:40.880 --> 05:41.880
容器组件是不能写样式的

05:41.880 --> 05:43.880
但是我们不用去写那么麻烦了

05:43.880 --> 05:45.880
因为毕竟是一个很小的项目

05:46.880 --> 05:48.880
这里写了这么一个div

05:48.880 --> 05:50.880
div里面有哪些东西呢

05:52.880 --> 05:53.880
首先有一个棋盘

05:53.880 --> 05:54.880
对吧

05:54.880 --> 05:55.880
有一个棋盘

05:55.880 --> 05:57.880
我们写上一个board

05:58.880 --> 05:59.880
board

06:00.880 --> 06:01.880
board

06:01.880 --> 06:02.880
comp

06:02.880 --> 06:03.880
导入进来

06:03.880 --> 06:04.880
有个棋盘

06:04.880 --> 06:07.880
棋盘里边给它传什么东西呢

06:07.880 --> 06:09.880
要传两个属像

06:09.880 --> 06:11.880
一个属像是棋子

06:11.880 --> 06:13.880
它有这么一个属像

06:13.880 --> 06:14.880
要传递给它

06:14.880 --> 06:15.880
有哪些棋子呢

06:15.880 --> 06:16.880
棋子来自于哪

06:16.880 --> 06:19.880
棋子就来自于当前状态

06:19.880 --> 06:21.880
当前状态里面的切式

06:21.880 --> 06:22.880
Z step

06:22.880 --> 06:23.880
现在就提示了

06:23.880 --> 06:24.880
切式

06:24.880 --> 06:25.880
传递过去

06:25.880 --> 06:28.880
这是棋子传递给它

06:28.880 --> 06:30.880
然后还有什么传递给它呢

06:30.880 --> 06:32.880
还有一个game stand

06:32.880 --> 06:34.880
is game over

06:35.880 --> 06:37.880
游戏是否结束

06:37.880 --> 06:39.880
那么大家想一想

06:39.880 --> 06:42.880
游戏是否结束

06:42.880 --> 06:45.880
什么情况下表示游戏结束了

06:45.880 --> 06:48.880
什么情况下表示游戏结束了

06:48.880 --> 06:50.880
你想一想

06:50.880 --> 06:52.880
我们的状态里面有这么一个属像

06:52.880 --> 06:54.880
叫做游戏状态

06:54.880 --> 06:56.880
游戏状态的值有这么多

06:56.880 --> 06:58.880
有这么多值

06:58.880 --> 07:02.880
什么情况下表示游戏结束了

07:02.880 --> 07:04.880
什么情况下呢

07:04.880 --> 07:08.880
只要它的状态值不等于这个

07:08.880 --> 07:10.880
是不是有游戏结束了

07:10.880 --> 07:12.880
只要它的状态值不是在

07:12.880 --> 07:13.880
正在进行中

07:13.880 --> 07:14.880
正在游戏中

07:14.880 --> 07:15.880
那么它表示游戏结束

07:15.880 --> 07:16.880
所以说这里呢

07:16.880 --> 07:17.880
我给它复制的时候

07:17.880 --> 07:18.880
我可以这样复制

07:18.880 --> 07:20.880
Z step

07:20.880 --> 07:22.880
is game over

07:25.880 --> 07:27.880
game standards

07:27.880 --> 07:30.880
是不是不等于

07:30.880 --> 07:32.880
不等于game standards

07:32.880 --> 07:35.880
这个每一句的is game

07:35.880 --> 07:37.880
给你

07:37.880 --> 07:39.880
是不是不等于正在游戏中

07:39.880 --> 07:40.880
如果不等于这个值

07:40.880 --> 07:41.880
说明游戏已经结束了

07:41.880 --> 07:43.880
想想是不是个道理

07:43.880 --> 07:44.880
好

07:44.880 --> 07:46.880
我可以把这个表达式的判定结果

07:46.880 --> 07:48.880
复制给is game over

07:48.880 --> 07:49.880
他们来保持一下

07:49.880 --> 07:51.880
这里app里面

07:51.880 --> 07:53.880
我们把它把游戏导入进来

07:53.880 --> 07:54.880
这个地方也不要了

07:54.880 --> 07:56.880
把游戏导入进来

07:56.880 --> 07:58.880
这个地方不要了

07:58.880 --> 08:00.880
我们只需要导入game

08:00.880 --> 08:02.880
这个主键就行了

08:02.880 --> 08:05.880
game comp

08:05.880 --> 08:07.880
它没有任何属性需要传递

08:07.880 --> 08:08.880
保存一下

08:08.880 --> 08:10.880
这边来看一下

08:10.880 --> 08:11.880
这边爆错了

08:11.880 --> 08:13.880
为什么爆错了

08:13.880 --> 08:15.880
这个错误经常见到的

08:15.880 --> 08:16.880
它说什么

08:16.880 --> 08:18.880
说我们在读一个属像

08:18.880 --> 08:20.880
从大陆中去读一个属像

08:20.880 --> 08:22.880
好久没看到过这个错误了

08:22.880 --> 08:24.880
在TS里面很少出现这种错误

08:24.880 --> 08:26.880
因为有内询检查

08:26.880 --> 08:27.880
那现在是怎么回事呢

08:27.880 --> 08:28.880
现在是呢

08:28.880 --> 08:30.880
我们虽然约束了

08:30.880 --> 08:33.880
它的状态的内询

08:33.880 --> 08:35.880
但是状态有没有复辞

08:35.880 --> 08:37.880
状态有没有复辞

08:37.880 --> 08:38.880
状态是不是没有复辞

08:38.880 --> 08:39.880
它没有一个初始指

08:39.880 --> 08:40.880
所以说它爆错了

08:40.880 --> 08:42.880
因此在这里

08:42.880 --> 08:44.880
就是我们在本节课的

08:44.880 --> 08:47.880
第二小节的时候也讲过

08:47.880 --> 08:50.880
所以说我们还需要在这里写上一个stat

08:50.880 --> 08:51.880
跟以前一样

08:51.880 --> 08:53.880
跟之前咱们在第二小节里面

08:53.880 --> 08:54.880
讲的东西一样

08:54.880 --> 08:55.880
这里约束一下

08:55.880 --> 08:57.880
Istat

08:57.880 --> 08:59.880
给它复辞一些初始的

08:59.880 --> 09:01.880
初始的状态值

09:01.880 --> 09:02.880
哪些初始的状态值呢

09:02.880 --> 09:04.880
切切

09:04.880 --> 09:07.880
复辞为一个

09:07.880 --> 09:09.880
先复辞为一个空数书

09:09.880 --> 09:13.880
然后再写一个game standards

09:13.880 --> 09:15.880
然后复辞为什么呢

09:15.880 --> 09:19.880
复辞为一个game standards

09:19.880 --> 09:20.880
ok

09:20.880 --> 09:22.880
这样子来写

09:22.880 --> 09:23.880
第二

09:23.880 --> 09:25.880
一开始是游戏正在进行中

09:25.880 --> 09:26.880
对吧

09:26.880 --> 09:27.880
一开始是游戏正在进行中

09:27.880 --> 09:29.880
最开始的状态

09:29.880 --> 09:30.880
给它复辞一个初始指

09:30.880 --> 09:32.880
当然那个数组里边

09:32.880 --> 09:33.880
是不是要写东西

09:33.880 --> 09:35.880
要写九个旗子

09:35.880 --> 09:38.880
其实如果想要这里多想一下的话

09:38.880 --> 09:40.880
多想一下的话

09:40.880 --> 09:42.880
这里会导致后边有重复带吗

09:42.880 --> 09:43.880
就什么意思呢

09:43.880 --> 09:46.880
如果你直接在那个数组里边

09:46.880 --> 09:47.880
我这样子写

09:47.880 --> 09:49.880
不是九个旗子吗

09:49.880 --> 09:51.880
第一个旗子

09:51.880 --> 09:52.880
是吧

09:54.880 --> 09:55.880
第二个旗子

09:55.880 --> 09:56.880
首先写的很烦

09:56.880 --> 09:57.880
这是第一个问题

09:57.880 --> 09:58.880
烦倒色

09:58.880 --> 09:59.880
小事

09:59.880 --> 10:01.880
我们写九个

10:01.880 --> 10:02.880
两个

10:02.880 --> 10:03.880
三个

10:03.880 --> 10:04.880
四个

10:04.880 --> 10:05.880
五个

10:05.880 --> 10:06.880
六个

10:06.880 --> 10:07.880
七个

10:07.880 --> 10:08.880
八个

10:08.880 --> 10:09.880
九个

10:09.880 --> 10:10.880
这样子保存一下

10:10.880 --> 10:12.880
当时一开始没有什么问题

10:12.880 --> 10:14.880
最开始的时候没有什么问题

10:14.880 --> 10:15.880
但是呢

10:15.880 --> 10:16.880
这样子做

10:16.880 --> 10:17.880
会有几个问题

10:17.880 --> 10:18.880
第一个

10:18.880 --> 10:19.880
我写的很烦

10:19.880 --> 10:21.880
如果将来我要把这个程序扩展一下

10:21.880 --> 10:23.880
扩展成十成一十

10:23.880 --> 10:24.880
那我得写多少个

10:24.880 --> 10:25.880
写的是不是挺烦的

10:25.880 --> 10:27.880
这是第一个问题

10:27.880 --> 10:29.880
然后呢之后会有这么一个功能

10:29.880 --> 10:30.880
重新开始

10:30.880 --> 10:31.880
重新开始

10:31.880 --> 10:33.880
是不是要把重新设置到最初的状态

10:33.880 --> 10:34.880
对不对

10:34.880 --> 10:37.880
需要把它设置到最最初的状态

10:37.880 --> 10:38.880
因此呢

10:38.880 --> 10:39.880
这种写法呢

10:39.880 --> 10:40.880
就不太合适了

10:40.880 --> 10:42.880
因为一会我要重置的时候

10:42.880 --> 10:43.880
我又得写一遍

10:43.880 --> 10:44.880
又得写一遍

10:44.880 --> 10:45.880
所以说这里一块

10:45.880 --> 10:46.880
我们先给它

10:46.880 --> 10:48.880
就付一个空数组

10:48.880 --> 10:50.880
我们专门写一个函数

10:51.880 --> 10:53.880
比方说把它叫做init

10:53.880 --> 10:54.880
初实化

10:55.880 --> 10:58.880
再写个初实化数据

10:59.880 --> 11:01.880
我们专门的写一个函数

11:01.880 --> 11:03.880
来对游戏完成初实化

11:03.880 --> 11:05.880
那么这个函数里面做啥呢

11:06.880 --> 11:07.880
这么一件事

11:07.880 --> 11:08.880
就是

11:09.880 --> 11:11.880
set state

11:12.880 --> 11:14.880
设置状态

11:14.880 --> 11:15.880
有哪些状态要设置

11:15.880 --> 11:16.880
一个是切实

11:16.880 --> 11:18.880
就是回到最初的状态

11:18.880 --> 11:19.880
这是个数组

11:19.880 --> 11:21.880
好这个数组里面有多少箱呢

11:21.880 --> 11:23.880
我们可以写个循环在这里

11:23.880 --> 11:24.880
比方说在这里面

11:24.880 --> 11:26.880
我计定一个变量

11:26.880 --> 11:27.880
AR

11:27.880 --> 11:30.880
它类型是chase type的数组

11:30.880 --> 11:32.880
一开始是个空数组

11:32.880 --> 11:34.880
然后我循环九次

11:35.880 --> 11:36.880
那么到时候

11:36.880 --> 11:39.880
将来我要做很多很多的棋子的话

11:39.880 --> 11:41.880
我就这里只需要改一下

11:41.880 --> 11:43.880
循环的次数就完事了

11:43.880 --> 11:45.880
数组里面不断的去添加一下

11:45.880 --> 11:46.880
添加什么

11:46.880 --> 11:47.880
chase

11:47.880 --> 11:48.880
推出的状态

11:48.880 --> 11:50.880
它一定是空的

11:51.880 --> 11:52.880
好写好这么一个数组

11:52.880 --> 11:54.880
这里直接把这个数组扔过去

11:55.880 --> 11:56.880
这是第一个署项

11:56.880 --> 11:58.880
给它设置值

11:58.880 --> 12:00.880
好第二个署项

12:01.880 --> 12:02.880
第二个署项

12:02.880 --> 12:05.880
那么第二个署项是games standards

12:05.880 --> 12:07.880
games standards

12:07.880 --> 12:08.880
设置还是一样的

12:08.880 --> 12:10.880
设置为games standards

12:10.880 --> 12:12.880
这个每一句里面的gaming

12:12.880 --> 12:14.880
把它设置为正在游戏中

12:14.880 --> 12:16.880
之后我只要一调用这个函数

12:17.880 --> 12:19.880
之后我只要一调用这个函数

12:19.880 --> 12:20.880
就可以完成

12:20.880 --> 12:22.880
整个数组的初始化

12:22.880 --> 12:23.880
那么最开始的时候

12:23.880 --> 12:25.880
这个函数什么时候调用呢

12:25.880 --> 12:26.880
最开始

12:26.880 --> 12:27.880
这个函数什么时候调用

12:27.880 --> 12:28.880
我们可以

12:29.880 --> 12:32.880
在一个生命周期函数里面调用

12:32.880 --> 12:33.880
生命周期函数

12:33.880 --> 12:34.880
这里是有智能提示的

12:34.880 --> 12:35.880
为什么可以有智能提示

12:35.880 --> 12:37.880
因为这里有了内容检查

12:37.880 --> 12:38.880
还继承了负类

12:38.880 --> 12:40.880
负类里面是有这个函数的

12:40.880 --> 12:44.880
叫做component did mount

12:45.880 --> 12:47.880
当这个组建完成了

12:47.880 --> 12:48.880
签入之后

12:48.880 --> 12:50.880
签入到页面上之后

12:50.880 --> 12:52.880
它运行的生命周期函数

12:52.880 --> 12:53.880
在这个函数里面

12:53.880 --> 12:56.880
我们可以使用this init

12:56.880 --> 12:58.880
完成初始化

12:59.880 --> 13:00.880
保存一下

13:03.380 --> 13:04.380
你会发现

13:04.380 --> 13:05.380
这个格子也出来了

13:06.380 --> 13:08.380
这是关于这一部分

13:08.380 --> 13:09.380
关于这一部分

13:09.380 --> 13:10.380
初始化数据

13:11.380 --> 13:12.380
好了

13:12.380 --> 13:13.380
现在格子出来了过后

13:13.380 --> 13:14.380
接下来

13:14.380 --> 13:15.380
我们先

13:15.380 --> 13:16.380
还有很多事情要做

13:16.380 --> 13:18.380
首先第一件事情

13:18.380 --> 13:20.380
点击过后我做啥

13:20.380 --> 13:22.380
它这里面有个事件

13:22.380 --> 13:24.380
有个事件

13:24.380 --> 13:26.380
这个棋盘里面有unclick事件

13:26.380 --> 13:27.380
当我们点击过后

13:27.380 --> 13:29.380
它会传一个东西过来

13:29.380 --> 13:30.380
我们指这个事件

13:30.380 --> 13:31.380
有的时候忘了没关系

13:31.380 --> 13:32.380
它会告诉我

13:32.380 --> 13:34.380
它会传一个下标进来

13:34.380 --> 13:35.380
OK

13:35.380 --> 13:36.380
那我得到这个下标

13:36.380 --> 13:37.380
这个下标

13:37.380 --> 13:38.380
我拿到

13:38.380 --> 13:39.380
拿到过后我要做啥呢

13:39.380 --> 13:40.380
这里

13:40.380 --> 13:41.380
我拿到这个下标

13:41.380 --> 13:42.380
过后

13:42.380 --> 13:43.380
我得做件事吧

13:43.380 --> 13:44.380
我就做啥呢

13:45.380 --> 13:46.380
比方说我这里

13:46.380 --> 13:47.380
专门写个函数

13:47.380 --> 13:48.380
来处理这个问题

13:49.380 --> 13:50.380
handle

13:50.380 --> 13:51.380
handle

13:53.380 --> 13:55.380
chase click

13:55.380 --> 13:59.380
处理棋子被点击的事件

13:59.380 --> 14:00.380
它需要一个参数

14:00.380 --> 14:01.380
这个参数呢

14:01.380 --> 14:03.380
就是一个下标

14:03.380 --> 14:05.380
或者是index都可以

14:05.380 --> 14:06.380
你自己命名字

14:06.380 --> 14:07.380
假如它有这么一个函数

14:07.380 --> 14:09.380
当然它是一个Number类型

14:10.380 --> 14:11.380
好

14:11.380 --> 14:13.380
这边我就可以用这种方式

14:13.380 --> 14:14.380
因为这个代码

14:14.380 --> 14:15.380
可能

14:15.380 --> 14:16.380
还是有点数量的

14:16.380 --> 14:18.380
因此我把单独提成一个函数来做

14:18.380 --> 14:19.380
z

14:20.380 --> 14:22.380
handle click

14:22.380 --> 14:24.380
注意要bend this

14:24.380 --> 14:25.380
这样子呢

14:25.380 --> 14:28.380
才能解决z这个

14:28.380 --> 14:30.380
z这个变量的指向

14:31.380 --> 14:32.380
好

14:32.380 --> 14:34.380
这里边我要做啥

14:34.380 --> 14:35.380
这是处理什么

14:35.380 --> 14:36.380
打算注册

14:36.380 --> 14:37.380
这是处理

14:39.380 --> 14:43.380
处理棋子的点击事件

14:44.380 --> 14:46.380
并且按照我们之前

14:46.380 --> 14:47.380
组建的写法

14:47.380 --> 14:49.380
当这个函数运行的时候

14:49.380 --> 14:51.380
一定是处于这种情况

14:51.380 --> 14:53.380
一定是一个前提条件

14:53.380 --> 14:54.380
这个函数运行的时候

14:54.380 --> 14:55.380
一定有个前提条件

14:57.380 --> 15:01.380
如果该函数运行

15:01.380 --> 15:03.380
说明游戏

15:04.380 --> 15:06.380
说明游戏没有结束

15:07.380 --> 15:09.380
结束它是不会出发这个事件的

15:09.380 --> 15:11.380
我们之前已经写好了

15:12.380 --> 15:15.380
第二个点击的位置

15:15.380 --> 15:17.380
没有棋子

15:17.380 --> 15:19.380
还有这么两个前提条件

15:19.380 --> 15:21.380
那么这个函数做啥呢

15:22.380 --> 15:24.380
你想想这个函数要做啥

15:24.380 --> 15:27.380
我们其实点击过后

15:27.380 --> 15:29.380
你看一下实际上做的一件事情

15:29.380 --> 15:30.380
本来每一个位置

15:30.380 --> 15:32.380
它的状态是空的

15:32.380 --> 15:34.380
当我点击这个位置的时候

15:34.380 --> 15:35.380
它变成黑色

15:35.380 --> 15:37.380
下一次在点击的时候变成红色

15:37.380 --> 15:39.380
下一次在点击的时候变成黑色

15:39.380 --> 15:40.380
对吧

15:40.380 --> 15:41.380
我们就做这么一件事情

15:41.380 --> 15:42.380
对不对

15:42.380 --> 15:43.380
还有什么事情要做

15:43.380 --> 15:44.380
没有什么事情要做的

15:44.380 --> 15:45.380
就表示

15:45.380 --> 15:47.380
我们其实要改变的是啥

15:47.380 --> 15:48.380
改变的

15:48.380 --> 15:50.380
是不是就是这个数组

15:50.380 --> 15:52.380
改变的数组的某一项

15:52.380 --> 15:53.380
改变数组哪一项

15:53.380 --> 15:55.380
是不是就这一项

15:55.380 --> 15:57.380
它把这个下标已经传过来了

15:57.380 --> 15:58.380
我们其实就是

15:58.380 --> 15:59.380
根据这个下标

15:59.380 --> 16:01.380
去改变这个数组的某一项

16:01.380 --> 16:02.380
ok

16:02.380 --> 16:04.380
那么我们知道了这一点过后

16:04.380 --> 16:05.380
那么现在就是

16:05.380 --> 16:07.380
我实际上要做啥呢

16:07.380 --> 16:09.380
实际上我们先写个伟大码再说

16:09.380 --> 16:11.380
实际上我们是要改变这个

16:11.380 --> 16:13.380
这里面通过下标

16:13.380 --> 16:15.380
通过这个下标

16:15.380 --> 16:17.380
去给它付一个值

16:17.380 --> 16:18.380
当然

16:18.380 --> 16:20.380
到时候具体写的时候不是这样的写法

16:20.380 --> 16:22.380
你不能直接给那个

16:22.380 --> 16:23.380
状态去进行更干

16:23.380 --> 16:25.380
应该是用set state

16:25.380 --> 16:27.380
关键是我们先把这个问题想通

16:27.380 --> 16:29.380
我付啥值

16:29.380 --> 16:31.380
我付一个什么样的值

16:32.380 --> 16:34.380
这个问题是不是

16:34.380 --> 16:36.380
少了一个数据

16:36.380 --> 16:39.380
我下一颗值到底是什么颜色

16:39.380 --> 16:41.380
它少了这么一个数据

16:41.380 --> 16:42.380
ok 它少了这个数据

16:42.380 --> 16:43.380
再加上呗

16:43.380 --> 16:44.380
好 再加上一个数据

16:44.380 --> 16:46.380
状态里边还应该有一个数据

16:46.380 --> 16:48.380
就是next

16:48.380 --> 16:49.380
chase

16:49.380 --> 16:51.380
下一颗落值

16:51.380 --> 16:53.380
是什么样的颜色

16:53.380 --> 16:54.380
是黑色还是红色

16:54.380 --> 16:56.380
我们要把这个东西告诉啥

16:56.380 --> 16:58.380
它什么类型

16:58.380 --> 16:59.380
什么类型

16:59.380 --> 17:01.380
是不是还是一个

17:01.380 --> 17:04.380
chase type

17:04.380 --> 17:06.380
是不是这个类型

17:06.380 --> 17:08.380
讲一讲是不是这个类型

17:08.380 --> 17:10.380
如果是这个类型的话

17:10.380 --> 17:12.380
这个类型里面是不是一个囊

17:12.380 --> 17:14.380
是不是一个囊

17:14.380 --> 17:15.380
看一下

17:15.380 --> 17:16.380
这个类型里面是不是一个

17:16.380 --> 17:18.380
没有落值

17:18.380 --> 17:20.380
是有这么一种情况的

17:20.380 --> 17:22.380
是有这么一种情况的

17:22.380 --> 17:23.380
所以说

17:23.380 --> 17:25.380
如果你直接写这么一个类型的话

17:25.380 --> 17:27.380
会要出问题的

17:27.380 --> 17:28.380
它是要出问题的

17:28.380 --> 17:31.380
因为它里面是没有这个东西的

17:32.380 --> 17:33.380
没有这个东西的

17:33.380 --> 17:34.380
因为下一颗落值

17:34.380 --> 17:35.380
要么是红色

17:35.380 --> 17:36.380
要么是黑色

17:36.380 --> 17:37.380
它不可能有这个东西

17:37.380 --> 17:39.380
不可能有浪这个东西

17:39.380 --> 17:40.380
所以说呢

17:40.380 --> 17:42.380
这里怎么弄呢

17:42.380 --> 17:45.380
你尝试了这样子写一下呢

17:45.380 --> 17:47.380
约的

17:47.380 --> 17:50.380
这里有几种做法

17:50.380 --> 17:51.380
black

17:51.380 --> 17:53.380
使用联合类型

17:53.380 --> 17:54.380
它要么取这个籽

17:54.380 --> 17:55.380
要么取这个籽

17:55.380 --> 17:57.380
不可能有其他情况了

17:57.380 --> 17:58.380
你看一下

17:58.380 --> 17:59.380
那像现在的情况

17:59.380 --> 18:00.380
就这样子写了

18:00.380 --> 18:02.380
要么取这个籽

18:02.380 --> 18:03.380
要么取这个籽

18:03.380 --> 18:04.380
OK

18:04.380 --> 18:05.380
这是第一种写法

18:05.380 --> 18:06.380
第二种写法呢

18:06.380 --> 18:08.380
是你再去做一个枚具

18:08.380 --> 18:09.380
再去做一个枚具

18:09.380 --> 18:10.380
名字就叫做

18:10.380 --> 18:12.380
名字就叫做

18:12.380 --> 18:14.380
那个是切实

18:14.380 --> 18:15.380
都可以

18:15.380 --> 18:16.380
或者叫做

18:16.380 --> 18:18.380
就叫那个是切实吧

18:18.380 --> 18:19.380
那个是切实

18:19.380 --> 18:20.380
下一颗纸

18:20.380 --> 18:21.380
到底是什么颜色

18:21.380 --> 18:22.380
还在做个类型

18:22.380 --> 18:23.380
都无所谓

18:23.380 --> 18:24.380
那么这个类型

18:24.380 --> 18:25.380
做的时候呢

18:25.380 --> 18:26.380
主要是说明一个知识点

18:26.380 --> 18:27.380
这个枚具呢

18:27.380 --> 18:28.380
它只有两个

18:28.380 --> 18:29.380
一个是红的

18:29.380 --> 18:31.380
一个是黑的

18:31.380 --> 18:33.380
但是这里会有一个问题

18:33.380 --> 18:34.380
那你想一想

18:34.380 --> 18:35.380
这个东西

18:35.380 --> 18:36.380
跟这个东西

18:36.380 --> 18:37.380
逻辑上是不是一个意思

18:37.380 --> 18:38.380
是不是一个意思

18:38.380 --> 18:40.380
那肯定是一个意思吧

18:40.380 --> 18:41.380
它

18:41.380 --> 18:42.380
它一个意思

18:42.380 --> 18:43.380
它

18:43.380 --> 18:44.380
它一个意思

18:44.380 --> 18:46.380
那么既然是

18:46.380 --> 18:47.380
一个意思

18:47.380 --> 18:49.380
它们的纸一不一样

18:49.380 --> 18:51.380
现在是不一样的

18:51.380 --> 18:52.380
你看这里是零

18:52.380 --> 18:53.380
一

18:53.380 --> 18:54.380
二

18:54.380 --> 18:55.380
这里是零

18:55.380 --> 18:56.380
一

18:56.380 --> 18:57.380
它们的纸是不一样的

18:57.380 --> 18:58.380
它们的纸做成一样呢

18:58.380 --> 18:59.380
这样的纸

18:59.380 --> 19:01.380
枚具是可以这样写的

19:01.380 --> 19:05.140
切实

19:05.140 --> 19:06.140
Type

19:06.140 --> 19:07.140
Black

19:07.140 --> 19:08.140
ok

19:08.140 --> 19:09.140
那么这样子的话

19:09.140 --> 19:10.140
就把两个纸对应起来了

19:10.140 --> 19:11.140
这边一边

19:11.140 --> 19:12.140
它的真实的纸一边

19:12.140 --> 19:13.140
这边又可以跟这边

19:13.140 --> 19:15.140
那么这边呢

19:15.140 --> 19:16.140
就可以使用这个枚具类型了

19:16.140 --> 19:17.140
这边就可以使用

19:17.140 --> 19:18.140
那个枚具类型

19:18.140 --> 19:20.140
当然这是两种做法

19:20.140 --> 19:21.140
我们选择

19:21.140 --> 19:22.140
第一种吧

19:22.140 --> 19:23.140
选择第一种

19:23.140 --> 19:24.140
第一种要简单一点

19:24.140 --> 19:25.140
好

19:25.140 --> 19:26.140
这是这个点

19:26.140 --> 19:27.140
我给大家说明

19:27.140 --> 19:28.140
好

19:28.140 --> 19:29.140
那么这么一个属相了

19:29.140 --> 19:30.140
那么自然而呢

19:30.140 --> 19:32.140
这个地方初始值

19:32.140 --> 19:34.140
是不是得有一个

19:34.140 --> 19:35.140
next

19:35.140 --> 19:36.140
切实

19:36.140 --> 19:37.140
默认值呢

19:37.140 --> 19:38.140
是什么

19:38.140 --> 19:39.140
默认值是

19:39.140 --> 19:41.140
切实

19:41.140 --> 19:42.140
Type

19:42.140 --> 19:44.140
None

19:44.140 --> 19:45.140
你看一下

19:45.140 --> 19:46.140
能不能复制None

19:46.140 --> 19:47.140
它就不能复制None了

19:47.140 --> 19:49.140
因为使用了联合类型

19:49.140 --> 19:50.140
要么复制为Red

19:50.140 --> 19:51.140
要么复制为Black

19:51.140 --> 19:53.140
默认一开始

19:53.140 --> 19:55.140
下一颗纸是黑方優先

19:55.140 --> 19:57.140
假设是黑方優先

19:57.140 --> 19:59.140
如果你要是红方優先的话

19:59.140 --> 20:00.140
你这里就写Red

20:00.140 --> 20:01.140
同样的

20:01.140 --> 20:02.140
这里改了过后

20:02.140 --> 20:03.140
音列车里面要改一下

20:03.140 --> 20:06.140
到时候初始化数据还原的时候呢

20:06.140 --> 20:08.140
就把它还原成一样的情况

20:08.140 --> 20:09.140
next切实

20:09.140 --> 20:11.140
把它复制为

20:12.140 --> 20:13.140
叫什么

20:13.140 --> 20:14.140
切实

20:14.140 --> 20:15.140
Type

20:15.140 --> 20:16.140
Black

20:16.140 --> 20:17.140
好

20:17.140 --> 20:18.140
黑方優先

20:19.140 --> 20:21.140
那么现在呢

20:21.140 --> 20:22.140
有了这个东西过后

20:22.140 --> 20:23.140
我们再来看这里

20:23.140 --> 20:24.140
怎么来处理

20:24.140 --> 20:26.140
给它复制为啥呢

20:26.140 --> 20:28.140
你觉得应该处理为啥

20:28.140 --> 20:30.140
我们要做的是

20:30.140 --> 20:31.140
点一下的时候

20:31.140 --> 20:32.140
比方说先

20:32.140 --> 20:33.140
我们再重新开始啊

20:33.140 --> 20:35.140
一开始是黑方

20:35.140 --> 20:36.140
线落纸

20:36.140 --> 20:37.140
这个数组里面

20:37.140 --> 20:40.140
每一项都是None

20:40.140 --> 20:41.140
切实TypeNone

20:41.140 --> 20:44.140
都是这个东西

20:44.140 --> 20:45.140
都是这个东西

20:45.140 --> 20:46.140
当我点一下的时候

20:46.140 --> 20:47.140
会产生一个下标

20:47.140 --> 20:49.140
比方说点这一下

20:49.140 --> 20:51.140
这一项会产生一个下标

20:51.140 --> 20:53.140
那么我要做的事情就是

20:53.140 --> 20:54.140
把这个数组

20:54.140 --> 20:56.140
下标为这个值的数据

20:56.140 --> 20:58.140
改成啥

20:58.140 --> 21:00.140
改成next切实

21:00.140 --> 21:02.140
改成这个东西

21:02.140 --> 21:03.140
下一个是黑色

21:03.140 --> 21:04.140
我就改成黑色

21:04.140 --> 21:05.140
下一个是红色

21:05.140 --> 21:06.140
我就改成红色

21:06.140 --> 21:08.140
因此这里要做的事情

21:08.140 --> 21:10.140
实际上就把它复制为啥

21:10.140 --> 21:11.140
复制为

21:12.140 --> 21:14.140
next切实

21:14.140 --> 21:16.140
你想想是不是这个道理

21:16.140 --> 21:17.140
对不对

21:17.140 --> 21:18.140
这个道理吧

21:18.140 --> 21:19.140
好

21:19.140 --> 21:20.140
但是你不应该这样子写

21:20.140 --> 21:22.140
不应该这样子去写带嘛

21:23.140 --> 21:24.140
react里面

21:24.140 --> 21:27.140
它不建议你直接去改变

21:27.140 --> 21:28.140
它的数据

21:28.140 --> 21:29.140
State里面的数据

21:29.140 --> 21:34.140
让你使用setState来改变数据

21:34.140 --> 21:35.140
换句话说呢

21:35.140 --> 21:37.140
它认为react里面

21:37.140 --> 21:38.140
认为State这个东西

21:38.140 --> 21:39.140
应该保持

21:39.140 --> 21:41.140
应该是一个不变的对象

21:41.140 --> 21:43.140
这个对象要保持不变

21:43.140 --> 21:44.140
你不能直接复制

21:44.140 --> 21:45.140
所以说呢

21:45.140 --> 21:47.140
我建议大家这里这样做

21:47.140 --> 21:49.140
就是大家以前写react的时候

21:49.140 --> 21:51.140
应该是知道这个

21:51.140 --> 21:52.140
是长进的对吧

21:52.140 --> 21:54.140
你先用一个数据

21:54.140 --> 21:55.140
先用一个数据

21:55.140 --> 21:57.140
比方说切实

21:58.140 --> 21:59.140
这个数据呢

21:59.140 --> 22:02.140
把原来State里面的数据复制过来

22:03.140 --> 22:04.140
切实

22:04.140 --> 22:05.140
把原来的东西复制过来

22:05.140 --> 22:07.140
通过这种方式展开运算幅

22:07.140 --> 22:09.140
把数据原来的东西复制过来

22:09.140 --> 22:11.140
复制到新数据里面

22:11.140 --> 22:13.140
然后去改变新数据里面

22:13.140 --> 22:14.140
这一项

22:14.140 --> 22:15.140
切实

22:15.140 --> 22:16.140
改变它哪一项

22:16.140 --> 22:17.140
应这个设

22:17.140 --> 22:18.140
下标

22:18.140 --> 22:19.140
然后

22:19.140 --> 22:21.140
给它复制为

22:21.140 --> 22:22.140
next切实

22:22.140 --> 22:23.140
好

22:23.140 --> 22:25.140
新数据就是我们最终

22:25.140 --> 22:27.140
奇葩里面应该出现了结果

22:27.140 --> 22:28.140
好

22:28.140 --> 22:30.140
然后再使用

22:30.140 --> 22:32.140
使用this

22:33.140 --> 22:35.140
setState

22:35.140 --> 22:37.140
再把新数据复制回去

22:39.140 --> 22:40.140
就直接这样

22:42.140 --> 22:43.140
对吧

22:44.140 --> 22:46.140
这里没有进行约束

22:46.140 --> 22:47.140
没有进行约束

22:47.140 --> 22:48.140
约束一下

22:48.140 --> 22:50.140
它这里推断出来是 any 的一项的数据

22:50.140 --> 22:51.140
再约束一下

22:51.140 --> 22:52.140
约束我们是

22:52.140 --> 22:54.140
切实 type

22:55.140 --> 22:56.140
切实 type 的数据

22:57.140 --> 22:58.140
好

22:58.140 --> 22:59.140
把这个东西复制回去

22:59.140 --> 23:00.140
这里怎么还抱错

23:02.140 --> 23:03.140
这里写错了

23:03.140 --> 23:04.140
写错了

23:05.140 --> 23:06.140
OK

23:06.140 --> 23:07.140
到这里面

23:07.140 --> 23:08.140
这里面我是不是写错了

23:08.140 --> 23:09.140
这里写错了

23:09.140 --> 23:10.140
没关系

23:10.140 --> 23:11.140
现在写错单词的话

23:11.140 --> 23:12.140
按 F2

23:12.140 --> 23:13.140
按 F2

23:14.140 --> 23:15.140
这样子

23:15.140 --> 23:16.140
一改

23:16.140 --> 23:17.140
就全部改完了

23:17.140 --> 23:18.140
就全部改完了

23:18.140 --> 23:19.140
不用担心

23:19.140 --> 23:20.140
好

23:20.140 --> 23:21.140
现在我们完成这个工作

23:21.140 --> 23:23.140
把下一颗旗子的纸

23:23.140 --> 23:25.140
再复制过去

23:25.140 --> 23:26.140
复制完了过后

23:26.140 --> 23:27.140
下一颗纸

23:27.140 --> 23:28.140
是不是要改变

23:28.140 --> 23:29.140
对不对

23:29.140 --> 23:30.140
如果你不变化的话

23:30.140 --> 23:31.140
大家看一下

23:31.140 --> 23:33.140
如果你不变化的话

23:33.140 --> 23:34.140
我这里点击

23:34.140 --> 23:35.140
它数组改变了

23:35.140 --> 23:36.140
它就会重新渲染

23:36.140 --> 23:37.140
黑色

23:37.140 --> 23:38.140
下一个还是黑色

23:38.140 --> 23:39.140
永远都是黑色

23:39.140 --> 23:40.140
对不对

23:40.140 --> 23:41.140
永远都是黑色

23:41.140 --> 23:42.140
所以说

23:42.140 --> 23:43.140
这里需要把下一个纸

23:43.140 --> 23:45.140
进行一下变化

23:45.140 --> 23:46.140
怎么变化呢

23:46.140 --> 23:47.140
判断一下

23:47.140 --> 23:49.140
if this is dead

23:51.140 --> 23:52.140
next is

23:52.140 --> 23:53.140
如果

23:53.140 --> 23:54.140
它等于

23:55.140 --> 23:56.140
chase type

23:56.140 --> 23:58.140
如果等于红色

23:59.140 --> 24:00.140
如果下一个纸

24:00.140 --> 24:01.140
是红色的

24:01.140 --> 24:02.140
我就把它改成黑色

24:02.140 --> 24:03.140
反正

24:03.140 --> 24:04.140
是黑色的话

24:04.140 --> 24:05.140
我就把它改成

24:05.140 --> 24:06.140
红色

24:06.140 --> 24:07.140
就把它改成红色

24:07.140 --> 24:08.140
那么这里有个单

24:08.140 --> 24:09.140
有很多种写法

24:09.140 --> 24:10.140
可以在这里写吧

24:10.140 --> 24:12.140
我直接在这里写

24:12.140 --> 24:14.140
prev state

24:14.140 --> 24:15.140
它之前的状态

24:15.140 --> 24:16.140
之前的状态

24:16.140 --> 24:18.140
然后这里返回

24:18.140 --> 24:19.140
返回

24:19.140 --> 24:20.140
返回的状态

24:20.140 --> 24:21.140
chases

24:22.140 --> 24:23.140
都好

24:23.140 --> 24:24.140
下一个

24:25.140 --> 24:26.140
next

24:26.140 --> 24:27.140
chase

24:27.140 --> 24:28.140
这里

24:28.140 --> 24:29.140
把它扩起来

24:30.140 --> 24:31.140
扩起来

24:31.140 --> 24:32.140
返回整个对象

24:32.140 --> 24:33.140
返回整个对象

24:34.140 --> 24:35.140
next

24:35.140 --> 24:36.140
chases

24:36.140 --> 24:38.140
那么写个三目运算符

24:38.140 --> 24:40.140
如果之前的状态

24:40.140 --> 24:41.140
next

24:41.140 --> 24:42.140
chase

24:42.140 --> 24:43.140
等于

24:44.140 --> 24:45.140
什么

24:47.140 --> 24:48.140
chase type

24:49.140 --> 24:50.140
如果之前的

24:50.140 --> 24:52.140
下一个纸是红色的话

24:52.140 --> 24:54.140
那么现在把它变成

24:54.140 --> 24:55.140
chase type

24:55.140 --> 24:56.140
black

24:56.140 --> 24:57.140
黑色

24:57.140 --> 24:58.140
否则的话

24:58.140 --> 25:00.140
还是保持红色

25:01.140 --> 25:02.140
不是保持红色

25:02.140 --> 25:03.140
否则的话

25:03.140 --> 25:04.140
它就是黑色

25:04.140 --> 25:05.140
把它变成红色

25:05.140 --> 25:06.140
它就是给它变化一下

25:06.140 --> 25:07.140
它只能取这两个

25:07.140 --> 25:08.140
只中了一个

25:09.140 --> 25:10.140
就把下一颗

25:10.140 --> 25:11.140
只能颜色的

25:11.140 --> 25:12.140
变化一下

25:12.140 --> 25:13.140
好

25:13.140 --> 25:14.140
咱们再来看一下

25:14.140 --> 25:15.140
这里

25:15.140 --> 25:16.140
黑

25:16.140 --> 25:17.140
红

25:17.140 --> 25:18.140
黑

25:19.140 --> 25:20.140
对吧

25:20.140 --> 25:21.140
晚说了

25:22.140 --> 25:23.140
好

25:23.140 --> 25:25.140
这是关于落子

25:26.140 --> 25:27.140
然后接下来要做什么

25:28.140 --> 25:30.140
游戏结果判断

25:31.140 --> 25:32.140
这一块

25:32.140 --> 25:33.140
需要大家

25:34.140 --> 25:35.140
用心思考一下

25:35.140 --> 25:37.140
游戏结果判断

25:37.140 --> 25:39.140
我每一次落子

25:39.140 --> 25:41.140
都有可能

25:41.140 --> 25:42.140
会改变

25:43.140 --> 25:45.140
游戏的状态

25:45.140 --> 25:46.140
对不对

25:46.140 --> 25:48.140
每一次落子都有可能

25:48.140 --> 25:50.140
会改变游戏的状态

25:50.140 --> 25:52.140
当然现在这种情况没有变

25:52.140 --> 25:53.140
那现在这种情况也没有变

25:53.140 --> 25:55.140
这种情况没有变

25:55.140 --> 25:56.140
这种情况

25:56.140 --> 25:57.140
游戏的状态是不是应该变了

25:57.140 --> 25:59.140
变成结束了

25:59.140 --> 26:01.140
因此我每一次落子

26:01.140 --> 26:03.140
都有可能会改变游戏的状态

26:03.140 --> 26:05.140
那么这个状态怎么来变了

26:05.140 --> 26:06.140
当然是

26:06.140 --> 26:08.140
给它设置就完事了

26:08.140 --> 26:09.140
它不是有个属性吗

26:09.140 --> 26:10.140
对不对

26:10.140 --> 26:11.140
有个属性

26:11.140 --> 26:12.140
比方说

26:12.140 --> 26:13.140
有个属性名字叫

26:13.140 --> 26:14.140
Games Standards

26:16.140 --> 26:18.140
这个属性的值应该等于多少

26:18.140 --> 26:19.140
每一次落子

26:19.140 --> 26:20.140
它都有可能

26:20.140 --> 26:21.140
状态都有可能会变

26:21.140 --> 26:22.140
所以说我们在这里

26:22.140 --> 26:24.140
要重新计算游戏状态

26:24.140 --> 26:25.140
这个状态的值

26:25.140 --> 26:27.140
这个状态的结果是什么

26:27.140 --> 26:28.140
好

26:28.140 --> 26:29.140
这个结果计算出来

26:29.140 --> 26:31.140
肯定没有那么简单对不对

26:31.140 --> 26:32.140
哪有那么一样

26:32.140 --> 26:33.140
就可以把状态

26:33.140 --> 26:34.140
游戏的状态

26:34.140 --> 26:35.140
就能够判定出来了

26:35.140 --> 26:37.140
因此我会专门写个函数

26:39.140 --> 26:40.140
这个函数名字

26:40.140 --> 26:41.140
该取个名字

26:41.140 --> 26:43.140
Games Standards

26:44.140 --> 26:46.140
得到当前的游戏状态

26:46.140 --> 26:48.140
那我这里做什么

26:48.140 --> 26:49.140
做什么

26:49.140 --> 26:51.140
我就要去调问这个函数就完事了

26:51.140 --> 26:53.140
Games Standards

26:53.140 --> 26:55.140
调问那个函数

26:55.140 --> 26:56.140
把这个函数返回的结果

26:56.140 --> 26:57.140
这个函数标注一下

26:57.140 --> 27:00.140
我应该返回一个Games Standards

27:00.140 --> 27:02.140
应该返回一个游戏状态

27:02.140 --> 27:04.140
那么这里只需要调问这个函数

27:04.140 --> 27:05.140
来得到状态

27:05.140 --> 27:07.140
重新给游戏状态负责就完事了

27:09.140 --> 27:11.140
于是我们的注意力

27:11.140 --> 27:13.140
集中到了这个函数里面

27:13.140 --> 27:15.140
这个函数

27:15.140 --> 27:17.140
它有没有参数

27:17.140 --> 27:19.140
它需不需要参数

27:19.140 --> 27:21.140
如果需要参数的话

27:21.140 --> 27:23.140
使用什么参数

27:23.140 --> 27:25.140
我比较好计算

27:25.140 --> 27:27.140
大家想一想

27:29.140 --> 27:32.140
这里面至少需要一个参数

27:32.140 --> 27:34.140
什么参数呢

27:34.140 --> 27:38.140
就是当前期盘的组合

27:38.140 --> 27:40.140
就当前期盘的数组

27:40.140 --> 27:41.140
就这个玩意

27:41.140 --> 27:42.140
就这个数组

27:42.140 --> 27:43.140
至少需要这个

27:43.140 --> 27:46.140
我连期盘的情况都不知道

27:46.140 --> 27:47.140
我连这个数据都不知道

27:47.140 --> 27:49.140
我怎么去判断游戏胜负了

27:49.140 --> 27:51.140
有些同学可能会认为

27:51.140 --> 27:52.140
这个地方不需要

27:52.140 --> 27:54.140
因为我直接可以从

27:54.140 --> 27:57.140
Zestation里面得到这个期盘

27:57.140 --> 27:59.140
我直接可以得到这个期盘

27:59.140 --> 28:01.140
我干嘛需要去

28:01.140 --> 28:03.140
一个传过来了

28:03.140 --> 28:05.140
但是大家不要忘记了

28:05.140 --> 28:07.140
这个函数

28:07.140 --> 28:09.140
这个函数是异步的

28:09.140 --> 28:10.140
是异步的函数

28:10.140 --> 28:12.140
它不是同步执行的

28:12.140 --> 28:13.140
这些状态的改变

28:13.140 --> 28:14.140
不是说你运行的这个代码

28:14.140 --> 28:15.140
马上就状态改变了

28:15.140 --> 28:16.140
它可能会是放到

28:16.140 --> 28:17.140
世界对列里边

28:17.140 --> 28:19.140
大家学过Zest

28:19.140 --> 28:20.140
世界对列Zest的异步

28:20.140 --> 28:22.140
它可能是稍后执行的

28:22.140 --> 28:24.140
所以说呢

28:24.140 --> 28:25.140
这里呢

28:25.140 --> 28:27.140
而且还不只这一点

28:27.140 --> 28:29.140
而且在刁问这个函数的过程中

28:29.140 --> 28:31.140
就需要去计算这个东西

28:31.140 --> 28:32.140
这个时候呢

28:32.140 --> 28:34.140
它的状态都还没有改变

28:34.140 --> 28:35.140
因此呢

28:35.140 --> 28:36.140
基于以上原因

28:36.140 --> 28:37.140
所以说你得给我传一个

28:37.140 --> 28:39.140
我不能信任这个东西

28:39.140 --> 28:40.140
你得给我传过来

28:40.140 --> 28:42.140
这个传过来就给个参数呗

28:44.140 --> 28:45.140
给个参数

28:45.140 --> 28:46.140
它是一个

28:46.140 --> 28:48.140
cheese type的数组

28:48.140 --> 28:49.140
你需要给我

28:49.140 --> 28:50.140
那怎么给我呢

28:50.140 --> 28:51.140
你看这个

28:51.140 --> 28:52.140
这个东西

28:52.140 --> 28:53.140
这个玩意是不是

28:53.140 --> 28:55.140
就是我们新的数组

28:55.140 --> 28:56.140
把这个传过去

28:56.140 --> 28:58.140
给我

28:58.140 --> 29:00.140
还需必须要传递什么东西呢

29:00.140 --> 29:02.140
理论上来讲

29:02.140 --> 29:04.140
理论上来讲

29:04.140 --> 29:05.140
不需要了

29:05.140 --> 29:07.140
不需要你传递什么东西了

29:07.140 --> 29:08.140
但是如果你不

29:08.140 --> 29:09.140
不再传又过来了

29:09.140 --> 29:10.140
我判断起来

29:10.140 --> 29:12.140
不是那么的容易

29:12.140 --> 29:14.140
判断起来不是那么的容易

29:14.140 --> 29:15.140
或者说我会经过

29:15.140 --> 29:16.140
更多的计算

29:16.140 --> 29:18.140
会浪费一些执行效率

29:18.140 --> 29:20.140
会降低我的执行效率

29:20.140 --> 29:21.140
那我希望

29:21.140 --> 29:23.140
你最好是什么

29:23.140 --> 29:24.140
最好是

29:24.140 --> 29:26.140
把你当前落职

29:26.140 --> 29:28.140
那个位置传给我

29:28.140 --> 29:29.140
你想一个道理

29:29.140 --> 29:33.460
仅致起这个游戏

29:33.460 --> 29:35.460
我的身负判定

29:35.460 --> 29:37.460
一定给我最后一个落职

29:37.460 --> 29:38.460
有关系

29:38.460 --> 29:40.460
是不是个道理

29:40.460 --> 29:42.460
给我最后一个落职

29:42.460 --> 29:43.460
是有关系的

29:43.460 --> 29:45.460
因此我到时候判断

29:45.460 --> 29:46.460
某一个方向上

29:46.460 --> 29:47.460
是不是三连

29:47.460 --> 29:48.460
我只需要从

29:48.460 --> 29:49.460
这个落职的位置出发

29:49.460 --> 29:50.460
就行了

29:50.460 --> 29:52.460
只需要从落职的位置出发

29:52.460 --> 29:54.460
你最好给我一个落职的位置

29:54.460 --> 29:56.460
那么按照落职的位置

29:56.460 --> 29:57.460
来进行判定

29:57.460 --> 29:58.460
好

29:58.460 --> 29:59.460
于是

29:59.460 --> 30:01.460
我需要的是

30:01.460 --> 30:02.460
还要一个东西

30:02.460 --> 30:03.460
就是index

30:03.460 --> 30:04.460
你落职的位置

30:04.460 --> 30:06.460
它是个number

30:06.460 --> 30:07.460
你把这个东西传给我

30:07.460 --> 30:08.460
这个东西也很简单

30:08.460 --> 30:09.460
这边有这个数据

30:09.460 --> 30:10.460
对吧

30:10.460 --> 30:12.460
把个落职的位置传给他

30:12.460 --> 30:15.460
那么现在

30:15.460 --> 30:16.460
这个东西告诉你了

30:16.460 --> 30:17.460
棋盘告诉你了

30:17.460 --> 30:18.460
整个棋盘里面的

30:18.460 --> 30:19.460
所有的数据

30:19.460 --> 30:20.460
全部告诉你了

30:20.460 --> 30:22.460
落职的位置也告诉你了

30:22.460 --> 30:23.460
大家好好想一想

30:23.460 --> 30:25.460
我怎么来通过他

30:25.460 --> 30:27.460
来判断游戏

30:27.460 --> 30:28.460
他的状态

30:28.460 --> 30:29.460
到底谁赢了

30:29.460 --> 30:31.460
还是说平局

30:31.460 --> 30:32.460
还是说

30:32.460 --> 30:34.460
还说什么

30:34.460 --> 30:36.460
还是说游戏正在进行中

30:36.460 --> 30:38.460
怎么来判断胜负

30:38.460 --> 30:40.460
这里的大致流程

30:40.460 --> 30:42.460
分为这么三步

30:42.460 --> 30:45.460
第一步

30:45.460 --> 30:49.460
判断是否有一方

30:49.460 --> 30:52.460
获得胜利

30:52.460 --> 30:54.460
通过落职那个位置

30:54.460 --> 30:55.460
开始判断

30:55.460 --> 30:57.460
是否有一方已经获得胜利

30:57.460 --> 30:58.460
如果已经获得胜利的

30:58.460 --> 30:59.460
直接返回游戏结果

30:59.460 --> 31:01.460
看是哪一方获得胜利

31:01.460 --> 31:02.460
第二步

31:02.460 --> 31:04.460
如果都还没有获得胜利

31:04.460 --> 31:08.460
判断是否平局

31:08.460 --> 31:09.460
是不是平局了

31:09.460 --> 31:11.460
是不是没有位置可以落职了

31:11.460 --> 31:13.460
是不是已经平局了

31:13.460 --> 31:15.460
如果第二步判断也没有成功

31:15.460 --> 31:20.460
那么就是游戏正在进行

31:20.460 --> 31:21.460
游戏还没有结束

31:21.460 --> 31:22.460
大家想一想

31:22.460 --> 31:24.460
是不是个逻辑

31:24.460 --> 31:25.460
OK

31:25.460 --> 31:27.460
让一个整体的思路裸裂出来

31:27.460 --> 31:29.460
然后再看

31:29.460 --> 31:30.460
如何来判断

31:30.460 --> 31:32.460
一方是否获得胜利呢

31:32.460 --> 31:34.460
注意我们这个落职位置

31:34.460 --> 31:36.460
落职位置给我们传怪了

31:36.460 --> 31:37.460
我们如何来通过

31:37.460 --> 31:39.460
这个落职位置来获得

31:39.460 --> 31:43.460
再判断是否有一方获得胜利

31:43.460 --> 31:45.460
什么叫做胜利

31:45.460 --> 31:47.460
那一定是横向

31:47.460 --> 31:50.460
重向或斜向方向

31:50.460 --> 31:52.460
斜线方向上

31:52.460 --> 31:54.460
三个字都完全相同

31:54.460 --> 31:55.460
对不对

31:55.460 --> 31:56.460
这就是胜利

31:56.460 --> 31:57.460
好

31:57.460 --> 31:58.460
我们一个一个说

31:58.460 --> 31:59.460
一个一个说

31:59.460 --> 32:02.460
就这里需要一点数学的知识

32:02.460 --> 32:04.460
其实也不算数学的知识

32:04.460 --> 32:05.460
逻辑的知识

32:05.460 --> 32:07.460
如果要说一定有数学的话

32:07.460 --> 32:09.460
也就只是小学数学而已

32:09.460 --> 32:11.460
咱们是一个数组

32:11.460 --> 32:13.460
数组的排列是这样子的

32:13.460 --> 32:15.460
它的下标排列

32:15.460 --> 32:16.460
0

32:16.460 --> 32:17.460
1

32:17.460 --> 32:18.460
2

32:18.460 --> 32:19.460
然后3

32:19.460 --> 32:20.460
4

32:20.460 --> 32:21.460
5

32:21.460 --> 32:22.460
6

32:22.460 --> 32:23.460
7

32:23.460 --> 32:24.460
8

32:24.460 --> 32:26.460
数组是这样的排列的下标

32:26.460 --> 32:27.460
然后呢

32:27.460 --> 32:29.460
我们首先看横向

32:29.460 --> 32:31.460
横向方向上

32:31.460 --> 32:33.460
假设给我的index

32:33.460 --> 32:36.460
假设给我的index

32:36.460 --> 32:38.460
是1

32:38.460 --> 32:40.460
假设给我的index是1

32:40.460 --> 32:41.460
我现在落职的位置是1

32:41.460 --> 32:43.460
下标为1这个位置

32:43.460 --> 32:45.460
那么横向的话

32:45.460 --> 32:46.460
它判断的是什么

32:46.460 --> 32:48.460
判断是不是012

32:48.460 --> 32:49.460
对不对

32:49.460 --> 32:50.460
012

32:50.460 --> 32:52.460
然后如果落职的位置是2的话

32:52.460 --> 32:53.460
判断的

32:53.460 --> 32:55.460
是不是还是012

32:55.460 --> 32:56.460
对不对

32:56.460 --> 32:58.460
然后落职的位置是4的话

32:58.460 --> 33:00.460
判断的是什么

33:00.460 --> 33:01.460
3

33:01.460 --> 33:02.460
4

33:02.460 --> 33:03.460
5

33:03.460 --> 33:05.460
落职的位置是

33:05.460 --> 33:07.460
比方说是6的话

33:07.460 --> 33:08.460
判断的是

33:08.460 --> 33:09.460
6

33:09.460 --> 33:10.460
7

33:10.460 --> 33:11.460
8

33:11.460 --> 33:12.460
如果落职的位置是8

33:12.460 --> 33:13.460
那么判断的还是6

33:13.460 --> 33:14.460
7

33:14.460 --> 33:15.460
8

33:15.460 --> 33:16.460
我们要找规律

33:16.460 --> 33:17.460
慢慢来

33:17.460 --> 33:18.460
不着急

33:18.460 --> 33:19.460
那这里呢

33:19.460 --> 33:21.460
我把它这样子来写

33:21.460 --> 33:22.460
如果是1的话

33:22.460 --> 33:24.460
我判断的位置

33:24.460 --> 33:27.460
应该是0-2

33:27.460 --> 33:28.460
2的话

33:28.460 --> 33:29.460
判断的位置

33:29.460 --> 33:31.460
也是0-2

33:31.460 --> 33:32.460
如果为4的话

33:32.460 --> 33:33.460
判断的位置

33:33.460 --> 33:35.460
是3-5

33:35.460 --> 33:36.460
如果为6的话

33:36.460 --> 33:37.460
判断的位置

33:37.460 --> 33:38.460
是6-8

33:38.460 --> 33:39.460
如果为8的话

33:39.460 --> 33:40.460
判断的位置

33:40.460 --> 33:42.460
也是6-8

33:42.460 --> 33:44.460
我再换一种写法

33:44.460 --> 33:46.460
如果是1的话

33:46.460 --> 33:47.460
判断的位置

33:47.460 --> 33:50.460
是0-0-2

33:50.460 --> 33:51.460
如果是2的话

33:51.460 --> 33:52.460
判断的位置

33:52.460 --> 33:54.460
是0-0-2

33:54.460 --> 33:57.460
这里是3-2

33:57.460 --> 34:00.460
这里是6-2

34:00.460 --> 34:02.460
6-2

34:02.460 --> 34:04.460
这里是6-2

34:04.460 --> 34:06.460
看出规律没有

34:06.460 --> 34:07.460
其实我只要找

34:07.460 --> 34:09.460
一个数字就行了

34:09.460 --> 34:10.460
我如果是1

34:10.460 --> 34:11.460
我如何把

34:11.460 --> 34:12.460
这个算出来的结果

34:12.460 --> 34:13.460
保证是0

34:13.460 --> 34:14.460
如果我是2

34:14.460 --> 34:15.460
如何我算出来的结果

34:15.460 --> 34:16.460
也是0

34:16.460 --> 34:17.460
所以这个0

34:17.460 --> 34:18.460
最小值一出来

34:18.460 --> 34:19.460
最大值就出来了

34:19.460 --> 34:20.460
对不对

34:20.460 --> 34:21.460
如果是4的话

34:21.460 --> 34:22.460
算出来的结果

34:22.460 --> 34:24.460
应该是3

34:24.460 --> 34:26.460
那么这个关系是什么呢

34:26.460 --> 34:28.460
它想想关系是啥

34:28.460 --> 34:30.460
怎么能想出来

34:30.460 --> 34:31.460
这个地方是i的

34:31.460 --> 34:33.460
也就是in这个时候的曲子

34:33.460 --> 34:35.460
应该是啥呢

34:35.460 --> 34:36.460
这个数字

34:36.460 --> 34:40.460
是不是应该等于

34:40.460 --> 34:42.460
最小值

34:42.460 --> 34:43.460
这个范围的最小值

34:43.460 --> 34:44.460
应该等于啥

34:44.460 --> 34:46.460
等于index

34:46.460 --> 34:48.460
除1解

34:48.460 --> 34:50.460
除1杀

34:50.460 --> 34:51.460
取什么

34:51.460 --> 34:53.460
取整

34:53.460 --> 34:55.460
取整

34:55.460 --> 34:57.460
然后再去乘1杀

34:57.460 --> 34:58.460
大家想一想

34:58.460 --> 34:59.460
是不是这样子

34:59.460 --> 35:01.460
看一下呗

35:01.460 --> 35:02.460
1

35:02.460 --> 35:03.460
1除1杀

35:03.460 --> 35:05.460
取整0

35:05.460 --> 35:06.460
0乘1杀

35:06.460 --> 35:07.460
0

35:07.460 --> 35:08.460
2

35:08.460 --> 35:09.460
2除1杀

35:09.460 --> 35:10.460
0取整

35:10.460 --> 35:11.460
2除1杀

35:11.460 --> 35:12.460
2除1杀

35:12.460 --> 35:13.460
取整0

35:13.460 --> 35:14.460
0乘1杀

35:14.460 --> 35:15.460
0

35:15.460 --> 35:17.460
然后4

35:17.460 --> 35:18.460
4除1杀

35:18.460 --> 35:20.460
取整1

35:20.460 --> 35:21.460
1乘1杀

35:21.460 --> 35:22.460
1对不对

35:22.460 --> 35:24.460
最小值算出来了

35:24.460 --> 35:25.460
那么最大值就是

35:25.460 --> 35:26.460
它加2对不对

35:26.460 --> 35:27.460
看一下

35:27.460 --> 35:29.460
这三个值

35:29.460 --> 35:31.460
是否一样

35:31.460 --> 35:32.460
也就是说

35:32.460 --> 35:33.460
橫向的判断

35:33.460 --> 35:36.460
这里的判断可能比较长

35:36.460 --> 35:38.460
判断一下

35:38.460 --> 35:39.460
判断啥呢

35:39.460 --> 35:40.460
首先是

35:40.460 --> 35:41.460
我们算出最小值吧

35:41.460 --> 35:43.460
橫向的最小值

35:43.460 --> 35:44.460
橫向的最小值

35:44.460 --> 35:46.460
horizontal

35:46.460 --> 35:48.460
表示橫向的最小值

35:48.460 --> 35:49.460
等于啥呢

35:49.460 --> 35:50.460
等于index

35:50.460 --> 35:53.460
除1杀

35:53.460 --> 35:55.460
我这里就音别码码写实

35:55.460 --> 35:57.460
除1杀

35:57.460 --> 35:59.460
然后mass.floor

35:59.460 --> 36:01.460
向下取整

36:01.460 --> 36:03.460
然后再去乘1杀

36:03.460 --> 36:04.460
对它最小值

36:04.460 --> 36:05.460
橫向的最小值

36:05.460 --> 36:06.460
所以说

36:06.460 --> 36:07.460
橫向的判断怎么判断

36:07.460 --> 36:08.460
判断的是啥

36:08.460 --> 36:09.460
判断的是

36:09.460 --> 36:11.460
切死

36:11.460 --> 36:13.460
橫向的最小值

36:13.460 --> 36:16.460
这个地方的棋子

36:16.460 --> 36:18.460
是不是等于

36:18.460 --> 36:20.460
切死

36:20.460 --> 36:22.460
然后

36:22.460 --> 36:23.460
橫向的最小值

36:23.460 --> 36:24.460
加1

36:24.460 --> 36:25.460
就是它箱里那一位

36:25.460 --> 36:26.460
对不对

36:26.460 --> 36:28.460
然后并且

36:28.460 --> 36:30.460
切死

36:30.460 --> 36:33.460
最小的那一位

36:33.460 --> 36:36.460
还要等于

36:36.460 --> 36:38.460
切死

36:39.460 --> 36:41.460
这个东西最小值加2

36:41.460 --> 36:42.460
你看是不是

36:42.460 --> 36:43.460
橫向的三个指

36:43.460 --> 36:44.460
就算出来了

36:44.460 --> 36:46.460
看他们三个是否相等

36:46.460 --> 36:48.460
看他们三个是否相等

36:48.460 --> 36:50.460
ok 咱们来看一下

36:50.460 --> 36:51.460
把这个东西扩起来

36:51.460 --> 36:53.460
这是第1个条件

36:53.460 --> 36:55.460
第1个条件

36:55.460 --> 36:56.460
如果这个条件满足

36:56.460 --> 36:58.460
那就后面的条件就不用看了

36:58.460 --> 36:59.460
如果这个条件满足

36:59.460 --> 37:01.460
说明一定有一方胜利的

37:01.460 --> 37:03.460
一定有一方胜利的

37:03.460 --> 37:05.460
这是橫向的情况

37:05.460 --> 37:06.460
咱们先来吧

37:06.460 --> 37:07.460
先来

37:08.460 --> 37:10.460
比方说

37:10.460 --> 37:12.460
如果橫向全部相等

37:12.460 --> 37:13.460
全部相等的话

37:13.460 --> 37:15.460
说明一定有一方胜利的

37:15.460 --> 37:17.460
一定有一方胜利的

37:17.460 --> 37:18.460
ok 我们直接返回

37:18.460 --> 37:19.460
返回啥

37:19.460 --> 37:22.460
返回game standards

37:22.460 --> 37:23.460
返回啥

37:23.460 --> 37:24.460
返回这个

37:24.460 --> 37:26.460
这个就是

37:26.460 --> 37:30.280
这样子吧

37:30.280 --> 37:31.280
这样子

37:31.280 --> 37:32.280
判断一下

37:32.280 --> 37:33.280
如果当前这个位置

37:33.280 --> 37:35.280
就是你落纸那个位置

37:35.280 --> 37:37.280
落纸那个位置

37:37.280 --> 37:39.280
如果是红色的

37:42.280 --> 37:43.280
如果是红色的话

37:43.280 --> 37:45.280
那么你落纸的是红色

37:45.280 --> 37:47.280
现在有三个有相等

37:47.280 --> 37:49.280
你包括你落纸的位置有相等

37:49.280 --> 37:50.280
那是不是红方胜利

37:50.280 --> 37:52.280
返回game standards

37:52.280 --> 37:53.280
red

37:53.280 --> 37:54.280
v

37:54.280 --> 37:55.280
红方胜利

37:55.280 --> 37:56.280
Ls的话

37:56.280 --> 37:58.280
返回的就是黑方胜利

37:58.280 --> 37:59.280
standards

37:59.280 --> 38:01.280
black v

38:01.280 --> 38:02.280
好

38:02.280 --> 38:03.280
我们先看橫向

38:03.280 --> 38:04.280
先看橫向

38:04.280 --> 38:06.280
橫向看完再说

38:06.280 --> 38:07.280
然后其他情况我先不管

38:07.280 --> 38:08.280
不管什么评决

38:08.280 --> 38:09.280
游戏正在进行先不管

38:09.280 --> 38:10.280
我们先测试一下

38:10.280 --> 38:11.280
橫向这边

38:11.280 --> 38:12.280
是不是正确的

38:12.280 --> 38:13.280
如果

38:13.280 --> 38:15.280
如果这个条件不满足的话

38:15.280 --> 38:17.280
我们就直接返回游戏正在进行

38:17.280 --> 38:19.280
game standards

38:19.280 --> 38:20.280
给你

38:20.280 --> 38:21.280
好

38:21.280 --> 38:22.280
我们先这样子写

38:22.280 --> 38:23.280
写了过后我们来看一下

38:23.280 --> 38:26.280
看一下我们的效果

38:26.280 --> 38:27.280
好

38:27.280 --> 38:29.280
点击

38:29.280 --> 38:30.280
点击

38:30.280 --> 38:31.280
点击

38:31.280 --> 38:32.280
点击

38:32.280 --> 38:33.280
你看是不是不能点了

38:33.280 --> 38:35.280
有一方胜利的

38:35.280 --> 38:36.280
有一方胜利的

38:36.280 --> 38:37.280
哪一方胜利的

38:37.280 --> 38:38.280
我们可以观察一下

38:38.280 --> 38:39.280
我们的数据

38:39.280 --> 38:41.280
这个在这个调试工具里边

38:41.280 --> 38:42.280
game comp

38:42.280 --> 38:43.280
大家看一下

38:43.280 --> 38:44.280
我们的数据

38:44.280 --> 38:46.280
game standards

38:46.280 --> 38:47.280
等于2

38:47.280 --> 38:48.280
我们看一下2是啥

38:48.280 --> 38:50.280
因为我们这里使用的是每一句

38:50.280 --> 38:51.280
每句里面它是数字

38:51.280 --> 38:52.280
20个啥

38:52.280 --> 38:53.280
24

38:53.280 --> 38:54.280
0

38:54.280 --> 38:55.280
1

38:55.280 --> 38:56.280
2

38:56.280 --> 38:57.280
黑方胜利

38:57.280 --> 38:58.280
你看一下是不是黑方胜利

38:58.280 --> 38:59.280
对不对

38:59.280 --> 39:00.280
黑方胜利

39:00.280 --> 39:01.280
好

39:01.280 --> 39:02.280
说明这里没问题的

39:02.280 --> 39:03.280
没问题的

39:03.280 --> 39:04.280
这是第一种情况

39:04.280 --> 39:06.280
横向的

39:06.280 --> 39:08.280
看三个字是否相等

39:08.280 --> 39:09.280
好

39:09.280 --> 39:10.280
第一种情况写完了过后

39:10.280 --> 39:11.280
我们慢一点

39:11.280 --> 39:12.280
这一块不着急

39:12.280 --> 39:14.280
或者

39:14.280 --> 39:15.280
如果第一个条件不满足

39:15.280 --> 39:16.280
我是不是

39:16.280 --> 39:17.280
就完了

39:17.280 --> 39:18.280
肯定不是

39:18.280 --> 39:19.280
我们还有一个判断

39:19.280 --> 39:20.280
还有其他判断

39:20.280 --> 39:21.280
还有中向怎么办呢

39:21.280 --> 39:22.280
对不对

39:22.280 --> 39:23.280
还有中向

39:23.280 --> 39:24.280
我们看一下中向的条件

39:24.280 --> 39:25.280
这里

39:25.280 --> 39:26.280
换一个行吧

39:26.280 --> 39:27.280
换一个行

39:27.280 --> 39:28.280
写中向的条件

39:28.280 --> 39:30.280
中向的条件是什么呢

39:30.280 --> 39:32.280
我们又来找他的规律

39:32.280 --> 39:33.280
又来找他的规律

39:34.280 --> 39:35.280
现在是中向

39:35.280 --> 39:36.280
横向已经搞定了

39:36.280 --> 39:37.280
中向

39:41.000 --> 39:42.000
好

39:42.000 --> 39:43.000
中向里边

39:43.000 --> 39:44.000
我们又来看

39:45.000 --> 39:47.000
假设取1

39:47.000 --> 39:49.000
那么他的值是啥

39:49.000 --> 39:50.000
1

39:50.000 --> 39:51.000
4

39:51.000 --> 39:52.000
7

39:52.000 --> 39:54.000
假设取4

39:54.000 --> 39:55.000
1

39:55.000 --> 39:56.000
4

39:56.000 --> 39:57.000
7

39:57.000 --> 39:59.000
然后假设取的是3

39:59.000 --> 40:00.000
0

40:00.000 --> 40:01.000
3

40:01.000 --> 40:02.000
6

40:02.000 --> 40:03.000
假设取的是2

40:03.000 --> 40:04.000
假设取的是2

40:04.000 --> 40:05.000
2

40:05.000 --> 40:06.000
那就是

40:06.000 --> 40:07.000
2

40:08.000 --> 40:09.000
假设取的是2

40:09.000 --> 40:10.000
就是2

40:10.000 --> 40:11.000
5

40:11.000 --> 40:12.000
8

40:12.000 --> 40:13.000
来吧

40:13.000 --> 40:14.000
找规律

40:14.000 --> 40:15.000
找个

40:15.000 --> 40:16.000
2

40:16.000 --> 40:18.310
5

40:18.310 --> 40:19.310
首先

40:20.310 --> 40:21.310
你会发现

40:21.310 --> 40:23.310
这三个数字是有规律的

40:23.310 --> 40:24.310
后边这个数字

40:24.310 --> 40:25.310
是前面这个数字

40:25.310 --> 40:26.310
加3

40:26.310 --> 40:27.310
对不对

40:27.310 --> 40:28.310
前面这个数字

40:28.310 --> 40:29.310
加3

40:29.310 --> 40:30.310
就是1加3

40:30.310 --> 40:31.310
4

40:31.310 --> 40:32.310
4

40:32.310 --> 40:33.310
4

40:33.310 --> 40:34.310
2加3

40:34.310 --> 40:35.310
5

40:35.310 --> 40:36.310
5加3

40:36.310 --> 40:37.310
8

40:37.310 --> 40:38.310
也就是说还是一样的

40:38.310 --> 40:40.310
我们把第1个数字算出来就完事了

40:41.310 --> 40:42.310
那么怎么去算第1个数字

40:43.310 --> 40:45.310
怎么去算第1个数字关键是

40:49.290 --> 40:50.290
想一想

40:51.290 --> 40:52.290
看出来没

40:53.290 --> 40:54.290
第1个数字

40:54.290 --> 40:56.290
我们把这个东西叫index

40:56.290 --> 40:57.290
把前面那个数字叫index

40:57.290 --> 40:59.290
这是我们的落子下标

40:59.290 --> 41:00.290
落子的下标

41:00.290 --> 41:01.290
那么这个index

41:01.290 --> 41:03.290
怎么来算出第1个数字呢

41:03.290 --> 41:04.290
想一想

41:04.290 --> 41:05.290
等于啥

41:06.290 --> 41:07.290
index

41:07.290 --> 41:09.290
除亦3的余数

41:09.290 --> 41:10.290
是不是

41:11.290 --> 41:12.290
想一想

41:12.290 --> 41:13.290
是不是除亦3的余数

41:13.290 --> 41:14.290
对不对

41:15.290 --> 41:16.290
好

41:16.290 --> 41:18.290
你把这个东西搞清楚过后

41:18.290 --> 41:19.290
到时候又完了

41:19.290 --> 41:20.290
对不对

41:20.290 --> 41:21.290
中向的最小数字就算出来了

41:21.290 --> 41:22.290
好

41:22.290 --> 41:23.290
我们来

41:23.290 --> 41:24.290
中向的

41:24.290 --> 41:26.290
垂直方向的vertical

41:26.290 --> 41:27.290
垂直方向的最小数字

41:27.290 --> 41:28.290
等于啥呢

41:28.290 --> 41:29.290
mas

41:29.290 --> 41:30.290
不用mas

41:30.290 --> 41:32.290
就直接index

41:32.290 --> 41:33.290
除亦3的余数

41:34.290 --> 41:35.290
那又来呗

41:35.290 --> 41:37.290
我们这里复制一下

41:38.290 --> 41:39.290
这里张开过来

41:40.290 --> 41:41.290
现在是中向的了

41:41.290 --> 41:43.290
vermin

41:43.290 --> 41:45.290
中向的最小数字

41:45.290 --> 41:47.290
是不是等于vermin

41:47.290 --> 41:49.290
最小数字加3

41:49.290 --> 41:52.290
然后又来vermin

41:52.290 --> 41:54.290
是不是等于最小数字加6

41:54.290 --> 41:55.290
对吧

41:55.290 --> 41:56.290
加6

41:56.290 --> 41:57.290
你看看

41:57.290 --> 41:58.290
最小数字加6

41:58.290 --> 41:59.290
就是最大的一个数字

42:00.290 --> 42:02.290
就把中向的搞定了

42:02.290 --> 42:03.290
中向的条件就搞定了

42:03.290 --> 42:04.290
好

42:04.290 --> 42:05.290
咱们来看一下

42:05.290 --> 42:06.290
中向的条件

42:06.290 --> 42:07.290
搞定过后

42:07.290 --> 42:08.290
能不能判断出

42:08.290 --> 42:09.290
中向的胜负

42:09.290 --> 42:10.290
来

42:10.290 --> 42:11.290
垂直

42:11.290 --> 42:12.290
黑色

42:12.290 --> 42:13.290
红色

42:13.290 --> 42:14.290
黑色

42:14.290 --> 42:15.290
红色

42:15.290 --> 42:16.290
黑色

42:16.290 --> 42:17.290
这里有问题对吧

42:17.290 --> 42:18.290
有问题

42:18.290 --> 42:19.290
看一下

42:19.290 --> 42:24.460
这里

42:24.460 --> 42:26.460
games standard is 0

42:26.460 --> 42:28.460
这里判断是有问题的

42:28.460 --> 42:30.460
我看哪个地方写错了

42:30.460 --> 42:31.460
这个地方写错了

42:31.460 --> 42:32.460
vermin

42:32.460 --> 42:34.460
vermin加6

42:34.460 --> 42:35.460
再来

42:35.460 --> 42:36.460
黑色

42:36.460 --> 42:37.460
红色

42:37.460 --> 42:38.460
黑色

42:38.460 --> 42:39.460
红色

42:39.460 --> 42:40.460
点不了了

42:40.460 --> 42:41.460
中向已经结束了

42:41.460 --> 42:43.460
说明现在游戏已经结束了

42:43.460 --> 42:44.460
看一下

42:44.460 --> 42:45.460
数据

42:45.460 --> 42:47.460
games standard is 2

42:47.460 --> 42:48.460
还是黑方胜利

42:48.460 --> 42:49.460
对吧

42:49.460 --> 42:50.460
黑方胜利

42:50.460 --> 42:52.460
那我们来个红方胜利吧

42:52.460 --> 42:53.460
点一下

42:53.460 --> 42:54.460
点一下

42:54.460 --> 42:55.460
点一下

42:55.460 --> 42:56.460
点一下

42:56.460 --> 42:57.460
点一下

42:57.460 --> 42:58.460
点一下

42:58.460 --> 42:59.460
点一下

42:59.460 --> 43:00.460
好

43:00.460 --> 43:01.460
游戏结束

43:01.460 --> 43:02.460
看一下

43:02.460 --> 43:04.460
是不是红方胜利

43:04.460 --> 43:05.460
这个是1

43:05.460 --> 43:07.460
这个煤具的值是1

43:07.460 --> 43:08.460
看一下煤具

43:08.460 --> 43:10.460
煤具的值1

43:10.460 --> 43:11.460
红方胜利

43:11.460 --> 43:12.460
好

43:12.460 --> 43:14.460
这个地方也搞定了

43:14.460 --> 43:16.460
那接下来还有条件

43:16.460 --> 43:18.460
如果前面两个条件都不满足

43:18.460 --> 43:20.460
是不是要看斜线了

43:20.460 --> 43:22.460
就要看斜线了

43:22.460 --> 43:23.460
好

43:23.460 --> 43:24.460
斜线这一块呢

43:24.460 --> 43:26.460
大家想一想

43:26.460 --> 43:28.460
斜线又怎么来看

43:28.460 --> 43:29.460
斜线

43:29.460 --> 43:31.460
斜线有两种

43:31.460 --> 43:32.460
有两种

43:32.460 --> 43:33.460
比方说

43:33.460 --> 43:35.460
现在我们点的目标是4

43:35.460 --> 43:36.460
先是4

43:36.460 --> 43:38.460
就是2 4 6

43:38.460 --> 43:40.460
或者是0 4 8

43:40.460 --> 43:41.460
对吧

43:41.460 --> 43:42.460
0 4 8

43:42.460 --> 43:44.460
那么斜线方向上

43:44.460 --> 43:46.460
大家看一下

43:46.460 --> 43:49.460
在这个场景下边

43:49.460 --> 43:52.460
如果你落纸为1

43:52.460 --> 43:54.460
落纸为3

43:54.460 --> 43:56.460
落纸为5

43:56.460 --> 43:58.460
落纸为7

43:58.460 --> 44:00.460
在这四个位置

44:00.460 --> 44:02.460
不可能有斜线方向相同

44:02.460 --> 44:03.460
你想

44:03.460 --> 44:04.460
你落在这个地方

44:04.460 --> 44:06.460
有没有斜线3个字

44:06.460 --> 44:07.460
不可能对吧

44:07.460 --> 44:08.460
在这个地方

44:08.460 --> 44:10.460
是不可能连成斜线3个字的

44:10.460 --> 44:12.460
那斜线又咋看

44:12.460 --> 44:16.020
斜线又咋看

44:16.020 --> 44:19.020
斜线是不是看斜线的时候

44:19.020 --> 44:21.020
我压隔就跟落纸

44:21.020 --> 44:23.020
就没什么关系了

44:23.020 --> 44:25.020
我就直接看0 4 8

44:25.020 --> 44:26.020
斜线只有两条

44:26.020 --> 44:27.020
斜线上只有两条

44:27.020 --> 44:29.020
0 4 8

44:29.020 --> 44:30.020
三个是不是一样的

44:30.020 --> 44:32.020
2 4 6

44:32.020 --> 44:33.020
三个是不是一样的

44:33.020 --> 44:34.020
对不对

44:34.020 --> 44:37.020
斜线上我只看这三个东西就行了

44:37.020 --> 44:38.020
因此

44:38.020 --> 44:39.020
斜线上

44:39.020 --> 44:41.020
我就直接写就行了

44:41.020 --> 44:42.020
就没那么复杂了

44:42.020 --> 44:43.020
斜线上看

44:43.020 --> 44:45.020
只不过写的代码有点长而已

44:45.020 --> 44:46.020
0

44:46.020 --> 44:48.020
是不是等于

44:48.020 --> 44:50.020
就第一条斜线

44:50.020 --> 44:51.020
是不是等于

44:51.020 --> 44:52.020
4

44:52.020 --> 44:54.020
并且

44:54.020 --> 44:56.020
斜线

44:56.020 --> 44:57.020
0

44:57.020 --> 44:59.020
是不是等于

44:59.020 --> 45:01.020
斜线是8

45:01.020 --> 45:02.020
当然我们现在

45:02.020 --> 45:04.020
是一切的前提条件

45:04.020 --> 45:06.020
是3 x 3的格子

45:06.020 --> 45:07.020
如果是

45:07.020 --> 45:08.020
不确定的格子的话

45:08.020 --> 45:10.020
要更加复杂一些

45:10.020 --> 45:11.020
好

45:11.020 --> 45:13.020
这里我们直接通过看0 4 8

45:13.020 --> 45:15.020
看是不是一样的

45:15.020 --> 45:16.020
如果这个一样的话

45:16.020 --> 45:18.020
那么是这条斜线

45:18.020 --> 45:19.020
这条斜线

45:19.020 --> 45:20.020
这条斜线上

45:20.020 --> 45:21.020
如果一样的话

45:21.020 --> 45:22.020
那么也可以玩

45:22.020 --> 45:24.020
表示游戏结束了

45:24.020 --> 45:25.020
已经

45:25.020 --> 45:27.020
三个字已经一样了

45:27.020 --> 45:28.020
好

45:28.020 --> 45:29.020
我们马上来测试一下

45:29.020 --> 45:30.020
看这样子写

45:30.020 --> 45:31.020
有没有问题

45:32.020 --> 45:33.020
咱们测试一下

45:35.020 --> 45:36.020
我们这里

45:37.020 --> 45:38.020
点击一下这

45:38.020 --> 45:39.020
OK

45:39.020 --> 45:41.020
点击一下红色

45:41.020 --> 45:42.020
点击一下黑色

45:42.020 --> 45:43.020
点击一下红色

45:43.020 --> 45:44.020
点击一下黑色

45:44.020 --> 45:45.020
游戏结束

45:45.020 --> 45:46.020
游戏结束

45:46.020 --> 45:47.020
我们来看一下

45:48.020 --> 45:49.020
GameStatus 2

45:49.020 --> 45:50.020
黑方胜利

45:50.020 --> 45:51.020
好像是没问题了

45:51.020 --> 45:52.020
对吧

45:52.020 --> 45:53.020
再来一次

45:53.020 --> 45:55.020
我点击一下这

45:55.020 --> 45:56.020
点击一下这

45:57.020 --> 45:58.020
我靠

45:58.020 --> 46:00.020
这样子居然游戏结束了

46:00.020 --> 46:02.020
居然游戏结束了

46:02.020 --> 46:04.020
那这是怎么回事呢

46:04.020 --> 46:05.020
点击这里

46:05.020 --> 46:07.020
为什么会游戏结束呢

46:07.020 --> 46:08.020
是因为

46:08.020 --> 46:09.020
大家看一下

46:09.020 --> 46:11.020
先在这条斜线上

46:11.020 --> 46:12.020
三个是不是一样的

46:12.020 --> 46:13.020
这个

46:13.020 --> 46:14.020
这个

46:14.020 --> 46:15.020
三个是不是一样的

46:15.020 --> 46:16.020
也是一样的

46:16.020 --> 46:17.020
对不对

46:17.020 --> 46:18.020
因此他

46:18.020 --> 46:19.020
这个判定是成立的

46:19.020 --> 46:20.020
这三个都是浪

46:20.020 --> 46:21.020
都是一样

46:21.020 --> 46:23.020
因此很认为游戏结束了

46:23.020 --> 46:24.020
所以说

46:24.020 --> 46:25.020
条件里边

46:25.020 --> 46:26.020
咱们再多加一条

46:26.020 --> 46:28.020
再多加一条

46:28.020 --> 46:29.020
并且

46:29.020 --> 46:31.020
切施0

46:31.020 --> 46:33.020
不等于

46:33.020 --> 46:34.020
什么

46:34.020 --> 46:36.020
切施 type

46:36.020 --> 46:37.020
浪

46:37.020 --> 46:39.020
只要保证一个他不是浪

46:39.020 --> 46:40.020
就完事了

46:40.020 --> 46:41.020
你看一个不是浪

46:41.020 --> 46:42.020
三个又相等

46:42.020 --> 46:43.020
那三个都不是浪了

46:43.020 --> 46:44.020
所以说这里

46:44.020 --> 46:45.020
我加上这个线子

46:45.020 --> 46:47.020
这是这条斜线

46:47.020 --> 46:48.020
这条斜线完了过后

46:48.020 --> 46:50.020
那我再斜调斜线

46:50.020 --> 46:51.020
再斜调斜线

46:51.020 --> 46:52.020
这是这条斜线

46:52.020 --> 46:54.020
我们再来一个斜线

46:55.020 --> 46:56.020
换个行吧

46:56.020 --> 46:57.020
或者

46:57.020 --> 46:58.020
复制一下

46:58.020 --> 46:59.020
复制一下

46:59.020 --> 47:00.020
另外一条斜线是啥

47:00.020 --> 47:01.020
让我看一下

47:01.020 --> 47:03.020
另外一条斜线是

47:03.020 --> 47:04.020
246

47:04.020 --> 47:05.020
246

47:05.020 --> 47:06.020
OK

47:06.020 --> 47:07.020
这里咱们写

47:07.020 --> 47:09.020
2

47:09.020 --> 47:11.020
24

47:11.020 --> 47:12.020
这里

47:12.020 --> 47:14.020
6

47:14.020 --> 47:16.020
这边也是

47:16.020 --> 47:17.020
2这个位置

47:17.020 --> 47:18.020
不能为浪

47:18.020 --> 47:20.020
保存一下

47:20.020 --> 47:21.020
那么所有的情况

47:21.020 --> 47:23.020
我们就全部涵盖完了

47:23.020 --> 47:24.020
涵盖完了

47:24.020 --> 47:25.020
来看一下

47:26.020 --> 47:27.020
点

47:27.020 --> 47:28.020
点

47:28.020 --> 47:29.020
点

47:30.020 --> 47:31.020
点

47:31.020 --> 47:32.020
好游戏结束

47:32.020 --> 47:33.020
看一下斜线

47:33.020 --> 47:34.020
多看一下斜线

47:34.020 --> 47:36.020
点

47:36.020 --> 47:37.020
点

47:37.020 --> 47:38.020
点

47:38.020 --> 47:39.020
点

47:39.020 --> 47:40.020
点

47:40.020 --> 47:42.020
好结束

47:42.020 --> 47:43.020
再来

47:43.020 --> 47:45.020
看一下这条斜线

47:45.020 --> 47:46.020
点

47:46.020 --> 47:47.020
点

47:47.020 --> 47:48.020
点

47:48.020 --> 47:49.020
点

47:49.020 --> 47:50.020
好结束

47:50.020 --> 47:51.020
OK

47:51.020 --> 47:52.020
这些情况

47:52.020 --> 47:54.020
胜负的判定就是游戏的状态

47:54.020 --> 47:56.020
首先获胜的这一方

47:56.020 --> 47:58.020
判定获胜的条件

47:58.020 --> 47:59.020
我们已经写完了

47:59.020 --> 48:00.020
我这里呢

48:00.020 --> 48:02.020
把它折叠起来

48:02.020 --> 48:03.020
这里管他的

48:03.020 --> 48:05.020
这里为什么折叠不起来的

48:05.020 --> 48:06.020
管他的吧

48:06.020 --> 48:08.020
因为这个判断条件太多了

48:08.020 --> 48:10.020
他是折叠异服

48:10.020 --> 48:11.020
异服条件这里

48:11.020 --> 48:12.020
他是没法折叠的

48:12.020 --> 48:13.020
管他的

48:13.020 --> 48:14.020
好

48:14.020 --> 48:16.020
这里是判断一方是否获得胜利

48:16.020 --> 48:17.020
那么如果

48:17.020 --> 48:19.020
这个判断没有进去

48:19.020 --> 48:21.020
接下来我们要判断这

48:21.020 --> 48:23.020
是否是评矩

48:23.020 --> 48:25.020
这个评矩怎么来判断呢

48:25.020 --> 48:27.020
这个地方就很简单了

48:27.020 --> 48:28.020
判断啥

48:28.020 --> 48:30.020
就判断这个数组里边

48:30.020 --> 48:32.020
是否包含

48:32.020 --> 48:33.020
包含啥

48:33.020 --> 48:35.020
包含这个

48:35.020 --> 48:37.020
Chase type

48:37.020 --> 48:39.020
你知道

48:39.020 --> 48:40.020
是不是还有

48:40.020 --> 48:42.020
已经没有落子的地方了

48:42.020 --> 48:44.020
如果这个数组中

48:44.020 --> 48:45.020
不包含

48:45.020 --> 48:47.020
这个东西

48:47.020 --> 48:48.020
说明

48:48.020 --> 48:49.020
这个棋盘里边

48:49.020 --> 48:50.020
咱们的棋子

48:50.020 --> 48:51.020
已经下满了

48:51.020 --> 48:54.020
已经没有任何空的位置

48:54.020 --> 48:55.020
可以下了

48:55.020 --> 48:56.020
所以说

48:56.020 --> 48:57.020
如果这个数组中

48:57.020 --> 48:59.020
不包含加了个感叹号

48:59.020 --> 49:00.020
取反

49:00.020 --> 49:01.020
不包含这个东西

49:01.020 --> 49:02.020
那么说明

49:02.020 --> 49:03.020
这个时候游戏

49:03.020 --> 49:04.020
又没有胜利

49:04.020 --> 49:05.020
那么说明只能是评矩了

49:05.020 --> 49:06.020
返回

49:06.020 --> 49:08.020
game standards

49:08.020 --> 49:09.020
一括

49:09.020 --> 49:11.020
评矩

49:11.020 --> 49:13.020
这就是评矩的判断

49:13.020 --> 49:14.020
咱们来试一下

49:14.020 --> 49:15.020
看一下能不能得到评矩

49:15.020 --> 49:16.020
评矩

49:16.020 --> 49:17.020
我们看一下没矩的指示多少

49:17.020 --> 49:19.020
评矩是0123

49:19.020 --> 49:20.020
评矩是3

49:20.020 --> 49:22.020
评矩

49:22.020 --> 49:24.020
评矩

49:24.020 --> 49:25.020
好

49:25.020 --> 49:26.020
是3

49:26.020 --> 49:27.020
咱们来看一下

49:27.020 --> 49:28.020
随便下吧

49:28.020 --> 49:29.020
下个评矩出来

49:29.020 --> 49:31.020
123

49:31.020 --> 49:32.020
对

49:32.020 --> 49:33.020
封一下

49:33.020 --> 49:34.020
点击

49:34.020 --> 49:35.020
点击

49:35.020 --> 49:36.020
点击

49:36.020 --> 49:37.020
封一下

49:37.020 --> 49:38.020
点击

49:38.020 --> 49:39.020
好

49:39.020 --> 49:40.020
评矩

49:40.020 --> 49:42.020
看一下最后游戏状态

49:42.020 --> 49:44.020
game standards 3

49:44.020 --> 49:45.020
没问题

49:45.020 --> 49:46.020
确实是评矩

49:46.020 --> 49:47.020
好

49:47.020 --> 49:48.020
通过这个东西

49:48.020 --> 49:49.020
通过这个函数

49:49.020 --> 49:52.020
我们就可以得到一个正确的游戏状态

49:52.020 --> 49:53.020
而这个函数什么时候调用呢

49:53.020 --> 49:55.020
每一次落子过后

49:55.020 --> 49:57.020
就调用这个函数

49:57.020 --> 49:58.020
得到新的游戏状态

49:58.020 --> 50:00.020
给它重新复制

50:00.020 --> 50:01.020
好

50:01.020 --> 50:02.020
现在呢

50:02.020 --> 50:03.020
其实这个

50:03.020 --> 50:05.020
已经把最核心的功能就做出来了

50:05.020 --> 50:07.020
最核心的功能已经做出来了

50:07.020 --> 50:08.020
那么接下来

50:08.020 --> 50:10.020
我们把这个地方做了

50:10.020 --> 50:12.020
就是显示当前的游戏状态

50:12.020 --> 50:13.020
这个地方呢

50:13.020 --> 50:15.020
我可以专门用一个

50:15.020 --> 50:16.020
组件来做吧

50:16.020 --> 50:17.020
专门写个组件

50:17.020 --> 50:19.020
用于显示游戏状态

50:19.020 --> 50:20.020
新建个文件

50:20.020 --> 50:21.020
这个文件呢

50:21.020 --> 50:23.020
其实一开始都没有把它规划出来

50:23.020 --> 50:25.020
只是在写这个game的

50:25.020 --> 50:26.020
组件的时候呢

50:26.020 --> 50:27.020
发现确实需要这么一个组件

50:27.020 --> 50:29.020
来显示游戏状态

50:29.020 --> 50:31.020
game standards

50:31.020 --> 50:34.020
standards comp

50:34.020 --> 50:36.020
写这么一个组件

50:36.020 --> 50:39.020
tsx

50:39.020 --> 50:40.020
这里呢

50:40.020 --> 50:42.020
导出

50:42.020 --> 50:44.020
导出一个函数组件

50:44.020 --> 50:48.020
game standards comp

50:48.020 --> 50:49.020
它有属性

50:49.020 --> 50:51.020
属性需要传什么呢

50:51.020 --> 50:53.020
只需要告诉它游戏状态就行了

50:53.020 --> 50:55.020
以及谁胜利

50:55.020 --> 50:57.020
其实游戏状态里面就有谁胜利了

50:57.020 --> 50:59.020
就已经有谁胜利了

50:59.020 --> 51:00.020
这里呢

51:00.020 --> 51:01.020
我告诉它一下

51:01.020 --> 51:02.020
interface

51:02.020 --> 51:05.020
给它限制一下这个属性

51:05.020 --> 51:06.020
它里面有啥呢

51:06.020 --> 51:08.020
你要告诉我游戏状态

51:08.020 --> 51:09.020
standards

51:10.020 --> 51:12.020
它的类型是game standards

51:12.020 --> 51:14.020
是个美剧类型

51:14.020 --> 51:16.020
其实这里你仔细思考

51:16.020 --> 51:18.020
它除了要显示游戏状态之外

51:18.020 --> 51:21.020
它有可能会显示下一个落子的是谁

51:21.020 --> 51:23.020
是哪个东西在落子

51:23.020 --> 51:24.020
是红方落子

51:24.020 --> 51:25.020
还是黑方落子

51:25.020 --> 51:26.020
你看一下

51:26.020 --> 51:27.020
咱们来看一下

51:27.020 --> 51:30.020
它有可能会显示

51:30.020 --> 51:32.020
显示游戏状态

51:32.020 --> 51:33.020
刚才呢

51:33.020 --> 51:34.020
它没有显示游戏状态

51:34.020 --> 51:35.020
刚才显示的是谁落子

51:35.020 --> 51:37.020
就是在游戏还没有结束的时候

51:37.020 --> 51:39.020
它要显示下一个落子的是谁

51:39.020 --> 51:40.020
因此呢

51:40.020 --> 51:41.020
你还要告诉我一个东西

51:41.020 --> 51:43.020
因为游戏有可能没结束

51:43.020 --> 51:44.020
所以说你要告诉我

51:44.020 --> 51:45.020
下一个是谁落子

51:45.020 --> 51:46.020
next

51:46.020 --> 51:49.020
它有可能跟在那边的约束是一样的

51:49.020 --> 51:50.020
它有可能是

51:50.020 --> 51:52.020
chase type

51:52.020 --> 51:53.020
红色

51:53.020 --> 51:54.020
红方落子

51:54.020 --> 51:55.020
或者是

51:55.020 --> 51:57.020
chase type

51:57.020 --> 51:58.020
black

51:58.020 --> 51:59.020
黑方落子

51:59.020 --> 52:00.020
你告诉我这两个东西就行了

52:00.020 --> 52:02.020
这里我约束一下

52:02.020 --> 52:03.020
approps

52:03.020 --> 52:04.020
约束一下

52:04.020 --> 52:05.020
这里返回

52:05.020 --> 52:06.020
返回啥

52:06.020 --> 52:08.020
就返回个div

52:08.020 --> 52:09.020
div

52:09.020 --> 52:10.020
standards

52:10.020 --> 52:11.020
standards

52:12.020 --> 52:14.020
这里面显示什么文本呢

52:14.020 --> 52:16.020
这里面显示的是啥呢

52:16.020 --> 52:18.020
我们这里做个判断吧

52:18.020 --> 52:19.020
做个判断

52:20.020 --> 52:21.020
我们想一想

52:21.020 --> 52:22.020
这一块

52:22.020 --> 52:25.020
有可能是直接显示一个文字

52:25.020 --> 52:26.020
有可能是

52:26.020 --> 52:28.020
总之这里显示一个元素吧

52:28.020 --> 52:29.020
我们直接显示一个元素

52:29.020 --> 52:31.020
我这里定一个辩量

52:31.020 --> 52:33.020
这个辩量是content

52:33.020 --> 52:35.020
显示的内容

52:35.020 --> 52:37.020
显示内容跟约束一下内形

52:37.020 --> 52:38.020
这里要显示一个元素

52:38.020 --> 52:39.020
这里要显示一个元素

52:39.020 --> 52:41.020
那么既然显示的是一个元素的话

52:41.020 --> 52:43.020
我这里就用这种内容

52:43.020 --> 52:44.020
js

52:44.020 --> 52:45.020
我们之前见过了

52:45.020 --> 52:46.020
对吧

52:46.020 --> 52:47.020
这个内容里面有个ediment

52:47.020 --> 52:49.020
它显示的是一个元素

52:51.020 --> 52:53.020
我们这里判断一下

52:53.020 --> 52:55.020
首先看游戏有没有结束

52:55.020 --> 52:56.020
props

52:57.020 --> 52:58.020
standards

52:59.020 --> 53:00.020
是不是等于

53:01.020 --> 53:03.020
是不是不等于

53:03.020 --> 53:05.020
game standards

53:06.020 --> 53:07.020
read

53:08.020 --> 53:09.020
gaming

53:10.020 --> 53:12.020
是不是不等于游戏正在进行中

53:12.020 --> 53:14.020
如果不等于的话

53:14.020 --> 53:15.020
说明

53:15.020 --> 53:17.020
游戏是不是结束了

53:17.020 --> 53:19.020
游戏就已经结束了

53:19.020 --> 53:20.020
或者说

53:20.020 --> 53:21.020
如果想等的话

53:21.020 --> 53:23.020
说明游戏正在进行中

53:23.020 --> 53:24.020
游戏正在进行中的话

53:24.020 --> 53:25.020
我显示啥了

53:25.020 --> 53:27.020
显示下一个落子是黑方

53:27.020 --> 53:28.020
还是红方

53:28.020 --> 53:30.020
所以说这里我们继续判断

53:30.020 --> 53:32.020
如果下一个落子

53:32.020 --> 53:34.020
这里的逻辑大家要理一下

53:35.020 --> 53:37.020
下一个落子是

53:37.020 --> 53:38.020
chase

53:38.020 --> 53:39.020
tap

53:39.020 --> 53:40.020
红方的话

53:40.020 --> 53:42.020
下一个落子是红方的话

53:42.020 --> 53:45.020
那么这里我给它这个辨量负责

53:45.020 --> 53:46.020
content

53:46.020 --> 53:48.020
负责为啥呢

53:48.020 --> 53:51.020
负责为一个div吧

53:51.020 --> 53:52.020
负责为div

53:52.020 --> 53:54.020
给它一个内容是

53:54.020 --> 53:56.020
next

53:57.020 --> 53:58.020
read

53:58.020 --> 54:00.020
给它负责这么一个内容是

54:00.020 --> 54:01.020
好

54:01.020 --> 54:02.020
再来

54:02.020 --> 54:04.020
else

54:04.020 --> 54:06.020
那么就是下一个落子呢

54:06.020 --> 54:07.020
是黑方

54:07.020 --> 54:09.020
next

54:09.020 --> 54:10.020
black

54:10.020 --> 54:11.020
黑方

54:11.020 --> 54:15.340
这里写上红方落子

54:16.340 --> 54:19.340
这里写上黑方落子

54:19.340 --> 54:22.340
我把这个东西做成一个组件

54:22.340 --> 54:23.340
else

54:23.340 --> 54:24.340
外面这个else

54:24.340 --> 54:26.340
就说明游戏已经结束了

54:26.340 --> 54:27.340
游戏结束了

54:27.340 --> 54:28.340
三种情况

54:28.340 --> 54:29.340
判断一下

54:29.340 --> 54:31.340
如果

54:31.340 --> 54:33.340
当前的游戏状态

54:33.340 --> 54:34.340
probs

54:34.340 --> 54:35.340
standards

54:35.340 --> 54:37.340
如果游戏状态为啥呢

54:37.340 --> 54:39.340
为game standards

54:39.340 --> 54:40.340
为什么呢

54:40.340 --> 54:42.340
为红方胜利

54:42.340 --> 54:44.340
为红方胜利

54:44.340 --> 54:47.340
那么我给这个辨量负责为一个div

54:47.340 --> 54:50.340
给它负责一个win

54:50.340 --> 54:52.340
并且是红方胜利

54:52.340 --> 54:55.340
这里写上红方胜利

54:55.340 --> 54:57.340
到时候样式会有点不一样

54:57.340 --> 54:59.340
然后else

54:59.340 --> 55:00.340
else

55:00.340 --> 55:02.340
content

55:02.340 --> 55:03.340
div

55:03.340 --> 55:04.340
win

55:04.340 --> 55:05.340
黑方胜利

55:05.340 --> 55:07.340
这里还有种情况对吧

55:07.340 --> 55:08.340
还有凭语

55:08.340 --> 55:10.340
这里是

55:10.340 --> 55:11.340
else

55:11.340 --> 55:12.340
probs

55:12.340 --> 55:13.340
standards

55:13.340 --> 55:16.340
释放等于game standards

55:16.340 --> 55:18.340
black

55:18.340 --> 55:19.340
win

55:19.340 --> 55:20.340
黑方胜利

55:20.340 --> 55:23.340
那么这里写上黑方胜利

55:23.340 --> 55:25.340
你只要把这些信息告诉我

55:25.340 --> 55:27.340
我是主要负责显示的

55:27.340 --> 55:28.340
我不处理任何逻辑

55:28.340 --> 55:30.340
我只是负责显示

55:30.340 --> 55:31.340
else

55:31.340 --> 55:33.340
平局

55:33.340 --> 55:35.340
class

55:35.340 --> 55:37.340
lay

55:37.340 --> 55:40.340
win

55:40.340 --> 55:41.340
equal

55:41.340 --> 55:42.340
平局

55:42.340 --> 55:43.340
平局

55:43.340 --> 55:45.710
ok

55:45.710 --> 55:48.710
现在我们把这些情况都判断了一下

55:48.710 --> 55:50.710
如果游戏结束了

55:50.710 --> 55:51.710
如果游戏正在进行

55:51.710 --> 55:52.710
没有结束

55:52.710 --> 55:53.710
那么我看一下是红方落子

55:53.710 --> 55:55.710
还是黑方落子

55:55.710 --> 55:56.710
如果游戏结束了

55:56.710 --> 55:57.710
我看一下是哪一方得到胜利

55:57.710 --> 55:59.710
你只要把这些信息告诉我

55:59.710 --> 56:00.710
就行了

56:00.710 --> 56:02.710
有了这么一个组件过后

56:02.710 --> 56:03.710
咱们在这边

56:03.710 --> 56:05.710
就可以使用这个组件了

56:05.710 --> 56:07.710
这里面有一个旗盘

56:07.710 --> 56:09.710
旗盘上面我再加一个组件

56:09.710 --> 56:11.710
这个组件的名字叫做

56:11.710 --> 56:13.710
game standards

56:13.710 --> 56:15.710
standards comp

56:15.710 --> 56:16.710
这个组件

56:16.710 --> 56:18.710
这个组件我需要传递一些属性

56:18.710 --> 56:20.710
一个是standards

56:20.710 --> 56:22.710
传递为啥呢

56:22.710 --> 56:24.710
传递为当前状态的

56:24.710 --> 56:27.710
game standards

56:27.710 --> 56:29.710
然后它里面有一个next

56:29.710 --> 56:30.710
下一个落子

56:30.710 --> 56:31.710
传递为啥呢

56:31.710 --> 56:33.710
当前状态的next

56:33.710 --> 56:34.710
下个落子

56:34.710 --> 56:35.710
把这些数据传过去

56:35.710 --> 56:37.710
咱们看一下

56:37.710 --> 56:38.710
这边

56:38.710 --> 56:39.710
我们这

56:39.710 --> 56:40.710
又是那个问题

56:40.710 --> 56:42.710
老是忘记的

56:42.710 --> 56:43.710
老是忘记

56:43.710 --> 56:44.710
不过无所谓

56:44.710 --> 56:46.710
它提示得很清楚了

56:46.710 --> 56:47.710
react

56:47.710 --> 56:48.710
from

56:48.710 --> 56:49.710
react

56:50.710 --> 56:51.710
保存一下

56:51.710 --> 56:53.710
咱们来看一下

56:54.710 --> 56:55.710
点击

56:55.710 --> 56:56.710
点击

56:56.710 --> 56:57.710
点击

56:57.710 --> 56:58.710
点击

56:58.710 --> 57:00.710
这里没显示出来对吧

57:00.710 --> 57:02.710
没有显示出来

57:02.710 --> 57:04.710
我看一下怎么回事

57:04.710 --> 57:06.710
我没有把这个content

57:06.710 --> 57:07.710
没有把这个content

57:07.710 --> 57:09.710
放到这里边

57:09.710 --> 57:10.710
没把它作为显示

57:10.710 --> 57:11.710
放到这里边

57:11.710 --> 57:12.710
放进来

57:12.710 --> 57:14.710
保存

57:14.710 --> 57:16.710
你看一开始黑方落子

57:16.710 --> 57:17.710
现在央视先不管

57:17.710 --> 57:18.710
央视先不管

57:18.710 --> 57:19.710
黑方落子

57:19.710 --> 57:20.710
点击下你看

57:20.710 --> 57:21.710
红方落子

57:21.710 --> 57:22.710
又是黑方落子

57:22.710 --> 57:24.710
红方落子

57:24.710 --> 57:25.710
黑方落子

57:25.710 --> 57:26.710
点击黑方胜利

57:26.710 --> 57:27.710
就不能动了

57:27.710 --> 57:28.710
也就是说

57:28.710 --> 57:30.710
这里的文字

57:30.710 --> 57:31.710
是完全根据

57:31.710 --> 57:32.710
我们这两个

57:32.710 --> 57:33.710
传过去的属性

57:33.710 --> 57:35.710
完全根据这两个属性来决定的

57:35.710 --> 57:36.710
而这两个属性

57:36.710 --> 57:38.710
会随着每一次落子和变化

57:38.710 --> 57:40.710
导致它重新选的

57:40.710 --> 57:41.710
现在我们把央视

57:41.710 --> 57:42.710
稍微设置一下

57:42.710 --> 57:43.710
给的刚才的主键

57:43.710 --> 57:44.710
设置一下央视

57:44.710 --> 57:47.710
gamestandars.comp.css

57:47.710 --> 57:49.710
那设置一下央视

57:49.710 --> 57:50.710
把央视导入进来

57:50.710 --> 57:56.710
import.gamestandars.comp.css

57:58.710 --> 57:59.710
设置一下央视

57:59.710 --> 58:00.710
这里面一个standars

58:00.710 --> 58:02.710
我当它里面的内容居中吧

58:02.710 --> 58:04.710
standars

58:04.710 --> 58:05.710
让它take a second

58:05.710 --> 58:06.710
这个很好说

58:06.710 --> 58:07.710
center

58:07.710 --> 58:08.710
把内容居中一下

58:08.710 --> 58:09.710
然后里面的文字的话

58:09.710 --> 58:11.710
from size

58:11.710 --> 58:15.710
给它设置为1.5em

58:15.710 --> 58:18.710
试一下

58:18.710 --> 58:20.710
差不多有点这个意思了

58:20.710 --> 58:22.710
然后这里边

58:22.710 --> 58:24.710
这里边黑方落子

58:24.710 --> 58:25.710
就是如果有这个的央视

58:25.710 --> 58:26.710
standars

58:26.710 --> 58:28.710
如果有红色的这个内容居的话

58:28.710 --> 58:30.710
我们给它设置一下

58:30.710 --> 58:32.710
colorf20

58:32.710 --> 58:33.710
淘宝红

58:33.710 --> 58:35.710
如果有standars

58:35.710 --> 58:36.710
black

58:36.710 --> 58:37.710
黑方这个样式的话

58:37.710 --> 58:38.710
color

58:38.710 --> 58:39.710
给它设置为

58:39.710 --> 58:40.710
黑色吧

58:40.710 --> 58:41.710
零零

58:41.710 --> 58:42.710
其实不设置黑色的话

58:42.710 --> 58:43.710
默认就是黑色

58:43.710 --> 58:44.710
黑方落子

58:44.710 --> 58:45.710
点一下

58:45.710 --> 58:46.710
红方落子

58:46.710 --> 58:47.710
因为我们发现

58:47.710 --> 58:49.710
这里面我写代码的时候

58:49.710 --> 58:51.710
我是写样式的时候

58:51.710 --> 58:52.710
只要是红方

58:52.710 --> 58:53.710
跟红方相关的

58:53.710 --> 58:54.710
我就加了这么一个内属性

58:54.710 --> 58:55.710
red

58:55.710 --> 58:57.710
其实这个属性好像没什么必要了

58:57.710 --> 58:59.710
这个东西好像没什么必要

58:59.710 --> 59:04.110
继续写下这个样式

59:04.110 --> 59:05.110
就是胜利之后

59:05.110 --> 59:07.110
我希望给它加一个边框

59:07.110 --> 59:08.110
胜利之后

59:08.110 --> 59:09.110
给它加一个边框

59:09.110 --> 59:10.110
而胜利之后

59:10.110 --> 59:11.110
我们看一下

59:11.110 --> 59:12.110
胜利之后

59:12.110 --> 59:13.110
每一个元素

59:13.110 --> 59:14.110
它都有一个win

59:14.110 --> 59:15.110
这个样式

59:15.110 --> 59:16.110
我就把边框

59:16.110 --> 59:17.110
加上去玩的时候了

59:17.110 --> 59:19.110
咱们再来一下

59:19.110 --> 59:21.110
它加上一个边框

59:21.110 --> 59:23.110
standars

59:23.110 --> 59:26.110
win

59:26.110 --> 59:27.110
加上一个边框

59:28.110 --> 59:29.110
border

59:29.110 --> 59:30.110
边框的颜色

59:30.110 --> 59:31.110
我就不设置了

59:31.110 --> 59:32.110
边框的颜色

59:32.110 --> 59:33.110
我就不设置了

59:33.110 --> 59:35.110
就让它用使用文字的颜色

59:35.110 --> 59:36.110
文字是什么颜色

59:36.110 --> 59:37.110
边框就是什么颜色

59:37.110 --> 59:38.110
然后设置一下

59:38.110 --> 59:40.110
border radius

59:40.110 --> 59:41.110
设置为无相处

59:42.110 --> 59:43.110
咱们再看一下

59:43.110 --> 59:44.110
看一下

59:44.110 --> 59:45.110
胜利之后

59:45.110 --> 59:46.110
它的边框

59:46.110 --> 59:47.110
红方

59:47.110 --> 59:48.110
黑方

59:48.110 --> 59:49.110
红方

59:49.110 --> 59:50.110
黑方

59:51.110 --> 59:53.110
这个边框有点太大了

59:53.110 --> 59:54.110
太大了

59:54.110 --> 59:55.110
那么这里

59:55.110 --> 59:57.110
设置一下

59:57.110 --> 59:58.110
这个

59:58.110 --> 01:00:00.110
这里面的div

01:00:00.110 --> 01:00:02.110
这里面的div

01:00:02.110 --> 01:00:03.110
就是这个div

01:00:03.110 --> 01:00:05.110
它的宽度

01:00:05.110 --> 01:00:07.110
或者设置外面的div的宽度也行

01:00:07.110 --> 01:00:09.110
设置一下外面的div的宽度吧

01:00:09.110 --> 01:00:10.110
设置这个宽度

01:00:10.110 --> 01:00:12.110
宽度为150

01:00:12.110 --> 01:00:13.110
150个相处

01:00:13.110 --> 01:00:16.110
然后使用margin

01:00:16.110 --> 01:00:18.110
eam

01:00:18.110 --> 01:00:19.110
out

01:00:19.110 --> 01:00:21.110
这样子

01:00:21.110 --> 01:00:22.110
好 再来一次

01:00:22.110 --> 01:00:24.110
耍性一次

01:00:24.110 --> 01:00:26.110
黑方落字

01:00:26.110 --> 01:00:27.110
红方

01:00:27.110 --> 01:00:28.110
黑方

01:00:28.110 --> 01:00:29.110
黑方

01:00:29.110 --> 01:00:30.110
红方

01:00:30.110 --> 01:00:31.110
红方胜利

01:00:31.110 --> 01:00:32.110
OK

01:00:32.110 --> 01:00:33.110
再看一下评矩

01:00:33.110 --> 01:00:35.110
评矩的样式还没有设置

01:00:35.110 --> 01:00:36.110
评矩的

01:00:36.110 --> 01:00:38.110
设置个字体的样式就行了

01:00:38.110 --> 01:00:39.110
因为边框的颜色

01:00:39.110 --> 01:00:41.110
跟字体的样式是一致的

01:00:41.110 --> 01:00:42.110
以过

01:00:42.110 --> 01:00:43.110
评矩

01:00:43.110 --> 01:00:44.110
评矩这里

01:00:44.110 --> 01:00:45.110
就用gray

01:00:45.110 --> 01:00:46.110
灰色吧

01:00:46.110 --> 01:00:47.110
灰色

01:00:47.110 --> 01:00:48.110
我们看清

01:00:48.110 --> 01:00:50.110
稍微调一下

01:00:50.110 --> 01:00:51.110
保存

01:00:51.110 --> 01:00:54.420
看一下评矩

01:00:54.420 --> 01:00:55.420
黑方

01:00:55.420 --> 01:00:56.420
红方

01:00:56.420 --> 01:00:57.420
黑方

01:00:57.420 --> 01:00:58.420
红方

01:00:58.420 --> 01:00:59.420
黑方

01:00:59.420 --> 01:01:00.420
红方

01:01:00.420 --> 01:01:01.420
黑方

01:01:01.420 --> 01:01:03.420
红方

01:01:03.420 --> 01:01:04.420
黑方

01:01:04.420 --> 01:01:05.420
诶 不行

01:01:05.420 --> 01:01:06.420
黑方胜利了

01:01:06.420 --> 01:01:08.420
等一下 再来

01:01:08.420 --> 01:01:09.420
黑方

01:01:09.420 --> 01:01:10.420
红方

01:01:10.420 --> 01:01:11.420
黑方

01:01:11.420 --> 01:01:12.420
红方

01:01:12.420 --> 01:01:13.420
黑方

01:01:13.420 --> 01:01:15.420
红方

01:01:15.420 --> 01:01:17.420
黑方

01:01:17.420 --> 01:01:18.420
红方

01:01:18.420 --> 01:01:19.420
黑方

01:01:19.420 --> 01:01:20.420
评矩

01:01:20.420 --> 01:01:21.420
OK

01:01:21.420 --> 01:01:23.420
好 这里的游戏状态搞定了

01:01:23.420 --> 01:01:25.420
其实都已经差不多了对不对

01:01:25.420 --> 01:01:27.420
还差啥呢

01:01:27.420 --> 01:01:29.420
还差一个正面的东西

01:01:29.420 --> 01:01:30.420
就是在这里

01:01:30.420 --> 01:01:32.420
下边有个按钮

01:01:32.420 --> 01:01:34.420
下边有个按钮

01:01:34.420 --> 01:01:35.420
button

01:01:35.420 --> 01:01:37.420
重新开始

01:01:37.420 --> 01:01:40.420
点击过后整个游戏重新开始

01:01:40.420 --> 01:01:41.420
onclick

01:01:41.420 --> 01:01:42.420
直接就写了

01:01:42.420 --> 01:01:44.420
onclick

01:01:44.420 --> 01:01:45.420
点击的时候

01:01:45.420 --> 01:01:47.420
怎么重新开始

01:01:47.420 --> 01:01:49.420
同学们

01:01:49.420 --> 01:01:50.420
怎么重新开始

01:01:50.420 --> 01:01:51.420
是不是调用这个

01:01:51.420 --> 01:01:52.420
之前写的这个函数

01:01:52.420 --> 01:01:54.420
初始化数据完事了

01:01:54.420 --> 01:01:56.420
this init

01:01:56.420 --> 01:01:58.420
初始化数据完事

01:01:58.420 --> 01:02:00.420
就重新开始了

01:02:00.420 --> 01:02:02.420
保存一下

01:02:02.420 --> 01:02:04.420
无论你这个游戏

01:02:04.420 --> 01:02:05.420
有没有结束

01:02:05.420 --> 01:02:06.420
下面有个按钮了

01:02:06.420 --> 01:02:07.420
看到没

01:02:07.420 --> 01:02:08.420
这个游戏进行到什么样子

01:02:08.420 --> 01:02:09.420
点重新开始

01:02:09.420 --> 01:02:11.420
一切回到最开始的状态

01:02:11.420 --> 01:02:12.420
把这个按钮了

01:02:12.420 --> 01:02:13.420
把局中吧

01:02:13.420 --> 01:02:14.420
把局中

01:02:14.420 --> 01:02:16.420
其实我难得去写这个

01:02:16.420 --> 01:02:17.420
CSS文件了

01:02:17.420 --> 01:02:19.420
我直接再写style

01:02:19.420 --> 01:02:20.420
写style

01:02:20.420 --> 01:02:22.420
就写一个

01:02:22.420 --> 01:02:24.420
他要求使用内

01:02:24.420 --> 01:02:26.420
使用对象的方式

01:02:26.420 --> 01:02:28.420
使用对象的方式

01:02:28.420 --> 01:02:29.420
没问题

01:02:29.420 --> 01:02:32.420
就写一个text

01:02:32.420 --> 01:02:34.420
ename

01:02:34.420 --> 01:02:36.420
写waycenter

01:02:36.420 --> 01:02:38.420
这里是个对象

01:02:38.420 --> 01:02:40.420
这里是个对象

01:02:40.420 --> 01:02:42.420
css对象

01:02:44.420 --> 01:02:46.420
这里少写个大括号

01:02:46.420 --> 01:02:49.420
保存

01:02:50.420 --> 01:02:52.420
就完事了

01:02:52.420 --> 01:02:54.420
就上面再加上一行字

01:02:54.420 --> 01:02:56.420
仅致骑游戏

01:02:56.420 --> 01:02:58.420
或者三年骑游戏

01:02:58.420 --> 01:03:00.420
骑

01:03:00.420 --> 01:03:02.420
三年骑

01:03:02.420 --> 01:03:04.420
骑

01:03:04.420 --> 01:03:06.420
骑盼游戏

01:03:06.420 --> 01:03:08.420
保存一下

01:03:08.420 --> 01:03:10.420
就完成了

01:03:10.420 --> 01:03:12.420
我就把这个做出来了

01:03:12.420 --> 01:03:13.420
黑方

01:03:13.420 --> 01:03:14.420
红方

01:03:14.420 --> 01:03:15.420
黑方

01:03:15.420 --> 01:03:16.420
好像这个骑

01:03:16.420 --> 01:03:18.420
我没有仔细去研究过

01:03:18.420 --> 01:03:19.420
先手必赢

01:03:19.420 --> 01:03:21.420
好像是

01:03:21.420 --> 01:03:23.420
好像是先手必赢

01:03:23.420 --> 01:03:25.420
重新开始

01:03:25.420 --> 01:03:26.420
我不知道了

01:03:26.420 --> 01:03:28.420
还可以去试一下

01:03:28.420 --> 01:03:29.420
通过这个练习

01:03:29.420 --> 01:03:30.420
我们主要的目的

01:03:30.420 --> 01:03:32.420
一个是

01:03:32.420 --> 01:03:34.420
练习一下咱们的ts

01:03:34.420 --> 01:03:36.420
跟react的结合

01:03:36.420 --> 01:03:38.420
另外一个是让大家体会到

01:03:38.420 --> 01:03:40.420
就通过开发这么一个小的练习

01:03:40.420 --> 01:03:42.420
体会到ts

01:03:42.420 --> 01:03:43.420
给我们带满了

01:03:43.420 --> 01:03:45.420
带来的那些好处

01:03:45.420 --> 01:03:47.420
可能有些同学

01:03:47.420 --> 01:03:49.420
觉得这个东西怎么这么复杂

01:03:49.420 --> 01:03:51.420
这个复杂度是不是ts带来的

01:03:51.420 --> 01:03:53.420
是不是ts带来的复杂度

01:03:53.420 --> 01:03:55.420
有些同学可能逻辑

01:03:55.420 --> 01:03:57.420
思维

01:03:57.420 --> 01:03:59.420
或者是基础部分

01:03:59.420 --> 01:04:01.420
或者是react的部分

01:04:01.420 --> 01:04:03.420
有一些东西没有学习

01:04:03.420 --> 01:04:04.420
到位

01:04:04.420 --> 01:04:06.420
可能觉得这个游戏

01:04:06.420 --> 01:04:07.420
怎么这么复杂

01:04:07.420 --> 01:04:08.420
如果你觉得复杂的话

01:04:08.420 --> 01:04:10.420
它一定跟ts没什么关系

01:04:10.420 --> 01:04:12.420
跟ts有啥关系呢

01:04:12.420 --> 01:04:13.420
你看这些弹

01:04:13.420 --> 01:04:15.420
得到

01:04:15.420 --> 01:04:17.420
得到游戏的

01:04:17.420 --> 01:04:19.420
就是最复杂的应该是在这

01:04:19.420 --> 01:04:20.420
得到游戏的状态

01:04:20.420 --> 01:04:21.420
这里比较复杂对吧

01:04:21.420 --> 01:04:23.420
这些弹码跟ts有啥关系呢

01:04:23.420 --> 01:04:25.420
有啥关系你看整个弹码里边

01:04:25.420 --> 01:04:26.420
也没有一句ts弹码

01:04:26.420 --> 01:04:28.420
没有任何关系啊

01:04:28.420 --> 01:04:29.420
我们通过这个练习呢

01:04:29.420 --> 01:04:31.420
主要是体会到ts

01:04:31.420 --> 01:04:33.420
对我们属性就是

01:04:33.420 --> 01:04:35.420
组建的属性的约束

01:04:35.420 --> 01:04:36.420
以及类型检查

01:04:36.420 --> 01:04:38.420
它会让我们写弹码的时候呢

01:04:38.420 --> 01:04:41.420
不容易去写一些错误的弹码

01:04:41.420 --> 01:04:42.420
比方说

01:04:42.420 --> 01:04:43.420
我们以前经常犯的错误

01:04:43.420 --> 01:04:44.420
当我给属性复制的时候

01:04:44.420 --> 01:04:46.420
有些纸我忘了复制了

01:04:46.420 --> 01:04:48.420
有些属性我忘了传递了

01:04:48.420 --> 01:04:50.420
这些是经常发生的事

01:04:50.420 --> 01:04:52.420
别看这里只有三个组建

01:04:52.420 --> 01:04:54.420
好像一共四个组建

01:04:54.420 --> 01:04:55.420
这里只有四个组建

01:04:55.420 --> 01:04:56.420
都容易发生这样的错误

01:04:56.420 --> 01:04:58.420
如果在真实一个项目里边

01:04:58.420 --> 01:04:59.420
几十个组建出现

01:04:59.420 --> 01:05:01.420
还包括使用一些UI库

01:05:01.420 --> 01:05:02.420
那里边有那么多组建

01:05:02.420 --> 01:05:04.420
有这么多属性之间

01:05:04.420 --> 01:05:06.420
需要传递和交互

01:05:06.420 --> 01:05:07.420
那你想一想

01:05:07.420 --> 01:05:09.420
这个错误发生的几率得多高

01:05:09.420 --> 01:05:11.420
其实我们开发为x的时候

01:05:11.420 --> 01:05:12.420
之前有很多学生

01:05:12.420 --> 01:05:13.420
我看他们的代码

01:05:13.420 --> 01:05:15.420
以及他们的问题都会发现

01:05:15.420 --> 01:05:16.420
绝大部分时候

01:05:16.420 --> 01:05:18.420
都是这个属性忘了传了

01:05:18.420 --> 01:05:20.420
该传制服窗的时候传了个数字

01:05:20.420 --> 01:05:21.420
该传对象的时候

01:05:21.420 --> 01:05:23.420
传了一个制服窗

01:05:23.420 --> 01:05:24.420
全是一些问题

01:05:24.420 --> 01:05:25.420
而这些问题

01:05:25.420 --> 01:05:26.420
导致了大量的调试时间

01:05:26.420 --> 01:05:28.420
但是有了ts之后

01:05:28.420 --> 01:05:29.420
我们对它的属性

01:05:29.420 --> 01:05:30.420
以及状态这些

01:05:30.420 --> 01:05:31.420
进行一个约束

01:05:31.420 --> 01:05:33.420
就不会产生这样的问题了

01:05:34.420 --> 01:05:35.420
当然在react里面

01:05:35.420 --> 01:05:36.420
去使用ts

01:05:36.420 --> 01:05:38.420
还有很多的细节

01:05:38.420 --> 01:05:40.420
咱们基础部分

01:05:40.420 --> 01:05:41.420
不会设计太多

01:05:41.420 --> 01:05:42.420
把这个练习

01:05:42.420 --> 01:05:43.420
大家下去

01:05:43.420 --> 01:05:44.420
把做出来

01:05:44.420 --> 01:05:45.420
做出来过后

01:05:45.420 --> 01:05:46.420
至少

01:05:46.420 --> 01:05:49.420
ts和react的最基本的使用

01:05:49.420 --> 01:05:50.420
你就学会了

01:05:50.420 --> 01:05:51.420
OK吧

01:05:51.420 --> 01:05:52.420
那么

01:05:52.420 --> 01:05:53.420
把这个练习

01:05:53.420 --> 01:05:54.420
下去把它完成

01:05:54.420 --> 01:05:56.420
那么这个项目

01:05:56.420 --> 01:05:57.420
就倒是结束了

01:05:57.420 --> 01:05:59.420
我们下个小节

01:05:59.420 --> 01:06:00.420
对整个项目

01:06:00.420 --> 01:06:01.420
以及咱们

01:06:01.420 --> 01:06:02.420
基础部分的ts

01:06:02.420 --> 01:06:03.420
学习到ts

01:06:03.420 --> 01:06:04.420
做一个总结

