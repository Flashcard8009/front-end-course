WEBVTT

00:00.000 --> 00:05.160
OK 我们上一节课的话给大家介绍了一下这个Hammer.js

00:05.560 --> 00:10.720
这个Hammer.js 我们说了它是这个移动端的一个这个第三方的这个手势库

00:11.440 --> 00:16.960
通过这个Hammer.js的话我们就可以非常方便的这个监听用户它的手势

00:17.400 --> 00:22.360
它比如说它是这个旋转还是这个这个捏合对吧 两个手指捏合

00:22.720 --> 00:28.600
那还是这个其他的什么评议之类的 我们就不需要自己来写这个js来判断了

00:28.920 --> 00:34.720
对吧 判断它现在当前是什么手指那个手势 然后再写我们的业务逻辑就非常麻烦

00:35.280 --> 00:42.360
啊 我们通过这个Hammer.js直接就可以知道啊 当前用户做的是什么样的手势 那根据它的这个手势

00:42.800 --> 00:49.040
然后输写我们的这个业务逻辑是不是就OK了 对吧 好 然后我们这一节课的话 我们就

00:50.200 --> 00:56.600
在这个就是上节课内容的基础上 我们来做一个Hammer.js的一个这个小的demo

00:57.080 --> 01:01.880
啊 我们来实现一个图片的这个拖动 说放 以及这个旋转啊

01:02.520 --> 01:09.000
好 大家可以看到我现在的话已经把我的手机投屏了 那我的手机的话 这边的话是有这么就是中间有这么一张图片

01:09.440 --> 01:15.240
看到没有 好 然后现在的话我一根手指 一根手指我放在这个图片上面 然后接下来的话你看

01:15.760 --> 01:18.440
我这边的话是可以做一个拖动的

01:19.760 --> 01:25.840
看到没有 可以做一个拖动 好 然后接下来的话我两根手指放在这个图片上面 那我可以做一个什么呢

01:26.000 --> 01:28.000
做一个放大 也可以做一个缩小

01:28.760 --> 01:34.080
ok 好 接下来再放大缩小的同时 然后我还可以干嘛呢 我还可以进行一个旋转

01:34.760 --> 01:39.440
看到没有 一边旋转一边变大 或者一边旋转一边这个变小

01:40.280 --> 01:46.200
ok 这边我们还可以做这个 反正就是拖动 说放和这个旋转

01:46.840 --> 01:50.680
ok 那我们这一节课的话 我们就来通过Hammer.js

01:51.080 --> 01:55.600
啊 使用这个Hammer.js的这个基础上来实现这么一个效果

01:56.320 --> 01:59.120
啊 好 这里 这里的话

02:00.000 --> 02:05.640
呃 这里的话 这个刚才我们演示的就是这个项目啊 就是这么一个这个项目

02:06.440 --> 02:07.520
那这个项目的话 然后

02:08.480 --> 02:14.720
呃 这里没什么东西 我们来看一下 这里的话首先一个html html里面是不是就是一个index.html

02:15.320 --> 02:22.040
然后一个image image就是这张图片啊 然后接下来一个这个js js就是我们的Hammer.js

02:22.520 --> 02:27.680
ok 就这么三个东西啊 然后接下来话 在这个index.html里面

02:28.040 --> 02:31.320
那我们这边的话就把从这到这 我们就不要了

02:32.280 --> 02:38.120
ok 我们一会儿自己来写 好 那接下来话 你来看一下 那现在的话他就是什么呢

02:38.840 --> 02:43.240
what 他这这个是那个机器人补权啊 直接跟我补权了 好 现在不需要

02:43.800 --> 02:51.080
好 你看这里 这里的话现在是不是就是一张图片啊 这个是这个图片啊 引入 然后就给了他一个id 给了一个class

02:51.720 --> 02:54.200
然后接下来这边的话 基本上也没有设置什么东西

02:55.040 --> 02:59.920
对吧 ok 好来我们现在看一下现在是什么样子 我们这边的话 我们保存一下

03:01.280 --> 03:03.320
保存了之后 然后接下来来到我们这边

03:04.040 --> 03:08.040
好 可以看到现在的话 这个图片的话就出现在左上角

03:08.960 --> 03:13.320
啊 左上角 然后接下来的话 现在的话也是 呃 任何操作都不生效

03:14.160 --> 03:17.880
ok 好 然后接下来的话 我们来编写我们的这个

03:18.840 --> 03:22.720
来编写我们的代码 我们这边刚好合适哈 这个放左边 这个放右边

03:23.720 --> 03:24.400
好 然后

03:26.160 --> 03:29.080
这里啊 这里的话 首先的话 我们这边

03:29.800 --> 03:35.920
哇一个一也二 等于一个什么呢 document点get element by id好的

03:36.440 --> 03:39.720
解老师现在写代码的速度非常快啊 得益于这些

03:40.840 --> 03:44.240
得益于这些这个很好用的工具啊 你看

03:44.840 --> 03:50.640
大家这边注释应该也可以自己出来啊 但这个注释不对 是吧 这个的话是什么呢 这个是

03:51.200 --> 03:53.840
获取多么节点 对吧 获取图片

03:55.000 --> 03:56.440
获取多么

03:57.840 --> 03:59.840
元素啊 就是获取这个图片

04:00.960 --> 04:08.840
图片多么元素 要么回头的话 无论是这个拖动 还是说放 还是这个旋转啊 都是在这个英魅机上面

04:09.160 --> 04:09.920
进行一个操作

04:10.720 --> 04:16.440
ok 好 然后接下来的话 我们这边的话 我们这个图片刚才我们出来的时候 我们让这个图片是在哪个位置

04:17.640 --> 04:18.920
是不是在这个正中间

04:20.120 --> 04:25.160
对不对 那正中间的话 那我这边的话就可以干嘛呢 我这边的话就可以

04:26.280 --> 04:28.320
哇 一个这个start

04:30.360 --> 04:31.480
start x

04:32.200 --> 04:35.320
它等于一个什么呢 它等于一个window

04:36.440 --> 04:37.080
window

04:38.200 --> 04:43.000
点in there wise window点in there wise是什么 是不是整个这一块

04:43.800 --> 04:53.560
对不对 这一块 然后接下来再减去什么呢 再减去它的宽度啊 说这边呢就减去这个一也要点这个

04:54.280 --> 04:55.880
offset wise

04:56.840 --> 05:04.600
啊 减去了之后 然后接下来话啊 这个是我们window的宽度 然后减去这个图片 图片这么宽 是不是就剩这一块

05:05.320 --> 05:09.960
对不对 大致的话就剩这一块 这一块的话 然后接下来干嘛 再除一个2

05:11.240 --> 05:16.360
对吧 再除一个2 那这个就是它应该一开始的这个x

05:17.160 --> 05:22.840
啊 就是我们的图片在中间吗 中间的话 那你这边的话 就这个点这个点是不是会有个x和y

05:23.720 --> 05:30.200
对吧 好 然后接下这边 你再把它干嘛呢 再把它就是四十五入一下啊 这边masktl

05:30.760 --> 05:31.160
round

05:32.520 --> 05:38.760
然后把它放进去 ok 好 我看这个 你看这个这个智能机器人厉不厉害

05:39.480 --> 05:49.240
这个智能机器人 看到没有 这不直接就知道我预测我下一句要写什么代码了 对不对 我按一下table键就可以了啊 ok 而这里的话就是初始化

05:51.160 --> 05:51.880
初始化

05:53.240 --> 05:53.800
初始

05:55.400 --> 06:03.960
我看他自动有没有提示 现在我还有点喜欢玩这个啊 这个真的还不错啊 初始化这个图片

06:05.240 --> 06:08.360
图片的x和y

06:09.800 --> 06:10.120
作标

06:11.240 --> 06:17.560
ok 把这一步做了 这一步做了之后 然后接下来我们再来初始化一些变量啊 初始化

06:19.880 --> 06:20.360
一些

06:21.560 --> 06:22.360
一些变量

06:23.160 --> 06:27.160
ok 那我们这边啊 哇一个什么呢 哇一个这个ticking

06:28.120 --> 06:31.560
啊 这个是一会做了一个防抖的啊 等于一个force

06:33.160 --> 06:39.960
这个是哎对对对啊 他这个提示真的是相当不错啊 好 然后接下来这边的话这个transform

06:40.760 --> 06:43.800
一开始 然后不给他给他一个空吗

06:44.440 --> 06:52.280
啊 这个呢就是图片的transform属性啊 好 然后接下来这边哇一个这个init angel

06:53.800 --> 07:00.520
Angel一开始等于0 这个是什么呢 这个的话是就是旋转啊 初始化旋转的角度

07:01.160 --> 07:07.480
哇 这个真的是大大提升了我写代码的效率啊啊 这个的话是初始化说放比例

07:07.960 --> 07:10.680
他已经猜到我要写什么了 对吧 okay

07:11.240 --> 07:17.480
好 然后接下来的话下一步 下一步的话我们就要开始来初始化这个Hammer接式了 对 就是你啊

07:17.960 --> 07:20.840
啊 初始化Hammer点接式啊 对 就是你啊

07:22.760 --> 07:27.640
啊 这个简直太好用了啊 你注意 这边的话和我们上节课讲的就不一样了

07:28.680 --> 07:34.120
注意哦 这边和上节课讲的就不一样了 这里的话我们是new一个Hammer点

07:34.680 --> 07:35.240
manager

07:35.880 --> 07:42.520
看到没有 哎 是不是和我们上节课讲的不一样 我们上节课的话我们来回顾一下啊 上节课我们这边

07:43.480 --> 07:51.000
上一节课我们这边在讲这个手势库的时候 我们这边是干嘛呀 我们这边就是new的Hammer

07:51.720 --> 07:58.280
对不对 大家把你这个要处理的动物元素是吧 扔进去就可以了 但是我们这边的话我们是干嘛呢

07:58.840 --> 08:06.600
我们这边的话是new的是一个Hammer点manager 这个是什么呢 好来过来看文档

08:07.320 --> 08:11.720
我来看文档啊 这边Hammer就他

08:13.160 --> 08:18.760
啊 然后接下来这边dux 然后接下来就这个getting started啊 在这最下面

08:20.280 --> 08:26.200
在这最下面ok more control you can set up your own set of

08:26.840 --> 08:34.760
啊 这个recognizers for your instance 就什么意思呢 你可以设置这个一组这个手势

08:35.400 --> 08:41.400
啊 this requires a bit more code啊 这个的话就是要稍微多写一些代码

08:42.040 --> 08:48.520
but it gives you more control about the gesture that have been这个recognized 它这个什么意思

08:49.160 --> 08:55.720
就是我们这边的话 因为我们这边是几个动作 我们这边整个是不是就是图片啊 看这里吧

08:56.840 --> 09:02.280
我们这边整个是不是就是图片的拖动 然后说放以及旋转 是不是三个

09:03.000 --> 09:11.960
对不对 那我就可以创建一个什么呢 我就可以创建一个这个管理器 那这个管理器的话就用来干嘛呢 用来就可以同时触发

09:12.360 --> 09:20.520
旋转 拖转和移动 ok 啊 首先我们这边把注射写下哈 这边的话就是创建

09:21.880 --> 09:28.840
一个管理器啊 这个管理器的作用就是干嘛呢 可以同时

09:29.560 --> 09:32.920
触发 触发什么呢 触发这个旋转

09:34.040 --> 09:36.520
然后说放和移动

09:38.040 --> 09:43.880
ok啊 好 然后接下来的话 我们就需要来添加一些就是我们的手势了

09:44.680 --> 09:51.080
哎对对对 就这个就这个啊 接下来的话 我们这边就来添加一些手势啊 首先的话你看我这边

09:51.400 --> 09:54.840
这边的话 我就mc and这个new hammer pan

09:55.560 --> 10:02.680
然后我们上几课说过 他是不是接受一个这个这个接受一个这个可配置的这个对象 这个对象的话在哪里看

10:03.480 --> 10:06.360
这个对象的话就是在

10:07.720 --> 10:08.920
pan啊

10:09.720 --> 10:17.640
是不是在这里 对不对 这里这个是他的法子啊 然后加这个是他的这个pointer是啊 你的平易的话 默认是不是一根手指就可以了

10:18.360 --> 10:24.360
对吧啊 然后接下来他这边啊 我们这边其实不需要这个参数 说我们这边呢就可以直接把这个给

10:25.080 --> 10:29.160
干掉啊 这边是添加一个移动的这个手势

10:29.800 --> 10:33.320
好 然后接下来我们再添加一个什么呢 我们再添加一个

10:35.240 --> 10:36.920
添加一个这边mc

10:38.360 --> 10:42.760
and啊 这边那是要一个什么呢 要一个rotate

10:43.880 --> 10:46.280
ok 这边那是添加一个旋转

10:48.200 --> 10:48.680
添加

10:50.040 --> 10:54.280
添加一个旋转的手势

10:56.520 --> 11:02.360
ok 然后我们在旋转的同时 我们允不允许他这个就是可以这个移动

11:02.920 --> 11:09.240
是不是可以的 我刚才已经演示中我旋转的同时是不也可以移动 那这个怎么做呢 你看这里 这里他写的有

11:10.600 --> 11:12.040
在这边最下面

11:12.920 --> 11:18.120
你可以通过什么呢 通过这个recognize waste 你这边点过去看一下

11:19.080 --> 11:23.080
regonize waste if you want to recognize to gesture

11:23.640 --> 11:29.800
啊 就是同时啊 同时识别两个手势 你可以干嘛呢 你可以使用这个regonize waste

11:30.600 --> 11:37.640
啊 大家里面添入什么呢 添入就是你比如说 你看他这边添加几个手势啊 是不添加两个手势 一个pinch一个

11:38.200 --> 11:40.280
rotate对不对 而且pinch点

11:40.760 --> 11:44.840
regonize waste 然后把这个rotate传进去就可以了

11:46.040 --> 11:51.880
ok 好 那你这边的话你可以像他这样子写啊 可以就是他这边是不是就是new的时候 然后是不是把这个

11:52.680 --> 11:59.320
拿了个变量接收他的返回值啊 这边也是拿一个变量是不是接收他的返回值啊 然后加这边是不是调用这个

11:59.560 --> 12:03.640
regonize waste啊 好 你也可以通过什么方式呢 你也可以通过这种方式

12:04.040 --> 12:08.040
就我这边的话是不是已经and and之后 然后接下来直接调

12:08.920 --> 12:10.040
这个regonize

12:11.720 --> 12:17.160
regonize 这个他还没有提升啊 我们这边把这个这个拿过来

12:18.120 --> 12:23.480
啊 直接调这个regonize好 然后接下来这里这个方法里面传什么呢

12:24.200 --> 12:28.680
这里的话你就可以通过管理器管理器他有一个get 方法

12:29.240 --> 12:35.240
可不 要get 方法然后获取到什么呢 获取到你刚才创建的这个pan这个手势

12:36.200 --> 12:43.560
看到没有啊 这里的话就是添加一个旋转的手势并且和移动手势同时识别队的就是你啊

12:44.200 --> 12:47.720
这个小机器人真的是我简直是爱上他了啊 我已经爱上他了

12:48.200 --> 12:53.080
好 然后接下来的话我们还要添加一个什么呢 我们还要添加一个这个pinch

12:53.560 --> 12:53.720
ok

12:55.000 --> 12:59.160
啊 对 就是你啊 我们还要添加一个这个pinch

13:00.120 --> 13:08.360
pinch 是什么pinch 是不是就说放对不对 那我们在说放的同时我们也允许他干嘛呢可以就是这个移动

13:08.760 --> 13:13.880
并且也可以干嘛呢也可以旋转 那这个怎么办 那这里的话你就可以

13:14.440 --> 13:16.920
写成一个什么呢 写成一个数组

13:17.720 --> 13:23.320
看到没有 数组里面 数组里面就是这个mcget pan这个手势

13:24.040 --> 13:29.640
pan这个手势啊 以及mc点get

13:30.280 --> 13:31.800
然后接下来这边

13:31.800 --> 13:32.280
rotate

13:34.280 --> 13:37.160
看到没有啊 这个注射我看他能不能跟我更新一下

13:38.760 --> 13:41.240
这个注射他不能更新我就只能手动更新

13:42.520 --> 13:49.320
添加一个说放手势 我看一下啊 并且和移动和旋转手势同时识别队啊

13:49.880 --> 13:51.480
哎 太这个简直太棒了

13:52.280 --> 13:55.400
太棒了 这是我写代码 写的最开心的一天

13:57.320 --> 14:00.920
好 然后接下来 接下来的话我们就要开始就是

14:01.800 --> 14:05.560
监听事件了 对吧 那我们这边的话我们就一个一个来

14:06.360 --> 14:07.720
那首先的话是这个

14:08.680 --> 14:09.720
呃移动

14:10.840 --> 14:13.640
啊 当移动手势开始事 那我们这边就mc

14:14.440 --> 14:18.840
啊 我们就直接在这个管理器上面啊 然后接下来的话监听

14:19.640 --> 14:22.360
监听什么呢 监听这个我们来看一下这个pan

14:23.560 --> 14:28.920
pan在这里啊 这个移动 移动的话我们上一课讲过这个pan的话

14:28.920 --> 14:30.520
他是不是他是一个组合

14:31.240 --> 14:34.200
对吧 他是什么呢 他是下面这一组的这个组合

14:34.680 --> 14:36.120
看到没有 有这个pan start

14:36.600 --> 14:39.240
pan move 然后pan and cancer 这些

14:39.240 --> 14:42.280
ok 那我们这边要什么呢 我们这边就是要这个pan

14:43.240 --> 14:46.280
start 以及这个pan move

14:47.240 --> 14:51.320
啊 就是开始移动 以及以及这个移动的这个过程中

14:53.320 --> 14:53.960
oh my god

14:55.000 --> 14:56.440
啊 这边到他已经给我

14:57.080 --> 14:57.800
写出来了

14:58.440 --> 15:00.760
啊 来 我们这边我们自己来写吧

15:01.320 --> 15:05.080
啊 我们自己来写啊 而且不仅写出来了 连

15:05.640 --> 15:08.440
重视都给我写好了 这个有点过分了吧

15:09.640 --> 15:12.280
对不对啊 来来来 我们自己来写啊

15:12.840 --> 15:14.360
啊 然后接下来的话这里

15:15.320 --> 15:23.480
啊 这他弹出来了 你不要那个啊 你只要不按table键啊 你按table键相当于就是应用他这个计算出来的代码

15:23.480 --> 15:25.880
啊 你这边写你的就可以了啊 你这边的话

15:26.440 --> 15:26.840
function

15:27.960 --> 15:31.080
啊 然后接下来这边我们要拿到什么呢 拿到这个时间对象

15:32.120 --> 15:37.000
对吧 拿到时间对象啊 拿到时间对象之后 然后接下来的话我这边

15:38.440 --> 15:40.600
这边的话我可以判断一下意义符

15:41.160 --> 15:46.200
他这个不是最后一次ev.isfano

15:48.680 --> 15:53.080
他不是最后一次 这个什么意思啊 这个的话在你这这边你是查得到的

15:53.960 --> 15:56.440
在这个getting started

15:57.320 --> 16:00.680
稍等啊 然后接下来啊 是API里面

16:01.640 --> 16:03.080
API里面你查得到的

16:04.680 --> 16:05.080
这边

16:06.040 --> 16:07.080
ev.is

16:08.360 --> 16:09.160
我看在哪里

16:10.200 --> 16:14.360
在在这里啊 就看你是否是最后一次input

16:15.160 --> 16:19.080
啊 如果是的话他就是返回处 否则返回force

16:19.960 --> 16:27.960
那我这边非 非的话说明什么 是不是最后一次输入啊 对不对 你在移动 移动的时候他这个就是

16:28.600 --> 16:28.840
呃

16:29.720 --> 16:34.680
他每移动就是这个该怎么解释呢 就是我这边的话比如我这个

16:35.320 --> 16:41.560
这个手指啊 比如这个手指 然后将我按住 然后将我移动的时候啊 他就是一直都是什么呢 一直就是

16:42.040 --> 16:48.280
不算是这个最后一次 那直到什么呢 直到你这个手指啊 移动完了你手指抬起的时候

16:48.840 --> 16:54.040
啊 你手指抬起的时候 然后接下来算是什么呢 算是最后一次啊 我这个我看怎么给你们看一下

16:54.600 --> 16:55.880
这样子 我们这样子来看一下

16:56.760 --> 16:58.600
看一下就可以了啊 我们这边log

16:59.160 --> 17:01.800
ev.isfano

17:01.960 --> 17:07.160
ok 我来看一下 啊 这边保存一下

17:08.920 --> 17:13.720
好 然后将我们这边我们来看一下 你看 你看 我现在的话我手指一直是不拖住在移动

17:14.120 --> 17:21.000
对不对 那他一直返回的是多少 是不是一直返回的是force啊 对不对 然后直到什么呢 直到我现在拖动到这儿 然后手指抬起来

17:21.640 --> 17:22.840
啊 我手指

17:23.960 --> 17:26.600
我手指抬起来 我看一下在我手机上

17:27.240 --> 17:31.240
稍等一下 重新刷新一下 好 比如说我这边重新刷新一下

17:31.640 --> 17:38.600
然后我这边按住 哦 但是那边又看不到是吧 就是我这边按住 然后将我拖动的时候 你看他返回的是一直force

17:38.920 --> 17:40.680
因为你这个拖动行为是不是还没有结束啊

17:41.400 --> 17:47.000
对不对 直到什么了 直到你现在手指抬起来 抬起来之后他就是会返回一个这个chu

17:47.640 --> 17:55.880
啊 但是不知道这边为什么这个chu没有打印出来啊 这边他照理说就是最后你手指抬起来的时候 他的这个值就变成chu了

17:56.520 --> 17:59.320
ok 好 那我们这边呢 就是

18:00.040 --> 18:07.160
呃 这边呢 你看这边取了个反 是不是就是拖动没有结束的时候 对不对啊 进入此义父

18:08.120 --> 18:15.800
进入此义父 说明这个拖动行为没有结束

18:16.600 --> 18:17.400
没有结束

18:18.360 --> 18:21.480
也就是用户一直

18:23.160 --> 18:25.480
一直都在进行

18:26.440 --> 18:32.360
拖动 ok 那这个拖动的时候 然后接下来我们这边就可以通过什么呢 通过e v

18:32.920 --> 18:38.680
就试验对象 他有一个什么呢 他上面有一个这个data x

18:39.960 --> 18:42.520
他是大写啊 有个data x

18:43.000 --> 18:51.160
好 然后接下来的话 然后接下来这边呢 就是要加上我们那个start 我们是不是其实有一个这个start x start y

18:51.720 --> 18:56.680
对不对 start x 加上一个这个e v

18:57.320 --> 19:03.000
data x 啊 然后接下来还有一个什么呢 还有一个这个start y

19:03.560 --> 19:08.600
那加上一个这个e v 点这个data y

19:09.080 --> 19:13.080
那这个是什么呢 这个就是我们新的x值和y值

19:13.640 --> 19:16.040
ok 那我们这边呢 我们就是transform

19:17.000 --> 19:18.600
我们这边呢

19:18.840 --> 19:19.880
transform

19:20.120 --> 19:21.160
点

19:21.400 --> 19:22.440
transnet

19:23.960 --> 19:26.760
他就等于一个什么呢 他就等于一个对象

19:27.320 --> 19:28.600
啊对象里面

19:28.840 --> 19:31.400
对象里面就有新的x

19:31.640 --> 19:33.960
然后新的y

19:35.000 --> 19:36.520
看了没有啊 这边给个doh

19:37.160 --> 19:37.800
格式画一下

19:38.840 --> 19:42.920
看了没有那也就是说用户在移动的同时我是不是一直在更新

19:43.160 --> 19:45.480
他这个最新的x和y

19:45.640 --> 19:46.200
对不对

19:47.480 --> 19:48.760
然后我们

19:51.080 --> 19:55.160
我们一直在更新这个

19:55.880 --> 20:02.200
啊 图片的位置也顿对哈 图片的这个x和y值

20:03.320 --> 20:08.360
对吧啊 更新啊 更新完了之后 然后接下来的话下一步

20:09.080 --> 20:10.280
你这边transform

20:10.520 --> 20:14.360
你是不是已经这个啊 拿到这个更新了这个x和y这个值啊

20:14.600 --> 20:20.760
然后接下来就需要干嘛呀 接下来的话是不是就是需要更新图片的transform属性

20:21.560 --> 20:26.200
对不对 那这个更新图片的transform属性这个的话我们一会儿要写一个这个

20:26.440 --> 20:28.760
函数啊 这个的话我们先放在这里

20:29.880 --> 20:35.000
ok 这是关于这个他手指移动的时候啊

20:35.400 --> 20:39.160
好 然后接下来我们来看一下就是关于这个手指说放的时候

20:41.930 --> 20:43.530
当这个手指

20:45.700 --> 20:50.900
当手指进行说放的时候

20:51.460 --> 20:53.700
那这边mc.on

20:54.340 --> 20:56.020
好 这边呢就是应该是什么呢

20:56.980 --> 20:58.660
说放的话是不是应该是拼啊

20:59.460 --> 20:59.780
对不对

21:01.780 --> 21:02.500
就是这里

21:03.780 --> 21:06.260
来看一下是不是应该是这个pinch

21:07.220 --> 21:10.100
对不对pinch的话他分为什么呢pinch start

21:10.420 --> 21:13.860
那pinch这个move啊我们这边就监听这两个世界

21:14.340 --> 21:16.100
啊 一个是拼切

21:17.380 --> 21:17.780
start

21:18.580 --> 21:20.020
一个是这个拼切

21:21.220 --> 21:21.540
move

21:22.100 --> 21:24.100
对吧 好 然后下这边的function

21:25.780 --> 21:27.460
拿到这个视线对象

21:28.180 --> 21:29.940
好 然后接下来的话这边这个

21:30.580 --> 21:33.140
当拿这个手指进行说放的时候

21:33.140 --> 21:34.740
那我们其实就是一个什么呀

21:34.740 --> 21:36.340
是不是就是一个图片的说放

21:36.900 --> 21:38.740
那图片的说放我们用什么

21:39.460 --> 21:42.340
图片的说放我们是不是使用这个scale

21:43.300 --> 21:43.700
对不对

21:44.180 --> 21:45.140
使用这个scale

21:46.020 --> 21:48.340
所以说我们这边的话就是修改他的scale

21:49.780 --> 21:52.100
好 那我们这边的话我们就是eave

21:53.940 --> 21:56.500
eave这个eave.type

21:57.300 --> 21:58.740
它全等于什么呢

21:58.740 --> 22:01.700
全等于这个pinch start

22:05.260 --> 22:05.500
啊

22:05.900 --> 22:07.340
那这边它就是什么呢

22:07.340 --> 22:09.900
进入此eave就说明这个说放开始

22:10.220 --> 22:13.100
那我们首先的话进行一个初始化说放的这个比例

22:13.100 --> 22:14.220
对 就是这轮带嘛

22:15.100 --> 22:16.060
就这轮带嘛

22:16.060 --> 22:17.500
这我少写了一个括号

22:18.380 --> 22:18.780
ok

22:19.180 --> 22:20.380
那我们这边呢就是

22:21.420 --> 22:23.340
进行一个这个初始化

22:23.580 --> 22:25.340
好 然后接下来的话

22:25.340 --> 22:26.140
哎呀 我天呐

22:26.140 --> 22:27.660
他把代码全部给我写完了

22:27.660 --> 22:28.540
我还讲啥呢

22:29.660 --> 22:32.060
好 然后接下来进入else

22:33.100 --> 22:34.140
进入else之后

22:34.140 --> 22:35.500
然后接下来这边就干嘛呢

22:35.500 --> 22:38.620
这边的话就是说明他是在说放进行中

22:39.180 --> 22:42.140
那我们这边呢就更新这个说放的这个比例

22:42.140 --> 22:43.900
那这边就是这个代码

22:44.220 --> 22:45.740
这边trash form scale

22:45.740 --> 22:46.460
就等于什么呢

22:46.460 --> 22:48.460
等于你这个初始化的这个scale

22:48.460 --> 22:51.500
成一个就是你通过这个事件对象里面

22:51.500 --> 22:53.420
可以拿拿到一个新的这个

22:53.980 --> 22:54.860
说放的这个比例

22:55.500 --> 22:55.740
ok

22:56.300 --> 22:56.940
对 就是这个

22:57.580 --> 22:58.620
好 然后完事之后

22:58.620 --> 22:59.340
然后接下来的话

22:59.340 --> 23:00.860
这边是不是也是要更新

23:01.340 --> 23:04.060
对 更新图片的trash form属性

23:04.060 --> 23:04.700
这边也是

23:05.100 --> 23:06.780
这个我们一会儿要写函数

23:06.780 --> 23:07.900
相当于你这边的话

23:08.620 --> 23:10.140
这这手势只是什么呢

23:10.140 --> 23:13.340
只是把新的这个trash form值算出来

23:13.420 --> 23:15.900
这边也是把新的trash form值算出来

23:15.900 --> 23:17.660
那接下统一掉一会儿

23:17.660 --> 23:19.260
统一掉一个函数

23:19.260 --> 23:20.620
来进行这个更新

23:21.740 --> 23:22.540
明白吧

23:22.540 --> 23:23.260
ok

23:23.260 --> 23:25.580
这是手指进行说放的时候

23:26.300 --> 23:27.660
好 然后接下来的话就是

23:28.460 --> 23:29.660
呃 当手指

23:31.420 --> 23:35.980
当手指进行旋转的时候

23:36.700 --> 23:37.180
对吧

23:37.180 --> 23:39.340
好 这边的mc点这个啊

23:40.140 --> 23:42.140
好 然后接下来这边的这个旋转

23:42.140 --> 23:43.260
我们来看一下这个旋转

23:44.220 --> 23:45.100
旋转的话

23:45.100 --> 23:46.460
它这边的话就是有

23:46.460 --> 23:49.980
rotate start move end

23:49.980 --> 23:51.340
啊 我们这边就是要这三个

23:51.340 --> 23:52.620
啊 就开始旋转

23:52.620 --> 23:54.140
旋转综合旋转结束

23:55.260 --> 23:57.980
那我们这边就是rotate start

23:59.500 --> 24:02.060
然后rotate

24:02.620 --> 24:03.660
然后move

24:04.300 --> 24:06.940
然后rotate end

24:07.580 --> 24:09.100
对吧 接听这三个

24:09.100 --> 24:10.380
好 然后再加这边function

24:11.100 --> 24:13.900
这边一个实验对象

24:13.900 --> 24:14.620
啊

24:14.620 --> 24:16.300
那在这个旋转之前

24:16.300 --> 24:18.620
我们这边要先定义几个变量

24:18.620 --> 24:19.820
啊 首先我们这边

24:19.820 --> 24:21.420
哇一个这个data

24:23.900 --> 24:26.300
哇一个这个data angel

24:27.580 --> 24:29.660
这边 angel

24:29.660 --> 24:30.460
等于一个什么呢

24:30.460 --> 24:31.100
等于一个0

24:31.660 --> 24:32.620
这个是什么呢

24:32.620 --> 24:35.740
这个的话就是你旋转角度的差值

24:36.620 --> 24:37.660
啊 旋转

24:38.380 --> 24:41.900
旋转角度的差值

24:41.900 --> 24:42.620
啊

24:42.620 --> 24:44.060
然后接下来还有一个什么呢

24:44.060 --> 24:46.780
还有一个哇一个这个starts

24:46.780 --> 24:48.460
然后rotate

24:49.820 --> 24:51.900
rotate angel

24:51.900 --> 24:53.820
一开始也是等于0

24:53.820 --> 24:54.860
这个是什么呢

24:54.860 --> 24:57.020
这个的话是就是

24:57.020 --> 24:59.500
开始时的这个旋转角度

24:59.500 --> 25:00.380
啊 对

25:00.380 --> 25:01.900
就是开始时的

25:02.780 --> 25:03.900
开始

25:05.100 --> 25:05.900
开始

25:05.900 --> 25:06.780
开始

25:07.100 --> 25:08.060
开始

25:09.340 --> 25:11.660
时的旋转角度

25:11.660 --> 25:12.140
ok

25:12.140 --> 25:13.580
把这个初始化了

25:13.580 --> 25:14.700
好 初始化了之后

25:14.700 --> 25:15.340
然后接下来的话

25:15.340 --> 25:16.460
我们就根据就是

25:16.460 --> 25:18.380
他的那个事件的那个type

25:18.380 --> 25:18.620
啊

25:18.620 --> 25:19.580
eif

25:19.580 --> 25:22.060
你的这个ev点这个type

25:22.060 --> 25:23.660
然后全等于一个什么呢

25:23.660 --> 25:25.580
全等于一个rotate

25:26.140 --> 25:26.940
啊 我好害怕

25:26.940 --> 25:28.460
他已经跟我推断出来了

25:28.460 --> 25:28.780
哈

25:28.780 --> 25:29.820
所以我打得比较快

25:30.460 --> 25:31.500
啊 这个是什么

25:31.500 --> 25:33.340
这个就是旋转开始时

25:34.060 --> 25:34.700
对吧

25:34.700 --> 25:35.660
旋转开始时

25:37.500 --> 25:41.020
这个呢是旋转开始时

25:41.020 --> 25:42.060
好 然后加这边呢

25:42.060 --> 25:42.620
复制两份

25:45.110 --> 25:45.830
可是画一下

25:46.470 --> 25:47.430
那接下来一份

25:48.070 --> 25:49.190
好 然后还有什么呢

25:49.190 --> 25:51.750
还有就是rotate move

25:52.310 --> 25:53.750
这个是旋转中

25:53.750 --> 25:54.310
对吧

25:54.310 --> 25:55.590
这个是旋转结束

25:56.310 --> 25:56.870
啊

25:56.870 --> 25:58.070
那不同的这个事件

25:58.070 --> 25:59.910
我们要做的事情不一样

25:59.910 --> 26:01.350
这个是旋转中

26:03.350 --> 26:05.590
旋转进行中

26:06.630 --> 26:07.030
对了

26:07.750 --> 26:08.950
好 然后接下来的话

26:08.950 --> 26:09.830
这边是什么呢

26:09.830 --> 26:12.550
这边是旋转结束

26:13.670 --> 26:14.230
啊

26:14.230 --> 26:15.270
旋转结束时

26:15.270 --> 26:15.990
ok

26:15.990 --> 26:17.190
好了 接下来我们首先来看

26:17.190 --> 26:18.870
这个旋转开始时

26:18.870 --> 26:19.910
旋转开始时

26:19.910 --> 26:20.470
我这边的话

26:20.470 --> 26:21.830
我就要记录一下

26:21.830 --> 26:24.870
你当前的旋转的这个角度

26:26.150 --> 26:26.870
ok

26:26.870 --> 26:28.070
好 那我们这边就干嘛呢

26:28.070 --> 26:28.630
我们这边呢

26:28.630 --> 26:29.910
就是start

26:31.110 --> 26:33.670
start这个rotate angel

26:33.670 --> 26:34.470
他等于什么呢

26:34.550 --> 26:37.750
等于一个e v 点这个rotation

26:38.470 --> 26:38.870
啊

26:38.870 --> 26:39.830
这个就是记录

26:41.110 --> 26:45.590
记录这个开始时的旋转角度

26:46.230 --> 26:46.470
好

26:46.470 --> 26:48.550
然后接下来你在旋转的时候

26:48.550 --> 26:49.510
旋转的时候

26:49.510 --> 26:50.310
然后接下来的话

26:50.310 --> 26:51.830
我这边的话就要干嘛呢

26:51.830 --> 26:54.630
我就要把你这个旋转的这个差值

26:55.110 --> 26:56.470
给你计算出来

26:56.470 --> 26:56.630
对

26:56.630 --> 26:57.510
就这个代码

26:57.510 --> 26:57.590
啊

26:57.590 --> 26:59.590
这边这个delta angel

26:59.590 --> 27:00.310
就等于什么呢

27:00.310 --> 27:00.950
你旋转

27:00.950 --> 27:01.830
你不停的旋转

27:01.830 --> 27:03.830
是不是会有一个这个事件对象

27:03.910 --> 27:07.110
那这个事件对象是不是会有新的这个旋转的这个字啊

27:07.110 --> 27:07.990
减去什么呢

27:07.990 --> 27:09.590
减去你开始的那个字啊

27:09.590 --> 27:11.430
那这个差值是不是就出来了

27:11.430 --> 27:12.070
对不对

27:12.070 --> 27:12.390
好

27:12.390 --> 27:13.590
差值出来了之后

27:13.590 --> 27:14.550
然后接下来的话

27:17.050 --> 27:17.770
接下来的话

27:17.770 --> 27:19.370
然后这样我们这边的话

27:19.370 --> 27:19.850
啊

27:19.850 --> 27:20.410
trace form

27:21.690 --> 27:22.490
trace form

27:22.490 --> 27:23.690
然后接下来

27:23.690 --> 27:25.130
点这个rz

27:25.930 --> 27:26.090
啊

27:26.090 --> 27:26.730
就z

27:26.730 --> 27:28.410
z的话我们始终是1

27:28.410 --> 27:29.130
啊

27:29.130 --> 27:29.450
好

27:29.450 --> 27:30.170
然后接下来的话

27:30.170 --> 27:30.490
这边

27:32.520 --> 27:34.040
trace form

27:34.040 --> 27:35.720
然后点这个angel

27:37.400 --> 27:37.800
angel

27:37.800 --> 27:38.760
它的这个角度

27:38.760 --> 27:39.720
就等于什么呢

27:39.720 --> 27:42.280
等于你这个init angel

27:42.280 --> 27:42.920
init angel

27:42.920 --> 27:44.600
是不是最开始的时候

27:44.600 --> 27:46.360
是不是定义了这个初始化的

27:46.360 --> 27:47.640
旋转角度啊

27:47.640 --> 27:48.520
对不对

27:48.520 --> 27:48.920
好

27:48.920 --> 27:50.360
这个加上一个什么呢

27:50.360 --> 27:51.080
加上一个

27:51.720 --> 27:52.840
delta angel

27:52.840 --> 27:53.080
好

27:53.080 --> 27:54.440
然后接下来的话干嘛呢

27:54.440 --> 27:55.400
接下来的话

27:56.760 --> 28:00.920
进行一个这个图片的这个trace form更新

28:00.920 --> 28:01.000
啊

28:01.000 --> 28:02.280
也就是掉了一个函数

28:03.080 --> 28:03.400
ok

28:04.600 --> 28:04.920
好

28:04.920 --> 28:06.760
那接下来结束的时候

28:06.760 --> 28:08.680
我们只需要干嘛呢

28:08.680 --> 28:10.120
只需要更新一下

28:10.120 --> 28:12.680
这个init angel就可以了

28:12.680 --> 28:13.080
啊

28:13.080 --> 28:13.880
就是旋转

28:14.920 --> 28:16.280
旋转结束的时候

28:19.690 --> 28:22.330
旋转结束的时候

28:23.050 --> 28:28.010
我们只需要更新一下

28:28.010 --> 28:29.050
这个初始化

28:30.090 --> 28:32.410
初始的旋转角度

28:33.850 --> 28:34.250
即可

28:35.530 --> 28:36.010
对吧

28:36.010 --> 28:36.250
好

28:36.250 --> 28:36.650
那这边呢

28:36.650 --> 28:38.090
就是init angel

28:39.610 --> 28:40.650
Angel

28:40.650 --> 28:41.690
等于一个什么呢

28:42.890 --> 28:44.650
等于一个这个trace form

28:44.650 --> 28:45.370
点Angel

28:46.250 --> 28:46.570
ok

28:47.370 --> 28:49.210
那这个就是关于这个旋转

28:49.770 --> 28:51.130
那我们就写完了

28:51.130 --> 28:51.450
好

28:51.450 --> 28:52.250
写完了之后

28:52.250 --> 28:55.610
然后接下来你看我们这边针对这三个手势啊

28:55.610 --> 28:56.410
你这个移动

28:56.970 --> 28:57.770
然后接下来的话

28:57.770 --> 28:59.450
你这边这个说放

28:59.450 --> 28:59.930
对吧

28:59.930 --> 29:01.450
然后加你这个旋转

29:01.450 --> 29:02.410
我们都干嘛呀

29:02.410 --> 29:04.730
是不是根据你这个不同的手势

29:04.730 --> 29:07.370
我记忆算出了最新的这个

29:07.450 --> 29:08.810
是trace form的这个字啊

29:09.370 --> 29:09.930
对不对

29:09.930 --> 29:11.210
记忆算出来之后

29:11.210 --> 29:12.730
然后就该干嘛呢

29:12.730 --> 29:13.370
接下来的话

29:13.370 --> 29:15.290
你是不是就应该应用这个字啊

29:15.290 --> 29:16.890
应用这个字对应的就是哪里

29:16.890 --> 29:17.610
是不是就是这里

29:17.610 --> 29:18.570
我这个问号问号

29:19.130 --> 29:19.530
对不对

29:19.530 --> 29:22.170
其实就是调用共同的一个这个函数

29:23.210 --> 29:23.850
ok

29:23.850 --> 29:24.090
好

29:24.090 --> 29:24.890
那接下来我们这边

29:24.890 --> 29:26.650
往下面我们继续来写啊

29:26.650 --> 29:27.610
好那这个写完了

29:27.610 --> 29:28.330
我就把它折起来

29:29.210 --> 29:29.850
就写完了

29:30.330 --> 29:31.130
把它折起来

29:33.210 --> 29:33.690
好

29:33.690 --> 29:35.290
然后接下来的话

29:35.290 --> 29:35.770
我们继续

29:36.730 --> 29:37.450
接下来的话

29:37.450 --> 29:38.410
我在这边

29:38.410 --> 29:39.130
这边的话

29:39.130 --> 29:40.090
我首先干嘛呢

29:40.090 --> 29:42.170
我先初始化一下元素的这个

29:42.970 --> 29:43.370
对对对

29:43.370 --> 29:44.010
就这个啊

29:44.010 --> 29:44.650
他都猜到

29:44.650 --> 29:46.250
他现在都猜到我要干什么了

29:46.250 --> 29:46.970
哈

29:46.970 --> 29:47.850
然后我首先的话

29:47.850 --> 29:48.810
初始

29:48.810 --> 29:49.610
初始化一下

29:49.610 --> 29:52.410
我们这个图片的这个trace form属性

29:52.410 --> 29:53.130
ok

29:53.130 --> 29:53.370
好

29:53.370 --> 29:53.850
我这边呢

29:53.850 --> 29:55.450
我写一个立即执行函数

29:56.170 --> 29:56.570
function

29:59.850 --> 30:00.730
啊

30:00.730 --> 30:02.330
在这个立即执行函数里面

30:02.330 --> 30:03.290
我们干嘛呢

30:03.290 --> 30:04.330
我这边的话

30:04.330 --> 30:04.810
我就是

30:06.730 --> 30:07.370
trace form

30:08.810 --> 30:10.730
trace form

30:10.730 --> 30:11.690
哎呀

30:11.690 --> 30:12.970
他这边的话

30:12.970 --> 30:13.370
啊

30:13.370 --> 30:14.730
全部给我写出来了

30:14.730 --> 30:16.490
你这让我很没面子呀

30:16.490 --> 30:17.290
啊

30:17.290 --> 30:18.490
好

30:18.490 --> 30:19.610
这边的话就是什么呢

30:19.610 --> 30:20.090
这边呢

30:20.090 --> 30:21.210
就是这个trace form

30:21.210 --> 30:22.730
你看我这边是不是给我们的

30:22.730 --> 30:23.610
这个trace net

30:23.610 --> 30:25.130
进定义了一个初始值啊

30:25.130 --> 30:26.490
这就是我图片的初

30:26.490 --> 30:27.770
这个初始值啊

30:27.770 --> 30:27.850
啊

30:27.850 --> 30:29.050
ok是这个start

30:29.050 --> 30:29.690
ok是

30:29.690 --> 30:30.490
y是啊

30:30.490 --> 30:31.210
start y

30:31.210 --> 30:32.010
对吧

30:32.010 --> 30:32.730
然后skill

30:32.730 --> 30:33.450
skill的话

30:33.450 --> 30:34.410
我们这个init

30:34.410 --> 30:35.370
这个是多少

30:35.370 --> 30:37.050
这是给的是1

30:37.530 --> 30:38.250
对吧

30:38.250 --> 30:38.570
好

30:38.570 --> 30:39.770
然后加这个Angel

30:40.410 --> 30:42.330
Angel是这个init angel

30:42.330 --> 30:43.290
init angel是多少

30:43.290 --> 30:44.010
是不是0

30:44.010 --> 30:44.810
对不对

30:44.810 --> 30:45.370
ok

30:45.370 --> 30:46.250
然后还有一个这个

30:47.290 --> 30:47.690
啊

30:47.690 --> 30:48.010
r

30:49.930 --> 30:51.450
rx啊

30:51.450 --> 30:52.810
对应的是这个0

30:54.090 --> 30:55.450
然后ry

30:56.410 --> 30:57.610
对应了也是0

30:57.610 --> 30:57.770
啊

30:57.770 --> 30:58.810
然后rz

30:58.810 --> 30:59.610
对应的是1

31:00.330 --> 31:00.970
ok

31:00.970 --> 31:01.210
啊

31:01.210 --> 31:01.610
首先的话

31:01.610 --> 31:01.930
这边呢

31:01.930 --> 31:04.170
是初始化这个trace form属性

31:04.170 --> 31:05.770
初始化完了之后

31:05.850 --> 31:07.370
然后我们这边的话

31:07.370 --> 31:09.770
我们就来定义一个

31:09.770 --> 31:10.730
function

31:10.730 --> 31:10.970
啊

31:10.970 --> 31:11.370
这边呢

31:11.370 --> 31:12.570
就是request

31:14.490 --> 31:15.290
request

31:16.650 --> 31:18.330
request这个element

31:18.970 --> 31:19.930
然后update

31:21.850 --> 31:22.010
啊

31:22.010 --> 31:23.210
这个函数是什么

31:23.210 --> 31:25.450
这个函数就是更新图片

31:26.410 --> 31:26.730
啊

31:26.730 --> 31:28.410
就是请求

31:30.490 --> 31:35.290
请求更新图片的trace form

31:36.730 --> 31:37.450
看到没有

31:37.450 --> 31:39.290
那我这边的话就该干嘛呀

31:39.290 --> 31:40.490
我这边的话是不是

31:40.490 --> 31:41.930
应该是调用这个函数

31:43.370 --> 31:44.010
对不对

31:44.010 --> 31:44.970
我这边的话

31:45.610 --> 31:46.810
就是应该是

31:46.810 --> 31:48.170
调用这个函数

31:48.170 --> 31:49.130
包括什么呢

31:49.130 --> 31:50.250
包括我上面

31:50.890 --> 31:51.050
啊

31:51.050 --> 31:53.210
上面我那个打问号的地方

31:53.210 --> 31:54.970
是不是就都应该是

31:54.970 --> 31:56.170
调用这个函数

31:57.530 --> 31:58.010
对不对

31:58.010 --> 31:58.330
啊

31:58.330 --> 31:59.210
所以我们把

31:59.210 --> 32:00.650
上面的那些打问号的地方

32:00.650 --> 32:01.530
我们就把它替换了

32:02.090 --> 32:02.650
啊

32:02.650 --> 32:03.050
这边

32:03.050 --> 32:04.730
你看这个trace form是不更新了吗

32:04.730 --> 32:05.210
更新了

32:05.210 --> 32:06.250
然后现在这边是不是

32:06.250 --> 32:08.010
应该是调用这个函数

32:08.650 --> 32:09.210
对吧

32:09.210 --> 32:09.450
啊

32:09.450 --> 32:09.770
把这个

32:10.410 --> 32:10.890
折起来

32:11.450 --> 32:11.770
好

32:11.770 --> 32:12.490
然后接下来这边

32:12.970 --> 32:13.530
这边的话

32:13.530 --> 32:14.410
是不是也是一样的

32:15.290 --> 32:15.930
对吧

32:15.930 --> 32:16.250
好

32:16.250 --> 32:17.130
然后接下来这边

32:18.010 --> 32:19.370
这边是在这个位置

32:20.730 --> 32:21.530
看到没有

32:21.530 --> 32:22.090
保存一下

32:24.520 --> 32:25.240
保存

32:25.240 --> 32:25.480
好

32:25.480 --> 32:26.920
我每次开了这个投屏之后

32:26.920 --> 32:28.440
然后现在他这个就跑死了

32:29.480 --> 32:29.880
好

32:29.880 --> 32:31.160
然后接下来的话

32:31.160 --> 32:32.600
在这里面我们要做什么呢

32:33.640 --> 32:34.600
在这里面

32:34.600 --> 32:34.840
啊

32:34.840 --> 32:35.720
这个request

32:36.760 --> 32:38.360
request element update

32:39.000 --> 32:39.800
这边的话

32:39.800 --> 32:41.640
首先我们要进行一个判断

32:43.400 --> 32:43.640
啊

32:43.640 --> 32:44.520
进行一个判断

32:44.520 --> 32:45.560
判断什么呢

32:45.560 --> 32:47.320
判断你现在这个ticking

32:47.880 --> 32:50.040
他究竟是这个true还是false

32:50.840 --> 32:51.080
啊

32:52.840 --> 32:53.800
就是这边if

32:54.520 --> 32:55.320
哎对就这个

32:55.320 --> 32:56.360
就这个啊

32:56.360 --> 32:58.760
首先判断你的这个ticking

32:58.760 --> 33:00.200
是true还是false

33:00.200 --> 33:00.440
好

33:00.440 --> 33:00.840
首先的话

33:00.840 --> 33:01.640
这边是不是取反

33:02.360 --> 33:03.240
取反之后

33:03.240 --> 33:04.280
然后接下来进来

33:04.280 --> 33:05.320
进来的话说明什么

33:05.320 --> 33:07.640
说明当前没有再执行动画

33:07.640 --> 33:09.400
那我们就可以执行动画

33:09.400 --> 33:09.800
对吧

33:09.800 --> 33:11.480
执行动画让我通过什么呢

33:11.480 --> 33:14.040
我通过这个window.request

33:14.600 --> 33:16.520
这个animation frame

33:16.520 --> 33:18.680
这个是window的一个新的api

33:19.400 --> 33:19.720
啊

33:19.720 --> 33:21.480
就最新的浏览器都是支持的

33:21.480 --> 33:22.360
你如果不知道的话

33:22.360 --> 33:23.640
你可以去查一下

33:23.640 --> 33:23.880
好

33:23.880 --> 33:25.160
当然你如果

33:25.160 --> 33:26.040
浏览器不支持

33:26.040 --> 33:28.840
你通过那个set timeout也可以做

33:28.840 --> 33:29.560
OK

33:29.560 --> 33:29.880
好

33:29.880 --> 33:30.600
然后接下来这边的话

33:30.600 --> 33:31.480
然后执行什么呢

33:31.480 --> 33:34.600
执行这个update element transform

33:34.680 --> 33:37.240
同时把这个ticking改成什么呢

33:37.240 --> 33:38.120
改成这个true

33:38.680 --> 33:39.960
改成true之后说明什么

33:39.960 --> 33:41.960
说明当前是不是再执行动画

33:41.960 --> 33:42.280
对不对

33:42.280 --> 33:43.160
他后面的话是不是

33:43.160 --> 33:44.680
就是不会再进这个衣服了

33:45.240 --> 33:45.480
好

33:45.480 --> 33:46.120
那接下来的话

33:46.120 --> 33:47.240
问题的话就变成了

33:47.240 --> 33:48.840
就是这边更新这里了

33:50.360 --> 33:50.680
啊

33:50.680 --> 33:52.280
那这边那就是一个方形

33:53.400 --> 33:53.880
是不是这个

33:54.440 --> 33:54.920
对不对

33:54.920 --> 33:55.560
那这个的话

33:55.560 --> 33:57.320
就是我们更新图片的

33:58.840 --> 33:59.160
啊

33:59.160 --> 33:59.880
这边那就是

34:01.080 --> 34:01.720
更新

34:01.800 --> 34:06.840
更新图片的transform属性

34:08.120 --> 34:08.360
OK

34:08.360 --> 34:08.760
好

34:08.760 --> 34:10.040
那我这边的话就是

34:10.040 --> 34:10.680
哇

34:10.680 --> 34:13.000
一个这个value

34:13.000 --> 34:13.800
啊

34:13.800 --> 34:15.080
他应该等于什么呢

34:15.080 --> 34:16.360
哎对的

34:16.360 --> 34:17.080
就是这个

34:17.080 --> 34:17.480
啊

34:17.480 --> 34:18.120
就是这个

34:18.120 --> 34:20.120
他就应该等于一个这个

34:20.120 --> 34:21.560
transnet 3d

34:21.560 --> 34:22.200
然后加这边呢

34:22.200 --> 34:23.480
拿到你的transform

34:23.480 --> 34:24.520
transnet x

34:24.520 --> 34:25.560
transnet y

34:25.560 --> 34:26.280
对吧

34:26.280 --> 34:28.040
大家还有就是对应的scale

34:28.040 --> 34:29.160
还以及这个

34:29.160 --> 34:30.120
对应的这个

34:30.120 --> 34:30.840
Rotate

34:31.720 --> 34:33.960
把这几个字拿到

34:33.960 --> 34:34.840
啊

34:34.840 --> 34:35.720
这边的话

34:35.720 --> 34:38.040
你可以直接写这个Rotate z

34:38.040 --> 34:39.560
那你写这个Rotate z的话

34:39.560 --> 34:40.280
就没必要

34:40.280 --> 34:41.880
就是那边写那个

34:42.680 --> 34:44.120
这边的话就没有必要写这个

34:44.120 --> 34:46.760
transform r x r y r z

34:46.760 --> 34:47.400
你这边的话

34:47.400 --> 34:48.600
你如果写的是

34:49.480 --> 34:49.960
Rotate

34:50.840 --> 34:51.080
啊

34:51.080 --> 34:51.960
那你Rotate的话

34:51.960 --> 34:52.840
那你这边的话

34:52.840 --> 34:54.440
你如果写的是Rotate 3d

34:55.080 --> 34:55.560
啊

34:55.560 --> 34:57.080
那你里面的话就要干嘛呢

34:57.080 --> 34:59.080
你里面的话就需要有这个三个

35:00.040 --> 35:01.000
三个参数

35:01.000 --> 35:01.720
分别是什么呢

35:01.720 --> 35:03.560
分别是这个transform

35:03.560 --> 35:04.200
Rx

35:04.200 --> 35:05.400
transform

35:05.400 --> 35:06.280
这个Ry

35:06.280 --> 35:07.160
以及transform

35:07.160 --> 35:07.960
Rz

35:07.960 --> 35:08.200
啊

35:08.200 --> 35:08.920
那最后一个

35:09.640 --> 35:10.280
transform

35:10.840 --> 35:11.880
点这个Angel

35:12.600 --> 35:12.840
OK

35:13.400 --> 35:13.640
好

35:13.640 --> 35:14.040
来我们这边

35:14.040 --> 35:14.920
我们把他写一下

35:14.920 --> 35:15.240
然后接下来

35:15.240 --> 35:15.720
这边的话

35:15.720 --> 35:16.840
就是因为这个是个数组

35:16.840 --> 35:17.000
哈

35:17.000 --> 35:19.160
大家这边拼接成这个支付串

35:19.160 --> 35:19.320
好

35:19.320 --> 35:19.800
但

35:19.800 --> 35:20.520
当然这里的话

35:20.520 --> 35:21.720
我们可以采用什么呢

35:21.720 --> 35:23.320
我们可以采用这个es6的方式

35:25.640 --> 35:25.880
OK

35:26.520 --> 35:27.640
啊es6的方式

35:27.640 --> 35:28.840
然后接下来在这里面的话

35:29.240 --> 35:29.960
你就来写

35:31.640 --> 35:32.600
呃

35:32.600 --> 35:33.640
他又跟我写好了

35:33.640 --> 35:34.440
哈哈哈

35:34.440 --> 35:34.760
啊

35:35.480 --> 35:35.720
对

35:35.720 --> 35:36.600
就这个啊

35:36.600 --> 35:37.400
就这个

35:37.400 --> 35:37.640
好

35:37.640 --> 35:38.280
然后等一下

35:38.280 --> 35:39.240
我这边我检查一下

35:39.240 --> 35:40.280
我看一下这边的话

35:40.280 --> 35:41.800
首先的话是

35:41.800 --> 35:42.520
trustnet

35:44.040 --> 35:44.600
trustnet

35:44.600 --> 35:46.440
trustnet xy

35:46.440 --> 35:47.400
啊这个是对的

35:47.400 --> 35:47.640
好

35:47.640 --> 35:48.360
大家这边呢

35:48.360 --> 35:49.240
Scale

35:49.240 --> 35:50.920
Scale的话就一个这个

35:50.920 --> 35:51.800
transform scale

35:51.800 --> 35:52.440
对的

35:52.440 --> 35:52.680
好

35:52.680 --> 35:54.440
大家这边Rotate Angel

35:54.440 --> 35:55.240
啊对的

35:55.240 --> 35:55.480
OK

35:56.040 --> 35:56.360
好

35:56.360 --> 35:57.240
然后接下来的话

35:57.240 --> 35:58.280
这边你就干嘛呢

35:58.360 --> 35:58.680
这边呢

35:58.680 --> 35:59.240
你就是

35:59.240 --> 35:59.640
哎对

35:59.640 --> 36:00.360
就这个

36:00.360 --> 36:02.760
e2.style.transform

36:02.760 --> 36:04.360
等于一个这个value

36:04.360 --> 36:05.800
然后把那个tkin

36:06.520 --> 36:07.560
啊他这个没有提示了

36:08.200 --> 36:09.560
从上消停下来了

36:09.560 --> 36:11.400
把这个tkin重新改成什么呢

36:11.400 --> 36:12.520
改成force

36:13.560 --> 36:14.360
对吧

36:14.360 --> 36:14.680
好

36:14.680 --> 36:15.960
然后接下来我们来保存一下

36:17.880 --> 36:18.280
保存

36:18.280 --> 36:18.440
好

36:18.440 --> 36:19.080
你看

36:19.080 --> 36:20.200
现在图片是不是第一次

36:20.200 --> 36:22.040
第一次他进来是不是这个居中了

36:22.040 --> 36:22.600
对吧

36:22.600 --> 36:22.840
好

36:22.840 --> 36:23.400
居中了之后

36:23.400 --> 36:24.440
大家我们来测试一下

36:24.440 --> 36:25.400
移动啊

36:25.400 --> 36:25.720
移动

36:26.600 --> 36:27.640
是没有问题啊

36:27.640 --> 36:28.040
对不对

36:28.280 --> 36:29.320
移动没有问题

36:29.320 --> 36:29.480
好

36:29.480 --> 36:31.320
大家这边我两个手指把它放大

36:32.040 --> 36:32.520
缩小

36:33.160 --> 36:34.200
是没有问题啊

36:34.200 --> 36:34.760
对不对

36:34.760 --> 36:35.080
好

36:35.080 --> 36:36.120
大家这边我旋转

36:37.080 --> 36:39.000
旋转是没问题啊

36:39.000 --> 36:39.800
旋转的途中

36:39.800 --> 36:40.440
然后把它放大

36:41.080 --> 36:42.360
旋转的途中把它缩小

36:43.000 --> 36:44.040
旋转的途中

36:44.040 --> 36:44.680
然后加这边

36:45.880 --> 36:46.200
移动

36:47.160 --> 36:47.480
这边

36:48.200 --> 36:49.000
是不是也没有问题啊

36:49.720 --> 36:50.360
对不对

36:50.360 --> 36:51.000
OK

36:51.000 --> 36:51.640
那我们这个

36:52.200 --> 36:53.320
整个这个案例

36:53.320 --> 36:54.920
就做完了啊

36:54.920 --> 36:57.240
强烈推荐大家去装那个插件

36:57.960 --> 36:59.160
强烈推荐

36:59.160 --> 37:02.520
真的是可以节省你的这个写代码的时间

37:03.320 --> 37:06.520
大大提升你的这个编码效率

37:06.520 --> 37:07.560
真的是大大提升

37:08.200 --> 37:08.520
OK

37:09.400 --> 37:09.480
好

37:09.480 --> 37:12.200
大家下去的话可以把这个案例自己写一写啊

37:12.200 --> 37:13.720
这个旋转的这个案例

37:13.720 --> 37:14.040
OK

37:14.680 --> 37:16.760
这节课的话就到这里

37:16.760 --> 37:17.080
再见

