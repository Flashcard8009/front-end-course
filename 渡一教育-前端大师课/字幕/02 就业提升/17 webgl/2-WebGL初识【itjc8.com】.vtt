WEBVTT

00:00.240 --> 00:08.240
OK 那本小姐呢 我们主要就是来初步认识一下webgl

00:08.240 --> 00:14.240
那在学习webgl之前 我们先来了解一下webgl产生的一个背景

00:14.240 --> 00:19.240
那在webgl这个规范 这个webgl它是一个规范

00:19.240 --> 00:23.240
在这个规范生成之前呢 浏览器里面

00:23.240 --> 00:27.240
如果想要实现一些3D的一些动画效果的话

00:27.240 --> 00:32.240
它只能去借助一些浏览器的插件 例如Flysh

00:32.240 --> 00:36.240
这个Flysh插件大家是不是经常会听说 对吧

00:36.240 --> 00:44.240
但是 在我们后端的一个程序里面

00:44.240 --> 00:50.240
在我们后端的程序里面 它出现了一个opengl这么一个东西

00:51.240 --> 00:57.240
那我们前端人员 前端工作人员肯定不服 对不对

00:57.240 --> 01:03.240
现在是不是我们前端都已经在向着后端的方向都发展了 对不对

01:03.240 --> 01:08.240
现在前端已经能淡一些一部分后端的一些事情 对吧

01:08.240 --> 01:11.240
那我们这一部分 在我们图形渲染这一部分

01:11.240 --> 01:13.240
我们前端也不服 对吧

01:14.240 --> 01:17.240
那有一些公司 有一些大公司

01:17.240 --> 01:22.240
它就联手制定了这样一种跨平台的3D开发的一个标准

01:22.240 --> 01:25.240
就是我们这个webgl的一个标准

01:25.240 --> 01:30.240
可以吧 那webgl它到底是一个什么东西

01:30.240 --> 01:35.240
webgl 其实说白了 它就是一种规范

01:35.240 --> 01:39.240
这个规范用于这个图形渲染的

01:40.240 --> 01:43.240
可以吧 有用于汇制图形的

01:43.240 --> 01:50.240
我们是通过GS来 通过GS来汇制一个图形的

01:52.240 --> 01:59.240
市场商根据这组规范 它实现了一个API一套API

01:59.240 --> 02:03.240
就是这个3D图形相关的API

02:03.240 --> 02:07.240
那我们也管这个API 也叫webgl的API

02:08.240 --> 02:13.240
那这些API 它就足以让我们使用这个JavaScript

02:13.240 --> 02:18.240
直接和我们的显卡进行一个通信了

02:18.240 --> 02:21.240
就是我们直接和我们的JPU进行一个通信

02:21.240 --> 02:26.240
那我们之前也说了 上一堂课再讲CPU和JPU的时候

02:26.240 --> 02:30.240
说过我们之前在写GS代码的时候

02:30.240 --> 02:33.240
它都是通过CPU来计算的 对吧

02:33.240 --> 02:40.240
那我们如何通过JavaScript来使用GPU计算呢

02:40.240 --> 02:45.240
这个还是办不到的

02:45.240 --> 02:51.240
那我们想要调用GPU这样的一个处理器来计算的话

02:51.240 --> 02:52.240
我们还需要一种语言

02:52.240 --> 02:55.240
也就是说在我们webgl当中

02:55.240 --> 02:57.240
除了JavaScript之外

02:57.240 --> 03:02.240
我们还需要一种语言叫OpenGL Shading Language

03:02.240 --> 03:06.240
我们简称它为JLSR来编写代码

03:06.240 --> 03:11.240
那这个JLSR我们又称它为着色器语言

03:11.240 --> 03:13.240
又称它为着色器语言

03:13.240 --> 03:16.240
其实说完了就是一个着色器代码

03:16.240 --> 03:19.240
那这个着色器代码是做什么呢

03:19.240 --> 03:21.240
字面上意思着色的嘛 对不对

03:21.240 --> 03:23.240
它就是一个绘制颜色的

03:23.240 --> 03:26.240
其实就是办了一个绘制的一个活

03:26.240 --> 03:29.240
可以吧 就是办了一个绘制的活

03:30.240 --> 03:32.240
那我们就可以通过JavaScript

03:32.240 --> 03:39.240
还有这个JLSR来实现我们一个3D动画效果的

03:39.240 --> 03:42.240
3D动画效果的一个页面了

03:42.240 --> 03:43.240
可以吧

03:43.240 --> 03:45.240
那我们先来了解一下

03:45.240 --> 03:49.240
我们webgl能实现哪些效果呢

03:49.240 --> 03:51.240
可能有一些同学会说

03:51.240 --> 03:52.240
L是CSI3

03:52.240 --> 03:55.240
它不也可以实现一个3D的动画效果吗

03:55.240 --> 03:58.240
我们为什么不直接使用CSI3

03:58.240 --> 03:59.240
还去学webgl呢

03:59.240 --> 04:02.240
那这个CSI3

04:02.240 --> 04:04.240
我们在实现的时候

04:04.240 --> 04:06.240
你可能会发现它是有局限性的

04:06.240 --> 04:07.240
对吧

04:07.240 --> 04:09.240
我们只能绘制一些简单的一些图形

04:09.240 --> 04:10.240
对不对

04:10.240 --> 04:13.240
那在我们这个webgl里面

04:13.240 --> 04:17.240
我们就可这个可绘制的面就比较广了

04:17.240 --> 04:19.240
你可以绘制一个场景

04:19.240 --> 04:21.240
你还可以绘制任何的

04:21.240 --> 04:25.240
你看到你所看到的能看到的一些东西

04:25.240 --> 04:26.240
可以吧

04:27.240 --> 04:28.240
那我们先来看一下

04:28.240 --> 04:30.240
它都能实现哪些

04:30.240 --> 04:37.230
来看一下

04:37.230 --> 04:40.540
把这个拷贝过来

04:40.540 --> 04:42.540
这是一个地球的一个效果

04:42.540 --> 04:44.540
我把这几个链接都拷贝过来

04:44.540 --> 04:46.540
不要着急

04:47.540 --> 04:48.540
你看

04:48.540 --> 04:49.540
这是地球的已经选出来了

04:49.540 --> 04:52.540
有地球和月球它自转

04:52.540 --> 04:56.540
我们之前在学CSI3的时候

04:56.540 --> 04:59.540
我不知道大家有没有写过这个球体

04:59.540 --> 05:02.540
那我们是不是感觉它是做不出来

05:02.540 --> 05:05.540
这样的一个特别逼真的一个球体

05:05.540 --> 05:07.540
对吧

05:07.540 --> 05:10.540
那在我们webgl里面就可以实现

05:10.540 --> 05:12.540
然后我们再来看一下下一个案例

05:12.540 --> 05:15.540
你看这个案例就是一个小的茶壶

05:15.540 --> 05:16.540
对吧

05:16.540 --> 05:17.540
小的茶壶

05:17.540 --> 05:20.540
这个茶壶也是通过webgl来绘制的

05:20.540 --> 05:23.540
我们是不是通过CSI3也是绘制不出来的

05:23.540 --> 05:24.540
对不对

05:24.540 --> 05:25.540
OK

05:25.540 --> 05:26.540
然后我们再接上往下

05:26.540 --> 05:28.540
看还有

05:28.540 --> 05:32.540
你可以看一下这几个案例

05:32.540 --> 05:35.540
这是一个立方体对吧

05:35.540 --> 05:36.540
再来

05:36.540 --> 05:40.540
其实会有很多好玩的东西

05:40.540 --> 05:42.540
这是一个相框

05:42.540 --> 05:45.540
然后上面有个茶壶在旋转

05:45.540 --> 05:46.540
对吧

05:46.540 --> 05:48.540
然后你可以看一下这个相框在旋转之后

05:48.540 --> 05:50.540
你发现它是一个

05:50.540 --> 05:52.540
好像是一个立体的一个东西

05:52.540 --> 05:53.540
对不对

05:53.540 --> 05:54.540
立体的一个相框一样

05:54.540 --> 05:56.540
这都是我们这个webgl里面

05:56.540 --> 05:58.540
可以实现的

05:58.540 --> 05:59.540
可以再看一下最后一个

05:59.540 --> 06:01.540
最后一个就是一个场景了

06:01.540 --> 06:02.540
可以看一下

06:02.540 --> 06:07.620
一个游戏的一个场景应该是

06:07.620 --> 06:08.620
来看一下

06:08.620 --> 06:10.620
这就是一个游戏的一个场景对吧

06:10.620 --> 06:12.620
它就是一个场景

06:12.620 --> 06:13.620
这样的话

06:13.620 --> 06:15.620
这样的一个场景

06:15.620 --> 06:18.620
我们是可以通过webgl来实现的

06:18.620 --> 06:19.620
那我们

06:19.620 --> 06:22.620
如何去实现这样的一个效果

06:22.620 --> 06:24.620
我们

06:24.620 --> 06:25.620
大家不要着急

06:25.620 --> 06:27.620
我们一点点的去学习

06:27.620 --> 06:28.620
可以吧

06:28.620 --> 06:30.620
一点点学习

06:30.620 --> 06:31.620
ok

06:31.620 --> 06:34.620
那现在已经了解了这个webgl的一些

06:34.620 --> 06:35.620
应用

06:35.620 --> 06:38.620
还有它的一个简单的概念了

06:38.620 --> 06:39.620
我们接下来

06:39.620 --> 06:42.620
再来了解一下webgl的一个工作原理

06:42.620 --> 06:45.620
那webgl它的一个工作方式

06:45.620 --> 06:47.620
和流水线就比较类似

06:47.620 --> 06:49.620
流水线是怎么工作的

06:49.620 --> 06:50.620
是不是

06:50.620 --> 06:52.620
再进入到一个车间之后

06:52.620 --> 06:54.620
它在工作

06:54.620 --> 06:56.620
这个第一个车间

06:56.620 --> 06:57.620
工作完成之后

06:57.620 --> 07:00.620
会把产品给到第二个车间对吧

07:00.620 --> 07:02.620
然后第二车间

07:02.620 --> 07:05.620
拿到第一个车间的一个成品

07:05.620 --> 07:07.620
一个不能说是成品

07:07.620 --> 07:08.620
一个结果对吧

07:08.620 --> 07:09.620
第一个车间的一个结果

07:09.620 --> 07:10.620
然后

07:10.620 --> 07:12.620
拿到第二个车间去之后

07:12.620 --> 07:14.620
第二车间对这个结果

07:14.620 --> 07:17.620
再进行一部分的一个处理对吧

07:17.620 --> 07:18.620
然后再把

07:18.620 --> 07:20.620
它第二个车间

07:20.620 --> 07:22.620
所处理过后的一个结果

07:22.620 --> 07:23.620
拿到第三个车间对吧

07:23.620 --> 07:25.620
这样的一次类推的

07:25.620 --> 07:27.620
进行这样的一个

07:27.620 --> 07:30.620
流程化的一个管理对吧

07:30.620 --> 07:34.620
这就是流水线的一个流程对不对

07:34.620 --> 07:36.620
那我们webgl也是一样的

07:36.620 --> 07:37.620
我们webgl

07:37.620 --> 07:39.620
它是将一个汇吐过程

07:39.620 --> 07:41.620
分成了很多个步骤

07:41.620 --> 07:43.620
那当前的这个步骤

07:43.620 --> 07:45.620
只对当前

07:45.620 --> 07:47.620
只对前一步骤

07:47.620 --> 07:50.620
打下打的结果进行处理

07:50.620 --> 07:51.620
也就是说

07:51.620 --> 07:52.620
我们当前这个步骤

07:52.620 --> 07:55.620
它只对上一个步骤的一个结果进行处理

07:55.620 --> 07:56.620
它并不对

07:56.620 --> 07:58.620
上一个过程的一个过程

07:58.620 --> 07:59.620
有任何的影响

07:59.620 --> 08:01.620
可以吧

08:01.620 --> 08:02.620
然后

08:02.620 --> 08:05.620
将处理后的结果传递给下一个步骤

08:05.620 --> 08:08.620
然后最终渲染到我们的2D平面上去

08:08.620 --> 08:09.620
屏幕上去

08:09.620 --> 08:11.620
也就是说我们最终要渲染的

08:11.620 --> 08:13.620
这个3D的一个效果

08:13.620 --> 08:14.620
打到的

08:14.620 --> 08:16.620
是不是应该就是我们的2D屏幕上

08:16.620 --> 08:17.620
对吧

08:17.620 --> 08:18.620
那这个过程

08:18.620 --> 08:20.620
是不是就跟我们拍照啊

08:20.620 --> 08:22.620
或者是摄像啊

08:22.620 --> 08:23.620
这个过程比较像

08:23.620 --> 08:24.620
类似

08:24.620 --> 08:25.620
对不对

08:25.620 --> 08:27.620
这个过程是比较类似的

08:28.620 --> 08:29.620
那好

08:29.620 --> 08:30.620
那业界啊

08:30.620 --> 08:31.620
把这样的一个流程

08:31.620 --> 08:33.620
这样的一个渲染方式

08:33.620 --> 08:34.620
呈之为

08:34.620 --> 08:36.620
图形管线

08:36.620 --> 08:37.620
或者是渲染管线

08:37.620 --> 08:39.620
那这两个词大家必须要熟悉啊

08:39.620 --> 08:40.620
就是什么

08:40.620 --> 08:42.620
什么是这个图形管线和渲染管线

08:42.620 --> 08:44.620
其实就是这样的一个流程

08:44.620 --> 08:45.620
它的

08:45.620 --> 08:46.620
因为这个webgr

08:46.620 --> 08:49.620
它的工作方式和我们这个流水线比较像

08:49.620 --> 08:50.620
所以呢

08:50.620 --> 08:52.620
我们管这个图形

08:52.620 --> 08:54.620
把这个管这个处理的一个过程啊

08:54.620 --> 08:56.620
呈之为这个图形管线和

08:56.620 --> 08:58.620
或者是渲染管线

08:59.620 --> 09:01.620
那在GPU渲染管线的

09:02.620 --> 09:04.620
主要处理过程

09:04.620 --> 09:06.620
是有这么几步啊

09:06.620 --> 09:07.620
是有这么几步

09:07.620 --> 09:08.620
第一步是

09:08.620 --> 09:09.620
首先是

09:09.620 --> 09:10.620
嗯

09:10.620 --> 09:12.620
进入到这个景点主要的阶段

09:12.620 --> 09:13.620
就是

09:13.620 --> 09:17.620
在我们CPU传递给GPU数据之后

09:17.620 --> 09:18.620
啊

09:19.620 --> 09:20.620
GPU里面

09:20.620 --> 09:24.620
首先它会先进入到顶点着色器里面去

09:24.620 --> 09:28.620
然后GPU并行的计算这个

09:28.620 --> 09:29.620
顶点的

09:29.620 --> 09:32.620
每一个顶点的一个坐标变换啊

09:32.620 --> 09:33.620
一个坐标

09:33.620 --> 09:34.620
变换成它啊

09:34.620 --> 09:37.620
我们计算机可以识别的一个坐标

09:37.620 --> 09:38.620
可以吧

09:38.620 --> 09:41.620
是在这个GPU里面可以识别的一个坐标

09:41.620 --> 09:42.620
然后

09:42.620 --> 09:45.620
进入到我们这个图圆装配的一个阶段

09:45.620 --> 09:47.620
那这个图圆装配阶段其实说白了

09:47.620 --> 09:51.620
就是把我们顶点相连连接成一个图形

09:51.620 --> 09:52.620
可以吧

09:52.620 --> 09:53.620
连接成一个图形

09:53.620 --> 09:55.620
看它是一个什么样的图形

09:55.620 --> 09:56.620
那

09:56.620 --> 09:57.620
接下来呢

09:57.620 --> 09:58.620
我们就进入了

09:58.620 --> 10:00.620
这个图形装配完了

10:00.620 --> 10:02.620
就是我们组装成这个图形之后

10:02.620 --> 10:05.620
接下来进入到一个光山化的一个阶段

10:05.620 --> 10:07.620
光山化就是把我们的一个图形

10:07.620 --> 10:08.620
例如一个三角形

10:08.620 --> 10:10.620
把这个三角形里面

10:10.620 --> 10:11.620
所有

10:11.620 --> 10:14.620
用到的一个相速点

10:14.620 --> 10:15.620
给它拿出来

10:15.620 --> 10:16.620
也就是说

10:17.620 --> 10:19.620
它是把一个图形

10:19.620 --> 10:23.620
用相速天冲的一种形式来绘制

10:23.620 --> 10:24.620
可以吧

10:24.620 --> 10:27.620
用相速天冲的一种形式来绘制

10:27.620 --> 10:28.620
然后最后呢

10:28.620 --> 10:31.620
它会进入到片源着色器当中

10:33.620 --> 10:35.620
然后进入到片源着色器当中

10:35.620 --> 10:37.620
然后片源着色器是做什么呢

10:37.620 --> 10:39.620
其实就是为每一个顶点

10:39.620 --> 10:40.620
上颜色的

10:40.620 --> 10:41.620
就是相速

10:41.620 --> 10:43.620
你可以称之为它是相速着色器

10:43.620 --> 10:44.620
可以吧

10:44.620 --> 10:46.620
然后最终显示在我们的屏幕上

10:46.620 --> 10:49.620
那可能有同学会有点懵

10:49.620 --> 10:52.620
就说这个顶点着色器和片源着色器

10:52.620 --> 10:54.620
这又是一个什么东西

10:55.620 --> 10:56.620
这两个着色器

10:56.620 --> 10:58.620
它是着色器

10:59.620 --> 11:01.620
着色器的两种

11:01.620 --> 11:02.620
两个种类

11:02.620 --> 11:03.620
那你解释吧

11:03.620 --> 11:04.620
两个种类

11:04.620 --> 11:07.620
我们刚才也说这个WebJR

11:08.620 --> 11:10.620
它是通过

11:10.620 --> 11:13.620
javascript代码和OpenJR

11:13.620 --> 11:15.620
OpenJR ShadingLanguage

11:15.620 --> 11:16.620
jr

11:16.620 --> 11:18.620
就是简称是javasr

11:18.620 --> 11:20.620
这个代码组成的对不对

11:20.620 --> 11:22.620
那这个着色器

11:22.620 --> 11:24.620
我们刚才所说的一个

11:24.620 --> 11:27.620
顶点着色器和片源着色器

11:27.620 --> 11:30.620
它都属于我们javasr

11:30.620 --> 11:31.620
这一部分

11:31.620 --> 11:32.620
可以吧

11:32.620 --> 11:33.620
javasr

11:33.620 --> 11:34.620
我刚才是不是也说

11:34.620 --> 11:35.620
它就是一个着色器

11:35.620 --> 11:36.620
对吧

11:36.620 --> 11:37.620
它就是一个着色器

11:39.620 --> 11:41.620
这个着色器

11:41.620 --> 11:42.620
它分成两种着色器

11:42.620 --> 11:44.620
一种是顶点着色器

11:44.620 --> 11:46.620
还有一种是片源着色器

11:46.620 --> 11:47.620
那顶点着色器

11:47.620 --> 11:51.620
主要就是存储一些顶点信息的

11:51.620 --> 11:52.620
就是说

11:52.620 --> 11:55.620
如果我们要汇制一个图形的时候

11:55.620 --> 11:57.620
我们要汇制一个图形

11:57.620 --> 12:00.620
这个图形必须要有很多的关键点

12:00.620 --> 12:02.620
一个顶点的一些信息

12:02.620 --> 12:03.620
对吧

12:03.620 --> 12:05.620
肯定会有一些顶点的信息

12:05.620 --> 12:06.620
那这个顶点信息

12:06.620 --> 12:07.620
它就是存

12:07.620 --> 12:09.620
我们就需要给它存储

12:09.620 --> 12:11.620
我们顶点着色器当中去

12:12.620 --> 12:14.620
然后在顶点着色器当中

12:14.620 --> 12:16.620
去确定我们顶点的一个坐标

12:16.620 --> 12:19.620
然后拿到片源着色器中之后

12:19.620 --> 12:23.620
我们才为这个图形进行一个着色

12:23.620 --> 12:24.620
可以吧

12:24.620 --> 12:25.620
进行一个着色

12:25.620 --> 12:27.620
那这是这两个着色器

12:28.620 --> 12:29.620
简单了解一下

12:29.620 --> 12:31.620
我们后面还会再带着大家来说的

12:31.620 --> 12:32.620
可以吧

12:34.620 --> 12:35.620
然后再有一点

12:35.620 --> 12:37.620
就是在webgl里面

12:38.620 --> 12:40.620
在webgl里面

12:40.620 --> 12:45.620
它只能会制3种基本的一个图形

12:45.620 --> 12:49.620
我们也称之为图圆

12:49.620 --> 12:51.620
基本3种基本的图圆

12:51.620 --> 12:53.620
那第一种就是点

12:53.620 --> 12:54.620
我再写一下

12:54.620 --> 12:55.620
再新建一个

12:57.620 --> 12:58.620
webgl

12:59.620 --> 13:02.620
会制的图圆

13:07.620 --> 13:08.620
可会制图圆

13:08.620 --> 13:09.620
它有三种

13:09.620 --> 13:11.620
第一种是点

13:11.620 --> 13:12.620
就是点

13:12.620 --> 13:13.620
我们可以会制

13:13.620 --> 13:14.620
第二种呢

13:14.620 --> 13:15.620
它是线

13:16.620 --> 13:17.620
线段

13:18.620 --> 13:19.620
第二种是线段

13:19.620 --> 13:21.620
然后第三种

13:21.620 --> 13:23.620
第三种是三角形

13:24.620 --> 13:25.620
也就是说

13:25.620 --> 13:27.620
我们在webgl里面

13:27.620 --> 13:31.620
只能会制这三种样式

13:32.620 --> 13:34.620
这三种图形

13:34.620 --> 13:35.620
这三种图形

13:35.620 --> 13:36.620
不是样式

13:36.620 --> 13:37.620
这三种图形

13:38.620 --> 13:39.620
有同学可能就会说

13:39.620 --> 13:41.620
老师我要一个DT的

13:41.620 --> 13:43.620
刚才我们看到这个茶壶

13:43.620 --> 13:44.620
还有这个球

13:44.620 --> 13:46.620
它到底是怎么会制出来的呢

13:46.620 --> 13:48.620
这是我们每一个

13:48.620 --> 13:50.620
我们每一个图形

13:50.620 --> 13:52.620
它都是可以分割的

13:52.620 --> 13:54.620
你看我们这个球

13:54.620 --> 13:55.620
我们如果

13:55.620 --> 13:56.620
把这个球

13:56.620 --> 13:57.620
是不是可以分割成

13:57.620 --> 13:59.620
很多个三角形

13:59.620 --> 14:00.620
对吧

14:00.620 --> 14:01.620
可以分割成很多个三角形

14:01.620 --> 14:02.620
然后只不过

14:02.620 --> 14:04.620
把每一个三角形的一个

14:04.620 --> 14:05.620
底边

14:05.620 --> 14:06.620
每一个三角形的底边

14:06.620 --> 14:08.620
我让它小一点

14:08.620 --> 14:09.620
是不是就好了

14:09.620 --> 14:10.620
对吧

14:10.620 --> 14:12.620
我们通过把这一个球

14:12.620 --> 14:14.620
会制成很多个三角形

14:14.620 --> 14:15.620
那这样我说

14:15.620 --> 14:16.620
可能大家

14:16.620 --> 14:17.620
不是很理解对不对

14:17.620 --> 14:19.620
我们可以这块儿画一个图

14:19.620 --> 14:20.620
这块儿画一个图

14:22.620 --> 14:23.620
错了

14:23.620 --> 14:24.620
来

14:24.620 --> 14:25.620
图形

14:25.620 --> 14:26.620
形状

14:26.620 --> 14:27.620
我先画一个圆

14:27.620 --> 14:29.620
我是不是可以

14:29.620 --> 14:30.620
画一个圆

14:30.620 --> 14:31.620
我是不是可以把这个

14:31.620 --> 14:32.620
以中心为基准

14:32.620 --> 14:33.620
对吧

14:33.620 --> 14:34.620
以这个圆心为基准

14:35.620 --> 14:36.620
再来

14:36.620 --> 14:37.620
插了一个图形

14:37.620 --> 14:38.620
以这个圆心为基准

14:38.620 --> 14:40.620
绘制一个三角形

14:41.620 --> 14:42.620
以为顶点

14:42.620 --> 14:43.620
不能说为基准

14:43.620 --> 14:44.620
为顶点

14:44.620 --> 14:45.620
绘制一个三角形

14:45.620 --> 14:46.620
然后我可以

14:46.620 --> 14:47.620
绘制很多个三角形

14:47.620 --> 14:48.620
对不对

14:48.620 --> 14:49.620
都以这个圆心

14:49.620 --> 14:51.620
都以这个圆心

14:51.620 --> 14:52.620
为顶点

14:52.620 --> 14:54.620
绘制这个很多个三角形

14:56.620 --> 14:57.620
我这怎么转不了

15:02.130 --> 15:03.130
再重新转一下

15:04.130 --> 15:05.130
我是不是这样

15:05.130 --> 15:06.130
可以给它放在这

15:07.130 --> 15:10.910
对不对

15:10.910 --> 15:11.910
可以吧

15:11.910 --> 15:12.910
然后我很多个

15:12.910 --> 15:13.910
很多个

15:14.910 --> 15:15.910
螺叠起来

15:15.910 --> 15:17.910
它是不是就是一个圆了

15:17.910 --> 15:18.910
对吧

15:18.910 --> 15:23.080
为它旋转

15:23.080 --> 15:24.080
看一下

15:24.080 --> 15:25.080
对吧

15:25.080 --> 15:27.080
然后我只需要让

15:27.080 --> 15:28.080
三角形的底边

15:28.080 --> 15:30.080
让它越小

15:30.080 --> 15:31.080
它越小

15:31.080 --> 15:32.080
我们这三角形的底边

15:32.080 --> 15:33.080
越小

15:33.080 --> 15:35.080
它越趋近于圆

15:35.080 --> 15:36.080
对不对

15:36.080 --> 15:37.080
所以这个球体

15:37.080 --> 15:38.080
其实它也是通过

15:38.080 --> 15:39.080
三角形

15:39.080 --> 15:40.080
这种基础

15:40.080 --> 15:41.080
图圆

15:41.080 --> 15:42.080
来绘制的

15:42.080 --> 15:43.080
可以吧

15:43.080 --> 15:44.080
像我们这个也是一样的

15:44.080 --> 15:45.080
这个也是一样的

15:45.080 --> 15:46.080
你可以发现

15:46.080 --> 15:47.080
它有一些

15:47.080 --> 15:48.080
你看这里

15:48.080 --> 15:49.080
这一部分

15:49.080 --> 15:50.080
是不是感觉它就是一个

15:50.080 --> 15:51.080
三角形

15:51.080 --> 15:52.080
来绘制的

15:52.080 --> 15:53.080
能看出来吗

15:54.080 --> 15:55.080
能感觉出来吧

15:56.080 --> 15:58.080
大家可以自己感觉一下

15:58.080 --> 15:59.080
其实它就是通过

15:59.080 --> 16:00.080
很多个三角形

16:00.080 --> 16:01.080
来绘制的

16:02.080 --> 16:03.080
好

16:03.080 --> 16:04.080
我们再接着来说

16:04.080 --> 16:08.420
再接着来说

16:08.420 --> 16:09.420
这个点

16:09.420 --> 16:10.420
大家都了解了

16:10.420 --> 16:11.420
对吧

16:11.420 --> 16:12.420
我们接着往下

16:12.420 --> 16:13.420
再来了解一下

16:13.420 --> 16:15.420
我们WebGL的页面

16:15.420 --> 16:16.420
与我们正常的页面

16:16.420 --> 16:18.420
它有什么区别

16:18.420 --> 16:20.420
我们在正常的页面里面

16:20.420 --> 16:21.420
是不是一个网页

16:21.420 --> 16:23.420
它是由HTML.js

16:23.420 --> 16:24.420
来组成的

16:24.420 --> 16:25.420
对吧

16:25.420 --> 16:26.420
还有CSI

16:26.420 --> 16:28.420
CSI都在HTML里面

16:28.420 --> 16:29.420
然后

16:29.420 --> 16:30.420
我们通过这个

16:30.420 --> 16:31.420
HTML的渲染引擎

16:31.420 --> 16:33.420
来进行一个渲染页面

16:33.420 --> 16:34.420
最后渲染到

16:34.420 --> 16:35.420
我们的浏览器上

16:35.420 --> 16:36.420
对吧

16:36.420 --> 16:37.420
我们的WebGL

16:37.420 --> 16:38.420
它就比我们

16:38.420 --> 16:39.420
之前写的页面

16:39.420 --> 16:41.420
多了一些东西

16:41.420 --> 16:43.420
像我们WebGL

16:43.420 --> 16:44.420
我们WebGL

16:44.420 --> 16:45.420
再说一下

16:45.420 --> 16:46.420
就是WebGL

16:46.420 --> 16:48.420
它是H5里面新提出的

16:48.420 --> 16:50.420
H5里面新提出的

16:50.420 --> 16:51.420
所以WebGL里面

16:51.420 --> 16:53.420
它肯定是需要

16:53.420 --> 16:56.420
H5的一些标签的

16:56.420 --> 16:59.420
H5里面新增的一个标签的

17:00.420 --> 17:01.420
并且

17:01.420 --> 17:02.420
它也有JavaScript

17:02.420 --> 17:04.420
它也有JS

17:04.420 --> 17:05.420
它也有JS

17:05.420 --> 17:06.420
刚才是不是也说了

17:06.420 --> 17:08.420
但是除了JavaScript的

17:08.420 --> 17:09.420
这个语言之外

17:09.420 --> 17:11.420
它还有一个JLSR

17:11.420 --> 17:13.420
这个着色器语言

17:13.420 --> 17:14.420
对吧

17:14.420 --> 17:16.420
它还有JLSR的着色器语言

17:16.420 --> 17:17.420
然后它除了这个

17:17.420 --> 17:19.420
HTML的渲染引擎之外

17:19.420 --> 17:21.420
它还有WebGL的一个

17:21.420 --> 17:23.420
渲染引擎

17:23.420 --> 17:24.420
那你解释吧

17:24.420 --> 17:25.420
不能说渲染引擎

17:25.420 --> 17:26.420
这个WebGL的一个

17:26.420 --> 17:28.420
一个存储的一个空间

17:29.420 --> 17:31.420
然后还有一个着色器

17:31.420 --> 17:33.420
这个OpenGL的一个空间

17:33.420 --> 17:34.420
那你解释吧

17:34.420 --> 17:36.420
那它俩的一个区别

17:36.420 --> 17:37.420
其实就是

17:38.420 --> 17:39.420
WebGL的一个页面

17:39.420 --> 17:40.420
它比我们的

17:40.420 --> 17:42.420
正常的HTML页面

17:42.420 --> 17:43.420
要多出了很多东西

17:43.420 --> 17:44.420
对不对

17:45.420 --> 17:46.420
那这里我们为什么说

17:46.420 --> 17:47.420
这个WebGL

17:47.420 --> 17:49.420
它是H5新增的

17:49.420 --> 17:50.420
我们就需要用到

17:50.420 --> 17:51.420
H5的一些标签呢

17:51.420 --> 17:53.420
就是因为WebGL

17:53.420 --> 17:55.420
它是需要挂载到

17:55.420 --> 17:56.420
某一个标签上的

17:56.420 --> 17:58.420
那挂载到的那个标签

17:58.420 --> 18:00.420
是我们之前在学H5当中

18:00.420 --> 18:02.420
我们学到的Carwards

18:03.420 --> 18:04.420
你解释吧

18:04.420 --> 18:06.420
它是需要挂载到Carwards来使用的

18:08.420 --> 18:11.420
然后这是我们这两个

18:11.420 --> 18:12.420
两个网页

18:12.420 --> 18:13.420
它的一个区别

18:13.420 --> 18:14.420
对吧

18:14.420 --> 18:15.420
我们现在已经知道

18:15.420 --> 18:17.420
这个WebGL网页

18:17.420 --> 18:20.420
它有哪些部分组成了

18:20.420 --> 18:22.420
那我们可以来了解一下

18:22.420 --> 18:24.420
在WebGL这里面

18:24.420 --> 18:25.420
我们在实现一个

18:25.420 --> 18:27.420
WebGL的页面的时候

18:28.420 --> 18:29.420
我们都需要

18:29.420 --> 18:31.420
大家来了解哪些知识

18:31.420 --> 18:34.420
那首先不用多说HTMLJS

18:34.420 --> 18:36.420
HTMLJS

18:36.420 --> 18:37.420
那其次呢

18:37.420 --> 18:39.420
还有一个就是我们这个

18:39.420 --> 18:41.420
着色器语言的一个代码编写

18:41.420 --> 18:43.420
着色器代码那个编写

18:43.420 --> 18:45.420
但是着色器代码那个编写

18:45.420 --> 18:46.420
比较简单

18:46.420 --> 18:49.420
都是一些基础的代码

18:49.420 --> 18:50.420
那这个代码

18:50.420 --> 18:51.420
现在你不了解

18:51.420 --> 18:52.420
不要紧

18:52.420 --> 18:53.420
因为后面

18:53.420 --> 18:55.420
我会带大家去学习

18:55.420 --> 18:56.420
可以吧

18:56.420 --> 18:58.420
我会教给大家的

18:58.420 --> 19:00.420
都不难

19:00.420 --> 19:02.420
大家只需要记住就可以了

19:02.420 --> 19:03.420
然后

19:03.420 --> 19:05.420
我们还需要什么呢

19:05.420 --> 19:08.420
还需要你的一个数学

19:08.420 --> 19:10.420
3D数学的一点知识

19:10.420 --> 19:12.420
那3D数学知识可能

19:12.420 --> 19:14.420
有些同学也不是很了解

19:14.420 --> 19:17.420
那我们后面还有一堂课

19:17.420 --> 19:19.420
主要就是来讲一下

19:19.420 --> 19:22.420
这个3D数学的一个项量

19:22.420 --> 19:23.420
一个矩阵的

19:23.420 --> 19:25.420
一些计算的一些知识

19:25.420 --> 19:26.420
那我们所谓的

19:26.420 --> 19:27.420
我刚才所谓的

19:27.420 --> 19:28.420
这个3D数学知识

19:28.420 --> 19:29.420
其实说白了

19:29.420 --> 19:32.420
就是这个项量矩阵的一个运算

19:32.420 --> 19:34.420
因为在我们外部GL里面

19:34.420 --> 19:36.420
我们的一些运算

19:36.420 --> 19:39.420
页面上的一些图形

19:39.420 --> 19:41.420
页面上图形的一些

19:41.420 --> 19:42.420
关键点的一些运算

19:42.420 --> 19:45.420
都是需要大家掌握的

19:45.420 --> 19:48.420
那后面我会带着大家来学习

19:48.420 --> 19:50.420
可以吧

19:50.420 --> 19:51.420
那这是我们这个

19:51.420 --> 19:53.420
外部GL的页面

19:53.420 --> 19:55.420
我们需要知道

19:55.420 --> 19:57.420
需要学到哪些知识

19:57.420 --> 19:58.420
对吧

19:58.420 --> 20:00.420
然后我们再来讲一下这个

20:00.420 --> 20:02.420
GL-SR

20:02.420 --> 20:04.420
这个着色气语言

20:04.420 --> 20:06.420
这个着色气语言

20:06.420 --> 20:09.420
它是基于这个OpenGL的

20:09.420 --> 20:12.420
它是OpenGL里面的

20:12.420 --> 20:15.420
然后

20:15.420 --> 20:18.420
我们在外部GL开发的时候

20:18.420 --> 20:19.420
我们外部GL

20:19.420 --> 20:20.420
刚开始开发的时候

20:20.420 --> 20:22.420
它是以OpenGL

20:22.420 --> 20:23.420
远行开发的

20:23.420 --> 20:24.420
可以吧

20:24.420 --> 20:25.420
OpenGL是什么呢

20:25.420 --> 20:28.420
它就是后段的一种

20:28.420 --> 20:31.420
一种兼容多种语言使用的

20:31.420 --> 20:34.420
开放式的一个图形化的语言

20:34.420 --> 20:36.420
说把它也是一个API

20:36.420 --> 20:38.420
它也是一种规范

20:38.420 --> 20:39.420
可以吧

20:39.420 --> 20:40.420
它也是一种规范

20:40.420 --> 20:43.420
那它的OpenGL的一个语言

20:43.420 --> 20:47.420
它比较类似于C或C++

20:47.420 --> 20:49.420
并且它也是

20:49.420 --> 20:52.420
在计算机的图形处理器上运行的

20:52.420 --> 20:54.420
这个大家了解一下

20:54.420 --> 20:57.420
然后我们再来了解一下

20:57.420 --> 21:00.420
GL、SR、着色气语言

21:00.420 --> 21:02.420
它的一个执行过程

21:02.420 --> 21:04.420
我们所有的绿色的框

21:04.420 --> 21:05.420
我这块画的

21:05.420 --> 21:07.420
这个图形里面的绿色框

21:07.420 --> 21:09.420
都是我们可以操作的

21:09.420 --> 21:12.420
蓝色的框是我们GPU里面

21:12.420 --> 21:14.420
它自行就会给我们操作的

21:14.420 --> 21:15.420
那也就是说

21:15.420 --> 21:16.420
我们需要提供什么

21:16.420 --> 21:18.420
我们首先需要提供

21:18.420 --> 21:20.420
通过JavaScript的

21:20.420 --> 21:21.420
来提供一些数据

21:21.420 --> 21:22.420
那这些数据

21:22.420 --> 21:24.420
我们会传到CPU

21:24.420 --> 21:25.420
对吧

21:25.420 --> 21:27.420
然后CPU再去

21:27.420 --> 21:30.420
供GPU来使用

21:30.420 --> 21:31.420
ok

21:31.420 --> 21:34.420
然后这个JavaScript的数据

21:34.420 --> 21:36.420
提供过来之后

21:36.420 --> 21:39.420
我们会传入到顶点着色气当中去

21:39.420 --> 21:40.420
顶点着色气

21:40.420 --> 21:42.420
它会把这个顶点的位置

21:42.420 --> 21:43.420
汇制出来

21:43.420 --> 21:44.420
看到了吗

21:44.420 --> 21:45.420
顶点的位置汇制出来

21:45.420 --> 21:48.420
然后再通过顶点着色气

21:48.420 --> 21:50.420
去传给图员装配

21:50.420 --> 21:51.420
也就是下一个步骤

21:51.420 --> 21:52.420
是图员装配

21:52.420 --> 21:54.420
这个图员装配就是将

21:54.420 --> 21:57.420
这几个顶点连接起来

21:57.420 --> 21:59.420
让它形成一个三角形

21:59.420 --> 22:02.420
或者是你汇制的那个图形

22:02.420 --> 22:04.420
你汇制的一个图形

22:08.420 --> 22:09.420
然后

22:09.420 --> 22:12.420
接下来是光山化的一个过程

22:12.420 --> 22:13.420
光山化其实就是把图形

22:13.420 --> 22:14.420
转成像素

22:14.420 --> 22:17.420
用像素添充的一个形式

22:17.420 --> 22:18.420
然后光山化之后

22:18.420 --> 22:20.420
我们通过片源着色气

22:20.420 --> 22:23.420
去用颜色去添充我们的一个像素

22:23.420 --> 22:26.420
然后最后渲染到我们的颜面上去

22:26.420 --> 22:27.420
可以吧

22:27.420 --> 22:29.420
这是这样的一个过程

22:29.420 --> 22:31.420
那需要大家去了解

22:31.420 --> 22:33.420
那我们后面再讲真实的

22:33.420 --> 22:36.420
去实现的时候也会

22:36.420 --> 22:39.420
还会带着大家再来说一遍

22:39.420 --> 22:40.420
这个过程

22:40.420 --> 22:42.420
可以吧

22:42.420 --> 22:44.420
那好

22:44.420 --> 22:47.420
这就是我们本堂课

22:47.420 --> 22:49.420
这就是我们本堂课

22:49.420 --> 22:50.420
主要的一些支点

22:50.420 --> 22:52.420
就是让大家来了解一下

22:52.420 --> 22:53.420
WebJR

22:53.420 --> 22:54.420
那最后一个点

22:54.420 --> 22:56.420
就是WebJR的一些优点

22:56.420 --> 22:57.420
你简单了解一下就行了

22:57.420 --> 22:59.420
在大家学完WebJR的时候

22:59.420 --> 23:01.420
这个优点自然而然

23:01.420 --> 23:03.420
你就能体会到了

23:03.420 --> 23:05.420
那这个WebJR的

23:05.420 --> 23:06.420
第一个优点

23:06.420 --> 23:07.420
来说一下吧

23:07.420 --> 23:08.420
这几个优点

23:08.420 --> 23:09.420
第一个优点就是

23:09.420 --> 23:11.420
它只需要一个编辑器

23:11.420 --> 23:12.420
和一个浏览器

23:12.420 --> 23:13.420
我们就可以编写一个

23:13.420 --> 23:16.420
三维图形程序

23:16.420 --> 23:17.420
因为它是

23:17.420 --> 23:19.420
基于我们这个JRScript

23:19.420 --> 23:20.420
对吧

23:20.420 --> 23:22.420
是我们H5里面新增的

23:22.420 --> 23:25.420
是我们前端学到的一个

23:25.420 --> 23:28.420
前端的一个API对吧

23:28.420 --> 23:30.420
所以呢这个不用多说了

23:30.420 --> 23:31.420
然后再接下来

23:31.420 --> 23:32.420
第二个就是

23:32.420 --> 23:35.420
使用通用的这个Web技术

23:35.420 --> 23:37.420
发布三维图形程序显示

23:37.420 --> 23:39.420
这个说的跟上面

23:39.420 --> 23:41.420
其实也是类似的

23:41.420 --> 23:43.420
就是我们只需要通过

23:43.420 --> 23:44.420
只需要用到我们

23:44.420 --> 23:46.420
前端的一个技术

23:46.420 --> 23:48.420
可以完完全全去实现

23:48.420 --> 23:51.420
一个3D的一个场景了

23:51.420 --> 23:52.420
然后第三点是

23:52.420 --> 23:54.420
充分利用浏览器功能

23:54.420 --> 23:55.420
这也不用多说对不对

23:55.420 --> 23:57.420
因为我们是

23:57.420 --> 23:59.420
毕竟是前端写的页面对吧

23:59.420 --> 24:01.420
页面肯定是要

24:01.420 --> 24:03.420
在浏览器上的对吧

24:03.420 --> 24:06.420
展示在浏览器上的

24:06.420 --> 24:07.420
然后第四点

24:07.420 --> 24:09.420
资料丰富这都是废话对不对

24:09.420 --> 24:11.420
因为网上很多

24:11.420 --> 24:13.420
很多WebJR的一个教程

24:13.420 --> 24:14.420
大家可以去找一找

24:14.420 --> 24:16.420
看一看对吧

24:16.420 --> 24:18.420
那好那到目前为止

24:18.420 --> 24:21.420
咱们本堂课就结束了

24:21.420 --> 24:22.420
那本堂课

24:22.420 --> 24:23.420
大家都学到了什么

24:23.420 --> 24:25.420
我再总结一下对吧

24:25.420 --> 24:27.420
再总结一下再写一个

24:27.420 --> 24:28.420
那本堂课

24:28.420 --> 24:30.420
大家是不是可以了解到

24:30.420 --> 24:31.420
这个WebJR

24:31.420 --> 24:33.420
它是一组

24:33.420 --> 24:36.420
WebJR是一个图形学规范

24:36.420 --> 24:39.420
对吧图形学规范

24:39.420 --> 24:41.420
有

24:41.420 --> 24:42.420
然后我们要学的是

24:42.420 --> 24:44.420
图形的API

24:44.420 --> 24:45.420
对吧

24:45.420 --> 24:47.420
要学习的

24:47.420 --> 24:49.420
是WebJR

24:49.420 --> 24:51.420
API

24:51.420 --> 24:53.420
可以吧

24:53.420 --> 24:54.420
并且这个API

24:54.420 --> 24:56.420
它还有允许我们

24:56.420 --> 24:58.420
去使用JavaScript

24:58.420 --> 25:00.420
去控制我们的GPU

25:00.420 --> 25:01.420
对吧

25:01.420 --> 25:02.420
进行一个3D汇制

25:02.420 --> 25:03.420
不多说

25:03.420 --> 25:05.420
然后第二点是什么

25:05.420 --> 25:06.420
第二点是不是

25:06.420 --> 25:08.420
我们还学到了这个

25:08.420 --> 25:10.420
还知道WebJR

25:10.420 --> 25:13.420
它是使用

25:13.420 --> 25:15.420
JavaScript语言和

25:15.420 --> 25:18.420
JRSL语言

25:18.420 --> 25:20.420
JRSL

25:20.420 --> 25:22.420
着色器的程序

25:22.420 --> 25:23.420
构成的对吧

25:23.420 --> 25:25.420
两种程序共存的

25:25.420 --> 25:31.650
两种程序

25:31.650 --> 25:32.650
可以吧

25:32.650 --> 25:33.650
然后第三点

25:33.650 --> 25:34.650
就是

25:34.650 --> 25:35.650
它是

25:35.650 --> 25:36.650
我们这个WebJR

25:36.650 --> 25:38.650
是将

25:38.650 --> 25:40.650
3D的模型数据

25:40.650 --> 25:41.650
就是我们

25:41.650 --> 25:43.650
3D场景的一个数据

25:43.650 --> 25:45.650
渲染到我们的2D平面上的

25:45.650 --> 25:46.650
对吧

25:46.650 --> 25:47.650
我刚才是不是也说了

25:47.650 --> 25:48.650
它是

25:48.650 --> 25:50.650
像我们的相机一样

25:50.650 --> 25:51.650
对不对

25:51.650 --> 25:53.650
把一个3D的一个

25:53.650 --> 25:55.650
3D立体的一个场景

25:55.650 --> 25:57.650
渲染到我们的页面上去

25:57.650 --> 25:58.650
我们的页面是2D的

25:58.650 --> 25:59.650
对吧

25:59.650 --> 26:01.650
就是WebJR

26:01.650 --> 26:03.650
这样

26:03.650 --> 26:07.650
3D数据

26:07.650 --> 26:09.650
渲染到

26:09.650 --> 26:11.650
显然

26:11.650 --> 26:14.650
渲染到数据

26:14.650 --> 26:15.650
不叫渲染吧

26:15.650 --> 26:16.650
叫显示

26:16.650 --> 26:18.650
把显示到

26:18.650 --> 26:21.650
2D平面

26:21.650 --> 26:22.650
OK吧

26:22.650 --> 26:23.650
然后第四点

26:23.650 --> 26:25.650
最后一点

26:25.650 --> 26:27.650
就是我们这个WebJR

26:27.650 --> 26:29.650
它是需要

26:29.650 --> 26:30.650
是需要开发者

26:30.650 --> 26:32.650
针对这个CPU和GPU

26:32.650 --> 26:34.650
进行一个

26:34.650 --> 26:36.650
变成的对吧

26:36.650 --> 26:38.650
使用

26:38.650 --> 26:40.650
GPU和GPU

26:40.650 --> 26:44.920
可以吧

26:44.920 --> 26:45.920
那好

26:45.920 --> 26:47.920
本堂课咱们就到这儿

26:47.920 --> 26:48.920
咱们下一堂课

26:48.920 --> 26:51.920
来正式的进入到WebJR

26:51.920 --> 26:53.920
代码的一个学习

26:53.920 --> 26:55.920
咱们下一堂课再见

