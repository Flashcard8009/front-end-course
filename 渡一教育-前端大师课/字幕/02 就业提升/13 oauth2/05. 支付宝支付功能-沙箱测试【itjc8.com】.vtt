WEBVTT

00:00.000 --> 00:05.520
各位同学大家好 这期课我们继续围绕OASUTU来进行一个相关学习

00:05.520 --> 00:13.720
那么本节课我们来看一下如何实现三方通过支付宝扫码功能进行支付这样一个操作

00:13.720 --> 00:16.120
那么在学习之前先跟大家说一下

00:16.120 --> 00:19.320
我们在这里要讲的是杀枪的一个测试功能

00:19.320 --> 00:22.640
也就是说一个虚拟环境的一个杀枪场景

00:22.640 --> 00:24.960
如果说正式的支付宝支付功能

00:24.960 --> 00:29.960
也就是说我们具备上线这种可以正常支付的这种业务请求

00:29.960 --> 00:32.400
那这个里面审核它是非常严格的

00:32.400 --> 00:35.320
首先你需要有带有资质的营业执照

00:35.320 --> 00:41.320
而且你在支付宝备案的商品要跟你的经营范围是相匹配的

00:41.320 --> 00:46.440
并且你还有一个已经备案之后的在线可以访问的玉米

00:46.440 --> 00:48.880
而这些都是一些应请要求

00:48.880 --> 00:55.960
所以说作为我们个人开发来讲是没办法来实现整个真实的一个支付环境的

00:55.960 --> 00:59.280
那我们可以通过这种杀枪来进行一下测试

00:59.280 --> 01:02.280
因为杀枪除了这个不能上线之外

01:02.280 --> 01:07.760
它所有的这个业务处理方面跟正式的线上环境几乎都是完全一致的

01:07.760 --> 01:09.600
只不过是在备案过程当中

01:09.600 --> 01:14.840
它省去了我们刚才所说的这几个营业执照经营范围

01:14.840 --> 01:19.680
包括咱们这一个产品备案这些相关的一个业务处理这一块

01:19.680 --> 01:22.880
所以说我们就来实现一下杀枪的这种功能

01:22.880 --> 01:23.160
好的

01:23.160 --> 01:28.600
那首先先给大家看一下我们这几个需要完成的一个简单的案例demo

01:28.680 --> 01:33.920
这个呢是我们一个比较常见的前端的一个支付模块其中的一部分

01:33.920 --> 01:36.920
那这个呢其实就是我们支付板扫码功能

01:36.920 --> 01:41.560
我们做呢主要是通过杀枪这种模拟啊来进行一个支付

01:41.560 --> 01:45.640
首先在这个里面我们可以进行这个支付金额的一个选择

01:45.640 --> 01:47.920
比如说我们可以进行手动输入或者说呢

01:47.920 --> 01:52.960
我们直接在底下选择一些初始化已经定义好的指定金额

01:52.960 --> 01:56.320
我们选择好之后呢这里面就选择立即充值

01:56.320 --> 02:00.920
当我立即充值之后同学们会发现这个里面做了一个跳转

02:00.920 --> 02:04.800
也就是说跳转到哪里啊跳转到我们这个支付板支付这一块

02:04.800 --> 02:09.360
然后这里面呢有一些当前的订单的一个描述信息

02:09.360 --> 02:12.240
然后呢左面啊就是有一个扫码支付

02:12.240 --> 02:15.480
右边呢我们可以根据这个支付板的一个账户登录

02:15.480 --> 02:17.880
登录之后呢进行一个相关的支付

02:17.880 --> 02:21.120
那比如说在这里啊给大家做一下这个扫码支付啊

02:21.120 --> 02:23.960
当然这个扫码支付啊不是咱们真实的支付宝啊

02:24.000 --> 02:27.720
我们要通过杀相板的这个支付宝来进行扫码支付

02:27.720 --> 02:29.480
比如说在这里面进行扫码

02:29.480 --> 02:31.800
如果说侦测到我扫码之后

02:31.800 --> 02:33.640
我这里面点击立即付款

02:33.640 --> 02:36.000
然后呢我输入这个支付密码

02:36.000 --> 02:38.320
同学们完成之后也可以自己试一下

02:38.320 --> 02:38.960
这时候呢

02:38.960 --> 02:41.720
介面就给我们提示已经扫码成功

02:41.720 --> 02:42.960
扫码成功之后啊

02:42.960 --> 02:45.480
我这面已经是做到了一个扣款

02:45.480 --> 02:49.320
那这边呢就是开始进行两秒后自动返回商货

02:49.320 --> 02:51.680
然后呢这里面给一个提示信息

02:51.720 --> 02:54.800
其实信息呢就是刚才告诉我们的这个交易成功了

02:54.800 --> 02:56.720
之后呢我们跳转回来

02:56.720 --> 02:57.720
跳转回来之后

02:57.720 --> 03:01.160
其实和我们刚才出手话看到的这个界面一样

03:01.160 --> 03:03.600
但是呢支付宝给我们的这个回到地址里面

03:03.600 --> 03:05.880
他加上了这个query参数

03:05.880 --> 03:06.960
query参数里面呢

03:06.960 --> 03:10.600
就是我们本次支付的一些相关描述信息

03:10.600 --> 03:13.440
比如说这里面我们可以看到totoamount

03:13.440 --> 03:14.600
这里面有一个3000

03:14.600 --> 03:16.960
也就是说代表我本次支付金额

03:16.960 --> 03:18.280
为3000元

03:18.280 --> 03:21.640
那咱们呢就来实现这样一个简单的案例啊

03:21.640 --> 03:25.120
其实我们现在可以拿到他的这个回调的一些相关信息啊

03:25.120 --> 03:26.960
来进行一些处理整合

03:26.960 --> 03:28.840
但是我们在这个案例里面啊

03:28.840 --> 03:29.680
这个就不需要了

03:29.680 --> 03:31.360
所以说我们只完成什么呢

03:31.360 --> 03:32.640
我们点击立即充值

03:32.640 --> 03:34.840
然后过去跳转跳转过去之后

03:34.840 --> 03:37.440
再给我们返回这个界面就可以了

03:37.440 --> 03:38.280
实现起来呢

03:38.280 --> 03:40.000
其实也是非常简单的

03:40.000 --> 03:42.200
首先来说我们通过这种啊

03:42.200 --> 03:43.560
杀箱的形式来实现

03:43.560 --> 03:45.680
那我们首先要看他的什么

03:45.680 --> 03:48.920
这个支付宝的一个开放平台啊

03:48.920 --> 03:50.760
那我们打开这个开放平台之后

03:50.760 --> 03:51.720
首先这个里面呢

03:51.720 --> 03:53.200
就会给我们提示

03:53.200 --> 03:54.720
做一个登录操作

03:54.720 --> 03:55.960
那你登录操作的时候

03:55.960 --> 03:56.600
这个里面啊

03:56.600 --> 04:00.000
我们就可以通过这种支付宝扫码的形式登录

04:00.000 --> 04:00.960
但你这个扫码啊

04:00.960 --> 04:03.160
是一定要用你自己真实的支付宝

04:03.160 --> 04:05.160
来进行一个扫码登录的

04:05.160 --> 04:05.600
这个呢

04:05.600 --> 04:07.480
同学们要明确一下

04:07.480 --> 04:08.360
比如说在这里面

04:08.360 --> 04:09.720
我进行一个扫码

04:09.720 --> 04:10.720
检测到之后呢

04:10.720 --> 04:13.920
他就会有一个自动登录的一个操作

04:13.920 --> 04:14.840
然后这个时候呢

04:14.840 --> 04:17.320
我在手机进行一下登录的确认

04:17.320 --> 04:17.720
ok

04:17.720 --> 04:18.640
确认之后呢

04:18.640 --> 04:19.440
他这个里面啊

04:19.440 --> 04:21.640
就跳到这个开发者中心了

04:21.640 --> 04:22.080
所以说呢

04:22.080 --> 04:23.200
咱们看到这个地址啊

04:23.200 --> 04:25.680
其实就是他的一个支付宝开放平台

04:25.680 --> 04:27.680
和咱们微信的这种开放平台啊

04:27.680 --> 04:29.840
包括我们这个github的

04:29.840 --> 04:32.240
一个我们备案的这个相关平台啊

04:32.240 --> 04:34.320
其实完全都是一致的

04:34.320 --> 04:34.720
然后呢

04:34.720 --> 04:36.160
我们到这个里面之后呢

04:36.160 --> 04:37.320
这里面有两种情况

04:37.320 --> 04:38.880
第一种是正式环境的

04:38.880 --> 04:40.520
比如说我们要做一些

04:40.520 --> 04:41.800
网页的应用程序

04:41.800 --> 04:43.000
那我直接在这个里面

04:43.000 --> 04:43.640
有一个啊

04:43.640 --> 04:44.080
有一个呢

04:44.080 --> 04:45.600
我可以直接就开始

04:45.600 --> 04:46.680
应用的图标啊

04:46.680 --> 04:48.760
然后添加一些相关的能力

04:48.760 --> 04:51.040
比如说我们的手机网站支付

04:51.040 --> 04:53.080
还有这种app支付当面付

04:53.080 --> 04:55.440
其实他这些功能是都有的啊

04:55.440 --> 04:57.080
但是你要添加这些功能呢

04:57.080 --> 04:58.120
咱们说了

04:58.120 --> 05:00.360
就是有一定的相关的

05:00.360 --> 05:02.040
这个资质要求

05:02.040 --> 05:04.240
也就是说你必须得有营业执照

05:04.240 --> 05:04.840
然后呢

05:04.840 --> 05:07.840
你还得有商家的一个详细备案

05:07.840 --> 05:10.240
也就是说你的这个支付产品啊

05:10.240 --> 05:11.960
是在你的这个经营范围之内的

05:11.960 --> 05:13.400
你比如说卖酒的

05:13.400 --> 05:16.080
但是你不能去做这个汽车的支付啊

05:16.080 --> 05:17.240
就是这意思啊

05:17.240 --> 05:18.400
那我们来怎么做呢

05:18.400 --> 05:20.160
其实我们不用考虑这一块

05:20.160 --> 05:22.640
真实环境的一个备案过程了

05:22.640 --> 05:23.800
因为我们现在资质啊

05:23.800 --> 05:24.640
确实不够

05:24.640 --> 05:25.160
那咋办呢

05:25.160 --> 05:27.120
我们直接的在这个里面

05:27.120 --> 05:29.080
也就是说我们点进去之后

05:29.080 --> 05:31.240
其实我们看到的这一块

05:31.240 --> 05:32.440
是自己的应用

05:32.440 --> 05:32.920
下面呢

05:32.920 --> 05:34.040
还有一块啊

05:34.040 --> 05:34.880
有一块是什么呢

05:34.880 --> 05:36.680
就是我们的这个开发服务

05:36.680 --> 05:38.280
在我们的开发阶段

05:38.280 --> 05:41.560
可以进行一些相关测试的里面的API

05:41.560 --> 05:41.960
这个呢

05:41.960 --> 05:43.080
可以跟我们进行使用啊

05:43.080 --> 05:45.080
比如说这里面有一个研发的

05:45.080 --> 05:47.120
杀箱验收数据实验室

05:47.120 --> 05:48.200
我们可以点一下

05:48.200 --> 05:49.680
我们点到这个里面呢

05:49.680 --> 05:52.000
就是可以把我们要测试的

05:52.000 --> 05:53.480
也就是说这个界面啊

05:53.480 --> 05:55.240
我们去三方对接

05:55.240 --> 05:57.200
把它转成杀箱的一个环境

05:57.200 --> 05:59.440
其实杀箱就是一种虚拟环境

05:59.440 --> 06:01.200
同学们这个要知道一下

06:01.200 --> 06:02.880
然后我们点进来之后

06:02.880 --> 06:06.120
这里面就是有这个相关界面的一个提示

06:06.120 --> 06:07.360
分别都是什么呢

06:07.360 --> 06:08.840
首先就是我们的这个

06:08.840 --> 06:11.960
三方支付的一个产品的这个应用ID

06:11.960 --> 06:12.360
这个呢

06:12.360 --> 06:13.920
是一个唯一标识啊

06:13.960 --> 06:16.320
也就是说让支付宝知道你是谁

06:16.320 --> 06:16.720
这个呢

06:16.720 --> 06:18.320
我们是需要的一会儿

06:18.320 --> 06:18.800
所以说呢

06:18.800 --> 06:20.320
这个同学们要记住一下

06:20.320 --> 06:20.680
之后呢

06:20.680 --> 06:22.640
这里面有一个支付宝网关

06:22.640 --> 06:23.240
然后这个呢

06:23.240 --> 06:23.800
是固定的

06:23.800 --> 06:25.400
咱们不要考虑这个事啊

06:25.400 --> 06:26.000
杀箱呢

06:26.000 --> 06:29.400
直接这个网关是杀箱的指定的这个

06:29.400 --> 06:30.160
网关地址

06:30.160 --> 06:32.360
那我们直接就用它就好了啊

06:32.360 --> 06:33.280
然后这里面呢

06:33.280 --> 06:35.520
也有一个rsar的一个密钥

06:35.520 --> 06:37.240
那这个是一定要有的

06:37.240 --> 06:38.440
所以说我们点击啊

06:38.440 --> 06:39.680
可以点击查看

06:39.680 --> 06:41.080
其实你在出手话的时候

06:41.080 --> 06:42.440
这些是没有的

06:42.440 --> 06:43.360
那没有怎么办呢

06:43.360 --> 06:44.280
我们这个里面啊

06:44.280 --> 06:45.840
其实要做一个什么

06:45.840 --> 06:49.280
要做一个加添加签名的这么一个操作

06:49.280 --> 06:51.680
那如何来实现这种添加签名呢

06:51.680 --> 06:53.320
也就是说底下这个公要

06:53.320 --> 06:54.840
包括这个支付宝公要

06:54.840 --> 06:55.920
其实它们俩是一样的

06:55.920 --> 06:57.200
你只要添加一个

06:57.200 --> 06:58.800
底下呢就显示出来了

06:58.800 --> 07:00.320
那这个公要从哪来

07:00.320 --> 07:00.640
然后呢

07:00.640 --> 07:01.480
我们可以想一下

07:01.480 --> 07:02.200
只要有公要

07:02.200 --> 07:03.520
那就一定是要有啊

07:03.520 --> 07:04.200
私要的啊

07:04.200 --> 07:05.000
也就是说

07:05.000 --> 07:06.880
那这个公要和私要怎么获取呢

07:06.880 --> 07:09.040
其实在这里给大家写了一个地址

07:09.040 --> 07:11.880
我们可以通过这种密钥工具的一个下载

07:11.880 --> 07:12.440
那这个呢

07:12.440 --> 07:14.440
也是支付宝给我们提供的啊

07:14.440 --> 07:16.120
我们直接在这个地址里面

07:16.120 --> 07:17.640
选择进行下载

07:17.640 --> 07:20.120
他是专门进行密钥生长的啊

07:20.120 --> 07:21.360
然后这个里面下载呢

07:21.360 --> 07:23.040
有几种形式啊

07:23.040 --> 07:25.120
比如说你是windows系统的

07:25.120 --> 07:27.000
或者是你web再见加密的啊

07:27.000 --> 07:28.800
就是说没有下载直接上线啊

07:28.800 --> 07:30.160
这种也是可以的

07:30.160 --> 07:31.320
那我们一般使用什么呢

07:31.320 --> 07:32.920
使用这种windows的

07:32.920 --> 07:34.200
或者是max系统的

07:34.200 --> 07:36.920
自行来进行下载就可以了

07:36.920 --> 07:38.360
然后下载其实也非常简单

07:38.360 --> 07:39.320
你点击

07:39.320 --> 07:41.440
这时候呢里面就开始下载了

07:41.480 --> 07:42.080
我这个呢

07:42.080 --> 07:43.360
就是说下载完成

07:43.360 --> 07:44.880
你在文件箱打开

07:44.880 --> 07:46.040
当然我这里面有下载

07:46.040 --> 07:47.040
我就不再下载了

07:47.040 --> 07:49.040
我这里面给他做一个取消

07:49.040 --> 07:50.520
那下载完成之后是什么样的

07:50.520 --> 07:51.480
就是这个啊

07:51.480 --> 07:53.320
你一落max的

07:53.320 --> 07:55.640
你给他进行一下安装就ok了

07:55.640 --> 07:56.280
然后呢

07:56.280 --> 07:58.640
你这里面可以做一个全线选择

07:58.640 --> 07:59.440
比如说

07:59.440 --> 08:01.720
你为管理员来可以进行使用

08:01.720 --> 08:03.760
或者是任何人都可以进行使用

08:03.760 --> 08:04.160
这个呢

08:04.160 --> 08:05.560
就是有你自行选择

08:05.560 --> 08:07.240
因为我们测试的时候

08:07.240 --> 08:08.440
没有太多音频要求

08:08.440 --> 08:10.720
所以说这个选哪个都不要紧

08:10.720 --> 08:12.480
当你选择完成之后呢

08:12.480 --> 08:13.560
会有一个什么呢

08:13.560 --> 08:15.960
你这里面就会有这么一个东西

08:15.960 --> 08:16.480
也就是说

08:16.480 --> 08:17.120
知识不保

08:17.120 --> 08:18.280
开放平台助手

08:18.280 --> 08:19.360
我打开之后

08:19.360 --> 08:20.520
这个里面是什么样啊

08:20.520 --> 08:21.360
给大家看一下

08:21.360 --> 08:22.120
打开之后呢

08:22.120 --> 08:22.960
其实如果说

08:22.960 --> 08:24.800
同学们没有生成密钥的时候

08:24.800 --> 08:26.480
应该是这样子

08:26.480 --> 08:27.920
我们按摩人也不用选择啊

08:27.920 --> 08:29.880
在这个左侧拆单栏里面

08:29.880 --> 08:32.280
第一项就是生成密钥就ok了

08:32.280 --> 08:33.800
也就是说我们用这个

08:33.800 --> 08:35.640
来进行密钥的生成

08:35.640 --> 08:36.920
那我们怎么选

08:36.920 --> 08:37.520
首先啊

08:37.520 --> 08:39.640
上面这个我们不用考虑啊

08:39.640 --> 08:42.640
比如说我们选择RSA or RSAR

08:42.640 --> 08:43.760
一个是杀箱的

08:43.760 --> 08:45.200
一个是正式环境的

08:45.200 --> 08:46.560
这个密钥长度啊

08:46.560 --> 08:46.880
当然了

08:46.880 --> 08:48.760
这个我们暂时不需要处理

08:48.760 --> 08:50.360
所以说你直接选择

08:50.360 --> 08:52.240
默认的RSAR就可以了

08:52.240 --> 08:53.840
那密钥隔是这一块啊

08:53.840 --> 08:55.520
我们要深重考虑一下

08:55.520 --> 08:56.680
也就是说

08:56.680 --> 08:59.400
谨慎的进行一下选择

08:59.400 --> 09:00.360
因为这个里面

09:00.360 --> 09:01.200
它是两种

09:01.200 --> 09:01.880
第一种呢

09:01.880 --> 09:03.600
就是加碼环境使用的

09:03.600 --> 09:05.440
这种pkss8的啊

09:05.440 --> 09:06.120
还有一种呢

09:06.120 --> 09:07.960
是非加碼环境下使用的

09:07.960 --> 09:09.080
那我们选择什么呢

09:09.080 --> 09:11.000
我们就主要选择这种

09:11.000 --> 09:13.360
pkss1的这种形式啊

09:13.360 --> 09:15.560
因为我们使用note来实现的啊

09:15.560 --> 09:16.040
所以说呢

09:16.040 --> 09:16.800
密钥隔是啊

09:16.800 --> 09:19.120
这块我们一定要看好了

09:19.120 --> 09:20.720
来进行一个选择

09:20.720 --> 09:21.520
完成之后呢

09:21.520 --> 09:23.080
你就点击生成密钥

09:23.080 --> 09:24.920
那生成密钥成功之后

09:24.920 --> 09:26.880
这里面就会显示出来这个

09:26.880 --> 09:27.400
私钥

09:27.400 --> 09:28.960
以及我们的这个公钥

09:28.960 --> 09:29.760
这两个内容呢

09:29.760 --> 09:31.040
我们可以做这种

09:31.040 --> 09:32.080
CRS纹

09:32.080 --> 09:33.600
CSR文件的一个获取

09:33.600 --> 09:35.200
也就是说我们生成之后啊

09:35.200 --> 09:36.840
可以把这个文件保存下来

09:36.840 --> 09:37.440
或者说呢

09:37.440 --> 09:39.160
我们直接针对这个应用啊

09:39.160 --> 09:41.040
我们先不把这个窗口关闭

09:41.040 --> 09:41.560
然后呢

09:41.560 --> 09:43.680
我们在这个里面展示这个内容啊

09:43.680 --> 09:44.720
那这个有什么用呢

09:44.720 --> 09:46.760
其实让我们生成这两套内容

09:46.760 --> 09:48.280
刚才大家也看到了

09:48.280 --> 09:49.040
这个里面呢

09:49.040 --> 09:50.000
我们主要是

09:50.000 --> 09:51.920
第一个先放在哪个里面

09:51.920 --> 09:54.160
我们第一个要把他这个

09:54.160 --> 09:56.640
psar的这个密钥

09:56.640 --> 10:00.240
我们把刚才我们生成的这个公钥

10:00.240 --> 10:01.640
做一个什么复制

10:01.640 --> 10:02.800
复制完成之后

10:02.800 --> 10:04.040
把这个公钥啊

10:04.040 --> 10:05.520
当我这个里面已经生成了

10:05.520 --> 10:06.160
同学们那个

10:06.160 --> 10:07.400
如果没有生成的话

10:07.440 --> 10:08.920
我们直接进行一下

10:08.920 --> 10:09.920
生成之后呢

10:09.920 --> 10:10.960
给他复制

10:10.960 --> 10:11.760
复制之后

10:11.760 --> 10:12.960
粘贴到这个里面

10:12.960 --> 10:15.760
最后显示出这个加签内容完成

10:15.760 --> 10:16.320
ok

10:16.320 --> 10:16.920
那这个呢

10:16.920 --> 10:17.640
就可以了

10:17.640 --> 10:19.640
这是我们需要做的第一步

10:19.640 --> 10:20.280
也就是说

10:20.280 --> 10:22.240
我们生成一个公钥

10:22.240 --> 10:22.800
并且呢

10:22.800 --> 10:26.200
把这个公钥放在我们的这个应用里面

10:26.200 --> 10:27.120
这个位置啊

10:27.120 --> 10:27.640
然后呢

10:27.640 --> 10:30.120
其实他就是让我们这个应用里面啊

10:30.120 --> 10:31.480
有一个跟之后

10:31.480 --> 10:33.320
可以做对称的一个公钥

10:33.320 --> 10:35.120
实现的一个需求啊

10:35.120 --> 10:35.680
首先呢

10:35.680 --> 10:36.720
选看部分呢

10:36.720 --> 10:37.880
咱们就不用考虑了

10:37.880 --> 10:38.480
这里面呢

10:38.480 --> 10:40.240
就是一些应用的图标啊

10:40.240 --> 10:41.520
这个应用图标呢

10:41.520 --> 10:42.920
其实我刚才支付的时候

10:42.920 --> 10:46.240
就是通过这个杀箱板来做这个支付的

10:46.240 --> 10:46.640
然后呢

10:46.640 --> 10:49.200
我们也可以进行一个下载啊

10:49.200 --> 10:50.840
在我们一会支付的时候

10:50.840 --> 10:52.120
我们的这个应用里面

10:52.120 --> 10:53.640
就会多这样一个图标

10:53.640 --> 10:54.680
其实我们扫码的时候

10:54.680 --> 10:58.600
就是通过这种杀箱板来进行实现的啊

10:58.600 --> 10:59.040
所以说呢

10:59.040 --> 11:02.160
我们一会点击进去这个app应用就可以了

11:02.160 --> 11:03.560
这就是一个图标展示啊

11:03.560 --> 11:06.520
和每一个咱们经常用到的手机应用啊

11:06.520 --> 11:08.000
几乎都是类似的

11:08.000 --> 11:08.560
所以说呢

11:08.560 --> 11:09.000
这个啊

11:09.000 --> 11:10.640
咱不过多解释了

11:10.640 --> 11:13.360
而这里面有一些相关的这个应用网关啊

11:13.360 --> 11:14.400
跟同学们说啊

11:14.400 --> 11:14.960
这个呢

11:14.960 --> 11:15.760
我们啊

11:15.760 --> 11:17.160
先不用去考虑它

11:17.160 --> 11:18.120
因为什么呢

11:18.120 --> 11:20.760
因为我们这个现在是杀箱板的

11:20.760 --> 11:22.040
而非正式板的

11:22.040 --> 11:22.840
所以说呢

11:22.840 --> 11:23.480
我们啊

11:23.480 --> 11:24.360
即使设置了啊

11:24.360 --> 11:25.560
也是没有任何意义的

11:25.560 --> 11:27.160
所以说这个先不用考虑

11:27.160 --> 11:28.360
那实现这个案例呢

11:28.360 --> 11:29.360
其实有一部分啊

11:29.360 --> 11:30.320
还是比较重要的

11:30.320 --> 11:31.160
就是什么呢

11:31.160 --> 11:33.040
我们的这个授权回调

11:33.040 --> 11:33.840
大家发现了

11:33.840 --> 11:35.640
这种奥斯特的形式啊

11:35.640 --> 11:37.640
是一定有一个什么的回调的

11:37.640 --> 11:38.160
比如说

11:38.160 --> 11:40.000
我们用这种马上登录

11:40.000 --> 11:40.760
还有这种

11:40.760 --> 11:43.520
发布实现这种登录的业务需求的时候

11:43.520 --> 11:45.360
其实也都是有一个

11:45.360 --> 11:48.000
我们这种一个回调地址啊

11:48.000 --> 11:48.840
因为什么呢

11:48.840 --> 11:50.120
他得告诉我们啊

11:50.120 --> 11:51.160
一个享用状态

11:51.160 --> 11:52.760
比如说我登录成功了

11:52.760 --> 11:53.760
支付成功了

11:53.760 --> 11:54.480
在这个里面

11:54.480 --> 11:56.320
他都得去请求我们自己

11:56.320 --> 11:58.400
这个三方应用的一个接口

11:58.400 --> 12:01.240
由这个接口来告诉我们啊

12:01.240 --> 12:01.800
也就是说

12:01.800 --> 12:03.960
可以理解为一个三方应用的地址啊

12:03.960 --> 12:04.800
由这个地址呢

12:04.800 --> 12:05.480
告诉我们啊

12:05.480 --> 12:07.560
你是否已经三路成功了

12:07.560 --> 12:08.120
那这个呢

12:08.120 --> 12:10.400
其实就是靠这种授权回到地址啊

12:10.400 --> 12:11.240
来实现的

12:11.240 --> 12:13.760
其实我们刚才在这个支付界面的时候

12:13.760 --> 12:14.920
也可以看到的

12:14.920 --> 12:17.160
比如说刚才我点击立即充值了

12:17.160 --> 12:18.160
立即充值之后

12:18.160 --> 12:19.120
我跳转过去啊

12:19.120 --> 12:19.480
当然了

12:19.480 --> 12:20.760
这个立即充值啊

12:20.760 --> 12:22.560
然后是有三千块钱的

12:22.560 --> 12:23.320
对不对

12:23.320 --> 12:24.240
我过去之后

12:24.240 --> 12:25.320
扫码之后呢

12:25.320 --> 12:27.760
他是会给我一个响应结果的

12:27.760 --> 12:28.680
那这个响应结果

12:28.680 --> 12:30.440
其实还是我们

12:30.440 --> 12:33.440
刚才我需要访问的这个充值界面啊

12:33.440 --> 12:34.440
那这个响应结果

12:34.440 --> 12:35.920
他回掉地址呢

12:35.920 --> 12:36.680
在这个里面

12:36.680 --> 12:40.080
给我添加了一些根据刚才的

12:40.080 --> 12:41.960
我们充值的一个状态

12:41.960 --> 12:43.840
响应的一个参数内容

12:43.840 --> 12:45.040
给我返回去了

12:45.040 --> 12:46.800
刚才这个同学们应该看到了

12:46.800 --> 12:47.400
对不对

12:47.400 --> 12:49.360
其实这个回掉地址就是做这个的

12:49.360 --> 12:50.560
也就是啥意思呢

12:50.560 --> 12:51.600
你已经成功了

12:51.600 --> 12:52.120
那我怎么办

12:52.120 --> 12:53.960
我告诉你一下三方平台

12:53.960 --> 12:54.200
哎

12:54.200 --> 12:55.360
这个钱我收到了

12:55.360 --> 12:57.480
然后你继续下一步操作吧

12:57.480 --> 12:59.080
或者是给人家发货啊

12:59.080 --> 13:00.280
或者是其他相关内容

13:00.280 --> 13:02.600
这个就有你三方的一个应用

13:02.600 --> 13:03.440
自己来处理了

13:03.440 --> 13:05.800
我周围就不负责这个事情了

13:05.800 --> 13:06.360
对不对

13:06.360 --> 13:07.320
他就是这一次啊

13:07.320 --> 13:08.080
然后这一块呢

13:08.080 --> 13:09.760
我们设置完了之后

13:09.760 --> 13:11.480
这个里面还有一个rsa

13:11.480 --> 13:13.440
设置的一个功效啊

13:13.440 --> 13:17.280
当然这个我们就是可以也不去考虑它啊

13:17.280 --> 13:18.720
就是说现在啊

13:18.720 --> 13:22.240
就是说我们主要做的事情就是什么呢

13:22.240 --> 13:23.960
我们定一个回掉地址

13:23.960 --> 13:24.960
这个回掉地址呢

13:24.960 --> 13:27.720
其实就是我们测试的这个工程啊

13:27.720 --> 13:28.880
当然你随便调用啊

13:28.880 --> 13:32.320
也就是说你直接的可以随便的一个定义啊

13:32.320 --> 13:34.880
但只是你如果说定义哪个地址的

13:34.880 --> 13:36.560
你一定在你的应用里面

13:36.560 --> 13:38.160
要给他做一个监听

13:38.160 --> 13:39.720
否则他身上获取不到的

13:39.720 --> 13:41.320
这个要知道一下啊

13:41.320 --> 13:42.880
然后se命要这些啊

13:42.880 --> 13:44.400
咱们不用考虑了

13:44.400 --> 13:45.600
接下来我下看啊

13:45.600 --> 13:46.600
下面这一块是什么呢

13:46.600 --> 13:47.400
下面这一块啊

13:47.400 --> 13:49.440
就是说刚才同学们也看到了

13:49.440 --> 13:50.640
我们这个应用

13:50.640 --> 13:51.760
我跟大家说了

13:51.760 --> 13:53.280
就是我刚才支付的时候

13:53.280 --> 13:55.680
其实手机上是有这么一个

13:55.680 --> 13:57.080
杀枪版的支付宝的

13:57.080 --> 14:00.200
所以说同学们也要需要下载一个

14:00.200 --> 14:01.720
因为一会我们扫码的时候

14:01.720 --> 14:04.200
也就是说我点击三千块钱充值

14:04.200 --> 14:05.560
我跳转过来之后

14:05.560 --> 14:07.000
真正扫这个码的时候

14:07.000 --> 14:10.120
你不要用你正式环境的这个支付宝

14:10.120 --> 14:11.760
如果说你用正式环境支付宝啊

14:11.760 --> 14:13.520
他这个账单啊

14:13.520 --> 14:15.920
也就是说该比支付这个信息呀

14:15.920 --> 14:17.320
他是不成功的

14:17.320 --> 14:17.960
所以说呢

14:17.960 --> 14:20.120
我们必须指定这种杀枪环境的

14:20.120 --> 14:21.800
要不然我三千三千呢

14:21.800 --> 14:24.160
这个也不能这么土豪对不对

14:24.160 --> 14:26.600
然后所以说同学们这个知道一下啊

14:26.600 --> 14:27.920
好的那这个完成之后呢

14:27.920 --> 14:31.000
底下就是说一些他的这个开放功能啊

14:31.000 --> 14:33.200
其实功能还是挺多的啊

14:33.200 --> 14:36.200
里面这些比如说我们的这个经营包表啊

14:36.200 --> 14:38.440
营交啊还有这个口碑开店啊

14:38.440 --> 14:41.400
但这里面很多内容我们主要做什么呢

14:41.400 --> 14:44.680
我们主要做的一个在线扫码支付就ok了

14:44.680 --> 14:46.200
其他的我们不考虑

14:46.200 --> 14:48.520
然后刚才这个是杀枪应用这一块

14:48.520 --> 14:49.840
接下来的我们看一下什么呢

14:49.840 --> 14:51.840
看一下杀枪账号的一块啊

14:51.840 --> 14:53.520
账号这个是什么意思啊

14:53.520 --> 14:54.840
因为刚才说了

14:54.840 --> 14:56.480
我们一会要支付的时候

14:56.480 --> 14:57.240
那现在呢

14:57.240 --> 14:59.560
我们得有一个商家

14:59.560 --> 15:00.960
那商家指的是谁呢

15:00.960 --> 15:03.160
商家指的就是我对不对

15:03.160 --> 15:04.160
由我来接收

15:04.160 --> 15:05.160
也就是说什么意思

15:05.160 --> 15:07.520
比如说那你现在你向谁付款呢

15:07.520 --> 15:10.320
其实我就代表着后台这个商家啊

15:10.320 --> 15:12.200
也就是说这个网站的创建者

15:12.200 --> 15:13.440
可以这么理解啊

15:13.440 --> 15:14.920
我呢就属于这个商家

15:14.920 --> 15:16.920
商家信息里面就这些内容

15:16.920 --> 15:19.280
比如说账号和这个uid啊

15:19.280 --> 15:19.880
那这些呢

15:19.880 --> 15:22.640
一会我们在这个创建杀枪应用的时候

15:22.640 --> 15:23.800
是需要用到的

15:23.800 --> 15:24.280
比如说呢

15:24.320 --> 15:25.840
这个四二九六零二

15:25.840 --> 15:26.680
这是什么意思啊

15:26.680 --> 15:27.280
其实这个呢

15:27.280 --> 15:30.000
就是我获取到的一个前卖

15:30.000 --> 15:31.640
比如说有人向我付款了

15:31.640 --> 15:32.560
那付款之后

15:32.560 --> 15:35.080
我这个里面钱就多了一部分啊

15:35.080 --> 15:36.120
其实这个好理解啊

15:36.120 --> 15:37.840
比如说再给大家充值一下

15:37.840 --> 15:39.960
刚才这个是四二九六零二这样

15:39.960 --> 15:41.680
我给大家充值一万啊

15:41.680 --> 15:42.680
反正也不是真钱嘛

15:42.680 --> 15:43.040
对不对

15:43.040 --> 15:45.280
然后咱们就随便充值了啊

15:45.280 --> 15:46.720
首先还是到这一步

15:46.720 --> 15:48.120
那我打开我们的这个

15:48.120 --> 15:49.760
杀枪版的支付宝

15:49.760 --> 15:51.840
打开杀枪版支付宝

15:51.840 --> 15:53.120
点击正在处理

15:53.120 --> 15:54.920
ok一万块钱

15:54.920 --> 15:57.560
这里面显示已经扫码成功了

15:57.560 --> 16:00.480
当然我现在是在输入支付密码啊

16:00.480 --> 16:02.480
当我支付密码输入完成之后

16:02.480 --> 16:05.440
他现在已经开始进行一个跳转操作

16:05.440 --> 16:06.320
他跳转之后呢

16:06.320 --> 16:10.440
其实他就是会返回给我们回掉的那个地址啊

16:10.440 --> 16:11.000
然后呢

16:11.000 --> 16:12.480
现在已经回来了

16:12.480 --> 16:13.040
回来之后呢

16:13.040 --> 16:15.720
我们再看一下我们的这个余额二

16:15.720 --> 16:16.520
我刷新一下

16:16.520 --> 16:17.080
刷新一下

16:17.080 --> 16:19.800
此时就显示五万两千九百六十元

16:19.800 --> 16:21.120
也就是说刚才充值一万

16:21.120 --> 16:22.120
我已经到账了

16:22.120 --> 16:22.720
对不对

16:22.720 --> 16:25.280
这个呢可以理解为我们的后段后台

16:25.280 --> 16:27.080
这一块的内容信息

16:27.080 --> 16:29.600
也就是说我们这个三方的这个应用

16:29.600 --> 16:31.760
这一块的他的一个手法账户啊

16:31.760 --> 16:33.200
买家信息呢指的是什么

16:33.200 --> 16:35.320
就是说我在手机上的一个

16:35.320 --> 16:36.560
杀箱的一个操作啊

16:36.560 --> 16:38.640
这里面这个钱随便输入啊

16:38.640 --> 16:39.520
这无所谓的事

16:39.520 --> 16:41.040
当路密码包括支付密码

16:41.040 --> 16:43.360
在这里都有做这个显示

16:43.360 --> 16:44.640
包括我们的这个用户名

16:44.640 --> 16:46.080
比如说随便冲啊

16:46.080 --> 16:47.120
九九九九啊

16:47.120 --> 16:48.560
然后随便冲

16:48.560 --> 16:50.080
我看百万都可以冲的啊

16:50.080 --> 16:54.000
这里面就是二三万六千六百七十七了啊

16:54.000 --> 16:55.240
然后呢冲完了之后

16:55.240 --> 16:56.920
你就可以进行操作了

16:56.920 --> 16:58.440
这其他的比如说这个

16:58.440 --> 16:59.800
山洋工具这一块啊

16:59.800 --> 17:00.560
他这个里面呢

17:00.560 --> 17:03.680
就是有一些常用的应用

17:03.680 --> 17:06.000
比如说我们可以做这种支付寶钱包啊

17:06.000 --> 17:07.760
还有这种口碑门电呢

17:07.760 --> 17:09.280
包括其他的一些

17:09.280 --> 17:11.280
芝麻信用的一个山洋工具啊

17:11.280 --> 17:12.600
这些是都有的

17:12.600 --> 17:13.480
那这个里面啊

17:13.480 --> 17:15.760
内容大家就这些做的时候呢

17:15.760 --> 17:18.600
主要就是针对于我们这个

17:18.640 --> 17:19.840
密钥的一个设置

17:19.840 --> 17:21.520
如果说我们把这个密钥

17:21.520 --> 17:23.120
正确的设置完成之后

17:23.120 --> 17:23.600
然后呢

17:23.600 --> 17:25.720
基本上就可以实现这个功能了

17:25.720 --> 17:27.920
那我们就来实现一下这个功能

17:27.920 --> 17:29.160
实现这个功能呢

17:29.160 --> 17:29.560
首先啊

17:29.560 --> 17:31.080
我们看这个文档啊

17:31.080 --> 17:31.560
这里面呢

17:31.560 --> 17:32.480
有两个文档

17:32.480 --> 17:33.080
一个呢

17:33.080 --> 17:34.920
是我们这个阿里佩的这个

17:36.080 --> 17:37.600
之前的一个老板的文档啊

17:37.600 --> 17:40.800
他这里面有no.js的这个相关的sdk

17:40.800 --> 17:42.240
然后我们可以从这里面查看

17:42.240 --> 17:42.880
或者说呢

17:42.880 --> 17:44.640
我们直接看第二个啊

17:44.640 --> 17:46.920
第二个是从语缺里面打开的

17:46.920 --> 17:50.160
这个相对描述的是更加清晰的

17:50.160 --> 17:51.760
那这个怎么来做呢

17:51.760 --> 17:52.400
我们首先啊

17:52.400 --> 17:53.440
实现这些功能

17:53.440 --> 17:54.480
这样我们初始化

17:54.480 --> 17:56.440
恢复到原来的这个状态

17:56.440 --> 17:58.800
那我们先保证有一个前端界面

17:58.800 --> 17:59.640
前端界面呢

17:59.640 --> 18:01.200
我们的实现需求是什么呢

18:01.200 --> 18:03.160
简单的做一些交互功能

18:03.160 --> 18:05.920
比如说我底下这几个被选项的

18:05.920 --> 18:07.320
一个金额可以呢

18:07.320 --> 18:08.640
进行点击

18:08.640 --> 18:09.320
点击之后

18:09.320 --> 18:11.400
填充到我这个表弹项里面

18:11.400 --> 18:11.960
然后呢

18:11.960 --> 18:13.600
我点击立即充值

18:13.600 --> 18:14.560
给一个跳转

18:14.560 --> 18:15.240
跳转之后呢

18:15.240 --> 18:17.480
我给他一个302的一个重定项

18:17.480 --> 18:19.760
定向到我们这个阿里佩

18:19.760 --> 18:22.120
也就是说我们这个支付宝里面的

18:22.120 --> 18:23.320
这个杀枪

18:23.320 --> 18:24.640
他的这个跳转地址

18:24.640 --> 18:25.200
然后呢

18:25.200 --> 18:27.760
我们获取他的这个支付的一个界面

18:27.760 --> 18:28.680
在支付界面里面

18:28.680 --> 18:29.800
我们进行相关操作

18:29.800 --> 18:31.320
如果说成功之后

18:31.320 --> 18:33.000
他会给我们一个返回职任

18:33.000 --> 18:35.320
那就代表着我们本次操作的

18:35.320 --> 18:36.560
成功或者失败啊

18:36.560 --> 18:38.520
也就是说支付的成功和失败

18:38.520 --> 18:39.360
就这样

18:39.360 --> 18:39.800
首先呢

18:39.800 --> 18:41.480
我们把前台的这一块啊

18:41.480 --> 18:42.080
也就是说

18:42.080 --> 18:45.160
我们看到的前端界面这一块的内容

18:45.160 --> 18:46.480
给做一下处理啊

18:46.480 --> 18:47.120
怎么来做呢

18:47.120 --> 18:47.560
这个呢

18:47.560 --> 18:48.960
是一个出示化的

18:48.960 --> 18:50.880
一个静态的一个工程啊

18:50.880 --> 18:51.280
里面呢

18:51.280 --> 18:52.440
开一个3000端口

18:52.440 --> 18:53.680
然后在vios里面

18:53.680 --> 18:56.920
咱们有一个阿里佩的这个ATML文件

18:56.920 --> 18:57.360
然后呢

18:57.360 --> 18:59.880
我把他的这个前端的简单交货

18:59.880 --> 19:00.880
给实现一下

19:00.880 --> 19:02.160
所以我们实现这个前端

19:02.160 --> 19:05.480
简单的这个交货也非常简单啊

19:05.480 --> 19:06.440
我们都做什么

19:06.440 --> 19:07.200
首先第一

19:07.200 --> 19:09.760
我们绑定几个事件对不对

19:09.760 --> 19:12.160
也就是说立即充值这个按钮的事件

19:12.160 --> 19:15.000
以及每一个选项的这个按钮的事件

19:15.000 --> 19:17.400
也就是说这个金尔的一个选项事件

19:17.400 --> 19:18.640
给他填充之后呢

19:18.640 --> 19:19.760
我点击立即充值

19:19.760 --> 19:21.720
就可以进行一个跳转就可以了

19:21.720 --> 19:22.520
当然这个跳转呢

19:22.520 --> 19:25.120
我们使用A点击跳就可以了啊

19:25.120 --> 19:25.400
好的

19:25.400 --> 19:27.760
那我们定义好这个gs文件之后

19:27.760 --> 19:30.160
那我们就打开他的这个gs文件

19:30.160 --> 19:31.840
在public gs里面

19:31.840 --> 19:34.000
找到这个阿里佩一下gs

19:34.000 --> 19:34.440
首先呢

19:34.440 --> 19:37.040
我定一个匿名自执行函数啊

19:38.520 --> 19:40.680
在这匿名自执行函数里面

19:40.680 --> 19:43.440
我们有一个init的程序入口

19:43.480 --> 19:48.600
这里面couns的init等于一个箭头函数

19:48.600 --> 19:50.120
等于这个箭头函数之后

19:50.120 --> 19:52.680
这里面有一个init event

19:54.240 --> 19:54.880
那这个呢

19:54.880 --> 19:57.400
就代表着我们所有的事件入口啊

19:57.400 --> 20:00.280
那我定一下couns的init event

20:00.280 --> 20:02.080
等于一个箭头函数

20:02.080 --> 20:02.600
里边呢

20:02.600 --> 20:03.880
首先我们要做什么事啊

20:03.880 --> 20:04.360
首先呢

20:04.360 --> 20:05.640
我们要处理的事

20:05.640 --> 20:06.760
他可能是自己输入

20:06.760 --> 20:08.200
也有可能是我们点击啊

20:08.200 --> 20:11.000
那我们先把点击这一块来给做一下

20:11.000 --> 20:11.880
相应的处理啊

20:11.880 --> 20:12.640
怎么来做

20:12.680 --> 20:14.280
首先找到所有的集合

20:14.280 --> 20:14.680
然后呢

20:14.680 --> 20:17.400
给每一个进行事件的绑定

20:17.400 --> 20:19.440
document的点query selector

20:20.640 --> 20:21.680
query selector

20:21.680 --> 20:23.440
那这里面我选择集合

20:23.440 --> 20:26.560
所以说用这种query selector out的形式

20:26.560 --> 20:28.520
找到他们所有的类名

20:28.520 --> 20:30.560
叫money list的item

20:30.560 --> 20:32.080
进行一个便利

20:32.080 --> 20:34.760
然后便利里面接一个每一项的

20:34.760 --> 20:36.320
节点的那个参数

20:36.320 --> 20:37.440
那no的呢

20:37.440 --> 20:38.920
点i的event

20:38.920 --> 20:41.520
listen的他们是点击事件

20:41.520 --> 20:41.880
对吧

20:41.880 --> 20:43.480
那我就给他们一个click

20:44.640 --> 20:45.720
这里面写一个

20:45.720 --> 20:49.600
on money list click

20:49.600 --> 20:50.000
好的

20:50.000 --> 20:52.520
那我定一下这个事件函数啊

20:52.520 --> 20:53.920
我定于这个事件函数

20:53.920 --> 20:54.400
在这里

20:54.400 --> 20:56.760
counts的on money list click

20:56.760 --> 20:58.960
等于一个件头函数

20:58.960 --> 20:59.800
当然这个里面

20:59.800 --> 21:02.320
我要获取它的这个initeml值

21:02.320 --> 21:02.720
所以说呢

21:02.720 --> 21:04.400
我就不使用件头函数了

21:04.400 --> 21:06.360
因为这里面要使用Z次

21:06.360 --> 21:06.840
那也就是说

21:06.840 --> 21:10.480
我这里面counts它一个money

21:10.520 --> 21:11.920
等于一个什么值呢

21:11.920 --> 21:14.560
等于Z次点value就ok了

21:14.560 --> 21:18.400
也就是说这里面Z次点value值

21:18.400 --> 21:18.760
sorry

21:18.760 --> 21:22.160
应该是Z次点inhrtml

21:24.160 --> 21:26.600
那拿到这个inhrtml之后呢

21:28.240 --> 21:28.760
我们啊

21:28.760 --> 21:30.680
就给它来进行一个复职

21:30.680 --> 21:31.480
也就是说

21:31.480 --> 21:32.440
把它复职给谁

21:32.440 --> 21:34.360
把它复职给这个input

21:34.360 --> 21:35.120
是不是就可以了

21:35.120 --> 21:36.760
比如说现在我点击一下

21:36.760 --> 21:38.280
先保证它能获取到啊

21:38.280 --> 21:39.160
来刷新一下

21:39.800 --> 21:40.920
35001万

21:40.920 --> 21:41.760
是不是有了

21:41.760 --> 21:42.440
有了之后

21:42.440 --> 21:43.760
我就给它来进行个复职

21:43.760 --> 21:44.480
是谁

21:44.480 --> 21:46.600
是这个input node对吧

21:46.600 --> 21:49.520
那我直接input node点value

21:49.520 --> 21:50.520
等于一个谁

21:50.520 --> 21:52.280
money就可以了啊

21:52.280 --> 21:52.720
之后呢

21:52.720 --> 21:55.960
这样就获取了一个复职的一个结果

21:55.960 --> 21:56.920
那复职完成之后呢

21:56.920 --> 21:59.320
我现在其实就是开始进行一个什么

21:59.320 --> 22:00.560
提交操作了对不对

22:00.560 --> 22:02.080
也就是说要进行一个

22:02.080 --> 22:04.200
我自己的一个地址的一个跳转

22:04.200 --> 22:04.600
然后呢

22:04.600 --> 22:07.240
由后端的来给我进行一个重定项

22:07.240 --> 22:07.640
所以说

22:07.640 --> 22:08.640
首先第一步

22:08.640 --> 22:11.240
我们前台要给他进行一个

22:11.240 --> 22:12.280
事件的绑定

22:12.280 --> 22:13.840
也就是说在这里边

22:13.840 --> 22:17.280
paybtn.at the event listener

22:17.280 --> 22:19.840
这里面选择click事件

22:19.840 --> 22:20.560
然后呢

22:20.560 --> 22:23.880
on paybtn click

22:23.880 --> 22:24.520
好的

22:24.520 --> 22:26.920
那我们把这个事件给做一下定义

22:26.920 --> 22:27.560
在这里面

22:27.560 --> 22:30.320
concept on paybtn click

22:30.320 --> 22:33.760
等于一个建团术之后呢

22:33.760 --> 22:35.880
我这里面就温到点open

22:35.880 --> 22:36.840
打开一个界面

22:36.840 --> 22:37.960
打开一个界面呢

22:37.960 --> 22:41.000
其实就是我要跳转过去的这个地址

22:41.000 --> 22:42.280
也就是说

22:42.280 --> 22:44.560
我自己的一个服务器上的一个地址

22:44.560 --> 22:47.240
然后由我服务器来给我进行这个

22:47.240 --> 22:49.160
支付宝的一个链接跳转啊

22:49.160 --> 22:50.840
就是做这一步操作

22:50.840 --> 22:51.880
那我温到点open

22:51.880 --> 22:53.760
首先我得定义一下

22:53.760 --> 22:55.520
我具体想跳到哪里

22:55.520 --> 22:58.160
那我这里面就跳到我们这个

22:58.160 --> 22:59.160
ally pay

22:59.160 --> 22:59.800
然后呢

22:59.800 --> 23:01.600
直接的这是第一个路径

23:01.600 --> 23:02.400
第一个路径之后

23:02.400 --> 23:03.000
这里面啊

23:03.000 --> 23:06.880
其实我们在本次跳转的时候

23:06.880 --> 23:09.080
是需要传递一些参数的

23:09.080 --> 23:10.040
是什么参数呢

23:10.040 --> 23:12.520
其实就是这个我们充值的金额

23:12.520 --> 23:14.840
至于其他的商品的描述信息啊

23:14.840 --> 23:16.560
这个可以由后台来做

23:16.560 --> 23:19.120
然后我们前端这一块展示不处理的

23:19.120 --> 23:19.840
那咋办呢

23:19.840 --> 23:23.000
我只要把这个金额给传过去就可以了

23:23.000 --> 23:23.960
那金额是谁呢

23:23.960 --> 23:26.680
其实金额就是我们这个

23:26.680 --> 23:28.640
input note的一个什么

23:28.640 --> 23:30.120
点value值对不对

23:30.120 --> 23:31.920
那我就把它传过去就可以了

23:31.920 --> 23:32.920
那此时呢

23:32.920 --> 23:33.720
我一点击

23:33.720 --> 23:34.800
当然这个前提啊

23:34.800 --> 23:37.520
我这里面还应该是有一个土肚子啊

23:37.520 --> 23:38.640
这是做什么用的

23:38.640 --> 23:39.360
其实这里面

23:39.360 --> 23:42.080
你是不是得要做一个表单的验证啊

23:42.080 --> 23:44.160
也就是说你这个如果说

23:44.160 --> 23:45.720
没有充值金额的话

23:45.720 --> 23:49.000
这话你不让他给做一个提交就ok了啊

23:49.000 --> 23:49.240
好的

23:49.240 --> 23:50.400
咱们来试一下啊

23:50.400 --> 23:52.240
我这里面就不写这个表单验证啊

23:52.240 --> 23:54.400
比如说我这里面选择两千

23:54.400 --> 23:55.560
发信一下啊

23:55.560 --> 23:56.360
选择三千

23:56.360 --> 23:57.600
我一点击立即充值

23:57.600 --> 23:58.000
ok

23:58.000 --> 23:59.240
跳出来了

23:59.240 --> 23:59.960
跳来之后

23:59.960 --> 24:02.120
local host的ally pay 3000

24:02.160 --> 24:03.120
然后呢

24:03.120 --> 24:04.040
他这个地址啊

24:04.040 --> 24:05.000
是ally pay

24:05.000 --> 24:05.880
我们这个里面啊

24:05.880 --> 24:08.160
应该写一个什么写一个反写杠

24:08.160 --> 24:08.920
稍微啊

24:08.920 --> 24:09.160
好的

24:09.160 --> 24:12.740
那咱们再来试一下啊

24:12.740 --> 24:13.260
ok

24:13.260 --> 24:14.260
重新刷新一下

24:14.260 --> 24:15.700
跳转地址

24:15.700 --> 24:16.100
ok

24:16.100 --> 24:16.660
ally pay

24:16.660 --> 24:17.860
下面的三千

24:17.860 --> 24:18.820
也就是说现在呢

24:18.820 --> 24:21.300
我选择了这个三千年前

24:21.300 --> 24:23.300
比如说选择五千跳转过来

24:23.300 --> 24:24.340
跳转过来之后

24:24.340 --> 24:25.060
这是第一步

24:25.060 --> 24:26.820
我们前台做的处理

24:26.820 --> 24:27.340
前台呢

24:27.340 --> 24:28.860
其实实现的啊

24:28.860 --> 24:31.940
也是非常简单的前段这一块

24:31.940 --> 24:34.140
我们只是把金额给获取一下

24:34.140 --> 24:35.020
获取一下之后呢

24:35.020 --> 24:35.660
剩下呢

24:35.660 --> 24:37.940
就是由我们自己的后段来实现啊

24:37.940 --> 24:38.940
后段怎么来实现呢

24:38.940 --> 24:41.060
首先我们在这个里面

24:41.060 --> 24:43.020
假如我们不知道他这个sdk

24:43.020 --> 24:44.580
怎么编写的前提上

24:44.580 --> 24:46.500
我们第一件事要做的是什么事呢

24:46.500 --> 24:49.740
我们其实是要给他定一个什么呢

24:49.740 --> 24:52.260
定一个我们在这个接口篮截啊

24:52.260 --> 24:56.020
比如说我们定一前端的一个

24:56.020 --> 24:58.020
充值金额

24:59.020 --> 25:02.020
金额的一个篮截

25:02.020 --> 25:02.820
好

25:02.820 --> 25:03.820
那我在这里面

25:03.820 --> 25:05.820
router.get

25:05.820 --> 25:08.420
刚才写的是阿里佩

25:08.420 --> 25:10.420
然后呢直接的这个阿里佩

25:10.420 --> 25:12.420
后面他是有一个什么

25:12.420 --> 25:14.020
有一个参数的

25:14.020 --> 25:16.820
所以说我们要把这个参数给写上

25:16.820 --> 25:18.020
那比如说这个参数叫

25:18.020 --> 25:20.420
pay money啊

25:20.420 --> 25:22.220
好的写完成之后呢

25:22.220 --> 25:24.420
把后面的给做一下补充

25:24.420 --> 25:25.420
也就是说

25:25.620 --> 25:27.620
cptx

25:27.620 --> 25:28.820
之后我在这个里面

25:28.820 --> 25:31.020
就可以做一些相关的处理了

25:31.020 --> 25:32.620
那这里面要做什么处理

25:32.620 --> 25:34.220
这个里面我们就是说

25:34.220 --> 25:35.620
使用咱们这个

25:35.620 --> 25:38.220
node.js

25:38.220 --> 25:42.220
阿里佩的一个什么支付sdk

25:42.220 --> 25:46.220
那咱们要来进行一个查看啊

25:46.220 --> 25:47.420
在哪个里面查看

25:47.420 --> 25:48.220
我们首先啊

25:48.220 --> 25:49.120
刚才跟大家说了

25:49.120 --> 25:49.820
我们这里面

25:49.820 --> 25:52.420
语确里面其实是可以查看的啊

25:52.420 --> 25:53.220
怎么来写

25:53.220 --> 25:55.920
怎么从上面第一个来看啊

25:55.920 --> 25:56.520
首先呢

25:56.520 --> 25:58.520
我们如果说要实现这个功能呢

25:58.520 --> 25:59.420
我们第一步啊

25:59.420 --> 26:01.520
要安装一个叫阿里佩

26:01.520 --> 26:04.220
sdk的这样一个三方插件

26:04.220 --> 26:05.920
那也就是说在这个里面

26:05.920 --> 26:07.720
要做一个安装

26:07.720 --> 26:08.920
air add

26:10.220 --> 26:11.620
阿里佩 sdk

26:11.620 --> 26:13.320
注意这里面没有分号

26:13.320 --> 26:13.820
好的

26:13.820 --> 26:14.920
那安装完成

26:14.920 --> 26:16.320
我们接下来看啊

26:16.320 --> 26:16.820
首先呢

26:16.820 --> 26:18.320
怎么来操作这个事

26:18.320 --> 26:18.820
第一步

26:18.820 --> 26:21.220
我们要把的这个阿里佩 sdk

26:21.220 --> 26:22.820
进行一个引用

26:22.820 --> 26:24.820
也就是说我们要把它给

26:24.820 --> 26:26.820
const给他引用过来啊

26:26.820 --> 26:27.620
引用过来之后

26:27.620 --> 26:29.220
但是这个是ES6余法

26:29.220 --> 26:31.520
所以说我们这里面给他调整一下

26:31.520 --> 26:32.220
const

26:32.220 --> 26:35.820
阿里佩 sdk等于一个require

26:35.820 --> 26:38.420
require就是我们引入的这个插件

26:38.420 --> 26:39.820
阿里佩 sdk

26:39.820 --> 26:41.620
好了第一步引入之后呢

26:41.620 --> 26:42.220
接下来呢

26:42.220 --> 26:45.520
我们要给他做一个实力化的一个配置啊

26:45.520 --> 26:47.820
也就是说我们把这一段要做一下

26:47.820 --> 26:48.720
那这在哪做呢

26:48.720 --> 26:50.320
其实我们这个里面

26:50.320 --> 26:51.220
是不是定好了

26:51.220 --> 26:54.220
实用诺的JS的这个阿里佩 sdk

26:54.220 --> 26:57.420
呃 app id在哪个里面寻找

26:57.420 --> 26:58.520
因为我们刚才啊

26:58.520 --> 27:00.220
在开发者中心这一块

27:00.220 --> 27:00.660
也就是说

27:00.660 --> 27:02.320
沙疆环境这个应用这块

27:02.320 --> 27:04.120
我们有这个app id

27:04.120 --> 27:04.620
所以说呢

27:04.620 --> 27:06.120
我们把这个app id啊

27:06.120 --> 27:07.820
换成自己的就ok了啊

27:09.020 --> 27:10.520
落在这里面调整一下

27:10.520 --> 27:11.520
调整一下之后

27:11.520 --> 27:14.520
这里面有一个parade key啊

27:14.520 --> 27:16.320
这个parade key指的是啥呢

27:16.320 --> 27:20.320
就是我们我们定一好的这个私要

27:20.420 --> 27:20.820
然后呢

27:20.820 --> 27:22.020
这个私要在哪

27:22.020 --> 27:24.120
其实刚才我们在创建的时候

27:24.120 --> 27:25.820
在这里面给大家看一下

27:25.820 --> 27:27.520
我们这里面是有一个私要的

27:27.520 --> 27:29.320
所以说我们只要把它给复制过来

27:29.320 --> 27:30.120
就可以了

27:30.120 --> 27:33.820
当然你也可以以文件的形式进行引入啊

27:33.820 --> 27:34.220
然后呢

27:34.220 --> 27:35.320
我这里面订一下

27:35.320 --> 27:36.420
比如说咖啡里面

27:36.420 --> 27:39.020
我创建一个index.js文件

27:39.020 --> 27:40.220
我把它的这个私要

27:40.220 --> 27:42.820
以及公要都给他引出

27:42.820 --> 27:45.220
也就是说也就给他做一个导出啊

27:45.220 --> 27:45.920
因为一会呢

27:45.920 --> 27:47.420
我们这个公要也会用到

27:47.420 --> 27:47.920
所以说呢

27:47.920 --> 27:51.820
我这里面就是parade key

27:51.820 --> 27:52.520
然后呢

27:52.520 --> 27:54.820
我们这里面订议订议的值

27:54.820 --> 27:58.720
就是我们刚才这里面生成的这个私要啊

27:58.720 --> 27:59.020
好的

27:59.020 --> 27:59.820
那我复制一下

27:59.820 --> 28:03.220
复制一个私要ok在这个里面

28:03.220 --> 28:04.220
订好之后呢

28:04.220 --> 28:04.820
由于啊

28:04.820 --> 28:06.920
我们一会还会使用到这个公要

28:06.920 --> 28:07.720
所以说呢

28:07.720 --> 28:08.920
我把这个公要地址啊

28:08.920 --> 28:10.920
也给他往外导出一下

28:10.920 --> 28:14.720
比如说这个叫sdk alipay啊

28:14.720 --> 28:15.720
这个叫public

28:18.220 --> 28:20.520
public key好的

28:20.520 --> 28:21.120
这个呢

28:21.120 --> 28:22.920
我们在这里面也能获取到

28:22.920 --> 28:23.420
所以说呢

28:23.420 --> 28:26.120
我们直接给他也是进行一个复制

28:26.120 --> 28:27.220
当然你这个啊

28:27.220 --> 28:28.920
一定要保证啊

28:28.920 --> 28:32.020
是跟你的我们这个应用这一块啊

28:32.020 --> 28:33.020
是完全相同的

28:33.020 --> 28:33.820
也就是说

28:33.820 --> 28:36.020
你这两个是必须满足条件啊

28:36.020 --> 28:37.420
都相同的啊

28:37.420 --> 28:37.620
好了

28:37.620 --> 28:39.120
那我们第一步

28:39.120 --> 28:40.420
给他做一个导出

28:40.420 --> 28:41.120
那第二步呢

28:41.120 --> 28:43.320
就是一个使用了啊

28:43.320 --> 28:44.120
使用怎么办呢

28:44.120 --> 28:45.120
其实我在这里面

28:46.120 --> 28:47.420
app.js里面

28:47.420 --> 28:50.020
我们给他做一个引入就可以了

28:50.020 --> 28:52.420
怎么引入我们直接的concept

28:52.420 --> 28:54.420
他比如说config

28:56.120 --> 28:58.220
config等于一个require

28:58.220 --> 28:59.620
我们直接的这里面

28:59.620 --> 29:02.420
就是点缸config

29:02.420 --> 29:03.220
ok

29:03.220 --> 29:04.820
那整个引入之后

29:04.820 --> 29:08.220
那我这时候把这个排位的k就变成

29:08.220 --> 29:10.220
config点一个什么了

29:10.220 --> 29:12.120
啊排位k啊

29:12.120 --> 29:14.320
也就是说把这个私要给他放进去

29:15.220 --> 29:16.620
那大家再看一下

29:16.620 --> 29:17.920
就是说你放进去之后

29:17.920 --> 29:19.620
我们这个sdk里面啊

29:19.620 --> 29:21.320
在这个语确里面的sdk

29:21.320 --> 29:22.220
他有一些啊

29:22.220 --> 29:23.020
必选择数

29:23.020 --> 29:26.020
也就是说app id和这个排位的k啊

29:26.020 --> 29:28.020
可选择数指的是什么呢

29:28.020 --> 29:28.720
嗯

29:28.720 --> 29:32.320
比如说这个alipay public public k

29:32.320 --> 29:33.320
他这做什么用的

29:33.320 --> 29:34.020
他这个呢

29:34.020 --> 29:36.020
就是支付宝的一个公要

29:36.020 --> 29:38.120
需要对结果验签的时候

29:38.120 --> 29:39.020
必须填呢

29:39.020 --> 29:39.420
所以说呢

29:39.420 --> 29:40.220
我们把他呢

29:41.220 --> 29:42.820
也给做一个添加

29:42.920 --> 29:43.720
因为我们

29:44.620 --> 29:46.120
要验证一会呢

29:46.120 --> 29:48.020
要验证他的一个

29:48.820 --> 29:50.420
支付的一个结果啊

29:50.420 --> 29:52.420
那把他也给他进行一个添加

29:52.420 --> 29:53.320
添加完成之后呢

29:53.320 --> 29:54.620
我们再依次来看

29:55.720 --> 29:57.320
这里面有一个single type

29:57.320 --> 29:58.220
那single type呢

29:58.220 --> 29:58.720
其实啊

29:58.720 --> 30:00.220
他是不推荐修改的

30:00.220 --> 30:01.720
而且这个签名算法

30:01.720 --> 30:03.620
在我们刚才做处理的时候

30:03.620 --> 30:05.520
也就是说我们在做定义的时候

30:05.520 --> 30:07.920
其实我们也是没有调整他的啊

30:07.920 --> 30:09.020
在这个沙箱里面

30:09.020 --> 30:10.320
可以给大家看一下

30:10.320 --> 30:13.320
我们这个single type签名算法的时候

30:13.320 --> 30:16.020
也是用rsar的这种形式

30:16.020 --> 30:18.220
来进行签名算法生成的

30:18.220 --> 30:18.520
对不对

30:18.520 --> 30:19.120
所以说这个呢

30:19.120 --> 30:20.320
我们可以不偏啊

30:20.320 --> 30:21.320
这个无所谓的事

30:22.320 --> 30:23.720
然后咱们也没有修改吗

30:23.720 --> 30:24.720
对吧

30:24.720 --> 30:25.620
那其他的呢

30:25.620 --> 30:26.720
比如说我们这里面

30:26.720 --> 30:27.720
还有一个什么呢

30:27.720 --> 30:29.020
还有一个get way

30:29.020 --> 30:31.020
这个是支付宝的网关

30:31.020 --> 30:33.820
沙箱环境下使用时代需要修改

30:33.820 --> 30:35.320
那我们把他啊

30:35.320 --> 30:36.720
来给添写一下

30:36.720 --> 30:38.220
那这个在哪获取啊

30:38.220 --> 30:40.020
也就是说我们的沙箱环境

30:40.020 --> 30:41.420
从哪来获取这个网关

30:41.420 --> 30:43.020
其实刚才咱们都看到了

30:43.020 --> 30:44.920
这里面有一个支付宝网关

30:44.920 --> 30:45.720
所以说呢

30:45.720 --> 30:48.420
我们就使用这个沙箱版的支付宝网关

30:48.420 --> 30:49.020
就可以了

30:50.220 --> 30:50.520
好的

30:50.520 --> 30:52.620
那这些都处理完成之后呢

30:52.620 --> 30:56.120
我们基本上这一些基础的值就ok了

30:56.120 --> 30:58.720
也就是说我们通过这些描述信息

30:58.720 --> 31:02.420
实力化出来一个阿里佩的一个sdk啊

31:02.420 --> 31:03.220
对象

31:03.220 --> 31:05.820
那这sdk对象干什么呢

31:05.820 --> 31:09.720
我们可以通过他来进行exec的方法

31:09.720 --> 31:10.520
的一个调用

31:10.520 --> 31:12.120
那一个再方法是做什么用的呢

31:12.120 --> 31:14.420
其实他就是给我们返回一个

31:14.420 --> 31:17.920
支付请求地址的这么一个处理操作啊

31:17.920 --> 31:18.820
那他的获取呢

31:18.820 --> 31:20.320
其实是一个异不操作的

31:20.320 --> 31:21.420
所以说我们怎么做呢

31:21.420 --> 31:23.820
我们在这个里面可以定一下啊

31:23.820 --> 31:27.920
在这里Const result等于

31:27.920 --> 31:30.720
我们直接的定义好的这个阿里佩sdk

31:30.720 --> 31:33.520
点exec方法啊

31:33.520 --> 31:34.320
然后呢

31:34.320 --> 31:35.420
这个定义好的之后呢

31:35.420 --> 31:36.520
里面有什么内容呢

31:36.520 --> 31:38.620
咱们可以看一下在这个里面

31:38.920 --> 31:39.620
这个啊

31:40.420 --> 31:42.420
一个埃克方法里面

31:42.420 --> 31:44.220
我们这里面有三个参数

31:44.220 --> 31:46.020
首先第一个是买色的

31:46.020 --> 31:47.020
第二个是pamrys

31:47.020 --> 31:47.620
office

31:48.220 --> 31:49.820
pamrys指的是什么呢

31:49.820 --> 31:51.220
我们这个先说买色的

31:51.220 --> 31:52.220
买色的指的是

31:52.220 --> 31:54.520
我们定义好的这个sdk啊

31:54.520 --> 31:56.120
本次是需要做什么

31:56.120 --> 31:57.820
其实我们这次需要做的

31:57.820 --> 31:59.220
就是网页支付

31:59.220 --> 32:01.420
那我们直接的把这个定义好

32:01.420 --> 32:03.920
做一个网页支付的描述信息的

32:03.920 --> 32:06.020
这么一个天气就ok了

32:06.020 --> 32:06.620
第二个呢

32:06.620 --> 32:07.820
是他的一个参数

32:07.920 --> 32:08.920
参数我们可以啊

32:08.920 --> 32:11.220
进行一个相关的忽略处理啊

32:11.220 --> 32:11.820
选项呢

32:11.820 --> 32:14.020
就是我们本次要请求的

32:14.020 --> 32:15.120
一些描述信息

32:15.120 --> 32:17.420
比如说我们在这个里面金额

32:17.420 --> 32:18.220
然后呢

32:18.220 --> 32:21.020
也就是说我们的一些支付的内容信息

32:21.020 --> 32:22.220
比如说我们商品啊

32:22.220 --> 32:23.420
商品名称啊

32:23.420 --> 32:25.020
都在这个里面来定义

32:25.020 --> 32:28.620
然后由这个office选项来做一个处理

32:28.620 --> 32:29.220
他里面呢

32:29.220 --> 32:31.720
接一个formdata的一个指

32:31.720 --> 32:32.620
那这个formdata呢

32:32.620 --> 32:35.420
就是我们本次要传递的一个信息啊

32:35.420 --> 32:36.320
那看啊这里面

32:37.320 --> 32:38.920
my source my source呢

32:38.920 --> 32:39.920
调用的api

32:39.920 --> 32:43.020
比如说allipay.system.also token

32:43.020 --> 32:43.520
然后呢

32:43.520 --> 32:46.620
获取一个授权的一个token值

32:46.620 --> 32:48.620
也就是说授权码啊

32:48.620 --> 32:49.420
他这个是获取

32:49.420 --> 32:51.120
那我们这次是做什么呢

32:51.120 --> 32:51.620
我们这个啊

32:51.620 --> 32:52.620
不是获取授权码

32:52.620 --> 32:56.220
我们这个直接是去进行一个页面支付

32:56.220 --> 32:58.920
所以说跟他这个写法有一些区别

32:58.920 --> 32:59.520
怎么写呢

32:59.520 --> 33:01.620
其实我在这里给大家写好了啊

33:01.620 --> 33:02.620
我们打开

33:02.620 --> 33:03.220
本次呢

33:03.220 --> 33:06.420
我们是去allipay.tread.pgp

33:06.420 --> 33:08.420
也就是说统一收单下单

33:08.420 --> 33:09.920
并支付页面接口

33:09.920 --> 33:11.120
我们是使用这个

33:11.120 --> 33:11.620
所以说呢

33:11.620 --> 33:13.320
我在这个里面定义的时候

33:13.320 --> 33:14.520
第一个参数

33:14.520 --> 33:15.820
一个x参数

33:17.420 --> 33:18.020
sorry啊

33:18.020 --> 33:19.320
这个里面调整一下

33:19.320 --> 33:20.920
一个x参数

33:20.920 --> 33:21.920
我们在这个里面

33:21.920 --> 33:24.220
第一个描述信息就是什么呢

33:24.220 --> 33:26.720
就是我们的allipay.tread.pgp

33:26.720 --> 33:27.220
然后呢

33:27.220 --> 33:28.120
第二个参数

33:28.120 --> 33:30.020
我们说了这个parmerise

33:30.020 --> 33:32.020
parmerise在他的文档里面

33:32.020 --> 33:33.420
是一个可选参数

33:33.420 --> 33:35.220
咱们可以看一下这里面写的

33:35.220 --> 33:36.620
是一个可选啊

33:36.620 --> 33:37.020
然后呢

33:37.020 --> 33:39.620
他包含了我们的这个公共请求参数

33:39.620 --> 33:40.920
以及业务参数

33:40.920 --> 33:42.120
当然我们在这个里面

33:42.120 --> 33:43.820
可以不做任何处理啊

33:43.820 --> 33:46.220
不过我们要做一些相关的什么处理呢

33:46.220 --> 33:49.220
因为我们本次请求的是一个支付接口的

33:49.220 --> 33:50.320
一个返回

33:50.320 --> 33:50.820
所以说呢

33:50.820 --> 33:53.620
我们这个里面要做一些商品支付的

33:53.620 --> 33:54.820
一个描述信息

33:54.820 --> 33:55.620
那在这里面呢

33:55.620 --> 33:57.920
我们会使用到这个formdata

33:57.920 --> 34:00.320
那我们这个formdata里面都有哪些内容呢

34:00.320 --> 34:00.920
在这里啊

34:01.020 --> 34:02.020
可以给大家看一下

34:02.020 --> 34:04.520
这个是页面接口类的一个调用

34:04.520 --> 34:06.220
我们直接看这个里面就行啊

34:07.320 --> 34:08.320
他分别有什么呢

34:08.320 --> 34:10.920
分别有这种PCA支付接口

34:10.920 --> 34:11.420
然后呢

34:11.420 --> 34:13.020
返回一个支付链接

34:13.020 --> 34:14.920
其实我们这个就是做一个

34:14.920 --> 34:17.320
返回支付链接的这样一个操作

34:17.320 --> 34:18.120
所以说呢

34:18.120 --> 34:20.320
我们就按这个来处理就可以了

34:20.320 --> 34:22.120
首先引炮的allipayformdata

34:22.120 --> 34:23.920
fromallipay SDK

34:23.920 --> 34:27.120
把这个插件给做一下引入

34:27.120 --> 34:29.520
当然这个你不需要再重新下载了

34:29.520 --> 34:30.020
为什么呢

34:30.020 --> 34:33.720
因为我们在这个allipay SDK里面

34:33.720 --> 34:36.420
它是内置了这么一个表单组件的

34:36.420 --> 34:36.920
所以说呢

34:36.920 --> 34:39.220
我们直接的来经使用就可以了

34:39.220 --> 34:39.520
但是呢

34:39.520 --> 34:41.220
给他做一下引入啊

34:41.220 --> 34:43.820
等于requireallipay SDK

34:43.820 --> 34:45.220
他下面的lib

34:45.220 --> 34:46.820
下面的form表单组件

34:48.020 --> 34:49.220
ok拿过来之后呢

34:49.220 --> 34:49.920
这是第一步

34:49.920 --> 34:50.520
第二步呢

34:50.520 --> 34:54.520
我们要实力化一下这个allipayformdata

34:54.520 --> 34:58.320
如果说你去请求一个支付接口的一个获取啊

34:58.320 --> 35:00.920
那你这个里面就是要使用到它

35:00.920 --> 35:03.120
当然指的是pc支付接口啊

35:03.120 --> 35:03.920
这个文档里面

35:03.920 --> 35:05.420
咱们可以自己看一下啊

35:05.420 --> 35:07.820
里面有好多种这个支付接口请求啊

35:07.820 --> 35:08.820
那在哪个里面做

35:08.820 --> 35:10.620
我们直接的实力化出来

35:10.620 --> 35:13.320
这个sdk之后在这底下

35:13.320 --> 35:14.720
创建一个什么

35:14.720 --> 35:15.820
这里面给大家写一下

35:15.820 --> 35:22.220
这个叫创建本次请求的一个商品信息啊

35:23.620 --> 35:25.320
商品信息

35:25.320 --> 35:27.620
那这次支付请求里面的商品信息呢

35:27.620 --> 35:30.220
我们都在这个里面进行一个描述

35:30.220 --> 35:31.220
首先第一个

35:31.220 --> 35:32.920
form.sidemeister的

35:32.920 --> 35:33.920
他这里面说了

35:33.920 --> 35:36.020
就是说我们调用sidemeister的

35:36.020 --> 35:37.020
并传入guide

35:37.020 --> 35:40.820
会返回可以跳转到支付页面的一个Url

35:40.820 --> 35:43.520
也就是说通过它给我们返回一个

35:43.520 --> 35:46.820
我们正常能看到的这种支付的一个地址啊

35:46.820 --> 35:47.720
这是第一个

35:47.720 --> 35:48.320
第二个呢

35:48.320 --> 35:54.220
就是我们要做的这个商品信息的一个相关描述啊

35:54.220 --> 35:54.520
好的

35:54.520 --> 35:56.720
那我们把它给来做一下处理

35:56.720 --> 35:57.720
然后这个里面呢

35:57.720 --> 35:59.820
有一个notify url啊

35:59.820 --> 36:01.920
当然我们这个里面还可以写什么呢

36:01.920 --> 36:03.020
return url

36:03.020 --> 36:04.320
也就是说返回地址啊

36:05.620 --> 36:06.720
notify url

36:06.720 --> 36:09.320
因为他这个沙箱里面有时候是不返回的

36:09.320 --> 36:10.020
所以说这个呢

36:10.020 --> 36:11.320
我们注意一下就可以了

36:11.320 --> 36:14.020
然后之后这个返回地址是什么

36:14.020 --> 36:15.920
这个也就是说callback贴什么

36:15.920 --> 36:17.720
那我们其实在这个里面啊

36:17.720 --> 36:19.020
在这个处理的时候

36:19.020 --> 36:21.520
我们已经定义好了自己的这个callback

36:21.520 --> 36:23.720
也就是说你返回这个就ok了对不对

36:23.720 --> 36:26.020
所以说我们把它给来做一下调整

36:27.320 --> 36:28.320
调整完成之后

36:28.320 --> 36:30.620
from.addfile的base content

36:30.620 --> 36:33.120
然后这里面分别是什么内容呢

36:33.120 --> 36:33.920
其实这里面

36:33.920 --> 36:39.220
第一个就是我们的一个商品的一个编号

36:39.220 --> 36:40.620
那这个商品的编号

36:40.620 --> 36:41.520
我们怎么来写的

36:41.520 --> 36:42.720
其实你知道啊

36:42.720 --> 36:44.820
就是说每次支付的这个编号

36:44.820 --> 36:46.020
商品支付编号呢

36:46.020 --> 36:46.820
会有好多

36:46.820 --> 36:49.220
然后比如说我支付一次的这个商品编号

36:49.220 --> 36:50.920
就得换一次做一次更改

36:50.920 --> 36:51.220
对不对

36:51.220 --> 36:51.620
所以说呢

36:51.620 --> 36:52.520
我们咋办

36:52.520 --> 36:55.320
我们可以用这种时间戳的形式啊

36:55.320 --> 36:57.920
比如说我们使用这种delta

36:57.920 --> 36:59.620
然后呢点nau

37:02.260 --> 37:04.260
通过delta.nau之后呢

37:04.260 --> 37:06.060
调用他的toss drill

37:06.060 --> 37:08.460
反正你保证他不重复就ok了啊

37:08.460 --> 37:09.460
这是第一个

37:09.460 --> 37:10.660
第一个给大家写一下

37:10.660 --> 37:14.760
这个是我们的这个支付商品编号

37:16.460 --> 37:18.760
商品编号好了

37:18.760 --> 37:19.360
第一个

37:19.360 --> 37:20.360
第二个呢

37:20.360 --> 37:21.860
就是production code

37:21.860 --> 37:23.460
这个production code啊

37:23.460 --> 37:24.460
这个呢

37:24.460 --> 37:26.360
我咱们不需要改啊

37:26.360 --> 37:28.960
这个是咱们这个沙祥给咱们定一好的

37:28.960 --> 37:29.760
这个叫什么

37:29.760 --> 37:32.460
这个叫销售的产品码啊

37:32.460 --> 37:34.660
销售产品码好的

37:37.790 --> 37:38.790
产品码

37:40.990 --> 37:41.990
好定一好之后呢

37:41.990 --> 37:43.490
这里边有一个total amount

37:43.490 --> 37:45.090
total amount指的是什么呢

37:45.090 --> 37:48.190
就是我们本次需要支付的一个金额

37:48.190 --> 37:50.790
其实我们已经拿到这个配money了

37:50.790 --> 37:51.090
对不对

37:51.090 --> 37:53.590
所以说我们把这个配money啊

37:53.590 --> 37:55.290
给他传递过去就可以了

37:55.290 --> 37:56.190
当然传递的时候

37:56.190 --> 37:57.090
我们看到了

37:57.090 --> 37:58.490
这是一个自付创的形式

37:58.490 --> 37:58.990
所以说呢

37:58.990 --> 37:59.790
我们怎么办

37:59.790 --> 38:01.990
首先把我们接受过来的这个Values

38:01.990 --> 38:02.090
之后

38:02.090 --> 38:04.090
我们给他进行一个更改

38:04.090 --> 38:06.090
也就是说CTX

38:06.090 --> 38:07.990
那我们首先得获取到他对不对

38:07.990 --> 38:10.590
那我们CTX点parmerise

38:12.490 --> 38:14.790
parmerise点一个什么配money

38:14.790 --> 38:15.390
然后呢

38:15.390 --> 38:17.690
我们直接的获取到他之后

38:17.690 --> 38:20.490
由于是要获取一个自付创

38:20.490 --> 38:20.990
然后呢

38:20.990 --> 38:22.990
他后面有两位小数

38:22.990 --> 38:25.390
那我直接使用to face的方法

38:25.490 --> 38:27.090
to face cus的2

38:27.090 --> 38:28.690
然后这里面subject

38:28.690 --> 38:30.790
以及body商品详情

38:30.790 --> 38:31.090
然后呢

38:31.090 --> 38:32.090
我这里面给大家写

38:32.090 --> 38:33.490
把商品详情测试

38:35.290 --> 38:35.690
ok

38:36.890 --> 38:37.590
行之后啊

38:37.590 --> 38:39.390
几乎我们这个就定义好了

38:39.390 --> 38:40.590
定义好了之后

38:40.590 --> 38:42.890
我们直接把这个format data

38:42.890 --> 38:44.690
给他做一个传递就可以了

38:44.690 --> 38:45.490
也就是说

38:45.490 --> 38:47.590
我们在这个options选项里面

38:47.590 --> 38:49.490
定义好一个format date

38:49.490 --> 38:50.390
好了

38:50.390 --> 38:52.890
全部都定义好之后

38:53.390 --> 38:54.590
exec的par

38:54.590 --> 38:56.390
其实是返回一个什么呢

38:56.390 --> 38:59.790
返回一个我们支付的一个接口地址

38:59.790 --> 39:02.290
那我们直接使用这种avait的形式

39:02.290 --> 39:03.590
来做一下处理

39:03.590 --> 39:04.990
它是一个义不操作

39:04.990 --> 39:05.490
之后呢

39:05.490 --> 39:07.290
我们打印一下这个result

39:07.290 --> 39:09.490
先看一下这个结果值

39:09.490 --> 39:09.890
好吧

39:10.890 --> 39:11.090
好的

39:11.090 --> 39:12.590
那我们测试一下

39:12.590 --> 39:13.790
比如说我们在这个里面

39:13.790 --> 39:15.490
输入一个5000元

39:15.490 --> 39:16.790
点击立即充值

39:16.790 --> 39:17.390
这里面呢

39:17.390 --> 39:18.790
给我们提示not a fund

39:18.790 --> 39:20.390
但是没报服气错过

39:20.390 --> 39:21.090
not a fund

39:21.090 --> 39:22.490
这个就正常了

39:22.490 --> 39:25.390
因为我们也没给他准确的一个返回值

39:25.390 --> 39:25.790
然后呢

39:25.790 --> 39:26.790
我们查看控制台

39:26.790 --> 39:27.890
这里面有一个地址

39:27.890 --> 39:29.390
我们打开这个地址

39:29.390 --> 39:30.690
来看一下是否的

39:30.690 --> 39:32.690
可以进行正确的显示

39:32.690 --> 39:33.190
OK呢

39:33.190 --> 39:35.390
这个界面里面就显示出来

39:35.390 --> 39:37.690
允许我们进行扫码支付了

39:37.690 --> 39:38.590
然后扫码支付

39:38.590 --> 39:40.490
这个里面是有一个二维码

39:40.490 --> 39:41.990
包括它里面的一个订单

39:41.990 --> 39:45.290
详情就是我们本次要描述的一些

39:45.290 --> 39:46.690
相关的商品信息

39:46.690 --> 39:48.390
比如说我们的这个订单号

39:48.390 --> 39:49.790
以及我们的这个收款方

39:49.890 --> 39:52.090
都是在这个里面进行描述的

39:53.190 --> 39:53.590
此时呢

39:53.590 --> 39:56.190
我们就可以进行一个扫码的操作了

39:56.190 --> 39:56.490
但呢

39:56.490 --> 39:58.390
其实我们拿到这个结果之后

39:58.390 --> 40:00.190
其实我们应该做一个什么呢

40:00.190 --> 40:02.590
我们是不是应该让他做一个

40:02.590 --> 40:03.990
re-direct

40:03.990 --> 40:06.490
也就是说让他有一个重定向

40:06.490 --> 40:07.390
重定向什么呢

40:07.390 --> 40:09.190
就是到我们这个结果值

40:09.190 --> 40:09.990
也就是说

40:09.990 --> 40:12.390
给我们打开这个支付宝的一个

40:12.390 --> 40:13.990
扫码的这么一个界面啊

40:13.990 --> 40:14.990
那我们来看一下

40:14.990 --> 40:16.990
首先我们打开还是这个

40:16.990 --> 40:19.690
low host这个界面啊

40:19.690 --> 40:21.290
我们3000这个主界面呢

40:21.290 --> 40:23.090
我一点击冲直之后呢

40:23.090 --> 40:25.490
我让他做一个跳转跳转到哪

40:25.490 --> 40:27.590
跳转到我们扫码支付这一块

40:27.590 --> 40:28.290
之后呢

40:28.290 --> 40:30.490
我们来进行扫码操作

40:30.490 --> 40:31.390
扫码操作之后

40:31.390 --> 40:34.390
其实现在我们是不是想获取一些

40:34.390 --> 40:35.290
结果值了

40:35.290 --> 40:35.790
对不对

40:35.790 --> 40:36.890
那其实我现在啊

40:36.890 --> 40:38.090
是获取了接口

40:38.090 --> 40:38.790
那接下来呢

40:38.790 --> 40:40.690
我们就来处理一下这个结果值

40:40.690 --> 40:42.490
也就是说拿到想结果之后

40:42.490 --> 40:43.890
我们进行一个跳转

40:43.890 --> 40:44.490
对不对

40:44.490 --> 40:45.190
那此时

40:45.190 --> 40:47.190
我们想结果在哪获取

40:47.190 --> 40:49.790
因为我们已经定义了这个3000的

40:49.790 --> 40:50.290
对不对

40:50.290 --> 40:51.090
所以说呢

40:51.090 --> 40:53.690
跟路径3000下面我们这里面啊

40:53.690 --> 40:56.890
其实还可以直接获取他的想应结果

40:56.890 --> 40:57.890
比如说我在这里面

40:57.890 --> 41:03.990
Const一个query等于一个ctx点一个query

41:03.990 --> 41:04.690
查学字不错

41:04.690 --> 41:06.590
因为他如果说成功之后啊

41:06.590 --> 41:08.470
这里面我们已经定义好了

41:08.470 --> 41:08.990
callback

41:08.990 --> 41:10.890
那他就得给我返回一个什么

41:10.890 --> 41:11.890
想应结果值

41:11.890 --> 41:13.690
然后并且以parmerize的形式啊

41:13.690 --> 41:15.690
给我进行一个传递啊

41:15.690 --> 41:16.690
那咱们来看一下

41:16.690 --> 41:17.890
是否可行啊

41:17.890 --> 41:19.790
我来支付一下这次啊

41:19.790 --> 41:20.090
好的

41:20.090 --> 41:21.290
首先把他给关掉啊

41:21.290 --> 41:22.290
再来重新来一遍

41:22.290 --> 41:23.990
比如说我支付1000吧

41:23.990 --> 41:25.090
点击立即充值

41:25.090 --> 41:26.390
挑战过来之后

41:26.390 --> 41:28.290
打开你的这个杀箱

41:28.290 --> 41:30.290
因为我们已经刚才看到了

41:30.290 --> 41:31.990
杀箱的下载地址啊

41:31.990 --> 41:33.190
我们下载之后呢

41:33.190 --> 41:33.890
首先啊

41:33.890 --> 41:36.090
你要把这个我们的这个账号

41:36.090 --> 41:37.590
以及跟这个密码啊

41:37.590 --> 41:38.190
你要记住了

41:38.190 --> 41:39.890
因为这个杀箱工具啊

41:39.890 --> 41:40.790
就在这了

41:40.790 --> 41:41.490
sorry啊

41:41.490 --> 41:43.190
我先把支付宝先登录一下

41:43.190 --> 41:43.790
然后呢

41:43.790 --> 41:45.690
这个里面支付宝扫码

41:45.690 --> 41:47.490
这个扫码你用正常的

41:47.490 --> 41:49.090
这个支付宝进行扫码啊

41:49.090 --> 41:50.190
因为这个是获取

41:50.190 --> 41:52.190
你真实的这个支付宝账户的啊

41:52.190 --> 41:53.290
扫码完成之后

41:53.290 --> 41:54.590
这里面确认登录

41:54.590 --> 41:55.590
确认登录之后

41:55.590 --> 41:56.690
咱们来看一下这个

41:56.690 --> 41:59.790
是杀箱的相关内容信息啊

41:59.790 --> 42:01.490
我们这个杀箱工具里面

42:01.490 --> 42:01.890
sorry啊

42:01.890 --> 42:03.490
是这个杀箱账号啊

42:03.490 --> 42:04.190
账号里面呢

42:04.190 --> 42:05.490
就有我们这个

42:05.490 --> 42:08.390
整个杀箱的这个相关的信息

42:08.390 --> 42:10.490
你比如说你下载完这个

42:10.490 --> 42:11.590
杀箱应用之后

42:11.590 --> 42:13.490
也就是说哪一个是这个

42:13.490 --> 42:14.590
你扫码下载

42:14.590 --> 42:15.490
下载完成之后呢

42:15.490 --> 42:18.890
你这个账号就使用这一块的这个账号

42:18.890 --> 42:20.890
比如说买家账号

42:20.890 --> 42:23.090
然后登录的密码和支付的密码

42:23.090 --> 42:24.190
都在这个里面呢

42:24.190 --> 42:26.290
你直接进行一下登录就ok了啊

42:26.290 --> 42:27.690
那咱们来重新试一下

42:27.690 --> 42:29.990
比如说我现在重新做一个登录

42:29.990 --> 42:31.690
刷新一下两天元

42:31.690 --> 42:33.790
ok点开点开之后呢

42:33.790 --> 42:36.490
此时你就用下载好的这个杀箱

42:36.490 --> 42:38.390
做一下这个扫码

42:39.690 --> 42:40.490
扫码之后

42:40.490 --> 42:41.490
那我这个里面呢

42:41.490 --> 42:43.290
进行这个确定啊

42:43.290 --> 42:45.390
也就是付款的一个操作

42:45.390 --> 42:47.590
并且呢输入你的这个支付密码

42:47.590 --> 42:48.790
当你输入完成之后

42:49.990 --> 42:50.590
此时呢

42:50.590 --> 42:53.690
你这个里面就会有一个变化啊

42:53.690 --> 42:54.890
当然这次没有变化

42:54.890 --> 42:57.290
他有的时候是不会做跳转的

42:57.290 --> 42:58.990
咱们这样刷新一下啊

42:58.990 --> 43:00.290
ok 502网关了

43:00.290 --> 43:02.390
有的时候这个不是特别好用啊

43:02.390 --> 43:04.990
杀箱这个毕竟他是做测试使用的

43:04.990 --> 43:06.190
咱们再来试一下

43:06.190 --> 43:06.590
比如说呢

43:06.590 --> 43:07.790
我这里面3000啊

43:07.790 --> 43:09.890
他还提示一个网关错误了

43:09.890 --> 43:12.590
如果说遇到这种情况怎么办啊

43:12.590 --> 43:13.790
同学问我跟大家讲

43:13.790 --> 43:16.290
你可以把这个所有的这个界面关掉了

43:16.290 --> 43:17.990
并且清除一下缓存啊

43:17.990 --> 43:18.790
就ok了

43:18.790 --> 43:20.490
那我这样啊再试一遍啊

43:20.490 --> 43:21.390
看可不可以啊

43:22.690 --> 43:24.090
我们在做操作的时候

43:24.090 --> 43:25.590
可能也会遇到这种问题啊

43:25.590 --> 43:26.690
这个是不要担心的

43:26.690 --> 43:27.790
只要你保证

43:27.790 --> 43:29.590
带马上写正确了就ok啊

43:30.990 --> 43:31.390
好的

43:31.390 --> 43:32.290
我这时候呢

43:32.290 --> 43:33.690
已经成功了

43:33.690 --> 43:35.290
但是他还是没有跳转这样

43:35.290 --> 43:37.690
我关闭一下来做一个测试

43:37.690 --> 43:40.890
也就是说我把这个缓存清除一下

43:40.890 --> 43:43.290
nitwork i5刷新一下啊

43:43.390 --> 43:44.790
刷新一下之后呢

43:44.790 --> 43:47.190
clearbrower catch

43:47.190 --> 43:47.590
然后呢

43:47.590 --> 43:49.490
clearbrower cookies

43:49.490 --> 43:51.690
把所有界面都关掉

43:51.690 --> 43:53.190
然后做这个

43:53.190 --> 43:55.590
重新打开的这么一个操作啊

43:55.590 --> 43:57.690
打开一个我们的这个浏览器

43:57.690 --> 43:58.090
之后呢

43:58.090 --> 44:00.090
我们localhost的3000回车

44:01.090 --> 44:04.190
我们重新进行一下金额的输入

44:04.190 --> 44:06.090
比如说这里面输入1000

44:06.090 --> 44:06.790
1000之后呢

44:06.790 --> 44:09.090
我这里面进行这个小码操作啊

44:10.590 --> 44:10.990
好的

44:10.990 --> 44:12.990
我这里面点击立即付款

44:12.990 --> 44:15.690
ok 这时候看到他底下已经显示

44:15.690 --> 44:16.690
扫码成功了啊

44:17.490 --> 44:17.890
ok

44:17.890 --> 44:20.790
那我做这个付款操作成功之后

44:20.790 --> 44:22.390
这里面其实哎

44:22.390 --> 44:25.790
看这里面现在已经开始进行跳转了啊

44:25.790 --> 44:27.190
那跳转过去之后呢

44:27.190 --> 44:30.290
其实他应该返回我们的这个callback地址啊

44:30.290 --> 44:31.990
但是这个时候哎

44:31.990 --> 44:32.690
已经回来了

44:32.690 --> 44:35.890
回来之后又带上我们的这个相关信息了

44:35.890 --> 44:38.090
其实同学们如果说在做测试的时候

44:38.090 --> 44:39.690
有遇到这种问题啊

44:39.690 --> 44:42.590
也也可以进行一下调试啊

44:43.290 --> 44:46.190
重新的把这个浏览器接面给关闭了

44:46.190 --> 44:47.490
关闭再重新打开啊

44:47.490 --> 44:51.090
因为他这个沙箱本来就有时候不是特别的好用

44:51.090 --> 44:53.090
但是呢正常的这个流程

44:53.090 --> 44:55.790
业务流程整个的他是能跑通的

44:55.790 --> 44:58.990
然后呢我们可以通过就是这几个api的地址

44:58.990 --> 45:00.990
比如说我们这个呃

45:00.990 --> 45:02.990
我们支付的这个获取这一块

45:02.990 --> 45:04.390
我们可以打开这个链接啊

45:04.390 --> 45:05.890
重新现在打开了

45:05.890 --> 45:07.090
打开这个链接之后呢

45:07.090 --> 45:09.790
我们把每一种啊都可以进行一下尝试

45:09.790 --> 45:11.590
其实本质上跟大家讲啊

45:11.590 --> 45:13.190
他也是离不开我们这种

45:13.190 --> 45:14.590
o2的形式

45:14.590 --> 45:15.090
只不过呢

45:15.090 --> 45:18.890
他呢是一种使用这种对称加密的形式啊

45:18.890 --> 45:23.490
来实现的这种o2的这种授权模式的啊

45:23.490 --> 45:23.790
好的

45:23.790 --> 45:24.490
那这个呢

45:24.490 --> 45:28.290
就是我们支付宝的一个支付案例的

45:28.290 --> 45:29.790
这样一个讲解

45:29.790 --> 45:31.390
那我们o2的课程啊

45:31.390 --> 45:33.490
基本上就到这里

45:33.490 --> 45:34.990
已经告一段落了

45:34.990 --> 45:36.090
所以说同学们啊

45:36.090 --> 45:39.990
在接下来的三方应用里面使用授权的过程当中

45:39.990 --> 45:42.990
如果说遇到o2的这种形式啊

45:42.990 --> 45:47.290
我希望同学们记住这几种常用的方式就ok

45:47.290 --> 45:47.890
其中呢

45:47.890 --> 45:49.990
最常用的这个方式

45:49.990 --> 45:51.790
就是我们授权码的那种形式

45:51.790 --> 45:53.390
来实现三方登录

45:53.390 --> 45:53.990
或者说呢

45:53.990 --> 45:55.790
三方的一些应用的使用

45:55.790 --> 45:56.490
比如说

45:56.490 --> 45:59.390
我们今天跟大家说的这种支付宝的一个

45:59.390 --> 46:02.890
个支付链接的一个调用这一块的内容啊

46:02.890 --> 46:03.190
好的

46:03.190 --> 46:04.590
那课程就到这里

46:04.590 --> 46:04.990
谢谢大家

