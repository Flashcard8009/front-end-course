WEBVTT

00:01.260 --> 00:06.260
好的 各位同学 我们这期课继续对OOS2进行一个学习

00:06.260 --> 00:10.260
上几课我们也说了 OOS2其实就是实现了

00:10.260 --> 00:14.260
三方应用获取Token令牌的这么一个授权方式

00:14.260 --> 00:16.260
也知道了它的获取流程

00:16.260 --> 00:19.260
那么这期课我们具体来看一下

00:19.260 --> 00:22.260
这个令牌获取的方法都有那些

00:22.260 --> 00:25.260
首先 第一个问题 OOS获取令牌的方式

00:25.260 --> 00:27.260
它是有四种的

00:27.260 --> 00:30.260
它们分别是这四种以授权码的形式

00:30.260 --> 00:32.260
也就是Otherization Code的

00:32.260 --> 00:35.260
包括这种隐藏式的Emelized

00:35.260 --> 00:38.260
然后还有这个密码式的

00:38.260 --> 00:42.260
包括我们这个客户端平正的这种形式

00:42.260 --> 00:45.260
大概主要是以这四种方式来实现

00:45.260 --> 00:47.260
但是在这里面的同学们要注意一下

00:47.260 --> 00:51.260
不管是上面这几种哪一种方式实现

00:51.260 --> 00:55.260
第三方应用 我们在做这个令牌申请之前

00:55.260 --> 00:58.260
都必须先到系统进行一个备案

00:58.260 --> 01:00.260
说明一下自己的身份

01:00.260 --> 01:02.260
备案系统在哪里

01:02.260 --> 01:06.260
每一个应用对应的备案形式都不太一样

01:06.260 --> 01:08.260
但是几乎流程都差不多

01:08.260 --> 01:11.260
比如说我们这个微信 支付榜

01:11.260 --> 01:13.260
它们都有自己的开发者温的

01:13.260 --> 01:17.260
我们首先宣讯得进行一个注册

01:17.260 --> 01:21.260
并且实现绑定帐户这样一个操作

01:21.260 --> 01:24.260
也就是说比如我们在支付中

01:24.260 --> 01:26.260
使用这种OOS的形式

01:26.260 --> 01:29.260
让微信进行一个授权

01:29.260 --> 01:32.260
那么一定得先在微信的开发者温当中

01:32.260 --> 01:33.260
进行一个备案

01:33.260 --> 01:35.260
然后我们才可以进行

01:35.260 --> 01:39.260
接下来的其他的一个相关操作

01:39.260 --> 01:41.260
因为首先这样做的目的

01:41.260 --> 01:44.260
其实就是为了让微信知道你这个网站

01:44.260 --> 01:46.260
是否是安全的

01:46.260 --> 01:49.260
并且来对你进行一个认识

01:49.260 --> 01:51.260
其实就是这么一个目的

01:51.260 --> 01:52.260
备案之后

01:52.260 --> 01:55.260
就会拿到两个身份的一个识别码

01:55.260 --> 01:56.260
分别是什么呢

01:56.260 --> 01:59.260
分别是客户端的ID

01:59.260 --> 02:02.260
以及我们这个客户端的密钥

02:02.260 --> 02:05.260
这个是为了防止令牌被滥用

02:05.260 --> 02:08.260
没有被按过的第三方应用

02:08.260 --> 02:10.260
是不会拿到令牌的

02:10.260 --> 02:13.260
并且还会有一个获取令牌的地址

02:13.260 --> 02:15.260
这个地址就是我们点击

02:15.260 --> 02:17.260
三方应用 跳转到微信

02:17.260 --> 02:21.260
或者说其他平台的这么一个链接

02:21.260 --> 02:24.260
好的 我们接下来就看一下

02:24.260 --> 02:27.260
首先授权码的这种形式

02:27.260 --> 02:30.260
也就是说authorization code的这种方式

02:30.260 --> 02:33.260
它是比较常用的

02:33.260 --> 02:38.260
而且它是和前后端分离的这种形式

02:38.260 --> 02:40.260
它指的是三方应用

02:40.260 --> 02:42.260
先申请一个授权码

02:42.260 --> 02:44.260
然后再用这个授权码

02:44.260 --> 02:48.260
进行一个令牌的这样一个获取

02:48.260 --> 02:50.260
这种方式最常用的

02:50.260 --> 02:52.260
其实它是最常用的一个流程

02:52.260 --> 02:55.260
并且安全性也是最高的

02:55.260 --> 02:59.260
试用的形式主要就是有后端的这种外部应用

02:59.260 --> 03:02.260
比如说我们PC假如说有这种sever

03:02.260 --> 03:04.260
或者是移动app有sever的都可以

03:04.260 --> 03:08.260
授权码它通过前端来进行一个传送

03:08.260 --> 03:11.260
令牌它是存储在后端

03:11.260 --> 03:14.260
而且所有资源与服务器的通信

03:14.260 --> 03:16.260
其实都是在后端完成的

03:16.260 --> 03:20.260
这样的前后端分离可以避免令牌泄漏

03:20.260 --> 03:23.260
从而实现了一个更加安全可靠的

03:23.260 --> 03:24.260
这么一个过程

03:24.260 --> 03:26.260
这是授权码的形式

03:26.260 --> 03:27.260
那怎么实现的呢

03:27.260 --> 03:30.260
首先我们这里面有张图可以看一下

03:30.260 --> 03:33.260
当我们在A网站进行操作的时候

03:33.260 --> 03:36.260
比如说我们A网站提供了一个链接

03:36.260 --> 03:40.260
我们点击之后就会跳转到B网站

03:40.260 --> 03:42.260
此时我们第一步操作

03:42.260 --> 03:45.260
就是要去获取一个授权码

03:45.260 --> 03:49.260
授权用户数据给A网站来进行使用

03:49.260 --> 03:52.260
那我们本次请求的地址里面

03:52.260 --> 03:53.260
会有一些参数

03:53.260 --> 03:55.260
Risvans Type

03:55.260 --> 03:58.260
包括Klan ID和Redirect URL

03:58.260 --> 04:00.260
包括Scope的

04:00.260 --> 04:04.260
这些都是我们要传递过去的一些参数

04:04.260 --> 04:06.260
首先我们依次来看一下

04:06.260 --> 04:08.260
Risvans Type等于Code

04:08.260 --> 04:09.260
它是什么意思呢

04:09.260 --> 04:11.260
Code参数表示

04:11.260 --> 04:15.260
我们本次的请求是要求你这个B网站

04:15.260 --> 04:17.260
给我们返回一个授权码

04:17.260 --> 04:18.260
Klan ID呢

04:18.260 --> 04:21.260
它代表着我们就是在这个

04:21.260 --> 04:23.260
创建这个应用的时候

04:23.260 --> 04:25.260
比如说我们在备案的时候

04:25.260 --> 04:27.260
会返回给我们一个Klan ID

04:27.260 --> 04:28.260
那这个呢

04:28.260 --> 04:30.260
就代表着我们网站的一个标识

04:30.260 --> 04:33.260
比如说我们这个A网站是知乎的话

04:33.260 --> 04:34.260
那Klan ID呢

04:34.260 --> 04:35.260
其实就是在知乎

04:35.260 --> 04:38.260
在微信创建应用的时候

04:38.260 --> 04:40.260
然后微信给我们

04:40.260 --> 04:42.260
知乎返回的一个标识啊

04:42.260 --> 04:43.260
就是这意思

04:43.260 --> 04:46.260
也就是说让B知道是谁在请求数据

04:46.260 --> 04:47.260
就是这么一个意思

04:47.260 --> 04:49.260
READY RIDE的URL

04:49.260 --> 04:52.260
这里面呢是一个返回的链接地址

04:52.260 --> 04:53.260
就是这啥意思呢

04:53.260 --> 04:56.260
如果说我本次请求授权码

04:56.260 --> 04:57.260
成功之后

04:57.260 --> 04:59.260
也就是说你同意之后

04:59.260 --> 05:00.260
那B网站呢

05:00.260 --> 05:02.260
就是处理完成链接请求后

05:02.260 --> 05:04.260
它要给我们做一个跳转

05:04.260 --> 05:05.260
然后跳转呢

05:05.260 --> 05:07.260
给我们其实发送到A网站来

05:07.260 --> 05:08.260
那我们A网站呢

05:08.260 --> 05:09.260
就根据这个地址

05:09.260 --> 05:12.260
再进行其他的一个后续操作

05:12.260 --> 05:13.260
Scope等于READ呢

05:13.260 --> 05:14.260
这个READ呢

05:14.260 --> 05:17.260
它表示要授权的一个范围

05:17.260 --> 05:20.260
READ代表着对授权资源进行一个

05:20.260 --> 05:23.260
止毒的一个操作啊

05:23.260 --> 05:26.260
那我们跳转成功之后

05:26.260 --> 05:27.260
B网站呢

05:27.260 --> 05:30.260
就会要求用户进行一个登录

05:30.260 --> 05:31.260
然后询问

05:31.260 --> 05:35.260
是否同意给予这个A网站进行授权

05:35.260 --> 05:36.260
也就是说啥意思

05:36.260 --> 05:38.260
其实我们可以想象

05:38.260 --> 05:40.260
刚才那个场景啊

05:40.260 --> 05:42.260
我们知乎点击微信登录

05:42.260 --> 05:43.260
其实呢

05:43.260 --> 05:44.260
就是这一步

05:44.260 --> 05:46.260
我们携带了当前

05:46.260 --> 05:48.260
从知乎要跳转的

05:48.260 --> 05:50.260
微信的一些相关信息

05:50.260 --> 05:51.260
那跳转成功之后呢

05:51.260 --> 05:54.260
其实就会弹出这个弹窗

05:54.260 --> 05:55.260
然后呢

05:55.260 --> 05:57.260
B网站要求用户进行一个登录

05:57.260 --> 05:58.260
或者是扫码啊

05:58.260 --> 05:59.260
然后询问

05:59.260 --> 06:00.260
其实是否同意

06:00.260 --> 06:03.260
给予这个A网站进行一个授权

06:03.260 --> 06:04.260
如果说用户

06:04.260 --> 06:06.260
它要是表示同意了

06:06.260 --> 06:07.260
这时候呢

06:07.260 --> 06:09.260
B网站就会跳转READREG的UAL

06:09.260 --> 06:10.260
也就是说

06:10.260 --> 06:12.260
我们当前传递的这个

06:12.260 --> 06:14.260
回调的这个UAL

06:14.260 --> 06:16.260
然后跳转时候呢

06:16.260 --> 06:19.260
它并且会传回一个授权码

06:19.260 --> 06:20.260
形式呢

06:20.260 --> 06:21.260
就是以这种形式

06:21.260 --> 06:24.260
它是返回A网站的一个请求

06:24.260 --> 06:25.260
然后CALLBACK

06:25.260 --> 06:27.260
是我们直接的

06:27.260 --> 06:29.260
就是刚才传递的这个地址

06:29.260 --> 06:30.260
之后呢

06:30.260 --> 06:31.260
这个COLD呢

06:31.260 --> 06:33.260
就是我们要代表着

06:33.260 --> 06:35.260
获取到的这个授权码

06:35.260 --> 06:37.260
那我们拿到这个授权码之后

06:37.260 --> 06:39.260
怎么来做呢

06:39.260 --> 06:40.260
我们啊

06:40.260 --> 06:41.260
就可以在后端

06:41.260 --> 06:43.260
向B网站进行一个

06:43.260 --> 06:45.260
令牌请求的

06:45.260 --> 06:47.260
这么一个重新的一个

06:47.260 --> 06:49.260
请求链接发送

06:49.260 --> 06:50.260
那这个里面呢

06:50.260 --> 06:51.260
我们需要

06:51.260 --> 06:54.260
还是同样传递一些信息

06:54.260 --> 06:55.260
那传递哪些信息呢

06:55.260 --> 06:56.260
首先啊

06:56.260 --> 06:57.260
我们还是要把这个

06:57.260 --> 06:58.260
CLANTID

06:58.260 --> 06:59.260
给传过去

06:59.260 --> 07:00.260
也就是说

07:00.260 --> 07:01.260
像B网站

07:01.260 --> 07:03.260
证明我自己的一个身份

07:03.260 --> 07:04.260
然后呢

07:04.260 --> 07:05.260
还有一个CLANT SECRET

07:05.260 --> 07:06.260
Secret呢

07:06.260 --> 07:07.260
也是在我们

07:07.260 --> 07:09.260
建立这个

07:09.260 --> 07:10.260
应用备案的时候

07:10.260 --> 07:12.260
会有一个Secret

07:12.260 --> 07:13.260
这个里面

07:13.260 --> 07:14.260
然后Grantive呢

07:14.260 --> 07:16.260
表示使用授权方式

07:16.260 --> 07:18.260
进行一个授权码的

07:18.260 --> 07:19.260
一个获取啊

07:19.260 --> 07:20.260
COLD

07:20.260 --> 07:21.260
COLD代表什么呢

07:21.260 --> 07:22.260
就是我们第一次

07:22.260 --> 07:24.260
我们请求的时候

07:24.260 --> 07:25.260
由B网站

07:25.260 --> 07:27.260
给我们返回的这个

07:27.260 --> 07:28.260
授权码

07:28.260 --> 07:30.260
就是我们天上就OK了

07:30.260 --> 07:32.260
然后redirect URL

07:32.260 --> 07:33.260
指的是什么呢

07:33.260 --> 07:35.260
指的是我们

07:35.260 --> 07:36.260
这个里面啊

07:36.260 --> 07:37.260
如果说

07:37.260 --> 07:38.260
B网站

07:38.260 --> 07:40.260
正常给我们返回了

07:40.260 --> 07:41.260
一个

07:41.260 --> 07:42.260
令牌之后

07:42.260 --> 07:44.260
那我们让B网站

07:44.260 --> 07:46.260
跳转的一个地址

07:46.260 --> 07:47.260
那这个图景呢

07:47.260 --> 07:48.260
就是这样

07:48.260 --> 07:49.260
我们请求授权码

07:49.260 --> 07:51.260
返回了授权码之后呢

07:51.260 --> 07:52.260
我们又根据

07:52.260 --> 07:53.260
这个授权码

07:53.260 --> 07:55.260
重新组织一个URL

07:55.260 --> 07:56.260
再次进行

07:56.260 --> 07:58.260
向B网站获取令牌的

07:58.260 --> 08:00.260
这么一个请求处理

08:00.260 --> 08:01.260
那么如果说

08:01.260 --> 08:02.260
B网站

08:02.260 --> 08:04.260
它收到请求以后呢

08:04.260 --> 08:05.260
就会颁发令牌了

08:05.260 --> 08:07.260
那具体做法是什么呢

08:07.260 --> 08:09.260
像redirect URL

08:09.260 --> 08:10.260
因为我们刚才请求

08:10.260 --> 08:11.260
令牌的时候

08:11.260 --> 08:12.260
已经添加了这个

08:12.260 --> 08:13.260
redirect URL

08:13.260 --> 08:14.260
然后呢

08:14.260 --> 08:15.260
指定的网站

08:15.260 --> 08:17.260
发送一段GSN数据

08:17.260 --> 08:19.260
就是以这种形式来发送

08:19.260 --> 08:21.260
那发送之后呢

08:21.260 --> 08:22.260
其实这个数据里面

08:22.260 --> 08:23.260
会有这一些内容

08:23.260 --> 08:24.260
分别是什么呢

08:24.260 --> 08:25.260
首先呢

08:25.260 --> 08:26.260
这里面

08:26.260 --> 08:27.260
有这个XS Token

08:27.260 --> 08:29.260
那XS Token呢

08:29.260 --> 08:30.260
就是我们

08:30.260 --> 08:31.260
请求到的

08:31.260 --> 08:33.260
这个令牌信息

08:33.260 --> 08:35.260
这里面有一个Reference Token

08:35.260 --> 08:36.260
Reference Token呢

08:36.260 --> 08:37.260
代表着

08:37.260 --> 08:38.260
我们

08:38.260 --> 08:40.260
下次去请求的时候

08:40.260 --> 08:41.260
可能我们

08:41.260 --> 08:43.260
就不需要获取这个

08:43.260 --> 08:44.260
全线身份信息

08:44.260 --> 08:45.260
也就是说

08:45.260 --> 08:46.260
我们不需要

08:46.260 --> 08:47.260
做上面的这个

08:47.260 --> 08:49.260
获取这个授权码的

08:49.260 --> 08:50.260
这样一个操作了

08:50.260 --> 08:51.260
我们直接呢

08:51.260 --> 08:52.260
可以再重新的

08:52.260 --> 08:53.260
使用一个地址

08:53.260 --> 08:55.260
去更新这个

08:55.260 --> 08:56.260
令牌就OK了

08:56.260 --> 08:57.260
因为令牌

08:57.260 --> 08:58.260
有过期时间嘛

08:58.260 --> 08:59.260
对不对

08:59.260 --> 09:00.260
所以说呢

09:00.260 --> 09:01.260
B网站给我们发送了

09:01.260 --> 09:02.260
一个Reference Token

09:02.260 --> 09:03.260
可以把Reference Token

09:03.260 --> 09:04.260
做一个存储

09:04.260 --> 09:05.260
也就是说

09:05.260 --> 09:06.260
在A网站里面

09:06.260 --> 09:07.260
Scope代表着

09:07.260 --> 09:08.260
我们这个

09:08.260 --> 09:09.260
获取到的令牌

09:09.260 --> 09:10.260
是指读的

09:10.260 --> 09:11.260
然后包括一些

09:11.260 --> 09:12.260
其他的相关信息

09:13.260 --> 09:14.260
那整个的流程呢

09:14.260 --> 09:15.260
就是

09:15.260 --> 09:16.260
我们去请求授权码

09:16.260 --> 09:17.260
然后呢

09:17.260 --> 09:18.260
它会返回

09:18.260 --> 09:20.260
我们这个授权码

09:20.260 --> 09:21.260
之后呢

09:21.260 --> 09:22.260
我们根据这个

09:22.260 --> 09:23.260
返回的授权码

09:23.260 --> 09:24.260
携带上之后

09:24.260 --> 09:25.260
组织一个地址

09:25.260 --> 09:26.260
然后再重新的

09:26.260 --> 09:28.260
去请求令牌

09:28.260 --> 09:29.260
之后呢

09:29.260 --> 09:30.260
我们请求

09:30.260 --> 09:31.260
B网站

09:31.260 --> 09:32.260
处理完成

09:32.260 --> 09:33.260
我们的业务逻辑之后

09:33.260 --> 09:34.260
它会给我们

09:34.260 --> 09:35.260
返回这个令牌

09:35.260 --> 09:37.260
那返回的内容信息里面

09:37.260 --> 09:38.260
其实就是在这个里面

09:38.260 --> 09:39.260
令牌呢

09:39.260 --> 09:40.260
其实就是这个

09:40.260 --> 09:41.260
Access Token

09:41.260 --> 09:42.260
给我们返回的

09:42.260 --> 09:43.260
那这个呢

09:43.260 --> 09:44.260
其实就是最经典的

09:44.260 --> 09:45.260
一种

09:45.260 --> 09:47.260
Also2的一个

09:47.260 --> 09:48.260
获取令牌的这种形式

09:48.260 --> 09:49.260
也就是说

09:49.260 --> 09:51.260
授权码的这个形式

09:51.260 --> 09:52.260
这个呢

09:52.260 --> 09:53.260
我们同学们

09:53.260 --> 09:54.260
一定要知道的

09:54.260 --> 09:55.260
至于我们

09:55.260 --> 09:56.260
其他的说的

09:56.260 --> 09:57.260
接下来的这几种

09:57.260 --> 09:59.260
比如说隐藏式的

09:59.260 --> 10:00.260
密码式的

10:00.260 --> 10:01.260
或者评证式的

10:01.260 --> 10:02.260
它相对于

10:02.260 --> 10:03.260
授权码的这种形式

10:03.260 --> 10:04.260
使用频率

10:04.260 --> 10:05.260
就不是特别的高了

10:05.260 --> 10:06.260
更多的是

10:06.260 --> 10:07.260
应用于一些

10:07.260 --> 10:09.260
历史的这个遗留的

10:09.260 --> 10:11.260
一些网站处理的时候

10:11.260 --> 10:12.260
可能会用的比较多

10:12.260 --> 10:13.260
然后比如说

10:13.260 --> 10:14.260
这个隐藏式的

10:14.260 --> 10:15.260
咱们来看一下

10:15.260 --> 10:16.260
其实隐藏式的

10:16.260 --> 10:17.260
它相对于

10:17.260 --> 10:19.260
授权码的这种形式

10:19.260 --> 10:20.260
实现起来

10:20.260 --> 10:21.260
它缺少了一个

10:21.260 --> 10:22.260
获取授权码

10:22.260 --> 10:23.260
这么一个过程

10:23.260 --> 10:24.260
然后呢

10:24.260 --> 10:25.260
它的适用

10:25.260 --> 10:26.260
主要适用于那种

10:26.260 --> 10:27.260
纯前端的外外应用

10:27.260 --> 10:28.260
比如说

10:28.260 --> 10:29.260
我们一个静态界面

10:29.260 --> 10:30.260
静态站点

10:30.260 --> 10:31.260
它呢没有这种

10:31.260 --> 10:32.260
后端服务

10:32.260 --> 10:33.260
所以说呢

10:33.260 --> 10:34.260
我们只能将

10:34.260 --> 10:36.260
令牌存储在前端

10:36.260 --> 10:37.260
然后允许直接

10:37.260 --> 10:38.260
向前端

10:38.260 --> 10:39.260
办法令牌

10:39.260 --> 10:40.260
这种方式

10:40.260 --> 10:41.260
它没有授权码

10:41.260 --> 10:42.260
这个中间环节

10:42.260 --> 10:43.260
所以呢

10:43.260 --> 10:44.260
被称为这种

10:44.260 --> 10:45.260
隐藏式的

10:45.260 --> 10:47.260
银牌赛

10:47.260 --> 10:48.260
然后由于前端

10:48.260 --> 10:49.260
获取偷看

10:49.260 --> 10:50.260
它相对的

10:50.260 --> 10:51.260
安全性较低

10:51.260 --> 10:52.260
比如说

10:52.260 --> 10:53.260
一般适用于

10:53.260 --> 10:54.260
比较新人的网站呢

10:54.260 --> 10:55.260
并且

10:55.260 --> 10:56.260
令牌的这个

10:56.260 --> 10:57.260
有效时期

10:57.260 --> 10:58.260
如果说

10:58.260 --> 10:59.260
隐藏式的话

10:59.260 --> 11:01.260
它的这个时间

11:01.260 --> 11:03.260
是相对比较短的

11:03.260 --> 11:04.260
什么多短的

11:04.260 --> 11:05.260
一般的

11:05.260 --> 11:06.260
它类似于一个Fashion

11:06.260 --> 11:07.260
比如说

11:07.260 --> 11:08.260
打开界面

11:08.260 --> 11:09.260
开启这个

11:09.260 --> 11:11.260
获取到这个令牌

11:11.260 --> 11:12.260
然后关闭界面

11:12.260 --> 11:13.260
这个令牌啊

11:13.260 --> 11:14.260
就

11:14.260 --> 11:15.260
失效了

11:15.260 --> 11:16.260
也就是说关闭界面

11:16.260 --> 11:17.260
令牌就失效

11:17.260 --> 11:18.260
这样也是保证了

11:18.260 --> 11:19.260
一个安全性

11:19.260 --> 11:21.260
实现流程指的是

11:21.260 --> 11:22.260
什么样呢

11:22.260 --> 11:23.260
首先啊

11:23.260 --> 11:24.260
它和上面啊

11:24.260 --> 11:25.260
几乎

11:25.260 --> 11:26.260
类似

11:26.260 --> 11:27.260
但是呢

11:28.260 --> 11:29.260
我们

11:30.260 --> 11:31.260
上面

11:31.260 --> 11:32.260
这个

11:32.260 --> 11:33.260
我们获取的是

11:33.260 --> 11:34.260
这个

11:34.260 --> 11:35.260
扣的

11:35.260 --> 11:36.260
大家可以看一下

11:36.260 --> 11:37.260
代表着什么呢

11:37.260 --> 11:38.260
代表着我要做

11:38.260 --> 11:39.260
授权吗

11:39.260 --> 11:40.260
获取

11:40.260 --> 11:41.260
然后这个

11:42.260 --> 11:43.260
这个里面

11:43.260 --> 11:44.260
它直接的是

11:44.260 --> 11:45.260
就等于

11:45.260 --> 11:46.260
那这个呢

11:46.260 --> 11:47.260
表示

11:47.260 --> 11:48.260
我们直接的

11:48.260 --> 11:49.260
就要

11:49.260 --> 11:50.260
返回令牌

11:50.260 --> 11:51.260
也就是说

11:51.260 --> 11:52.260
实现起来

11:52.260 --> 11:53.260
前面都一样

11:53.260 --> 11:54.260
但是呢

11:54.260 --> 11:55.260
它带着这个参数

11:55.260 --> 11:56.260
告诉

11:56.260 --> 11:57.260
这个

11:57.260 --> 11:58.260
比如说这个

11:59.260 --> 12:00.260
B网站

12:00.260 --> 12:01.260
然后呢

12:01.260 --> 12:02.260
我要这个

12:02.260 --> 12:03.260
直接的给我返回令牌

12:03.260 --> 12:04.260
就OK了啊

12:04.260 --> 12:05.260
然后这是

12:05.260 --> 12:06.260
第一步

12:06.260 --> 12:07.260
也是做一个

12:07.260 --> 12:08.260
链接跳转

12:08.260 --> 12:09.260
跳转过去之后

12:09.260 --> 12:10.260
直接告诉他

12:10.260 --> 12:11.260
请令牌

12:11.260 --> 12:12.260
至于这个

12:12.260 --> 12:13.260
和

12:13.260 --> 12:14.260
这个是不变的

12:14.260 --> 12:15.260
因为直接的

12:15.260 --> 12:16.260
你要是

12:16.260 --> 12:17.260
同意之后

12:17.260 --> 12:18.260
也就是说

12:18.260 --> 12:19.260
B网站同意之后

12:19.260 --> 12:20.260
它一定还是有一个

12:20.260 --> 12:21.260
返回操作

12:21.260 --> 12:22.260
并且啊

12:22.260 --> 12:23.260
在本次

12:23.260 --> 12:24.260
请求过程当中

12:24.260 --> 12:25.260
它也要

12:25.260 --> 12:26.260
进行当前的

12:26.260 --> 12:27.260
用户的一个

12:27.260 --> 12:28.260
标识处理

12:28.260 --> 12:29.260
这个是不变的

12:29.260 --> 12:31.260
用户跳转到

12:31.260 --> 12:32.260
B网站之后

12:32.260 --> 12:33.260
如果说你

12:33.260 --> 12:34.260
登陆

12:34.260 --> 12:35.260
同意给这个

12:35.260 --> 12:36.260
A网站

12:36.260 --> 12:37.260
进行一个授权

12:37.260 --> 12:38.260
B网站

12:38.260 --> 12:39.260
就会跳转到

12:39.260 --> 12:40.260
RedirectUI

12:40.260 --> 12:41.260
也适合刚才一样

12:41.260 --> 12:42.260
只不过是

12:42.260 --> 12:43.260
刚才啊

12:43.260 --> 12:44.260
它跳转的时候

12:44.260 --> 12:45.260
带的是授权码

12:45.260 --> 12:46.260
这回呢

12:46.260 --> 12:47.260
它直接带了

12:47.260 --> 12:48.260
一个Access Token

12:48.260 --> 12:49.260
也就是说

12:49.260 --> 12:50.260
把令牌

12:50.260 --> 12:52.260
直接传给了

12:52.260 --> 12:53.260
我们这个

12:53.260 --> 12:54.260
A网站

12:54.260 --> 12:55.260
Token

12:55.260 --> 12:56.260
作为参数

12:56.260 --> 12:57.260
然后呢

12:57.260 --> 12:58.260
这里面注意一点

12:58.260 --> 12:59.260
令牌的位置

12:59.260 --> 13:01.260
是UIL 某点

13:01.260 --> 13:02.260
也就是说

13:02.260 --> 13:03.260
在这个Auto里面

13:03.260 --> 13:04.260
如果说

13:04.260 --> 13:05.260
你使用这种

13:05.260 --> 13:06.260
隐藏式的形式

13:06.260 --> 13:07.260
来做的话

13:07.260 --> 13:08.260
你这个令牌啊

13:08.260 --> 13:09.260
返回

13:09.260 --> 13:10.260
其实是以某点

13:10.260 --> 13:11.260
形式来进行返回的

13:11.260 --> 13:12.260
它不是一个什么呢

13:12.260 --> 13:13.260
Query 这种

13:13.260 --> 13:14.260
查询资本创

13:14.260 --> 13:15.260
这个呢

13:15.260 --> 13:16.260
其实就是

13:16.260 --> 13:17.260
因为Auto

13:17.260 --> 13:18.260
允许跳转网址

13:18.260 --> 13:19.260
是这种

13:19.260 --> 13:20.260
ATP协议的

13:20.260 --> 13:21.260
所以说呢

13:21.260 --> 13:22.260
就是我们为了

13:22.260 --> 13:23.260
减少这种

13:23.260 --> 13:25.260
中间的一个攻击风险

13:25.260 --> 13:26.260
所以说

13:26.260 --> 13:27.260
在跳转的时候

13:27.260 --> 13:28.260
我们使用某点

13:28.260 --> 13:29.260
为啥呢

13:29.260 --> 13:30.260
因为某点

13:30.260 --> 13:31.260
这个东西啊

13:31.260 --> 13:32.260
它是不会

13:32.260 --> 13:34.260
随着你这个

13:34.260 --> 13:35.260
地址的一个改变

13:35.260 --> 13:36.260
而进行界面

13:36.260 --> 13:37.260
发生跳转的

13:37.260 --> 13:38.260
所以说呢

13:38.260 --> 13:39.260
这种就减少了

13:39.260 --> 13:40.260
一个令牌泄漏的

13:40.260 --> 13:41.260
这么一个风险

13:41.260 --> 13:42.260
那这个呢

13:42.260 --> 13:44.260
其实过程啊

13:44.260 --> 13:45.260
只是跟上面

13:45.260 --> 13:46.260
少了一个

13:46.260 --> 13:47.260
授权码的过程啊

13:47.260 --> 13:48.260
比如说

13:48.260 --> 13:49.260
这里面我请求令牌

13:49.260 --> 13:50.260
然后这块呢

13:50.260 --> 13:52.260
就是一个令牌的返回

13:52.260 --> 13:53.260
这个啊

13:53.260 --> 13:54.260
同学们

13:54.260 --> 13:55.260
知道一下就行

13:55.260 --> 13:56.260
因为这个啊

13:56.260 --> 13:57.260
实际应用

13:57.260 --> 13:58.260
不是特别的多

13:58.260 --> 13:59.260
而且呢

13:59.260 --> 14:00.260
一会儿我们

14:00.260 --> 14:01.260
做几个例子里面

14:01.260 --> 14:02.260
更多的呢

14:02.260 --> 14:03.260
就是使用这种

14:03.260 --> 14:04.260
授权码的形式

14:04.260 --> 14:05.260
来实现的

14:06.260 --> 14:07.260
那咱们接下来呢

14:07.260 --> 14:08.260
再看

14:08.260 --> 14:09.260
第三种形式

14:09.260 --> 14:10.260
密码的形式

14:10.260 --> 14:11.260
那这种呢

14:11.260 --> 14:12.260
其实

14:12.260 --> 14:13.260
刚才咱们说了

14:13.260 --> 14:14.260
授权码的形式

14:14.260 --> 14:15.260
相对就是

14:15.260 --> 14:16.260
比较安全的

14:16.260 --> 14:17.260
然后隐藏式呢

14:17.260 --> 14:18.260
也就是说

14:18.260 --> 14:19.260
银牌的这种啊

14:19.260 --> 14:20.260
它不是特别安全的

14:20.260 --> 14:21.260
是需要你

14:21.260 --> 14:22.260
对这个网站

14:22.260 --> 14:23.260
有一定信任的

14:23.260 --> 14:24.260
但是呢

14:24.260 --> 14:25.260
密码的形式啊

14:25.260 --> 14:26.260
它是要求你网站啊

14:26.260 --> 14:28.260
绝对的进行一个信任

14:28.260 --> 14:29.260
为什么呢

14:29.260 --> 14:30.260
因为啊

14:30.260 --> 14:31.260
这个啊

14:31.260 --> 14:32.260
已经是

14:32.260 --> 14:33.260
可以这么说

14:33.260 --> 14:34.260
就是说

14:34.260 --> 14:35.260
你一个三方应用

14:35.260 --> 14:36.260
其实是获取了

14:36.260 --> 14:37.260
你另一个应用

14:37.260 --> 14:38.260
比如说在这个里面

14:38.260 --> 14:39.260
就是我们直呼

14:39.260 --> 14:41.260
要使用微信的

14:41.260 --> 14:42.260
账户密码

14:42.260 --> 14:43.260
来进行登录的

14:43.260 --> 14:44.260
这么一个操作

14:44.260 --> 14:45.260
也就是说

14:45.260 --> 14:46.260
你直接告诉应用

14:46.260 --> 14:48.260
你在这个

14:48.260 --> 14:49.260
告诉直呼

14:49.260 --> 14:50.260
你微信上的

14:50.260 --> 14:51.260
密码

14:51.260 --> 14:52.260
以及咱们这个账户

14:52.260 --> 14:53.260
然后呢

14:53.260 --> 14:54.260
直接以密码的形式

14:54.260 --> 14:55.260
来进行

14:55.260 --> 14:56.260
令牌的申请

14:56.260 --> 14:57.260
这种方式呢

14:57.260 --> 14:58.260
就称为这个

14:58.260 --> 14:59.260
密码式的

14:59.260 --> 15:00.260
帕苏尔的

15:00.260 --> 15:01.260
其实这种啊

15:01.260 --> 15:02.260
跟大家讲

15:02.260 --> 15:03.260
实际的使用的时候

15:03.260 --> 15:04.260
不是特别的多

15:04.260 --> 15:05.260
不过呢

15:05.260 --> 15:06.260
我们进行一个

15:06.260 --> 15:07.260
掌握就ok了

15:07.260 --> 15:08.260
它实现流程

15:08.260 --> 15:09.260
嗯

15:09.260 --> 15:10.260
非常简单

15:10.260 --> 15:11.260
首先呢

15:11.260 --> 15:12.260
第一步就是

15:12.260 --> 15:13.260
我们这个A网站

15:13.260 --> 15:14.260
要求用户

15:14.260 --> 15:15.260
提供B网站的

15:15.260 --> 15:16.260
用户名和密码

15:16.260 --> 15:17.260
也就是说

15:17.260 --> 15:19.260
你在直呼上

15:19.260 --> 15:20.260
微信的账户和密码

15:20.260 --> 15:21.260
输入一下

15:21.260 --> 15:22.260
然后拿到以后呢

15:22.260 --> 15:24.260
A就直接向B

15:24.260 --> 15:25.260
也就是说

15:25.260 --> 15:26.260
这个B网站

15:26.260 --> 15:27.260
发起一个

15:27.260 --> 15:29.260
令牌的这个请求

15:29.260 --> 15:30.260
那这里面呢

15:30.260 --> 15:31.260
格安的Type

15:31.260 --> 15:32.260
这里面直接的

15:32.260 --> 15:33.260
就是Password的

15:33.260 --> 15:34.260
那我们知道

15:34.260 --> 15:35.260
现在这个格安Type

15:35.260 --> 15:36.260
有什么

15:36.260 --> 15:37.260
有Code

15:37.260 --> 15:38.260
有Password的

15:38.260 --> 15:39.260
还有这个Token

15:39.260 --> 15:40.260
他们分别啊

15:40.260 --> 15:41.260
就是

15:41.260 --> 15:42.260
其实是通过格安Type

15:42.260 --> 15:44.260
来做这几种

15:44.260 --> 15:46.260
授权形式的一个区分

15:46.260 --> 15:47.260
这个呢

15:47.260 --> 15:48.260
咱们看到这里

15:48.260 --> 15:49.260
应该是

15:49.260 --> 15:50.260
有一点

15:50.260 --> 15:51.260
印象啊

15:51.260 --> 15:52.260
首先呢

15:52.260 --> 15:53.260
格安Type等于Password的

15:53.260 --> 15:54.260
他的授权码

15:54.260 --> 15:55.260
为密码的形式

15:55.260 --> 15:56.260
进行授权

15:56.260 --> 15:57.260
这就是这意思

15:57.260 --> 15:58.260
UserName

15:58.260 --> 16:00.260
和这个UserPassword的

16:00.260 --> 16:01.260
这个呢

16:01.260 --> 16:02.260
代表着

16:02.260 --> 16:03.260
你要获取授权的

16:03.260 --> 16:04.260
B网站的一个

16:04.260 --> 16:05.260
登录用户名

16:05.260 --> 16:06.260
以及他的这个密码

16:06.260 --> 16:07.260
格安TypeD呢

16:07.260 --> 16:08.260
标识着

16:08.260 --> 16:09.260
我当前的

16:09.260 --> 16:10.260
这个三方应用的

16:10.260 --> 16:11.260
一个唯一身份标识

16:11.260 --> 16:13.260
只需要传这四个

16:13.260 --> 16:14.260
就OK了

16:15.260 --> 16:16.260
那B网站

16:16.260 --> 16:17.260
验证身份

16:17.260 --> 16:18.260
通过之后呢

16:18.260 --> 16:20.260
直接给出一个令牌

16:20.260 --> 16:21.260
然后

16:21.260 --> 16:22.260
这时候

16:22.260 --> 16:23.260
他其实是

16:23.260 --> 16:24.260
不需要跳转的

16:24.260 --> 16:25.260
而是把令牌

16:25.260 --> 16:27.260
放在階层数据里面

16:27.260 --> 16:28.260
作为ATTP回应

16:28.260 --> 16:29.260
然后呢

16:29.260 --> 16:30.260
A网站

16:30.260 --> 16:31.260
这时候就可以拿到

16:31.260 --> 16:33.260
我们这个令牌了

16:33.260 --> 16:34.260
然后这种方式

16:34.260 --> 16:35.260
需要其实

16:35.260 --> 16:37.260
给出用户的这个

16:37.260 --> 16:38.260
用户

16:38.260 --> 16:39.260
张护铭

16:39.260 --> 16:40.260
包括我们的这个密码

16:40.260 --> 16:42.260
他方线是

16:42.260 --> 16:43.260
特别大的

16:43.260 --> 16:44.260
所以说呢

16:44.260 --> 16:46.260
只适用于这种

16:46.260 --> 16:48.260
其他数据方式

16:48.260 --> 16:50.260
都无法采用的情况下

16:50.260 --> 16:51.260
而且呢

16:51.260 --> 16:52.260
必须是用户

16:52.260 --> 16:54.260
高度信任的一个应用

16:54.260 --> 16:55.260
所以说呢

16:55.260 --> 16:56.260
这种同学们知道一下

16:56.260 --> 16:57.260
就OK

16:57.260 --> 16:58.260
至于我们真实的

16:58.260 --> 16:59.260
在使用的时候

16:59.260 --> 17:00.260
其实是

17:00.260 --> 17:02.260
不是特别多的

17:02.260 --> 17:04.260
这是这种密码的形式

17:04.260 --> 17:05.260
还有一种是什么呢

17:05.260 --> 17:06.260
就是我们的这种

17:06.260 --> 17:07.260
凭证式的

17:07.260 --> 17:08.260
凭证式的

17:08.260 --> 17:09.260
其实他和密码式的

17:09.260 --> 17:10.260
这个很相似

17:10.260 --> 17:11.260
主要是

17:11.260 --> 17:12.260
他应用于什么呢

17:12.260 --> 17:13.260
比如说

17:13.260 --> 17:14.260
我们那些

17:14.260 --> 17:16.260
没有前端的

17:16.260 --> 17:17.260
一些命运行的应用

17:17.260 --> 17:18.260
然后呢

17:18.260 --> 17:19.260
可以呢

17:19.260 --> 17:21.260
做一些简单的方式

17:21.260 --> 17:22.260
获取令牌

17:22.260 --> 17:23.260
然后呢

17:23.260 --> 17:24.260
请求响应的结论

17:24.260 --> 17:25.260
结果中

17:25.260 --> 17:26.260
返回token

17:26.260 --> 17:27.260
其实他们俩是差不多的啊

17:27.260 --> 17:28.260
这格兰的态度呢

17:28.260 --> 17:29.260
指的是什么呢

17:29.260 --> 17:30.260
格兰

17:30.260 --> 17:32.260
克兰的格兰的态度

17:32.260 --> 17:34.260
然后这个表示

17:34.260 --> 17:36.260
格兰的克兰的态度

17:36.260 --> 17:38.260
表示凭证的一个

17:38.260 --> 17:39.260
凭证式的

17:39.260 --> 17:40.260
做一个授权

17:40.260 --> 17:42.260
然后他这个

17:43.260 --> 17:44.260
和这个

17:44.260 --> 17:45.260
克兰特

17:45.260 --> 17:47.260
使用来进行一个

17:47.260 --> 17:48.260
识别身份

17:48.260 --> 17:49.260
然后这种

17:49.260 --> 17:50.260
币网站

17:50.260 --> 17:51.260
验证通过之后

17:51.260 --> 17:53.260
直接的就是返回令牌

17:53.260 --> 17:55.260
其实你记这个东西啊

17:55.260 --> 17:56.260
你就知道

17:56.260 --> 17:57.260
有一种是凭证式的

17:57.260 --> 17:58.260
就ok了

17:58.260 --> 17:59.260
而且呢

17:59.260 --> 18:00.260
这种凭证式的

18:00.260 --> 18:01.260
他一般的

18:01.260 --> 18:02.260
不适用于这种

18:02.260 --> 18:03.260
纯外部的这种应用

18:03.260 --> 18:04.260
然后

18:04.260 --> 18:06.260
如果说你没有前端的

18:06.260 --> 18:07.260
这个

18:07.260 --> 18:08.260
没有前端的

18:08.260 --> 18:09.260
这个应用界面的话

18:09.260 --> 18:10.260
那我直接的

18:10.260 --> 18:11.260
使用命运行

18:11.260 --> 18:12.260
来做一些获取

18:12.260 --> 18:13.260
其实他也不是一种

18:13.260 --> 18:14.260
标准的

18:14.260 --> 18:22.260
这个

18:22.260 --> 18:24.260
就是我们这个

18:24.260 --> 18:25.260
比较常用的

18:25.260 --> 18:26.260
这几种授权方式

18:26.260 --> 18:27.260
但是呢

18:27.260 --> 18:28.260
还是那句话啊

18:28.260 --> 18:29.260
不管是哪一种

18:29.260 --> 18:30.260
授权方式

18:30.260 --> 18:31.260
比如说授权码

18:31.260 --> 18:32.260
隐藏式

18:32.260 --> 18:33.260
包括密码式的

18:33.260 --> 18:34.260
以及凭证式的

18:34.260 --> 18:35.260
他们在授权之前

18:35.260 --> 18:37.260
一定是要有一个

18:37.260 --> 18:38.260
备案

18:38.260 --> 18:39.260
也就是说

18:39.260 --> 18:40.260
让这个

18:40.260 --> 18:42.260
应用被我们需要授权的

18:42.260 --> 18:43.260
那个网站

18:43.260 --> 18:44.260
进行一个识别的

18:44.260 --> 18:45.260
这么一个过程

18:45.260 --> 18:46.260
这个呢

18:46.260 --> 18:47.260
同学们要知道一下

18:47.260 --> 18:48.260
而且呢

18:48.260 --> 18:49.260
主流的

18:49.260 --> 18:50.260
使用的更多的

18:50.260 --> 18:51.260
安全性

18:51.260 --> 18:52.260
也相对好一些

18:52.260 --> 18:53.260
更加稳定的

18:53.260 --> 18:54.260
其实就是

18:54.260 --> 18:55.260
这种授权码的形式

18:55.260 --> 18:56.260
因为什么

18:56.260 --> 18:58.260
因为他的授权码的操作

18:58.260 --> 18:59.260
包括token的存储

18:59.260 --> 19:01.260
都是在前端

19:01.260 --> 19:02.260
sorry

19:02.260 --> 19:03.260
都是在后端

19:03.260 --> 19:04.260
来完成的

19:04.260 --> 19:05.260
所以说呢

19:05.260 --> 19:06.260
他相对于这种

19:06.260 --> 19:07.260
隐藏的密码的

19:07.260 --> 19:08.260
凭证的

19:08.260 --> 19:09.260
是相对要

19:09.260 --> 19:10.260
安全一些的

19:10.260 --> 19:11.260
那比如说

19:11.260 --> 19:12.260
这种密码的

19:12.260 --> 19:13.260
刚才他们说了

19:13.260 --> 19:14.260
其实密码这种

19:14.260 --> 19:15.260
最大特点就是什么呢

19:15.260 --> 19:16.260
如果说

19:16.260 --> 19:17.260
我在一个三方应用里

19:17.260 --> 19:18.260
登陆一个

19:18.260 --> 19:19.260
其他应用的

19:19.260 --> 19:20.260
账户密码

19:20.260 --> 19:21.260
这个显然

19:21.260 --> 19:22.260
是不太合适的

19:22.260 --> 19:23.260
他脱离了

19:23.260 --> 19:24.260
咱们这个授权的

19:24.260 --> 19:26.260
一个本质

19:26.260 --> 19:27.260
其实意义不大

19:27.260 --> 19:29.260
然后凭证式的呢

19:29.260 --> 19:30.260
对我们来说

19:30.260 --> 19:31.260
使用频率

19:31.260 --> 19:32.260
其实也不是

19:32.260 --> 19:33.260
特别的高

19:33.260 --> 19:34.260
因为我们主要的

19:34.260 --> 19:35.260
就是用这种

19:35.260 --> 19:36.260
web的

19:36.260 --> 19:37.260
前端应用

19:37.260 --> 19:38.260
这个呢

19:38.260 --> 19:39.260
同学们要知道一下

19:39.260 --> 19:40.260
隐藏式的

19:40.260 --> 19:41.260
隐藏式的

19:41.260 --> 19:42.260
为什么说它使用不高

19:42.260 --> 19:43.260
因为隐藏式的

19:43.260 --> 19:44.260
它这种啊

19:44.260 --> 19:45.260
是更多的

19:45.260 --> 19:46.260
应用于这种

19:46.260 --> 19:47.260
没有后端的

19:47.260 --> 19:49.260
这种应用占点

19:49.260 --> 19:50.260
那一般的

19:50.260 --> 19:51.260
像这种

19:51.260 --> 19:52.260
没有后端的

19:52.260 --> 19:53.260
应用占点的时候

19:53.260 --> 19:54.260
这种情况

19:54.260 --> 19:55.260
不是特别

19:55.260 --> 19:56.260
长的发生的

19:56.260 --> 19:57.260
所以说呢

19:57.260 --> 19:58.260
我们更多的

19:58.260 --> 19:59.260
还是在使用这种

19:59.260 --> 20:00.260
授权的形式

20:00.260 --> 20:01.260
不过同学们呢

20:01.260 --> 20:02.260
要把这几种啊

20:02.260 --> 20:03.260
方式

20:03.260 --> 20:04.260
然后呢

20:04.260 --> 20:05.260
都了解一下

20:05.260 --> 20:06.260
就可以

20:06.260 --> 20:07.260
那重点呢

20:07.260 --> 20:08.260
我们在做

20:08.260 --> 20:09.260
练习的时候

20:09.260 --> 20:10.260
也是使用这种

20:10.260 --> 20:11.260
授权码的形式

20:11.260 --> 20:12.260
来实现的

20:12.260 --> 20:13.260
怎么来区分呢

20:13.260 --> 20:14.260
其实就是靠这种

20:14.260 --> 20:15.260
reference type

20:15.260 --> 20:16.260
其实看到这里啊

20:16.260 --> 20:17.260
我们也知道

20:17.260 --> 20:18.260
就是它这个里面

20:18.260 --> 20:19.260
关键几个参数

20:19.260 --> 20:20.260
分别代表什么的

20:20.260 --> 20:21.260
我们这里面

20:21.260 --> 20:23.260
大概就能了解到了

20:23.260 --> 20:24.260
最主要的就是

20:24.260 --> 20:25.260
一个reference type

20:25.260 --> 20:27.260
来进行一个什么

20:27.260 --> 20:28.260
请求响应的

20:28.260 --> 20:29.260
一个区分标识

20:29.260 --> 20:31.260
这个要知道一下

20:32.260 --> 20:33.260
好的那

20:33.260 --> 20:34.260
接下来呢

20:34.260 --> 20:35.260
咱们再说一下

20:35.260 --> 20:36.260
我们在这几次

20:36.260 --> 20:38.260
全线认证的处理之后

20:38.260 --> 20:39.260
我们拿到令牌

20:39.260 --> 20:40.260
那我们接下来

20:40.260 --> 20:41.260
要怎么做呢

20:41.260 --> 20:42.260
如何来进行使用呢

20:42.260 --> 20:43.260
其实

20:43.260 --> 20:44.260
如果说我们

20:44.260 --> 20:45.260
a网站

20:45.260 --> 20:46.260
假如说拿到令牌之后

20:46.260 --> 20:47.260
其实就可以

20:47.260 --> 20:48.260
向b网站的

20:48.260 --> 20:50.260
这个api指定接口

20:50.260 --> 20:51.260
进行数据请求了

20:51.260 --> 20:52.260
请求的这个方法呢

20:52.260 --> 20:53.260
其实在

20:53.260 --> 20:54.260
正常的这个

20:54.260 --> 20:55.260
请求地址里面

20:55.260 --> 20:57.260
我们在请求头中

20:57.260 --> 20:58.260
要将这个token

20:58.260 --> 21:00.260
放在atp的一个

21:00.260 --> 21:01.260
请求的这个方法

21:01.260 --> 21:02.260
其实在正常的

21:02.260 --> 21:03.260
这个请求地址里面

21:03.260 --> 21:04.260
在atp的一个

21:04.260 --> 21:05.260
请求头部的

21:05.260 --> 21:06.260
authorization

21:06.260 --> 21:07.260
这个字段里面

21:07.260 --> 21:08.260
也就是说

21:08.260 --> 21:09.260
这个放在request

21:09.260 --> 21:10.260
hider里面

21:10.260 --> 21:11.260
然后呢

21:11.260 --> 21:12.260
这个是我们

21:12.260 --> 21:13.260
使用的时候

21:13.260 --> 21:14.260
如果说我们

21:14.260 --> 21:15.260
把这个地址里面

21:15.260 --> 21:16.260
添加了这个

21:16.260 --> 21:17.260
authorization

21:17.260 --> 21:18.260
这个字段

21:18.260 --> 21:19.260
当然前提啊

21:19.260 --> 21:20.260
你这个令牌

21:20.260 --> 21:21.260
一定是正确的

21:21.260 --> 21:22.260
那我们就可以

21:22.260 --> 21:23.260
返回这个b网站

21:23.260 --> 21:24.260
也就是说

21:24.260 --> 21:25.260
给我们提供的

21:25.260 --> 21:26.260
一些用户的

21:26.260 --> 21:27.260
信息数据

21:27.260 --> 21:28.260
然后呢

21:28.260 --> 21:29.260
来让我们

21:29.260 --> 21:30.260
进行使用了

21:30.260 --> 21:32.260
这使用这一块

21:32.260 --> 21:33.260
之后呢

21:33.260 --> 21:34.260
我们做几个按键

21:34.260 --> 21:35.260
同学们在这里

21:35.260 --> 21:36.260
就可以很直观的

21:36.260 --> 21:37.260
来看到这个

21:37.260 --> 21:38.260
如何进行使用

21:39.260 --> 21:40.260
那么接下来呢

21:40.260 --> 21:41.260
再说一下这个更新

21:41.260 --> 21:42.260
那因为啊

21:42.260 --> 21:43.260
我们令牌

21:43.260 --> 21:45.260
它是有这个实效性的

21:45.260 --> 21:46.260
所以说呢

21:46.260 --> 21:47.260
一旦这个过期

21:47.260 --> 21:48.260
它就需要

21:48.260 --> 21:50.260
进行一个重新的获取

21:50.260 --> 21:51.260
所以说令牌到期之后呢

21:51.260 --> 21:52.260
如果说

21:52.260 --> 21:53.260
假如说

21:53.260 --> 21:54.260
我们使用这种

21:54.260 --> 21:55.260
授钱码的形式

21:55.260 --> 21:56.260
让用户

21:56.260 --> 21:57.260
再重新走一遍

21:57.260 --> 21:58.260
流程的话

21:58.260 --> 21:59.260
那这个里面呢

21:59.260 --> 22:01.260
就是相对比较繁琐了

22:01.260 --> 22:02.260
因为我们这里面

22:02.260 --> 22:03.260
是有一个获取

22:03.260 --> 22:05.260
授钱码的这么一个过程对不对

22:05.260 --> 22:06.260
所以说呢

22:06.260 --> 22:07.260
它这个啊

22:07.260 --> 22:08.260
是相对复杂的

22:08.260 --> 22:09.260
所以说呢

22:09.260 --> 22:10.260
我们怎么办呢

22:10.260 --> 22:11.260
我们在这个里面

22:11.260 --> 22:12.260
其实啊

22:12.260 --> 22:13.260
就是说

22:13.260 --> 22:14.260
返回授钱码的时候

22:14.260 --> 22:16.260
我们直接的啊

22:16.260 --> 22:17.260
就是

22:17.260 --> 22:19.260
还返回了一个什么呢

22:19.260 --> 22:20.260
reverse token

22:20.260 --> 22:21.260
也就是说

22:21.260 --> 22:22.260
不光给你返回

22:22.260 --> 22:23.260
我们这个token

22:23.260 --> 22:25.260
其实还是有一个reverse token的

22:25.260 --> 22:26.260
所以说呢

22:26.260 --> 22:27.260
也就是说

22:27.260 --> 22:28.260
OS2.0呢

22:28.260 --> 22:29.260
它允许用户

22:29.260 --> 22:30.260
自动更新令牌

22:30.260 --> 22:31.260
哪实现呢

22:31.260 --> 22:32.260
其实就是

22:32.260 --> 22:33.260
B网站

22:33.260 --> 22:34.260
在发令牌的时候

22:34.260 --> 22:35.260
也就是说

22:35.260 --> 22:36.260
它把令牌给发给你的时候

22:36.260 --> 22:37.260
它一次性

22:37.260 --> 22:39.260
会颁发给你两个令牌

22:39.260 --> 22:40.260
一个呢

22:40.260 --> 22:41.260
就是用于获取数据的

22:41.260 --> 22:43.260
也就是我们那个token

22:43.260 --> 22:44.260
另一个呢

22:44.260 --> 22:46.260
就是用于获取新令牌的

22:46.260 --> 22:49.260
然后呢reverse token自动

22:49.260 --> 22:50.260
那如果说

22:50.260 --> 22:51.260
令牌到期之后

22:51.260 --> 22:52.260
我们啊

22:52.260 --> 22:55.260
就会发起一个reverse

22:55.260 --> 22:57.260
token去请求

22:57.260 --> 22:58.260
那这个请求呢

22:58.260 --> 22:59.260
指的就是

22:59.260 --> 23:01.260
我们去更新令牌

23:01.260 --> 23:02.260
那这个呢

23:02.260 --> 23:03.260
其实就是一个

23:03.260 --> 23:04.260
更新令牌的请求

23:04.260 --> 23:05.260
grant type呢

23:05.260 --> 23:06.260
代表着我们

23:06.260 --> 23:09.260
这次是要进行令牌的更新

23:09.260 --> 23:10.260
那看到这样

23:10.260 --> 23:11.260
我们已经知道grant type

23:11.260 --> 23:12.260
其实是有

23:12.260 --> 23:14.260
一二三四五

23:14.260 --> 23:15.260
五种形式了

23:15.260 --> 23:16.260
对不对

23:16.260 --> 23:17.260
然后这个

23:17.260 --> 23:18.260
同学们知道一下

23:18.260 --> 23:19.260
然后client ID呢

23:19.260 --> 23:20.260
代表着我

23:20.260 --> 23:22.260
当前的这个用户标识

23:22.260 --> 23:23.260
对不对

23:23.260 --> 23:24.260
包括client security

23:24.260 --> 23:26.260
然后这个应用的一个

23:26.260 --> 23:27.260
密码

23:27.260 --> 23:28.260
这个里面是都有的

23:28.260 --> 23:29.260
表示确认身份的

23:29.260 --> 23:31.260
其实这个就是reverse token

23:31.260 --> 23:32.260
参数

23:32.260 --> 23:33.260
这个参数呢

23:33.260 --> 23:35.260
就是我们获取到的这个

23:35.260 --> 23:36.260
更新令牌的

23:36.260 --> 23:38.260
一个我们指定的

23:38.260 --> 23:40.260
刚才存储的那个令牌

23:40.260 --> 23:41.260
如果说必网站

23:41.260 --> 23:42.260
通过验证之后

23:42.260 --> 23:45.260
就会颁发一个新的令牌

23:45.260 --> 23:46.260
那这样呢

23:46.260 --> 23:47.260
就保证了

23:47.260 --> 23:48.260
我们呢省掉了

23:48.260 --> 23:49.260
比如说

23:49.260 --> 23:50.260
我们获取收钱码

23:50.260 --> 23:51.260
这一个环节

23:51.260 --> 23:52.260
因为有些时候

23:52.260 --> 23:54.260
其实我们是没有必要

23:54.260 --> 23:56.260
再重新跑一遍流程的

23:56.260 --> 23:57.260
这个呢

23:57.260 --> 23:58.260
同学们知道一下

23:58.260 --> 23:59.260
好的

23:59.260 --> 24:00.260
那这个呢

24:00.260 --> 24:02.260
就是我们四种

24:02.260 --> 24:05.260
使用令牌获取的这一形式

24:05.260 --> 24:06.260
然后重点呢

24:06.260 --> 24:08.260
我们还是掌握这种

24:08.260 --> 24:09.260
授权码的形式

24:09.260 --> 24:10.260
而且一会呢

24:10.260 --> 24:11.260
我们接下来

24:11.260 --> 24:12.260
实现案例的时候

24:12.260 --> 24:13.260
也是通过这种

24:13.260 --> 24:14.260
授权码的形式

24:14.260 --> 24:16.260
来进行这个案例的实现

24:16.260 --> 24:17.260
而且你可以看

24:17.260 --> 24:18.260
其实好多网站

24:18.260 --> 24:20.260
几乎都是用这种

24:20.260 --> 24:21.260
授权码的形式

24:21.260 --> 24:22.260
来进行实现的

24:22.260 --> 24:23.260
好的

24:23.260 --> 24:24.260
那这几个就到这里

