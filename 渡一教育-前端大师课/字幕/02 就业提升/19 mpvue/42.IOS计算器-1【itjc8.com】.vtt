WEBVTT

00:00.110 --> 00:02.790
好 我们这节课给大家讲解一下

00:02.790 --> 00:05.910
我们制作一个简易的一个计算剂

00:05.910 --> 00:10.310
基本上很像我们的iOS的一个计算剂的显示形状

00:11.310 --> 00:14.550
功能上面的基本上加点整处

00:14.550 --> 00:16.390
这些都有 包括看到吗

00:16.390 --> 00:17.990
然后轻平也有

00:17.990 --> 00:20.510
然后我们还有回退按钮

00:22.030 --> 00:23.350
还有回退按钮

00:23.350 --> 00:25.870
以及我们还有历史

00:25.870 --> 00:27.910
我们有一个历史的界面

00:27.910 --> 00:30.030
基本上完成这样一个

00:30.030 --> 00:31.510
那么我们这个势力呢

00:31.510 --> 00:36.030
主要是一个布局和一个计算的逻辑

00:36.030 --> 00:39.110
这上面会有一些比较重点的部分

00:39.110 --> 00:41.150
或者说是测重点的内容

00:41.150 --> 00:47.540
我们开始来讲解一下这部分的一个开发

00:47.540 --> 00:49.900
首先依然创建一个新项目

00:49.900 --> 00:58.100
然后我们这边来启动一下

00:58.100 --> 00:58.700
正常启动

00:59.900 --> 01:06.620
然后我们现在对它简单配置一下

01:06.620 --> 01:18.450
iOS计算器

01:18.450 --> 01:31.860
新鲜页面

01:31.860 --> 01:35.550
Mand-js

01:35.550 --> 01:44.080
index.vue

01:44.080 --> 01:46.000
从下面搬过来

01:46.000 --> 01:47.920
我们从下面搬过来

01:49.880 --> 02:38.080
vue框架

02:38.080 --> 02:40.280
好 我们把框架当好

02:40.280 --> 02:43.680
首先我们要把这个界面给搭出来

02:43.680 --> 02:46.360
作为我们的计算器来讲

02:46.360 --> 02:50.120
它的界面还算是有一定的布局

02:50.120 --> 02:51.320
但是比较

02:51.320 --> 02:54.120
它的桌面它是有比较多的三部分内容

02:54.120 --> 02:55.960
第一部分是上面的显示

02:55.960 --> 02:58.680
第二部分是下面的那个按键

02:58.680 --> 02:59.520
对吧

02:59.520 --> 03:04.160
那么按键里面还分成就是数字键和它的一个功能键

03:04.160 --> 03:11.180
我们来做个布局吧

03:11.180 --> 03:15.980
container

03:15.980 --> 03:22.740
首先是显示那一块吗

03:22.740 --> 03:23.900
直接不要用最大的了

03:23.900 --> 03:25.220
我们自己订一个container

03:27.140 --> 03:28.460
然后显示这一块

03:28.460 --> 03:29.460
然后的话呢

03:29.460 --> 03:30.460
这边我们写成

03:32.420 --> 03:33.780
layout

03:33.780 --> 03:36.820
top

03:36.820 --> 03:49.660
在里面写的是crain屏幕

03:49.660 --> 03:53.380
我们写上一个自己的屏幕的一个数值

03:53.380 --> 03:55.460
这是显示

03:55.460 --> 04:02.010
区域

04:02.010 --> 04:04.650
这是按钮

04:04.650 --> 04:13.810
布局

04:13.810 --> 04:15.210
layout

04:15.210 --> 04:23.020
button

04:23.020 --> 04:23.700
btn

04:25.380 --> 04:26.660
我们分组

04:26.660 --> 04:27.820
按钮组来做

04:29.500 --> 04:31.100
我们里边写上的是

04:31.100 --> 04:31.940
每一个按钮

04:31.940 --> 04:33.820
首先我们都把它利用dj为

04:33.820 --> 04:35.500
这是一个item

04:35.540 --> 04:36.300
然后呢

04:36.300 --> 04:37.620
我们最外层的

04:37.620 --> 04:39.260
你们再来看一下

04:39.260 --> 04:43.130
我们从最外层来看

04:43.130 --> 04:44.530
这个就不用管了

04:44.530 --> 04:46.090
我们从最外层的来看的话

04:46.090 --> 04:47.250
它后面是一层

04:48.890 --> 04:49.930
橘红色

04:49.930 --> 04:50.770
这个呢

04:50.770 --> 04:52.210
再是一个蓝色

04:53.410 --> 04:55.410
所以对于一个按钮的样式

04:55.410 --> 04:57.530
是除了我们的item以外

04:57.530 --> 05:01.010
我们再给它叫一个orange

05:01.010 --> 05:05.200
橘红色

05:05.200 --> 05:06.120
然后它呢

05:06.120 --> 05:08.160
我们怎么样能够去做到

05:08.160 --> 05:11.360
让它的一个那个叫做数据

05:11.360 --> 05:12.760
它究竟里面填什么呢

05:12.760 --> 05:14.040
或者说这样的格式呢

05:14.040 --> 05:15.400
我们主要

05:15.400 --> 05:17.080
显示你可以在这

05:17.080 --> 05:19.320
比如说这是一个清除键

05:19.320 --> 05:21.640
但是我们有时候需要按键对吧

05:21.640 --> 05:22.480
按键的话呢

05:22.480 --> 05:27.540
我们一定做的是

05:27.540 --> 05:29.820
按键做的是click

05:29.820 --> 05:35.360
然后我们写的是clickbtn

05:35.360 --> 05:36.120
然后呢

05:36.120 --> 05:37.560
我们写上一个id

05:38.880 --> 05:40.960
这个id我们要

05:40.960 --> 05:42.520
基本上给它传给它吧

05:42.560 --> 05:44.800
我们通过id的方式传给它吧

05:44.800 --> 05:45.800
比如说

05:45.800 --> 05:47.720
我默认写个C

05:47.720 --> 05:49.040
我默认写个C

05:49.040 --> 05:50.000
代表的是

05:50.000 --> 05:50.880
我们点按钮以后

05:50.880 --> 05:52.760
我们可以得到一个C

05:52.760 --> 05:56.060
这样一个值

05:56.060 --> 05:57.900
我们把这个值定在内部也可以

05:57.900 --> 05:59.020
我们先这么写着

05:59.020 --> 06:00.340
然后第二步继续来

06:02.260 --> 06:04.540
这是属于第一行那个C按钮

06:04.540 --> 06:11.820
然后第二再来item

06:11.820 --> 06:16.630
orange

06:16.630 --> 06:19.660
click

06:19.660 --> 06:20.740
click

06:20.740 --> 06:21.940
btn

06:21.940 --> 06:26.190
这边我们给上

06:26.190 --> 06:28.830
比如说这边我们给一个B

06:30.590 --> 06:31.270
然后呢

06:31.270 --> 06:32.790
这边是一个键头

06:34.190 --> 06:35.590
这边是一个键头符

06:36.430 --> 06:37.030
那么键头呢

06:37.030 --> 06:38.350
我到word里面去

06:38.350 --> 06:40.990
我们到word里面复制一个出来

06:40.990 --> 06:41.990
类似于这样一个

06:41.990 --> 06:45.470
word里咱们可以复

06:45.470 --> 06:46.430
这个拿好以后呢

06:46.430 --> 06:53.060
我们下面再做一个history

06:53.060 --> 06:54.100
我们做个history

06:55.620 --> 06:56.780
这个就待会给

06:56.780 --> 06:58.900
我们这边给的是history

06:58.900 --> 06:59.940
我们依然

06:59.940 --> 07:02.700
我们去到我们的图标里面

07:02.700 --> 07:04.180
我们history拿图标来做

07:04.180 --> 07:04.580
history

07:04.580 --> 07:06.940
你没法从word里复制了

07:06.940 --> 07:07.700
我们icon

07:08.780 --> 07:13.360
我们给一个icon图标

07:13.360 --> 07:14.640
拿出来

07:14.640 --> 07:15.200
然后呢

07:15.200 --> 07:16.200
我们在这里边

07:16.200 --> 07:17.600
我们给出你所

07:17.600 --> 07:21.040
你能够看到这个图标的格式

07:21.040 --> 07:21.560
这边呢

07:21.560 --> 07:22.400
我们之后

07:22.400 --> 07:25.080
我们给我们icon type

07:25.080 --> 07:25.920
我们可以这样

07:27.200 --> 07:28.480
这个作为变量

07:28.480 --> 07:29.480
我们待会来给它

07:30.240 --> 07:32.320
然后它的颜色

07:32.320 --> 07:36.040
图标的本身的颜色

07:37.040 --> 07:38.520
我们依然

07:38.520 --> 07:41.520
我们通过icon

07:41.520 --> 07:44.200
cutter的方式来给字体

07:44.200 --> 07:53.060
然后的class icon

07:53.060 --> 07:55.950
这边呢

07:55.950 --> 07:58.950
我们就icon里边就不给内容了

07:59.950 --> 08:01.750
这是一个图标

08:01.750 --> 08:02.750
咱们再来

08:02.750 --> 08:03.750
再下去呢

08:03.750 --> 08:05.350
就是我们的开始

08:05.350 --> 08:06.750
旁边的数列开始

08:06.750 --> 08:07.750
第一个加号

08:07.750 --> 08:12.410
开始做一个加号

08:12.410 --> 08:14.410
然后加号的结构是一样的

08:14.410 --> 08:15.410
item

08:15.410 --> 08:18.040
orange

08:18.040 --> 08:20.540
click

08:21.540 --> 08:23.540
click btn

08:24.540 --> 08:25.540
id

08:25.540 --> 08:28.620
id

08:28.620 --> 08:30.620
然后它的加号呢

08:30.620 --> 08:31.620
我们给一个

08:31.620 --> 08:33.620
叫做add

08:33.620 --> 08:35.620
形成一个加号

08:35.620 --> 08:39.150
一排

08:39.150 --> 08:41.150
我们把第一排定在这

08:41.150 --> 08:42.150
然后切下去

08:42.150 --> 08:43.150
第二排

08:43.150 --> 08:52.440
第二排

08:53.440 --> 08:54.440
第二排呢

08:54.440 --> 08:59.520
我们把它复制一下修改

08:59.520 --> 09:00.520
把这个改掉

09:00.520 --> 09:02.520
我们改成blue

09:02.520 --> 09:03.520
蓝色按钮

09:03.520 --> 09:05.520
那么这个值呢

09:05.520 --> 09:06.520
我们想一下

09:06.520 --> 09:07.520
应该从第二排开始

09:07.520 --> 09:08.520
应该是个9

09:08.520 --> 09:09.520
对吧

09:09.520 --> 09:13.220
应该是个9

09:13.220 --> 09:14.220
再来

09:14.220 --> 09:17.780
这边是一个blue

09:17.780 --> 09:18.780
然后第二个

09:18.780 --> 09:19.780
往9

09:19.780 --> 09:20.780
往旁边的

09:20.780 --> 09:21.780
应该是个8

09:21.780 --> 09:24.670
再往旁边

09:24.670 --> 09:30.480
应该是个7

09:30.480 --> 09:31.480
再往旁边是什么

09:31.480 --> 09:33.480
不是6

09:33.480 --> 09:37.180
我们应该用的是oranger

09:37.180 --> 09:38.180
oranger出来

09:38.180 --> 09:39.180
它应该是什么

09:39.180 --> 09:41.180
应该是个减号

09:41.180 --> 09:43.180
它应该是个减号

09:43.180 --> 09:46.830
好了

09:46.830 --> 09:47.830
这一组也好了

09:47.830 --> 09:48.830
就这样的话呢

09:48.830 --> 09:52.850
我们把下面的也写一下

09:52.850 --> 09:53.850
下面依然是

09:53.850 --> 09:54.850
三个blue

09:54.850 --> 09:55.850
一个oranger

09:55.850 --> 09:57.850
那么这边就是6

09:57.850 --> 10:01.160
这边来个5

10:01.160 --> 10:04.470
这边来个4

10:05.470 --> 10:06.470
这边是啥

10:06.470 --> 10:07.470
乘号

10:07.470 --> 10:13.560
再来

10:13.560 --> 10:15.560
下面还有一排

10:15.560 --> 10:20.180
三个blue

10:20.180 --> 10:21.180
一个oranger

10:21.180 --> 10:23.180
然后这边是3

10:23.180 --> 10:24.180
2

10:24.180 --> 10:25.180
1

10:25.180 --> 10:26.180
1

10:26.180 --> 10:27.180
2

10:27.180 --> 10:28.180
3

10:28.180 --> 10:30.180
这边应该是一个除号

10:30.180 --> 10:31.180
除的话

10:31.180 --> 10:32.180
我也是一样

10:32.180 --> 10:33.180
到word中

10:33.180 --> 10:34.180
我们去复制一个

10:34.180 --> 10:35.180
出来

10:35.180 --> 10:36.180
除

10:38.180 --> 10:39.180
这个的话

10:39.180 --> 10:41.180
我们就不用那个符号了

10:41.180 --> 10:43.180
我们就用一个英文单词

10:43.180 --> 10:44.180
比如说

10:45.180 --> 10:46.180
davit

10:46.180 --> 10:48.180
div来表示

10:48.180 --> 10:49.180
再往下

10:49.180 --> 10:51.180
你说老师没有了吧

10:51.180 --> 10:52.180
有

10:52.180 --> 10:58.390
还有一组

10:58.390 --> 10:59.390
btngroup

10:59.390 --> 11:02.730
来

11:02.730 --> 11:04.730
我们把

11:04.730 --> 11:05.730
先复制

11:05.730 --> 11:07.730
蓝色下来

11:07.730 --> 11:08.730
但是蓝色呢

11:08.730 --> 11:09.730
它其实这个是0

11:09.730 --> 11:10.730
所以z

11:10.730 --> 11:11.730
1

11:11.730 --> 11:12.730
r2

11:12.730 --> 11:13.730
我们还加个0

11:13.730 --> 11:15.730
那么这边是0

11:15.730 --> 11:17.730
这边也来个0

11:18.730 --> 11:22.360
紧接着我们再来

11:22.360 --> 11:24.360
这边就不是了

11:24.360 --> 11:26.360
这边按有按下去

11:26.360 --> 11:27.360
这边是什么的

11:27.360 --> 11:28.360
点

11:29.360 --> 11:30.360
是一个点

11:30.360 --> 11:34.180
所以我们就写个d

11:34.180 --> 11:35.180
再来一个

11:35.180 --> 11:37.180
这边是一个oranger

11:37.180 --> 11:39.180
我们拿它来复制

11:40.180 --> 11:41.180
那么它是什么

11:41.180 --> 11:42.180
等于

11:42.180 --> 11:45.580
咱们写上

11:45.580 --> 11:46.580
equial

11:46.580 --> 11:47.580
对吧

11:47.580 --> 11:48.580
好

11:48.580 --> 11:51.580
我们基本上把一个大概的

11:51.580 --> 11:53.580
排版的

11:53.580 --> 11:55.580
模板结构给写好了

11:55.580 --> 11:56.580
那么接下去呢

11:56.580 --> 11:58.580
我们开始把它的样式定一下

11:58.580 --> 12:04.610
content

12:06.610 --> 12:07.610
height

12:08.610 --> 12:09.610
百分百

12:10.610 --> 12:11.610
display

12:11.610 --> 12:12.610
flex

12:13.610 --> 12:14.610
flex

12:14.610 --> 12:15.610
direction

12:16.610 --> 12:17.610
colon

12:17.610 --> 12:18.610
诶,colon

12:18.610 --> 12:22.580
再来

12:23.580 --> 12:24.580
align

12:24.580 --> 12:25.580
item

12:26.580 --> 12:27.580
center

12:28.580 --> 12:30.580
background color

12:30.580 --> 12:32.580
我们给的是

12:32.580 --> 12:33.580
ccc

12:33.580 --> 12:34.580
以及

12:34.580 --> 12:36.580
overflow

12:36.580 --> 12:38.580
在x轴上面

12:39.580 --> 12:41.580
在x轴上面

12:41.580 --> 12:42.580
我们做一个

12:42.580 --> 12:43.580
hidden

12:43.580 --> 12:48.050
layout

12:48.050 --> 12:49.050
put

12:49.050 --> 12:52.940
宽度

12:52.940 --> 12:56.500
百分百

12:56.500 --> 12:58.500
merge button

12:58.500 --> 13:00.500
给它32px

13:00.500 --> 13:03.880
layout

13:03.880 --> 13:07.020
button

13:07.020 --> 13:12.660
我们给的是

13:12.660 --> 13:14.660
宽度

13:14.660 --> 13:15.660
百分百

13:15.660 --> 13:18.420
screen

13:18.420 --> 13:22.120
textonline

13:22.120 --> 13:24.690
right

13:24.690 --> 13:30.560
light height

13:31.560 --> 13:32.560
我们做的是

13:32.560 --> 13:34.560
260相速

13:34.560 --> 13:36.560
旁边离开一点

13:36.560 --> 13:37.560
我们做一个

13:37.560 --> 13:38.560
零

13:38.560 --> 13:40.560
10个相速

13:40.560 --> 13:41.560
然后

13:41.560 --> 13:42.560
font

13:42.560 --> 13:43.560
wait

13:44.560 --> 13:45.560
border

13:45.560 --> 13:47.560
fontwaitborder

13:47.560 --> 13:51.060
做初体

13:51.060 --> 13:52.060
再来

13:52.060 --> 13:54.060
fontsize

13:54.060 --> 13:55.060
我们给的是

13:55.060 --> 13:57.060
60个相速

13:57.060 --> 13:59.060
我们给120吧,这样写

14:00.060 --> 14:01.060
60个

14:01.060 --> 14:03.060
然后

14:03.060 --> 14:05.060
box sign

14:05.060 --> 14:07.060
我们给的是

14:07.060 --> 14:09.060
borderbox

14:09.060 --> 14:11.060
bordertop

14:11.060 --> 14:13.060
我们给的是

14:13.060 --> 14:15.060
2rpx

14:15.060 --> 14:17.060
solid

14:17.060 --> 14:18.060
fff

14:18.060 --> 14:20.060
按钮

14:20.060 --> 14:21.060
阻别

14:21.060 --> 14:26.170
display

14:26.170 --> 14:28.170
flex

14:28.170 --> 14:30.170
flex direction

14:30.170 --> 14:32.170
我们设置成它是行

14:32.170 --> 14:34.170
然后它里面每一个

14:34.170 --> 14:36.170
我们都要称满整个屏幕

14:36.170 --> 14:38.170
整个的宽度

14:38.170 --> 14:40.170
我们都做成百分百

14:40.170 --> 14:42.170
高度小一点

14:42.170 --> 14:46.060
我们做成5rpm

14:46.060 --> 14:50.070
做个背景色

14:50.070 --> 14:52.070
白色

14:52.070 --> 14:54.070
然后里面不是我们每一

14:54.070 --> 14:58.090
按钮都是个item吧

14:58.090 --> 14:59.090
每个item

14:59.090 --> 15:00.090
25%

15:00.090 --> 15:02.090
因为百分百嘛

15:02.090 --> 15:03.090
display

15:03.090 --> 15:07.490
flex

15:07.490 --> 15:09.490
flex direction

15:09.490 --> 15:11.490
flex direction

15:11.490 --> 15:13.490
我们做成

15:13.490 --> 15:17.570
colon

15:17.570 --> 15:19.570
just a contenter

15:19.570 --> 15:21.570
center

15:21.570 --> 15:23.570
align item

15:23.570 --> 15:25.570
center

15:25.570 --> 15:29.460
mergent top

15:29.460 --> 15:31.460
2rpx

15:31.460 --> 15:33.460
离开一点点

15:33.460 --> 15:35.460
那么当然再做一个mergent right

15:35.460 --> 15:39.280
我们给的是2rpx

15:39.280 --> 15:43.040
item

15:43.040 --> 15:44.040
active

15:44.040 --> 15:45.040
点击的时候

15:45.040 --> 15:49.570
backgrounder

15:49.570 --> 15:50.570
color

15:50.570 --> 15:52.570
给它一个红色

15:52.570 --> 16:01.480
我们不是有个zero吗

16:01.480 --> 16:04.480
zero的宽度我们给到50%

16:05.480 --> 16:09.940
有oranger吗

16:09.940 --> 16:10.940
oranger

16:10.940 --> 16:12.940
oranger的字体

16:12.940 --> 16:14.940
我们也是

16:14.940 --> 16:16.940
奶白色我们给一个

16:16.940 --> 16:17.940
f1

16:17.940 --> 16:19.940
f4

16:19.940 --> 16:21.940
19

16:21.940 --> 16:23.940
然后

16:23.940 --> 16:27.700
backgrounder color

16:27.700 --> 16:28.700
f78

16:28.700 --> 16:29.700
d1d

16:29.700 --> 16:31.700
给一个这样的

16:31.700 --> 16:36.230
oranger色调

16:36.230 --> 16:38.230
white

16:38.230 --> 16:40.230
加粗

16:40.230 --> 16:42.230
加粗

16:42.230 --> 16:44.230
然后

16:44.230 --> 16:46.230
我们有一个蓝色的按钮

16:46.230 --> 16:47.230
blue

16:47.230 --> 16:52.460
颜色我们给上的是

16:52.460 --> 16:53.460
d9

16:53.460 --> 16:54.460
ef7

16:54.460 --> 17:00.020
然后

17:00.020 --> 17:02.020
backgrounder color

17:02.020 --> 17:04.020
我们给的是

17:04.020 --> 17:06.020
0095

17:06.020 --> 17:08.020
cd

17:08.020 --> 17:09.020
以及

17:09.020 --> 17:11.020
icon

17:11.020 --> 17:12.020
button

17:12.020 --> 17:15.390
icon button

17:15.390 --> 17:17.390
display flex

17:17.390 --> 17:23.970
icon

17:23.970 --> 17:27.280
display flex

17:27.280 --> 17:32.320
align item

17:32.320 --> 17:35.320
center

17:35.320 --> 17:37.320
wise

17:37.320 --> 17:39.320
百分百

17:39.320 --> 17:41.320
just a contender

17:41.320 --> 17:42.320
center

17:42.320 --> 17:44.320
好我们基本上给了这几个

17:44.320 --> 17:45.320
我们等会来看一下

17:45.320 --> 17:47.320
现在页面呈现什么样

17:47.320 --> 17:48.320
因为我们还没打开

17:48.320 --> 17:50.320
我们的微信小城市

17:50.320 --> 17:51.320
我们现在的话呢

17:51.320 --> 17:53.320
打开一下

17:53.320 --> 17:54.320
重启一下

17:54.320 --> 17:56.320
因为刚才我们

17:56.320 --> 17:58.320
新建页面以后没有重启过

17:58.320 --> 18:01.320
所以他需要进行编译

18:01.320 --> 18:03.320
让他重启一下

18:03.320 --> 18:05.320
我们在dist里面去看一下

18:05.320 --> 18:07.320
这个有没有

18:07.320 --> 18:09.320
对吧现在有了

18:09.320 --> 18:11.320
现在我们再去打开

18:11.320 --> 18:16.170
现在的微信小城市

18:16.170 --> 18:17.170
就是这个

18:17.170 --> 18:19.860
打开

18:19.860 --> 18:39.970
好

18:39.970 --> 18:41.970
基本上的一个结构

18:41.970 --> 18:42.970
下面出来了

18:42.970 --> 18:43.970
下面出来了

18:43.970 --> 18:45.970
就是上面显示这一块还没有好

18:45.970 --> 18:46.970
对吧

18:46.970 --> 18:47.970
调整一下就可以了

18:47.970 --> 18:49.970
这上面的图标还没出来

18:49.970 --> 18:50.970
其他的话

18:50.970 --> 18:53.970
颜色和排版位置都ok了

18:53.970 --> 18:54.970
零比较大

18:54.970 --> 18:55.970
这个

18:55.970 --> 18:57.970
我们把上面调一下

18:57.970 --> 18:59.970
我们把screen

18:59.970 --> 19:01.970
刚才我们是没有定他的高度

19:01.970 --> 19:02.970
然后定行高度以后

19:02.970 --> 19:04.970
他这边就有了

19:04.970 --> 19:05.970
然后下面这个呢

19:05.970 --> 19:06.970
我们在这儿

19:06.970 --> 19:08.970
我们直接把它的高度设置成

19:08.970 --> 19:09.970
不要动态了

19:09.970 --> 19:11.970
我们直接把设成200rpx

19:11.970 --> 19:12.970
那这样的话呢

19:12.970 --> 19:15.970
这页面的基本上就形成我们要的结构了

19:15.970 --> 19:16.970
ok

19:16.970 --> 19:17.970
我们改两个东西

19:17.970 --> 19:18.970
加了一个height

19:18.970 --> 19:20.970
然后改一个我们的

19:20.970 --> 19:21.970
这块内容

19:21.970 --> 19:23.970
高度200

19:23.970 --> 19:25.970
页面已经搭建完成了

19:25.970 --> 19:26.970
那么现在的话

19:26.970 --> 19:27.970
我们看到

19:27.970 --> 19:28.970
上面数字也有了

19:28.970 --> 19:31.970
那么有些变量数据的话

19:31.970 --> 19:34.970
我们应该把它预先的填充进去了

19:34.970 --> 19:35.970
那么首先

19:35.970 --> 19:38.970
我们得回到我们的代码中

19:38.970 --> 19:40.970
我们看到最上面

19:40.970 --> 19:43.970
我们有一个 spring data

19:43.970 --> 19:45.970
所以我们应该在这里边

19:45.970 --> 19:47.970
给他放上默认

19:47.970 --> 19:48.970
打开的时候

19:48.970 --> 19:49.970
就是零

19:49.970 --> 19:50.970
对吧

19:50.970 --> 19:52.970
我们打开的时候应该是零

19:52.970 --> 19:54.970
那么除了这个变量以外

19:54.970 --> 19:55.970
我们还有哪些变量

19:55.970 --> 19:57.970
需要在这个里面设置呢

19:57.970 --> 19:58.970
你想象一下

19:58.970 --> 20:00.970
计算数据的话

20:00.970 --> 20:02.970
他需要哪些值

20:02.970 --> 20:07.730
比如说屏幕显示是零

20:07.730 --> 20:09.730
还有什么

20:09.730 --> 20:11.730
我们要写一个ary

20:11.730 --> 20:13.730
现在正在计算

20:13.730 --> 20:16.300
正在记录的

20:16.300 --> 20:18.300
比如说1加5

20:18.300 --> 20:20.300
这个1加5放在哪里

20:20.300 --> 20:21.300
然后还有呢

20:21.300 --> 20:22.300
就是现在的日制

20:22.300 --> 20:25.300
我们还有个日制记录放在哪里

20:25.300 --> 20:27.300
形成这样的一个结构

20:27.300 --> 20:28.300
那么同时呢

20:28.300 --> 20:29.300
我们说一下

20:29.300 --> 20:31.300
我们现在在点击

20:31.300 --> 20:33.300
某个按钮的时候

20:33.300 --> 20:34.300
因为

20:34.300 --> 20:36.300
你现在在界面上面

20:36.300 --> 20:38.300
你点击的按钮都叫做click button

20:38.300 --> 20:40.300
那么每点击一个按钮的时候

20:40.300 --> 20:42.300
我们怎么让他知道

20:42.300 --> 20:43.300
你点了哪个呢

20:43.300 --> 20:44.300
我们这边有个id

20:44.300 --> 20:45.300
我们看一下

20:45.300 --> 20:47.300
如果我点击这个click button的时候

20:47.300 --> 20:48.300
是不是这个id

20:48.300 --> 20:50.300
我直接能够获取到

20:50.300 --> 20:52.300
以前我们说我们的data id

20:52.300 --> 20:53.300
看一下啊

20:53.300 --> 20:54.300
这边我们来

20:54.300 --> 20:56.300
我们直接写

20:56.300 --> 21:00.890
这个事件

21:00.890 --> 21:01.890
然后这边呢

21:01.890 --> 21:03.890
我们接参

21:04.890 --> 21:06.890
我们来看到

21:06.890 --> 21:07.890
现在如果说

21:07.890 --> 21:09.890
我们这个click接餐以后

21:09.890 --> 21:10.890
能不能得到这个值

21:10.890 --> 21:14.460
我们来看这个e啊

21:14.460 --> 21:16.460
就是我没有写那个data

21:16.460 --> 21:18.460
微信能不能干到这事

21:18.460 --> 21:22.300
9

21:22.300 --> 21:23.300
我们来看啊

21:23.300 --> 21:24.300
id打开

21:24.300 --> 21:25.300
放大

21:25.300 --> 21:27.300
拉上来

21:27.300 --> 21:30.300
我们在他的target里面

21:30.300 --> 21:32.300
找一下

21:32.300 --> 21:34.300
有没有id等于9

21:34.300 --> 21:35.300
有吗

21:35.300 --> 21:36.300
有

21:36.300 --> 21:37.300
是不是这个值

21:37.300 --> 21:38.300
不知道

21:38.300 --> 21:39.300
我们再看一下其他的

21:39.300 --> 21:40.300
加号

21:42.300 --> 21:43.300
打开target

21:44.300 --> 21:45.300
看一下

21:45.300 --> 21:46.300
是不是我前面写的add

21:46.300 --> 21:48.300
咱们来看一下这边

21:48.300 --> 21:55.010
看着我们的

21:55.010 --> 21:56.010
这里

21:56.010 --> 21:58.010
是不是我们可以写到

21:58.010 --> 22:00.010
所以我们讲到的是

22:00.010 --> 22:01.010
在微信中

22:01.010 --> 22:02.010
我们可以用data传直

22:02.010 --> 22:03.010
那么在这边

22:03.010 --> 22:05.010
我们还可以直接用

22:05.010 --> 22:06.010
这样的方式

22:06.010 --> 22:07.010
直接接收

22:08.010 --> 22:09.010
这个方式

22:09.010 --> 22:10.010
也可以接收到

22:10.010 --> 22:12.010
这是属于我们的

22:12.010 --> 22:13.010
那个

22:13.010 --> 22:15.010
微信所给到的一种

22:15.010 --> 22:16.010
新的接收方式

22:16.010 --> 22:18.010
我们直接可以用这样的逻辑

22:18.010 --> 22:19.010
来完成

22:19.010 --> 22:20.010
那么这样的话

22:20.010 --> 22:22.010
我们现在根据这个值

22:22.010 --> 22:23.010
我们就能知道你点了

22:23.010 --> 22:24.010
什么按钮

22:24.010 --> 22:25.010
对吧

22:25.010 --> 22:26.010
然后我们比如说

22:26.010 --> 22:28.010
像这个是历史

22:28.010 --> 22:29.010
我们就history

22:30.010 --> 22:32.010
我们给他一个历史

22:32.010 --> 22:33.010
history

22:33.010 --> 22:34.010
然后的话呢

22:34.010 --> 22:35.010
这边adder

22:35.010 --> 22:36.010
这边是简

22:36.010 --> 22:37.010
对吧

22:37.010 --> 22:39.010
简的话我们称之为

22:39.010 --> 22:40.010
就给一个简号嘛

22:40.010 --> 22:41.010
history

22:41.010 --> 22:42.010
然后看只要有区分

22:42.010 --> 22:43.010
就可以

22:43.010 --> 22:45.580
这devi

22:45.580 --> 22:46.580
这个别有

22:46.580 --> 22:47.580
dv

22:47.580 --> 22:48.580
我们称之为

22:49.580 --> 22:50.580
然后这是equal

22:50.580 --> 22:51.580
equ

22:51.580 --> 22:52.580
这样

22:52.580 --> 22:53.580
OK吧

22:53.580 --> 22:54.580
那么这样的话

22:54.580 --> 22:55.580
我们就能知道

22:55.580 --> 22:56.580
你现在到底是

22:56.580 --> 22:58.580
做了哪一个操作

22:59.580 --> 23:01.580
回到我们的代码里面

23:01.580 --> 23:03.580
我们从这边来拿到

23:03.580 --> 23:07.720
它是属于

23:07.720 --> 23:10.720
target.id

23:10.720 --> 23:12.720
我们把这个值记录下来

23:12.720 --> 23:17.950
我们自己称之为

23:17.950 --> 23:18.950
这是id

23:18.950 --> 23:21.710
接着

23:21.710 --> 23:24.980
判断

23:25.980 --> 23:26.980
按键

23:26.980 --> 23:30.940
我们来判断按键

23:30.940 --> 23:34.020
如果

23:34.020 --> 23:35.020
这个id

23:37.020 --> 23:38.020
它等于

23:38.020 --> 23:39.020
我们说

23:39.020 --> 23:41.020
你按的是一个退革键

23:41.020 --> 23:42.020
我们给它一个

23:44.330 --> 23:45.330
退革键

23:45.330 --> 23:46.330
退革键是在这

23:46.330 --> 23:47.330
我们就是这边做一个

23:48.330 --> 23:49.330
back

23:50.330 --> 23:52.330
如果你按的这个键是back

23:52.330 --> 24:02.450
退革键

24:02.450 --> 24:08.300
那么我们下面要做的事情是

24:08.300 --> 24:14.380
以

24:14.380 --> 24:15.380
获取

24:15.380 --> 24:17.380
屏幕

24:17.380 --> 24:18.380
上的

24:18.380 --> 24:19.380
显示

24:19.380 --> 24:20.380
屏幕上显示

24:20.380 --> 24:21.380
就是这个

24:21.380 --> 24:26.450
屏幕

24:26.450 --> 24:27.450
显示的

24:27.450 --> 24:28.450
内容

24:28.450 --> 24:30.450
主要它不是属于

24:30.450 --> 24:31.450
计算值

24:31.450 --> 24:32.450
它是一个显示内容

24:32.450 --> 24:34.450
因为我们如果说1加5

24:34.450 --> 24:35.450
在没有点等号之前

24:35.450 --> 24:39.080
屏幕应该显示1加5

24:39.080 --> 24:40.080
获取屏幕的内容

24:40.080 --> 24:41.080
第一步

24:41.080 --> 24:48.360
this.screen

24:48.360 --> 24:50.360
我们一步分开来写

24:50.360 --> 24:53.360
如果你现在这个data

24:53.360 --> 24:54.360
它等于0

24:54.360 --> 24:56.360
我本身就是0了

24:56.360 --> 24:57.360
还回退

24:57.360 --> 24:58.360
所以我们直接就是

24:58.360 --> 24:59.360
终止掉它

24:59.360 --> 25:00.360
不让回退了

25:00.360 --> 25:01.360
没有这个东西了

25:02.360 --> 25:03.360
当然

25:03.360 --> 25:04.360
写return的时候的话

25:04.360 --> 25:06.360
我们就可以把它给审了

25:07.360 --> 25:09.360
把return直接放到后面

25:09.360 --> 25:12.440
再来

25:13.440 --> 25:15.440
如果现在不是最后一个

25:15.440 --> 25:17.440
显示是0的话

25:17.440 --> 25:20.440
主要做它的数据的

25:20.440 --> 25:21.440
substrate

25:22.440 --> 25:24.440
结取自付串

25:24.440 --> 25:26.440
从第一位开始

25:26.440 --> 25:27.440
到哪里呢

25:27.440 --> 25:29.440
到它的长度

25:30.440 --> 25:31.440
减1

25:31.440 --> 25:33.440
那是不是前面一位

25:33.440 --> 25:34.440
因为倒退的话

25:34.440 --> 25:36.440
肯定是减后面的第

25:36.440 --> 25:37.440
最后一个

25:37.440 --> 25:38.440
所以这个时候

25:38.440 --> 25:39.440
我们再把它拿下来

25:39.440 --> 25:41.440
存到data去

25:41.440 --> 25:42.440
你想

25:42.440 --> 25:44.440
如果里面是1加5

25:44.440 --> 25:46.440
那么在data里面所显示的

25:46.440 --> 25:48.440
肯定是1加5这个内容

25:48.440 --> 25:49.440
然后此时呢

25:49.440 --> 25:50.440
我们把它变成的是

25:50.440 --> 25:51.440
往前退一格

25:51.440 --> 25:52.440
所以这个时候

25:52.440 --> 25:54.440
data里面是1加

25:54.440 --> 25:55.440
应该是

25:55.440 --> 25:58.580
对吧

25:58.580 --> 25:59.580
我说

25:59.580 --> 26:02.920
从

26:03.920 --> 26:04.920
数组中

26:05.920 --> 26:10.320
从自付串中

26:10.320 --> 26:11.320
结取

26:11.320 --> 26:18.820
最后

26:18.820 --> 26:19.820
从自付串中

26:19.820 --> 26:20.820
结取到

26:21.820 --> 26:22.820
最后一个钱

26:22.820 --> 26:29.330
紧接着再来

26:29.330 --> 26:30.330
如果

26:30.330 --> 26:31.330
结取完以后

26:31.330 --> 26:33.330
就变0了

26:33.330 --> 26:36.830
你再来判断

26:36.830 --> 26:37.830
或者结取完以后

26:37.830 --> 26:38.830
根本就是空了

26:38.830 --> 26:39.830
我们说

26:39.830 --> 26:40.830
如果是结取完

26:40.830 --> 26:41.830
直接是空了

26:41.830 --> 26:42.830
就是你本来出了个1

26:42.830 --> 26:44.830
然后你解了一个

26:44.830 --> 26:45.830
回退

26:45.830 --> 26:46.830
那这时候

26:46.830 --> 26:47.830
屏幕上我们就显示一个0

26:47.830 --> 26:48.830
你想对吧

26:48.830 --> 26:49.830
你输了个1

26:49.830 --> 26:50.830
然后点了个回退欠

26:50.830 --> 26:55.380
那就变成0

26:55.380 --> 26:57.380
那么继续往下

26:57.380 --> 26:58.380
因为这里边

26:58.380 --> 26:59.380
设计到非常多的

26:59.380 --> 27:01.380
一个逻辑概念

27:01.380 --> 27:02.380
当你这个时候

27:02.380 --> 27:03.380
做好了以后

27:03.380 --> 27:04.380
那么很简单

27:04.380 --> 27:05.380
我们就把

27:05.380 --> 27:07.380
现在的这个

27:07.380 --> 27:08.380
我们放到屏幕上

27:10.380 --> 27:11.380
等于

27:11.380 --> 27:12.380
现在的这个

27:12.380 --> 27:13.380
data

27:13.380 --> 27:15.890
对吧

27:15.890 --> 27:16.890
这个结构

27:16.890 --> 27:17.890
好我们先来看一下

27:17.890 --> 27:22.700
效果

27:22.700 --> 27:25.140
0

27:25.140 --> 27:26.140
6

27:26.140 --> 27:28.140
我们这边还没做这个数字

27:28.140 --> 27:30.140
我们把数字先做上

27:30.140 --> 27:32.140
我们只做了一个back

27:32.140 --> 27:33.140
对吧

27:33.140 --> 27:34.140
我们还要把数字给加上

27:34.140 --> 27:35.140
看一下

27:35.140 --> 27:37.140
我们现在可以看一下屏幕

27:37.140 --> 27:38.140
现在屏幕上面的话

27:38.140 --> 27:40.140
你要现在显示的话

27:40.140 --> 27:42.140
它有会有一个问题

27:42.140 --> 27:43.140
就是

27:43.140 --> 27:45.140
我们没有去给它这个数值

27:45.140 --> 27:46.140
对吧

27:46.140 --> 27:47.140
那么我们很简单

27:47.140 --> 27:48.140
我们直接在上面

27:48.140 --> 27:49.140
我们给一个数值

27:49.140 --> 27:50.140
我们给一个6

27:50.140 --> 27:51.140
对吧

27:51.140 --> 27:52.140
给个6

27:52.140 --> 27:53.140
然后它接进来时候

27:53.140 --> 27:55.140
这边说是你只要点击了

27:55.140 --> 27:56.140
我们不用去点击

27:56.140 --> 27:57.140
我们只要进来以后

27:57.140 --> 27:58.140
它是back

27:58.140 --> 27:59.140
那么进来以后

27:59.140 --> 28:00.140
它获得屏幕上这个6

28:00.140 --> 28:01.140
对吧

28:01.140 --> 28:03.140
然后获得这个6的时候

28:03.140 --> 28:05.140
它这边开始做一个

28:05.140 --> 28:07.140
结取

28:07.140 --> 28:08.140
结取以后的话

28:08.140 --> 28:10.140
那么咱们就把这个

28:11.140 --> 28:12.140
你来看一下这个效果

28:12.140 --> 28:13.140
一旦输6以后

28:13.140 --> 28:14.140
你一点

28:14.140 --> 28:16.140
它立马会报个错

28:16.140 --> 28:18.140
是data.substream

28:18.140 --> 28:20.140
data.substream

28:20.140 --> 28:21.140
这样的一个东西

28:21.140 --> 28:23.140
这是什么原因造成的呢

28:23.140 --> 28:24.140
这个原因其实是

28:24.140 --> 28:26.140
你的substream

28:26.140 --> 28:28.140
你要操作的是一个字符串

28:28.140 --> 28:29.140
所以呢

28:29.140 --> 28:31.140
我这边给它加上

28:31.140 --> 28:33.140
加上一个字符串结构6

28:33.140 --> 28:35.450
那么ok

28:35.450 --> 28:37.450
这样加上去以后的话

28:37.450 --> 28:39.450
那我们现在再来做这个事情

28:39.450 --> 28:40.450
咱们看一下

28:40.450 --> 28:43.450
我把这个6加上字符串以后

28:43.450 --> 28:44.450
我什么都不点

28:44.450 --> 28:45.450
点这个

28:45.450 --> 28:46.450
是不是回零了

28:46.450 --> 28:47.450
对吧

28:47.450 --> 28:48.450
这个是我们这边

28:48.450 --> 28:49.450
要注意的一个点

28:49.450 --> 28:51.450
你如果说

28:51.450 --> 28:54.450
如果说你给了一个数字的话

28:54.450 --> 28:55.450
那么字符串函数

28:55.450 --> 28:57.450
是没法用的在这里边

28:57.450 --> 28:58.450
紧接着

28:58.450 --> 28:59.450
我们看

28:59.450 --> 29:00.450
我们的back

29:00.450 --> 29:01.450
这件事做好了

29:01.450 --> 29:02.450
紧接着

29:02.450 --> 29:03.450
我们接下去往下走

29:03.450 --> 29:04.450
注意

29:04.450 --> 29:06.450
那么这个要注意一下

29:06.450 --> 29:08.450
这个是你现在

29:08.450 --> 29:14.870
所点击按钮的

29:14.870 --> 29:19.180
各个数字集合

29:19.180 --> 29:21.180
数值集合

29:21.180 --> 29:24.180
所点击各个按钮的数值集合

29:24.180 --> 29:25.180
所以呢

29:25.180 --> 29:27.180
我们的所有操作

29:27.180 --> 29:28.180
特别是我们的

29:28.180 --> 29:30.180
加减乘除

29:30.180 --> 29:31.180
我们

29:31.180 --> 29:35.140
数字

29:35.140 --> 29:36.140
和

29:36.140 --> 29:37.140
符号

29:37.140 --> 29:39.140
计算符号

29:39.140 --> 29:41.140
那么我们就把

29:41.140 --> 29:42.140
这里边

29:42.140 --> 29:43.140
我们要去

29:43.140 --> 29:44.140
减掉一个

29:44.140 --> 29:45.140
注意一下

29:45.140 --> 29:46.140
这里边我们要去

29:46.140 --> 29:47.140
减掉一个

29:47.140 --> 29:48.140
它是一个数组

29:48.140 --> 29:49.140
所以呢

29:49.140 --> 29:51.140
我们的做法就是

29:51.140 --> 29:52.140
这样写

29:52.140 --> 29:59.140
this.data.ary.pop

29:59.140 --> 30:01.140
减掉一个

30:01.140 --> 30:02.140
紧接着

30:02.140 --> 30:03.140
我们继续来做

30:03.140 --> 30:04.140
如果说

30:04.140 --> 30:07.140
我们退到这一层

30:07.140 --> 30:08.140
如果说

30:08.140 --> 30:09.140
你现在id进来的

30:09.140 --> 30:11.140
是一个什么呢

30:11.140 --> 30:12.140
我们说是

30:12.140 --> 30:14.140
做一个清评

30:14.140 --> 30:15.140
这边做一个

30:15.140 --> 30:25.420
清评

30:25.420 --> 30:26.420
清评命令

30:26.420 --> 30:27.420
我们来看一下

30:27.420 --> 30:28.420
清评本身自己

30:28.420 --> 30:31.420
我们给了一个id的参数是啥

30:31.420 --> 30:33.420
是一个小c

30:33.420 --> 30:39.900
是一个小c

30:39.900 --> 30:40.900
如果你等于

30:40.900 --> 30:41.900
一个小c的话

30:41.900 --> 30:42.900
那么就代表

30:42.900 --> 30:44.900
你要把屏幕给清除

30:44.900 --> 30:45.900
屏幕清除的话呢

30:45.900 --> 30:50.870
我们这样做

30:50.870 --> 30:51.870
清评写上去了

30:51.870 --> 30:52.870
这里边了

30:52.870 --> 30:58.740
来看一下

30:58.740 --> 31:00.740
清评本身自己的话

31:00.740 --> 31:01.740
主要的事情是

31:01.740 --> 31:03.740
我们完成

31:03.740 --> 31:04.740
你现在显示屏幕上

31:04.740 --> 31:05.740
归零

31:05.740 --> 31:06.740
是不是

31:06.740 --> 31:07.740
就这件事

31:07.740 --> 31:11.740
然后this.screendata

31:11.740 --> 31:12.740
上面

31:12.740 --> 31:14.740
我们付一个自付串零上去

31:14.740 --> 31:17.740
付一个自付串零上去

31:17.740 --> 31:18.740
同时

31:18.740 --> 31:21.740
我们把data中的ary数据

31:21.740 --> 31:23.740
就是把这个ary数据

31:23.740 --> 31:24.740
这个不要

31:24.740 --> 31:25.740
我们把这个ary数据

31:25.740 --> 31:26.740
里面的长度

31:26.740 --> 31:27.740
全归零

31:27.740 --> 31:28.740
就把里面所有的清掉

31:28.740 --> 31:30.740
无论你前面做1加2

31:30.740 --> 31:31.740
2加3

31:31.740 --> 31:32.740
3×1这样的做法

31:32.740 --> 31:33.740
全部给清掉

31:33.740 --> 31:34.740
清掉的方式

31:34.740 --> 31:35.740
其实很简单

31:35.740 --> 31:37.740
清速组归零的方式

31:37.740 --> 31:39.740
只要把长度归零

31:39.740 --> 31:43.120
就可以了

31:43.120 --> 31:45.120
再来

31:45.120 --> 31:48.120
如果说你的屏幕上

31:48.120 --> 31:50.120
你去做了一个

31:50.120 --> 31:52.120
点击的时候

31:52.120 --> 31:55.880
你点了一个等于

31:55.880 --> 31:56.880
你点了一个等于

31:56.880 --> 31:58.880
就是我们说的是

31:58.880 --> 32:02.150
等于号呢

32:02.150 --> 32:03.150
我们是eq

32:03.150 --> 32:04.150
对吧

32:04.150 --> 32:05.150
我们解了一个

32:05.150 --> 32:06.150
eq u

32:06.150 --> 32:11.190
eq

32:11.190 --> 32:13.190
eq u

32:13.190 --> 32:15.190
那么这是等于操作

32:15.190 --> 32:18.890
如果你点了个等于

32:18.890 --> 32:19.890
那么首先

32:19.890 --> 32:21.890
我们做的第一件事情

32:21.890 --> 32:22.890
来看

32:22.890 --> 32:24.890
我们还是一样

32:24.890 --> 32:27.260
设定一遍量

32:27.260 --> 32:28.260
data

32:28.260 --> 32:30.260
我们把你现在的

32:30.260 --> 32:33.260
这个screen里面的东西拿下来

32:33.260 --> 32:35.260
screen里面基本上就是

32:35.260 --> 32:36.260
我如果做的1加2

32:36.260 --> 32:38.260
那么里面显示的就是1加2

32:39.260 --> 32:41.260
先判断一下

32:41.260 --> 32:43.260
如果data值

32:43.260 --> 32:45.260
它本身给我显示出来的

32:45.260 --> 32:46.260
你里面啥都没有

32:46.260 --> 32:47.260
你本身是个0

32:47.260 --> 32:49.260
然后你做了一个

32:49.260 --> 32:50.260
等于操作

32:50.260 --> 32:51.260
那我们就返回

32:51.260 --> 32:52.260
啥都不做

32:52.260 --> 32:55.260
然后下面就是计算

32:55.260 --> 32:57.260
下面开始做计算了

32:57.260 --> 32:59.260
是这样的一个

32:59.260 --> 33:00.260
那么计算的话

33:00.260 --> 33:01.260
首先第一点

33:01.260 --> 33:02.260
我们来

33:02.260 --> 33:03.260
计算本身自己

33:03.260 --> 33:05.260
这里边的值还比较多一点

33:05.260 --> 33:06.260
但是我们不做

33:06.260 --> 33:08.260
非常强大功能的

33:08.260 --> 33:09.260
首先

33:09.260 --> 33:10.260
第一点

33:10.260 --> 33:12.640
我们去

33:12.640 --> 33:14.640
把你现在的data数据拿出来

33:14.640 --> 33:16.950
注意一下

33:16.950 --> 33:19.950
我们拿data的最后一个数据

33:19.950 --> 33:21.950
跟着我来看

33:21.950 --> 33:22.950
cha

33:22.950 --> 33:23.950
at

33:23.950 --> 33:26.950
我们拿data的最后一个数据出来

33:26.950 --> 33:27.950
设定一遍量

33:27.950 --> 33:28.950
我们在里面

33:28.950 --> 33:30.950
叫lastword

33:30.950 --> 33:35.780
拿出它的最后一个数据

33:35.780 --> 33:36.780
如果

33:36.780 --> 33:38.780
最后一个数据

33:38.780 --> 33:40.780
判断是否是数字

33:40.780 --> 33:41.780
如果

33:41.780 --> 33:42.780
如果是数字

33:42.780 --> 33:43.780
它返回是force

33:43.780 --> 33:44.780
不是数字的话

33:44.780 --> 33:46.780
我们直接return掉

33:46.780 --> 33:48.780
也就是说不做

33:48.780 --> 33:50.780
你如果直接是1加

33:50.780 --> 33:51.780
然后等于

33:51.780 --> 33:52.780
那肯定是不做

33:52.780 --> 33:53.780
对吧

33:53.780 --> 33:54.780
我们把这个

33:54.780 --> 33:58.920
写上去

33:58.920 --> 33:59.920
紧接着

33:59.920 --> 34:00.920
我们来

34:00.920 --> 34:01.920
var

34:01.920 --> 34:03.920
设定一个数字遍量

34:03.920 --> 34:04.920
然后

34:04.920 --> 34:05.920
再设定一个

34:05.920 --> 34:07.920
最后一个符号

34:07.920 --> 34:13.240
我们要拿到

34:13.240 --> 34:17.260
最后拿一个符号下来

34:17.260 --> 34:18.260
当然这边的话

34:18.260 --> 34:19.260
我们都给let

34:19.260 --> 34:24.510
你来看一下

34:24.510 --> 34:26.510
我们把当前的

34:26.510 --> 34:28.510
array数据等于

34:28.510 --> 34:30.510
接下来是我们的

34:30.510 --> 34:32.510
把data里面

34:32.510 --> 34:33.510
把我们的array

34:33.510 --> 34:35.510
拿过来

34:35.510 --> 34:37.510
再设定一个

34:37.510 --> 34:41.170
我们把

34:41.170 --> 34:43.170
再设定一个数组

34:43.170 --> 34:46.170
是你现在的操作数组

34:46.170 --> 34:47.170
请看

34:47.170 --> 34:48.170
array里面

34:48.170 --> 34:49.170
刚才我们说了

34:49.170 --> 34:50.170
它存的是什么

34:50.170 --> 34:51.170
它存的

34:51.170 --> 34:52.170
就是你现在

34:52.170 --> 34:53.170
所有的一些

34:53.170 --> 34:55.170
比如说1加4

34:55.170 --> 34:56.170
那么1加4

34:56.170 --> 34:57.170
这三个内容

34:57.170 --> 34:58.170
分别以一个

34:58.170 --> 34:59.170
素组的一个

34:59.170 --> 35:00.170
值的方式

35:00.170 --> 35:01.170
存入在array中

35:01.170 --> 35:03.170
我们就循环

35:03.170 --> 35:05.990
开始来

35:05.990 --> 35:07.990
我们做的是let i

35:07.990 --> 35:12.010
in arry

35:12.010 --> 35:13.010
判断一下

35:13.010 --> 35:14.010
如果

35:14.010 --> 35:16.450
如果

35:16.450 --> 35:17.450
array里边

35:17.450 --> 35:19.450
这个值

35:19.450 --> 35:21.450
它不是数字

35:21.450 --> 35:22.450
也就是说

35:22.450 --> 35:23.450
它等于等于first

35:23.450 --> 35:27.850
这个时候的话

35:27.850 --> 35:28.850
我们现在

35:28.850 --> 35:29.850
就直接

35:29.850 --> 35:30.850
做下面这一块

35:30.850 --> 35:32.850
我们就把它的

35:32.850 --> 35:33.850
数字

35:33.850 --> 35:34.850
数字的话

35:34.850 --> 35:35.850
是等于弄

35:35.850 --> 35:39.860
我们把它放在外面来

35:39.860 --> 35:41.860
数字的话

35:41.860 --> 35:42.860
是

35:42.860 --> 35:43.860
数字

35:43.860 --> 35:46.240
很简单

35:46.240 --> 35:47.240
我们做number

35:47.240 --> 35:48.240
加等

35:48.240 --> 35:51.260
把这个值

35:51.260 --> 35:53.260
放到number中去

35:53.260 --> 35:57.080
不然的话

35:57.080 --> 35:58.080
那我们做

35:58.080 --> 35:59.080
后面的一件事了

35:59.080 --> 36:02.080
后面的事是这样的

36:02.080 --> 36:04.080
我们拿最后一个符号

36:04.080 --> 36:05.080
它肯定

36:05.080 --> 36:06.080
如果不是数字

36:06.080 --> 36:08.080
那一定就是符号

36:08.080 --> 36:11.840
把它的符号拿过来

36:11.840 --> 36:12.840
因为我说了

36:12.840 --> 36:13.840
array里面

36:13.840 --> 36:14.840
会存的是1加2

36:14.840 --> 36:15.840
三个东西

36:15.840 --> 36:16.840
1

36:16.840 --> 36:17.840
会放到这里边去

36:17.840 --> 36:18.840
进行追加

36:18.840 --> 36:19.840
然后

36:19.840 --> 36:20.840
后面个加号

36:20.840 --> 36:21.840
它会放到这儿来

36:21.840 --> 36:22.840
你做一个加法

36:22.840 --> 36:23.840
它告诉你

36:23.840 --> 36:24.840
然后

36:24.840 --> 36:26.840
opter arry

36:26.840 --> 36:27.840
我们点perch

36:27.840 --> 36:29.840
把你现在这个数字

36:29.840 --> 36:33.940
压进去

36:33.940 --> 36:34.940
先把你的数字

36:34.940 --> 36:35.940
压进去

36:35.940 --> 36:36.940
然后

36:36.940 --> 36:37.940
opter

36:37.940 --> 36:39.940
再把你现在的array

36:39.940 --> 36:46.670
压进去

36:46.670 --> 36:47.670
把number清空

36:47.670 --> 36:51.110
看一下这个操作

36:51.110 --> 36:53.110
我们现在是要

36:53.110 --> 36:54.110
把array的方式

36:54.110 --> 36:56.110
完成最后一个符号的设定

36:56.110 --> 36:57.110
此时

36:57.110 --> 36:58.110
如果是1加2的话

36:58.110 --> 37:00.110
那么1肯定是在number中

37:00.110 --> 37:02.110
number放入到operator中

37:02.110 --> 37:03.110
然后此时

37:03.110 --> 37:04.110
你这里面是加号

37:04.110 --> 37:05.110
所以把加号

37:05.110 --> 37:07.110
也压入到operator中

37:07.110 --> 37:08.110
好 是这样的过程

37:08.110 --> 37:09.110
完成以后

37:09.110 --> 37:10.110
把number清空

37:10.110 --> 37:11.110
第二次

37:11.110 --> 37:12.110
再上来循环的时候

37:12.110 --> 37:13.110
那么这时候

37:13.110 --> 37:14.110
再往里面走

37:14.110 --> 37:15.110
这是多少

37:15.110 --> 37:17.110
这里面会放置的

37:18.110 --> 37:19.110
再上来的时候

37:19.110 --> 37:20.110
这时候是比如说1加2

37:20.110 --> 37:21.110
这是2

37:21.110 --> 37:24.110
2和你原来的这个number

37:24.110 --> 37:25.110
2和你原来

37:25.110 --> 37:27.110
它本身就是2的这个值

37:27.110 --> 37:28.110
原来

37:28.110 --> 37:29.110
我们在这边

37:29.110 --> 37:30.110
1加2的时候

37:30.110 --> 37:31.110
肯定清掉了

37:31.110 --> 37:32.110
你不可能写12

37:32.110 --> 37:33.110
12中间有个1

37:33.110 --> 37:34.110
12中间有个符号

37:34.110 --> 37:35.110
那不可能

37:35.110 --> 37:36.110
对吧

37:36.110 --> 37:37.110
所以我们整个

37:37.110 --> 37:38.110
这个循环过程中

37:38.110 --> 37:40.110
始终保持着

37:40.110 --> 37:41.110
number是空的

37:41.110 --> 37:42.110
然后不断的

37:42.110 --> 37:43.110
如果有数值

37:43.110 --> 37:44.110
压

37:44.110 --> 37:46.110
等它做完以后的话

37:46.110 --> 37:47.110
你想一下

37:47.110 --> 37:49.110
这里边应该是什么样的情况

37:49.110 --> 37:50.110
应该是

37:50.110 --> 37:52.110
在我现在的array中

37:52.110 --> 37:54.110
我们是有数值number

37:54.110 --> 37:56.110
也就是我们有一个1加2的话

37:56.110 --> 37:57.110
1在这里边

37:57.110 --> 37:58.110
对吧

37:58.110 --> 37:59.110
然后的话

37:59.110 --> 38:01.110
我们最后一个符号在这边

38:01.110 --> 38:03.110
然后加号也在这边

38:03.110 --> 38:04.110
对吧

38:04.110 --> 38:05.110
好 我们下面来

38:05.110 --> 38:06.110
我们这边

38:06.110 --> 38:07.110
做到这里的时候

38:07.110 --> 38:09.110
我们其实

38:09.110 --> 38:10.110
我们可以

38:10.110 --> 38:11.110
后面先打印

38:11.110 --> 38:12.110
可以看一下的

38:12.110 --> 38:13.110
反而我们数值的话

38:13.110 --> 38:14.110
我们后面再来

38:14.110 --> 38:15.110
首先

38:15.110 --> 38:16.110
我们在这边

38:16.110 --> 38:19.110
我们这边是可以打印的

38:19.110 --> 38:23.450
我们把值先做一下吧

38:23.450 --> 38:26.450
operator.perch

38:26.450 --> 38:27.450
再把你的数字拿进去

38:27.450 --> 38:28.450
注意

38:28.450 --> 38:29.450
number这个东西

38:29.450 --> 38:30.450
我让它一定要

38:30.450 --> 38:32.450
强转成数字类型

38:32.450 --> 38:34.450
待会我们要做计算的

38:34.450 --> 38:36.450
再来

38:36.450 --> 38:39.450
result number

38:39.450 --> 38:42.450
为了让它能够有小数的那种形式

38:42.450 --> 38:43.450
也就是说

38:43.450 --> 38:45.450
它可以有小数的操作的话

38:45.450 --> 38:47.450
我们其实可以这样

38:47.450 --> 38:48.450
把它第1个

38:48.450 --> 38:50.450
它第1个一定是我们的operator数值

38:50.450 --> 38:53.450
然后我们先乘上1.0

38:53.450 --> 38:55.450
代表它是有小数位的

38:55.450 --> 38:56.450
这样的话

38:56.450 --> 38:58.450
这就是小数格式

38:58.450 --> 39:01.080
循环

39:01.080 --> 39:04.080
let i等于1

39:04.080 --> 39:06.080
从1开始

39:06.080 --> 39:09.840
i小于

39:09.840 --> 39:12.840
obt area.length

39:12.840 --> 39:13.840
得到它的长度

39:13.840 --> 39:17.240
然后再i

39:17.240 --> 39:19.680
判断

39:19.680 --> 39:20.680
is

39:20.680 --> 39:22.680
none

39:22.680 --> 39:27.890
ob i

39:27.890 --> 39:30.890
判断它的这个值

39:30.890 --> 39:32.890
如果这个值判断

39:32.890 --> 39:35.890
它现在的是加减乘除

39:35.890 --> 39:37.890
因为我们在这里面存的时候

39:37.890 --> 39:40.890
一定会第2个存进去的是加减乘除符

39:40.890 --> 39:42.890
那么此时我们判断一下

39:42.890 --> 39:44.890
如果你现在ob

39:44.890 --> 39:46.890
t area

39:46.890 --> 39:49.890
里面拿出来的这个e

39:50.890 --> 39:51.890
拿出来这个e

39:51.890 --> 39:53.890
它等于我们的加号

39:53.890 --> 39:55.890
我们看一下

39:55.890 --> 39:57.890
加号我们的符号

39:57.890 --> 39:59.890
在id上面是什么样的一个标注

39:59.890 --> 40:01.890
我们其实是

40:01.890 --> 40:03.890
加号是add对吧

40:03.890 --> 40:04.890
减号

40:04.890 --> 40:06.890
我们加号就拿这个符号吧

40:06.890 --> 40:07.890
加号

40:07.890 --> 40:08.890
减号

40:08.890 --> 40:09.890
乘号

40:09.890 --> 40:10.890
只有除是dv

40:10.890 --> 40:11.890
对吧

40:11.890 --> 40:12.890
好我们来看

40:12.890 --> 40:22.720
如果你现在碰到的是一个加号

40:22.720 --> 40:23.720
那么

40:24.720 --> 40:26.720
我们做一个result

40:27.720 --> 40:28.720
result

40:28.720 --> 40:29.720
它里面的值

40:29.720 --> 40:31.720
就变成的是数值

40:31.720 --> 40:32.720
number

40:32.720 --> 40:33.720
去加上

40:33.720 --> 40:35.720
opt error

40:35.720 --> 40:37.720
里面的

40:37.720 --> 40:39.720
i去加1

40:39.720 --> 40:41.720
就是后面的数值

40:41.720 --> 40:42.720
加数值

40:42.720 --> 40:43.720
1加2

40:43.720 --> 40:44.720
那个2的数值

40:44.720 --> 40:46.720
是在operate 后面

40:46.720 --> 40:50.180
再来

40:50.180 --> 40:51.180
if

40:51.180 --> 40:52.180
如果

40:52.180 --> 40:54.180
opt error

40:54.180 --> 40:55.180
你给它的

40:56.180 --> 40:57.180
e

40:57.180 --> 40:59.180
如果它是等于我们的

41:00.180 --> 41:03.690
减号

41:03.690 --> 41:05.690
它拿出来的是减号的话

41:06.690 --> 41:07.690
result

41:07.690 --> 41:08.690
减等

41:08.690 --> 41:15.070
我们后面的这个值

41:15.070 --> 41:16.070
再来

41:17.070 --> 41:18.070
如果

41:19.070 --> 41:21.070
opt error

41:21.070 --> 41:23.070
我们拿出的这个值

41:23.070 --> 41:25.070
它是等于

41:25.070 --> 41:27.070
乘号

41:28.070 --> 41:30.070
那么我们把这里面的数值

41:31.070 --> 41:32.070
改一改

41:33.070 --> 41:34.070
改成

41:34.070 --> 41:35.070
惩罚计算

41:36.070 --> 41:37.070
再来

41:37.070 --> 41:43.560
如果你拿出的这个数值

41:43.560 --> 41:45.560
opt是除号

41:46.560 --> 41:48.560
除号的话我们就写上

41:48.560 --> 41:52.260
dv

41:52.260 --> 41:53.260
dv

41:53.260 --> 41:54.260
那么

41:54.260 --> 41:55.260
result

41:55.260 --> 41:57.260
那我们就做一个除操作

41:58.260 --> 41:59.260
result

41:59.260 --> 42:01.260
是我最后的计算结果

42:01.260 --> 42:03.260
我们的整个这个

42:03.260 --> 42:05.260
result的一个计算

42:05.260 --> 42:06.260
这边有

42:06.260 --> 42:07.260
大家如果说

42:07.260 --> 42:08.260
旅不清思路的话

42:08.260 --> 42:09.260
你可以

42:09.260 --> 42:10.260
一个一个输出看一下

42:10.260 --> 42:11.260
我们在最后的时候

42:11.260 --> 42:13.260
我们看一下整个结果运算

42:13.260 --> 42:15.260
特别注意一下

42:15.260 --> 42:17.260
这里边几个变量的变化

42:17.260 --> 42:19.260
就是说你operator里边

42:19.260 --> 42:21.260
一定存储的是我现在的一个

42:21.260 --> 42:23.260
几加几的这样的一个数值

42:23.260 --> 42:25.260
那么第1位的话

42:25.260 --> 42:26.260
肯定是你的0

42:26.260 --> 42:27.260
对吧

42:27.260 --> 42:29.260
0的话肯定是属于你现在的一个

42:29.260 --> 42:30.260
比如说1加2的1

42:30.260 --> 42:31.260
但是现在的话

42:31.260 --> 42:33.260
1的话肯定是个符号

42:34.260 --> 42:35.260
那么

42:35.260 --> 42:36.260
i去加1的话

42:36.260 --> 42:38.260
就代表着往后再走一位

42:38.260 --> 42:39.260
那就是属于我们第2位

42:39.260 --> 42:41.260
就是属于1加2的那个2

42:41.260 --> 42:42.260
对吧

42:42.260 --> 42:43.260
这样去做

42:43.260 --> 42:44.260
然后我们一旦

42:44.260 --> 42:46.260
这个if与去完成了

42:46.260 --> 42:47.260
也就是说我们这个

42:47.260 --> 42:48.260
for循环

42:48.260 --> 42:50.260
让他result的结果做完了

42:50.260 --> 42:51.260
那么下去

42:51.260 --> 42:52.260
我们有一个存储历史记录

42:52.260 --> 42:53.260
对吧

42:53.260 --> 42:54.260
存储

42:54.260 --> 42:56.260
历史记录

42:56.260 --> 42:57.260
存储历史记录

42:57.260 --> 42:59.260
那么这边说一下

42:59.260 --> 43:00.260
我们有个log

43:00.260 --> 43:01.260
对吧

43:01.260 --> 43:03.260
我们把log这个东西压进去

43:03.260 --> 43:05.260
我们看一下外面是不是有

43:05.260 --> 43:06.260
我们前面应该定义过

43:06.260 --> 43:07.260
对吧

43:07.260 --> 43:08.260
我们在56行的时候

43:08.260 --> 43:09.260
我们定义过一个log

43:09.260 --> 43:11.260
所以简单的做法就是

43:11.260 --> 43:16.260
this.logs.push

43:16.260 --> 43:17.260
压进去

43:17.260 --> 43:19.260
把data放进去

43:19.260 --> 43:20.260
加

43:20.260 --> 43:22.260
我们做一个等于

43:22.260 --> 43:25.260
然后再加上result

43:26.260 --> 43:30.700
然后存到

43:30.700 --> 43:31.700
选举变量

43:31.700 --> 43:34.200
存入选举变量

43:34.200 --> 43:36.200
一旦要做选举变量了

43:36.200 --> 43:38.200
那我们得到manse里面去

43:38.200 --> 43:40.830
n.js里面

43:40.830 --> 43:41.830
我们加上

43:41.830 --> 43:52.710
view.preparity.globaldata

43:52.710 --> 43:58.860
getappsglobaldata

43:58.860 --> 44:01.860
进行原

44:01.860 --> 44:03.860
进行原注册

44:03.860 --> 44:04.860
然后到这边

44:04.860 --> 44:06.860
我们可以直接用它

44:06.860 --> 44:07.860
那么我们就可以

44:07.860 --> 44:09.860
把你现在的存入进去

44:09.860 --> 44:10.860
我们写上

44:10.860 --> 44:18.640
this.globaldata.logs日治

44:18.640 --> 44:21.640
等于我们写上

44:21.640 --> 44:22.640
这样的方式

44:22.640 --> 44:25.640
我们写上你现在的logs

44:25.640 --> 44:26.640
帽号

44:26.640 --> 44:28.640
给出你现在的值

44:28.640 --> 44:29.640
那么这个值

44:29.640 --> 44:30.640
其实就是logs里面的东西

44:30.640 --> 44:31.640
对吧

44:31.640 --> 44:34.640
this.logs

44:34.640 --> 44:36.640
把它存到选举变量中

44:36.640 --> 44:41.300
然后此时把arrow清空

44:41.300 --> 44:44.300
this.arrow.length

44:44.300 --> 44:48.920
等于0

44:48.920 --> 44:49.920
然后再把结果

44:49.920 --> 44:51.920
我们放入到

44:51.920 --> 44:53.920
arrow里面去

44:53.920 --> 44:55.920
push 压进去

44:55.920 --> 44:59.260
我们把它压进去

44:59.260 --> 45:09.000
显示

45:09.000 --> 45:10.000
显示

45:10.000 --> 45:11.000
显示的方式其实很简单

45:11.000 --> 45:14.000
我们只需要的是this.

45:14.000 --> 45:17.000
我们现在的screen double

45:18.000 --> 45:21.000
等于result

45:21.000 --> 45:24.700
这个结果

45:24.700 --> 45:25.700
对吧

45:25.700 --> 45:27.700
我们看一下这个扩号

45:27.700 --> 45:28.700
这个扩号

45:28.700 --> 45:29.700
其实我们对应到的是

45:29.700 --> 45:31.700
内部的if

45:31.700 --> 45:32.700
那么我们

45:32.700 --> 45:34.700
如果再往外看一层

45:34.700 --> 45:38.970
这个扩号

45:38.970 --> 45:39.970
是外面的按钮

45:39.970 --> 45:40.970
对吧

45:40.970 --> 45:41.970
那么基本上

45:41.970 --> 45:43.970
我们在内部的这个结果

45:43.970 --> 45:44.970
我们履一下

45:44.970 --> 45:46.970
现在的顺序

45:46.970 --> 45:48.970
如果你点了等于的话

45:48.970 --> 45:49.970
我们看到这边

45:49.970 --> 45:50.970
进来

45:50.970 --> 45:52.970
这是属于退革键

45:52.970 --> 45:53.970
这边是清屏

45:53.970 --> 45:54.970
这边是等于

45:54.970 --> 45:55.970
等于的话

45:55.970 --> 45:56.970
屏幕内容拿下来

45:56.970 --> 45:57.970
然后判零

45:57.970 --> 45:58.970
然后的话

45:58.970 --> 46:00.970
拿到里面的最后一个

46:00.970 --> 46:01.970
我们的词

46:01.970 --> 46:02.970
然后判断一下

46:02.970 --> 46:03.970
最后一个是不是数值

46:03.970 --> 46:05.970
然后我们做现在的一个

46:05.970 --> 46:06.970
循环

46:06.970 --> 46:08.970
这个循环主要通过arrow来做

46:08.970 --> 46:09.970
arrow 本身自己

46:09.970 --> 46:10.970
它就是外部

46:10.970 --> 46:12.970
所给到的一个数值

46:12.970 --> 46:14.970
我们这个数值的话

46:14.970 --> 46:15.970
我们本身就是里面

46:15.970 --> 46:17.970
1加2的这样一个值

46:17.970 --> 46:18.970
然后这个值的话

46:18.970 --> 46:20.970
如果说它本身是数字的话

46:20.970 --> 46:21.970
把它记录到number中

46:21.970 --> 46:22.970
不是数字的话

46:22.970 --> 46:23.970
拿出它原有的值

46:23.970 --> 46:25.970
然后把number加到apples里面

46:25.970 --> 46:27.970
那么opter array的话

46:27.970 --> 46:29.970
把1和2都压进去

46:29.970 --> 46:30.970
然后同时再往下

46:30.970 --> 46:32.970
我们把现在的最后一个数值

46:32.970 --> 46:34.970
比如说1加2

46:34.970 --> 46:36.970
等于1加2

46:36.970 --> 46:37.970
1加2通过这部分

46:37.970 --> 46:38.970
已经加进去了

46:38.970 --> 46:39.970
最后一个

46:39.970 --> 46:40.970
我们把最后一个数值

46:40.970 --> 46:42.970
number也给它压进去

46:42.970 --> 46:43.970
那么这里边就形成了

46:43.970 --> 46:44.970
我们需要的

46:44.970 --> 46:46.970
1加2的三个元素

46:46.970 --> 46:47.970
然后我们拿第一个数

46:47.970 --> 46:48.970
一定是数值

46:48.970 --> 46:50.970
把它就成一个小数的格式

46:50.970 --> 46:51.970
所以乘1.0

46:51.970 --> 46:52.970
然后开始对它形怀

46:52.970 --> 46:54.970
如果它里面是

46:54.970 --> 46:57.970
数字的话

46:57.970 --> 46:58.970
我们跳过它

46:58.970 --> 46:59.970
数字的话

46:59.970 --> 47:00.970
应该做的是

47:00.970 --> 47:01.970
不用做这边

47:01.970 --> 47:03.970
如果说它不是数字的话

47:03.970 --> 47:04.970
我们现在很简单

47:04.970 --> 47:05.970
我们需要做的情况是

47:05.970 --> 47:08.970
我们拿出它现在里面的

47:08.970 --> 47:09.970
主要它是从1开始的

47:09.970 --> 47:10.970
0就不用拿了

47:10.970 --> 47:11.970
为什么呢

47:11.970 --> 47:12.970
因为我们0

47:12.970 --> 47:13.970
本身自己

47:13.970 --> 47:14.970
把它放到result里面去了

47:14.970 --> 47:15.970
对吧

47:15.970 --> 47:16.970
然后从1开始

47:16.970 --> 47:17.970
拿出它里面的值来

47:17.970 --> 47:19.970
和你现在的符号

47:19.970 --> 47:20.970
符号看一下

47:20.970 --> 47:21.970
是哪种符号

47:21.970 --> 47:22.970
和拿出后面的值

47:22.970 --> 47:23.970
把结果放到result里面去

47:23.970 --> 47:24.970
1234做法一样

47:24.970 --> 47:25.970
做完以后的话

47:25.970 --> 47:26.970
result结果就有了

47:26.970 --> 47:27.970
然后的话

47:27.970 --> 47:28.970
把result结果

47:28.970 --> 47:29.970
和我们的整个

47:29.970 --> 47:30.970
这一串内容

47:30.970 --> 47:31.970
我们压到logs里面去

47:31.970 --> 47:33.970
把logs加到全局

47:33.970 --> 47:34.970
然后完成一个

47:34.970 --> 47:35.970
把它清空掉

47:35.970 --> 47:37.970
最后我们把它放置

47:37.970 --> 47:39.970
到我们整个的

47:39.970 --> 47:40.970
显示屏幕上

47:40.970 --> 47:41.970
整个这个

47:41.970 --> 47:43.970
是要点那个等于的

47:43.970 --> 47:44.970
我们看到

47:44.970 --> 47:46.970
我们整个对应到的是哪个

47:46.970 --> 47:47.970
是等于

47:47.970 --> 47:49.970
但我又没有点

47:49.970 --> 47:50.970
清屏

47:50.970 --> 47:51.970
我又没有点回退

47:51.970 --> 47:52.970
我又没点等于

47:52.970 --> 47:53.970
那怎么办呢

47:53.970 --> 47:54.970
那我们得还得往下写

47:54.970 --> 47:55.970
对吧

47:56.970 --> 47:57.970
这是

47:57.970 --> 47:58.970
不点上面的

47:58.970 --> 48:00.970
所有的特殊符号的情况下

48:00.970 --> 48:02.970
那么我们应该怎么做

48:02.970 --> 48:04.970
我们应该的做法就是

48:05.970 --> 48:06.970
你得看到

48:06.970 --> 48:07.970
你点了是啥

48:07.970 --> 48:08.970
是加点成除吗

48:08.970 --> 48:09.970
是这个意思

48:11.970 --> 48:12.970
if

48:13.970 --> 48:14.970
当前的

48:19.010 --> 48:20.010
我们看一下

48:20.010 --> 48:22.010
加点成除这个符号对吧

48:22.010 --> 48:24.010
加点成除在上面

48:24.010 --> 48:28.560
我们

48:28.560 --> 48:29.560
对吧

48:29.560 --> 48:32.560
如果你现在拿进来的那个id

48:33.560 --> 48:35.560
如果id等于

48:35.560 --> 48:36.560
我们是

48:36.560 --> 48:37.560
加

48:37.560 --> 48:40.060
等于

48:41.060 --> 48:42.060
是加

48:42.060 --> 48:43.060
对吧

48:43.060 --> 48:45.060
id从我们接进来

48:45.060 --> 48:46.060
你按的键

48:46.060 --> 48:47.060
第一就接进来了

48:47.060 --> 48:49.060
如果是加

48:49.060 --> 48:51.060
或者

48:51.060 --> 48:53.060
id等于

48:53.060 --> 48:55.060
你现在是个减

48:55.060 --> 48:56.060
或者

48:56.060 --> 48:57.060
id你等于

48:57.060 --> 48:59.060
现在是个成

48:59.060 --> 49:01.060
或者

49:01.060 --> 49:03.060
id你等于

49:03.060 --> 49:04.060
d

49:04.060 --> 49:05.060
v

49:05.060 --> 49:08.060
你是加点成除的一种形式的话

49:08.060 --> 49:09.060
那么很简单

49:09.060 --> 49:10.060
我们需要做的事情是

49:10.060 --> 49:12.060
再判断一下

49:12.060 --> 49:13.060
现在屏幕上面

49:13.060 --> 49:14.060
是不是空

49:14.060 --> 49:17.400
如果

49:17.400 --> 49:20.900
屏幕上面

49:20.900 --> 49:22.900
依然等于0的话

49:22.900 --> 49:23.900
那

49:23.900 --> 49:24.900
return

49:24.900 --> 49:25.900
啥都不干

49:26.900 --> 49:28.900
屏幕上等于0的话

49:28.900 --> 49:34.160
啥都不干

49:34.160 --> 49:38.260
接下去

49:38.260 --> 49:39.260
屏幕内容

49:39.260 --> 49:41.260
拿出来我们先做一个

49:41.260 --> 49:42.260
看一下

49:42.260 --> 49:43.260
sd

49:43.260 --> 49:44.260
等于

49:44.260 --> 49:46.260
当前

49:46.260 --> 49:48.260
屏幕内容拿出来

49:48.260 --> 49:50.260
先做一个基础变量

49:50.260 --> 49:57.990
如果

49:57.990 --> 49:59.990
sd

49:59.990 --> 50:01.990
它等于0

50:01.990 --> 50:03.990
那么数值就很简单

50:03.990 --> 50:04.990
数值data

50:04.990 --> 50:06.990
就是等于你现在的id

50:07.990 --> 50:08.990
不然

50:08.990 --> 50:09.990
怎么办呢

50:09.990 --> 50:10.990
data值

50:10.990 --> 50:11.990
等于

50:11.990 --> 50:12.990
sd

50:12.990 --> 50:14.990
去加上你现在传进来的id

50:14.990 --> 50:16.990
做一个数值

50:16.990 --> 50:17.990
操作

50:17.990 --> 50:19.990
当前的我们做一下

50:19.990 --> 50:20.990
screen

50:20.990 --> 50:21.990
data

50:21.990 --> 50:23.990
把这个id显示出来

50:24.990 --> 50:26.990
data显示出来

50:27.990 --> 50:28.990
然后呢

50:28.990 --> 50:30.990
当前的arrow里面

50:30.990 --> 50:32.990
就是把现在的id压进去

50:32.990 --> 50:39.150
形成这个

50:39.150 --> 50:40.150
好

50:40.150 --> 50:41.150
我们现在

50:41.150 --> 50:43.150
最后鲤鱼虾代码我们

50:43.150 --> 50:44.150
鲤鱼虾等于这个

50:44.150 --> 50:46.150
冷鱼虾整个这个

50:46.150 --> 50:47.150
首先

50:47.150 --> 50:49.150
我们现在点击按钮的时候

50:49.150 --> 50:50.150
我没有点

50:50.150 --> 50:51.150
我们把它看一下

50:51.150 --> 50:52.150
我没有点清屏

50:52.150 --> 50:54.150
我就正常的数值

50:54.150 --> 50:55.150
我没有点

50:55.150 --> 50:56.150
回退

50:56.150 --> 50:57.150
我没有点等于

50:57.150 --> 50:59.150
那么它直接跳到我下面了

50:59.150 --> 51:01.150
比如说我点了个1加2

51:01.150 --> 51:02.150
那么这时候判断

51:02.150 --> 51:03.150
你是不是点数字

51:03.150 --> 51:04.150
也没有

51:04.150 --> 51:05.150
多少呢

51:05.150 --> 51:06.150
现在是0屏幕上

51:06.150 --> 51:07.150
如果刚开始

51:07.150 --> 51:08.150
1加2

51:08.150 --> 51:09.150
那么这时候的话

51:09.150 --> 51:10.150
我们就把屏幕

51:10.150 --> 51:11.150
如果是0的话

51:11.150 --> 51:12.150
那直接把现在的

51:12.150 --> 51:13.150
你点1的话

51:13.150 --> 51:15.150
就把1写上去

51:15.150 --> 51:16.150
上去

51:16.150 --> 51:18.150
如果你现在屏幕上是有个1

51:18.150 --> 51:20.150
那么1写上去以后

51:20.150 --> 51:22.150
把屏幕显示出这个1就行了

51:22.150 --> 51:23.150
对吧

51:23.150 --> 51:25.150
然后把这1放到我们的arrow里面去

51:25.150 --> 51:26.150
如果你屏幕

51:26.150 --> 51:27.150
你这时候按了一个加号

51:27.150 --> 51:28.150
那么这时候

51:28.150 --> 51:29.150
孩子到这边来

51:29.150 --> 51:30.150
判断你里面是不是0

51:30.150 --> 51:31.150
不是

51:31.150 --> 51:32.150
我前面有个1了

51:32.150 --> 51:33.150
所以这时候

51:33.150 --> 51:34.150
拿过来

51:34.150 --> 51:35.150
上面有个1的话

51:35.150 --> 51:36.150
它走这条路

51:36.150 --> 51:37.150
这有1加

51:37.150 --> 51:38.150
后面有个加号

51:38.150 --> 51:39.150
所以变成的是

51:39.150 --> 51:40.150
data里面是1加

51:40.150 --> 51:41.150
对吧

51:41.150 --> 51:43.150
然后把1加显示出来

51:43.150 --> 51:44.150
然后这时候

51:44.150 --> 51:45.150
把加号这个内容

51:45.150 --> 51:47.150
再压到arrow里面去

51:47.150 --> 51:48.150
这时候显示2

51:48.150 --> 51:49.150
2的话

51:49.150 --> 51:50.150
进去一模一样

51:50.150 --> 51:51.150
然后2的话

51:51.150 --> 51:52.150
在这个里面

51:52.150 --> 51:53.150
也完成了

51:53.150 --> 51:54.150
判断一下

51:54.150 --> 51:55.150
有没有

51:55.150 --> 51:56.150
它跑这里来

51:56.150 --> 51:57.150
前面在sd里面是1加

51:57.150 --> 51:58.150
所以这边显示2

51:58.150 --> 51:59.150
所以这时候呢

51:59.150 --> 52:01.150
我们的屏幕上显示1加2

52:01.150 --> 52:02.150
然后此时

52:02.150 --> 52:03.150
你现在的id

52:03.150 --> 52:04.150
也就是在arrow里面

52:04.150 --> 52:07.150
你会变成的是1加2

52:07.150 --> 52:09.150
我们的一个3位的宿主

52:09.150 --> 52:10.150
好 先到这一步

52:10.150 --> 52:11.150
我们来验证一下

52:11.150 --> 52:13.150
默认刷新

52:13.150 --> 52:15.150
看一下

52:15.150 --> 52:16.150
先不点等于

52:16.150 --> 52:18.150
先点其他功能来看

52:18.150 --> 52:19.150
先写1

52:19.150 --> 52:22.150
屏幕显示1出来

52:22.150 --> 52:23.150
然后这时候

52:23.150 --> 52:26.150
你点这个加号

52:26.150 --> 52:27.150
它完全

52:27.150 --> 52:29.150
这两步走的都是这一块

52:29.150 --> 52:30.150
判断这里边

52:30.150 --> 52:31.150
是不是有内容

52:31.150 --> 52:32.150
没有的话

52:32.150 --> 52:33.150
它把这个连起来了

52:33.150 --> 52:36.150
再做一个2

52:36.150 --> 52:38.150
是不是连起来了

52:38.150 --> 52:40.150
这个显示就ok了

52:40.150 --> 52:41.150
紧接着

52:41.150 --> 52:42.150
我们来做

52:42.150 --> 52:43.150
看前面的功能

52:43.150 --> 52:44.150
我们点倒退

52:44.150 --> 52:46.590
back

52:46.590 --> 52:47.590
如果我屏幕上

52:47.590 --> 52:48.590
按了一下back按钮的话

52:48.590 --> 52:49.590
它能干嘛

52:49.590 --> 52:50.590
看着屏幕上

52:50.590 --> 52:51.590
现在返回过来

52:51.590 --> 52:52.590
是1加2

52:52.590 --> 52:53.590
是不是

52:53.590 --> 52:54.590
是0吗

52:54.590 --> 52:55.590
不是0

52:55.590 --> 52:56.590
所以它做这一步

52:56.590 --> 52:57.590
1加2里面

52:57.590 --> 52:58.590
拿出多少来

52:58.590 --> 52:59.590
就是它从最后一位

52:59.590 --> 53:00.590
结取

53:00.590 --> 53:01.590
1加进来了

53:01.590 --> 53:02.590
对吧

53:02.590 --> 53:03.590
这时候判断

53:03.590 --> 53:04.590
是不是空

53:04.590 --> 53:05.590
不是空

53:05.590 --> 53:06.590
所以它显示这里

53:06.590 --> 53:08.590
把你现在的

53:08.590 --> 53:09.590
1加的内容

53:09.590 --> 53:10.590
显示在屏幕上

53:10.590 --> 53:11.590
并且

53:11.590 --> 53:12.590
在arrow里面

53:12.590 --> 53:13.590
把最后一个取调

53:13.590 --> 53:15.590
刚才我们刚才说到了

53:15.590 --> 53:16.590
1加2的时候

53:16.590 --> 53:17.590
在arrow中是1加2

53:17.590 --> 53:18.590
所以现在

53:18.590 --> 53:19.590
做了个pop

53:19.590 --> 53:20.590
以后的话

53:20.590 --> 53:21.590
arrow里面就变成1加了

53:21.590 --> 53:22.590
是不是它只要

53:22.590 --> 53:23.590
做了个substream

53:23.590 --> 53:24.590
这结构

53:24.590 --> 53:25.590
我们来看一下

53:25.590 --> 53:27.590
点这个按钮

53:27.590 --> 53:29.590
是不是消失一个

53:29.590 --> 53:31.590
因为它的screen

53:31.590 --> 53:32.590
screen data里面

53:32.590 --> 53:33.590
呈现了一部分

53:33.590 --> 53:34.590
第二部分

53:34.590 --> 53:36.590
是它现在你所看到的

53:36.590 --> 53:37.590
内部

53:37.590 --> 53:38.590
是有arrow里面

53:38.590 --> 53:39.590
消失了一个

53:39.590 --> 53:40.590
加取

53:40.590 --> 53:41.590
我们看一下清屏

53:41.590 --> 53:42.590
如果我先点

53:42.590 --> 53:43.590
清屏按钮的话

53:43.590 --> 53:44.590
那么screen上面

53:44.590 --> 53:45.590
直接显示0

53:45.590 --> 53:47.590
并且把arrow也清掉

53:47.590 --> 53:51.180
是吧

53:51.180 --> 53:52.180
清屏按钮

53:52.180 --> 53:53.180
那么再有

53:53.180 --> 53:54.180
接下去的事情

53:54.180 --> 53:56.180
就是等于了

53:56.180 --> 53:57.180
加点成熟

53:57.180 --> 53:58.180
其实刚才我们

53:58.180 --> 53:59.180
做个加和

53:59.180 --> 54:00.180
剪成熟是一样的

54:00.180 --> 54:01.180
这个

54:01.180 --> 54:02.180
先不做

54:02.180 --> 54:03.180
待会我们来做

54:03.180 --> 54:04.180
这是历史记录

54:04.180 --> 54:05.180
我们这个

54:05.180 --> 54:06.180
加点成熟

54:06.180 --> 54:07.180
这些都做过

54:07.180 --> 54:08.180
那我们来看一下

54:08.180 --> 54:10.180
那个等于好

54:10.180 --> 54:12.180
现在的情况

54:12.180 --> 54:13.180
我们再来写一下

54:13.180 --> 54:14.180
我们现在下来写一下

54:14.180 --> 54:15.180
现在的情况里面

54:15.180 --> 54:16.180
完全就是

54:16.180 --> 54:19.940
我们要写个1加

54:19.940 --> 54:21.940
1

54:21.940 --> 54:22.940
加

54:22.940 --> 54:23.940
2

54:23.940 --> 54:24.940
显示这个

54:24.940 --> 54:25.940
意味着arrow中

54:25.940 --> 54:27.940
我们存那个1加2

54:27.940 --> 54:28.940
screen data里面

54:28.940 --> 54:29.940
是1加2的自服串

54:29.940 --> 54:30.940
arrow中是1加2的

54:30.940 --> 54:31.940
我们的内容

54:31.940 --> 54:33.940
我们的每一个自服

54:33.940 --> 54:34.940
我们来看等于

54:34.940 --> 54:35.940
屏幕拿过来

54:35.940 --> 54:36.940
1加2

54:36.940 --> 54:37.940
等于0吗

54:37.940 --> 54:38.940
不等于

54:38.940 --> 54:39.940
然后的话

54:39.940 --> 54:40.940
我们取出这里边的直来

54:40.940 --> 54:41.940
我们取出这里边的

54:41.940 --> 54:43.940
1加2的直来

54:43.940 --> 54:44.940
处于它的长度

54:44.940 --> 54:45.940
它长度多少

54:45.940 --> 54:46.940
2

54:46.940 --> 54:47.940
所以把我们最后一个

54:47.940 --> 54:48.940
只拿出来

54:48.940 --> 54:49.940
就是2

54:49.940 --> 54:50.940
对吧

54:50.940 --> 54:51.940
然后判断

54:51.940 --> 54:52.940
它是不是数字

54:52.940 --> 54:53.940
我们当然是数字

54:53.940 --> 54:54.940
数字会反为force

54:54.940 --> 54:55.940
不走

54:55.940 --> 54:56.940
然后开始往下

54:56.940 --> 54:57.940
arrow里面

54:57.940 --> 54:58.940
这时候是什么

54:58.940 --> 54:59.940
arrow这里面

54:59.940 --> 55:00.940
我们如果做1加2的话

55:00.940 --> 55:01.940
1加2的一个

55:01.940 --> 55:02.940
速度结构

55:02.940 --> 55:03.940
对吧

55:03.940 --> 55:04.940
last的主义是arrow

55:04.940 --> 55:05.940
然后继续往下

55:05.940 --> 55:06.940
这是个速度

55:06.940 --> 55:07.940
然后的话

55:07.940 --> 55:08.940
1加2是

55:08.940 --> 55:09.940
开始循环

55:09.940 --> 55:10.940
我们首先0

55:10.940 --> 55:12.940
第一个是1对吧

55:12.940 --> 55:13.940
1的话是数字吗

55:13.940 --> 55:14.940
是

55:14.940 --> 55:16.940
所以把这个1的数字

55:16.940 --> 55:17.940
放到我们number中去

55:17.940 --> 55:18.940
number里面

55:18.940 --> 55:19.940
就是一个数字1

55:19.940 --> 55:21.940
然后第二次循环

55:21.940 --> 55:22.940
上来的时候

55:22.940 --> 55:23.940
它是个加号

55:23.940 --> 55:24.940
所以它走这边

55:24.940 --> 55:26.940
把最后这个拿出来

55:26.940 --> 55:27.940
把最后这个拿出来

55:27.940 --> 55:28.940
然后的话

55:28.940 --> 55:29.940
在optorarrow里面

55:29.940 --> 55:31.940
把我们的数字

55:31.940 --> 55:32.940
放进去

55:32.940 --> 55:33.940
这个里面是多少

55:33.940 --> 55:34.940
是刚才那个1

55:34.940 --> 55:35.940
然后这个里面

55:35.940 --> 55:36.940
是加

55:36.940 --> 55:37.940
所以把这两个放进去

55:37.940 --> 55:38.940
number清空

55:38.940 --> 55:40.940
第三次再来的时候

55:40.940 --> 55:41.940
那么我们做一下2

55:41.940 --> 55:42.940
2的时候

55:42.940 --> 55:43.940
我们继续以后

55:43.940 --> 55:44.940
是数字吗

55:44.940 --> 55:45.940
是数字

55:45.940 --> 55:47.940
把这数字加到number里面去

55:47.940 --> 55:48.940
把数字加到number中

55:48.940 --> 55:49.940
然后number

55:49.940 --> 55:50.940
本身自己

55:50.940 --> 55:51.940
再往这边走

55:51.940 --> 55:52.940
number里面存在多少

55:52.940 --> 55:53.940
是2

55:53.940 --> 55:54.940
继续往下

55:54.940 --> 55:56.940
number里存了个2以后

55:56.940 --> 55:57.940
我们把2压进去

55:57.940 --> 55:58.940
那你想象一下

55:58.940 --> 55:59.940
我不是想象的

55:59.940 --> 56:00.940
你可以想到

56:00.940 --> 56:02.940
我前面这个operate里面

56:02.940 --> 56:03.940
是什么东西

56:03.940 --> 56:05.940
operate是不是一个加号

56:05.940 --> 56:06.940
1加2

56:06.940 --> 56:07.940
operate是个加号

56:07.940 --> 56:08.940
对吧

56:08.940 --> 56:09.940
加号里面放了一个值

56:09.940 --> 56:10.940
是多少

56:10.940 --> 56:11.940
这边

56:11.940 --> 56:12.940
这边是不是

56:12.940 --> 56:13.940
我们第一那个

56:13.940 --> 56:14.940
那个叫什么

56:14.940 --> 56:15.940
如果是

56:15.940 --> 56:16.940
现在是第二次循环的话

56:16.940 --> 56:17.940
那它就1

56:17.940 --> 56:18.940
对吧

56:18.940 --> 56:19.940
1里面array的1是多少

56:19.940 --> 56:20.940
把这个

56:20.940 --> 56:21.940
加号压进去

56:21.940 --> 56:22.940
把前面的

56:22.940 --> 56:23.940
这个数字加进去

56:23.940 --> 56:24.940
这个数值是

56:24.940 --> 56:26.940
第一个1进去的

56:27.940 --> 56:28.940
然后这个数值

56:28.940 --> 56:29.940
这时候再压的

56:29.940 --> 56:30.940
它是2

56:30.940 --> 56:31.940
理解吧

56:31.940 --> 56:32.940
这两个区别

56:33.940 --> 56:34.940
你第一次

56:34.940 --> 56:36.940
走的数值的时候的话

56:36.940 --> 56:37.940
你第一次走数值

56:37.940 --> 56:38.940
1的时候的话

56:38.940 --> 56:39.940
在这边走

56:39.940 --> 56:40.940
所以number里面

56:40.940 --> 56:41.940
放的是多少

56:41.940 --> 56:42.940
1

56:42.940 --> 56:43.940
第二次走加号的时候

56:43.940 --> 56:44.940
是把1

56:44.940 --> 56:46.940
放到了这个number里面去了

56:46.940 --> 56:48.940
放到这个operate里面去了

56:48.940 --> 56:49.940
1加进去了

56:49.940 --> 56:50.940
那么

56:50.940 --> 56:51.940
再走一圈的时候

56:51.940 --> 56:52.940
跑这来的时候

56:52.940 --> 56:53.940
它里面是2

56:53.940 --> 56:55.940
所以2在这里进去了

56:55.940 --> 56:56.940
理解吧

56:56.940 --> 56:59.940
这里面存的是obtarr1加2

56:59.940 --> 57:00.940
OK

57:00.940 --> 57:01.940
然后紧接着

57:01.940 --> 57:02.940
我们0的话

57:02.940 --> 57:03.940
因为

57:03.940 --> 57:04.940
这边进去的1

57:04.940 --> 57:05.940
请注意

57:05.940 --> 57:06.940
这个1进去的

57:06.940 --> 57:07.940
它是一个字符串

57:07.940 --> 57:08.940
注意

57:08.940 --> 57:09.940
这个1

57:09.940 --> 57:13.380
它是一个字符串

57:13.380 --> 57:14.380
它是个字符串

57:14.380 --> 57:16.380
而这个符号

57:16.380 --> 57:17.380
也是一个字符串

57:17.380 --> 57:27.760
但是在

57:27.760 --> 57:28.760
这一步

57:28.760 --> 57:29.760
做完的时候

57:31.760 --> 57:32.760
第二个数

57:32.760 --> 57:39.110
是数字

57:39.110 --> 57:40.110
这点你要知道

57:40.110 --> 57:41.110
那么

57:41.110 --> 57:42.110
为了让它

57:42.110 --> 57:43.110
第一个数也是数字

57:43.110 --> 57:44.110
所以他做了一步这个

57:44.110 --> 57:45.110
我们看到

57:45.110 --> 57:46.110
operator0

57:46.110 --> 57:48.110
然后乘上至1.0的话

57:48.110 --> 57:49.110
是表示

57:49.110 --> 57:51.110
我们这个可以有小数的

57:51.110 --> 57:52.110
flot类型

57:52.110 --> 57:53.110
OK

57:53.110 --> 57:54.110
到这一步以后

57:54.110 --> 57:56.110
我们result里面

57:56.110 --> 57:57.110
应该你能看到的

57:57.110 --> 57:58.110
就是我现在

57:58.110 --> 57:59.110
第一个数值

57:59.110 --> 58:01.110
1加2的1

58:01.110 --> 58:02.110
放这里边了

58:02.110 --> 58:04.110
然后开始循环

58:04.110 --> 58:06.110
整个1加2

58:06.110 --> 58:07.110
循环整个1加2

58:07.110 --> 58:08.110
循环过程中

58:08.110 --> 58:09.110
从1开始

58:09.110 --> 58:10.110
为什么

58:10.110 --> 58:11.110
因为第一个数字

58:11.110 --> 58:12.110
已经放进去了

58:12.110 --> 58:13.110
它从后面开始

58:13.110 --> 58:14.110
从符号开始

58:14.110 --> 58:15.110
看一下符号

58:15.110 --> 58:17.110
符号里面是多少

58:17.110 --> 58:18.110
是加吗

58:18.110 --> 58:19.110
是加

58:19.110 --> 58:20.110
是加的话

58:20.110 --> 58:22.110
那就把你后面的这个数值

58:22.110 --> 58:23.110
后面数值多少

58:23.110 --> 58:25.110
是我现在里面的2

58:25.110 --> 58:26.110
对吧

58:26.110 --> 58:28.110
是我们的第二个数字

58:28.110 --> 58:29.110
所以把第二个数字的话

58:29.110 --> 58:31.110
我们1加2的整个结构

58:31.110 --> 58:32.110
把2

58:32.110 --> 58:33.110
转成数值以后

58:33.110 --> 58:35.110
把它存进去

58:35.110 --> 58:36.110
做一个怎么存

58:36.110 --> 58:37.110
加法

58:37.110 --> 58:38.110
数字在这

58:38.110 --> 58:39.110
变成的是1

58:39.110 --> 58:41.110
在这变成的是1加2

58:41.110 --> 58:42.110
把result里面

58:42.110 --> 58:43.110
这时候它就变成3了

58:43.110 --> 58:45.110
然后跳过

58:45.110 --> 58:46.110
因为加整成数是一样的

58:46.110 --> 58:47.110
对吧

58:47.110 --> 58:48.110
result里面就变3了

58:48.110 --> 58:49.110
最后的话

58:49.110 --> 58:51.110
你把你现在3的这个结果

58:51.110 --> 58:53.110
存到logs里面

58:53.110 --> 58:55.110
然后我们在屏幕上面

58:55.110 --> 58:57.110
把result3给呈现出来

58:57.110 --> 58:58.110
然后在这边

58:58.110 --> 59:00.110
我们把整个的logs结果

59:00.110 --> 59:03.110
存到了我们的一个global data中

59:03.110 --> 59:06.110
以及我们把现在的所有数据

59:06.110 --> 59:07.110
还原成我们所需要的

59:07.110 --> 59:09.110
基本结构

59:09.110 --> 59:11.110
就是arrow里面清掉

59:11.110 --> 59:12.110
之后我们要计算

59:12.110 --> 59:13.110
下一次的操作

59:13.110 --> 59:14.110
然后Pose里面

59:14.110 --> 59:16.110
我们放入现在结果

59:16.110 --> 59:17.110
就是1加2

59:17.110 --> 59:18.110
等于3

59:18.110 --> 59:19.110
把那3也放进去

59:19.110 --> 59:20.110
好了

59:20.110 --> 59:21.110
现在来看一下

59:21.110 --> 59:22.110
现在我说了1加2

59:22.110 --> 59:25.110
我看等于1点下去

59:25.110 --> 59:26.110
是不是3

59:26.110 --> 59:27.110
3的话就是

59:27.110 --> 59:29.110
它刚才我说的这么多的一些

59:29.110 --> 59:30.110
经历了过程以后

59:30.110 --> 59:33.110
最后造这一步的显示

59:33.110 --> 59:35.110
是这个过程

59:35.110 --> 59:36.110
这个的话

59:36.110 --> 59:38.110
我们逻辑性还是比人强

59:38.110 --> 59:39.110
它有点

59:39.110 --> 59:40.110
特别是在哪呢

59:40.110 --> 59:42.110
特别是它的一个GS里面

59:42.110 --> 59:44.110
因为GS里面的数据类型转换

59:44.110 --> 59:46.110
取它里面部分内容

59:46.110 --> 59:48.110
as判断Pose数据的

59:48.110 --> 59:50.110
数组的压和拿

59:50.110 --> 59:52.110
再包括我们现在的判断

59:52.110 --> 59:53.110
整个这个的话

59:53.110 --> 59:55.110
我们需要大家好好地去进行

59:55.110 --> 59:56.110
一个数字

59:56.110 --> 59:58.110
就拿我刚才给你举的势力

59:58.110 --> 01:00:00.110
1加2的势质

01:00:00.110 --> 01:00:01.110
一步一步的走

01:00:01.110 --> 01:00:02.110
在没走一步的时候

01:00:02.110 --> 01:00:03.110
给自己一个解释

01:00:03.110 --> 01:00:05.110
这个地方存上这个字以后

01:00:05.110 --> 01:00:06.110
它是什么类型的

01:00:06.110 --> 01:00:08.110
它现在数字是多多少

01:00:08.110 --> 01:00:09.110
然后走下一步

01:00:09.110 --> 01:00:10.110
这样过程

01:00:10.110 --> 01:00:12.110
等你全部走完一遍以后

01:00:12.110 --> 01:00:13.110
你再回过头来来看的时候

01:00:13.110 --> 01:00:15.110
你会清晰很多

01:00:15.110 --> 01:00:16.110
一定要去走

01:00:16.110 --> 01:00:17.110
不然的话

01:00:17.110 --> 01:00:18.110
那么数据类型

01:00:18.110 --> 01:00:20.110
在这个过程中

01:00:20.110 --> 01:00:21.110
它会进行转换

01:00:21.110 --> 01:00:22.110
这个意思

01:00:22.110 --> 01:00:24.110
同时我们现在看到了

01:00:24.110 --> 01:00:26.110
现在的简单的一个

01:00:26.110 --> 01:00:27.110
加点整处

01:00:27.110 --> 01:00:28.110
退退功能

01:00:28.110 --> 01:00:29.110
但是我们现在还缺一个

01:00:29.110 --> 01:00:30.110
对吧

01:00:30.110 --> 01:00:32.110
我们缺一个历史记录

01:00:32.110 --> 01:00:33.110
我们需要跳转页面

01:00:33.110 --> 01:00:35.110
显示你刚才到底

01:00:35.110 --> 01:00:36.110
做过一些什么

01:00:36.110 --> 01:00:37.110
历史记录

01:00:37.110 --> 01:00:38.110
我们一般性手机都有

01:00:38.110 --> 01:00:40.110
无论是你下拉

01:00:40.110 --> 01:00:41.110
我们的屏幕上面

01:00:41.110 --> 01:00:42.110
还是属于跳转页面

01:00:42.110 --> 01:00:43.110
因为微信

01:00:43.110 --> 01:00:44.110
我们现在做法上

01:00:44.110 --> 01:00:45.110
我们以跳转页面来做

01:00:45.110 --> 01:00:46.110
来做

01:00:46.110 --> 01:00:47.110
好

01:00:47.110 --> 01:00:48.110
那么现在

01:00:48.110 --> 01:00:49.110
先把前面内容看一下

01:00:49.110 --> 01:00:50.110
那么待会休息一下

01:00:50.110 --> 01:00:51.110
我们来做历史记录

