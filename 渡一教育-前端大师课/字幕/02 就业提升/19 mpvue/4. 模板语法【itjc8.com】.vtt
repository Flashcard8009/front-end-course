WEBVTT

00:00.240 --> 00:03.240
好 我们继续讲解MPVU系列课程

00:03.240 --> 00:06.240
这些课呢 给大家讲解一下模板语法

00:06.240 --> 00:11.240
在之前 大家应该也就学过我们的view的课程

00:11.240 --> 00:16.240
所以对模板语法的讲解呢 我们不去讲深入 原理

00:16.240 --> 00:21.240
我们只讲它的一个 用view的语法 在MPVU中的一个使用

00:21.240 --> 00:25.240
然后呢 如果前面的课程 有些不熟悉同学

00:25.240 --> 00:29.240
一 你可以把前面的view的课程再学一下

00:29.240 --> 00:36.240
第二呢 把我们的MPVU的这样的一个学习步骤和之前的进行对比

00:36.240 --> 00:42.240
同时呢 我们也可以在从中学习到一些 或者复习到一些view的语法

00:42.240 --> 00:48.320
说起模板语法呢 基本上我们讲 在MPVU中呢

00:48.320 --> 00:54.320
我们可以基本上全都支持我们view的一些语法格式

00:54.320 --> 00:56.320
那么view的语法格式有哪些呢

00:56.320 --> 01:02.320
比如说文文绑定 原生HTML 特性JRScrew脚本的一些编码

01:02.320 --> 01:08.320
那么这些呢 是所谓的是那个综合称之为模板语法结构

01:08.320 --> 01:12.320
待会儿呢 我们给大家演示一下这些内容 在MPVU中的操作

01:12.320 --> 01:15.320
但是也有一些少部分例外 比如说

01:15.320 --> 01:18.320
我们在view里面讲到的动态参数

01:18.320 --> 01:22.320
那么这一块的话呢 那么至少现在在微信小程序中

01:22.320 --> 01:24.320
它是不可以去使用的

01:24.320 --> 01:28.320
第二个呢 我们称之为复杂的JRScrew列表的一个渲染设法

01:28.320 --> 01:32.320
这个方式呢 也在我们的微信小程序里面是不可用

01:32.320 --> 01:37.320
那这两种方式 当然用的我们平时的概率也会非常小

01:37.320 --> 01:39.320
我们这边呢 会去提一下

01:39.320 --> 01:43.320
我们之前有已经学过 所以呢 这块内容我们就直接打开

01:43.320 --> 01:50.320
同时也给大家解释介绍一下我们现在的整个结构和里面的一些书写格式

01:50.320 --> 01:55.320
我们打开我们之前所讲解的内容 前建立的一个项目

01:55.320 --> 01:57.320
我们不在这边呢 重新建了

01:57.320 --> 02:00.320
我们就在这里面 继续进行给大家的开发

02:00.320 --> 02:05.320
同时呢 我们也切到了一个新的分支 模板与法

02:05.320 --> 02:09.320
那么之后大家如果自己开发的时候 也会用这样的方式

02:09.320 --> 02:12.320
就是 我们在利用前面代码的过程中

02:12.320 --> 02:16.320
我们先建一个分支 做一个新分支操作

02:16.320 --> 02:19.320
这样的话呢 前面的内容我们一样都能看得见

02:19.320 --> 02:26.320
那么我们先看一下我们这里别人的代码结构和我们的代码的一个书写位置

02:26.320 --> 02:30.320
打开src 打开src里面呢 我们会发现

02:30.320 --> 02:33.320
我们找到我们现在的

02:33.320 --> 02:37.320
先看这个 先看这个Patrick.json

02:37.320 --> 02:41.320
Patrick.json打开以后 我们往上走

02:41.320 --> 02:46.320
不是 是在 他是在

02:47.320 --> 02:48.320
这儿啊

02:48.320 --> 02:50.320
app.json这位置

02:50.320 --> 02:55.320
然后我们看到Peters代表的是 我们第一个页面是index.man

02:55.320 --> 02:57.320
index.man

02:57.320 --> 03:01.320
所以呢 我们直接去找到我们在src里面

03:01.320 --> 03:04.320
Peters里面的man这个位置

03:04.320 --> 03:08.320
我们打开看一下 系统给到我们的几个简单实例

03:08.320 --> 03:11.320
这里面一共只有两个文件

03:11.320 --> 03:16.320
那么对于我们平时所谓的微信小证据四大件的话呢

03:16.320 --> 03:19.320
那么其实这里面就涵盖了

03:19.320 --> 03:21.320
第一个的话呢 就是templator

03:21.320 --> 03:22.320
我们看到的

03:22.320 --> 03:27.320
这个就是我们大家在view中的我们的形式

03:27.320 --> 03:29.320
那么这个显示呢

03:29.320 --> 03:34.320
主要的作用就是我们在微信中的那个wxml

03:34.320 --> 03:37.320
第二个是我们的script

03:37.320 --> 03:41.320
就是在微信中的我们的那个

03:41.320 --> 03:44.320
那个叫做gs文件

03:44.320 --> 03:46.320
第三个就是我们这边的style

03:46.320 --> 03:51.320
就是微信中的我们那个叫做wxss文件

03:51.320 --> 03:52.320
三个文件在这儿

03:52.320 --> 03:54.320
那么有一个man.gs

03:54.320 --> 03:56.320
那么这个说明一下

03:56.320 --> 03:59.320
这个不是我们在那里面的json配置文件

03:59.320 --> 04:02.320
它是一个挂载启动文件

04:02.320 --> 04:05.320
每个你要新建的页面

04:05.320 --> 04:08.320
你们都得有一个这个man.gs

04:08.320 --> 04:10.320
即使你里面什么都不放

04:10.320 --> 04:11.320
你都得需要有这个文件

04:11.320 --> 04:13.320
不然它会爆错

04:13.320 --> 04:14.320
好 这边先说一下

04:14.320 --> 04:16.320
待会我们也会新建

04:16.320 --> 04:17.320
同时呢 我们来看一下啊

04:17.320 --> 04:20.320
系统所给到我们的一个案例

04:20.320 --> 04:22.320
这里面有些什么东西

04:22.320 --> 04:26.320
那么待会我们大家也可以自己去尝试去做

04:26.320 --> 04:27.320
样式不看了

04:27.320 --> 04:28.320
样式不看了

04:28.320 --> 04:29.320
样式本身来讲

04:29.320 --> 04:31.320
还是属于利用了弹性布局

04:31.320 --> 04:32.320
之后我们写的时候

04:32.320 --> 04:34.320
也会多少用到一点

04:34.320 --> 04:35.320
然后呢

04:35.320 --> 04:37.320
在我们的最上面

04:37.320 --> 04:39.320
我们在template里面

04:39.320 --> 04:40.320
无任何一个template

04:40.320 --> 04:42.320
都需要有一个跟文件存在

04:42.320 --> 04:43.320
然后呢

04:43.320 --> 04:45.320
我们直接完成

04:45.320 --> 04:46.320
这是属于什么

04:46.320 --> 04:48.320
这是属于事件的操作

04:48.320 --> 04:49.320
对不对

04:49.320 --> 04:50.320
调用一个事件

04:50.320 --> 04:52.320
然后用at作为我们的

04:52.320 --> 04:54.320
一个on的一个缩写

04:54.320 --> 04:55.320
第二呢

04:55.320 --> 04:57.320
在我们这里面的div中

04:57.320 --> 04:58.320
也完成一个事件

04:58.320 --> 05:00.320
调用了一个bound view tab

05:00.320 --> 05:01.320
OK

05:01.320 --> 05:02.320
再往下

05:02.320 --> 05:04.320
看到的是

05:04.320 --> 05:06.320
这边它利用了一个v4

05:06.320 --> 05:07.320
vf

05:07.320 --> 05:09.320
就是我们的那个渲染

05:09.320 --> 05:10.320
这个的话呢

05:10.320 --> 05:12.320
我们之后会分别细的

05:12.320 --> 05:13.320
再来说一下

05:13.320 --> 05:14.320
这边系统看到的

05:14.320 --> 05:15.320
然后呢

05:15.320 --> 05:16.320
做了一个强绑定

05:16.320 --> 05:18.320
我们的src

05:18.320 --> 05:20.320
给出了一个对象里面的

05:20.320 --> 05:21.320
某一个

05:21.320 --> 05:23.320
值我们称之为属性

05:23.320 --> 05:24.320
然后呢

05:24.320 --> 05:25.320
这边都是我们之前

05:25.320 --> 05:26.320
大家学过的

05:26.320 --> 05:27.320
应该是

05:27.320 --> 05:28.320
之后我们可以做复习

05:28.320 --> 05:29.320
在这边呢

05:29.320 --> 05:31.320
我们是tester强绑定

05:31.320 --> 05:32.320
给出了一个对象里面的

05:32.320 --> 05:33.320
一个属性

05:33.320 --> 05:34.320
那么

05:34.320 --> 05:35.320
包括是这边

05:35.320 --> 05:36.320
也强绑定给出一个

05:36.320 --> 05:37.320
我们说过

05:37.320 --> 05:38.320
我们在属性里面

05:38.320 --> 05:39.320
不可以直接使用

05:39.320 --> 05:40.320
我们的双影

05:40.320 --> 05:41.320
那个双刀

05:41.320 --> 05:42.320
Mustach与法

05:42.320 --> 05:44.320
那么我们往下看

05:44.320 --> 05:46.320
这时候你会看到

05:46.320 --> 05:48.320
在我们的script里面

05:48.320 --> 05:49.320
那么

05:49.320 --> 05:50.320
先看到这个

05:50.320 --> 05:51.320
exported default

05:51.320 --> 05:52.320
代表的是

05:52.320 --> 05:53.320
它是一个

05:53.320 --> 05:55.320
输出默认的一个形式

05:55.320 --> 05:56.320
这里边呢

05:56.320 --> 05:57.320
首先有个data

05:57.320 --> 05:59.320
data是一个我们的

05:59.320 --> 06:01.320
后面是一个方法

06:01.320 --> 06:02.320
然后它需要一个return

06:02.320 --> 06:04.320
这是固定的格式

06:04.320 --> 06:05.320
然后呢

06:05.320 --> 06:07.320
这边是我们的moto

06:07.320 --> 06:08.320
这是我们

06:08.320 --> 06:09.320
上面所应该看到的

06:09.320 --> 06:10.320
一个变量

06:10.320 --> 06:11.320
对不对

06:11.320 --> 06:12.320
我们采用了一个文本格式

06:12.320 --> 06:13.320
待会我们一起来

06:13.320 --> 06:14.320
演示一下

06:14.320 --> 06:15.320
再有的话呢

06:15.320 --> 06:16.320
这就是一个对象

06:16.320 --> 06:17.320
对吧

06:17.320 --> 06:18.320
里面两个属性

06:18.320 --> 06:19.320
然后呢

06:19.320 --> 06:20.320
我们看到

06:20.320 --> 06:21.320
这边是我们的

06:21.320 --> 06:22.320
生命周期

06:23.320 --> 06:24.320
在我们之前

06:24.320 --> 06:25.320
已经讲过

06:25.320 --> 06:26.320
我们这边是

06:26.320 --> 06:27.320
写生命周期的

06:28.320 --> 06:29.320
你可以写上

06:29.320 --> 06:30.320
任何一个生命周期

06:30.320 --> 06:31.320
然后呢

06:31.320 --> 06:32.320
在这边

06:32.320 --> 06:33.320
那么你如果是写在

06:33.320 --> 06:35.320
像我们这边位置上的

06:35.320 --> 06:36.320
那我们就称之为

06:36.320 --> 06:38.320
这是属于页面级的

06:38.320 --> 06:39.320
如果你写在外面

06:39.320 --> 06:40.320
那个view

06:40.320 --> 06:41.320
那个view

06:41.320 --> 06:42.320
那个上面的

06:42.320 --> 06:43.320
那是处于全局性的

06:43.320 --> 06:45.320
然后components

06:45.320 --> 06:47.320
components

06:47.320 --> 06:48.320
这是组件

06:48.320 --> 06:50.320
里面写了card

06:50.320 --> 06:51.320
一看就明白

06:51.320 --> 06:52.320
它其实是card

06:52.320 --> 06:53.320
code

06:53.320 --> 06:54.320
card

06:54.320 --> 06:55.320
那么往上找

06:55.320 --> 06:56.320
一定能找到这个词

06:56.320 --> 06:57.320
也就是它外部

06:57.320 --> 06:58.320
引入了一个组件

06:58.320 --> 06:59.320
对不对

06:59.320 --> 07:00.320
好

07:00.320 --> 07:01.320
那么这个组件card

07:01.320 --> 07:02.320
我们往上一看

07:02.320 --> 07:03.320
肯定上面有

07:03.320 --> 07:04.320
对不对

07:04.320 --> 07:05.320
这个是

07:05.320 --> 07:06.320
OK

07:06.320 --> 07:07.320
那么这个的话

07:07.320 --> 07:08.320
就眼睛先瞄一下

07:08.320 --> 07:09.320
然后messager

07:09.320 --> 07:10.320
我们的所有的方法

07:10.320 --> 07:11.320
一个方法

07:11.320 --> 07:12.320
两个方法

07:12.320 --> 07:13.320
里面东西暂时可以不看

07:13.320 --> 07:14.320
代表的是

07:14.320 --> 07:15.320
我们点击以后

07:15.320 --> 07:16.320
会有一些显示

07:16.320 --> 07:18.320
那么有一个create方法

07:18.320 --> 07:19.320
OK

07:19.320 --> 07:20.320
那么整个的

07:20.320 --> 07:21.320
它的一个

07:21.320 --> 07:23.320
给我们的案例的话

07:23.320 --> 07:24.320
应该也是符合

07:24.320 --> 07:25.320
我们之前

07:25.320 --> 07:27.320
大家view的一个习惯

07:27.320 --> 07:28.320
用法

07:28.320 --> 07:29.320
只不过

07:29.320 --> 07:30.320
我们很少

07:30.320 --> 07:31.320
在

07:31.320 --> 07:32.320
或者我没有用过

07:32.320 --> 07:33.320
在mpview中

07:33.320 --> 07:35.320
去使用这样的一个格式

07:35.320 --> 07:36.320
我们这样

07:36.320 --> 07:37.320
我们此时

07:37.320 --> 07:38.320
新建一个页面

07:38.320 --> 07:39.320
然后

07:39.320 --> 07:41.320
我们在自己新建页面中

07:41.320 --> 07:42.320
把模板语法

07:42.320 --> 07:43.320
几个点

07:43.320 --> 07:44.320
复习一下

07:44.320 --> 07:45.320
并且告知大家

07:45.320 --> 07:46.320
哪些是可用

07:46.320 --> 07:47.320
哪些不可用

07:47.320 --> 07:48.320
做法上很简单

07:48.320 --> 07:49.320
我们首先

07:49.320 --> 07:51.320
在paders里面

07:51.320 --> 07:53.320
咱们去新建一个

07:53.320 --> 07:54.320
flotter

07:54.320 --> 07:55.320
目录

07:55.320 --> 07:56.320
我们称之为

07:56.320 --> 07:57.320
tester测试

07:59.320 --> 08:00.320
然后在flotter下面

08:00.320 --> 08:01.320
我们刚才说过

08:01.320 --> 08:03.320
我们每一个的链接

08:03.320 --> 08:05.320
或者每一个的paders

08:05.320 --> 08:06.320
咱们都得有一个

08:06.320 --> 08:07.320
man.js

08:08.320 --> 08:09.320
有这样一个文件

08:09.320 --> 08:11.320
然后我们现在

08:11.320 --> 08:12.320
还需要去

08:12.320 --> 08:13.320
创建一个

08:13.320 --> 08:15.320
我们比如说index.ve

08:16.320 --> 08:18.320
我们每一个的下面

08:18.320 --> 08:19.320
都必须有这样

08:19.320 --> 08:20.320
两个文件存在

08:20.320 --> 08:22.320
这个名称

08:22.320 --> 08:23.320
你现在可以

08:23.320 --> 08:24.320
不一定是index

08:24.320 --> 08:25.320
因为我在man

08:25.320 --> 08:26.320
中进导入的时候

08:26.320 --> 08:28.320
我们可以选择性的

08:28.320 --> 08:29.320
但我们现在一般

08:29.320 --> 08:30.320
都会去index

08:30.320 --> 08:31.320
第二

08:31.320 --> 08:32.320
如果你需要有

08:32.320 --> 08:34.320
单页面的配置的话

08:34.320 --> 08:35.320
单页面框架的话

08:35.320 --> 08:36.320
我们可以做一个

08:36.320 --> 08:37.320
man.json的

08:37.320 --> 08:38.320
格式的创建

08:38.320 --> 08:39.320
ok

08:39.320 --> 08:40.320
那我们先创建两个以后

08:40.320 --> 08:43.320
我们在index.ve中

08:43.320 --> 08:44.320
我们ve

08:44.320 --> 08:45.320
然后采取

08:45.320 --> 08:46.320
模板式的

08:46.320 --> 08:47.320
格式化的显示

08:47.320 --> 08:48.320
ve tab建就可以了

08:48.320 --> 08:51.320
然后我们在man.js中

08:51.320 --> 08:52.320
我们

08:52.320 --> 08:53.320
依然去把

08:53.320 --> 08:54.320
之前的那强弹码

08:54.320 --> 08:55.320
给书写掉

08:55.320 --> 08:56.320
首先

08:56.320 --> 08:57.320
import

08:57.320 --> 08:59.320
把ve导进来

08:59.320 --> 09:00.320
然后呢

09:00.320 --> 09:02.320
是ve小写

09:02.320 --> 09:03.320
同时

09:03.320 --> 09:05.320
帮我们把

09:05.320 --> 09:06.320
app导进来

09:06.320 --> 09:07.320
那这个app

09:07.320 --> 09:09.320
是页面对象

09:09.320 --> 09:10.320
在哪

09:10.320 --> 09:11.320
同级目录下的

09:11.320 --> 09:13.320
index.ve

09:14.320 --> 09:15.320
导进来

09:16.320 --> 09:17.320
再来

09:17.320 --> 09:18.320
我们完成

09:18.320 --> 09:20.320
一个new view的

09:20.320 --> 09:21.320
创建

09:21.320 --> 09:23.320
然后存储为一个长量

09:23.320 --> 09:26.980
然后

09:26.980 --> 09:27.980
把app

09:27.980 --> 09:29.980
加载为我们的

09:29.980 --> 09:30.980
构造函数

09:30.980 --> 09:31.980
最后

09:31.980 --> 09:32.980
拿出我们的长量

09:32.980 --> 09:33.980
执行

09:33.980 --> 09:34.980
挂载动作

09:40.810 --> 09:41.810
gsm里面的话

09:41.810 --> 09:42.810
这后面

09:42.810 --> 09:43.810
可打封号

09:43.810 --> 09:44.810
可不打

09:44.810 --> 09:45.810
那么我这边

09:45.810 --> 09:46.810
习惯了

09:46.810 --> 09:47.810
就不打封号

09:47.810 --> 09:48.810
你要打的话

09:48.810 --> 09:49.810
也没有关系

09:49.810 --> 09:50.810
这个呢

09:50.810 --> 09:51.810
基本上是

09:51.810 --> 09:52.810
已经形成一个

09:52.810 --> 09:53.810
固定的套路了

09:53.810 --> 09:54.810
或者话

09:54.810 --> 09:55.810
都可以直接把

09:55.810 --> 09:56.810
这段代码

09:56.810 --> 09:57.810
你也可以从其他地方

09:57.810 --> 09:58.810
复制过来

09:58.810 --> 09:59.810
当然

09:59.810 --> 10:00.810
确保他现在这里面

10:00.810 --> 10:02.810
比如说这个页面下面

10:02.810 --> 10:03.810
这个目录下

10:03.810 --> 10:04.810
就是一个index

10:04.810 --> 10:05.810
不然的话

10:05.810 --> 10:06.810
你这边需要改

10:06.810 --> 10:07.810
第二呢

10:07.810 --> 10:09.810
我们打开我们的view

10:09.810 --> 10:10.810
我们在这上面

10:10.810 --> 10:13.810
我们就可以去测试一下

10:13.810 --> 10:15.810
我们之前写的部分

10:15.810 --> 10:16.810
首先

10:16.810 --> 10:18.810
我们在computer里面

10:18.810 --> 10:19.810
template里面

10:19.810 --> 10:21.810
我们得有一个根路径

10:21.810 --> 10:22.810
我们有一个根文件

10:22.810 --> 10:23.810
同时呢

10:23.810 --> 10:26.810
我们在现在的expert default里面

10:26.810 --> 10:27.810
我们需要有一个

10:27.810 --> 10:29.810
我们自己的

10:29.810 --> 10:30.810
那个return

10:30.810 --> 10:32.810
就是我们的data数据

10:32.810 --> 10:34.810
我们data数据

10:34.810 --> 10:37.810
里面是一个return的数据返回

10:37.810 --> 10:38.810
这样的格式

10:38.810 --> 10:40.810
那么你可以先做一个

10:40.810 --> 10:41.810
简单的文本

10:41.810 --> 10:43.810
就是我们在view中

10:43.810 --> 10:45.810
所使用到的我们的

10:45.810 --> 10:46.810
文本格式

10:46.810 --> 10:51.020
我们先写一下

10:51.020 --> 10:52.020
文本格式的用法

10:52.020 --> 10:54.020
我们先写

10:54.020 --> 10:55.020
这边不是这个格式

10:55.020 --> 10:56.020
对吧

10:56.020 --> 10:57.020
应该是这样的

10:57.020 --> 11:01.350
具体的为什么和原理

11:01.350 --> 11:02.350
我在这就不讲了

11:02.350 --> 11:03.350
这个

11:03.350 --> 11:04.350
因为对大家来讲的话

11:04.350 --> 11:06.350
这个不是属于一个

11:06.350 --> 11:07.350
陌生的东西

11:07.350 --> 11:09.350
它只是你现在

11:09.350 --> 11:11.350
可能你原先在view.js中使用

11:11.350 --> 11:12.350
而你很少

11:12.350 --> 11:14.350
或者说根本就没有接触过

11:14.350 --> 11:16.350
在我们的

11:16.350 --> 11:17.350
MVP中

11:17.350 --> 11:19.350
我们在这写一下

11:19.350 --> 11:20.350
首先

11:20.350 --> 11:21.350
第一个

11:21.350 --> 11:29.020
我们写上span

11:29.020 --> 11:33.350
我们写上

11:33.350 --> 11:35.350
study class

11:35.350 --> 11:37.350
学习课程

11:37.350 --> 11:38.350
然后我们把

11:38.350 --> 11:41.660
class写出来

11:41.660 --> 11:42.660
你这是

11:42.660 --> 11:43.660
我们不能这么写对吧

11:43.660 --> 11:44.660
class念

11:44.660 --> 11:46.660
我们这样

11:46.660 --> 11:48.660
那么我们就可以在

11:48.660 --> 11:49.660
我们的return里面

11:49.660 --> 11:53.770
我们把

11:53.770 --> 11:55.770
class念给定义掉

11:55.770 --> 11:56.770
对吧

11:56.770 --> 11:58.770
我们定义成

11:58.770 --> 12:03.940
mpv

12:03.940 --> 12:05.940
学习

12:05.940 --> 12:06.940
保存

12:06.940 --> 12:07.940
此时你看

12:07.940 --> 12:08.940
它其实是编译的

12:08.940 --> 12:09.940
看到没有

12:09.940 --> 12:11.940
但是如果你这时候

12:11.940 --> 12:13.940
你去到我们的

12:13.940 --> 12:14.940
这个文件中的时候

12:14.940 --> 12:16.940
你会发现

12:16.940 --> 12:18.940
它根本就没有打开

12:18.940 --> 12:19.940
它根本就没有打开

12:19.940 --> 12:21.940
那么原因是在哪里呢

12:21.940 --> 12:23.940
原因是在于

12:23.940 --> 12:25.940
你在我们的

12:25.940 --> 12:28.440
mpv

12:28.440 --> 12:30.440
也就是vscoder里面

12:30.440 --> 12:31.440
去新建以后

12:31.440 --> 12:32.440
虽然编译了

12:32.440 --> 12:33.440
但是

12:33.440 --> 12:34.440
编译

12:34.440 --> 12:36.440
不会创建新页面

12:36.440 --> 12:37.440
也就是咱们看

12:37.440 --> 12:38.440
在我们的

12:38.440 --> 12:40.440
这个dister里面

12:40.440 --> 12:42.440
那个wish里面

12:42.440 --> 12:44.440
是不是在pages里面

12:44.440 --> 12:45.440
还只有两个文件

12:45.440 --> 12:46.440
对吧

12:46.440 --> 12:48.440
那么在这种情况下呢

12:48.440 --> 12:50.440
我们就需要对它进行

12:50.440 --> 12:52.440
重新的启动

12:52.440 --> 12:54.440
让它重新编译一次

12:54.440 --> 12:56.440
重新的运行一次

12:56.440 --> 12:57.440
所以coderc

12:57.440 --> 12:58.440
问你是否中止

12:58.440 --> 12:59.440
y中止

12:59.440 --> 13:01.440
然后npnstart

13:01.440 --> 13:03.440
重新启动一下

13:03.440 --> 13:05.440
只有重新的这样的一个

13:05.440 --> 13:07.440
那个npnrandv

13:07.440 --> 13:09.440
它才会完成

13:09.440 --> 13:10.440
把你新加页面

13:10.440 --> 13:11.440
添加进去

13:11.440 --> 13:14.440
我们看到有一个

13:14.440 --> 13:15.440
小错

13:15.440 --> 13:17.440
我们来看一下

13:17.440 --> 13:18.440
在这个愚法里面

13:18.440 --> 13:20.440
这也不是双引

13:20.440 --> 13:22.440
当引号的问题

13:22.440 --> 13:24.440
我们发现了

13:24.440 --> 13:25.440
我们这个名称

13:25.440 --> 13:26.440
少一个x

13:26.440 --> 13:27.440
对吧

13:27.440 --> 13:28.440
也就是它这边

13:28.440 --> 13:29.440
在载入的时候

13:29.440 --> 13:30.440
载入这个找不到了

13:30.440 --> 13:33.440
我们把这重新名一下

13:33.440 --> 13:35.440
我们

13:35.440 --> 13:36.440
这样做

13:36.440 --> 13:37.440
你看

13:37.440 --> 13:38.440
它的编译就好了

13:38.440 --> 13:39.440
完成了

13:39.440 --> 13:40.440
此时呢

13:40.440 --> 13:41.440
我们再到我们的

13:41.440 --> 13:42.440
我们先不来这边

13:42.440 --> 13:43.440
我们先到dister里面

13:43.440 --> 13:44.440
来看一下

13:44.440 --> 13:46.440
我们刷新一下

13:46.440 --> 13:48.440
我们刷新一下

13:48.440 --> 13:49.440
此时你看

13:49.440 --> 13:50.440
是不是在dister里面

13:50.440 --> 13:51.440
完成了

13:51.440 --> 13:53.440
我们有一个tester文件的出现了

13:53.440 --> 13:54.440
好

13:54.440 --> 13:56.440
此时你再到我们的这里来

13:56.440 --> 14:03.590
进行编译看一下

14:03.590 --> 14:05.590
是不是三个文件有了

14:05.590 --> 14:06.590
三个

14:06.590 --> 14:07.590
一二三吧

14:07.590 --> 14:08.590
但是有没有看到

14:08.590 --> 14:09.590
我们的tester

14:09.590 --> 14:10.590
tester页面呢

14:10.590 --> 14:11.590
没有

14:11.590 --> 14:12.590
原因在哪呢

14:12.590 --> 14:13.590
原因是在于

14:13.590 --> 14:16.590
你在这边新建页面的时候

14:16.590 --> 14:18.590
它不像在小程序里面

14:18.590 --> 14:20.590
小程序里面我们讲

14:20.590 --> 14:23.590
如果你在我们的Peters下新建

14:23.590 --> 14:25.590
它就会自动完成

14:25.590 --> 14:27.590
我们的app.json

14:27.590 --> 14:28.590
这里边

14:28.590 --> 14:29.590
这样的一个

14:29.590 --> 14:30.590
路径的自动添加

14:30.590 --> 14:32.590
但是这里是不会的

14:32.590 --> 14:33.590
所以呢

14:33.590 --> 14:35.590
你需要添加完

14:35.590 --> 14:36.590
新页面以后

14:36.590 --> 14:37.590
除了

14:37.590 --> 14:39.590
重新npnstar以外

14:39.590 --> 14:40.590
还需要

14:40.590 --> 14:41.590
当然

14:41.590 --> 14:42.590
你希望

14:42.590 --> 14:43.590
如果首页

14:43.590 --> 14:45.590
能够直接显示在小程序中

14:45.590 --> 14:47.590
你就需要自动

14:47.590 --> 14:49.590
手动的在Peters里面

14:49.590 --> 14:51.590
去完成这样的一个

14:51.590 --> 14:53.590
路径的编写

14:53.590 --> 14:56.590
我们是tester下面的man

14:56.590 --> 14:58.590
你需要这样去写

14:58.590 --> 14:59.590
当你这样写好

14:59.590 --> 15:01.590
contrast保存

15:01.590 --> 15:03.590
当然这边也是一样

15:03.590 --> 15:04.590
微信小程序

15:04.590 --> 15:06.590
由于它单独的contrast保存

15:06.590 --> 15:07.590
会把所有都保存掉

15:07.590 --> 15:09.590
但这里它是不会的

15:09.590 --> 15:10.590
你就要单独再存

15:10.590 --> 15:11.590
完成以后

15:11.590 --> 15:13.590
我们再到小程序来

15:13.590 --> 15:14.590
我们刷新

15:14.590 --> 15:18.220
是不是现在就出来了

15:18.220 --> 15:19.220
现在就出来了

15:19.220 --> 15:21.220
Peters testman

15:21.220 --> 15:23.220
这是属于我们哪个页面

15:23.220 --> 15:24.220
是我们test的页面

15:24.220 --> 15:26.220
但它没有显示内容

15:26.220 --> 15:27.220
是吧

15:27.220 --> 15:28.220
那我们现在回过头来

15:28.220 --> 15:30.220
我们来看一下

15:30.220 --> 15:32.220
我们先把这个可以关了

15:32.220 --> 15:34.220
那么在我们这个

15:34.220 --> 15:35.220
也可以关了

15:35.220 --> 15:37.220
在我们整个这个里面的话

15:37.220 --> 15:39.220
它的内容为什么没有出来

15:39.220 --> 15:41.220
那么你仔细来看一下

15:41.220 --> 15:42.220
起一下

15:42.220 --> 15:45.980
我们把它重起一下

15:45.980 --> 15:47.980
让它重新再编译一下

15:47.980 --> 15:53.150
我们这个页面

15:53.150 --> 15:54.150
编译好了

15:54.150 --> 15:56.150
我们再来看一下

15:56.150 --> 15:57.150
试出来了对吧

15:57.150 --> 15:59.150
我们刚才应该是再编译一次

15:59.150 --> 16:00.150
好了

16:00.150 --> 16:01.150
那么这样的话

16:01.150 --> 16:02.150
我们可以看到

16:02.150 --> 16:05.150
我们现在自行建立一个页面

16:05.150 --> 16:06.150
然后此时

16:06.150 --> 16:08.150
我们可以在我们的这里面

16:08.150 --> 16:10.150
完成文本格式的一个切换

16:10.150 --> 16:11.150
文本格式

16:11.150 --> 16:13.150
其实就是Mustach 语法

16:13.150 --> 16:14.150
这点的话

16:14.150 --> 16:16.150
其实很多同学都应该会知道

16:16.150 --> 16:17.150
在这

16:17.150 --> 16:19.150
你还记得这个消法吗

16:19.150 --> 16:21.150
Mustach

16:21.150 --> 16:23.150
这个语法

16:23.150 --> 16:24.150
OK

16:24.150 --> 16:26.150
紧接着我们再说一下

16:26.150 --> 16:28.150
那么有一个文字属性

16:28.150 --> 16:30.150
在我们一般views里面

16:30.150 --> 16:32.150
会用到的文字属性

16:32.150 --> 16:33.150
在这边

16:33.150 --> 16:36.150
它不是直接可以用的上

16:36.150 --> 16:37.150
当然这个用的

16:37.150 --> 16:39.150
非常少我这边提一下就是

16:39.150 --> 16:42.150
我们之前大家所讲解的

16:42.150 --> 16:44.150
有一个叫views

16:44.150 --> 16:46.150
有这样的一个属性

16:46.150 --> 16:47.150
它代表的是

16:47.150 --> 16:49.150
这个数值只可加载一次

16:49.150 --> 16:51.150
像这样的一次加载以后

16:51.150 --> 16:54.150
你在没有任何事件情况下

16:54.150 --> 16:56.150
你再次对它进行修改的话

16:56.150 --> 16:59.150
它是不会进行操作的

16:59.150 --> 17:01.150
这是views所做的事情

17:01.150 --> 17:03.150
但是views不可解决的事情

17:03.150 --> 17:05.150
是事件的多次修改

17:05.150 --> 17:07.150
它是解决不了这个事的

17:07.150 --> 17:09.150
你比如你看到这里边

17:09.150 --> 17:11.150
我们写上一个button

17:11.150 --> 17:13.150
当然这个button的话

17:13.150 --> 17:14.150
我们写上

17:14.150 --> 17:17.150
我们写一个事件

17:17.150 --> 17:21.190
我们说

17:21.190 --> 17:24.190
你比如说btn的click1

17:24.190 --> 17:26.190
然后我们在这边

17:26.190 --> 17:28.190
我们去搬一个message过来

17:28.190 --> 17:33.340
我们搬一个message

17:33.340 --> 17:38.760
我们在这边

17:38.760 --> 17:41.760
我们去把这样的一个事件

17:41.760 --> 17:43.760
给戴上

17:43.760 --> 17:55.140
这边

17:55.140 --> 17:57.140
那么我们现在的话

17:57.140 --> 17:59.140
我们随便的写一下

17:59.140 --> 18:01.140
我们去改变一下这个值

18:05.140 --> 18:07.140
所以你现在来看一下

18:07.140 --> 18:09.140
这个效果

18:09.140 --> 18:11.140
初始值的情况下

18:11.140 --> 18:14.900
初始值的情况下

18:14.900 --> 18:17.900
它的这个已经附上了我们的

18:17.900 --> 18:19.900
mpve学习

18:19.900 --> 18:22.900
此时由于我对它使用了一个views

18:22.900 --> 18:24.900
所以它本身来讲的话

18:24.900 --> 18:26.900
再次修改是不可以操作的

18:26.900 --> 18:28.900
但是我一旦点了changer

18:28.900 --> 18:30.900
你会发现它改变了

18:30.900 --> 18:31.900
原因就在于

18:31.900 --> 18:33.900
这个views的操作只针对于

18:33.900 --> 18:35.900
它现在不是

18:35.900 --> 18:37.900
非事件级的改变

18:37.900 --> 18:41.900
而是属于多次的加载的动态变化

18:41.900 --> 18:43.900
那么你如果需要dota

18:43.900 --> 18:45.900
也不是说在这边

18:45.900 --> 18:47.900
我们再去多做一个

18:47.900 --> 18:48.900
它是如果说

18:48.900 --> 18:50.900
如果大家学过view同学的话

18:50.900 --> 18:52.900
我们view都是干过这一事了

18:52.900 --> 18:54.900
如果说你同学还记得

18:54.900 --> 18:55.900
我这边说一下

18:55.900 --> 18:57.900
你那时候做view的时候是这样的

18:57.900 --> 18:58.900
对吧

18:58.900 --> 18:59.900
然后的话

18:59.900 --> 19:00.900
你view本身自己

19:00.900 --> 19:02.900
这里边有很多的事件

19:02.900 --> 19:04.900
你可以去操作

19:04.900 --> 19:05.900
完成很多的

19:05.900 --> 19:07.900
那么此时你可以利用

19:08.900 --> 19:09.900
view的对象

19:09.900 --> 19:11.900
我们说多实力的概念

19:11.900 --> 19:12.900
还记得吗

19:12.900 --> 19:13.900
多实力

19:13.900 --> 19:15.900
我们出现的是我们view的

19:16.900 --> 19:17.900
view的

19:17.900 --> 19:18.900
比如说a a

19:18.900 --> 19:19.900
这样一个对象

19:19.900 --> 19:20.900
对吧

19:20.900 --> 19:23.900
你用这个对象去修改值的时候

19:23.900 --> 19:26.900
那么此时是不可以对它修改的

19:26.900 --> 19:27.900
你这点要理解

19:28.900 --> 19:30.900
而此时现在的话

19:30.900 --> 19:32.900
我们现在是由于

19:32.900 --> 19:34.900
我们只存在于一个对象

19:34.900 --> 19:36.900
当然你用属性修改

19:36.900 --> 19:37.900
事件修改的话

19:37.900 --> 19:39.900
它是不受views影响

19:39.900 --> 19:41.900
所以这个值至少在这

19:41.900 --> 19:42.900
咱说不起作用

19:42.900 --> 19:44.900
这点咱们要明确一下

19:44.900 --> 19:46.900
你说的老师views

19:46.900 --> 19:47.900
他问你要

19:47.900 --> 19:48.900
这是经常我见到的

19:48.900 --> 19:49.900
有些同学

19:49.900 --> 19:50.900
考题之类

19:50.900 --> 19:51.900
出现过一次面世寿

19:51.900 --> 19:53.900
他就出现views

19:53.900 --> 19:54.900
问你这个值点下去

19:54.900 --> 19:55.900
是否会修改

19:55.900 --> 19:57.900
他说这views不可修改

19:57.900 --> 19:58.900
其实错了

19:58.900 --> 19:59.900
views本身自己

19:59.900 --> 20:01.900
它控制不了事件的改变

20:01.900 --> 20:02.900
ok

20:02.900 --> 20:03.900
那么这点的话

20:03.900 --> 20:04.900
我们说一下

20:04.900 --> 20:05.900
所以这边

20:05.900 --> 20:12.860
我也修写一下

20:12.860 --> 20:17.190
只能保持

20:18.190 --> 20:19.190
它只能保持

20:23.680 --> 20:24.680
对象的

20:26.680 --> 20:31.590
就是view对象的

20:31.590 --> 20:33.590
二次修改

20:34.590 --> 20:35.590
不能对

20:35.590 --> 20:36.590
事件

20:37.590 --> 20:38.590
修改

20:39.590 --> 20:40.590
做

20:40.590 --> 20:41.590
限制

20:42.590 --> 20:44.590
好这点我们这边写着

20:44.590 --> 20:45.590
这是属于

20:45.590 --> 20:47.900
我们最大的

20:47.900 --> 20:48.900
我们把它写出来

20:48.900 --> 20:49.900
这叫做

20:50.900 --> 20:51.900
模板

20:51.900 --> 20:55.690
预发

20:56.690 --> 20:57.690
再来

20:58.690 --> 20:59.690
那么我们之前

20:59.690 --> 21:00.690
也学到

21:00.690 --> 21:01.690
第二个部分

21:01.690 --> 21:02.690
或者说

21:03.690 --> 21:04.690
它可以算在

21:04.690 --> 21:05.690
模板预发里面

21:05.690 --> 21:06.690
那就是

21:06.690 --> 21:07.690
html

21:07.690 --> 21:08.690
或者称之为

21:08.690 --> 21:09.690
原始html

21:10.690 --> 21:11.690
有这部分内容

21:12.690 --> 21:13.690
那么在原始html

21:13.690 --> 21:14.690
中我们都知道

21:14.690 --> 21:15.690
就是页面中

21:15.690 --> 21:16.690
如果要呈现

21:16.690 --> 21:17.690
1.html内容的时候

21:17.690 --> 21:18.690
views是怎么解决的

21:18.690 --> 21:20.690
views经常会完成

21:20.690 --> 21:21.690
我们现在的

21:21.690 --> 21:22.690
一个叫做

21:22.690 --> 21:23.690
vhtml的结构

21:23.690 --> 21:24.690
是不是

21:24.690 --> 21:25.690
那么在这里面的话

21:25.690 --> 21:26.690
这个部分

21:26.690 --> 21:27.690
是可以使用的

21:27.690 --> 21:28.690
你来看一下

21:28.690 --> 21:29.690
但我们看到

21:29.690 --> 21:30.690
官网上面说

21:30.690 --> 21:31.690
它是不可以用

21:31.690 --> 21:32.690
那我这边

21:32.690 --> 21:33.690
给大家演示一下

21:34.690 --> 21:35.690
也许是

21:35.690 --> 21:36.690
官网在写的时候

21:36.690 --> 21:37.690
它的这个版本

21:37.690 --> 21:38.690
还没有更新吧

21:39.690 --> 21:40.690
我们写一个出来

21:40.690 --> 21:41.690
比如说我写个

21:41.690 --> 21:42.690
p标签

21:43.690 --> 21:44.690
p标签

21:44.690 --> 21:46.690
然后我这里边写一个

21:46.690 --> 21:47.690
就是一个

21:48.690 --> 21:51.770
我们把

21:51.770 --> 21:52.770
这个拿出来

21:52.770 --> 21:53.770
mpv

21:53.770 --> 21:55.770
我们把class name

21:55.770 --> 22:00.380
拿出来

22:01.380 --> 22:02.380
然后

22:02.380 --> 22:03.380
我们想对它

22:03.380 --> 22:04.380
我们执行一个

22:05.380 --> 22:08.780
h吧

22:09.780 --> 22:10.780
我们做个h2吧

22:11.780 --> 22:18.260
我们想对它的

22:19.260 --> 22:23.040
p标签

22:23.040 --> 22:24.040
p标签等会儿

22:24.040 --> 22:25.040
我们改样式好改一点

22:25.040 --> 22:26.040
我们来

22:26.040 --> 22:27.040
我们此时

22:27.040 --> 22:28.040
我们想对它

22:28.040 --> 22:29.040
进行一定的

22:29.040 --> 22:30.040
样式的修改

22:31.040 --> 22:32.040
我们说

22:32.040 --> 22:33.040
我们希望可以是

22:33.040 --> 22:34.040
比如说

22:34.040 --> 22:35.040
我们里面的html结构

22:36.040 --> 22:37.040
那么我们就可以

22:37.040 --> 22:38.040
直接在这边

22:38.040 --> 22:40.040
先定一个html结构出来

22:41.040 --> 22:42.040
比如说我现在

22:42.040 --> 22:43.040
想在里面

22:43.040 --> 22:44.040
一个红色字体显示

22:45.040 --> 22:46.040
那我现在就可以

22:46.040 --> 22:47.040
是这么做

22:47.040 --> 22:48.040
虽然我们现在

22:48.040 --> 22:49.040
先不用

22:49.040 --> 22:50.040
我们用html的方式

22:50.040 --> 22:51.040
直往直差

22:51.040 --> 22:53.040
这边再写个span

22:54.040 --> 22:55.040
span结构

22:55.040 --> 22:56.040
然后呢

22:56.040 --> 22:57.040
我们写一个

23:00.040 --> 23:02.480
font

23:02.480 --> 23:03.480
rad

23:08.030 --> 23:09.030
我们的value

23:10.030 --> 23:12.030
红色字体的一个值

23:12.030 --> 23:13.030
然后呢

23:13.030 --> 23:14.030
我们就写上

23:14.030 --> 23:15.030
我们现在的

23:16.030 --> 23:17.030
标签

23:17.030 --> 23:18.030
p标签

23:23.290 --> 23:24.290
然后在这边

23:24.290 --> 23:25.290
我们写上class

23:27.290 --> 23:28.290
style吧

23:28.290 --> 23:31.430
然后

23:33.810 --> 23:34.810
rad

23:34.810 --> 23:35.810
这样的

23:35.810 --> 23:36.810
我们里面写上

23:36.810 --> 23:37.810
这就是

23:37.810 --> 23:38.810
mpv

23:38.810 --> 23:42.530
学习

23:42.530 --> 23:43.530
学试

23:43.530 --> 23:44.530
可以

23:44.530 --> 23:45.530
写上这个以后的话

23:45.530 --> 23:46.530
我们大家

23:46.530 --> 23:47.530
之前学过

23:47.530 --> 23:48.530
我这边只是

23:48.530 --> 23:49.530
做个演示

23:49.530 --> 23:50.530
就不再多说了

23:51.530 --> 23:52.530
如果你是这么大

23:52.530 --> 23:53.530
这个先

23:53.530 --> 23:54.530
待会儿放着

23:54.530 --> 23:55.530
我们用class来解决

23:55.530 --> 24:03.980
我们放下面

24:03.980 --> 24:04.980
如果你是这么大的话

24:04.980 --> 24:05.980
那我们大家都能看到

24:05.980 --> 24:06.980
他就是一个

24:06.980 --> 24:07.980
纯文本的显示

24:07.980 --> 24:08.980
但是我们说

24:08.980 --> 24:10.980
我们利用view的格式

24:11.980 --> 24:12.980
v

24:12.980 --> 24:13.980
ghtml

24:13.980 --> 24:15.980
然后把整个这个

24:15.980 --> 24:16.980
做一个

24:17.980 --> 24:18.980
属性方式书写

24:18.980 --> 24:20.980
里面不用放任何东西

24:20.980 --> 24:21.980
编码时

24:21.980 --> 24:23.980
把这个p插入到span里面

24:23.980 --> 24:24.980
咱们就看到

24:24.980 --> 24:25.980
这部分呈现了

24:25.980 --> 24:26.980
所以他的这种

24:26.980 --> 24:27.980
原始html的结构

24:27.980 --> 24:29.980
是可以书写的

24:29.980 --> 24:30.980
因为官网上面

24:30.980 --> 24:31.980
有这么一个说法

24:31.980 --> 24:33.980
说vhtml是不可用

24:33.980 --> 24:34.980
但是这边我们发现

24:34.980 --> 24:35.980
的确没有问题

24:35.980 --> 24:37.980
能够使用的

24:38.980 --> 24:39.980
版本更新了

24:39.980 --> 24:40.980
应该讲不讲

24:40.980 --> 24:41.980
好

24:41.980 --> 24:42.980
那么接下去

24:42.980 --> 24:43.980
我们继续往下

24:43.980 --> 24:44.980
那么在接下去

24:44.980 --> 24:46.980
我们可以看到的是

24:46.980 --> 24:48.980
我们现在的一个特性

24:49.980 --> 24:51.980
特别是我们在ppd上

24:51.980 --> 24:52.980
我们给大家也说过

24:52.980 --> 24:53.980
就是我们

24:54.980 --> 24:56.980
除了原生以外

24:56.980 --> 24:57.980
原生html

24:57.980 --> 24:58.980
还有个特性

24:58.980 --> 25:00.980
那么特性是什么呢

25:00.980 --> 25:01.980
我给大家继续来看一下

25:01.980 --> 25:08.050
我们把它写在这

25:08.050 --> 25:09.050
特性的用法

25:09.050 --> 25:16.970
特性的其实就是

25:16.970 --> 25:19.970
我们可以把现在的一些

25:19.970 --> 25:20.970
内容以must touch的

25:20.970 --> 25:22.970
语法的方式绑定出来

25:22.970 --> 25:23.970
以must touch的

25:23.970 --> 25:24.970
语法方式绑定出来

25:24.970 --> 25:25.970
比如说

25:25.970 --> 25:26.970
我们现在

25:26.970 --> 25:27.970
大家所看到的

25:27.970 --> 25:29.970
我想让这个也形成

25:29.970 --> 25:30.970
红色

25:30.970 --> 25:31.970
但是它不是

25:31.970 --> 25:33.970
html的这种方式操作

25:33.970 --> 25:34.970
所以我们需要在

25:34.970 --> 25:35.970
它前面

25:35.970 --> 25:36.970
以一个color的方式

25:36.970 --> 25:37.970
来操作

25:37.970 --> 25:38.970
color的方式

25:38.970 --> 25:39.970
如果color

25:39.970 --> 25:40.970
后面所给的这个

25:40.970 --> 25:42.970
我需要在这边指定

25:42.970 --> 25:43.970
不是

25:43.970 --> 25:44.970
这也错了

25:44.970 --> 25:45.970
class

25:45.970 --> 25:46.970
需要在这指定

25:46.970 --> 25:47.970
比如说

25:48.970 --> 25:49.970
class

25:53.980 --> 25:54.980
class name

25:54.980 --> 25:55.980
我们指定

25:55.980 --> 25:57.980
它是属于叫做

25:57.980 --> 25:58.980
red

25:58.980 --> 25:59.980
green吧

26:00.980 --> 26:01.980
它是绿色的

26:01.980 --> 26:02.980
所以我把

26:02.980 --> 26:03.980
或者我们称之为

26:03.980 --> 26:04.980
不要叫class name

26:04.980 --> 26:05.980
叫class

26:05.980 --> 26:08.490
字体

26:08.490 --> 26:10.930
我们起成

26:10.930 --> 26:11.930
字体

26:12.930 --> 26:13.930
样式吧

26:14.930 --> 26:17.370
stly

26:18.370 --> 26:21.060
字体样式

26:21.060 --> 26:22.060
我们把这个放这

26:23.060 --> 26:24.060
当然

26:24.060 --> 26:25.060
我们知道这样肯定不行

26:25.060 --> 26:26.060
因为原因很简单

26:26.060 --> 26:28.060
我们在属性里面

26:28.060 --> 26:29.060
不认

26:29.060 --> 26:30.060
我们所谓的

26:30.060 --> 26:32.060
这是一个变量级

26:32.060 --> 26:33.060
如果你打双大过号

26:33.060 --> 26:34.060
也不认

26:34.060 --> 26:35.060
所以我们呢

26:35.060 --> 26:36.060
标准情况下

26:36.060 --> 26:38.060
我们最原始的情况

26:38.060 --> 26:40.060
我们可以在这边

26:40.060 --> 26:41.060
加上一个

26:42.060 --> 26:43.060
bump

26:43.060 --> 26:44.060
最原始情况

26:44.060 --> 26:45.060
你可以这样加

26:45.060 --> 26:46.060
当然

26:46.060 --> 26:47.060
这个green的话呢

26:47.060 --> 26:48.060
我们可以在下面

26:48.060 --> 26:50.060
去书写一个green的

26:50.060 --> 26:51.060
最简单的

26:51.060 --> 26:53.060
样式结构

26:54.060 --> 26:55.060
green

26:55.060 --> 26:56.060
green

26:56.060 --> 26:59.140
这个

26:59.140 --> 27:05.100
我们看一下

27:05.100 --> 27:07.100
它没有出来

27:07.100 --> 27:08.100
我们找一下原因

27:08.100 --> 27:09.100
green

27:09.100 --> 27:10.100
我们这边

27:10.100 --> 27:11.100
gren

27:11.100 --> 27:12.100
foto style

27:12.100 --> 27:14.100
然后把它绑定在这边

27:14.100 --> 27:15.100
对吧

27:15.100 --> 27:16.100
最原始的写法

27:16.100 --> 27:17.100
vga

27:17.100 --> 27:19.670
有了吧

27:19.670 --> 27:20.670
那么我们讲

27:20.670 --> 27:22.670
我们其实在这个关节中

27:22.670 --> 27:24.670
我们也可以省略

27:24.670 --> 27:26.670
你把这个省掉

27:26.670 --> 27:28.670
你来看一下

27:28.670 --> 27:31.300
依然可以

27:31.300 --> 27:33.300
所以我们最省的写法

27:33.300 --> 27:35.300
我们之后在mpview中

27:35.300 --> 27:37.300
我们都按这个钢匙来写

27:37.300 --> 27:39.300
就是以绑定的方式

27:39.300 --> 27:41.300
强制绑定转换

27:41.300 --> 27:42.300
我们省掉

27:42.300 --> 27:44.300
bump的直接写帽号

27:44.300 --> 27:46.300
如果是事件vga

27:46.300 --> 27:48.300
我们直接写at符号

27:48.300 --> 27:50.300
这和view的结构是一样的

27:50.300 --> 27:51.300
对吧

27:51.300 --> 27:52.300
然后vhtml的话

27:52.300 --> 27:54.300
我们还是直接这么写

27:54.300 --> 27:55.300
这样的格式

27:55.300 --> 27:56.300
同时

27:56.300 --> 27:57.300
我们讲一下

27:57.300 --> 27:59.300
我们在vscode里面

27:59.300 --> 28:02.300
vue.js里面

28:02.300 --> 28:04.300
vs.js里面

28:04.300 --> 28:05.300
我们还讲到过

28:05.300 --> 28:06.300
比如说

28:06.300 --> 28:08.300
使用

28:08.300 --> 28:10.300
java表达式

28:10.300 --> 28:12.300
有这样的一种说法

28:12.300 --> 28:14.300
那么使用java表达式

28:14.300 --> 28:16.300
其实也就是说

28:16.300 --> 28:18.300
在我们直接使用

28:18.300 --> 28:20.300
现在一些mustach 语法的时候

28:20.300 --> 28:22.300
我们里面可以做一些

28:22.300 --> 28:23.300
计算格式的套作

28:23.300 --> 28:24.300
在这边依然通用

28:24.300 --> 28:25.300
所以我们来看一下

28:25.300 --> 28:27.300
我们依然把p元素写出来

28:27.300 --> 28:28.300
然后这边

28:28.300 --> 28:30.620
我们写上

28:30.620 --> 28:31.620
比如说

28:31.620 --> 28:35.060
member加1

28:35.060 --> 28:36.060
那么我们把member

28:36.060 --> 28:40.140
这个词在这边说一下

28:40.140 --> 28:41.140
member

28:41.140 --> 28:43.140
我们写上10

28:43.140 --> 28:44.140
然后

28:44.140 --> 28:45.140
保存

28:45.140 --> 28:47.140
然后你看一下

28:47.140 --> 28:48.140
诶

28:48.140 --> 28:52.820
我们这边没有

28:52.820 --> 28:54.820
我们再存一下

28:54.820 --> 28:56.820
它是辨量没找到

28:56.820 --> 28:57.820
我们来看

28:57.820 --> 28:59.820
是不是11出来了

28:59.820 --> 29:00.820
紧接着

29:00.820 --> 29:02.820
我们再可以用3元

29:02.820 --> 29:04.820
你在这边依然没有问题

29:04.820 --> 29:05.820
复制

29:05.820 --> 29:06.820
不用复制了

29:06.820 --> 29:07.820
我们改一改

29:07.820 --> 29:08.820
这边的话

29:08.820 --> 29:10.820
我们写上

29:10.820 --> 29:11.820
ok吗

29:11.820 --> 29:13.820
ok我们显示yes

29:13.820 --> 29:15.820
不ok的话显示no

29:15.820 --> 29:17.820
这样的写法

29:17.820 --> 29:18.820
那么我们把ok

29:18.820 --> 29:20.820
作为一个flag

29:20.820 --> 29:22.820
true的方式写出来

29:22.820 --> 29:25.820
然后我们看一下

29:25.820 --> 29:26.820
yes对吧

29:26.820 --> 29:27.820
然后这样也行

29:27.820 --> 29:29.820
就是在微信小程序中

29:29.820 --> 29:32.820
同时你这边给出first

29:32.820 --> 29:35.820
这样去做的话也行

29:35.820 --> 29:36.820
那么有同学说

29:36.820 --> 29:37.820
老师我这边

29:37.820 --> 29:38.820
随便给一个数值

29:38.820 --> 29:40.820
可不可以

29:40.820 --> 29:41.820
我不给yes no

29:41.820 --> 29:43.820
我给一个数字

29:43.820 --> 29:47.580
你来看一下

29:47.580 --> 29:49.580
在我们的语法中

29:49.580 --> 29:51.580
我们一直强调一点

29:51.580 --> 29:53.580
就是有值即真的概念

29:53.580 --> 29:54.580
这边就是有值

29:54.580 --> 29:55.580
你说老师

29:55.580 --> 29:56.580
那我给0呢

29:56.580 --> 29:58.580
这是个很特殊的符号

29:58.580 --> 30:00.580
你来看0

30:00.580 --> 30:01.580
看到吗

30:01.580 --> 30:02.580
一旦你给0的时候

30:02.580 --> 30:03.580
它就会变成

30:03.580 --> 30:06.580
我们现在的一个no

30:06.580 --> 30:11.490
12

30:11.490 --> 30:12.490
看到吗

30:12.490 --> 30:14.490
就是我们如果把它理解为

30:14.490 --> 30:16.490
有值即真除零以外

30:16.490 --> 30:17.490
那么同时

30:17.490 --> 30:19.490
我们也可以换一个说法

30:19.490 --> 30:21.490
叫做非零即真

30:21.490 --> 30:22.490
这是ok的

30:22.490 --> 30:23.490
那么这里面

30:23.490 --> 30:24.490
有一点要说明的

30:24.490 --> 30:26.490
这几个都可以

30:26.490 --> 30:28.490
那么这边有一个注释说一下

30:28.490 --> 30:30.490
就是

30:30.490 --> 30:31.490
刚才bdn说过

30:31.490 --> 30:33.490
就是多值

30:33.490 --> 30:35.490
函数

30:35.490 --> 30:37.490
不可以使用

30:37.490 --> 30:38.490
多值函数呢

30:38.490 --> 30:40.490
比如说我们

30:40.490 --> 30:42.490
这是官网上面

30:42.490 --> 30:43.490
所谓的一个概念

30:43.490 --> 30:44.490
我这边呢

30:44.490 --> 30:46.490
就说一下实力就可以了

30:46.490 --> 30:48.490
比如说我们有一个

30:48.490 --> 30:50.490
素组

30:50.490 --> 30:52.490
messager对吧

30:52.490 --> 30:54.490
我们把它先做拆分

30:54.490 --> 30:56.490
spill it

30:56.490 --> 30:57.490
然后呢

30:57.490 --> 31:00.490
我们再去做它的等于

31:00.490 --> 31:03.490
反转reverse

31:03.490 --> 31:05.490
再去做它的

31:05.490 --> 31:06.490
后面的其他的

31:06.490 --> 31:07.490
等于这种做法

31:07.490 --> 31:08.490
在这的话呢

31:08.490 --> 31:10.490
我们不去过多的设计

31:10.490 --> 31:12.490
因为这个官网要求

31:12.490 --> 31:14.490
这个不行

31:14.490 --> 31:15.490
那我们要怎么样呢

31:15.490 --> 31:16.490
把这个代码

31:16.490 --> 31:17.490
直接在这里边做掉

31:17.490 --> 31:18.490
做完以后

31:18.490 --> 31:19.490
直接以一个变量输出

31:19.490 --> 31:20.490
就可以了

31:20.490 --> 31:21.490
这个格式就行

31:21.490 --> 31:22.490
ok

31:22.490 --> 31:24.490
那么这个是jasker脚本

31:24.490 --> 31:27.490
所要给到我们的一个操作

31:27.490 --> 31:28.490
特别是有一点

31:28.490 --> 31:30.490
就是我们再次强调

31:30.490 --> 31:31.490
再次强调

31:31.490 --> 31:32.490
jasker里面

31:32.490 --> 31:34.490
那个view里面是完成

31:34.490 --> 31:35.490
是一样的

31:35.490 --> 31:37.490
然后在mpview中还是一样

31:37.490 --> 31:47.620
就是我们的mustach

31:47.620 --> 31:53.940
mustach的语法

31:53.940 --> 31:56.940
不可以去做

31:56.940 --> 32:01.760
表达式

32:01.760 --> 32:02.760
计算

32:02.760 --> 32:06.070
那个逻辑计算

32:06.070 --> 32:08.070
它不可以去做这个动作

32:08.070 --> 32:09.070
你要一定要记住

32:09.070 --> 32:11.070
也就是说

32:11.070 --> 32:13.070
你不能在这里边

32:13.070 --> 32:16.640
比如

32:16.640 --> 32:17.640
定义

32:17.640 --> 32:18.640
变量

32:18.640 --> 32:19.640
我之前见过同学

32:19.640 --> 32:20.640
在mustach里面

32:20.640 --> 32:21.640
也做这样的结构

32:21.640 --> 32:26.100
或者

32:26.100 --> 32:28.100
或者

32:28.100 --> 32:29.100
逻辑判断

32:29.100 --> 32:31.100
这个是不可以的

32:31.100 --> 32:33.100
在我们的view中不可以

32:33.100 --> 32:34.100
在我们的mpview中

32:34.100 --> 32:35.100
也不可以

32:35.100 --> 32:38.100
这个我这边说明一下

32:38.100 --> 32:39.100
当然

32:39.100 --> 32:40.100
这里面

32:40.100 --> 32:41.100
我们讲一下

32:41.100 --> 32:42.100
如果说

32:42.100 --> 32:44.100
有一些指令东西

32:44.100 --> 32:46.100
那么还是可以做到的

32:46.100 --> 32:47.100
说到指令了

32:47.100 --> 32:49.100
那我们把指令一起说一下

32:49.100 --> 32:50.100
就是

32:50.100 --> 32:52.100
有一些简单指令格式

32:52.100 --> 32:53.100
也可以一起往

32:53.100 --> 32:54.100
我们把指令

32:54.100 --> 32:55.100
规决到我们的模板语法

32:55.100 --> 32:58.100
其实也是一个合理的操作

32:58.100 --> 32:59.100
指令的话

32:59.100 --> 33:00.100
其实

33:00.100 --> 33:01.100
这里边

33:01.100 --> 33:02.100
我们其实就可以涉及到

33:02.100 --> 33:03.100
比如说

33:03.100 --> 33:05.100
我们的vf

33:05.100 --> 33:06.100
对吧

33:06.100 --> 33:07.100
我们讲一个vf语句

33:07.100 --> 33:08.100
大家先看一下

33:08.100 --> 33:09.100
之后我们会

33:09.100 --> 33:11.100
继续把它多指讲解

33:11.100 --> 33:12.100
我们会去讲解

33:12.100 --> 33:14.100
我们的更多的渲染结构

33:14.100 --> 33:16.100
那么vf指令的话

33:16.100 --> 33:18.100
在我们的nview中

33:18.100 --> 33:19.100
我们称为nview

33:19.100 --> 33:20.100
就是mpview

33:20.100 --> 33:21.100
我叫做nview

33:21.100 --> 33:23.100
那么在它中

33:23.100 --> 33:24.100
我们的书写格式

33:24.100 --> 33:26.100
其实和我们之前的

33:26.100 --> 33:27.100
你来看一下

33:27.100 --> 33:28.100
比如说

33:28.100 --> 33:31.670
v

33:31.670 --> 33:32.670
然后

33:32.670 --> 33:34.670
你是否能够

33:34.670 --> 33:35.670
看得见

33:35.670 --> 33:38.690
然后

33:38.690 --> 33:42.090
我们这边写一个

33:42.090 --> 33:43.090
最简单的

33:43.090 --> 33:44.090
小写p

33:46.590 --> 33:47.590
小写p元素

33:49.590 --> 33:51.590
然后我们订一下sim

33:51.590 --> 33:55.380
sim的话

33:55.380 --> 33:56.380
我们订

33:56.380 --> 33:59.940
如果你给个true

34:01.940 --> 34:02.940
这个理论逻辑

34:02.940 --> 34:04.940
和刚才前面的是一样的

34:05.940 --> 34:06.940
那么你会看到

34:06.940 --> 34:07.940
对吧

34:07.940 --> 34:08.940
然后的话

34:08.940 --> 34:09.940
如果你给force

34:09.940 --> 34:14.750
模板语法

34:14.750 --> 34:15.750
OK就没有了

34:15.750 --> 34:16.750
好

34:16.750 --> 34:17.750
这是我们在

34:17.750 --> 34:19.750
就是指令语句里面

34:19.750 --> 34:21.750
那么指令有一个叫参数

34:21.750 --> 34:22.750
这个要强调一下

34:22.750 --> 34:24.750
之前我们也在

34:24.750 --> 34:26.750
它和我们的

34:26.750 --> 34:28.750
那个

34:28.750 --> 34:29.750
写法上面

34:29.750 --> 34:31.750
基本上保持一个一致

34:31.750 --> 34:32.750
参数

34:33.750 --> 34:36.750
和我们的那个view.js

34:36.750 --> 34:37.750
参数的话

34:37.750 --> 34:40.750
就是我们所有的

34:40.750 --> 34:42.750
就是两个

34:42.750 --> 34:43.750
这个我只说一下了

34:43.750 --> 34:44.750
这个只要说一下就可以

34:44.750 --> 34:45.750
比如说

34:45.750 --> 34:47.750
vbound的

34:47.750 --> 34:51.220
修改

34:51.220 --> 34:52.220
它是强制

34:52.220 --> 34:55.230
html

34:55.230 --> 34:57.230
属性的

34:57.230 --> 34:58.230
绑定操作

34:58.230 --> 34:59.230
它可以做

34:59.230 --> 35:00.230
第二个

35:00.230 --> 35:01.230
刚才其实我们说过

35:01.230 --> 35:02.230
von

35:02.230 --> 35:03.230
它是

35:03.230 --> 35:06.860
它不叫强制

35:06.860 --> 35:07.860
它是

35:07.860 --> 35:09.860
那个

35:09.860 --> 35:10.860
html

35:10.860 --> 35:15.200
事件的

35:15.200 --> 35:16.200
触发

35:17.200 --> 35:18.200
这两个的话

35:18.200 --> 35:19.200
大家需要去

35:19.200 --> 35:21.200
经常去使用

35:21.200 --> 35:22.200
然后这样的

35:22.200 --> 35:23.200
我形成一种习惯概念

35:24.200 --> 35:25.200
好

35:25.200 --> 35:26.200
有一个和views

35:26.200 --> 35:27.200
不一样的特点

35:27.200 --> 35:28.200
就在这

35:28.200 --> 35:29.200
这是我们的

35:29.200 --> 35:30.200
动态参数

35:30.200 --> 35:32.770
在view中

35:32.770 --> 35:34.770
我们是可以存在

35:34.770 --> 35:35.770
这种写法的

35:35.770 --> 35:36.770
我写一下

35:36.770 --> 35:39.770
我们一般性都会写成的是

35:39.770 --> 35:40.770
a超链接

35:40.770 --> 35:42.770
然后我写上跳转

35:43.770 --> 35:45.770
我们经常会写这样的格式

35:45.770 --> 35:47.770
然后我们刚才参数的方式

35:47.770 --> 35:48.770
我们前面

35:48.770 --> 35:51.770
可以直接实行这样的写法

35:51.770 --> 35:52.770
对吗

35:52.770 --> 35:54.770
然后这边你写上一个链接

35:54.770 --> 35:56.770
这是link

35:56.770 --> 35:57.770
虽然我这链接里面

35:57.770 --> 35:58.770
随便写一下

35:58.770 --> 36:02.720
我们不做跳转

36:02.720 --> 36:03.720
那么此时

36:03.720 --> 36:04.720
对大家来讲的话

36:04.720 --> 36:05.720
这个结构很熟悉

36:05.720 --> 36:06.720
我们待会修改

36:06.720 --> 36:08.720
它变成动态参数

36:09.720 --> 36:10.720
跳转方式

36:10.720 --> 36:11.720
这个是有的

36:11.720 --> 36:13.720
那么问题在哪呢

36:13.720 --> 36:14.720
问题是在于

36:14.720 --> 36:15.720
当然这个

36:15.720 --> 36:16.720
但问题是在于

36:16.720 --> 36:18.720
我们现在如果

36:18.720 --> 36:20.720
这个值

36:20.720 --> 36:22.720
如果这个值得到改变

36:22.720 --> 36:23.720
也就是说

36:23.720 --> 36:25.720
我们现在动态参数的

36:25.720 --> 36:26.720
结法是

36:26.720 --> 36:28.720
我把他给隐藏了

36:28.720 --> 36:29.720
ATTR

36:29.720 --> 36:30.720
我就这样写

36:30.720 --> 36:32.720
然后我写ATTR的话

36:32.720 --> 36:34.720
我的属性名

36:34.720 --> 36:37.720
我在这边标注为HREF

36:37.720 --> 36:40.720
我这样反过来去操作

36:40.720 --> 36:42.720
那这样的方式行不行

36:42.720 --> 36:43.720
你过来看

36:43.720 --> 36:45.720
你有没有看到

36:45.720 --> 36:46.720
刚才前面

36:46.720 --> 36:48.720
我如果不是这么写

36:48.720 --> 36:50.720
我如果以这样的格式写的话

36:50.720 --> 36:52.720
那么你看一下页面

36:52.720 --> 36:54.720
它还能够正常显示

36:54.720 --> 36:56.720
虽然它不能识别

36:56.720 --> 36:57.720
我现在这个ATTR

36:57.720 --> 36:58.720
什么东西

36:58.720 --> 36:59.720
但是这个属性

36:59.720 --> 37:01.720
建值对的形式是完整的

37:01.720 --> 37:04.720
但是我如果以这样的方式写

37:04.720 --> 37:06.720
这个是在VS里面的

37:06.720 --> 37:10.610
动态参数概念

37:10.610 --> 37:11.610
不是VS

37:11.610 --> 37:13.610
就是那个View.js里面

37:13.610 --> 37:15.610
我一般称VS

37:15.610 --> 37:17.610
动态参数概念的话

37:17.610 --> 37:19.610
是可以被执行的

37:19.610 --> 37:20.610
但是跑到我们的

37:20.610 --> 37:21.610
MPV来讲的话

37:21.610 --> 37:22.610
它是不行

37:22.610 --> 37:24.610
因为它告诉你说

37:24.610 --> 37:27.610
它不能去识别这个中括号

37:27.610 --> 37:28.610
这个中括号

37:29.610 --> 37:30.610
所以这个逻辑

37:30.610 --> 37:31.610
或者说

37:31.610 --> 37:32.610
这个写法

37:32.610 --> 37:37.430
在View.js中

37:38.430 --> 37:40.430
可以识刑

37:40.430 --> 37:43.130
但

37:44.130 --> 37:45.130
MPV中

37:46.130 --> 37:47.130
不行

37:47.130 --> 37:51.270
这点需要大家明确

37:51.270 --> 37:52.270
也就是说

37:52.270 --> 37:54.270
发言你之后有一些语法

37:54.270 --> 37:55.270
或者说你有一些写法里面

37:55.270 --> 37:56.270
有这种格式的话

37:56.270 --> 37:58.270
你要把它改过来

37:58.270 --> 38:00.270
或者不用这样的形式

38:00.270 --> 38:01.270
这样就可以

38:01.270 --> 38:02.270
这动态参数里面

38:02.270 --> 38:04.270
所需要给到我们的

38:04.270 --> 38:05.270
当然

38:05.270 --> 38:08.270
我们还有很多的这种修饰服

38:08.270 --> 38:10.270
依然是可以使用的

38:10.270 --> 38:12.270
这边我只介绍一下了

38:12.270 --> 38:13.270
修饰服

38:14.270 --> 38:15.270
修饰服的话

38:15.270 --> 38:18.270
就是我们所谓的比如说点

38:18.270 --> 38:21.270
Parent.stop

38:21.270 --> 38:22.270
这样的

38:22.270 --> 38:23.270
在我们属性后面的

38:23.270 --> 38:24.270
对不对

38:24.270 --> 38:25.270
那么都可以被使用到

38:25.270 --> 38:27.270
这个也是OK的

38:27.270 --> 38:28.270
OK

38:28.270 --> 38:29.270
那么这些

38:29.270 --> 38:30.270
我们全加起来

38:30.270 --> 38:32.270
就是我们称之为叫

38:32.270 --> 38:34.270
模板语法的一些格式

38:34.270 --> 38:35.270
对大家来讲

38:35.270 --> 38:36.270
其实这不难

38:36.270 --> 38:38.270
主要是做一个了解

38:38.270 --> 38:39.270
并且我们有些同学

38:39.270 --> 38:40.270
甚至作为复习

38:40.270 --> 38:43.270
但是我们主要区分的是什么

38:43.270 --> 38:44.270
在这里面

38:44.270 --> 38:45.270
就是View能写

38:45.270 --> 38:46.270
在这不能写

38:46.270 --> 38:47.270
什么东西

38:47.270 --> 38:49.270
在这会有些小区别

38:49.270 --> 38:50.270
显示的时候

38:50.270 --> 38:52.270
有什么样的特点

38:52.270 --> 38:53.270
这个是要

38:53.270 --> 38:54.270
我们大家这边去说一下的

38:54.270 --> 38:56.270
那么其他的部分

38:56.270 --> 38:57.270
相信大家

38:57.270 --> 38:58.270
都可以通过

38:58.270 --> 38:59.270
两者的自我的摸索

38:59.270 --> 39:00.270
来改变

39:00.270 --> 39:01.270
对吧

39:01.270 --> 39:02.270
我得把这个给删了

39:02.270 --> 39:03.270
当然我先不删

39:03.270 --> 39:04.270
所以的话

39:04.270 --> 39:06.270
大家可以了解到

39:06.270 --> 39:08.270
这个结构

39:08.270 --> 39:10.270
隐藏吧

39:10.270 --> 39:11.270
不隐藏的话

39:11.270 --> 39:12.270
这边老会抱错

39:12.270 --> 39:13.270
对吧

39:13.270 --> 39:14.270
好了

39:14.270 --> 39:15.270
出来了

39:15.270 --> 39:16.270
OK

39:16.270 --> 39:17.270
那么包括是

39:17.270 --> 39:18.270
这个内容

39:18.270 --> 39:19.270
记住

39:19.270 --> 39:20.270
然后还有的一个

39:20.270 --> 39:21.270
这些都是

39:21.270 --> 39:23.270
标准语法结构

39:23.270 --> 39:24.270
我们

39:24.270 --> 39:25.270
还有个就是

39:25.270 --> 39:26.270
我们最前面的

39:26.270 --> 39:27.270
就是Wence的概念

39:27.270 --> 39:28.270
Wence概念

39:28.270 --> 39:30.270
有些区别的都是

39:30.270 --> 39:31.270
OK

39:31.270 --> 39:32.270
那模板语法

39:32.270 --> 39:33.270
大家好好地自己

39:33.270 --> 39:34.270
演示一下

39:34.270 --> 39:35.270
包括我们在这个页面

39:35.270 --> 39:36.270
这个视频中

39:36.270 --> 39:38.270
也做了文件的创建

39:38.270 --> 39:39.270
包括注意点

39:39.270 --> 39:40.270
也给大家去讲了一下

39:40.270 --> 39:41.270
好

39:41.270 --> 39:42.270
我们依然

39:42.270 --> 39:43.270
把它上传至

39:43.270 --> 39:45.270
我们的GitHub

39:45.270 --> 39:46.270
大家的话

39:46.270 --> 39:47.270
后期可以去看

39:47.270 --> 39:48.270
继续

39:48.270 --> 39:49.270
好

39:49.270 --> 39:50.270
我们现在

39:50.270 --> 39:51.270
是在

39:51.270 --> 39:52.270
模板语法上面

39:52.270 --> 39:54.270
然后我们对它进行

39:54.270 --> 39:55.270
添加

39:55.270 --> 39:57.270
然后我们提交一下

40:02.980 --> 40:03.980
我们提交一下

40:03.980 --> 40:04.980
然后呢

40:04.980 --> 40:05.980
我们再来

40:06.980 --> 40:08.980
推到我们现在的

40:08.980 --> 40:09.980
上面去

40:09.980 --> 40:10.980
做模板语法

40:10.980 --> 40:29.480
它稍等一下

40:29.480 --> 40:30.480
好

40:30.480 --> 40:31.480
授权

40:31.480 --> 40:40.940
连接成功

40:40.940 --> 40:44.380
文件上传

40:44.380 --> 40:45.380
上传成功

40:45.380 --> 40:47.380
在模板语法里面

40:48.380 --> 40:49.380
我们到Git

40:49.380 --> 40:58.470
看一下

40:58.470 --> 40:59.470
MP View

40:59.470 --> 41:04.150
有了吧

41:04.150 --> 41:09.830
模板语法

41:09.830 --> 41:11.830
在这个里面

41:11.830 --> 41:12.830
那大家可以

41:12.830 --> 41:13.830
下下来

41:13.830 --> 41:14.830
这里面就可以看到

41:14.830 --> 41:15.830
我们模板语法里面的

41:15.830 --> 41:16.830
一些数据

41:16.830 --> 41:17.830
SRC里面就有

41:18.830 --> 41:19.830
对吧

41:19.830 --> 41:20.830
我们订了一个

41:20.830 --> 41:26.700
Peters里面Test

41:26.700 --> 41:27.700
OK

41:27.700 --> 41:28.700
对大家来讲

41:28.700 --> 41:29.700
希望能够

41:29.700 --> 41:30.700
去对它进行

41:30.700 --> 41:31.700
认真的阅读

41:31.700 --> 41:32.700
如果之前

41:32.700 --> 41:33.700
View

41:33.700 --> 41:34.700
完全很深的同学

41:34.700 --> 41:35.700
你希望

41:35.700 --> 41:36.700
把View的那个视频

41:36.700 --> 41:37.700
再看一遍

41:37.700 --> 41:38.700
如果View

41:38.700 --> 41:39.700
已经有点开始忘了

41:39.700 --> 41:40.700
那么

41:40.700 --> 41:41.700
通过我们的

41:41.700 --> 41:42.700
这个课程

41:42.700 --> 41:43.700
再把View

41:43.700 --> 41:44.700
像复习一样的

41:44.700 --> 41:45.700
像我们的

41:45.700 --> 41:46.700
两者的一个

41:46.700 --> 41:47.700
学习一样的

41:47.700 --> 41:48.700
都可以进行

41:48.700 --> 41:49.700
这方面的一个

41:49.700 --> 41:50.700
根据自己的情况

41:50.700 --> 41:51.700
学习吧

41:51.700 --> 41:52.700
好

41:52.700 --> 41:53.700
那么这些课呢

41:53.700 --> 41:54.700
就先来看

