WEBVTT

00:00.370 --> 00:02.970
好 我们继续讲解MPVU的势力

00:02.970 --> 00:05.970
那么在这节课里面呢 给大家讲解一下

00:05.970 --> 00:09.570
我们如何使用我们的微信的一些

00:09.570 --> 00:12.570
比如说图片功能 存图片功能

00:12.570 --> 00:15.970
来完成你现在的一些MPVU的开发

00:15.970 --> 00:21.070
MPVU呢 本身自己它可以使用我们的微信的一些组件来做开发

00:21.070 --> 00:23.070
这个大家已经非常熟知了

00:23.070 --> 00:25.670
但是如果说组件用得过复杂一点啊

00:25.670 --> 00:29.370
比如说我们的图片选择啊 图片存储啊

00:29.370 --> 00:33.070
到本地啊 然后图片再和全局进行对应啊

00:33.070 --> 00:38.170
那么这种操作 以及我们本身存储发布的时候

00:38.170 --> 00:40.870
我们到底是存储什么样的结构

00:40.870 --> 00:45.970
那么这些呢 都是在我们的整个这个课程中给大家来讲解

00:45.970 --> 00:48.770
那么这节课程呢 我们将讲解一个

00:48.770 --> 00:51.170
类似于社交圈里面 你比如说

00:51.170 --> 00:54.170
我们举一个简单势力吧

00:54.170 --> 00:57.970
我们举一个简单势力 比如说你发布内容 对吧

00:57.970 --> 01:00.970
这边你可以发布内容 你这边也可以选择图片

01:00.970 --> 01:04.270
图片选择完以后 这边有预览 这边有预览

01:04.270 --> 01:07.670
然后发布社交圈 其实我就把它进行存储

01:07.670 --> 01:10.970
在其他地方的话 也就意味着是展现而已

01:10.970 --> 01:12.370
我把它进行存储

01:12.370 --> 01:15.970
那么对于我们的任何的发布来讲啊

01:15.970 --> 01:17.470
这边也是到表单啊

01:17.470 --> 01:20.770
那我们看一下微信表单怎么在MPV中使用

01:20.770 --> 01:23.570
那么这边的话 我们说到 你既能发布文本

01:23.570 --> 01:27.370
也能发布纯图片 也能纯图片和文本一起发布

01:27.470 --> 01:29.470
那么这种结构都可以做到

01:29.470 --> 01:30.470
那我们来看一下

01:30.470 --> 01:33.970
这个所谓的数据的提交发布

01:33.970 --> 01:37.970
加上我们的表单的操作加空间操作

01:37.970 --> 01:40.980
这该怎么样进行

01:40.980 --> 01:41.680
我们打开

01:43.280 --> 01:44.880
我们自己建一页面

01:44.880 --> 01:54.680
我们自己建一页面

01:54.680 --> 01:59.740
好 我们建一目录啊

01:59.740 --> 02:04.620
建一目录 我们称之为publish 发布

02:06.420 --> 02:09.420
然后在里面 先建一个mandant.js

02:10.420 --> 02:13.420
在这里面 咱们先建一个index.view

02:13.420 --> 02:22.150
mandant.js 复制view

02:22.150 --> 02:25.150
哦 我们应该复制到mandant.js中

02:27.150 --> 02:43.500
view 框架 message

02:43.500 --> 02:50.830
好 我们开始制作这个界面

02:50.830 --> 02:52.830
然后呢 我们由于前面有一个界面

02:52.830 --> 02:56.330
所以我们把这个 把它放在前面啊

02:57.330 --> 02:59.330
我们就看这个界面的格式

02:59.330 --> 03:10.050
我们把它称之为我们的publish

03:10.050 --> 03:11.550
好 我们来看

03:11.550 --> 03:14.050
现在我们开始制作这样的一个界面

03:14.050 --> 03:15.550
首先我们这个界面呢

03:15.550 --> 03:17.050
上面是个输入框

03:17.050 --> 03:19.550
然后整体是一个表单的结构

03:19.550 --> 03:22.550
注意 在我们的微信小程序中呢

03:22.550 --> 03:24.050
我们的根目录是pader

03:24.050 --> 03:25.550
但对于我们mpview来讲

03:25.550 --> 03:27.550
它的模板的根目录是像自行定义一个

03:27.550 --> 03:29.550
那我们就给车一个div

03:29.550 --> 03:30.550
那么一般性呢

03:30.550 --> 03:31.550
我们是这么做啊

03:31.550 --> 03:34.550
就是在我们的正式的pader页面中

03:34.550 --> 03:37.050
我们这个根目录先不动的

03:37.050 --> 03:39.550
但如果说你是作为component来讲的话呢

03:39.550 --> 03:41.550
那么你可以直接设定这个文件

03:41.550 --> 03:44.050
因为本身来讲它的样式也好

03:44.050 --> 03:46.050
它的整个这个结构也好

03:46.050 --> 03:47.050
在component里面

03:47.050 --> 03:48.050
它其实是个组件

03:48.050 --> 03:50.050
它要被添加到我们的页面中

03:50.050 --> 03:51.550
但对于页面中来讲的话

03:51.550 --> 03:53.050
这个是它的一个更结构

03:53.050 --> 03:55.550
所以呢我们可以在下面单独去定义

03:55.550 --> 03:57.550
比如说我们在下面来做啊

03:57.550 --> 04:01.050
我们去完成内容的定义

04:01.050 --> 04:02.550
那么在里边呢

04:02.550 --> 04:04.050
我们刚才说了啊

04:04.050 --> 04:05.050
虽然说它是个输入框

04:05.050 --> 04:06.550
下面还有表单结构

04:06.550 --> 04:10.050
但是我们做它的一个缝提交

04:10.050 --> 04:11.550
对于缝来讲的话呢

04:11.550 --> 04:13.050
对于我们的mpview

04:13.050 --> 04:15.550
它其实是一个action的提交模型

04:15.550 --> 04:16.550
对吧 我们的html

04:16.550 --> 04:18.050
经常你看我这边自动生成的

04:18.050 --> 04:19.550
都是这样的一个结构

04:19.550 --> 04:21.050
但是我们更希望的呢

04:21.050 --> 04:23.050
我们用的是微信的方式来做

04:23.050 --> 04:24.050
为什么呢

04:24.050 --> 04:26.550
因为微信本身自己是没有action这个提交的

04:26.550 --> 04:28.550
微信本身有的是bound submit

04:28.550 --> 04:31.550
所以呢我们本身需要把这个内容

04:31.550 --> 04:33.550
进行一个修改

04:33.550 --> 04:34.550
用微信的方式的话

04:34.550 --> 04:37.550
bound的改成我们的at submit

04:37.550 --> 04:39.550
然后

04:39.550 --> 04:41.550
foom submit

04:41.550 --> 04:43.550
我们自个儿写这样一个事件

04:43.550 --> 04:45.550
然后呢接下去里边的话呢

04:45.550 --> 04:46.550
就是我们的输入框

04:46.550 --> 04:48.550
我们首先div定一下

04:48.550 --> 04:52.550
我们给出一个textor content

04:52.550 --> 04:54.550
内容 文本区域

04:54.550 --> 04:57.550
我们写上就是用户

04:57.550 --> 04:59.550
发表

04:59.550 --> 05:01.550
文本 用户

05:01.550 --> 05:03.550
用户 发表

05:03.550 --> 05:05.550
言论

05:05.550 --> 05:09.910
内容

05:09.910 --> 05:13.800
我们定一个area

05:13.800 --> 05:19.220
textor

05:19.220 --> 05:21.220
area

05:21.220 --> 05:22.220
它里面是一个什么呢

05:22.220 --> 05:24.220
是个textor

05:24.220 --> 05:25.220
标准的text area

05:25.220 --> 05:26.220
我们可以再起个名称

05:26.220 --> 05:31.220
叫 import content

05:31.220 --> 05:34.980
import content

05:34.980 --> 05:37.980
我们把后面这三个都可以删掉

05:38.980 --> 05:41.980
我们添加一个placeholder

05:41.980 --> 05:45.290
说点

05:45.290 --> 05:47.290
我们使用

05:47.290 --> 05:49.290
谷歌的搜狗的

05:49.290 --> 05:54.950
说点什么吧

05:54.950 --> 05:55.950
这样的结构

05:55.950 --> 05:56.950
对吧

05:56.950 --> 05:57.950
我们这样写就可以了

05:57.950 --> 05:59.950
请接着

05:59.950 --> 06:01.950
不在它下面

06:01.950 --> 06:03.950
我们要出text area

06:03.950 --> 06:04.950
然后再接下去呢

06:04.950 --> 06:07.950
我们做的是图片

06:07.950 --> 06:09.950
我们可以有一个图片预览

06:09.950 --> 06:20.980
我们可以上传图片

06:20.980 --> 06:21.980
那么之后的发布

06:21.980 --> 06:23.980
我们可以到任何地方都能看

06:23.980 --> 06:25.980
我们待会也可以做一个简单的

06:25.980 --> 06:27.980
显示你所

06:27.980 --> 06:29.980
呈现的内容

06:29.980 --> 06:30.980
图片的预览区域

06:30.980 --> 06:31.980
我们这边

06:31.980 --> 06:33.980
我们可以做成的是

06:33.980 --> 06:35.980
scholarview

06:35.980 --> 06:36.980
图片本身自己

06:36.980 --> 06:38.980
我们可以有多传

06:38.980 --> 06:39.980
那么在我们的

06:39.980 --> 06:40.980
这个vscode里面

06:40.980 --> 06:41.980
你打上我们

06:41.980 --> 06:42.980
非html

06:42.980 --> 06:43.980
标准

06:43.980 --> 06:44.980
它是没有支持的

06:44.980 --> 06:46.980
所以我们直接是这么打

06:46.980 --> 06:48.980
就是你打一个

06:48.980 --> 06:50.980
标签出来

06:50.980 --> 06:52.980
你如果这样打也可以

06:52.980 --> 06:53.980
你看

06:53.980 --> 06:54.980
scholarview

06:54.980 --> 06:56.980
你打完

06:56.980 --> 06:57.980
然后的话

06:57.980 --> 06:58.980
你直接

06:58.980 --> 07:00.980
给它去外面加一个标签

07:00.980 --> 07:04.740
你这样去给它加个标签

07:04.740 --> 07:05.740
其实也可以

07:05.740 --> 07:06.740
但是它可以有

07:06.740 --> 07:09.740
结束标签的识别

07:09.740 --> 07:10.740
scholarview

07:10.740 --> 07:12.740
给它一个简单样式

07:12.740 --> 07:14.740
咱们称之为

07:14.740 --> 07:16.740
imager

07:16.740 --> 07:21.160
group

07:21.160 --> 07:23.800
scholarx

07:23.800 --> 07:24.800
结个div

07:24.800 --> 07:25.800
这里边的话

07:25.800 --> 07:28.800
图片我们要做成的是

07:28.800 --> 07:29.800
它可以循环的

07:29.800 --> 07:30.800
但是我们现在

07:30.800 --> 07:32.800
先给它做一个简单的

07:32.800 --> 07:33.800
看质一下

07:33.800 --> 07:35.800
循环我们在这上面做

07:35.800 --> 07:37.800
我们imager里面

07:37.800 --> 07:38.800
我们有一个src

07:38.800 --> 07:39.800
对吧

07:39.800 --> 07:40.800
src的话

07:40.800 --> 07:45.130
我们里面拿出图片来

07:45.130 --> 07:46.130
我们随便的

07:46.130 --> 07:48.130
先给一个站位

07:48.130 --> 07:50.130
static

07:50.130 --> 07:51.130
下面

07:51.130 --> 07:52.130
我们有一个

07:52.130 --> 07:54.130
我们打开static

07:54.130 --> 07:56.130
在我们的imagers下面

07:56.130 --> 07:57.130
有一个user

07:57.130 --> 07:59.130
这是系统所给到的一个图片

07:59.130 --> 08:00.130
我们站位一下

08:00.130 --> 08:02.130
先看界面结构

08:02.130 --> 08:03.130
它如果呈现出来

08:03.130 --> 08:05.130
是怎么样的一个位置

08:05.130 --> 08:07.130
imagers下的

08:07.130 --> 08:10.510
user.png

08:10.510 --> 08:12.510
这是它的一个图片

08:12.510 --> 08:14.510
然后我们本身图片

08:14.510 --> 08:15.510
如果出来以后的话

08:15.510 --> 08:16.510
我们需要的什么

08:16.510 --> 08:17.510
还可以删掉它

08:17.510 --> 08:19.510
所以我们有一个

08:19.510 --> 08:24.160
删除图片按钮

08:25.160 --> 08:27.160
我们写上icon

08:27.160 --> 08:34.000
我们给它一个类型

08:34.000 --> 08:35.000
叫type

08:35.000 --> 08:37.370
clear

08:37.370 --> 08:41.390
这个按钮肯定是可以点击的

08:41.390 --> 08:43.390
所以我们大家给出一个click

08:43.390 --> 08:45.390
现在先给出remove

08:45.390 --> 08:46.390
img

08:46.390 --> 08:47.390
删除图片

08:47.390 --> 08:48.390
对吧

08:48.390 --> 08:50.390
那么先给到这一步

08:50.390 --> 08:52.390
图片里面不用加任何东西

08:52.390 --> 08:53.390
它最后呈现出来

08:53.390 --> 08:54.390
由于它是一个icon click

08:54.390 --> 08:56.390
所以它肯定出来是一个

08:56.390 --> 08:57.390
黑色的圆图

08:57.390 --> 08:59.390
这个结构

08:59.390 --> 09:01.390
然后下面我们出了

09:01.390 --> 09:05.150
这个以外我们的按钮区

09:05.150 --> 09:06.150
按钮区

09:06.150 --> 09:17.780
对于按钮来讲的话

09:17.780 --> 09:18.780
我们一共有两个按钮

09:18.780 --> 09:20.780
一个是上传选择图片

09:20.780 --> 09:21.780
一个是发布

09:21.780 --> 09:23.780
发布就把所有的数据

09:23.780 --> 09:24.780
给存储起来

09:24.780 --> 09:25.780
做这个动作

09:25.780 --> 09:26.780
然后我们再把它给呈现出来

09:26.780 --> 09:27.780
然后同时

09:27.780 --> 09:28.780
我们可以把它进行

09:28.780 --> 09:30.780
所谓的本地化的存储

09:30.780 --> 09:31.780
就好比说

09:31.780 --> 09:33.780
我手机得到一张片以后

09:33.780 --> 09:35.780
存储在我的相册里面

09:35.780 --> 09:36.780
这种概念

09:36.780 --> 09:37.780
这些都调用

09:37.780 --> 09:38.780
我们的微信的

09:38.780 --> 09:39.780
我们的空间

09:39.780 --> 09:41.780
首先

09:41.780 --> 09:43.780
function里面做

09:43.780 --> 09:44.780
第一个按钮

09:44.780 --> 09:46.780
我们把这个先收一下

09:46.780 --> 09:47.780
大一点

09:47.780 --> 09:48.780
第一个按钮

09:48.780 --> 09:49.780
第一个按钮

09:49.780 --> 09:50.780
我们给它一个样式

09:50.780 --> 09:54.050
ptn

09:54.050 --> 09:56.050
img

09:56.050 --> 09:58.050
它肯定能点击

09:58.050 --> 10:00.050
choice and major

10:00.050 --> 10:04.580
选择图片

10:04.580 --> 10:06.580
选择图片

10:06.580 --> 10:08.580
第二个能保存

10:08.580 --> 10:17.170
ptn

10:17.170 --> 10:19.170
foam type

10:19.170 --> 10:21.170
因为我现在需要完成的是

10:21.170 --> 10:23.170
我们的微信端的提交

10:23.170 --> 10:24.170
所以微信的提交

10:24.170 --> 10:25.170
来讲的话

10:25.170 --> 10:26.170
它需要一个foam type

10:26.170 --> 10:27.170
告诉它

10:27.170 --> 10:28.170
这按钮其实起的

10:28.170 --> 10:29.170
是三面的作用

10:29.170 --> 10:30.170
是这个结构

10:30.170 --> 10:32.170
那么我在得到图片的时候

10:32.170 --> 10:33.170
同时我这边

10:33.170 --> 10:34.170
可以做一个判断

10:34.170 --> 10:35.170
也就是说

10:35.170 --> 10:37.170
我可以有一个open type

10:37.170 --> 10:38.170
也就是同时

10:38.170 --> 10:39.170
我们可以去判断

10:39.170 --> 10:40.170
你当前是否

10:40.170 --> 10:41.170
可以获取到

10:41.170 --> 10:43.170
你用户的信息

10:43.170 --> 10:44.170
UserInfo

10:44.170 --> 10:46.170
你可以这样打

10:46.170 --> 10:48.170
我们称为

10:48.170 --> 10:50.170
或者称为记录吧

10:50.170 --> 10:54.120
记录用户信息

10:54.120 --> 10:56.120
记录信息

10:56.120 --> 10:58.500
这样结构

10:58.500 --> 10:59.500
这是icon

10:59.500 --> 11:00.500
这是图片

11:00.500 --> 11:01.500
OK

11:01.500 --> 11:02.500
基本结构有了

11:02.500 --> 11:03.500
我们现在

11:03.500 --> 11:04.500
介面上面的话

11:04.500 --> 11:15.300
我们可以看到一下

11:15.300 --> 11:16.300
它有一个init

11:16.300 --> 11:17.300
我们看一下

11:17.300 --> 11:18.300
这个init的哪

11:18.300 --> 11:21.300
给它再保存一下

11:21.300 --> 11:23.300
让它刷新一下

11:23.300 --> 11:24.300
我们看

11:24.300 --> 11:26.300
数据上应该是呈现的

11:26.300 --> 11:27.300
对的

11:27.300 --> 11:28.300
咱们看到吗

11:28.300 --> 11:30.300
现在基本上数据出来了

11:30.300 --> 11:31.300
一个说点什么吧

11:31.300 --> 11:32.300
对吧

11:32.300 --> 11:33.300
然后的话

11:33.300 --> 11:34.300
这边我们不要写我的

11:34.300 --> 11:35.300
我们就写成

11:35.300 --> 11:36.300
对他来讲

11:36.300 --> 11:39.300
我们单写一个文件

11:39.300 --> 11:41.300
让他修改一下

11:41.300 --> 11:45.790
我们就写成

11:45.790 --> 11:47.790
在app.json中

11:47.790 --> 11:48.790
我们改成

11:48.790 --> 11:53.380
称之为

11:53.380 --> 11:54.380
mpview

11:54.380 --> 11:58.610
就写mpview

11:58.610 --> 11:59.610
可以了

11:59.610 --> 12:00.610
数据有了

12:00.610 --> 12:01.610
对吧

12:01.610 --> 12:03.610
我们想给他做个简单的排版

12:03.610 --> 12:05.610
排得好看一点给他

12:05.610 --> 12:07.610
那么我们就回到

12:07.610 --> 12:09.610
我们的代码中

12:09.610 --> 12:11.610
然后加一些简单的样式

12:11.610 --> 12:12.610
首先

12:12.610 --> 12:13.610
content

12:13.610 --> 12:15.610
我们加上的是height

12:15.610 --> 12:17.610
100%

12:17.610 --> 12:19.610
然后

12:19.610 --> 12:20.610
wise

12:20.610 --> 12:22.610
咱们做100%

12:22.610 --> 12:23.610
第二点

12:23.610 --> 12:25.610
我们写的是

12:25.610 --> 12:27.610
上面有一个text area

12:27.610 --> 12:28.610
本页面对吧

12:28.610 --> 12:29.610
我们给他加一个

12:29.610 --> 12:30.610
它的宽度

12:30.610 --> 12:32.610
我们可以定成

12:32.610 --> 12:34.610
700upx

12:34.610 --> 12:36.610
然后 padding

12:36.610 --> 12:38.610
我们可以定成

12:38.610 --> 12:40.610
25upx

12:40.610 --> 12:42.610
0

12:42.610 --> 12:43.610
然后再往下

12:43.610 --> 12:51.060
我们是一个text content

12:51.060 --> 12:53.060
text content

12:53.060 --> 12:55.060
我们就 background color

12:55.060 --> 12:57.060
给他一个背景色

12:57.060 --> 12:59.060
f3efef

12:59.060 --> 13:00.060
给出一个

13:00.060 --> 13:02.060
然后 padding

13:02.060 --> 13:04.060
我们给的是0

13:04.060 --> 13:05.060
25upx

13:05.060 --> 13:07.060
给出这样一个结构

13:07.060 --> 13:09.060
然后 image group

13:09.060 --> 13:12.560
我们看一下

13:12.560 --> 13:14.560
在这图片预览区域对吧

13:14.560 --> 13:16.560
image group

13:16.560 --> 13:18.560
它是下面你要呈现的

13:18.560 --> 13:20.560
一个横向的比较

13:20.560 --> 13:21.560
所以我们做flex

13:21.560 --> 13:23.560
让它横向过来

13:23.560 --> 13:24.560
然后 wide space

13:24.560 --> 13:25.560
别人的换行

13:25.560 --> 13:27.560
可以拖动我们让它

13:27.560 --> 13:28.560
然后别忘了

13:28.560 --> 13:29.560
离上边

13:29.560 --> 13:33.640
稍微离开一点我们

13:33.640 --> 13:34.640
离开一点

13:34.640 --> 13:35.640
再往下

13:35.640 --> 13:37.640
我们有一个下面的div

13:37.640 --> 13:39.640
我们

13:39.640 --> 13:41.640
在它下面有一个div

13:41.640 --> 13:42.640
我们说过

13:42.640 --> 13:44.640
这个之后我们会做循环的

13:44.640 --> 13:45.640
那么没关系

13:45.640 --> 13:51.200
我们先把它的样式定一下

13:51.200 --> 13:53.200
display

13:53.200 --> 13:56.510
inline block

13:56.510 --> 13:57.510
flex

13:57.510 --> 13:59.510
direction

13:59.510 --> 14:01.510
row

14:01.510 --> 14:02.510
wise

14:02.510 --> 14:04.510
375upx

14:04.510 --> 14:07.010
height

14:07.010 --> 14:09.010
375upx

14:09.010 --> 14:14.350
merge in right

14:14.350 --> 14:16.350
我们给是20upx

14:16.350 --> 14:20.880
merge in left

14:20.880 --> 14:24.440
20upx

14:24.440 --> 14:26.440
background

14:26.440 --> 14:30.680
color

14:30.680 --> 14:31.680
给个颜色

14:31.680 --> 14:34.680
背景色也是一个奶白色

14:34.680 --> 14:37.680
然后紧接着我们再往下

14:37.680 --> 14:41.560
在这个div里面

14:41.560 --> 14:45.320
imager

14:45.320 --> 14:47.320
在它里面是有一个imager选项的

14:47.320 --> 14:48.320
对吧

14:48.320 --> 14:49.320
img

14:49.320 --> 14:51.320
所以我们给它的是

14:51.320 --> 14:53.320
100%

14:53.320 --> 14:55.320
它的高度100%

14:55.320 --> 15:00.750
align item

15:00.750 --> 15:01.750
center

15:01.750 --> 15:06.150
再往下

15:06.150 --> 15:08.150
imager group

15:08.150 --> 15:10.150
div下面还有我们的icon

15:10.150 --> 15:12.150
就那个小图标对吧

15:12.150 --> 15:15.150
我们希望它能够出现在右上角

15:15.150 --> 15:17.150
所以我们给它先做成inline block

15:17.150 --> 15:19.150
然后Position

15:19.150 --> 15:21.150
我们给它一个absolute决定位

15:21.150 --> 15:24.150
然后它的vertical align

15:24.150 --> 15:26.150
我们让它到顶部去

15:26.150 --> 15:30.360
virtical align

15:30.360 --> 15:32.360
virtical align到顶部去

15:32.360 --> 15:34.360
这个结构

15:34.360 --> 15:36.360
然后下面有个按钮

15:36.360 --> 15:37.360
按钮的区

15:37.360 --> 15:39.360
btn function

15:39.360 --> 15:44.480
按钮区

15:44.480 --> 15:46.480
然后按钮本身来讲的话

15:46.480 --> 15:49.480
我们给它做成的是flex

15:49.480 --> 15:51.480
flex

15:52.480 --> 15:53.480
direction

15:53.480 --> 15:54.480
colon

15:54.480 --> 15:57.370
wise

15:57.370 --> 15:59.370
100%

16:00.370 --> 16:01.370
Position

16:01.370 --> 16:02.370
absolute

16:02.370 --> 16:06.840
bottom

16:06.840 --> 16:07.840
0

16:07.840 --> 16:10.340
merge in

16:10.340 --> 16:11.340
0

16:11.340 --> 16:14.840
然后align item

16:14.840 --> 16:16.840
center

16:16.840 --> 16:17.840
OK

16:17.840 --> 16:18.840
我们给出这几个来

16:18.840 --> 16:20.840
然后还有下面

16:20.840 --> 16:22.840
它下面是有两个

16:22.840 --> 16:23.840
对吧

16:23.840 --> 16:25.840
一个是我们的发布的

16:25.840 --> 16:27.840
一个是我们的选择的

16:27.840 --> 16:28.840
button

16:28.840 --> 16:29.840
major

16:29.840 --> 16:30.840
button

16:30.840 --> 16:32.840
还有最后两个

16:32.840 --> 16:35.990
button

16:35.990 --> 16:37.990
major

16:37.990 --> 16:42.200
wise

16:42.200 --> 16:43.200
400

16:43.200 --> 16:44.200
height

16:44.200 --> 16:46.200
90rpx

16:46.200 --> 16:50.720
light height

16:50.720 --> 16:53.720
90rpx

16:53.720 --> 16:55.720
mergent top

16:55.720 --> 16:56.720
mergent top

16:56.720 --> 16:59.720
我们给的是40rpx

16:59.720 --> 17:01.720
然后mergent bottom

17:01.720 --> 17:06.040
我们给的是40rpx

17:06.040 --> 17:09.670
background color

17:09.670 --> 17:11.670
green

17:11.670 --> 17:13.670
color我们给的是

17:13.670 --> 17:15.670
fff

17:15.670 --> 17:16.670
再有一个

17:16.670 --> 17:17.670
btn

17:17.670 --> 17:19.670
最后那个按钮对吧

17:19.670 --> 17:21.670
然后我们给它一个

17:21.670 --> 17:24.670
宽度是400rpx

17:24.670 --> 17:25.670
长一点

17:25.670 --> 17:32.120
宽度长一点

17:32.120 --> 17:33.120
400rpx

17:33.120 --> 17:34.120
然后的话和上面一样

17:34.120 --> 17:36.120
90rpx

17:36.120 --> 17:38.120
然后light height

17:38.120 --> 17:40.120
依然做90rpx

17:40.120 --> 17:41.120
然后呢

17:41.120 --> 17:42.120
background color

17:42.120 --> 17:44.120
给它背景色

17:44.120 --> 17:45.120
红色

17:45.120 --> 17:47.120
字体依然做

17:47.120 --> 17:49.120
白色显示

17:50.120 --> 17:52.120
mergent bottom

17:52.120 --> 17:54.120
我们做的是40rpx

17:55.120 --> 17:56.120
好

17:56.120 --> 17:58.120
我们看一下页面的显示

17:58.120 --> 18:00.120
大概是布局成什么样了

18:00.120 --> 18:01.120
看到吗

18:01.120 --> 18:02.120
上面就是简单的

18:02.120 --> 18:04.120
我们可以输内容对吧

18:04.120 --> 18:06.120
输内容

18:06.120 --> 18:08.120
然后图片是显示在这个区域

18:08.120 --> 18:09.120
然后呢

18:09.120 --> 18:11.120
我们这边是可以有删除

18:11.120 --> 18:12.120
那么我们如果说

18:12.120 --> 18:15.120
现在复制一个图片来看

18:15.120 --> 18:17.120
就是这里边的这部分内容

18:17.120 --> 18:22.990
我们把它复制一块来看

18:22.990 --> 18:24.990
你如果这样复制一个

18:24.990 --> 18:29.900
你再来看一下效果

18:29.900 --> 18:31.900
左右两块就有了

18:31.900 --> 18:32.900
这样的话

18:32.900 --> 18:34.900
我们可以针对当前这张图片

18:34.900 --> 18:35.900
你要说

18:35.900 --> 18:37.900
我选择两张三张都可以对吧

18:37.900 --> 18:39.900
然后我们点击这上面按钮的话

18:39.900 --> 18:42.900
他就可以进行把这张图片给删除掉

18:42.900 --> 18:44.900
当然我们现在事件还没有做

18:44.900 --> 18:47.900
那么我们可以这样的模型

18:47.900 --> 18:49.900
把这个界面已经打好了

18:49.900 --> 18:50.900
紧接着下去

18:50.900 --> 18:51.900
我们开始

18:51.900 --> 18:52.900
我们想一下

18:52.900 --> 18:54.900
我们该做我们的功能操作了

18:54.900 --> 18:56.900
在功能上面的话

18:56.900 --> 18:57.900
首先第一步

18:57.900 --> 19:00.900
就是我们要点击这个按钮

19:00.900 --> 19:02.900
我们去选择你现在的

19:02.900 --> 19:03.900
或者说

19:03.900 --> 19:06.900
去找到你现在所需要上传的图片

19:06.900 --> 19:07.900
好

19:07.900 --> 19:08.900
这功能

19:08.900 --> 19:09.900
说到这功能呢

19:09.900 --> 19:12.900
我们一定会回到我们现在的

19:12.900 --> 19:13.900
这个按钮上面

19:13.900 --> 19:14.900
选择这按钮

19:14.900 --> 19:15.900
我们刚才写了

19:15.900 --> 19:17.900
choose a major

19:17.900 --> 19:18.900
所以

19:18.900 --> 19:22.470
到我们的方法里来

19:22.470 --> 19:23.470
choose a major

19:23.470 --> 19:28.320
我们把它拿过来

19:28.320 --> 19:30.320
我们写上

19:30.320 --> 19:31.320
选择图片

19:32.320 --> 19:33.320
对吧

19:33.320 --> 19:34.320
我们做这样一个动作

19:34.320 --> 19:36.320
那点一定会用到微信的

19:36.320 --> 19:37.320
本身自己的一个

19:37.320 --> 19:39.320
所谓的选择图片的功能

19:39.320 --> 19:40.320
但是微信功能里面

19:40.320 --> 19:41.320
你脑中想一下

19:41.320 --> 19:42.320
一定会有

19:42.320 --> 19:43.320
只要用到了

19:43.320 --> 19:45.320
我们的微信的一些API的话

19:45.320 --> 19:47.320
一定会有一些异步的回调

19:47.320 --> 19:49.320
而异步回调操作

19:49.320 --> 19:50.320
我们一般性都会

19:50.320 --> 19:52.320
要有一个this的重新指向

19:52.320 --> 19:53.320
所以呢

19:53.320 --> 19:54.320
我们一般都会在外部

19:54.320 --> 19:58.330
我们去定义一个

19:58.330 --> 19:59.330
that来使用

19:59.330 --> 20:01.330
我们定个that

20:01.330 --> 20:03.330
然后接下去是微信的使用

20:03.330 --> 20:04.330
微信

20:04.330 --> 20:05.330
点

20:05.330 --> 20:07.330
choose a major

20:07.330 --> 20:08.330
选择图片

20:08.330 --> 20:10.330
如果忘记同学的话

20:10.330 --> 20:11.330
你去查一下

20:11.330 --> 20:12.330
choose a major的语法

20:12.330 --> 20:14.330
选择图片

20:14.330 --> 20:15.330
然后他要求你里面

20:15.330 --> 20:17.330
至少有一个参数

20:17.330 --> 20:19.330
我们可以看一下吧

20:19.330 --> 20:20.330
我们一起看一下吧

20:20.330 --> 20:21.330
这个

20:22.330 --> 20:23.330
我们拿过来

20:23.330 --> 20:24.330
这边是npview的

20:24.330 --> 20:26.330
我们打开一下微信的

20:27.330 --> 20:28.330
我们这边是

20:29.330 --> 20:31.330
微信小程序

20:31.330 --> 20:34.770
我们打开官网

20:34.770 --> 20:40.710
我们搜索一下

20:40.710 --> 20:45.680
choose a major

20:45.680 --> 20:46.680
它有几个参数

20:46.680 --> 20:48.680
最起码我们说

20:48.680 --> 20:50.680
你可以设置一个count

20:50.680 --> 20:51.680
那我们来说

20:51.680 --> 20:53.680
还有一个是size图片尺寸

20:53.680 --> 20:54.680
还有一个就是

20:54.680 --> 20:56.680
你现在的摄像头来源

20:56.680 --> 20:58.680
你现在是来源

20:58.680 --> 20:59.680
来源的话

20:59.680 --> 21:01.680
你现在可以设置成两个

21:01.680 --> 21:02.680
一个album

21:02.680 --> 21:03.680
设像那个叫什么

21:03.680 --> 21:04.680
相册

21:04.680 --> 21:05.680
还有个camera

21:05.680 --> 21:06.680
就是相机

21:06.680 --> 21:08.680
这个主要区别是在于

21:08.680 --> 21:09.680
你点它以后

21:09.680 --> 21:10.680
你手机下面

21:10.680 --> 21:11.680
再会弹出一个

21:11.680 --> 21:12.680
你是要

21:12.680 --> 21:14.680
通过哪个渠道来源

21:14.680 --> 21:15.680
当然success file

21:15.680 --> 21:16.680
complete是依然有的

21:16.680 --> 21:17.680
对吧

21:17.680 --> 21:18.680
我们就把这几个简单

21:18.680 --> 21:19.680
你可以放置一下

21:19.680 --> 21:20.680
第一个

21:20.680 --> 21:21.680
你放上去count

21:21.680 --> 21:22.680
对吧

21:22.680 --> 21:23.680
你说我要几张呢

21:23.680 --> 21:24.680
比如说

21:24.680 --> 21:25.680
我最多

21:25.680 --> 21:26.680
我可以让你选择三张

21:26.680 --> 21:27.680
第二个的话

21:27.680 --> 21:28.680
我们再设置一个

21:28.680 --> 21:29.680
我们的size

21:29.680 --> 21:33.380
size type

21:33.380 --> 21:34.380
你可以设置这个纸

21:34.380 --> 21:35.380
这个纸

21:35.380 --> 21:37.380
称之为图变尺寸

21:37.380 --> 21:38.380
那么图变尺寸的话

21:38.380 --> 21:39.380
它主要是

21:39.380 --> 21:41.380
你传的是压缩图

21:41.380 --> 21:43.380
还是源图

21:43.380 --> 21:45.380
这边我们写一下

21:45.380 --> 21:49.380
那么size type

21:49.380 --> 21:53.380
如果你传的是original

21:53.380 --> 21:56.380
那么这个称之为叫源图

21:56.380 --> 21:57.380
如果你传的是

21:57.380 --> 22:00.380
你可以写的是compressed

22:00.380 --> 22:03.380
这个就是压缩图

22:03.380 --> 22:04.380
我们现在

22:04.380 --> 22:05.380
我们就传原图

22:05.380 --> 22:11.890
arrangement

22:11.890 --> 22:12.890
再有一个

22:12.890 --> 22:14.890
就是我们的源

22:14.890 --> 22:16.890
你可以在这边写上

22:16.890 --> 22:25.320
你现在的size type

22:25.320 --> 22:27.320
你可以写上一个size type

22:27.320 --> 22:29.320
这个是指你现在究竟

22:29.320 --> 22:30.320
你需要的是

22:30.320 --> 22:31.320
从哪儿来

22:31.320 --> 22:33.320
所谓的就是你现在的

22:33.320 --> 22:35.320
整个的结构

22:35.320 --> 22:36.320
或者称之为

22:36.320 --> 22:39.320
你整个的获取是相册

22:39.320 --> 22:43.320
还是照相机

22:43.320 --> 22:44.320
两种

22:44.320 --> 22:45.320
那么这个写法上

22:45.320 --> 22:47.320
我们是可以用素组来表示的

22:47.320 --> 22:49.320
你记要两个

22:49.320 --> 22:56.480
我们也可以在这边写上

22:56.480 --> 22:57.480
那么上面这个

22:57.480 --> 22:58.480
我们也用素组来写

22:58.480 --> 22:59.480
我们两个都要

22:59.480 --> 23:06.740
源图和缩类图都要

23:06.740 --> 23:07.740
你把这两个写上

23:07.740 --> 23:09.740
当你这样写好以后的话

23:09.740 --> 23:10.740
那么无爱活泄下去

23:10.740 --> 23:12.740
就是success

23:12.740 --> 23:14.740
你可以去拿到

23:14.740 --> 23:15.740
它现在

23:15.740 --> 23:17.740
所给你选择的图片

23:17.740 --> 23:19.740
最后返回在这里面

23:19.740 --> 23:20.740
那我们来看一下

23:20.740 --> 23:26.760
现在切面结构

23:26.760 --> 23:27.760
先不用管

23:27.760 --> 23:28.760
因为我们现在是

23:28.760 --> 23:29.760
属于静止放置

23:29.760 --> 23:30.760
点击按钮

23:30.760 --> 23:31.760
咱们看到

23:31.760 --> 23:32.760
它会弹住电话框

23:32.760 --> 23:34.760
对于手机来讲的话

23:34.760 --> 23:36.760
一定会让你去选择

23:36.760 --> 23:37.760
你是摄像

23:37.760 --> 23:38.760
还是属于相册

23:38.760 --> 23:39.760
因为我现在是模拟器

23:39.760 --> 23:41.760
模拟器没办法做这个动作

23:41.760 --> 23:43.760
所以它就弹出了电话框

23:43.760 --> 23:44.760
然后我选择到图片里面

23:44.760 --> 23:46.760
随便我选择一个小电视图片

23:46.760 --> 23:47.760
点击打开

23:47.760 --> 23:48.760
这时候你会发现

23:48.760 --> 23:50.760
它会有一个数据返回

23:50.760 --> 23:51.760
打开以后

23:51.760 --> 23:52.760
我们会看到有个叫

23:53.760 --> 23:56.760
有这样一个路径出来了

23:56.760 --> 23:58.760
有这样一个路径出来了

23:58.760 --> 23:59.760
ok吧

23:59.760 --> 24:00.760
这点我们大家需要了解

24:00.760 --> 24:01.760
就是这个指的话

24:01.760 --> 24:04.760
它是默认会被放置到

24:04.760 --> 24:05.760
这张图片

24:05.760 --> 24:06.760
会放置到

24:06.760 --> 24:08.760
当前这个微信的

24:08.760 --> 24:10.760
一个缓冲区里面

24:10.760 --> 24:11.760
一个缓冲区里面

24:11.760 --> 24:14.760
它就可以直接拿这个路径

24:14.760 --> 24:15.760
来做观察的

24:15.760 --> 24:17.760
来看到这张图片的

24:17.760 --> 24:19.760
是这个逻辑

24:19.760 --> 24:20.760
那么你说老师

24:20.760 --> 24:21.760
我现在再能不能再传一张

24:21.760 --> 24:22.760
那你来看

24:22.760 --> 24:23.760
我再传一张上来

24:23.760 --> 24:24.760
你看

24:24.760 --> 24:25.760
还在对吧

24:25.760 --> 24:26.760
但你注意

24:26.760 --> 24:27.760
你看这两个

24:27.760 --> 24:28.760
不是不是不一样的

24:28.760 --> 24:29.760
对吧

24:29.760 --> 24:31.760
两个图片都可以运用

24:31.760 --> 24:32.760
ok

24:32.760 --> 24:34.760
那么再传一张

24:34.760 --> 24:36.760
这个是没有什么问题

24:36.760 --> 24:37.760
你本身能看到

24:37.760 --> 24:39.760
不同的图片结构

24:39.760 --> 24:40.760
好

24:40.760 --> 24:41.760
那么接下去

24:41.760 --> 24:43.760
我们既然能得到图片了

24:43.760 --> 24:45.760
那我们就利用这张图片

24:45.760 --> 24:47.760
包括是上面的这些内容

24:47.760 --> 24:50.760
我们进行一个简单的存储

24:50.760 --> 24:52.760
或者说简单的记录

24:52.760 --> 24:54.760
我想记录住你现在的图片

24:54.760 --> 24:56.760
所以图片的记录

24:56.760 --> 24:59.760
我们就还是放在我们的data里面

24:59.760 --> 25:01.760
我们data里面设置几个值

25:01.760 --> 25:03.760
第一个

25:03.760 --> 25:04.760
user

25:04.760 --> 25:08.400
我们设置几个值

25:08.400 --> 25:09.400
我们要存储这个内容

25:09.400 --> 25:10.400
存在我们的群局中

25:10.400 --> 25:11.400
没关系

25:11.400 --> 25:12.400
user的话

25:12.400 --> 25:16.990
我把它解释为

25:16.990 --> 25:17.990
用户信息

25:17.990 --> 25:18.990
谁

25:18.990 --> 25:23.860
就是

25:23.860 --> 25:24.860
第二个

25:24.860 --> 25:25.860
content

25:25.860 --> 25:27.860
这是什么呢

25:27.860 --> 25:32.390
你现在用户的输入

25:32.390 --> 25:34.390
用户的输入信息

25:34.390 --> 25:35.390
再来

25:35.390 --> 25:36.390
ematers

25:36.390 --> 25:38.390
然后这边我们写上的是

25:38.390 --> 25:42.790
图片信息

25:42.790 --> 25:43.790
对吧

25:43.790 --> 25:44.790
我们还有这几个

25:44.790 --> 25:45.790
当然

25:45.790 --> 25:47.790
在我们的微信里面

25:47.790 --> 25:49.790
我们可以加一个这个功能出来

25:49.790 --> 25:50.790
can

25:50.790 --> 25:51.790
i

25:51.790 --> 25:52.790
use

25:52.790 --> 25:55.790
这个我这边是说一下

25:55.790 --> 25:57.790
我们可以去判别

25:57.790 --> 25:58.790
现在微信里面

25:58.790 --> 26:00.790
是不是有个can i use

26:00.790 --> 26:01.790
的一个写法

26:02.790 --> 26:03.790
它代表的是

26:03.790 --> 26:04.790
它可以判断出

26:04.790 --> 26:05.790
当前微信

26:05.790 --> 26:07.790
是否有一个接口

26:07.790 --> 26:08.790
或者说是api

26:08.790 --> 26:09.790
或者参数

26:09.790 --> 26:10.790
或者函数

26:10.790 --> 26:11.790
任何一个都可以

26:11.790 --> 26:12.790
是否可以使用

26:12.790 --> 26:13.790
任何一个的话

26:13.790 --> 26:14.790
是在你后面写的

26:14.790 --> 26:16.790
在当前button下面

26:16.790 --> 26:18.790
我们有一个open type

26:18.790 --> 26:20.790
是否可以获取

26:20.790 --> 26:21.790
或者使用

26:21.790 --> 26:22.790
这样的一个接口

26:22.790 --> 26:23.790
我们

26:23.790 --> 26:24.790
在button后面

26:24.790 --> 26:26.790
我们写了一个open type

26:26.790 --> 26:27.790
点

26:27.790 --> 26:28.790
我们的那个

26:28.790 --> 26:30.790
getinfo

26:30.790 --> 26:32.790
我们可以把整个这个返回

26:32.790 --> 26:33.790
结果给它

26:33.790 --> 26:34.790
这个返回告诉你

26:34.790 --> 26:36.790
这个接口是否可以用

26:36.790 --> 26:38.790
在当前按钮后面

26:38.790 --> 26:39.790
一旦你按钮点击以后

26:39.790 --> 26:40.790
是否可以得到

26:40.790 --> 26:42.790
这个接口的数据

26:42.790 --> 26:43.790
它也可以返回给你

26:43.790 --> 26:45.790
叫做can i use

26:45.790 --> 26:53.960
我们以这个命名

26:53.960 --> 26:55.960
我们定义好几个以后

26:55.960 --> 26:56.960
接下去

26:56.960 --> 26:57.960
我们在这边

26:57.960 --> 26:59.960
已经获取到你的数据了

26:59.960 --> 27:01.960
所以数据获取以后的话

27:01.960 --> 27:02.960
我们就可以把它进行

27:02.960 --> 27:03.960
一定的存储

27:03.960 --> 27:05.960
我把它存到哪儿

27:06.960 --> 27:07.960
拿出来

27:07.960 --> 27:09.960
它的拿出来路径是哪里

27:09.960 --> 27:11.960
tenp

27:11.960 --> 27:13.960
fi

27:13.960 --> 27:14.960
parse

27:14.960 --> 27:15.960
路径存储

27:15.960 --> 27:16.960
到

27:16.960 --> 27:17.960
注意

27:17.960 --> 27:18.960
这边不能用this

27:18.960 --> 27:19.960
我们说过

27:19.960 --> 27:21.960
因为它是在我们的回调里面

27:21.960 --> 27:23.960
所以我们得用外面的Z

27:23.960 --> 27:24.960
Z点

27:24.960 --> 27:26.960
我们外面的images

27:26.960 --> 27:28.960
就是在data中定义的那个

27:28.960 --> 27:31.960
res.temp5parse

27:31.960 --> 27:34.960
把这个暂时可以隐藏掉

27:34.960 --> 27:36.960
我们把这个值先存出来

27:36.960 --> 27:38.960
代表的是你现在可以得到这个内容

27:38.960 --> 27:40.960
那么注意啊

27:40.960 --> 27:41.960
那么有同学说

27:41.960 --> 27:42.960
那么这个images里面

27:42.960 --> 27:43.960
你看我上面

27:43.960 --> 27:45.960
为什么是一个速足形式

27:45.960 --> 27:46.960
原因在于

27:46.960 --> 27:48.960
因为我们如果多选的话

27:48.960 --> 27:50.960
这个temp5parse

27:50.960 --> 27:52.960
它本身也是一个速足

27:52.960 --> 27:54.960
你再来看一下

27:54.960 --> 27:56.960
我们现在选择两张图片

27:56.960 --> 27:57.960
打开

27:57.960 --> 28:02.940
我们选择一张

28:02.940 --> 28:03.940
我们没有显示

28:03.940 --> 28:05.940
我们把那个显示语句给隐藏了

28:06.940 --> 28:08.940
我们再把它显示语句打开

28:08.940 --> 28:13.110
你看啊

28:13.110 --> 28:14.110
一张两张

28:14.110 --> 28:15.110
选择两张打开

28:15.110 --> 28:16.110
你看到没有

28:16.110 --> 28:18.110
它是一个中国号

28:18.110 --> 28:19.110
代表的是

28:19.110 --> 28:20.110
这其实是个速足

28:20.110 --> 28:21.110
ok

28:21.110 --> 28:23.110
那么如果说你选一张

28:25.110 --> 28:26.110
你看到没有

28:26.110 --> 28:27.110
也是一个速足

28:27.110 --> 28:29.110
所以从这个角度来讲

28:29.110 --> 28:31.110
我的major正好是对应一个速足的

28:31.110 --> 28:32.110
给它的复制

28:32.110 --> 28:33.110
这样就ok了

28:33.110 --> 28:34.110
对吧

28:34.110 --> 28:35.110
好

28:35.110 --> 28:38.110
先把你现在的图片

28:38.110 --> 28:40.110
我们把它也放进去了

28:40.110 --> 28:41.110
第二个

28:41.110 --> 28:43.110
我们来用户的输入

28:43.110 --> 28:44.110
用户的输入呢

28:44.110 --> 28:47.110
我们其实是点击哪个按钮呢

28:47.110 --> 28:48.110
是并不是

28:48.110 --> 28:50.110
主要我们在微信中的很多做法

28:50.110 --> 28:52.110
是在上面做inpart

28:52.110 --> 28:54.110
那么inpart的输入的时候呢

28:54.110 --> 28:55.110
那么你可以直接把这个

28:55.110 --> 28:57.110
存在我们现在的

28:57.110 --> 28:58.110
那个程序中

28:58.110 --> 28:59.110
然后呢

28:59.110 --> 29:00.110
在完成

29:00.110 --> 29:01.110
你现在点击一个按钮

29:01.110 --> 29:03.110
进去取这个字

29:03.110 --> 29:05.110
这是在微信中经常使用的

29:05.110 --> 29:07.110
但是微信的本身的表单呢

29:07.110 --> 29:09.110
它只要你符合它的规范

29:09.110 --> 29:12.110
它同样是可以取得有一些数值的

29:12.110 --> 29:14.110
你比如这个textarea

29:14.110 --> 29:15.110
它就可以直接取得

29:15.110 --> 29:16.110
我们今天的做法

29:16.110 --> 29:18.110
是要用直接取得的形式来做

29:18.110 --> 29:19.110
就好比说

29:19.110 --> 29:21.110
你以前写fone那种结构是一样的

29:21.110 --> 29:22.110
那我们首先

29:22.110 --> 29:23.110
我们来看

29:23.110 --> 29:26.110
当你点击这个按钮的时候

29:26.110 --> 29:28.110
当你点击这个按钮的时候

29:28.110 --> 29:30.110
它本身在哪里呢

29:30.110 --> 29:31.110
我们前面不是写了吗

29:31.110 --> 29:33.110
我们现在有个fone

29:33.110 --> 29:42.030
所以你需要完成的是fone submit

29:42.030 --> 29:44.030
你在这里面做

29:44.030 --> 29:45.030
我们说

29:45.030 --> 29:49.030
这叫做表单的提交

29:49.030 --> 29:51.030
对吧

29:51.030 --> 29:52.030
然后这边呢

29:52.030 --> 29:54.030
我们拿个e

29:54.030 --> 29:55.030
就是事件嘛

29:55.030 --> 29:56.030
event的意思

29:56.030 --> 29:58.030
它是一个接收事件

29:58.030 --> 30:00.030
它能得到你现在的讯息吗

30:00.030 --> 30:01.030
我们来看一下

30:01.030 --> 30:02.030
得到的话

30:02.030 --> 30:03.030
在哪里

30:03.030 --> 30:06.030
它的位置和我们之前的

30:06.030 --> 30:07.030
之前大家所看到的

30:07.030 --> 30:11.430
通常的位置不太一样

30:11.430 --> 30:12.430
我们输一个

30:12.430 --> 30:14.430
123点击提交

30:14.430 --> 30:15.430
我们来看

30:15.430 --> 30:16.430
打开以后

30:16.430 --> 30:19.430
我们通常大家所应该了解的位置

30:19.430 --> 30:21.430
是在当前的对象

30:21.430 --> 30:24.430
current target里面的delay set后面

30:24.430 --> 30:26.430
一般性都会在这

30:26.430 --> 30:28.430
包括你传参也会在这

30:28.430 --> 30:30.430
但是问题是

30:30.430 --> 30:31.430
你现在

30:31.430 --> 30:32.430
我们的纸在哪呢

30:32.430 --> 30:33.430
它不在这

30:33.430 --> 30:34.430
它在这

30:34.430 --> 30:36.430
你打开

30:36.430 --> 30:39.430
它是在target下面

30:39.430 --> 30:40.430
找到一下

30:40.430 --> 30:41.430
target下面

30:41.430 --> 30:42.430
你发现吗

30:42.430 --> 30:43.430
这边有个value

30:43.430 --> 30:44.430
在这

30:44.430 --> 30:46.430
它有一个叫input content

30:46.430 --> 30:48.430
input content

30:48.430 --> 30:50.430
这个纸好像在哪里见过

30:50.430 --> 30:52.430
这个不是系统所给的

30:52.430 --> 30:54.430
这个其实是我们自己做的

30:54.430 --> 30:56.430
我们看一下页面中

30:56.430 --> 30:58.430
我们页面中对text error来讲

30:58.430 --> 31:00.430
我们给它起了一名字name

31:00.430 --> 31:01.430
其实这个纸

31:01.430 --> 31:02.430
就是这个name的名字

31:02.430 --> 31:03.430
注意一下

31:03.430 --> 31:04.430
是这个结构

31:04.430 --> 31:05.430
所以呢我们讲

31:05.430 --> 31:06.430
只要你在

31:06.430 --> 31:07.430
我们平时

31:07.430 --> 31:09.430
我们的html5上面

31:09.430 --> 31:10.430
一般都是id的操作

31:10.430 --> 31:11.430
但对于我们的

31:11.430 --> 31:13.430
就是微信来讲的话

31:13.430 --> 31:15.430
它对name进行直接的获取

31:15.430 --> 31:16.430
然后呢

31:16.430 --> 31:17.430
我们把这个name

31:17.430 --> 31:18.430
放到我们的程序中

31:18.430 --> 31:20.430
然后这边就能看到

31:20.430 --> 31:21.430
我们通过这个方式

31:21.430 --> 31:23.430
在target下面

31:23.430 --> 31:24.430
找到一个value

31:24.430 --> 31:25.430
value里面

31:25.430 --> 31:26.430
有这样的一个

31:26.430 --> 31:28.430
你的命名去植

31:28.430 --> 31:29.430
是这个逻辑

31:29.430 --> 31:31.430
所以我们去回去

31:31.430 --> 31:33.430
回到我们的代码中

31:33.430 --> 31:34.430
看到这里边

31:34.430 --> 31:36.430
我们就可以直接拿这个纸了

31:36.430 --> 31:37.430
注意一下

31:37.430 --> 31:39.430
这个纸拿到以后

31:39.430 --> 31:42.430
我们依然可以把它进行存储

31:42.430 --> 31:43.430
存到哪儿

31:43.430 --> 31:44.430
当前界面中

31:44.430 --> 31:46.430
我们有个content对吧

31:46.430 --> 31:48.430
我们直接把它存进去

31:48.430 --> 31:51.430
1.target

31:51.430 --> 32:04.120
gt.value.import content

32:04.120 --> 32:05.120
我们把target存进去

32:05.120 --> 32:06.120
对吗

32:06.120 --> 32:08.120
target value import content

32:08.120 --> 32:09.120
我们看一下

32:09.120 --> 32:12.120
target value import content

32:12.120 --> 32:13.120
对的

32:13.120 --> 32:14.120
我们把它直接把这个纸

32:14.120 --> 32:16.120
就是你用户输入的纸给存进去

32:16.120 --> 32:18.120
那我们把这个也不要了

32:18.120 --> 32:25.180
这个也删了

32:25.180 --> 32:26.180
对吧

32:26.180 --> 32:27.180
我们把这个存进去以后

32:27.180 --> 32:29.180
那么用户的这个也得到了

32:29.180 --> 32:30.180
再接下去

32:30.180 --> 32:32.180
这个信息

32:32.180 --> 32:34.180
就是用户的个人信息

32:34.180 --> 32:36.180
这个在哪里得

32:36.180 --> 32:37.180
逻辑上

32:37.180 --> 32:39.180
这个应该不是我人为

32:39.180 --> 32:41.180
要操作才能得到的

32:41.180 --> 32:42.180
对吧

32:42.180 --> 32:45.180
我应该是在页面加载的那一刻

32:45.180 --> 32:48.180
我们就应该有用户信息的获取

32:48.180 --> 32:49.180
如果没有权限

32:49.180 --> 32:50.180
我们也应该

32:50.180 --> 32:52.180
需要在刚开始打开的时候

32:52.180 --> 32:54.180
让用户给出权限

32:54.180 --> 32:56.180
所以我们的整个操作

32:56.180 --> 32:57.180
在哪呢

32:57.180 --> 32:59.180
我们需要担写一个

32:59.180 --> 33:01.180
我们的unloader

33:01.180 --> 33:11.640
我们做一个生命周期函数

33:11.640 --> 33:13.640
初始化始

33:13.640 --> 33:14.640
做的事

33:14.640 --> 33:15.640
我们做什么

33:15.640 --> 33:16.640
我们里面

33:16.640 --> 33:17.640
做一个事情

33:17.640 --> 33:18.640
先第一步

33:18.640 --> 33:24.970
就是获取用户

33:24.970 --> 33:26.970
个人数据

33:27.970 --> 33:29.970
当然我们希望能够在

33:29.970 --> 33:32.970
我们的message里写一方法来做

33:32.970 --> 33:33.970
我们称之为

33:33.970 --> 33:37.970
getUserLogin

33:37.970 --> 33:39.970
得到用户登录嘛

33:39.970 --> 33:40.970
这样一个

33:40.970 --> 33:41.970
ok

33:41.970 --> 33:42.970
那么这样的话

33:42.970 --> 33:43.970
我上面只要在这儿

33:43.970 --> 33:44.970
进行调用

33:44.970 --> 33:46.970
第四点

33:46.970 --> 33:47.970
getUserLogin

33:47.970 --> 33:48.970
这样就可以了

33:48.970 --> 33:49.970
是吧

33:49.970 --> 33:50.970
好

33:50.970 --> 33:52.970
我们写一下注释

33:52.970 --> 34:05.550
得到用户的登录

34:05.550 --> 34:06.550
首先依然

34:06.550 --> 34:12.230
我们定一个Z出来

34:12.230 --> 34:14.230
我们在微信里面

34:14.230 --> 34:16.230
微信在UserInfo前面的时候

34:16.230 --> 34:18.230
我们其实是可以多做一步

34:18.230 --> 34:21.230
来判断一下用户是否有权限

34:21.230 --> 34:23.230
那么我们一般可以这样写

34:23.230 --> 34:26.600
getSetting

34:26.600 --> 34:29.600
我们获取设定的值

34:29.600 --> 34:31.600
它的参数里面

34:31.600 --> 34:34.600
是否用户可以进行

34:34.600 --> 34:36.600
数据的获取

34:36.600 --> 34:38.600
我们利用它的一个

34:38.600 --> 34:40.600
User全线

34:40.600 --> 34:41.600
Setting

34:41.600 --> 34:44.600
是否可以有这个全线获取

34:44.600 --> 34:47.600
我们一般都是这个固定格式

34:47.600 --> 34:51.600
scoper.UserInfo

34:51.600 --> 34:53.600
这样一个结构

34:53.600 --> 34:54.600
追一下

34:54.600 --> 34:56.600
我们可以getSetting

34:56.600 --> 34:58.600
就表示我们去设定一下

34:58.600 --> 34:59.600
居处设置值

34:59.600 --> 35:00.600
判断一下

35:00.600 --> 35:02.600
你现在是不是可以用

35:02.600 --> 35:04.600
拥有UserInfo全线

35:04.600 --> 35:06.600
如果你已经

35:06.600 --> 35:07.600
我们说写一下

35:07.600 --> 35:10.600
如果你已经拥有授权

35:10.600 --> 35:14.680
那么可以直接

35:14.680 --> 35:16.680
调用

35:16.680 --> 35:18.680
getUserInfo

35:18.680 --> 35:20.680
获取投降

35:20.680 --> 35:22.680
你可以直接做这个动作的

35:22.680 --> 35:24.680
获取数据吧

35:24.680 --> 35:25.680
我们称为不叫投降

35:25.680 --> 35:28.380
那么你就在这里

35:28.380 --> 35:29.380
微信点

35:29.380 --> 35:32.380
getUserInfo

35:32.380 --> 35:34.380
你用这个方式来

35:35.380 --> 35:36.380
然后

35:36.380 --> 35:37.380
success

35:37.380 --> 35:38.380
res

35:38.380 --> 35:39.380
对吧

35:39.380 --> 35:40.380
我们去得到你的值

35:40.380 --> 35:41.380
这个的话

35:41.380 --> 35:42.380
我们把它存到

35:42.380 --> 35:43.380
我们哪里呢

35:43.380 --> 35:44.380
外部

35:44.380 --> 35:45.380
外部我们不是在data里面

35:45.380 --> 35:47.380
定一个User吗

35:47.380 --> 35:48.380
我们把它存进去

35:48.380 --> 35:49.380
它的话

35:49.380 --> 35:51.380
应该是res下面的一个UserInfo

35:51.380 --> 35:53.380
它会得到这个值的

35:53.380 --> 35:54.380
我们来看一下

35:54.380 --> 36:03.810
这个我是否现在有全线得到

36:03.810 --> 36:04.810
当它打开页面的时候

36:04.810 --> 36:05.810
就应该就有

36:05.810 --> 36:06.810
对吧

36:06.810 --> 36:07.810
出来了

36:07.810 --> 36:08.810
打开以后

36:08.810 --> 36:09.810
我们看到UserInfo

36:09.810 --> 36:11.810
这是我一堆的信息用户值

36:11.810 --> 36:13.810
代表我现在是有全线操作的

36:13.810 --> 36:14.810
登录的

36:14.810 --> 36:15.810
如果没有的话

36:15.810 --> 36:17.810
那么这边会进行询问

36:17.810 --> 36:19.810
询问你是否可以有全线

36:19.810 --> 36:20.810
如果你给它ok的话

36:20.810 --> 36:21.810
确定的话

36:21.810 --> 36:23.810
那么它就会继续得到这个值

36:23.810 --> 36:24.810
ok

36:24.810 --> 36:25.810
那么这样的话

36:25.810 --> 36:26.810
我们会往上看一下

36:26.810 --> 36:27.810
在这个里面

36:27.810 --> 36:29.810
User我已经有了

36:29.810 --> 36:31.810
用户一旦点击输入的时候

36:31.810 --> 36:32.810
这个值也存入了

36:32.810 --> 36:34.810
用户选择图片的时候

36:34.810 --> 36:35.810
这个值是不是也存入了

36:35.810 --> 36:37.810
那么这种情况下的话

36:37.810 --> 36:38.810
我们是不是说

36:38.810 --> 36:40.810
我们在点击提交的时候

36:40.810 --> 36:42.810
我们就可以在下面

36:42.810 --> 36:44.810
进行数据存储了

36:44.810 --> 36:47.320
对吧

36:47.320 --> 36:48.320
数据存储了

36:48.320 --> 36:49.320
那么现在的存储

36:49.320 --> 36:50.320
我前面介绍过

36:50.320 --> 36:51.320
我们把它作为一个

36:51.320 --> 36:52.320
当然

36:52.320 --> 36:54.320
你如果有一些服务器资源

36:54.320 --> 36:55.320
比如说

36:55.320 --> 36:57.320
你是有一些外部接口

36:57.320 --> 36:58.320
你可以把数据存过去

36:58.320 --> 36:59.320
对吧

36:59.320 --> 37:00.320
那么我们现在

37:00.320 --> 37:01.320
做一个最简单的

37:01.320 --> 37:03.320
就是我们把它存入到

37:03.320 --> 37:04.320
全局对象中

37:04.320 --> 37:05.320
我们把它存入到

37:05.320 --> 37:06.320
全局对象中

37:06.320 --> 37:07.320
好

37:07.320 --> 37:08.320
全局对象

37:08.320 --> 37:09.320
我们存出以后

37:09.320 --> 37:10.320
到时候换一个页面

37:10.320 --> 37:11.320
我们能够通过

37:11.320 --> 37:12.320
全局对象的方式

37:12.320 --> 37:13.320
再取出来

37:13.320 --> 37:16.320
然后我们能看到这样一个数据

37:16.320 --> 37:17.320
这样的话

37:17.320 --> 37:18.320
我们就是

37:18.320 --> 37:20.320
我们能够存储也能看到

37:20.320 --> 37:21.320
同时

37:21.320 --> 37:23.320
我们还可以让它进行

37:23.320 --> 37:25.320
本地化的保存

37:25.320 --> 37:27.320
比如说存储到你的相册中

37:27.320 --> 37:29.320
这种逻辑

37:29.320 --> 37:30.320
并且我们还可以

37:30.320 --> 37:33.320
删除整个这个操作

37:33.320 --> 37:34.320
对了

37:34.320 --> 37:35.320
说起删除的话

37:35.320 --> 37:36.320
我们看一下

37:36.320 --> 37:37.320
刚才我们前面

37:37.320 --> 37:38.320
在获取图像以后的话

37:38.320 --> 37:39.320
我们其实

37:39.320 --> 37:40.320
这边数据

37:40.320 --> 37:42.320
就能够让它给呈现出来了

37:42.320 --> 37:43.320
对吧

37:43.320 --> 37:45.320
图像已经获得到了以后的话

37:45.320 --> 37:46.320
那我们回上去

37:46.320 --> 37:48.320
这边不是Imagers吗

37:48.320 --> 37:49.320
Imagers的话

37:49.320 --> 37:50.320
那我在页面中的时候

37:50.320 --> 37:52.320
是不是我们应该是有可以

37:52.320 --> 37:54.320
再把图像给拿出来了

37:54.320 --> 37:56.320
对吧

37:56.320 --> 37:57.320
我们这边的站位就不用了

37:57.320 --> 37:58.320
我们现在的话

37:58.320 --> 38:00.320
直接可以有一个4e去了

38:00.320 --> 38:01.320
对吧

38:01.320 --> 38:02.320
我们可以让它循环的

38:02.320 --> 38:03.320
把图片给拿出来了

38:03.320 --> 38:05.320
然后我们在这边做

38:05.320 --> 38:07.690
在图片外

38:07.690 --> 38:09.690
我们v4

38:09.690 --> 38:10.690
因为之前没有图片

38:10.690 --> 38:12.690
我们现在是图片拿到了

38:12.690 --> 38:13.690
我们里面item

38:13.690 --> 38:15.690
Imagers

38:15.690 --> 38:16.690
对吧

38:16.690 --> 38:17.690
在button里面的有一个词

38:17.690 --> 38:18.690
然后我们写上

38:18.690 --> 38:20.690
当前它的所引

38:22.690 --> 38:23.690
然后此时

38:23.690 --> 38:25.690
我们来切这个内容

38:25.690 --> 38:27.690
我们来切

38:27.690 --> 38:33.820
你所获得的这个图片

38:33.820 --> 38:34.820
这个图片的话

38:34.820 --> 38:35.820
我们就是item

38:35.820 --> 38:37.820
它是一个素组

38:37.820 --> 38:38.820
你还记得吗

38:38.820 --> 38:39.820
刚才强调过

38:39.820 --> 38:40.820
所以进来以后

38:40.820 --> 38:43.820
这样都是它的一个图片地址

38:43.820 --> 38:44.820
然后第二个

38:44.820 --> 38:45.820
就是删除图片不用动

38:45.820 --> 38:46.820
对吧

38:46.820 --> 38:47.820
我们就这样就可以看到了

38:47.820 --> 38:48.820
应该是

38:48.820 --> 38:49.820
好

38:49.820 --> 38:54.180
我们来看一下

38:54.180 --> 38:55.180
还有一张对吧

38:55.180 --> 38:57.180
我们复制了两个

38:57.180 --> 38:58.180
对吧

38:58.180 --> 38:59.180
前面还有一个

38:59.180 --> 39:07.700
我们把这个给删了

39:07.700 --> 39:08.700
好了

39:08.700 --> 39:09.700
我们现在没有图片

39:09.700 --> 39:10.700
选择图片

39:10.700 --> 39:12.700
然后选一张

39:12.700 --> 39:13.700
打开

39:13.700 --> 39:14.700
出来了吧

39:14.700 --> 39:15.700
现在删除没用

39:15.700 --> 39:16.700
现在删除的话

39:16.700 --> 39:17.700
还没有做我们

39:17.700 --> 39:18.700
待会我们马上

39:18.700 --> 39:22.460
做一下删除图片功能

39:22.460 --> 39:24.460
我们把用户信息获取

39:24.460 --> 39:25.460
这个已经把它隐藏掉吧

39:25.460 --> 39:28.460
我们不需要在这边看到了

39:28.460 --> 39:29.460
这个对吧

39:29.460 --> 39:32.860
好

39:32.860 --> 39:33.860
我们做第二个

39:33.860 --> 39:34.860
就是我们把

39:34.860 --> 39:35.860
选择多张图片

39:35.860 --> 39:37.860
它能不能很像再出来

39:37.860 --> 39:38.860
因为我们程序写好了

39:38.860 --> 39:39.860
看一下

39:39.860 --> 39:41.860
是不是出来了

39:41.860 --> 39:42.860
是可以很像拖动的

39:42.860 --> 39:43.860
因为我做了一个scholarview

39:43.860 --> 39:44.860
然后让它进行了

39:44.860 --> 39:46.860
webspatter.inno-ropper

39:46.860 --> 39:47.860
不换行

39:47.860 --> 39:48.860
同时在scholarview上

39:48.860 --> 39:49.860
做了一个scholarx

39:49.860 --> 39:51.860
表示很像拖动可以

39:51.860 --> 39:52.860
OK

39:52.860 --> 39:53.860
我们选择图片

39:53.860 --> 39:54.860
已经看到了

39:54.860 --> 39:56.860
我们已经呈现在界面中了

39:56.860 --> 39:57.860
接下去

39:57.860 --> 40:00.860
我们做一下这个删除按钮

40:00.860 --> 40:02.860
因为我现在是预览

40:02.860 --> 40:03.860
所以我还没有上传

40:03.860 --> 40:04.860
或者说保存

40:04.860 --> 40:07.860
所以这个功能一定是可以的

40:07.860 --> 40:09.860
不存在于我选择完了

40:09.860 --> 40:10.860
就不能再做了

40:10.860 --> 40:11.860
对吧

40:11.860 --> 40:13.860
那么做删除图片的话

40:13.860 --> 40:14.860
它其实在这上面

40:14.860 --> 40:16.860
我们写了一个简单的方法

40:16.860 --> 40:17.860
叫方法名称

40:17.860 --> 40:19.860
叫removeimg

40:19.860 --> 40:21.860
然后我们下面来

40:21.860 --> 40:29.610
删除方法

40:32.120 --> 40:33.120
不是

40:33.120 --> 40:34.120
删除图片

40:35.120 --> 40:36.120
临时图片

40:36.120 --> 40:38.120
因为它还没有传上去

40:39.120 --> 40:40.120
那么你删除的话

40:40.120 --> 40:41.120
由于我本身

40:41.120 --> 40:42.120
自己的这个操作

40:42.120 --> 40:44.120
它是跟着图片走的

40:44.120 --> 40:45.120
也就是说

40:45.120 --> 40:46.120
你有一张图片就有一个

40:46.120 --> 40:47.120
那么这意味着

40:47.120 --> 40:49.120
我需要有一个参数

40:49.120 --> 40:50.120
能让我知道

40:50.120 --> 40:51.120
你到底是哪一张

40:51.120 --> 40:52.120
对吧

40:52.120 --> 40:53.120
所以我们的参数结构

40:53.120 --> 40:54.120
微信格式

40:54.120 --> 40:57.120
data.index

40:57.120 --> 40:59.120
然后给出我们的index

40:59.120 --> 41:00.120
这个index是谁

41:00.120 --> 41:01.120
是他

41:01.120 --> 41:02.120
这个是我现在

41:02.120 --> 41:03.120
里边需要得到的

41:03.120 --> 41:04.120
一个变量名

41:04.120 --> 41:06.120
所以我拿这个名称

41:06.120 --> 41:08.120
我们直接到里边去

41:08.120 --> 41:09.120
我们往下

41:09.120 --> 41:11.120
拿到他的参数集

41:11.120 --> 41:12.120
也就是

41:12.120 --> 41:14.120
一事件

41:14.120 --> 41:15.120
在这个事件里面

41:15.120 --> 41:16.120
我们是可以拿到

41:16.120 --> 41:18.120
它当前的整个

41:20.120 --> 41:21.120
index的

41:22.120 --> 41:24.120
拿它的index的路径

41:24.120 --> 41:26.120
其实和我们之前说的

41:28.120 --> 41:29.120
用户输入

41:29.120 --> 41:33.200
那个又不一样

41:33.200 --> 41:34.200
它不一样

41:34.200 --> 41:36.200
它是在我们常规路径下面

41:36.200 --> 41:38.200
也就是current那个下面

41:38.200 --> 41:39.200
实在

41:39.200 --> 41:40.200
那个是直接是

41:40.200 --> 41:42.200
那个target下的一个

41:43.200 --> 41:44.200
所以每次的话

41:44.200 --> 41:45.200
如果你做多了

41:45.200 --> 41:46.200
你就可以自己去看到

41:46.200 --> 41:47.200
这个效果

41:47.200 --> 41:48.200
好 我们拿出来

41:48.200 --> 41:49.200
点一下

41:49.200 --> 41:50.200
你自己看

41:50.200 --> 41:51.200
它的位置

41:51.200 --> 41:52.200
不在它的target下面

41:52.200 --> 41:53.200
你到target下面

41:53.200 --> 41:54.200
去找的话

41:54.200 --> 41:55.200
它是没有的

41:55.200 --> 41:56.200
它在哪呢

41:56.200 --> 41:57.200
它是在传输过来的

41:57.200 --> 41:58.200
数据的时候

41:58.200 --> 41:59.200
它是在current

41:59.200 --> 42:00.200
target下面

42:00.200 --> 42:02.200
在didset里面

42:02.200 --> 42:03.200
我们在这个位置上

42:03.200 --> 42:05.200
这个index就是的

42:05.200 --> 42:06.200
因为我们是数组

42:06.200 --> 42:07.200
所以它的index

42:07.200 --> 42:08.200
也就是我们的

42:08.200 --> 42:09.200
v4的index

42:09.200 --> 42:11.200
它是以0的方式在做传输

42:12.200 --> 42:13.200
所以我们看到

42:13.200 --> 42:14.200
我们可以接到这个值

42:14.200 --> 42:16.200
那么我们拿的时候

42:16.200 --> 42:18.200
我们也是这个结构

42:18.200 --> 42:19.200
我们写一遍量

42:19.200 --> 42:20.200
当前的位置

42:20.200 --> 42:21.200
我们写上

42:22.200 --> 42:23.200
我们写上是

42:24.200 --> 42:25.200
position

42:25.200 --> 42:27.200
e.current

42:27.200 --> 42:33.200
target.dataset.index

42:33.200 --> 42:34.200
这是我现在

42:34.200 --> 42:37.200
图片所在的一个位置

42:37.200 --> 42:38.200
那么拿到你这个

42:38.200 --> 42:40.200
图片位置以后的话

42:40.200 --> 42:41.200
那么我们下面

42:41.200 --> 42:42.200
一定做的是

42:42.200 --> 42:44.200
删除图片

42:44.200 --> 42:46.200
图片在哪里

42:46.200 --> 42:47.200
删除图片单独

42:47.200 --> 42:49.200
我们可以做一个

42:49.200 --> 42:51.200
我们不用单独做方法了

42:51.200 --> 42:52.200
因为它很简单

42:52.200 --> 42:53.200
图片在哪里

42:53.200 --> 42:54.200
我们在

42:54.200 --> 42:55.200
得到所有图片以后

42:55.200 --> 42:57.200
你要让它呈现出来

42:57.200 --> 42:58.200
你一定做了一件事

42:58.200 --> 42:59.200
你看到没有

42:59.200 --> 43:00.200
刚才我们说的

43:00.200 --> 43:01.200
你会把它放置到了

43:01.200 --> 43:03.200
我们的data里面的

43:03.200 --> 43:04.200
images里面

43:04.200 --> 43:05.200
images是一个速组

43:05.200 --> 43:06.200
所以删除图片

43:06.200 --> 43:08.200
就意味着到速组中

43:08.200 --> 43:10.200
把这张图片删掉

43:10.200 --> 43:11.200
对吧

43:11.200 --> 43:13.200
所以我们的做法就是

43:13.200 --> 43:14.200
当前的

43:14.200 --> 43:16.200
因为它没有去使用

43:16.200 --> 43:17.200
各种的回调

43:17.200 --> 43:18.200
所以它直接可以用this

43:18.200 --> 43:19.200
有回调

43:19.200 --> 43:20.200
你要guide that

43:21.200 --> 43:22.200
在images里面

43:22.200 --> 43:24.200
数组里面删除

43:24.200 --> 43:25.200
某一个所引开始的

43:25.200 --> 43:26.200
第一张图片

43:26.200 --> 43:27.200
就是用this

43:29.200 --> 43:31.200
找到当前这个位置

43:31.200 --> 43:32.200
这个位置就是

43:32.200 --> 43:33.200
速组所引位

43:33.200 --> 43:34.200
删掉几张

43:34.200 --> 43:35.200
删掉一张

43:36.200 --> 43:37.200
这样做好以后

43:37.200 --> 43:38.200
就可以

43:38.200 --> 43:39.200
因为我们现在

43:39.200 --> 43:40.200
注意一下

43:40.200 --> 43:41.200
因为我们现在

43:41.200 --> 43:42.200
npview的话

43:42.200 --> 43:43.200
你直接这样改变

43:43.200 --> 43:44.200
但是对于微信来讲

43:44.200 --> 43:45.200
你需要用

43:45.200 --> 43:46.200
我们所谓的

43:46.200 --> 43:47.200
set data

43:47.200 --> 43:48.200
来完成

43:48.200 --> 43:49.200
它不需要

43:49.200 --> 43:50.200
那个还是要set data

43:50.200 --> 43:51.200
里边去写上

43:51.200 --> 43:53.200
你现在究竟的内容

43:53.200 --> 43:54.200
它直接这样做就可以了

43:54.200 --> 43:55.200
好了

43:55.200 --> 43:56.200
我们来看一下效果

43:56.200 --> 44:00.880
首先

44:00.880 --> 44:02.880
我们去选择图片

44:02.880 --> 44:03.880
我们选一张

44:03.880 --> 44:04.880
两张

44:04.880 --> 44:05.880
打开

44:05.880 --> 44:07.880
看到两张图片处

44:07.880 --> 44:08.880
我们选了三张

44:08.880 --> 44:09.880
没问题

44:09.880 --> 44:10.880
然后我们选择任何一张

44:10.880 --> 44:12.880
我们首先先看一下

44:12.880 --> 44:14.880
这个上面的图标

44:14.880 --> 44:16.880
在我们的icon图标上

44:16.880 --> 44:17.880
我们打开看到

44:19.880 --> 44:20.880
看到吗

44:20.880 --> 44:21.880
这个index等于e

44:21.880 --> 44:23.880
代表这是第二张图片

44:23.880 --> 44:25.880
我们对它进行点击

44:26.880 --> 44:27.880
是不是没有了

44:27.880 --> 44:28.880
这个没有的意味着

44:28.880 --> 44:30.880
就是你现在

44:30.880 --> 44:31.880
Maders的素组

44:31.880 --> 44:32.880
总把它给删除了

44:32.880 --> 44:33.880
然后你的页面

44:33.880 --> 44:34.880
重新完成

44:34.880 --> 44:36.880
对这个Maders的绑定

44:36.880 --> 44:38.880
形成了这个效果

44:38.880 --> 44:39.880
OK

44:39.880 --> 44:40.880
这样删除了是不是

44:40.880 --> 44:41.880
很简单

44:41.880 --> 44:42.880
对吧

44:42.880 --> 44:43.880
你看

44:43.880 --> 44:44.880
原文件里面

44:44.880 --> 44:45.880
就直接没有了

44:45.880 --> 44:46.880
它不是一个隐藏

44:46.880 --> 44:47.880
并不是

44:47.880 --> 44:48.880
我们做了一个

44:48.880 --> 44:50.880
shoulding hidden的操作

44:50.880 --> 44:51.880
然后我们现在

44:51.880 --> 44:53.880
我们图片的

44:53.880 --> 44:54.880
图片的数组结构

44:54.880 --> 44:56.880
我们已经可以加载和删除了

44:56.880 --> 44:57.880
同时

44:57.880 --> 44:59.880
我们上面的文本

44:59.880 --> 45:01.880
我们也可以对它进行输入了

45:01.880 --> 45:02.880
那么我们看

45:02.880 --> 45:04.880
现在的几个条件

45:04.880 --> 45:05.880
已经完成了

45:05.880 --> 45:07.880
我们开始进行数据的存储

45:07.880 --> 45:08.880
是不是

45:08.880 --> 45:09.880
应该到这一块来了

45:09.880 --> 45:10.880
数据存储

45:10.880 --> 45:12.880
我们其实利用的是

45:12.880 --> 45:13.880
我们刚才说的

45:13.880 --> 45:15.880
就是我们的全局对象

45:15.880 --> 45:17.880
那么我们全局对象的存储

45:17.880 --> 45:18.880
我们本身来写一下

45:18.880 --> 45:20.880
要完成一个全局对象的存储

45:20.880 --> 45:22.880
你必须会有我们的Global

45:22.880 --> 45:23.880
对吧

45:23.880 --> 45:25.880
那么这边存储之前

45:25.880 --> 45:27.880
我们先做个判别

45:27.880 --> 45:28.880
下面写Global

45:28.880 --> 45:29.880
就可以了

45:29.880 --> 45:32.880
我们用use.canIuse

45:32.880 --> 45:34.880
来做个判别

45:34.880 --> 45:36.880
因为随便你怎么样

45:36.880 --> 45:37.880
哪怕你现在再简单的

45:37.880 --> 45:38.880
无论体交银行

45:38.880 --> 45:40.880
123这个数字的话

45:40.880 --> 45:41.880
你得有权限

45:41.880 --> 45:42.880
理解吧

45:42.880 --> 45:43.880
那么我们现在

45:43.880 --> 45:44.880
在前面data中

45:44.880 --> 45:46.880
我们定义过canIuse

45:46.880 --> 45:47.880
刚才我们解释过

45:47.880 --> 45:49.880
canIuse是指的是

45:49.880 --> 45:50.880
对这个按钮

45:50.880 --> 45:51.880
我想去获得

45:51.880 --> 45:53.880
用户接口的

45:53.880 --> 45:54.880
getUserInfo

45:54.880 --> 45:56.880
是否有权限获取

45:56.880 --> 45:57.880
Iuse

45:57.880 --> 45:59.880
就是是否可以使用

45:59.880 --> 46:00.880
它默认反回

46:00.880 --> 46:01.880
会有一个

46:01.880 --> 46:02.880
不是默认

46:02.880 --> 46:04.880
它反回会有一个true and false

46:04.880 --> 46:06.880
那我们直接在这边进行判断

46:06.880 --> 46:08.880
只有你有权限

46:08.880 --> 46:14.620
权限

46:14.620 --> 46:15.620
有权限的话

46:15.620 --> 46:16.620
我们才往这里面走

46:16.620 --> 46:17.620
同时我们这里面

46:17.620 --> 46:19.620
还要做一个判断

46:19.620 --> 46:21.620
就是你点的时候

46:21.620 --> 46:23.620
你是不是有文字输入

46:23.620 --> 46:25.620
或有图片输入

46:25.620 --> 46:26.620
理解吧

46:26.620 --> 46:28.620
如果你什么都没有

46:28.620 --> 46:30.620
那我现在何来的存储概念

46:30.620 --> 46:32.620
this点

46:32.620 --> 46:33.620
images

46:33.620 --> 46:34.620
这是我的图片

46:34.620 --> 46:35.620
你只要有图片

46:35.620 --> 46:36.620
你的length

46:36.620 --> 46:38.620
因为它是素组

46:38.620 --> 46:39.620
它是素组

46:39.620 --> 46:41.620
所以它的长度一定大于零

46:41.620 --> 46:42.620
对吧

46:42.620 --> 46:43.620
或者

46:43.620 --> 46:44.620
你没有传图片

46:44.620 --> 46:45.620
但是你现在有文本

46:45.620 --> 46:47.620
我们在content里面

46:47.620 --> 46:49.620
你的文本不等于空

46:49.620 --> 46:51.620
那么这也代表你有内容

46:51.620 --> 46:52.620
对吧

46:52.620 --> 46:54.620
有数据

46:54.620 --> 46:56.620
如果没有数据的话

46:56.620 --> 46:58.620
我们在else里面做

46:58.620 --> 47:00.620
else里面就是无数据提示

47:00.620 --> 47:04.190
它做个无数据提示

47:04.190 --> 47:05.190
用微信提示

47:05.190 --> 47:07.190
千万还是那句话

47:07.190 --> 47:08.190
不要干这个玩意

47:08.190 --> 47:10.190
在我们的很多的同学里面

47:10.190 --> 47:12.190
特别是在view同学里面

47:12.190 --> 47:13.190
很多时候干这个

47:13.190 --> 47:14.190
但是我们微信里面

47:14.190 --> 47:16.190
你要用微信的格式来

47:16.190 --> 47:18.190
比如说shortost

47:18.190 --> 47:20.190
你用这个方式

47:20.190 --> 47:21.190
title

47:21.190 --> 47:23.190
你给它一个

47:23.190 --> 47:24.190
写

47:24.190 --> 47:26.190
点

47:26.190 --> 47:28.630
东西吧

47:28.630 --> 47:30.630
我们随便写个话

47:30.630 --> 47:31.630
icon

47:31.630 --> 47:33.630
我们给它一个none

47:33.630 --> 47:34.630
好

47:34.630 --> 47:35.630
我们来看一下

47:35.630 --> 47:36.630
先看一下

47:36.630 --> 47:38.630
什么都没有提交你

47:38.630 --> 47:39.630
然后你就直接想过

47:39.630 --> 47:40.630
你看到吗

47:40.630 --> 47:41.630
写点东西吧

47:41.630 --> 47:42.630
别骗我

47:42.630 --> 47:43.630
对吧

47:43.630 --> 47:44.630
这东西

47:44.630 --> 47:45.630
OK

47:45.630 --> 47:46.630
那我们再来

47:46.630 --> 47:47.630
如果有数据情况下

47:47.630 --> 47:49.630
那我们就可以给它去做一个

47:49.630 --> 47:51.630
简单的数据的存储

47:51.630 --> 47:53.630
我们再写一个方法出来

47:53.630 --> 47:56.630
以为保存数据

47:56.630 --> 47:58.630
我们就写这样一个方法

47:58.630 --> 48:06.080
数据保存

48:06.080 --> 48:09.080
我们来调一下它

48:09.080 --> 48:10.080
因为你所有的数据

48:10.080 --> 48:12.080
都是在data里面

48:12.080 --> 48:13.080
所以我不需要进行传送

48:13.080 --> 48:15.080
我只需要换起

48:15.080 --> 48:17.080
调起这样一个事件的处理

48:17.080 --> 48:18.080
这样一个方法

48:18.080 --> 48:19.080
函数的处理就可以了

48:19.080 --> 48:20.080
OK吧

48:20.080 --> 48:21.080
好

48:21.080 --> 48:22.080
我们现在往下

48:22.080 --> 48:23.080
跑到这来

48:23.080 --> 48:24.080
我们来处理这个方法

48:24.080 --> 48:25.080
那么这个方法

48:25.080 --> 48:27.080
其实相对而言

48:27.080 --> 48:28.080
要简单化

48:28.080 --> 48:30.080
我们可以把数据存储

48:30.080 --> 48:32.080
到我们的

48:32.080 --> 48:34.080
Global Data里面

48:34.080 --> 48:35.080
这个结构

48:35.080 --> 48:37.080
那么我们现在先做

48:37.080 --> 48:38.080
第一件事

48:38.080 --> 48:40.080
我们需要去哪里面的图标

48:40.080 --> 48:41.080
Global Data

48:41.080 --> 48:43.080
我们要去创建一下

48:43.080 --> 48:45.080
我们要去创建一下

48:45.080 --> 48:46.080
全聚变量

48:46.080 --> 48:48.080
全聚变量在我们的

48:48.080 --> 48:49.080
Mand-in.js中

48:49.080 --> 48:50.080
我们看到没有

48:50.080 --> 48:52.080
我们这边写一句

48:52.080 --> 48:54.080
view property

48:54.080 --> 48:55.080
Global property

48:55.080 --> 48:57.080
做一个圆形注册

48:58.080 --> 48:59.080
写一下

48:59.080 --> 49:04.120
圆形注册

49:04.120 --> 49:06.120
那注册完成以后的话

49:06.120 --> 49:07.120
那么你在页面中

49:07.120 --> 49:08.120
直接可以使用

49:08.120 --> 49:09.120
这个对象了

49:09.120 --> 49:11.120
现在回到我们程序中

49:11.120 --> 49:13.120
我们在这个里面

49:13.120 --> 49:15.120
我们希望能够把我们的

49:15.120 --> 49:17.120
这个对象的完整信息

49:17.120 --> 49:18.120
全部存入进来

49:18.120 --> 49:19.120
那此时

49:19.120 --> 49:20.120
我们就可以去

49:20.120 --> 49:21.120
创建一个

49:21.120 --> 49:23.120
我们自己的一个

49:23.120 --> 49:24.120
结构对象

49:24.120 --> 49:27.900
Data

49:27.900 --> 49:32.000
Content

49:32.000 --> 49:33.000
This

49:33.000 --> 49:35.000
我们的Content

49:35.000 --> 49:36.000
第二

49:38.000 --> 49:39.000
Data

49:39.000 --> 49:40.000
New

49:40.000 --> 49:41.000
我们给它一个

49:41.000 --> 49:42.000
当前的时间

49:42.000 --> 49:43.000
再来

49:46.400 --> 49:47.400
Emitters

49:49.400 --> 49:50.400
This点

49:50.400 --> 49:51.400
Emitters

49:51.400 --> 49:52.400
存入

49:52.400 --> 49:54.400
用户是谁

49:55.400 --> 49:56.400
This点

49:56.400 --> 49:57.400
User

49:57.400 --> 49:58.400
可以了

49:58.400 --> 49:59.400
好

49:59.400 --> 50:00.400
我们把几个值

50:00.400 --> 50:01.400
全存好以后

50:01.400 --> 50:02.400
然后往后面

50:02.400 --> 50:03.400
全聚存储

50:03.400 --> 50:05.400
存储方式其实很简单

50:05.400 --> 50:06.400
我们

50:06.400 --> 50:07.400
先有一个

50:07.400 --> 50:08.400
看到吗

50:08.400 --> 50:09.400
我们在这里边

50:09.400 --> 50:10.400
有Global对吧

50:10.400 --> 50:11.400
但是问题是

50:11.400 --> 50:12.400
我们需要Global

50:12.400 --> 50:13.400
有一个

50:13.400 --> 50:15.400
非常简单的一个

50:15.400 --> 50:16.400
变量

50:16.400 --> 50:18.400
来存储这个内容

50:18.400 --> 50:19.400
所以

50:19.400 --> 50:20.400
我们需要的是

50:20.400 --> 50:22.400
到Global的最上面去

50:22.400 --> 50:23.400
或者称之为

50:23.400 --> 50:24.400
我们初始化的时候

50:24.400 --> 50:26.400
定一个初始化变量在

50:26.400 --> 50:29.400
我们在当前的Unload里面

50:29.400 --> 50:30.400
我们说

50:30.400 --> 50:31.400
初始化

50:31.400 --> 50:35.190
Global变量

50:38.520 --> 50:39.520
This点

50:39.520 --> 50:44.460
Global

50:44.460 --> 50:45.460
Data点

50:47.460 --> 50:53.200
我们写一个Topic

50:53.200 --> 50:54.200
然后

50:54.200 --> 50:55.200
Data

50:55.200 --> 50:59.500
这样写一下

50:59.500 --> 51:01.500
初始化一个Topic

51:01.500 --> 51:02.500
就是内容

51:02.500 --> 51:06.390
我们先深深内容吧

51:06.390 --> 51:07.390
初始化一个内容

51:07.390 --> 51:08.390
这内容里面有数据

51:08.390 --> 51:09.390
数据里面的话

51:09.390 --> 51:11.390
它其实是一个空速组

51:11.390 --> 51:12.390
我们不断的往这里边

51:12.390 --> 51:13.390
进行追加

51:13.390 --> 51:14.390
就可以了

51:14.390 --> 51:15.390
对吧

51:15.390 --> 51:20.360
然后我们来

51:20.360 --> 51:22.360
到我们的数据存出来

51:22.360 --> 51:23.360
那么对于数据存出来讲的话

51:23.360 --> 51:24.360
其实很简单

51:24.360 --> 51:26.360
我们只需要做的是

51:26.360 --> 51:27.360
Data点

51:27.360 --> 51:28.360
Global

51:28.360 --> 51:29.360
Data点

51:29.360 --> 51:33.060
Content

51:33.060 --> 51:35.060
它里边的那个叫做

51:35.060 --> 51:36.060
有个Data对吧

51:36.060 --> 51:37.060
我们刚才深沉的

51:37.060 --> 51:39.060
对于它这个数据来讲

51:39.060 --> 51:40.060
它是一个速组

51:40.060 --> 51:42.060
所以我们压进去

51:42.060 --> 51:43.060
压一个内容进去

51:43.060 --> 51:44.060
压一个什么

51:44.060 --> 51:46.060
压一个对象进去

51:46.060 --> 51:48.060
把我们刚才这个对象给压进去

51:48.060 --> 51:52.080
然后我们来说出看一下

51:54.080 --> 51:56.080
就直接把这个

51:56.080 --> 52:05.850
Data输出

52:05.850 --> 52:06.850
来看啊

52:06.850 --> 52:07.850
首先

52:07.850 --> 52:08.850
啥都不干

52:08.850 --> 52:09.850
不行对吧

52:09.850 --> 52:10.850
然后包包吧

52:10.850 --> 52:12.850
输点内容

52:12.850 --> 52:13.850
然后这边呢

52:13.850 --> 52:16.850
我们上一张图片

52:16.850 --> 52:17.850
点击录

52:17.850 --> 52:18.850
怎么看

52:18.850 --> 52:20.850
是不是有一个数据出来了

52:20.850 --> 52:21.850
点开以后

52:21.850 --> 52:22.850
里边是不是

52:22.850 --> 52:23.850
啊

52:23.850 --> 52:24.850
是我写的对吧

52:24.850 --> 52:25.850
一个时间

52:25.850 --> 52:26.850
有一个速组

52:26.850 --> 52:28.850
U4里面没看到对吧

52:28.850 --> 52:30.850
我们检查一下U4待会

52:30.850 --> 52:31.850
图片进来了

52:31.850 --> 52:32.850
然后U4里面没有

52:32.850 --> 52:33.850
OK

52:34.850 --> 52:35.850
我们来看一下

52:35.850 --> 52:36.850
distant user

52:36.850 --> 52:38.850
distant user是我在最前面

52:38.850 --> 52:39.850
我们的

52:39.850 --> 52:41.850
这里定义的

52:41.850 --> 52:42.850
那么U4对象的话呢

52:42.850 --> 52:45.850
我们是通过这边可以获得的

52:45.850 --> 52:46.850
那么这边呢

52:46.850 --> 52:49.850
它应该是这个数据完全可以

52:49.850 --> 52:51.850
它在什么时候调用这个呢

52:51.850 --> 52:53.850
这个应该是

52:53.850 --> 52:56.850
用户在登录的那一刻

52:56.850 --> 52:59.850
onload里面调用的

52:59.850 --> 53:00.850
调用以后

53:00.850 --> 53:01.850
它应该得到了的数据

53:01.850 --> 53:02.850
然后呢

53:02.850 --> 53:04.850
通过这个方式能够返回

53:04.850 --> 53:05.850
我们在这看一下

53:05.850 --> 53:14.070
它是否通过这样的方式拿到了

53:14.070 --> 53:21.800
是不是我们的一个变量啊

53:21.800 --> 53:22.800
对吧

53:22.800 --> 53:23.800
打开看一下

53:23.800 --> 53:24.800
U4Info

53:24.800 --> 53:25.800
它是U4Info

53:25.800 --> 53:26.800
对吧

53:26.800 --> 53:27.800
我们这个多了一个

53:27.800 --> 53:29.800
它是U4Info

53:29.800 --> 53:32.620
OK

53:32.620 --> 53:38.770
好

53:38.770 --> 53:39.770
我们再来一次

53:39.770 --> 53:40.770
输点啊

53:40.770 --> 53:42.770
就是按了

53:42.770 --> 53:43.770
然后呢

53:43.770 --> 53:44.770
选择一张图片

53:44.770 --> 53:46.770
点击记录

53:46.770 --> 53:48.770
看一下U4中是不是有值了

53:48.770 --> 53:51.790
是不是U4里面

53:51.790 --> 53:53.790
我个人信息存在这里有了

53:53.790 --> 53:54.790
对吧

53:54.790 --> 53:55.790
头像

53:55.790 --> 53:56.790
逆称

53:56.790 --> 53:57.790
对吧

53:57.790 --> 53:58.790
这些都有了

53:58.790 --> 53:59.790
语言

53:59.790 --> 54:00.790
OK

54:00.790 --> 54:01.790
那么这样的话呢

54:01.790 --> 54:02.790
我把我至少这边

54:02.790 --> 54:03.790
所添加的一条记录

54:03.790 --> 54:04.790
我记录进来了

54:04.790 --> 54:05.790
同时呢

54:05.790 --> 54:06.790
我们再来看一下

54:06.790 --> 54:07.790
我现在再写一个

54:07.790 --> 54:08.790
123

54:08.790 --> 54:10.790
然后再次进行记录

54:10.790 --> 54:11.790
它告诉你

54:11.790 --> 54:13.790
现在数据中有两个值了

54:13.790 --> 54:14.790
然后打开123

54:14.790 --> 54:15.790
这条是不是进来了

54:15.790 --> 54:16.790
OK吧

54:16.790 --> 54:17.790
然后再来看一下

54:17.790 --> 54:18.790
这个里面

54:18.790 --> 54:19.790
你可以看到的是什么呢

54:19.790 --> 54:22.790
是图片那个是空的

54:22.790 --> 54:24.790
但123这条是有数据的

54:24.790 --> 54:25.790
对吧

54:25.790 --> 54:26.790
那么再来

54:26.790 --> 54:27.790
现在文字没有

54:27.790 --> 54:31.740
选一个图片

54:31.740 --> 54:32.740
此时呢

54:32.740 --> 54:33.740
我们再做记录

54:33.740 --> 54:34.740
看三个数据

54:34.740 --> 54:35.740
看最后一个

54:35.740 --> 54:37.740
此时文字是空的

54:37.740 --> 54:39.740
图片是有的

54:39.740 --> 54:45.420
再来一个多数据

54:45.420 --> 54:46.420
一

54:46.420 --> 54:47.420
二

54:47.420 --> 54:48.420
三

54:48.420 --> 54:49.420
三张图片

54:49.420 --> 54:50.420
文字没有

54:50.420 --> 54:51.420
记录

54:51.420 --> 54:54.820
看文字没有

54:54.820 --> 54:55.820
一

54:55.820 --> 54:56.820
都好看到吗

54:56.820 --> 54:57.820
数组

54:57.820 --> 54:58.820
三张图片

54:58.820 --> 54:59.820
有了吧

54:59.820 --> 55:00.820
那么这样的话

55:00.820 --> 55:01.820
我们就意味着

55:01.820 --> 55:03.820
现在你能够把数据存进来了

55:03.820 --> 55:04.820
对吧

55:04.820 --> 55:05.820
你把数据存进来了

55:05.820 --> 55:07.820
那平时你这样删也可以

55:07.820 --> 55:09.820
所以这个方式呢

55:09.820 --> 55:11.820
我们主要在这个页面上

55:11.820 --> 55:12.820
我完成了功能是

55:12.820 --> 55:13.820
我们做到了

55:13.820 --> 55:15.820
现在的整个这个图片

55:15.820 --> 55:17.820
和你现在文字的记录

55:17.820 --> 55:19.820
同时文字记录

55:19.820 --> 55:21.820
所谓的是一个表单结构

55:21.820 --> 55:22.820
对吧

55:22.820 --> 55:23.820
然后呢

55:23.820 --> 55:25.820
对于选择图片来讲的话呢

55:25.820 --> 55:26.820
我们直接可以啊

55:26.820 --> 55:28.820
我们现在就拿一个同学来测试

55:28.820 --> 55:29.820
选择图片的话

55:29.820 --> 55:32.820
我们也可以完成你现在数据的预览

55:32.820 --> 55:34.820
这是属于微信所提供的功能

55:34.820 --> 55:35.820
然后同时呢

55:35.820 --> 55:37.820
我们也可以完成的是

55:37.820 --> 55:40.820
把这个数据存储到全局的对象中

55:40.820 --> 55:41.820
那么接下来的话呢

55:41.820 --> 55:42.820
我们想

55:42.820 --> 55:45.820
就是当你记录完成以后

55:45.820 --> 55:47.820
我们跳转一个页面

55:47.820 --> 55:49.820
然后在那个页面上面

55:49.820 --> 55:50.820
把你所存储记录

55:50.820 --> 55:52.820
全部的显示出来

55:52.820 --> 55:54.820
这个结构

55:54.820 --> 55:55.820
就是属于

55:55.820 --> 55:56.820
我们看到

55:56.820 --> 55:57.820
我们刚刚的一条记录

55:57.820 --> 55:59.820
我们就显示一条记录啊

55:59.820 --> 56:01.820
我们不做那个页面的循环了

56:01.820 --> 56:03.820
那么一条记录显示出来以后的话呢

56:03.820 --> 56:05.820
我们可以把这个图片

56:05.820 --> 56:06.820
你下面做一个按钮

56:06.820 --> 56:07.820
就是说

56:07.820 --> 56:10.820
你可以存储到你现在的本地

56:10.820 --> 56:11.820
也就是说

56:11.820 --> 56:13.820
我们继续要用微信的

56:13.820 --> 56:14.820
所谓的那个空间

56:14.820 --> 56:17.820
然后完成向本地的存储

56:17.820 --> 56:18.820
这个结构

56:18.820 --> 56:19.820
好

56:19.820 --> 56:20.820
我们来看一下

56:20.820 --> 56:22.820
首先我们把它的数据已经有了

56:22.820 --> 56:24.820
我们给它进行存储

56:24.820 --> 56:27.820
我们跳转一个界面

56:27.820 --> 56:29.820
显示一条记录出来

56:32.820 --> 56:33.820
我们跳转成

56:33.820 --> 56:37.320
我们单个的一个

56:37.320 --> 56:39.320
表示秀

56:39.320 --> 56:40.320
秀Data

56:40.320 --> 56:41.320
对吧

56:41.320 --> 56:43.320
我们跳转一个秀

56:43.320 --> 56:50.030
min.js

56:50.030 --> 56:51.030
秀里面

56:51.030 --> 56:57.920
再来一个index.ve

56:57.920 --> 56:59.920
min.js

56:59.920 --> 57:03.360
min.js

57:03.360 --> 57:05.360
我们从其他地方放过来

57:05.360 --> 57:14.760
by index.ve

57:14.760 --> 57:15.760
我们把它给拿出来

57:15.760 --> 57:28.380
我们做一个显示

57:28.380 --> 57:30.380
class

57:30.380 --> 57:31.380
container

57:31.380 --> 57:35.330
再来

57:35.330 --> 57:37.330
class

57:37.330 --> 57:41.220
container

57:41.220 --> 57:43.220
content

57:43.220 --> 57:46.220
然后用户信息

57:46.220 --> 57:47.220
我们显示一下

57:47.220 --> 57:49.220
随便做一个简单布局我们是

57:49.220 --> 57:51.220
我们做一个

57:51.220 --> 57:52.220
class

57:52.220 --> 57:53.220
user

57:53.220 --> 57:54.220
info

57:54.220 --> 57:55.220
然后

57:55.220 --> 57:57.220
把头像拿出来

57:57.220 --> 57:59.220
这里面的头像我们拿出来

57:59.220 --> 58:00.220
比如说我们这边

58:00.220 --> 58:02.220
先不用给这边

58:02.220 --> 58:03.220
我们后面待会儿给出

58:03.220 --> 58:04.220
imager

58:04.220 --> 58:06.220
这是我现在用户头像

58:06.220 --> 58:07.220
第二呢

58:07.220 --> 58:08.220
我们在里面

58:08.220 --> 58:09.220
拿出

58:09.220 --> 58:21.240
用户信息

58:21.240 --> 58:23.240
用户信息

58:23.240 --> 58:24.240
DIV

58:24.240 --> 58:25.240
我们这边可以拿出

58:25.240 --> 58:31.750
用户逆称

58:31.750 --> 58:32.750
再来

58:32.750 --> 58:33.750
再做个DIV

58:33.750 --> 58:35.750
我们可以拿出的是

58:35.750 --> 58:37.750
用户的

58:37.750 --> 58:39.750
publisher time

58:39.750 --> 58:41.750
2019年

58:41.750 --> 58:43.750
随便写1月1号

58:43.750 --> 58:44.750
ok

58:44.750 --> 58:46.750
那么这样的话

58:46.750 --> 58:47.750
我们首先

58:47.750 --> 58:49.750
前面的用户的信息这一块

58:49.750 --> 58:50.750
就有了

58:50.750 --> 58:52.750
我们说谁是谁你是

58:52.750 --> 58:53.750
你是谁是谁

58:53.750 --> 58:54.750
我们这边可以看到

58:54.750 --> 58:55.750
第二个

58:55.750 --> 58:56.750
我们说

58:56.750 --> 58:57.750
下面我们拿到

58:57.750 --> 59:01.060
我们的显示内容

59:01.060 --> 59:03.060
我们把显示内容给拿出来

59:04.060 --> 59:05.060
显示内容呢

59:05.060 --> 59:06.060
我们还分

59:07.060 --> 59:08.060
我们直接

59:08.060 --> 59:10.060
把你现在的图片文字

59:10.060 --> 59:11.060
这颗内容

59:11.060 --> 59:12.060
都可以显示出

59:12.060 --> 59:13.060
我们的结构上面

59:13.060 --> 59:14.060
我们看一下

59:14.060 --> 59:16.060
我们在container下面

59:16.060 --> 59:18.060
划过use info

59:18.060 --> 59:22.650
在这显示内容

59:22.650 --> 59:24.650
在这显示内容就可以了

59:24.650 --> 59:25.650
我们来看一下

59:25.650 --> 59:26.650
我们这边

59:26.650 --> 59:28.650
把内容区域显示出来

59:32.440 --> 59:33.440
DIV

59:34.440 --> 59:36.440
我们写上

59:36.440 --> 59:37.440
content

59:38.440 --> 59:39.440
第二呢

59:39.440 --> 59:40.440
我们写上文本

59:40.440 --> 59:42.440
我们写上span

59:43.440 --> 59:44.440
class

59:44.440 --> 59:46.440
我们写上contenter text

59:48.440 --> 59:49.440
然后这边呢

59:49.440 --> 59:50.440
我们写上

59:50.440 --> 59:51.440
我们要的内容

59:51.440 --> 59:52.440
比如说

59:52.440 --> 59:53.440
这是我们的

59:53.440 --> 59:58.840
显示内容

59:58.840 --> 01:00:00.840
然后紧接着

01:00:00.840 --> 01:00:01.840
在内容里面

01:00:01.840 --> 01:00:02.840
显示完以后

01:00:02.840 --> 01:00:03.840
我们本身

01:00:03.840 --> 01:00:04.840
就应该去做

01:00:04.840 --> 01:00:05.840
我们的图片显示

01:00:05.840 --> 01:00:11.220
scolar

01:00:11.220 --> 01:00:15.430
view

01:00:15.430 --> 01:00:16.430
scolarview

01:00:16.430 --> 01:00:17.430
class

01:00:18.430 --> 01:00:19.430
contenter

01:00:20.430 --> 01:00:21.430
scolar

01:00:21.430 --> 01:00:22.430
然后

01:00:23.430 --> 01:00:24.430
scolarx

01:00:27.000 --> 01:00:28.000
然后这里边呢

01:00:28.000 --> 01:00:29.000
我们写上的是

01:00:29.000 --> 01:00:30.000
我们可以进行

01:00:30.000 --> 01:00:31.000
循环的图片

01:00:31.000 --> 01:00:32.000
对吧

01:00:32.000 --> 01:00:33.000
图片的话呢

01:00:33.000 --> 01:00:34.000
我们使用的是

01:00:34.000 --> 01:00:35.000
block循环吧

01:00:35.000 --> 01:00:40.380
block循环

01:00:41.380 --> 01:00:43.380
v4的结构

01:00:43.380 --> 01:00:45.690
暂时我们先在

01:00:45.690 --> 01:00:46.690
先订位

01:00:46.690 --> 01:00:49.320
img

01:00:50.320 --> 01:00:51.320
然后图片的话呢

01:00:51.320 --> 01:00:53.320
我们先给出

01:00:53.320 --> 01:00:55.320
static

01:00:55.320 --> 01:00:57.320
img下面有一个

01:00:57.320 --> 01:00:58.320
u色点png

01:00:58.320 --> 01:00:59.320
定位图

01:01:00.320 --> 01:01:03.340
img

01:01:04.340 --> 01:01:05.340
scolar结束

01:01:05.340 --> 01:01:06.340
对吧

01:01:06.340 --> 01:01:07.340
ok block

01:01:08.340 --> 01:01:09.340
好

01:01:09.340 --> 01:01:10.340
那么我们把

01:01:10.340 --> 01:01:11.340
样式简单设定一下

01:01:11.340 --> 01:01:13.340
那么这个页面的样式呢

01:01:13.340 --> 01:01:14.340
和我们前面的很像

01:01:14.340 --> 01:01:15.340
所以呢

01:01:15.340 --> 01:01:16.340
这个样式

01:01:16.340 --> 01:01:17.340
我不再便给大家去打

01:01:17.340 --> 01:01:18.340
跟我们前面那个

01:01:18.340 --> 01:01:20.340
拍板结构差不多

01:01:20.340 --> 01:01:21.340
所以呢我这边

01:01:21.340 --> 01:01:22.340
直接把这个样式写

01:01:22.340 --> 01:01:23.340
放在这边

01:01:23.340 --> 01:01:24.340
那么之后的话呢

01:01:24.340 --> 01:01:25.340
大家之后啊

01:01:25.340 --> 01:01:27.340
去拿到我的原码的时候呢

01:01:27.340 --> 01:01:28.340
去看这个样式

01:01:28.340 --> 01:01:29.340
好吧

01:01:29.340 --> 01:01:30.340
那我直接把这个页面啊

01:01:30.340 --> 01:01:32.340
我们把它给显示一下

01:01:32.340 --> 01:01:33.340
它呢

01:01:33.340 --> 01:01:34.340
是属于我们

01:01:34.340 --> 01:01:35.340
进行跳转过来的

01:01:35.340 --> 01:01:37.340
那么我们现在的

01:01:37.340 --> 01:01:38.340
最简单的做法呢

01:01:38.340 --> 01:01:39.340
就是

01:01:39.340 --> 01:01:40.340
呃

01:01:40.340 --> 01:01:41.340
我们

01:01:41.340 --> 01:01:42.340
做一个

01:01:42.340 --> 01:01:43.340
前面页面完成以后

01:01:43.340 --> 01:01:44.340
往这个跳转

01:01:44.340 --> 01:01:45.340
当然

01:01:45.340 --> 01:01:46.340
现在的话

01:01:46.340 --> 01:01:47.340
我们先做它的布局

01:01:47.340 --> 01:01:49.340
所以我们在man.js里面

01:01:49.340 --> 01:01:50.340
在那个

01:01:50.340 --> 01:01:51.340
app

01:01:51.340 --> 01:01:52.340
我们在app里面

01:01:52.340 --> 01:01:54.340
完成先显示这个界面

01:01:54.340 --> 01:01:56.340
appin.json

01:01:56.340 --> 01:01:57.340
对吧

01:01:57.340 --> 01:01:58.340
我们先把这界面

01:01:58.340 --> 01:01:59.340
显示出来

01:01:59.340 --> 01:02:10.680
先把拍板定好嘛

01:02:10.680 --> 01:02:11.680
然后这边的话呢

01:02:11.680 --> 01:02:16.440
我们去做一个秀

01:02:16.440 --> 01:02:17.440
我们做一个秀

01:02:17.440 --> 01:02:25.620
我们刷新一下

01:02:25.620 --> 01:02:29.920
对吧

01:02:29.920 --> 01:02:30.920
出来了

01:02:30.920 --> 01:02:31.920
但是它页面

01:02:31.920 --> 01:02:32.920
没有继续完成

01:02:32.920 --> 01:02:33.920
我们的编译

01:02:33.920 --> 01:02:34.920
所以呢

01:02:34.920 --> 01:02:35.920
这个操作的话

01:02:35.920 --> 01:02:36.920
我们就需要

01:02:36.920 --> 01:02:37.920
我先把它给关一下

01:02:37.920 --> 01:02:39.920
然后停一下

01:02:39.920 --> 01:02:41.920
重新的编译一下

01:02:41.920 --> 01:02:50.310
完成以后

01:02:50.310 --> 01:02:51.310
检查一下

01:02:51.310 --> 01:02:52.310
dister

01:02:52.310 --> 01:02:53.310
微信

01:02:53.310 --> 01:02:54.310
里边的peters

01:02:54.310 --> 01:02:56.310
里边的秀

01:02:56.310 --> 01:02:58.310
页面已经存在这样的结构了

01:02:58.310 --> 01:02:59.310
代表你里面

01:02:59.310 --> 01:03:00.310
已经有这样的一个

01:03:00.310 --> 01:03:01.310
布局了

01:03:01.310 --> 01:03:02.310
所以我们现在

01:03:02.310 --> 01:03:03.310
才可以打开

01:03:04.310 --> 01:03:05.310
dister

01:03:05.310 --> 01:03:06.310
收掉

01:03:06.310 --> 01:03:08.310
再去打开我们的微信

01:03:08.310 --> 01:03:12.260
我们打开我们的这个

01:03:12.260 --> 01:03:32.810
好了

01:03:32.810 --> 01:03:33.810
我们看到了

01:03:33.810 --> 01:03:35.810
内容出来了

01:03:35.810 --> 01:03:36.810
对吧

01:03:36.810 --> 01:03:37.810
但是样式

01:03:37.810 --> 01:03:39.810
可能还没有对上

01:03:39.810 --> 01:03:40.810
那么这个的话

01:03:40.810 --> 01:03:44.380
我们来看一下吧

01:03:44.380 --> 01:03:46.380
我们在这个页面上面

01:03:46.380 --> 01:03:47.380
container

01:03:47.380 --> 01:03:48.380
对吧

01:03:48.380 --> 01:03:49.380
然后的话

01:03:49.380 --> 01:03:52.380
我们把样式container

01:03:52.380 --> 01:03:54.380
我们的样式

01:03:54.380 --> 01:03:55.380
没有完全对上

01:03:55.380 --> 01:03:57.380
我们检查一下

01:03:57.380 --> 01:03:58.380
上市

01:03:58.380 --> 01:04:01.380
叫做user header

01:04:01.380 --> 01:04:03.380
然后图片就出来了

01:04:03.380 --> 01:04:04.380
这个图片格式的话

01:04:04.380 --> 01:04:06.380
就在中间这一块

01:04:06.380 --> 01:04:07.380
我们是一条记录

01:04:07.380 --> 01:04:08.380
所以我们没让它顶在上面

01:04:08.380 --> 01:04:10.380
我们让居中在这边为止

01:04:10.380 --> 01:04:12.380
那么看得清的方式

01:04:12.380 --> 01:04:13.380
就是我们在这边

01:04:13.380 --> 01:04:14.380
加个背景

01:04:14.380 --> 01:04:16.380
给它加个背景色

01:04:16.380 --> 01:04:17.380
然后的话

01:04:17.380 --> 01:04:18.380
我们给它一个

01:04:18.380 --> 01:04:19.380
灰色

01:04:19.380 --> 01:04:24.040
这样就可以了

01:04:24.040 --> 01:04:25.040
对吧

01:04:25.040 --> 01:04:26.040
有一条记录

01:04:26.040 --> 01:04:27.040
这样就显示就行了

01:04:27.040 --> 01:04:29.040
我们不做大范围的操作

01:04:29.040 --> 01:04:31.040
我们只做一个小的

01:04:31.040 --> 01:04:32.040
就是说

01:04:32.040 --> 01:04:33.040
我们现在那边

01:04:33.040 --> 01:04:34.040
选择一条数据了

01:04:34.040 --> 01:04:35.040
到这边来

01:04:35.040 --> 01:04:36.040
你能够完整看到

01:04:36.040 --> 01:04:37.040
你要数据内容

01:04:37.040 --> 01:04:38.040
这情况

01:04:38.040 --> 01:04:39.040
然后我们点中

01:04:39.040 --> 01:04:40.040
这张图片的话

01:04:40.040 --> 01:04:42.040
我们可以把图片存储到本地

01:04:42.040 --> 01:04:43.040
就是这个两个操作

01:04:43.040 --> 01:04:45.040
首先我们看到的是

01:04:45.040 --> 01:04:46.040
这个上面的结构

01:04:46.040 --> 01:04:47.040
已经全部准备好了

01:04:47.040 --> 01:04:48.040
那么写下去

01:04:48.040 --> 01:04:51.040
我们把数据给拿上来

01:04:51.040 --> 01:04:52.040
我们把数据给拿上来

01:04:52.040 --> 01:04:54.040
那么它的数据的话

01:04:54.040 --> 01:04:56.040
我们要通过js的方式

01:04:56.040 --> 01:04:59.040
通过我们的global的方式

01:04:59.040 --> 01:05:00.040
给取过来

01:05:00.040 --> 01:05:01.040
因为我们的所有数据

01:05:01.040 --> 01:05:03.040
都会存在我们之前

01:05:03.040 --> 01:05:04.040
所谓的global

01:05:04.040 --> 01:05:06.040
那个全球对象里面了

01:05:06.040 --> 01:05:12.120
把框架做出来

01:05:12.120 --> 01:05:13.120
return

01:05:13.120 --> 01:05:16.070
然后

01:05:16.070 --> 01:05:18.570
message

01:05:18.570 --> 01:05:23.610
形成这样一个结构

01:05:23.610 --> 01:05:24.610
然后我们开始取

01:05:24.610 --> 01:05:26.610
当然前面可以有一个

01:05:26.610 --> 01:05:29.240
mounted

01:05:29.240 --> 01:05:36.180
把从global里面数据取出来

01:05:36.180 --> 01:05:37.180
我们把框架搭好以后

01:05:37.180 --> 01:05:38.180
这样的话

01:05:38.180 --> 01:05:39.180
我们就可以继续往下来写了

01:05:39.180 --> 01:05:40.180
注意

01:05:40.180 --> 01:05:42.180
上面这个框架体系的话

01:05:42.180 --> 01:05:43.180
我们可以

01:05:43.180 --> 01:05:44.180
你可以自行来

01:05:44.180 --> 01:05:45.180
编辑它的整个排版

01:05:45.180 --> 01:05:46.180
global里面

01:05:46.180 --> 01:05:48.180
我们从全球里面取出来

01:05:48.180 --> 01:05:49.180
然后的话填充

01:05:49.180 --> 01:05:50.180
好

01:05:50.180 --> 01:05:51.180
我们先休息一下

01:05:51.180 --> 01:05:52.180
下节课

01:05:52.180 --> 01:05:54.180
我们开始继续讲解这个课程

