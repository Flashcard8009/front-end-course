WEBVTT

00:00.240 --> 00:04.240
好 我们继续讲解我们的聊天机器人 吐吐

00:04.240 --> 00:10.240
那么在这个案例中呢 我们之前讲到了 我们已经把页面啊做出来了

00:10.240 --> 00:15.240
并且呢 我们本身自己也能够进行简单的看到数据

00:15.240 --> 00:20.240
通过我们的接口啊 通过我们的数据 那个flio

00:20.240 --> 00:23.240
进行数据的来回的发送了

00:23.240 --> 00:27.240
但是呢 我们一直没有显示出来 那么原因在哪呢

00:27.240 --> 00:30.240
那么这里就是一个关键点 需要跟大家去讲解了

00:30.240 --> 00:34.240
就是我们看一下代码 先看一下我们的逻辑

00:34.240 --> 00:39.240
我们首先前面是完成了我们现在的发起聊天

00:39.240 --> 00:43.240
发起聊天以后呢 点击一个那个发送按钮的时候

00:43.240 --> 00:49.240
我们开始往我们的robotalk里面传送内容

00:49.240 --> 00:53.240
那么robotalk其实里面就是我们的flio

00:54.240 --> 00:58.240
它会去往服务器发送我们所需要传送的数据

00:58.240 --> 01:00.240
那么它发送方式是post

01:00.240 --> 01:04.240
我们在deburry里面 我们把key和我们要发送的info

01:04.240 --> 01:06.240
内容全传给它

01:06.240 --> 01:09.240
然后呢 它在接收到数据以后

01:09.240 --> 01:12.240
它可以通过它的zender.rest的方式

01:12.240 --> 01:14.240
rest的方式传送回来

01:14.240 --> 01:18.240
rest.dater.taxter 它能接到数据

01:18.240 --> 01:22.240
然后我们把这个数据直接放在我们之前所定义好的

01:22.240 --> 01:25.240
这个叫做rabbitc里面

01:25.240 --> 01:27.240
然后呢 我们把它给显示出来

01:27.240 --> 01:30.240
我们之前是这样的一个逻辑

01:30.240 --> 01:33.240
但是始终发现的是

01:33.240 --> 01:35.240
这个数据是肯定被接到了

01:35.240 --> 01:38.240
服务器也响应我说了话

01:38.240 --> 01:40.240
但是这边始终是没有数据

01:40.240 --> 01:42.240
那么这个原因呢

01:42.240 --> 01:44.240
虽然从现在的代码的角度来

01:44.240 --> 01:46.240
刚才按照我这个分析来讲

01:46.240 --> 01:48.240
看上去好像是没有问题的

01:48.240 --> 01:50.240
但这里面恰恰出现了一个

01:50.240 --> 01:53.240
我们在微信里面也会碰到

01:53.240 --> 01:55.240
这样的一个问题结构

01:55.240 --> 01:59.320
就是它

01:59.320 --> 02:02.320
我们在执行我们的flyIO的时候

02:02.320 --> 02:04.320
和我们执行任何的

02:04.320 --> 02:07.320
所谓的异不数据交互的过程中

02:07.320 --> 02:10.320
一定存在着一个时间差

02:10.320 --> 02:14.320
也就是说你在执行我43行

02:14.320 --> 02:16.320
robotalk的时候

02:16.320 --> 02:18.320
它本身数据的返回

02:18.320 --> 02:21.320
和程序主程序的继续往下执行

02:21.320 --> 02:23.320
它是不会停顿的

02:23.320 --> 02:25.320
这两者是并行的

02:25.320 --> 02:28.320
这就意味着你现在如果说

02:28.320 --> 02:31.320
在这边完成了服务器交互以后

02:31.320 --> 02:33.320
服务器在响应做

02:33.320 --> 02:35.320
我们所谓的数据回复的时候

02:35.320 --> 02:37.320
这句话还在往里添加

02:37.320 --> 02:39.320
所以这个叫robotse里面

02:39.320 --> 02:41.320
其实还没有数据

02:41.320 --> 02:43.320
理解吧

02:43.320 --> 02:45.320
所以这样讲法上你就会知道

02:45.320 --> 02:48.320
其实不是你程序上哪里会有大问题

02:48.320 --> 02:52.320
而是属于你的一个异不提交动作

02:52.320 --> 02:56.320
和你现在主程的一个顺序执行的问题

02:56.320 --> 02:58.320
那么在这种情况下

02:58.320 --> 03:01.320
我们只要把你现在拿到

03:01.320 --> 03:03.320
这个数据的这条命令

03:03.320 --> 03:06.320
我们把它放到

03:06.320 --> 03:08.320
Zen里面去

03:08.320 --> 03:10.320
我们把它放到Zen里面去

03:10.320 --> 03:19.580
我们放下来

03:19.580 --> 03:21.580
这边我们就不接了

03:21.580 --> 03:30.060
然后这边我们做隐藏

03:30.060 --> 03:33.060
这边把this我们换成Zat

03:33.060 --> 03:39.030
然后这边的话我们把这个值

03:39.030 --> 03:42.030
这个Zat其实就是我们外部的

03:42.030 --> 03:43.030
这个结果

03:43.030 --> 03:45.030
我们可以把它拿出来放这

03:45.030 --> 03:46.030
这是没有关系的

03:46.030 --> 03:48.030
当然我这边也可以直接用它

03:48.030 --> 03:54.670
为什么这里不能用this

03:54.670 --> 03:56.670
因为涉及到这个function

03:56.670 --> 03:57.670
好了

03:57.670 --> 04:00.670
那么我们聊天机器人的这块写好以后

04:00.670 --> 04:02.670
我们再来看一下界面

04:02.670 --> 04:04.670
首先进入

04:04.670 --> 04:08.500
然后传旨过来

04:08.500 --> 04:11.500
然后这边进行再次跳转

04:11.500 --> 04:14.500
ABB是默认所显示的

04:14.500 --> 04:15.500
这边输入

04:15.500 --> 04:17.500
你好

04:17.500 --> 04:18.500
发送

04:18.500 --> 04:19.500
看到吗

04:19.500 --> 04:21.500
这边过来了

04:21.500 --> 04:24.500
那么这个的添加其实就是

04:24.500 --> 04:26.500
我们把这个破续语句

04:26.500 --> 04:29.500
放到了我们的ReboxTalk里面

04:29.500 --> 04:30.500
形成了

04:30.500 --> 04:32.500
它在一步完成数据

04:32.500 --> 04:33.500
返回的时候

04:33.500 --> 04:35.500
再往我们现有的

04:35.500 --> 04:37.500
这样的一个list里面

04:37.500 --> 04:38.500
进行添加的过程

04:38.500 --> 04:39.500
对吧

04:39.500 --> 04:40.500
所以这边的方式是

04:40.500 --> 04:41.500
一旦有添加了

04:41.500 --> 04:42.500
我们每次刷新的时候

04:42.500 --> 04:47.730
把它重新呈现

04:47.730 --> 04:55.460
你是谁

04:55.460 --> 04:56.460
随便它怎么回答

04:56.460 --> 04:57.460
好了

04:57.460 --> 04:58.460
那么这个的话

04:58.460 --> 04:59.460
我们看到

04:59.460 --> 05:00.460
就可以有一个简单的

05:00.460 --> 05:01.460
聊天功能就出来了

05:01.460 --> 05:03.460
并且我们做到的是

05:03.460 --> 05:05.460
这个是和我们之前

05:05.460 --> 05:07.460
做那个

05:07.460 --> 05:09.460
今日新闻有个最大的区别的

05:09.460 --> 05:10.460
虽然都用了file

05:10.460 --> 05:11.460
但是

05:11.460 --> 05:13.460
这边我们需要的是

05:13.460 --> 05:15.460
数据的交互

05:15.460 --> 05:17.460
我传送给他

05:17.460 --> 05:19.460
回来以后的数据操作

05:19.460 --> 05:21.460
在这个上面

05:21.460 --> 05:23.460
那么我们利用了现在的

05:23.460 --> 05:25.460
这概念如果在微信里面

05:25.460 --> 05:27.460
我们用的非常多

05:27.460 --> 05:28.460
这个一步操作

05:28.460 --> 05:29.460
好了

05:29.460 --> 05:31.460
那么这个聊天兔兔的实力

05:31.460 --> 05:33.460
我们看到基本很简单

05:33.460 --> 05:35.460
我们也就可以做到这儿

05:35.460 --> 05:36.460
那么大家的话

05:36.460 --> 05:37.460
如果需要的话

05:37.460 --> 05:39.460
你一定去拿到git上面去找

05:39.460 --> 05:40.460
同时

05:40.460 --> 05:42.460
也可以在我们的

05:42.460 --> 05:44.460
自己拿到以后

05:44.460 --> 05:46.460
可以在自己的平台上

05:46.460 --> 05:47.460
先不去拿

05:47.460 --> 05:48.460
然后自己先打一遍

05:48.460 --> 05:50.460
然后看一下自己能打多少

05:50.460 --> 05:51.460
这样的结构

05:51.460 --> 05:53.460
你都可以去进行尝试

05:53.460 --> 05:55.460
总之一点

05:55.460 --> 05:56.460
你里面的代码

05:56.460 --> 05:58.460
你每一行都能够给自己

05:58.460 --> 06:00.460
做一个简单的解释

06:00.460 --> 06:02.460
如果你觉得哪一行有问题

06:02.460 --> 06:04.460
那么你可以有这种尝试做法

06:04.460 --> 06:05.460
第一种

06:05.460 --> 06:06.460
这行代码

06:06.460 --> 06:08.460
如果你解释完了

06:08.460 --> 06:09.460
你如果觉得

06:09.460 --> 06:11.460
还可以进行另外的一些简单

06:11.460 --> 06:12.460
解法

06:12.460 --> 06:14.460
你可以修改尝试

06:14.460 --> 06:15.460
第二种

06:15.460 --> 06:16.460
这行代码

06:16.460 --> 06:17.460
你觉得

06:17.460 --> 06:19.460
如果我可以单独提炼出来

06:19.460 --> 06:21.460
形成一个封装的文件

06:21.460 --> 06:22.460
无论是组件

06:22.460 --> 06:23.460
还是属于方法

06:23.460 --> 06:24.460
那么都可以

06:24.460 --> 06:26.460
自己可以去尝试做

06:26.460 --> 06:27.460
最后

06:27.460 --> 06:28.460
做完看完

06:28.460 --> 06:29.460
或者代码

06:29.460 --> 06:30.460
所有的写完

06:30.460 --> 06:31.460
给自己一个总结

06:31.460 --> 06:32.460
或者说

06:32.460 --> 06:33.460
告诉自己

06:33.460 --> 06:34.460
什么

06:34.460 --> 06:35.460
或者你学会了什么

06:35.460 --> 06:36.460
好吧

06:36.460 --> 06:38.460
这是我们这边说到的

06:38.460 --> 06:39.460
那么这个实例

06:39.460 --> 06:40.460
我们就先讲到这里了

