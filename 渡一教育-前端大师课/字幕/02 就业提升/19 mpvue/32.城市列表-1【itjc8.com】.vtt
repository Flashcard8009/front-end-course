WEBVTT

00:00.050 --> 00:03.490
好 我们继续讲解我们的npview的课程

00:03.490 --> 00:06.050
那么这节课呢 主要给大家讲解一下

00:06.050 --> 00:11.050
我们的一个功能就是我们很多的页面都会出现的

00:11.050 --> 00:14.050
我们左边是我们可以选项

00:14.050 --> 00:16.650
啊 左边可以是这样的一个托转

00:16.650 --> 00:19.450
啊 一个我们这边呢 是城市

00:19.450 --> 00:21.650
右边呢 是一个排序啊

00:21.650 --> 00:23.650
我们看到这边会有一个

00:23.650 --> 00:27.050
我们的一个A到Z的一个排序对吧

00:27.050 --> 00:29.050
然后选择任何一个

00:29.050 --> 00:31.050
那么除了中间显示以外

00:31.050 --> 00:34.050
旁边会直接跳到当前的这样的一个

00:34.050 --> 00:38.050
啊 字母所针对的这个序列上面

00:38.050 --> 00:41.050
OK吧 那么这是我们经常看到的功能

00:41.050 --> 00:43.050
有些在电话本上面

00:43.050 --> 00:47.050
有些呢 是在你的备忘录机事本上面

00:47.050 --> 00:51.050
有些是像我现在一样啊 是作为城市选择

00:51.050 --> 00:54.050
这种功能呢 其实我们说很多地方都有的话呢

00:54.050 --> 00:56.050
那么我们是从常见功能

00:56.050 --> 00:58.050
那么所以我们在微信小城市上

00:58.050 --> 01:01.050
也应该实现这样的一个功能是可以

01:01.050 --> 01:04.050
啊 并且呢 这些可给大家来做一下

01:05.050 --> 01:09.810
好 我们创建一个新的项目

01:09.810 --> 01:13.810
我们起名为那个City Scholar啊

01:13.810 --> 01:15.810
城市的一个滚动表

01:15.810 --> 01:21.950
然后我们对它进行简单的启动一下

01:21.950 --> 01:23.950
看一下 是不是这个是正常的

01:23.950 --> 01:28.740
能够进行启动

01:28.740 --> 01:31.740
对吧 comply编译成功啊 启动了

01:31.740 --> 01:34.740
并且那个dister已经生成

01:34.740 --> 01:38.740
OK 那我们现在开始对它里面代码进行编写

01:38.740 --> 01:41.740
首先我们把它所需要的两个代码

01:41.740 --> 01:43.740
我们不动 就是系统给到的

01:43.740 --> 01:45.740
然后呢 我们自己生成一个

01:45.740 --> 01:48.740
我们叫City Index啊 城市的首页

01:48.740 --> 01:53.200
叫City Index

01:53.200 --> 01:57.200
然后呢 我们创建这个页面

01:57.200 --> 01:59.200
里面的两大文件

01:59.200 --> 02:10.740
index.ve

02:10.740 --> 02:14.740
面的文件呢 我们其实打开原有系统的log

02:14.740 --> 02:17.740
把它复制过来

02:17.740 --> 02:21.740
我们把原有的其他的log文件复制过来就可以

02:21.740 --> 02:25.740
对于我们的index.ve的话 建立模板

02:25.740 --> 02:34.380
data 把基本结构建好

02:34.380 --> 02:42.920
然后这边我们写上message

02:42.920 --> 02:47.700
这就是一个基本结构啊

02:47.700 --> 02:50.700
然后呢 我们一旦创建以后

02:50.700 --> 02:55.780
我们把当前的app.json中也加上

02:55.780 --> 03:00.780
大方在手 我们称之为City Index

03:00.780 --> 03:05.220
别忘了 后边都好

03:05.220 --> 03:08.220
好 那么现在呢 我们开始做页面

03:08.220 --> 03:10.220
做页面的布置呢 我们永远是三步

03:10.220 --> 03:12.220
第一步 把我们的界面打好

03:12.220 --> 03:15.220
第二步呢 我们去完成你的样式

03:15.220 --> 03:17.220
包括界面是属于同一块的

03:17.220 --> 03:19.220
然后呢 准备数据

03:19.220 --> 03:22.220
最后呢 我们来写代码 这样一个过程

03:22.220 --> 03:24.220
界面的话呢 我们来做一下

03:24.220 --> 03:26.220
首先呢 界面分成两大块啊

03:26.220 --> 03:29.220
第一块是投信息上面的

03:29.220 --> 03:33.790
所以呢 我们写上search

03:33.790 --> 03:35.790
header 投信息的

03:35.790 --> 03:37.790
我们用这样的一个名称来标注

03:37.790 --> 03:39.790
touchclasses

03:39.790 --> 03:42.790
我们把样式 等会儿标注出来

03:42.790 --> 03:44.790
然后呢 我们下面

03:44.790 --> 03:47.790
首先前面的这一块 其实是什么

03:47.790 --> 03:50.790
是我们把左右分开了

03:50.790 --> 03:53.790
我们形成左边 你所看到的一个

03:53.790 --> 03:57.790
上下滚动的和右边的a到z

03:57.790 --> 03:58.790
是这个结构

03:58.790 --> 04:01.790
那我现在先写的是右边的a到z

04:01.790 --> 04:03.790
这一块内容

04:03.790 --> 04:08.380
他们称之为

04:08.380 --> 04:13.400
它是右侧的a到z

04:13.400 --> 04:19.310
首先这里边肯定能够形成循环

04:19.310 --> 04:23.310
所以呢 我们这边可以写上v4

04:23.310 --> 04:25.310
v4的形式

04:25.310 --> 04:30.840
我们写上item

04:30.840 --> 04:33.840
search

04:33.840 --> 04:35.840
leto 写上这样一个字

04:35.840 --> 04:43.420
在这个里面 我们其实

04:43.420 --> 04:46.420
只要把你现在的item

04:46.420 --> 04:48.420
得打出来就可以了 对吧

04:48.420 --> 04:51.420
我们先做最简单的这个格式

04:51.420 --> 04:53.420
然后右边

04:53.420 --> 04:57.420
我们这边还有一个左侧

04:57.420 --> 05:00.420
我们加一个左侧

05:00.420 --> 05:03.420
点击后的

05:03.420 --> 05:06.420
谈出字母

05:06.420 --> 05:09.420
就是右侧

05:09.420 --> 05:11.420
右侧我们不是a到z吗

05:11.420 --> 05:13.420
你点了一个h

05:13.420 --> 05:16.420
那么中间会有一个h的简单的谈出

05:16.420 --> 05:18.420
咱们之前看到吗

05:18.420 --> 05:20.420
有这样一个谈出框

05:20.420 --> 05:23.420
这个谈出框其实它不是我们系统所带有的

05:23.420 --> 05:26.420
而是我们自己做的这个谈出框

05:26.420 --> 05:27.420
所以我这边呢

05:27.420 --> 05:30.420
用简单的block的结构来做一个

05:30.420 --> 05:34.110
我里面写一个div

05:34.110 --> 05:36.110
那个谈出框固定在中间的时候

05:36.110 --> 05:38.110
我是用样式来写的

05:38.110 --> 05:45.130
show selector leto

05:45.130 --> 05:48.130
然后呢 我这里边写的是

05:48.130 --> 05:50.130
我们把它写出来

05:50.130 --> 05:52.130
这个呢 写出来吧

05:52.130 --> 05:55.130
它就叫做show leto

05:55.130 --> 05:57.130
显示一个字母嘛

05:57.130 --> 05:59.130
这个格式 对吧

05:59.130 --> 06:01.130
好 那么先到这儿

06:01.130 --> 06:02.130
那么接下去的话呢

06:02.130 --> 06:06.130
后面其实是右左侧

06:06.130 --> 06:09.130
显示 程式

06:09.130 --> 06:10.130
左侧的程式

06:10.130 --> 06:13.130
依然是下面div所做的事

06:13.130 --> 06:15.130
我们先把前面的这个拿出来

06:15.130 --> 06:17.130
我看到这边有循环 对吧

06:17.130 --> 06:19.130
那么这个循环的话

06:19.130 --> 06:21.130
一定是我后续需要去操作的

06:21.130 --> 06:24.130
所以我把它先定义在我们这里面

06:24.130 --> 06:26.130
它一定是个速足

06:27.130 --> 06:29.130
好 先把这个格式定好

06:29.130 --> 06:30.130
然后

06:30.130 --> 06:33.130
我们完成简单的几个样式的书写

06:33.130 --> 06:35.130
我们把几个样式先写一下

06:35.130 --> 06:36.130
那么之后的话呢

06:36.130 --> 06:38.130
我们下面再写下去

06:38.130 --> 06:40.130
再往下继续扩充

06:40.130 --> 06:42.130
那么我们写一个

06:42.130 --> 06:45.130
search header跟touch class

06:45.130 --> 06:47.130
search header里面的div

06:47.130 --> 06:48.130
这几个

06:48.130 --> 06:51.590
search

06:51.590 --> 06:55.540
我们这样也可以啊

06:55.540 --> 06:57.540
如果说你现在不写样式的话

06:57.540 --> 06:58.540
由于我们现在

06:58.540 --> 07:00.540
我们把这个数据拿出来也可以

07:00.540 --> 07:01.540
把数据拿出来

07:01.540 --> 07:03.540
然后我们把这个样式一加上

07:03.540 --> 07:04.540
那么这就是完成了

07:04.540 --> 07:06.540
首先我们说一下啊

07:06.540 --> 07:08.540
那么左边的这个所有的程式

07:08.540 --> 07:11.540
和右边的a到z

07:11.540 --> 07:12.540
这些内容呢

07:12.540 --> 07:13.540
其实

07:13.540 --> 07:15.540
我们是用静态数据来含住

07:15.540 --> 07:17.540
静态数据的话呢

07:17.540 --> 07:18.540
我们把这两个部分

07:18.540 --> 07:20.540
全部写在utiles里面

07:20.540 --> 07:22.540
我们在这儿

07:22.540 --> 07:23.540
新建一个文件

07:23.540 --> 07:24.540
我们称之为

07:24.540 --> 07:26.540
city.js

07:26.540 --> 07:27.540
在utiles下

07:27.540 --> 07:29.540
我们做一个导出

07:29.540 --> 07:31.540
expert

07:31.540 --> 07:33.540
default

07:33.540 --> 07:35.540
我们做个导出

07:35.540 --> 07:37.540
先做个search header

07:37.540 --> 07:40.540
叫做搜索词啊

07:40.540 --> 07:42.540
那么我们这里边就写上

07:42.540 --> 07:44.540
a到z啊

07:44.540 --> 07:46.540
我们把a到z写上

07:46.540 --> 07:47.540
当然这个的话呢

07:47.540 --> 07:49.540
我们有一个txt文档

07:49.540 --> 07:52.540
我们把那个txt文档拿过来

07:52.540 --> 07:53.540
看到吗

07:53.540 --> 07:54.540
就这个东西

07:54.540 --> 07:56.540
那我就不自己写了

07:56.540 --> 07:59.540
这个就把它复制进去就可以了

07:59.540 --> 08:03.540
这是第一个search letter

08:03.540 --> 08:06.540
那么我要写第二个

08:06.540 --> 08:07.540
第二个呢

08:07.540 --> 08:08.540
就是我左边

08:08.540 --> 08:11.540
大家所看到的那个程式

08:11.540 --> 08:14.540
那个也在我这里边定一号

08:14.540 --> 08:15.540
city.obj

08:15.540 --> 08:17.540
称之为程式对象

08:17.540 --> 08:19.540
那么这个对象的话呢

08:19.540 --> 08:22.540
我也是在骑士牌里也有

08:22.540 --> 08:24.540
那么我把它给拿过来啊

08:24.540 --> 08:26.540
全程在这里边你会发现的是

08:26.540 --> 08:30.560
啊我把它去

08:30.560 --> 08:31.560
你看一下

08:31.560 --> 08:34.560
它是这样一个文件

08:34.560 --> 08:35.560
它是这样一个文件

08:35.560 --> 08:37.560
我先把它复制过了

08:37.560 --> 08:39.560
con2c

08:39.560 --> 08:40.560
con2v

08:40.560 --> 08:41.560
那你注意哦

08:41.560 --> 08:43.560
它这边会告诉你

08:43.560 --> 08:44.560
它很长

08:44.560 --> 08:46.560
长到了在

08:46.560 --> 08:47.560
vscoder

08:47.560 --> 08:49.560
显示不下载一行

08:49.560 --> 08:52.560
所以它最后会形成一个点点点

08:52.560 --> 08:53.560
会成一个点点点

08:53.560 --> 08:54.560
你不是说没有了

08:54.560 --> 08:55.560
它会有

08:55.560 --> 08:57.560
你把它conjus保存

08:57.560 --> 08:59.560
然后你去到其他页面

08:59.560 --> 09:00.560
然后你再回来

09:00.560 --> 09:02.560
你发现你就能看到了

09:02.560 --> 09:03.560
好我们说一下啊

09:03.560 --> 09:05.560
那么这个city.obj呢

09:05.560 --> 09:07.560
它其实是程式

09:07.560 --> 09:09.560
你比如这边有个id

09:09.560 --> 09:11.560
这个是preventscoder

09:11.560 --> 09:14.560
代表你现在的那个油边

09:14.560 --> 09:16.560
程式号

09:16.560 --> 09:17.560
15

09:17.560 --> 09:18.560
像你看这个啊

09:18.560 --> 09:19.560
这个程式

09:19.560 --> 09:21.560
210开头

09:21.560 --> 09:23.560
那么这个程式的话

09:23.560 --> 09:24.560
150开头

09:24.560 --> 09:25.560
对吧

09:25.560 --> 09:26.560
程式名在这

09:26.560 --> 09:27.560
你看到这个

09:27.560 --> 09:29.560
U开头的内容

09:29.560 --> 09:31.560
它其实是一个中文

09:31.560 --> 09:33.560
系统的认识的一个中文

09:33.560 --> 09:35.560
咱们称之为那个字符码

09:35.560 --> 09:37.560
那么系统看到它以后

09:37.560 --> 09:38.560
就知道是那个中文

09:38.560 --> 09:39.560
我们平时一直写中文

09:39.560 --> 09:40.560
输入进去以后

09:40.560 --> 09:41.560
系统也会转成

09:41.560 --> 09:43.560
像这个U的

09:43.560 --> 09:45.560
就是编码

09:45.560 --> 09:47.560
看一下这样是一个对象结构

09:47.560 --> 09:48.560
后期的话

09:48.560 --> 09:49.560
我们会把这个数据

09:49.560 --> 09:51.560
你会看到这里面有A

09:51.560 --> 09:52.560
这也有A

09:52.560 --> 09:53.560
对不对

09:53.560 --> 09:55.560
那这种双A的概念是指

09:55.560 --> 09:57.560
他们这前面的这个名字

09:57.560 --> 09:58.560
City都属于

09:58.560 --> 10:01.560
同一个A开头的

10:01.560 --> 10:02.560
你想一想

10:02.560 --> 10:04.560
在中国那么多城市

10:04.560 --> 10:06.560
一级 二级 三级 地级

10:06.560 --> 10:07.560
城市里面

10:07.560 --> 10:09.560
A开头的有哪些

10:09.560 --> 10:10.560
比如说

10:10.560 --> 10:11.560
注意省

10:11.560 --> 10:12.560
省的安徽省

10:12.560 --> 10:13.560
对吧

10:13.560 --> 10:14.560
然后安徽里面的话

10:14.560 --> 10:16.560
如果你看到安庆

10:16.560 --> 10:18.560
那么比如说安山

10:18.560 --> 10:20.560
这样的就是

10:20.560 --> 10:21.560
这个我就随便说两个

10:21.560 --> 10:22.560
好

10:22.560 --> 10:23.560
那么大家看到的是

10:23.560 --> 10:24.560
到时候我们会把它

10:24.560 --> 10:26.560
进行读取出来

10:26.560 --> 10:28.560
我们形成这样一个写法

10:28.560 --> 10:30.560
Expert Default

10:30.560 --> 10:32.560
那么在我页面中的话

10:32.560 --> 10:34.560
我们怎么做

10:34.560 --> 10:35.560
我们需要的是

10:35.560 --> 10:36.560
把这个进行导入

10:36.560 --> 10:37.560
对不对

10:37.560 --> 10:38.560
我们只有导入以后

10:38.560 --> 10:39.560
我们后面才能

10:39.560 --> 10:41.560
继续往下进行数据的获取

10:41.560 --> 10:43.560
Impart

10:43.560 --> 10:45.560
City

10:45.560 --> 10:46.560
Data

10:46.560 --> 10:47.560
From

10:47.560 --> 10:49.560
导入

10:49.560 --> 10:50.560
SRC路径

10:50.560 --> 10:51.560
At

10:51.560 --> 10:52.560
代表

10:52.560 --> 10:53.560
SRC路径

10:53.560 --> 10:56.260
YouTails

10:56.260 --> 10:58.260
下面的City

10:58.260 --> 11:00.260
导进了以后

11:00.260 --> 11:01.260
那么我们可以

11:01.260 --> 11:03.260
获取整个字母的列表节

11:03.260 --> 11:05.260
所以我们在这边

11:05.260 --> 11:07.260
我们打上

11:07.260 --> 11:08.260
Unloader

11:08.260 --> 11:10.260
你可以给一个这样的一个

11:10.260 --> 11:13.890
构造函数

11:13.890 --> 11:14.890
不叫我们

11:14.890 --> 11:21.910
生命周期函数

11:21.910 --> 11:22.910
然后我们有时候

11:22.910 --> 11:24.910
也称之为叫

11:24.910 --> 11:25.910
构子函数

11:25.910 --> 11:29.540
然后出实话对不对

11:29.540 --> 11:30.540
在这可以出实话

11:30.540 --> 11:32.540
那么我们首先看一下

11:32.540 --> 11:34.540
我们当前在页面中

11:34.540 --> 11:36.540
有个Search Leto

11:36.540 --> 11:37.540
所以我在这边

11:37.540 --> 11:39.540
Diss点

11:39.540 --> 11:41.540
Search Leto

11:41.540 --> 11:43.540
我可以等于

11:43.540 --> 11:44.540
City

11:44.540 --> 11:45.540
我们说过

11:45.540 --> 11:46.540
如果你是导入

11:46.540 --> 11:47.540
进来数据的话

11:47.540 --> 11:48.540
不要去加Diss点

11:48.540 --> 11:50.540
直接拿这个Impart

11:50.540 --> 11:51.540
名称

11:51.540 --> 11:52.540
去点里面

11:52.540 --> 11:53.540
所对应到的

11:53.540 --> 11:54.540
属性的名字

11:54.540 --> 11:58.560
这样操作

11:58.560 --> 11:59.560
然后呢

11:59.560 --> 12:01.560
我们来看一下

12:01.560 --> 12:03.560
它是否能导入进来

12:03.560 --> 12:06.560
直接拿这个Search Leto

12:06.560 --> 12:08.560
Countress保存

12:08.560 --> 12:09.560
我们观察一下

12:09.560 --> 12:10.560
我们的整个页面

12:10.560 --> 12:11.560
包括是APP.json

12:11.560 --> 12:12.560
也把它放在

12:12.560 --> 12:13.560
第一位以后

12:13.560 --> 12:14.560
那么我们去

12:14.560 --> 12:16.560
打开我们的微信小程序

12:16.560 --> 12:19.560
我们去打开微信小程序

12:19.560 --> 12:21.560
我们把它导入

12:21.560 --> 12:23.560
City Scholar

12:23.560 --> 12:25.560
然后选择到我们的

12:25.560 --> 12:28.560
有我们的APP.json文件夹

12:28.560 --> 12:30.560
使用测试账号

12:30.560 --> 12:31.560
导入

12:31.560 --> 12:47.060
它告诉你

12:47.060 --> 12:49.060
它没有找到一个

12:49.060 --> 12:52.060
City Index的面

12:52.060 --> 12:53.060
我们来看一下

12:53.060 --> 12:55.060
把几个点上都过一下

12:55.060 --> 12:56.060
第一的话呢

12:56.060 --> 12:58.060
看我们有没有City Index

12:58.060 --> 13:00.060
有这个文件

13:00.060 --> 13:01.060
然后它下面有没有面

13:01.060 --> 13:02.060
有

13:02.060 --> 13:04.060
面里面也打入我们代码了

13:04.060 --> 13:05.060
第一步

13:05.060 --> 13:06.060
第二步

13:06.060 --> 13:08.060
观察一下我们的APP.json

13:08.060 --> 13:10.060
是不是City Index

13:10.060 --> 13:12.060
有这个文件了

13:12.060 --> 13:14.060
City Index有了

13:14.060 --> 13:15.060
对吧

13:15.060 --> 13:16.060
第三步

13:16.060 --> 13:17.060
检查一下dister

13:17.060 --> 13:19.060
打开我们的微信

13:19.060 --> 13:21.060
里面的pager

13:21.060 --> 13:22.060
看一下

13:22.060 --> 13:24.060
这边是不是没有

13:24.060 --> 13:26.060
这边在没有情况下

13:26.060 --> 13:27.060
那当然页面显示不了

13:27.060 --> 13:28.060
所以呢

13:28.060 --> 13:30.060
我们可以把这边断一下

13:30.060 --> 13:32.060
重新让它编译一下

13:32.060 --> 13:36.780
你可以观察一下

13:36.780 --> 13:38.780
最后是不是在微信x中

13:38.780 --> 13:40.780
是有这个City Index出现

13:40.780 --> 13:42.780
我们刷一下

13:42.780 --> 13:44.780
在这个里面

13:44.780 --> 13:45.780
有了

13:45.780 --> 13:47.780
那代表着OK了

13:47.780 --> 13:49.780
接下来看

13:49.780 --> 13:50.780
数据是不是出来了

13:50.780 --> 13:52.780
首先我们看到的是

13:52.780 --> 13:54.780
在我本身的console里面

13:54.780 --> 13:56.780
我们的数据已经有了

13:56.780 --> 13:57.780
22个

13:57.780 --> 13:59.780
不要怀疑你的眼睛

13:59.780 --> 14:01.780
它不是全部全的

14:01.780 --> 14:02.780
可能会少

14:02.780 --> 14:04.780
比如说UV那种都没有

14:04.780 --> 14:05.780
对吧

14:05.780 --> 14:06.780
我们给了22个

14:06.780 --> 14:08.780
并且这边我们也能看到

14:08.780 --> 14:10.780
A到Z的数据的出现了

14:10.780 --> 14:11.780
OK

14:11.780 --> 14:13.780
那我们现在再来

14:13.780 --> 14:15.780
把数据可以关了

14:15.780 --> 14:17.780
钩子

14:17.780 --> 14:23.930
不是猴子

14:23.930 --> 14:25.930
我们正确的拿到数据

14:25.930 --> 14:27.930
并且也正确的在这边进行显示了

14:27.930 --> 14:28.930
好了

14:28.930 --> 14:30.930
那我们把这样式

14:30.930 --> 14:31.930
可以做一下了

14:31.930 --> 14:32.930
这样的话呢

14:32.930 --> 14:33.930
我们能看到这个数据

14:33.930 --> 14:35.930
我们希望这个数据之后

14:35.930 --> 14:37.930
是出现在左边

14:37.930 --> 14:38.930
右边的

14:38.930 --> 14:40.930
我们慢慢来把这个样式

14:40.930 --> 14:41.930
给补全一下

14:41.930 --> 14:43.930
这样我们把那个

14:43.930 --> 14:44.930
search写上

14:44.930 --> 14:51.730
search little

14:51.730 --> 14:54.100
然后

14:54.100 --> 14:56.100
position

14:56.100 --> 14:57.100
fixed

14:57.100 --> 15:02.040
在右边

15:02.040 --> 15:03.040
距离为0

15:03.040 --> 15:05.040
它就直接贴着右边了

15:05.040 --> 15:07.040
宽度我们只做

15:07.040 --> 15:09.040
40像素

15:09.040 --> 15:10.040
我们这个页面

15:10.040 --> 15:11.040
我们这个程序

15:11.040 --> 15:13.040
可以用像素来顶看一下

15:13.040 --> 15:14.040
然后高度

15:14.040 --> 15:15.040
我们给的是

15:15.040 --> 15:17.040
100%

15:18.040 --> 15:19.040
然后

15:19.040 --> 15:20.040
text align

15:20.040 --> 15:21.040
text align

15:21.040 --> 15:23.040
我们用center

15:23.040 --> 15:25.040
文字集中

15:25.040 --> 15:26.040
然后

15:26.040 --> 15:28.040
just contenter

15:28.040 --> 15:29.040
我们给的是

15:29.040 --> 15:30.040
center

15:30.040 --> 15:31.040
然后

15:31.040 --> 15:33.040
display

15:33.040 --> 15:35.040
然后我们给的是

15:35.040 --> 15:36.040
flex

15:36.040 --> 15:38.040
然后flex direction

15:38.040 --> 15:40.040
我们可以给人call

15:40.040 --> 15:42.040
表示垂直排列

15:42.040 --> 15:43.040
然后字体呢

15:43.040 --> 15:44.040
我们给一个

15:44.040 --> 15:48.570
666

15:48.570 --> 15:50.570
一般大家的666

15:50.570 --> 15:51.570
就是灰色

15:51.570 --> 15:52.570
当然

15:52.570 --> 15:54.570
我们最好给一个zindex

15:54.570 --> 15:56.570
代表它是一个

15:56.570 --> 15:57.570
如果你有前后顺序

15:57.570 --> 15:58.570
我们旁边的页面

15:58.570 --> 15:59.570
到时候也会有

15:59.570 --> 16:01.570
现在你来看一下页面

16:01.570 --> 16:06.420
这是最大的一个区域

16:06.420 --> 16:09.420
就是search little

16:09.420 --> 16:18.260
little

16:18.260 --> 16:20.260
search little

16:20.260 --> 16:21.260
来看一下效果

16:21.260 --> 16:25.280
是不是就到这边来了

16:25.280 --> 16:26.280
对吧

16:26.280 --> 16:27.280
那么我这里

16:27.280 --> 16:29.280
交两种写法

16:29.280 --> 16:30.280
都可以放在这边

16:30.280 --> 16:32.280
第一种我们靠样式

16:32.280 --> 16:33.280
把它给拘过来

16:33.280 --> 16:35.280
第二个我们继续往下

16:35.280 --> 16:37.280
它下面是有它的div的

16:37.280 --> 16:38.280
所以呢

16:38.280 --> 16:39.280
我们把它的div

16:39.280 --> 16:42.280
和下面的touch class说一下

16:42.280 --> 16:46.280
search little

16:46.280 --> 16:47.280
然后呢

16:47.280 --> 16:50.280
它下面的div

16:50.280 --> 16:52.280
我们指定一下

16:52.280 --> 16:53.280
每一个div的

16:53.280 --> 16:55.280
我们指定它的高度

16:55.280 --> 16:57.280
我们都可以做

16:57.280 --> 17:00.280
70rpx

17:00.280 --> 17:01.280
那么这个

17:01.280 --> 17:02.280
我们也可以用80

17:02.280 --> 17:03.280
70的话

17:03.280 --> 17:04.280
你要换px的话

17:04.280 --> 17:06.280
你就换成35px

17:06.280 --> 17:07.280
那么这两者的区别呢

17:07.280 --> 17:09.280
我这边再强调一下

17:09.280 --> 17:10.280
就是说

17:10.280 --> 17:12.280
rpx是一个可伸缩的

17:12.280 --> 17:14.280
它并不是一个固定值

17:14.280 --> 17:16.280
px呢是个像素

17:16.280 --> 17:17.280
虽然也是非固定

17:17.280 --> 17:19.280
但是它本身有一个定义

17:19.280 --> 17:21.280
它就是一像素为一单位

17:21.280 --> 17:23.280
那么rpx和px

17:23.280 --> 17:25.280
之间的转换呢

17:25.280 --> 17:27.280
它会根据你不同的

17:27.280 --> 17:28.280
屏幕大小

17:28.280 --> 17:31.280
形成不一样的数值

17:31.280 --> 17:33.280
但是基本接近于ebr

17:33.280 --> 17:35.280
就是一个px

17:35.280 --> 17:36.280
等于两个rpx

17:36.280 --> 17:37.280
那么什么时候

17:37.280 --> 17:39.280
正好是等于两个rpx呢

17:39.280 --> 17:41.280
这就是我们微信

17:41.280 --> 17:42.280
所要求的

17:42.280 --> 17:43.280
是在我们

17:43.280 --> 17:44.280
预览器

17:44.280 --> 17:46.280
iPhone 6的时候

17:46.280 --> 17:48.280
那么它就形成了一个

17:48.280 --> 17:51.280
epx等于两rpx的特点

17:51.280 --> 17:52.280
所以微信

17:52.280 --> 17:53.280
本身要求

17:53.280 --> 17:56.280
我们使用一个iPhone 6的结构来调

17:56.280 --> 17:59.280
但是你要用iPhone 5和iPhone 7的话呢

17:59.280 --> 18:01.280
那么它其实在

18:01.280 --> 18:04.280
1比1.几和1比2.几之间

18:04.280 --> 18:05.280
进行

18:05.280 --> 18:06.280
转换

18:06.280 --> 18:07.280
这个呢

18:07.280 --> 18:09.280
其实如果说你不是对页面

18:09.280 --> 18:12.280
非常严格要求的话

18:12.280 --> 18:14.280
那么你是基本上看不出来的

18:14.280 --> 18:16.280
它会有一个自我的转换

18:16.280 --> 18:18.280
所以为什么

18:18.280 --> 18:19.280
我们很多时候

18:19.280 --> 18:21.280
都去做成一个

18:21.280 --> 18:23.280
所谓的rpx

18:23.280 --> 18:25.280
你即使写px的话呢

18:25.280 --> 18:26.280
那么页面

18:26.280 --> 18:29.280
在最后生成成我们的这样的结构的时候

18:29.280 --> 18:32.280
它也会变成rpx

18:32.280 --> 18:33.280
但是它的变法呢

18:33.280 --> 18:35.280
会根据你现在的屏幕的

18:35.280 --> 18:37.280
这个尺寸

18:37.280 --> 18:39.280
这个选项来变化

18:39.280 --> 18:40.280
那为了让我们屏幕

18:40.280 --> 18:42.280
至少在调试过程中

18:42.280 --> 18:43.280
能看到页面

18:43.280 --> 18:45.280
是一个我们能够预料到的

18:45.280 --> 18:46.280
所以有时候

18:46.280 --> 18:48.280
我们经常把它直接变成

18:48.280 --> 18:50.280
80rpx

18:50.280 --> 18:52.280
然后你翻个背

18:52.280 --> 18:53.280
翻个背以后的话呢

18:53.280 --> 18:55.280
你就用iphone 6来调

18:55.280 --> 18:56.280
理解吧

18:56.280 --> 18:57.280
这结构

18:57.280 --> 18:58.280
好

18:58.280 --> 18:59.280
我们继续来讲

18:59.280 --> 19:05.540
touch class

19:05.540 --> 19:09.170
我们设定一下它的背景

19:10.170 --> 19:14.570
背景色

19:14.570 --> 19:16.570
rg

19:16.570 --> 19:18.570
rgba

19:18.570 --> 19:20.570
00

19:20.570 --> 19:21.570
最后一个呢

19:21.570 --> 19:23.570
0.5

19:23.570 --> 19:25.570
我们给50%的

19:25.570 --> 19:28.200
然后字体呢

19:28.200 --> 19:30.200
我们给成

19:30.200 --> 19:32.200
你可以给白色

19:32.200 --> 19:34.200
那我们再来看一下

19:34.200 --> 19:38.280
出来了吧

19:38.280 --> 19:40.280
那么这样说明一下

19:40.280 --> 19:42.280
这个排版方式

19:42.280 --> 19:43.280
是可以的

19:43.280 --> 19:44.280
但是呢

19:44.280 --> 19:45.280
它有一些缺陷

19:45.280 --> 19:46.280
比如说

19:46.280 --> 19:48.280
它可以把这个灰色的

19:48.280 --> 19:50.280
固定在我们的右边

19:50.280 --> 19:51.280
它可以把这排字母

19:51.280 --> 19:52.280
这样垂直排

19:52.280 --> 19:53.280
但是你看啊

19:53.280 --> 19:54.280
它不是属于

19:54.280 --> 19:56.280
正好排到满的

19:56.280 --> 19:58.280
它这边其实少一点的

19:58.280 --> 19:59.280
对吧

19:59.280 --> 20:00.280
我们的class

20:00.280 --> 20:02.280
虽然说你调页面

20:02.280 --> 20:03.280
没什么关系

20:03.280 --> 20:04.280
所以呢

20:04.280 --> 20:05.280
我们上面来看

20:05.280 --> 20:07.280
我们下面再有样式

20:07.280 --> 20:08.280
是这个

20:08.280 --> 20:09.280
每个字母的

20:09.280 --> 20:11.280
show selected little

20:12.280 --> 20:15.850
我们得调一下

20:15.850 --> 20:17.850
show selected little

20:17.850 --> 20:21.290
我们把

20:21.290 --> 20:23.290
background color

20:23.290 --> 20:25.290
给它加上

20:25.290 --> 20:27.290
touch rgba

20:27.290 --> 20:30.290
继续完成这个字

20:30.290 --> 20:31.290
color

20:31.290 --> 20:34.600
做一个白色

20:34.600 --> 20:39.190
display

20:39.190 --> 20:41.190
flex

20:41.190 --> 20:43.190
just a contender

20:43.190 --> 20:46.190
center

20:46.190 --> 20:48.190
a like contender

20:48.190 --> 20:51.190
center

20:51.190 --> 20:53.190
还有就是position

20:53.190 --> 20:57.890
我们依然可以固定一下它

20:57.890 --> 20:59.890
那么这个固定的说一下

20:59.890 --> 21:01.890
它可以去上

21:01.890 --> 21:03.890
一般性我们的position

21:04.890 --> 21:05.890
fixed

21:05.890 --> 21:06.890
我们都会给固定值

21:06.890 --> 21:07.890
那我们这边其实

21:07.890 --> 21:10.890
可以给百分数是一样的

21:10.890 --> 21:11.890
50

21:11.890 --> 21:13.890
你也可以这样给

21:13.890 --> 21:14.890
然后merge in的话

21:14.890 --> 21:15.890
我们给出

21:15.890 --> 21:16.890
所有merge in

21:16.890 --> 21:18.890
给-50

21:18.890 --> 21:20.890
做一个-100吧

21:20.890 --> 21:22.890
rpx

21:22.890 --> 21:23.890
然后宽度的话

21:23.890 --> 21:25.890
我们定成

21:25.890 --> 21:27.890
200rpx

21:27.890 --> 21:29.890
然后我们定成

21:29.890 --> 21:30.890
height

21:30.890 --> 21:31.890
我们也做成

21:32.890 --> 21:34.890
200rpx

21:34.890 --> 21:36.890
然后我们可以做个

21:36.890 --> 21:42.570
both radius

21:42.570 --> 21:44.570
做20rpx

21:44.570 --> 21:46.570
这都是那个字

21:46.570 --> 21:48.570
所能显示出来的效果

21:48.570 --> 21:51.570
font size

21:51.570 --> 21:53.570
这些在我们的难度上不高

21:53.570 --> 21:58.350
rpx

21:58.350 --> 22:01.920
然后zindex

22:01.920 --> 22:09.220
给1

22:09.220 --> 22:10.220
对吧

22:10.220 --> 22:12.220
我们这个的话

22:12.220 --> 22:14.220
它其实是为了呈现

22:15.220 --> 22:16.220
这个区域

22:16.220 --> 22:19.220
它就是为了呈现我这里边的内容

22:19.220 --> 22:20.220
那么shortlet

22:20.220 --> 22:23.220
我这边先给一个简单的实例

22:23.220 --> 22:27.180
咱们写上

22:27.180 --> 22:30.000
a

22:30.000 --> 22:31.000
我们来看一下

22:31.000 --> 22:34.210
是吧

22:34.210 --> 22:35.210
a出来

22:35.210 --> 22:37.210
高度太扁了

22:37.210 --> 22:39.210
高度太扁了

22:39.210 --> 22:41.210
所以呢我们把这个的高度

22:41.210 --> 22:44.710
再设定一下

22:44.710 --> 22:46.710
高度设置的是200对吧

22:46.710 --> 22:58.160
高度是200

22:58.160 --> 23:00.160
为了能看到它这个呈现形式

23:00.160 --> 23:01.160
对吧

23:01.160 --> 23:03.160
这个呈现形式还算是属于

23:03.160 --> 23:04.160
ok

23:04.160 --> 23:05.160
我们当然

23:05.160 --> 23:07.160
这个呈现的时候

23:07.160 --> 23:09.160
我们不是说什么时候都能让它呈现

23:09.160 --> 23:11.160
我们需要它有一定的时间

23:11.160 --> 23:13.160
或者说一定的契机

23:13.160 --> 23:14.160
才能出来

23:14.160 --> 23:16.160
所以我们要去给它一个if

23:16.160 --> 23:18.160
它要满足这个契机

23:18.160 --> 23:19.160
比如说

23:19.160 --> 23:21.160
shortlet

23:23.540 --> 23:25.540
shortlet

23:25.540 --> 23:27.540
这样去做

23:27.540 --> 23:29.540
ifshortlet做好以后的话

23:29.540 --> 23:31.540
我们下边

23:31.540 --> 23:33.540
在我们的初始状态中

23:33.540 --> 23:35.540
先给它一个预设值

23:35.540 --> 23:37.540
为first

23:37.540 --> 23:40.540
它一定要是什么时候才能够呢

23:40.540 --> 23:42.540
它其实要出现的时间

23:42.540 --> 23:45.540
是当我点击某一个按钮的时候

23:45.540 --> 23:46.540
对吧

23:46.540 --> 23:48.540
当我点击上面某一个按钮的时候

23:48.540 --> 23:49.540
就可以

23:49.540 --> 23:50.540
ok

23:50.540 --> 23:52.540
那么现在大家所看到的是

23:52.540 --> 23:54.540
我把整个这个字母

23:54.540 --> 23:55.540
给它完成了

23:55.540 --> 23:58.540
我们现在的右边的竖状排列

23:59.540 --> 24:01.540
我完成了背景的一个

24:01.540 --> 24:03.540
这样的格式化

24:03.540 --> 24:04.540
但是呢

24:04.540 --> 24:07.540
我们没有办法在现有的情况下

24:07.540 --> 24:09.540
后面我们会做

24:09.540 --> 24:10.540
现有情况下

24:10.540 --> 24:11.540
我们把这个

24:11.540 --> 24:13.540
给它正好对应其

24:13.540 --> 24:14.540
那么待会儿

24:14.540 --> 24:15.540
我会教大家

24:15.540 --> 24:17.540
怎么完成把这个内容

24:17.540 --> 24:19.540
对应到整个页面上

24:19.540 --> 24:21.540
现在我固定在右边

24:21.540 --> 24:23.540
并且固定在页面上

24:23.540 --> 24:24.540
我们是那个

24:24.540 --> 24:26.540
基于右边

24:26.540 --> 24:29.540
然后彻底的背景色的结构

24:30.540 --> 24:31.540
好了

24:31.540 --> 24:32.540
现在呢

24:32.540 --> 24:33.540
我们已经做到了

24:33.540 --> 24:35.540
我们现在把数据

24:35.540 --> 24:36.540
已经说是

24:36.540 --> 24:37.540
插入进来

24:37.540 --> 24:38.540
并且呢

24:38.540 --> 24:41.540
我们现在已经把一个可以实现

24:41.540 --> 24:42.540
点A点B

24:42.540 --> 24:43.540
这样一个内容

24:43.540 --> 24:44.540
进行切换了

24:44.540 --> 24:46.540
接下来我们来做

24:46.540 --> 24:49.540
怎么把你现在的整个这个排版

24:49.540 --> 24:52.540
我们再给它做的更精细化一点

24:52.540 --> 24:53.540
好

24:53.540 --> 24:54.540
我们来看一下

24:54.540 --> 24:55.540
首先

24:55.540 --> 24:58.540
我们回到我们的代码中

24:58.540 --> 24:59.540
我们在onload里面

24:59.540 --> 25:01.540
要做非常做的东西

25:01.540 --> 25:02.540
首先第一步

25:02.540 --> 25:04.540
我们称之为

25:04.540 --> 25:08.540
获取字母列表

25:08.540 --> 25:09.540
我们已经得到了

25:09.540 --> 25:10.540
对吧

25:10.540 --> 25:11.540
字母列表

25:11.540 --> 25:12.540
第二步

25:12.540 --> 25:13.540
我们要做的是

25:13.540 --> 25:15.540
我们每一步的话

25:15.540 --> 25:16.540
要把这个删掉了

25:16.540 --> 25:17.540
不然

25:17.540 --> 25:22.130
这里边会出现很多

25:23.130 --> 25:25.130
分组列表

25:26.130 --> 25:28.130
分组列表

25:28.130 --> 25:29.130
也就是说

25:29.130 --> 25:31.130
我需要把当前的所有的

25:31.130 --> 25:33.130
刚才你看到的City

25:33.130 --> 25:34.130
OBJ

25:34.130 --> 25:35.130
里面的数据

25:35.130 --> 25:36.130
和我的A B Z

25:36.130 --> 25:38.130
进行分组

25:38.130 --> 25:39.130
所以此时呢

25:39.130 --> 25:41.130
我们可以先定一个变量

25:41.130 --> 25:45.530
City Laster

25:45.530 --> 25:46.530
然后呢

25:46.530 --> 25:48.530
我们去放一个方法

25:48.530 --> 25:49.530
第四点

25:49.530 --> 25:50.530
我们先把名称写好

25:50.530 --> 25:52.530
City Laster

25:52.530 --> 25:54.530
我们去写这样一个方法

25:58.530 --> 25:59.530
City Laster

25:59.530 --> 26:00.530
我们去写啊

26:00.530 --> 26:02.530
那么这个方法呢

26:02.530 --> 26:03.530
主要是我们写在

26:03.530 --> 26:04.530
Message里面

26:04.530 --> 26:07.030
开始了

26:07.030 --> 26:15.380
City Laster

26:15.380 --> 26:16.380
这是

26:16.380 --> 26:17.380
我们写上

26:17.380 --> 26:18.380
它主要是

26:18.380 --> 26:19.380
获取

26:19.380 --> 26:20.380
分组列表

26:20.380 --> 26:24.100
首先

26:24.100 --> 26:26.100
你来看我先操作啊

26:27.100 --> 26:28.100
先定一个

26:28.100 --> 26:30.100
0时的对象

26:30.100 --> 26:33.300
定一个0时对象

26:35.300 --> 26:36.300
紧接着

26:36.300 --> 26:41.090
我们开始做一个循环

26:41.090 --> 26:43.090
我们做一个循环简单的

26:43.090 --> 26:52.740
i

26:52.740 --> 26:54.740
i小于

26:54.740 --> 26:55.740
this点

26:55.740 --> 26:57.740
search little.length

26:59.740 --> 27:00.740
search little

27:00.740 --> 27:01.740
在这

27:01.740 --> 27:02.740
初始化的时候

27:02.740 --> 27:03.740
把我的数据

27:03.740 --> 27:04.740
全拿出来了

27:04.740 --> 27:06.740
里面所存在的

27:06.740 --> 27:07.740
是什么

27:07.740 --> 27:09.740
A到Z的数据

27:09.740 --> 27:11.740
那我们把A到Z的数据

27:11.740 --> 27:18.060
进行循环

27:18.060 --> 27:19.060
对吧

27:19.060 --> 27:21.060
那么循环的时候呢

27:21.060 --> 27:22.060
我们首先注意啊

27:22.060 --> 27:24.060
我们来做一个

27:24.060 --> 27:29.160
首先再次定义

27:29.160 --> 27:30.160
Initial

27:30.160 --> 27:33.160
从当前的循环里面

27:33.160 --> 27:34.160
先取出

27:34.160 --> 27:36.160
search little

27:36.160 --> 27:37.160
i

27:37.160 --> 27:38.160
好

27:38.160 --> 27:39.160
比如说

27:39.160 --> 27:40.160
这个就是

27:40.160 --> 27:41.160
初始值

27:41.160 --> 27:42.160
对吧

27:42.160 --> 27:44.600
我们写上

27:44.600 --> 27:45.600
初始

27:45.600 --> 27:46.600
就是我们称之为单字母

27:46.600 --> 27:47.600
我们称之为

27:47.600 --> 27:48.600
这样讲好一点

27:50.600 --> 27:51.600
单字母

27:51.600 --> 27:52.600
放出来

27:53.600 --> 27:56.680
第二

27:56.680 --> 27:57.680
定义一个

27:57.680 --> 28:02.140
程式信息

28:02.140 --> 28:07.440
定义一个程式信息

28:08.440 --> 28:09.440
所以我们叫做

28:09.440 --> 28:10.440
汇总

28:11.440 --> 28:12.440
程式

28:12.440 --> 28:17.990
分走信息

28:17.990 --> 28:18.990
再来

28:18.990 --> 28:23.100
let

28:23.100 --> 28:31.230
定义一个

28:31.230 --> 28:34.930
零十

28:34.930 --> 28:36.930
我们存放什么呢

28:36.930 --> 28:37.930
存放的是你

28:37.930 --> 28:43.860
当前这个元素

28:43.860 --> 28:44.860
好

28:44.860 --> 28:47.300
首先第一步来

28:47.300 --> 28:49.300
tmpar

28:50.300 --> 28:52.300
我们里面有一个

28:52.300 --> 28:53.300
initialize

28:53.300 --> 28:55.300
等于initialize

28:55.300 --> 28:58.940
这个initialize

28:58.940 --> 28:59.940
就是它

28:59.940 --> 29:00.940
它是什么

29:00.940 --> 29:01.940
当前字母

29:02.940 --> 29:03.940
新建

29:03.940 --> 29:04.940
这是应该写上

29:09.170 --> 29:10.170
那么首先

29:10.170 --> 29:15.340
这是当前字母

29:15.340 --> 29:16.340
添加

29:16.340 --> 29:23.580
当前字母

29:23.580 --> 29:24.580
紧接着

29:24.580 --> 29:25.580
再循环

29:33.720 --> 29:35.720
this.city

29:35.720 --> 29:37.720
obj.lens

29:38.720 --> 29:41.480
然后呢

29:42.480 --> 29:43.480
j加加

29:47.390 --> 29:48.390
如果

29:48.390 --> 29:51.020
我这叫

29:51.020 --> 29:52.020
循环

29:52.020 --> 29:53.020
这写一下

29:54.020 --> 29:56.340
this.obj

29:56.340 --> 29:57.340
是什么东西

29:57.340 --> 29:58.340
我们在这边

29:58.340 --> 29:59.340
再定义一个

29:59.340 --> 30:00.340
obj出来

30:01.340 --> 30:02.340
定一个obj出来

30:03.340 --> 30:04.340
tobj

30:04.340 --> 30:05.340
cityobj的话

30:05.340 --> 30:06.340
其实就是

30:06.340 --> 30:08.340
我的整体的列表

30:09.340 --> 30:10.340
默认的话

30:10.340 --> 30:11.340
它是一个空

30:11.340 --> 30:13.900
但是我在我

30:13.900 --> 30:14.900
上面的时候

30:14.900 --> 30:15.900
我在这边

30:15.900 --> 30:16.900
再做一次

30:19.470 --> 30:20.470
叫做

30:21.470 --> 30:22.470
获取

30:23.470 --> 30:24.470
所有

30:24.470 --> 30:27.170
选项

30:28.170 --> 30:30.170
获取我所有的

30:30.170 --> 30:32.170
那个城市选项

30:32.170 --> 30:35.860
获取我所有城市选项

30:35.860 --> 30:37.860
所以它应该做的是

30:38.860 --> 30:42.860
this.cityobj

30:42.860 --> 30:43.860
等于

30:43.860 --> 30:45.860
this.cityobj

30:45.860 --> 30:46.860
等于我从

30:47.860 --> 30:48.860
citydata里面

30:48.860 --> 30:49.860
这里面

30:49.860 --> 30:51.860
我们刚才前面看到过

30:51.860 --> 30:54.860
在Utils下面的city中有两个内容

30:54.860 --> 30:56.860
一个是我们searchletal

30:56.860 --> 30:57.860
一个是cityobj

30:57.860 --> 30:59.860
所以从这里面

30:59.860 --> 31:01.860
调出cityobj来

31:01.860 --> 31:03.860
那么作为我现在的

31:03.860 --> 31:05.860
这个cityobj的一个

31:05.860 --> 31:07.860
数据天冲

31:08.860 --> 31:09.860
OK

31:10.860 --> 31:12.860
我们进去接着玩笑

31:12.860 --> 31:13.860
那么你所看到了

31:13.860 --> 31:16.860
我现在循环它的话就是

31:16.860 --> 31:17.860
对

31:17.860 --> 31:25.220
所有城市

31:26.220 --> 31:27.220
数组循环

31:27.220 --> 31:30.530
看一下来啊

31:31.530 --> 31:36.030
那么如果你现在的

31:36.030 --> 31:37.030
initialize

31:37.030 --> 31:38.030
主要

31:38.030 --> 31:40.030
这个initialize你一定得分清

31:40.030 --> 31:42.030
谁是谁

31:42.030 --> 31:44.030
我当前你正好

31:44.030 --> 31:47.030
这个就是我们现在的字母

31:47.030 --> 31:50.030
如果当前字母正好等于

31:50.030 --> 31:53.030
就是你现在点击的这个字母

31:53.030 --> 31:55.030
查找的这个列表字母

31:55.030 --> 31:57.030
A拿出来的第一层

31:57.030 --> 31:59.030
这时候你去循环到第二层

31:59.030 --> 32:01.030
正好等于你现在的哪个呢

32:01.030 --> 32:03.030
就cityobj里面

32:03.030 --> 32:04.030
我们看一下

32:04.030 --> 32:05.030
第四点

32:05.030 --> 32:08.030
cityobj里面的

32:08.030 --> 32:10.030
哪一项

32:10.030 --> 32:12.030
它下面的哪个呢

32:12.030 --> 32:14.030
initialize

32:14.030 --> 32:17.030
如果正好和等于它里面initialize

32:17.030 --> 32:19.030
比如说你选A

32:19.030 --> 32:21.030
那么里面有一项

32:21.030 --> 32:23.030
本身initialize也是A

32:23.030 --> 32:25.030
代表这一项就是属于

32:25.030 --> 32:27.030
A这个组别的

32:27.030 --> 32:29.030
那么这种时候呢

32:29.030 --> 32:31.030
你就可以做一个添加

32:31.030 --> 32:33.030
你可以做一个添加

32:33.030 --> 32:36.540
我们这边的信息

32:36.540 --> 32:39.850
就是cityinfo

32:39.850 --> 32:41.850
我们往里添加

32:41.850 --> 32:43.850
点数组吗

32:43.850 --> 32:45.850
数组的添加就是perse

32:45.850 --> 32:47.850
把当前的这个

32:47.850 --> 32:49.850
cityobj

32:49.850 --> 32:51.850
给它加进去

32:52.850 --> 32:53.850
好

32:53.850 --> 32:54.850
你来看一下

32:54.850 --> 32:55.850
我们再次打开

32:55.850 --> 32:57.850
我们的utl city

32:57.850 --> 32:59.850
比如你看到这条级路

32:59.850 --> 33:01.850
我们到这

33:01.850 --> 33:03.850
就这么看一条级路

33:03.850 --> 33:04.850
它有个initialize

33:04.850 --> 33:06.850
这个initialize是个A

33:06.850 --> 33:07.850
那就代表的是

33:07.850 --> 33:10.850
如果是A有关的一个信息

33:10.850 --> 33:12.850
那么这个地址

33:12.850 --> 33:13.850
和这个信息

33:13.850 --> 33:15.850
那就是它现在所谓的

33:15.850 --> 33:16.850
那个就是A里面

33:16.850 --> 33:18.850
应该呈现出来的

33:18.850 --> 33:20.850
所以把这条信息

33:20.850 --> 33:22.850
放置到了这个叫做

33:22.850 --> 33:24.850
cityinfo里面去

33:24.850 --> 33:26.850
A cityinfo

33:26.850 --> 33:28.850
放到cityinfo里面去

33:28.850 --> 33:30.850
那么每次这样

33:30.850 --> 33:32.850
进行循环以后的话

33:32.850 --> 33:34.850
那我们就可以把

33:34.850 --> 33:36.850
当前的属于

33:36.850 --> 33:38.850
当前这个cityinfo的

33:38.850 --> 33:39.850
我们就全部放进去了

33:39.850 --> 33:40.850
比如说

33:40.850 --> 33:42.850
现在正在循环的是A

33:42.850 --> 33:44.850
初始化是个A值

33:44.850 --> 33:46.850
然后从头开始

33:46.850 --> 33:48.850
所有A都将执行到这一步

33:48.850 --> 33:51.850
它会判断当前这个A操作

33:51.850 --> 33:53.850
是不是和你现在

33:53.850 --> 33:54.850
宿主里面整个A

33:54.850 --> 33:55.850
是一样一样的话

33:55.850 --> 33:56.850
就把它进去

33:56.850 --> 33:57.850
对吧

33:57.850 --> 33:59.850
当第一遍完成以后的话

33:59.850 --> 34:01.850
那么你所看到的

34:01.850 --> 34:02.850
A的所有的信息

34:02.850 --> 34:04.850
全在这个宿主中了

34:04.850 --> 34:05.850
对吧

34:05.850 --> 34:07.850
然后后面再来

34:07.850 --> 34:11.740
这是比较

34:12.740 --> 34:17.690
当前选择的

34:17.690 --> 34:21.690
和整个宿主中的

34:21.690 --> 34:23.690
宿主中的

34:24.690 --> 34:32.670
每一项比对

34:32.670 --> 34:35.430
找到后

34:35.430 --> 34:37.430
插入

34:37.430 --> 34:39.430
零

34:39.430 --> 34:42.430
零时宿主

34:42.430 --> 34:44.430
cityinfo

34:44.430 --> 34:45.430
对吧

34:45.430 --> 34:47.430
我们把这个写得够全了

34:47.430 --> 34:49.430
然后紧接着下来

34:49.430 --> 34:50.430
我们在这边

34:50.430 --> 34:51.430
我们要做什么呢

34:51.430 --> 34:52.430
就是

34:52.430 --> 34:59.940
temporary.cityinfo

34:59.940 --> 35:00.940
等于

35:00.940 --> 35:02.940
cityinfo

35:02.940 --> 35:04.940
做这个动作

35:04.940 --> 35:06.940
然后再下来

35:06.940 --> 35:14.660
temporary.temporary

35:14.660 --> 35:17.800
好

35:17.800 --> 35:18.800
你来看一下

35:18.800 --> 35:20.800
那么它里面这样做的

35:20.800 --> 35:21.800
情况很简单吧

35:21.800 --> 35:22.800
首先

35:22.800 --> 35:24.800
你把你现在

35:24.800 --> 35:25.800
如果真的是

35:25.800 --> 35:26.800
这条数据的话

35:26.800 --> 35:28.800
那你就在这个循环里面

35:28.800 --> 35:29.800
注意哦

35:29.800 --> 35:30.800
这个是什么

35:30.800 --> 35:32.800
我们把这个还得

35:32.800 --> 35:33.800
拿出去一层

35:34.800 --> 35:35.800
注意哦

35:35.800 --> 35:36.800
这个是什么

35:36.800 --> 35:37.800
这个是指的是

35:37.800 --> 35:40.800
你在内层循环中的这个数值

35:40.800 --> 35:41.800
这个呢

35:41.800 --> 35:43.800
是我们已经找到的

35:43.800 --> 35:44.800
你看到吗

35:44.800 --> 35:46.800
它里面的这个city

35:46.800 --> 35:48.800
parander

35:48.800 --> 35:50.800
它里面如果city有这个的话

35:50.800 --> 35:51.800
我们把这个

35:51.800 --> 35:52.800
现在所做的

35:52.800 --> 35:53.800
push的这个值

35:53.800 --> 35:55.800
给它放进去

35:55.800 --> 35:56.800
然后呢

35:56.800 --> 35:58.800
我们把整个tempor

35:58.800 --> 36:00.800
加载到temporary.obj上面去

36:00.800 --> 36:02.800
那么这样的话呢

36:02.800 --> 36:04.800
我们在整个这个循环过程中

36:04.800 --> 36:06.800
你就可以拿到d

36:06.800 --> 36:07.800
循环字母

36:07.800 --> 36:08.800
d外层是a

36:08.800 --> 36:09.800
a进来以后

36:09.800 --> 36:11.800
在整个city.obj里面

36:11.800 --> 36:12.800
循环

36:12.800 --> 36:13.800
把所有a的内容

36:13.800 --> 36:15.800
全加到cityinfo里面去

36:15.800 --> 36:16.800
所以呢

36:16.800 --> 36:18.800
此时在temporary.ar里面

36:18.800 --> 36:20.800
建立一个cityinfo

36:20.800 --> 36:21.800
是a的话里面

36:21.800 --> 36:22.800
全是a现在是

36:22.800 --> 36:23.800
对吧

36:23.800 --> 36:24.800
这是

36:24.800 --> 36:26.800
然后把现在的这个

36:26.800 --> 36:27.800
所有a

36:27.800 --> 36:28.800
带有的这个对象

36:28.800 --> 36:31.800
放到temporary.obj里面去

36:31.800 --> 36:32.800
ok吧

36:32.800 --> 36:34.800
然后temporary.obj里面

36:34.800 --> 36:35.800
所存主的就是

36:35.800 --> 36:36.800
所有a的结构

36:36.800 --> 36:37.800
此时

36:37.800 --> 36:39.800
我们可以做一个动作

36:39.800 --> 36:41.800
把你现在temporary.obj

36:41.800 --> 36:44.800
返回出去

36:44.800 --> 36:46.800
把你现在temporary.obj

36:46.800 --> 36:48.800
返回出去

36:48.800 --> 36:49.800
理解吗

36:49.800 --> 36:51.800
那么一旦它返回以后的话

36:51.800 --> 36:52.800
你注意啊

36:52.800 --> 36:53.800
它的返回

36:53.800 --> 36:55.800
一定要是在你最外层的

36:55.800 --> 36:57.800
这个fo循环结束

36:57.800 --> 36:58.800
所以呢

36:58.800 --> 37:00.800
你的a操作完

37:00.800 --> 37:01.800
这一步以后

37:01.800 --> 37:02.800
添加进去了

37:02.800 --> 37:03.800
然后把它放到

37:03.800 --> 37:04.800
我们这放入宿主中

37:04.800 --> 37:06.800
这时候你必有来了

37:06.800 --> 37:08.800
等你全部操作完

37:08.800 --> 37:10.800
应该它这个OpenJ

37:10.800 --> 37:13.800
temporary.obj

37:13.800 --> 37:14.800
我们到这来

37:14.800 --> 37:15.800
我们看到

37:15.800 --> 37:18.800
我们可以把那个temporary.obj

37:18.800 --> 37:19.800
这个数值啊

37:19.800 --> 37:20.800
直接进行接收

37:20.800 --> 37:21.800
注意一下

37:21.800 --> 37:24.800
我们可以拿这个city来做接收

37:24.800 --> 37:28.110
接收到citylister以后

37:28.110 --> 37:30.110
这个citylister

37:30.110 --> 37:32.110
我们就可以把它做一个显示

37:32.110 --> 37:34.110
这是已经封完组的

37:34.110 --> 37:38.380
所有的数据

37:38.380 --> 37:39.380
注意啊

37:39.380 --> 37:42.380
这里边没分组和分组的

37:42.380 --> 37:43.380
那么同时呢

37:43.380 --> 37:46.380
我们也可以在我们的宿主中

37:46.380 --> 37:51.380
在我们的dater中建立一个citylister

37:51.380 --> 37:53.380
你可以去建这个

37:53.380 --> 37:56.400
好

37:56.400 --> 37:57.400
我们来看一下效果

37:57.400 --> 37:59.780
会有错吗

37:59.780 --> 38:00.780
哎

38:00.780 --> 38:01.780
有个小错对吧

38:01.780 --> 38:12.480
te

38:12.480 --> 38:13.480
这个是啥

38:13.480 --> 38:14.480
这个对吧

38:14.480 --> 38:16.480
我们写错了

38:16.480 --> 38:17.480
应该是它

38:17.480 --> 38:31.250
好

38:31.250 --> 38:32.250
我们看到吗

38:32.250 --> 38:35.250
数据有22个返回过来了

38:35.250 --> 38:36.250
打开来看

38:36.250 --> 38:37.250
注意啊

38:37.250 --> 38:39.250
这个返回点在哪

38:39.250 --> 38:41.250
它的返回点不在这个citylister里面

38:41.250 --> 38:43.250
是它执行完以后

38:43.250 --> 38:46.250
返回给我的一个citylister对象

38:46.250 --> 38:47.250
返回给我的时候

38:47.250 --> 38:48.250
我们就打开

38:48.250 --> 38:49.250
看着啊

38:49.250 --> 38:50.250
对吧

38:50.250 --> 38:51.250
打开第1个

38:51.250 --> 38:53.250
第1个的initial

38:53.250 --> 38:54.250
A

38:54.250 --> 38:55.250
代表的是

38:55.250 --> 38:56.250
在后面都是A的数据

38:56.250 --> 38:57.250
有几条

38:57.250 --> 38:58.250
10条

38:58.250 --> 39:00.250
打开看一下

39:00.250 --> 39:02.250
有10条数据和A有关

39:02.250 --> 39:04.250
然后这10条数据的分别的信息

39:04.250 --> 39:05.250
我们可以看到

39:05.250 --> 39:06.250
第一条

39:06.250 --> 39:08.250
我们打开以后

39:08.250 --> 39:10.880
阿拉扇门

39:10.880 --> 39:12.880
A开头的对吧

39:12.880 --> 39:13.880
第二条打开

39:13.880 --> 39:16.700
第二条

39:16.700 --> 39:18.700
我们打开看一下里面的数据

39:18.700 --> 39:22.360
保定啊

39:22.360 --> 39:23.360
这个是

39:23.360 --> 39:24.360
这是B了对吧

39:24.360 --> 39:26.360
我们在A里面

39:26.360 --> 39:28.360
你其实这样就能看到了

39:28.360 --> 39:29.360
说掉

39:29.360 --> 39:30.360
看第二条

39:30.360 --> 39:31.360
城市

39:31.360 --> 39:33.360
安山市

39:33.360 --> 39:34.360
所以我们形成了

39:34.360 --> 39:35.360
刚刚的写法

39:35.360 --> 39:37.360
两层循环以后

39:37.360 --> 39:39.360
本来A管A的

39:39.360 --> 39:41.360
然后城市管城市的

39:41.360 --> 39:43.360
现在它组合起来了

39:43.360 --> 39:45.360
形成了一个citylister

39:45.360 --> 39:46.360
然后放在了

39:46.360 --> 39:49.360
我们现在的return集合里面

39:49.360 --> 39:50.360
对吧

39:50.360 --> 39:51.360
这是我们大家现在

39:51.360 --> 39:52.360
应该讲

39:52.360 --> 39:54.360
看起来还算是属于

39:54.360 --> 39:55.360
简单的

39:55.360 --> 39:56.360
继下去

39:56.360 --> 39:59.310
我们继续

39:59.310 --> 40:15.870
我们说获取分组列表

40:15.870 --> 40:16.870
我们说

40:16.870 --> 40:19.870
获取系统信息

40:19.870 --> 40:23.820
微信可以直接获得

40:23.820 --> 40:25.820
系统端的信息

40:25.820 --> 40:26.820
主要

40:26.820 --> 40:27.820
系统信息

40:27.820 --> 40:35.780
非用户信息

40:35.780 --> 40:37.780
主要它不是用户信息

40:37.780 --> 40:39.780
get user info

40:39.780 --> 40:41.780
get logging

40:41.780 --> 40:43.780
这些都是和用户信息有关

40:43.780 --> 40:44.780
那么

40:44.780 --> 40:45.780
系统信息是什么呢

40:45.780 --> 40:49.780
get system info

40:49.780 --> 40:51.780
那你可以加一个

40:51.780 --> 41:00.930
sync

41:00.930 --> 41:02.930
同一部的概念

41:02.930 --> 41:04.930
系统

41:04.930 --> 41:06.930
这个是同步

41:06.930 --> 41:09.750
数据

41:09.750 --> 41:11.750
我们得到系统数据出来

41:11.750 --> 41:12.750
然后呢

41:12.750 --> 41:13.750
这个系统数据

41:13.750 --> 41:15.750
我们可以看一下

41:15.750 --> 41:17.750
我们其实要拿它的高度

41:17.750 --> 41:20.060
主要

41:20.060 --> 41:21.060
我们现在来做的就是

41:21.060 --> 41:24.060
怎么把字母能够很好的

41:24.060 --> 41:25.060
完成

41:25.060 --> 41:27.060
我们所谓的一个

41:27.060 --> 41:29.060
屏幕或者说垂直在

41:29.060 --> 41:31.060
当前界面的六点

41:31.060 --> 41:33.060
尽管屏幕可以变

41:33.060 --> 41:35.060
这个结构是没有问题的

41:35.060 --> 41:45.610
我们来看一下

41:45.610 --> 41:46.610
sy

41:46.610 --> 41:47.610
还没写完

41:47.610 --> 41:48.610
sys

41:48.610 --> 41:54.950
对吧

41:54.950 --> 41:55.950
我们返回一个数值

41:55.950 --> 41:56.950
告诉我

41:56.950 --> 41:58.950
我现在是

41:58.950 --> 41:59.950
用的是iphone 6

41:59.950 --> 42:00.950
就是我的模拟器

42:00.950 --> 42:01.950
对不对

42:01.950 --> 42:02.950
并且呢

42:02.950 --> 42:04.950
我现在有屏幕的宽度

42:04.950 --> 42:05.950
375

42:05.950 --> 42:06.950
屏幕的高度

42:06.950 --> 42:07.950
603

42:07.950 --> 42:08.950
它怎么知道

42:08.950 --> 42:09.950
你看我这里边

42:09.950 --> 42:10.950
65对不对

42:10.950 --> 42:12.950
然后603是我屏幕

42:12.950 --> 42:13.950
可用区域

42:13.950 --> 42:14.950
667呢

42:14.950 --> 42:16.950
是整个这个长度

42:16.950 --> 42:17.950
对不对

42:17.950 --> 42:18.950
这里面都会有

42:18.950 --> 42:19.950
说的是后面这个

42:19.950 --> 42:21.950
当然这是模拟器了

42:21.950 --> 42:23.950
我可以得到用户的信息

42:23.950 --> 42:25.950
那么此时呢

42:25.950 --> 42:27.950
我将去获取到

42:27.950 --> 42:31.480
屏幕

42:31.480 --> 42:34.620
可用

42:34.620 --> 42:36.620
高度

42:36.620 --> 42:38.620
设定一下

42:38.620 --> 42:45.970
我们用lat来啊

42:45.970 --> 42:46.970
win

42:46.970 --> 42:47.970
height

42:47.970 --> 42:53.840
system info

42:53.840 --> 42:54.840
点

42:54.840 --> 42:56.840
我们有一个win height

42:56.840 --> 42:58.840
屏幕可用的window啊

42:58.840 --> 43:00.840
我们称之为

43:00.840 --> 43:02.840
window

43:02.840 --> 43:04.840
它的高度

43:04.840 --> 43:06.840
屏幕可用高度

43:06.840 --> 43:07.840
然后呢

43:07.840 --> 43:15.950
我们做一个计算

43:15.950 --> 43:17.950
计算什么

43:17.950 --> 43:19.950
每个

43:19.950 --> 43:21.950
字幕的

43:21.950 --> 43:32.110
相对应

43:32.110 --> 43:33.110
高度

43:33.110 --> 43:35.110
它是什么

43:35.110 --> 43:37.110
就是

43:37.110 --> 43:38.110
先拿个变量

43:38.110 --> 43:40.110
我们就叫h

43:40.110 --> 43:41.110
item h

43:41.110 --> 43:45.870
怎么去计算这个值呢

43:45.870 --> 43:47.870
我们想一下

43:47.870 --> 43:49.870
首先

43:49.870 --> 43:51.870
我总高有了

43:51.870 --> 43:52.870
你想啊

43:52.870 --> 43:53.870
我现在呢

43:53.870 --> 43:55.870
总高有了

43:55.870 --> 43:58.870
我的字幕数也有了

43:58.870 --> 43:59.870
那我作为

43:59.870 --> 44:01.870
求每个的一个高度的话

44:01.870 --> 44:03.870
是不是总高

44:03.870 --> 44:05.870
除以你的字幕数

44:05.870 --> 44:07.870
那就是平均分下来

44:07.870 --> 44:08.870
每一个字幕

44:08.870 --> 44:10.870
做应该对应的高度

44:10.870 --> 44:12.870
这是数学上的一个概念

44:12.870 --> 44:20.300
对吧

44:20.300 --> 44:22.300
总高度

44:22.300 --> 44:24.300
去除以

44:24.300 --> 44:30.500
总数量

44:30.500 --> 44:32.500
它其实等于

44:32.500 --> 44:37.730
每个

44:37.730 --> 44:38.730
对象

44:38.730 --> 44:42.300
每个数值的

44:42.300 --> 44:44.300
单高度

44:44.300 --> 44:45.300
是这个逻辑吧

44:45.300 --> 44:47.300
好我们来写一下

44:47.300 --> 44:50.300
那么这是数学的排布方式

44:50.300 --> 44:51.300
我们现在呢

44:51.300 --> 44:53.300
我们去写一个我们的

44:53.300 --> 44:54.300
呃

44:54.300 --> 44:55.300
反过来写

44:55.300 --> 44:56.300
就是我们把

44:56.300 --> 44:58.300
等号左右切换

44:58.300 --> 44:59.300
总高度

44:59.300 --> 45:01.300
我们写一下

45:01.300 --> 45:04.300
总高度就是win height

45:04.300 --> 45:06.300
然后它去除以

45:06.300 --> 45:07.300
我们现在的

45:07.300 --> 45:08.300
当前的什么

45:08.300 --> 45:10.300
总数量

45:10.300 --> 45:12.300
总数量是什么

45:12.300 --> 45:14.300
总数量其实就是我的

45:14.300 --> 45:16.300
search little

45:16.300 --> 45:18.300
这个是不是获得所有字幕表

45:18.300 --> 45:19.300
所有字幕表里面的

45:19.300 --> 45:22.930
字母数量就是

45:22.930 --> 45:24.930
this then

45:24.930 --> 45:26.930
search little

45:26.930 --> 45:28.930
我们把leto

45:28.930 --> 45:30.930
它里面的高度写一下

45:30.930 --> 45:31.930
是不是

45:31.930 --> 45:33.930
这就是我的所有字母数嘛

45:33.930 --> 45:35.930
所有字母数的高度

45:35.930 --> 45:37.930
所以按照这个

45:37.930 --> 45:44.250
那个公式来讲的话

45:44.250 --> 45:46.250
就应该是我的总高度

45:46.250 --> 45:48.250
除以总数量

45:48.250 --> 45:50.250
对吧就是每个数值的

45:50.250 --> 45:52.250
单高度这样就出来了

45:52.250 --> 45:55.690
好请接着我们再来

45:55.690 --> 46:00.090
我们再定辨量

46:00.090 --> 46:09.420
我们继续循环

46:09.420 --> 46:11.420
我们来计算

46:11.420 --> 46:13.420
它现在的高度的一个值

46:13.420 --> 46:17.620
i你来看一下

46:17.620 --> 46:19.620
这个计算方式

46:19.620 --> 46:21.620
对你之后啊就是

46:21.620 --> 46:23.620
某些东西像铺满整个屏幕

46:23.620 --> 46:25.620
或者说某一个区域的内容

46:25.620 --> 46:27.620
长度都有一些帮助

46:27.620 --> 46:29.620
this then

46:29.620 --> 46:31.620
search little then

46:31.620 --> 46:33.620
then

46:34.620 --> 46:39.150
i加加

46:39.150 --> 46:41.150
循环你现在的一个

46:41.150 --> 46:43.150
所有字母表

46:43.150 --> 46:55.900
我们有let

46:55.900 --> 46:56.900
然后呢

46:56.900 --> 46:58.900
我们定一个普通的

46:58.900 --> 47:03.180
对象

47:03.180 --> 47:05.180
首先第一件事

47:05.180 --> 47:07.180
往对象里面的

47:07.180 --> 47:09.180
设定一个net

47:09.180 --> 47:11.180
这个net呢就是search

47:11.180 --> 47:13.180
leto

47:13.180 --> 47:15.180
里面的i

47:15.180 --> 47:17.180
这个i代很熟嘛

47:17.180 --> 47:19.180
这是我平时所谓的abcd嘛

47:19.180 --> 47:21.180
同时再来

47:21.180 --> 47:23.180
我们设定

47:23.180 --> 47:25.180
主要

47:25.180 --> 47:27.180
我们先把代码写一下

47:27.180 --> 47:29.180
你看我现在是这么写的

47:29.180 --> 47:31.180
temper点t

47:31.180 --> 47:33.180
height

47:33.180 --> 47:35.180
等于i

47:35.180 --> 47:38.620
成上字

47:38.620 --> 47:40.620
items

47:40.620 --> 47:42.620
第二行我是这样就两行代码

47:42.620 --> 47:46.820
我写成bheight

47:46.820 --> 47:48.820
等于

47:48.820 --> 47:50.820
加1

47:50.820 --> 47:56.060
成新

47:56.060 --> 47:58.060
那这样写

47:58.060 --> 48:00.060
你自己看一下这两行什么意思

48:00.060 --> 48:02.060
首先

48:02.060 --> 48:04.060
我存主到temper里面的net

48:04.060 --> 48:06.060
是我现在的每一个

48:06.060 --> 48:08.060
字母a对吧

48:08.060 --> 48:10.060
a在这边我给了一个

48:10.060 --> 48:12.060
item

48:12.060 --> 48:14.060
item h

48:14.060 --> 48:16.060
是每一项item的

48:16.060 --> 48:18.060
高度

48:18.060 --> 48:20.060
那么这个i呢

48:20.060 --> 48:22.060
是全环的坐标

48:22.060 --> 48:24.060
那么后面还有一个i加1

48:24.060 --> 48:26.060
你想一下啊我们这么举例

48:26.060 --> 48:28.060
如果简单的讲

48:28.060 --> 48:30.060
如果这个是40相速的话

48:30.060 --> 48:32.060
那么第一项的

48:32.060 --> 48:34.060
这个纸应该是0

48:34.060 --> 48:36.060
对吧0成40嘛

48:36.060 --> 48:38.060
而0加1等于1成40

48:38.060 --> 48:40.060
它就是40 0和40

48:40.060 --> 48:42.060
你想我第二项

48:42.060 --> 48:44.060
过来的时候的话

48:44.060 --> 48:46.060
如果我第二项过来

48:46.060 --> 48:48.060
那么这个纸应该是1

48:48.060 --> 48:50.060
这个是2是80

48:50.060 --> 48:52.060
他们这个对应关系很有意思

48:52.060 --> 48:54.060
我们把这个先删了

48:54.060 --> 48:56.060
你想啊

48:56.060 --> 48:58.060
它是0

48:58.060 --> 49:00.060
首先啊

49:00.060 --> 49:02.060
对应到的数值

49:02.060 --> 49:04.060
第一个是1的话

49:04.060 --> 49:06.060
它是0到40

49:06.060 --> 49:08.060
它给了两个纸

49:08.060 --> 49:10.060
如果是第二项的话呢

49:10.060 --> 49:12.060
它是40到80

49:12.060 --> 49:14.060
这是什么东西

49:14.060 --> 49:16.060
首先说一下40的高度

49:16.060 --> 49:18.060
举例啊

49:18.060 --> 49:20.060
item height所给出的

49:20.060 --> 49:22.060
那么所以你注意啊

49:22.060 --> 49:24.060
我们这边所给出的这个t跟b

49:24.060 --> 49:26.060
是有意义的

49:26.060 --> 49:28.060
我们说一下

49:28.060 --> 49:30.060
它其实是

49:30.060 --> 49:32.060
当前

49:32.060 --> 49:34.060
这一个字母

49:34.060 --> 49:36.060
所对应到的

49:36.060 --> 49:41.740
高度的top way

49:41.740 --> 49:45.240
和button way

49:45.240 --> 49:47.240
当前字母

49:47.240 --> 49:50.680
对应的top height

49:50.680 --> 49:57.610
这两个纸

49:57.610 --> 49:59.610
当前字母对应的这两个

49:59.610 --> 50:01.610
那么我们可以看出来

50:01.610 --> 50:03.610
我们现在看到了

50:03.610 --> 50:05.610
我们把现在的这个字母

50:05.610 --> 50:07.610
已经给它拆开了啊

50:07.610 --> 50:09.610
形成的是我们现在得到了

50:09.610 --> 50:11.610
一个temper里面进行循环玩

50:11.610 --> 50:13.610
每一个字母对应的高度

50:13.610 --> 50:15.610
是吧

50:15.610 --> 50:17.610
这个是不是很有意思

50:17.610 --> 50:19.610
然后的话呢我们再往下

50:19.610 --> 50:21.610
我们把当前所对应到的

50:21.610 --> 50:23.610
每一个字母是json对象

50:23.610 --> 50:25.610
全部插入到我们循环外的

50:25.610 --> 50:27.610
这个temperobj里面去

50:27.610 --> 50:29.610
主要

50:29.610 --> 50:31.610
在这

50:31.610 --> 50:33.610
dempobj

50:33.610 --> 50:35.610
点

50:35.610 --> 50:37.610
push

50:37.610 --> 50:39.610
压入

50:39.610 --> 50:41.610
temper

50:41.610 --> 50:43.610
那么等这个所有的循环完成以后

50:43.610 --> 50:45.610
你所有的这种高度

50:45.610 --> 50:47.610
就会被记在我们的temperobj里面

50:47.610 --> 50:49.610
好了那么再接下去

50:49.610 --> 50:51.610
出循环

50:51.610 --> 50:53.610
this点

50:53.610 --> 50:55.610
win height

50:55.610 --> 50:57.610
我们去记一下

50:57.610 --> 50:59.610
就是

50:59.610 --> 51:01.610
win height

51:01.610 --> 51:03.610
我们这边要记录一个win height

51:03.610 --> 51:05.610
对吧就你当前的

51:05.610 --> 51:07.610
这个可用区域的高度

51:07.610 --> 51:09.610
我们在这记一下

51:09.610 --> 51:11.610
win height

51:11.610 --> 51:16.330
第二

51:16.330 --> 51:18.330
我们记一个

51:18.330 --> 51:20.330
我们

51:20.330 --> 51:22.330
注释注释写一下

51:22.330 --> 51:24.330
当前

51:24.330 --> 51:26.330
可用区域的

51:26.330 --> 51:28.330
高度

51:28.330 --> 51:34.420
第二个

51:34.420 --> 51:36.420
this点

51:36.420 --> 51:41.020
item edge

51:41.020 --> 51:43.020
item edge

51:43.020 --> 51:45.020
item edge是什么

51:45.020 --> 51:47.020
item edge我们看上面

51:47.020 --> 51:49.020
往上跑

51:49.020 --> 51:51.020
它是每一个

51:51.020 --> 51:53.020
它是每一个

51:53.020 --> 51:56.580
现在的单元值的高度

51:56.580 --> 52:15.510
那我们把item edge

52:15.510 --> 52:17.510
也在这边

52:17.510 --> 52:28.470
设定一下

52:28.470 --> 52:35.180
再来

52:35.180 --> 52:38.740
我们写上

52:38.740 --> 52:42.250
temper

52:42.250 --> 52:44.250
我们写上this点

52:44.250 --> 52:46.250
search little

52:46.250 --> 52:51.160
等于

52:51.160 --> 52:53.160
temperobj

52:53.160 --> 52:55.160
search little

52:55.160 --> 52:57.160
是我现在所有的字母表

52:57.160 --> 52:59.160
之前

52:59.160 --> 53:01.160
我们在初始化最开始的时候

53:01.160 --> 53:03.160
我们给过一个search list

53:03.160 --> 53:05.160
对不对

53:05.160 --> 53:07.160
那么现在呢

53:07.160 --> 53:09.160
我们可以把这个暂时性的

53:09.160 --> 53:11.160
先给它屏蔽掉

53:11.160 --> 53:13.160
然后在这个做search list的时候

53:13.160 --> 53:15.160
注意这里面是有我们

53:15.160 --> 53:17.160
整个的那个search list

53:17.160 --> 53:19.160
所里面所出现的内容

53:19.160 --> 53:21.160
但是呢它比我们原先的

53:21.160 --> 53:23.160
还要再多

53:23.160 --> 53:25.160
它现在所对应的高度

53:25.160 --> 53:27.160
对不对

53:27.160 --> 53:29.160
原先只是abcd

53:29.160 --> 53:33.820
这边有

53:33.820 --> 53:35.820
新的

53:35.820 --> 53:37.820
含有

53:37.820 --> 53:39.820
高度的

53:39.820 --> 53:41.820
search list

53:41.820 --> 53:46.790
OK吧

53:46.790 --> 53:48.790
我们这边search list就有

53:48.790 --> 53:54.090
再往下

53:54.090 --> 53:57.530
this.city list

53:57.530 --> 54:08.070
this.city list

54:08.070 --> 54:10.070
就是我们下面刚刚看到的

54:10.070 --> 54:12.070
就是我整个的

54:12.070 --> 54:14.070
那个字母表

54:14.070 --> 54:16.070
是我所有的

54:16.070 --> 54:18.070
所有的那个程式列表

54:18.070 --> 54:20.070
往上找一下

54:20.070 --> 54:22.070
就是我已经分完足以后的程式列表

54:22.070 --> 54:24.070
对吧

54:24.070 --> 54:26.070
分组后的

54:26.070 --> 54:28.070
程式列表

54:28.070 --> 54:30.070
什么叫分组

54:30.070 --> 54:32.070
a 下面几个程式

54:32.070 --> 54:34.070
b 下面几个程式是这个逻辑

54:34.070 --> 54:36.070
好了我们把这个全部列出来了

54:36.070 --> 54:38.070
那么这样的话呢

54:38.070 --> 54:40.070
我们回过头来看一下上面

54:40.070 --> 54:42.070
我回过头来看一下上面

54:42.070 --> 54:44.070
首先这个search list

54:44.070 --> 54:46.070
search list里面

54:46.070 --> 54:48.070
我们这边把它显示的时候

54:48.070 --> 54:50.070
我们看一下显示

54:50.070 --> 54:52.070
它一定会有问题

54:52.070 --> 54:54.070
这个问题的出现呢

54:54.070 --> 54:56.070
不是属于我们现在

54:56.070 --> 54:58.070
所需要看到的这个内容

54:58.070 --> 55:00.070
它改变了

55:00.070 --> 55:02.070
它内容改变了

55:02.070 --> 55:04.070
原先我们这边

55:04.070 --> 55:06.070
所你能够看到的

55:06.070 --> 55:08.070
search list

55:08.070 --> 55:10.070
它只是一个宿主

55:10.070 --> 55:12.070
现在它里面有对象了

55:12.070 --> 55:14.070
所以这种情况下的话呢

55:14.070 --> 55:16.070
你肯定是显示不出来的

55:16.070 --> 55:18.070
那么这里面应该放的是什么呢

55:18.070 --> 55:20.070
你再看一下

55:20.070 --> 55:22.070
它里面放进去的search list

55:22.070 --> 55:24.070
是这个

55:24.070 --> 55:26.070
而这个里面呢

55:26.070 --> 55:28.070
我们看到1 2 3

55:28.070 --> 55:30.070
是不是有三个内容

55:30.070 --> 55:32.070
其中我们这个念就应该把它显示出来

55:32.070 --> 55:34.070
所以你应该是从这儿

55:34.070 --> 55:36.070
开始写一个

55:36.070 --> 55:38.070
念

55:38.070 --> 55:45.670
好我们再来看一下

55:45.670 --> 55:47.670
现在它没有显示出来

55:47.670 --> 55:49.670
而且它没有

55:49.670 --> 55:51.670
没有报错对吧

55:51.670 --> 55:53.670
我们来查一下

55:53.670 --> 55:55.670
从头到尾看一下

55:55.670 --> 55:57.670
显示了啊 现在显示了

55:57.670 --> 55:59.670
为什么呢

55:59.670 --> 56:01.670
这里面说到一点啊

56:01.670 --> 56:03.670
这个我觉得挺无语的

56:03.670 --> 56:05.670
就是说

56:05.670 --> 56:07.670
如果你写错一个单子的话

56:07.670 --> 56:09.670
在它编译时候是过的

56:09.670 --> 56:11.670
在微信里面也不提示

56:11.670 --> 56:13.670
比如说像我刚才这里

56:13.670 --> 56:15.670
我刚才少打一个T

56:15.670 --> 56:17.670
这里呢它也不报

56:17.670 --> 56:19.670
它也就不显示

56:19.670 --> 56:21.670
所以我们说还是要细心一点

56:21.670 --> 56:23.670
做完以后还是再看一下

56:23.670 --> 56:25.670
这个它不报错啊

56:25.670 --> 56:27.670
这个我们少了一个T

56:27.670 --> 56:29.670
我们把这个T

56:29.670 --> 56:31.670
加上去

56:31.670 --> 56:33.670
然后我们再看一下

56:33.670 --> 56:35.670
它就显示出来了

56:35.670 --> 56:37.670
那么现在它里面的每个高度

56:37.670 --> 56:39.670
是根据页面进计算的

56:39.670 --> 56:41.670
这个就是啊

56:41.670 --> 56:43.670
那么计算出的效果以后

56:43.670 --> 56:45.670
这是你所看到的

56:45.670 --> 56:47.670
它一个的高度结构

56:47.670 --> 56:49.670
那么啊

56:49.670 --> 56:51.670
不是 它的结构的话呢

56:51.670 --> 56:53.670
我们在这边添加

56:53.670 --> 56:55.670
它的高度的话现在还不到

56:55.670 --> 56:57.670
你看啊 它高度还不到

56:57.670 --> 56:59.670
那怎么办呢

56:59.670 --> 57:01.670
我们这样来

57:01.670 --> 57:03.670
我们的这个

57:03.670 --> 57:05.670
H

57:05.670 --> 57:07.670
我在这边附了

57:07.670 --> 57:09.670
在这边也有

57:09.670 --> 57:11.670
我们在界面上怎么用这个H

57:11.670 --> 57:13.670
那么这边的话呢

57:13.670 --> 57:15.670
我们说一下

57:15.670 --> 57:17.670
每一个的高度的计算

57:17.670 --> 57:19.670
也就是每一个这个Item的循环

57:19.670 --> 57:21.670
在这个里面

57:21.670 --> 57:23.670
我们去做一下怎么做

57:23.670 --> 57:25.670
看我

57:25.670 --> 57:29.620
Style H

57:29.620 --> 57:31.620
主要这个写法是要这样

57:31.620 --> 57:35.060
Height

57:35.060 --> 57:37.060
帽号加上

57:37.060 --> 57:39.060
Item H

57:39.060 --> 57:41.060
加上PX

57:41.060 --> 57:43.060
因为它给的值

57:43.060 --> 57:45.060
是一个像素单位

57:45.060 --> 57:47.060
后面的话不用管

57:47.060 --> 57:49.060
那么这样给完我们再来看一下效果

57:49.060 --> 57:54.620
我们

57:54.620 --> 57:56.620
看一下里面每个A

57:56.620 --> 57:58.620
也就是

57:58.620 --> 58:05.380
我们所选项的

58:05.380 --> 58:07.380
我们看一下里面每一个

58:07.380 --> 58:09.380
它的一个高度

58:09.380 --> 58:11.380
高度是看到吗

58:11.380 --> 58:13.380
高度是27.4

58:15.380 --> 58:17.380
27.40

58:17.380 --> 58:19.380
就这样一个数值

58:20.380 --> 58:22.380
这是它所计算出的一个数值

58:22.380 --> 58:23.380
看到吗

58:23.380 --> 58:24.380
这边有这个值

58:24.380 --> 58:25.380
所以说呢

58:25.380 --> 58:27.380
我们这个值的话呢

58:27.380 --> 58:29.380
你可以去保留小数位

58:29.380 --> 58:31.380
不给它的时候你去做一个to fix the two

58:31.380 --> 58:34.380
保留小数两位的这样结构

58:34.380 --> 58:36.380
这是可以的

58:36.380 --> 58:38.380
然后呢我们来看一下

58:38.380 --> 58:40.380
打开以后随便选中一条

58:40.380 --> 58:44.080
那么你看到吗

58:44.080 --> 58:46.080
高度27.41px

58:46.080 --> 58:48.080
它是有这样的一个设置的

58:48.080 --> 58:50.080
那么这样的话呢

58:50.080 --> 58:52.080
整体来说

58:52.080 --> 58:53.080
我们就满足了

58:53.080 --> 58:55.080
你现在随便你怎么变

58:55.080 --> 58:57.080
由于它是动态计算出来的

58:57.080 --> 58:58.080
所以本身来讲

58:58.080 --> 59:00.080
它就可以完全的

59:00.080 --> 59:02.080
以平均化的方式

59:02.080 --> 59:04.080
贴在你的页面的右边

59:04.080 --> 59:05.080
对吧

59:05.080 --> 59:07.080
这是属于这一块内容的

59:07.080 --> 59:08.080
特别注意哦

59:08.080 --> 59:10.080
我们的这一个内容

59:10.080 --> 59:12.080
它的代码量还是不少的

59:12.080 --> 59:14.080
希望我们大家能够

59:14.080 --> 59:16.080
一定要去细看

59:16.080 --> 59:17.080
这是第一块

59:17.080 --> 59:19.080
我们现在

59:19.080 --> 59:21.080
开始准备做第二块

59:21.080 --> 59:23.080
特别是这部分内容

59:23.080 --> 59:25.080
这部分内容的话呢

59:25.080 --> 59:28.080
循环是在从4H开始

59:28.080 --> 59:32.100
4H开始

59:32.100 --> 59:34.100
里面的字母是到最后的

59:34.100 --> 59:36.100
到这结束

59:36.100 --> 59:38.100
下面这边的话是单独的一个

59:38.100 --> 59:40.100
我们可以弹出的

59:40.100 --> 59:41.100
对吧

59:41.100 --> 59:43.100
好我们来做一下

59:43.100 --> 59:44.100
怎么样去做到

59:44.100 --> 59:46.100
首先现在你能看到

59:46.100 --> 59:48.100
是它已经停留在右边了

59:48.100 --> 59:49.100
第二个呢

59:49.100 --> 59:51.100
我们怎么能做到点击以后

59:51.100 --> 59:53.100
做一个弹出

59:53.100 --> 59:54.100
这样的结构

59:54.100 --> 59:56.100
点击以后的弹出

59:56.100 --> 59:57.100
一定要明确啊

59:57.100 --> 59:59.100
就是你现在的整个这一块

59:59.100 --> 01:00:01.100
和我直接往右边放

01:00:01.100 --> 01:00:03.100
那是不一样的概念

01:00:03.100 --> 01:00:04.100
现在我是计算出

01:00:04.100 --> 01:00:05.100
每一个的高度以后

01:00:05.100 --> 01:00:07.100
让它进行这样的放置的

01:00:07.100 --> 01:00:09.100
而我对于右边这个值来讲的

01:00:09.100 --> 01:00:11.100
它其实是简单的

01:00:11.100 --> 01:00:13.100
完成我现在的一个

01:00:13.100 --> 01:00:15.100
所谓的页面级的操作

01:00:15.100 --> 01:00:16.100
接下来待会我们来做

01:00:16.100 --> 01:00:17.100
右边的这一块

01:00:17.100 --> 01:00:18.100
我们休息

