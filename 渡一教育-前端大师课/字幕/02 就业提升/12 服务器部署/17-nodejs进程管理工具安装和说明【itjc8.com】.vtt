WEBVTT

00:00.880 --> 00:04.480
好的同学们 刚才我们已经安装好了 Node.js

00:04.480 --> 00:08.480
那现在就意味着我们可以直接用 Node.js 去运行某些文件了

00:08.480 --> 00:12.880
那这边呢 我先给大家创建一个js文件出来

00:12.880 --> 00:16.680
touch一个什么呢 比如说我们叫 app.js 出来

00:16.680 --> 00:19.480
app.js OK

00:19.480 --> 00:23.480
然后呢 给它里面写句代码 vm app.js

00:23.480 --> 00:27.080
这是编辑的意思 vm 是个编辑器 vm

00:27.080 --> 00:30.080
然后呢 我给它里面写句代码 console.log

00:30.080 --> 00:33.080
console 写错了 console.log

00:33.080 --> 00:36.080
然后呢 来个一 或者说我们常见的 halloween

00:36.080 --> 00:39.080
来一个 halloween的吧 halloween的

00:39.080 --> 00:43.080
OK 然后呢 接下来我把这个文件保存退出

00:43.080 --> 00:46.080
好 那么要执行这个文件其实特别简单

00:46.080 --> 00:48.080
之前我们都知道 Node.js

00:48.080 --> 00:51.080
然后呢 跟上一个文件名 app.js

00:51.080 --> 00:53.080
然后我又发现 halloween的句打印出来了

00:53.080 --> 00:56.080
但是在实际生产环境当中啊

00:56.080 --> 00:58.080
我们不会这么做的 这是我们在开发过程当中

00:58.080 --> 01:00.080
去运行一个文件的做法

01:00.080 --> 01:02.080
但是这种做法有什么问题呢 就是

01:02.080 --> 01:06.080
如果你的代码啊 是一个一直运行的代码

01:06.080 --> 01:08.080
就是需要长时间运行的 可能是一个死循环之类的

01:08.080 --> 01:11.080
要坚定用户输入的 等等的一些东西啊

01:11.080 --> 01:14.080
那么一旦代码爆错 那么这个程序就直接退出了

01:14.080 --> 01:17.080
后续的用户在访问的时候呢 就啥都访问不到了

01:17.080 --> 01:19.080
有人荡机了 相当于是

01:19.080 --> 01:23.080
那我们需要用到一个什么呢 用到一个进程管理工具

01:23.080 --> 01:26.080
叫PMR 那么这个PMR有什么作用呢

01:26.080 --> 01:29.080
就是一旦你的Note CS程序爆错

01:29.080 --> 01:32.080
它会尝试给你把这个程序重启 尝试重启

01:32.080 --> 01:35.080
那么它可以保证我们代码一直在线

01:35.080 --> 01:38.080
一直在线 不会说是出现荡机的情况

01:38.080 --> 01:41.080
那怎么去用它呢 首先我们先得安装啊

01:41.080 --> 01:44.080
那么是npm install

01:44.080 --> 01:47.080
然后呢 加上一个pmr-g

01:47.080 --> 01:50.080
全局安装一个PMR 这个进程管理工具啊

01:50.080 --> 01:53.080
但这个是通过npm的安装的 特别简单

01:53.080 --> 01:56.080
大家稍等一下

01:56.080 --> 01:59.080
好 我这边已经装好了 那么装好之后呢

01:59.080 --> 02:02.080
我们要启动这个app.cs 就不是用Note的来启动了

02:02.080 --> 02:04.080
而是用什么呢 用pmr

02:04.080 --> 02:07.080
然后呢 start

02:07.080 --> 02:10.080
start

02:10.080 --> 02:12.080
start

02:12.080 --> 02:14.080
然后呢 app.cs

02:14.080 --> 02:16.080
OK 回说

02:16.080 --> 02:18.080
那么这时候呢 它就帮你启动了

02:18.080 --> 02:20.080
启动之后呢 这边会显示啊

02:20.080 --> 02:22.080
当然这边呢 还有另外一个

02:22.080 --> 02:24.080
它自己应该自己存在的 没关系

02:24.080 --> 02:26.080
这对我们没影响 我们就看我们自己的

02:26.080 --> 02:27.080
首先id是1 然后呢

02:27.080 --> 02:30.080
name就是app 它是你的文件名字作为这个name

02:30.080 --> 02:32.080
然后呢 光看status就可以了

02:32.080 --> 02:34.080
status呢 就是online

02:34.080 --> 02:36.080
就是它这个东西是在线的

02:36.080 --> 02:37.080
然后呢

02:37.080 --> 02:40.080
这个包管理工具呢 就会在你代码出错

02:40.080 --> 02:42.080
比如说有的用户去使用它的时候呢

02:42.080 --> 02:44.080
有一些非法输入 导致它崩溃了

02:44.080 --> 02:46.080
崩溃之后呢 它会帮你去重启啊

02:46.080 --> 02:48.080
而且重启次数呢 这边会发现啊

02:48.080 --> 02:50.080
就是它有个刷新的次数

02:50.080 --> 02:51.080
比如说这边重启了23次

02:51.080 --> 02:53.080
当然这不是我们代码 是别人代码啊

02:53.080 --> 02:55.080
那如果说我要把它停掉 怎么停呢

02:55.080 --> 02:56.080
也很简单

02:56.080 --> 02:57.080
pmr

02:57.080 --> 02:58.080
然后呢 stop

02:58.080 --> 03:00.080
app.cs

03:00.080 --> 03:03.460
好 再看一下

03:03.460 --> 03:05.460
那app.cs就会我们停止了

03:05.460 --> 03:07.460
当然你用这个app.cs也行

03:07.460 --> 03:09.460
你也可以用这个名字

03:09.460 --> 03:11.460
就是app 或者用这个id

03:11.460 --> 03:12.460
都可以 没问题啊

03:12.460 --> 03:14.460
就是pmr stop

03:14.460 --> 03:16.460
你用加上一个1

03:16.460 --> 03:17.460
是可以的

03:17.460 --> 03:19.460
比如说我们重新start一下 给大家看一下

03:19.460 --> 03:21.460
就是start和stop的时候

03:21.460 --> 03:23.460
你都可以使用这个id

03:23.460 --> 03:25.460
或者名字 都没问题啊

03:25.460 --> 03:26.460
start1

03:26.460 --> 03:28.460
你会发现是不是id为1的元素被启动了

03:28.460 --> 03:30.460
所以这是我们所说的这个

03:30.460 --> 03:33.460
start和stop的一个用法啊

03:33.460 --> 03:35.460
那如果说是我想把它从这个列表里面干掉

03:35.460 --> 03:36.460
怎么干掉呢

03:36.460 --> 03:37.460
其实也很简单

03:37.460 --> 03:38.460
pmr

03:38.460 --> 03:39.460
然后delete

03:39.460 --> 03:41.460
然后呢 比如说去看看id1

03:41.460 --> 03:43.460
你会发现 第1个已经不像

03:44.460 --> 03:46.460
第0个也给它删掉

03:46.460 --> 03:47.460
你发现现在它里面啥也没有了

03:47.460 --> 03:48.460
所以就是

03:48.460 --> 03:50.460
用这个pmr启动项目

03:50.460 --> 03:51.460
特别简单

03:51.460 --> 03:52.460
pmr start

03:52.460 --> 03:53.460
加上你的文件名字

03:53.460 --> 03:54.460
就ok了

03:54.460 --> 03:56.460
最近没有给大家做个笔记啊

03:56.460 --> 04:01.460
使用pmr启动

04:01.460 --> 04:06.620
node.js项目

04:06.620 --> 04:07.620
怎么启动呢

04:07.620 --> 04:09.620
就是pmr start

04:09.620 --> 04:10.620
然后呢

04:10.620 --> 04:12.620
node.js

04:12.620 --> 04:13.620
当然不是node.js

04:13.620 --> 04:14.620
是文件名字

04:14.620 --> 04:15.620
文件名

04:15.620 --> 04:17.620
然后呢 如果你要停止呢

04:17.620 --> 04:18.620
就是

04:18.620 --> 04:20.620
停止就是pmr

04:20.620 --> 04:21.620
然后呢

04:21.620 --> 04:23.620
stop加上文件名

04:25.620 --> 04:27.620
或者说是你的id都行啊

04:27.620 --> 04:29.620
文件名

04:29.620 --> 04:31.620
文件名

04:31.620 --> 04:32.620
或者id

04:32.620 --> 04:33.620
ok

04:33.620 --> 04:34.620
然后你要删除它也一样

04:34.620 --> 04:36.620
删除

04:36.620 --> 04:38.620
这个删除的意思是从那个pmr

04:38.620 --> 04:40.620
pmr的管理列表里面删除啊

04:40.620 --> 04:44.620
就是从pmr的管理列表

04:44.620 --> 04:45.620
列表

04:45.620 --> 04:47.620
从删除就是pmr

04:47.620 --> 04:49.620
然后呢delete

04:49.620 --> 04:50.620
然后呢文件名

04:50.620 --> 04:54.380
或者id

04:54.380 --> 04:55.380
那么要注意啊

04:55.380 --> 04:56.380
它是只是从它管理列表里面删除

04:56.380 --> 04:57.380
文件还在的

04:57.380 --> 04:58.380
它不会影响项目的

04:58.380 --> 04:59.380
这个要注意啊

04:59.380 --> 05:01.380
所以这是我们node.js之后呢

05:01.380 --> 05:03.380
后续可能会用到一个命令

05:03.380 --> 05:04.380
大家注意一下

05:04.380 --> 05:05.380
好 那我们把这个事情先停一下

