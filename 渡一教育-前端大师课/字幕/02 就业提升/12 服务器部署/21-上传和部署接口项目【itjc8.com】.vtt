WEBVTT

00:01.260 --> 00:03.500
好的同学们 在上节课里面

00:03.500 --> 00:07.940
我们已经把view的全端项目进行了正常的部署

00:07.940 --> 00:10.300
现在我们可以通过正常的访问

00:10.300 --> 00:13.980
I love F1.c om直接打开我们的view项目了

00:13.980 --> 00:17.140
那么这个时候就是我们已经实现了这个图里面的这么一步

00:17.140 --> 00:21.700
这边输入HTTP帽号双鞋杠I love F1.c om

00:21.700 --> 00:23.220
然后它把请求发给服务器

00:23.220 --> 00:25.500
服务器里面的NJX接收到这个请求之后

00:25.500 --> 00:27.500
去我们的网站更目录

00:27.500 --> 00:31.100
就是那个Gang Home 然后呢Gang NJX

00:31.100 --> 00:36.380
Gang I love F1.c om 文件夹下面找到index.c om

00:36.380 --> 00:37.500
然后它返回给浏览器

00:37.500 --> 00:40.260
那么浏览器现在已经能打开我们的页面了

00:40.260 --> 00:41.340
但是现在问题在哪呢

00:41.340 --> 00:42.980
就是这个页面里面呢

00:42.980 --> 00:43.780
它是没有数据的

00:43.780 --> 00:46.540
所以它会向服务器去发请求请求数据

00:46.540 --> 00:48.180
那也就是说它会有个接口请求

00:48.180 --> 00:51.300
就类似于这样的接口请求发给服务器

00:51.300 --> 00:52.660
那么要发给服务器呢

00:52.660 --> 00:55.060
我们的接口NodeJS和MyCircle

00:55.140 --> 00:57.700
这个NodeJS项目我们是没有进行部署的

00:57.700 --> 00:59.300
所以接下来我们看一下就是

01:00.620 --> 01:03.060
我们呢给大家准备的项目里面呢

01:03.060 --> 01:05.260
除了有个View的前端项目之外呢

01:05.260 --> 01:08.060
还有一个NodeJS的后端接口项目

01:08.060 --> 01:09.700
那么接下来我们要教大家

01:09.700 --> 01:13.620
怎么去把这个后端接口项目给它部署起来了

01:13.620 --> 01:15.060
那么要部署这个项目呢

01:15.060 --> 01:17.660
其实跟之前的项目的这个部署过程

01:17.660 --> 01:19.140
有点类似但不一样啊

01:19.140 --> 01:20.180
不一样在哪呢

01:20.180 --> 01:21.340
我们来看一下

01:21.340 --> 01:23.740
之前我们在部署这个View项目的时候呢

01:23.740 --> 01:25.540
我们做了一件事就是在它里面

01:25.540 --> 01:27.500
首先我们安装了依赖项

01:27.500 --> 01:30.580
然后呢我们进行了NPMRoundBuild打包

01:30.580 --> 01:31.700
打包完之后呢

01:31.700 --> 01:33.380
我们拿到了一个Dist的文件夹

01:33.380 --> 01:35.900
把Dist的文件夹压缩成包之后呢

01:35.900 --> 01:37.260
放到服务器上去的

01:37.260 --> 01:40.860
所以这是这个View项目的一个项目过程啊

01:40.860 --> 01:44.060
那么这个呢就是我们的Node项目

01:44.060 --> 01:45.180
就是我们的接口项目

01:45.180 --> 01:46.380
那接口项目呢

01:46.380 --> 01:47.940
它没有这个打包的过程

01:47.940 --> 01:49.980
没有NPMRoundBuild的这个过程

01:49.980 --> 01:53.340
我们需要把整个这个项目文件夹压缩成包

01:53.340 --> 01:55.060
然后呢上传到服务器上去

01:55.060 --> 01:55.900
那么上传之前

01:55.900 --> 01:57.700
我们需要做一件事做什么事就是

01:57.700 --> 01:58.460
在这里面呢

01:58.460 --> 02:00.580
有一个configure文件

02:00.580 --> 02:01.940
而这个文件里面啊

02:01.940 --> 02:04.820
它存储的我这个用Vasco打开来看一下

02:04.820 --> 02:05.900
它存储的是一个对象

02:05.900 --> 02:07.260
这个对象里面放的是什么呢

02:07.260 --> 02:09.020
就是我们的一些配置

02:09.020 --> 02:10.460
那么关于数据库的配置里面

02:10.460 --> 02:12.460
有一项就是这个password

02:12.460 --> 02:15.780
我们知道我们之前在安装数据库的时候呢

02:15.780 --> 02:18.380
password的我们设置的可不是123456

02:18.380 --> 02:19.740
如果说是我们把这个项目

02:19.740 --> 02:21.140
这样子给上传上去的话

02:21.180 --> 02:22.260
它肯定访问到数据库

02:22.260 --> 02:23.300
因为密码错了

02:23.300 --> 02:24.820
我们需要把它密码改对啊

02:24.820 --> 02:27.340
改对改成我们之前这边写的这个

02:27.340 --> 02:28.540
Dou1666

02:28.540 --> 02:29.860
Dou1这个密码

02:29.860 --> 02:31.140
所以给它改一下

02:31.140 --> 02:31.940
保存

02:31.940 --> 02:32.980
好 那保存完之后呢

02:32.980 --> 02:34.260
接下来我们就可以做我们的事情了

02:34.260 --> 02:36.980
就是我把这个项目文件夹

02:36.980 --> 02:38.300
直接

02:38.300 --> 02:39.500
这边啊

02:39.500 --> 02:40.540
右键

02:40.540 --> 02:43.100
然后呢压缩成一个ZIP包

02:43.100 --> 02:44.740
压缩成ZIP包之后呢

02:44.740 --> 02:46.580
我们要把这个文件夹上传

02:46.580 --> 02:48.740
就把这个压缩包上传到我们服务器去

02:48.740 --> 02:49.900
那怎么怎么做呢

02:49.940 --> 02:51.340
还是我们用这个

02:51.340 --> 02:54.180
打开一个新的item

02:55.780 --> 02:56.780
就是我的中端啊

02:56.780 --> 02:57.380
我打开一个

02:57.380 --> 02:58.500
现在已经在这个文件下面

02:58.500 --> 02:59.820
我看一下LS

02:59.820 --> 03:00.300
你看

03:00.300 --> 03:03.660
这边是不是有个vdu.adminmaster.zip

03:03.660 --> 03:05.500
那我们就把这个文件

03:05.500 --> 03:07.380
这个压缩包文件上传到服务器去

03:07.380 --> 03:08.420
怎么上传呢

03:08.420 --> 03:10.660
还是用的scp命令

03:10.660 --> 03:11.020
然后呢

03:11.020 --> 03:15.700
点杠vdu.adminmaster.zip这个文件

03:15.700 --> 03:16.420
然后呢

03:16.420 --> 03:17.620
上传到哪个服务器呢

03:17.620 --> 03:22.540
root at ilovefe.com

03:22.540 --> 03:24.500
貌号一个波浪线杠

03:24.500 --> 03:26.020
上传到服务器的根木路

03:26.020 --> 03:26.900
把我们等它上上完

03:29.940 --> 03:30.740
好已经上上完毕了

03:30.740 --> 03:31.220
上完毕之后

03:31.220 --> 03:32.220
这个窗口可以关掉了

03:32.220 --> 03:32.780
关掉之后呢

03:32.780 --> 03:34.700
现在就就是我们服务器窗口了

03:34.700 --> 03:36.380
然后我现在已经在根木路下面了

03:36.380 --> 03:36.780
所以呢

03:36.780 --> 03:39.100
我们直接LS看一下

03:39.100 --> 03:39.420
哎

03:39.420 --> 03:41.660
我的vdu.master这个文件夹

03:41.660 --> 03:43.020
已经已经在这了

03:43.020 --> 03:44.580
就这个这个

03:44.580 --> 03:45.140
不是文件夹

03:45.140 --> 03:46.260
是压缩包已经在这了

03:46.260 --> 03:48.500
我们接下来把它移动到我们这个

03:48.500 --> 03:49.540
之前创建好的

03:49.540 --> 03:52.180
所放网站文件的那个木路下面去

03:52.180 --> 03:57.940
所以就是mvvdu.master.zip

03:57.940 --> 03:58.660
放到哪去呢

03:58.660 --> 04:02.780
homeindex这个木路下面来

04:02.780 --> 04:02.980
好

04:02.980 --> 04:03.340
然后呢

04:03.340 --> 04:06.700
我们来cd.homeindex

04:06.700 --> 04:07.660
我给大家看一下

04:07.660 --> 04:08.060
现在呢

04:08.060 --> 04:09.900
除了之前我们vude

04:09.900 --> 04:10.940
项目这个文件夹之外呢

04:10.940 --> 04:12.060
还有这个压缩包在这

04:12.060 --> 04:13.340
那我们接下来把这个压缩包

04:13.340 --> 04:14.660
进行解压啊

04:14.660 --> 04:15.380
on

04:16.580 --> 04:17.260
zip

04:17.260 --> 04:17.860
然后呢

04:17.860 --> 04:20.860
vdu.master

04:20.860 --> 04:21.900
ok

04:21.900 --> 04:23.100
clean一下啊

04:23.100 --> 04:24.900
就把屏幕清空一下

04:24.900 --> 04:25.220
然后呢

04:25.220 --> 04:25.740
ls

04:25.740 --> 04:26.460
我们看一下

04:26.460 --> 04:27.300
现在呢

04:27.300 --> 04:27.860
这里面呢

04:27.860 --> 04:29.460
除了 ilovefe之外呢

04:29.460 --> 04:31.020
还有vdu.master

04:31.020 --> 04:32.020
那这个文件

04:32.020 --> 04:33.220
还有这个文件

04:33.220 --> 04:34.500
其实我们都可以不要它

04:34.500 --> 04:35.380
不要它怎么办的

04:35.380 --> 04:36.540
我们可以通过rm

04:36.540 --> 04:37.420
就removemini

04:37.420 --> 04:38.620
把它迷除掉啊

04:38.620 --> 04:39.740
gunrf

04:39.740 --> 04:40.260
然后呢

04:40.260 --> 04:41.380
下画线

04:41.380 --> 04:43.420
macosx这个东西啊

04:43.420 --> 04:44.780
还有个rm

04:44.780 --> 04:45.820
gunr

04:45.820 --> 04:46.540
然后呢

04:46.540 --> 04:47.100
f

04:47.100 --> 04:50.700
我们vdu.master.zip

04:50.700 --> 04:50.940
ok

04:50.940 --> 04:51.740
把它删掉

04:51.740 --> 04:51.940
好

04:51.940 --> 04:52.420
clean

04:52.420 --> 04:53.740
现在我们再看一下啊

04:53.740 --> 04:54.940
就文件夹就清

04:54.940 --> 04:56.380
清爽很多啊

04:56.380 --> 04:57.180
那么清爽之后呢

04:57.180 --> 04:58.100
我们把这个文件夹

04:58.100 --> 04:58.740
改个名字吧

04:58.740 --> 05:00.100
因为这个名字不好看啊

05:00.100 --> 05:01.900
我们改成跟这个类似的

05:01.900 --> 05:03.020
我们给它改成什么呢

05:03.020 --> 05:05.700
就是mv

05:05.700 --> 05:07.820
vdu.master

05:07.820 --> 05:08.980
给它改个名字叫

05:08.980 --> 05:10.740
ilovefe

05:10.740 --> 05:12.380
我们它是这个管理项目啊

05:12.380 --> 05:15.020
就是admn

05:15.020 --> 05:15.660
ok

05:15.740 --> 05:18.260
现在看一下名字就一致了

05:18.260 --> 05:20.420
而且就是加了一个admn

05:20.420 --> 05:21.420
做区分

05:21.420 --> 05:22.860
那么接下来我们就要做什么事情呢

05:22.860 --> 05:25.100
我们cd到这个node.js

05:25.100 --> 05:27.060
就是我们的接口项目里面去啊

05:27.060 --> 05:29.580
ilovefeadmn

05:29.580 --> 05:31.100
它呢是用node写的

05:31.100 --> 05:31.500
而且呢

05:31.500 --> 05:32.580
我们现在上传上来之后呢

05:32.580 --> 05:33.740
首先做第一步事

05:33.740 --> 05:35.420
就是要去给它啊

05:35.420 --> 05:37.180
来看一下安装一下依赖项目

05:37.180 --> 05:39.020
我这边给大家写了步骤啊

05:39.020 --> 05:40.780
就是修改了mysgo数据过密码

05:40.780 --> 05:41.700
上传到服务器了

05:41.700 --> 05:44.580
而且我们把它挤压到这个ilovefeadmin了

05:44.620 --> 05:46.740
那么接下来要为项目去安装依赖项目了

05:46.740 --> 05:49.020
那就直接执行npmmi就ok了

05:49.020 --> 05:53.890
所以就是npmmi

05:53.890 --> 05:59.790
好的我们等它把这个依赖项目安装完毕啊

05:59.790 --> 06:01.030
好的依赖项目安装完毕了

06:01.030 --> 06:02.790
安装完毕之后现在着急启动项目吗

06:02.790 --> 06:03.550
不着急啊

06:03.550 --> 06:05.590
我们接下来还要做一些操作啊

06:05.590 --> 06:10.750
我们首先需要去修改这个mysgo的数据库的密码规则

06:10.750 --> 06:11.950
那么怎么修改呢

06:11.950 --> 06:13.590
我们心里连接到数据库

06:13.590 --> 06:16.350
mysgo.yout

06:16.350 --> 06:16.870
然后呢

06:17.870 --> 06:18.790
ok

06:18.790 --> 06:20.790
输入我们之前的这个密码

06:20.790 --> 06:22.670
就是杜伊666那个密码

06:22.670 --> 06:23.750
复制一下

06:23.750 --> 06:24.110
然后呢

06:24.110 --> 06:25.390
看守v回车

06:25.390 --> 06:25.590
好

06:25.590 --> 06:27.030
现在mysgo数据连上了

06:27.030 --> 06:27.990
连上之后呢

06:27.990 --> 06:31.990
我们要用下面的命令去修改这个密码规则

06:31.990 --> 06:33.830
为什么要修改密码规则呢

06:33.830 --> 06:35.870
因为我们这次用的这个项目啊

06:35.870 --> 06:37.830
就是这个后端的这个管理项目

06:37.830 --> 06:39.350
后说我们的接口项目呢

06:39.350 --> 06:40.230
它用的是coa

06:40.230 --> 06:43.350
coa里面用的一个插件去连接mysgo数据库的

06:43.350 --> 06:45.830
而它支持的这个密码规则的版本比较低

06:45.870 --> 06:48.750
我们现在安装的这个mysgo数据库的版本比较高

06:48.750 --> 06:49.230
所以呢

06:49.230 --> 06:49.910
它俩不兼容

06:49.910 --> 06:53.190
我们需要把我们现在安装的mysgo数据库的密码规则

06:53.190 --> 06:54.150
降一下版本

06:54.150 --> 06:56.110
让它和我们的项目去匹配啊

06:56.110 --> 06:56.790
那怎么做呢

06:56.790 --> 06:57.750
就是

06:57.750 --> 06:59.430
一条一条命令去执行呗

06:59.430 --> 07:01.030
use my circle

07:01.030 --> 07:01.910
然后呢

07:01.910 --> 07:03.430
alternative这个东西

07:03.430 --> 07:05.830
然后修改一下密码的过期时间

07:05.830 --> 07:08.870
然后再修改密码的这个规则

07:08.870 --> 07:09.270
ok

07:10.630 --> 07:11.670
那么修改完毕之后呢

07:11.670 --> 07:13.350
我们可以通过这条命令来查看一下

07:13.350 --> 07:15.630
是否已经修改成功了啊

07:15.630 --> 07:16.110
ok

07:16.110 --> 07:16.590
但现在呢

07:16.590 --> 07:17.670
下面显示一个表格

07:17.670 --> 07:21.070
如果表格这边显示的是mysgo native password的

07:21.070 --> 07:22.790
那就说明我们已经修改成功了

07:22.790 --> 07:24.550
同学们就可以把这个

07:24.550 --> 07:25.950
呃

07:25.950 --> 07:27.990
这一步就可以过了啊

07:27.990 --> 07:28.590
那么接下来呢

07:28.590 --> 07:29.190
还有什么呢

07:29.190 --> 07:31.030
就是我们要创建一个新的数据库

07:31.030 --> 07:31.390
为什么呢

07:31.390 --> 07:32.190
因为这个项目

07:32.190 --> 07:33.430
他要用到一个数据库

07:33.430 --> 07:34.990
mysgo是一个数据库软件

07:34.990 --> 07:37.510
那里面的数据库是要自己手上去创建的

07:37.510 --> 07:38.790
而我们这个项目里面呢

07:38.790 --> 07:40.230
我们刚才看到配软件里面

07:40.230 --> 07:40.830
发现

07:40.830 --> 07:41.750
这边有个deadbase

07:41.750 --> 07:44.150
就是他用到了一个叫view circle的数据库

07:44.190 --> 07:45.950
所以我们要给他创建这个数据库

07:45.950 --> 07:47.070
那么怎么创建呢

07:47.070 --> 07:48.750
叫做created database

07:48.750 --> 07:51.980
deadbase

07:51.980 --> 07:52.380
然后呢

07:52.380 --> 07:53.660
把这个名字放过来

07:53.660 --> 07:53.860
好

07:53.860 --> 07:54.380
那现在呢

07:54.380 --> 07:55.740
我们已经创建好数据库了

07:55.740 --> 07:57.460
那我们这个mysgo就可以退出了

07:57.460 --> 07:58.260
直接按q

07:58.260 --> 07:58.940
呃

07:58.940 --> 08:00.020
quit就可以了

08:00.020 --> 08:00.180
好

08:00.180 --> 08:01.020
clear

08:01.020 --> 08:01.660
然后呢

08:01.660 --> 08:02.500
那么接下来呢

08:02.500 --> 08:04.540
我们的代码就可以直接跑起来了

08:04.540 --> 08:05.740
那么跑这个项目呢

08:05.740 --> 08:06.940
我们用什么跑呢

08:06.940 --> 08:07.860
用pmr

08:07.860 --> 08:09.540
当然你也可以直接node.js

08:09.540 --> 08:09.980
node

08:09.980 --> 08:11.740
然后呢index.js上去跑

08:11.740 --> 08:12.860
但是我们说了

08:12.860 --> 08:14.620
这样的执行这个项目的话

08:14.700 --> 08:15.940
他是万一遇到错误什么

08:15.940 --> 08:17.220
他直接就当机了

08:17.220 --> 08:19.420
我们要用到我们的进程管理工具

08:19.420 --> 08:20.300
pmr

08:20.300 --> 08:21.700
直接start

08:21.700 --> 08:26.460
然后呢index.js

08:26.460 --> 08:26.780
ok

08:26.780 --> 08:27.460
我们来看一下

08:27.460 --> 08:29.460
这边应该是已经在执行了

08:29.460 --> 08:31.460
我们来呃先stop一下

08:31.460 --> 08:33.220
stopindex.js的

08:33.220 --> 08:34.540
因为我们之前做了一件事

08:34.540 --> 08:35.900
就是给他执行了

08:35.900 --> 08:37.100
我们重新运行一下

08:37.100 --> 08:39.420
npm重新start一下

08:39.420 --> 08:40.660
呃pmr start一下

08:42.300 --> 08:44.140
start

08:44.140 --> 08:44.380
好的

08:44.380 --> 08:45.020
那现在呢

08:45.020 --> 08:46.780
我们这个正常代码就上线了

08:46.780 --> 08:47.860
就是你看他online

08:47.860 --> 08:49.580
就是这个代码已经在运行了

08:49.580 --> 08:50.940
那么在运行的时候呢

08:50.940 --> 08:53.220
我们来看一下我们的网页请求

08:53.220 --> 08:53.820
我刷新

08:55.380 --> 08:55.580
哎

08:55.580 --> 08:57.780
怎么还是404的同学们

08:57.780 --> 08:58.060
好的

08:58.060 --> 08:59.100
我这边给大家解释一下

08:59.100 --> 09:00.500
为什么还是404啊

09:00.500 --> 09:01.060
你看

09:01.060 --> 09:01.740
现在呢

09:01.740 --> 09:03.700
我们通过这个

09:03.700 --> 09:06.180
瀏覽器发送网页请求

09:06.180 --> 09:07.700
那njx接受到请求之后呢

09:07.700 --> 09:09.340
去我们的view的项目里面

09:09.340 --> 09:10.700
就是我们那个I love I fee

09:10.700 --> 09:12.900
那个文件家里面找到index.tml

09:12.900 --> 09:14.620
让它返回给了瀏覽器

09:14.660 --> 09:15.620
那么在瀏覽器里面呢

09:15.620 --> 09:17.380
在解析完这个view项目之后呢

09:17.380 --> 09:19.300
view项目里面会发送一个请求

09:19.300 --> 09:21.220
就接口请求到服务器

09:21.220 --> 09:22.220
它会发送这个

09:22.220 --> 09:23.460
htpm号双鞋杠

09:23.460 --> 09:24.300
I love I fee

09:24.300 --> 09:26.500
点CUM杠API

09:26.500 --> 09:27.940
注意他后面带了个API

09:27.940 --> 09:29.380
然后发送给index

09:29.380 --> 09:31.620
那么index拿到这个请求之后呢

09:31.620 --> 09:34.660
他应该是要转发给我们的nose.s项目的吧

09:34.660 --> 09:36.340
但现在他没有转发

09:36.340 --> 09:37.380
因为我们没对他

09:37.380 --> 09:38.980
没对他做任何配置

09:38.980 --> 09:40.500
他不知道要往这转发

09:40.500 --> 09:42.180
所以接下来我们要对index做配置

09:42.180 --> 09:43.940
让他遇到了

09:43.940 --> 09:47.860
路径里面是以API-API这样的东西开头的

09:47.860 --> 09:49.300
就转发给nose.s

09:49.300 --> 09:50.620
那怎么配置呢

09:50.620 --> 09:51.740
来 这边要给大家写了

09:51.740 --> 09:54.780
就是我们在之前的index配置文件中

09:54.780 --> 09:56.700
需要添加反向带领的配置

09:56.700 --> 09:59.100
那好 我们打开我们这个

09:59.100 --> 10:01.020
服务器端的这个控台啊

10:01.020 --> 10:01.620
然后呢

10:01.620 --> 10:03.900
我们cd.gum attic

10:03.900 --> 10:06.100
然后呢index

10:06.100 --> 10:08.420
然后呢里面的configure d

10:08.420 --> 10:09.260
ok 这里面呢

10:09.260 --> 10:10.780
就是由我们之前写好的

10:10.820 --> 10:12.500
ilovefe.config文件

10:12.500 --> 10:13.620
我们去编辑它

10:13.620 --> 10:16.940
ilovefe.config

10:16.940 --> 10:17.900
好 那么在这呢

10:17.900 --> 10:20.660
我们需要把光标移动到这个

10:20.660 --> 10:21.780
到府第二个大型号

10:21.780 --> 10:23.100
就是这个location下面

10:23.100 --> 10:24.060
这个下面

10:24.060 --> 10:24.420
然后呢

10:24.420 --> 10:25.180
在这啊

10:25.180 --> 10:28.180
我们按一个o件

10:28.180 --> 10:30.420
ok 这边我们要按o件啊

10:30.420 --> 10:31.700
当然我当代是中文

10:31.700 --> 10:33.900
给大家再演示一下

10:33.900 --> 10:34.940
我按一下o件

10:34.940 --> 10:35.780
你会发现呢

10:35.780 --> 10:37.740
它就可以进行invert了

10:37.740 --> 10:39.460
而且它是新开了一行啊

10:39.460 --> 10:40.300
然后我敲个tip键

10:40.300 --> 10:41.500
当然你可以不能敲tip键

10:41.500 --> 10:42.340
无所谓啊

10:42.340 --> 10:43.700
你直接把我们这个代码

10:43.700 --> 10:44.380
configurec

10:44.380 --> 10:44.980
configurev

10:44.980 --> 10:45.900
粘进来

10:45.900 --> 10:47.780
那如果说是你觉得它难看

10:47.780 --> 10:50.900
你可以用光标移动到固定的位置

10:50.900 --> 10:51.860
比如说我移动到location

10:51.860 --> 10:53.100
让按个i

10:53.100 --> 10:53.940
然后呢

10:53.940 --> 10:55.100
我delete

10:55.100 --> 10:56.140
然后呢tip键

10:56.140 --> 10:57.980
当然你可以敲空格啊

10:57.980 --> 10:59.100
把它敲对齐

10:59.100 --> 10:59.940
这都可以啊

10:59.940 --> 11:01.060
但是这个里面

11:01.060 --> 11:02.620
其实对齐来说

11:02.620 --> 11:04.260
并不是那么重要啊

11:04.260 --> 11:06.220
如果说是你有一个

11:06.220 --> 11:07.140
怎么说呢

11:07.140 --> 11:08.220
呃

11:08.220 --> 11:09.460
强迫症的心的话

11:09.500 --> 11:10.380
你可以把它挪一下

11:10.380 --> 11:10.580
ok

11:10.580 --> 11:11.940
现在我已经挪好了啊

11:11.940 --> 11:12.580
然后呢

11:12.580 --> 11:13.660
接下来挪好之后呢

11:13.660 --> 11:14.500
按est

11:14.500 --> 11:16.100
然后的冒号wq

11:16.100 --> 11:16.540
然后呢

11:16.540 --> 11:17.380
敲回车

11:17.380 --> 11:19.820
我们就可以把这个代码保存下来了

11:19.820 --> 11:20.660
那么保存下来之后

11:20.660 --> 11:21.460
配置已经改好了

11:21.460 --> 11:23.500
我们需要njx

11:23.500 --> 11:25.380
杠s

11:25.380 --> 11:26.660
reload

11:26.660 --> 11:28.100
reload

11:28.100 --> 11:28.460
然后呢

11:28.460 --> 11:29.620
把我们njx重启一下

11:29.620 --> 11:30.740
因为改了配置文件

11:30.740 --> 11:31.900
你必须得重启啊

11:31.900 --> 11:32.820
所以重启

11:32.820 --> 11:33.700
那么重启之后呢

11:33.700 --> 11:35.060
接下来我们再来刷新页面

11:36.820 --> 11:36.940
好

11:36.940 --> 11:37.460
你会发现

11:37.460 --> 11:38.140
现在呢

11:38.140 --> 11:40.740
我们代码已经能正常访问接口了

11:40.740 --> 11:41.420
ok

11:41.420 --> 11:42.740
那已经不报错了

11:42.740 --> 11:44.820
因为我们的接口已经至少能请求到了

11:44.820 --> 11:46.340
嗯

11:46.340 --> 11:46.660
好嘞

11:46.660 --> 11:48.020
那为什么没数据呢

11:48.020 --> 11:49.540
因为我们数据库里面是空的

11:49.540 --> 11:50.780
我们数据库里面是空的

11:50.780 --> 11:51.420
所以现在呢

11:51.420 --> 11:52.780
我们接口已经不输好了

11:52.780 --> 11:53.340
并且呢

11:53.340 --> 11:55.260
我们的前端项目已经不输好了

11:55.260 --> 11:57.140
那还差一个什么呢

11:57.140 --> 11:58.780
就是后端的管理项目

11:58.780 --> 11:59.980
那么其实后端管理项目

11:59.980 --> 12:01.060
就是我们刚才

12:01.060 --> 12:02.620
部署上去的nose.js项目

12:02.620 --> 12:02.900
好

12:02.900 --> 12:03.380
ok

12:03.380 --> 12:04.180
那么下节课里面

12:04.180 --> 12:05.540
我们教大家怎么去把这个

12:05.540 --> 12:07.220
后端管理项目给它部署好

12:07.220 --> 12:07.380
好

12:07.380 --> 12:08.700
那这一刻我们先停在这

