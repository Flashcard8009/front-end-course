WEBVTT

00:00.000 --> 00:04.480
ok 这些课的话 咱们来看一下这个知识点 叫做portals

00:05.280 --> 00:13.920
portal的话 它其实它被翻译成叫做传送门 之前的话 这个袁老师在讲的时候 把它叫做这个插槽

00:14.560 --> 00:21.760
其实这个插槽的话 可能会让同学们有一些误解 因为之前的话 咱们学过这个wewe里面 是不是学过插槽

00:22.240 --> 00:28.400
就是那个snot 在这个react里面和we里面那个插槽比较相像的 是不就是那个

00:29.360 --> 00:34.480
pops.children 对不对 那个的话 其实和这个wewe的插槽比较相似

00:35.040 --> 00:38.800
那这个portals portals的话 其实就应该是什么 就应该是传送门

00:39.520 --> 00:42.400
其实这个portal 你去插单词的话 它就是传送门的意思

00:42.960 --> 00:49.040
有一款那个游戏 非常经典的游戏 叫做传送门那个游戏 那标题就要做这个portal

00:49.600 --> 00:54.400
ok 好 然后加这个portal 它究竟它要做什么事情呢

00:54.880 --> 00:58.480
它要做的事情 实际上也和这个传送门非常相似

00:59.200 --> 01:03.600
确实就像一个传送门一样 它干嘛呢 它是将这个指节点

01:04.160 --> 01:09.680
渲染到什么呢 渲染到这个副主剑以外的这个动物节点

01:10.640 --> 01:12.800
正常情况下的话 我们一般就是你这个

01:13.600 --> 01:17.760
这个指节点啊 你写在哪个位置 我们就渲染在哪个位置

01:18.320 --> 01:22.480
对不对 但是偶尔的话会有一些那么特殊的一些情况

01:23.040 --> 01:26.960
啊 我们需要把这个指节点渲染到这个其他的这个位置

01:27.760 --> 01:33.760
那么我们就可以干嘛呢 我们就可以开一个这个传送门啊 直接相当于就有点类似于把它传送过去

01:34.560 --> 01:39.040
ok 而这个的话是这个react里面 它提供了这个鱼把

01:39.440 --> 01:43.440
注意它这边它是这个react dorm 啊 因为它是和这个渲染相关的

01:43.760 --> 01:48.160
啊 说它这边是这个react dorm这个枯啊 大家这个react dorm

01:48.560 --> 01:51.360
这边的话也是同样是一个什么 什么静态方法

01:52.080 --> 01:55.280
对不对 你看就是静态方法 而这边呢 接受两个参数

01:56.160 --> 01:59.040
一个是撬的 一个是container

01:59.840 --> 02:04.400
撬的是什么 撬的的话就是你要渲染的这个指援数啊 你究竟要渲染哪个

02:04.720 --> 02:09.120
而container是什么呢 container就是你要把这个指援数渲染到哪里

02:09.920 --> 02:14.720
ok 好 那我们接下来我们来具体来看一下啊 我们首先的话还是先来看一下

02:15.280 --> 02:20.560
从这两个点入手 第一个的话是什么时候用这玩意儿啊 在这边如何来用啊

02:21.200 --> 02:26.400
好 我们这边呢 先来看这么一个场景 然后把这个场景我把它写一下啊

02:27.280 --> 02:32.080
好 我们把这个之前 这个是上级课的啊 上级课的 上级课我把

02:32.800 --> 02:35.200
不需要的我就把它删了哈 这个hoc就不要了

02:35.840 --> 02:38.000
youtube是youtube是留着吧

02:38.960 --> 02:41.120
好 components components这些不需要了

02:42.000 --> 02:45.120
把它删了 好 那把这个app app重新

02:46.320 --> 02:48.640
把它弄简单一点啊 这边Hello

02:49.600 --> 02:50.240
保存

02:52.000 --> 02:57.840
ok 啊 现在的话 这边就是一个干干净净的啊 好 然后接下来的话

02:58.640 --> 03:05.040
啊 我们这边 这边来改造一下 这边的话 我们首先先写一个这个弹出框 我们这边新建一个

03:05.680 --> 03:06.960
新建一个叫做model

03:08.640 --> 03:09.520
点gsta

03:10.480 --> 03:14.720
好 把这个放下去 这个是一个什么呢 这个是一个弹出框

03:15.680 --> 03:17.360
那是弹出框

03:17.840 --> 03:18.640
rsf

03:19.520 --> 03:27.360
啊 这个model model的话 然后在这边style style 这边有一些这个样式 把样式把它拿过来啊 这边呢就是摩太框啊

03:28.320 --> 03:33.920
摩太框啊 这个样式样式我就直接从笔记里面拿过来了啊 样式就不带这些了

03:34.480 --> 03:36.640
好 这边是它相关的这个样式

03:38.480 --> 03:43.200
ok 啊 看一下这个样式啊 这边设置了一个宽 设置了一个高 一个这个border

03:43.520 --> 03:46.640
好 大家这边绝对定位 对吧 大家这边通过这个

03:47.360 --> 03:52.720
计算啊 然后得到它的left得到top啊 大家都是一些很常规的样式啊

03:53.280 --> 03:56.880
好 把它设置了啊 这边pop pop不需要啊 pop上了

03:57.440 --> 04:01.760
好 这个弹出框就有了 有了之后 然后接下来来到我们的这个app这边

04:02.400 --> 04:07.280
app 这边的话 我们这边就是想通过一个按钮 点击之后他就把这个弹出框

04:07.680 --> 04:12.800
显示出来啊 再点击的话他这个弹出框就消失啊 首先我们这边的话需要一个什么呢

04:13.280 --> 04:19.920
需要一个状态 对吧 啊 这边use state需要一个状态 好 然后再让我们这边

04:20.320 --> 04:24.400
const一个easy shoe啊 这边呢是set

04:25.840 --> 04:26.960
set easy shoe

04:27.840 --> 04:32.480
然后等于一个use state啊 一开始是什么呢 一开始是force

04:33.680 --> 04:37.280
ok 好 然后加这边这边的话它是app主线

04:38.240 --> 04:42.000
app主线 我们还是把它放到这个he里面吧

04:44.270 --> 04:49.630
app主线 好 然后接下来这边的话有一个这个button button的话 这边就是显示

04:51.390 --> 04:51.870
显示

04:53.710 --> 04:54.190
显示

04:55.230 --> 04:59.470
隐藏 好 然后接下来这边这边on click

05:01.230 --> 05:02.030
on click

05:05.660 --> 05:09.260
好 这边这边就是干嘛 这边的话就是set easy shoe

05:09.820 --> 05:15.900
啊 然后把这个字给他干嘛 是不是取个范 对吧 啊 这边一直秀 去范

05:16.380 --> 05:21.020
好 然后加这边下面 下面的话就根据什么呢 根据你这个一直秀的这个字

05:21.420 --> 05:26.220
来决定是否显示这个模台框啊 我们这边让我把这个模台框把它引进来

05:26.780 --> 05:27.740
这边import

05:29.020 --> 05:29.820
model

05:29.820 --> 05:30.300
from

05:31.500 --> 05:32.940
这个components

05:33.740 --> 05:34.780
下面的这个model

05:35.420 --> 05:40.380
ok 好 人家这里 这里的话就根据什么 是不是根据你的easy shoe

05:40.940 --> 05:45.180
对吧 这边写个三目运算服 如果他为真 让我就显示他

05:47.260 --> 05:47.820
显示他

05:50.110 --> 05:53.790
ok 否则的话这边就干嘛了 这边的话就显示为空

05:54.990 --> 05:56.670
好 来 我们这边 我们来看一下效果啊

05:57.630 --> 06:00.990
好 回到这边 这边app主键 点一下显示

06:01.470 --> 06:04.910
这边这个模台框是不是出来了 好 然后加这边的话点击隐藏

06:05.230 --> 06:09.630
这边模台框是不是消失了 ok 效果是没有任何问题的

06:10.190 --> 06:14.270
首先我们要明确一点 效果是没有问题的啊 他这边的话问题是什么呢

06:14.270 --> 06:18.830
他主要是为了解决什么样的问题呢 就你看一下他这边这个模台框他渲染在哪里

06:20.030 --> 06:20.990
在这边你看一下

06:21.710 --> 06:25.630
比如说我们这边的话我们把这个显示出来 显示出来之后你这边看一下

06:26.110 --> 06:29.950
他是不是渲染在整个这个div这一块

06:30.910 --> 06:35.310
对不对 显示在这 就默认情况下的话 你这个组件是不是就写在这了

06:35.870 --> 06:41.710
对不对 你组件的话就是写在这个位置了 组件写在这个位置 那我自然而然就给他干嘛

06:42.110 --> 06:43.150
渲染到这个位置

06:43.790 --> 06:45.390
对不对 但是从这种

06:46.030 --> 06:51.150
就是html结构逻辑来讲 我们这个模台框的话应该是干嘛 是不是单独

06:51.790 --> 06:56.910
是不是就是这个结构上面是不是应该是单独是一块 而不应该是和上面的这个div

06:57.390 --> 07:02.270
是一块 就把这个div把它折叠起来 他应该是什么 是不是单独在这一块

07:03.470 --> 07:09.150
对不对 我相信大家之前的话都写过这个模台框 模台框的话一般我们都是什么 单独

07:09.790 --> 07:13.950
在这一块 对不对 而不应该干嘛 不应该就是渲染在这个位置

07:14.270 --> 07:15.230
这是首先第一个

07:15.870 --> 07:20.590
那有论人说 无所谓嘛 渲染到哪里 无所谓 而实际上这边的话还会有个问题

07:21.150 --> 07:25.390
什么问题呢 就是因为你现在你的这个模台框是渲染在

07:26.110 --> 07:27.550
整个这个div里面的

07:28.270 --> 07:35.310
对不对 那就会意味着什么呢 意味着就比如说我这边有一些这个样式的这个该这个改变

07:36.110 --> 07:37.230
会不会影响到他

07:38.350 --> 07:38.990
会不会影响到

07:39.710 --> 07:44.750
这不一定会影响啊 对不对 一定会影响啊 比如说我这边的话看一下

07:45.790 --> 07:47.390
啊 我现在的话这边是局中的

07:48.190 --> 07:52.590
对吧 好 然后现在的话我针对这个div 我给他设置一个样式

07:53.550 --> 07:54.190
style

07:56.590 --> 07:59.870
然后这边设置什么呢 我这边的position relative

08:00.430 --> 08:06.830
我把它设置成相对定位了啊 那既然你这边你看你这个绝对这个这个模台框 这边设置的是什么

08:06.830 --> 08:07.710
是绝对定位

08:08.110 --> 08:11.230
哎 你看这边 这边他的这个参考点就变了

08:11.870 --> 08:14.350
看到没有 跑到哪去了 是跑到上面去了

08:14.990 --> 08:21.230
啊 也就是说这边的话是第二个问题 第二个问题就是你把这个模台框渲染在这里的话

08:21.310 --> 08:27.310
那必然意味着什么 意味着你就是你的这个负极啊 负极了这些

08:27.950 --> 08:32.190
啊 多么节点 如果一旦设置样式的话 这一定会影响到他

08:33.150 --> 08:36.670
对不对 但是你如果把它单独提出来的话就不存在这个问题

08:37.470 --> 08:40.670
ok 说我们这边的话我们就可以使用这个portals

08:41.550 --> 08:45.230
那如何用这个portals呢 很简单啊 很简单

08:45.470 --> 08:47.870
你这边的话 我建议你这边去官网看一下

08:48.670 --> 08:54.030
官网在这个位置 官网也没有说太多啊 看一下啊 你看整个官网也没有说太多

08:54.510 --> 08:57.310
ok 啊 怎么用 很简单

08:57.790 --> 09:01.070
直接这边的话 这个rektdom.createportal

09:01.790 --> 09:06.830
啊 用这个方法 用这个方法 大家这边这个是你要渲染的内容啊 这边是你要渲染到的这个

09:07.230 --> 09:13.870
位置 ok 好 那回到我们这边 我们这边的话 我们就应该修改哪里呢 我们就应该修改这边

09:14.830 --> 09:20.110
我们这边的话 之前是不是直接返回到一段ges差 对不对啊 之前

09:21.950 --> 09:23.150
之前是

09:24.270 --> 09:29.790
直接返回的一段ges差 那么现在

09:30.670 --> 09:31.870
那么现在

09:33.470 --> 09:37.550
我们就通过什么呢 通过这个portals

09:39.660 --> 09:41.980
portals来指定

09:42.380 --> 09:45.580
这段ges差

09:46.140 --> 09:48.300
渲染到哪里

09:49.420 --> 09:52.940
ok 那你这边呢 首先先把这个portals 你先把他引进来吧

09:53.500 --> 10:00.160
这边呢 我们这边结构 结构啊 这边呢 他叫做这个createportal

10:01.360 --> 10:03.040
createportals

10:04.240 --> 10:06.480
from 他是这个rektdom

10:07.120 --> 10:07.920
这个库里面的

10:08.720 --> 10:10.880
ok 好 完事之后 然后加这边

10:11.840 --> 10:15.680
这边就应该干嘛呢 这边的话就是应该是调用createportal

10:16.560 --> 10:18.720
他是一个什么 他是一个方法

10:19.600 --> 10:25.600
对不对 他是个方法啊 方法里面接收什么 接收是不两个参数 第一个就是我要渲染的这个ges差

10:26.160 --> 10:29.440
啊 第二个是什么呢 第二个就是我要渲染到哪个位置

10:30.000 --> 10:32.720
啊 我渲染到哪个位置啊 那这边的话 我们这边

10:33.680 --> 10:36.400
我们添加一个啊 这边我们添加一个

10:40.140 --> 10:46.620
啊 我们在这个div啊 这个是我们的根组件吧 根组件 然后接下来啊 我们这边外层还得包一个啊

10:47.180 --> 10:51.900
稍等 我们这边外层包一个 然后加这边给个id 叫做root

10:52.540 --> 10:54.300
好 然后接下来把这个div

10:54.860 --> 10:55.580
把它放进去

10:56.300 --> 10:57.020
啊 把它放进去

10:57.500 --> 11:00.780
ok 你现在的话 你的这个model 是不是仍然是现在这个位置啊

11:01.340 --> 11:05.500
对不对 好 大家这边的话 我们添加一个div 这个div的话 我们给他一个

11:05.820 --> 11:06.700
就叫做model

11:07.660 --> 11:09.500
啊 我这边呢 添加了一个这个div

11:09.900 --> 11:15.500
好 回头在这边 这边的话我要渲染到哪个位置啊 我要渲染到啊 这边的话就是document

11:17.100 --> 11:19.020
点get element by id

11:19.660 --> 11:21.900
好 然后接下来的话 这边model

11:23.500 --> 11:26.380
看到没有 我要把这一段ges差

11:26.860 --> 11:31.260
渲染到哪个位置呢 渲染到这边啊 document.get element by id

11:31.740 --> 11:35.820
啊 找到这个动物元素啊 哪个动物元素啊 是model这个

11:36.460 --> 11:38.220
啊 也就是说哪里 住就这里

11:39.180 --> 11:43.180
对不对 就这里啊 回头的话 他就会被渲染到这个位置

11:43.660 --> 11:47.820
好 那我这边的话 我要渲染到ges差是什么呢 我要渲染到ges差是不是 就是这一块

11:48.780 --> 11:51.180
对吧 好 那我这边的话 把它拿过来

11:52.140 --> 11:56.860
ok 拿过来 各式画一下 好 然后接下来这边干嘛呢 这边return

11:57.420 --> 11:58.780
啊 下面下面就不要了

11:59.820 --> 12:04.700
看到没有 很简单啊 很简单 就这么一改就可以了啊 相当于用这个creator

12:05.100 --> 12:09.980
portal这个方法啊 稍微就是把它就是指定一下 要渲染到哪个位置

12:10.460 --> 12:12.700
就ok了 好 那我们这边保存

12:13.980 --> 12:19.260
好 保存之后 然后在这边来看一下啊 看一下 哎 这边爆错了

12:20.380 --> 12:26.380
啊 create portal 我这边是不是写错了啊 这里这里这里写错了 这边是create portal

12:27.420 --> 12:28.620
create portal

12:29.580 --> 12:33.180
ok 好 保存 ok 好 大家这边先看功能

12:34.380 --> 12:38.860
功能什么没问题啊 对不对 功能没问题 好 大家这边的话来看这个结构

12:39.180 --> 12:43.500
其实结构肯定是没问题 因为你发现他这都干嘛了 他这是不是都正常了呀

12:44.060 --> 12:49.500
刚才的话我们这边我们这个app这边是添加了什么的 是不是这边添加了这个position relative的

12:50.140 --> 12:53.340
对不对 你刚才的话这个模台框跑到哪个位置来了 所以跑到这个位置来了

12:53.740 --> 12:57.660
对不对 所以他肯定是正常的啊 好来还是看一下吧 看一下这个结构

12:59.260 --> 13:01.100
啊 你看他这边route

13:01.900 --> 13:04.060
哎 怎么有两个route

13:05.340 --> 13:10.990
哦 怎么会有两个route啊 我看一下

13:12.750 --> 13:16.670
啊 这边route 然后下这里啊 这里这里他本身是不是有个route

13:17.230 --> 13:19.710
对吧 好 那我们这边这样子 我把这儿改一下

13:20.430 --> 13:22.190
把这儿改一下 我们这边的话直接

13:23.310 --> 13:26.110
啊 这边就这边把这个di位直接写到这里

13:26.830 --> 13:33.470
需要这里可不可以啊 对不对 和这个和这个route平级啊 回头的话你整个这个模台框就渲染到这个位置

13:34.190 --> 13:36.510
ok 好 大家这边这边这个时候就不需要了

13:37.310 --> 13:40.910
这个就不需要了啊 ok 啊 重新保存一下

13:41.550 --> 13:48.030
保存了之后人家这边回到这边重新刷新一下 ok 啊 你看这边这边呢 是这个route

13:48.910 --> 13:53.230
首先看一下功能吧 功能没问题 对不对 好要回头到你看一下这个模台框

13:53.710 --> 13:56.430
这模台框是不是就渲染在这个位置了 对不对 你看

13:57.390 --> 14:02.270
可不可以啊 他就渲染在这个位置了啊 就实现了什么 是不是实现了我们这边指定

14:02.590 --> 14:04.510
你想要渲染到哪个位置

14:05.470 --> 14:12.990
对不对啊 这个就是关于这个portal的这个使用啊 非常简单啊 非常简单 大家下去可以把这个例子把它写一下

14:13.790 --> 14:15.470
好 这边的话 然后还有一个知识点

14:16.350 --> 14:20.750
还有一个知识点是什么 就是关于这个portal是他的一个这个事件的这个帽炮

14:21.470 --> 14:24.510
好 在在这边 在这边

14:25.230 --> 14:29.790
好 就是我们这边的话 我们需要就是注意一下 就是你这边在使用这个portal的时候

14:30.270 --> 14:35.630
他所渲染的这个元素啊 比如说我们现在渲染的是什么 我们现在渲染的是不是这个模台框

14:36.190 --> 14:40.670
对不对 好这个模台框 然后接下来他这边在触发事件的时候

14:41.070 --> 14:43.470
他的一个帽炮的一个问题

14:44.590 --> 14:45.310
帽炮的问题

14:45.870 --> 14:52.430
就是我们以这个 我们刚才写的那个例子为例 就我们这边的话 我们看上去这个模台框的话是渲染在哪里的

14:53.150 --> 14:55.390
就你从这边来看 是不是渲染在这个位置了

14:56.110 --> 14:59.070
对不对 但是他这边的话 你去看他的那个组件数

14:59.630 --> 15:05.950
你看组件数的话 你会发现这个组件仍然是在什么呢 仍然是在app下面 我们这边来看一下嘛

15:07.150 --> 15:09.470
呃 组件数在这边

15:09.870 --> 15:18.510
看了没有 你看 仍然是什么 这边app app下面什么 是model对不对 然后他帽炮的话 他是按照你这个组件数

15:19.150 --> 15:24.510
来帽炮的啊 按照你组件数来帽炮的 这意味着什么 意味着我这边

15:25.390 --> 15:26.910
我这个model

15:27.790 --> 15:35.070
啊 我这边如果就是触发点击事件的话 这点击事件仍然会帽炮到哪里 是不是 仍然会帽炮到

15:35.390 --> 15:36.590
这个app组件上面

15:37.310 --> 15:43.630
对不对 说你这边的话 应该根据什么呢 根据这个组件数 而不应该根据什么呢 不应该根据这边实际的这个

15:44.270 --> 15:48.510
多么啊 实际多么的话 那你看这边 这边他关这个app什么事

15:49.230 --> 15:56.110
对不对啊 这边的话 你这个modelmodel上面就是body了 对吧 上面就是body了好 来我们这边让我们来试一下啊

15:56.670 --> 15:57.310
来试一下

15:58.670 --> 16:00.110
好 回到我们的代码

16:02.290 --> 16:09.090
好 我们这边的话 在这个app上面啊 这边app app上面的话 这样我们这边 我们给他绑定一个点击事件

16:10.210 --> 16:12.210
好 我们这边啊 click

16:14.320 --> 16:18.480
好 这边 这边的话 然后要做的事情就很简单啊 这边就cancel

16:19.200 --> 16:19.760
点log

16:20.480 --> 16:22.240
对吧啊 这边就是app

16:22.960 --> 16:23.360
组件

16:25.440 --> 16:26.080
被点击了

16:29.730 --> 16:36.930
ok啊 回头的话 你这边呢 就是啊 正常来讲你点什么这个he这些 是不是他会触发 对吧 他会向上冒泡

16:37.170 --> 16:41.490
啊 但是我们这边让我们回头我们试一下啊 我们点这个model啊 我们这边来看一下

16:42.370 --> 16:43.090
好 这边刷新

16:44.530 --> 16:49.810
刷新这边出来啊 出来他这边第一次他被点击啊 这个正常的 因为我们刚才点了什么 这点这个按钮

16:50.210 --> 16:54.530
对吧 包括你这边点这个标题 这边也会触发啊 这个是正常的啊 关键是这里

16:55.410 --> 16:57.970
关键是这里啊 你看这边现在这个动物元素这边

16:58.690 --> 17:03.810
啊 这边的话和这个路头完全是这个平极的 对吧 但是你看我这边我点击这个模台框

17:04.370 --> 17:08.370
看到没有 然后点击模台框 仍然是会干嘛 是不是触发这上面的这个

17:08.930 --> 17:14.770
点击事件啊 有时候我这边的这个点击事件 仍然会干嘛 是不是向这个app组件这边冒泡

17:15.250 --> 17:19.170
冒泡到他身上来 对不对 为什么 就是因为他是根据这个

17:19.810 --> 17:20.370
组件数

17:21.090 --> 17:21.970
来进行冒泡的

17:22.690 --> 17:26.850
ok 这个要注意啊 这个要注意 这个的话在他这个官网这边说了的

17:28.210 --> 17:34.130
官网在这个位置啊 通过这个portal进行这个事件冒泡啊

17:34.850 --> 17:37.410
他这边 我看在哪一句话啊

17:38.050 --> 17:46.290
他放置到这个行为一致啊 这里 这里 就在这里啊 尽管这个portal可以被放置在动物树中的任何地方

17:46.850 --> 17:48.930
啊 但在任何其他方面

17:49.250 --> 17:54.770
他的行为和普通的这个react指节点行为一致 特别是这一句话

17:55.330 --> 17:59.650
ok 这个由于portal人存在于动物这个react数

18:00.210 --> 18:03.090
于什么 于动物树中的位置

18:03.490 --> 18:03.890
无关

18:04.610 --> 18:10.290
看到没有啊 所以他这边什么像context这些特性都是不变的啊 包括这个冒泡啊 这里看到没有

18:10.690 --> 18:15.250
一个由这个portal内部出发的事件会一直冒泡到什么呢

18:15.970 --> 18:21.970
这个冒泡到这个react数的这个主线而非什么呢 而非动物数的主线

18:22.690 --> 18:28.450
怎么样啊 这在官网也说了的啊 大家下去的话把这个官网官网这个例子把它看一下

18:28.770 --> 18:33.490
他这个portals也没讲多少 ok 主要就是其实就是我们刚才讲的那两个内容啊

18:34.530 --> 18:40.530
好 这就是关于这个portals啊 其他就没什么了 ok 大家下来的话把这个

18:40.850 --> 18:47.090
看到上的这个代码 把它看一看 再把它写一下啊 这些课就先到这里啊 再见

