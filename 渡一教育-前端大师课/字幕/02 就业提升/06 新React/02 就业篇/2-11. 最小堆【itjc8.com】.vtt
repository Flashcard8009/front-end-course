WEBVTT

00:00.110 --> 00:02.110
OK 欢迎回来

00:02.110 --> 00:05.110
好 这节课的话 咱们来看一下这个最小队

00:05.110 --> 00:08.110
这最小队的话 我们之前在那个圆码

00:08.110 --> 00:11.110
就看那个scheduler过那个圆码的时候

00:11.110 --> 00:13.110
我们都看到好几次了

00:13.110 --> 00:16.110
就在哪个位置呢 就在这边

00:16.110 --> 00:19.110
这边它那个就是比较推入任务的时候

00:19.110 --> 00:23.110
推入任务用的是那个push

00:23.110 --> 00:26.110
对不对 比较这个 就是push

00:26.110 --> 00:28.110
好 我们这边记录一下

00:28.110 --> 00:33.110
在scheduler中

00:33.110 --> 00:40.110
使用了这个最小队的这个数据结构

00:40.110 --> 00:46.110
来对这个任务进行排序

00:46.110 --> 00:49.110
对吧 让我们看到了如下的方法

00:49.110 --> 00:51.110
比较这边push

00:51.110 --> 00:54.110
这个的话是推入一个任务

00:54.110 --> 00:57.110
像这个队列中

00:57.110 --> 00:59.110
应该是像数组 它用的是数组

00:59.110 --> 01:03.110
像数组中推入一个任务

01:03.110 --> 01:05.110
对不对 再比如说什么呢

01:05.110 --> 01:07.110
再比如说pop

01:07.110 --> 01:09.110
这边搜一搜 比较pop

01:09.110 --> 01:12.110
你看到这边 这边push,pop,pik

01:12.110 --> 01:17.110
都是从schedulerminhap里面倒入进来的

01:17.110 --> 01:19.110
比较这边 这个是什么

01:19.110 --> 01:21.110
这个是弹出一个任务

01:21.110 --> 01:31.620
这个是从数组中弹出一个任务

01:31.620 --> 01:37.060
然后还有一个是pik

01:37.060 --> 01:39.060
比较这边pik

01:39.060 --> 01:40.060
这个是什么

01:40.060 --> 01:42.060
拿一个任务出来

01:42.060 --> 01:45.060
对不对 获取一个任务

01:45.060 --> 01:50.060
从这个数组中

01:50.060 --> 01:53.060
获取这个第一个任务

01:53.060 --> 01:55.060
OK 那我们看到这边

01:55.060 --> 01:57.060
它在这个scheduler里面

01:57.060 --> 01:59.060
频繁的用到了这个

01:59.060 --> 02:01.060
这边它的那个就是对列

02:01.060 --> 02:02.060
对列的话用的是什么

02:02.060 --> 02:04.060
对列的话是不是就是两个数组

02:04.060 --> 02:05.060
对不对

02:05.060 --> 02:07.060
好 我看在哪个位置

02:07.060 --> 02:09.060
在这边 这里

02:09.060 --> 02:12.060
这边就是两个数组

02:12.060 --> 02:15.060
这个是两个任务对列

02:15.060 --> 02:17.060
下这上面吧

02:17.060 --> 02:20.060
两个任务对列

02:21.060 --> 02:23.060
两个任务对列

02:23.060 --> 02:24.060
OK

02:24.060 --> 02:25.060
好 那么这边的话

02:25.060 --> 02:27.060
其实大家要看懂这个代码

02:27.060 --> 02:28.060
要看懂这个代码

02:28.060 --> 02:30.060
实际上就是需要你什么呢

02:30.060 --> 02:32.060
需要你对这个最小堆

02:32.060 --> 02:34.060
有一定的这个了解

02:34.060 --> 02:35.060
所以说我们这边

02:35.060 --> 02:36.060
我们这堂课

02:36.060 --> 02:38.060
我们来给大家讲一讲

02:38.060 --> 02:39.060
这个最小堆

02:39.060 --> 02:41.060
就是这边它应该是叫做

02:41.060 --> 02:43.060
二插堆

02:43.060 --> 02:45.060
二插堆

02:45.060 --> 02:48.500
二插

02:48.500 --> 02:50.500
二插堆

02:50.500 --> 02:53.500
二插堆 基本知识

02:53.500 --> 02:55.500
以及这个react中

02:55.500 --> 02:59.500
react中对这个最小堆

02:59.500 --> 03:04.500
最小堆的应用

03:04.500 --> 03:05.500
OK

03:05.500 --> 03:08.500
我们分为这两个部分来讲

03:08.500 --> 03:10.500
好

03:10.500 --> 03:11.500
首先的话

03:11.500 --> 03:12.500
我们来看一下

03:12.500 --> 03:14.500
什么是二插数

03:14.500 --> 03:16.500
二插数

03:16.500 --> 03:18.500
这个的话是一种数据结构

03:18.500 --> 03:19.500
所谓二插数

03:19.500 --> 03:22.500
所谓二插数

03:22.500 --> 03:24.500
指的是

03:24.500 --> 03:25.500
什么呢

03:25.500 --> 03:27.500
就是一个副结点

03:27.500 --> 03:29.500
只能有什么呢

03:29.500 --> 03:31.500
只能有

03:31.500 --> 03:34.500
只能有这个一个

03:34.500 --> 03:37.500
一个或者两个

03:37.500 --> 03:39.500
指结点

03:39.500 --> 03:40.500
OK

03:40.500 --> 03:41.500
你不能多于两个

03:41.500 --> 03:42.500
比如说我们这边画图

03:42.500 --> 03:44.500
这几颗会画大量的图

03:44.500 --> 03:45.500
OK

03:45.500 --> 03:47.500
会有大量的这个画图

03:47.500 --> 03:49.500
把这个放到下面

03:49.500 --> 03:51.500
比如说像这个

03:51.500 --> 03:53.500
我们这边新建议

03:53.500 --> 03:56.500
比如说我这边

03:56.500 --> 03:58.500
把这个缩小一点

03:58.500 --> 04:00.500
给个颜色吧

04:00.500 --> 04:01.500
比较这边

04:01.500 --> 04:04.500
它有两个指元数

04:04.500 --> 04:10.020
它有两个指元数

04:10.020 --> 04:11.020
对吧

04:11.020 --> 04:12.020
那这个的话就是OK的

04:12.020 --> 04:13.020
这个我们就说

04:13.020 --> 04:16.020
它是一个标准的二插数

04:16.020 --> 04:20.420
把磁石垫打开了

04:20.420 --> 04:21.420
就这个

04:21.420 --> 04:22.420
换个箭头

04:22.420 --> 04:24.420
这边

04:24.420 --> 04:26.420
稍微细一点

04:26.420 --> 04:27.420
OK

04:27.420 --> 04:30.420
比较像这样子的

04:30.420 --> 04:33.800
比较像这样子的

04:33.800 --> 04:34.800
那这个

04:34.800 --> 04:36.800
这个就是一个标准的二插数

04:36.800 --> 04:37.800
对吧

04:37.800 --> 04:38.800
这个是OK的

04:38.800 --> 04:42.370
但你如果是这样子的

04:42.370 --> 04:43.370
如果是这样子

04:43.370 --> 04:44.370
比如说我这边

04:44.370 --> 04:48.130
下面还有一个

04:48.130 --> 04:49.130
还有一个

04:49.130 --> 04:51.130
然后加这边

04:51.130 --> 04:52.130
这样子

04:52.130 --> 04:54.130
那这个是不是就是错误的

04:54.130 --> 04:55.130
对

04:55.130 --> 04:56.130
这就错误了

04:56.130 --> 04:57.130
错误了

04:57.130 --> 04:58.130
我们用一个红色吧

04:58.130 --> 04:59.130
用一个红色

04:59.130 --> 05:02.130
这种就是错误的

05:02.130 --> 05:03.130
OK

05:03.130 --> 05:04.130
这种是正确的

05:04.130 --> 05:05.130
正确我们用绿色

05:05.130 --> 05:08.130
我们用绿色

05:08.130 --> 05:09.130
像这种

05:09.130 --> 05:11.130
这种是正确的

05:11.130 --> 05:12.130
OK

05:12.130 --> 05:19.170
我们首先截个图

05:19.170 --> 05:21.170
例如下图

05:21.170 --> 05:23.170
例如下图

05:23.170 --> 05:27.340
对吧

05:27.340 --> 05:28.340
你这边

05:28.340 --> 05:29.340
二插数

05:29.340 --> 05:30.340
二插数

05:30.340 --> 05:31.340
两个节点

05:31.340 --> 05:32.340
或者一个节点

05:32.340 --> 05:33.340
一个节点也可以

05:33.340 --> 05:34.340
但是你不能多于两个

05:34.340 --> 05:36.340
总之就是不能多于两个

05:36.340 --> 05:40.350
总之

05:40.350 --> 05:44.350
总之就是不能多于

05:44.350 --> 05:47.350
多于两个节点

05:47.350 --> 05:48.350
OK

05:48.350 --> 05:49.350
好

05:49.350 --> 05:50.350
在理解了这个二插数之后

05:50.350 --> 05:51.350
然后接下来的话

05:51.350 --> 05:53.350
我们来看一下这个完全数

05:53.350 --> 05:55.350
什么叫做完全数

05:55.350 --> 05:58.050
好

05:58.050 --> 06:00.050
所谓完全数

06:00.050 --> 06:03.050
完全数

06:03.050 --> 06:04.050
完全数

06:04.050 --> 06:05.050
指的是

06:05.050 --> 06:06.050
指的是什么呢

06:06.050 --> 06:08.050
就是你这边在填冲

06:08.050 --> 06:10.050
填冲这个二插数的时候

06:10.050 --> 06:12.050
它的顺序是从上往下

06:12.050 --> 06:14.050
从左往右

06:14.050 --> 06:16.050
一次进行填写

06:16.050 --> 06:17.050
指的是

06:17.050 --> 06:19.050
就是一颗数

06:19.050 --> 06:20.050
一颗数

06:20.050 --> 06:24.050
在进行这个填写的时候

06:24.050 --> 06:26.050
填写的时候

06:26.050 --> 06:28.050
遵循的是

06:28.050 --> 06:31.050
从上往下

06:32.050 --> 06:35.050
从上往下

06:35.050 --> 06:37.050
大家重着往右

06:37.050 --> 06:41.050
重着往右

06:41.050 --> 06:42.050
OK

06:42.050 --> 06:44.050
就这边先填这个

06:44.050 --> 06:45.050
对不对

06:45.050 --> 06:46.050
大家这边下来一个分支

06:46.050 --> 06:47.050
接下来这个

06:47.050 --> 06:48.050
完了之后

06:48.050 --> 06:49.050
大家干嘛呢

06:49.050 --> 06:50.050
重着往右

06:50.050 --> 06:52.050
比如说这边举点例子

06:52.050 --> 06:54.050
例如下面的

06:54.050 --> 06:57.050
例如下面的这些数

06:57.050 --> 06:59.050
这些数

06:59.050 --> 07:00.050
就是什么呢

07:00.050 --> 07:03.050
就是这个完全数

07:03.050 --> 07:04.050
OK

07:04.050 --> 07:05.050
来给大家画几个

07:05.050 --> 07:07.050
比如说

07:07.050 --> 07:11.130
把这个拿到下面来

07:11.130 --> 07:13.130
比如说我这样这边

07:13.130 --> 07:14.130
这两个

07:14.130 --> 07:17.130
这两个我让它稍微短一点

07:17.130 --> 07:19.130
这个稍微短一点

07:19.130 --> 07:20.130
OK

07:20.130 --> 07:21.130
好

07:21.130 --> 07:23.130
然后接下来的话这里

07:23.130 --> 07:25.130
比如说我这边的话

07:25.130 --> 07:26.130
又有一个

07:26.130 --> 07:28.950
OK

07:28.950 --> 07:29.950
好

07:29.950 --> 07:31.950
这边拿过来

07:31.950 --> 07:32.950
这个是不是完全数

07:32.950 --> 07:34.950
是的

07:34.950 --> 07:36.950
有时候就说你这边右边

07:36.950 --> 07:37.950
这个还没填的吗

07:37.950 --> 07:39.950
因为我右边这个元素没有

07:39.950 --> 07:40.950
对不对

07:40.950 --> 07:42.950
我比如说我就四个元素

07:42.950 --> 07:43.950
我就四个元素

07:43.950 --> 07:44.950
那四个元素排出来

07:44.950 --> 07:45.950
排出来就应该是什么呢

07:45.950 --> 07:47.950
先第一个是它

07:47.950 --> 07:48.950
对不对

07:48.950 --> 07:49.950
然后接下往下

07:49.950 --> 07:50.950
是它

07:50.950 --> 07:51.950
接下来填什么呢

07:51.950 --> 07:52.950
填右边

07:52.950 --> 07:53.950
对不对

07:53.950 --> 07:54.950
填完之后

07:54.950 --> 07:56.950
然后接下来这边再填

07:56.950 --> 07:57.950
下面这个

07:57.950 --> 08:00.950
怎么样

08:00.950 --> 08:02.950
那比如说像这些

08:02.950 --> 08:04.950
复制几份

08:09.950 --> 08:10.950
比较像这个

08:10.950 --> 08:12.950
比如说我这种

08:12.950 --> 08:13.950
这种

08:13.950 --> 08:14.950
然后接下来它这边多一个

08:14.950 --> 08:16.950
接下来下一个就该填那个了

08:16.950 --> 08:18.950
下一个是不是就该填它了

08:18.950 --> 08:19.950
对不对

08:19.950 --> 08:20.950
就应该填它了

08:20.950 --> 08:22.950
所以这边就应该是填它了

08:22.950 --> 08:23.950
然后再这边

08:23.950 --> 08:27.710
一个箭头

08:27.710 --> 08:28.710
箭头

08:28.710 --> 08:29.710
只过来

08:29.710 --> 08:31.710
那这个的话也是一个

08:31.710 --> 08:33.710
然后接下来的话在这边

08:33.710 --> 08:39.860
卡住了

08:42.860 --> 08:43.860
不要这边

08:43.860 --> 08:44.860
下一个

08:44.860 --> 08:45.860
下一个就该填哪个了

08:45.860 --> 08:47.860
是不是填它的这个左边了

08:47.860 --> 08:48.860
对不对

08:48.860 --> 08:50.860
就应该是填这个了

08:51.860 --> 08:52.860
填这个

08:52.860 --> 08:54.860
这个稍微拉过来一点点

08:54.860 --> 08:56.860
然后这边

08:56.860 --> 08:57.860
只过来

08:57.860 --> 08:58.860
像这些

08:58.860 --> 09:01.860
这些的话都是完全二差数

09:01.860 --> 09:03.860
这个稍微缩小一点点

09:03.860 --> 09:04.860
这边再来一个

09:04.860 --> 09:08.690
再来一个

09:08.690 --> 09:09.690
然后这里

09:09.690 --> 09:11.690
复制一个

09:11.690 --> 09:14.000
OK

09:14.000 --> 09:15.000
好

09:15.000 --> 09:17.000
然后在这边只过来

09:18.000 --> 09:19.000
OK

09:19.000 --> 09:20.000
给大家挤个图

09:21.000 --> 09:24.000
像上面的这些它都是完全二差数

09:29.550 --> 09:31.550
例如下面这些数

09:31.550 --> 09:34.550
就都是完全数

09:36.550 --> 09:37.550
就这里

09:37.550 --> 09:38.550
像这些

09:38.550 --> 09:39.550
这些的话都是

09:39.550 --> 09:40.550
OK

09:40.550 --> 09:41.550
它满足这样的规律

09:41.550 --> 09:43.550
先从上往下

09:43.550 --> 09:45.550
大家重着往右

09:46.550 --> 09:47.550
这边

09:47.550 --> 09:48.550
填了之后

09:48.550 --> 09:49.550
往下了之后

09:49.550 --> 09:50.550
大家干嘛呢

09:50.550 --> 09:51.550
重着往右

09:51.550 --> 09:52.550
这边填

09:52.550 --> 09:53.550
填了之后

09:53.550 --> 09:54.550
然后加这边

09:54.550 --> 09:55.550
往下着

09:55.550 --> 09:57.550
要填下一个元素

09:57.550 --> 09:58.550
填下一个元素

09:58.550 --> 10:00.550
就应该是填哪个位置

10:00.550 --> 10:01.550
是不是填在这个位置

10:01.550 --> 10:02.550
对不对

10:02.550 --> 10:03.550
就应该是这个位置

10:03.550 --> 10:04.550
那就是这张图

10:04.550 --> 10:05.550
再填下一个

10:05.550 --> 10:06.550
再填下一个的话

10:06.550 --> 10:07.550
就是这张图

10:07.550 --> 10:08.550
再填下一个

10:08.550 --> 10:09.550
那就是这张图

10:09.550 --> 10:10.550
那这里面有四棵树

10:10.550 --> 10:12.550
这四棵树都是完全数

10:12.550 --> 10:14.550
都是完全数

10:14.550 --> 10:16.550
那比如说再例如

10:16.550 --> 10:18.550
再例如

10:18.550 --> 10:20.550
再例如

10:20.550 --> 10:22.550
下面的

10:22.550 --> 10:24.550
下面的这些数

10:24.550 --> 10:26.550
就不是

10:26.550 --> 10:28.550
就不是完全数

10:30.550 --> 10:31.550
就不是完全数

10:31.550 --> 10:32.550
比如说我们这边

10:32.550 --> 10:33.550
回到我们这里

10:34.550 --> 10:36.550
回到这边

10:36.550 --> 10:37.550
比如说我这里

10:39.550 --> 10:41.550
把这个稍微调整一下

10:44.380 --> 10:45.380
把这个调整一下

10:45.380 --> 10:47.380
比如说我这里

10:48.380 --> 10:50.380
然后接下来这边

10:50.380 --> 10:51.380
下一个

10:51.380 --> 10:52.380
对吧

10:52.380 --> 10:53.380
下一个

10:53.380 --> 10:54.380
然后接下来的话

10:54.380 --> 10:55.380
这边

10:55.380 --> 10:56.380
只过来

10:57.380 --> 10:59.380
稍微调一下

10:59.380 --> 11:00.380
这样子

11:00.380 --> 11:01.380
好

11:01.380 --> 11:02.380
然后完事之后

11:02.380 --> 11:07.350
然后接下来这边

11:08.350 --> 11:09.350
这边

11:09.350 --> 11:10.350
一个箭头

11:10.350 --> 11:11.350
过来

11:11.350 --> 11:12.350
这边

11:12.350 --> 11:13.350
只过来

11:13.350 --> 11:14.350
那像这种

11:14.350 --> 11:15.350
这种它是不是完全说

11:15.350 --> 11:16.350
不是

11:16.350 --> 11:18.350
为什么你左边没填满

11:18.350 --> 11:19.350
对不对

11:19.350 --> 11:21.350
你左边都没填满

11:21.350 --> 11:22.350
好吧

11:23.350 --> 11:24.350
稍等

11:24.350 --> 11:25.350
我调一下

11:25.350 --> 11:28.110
调一下

11:29.110 --> 11:31.110
你左边是不是都没填满

11:31.110 --> 11:32.110
对不对

11:32.110 --> 11:33.110
那像这个就不是

11:33.110 --> 11:34.110
那再比如说

11:34.110 --> 11:37.550
不止一份

11:37.550 --> 11:38.550
比较像这种

11:38.550 --> 11:41.550
这种压根这这都没有的

11:41.550 --> 11:42.550
比较这里

11:42.550 --> 11:43.550
这都没有

11:43.550 --> 11:44.550
这种

11:44.550 --> 11:46.550
这种是不是完全说

11:46.550 --> 11:48.550
是不是也不是

11:48.550 --> 11:49.550
对不对

11:49.550 --> 11:50.550
也不是

11:51.550 --> 11:52.550
比如说在这种

11:52.550 --> 11:53.550
比较再来一种

11:54.550 --> 11:59.270
还是复制这个吧

11:59.270 --> 12:00.270
比较这个

12:00.270 --> 12:01.270
这个的话

12:01.270 --> 12:02.270
然后我这里

12:03.270 --> 12:04.270
把这个删了

12:06.270 --> 12:07.270
这个不要

12:08.270 --> 12:09.270
这个也不要

12:10.270 --> 12:11.270
然后接下来的话

12:11.270 --> 12:14.800
这边

12:14.800 --> 12:15.800
这个

12:15.800 --> 12:16.800
这个是不是完全

12:16.800 --> 12:17.800
这个完全说

12:17.800 --> 12:18.800
是不是也不是

12:18.800 --> 12:19.800
对不对

12:19.800 --> 12:20.800
你这边

12:20.800 --> 12:21.800
这个填了之后要下一个

12:21.800 --> 12:22.800
确实应该是他

12:22.800 --> 12:23.800
他完了之后应该是谁

12:23.800 --> 12:24.800
这边应该是他

12:25.800 --> 12:26.800
对不对

12:26.800 --> 12:27.800
应该是这边

12:27.800 --> 12:28.800
这边完了之后再干嘛

12:28.800 --> 12:29.800
是不是再往下走

12:29.800 --> 12:30.800
对不对

12:30.800 --> 12:31.800
左右

12:31.800 --> 12:32.800
先左右

12:32.800 --> 12:34.800
这个我把它反着来

12:34.800 --> 12:36.800
就这边遵循的规则是

12:36.800 --> 12:37.800
重左往右

12:37.800 --> 12:38.800
重上往下

12:40.800 --> 12:41.800
对不对

12:41.800 --> 12:42.800
重左往右

12:42.800 --> 12:43.800
比如你这个

12:43.800 --> 12:44.800
这个你没有了

12:44.800 --> 12:45.800
你自然而然要干嘛

12:45.800 --> 12:46.800
对不对

12:46.800 --> 12:47.800
往下走

12:47.800 --> 12:48.800
往下走的话

12:48.800 --> 12:49.800
然后遵循什么

12:49.800 --> 12:50.800
先重左往右

12:50.800 --> 12:51.800
先左

12:51.800 --> 12:52.800
然后右

12:52.800 --> 12:53.800
完了之后再干嘛

12:53.800 --> 12:54.800
重上往下

12:54.800 --> 12:55.800
OK

12:56.800 --> 12:57.800
好

12:57.800 --> 12:58.800
那我们把这个

12:58.800 --> 12:59.800
结个图

12:59.800 --> 13:00.800
像这些

13:00.800 --> 13:04.750
这些他就都不是

13:07.750 --> 13:08.750
这些

13:08.750 --> 13:09.750
这些他就都不是

13:09.750 --> 13:11.750
都不是这个完全说

13:11.750 --> 13:12.750
好

13:12.750 --> 13:13.750
首先的话

13:13.750 --> 13:14.750
先把这个概念

13:14.750 --> 13:15.750
先把它明确了

13:15.750 --> 13:16.750
OK

13:16.750 --> 13:17.750
明确了之后

13:17.750 --> 13:18.750
然后接下来

13:18.750 --> 13:19.750
我们再来研究一下

13:19.750 --> 13:21.750
就是关于这个数值

13:22.750 --> 13:24.750
就是完全数中

13:24.750 --> 13:28.750
完全数中的这个数值

13:28.750 --> 13:30.750
根据这个完全数

13:30.750 --> 13:32.750
这个完全数中的这个数值

13:32.750 --> 13:34.750
我们大字可以分成什么呢

13:34.750 --> 13:36.750
可以分成两大类

13:36.750 --> 13:37.750
可以

13:37.750 --> 13:38.750
分为

13:38.750 --> 13:40.750
两大类

13:40.750 --> 13:41.750
哪两大类呢

13:41.750 --> 13:42.750
一个是

13:42.750 --> 13:44.750
最大堆

13:44.750 --> 13:45.750
最大堆

13:45.750 --> 13:46.750
一个是什么呢

13:46.750 --> 13:48.750
一个是最小堆

13:48.750 --> 13:50.750
那我们这边的话

13:50.750 --> 13:51.750
那个react里面

13:51.750 --> 13:52.750
用的就是什么

13:52.750 --> 13:53.750
用的是不是就是最小堆

13:53.750 --> 13:54.750
对吧

13:54.750 --> 13:55.750
好来我们来看一下

13:55.750 --> 13:56.750
这个最大堆

13:56.750 --> 13:57.750
和最小堆的这个定义

13:57.750 --> 13:58.750
好最大堆的话

13:58.750 --> 13:59.750
它是什么呢

13:59.750 --> 14:01.750
它是复结点

14:01.750 --> 14:03.750
复结点

14:03.750 --> 14:05.750
的这个数值

14:05.750 --> 14:07.750
大于

14:07.750 --> 14:08.750
或者

14:08.750 --> 14:09.750
等于

14:09.750 --> 14:11.750
这个所有的

14:11.750 --> 14:13.750
这个直接点

14:13.750 --> 14:14.750
OK

14:14.750 --> 14:15.750
这个最小堆

14:15.750 --> 14:16.750
最小堆的话就是什么

14:16.750 --> 14:17.750
就刚好相反

14:17.750 --> 14:20.750
刚好相反

14:20.750 --> 14:22.750
这个复结点

14:22.750 --> 14:24.750
复结点的这个数值

14:24.750 --> 14:26.750
小于

14:26.750 --> 14:28.750
或者等于

14:28.750 --> 14:30.750
所有

14:30.750 --> 14:32.750
所有的

14:32.750 --> 14:34.750
直接点

14:34.750 --> 14:35.750
OK

14:35.750 --> 14:36.750
好来我们这边

14:36.750 --> 14:37.750
来看两个例子

14:37.750 --> 14:38.750
看两个例子

14:38.750 --> 14:40.750
比如我们先来看这个

14:40.750 --> 14:41.750
最大堆

14:41.750 --> 14:42.750
最大堆

14:42.750 --> 14:44.750
十里

14:44.750 --> 14:45.750
OK

14:45.750 --> 14:47.750
比如说我这边

14:47.750 --> 14:49.750
回到我这边

14:49.750 --> 14:51.750
好把这个这个就干掉了

14:51.750 --> 14:53.750
这个就掉了

14:53.750 --> 14:54.750
OK

14:54.750 --> 14:55.750
好

14:55.750 --> 14:57.750
然后这里

14:57.750 --> 14:59.750
把这个干掉

14:59.750 --> 15:00.750
OK

15:00.750 --> 15:02.750
我们就只留下这个

15:02.750 --> 15:03.750
只留下这个

15:03.750 --> 15:04.750
然后我把它稍微

15:04.750 --> 15:06.750
调整一下

15:06.750 --> 15:07.750
这个现在它就可以

15:07.750 --> 15:09.750
拿开一点

15:09.750 --> 15:11.750
这两个

15:11.750 --> 15:15.380
拉开一点

15:15.380 --> 15:17.380
这个拉开一点

15:17.380 --> 15:20.210
OK

15:20.210 --> 15:21.210
这样子

15:21.210 --> 15:22.210
看着舒服一下

15:22.210 --> 15:23.210
好

15:23.210 --> 15:24.210
比如说我们来

15:24.210 --> 15:25.210
举一个这个最大堆

15:25.210 --> 15:26.210
比如说我这边

15:26.210 --> 15:28.210
我这边的话是9

15:28.210 --> 15:29.210
比如说这边

15:29.210 --> 15:30.210
这边那是8

15:30.210 --> 15:31.210
然后接下来

15:31.210 --> 15:33.210
这边是6

15:33.210 --> 15:34.210
然后接下来

15:34.210 --> 15:35.210
这边是7

15:35.210 --> 15:37.210
这边是4

15:37.210 --> 15:38.210
OK

15:38.210 --> 15:40.210
这边是5

15:40.210 --> 15:41.210
OK

15:41.210 --> 15:42.210
直接让它是一个完全数

15:42.210 --> 15:43.210
对不对

15:43.210 --> 15:44.210
这个没问题

15:44.210 --> 15:45.210
它是个完全数

15:45.210 --> 15:46.210
完全数的话

15:46.210 --> 15:47.210
然后接下来

15:47.210 --> 15:48.210
它是一个什么呢

15:48.210 --> 15:49.210
它是一个最大堆的

15:49.210 --> 15:50.210
这个完全数

15:50.210 --> 15:51.210
这个就是一个

15:51.210 --> 15:52.210
最大堆的完全数

15:52.210 --> 15:53.210
我们来看一下

15:53.210 --> 15:55.210
副节点始终大于什么呢

15:55.210 --> 15:57.210
始终大于等于

15:57.210 --> 15:58.210
所有的指节点

15:58.210 --> 15:59.210
比如你看这边9

15:59.210 --> 16:00.210
9的话是不是

16:00.210 --> 16:01.210
大于8

16:01.210 --> 16:02.210
大于6

16:02.210 --> 16:03.210
对不对

16:03.210 --> 16:04.210
好

16:04.210 --> 16:05.210
然后接下来的话

16:05.210 --> 16:06.210
8的话作为什么

16:06.210 --> 16:08.210
8的话作为这个

16:08.210 --> 16:10.210
下面两个节点的这个

16:10.210 --> 16:11.210
最节点

16:11.210 --> 16:12.210
那8的话

16:12.210 --> 16:13.210
什么大于7

16:13.210 --> 16:14.210
大于4

16:14.210 --> 16:15.210
对不对

16:15.210 --> 16:16.210
比较这边6

16:16.210 --> 16:17.210
6的话

16:17.210 --> 16:18.210
什么大于5

16:18.210 --> 16:19.210
对不对

16:19.210 --> 16:20.210
OK

16:20.210 --> 16:21.210
所以这个的话

16:21.210 --> 16:23.970
就是一个最大堆

16:23.970 --> 16:25.970
这就是一个最大堆

16:25.970 --> 16:29.340
好

16:29.340 --> 16:32.910
这边

16:32.910 --> 16:33.910
OK

16:33.910 --> 16:34.910
最大堆势力

16:34.910 --> 16:35.910
好

16:35.910 --> 16:36.910
然后接下来

16:36.910 --> 16:37.910
我们再来看一个

16:37.910 --> 16:41.760
最小堆势力

16:41.760 --> 16:43.760
最小堆

16:43.760 --> 16:45.760
最小堆势力

16:45.760 --> 16:46.760
好

16:46.760 --> 16:47.760
好

16:47.760 --> 16:48.760
回到这里

16:48.760 --> 16:50.760
我们把这个负质一份

16:50.760 --> 16:55.290
好在这边

16:55.290 --> 16:56.290
比较这个是多少呢

16:56.290 --> 16:58.290
这个是1

16:58.290 --> 17:00.290
这个是2

17:00.290 --> 17:02.290
然后接下来这个是4

17:02.290 --> 17:04.290
然后这个是3

17:04.290 --> 17:06.290
这个是6

17:06.290 --> 17:07.290
这个是5

17:07.290 --> 17:08.290
对吧

17:08.290 --> 17:09.290
好

17:09.290 --> 17:12.290
把这个拿到左边

17:13.290 --> 17:14.290
好

17:14.290 --> 17:15.290
我们来看一下

17:15.290 --> 17:16.290
这个就是一个什么

17:16.290 --> 17:17.290
这个就是一个最小堆

17:17.290 --> 17:18.290
最小堆的话

17:18.290 --> 17:19.290
它的这个负节点

17:19.290 --> 17:20.290
它是一定什么呢

17:20.290 --> 17:22.290
一定小于等于

17:22.290 --> 17:23.290
这个直接点的

17:23.290 --> 17:24.290
比方说这个1

17:24.290 --> 17:25.290
1的话是比2小

17:25.290 --> 17:26.290
对

17:26.290 --> 17:27.290
比这个4也小

17:27.290 --> 17:28.290
好

17:28.290 --> 17:29.290
然后接下来的话

17:29.290 --> 17:30.290
这边这个2

17:30.290 --> 17:31.290
2的话是比3小

17:31.290 --> 17:32.290
比6小

17:32.290 --> 17:33.290
对不对

17:33.290 --> 17:34.290
这个4

17:34.290 --> 17:35.290
4的话是比5小

17:35.290 --> 17:36.290
对不对

17:36.290 --> 17:37.290
它只要比它下一层小

17:37.290 --> 17:38.290
就可以

17:38.290 --> 17:39.290
这吧

17:39.290 --> 17:40.290
它只要比它下一层小就行

17:40.290 --> 17:41.290
好

17:41.290 --> 17:42.290
这个

17:42.290 --> 17:47.140
这个是最小堆

17:47.140 --> 17:48.140
好

17:48.140 --> 17:50.140
我们放到笔记里面

17:50.140 --> 17:52.140
这是最小堆的这个实例

17:53.140 --> 17:54.140
OK

17:54.140 --> 17:55.140
好

17:55.140 --> 17:57.140
来根据这个最大堆和最小堆

17:57.140 --> 17:58.140
我们这边的话

17:58.140 --> 18:00.140
可以观察到3个现象

18:00.140 --> 18:01.140
哪3个现象呢

18:01.140 --> 18:03.140
首先第1个

18:03.140 --> 18:06.140
无论是最大堆

18:06.140 --> 18:09.140
还是这个最小堆

18:09.140 --> 18:10.140
第1个元素

18:10.140 --> 18:12.140
第1个节点

18:12.140 --> 18:14.140
一定是什么

18:14.140 --> 18:16.140
一定是这个

18:16.140 --> 18:18.140
这个堆

18:18.140 --> 18:20.140
中最大的

18:20.140 --> 18:23.140
或者最小的

18:23.140 --> 18:24.140
OK

18:24.140 --> 18:25.140
比如说我这边

18:25.140 --> 18:26.140
我这边这个第1个

18:26.140 --> 18:27.140
第1个是不是9

18:27.140 --> 18:28.140
9的话

18:28.140 --> 18:30.140
一定是这个堆里面最大的

18:30.140 --> 18:31.140
对不对

18:31.140 --> 18:32.140
它一定是最大的

18:32.140 --> 18:34.140
你这个推都推算了出来

18:34.140 --> 18:35.140
你这边这个9

18:35.140 --> 18:36.140
它是不是一定要比这一层大

18:36.140 --> 18:37.140
对不对

18:37.140 --> 18:38.140
这一层的

18:38.140 --> 18:39.140
这个数字又一定要比什么

18:39.140 --> 18:40.140
是不是比它大

18:40.140 --> 18:41.140
对不对

18:41.140 --> 18:42.140
你这样推算出来的话

18:42.140 --> 18:43.140
它一定是最大的

18:43.140 --> 18:44.140
那接下来这个最小堆

18:44.140 --> 18:45.140
就也一样

18:45.140 --> 18:46.140
那第1个的话

18:46.140 --> 18:48.140
一定是最小的

18:48.140 --> 18:49.140
一定是最小的

18:49.140 --> 18:50.140
OK

18:50.140 --> 18:51.140
这是第1个

18:51.140 --> 18:52.140
好

18:52.140 --> 18:55.510
第2个

18:55.510 --> 18:56.510
每一层

18:56.510 --> 18:57.510
第2个现象

18:57.510 --> 18:59.510
每一层

18:59.510 --> 19:02.510
它不是说就是排好顺序的

19:02.510 --> 19:03.510
每一层

19:03.510 --> 19:07.510
并非是按照这个

19:07.510 --> 19:09.510
一定顺序来排列的

19:09.510 --> 19:14.510
一定顺序来排列的

19:14.510 --> 19:15.510
这个什么意思

19:15.510 --> 19:17.510
比如说我们回到这边

19:17.510 --> 19:18.510
回到这边

19:18.510 --> 19:19.510
比如说我们这边

19:19.510 --> 19:21.510
这边这个是2

19:21.510 --> 19:23.510
比如这个最小堆

19:23.510 --> 19:24.510
这个的话是2

19:24.510 --> 19:25.510
对不对

19:25.510 --> 19:26.510
接下来这边是3

19:26.510 --> 19:27.510
这个是6

19:27.510 --> 19:28.510
这个是不是同属一层

19:28.510 --> 19:29.510
对不对

19:29.510 --> 19:30.510
同属一层的话

19:30.510 --> 19:32.510
它就一定比它小吗

19:32.510 --> 19:33.510
一定比它小吗

19:33.510 --> 19:34.510
不对

19:34.510 --> 19:35.510
对不对

19:35.510 --> 19:36.510
我这边可以干嘛

19:36.510 --> 19:37.510
比如这边16

19:37.510 --> 19:39.510
接下来这边是什么

19:39.510 --> 19:40.510
这边是

19:40.510 --> 19:41.510
刚才是多少

19:41.510 --> 19:42.510
这3

19:42.510 --> 19:44.510
这边是3

19:45.510 --> 19:46.510
可不可以

19:46.510 --> 19:47.510
是不是仍然可以

19:47.510 --> 19:48.510
它只要满足什么

19:48.510 --> 19:49.510
只要就是我这个节点

19:49.510 --> 19:51.510
比你这两个节点

19:51.510 --> 19:52.510
是不是小

19:52.510 --> 19:53.510
对不对

19:53.510 --> 19:56.850
所以说这边的话

19:56.850 --> 19:57.850
它不是说

19:57.850 --> 20:00.850
这个就是一定是排好顺序的

20:00.850 --> 20:01.850
把这个的话

20:01.850 --> 20:06.800
我们还是接个图吧

20:06.800 --> 20:09.800
接图是这个

20:09.800 --> 20:11.800
接个图

20:11.800 --> 20:16.650
按错了

20:16.650 --> 20:17.650
完了完了

20:17.650 --> 20:18.650
按错了

20:18.650 --> 20:25.480
完了完了

20:25.480 --> 20:26.480
按错了

20:26.480 --> 20:28.480
这个按成那个

20:28.480 --> 20:30.480
按成生成PDF了

20:30.480 --> 20:37.500
重新来

20:37.500 --> 20:39.500
这边是这个

20:39.500 --> 20:45.670
给大家接个图

20:45.670 --> 20:48.670
放到笔记里面

20:48.670 --> 20:52.670
并非一定按到一定的顺序来

20:52.670 --> 20:57.750
比如下面的例子

20:57.750 --> 21:02.640
稍等卡住了

21:02.640 --> 21:06.640
比如下面的这个例子

21:06.640 --> 21:07.640
对不对

21:07.640 --> 21:11.640
让6可以在

21:11.640 --> 21:14.640
在左分支

21:14.640 --> 21:17.640
在左分支

21:17.640 --> 21:19.640
然后这个3

21:19.640 --> 21:23.640
可以在这个右分支

21:23.640 --> 21:25.640
右分支

21:25.640 --> 21:26.640
对吧

21:26.640 --> 21:27.640
不是说这个的话

21:27.640 --> 21:28.640
就一定要按照这个

21:28.640 --> 21:29.640
从小到大

21:29.640 --> 21:30.640
或者从这个

21:30.640 --> 21:31.640
从大到小

21:31.640 --> 21:32.640
不是的

21:32.640 --> 21:33.640
好

21:33.640 --> 21:34.640
接下来的话

21:34.640 --> 21:35.640
第三个

21:35.640 --> 21:37.640
就是每一层

21:37.640 --> 21:39.640
每一层并非

21:39.640 --> 21:43.640
一定比这个下一层

21:43.640 --> 21:48.640
下一层大或者小

21:48.640 --> 21:50.640
比如说你看我这个

21:50.640 --> 21:52.640
我这个是一个最小堆

21:52.640 --> 21:53.640
最小堆的话

21:53.640 --> 21:54.640
你只能说就是这个

21:54.640 --> 21:55.640
比这个复原数

21:55.640 --> 21:56.640
一定什么呢

21:56.640 --> 21:57.640
一定比他们两个小

21:57.640 --> 21:58.640
对不对

21:58.640 --> 21:59.640
这个复原数

21:59.640 --> 22:00.640
比这个6小

22:00.640 --> 22:01.640
比这个3小

22:01.640 --> 22:03.640
但是你不能说就是这边

22:04.640 --> 22:05.640
这边的话

22:05.640 --> 22:06.640
我这边也比这个6

22:06.640 --> 22:07.640
它比6小

22:07.640 --> 22:08.640
这个是ok的

22:08.640 --> 22:09.640
但你看这边

22:09.640 --> 22:11.640
4的话就是比3大

22:11.640 --> 22:12.640
对不对

22:12.640 --> 22:13.640
比3大

22:13.640 --> 22:14.640
所以说这边只能说什么

22:14.640 --> 22:16.640
只能说这个复原数

22:16.640 --> 22:18.640
复原数的话

22:18.640 --> 22:20.640
一定是比他的这个

22:20.640 --> 22:21.640
两个纸接点

22:21.640 --> 22:22.640
大或者小

22:22.640 --> 22:24.640
取决于你是最大堆

22:24.640 --> 22:25.640
还是最小堆

22:25.640 --> 22:26.640
但不是说就是

22:26.640 --> 22:27.640
每一层的所有元素

22:27.640 --> 22:30.640
每一层的所有元素

22:30.640 --> 22:32.640
所有元素并非

22:32.640 --> 22:33.640
并非

22:33.640 --> 22:36.640
一定比这个下一层

22:36.640 --> 22:37.640
就是

22:37.640 --> 22:40.640
这个我想想该怎么表述呢

22:40.640 --> 22:41.640
这边加一个

22:41.640 --> 22:43.640
就是并非一定比下一层

22:43.640 --> 22:44.640
这个下一层

22:44.640 --> 22:45.640
指的是什么呢

22:45.640 --> 22:46.640
就是非

22:46.640 --> 22:47.640
非自己的

22:47.640 --> 22:50.640
自己的纸接点

22:50.640 --> 22:52.640
就并非一定比下一层

22:52.640 --> 22:53.640
这个大或者小

22:53.640 --> 22:54.640
能明白这个意思吧

22:54.640 --> 22:55.640
就我这边

22:55.640 --> 22:56.640
你看这个4

22:56.640 --> 22:57.640
4的话

22:57.640 --> 22:58.640
你看我这边的话

22:58.640 --> 22:59.640
不是说就是

22:59.640 --> 23:00.640
它要比下面这一层都要小

23:00.640 --> 23:01.640
不是的

23:01.640 --> 23:02.640
这边就比什么

23:02.640 --> 23:03.640
比3大

23:03.640 --> 23:04.640
包括我们这边

23:04.640 --> 23:05.640
这个最大堆

23:05.640 --> 23:07.640
你看这个最大堆

23:07.640 --> 23:08.640
最大堆的话

23:08.640 --> 23:09.640
我看一下

23:09.640 --> 23:11.640
最大堆还好

23:11.640 --> 23:12.640
最大堆这个

23:12.640 --> 23:14.640
这个都是大于这个

23:14.640 --> 23:15.640
这儿

23:15.640 --> 23:17.640
这个6的话就比什么

23:17.640 --> 23:18.640
比7小

23:18.640 --> 23:19.640
对了

23:19.640 --> 23:21.640
6就比7小

23:21.640 --> 23:22.640
好

23:22.640 --> 23:24.640
这是关于这个

23:24.640 --> 23:26.640
最大堆和最小堆

23:26.640 --> 23:29.640
以及他的这个3个现象

23:29.640 --> 23:30.640
好

23:30.640 --> 23:31.640
然后接下来

23:31.640 --> 23:34.640
下一个是关于这个堆的实现

23:34.640 --> 23:36.640
堆的实现

23:36.640 --> 23:38.640
那堆的实现的话

23:38.640 --> 23:39.640
一般来讲的话

23:39.640 --> 23:41.640
就是可以使用这个数组

23:41.640 --> 23:43.640
堆一般来讲

23:43.640 --> 23:44.640
一般来讲

23:44.640 --> 23:46.640
可以

23:46.640 --> 23:49.640
可以使用这个数组

23:49.640 --> 23:51.640
来实现

23:51.640 --> 23:52.640
OK

23:52.640 --> 23:53.640
好

23:53.640 --> 23:54.640
来我们这边

23:54.640 --> 23:56.640
我们还是画个图

23:56.640 --> 23:58.640
比如说我们就用这个最小堆

23:58.640 --> 23:59.640
把这个最大堆

24:00.640 --> 24:01.640
最大堆就不要了

24:01.640 --> 24:02.640
OK

24:02.640 --> 24:03.640
好那这边

24:03.640 --> 24:04.640
这边他就可以对应一个什么呢

24:04.640 --> 24:06.640
对应一个这个数组

24:06.640 --> 24:08.640
这边来画个数组

24:08.640 --> 24:11.020
OK

24:11.020 --> 24:12.020
好

24:12.020 --> 24:13.020
这边几个不用说

24:13.020 --> 24:15.020
1 2 3 4 5 6

24:15.020 --> 24:16.020
是吧6个

24:16.020 --> 24:17.020
好这边6个

24:17.020 --> 24:18.020
1

24:18.020 --> 24:20.020
然后2

24:20.020 --> 24:22.020
然后3

24:23.020 --> 24:25.020
这是第三个

24:25.020 --> 24:27.020
然后第4个

24:27.020 --> 24:31.100
第4个

24:31.100 --> 24:33.100
第5个

24:34.100 --> 24:37.730
然后第6个

24:37.730 --> 24:38.730
OK

24:38.730 --> 24:40.730
好那我这边就可以用一个这个数组

24:40.730 --> 24:42.730
数组来实现这个堆

24:42.730 --> 24:43.730
好那接下来这边

24:43.730 --> 24:44.730
这边的话

24:44.730 --> 24:45.730
它们分别对应的比较这个

24:45.730 --> 24:46.730
这个它就是

24:46.730 --> 24:47.730
1

24:47.730 --> 24:48.730
然后这个堆呢

24:48.730 --> 24:49.730
就是2

24:49.730 --> 24:50.730
这边这个数值

24:50.730 --> 24:52.730
那加这边对应的是4

24:52.730 --> 24:53.730
那加这边呢

24:53.730 --> 24:54.730
是对应的是

24:54.730 --> 24:56.730
6

24:56.730 --> 24:57.730
6

24:57.730 --> 24:59.730
然后3

24:59.730 --> 25:00.730
5

25:00.730 --> 25:01.730
OK

25:01.730 --> 25:02.730
那我这边呢

25:02.730 --> 25:03.730
用一个这个数组

25:03.730 --> 25:05.730
就把这个堆里面的所有元素

25:05.730 --> 25:07.730
我就把它装起来了

25:07.730 --> 25:08.730
好装起来了之后

25:08.730 --> 25:09.730
然后接下来

25:09.730 --> 25:10.730
它对应了这个下标

25:10.730 --> 25:11.730
这个数组

25:11.730 --> 25:12.730
这个对应的下标

25:12.730 --> 25:13.730
是不是0

25:13.730 --> 25:14.730
对不对

25:14.730 --> 25:15.730
这个是index

25:16.730 --> 25:18.730
这个是index

25:18.730 --> 25:22.740
这个是index

25:22.740 --> 25:24.740
这边对应的是0

25:24.740 --> 25:27.740
然后这个对应的是1

25:28.740 --> 25:30.740
这个对应的是1

25:30.740 --> 25:32.740
然后这个对应的是2

25:34.740 --> 25:36.740
这对应的是2

25:36.740 --> 25:39.060
好

25:39.060 --> 25:43.010
然后接下来这个对应的是3

25:43.010 --> 25:44.010
3

25:44.010 --> 25:48.470
然后这个对应的是4

25:48.470 --> 25:49.470
好

25:49.470 --> 25:50.470
然后还有最后一个

25:50.470 --> 25:53.810
这个对应的是5

25:53.810 --> 25:54.810
OK

25:54.810 --> 25:55.810
好那它这边的话

25:55.810 --> 25:57.810
对应到我们的这个数里面

25:57.810 --> 25:58.810
它这边就是什么呢

25:58.810 --> 26:00.810
这边这个0

26:00.810 --> 26:01.810
对应的就是什么

26:01.810 --> 26:02.810
对应的就是这个

26:02.810 --> 26:03.810
第一个元素

26:03.810 --> 26:04.810
对不对

26:04.810 --> 26:05.810
好

26:05.810 --> 26:06.810
然后接下来这边这个1

26:06.810 --> 26:09.810
这个1对应的就是它

26:09.810 --> 26:10.810
好

26:10.810 --> 26:12.810
那接下来这个2

26:12.810 --> 26:14.810
2对应的就是它

26:14.810 --> 26:17.820
好

26:17.820 --> 26:19.820
然后接下来的话这个3

26:20.820 --> 26:23.820
3对应的就是它

26:23.820 --> 26:25.820
然后接下来4

26:25.820 --> 26:27.820
始终是先从左往右

26:27.820 --> 26:28.820
对不对

26:28.820 --> 26:29.820
从左往右

26:29.820 --> 26:30.820
然后填不下了

26:30.820 --> 26:32.820
然后再往下走一个分子

26:32.820 --> 26:33.820
好

26:33.820 --> 26:35.820
然后这样是它

26:35.820 --> 26:36.820
对不对

26:36.820 --> 26:37.820
这个是5

26:37.820 --> 26:38.820
你看这边

26:38.820 --> 26:39.820
这边呢

26:39.820 --> 26:41.820
我们就可以用一个这个数组

26:41.820 --> 26:42.820
来存放什么呢

26:42.820 --> 26:43.820
来存放一个这个对里面

26:43.820 --> 26:45.820
所有的这个元素

26:45.820 --> 26:46.820
好

26:46.820 --> 26:48.820
这是index

26:48.820 --> 26:50.820
上面是对应了这个值

26:50.820 --> 26:51.820
对吧

26:51.820 --> 26:52.820
对应了值

26:52.820 --> 26:54.820
这个叫做value

26:54.820 --> 26:55.820
OK

26:55.820 --> 27:01.440
好那我们这边写个图

27:01.440 --> 27:02.440
好

27:02.440 --> 27:04.440
然后放到笔记里面

27:04.440 --> 27:05.440
好

27:05.440 --> 27:07.440
可以用这个数组来实现

27:07.440 --> 27:08.440
那这边的话

27:08.440 --> 27:09.440
有的同学肯定就要问了

27:09.440 --> 27:10.440
那这边的话

27:10.440 --> 27:12.440
为什么就是要采用这个数组呢

27:12.440 --> 27:14.440
因为通过数组的话

27:14.440 --> 27:15.440
这边可以很方便的

27:15.440 --> 27:17.440
找到一个节点的

27:17.440 --> 27:19.440
所有的这个倾属

27:19.440 --> 27:21.440
通过这个数组

27:21.440 --> 27:23.440
我们可以

27:23.440 --> 27:26.440
非常方便的

27:26.440 --> 27:29.440
找到一个这个节点的

27:29.440 --> 27:31.440
所有倾属

27:31.440 --> 27:33.440
所有倾属

27:33.440 --> 27:35.440
这里倾属指的是和它相邻的

27:35.440 --> 27:36.440
不用我这边这个节点

27:36.440 --> 27:38.440
这个节点我可以找到它的

27:38.440 --> 27:39.440
复节点

27:39.440 --> 27:40.440
也可以找到什么呢

27:40.440 --> 27:42.440
也可以找到它的这个左肢

27:42.440 --> 27:44.440
也可以找到它的这个右肢

27:44.440 --> 27:45.440
OK

27:45.440 --> 27:46.440
指的是这个

27:46.440 --> 27:48.440
好来我们这边来看一下

27:48.440 --> 27:51.440
这边比如说我要找复节点

27:51.440 --> 27:52.440
复节点

27:52.440 --> 27:53.440
那复节点的话

27:53.440 --> 27:55.440
那这边对应了这个公式是什么呢

27:55.440 --> 27:56.440
对应了公式就是你

27:56.440 --> 27:59.440
当前下标-1

27:59.440 --> 28:01.440
当前

28:01.440 --> 28:04.440
就是当前节点

28:04.440 --> 28:08.440
当前节点的下标

28:08.440 --> 28:10.440
然后接下来-1

28:10.440 --> 28:12.440
-1再处2

28:12.440 --> 28:15.970
-1

28:15.970 --> 28:18.970
然后再处一个2

28:18.970 --> 28:19.970
再处一个2

28:19.970 --> 28:20.970
处一个2

28:20.970 --> 28:22.970
让整体在向下去整

28:22.970 --> 28:26.970
这边mess.thru

28:26.970 --> 28:29.660
OK

28:29.660 --> 28:30.660
你看

28:30.660 --> 28:32.660
这个就是通过这个方法

28:32.660 --> 28:34.660
你就可以找到你的这个复节点

28:34.660 --> 28:36.660
比如我们来验证一下吧

28:36.660 --> 28:40.810
比如我们来验证一下

28:40.810 --> 28:43.810
比如说这边的话你是

28:43.810 --> 28:45.810
这个指节点

28:45.810 --> 28:47.810
这边是指节点

28:47.810 --> 28:48.810
然后这边我们要找什么呢

28:48.810 --> 28:50.810
找复节点

28:50.810 --> 28:53.810
复节点

28:53.810 --> 28:54.810
比如说我们这边指节点

28:54.810 --> 28:55.810
指节点的话

28:55.810 --> 28:56.810
我们这边就找它的嘛

28:56.810 --> 28:57.810
对了找它的的话

28:57.810 --> 28:58.810
下标是多少

28:58.810 --> 28:59.810
是1

28:59.810 --> 29:00.810
对不对

29:00.810 --> 29:03.810
1的话让当前下标-1

29:03.810 --> 29:04.810
是0

29:04.810 --> 29:05.810
0处以2

29:05.810 --> 29:06.810
是不是0

29:06.810 --> 29:07.810
向下去整也是0

29:07.810 --> 29:08.810
那复节点的话

29:08.810 --> 29:09.810
就找到了是0

29:09.810 --> 29:10.810
那是不是0

29:10.810 --> 29:11.810
对了吧

29:11.810 --> 29:12.810
对不对

29:12.810 --> 29:13.810
好那我们这边

29:13.810 --> 29:14.810
多来几个

29:14.810 --> 29:15.810
多验证几个

29:15.810 --> 29:16.810
好比如说我这边

29:16.810 --> 29:17.810
我要找这个当前

29:17.810 --> 29:19.810
我这个节点下标是3

29:19.810 --> 29:21.810
以至我当前的

29:21.810 --> 29:23.810
这个节点下标是3

29:23.810 --> 29:24.810
是不是它

29:24.810 --> 29:25.810
对不对

29:25.810 --> 29:26.810
我要找它的复节点是谁

29:26.810 --> 29:28.810
3-1是2

29:28.810 --> 29:29.810
对不对

29:29.810 --> 29:30.810
2处以2是多少

29:30.810 --> 29:31.810
2处以2是1

29:31.810 --> 29:32.810
对不对

29:32.810 --> 29:33.810
向下去整也是1

29:33.810 --> 29:34.810
是不是拿到1

29:34.810 --> 29:35.810
正确

29:35.810 --> 29:36.810
对不对

29:36.810 --> 29:37.810
好比如说我这边

29:37.810 --> 29:39.810
当前这个是4

29:39.810 --> 29:42.810
4-1是3

29:42.810 --> 29:43.810
3处以2

29:43.810 --> 29:44.810
3处以2是不是1.5

29:44.810 --> 29:47.810
1.5向下去整也是1

29:47.810 --> 29:48.810
正确吧

29:48.810 --> 29:49.810
正确吧

29:49.810 --> 29:50.810
对不对

29:50.810 --> 29:51.810
比如说我这边

29:51.810 --> 29:52.810
我这个是5

29:52.810 --> 29:53.810
5的话

29:53.810 --> 29:54.810
然后5-1是4

29:54.810 --> 29:55.810
4处以2

29:55.810 --> 29:56.810
什么2

29:56.810 --> 29:58.810
就得到这边2

29:58.810 --> 29:59.810
对不对

29:59.810 --> 30:00.810
你看我这边

30:00.810 --> 30:01.810
就可以通过这个公式

30:01.810 --> 30:03.810
我可以找到什么呢

30:03.810 --> 30:05.810
找到我这个复节点的

30:05.810 --> 30:06.810
这个下标

30:06.810 --> 30:07.810
好那接下来

30:07.810 --> 30:08.810
我要找什么呢

30:08.810 --> 30:09.810
我要找我的这个

30:09.810 --> 30:11.810
左边的这个

30:11.810 --> 30:14.810
就找这个左支

30:14.810 --> 30:15.810
左

30:15.810 --> 30:19.310
左

30:19.310 --> 30:20.310
这个

30:20.310 --> 30:22.310
这个左分支

30:22.310 --> 30:24.310
左分支

30:24.310 --> 30:25.310
节点

30:25.310 --> 30:26.310
那左分支

30:26.310 --> 30:27.310
节点的话

30:27.310 --> 30:28.310
这边它等于什么呢

30:28.310 --> 30:31.310
它等于就是你当前

30:31.310 --> 30:35.310
当前节点下标

30:35.310 --> 30:36.310
下标

30:36.310 --> 30:37.310
乘一个什么呢

30:37.310 --> 30:38.310
乘一个2

30:38.310 --> 30:39.310
然后接下来

30:39.310 --> 30:41.310
再加一个1

30:41.310 --> 30:42.310
再加一个1

30:43.310 --> 30:44.310
同样我们这边

30:44.310 --> 30:45.310
我们来验证一下

30:45.310 --> 30:48.900
我们来验证一下

30:48.900 --> 30:49.900
那这边呢

30:49.900 --> 30:51.900
就是应该是复节点了

30:51.900 --> 30:52.900
对不对

30:52.900 --> 30:54.900
复节点

30:54.900 --> 30:56.900
大家这边来找什么呢

30:56.900 --> 30:58.900
来找这个左

30:58.900 --> 30:59.900
左

30:59.900 --> 31:01.900
左分支

31:01.900 --> 31:02.900
左分支

31:02.900 --> 31:03.900
节点

31:03.900 --> 31:04.900
我们这边的话

31:04.900 --> 31:06.900
就找三个吧

31:06.900 --> 31:10.280
这个就不要了

31:10.280 --> 31:11.280
OK

31:11.280 --> 31:13.280
这个不要了

31:13.280 --> 31:14.280
怎么删除呢

31:14.280 --> 31:16.660
看我看

31:16.660 --> 31:17.660
这个能不能删除

31:17.660 --> 31:19.660
应该是可以的

31:19.660 --> 31:21.660
把这一列

31:21.660 --> 31:25.540
删除了

31:29.750 --> 31:30.750
算了算了

31:30.750 --> 31:32.750
我重新那个一个吧

31:32.750 --> 31:33.750
重新那个

31:33.750 --> 31:35.750
等一下这边好像可以调

31:35.750 --> 31:36.750
这样调就可以了

31:36.750 --> 31:37.750
可以了

31:37.750 --> 31:38.750
然后这边的话

31:38.750 --> 31:39.750
这边比如复节点

31:39.750 --> 31:41.750
已知当前的复节点

31:41.750 --> 31:42.750
是0

31:42.750 --> 31:43.750
对吧

31:43.750 --> 31:45.750
012

31:45.750 --> 31:47.750
012

31:47.750 --> 31:49.750
我们来找这个左支点

31:49.750 --> 31:50.750
这边的话是0

31:50.750 --> 31:51.750
对吧

31:51.750 --> 31:52.750
2×0

31:52.750 --> 31:53.750
等于0加1

31:53.750 --> 31:54.750
那他的左支点

31:54.750 --> 31:55.750
就是1

31:55.750 --> 31:56.750
看一下

31:56.750 --> 31:57.750
0对你的

31:57.750 --> 31:58.750
什么1

31:58.750 --> 31:59.750
对不对

31:59.750 --> 32:00.750
好然后接下来

32:00.750 --> 32:01.750
这个是1

32:01.750 --> 32:02.750
1的话

32:02.750 --> 32:03.750
2×1

32:03.750 --> 32:04.750
22加1

32:04.750 --> 32:05.750
这个3

32:05.750 --> 32:06.750
对不对

32:06.750 --> 32:07.750
你看一下这边

32:07.750 --> 32:08.750
1对你的左边

32:08.750 --> 32:09.750
这个

32:09.750 --> 32:10.750
就是3

32:10.750 --> 32:11.750
好然后加这个

32:11.750 --> 32:12.750
这个的话是2

32:12.750 --> 32:13.750
2的话

32:13.750 --> 32:14.750
2

32:14.750 --> 32:15.750
这个2×2

32:15.750 --> 32:16.750
4

32:16.750 --> 32:17.750
4加1

32:17.750 --> 32:18.750
对不对

32:18.750 --> 32:19.750
5

32:19.750 --> 32:20.750
好那你看这边

32:20.750 --> 32:21.750
这个2

32:21.750 --> 32:23.750
对应的这个左分支节点

32:23.750 --> 32:24.750
是不是就是5

32:24.750 --> 32:25.750
对不对

32:25.750 --> 32:26.750
这下标就是5

32:26.750 --> 32:27.750
OK

32:27.750 --> 32:28.750
好然后接下来

32:28.750 --> 32:29.750
这边

32:29.750 --> 32:30.750
右分支

32:31.750 --> 32:33.750
右分支

32:33.750 --> 32:34.750
节点

32:34.750 --> 32:35.750
那右分支节点的话

32:35.750 --> 32:36.750
它是等于什么呢

32:36.750 --> 32:38.750
它是等于这个

32:38.750 --> 32:39.750
当前

32:39.750 --> 32:41.750
这个节点下标

32:41.750 --> 32:43.750
当前节点

32:43.750 --> 32:44.750
下标

32:44.750 --> 32:46.750
乘一个这个2

32:46.750 --> 32:49.750
再加一个2

32:49.750 --> 32:50.750
OK

32:50.750 --> 32:51.750
好来我们这边

32:51.750 --> 32:52.750
我们来看一下

32:52.750 --> 32:54.750
把这个复制一分

32:55.750 --> 32:56.750
放到这里

32:56.750 --> 32:58.750
好复节点还是这些

32:58.750 --> 32:59.750
还是这些

32:59.750 --> 33:00.750
那我们现在

33:00.750 --> 33:01.750
我们要找右了

33:01.750 --> 33:02.750
找右

33:02.750 --> 33:03.750
好右的话

33:03.750 --> 33:04.750
来我们根据这个来算一下

33:04.750 --> 33:06.750
这边的话是0×2

33:06.750 --> 33:07.750
是0加2

33:07.750 --> 33:08.750
这边是不是对应的是2

33:08.750 --> 33:10.750
好这个的话是

33:10.750 --> 33:11.750
1×2

33:11.750 --> 33:12.750
是2

33:12.750 --> 33:13.750
2加2

33:13.750 --> 33:14.750
这个是4

33:14.750 --> 33:15.750
对不对

33:15.750 --> 33:16.750
下来这边

33:16.750 --> 33:18.750
这边的话是2的4

33:18.750 --> 33:19.750
4加2

33:19.750 --> 33:20.750
是不是得到了4

33:20.750 --> 33:21.750
6

33:21.750 --> 33:22.750
对不对

33:22.750 --> 33:23.750
2 16

33:23.750 --> 33:24.750
我们来看一下

33:24.750 --> 33:25.750
0对应的是什么

33:25.750 --> 33:26.750
对应的是吧

33:26.750 --> 33:27.750
它的右

33:27.750 --> 33:28.750
右分支是不是2

33:28.750 --> 33:29.750
对吧

33:29.750 --> 33:30.750
好1

33:30.750 --> 33:32.750
1对应的这个右分支

33:32.750 --> 33:33.750
是不是4

33:33.750 --> 33:34.750
对不对

33:34.750 --> 33:35.750
好这个2

33:35.750 --> 33:36.750
2对应的是6

33:36.750 --> 33:37.750
这边

33:37.750 --> 33:38.750
我们这个没有

33:38.750 --> 33:39.750
如果下一个

33:39.750 --> 33:40.750
如果下一个

33:40.750 --> 33:41.750
这个元素进来的话

33:41.750 --> 33:42.750
那是不是他就

33:42.750 --> 33:43.750
应该是排在这个位置

33:43.750 --> 33:44.750
对不对

33:44.750 --> 33:45.750
排在这个位置

33:45.750 --> 33:46.750
他的下标就应该是多少

33:46.750 --> 33:47.750
所以就是6

33:47.750 --> 33:48.750
对吧

33:48.750 --> 33:50.750
说为什么通过这个数组

33:50.750 --> 33:52.750
因为数组的话非常方便

33:52.750 --> 33:54.750
你去找一个这个节点

33:54.750 --> 33:55.750
他所有的这个情书

33:55.750 --> 33:56.750
非常好找

33:56.750 --> 33:57.750
非常好找

33:57.750 --> 33:58.750
OK

33:59.750 --> 34:01.750
好这就是关于这个

34:01.750 --> 34:02.750
二差堆里面的

34:02.750 --> 34:04.750
一些这个基本的一些知识

34:04.750 --> 34:05.750
大家可以看一下

34:05.750 --> 34:06.750
还是不难

34:06.750 --> 34:07.750
还是不难

34:07.750 --> 34:08.750
好那接下来的话

34:08.750 --> 34:10.750
我们要看一下就是react中

34:10.750 --> 34:12.750
他这个最小堆的这个应用

34:12.750 --> 34:13.750
OK

34:13.750 --> 34:14.750
好来我们来看一下

34:14.750 --> 34:15.750
他的这个原码

34:16.750 --> 34:18.750
来看一下他的原码

34:18.750 --> 34:19.750
来到这边

34:20.750 --> 34:23.320
把这个放大点

34:24.320 --> 34:25.320
放大点

34:26.320 --> 34:27.320
好把这个代码的话

34:27.320 --> 34:28.320
还是先什么呢

34:28.320 --> 34:29.320
先折起来

34:29.320 --> 34:30.320
折起来的话

34:30.320 --> 34:31.320
你看他这边

34:31.320 --> 34:32.320
核心就是什么

34:32.320 --> 34:33.320
核心是不是就是

34:33.320 --> 34:35.320
铺� 屁股 泡泡

34:35.320 --> 34:37.320
导出了这三个方法

34:37.320 --> 34:38.320
对不对

34:38.320 --> 34:40.320
再加这个sift

34:40.320 --> 34:41.320
这个练sift

34:41.320 --> 34:43.320
sift up

34:43.320 --> 34:44.320
和sift down

34:44.320 --> 34:46.320
他这个的话是向上调整

34:46.320 --> 34:48.320
和向下调整

34:48.320 --> 34:49.320
OK

34:49.320 --> 34:50.320
然后这个是一个辅助方法

34:50.320 --> 34:52.320
compare进行比较的

34:52.320 --> 34:54.320
什么叫做这个向上调整

34:54.320 --> 34:55.320
那比如说我这边

34:55.320 --> 34:56.320
我举个例子

34:57.320 --> 34:58.320
我们这边先在笔记里面

34:58.320 --> 34:59.320
记住一下

34:59.320 --> 35:01.320
在react中

35:01.320 --> 35:03.320
在react中

35:03.320 --> 35:05.320
这个最小堆

35:05.320 --> 35:08.320
对应的这个原码

35:08.320 --> 35:09.320
在哪里呢

35:09.320 --> 35:10.320
在这个

35:10.320 --> 35:12.320
在这个文件里面

35:13.320 --> 35:15.320
在这个文件里面

35:15.320 --> 35:19.080
在这个点

35:19.080 --> 35:21.080
接S

35:21.080 --> 35:22.080
文件中

35:22.080 --> 35:24.080
文件中

35:24.080 --> 35:25.080
好

35:25.080 --> 35:26.080
然后总共

35:26.080 --> 35:28.080
总共有几个

35:28.080 --> 35:30.080
总共是6个是吧

35:30.080 --> 35:32.080
总共有6个

35:32.080 --> 35:34.080
6个方法

35:34.080 --> 35:36.080
其中向外暴露了

35:36.080 --> 35:40.080
向外暴露了3个

35:40.080 --> 35:42.080
3个方法

35:42.080 --> 35:44.080
向外暴露的分别是什么

35:44.080 --> 35:46.080
分别是push

35:46.080 --> 35:48.080
然后pop

35:48.080 --> 35:50.080
然后接下来pick

35:50.080 --> 35:51.080
对不对

35:51.080 --> 35:52.080
一会我们就主要

35:52.080 --> 35:54.080
就看一下这三个方法

35:54.080 --> 35:55.080
好

35:55.080 --> 35:57.080
接下来没有暴露的

35:57.080 --> 36:00.080
没有暴露的

36:00.080 --> 36:02.080
是那几个

36:02.080 --> 36:05.080
一个是sift

36:05.080 --> 36:07.080
sift up

36:07.080 --> 36:08.080
这个是代表什么呢

36:08.080 --> 36:10.080
代表向上调整

36:10.080 --> 36:13.080
向上调整

36:13.080 --> 36:16.080
然后加这个sift down

36:16.080 --> 36:19.080
这个是向下调整

36:19.080 --> 36:22.080
向下调整

36:22.080 --> 36:24.080
然后一个是compare

36:24.080 --> 36:25.080
compare

36:25.080 --> 36:26.080
这个是一个

36:26.080 --> 36:28.080
这是一个辅助方法

36:28.080 --> 36:31.080
这是一个辅助方法

36:31.080 --> 36:33.080
辅助方法

36:33.080 --> 36:36.080
就是两个元素

36:36.080 --> 36:37.080
两个元素

36:37.080 --> 36:39.080
做比较的

36:40.080 --> 36:42.080
因为我到时候我要调整位置

36:42.080 --> 36:43.080
调整位置的话

36:43.080 --> 36:44.080
要不要调

36:44.080 --> 36:45.080
我需要就是两个元素进行比较

36:45.080 --> 36:46.080
对不对

36:46.080 --> 36:48.080
它通过这个compare方法进行比较

36:48.080 --> 36:49.080
好

36:49.080 --> 36:50.080
这个push

36:50.080 --> 36:53.080
push的话是向这个最小堆

36:53.080 --> 36:55.080
最小堆推入

36:55.080 --> 36:57.080
一个元素

36:57.080 --> 36:58.080
这个pop

36:58.080 --> 37:00.080
pop是弹出一个

37:00.080 --> 37:02.080
弹出一个

37:02.080 --> 37:04.080
然后加这个pick

37:04.080 --> 37:06.080
pick是取出第一个

37:06.080 --> 37:08.080
取出第一个

37:09.080 --> 37:10.080
好

37:10.080 --> 37:11.080
我先说一下

37:11.080 --> 37:12.080
什么叫向上调整

37:12.080 --> 37:14.080
什么叫做向下调整

37:14.080 --> 37:15.080
向上调整是这个样子的

37:15.080 --> 37:16.080
比如说我这边

37:16.080 --> 37:18.080
我举个例子

37:18.080 --> 37:20.080
回到我们这边

37:20.080 --> 37:22.580
回到这边

37:22.580 --> 37:25.580
把这个稍微说小一点

37:25.580 --> 37:26.580
比如说现在的话

37:26.580 --> 37:27.580
我这个最小堆

37:27.580 --> 37:30.580
把这个辅助干掉

37:30.580 --> 37:32.580
这些都不要了

37:32.580 --> 37:38.620
把这些都干掉

37:38.620 --> 37:39.620
比如说我现在的话

37:39.620 --> 37:42.620
是这个最小堆

37:42.620 --> 37:44.620
最小堆

37:44.620 --> 37:46.620
那我想想

37:46.620 --> 37:47.620
先就这样子

37:47.620 --> 37:48.620
这个最小堆

37:48.620 --> 37:49.620
比如说我现在的话

37:49.620 --> 37:52.620
我新增了一个

37:52.620 --> 37:53.620
新增一个

37:53.620 --> 37:55.620
新增一个是不是应该放在这里

37:55.620 --> 37:56.620
对不对

37:56.620 --> 37:57.620
放在这里

37:57.620 --> 37:58.620
新增的这个是多少呢

37:58.620 --> 38:01.620
新增的这个是一个

38:01.620 --> 38:04.620
比如说1.5

38:04.620 --> 38:05.620
1.5

38:05.620 --> 38:06.620
那1.5的话

38:06.620 --> 38:07.620
你这个元素

38:07.620 --> 38:08.620
放在这

38:08.620 --> 38:09.620
合不合适

38:09.620 --> 38:10.620
合不合适

38:10.620 --> 38:11.620
说不合适

38:11.620 --> 38:12.620
对不对

38:12.620 --> 38:13.620
他就干嘛

38:13.620 --> 38:14.620
他就往上调整

38:14.620 --> 38:15.620
对不对

38:15.620 --> 38:17.620
他就应该是往上调整

38:17.620 --> 38:21.620
把这个还是给大家画个图

38:21.620 --> 38:22.620
ok

38:22.620 --> 38:23.620
好

38:23.620 --> 38:24.620
然后接下来你放在这不合适

38:24.620 --> 38:25.620
让我这边就该干嘛

38:25.620 --> 38:28.620
向上调整

38:28.620 --> 38:29.620
对不对

38:29.620 --> 38:30.620
让我这边

38:30.620 --> 38:31.620
就应该是把这个

38:31.620 --> 38:32.620
往上调整

38:32.620 --> 38:33.620
这个变成多少

38:33.620 --> 38:34.620
这个变成1.5

38:34.620 --> 38:35.620
这个变成多少

38:35.620 --> 38:37.620
这个变成4

38:37.620 --> 38:38.620
对不对

38:38.620 --> 38:39.620
把这颜色换回来

38:39.620 --> 38:41.620
这个1.5

38:41.620 --> 38:42.620
这就是所谓的向上调整

38:42.620 --> 38:44.620
如果这个纸比他还要小

38:44.620 --> 38:45.620
那他就继续往

38:45.620 --> 38:46.620
继续往上走

38:46.620 --> 38:47.620
比如说我这边

38:47.620 --> 38:48.620
如果是0.5的话

38:48.620 --> 38:49.620
如果这是0.5

38:49.620 --> 38:50.620
那你走到这

38:50.620 --> 38:51.620
走到这是吧

38:51.620 --> 38:52.620
还要继续往上面走

38:52.620 --> 38:53.620
对不对

38:53.620 --> 38:54.620
这就是向上调整

38:54.620 --> 38:57.620
调整到他合适的位置

38:57.620 --> 39:05.920
回到这边

39:05.920 --> 39:08.920
所谓向上调整

39:08.920 --> 39:11.920
所谓向上调整

39:11.920 --> 39:16.920
向上调整

39:16.920 --> 39:23.920
就是只将一个元素

39:23.920 --> 39:25.920
和他的上一层

39:25.920 --> 39:28.920
和他的这个复结点

39:28.920 --> 39:29.920
对吧

39:29.920 --> 39:30.920
复结点

39:30.920 --> 39:32.920
复结点

39:32.920 --> 39:33.920
做比较

39:33.920 --> 39:34.920
然后接下来

39:34.920 --> 39:37.920
如果比这个复结点

39:38.920 --> 39:41.920
复结点小

39:41.920 --> 39:42.920
是不是就应该往上

39:42.920 --> 39:43.920
是不是

39:43.920 --> 39:44.920
这个和复结点

39:44.920 --> 39:45.920
就应该做交换

39:45.920 --> 39:46.920
对不对

39:46.920 --> 39:51.920
那么就应该和复结点

39:51.920 --> 39:53.920
做交换

39:53.920 --> 39:54.920
对不对

39:54.920 --> 39:55.920
交换完了之后

39:55.920 --> 39:58.920
再和上一层的复结点比较

39:58.920 --> 39:59.920
要不要比这个

39:59.920 --> 40:00.920
上一层的复结点还要小

40:00.920 --> 40:01.920
如果还要小

40:01.920 --> 40:02.920
就继续交换

40:02.920 --> 40:03.920
依此类推

40:03.920 --> 40:05.920
交换完了之后

40:05.920 --> 40:08.920
继续和上一层

40:08.920 --> 40:11.920
上一层的这个复结点

40:11.920 --> 40:12.920
复结点

40:12.920 --> 40:13.920
做比较

40:13.920 --> 40:14.920
对不对

40:14.920 --> 40:15.920
依此类推

40:15.920 --> 40:17.920
依此类推

40:17.920 --> 40:18.920
直到什么

40:18.920 --> 40:19.920
是不是直到

40:19.920 --> 40:23.920
直到这个该元素

40:23.920 --> 40:24.920
该元素

40:24.920 --> 40:25.920
放置

40:25.920 --> 40:27.920
放置到了

40:27.920 --> 40:29.920
正确的位置

40:29.920 --> 40:32.920
正确的位置

40:32.920 --> 40:35.920
正确的位置

40:35.920 --> 40:36.920
对不对

40:36.920 --> 40:38.920
OK

40:38.920 --> 40:40.920
这个就是向上调整

40:40.920 --> 40:41.920
向下调整的话

40:41.920 --> 40:43.920
那就是和它相反

40:43.920 --> 40:44.920
对不对

40:44.920 --> 40:46.920
就是我的元素就往下走

40:46.920 --> 40:49.920
向下调整

40:49.920 --> 40:52.920
向下调整

40:52.920 --> 40:53.920
就刚好什么

40:53.920 --> 40:55.920
就刚好

40:55.920 --> 40:57.920
刚好相反

40:57.920 --> 41:00.920
就是元素往下走

41:00.920 --> 41:03.920
元素往下走

41:03.920 --> 41:04.920
那元素往下走的话

41:04.920 --> 41:05.920
那这边就会遇到一个问题

41:05.920 --> 41:07.920
让我这边这个元素

41:07.920 --> 41:08.920
比如说我这边

41:08.920 --> 41:09.920
它有两个分子

41:09.920 --> 41:10.920
对不对

41:10.920 --> 41:11.920
两个分子它先比哪个

41:11.920 --> 41:12.920
它这边的话

41:12.920 --> 41:13.920
在元码里面

41:13.920 --> 41:14.920
它就先比的什么呢

41:14.920 --> 41:16.920
先比的这个左边

41:16.920 --> 41:18.920
这边大家可以看一下

41:18.920 --> 41:20.920
放大点

41:20.920 --> 41:21.920
你看它这边

41:21.920 --> 41:23.920
在shift down的时候

41:23.920 --> 41:24.920
看到没有

41:24.920 --> 41:26.920
if the left or right node

41:26.920 --> 41:27.920
is smaller

41:27.920 --> 41:29.920
大家这边swap with smaller rows

41:29.920 --> 41:31.920
它是先比的是左分子

41:31.920 --> 41:32.920
看到没有

41:32.920 --> 41:33.920
比左分子

41:33.920 --> 41:34.920
接下来再比什么

41:34.920 --> 41:36.920
再比的右分子

41:36.920 --> 41:38.920
ok 它这样子做了

41:38.920 --> 41:40.920
回到我们的笔记

41:40.920 --> 41:42.920
向下调整就刚好相反

41:42.920 --> 41:44.920
元素往下走

41:44.920 --> 41:46.920
然后先和左分子

41:46.920 --> 41:48.920
先和左分子

41:48.920 --> 41:51.920
进行这个比较

41:51.920 --> 41:53.920
然后如果

41:53.920 --> 41:55.920
如果这个

41:55.920 --> 41:57.920
比左分子小

41:57.920 --> 41:58.920
比左分子小

41:58.920 --> 42:00.920
左分子小

42:00.920 --> 42:01.920
对不对

42:01.920 --> 42:02.920
那就往下

42:02.920 --> 42:04.920
那就交换

42:04.920 --> 42:06.920
那就交换

42:06.920 --> 42:07.920
ok

42:07.920 --> 42:09.920
什么时候会用到这个向下调整呢

42:09.920 --> 42:11.920
一会它这边这个pop

42:11.920 --> 42:12.920
方法

42:12.920 --> 42:14.920
你看它这边这个pop的时候

42:14.920 --> 42:16.920
pop它这边就会用到这个shift down

42:16.920 --> 42:18.920
我们一会看这个pop

42:18.920 --> 42:19.920
方法的时候

42:19.920 --> 42:20.920
我们具体再看一下它这个shift down

42:20.920 --> 42:22.920
这叫做sift

42:22.920 --> 42:23.920
sift down

42:23.920 --> 42:25.920
一会我们再看一下这个方法

42:25.920 --> 42:26.920
ok

42:26.920 --> 42:28.920
这是关于这个向上

42:28.920 --> 42:30.920
这个向上调整和向下调整

42:30.920 --> 42:32.920
好 然后接下来

42:32.920 --> 42:33.920
我们着重就看什么呢

42:33.920 --> 42:34.920
着重就看这个

42:34.920 --> 42:36.920
着重就看这个方法

42:36.920 --> 42:38.920
ok 先看一个简单的吧

42:38.920 --> 42:40.920
我们先看一个简单的

42:40.920 --> 42:41.920
先看什么呢

42:41.920 --> 42:42.920
先看这个peak

42:42.920 --> 42:44.920
peak是什么

42:44.920 --> 42:45.920
还记得吧

42:45.920 --> 42:47.920
是不是取出这个

42:47.920 --> 42:49.920
堆顶的这个任务

42:49.920 --> 42:50.920
对不对

42:50.920 --> 42:52.920
取出堆顶的任务

42:52.920 --> 42:55.920
取出堆顶的任务

42:56.920 --> 42:59.920
堆顶的任务

42:59.920 --> 43:00.920
这个一定是什么

43:00.920 --> 43:01.920
是不是一定是最小的

43:01.920 --> 43:02.920
对不对

43:02.920 --> 43:03.920
堆顶

43:03.920 --> 43:04.920
堆顶

43:04.920 --> 43:06.920
一定是什么

43:06.920 --> 43:08.920
是最小的

43:08.920 --> 43:09.920
对不对

43:09.920 --> 43:10.920
它一定是最小的

43:10.920 --> 43:11.920
这个我们刚才已经说过了

43:11.920 --> 43:12.920
对吧

43:12.920 --> 43:13.920
好 来我们这边来看一下

43:13.920 --> 43:14.920
它的这个代码

43:16.920 --> 43:17.920
还是

43:17.920 --> 43:18.920
还是用刚才

43:18.920 --> 43:20.920
就是之前一样的方法

43:23.490 --> 43:25.490
放过来

43:25.490 --> 43:26.490
ok

43:26.490 --> 43:28.490
把这些类型的

43:28.490 --> 43:29.490
这些标注

43:29.490 --> 43:30.490
把它注释掉

43:30.490 --> 43:31.490
不不不

43:31.490 --> 43:32.490
把它删掉

43:32.490 --> 43:34.490
这边返回一个字

43:34.490 --> 43:35.490
ok

43:35.490 --> 43:36.490
因为发现这个方法

43:36.490 --> 43:38.490
极其的简单

43:38.490 --> 43:39.490
对不对

43:39.490 --> 43:40.490
极其的简单

43:40.490 --> 43:41.490
这边就是看你这个

43:41.490 --> 43:42.490
heap

43:42.490 --> 43:43.490
heap就是什么

43:43.490 --> 43:44.490
heap就是你的那个

43:44.490 --> 43:45.490
task

43:45.490 --> 43:46.490
我们这边

43:46.490 --> 43:48.490
联系着那边来看吧

43:48.490 --> 43:49.490
联系着那边

43:49.490 --> 43:50.490
这边

43:50.490 --> 43:52.490
我们找一个在用peak的

43:52.490 --> 43:55.800
找一个在用peak的

43:55.800 --> 43:56.800
在用peak的

43:56.800 --> 43:57.800
这边

43:57.800 --> 43:58.800
不要这个

43:59.800 --> 44:00.800
对吧

44:00.800 --> 44:01.800
好

44:01.800 --> 44:02.800
然后接下来这边

44:02.800 --> 44:03.800
回到

44:04.800 --> 44:05.800
回到这边

44:07.800 --> 44:08.800
你这边这个peak

44:08.800 --> 44:09.800
peak这边传入的就是什么

44:09.800 --> 44:10.800
是不是就是你的任务对立

44:10.800 --> 44:11.800
这边的话

44:11.800 --> 44:12.800
做的事情就是什么

44:12.800 --> 44:14.800
是返回第一个

44:14.800 --> 44:15.800
对不对

44:15.800 --> 44:16.800
返回这个

44:16.800 --> 44:18.800
数组的

44:18.800 --> 44:19.800
第一个元素

44:20.800 --> 44:21.800
对不对

44:21.800 --> 44:22.800
为什么

44:22.800 --> 44:23.800
因为你数组的

44:23.800 --> 44:24.800
第一个元素

44:24.800 --> 44:26.800
还记得刚才我们那个图吧

44:26.800 --> 44:27.800
我们这个是一个

44:27.800 --> 44:28.800
这个最小堆

44:28.800 --> 44:29.800
对不对

44:29.800 --> 44:30.800
这个最小堆

44:30.800 --> 44:31.800
最小堆的话

44:31.800 --> 44:32.800
你这边零

44:32.800 --> 44:33.800
就是代表这边

44:33.800 --> 44:34.800
第一个

44:34.800 --> 44:35.800
第一个他是不一定是最小的

44:35.800 --> 44:36.800
对不对

44:36.800 --> 44:37.800
说这个方法

44:37.800 --> 44:38.800
极其的简单

44:39.800 --> 44:40.800
这个方法

44:40.800 --> 44:42.800
极其的简单

44:43.800 --> 44:45.800
极其的简单

44:45.800 --> 44:46.800
如下

44:51.140 --> 44:55.220
把格式画一下

44:55.220 --> 44:58.870
OK

44:58.870 --> 45:00.870
这是这个peak

45:00.870 --> 45:01.870
好

45:01.870 --> 45:02.870
然后接下来我们来看什么

45:02.870 --> 45:04.870
我们来看这个peak

45:04.870 --> 45:06.870
peak

45:06.870 --> 45:07.870
peak是什么

45:07.870 --> 45:09.870
peak的话是向这个最小堆

45:09.870 --> 45:10.870
是不是推入一个

45:10.870 --> 45:11.870
对不对

45:13.870 --> 45:15.870
向这个最小堆

45:15.870 --> 45:18.870
最小堆推入

45:18.870 --> 45:20.870
一个新任务

45:21.870 --> 45:22.870
对吧

45:22.870 --> 45:24.870
推入到一个新任务

45:24.870 --> 45:25.870
那你推入到新任务的话

45:25.870 --> 45:26.870
他用的是数组

45:26.870 --> 45:28.870
数组的话你这个peak

45:28.870 --> 45:29.870
他就是在什么

45:29.870 --> 45:31.870
是不是在数组的最后一位

45:31.870 --> 45:32.870
对不对

45:32.870 --> 45:33.870
在数组的最后一位

45:33.870 --> 45:34.870
但在数组的最后一位

45:34.870 --> 45:35.870
这边就会遇

45:35.870 --> 45:36.870
就是遇到一个问题

45:36.870 --> 45:37.870
什么问题

45:37.870 --> 45:38.870
就好比我们刚才这

45:38.870 --> 45:39.870
你在数组的最后一位

45:39.870 --> 45:42.870
但是你能比上一级要小

45:42.870 --> 45:43.870
对不对

45:43.870 --> 45:44.870
上一级要小

45:44.870 --> 45:45.870
那这边就会

45:45.870 --> 45:46.870
就是涉及到什么

45:46.870 --> 45:48.870
是不是涉及到向上调整

45:48.870 --> 45:49.870
对不对

45:49.870 --> 45:50.870
OK

45:51.870 --> 45:52.870
因为

45:52.870 --> 45:54.870
使用的是数组

45:54.870 --> 45:57.870
使用的是数组

45:57.870 --> 46:02.870
所以在推入任务的时候

46:02.870 --> 46:04.870
任务的时候

46:04.870 --> 46:05.870
首先

46:05.870 --> 46:10.870
该任务是被推入到

46:10.870 --> 46:13.870
这个数组的最后一项

46:13.870 --> 46:14.870
对不对

46:14.870 --> 46:15.870
最后一项

46:15.870 --> 46:18.870
但是这个时候

46:18.870 --> 46:19.870
这个时候

46:19.870 --> 46:21.870
涉及到一个什么

46:21.870 --> 46:23.870
涉及到一个调整

46:23.870 --> 46:24.870
对不对

46:24.870 --> 46:26.870
我们需要什么

46:26.870 --> 46:29.870
是不是向上调整

46:29.870 --> 46:31.870
把这个任务

46:31.870 --> 46:38.870
把这个任务调整到合适的位置

46:38.870 --> 46:40.870
合适的位置

46:40.870 --> 46:42.870
它是根据什么来

46:42.870 --> 46:43.870
这个定义的

46:43.870 --> 46:44.870
是不是就是你那个

46:44.870 --> 46:45.870
延时的时间

46:45.870 --> 46:46.870
还记得吧

46:46.870 --> 46:49.870
就我们有一个这个sort index

46:49.870 --> 46:50.870
还记不记得

46:50.870 --> 46:51.870
在这边

46:51.870 --> 46:53.870
来过来看一下原码吧

46:53.870 --> 46:57.630
原码在这边

46:57.630 --> 47:01.630
它有一个sort index

47:01.630 --> 47:03.630
到哪去了

47:03.630 --> 47:08.070
sort index

47:08.070 --> 47:09.070
sort

47:09.070 --> 47:10.070
这里

47:10.070 --> 47:11.070
对不对

47:11.070 --> 47:12.070
你这边有个sort index

47:12.070 --> 47:13.070
默认是负一

47:13.070 --> 47:14.070
然后在这边

47:14.070 --> 47:15.070
我这边这个sort index

47:15.070 --> 47:16.070
等于什么

47:16.070 --> 47:17.070
就等于你这边

47:17.070 --> 47:19.070
我要设置一个时间

47:19.070 --> 47:20.070
对不对

47:20.070 --> 47:21.070
一个这个开始时间

47:21.070 --> 47:22.070
开始时间又等于什么

47:22.070 --> 47:23.070
开始时间

47:23.070 --> 47:24.070
是不是等于你这个

47:24.070 --> 47:26.070
当前时间加一个这个delay

47:26.070 --> 47:27.070
对不对

47:27.070 --> 47:28.070
它的这个延时

47:28.070 --> 47:30.070
到时候它就会根据什么

47:30.070 --> 47:31.070
根据这个

47:31.070 --> 47:32.070
来进行一个这个

47:32.070 --> 47:34.070
最小对的一个排序

47:35.070 --> 47:36.070
好来我们来看一下

47:36.070 --> 47:37.070
它的这个原码

47:37.070 --> 47:39.070
这边这个push

47:39.070 --> 47:41.070
把这个把它过来

47:43.770 --> 47:46.770
你发现这个push也是非常简单

47:46.770 --> 47:47.770
对吧

47:47.770 --> 47:49.770
代码的话非常简单

47:49.770 --> 47:50.770
这边

47:50.770 --> 47:52.770
这边是接收两个参数

47:52.770 --> 47:53.770
一个是你的任务对列

47:53.770 --> 47:57.770
一个是你推入的这个节点

47:57.770 --> 47:58.770
对不对

47:58.770 --> 47:59.770
好

47:59.770 --> 48:00.770
然后我们再找一个这个

48:00.770 --> 48:05.490
使用这个push的

48:05.490 --> 48:07.490
在这边找

48:07.490 --> 48:09.490
在这边找

48:09.490 --> 48:10.490
push

48:10.490 --> 48:11.490
嗯

48:12.490 --> 48:13.490
这边啊

48:13.490 --> 48:14.490
比较这里

48:14.490 --> 48:17.890
啊

48:17.890 --> 48:18.890
过来到这里

48:18.890 --> 48:21.460
啊

48:21.460 --> 48:22.460
这个是什么

48:22.460 --> 48:23.460
这个是不是你的任务啊

48:23.460 --> 48:24.460
对不对

48:24.460 --> 48:25.460
Timer

48:25.460 --> 48:27.460
Timer是他封装的这个任务

48:27.460 --> 48:28.460
我们找找一个那个吧

48:28.460 --> 48:29.460
我看一下

48:29.460 --> 48:31.460
and miss

48:31.460 --> 48:32.460
我们找一个这个吧

48:32.460 --> 48:34.460
这边push

48:36.460 --> 48:37.460
这个

48:37.460 --> 48:38.460
这个呢

48:38.460 --> 48:39.460
这个漏的就是什么

48:39.460 --> 48:40.460
是不是你的新的任务

48:40.460 --> 48:41.460
那个任务对象

48:41.460 --> 48:42.460
对不对

48:42.460 --> 48:43.460
大家这边

48:43.460 --> 48:44.460
这个是你的任务对列

48:44.460 --> 48:45.460
就那个数组

48:45.460 --> 48:46.460
好

48:46.460 --> 48:47.460
大家这边这个push

48:47.460 --> 48:48.460
来看一下他做什么

48:48.460 --> 48:49.460
这边首先的话

48:49.460 --> 48:51.460
是拿到这个index

48:51.460 --> 48:52.460
拿到index之后

48:52.460 --> 48:53.460
这个index就他长度

48:53.460 --> 48:54.460
好

48:54.460 --> 48:55.460
大家这边是不是

48:55.460 --> 48:56.460
就推入到这个数组的

48:56.460 --> 48:57.460
最后一位

48:57.460 --> 48:58.460
对不对

48:58.460 --> 48:59.460
推入到

48:59.460 --> 49:01.460
数组的

49:01.460 --> 49:02.460
最后

49:02.460 --> 49:03.460
一位

49:03.460 --> 49:04.460
对不对

49:04.460 --> 49:05.460
好

49:05.460 --> 49:06.460
然后接下来这边

49:06.460 --> 49:08.460
这边那就是向上调整

49:08.460 --> 49:10.460
向上调整

49:10.460 --> 49:11.460
向上调整的话

49:11.460 --> 49:12.460
你可以去看一下

49:12.460 --> 49:13.460
这个他的这个代码

49:13.460 --> 49:14.460
啊

49:14.460 --> 49:15.460
向上调整的话

49:15.460 --> 49:16.460
其实就是

49:16.460 --> 49:17.460
这个

49:17.460 --> 49:18.460
你看一下

49:18.460 --> 49:19.460
就是通过这个wild

49:19.460 --> 49:20.460
啊去循环

49:20.460 --> 49:21.460
循环了之后

49:21.460 --> 49:22.460
大家不断的和什么呢

49:22.460 --> 49:23.460
和他的这个复原书

49:23.460 --> 49:24.460
进行比较

49:24.460 --> 49:25.460
看没有

49:25.460 --> 49:26.460
这边compare

49:26.460 --> 49:27.460
这个parnate

49:27.460 --> 49:28.460
和这个load

49:28.460 --> 49:29.460
对不对

49:29.460 --> 49:30.460
进行比较

49:30.460 --> 49:31.460
如果我比这个复原书小

49:31.460 --> 49:32.460
那是不是叫交换

49:32.460 --> 49:33.460
对不对

49:34.460 --> 49:35.460
好这个呢

49:35.460 --> 49:36.460
就是关于这个

49:36.460 --> 49:37.460
push这个方法

49:38.460 --> 49:40.960
好到这边来

49:43.960 --> 49:44.960
ok

49:44.960 --> 49:45.960
推到最后一位

49:45.960 --> 49:46.960
向上调整

49:46.960 --> 49:47.960
调整到这个

49:47.960 --> 49:48.960
合适的位置

49:49.960 --> 49:50.960
调整到

49:51.960 --> 49:52.960
合适的位置

49:54.960 --> 49:55.960
对不对

49:55.960 --> 49:56.960
那我这样子

49:56.960 --> 49:57.960
始终能保证什么

49:57.960 --> 49:58.960
始终能保证我这边

49:58.960 --> 49:59.960
在取的时候

49:59.960 --> 50:00.960
始终能取到什么

50:00.960 --> 50:01.960
始终能取到最小的

50:01.960 --> 50:02.960
对不对

50:02.960 --> 50:03.960
对不对

50:03.960 --> 50:04.960
始终取能取到最小的

50:05.960 --> 50:06.960
这是peak

50:06.960 --> 50:07.960
push

50:07.960 --> 50:08.960
好然后接下来

50:08.960 --> 50:09.960
话有一个什么呢

50:09.960 --> 50:10.960
有一个pop

50:11.960 --> 50:12.960
看一下这个pop

50:12.960 --> 50:13.960
pop的话

50:13.960 --> 50:14.960
他是弹出

50:14.960 --> 50:15.960
这个peak

50:15.960 --> 50:16.960
peak只是取

50:16.960 --> 50:17.960
把第一个

50:17.960 --> 50:18.960
把它取出来

50:18.960 --> 50:19.960
取出来

50:19.960 --> 50:20.960
执行完了之后

50:20.960 --> 50:21.960
我叫从这个对立里面

50:21.960 --> 50:22.960
叫把它弹出

50:22.960 --> 50:23.960
我们这边来看一下

50:23.960 --> 50:28.300
这边我们来看一下

50:28.300 --> 50:30.300
比如说这边peak

50:33.310 --> 50:34.310
peak

50:34.310 --> 50:35.310
到这边来

50:35.310 --> 50:36.310
这边peak

50:36.310 --> 50:39.620
peak

50:39.620 --> 50:40.620
peak刚才看了

50:40.620 --> 50:42.620
我们看看那个pop

50:42.620 --> 50:45.000
pop

50:45.000 --> 50:47.950
这里

50:47.950 --> 50:48.950
对不对

50:48.950 --> 50:49.950
一般来讲就是

50:49.950 --> 50:50.950
一般就是

50:50.950 --> 50:51.950
这边你把它取出

50:51.950 --> 50:52.950
取出完了之后

50:52.950 --> 50:53.950
然后叫你这边

50:53.950 --> 50:54.950
比如说这个执行完了之后

50:54.950 --> 50:55.950
然后叫我们这边

50:55.950 --> 50:56.950
要把它从对立里面

50:56.950 --> 50:57.950
要把它弹出

50:58.950 --> 50:59.950
可以吗

50:59.950 --> 51:00.950
弹出

51:00.950 --> 51:01.950
没看到那个

51:01.950 --> 51:02.950
没看到那个task

51:03.950 --> 51:04.950
我看一下task

51:05.950 --> 51:06.950
这里

51:06.950 --> 51:07.950
对不对

51:07.950 --> 51:08.950
这边peak

51:08.950 --> 51:09.950
peak完了之后

51:09.950 --> 51:10.950
让大家这边pop

51:11.950 --> 51:12.950
好

51:12.950 --> 51:13.950
那这边来看一下

51:15.950 --> 51:20.540
这边是

51:20.540 --> 51:21.540
pop

51:21.540 --> 51:22.540
从对立里面弹出

51:22.540 --> 51:23.540
让大家我们来看一下

51:23.540 --> 51:24.540
它的这个圆码

51:27.540 --> 51:29.540
看一下它的圆码

51:29.540 --> 51:30.540
在pop

51:30.540 --> 51:31.540
在这边

51:31.540 --> 51:32.540
pop

51:33.540 --> 51:34.540
在这里

51:34.540 --> 51:35.540
OK

51:35.540 --> 51:39.010
好

51:39.010 --> 51:40.010
让它把这边

51:40.010 --> 51:41.010
干掉

51:42.010 --> 51:43.010
大家这边

51:43.010 --> 51:44.010
这边接收的就是什么

51:44.010 --> 51:45.010
是任务对立

51:45.010 --> 51:46.010
对

51:46.010 --> 51:47.010
任务对立

51:47.010 --> 51:48.010
好来我们来看一下

51:48.010 --> 51:49.010
它这边在做什么

51:49.010 --> 51:51.010
怎么又把磁链打开了

51:52.010 --> 51:53.010
好

51:55.010 --> 51:56.010
OK

51:56.010 --> 51:57.010
你看看

51:57.010 --> 51:58.010
如果这个任务对立

51:58.010 --> 51:59.010
是0

51:59.010 --> 52:01.010
0的话就返回这个空

52:01.010 --> 52:02.010
对不对

52:02.010 --> 52:03.010
好否则的话

52:03.010 --> 52:04.010
这边干嘛呢

52:04.010 --> 52:05.010
这边那是

52:05.010 --> 52:06.010
获取

52:06.010 --> 52:08.010
获取数组的

52:08.010 --> 52:09.010
第一个

52:09.010 --> 52:10.010
第一个

52:10.010 --> 52:11.010
这个任务

52:11.010 --> 52:12.010
对这个第一个任务

52:12.010 --> 52:13.010
一定是什么

52:13.010 --> 52:15.010
一定是最小的

52:15.010 --> 52:16.010
对不对

52:16.010 --> 52:17.010
最小的

52:17.010 --> 52:18.010
然后接下来这边

52:18.010 --> 52:19.010
把它返回

52:19.010 --> 52:20.010
返回

52:20.010 --> 52:21.010
OK

52:21.010 --> 52:22.010
然后接下来这个

52:22.010 --> 52:23.010
这个是拿到什么

52:23.010 --> 52:24.010
拿到数组的最后一个

52:25.010 --> 52:29.010
拿到数组的最后一个

52:30.010 --> 52:31.010
然后接下来这边判断

52:31.010 --> 52:32.010
判断

52:32.010 --> 52:34.010
如果它不是

52:34.010 --> 52:36.010
就是nast和first不相等

52:36.010 --> 52:37.010
不相等的话

52:37.010 --> 52:38.010
我就干嘛呢

52:38.010 --> 52:39.010
我就把最后一个任务

52:39.010 --> 52:40.010
放到第一个

52:43.010 --> 52:44.010
OK

52:44.010 --> 52:45.010
放完了之后

52:45.010 --> 52:47.010
然后接下来向下调整

52:47.010 --> 52:51.010
接下来向下调整

52:51.010 --> 52:52.010
向下调整

52:52.010 --> 52:53.010
OK

52:53.010 --> 52:54.010
向下调整

52:54.010 --> 52:56.010
调整到合适的位置

52:56.010 --> 52:57.010
这个是什么意思

52:57.010 --> 52:58.010
这个可能有些同学

52:58.010 --> 52:59.010
刚开始看的时候

52:59.010 --> 53:00.010
感觉看不懂

53:00.010 --> 53:01.010
前面两个方法还好

53:01.010 --> 53:02.010
对不对

53:02.010 --> 53:03.010
前面两个方法

53:03.010 --> 53:04.010
非常好理解

53:04.010 --> 53:05.010
这个的话

53:05.010 --> 53:06.010
我是要弹出一个任务

53:06.010 --> 53:07.010
弹出一个任务

53:07.010 --> 53:08.010
弹出一个任务

53:08.010 --> 53:09.010
弹出一个任务

53:09.010 --> 53:10.010
弹出一个任务

53:10.010 --> 53:11.010
弹出一个任务

53:11.010 --> 53:12.010
弹出一个任务

53:12.010 --> 53:13.010
弹出一个任务

53:13.010 --> 53:14.010
我为什么要把这个

53:14.010 --> 53:15.010
最后一个任务

53:15.010 --> 53:16.010
最后一个任务

53:16.010 --> 53:17.010
我要放到这个

53:17.010 --> 53:18.010
第一个

53:18.010 --> 53:19.010
接下来又向下调整

53:19.010 --> 53:20.010
好来我们这个

53:20.010 --> 53:21.010
举个例子你就知道了

53:21.010 --> 53:23.010
这个我给大家画个图

53:23.010 --> 53:25.010
稍等我把这个先放过来

53:25.010 --> 53:30.010
POP是从这个任务堆里面

53:30.010 --> 53:31.010
任务堆

53:31.010 --> 53:35.010
任务堆里面弹出

53:35.010 --> 53:38.010
弹出第一个任务

53:38.010 --> 53:40.010
弹出第一个任务

53:40.010 --> 53:41.010
就第一个任务不要了

53:41.010 --> 53:42.010
堆里面已经执行完了

53:42.010 --> 53:43.010
不要了

53:43.010 --> 53:44.010
把它弹出

53:44.010 --> 53:45.010
刚才这个是取出

53:45.010 --> 53:46.010
这个不一样

53:46.010 --> 53:47.010
这个只是单纯的把它取出来

53:47.010 --> 53:48.010
取出来我执行

53:48.010 --> 53:50.010
它还在堆里面

53:50.010 --> 53:51.010
它还在堆里面

53:51.010 --> 53:52.010
这个的话

53:52.010 --> 53:53.010
我是完全就把这个

53:53.010 --> 53:54.010
第一个任务

53:54.010 --> 53:55.010
我就把它弹出了

53:55.010 --> 53:57.010
弹出它就没在堆里面了

53:57.010 --> 53:59.010
也就是

53:59.010 --> 54:02.010
也就是

54:02.010 --> 54:03.010
意味着

54:03.010 --> 54:04.010
意味着

54:04.010 --> 54:06.010
该任务

54:06.010 --> 54:08.010
已经没有在

54:08.010 --> 54:09.010
堆里面了

54:09.010 --> 54:10.010
对不对

54:10.010 --> 54:13.640
没有在堆里面了

54:13.640 --> 54:14.640
好

54:14.640 --> 54:17.640
这边这个是对应的

54:17.640 --> 54:18.640
对应的代码

54:18.640 --> 54:19.640
好这个的话

54:19.640 --> 54:20.640
然后你看这个代码

54:20.640 --> 54:21.640
你可能会觉得很奇怪

54:21.640 --> 54:22.640
对不对

54:22.640 --> 54:23.640
为什么要把这个最后一个

54:23.640 --> 54:24.640
放到第一个呢

54:24.640 --> 54:25.640
它放到第一个

54:25.640 --> 54:26.640
然后接下来

54:26.640 --> 54:28.640
它把它进行一个向下调整

54:28.640 --> 54:29.640
我们来画个图

54:29.640 --> 54:30.640
你就明白了

54:30.640 --> 54:31.640
比如我们这边

54:31.640 --> 54:33.640
我们来画个图

54:33.640 --> 54:35.640
我说小点

54:35.640 --> 54:36.640
好

54:36.640 --> 54:37.640
比如说我现在的话

54:37.640 --> 54:38.640
这边

54:38.640 --> 54:40.640
有这么一个

54:40.640 --> 54:41.640
随便写一个嘛

54:41.640 --> 54:43.640
这个是3

54:43.640 --> 54:44.640
这个是4

54:44.640 --> 54:46.640
这个是6

54:46.640 --> 54:47.640
然后再这边

54:47.640 --> 54:49.640
这个是一个7

54:49.640 --> 54:51.640
这个是一个9

54:51.640 --> 54:53.640
这个是一个8

54:53.640 --> 54:54.640
我现在这个是不是

54:54.640 --> 54:55.640
是个最小对

54:55.640 --> 54:56.640
对不对

54:56.640 --> 54:58.640
把这个干掉

54:58.640 --> 55:00.640
我现在这个是个最小对吧

55:00.640 --> 55:01.640
来检查一下

55:01.640 --> 55:02.640
是不是

55:02.640 --> 55:04.640
3的话比4比6小

55:04.640 --> 55:06.640
4的话比7比9小

55:06.640 --> 55:08.640
6的话比8小

55:08.640 --> 55:09.640
对不对

55:09.640 --> 55:10.640
是个最小对

55:10.640 --> 55:11.640
最小对的话

55:11.640 --> 55:12.640
现在的话我下一步

55:12.640 --> 55:13.640
下一步的话

55:13.640 --> 55:14.640
我把它这个弹出

55:14.640 --> 55:15.640
3的话是不是就没了

55:15.640 --> 55:16.640
对不对

55:16.640 --> 55:17.640
来我们来复制一份

55:18.640 --> 55:19.640
好吧

55:19.640 --> 55:20.640
这个稍微还是把它

55:20.640 --> 55:21.640
那个一下

55:21.640 --> 55:23.640
因为这边要画好几个图

55:23.640 --> 55:25.640
画好几个图

55:25.640 --> 55:29.910
把它稍微调整一下

55:29.910 --> 55:34.420
把这个调整一下

55:34.420 --> 55:36.420
这个是9

55:36.420 --> 55:38.420
这个是7

55:38.420 --> 55:40.420
这个是8

55:40.420 --> 55:42.420
把这边拿个线

55:42.420 --> 55:44.420
过来连着

55:44.420 --> 55:46.420
把它放大点

55:46.420 --> 55:48.420
现在这个是这样子的

55:48.420 --> 55:49.420
对不对

55:49.420 --> 55:51.420
大家我们复制一份

55:51.420 --> 55:53.420
复制一份拿过来

55:53.420 --> 55:54.420
那现在的话

55:54.420 --> 55:55.420
你这个3

55:55.420 --> 55:57.420
3的话是不是被弹出去了

55:57.420 --> 55:59.420
3的话被弹出去了

55:59.420 --> 56:00.420
弹出去了之后

56:00.420 --> 56:02.420
我把8放到第1个

56:02.420 --> 56:04.420
那现在就变成了什么样子

56:04.420 --> 56:06.420
是不是这个变成了8

56:06.420 --> 56:07.420
对不对

56:07.420 --> 56:08.420
没了

56:08.420 --> 56:10.420
把这个8换个颜色

56:10.420 --> 56:11.420
换成这个蓝色

56:11.420 --> 56:12.420
ok

56:12.420 --> 56:13.420
这边

56:13.420 --> 56:15.420
是不是就变成这个样子了

56:15.420 --> 56:16.420
变成这个样子了之后

56:16.420 --> 56:17.420
那现在他满不满足

56:17.420 --> 56:18.420
追小队

56:18.420 --> 56:19.420
不满足

56:19.420 --> 56:20.420
不满足

56:20.420 --> 56:21.420
所以说他这边远吗

56:21.420 --> 56:22.420
他这边

56:22.420 --> 56:24.420
所以说他这边远吗

56:24.420 --> 56:25.420
这边干嘛

56:25.420 --> 56:26.420
这边的话

56:26.420 --> 56:27.420
把他这个last

56:27.420 --> 56:28.420
放到这个第1个之后

56:28.420 --> 56:29.420
然后干嘛

56:29.420 --> 56:31.420
然后向下调整

56:31.420 --> 56:33.420
看到没有

56:33.420 --> 56:34.420
向下调整

56:34.420 --> 56:35.420
向下调整怎么调的

56:35.420 --> 56:37.420
刚才其实给大家看了一下的

56:37.420 --> 56:39.420
在这里

56:39.420 --> 56:41.420
把这个放大点

56:41.420 --> 56:43.420
向上调整怎么调的

56:43.420 --> 56:45.420
是不是先去比这个左边的这个数

56:45.420 --> 56:46.420
对不对

56:46.420 --> 56:47.420
先和左边的数比

56:47.420 --> 56:49.420
如果这个比左边的这个小

56:49.420 --> 56:50.420
是不是交换

56:50.420 --> 56:51.420
那再去干嘛

56:51.420 --> 56:52.420
再去比右边的数

56:52.420 --> 56:53.420
ok

56:53.420 --> 56:54.420
说这边你会发现

56:54.420 --> 56:55.420
这边他就变成什么样子了呢

56:55.420 --> 56:57.420
他变成这个样子了

56:59.420 --> 57:01.420
就变成这个样子

57:01.420 --> 57:02.420
接下来的话

57:02.420 --> 57:04.420
和这个左数进行比

57:04.420 --> 57:06.420
和左数进行比

57:06.420 --> 57:07.420
左数进行比的话

57:07.420 --> 57:08.420
然后发现这个8是比他大

57:08.420 --> 57:09.420
对不对

57:09.420 --> 57:10.420
那架8就交换

57:10.420 --> 57:11.420
对不对

57:11.420 --> 57:12.420
那架这边这个4

57:12.420 --> 57:13.420
是不是上来了

57:13.420 --> 57:14.420
对不对

57:14.420 --> 57:16.420
把这个颜色

57:16.420 --> 57:17.420
调整一下

57:17.420 --> 57:18.420
这是绿色

57:18.420 --> 57:19.420
这个4

57:19.420 --> 57:20.420
蓝色

57:20.420 --> 57:21.420
所以下来

57:21.420 --> 57:22.420
下来之后

57:22.420 --> 57:24.420
然后再和这个左数进行比较

57:24.420 --> 57:26.420
再进行比较

57:28.790 --> 57:29.790
好

57:29.790 --> 57:30.790
这边是4

57:30.790 --> 57:31.790
这边是4

57:31.790 --> 57:32.790
这边

57:32.790 --> 57:34.790
先把颜色把它变回去

57:35.790 --> 57:36.790
ok

57:36.790 --> 57:37.790
8的话

57:37.790 --> 57:38.790
然后再和这个7

57:38.790 --> 57:39.790
8和7进行比较

57:39.790 --> 57:40.790
是不是还是比其他

57:40.790 --> 57:41.790
对不对

57:41.790 --> 57:42.790
他始终先比这个左分支

57:42.790 --> 57:43.790
先比左分支

57:43.790 --> 57:44.790
还比他大

57:44.790 --> 57:45.790
对不对

57:45.790 --> 57:46.790
那接下来这个8

57:46.790 --> 57:47.790
就到这里来

57:48.790 --> 57:49.790
8就到这边来

57:49.790 --> 57:50.790
这个7

57:50.790 --> 57:51.790
7的话就在这边

57:52.790 --> 57:53.790
看到没有

57:53.790 --> 57:56.790
他就是通过这种方式进行调整

57:56.790 --> 57:57.790
大家这边

57:57.790 --> 57:59.790
把它调到这个

57:59.790 --> 58:00.790
最合适的位置

58:01.790 --> 58:02.790
看到没有

58:02.790 --> 58:04.790
把这个给大家解个图

58:04.790 --> 58:12.780
放到笔记里面

58:12.780 --> 58:13.780
具体

58:14.780 --> 58:17.780
具体的调整

58:17.780 --> 58:18.780
示意图

58:19.780 --> 58:21.780
示意图

58:21.780 --> 58:22.780
留下

58:23.780 --> 58:24.780
看到没有

58:24.780 --> 58:25.780
我相信画了这个图之后

58:25.780 --> 58:27.780
大家应该是要清晰很多了

58:28.780 --> 58:29.780
ok

58:30.780 --> 58:31.780
又卡住了

58:31.780 --> 58:32.780
稍等一下

58:32.780 --> 58:33.780
ok

58:33.780 --> 58:34.780
这边

58:34.780 --> 58:35.780
具体的调整示意图

58:35.780 --> 58:36.780
这不就是像这个样子的

58:36.780 --> 58:37.780
对不对

58:37.780 --> 58:38.780
把这个先取到这边

58:38.780 --> 58:39.780
它变成第一个

58:39.780 --> 58:40.780
因为3被弹出去了

58:40.780 --> 58:41.780
对不对

58:41.780 --> 58:42.780
3被弹出去了

58:42.780 --> 58:43.780
这个变成第一个

58:43.780 --> 58:44.780
那接下来干嘛

58:44.780 --> 58:45.780
是往下调整

58:45.780 --> 58:47.780
调整到合适的位置

58:47.780 --> 58:48.780
调整到合适的位置之后

58:48.780 --> 58:49.780
然后将我这边就可以干嘛

58:49.780 --> 58:51.780
是不是始终保证

58:51.780 --> 58:52.780
我这个是最小的

58:53.780 --> 58:54.780
对不对

58:54.780 --> 58:55.780
ok

58:55.780 --> 58:57.780
这就是关于这个prop

58:57.780 --> 58:58.780
关于prop

58:59.780 --> 59:00.780
好那这边

59:00.780 --> 59:01.780
主要给大家介绍

59:01.780 --> 59:02.780
其实就这三个方法

59:02.780 --> 59:03.780
peak

59:03.780 --> 59:04.780
push

59:04.780 --> 59:05.780
和prop

59:06.780 --> 59:07.780
ok

59:07.780 --> 59:09.780
这就是关于react中

59:09.780 --> 59:11.780
它这个最小堆的一个应用

59:11.780 --> 59:13.780
大家下来可以把它再看一下

59:13.780 --> 59:15.780
对应的这个圆码也不多

59:15.780 --> 59:16.780
对吧

59:16.780 --> 59:18.780
整体对应的这个圆码

59:18.780 --> 59:19.780
也就这么一些

59:19.780 --> 59:20.780
一个是push

59:20.780 --> 59:21.780
一个是peak

59:21.780 --> 59:22.780
一个是prop

59:22.780 --> 59:24.780
大家这个是向上调整

59:24.780 --> 59:25.780
和向下调整

59:25.780 --> 59:27.780
这个是辅助方法

59:27.780 --> 59:28.780
大家下来的话

59:28.780 --> 59:29.780
可以把这个圆码

59:29.780 --> 59:31.780
你可以把这个shift up

59:31.780 --> 59:32.780
和shift down

59:32.780 --> 59:33.780
具体的可以看一下

59:33.780 --> 59:34.780
这个到时候

59:34.780 --> 59:35.780
我们在这个

59:35.780 --> 59:36.780
第三篇章

59:36.780 --> 59:37.780
就圆码篇的时候

59:37.780 --> 59:39.780
会带着大家把这个写一遍的

59:39.780 --> 59:41.780
因为到时候要写个迷你版

59:41.780 --> 59:42.780
迷你版的话

59:42.780 --> 59:44.780
到时候会带着大家写一遍这个

59:44.780 --> 59:45.780
ok

59:45.780 --> 59:48.780
好这就是关于这期课的内容

59:48.780 --> 59:49.780
ok

59:49.780 --> 59:51.780
关于这个最小堆

59:51.780 --> 59:53.780
好这期课就到这里

59:53.780 --> 59:54.780
再见

