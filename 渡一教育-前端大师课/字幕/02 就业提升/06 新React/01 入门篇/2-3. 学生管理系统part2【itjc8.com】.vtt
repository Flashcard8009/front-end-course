WEBVTT

00:00.110 --> 00:02.110
OK 咱们继续

00:02.110 --> 00:05.110
我刚才的话把这个样式转调了一下

00:05.110 --> 00:07.110
我们上节课这个样式转是不是稍微有点问题啊

00:07.110 --> 00:09.110
这边你看稍微调了一下

00:09.110 --> 00:11.110
OK 现在的话就OK了

00:11.110 --> 00:13.110
它其实就是那个样式权重的问题

00:13.110 --> 00:15.110
稍微调整了一下

00:15.110 --> 00:17.110
这边前面加了一个A

00:17.110 --> 00:20.110
让它的那个权重稍微变高一些

00:20.110 --> 00:21.110
然后其他的话

00:21.110 --> 00:24.110
再把这添加了这个text decoration

00:24.110 --> 00:26.110
稍微微调了一下

00:26.110 --> 00:27.110
就解决了

00:27.110 --> 00:29.110
看吧 这会儿就没问题了

00:29.110 --> 00:31.110
好 这是我们上节课

00:31.110 --> 00:32.110
上节课的话

00:32.110 --> 00:34.110
我们是把这个基本上这个首页

00:34.110 --> 00:36.110
我们把它渲染出来了

00:36.110 --> 00:38.110
好 这节课的话 咱们看

00:38.110 --> 00:40.110
看能不能把它整个讲完

00:40.110 --> 00:42.110
能讲完的话 咱们就把它讲完

00:42.110 --> 00:44.110
OK 好 首先的话

00:44.110 --> 00:45.110
这边的话有一个详情

00:45.110 --> 00:47.110
那我们这边点击详情的话

00:47.110 --> 00:50.110
它应该是跳转到这个详情页

00:50.110 --> 00:52.110
对吧 好 我们先做哪个

00:52.110 --> 00:54.110
先做先做添加也可以

00:54.110 --> 00:56.110
好 那我们先做添加吧 先做添加

00:56.110 --> 00:59.110
添加的话 这边的话是一个表达

00:59.110 --> 01:01.110
OK 很明显是个表达

01:01.110 --> 01:03.110
你注意一下 这个添加的话

01:03.110 --> 01:06.110
回头我会和那个编辑放在一起

01:06.110 --> 01:07.110
所以我们这边的话

01:07.110 --> 01:08.110
我可以把这个主键的名字

01:08.110 --> 01:10.110
我把它稍微改一下

01:10.110 --> 01:12.110
好 我再放下去

01:12.110 --> 01:14.110
我把这个主键的名字

01:14.110 --> 01:15.110
我们这个主键名字

01:15.110 --> 01:16.110
现在是不是叫做end

01:16.110 --> 01:18.110
对吧 我把这个稍微改一下

01:18.110 --> 01:22.110
end or edit

01:22.110 --> 01:24.110
也就是该主键的话是负责什么呢

01:24.110 --> 01:27.110
负责这个添加或者修改

01:27.110 --> 01:32.110
end or edit

01:32.110 --> 01:34.110
好 这边也是

01:34.110 --> 01:36.110
我这边写一下

01:36.110 --> 01:39.110
该主键

01:39.110 --> 01:43.110
该主键有两个功能

01:43.110 --> 01:47.110
一个是添加学生

01:47.110 --> 01:52.110
另一个是修改学生

01:52.110 --> 01:54.110
OK 我就把它放到一个主键里面

01:54.110 --> 01:56.110
因为你无论是添加还是修改

01:56.110 --> 01:59.110
表达的话长的是一样的

01:59.110 --> 02:01.110
好 接下来在这边

02:01.110 --> 02:03.110
这边的话 我们这里

02:03.110 --> 02:05.110
这里的话 它其实就是一个什么呢

02:05.110 --> 02:07.110
其实就是一个表达

02:07.110 --> 02:08.110
就是一个表达

02:08.110 --> 02:10.110
那我们这边的话

02:10.110 --> 02:14.110
首先DIV点这个end

02:14.110 --> 02:18.110
这个container

02:18.110 --> 02:19.110
好 然后里面

02:19.110 --> 02:21.110
里面的话就是一个表达

02:21.110 --> 02:23.110
这个表达的话 我就直接把它拿过来吧

02:23.110 --> 02:24.110
这表达没有必要

02:24.110 --> 02:25.110
就I在这敲

02:25.110 --> 02:27.110
我就直接把它拿过来 好吧

02:27.110 --> 02:30.680
好 稍等一下

02:30.680 --> 02:32.680
我把这边 我把这个表达

02:32.680 --> 02:34.680
我把它拿过来

02:34.680 --> 02:36.680
然后把它放到这里

02:36.680 --> 02:39.680
OK 这边的话就拿过来了

02:39.680 --> 02:41.680
拿过来这边大家大致看一下

02:41.680 --> 02:42.680
大致看一下

02:42.680 --> 02:44.680
首先的话 这边是一个标题

02:44.680 --> 02:48.680
这个是你表达的标题

02:48.680 --> 02:49.680
OK 标题的话

02:49.680 --> 02:50.680
我们这边先把它写死

02:50.680 --> 02:52.680
我们现在目前就是什么

02:52.680 --> 02:54.680
就是添加用户

02:54.680 --> 02:56.680
所以我们现在就这边添加用户

02:56.680 --> 02:58.680
好 这边有一个 unsubmit

02:58.680 --> 03:00.680
这个一会再说

03:00.680 --> 03:02.680
先把它删了

03:02.680 --> 03:03.680
删了之后

03:03.680 --> 03:04.680
然后接下来的话

03:04.680 --> 03:08.680
把这些的话先把它注射掉吧

03:08.680 --> 03:10.680
先把它注射掉

03:10.680 --> 03:12.680
OK

03:12.680 --> 03:14.680
把这个注射掉

03:14.680 --> 03:17.680
然后这个注射掉

03:17.680 --> 03:19.680
然后还有这个

03:19.680 --> 03:20.680
注射掉

03:20.680 --> 03:22.680
然后还有这边

03:22.680 --> 03:24.680
内容稍微有点多

03:24.680 --> 03:26.680
然后加这边

03:26.680 --> 03:28.680
然后最后一个是 text area

03:28.680 --> 03:29.680
把它干掉

03:29.680 --> 03:30.680
干掉之后

03:30.680 --> 03:31.680
然后加这边

03:31.680 --> 03:35.060
这边就是一个确认添加

03:35.060 --> 03:37.060
确认添加

03:37.060 --> 03:38.060
OK

03:38.060 --> 03:40.060
我们这表达的话就拿过来了

03:40.060 --> 03:41.060
表达里面每一项

03:41.060 --> 03:42.060
你可以看一下

03:42.060 --> 03:43.060
虽然这个代码有点多

03:43.060 --> 03:44.060
但其实每一项不复杂的

03:44.060 --> 03:45.060
这个是什么

03:45.060 --> 03:46.060
这个是一个DIV

03:46.060 --> 03:47.060
DIV你把它展开

03:47.060 --> 03:49.060
展开里面是不是就姓名

03:49.060 --> 03:50.060
姓名然后加对应的时候

03:50.060 --> 03:52.060
后面会有一个这个 input

03:52.060 --> 03:53.060
输入方

03:53.060 --> 03:54.060
对吧

03:54.060 --> 03:55.060
好来我们这边

03:55.060 --> 03:56.060
我们来看一下

03:56.060 --> 03:57.060
好我们这边

03:57.060 --> 03:58.060
这边报错了

03:58.060 --> 03:59.060
Cannot

03:59.060 --> 04:00.060
这里是

04:00.060 --> 04:01.060
我们刚才改了名字

04:01.060 --> 04:03.060
改了名字你需要在这里

04:03.060 --> 04:05.060
需要在这边

04:05.060 --> 04:06.060
把这改一下

04:06.060 --> 04:10.060
and or edit

04:11.060 --> 04:12.060
这边

04:12.060 --> 04:14.060
and or edit

04:14.060 --> 04:15.060
然后

04:16.060 --> 04:17.060
这边

04:19.060 --> 04:20.060
这边对吧

04:20.060 --> 04:22.060
好存

04:22.060 --> 04:23.060
好这边你看

04:23.060 --> 04:24.060
是不是就出来了

04:24.060 --> 04:26.060
这么一个表达就出来了

04:26.060 --> 04:27.060
好出来之后

04:27.060 --> 04:28.060
然后接下来的话

04:28.060 --> 04:29.060
我们这里

04:29.060 --> 04:30.060
这里的话

04:30.060 --> 04:32.060
我们希望它是一个什么

04:32.060 --> 04:35.060
我希望它是一个受控逐渐

04:35.060 --> 04:36.060
我说过req的话

04:36.060 --> 04:37.060
它推荐什么

04:37.060 --> 04:39.060
推荐你这边表达空间

04:39.060 --> 04:41.060
如果不是特殊情况下的话

04:41.060 --> 04:44.060
是不是都是应该是把它弄成受控的

04:44.060 --> 04:46.060
所谓受控就是什么

04:46.060 --> 04:47.060
受控的话

04:47.060 --> 04:49.060
是不是就是和你的这个

04:49.060 --> 04:50.060
state

04:50.060 --> 04:51.060
绑定在一起

04:51.060 --> 04:52.060
对吧

04:52.060 --> 04:54.060
说说我们在这边的话

04:54.060 --> 04:57.060
我们需要来弄一个state

04:57.060 --> 04:59.060
说说我们在这边

04:59.060 --> 05:00.060
回到我们这里

05:00.060 --> 05:01.060
回到我们这边

05:01.060 --> 05:04.370
这边的话我们就引入

05:04.370 --> 05:05.370
引入

05:05.370 --> 05:08.370
use the state

05:08.370 --> 05:09.370
对吧

05:09.370 --> 05:10.370
好然后接下来的话

05:10.370 --> 05:11.370
在这里

05:11.370 --> 05:13.370
我们创建一个状态

05:13.370 --> 05:16.740
创建一个

05:16.740 --> 05:17.740
创建

05:17.740 --> 05:22.060
创建一个表达

05:22.060 --> 05:23.060
状态

05:23.060 --> 05:24.060
好这边的话

05:24.060 --> 05:26.060
我们就const

05:26.060 --> 05:28.060
一个stu

05:28.060 --> 05:29.060
一个set

05:29.060 --> 05:31.060
stu

05:31.060 --> 05:34.060
等于一个user state

05:34.060 --> 05:36.060
那user state对应的就是什么呢

05:36.060 --> 05:39.060
这边的话对应的就是一个对象

05:39.060 --> 05:40.060
对象里面

05:40.060 --> 05:41.060
然后一开始的话

05:41.060 --> 05:42.060
这些的话都是空的

05:43.060 --> 05:45.060
然后接下来的话

05:45.060 --> 05:46.060
age

05:46.060 --> 05:49.620
然后接下来的话

05:49.620 --> 05:50.620
这个风

05:50.620 --> 05:51.620
电话号码

05:53.620 --> 05:54.620
然后接下来

05:54.620 --> 05:56.620
还有email

05:56.620 --> 05:57.620
email

05:57.620 --> 05:58.620
然后接下来

05:58.620 --> 06:00.620
还有education

06:00.620 --> 06:01.620
你的这个

06:01.620 --> 06:03.620
学历

06:03.620 --> 06:04.620
然后接下来

06:04.620 --> 06:05.620
还有一个毕业院校

06:05.620 --> 06:07.620
graduation school

06:07.620 --> 06:09.620
graduation

06:09.620 --> 06:10.620
这边有

06:10.620 --> 06:12.620
graduation school

06:12.620 --> 06:13.620
然后接下来的话

06:13.620 --> 06:15.620
还有一个就是你的专业

06:15.620 --> 06:17.620
professions

06:17.620 --> 06:18.620
还有一个是

06:18.620 --> 06:19.620
你的个人剪辑

06:19.620 --> 06:20.620
profile

06:20.620 --> 06:21.620
ok

06:21.620 --> 06:23.620
那默认的话是一个

06:23.620 --> 06:25.620
空的这个对象

06:25.620 --> 06:26.620
好回头在这边

06:26.620 --> 06:27.620
这边的话你看

06:27.620 --> 06:29.620
我这边是不是就要绑定

06:29.620 --> 06:30.620
我这边的话

06:30.620 --> 06:31.620
叫做stu

06:31.620 --> 06:32.620
这边稍微改一下

06:32.620 --> 06:33.620
叫做stu

06:33.620 --> 06:35.620
你看我这边是Value

06:35.620 --> 06:37.620
等于一个stu.nem

06:37.620 --> 06:39.620
这边是不是和这个状态

06:39.620 --> 06:40.620
是不是就绑定在一起了

06:40.620 --> 06:41.620
对不对

06:41.620 --> 06:43.620
大家这边的话是一样的

06:43.620 --> 06:44.620
这边

06:44.620 --> 06:46.620
stu

06:46.620 --> 06:47.620
好

06:47.620 --> 06:49.620
把它改一改

06:49.620 --> 06:51.620
这边是stu

06:51.620 --> 06:52.620
然后这里

06:52.620 --> 06:56.000
这是email

06:56.000 --> 06:58.000
然后这个是education

06:58.000 --> 06:59.000
stu

06:59.000 --> 07:01.000
你注意education的话

07:01.000 --> 07:02.000
我们是给了一个什么

07:02.000 --> 07:03.000
education

07:03.000 --> 07:04.000
education

07:04.000 --> 07:05.000
你这边不给

07:05.000 --> 07:06.000
不给的话

07:06.000 --> 07:07.000
它现在的话就是空的

07:07.000 --> 07:09.000
你这边是可以给个默认值的

07:09.000 --> 07:11.000
默认值比如说本科

07:12.000 --> 07:13.000
本科

07:13.000 --> 07:14.000
对吧

07:14.000 --> 07:15.000
它回头它就会选中

07:15.000 --> 07:16.000
是吗

07:16.000 --> 07:18.000
是选中你对应的本科的一个

07:18.000 --> 07:19.000
好

07:19.000 --> 07:20.000
然后接下来

07:20.000 --> 07:22.000
这边是毕业院校

07:22.000 --> 07:24.000
stu

07:24.000 --> 07:26.630
好

07:26.630 --> 07:27.630
然后接下来的话

07:27.630 --> 07:28.630
这里

07:28.630 --> 07:30.630
这里是个人简介

07:30.630 --> 07:32.630
这个是专业

07:32.630 --> 07:33.630
专业

07:33.630 --> 07:34.630
职业

07:34.630 --> 07:35.630
从事的职业

07:35.630 --> 07:37.630
最后一个是个人简介

07:37.630 --> 07:40.940
OK

07:40.940 --> 07:41.940
就搞定了

07:41.940 --> 07:42.940
搞定了之后

07:42.940 --> 07:43.940
既然你来看一下这边

07:43.940 --> 07:44.940
这边的话

07:44.940 --> 07:45.940
你看这里

07:45.940 --> 07:46.940
这里学历的话

07:46.940 --> 07:47.940
它默认什么就是本科

07:47.940 --> 07:48.940
对吧

07:48.940 --> 07:49.940
其他的话

07:49.940 --> 07:50.940
其他的话没有变化

07:50.940 --> 07:51.940
但是它现在已经是一个

07:51.940 --> 07:52.940
收空的了

07:52.940 --> 07:53.940
你现在的话

07:53.940 --> 07:54.940
你是输不了的

07:54.940 --> 07:55.940
可不

07:55.940 --> 07:56.940
然后我这边就在那输

07:56.940 --> 07:57.940
输不了

07:57.940 --> 07:58.940
你看我这边按键

07:58.940 --> 07:59.940
输不了

07:59.940 --> 08:00.940
为什么

08:00.940 --> 08:01.940
因为你受控逐渐

08:01.940 --> 08:02.940
受控逐渐

08:02.940 --> 08:03.940
他要求你有一个什么

08:03.940 --> 08:05.940
是不是有一个按清计

08:05.940 --> 08:06.940
你这边把控制台打开

08:06.940 --> 08:07.940
打开的话

08:07.940 --> 08:09.940
他这边一定会有一个这个错误

08:09.940 --> 08:10.940
一定会有个错误

08:10.940 --> 08:11.940
按清计

08:11.940 --> 08:12.940
对吧

08:12.940 --> 08:13.940
好

08:13.940 --> 08:14.940
来我们这边

08:14.940 --> 08:15.940
把这个按清计加一下

08:15.940 --> 08:16.940
那按清计的话

08:16.940 --> 08:17.940
你注意

08:17.940 --> 08:18.940
按清计的话

08:18.940 --> 08:19.940
我们以前是怎么写的

08:19.940 --> 08:20.940
我们以前是不是这样子写的

08:20.940 --> 08:21.940
按清计

08:21.940 --> 08:23.940
等于一个

08:23.940 --> 08:24.940
比如说清计handle

08:24.940 --> 08:27.580
清计handle

08:27.580 --> 08:28.580
好

08:28.580 --> 08:29.580
然后接下来

08:29.580 --> 08:30.580
在这边是不是

08:30.580 --> 08:31.580
来书写一个

08:31.580 --> 08:32.580
方形

08:32.580 --> 08:33.580
清计handle

08:33.580 --> 08:34.580
然后在这里

08:34.580 --> 08:35.580
这里的话

08:35.580 --> 08:36.580
然后接下来设置

08:36.580 --> 08:38.580
调用这个set stu

08:38.580 --> 08:40.580
对吧

08:40.580 --> 08:41.580
这边来设置

08:41.580 --> 08:42.580
设置

08:42.580 --> 08:43.580
然后接下来

08:43.580 --> 08:44.580
这边设置

08:44.580 --> 08:45.580
他的这个nemo

08:45.580 --> 08:46.580
对应的是你这边

08:46.580 --> 08:47.580
这个e

08:47.580 --> 08:49.580
对应的这边

08:49.580 --> 08:52.580
e.target.value

08:52.580 --> 08:54.580
我们以前是不是这样子来写的

08:54.580 --> 08:56.580
但是你现在你看一下

08:56.580 --> 08:57.580
现在的话

08:57.580 --> 08:58.580
我们这边是不是有很多个

08:58.580 --> 08:59.580
对吧

08:59.580 --> 09:00.580
一个 两个 三个

09:00.580 --> 09:01.580
反正就有很多个

09:01.580 --> 09:02.580
那很多个的话

09:02.580 --> 09:03.580
你一个一个

09:03.580 --> 09:04.580
IZO的区

09:04.580 --> 09:05.580
写的话

09:05.580 --> 09:06.580
那意味着什么

09:06.580 --> 09:07.580
意味着我这边

09:07.580 --> 09:08.580
有多少个空间

09:08.580 --> 09:09.580
你这边是不要叫

09:09.580 --> 09:10.580
写多少个

09:10.580 --> 09:11.580
这个函数

09:11.580 --> 09:12.580
但是函数

09:12.580 --> 09:13.580
做的事情

09:13.580 --> 09:14.580
其实又干嘛呢

09:14.580 --> 09:15.580
实际上做的事情

09:15.580 --> 09:16.580
又差不多的

09:16.580 --> 09:17.580
对不对

09:17.580 --> 09:18.580
所以说我们这边

09:18.580 --> 09:19.580
我们统一

09:19.580 --> 09:21.580
封装一个函数

09:21.580 --> 09:22.580
统一封装一个函数

09:22.580 --> 09:23.580
我们这边

09:23.580 --> 09:24.580
就叫做什么呢

09:24.580 --> 09:28.910
叫做update

09:28.910 --> 09:29.910
update

09:29.910 --> 09:31.910
stuinfo

09:31.910 --> 09:32.910
OK

09:32.910 --> 09:33.910
我们封装这么一个函数

09:33.910 --> 09:34.910
好

09:34.910 --> 09:35.910
封到这么一个函数之后

09:35.910 --> 09:36.910
然后接下来在这边

09:36.910 --> 09:37.910
这边的话

09:37.910 --> 09:38.910
我们就调用这个

09:38.910 --> 09:39.910
update

09:39.910 --> 09:41.910
stuinfo

09:42.910 --> 09:43.910
调用这个

09:43.910 --> 09:44.910
这个就不要了

09:44.910 --> 09:45.910
调用这个

09:45.910 --> 09:46.910
调用这个之后

09:46.910 --> 09:47.910
把你的1点target

09:47.910 --> 09:48.910
和内幕

09:48.910 --> 09:49.910
把它传过去

09:49.910 --> 09:50.910
传过去之后

09:50.910 --> 09:51.910
然后接下来的话

09:51.910 --> 09:52.910
我们这边

09:52.910 --> 09:53.910
我们来接受一下

09:53.910 --> 09:54.910
一个是什么呢

09:54.910 --> 09:56.910
一个是你的new info

09:56.910 --> 09:57.910
一个是你的key

09:57.910 --> 09:58.910
我们这边

09:58.910 --> 09:59.910
我们来打印一下

09:59.910 --> 10:02.910
ZLG

10:02.910 --> 10:03.910
new info

10:03.910 --> 10:05.910
然后接下来的话key

10:05.910 --> 10:06.910
我们来看一下

10:06.910 --> 10:11.700
把这个打开

10:11.700 --> 10:12.700
其他的先不用管

10:12.700 --> 10:13.700
我们先只改了一个

10:13.700 --> 10:14.700
对吧

10:14.700 --> 10:15.700
我写一下

10:18.700 --> 10:19.700
这边的话是因为

10:19.700 --> 10:20.700
这边的错误

10:20.700 --> 10:21.700
导致我这边

10:21.700 --> 10:22.700
用不了吗

10:22.700 --> 10:23.700
我看一下

10:24.700 --> 10:25.700
这边照理说的话

10:25.700 --> 10:26.700
应该是没有问题的

10:26.700 --> 10:27.700
update

10:27.700 --> 10:29.700
stuinfo

10:29.700 --> 10:30.700
然后接下来这边的话

10:30.700 --> 10:31.700
是你新的这个值

10:31.700 --> 10:32.700
新的值

10:32.700 --> 10:33.700
然后接下来过来

10:33.700 --> 10:34.700
过来

10:34.700 --> 10:35.700
然后叫key的话

10:35.700 --> 10:36.700
是这个内幕过来

10:36.700 --> 10:38.700
这里照理说是没问题的

10:38.700 --> 10:39.700
那这样子

10:39.700 --> 10:40.700
我先把后面的

10:40.700 --> 10:41.700
先全部把它改了

10:41.700 --> 10:42.700
这边的话是update

10:42.700 --> 10:44.700
stuinfo

10:44.700 --> 10:47.070
把它全部改了

10:48.070 --> 10:49.070
这里

10:50.070 --> 10:52.070
然后这个

10:53.070 --> 10:54.070
好

10:54.070 --> 10:55.070
然后这边

10:55.070 --> 10:57.070
然后这里

10:57.070 --> 10:59.070
这个是毕业院校

10:59.070 --> 11:02.070
然后这个是相关职业

11:02.070 --> 11:04.070
然后接下来最后一个

11:04.070 --> 11:06.070
最后一个是你的这个爱好

11:06.070 --> 11:07.070
ok

11:07.070 --> 11:08.070
全部改了

11:08.070 --> 11:09.070
改了之后

11:09.070 --> 11:10.070
哪儿还在标红啊

11:10.070 --> 11:11.070
标红是这个

11:11.070 --> 11:12.070
这个写不管他

11:12.070 --> 11:13.070
好然后接下来这边

11:13.070 --> 11:14.070
是不是没报错了

11:14.070 --> 11:15.070
对吧

11:15.070 --> 11:16.070
然后叫我们这边

11:16.070 --> 11:17.070
我们来输入

11:17.070 --> 11:18.070
你看

11:18.070 --> 11:19.070
这边那是不是可以拿到

11:19.070 --> 11:20.070
用户输入的内容

11:20.070 --> 11:21.070
以及什么

11:21.070 --> 11:22.070
是不是你对你

11:22.070 --> 11:23.070
这个是哪个key

11:23.070 --> 11:24.070
对不对

11:24.070 --> 11:26.070
我们就封装成一个函数

11:26.070 --> 11:27.070
我就不需要写多个函数

11:27.070 --> 11:28.070
知道吧

11:28.070 --> 11:29.070
全部封装成一个函数

11:29.070 --> 11:30.070
好

11:30.070 --> 11:31.070
然后接下来的话在这边

11:31.070 --> 11:32.070
这边的话

11:32.070 --> 11:33.070
我要做的是什么

11:33.070 --> 11:34.070
在这边的话

11:34.070 --> 11:35.070
我是不是

11:35.070 --> 11:37.070
根据你的这个key

11:37.070 --> 11:39.070
来更新这个信息

11:39.070 --> 11:41.070
对不对

11:41.070 --> 11:42.070
根据

11:43.070 --> 11:45.070
对应的key

11:46.070 --> 11:49.070
来更新信息

11:49.070 --> 11:50.070
ok

11:50.070 --> 11:51.070
好那更新信息的话

11:51.070 --> 11:52.070
我们这边

11:52.070 --> 11:53.070
有一个

11:53.070 --> 11:54.070
要稍微注意一下

11:54.070 --> 11:55.070
就是这个年龄

11:55.070 --> 11:56.070
年龄的话

11:56.070 --> 11:57.070
他应该是什么

11:57.070 --> 11:58.070
应该是一个数字

11:58.070 --> 11:59.070
对吧

11:59.070 --> 12:00.070
应该是个数字

12:00.070 --> 12:01.070
你这边那就是

12:01.070 --> 12:03.070
你不能写写写成这种

12:03.070 --> 12:04.070
就是

12:05.070 --> 12:06.070
这边的话

12:06.070 --> 12:07.070
你这个年龄

12:07.070 --> 12:08.070
在这里

12:08.070 --> 12:09.070
你这边的话

12:09.070 --> 12:10.070
你不能写这个字母

12:10.070 --> 12:11.070
这种

12:11.070 --> 12:12.070
不能写字母

12:12.070 --> 12:13.070
ok

12:13.070 --> 12:14.070
说说我们这里的话

12:14.070 --> 12:15.070
我们这边

12:15.070 --> 12:16.070
稍微判断一下

12:16.070 --> 12:17.070
if

12:18.070 --> 12:20.070
你的这个key

12:21.070 --> 12:22.070
key

12:22.070 --> 12:23.070
全等于什么呢

12:23.070 --> 12:25.070
全等于这个

12:25.070 --> 12:26.070
h

12:26.070 --> 12:28.070
然后并且什么呢

12:28.070 --> 12:29.070
这边

12:29.070 --> 12:32.070
newinfo

12:32.070 --> 12:34.070
这个能看懂吧

12:34.070 --> 12:35.070
就你这边的话

12:35.070 --> 12:37.070
他不应该是一个字母

12:37.070 --> 12:38.070
对你如果是字母

12:38.070 --> 12:39.070
字母的话

12:39.070 --> 12:40.070
他这边的话

12:40.070 --> 12:41.070
如果是数字

12:41.070 --> 12:42.070
数字的话他是不

12:42.070 --> 12:43.070
force

12:43.070 --> 12:44.070
对不对

12:44.070 --> 12:45.070
我们这边相当于

12:45.070 --> 12:46.070
就做一个判断

12:46.070 --> 12:47.070
那这边呢

12:47.070 --> 12:48.070
我们就直接return

12:48.070 --> 12:49.070
ok

12:49.070 --> 12:51.380
好

12:51.380 --> 12:52.380
然后接下来

12:52.380 --> 12:53.380
这里的话

12:53.380 --> 12:54.380
我们就const

12:54.380 --> 12:56.380
一个newinfo

12:56.380 --> 12:58.380
newstuinfo

12:58.380 --> 13:00.380
stuinfo

13:00.380 --> 13:01.380
等于什么呢

13:01.380 --> 13:03.380
把之前的这个信息

13:03.380 --> 13:05.380
我们把它展开

13:05.380 --> 13:06.380
之前

13:07.380 --> 13:09.380
这边点点

13:09.380 --> 13:10.380
stu

13:10.380 --> 13:11.380
把它展开

13:11.380 --> 13:12.380
这边呢

13:12.380 --> 13:13.380
是不是得到一个新的对象

13:13.380 --> 13:14.380
对不对

13:14.380 --> 13:15.380
新的这个对象

13:15.380 --> 13:16.380
newstuinfo

13:16.380 --> 13:17.380
它的哪个键

13:17.380 --> 13:19.380
是不是就是你的这个key

13:19.380 --> 13:20.380
对不对

13:20.380 --> 13:21.380
等于什么字

13:21.380 --> 13:23.380
是不是等于

13:23.380 --> 13:24.380
你的这个字

13:25.380 --> 13:26.380
就等于你这个字

13:26.380 --> 13:27.380
对吧

13:27.380 --> 13:28.380
然后你这边

13:28.380 --> 13:29.380
还可以加一下这个trim

13:29.380 --> 13:31.380
因为他是制服串

13:31.380 --> 13:33.380
这边把两端的空格

13:33.380 --> 13:34.380
把它去除一下

13:34.380 --> 13:35.380
去除了之后

13:35.380 --> 13:36.380
然后接下来

13:36.380 --> 13:37.380
我这边在干嘛

13:37.380 --> 13:39.380
setstu

13:39.380 --> 13:41.380
然后把这个newinfo

13:41.380 --> 13:43.380
是不是设置为新的字

13:43.380 --> 13:44.380
对吧

13:44.380 --> 13:45.380
ok

13:45.380 --> 13:47.380
来我们这边来看一下

13:47.380 --> 13:48.380
来看一下

13:48.380 --> 13:49.380
这边首先这个输入

13:49.380 --> 13:51.380
输入是不是就没问题了

13:51.380 --> 13:52.380
你看我这边

13:52.380 --> 13:54.380
我这个字母是输不了的

13:54.380 --> 13:56.380
我现在按abcd那种字母

13:56.380 --> 13:57.380
输不了

13:57.380 --> 13:58.380
但是这边的话

13:58.380 --> 13:59.380
就是数字是可以输入的

13:59.380 --> 14:00.380
但是你这边

14:00.380 --> 14:01.380
还可以做一些

14:01.380 --> 14:02.380
更详细的这个判断

14:02.380 --> 14:03.380
这个就是这个

14:03.380 --> 14:05.380
受控组建它的好处

14:05.380 --> 14:06.380
对不对

14:06.380 --> 14:07.380
你这边可以做一些

14:07.380 --> 14:08.380
更详细的判断

14:08.380 --> 14:09.380
比如你的数字

14:09.380 --> 14:10.380
如果连你超过了多少

14:10.380 --> 14:12.380
我也让你就是无效

14:12.380 --> 14:13.380
对吧

14:13.380 --> 14:14.380
我这边就不做判断了

14:14.380 --> 14:15.380
好

14:15.380 --> 14:16.380
这边的这个电话号码

14:16.380 --> 14:17.380
这个邮箱

14:17.380 --> 14:19.380
这些你如果想要去做

14:19.380 --> 14:20.380
这个更多的一些验证的话

14:20.380 --> 14:22.380
你自己把它加上就可以了

14:22.380 --> 14:23.380
ok

14:23.380 --> 14:25.380
这个学校职业

14:25.380 --> 14:26.380
个人简介

14:26.380 --> 14:27.380
ok

14:27.380 --> 14:28.380
你看

14:28.380 --> 14:29.380
这边是不是就可以输入了

14:29.380 --> 14:30.380
好

14:30.380 --> 14:31.380
可以输入之后

14:31.380 --> 14:32.380
然后接下来的话

14:32.380 --> 14:33.380
我们这边

14:34.380 --> 14:35.380
这边的话

14:35.380 --> 14:36.380
然后提交

14:36.380 --> 14:37.380
提交的话

14:37.380 --> 14:38.380
这边是一个button

14:39.380 --> 14:40.380
这个button

14:40.380 --> 14:41.380
button的话

14:41.380 --> 14:42.380
那这边就会触发什么

14:42.380 --> 14:43.380
触发submit

14:43.380 --> 14:44.380
啊

14:44.380 --> 14:45.380
首先我们给这个

14:45.380 --> 14:47.380
整个这个表单

14:47.380 --> 14:48.380
给整个这个表单

14:48.380 --> 14:51.380
我们把给他绑定一个

14:51.380 --> 14:52.380
啊

14:52.380 --> 14:53.380
submit

14:53.380 --> 14:54.380
啊

14:54.380 --> 14:55.380
submit

14:55.380 --> 14:56.380
啊

14:56.380 --> 14:57.380
submit对应的是什么呢

14:57.380 --> 14:58.380
对应的是

14:58.380 --> 15:00.380
submit

15:00.380 --> 15:01.380
stu

15:01.380 --> 15:02.380
啊

15:02.380 --> 15:03.380
就是提交学生信息

15:03.380 --> 15:04.380
啊

15:04.380 --> 15:05.380
加个info

15:05.380 --> 15:06.380
info

15:06.380 --> 15:07.380
啊

15:07.380 --> 15:08.380
提交学生信息

15:08.380 --> 15:09.380
好

15:09.380 --> 15:10.380
然后接下来来到

15:10.380 --> 15:11.380
我们这边

15:11.380 --> 15:13.760
方形

15:13.760 --> 15:14.760
ok

15:14.760 --> 15:15.760
那我们这边的话

15:15.760 --> 15:16.760
我们就来打印一下

15:16.760 --> 15:17.760
看一下我们这边

15:17.760 --> 15:19.760
能不能拿到用户输入的信息

15:19.760 --> 15:20.760
啊

15:20.760 --> 15:21.760
我们这边应该是打印什么

15:21.760 --> 15:23.760
应该是打印的是他是吧

15:23.760 --> 15:24.760
因为我们现在是

15:24.760 --> 15:25.760
一个受控逐渐

15:25.760 --> 15:26.760
受控逐渐最终

15:26.760 --> 15:27.760
用户填写的

15:27.760 --> 15:28.760
是不是都是保存在

15:28.760 --> 15:29.760
这个状态里面的

15:29.760 --> 15:30.760
ok

15:30.760 --> 15:31.760
我们这边

15:31.760 --> 15:32.760
我们来看一下这个sq

15:32.760 --> 15:33.760
当前的状态

15:33.760 --> 15:34.760
好

15:34.760 --> 15:35.760
我们这边的话

15:35.760 --> 15:36.760
这边填写了

15:36.760 --> 15:38.760
然后就让我这边我点击

15:38.760 --> 15:39.760
啊

15:39.760 --> 15:40.760
啊

15:40.760 --> 15:41.760
你这边的话

15:41.760 --> 15:43.760
你还得阻止一下默认事件

15:43.760 --> 15:44.760
对不对

15:44.760 --> 15:45.760
他默认的话

15:45.760 --> 15:46.760
他这边提交

15:46.760 --> 15:47.760
提交到你这边

15:47.760 --> 15:48.760
这个e

15:48.760 --> 15:49.760
e的话

15:49.760 --> 15:50.760
然后加这边

15:50.760 --> 15:52.760
e.prevent

15:52.760 --> 15:54.760
prevent default

15:54.760 --> 15:55.760
对吧

15:55.760 --> 15:56.760
把默认事件

15:56.760 --> 15:57.760
把阻止了

15:57.760 --> 15:58.760
好

15:58.760 --> 15:59.760
来我们这边来看一下

15:59.760 --> 16:00.760
其实刚才已经出来了

16:00.760 --> 16:01.760
啊

16:01.760 --> 16:02.760
这边18

16:02.760 --> 16:03.760
好

16:03.760 --> 16:04.760
电话号码

16:04.760 --> 16:05.760
然后接下来邮箱

16:06.760 --> 16:07.760
啊

16:07.760 --> 16:08.760
那院校

16:08.760 --> 16:09.760
然后接下来这边职业

16:09.760 --> 16:10.760
更简介

16:10.760 --> 16:11.760
好

16:11.760 --> 16:12.760
这边确认停假

16:12.760 --> 16:13.760
是不是拿到了

16:14.760 --> 16:15.760
对不对

16:15.760 --> 16:16.760
哎你看这边

16:16.760 --> 16:17.760
这边就拿到了

16:17.760 --> 16:18.760
拿到了之后

16:18.760 --> 16:19.760
然后接下来

16:19.760 --> 16:20.760
下一步

16:20.760 --> 16:21.760
下一步就该干嘛

16:21.760 --> 16:22.760
是发送请求了

16:22.760 --> 16:23.760
对不对

16:23.760 --> 16:24.760
啊

16:24.760 --> 16:25.760
接下来的话

16:25.760 --> 16:28.710
就需要发送请求了

16:28.710 --> 16:29.710
接下来

16:29.710 --> 16:30.710
接下来

16:30.710 --> 16:32.710
就需要

16:32.710 --> 16:33.710
发送请求

16:34.710 --> 16:35.710
啊

16:35.710 --> 16:36.710
你在发送请求之前

16:36.710 --> 16:37.710
因为你这边的话

16:37.710 --> 16:39.710
是就是用户填写的

16:39.710 --> 16:40.710
所有东西都是和这个

16:40.710 --> 16:41.710
状态关联了的

16:41.710 --> 16:42.710
啊

16:42.710 --> 16:43.710
那你这边的话

16:43.710 --> 16:44.710
针对这个状态

16:44.710 --> 16:45.710
你可以稍微做一些简单的

16:45.710 --> 16:46.710
这个判断

16:46.710 --> 16:47.710
什么的都可以的

16:47.710 --> 16:48.710
啊

16:48.710 --> 16:49.710
比如说我这边的话

16:49.710 --> 16:50.710
我加个4循环

16:50.710 --> 16:51.710
啊

16:51.710 --> 16:52.710
加个4印循环

16:52.710 --> 16:54.710
Const的这个key

16:54.710 --> 16:56.710
硬这个stu

16:56.710 --> 16:57.710
去便利

16:57.710 --> 16:59.710
我的这个状态的每一项

16:59.710 --> 17:00.710
对吧

17:00.710 --> 17:01.710
接下来e4

17:01.710 --> 17:02.710
你的这个

17:02.710 --> 17:04.710
stu key

17:05.710 --> 17:06.710
他没有直

17:06.710 --> 17:07.710
对吧

17:07.710 --> 17:08.710
他是个空直串

17:08.710 --> 17:09.710
空直串

17:09.710 --> 17:10.710
然后我们就取个反

17:10.710 --> 17:11.710
ok

17:11.710 --> 17:12.710
好

17:12.710 --> 17:13.710
那我们这边呢

17:13.710 --> 17:14.710
就onert

17:15.710 --> 17:16.710
onert

17:16.710 --> 17:17.710
请完善

17:18.710 --> 17:20.710
请完善

17:21.710 --> 17:25.730
表单的每一项

17:25.730 --> 17:26.730
每一项

17:27.730 --> 17:28.730
对吧

17:28.730 --> 17:29.730
你可以做这些判断的

17:29.730 --> 17:30.730
啊

17:30.730 --> 17:31.730
然后接下来这边

17:31.730 --> 17:32.730
然后干嘛

17:32.730 --> 17:33.730
这边呢

17:33.730 --> 17:34.730
是不是直接return

17:34.730 --> 17:35.730
结束这个方法

17:35.730 --> 17:36.730
好

17:36.730 --> 17:37.730
来我们这边来看一下

17:37.730 --> 17:38.730
不用我把这边

17:38.730 --> 17:39.730
啊

17:39.730 --> 17:40.730
这边走

17:40.730 --> 17:42.730
是请完善表单的每一项

17:42.730 --> 17:43.730
对吧

17:43.730 --> 17:44.730
ok

17:44.730 --> 17:45.730
好

17:45.730 --> 17:46.730
然后接下来的话

17:46.730 --> 17:47.730
下一步

17:47.730 --> 17:48.730
下一步

17:48.730 --> 17:49.730
下一步的话

17:49.730 --> 17:51.730
我点这个确诊添加

17:51.730 --> 17:52.730
点击确诊添加的话

17:52.730 --> 17:53.730
这边是不是应该是

17:53.730 --> 17:54.730
发送请求了

17:54.730 --> 17:55.730
啊发送请求的话

17:55.730 --> 17:56.730
那我们需要

17:56.730 --> 17:57.730
回忆我们的这个

17:57.730 --> 17:58.730
API这边

17:58.730 --> 17:59.730
啊

17:59.730 --> 18:00.730
API这边

18:00.730 --> 18:01.730
我们需要新增一个API

18:01.730 --> 18:02.730
啊

18:02.730 --> 18:03.730
把这个

18:03.730 --> 18:04.730
之前的我们打下注释

18:04.730 --> 18:05.730
这个是什么

18:05.730 --> 18:06.730
这个是

18:06.730 --> 18:07.730
获取

18:07.730 --> 18:09.730
学生列表

18:09.730 --> 18:10.730
对吧

18:10.730 --> 18:11.730
好

18:11.730 --> 18:12.730
那将我们这边

18:12.730 --> 18:13.730
再来一个

18:13.730 --> 18:14.730
这个是什么呢

18:14.730 --> 18:15.730
这个是添加学生

18:15.730 --> 18:18.620
啊

18:18.620 --> 18:19.620
添加学生

18:19.620 --> 18:20.620
这边export

18:20.620 --> 18:21.620
function

18:21.620 --> 18:22.620
啊

18:22.620 --> 18:23.620
这边的话

18:23.620 --> 18:24.620
and

18:24.620 --> 18:25.620
stu

18:25.620 --> 18:26.620
API

18:26.620 --> 18:29.180
啊

18:29.180 --> 18:30.180
这里面

18:30.180 --> 18:31.180
这里面的话

18:31.180 --> 18:32.180
就return

18:32.180 --> 18:33.180
request

18:33.180 --> 18:34.180
这边的话

18:34.180 --> 18:35.180
你给我传一个

18:35.180 --> 18:36.180
你要添加的这个data

18:36.180 --> 18:37.180
好

18:37.180 --> 18:38.180
这边

18:38.180 --> 18:39.180
url

18:40.180 --> 18:41.180
url

18:41.180 --> 18:42.180
对应的是什么呢

18:42.180 --> 18:43.180
对应的是

18:43.180 --> 18:44.180
斜杠

18:44.180 --> 18:46.180
这个stud

18:46.180 --> 18:47.180
students

18:47.180 --> 18:49.180
仍然是students

18:49.180 --> 18:50.180
只不过什么呢

18:50.180 --> 18:51.180
只不过这边

18:51.180 --> 18:52.180
这个message

18:52.180 --> 18:54.180
对应的是post

18:54.180 --> 18:55.180
啊

18:55.180 --> 18:56.180
并且这边的话

18:56.180 --> 18:58.180
会带一个data过去

18:58.180 --> 18:59.180
ok

18:59.180 --> 19:00.180
带个data过去

19:00.180 --> 19:01.180
啊

19:01.180 --> 19:02.180
这边我们就是这个

19:02.180 --> 19:03.180
添加学生的这个

19:03.180 --> 19:04.180
啊

19:04.180 --> 19:05.180
API

19:05.180 --> 19:06.180
写好了

19:06.180 --> 19:07.180
然后回到这边

19:07.180 --> 19:09.180
这边的话你就引入一下

19:09.180 --> 19:11.180
import

19:12.180 --> 19:13.180
from

19:13.180 --> 19:14.180
啊

19:14.180 --> 19:15.180
上一集的API

19:15.180 --> 19:17.180
下面的stu api

19:17.180 --> 19:18.180
啊

19:18.180 --> 19:19.180
这边的是and

19:20.180 --> 19:22.180
stu api

19:22.180 --> 19:23.180
啊

19:23.180 --> 19:24.180
把引入

19:24.180 --> 19:25.180
引入之后

19:25.180 --> 19:26.180
然后接下来的话

19:26.180 --> 19:27.180
来到这边

19:27.180 --> 19:28.180
这边的话

19:28.180 --> 19:29.180
是不是调用这个

19:29.180 --> 19:30.180
对吧

19:30.180 --> 19:31.180
啊

19:31.180 --> 19:32.180
调用这个

19:32.180 --> 19:33.180
然后接下来

19:33.180 --> 19:34.180
把你的这个数据

19:34.180 --> 19:35.180
把它传过去

19:35.180 --> 19:36.180
你的数据的话

19:36.180 --> 19:37.180
就是啊

19:38.180 --> 19:39.180
stu

19:39.180 --> 19:40.180
啊

19:40.180 --> 19:41.180
然后接下来的话

19:41.180 --> 19:42.180
这边一个

19:42.180 --> 19:43.180
啊

19:43.180 --> 19:44.180
因为他返回的是一个promise

19:44.180 --> 19:45.180
啊

19:45.180 --> 19:46.180
大家我们这边

19:46.180 --> 19:49.750
然后我们这边需要做什么

19:49.750 --> 19:50.750
我们这边呢

19:50.750 --> 19:51.750
是不是就是需要

19:51.750 --> 19:52.750
回到这个

19:52.750 --> 19:53.750
首页

19:53.750 --> 19:54.750
对吧

19:54.750 --> 19:55.750
回到首页

19:55.750 --> 19:56.750
回到首页的话

19:56.750 --> 19:57.750
我们这边就需要做跳转

19:57.750 --> 19:59.750
需要做

19:59.750 --> 20:01.750
跳转

20:01.750 --> 20:03.750
那如何做这个跳转呢

20:03.750 --> 20:05.750
如何做跳转呢

20:05.750 --> 20:06.750
这边呢就涉及到

20:06.750 --> 20:07.750
我们这边的话

20:07.750 --> 20:09.750
有一个hook

20:09.750 --> 20:11.750
在hook里面

20:11.750 --> 20:14.750
有一个叫做use never get

20:14.750 --> 20:16.750
就这个

20:16.750 --> 20:17.750
看到没有

20:17.750 --> 20:18.750
你引入这个hook

20:18.750 --> 20:20.750
引入这个hook之后调用

20:20.750 --> 20:21.750
调用之后

20:21.750 --> 20:22.750
然后接下来的话

20:22.750 --> 20:24.750
得到一个这个never get

20:24.750 --> 20:25.750
的一个函数

20:25.750 --> 20:27.750
大家这边调用这个函数

20:27.750 --> 20:29.750
你就可以做一个跳转

20:29.750 --> 20:30.750
ok

20:30.750 --> 20:31.750
他这边写的有

20:31.750 --> 20:33.750
the use never get hook

20:33.750 --> 20:34.750
returns a function

20:34.750 --> 20:36.750
返回一个函数

20:36.750 --> 20:38.750
that's that you never get

20:38.750 --> 20:40.750
这个program

20:40.750 --> 20:41.750
metcally

20:41.750 --> 20:42.750
就是使用这种

20:42.750 --> 20:44.750
编程式的这种导航

20:44.750 --> 20:45.750
编程式的导航

20:45.750 --> 20:46.750
大家应该是熟悉的

20:46.750 --> 20:47.750
对吧

20:47.750 --> 20:48.750
咱们这个we里面

20:48.750 --> 20:49.750
是不是也分成

20:49.750 --> 20:50.750
这个声明式导航

20:50.750 --> 20:51.750
和编程式导航

20:51.750 --> 20:52.750
ok

20:52.750 --> 20:53.750
那这边

20:53.750 --> 20:54.750
他给了一个例子

20:54.750 --> 20:55.750
ok

20:55.750 --> 20:56.750
那我们这边

20:56.750 --> 20:57.750
就引入呗

20:57.750 --> 20:59.750
这边把他引入

20:59.750 --> 21:01.750
来到这边

21:01.750 --> 21:02.750
把他引入

21:02.750 --> 21:03.750
引入了之后

21:03.750 --> 21:04.750
然后接下来

21:04.750 --> 21:06.750
把这边获取一下

21:06.750 --> 21:07.750
const

21:07.750 --> 21:09.750
never get

21:09.750 --> 21:11.750
never get

21:11.750 --> 21:13.750
然后等于一个

21:13.750 --> 21:14.750
等于一个

21:14.750 --> 21:16.750
use never get

21:16.750 --> 21:19.700
ok

21:19.700 --> 21:20.700
回头的话

21:20.700 --> 21:21.700
你这边就可以

21:21.700 --> 21:23.700
做跳转了

21:23.700 --> 21:25.700
跳转

21:25.700 --> 21:26.700
跳转到哪里

21:26.700 --> 21:28.700
跳转到哄

21:28.700 --> 21:29.700
ok

21:29.700 --> 21:30.700
跳转到哄

21:30.700 --> 21:31.700
好

21:31.700 --> 21:32.700
那这样我们这边

21:32.700 --> 21:33.700
我们来试一试

21:33.700 --> 21:34.700
我们这边

21:34.700 --> 21:35.700
新增一个

21:35.700 --> 21:36.700
新增一个

21:36.700 --> 21:37.700
卸节

21:37.700 --> 21:39.700
年龄18岁

21:39.700 --> 21:40.700
电话131

21:40.700 --> 21:41.700
1234

21:41.700 --> 21:42.700
1234

21:42.700 --> 21:43.700
123

21:43.700 --> 21:44.700
qq.com

21:44.700 --> 21:45.700
好

21:45.700 --> 21:46.700
大家这边

21:46.700 --> 21:47.700
学历

21:47.700 --> 21:48.700
学历就写本科嘛

21:48.700 --> 21:49.700
好那逼越院校

21:49.700 --> 21:51.700
比如说度一大学

21:51.700 --> 21:52.700
职业

21:52.700 --> 21:55.700
前端讲师

21:55.700 --> 21:56.700
ok

21:56.700 --> 21:57.700
比如说

21:57.700 --> 22:00.460
你好

22:00.460 --> 22:01.460
ok

22:01.460 --> 22:02.460
确认添加

22:02.460 --> 22:03.460
走

22:03.460 --> 22:04.460
这边是不是就成功了

22:04.460 --> 22:05.460
对吧

22:05.460 --> 22:06.460
成功了

22:06.460 --> 22:08.460
添加了这么一条了

22:08.460 --> 22:09.460
但这边的话

22:09.460 --> 22:10.460
你其实就是

22:10.460 --> 22:11.460
应该有一个什么

22:11.460 --> 22:12.460
就我上次演示的时候

22:12.460 --> 22:13.460
我不知道大家还记不记得

22:13.460 --> 22:14.460
我这边其实

22:14.460 --> 22:16.460
是有一个那个提示的

22:16.460 --> 22:17.460
这边提示就是

22:17.460 --> 22:19.460
添加成功

22:19.460 --> 22:21.460
添加成功

22:21.460 --> 22:22.460
这个怎么做呢

22:22.460 --> 22:23.460
这个也可以做

22:23.460 --> 22:24.460
这个的话

22:24.460 --> 22:25.460
你找到那个

22:25.460 --> 22:29.610
找到

22:29.610 --> 22:32.610
找到

22:32.610 --> 22:34.610
我们进去

22:34.610 --> 22:35.610
进去之后

22:35.610 --> 22:36.610
然后接下来这边

22:36.610 --> 22:38.610
然后它里面有一个这个

22:38.610 --> 22:40.610
主键

22:40.610 --> 22:41.610
有个主键

22:41.610 --> 22:42.610
我看一下啊

22:42.610 --> 22:43.610
是一个警告框

22:43.610 --> 22:44.610
就这个

22:44.610 --> 22:45.610
就这个

22:45.610 --> 22:46.610
这个警告框

22:46.610 --> 22:47.610
ok

22:47.610 --> 22:48.610
我们就用这个来做

22:48.610 --> 22:51.180
好

22:51.180 --> 22:52.180
我们这边的话

22:52.180 --> 22:53.180
我们选个可以关闭的

22:53.180 --> 22:54.180
我们就要他吧

22:54.180 --> 22:55.180
就要他

22:55.180 --> 22:56.180
ok

22:56.180 --> 22:57.180
我们这边复制一下

22:57.180 --> 22:58.180
复制

22:58.180 --> 22:59.180
复制之后

22:59.180 --> 23:00.180
然后将我们这边

23:00.180 --> 23:01.180
我们新建一个主键

23:01.180 --> 23:03.180
新建一个叫做

23:03.180 --> 23:05.180
alert

23:05.180 --> 23:07.180
alert.js

23:07.180 --> 23:09.180
这个他就是一个提示

23:09.180 --> 23:11.180
alert.js

23:11.180 --> 23:13.180
ok

23:13.180 --> 23:14.180
这个就是一个提示

23:14.180 --> 23:17.870
就是提示主键

23:17.870 --> 23:22.360
提示主键

23:22.360 --> 23:23.360
好

23:23.360 --> 23:24.360
大家把刚才复制的那块

23:24.360 --> 23:25.360
拿过来

23:25.360 --> 23:26.360
放在这里

23:26.360 --> 23:27.360
好

23:27.360 --> 23:28.360
放在这里之后

23:28.360 --> 23:30.360
然后接下来这一块

23:30.360 --> 23:31.360
这边我们写

23:31.360 --> 23:32.360
改成中文

23:32.360 --> 23:34.360
这边提示

23:34.360 --> 23:35.360
提示

23:35.360 --> 23:36.360
好

23:36.360 --> 23:37.360
人家这一块

23:37.360 --> 23:38.360
这一块内容的话

23:38.360 --> 23:39.360
应该是什么

23:39.360 --> 23:40.360
这一块内容的话

23:40.360 --> 23:41.360
是不是就是

23:41.360 --> 23:43.360
外层使用主键的时候

23:43.360 --> 23:45.360
你给我传递进来的

23:45.360 --> 23:46.360
对不对

23:46.360 --> 23:47.360
所以我这边的话

23:47.360 --> 23:49.360
就是应该是外层传递过来的

23:49.360 --> 23:51.360
我这边使用一个props

23:51.360 --> 23:53.360
props.alert

23:53.360 --> 23:54.360
就你外层

23:54.360 --> 23:57.360
外层你到时候再使用我这个alert

23:57.360 --> 23:58.360
alert这个主键的时候

23:58.360 --> 24:00.360
你这边来给我传一个alert

24:00.360 --> 24:01.360
对不对

24:01.360 --> 24:04.360
比如说这边传一个天家成功

24:04.360 --> 24:05.360
到时候让我这边

24:05.360 --> 24:06.360
是不是就接受到

24:06.360 --> 24:07.360
我这边是不是就

24:07.360 --> 24:09.360
显示天家成功

24:09.360 --> 24:10.360
对不对

24:10.360 --> 24:12.670
OK

24:12.670 --> 24:13.670
好

24:13.670 --> 24:15.670
这是关于这个alert

24:15.670 --> 24:17.670
alert然后风双好了之后

24:17.670 --> 24:18.670
然后接下来的话

24:18.670 --> 24:19.670
我们要用

24:19.670 --> 24:20.670
那接下来回到什么呢

24:20.670 --> 24:21.670
回到我们这个

24:21.670 --> 24:22.670
控主键

24:22.670 --> 24:23.670
控主键

24:23.670 --> 24:25.670
这边我们来引入

24:25.670 --> 24:29.430
import

24:29.430 --> 24:30.430
alert

24:30.430 --> 24:31.430
from

24:31.430 --> 24:34.430
当前目录下面的alert

24:34.430 --> 24:36.430
OK引入

24:36.430 --> 24:37.430
引入了之后

24:37.430 --> 24:38.430
然后接下来的话

24:38.430 --> 24:39.430
显示在哪个位置呢

24:39.430 --> 24:41.430
显示在

24:41.430 --> 24:42.430
显示在这个位置

24:43.430 --> 24:44.430
显示在这个位置

24:44.430 --> 24:46.430
也就是说对应的是

24:46.430 --> 24:48.430
对应的是这个位置

24:48.430 --> 24:49.430
OK

24:49.430 --> 24:50.430
对应这个位置

24:50.430 --> 24:51.430
这个位置的话

24:51.430 --> 24:53.430
它这个你不能一开始就写着

24:53.430 --> 24:54.430
对吧

24:54.430 --> 24:55.430
你不能一开始

24:55.430 --> 24:57.430
我这边就alert

24:57.430 --> 24:58.430
你现在的话

24:58.430 --> 24:59.430
这个你这样子写的话

24:59.430 --> 25:00.430
它倒是能够显示出来

25:00.430 --> 25:02.430
我们这边先看一下吧

25:02.430 --> 25:05.430
比如说天家学生成功

25:05.430 --> 25:07.430
它倒是能够显示出来

25:07.430 --> 25:08.430
我这边看一下

25:08.430 --> 25:09.430
就出来了

25:09.430 --> 25:10.430
对不对

25:10.430 --> 25:11.430
你这边可以把它关掉

25:11.430 --> 25:12.430
你刷新

25:12.430 --> 25:14.430
刷新了它这边就出来了

25:14.430 --> 25:15.430
对不对

25:15.430 --> 25:16.430
我们这边应该是什么

25:16.430 --> 25:17.430
应该是

25:17.430 --> 25:19.430
就是你跳转到Hung的时候

25:19.430 --> 25:22.430
我们这边的话要做一个判断

25:22.430 --> 25:24.430
做一个判断

25:24.430 --> 25:25.430
判断什么呢

25:25.430 --> 25:27.430
判断你这边

25:27.430 --> 25:29.430
有没有这个location.stat

25:29.430 --> 25:32.430
就是否有状态传递过来

25:32.430 --> 25:34.430
这边的话就涉及到

25:34.430 --> 25:35.430
你这里

25:35.430 --> 25:37.430
这里在进行跳转的时候

25:37.430 --> 25:38.430
这边的话

25:38.430 --> 25:39.430
我们要给

25:39.430 --> 25:40.430
第二个参数

25:40.430 --> 25:42.430
要给第二个参数

25:42.430 --> 25:43.430
OK

25:43.430 --> 25:44.430
这边

25:44.430 --> 25:45.430
除了它

25:45.430 --> 25:47.430
既然我们这边再给第二个参数

25:47.430 --> 25:49.430
第二个参数是一个对象

25:49.430 --> 25:50.430
对象这边的话

25:50.430 --> 25:51.430
我就可以写什么呢

25:51.430 --> 25:53.430
可以写一个stat

25:53.430 --> 25:55.430
我要给它传递一个这个状态

25:55.430 --> 25:57.430
状态里面有两个

25:57.430 --> 25:58.430
一个是什么呢

25:58.430 --> 25:59.430
一个是anert

25:59.430 --> 26:00.430
对应的是什么呢

26:00.430 --> 26:02.430
对应的是用户

26:02.430 --> 26:05.430
天家成功

26:05.430 --> 26:06.430
OK

26:06.430 --> 26:07.430
另外一个什么呢

26:07.430 --> 26:08.430
另外是它的一个type

26:08.430 --> 26:12.430
type是success

26:12.430 --> 26:13.430
success

26:13.430 --> 26:14.430
因为你看这边

26:14.430 --> 26:15.430
它的这个anert

26:15.430 --> 26:18.430
它是有多种的

26:18.430 --> 26:19.430
你看看到没有

26:19.430 --> 26:21.430
这个的话一般就是成功

26:21.430 --> 26:22.430
大家这个这个是警告

26:22.430 --> 26:23.430
这个的话是出错

26:23.430 --> 26:24.430
对不对

26:24.430 --> 26:25.430
我们成功的话

26:25.430 --> 26:26.430
我们这边就让它显示

26:26.430 --> 26:28.430
就是和你这个警告

26:28.430 --> 26:30.430
相符的这个颜色

26:30.430 --> 26:31.430
对不对

26:31.430 --> 26:33.430
这个的话就是success

26:33.430 --> 26:34.430
success

26:34.430 --> 26:35.430
你看这边

26:35.430 --> 26:36.430
anert

26:37.430 --> 26:38.430
OK

26:38.430 --> 26:39.430
也就是我们回头的话

26:39.430 --> 26:40.430
我们这边要改

26:40.430 --> 26:41.430
这边要改

26:41.430 --> 26:42.430
这边的话

26:42.430 --> 26:43.430
我们应该让它干嘛

26:43.430 --> 26:45.430
是不是也是动态接收的

26:45.430 --> 26:46.430
对不对

26:46.430 --> 26:47.430
接收然后传入的

26:47.430 --> 26:48.430
好

26:48.430 --> 26:49.430
我们一步一步来

26:49.430 --> 26:50.430
首先的话

26:50.430 --> 26:51.430
我这边在跳转的时候

26:51.430 --> 26:53.430
我这边是不是给了你一个stat

26:53.430 --> 26:54.430
给了你一个stat之后

26:54.430 --> 26:55.430
然后接下来

26:55.430 --> 26:56.430
我们在location这边

26:56.430 --> 26:58.430
我们就要获取

26:58.430 --> 27:00.430
这个stat

27:00.430 --> 27:02.430
如何获取这个stat

27:02.430 --> 27:03.430
这边

27:03.430 --> 27:05.430
我们就再来一个什么呢

27:05.430 --> 27:07.430
再来一个副作用

27:07.430 --> 27:08.430
啊

27:08.430 --> 27:09.430
再来

27:09.430 --> 27:12.430
再来一个副作用

27:12.430 --> 27:13.430
用于什么呢

27:13.430 --> 27:15.430
用于获取

27:15.430 --> 27:17.430
跳转

27:17.430 --> 27:18.430
跳转到

27:18.430 --> 27:20.430
Hong 组建石

27:20.430 --> 27:22.430
组建石

27:22.430 --> 27:25.430
传递的stat

27:25.430 --> 27:27.430
数据

27:27.430 --> 27:28.430
OK

27:28.430 --> 27:29.430
这边怎么拿呢

27:29.430 --> 27:30.430
这边的话

27:30.430 --> 27:32.430
你可以通过这个location

27:32.430 --> 27:34.430
可以通过这个location

27:34.430 --> 27:35.430
来拿到

27:35.430 --> 27:36.430
好

27:36.430 --> 27:37.430
所以说我们这边的话

27:37.430 --> 27:38.430
我们这边来看一下

27:38.430 --> 27:40.430
回到这边

27:40.430 --> 27:41.430
这边的话

27:41.430 --> 27:44.430
它会有一个use location

27:44.430 --> 27:46.430
在这里

27:46.430 --> 27:47.430
看到没有

27:47.430 --> 27:48.430
这边呢

27:48.430 --> 27:49.430
会有一个use location

27:49.430 --> 27:50.430
这个location

27:50.430 --> 27:51.430
啊

27:51.430 --> 27:53.430
你这边调用这个use location

27:53.430 --> 27:54.430
然后这边呢

27:54.430 --> 27:56.430
会拿到一个location对象

27:56.430 --> 27:58.430
你拿到这个location对象之后

27:58.430 --> 27:59.430
然后接下来的话

27:59.430 --> 28:00.430
你就可以看到这个location

28:00.430 --> 28:01.430
上面的这个stat

28:01.430 --> 28:02.430
OK

28:02.430 --> 28:03.430
我们这边来试一下吧

28:03.430 --> 28:04.430
这边的话

28:04.430 --> 28:05.430
我们

28:05.430 --> 28:07.430
Hong 组建这里

28:07.430 --> 28:08.430
啊

28:08.430 --> 28:09.430
好

28:09.430 --> 28:10.430
我们这边的话

28:10.430 --> 28:12.430
import

28:12.430 --> 28:14.430
import一个use

28:14.430 --> 28:16.430
location

28:16.430 --> 28:18.430
from

28:18.430 --> 28:19.430
react

28:19.430 --> 28:20.430
routerdom

28:20.430 --> 28:21.430
对吧

28:21.430 --> 28:22.430
好

28:22.430 --> 28:23.430
然后接下来的话这里

28:23.430 --> 28:24.430
const

28:24.430 --> 28:26.430
一个location

28:26.430 --> 28:28.430
等于一个use location

28:28.430 --> 28:29.430
好

28:29.430 --> 28:30.430
完事之后

28:30.430 --> 28:31.430
然后我们这边

28:31.430 --> 28:32.430
再来一个副作用

28:32.430 --> 28:33.430
use

28:33.430 --> 28:34.430
effect

28:34.430 --> 28:36.870
好

28:36.870 --> 28:39.250
这边

28:39.250 --> 28:40.250
好

28:40.250 --> 28:41.250
接下来它的这个依赖象

28:41.250 --> 28:43.250
它的依赖象就是应该是什么呢

28:43.250 --> 28:44.250
它的依赖象的话

28:44.250 --> 28:46.250
其实就是应该是这个location

28:46.250 --> 28:47.250
OK

28:47.250 --> 28:48.250
就应该是个location

28:48.250 --> 28:49.250
对吧

28:49.250 --> 28:50.250
整理location一遍了

28:50.250 --> 28:51.250
让我这边的话

28:51.250 --> 28:53.250
就要重新执行这个副作用

28:53.250 --> 28:54.250
执行这个副作用

28:54.250 --> 28:55.250
然后接下来我们来看一下

28:55.250 --> 28:57.250
这边console.nog

28:57.250 --> 29:01.250
location.stat

29:01.250 --> 29:02.250
然后我们这边打印一下

29:02.250 --> 29:04.250
location.stat

29:04.250 --> 29:06.750
这边怎么会报错

29:06.750 --> 29:08.750
location写错了

29:08.750 --> 29:10.750
location

29:10.750 --> 29:12.750
location.stat

29:12.750 --> 29:14.750
这边就是

29:14.750 --> 29:15.750
OK

29:15.750 --> 29:16.750
好来我们保存一下

29:16.750 --> 29:18.750
我们来看一下能不能拿得到

29:18.750 --> 29:20.750
好

29:20.750 --> 29:23.750
把这边检查打开

29:23.750 --> 29:24.750
检查

29:24.750 --> 29:25.750
现在的话

29:25.750 --> 29:26.750
第一次是不是呢

29:26.750 --> 29:27.750
这边怎么报了一个

29:27.750 --> 29:28.750
69

29:28.750 --> 29:30.750
应该是那个anert

29:30.750 --> 29:31.750
应该是anert

29:31.750 --> 29:32.750
应该是

29:33.750 --> 29:35.750
OK保存

29:35.750 --> 29:37.750
保存之后刷新一下

29:37.750 --> 29:39.750
怎么还有

29:40.750 --> 29:41.750
button

29:41.750 --> 29:42.750
还有button

29:42.750 --> 29:43.750
button

29:43.750 --> 29:44.750
这里

29:45.750 --> 29:46.750
然后还有没有

29:47.750 --> 29:48.750
应该没了是吧

29:48.750 --> 29:49.750
保存

29:49.750 --> 29:50.750
刷新

29:51.750 --> 29:52.750
OK你看

29:52.750 --> 29:53.750
一开始的话

29:53.750 --> 29:54.750
这边是不是呢

29:54.750 --> 29:55.750
对了

29:55.750 --> 29:57.750
好大家这边让我们添加

29:57.750 --> 29:58.750
添加用户

29:58.750 --> 29:59.750
比如我们这边

29:59.750 --> 30:01.750
一一一

30:01.750 --> 30:02.750
先随便填

30:02.750 --> 30:04.750
一一一

30:04.750 --> 30:06.750
好大家这边我们点击确认添加

30:06.750 --> 30:07.750
你看

30:07.750 --> 30:08.750
这次跳过来的时候

30:08.750 --> 30:09.750
你看这边的话

30:09.750 --> 30:11.750
我们是不是就可以拿到

30:11.750 --> 30:13.750
你那个never gate过来的时候

30:13.750 --> 30:15.750
这边这个信息啊

30:15.750 --> 30:16.750
对不对

30:16.750 --> 30:18.750
只要这个信息也拿到了

30:18.750 --> 30:20.750
后面是不是就好办了

30:20.750 --> 30:21.750
对不对

30:21.750 --> 30:22.750
后面就好办了

30:22.750 --> 30:23.750
好

30:23.750 --> 30:25.750
然后接下来我们在这边

30:25.750 --> 30:27.750
我们回到我们的

30:27.750 --> 30:28.750
轰组件

30:28.750 --> 30:30.750
我们在这边怎么做呢

30:30.750 --> 30:31.750
我们都亲戚还没写是吧

30:31.750 --> 30:33.750
这个我们一会再说

30:33.750 --> 30:34.750
亲戚是哪的呀

30:34.750 --> 30:35.750
亲戚是这的

30:35.750 --> 30:36.750
这个是搜索

30:36.750 --> 30:38.750
搜索我们一会再说

30:38.750 --> 30:39.750
好我们在这边

30:39.750 --> 30:40.750
这边的话

30:40.750 --> 30:41.750
我们就

30:41.750 --> 30:42.750
const

30:43.750 --> 30:45.750
const一个sure

30:45.750 --> 30:47.750
alert

30:47.750 --> 30:48.750
它等于什么呢

30:48.750 --> 30:50.750
它就看你这边

30:50.750 --> 30:53.750
是否有这个anert

30:53.750 --> 30:54.750
那我这边的话

30:54.750 --> 30:55.750
我还得再

30:55.750 --> 30:57.750
定一个这个状态啊

30:57.750 --> 30:59.750
稍等我这边再定一个状态

30:59.750 --> 31:00.750
这边的话

31:00.750 --> 31:01.750
anert

31:01.750 --> 31:03.750
然后set

31:03.750 --> 31:05.750
anert

31:05.750 --> 31:06.750
等于一个useState

31:06.750 --> 31:08.750
一开始的话是什么

31:08.750 --> 31:10.750
一开始是不是call

31:10.750 --> 31:11.750
对不对

31:11.750 --> 31:12.750
一开始是call

31:12.750 --> 31:13.750
一开始是call之后

31:13.750 --> 31:15.750
然后接下来的话你这边

31:15.750 --> 31:16.750
这边你如果

31:16.750 --> 31:17.750
if

31:17.750 --> 31:19.750
这边你要做一个判断

31:19.750 --> 31:20.750
if什么呢

31:20.750 --> 31:22.750
if这个locationState

31:22.750 --> 31:24.750
就有这个值

31:24.750 --> 31:26.750
好那我们这边干吗

31:26.750 --> 31:27.750
我们做的事情就很简单

31:27.750 --> 31:28.750
我们这边就set

31:28.750 --> 31:30.750
anert

31:30.750 --> 31:33.750
然后把这个locationState

31:33.750 --> 31:34.750
就给它

31:34.750 --> 31:35.750
对

31:35.750 --> 31:36.750
答应就不要了

31:36.750 --> 31:37.750
ok

31:37.750 --> 31:38.750
好了这个anert

31:38.750 --> 31:39.750
anert的话一开始是call

31:39.750 --> 31:41.750
后面的话你跳转过来的话

31:41.750 --> 31:42.750
有可能它就变成一个对象了

31:42.750 --> 31:43.750
所以我们这边的话

31:43.750 --> 31:45.750
需要做一个判断

31:45.750 --> 31:47.750
anert

31:47.750 --> 31:50.750
是否有值

31:50.750 --> 31:51.750
如果有值

31:51.750 --> 31:52.750
那我这边就干吗

31:52.750 --> 31:53.750
我这边是不是就渲染

31:53.750 --> 31:55.750
渲染这个组件

31:55.750 --> 31:56.750
对不对否则的话

31:56.750 --> 31:57.750
我这边就干吗

31:57.750 --> 32:00.750
否则的话我这边就是一个call

32:00.750 --> 32:01.750
ok

32:01.750 --> 32:02.750
好大家这边

32:02.750 --> 32:04.750
这边的话你这个anert

32:04.750 --> 32:07.750
anert的话这边的话就直接

32:07.750 --> 32:08.750
你这边可以直接这样子

32:08.750 --> 32:09.750
点点点

32:09.750 --> 32:11.750
anert

32:11.750 --> 32:13.750
看得懂这个吧

32:13.750 --> 32:14.750
这个看得懂吗

32:14.750 --> 32:15.750
你这边这个anert

32:15.750 --> 32:16.750
是不是这两个属性

32:16.750 --> 32:17.750
对不对

32:17.750 --> 32:18.750
你这边点点点

32:18.750 --> 32:19.750
现在就把它展开了

32:19.750 --> 32:20.750
展开之后相当于

32:20.750 --> 32:21.750
这边就

32:21.750 --> 32:22.750
传了两个属性

32:22.750 --> 32:23.750
一个是anert

32:23.750 --> 32:24.750
一个是什么

32:24.750 --> 32:25.750
一个是type

32:25.750 --> 32:26.750
ok

32:26.750 --> 32:27.750
好大家我们在这里

32:27.750 --> 32:28.750
在这里的话

32:28.750 --> 32:31.750
我们就是修anert

32:31.750 --> 32:32.750
我们就显示修anert

32:32.750 --> 32:33.750
一开始的话是non

32:33.750 --> 32:35.750
non的话就什么都没有

32:35.750 --> 32:36.750
后面你跳转过来

32:36.750 --> 32:37.750
那个跳转过来的时候

32:37.750 --> 32:38.750
如果你这有值

32:38.750 --> 32:39.750
有值的话

32:39.750 --> 32:41.750
我这边就会显示

32:41.750 --> 32:42.750
好然后接下来

32:42.750 --> 32:43.750
你在这个anert

32:43.750 --> 32:45.750
这边你还得改一下

32:45.750 --> 32:46.750
这边的话你得改一下

32:46.750 --> 32:48.750
就是我们的这个type

32:48.750 --> 32:50.750
type这边怎么改

32:50.750 --> 32:51.750
看一下

32:51.750 --> 32:53.750
这边他默认有anert

32:53.750 --> 32:54.750
anert worrying

32:54.750 --> 32:55.750
对吧

32:55.750 --> 32:57.750
anert this missing ball

32:57.750 --> 32:58.750
这个都不管主

32:58.750 --> 32:59.750
主要是什么

32:59.750 --> 33:00.750
这主要是他呀

33:00.750 --> 33:01.750
这主要是他

33:01.750 --> 33:02.750
他的话

33:02.750 --> 33:03.750
我们这边的话

33:03.750 --> 33:05.750
我们就不能再用支付串了

33:05.750 --> 33:07.750
把这个复制一份

33:07.750 --> 33:09.750
这个注射掉

33:09.750 --> 33:10.750
这边的话

33:10.750 --> 33:11.750
就不能再用支付串了

33:11.750 --> 33:12.750
这边得用什么呢

33:12.750 --> 33:14.750
这边得用这个

33:14.750 --> 33:15.750
数组

33:15.750 --> 33:16.750
这边

33:16.750 --> 33:17.750
数组

33:17.750 --> 33:18.750
看了没有

33:18.750 --> 33:19.750
数组里面有什么

33:19.750 --> 33:21.750
数组里面有anert

33:21.750 --> 33:22.750
还有什么

33:22.750 --> 33:24.750
还有就是你的这个anert

33:24.750 --> 33:26.750
dismissable

33:26.750 --> 33:27.750
这个

33:27.750 --> 33:28.750
这两个把它放过去

33:28.750 --> 33:29.750
好然后接下来的话

33:29.750 --> 33:30.750
第三个

33:30.750 --> 33:32.750
第三个的话就是

33:32.750 --> 33:33.750
anert

33:33.750 --> 33:35.750
然后接下来的话

33:35.750 --> 33:36.750
干

33:36.750 --> 33:37.750
干什么

33:37.750 --> 33:40.750
加上一个pops

33:40.750 --> 33:44.450
点type

33:45.450 --> 33:46.450
OK那整个

33:46.450 --> 33:47.450
这个就拿到一个什么

33:47.450 --> 33:49.450
就拿到一个数组

33:49.450 --> 33:50.450
对不对你看一下这个

33:50.450 --> 33:51.450
你应该是看得懂的

33:51.450 --> 33:52.450
对吧anert

33:52.450 --> 33:53.450
加这个

33:53.450 --> 33:54.450
加这边anert

33:54.450 --> 33:56.450
取决于你后面传的是什么

33:56.450 --> 33:58.450
我们这边传的是

33:58.450 --> 33:59.450
sixth

33:59.450 --> 34:00.450
那最终的话

34:00.450 --> 34:01.450
他这边拼接出来

34:01.450 --> 34:02.450
是不是anert

34:02.450 --> 34:03.450
6th

34:03.450 --> 34:04.450
对不对

34:04.450 --> 34:05.450
这个数组

34:05.450 --> 34:06.450
然后接下来

34:06.450 --> 34:07.450
我们这边再干完了

34:07.450 --> 34:09.450
再进行一个join

34:09.450 --> 34:10.450
看到没有

34:10.450 --> 34:11.450
join

34:11.450 --> 34:13.450
每一个以这个空格

34:13.450 --> 34:14.450
把它分隔开

34:14.450 --> 34:15.450
OK

34:15.450 --> 34:17.450
这是JS的基本语法

34:17.450 --> 34:18.450
这就不多说了

34:18.450 --> 34:20.450
好来看一下

34:20.450 --> 34:22.450
现在的话应该就ok了

34:22.450 --> 34:23.450
应该就ok了

34:23.450 --> 34:25.450
我们这边来看一下

34:25.450 --> 34:26.450
一开始

34:26.450 --> 34:27.450
我们这边从头来

34:27.450 --> 34:29.450
一开始是没有的

34:29.450 --> 34:31.450
对吧让我这边添加用户

34:31.450 --> 34:38.020
这边怎么回事

34:38.020 --> 34:40.020
对的对的

34:40.020 --> 34:41.020
对的

34:41.020 --> 34:42.020
吓我一跳

34:42.020 --> 34:43.020
我们这边的话是这个

34:43.020 --> 34:44.020
选中的是白色

34:44.020 --> 34:46.020
这个选中是白色

34:46.020 --> 34:48.020
这个是不是有点怪

34:48.020 --> 34:50.020
是不是应该是就是

34:50.020 --> 34:51.020
应该是选中的

34:51.020 --> 34:52.020
让他变成蓝色

34:52.020 --> 34:53.020
要好一些是吧

34:53.020 --> 34:55.020
刚才吓我一跳

34:55.020 --> 34:56.020
这个自己改吧

34:56.020 --> 34:57.020
自己改

34:57.020 --> 34:58.020
好然后接下来

34:58.020 --> 34:59.020
这边的话这个2

34:59.020 --> 35:00.020
2

35:00.020 --> 35:01.020
2

35:01.020 --> 35:02.020
我这边就随便填了

35:02.020 --> 35:03.020
2

35:03.020 --> 35:04.020
2

35:04.020 --> 35:05.020
好这边走

35:05.020 --> 35:06.020
是不是搞定

35:06.020 --> 35:07.020
对了提示

35:07.020 --> 35:08.020
用户添加成功

35:08.020 --> 35:10.020
把这个关了就ok了

35:10.020 --> 35:11.020
ok

35:11.020 --> 35:14.020
这就是关于这个添加用户

35:14.020 --> 35:16.020
好添加用户

35:16.020 --> 35:18.020
咱们就写完了

35:18.020 --> 35:19.020
添加用户写完了之后

35:19.020 --> 35:20.020
然后接下来的话

35:20.020 --> 35:21.020
咱们这边

35:22.020 --> 35:23.020
咱们继续

35:23.020 --> 35:24.020
接下来的话

35:24.020 --> 35:26.020
咱们来看一下这个详情

35:26.020 --> 35:28.020
看一下详情

35:28.020 --> 35:29.020
详情的话就是这个位置

35:29.020 --> 35:30.020
这个位置的话

35:30.020 --> 35:31.020
是不是应该是

35:31.020 --> 35:32.020
做一个这个跳转

35:32.020 --> 35:33.020
对吧

35:33.020 --> 35:34.020
好

35:34.020 --> 35:35.020
然后我们这边的话

35:35.020 --> 35:36.020
我们来写一个

35:36.020 --> 35:37.020
首先的话

35:37.020 --> 35:38.020
我们这边需要有一个

35:38.020 --> 35:40.020
这个新的组件

35:40.020 --> 35:41.020
叫做什么呢

35:41.020 --> 35:42.020
叫做detail

35:43.020 --> 35:44.020
点JSX

35:45.020 --> 35:46.020
ok

35:46.020 --> 35:47.020
这个的话就是详情

35:48.020 --> 35:49.020
好

35:49.020 --> 35:50.020
这个就是详情

35:50.020 --> 35:54.100
就是学生

35:54.100 --> 35:56.100
详情

35:56.100 --> 35:57.100
组件

35:57.100 --> 35:58.100
ok

35:58.100 --> 35:59.100
好

35:59.100 --> 36:00.100
学生详情组件

36:00.100 --> 36:01.100
我们这边先把它

36:02.100 --> 36:04.100
先把那个路由那边

36:04.100 --> 36:05.100
先把它配置了

36:05.100 --> 36:06.100
好

36:06.100 --> 36:07.100
让我们回到

36:07.100 --> 36:08.100
回到哪里

36:08.100 --> 36:09.100
回到这个Home

36:09.100 --> 36:10.100
不是Home

36:10.100 --> 36:11.100
是App

36:11.100 --> 36:12.100
回到这边

36:12.100 --> 36:13.100
这边的话

36:13.100 --> 36:14.100
是不是就需要

36:14.100 --> 36:16.100
新添加一个

36:16.100 --> 36:18.100
这个路由

36:18.100 --> 36:19.100
对不对

36:19.100 --> 36:20.100
好

36:20.100 --> 36:22.800
我们在这边

36:22.800 --> 36:23.800
这边

36:23.800 --> 36:24.800
detail

36:24.800 --> 36:25.800
好

36:25.800 --> 36:27.800
然后接下来还有就是这边

36:27.800 --> 36:28.800
detail

36:28.800 --> 36:29.800
把它引入一下

36:29.800 --> 36:30.800
引入之后

36:30.800 --> 36:31.800
然后接下来的话

36:31.800 --> 36:32.800
这边

36:32.800 --> 36:33.800
这边的话

36:33.800 --> 36:34.800
这个detail

36:34.800 --> 36:35.800
detail的话

36:35.800 --> 36:36.800
它是不是应该是一个

36:36.800 --> 36:37.800
动态路由

36:38.800 --> 36:39.800
对吧

36:39.800 --> 36:40.800
你这边的话

36:40.800 --> 36:41.800
这个detail

36:41.800 --> 36:42.800
然后面的话

36:42.800 --> 36:43.800
就是应该是接受一个什么

36:43.800 --> 36:44.800
接受一个ID

36:45.800 --> 36:46.800
你这边

36:46.800 --> 36:47.800
你要给我传一个ID过去

36:47.800 --> 36:48.800
对不对

36:48.800 --> 36:49.800
我回头我根据这个ID

36:49.800 --> 36:50.800
我是不是才能获取到

36:50.800 --> 36:51.800
用户的这个详情

36:52.800 --> 36:53.800
对不对

36:53.800 --> 36:54.800
我们这边的话

36:54.800 --> 36:55.800
detail

36:55.800 --> 36:56.800
detail这个主键

36:56.800 --> 36:57.800
来我们这边

36:57.800 --> 36:58.800
我们来看一下

36:58.800 --> 36:59.800
比如说我们这边的话

36:59.800 --> 37:00.800
我们detail

37:02.800 --> 37:03.800
detail

37:03.800 --> 37:04.800
然后123

37:04.800 --> 37:05.800
走

37:05.800 --> 37:06.800
是不是能够跳过来

37:06.800 --> 37:07.800
对吧

37:07.800 --> 37:09.800
首先把这个写了

37:09.800 --> 37:10.800
写了之后

37:10.800 --> 37:11.800
然后接下来的话

37:11.800 --> 37:12.800
这边我们这个主页这里

37:13.800 --> 37:14.800
这里我们这个详情

37:14.800 --> 37:15.800
详情的话

37:15.800 --> 37:16.800
它这边就应该是什么

37:16.800 --> 37:18.800
通过level link

37:18.800 --> 37:19.800
link 是不是

37:19.800 --> 37:20.800
做一个跳转

37:21.800 --> 37:22.800
对吧

37:22.800 --> 37:23.800
好

37:23.800 --> 37:24.800
那我们回到这个控主键

37:24.800 --> 37:25.800
回到控主键

37:25.800 --> 37:26.800
回到控主键

37:26.800 --> 37:28.800
你把那个level link

37:30.800 --> 37:31.800
把它引入

37:31.800 --> 37:32.800
引入之后

37:32.800 --> 37:33.800
然后接下来的话

37:33.800 --> 37:34.800
来到这边下面

37:35.800 --> 37:36.800
哪个位置

37:36.800 --> 37:37.800
这个位置

37:37.800 --> 37:38.800
这个位置

37:38.800 --> 37:40.800
就不再是写实的一个详情

37:40.800 --> 37:41.800
而是什么

37:41.800 --> 37:43.800
而应该是level link

37:44.800 --> 37:45.800
对吧

37:45.800 --> 37:46.800
好

37:46.800 --> 37:47.800
让大家这边

37:47.800 --> 37:48.800
好

37:48.800 --> 37:49.800
然后接下来这边

37:49.800 --> 37:50.800
这个2

37:50.800 --> 37:51.800
2的话

37:51.800 --> 37:52.800
这边就有讲究了

37:52.800 --> 37:53.800
2的话

37:53.800 --> 37:55.800
你还能不能像之前那个

37:55.800 --> 37:57.800
像刚才之前一样

37:57.800 --> 37:58.800
之前我们哪个地方

37:58.800 --> 38:00.800
app 这边

38:00.800 --> 38:01.800
我们之前的话

38:01.800 --> 38:02.800
这边是不是2对呢

38:02.800 --> 38:03.800
是一个什么

38:03.800 --> 38:04.800
对呢是个制服串

38:04.800 --> 38:05.800
对不对

38:05.800 --> 38:06.800
因为它后面的话

38:06.800 --> 38:07.800
不存在什么

38:07.800 --> 38:08.800
这个辨量之类的

38:08.800 --> 38:09.800
但是你这边

38:09.800 --> 38:10.800
你在跳转

38:12.800 --> 38:13.800
这里

38:13.800 --> 38:14.800
你这边

38:14.800 --> 38:15.800
你在做这个跳转的时候

38:15.800 --> 38:17.800
你后面是需要干嘛的

38:17.800 --> 38:19.800
是不是需要拼接对应的这个

38:19.800 --> 38:20.800
id

38:21.800 --> 38:22.800
学生的id

38:22.800 --> 38:23.800
说我们这边的话

38:23.800 --> 38:25.800
让它是一个对象

38:25.800 --> 38:27.800
打对象里面

38:27.800 --> 38:29.800
然后接下来这边

38:29.800 --> 38:31.800
这边我们就是斜杆

38:31.800 --> 38:33.800
然后detail

38:33.800 --> 38:36.750
detail

38:36.750 --> 38:37.750
这不是

38:37.750 --> 38:38.750
其实不是什么对象的

38:38.750 --> 38:39.750
这边其实我们就是干嘛

38:39.750 --> 38:41.750
我们这边其实就是这个大扩号

38:41.750 --> 38:43.750
大扩号人家这边的话

38:43.750 --> 38:44.750
里面好写什么

38:44.750 --> 38:46.750
好写这个CS表达是

38:46.750 --> 38:47.750
不是什么对象

38:47.750 --> 38:49.750
好大家这边detail

38:49.750 --> 38:50.750
然后接下来

38:50.750 --> 38:52.750
这边downer

38:52.750 --> 38:54.750
item.id

38:54.750 --> 38:55.750
是不是要这样子

38:55.750 --> 38:56.750
对不对

38:56.750 --> 38:58.750
我们这边就不应该是一个制服串了

38:58.750 --> 38:59.750
而是什么

38:59.750 --> 39:01.750
而是一个这个大扩号

39:01.750 --> 39:02.750
大扩号里面

39:02.750 --> 39:03.750
方便我们写什么

39:03.750 --> 39:05.750
写这个CS表达是

39:05.750 --> 39:06.750
OK

39:06.750 --> 39:07.750
接下来

39:08.750 --> 39:10.750
这边点详情

39:10.750 --> 39:12.750
你看是不是跳过来了

39:12.750 --> 39:14.750
这边你看这个id带过来没有

39:14.750 --> 39:15.750
带过来了

39:15.750 --> 39:16.750
对不对

39:16.750 --> 39:17.750
我们返回去

39:17.750 --> 39:18.750
这边走

39:18.750 --> 39:19.750
这边这个id

39:19.750 --> 39:20.750
带过来了

39:20.750 --> 39:21.750
对吧

39:21.750 --> 39:23.750
好只要id带过来

39:23.750 --> 39:25.750
就好办了

39:25.750 --> 39:26.750
id带过来之后

39:26.750 --> 39:28.750
然后接下来回到我们

39:28.750 --> 39:30.750
这边这个detail这边

39:30.750 --> 39:32.750
detail这边让我

39:32.750 --> 39:33.750
首先第一件事情

39:33.750 --> 39:34.750
我就应该是干嘛

39:34.750 --> 39:37.750
就应该是去拿这个id

39:38.750 --> 39:39.750
对不对

39:39.750 --> 39:41.750
第一件事情就应该是去拿这个id

39:41.750 --> 39:44.750
那如何去拿这个id呢

39:44.750 --> 39:45.750
这边我们来看一下

39:45.750 --> 39:46.750
它这边的话

39:46.750 --> 39:49.750
会有一个UserPermice

39:50.750 --> 39:51.750
看了没有

39:51.750 --> 39:52.750
我来看一下

39:52.750 --> 39:54.750
TheUserPermiceHook

39:54.750 --> 39:56.750
ReturnAnObject

39:56.750 --> 39:57.750
返回一个这个对象

39:57.750 --> 39:58.750
对不对

39:58.750 --> 39:59.750
ofKeyView

39:59.750 --> 40:00.750
ValuePayers

40:00.750 --> 40:02.750
就是KeyView的这种结构

40:02.750 --> 40:03.750
然后什么呢

40:03.750 --> 40:05.750
DynamicPermice

40:05.750 --> 40:08.750
获取你的动态参数

40:09.750 --> 40:10.750
看了没有

40:10.750 --> 40:12.750
我们通过UserPermice

40:12.750 --> 40:14.750
我们就可以获取到

40:14.750 --> 40:17.750
传递过来的动态参数

40:17.750 --> 40:18.750
好来呗

40:18.750 --> 40:19.750
那我这里的话

40:19.750 --> 40:21.750
我就应该是什么

40:21.750 --> 40:25.410
我这边的话

40:25.410 --> 40:27.410
就应该首先是不获取到这个id

40:27.410 --> 40:28.410
对不对

40:28.410 --> 40:30.410
我这边的话就是import

40:31.410 --> 40:35.410
importUserPermice

40:36.410 --> 40:38.410
然后from

40:39.410 --> 40:41.410
这个rept

40:41.410 --> 40:43.410
RouterDom

40:43.410 --> 40:44.410
获取到

40:44.410 --> 40:45.410
之后然后接下来

40:45.410 --> 40:46.410
我们在这里

40:47.410 --> 40:48.410
Const

40:48.410 --> 40:49.410
一个什么呢

40:49.410 --> 40:50.410
这边我们解构

40:50.410 --> 40:51.410
把这个id

40:51.410 --> 40:52.410
我们先看一下

40:52.410 --> 40:53.410
他这边拿到的是什么吗

40:53.410 --> 40:54.410
我们这边obj

40:54.410 --> 40:57.410
等于一个UserPermice

40:57.410 --> 41:00.170
OK

41:00.170 --> 41:02.170
让我们这边打印一下

41:03.170 --> 41:05.170
打印一下obj

41:05.170 --> 41:06.170
保存

41:06.170 --> 41:07.170
保存了之后

41:07.170 --> 41:09.170
然后接下这边来看一下

41:09.170 --> 41:12.820
你看他拿到的是个对象

41:12.820 --> 41:13.820
对象里面

41:13.820 --> 41:14.820
你看这边

41:14.820 --> 41:15.820
是不是id

41:15.820 --> 41:16.820
对不对

41:16.820 --> 41:17.820
就拿到了

41:17.820 --> 41:19.820
好说说我们这边的话

41:19.820 --> 41:21.820
我们这边对他进行一个解构

41:21.820 --> 41:25.030
解构

41:25.030 --> 41:27.030
拿到这个id

41:27.030 --> 41:28.030
获取

41:29.030 --> 41:31.030
获取动态参数

41:32.030 --> 41:34.030
然后传递

41:34.030 --> 41:37.030
过来的学生id

41:37.030 --> 41:38.030
先把这个拿到

41:38.030 --> 41:39.030
好

41:39.030 --> 41:40.030
把这个拿到之后

41:40.030 --> 41:41.030
然后接下来

41:41.030 --> 41:42.030
我们紧接着就该干嘛

41:42.030 --> 41:43.030
紧接着是不是

41:43.030 --> 41:44.030
我们就应该是获取

41:44.030 --> 41:46.030
根据这个id

41:46.030 --> 41:47.030
获取该学生

41:47.030 --> 41:48.030
对应的

41:48.030 --> 41:49.030
详细信息

41:50.030 --> 41:51.030
对吧

41:51.030 --> 41:53.030
根据该id

41:53.030 --> 41:56.030
获取该学生的

41:56.030 --> 41:58.030
详细信息

41:58.030 --> 42:00.470
OK

42:00.470 --> 42:01.470
好

42:01.470 --> 42:02.470
那我们这边

42:02.470 --> 42:03.470
回到我们的这个API这边

42:03.470 --> 42:04.470
我们这边

42:04.470 --> 42:06.470
就又需要去封装一个

42:06.470 --> 42:07.470
好

42:07.470 --> 42:08.470
我们这边的话

42:08.470 --> 42:09.470
添加学生

42:09.470 --> 42:10.470
好

42:10.470 --> 42:11.470
下面一个

42:11.470 --> 42:12.470
获取先

42:12.470 --> 42:13.470
获取学生

42:13.470 --> 42:15.470
就根据id

42:15.470 --> 42:16.470
根据id

42:16.470 --> 42:18.470
获取学生

42:18.470 --> 42:21.470
详细信息

42:21.470 --> 42:22.470
好

42:22.470 --> 42:23.470
那我们这边的话

42:23.470 --> 42:25.470
就export

42:25.470 --> 42:26.470
function

42:26.470 --> 42:28.470
这边就是get

42:28.470 --> 42:30.470
这个stu

42:30.470 --> 42:33.470
然后byid

42:33.470 --> 42:37.190
API

42:37.190 --> 42:38.190
OK

42:38.190 --> 42:39.190
好

42:39.190 --> 42:40.190
这边你给我传个什么

42:40.190 --> 42:42.190
你给我传一个id

42:42.190 --> 42:43.190
对吧

42:43.190 --> 42:44.190
你给我传个id

42:44.190 --> 42:47.460
好

42:47.460 --> 42:48.460
然后接下来的话

42:48.460 --> 42:49.460
我这里

42:49.460 --> 42:50.460
我这里

42:50.460 --> 42:51.460
这里的话

42:51.460 --> 42:52.460
就return

42:52.460 --> 42:54.460
然后ur

42:54.460 --> 42:55.460
url的话

42:55.460 --> 42:56.460
这边的话

42:56.460 --> 42:57.460
应该是什么

42:57.460 --> 42:58.460
这边的话

42:58.460 --> 42:59.460
你回忆一下

42:59.460 --> 43:00.460
我们这边的话

43:00.460 --> 43:01.460
如何获取

43:01.460 --> 43:03.460
获取一条详细信息

43:03.460 --> 43:04.460
是不是这边

43:04.460 --> 43:06.460
students

43:06.460 --> 43:07.460
然后接下来

43:07.460 --> 43:08.460
这边这个e

43:08.460 --> 43:09.460
对不对

43:09.460 --> 43:10.460
你发的这个请求

43:10.460 --> 43:11.460
应该是这个样子的

43:11.460 --> 43:12.460
所以说

43:12.460 --> 43:15.030
我们这边的话

43:15.030 --> 43:16.030
就是应该是

43:16.030 --> 43:17.030
应该是这边

43:17.030 --> 43:18.030
然后鞋杠

43:18.030 --> 43:20.030
students

43:20.030 --> 43:21.030
然后接下来

43:21.030 --> 43:22.030
这边

43:22.030 --> 43:23.030
downer

43:24.030 --> 43:25.030
id

43:25.030 --> 43:26.030
对吧

43:26.030 --> 43:27.030
这样子

43:27.030 --> 43:28.030
url

43:28.030 --> 43:29.030
message

43:29.030 --> 43:30.030
等于get

43:31.030 --> 43:32.030
好

43:32.030 --> 43:33.030
然后回到这边

43:33.030 --> 43:34.030
回到这边之后

43:34.030 --> 43:35.030
然后我们这边

43:35.030 --> 43:37.030
把UserEffect

43:38.030 --> 43:40.030
UserEffect

43:40.030 --> 43:41.030
把它引进来

43:41.030 --> 43:42.030
引进来之后

43:42.030 --> 43:43.030
然后这边

43:43.030 --> 43:44.030
是不是应该是

43:44.030 --> 43:45.030
输写一个副作用

43:45.030 --> 43:46.030
对吧

43:46.030 --> 43:48.030
UserEffect

43:49.030 --> 43:50.030
它依赖于什么

43:50.030 --> 43:52.030
依赖于你的这个id

43:53.030 --> 43:54.030
是不是应该是

43:54.030 --> 43:55.030
依赖于id

43:55.030 --> 43:56.030
对不对

43:56.030 --> 43:57.030
你的id一变

43:57.030 --> 43:58.030
那我这边

43:58.030 --> 43:59.030
就要重新发请求

43:59.030 --> 44:00.030
好

44:00.030 --> 44:01.030
然后接下来的话

44:01.030 --> 44:02.030
在这边

44:02.030 --> 44:03.030
这里面干什么

44:03.030 --> 44:04.030
这里面的话

44:04.030 --> 44:05.030
你要把那个

44:05.030 --> 44:06.030
刚才写的那个

44:06.030 --> 44:07.030
把它过来

44:07.030 --> 44:08.030
这边

44:08.030 --> 44:09.030
api

44:09.030 --> 44:14.180
这边对应的s2api

44:14.180 --> 44:15.180
然后这边

44:15.180 --> 44:16.180
这边是get

44:16.180 --> 44:17.180
stu

44:17.180 --> 44:18.180
get

44:18.180 --> 44:19.180
stu

44:19.180 --> 44:21.180
然后byid

44:22.180 --> 44:23.180
ok

44:23.180 --> 44:24.180
好

44:24.180 --> 44:25.180
这边

44:25.180 --> 44:26.180
把这个id

44:26.180 --> 44:27.180
传过去

44:27.180 --> 44:28.180
传过去之后

44:28.180 --> 44:30.180
它返回的是一个Promise

44:30.180 --> 44:31.180
让它将我们这边认

44:33.180 --> 44:34.180
调认方法

44:34.180 --> 44:35.180
认方法里面

44:35.180 --> 44:36.180
传一个回掉函数

44:36.180 --> 44:37.180
好

44:37.180 --> 44:38.180
这边我就直接解构了

44:38.180 --> 44:39.180
解构

44:39.180 --> 44:40.180
拿到这个data

44:40.180 --> 44:41.180
好

44:41.180 --> 44:42.180
我们这边我们来打印一下

44:42.180 --> 44:44.180
看一下能不能拿到

44:44.180 --> 44:45.180
它的详情

44:46.180 --> 44:47.180
全部保存

44:47.180 --> 44:48.180
保存之后

44:48.180 --> 44:49.180
然后接下回到这边

44:49.180 --> 44:50.180
来看一下

44:50.180 --> 44:52.180
能不能拿到它的详情

44:54.180 --> 44:55.180
重新刷新一下

44:55.180 --> 45:00.110
ok

45:00.110 --> 45:01.110
拿到没有

45:01.110 --> 45:02.110
是不是就拿到了

45:02.110 --> 45:03.110
对不对

45:03.110 --> 45:04.110
我们回到主页

45:04.110 --> 45:05.110
回到主页

45:05.110 --> 45:06.110
比如说这边点击第1个

45:06.110 --> 45:07.110
把这个清空了

45:07.110 --> 45:09.110
点击第1个

45:09.110 --> 45:10.110
拿到没有

45:10.110 --> 45:12.110
是不是就拿到了

45:12.110 --> 45:13.110
对不对

45:13.110 --> 45:14.110
你只要这个一拿到的话

45:14.110 --> 45:15.110
后面就干嘛

45:15.110 --> 45:16.110
后面就好办了

45:16.110 --> 45:18.110
后面是不是就是渲染的问题了

45:18.110 --> 45:19.110
对不对

45:19.110 --> 45:20.110
ok

45:20.110 --> 45:21.110
好

45:21.110 --> 45:22.110
那我们这边的话

45:22.110 --> 45:23.110
我们这样子

45:23.110 --> 45:24.110
我还是先把gx

45:24.110 --> 45:25.110
先把人拿过来

45:25.110 --> 45:27.110
gx就不花时间写了

45:27.110 --> 45:29.110
把gx插拿过来

45:30.110 --> 45:32.110
然后放到这边

45:34.110 --> 45:35.110
放到这边

45:35.110 --> 45:36.110
ok

45:36.110 --> 45:37.110
放到这边之后

45:37.110 --> 45:38.110
然后接下来这边

45:38.110 --> 45:39.110
这边的话

45:39.110 --> 45:41.110
这个是一个返回按钮

45:41.110 --> 45:43.110
这边对应的是一个返回

45:43.110 --> 45:44.110
它对应的事件处理函数

45:44.110 --> 45:46.110
那我把这个写一下

45:46.110 --> 45:47.110
function

45:47.110 --> 45:49.110
然后back home

45:49.110 --> 45:50.110
ok

45:50.110 --> 45:51.110
先把它写一下

45:51.110 --> 45:52.110
让它不爆错

45:52.110 --> 45:53.110
好

45:53.110 --> 45:54.110
然后这边

45:54.110 --> 45:55.110
这边的话需要用到什么呢

45:55.110 --> 45:58.110
这边的话是这个level gate

45:58.110 --> 45:59.110
进行一个导航

45:59.110 --> 46:00.110
对不对

46:00.110 --> 46:01.110
所以你这边

46:01.110 --> 46:04.110
需要引入这个level user

46:04.110 --> 46:05.110
use

46:05.110 --> 46:06.110
level gate

46:06.110 --> 46:07.110
好

46:07.110 --> 46:08.110
然后接下来在这里

46:08.110 --> 46:09.110
这里的话

46:09.110 --> 46:10.110
const

46:10.110 --> 46:11.110
level gate

46:11.110 --> 46:14.110
等于一个use

46:14.110 --> 46:16.110
level gate

46:16.110 --> 46:17.110
对吧

46:17.110 --> 46:18.110
把这个添加上

46:18.110 --> 46:19.110
添加上之后

46:19.110 --> 46:20.110
然后这个是一个删除

46:20.110 --> 46:21.110
删除这边

46:21.110 --> 46:22.110
仍然对应

46:22.110 --> 46:23.110
一会会有一个

46:23.110 --> 46:24.110
处理函数

46:24.110 --> 46:25.110
把这个放在这里

46:25.110 --> 46:26.110
function

46:26.110 --> 46:28.110
delete user

46:28.110 --> 46:31.110
我们这个改成delete stu

46:31.110 --> 46:35.190
stu

46:35.190 --> 46:36.190
ok

46:36.190 --> 46:37.190
好

46:37.190 --> 46:38.190
然后完事之后

46:38.190 --> 46:39.190
其他的

46:39.190 --> 46:40.190
其他的我们这边需要写一个

46:40.190 --> 46:41.190
这个状态

46:41.190 --> 46:42.190
写个状态

46:42.190 --> 46:44.190
所以说我们这边

46:44.190 --> 46:45.190
use

46:45.190 --> 46:46.190
state

46:46.190 --> 46:49.500
然后我们在这边

46:49.500 --> 46:50.500
const

46:50.500 --> 46:51.500
一个

46:51.500 --> 46:53.500
stu

46:53.500 --> 46:54.500
然后set

46:54.500 --> 46:55.500
stu

46:55.500 --> 46:57.500
等于一个use

46:57.500 --> 47:00.500
state

47:00.500 --> 47:02.500
里面对应的是个对象

47:02.500 --> 47:03.500
对象的话

47:03.500 --> 47:04.500
这里面就对应的是

47:04.500 --> 47:06.500
对应的其实就是这边

47:06.500 --> 47:10.460
这些值

47:10.460 --> 47:11.460
ok

47:11.460 --> 47:13.460
对应的就是这些值

47:13.460 --> 47:14.460
好

47:14.460 --> 47:15.460
然后在这里

47:15.460 --> 47:16.460
你就全部把这个user

47:16.460 --> 47:18.460
把它改成这个stu

47:18.460 --> 47:20.460
我看一下user

47:20.460 --> 47:21.460
user

47:21.460 --> 47:22.460
user的话

47:22.460 --> 47:23.460
这个要改

47:23.460 --> 47:24.460
这个要改

47:24.460 --> 47:25.460
这个要改

47:25.460 --> 47:26.460
这些要改

47:26.460 --> 47:27.460
这个最后一个

47:27.460 --> 47:28.460
最后一个不能改

47:28.460 --> 47:29.460
对吧

47:29.460 --> 47:30.460
大致要漏眼

47:30.460 --> 47:31.460
大致漏眼

47:31.460 --> 47:32.460
漏眼之后

47:32.460 --> 47:33.460
然后在这边ctr f

47:33.460 --> 47:34.460
这边把这个

47:34.460 --> 47:36.460
全部替换成什么

47:36.460 --> 47:37.460
这边stu

47:37.460 --> 47:38.460
对吧

47:38.460 --> 47:39.460
好

47:39.460 --> 47:40.460
大家把这个把它改回来

47:40.460 --> 47:42.460
这个那是user

47:42.460 --> 47:44.460
ok

47:44.460 --> 47:45.460
好

47:45.460 --> 47:46.460
大家这边保存一下

47:46.460 --> 47:47.460
保存了之后

47:47.460 --> 47:48.460
大家这边来看一下

47:48.460 --> 47:50.460
这边

47:50.460 --> 47:51.460
出来了

47:51.460 --> 47:52.460
出来是出来了

47:52.460 --> 47:53.460
这边的话

47:53.460 --> 47:54.460
应该是那个

47:54.460 --> 47:55.460
因为现在没有值

47:55.460 --> 47:56.460
我们把这个值

47:56.460 --> 47:57.460
这边

47:57.460 --> 47:58.460
这边你拿到值之后

47:58.460 --> 47:59.460
然后先让我们这边

47:59.460 --> 48:00.460
应该干嘛

48:00.460 --> 48:01.460
set stu

48:01.460 --> 48:03.770
对不对

48:03.770 --> 48:04.770
set stu

48:04.770 --> 48:05.770
把你拿到了这个值

48:05.770 --> 48:07.770
设置给stu

48:07.770 --> 48:08.770
设置给stu

48:08.770 --> 48:09.770
因为这

48:09.770 --> 48:10.770
这边这个状态变了

48:10.770 --> 48:11.770
状态变了

48:11.770 --> 48:12.770
必然这个仕途

48:12.770 --> 48:13.770
就会重新更新

48:13.770 --> 48:14.770
ok

48:14.770 --> 48:15.770
我们这边来看一下

48:15.770 --> 48:16.770
是不是就出来了

48:17.770 --> 48:18.770
对不对

48:18.770 --> 48:19.770
就出来了

48:19.770 --> 48:20.770
ok

48:20.770 --> 48:22.770
这个的话就是关于这个

48:22.770 --> 48:23.770
详情

48:23.770 --> 48:24.770
你这边的话

48:24.770 --> 48:26.770
其实可以稍微微调一下

48:26.770 --> 48:28.770
就这个图标

48:28.770 --> 48:30.770
图标可以稍微微调一下

48:30.770 --> 48:31.770
现在它离的有点紧

48:31.770 --> 48:32.770
是吧

48:32.770 --> 48:34.770
我这边让我其实是微调了的

48:34.770 --> 48:35.770
在这边

48:35.770 --> 48:36.770
我们来微调一下

48:36.770 --> 48:38.770
这边就是点

48:39.770 --> 48:40.770
你有一个

48:42.770 --> 48:43.770
有一个这个

48:43.770 --> 48:44.770
对吧

48:44.770 --> 48:46.770
这个就是前面的这个图标

48:46.770 --> 48:48.770
然后接下来的话

48:48.770 --> 48:49.770
before

48:52.400 --> 48:53.400
before

48:53.400 --> 48:54.400
我们这边微调一下

48:54.400 --> 48:55.400
它的位置

48:55.400 --> 48:56.400
给它一个相对定位

48:56.400 --> 48:58.400
然后突破

48:58.400 --> 48:59.400
两项术

48:59.400 --> 49:01.400
然后给一个margin write

49:01.400 --> 49:03.400
margin write给个实项术左右

49:03.400 --> 49:04.400
保存

49:05.400 --> 49:07.400
是不是稍微好一些了

49:07.400 --> 49:08.400
ok

49:08.400 --> 49:11.400
这就是关于这个详情页面

49:11.400 --> 49:12.400
很简单

49:12.400 --> 49:13.400
对吧

49:13.400 --> 49:14.400
非常简单

49:14.400 --> 49:15.400
好

49:15.400 --> 49:16.400
然后接下来的话

49:16.400 --> 49:17.400
你把一些细节

49:17.400 --> 49:18.400
把它完善一下

49:18.400 --> 49:19.400
首先呢

49:19.400 --> 49:20.400
我们先来做什么

49:20.400 --> 49:21.400
先来做返回

49:21.400 --> 49:22.400
返回最简单

49:22.400 --> 49:23.400
返回怎么做

49:23.400 --> 49:24.400
返回的话

49:24.400 --> 49:25.400
这边是不是直接

49:25.400 --> 49:27.400
导航到这个

49:28.400 --> 49:29.400
就ok了

49:29.400 --> 49:30.400
对吧

49:30.400 --> 49:31.400
这边的话其实不需要

49:31.400 --> 49:32.400
这边不需要

49:32.400 --> 49:33.400
就是单独写一个

49:33.400 --> 49:34.400
实践处理函数的

49:34.400 --> 49:36.400
这边是不需要的

49:36.400 --> 49:37.400
ok

49:37.400 --> 49:38.400
这边就怎么写

49:38.400 --> 49:40.400
这边就直接这样子

49:40.400 --> 49:41.400
这样子就可以了

49:41.400 --> 49:42.400
对吧

49:42.400 --> 49:43.400
要叫你这边

49:43.400 --> 49:44.400
never get

49:44.400 --> 49:45.400
让它导航到哪里

49:45.400 --> 49:47.400
说导航到

49:47.400 --> 49:48.400
是不是就ok了

49:48.400 --> 49:49.400
对吧

49:49.400 --> 49:50.400
我们来看一下

49:50.400 --> 49:51.400
走

49:51.400 --> 49:52.400
就回来了

49:52.400 --> 49:53.400
走

49:53.400 --> 49:54.400
ok

49:55.400 --> 49:56.400
好

49:56.400 --> 49:57.400
这是关于返回按钮

49:57.400 --> 49:58.400
好

49:58.400 --> 49:59.400
然后接下来的话

49:59.400 --> 50:00.400
这个删除

50:00.400 --> 50:01.400
删除也可以做

50:01.400 --> 50:02.400
删除

50:02.400 --> 50:03.400
删除的话

50:03.400 --> 50:04.400
这边的话

50:04.400 --> 50:05.400
我们一般的话

50:05.400 --> 50:06.400
我们点击删除的时候

50:06.400 --> 50:07.400
我们需要让这个用户确认一下

50:07.400 --> 50:09.400
说说我们这边

50:09.400 --> 50:10.400
点击删除的时候

50:10.400 --> 50:11.400
这边把什么

50:11.400 --> 50:13.400
把你的id传过去

50:13.400 --> 50:14.400
传过去之后

50:14.400 --> 50:15.400
然后接下来

50:15.400 --> 50:16.400
我们这边

50:16.400 --> 50:17.400
接受一下id

50:17.400 --> 50:18.400
接受一下id之后

50:18.400 --> 50:19.400
然后接下来

50:19.400 --> 50:20.400
我们这边

50:20.400 --> 50:21.400
我们要询问一下

50:22.400 --> 50:25.400
window.confirm

50:25.400 --> 50:27.400
进行个询问

50:27.400 --> 50:29.400
就是你是否

50:29.400 --> 50:32.400
你是否要

50:32.400 --> 50:35.400
删除使用户

50:36.400 --> 50:37.400
对吧

50:37.400 --> 50:38.400
而整个这个

50:38.400 --> 50:39.400
它返回的是一个布耳直

50:39.400 --> 50:40.400
所以我们这边

50:40.400 --> 50:41.400
用一个efo

50:41.400 --> 50:42.400
做一个判断

50:42.400 --> 50:43.400
它如果是false

50:43.400 --> 50:44.400
false的话

50:44.400 --> 50:45.400
它就不进efo

50:45.400 --> 50:46.400
如果是q

50:46.400 --> 50:47.400
q的话

50:47.400 --> 50:48.400
是不是代表就是要删除

50:48.400 --> 50:49.400
它就进这边

50:49.400 --> 50:50.400
进这边的话

50:50.400 --> 50:51.400
就是又应该来

50:51.400 --> 50:53.400
输写一个这个api了

50:53.400 --> 50:54.400
对吧

50:54.400 --> 50:56.400
我们回到这边

50:56.400 --> 50:58.400
回到这边

50:58.400 --> 50:59.400
我们这边来输写一个

50:59.400 --> 51:00.400
删除

51:00.400 --> 51:01.400
删除的话

51:01.400 --> 51:02.400
你这边你要去看一下

51:02.400 --> 51:04.400
你要去那个

51:04.400 --> 51:06.400
这个json

51:06.400 --> 51:08.400
我们到那个笔记呢

51:08.400 --> 51:09.400
我们的笔记

51:09.400 --> 51:10.400
好像就一直没有写了

51:10.400 --> 51:11.400
是吧

51:11.400 --> 51:13.400
我看一下笔记

51:13.400 --> 51:14.400
笔记咱们就写了

51:14.400 --> 51:16.400
一个快速搭建服务器

51:16.400 --> 51:18.400
快速搭建整个管理系统

51:18.400 --> 51:19.400
其他的话就没写了

51:20.400 --> 51:21.400
其他这样子

51:21.400 --> 51:22.400
我把这个讲完之后

51:22.400 --> 51:23.400
然后我把一些重点

51:23.400 --> 51:24.400
我在这个笔记里面

51:24.400 --> 51:25.400
我再给他记录一下

51:26.400 --> 51:28.400
我把那个打开

51:28.400 --> 51:30.400
你看它这个删除

51:30.400 --> 51:32.400
这个json slower的话

51:32.400 --> 51:33.400
基本上的

51:33.400 --> 51:34.400
基本上的真相改查

51:34.400 --> 51:35.400
是可以做的

51:36.400 --> 51:37.400
删除

51:37.400 --> 51:38.400
你看它连这个排序

51:38.400 --> 51:39.400
这些都有可能

51:39.400 --> 51:40.400
排序

51:40.400 --> 51:41.400
排序

51:42.400 --> 51:44.400
然后删除

51:44.400 --> 51:45.400
删除的话

51:45.400 --> 51:47.400
它也是一个delete请求

51:47.400 --> 51:48.400
也是一个delete

51:50.400 --> 51:51.400
我这边的话

51:51.400 --> 51:52.400
我找一下

51:53.400 --> 51:54.400
delete

51:54.400 --> 51:55.400
它应该是记录了的

51:56.400 --> 51:57.400
看一下

51:58.400 --> 51:59.400
应该是

51:59.400 --> 52:00.400
好像看到了

52:01.400 --> 52:02.400
这个skate

52:03.400 --> 52:04.400
不是这

52:04.400 --> 52:05.400
原来是skate

52:06.400 --> 52:07.400
然后

52:07.400 --> 52:08.400
这边是查

52:08.400 --> 52:09.400
这里看到没有

52:09.400 --> 52:10.400
删除

52:10.400 --> 52:11.400
删除

52:11.400 --> 52:12.400
通过什么

52:12.400 --> 52:13.400
通过delete

52:13.400 --> 52:14.400
大家这边的话

52:14.400 --> 52:15.400
把id传过去就可以了

52:15.400 --> 52:16.400
OK

52:16.400 --> 52:17.400
那这边基本其实

52:17.400 --> 52:18.400
就是一样的

52:18.400 --> 52:19.400
对

52:19.400 --> 52:20.400
所以我们这边就是

52:20.400 --> 52:23.930
删除

52:23.930 --> 52:25.930
根据id

52:25.930 --> 52:26.930
删除

52:26.930 --> 52:27.930
学生

52:27.930 --> 52:28.930
对吧

52:28.930 --> 52:29.930
这边

52:29.930 --> 52:30.930
export

52:30.930 --> 52:31.930
function

52:31.930 --> 52:32.930
这边我们就是

52:33.930 --> 52:34.930
delete

52:34.930 --> 52:36.930
这个stu

52:36.930 --> 52:37.930
by id

52:37.930 --> 52:39.930
名字不要怕长

52:39.930 --> 52:40.930
不要怕长

52:40.930 --> 52:41.930
你这边到时候

52:41.930 --> 52:42.930
你维护的时候

52:42.930 --> 52:43.930
其实你名字

52:43.930 --> 52:44.930
你这边写的

52:44.930 --> 52:45.930
越详细

52:45.930 --> 52:46.930
到时候维护的时候

52:46.930 --> 52:47.930
越方便

52:47.930 --> 52:49.930
不然你过段时间之后

52:49.930 --> 52:50.930
你自己都不知道

52:50.930 --> 52:51.930
这个函数字干嘛的了

52:51.930 --> 52:52.930
说我为什么

52:52.930 --> 52:53.930
我这边要把这个

52:53.930 --> 52:54.930
API后续加上

52:54.930 --> 52:56.930
我这边要加一个by id

52:56.930 --> 52:57.930
就这个原因

52:57.930 --> 52:59.930
这些都是吃过亏的

52:59.930 --> 53:00.930
好

53:00.930 --> 53:01.930
然后接下来的话

53:01.930 --> 53:02.930
这边return

53:02.930 --> 53:03.930
return

53:03.930 --> 53:05.930
然后这边request

53:05.930 --> 53:07.930
这边是不是就一样的

53:07.930 --> 53:09.930
就直接复制这一块

53:09.930 --> 53:11.930
复制这一块

53:11.930 --> 53:12.930
拿过来

53:12.930 --> 53:13.930
拿过来指不过

53:13.930 --> 53:15.930
你的这个message

53:16.930 --> 53:17.930
message

53:17.930 --> 53:18.930
对应是什么

53:18.930 --> 53:19.930
delete

53:19.930 --> 53:21.930
对应的是delete

53:21.930 --> 53:22.930
对吧

53:22.930 --> 53:23.930
ok

53:23.930 --> 53:24.930
好

53:24.930 --> 53:25.930
然后接下来

53:25.930 --> 53:27.930
回到我们的这个detail

53:27.930 --> 53:28.930
回到这边

53:28.930 --> 53:29.930
这边的话

53:29.930 --> 53:30.930
就把刚才那个API

53:30.930 --> 53:31.930
把它引进来

53:32.930 --> 53:33.930
这里

53:33.930 --> 53:35.930
这里的话就是delete

53:36.930 --> 53:37.930
stu

53:37.930 --> 53:39.930
by id

53:39.930 --> 53:40.930
API

53:40.930 --> 53:41.930
把它引进来

53:41.930 --> 53:42.930
引进来之后

53:42.930 --> 53:44.930
然后接下来在这个位置

53:44.930 --> 53:45.930
这个位置是不是调用

53:45.930 --> 53:46.930
对吧

53:46.930 --> 53:47.930
把id

53:47.930 --> 53:48.930
把它传进去

53:48.930 --> 53:49.930
好

53:49.930 --> 53:50.930
传进去之后

53:50.930 --> 53:51.930
然后接下来

53:51.930 --> 53:52.930
它这边仍然是返回的是一个什么

53:52.930 --> 53:53.930
是返回的是一个promise

53:54.930 --> 53:55.930
说你这边

53:55.930 --> 53:56.930
它就是点

53:57.930 --> 53:58.930
认

53:58.930 --> 53:59.930
点认

53:59.930 --> 54:00.930
然后这边

54:00.930 --> 54:02.930
一个回掉函数

54:02.930 --> 54:03.930
回掉函数

54:03.930 --> 54:04.930
然后在这边

54:04.930 --> 54:05.930
never get

54:06.930 --> 54:07.930
跳转到什么

54:07.930 --> 54:08.930
就跳转到这个home

54:09.930 --> 54:10.930
对吧

54:10.930 --> 54:11.930
好

54:11.930 --> 54:12.930
然后在这边

54:12.930 --> 54:13.930
我们传递一个信息

54:13.930 --> 54:14.930
就和刚才是一样的

54:14.930 --> 54:15.930
state

54:15.930 --> 54:16.930
这边

54:16.930 --> 54:17.930
传递

54:17.930 --> 54:18.930
nerd

54:18.930 --> 54:19.930
对应

54:19.930 --> 54:20.930
用或

54:20.930 --> 54:21.930
删除

54:21.930 --> 54:22.930
成功

54:22.930 --> 54:23.930
对吧

54:23.930 --> 54:24.930
然后在这边这个type

54:24.930 --> 54:25.930
type的话

54:25.930 --> 54:26.930
你看着给就可以了

54:26.930 --> 54:28.930
反正那个blockstrap里面

54:28.930 --> 54:29.930
就那么几种type

54:29.930 --> 54:31.930
然后这边给的是info

54:31.930 --> 54:32.930
保存

54:32.930 --> 54:33.930
保存之后

54:33.930 --> 54:34.930
然后在这边来看一下

54:34.930 --> 54:35.930
好不好使

54:35.930 --> 54:36.930
好

54:36.930 --> 54:37.930
比如说我这边点击删除

54:37.930 --> 54:39.930
你是否要删除此用户

54:39.930 --> 54:41.930
应该是此学生是吧

54:41.930 --> 54:43.930
是学生

54:43.930 --> 54:44.930
学生

54:45.930 --> 54:46.930
学生删除成功

54:48.930 --> 54:50.930
是否要删除此学生

54:50.930 --> 54:52.930
大家点击确定

54:52.930 --> 54:53.930
这边是吧

54:53.930 --> 54:55.930
学生删除成功

54:55.930 --> 54:56.930
对吧

54:56.930 --> 54:57.930
把这个关了

54:57.930 --> 54:58.930
你看我们这边

54:58.930 --> 55:00.930
我们的这个

55:00.930 --> 55:01.930
详情

55:01.930 --> 55:02.930
大家这边的话

55:02.930 --> 55:03.930
这个删除

55:03.930 --> 55:04.930
也做了

55:04.930 --> 55:05.930
就还剩一个什么

55:05.930 --> 55:07.930
说还剩一个修改了

55:07.930 --> 55:10.930
这电脑莫名其妙又想起来了

55:10.930 --> 55:12.930
我这边也没有做什么操作

55:13.930 --> 55:15.930
莫名其妙这个风扇又钻起来了

55:15.930 --> 55:16.930
好

55:16.930 --> 55:17.930
接下来的话

55:17.930 --> 55:18.930
最后一个是修改

55:18.930 --> 55:20.930
最后一个是修改

55:20.930 --> 55:21.930
修改的话

55:21.930 --> 55:22.930
我刚才说过

55:22.930 --> 55:23.930
修改和新增

55:23.930 --> 55:25.930
我们用的是什么

55:25.930 --> 55:27.930
我们用的是同一个组件

55:27.930 --> 55:28.930
对吧

55:28.930 --> 55:29.930
用的都是end

55:29.930 --> 55:30.930
or edit

55:30.930 --> 55:31.930
因为它那个表单长一样的

55:31.930 --> 55:32.930
你没有必要就是

55:32.930 --> 55:35.930
再去创建一个这个组件

55:35.930 --> 55:37.930
用同一个就可以了

55:37.930 --> 55:38.930
对吧

55:38.930 --> 55:39.930
好

55:39.930 --> 55:40.930
说说我们这边的话

55:40.930 --> 55:42.930
看一下修改

55:42.930 --> 55:44.930
修改这边的话

55:44.930 --> 55:45.930
要做的事情

55:45.930 --> 55:47.930
其实就是一个跳转

55:47.930 --> 55:48.930
edit

55:48.930 --> 55:50.930
跳转到哪呢

55:50.930 --> 55:51.930
跳转到

55:51.930 --> 55:53.930
你这边对应的

55:53.930 --> 55:54.930
edit

55:54.930 --> 55:56.930
edit对应的也是那个组件

55:56.930 --> 55:58.930
我们这边需要配置一下

55:58.930 --> 56:00.930
来到你这边

56:00.930 --> 56:02.930
来到我们的app

56:02.930 --> 56:04.930
这边需要配置一下

56:04.930 --> 56:05.930
这边的话

56:05.930 --> 56:06.930
edit

56:06.930 --> 56:10.560
edit

56:10.560 --> 56:11.560
好

56:11.560 --> 56:12.560
edit

56:12.560 --> 56:14.560
然后对应的也是什么

56:14.560 --> 56:16.560
也是这个组件

56:16.560 --> 56:17.560
对吧

56:17.560 --> 56:19.560
end or edit

56:19.560 --> 56:21.560
对应的也是这个组件

56:21.560 --> 56:22.560
OK

56:22.560 --> 56:23.560
好了

56:23.560 --> 56:24.560
接下来重点就来到哪里了

56:24.560 --> 56:25.560
就来到这边了

56:25.560 --> 56:27.560
我这这这的话都已经写了

56:27.560 --> 56:28.560
这边你看这边

56:28.560 --> 56:29.560
跳转edit

56:29.560 --> 56:31.560
然后把这个id

56:31.560 --> 56:32.560
带过去

56:32.560 --> 56:33.560
对不对

56:33.560 --> 56:34.560
这个就不管它了

56:34.560 --> 56:35.560
好

56:35.560 --> 56:36.560
然后重点就来到这边了

56:36.560 --> 56:37.560
这边的话

56:37.560 --> 56:39.560
我们刚才是不是做的是什么

56:39.560 --> 56:41.560
我刚才做的是更新操作

56:41.560 --> 56:43.560
那我如何

56:43.560 --> 56:45.560
既更新又什么呢

56:45.560 --> 56:47.560
又这个修改

56:47.560 --> 56:49.560
其实的话是一样的

56:49.560 --> 56:50.560
其实是一样的

56:50.560 --> 56:51.560
我这边的话

56:51.560 --> 56:52.560
我一进来我就干嘛呢

56:52.560 --> 56:54.560
我这边通过这个

56:54.560 --> 56:58.190
use the promise

56:58.190 --> 57:00.190
use the promise

57:00.190 --> 57:01.190
那干嘛

57:01.190 --> 57:03.190
是不是获取我的动态参数

57:03.190 --> 57:04.190
对吧

57:04.190 --> 57:05.190
const

57:05.190 --> 57:07.190
一个这个id

57:07.190 --> 57:09.700
const

57:09.700 --> 57:11.700
这边解构id

57:11.700 --> 57:12.700
等于个什么呢

57:12.700 --> 57:14.700
等于个use the promise

57:14.700 --> 57:17.970
ok

57:17.970 --> 57:18.970
那这边这个id

57:18.970 --> 57:20.970
就会存在两种情况

57:20.970 --> 57:21.970
哪两种情况

57:21.970 --> 57:23.970
你有可能是新增

57:23.970 --> 57:24.970
过来的

57:24.970 --> 57:25.970
新增过来的话

57:25.970 --> 57:26.970
你这边有没有id

57:26.970 --> 57:27.970
是不是就没有

57:27.970 --> 57:28.970
对吧

57:28.970 --> 57:30.970
有可能是什么修改过来的

57:30.970 --> 57:31.970
修改过来这边是不是就有id

57:31.970 --> 57:32.970
对吧

57:32.970 --> 57:33.970
好来我们这边

57:33.970 --> 57:34.970
我们来看一下

57:34.970 --> 57:35.970
是不是这样子的

57:36.970 --> 57:37.970
好我们这边返回

57:37.970 --> 57:38.970
返回之后

57:38.970 --> 57:40.970
大家我们这边点击天家用户

57:40.970 --> 57:41.970
天家用户的话

57:41.970 --> 57:42.970
你看你这边

57:42.970 --> 57:43.970
你的这个id

57:43.970 --> 57:45.970
是不是就是一个undefined

57:45.970 --> 57:46.970
对不对

57:46.970 --> 57:47.970
没有这个字

57:47.970 --> 57:48.970
我们回到主页

57:48.970 --> 57:49.970
我们这边点击这个详情

57:49.970 --> 57:51.970
点击详情之后

57:51.970 --> 57:53.970
点击修改

57:53.970 --> 57:54.970
点击修改的话

57:54.970 --> 57:55.970
你这边是不是就有id

57:55.970 --> 57:56.970
对不对

57:56.970 --> 57:58.970
这边的话就会有个id传过来

57:58.970 --> 58:00.970
有了这个东西之后

58:00.970 --> 58:01.970
是不是就好办了

58:01.970 --> 58:02.970
对不对

58:02.970 --> 58:03.970
那后期的话

58:03.970 --> 58:05.970
我们就根据是否有id

58:05.970 --> 58:07.970
后期

58:08.970 --> 58:10.970
我们就

58:10.970 --> 58:11.970
根据

58:12.970 --> 58:13.970
根据什么呢

58:13.970 --> 58:16.970
根据是否有id

58:16.970 --> 58:19.970
来决定

58:19.970 --> 58:24.970
是天家还是修改

58:24.970 --> 58:25.970
对吧

58:25.970 --> 58:27.970
你究竟是天家还是修改

58:27.970 --> 58:28.970
我通过你这边

58:28.970 --> 58:30.970
是否有这个id

58:30.970 --> 58:31.970
来做

58:31.970 --> 58:33.970
好了你如果有这个id的话

58:33.970 --> 58:34.970
那我这边

58:34.970 --> 58:37.970
是不是应该是执行一个副作用

58:37.970 --> 58:39.970
use effect

58:39.970 --> 58:43.410
use effect

58:43.410 --> 58:44.410
根据什么

58:44.410 --> 58:46.410
根据你的这个id

58:47.410 --> 58:48.410
use effect

58:48.410 --> 58:49.410
这边的话

58:49.410 --> 58:50.410
说没引入

58:50.410 --> 58:52.410
这边要引入一下

58:52.410 --> 58:53.410
OK

58:53.410 --> 58:54.410
根据你这个id

58:54.410 --> 58:55.410
那我这边要做什么

58:55.410 --> 58:58.410
就如果有id的话

58:58.410 --> 59:01.410
如果有id

59:01.410 --> 59:04.410
我们需要根据

59:04.410 --> 59:05.410
该id

59:05.410 --> 59:08.410
获取学生的

59:08.410 --> 59:10.410
什么详细信息

59:10.410 --> 59:11.410
对不对

59:11.410 --> 59:12.410
并且干嘛

59:12.410 --> 59:16.410
并且回填到表单里面

59:16.410 --> 59:19.410
表单里面

59:19.410 --> 59:21.410
你看我们以前是这样做的

59:21.410 --> 59:22.410
对吧

59:22.410 --> 59:23.410
好那我们这边

59:23.410 --> 59:25.410
我们要获取

59:25.410 --> 59:29.410
那这边就e否id

59:29.410 --> 59:31.410
如果有id

59:31.410 --> 59:32.410
如果有id的话

59:32.410 --> 59:33.410
我们这边的话

59:33.410 --> 59:35.410
我们就来获取一下

59:35.410 --> 59:36.410
获取到

59:36.410 --> 59:38.410
那你这边要引入一个api

59:38.410 --> 59:40.410
import

59:40.410 --> 59:43.410
这边是get stu

59:43.410 --> 59:44.410
by id

59:44.410 --> 59:45.410
对吧

59:45.410 --> 59:46.410
这是之前写好了的

59:46.410 --> 59:48.410
之前写详形的时候写的

59:49.410 --> 59:50.410
OK

59:50.410 --> 59:51.410
好这边

59:51.410 --> 59:53.910
这边的话

59:53.910 --> 59:55.910
然后把什么传过去

59:55.910 --> 59:57.910
是把id传过去

59:57.910 --> 59:58.910
id传过去之后

59:58.910 --> 01:00:00.910
然后下这边点认

01:00:00.910 --> 01:00:05.700
好这边解构出来这个data

01:00:05.700 --> 01:00:07.700
解构出来data之后

01:00:07.700 --> 01:00:08.700
然后给谁

01:00:08.700 --> 01:00:09.700
是不是给这个stu

01:00:09.700 --> 01:00:11.700
因为我们现在的我们这个状态

01:00:11.700 --> 01:00:13.700
状态和你的这个

01:00:13.700 --> 01:00:15.700
表单是绑在一起的

01:00:15.700 --> 01:00:16.700
对不对

01:00:16.700 --> 01:00:18.700
我们这边就只需要set

01:00:18.700 --> 01:00:19.700
stu

01:00:19.700 --> 01:00:21.700
然后加这边这个data

01:00:21.700 --> 01:00:22.700
只需要这么做

01:00:22.700 --> 01:00:24.700
它就回填了

01:00:24.700 --> 01:00:26.700
就已经就回填了

01:00:26.700 --> 01:00:27.700
我们这边我们来看一下

01:00:27.700 --> 01:00:29.700
是不是

01:00:29.700 --> 01:00:30.700
你看这边

01:00:30.700 --> 01:00:33.700
这边是不是就已经就有了

01:00:33.700 --> 01:00:34.700
看不看

01:00:34.700 --> 01:00:35.700
就已经有了

01:00:35.700 --> 01:00:36.700
我们这边来看一下

01:00:36.700 --> 01:00:37.700
主页

01:00:37.700 --> 01:00:39.700
如果是添加用户

01:00:39.700 --> 01:00:40.700
添加用户这边是空的

01:00:40.700 --> 01:00:41.700
对吧

01:00:41.700 --> 01:00:42.700
然后这样我们这边

01:00:42.700 --> 01:00:44.700
如果是比如说点击这个

01:00:44.700 --> 01:00:45.700
点击修改

01:00:45.700 --> 01:00:46.700
这边

01:00:46.700 --> 01:00:48.700
是不是东西就回填进去了

01:00:48.700 --> 01:00:49.700
明白没有

01:00:49.700 --> 01:00:51.700
你其实可以慢慢慢慢就体会到

01:00:51.700 --> 01:00:52.700
这个受控组建

01:00:52.700 --> 01:00:53.700
它的好处了

01:00:53.700 --> 01:00:55.700
我们只需要关注什么

01:00:55.700 --> 01:00:56.700
只需要去操纵它

01:00:56.700 --> 01:00:58.700
它和我们的这个ges

01:00:58.700 --> 01:00:59.700
是绑定在一起的

01:00:59.700 --> 01:01:00.700
对不对

01:01:00.700 --> 01:01:02.700
它的值是多少

01:01:02.700 --> 01:01:04.700
那最终的话你那个ges

01:01:04.700 --> 01:01:06.700
渲染出来就是多少

01:01:06.700 --> 01:01:07.700
对不对

01:01:07.700 --> 01:01:08.700
ok

01:01:08.700 --> 01:01:09.700
好然后接下来

01:01:09.700 --> 01:01:11.700
那咱们做一些细节

01:01:11.700 --> 01:01:12.700
上面的修改

01:01:12.700 --> 01:01:13.700
你这边的话

01:01:13.700 --> 01:01:14.700
你看现在

01:01:15.700 --> 01:01:17.700
这边的话你先在这里

01:01:17.700 --> 01:01:18.700
这里的话

01:01:18.700 --> 01:01:19.700
这边是不是仍然是添加用户

01:01:19.700 --> 01:01:20.700
对不对

01:01:20.700 --> 01:01:21.700
确认添加

01:01:21.700 --> 01:01:22.700
你这样子的话

01:01:22.700 --> 01:01:24.700
会让这个用户非常迷惑

01:01:24.700 --> 01:01:25.700
所以我们在这边的话

01:01:25.700 --> 01:01:27.700
我们做一个判断

01:01:27.700 --> 01:01:28.700
判断

01:01:28.700 --> 01:01:29.700
判断什么呢

01:01:29.700 --> 01:01:31.700
判断你这个id

01:01:31.700 --> 01:01:35.780
是否有值

01:01:35.780 --> 01:01:36.780
判断你这个id

01:01:36.780 --> 01:01:37.780
是否有值

01:01:37.780 --> 01:01:38.780
如果有值

01:01:38.780 --> 01:01:40.780
那你就是修改

01:01:40.780 --> 01:01:42.780
学生

01:01:42.780 --> 01:01:44.780
否则的话

01:01:44.780 --> 01:01:45.780
你这边就是什么呢

01:01:45.780 --> 01:01:48.780
就是添加学生

01:01:48.780 --> 01:01:49.780
ok

01:01:49.780 --> 01:01:50.780
把这个标题改一下

01:01:50.780 --> 01:01:51.780
那这边来看一下

01:01:51.780 --> 01:01:53.780
你看这边是不是就修改学生了

01:01:53.780 --> 01:01:54.780
包括下面也是

01:01:54.780 --> 01:01:56.780
下面这个按钮也是

01:01:56.780 --> 01:01:59.090
按钮

01:01:59.090 --> 01:02:00.090
按钮是不是也是一样的

01:02:00.090 --> 01:02:01.090
直接复制过来

01:02:03.090 --> 01:02:05.090
看这个id

01:02:06.090 --> 01:02:07.090
在这边

01:02:08.090 --> 01:02:10.090
如果有id就是修改学生

01:02:10.090 --> 01:02:12.090
那否则就是添加学生

01:02:12.090 --> 01:02:13.090
这边就这样子

01:02:13.090 --> 01:02:14.090
就确认修改

01:02:15.090 --> 01:02:18.090
确认修改

01:02:18.090 --> 01:02:22.090
这边就是确认添加

01:02:24.090 --> 01:02:25.090
保存

01:02:26.090 --> 01:02:27.090
ok

01:02:27.090 --> 01:02:28.090
这边是不是就搞定了

01:02:28.090 --> 01:02:29.090
对不对

01:02:29.090 --> 01:02:30.090
搞定了之后

01:02:30.090 --> 01:02:31.090
之后的步骤

01:02:31.090 --> 01:02:32.090
你是一样的

01:02:32.090 --> 01:02:33.090
之后的话

01:02:33.090 --> 01:02:34.090
你就可以在这边

01:02:34.090 --> 01:02:35.090
你来输入

01:02:35.090 --> 01:02:36.090
输入之后

01:02:36.090 --> 01:02:37.090
关键点是在哪里呢

01:02:37.090 --> 01:02:39.090
关键点是在提交的时候

01:02:41.590 --> 01:02:42.590
这里

01:02:42.590 --> 01:02:43.590
就这边

01:02:43.590 --> 01:02:44.590
整个这边

01:02:44.590 --> 01:02:45.590
之前的话

01:02:45.590 --> 01:02:47.590
我们是不是就是直接干嘛呀

01:02:47.590 --> 01:02:49.590
直接是不是就把你这边

01:02:49.590 --> 01:02:50.590
这个状态的这个值

01:02:50.590 --> 01:02:51.590
提交到后台

01:02:51.590 --> 01:02:53.590
是不是做新增操作

01:02:53.590 --> 01:02:54.590
对不对

01:02:54.590 --> 01:02:56.590
但你现在你的这个状态

01:02:56.590 --> 01:02:57.590
有可能是什么

01:02:57.590 --> 01:02:58.590
有可能是修改

01:02:58.590 --> 01:02:59.590
有可能是新增

01:02:59.590 --> 01:03:00.590
那这边的话

01:03:00.590 --> 01:03:01.590
就需要干嘛呀

01:03:01.590 --> 01:03:02.590
这边是不是仍然是

01:03:02.590 --> 01:03:04.590
需要做一个判断

01:03:05.590 --> 01:03:06.590
对不对

01:03:06.590 --> 01:03:07.590
所以这边需要做一个

01:03:07.590 --> 01:03:08.590
判断

01:03:08.590 --> 01:03:09.590
id

01:03:10.590 --> 01:03:11.590
那就是什么

01:03:11.590 --> 01:03:12.590
那就是编辑

01:03:13.590 --> 01:03:15.590
否则的话

01:03:16.590 --> 01:03:17.590
那就是新增

01:03:17.590 --> 01:03:18.590
那新增的话

01:03:18.590 --> 01:03:19.590
就把这一块

01:03:20.590 --> 01:03:21.590
拿过去

01:03:21.590 --> 01:03:22.590
对吧

01:03:22.590 --> 01:03:23.590
格式化一下

01:03:23.590 --> 01:03:24.590
如果是编辑

01:03:24.590 --> 01:03:25.590
编辑的话

01:03:25.590 --> 01:03:26.590
我们这边又需要

01:03:26.590 --> 01:03:28.590
新增一个这个API

01:03:29.590 --> 01:03:32.800
我们来到这边

01:03:32.800 --> 01:03:33.800
根据

01:03:36.560 --> 01:03:37.560
根据这个id

01:03:38.560 --> 01:03:39.560
编辑

01:03:40.560 --> 01:03:41.560
学生

01:03:41.560 --> 01:03:42.560
ok

01:03:42.560 --> 01:03:44.560
这边export

01:03:44.560 --> 01:03:45.560
function

01:03:45.560 --> 01:03:46.560
这边我们就叫做

01:03:46.560 --> 01:03:47.560
edit

01:03:48.560 --> 01:03:49.560
edit

01:03:49.560 --> 01:03:50.560
stu

01:03:50.560 --> 01:03:51.560
by id

01:03:52.560 --> 01:03:53.560
a

01:03:53.560 --> 01:03:54.560
api

01:03:56.560 --> 01:03:57.560
那这边

01:03:57.560 --> 01:03:58.560
接受一个id

01:03:58.560 --> 01:03:59.560
接受一个id

01:03:59.560 --> 01:04:00.560
然后加这边return

01:04:00.560 --> 01:04:01.560
request

01:04:02.560 --> 01:04:03.560
这边这个

01:04:03.560 --> 01:04:04.560
url

01:04:04.560 --> 01:04:05.560
url这边是一样的

01:04:06.560 --> 01:04:07.560
这边都是一样的

01:04:07.560 --> 01:04:08.560
一样的

01:04:08.560 --> 01:04:09.560
然后加这边这个方式

01:04:09.560 --> 01:04:10.560
方式的话

01:04:10.560 --> 01:04:11.560
是patch

01:04:12.560 --> 01:04:13.560
patch

01:04:13.560 --> 01:04:14.560
ok

01:04:14.560 --> 01:04:15.560
好这边

01:04:15.560 --> 01:04:16.560
除了id

01:04:16.560 --> 01:04:17.560
这边还需要接受一个什么

01:04:17.560 --> 01:04:18.560
还需要接受一个data

01:04:18.560 --> 01:04:19.560
这是你要改吗

01:04:19.560 --> 01:04:20.560
改的话

01:04:20.560 --> 01:04:21.560
是不是又有这个

01:04:21.560 --> 01:04:22.560
对应的

01:04:22.560 --> 01:04:23.560
你要改成什么样的数据

01:04:23.560 --> 01:04:24.560
对吧

01:04:24.560 --> 01:04:25.560
这边

01:04:25.560 --> 01:04:26.560
对应有这个data

01:04:26.560 --> 01:04:27.560
ok

01:04:27.560 --> 01:04:28.560
这是编辑学生

01:04:29.560 --> 01:04:30.560
好

01:04:30.560 --> 01:04:31.560
然后接下来

01:04:31.560 --> 01:04:32.560
回到我们的

01:04:32.560 --> 01:04:33.560
回到我们的

01:04:33.560 --> 01:04:34.560
我都有点讲类了

01:04:34.560 --> 01:04:35.560
好喝口水

01:04:44.080 --> 01:04:45.080
好

01:04:45.080 --> 01:04:46.080
然后回到这边

01:04:46.080 --> 01:04:47.080
这边的话

01:04:47.080 --> 01:04:48.080
刚才那个api

01:04:48.080 --> 01:04:49.080
是不是把它引入

01:04:50.080 --> 01:04:51.080
这边的这个edit

01:04:51.080 --> 01:04:52.080
edit

01:04:52.080 --> 01:04:53.080
stu

01:04:53.080 --> 01:04:54.080
by id

01:04:54.080 --> 01:04:55.080
对吧

01:04:55.080 --> 01:04:56.080
拿过来

01:04:56.080 --> 01:04:57.080
拿过来之后

01:04:57.080 --> 01:04:58.080
然后接下来

01:04:58.080 --> 01:04:59.080
这边来呗

01:04:59.080 --> 01:05:00.080
是不是就一样的

01:05:00.080 --> 01:05:01.080
对吧

01:05:01.080 --> 01:05:02.080
只要你这边的话

01:05:02.080 --> 01:05:03.080
你注意

01:05:03.080 --> 01:05:04.080
你这边的话

01:05:04.080 --> 01:05:05.080
你要传两个参数

01:05:05.080 --> 01:05:06.080
因为我们刚才那个

01:05:06.080 --> 01:05:07.080
就是封装的时候

01:05:07.080 --> 01:05:08.080
这边是不是都是两个参数

01:05:08.080 --> 01:05:09.080
对吧

01:05:09.080 --> 01:05:10.080
所以你这边是两个参数

01:05:10.080 --> 01:05:11.080
一个是什么

01:05:11.080 --> 01:05:13.080
一个是你要修改的这个id

01:05:16.840 --> 01:05:17.840
这里

01:05:17.840 --> 01:05:18.840
首先

01:05:18.840 --> 01:05:19.840
第一个是你的id

01:05:19.840 --> 01:05:20.840
第二个是什么

01:05:20.840 --> 01:05:21.840
第二个是不是就是你的

01:05:21.840 --> 01:05:22.840
这个新的数据

01:05:22.840 --> 01:05:23.840
新的数据

01:05:23.840 --> 01:05:24.840
还是放在哪的

01:05:24.840 --> 01:05:26.840
还是放在这个状态里面的

01:05:26.840 --> 01:05:27.840
对吧

01:05:27.840 --> 01:05:28.840
始终是这个状态

01:05:28.840 --> 01:05:30.840
记录了你这个最新的信息

01:05:30.840 --> 01:05:31.840
ok

01:05:31.840 --> 01:05:32.840
好

01:05:32.840 --> 01:05:33.840
然后接下来

01:05:33.840 --> 01:05:34.840
这边点证

01:05:34.840 --> 01:05:36.840
接收一个回调函数

01:05:36.840 --> 01:05:37.840
好

01:05:37.840 --> 01:05:38.840
然后接下来

01:05:38.840 --> 01:05:39.840
这边

01:05:39.840 --> 01:05:40.840
这边不需要介绍

01:05:40.840 --> 01:05:41.840
什么参数

01:05:41.840 --> 01:05:42.840
对吧

01:05:42.840 --> 01:05:43.840
好

01:05:43.840 --> 01:05:44.840
然后直接来到这里

01:05:44.840 --> 01:05:45.840
来到这边的话

01:05:45.840 --> 01:05:46.840
HON

01:05:46.840 --> 01:05:47.840
其实就和这是一样的

01:05:48.840 --> 01:05:49.840
直接拿过来

01:05:49.840 --> 01:05:50.840
HON

01:05:50.840 --> 01:05:51.840
这边就是应该是什么

01:05:51.840 --> 01:05:54.840
是不是学生修改成功

01:05:54.840 --> 01:05:56.840
学生修改成功

01:05:56.840 --> 01:05:58.840
这边应该是学生

01:05:58.840 --> 01:06:00.840
学生添加成功

01:06:00.840 --> 01:06:01.840
对不对

01:06:01.840 --> 01:06:03.840
这边可以稍微改一下

01:06:03.840 --> 01:06:05.840
这个info

01:06:05.840 --> 01:06:06.840
稍微有点区别

01:06:06.840 --> 01:06:07.840
ok

01:06:07.840 --> 01:06:08.840
好

01:06:08.840 --> 01:06:09.840
来试一下

01:06:09.840 --> 01:06:10.840
来试一下好不好

01:06:11.840 --> 01:06:13.840
addit

01:06:13.840 --> 01:06:14.840
没有

01:06:15.840 --> 01:06:17.840
刷新一下

01:06:17.840 --> 01:06:19.840
这边我们看一下

01:06:19.840 --> 01:06:21.840
没有导出

01:06:21.840 --> 01:06:23.840
addit stu by id

01:06:23.840 --> 01:06:24.840
这边的话

01:06:24.840 --> 01:06:28.410
我们来检查一下

01:06:28.410 --> 01:06:29.410
stu

01:06:29.410 --> 01:06:30.410
哦

01:06:30.410 --> 01:06:31.410
这边

01:06:31.410 --> 01:06:33.410
by id

01:06:33.410 --> 01:06:34.410
好

01:06:34.410 --> 01:06:35.410
可以了

01:06:35.410 --> 01:06:36.410
好

01:06:36.410 --> 01:06:37.410
来我们这边来看一下

01:06:37.410 --> 01:06:39.410
这边修改学生

01:06:39.410 --> 01:06:41.410
把学生的名字改成中文的

01:06:41.410 --> 01:06:42.410
写节

01:06:42.410 --> 01:06:43.410
连零

01:06:43.410 --> 01:06:45.410
改成我的真实连零

01:06:45.410 --> 01:06:46.410
19

01:06:46.410 --> 01:06:47.410
然后接下来的话

01:06:47.410 --> 01:06:48.410
这边

01:06:48.410 --> 01:06:49.410
学历

01:06:49.410 --> 01:06:50.410
说实

01:06:50.410 --> 01:06:51.410
好

01:06:51.410 --> 01:06:52.410
其他的话就

01:06:52.410 --> 01:06:53.410
这边改成

01:06:53.410 --> 01:06:54.410
独一大学

01:06:54.410 --> 01:06:55.410
ok

01:06:55.410 --> 01:06:56.410
好

01:06:56.410 --> 01:06:57.410
然后接下来这边

01:06:57.410 --> 01:06:58.410
确认修改

01:06:58.410 --> 01:06:59.410
这边

01:06:59.410 --> 01:07:00.410
看没有

01:07:00.410 --> 01:07:01.410
学生修改成功

01:07:01.410 --> 01:07:03.410
这边是不是修改成功了

01:07:03.410 --> 01:07:04.410
对不对

01:07:04.410 --> 01:07:05.410
一点详情进去

01:07:05.410 --> 01:07:06.410
ok

01:07:06.410 --> 01:07:07.410
就搞定了

01:07:07.410 --> 01:07:08.410
对不对

01:07:08.410 --> 01:07:10.410
这就是关于这个修改

01:07:10.410 --> 01:07:12.410
修改我们也就做完了

01:07:12.410 --> 01:07:13.410
好

01:07:13.410 --> 01:07:14.410
然后接下最后一个

01:07:14.410 --> 01:07:15.410
最后一个的话

01:07:15.410 --> 01:07:16.410
是关于搜索

01:07:16.410 --> 01:07:18.410
这个搜索的话

01:07:18.410 --> 01:07:19.410
这边的话

01:07:19.410 --> 01:07:20.410
它其实是一个

01:07:20.410 --> 01:07:21.410
假的搜索

01:07:21.410 --> 01:07:22.410
这里的搜索

01:07:22.410 --> 01:07:23.410
其实就是根据

01:07:23.410 --> 01:07:24.410
你这边

01:07:24.410 --> 01:07:26.410
这边你所有的数据

01:07:26.410 --> 01:07:28.410
进行一个过滤

01:07:28.410 --> 01:07:30.410
你真实的搜索是什么样子的

01:07:30.410 --> 01:07:32.410
真实的搜索的话

01:07:32.410 --> 01:07:33.410
实际上是

01:07:33.410 --> 01:07:34.410
应该是在数据库那边

01:07:34.410 --> 01:07:36.410
我前端的话

01:07:36.410 --> 01:07:37.410
我给你

01:07:37.410 --> 01:07:38.410
后端传一个

01:07:38.410 --> 01:07:40.410
传一个我当前是第几页

01:07:40.410 --> 01:07:42.410
以及就是我每一页

01:07:42.410 --> 01:07:43.410
我显示多少条数据

01:07:43.410 --> 01:07:44.410
我前端的话

01:07:44.410 --> 01:07:46.410
传一个这个数据就可以

01:07:46.410 --> 01:07:47.410
然后接下传到这个服务器端

01:07:47.410 --> 01:07:49.410
服务器端在这个数据库

01:07:49.410 --> 01:07:51.410
进行检索的时候

01:07:51.410 --> 01:07:53.410
就只返回内页的数据

01:07:53.410 --> 01:07:56.410
真实的搜索其实应该是这样子的

01:07:56.410 --> 01:07:57.410
知道吧

01:07:57.410 --> 01:07:58.410
因为我不可能就是

01:07:58.410 --> 01:08:00.410
把所有的数据放到你前端

01:08:00.410 --> 01:08:01.410
那比如说我这边的话

01:08:01.410 --> 01:08:03.410
这个几千万条数据

01:08:03.410 --> 01:08:04.410
对不对

01:08:04.410 --> 01:08:05.410
我咋可能全部放到你前端

01:08:05.410 --> 01:08:06.410
这是不可能的

01:08:06.410 --> 01:08:07.410
但我们这边

01:08:07.410 --> 01:08:08.410
让我们这边

01:08:08.410 --> 01:08:10.410
只是作为这个练习

01:08:10.410 --> 01:08:12.410
作为练习这边

01:08:12.410 --> 01:08:13.410
咱们就直接在这

01:08:13.410 --> 01:08:14.410
因为这其实就是

01:08:14.410 --> 01:08:15.410
已经是所有数据了

01:08:15.410 --> 01:08:16.410
你看我分页也没做

01:08:16.410 --> 01:08:17.410
对吧

01:08:17.410 --> 01:08:18.410
没有做分页

01:08:18.410 --> 01:08:19.410
所以我们这边

01:08:19.410 --> 01:08:21.410
就从所有的数据里面

01:08:21.410 --> 01:08:23.410
我们进行一个检索

01:08:23.410 --> 01:08:24.410
OK

01:08:24.410 --> 01:08:25.410
进行个检索就OK了

01:08:25.410 --> 01:08:27.410
来我们来到这边吧

01:08:27.410 --> 01:08:28.410
来到我们的

01:08:28.410 --> 01:08:30.410
把其他的关一下吧

01:08:30.410 --> 01:08:32.410
来到我们的Home

01:08:32.410 --> 01:08:33.410
把其他的

01:08:33.410 --> 01:08:35.410
其他的把关闭

01:08:35.410 --> 01:08:36.410
来到我们的Home

01:08:36.410 --> 01:08:37.410
Home的话你看

01:08:37.410 --> 01:08:38.410
现在的话是不是

01:08:38.410 --> 01:08:41.410
显示的是这个Stu List

01:08:41.410 --> 01:08:42.410
Stu List是什么

01:08:42.410 --> 01:08:44.410
是不是你所有的数据

01:08:44.410 --> 01:08:45.410
对不对

01:08:45.410 --> 01:08:46.410
拿到所有的数据

01:08:46.410 --> 01:08:47.410
好然后接下来

01:08:47.410 --> 01:08:48.410
我们这边是不是有个搜索

01:08:48.410 --> 01:08:51.410
搜索这边是不是有个on-chain级

01:08:51.410 --> 01:08:52.410
对吧

01:08:52.410 --> 01:08:53.410
on-chain级

01:08:53.410 --> 01:08:54.410
我们先把on-chain级

01:08:54.410 --> 01:08:56.410
我们先把它玩上了

01:08:56.410 --> 01:08:57.410
这边on-chain级的话

01:08:57.410 --> 01:08:58.410
它这边的话

01:08:58.410 --> 01:09:00.410
就是应该是更新

01:09:01.410 --> 01:09:02.410
on-chain

01:09:02.410 --> 01:09:04.410
这边这个清级handle

01:09:04.410 --> 01:09:05.410
清级handle

01:09:05.410 --> 01:09:06.410
对你在这

01:09:06.410 --> 01:09:07.410
对你在这

01:09:07.410 --> 01:09:08.410
这边的话

01:09:08.410 --> 01:09:09.410
应该是做什么事情

01:09:09.410 --> 01:09:10.410
这边的话

01:09:10.410 --> 01:09:12.410
是不是就是应该是

01:09:12.410 --> 01:09:14.410
这边有一个set

01:09:15.410 --> 01:09:17.410
这边应该有一个set

01:09:17.410 --> 01:09:20.410
然后搜切item

01:09:21.410 --> 01:09:22.410
对吧

01:09:22.410 --> 01:09:23.410
好大家这边

01:09:23.410 --> 01:09:24.410
去接收到你的纸

01:09:24.410 --> 01:09:25.410
然后给它

01:09:25.410 --> 01:09:27.410
这边其实没必要

01:09:27.410 --> 01:09:28.410
这边我们直接这样子

01:09:28.410 --> 01:09:31.170
就可以了

01:09:31.170 --> 01:09:32.170
直接

01:09:33.170 --> 01:09:34.170
这里

01:09:34.170 --> 01:09:35.170
直接这样子

01:09:35.170 --> 01:09:37.170
这边拿到这个e

01:09:38.170 --> 01:09:39.170
好

01:09:39.170 --> 01:09:41.170
大家这边执行这个

01:09:41.170 --> 01:09:45.170
把这个e.target.value

01:09:45.170 --> 01:09:46.170
传过去

01:09:47.170 --> 01:09:49.170
好来我们这边来看一下

01:09:49.170 --> 01:09:50.170
你现在拿到这边输入

01:09:50.170 --> 01:09:51.170
是没问题

01:09:51.170 --> 01:09:52.170
对不对

01:09:52.170 --> 01:09:53.170
关键是输入之后

01:09:53.170 --> 01:09:54.170
输入之后

01:09:54.170 --> 01:09:58.250
我们这边要做什么

01:09:58.250 --> 01:09:59.250
输入之后的话

01:09:59.250 --> 01:10:00.250
我们这边的话

01:10:00.250 --> 01:10:02.250
是不是应该进行一个过滤

01:10:02.250 --> 01:10:03.250
对不对

01:10:03.250 --> 01:10:04.250
对你这边

01:10:04.250 --> 01:10:06.250
你的这个stulist

01:10:06.250 --> 01:10:07.250
进行一个过滤

01:10:07.250 --> 01:10:08.250
好

01:10:08.250 --> 01:10:09.250
那我们这边这样子

01:10:09.250 --> 01:10:10.250
还是就是写一个

01:10:11.250 --> 01:10:12.250
这边的话

01:10:12.250 --> 01:10:13.250
方形

01:10:13.250 --> 01:10:14.250
方形

01:10:14.250 --> 01:10:15.250
清计handle

01:10:16.250 --> 01:10:17.250
ok

01:10:17.250 --> 01:10:18.250
清计handle

01:10:18.250 --> 01:10:19.250
好我们把这个

01:10:19.250 --> 01:10:22.520
拿过来

01:10:22.520 --> 01:10:23.520
拿过来

01:10:23.520 --> 01:10:24.520
这边这个e

01:10:25.520 --> 01:10:26.520
接下来这边

01:10:26.520 --> 01:10:28.520
这边就调用这个清计handle

01:10:30.520 --> 01:10:31.520
调用清计handle

01:10:31.520 --> 01:10:35.520
然后把这个e.target.value

01:10:35.520 --> 01:10:36.520
把它传过去

01:10:36.520 --> 01:10:37.520
传过去之后

01:10:37.520 --> 01:10:39.520
然后加这边接受一下

01:10:39.520 --> 01:10:40.520
接受一下

01:10:40.520 --> 01:10:41.520
比如name

01:10:41.520 --> 01:10:42.520
好这边呢就

01:10:42.520 --> 01:10:43.520
设置一下

01:10:45.520 --> 01:10:46.520
设置一下

01:10:46.520 --> 01:10:47.520
ok

01:10:47.520 --> 01:10:48.520
那现在的话

01:10:48.520 --> 01:10:49.520
用户要搜索的东西

01:10:49.520 --> 01:10:50.520
就存到哪里了

01:10:50.520 --> 01:10:52.520
是存到这个search item里面

01:10:52.520 --> 01:10:53.520
对不对

01:10:53.520 --> 01:10:54.520
然后这search item

01:10:54.520 --> 01:10:56.520
之前是在哪用过吗

01:10:56.520 --> 01:10:57.520
在这里

01:10:57.520 --> 01:10:58.520
在这里

01:10:58.520 --> 01:10:59.520
好那现在的话

01:10:59.520 --> 01:11:00.520
这个用户

01:11:00.520 --> 01:11:01.520
用户的这个

01:11:01.520 --> 01:11:02.520
要搜索的东西

01:11:03.520 --> 01:11:04.520
用户

01:11:04.520 --> 01:11:07.520
要搜索的内容

01:11:07.520 --> 01:11:08.520
就干嘛呀

01:11:08.520 --> 01:11:10.520
这存出到了

01:11:10.520 --> 01:11:15.520
这个search item里面

01:11:16.520 --> 01:11:17.520
对不对

01:11:17.520 --> 01:11:18.520
好那接下来

01:11:18.520 --> 01:11:19.520
我们简单的进行一下过滤

01:11:20.520 --> 01:11:21.520
接下来

01:11:21.520 --> 01:11:24.520
我们简单进行一下

01:11:24.520 --> 01:11:27.960
进行一下

01:11:28.960 --> 01:11:29.960
这个过滤

01:11:30.960 --> 01:11:32.960
ok那这边呢就是

01:11:32.960 --> 01:11:33.960
stu

01:11:34.960 --> 01:11:36.960
stu这个list

01:11:36.960 --> 01:11:37.960
这是不是所有的人

01:11:37.960 --> 01:11:38.960
所有的人

01:11:38.960 --> 01:11:39.960
然后接下来

01:11:39.960 --> 01:11:40.960
我们这边通过什么呢

01:11:40.960 --> 01:11:41.960
通过filter

01:11:41.960 --> 01:11:42.960
filter

01:11:42.960 --> 01:11:43.960
然后下这边

01:11:43.960 --> 01:11:44.960
传入一个回调函数

01:11:44.960 --> 01:11:46.960
那这边是不是可以拿到

01:11:46.960 --> 01:11:47.960
每一项

01:11:47.960 --> 01:11:48.960
对

01:11:48.960 --> 01:11:49.960
拿到每一项之后

01:11:49.960 --> 01:11:50.960
然后像我们这边

01:11:50.960 --> 01:11:51.960
return

01:11:51.960 --> 01:11:54.960
你每一项的这个name

01:11:54.960 --> 01:11:56.960
如果能够match

01:11:59.460 --> 01:12:00.460
这边match

01:12:00.460 --> 01:12:01.460
match我这边

01:12:01.460 --> 01:12:03.460
传入的这个name

01:12:03.460 --> 01:12:04.460
是不是就认为

01:12:04.460 --> 01:12:05.460
你是符合要求的

01:12:05.460 --> 01:12:06.460
对吧

01:12:06.460 --> 01:12:07.460
那最终的话

01:12:07.460 --> 01:12:09.460
这边整个这个filter

01:12:09.460 --> 01:12:11.460
它会返回一个数组

01:12:11.460 --> 01:12:12.460
我们这边接收一下

01:12:12.460 --> 01:12:17.630
它会返回一个数组

01:12:17.630 --> 01:12:18.630
好返回一个数组之后

01:12:18.630 --> 01:12:19.630
然后接下来的话

01:12:19.630 --> 01:12:20.630
我们这边这个数组

01:12:20.630 --> 01:12:21.630
数组的话

01:12:21.630 --> 01:12:22.630
然后接下来

01:12:22.630 --> 01:12:23.630
我们这边再来

01:12:23.630 --> 01:12:25.630
再来定义一个状态

01:12:25.630 --> 01:12:26.630
const

01:12:26.630 --> 01:12:27.630
一个叫做

01:12:27.630 --> 01:12:29.630
searchList

01:12:29.630 --> 01:12:30.630
set

01:12:31.630 --> 01:12:33.630
searchList

01:12:33.630 --> 01:12:36.630
等于一个useState

01:12:36.630 --> 01:12:37.630
这边空数组

01:12:37.630 --> 01:12:38.630
这个是存储什么呢

01:12:38.630 --> 01:12:39.630
存储

01:12:39.630 --> 01:12:41.630
搜索后的数据

01:12:42.630 --> 01:12:43.630
ok

01:12:43.630 --> 01:12:44.630
这个是存储什么

01:12:44.630 --> 01:12:45.630
这个是存储

01:12:45.630 --> 01:12:48.630
存储所有的数据

01:12:49.630 --> 01:12:50.630
ok

01:12:50.630 --> 01:12:51.630
好那我们这边

01:12:51.630 --> 01:12:52.630
就应该是set

01:12:53.630 --> 01:12:54.630
接下来的话

01:12:54.630 --> 01:12:56.630
就应该是set searchList

01:12:57.630 --> 01:12:58.630
大家这边

01:13:00.630 --> 01:13:01.630
对了

01:13:01.630 --> 01:13:02.630
把它保存进去

01:13:02.630 --> 01:13:03.630
好保存进去之后

01:13:03.630 --> 01:13:04.630
然后接下来

01:13:04.630 --> 01:13:05.630
我们在这边

01:13:05.630 --> 01:13:06.630
下面

01:13:06.630 --> 01:13:07.630
下面的话

01:13:07.630 --> 01:13:08.630
我们这边就const

01:13:09.630 --> 01:13:10.630
一个list

01:13:11.630 --> 01:13:12.630
const一个list

01:13:13.630 --> 01:13:14.630
这个list就是

01:13:14.630 --> 01:13:15.630
你最终要写

01:13:15.630 --> 01:13:16.630
显示的列表

01:13:17.630 --> 01:13:18.630
list

01:13:19.630 --> 01:13:20.630
就是

01:13:20.630 --> 01:13:22.630
最终

01:13:23.630 --> 01:13:26.630
要显示的列表

01:13:26.630 --> 01:13:27.630
那这个列表的话

01:13:27.630 --> 01:13:28.630
根据什么来确定呢

01:13:28.630 --> 01:13:29.630
这个列表的话

01:13:29.630 --> 01:13:30.630
就根据你这个

01:13:30.630 --> 01:13:32.630
searchItem

01:13:32.630 --> 01:13:34.630
是否有值

01:13:34.630 --> 01:13:35.630
对吧

01:13:35.630 --> 01:13:36.630
searchItem是什么

01:13:36.630 --> 01:13:37.630
是不是就是用户

01:13:38.630 --> 01:13:39.630
存储

01:13:40.630 --> 01:13:41.630
存储

01:13:41.630 --> 01:13:42.630
用户

01:13:42.630 --> 01:13:43.630
输入

01:13:44.630 --> 01:13:45.630
输入的

01:13:45.630 --> 01:13:46.630
这个搜索

01:13:47.630 --> 01:13:48.630
信息

01:13:49.630 --> 01:13:50.630
对不对

01:13:50.630 --> 01:13:51.630
就我们这个是一个

01:13:51.630 --> 01:13:52.630
这个搜控逐渐吗

01:13:53.630 --> 01:13:54.630
就这边的input

01:13:54.630 --> 01:13:55.630
是一个搜控逐渐

01:13:55.630 --> 01:13:56.630
这边value等于searchItem

01:13:56.630 --> 01:13:57.630
是不是和这个状态

01:13:57.630 --> 01:13:58.630
是关联起来的

01:13:58.630 --> 01:13:59.630
说它是不是用户

01:13:59.630 --> 01:14:00.630
输什么

01:14:00.630 --> 01:14:01.630
这个searchItem里面

01:14:01.630 --> 01:14:02.630
是不是就存了是什么

01:14:02.630 --> 01:14:03.630
对吧

01:14:03.630 --> 01:14:04.630
好说我们这边

01:14:04.630 --> 01:14:05.630
就取决于你用户

01:14:05.630 --> 01:14:06.630
是否有

01:14:06.630 --> 01:14:07.630
输东西

01:14:07.630 --> 01:14:08.630
如果有

01:14:08.630 --> 01:14:09.630
那我这边呢

01:14:09.630 --> 01:14:10.630
就显示什么

01:14:10.630 --> 01:14:11.630
searchList

01:14:12.630 --> 01:14:13.630
否则的话

01:14:13.630 --> 01:14:14.630
我这边就显示什么

01:14:14.630 --> 01:14:16.630
stulist

01:14:17.630 --> 01:14:18.630
好

01:14:18.630 --> 01:14:19.630
那我这里的话最终

01:14:21.630 --> 01:14:22.630
最终我这个list

01:14:22.630 --> 01:14:24.630
我应该放在那个地方

01:14:25.630 --> 01:14:26.630
这list的话

01:14:26.630 --> 01:14:27.630
应该是在你这边

01:14:27.630 --> 01:14:28.630
便利的时候是吧

01:14:28.630 --> 01:14:29.630
把这个

01:14:29.630 --> 01:14:30.630
把拿过来

01:14:31.630 --> 01:14:34.070
拿过来

01:14:35.070 --> 01:14:36.070
应该是在你这

01:14:36.070 --> 01:14:37.070
这边

01:14:38.070 --> 01:14:39.070
在你这边

01:14:39.070 --> 01:14:40.070
你最终便利的时候

01:14:40.070 --> 01:14:42.070
应该是list.map

01:14:42.070 --> 01:14:44.070
而不是像刚才一样写死

01:14:44.070 --> 01:14:45.070
直接这个stulist

01:14:45.070 --> 01:14:47.070
因为stulist

01:14:47.070 --> 01:14:48.070
它始终是什么

01:14:48.070 --> 01:14:50.070
是不是始终是完整的那边

01:14:51.070 --> 01:14:52.070
对吧

01:14:52.070 --> 01:14:53.070
好来我们这边

01:14:53.070 --> 01:14:55.700
来看一下好不好

01:14:55.700 --> 01:14:56.700
哦

01:14:56.700 --> 01:14:58.700
这边一下子就没有出来了

01:14:58.700 --> 01:14:59.700
我们这边来看一下

01:15:01.700 --> 01:15:02.700
也没有爆错

01:15:03.700 --> 01:15:04.700
也没有爆错

01:15:04.700 --> 01:15:05.700
我们这边

01:15:05.700 --> 01:15:06.700
我们来看一下

01:15:07.700 --> 01:15:08.700
searchItem

01:15:08.700 --> 01:15:09.700
searchItem

01:15:09.700 --> 01:15:10.700
这边一开始应该是什么

01:15:10.700 --> 01:15:12.700
这边不应该是一个空数组

01:15:12.700 --> 01:15:13.700
这边这个searchItem

01:15:13.700 --> 01:15:14.700
应该是个空之串

01:15:15.700 --> 01:15:16.700
对吧

01:15:16.700 --> 01:15:17.700
是不是出来了

01:15:17.700 --> 01:15:18.700
出来了之后

01:15:18.700 --> 01:15:19.700
然后接下来我这边

01:15:19.700 --> 01:15:20.700
我比如说搜索一个i

01:15:21.700 --> 01:15:22.700
你看

01:15:22.700 --> 01:15:23.700
是不是出来了

01:15:23.700 --> 01:15:24.700
对不对

01:15:24.700 --> 01:15:25.700
然后再加这边z

01:15:25.700 --> 01:15:26.700
是不是出来了

01:15:26.700 --> 01:15:27.700
对不对

01:15:27.700 --> 01:15:28.700
要share

01:15:30.700 --> 01:15:31.700
share

01:15:31.700 --> 01:15:32.700
对吧

01:15:32.700 --> 01:15:33.700
OK

01:15:33.700 --> 01:15:35.700
一个简单的搜索功能

01:15:35.700 --> 01:15:37.700
实时的搜索功能

01:15:37.700 --> 01:15:38.700
就出来了

01:15:38.700 --> 01:15:39.700
OK

01:15:39.700 --> 01:15:40.700
好

01:15:40.700 --> 01:15:42.700
那我们整个这个学生管理系统

01:15:42.700 --> 01:15:43.700
就写完了

01:15:44.700 --> 01:15:46.700
通过这个学生管理系统的话

01:15:46.700 --> 01:15:47.700
我们看还有什么功能没写

01:15:47.700 --> 01:15:48.700
没有了

01:15:48.700 --> 01:15:49.700
都写完了

01:15:49.700 --> 01:15:50.700
这边主页

01:15:50.700 --> 01:15:51.700
关于我们

01:15:51.700 --> 01:15:52.700
对吧

01:15:52.700 --> 01:15:53.700
这边添加用户

01:15:53.700 --> 01:15:55.700
添加这个学生

01:15:55.700 --> 01:15:56.700
把点改一下

01:15:57.700 --> 01:15:59.700
在首页这边

01:16:00.700 --> 01:16:02.700
因为我之前写的是添加用户

01:16:02.700 --> 01:16:04.700
这边添加学生

01:16:04.700 --> 01:16:07.210
OK

01:16:07.210 --> 01:16:08.210
改一下

01:16:08.210 --> 01:16:09.210
整个这个的话

01:16:09.210 --> 01:16:10.210
其实就没什么了

01:16:10.210 --> 01:16:11.210
还是比较简单吧

01:16:11.210 --> 01:16:12.210
对不对

01:16:12.210 --> 01:16:14.210
特别是大家如果会这个view的话

01:16:14.210 --> 01:16:16.210
你这边其实就是熟悉下react rotor

01:16:16.210 --> 01:16:18.210
它怎么用

01:16:18.210 --> 01:16:19.210
对吧

01:16:19.210 --> 01:16:20.210
好

01:16:20.210 --> 01:16:22.210
然后我们这边下节课的话

01:16:22.210 --> 01:16:24.210
咱们再对这个学生管理系统

01:16:24.210 --> 01:16:25.210
咱们再做个总结

01:16:25.210 --> 01:16:27.210
把咱们的这个笔记

01:16:27.210 --> 01:16:28.210
把这个笔记

01:16:28.210 --> 01:16:29.210
咱们把它补充

01:16:29.210 --> 01:16:30.210
完整一下

01:16:30.210 --> 01:16:31.210
然后再做一下总结

01:16:31.210 --> 01:16:33.210
然后看一下这个react rotor里面

01:16:33.210 --> 01:16:34.210
还有哪些

01:16:34.210 --> 01:16:36.210
大家是需要掌握的

01:16:36.210 --> 01:16:37.210
OK

01:16:37.210 --> 01:16:39.210
这些课的话就到这里

01:16:39.210 --> 01:16:40.210
大家下去的话

01:16:40.210 --> 01:16:41.210
把整个这个

01:16:41.210 --> 01:16:42.210
学生管理系统

01:16:42.210 --> 01:16:44.210
整个这个把它写一下

01:16:44.210 --> 01:16:45.210
好吧

01:16:45.210 --> 01:16:46.210
这就到这里

01:16:46.210 --> 01:16:47.210
再见

