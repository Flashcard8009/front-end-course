WEBVTT

00:00.300 --> 00:06.620
OK 接下来咱们继续啊 这个是入门篇第一章的第二节课

00:07.420 --> 00:17.100
第二节课的话 咱们来看一下这个GSX 这节课的话 咱们来看两个东西 一个是关于GSX的一个基础语法 另外一个是和

00:18.060 --> 00:21.740
GSX相关的 叫做这个crate element这个方法

00:22.140 --> 00:31.100
OK 我们首先的话来看这个GSX 在react中的话 它是使用这个GSX来描述页面的

00:31.820 --> 00:33.980
啊 这句话什么意思 你就是说

00:34.780 --> 00:42.940
你大家都学过vue对吧 我说过我会假定大家都是学过vue的啊 那在vue里面我们是通过什么来描述页面

00:43.500 --> 00:49.020
或者说描述一个组件 通过什么 就通过template对不对 通过template

00:49.500 --> 00:54.780
那在这个GSX里面的话 在那个react里面的话 它就是通过GSX

00:55.500 --> 00:58.940
来进行这个页面啊 或者这个组件的这个描述

00:59.580 --> 01:04.620
可以看到就是在上节课的那个例子啊 就这边 我们这边是不是写了一个DIV

01:05.340 --> 01:09.580
对吧 这个DIV的话 这个就是一段GSX

01:11.260 --> 01:16.460
为什么叫GSX呢 有朋友说这个不就是HTML吗 为什么你要叫他GSX呢

01:16.620 --> 01:21.020
你要注意 这个东西它只是长得像HTML

01:21.900 --> 01:26.140
但是呢 它实际上是一种这个GS的语法扩展

01:26.860 --> 01:29.260
ok 也就是这一块 它其实是GS

01:30.300 --> 01:32.380
另外一秒 它是GS它不是HTML

01:33.740 --> 01:40.060
好 然后这一块的话 你是可以把它单独提出来的啊 比如说我们这边看一下上节课的例子

01:40.380 --> 01:44.220
啊 我们这边是不是写在这里了 对吧 你可以完全可以把它提出来 我们来看一下

01:45.020 --> 01:47.740
比如说我在这 我们这个的话 这个组件其实

01:48.300 --> 01:53.580
本质上就是一个什么 本质上是不是就是个函数啊 对吧 那是个函数我可不可以在这生命一个便利啊

01:54.060 --> 01:58.940
对吧 比如说叫做n等于啊 然后接下来我把这个一段GSX

01:59.900 --> 02:01.900
把拿过去复制给他

02:03.020 --> 02:08.780
看到没有啊 第三行这个代码什么意思啊 也就是说我这边的话 我把这一段GSX

02:09.100 --> 02:13.900
注意它不是HTML啊 再上强了 不是HTML 它是这个GS对象

02:14.460 --> 02:20.380
它本质就是GS对象 这个一会我们会说啊 好 我们把这一段GSX是不是复制给他

02:21.420 --> 02:27.500
对不对 复制给他 那回头的话 你这边在渲染的时候 你这边是不是可以直接return a点

02:28.700 --> 02:32.140
对不对 我们这边稍微让它变化一下 好 保存

02:33.100 --> 02:37.100
你看 这边变异没有任何问题 对吧 然后再这边来看一下

02:37.740 --> 02:41.580
所以也没有任何问题 对吧啊 说说在咱们的那个

02:42.300 --> 02:45.180
react里面 他就是通过这种方式

02:45.980 --> 02:49.900
来描述我们整个页面啊 或者说整个这个组件

02:50.460 --> 02:58.620
他长什么样子啊 但这边的话react官方他推荐你 因为我们一般来描述一个页面或者一个组件的时候 不可能就这么一点点 对不对

02:59.020 --> 03:05.980
一般的话会就是像HTML一样啊 就是很多标签 那这边他建议你就是加一个小货号

03:07.260 --> 03:10.060
ok 加个小货号之后再加你这边就可以

03:11.740 --> 03:19.660
把你的这个页面长什么样子啊 就可以在这里面来进行一个描述 对吧 1 2 3

03:20.620 --> 03:23.580
ok 好 保存一下 好 保存了之后

03:25.100 --> 03:26.860
这边看一下 什么有任何问题

03:27.580 --> 03:33.180
对吧 这是关于这个GSX啊 首先大家要知道有这么一个东西

03:33.820 --> 03:39.660
啊 整个react里面就是通过GSX来描述页面的 其实大家学过这个

03:40.300 --> 03:44.780
voe 就这一块是很好理解的 对不对 voe他是通过template

03:45.580 --> 03:51.660
啊 你这个页面长什么样子都是在template里面来进行描述的啊 在react里面他就是通过这个GSX来描述

03:52.140 --> 03:53.740
ok 啊 这个就不说了啊

03:55.500 --> 03:58.140
好 然后接下来的话就是关于这个GSX

03:58.860 --> 04:03.980
你在使用这个GSX描述页面的时候 他会有一些这个语法规则

04:04.540 --> 04:06.380
那这个的话也和咱们view很相似

04:07.020 --> 04:09.740
你想我们这个view我们在使用那个模板的时候

04:10.220 --> 04:13.180
所以会涉及到一些模板相关的这个语法

04:13.900 --> 04:15.820
对不对啊 不用 这边可以回顾一下

04:17.100 --> 04:18.940
比如说这个voe

04:19.980 --> 04:26.780
啊 这边 嗯 所以会有一些这个模板的语法 对不对 你如何插入文本啊 如何插入原始的html

04:27.180 --> 04:32.540
对不对 如何动态的绑定这个属性 对不对 然后还要就是使用这个GS表达式

04:33.100 --> 04:37.100
会有一些这些内容在里面啊 那我们的这个你在这边

04:37.580 --> 04:39.500
你在使用GSX的时候

04:40.220 --> 04:43.740
那同样他这个GSX里面呢 会有一些这个语法规则

04:44.300 --> 04:46.860
啊 我们一个一个来看 呃 首先第一个

04:47.580 --> 04:51.660
根元素只能有一个啊 这个的话其实

04:52.860 --> 04:53.980
这个react

04:56.380 --> 05:01.660
和那个voe啊 实际上是一样的 对吧 没有的话 最早的话也是要求

05:01.900 --> 05:07.980
你根元素只能有一个啊 当现在最新的这个viu3好像是支持就是你可以有多个

05:08.380 --> 05:13.900
这个根元素了 对吧 我们这边我们来看一下吧 比如说我这边的话 我再来一个ur

05:15.260 --> 05:20.460
再来一个ur啊 你看这边是不是就包错了啊 你可以把鼠标移上去 你看一下啊 这边包的

05:20.860 --> 05:24.060
GSX表达式必须具有一个复远数

05:24.860 --> 05:27.420
对不对 okay啊 所以像这种错误的话

05:27.980 --> 05:31.260
啊 你这边 你这边你如果保存的话 它这边边也是通不过的啊

05:31.340 --> 05:33.980
大家可以看一下这个错误啊 错误

05:35.180 --> 05:39.580
呃 这个错误啊 这儿啊 记住这个错误啊 这边 看到没有

05:40.300 --> 05:43.900
jessent.jsXelement 就是你的这个jsX元素

05:44.460 --> 05:49.500
must be whopper的 就必须被包裹 in and in closing

05:50.300 --> 05:51.100
这个tag

05:51.980 --> 05:57.100
这必须是在被包裹在一个b盒表现里面 它说你是否要加一个这个

05:57.660 --> 06:01.980
okay 所以像这种错误啊 像这种错误 如果你遇到了你就知道是什么原因了

06:02.300 --> 06:04.940
什么原因 这边的话你需要加一个根元数

06:06.060 --> 06:07.740
对不对啊 你把整个这一块

06:08.380 --> 06:11.500
你把它放进去啊 放进去

06:12.060 --> 06:16.220
是不是就ok了 对吧啊 大家我们这边来看一下啊 两个就出来了

06:16.780 --> 06:22.300
但两个就出来了话呢 有的同学会说 哎 我这个的话 其实我这个div是毫无意义的

06:23.180 --> 06:26.540
对不对毫无意义的这个div啊 比如说你看在这里

06:27.820 --> 06:30.620
我们看一下他宣扔了最终的这个html

06:31.260 --> 06:32.460
啊 我把这个打开

06:33.100 --> 06:38.620
那这边啊 你看外层是不是有一个div div 然后接下来内部的话 是不是两个

06:39.100 --> 06:44.060
ur 对吧 那有的同学可能会说 哎 我这边的话我就是不想要这个div

06:44.380 --> 06:48.860
啊 我觉得这边这个div没有任何的意义啊 我html里面都可以这么写

06:49.420 --> 06:51.660
对吧 那你这个我用你这个react

06:51.980 --> 06:56.140
那我这边你必须要让我多一对这个div 就是这个div吗

06:56.620 --> 07:01.740
啊 实际上他这边的话 在react里面他支持什么了 支持支持这个空标签

07:02.860 --> 07:06.220
就你可以这样子来写 ok 你这样子来写的话就代表

07:06.860 --> 07:10.300
这边反正用一个闭合的这个元素把他们包裹起来

07:10.700 --> 07:15.660
啊 就满足刚才的那个要求 他们只有一个根元素 但是这个呢 由于是个空标签

07:16.060 --> 07:20.380
他又不会渲染到页面上面啊 我们这边我们保存了 我们来看一下

07:21.660 --> 07:24.700
你看啊 刚才的那个多余的那个div

07:25.260 --> 07:32.700
是不是就没有了 对不对 就没有了啊 这是关于首先第一个啊 根元素只能有一个

07:33.500 --> 07:40.860
好 第二个接着是他使用这个javascript表达式啊 表达式的话写在花扩号中

07:41.420 --> 07:46.060
啊 这个的话对于大家来讲其实也是很简单的啊 你对照这个vue

07:46.460 --> 07:49.420
vue的话它是什么 是不是两个花扩活

07:50.140 --> 07:53.020
对不对啊 我记得那个vue里面它叫做那个什么

07:53.980 --> 07:57.580
猫虚虎 是吧 猫虚虎啊 他这边他是一个

07:58.140 --> 08:00.700
就是一个花扩号啊 比如说我们在这里

08:02.460 --> 08:08.140
我们在这里啊 我们打一个花扩虎 那接下来你在这里面 这里面的话你就可以写就是

08:08.860 --> 08:12.060
各种各样的这个javascript表达式啊 比如1加1

08:13.420 --> 08:17.820
对吧 你看这个是不是就是一个javascript表达式啊 好来我们这边来看一下

08:18.460 --> 08:21.740
这边是不是渲染出来了啊 或者你这边的话 比如说我这边

08:22.540 --> 08:28.780
啊 定义一个变量 比如说const name等于一个卸节

08:29.740 --> 08:33.420
对吧 好 然后接下来在这里 这里的话我就写这个name

08:34.220 --> 08:35.740
对吧 好 然后就在这边

08:37.020 --> 08:40.220
说出来了 对吧 这一点的话和你那个

08:41.100 --> 08:46.620
呃 vue是一样的 只不过vue的话它这里是什么 它这个是不是两个花扩活

08:46.940 --> 08:50.940
对吧 在我们的这个这个javascript里面它是一个花扩活

08:51.420 --> 08:56.540
就语法上面的话 这边稍微有点区别 这个的话大家要注意啊 然后还有就是什么呢

08:56.540 --> 08:58.700
还有就是里面的话 放的是表达式

08:59.660 --> 09:04.060
千万不要放语句 okay 里面是不支持语句的 比如你在这里面写什么

09:04.540 --> 09:06.540
efls 这种行不行

09:07.660 --> 09:11.020
这种是不是肯定不行 对吧 这种是什么了 这种是语句了

09:11.740 --> 09:13.740
啊 这个我们称之为语句

09:14.380 --> 09:19.340
啊 那你这边的话 你如果比如说想用一个这个双分字 那你这边的话得把它改成一个表达式

09:19.900 --> 09:27.740
那什么是表达式呢 啊 比如说这边的话啊 如果内幕等于一个这个卸节 对吧 大家一个问号啊 你就显示一个

09:28.220 --> 09:32.220
卸节 对吧 否则的话 否则的话你这边就是一个浪

09:33.580 --> 09:35.420
ok 那这种的话就是表达式

09:36.220 --> 09:43.820
对吧 你要区分清楚这个表达式和这个语句 它是不一样的啊 这个是属于接式基础知识了啊

09:44.540 --> 09:46.540
好 然后接下来这边保存一下 你看一下

09:47.500 --> 09:50.700
这边卸节是不是就出来了啊 我如果把这个稍微改一下

09:51.580 --> 09:55.980
改了之后 然后加这边 这个这个什么就是空的 对不对 就是一个脑

09:57.340 --> 10:00.860
啊 这是关于这一点 下一点

10:01.900 --> 10:11.180
属性值指定为制服串的字面量啊 或者在这个属性值中插入一个javascript表达式

10:11.740 --> 10:19.100
这个什么意思 就我们都知道我们的这个html标签啊 这些 这些啊 这个最终会确认成html标签嘛 对吧

10:19.420 --> 10:26.140
好 那这个html标签的话 它里面是可以有属性的 对不对 好 那如果我这边的话 我有属性 我干什么写

10:26.620 --> 10:31.580
啊 你这边那属性其实就正常写就可以了 比我这边它的这个id 我们给一个叫做1

10:32.460 --> 10:33.900
好 这边的话 它这个id

10:35.260 --> 10:36.140
等一个2

10:36.940 --> 10:40.540
ok 好 我们保存一下 保存了之后 然后接下这边来看一下

10:41.580 --> 10:45.900
你看这边 这个例的话是不是就是有一个id1 这个例的话有一个id2

10:46.700 --> 10:54.140
对吧 就正常来讲的话 你正常写就可以了 那当然有的同学会问呢 哎 让我如果是那种动态的属性呢

10:54.700 --> 11:00.540
啊 就像我们的这个view一样view的话 你这边如果是动态的参数通过一个什么 通过一个冒号

11:01.500 --> 11:04.780
哎 我们对比着去学 这样子学知识是最快的

11:05.580 --> 11:10.060
知道吧 就我们人在学这个新知识的时候 往往是把这个新知识

11:10.620 --> 11:16.300
链接到我们已知的这个旧知识 这样子的话你这个学习速度是最快的

11:17.100 --> 11:19.100
所以我为什么我会给大家说就是要求

11:19.660 --> 11:25.100
呃 就是我会默认大家是学过vou1的 会vou1的啊 因为我很多我会去做类比

11:25.820 --> 11:32.540
知道吧 很多会去做类比 这样子一类比啊 一把他连起来 你自然而然就就快速就能够掌握啊

11:33.100 --> 11:37.980
我们来看一下这个view里面view里面的话 我比如说我一个属性是动态的

11:38.300 --> 11:40.940
动态的我通过什么 通过微杠棒的

11:41.980 --> 11:46.860
对吧 微杠棒的啊 表示这个是一个动态属性 那回头都按我这个属性可以什么

11:47.020 --> 11:53.820
所以和我的这个delta进行联动 我delta这边一变啊 这里是不是就变了对吧 好那在我的这个

11:54.780 --> 11:56.620
view里面啊那个react里面

11:57.100 --> 12:04.780
react里面的话你这边的话你就可以直接把一个属性值啊 然后接下来让它等于一个什么呢 等于一个这个加瓦斯盔布的表达式

12:05.340 --> 12:10.060
ok 比如说我们这里回到我们这边啊 比如我们这边这个id

12:10.380 --> 12:16.700
这个id的话我们就不要再给他一个支付串了 而是什么呢 你看啊 再一次写了一个花扩护

12:17.420 --> 12:21.580
只要我这边一写花扩护就代表什么 代表里面是不是一个表达式

12:22.540 --> 12:30.460
对不对 表达式啊 好 然后接下来我们这边的话 我们比如说啊 随便写个吗 比较test 等于一个

12:31.820 --> 12:32.140
3

12:34.140 --> 12:38.300
ok 好 然后接下来在这里 这里的话你就输写test

12:39.420 --> 12:46.860
啊 回头的话他这边让这个test所对应的值这个3啊 就会变成这个这个力的id

12:47.580 --> 12:53.580
对吧 好 来我们这边我们来看一下 看到没有 这边是不是就出来了啊 回头的话我就可以通过什么

12:53.740 --> 12:56.780
是不是通过修改这个变量的值 从而达到

12:57.740 --> 13:02.700
动态修改这个id的这个目的 对不对啊

13:04.140 --> 13:05.660
啊 这是关于这一点

13:06.780 --> 13:10.300
好 然后还要这里啊 然后如果是style

13:10.940 --> 13:15.500
啊 style和class这两个属性的话要就是特别注意一下啊 为什么呢

13:16.060 --> 13:17.020
嗯 因为我们说过

13:18.140 --> 13:20.140
ts差它的本质是什么

13:21.100 --> 13:28.460
它的本质它不是html 它是什么 它是ts对象啊 这个是就前期我需要反复强调的

13:29.100 --> 13:33.500
ok 就可能大家平时看这个看惯了 对吧 平时写这个html写惯了

13:34.060 --> 13:41.020
啊 就下意识的觉得这是个html 你看这个你都看得出来对不对啊 你这个肯定不是html 你html里面能这样子写吗

13:41.340 --> 13:46.540
这不能这样写 对不对 说它其实它是ts对象啊 js对象

13:47.180 --> 13:53.980
ok 那既然是ts对象的话 那这边的话啊 有两个东西 大家要注意 首先第一个的话是style

13:55.340 --> 14:02.620
style style的话这边的话啊 一般来讲的话 我们这边就会给他一个值 给他一个值是一个对象

14:03.580 --> 14:09.500
看了没有 这个style 我们给他一个值 这个值是对象 好 然后接下来你就可以在这里面来设置

14:12.700 --> 14:14.700
ok 好 保存 再看一下

14:15.580 --> 14:20.540
是不是ok 对吧 好 但是你要注意啊 因为我这边style对应的值是一个对象

14:21.100 --> 14:27.100
啊 让我这边的话 我这边设置样式的时候 是不是 一条一条 这里面是不是对象的这个

14:27.660 --> 14:33.020
建合值 对吧 那这边的话 你就需要使用什么呢 就需要使用托风秘密法

14:33.660 --> 14:39.500
啊 比如你这边要设置这个fault size那这边呢 你就是得使用托风秘密法 因为它是对象啊

14:40.460 --> 14:45.420
对吧 它是对象啊 比如我们这边设置一下 比如20px走

14:46.860 --> 14:52.140
就变大了 变大了 对不对 okay 这里注意啊

14:53.100 --> 14:56.780
好 那有的东西说 那我能不能就是通过以前像html那种形式呢

14:57.100 --> 15:00.540
那也可以 那那种形式的话 你这边就得对应是一个什么了

15:01.420 --> 15:03.900
你这边就得对应是什么 是不是是一个制服串了

15:04.780 --> 15:08.220
对不对 你这里就应该对应是一个制服串啊 你这边conner

15:08.940 --> 15:10.140
然后read

15:11.260 --> 15:13.180
哦 他这边好像还是不行 我看一下

15:13.980 --> 15:16.860
啊style power must 哦 这边还不行啊

15:17.260 --> 15:21.180
看来没有 他这边已经提示出来了 你这个style power value

15:21.740 --> 15:23.180
must be an object

15:23.660 --> 15:26.700
这必须得是一个对象 对吧

15:27.260 --> 15:32.060
啊 我这边我之前还以为可以 我看一下啊 确实不行啊 他这边报错了

15:33.260 --> 15:36.460
报错了 看来没有 他这边解析不了啊

15:37.180 --> 15:42.300
ok 所以这边的话 你如果要设置这个样式的话 这边要注意啊 他这边对应的首先这边一个

15:43.020 --> 15:48.700
花口壶 花口壶代表这里面的话是一个js表达式 对吧 然后接下来里面我要给他费个值

15:49.100 --> 15:54.060
你这个值能不能提出来 能不能提出来 这当然是可以的 对吧 比如说我们这边

15:54.700 --> 15:58.780
呃 等于个styles 那我们这边让他等于一个对象

15:59.420 --> 16:04.780
对吧 再定一个辨量 叫做styles 等于一个这个对象 好 然后将我把这个值我把提出来

16:05.820 --> 16:06.620
呃 read

16:07.420 --> 16:09.980
然后接下来的话 这边fault size

16:11.340 --> 16:13.500
fault size 比如说24 pizza

16:14.140 --> 16:18.140
ok 好 然后像我在这边的话 我就直接写一个什么 直接写个styles

16:19.260 --> 16:26.220
这就可以了 对吧 保存 保存了之后 让人家这边来看一下 这个错是刚才的一个错啊 以前刷新他就没了

16:26.940 --> 16:33.900
ok 这边数就行了 对不对啊 这是关于这个styles 必须是个对象啊

16:34.460 --> 16:38.700
好 然后还有一个是什么呢 还有一个是这个class net 这个class

16:39.500 --> 16:44.460
class的话你要注意 以前我们在写的时候 我们这边要给这个样式类名

16:45.580 --> 16:50.300
对吧 我们怎么写 我们是不是直接就是class 等于一个啊 比如说等于一个

16:51.260 --> 16:52.780
等于一个什么呢 等于一个a

16:53.500 --> 16:58.460
我们以前是不是这样子写的 但你这在解释差里面你这样子写 他是会爆错的

16:59.340 --> 17:03.420
他会爆错 为什么 大家可以猜想一下为什么他会爆错

17:04.620 --> 17:08.460
啊 就原因很简单 因为我们再一上强调这个是什么

17:09.900 --> 17:11.100
这个是不是他是这个

17:11.820 --> 17:16.540
s对象 对不对 那既然这个东西是s对象的话 那这个

17:17.500 --> 17:23.980
他在s中是一个什么 是不是个关键字啊 对不对啊s6这个class代表声明一个类

17:24.380 --> 17:27.020
那你这样子写的话 他就是有问题的

17:27.660 --> 17:32.060
ok 你这边你保存 保存之后这边 编译是编译成功的 但是你看这里

17:33.020 --> 17:38.220
这里的话是不是 就是他会爆一个警告 对不对 in y里的domo这个 property

17:38.780 --> 17:41.180
啊 这是一个非法的这个啊 你是不是

17:41.900 --> 17:46.140
想要写这个class name ok 那你看一下这个class挂上去没有

17:49.260 --> 17:54.140
呃啊 他挂还是挂上去了啊 挂还是挂上去了 但是他这边的话会给你一个警告

17:55.580 --> 17:59.420
啊 你在这边的话你就要把他改成什么了 把他改成class name

18:00.860 --> 18:03.180
啊 这一点要注意啊 class name

18:04.300 --> 18:12.540
ok 啊 刷新一下啊 是不是没了 对不对 ok啊 这些的话其实在他的官网都是说了的

18:13.420 --> 18:18.460
你可以在这个json这边啊 这个其实刚才讲的这些东西的话在官网都是有的

18:19.020 --> 18:21.180
我来看一下啊 就刚才说说的

18:21.980 --> 18:26.380
这个class啊 这是指定啊 这边是

18:29.180 --> 18:32.700
这个是在哪里呢 是在元素宣人吗 看一下

18:35.020 --> 18:39.100
官网上应该都是有的啊 这个我可能得去找一下

18:39.820 --> 18:43.260
啊 因为之前的话也是在官网看的 不知道他这个官网是不是更新了

18:44.460 --> 18:45.100
接下

18:46.700 --> 18:53.180
嗯 下来我找一下吧 下来我找一下 找一下让下节课的时候给他说一下啊 你看这边这边这个表达是对吧

18:53.500 --> 18:55.580
这里面的话你可以写表达是

18:56.380 --> 19:02.460
那既然是表达是的话 那是像这种函数调用 函数调用我们是不是也是说函数调用是一个函数调用表达是

19:03.100 --> 19:06.620
对不对 说你在花阔核里面你是可以调用函数的啊

19:07.980 --> 19:18.540
好 然后接下来的话就是注释啊 注释的话需要写在花阔号中啊 这个什么意思 就正常来讲的话 我们回到这边啊 回到这边

19:20.060 --> 19:22.700
回到这里 这里的话 我们说这个的话 其实本质上

19:23.100 --> 19:27.100
他的一个组件是不是就是个函数 对不对 函数的话 你看我这边其实

19:27.740 --> 19:32.060
看简单一点的话 其实就是怎么样 是不是就是失明了三个变量而已 对不对

19:32.540 --> 19:36.860
好 然后接下来的话 我这边要打注释的话 是不是就和之前是一样的 对不对 这里

19:39.500 --> 19:41.660
这里是三个变量

19:42.860 --> 19:48.300
ok 那正常情况下就是你这个地方的这个注释的话啊 以前是怎么注释的 现在就怎么注释

19:48.780 --> 19:51.340
他说的是什么呢 说的是这个地方的注释

19:52.620 --> 19:55.500
ok 这个地方是什么 这个地方是不是我们的杰斯查

19:56.460 --> 20:02.220
对不对 这是杰斯查 杰斯查里面我们怎么注释呢 杰斯查里面的话 比如说啊 这是一个注释

20:02.940 --> 20:10.940
一个注释 走 你看在杰斯里面的注释的话 他就放在一个什么 他放在一个花瓷壶里面

20:11.900 --> 20:18.620
对不对 ok 这个注意啊 但你这个你如果安装了这个react的一些这个扩展的话

20:19.340 --> 20:23.420
你这边这个在杰斯查里面注释 他自动就是这样子注释的 ok

20:23.980 --> 20:27.900
这里的话 大家可以去找一下 就是关于杰斯查那个react的一些扩展

20:28.540 --> 20:29.740
我看我这边装了什么吗

20:31.340 --> 20:35.500
我这边的话 我应该是装了react相关的扩展啊

20:36.620 --> 20:44.140
啊 我装了这个 我装了这个啊 你这个react net 我react iridax啊 这个 这就是一些

20:45.580 --> 20:46.860
就可以快速生成的

20:47.660 --> 20:51.820
啊 你看这边 他就是有些这种快捷方式 可以快速的生成一个组件

20:52.380 --> 21:00.380
rct crr这些 ok 就你装了这种插件之后 你回头比如说 我想生成一个新的这个组件

21:01.180 --> 21:06.860
啊 比如说在这里 我们新建一个组件啊 啊 组件虽然下几颗才说 我们这边的话 我们试一下

21:07.340 --> 21:13.900
比如说我这边的话 我创建一个component这个空的文件家啊 以后就是之后 我们的组件都放在这个文件家里面

21:14.300 --> 21:16.860
好 我们在这边 我们创建一个Hello

21:17.420 --> 21:23.020
Hello hello的话 然后这样我建议大家把这个后维就写成gsx

21:23.900 --> 21:25.180
啊 直接就写成gsx

21:25.900 --> 21:32.620
写成gsx的话 你回头在书写这个gsx的时候要方便一些啊 你看我们现在 现在的话 比如说我这里

21:33.820 --> 21:42.780
这里 这里的话 我比如说想再添加一个p标签啊 你看我这边 我比如说按回车什么的 都是不好使的 对吧 按table键啊 这些都是不好使的

21:42.780 --> 21:46.380
因为他这边这个p 你看这边 他是没有这个p标签的提示

21:47.420 --> 21:54.140
对不对啊 这边比如说我要创建个di位啊 这di位container啊 但是他就这个样子 对不对

21:54.620 --> 22:02.300
ok 那你如果是把这个后维改成这个gsx的话 你回头再写这个gsx的时候 就可以像写那个

22:03.260 --> 22:10.300
html一样啊 就就敲个di位啊 然后空格让家这个一对这个di位这个标签就出来了

22:10.860 --> 22:17.180
ok 好 然后这边这边的话 就是装了那个扩展之后啊 这边他就给你提供一些快速快捷的方式

22:17.740 --> 22:24.700
不用我这边输入rsf啊 他这边写的有这个是react statness

22:25.100 --> 22:31.660
方形啊 就是无状态的这个方形啊 什么叫无状态 我们后面会说啊 然后你按table键

22:32.300 --> 22:38.060
这价值是不是就快速的就给你搭建好了 对不对 好 然后这边的话 你输入一个这个p标签

22:38.460 --> 22:44.460
你看 这就很方便了 对吧 ok 好 看一下他支不支持那个amat的预防

22:46.060 --> 22:50.540
container啊 支持 看没有 他直接这边是不是就是class name

22:51.420 --> 22:57.180
对吧 ok 大家可以去装一下啊 就就这个就这个 但你你会收到很多其他的

22:58.140 --> 23:00.860
啊 收到很多其他的这个装 每个都无所谓

23:01.580 --> 23:07.740
知道吧 有个同学学知识啊 学的比较死啊 你这个的话你就找一个你觉得好用的就可以了

23:08.220 --> 23:12.220
对不对 这就和你本质上本质上来讲就和你现实生活中你买手机呀

23:13.020 --> 23:18.220
啊 你找一块你自己觉得用的舒服的 你看我这边一输这个react 是不是这边这么多

23:19.180 --> 23:25.340
对不对 这么多 让每一个他这边是有介绍的 你这边点过来 点过来之后他这边其实是有介绍的

23:26.380 --> 23:30.140
看没有 比了这个插件是干什么的 你这些东西你去看一下嘛

23:31.020 --> 23:35.980
对不对 有个同学看都不看 你看都不看啊 那你不看的话 你当然不知道这个插件是干什么的

23:36.620 --> 23:39.420
啊 那老师为什么知道呢 老师还不是看了这

23:40.220 --> 23:45.340
就这么简单 对不对 你大致看一下呗 大致看一下这边啊 他这个option是有哪些

23:45.900 --> 23:50.700
有哪些这个选项 对吧 这个插件大致是干什么的 他都是有介绍的

23:51.500 --> 23:54.780
明白吧 自己选一个选一个自己装一个就可以了

23:56.540 --> 23:59.100
啊 这是关于react扩展啊 这个不说了

24:00.140 --> 24:05.260
包括你voe voe 你们应该也装了很多的这个扩展 对吧 你输这个voe这边

24:06.060 --> 24:10.720
很多啊 好 然后

24:11.920 --> 24:19.920
讲到哪呢 啊 讲到这个注释了 是吧 好 然后接下来的话这个ges叉里面他允许在模板中插入数组

24:20.320 --> 24:25.120
数组会自动展开所有成员啊 这个其实用的蛮多的

24:26.000 --> 24:31.520
用的蛮多的啊 后面我们写项目的时候经常会这么用 ok 解释一下是什么意思

24:32.240 --> 24:36.480
这个哈喽这个主项 我们先不管他啊 我们还是先回到我们的跟主件 app

24:37.760 --> 24:41.040
嗯 比如说他这边是这个意思 就是我这里的话

24:42.080 --> 24:44.240
我可以比如说写个数组

24:45.280 --> 24:52.160
哎呀啊 对吧啊 这个的话就是一个数组 平平无奇的数组 对吧啊 这个数组里面 我们知道在ges里面

24:52.160 --> 24:55.840
数组里面是可以放任何东西的 对吧 那我这边的话可以放

24:56.000 --> 24:58.800
可不可以放这个一对一对的这个ges叉

24:59.360 --> 25:02.160
啊 是可以的 比如说我第一个我放一个p标签

25:04.620 --> 25:07.340
放个p标签啊 那比如说哈喽

25:08.540 --> 25:14.140
那接下来的话这边都好 那第二个的话那接下来放一个比如说第二位啊 比如说world

25:14.860 --> 25:18.460
随便写一点 ok 那第三个第三个放一个spam

25:19.660 --> 25:24.620
ok 那比如说写个哈哈 ok 好 那我们现在的话我们这边这个数组

25:25.100 --> 25:32.700
数组的话他就有三个三项每一项是什么每一项是不是一段ges叉对不对

25:33.020 --> 25:37.260
好 那我这边的话我就可以选择干嘛呢 我选择这里啊 注意花瓷湖

25:38.060 --> 25:42.060
对吧 首先花瓷湖里面放这个表达社好 然后接下来把这个哎呀啊

25:42.860 --> 25:43.260
放过来

25:43.980 --> 25:50.540
放过来的话他这边他就会自动的把这里所有的这个ges叉自动的把它展开

25:51.660 --> 25:54.220
啊 自动把它展开啊 我们这边我们来看一下啊

25:55.340 --> 25:56.460
好 这里

25:57.820 --> 25:58.220
看了没有

25:59.660 --> 26:02.460
看了没有 这不自动的就展开了啊 你这边可以看一下

26:03.260 --> 26:11.740
在这里啊 这边p对吧 第二位spam 这不自动的就展开了啊 这种方式的话 我们到后期会用的非常非常多

26:12.060 --> 26:15.660
我们后期的话经常就是比如我们的数据是从服务器拿到的

26:16.220 --> 26:20.700
拿到了之后然后接下来的话我就会通过这个啊 便利那个数据

26:21.100 --> 26:27.260
通过map便利 便利之后然后接下来的话给他返回 就后期我们经常会这样子写 给他写个例子吧

26:28.700 --> 26:31.180
写个例子啊 把这个注射掉

26:32.140 --> 26:37.580
啊 注射掉在下面也就没有了啊 不注射就这样子吧 好 我这边呢 比如说我们这边有个数据const

26:39.900 --> 26:41.900
const一个stu infer

26:42.700 --> 26:44.540
啊 他是一个输主

26:45.260 --> 26:50.780
他是个输主 输主里面是一个对象啊 对象里面就有内幕 内幕比如说卸节

26:51.340 --> 26:54.380
然后A级A级18

26:55.500 --> 26:58.620
啊 好 然后接下来的话 这边有一个这个张三

27:00.300 --> 27:04.060
啊 张三十九啊 然后接下来的话这个李四

27:05.020 --> 27:08.940
李四 李四啊 李四二十岁

27:09.340 --> 27:12.860
ok 假设这个是从服务器拿到的数据啊

27:14.220 --> 27:20.860
假设这是从服务器拿到的数据

27:21.340 --> 27:26.060
ok 好 然后接下来我们这边经常会怎么做呢 我们会这样子啊 有const一个

27:27.260 --> 27:32.460
二啊 他是一个空输主对吧 好 然后接下来我这边呢 去便利

27:33.260 --> 27:36.140
stu infer 点map

27:37.020 --> 27:39.740
啊 好 然后接下来的话什么 拿到每一项

27:41.180 --> 27:46.300
对不对 拿到每一项 拿到每一项之后 然后接下来的话 我这边就可以return

27:47.980 --> 27:49.580
return一个什么呢 return一个

27:50.620 --> 27:52.700
嗯 就return一个div嘛

27:54.380 --> 27:58.220
就return一个div 好 这div里面就有什么呢 就有姓名

27:58.940 --> 28:08.780
姓名啊 然后接下来的话你这边是不是应该是花火火对不对啊 每一项每一项就是什么 是不是就是这个对象

28:09.180 --> 28:16.620
一个一个的这个对象 对吧 一个一个对象的叫我这边 item.name ok 空格然后年龄

28:18.940 --> 28:19.420
年龄

28:20.940 --> 28:25.340
年龄啊 然后下这边的话 item.edge

28:26.060 --> 28:28.940
对吧 好 那我们知道整个这个map

28:30.060 --> 28:35.660
整个map的话 它最终是什么 最终它返回 我们这边返回的是一段ges差

28:35.660 --> 28:38.300
那最终的话 它会得到一个什么 是得到一个数组

28:39.340 --> 28:43.180
对吧 数组的话 数组里面的每一项是不是就是你的这个ges差

28:43.740 --> 28:46.220
啊 我们这边的话 其实可以直接把这个const 2

28:46.860 --> 28:52.380
啊 直接等于这个字 对吧 这个就不要了 ok 好 那我们这边我们来打印一下

28:52.700 --> 28:57.020
打印一下 ar 啊 我们来看一下

28:58.460 --> 29:01.100
啊 我们保存 保存了之后 然后这里来看一下

29:02.380 --> 29:07.660
ok 啊 这个啊 这里有两个问题要说一下 首先第一个 第一个的话是关于这个key

29:08.540 --> 29:14.460
啊 这个key的话 实际上是在react官网的这边核心概念的这个第八小节

29:15.180 --> 29:20.060
啊 这个列表和key 我们可以点过来看一下 ok 它这边就告诉你 你如果是

29:21.020 --> 29:29.260
需要就是循环啊 通过循环 通过map循环来创建一段这个ges差的话 啊 这边的话 你是需要有一个这个key的

29:29.260 --> 29:36.620
我看key它在哪里 啊 这里 你是需要分配一个key的啊 这一点的话 其实大家并不陌生

29:37.580 --> 29:38.540
啊 咱们在那个

29:39.500 --> 29:42.380
那个vue里面 vue里面你通过这个v4

29:43.180 --> 29:45.820
啊 通过v4去便利的时候 是不是也是需要给一个key

29:46.540 --> 29:49.740
对不对 从而提升它就是提升它的这个性能

29:50.380 --> 29:58.380
ok 那我们这边的话这个react里面 它也是啊 要提供一个key啊 关于这个key的具体的一些细节啊 就这个key

29:58.780 --> 30:03.180
究竟做了什么 这key的话 实际上它是涉及到了它的那个地负算法

30:03.980 --> 30:09.100
啊 就如何提升它这个地负算法的这个效率 这个的话 我们在后面那个就业片的时候

30:09.660 --> 30:10.860
我们再来详细的来说

30:11.580 --> 30:16.940
好吧啊 这里的话 就是我们这边首先要分配一个这个key啊 这个的话 其实大家很好理解的

30:17.260 --> 30:21.180
啊 因为你那个vue里面v4 是不是也是需要一个key 对吧

30:21.980 --> 30:27.340
然后说说我们这边的话 回到我们的代码啊 我们这边呢 就给它设置一个key

30:27.900 --> 30:30.380
那key的话 这边很明显 是不是也是需要用一个

30:30.940 --> 30:38.140
划扩活 对吧 我们这边呢 这样子我们再给给每个这个学生 给个id啊 这个id是1

30:39.660 --> 30:40.380
这个id

30:42.300 --> 30:44.700
12啊 然后再这边这个id

30:45.100 --> 30:46.700
13

30:47.500 --> 30:53.420
ok 给他一个id 好 那我们这边就可以以什么为key 这个item.id

30:54.620 --> 31:00.460
作为我们的key 对吧 好 保存一下 保存了之后 然后回到这边啊 刷新一下

31:02.780 --> 31:05.340
呃 list should have

31:07.180 --> 31:10.380
我们这边已经提供了key了呀 我看一下啊

31:13.360 --> 31:18.000
啊 我们这边切过来看一下啊 嗯 他这边的话说的是

31:19.360 --> 31:24.560
是在哪里 是在p 对吧 and p p的话 我们只有是不是这个地方

31:25.360 --> 31:31.840
对不对 这个地方的话 他这边啊 可能是提示我们这边啊 我们看一下这边 把这个key给上了

31:32.480 --> 31:33.680
啊 不要给个10

31:34.720 --> 31:36.640
啊 先随便写一个啊 应该是这里

31:37.120 --> 31:44.960
因为这边的话 他是这个数组 数组的话 他这边的话 应该默认要求你数组里面的每个元素是要有key的

31:45.520 --> 31:49.440
啊 我们这边刷新一下啊 是不是果然是那对吧果然是那

31:50.000 --> 31:56.880
ok 好 然后这是首先这边 这边的话 我们这个ar 我们打印出来 打印出来的话 这边得到这个对吧

31:56.880 --> 32:03.280
然后每一个的话 我们数组里面的每一个元素 我们是给了这个key的啊 包括刚才这里 刚才这里的话 其实也应该

32:03.360 --> 32:07.520
其实也应该把key给这个给上啊 你数组的每一项啊

32:08.080 --> 32:12.000
好 然后接下来给上这个key之后 然后将我们这边 我们把它展开 我们来看一下

32:13.280 --> 32:21.200
展开的话 我们期望是什么呢 我们期望就是打印出来的是应该是像这样子的div对吧 就是大字应该是像这样子的div

32:22.240 --> 32:25.520
就我们期望的话 应该是像这样子的div 比较姓名

32:29.740 --> 32:34.860
姓名啊 然后卸贱啊 然后加这边年龄啊 然后18

32:35.580 --> 32:39.900
这不应该是一项一项这样子的div 对不对啊 但是实际上的话不是

32:41.180 --> 32:45.740
这不是 实际上打印出来的话是 你看是什么样子

32:46.300 --> 32:47.900
是不是这样子的一个对象

32:48.780 --> 32:57.180
对不对 是这样子的一个对象啊 这个对象究竟是什么 我们这个一会再来说啊 一会再来说这个的话 其实就是我们一会要讲到的

32:57.660 --> 33:03.500
这个crate element啊 一会要讲到这个啊 最终的话实际上我们写的

33:04.140 --> 33:12.460
就我们这边写的这些这个ges差啊 写的ges差最终的话 它会通过这个babel转换成这样子的对象

33:13.260 --> 33:20.460
啊 这也是就是反复给大家讲的 就我们写的这些东西 写的这些东西 它是ges对象 不是hdm

33:21.020 --> 33:24.940
是不是一开始就给大家说了的 对吧啊 你要注意啊

33:26.060 --> 33:30.140
好 我们这边先来看一下效果吧啊 把这个删掉 我来看一下效果

33:30.620 --> 33:33.820
嗯 这里啊 这里的话就直接写这个

33:35.100 --> 33:36.060
再写个ar2

33:37.500 --> 33:42.220
写了呀 保存保存了之后 这边是不是出来了

33:43.180 --> 33:51.500
对 这就出来了啊 这个是后期经常一种非常常用的这个用法啊 就你从服务器拿到一段数据

33:51.820 --> 33:58.380
好 大家这边你通过这个map啊 把它便利出来得到一个数组 那数组的话 你就可以直接放到哪里

33:58.780 --> 34:05.260
可以直接放到这个ges叉里面 对吧ges叉里面 然后通过这个划扩户 把它放进去

34:05.980 --> 34:13.420
ok 后面用的非常非常多啊 在那个req里面啊 它没有提供像那个就是view里面view里面的话是通过什么

34:13.500 --> 34:14.620
是通过vg4

34:15.740 --> 34:22.940
对吧啊 我如果是条件渲染的话 我是vg1 如果我是这个列表渲染 我通过vg4

34:23.580 --> 34:28.300
啊 但是在req里面它就没有提供这些指令啊 你如果是这个比如说条件渲染

34:28.540 --> 34:36.060
你就提前在上面通过e files先写 对吧 写好你要确认哪个ges叉 那最后把它放进来就可以了

34:37.340 --> 34:42.060
啊 那如果你是循环 循环的话 你就是在外面先循环啊 比如通过map

34:42.540 --> 34:47.980
先循环好 循环好之后 然后得到一个比较ges叉的数组 然后这样直接放进来就可以了

34:48.620 --> 34:51.900
在req里面 它是像这样子 就更接近原生一些

34:52.620 --> 34:59.740
好 这是关于这个允许插入数组啊 数组会自动展开所有成员

35:00.540 --> 35:01.980
好 然后接下来的话 下一个

35:03.260 --> 35:07.980
下一个的话是这个create element的方法啊 我们来介绍一下这个

35:09.100 --> 35:09.660
ges叉

35:10.540 --> 35:15.260
ges叉的话 它是ges的一种愚法扩展

35:16.060 --> 35:21.580
这个是我们从一开始就反复强调了的 对不对啊 这玩意儿就你写的这玩意儿

35:21.900 --> 35:25.820
它不是这个html 它是ges对象

35:26.540 --> 35:31.580
最终这个babel 它其实是会对这段代码进行一个编译的

35:32.300 --> 35:38.060
哎 它会对这段代码进行编译 编译成什么呢 它会把它转移成一个名为req

35:38.700 --> 35:40.860
create element函数的这个调用

35:42.060 --> 35:48.060
ok 也就是本质上的话 它实际上这内部是通过什么呢 通过这个req.create element

35:48.780 --> 35:54.620
通过这个方法来创建的这个ges对象啊 好 然后我们来看一下这个方法啊

35:55.100 --> 35:58.700
这方法的话 它这边接受这么三个参数啊 首先第一个是type

35:59.900 --> 36:05.980
type的话就是你要创建的这个元素类型啊 props props的话就是它的这个

36:06.940 --> 36:11.500
属性就我们上面有很多属性对不对 class 然后 id啊之类的属性

36:11.900 --> 36:16.620
好 然后接下来这边的话这个求准 求准的话就是你的指援数

36:17.260 --> 36:21.980
你的指援数啊 首先我们这边的话我们可以来看一下啊 你看我这边的话有两段

36:22.380 --> 36:25.900
有两段代码 第一个的话是不是就是通过这个

36:26.780 --> 36:32.700
我们之前讲的这个ges差啊ges差的方式是不来写的对不对啊 这个的话它就长得很像

36:33.180 --> 36:38.380
html啊你这边h1对吧啊 这边这个class 只不过class你要写成classname

36:39.340 --> 36:46.380
好 人家这边这个字 它其实上面这个它就等价于什么呢 就等价于下面的

36:46.700 --> 36:49.820
通过这个rect点creator element

36:50.540 --> 36:55.020
来创建的这个ges对象 ok 那我们这边我们可以来看一下

36:56.380 --> 37:01.340
我们把这两个我们把它拿过来拿过来之后 然后接下来的话我们这边放到下面嘛

37:03.340 --> 37:03.820
放到

37:04.540 --> 37:08.060
就放到上面嘛 就放到上面 ok

37:08.940 --> 37:11.820
格式画一下啊 这边两个一个是element1

37:12.380 --> 37:19.580
通过我们的这个ges差的方式来写的对吧 另外一个是什么呢 通过这个rect点creator element

37:19.900 --> 37:22.300
啊 但它这边的话你得引入一下rect

37:23.260 --> 37:26.060
这边你把这个rect你把引一下 import

37:27.260 --> 37:28.780
rect front

37:29.740 --> 37:32.460
rect ok 好 保存一下

37:33.420 --> 37:39.100
好 这边是不是它就没有漂红了 ok 好 人家这边呢通过这个rect点creator element

37:39.740 --> 37:42.780
啊 然后接下来的话这边这个我们要创建的元素是什么

37:42.940 --> 37:46.620
什么hg 好 然后接下来的话这里啊 这里是你的这个

37:47.340 --> 37:53.180
属性对吧 我们这边就一个属性那你如果有多个属性的话 那你这边是不是继续这个对象往后面添加就可以了

37:53.580 --> 37:59.260
好 然后接下来这里 这里是我们的这个指援数 对吧 好 然后将我们这边放到这里 我们来看一下啊

37:59.820 --> 38:02.700
一个是 element 1

38:03.660 --> 38:09.020
啊 element 1 我们这边的话没有什么啊 就是中间不会插入什么东西 那你这边的话

38:09.500 --> 38:15.420
哦 不对不对 我在写什么 我把他当成主进来写了 我们这边应该是什么 应该是这个是吧 element 1

38:16.700 --> 38:20.860
啊 这边呢是element 1啊 然后接下来下面 下面的话是element 2

38:21.340 --> 38:22.940
对吧 好 来我们保存一下

38:23.740 --> 38:28.540
保存一下 我们来看一下 说同样的出来了 对不对 两个东西一模一样

38:31.460 --> 38:36.340
啊 在这里 这两个东西一模一样 对不对啊 所以在这个接式

38:36.900 --> 38:41.460
在在这个react里面啊 你这边通过这个接式插

38:42.340 --> 38:48.420
所写的啊 所写的就是你的这个页面描述 最终会被编译成什么呢

38:49.060 --> 38:54.020
编译成使用这个create element的方法 创建的这个对象

38:54.740 --> 38:59.940
ok 就是上面 element 1

39:00.820 --> 39:03.940
所写的这个接式插

39:05.060 --> 39:14.500
最终会被编译 被谁编译 被这个北博编译 对吧 编译成什么 编译成这个方法

39:17.730 --> 39:22.290
这个方法来创建啊 被编译成调用这个方法

39:23.170 --> 39:28.450
调用react create element来创建这个接式对象

39:30.370 --> 39:35.410
ok啊 说这就是我们之前反复给大家强调的这一块是接式对象

39:36.130 --> 39:41.650
对不对 其实它内部就是通过什么啊 或者说就是它背后 背后的话其实就是通过什么

39:41.890 --> 39:45.330
通过react点create element来创建

39:46.290 --> 39:51.570
对不对啊 那为什么这个官方要给你提供这个接式插的形式呢

39:53.010 --> 40:00.370
为什么要提供接式插的形式啊 有同学说 哎 那既然这个你还要编译一套是吧 你本质是这样子来创建的 那就这样子来写就好了

40:00.930 --> 40:07.410
那你这样子那要写这个 用这种方式来写页面的话是会死人的 是会死人的 ok

40:07.970 --> 40:13.570
你想想我们这边的话还很简单对吧 就一个he 你看这边是不是都是这么多代码

40:14.050 --> 40:19.810
啊 你如果真真真正正就是让你去描述一个页面 让你通过这种方式去描述一个页面的话

40:20.210 --> 40:27.970
啊 那真的是会死人的 ok 我这边可以给大家做个对比啊 ok 我这个之前应该是有的 我看一下

40:29.490 --> 40:33.330
呃react 应该是在以前的资料里面

40:34.850 --> 40:36.290
在这里啊 这里

40:37.250 --> 40:43.170
嗯 在在在在这里啊 对就这个啊 你这边让你可以尝试一下

40:43.650 --> 40:48.450
这个上面的话是使用的是这个gsta 把这个拿过来

40:50.830 --> 40:51.390
拿过来

40:52.350 --> 40:57.630
这le有没有 le没有 是吧 啊 上面的话是通过这个gsta

40:58.350 --> 41:03.470
ok 你让我们这边呢 就是简单这个这个这个其实还是很简单 对吧 没有什么东西啊

41:03.470 --> 41:07.950
那你用这个gsta的话来写的话就这样子写的 但如果你要换成

41:09.150 --> 41:11.470
你如果要换成这个

41:11.790 --> 41:20.590
那个那个那个就是react create element 哇 那就天哪 那就牢火了啊 整个代码的话就会应该就变成这个样子

41:22.510 --> 41:27.840
就会变成这个样子 ok 来看一下

41:33.340 --> 41:40.300
哎哦对了对了啊 这边格式化了 我刚才格式化了一下啊 你看整个代码就会变成这样子

41:40.780 --> 41:44.300
这边const首先创建一个h1啊 创建一个p

41:44.940 --> 41:47.740
对吧 然后再创建一个le1 le2 le3

41:48.220 --> 41:54.860
好 然后接下来的话 这边的话ule创建一个uleule 然后没有属性 然后再把le1 le2 le3拿过来

41:55.020 --> 42:01.900
然后接下来这边再创建一个le2 然后接下来这边是个div 然后接下来把h1p 然后ule

42:02.540 --> 42:05.580
拿过来啊 最终的话你确然出来的效果是一样的

42:06.860 --> 42:09.980
le1 le2 对吧 保存

42:10.380 --> 42:16.540
保存了之后来这边来看一下 这两个渲染出来的这个效果是一模一样的 但是你可以明显的感受到

42:16.780 --> 42:22.220
如果让你通过这种方式 通过这种方式来描述啊 你的页面长什么样子

42:23.020 --> 42:30.300
说会死人的 对不对啊 大家直接就放弃了啊 所以这边他提供了什么呢 提供了这个ges叉的方式

42:30.860 --> 42:37.660
啊ges叉的话他这个更像是html 对不对 更符合就是大家写页面的这个习惯

42:38.540 --> 42:44.460
但是你头脑的话要清晰 这一块代码最终会被转移成下面这样子的代码

42:45.500 --> 42:52.060
这个其实也就解释了为什么我们刚才打印出来 对了 这边还要说一下啊 还要说一下

42:52.540 --> 42:55.900
就比如说我现在的话我这边我这边写的是不是le

42:56.540 --> 42:59.500
对不对 我写的le然后这样我这边我打印一下le

43:01.650 --> 43:06.530
打印一下le 我们这边保存一下 保存之后然后将你这边给看一下

43:07.490 --> 43:13.410
哎 我在31号还打把这个注射掉啊 这就不要了 好 你看这边

43:14.450 --> 43:18.370
这边我打印这个le的时候 你看他这边打印出来是这样子的

43:21.150 --> 43:26.190
看到没有 是这样子的 首先这玩意他是一个什么 是不是这玩意他是一个对象

43:27.390 --> 43:35.390
对不对 你看这边一对花阔湖 这肯定是个对象 好对象的话 我们把它展开 我们先不管他长得有多奇怪 我们先不看 不管

43:36.110 --> 43:40.590
好 你可以看到这边的话downer downer type off有这个属性

43:41.310 --> 43:46.430
他表示他是一个react.element这个的话 我们称之为这个react元素

43:46.910 --> 43:52.990
啊 也就是整个这个对象啊 整个这个对象在react里面 我们就称之为是一个react元素

43:53.310 --> 43:57.310
或者换句话说啊 就是你这边 你这边通过

43:58.750 --> 44:02.510
通过这个react.createElement

44:03.070 --> 44:09.310
通过这个方法所创建的这个对象啊 我们就称之为是一个react元素

44:09.790 --> 44:17.150
ok 啊元素里面有什么 有key 有pops 有ref 有type 这不有这些东西啊 对不对 你会发现你这边的话

44:17.630 --> 44:18.910
你打印的是

44:19.790 --> 44:23.230
打印的是le le 你明明是这样子写的

44:23.870 --> 44:27.950
对不对 你明明是这样子写的 你想着这边打印的话 应该打印出来也是这个样子呀

44:28.910 --> 44:30.510
但是其实你会发现不是

44:31.470 --> 44:35.630
不是 对吧 最终打印出来的是什么样子 是不是这个样子

44:36.110 --> 44:41.950
为什么打印出来是这个样子啊 原因很简单 它最终打印的其实是这个方法的返回值

44:42.990 --> 44:47.230
没有吧 打印的是这个方法的返回值 比如你看这边这边是不是创建了个he

44:47.550 --> 44:50.110
啊 我们这边呢 我们就直接来打印一下he

44:52.430 --> 44:55.630
打一下he ok 啊 后面写个嘛 he

44:56.270 --> 45:00.030
好 然后加这边保存 保存之后然后加这边你看一下

45:01.230 --> 45:05.870
这里 看到没有 打印出来的是不和那个刚才那个wrapped creator element

45:07.230 --> 45:12.830
就是打印出来是不是他的返回值啊 对不对 他的返回值 你会发现两个是不是长得一模一样

45:13.310 --> 45:17.550
对不对 我指的是格式啊 格式 我不是说这个这里面的内容啊

45:17.870 --> 45:23.310
说格式 你看这边downer downer type of 对吧 type key riff 是不是一模一样

45:23.950 --> 45:29.790
对不对 这个的话其实从而也认真的刚才我所说的啊 你这边的话最终

45:29.870 --> 45:32.030
他会被转换为他

45:33.150 --> 45:39.550
明白没有 会被转换成他啊 你这边打印这个 le 打印出来的实际上是他的

45:40.190 --> 45:44.190
这个返回值 对不对 就调用这个方法之后的返回值

45:44.910 --> 45:48.830
ok 啊 这是关于这个creator element

45:50.350 --> 45:57.230
呃 其他的话就没什么好说了啊 这些对象被称为react元素 哪些对象就是这个方法

45:57.790 --> 46:02.110
啊 就是你这个react点creator element 你调这个方法他不是有个返回值吗

46:02.590 --> 46:04.990
返回值返回的是一个什么 这返回的是一个对象

46:05.630 --> 46:07.950
对不对 这个对象其实就是虚拟多么对象

46:08.750 --> 46:12.910
啊 就是虚拟多么对象 虚拟多么 大家其实应该也是有印象的啊

46:13.390 --> 46:18.430
在vue里面是有的 对吧 这这些对象其实就是虚拟多么对象啊 在这个

46:19.310 --> 46:22.030
react里面他被称之为react元素

46:22.670 --> 46:25.710
他们描述了你希望在屏幕上看到的这个内容

46:26.190 --> 46:30.830
ok 好的 还有一点就是什么呢 还有一点就是jscar本质

46:31.470 --> 46:35.790
其实就是react element方法的什么 语法堂

46:36.830 --> 46:41.710
啊 其实就是creator element方法的语法堂 是不是让你写这个页面

46:42.270 --> 46:45.310
是不是更加好写 对不对 语法堂啊

46:46.270 --> 46:53.070
ok 啊 这就是关于这个jscar啊 大家下去的话可以就是参照啊 对 今天的内容的话

46:53.230 --> 46:55.630
大家下去参照这个官网

46:56.750 --> 47:02.430
要去看官网啊 参照官网的这个这个部分 第二小节和第三小节

47:03.390 --> 47:07.310
ok 第二小节和第三小节 把这个第二小节和第三小节

47:07.870 --> 47:09.630
这个官网把它通读一遍

47:10.350 --> 47:16.510
ok 把通读一遍 好吧 这个第二小节和第三小节官方的这些例子仔细的看一遍

47:17.310 --> 47:22.670
ok 再把我们上课的这个代码啊 上课的这些代码自己再把它写一遍

47:23.070 --> 47:30.190
自己写一下 加深一下 印一下 ok 这期课的话就先到这里 ok 下节课再见

