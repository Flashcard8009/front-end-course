WEBVTT

00:00.000 --> 00:08.640
OK 欢迎回来 咱们继续 哈 上节课的话 把那个整个登录注册 咱们就做完了 咱们这边登录一下吧

00:10.000 --> 00:25.800
登录一下 卸节123456然后AK4DHL记住啊 登录 OK 把这个做完了 好 做完之后 咱们这节课的话就开始正式来做这个问答了

00:26.760 --> 00:36.200
好 咱们这边把把这个改一下吧 然后我们这边的话是这个coderstation 对吧 这边这个图标 还有这个名字 再把它改一下 这个应该在哪里改

00:37.000 --> 00:53.480
这个的话是不是就是你public 然后接下来这边index.html 对吧 因为你最终的话单页应用 显示的都是这个页面 好 这边让你来看一下 首先这个title 啊 开头很好找 这边的是coderstation 啊 为了区别咱们加个2

00:54.440 --> 01:03.240
好 然后还有就是这个图标 图标你看一下 它在这边是在这里 然后它这边是public 啊 然后url下面的这个啊

01:03.800 --> 01:09.720
这个favicon 然后点icl 然后把它改成就是我们这边 我们这边是不是有图标

01:10.680 --> 01:20.760
对吧 好 为了区别的话 我改个颜色不一样的吧 改个icon1吧 这边icon icon 1.png

01:21.480 --> 01:27.960
ok 好 保存 保存之后啊 是不是出来了 ok 这个就是我们的啊

01:29.560 --> 01:40.680
好 这边就叫icon那个coderstation就可以了 因为我们图标颜色不一样 ok 好 然后接下来的话 开始来做问答 来看一下这个问答

01:42.360 --> 01:47.720
问答的话 你这边仔细看一下啊 这边 其实问答说简单也简单

01:48.680 --> 01:53.640
为什么呢 因为他这边的话 主要就是把所有的这个问答是把它渲染出来

01:54.680 --> 01:57.480
对了啊 你看这边其实主要就是做一个渲染

01:58.440 --> 02:01.800
啊 然后加这边的话有个发问 发问的话就是

02:03.000 --> 02:08.040
增加这个问答啊 一个就是渲染问答 一个就是增加问答 其实就这两个动作

02:09.240 --> 02:15.560
ok 主要啊 主要就这两个动作啊 当然还有一些其他细致末节的啊 比如这个分类啊之类的

02:16.520 --> 02:22.360
啊 比如这种分类啊之类的 ok 好 然后这里的话 大家注意 这里你看

02:23.640 --> 02:31.240
这里问答列表 然后下这边什么分类选择啊 好 然后接下来的话 这边 注意心支援 这边是不是 就是你的这个

02:31.800 --> 02:37.480
分类的选择啊 然后下这边面试题 面试题这边 面试题大全 然后下这边的话没有分类选择

02:37.800 --> 02:39.400
啊 也就是说整个这一块

02:40.280 --> 02:44.760
整个我圈起来的这一块 你看他在页面这里 是不是都是一样的

02:45.560 --> 02:52.200
对不对啊 针对这种一样的话 我就可以干嘛呀 我是不是就可以封装一个组件

02:53.320 --> 02:56.680
对不对 我就可以封装一个组件啊 说说我们这里的话

02:57.800 --> 03:04.840
这边回到这里 我们在component 之下面 我们来写个组件啊 叫做pg header

03:06.280 --> 03:08.840
pg header 点击sr

03:09.800 --> 03:11.320
rsf

03:13.930 --> 03:18.890
rsf 好 这个是什么呢 这个是每一页的页头

03:21.300 --> 03:22.340
这是每一页

03:23.940 --> 03:26.500
每一页的页头

03:30.600 --> 03:33.160
页头啊 把这个删了吧

03:34.200 --> 03:39.240
ok 好 他主要就是负责什么 他主要就是负责啊 旋转这一块

03:40.200 --> 03:45.320
旋转这一块啊 好 那他这边的话 首先就是左侧有一个文字 对吧

03:45.560 --> 03:51.000
我把他的这个样式 我把它拿过来吧 我们这边也是顿一个样式的 好 我们这样子

03:51.560 --> 03:56.200
这样子 因为我们之前我们是不是说过 就是我们css是不会带着大家去写的

03:56.840 --> 04:02.200
对不对 那我干脆就把所有css啊 就成品里面所有的css 我全部把它拿过来

04:02.920 --> 04:06.520
好不好 免得每次要去新建这个css文件 也麻烦得很

04:07.400 --> 04:12.360
啊 我们这边把这个整个成品里面的css把拿过来

04:15.080 --> 04:19.000
呃 在这里 这里 然后src

04:19.720 --> 04:22.760
下面的css啊 我们这边全部负责

04:23.720 --> 04:25.800
然后这边src

04:26.520 --> 04:30.600
然后把这个按总类拍下 然后css啊 全部

04:31.560 --> 04:34.200
把这些先删了吧 然后粘过来

04:35.320 --> 04:36.200
ok 搞定

04:37.160 --> 04:37.320
好

04:38.600 --> 04:40.280
好 这是关于这个css

04:41.160 --> 04:45.240
好 然后接下来 咱们这边把他的这个css 把他引一下 这边

04:45.320 --> 04:46.040
import

04:46.440 --> 04:47.560
一个styles

04:48.280 --> 04:52.280
啊 你会发现啊 后面的那个主键 写的css都是model

04:53.240 --> 04:55.160
可不 都是model啊

04:56.360 --> 04:57.880
好 然后接下来的话 这边

04:59.560 --> 05:00.520
css

05:02.920 --> 05:05.320
css 下面的page header

05:05.880 --> 05:08.280
model.css 都是模块化的

05:08.760 --> 05:10.360
好 然后接下来 这边 这边呢 首先

05:11.160 --> 05:12.120
classname

05:13.560 --> 05:17.400
等于一个styles.zo

05:18.360 --> 05:22.280
首先他这边最外层 然后接下来这边的话 分为什么呢 分为就是

05:23.480 --> 05:24.920
你看呀 首先这边

05:25.720 --> 05:28.920
这边的话 是不是就是应该是我使用你这个

05:29.640 --> 05:31.960
主键的时候 是不是传递给我的

05:32.760 --> 05:34.360
对不对啊 说说我这里

05:35.320 --> 05:35.800
div

05:36.760 --> 05:39.000
然后这边 classname

05:39.320 --> 05:41.720
等于styles.page header

05:42.840 --> 05:47.240
这里的话 是应该是你传递给我的 传递给我 然后这样我这边我接收一下

05:47.800 --> 05:49.640
pops.title

05:50.280 --> 05:54.440
接收啊 回头当你这边title给我传一个这个问答列表

05:54.440 --> 05:59.160
让我在这个位置就学这个渲染这个问答列表 对不对

05:59.160 --> 06:00.360
你给我传一个

06:00.840 --> 06:05.000
你给我传一个最新支援啊 让我在这边就渲染最新支援

06:06.280 --> 06:08.600
对不对 好 然后接下来的话 这边

06:09.400 --> 06:14.520
还有这边 这边的话是一个就是这个分类的选择

06:15.320 --> 06:20.520
啊 你看这个是一个分类的选择 那这个的话我又单独封装了一个这个主键

06:21.080 --> 06:27.000
啊 又单独封装了一个主键 ok 好 那我们这边先不洗吧 这边我写一下 这边下面是分类

06:28.360 --> 06:33.160
分类选择啊 一会我们会在这下面单独放一个主键啊

06:33.480 --> 06:41.320
好 然后这边就写好了 把这个折起来吧 折起来之后 然后下咱们这边啊 issue

06:41.880 --> 06:45.000
来到我们的 issue 啊 issue 这边的话咱们来写一下

06:46.440 --> 06:52.680
啊 首先的话 这里这里的话需要把刚才那个主键把它引进来 这边的话 import

06:53.880 --> 06:55.880
page header from

06:56.920 --> 06:58.120
然后这个

06:59.400 --> 07:02.600
components 下面的 page header

07:03.320 --> 07:09.160
啊 下面来引进来啊 引进来之后 然后接下来这边 这边首先他有一个

07:10.440 --> 07:17.720
样式啊 我看一下啊 这边啊 这边的话首先 issue 他会有一个样式 我们把这个 issue 的这个样式把引进来

07:18.360 --> 07:21.240
这里的话 styles from

07:23.240 --> 07:27.640
这边 css 下面的 issue module css

07:28.520 --> 07:30.840
他引进来啊 好 然后在这边

07:32.280 --> 07:34.920
他有一个样式类 这边的话是styles

07:36.680 --> 07:39.720
styles 点这个container

07:41.240 --> 07:48.440
ok 好 然后接下这个sdo is容器 好 然后接下来下面 下面的话大致就怎么分呢 大致是这样子来分的

07:48.840 --> 07:50.280
好 这边给大家画一下图哈

07:51.320 --> 07:55.080
大致是这样子来分的 首先这一块 这是一块

07:55.960 --> 08:06.300
啊 这个是一块啊 这个是一块 这这一块的话是不是就是通过我们的page header 刚才那个主键

08:06.780 --> 08:09.100
对不对 好 然后再这边下面是一块

08:11.500 --> 08:17.500
下面啊 我就不拖下去了啊 就下面是一块 下面这一块的话就是渲染我们的这个评论列表

08:17.820 --> 08:22.220
啊 然后回头的话 这个肯定很明显是不是又会分这个封装成一个一个的主键

08:23.100 --> 08:24.140
啊 就这里

08:25.020 --> 08:31.100
这里是不是也会封装成一个一个的主键 对不对 好 然后再这边这边的话 整个右侧是一块

08:32.300 --> 08:39.020
整个右侧是一块啊 我都画了啊 比较歪啊啊 右侧又是一块

08:39.500 --> 08:44.780
看到没有 但右侧的话 然后比如说这里 这里又会封装成一个主键啊 包括下面 下面的这个

08:45.180 --> 08:46.700
这个的话 也会封装成一个主键

08:47.260 --> 08:51.340
ok 所以我们这边整体来讲的话 是这样子来进行拆分的啊

08:51.900 --> 08:56.700
好 那进行这样子拆分 那就要来呗 那首先的话 这边就是上面

08:59.370 --> 09:00.650
上面的头部

09:01.850 --> 09:06.490
头部 头部的话就是谁 是不是 就是你这个配级黑人

09:07.530 --> 09:12.090
对面配级黑人啊 然后加这边你需要传一个什么

09:12.810 --> 09:18.250
这边是不是需要传一个这个title过去啊 所以这边的话title等于一个

09:19.210 --> 09:25.290
啊 这个就支付错就可以了 这边的话 问答列表

09:26.330 --> 09:29.530
ok啊 这是上面的头部 好 然后再下面

09:31.130 --> 09:35.770
下面的列表 列表内容区域

09:37.530 --> 09:43.210
啊 下面的列表内容区域 这边就分为左边部分啊 首先这边一个大的div

09:43.930 --> 09:45.530
div点这个

09:45.930 --> 09:50.890
div 然后加这边class name 等于styles点issue

09:53.610 --> 09:54.650
issuecontainer

09:56.570 --> 09:59.290
ok啊 大家这边分为什么呢 为左边

10:01.290 --> 10:04.890
左边区域和这个右边区域

10:07.820 --> 10:09.740
右边区域

10:10.940 --> 10:13.980
ok 然后左边区域的话 这边div

10:14.060 --> 10:18.710
ok 然后class

10:19.910 --> 10:24.390
class name 等于styles点left side

10:24.870 --> 10:28.230
啊啊 右边区域 这边是right side

10:29.670 --> 10:31.350
啊 我这电脑是真的是翻

10:32.470 --> 10:33.910
然后right side

10:35.670 --> 10:39.110
ok 这边分出来了啊 来我们来看一下 看一下目前是什么样子

10:40.390 --> 10:43.510
啊 等他编译 好的 然后接下来这边我们来看一下

10:44.070 --> 10:47.270
好 你看 目前的话 是不是就这样子 我们的头部是不是就出来了

10:48.230 --> 10:55.590
可不可以 这边问答列表啊 我们的pager就写出来了 只不过还没有什么呢 还没有那个分类啊 分类还没有

10:55.910 --> 11:03.830
ok 好 然后接下来的话 下一步 下一步的话 这边的话 是不是就是这边左边是不是要去填充这个内容啊

11:05.030 --> 11:10.390
对不对 你这边的话 应该去填充内容 填充内容的话 这边就应该去获取你的问答列表

11:11.350 --> 11:11.830
对吧

11:14.070 --> 11:18.070
好 那么这里的话 就会涉及到什么呢 涉及到发送请求

11:18.790 --> 11:24.550
对吧 发送请求啊 好 那我们这边的话 我们来新增一个啊 这边的话 新增一个

11:25.270 --> 11:29.990
exu.js啊 这个的话 就是处理我们和那个问答

11:30.630 --> 11:36.150
相关的一些这个请求 好 然后在这边的话 import request

11:37.110 --> 11:46.390
然后 from 当前目录下面的 request 好 然后接下来这里 首先的话是分页获取问答

11:47.990 --> 11:49.830
分页获取

11:50.950 --> 11:51.430
问答

11:52.630 --> 11:54.790
这边 export function

11:55.910 --> 11:57.510
然后 get issue

11:59.590 --> 12:01.750
get issue by page

12:02.710 --> 12:06.310
ok 这边让我来看一下这个 api 文档

12:07.830 --> 12:15.750
把这个用户模块折起来吧 然后问答模块在这里对吧 好 这边分页获取问答

12:16.870 --> 12:22.390
啊 大致漏眼啊 这边的话就是 api issue 对吧啊 这边需要这个参数

12:22.870 --> 12:26.950
一个是current page 一个是17 page 这边其实我还写漏了一个

12:27.670 --> 12:30.390
我还写漏了一个啊 等一下我这边编辑一下啊

12:31.110 --> 12:36.390
这边实际上还有一个参数 还有一个参数什么呢 还有一个参数是 enabled

12:37.350 --> 12:42.950
ok 要这边让是 true 这个代表什么呢 就是是否过省

12:44.230 --> 12:44.870
是否

12:46.150 --> 12:47.510
审核通过

12:49.110 --> 12:55.030
啊 因为我们说过就是你这边在发表这个评论的时候 这评论他是会就后台会进行一个审核的

12:55.990 --> 13:01.190
对吧啊 审核通过了之后他才会显示在这个问答里表这边啊

13:01.350 --> 13:04.950
说这边的话我们这边在宣染的时候只会宣染什么呢 宣染这个

13:06.550 --> 13:09.750
只会宣染这个 enabled 是 true 的

13:10.390 --> 13:13.670
这个这个问答 ok 把这儿保存一下

13:16.870 --> 13:18.870
好 那这边约了

13:20.470 --> 13:22.870
哎 这边为什么是个空呢

13:23.830 --> 13:25.510
看一下啊 说的

13:26.310 --> 13:28.790
这边的话我看一下我之前的这个 api

13:30.870 --> 13:36.150
这边的话应该是一个object 才对啊不不是一个就是有力表的才对

13:37.830 --> 13:39.350
啊 color station

13:41.350 --> 13:48.710
然后问答模块问答模块分页获取问答啊 这边应该是这样子的才对

13:50.070 --> 13:52.550
应该是这样子的啊 把他拿过来

13:52.950 --> 13:53.830
好 这边修改一下

13:55.270 --> 13:58.390
边级 然后这里

14:00.550 --> 14:03.110
ok 可以的嘛啊 保存

14:05.350 --> 14:06.230
啊 回到这边

14:07.110 --> 14:09.030
啊 enabled 的 ok 有了啊

14:09.750 --> 14:14.630
好 这个是我们的这个 api啊 这边 api issue 人家这边的话要带这三个参数

14:15.590 --> 14:19.270
怎么样 current page 你当前的这个页码数

14:19.830 --> 14:21.350
好 然后接下来的话是这个

14:22.070 --> 14:27.830
一起配级啊 就是你每页渲染多少条啊 然后还有就是这个 inable 的

14:28.550 --> 14:29.750
inable 是不是写错了

14:30.390 --> 14:31.750
inable 还写错了啊

14:33.190 --> 14:39.350
这边 enabled 我刚才是不是改了这里 它下面就会变 也没变的嘛

14:39.910 --> 14:40.550
好 保存

14:42.710 --> 14:46.710
好 这边啊 inable 的是否审核通过

14:47.270 --> 14:48.710
ok 好 来呗

14:49.670 --> 14:52.390
然后回到我们这边这个代码这里

14:53.190 --> 14:56.950
这里的话我们就应该是接收一个什么呢 接收一个 promise

14:58.150 --> 14:58.550
对吧

15:00.470 --> 15:02.550
然后这里这里的话就是return

15:03.830 --> 15:05.910
return 然后 request

15:07.830 --> 15:13.750
request 啊 这边接收一个对象 对象的话咱就在这边 ur

15:15.270 --> 15:18.470
啊 这边呢是 api 下面的

15:19.190 --> 15:19.670
issue

15:20.790 --> 15:23.750
ok 好 然后加这个 message 是啊 get

15:24.310 --> 15:27.990
啊 然后把你的这个参数参数啊 这边 promise

15:28.790 --> 15:30.870
promise 等于什么呢 啊 这边

15:31.830 --> 15:36.550
点点点 promise 啊 把你这边接收到了参数 把它展开

15:37.430 --> 15:42.870
ok 搞定啊 搞定之后 然后再回到咱们这个 issue 这个组件

15:44.470 --> 15:48.550
好 这里的话 然后我们就应该是发送请求 对吧

15:48.870 --> 15:51.350
获取一开始的话 获取这个第一页

15:51.990 --> 15:57.990
第一页对应了这个问答 好 这里的话 大家思考一个问题啊 这个也是非常常见的一个问题

15:58.470 --> 16:00.710
就我们这边的话是应该是像之前一样

16:01.270 --> 16:07.190
派发一个这个action 啊 通过这个状态仓库去发送请求 还是说直接在这里发

16:08.230 --> 16:11.510
大家思考一下啊 你可以把视频暂停了 思考一下这个问题

16:12.230 --> 16:15.910
ok 啊 这里的话 实际上就是我经常给同学们说的一个

16:16.310 --> 16:18.950
就你这边学了这个 算你已经学了数据仓库

16:19.510 --> 16:23.990
对吧 你view的话 学的是view 是react的话 学的是这个redux

16:24.470 --> 16:28.710
所以你已经学了这个数据仓库 啊 但是你这边的话 不要去就是

16:29.430 --> 16:33.430
滥用这个数据仓库 你要知道这个数据仓库 它的一个

16:34.550 --> 16:37.110
啊 使用的场景或者特点

16:37.750 --> 16:43.990
我们什么时候该使用数据仓库 什么时候其实不用使用这个数据仓库啊 这数据仓库反而让我们很麻烦

16:44.470 --> 16:50.470
什么时候该使用数据仓库啊 你想想这个数据仓库或者说状态仓库啊 就redux这个东西

16:50.790 --> 16:56.390
它是为了解决什么问题而产生的 它是为了解决什么 是不是组建之间

16:57.270 --> 16:58.470
数据的共享

16:59.510 --> 17:06.390
它是不是为了解决这个问题啊 对不对 比如说我有一个数据 我很多组建里面都会用的

17:06.790 --> 17:12.550
啊 让我这边的数据就是那个组建啊 依靠这个传统的这种传递的这种方式

17:13.510 --> 17:18.870
非常麻烦啊 那我这边的话会有一个这个统一的这个仓库来管理 这种很方便

17:19.430 --> 17:22.470
对不对 但有些场景的话 我们用这个数据仓库

17:23.190 --> 17:27.190
你反而比较麻烦啊 比如说什么呢 比如说我们就就是这个

17:28.230 --> 17:33.430
问答列表 你要我们问答列表 我们这边要获取数据的话 我们是不是就是在这个首页这边

17:33.750 --> 17:39.750
把数据把它渲染出来 对不对 这种的话 其实我认为的话是没有必要使用这个

17:40.470 --> 17:45.430
就是通过这个状态仓库去发请求的 因为你没有必要存储到这个状态仓库里面

17:46.390 --> 17:50.630
对不对 我们使用这个状态仓库去发请求的话 往往是因为我们这个数据

17:51.110 --> 17:53.270
要存储到状态仓库里面

17:54.070 --> 17:59.990
然后存储到这个状态仓库里面的数据 要和其他的组建进行一个共享

18:01.110 --> 18:02.950
比如说我们就是存储到那个

18:03.670 --> 18:09.030
user 就你这个用户登录之后 是不是有一些用户信息 那这种的话就适合使用了

18:09.270 --> 18:12.950
使用这个状态仓库 因为我到时候好几个组建是不会用到

18:13.910 --> 18:21.350
对不对 但是像这种啊 这种的话你就没有必要把它存到这个状态仓库里面 而且这种数据量又比较大

18:22.470 --> 18:26.870
对不对啊 有比较大啊 每翻页你难道你每翻页 比如说我这边啊

18:27.190 --> 18:30.390
比如第一页 对吧 我翻页 然后将我往我的这个状态仓库里面又存

18:30.950 --> 18:35.030
然后将我又翻页 然后又往这个状态仓库里面又存嘛 其实没有必要

18:36.070 --> 18:41.430
对不对 没有必要啊 所以这种的话 我们就直接在组建里面发送请求就可以了

18:42.310 --> 18:44.390
ok 说这边呢 你要把场景

18:45.190 --> 18:51.510
把它分清楚啊 其实主要就是取决于你有没有理解我们的这个状态仓库 它是解决什么问题的

18:52.310 --> 18:57.190
如果你就是彻底理解了这个状态仓库 它是为了解决什么问题而诞生的

18:57.670 --> 19:00.310
啊 那你这边它是完全能够分清楚的 什么时候用

19:00.470 --> 19:04.630
什么时候不用 对不对 ok 好 那我们这里

19:05.670 --> 19:10.710
啊 这个在后台特别明显啊 其中我这边我给大家开个后台 大家就知道啊 比如这种后台

19:11.190 --> 19:14.230
后台的话 比如说像这种用户列表 或者这种数据列表

19:15.030 --> 19:17.350
啊 那你要考虑到我后面比如说我这个

19:18.230 --> 19:19.190
东西做多了之后

19:20.070 --> 19:24.790
啊 比如说我这边的话 我这个数据列表 我有这个几万条数据

19:25.430 --> 19:28.310
那几万条数据的话 那我这边肯定就是每翻一页

19:28.790 --> 19:33.750
是不是直接获取那个内页页的数据 那内页的数据 我要不要存储到这个

19:34.310 --> 19:39.030
状态仓库里面呢啊 不需要 对不对 不然你就非常麻烦地用我这边删除

19:39.270 --> 19:42.070
删除了的话 你发一个请求删除 然后接下来你这边

19:42.710 --> 19:46.230
啊 又得这个重新删除一下 这个的话其实是不划算的

19:46.950 --> 19:50.870
对不对 哪种适合用状态仓库呢 就是比如说我像这种管理员列表

19:51.190 --> 19:56.950
这个的话就是你整个管理员一共也就采多少条数据啊 一般不会超过这个

19:57.670 --> 20:02.470
几十条嘛 对吧 最多也就几十 我算你几十个管理员吗 一般也就差不多了

20:03.030 --> 20:05.350
对不对啊 这种的话你就可以用 ok

20:06.470 --> 20:09.430
啊 这个我们后面讲的时候 我再来强调一下这个问题啊

20:10.630 --> 20:15.430
好 回到我们这边啊 那我们这边的话就直接在主件里面来发送啊

20:16.070 --> 20:19.270
好 我们这边的话 我们就引入一下什么呢 引入下use

20:19.590 --> 20:21.270
效果

20:23.190 --> 20:26.790
好 然后接下来在这里这里的话使用use effect

20:27.350 --> 20:29.830
好 我们家楼上楼上好像又开始在敲了啊

20:31.430 --> 20:34.390
好 然后接下来这边这边他有没有依赖

20:36.150 --> 20:36.790
有没有依赖

20:39.300 --> 20:43.460
他这边的话是有依赖的 依赖于什么呢 依赖于你这个

20:44.500 --> 20:49.700
叶面 就是你这个这个叶马的变化 如果我是第一页 那我是不是要请求第一页的数据

20:49.860 --> 20:53.380
如果我现在叶马变成第二页了 所以我要请求第二页的数据

20:54.340 --> 20:57.620
对不对 好 说说我们这边的话我们得定一个状态

20:58.500 --> 21:00.100
use state

21:00.980 --> 21:02.980
好 然后加在这里 我们来定一个

21:04.500 --> 21:05.140
const

21:06.100 --> 21:07.780
一个这个paginfo

21:09.940 --> 21:11.220
setpaginfo

21:12.420 --> 21:14.740
然后等于一个use state

21:15.700 --> 21:18.100
好 这边这边他对应的是一个对象

21:18.660 --> 21:20.740
对象里面 然后首先的话这个current

21:23.300 --> 21:28.020
current啊对应的是一啊 这个是就是当前是第一页

21:29.300 --> 21:34.820
当前是第一页啊 然后接下来的话 这边一个page size

21:38.790 --> 21:42.470
然后我们这边显示显示一个比如15啊每页

21:43.750 --> 21:44.470
每一页

21:46.310 --> 21:48.550
显示15条数据

21:48.870 --> 21:53.290
ok 好 然后在这边这个toto

21:54.410 --> 21:59.850
toto toto的话 这边一开始是0 这个是什么呢 这个是你这个数据的总条数

22:00.970 --> 22:02.570
数据的总条数

22:04.330 --> 22:09.450
ok 这个toto这个拿来干什么呢 这个的话一会我们那个分页会用的

22:10.330 --> 22:14.010
啊 就我们这边不是会又会有一个这个分页主键吗

22:15.210 --> 22:18.090
对不对啊 有个分页主键 到时候那个分页他会用的

22:18.490 --> 22:22.010
ok 这个这个主键也是直接用的是那个antd里面的啊

22:22.650 --> 22:24.250
antd里面他有一个分页

22:25.610 --> 22:31.770
在在在pagination找一下数据展示

22:33.290 --> 22:35.530
pagination啊在这里

22:36.730 --> 22:39.690
pagination啊分页 我们到时候就使用了stick

22:40.410 --> 22:43.050
ok 好回到我们这边

22:43.930 --> 22:46.650
好 那接下来的话 这边这边他就应该依赖有什么

22:46.730 --> 22:52.010
是不是就是应该依赖于你这个paginfo.current

22:52.650 --> 22:57.370
以及什么 以及这个paginfo.pag size

22:59.370 --> 23:03.210
对不对 你如果这个当前页变了 让我这边要重新发请求

23:03.690 --> 23:07.050
如果你每一页显示的调速变了 我是不是也要重新发请求

23:07.770 --> 23:10.810
对不对 ok 好 然后接下来在这里面

23:11.530 --> 23:13.930
啊 我们这边呢 就还需要再来维护一个状态

23:13.930 --> 23:16.010
const一个这个issue

23:17.130 --> 23:19.770
issue info 我不知道楼上这个

23:20.490 --> 23:22.730
端啊端的 也不影响大家听课啊

23:23.850 --> 23:26.810
但我这边已经开始录了 也没办法 是吧

23:28.490 --> 23:29.450
那端啊端的

23:31.130 --> 23:33.930
好 然后接下来的话 这边他是一个什么 他是一个数组

23:35.050 --> 23:38.170
对不对 这个这个状态拿来干什么 这个就是用于纯索

23:39.610 --> 23:45.370
用于纯索获取到的状态列表

23:46.090 --> 23:49.850
这个的话是分页对吧 分页信息啊 要我的妈呀

23:50.730 --> 23:51.610
分页信息

23:54.940 --> 23:59.740
我发现我每次只要一路客啊 我们这一栋就有人装修啊

23:59.740 --> 24:05.420
然后我不路客然后屁事没有安安静静的 一路客然后这一栋啊 就我做的这个单元

24:06.060 --> 24:10.460
啊 就有人在装修 我真的是服了啊 运气就有这么好

24:11.980 --> 24:16.620
好 然后接下来话咱们这边继续好 这边的话就是应该是发送请求

24:16.780 --> 24:23.900
那这边呢 还是一样的 这边的话你注意啊 要定义一个一步的函数 对吧 一般的话我就叫做肥气data

24:25.500 --> 24:30.780
ok 你不能说 你不能说把这改成这个sync 他这边他是不推荐的啊

24:31.100 --> 24:35.420
他不推荐的 他这边推荐你什么的 推荐你在里面 自己定义一个sync

24:35.980 --> 24:37.740
好 然后接下来这边的话是不是调用一下

24:38.620 --> 24:39.340
肥气data

24:40.060 --> 24:46.620
ok 好 然后在这里 这里的话 咱们就应该是把那个api 把它引进来

24:47.980 --> 24:50.220
希望不会影响大家听课哈

24:51.580 --> 24:52.780
get issue

24:53.580 --> 24:56.140
然后by page 是不是叫这个名

24:56.860 --> 24:59.980
get issue by page 对了 好 大家这边的话 from

25:02.220 --> 25:05.020
啊 api 下面的 issue

25:06.300 --> 25:08.780
好吧 引进来 引进来之后 然后加这边

25:09.740 --> 25:13.340
await 然后这里的话 把什么传过去

25:14.300 --> 25:16.380
这边是不是就是应该是把你的

25:18.140 --> 25:21.980
啊 一个是首先 首先一个是什么呢 一个是current

25:23.340 --> 25:25.820
啊current 等于你pg info点current

25:26.540 --> 25:29.660
好 然后接下来还有一个什么呢 还有一个这个pg size

25:31.020 --> 25:34.620
pg size 等于你pg info点pg size

25:35.100 --> 25:40.620
啊 有同学说那你不不如直接传这个pg info 对不对啊 我这边让我主要

25:40.620 --> 25:44.700
因为我还要加一条 大家还记不记得我这边还要加一条加一个什么

25:44.700 --> 25:51.270
就是 issue status issue status 他应该是什么呢 他应该是q

25:51.830 --> 25:56.630
啊 我刚才那边还写错了 这边还写错了 他不是inable的

25:57.190 --> 25:58.630
他是 issue status

25:59.910 --> 26:03.670
啊 把它改一下哈 这边的话是 issue status

26:04.390 --> 26:06.230
啊保存

26:09.130 --> 26:13.050
ok啊 这边 issue status 他的这个状态

26:14.570 --> 26:15.690
好 回到我们这边

26:17.370 --> 26:21.770
回到我们这边啊 这边呢 就是这三个参数 把传过去 传过去之后

26:21.770 --> 26:24.410
然后接下这边上来 啊 获取一下

26:25.370 --> 26:29.450
const result 啊 获取一下他的这个结果

26:30.170 --> 26:33.850
啊 获取到之后 然后下这边老规矩 打印出来漏液

26:34.810 --> 26:36.090
对吧啊 保存

26:37.610 --> 26:41.930
保存之后的啊 再这边过来看一下 看一下这个数据过来没有

26:42.650 --> 26:45.690
数据我觉得应该是没有太大问题的啊 应该是拿到了

26:46.410 --> 26:48.090
啊 这边重新刷新一下

26:49.530 --> 26:50.810
啊 ok 这边拿到了

26:51.530 --> 26:53.930
app 啊 这个是拿到了 这个是那个

26:54.650 --> 26:57.850
就是那个app.js 就是我们的那个登录信息 我看是不是这个

26:58.410 --> 26:59.050
这边拿到了

27:00.170 --> 27:03.530
对不对 这边就拿到了啊 拿到了是这样子的 current

27:04.490 --> 27:08.730
配级1 一起配级15 count 21 啊 然后接下来的话 这边

27:09.690 --> 27:13.370
偷偷配级2 然后叫这个data 这边我们写的是对的吧

27:14.010 --> 27:18.250
啊 就就是这样子的看到没有 current 配级啊 一起配级

27:18.250 --> 27:21.370
count total 配级 大家这边呢 是你的这个data

27:22.330 --> 27:23.370
啊 是你的data

27:25.530 --> 27:28.410
好 回到我们这边 把展开看一下

27:29.930 --> 27:32.890
对了吧 没问题吧 对吧

27:33.610 --> 27:37.530
ok 没问题之后 我把这边 我把它

27:38.570 --> 27:43.060
放到那个 等一下啊 我复制一下

27:46.180 --> 27:52.020
复制一下 我们这边拿到的是这样子的数据

27:53.780 --> 27:56.260
好 来到这边 我们这边呢 就解构

27:57.620 --> 28:03.060
解构出这个data 啊 解构出data 然后接下来拿到的是这样子的数据

28:03.300 --> 28:08.580
拿到是这样子的数据 对吧 好 拿到是这样子的数据之后

28:08.580 --> 28:11.620
然后接下来下一步 我们就需要把这个数据设置到哪里

28:12.180 --> 28:16.740
就设置到这个 issue info 里面啊 我这边的话就set

28:18.980 --> 28:22.340
set issue info 然后把什么

28:23.380 --> 28:27.300
把这个data.data是放进去

28:28.180 --> 28:32.740
你整个这个是data吗 这边这个解构出来data是整个是这个吗 对吧

28:32.900 --> 28:39.300
那这边应该是data.data ok 好 然后接下来这边呢 需要设置一下你的这个page info

28:40.980 --> 28:45.860
page info啊 啊 这边好了 过来

28:47.380 --> 28:50.020
好 然后接下来这边的话就是应该是等于什么

28:50.900 --> 28:54.500
这边是不是就是应该是你的data.这个

28:56.100 --> 29:02.260
啊 current page current page 对吧 好 然后接下来这里

29:03.700 --> 29:06.340
这里应该是你data.

29:07.140 --> 29:08.180
这个一起page

29:10.180 --> 29:13.300
一起page 然后总调售总调售是不是应该是这个 count

29:14.100 --> 29:14.980
data.count

29:16.820 --> 29:23.220
data.count ok 啊 这边的话把那个

29:23.940 --> 29:29.220
问题列表和这个分页啊 这两个把它更新了 ok

29:29.940 --> 29:34.100
好 更新完毕之后然后接下来我现在的话我数据也有了

29:34.580 --> 29:37.620
有了之后 然后接下来我这边是不是就是应该是把它选出来

29:38.420 --> 29:42.820
对不对 好 那接下来这边是一样的 我这边的话我let一个

29:43.380 --> 29:44.900
比如说 issue list

29:46.340 --> 29:49.860
issue list 等于一个空数组

29:50.740 --> 29:53.060
好 然后接下来 这边呢 通过这个 for 循环

29:54.660 --> 29:59.940
for 循环去便利啊 这边let一个 i 等于0 i小于一个

30:00.500 --> 30:02.820
什么 是吧 issue info

30:04.180 --> 30:07.140
info 点认识啊 然后加这边 i加加

30:08.500 --> 30:10.740
好 然后加这边呢 是不是获取到每一个

30:11.940 --> 30:13.460
issue info i

30:14.260 --> 30:19.780
获取到每一个 好 获取到每一个之后 然后接下来他应该干嘛 是不是渲染出来

30:20.820 --> 30:22.740
渲染出来这边一个一个的这个

30:23.700 --> 30:26.980
对不对 渲染出来这边一个一个的啊 这个这个

30:27.460 --> 30:29.780
你这个问题具体了这个一个一个的这个项目

30:30.340 --> 30:35.700
那这个的话很明显我们需要干嘛 是不是很明显是不是也是要单独封装一个组件的

30:36.740 --> 30:39.540
对不对 明显单独要封一个组件好来呗

30:40.340 --> 30:42.900
那我这边的话就在我的component 之下面

30:44.420 --> 30:46.500
封装一个啊 叫做 issue

30:47.300 --> 30:48.420
这个items

30:49.220 --> 30:50.100
点gsm

30:53.670 --> 30:57.670
啊 这边rsf啊 这个的话是每一条

30:57.910 --> 31:01.990
每一条

31:03.830 --> 31:08.070
每一条这个问答的项目

31:09.590 --> 31:11.350
啊 把这个删了

31:12.150 --> 31:12.390
ok

31:13.110 --> 31:18.790
好 然后接下来的话在这边 这边的话咱们就引入一下 把这个组件引入一下

31:21.530 --> 31:25.210
然后这里引入这个组件 import

31:26.650 --> 31:27.770
issue item

31:28.730 --> 31:29.210
from

31:30.010 --> 31:31.450
然后component

31:32.570 --> 31:34.410
下面的 issue item

31:35.770 --> 31:36.090
ok

31:36.810 --> 31:38.490
好 然后接下来的话这里

31:39.770 --> 31:40.890
这里的话 然后

31:41.610 --> 31:43.690
你们会不会觉得我在工地给你们讲课呀

31:45.530 --> 31:47.690
我感觉我就像在工地在给你们讲课一样

31:48.410 --> 31:50.730
好 然后接下来的话 这边 issue item

31:50.730 --> 31:54.570
啊 这边的话是不是应该是把你的每一条把它传过去啊

31:54.570 --> 31:56.010
哎 不不不 写错了

31:56.010 --> 31:57.450
我怎么写到这里来了

31:57.450 --> 31:58.250
啊 是不是这里

31:59.690 --> 32:02.410
啊 这边这边这个for循环 然后接下来这边拿到每一项

32:02.410 --> 32:03.690
每一项是不是应该传过去

32:04.410 --> 32:07.690
对不对 说我们在使用 issue item的时候

32:07.690 --> 32:09.690
啊 这边的话我们给一个 issue

32:10.730 --> 32:12.810
issue info等于

32:13.690 --> 32:14.090
这边

32:15.130 --> 32:17.050
ok 啊 这边通过for循环

32:17.770 --> 32:21.530
通过for循环 然后接下来这边拿到这个通过 issue info

32:21.530 --> 32:22.090
这个 i

32:22.730 --> 32:25.850
就拿到每一条 对不对 每一条就刚才这边

32:26.570 --> 32:30.570
刚才这边 然后这里是每一条的这个信息啊

32:31.130 --> 32:35.210
对不对 每一条的信息 然后又传给谁 传给这个 issue item

32:36.570 --> 32:39.930
对不对 好 然后接下来这边呢 这样一个一个的这个组件

32:39.930 --> 32:42.650
我把它干嘛呢 我把它铺洗到啊 这边

32:43.290 --> 32:46.730
issue list 就这个数组 数组 然后接下来点

32:47.770 --> 32:48.250
铺洗

32:49.930 --> 32:50.970
怎么把它铺洗进去

32:52.410 --> 32:55.690
对吧 把它铺洗进去啊 这边呢 你还需要给个key啊

32:56.170 --> 33:01.770
不然到时候会提示你没有key 这边我们就key的话 我们就用这个i来当中我们的key

33:02.570 --> 33:07.610
可不可以啊 可以吧啊 好 来我们这边呢 我们先来试验一下

33:07.610 --> 33:11.690
看一下这边好不好使啊 我们这边先随便写啊 这边问答项目

33:12.970 --> 33:17.130
问答项目啊 我们先保存一下 看一下这边

33:19.210 --> 33:23.290
看一下这边啊 这边的话啊 我们这边还没还没有放过来

33:24.250 --> 33:29.370
我们这边 issue list 然后他就应该放到那里 他是不是就是应该是放到这里

33:31.850 --> 33:32.890
对吧 保存

33:34.410 --> 33:42.250
出来没有 出来了吧 对不对 你看这边15个问答那边啊 就问答项目 问答项目15个

33:42.250 --> 33:44.970
好 我们现在的话只需要把什么 是把我们的这个

33:46.090 --> 33:48.730
把它写好就可以了 对不对

33:48.970 --> 33:57.050
好 那我们这边 这边呢 首先的话 然后把那个样式引入啊 还是把样式引入

33:57.690 --> 34:00.410
be important styles from

34:01.210 --> 34:05.850
然后components 不是components这个css

34:07.050 --> 34:08.970
css 下面的

34:09.930 --> 34:12.730
issue item module css

34:13.450 --> 34:16.650
ok 好 然后再这边的话class name

34:18.730 --> 34:22.970
等于一个styles.container

34:24.250 --> 34:27.370
ok 好 然后接下来这边 这边的话 我们来看一下

34:28.330 --> 34:34.090
这边的话 大字是这样子来分的 呃 首先 首先这边有一个回答数

34:34.650 --> 34:37.770
对吧 然后这边呢会有个浏览 然后接下来在这边

34:38.810 --> 34:43.610
这边是你对应的这个问题内容 ok 也就是我这边那是这样子来分的

34:44.330 --> 34:49.720
为大家画一下 我真的感觉就像在工地上课呀

34:50.360 --> 34:53.400
哈哈哈 好 然后接下来这边首先这里

34:54.280 --> 34:58.040
然后接下来这边 ok 然后接下来的话这边

34:59.160 --> 35:04.280
我是这样子分的啊 你如果就是你觉得你不想这样子分 你有其他分的这个方式

35:04.760 --> 35:09.160
啊 你这边就可以把这改一下就可以 对不对 代码的话是很灵活的

35:09.720 --> 35:15.000
啊 这边分成三块 三块之后 然后加这边上面是这个标题 下面的话 然后加这边

35:16.120 --> 35:19.640
分别两块 我大字是这样子来分的 ok

35:20.200 --> 35:21.400
好 那接下来这边来呗

35:23.320 --> 35:26.920
那这边回到我们的代码 那我这边的话就是首先回答数

35:28.280 --> 35:28.920
回答

35:30.600 --> 35:34.680
数啊 然后接下来下面是浏览数

35:36.040 --> 35:37.160
浏览数

35:38.520 --> 35:40.920
ok 好 然后再这边的是问题内容

35:42.520 --> 35:48.040
问题内容啊分成这三块啊 那一块一块来写 首先这边div

35:48.760 --> 35:53.320
然后这边class name等于style 是点 issue number

35:55.480 --> 35:59.320
啊 好 然后在这里面 在这里面的话就是一个div

36:00.520 --> 36:04.600
这个div 这边的话是这个你这边传递过来的probs

36:05.800 --> 36:09.400
probs 然后点 issue info

36:11.800 --> 36:13.320
issue info

36:14.280 --> 36:17.240
然后点是吧 我们来看一下

36:20.410 --> 36:26.330
这里来看一看这边啊点什么你这边是title 把它再展开一下

36:27.370 --> 36:28.250
这里有一个什么

36:29.530 --> 36:29.930
呃

36:30.890 --> 36:32.650
这边是不是commenter number

36:33.450 --> 36:37.050
对吧 这个点commenter number

36:37.690 --> 36:39.930
啊 好 然后下面div

36:40.650 --> 36:41.530
然后回答

36:42.490 --> 36:48.890
ok 好 然后浏览数 浏览数的话也差不多 我把复制过来复制过来的话 然后我看一下啊

36:50.570 --> 36:53.050
啊 这边这个容器写错了 这边是nam

36:55.050 --> 36:58.410
nam ok 好 这边这边那是浏览

37:00.010 --> 37:04.570
浏览浏览的话这边对应的是什么 所以一个叫做scan number

37:05.930 --> 37:06.650
scan number

37:07.850 --> 37:10.730
ok 好 保存一下 来看一看

37:14.390 --> 37:22.950
是不是出来了 对吧 哎 像这边出来了啊 好 出来之后 然后接下来的话是这个问题的这个内容啊 这边div

37:24.230 --> 37:26.870
div 然后接下来这边class

37:29.620 --> 37:33.380
啊 不知道这节课真的是 到时候大家听的时候这个

37:34.180 --> 37:35.300
他声音真的是

37:36.260 --> 37:39.460
无敌了 好 然后在这边首先一个container

37:39.940 --> 37:44.820
啊 在下里面 里面的话就是首先第一个 第一个是你的这个标题

37:45.300 --> 37:48.260
对吧 是标题啊 这边class name

37:48.980 --> 37:49.460
等于

37:50.660 --> 37:56.660
啊 这边有个style style的话 这边是个top 啊 这边分成两部分 一个是top 一个是bottom

37:57.220 --> 38:01.460
ok 啊top top这边的话就应该是什么 所以就是应该是你的标题啊

38:02.180 --> 38:06.580
啊 这边就是啊 props 点 issue info

38:08.260 --> 38:09.300
issue info

38:09.700 --> 38:12.660
然后点 看一下这个title

38:15.160 --> 38:17.560
在在这里 是吧 issue title

38:18.920 --> 38:20.040
点 issue title

38:21.000 --> 38:22.120
ok啊 保存

38:23.080 --> 38:23.880
好 来看一下

38:24.520 --> 38:29.880
是不是出来了 对吧 标题就出来了啊 标题出来之后 然后下下面

38:31.400 --> 38:34.680
下面的话 这边啊 分成左右

38:35.960 --> 38:38.440
这边又分成左右啊 这边div

38:39.400 --> 38:40.920
然后class name

38:41.800 --> 38:45.880
等于一个styles left 以及什么呢 right

38:47.320 --> 38:50.840
好 left 是什么 我们来看一下 left left 是不是他的这个分类

38:51.880 --> 38:56.920
是分类信息 但是你注意 现在我们的这个分类信息 我们这边 现在拿到的分类信息是什么

38:57.560 --> 38:59.560
你看 是一个type id

39:01.080 --> 39:05.560
看到没有 是个type id 你最终的话 你不可能选择一个 选择一个这个在这吧

39:06.040 --> 39:11.640
你最终的话 你是要根据你的这个type id 干嘛呀 是不是这边显示你对应的

39:12.680 --> 39:19.560
这个分类 对不对 对应的这个分类啊 说这边的话 你看这边 其实还有这个

39:20.120 --> 39:23.320
就这里 这里其实还是有这个细节处理的

39:24.360 --> 39:27.160
啊 你不要小看 小看就是在这一小块 包括这里

39:27.720 --> 39:32.120
这里 一会儿渲染这个用户名 这里也是啊 渲染用户名 你看这边用户名

39:32.760 --> 39:35.560
拿到的是什么 是不是拿到是一个user id

39:36.440 --> 39:42.600
啊 那你这边 你最终要根据这个user id来显示什么呢 来显示这个对应的这个名字

39:43.800 --> 39:48.680
看到没有啊 你看 做项目的时候 其实就是这样子的 就各种各样的这种细节

39:49.640 --> 39:52.520
有些细节 就是你这边 眨眼一看好像没什么

39:53.160 --> 39:56.360
但是你在写的时候 你会发现 哇 有些时候处理起来还是挺麻烦的

39:57.000 --> 40:05.560
ok 好 那我们这边来处理一下啊 咱们这边先把那个先把日期写了吧 这边他有个日期 咱们这边十半

40:07.640 --> 40:14.120
啊十半写个日期啊日期说起来日期这边拿到的是一个什么呢 拿到的是一个时间戳

40:15.720 --> 40:24.600
10这里看到没有 issue debt拿到的是一个什么 拿到的是一个时间戳啊 那这个时间戳是不是也要做转换

40:24.920 --> 40:33.560
对吧啊 那我们这边怎么做呢 这个时间戳的话 咱们写一个辅助函数啊 所以我们来到这边

40:35.080 --> 40:39.720
来到我们的代码里面 我们在src下面新建一个叫做utils

40:40.920 --> 40:47.640
新建一个这个目录 好 这个目录的话 就是我们的这个工具放我们的一些工具 好 那我们这边tools

40:48.120 --> 40:52.040
点ks 啊 这边呢 就是放置一些工具函数

40:53.960 --> 40:57.720
放置一些工具函数

40:59.000 --> 41:04.200
ok 好 那我这边呢 就直接把那个格式化时间戳的那个代码就把他拿过来了哈

41:05.640 --> 41:06.760
啊 直接把他拿过来

41:09.320 --> 41:16.280
然后就在这边拿过来啊 这边的话这个大家可以看一下这个我们之前做那个个人博客的时候是用过的

41:17.000 --> 41:21.320
我不知道大家还记不记得啊 之前那个个人博客实际上是写过这个

41:22.360 --> 41:25.080
写没写过写过的啊 这个format date

41:25.960 --> 41:31.160
对不对啊 然后我这边让我把他这次再改了一下 这边的话就是 除了接受一个

41:31.880 --> 41:35.320
时间戳以外 这边还接受第二个参数 叫做part

41:36.200 --> 41:39.480
叫做part part 然后现在这边呢 根据你的这个part

41:40.120 --> 41:43.320
你如果传的是一二 那我就渲染这样子的格式

41:43.800 --> 41:48.680
你如果传的是碳 我就是渲染这个10分秒 然后就不会渲染这个

41:49.400 --> 41:55.400
连月日啊 如果是一二碳 就是这个连月日10分秒 如果是time week

41:55.800 --> 41:58.680
那就是10分秒 然后下第几周啊 就星期几

41:59.560 --> 42:05.080
啊 然后下如果什么都没传 那就默认的最完整的 连月日10分秒星期几

42:05.640 --> 42:07.400
我们以前的话是不是就直接渲染这个

42:08.120 --> 42:10.200
对 但我发现就是你在这儿渲染

42:11.000 --> 42:17.320
在这儿渲染了太长了 这边呢 其实就选一个连月日就可以了啊 从我这边加了第二个参数

42:18.280 --> 42:23.640
好 我们把这个的话 我们把他引入进来 回到这边啊 我们这边import

42:27.030 --> 42:28.550
这个from

42:29.910 --> 42:33.510
然后这边呢 是utils 下面的tools

42:36.570 --> 42:42.870
好 然后接下来的话 这边format 嗯 这里

42:43.190 --> 42:48.390
啊 这边的话 然后应该是什么 是format

42:49.190 --> 42:56.710
format date 然后把什么 是把你这边props 点issue info 点这个issue

42:58.950 --> 42:59.830
issue date

43:01.510 --> 43:05.190
是不是传过去啊 大家这边再传第二个参数 一二

43:06.550 --> 43:09.350
就只显示连月日 好 来 我这边 我来看一下

43:09.910 --> 43:15.990
好 这边是出来了 对 连月日出来了啊

43:16.630 --> 43:21.430
好 连月日出来之后 然后接下来咱们来解决那个比较麻烦的

43:21.750 --> 43:24.790
一个是什么呢 一个是关于这个分类

43:25.430 --> 43:30.950
这个是在哪个位置 在这个位置 对吧 一个是关于这个分类啊 一个是关于这个用户

43:31.590 --> 43:33.350
好 这个分类该怎么做呢

43:35.510 --> 43:38.950
那么这一块的话 就涉及到要获取整个

43:39.750 --> 43:43.670
类型的这个信息了 也就是说获取哪一块 获取这一块

43:45.030 --> 43:47.910
获取这一块 类型的这个信息

43:48.550 --> 43:53.270
ok 那类型的这个信息呢 实际上就是会涉及到这个多个组件共享的

43:53.270 --> 43:58.950
比如你看这边 问答也有 书记也有 对不对 说这一块的话我们就应该是通过什么

43:58.950 --> 44:03.990
是通过数据仓库去发售 对不对啊 所以说我们这边的话我们import

44:04.310 --> 44:09.350
import一个这个 use dispatch

44:10.070 --> 44:14.070
啊 大家这边 from from什么呢 from这个react

44:15.670 --> 44:21.030
reduct dispatch 然后还有一个是 use selector

44:23.110 --> 44:25.990
selector ok 好 然后现在在这里

44:26.790 --> 44:29.110
在这里的话 一开始咱们去获取一下

44:30.070 --> 44:37.510
use selector 然后接下来这边拿到这个仓库 拿到这个仓库 然后再返回这个

44:38.150 --> 44:40.550
state点type 但我们现在是不是还没写

44:41.350 --> 44:47.590
对不对 在在在在在这里啊 还没写 这边现在只写了一个user slice 啊 马上会写啊

44:48.310 --> 44:51.190
好 然后接下来这边的话 const一个

44:52.950 --> 44:55.990
type list type list

44:56.710 --> 44:59.670
ok 好了 你现在的话 我们把这个写下

45:00.950 --> 45:03.430
这边这边那就是应该是一个type

45:05.670 --> 45:09.430
然后slice 点j s

45:11.030 --> 45:13.030
ok 啊 这边的话一样的

45:15.270 --> 45:21.190
啊 不是不是那个装修的叫声 就是电脑的这个风扇声 我真的是服了

45:22.150 --> 45:26.390
啊 真的是服了 现在装修没有敲了 这电脑又开始烧起来了

45:27.590 --> 45:32.070
好 然后接下来这边create slice啊 好 然后接下来的话 这边

45:32.790 --> 45:34.710
是不是就一样的 const

45:35.430 --> 45:39.830
一个type s nice 等于一个create s nice

45:41.190 --> 45:46.710
ok 好 这边首先的话是name name 对于是type

45:47.510 --> 45:49.910
好 然后接下来的话是这个initio

45:50.870 --> 45:57.990
initio stat 啊 这边呢 就是一个type list type list

45:58.790 --> 46:03.110
啊 一开始的话对应的是一个什么 这个空数座啊 这个就是存储

46:04.390 --> 46:08.230
存储所有的类型

46:09.510 --> 46:13.190
对吧 好 然后接下来的话 这边有一个 reducers

46:14.790 --> 46:15.910
reducers

46:17.190 --> 46:20.710
啊 啊 这边呢 就是应该是有一个初始化

46:21.590 --> 46:22.390
一个初始化

46:23.750 --> 46:30.470
好 初始化的话 这里涉及到是不是发送请求啊啊 首先我们这边的话来到这边啊 我们新增一个

46:31.510 --> 46:31.990
type

46:32.870 --> 46:39.430
点ges 啊 这就是type相关的啊 import request from

46:40.390 --> 46:42.790
当前目录下面的request

46:44.070 --> 46:46.950
ok 啊 这边的话来看一下这个接口啊

46:47.750 --> 46:49.430
这边分类

46:50.150 --> 46:56.710
分类分类类型模块啊 这边获取所有类型 你看这个就不存在什么分页

46:57.350 --> 47:02.230
啊 所以这边的话就是你要考虑清楚 就有些是不需要分页 有些是要分页的

47:02.470 --> 47:05.190
什么是不需要分页的啊 比较像这种类型啊

47:05.750 --> 47:09.750
类型的话 我默认他类型的话不会太多 对吧 你最多分几十个类

47:10.150 --> 47:12.790
啊 但这个的话要根据你这个具体的这个需求啊

47:13.350 --> 47:15.750
啊 然后说说我这边就是获取所有的类型

47:15.750 --> 47:21.110
但是像有些东西你就不能够就是一次性获取所有的 比如说什么 比如说这个问答列表

47:21.670 --> 47:25.910
因为随着你比如说你这个网站的运营 你的问答列表是不是会越来越多

47:26.550 --> 47:33.190
对不对 项目越来越多啊 包括这个书籍 书籍也是 你到后面的话是不是会越来越多

47:33.750 --> 47:34.390
对不对

47:35.030 --> 47:39.940
好 然后回到我们这边 回到啊 回到这里

47:40.420 --> 47:45.620
啊 所以这边就是获取所有的类型啊 这边app是这个 回头这边就把所有的类型啊

47:45.700 --> 47:49.060
所有的类型啊 就可以拿得到 ok 复制一下

47:50.100 --> 47:53.940
啊 回到这边 这边的话就是获取所有类型

47:55.140 --> 48:00.340
获取所有的类型啊 这边的话就是export

48:01.620 --> 48:04.340
function 然后get type

48:06.540 --> 48:08.380
对吧啊 这边return

48:08.940 --> 48:09.660
request

48:10.140 --> 48:12.540
啊 ur ur 这个 url

48:13.100 --> 48:13.900
等于一个这个

48:15.020 --> 48:16.860
好 然后接下来这边这个message

48:17.500 --> 48:18.140
message

48:18.380 --> 48:19.020
等于get

48:19.820 --> 48:20.860
ok 搞定

48:21.260 --> 48:23.500
啊 搞定之后呢 回到我们的type list

48:25.420 --> 48:28.540
好 这边的话 我们就首先 import

48:29.100 --> 48:30.940
这个get type

48:31.500 --> 48:33.100
啊 然后下来这边front

48:34.220 --> 48:37.020
然后 api 下面的这个type

48:37.580 --> 48:43.500
啊 先把他拿到 拿到之后 这边的话 涉及到一步请求 这边上是不是得引入那个一步的那个方法

48:44.060 --> 48:47.420
这上面来着 create a sink

48:48.220 --> 48:49.180
然后trunk

48:50.780 --> 48:51.100
对吧

48:51.900 --> 48:53.100
trunk unk

48:53.900 --> 48:55.020
create a sink trunk

48:55.420 --> 48:57.340
好 这边的话是不是需要你导出一个方法

48:57.900 --> 48:58.620
export

48:59.420 --> 49:00.060
const

49:00.380 --> 49:02.940
那加这边get type list

49:05.110 --> 49:06.470
get type list

49:07.190 --> 49:11.190
啊 到时候外面那个在dispatch的时候 是不是就是 dispatch 这个方法啊

49:12.070 --> 49:15.110
对不对啊 这边create a sink trunk

49:18.020 --> 49:20.740
啊 这边首先第一个 第一个是他的名字

49:21.300 --> 49:22.820
名字呢 这边就是type

49:22.820 --> 49:24.180
然后get type list

49:24.500 --> 49:26.260
啊 一般就是什么呢 一般就是你这边

49:26.980 --> 49:28.420
呃对应的你这边是type

49:28.740 --> 49:31.940
对吧 再加上你这个名字啊 一般取名都是

49:32.340 --> 49:33.380
就按照这个约定

49:34.180 --> 49:36.260
啊 你看他官网就是按照了这个约定

49:36.340 --> 49:36.740
啊

49:37.380 --> 49:40.500
好那第二个是什么 第二个是不是就是发送一步请求

49:41.300 --> 49:41.780
sink

49:44.980 --> 49:45.380
ok

49:45.860 --> 49:47.540
好 然后接下来的话我们这里

49:48.260 --> 49:49.780
接受一下action

49:50.420 --> 49:51.380
接受一下action

49:52.180 --> 49:53.860
哦对 接受一下action

49:53.860 --> 49:56.180
好 然后接下来这边发请求const

49:57.140 --> 49:58.340
呃 response

50:00.420 --> 50:01.140
response

50:01.140 --> 50:03.220
等于一个await

50:05.060 --> 50:05.860
await什么

50:06.580 --> 50:07.380
get type

50:11.000 --> 50:13.640
对不对 好 然后回头的话 我们这边我们来看一下

50:14.760 --> 50:15.800
看一下response

50:18.250 --> 50:19.290
看一下response

50:21.700 --> 50:22.100
ok

50:22.980 --> 50:28.820
好 然后这里的话我看把这个导出 导出 我们这边还需要把这个reducer把导出

50:29.780 --> 50:30.500
export

50:31.220 --> 50:31.860
default

50:32.580 --> 50:34.100
type slice

50:35.780 --> 50:36.980
点这个reducer

50:38.020 --> 50:42.260
所以把导出 导出之后 然后接下来在你的这个store这边

50:42.820 --> 50:44.500
啊 这边的话你就需要引入

50:45.860 --> 50:48.980
import一个这个type reducer

50:49.940 --> 50:50.740
然后from

50:51.540 --> 50:54.100
当前目录下面的type slice

50:54.740 --> 50:56.820
好 让家这边一葫芦画标

50:56.820 --> 50:58.500
是把这写上type

50:59.060 --> 51:00.500
对应的是type reducer

51:01.380 --> 51:02.900
对吧啊 把它挂上去

51:03.540 --> 51:06.260
呃挂上去之后 然后接下来在这边

51:06.740 --> 51:10.260
这边的话 你开始的话拿到了就是一个什么呢 拿到了就是个空

51:10.260 --> 51:11.300
啊 来我们这边来看一下

51:11.860 --> 51:12.500
type list

51:12.980 --> 51:14.660
type list 然后接下来它就会去拿点

51:15.060 --> 51:16.340
所以就会拿到这个字啊

51:16.980 --> 51:19.300
对不对 一开始是个空速组啊

51:19.700 --> 51:20.980
那我们这边来看一下 是不是

51:22.900 --> 51:24.020
然后type list

51:26.020 --> 51:29.770
哎 type list

51:30.730 --> 51:31.770
好 这边保存

51:34.010 --> 51:35.930
好 保存之后 然后加这边来看一下

51:37.210 --> 51:37.690
怎么样

51:38.250 --> 51:39.290
是不是拿到了是空速组

51:39.930 --> 51:40.330
对不对

51:40.890 --> 51:42.730
好 拿到了是空速组之后

51:42.730 --> 51:44.410
然后接下来的话 咱们这边

51:45.450 --> 51:46.490
这边做什么呢

51:46.490 --> 51:48.330
这边的话 这里就应该是

51:48.650 --> 51:50.170
User effect

51:52.330 --> 51:53.130
User effect

51:56.580 --> 51:58.180
好 这边的话有没有依赖

52:00.020 --> 52:02.500
啊 这里啊 咱们就让它执行一次就可以了

52:02.500 --> 52:04.180
啊 在这里面干什么呢

52:04.180 --> 52:05.540
这里面 if

52:06.340 --> 52:07.780
你这个type list

52:09.060 --> 52:10.900
啊 你这边里面没有数据

52:11.620 --> 52:13.780
没有数据的话 我这边就干嘛

52:13.780 --> 52:14.740
是发送请求

52:16.020 --> 52:19.460
这边的话 就是派发这个axie

52:20.500 --> 52:22.500
啊来发送请求

52:23.300 --> 52:26.500
对不对 获取到数据以后

52:27.140 --> 52:28.100
填充到

52:28.980 --> 52:29.540
哪里

52:29.540 --> 52:30.500
是状态倉库

52:32.580 --> 52:33.540
是这样子的流产

52:34.180 --> 52:34.660
对不对

52:34.660 --> 52:35.940
好 所以我们这边的话

52:36.580 --> 52:37.140
const

52:37.780 --> 52:38.980
一个dispatch

52:39.620 --> 52:40.820
等于一个user

52:42.420 --> 52:43.060
dispatch

52:43.860 --> 52:45.620
啊 然后接下来在这里

52:45.620 --> 52:47.220
这里的话就是应该是dispatch

52:47.220 --> 52:48.020
dispatch谁

52:48.980 --> 52:49.620
dispatch谁

52:50.180 --> 52:52.340
是不是你这边导出了这个方法呀

52:53.220 --> 52:53.620
对不对

52:54.180 --> 52:55.380
啊 所以说我们这边的话

52:55.380 --> 52:56.580
就把它引入一下

52:57.300 --> 52:58.100
import

52:59.140 --> 53:00.580
get type list

53:01.620 --> 53:02.100
from

53:03.460 --> 53:04.100
from那里

53:04.900 --> 53:06.740
啊 然后这边的话是

53:07.940 --> 53:11.300
redox下面的type slice

53:12.260 --> 53:12.820
ok

53:13.460 --> 53:14.820
好 然后接下来这里

53:14.820 --> 53:17.460
dispatch get type list

53:17.460 --> 53:18.260
这个方法

53:18.660 --> 53:20.420
ok 那你的代码就会来到哪里

53:20.420 --> 53:21.220
是不是来到这里

53:21.220 --> 53:23.060
它就会执行这边这个异部

53:23.060 --> 53:23.620
函数

53:23.620 --> 53:24.980
啊 来我们这边来看一下

53:25.940 --> 53:26.420
保存

53:29.690 --> 53:31.370
哦 这边报错了

53:31.850 --> 53:32.730
报了个什么错

53:34.170 --> 53:34.570
看一下

53:35.370 --> 53:36.490
啊 user effect

53:36.490 --> 53:37.210
你拿的分的

53:37.210 --> 53:38.330
啊 这个小问题 是吧

53:39.210 --> 53:40.490
好 来到这边

53:40.490 --> 53:42.090
我们把这个user effect

53:43.610 --> 53:45.450
user effect

53:46.010 --> 53:46.810
把它引入一下

53:47.770 --> 53:48.490
好 引入之后

53:48.490 --> 53:49.370
然后重新刷新一下

53:50.330 --> 53:50.810
好 这边

53:51.450 --> 53:52.010
来看一下

53:54.550 --> 53:55.190
是不是拿到了

53:56.470 --> 53:57.670
这个是最开始的

53:57.670 --> 53:58.630
啊 这边是不是拿到了

53:59.990 --> 54:00.310
对不对

54:00.870 --> 54:01.430
就拿到了

54:01.990 --> 54:02.950
好 拿到了之后

54:02.950 --> 54:03.830
然后接下来的话

54:03.830 --> 54:04.310
下一步

54:05.030 --> 54:05.430
下一步

54:05.430 --> 54:05.910
有同学说

54:05.910 --> 54:07.030
哎 你这边打赢了这么多次

54:07.030 --> 54:08.390
你会犯这么多请求吗

54:08.390 --> 54:09.190
啊 不会

54:09.190 --> 54:10.470
你看我这边做了一个判断

54:11.030 --> 54:13.270
你如果type list点认识

54:13.990 --> 54:15.190
这边的话是什么

54:15.190 --> 54:16.390
是不是就是空的时候

54:16.390 --> 54:17.830
我这边是不是才会去发请求

54:18.710 --> 54:19.270
对不对

54:19.270 --> 54:19.990
发请求之后

54:19.990 --> 54:21.270
然后回头拿到的数据

54:21.270 --> 54:23.670
我就会填冲到这个状态仓库里面

54:23.670 --> 54:24.390
那下一次的话

54:24.390 --> 54:25.750
那这边的话是不是就不会再发了

54:26.550 --> 54:26.870
对不对

54:27.350 --> 54:27.990
不会再发了

54:27.990 --> 54:28.470
啊

54:29.430 --> 54:30.870
好 然后接下来的话

54:30.870 --> 54:31.270
这里

54:32.550 --> 54:34.470
嗯 回到哪里

54:34.470 --> 54:35.350
回到这边

54:35.350 --> 54:36.950
啊 这边这边的话

54:36.950 --> 54:38.150
咱们就需要干嘛呀

54:38.150 --> 54:40.070
是不是填冲到状态仓库

54:41.030 --> 54:45.190
啊 填冲返回的数据

54:45.190 --> 54:48.390
到状态仓库

54:48.390 --> 54:50.150
啊 那我们以前用的是什么

54:50.150 --> 54:51.030
以前的话是不是就是

54:51.030 --> 54:52.390
这边通过这个action

54:53.510 --> 54:54.150
对不对

54:54.150 --> 54:55.350
通过这个action

54:55.350 --> 54:56.550
action 然后接下来的话

54:57.190 --> 54:57.670
这里

55:00.070 --> 55:02.310
这里会写一个这个reducer

55:03.270 --> 55:03.750
对吧

55:03.750 --> 55:04.630
写个reducer

55:04.630 --> 55:06.470
然后再这边这个action去pive

55:06.470 --> 55:07.830
就是触发这个reducer

55:07.830 --> 55:08.790
那把这个数据

55:08.790 --> 55:10.070
把它填冲进去

55:10.150 --> 55:11.830
好 我们之前的话是这样子写的

55:11.830 --> 55:12.790
啊 这样子写行不行呢

55:12.790 --> 55:14.550
这里这里这样写的话也可以

55:15.270 --> 55:16.150
也可以

55:16.150 --> 55:17.110
然后它官网的话

55:17.110 --> 55:19.270
实际上还就是提供了一种

55:19.270 --> 55:20.310
另外的一种写法

55:20.310 --> 55:21.590
好 这边把另外一种写法

55:21.590 --> 55:22.470
也给大家讲一下

55:22.470 --> 55:22.630
哈

55:24.550 --> 55:26.230
这边我们来收一下

55:26.230 --> 55:30.230
叫做reducer

55:30.790 --> 55:31.510
reducer

55:33.350 --> 55:34.710
然后在这里

55:34.710 --> 55:36.310
这里然后我记得是哪

55:36.310 --> 55:37.270
哪一个地方来着

55:38.150 --> 55:39.270
Connect

55:39.270 --> 55:40.310
Hooks

55:41.590 --> 55:42.390
Hooks

55:44.150 --> 55:45.430
我想一下啊

55:45.430 --> 55:46.630
这个应该是redux

55:47.190 --> 55:48.630
redux tokit

55:50.070 --> 55:51.590
应该是它提供的

55:52.550 --> 55:53.590
get started

55:54.070 --> 55:55.430
然后我看一下api

55:56.550 --> 55:59.270
api下面应该会有一个

55:59.270 --> 55:59.830
就这里

56:00.310 --> 56:01.910
Creator Async Trunk

56:02.390 --> 56:02.710
这里

56:03.430 --> 56:05.350
那它这边的话提供了一种

56:05.350 --> 56:05.990
这种写法

56:06.870 --> 56:09.110
叫做这个extra reducers

56:10.150 --> 56:10.870
看了没有

56:10.870 --> 56:12.630
extra reducers

56:12.630 --> 56:14.390
这个翻译成中文叫什么

56:14.390 --> 56:15.990
额外的reducer

56:16.630 --> 56:18.150
啊 这个额外的reducer的话

56:18.150 --> 56:20.150
就是专门用来处理这个

56:20.150 --> 56:20.950
异补结果的

56:21.670 --> 56:22.710
这个我们记一下吧

56:22.710 --> 56:23.750
在笔记里面记一下

56:26.070 --> 56:27.110
好 这边的话

56:27.110 --> 56:28.790
这个是之前的那个弹设

56:28.790 --> 56:29.510
哈

56:29.510 --> 56:30.310
这边第六个

56:31.270 --> 56:31.750
关于

56:33.430 --> 56:35.510
关于这个redux中

56:36.950 --> 56:38.070
将什么呢

56:38.070 --> 56:38.790
将这个

56:39.430 --> 56:40.230
预布

56:41.190 --> 56:43.190
获取到的数据

56:43.910 --> 56:46.230
填充到状态倉库

56:47.430 --> 56:47.830
啊

56:48.390 --> 56:49.110
好 之前

56:49.670 --> 56:51.270
我们介绍了

56:52.070 --> 56:53.030
一种方式

56:54.150 --> 56:55.190
是通过什么呢

56:55.190 --> 56:57.590
是通过这个action

56:59.110 --> 56:59.590
action

57:00.390 --> 57:02.390
来派发一个reducer

57:03.110 --> 57:05.430
派发一个reducer

57:06.950 --> 57:08.070
reducer

57:08.070 --> 57:08.710
啊

57:08.710 --> 57:11.350
从而实现

57:11.350 --> 57:12.390
这个

57:12.390 --> 57:13.670
状态

57:13.670 --> 57:14.710
填充

57:15.270 --> 57:15.830
对吧

57:15.830 --> 57:17.030
我们之前的这个user

57:17.030 --> 57:18.070
是不是就这么写的

57:18.710 --> 57:19.830
你回忆一下

57:19.830 --> 57:20.710
user

57:20.710 --> 57:22.470
user这边是不是就是啊

57:22.470 --> 57:23.190
对呀

57:23.190 --> 57:23.830
哎

57:24.630 --> 57:25.830
要么user没有吧

57:25.830 --> 57:26.310
呵

57:27.030 --> 57:28.550
哎呀 让我记错了

57:28.550 --> 57:30.870
那那就是那个学生管理系统

57:30.870 --> 57:32.310
把那个学生管理系统

57:32.310 --> 57:33.110
把他打开

57:33.750 --> 57:35.190
打开看一下啊

57:36.070 --> 57:36.950
这边的话

57:37.750 --> 57:39.430
给入门篇

57:39.430 --> 57:40.870
然后我们是第几章

57:40.870 --> 57:41.750
第二章是吧

57:41.750 --> 57:42.950
第二章这边这个收官

57:43.590 --> 57:44.550
啊 课堂代码

57:45.430 --> 57:46.550
然后就这个

57:46.550 --> 57:47.350
把他打开

57:48.070 --> 57:49.670
这个里面好像有个服务器

57:49.670 --> 57:51.030
我们只打开这个就可以了

57:53.990 --> 57:54.390
OK

57:55.590 --> 57:57.350
好 让大家我们这边让我们来看一下

57:57.910 --> 57:59.030
redux

57:59.030 --> 58:00.630
redux stus nice

58:02.070 --> 58:02.470
这里

58:03.190 --> 58:04.790
我们之前是不是这样子来写了

58:04.790 --> 58:05.190
对呀

58:05.190 --> 58:06.150
我把这个写个图

58:07.110 --> 58:07.990
哎呀

58:07.990 --> 58:09.270
真的是服了

58:10.630 --> 58:11.750
这楼上真的是

58:12.310 --> 58:13.190
灯灯灯的

58:15.750 --> 58:19.030
例如之前所写的

58:20.070 --> 58:21.430
我感觉我楼都要垮了

58:22.390 --> 58:26.150
之前所写的学生管理系统

58:26.870 --> 58:28.070
啊 也不知道你们听得到不

58:31.350 --> 58:31.750
这里

58:32.310 --> 58:33.590
你看我们之前是不是这样子写了

58:33.590 --> 58:35.270
你这边的话会有一个

58:35.430 --> 58:37.830
我们之前命名叫做状可API是吧

58:37.830 --> 58:39.990
我这边那一样的可以叫做状可API

58:40.950 --> 58:42.150
在在这里

58:43.430 --> 58:44.710
在然后加type

58:45.110 --> 58:46.870
我这边一样的可以命名叫状

58:46.870 --> 58:48.070
这个状可API

58:48.070 --> 58:49.670
啊 但我现在的话我就没必要了

58:49.670 --> 58:51.430
这边的话我会介绍另外一种方式

58:52.070 --> 58:53.430
那用哪种无所谓

58:53.830 --> 58:54.950
啊 用哪种无所谓

58:54.950 --> 58:55.910
你自己看着办

58:56.310 --> 58:57.750
你想用哪种就用哪种

58:58.470 --> 59:00.390
好 我们把这个stu这边

59:00.790 --> 59:02.710
OK 我们之前的话是采用的是这种方式

59:02.710 --> 59:04.550
大家这边是派发一个这个

59:05.670 --> 59:07.110
action 啊action的话就是什么

59:07.110 --> 59:08.870
是不是就是你这边所写的这个

59:09.990 --> 59:11.270
在在在这里

59:11.270 --> 59:12.790
你这边所写的这个reducer

59:13.350 --> 59:14.950
对不对 这种方式是可以的

59:15.910 --> 59:18.070
好 这边让给大家介绍一种新的方式

59:18.630 --> 59:20.790
新的方式的话就是他这边官网所写的

59:22.150 --> 59:22.550
看到没有

59:23.030 --> 59:25.270
那官网的话在在这里

59:26.310 --> 59:27.990
在这里他这边的话会有一个什么呢

59:27.990 --> 59:30.550
有一个这个叫做extro reducers

59:31.270 --> 59:34.470
啊好 这个的话他就是专门来处理这个异步的

59:35.270 --> 59:35.750
OK

59:37.830 --> 59:41.830
然后他这里你在这个处理异步的时候拿到了是吧

59:41.830 --> 59:43.830
拿到了之后这边直接return

59:44.870 --> 59:45.350
看到没有

59:45.750 --> 59:46.870
直接return啊

59:46.870 --> 59:48.150
也就是说我们这边的话

59:48.710 --> 59:50.150
我们拿到这个resbounce

59:50.710 --> 59:53.430
我们拿到的resbounce是这个是吧

59:53.430 --> 59:55.110
好 然后加我们这边直接return

59:56.630 --> 59:59.830
return resbounce.data

01:00:00.790 --> 01:00:01.830
直接返回

01:00:01.830 --> 01:00:03.510
好 他整个这个是一个什么呢

01:00:03.590 --> 01:00:05.990
整个这个的话他是会返回一个promise

01:00:06.550 --> 01:00:07.990
会返回一个promise的话

01:00:07.990 --> 01:00:08.870
然后你在这里

01:00:10.230 --> 01:00:11.990
你可以写个这个extro

01:00:13.910 --> 01:00:14.710
extro

01:00:15.830 --> 01:00:16.950
然后reducers

01:00:18.790 --> 01:00:20.870
OK 这个是专门处理异步结果的

01:00:22.070 --> 01:00:22.710
专门

01:00:24.390 --> 01:00:29.830
专门处理异步的这个reducer

01:00:31.270 --> 01:00:31.830
OK

01:00:31.830 --> 01:00:33.030
他这边怎么做呢

01:00:33.110 --> 01:00:34.710
这边的话他就会有三种状态

01:00:35.830 --> 01:00:38.390
这里就会有

01:00:38.950 --> 01:00:40.150
我记得是三种啊

01:00:40.150 --> 01:00:40.630
我看一下

01:00:41.510 --> 01:00:42.790
我记得是三种状态

01:00:44.550 --> 01:00:45.030
在这里

01:00:46.070 --> 01:00:46.390
呃

01:00:48.470 --> 01:00:50.230
我看一下dispatch

01:00:51.670 --> 01:00:52.390
options

01:00:56.710 --> 01:00:58.150
这里啊对了三种

01:00:58.150 --> 01:00:58.870
看到没有

01:00:58.870 --> 01:01:00.230
pending啊

01:01:00.230 --> 01:01:02.630
在这个fulfilled reject

01:01:03.590 --> 01:01:04.470
这个眼熟吧

01:01:04.470 --> 01:01:04.870
同学们

01:01:05.590 --> 01:01:06.310
这个眼没眼熟

01:01:06.950 --> 01:01:07.670
眼熟吧

01:01:07.670 --> 01:01:08.390
这个就是什么

01:01:08.390 --> 01:01:10.630
是不是就是你promise的这个状态

01:01:10.630 --> 01:01:11.350
对了

01:01:11.350 --> 01:01:11.750
pending

01:01:11.750 --> 01:01:14.470
pending的话就还是在等待的这个状态

01:01:14.470 --> 01:01:15.110
fulfilled

01:01:15.110 --> 01:01:18.230
fulfilled的是不是就是你的这个promise

01:01:18.230 --> 01:01:19.590
是不是以绝状态

01:01:19.590 --> 01:01:19.910
对不对

01:01:19.910 --> 01:01:21.190
大家这个reject

01:01:21.190 --> 01:01:22.470
reject的话就是这个

01:01:23.110 --> 01:01:23.670
拒绝了

01:01:24.550 --> 01:01:25.350
就拒绝了

01:01:25.350 --> 01:01:26.550
然后我们只需要什么呢

01:01:26.550 --> 01:01:28.950
我们只需要这个fulfilled的状态

01:01:28.950 --> 01:01:30.710
啊说说我们这边让我们可以这样子来写

01:01:31.670 --> 01:01:32.710
这边

01:01:32.710 --> 01:01:34.710
啊我们这边哪个方法

01:01:34.710 --> 01:01:36.710
什么get type list

01:01:36.710 --> 01:01:37.990
对不对

01:01:37.990 --> 01:01:39.190
get type list

01:01:39.190 --> 01:01:39.830
好

01:01:39.830 --> 01:01:40.790
然后在这边点

01:01:40.790 --> 01:01:43.190
它如果是fulfilled状态

01:01:43.190 --> 01:01:45.830
啊然后接下来我们这边对应

01:01:45.830 --> 01:01:47.670
set

01:01:47.670 --> 01:01:49.190
啊pull out

01:01:51.190 --> 01:01:52.790
啊啊这里不是pull out

01:01:52.790 --> 01:01:54.710
啊对可以结构

01:01:54.710 --> 01:01:55.990
结构出来这个pull out

01:01:55.990 --> 01:01:57.030
啊好

01:01:57.030 --> 01:01:58.710
然后接下来的话这里就是

01:01:58.710 --> 01:01:59.190
set

01:01:59.190 --> 01:02:00.310
set

01:02:01.030 --> 01:02:01.910
点

01:02:01.910 --> 01:02:03.110
type list

01:02:03.110 --> 01:02:05.670
那就等于一个pull out

01:02:07.190 --> 01:02:07.830
看到没有

01:02:07.830 --> 01:02:09.030
就可以这样子来写

01:02:09.030 --> 01:02:10.470
啊可以这样子来写

01:02:10.470 --> 01:02:12.470
但你这边就是通过这边

01:02:12.470 --> 01:02:14.470
接受那个状可API

01:02:14.470 --> 01:02:16.070
然后就通过我们之前的方式

01:02:16.070 --> 01:02:17.350
就dispatch

01:02:17.350 --> 01:02:19.510
dispatch一个这里的这个reducer

01:02:19.510 --> 01:02:20.310
可不可以

01:02:20.310 --> 01:02:21.590
啊也可以

01:02:21.590 --> 01:02:22.710
啊也可以

01:02:22.710 --> 01:02:23.270
OK

01:02:23.270 --> 01:02:24.470
就这个就随便你自己

01:02:24.470 --> 01:02:26.870
啊反正我这边给大家介绍一下这种方式

01:02:26.870 --> 01:02:28.630
让它官网的话它这边就介绍了

01:02:29.510 --> 01:02:30.710
官网这边就用的

01:02:30.710 --> 01:02:32.230
你看这边数据用的这种方式

01:02:32.230 --> 01:02:33.750
它这边呢是一个

01:02:33.750 --> 01:02:35.270
呃这边接受一个bounder

01:02:35.270 --> 01:02:37.750
啊它这个写法和我这还有点不一样啊

01:02:37.750 --> 01:02:39.670
你看它这边的话这个extro

01:02:40.310 --> 01:02:41.750
这个reducer是

01:02:41.750 --> 01:02:44.230
它这边呢是首先是反回一个这个对象

01:02:44.870 --> 01:02:45.830
它是反回一个对象

01:02:45.830 --> 01:02:48.390
我们这边呢是直接对应的只是一个对象

01:02:48.390 --> 01:02:48.870
对不对

01:02:48.870 --> 01:02:50.150
它反回一个对象

01:02:50.150 --> 01:02:51.030
啊那加上这边呢

01:02:51.030 --> 01:02:51.910
它是因为是个函数

01:02:51.910 --> 01:02:53.670
它这边就接受一个叫做bounder

01:02:54.310 --> 01:02:56.710
bounder这边呢就点and kiss

01:02:57.670 --> 01:02:59.030
啊调用and kiss

01:02:59.030 --> 01:03:00.230
然后加这里面是一样的

01:03:00.230 --> 01:03:00.870
看到没有

01:03:00.870 --> 01:03:03.030
它这边非器user by id

01:03:03.030 --> 01:03:05.190
啊如果是full field的时候

01:03:05.190 --> 01:03:07.990
啊然后加这边拿到你的这个一部的数据

01:03:07.990 --> 01:03:09.430
把它添加进去

01:03:09.430 --> 01:03:11.270
非器user by id是什么

01:03:11.270 --> 01:03:13.590
非器user by id是不是就是它的这个

01:03:13.590 --> 01:03:14.310
这个方法

01:03:14.790 --> 01:03:15.590
这个一部方法

01:03:16.310 --> 01:03:16.790
对不对

01:03:16.790 --> 01:03:18.150
啊所以你也可以看它这儿的

01:03:19.670 --> 01:03:21.110
啊这是关于这个

01:03:21.110 --> 01:03:22.310
好来我们来看一下吧

01:03:22.310 --> 01:03:23.270
来看一下好不好使

01:03:23.430 --> 01:03:27.830
好我们这边的话回到这里

01:03:27.830 --> 01:03:29.270
然后我们在哪里看

01:03:29.270 --> 01:03:30.870
在redux里面看

01:03:30.870 --> 01:03:31.350
过来没有

01:03:32.710 --> 01:03:33.510
过来没有

01:03:33.510 --> 01:03:33.990
过来了吧

01:03:34.710 --> 01:03:36.070
这已经过来了

01:03:36.070 --> 01:03:36.710
对不对

01:03:36.710 --> 01:03:38.630
啊状态常哭了就已经拿到了

01:03:38.630 --> 01:03:42.390
啊好拿到之后

01:03:42.390 --> 01:03:43.670
然后接下来的话

01:03:43.670 --> 01:03:44.790
回到我们这边

01:03:45.590 --> 01:03:46.550
回到这边

01:03:46.550 --> 01:03:47.750
那这边就简单了呗

01:03:48.390 --> 01:03:49.110
你现在的话

01:03:49.110 --> 01:03:50.550
你的这个type list里面

01:03:51.190 --> 01:03:51.990
是不是存放的

01:03:51.990 --> 01:03:53.270
就是你所有的这个

01:03:54.310 --> 01:03:54.950
啊type

01:03:54.950 --> 01:03:55.910
对不对

01:03:55.910 --> 01:03:58.150
那我这边就可以根据你的这个

01:03:58.150 --> 01:03:59.030
type list

01:03:59.030 --> 01:04:00.710
然后我这边又有type list

01:04:00.710 --> 01:04:01.910
就是type的这个id

01:04:03.030 --> 01:04:03.510
就这里

01:04:04.950 --> 01:04:06.790
这里我有你所有的这个列表

01:04:06.790 --> 01:04:08.870
那将我这边又有每一项的这个id

01:04:08.870 --> 01:04:10.870
那我这边能不能拿到这个type name

01:04:11.430 --> 01:04:12.310
可以吧

01:04:12.310 --> 01:04:13.110
对不对

01:04:13.110 --> 01:04:14.150
好来我们把这写一下

01:04:16.390 --> 01:04:18.870
好这边的话会用到antd里面的一个组件

01:04:18.870 --> 01:04:20.950
啊把这个组件我把它引过来

01:04:22.630 --> 01:04:24.310
这个组件的话叫做tag

01:04:26.230 --> 01:04:27.270
在下面

01:04:29.960 --> 01:04:30.520
tag

01:04:31.400 --> 01:04:31.960
在这里

01:04:35.080 --> 01:04:35.640
tag

01:04:35.640 --> 01:04:36.040
啊你看

01:04:36.040 --> 01:04:37.240
这这个很简单啊

01:04:37.240 --> 01:04:37.800
这边

01:04:37.800 --> 01:04:38.840
看到没有啊

01:04:38.840 --> 01:04:39.560
tag

01:04:39.560 --> 01:04:40.280
大家这边的话

01:04:40.280 --> 01:04:42.360
就是你引入这个tag

01:04:42.360 --> 01:04:45.000
然后加这边给这个不同的这个carn就可以了

01:04:45.000 --> 01:04:45.720
啊

01:04:45.720 --> 01:04:46.040
好

01:04:46.040 --> 01:04:46.920
然后我们这边的话

01:04:47.880 --> 01:04:48.760
import

01:04:50.360 --> 01:04:50.840
tag

01:04:51.800 --> 01:04:52.280
from

01:04:53.320 --> 01:04:53.880
antd

01:04:54.840 --> 01:04:55.480
ok

01:04:55.480 --> 01:04:55.800
好

01:04:55.800 --> 01:04:57.480
大家我这边让我再订一个数组

01:04:57.480 --> 01:04:58.840
这个数组里面就

01:04:58.840 --> 01:05:01.000
这个存放这个不同的颜色

01:05:01.000 --> 01:05:01.240
好

01:05:01.240 --> 01:05:02.840
这边我就直接把这数组拿过来啊

01:05:04.040 --> 01:05:04.360
好

01:05:04.360 --> 01:05:06.120
这边的话再来订一个数组

01:05:08.200 --> 01:05:08.680
啊

01:05:08.680 --> 01:05:09.240
carn

01:05:09.240 --> 01:05:09.960
哎呀

01:05:09.960 --> 01:05:10.200
好

01:05:10.200 --> 01:05:11.640
然后接下来在这下面

01:05:11.640 --> 01:05:14.360
下面然后进行这个放置的时候

01:05:14.360 --> 01:05:15.880
这边的话在left

01:05:17.080 --> 01:05:17.720
是吧

01:05:17.720 --> 01:05:17.960
好

01:05:17.960 --> 01:05:18.520
我们这边呢

01:05:18.520 --> 01:05:19.400
就是tag

01:05:21.720 --> 01:05:22.040
好

01:05:22.040 --> 01:05:22.840
然后

01:05:23.880 --> 01:05:24.920
中间的话是什么呢

01:05:26.440 --> 01:05:27.480
中间的话是tag

01:05:27.480 --> 01:05:27.880
lame

01:05:27.880 --> 01:05:28.760
taglame的话

01:05:28.760 --> 01:05:30.040
你这边的话需要

01:05:30.680 --> 01:05:31.560
把它拿到

01:05:31.560 --> 01:05:32.840
所以我们在这前面

01:05:32.840 --> 01:05:33.240
嗯

01:05:33.240 --> 01:05:33.560
这边

01:05:34.280 --> 01:05:34.760
const

01:05:35.480 --> 01:05:36.280
一个这个type

01:05:37.080 --> 01:05:37.960
它等于什么呢

01:05:37.960 --> 01:05:39.000
等于type list

01:05:39.560 --> 01:05:40.520
type list是什么

01:05:41.160 --> 01:05:42.920
是不是你所有的类型列表

01:05:42.920 --> 01:05:43.400
就是这个

01:05:44.680 --> 01:05:45.240
就是这个

01:05:46.360 --> 01:05:46.680
啊

01:05:46.680 --> 01:05:47.480
type list

01:05:47.480 --> 01:05:48.360
是不是它

01:05:48.360 --> 01:05:49.000
对不对

01:05:49.000 --> 01:05:49.240
好

01:05:49.240 --> 01:05:50.280
然后接下来

01:05:50.280 --> 01:05:51.400
这边的话点

01:05:52.280 --> 01:05:52.680
fand

01:05:53.320 --> 01:05:54.360
它是个数组吗

01:05:54.360 --> 01:05:56.280
数组我可以调fand的方法吧

01:05:56.280 --> 01:05:56.920
对不对

01:05:56.920 --> 01:05:57.160
好

01:05:57.160 --> 01:05:58.040
然后接下来我这边

01:05:59.160 --> 01:05:59.400
啊

01:05:59.400 --> 01:06:00.440
拿到每一项

01:06:00.440 --> 01:06:01.560
拿到每一项之后

01:06:01.560 --> 01:06:02.760
这样我返回什么呢

01:06:02.760 --> 01:06:04.120
返回你这个item

01:06:05.000 --> 01:06:06.520
点下滑线

01:06:06.520 --> 01:06:06.920
id

01:06:07.560 --> 01:06:07.800
啊

01:06:07.800 --> 01:06:08.760
全等于什么呢

01:06:08.760 --> 01:06:10.120
全等于我这边pops

01:06:10.120 --> 01:06:10.920
点issue

01:06:12.040 --> 01:06:13.400
issueinfo

01:06:13.400 --> 01:06:14.840
点type id

01:06:15.880 --> 01:06:16.280
对不对

01:06:16.280 --> 01:06:17.800
就两个id相等的

01:06:18.600 --> 01:06:19.800
我把这个type

01:06:19.800 --> 01:06:20.680
把它返回

01:06:20.680 --> 01:06:20.840
啊

01:06:20.840 --> 01:06:21.960
这边的话就可以拿得到

01:06:22.040 --> 01:06:23.400
这边大家可以看一下

01:06:23.400 --> 01:06:23.640
好

01:06:23.640 --> 01:06:24.680
所以点到type

01:06:27.450 --> 01:06:27.690
ok

01:06:28.490 --> 01:06:28.810
啊

01:06:28.810 --> 01:06:29.690
这边大家就看得到

01:06:29.690 --> 01:06:30.570
是不是拿到了

01:06:30.570 --> 01:06:31.050
对不对

01:06:31.050 --> 01:06:32.170
我们一个都拿到了

01:06:32.170 --> 01:06:32.330
好

01:06:32.330 --> 01:06:33.130
拿到之后呢

01:06:33.130 --> 01:06:33.850
就好办了呗

01:06:34.650 --> 01:06:35.930
那就好办了呗

01:06:35.930 --> 01:06:36.250
好了

01:06:36.250 --> 01:06:36.570
这边呢

01:06:36.570 --> 01:06:37.210
就直接什么

01:06:38.090 --> 01:06:38.570
这边呢

01:06:38.570 --> 01:06:39.530
就直接是

01:06:40.970 --> 01:06:41.530
type

01:06:41.530 --> 01:06:42.250
这个type

01:06:42.810 --> 01:06:43.770
点什么

01:06:43.770 --> 01:06:44.410
type name

01:06:46.170 --> 01:06:47.050
对不对

01:06:47.050 --> 01:06:47.210
好

01:06:47.210 --> 01:06:47.690
然后接下来

01:06:47.690 --> 01:06:48.010
这边

01:06:48.010 --> 01:06:48.970
这边要给颜色

01:06:50.330 --> 01:06:50.650
啊

01:06:50.650 --> 01:06:51.130
这边的话

01:06:51.130 --> 01:06:52.170
你要给个颜色

01:06:52.810 --> 01:06:53.690
这个颜色的话

01:06:53.690 --> 01:06:54.330
我们之前呢

01:06:54.330 --> 01:06:54.970
是不是设置了

01:06:54.970 --> 01:06:56.090
一个这个宿主啊

01:06:56.730 --> 01:06:57.290
对不对

01:06:57.290 --> 01:06:57.530
好

01:06:57.530 --> 01:06:58.170
那我们这边呢

01:06:58.170 --> 01:06:59.050
就可以这样子来写

01:07:00.890 --> 01:07:01.290
conner

01:07:02.890 --> 01:07:03.770
conner ar

01:07:04.330 --> 01:07:05.210
这个宿主

01:07:05.210 --> 01:07:06.010
然后接下来

01:07:06.010 --> 01:07:06.170
的话

01:07:06.170 --> 01:07:07.290
它这个下标

01:07:07.290 --> 01:07:08.410
下标是什么呢

01:07:08.410 --> 01:07:09.210
下标的话

01:07:09.210 --> 01:07:10.810
是你这个type list

01:07:12.650 --> 01:07:13.770
type list

01:07:13.770 --> 01:07:15.050
点index of

01:07:16.730 --> 01:07:18.170
index of

01:07:19.050 --> 01:07:20.170
这个type

01:07:21.130 --> 01:07:21.690
就拿到

01:07:21.690 --> 01:07:22.250
你这边

01:07:22.250 --> 01:07:23.850
你在这个type list

01:07:23.850 --> 01:07:25.210
里面是第几个

01:07:25.210 --> 01:07:25.450
啊

01:07:25.450 --> 01:07:25.930
然后接下来

01:07:25.930 --> 01:07:26.650
对什么呢

01:07:26.650 --> 01:07:27.850
对你的这个conner

01:07:30.010 --> 01:07:30.970
conner ar

01:07:30.970 --> 01:07:31.690
点认识

01:07:31.690 --> 01:07:32.090
取

01:07:32.810 --> 01:07:33.770
这个大家看得懂吧

01:07:34.970 --> 01:07:36.090
这个啊

01:07:36.090 --> 01:07:36.890
最基本的啊

01:07:36.890 --> 01:07:37.290
这边呢

01:07:37.290 --> 01:07:38.890
你这个type list index of

01:07:39.450 --> 01:07:40.010
你这边呢

01:07:40.010 --> 01:07:40.810
就是看你这边

01:07:40.810 --> 01:07:41.770
具体是第几个

01:07:42.570 --> 01:07:42.810
好

01:07:42.810 --> 01:07:43.530
我这边来看一下

01:07:44.250 --> 01:07:45.050
就看你这边

01:07:45.050 --> 01:07:46.410
你这边是js

01:07:46.410 --> 01:07:46.810
是吧

01:07:46.810 --> 01:07:47.770
js的话

01:07:47.770 --> 01:07:48.730
这边的话

01:07:48.730 --> 01:07:50.250
对应的这个type list

01:07:50.250 --> 01:07:50.890
是第几个

01:07:51.770 --> 01:07:52.490
这边你看一下

01:07:54.010 --> 01:07:54.890
js

01:07:54.890 --> 01:07:55.770
是不是这边的话

01:07:55.770 --> 01:07:56.490
是第三个

01:07:56.490 --> 01:07:57.130
下标是不是

01:07:57.130 --> 01:07:57.850
二

01:07:57.850 --> 01:07:58.490
对不对

01:07:58.490 --> 01:07:58.650
好

01:07:58.650 --> 01:07:59.450
拿到这个之后

01:07:59.450 --> 01:08:01.050
再对你的整个conner

01:08:01.050 --> 01:08:01.770
conner ar

01:08:01.770 --> 01:08:02.970
点认识取语

01:08:02.970 --> 01:08:03.690
是不是得到二

01:08:03.690 --> 01:08:05.290
那最终只整个这一块

01:08:05.290 --> 01:08:06.490
得到了就是二

01:08:06.490 --> 01:08:08.010
二的话得到了就是什么

01:08:08.010 --> 01:08:08.570
012

01:08:08.570 --> 01:08:09.130
是不是它呀

01:08:10.250 --> 01:08:10.570
对不对

01:08:12.250 --> 01:08:12.650
好

01:08:12.650 --> 01:08:13.770
让大家这边来看一下

01:08:14.410 --> 01:08:14.970
就出来了

01:08:16.010 --> 01:08:16.410
出来没有

01:08:17.290 --> 01:08:18.090
就出来了

01:08:18.090 --> 01:08:18.250
哎

01:08:18.250 --> 01:08:19.130
你看我们为了解决

01:08:19.130 --> 01:08:19.610
这一个

01:08:20.330 --> 01:08:20.810
其实这边

01:08:20.970 --> 01:08:22.250
其实背后做了很多事情

01:08:22.970 --> 01:08:24.410
做项目其实就是这样子的

01:08:25.530 --> 01:08:26.250
OK

01:08:26.250 --> 01:08:26.730
就这样子

01:08:27.930 --> 01:08:28.090
好

01:08:28.090 --> 01:08:28.970
然后还有一个

01:08:29.850 --> 01:08:30.730
这边还有一个什么

01:08:31.450 --> 01:08:32.490
这边还有一个

01:08:32.490 --> 01:08:34.250
就是谁提问的

01:08:35.370 --> 01:08:36.090
对不对

01:08:36.090 --> 01:08:37.210
究竟是谁提问的

01:08:37.210 --> 01:08:38.890
这边的话会涉及到一个

01:08:39.530 --> 01:08:40.090
用户

01:08:40.090 --> 01:08:40.970
它的泥撑

01:08:41.530 --> 01:08:42.970
这里显示的是泥撑

01:08:42.970 --> 01:08:43.530
你不可能

01:08:44.090 --> 01:08:45.210
显示用户id吧

01:08:45.850 --> 01:08:47.130
不可能显示那个

01:08:47.850 --> 01:08:48.490
这边

01:08:49.370 --> 01:08:50.170
我看这边有没有

01:08:50.810 --> 01:08:51.530
没了

01:08:51.530 --> 01:08:54.570
就你这边不可能显示这个用户id在这吧

01:08:54.570 --> 01:08:54.970
对不对

01:08:54.970 --> 01:08:57.930
你肯定是显示这个用户对应的这个泥撑

01:08:57.930 --> 01:09:00.010
那这边又会涉及到什么

01:09:00.010 --> 01:09:01.610
是又会涉及到这边

01:09:01.610 --> 01:09:03.210
要获取这个用户的信息

01:09:04.250 --> 01:09:04.970
对不对

01:09:04.970 --> 01:09:05.610
OK

01:09:05.610 --> 01:09:06.170
好来呗

01:09:08.170 --> 01:09:08.410
好

01:09:08.410 --> 01:09:10.090
我们刚才哪个地方有个打印啊

01:09:11.850 --> 01:09:13.050
我好像没有打印了呀

01:09:13.850 --> 01:09:14.170
这边

01:09:14.730 --> 01:09:15.610
25行

01:09:18.170 --> 01:09:19.930
25行

01:09:19.930 --> 01:09:20.890
这边没有打印了呀

01:09:21.450 --> 01:09:21.850
哦哦

01:09:21.850 --> 01:09:23.210
这个估计是之前打印的

01:09:23.210 --> 01:09:24.010
现在就没有了

01:09:24.010 --> 01:09:24.810
现在刷新一下

01:09:26.410 --> 01:09:27.770
刷新到没有了

01:09:27.770 --> 01:09:29.130
这边怎么会报了个错呢

01:09:31.400 --> 01:09:32.600
他个NAM

01:09:32.600 --> 01:09:33.400
是12行

01:09:38.700 --> 01:09:39.580
那我想一想啊

01:09:41.980 --> 01:09:43.660
这边的话应该是

01:09:43.660 --> 01:09:44.540
就他一开始

01:09:44.540 --> 01:09:45.100
你看他这边

01:09:45.900 --> 01:09:48.140
cannot read property or modify

01:09:48.140 --> 01:09:48.860
这个是咱们

01:09:48.860 --> 01:09:50.780
就是经常很常见的一个错误

01:09:50.780 --> 01:09:51.420
对吧

01:09:51.420 --> 01:09:52.780
他这边让我大致拆到了

01:09:52.780 --> 01:09:53.740
就是你这边的话

01:09:53.740 --> 01:09:54.700
应该是因为他一开始

01:09:54.700 --> 01:09:55.660
这边是没有的

01:09:56.540 --> 01:09:56.860
对吧

01:09:56.860 --> 01:09:57.900
一开始你这边拿的话

01:09:57.900 --> 01:09:58.940
你刚才是刷新吗

01:09:58.940 --> 01:09:59.500
刷新操作

01:09:59.500 --> 01:10:01.180
这边一开始是没有的

01:10:01.180 --> 01:10:01.660
没有的话

01:10:01.660 --> 01:10:03.260
他这边是个空速组

01:10:03.260 --> 01:10:03.980
空速组的话

01:10:03.980 --> 01:10:05.980
你这边去读他的名字

01:10:05.980 --> 01:10:07.020
这些他是读不到的

01:10:07.740 --> 01:10:08.700
他是读不到的

01:10:08.700 --> 01:10:09.020
好了

01:10:09.020 --> 01:10:09.500
我们这边呢

01:10:09.500 --> 01:10:10.220
就这样子

01:10:11.100 --> 01:10:12.620
问号加个问号点

01:10:12.620 --> 01:10:13.100
你有

01:10:13.100 --> 01:10:14.300
然后再去读

01:10:14.300 --> 01:10:15.100
对吧

01:10:15.100 --> 01:10:15.420
好了

01:10:15.420 --> 01:10:16.220
我们这边来看一下

01:10:17.100 --> 01:10:17.580
好

01:10:17.580 --> 01:10:17.820
OK

01:10:19.420 --> 01:10:19.900
OK

01:10:19.900 --> 01:10:20.300
出来了

01:10:20.300 --> 01:10:21.260
好

01:10:21.260 --> 01:10:21.900
好

01:10:21.900 --> 01:10:23.500
然后接下来的话

01:10:23.500 --> 01:10:24.380
回到我们这边

01:10:28.150 --> 01:10:29.110
我们这里的话

01:10:29.110 --> 01:10:32.470
需要根据用户的id获取用户

01:10:32.470 --> 01:10:34.070
那用户id获取用户

01:10:34.070 --> 01:10:35.430
这个之前是不写了的

01:10:35.430 --> 01:10:36.470
get user by id

01:10:37.350 --> 01:10:37.670
好

01:10:37.670 --> 01:10:38.630
来我们这边的话

01:10:39.430 --> 01:10:39.750
这里

01:10:39.750 --> 01:10:40.710
我们把这个APL

01:10:40.710 --> 01:10:41.510
我们把它引入一下

01:10:42.870 --> 01:10:43.350
这边

01:10:44.310 --> 01:10:44.950
import

01:10:47.740 --> 01:10:48.380
import

01:10:49.100 --> 01:10:50.460
这边我就直接在这发请求了

01:10:51.580 --> 01:10:51.900
好

01:10:51.900 --> 01:10:52.780
然后下这边呢

01:10:52.780 --> 01:10:53.020
是

01:10:54.220 --> 01:10:54.780
API

01:10:56.780 --> 01:10:58.060
API对应的这个

01:10:58.620 --> 01:10:59.020
user

01:11:00.140 --> 01:11:00.540
好

01:11:00.540 --> 01:11:01.820
然后我们在这里

01:11:01.820 --> 01:11:02.700
我们在这里的话

01:11:02.700 --> 01:11:03.740
我们新建一个这个

01:11:04.540 --> 01:11:05.580
维护一个状态

01:11:06.620 --> 01:11:07.020
这边

01:11:07.020 --> 01:11:07.500
use

01:11:08.380 --> 01:11:08.780
set

01:11:09.340 --> 01:11:09.900
我们这边

01:11:10.460 --> 01:11:11.580
维护一个什么呢

01:11:11.580 --> 01:11:12.220
这里

01:11:12.220 --> 01:11:12.780
const

01:11:13.420 --> 01:11:14.220
一个

01:11:14.220 --> 01:11:14.940
user infer

01:11:16.140 --> 01:11:17.100
user infer

01:11:17.740 --> 01:11:18.300
set

01:11:19.180 --> 01:11:19.980
user infer

01:11:21.740 --> 01:11:23.260
然后等于一个

01:11:23.260 --> 01:11:24.060
use set

01:11:26.790 --> 01:11:27.030
好

01:11:27.030 --> 01:11:28.310
一开始是个空数座

01:11:28.310 --> 01:11:29.430
这个拿来存出什么

01:11:29.510 --> 01:11:31.430
存储用户的信息

01:11:35.320 --> 01:11:36.040
ok

01:11:36.040 --> 01:11:37.240
存储用户的信息

01:11:37.800 --> 01:11:38.040
好

01:11:38.040 --> 01:11:39.720
然后接下来在这下面

01:11:40.280 --> 01:11:40.840
下面的话

01:11:40.840 --> 01:11:43.240
我们这边是不是叫发送一部请求

01:11:43.240 --> 01:11:45.160
来获取这个用户的这个信息

01:11:45.800 --> 01:11:46.520
多练

01:11:46.520 --> 01:11:46.760
好

01:11:46.760 --> 01:11:47.400
这边呢

01:11:47.400 --> 01:11:48.120
发送请求

01:11:49.880 --> 01:11:50.600
获取

01:11:51.400 --> 01:11:53.160
用户的信息

01:11:53.720 --> 01:11:54.040
好

01:11:54.040 --> 01:11:54.440
这边呢

01:11:54.440 --> 01:11:55.720
就是async

01:11:56.600 --> 01:11:57.240
fetch

01:11:57.880 --> 01:11:58.680
user data

01:12:01.910 --> 01:12:03.830
s,y,n,c

01:12:03.910 --> 01:12:04.790
这边方形

01:12:06.550 --> 01:12:07.510
好

01:12:07.510 --> 01:12:08.150
然后这边呢

01:12:08.150 --> 01:12:09.110
就是await

01:12:09.750 --> 01:12:11.430
get user id

01:12:11.430 --> 01:12:12.630
然后这边把什么传过去

01:12:13.270 --> 01:12:14.710
这边是不是应该是probs

01:12:14.710 --> 01:12:15.030
点

01:12:15.670 --> 01:12:16.710
issue info

01:12:17.430 --> 01:12:17.750
点

01:12:18.310 --> 01:12:18.710
什么

01:12:18.710 --> 01:12:19.590
是user id

01:12:20.150 --> 01:12:21.670
就是不刚刚给大家看到了的

01:12:21.670 --> 01:12:22.630
或者你看这边

01:12:23.510 --> 01:12:24.790
看这边API文档

01:12:25.670 --> 01:12:26.950
API文档的

01:12:27.510 --> 01:12:27.990
哪一个

01:12:29.910 --> 01:12:30.950
问答是吧

01:12:30.950 --> 01:12:32.310
问答分页获取

01:12:33.910 --> 01:12:34.390
看到没有

01:12:34.390 --> 01:12:34.950
他这边呢

01:12:34.950 --> 01:12:36.070
是不是这个user id

01:12:36.630 --> 01:12:36.950
对吧

01:12:37.510 --> 01:12:37.830
好

01:12:37.830 --> 01:12:38.870
然后接下来的话

01:12:38.870 --> 01:12:40.630
这边拿到用户的信息

01:12:40.630 --> 01:12:41.910
我们这边const

01:12:42.550 --> 01:12:43.750
解构一个data

01:12:43.750 --> 01:12:44.710
我这边就直接写了

01:12:45.350 --> 01:12:46.790
这边解构data

01:12:46.790 --> 01:12:47.190
等于

01:12:47.750 --> 01:12:47.910
好

01:12:47.910 --> 01:12:48.070
来

01:12:48.070 --> 01:12:48.870
我们这边来看一下

01:12:48.870 --> 01:12:49.590
能不能拿到

01:12:51.190 --> 01:12:51.990
能不能拿到

01:12:51.990 --> 01:12:52.150
好

01:12:52.150 --> 01:12:53.030
这边还得调用一下

01:12:53.030 --> 01:12:53.270
是吧

01:12:53.910 --> 01:12:54.470
fetch

01:12:55.030 --> 01:12:55.670
user data

01:12:57.190 --> 01:12:57.590
保存

01:12:59.110 --> 01:12:59.430
好

01:12:59.430 --> 01:13:00.390
这边到来看一下

01:13:02.390 --> 01:13:03.030
刷新一下

01:13:06.420 --> 01:13:06.820
哦

01:13:09.690 --> 01:13:10.330
嗯

01:13:10.330 --> 01:13:12.490
这边怎么没有出来呢

01:13:13.370 --> 01:13:14.010
让我想一想

01:13:16.970 --> 01:13:17.530
这些啥

01:13:18.090 --> 01:13:18.650
好

01:13:18.650 --> 01:13:19.370
这边再来

01:13:19.370 --> 01:13:20.250
是不是拿到了

01:13:20.970 --> 01:13:21.690
看到没有

01:13:21.690 --> 01:13:22.650
这每一条问题

01:13:22.650 --> 01:13:23.690
对应了这个用户信息

01:13:23.690 --> 01:13:24.410
是不是就拿到了

01:13:25.050 --> 01:13:25.370
对了

01:13:25.370 --> 01:13:25.930
但

01:13:25.930 --> 01:13:26.810
但其实这些

01:13:26.810 --> 01:13:27.770
这些细节的话

01:13:27.770 --> 01:13:29.050
其实可以优化一下

01:13:29.050 --> 01:13:29.690
比方这边的话

01:13:29.690 --> 01:13:30.570
我只返回什么

01:13:31.130 --> 01:13:32.010
只返回就是

01:13:32.010 --> 01:13:32.410
你比如说

01:13:32.410 --> 01:13:33.930
你的一些常见的一些信息

01:13:33.930 --> 01:13:34.810
比如logging id

01:13:35.290 --> 01:13:36.170
然后还有就是你的

01:13:36.970 --> 01:13:37.690
名字呀

01:13:37.930 --> 01:13:38.410
这些的话

01:13:38.410 --> 01:13:39.930
其实不应该返回的

01:13:39.930 --> 01:13:40.490
这个是属于

01:13:40.490 --> 01:13:41.450
浮气段里面处理

01:13:42.490 --> 01:13:43.770
浮气段里面处理

01:13:43.770 --> 01:13:44.890
这个后期可以优化一下

01:13:46.410 --> 01:13:46.730
好

01:13:46.730 --> 01:13:47.690
反正我们这边的话

01:13:47.690 --> 01:13:48.170
无论如何

01:13:48.170 --> 01:13:48.970
我们就拿到了

01:13:48.970 --> 01:13:49.690
拿到之后

01:13:49.690 --> 01:13:50.250
然后接下来

01:13:50.250 --> 01:13:50.730
咱们这边

01:13:50.730 --> 01:13:51.930
set user info

01:13:53.690 --> 01:13:54.490
把设置进去

01:13:55.050 --> 01:13:55.290
好

01:13:55.290 --> 01:13:56.170
设置进去之后

01:13:56.170 --> 01:13:56.970
然后接下来

01:13:56.970 --> 01:13:57.930
再

01:13:57.930 --> 01:13:58.810
下边

01:13:58.810 --> 01:13:59.370
下边的话

01:13:59.370 --> 01:14:00.650
咱们这边就可以

01:14:00.650 --> 01:14:01.850
来使用了

01:14:01.850 --> 01:14:03.370
这边咱们还是用一个target

01:14:06.340 --> 01:14:06.740
OK

01:14:07.380 --> 01:14:08.340
这个counter

01:14:08.420 --> 01:14:08.900
counter的话

01:14:08.900 --> 01:14:10.180
你就可以把它固定

01:14:10.180 --> 01:14:11.460
这边固定的是这个

01:14:12.340 --> 01:14:13.860
它的一个火山的颜色

01:14:14.900 --> 01:14:15.780
这个是火山吧

01:14:15.780 --> 01:14:16.180
我记得

01:14:16.820 --> 01:14:17.460
我看到

01:14:18.340 --> 01:14:19.060
是不是火山

01:14:20.420 --> 01:14:21.860
我记得这个是火山的意思吧

01:14:23.620 --> 01:14:24.820
我看到

01:14:24.820 --> 01:14:25.380
火山

01:14:26.020 --> 01:14:26.580
没有基础

01:14:27.460 --> 01:14:27.940
好

01:14:27.940 --> 01:14:28.580
然后接下来

01:14:28.580 --> 01:14:29.700
我用的是这个颜色

01:14:29.700 --> 01:14:30.900
然后加在这里面

01:14:30.900 --> 01:14:31.540
这里面的话

01:14:31.540 --> 01:14:32.340
是不是就是应该是

01:14:32.340 --> 01:14:33.220
user info

01:14:33.780 --> 01:14:34.420
对不对

01:14:34.420 --> 01:14:35.060
点什么

01:14:35.620 --> 01:14:36.180
nickname

01:14:37.140 --> 01:14:38.420
那我们这边呢

01:14:38.420 --> 01:14:39.380
还是就是判断一下

01:14:39.380 --> 01:14:40.260
因为一开始的话

01:14:40.260 --> 01:14:41.140
你是什么

01:14:41.140 --> 01:14:42.820
一开始你这个user info

01:14:43.380 --> 01:14:44.580
这边不应该是个空数组

01:14:44.580 --> 01:14:46.740
这边是应该是一个空对象

01:14:47.860 --> 01:14:48.580
想想

01:14:48.580 --> 01:14:49.540
空对象的话

01:14:49.540 --> 01:14:50.180
去访问

01:14:50.180 --> 01:14:50.580
访问的话

01:14:50.580 --> 01:14:52.580
它访问这个属性

01:14:52.580 --> 01:14:53.780
它应该是不会报处的

01:14:54.580 --> 01:14:54.820
OK

01:14:56.340 --> 01:14:56.740
好

01:14:56.740 --> 01:14:57.220
这边的话

01:14:57.220 --> 01:14:57.780
来看一下

01:14:58.820 --> 01:14:59.300
出来了吧

01:15:00.260 --> 01:15:00.900
是不是就出来了

01:15:01.620 --> 01:15:01.940
对不对

01:15:02.580 --> 01:15:02.900
OK

01:15:03.780 --> 01:15:04.100
好

01:15:04.100 --> 01:15:05.140
把这个打一删了吧

01:15:05.780 --> 01:15:06.420
打应

01:15:06.420 --> 01:15:07.540
打应应该是上一次打印的

01:15:08.420 --> 01:15:08.660
OK

01:15:10.180 --> 01:15:10.580
看到没有

01:15:11.220 --> 01:15:11.460
好

01:15:11.460 --> 01:15:12.420
然后我们这个列表

01:15:13.300 --> 01:15:14.020
是不是就出来了

01:15:15.140 --> 01:15:15.460
OK

01:15:16.020 --> 01:15:16.820
那边就出来了

01:15:18.260 --> 01:15:18.500
好

01:15:18.500 --> 01:15:19.620
大家下去的话

01:15:19.620 --> 01:15:21.460
把这一块把它写一下

01:15:22.340 --> 01:15:22.900
把它写一下

01:15:22.900 --> 01:15:23.460
因为我这边

01:15:23.460 --> 01:15:24.980
今天这儿确实太吵了

01:15:26.020 --> 01:15:26.580
太吵了

01:15:27.140 --> 01:15:28.660
把大家把它写一下吧

01:15:28.660 --> 01:15:29.460
我们先下课

01:15:30.180 --> 01:15:30.500
下课

01:15:30.500 --> 01:15:31.060
下几课

01:15:31.060 --> 01:15:32.420
咱们把这后面的

01:15:32.420 --> 01:15:33.460
一个是这个分页

01:15:33.940 --> 01:15:36.500
一个是这个

01:15:36.500 --> 01:15:37.300
这边

01:15:37.300 --> 01:15:39.380
然后这边是不是有两个组件

01:15:39.380 --> 01:15:41.220
那还有一个是这个提问那个组件

01:15:42.020 --> 01:15:43.300
还有个是提问的组件

01:15:43.300 --> 01:15:44.020
还有个是什么

01:15:44.660 --> 01:15:46.020
还有个是就是看详情

01:15:46.660 --> 01:15:46.980
是吧

01:15:46.980 --> 01:15:47.540
详情

01:15:47.540 --> 01:15:48.580
详情进去

01:15:48.580 --> 01:15:49.620
然后又涉及到什么

01:15:49.620 --> 01:15:50.420
详情进去的话

01:15:50.420 --> 01:15:51.620
又涉及到这个评论了

01:15:52.500 --> 01:15:54.260
详情估计还得单独开一节课

01:15:54.980 --> 01:15:55.220
OK

01:15:55.780 --> 01:15:56.820
这节课的话

01:15:56.820 --> 01:15:58.260
大家就先把这个列表

01:15:58.900 --> 01:15:59.860
先把它设出来

01:16:00.500 --> 01:16:00.820
好吧

01:16:01.380 --> 01:16:01.940
OK

01:16:01.940 --> 01:16:02.820
这节课就到这里

01:16:02.820 --> 01:16:03.620
再见

