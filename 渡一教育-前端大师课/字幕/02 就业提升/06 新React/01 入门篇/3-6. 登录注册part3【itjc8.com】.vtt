WEBVTT

00:00.000 --> 00:07.680
OK 好 咱们继续 好 上节课的话咱们把这个注册 注册的话是不是已经搞定了 对吧

00:08.080 --> 00:16.280
我们这节课的话来把这个剩下的这个登录把它做了 登录的话基本上和这个注册 基本上思路是一样的

00:16.720 --> 00:19.200
OK 好 来我们来看一下我们的这个代码

00:20.080 --> 00:23.240
我们现在的话 这边回到我们的这个login form

00:24.120 --> 00:38.800
好吧 这个弄到下面去吧login form 好 然后因为我们这边 我们这边的话它是一个受控逐渐 对吧 它是个受控逐渐 所以用户填写的这些内容啊 用户填写的这些内容啊 最终的话都会记录到哪里

00:39.360 --> 00:49.280
记录到这个login info里面啊 所以我们到时候要做的事情的话 就是你这边点击这个登录的时候 把这个login info提交给这个服务器

00:50.000 --> 00:52.240
对吧 啊 说起来的话 我们这边的话 我们那个

00:53.560 --> 00:58.200
呃 登录 登录的话我看一下啊 这边的话应该是需要添加这个api的

01:01.020 --> 01:06.500
好 我们这边的话我这边设计了有两个api 一个是这个用户登录

01:07.820 --> 01:13.180
这边用户登录啊 这是用户登录的这个api 还有一个的话是根据用户

01:14.180 --> 01:16.340
呃 我看一下 还有一个是

01:18.720 --> 01:27.920
呃 这里的话就用到这个就可以了啊 就用户登录啊 用户登录这边啊 这个userlogin是吧啊 来我们这边的话 我们来添加一个

01:29.120 --> 01:30.080
回到我们代码这边

01:31.440 --> 01:38.740
啊 我们这边的话用户登录用户登录

01:39.660 --> 01:41.980
好 这边的话export

01:43.100 --> 01:43.580
function

01:46.740 --> 01:50.020
userlogin 好 它应该接受参数啊

01:50.900 --> 01:54.420
它这边是不是应该接受你这个传递过来的这个登录的一些信息啊

01:55.540 --> 02:02.180
login一份啊 这边来看一下这个API啊 看这个API啊 这边那是API userlogin

02:02.420 --> 02:07.540
那是一个poster请求 对吧 好 人家这边呢 需要你把这些东西把它带过去

02:08.100 --> 02:09.380
好 我们这边复制它

02:11.220 --> 02:14.660
好 然后接下来的话 这边return

02:15.620 --> 02:16.420
recreate

02:17.380 --> 02:18.580
好 这边url

02:19.300 --> 02:23.860
对应的就是这个 对吧 好 然后加这边这个message

02:24.420 --> 02:25.540
对应的是post

02:26.260 --> 02:35.300
然后加这边这个data data对应的是这个login info啊 把这个先写了 写了之后 然后接下来来到我们的login form

02:35.300 --> 02:39.780
login form 这边我们把这个把这个接口 看数把它引进来

02:40.340 --> 02:45.300
引进来之后 然后接下来来到我们的这个login handle 那这个login handle还是一样

02:45.860 --> 02:52.020
怎么了 就是你这边的话 你不是会写一些验证吗 就这边 这边我们比如说这个是必填 对吧 你比如说没有填

02:52.500 --> 02:57.860
没有填的话 他这边是不会进这个login handle的 对吧 除非什么呢 除非你这边的话都写了

02:58.340 --> 03:04.100
我这边都写了 写了之后 然后接下他这边 我们这边写一下 比如说login handle

03:05.620 --> 03:08.100
login handle 我们保存一下

03:09.300 --> 03:14.900
啊 写了之后 他这边是不是才会进 对吧 这里才会进啊 你如果比如说这边

03:15.300 --> 03:22.500
没有通过的话 你看他是不会进来的啊 这个用组建库 他就这就是这点好 这些都给你封装好了

03:23.380 --> 03:27.620
好 然后接下来的话 咱们来思考这里 这里的话要做什么事情

03:28.820 --> 03:32.980
啊 这边呢 我们先打一下 打一下当前的这个login info

03:34.020 --> 03:36.420
啊login info 保存

03:37.220 --> 03:44.340
保存了之后 再加我们这边 我们来写一下啊 这边点击登录啊 你看这边是不是都拿到了啊login id 让你填的密码

03:44.820 --> 03:50.340
那你这边的这个验子码 还就是这个remember 啊 我这边没有勾勾了的话 这边他就是q

03:50.820 --> 03:57.380
ok 好有这些信息是不是就足够了啊 然后这样我们这边的话就调用这个n不是n的

03:57.940 --> 04:02.580
叫做user knocking 叫什么样来着啊 user knocking对的

04:04.180 --> 04:09.860
啊 其实都该加个api啊 一般我的习惯是就是这边的话 后面加个后维 api

04:10.420 --> 04:15.380
啊 之前写的是没加啊 也不所谓了 好 然后加这边login info

04:16.020 --> 04:22.980
我拿传过去 然后加这边是不是要await 一下啊await 意味着这边要sync 对不对

04:23.460 --> 04:25.060
好 然后加这边const

04:26.340 --> 04:27.700
拿到这个result

04:28.660 --> 04:32.740
ok 好了 规矩 这边的话来打印一下 他给我的这个响应

04:33.380 --> 04:33.780
保存

04:34.660 --> 04:39.620
保存之后 然后加这边清空一下啊 这边走 你看这边的话是什么

04:40.260 --> 04:45.940
验证码错误 对吧 验证码错误 好 然后接下来我们这边刷新一下

04:46.340 --> 04:49.140
用验证码填好 ms s e

04:49.860 --> 04:55.140
走啊 这边 这边data是浪 为什么 因为我这边密码 是不是不对

04:56.020 --> 04:58.900
对不对啊 然后我这边呢 我如果好好填 比如卸节

04:59.540 --> 05:02.260
123456啊 把这验证码刷新一下

05:02.900 --> 05:05.220
然后zprk

05:06.580 --> 05:12.820
啊 这边展开 你看这个是不是就有数据的 并且这边他会给你带一个什么回来 这会给你带个talking 回来

05:13.620 --> 05:16.420
对吧啊 说这边呢 有这么几种情况啊

05:18.020 --> 05:18.500
if

05:19.540 --> 05:25.860
if什么呢 if你result 点data 有data的 那说明什么 是不是说明就是

05:26.580 --> 05:27.780
验证码是正确的

05:29.460 --> 05:30.900
验证码

05:30.900 --> 05:34.820
是正确的 对吧 for the else

05:35.380 --> 05:37.700
l是就说明 你验证码都不正确

05:38.340 --> 05:42.100
你回头看一下 对不对 你的data是浪 你验证码都不正确

05:42.100 --> 05:45.540
好 验证码不正确的话 让我们这边的话就message

05:46.340 --> 05:47.780
message点worry

05:49.620 --> 05:50.820
啊 验证码有误

05:52.740 --> 05:58.100
验证码 他好像是有信息是吧 验证码错误有信息 有信息的话 咱们这边就直接

05:58.820 --> 05:59.460
result

06:00.420 --> 06:03.380
result 点msg

06:04.100 --> 06:09.300
对不对 完事之后 然后你还需要干嘛 是不是重新刷新一下啊 调用这个函数 刷新一下

06:09.860 --> 06:16.260
好 然后接下来进一副 进一副就说明完事了吗 也不是 这边的话是不是要看你这个账号密码

06:16.740 --> 06:19.780
啊 是否正确 对不对 这里其实还有一种可能

06:20.580 --> 06:25.860
还有一种可能 什么可能呢 就是大家还记不记得我最早给大家说过 就是用户是可以进用的

06:26.660 --> 06:29.220
啊 我这边让我清一下后台 我清用一个用户

06:30.180 --> 06:31.460
比如说啊 这个吧

06:32.900 --> 06:35.700
local 然后888

06:37.860 --> 06:41.380
啊 禁用一个用户啊 比如说这边用户 用户列表

06:42.420 --> 06:49.540
嗯 比如说我把这个切捷5给他禁用了 好吧 把这个禁用了 然后禁用了之后 然后接下来我们到这边来

06:50.580 --> 06:52.420
到这边来啊 我们这边登录

06:53.300 --> 07:02.580
卸捷5的密码 初始密码123456 对吧 好 这边呢 是说信一下 qs nr

07:04.420 --> 07:09.780
你看 是不是该账号已被冻结 请联系这个管理员 是不是还有一种这个情况

07:10.340 --> 07:16.420
这个情况是怎么判断的 这个情况的话是你这边返回了这个data这边 这边是包含了用户的这个信息

07:16.660 --> 07:18.500
这边呢 他会有一个inable的

07:19.220 --> 07:24.580
看到没有啊inable是q就说明没有冻结 他就ok的 如果inable的是false

07:25.540 --> 07:27.860
说明什么 说明你的账号是被冻结了的

07:28.820 --> 07:33.060
没有没有啊 所以这边实际上还有一种情况啊 接下来

07:34.980 --> 07:38.820
接下来会有这么几种情况

07:40.020 --> 07:43.700
哪几种呢 首先第一种密码不正确

07:44.580 --> 07:50.500
密码不正确 这是第一种 第二种是什么 账户被冻结

07:51.780 --> 07:57.540
账户被冻结 对吧 第三种 然后账户正常

07:59.060 --> 08:01.300
账户正常

08:02.900 --> 08:04.900
账户正常 然后接下来的话

08:05.860 --> 08:12.340
密码也正确 就能够就是能够真正正常登录啊 能够正常登录

08:13.060 --> 08:17.380
ok 那就来呗 好 这边的话就是首先我们这边const一个

08:18.180 --> 08:21.860
data等于一个result点data

08:22.420 --> 08:28.420
先把这个data先把它拿过来啊 就这边把这data拿过来 这data它是一个什么 是不是 是个对象

08:29.220 --> 08:34.900
是个对象 然后我看是不是啊 对了 是个对象啊 然后接下来你这边这data点data

08:35.620 --> 08:36.100
一副

08:38.020 --> 08:42.180
一副你这边的话 非data点data

08:43.300 --> 08:46.980
说明什么 说明帐号密码不正确 你看一下

08:47.700 --> 08:54.740
帐号密码不正确 让它这边data点data对的是一个什么 就是一个call 对不对 那这种的话说明帐号密码不正确

08:56.020 --> 09:01.140
帐号密码不正确 知道我这个风扇究竟是怎么回事

09:01.940 --> 09:03.940
莫名其妙 它又给我转起来了

09:05.300 --> 09:08.340
好 然后接下来这边的话你就写帐号

09:10.260 --> 09:16.420
帐号或密码不正确 好不正确的话你需要干嘛 是不是重新

09:17.300 --> 09:22.100
刷新一下这个状态码 对吧 好 然后加这边lcif

09:24.500 --> 09:30.500
如果你这边data的点data倒是有 但是你这边data点data点inable的

09:32.260 --> 09:33.140
inable的

09:34.100 --> 09:36.580
说明什么 是不是说明帐号被禁用了

09:37.780 --> 09:41.700
帐号被禁用了啊 那这边呢 是不是也是啊

09:42.980 --> 09:45.620
然后接下来这边啊 这边你给个warring吗

09:47.300 --> 09:49.620
warring啊 帐号被禁用

09:51.060 --> 09:53.940
对 禁用 对吧 好否则

09:55.140 --> 09:58.260
这边 好 那这里的话就是应该是什么 是不是说明

09:59.220 --> 10:00.820
帐号密码

10:01.620 --> 10:05.540
正确 能够这个登录

10:06.500 --> 10:07.060
能够登录

10:08.260 --> 10:13.460
那能够登录的话 那接下来我们这边 我们就要考虑一下能够登录我们这边要干什么

10:14.420 --> 10:16.260
对吧 我们应该做什么事情

10:17.460 --> 10:20.980
我们这边的话 你看他这边是不是给你返回了talking的

10:21.700 --> 10:22.180
同学们

10:22.900 --> 10:26.660
这里是反个talking 对不对 让我这边是不是应该把这个talking存起来

10:27.300 --> 10:34.100
对不对 所以首先第一步存处talking 方便你下次可以直接就登录了

10:34.900 --> 10:37.940
好 这边那就是local storage

10:38.900 --> 10:40.900
点usertalking

10:42.740 --> 10:46.660
等于一个data.talking 首先存处

10:47.540 --> 10:54.420
好 然后接下来的话还需要干嘛呢 还需要是不是就是把你用户 你当前登录了这个用户的这个信息

10:55.140 --> 10:56.260
存处到数据仓库

10:56.740 --> 11:05.780
就和你注册一样 你注册的话 我们刚才是不是把这个用户的信息存到数据仓库了的对吧 那这边也是一样啊将用户的信息

11:08.610 --> 11:08.770
将

11:10.530 --> 11:16.130
用户的信息存储到这个状态仓库

11:18.290 --> 11:25.410
方便后面使用 你后面比如说你要看一个什么个人详情啊之类的我就直接从仓库里面拿就可以了

11:26.050 --> 11:27.650
对吧 我就不需要再发请求了

11:28.370 --> 11:34.290
好 然后接下来你这边你要注意一个东西 就这边的话我是只返回了什么 只返回了logging id

11:34.930 --> 11:40.530
啊 我这边的话没有返回就是过多的这个消息 我当时是怎么想的来着

11:41.890 --> 11:46.290
啊 反正我这边他只返回了个logging id啊 所以这边的话你还得干嘛呢 还得就是

11:47.250 --> 11:48.850
获取一下根据这个logging id

11:50.130 --> 11:56.690
或者根据这个id 根据这个id去获取一下用户信息 ok 啊 这边的话有一个这个接口

11:57.650 --> 12:00.450
啊 其实我服务器那边也可以改 直接把那个

12:01.330 --> 12:08.770
所有信息返回啊 就就也不是所有信息密码不用返回 对吧 密码不用返回啊 除了密码以外的

12:09.330 --> 12:15.970
信息可以把它返回啊 服务器端里边也可以改 但是这个锦线鱼什么呢 锦线鱼就是服务器也是你自己写的

12:16.690 --> 12:24.050
对不对啊 你如果比如说你这个服务器端不是你写的 那你叫和后端商量 那后端人家觉得不能这样子 那你就没办法

12:24.290 --> 12:29.570
啊 没关系 我这边呢 我还有一个看到没有 这边呢 就是根据这个id

12:30.290 --> 12:33.570
来查找这个用户啊 说实话我们这边的话 我们把这边

12:34.210 --> 12:40.210
新添加一个这个接口 这边呢 就是根据这个id来查找这个用户

12:42.450 --> 12:44.930
好 我们这边添加一个根据id

12:46.690 --> 12:47.170
根据

12:48.930 --> 12:49.410
id

12:50.130 --> 12:53.010
来查找用户

12:54.210 --> 12:55.490
这边的话 export

12:56.770 --> 13:01.170
function 然后get user by id

13:02.290 --> 13:07.890
好 你这边你要跟我传一个什么过来 是不传个id过来 对吧啊 让他叫我这边return

13:09.330 --> 13:15.730
return request 啊 这边ural ural对应的是这一块 是吧不知

13:17.570 --> 13:22.290
好 这边的话就是应该对应的是一个支付串模板 那叫这边一个downer

13:23.010 --> 13:26.610
ok 好 message message 它是一个git

13:28.370 --> 13:32.690
git 对吧啊 那这边把他拿过来

13:33.970 --> 13:34.370
这里

13:35.650 --> 13:41.730
把他过来 拿过来之后 然后接下来在这边 这边的话 咱们是不是就是在发个请求

13:42.690 --> 13:47.810
然后把这个id 把它带过去啊 这边呢 就是应该是data

13:48.850 --> 13:52.130
data.data.什么下滑线id

13:52.930 --> 13:53.250
对吧

13:54.850 --> 13:58.770
下滑线id 对吧 把这id带过去啊 这边的话await一下

13:59.810 --> 14:03.890
await 然后接下来这里const一个result

14:05.330 --> 14:07.890
好 这边来看一下能不能拿到这个信息

14:09.410 --> 14:09.810
保存

14:10.850 --> 14:13.570
保存之后 然后把这清空啊 把这个

14:14.370 --> 14:19.010
然后这边的话密码都是正确的 把这验子码重新填一下ez fc

14:19.810 --> 14:20.130
走

14:22.820 --> 14:23.380
拿到了吧

14:24.260 --> 14:28.660
对不对啊 这边拿到信息了啊 拿到信息之后 然后接下来就可以把这个信息

14:29.620 --> 14:33.460
把它放到那个仓库里面啊 这边呢 就是dispatch

14:35.060 --> 14:37.620
就和那个注册是一样的啊 dispatch

14:38.260 --> 14:40.980
这个inlit user info

14:41.860 --> 14:42.900
把这个result

14:44.100 --> 14:44.900
result

14:46.420 --> 14:51.380
点data把拿过去啊 然后这边这边是一个change

14:52.260 --> 14:53.700
倾紧logging status

14:54.340 --> 14:55.300
然后接下来这里

14:56.260 --> 14:57.540
设置是一个chu

14:58.820 --> 15:01.460
对吧 好 然后在这边呢 把那个窗口关闭

15:02.100 --> 15:03.140
关闭的话是这个

15:05.440 --> 15:06.880
ok 调用一下

15:07.520 --> 15:09.760
好 保存 好 来看一下行不行

15:10.400 --> 15:11.120
好 这边的话

15:12.960 --> 15:16.640
刷新一下 好 然后在这边dkns

15:17.280 --> 15:18.640
登录 搞定没有

15:19.360 --> 15:20.800
搞定了吧 对不对

15:22.880 --> 15:24.880
搞定了 大家这边这个redux这边

15:25.440 --> 15:26.080
来看一下

15:28.270 --> 15:30.510
啊 这里是不是这个信息也存过去了

15:31.230 --> 15:33.470
对吧 照理说这边密码不该返回了啊

15:33.870 --> 15:35.150
这密码不应该存到这里

15:35.710 --> 15:40.030
啊 这这些问题呢 后面都是需要就是慢慢细节 慢慢去磨的

15:40.830 --> 15:42.830
知道吧 需要慢慢去磨的一些细节

15:44.030 --> 15:49.790
好 那其他的话 这些信息可以存到本地藏口 什么投降啊 泥撑啊 这些啊 这些可以存过来

15:50.110 --> 15:52.910
ok 好 回头的话 比如说我这边个人详情

15:53.630 --> 15:54.430
啊 比如说我这边

15:55.630 --> 15:56.350
user 1

15:57.630 --> 15:58.670
123456

16:00.030 --> 16:03.470
啊 这边 mp lq

16:04.910 --> 16:06.270
哦 这边冻结了

16:07.150 --> 16:11.150
啊 6m 6m1w

16:12.670 --> 16:14.110
啊 后面的话 比如说我这里

16:15.390 --> 16:19.550
这里这个个人中心 这边是不是要显示你这个用户的一些信息啊

16:19.950 --> 16:21.630
对吧 那这个信息的话就是

16:22.350 --> 16:26.670
你到时候自己就可以直接从那个仓库 就直接拿就可以啊

16:27.790 --> 16:28.830
啊 这是关于登录

16:29.310 --> 16:32.750
好 关于登录的话 然后完事之后 这边会有一个很重要的事情

16:33.150 --> 16:37.150
就是我们这边的话 虽然现在登录是登录了 但是你看这边一刷新

16:37.950 --> 16:39.550
一刷新的话 你看他就没了

16:40.670 --> 16:42.190
看到没有 他就没了

16:42.750 --> 16:45.070
啊 所以我们接下来的话要解决这个问题

16:45.630 --> 16:46.750
这个问题怎么解决呢

16:47.150 --> 16:50.430
大家还记不记得刚才我们这个登录的时候 我们把什么呀

16:50.590 --> 16:51.630
是把这个token

16:52.350 --> 16:57.390
token是存了的 对不对 虽然你那个状态仓库的东西没了 但是我token是存了的

16:57.870 --> 17:01.950
好 所以说我们这边的话 我们再加载这个跟逐件的时候

17:02.430 --> 17:09.150
我们一次 就是第一次进来的时候 我们这边的话 其实就可以根据啊 看你这边有没有这个token

17:10.190 --> 17:14.830
对不对啊 你有这个token 这样我们这边把这个数据把它拿回来

17:15.310 --> 17:17.470
ok 好 那我们这边来看一下

17:18.190 --> 17:20.990
好 这边的话就应该是在哪里

17:21.790 --> 17:23.310
所以就是应该是在你跟逐件

17:24.510 --> 17:25.470
是不是应该是跟逐件

17:27.470 --> 17:29.550
好 我们这边呢 我们先来加一个api

17:30.270 --> 17:35.310
啊 这边的话就和那个个人博客是一样的啊 我们这边加一个叫做恢复登录状态

17:36.430 --> 17:40.510
恢复登录状态好 这边的话来看一下

17:41.230 --> 17:43.230
恢复登录状态啊 在这里

17:43.870 --> 17:47.470
这里是不是会有一个互mi

17:48.030 --> 17:49.070
对吧 互mi

17:49.710 --> 17:55.630
这边的话要求你把这个token值带过去 带过值 带过去之后他到时候的话会把这个你的整个信息

17:56.190 --> 17:57.070
给你返还回来

17:57.630 --> 18:00.270
ok 好 那我们这边的话就export

18:01.470 --> 18:02.990
export function

18:04.430 --> 18:06.510
啊 这边呢 就是get info

18:08.590 --> 18:09.470
get info

18:12.720 --> 18:13.840
啊 这边return

18:14.800 --> 18:19.760
request url url对应的就是应该是这个对吧

18:19.760 --> 18:20.320
互mi

18:21.760 --> 18:25.280
好 然后接下来这边message message应该是什么

18:26.240 --> 18:27.280
应该是一个get

18:28.320 --> 18:29.440
对吧 应该是个get

18:30.000 --> 18:36.000
好了 这边让他要求什么 你看一下 要求就是你这边的话需要把这个token值把他带过去

18:36.880 --> 18:39.840
把token值带过去 那这边的话咱们应该写在哪里

18:40.240 --> 18:44.960
这里的话是不是就是应该是写在这个请求难解那个位置啊

18:45.760 --> 18:50.640
对了啊 说说我们来到这边这个request 这里啊 这边请求难解

18:51.440 --> 18:56.560
啊 这边呢一般就是添加token 那我们现在呢就要添加token了啊 这边呢就是从本地

18:58.320 --> 18:59.520
从本地

19:00.560 --> 19:03.680
然后拿到这个token

19:04.640 --> 19:06.400
拿到token

19:06.960 --> 19:12.000
啊 拿到user token嘛 啊 这边呢就是应该是local storage

19:14.080 --> 19:17.280
local storage点这个get item

19:18.560 --> 19:20.800
啊 这边的话 user token

19:22.880 --> 19:24.800
ok 拿到这个token

19:25.760 --> 19:32.480
好 拿到这个token之后让家给他什么带过去啊 对不对 衣服token 你有token我才带啊 你没有token的话呢

19:32.640 --> 19:36.880
这边就不会进这个衣服 你有这个token 有token的话 让家我这边config

19:37.440 --> 19:41.920
config就是你整个htp请求啊 让家我们这边点haters

19:42.640 --> 19:46.960
啊 给他的这个请求头 然后接下来的话有一个这个属性 那个属性就他

19:47.760 --> 19:49.200
啊 also relation

19:49.920 --> 19:53.760
这个属性好 然后我们给他添加一个这个bary

19:55.280 --> 19:59.200
bary啊对就这个啊 bary 空格啊 注意 这边有个空格

19:59.680 --> 20:05.520
之前很多同学就是这边少写个空格 因为我后就服务器端那边 我在解析token的时候 我这边是以空格分隔的

20:06.160 --> 20:11.920
你如果这边不写空格 你这边不写空格的话 我这边找不到那个空格 找不到那个空格 我后就服务器端那边解析就会爆出

20:14.240 --> 20:17.200
啊 这边加上 加上之后 然后其他就没什么了

20:17.840 --> 20:20.880
对吧 他就会把这个token带过去 带过去之后 然后他自动就会

20:21.520 --> 20:26.640
服务器端那边就会解析看你的token怎么样啊 然后接下来解析完了之后会把一个结果

20:27.120 --> 20:31.120
返还给你 okay 好 那我们这边呢 我们回到这个根主键

20:32.320 --> 20:36.240
回到根主键这边啊 这边呢 咱们就引入一下

20:37.920 --> 20:40.960
这边的话 import 这边就是get

20:41.760 --> 20:44.320
you get infer 我们这边叫啥呀

20:45.280 --> 20:49.440
就叫get infer 是吧啊get info get info from

20:50.480 --> 20:53.520
然后当前目录 是吧 当前目录下面的api

20:54.320 --> 20:59.520
下面的user okay 好 然后加这边这边的话 我们得引入什么

21:00.240 --> 21:01.840
做这个user effect

21:03.600 --> 21:08.800
对吧 user effect 好 然后加在这个位置这个位置 是不是加载

21:09.920 --> 21:14.800
加载根主键的时候 加载根主键的时候

21:15.440 --> 21:19.200
需要什么 是不是需要这个恢复

21:20.320 --> 21:22.240
用户的登录状态

21:24.320 --> 21:27.440
对吧 好 所以这边user effect

21:29.040 --> 21:31.040
啊 这边这边没有依赖

21:31.920 --> 21:36.800
好 然后接下来在这里 这里的话 我们这边就写个sync function

21:38.080 --> 21:39.600
啊 然后这边就做fetch data

21:42.270 --> 21:45.390
fetch data 好 在这边这边那时候就调用这个

21:46.350 --> 21:47.390
fetch data

21:48.510 --> 21:51.070
啊 好 在这里面 在这里面是不是就是await

21:52.030 --> 21:54.910
await这个get info

21:56.110 --> 22:02.510
对吧 好 然后const result等于老规矩 还是先打印看一下

22:03.470 --> 22:05.470
result 好 我们这边保存一下

22:06.270 --> 22:11.550
保存了之后 然后回来来看一下 好 现在我这边是有token的对吧 好 我们这边

22:12.670 --> 22:13.550
刷新一下

22:14.670 --> 22:18.030
你看 这边解析是不是就能够解析出这个数据来

22:19.150 --> 22:23.470
对不对 这边就能够解析出数据来 好 能够解析出数据来之后

22:23.630 --> 22:25.790
然后接下来后面的话 这边就是一样的

22:27.390 --> 22:28.270
接下来

22:28.270 --> 22:30.270
efo

22:30.910 --> 22:34.990
efo 我们先看一下就是如果没有token或者这个token是无效的

22:36.030 --> 22:39.870
比如说我们这边 我们把这个token稍微改一下 你现在的话这边是有效的对吧

22:40.110 --> 22:41.630
好 比我们token有可能过期嘛

22:42.270 --> 22:43.790
对不对 好 那我这边比如说

22:44.510 --> 22:47.870
有这样子 这样子他token就是无效的啊 大家我们这边来看一下

22:48.350 --> 22:49.550
你这边让你刷新一下

22:50.510 --> 22:54.910
你看这边让它是就是什么 406啊 服息段那边给你返回的就是406

22:55.150 --> 22:57.150
登录过期请重新登录

22:57.550 --> 23:01.150
OK啊 所以说我们这边的话我们就可以啊 如果是没有呢

23:01.550 --> 23:04.110
来看一下 如果这边压杆就没有token

23:04.670 --> 23:06.990
没有token第一次啊 第一次那就不会进嘛

23:08.110 --> 23:08.830
就不会进

23:09.550 --> 23:13.550
他这边这个504504这边就爆了一个错啊

23:14.590 --> 23:16.110
这边怎么会爆错呢

23:16.270 --> 23:18.270
504504我们这边写了eve的呀

23:20.270 --> 23:24.270
我们这边写了eve的evetoken 然后就要这边就带一个token过去

23:25.070 --> 23:27.630
这边他响应怎么会爆一个错呢

23:27.870 --> 23:28.670
让我想一想

23:29.150 --> 23:30.190
我知道了

23:30.430 --> 23:31.470
因为你这边

23:35.470 --> 23:36.750
在在在这里

23:36.990 --> 23:41.870
这里啊 你没有token 没有token你这边是不是还是在发起这个get info

23:42.110 --> 23:44.430
对吧 get info 然后接下来他这边就会干嘛

23:44.430 --> 23:45.710
执行互mi

23:45.710 --> 23:46.990
对了

23:47.150 --> 23:52.830
互mi 然后接下来他这边就会调用这个后台来解析

23:52.830 --> 23:54.110
哪怕你这边没有token

23:54.110 --> 23:56.430
让我看这边服务器 服务器还好吗

23:56.430 --> 23:58.190
果然这边服务器就出问题了

23:58.670 --> 24:00.590
好 这边让重新启动一下服务器

24:02.860 --> 24:04.700
OK 把服务器重新启动一下

24:04.700 --> 24:06.940
好 启动了之后然后接下来这边这样子

24:06.940 --> 24:08.860
我们这边让我们加一个判断

24:08.860 --> 24:10.860
对吧 这边eve什么呢

24:10.860 --> 24:14.940
eve这个local storage点get item

24:15.660 --> 24:17.020
如果你能拿到什么呢

24:17.020 --> 24:19.500
能拿到这个 user token

24:20.380 --> 24:21.500
你有 user token

24:21.500 --> 24:22.700
那我这边才干嘛

24:22.700 --> 24:23.900
是不是才进行一个解析

24:25.820 --> 24:26.780
是不是还是这样子的

24:27.340 --> 24:27.900
对不对

24:27.900 --> 24:28.780
也是这样子的

24:29.420 --> 24:31.180
好 现在的话就不会爆出了

24:32.540 --> 24:33.340
现在刷新

24:34.140 --> 24:36.220
对吧 你没有token 没有token这边这边就空的

24:37.500 --> 24:39.820
OK 好 然后接下来如果有token

24:39.820 --> 24:40.620
有token的话

24:40.700 --> 24:41.340
那我们这边

24:42.860 --> 24:43.260
eve

24:44.860 --> 24:45.740
就这边有token

24:45.740 --> 24:46.380
有token的话

24:46.380 --> 24:48.060
接下来这边又分为两种情况

24:48.060 --> 24:49.740
就token是过期还是成功

24:50.940 --> 24:51.420
对不对

24:51.420 --> 24:54.940
好 说我们这边eve result 点data

24:54.940 --> 24:55.660
那说明什么呢

24:55.660 --> 24:56.940
说明token是有效的

24:58.780 --> 25:02.060
说明token有效

25:03.100 --> 25:04.380
否则的话 else

25:05.820 --> 25:07.980
else 这边说明

25:08.540 --> 25:11.980
说明这个token过期了

25:13.260 --> 25:14.460
OK 还记得吧

25:14.460 --> 25:15.580
往这边我给你打印

25:15.580 --> 25:16.460
再看一下

25:17.100 --> 25:18.060
这边result

25:18.700 --> 25:19.260
再看一下

25:20.460 --> 25:21.180
这边刷新

25:22.380 --> 25:23.500
我们干清楚了是吧

25:23.500 --> 25:24.300
重新登录一下

25:26.140 --> 25:27.260
重新登录一下

25:27.980 --> 25:30.300
这边卸节123456

25:31.580 --> 25:33.500
alkh6

25:34.380 --> 25:34.860
记住我

25:36.220 --> 25:36.860
OK

25:36.940 --> 25:37.900
好 这边刷新

25:39.500 --> 25:39.820
你看

25:40.460 --> 25:41.900
如果这边是

25:43.100 --> 25:43.900
这边是有效的

25:43.900 --> 25:44.380
有效的话

25:44.380 --> 25:45.580
那这边返回了data

25:45.580 --> 25:47.420
data的话也是只返回了id

25:47.420 --> 25:48.540
和loginid

25:48.540 --> 25:50.460
好 那我们这边的话有效

25:50.460 --> 25:51.820
那我们这边就需要干嘛

25:51.820 --> 25:52.540
是获取

25:53.580 --> 25:56.060
获取该id

25:57.020 --> 26:01.340
对应的用户信息存储到什么

26:01.340 --> 26:02.300
是状态猖狂

26:03.980 --> 26:04.460
对吧

26:04.460 --> 26:06.300
那这的流程就和刚才那个登录

26:06.700 --> 26:07.500
是一样的

26:07.500 --> 26:08.620
啊 你这边import

26:10.380 --> 26:11.980
import这个

26:16.460 --> 26:17.420
存储到啊

26:17.420 --> 26:18.060
这边的话

26:18.780 --> 26:20.140
要引入一个api

26:20.140 --> 26:23.020
叫get user by id

26:23.020 --> 26:24.220
啊 把这个引入

26:24.220 --> 26:25.820
啊 这个这个上面有是吧

26:25.820 --> 26:26.940
这边就直接在这儿写

26:27.660 --> 26:28.540
啊 把这个引入

26:29.260 --> 26:30.060
引入之后呢

26:30.060 --> 26:32.060
在这边get user by id

26:33.900 --> 26:34.540
那这边呢

26:34.540 --> 26:35.980
把这个id传过去

26:36.060 --> 26:37.660
id的话 这边就是应该是

26:38.620 --> 26:41.340
result 点data 点下滑线 id

26:42.140 --> 26:42.620
对吧

26:42.620 --> 26:44.380
好 这边await一下

26:44.380 --> 26:47.100
好 大家这边const一个data

26:48.460 --> 26:50.540
等于拿到

26:50.540 --> 26:51.100
拿到之后

26:51.100 --> 26:52.220
我们这边来看一下拿到没有

26:53.100 --> 26:53.420
data

26:55.340 --> 26:56.300
啊 这边重新

26:56.300 --> 26:57.340
啊 这边已经有了吗

26:57.900 --> 26:58.620
这边已经出来了

26:59.340 --> 26:59.980
刷新一下

27:00.540 --> 27:01.500
就出来了

27:01.500 --> 27:02.300
啊 出来了之后

27:02.300 --> 27:03.660
然后这边是不是存储到

27:04.620 --> 27:05.100
存储

27:05.820 --> 27:07.820
存储到状态昌阔

27:09.820 --> 27:10.460
对不对

27:10.460 --> 27:11.100
好 那这边呢

27:11.100 --> 27:12.140
要把这两个action

27:12.140 --> 27:13.180
把他引入进来

27:13.180 --> 27:14.140
这边 import

27:14.860 --> 27:16.300
一个是这个change

27:18.060 --> 27:19.420
change status

27:19.420 --> 27:20.300
knock in status

27:20.940 --> 27:21.660
还有一个是什么

27:22.300 --> 27:23.420
还有一个是这个

27:25.180 --> 27:25.580
init

27:26.140 --> 27:27.340
init user info

27:27.900 --> 27:29.420
大家这边还要引入那个

27:31.500 --> 27:32.460
use dispatch

27:33.420 --> 27:34.460
dispatch

27:34.460 --> 27:35.980
啊 把这个引入

27:37.020 --> 27:37.740
引入之后

27:37.740 --> 27:38.860
然后接下来在这边

27:39.820 --> 27:42.380
const一个 dispatch

27:42.380 --> 27:44.220
等于一个use dispatch

27:44.220 --> 27:44.620
对吧

27:44.620 --> 27:46.060
我派发这个action

27:47.020 --> 27:47.980
啊 派发

27:47.980 --> 27:52.060
首先一个是这个init user info

27:52.780 --> 27:53.980
啊 把这个data

27:54.620 --> 27:55.740
派发过去

27:55.740 --> 27:57.580
好 还有一个是 dispatch

27:58.380 --> 27:59.580
一个这个change

28:00.220 --> 28:01.500
knock in status

28:01.580 --> 28:02.540
这边是一个cho

28:03.660 --> 28:04.380
对不对

28:04.380 --> 28:06.380
啊 这边呢就存储过去了

28:06.380 --> 28:07.260
好否则的话

28:07.260 --> 28:08.060
如果是else

28:08.060 --> 28:09.820
else呢就说明是过期了

28:09.820 --> 28:10.540
啊 过期的话呢

28:10.540 --> 28:12.300
咱们这边就message.worry

28:12.860 --> 28:13.260
啊

28:13.260 --> 28:13.580
然后

28:14.300 --> 28:15.900
这里的话是result

28:18.350 --> 28:19.870
呃 这边呢是result

28:19.870 --> 28:20.270
对了

28:21.950 --> 28:24.030
result.mosg

28:24.030 --> 28:24.510
还记得吧

28:24.510 --> 28:25.390
如果是过期的话呢

28:25.390 --> 28:26.830
那边是有那个提示的

28:26.830 --> 28:27.150
对不对

28:27.150 --> 28:28.590
我们这边直接就把那个提示

28:28.590 --> 28:29.230
输出出来

28:29.710 --> 28:30.270
啊

28:30.270 --> 28:31.150
输出出来之后

28:31.150 --> 28:32.510
大家把你本地的这个

28:32.510 --> 28:33.870
过期的这个token

28:33.870 --> 28:34.830
给它干嘛

28:34.830 --> 28:35.870
所以给它移除掉

28:36.430 --> 28:36.830
对吧

28:36.830 --> 28:37.950
remove item

28:38.990 --> 28:39.630
好

28:39.630 --> 28:41.310
user token

28:42.670 --> 28:43.310
OK

28:43.310 --> 28:44.430
啊 整体的逻辑

28:44.430 --> 28:46.190
应该就是这个样子的

28:46.190 --> 28:47.630
啊 我们把我存一下

28:47.630 --> 28:48.270
好 来看一下

28:48.830 --> 28:50.110
好 你看这边

28:50.110 --> 28:52.190
是不是已经处于这个登录状态了

28:52.190 --> 28:52.830
对不对

28:52.830 --> 28:54.030
啊 我这边无论怎么刷新

28:54.030 --> 28:54.510
我刷新

28:55.070 --> 28:55.630
啊

28:55.630 --> 28:56.190
是不是OK的

28:56.910 --> 28:57.630
对不对

28:57.630 --> 28:57.870
看

28:58.750 --> 29:00.190
啊 是不是OK的

29:00.350 --> 29:00.990
但是我这边

29:00.990 --> 29:02.030
我如果这个token

29:02.910 --> 29:04.430
token如果是过期了

29:04.430 --> 29:04.670
啊

29:04.670 --> 29:05.950
比我们这边把这个token改一下

29:07.070 --> 29:07.230
啊

29:07.230 --> 29:08.110
这个token就无效

29:08.110 --> 29:08.430
对吧

29:08.430 --> 29:08.910
无效

29:08.910 --> 29:09.790
我们这边刷新一下

29:11.470 --> 29:11.710
哎

29:11.710 --> 29:14.590
它那个那个那个消息咋没弹出来了

29:16.030 --> 29:16.990
这边照理说

29:16.990 --> 29:18.190
应该是有个消息

29:18.190 --> 29:18.350
啊

29:18.350 --> 29:18.910
message

29:18.910 --> 29:18.990
啊

29:18.990 --> 29:19.870
没引入

29:19.870 --> 29:20.190
哎

29:20.830 --> 29:21.390
我也不得

29:21.950 --> 29:22.430
这边呢

29:22.430 --> 29:23.550
这边要把这个message

29:24.830 --> 29:25.390
引入一下

29:26.430 --> 29:26.750
OK

29:27.310 --> 29:28.350
是不是出来了

29:28.350 --> 29:28.670
对不对

29:28.670 --> 29:29.070
出来了

29:29.070 --> 29:29.790
而且这边的话

29:29.790 --> 29:30.750
它就给你

29:30.750 --> 29:32.110
就给你干掉了

29:32.110 --> 29:32.670
对

29:32.670 --> 29:33.470
删除了

29:33.470 --> 29:34.030
啊

29:34.030 --> 29:34.350
好了

29:34.350 --> 29:35.390
我们这个

29:35.390 --> 29:37.150
就是关于这个刷新的问题

29:37.710 --> 29:38.670
也就解决了

29:38.670 --> 29:39.710
这个解决了

29:39.710 --> 29:39.870
啊

29:39.870 --> 29:40.510
我们

29:40.510 --> 29:42.350
有先把这个登录注册做了

29:42.350 --> 29:43.150
因为我们后面的话

29:43.150 --> 29:44.510
很多东西要依

29:44.510 --> 29:46.270
就是依赖于就是你有没有登录

29:47.390 --> 29:48.030
对吧

29:48.030 --> 29:49.310
很多东西要依赖于

29:49.310 --> 29:50.270
你有没有登录

29:50.270 --> 29:50.430
啊

29:50.430 --> 29:52.110
比如说你这边你这个问答

29:52.110 --> 29:53.310
这边能不能跳转

29:53.310 --> 29:54.670
取决于你有没有登录

29:54.670 --> 29:54.910
啊

29:54.910 --> 29:56.350
包括这边这个书籍

29:56.350 --> 29:58.190
书籍你这边能不能下载

29:58.190 --> 29:58.350
啊

29:58.350 --> 29:59.550
就这个东西有没有

29:59.950 --> 30:01.390
取决于你有没有登录

30:01.390 --> 30:02.110
评论

30:02.110 --> 30:03.310
你能不能评论

30:03.310 --> 30:03.630
对吧

30:03.630 --> 30:05.070
取决于你有没有登录

30:05.070 --> 30:06.910
很多东西要基于你这个

30:06.910 --> 30:08.110
是否登录的这个状态

30:08.750 --> 30:09.310
OK

30:09.310 --> 30:09.550
啊

30:09.550 --> 30:10.030
所以我们这边

30:10.030 --> 30:11.790
有先把这个登录注册把它做了

30:13.470 --> 30:13.870
好

30:13.870 --> 30:15.950
然后登录注册做完了之后

30:15.950 --> 30:16.830
这边基本就

30:16.830 --> 30:17.710
还有一个就这边

30:18.670 --> 30:19.630
这个退出登录

30:19.630 --> 30:20.910
退出退出登录会做吧

30:21.790 --> 30:22.270
会做啊

30:23.070 --> 30:23.230
啊

30:23.230 --> 30:24.030
这个退出登录的话

30:24.030 --> 30:25.950
就是点击之后给它把一个事件

30:25.950 --> 30:26.670
退出登录的话

30:26.670 --> 30:28.750
你就把本地仓库把清空一下

30:28.830 --> 30:29.870
然后把那个

30:29.870 --> 30:30.670
token把清空

30:31.390 --> 30:32.910
所以他就退出登录了

30:32.910 --> 30:33.470
对了

30:33.470 --> 30:33.630
好

30:33.630 --> 30:34.350
来我们来写一下

30:35.950 --> 30:36.190
啊

30:36.190 --> 30:36.750
这边的话

30:36.750 --> 30:38.190
应该是哪个组件

30:38.990 --> 30:39.790
应该是这个

30:39.790 --> 30:40.110
noken

30:40.110 --> 30:40.590
oveta

30:41.150 --> 30:41.710
是吧

30:41.710 --> 30:42.750
应该是他

30:42.750 --> 30:43.230
他的话

30:43.230 --> 30:43.790
然后接下来

30:43.790 --> 30:44.590
咱们这边的话

30:44.590 --> 30:46.190
给他绑定这个事件

30:46.990 --> 30:47.790
应该是这个位置

30:48.350 --> 30:50.190
list item这个位置

30:50.190 --> 30:50.830
这个位置的话

30:50.830 --> 30:52.510
然后加这边给他绑定一个

30:54.110 --> 30:54.510
click

30:55.630 --> 30:56.190
等于

30:58.030 --> 30:58.510
这边

30:58.590 --> 30:59.630
这边对应的就是

30:59.630 --> 31:00.110
list

31:01.870 --> 31:05.150
list click handle

31:05.790 --> 31:07.390
然后加这边把这个item

31:08.270 --> 31:08.670
传过去

31:09.310 --> 31:09.550
好

31:09.550 --> 31:10.270
传过去之后

31:10.270 --> 31:11.230
然后接下来的话

31:11.230 --> 31:12.190
在在这上面

31:15.390 --> 31:16.430
在这上面写吧

31:16.990 --> 31:17.550
在这写吧

31:18.270 --> 31:18.510
好

31:18.510 --> 31:19.230
这边这边的话

31:19.230 --> 31:20.110
就是function

31:21.950 --> 31:22.190
这个

31:22.750 --> 31:22.990
好

31:22.990 --> 31:24.350
他这边是会接受一个

31:24.350 --> 31:25.390
你传的这个参数

31:25.390 --> 31:25.710
是吧

31:25.710 --> 31:26.510
这边这个item

31:27.790 --> 31:28.350
item

31:28.350 --> 31:28.590
好

31:28.590 --> 31:29.630
我们这边我们来打印一下

31:29.710 --> 31:30.190
看一下

31:31.710 --> 31:32.430
item

31:32.830 --> 31:33.310
保存

31:33.870 --> 31:34.590
保存了之后

31:34.590 --> 31:35.710
然后加这边看一下

31:37.310 --> 31:38.750
把这个清除掉

31:40.510 --> 31:40.750
好

31:40.750 --> 31:41.470
来看一下这里

31:42.190 --> 31:42.830
个人中心

31:43.310 --> 31:44.350
退出登录

31:44.350 --> 31:44.990
对吧

31:44.990 --> 31:45.870
没问题

31:45.870 --> 31:46.110
好

31:46.110 --> 31:47.070
然后加这边判断一下

31:47.070 --> 31:47.550
意识

31:48.830 --> 31:49.390
item

31:50.670 --> 31:51.470
全等于个

31:52.430 --> 31:53.150
个人中心

31:54.110 --> 31:56.030
那就说明是个人中心

31:56.030 --> 31:57.230
那就跳转

31:58.110 --> 31:59.070
跳转到

31:59.710 --> 32:00.350
客人

32:01.390 --> 32:02.190
中心

32:02.190 --> 32:02.510
对吧

32:02.510 --> 32:03.150
但个人中心

32:03.150 --> 32:04.590
我们现在还没做

32:04.590 --> 32:04.830
好

32:04.830 --> 32:05.870
回头再做

32:05.870 --> 32:06.030
好

32:06.030 --> 32:07.790
我们这边把这个退出写了

32:07.790 --> 32:07.950
啊

32:07.950 --> 32:08.590
哎呦

32:08.590 --> 32:08.830
哎呦

32:08.830 --> 32:09.310
是的话呢

32:09.310 --> 32:09.710
这边的话

32:09.710 --> 32:10.670
是不是就是退出

32:11.870 --> 32:12.510
对不对

32:12.510 --> 32:13.150
退出

32:15.470 --> 32:16.590
退出

32:16.590 --> 32:16.830
哎

32:16.830 --> 32:17.150
等一下

32:17.150 --> 32:17.630
我看一下

32:17.630 --> 32:18.750
就是点其他地方

32:18.750 --> 32:20.590
会不会出发

32:20.590 --> 32:20.910
啊

32:20.910 --> 32:21.310
这边

32:21.310 --> 32:22.110
console.log

32:23.790 --> 32:24.190
item

32:25.230 --> 32:25.550
看一下

32:26.190 --> 32:26.990
比如说我这边的话

32:26.990 --> 32:27.710
点击比如说

32:27.710 --> 32:28.190
像这种

32:29.150 --> 32:30.910
他这边还是退出登录

32:30.910 --> 32:31.470
他这边

32:31.470 --> 32:31.710
啊

32:31.710 --> 32:32.750
整个这一块是吧

32:32.750 --> 32:34.350
这一块都是退出登录

32:34.350 --> 32:34.750
啊

32:34.750 --> 32:35.310
比如这边

32:36.110 --> 32:36.270
啊

32:36.270 --> 32:37.150
这个就个人中心

32:37.950 --> 32:38.430
ok

32:38.430 --> 32:38.750
啊

32:38.750 --> 32:39.150
那没问题

32:39.710 --> 32:39.950
啊

32:39.950 --> 32:40.430
这边的话

32:40.430 --> 32:41.630
就是退出登录

32:43.390 --> 32:44.190
这个就是啊

32:44.190 --> 32:44.830
退出

32:45.950 --> 32:46.510
登录

32:46.510 --> 32:46.910
好了

32:46.910 --> 32:47.630
退出登录的话

32:47.630 --> 32:48.830
要做的事情就很简单

32:48.830 --> 32:49.150
首先

32:49.150 --> 32:49.950
第一个什么

32:49.950 --> 32:50.670
是清除

32:52.350 --> 32:53.150
清除talking

32:53.870 --> 32:54.510
对吧

32:54.510 --> 32:54.670
啊

32:54.670 --> 32:55.550
第二个是什么

32:55.550 --> 32:56.670
第二个是这个

32:56.670 --> 32:57.070
清除

32:58.750 --> 32:59.790
清除这个

32:59.790 --> 33:00.430
状态仓库

33:02.110 --> 33:02.830
对不对

33:02.830 --> 33:03.870
就这个逻辑嘛

33:03.870 --> 33:05.150
那一步一步来呗

33:05.150 --> 33:05.710
那这边呢

33:05.710 --> 33:06.510
首先就是log

33:07.150 --> 33:08.110
log storage

33:09.390 --> 33:09.710
点

33:10.670 --> 33:11.630
remove item

33:12.270 --> 33:12.350
啊

33:12.350 --> 33:12.750
这边呢

33:12.750 --> 33:13.150
user

33:14.910 --> 33:15.310
talking

33:16.830 --> 33:17.470
ok

33:17.470 --> 33:17.870
好

33:17.870 --> 33:18.510
然后接下来

33:18.510 --> 33:18.830
这边

33:18.830 --> 33:19.630
这边清除

33:19.630 --> 33:20.750
状态仓库

33:20.750 --> 33:21.390
那这边的话

33:21.390 --> 33:22.350
涉及到我们这边

33:22.350 --> 33:23.390
得再写一个

33:23.390 --> 33:24.030
reducer

33:25.070 --> 33:26.190
来到

33:26.190 --> 33:26.590
这边

33:26.590 --> 33:27.790
slice这边

33:27.950 --> 33:29.070
这个是初始化

33:30.590 --> 33:33.150
这个是初始化用户信息

33:35.820 --> 33:37.100
用户信息

33:37.100 --> 33:38.140
这个是什么

33:38.140 --> 33:39.660
就是修改

33:39.660 --> 33:40.940
用户

33:40.940 --> 33:42.460
登录

33:42.460 --> 33:43.500
状态

33:43.500 --> 33:44.140
对吧

33:44.140 --> 33:44.540
好

33:44.540 --> 33:45.020
然后接下来

33:45.020 --> 33:45.420
这边

33:45.420 --> 33:45.820
这边呢

33:45.820 --> 33:47.340
就是应该是有一个

33:47.340 --> 33:48.140
这个清除

33:49.500 --> 33:50.140
对不对

33:50.140 --> 33:51.420
应该是有个清除

33:51.420 --> 33:52.220
那我们这边呢

33:52.220 --> 33:52.780
就是清除

33:53.820 --> 33:54.620
清除

33:55.740 --> 33:56.540
用户信息

33:57.340 --> 33:57.980
那这边呢

33:57.980 --> 33:59.020
就是应该是clear

34:00.140 --> 34:01.500
UserInfo

34:03.900 --> 34:04.460
State

34:05.660 --> 34:06.620
这边呢

34:06.620 --> 34:07.660
就是应该是State

34:08.300 --> 34:09.180
点什么

34:09.180 --> 34:10.380
UserInfo

34:10.380 --> 34:11.580
重新等于一个什么

34:11.580 --> 34:12.300
是空输座

34:13.660 --> 34:14.380
对了

34:14.380 --> 34:14.940
ok

34:14.940 --> 34:15.580
然后还有那个

34:15.580 --> 34:16.540
就是登录状态

34:17.100 --> 34:17.660
登录状态

34:17.660 --> 34:18.460
是不是也要改一下

34:19.260 --> 34:20.780
登录状态的话

34:20.780 --> 34:21.340
我看一下

34:22.380 --> 34:23.260
这边的话

34:23.260 --> 34:24.380
我能不能派发呢

34:26.060 --> 34:26.700
没关系

34:26.700 --> 34:27.740
我在那个外面

34:27.740 --> 34:28.540
我再派发一下

34:28.540 --> 34:29.580
这个action就可以了

34:30.540 --> 34:30.860
好

34:30.860 --> 34:31.420
那这边

34:31.420 --> 34:32.060
这边的话

34:32.060 --> 34:32.620
就直接

34:33.340 --> 34:34.380
把这个action

34:34.380 --> 34:35.580
把他倒出去

34:35.580 --> 34:36.460
倒出去之后

34:36.460 --> 34:37.100
然后下这边

34:37.100 --> 34:37.820
然后引入一下

34:39.420 --> 34:41.260
import from

34:43.260 --> 34:43.660
这个

34:44.540 --> 34:45.100
什么

34:45.100 --> 34:46.140
redux

34:46.140 --> 34:47.740
下面的usersnice

34:48.540 --> 34:49.420
这边引入一下

34:49.420 --> 34:49.980
clear

34:51.260 --> 34:53.660
clear这个UserInfo

34:54.220 --> 34:55.420
还有一个是什么

34:55.420 --> 34:56.140
change

34:56.140 --> 34:57.180
no game status

34:58.460 --> 34:59.100
那还有什么

34:59.660 --> 35:00.620
还有就是这个

35:02.060 --> 35:02.700
import

35:03.660 --> 35:05.020
UserDispatch

35:06.380 --> 35:07.660
dispatch

35:07.660 --> 35:08.780
from redux

35:08.780 --> 35:09.020
好

35:09.020 --> 35:09.820
然后下这边的话

35:10.780 --> 35:13.020
const dispatch

35:13.740 --> 35:17.020
等于一个use dispatch

35:17.580 --> 35:18.220
对吧

35:18.220 --> 35:18.460
好

35:18.460 --> 35:19.260
然后下这边的话

35:19.260 --> 35:20.460
派发两个action

35:21.420 --> 35:22.460
在哪里

35:22.460 --> 35:23.420
在这里

35:23.420 --> 35:24.540
派发两个action

35:24.540 --> 35:25.740
一个是dispatch

35:25.740 --> 35:26.060
是什么

35:26.620 --> 35:28.460
clearUserInfo

35:28.540 --> 35:29.900
把本地仓库清空

35:29.900 --> 35:30.220
好

35:30.220 --> 35:31.420
然后下这边dispatch

35:32.940 --> 35:34.620
一个这个change status

35:35.500 --> 35:36.940
把这个改成什么

35:36.940 --> 35:37.580
改成force

35:38.460 --> 35:39.260
OK

35:39.260 --> 35:39.900
完事的时候

35:39.900 --> 35:42.220
然后我们再让他跳转到这个根目录

35:42.220 --> 35:44.140
因为我有可能处于这个其他的页面

35:44.780 --> 35:45.500
比如说我现在的话

35:45.500 --> 35:47.260
我是处于这个书籍

35:47.260 --> 35:47.660
对吧

35:47.660 --> 35:48.620
处于这个页面

35:48.620 --> 35:48.780
好

35:48.780 --> 35:50.460
让我这边让我这个退出登录

35:50.460 --> 35:53.100
我让他就是重新跳换到这个首页

35:54.220 --> 35:54.460
好

35:54.460 --> 35:55.100
让我们这边呢

35:55.100 --> 35:56.140
就是import

35:56.940 --> 35:58.460
import

35:58.460 --> 35:59.100
这边

35:59.100 --> 35:59.740
use

36:00.540 --> 36:01.180
never get

36:02.380 --> 36:02.700
好

36:02.700 --> 36:03.340
然后加这边

36:05.260 --> 36:05.900
const

36:05.900 --> 36:06.860
一个never get

36:07.900 --> 36:09.100
等于一个use

36:11.100 --> 36:11.660
never get

36:12.780 --> 36:13.100
好

36:13.100 --> 36:13.900
然后加这边了

36:13.900 --> 36:14.380
跳转

36:15.580 --> 36:16.380
这边跳转

36:18.140 --> 36:18.300
好

36:18.300 --> 36:19.500
跳转到首页就可以了

36:19.500 --> 36:21.580
因为首页有一个重定项

36:22.140 --> 36:23.180
还记得吧

36:23.180 --> 36:24.540
首页就是重定了

36:24.620 --> 36:26.620
重定向这个重定向那个e-show

36:28.300 --> 36:28.540
好

36:28.540 --> 36:29.260
这边来看一下

36:30.620 --> 36:31.180
好不好使

36:32.220 --> 36:32.380
好

36:32.380 --> 36:33.820
这边的话退出登录

36:33.820 --> 36:34.060
走

36:34.700 --> 36:35.740
是不搞定了

36:35.740 --> 36:36.060
对了

36:36.060 --> 36:38.300
让你这边这个token也删除了

36:38.300 --> 36:39.020
OK

36:39.020 --> 36:39.180
好

36:39.180 --> 36:40.300
整个这个登录

36:40.300 --> 36:41.900
这个登录注册

36:42.460 --> 36:43.500
就写完了

36:44.140 --> 36:45.180
看一下其他还有没有什么

36:45.900 --> 36:47.020
其他的还有一些

36:47.020 --> 36:48.620
这些我就没写了

36:48.620 --> 36:50.460
这些什么这个重置按钮

36:50.460 --> 36:51.260
这个我就没写了

36:51.260 --> 36:53.100
这个完全就你自己下来把他搞定

36:53.820 --> 36:55.500
自己下来把搞定就行了

36:55.500 --> 36:58.700
包括这边这边也是这个重置我就没写了

36:58.700 --> 36:59.260
OK

36:59.260 --> 37:00.700
你这边如果你追求完美的话

37:00.700 --> 37:02.540
你把这个完善一下

37:02.540 --> 37:03.340
这个重置

37:03.900 --> 37:05.580
重置其实可要可不要

37:05.580 --> 37:06.220
对不对

37:06.220 --> 37:06.940
放在这吧

37:06.940 --> 37:08.220
放在这好看着

37:08.220 --> 37:09.580
然后你回头你把这个功能

37:09.580 --> 37:10.540
你把它补全一下吧

37:11.100 --> 37:11.500
好不好

37:11.500 --> 37:12.140
我要补全一下

37:12.140 --> 37:13.100
这个也简单

37:13.100 --> 37:14.540
自己查一下文档

37:14.540 --> 37:15.500
我相信大家的这个

37:15.500 --> 37:17.500
这个应该是能够搞定的

37:17.500 --> 37:18.860
如果这个都搞不定的话

37:18.860 --> 37:19.900
你这有点说不

37:19.900 --> 37:20.460
说不过去

37:21.420 --> 37:24.140
这是关于登陆注册

37:24.140 --> 37:26.140
咱们整个这个就写完了

37:26.860 --> 37:28.380
这个本来是该上节课

37:29.100 --> 37:31.900
该上节课就一起连成一节课的

37:31.900 --> 37:33.260
但是上节课的话

37:33.260 --> 37:33.980
不练过

37:33.980 --> 37:34.860
然后去接小孩了

37:35.500 --> 37:37.820
这会这会赶紧回来

37:37.820 --> 37:38.700
把这个补上

37:39.740 --> 37:40.620
补上之后

37:40.620 --> 37:41.260
你会发现

37:41.260 --> 37:42.700
你会发现给这个小孩

37:43.420 --> 37:44.700
辅导作业之后

37:44.700 --> 37:46.300
你就会真心发现给你们讲课

37:46.300 --> 37:47.260
简直幸福多了

37:48.620 --> 37:49.260
太幸福了

37:51.420 --> 37:52.620
然后下节课开始

37:52.620 --> 37:54.140
咱们就正式开始做这个了

37:54.140 --> 37:55.020
做这个问答了

37:55.660 --> 37:56.140
OK

37:56.140 --> 37:56.620
做问答

37:56.620 --> 37:58.220
咱们就一个模块一个模块来做

37:58.220 --> 38:00.060
问答书记面试题

38:00.060 --> 38:00.460
对吧

38:00.460 --> 38:01.340
而且就这三个

38:01.980 --> 38:02.540
对吧

38:02.540 --> 38:03.100
就这三个

38:04.220 --> 38:04.460
好

38:04.460 --> 38:05.900
这节课就到这里

38:06.620 --> 38:08.460
大家下去把这个登陆功能

38:08.460 --> 38:09.500
自己把它玩上一下

38:10.060 --> 38:10.460
再见

