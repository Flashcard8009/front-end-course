WEBVTT

00:00.000 --> 00:06.720
ok 好 这节课的话 咱们来看一下就是做项目之前 最后一个要介绍的东西

00:07.280 --> 00:13.520
也是最重要的一个东西 就是关于这个无米点节词 啊 那这个无米点节词的话也不会说就是

00:14.040 --> 00:20.240
我们这边正是要讲无米节词啊 然后加挨着挨着 是吧 挨着挨着 讲这个 讲这个 讲这个 不会啊

00:20.720 --> 00:28.440
因为我们这个到时候我们做项目的时候 自然而然就用到了 对吧 好我们这边的话 这节课的话 主要就是给大家介绍一下

00:28.440 --> 00:37.640
这个首先这个东西是什么样的一个东西 这个东西 对不对 这是什么东西啊 然后就是他有哪些特点啊 把特点介绍一下

00:38.240 --> 00:48.240
至于他具体的里面一些使用的一些细节啊 这个我们到时候就从下节课开始 咱们开始做项目的时候啊 自然而然慢慢慢慢就会涉及得到

00:48.840 --> 00:58.200
好吧 我看我们来看一下啊 而这个无米点节词啊 无米点节词的话 其实在前几节课我也在提了 对吧 一直在提了

00:58.680 --> 01:05.560
啊 这个的话是蚂蚁金服啊 仍然是蚂蚁金服 所推出的这个基于这个react的这个前段框架

01:06.520 --> 01:09.200
实际上蚂蚁金服的话 最早他推出的是那个低瓦

01:09.840 --> 01:18.320
就我们上几颗介绍的那个啊 后来的话 然后低瓦的话 他觉得那个低瓦还是太弱了一点啊 所以后期的话就推出了这个无米点节词

01:18.640 --> 01:22.680
那无米点节词的话 就相当于你可以把它看作是低瓦的一个升级版

01:23.360 --> 01:31.400
他把整个这个低瓦呀 包括我们前面所说的这个安特这个迪连pro啊 这些啊 把它完全的把它包含进去了

01:32.000 --> 01:36.720
ok 所以我们这边我们看一下啊 他和前面所介绍的这个低瓦

01:37.240 --> 01:45.680
安特迪这个pro 他们之间的关系什么呢 是一个包含关系啊 这个是他官方给了一部差 给了这个一个插图

01:46.600 --> 01:53.240
看到没有啊 这边假设这个是我们的这个无米 他就把常见的 比如什么type script呀 低瓦呀

01:53.520 --> 01:59.440
vip pack呀 背部呀 安特迪啊 安特迪pro啊 这些啊 就全部把它包含在一起了

02:00.080 --> 02:04.880
ok 那我们这边这个开发者的话 就直接啊 只用这个东西就ok了

02:05.800 --> 02:13.240
啊 这边呢 是关于这个无米的一个介绍啊 就是来源于这个官网 大家可以看一下啊无米

02:13.720 --> 02:22.080
中文发音为无米啊 是一个这个前端应用框架以路由为基础 他实际上最早的时候这个无米的话啊

02:22.560 --> 02:29.480
就你看那个无米一 无米一的话其实还是比较简单的啊 无米一的话其实就是在低瓦的基础上

02:29.960 --> 02:31.960
加入了那个约定式路由

02:32.800 --> 02:37.680
最早的时候 ok 那他这个发展的话也是慢慢慢慢发展起来的啊

02:38.480 --> 02:46.480
好 他最早的话就是这边啊 支持配置式路由和约定式路由啊 然后加这边巴拉巴拉的啊 有很多啊比较很多这个

02:47.680 --> 02:53.560
其他的这些公司啊 都在使用这个无米啊 这边大家可以看一下啊 看一下这些大致的这个介绍

02:54.360 --> 02:57.000
好 然后加这边呢 这边有个无米的设计哲学

02:58.320 --> 03:04.000
这边其实也是在介绍这个无米 ok 这边 无米从一到四 现在最新的就是是

03:04.720 --> 03:07.440
啊 之前袁老师讲的时候那个时候的还是二啊

03:08.120 --> 03:14.080
啊 那个韩老师 韩老师讲的时候那个是三 那现在的话已经升级到这个最新的这个四了

03:14.560 --> 03:21.360
ok 啊 他里面的话会有一些他的这个设计哲学啊 比较第一个啊 技术收链这个收链

03:21.880 --> 03:24.680
这边其实就是刚才那张图啊 就就这张图

03:25.760 --> 03:33.600
看到没有 所有的东西啊 都这个包含进去了 ok 啊 还有就是这个插件 这个也是他的一个特点

03:34.320 --> 03:41.400
回头我们要用这个安特地啊 或者用这个低瓦的时候 这些东西的话都是以插件的这个形式

03:41.920 --> 03:46.920
集成在无米里面的 我们只需要就是把这个插件打开就可以了

03:47.640 --> 03:53.520
ok 啊 这边还有什么最佳实践呀 企业级呀 这些啊 巴拉巴拉的啊 大家这边的话可以看

03:54.080 --> 03:56.600
这边他有个文字稿 我记得他这边是有个视频的

03:58.080 --> 04:02.080
啊 记得这边是有个视频的啊 就这个人啊 这个叫什么

04:02.640 --> 04:07.440
把云迁啊 这个是负责这个 就是无米的这个负责人

04:08.040 --> 04:12.360
ok 他这边当时做了一个演讲 就这边无米的话他的这个特点是什么

04:12.920 --> 04:16.520
但这个是有视频的 大家可以收一下 应该在那个B站上面都找得到

04:18.200 --> 04:21.560
应该是找得到的 啊 这边呢 相当于是他的这个文字稿啊

04:22.360 --> 04:25.000
相当于就是他视频里面说的也就这些话了

04:25.720 --> 04:26.320
就是这些话

04:27.080 --> 04:34.240
ok 啊 这是首先啊 第一个关于无米的介绍和设计哲学啊 这两个链接 大家去看一下

04:34.960 --> 04:40.600
好 然后我们这边的话 这个无米他最新的版本是4.0 刚才说过了 对吧

04:41.200 --> 04:46.760
注意啊 他这边分成两个版本 一个是普通版 一个是这个max版本

04:47.720 --> 04:52.680
啊 让我们这边在开发的时候 我们一般用的是什么呢 一般是用的是max版本

04:53.160 --> 04:57.000
那这个max的话 他就包含了我们会用到的这个antd啊

04:58.000 --> 05:02.600
antd pro啊和这个dwa这些 你这边呢 你在这个官网你也是看得到的

05:03.440 --> 05:04.840
比我们这边看他的这个官网

05:06.080 --> 05:13.080
官网竟然是这边 对吧 那这样啊 旷书这个快速上手 快速上手之后人家这个 这边这个盖子

05:13.560 --> 05:20.720
这个盖子的话就是针对就是普通版的这个的那个那个无米啊 他的一些这个说明 比他路由该怎么配

05:21.160 --> 05:28.920
默克该怎么写 代理该怎么写 对不对 好 人家这边他有一个这个无名max啊 你这边看一下无名max的简介

05:30.280 --> 05:39.120
呃无名max的话他这边 你看 为了方便开发者 更加方便的使用这些插件啊 就有很多插件啊 我们把

05:39.760 --> 05:44.120
就是这些插件开源的基础上啊 直接把它集成到一起

05:44.760 --> 05:46.360
打造了这个无名max

05:47.280 --> 05:54.120
那我这边呢 我就是到时候我要用这个无名max 怎么用呢 啊 这边你就选择这个under design pro

05:54.840 --> 06:01.120
你选择这个 选择这个的话 他就是创建一个无名max的项目啊 如果你选择这个 选择这个

06:02.040 --> 06:05.560
simple app 他就是创建一个简单的这个无名的这个应用

06:06.760 --> 06:12.480
ok 啊 这边 到时候我们做那个后台管理系统的时候 我们就是会用他啊 无名max

06:13.440 --> 06:25.120
好 然后在正式做项目之前 我们需要了解无名的一些基本使用和他的一些特点啊 但他特点挺多的 我们主要介绍这么三个啊

06:26.160 --> 06:32.400
挑了三个出来 首先第一个就是他最有名的约定式路由啊 然后第二个的话就是插件一字

06:32.880 --> 06:36.240
第三个的话就是他的那个配置 他的配置文件有两个

06:36.880 --> 06:40.480
一个是构建式配置 一个是运行式配置

06:41.360 --> 06:45.680
ok 好了 我们这边一个一个来看 首先的话是约定式路由

06:46.800 --> 06:50.080
约定式路由的话 其实这个的话并不是这个无名独有的东西

06:50.800 --> 06:57.120
啊 我最早接触这个约定式路由的时候 其实是在接触这个view view的这个lux.js

06:57.680 --> 07:00.720
不知道你们就是有没有学过这个啊 lux.js

07:01.120 --> 07:06.160
就是view的一个ssr框架 ok 啊 当时这里面的话他其实就提出了这个

07:07.120 --> 07:12.000
约定式路由的这个概念啊 包括这个react的这个next.js

07:12.720 --> 07:14.720
这个的话也是这个约定式路由

07:15.280 --> 07:22.400
ok 好 然后你看那个早期那个无名那个团队啊 他们说就是之所以加入这个约定式路由

07:22.960 --> 07:27.120
实际上就是什么 其实就是借鉴了这个next.js这个框架

07:27.680 --> 07:32.080
这个我记得他在哪个哪个文档他写了的

07:32.880 --> 07:36.560
啊他的约定式路由 你可以看一下就是三版本

07:38.400 --> 07:45.040
三版本 点一下中文 不是三就是二啊 反正他这边写了的 他就是借鉴那个next

07:46.240 --> 07:47.040
看这边文档

07:48.560 --> 07:55.200
然后约定式路由啊 这边好像更多的是介绍这个约定式路由怎么做啊

07:56.000 --> 08:01.360
看他这边有没有 有没有介绍介绍他的这个约定式路由

08:02.080 --> 08:06.480
啊 这里 这里啊 看到没有next.js

08:07.360 --> 08:16.400
他啊 这这这看到没有无名很多功能是参考这个next.js做的啊 比如什么呢 比如说其中一个就是这个约定式路由

08:17.120 --> 08:17.360
ok

08:19.520 --> 08:25.360
这是这个关于约定式路由啊约定式路由的话什么意思呢 这个东西并不难啊

08:25.760 --> 08:31.520
所谓约定式路由的话 就是简单来讲的话 就是根据你的这个项目的这个结构

08:32.080 --> 08:36.720
他自动的生成路由的这个配置 你就不需要再去写配置了

08:37.360 --> 08:42.160
啊 你回忆一下我们之前在做项目的时候啊 无论是这个ve还是react

08:42.560 --> 08:48.560
我们是不是要手动的去输写这个路由的这个配置啊 对不对 我们一般会有个文件啊

08:48.560 --> 08:54.640
有个文件 然后里面就是负责这个路由的这个配置啊 我们来写写了之后 然后接下来就按照我们的这个

08:55.200 --> 09:02.080
路由的配置来执行 对吧 所谓约定式的话就是我们先约定好 你按照就是你的项目的这个结构

09:02.400 --> 09:10.720
按照这样子 按照就是某一种这个结构来创建这个项目 那接下来他会自动给你生成路由的这个配置

09:11.280 --> 09:13.440
ok 好 我们这边我们来看一下吧

09:14.640 --> 09:20.160
啊 有关这个约定式路由哈 v4的话呢 其实介绍的比较简单 你这边你把v4打开

09:20.720 --> 09:25.520
v4的话呢 其实介绍的比较简单 就只有我看一下在哪个地方介绍的

09:26.880 --> 09:31.200
嗯 就在这里 这里配置是目楼下面啊 这边基础路由

09:31.840 --> 09:38.400
动态路由 ok 介绍的比较简单啊 你如果想看详细的话 你可以去看v2或者v3的文档

09:38.960 --> 09:42.960
啊 但是你要注意哈 就因为他版本不同 他会有一些这个差异

09:43.600 --> 09:48.160
啊 比如说像这个v2和v3 他们在用这个动态路由的时候就是有差异

09:48.560 --> 09:55.920
ok 你看的话 你就是你这边比如说看到某个 比如说不能实现的话 你要看就是当前你的这个版本

09:56.640 --> 10:02.000
ok 好 那我们这边的话 我们来试一下吧 好吧 我们来试一下

10:03.520 --> 10:10.000
啊 我们这边来搭一个项目啊 这边快速上手 快速上手 这边创建项目 好 那我们这边打开

10:11.280 --> 10:12.960
打开之后 咱们这边的话

10:13.920 --> 10:15.040
cd到桌面

10:15.280 --> 10:19.280
cd到桌面之后 然后接下来这边

10:20.560 --> 10:23.120
make dir 咱们这边就叫做无米

10:23.760 --> 10:30.400
然后demo啊 你注意这个命令的话是那个苹果才有的哈 我不知道windows现在有没有 windows应该是没有的

10:30.800 --> 10:34.080
啊 如果你的操作系统是windows吧 你输入这个命令他应该是找不到的

10:34.640 --> 10:34.880
ok

10:36.400 --> 10:42.560
好 然后创建这个这个目录 创建了之后 然后接下来的话 这边cd进去

10:43.280 --> 10:46.880
对吧 cd进去之后 然后接下来他这边提供了三种方式

10:47.520 --> 10:54.720
一个是pnpm 一个是npm 一个是ian 啊 但现在的话就是比较推荐使用pnpm

10:55.440 --> 10:57.120
pnpm我还没去研究过

10:58.400 --> 11:05.920
哎 我的口音怎么回事 哈哈哈啊这pnpm的话我还没去研究过啊 他这边具体他有什么优点 回头让我去看一下

11:06.400 --> 11:11.040
啊 但他这边的话我用的是npm npm 也一样的 ok 这边

11:11.840 --> 11:12.240
复制

11:13.200 --> 11:16.080
然后加这边过来过来之后 然后回车

11:16.960 --> 11:21.360
对吧 啊 这边要等他创建 你看这里 这里的话他就提供选项了

11:21.840 --> 11:25.520
那没有啊 你如果是普通的无名项目 你就选第一个

11:26.160 --> 11:31.280
啊 那回头我们那个 就是我们那个后台管理系统 那我们就选哪个 我们就选这个

11:32.080 --> 11:38.400
对对 我们就选这个 这个的话他就是会创建一个无名max项目 他会把所有的插件

11:38.880 --> 11:42.800
集成在里面啊 这个这个一看就是什么 是不是就是基于view的

11:43.600 --> 11:48.080
对不对 好 那我们这边的话我们能掩饰这个约定式路由 我们就选第一个就可以了啊

11:48.640 --> 11:55.200
我们主要掩饰一下约定式路由 那默认推荐这个pnpm啊 这个我也没装 我就直接用npm啊

11:56.400 --> 11:58.240
啊 这边选这个淘宝镜像

11:59.120 --> 12:03.120
ok 啊 这边那就等他拿吧 拿拿这个项目

12:03.680 --> 12:05.200
好 我们这边看一下啊 看一下

12:06.000 --> 12:13.680
那这边的启动项目 启动项目使用这个这个pnpm这边是第五 那我们一会的话就应该是什么

12:13.920 --> 12:16.400
这就应该是npm软第五

12:17.200 --> 12:22.720
对不对啊 启动起来的话就是这样子的 就这样子好 我们这边来看一下啊

12:23.840 --> 12:28.000
这边还很快对不对很快 一下子就出来了

12:28.960 --> 12:33.200
好 出来之后 然后接下来咱们这边把这个项目 我们把他拉过来

12:33.760 --> 12:35.120
在这里 是吧 在桌面上

12:36.400 --> 12:43.550
好 放到这个vscode里面 好 大致看一下他的这个项目目录啊

12:44.430 --> 12:48.510
整个外层的话挺干净的 对吧 这边的话是一个依赖 这边是我们的圆满目录

12:48.910 --> 12:54.910
啊 这边这边呢 是一个配置文件 这个一会再说啊 然后这边是这个依赖啊 这边呢是一个ts

12:55.470 --> 12:59.950
他现在的话 他默认是这个ts了 你看他里面的话都是ts

13:00.670 --> 13:04.110
你看看呀 看一下他里面 你看 是不是都是ts差

13:04.830 --> 13:09.950
对不对啊 但这边的话没关系 但这边他也支持 就是支持这个ts

13:10.510 --> 13:14.270
啊 你这边呢 完全就是可以把这些改成ts 这边改成ts差

13:14.830 --> 13:20.510
项目的话是可以跑跑起来的 ok 给我们这边来改一下 我们把这个改成ts

13:21.470 --> 13:24.750
ok 啊 这边这边的话把他改成ts差

13:30.380 --> 13:34.700
啊 确定好 再加这边这边也改改成ts

13:35.740 --> 13:39.260
update yes 啊 这边的话改成ts

13:40.700 --> 13:44.380
ok啊 确定好 全部保存一下

13:45.420 --> 13:47.420
啊 yes 啊 全部保存一下

13:48.060 --> 13:53.900
保存了之后 然后看一下啊 这边都是ts啊 这边就把他改一下 改成ts

13:56.240 --> 14:00.000
ok啊 改完之后 然后接下来 咱们这边来启动一下

14:01.840 --> 14:05.600
电脑莫名其妙又想起来了 好 然后加这边咱们来

14:07.700 --> 14:12.660
启动一下 启动的话 你看这边package点节省 这边是不是npm on round地步

14:13.300 --> 14:26.640
对吧 npm on round地步走 然后这边等他启动啊 ok 启动起来了 看没有 启动了 然后这样你这边的话

14:27.120 --> 14:30.320
过去看一下啊 这边他在构建啊

14:30.880 --> 14:37.680
说出来了 对不对 这边是home 这边是dux 啊 这边是get hub 给他哈布就跳转啊 这个是个外令

14:38.160 --> 14:40.640
他就跳转到这个给他哈布了 ok

14:41.520 --> 14:46.640
好 他这边让我们来看一下这个约定式路由啊 约定式路由的话就是我们这边他不需要这个配置

14:49.360 --> 14:54.640
好 这边稍微等一下我这边暂停一下啊 等他这个冷静一下这个风扇花花花的

14:55.200 --> 14:57.200
也挺影响大家这个听客的

14:58.000 --> 15:00.480
是不是 好 稍微暂停一下

15:02.080 --> 15:09.360
ok 这会儿风扇稍微好点了啊 好 然后接下咱们这边继续啊 这边你可以看一下把这个s2c

15:10.240 --> 15:14.800
展开 展开之后这里面的目录也挺干净的啊 这边呢 首先这个点5米

15:15.360 --> 15:21.440
点5米的话是你这边一会儿这个运行项目的时候 他自动生成了这个目录啊 这个的话你不要去动他

15:21.840 --> 15:28.320
ok 好 然后接下来这个set 这个呢 就是静态支援目录 对吧 这个没什么好说的

15:28.720 --> 15:34.320
好 这边呢 是nails 内奥词 这边的话一个index 连接是差 你看这边呢 是不是

15:35.040 --> 15:38.560
呃 连接 对不对 好 然后接下来这个pages

15:39.120 --> 15:44.320
pages 下面的话你就按照这个约定进行配置就可以了啊 比如说我们这边我们举个例子

15:45.440 --> 15:48.080
我们这边写个test 连接是差

15:48.960 --> 15:51.280
好 然后接下来这边r s f

15:51.920 --> 15:57.200
啊 这边呢 比如说this is a test page

15:57.840 --> 16:03.200
ok 好 我们这边是比较test 叫test 然后接下来你在这边你新增一个

16:04.640 --> 16:07.360
新增一个啊 这边叫做test

16:08.160 --> 16:11.280
啊 这边test啊 这边的话保存

16:12.560 --> 16:17.040
保存之后 然后接下来这边看一下 是不出来了 对吧 test

16:17.840 --> 16:25.200
this is a test page 你看我们有没有配置什么路由啊 没有啊 我们这边的话就是按照约定来写

16:25.680 --> 16:31.200
你写在这个pages里面啊 按照约定来写 写了之后他这边的话到时候他会自动的

16:31.520 --> 16:36.400
编译出这个配置 这个配置在哪里呢 在这个点无蜜这边 你找一找

16:37.040 --> 16:40.080
点无蜜 然后这个call call下面有一个root

16:41.520 --> 16:48.560
看到没有 他这边实际上你看这边 是不是他还是给你编译出来这个配置的啊 其实不是说这个配置没有

16:49.360 --> 16:52.640
知道吧 不是说这个配置没有 只不过这个配置的话他帮你

16:52.880 --> 16:57.520
就是通过就是他通过编译啊编译这个项目他这边自动帮你生成了

16:58.480 --> 17:06.960
明白吧 这个就是约定是路由他的原理啊 他这边呢 其实就是根据你的这个目录啊 然后在这边扫描你的目录 然后接下来

17:06.960 --> 17:11.360
自动帮你生成了这个配置文件啊 不是说这个配置文件就没有了

17:12.000 --> 17:12.240
ok

17:13.520 --> 17:19.280
好 你这边呢 你还可以看一下就是这边 比如说我们要要这个动态路由 我们这边来看一下

17:20.000 --> 17:22.240
他比如说这边的话要这个动态路由

17:23.760 --> 17:25.200
嗯 我看是在

17:27.470 --> 17:27.950
在

17:29.550 --> 17:37.950
哎 我们那个那个那个把文档打开啊 这边配置是路由啊 如果你这边是动态路由动态路由的话 你看他这边写的有

17:38.910 --> 17:46.270
就怎么做呢 这边动态路由这个是基础基础路由对吧啊 你这边啊 比如说加一个文件加里面index也是可以的

17:46.270 --> 17:46.990
比如说我们这边

17:48.030 --> 17:50.430
写一个文件加这个叫做users

17:51.150 --> 17:54.990
ok 啊 users 下面的话一个index.js

17:56.110 --> 17:56.990
好 来我们这边

17:57.950 --> 17:58.670
嗯 this

17:59.870 --> 18:00.270
is

18:01.230 --> 18:01.790
users

18:02.350 --> 18:02.750
page

18:03.630 --> 18:06.590
对吧 好 然后接下来的话在这个layout 这边

18:07.470 --> 18:14.210
这边的话咱们加一个加一个啊 这边呢 就是users

18:15.090 --> 18:16.370
啊 这边的话 users

18:17.810 --> 18:18.930
ok啊 保存

18:19.810 --> 18:21.810
保存之后 然后接下这边来看一下

18:23.410 --> 18:31.010
这边 users 出来了吧 对不对 也出来了啊 出来之后 然后接下来我想加一个动态路由 我们来看一下

18:31.810 --> 18:38.530
动态路由 动态路由的话他这边啊 这个你注意哈 动态路由的话不同的这个版本他是不一样的

18:39.090 --> 18:40.370
你比如你看这个5米3

18:40.930 --> 18:44.530
我们刚才不是打开5米3吗 5米3他这边约定是路由

18:44.930 --> 18:46.370
然后既然你看这个动态路由

18:46.930 --> 18:50.050
他这边是什么 这边你看他是这个综扩号

18:51.010 --> 18:55.170
对不对啊 不同版本的话他是有差异的 这点你一定要注意啊

18:55.570 --> 18:58.130
然后加这边是是的话他是用的是一个downer

18:59.090 --> 19:03.010
用的是一个downer啊 然后加到到时候他配置出来的话就是这个样子的

19:04.130 --> 19:06.050
看一下啊 来我们这边我们举个例子吗

19:06.690 --> 19:08.370
比如说我们这边新建一个

19:09.650 --> 19:12.450
新建一个这边叫做downer id

19:13.970 --> 19:14.690
连js

19:15.410 --> 19:18.770
啊 那这个是什么呢啊 这个是ts啊啊 这边写错了

19:19.330 --> 19:27.280
这边写错啊 这个代表什么呢 这个代表的话就是回头的话 什么什么会匹配上他

19:27.360 --> 19:29.040
就是你这边的话回头就是

19:30.960 --> 19:36.080
呃 users 就你这边访问的是 users 然后加这边冒号 id

19:36.720 --> 19:40.720
会匹配上他啊 我们这边可以接受一下 我们这边 import

19:41.360 --> 19:43.520
然后这个use the promise

19:44.560 --> 19:45.520
然后 from

19:46.080 --> 19:47.680
这个react router DOM

19:48.640 --> 19:51.360
你注意我们这边有没有安装这个react router DOM

19:51.920 --> 19:58.000
没有啊 但我这边的话可以直接从react router DOM里面引 为什么啊 其实就是刚才说说的

19:58.400 --> 20:00.960
这个无密的话是不是已经把这些东西集成了

20:01.680 --> 20:06.400
对不对 已经集成到内部了啊 所以你这边他不需要再安装了 直接用就可以了

20:06.880 --> 20:10.400
好 让一下我们这边我们来把这个拿到const

20:11.120 --> 20:13.440
这个 id 等于一个

20:14.080 --> 20:15.040
use the promise

20:16.000 --> 20:20.720
对吧 好 然后加这边啊 稍微写一下 这边获取

20:21.680 --> 20:24.560
获取到的 id 为

20:25.520 --> 20:29.600
啊 这边 id 我们来看一下到时候能不能拿得到啊 我们保存

20:30.320 --> 20:33.120
哎 这边报错了是吧 报错看一下

20:35.150 --> 20:36.990
啊 这这边react写错了

20:38.190 --> 20:38.830
啊 保存

20:39.950 --> 20:42.190
OK 好 来我们这边我们来看一下

20:42.830 --> 20:45.950
好 这边他比如说 users 然后加这边写个1

20:46.510 --> 20:51.630
啊 写个1走 你看是获取到的 id 为1 这边是不是就是一个动态路由

20:52.510 --> 20:54.350
对不对 动态路由啊

20:55.230 --> 21:00.990
啊 这就是关于这个约定式路由啊 怎么他这个v4的话 他这边就只介绍了这两个

21:01.470 --> 21:05.950
你看这个v4就只介绍了这个 一个是基本路由

21:06.430 --> 21:12.510
一个是动态路由啊 你如果想看这个更详细的话 你这边可以去看一下v2和v3的

21:12.990 --> 21:16.830
啊 可以把v2和v3就约定式路由这个部分 可以再看一看

21:17.470 --> 21:21.070
但还是就是我刚所说的啊 你注意这个不同的版本他是有差异的啊

21:21.550 --> 21:25.870
有差异的 ok 你看只是看什么 这边看他的一个大字的这个写法

21:26.750 --> 21:27.070
对吧

21:28.510 --> 21:34.030
啊 这是关于约定式路由 这个是污密早期啊 早期一个最大的特点吧

21:34.430 --> 21:39.150
约定式路由啊 就是在dwa 就是他那个5米1推出的时候

21:39.630 --> 21:44.590
他5米1推出的时候 其实就是在这个dwa的基础上 啊 然后集成了一个这个功能

21:45.310 --> 21:45.550
ok

21:46.350 --> 21:50.110
好 那5米5米的第二个 第二个特点就是插件机制

21:50.990 --> 21:53.630
插件机制啊 这个刚才是不是也说过了

21:54.110 --> 21:57.470
对不对 就我们这边会用到了很多东西 什么像dwa呀

21:57.950 --> 22:04.670
antd呀 antdpro呀 他都是以插件的这个形式啊 集成在这个5米里面的

22:05.230 --> 22:12.750
啊 那回头的话 你要开启某个插件的话 你就直接在这个这个配置文件 就那个配置文件 就这个配置文件中

22:14.270 --> 22:19.390
啊 这个这个配置文件中啊 你这边啊 这个开启就可以了啊 你这边比如说写个antd

22:19.950 --> 22:22.750
啊 大家这边后面对应的是一个配置对象

22:23.630 --> 22:26.910
ok 那你这边就代表什么呢 代表这个这个插件开启了

22:27.550 --> 22:31.630
啊 比如你要用dwa dwa的话 你这边呢 就是dwa冒号一个配置对象

22:32.270 --> 22:37.790
就代表dwa开启了啊 开启之后你比如说想配置更多那就是在哪里 是在这个配置对象里面写

22:38.830 --> 22:45.390
对不对啊 这是他的这个插件机制啊 我们这边可以看一下啊 看一下到时候我们写的这个后台管理系统

22:46.510 --> 22:53.010
啊 把它打开看一下啊 这边我们来看一下这个

22:54.210 --> 22:56.450
5米 把它折起来

22:57.330 --> 23:00.370
折起来之后 然后啊 这个是吧

23:00.930 --> 23:09.090
你看 这边啊 到时候你看这边啊 我root 就是我写的时候我采用的是那个配置式的 我没有用那个约定式

23:09.490 --> 23:14.130
啊 采用的是配置式的啊 这边在配置 大家这边你看是吧 就很多插件

23:15.250 --> 23:18.850
对不对 你要用哪些插件啊 比如我们要用到dwa 我要用到antd

23:19.250 --> 23:21.170
我要打开就可以了 ok

23:22.210 --> 23:24.850
好 这是关于这个插件啊

23:25.650 --> 23:29.090
好 然后最后一个 最后一个的话就是两个配置了

23:29.570 --> 23:30.930
他配置文件有两个

23:31.970 --> 23:38.850
有两个 这是从v2版本开始 他一直就包含两个配置文件啊 一直到v4的话 也一直

23:39.410 --> 23:45.650
保持了这个特点 一个是怎么了 一个是构建式配置 一个是运行式配置

23:46.290 --> 23:49.410
什么叫做构建式配置啊 我们之前说过就是你这个项目

23:51.760 --> 23:57.760
你这个项目 你这个项目启动起来的话 他最终他会干嘛 构建出一个点污蔑

23:58.480 --> 24:05.360
对不对啊 那你这边的话 这个构建式配置 根据你这边配置不同 你到时候这边的话 生成的话 也就是不一样的

24:06.400 --> 24:14.320
对不对 这叫做构建式配置啊 构建式配置了啊 我们也看那个吧 也看就是看我们的这个成品 好举例一些

24:15.760 --> 24:16.480
比如说我们这边

24:18.400 --> 24:20.320
把这个成品打开

24:21.840 --> 24:22.160
你看

24:22.400 --> 24:31.600
你看我们这边 这个的话 是不是就是构建式配置 对吧 你看我们在这个构建式配置里面 配置了些什么 是配置我们要打开了一些插件

24:32.320 --> 24:34.880
还有什么 是不是还有就是我们这边路由的这个配置

24:35.760 --> 24:45.760
还有什么 还有是不是就代理的配置啊 对不对啊 然后接下来到时候他在构建这个的时候 构建这个点污蔑的时候 他就会根据你的这个配置文件

24:46.560 --> 24:52.960
啊 你这个配置文件进行这个不同的这个配置啊 到时候这个构建出来的这个东西是不一样的

24:53.360 --> 25:01.120
ok 比如你看这边我这个入词 我这边是不是进行了这些路由的这个配置啊 那回头的话在这个污蔑啊 然后在这边点call

25:01.840 --> 25:06.080
这边啊 你看这边生成的这个路由的这个配置 是不是就不一样

25:07.120 --> 25:09.360
对不对啊 就根据你的这个

25:10.720 --> 25:12.080
啊 就根据你的这个啊

25:12.800 --> 25:17.280
好 然后还有一个是什么呢 还有一个是这个运行时的配置

25:18.240 --> 25:21.840
运行时的配置的话 它是跑在这个浏览期段的

25:22.640 --> 25:29.840
ok 你可以在这里面的话 然后写一些这个函数啊 贴斯差呀这些依赖啊 但是你不要什么的 不要引入这个漏的这个依赖

25:30.240 --> 25:33.040
为什么 因为它是运行在这个浏览期段的

25:33.760 --> 25:35.200
啊 那你这边看一下就是

25:35.920 --> 25:42.720
呃 这个运行时配置 一般的话就是约定啊 约定就是src目录下面的这个app.js

25:43.280 --> 25:48.240
啊 或者app.ts或者app.gsx或者app.tsx

25:48.720 --> 25:52.960
它为这个运行时的配置文件 那那比如说在我们这边

25:54.480 --> 26:00.000
这是我们的成品 是吧 那我们这边看一下src下面对吧 src下面会有个什么

26:00.320 --> 26:01.840
这个app.ts啊

26:02.640 --> 26:06.640
它就应该是什么 它是不是就是应该是我们的运行时配置

26:07.440 --> 26:09.760
对啊 你看我在这边的话写了一些这个

26:10.800 --> 26:15.920
这个是获取初始状态啊 这个是关于这个layout 这个是关于这个请求难解

26:16.800 --> 26:21.280
写了这些配置 这些配置都是运行在哪里的 都是运行在这个浏览期段的

26:22.080 --> 26:24.640
ok 都是运行在浏览期段啊

26:25.440 --> 26:30.640
关于这个构建时配置和运行时配置 这个官网的话 这边有这个文档 你看一下

26:31.440 --> 26:31.920
比如这个

26:33.520 --> 26:37.520
这个是这边它这个配置 这个配置指的就是构建时的配置

26:37.920 --> 26:44.640
虽然它没有写构建时内三个字啊 就这个是构建时配置 它里面就有这么一些配置下

26:45.680 --> 26:50.320
看到没有 但我这边不可能这个一个一个给你讲 对吧 这个得讲到连

26:50.720 --> 26:56.000
就是猴年马月去了啊 不可能一个一个的 我们这几个来学这个啊 这几个在学这个

26:56.560 --> 27:01.920
不会的 ok 啊 这个的话是构建时配置啊 这边呢 是这个运行时配置

27:02.960 --> 27:11.200
看一下啊 运行配置你来这边约定啊 src下面的app.tsx或者app.tsx

27:11.760 --> 27:14.560
啊 或者app.ts或者app.ts

27:14.960 --> 27:20.400
它是运行时配置 运行时配置的话 这边就可以配置这些东西啊 这边dwa呀

27:21.040 --> 27:23.040
nayout呀这些 ok

27:24.160 --> 27:28.400
啊 我们后面会用到啊 我们后面这后面这边在写项目的时候会用到

27:29.200 --> 27:37.920
ok 啊 这就是关于整个这个污密点接式的这个介绍啊 这几课的话也和就是之前介绍那个antd

27:38.320 --> 27:44.160
和介绍那个dwa 一样啊 不不和dwa不一样 第一网我们写了一下那个学生管理系统 是吧

27:44.720 --> 27:47.280
我们这边呢 就和那个介绍antd一样

27:47.920 --> 27:53.920
这几课的话 主要是介绍就是污密 它是一个什么样的东西 对不对啊 而且这个东西它是做什么的

27:54.400 --> 27:57.040
那接下来的话 大致介绍了一下它的这三个特点

27:57.760 --> 28:05.120
啊 这三个特点的话 也是污密比较有名的三个特点 约定是路由插件机制啊 人家这个关于这个配置文件

28:05.760 --> 28:09.600
ok 啊 大家下来的话 可以把这个污密点接式

28:10.080 --> 28:16.320
这个官网啊 你先把它浏览一下 对不对啊 稍微看一下 比如这边这个快速上手啊

28:16.800 --> 28:21.040
还就是这边一个这个开发一个博客呀 先大致看一下啊

28:21.680 --> 28:25.120
啊 我们下节课开始的话 我们就要正式开始做东西了

28:25.680 --> 28:29.680
那下节课的话 咱们就要用到什么呢 要用到污密介绍

28:30.000 --> 28:34.080
要用到antd pro啊 要用到dwa 就后面整个那个项目

28:34.640 --> 28:43.040
ok 所以这边呢 提前花了三节课啊 把这三个东西给大家介绍介绍啊 大家做一个了解 你不需要了解的多深

28:43.520 --> 28:44.320
就是多深入

28:44.960 --> 28:53.600
知道吧 不需要了解的多深入 你这边大致知道就是这三个东西是什么啊 要大致漏一眼啊 把他们的这个官方文档大致漏一眼

28:54.960 --> 29:00.960
对不对啊 你后面在公司里面这个做开发的话 其实都是这样子的啊 很多时候就是

29:01.920 --> 29:07.680
会涉及到很多新技术 那新技术呢 都是这个看一下这个官方文档大致漏一眼啊 有点些功能

29:07.840 --> 29:11.600
那把它的官方的这个demo跑一遍啊 大致就上手了

29:12.240 --> 29:18.480
ok 好 这节课就先到这里 ok 我们下节课再见啊 拜拜

