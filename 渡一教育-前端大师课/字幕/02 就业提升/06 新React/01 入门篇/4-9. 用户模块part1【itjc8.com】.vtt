WEBVTT

00:00.000 --> 00:04.080
OK 这些课的话 咱们就进入到这个用户这个模块啊

00:04.640 --> 00:07.360
好 用户这个模块的话 咱们主要就是把那个

00:08.160 --> 00:16.080
把这个就是渲染 把渲染讲一下 因为这边的话这个用户列表的这个渲染啊 和我们之前做的这个管理员

00:16.960 --> 00:25.040
这个管理员他是不一样的 OK 这个用户列表用户列表的话 我就没有通过这个仓库去发请求了 我是直接就是

00:25.840 --> 00:31.760
呃 在这个组件发的请求啊 用的就是什么呢 用的就是他推荐的那种方式啊 这边我们来看一下

00:32.800 --> 00:40.240
他叫什么呢 叫做pro components啊 这几个文档是吧 因为我之前做项目之前我说过

00:40.640 --> 00:42.560
我们这边的话好几个文档换上来

00:43.680 --> 00:51.620
啊 这边你把切成中文吧啊 大家这边这个组件 组件的这个pro table

00:52.740 --> 00:57.700
pro table 好pro table在哪个位置 在这边

00:58.580 --> 00:58.980
下面

01:00.420 --> 01:04.020
哎 他这个是啊 这个是form找到table

01:05.860 --> 01:07.780
找到table table的话在

01:08.660 --> 01:09.860
这边request

01:10.820 --> 01:13.380
怎么样 这边啊 这个好像我之前给大家看过的吧

01:14.020 --> 01:17.060
啊 request 是这个pro table最重要的一个api

01:17.620 --> 01:21.380
啊 他会接受一个对象对象里面必须要有data和sync sense

01:22.180 --> 01:25.380
对不对 好 那我们这一次的话就是通过这种方式

01:25.940 --> 01:29.380
来发送请求 ok 好 这边让我给大家记一下吧

01:30.100 --> 01:32.100
笔记里面记一下啊

01:33.300 --> 01:33.940
就关于

01:35.700 --> 01:41.060
关于这个啊 发送请求或说发送请求

01:41.860 --> 01:43.140
获取这个数据

01:44.100 --> 01:45.220
电脑真的是烦

01:47.700 --> 01:52.660
好 这里的话有两种啊 有两种处理方式

01:53.540 --> 01:56.340
有两种呢 然后一种的话是就是通过

01:57.780 --> 01:59.380
通过这个dispatch

02:00.580 --> 02:03.140
dispatch 一个什么action

02:03.940 --> 02:05.940
到什么 是不是到这个状态倉库

02:07.700 --> 02:11.620
状态倉库啊 然后状态倉库

02:12.980 --> 02:17.300
然后状态倉库来发请求

02:18.260 --> 02:25.380
对不对 好 请求回来的数 请求回来数据啊 请求回来的数据

02:25.860 --> 02:28.820
然后放入到哪里去

02:29.220 --> 02:32.100
放入到数据倉库中

02:33.300 --> 02:37.940
ok 这个的话我们之前的我们的那个管理员模块是不是采用的是这种方式啊

02:38.660 --> 02:39.460
管理员模块

02:40.820 --> 02:42.740
对啊 在这边吧

02:43.620 --> 02:44.340
写到这里来

02:45.220 --> 02:49.140
我们之前的这个管理员模块就采用的是这种方式

02:49.540 --> 02:51.460
好 这种方式适用于什么呢

02:51.460 --> 02:54.340
适用于就是你这边首先 第一个就是你比如说你这个

02:55.060 --> 02:55.620
数据不多

02:56.420 --> 03:00.260
对吧 你这个管理员我之前说你管理员数据不多那我这边可以全部请求

03:00.260 --> 03:04.740
请求的时候放到我这个前端这个倉库里面对不对 数据量不多

03:06.020 --> 03:06.580
适用于

03:08.180 --> 03:13.860
适用于啊数据量不多啊或者什么呢或者就是多个组件

03:15.060 --> 03:15.860
要共享

03:16.820 --> 03:17.700
要共享

03:18.260 --> 03:19.140
某一块数据

03:20.100 --> 03:23.620
对不对 我们说了我们最早这个数这个状态倉库

03:24.260 --> 03:30.020
就是为了解决什么 是不是解决这个多个组件啊多个组件共享这个数据的这个问题

03:30.900 --> 03:31.940
对不对啊

03:31.940 --> 03:33.780
所以这边啊就是这个是第一种

03:33.780 --> 03:35.780
第二种什么呢第二种的话就是直接

03:36.820 --> 03:38.340
直接在组件里面

03:38.580 --> 03:40.660
在组件里面

03:40.900 --> 03:42.180
请求数据

03:43.460 --> 03:47.060
ok 那这种的话就是什么呢 就是你数据量很大的时候

03:47.780 --> 03:49.380
数据量

03:50.340 --> 03:51.940
很大啊 并且

03:53.140 --> 03:55.220
不需要和其他组件

03:56.180 --> 04:01.700
首先第一个是这个数据量很大啊 第二个吧啊 不需要和其他组件

04:02.100 --> 04:02.500
共享

04:03.460 --> 04:06.500
对不对 那比如说什么 比如说就是我们这边的用户

04:07.140 --> 04:11.060
对不对 你要考虑到你的用户啊 他的增长肯定比你管理员要快得多了

04:11.620 --> 04:16.500
对不对 你用户的这个增长啊 那你比如说有几万条10多万条这个用户啊

04:16.580 --> 04:19.700
包括书籍面试题问答评论这些这些都是

04:20.340 --> 04:25.940
对不对 这些这些摩扩拉有个特点啊 就是什么呢 你在请求的时候只能分业请求

04:28.020 --> 04:29.860
啊 就数据量很大 我写在上面吧

04:30.500 --> 04:32.660
数据量很大 在请求的时候

04:33.540 --> 04:34.020
在

04:35.220 --> 04:35.540
向

04:36.500 --> 04:37.700
这个服务器

04:38.420 --> 04:40.580
发送请求的时候

04:41.300 --> 04:43.540
只能什么呢只能分业请求

04:46.450 --> 04:49.250
对不对 他不像你这个之前的这种方式

04:49.490 --> 04:53.570
之前你看我们这个管理员的时候 直接去干嘛是把所有的管理员是不是全部拿到

04:54.130 --> 04:58.690
对不对 全部拿到的直接拿过来就可以了 但你这边的话就这些摩扩的话就不一样

04:59.250 --> 05:03.970
这些摩扩的话 那你就只能什么分就是分业请求 比如我请求我这个

05:04.450 --> 05:04.850
一页

05:05.330 --> 05:07.970
一页比如说显示10条数据或者5条数据

05:08.370 --> 05:13.010
啊 要将我一页一页的来请求啊 当前是第二页 你把第二页的这个数据给我

05:13.410 --> 05:16.370
对不对 你必须就是向这个服务器分业进行请求

05:16.850 --> 05:19.090
服务器那边在查询的时候也是分业查询

05:19.730 --> 05:21.570
啊也是分业查询 okay

05:21.810 --> 05:23.890
说你看这边啊 这边这个API这边

05:25.410 --> 05:26.370
我们找到那个API

05:27.090 --> 05:28.770
这个好像之前也是给他说过的啊

05:29.330 --> 05:31.650
这么API这边 你看管理员和那个

05:32.450 --> 05:32.850
类别

05:33.410 --> 05:36.290
他就是什么呢 就没有什么分业获取啊 比如这个

05:37.250 --> 05:43.730
比如这个管理员 管理员你看他这边就不存在这个分业获取 这边就干嘛 是不是直接一个获取所有管理员

05:44.770 --> 05:46.130
对不对 但是你看其他的

05:46.610 --> 05:49.010
比如这个用户摩扩 用户摩扩这边就是干嘛

05:49.570 --> 05:52.050
是那个服务器团那边是不是分业给你提供数据

05:52.610 --> 05:53.730
对不对 因为数据量大呀

05:54.530 --> 05:57.570
啊 内形内形的话也是获取所有的内形啊

05:57.810 --> 06:01.810
好 大家这边这个数据是分业获取数据啊 这个评论

06:02.690 --> 06:03.410
评论这边

06:04.370 --> 06:05.490
根据板块

06:06.770 --> 06:10.850
嗯 评论这边应该也是分了也是分业了的啊 我看一下这边

06:11.570 --> 06:15.250
肯定是分业了啊 有看到没有 这边分了业了啊

06:16.050 --> 06:18.610
好啊 比如说这个问答

06:19.970 --> 06:21.490
对不对 分业 分业获取

06:22.050 --> 06:26.050
ok 这个你要分清楚啊 要分清楚 这个其实就是我之前所说的

06:26.050 --> 06:30.770
你不要就是学了这个数据仓库之后啊 既然这边每次都是通过这个数据仓库

06:31.170 --> 06:35.090
不要去滥用它 你要明白它在什么场景下使用什么

06:35.570 --> 06:37.490
对不对 我们一般的话 我们一个技术

06:37.890 --> 06:42.530
它是有这个使用场景的 什么场景下使用什么样的这个技术

06:43.250 --> 06:46.770
明白没有啊 这个技术呢 它是为了解决什么问题而诞生的

06:47.250 --> 06:52.530
我们数据仓库说白了就是为了解决什么 就是为了解决这个组件之间数据的这个共享

06:53.410 --> 06:54.210
对不对啊

06:55.650 --> 07:00.930
好 那接下来回到我们这边啊 回到我们这边啊 我们这边的话来写这个用户

07:01.650 --> 07:04.450
来写用户这边配戟把这个user

07:05.570 --> 07:12.130
user啊 把这边把它打开啊 这边是user page 是吧啊 user page 让我们这边来看一下

07:14.050 --> 07:16.530
user用户列表啊 先是这样子的 ok

07:17.090 --> 07:24.210
好 我们来看一下这边 这边用户列表 ok 好 那我这边我就直接写 而首先的话需要添加那个service

07:25.010 --> 07:27.810
对不对 service 我们来到这边service 这边

07:28.770 --> 07:32.530
service 这里啊 这里的话你就添加一个什么 添加一个user

07:33.650 --> 07:39.410
user.js啊 这个user.js 这边就放什么 说翻你这个琴球的这个api

07:40.210 --> 07:44.610
对不对啊 那这个的话我就全部拿过来了啊 这就没必要再带着敲了

07:45.170 --> 07:46.050
敲过很多次了

07:47.410 --> 07:55.170
ok啊 你这边看一下 你request啊 这边是分页获取 对吧 这边是根据你的这个id来获取

07:55.810 --> 08:02.610
啊 这边是新增 这是根据这个id删除 这是根据id修改 ok 那最终的话把它导出出去

08:03.330 --> 08:11.490
对吧 保存一下 好 那接下来回头的话来到这边 回到我们这边啊 这边的话咱们来写下关于这个user

08:11.890 --> 08:15.090
那user的话 这边首先还是什么呢 首先的话还是就是

08:15.810 --> 08:16.130
嗯

08:17.730 --> 08:22.990
这里需要一个这个pag container page

08:24.990 --> 08:27.310
pag container ok

08:28.030 --> 08:32.270
好 page container 那这个的话需要从哪里去演 是不是从你的那个pro

08:33.550 --> 08:37.310
import page container from

08:39.070 --> 08:40.510
是这个pro components啊

08:41.470 --> 08:47.070
对吧 把它引入好 引入之后再加在这里面 这里面的话是一个这个pro table

08:48.190 --> 08:48.830
pro table

08:50.670 --> 08:53.710
pro table啊 这个的话用一个单标签就可以了

08:55.070 --> 09:00.910
啊 这个呢 就是我们的这个表格 ok 啊 这边呢 首先呢 给一个这个header title

09:02.350 --> 09:05.630
header title啊 这边呢 是用户列表

09:06.590 --> 09:20.900
哎 这边怎么了 啊 没影啊 要不然来引一下 ok 好 然后下这边让它继续 这边的话 然后有一个非常重要的叫做什么 叫做request

09:21.940 --> 09:26.020
ok 叫做request 好 我们来看一下这个request 这个该怎么写

09:26.740 --> 09:31.300
你回到这边 你看一下它这个request 它这边其实有势力的

09:32.020 --> 09:38.020
可不 它这边有势力啊 你这边也可以看我看这边就是这啊 就是这

09:38.580 --> 09:43.780
好 这个request request 它这边对应的是一个什么 说对应的是一个异步函数

09:44.820 --> 09:49.060
对不对 异步函数 异步函数 然后接下来这边呢 有它传入的这个promise

09:49.540 --> 09:55.940
它给的是ts的这个势力啊 但是这个没关系 你这边也应该是看得懂的 这边给了promise

09:56.580 --> 10:01.940
promise 就是你额外要传的一些参数 那加这边有什么呢 有pag size 有这个current

10:02.660 --> 10:06.260
ok 好 大家这边这边是不是就是调用你那个查询的这个api

10:06.980 --> 10:12.900
对不对 调用查询的api 大家这边进行查询 查询完了之后 把这个数据把它返回回去

10:13.700 --> 10:19.700
看到没有啊 它整体的这个使用方式就是这样子来用的啊 那回到我们这边

10:20.660 --> 10:26.900
回到我们这边 那我们这边呢 首先需要维护一组什么呢 需要维护一组我们分业的这个数据

10:27.300 --> 10:32.340
注意呦 区别来了呦 和之前那个管理员的那个区别就来了呦啊 首先

10:34.100 --> 10:35.460
首先需要维护一组

10:36.820 --> 10:41.860
首先需要维护一组这个分业

10:42.820 --> 10:47.700
相关的数据 你看我们之前那个andme 有没有维护啊 andme不需要

10:48.100 --> 10:53.860
andme你直接就把所有的数据是不是就拿过来了 拿过来了之后我那个这个pagination 只写了一个什么

10:54.580 --> 10:55.940
我们这边回到这边再来看一下

10:56.820 --> 11:04.180
这边我们这边是不是之前的话不需要维护什么分业的数据 对不对 直接把所有的数据拿到 拿到之后我这边分业写个什么 是不是写个

11:04.500 --> 11:05.540
配级赛子是我

11:06.660 --> 11:12.820
每一页显示五条 让我这个的话一共有多少页 是不是算得出来 对不对 因为我的这个总调数是有的

11:13.220 --> 11:18.580
啊 所以他一共多少页他是算得出来的 ok 好这边这边就不一样了 这边我们需要维护一组

11:18.980 --> 11:21.700
分业相关的数据啊 这个分业数据

11:22.660 --> 11:26.020
分业数据回头是会

11:28.260 --> 11:31.780
是会被什么是会被这个

11:33.300 --> 11:38.020
呃 这个该怎么描述呢 就是这个分业数据回头是会被这个作为参数

11:38.980 --> 11:43.860
作为参数 作为这个参数啊 然后接下来一起

11:44.740 --> 11:47.140
发送到这个服务器的

11:48.100 --> 11:51.140
对吧啊 你看这个接口啊 你看这个接口就看得出来

11:51.860 --> 11:52.100
在

11:53.620 --> 11:55.620
user user 这边

11:57.460 --> 12:03.700
分业 你看我这边是不是需要这两个数据啊 对不对 你当前是第几页 每页显示多少条 ok

12:04.340 --> 12:06.420
啊 所以这边这边呢 咱们就const

12:08.020 --> 12:09.940
const一个pagination

12:11.620 --> 12:17.120
pagination ok 那一个setpagination

12:18.080 --> 12:19.120
set

12:20.400 --> 12:24.320
pagination啊 等于一个什么呢 等于一个user state

12:27.070 --> 12:29.630
ok啊 这边这边呢 一个current

12:30.590 --> 12:36.590
current 默认是什么呢 默认是第一页啊 大家这个pagicize 是多少呢 是这个5

12:37.470 --> 12:43.470
可不可以啊 首先维护一个这个信息啊 维护一个这个信息之后 然后接下来的话来到你这边

12:44.430 --> 12:49.230
这边request这边啊 这边呢就应该是一个什么 是不是就应该是一个异不寒树啊

12:52.220 --> 12:56.220
对不对 就是一个异不寒树啊 异不寒树 然后接下来的话 这边这个

12:57.260 --> 13:04.020
让我想一下 他这边的话 就会自动传入一个叫做parmas的参数

13:05.700 --> 13:10.820
ok 你这边呢 可以把这个parmas 你可以把它打印一下啊 这边parmas

13:12.500 --> 13:17.300
parmas ok 保存一下 保存了之后 然后下这边啊 这边你看

13:17.380 --> 13:25.060
看一下啊 这边看这边 他接受一个参数叫做parmas啊 这parmas里面一定会有什么 一定会有pagicize和current

13:25.700 --> 13:28.500
啊 这两个参数是antd的这个规范啊

13:29.140 --> 13:35.700
好 我们这边我们来看一下用户列表啊 这边报错了啊 报的user state is not defined啊 这个很好办 是吧

13:36.260 --> 13:37.940
这个你把它引入一下

13:39.220 --> 13:45.060
user state 格式化一下 好 这边呢 咱们保存 保存了之后 这边再来看一下

13:45.620 --> 13:50.420
你看 他这边呢 是不是会传入啊 current是一pagicize

13:51.140 --> 13:53.700
20 我看一下pagicize

13:54.500 --> 14:00.820
pagicize 我们这边呢 设置的是5 是吧 他这边的话是默认 他那他这个应该是个默认字

14:01.620 --> 14:07.540
啊 应该是个默认者current1 然后pagicize是一个20好 然后我们这边呢 我们再来设置一下

14:08.100 --> 14:13.860
我们把这个他的这个分页 我们把它设置一下就可以了 好 所以你这边呢 会有个什么呢 会有个pagination

14:14.420 --> 14:21.630
啊 这边来看一下 在这边 我们会有一个什么呢 会有一个pagination

14:23.230 --> 14:33.140
pagination 哎pagination在哪里啊 一定是有的哈 肯定是有的

14:34.180 --> 14:35.220
pagination

14:36.660 --> 14:47.460
那我找一找 嗯 我看一下这个是pro table吧 对了吗

14:48.340 --> 14:51.540
pro table pro table上面的pagination

14:52.020 --> 14:56.980
如果这上面没有 你要去哪去找 你就去那个上面去找去那个underd那个

14:57.940 --> 15:03.940
underd那个组建库里面去找 我看这边好像没看到 没看到没关系 你就去那个underdesign

15:05.700 --> 15:13.310
啊 这边so underdesign 大家在这里面来找啊 大家这边啊这个主线

15:14.430 --> 15:19.260
啊 你这边找一下吗 这边table啊 表格

15:21.100 --> 15:23.900
啊 这边找一下这个api table

15:24.700 --> 15:29.100
啊 他卡住了 稍等 啊 这边这个table

15:30.220 --> 15:36.380
然后你看这边 对不对 肯定是有的啊 你这个pro table他就是基于什么 基于这个underd的

15:36.700 --> 15:42.940
啊 说他上面有的属性 他上面有的属性他一定有啊 你如果这这边没找到的话 就到这边来找

15:43.500 --> 15:48.300
啊 这边呢 他实际上他这边记录的是什么呢 他这边记录的就是额外给你新增的

15:48.540 --> 15:52.620
有像request啊这些 就这个pro table给你额外新增的一些api

15:53.580 --> 15:59.740
啊 你看这边这边是不是就会有一个这个pagination 对不对 这个分业器啊 我们这边就把拿到

16:01.020 --> 16:10.380
pagination 啊 这边等于什么呢 啊 这边给他配置一个这个对象啊 对象里面的话 你就可以配置啊 就和我们之前前台是一样的

16:10.940 --> 16:12.780
ok 啊 比如说我这边修

16:13.980 --> 16:15.420
修这个click jumper

16:16.700 --> 16:19.260
click jumper 啊 这边让它是一个q

16:19.980 --> 16:23.020
好 大家这边啊 一个这个修

16:24.140 --> 16:24.540
size

16:25.740 --> 16:29.180
size 其实个清净儿 啊 让它是一个q

16:30.380 --> 16:30.620
啊

16:32.700 --> 16:36.460
好 然后接下来 然后这边有个这个pag options

16:37.020 --> 16:37.820
pag size

16:38.860 --> 16:39.420
options

16:41.860 --> 16:48.500
啊 这边你就是你这边 就是你那个改 每页有多少条数据 你这边可以设置比如我

16:49.220 --> 16:52.740
然后10 然后15 20

16:53.620 --> 16:56.420
对吧 好 然后接下来这边的话点点点

16:58.020 --> 17:00.340
点点点这个pagination

17:01.620 --> 17:06.340
我看一下pagination 对了啊 这边点点点是什么意思啊 这边要加个都好

17:06.900 --> 17:09.700
这个点点点pagination 是什么 是把它展开

17:10.260 --> 17:13.300
对对 把它展开相当于是什么 相当于是这边设置

17:13.620 --> 17:14.260
current

17:14.820 --> 17:17.220
current对应了你这边的指示多少 是不是

17:17.220 --> 17:19.460
人家这边什么 是pag size

17:20.500 --> 17:23.220
pag size 你这边对应了指示我

17:23.220 --> 17:24.980
所以相当于就是在这边这样子写

17:25.700 --> 17:30.800
对不对啊 所以这边点点点点点点

17:32.640 --> 17:34.800
这个pagination

17:35.520 --> 17:36.160
把拿过来

17:36.800 --> 17:40.320
好 拿过来之后 然后接下来的话 还有一个什么呢 还有一个是这个on clean

17:45.170 --> 17:46.050
on clean

17:47.010 --> 17:50.370
on clean 对应一个是这个handle clean

17:51.570 --> 17:54.290
啊 这边handle clean

17:55.090 --> 17:56.290
handle page clean

17:57.170 --> 18:02.370
这个呢 就是你这边就是你那个分页啊 比如你在跳转的时候或者修改了这个每一页

18:02.370 --> 18:06.130
显示多少条的时候 它这边会调取这个回调喊说

18:06.690 --> 18:07.010
ok

18:07.650 --> 18:08.690
啊 我们这边function

18:11.490 --> 18:15.010
啊 这里这里的话就是分页器

18:15.810 --> 18:17.570
分页器

18:19.090 --> 18:22.930
或者说分页组件嘛 分页组件发生修改时

18:23.970 --> 18:29.090
修改时啊 会调用持回调喊说

18:30.370 --> 18:35.490
好 这些属性是在哪看的 这些属性的话是在这个pagination里面

18:35.730 --> 18:39.330
ok 这个大家之前做过那个前台应该知道了吧

18:39.330 --> 18:40.610
就这个pagination这边

18:41.570 --> 18:43.890
看没有 这边这个api

18:43.890 --> 18:46.450
API这边对不对 your current

18:46.450 --> 18:47.730
pagic size

18:47.730 --> 18:49.730
这个pagic size options

18:49.730 --> 18:51.410
这在这里看的

18:51.410 --> 18:55.010
好 回到这边再来看一下 这边刷新一下

18:55.010 --> 19:00.380
呃 这边怎么还是二十呢

19:00.940 --> 19:02.220
看一下啊

19:03.260 --> 19:04.220
看一下这边

19:04.780 --> 19:06.060
这边是怎么回事

19:07.340 --> 19:09.900
这边的话让我想想啊

19:10.060 --> 19:11.900
嗯 这里回到这边

19:11.900 --> 19:13.740
诶 让我们刷新一下

19:13.740 --> 19:15.740
这里好像已经ok了对不对

19:15.740 --> 19:18.140
啊 这边就是你配置了那个pagination之后

19:18.140 --> 19:20.140
啊 他这边就根据你的pagination

19:20.140 --> 19:22.140
这边是不是就是e5

19:22.140 --> 19:24.140
这就ok了对不对

19:24.140 --> 19:25.260
啊 这边注意啊

19:25.260 --> 19:26.780
这边写个笔记吧

19:26.780 --> 19:27.580
写个笔记

19:27.580 --> 19:29.580
这块内容稍微多一些

19:29.580 --> 19:31.180
啊 关于

19:31.180 --> 19:35.900
关于在这个pro

19:35.900 --> 19:37.900
pro table

19:38.780 --> 19:40.780
pro table

19:40.780 --> 19:42.780
啊 主键中

19:42.780 --> 19:44.780
然后使用

19:44.780 --> 19:46.780
这个request

19:46.780 --> 19:48.780
request

19:48.780 --> 19:50.780
发送请求

19:50.780 --> 19:52.780
ok

19:52.780 --> 19:54.780
好 然后这个pro

19:54.780 --> 19:56.780
pro table

19:56.780 --> 19:58.780
啊 有一个重要的属性

19:58.780 --> 20:00.780
重要的属性

20:00.780 --> 20:02.780
啊 叫做这个request

20:02.780 --> 20:04.780
对不对

20:04.780 --> 20:06.780
该属性

20:07.660 --> 20:09.660
该属性对应的值

20:09.660 --> 20:11.660
一般是一个什么

20:11.660 --> 20:13.660
一般是一个这个

20:13.660 --> 20:15.660
异步函数

20:15.660 --> 20:16.620
对不对

20:16.620 --> 20:17.660
异步函数

20:17.660 --> 20:19.660
啊 然后该异步函数

20:19.660 --> 20:21.660
该异步函数

20:21.660 --> 20:23.660
自动接收

20:23.660 --> 20:25.660
一个这个promise

20:25.660 --> 20:27.660
啊 这个promise的话

20:27.660 --> 20:28.780
是什么

20:28.780 --> 20:30.780
promise中

20:30.780 --> 20:32.780
promise中

20:32.780 --> 20:33.660
会有什么呢

20:33.660 --> 20:35.660
会有默认的这个

20:35.660 --> 20:38.540
当前夜码数

20:38.540 --> 20:40.540
当前夜码数

20:40.540 --> 20:42.540
啊 就当前夜码和什么

20:42.540 --> 20:44.540
是每一页

20:44.540 --> 20:46.540
每一页

20:46.540 --> 20:48.540
的调数

20:48.540 --> 20:50.540
还记得吧

20:50.540 --> 20:52.540
一个是current

20:52.540 --> 20:54.540
一个是current

20:54.540 --> 20:56.540
那一个是pg size

20:56.540 --> 20:58.540
pg size

20:58.540 --> 21:00.540
ok

21:00.540 --> 21:02.540
那这两个值的话会有默认值

21:02.540 --> 21:04.540
这两个值

21:04.620 --> 21:06.620
会有默认值

21:06.620 --> 21:08.620
对不对

21:08.620 --> 21:09.500
默认

21:09.500 --> 21:14.990
current

21:14.990 --> 21:16.990
默认为多少

21:16.990 --> 21:18.990
默认为1

21:18.990 --> 21:20.990
对吧

21:20.990 --> 21:22.990
好 大家这边了这个pg size

21:22.990 --> 21:24.990
pg size

21:24.990 --> 21:26.990
默认为多少

21:26.990 --> 21:28.990
默认为20

21:28.990 --> 21:30.990
对不对

21:30.990 --> 21:32.990
可以通过什么呢

21:32.990 --> 21:34.990
通过配置这个pagination

21:34.990 --> 21:36.990
pagination怎么写

21:40.480 --> 21:42.480
可以通过来配置这个pagination

21:42.480 --> 21:44.480
属性

21:44.480 --> 21:46.480
来这个

21:46.480 --> 21:48.480
呃

21:48.480 --> 21:50.480
来什么

21:50.480 --> 21:52.480
这边就是修改

21:52.480 --> 21:54.480
修改这个current

21:54.480 --> 21:57.860
current

21:57.860 --> 21:59.860
和这个pg size

21:59.860 --> 22:01.860
pg size

22:01.860 --> 22:03.860
的值

22:03.860 --> 22:05.860
对不对

22:05.860 --> 22:07.860
来一个代码的这个截图

22:08.820 --> 22:10.820
pro compo

22:10.820 --> 22:16.270
把这个回退一下

22:16.270 --> 22:18.270
把这个

22:18.270 --> 22:20.270
ok

22:20.270 --> 22:23.900
这个稍微把它回退点

22:23.900 --> 22:25.900
这个每次粘过来

22:25.900 --> 22:27.900
稍微有点问题

22:27.900 --> 22:32.430
把这个稍微调整一下

22:32.430 --> 22:34.430
然后还要这里

22:34.430 --> 22:36.430
最后一个on clean

22:36.430 --> 22:38.430
ok

22:38.430 --> 22:40.430
好 那有了这一步之后

22:40.430 --> 22:42.430
后面就好办了

22:42.430 --> 22:44.430
你现在parmas是什么

22:44.430 --> 22:46.430
current和这个pg size

22:46.430 --> 22:48.430
所以你看我这边为什么

22:48.430 --> 22:50.430
命名叫做current和pg size

22:50.430 --> 22:52.430
我这边没有命名叫做currentpag

22:52.430 --> 22:54.430
这个是有原因的

22:54.430 --> 22:56.430
知道吧 是有原因的

22:56.430 --> 22:58.430
这边让我就刚好是什么

22:58.430 --> 23:00.430
current和什么和你的parmas

23:00.430 --> 23:02.430
能够对应是吧

23:02.430 --> 23:04.430
对不对

23:04.430 --> 23:06.430
好 然后接下来这里

23:06.430 --> 23:08.430
这里的话 那我们就要发请求了

23:08.430 --> 23:10.430
那发请求的话 这边你需要把那个请求方法

23:10.430 --> 23:12.430
需要把它引一下

23:12.430 --> 23:16.430
import一个user controller

23:16.430 --> 23:18.430
from

23:18.430 --> 23:20.430
车下面的service

23:20.430 --> 23:22.430
下面的user

23:22.430 --> 23:24.430
对不对

23:24.430 --> 23:26.430
好 然后接下来这边

23:26.430 --> 23:28.430
这边的话就应该是什么

23:28.430 --> 23:30.430
这边的话就是应该是await

23:30.430 --> 23:32.430
这边await

23:32.430 --> 23:34.430
user controller

23:34.430 --> 23:36.430
点get

23:36.430 --> 23:38.430
这边看一下

23:38.430 --> 23:40.430
get user by page

23:40.430 --> 23:42.430
对吧

23:42.430 --> 23:44.430
get user by page

23:44.430 --> 23:46.430
然后把这个parmas

23:46.430 --> 23:48.430
是吧 传过去

23:48.430 --> 23:50.430
对不对 传过去之后 然后就在这边来看一下

23:50.430 --> 23:52.430
来看一下这个结果能不能拿得到

23:52.430 --> 23:54.430
这边

23:54.430 --> 23:56.430
serge result

23:56.430 --> 23:58.430
保存

23:58.430 --> 24:00.430
保存到这边来看一下

24:00.430 --> 24:02.430
这边刷新一下

24:02.430 --> 24:06.770
拿到了没有

24:06.770 --> 24:08.770
拿到了吧 什么我这一页的数据

24:08.770 --> 24:10.770
我就已经拿到了

24:10.770 --> 24:12.770
这边 当前也是1

24:12.770 --> 24:14.770
每页显示5条

24:14.770 --> 24:16.770
总数是18

24:16.770 --> 24:18.770
偷偷配几14

24:18.770 --> 24:20.770
这就拿到了 拿到之后

24:20.770 --> 24:22.770
后面就好办了

24:22.770 --> 24:24.770
后面就干嘛 后面你看它这边

24:24.770 --> 24:26.770
它这边是反回一个对象

24:26.770 --> 24:28.770
对不对 反回一个对象

24:28.770 --> 24:30.770
data就是你要渲染的data

24:30.770 --> 24:32.770
这个sense

24:32.770 --> 24:34.770
这边是一个布尔值

24:34.770 --> 24:36.770
那这边就应该是q

24:36.770 --> 24:38.770
偷偷的就是应该是

24:39.770 --> 24:41.770
对不对 好 那我们这边就跟着它来

24:41.770 --> 24:43.770
这边那就是return

24:43.770 --> 24:45.770
我们首先先看一下这个值

24:45.770 --> 24:47.770
反回的这个值

24:47.770 --> 24:49.770
反回的这个值是长这个样子的

24:49.770 --> 24:51.770
长这个样子的

24:51.770 --> 24:53.770
我们把它

24:53.770 --> 24:55.770
定在这里

24:55.770 --> 24:57.770
回到这边

24:57.770 --> 24:59.770
这边的话就是需要返回

24:59.770 --> 25:01.770
return一个什么

25:01.770 --> 25:02.770
对象

25:02.770 --> 25:04.770
对象里面有什么 首先有个data

25:04.770 --> 25:06.770
data应该是等于什么

25:06.770 --> 25:08.770
result

25:08.770 --> 25:10.770
点data

25:10.770 --> 25:12.770
result点data 拿到什么

25:12.770 --> 25:14.770
拿到这个data 这个对象

25:14.770 --> 25:16.770
这个对象里面有这么多东西

25:16.770 --> 25:18.770
大家这边再干嘛

25:18.770 --> 25:20.770
再点data

25:20.770 --> 25:22.770
对吧 好 再加这边的sense

25:22.770 --> 25:24.770
sense的话就应该是等于什么

25:24.770 --> 25:26.770
所以就是你这边你这个code

25:26.770 --> 25:28.770
是0 是不是代表成高

25:28.770 --> 25:30.770
对吧 好 那这边就是result

25:32.770 --> 25:34.770
点什么呢 点code

25:35.770 --> 25:37.770
对吧 好 那还有个什么

25:37.770 --> 25:39.770
看一下

25:39.770 --> 25:41.770
还有一个是toto 是吧

25:41.770 --> 25:43.770
toto

25:43.770 --> 25:45.770
toto是你的总数

25:45.770 --> 25:47.770
总数的话就是应该是result

25:47.770 --> 25:49.770
点data

25:49.770 --> 25:51.770
result 点data

25:51.770 --> 25:53.770
然后点什么

25:53.770 --> 25:57.850
result 我看一下啊

25:57.850 --> 25:59.850
这边的话toto

25:59.850 --> 26:01.850
就应该是result 点data

26:01.850 --> 26:03.850
然后加这边是不是应该点data

26:03.850 --> 26:05.850
点什么

26:05.850 --> 26:07.850
点你的count

26:07.850 --> 26:09.850
这边是这样子

26:09.850 --> 26:11.850
对不对 没对

26:11.850 --> 26:13.850
这边是result 点data

26:13.850 --> 26:15.850
是不是就已经是这个对象了

26:15.850 --> 26:16.850
已经是这个对象了

26:16.850 --> 26:18.850
刚才这边点data 是不是

26:18.850 --> 26:19.850
对应的是这个data

26:19.850 --> 26:20.850
这边就应该是什么

26:20.850 --> 26:22.850
data 点counter

26:22.850 --> 26:24.850
data 点counter 是不是对应这个

26:24.850 --> 26:26.850
对不对 OK

26:26.850 --> 26:28.850
好 这个就是

26:28.850 --> 26:30.850
整个数据 咱们就拿到了

26:30.850 --> 26:32.850
拿到之后 大家这边保存一下

26:32.850 --> 26:34.850
来看一下

26:34.850 --> 26:36.850
现在这个什么都还没有

26:36.850 --> 26:38.850
这个现在什么没有是什么原因

26:38.850 --> 26:40.850
什么原因造成的

26:40.850 --> 26:42.850
你这边现在什么没有的话

26:42.850 --> 26:44.850
是因为你少写了一个什么

26:44.850 --> 26:46.850
少写了一个那個chroms

26:46.850 --> 26:48.850
对不对 你看你这边

26:48.850 --> 26:50.850
之前你在写的时候

26:50.850 --> 26:52.850
你这边是不是有这个chroms

26:52.850 --> 26:54.850
在这里

26:54.850 --> 26:56.850
对不对 有这个chroms

26:56.850 --> 26:58.850
然后加你这边再用这个表格的时候

26:58.850 --> 27:00.850
这边是不chroms 等于chroms

27:00.850 --> 27:02.850
对不对 你这边要配置

27:02.850 --> 27:04.850
这边要配置一下

27:04.850 --> 27:06.850
chroms 等于chroms

27:06.850 --> 27:08.850
大家这边把这个chroms

27:08.850 --> 27:12.290
你把它配置一下

27:12.290 --> 27:14.290
chroms 它应该等于一个什么

27:14.290 --> 27:16.290
它应该是一个数组

27:16.290 --> 27:20.690
对不对 它应该是个数组

27:20.690 --> 27:22.690
数组里面 然后接下来这边

27:22.690 --> 27:24.690
这个我就一项一项拿过来吧

27:24.690 --> 27:26.690
就全部拿过来吧

27:26.690 --> 27:28.690
看一下

27:28.690 --> 27:30.690
有什么需要特别注意的

27:30.690 --> 27:32.690
首先第一个就是需要注意的

27:32.690 --> 27:34.690
首先第一个 这边

27:34.690 --> 27:36.690
那有一个什么呢

27:36.690 --> 27:38.690
有一个这个序号

27:38.690 --> 27:40.690
看到没有 这边有个序号

27:40.690 --> 27:42.690
照理说就是那个

27:42.690 --> 27:44.690
管理员那边其实也应该添加个序号

27:44.690 --> 27:46.690
管理员这边是不是没有序号

27:46.690 --> 27:48.690
对不对 这边没有序号

27:48.690 --> 27:50.690
大家下去可以思考一下

27:50.690 --> 27:52.690
管理员我也想添加个序号

27:52.690 --> 27:54.690
这边该怎么做

27:54.690 --> 27:56.690
首先我这边 用户这边

27:56.690 --> 27:58.690
我有一个这个序号

27:58.690 --> 28:00.690
那这边的话我们应该怎么做呢

28:00.690 --> 28:02.690
这边我们首先对象

28:02.690 --> 28:04.690
Title

28:04.690 --> 28:06.690
Title对应的是一个序号

28:06.690 --> 28:08.690
OK

28:08.690 --> 28:10.690
序号然后加这边

28:10.690 --> 28:12.690
是一个center 这些都没什么

28:12.690 --> 28:14.690
对吧 这边这个wise

28:14.690 --> 28:16.690
wise的话给的是一个50

28:16.690 --> 28:18.690
好 然后加这边

28:18.690 --> 28:20.690
这边的话

28:20.690 --> 28:24.260
然后接下来这边Render

28:24.260 --> 28:26.260
Render

28:26.260 --> 28:28.260
Render对应的是一个什么

28:28.260 --> 28:30.260
是不是对应的是一个函数

28:30.260 --> 28:32.260
函数然后接下来的话

28:32.260 --> 28:34.260
所以Title这里的话就应该是

28:34.260 --> 28:36.260
你注意这个Render这边

28:36.260 --> 28:38.260
Render这边它其实是有函数的

28:38.260 --> 28:40.260
那你这边可以看一下

28:40.260 --> 28:42.260
这边它这个我看它是在哪里

28:42.260 --> 28:44.260
应该是在

28:44.260 --> 28:46.260
在那个表格

28:46.260 --> 28:48.260
表格的这个chrome

28:48.260 --> 28:50.260
设置那

28:50.260 --> 28:52.260
我们来看一下表格

28:52.260 --> 28:56.140
表格在这

28:56.140 --> 28:58.140
这边

28:58.140 --> 29:00.140
表格

29:00.140 --> 29:02.140
卡住了

29:02.140 --> 29:04.140
表格的话你这边看一下这个chrome

29:06.140 --> 29:08.140
chrome它这边不是可以

29:08.140 --> 29:10.140
是Render吗 这边Render

29:10.140 --> 29:12.140
原来这边其实是有这个值传入的

29:12.140 --> 29:14.140
这边分别是什么

29:14.140 --> 29:16.140
分别是这个当前行的值

29:16.140 --> 29:18.140
text

29:18.140 --> 29:20.140
大家这个record是当前行的数据

29:20.140 --> 29:22.140
index是什么

29:22.140 --> 29:24.140
index是行所引

29:24.140 --> 29:26.140
这边其实是有这个值传入的

29:26.140 --> 29:28.140
OK

29:28.140 --> 29:30.140
有值传入我们这边会用到什么

29:30.140 --> 29:32.140
会用到这个所引

29:32.140 --> 29:34.140
所引是你当前的什么

29:34.140 --> 29:36.140
当前的这个行的这个所引

29:36.140 --> 29:38.140
好 那我们在这边

29:38.140 --> 29:40.140
这边那我们就可以

29:40.140 --> 29:42.140
这边这个pagination

29:42.140 --> 29:44.140
点什么呢 点这个current

29:44.140 --> 29:46.140
当前页

29:46.140 --> 29:48.140
然后加减一个e

29:48.140 --> 29:50.140
然后乘一个什么呢

29:50.140 --> 29:52.140
乘一个你的pagination

29:52.140 --> 29:54.140
pagination

29:54.140 --> 29:56.140
点这个pagicize

29:56.140 --> 29:58.140
然后接下来加上一个什么

29:58.140 --> 30:00.140
加上一个index加1

30:00.140 --> 30:02.140
OK

30:02.140 --> 30:04.140
这个看得懂吧 这个

30:04.140 --> 30:06.140
比如说我现在的话我这个是d0

30:06.140 --> 30:08.140
这边一开始一开始怎么d0

30:08.140 --> 30:10.140
0的话让你当前页是什么

30:10.140 --> 30:12.140
当前页是d1

30:12.140 --> 30:14.140
d1这边减1就0

30:14.140 --> 30:16.140
0这边这边是不是0

30:16.140 --> 30:18.140
0的话加上你这边干嘛呢 index加1

30:18.140 --> 30:20.140
因为你这个下标是从什么

30:20.140 --> 30:22.140
是不是从0开始的

30:22.140 --> 30:24.140
对不对 那比如说我这边的第二条数据

30:24.140 --> 30:26.140
对吧 第二条数据

30:26.140 --> 30:28.140
第二条数据 第二条数据

30:28.140 --> 30:30.140
这个是不是应该是2 但是我的下标是什么

30:30.140 --> 30:32.140
下标的话是不是1

30:32.140 --> 30:34.140
对不对 所以这边1加1就等于2

30:34.140 --> 30:36.140
前面是什么呢 前面是根据你的这个页嘛

30:36.140 --> 30:38.140
你比如说现在是第二页了

30:38.140 --> 30:40.140
比如说我现在这边是第二页了

30:40.140 --> 30:42.140
第二页的话这边就是应该是什么

30:42.140 --> 30:44.140
6 7 8 9 10

30:44.140 --> 30:46.140
对不对 那这边就是根据什么呢

30:46.140 --> 30:48.140
根据你的这个分页的

30:48.140 --> 30:50.140
current和pagicize

30:50.140 --> 30:52.140
我这边是可以算出来的

30:52.140 --> 30:54.140
OK 我们这边来看一下

30:54.140 --> 30:58.220
这边刷新一下

30:58.220 --> 31:02.500
是不是出来了

31:02.500 --> 31:04.500
对了 你看这边1 2 3 4 5

31:04.500 --> 31:06.500
这边一共是4也

31:06.500 --> 31:08.500
1 2 3 4 5 是不是出来了

31:08.500 --> 31:10.500
出来了之后人家这边报一个错

31:10.500 --> 31:12.500
报到什么错

31:12.500 --> 31:14.500
each child

31:14.500 --> 31:16.500
这个child in list

31:16.500 --> 31:18.500
需要有一个这个key

31:18.500 --> 31:20.500
这个都很简单 对吧

31:20.500 --> 31:22.500
这个key你把它解决一下

31:22.500 --> 31:27.410
我想想这个应该是加在哪里

31:27.410 --> 31:29.410
这个的话应该是在表格上面

31:29.410 --> 31:31.410
就和你之前的那个endmins一样的

31:31.410 --> 31:33.410
对不对 在表格上面

31:33.410 --> 31:35.410
把这个key给它加一下

31:35.410 --> 31:37.410
OK 保存

31:37.410 --> 31:39.410
保存之后人家这边再来看一下

31:39.410 --> 31:43.620
是不是OK了

31:43.620 --> 31:45.620
对不对 你这边序号

31:45.620 --> 31:47.620
OK了 这是首先第一个

31:47.620 --> 31:49.620
关于这个序号

31:49.620 --> 31:51.620
然后后面的话就是登录账号

31:51.620 --> 31:53.620
密码 泥撑 头像这些

31:53.620 --> 31:55.620
这些都没什么 这些我直接拿过来

31:55.620 --> 31:57.620
这边的话

31:57.620 --> 31:59.620
直接把它拿过来

31:59.620 --> 32:01.620
好 然后放到这边

32:01.620 --> 32:03.620
格式化一下

32:03.620 --> 32:05.620
OK 这边是登录账号对吧

32:05.620 --> 32:07.620
密码 泥撑 头像

32:07.620 --> 32:09.620
头像这边的话会有一个这个

32:09.620 --> 32:11.620
value type 是e-match

32:11.620 --> 32:13.620
OK 保存一下

32:13.620 --> 32:15.620
保存之后人家这边是不是出来了

32:15.620 --> 32:17.620
对不对 出来之后你注意这上面

32:17.620 --> 32:19.620
注意上面

32:19.620 --> 32:21.620
上面的话我就可以干嘛呢

32:21.620 --> 32:23.620
我就可以根据这个序号

32:23.620 --> 32:25.620
可以根据这个登录账号

32:25.620 --> 32:27.620
根据这个泥撑

32:27.620 --> 32:29.620
下这边进行搜索

32:29.620 --> 32:31.620
理论上来讲它这边其实还有头像和密码

32:31.620 --> 32:33.620
那你这边如果不想让

32:33.620 --> 32:35.620
就是某个项目在这上面

32:35.620 --> 32:37.620
你这边直接设置什么呢

32:37.620 --> 32:39.620
直接设置searchforce就可以了

32:39.620 --> 32:43.250
这个好像已经说了的吧

32:43.250 --> 32:45.250
关闭搜索 之前说过了

32:45.250 --> 32:47.250
那这个就不用多说了

32:47.250 --> 32:49.250
我们这个序号我们也把它关了

32:49.250 --> 32:51.250
序号这个也关了

32:51.250 --> 32:53.250
保存

32:53.250 --> 32:55.250
这边就可以根据什么呢

32:55.250 --> 32:57.250
根据这个登录账号和泥撑进行搜索

32:57.250 --> 32:59.250
除了这个头像以外

32:59.250 --> 33:01.250
然后加这边还有什么

33:01.250 --> 33:03.250
还有就是这个账号的状态

33:03.250 --> 33:05.250
和这个操作

33:05.250 --> 33:09.250
这个账号的状态和之前那个

33:09.250 --> 33:11.250
管理员模块那个是不是一样的

33:11.250 --> 33:13.250
对不对

33:13.250 --> 33:15.250
好 那我这边也就直接拿过来

33:15.250 --> 33:18.560
接下来是账号的状态

33:18.560 --> 33:22.450
账号的状态

33:22.450 --> 33:24.450
把整个这个拿过来

33:24.450 --> 33:26.450
把拿过来

33:26.450 --> 33:28.450
拿过来之后这边大家看一下

33:28.450 --> 33:30.450
这边那需要用到这个switch

33:30.450 --> 33:32.450
说你从这个antd里面

33:32.450 --> 33:36.340
你引一下这个switch

33:36.340 --> 33:38.340
switch然后front

33:38.340 --> 33:40.340
这个antd

33:40.340 --> 33:42.340
把它引一下

33:42.340 --> 33:44.340
好 引了之后然后加这边

33:44.340 --> 33:46.340
它对应了这个安清级

33:46.340 --> 33:48.340
安清级的话这边对应是不是

33:48.340 --> 33:50.340
你这边就得有个方法

33:50.340 --> 33:52.340
这些的话就大家下来自己来玩上了

33:52.340 --> 33:54.340
这个我们之前在那个管理员模块

33:54.340 --> 33:56.340
我们是不是讲过了

33:56.340 --> 33:58.340
对不对

33:58.340 --> 34:00.340
切换什么切换这个用户

34:00.340 --> 34:02.340
用户的可用状态

34:02.340 --> 34:04.340
用户的可用状态

34:04.340 --> 34:06.340
对不对

34:06.340 --> 34:08.340
好 最后一个

34:08.340 --> 34:10.340
最后一个是这个操作

34:10.340 --> 34:14.030
这边

34:14.030 --> 34:16.030
title

34:16.030 --> 34:18.030
title对应的是一个操作

34:18.030 --> 34:20.030
操作然后接下来的话

34:20.030 --> 34:22.030
这边这个wise

34:22.030 --> 34:24.030
把前面的这些先拿过来

34:24.030 --> 34:28.500
前面的这一块

34:28.500 --> 34:30.500
ok 这边这个title

34:30.500 --> 34:32.500
然后wise

34:32.500 --> 34:34.500
对不对

34:34.500 --> 34:36.500
这边有一个fixed

34:36.500 --> 34:38.500
fixed很明显这边写个write

34:38.500 --> 34:40.500
你猜的猜的到这个是什么意思

34:40.500 --> 34:42.500
对不对 怎么意思

34:42.500 --> 34:44.500
就把它固定在右边

34:44.500 --> 34:47.810
对不对 固定在右边

34:47.810 --> 34:49.810
好 然后再这边

34:49.810 --> 34:51.810
这边有一个render

34:51.810 --> 34:53.810
有一个render

34:53.810 --> 34:55.810
人家这边对应一个毁掉寒朔

34:55.810 --> 34:57.810
人家这边

34:57.810 --> 34:59.810
这边是我们拿到

34:59.810 --> 35:01.810
这一排

35:01.810 --> 35:03.810
回头的话 这边是需要用的

35:03.810 --> 35:05.810
好 这边返回

35:05.810 --> 35:07.810
返回一段什么

35:07.810 --> 35:09.810
返回一段js差

35:09.810 --> 35:11.810
所以这边有一个div

35:11.810 --> 35:13.810
div 然后加这里面什么呢

35:13.810 --> 35:17.120
button

35:17.120 --> 35:19.120
这边button的话

35:19.120 --> 35:21.120
type等于什么呢

35:21.120 --> 35:23.120
等于link

35:23.120 --> 35:25.120
button的话你需要引一下

35:25.120 --> 35:27.120
button在这边

35:27.120 --> 35:29.120
引一下

35:29.120 --> 35:31.120
引一下之后 然后加这边

35:31.120 --> 35:33.120
分别就是什么 分别就是详情

35:33.120 --> 35:35.120
详情

35:35.120 --> 35:37.120
然后编辑

35:37.120 --> 35:39.120
对吧 还有一个什么

35:39.120 --> 35:41.120
删除

35:41.120 --> 35:43.120
来保存一下

35:43.120 --> 35:47.970
看一下

35:47.970 --> 35:49.970
整个这个是不是就出来了

35:49.970 --> 35:51.970
对不对 就出来了

35:51.970 --> 35:53.970
出来这边把size把它设置一下

35:53.970 --> 35:55.970
size等于一个small

35:55.970 --> 35:57.970
等于一个small

35:57.970 --> 35:59.970
让它编小一点

35:59.970 --> 36:03.980
这边

36:03.980 --> 36:05.980
好 这电脑就像吹风机一样

36:05.980 --> 36:07.980
是不是

36:07.980 --> 36:09.980
是不是ok了

36:09.980 --> 36:11.980
对不对 那我们整个这个的话

36:11.980 --> 36:13.980
就出来了

36:13.980 --> 36:15.980
出来的话 这边说一下这个翻页

36:15.980 --> 36:17.980
说一下这个翻页

36:17.980 --> 36:19.980
现在这个翻页的话 你看

36:19.980 --> 36:21.980
这边的翻页这个效果倒是有

36:21.980 --> 36:23.980
对不对 但是你这边

36:23.980 --> 36:25.980
这边的话 这个翻页这个组件是不是没有更新

36:25.980 --> 36:27.980
对不对 还有就是你看这边

36:27.980 --> 36:29.980
这边就是123

36:29.980 --> 36:31.980
怎么产生的 这个问题呢

36:31.980 --> 36:33.980
就是因为你分页里边没有处理

36:33.980 --> 36:35.980
所以你可以看到这边的这个分页

36:35.980 --> 36:37.980
这边你看这边

36:37.980 --> 36:39.980
数据是更新的

36:39.980 --> 36:41.980
对不对 你可以看到很明显的

36:41.980 --> 36:43.980
数据是更新的 更新的是

36:43.980 --> 36:45.980
当前这一页的数据

36:45.980 --> 36:47.980
但是这个分页组件这边

36:47.980 --> 36:49.980
没有做更新

36:49.980 --> 36:51.980
这个的话该怎么做呢

36:51.980 --> 36:53.980
这个的话还记不记得我们刚才会有一个这个

36:53.980 --> 36:55.980
handlePage清洁

36:55.980 --> 36:57.980
对不对 HandlePage清洁

36:57.980 --> 36:59.980
这边的传入两个东西

36:59.980 --> 37:01.980
一个是这个current

37:01.980 --> 37:03.980
一个是Page size

37:03.980 --> 37:05.980
我们这边让我们来看一下

37:05.980 --> 37:07.980
打印一下

37:07.980 --> 37:09.980
这边的current

37:09.980 --> 37:14.580
打印这两个吗

37:14.580 --> 37:16.580
这边让我来看一下

37:16.580 --> 37:22.100
这边刷新一下吧

37:22.100 --> 37:24.100
这边一开始是1和5

37:24.100 --> 37:26.100
注意我现在点2

37:26.100 --> 37:28.100
你看这边的是不是2和5

37:28.100 --> 37:30.100
对不对 这里就2和5

37:30.100 --> 37:32.100
2和5的话

37:32.100 --> 37:34.100
这个事情就很简单了

37:34.100 --> 37:36.100
我们这边只需要干嘛

37:36.100 --> 37:38.100
只需要setPagination

37:38.100 --> 37:40.100
对不对 传入一个新对象

37:40.100 --> 37:42.100
新对象里面就是什么

37:42.100 --> 37:46.430
这就这两个字

37:46.430 --> 37:48.430
好 来看一下

37:48.430 --> 37:50.430
这边其实就OK了

37:50.430 --> 37:52.430
这边是第一页

37:54.430 --> 37:58.380
刷新一下

37:58.380 --> 38:00.380
这边是第一页

38:00.380 --> 38:02.380
现在点第二页

38:02.380 --> 38:04.380
是不是OK了

38:04.380 --> 38:06.380
是不是请求了

38:06.380 --> 38:08.380
他的核心逻辑就是什么呢

38:08.380 --> 38:10.380
你这边的话是不是会得到

38:10.380 --> 38:12.380
当前的页和当前的Page size

38:12.380 --> 38:14.380
好 在这一边

38:14.380 --> 38:16.380
这就相当意味着什么

38:16.380 --> 38:18.380
是不是意味着这边了

38:18.380 --> 38:20.380
这边就会意味着什么

38:20.380 --> 38:22.380
意味着你这边request

38:22.380 --> 38:24.380
它会重新发送请求

38:24.380 --> 38:26.380
OK 这边它在

38:26.380 --> 38:29.700
这里它是写的有的

38:29.700 --> 38:31.700
我看在哪里

38:31.700 --> 38:33.700
这里

38:33.700 --> 38:35.700
表达Permas参数发生修改时

38:35.700 --> 38:37.700
它会干嘛

38:37.700 --> 38:39.700
会重新执行

38:39.700 --> 38:41.700
对不对 会重新执行

38:41.700 --> 38:43.700
所以我们这边Page

38:43.700 --> 38:45.700
Permas里面就是Page

38:45.700 --> 38:47.700
分页相关的信息

38:47.700 --> 38:49.700
分页相关的信息一遍

38:49.700 --> 38:51.700
它整个request就会重新执行

38:51.700 --> 38:53.700
好 来我们来看一下

38:53.700 --> 38:55.700
整个功能这么正常

38:55.700 --> 38:57.700
拉下去

38:57.700 --> 38:59.700
把这个关了

38:59.700 --> 39:01.700
这边第三页

39:01.700 --> 39:03.700
对不对 我们这边那比如说十页

39:03.700 --> 39:05.700
可以的吧

39:05.700 --> 39:07.700
对不对 就很方便

39:07.700 --> 39:09.700
你用这些组建库主要就是这些方便

39:09.700 --> 39:11.700
人家这些给你写好了

39:11.700 --> 39:13.700
不然的话你这些逻辑你还得干嘛

39:13.700 --> 39:15.700
所以还得自己去处理

39:15.700 --> 39:17.700
对不对

39:17.700 --> 39:19.700
大家这边那比如说十五页一条

39:19.700 --> 39:21.700
这边还是两页

39:21.700 --> 39:23.700
对吧 还是两页

39:23.700 --> 39:25.700
好 重新回到什么呢

39:25.700 --> 39:27.700
重新回到五条一页

39:27.700 --> 39:29.700
五条一页这边我们跳转

39:29.700 --> 39:31.700
跳转到第三页

39:31.700 --> 39:33.700
OK 这边就跳转到第三页

39:33.700 --> 39:35.700
对不对 非常方便

39:35.700 --> 39:37.700
OK

39:37.700 --> 39:39.700
这个就是关于整个用户列表的

39:39.700 --> 39:41.700
这个渲染

39:41.700 --> 39:43.700
整个用户列表的渲染

39:43.700 --> 39:45.700
OK 其他的话

39:45.700 --> 39:47.700
至于这个什么详情 编辑 删除

39:47.700 --> 39:49.700
包括这个添加

39:49.700 --> 39:51.700
这些其实都是不需要我再讲了

39:51.700 --> 39:53.700
这个的话其实我只要给你讲一个管理员

39:53.700 --> 39:55.700
其他的话其实你都是知道的

39:55.700 --> 39:57.700
对不对 只不过你注意

39:57.700 --> 39:59.700
就是我们这边的话 就无论是什么

39:59.700 --> 40:01.700
无论是详情 编辑

40:01.700 --> 40:03.700
还是删除 这边都是通过什么呢

40:03.700 --> 40:05.700
都是就是我这个模块

40:05.700 --> 40:07.700
直接发请求就可以了

40:07.700 --> 40:09.700
直接就发请求就可以了

40:09.700 --> 40:11.700
OK

40:11.700 --> 40:13.700
要问我一会给大家演示一个吧

40:13.700 --> 40:15.700
演示一个这个

40:15.700 --> 40:17.700
添加用户

40:17.700 --> 40:19.700
再演示一个这个删除

40:19.700 --> 40:21.700
演示一个

40:21.700 --> 40:23.700
这边其实还有一个东西要讲一下

40:23.700 --> 40:25.700
就是关于这个

40:25.700 --> 40:27.700
关于这个搜索

40:27.700 --> 40:28.700
关于搜索

40:28.700 --> 40:30.700
搜索的话 其实也很简单

40:30.700 --> 40:31.700
也很简单

40:31.700 --> 40:33.700
搜索的话 你看一下

40:33.700 --> 40:35.700
这边的话 它是有一个这个重置

40:35.700 --> 40:37.700
对不对 这边有个这个查询

40:37.700 --> 40:39.700
对应的就是吗 对应的就是比如用户在这边

40:39.700 --> 40:41.700
输入

40:41.700 --> 40:43.700
输入这个时候 再加这边点击这个查询

40:43.700 --> 40:45.700
查询的话 再加我们要找到它的这个

40:45.700 --> 40:47.700
对应的这个回调喊数

40:47.700 --> 40:49.700
对不对 OK

40:49.700 --> 40:54.990
好 那我们这边来看一下

40:54.990 --> 40:56.990
这个查询的话 我记得是

40:56.990 --> 40:58.990
自动就会以Permars的形式

40:58.990 --> 41:00.990
传递过来

41:00.990 --> 41:02.990
我们这边来看一下

41:02.990 --> 41:04.990
我记得它自动就会传过来

41:04.990 --> 41:06.990
所以这个查询其实还不需要我们写

41:06.990 --> 41:08.990
就我们什么代码都不需要写

41:08.990 --> 41:10.990
我们这边来看一下

41:10.990 --> 41:12.990
保存 保存了之后

41:12.990 --> 41:16.940
然后加这边来看一下

41:16.940 --> 41:18.940
好 这边的话

41:18.940 --> 41:20.940
然后控制台 这边这么暴露个错

41:20.940 --> 41:22.940
这边data source

41:22.940 --> 41:24.940
nes

41:24.940 --> 41:26.940
pagnation

41:26.940 --> 41:28.940
这个应该是我们刚才在那个的时候

41:28.940 --> 41:30.940
在切换那个页面的那个就是

41:30.940 --> 41:32.940
每页调数的时候

41:32.940 --> 41:34.940
它这边暴的是这么一个这个错误

41:34.940 --> 41:36.940
这个

41:36.940 --> 41:38.940
看一下这个

41:38.940 --> 41:40.940
这个回头的话把它处理一下吧

41:40.940 --> 41:44.380
这个应该没什么大的

41:44.380 --> 41:46.380
OK 好 你看这边

41:46.380 --> 41:48.380
这边让我们一开始这边 是吧

41:48.380 --> 41:50.380
只有Current和PageSize

41:50.380 --> 41:52.380
好 比如说我这边我写一个

41:52.380 --> 41:54.380
好 那就这边点击查询

41:54.380 --> 41:56.380
点击查询的话 你看它这边自动就会有什么

41:56.380 --> 41:58.380
Current

41:58.380 --> 42:00.380
PageSize 然后LoginID

42:00.380 --> 42:02.380
对不对 它这边Parmise

42:02.380 --> 42:04.380
它就会添加一个LoginID

42:04.380 --> 42:06.380
添加一个LoginID

42:06.380 --> 42:08.380
然后接下来你这边在发这个请求的时候

42:08.380 --> 42:10.380
回头的话我这边是可以

42:10.380 --> 42:12.380
你看这个接口文档

42:12.380 --> 42:14.380
这边除了就这个参数以外

42:14.380 --> 42:16.380
我这边没写

42:16.380 --> 42:18.380
它这边其实可以接受什么呢

42:18.380 --> 42:20.380
可以就是有额外的参数

42:20.380 --> 42:22.380
有额外的参数让我服务器那边的话

42:22.380 --> 42:24.380
我就会根据你额外的参数进行一个查询

42:24.380 --> 42:26.380
好 把这个这个接口文档改一下吧

42:26.380 --> 42:28.380
这边比如说

42:28.380 --> 42:30.380
比如说LoginID

42:30.380 --> 42:32.380
LoginID

42:32.380 --> 42:34.380
这个的话是非必须的

42:34.380 --> 42:36.380
OK 比如说这边查一个这个

42:36.380 --> 42:38.380
这个是根据LoginID

42:38.380 --> 42:40.380
根据LoginID

42:40.380 --> 42:42.380
来进行查询

42:42.380 --> 42:44.380
OK

42:44.380 --> 42:46.380
这边我保存一下

42:46.380 --> 42:48.380
OK 好

42:48.380 --> 42:52.530
所以它这边就自动

42:52.530 --> 42:54.530
其实这个功能就自动就已经写好了

42:54.530 --> 42:56.530
说为什么我们用这个ProComponent

42:56.530 --> 42:58.530
你看这边是不是已经就搞定了

42:58.530 --> 43:00.530
对不对

43:00.530 --> 43:02.530
已经就搞定了

43:02.530 --> 43:04.530
好 回头你这边点一下这个重置

43:04.530 --> 43:06.530
重置这边就OK了

43:06.530 --> 43:08.530
比我们这边再来一个

43:08.530 --> 43:10.530
再来一个比如说这个理狗蛋

43:10.530 --> 43:12.530
理狗蛋

43:12.530 --> 43:14.530
查询

43:14.530 --> 43:16.530
是不是就OK了

43:16.530 --> 43:18.530
对不对 你让它这边会带一个什么

43:18.530 --> 43:20.530
会带一个Nikonem

43:20.530 --> 43:22.530
Nikonem理狗蛋

43:22.530 --> 43:24.530
这边在服务器端那边

43:24.530 --> 43:26.530
我做了一个模糊查询

43:26.530 --> 43:28.530
就服务器端那边做的

43:28.530 --> 43:30.530
所以这边是不是就已经就OK了

43:30.530 --> 43:32.530
说这个查询不需要我们做

43:32.530 --> 43:34.530
不需要我们做

43:34.530 --> 43:36.530
OK 这边重置一下

43:36.530 --> 43:38.530
就OK了

43:38.530 --> 43:40.530
好 那这个话就是关于整个这个

43:40.530 --> 43:42.530
用户这个模块

43:42.530 --> 43:44.530
你如何把这个数据

43:44.530 --> 43:46.530
把它渲染出来

43:46.530 --> 43:48.530
这些课的其实核心就是什么呢

43:48.530 --> 43:51.840
核心就是它

43:52.840 --> 43:54.840
我在使用这个Protable的时候

43:54.840 --> 43:56.840
如何通过这个Request

43:56.840 --> 43:58.840
来发送请求

43:58.840 --> 44:00.840
获取当业的这个数据

44:00.840 --> 44:02.840
你如果能把这个东西听懂的话

44:02.840 --> 44:04.840
那你这一课的话就没有问题了

44:04.840 --> 44:06.840
这一课的话重点就是它

44:06.840 --> 44:07.840
没有没有

44:07.840 --> 44:08.840
OK

44:08.840 --> 44:10.840
其他的像这个查询查询其实

44:10.840 --> 44:12.840
它直接它就给我做好了

44:12.840 --> 44:14.840
对不对 直接就做好了

44:15.840 --> 44:18.840
好 那这个就是整个用户模块

44:18.840 --> 44:20.840
我想想有没有必要讲

44:20.840 --> 44:22.840
这个添加用户和删除呢

44:22.840 --> 44:24.840
就是就是其他的

44:24.840 --> 44:26.840
这样子吧 我下节课的话

44:26.840 --> 44:28.840
我写一个添加用户

44:28.840 --> 44:30.840
再写一个这个删除

44:30.840 --> 44:32.840
给大家看一下

44:32.840 --> 44:34.840
其他的什么详情编辑这些

44:34.840 --> 44:36.840
大家就自己下去把它玩上

44:36.840 --> 44:38.840
好不好 下节课

44:38.840 --> 44:39.840
咱们再花一节课的时间

44:39.840 --> 44:41.840
咱们把这个添加用户和这个删除

44:41.840 --> 44:43.840
把它写一下

44:43.840 --> 44:45.840
但你如果这个添加用户和删除

44:45.840 --> 44:47.840
你如果会写的话

44:47.840 --> 44:48.840
那你这个下节课的话

44:49.840 --> 44:50.840
好吧

44:50.840 --> 44:51.840
OK

44:51.840 --> 44:52.840
这节课就先到这里

44:52.840 --> 44:54.840
大家下去把这个用户列表

44:54.840 --> 44:55.840
把它渲染出来

44:55.840 --> 44:56.840
好吧

44:56.840 --> 44:57.840
OK

44:57.840 --> 44:58.840
拜拜

