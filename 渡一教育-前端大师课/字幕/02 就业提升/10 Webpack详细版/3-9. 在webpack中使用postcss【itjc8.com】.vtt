WEBVTT

00:00.690 --> 00:07.290
这些课咱们把上级课学习的Post CSS在Webpack里面来使用一下

00:07.790 --> 00:10.290
其实它使用的方式也特别简单

00:10.290 --> 00:12.590
就跟那个NES这一块是差不多的

00:12.590 --> 00:13.790
因为它就是个编译器

00:14.790 --> 00:18.690
我们这里从头到尾来一次顺便做个复习

00:18.690 --> 00:20.890
复试一下本章之前讲的东西

00:21.290 --> 00:23.690
这里我们已经出示化了工程

00:23.690 --> 00:25.390
有一个拍个几点接上

00:25.690 --> 00:27.490
那么这里我们首先安装一下

00:27.690 --> 00:30.290
安装一下我们需要的一些库

00:30.890 --> 00:32.790
首先我们要安装什么呢

00:32.790 --> 00:35.690
Webpack以及Webpack CD

00:35.690 --> 00:36.890
这个要安装

00:37.490 --> 00:38.290
安装吧

00:38.290 --> 00:39.790
我们这里先建个文件

00:39.790 --> 00:42.790
就是Webpack.confid.js

00:43.390 --> 00:46.690
这里我们倒出一下Export

00:47.590 --> 00:48.290
配置嘛

00:48.290 --> 00:53.090
Mode Development Source Map

00:53.690 --> 00:56.690
这个叫做Dev2 Source Map

00:57.490 --> 00:59.590
当然这个我用这里也用 source map

00:59.590 --> 01:02.590
主要是给大家把文件分离一下

01:02.590 --> 01:03.890
其实我们真实的开发中

01:03.890 --> 01:06.290
应该按照我们之前说的Dev2

01:06.290 --> 01:07.190
那样的配置

01:08.190 --> 01:09.890
这两个配置完了过后

01:10.290 --> 01:11.990
想一想还有什么东西呢

01:12.390 --> 01:14.190
我们这里要建一个src目录

01:14.990 --> 01:15.990
src目录

01:16.790 --> 01:19.690
Mode里边我们新建一个入口文件

01:19.690 --> 01:21.490
index.js

01:21.890 --> 01:24.290
然后我们既然是要使用css

01:24.290 --> 01:26.390
所以说我在这里建一个文件夹rcs

01:26.390 --> 01:27.690
表示支援文件夹

01:28.090 --> 01:30.990
然后这里边我们新建一个css文件

01:30.990 --> 01:33.990
比方说吧就随便拿一个吧

01:33.990 --> 01:35.690
index.css

01:36.290 --> 01:38.190
或者是index.pcss

01:38.190 --> 01:39.490
无所谓啊都行啊

01:39.490 --> 01:40.390
css也行

01:40.490 --> 01:42.090
pcss也行pcss

01:42.090 --> 01:42.690
无所谓

01:43.190 --> 01:45.490
因为我们毕竟要用Pose.css对吧

01:45.790 --> 01:47.390
好这里呢我们写一些

01:48.190 --> 01:49.690
未来的css代码

01:50.090 --> 01:50.590
来吧

01:50.790 --> 01:51.290
root

01:51.990 --> 01:53.090
未来的css代码

01:54.890 --> 01:56.590
然后这里边写上一些辨量

01:56.890 --> 01:58.890
来一个辨量啊比方说

01:59.490 --> 01:59.990
嗯

02:01.290 --> 02:01.890
danger

02:02.490 --> 02:03.090
color

02:03.890 --> 02:04.590
f40

02:04.990 --> 02:05.990
写上这么一个辨量

02:06.390 --> 02:08.690
然后呢我们这里写一个类啊

02:08.690 --> 02:10.090
一个类就是danger

02:10.490 --> 02:11.590
那么我们这个类里面呢

02:11.590 --> 02:12.790
就给他一个color吧

02:13.090 --> 02:13.790
使用辨量

02:14.790 --> 02:15.590
danger color

02:15.990 --> 02:17.090
好我们写到这啊

02:18.090 --> 02:19.090
然后接着来

02:19.090 --> 02:20.990
我们按照以前的东西来配一下啊

02:20.990 --> 02:23.190
首先呢我们这里呢肯定如果说

02:23.490 --> 02:25.390
index.js里面我们要导入对吧

02:25.390 --> 02:26.090
要导入

02:26.690 --> 02:27.490
导入什么呢

02:27.990 --> 02:31.390
css里面的index.pcss

02:32.190 --> 02:32.890
pcss

02:32.890 --> 02:33.790
然后导入进来

02:34.190 --> 02:34.590
好

02:35.190 --> 02:36.590
首先呢我们一个个又来啊

02:36.590 --> 02:37.890
这里还有很多东西要做

02:37.890 --> 02:39.790
首先我们最终的打包的时候呢

02:39.790 --> 02:41.290
要生成一个页面对吧

02:41.390 --> 02:42.390
需要生成页面啊

02:42.590 --> 02:44.290
那么要生成页面的话

02:44.290 --> 02:45.790
我们这里呢

02:45.990 --> 02:47.790
需要一个页面模板

02:47.790 --> 02:49.190
同时呢还需要一个

02:49.890 --> 02:50.590
一个的

02:50.690 --> 02:52.690
wipike的插件叫做什么呢

02:52.790 --> 02:53.290
叫做

02:53.490 --> 02:54.390
呃

02:55.090 --> 02:55.690
i

02:55.890 --> 02:57.490
wipike

02:57.890 --> 02:59.490
叫什么atmail

02:59.690 --> 03:00.490
wipike

03:00.890 --> 03:01.890
plugin对吧

03:01.890 --> 03:02.790
有这么一个插件

03:02.890 --> 03:04.690
那么他可以根据我们的页面模板呢

03:04.690 --> 03:05.790
来生成一个页面

03:05.890 --> 03:06.790
好public

03:07.390 --> 03:08.390
建个文件夹啊

03:08.390 --> 03:10.390
这里写上一个index的atmail

03:11.290 --> 03:12.090
好这里

03:12.290 --> 03:13.290
随便写一个吧啊

03:14.490 --> 03:15.790
好然后在配置文件里面呢

03:15.790 --> 03:16.990
我们是不知道使用插件

03:16.990 --> 03:18.290
对吧导入进来啊

03:18.490 --> 03:19.190
atmail

03:19.590 --> 03:20.590
wipike

03:20.890 --> 03:21.490
plugin

03:22.090 --> 03:23.290
来吧require

03:23.490 --> 03:24.890
导入进来啊

03:25.690 --> 03:26.490
atmail

03:27.290 --> 03:28.090
wipike

03:28.490 --> 03:29.090
plugin

03:29.490 --> 03:30.490
好导入进来啊

03:30.690 --> 03:32.390
然后这里呢我们配置一下这个插件啊

03:32.390 --> 03:33.090
plugins

03:33.390 --> 03:34.090
配置一下

03:34.290 --> 03:35.090
那么其中

03:35.390 --> 03:36.790
有一个插件呢叫做atmail

03:36.790 --> 03:37.790
wipike plugin

03:38.090 --> 03:39.290
顺便就复始一下

03:40.290 --> 03:41.590
然后这里边有一些配置啊

03:41.590 --> 03:42.690
其中一个就叫做

03:42.690 --> 03:44.090
嗯我们的模板

03:44.490 --> 03:45.090
template

03:45.290 --> 03:46.890
模板的位置在哪呢

03:46.890 --> 03:48.390
在public目录下面

03:49.290 --> 03:50.290
public

03:50.890 --> 03:53.690
public目录下面的index.atmail

03:54.290 --> 03:55.790
好那么我们首先看一下啊

03:55.790 --> 03:56.590
现在行不行

03:56.890 --> 03:58.090
嗯为了方便的话

03:58.090 --> 04:01.090
我这里呢写上一个配置一下脚本吧

04:01.390 --> 04:01.890
dev

04:02.890 --> 04:03.490
build

04:03.790 --> 04:04.490
配置个build

04:04.790 --> 04:06.090
啊就是使用一个mini

04:06.090 --> 04:07.490
wipike就可以了

04:07.990 --> 04:08.890
好试一下吧

04:10.290 --> 04:12.090
mpm run build

04:12.690 --> 04:13.290
打包

04:16.220 --> 04:17.620
好那么打包过后呢

04:17.620 --> 04:18.520
倒是有这个页面啊

04:18.520 --> 04:20.120
对吧页面介绍也加进去了

04:20.120 --> 04:21.920
但是呢打包的过程中呢发生了错误

04:22.020 --> 04:22.720
那么这个错误呢

04:22.720 --> 04:24.120
大家都应该能够想到对吧

04:24.120 --> 04:25.920
他css解析不了啊

04:25.920 --> 04:26.420
解析不了

04:26.420 --> 04:28.620
所以说我们是不是要相应的loader来解决

04:28.720 --> 04:29.120
对吧

04:29.420 --> 04:31.020
哎那咱们来安装一下啊

04:31.020 --> 04:31.620
相应的loader

04:31.620 --> 04:33.620
loader我们都知道要安装哪两个loader呢

04:33.820 --> 04:34.520
npm

04:35.220 --> 04:36.320
横杠地啊

04:36.720 --> 04:39.120
叫做css loader

04:39.420 --> 04:40.620
以及style loader

04:40.720 --> 04:44.420
对吧一个呢是用来把css代码的转换成

04:44.820 --> 04:47.620
呃转换成介绍代码一个呢是进一步

04:47.620 --> 04:49.660
把我们的转换之后的东西呢

04:49.660 --> 04:51.820
加入到页面里边啊

04:52.120 --> 04:53.720
even the style元素里边好

04:53.720 --> 04:55.120
接下来我们在这里配置一下

04:55.920 --> 04:56.520
marge

04:57.920 --> 04:58.520
marge

05:00.690 --> 05:02.590
啊这里呢有一个rules

05:03.190 --> 05:03.790
rules

05:04.290 --> 05:06.190
呃其中一个规则

05:06.490 --> 05:07.590
一个规则就是

05:08.390 --> 05:10.090
匹配匹配什么呢

05:10.190 --> 05:11.690
匹配后罪名为

05:12.090 --> 05:13.690
我们这里是p css对吧

05:13.690 --> 05:15.490
那么我们就写p css

05:15.490 --> 05:18.390
啊匹配p css的文件啊

05:18.790 --> 05:20.290
然后呢我们把它交给谁呢

05:20.390 --> 05:20.990
use

05:21.690 --> 05:22.990
首先呢交给

05:24.090 --> 05:25.690
交给css loader

05:26.290 --> 05:28.290
然后呢再交给style loader

05:29.490 --> 05:30.490
交给style loader

05:31.290 --> 05:32.790
好行了咱们来看一下吧

05:34.590 --> 05:35.390
好运行

05:37.400 --> 05:37.900
打包

05:40.770 --> 05:42.170
哎是不是完成了对吧

05:42.170 --> 05:43.670
就没有爆错了啊完成了

05:44.070 --> 05:45.870
好接下来我们看一下这个页面啊

05:45.870 --> 05:46.470
看一下

05:46.870 --> 05:47.370
打开

05:50.750 --> 05:52.450
嗯啊我们看一下页面的

05:52.450 --> 05:54.250
是央视是不是加进来了

05:54.250 --> 05:54.950
是不是加进来了

05:55.250 --> 05:57.250
但是这个央视呢是元凤不动加进来的

05:57.250 --> 05:59.050
对吧还并没有做任何的转换

05:59.150 --> 06:00.650
那么像这样的样式要做转换

06:00.650 --> 06:02.450
是不是要用pose css对吧

06:02.550 --> 06:04.550
pose css里边的一些插件可以做转换

06:04.550 --> 06:05.050
转换

06:05.250 --> 06:08.050
那么所以说我们这里呢要需要首先啊

06:08.050 --> 06:09.550
这里就有这么一个逻辑了

06:09.850 --> 06:11.950
就是我们这里的央视代码

06:13.350 --> 06:14.550
我们的这个央视啊

06:14.550 --> 06:15.650
in这个手里屁

06:15.850 --> 06:17.250
css里边的央视啊

06:17.250 --> 06:17.950
央视代码

06:18.150 --> 06:19.550
首先要交给谁呢

06:19.650 --> 06:22.150
交给pose css让他做转换

06:22.450 --> 06:23.850
转换完了过后呢

06:23.950 --> 06:25.850
成为一个普通的css啊

06:25.850 --> 06:27.150
普通的css

06:27.450 --> 06:28.850
那么把这个普通的css呢

06:28.850 --> 06:29.850
再交给谁呢

06:29.850 --> 06:30.850
再交给这个啊

06:32.350 --> 06:33.250
css loader

06:33.750 --> 06:34.250
loader

06:37.390 --> 06:37.990
然后呢

06:37.990 --> 06:39.990
转换之后呢变成了gs啊

06:39.990 --> 06:41.790
然后呢再交给谁呢

06:41.790 --> 06:42.790
交给这个就是

06:43.790 --> 06:44.590
style loader

06:44.590 --> 06:46.190
然后把它加到一边上去

06:46.190 --> 06:46.590
对吧

06:46.790 --> 06:47.590
加到一边上去

06:47.790 --> 06:48.590
style元素

06:49.290 --> 06:50.490
要经过这么一个过程

06:50.590 --> 06:52.490
所以说我们要在这里配置的时候呢

06:52.590 --> 06:55.090
首先要加一个cpose css

06:55.290 --> 06:56.290
那pose css呢

06:56.290 --> 06:57.090
他有个核心库

06:57.090 --> 06:58.090
我们上级课学了的

06:58.490 --> 06:59.490
他有个核心库

07:00.490 --> 07:01.990
叫做pose css

07:01.990 --> 07:02.490
对吧

07:02.490 --> 07:02.990
嗯

07:02.990 --> 07:03.590
上级课呢

07:03.590 --> 07:05.690
我们还用了是pose css cd

07:05.690 --> 07:06.890
就他的命令航工具

07:06.890 --> 07:08.790
那么这一课我们不需要命令航工具了

07:08.890 --> 07:10.990
我们只需要有一个loader就行了

07:10.990 --> 07:11.190
对吧

07:11.190 --> 07:13.090
loader我们都知道是一个函数

07:13.190 --> 07:14.290
这个函数内部呢

07:14.290 --> 07:15.690
他只要去使用

07:15.890 --> 07:17.690
pose css里边的api

07:17.690 --> 07:18.890
来进行转换就行了

07:19.090 --> 07:20.490
那么pose css的loader呢

07:20.490 --> 07:21.990
就是pose css loader

07:22.490 --> 07:22.890
所以说呢

07:22.890 --> 07:23.490
我们这一块呢

07:23.490 --> 07:24.290
其实这里啊

07:24.290 --> 07:25.690
是pose css loader

07:27.190 --> 07:28.790
要做这么一个转换啊

07:28.890 --> 07:29.990
跟内室是不是一样的

07:29.990 --> 07:31.190
内室需要安一个内室

07:31.190 --> 07:32.490
安一个内室loader

07:32.490 --> 07:33.790
那么这里是一样的啊

07:33.990 --> 07:35.190
回头安装一下

07:36.390 --> 07:37.190
好安装一下

07:37.990 --> 07:38.790
好让他安装吧

07:38.790 --> 07:39.990
然后我们在这里配一下啊

07:39.990 --> 07:40.890
我们要配到哪

07:40.890 --> 07:42.190
配到第一个还是最后一个

07:42.190 --> 07:42.990
还是中间

07:43.690 --> 07:45.390
要把这个pose css loader

07:45.890 --> 07:46.890
配到最后一个对吧

07:46.890 --> 07:47.390
配到最后一个

07:47.390 --> 07:48.890
他就首先做转换啊

07:48.890 --> 07:50.890
pose css loader

07:51.090 --> 07:52.090
首先做转换

07:52.890 --> 07:54.090
好配好了之后呢

07:54.090 --> 07:55.290
我们来再来看一下啊

07:55.290 --> 07:56.390
看一下能不能转换呢

07:56.790 --> 07:59.090
我们这里刚才安装一个开发服务器吗

08:00.090 --> 08:02.690
webpack dev server

08:02.890 --> 08:04.290
安装一个开发服务器得了

08:05.290 --> 08:05.890
那么这里呢

08:05.890 --> 08:06.790
我们配置的时候呢

08:06.790 --> 08:08.690
给他配置一下开发服务器

08:08.890 --> 08:09.690
dev server

08:11.690 --> 08:12.990
这里那么open to

08:13.590 --> 08:14.590
这样子方便一点

08:19.620 --> 08:20.520
安装一下啊

08:25.890 --> 08:26.390
上转

08:27.390 --> 08:28.390
好安装好了

08:28.790 --> 08:29.290
那么现在呢

08:29.290 --> 08:31.090
我们用我们在这里配置一下啊

08:31.590 --> 08:32.490
再配置一个

08:32.690 --> 08:34.190
呃dev

08:36.190 --> 08:36.990
啊就是

08:37.390 --> 08:39.090
webpack dev server

08:40.390 --> 08:41.190
运行这个名字

08:41.390 --> 08:43.590
来吧 npm run dev

08:47.270 --> 08:48.170
啊运行起来

08:49.770 --> 08:51.070
啊咱们来看一下啊

08:51.170 --> 08:52.170
咱们的页面上呢

08:52.170 --> 08:54.270
有没有样式呢

08:54.270 --> 08:55.370
有没有做转换呢

08:55.770 --> 08:56.370
看一下

08:57.570 --> 08:58.670
有没有做转换了

08:58.870 --> 08:59.770
是没有啊

09:00.170 --> 09:01.370
没有做转换对吧

09:01.370 --> 09:02.170
没有做转换

09:02.470 --> 09:03.570
那么怎么回事呢

09:03.770 --> 09:05.270
啊这里报的错误啊

09:05.270 --> 09:06.670
报的错误咱们看一下啊

09:07.470 --> 09:07.970
他说什么呢

09:07.970 --> 09:10.670
他说没有一个poster csc的配置

09:10.670 --> 09:10.970
对吧

09:10.970 --> 09:13.570
他说poster csc你没有做一个任何的配置

09:13.670 --> 09:15.370
用我们回忆回忆一下上节课

09:15.770 --> 09:16.170
什么意思呢

09:16.170 --> 09:18.070
就上节课我们学poster csc的时候

09:21.480 --> 09:22.080
不要紧张啊

09:22.080 --> 09:23.380
不要紧张啊

09:23.380 --> 09:25.380
我只是没有感冒啊没有感冒

09:26.380 --> 09:27.380
呃这里呢

09:28.780 --> 09:30.580
poster csc啊这一块呢

09:30.580 --> 09:33.080
就是呃上节课我们学了一个

09:33.080 --> 09:34.280
学的poster csc的时候呢

09:34.280 --> 09:35.480
我们讲了他的配置对吧

09:35.480 --> 09:36.180
但是我们这里呢

09:36.180 --> 09:37.980
还没有使用配置文件啊

09:37.980 --> 09:38.780
ok那么我们这里呢

09:38.780 --> 09:39.980
我们就加一个配置文件

09:40.380 --> 09:43.280
叫做poster csc啊config.js

09:44.380 --> 09:46.480
那他要因为他poster csc运动的过程中

09:46.480 --> 09:47.880
他要用到这个配置啊

09:47.880 --> 09:48.780
配置文件的写法呢

09:48.780 --> 09:50.480
跟之前写的是一样

09:51.680 --> 09:52.280
啊那么这里呢

09:52.280 --> 09:52.780
我们知道啊

09:52.780 --> 09:53.580
他有什么呢

09:53.580 --> 09:55.380
有那个就是我们上节课看一下吧

09:55.980 --> 09:57.880
poster csc配置啊

09:57.980 --> 09:58.780
有个map对吧

09:58.780 --> 10:00.580
可不可以就是可以不不使用他的

10:00.580 --> 10:01.480
就是sauce map

10:01.680 --> 10:02.380
还有什么呢

10:02.580 --> 10:03.880
还有就是说他里边呢

10:03.880 --> 10:05.280
还有一些插件对不对

10:05.380 --> 10:06.480
plugging是插件

10:06.480 --> 10:07.580
那么上节课呢

10:07.580 --> 10:09.180
我们学的决过一些插件了啊

10:09.180 --> 10:09.680
我们来看一下

10:09.680 --> 10:10.380
复制过来吧

10:10.580 --> 10:11.680
我们是不是学到这个插件

10:11.680 --> 10:12.580
他可以做什么

10:12.880 --> 10:14.080
他可以做一些啊

10:14.080 --> 10:15.980
使用一些未来的事业测译法

10:15.980 --> 10:16.380
并且呢

10:16.380 --> 10:17.880
还可以给你自动加钱罪

10:17.880 --> 10:18.880
对不对啊

10:18.880 --> 10:19.480
那么这里呢

10:19.480 --> 10:20.380
我们可以配置进去

10:20.580 --> 10:20.980
然后呢

10:20.980 --> 10:21.480
apply呢

10:21.480 --> 10:24.080
我们可以使用一些属性级的语法啊

10:24.080 --> 10:24.780
color function呢

10:24.780 --> 10:27.480
我们可以使用一些呃颜色的

10:27.480 --> 10:30.780
就是一些颜色的那个

10:31.380 --> 10:32.480
呃函数啊

10:32.480 --> 10:34.480
如果说你需要的话你就去用

10:34.480 --> 10:35.780
不需要的话你就不需要

10:35.780 --> 10:37.580
那么比方说我们这里不需要这两个啊

10:37.580 --> 10:38.580
就用一个就行了

10:39.280 --> 10:40.080
好保存啊

10:40.080 --> 10:40.980
咱们来看一下

10:43.410 --> 10:44.710
npn

10:45.310 --> 10:45.710
i

10:45.710 --> 10:46.210
n-d

10:46.210 --> 10:47.210
因为我们还要按一个吧

10:47.210 --> 10:47.510
对吧

10:47.510 --> 10:48.510
是不是还要按这个

10:48.910 --> 10:49.310
对不对

10:49.610 --> 10:50.410
安装一下

10:52.210 --> 10:52.610
好

10:53.310 --> 10:54.210
让他安装啊

10:55.110 --> 10:55.510
当然了

10:55.510 --> 10:57.510
我们在由于上级课学的东西

10:58.410 --> 11:00.310
我们是不是还要去做一个什么事呢

11:00.310 --> 11:02.910
就是给他设置一个浏览器啊

11:02.910 --> 11:03.910
支持的浏览器

11:04.910 --> 11:06.910
我们把这个东西写进来啊

11:06.910 --> 11:07.910
把这个文件放进来

11:07.910 --> 11:09.510
就是我们要支持哪些浏览器

11:09.510 --> 11:10.710
这东西会被谁读取呢

11:10.710 --> 11:11.110
目前呢

11:11.110 --> 11:14.610
会被那个poster css里边的哪个东西呢

11:14.810 --> 11:17.310
会被poster css里边的这个插件所读取啊

11:17.310 --> 11:18.210
这个文件啊

11:18.210 --> 11:20.710
他可以对浏览器进行兼容啊

11:20.710 --> 11:22.210
要兼容哪些范围的浏览器

11:22.210 --> 11:23.410
我们把这个文件也放到这

11:24.310 --> 11:24.710
ok

11:25.110 --> 11:25.910
那么现在安装好了啊

11:25.910 --> 11:27.010
咱们来再来运行一下

11:27.010 --> 11:28.010
npm run

11:28.210 --> 11:28.610
对

11:31.480 --> 11:32.080
看一下吧

11:37.410 --> 11:37.810
啊

11:37.810 --> 11:38.310
检查

11:38.510 --> 11:39.410
检查一下啊

11:39.810 --> 11:40.210
这里

11:40.210 --> 11:40.810
哎你看

11:41.110 --> 11:42.010
样式是不是出来了

11:42.010 --> 11:42.410
对吧

11:42.810 --> 11:43.610
正常的样式

11:43.610 --> 11:43.710
哎

11:43.710 --> 11:44.610
我们写的样式呢

11:44.610 --> 11:45.210
是这样的

11:46.510 --> 11:47.210
是这样的

11:47.210 --> 11:48.610
那么最终形成的正常样式

11:48.610 --> 11:49.410
变成这样子

11:49.410 --> 11:50.210
就出来了

11:50.210 --> 11:51.110
其实就出来了

11:52.010 --> 11:52.210
好

11:52.210 --> 11:52.810
ok啊

11:53.410 --> 11:56.110
如果说你要做一些css的检查的话

11:56.110 --> 11:57.310
那么你可以去

11:57.410 --> 11:58.610
把这个文件也放过来

11:58.610 --> 11:58.910
对吧

11:58.910 --> 12:00.210
把这个写个这个文件

12:00.210 --> 12:01.410
也不用去安装插件了啊

12:01.410 --> 12:02.110
因为vscode呢

12:02.110 --> 12:04.010
我们之前安装了一个vscode的插件

12:04.010 --> 12:06.310
他本身就来就能够做这些检查

12:06.810 --> 12:07.910
就能够做这些检查

12:07.910 --> 12:08.710
所以说我们这里的

12:08.810 --> 12:10.710
就把这个文件放进来就完事了

12:11.810 --> 12:12.510
好ok

12:12.510 --> 12:13.310
其他就啥呢

12:13.310 --> 12:14.310
其他无非就是说

12:14.310 --> 12:17.110
我们如果说还要开启css module的话

12:17.110 --> 12:18.510
那么我们跟之前一样

12:19.010 --> 12:20.510
跟之前一样就在这里

12:20.510 --> 12:22.710
因为css module是不是css loader的功能

12:22.710 --> 12:23.110
对吧

12:23.110 --> 12:24.310
我们在这里开启就行了

12:24.610 --> 12:25.410
开启就行了

12:25.810 --> 12:26.310
loader

12:27.010 --> 12:27.910
我这干嘛呢

12:29.690 --> 12:30.190
是吗

12:30.390 --> 12:31.190
style int

12:31.590 --> 12:34.090
classfansconfigstandard

12:34.790 --> 12:35.090
哦

12:35.090 --> 12:36.190
我们这里还要安装

12:36.190 --> 12:37.490
还要安装一个cool对吧

12:37.490 --> 12:39.290
这个style intconfigstandard

12:39.590 --> 12:40.590
还安装这个cool

12:40.890 --> 12:42.090
不然的话他检查不了

12:42.390 --> 12:43.690
npmnconfig

12:46.620 --> 12:47.820
好安装嘛啊

12:47.820 --> 12:49.020
我们这里是配置一下啊

12:49.020 --> 12:50.820
就是我们的css loader

12:51.320 --> 12:52.520
我们还要开启

12:53.220 --> 12:55.020
还要开启这个就是

12:55.220 --> 12:55.920
options

12:56.820 --> 12:57.420
options

13:00.500 --> 13:02.500
还要开启这个modules

13:02.600 --> 13:03.400
把shoulder去

13:04.700 --> 13:06.200
或者让我们简洁一点啊

13:06.200 --> 13:06.900
简洁一点

13:07.700 --> 13:09.900
就是css loader

13:10.000 --> 13:11.700
后面给他一个问号modules

13:12.400 --> 13:13.000
好ok

13:14.100 --> 13:15.300
好了那么这样子过后呢

13:15.300 --> 13:16.900
我们在这里是不是可以得到这个

13:17.200 --> 13:18.500
啊他开启的就是

13:18.500 --> 13:20.900
呃就是css的内名

13:20.900 --> 13:21.400
对吧

13:21.600 --> 13:22.700
ok我们这里看一下啊

13:22.700 --> 13:24.100
styles from

13:24.200 --> 13:24.900
输出一下

13:25.200 --> 13:26.200
输出styles

13:27.400 --> 13:27.800
ok

13:28.400 --> 13:29.600
那么现在呢我们再看一下

13:30.800 --> 13:32.100
npmnconfigstandard

13:35.940 --> 13:36.540
好进行

13:40.240 --> 13:40.840
检查

13:41.540 --> 13:42.140
好你看

13:42.240 --> 13:43.140
是不是输出了一个对象

13:43.140 --> 13:43.540
对吧

13:43.640 --> 13:44.240
danger

13:44.240 --> 13:45.340
他对你的内名是这个

13:45.340 --> 13:47.440
也就是说我们最终生成的样式的内名呢

13:47.540 --> 13:48.340
就变成了这个了

13:48.340 --> 13:48.840
对吧

13:49.140 --> 13:50.340
那么这一层一层的功能

13:50.340 --> 13:51.940
是不是就完全搭配起来了

13:52.240 --> 13:52.740
对不对

13:52.740 --> 13:53.440
哎我们在

13:53.440 --> 13:55.940
wepack里面工程里面就可以大胆的去使用

13:56.240 --> 13:57.340
poster css了

13:57.640 --> 13:58.240
啊ok

13:58.240 --> 14:00.840
那后边如果说我们在页面上要去使用这个内呢

14:00.840 --> 14:02.040
我们之前都演示过啊

14:02.040 --> 14:02.680
不再重复

14:02.680 --> 14:03.540
重复举例了

14:03.740 --> 14:04.940
ok这就是如何在

14:05.040 --> 14:07.140
wepack里面去使用poster css啊

14:07.140 --> 14:08.140
其实特别简单

14:08.740 --> 14:10.140
ok这是关于这铁盒

