WEBVTT

00:00.300 --> 00:04.940
这节课说一下关于伍佑单页应用程序的达件

00:04.940 --> 00:09.140
可能有些同学听到这儿 还没有学习过伍佑

00:09.140 --> 00:12.900
因为咱们课程顺序 按理说应该是先学习webpack

00:12.900 --> 00:15.340
再来学习伍佑react 对吧

00:15.340 --> 00:19.660
那么这节课呢 作为一个扩展课程 现在可以不用听

00:19.660 --> 00:23.060
当你学习的伍佑过后 你再来听这节课

00:23.060 --> 00:25.700
有知道伍佑这个脚手架到底是怎么回事了

00:25.700 --> 00:28.900
就是我们之前反复的也多次说过

00:29.060 --> 00:32.700
伍佑的脚手架呢 当然他里边加入了很多很多的功能

00:32.700 --> 00:35.060
但他本质呢 其实并没有那么复杂

00:35.060 --> 00:39.740
他的本质其实很简单 就是利用webpack来搭建了一个工程而已

00:39.740 --> 00:42.060
他本质上就是用利用webpack来搭建的

00:42.060 --> 00:45.220
所以我们这就可能可以自己手中来搭建一下

00:45.220 --> 00:47.380
我们其实这里已经搭建好了 就在这个地址

00:47.380 --> 00:50.220
大家可以从这个地址呢 去把这个工程下来下来

00:50.220 --> 00:52.860
同样的方式 我们把这个地址复制一下吧

00:52.860 --> 00:55.060
打开控制台 在这里边呢

00:55.060 --> 00:57.100
我们输入这个进入桌面吧

00:58.140 --> 00:58.660
desk top

01:00.300 --> 01:01.460
然后我们是用git可能

01:02.820 --> 01:05.460
放过去 把工程复制下来

01:05.460 --> 01:07.540
我们来看一下工程里面到底怎么回事

01:07.540 --> 01:11.180
这个工程就是用reggit手动搭建的工程

01:12.020 --> 01:13.060
咱们到这个里边去

01:14.580 --> 01:18.900
扔过来 咱们看一下啊

01:18.900 --> 01:21.140
这个工程你看这里有几个配置文件 对吧

01:21.140 --> 01:24.060
可以看出我们工程就是用webpack来搭建的

01:24.100 --> 01:25.700
然后在src目录下面呢

01:25.700 --> 01:27.220
你可以看到非常熟悉的

01:27.220 --> 01:28.420
如果说你学过了vuiu

01:28.420 --> 01:30.500
就可以看到非常熟悉的这个内容了

01:31.140 --> 01:32.700
app.vuiu 对吧

01:32.700 --> 01:36.100
然后呢made.js 你看这些stone

01:36.100 --> 01:39.300
这就是利用vuiu 搅手架 搭建了一个厨师工程

01:39.300 --> 01:43.060
看看rotr,component,resets 一些静态资源

01:43.860 --> 01:45.340
这个public目录大家都知道

01:45.340 --> 01:47.020
就是一个index的目录

01:47.020 --> 01:48.420
然后加上一个5 way icon

01:49.060 --> 01:49.380
没了

01:50.460 --> 01:51.180
好 那么现在呢

01:51.180 --> 01:53.660
我们来看一下我们的工程到底是能不能运行起来

01:53.700 --> 01:55.140
点击右线 中间中打开

01:56.740 --> 01:59.100
这个我们完全没有用到vuiu 搅手架

01:59.100 --> 02:01.540
就全是自己搭建的npm装售

02:03.020 --> 02:04.900
还没有安装一代 对吧

02:04.900 --> 02:05.540
安装一下一代

02:07.660 --> 02:08.980
它有两个命令对不对

02:08.980 --> 02:10.660
搅手架给我们提供了两个命令

02:10.660 --> 02:11.460
其实两个命令呢

02:11.460 --> 02:14.140
就是在拍点接上里边进行配置的

02:14.140 --> 02:15.220
我们这里已经配置好了

02:17.470 --> 02:18.070
好了

02:18.070 --> 02:19.310
然后npm装售

02:21.230 --> 02:21.670
运行起来

02:23.070 --> 02:24.470
好看一下啊

02:24.510 --> 02:26.070
这是开发模式运行

02:27.190 --> 02:28.350
好 运行出来了

02:28.350 --> 02:29.310
你看是不是没问题

02:30.310 --> 02:30.630
然后呢

02:30.630 --> 02:31.790
生产环境模式运行

02:31.790 --> 02:32.710
我们试一下吧

02:32.710 --> 02:34.070
npm装

02:35.870 --> 02:36.510
生产环境

02:39.320 --> 02:40.480
好 你看一下这里

02:41.120 --> 02:42.480
你看是不是出来了

02:42.480 --> 02:43.680
对吧 没有什么问题对不对

02:44.400 --> 02:44.920
格式化一下

02:45.680 --> 02:47.080
这个页面其实很简单

02:47.080 --> 02:49.120
就是你导出了一些介石文件

02:49.920 --> 02:50.280
这边呢

02:50.280 --> 02:51.280
有介石啊

02:51.280 --> 02:52.520
有这个就是Static

02:52.520 --> 02:54.600
我们的图片有事业测试

02:54.600 --> 02:55.560
好 那么这个东西

02:55.600 --> 02:56.720
到底是怎么回事呢

02:56.720 --> 02:57.360
其实很简单

02:57.360 --> 02:58.440
咱们来看一下吧

02:58.440 --> 03:01.160
Dev这两个配置文件跟上节课呢

03:01.160 --> 03:02.000
差不多

03:02.680 --> 03:03.600
就是一个是

03:04.280 --> 03:05.680
社会开发模式下面

03:05.680 --> 03:08.040
我们使用的是vpegdev12来运行的

03:08.040 --> 03:09.360
使用了这个配置文件

03:10.160 --> 03:12.560
build的时候使用的是另外一个配置文件

03:13.560 --> 03:14.560
好 那么这个

03:14.560 --> 03:16.480
这两个配置文件都用到了一个基础配置

03:16.480 --> 03:17.560
就是base.conf

03:17.560 --> 03:19.200
对吧 都用到这个基础配置

03:19.200 --> 03:21.600
好 咱们首先看一下这个dev.ges

03:21.600 --> 03:22.520
非常简单

03:22.520 --> 03:23.880
模式开发模式

03:23.880 --> 03:24.200
然后呢

03:25.120 --> 03:26.040
然后dev.server呢

03:26.640 --> 03:27.560
默认打开啊

03:27.560 --> 03:29.000
就是打包好了之后呢

03:29.000 --> 03:29.720
自动打开

03:29.720 --> 03:31.000
然后端口号8080

03:31.000 --> 03:32.000
如果说有代理的话

03:32.000 --> 03:33.280
来这里自行进行配置

03:34.960 --> 03:35.760
控制台输出呢

03:35.760 --> 03:36.840
尽量少一点啊

03:36.840 --> 03:37.400
然后呢

03:37.400 --> 03:38.200
生产环境呢

03:38.200 --> 03:39.720
production dev to

03:40.280 --> 03:41.400
然后加了一个优化

03:41.400 --> 03:42.320
加了一个优化

03:42.320 --> 03:43.840
针对CSS运行优化

03:43.840 --> 03:44.280
然后呢

03:44.280 --> 03:45.640
根据基本配置运行配置

03:45.640 --> 03:47.320
关键就是在基本配置这里

03:47.320 --> 03:48.080
基本配置这里呢

03:48.080 --> 03:49.720
其实其他差不多

03:49.720 --> 03:50.640
你看一下

03:50.640 --> 03:53.000
入口就是src.media.ges

03:53.000 --> 03:53.280
对吧

03:53.320 --> 03:54.880
你这个东西为入口

03:54.880 --> 03:55.640
输出呢

03:55.640 --> 03:57.440
我们把它输出到哪呢

03:57.440 --> 03:59.520
输出的界是文件夹下面

03:59.520 --> 03:59.800
好

03:59.800 --> 04:00.200
然后呢

04:00.200 --> 04:00.760
我们这里呢

04:00.760 --> 04:02.960
定义了一个就是默认的后追

04:02.960 --> 04:04.280
就是你导入优用的时候

04:04.280 --> 04:05.920
我们是不是可以省略这个优用后追

04:05.920 --> 04:06.560
对吧

04:06.560 --> 04:07.520
像这样的文件

04:07.520 --> 04:07.720
对吧

04:07.720 --> 04:08.880
后追名为优用的文件

04:08.880 --> 04:10.000
是可以省略后追的

04:10.000 --> 04:11.680
那么我们把个后追该写上

04:11.680 --> 04:13.200
然后给他定义了两个别名

04:13.200 --> 04:14.000
没什么好说的

04:14.000 --> 04:14.480
对吧

04:14.480 --> 04:14.720
然后呢

04:14.720 --> 04:16.240
这里是就是

04:16.240 --> 04:17.920
精建一下控制台的输出

04:17.920 --> 04:19.080
关键是在loader这里

04:20.360 --> 04:20.520
好

04:20.520 --> 04:21.720
咱们看一下弱势啊

04:21.720 --> 04:22.760
这里边有几个loader

04:22.800 --> 04:23.120
这里呢

04:23.120 --> 04:24.200
我写了四个

04:24.200 --> 04:25.880
一个是关于介石loader

04:25.880 --> 04:27.640
我使用了背包loader

04:27.640 --> 04:31.080
就是进行用背包进行那个就是编译

04:31.880 --> 04:32.080
好

04:32.080 --> 04:32.680
背包里边呢

04:32.680 --> 04:34.680
我们做加的一个就是config

04:34.680 --> 04:36.200
加的这么一个就是present

04:36.200 --> 04:37.280
presets view

04:37.280 --> 04:38.200
就是它的预设呢

04:38.200 --> 04:39.600
它就是view的预设

04:39.600 --> 04:40.600
那么这个预设是什么呢

04:40.600 --> 04:41.840
我们来看一下安装包

04:41.840 --> 04:43.520
安装标里面有个view的预设

04:43.520 --> 04:44.320
就是在这

04:44.320 --> 04:45.760
找一找啊

04:46.920 --> 04:49.400
叫做背包presets view

04:49.400 --> 04:50.920
加入了这个每一个预设

04:50.920 --> 04:51.760
就是view的单码

04:51.800 --> 04:54.320
经过这样的背包来进行编译

04:54.320 --> 04:55.120
专门来编译

04:55.120 --> 04:56.160
view单码的

04:56.160 --> 04:56.360
好

04:56.360 --> 04:57.280
接下来我们再来看

04:57.280 --> 04:59.120
我这个回到这里来看

04:59.120 --> 05:00.080
这是介石

05:00.080 --> 05:00.720
然后呢

05:00.720 --> 05:02.440
CSS没什么好说的

05:02.440 --> 05:03.600
通过CSSloader

05:03.600 --> 05:05.560
然后当然如果说你要加入什么

05:05.560 --> 05:06.200
ness啊

05:06.200 --> 05:06.800
sars啊

05:06.800 --> 05:07.640
你至于一家啊

05:07.640 --> 05:08.520
都学过的

05:08.520 --> 05:10.600
然后把它打包成一个介石文件

05:10.600 --> 05:11.800
当然在parking里面呢

05:11.800 --> 05:13.160
它有相对应的

05:13.160 --> 05:13.320
好

05:13.320 --> 05:13.800
另外一个呢

05:13.800 --> 05:15.400
就是关于view

05:15.400 --> 05:17.640
后续名为view的文件

05:17.640 --> 05:18.920
那么编译这种文件呢

05:18.920 --> 05:20.840
我们需要用到viewloader

05:21.000 --> 05:22.800
需要用到它来进行编译

05:22.800 --> 05:23.160
对吧

05:23.160 --> 05:25.200
它的内就是我们把这种文件啊

05:25.200 --> 05:27.120
是交给这个viewloader来运行的

05:27.120 --> 05:27.960
它会把这个编译

05:27.960 --> 05:29.520
这个文件的进行编译

05:29.520 --> 05:30.840
哪些是CSS代码

05:30.840 --> 05:32.080
哪些是介石代码

05:32.080 --> 05:33.200
哪些是模仿代码

05:33.200 --> 05:35.000
都会进行编译的

05:35.000 --> 05:36.240
那么就交给它来完成就行了

05:36.240 --> 05:38.440
这是view官方给我们提供的这个loader

05:39.560 --> 05:40.760
当然这个loader内部呢

05:40.760 --> 05:41.800
它用到了很多loader

05:41.800 --> 05:43.440
比方说用到了fileloader

05:43.440 --> 05:45.040
用到了urlloader

05:45.040 --> 05:45.720
关键点呢

05:45.720 --> 05:47.440
是用到了这个东西

05:47.440 --> 05:48.640
关键是用到这个

05:48.640 --> 05:50.520
叫做viewtemplates compiler

05:50.520 --> 05:52.400
就是view模板编译器

05:52.400 --> 05:53.400
它要编译模板

05:53.400 --> 05:55.240
所以说它要用到这个玩意儿

05:55.240 --> 05:58.040
因此像这些viewtemplates compiler

05:58.040 --> 05:59.160
urlloader

05:59.160 --> 05:59.920
还有什么呢

05:59.920 --> 06:01.480
还有fileloader

06:01.480 --> 06:02.760
包括CSSloader

06:02.760 --> 06:03.200
这些呢

06:03.200 --> 06:04.360
其实它都需要的

06:04.360 --> 06:05.760
它的内部有依赖的

06:05.760 --> 06:07.200
因此你安装它的过后呢

06:07.200 --> 06:07.760
还不够

06:07.760 --> 06:09.360
你还要去安装相应的loader

06:09.360 --> 06:11.960
才能完成它的功能

06:11.960 --> 06:12.160
好

06:12.160 --> 06:13.640
然后再往我们下面看

06:13.640 --> 06:15.360
我们这些图片交给谁呢

06:15.360 --> 06:17.400
交给urlloader

06:17.400 --> 06:17.840
没问题吧

06:17.840 --> 06:18.840
其实是非常简单

06:18.840 --> 06:20.200
就这么几个loader

06:20.240 --> 06:21.480
然后插件呢

06:21.480 --> 06:22.960
插件也没有什么特别的

06:22.960 --> 06:24.160
清除输出目录

06:24.160 --> 06:25.160
copy

06:25.160 --> 06:29.640
除了把整个public目录

06:29.640 --> 06:32.960
复制到最终目录里面去

06:32.960 --> 06:33.720
然后还有这个

06:33.720 --> 06:35.320
就是atmabwipack plugin

06:35.320 --> 06:36.960
就是单页应用程序

06:36.960 --> 06:38.240
所以说只有一个页面

06:38.240 --> 06:39.480
我们就直接配置了

06:39.480 --> 06:42.880
把这个页面用作为模板

06:42.880 --> 06:43.080
好

06:43.080 --> 06:44.840
然后打包css的文件

06:44.840 --> 06:46.200
到具体的文件中

06:46.200 --> 06:48.040
把它保存到css的目录下面去

06:48.040 --> 06:49.240
最后还要不要忘记了

06:49.280 --> 06:50.240
写上这么一个public

06:51.240 --> 06:53.240
就在viu的loader

06:53.240 --> 06:55.680
好像在17这个版本之后

06:55.680 --> 06:57.040
viuloader还有自己的版本

06:57.040 --> 06:58.480
在17这个版本之后

06:58.480 --> 07:00.000
它需要加上一个public

07:00.000 --> 07:01.360
那就是光使用loader还不够

07:01.360 --> 07:03.680
它还要对这个vipack的整个流程

07:03.680 --> 07:04.560
有所控制

07:04.560 --> 07:06.120
所以说你要加上这个public

07:06.120 --> 07:07.280
这public哪来的呢

07:07.280 --> 07:08.480
这个public从这来的

07:08.480 --> 07:10.440
在viuloader安装好了之后

07:10.440 --> 07:12.120
在它这个目录下面

07:12.120 --> 07:13.160
就有一个public

07:13.160 --> 07:14.400
把它导入进来

07:14.400 --> 07:16.240
然后在这里使用它就完事了

07:16.240 --> 07:17.720
那么整个viu就搭建好了

07:17.800 --> 07:19.080
就是关键点就在于

07:19.080 --> 07:21.000
一个是这个procain

07:21.000 --> 07:23.080
一个是loader这里

07:23.080 --> 07:24.200
加上这么一个就是

07:24.200 --> 07:25.680
后维名为viu的

07:25.680 --> 07:27.800
就是加过这个viuloader来完成

07:27.800 --> 07:29.000
就完事了

07:29.000 --> 07:32.160
那么后边什么viuloader viux

07:32.160 --> 07:32.960
它怎么使用了

07:32.960 --> 07:35.440
跟这个工程就没有什么关系了

07:35.440 --> 07:37.400
跟这个vipack工程就没有什么关系了

07:37.400 --> 07:38.640
那么那些东西怎么使用了

07:38.640 --> 07:39.880
就是它是

07:39.880 --> 07:43.840
你就作为普通一旦去安装就完事了

07:43.840 --> 07:44.640
那就完事了

07:44.640 --> 07:45.680
最后我们再看一下吧

07:46.680 --> 07:50.380
npmron

07:50.380 --> 07:51.380
serve

07:55.800 --> 07:57.600
还可以看到整个工程的

07:57.600 --> 07:59.240
可以是没有任何问题的

08:00.440 --> 08:01.040
没有任何问题

08:01.040 --> 08:02.680
当然我这里没有加入什么了

08:02.680 --> 08:03.520
没有加入那个

08:03.520 --> 08:05.480
我看一下它有没有自带那个

08:06.360 --> 08:07.280
因为它个procain里面

08:07.280 --> 08:08.200
有没有自带那个

08:08.200 --> 08:09.640
就是热梯化

08:10.400 --> 08:11.280
看一下吧

08:11.280 --> 08:12.400
随便写一个

08:13.280 --> 08:15.400
这边我们随便写一个吧

08:16.800 --> 08:17.920
message

08:18.880 --> 08:19.640
1

08:19.640 --> 08:20.040
保存

08:22.040 --> 08:22.640
没有

08:22.640 --> 08:24.040
它没有加入热梯化

08:24.040 --> 08:25.720
当然要加入热梯化也很简单

08:25.720 --> 08:26.800
我们之前也学过的

08:26.800 --> 08:28.840
一把热梯化加成就完事了

08:28.840 --> 08:31.520
其实这里没有什么特别复杂的

08:31.520 --> 08:34.240
所以说我没有带着大家一步一步去做

08:34.240 --> 08:35.040
这样太繁硕了

08:35.040 --> 08:36.080
没有什么意义

08:36.080 --> 08:37.320
我就给大家说这个结果

08:37.320 --> 08:39.320
其实也没有那么复杂

08:39.320 --> 08:41.520
它本质上就是利用一个loader

08:41.520 --> 08:43.240
利用一个procain来完成的

08:43.240 --> 08:44.280
当然viu cd

08:44.280 --> 08:45.520
就是教授加工具里面

08:45.520 --> 08:46.280
它还要加入了

08:46.320 --> 08:48.640
它自己给你编写了很多功能

08:48.640 --> 08:52.160
包括独有的配置文件

08:52.160 --> 08:53.160
独有的配置方式

08:53.160 --> 08:55.800
还要包括那个就是预加载等等

08:55.800 --> 08:57.120
那么它加上了额外功能

08:57.120 --> 08:59.600
都是通过一些相应的位牌的插线

08:59.600 --> 09:00.600
相应的loader去完成的

09:00.600 --> 09:02.280
那它核心就是利用

09:02.280 --> 09:04.040
刚才我们看到的东西

09:04.040 --> 09:04.360
好吧

09:04.360 --> 09:05.760
这里给大家说一下

09:05.760 --> 09:07.560
其实你们以后在工作中

09:07.560 --> 09:09.480
会不会自己手动去搭建这个位牌

09:09.480 --> 09:11.440
和viu的工程呢

09:11.440 --> 09:12.320
基本上不会

09:12.320 --> 09:14.280
除非情况特别特殊

09:14.280 --> 09:15.600
我估计你们都遇不到

09:15.640 --> 09:17.080
一般都是用那个教授加

09:17.080 --> 09:19.520
因为他教授加已经做的非常强大了

09:19.520 --> 09:21.520
用他教授加搭建就可以了

09:21.520 --> 09:22.560
这里给大家说一下

09:22.560 --> 09:24.280
当然了解一下viu cd

09:24.280 --> 09:25.600
它到底是一个怎么回事

09:25.600 --> 09:26.760
还没有那么神奇

09:26.760 --> 09:28.040
就是利用位牌

09:28.040 --> 09:28.360
好了

09:28.360 --> 09:29.360
那么这里回到这里

