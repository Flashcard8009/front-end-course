WEBVTT

00:00.000 --> 00:05.000
好 本堂课我们来创建第一个我们的3.js的一个程序

00:05.000 --> 00:09.500
那我们先来了解一下我们最终要实现的一个效果是什么样子的

00:09.500 --> 00:13.000
最终我们要实现的一个效果呢 其实就是这样的

00:13.000 --> 00:16.500
诶 找不到了是吧 我再来找一下

00:16.500 --> 00:20.000
我们最终要实现的一个效果啊 就是

00:20.000 --> 00:24.000
诶 这样的一个图形 爆了个错

00:24.000 --> 00:28.000
好 没有找到3.js 那我们可以改一下

00:28.500 --> 00:32.000
是完整的 OK

00:32.000 --> 00:36.000
再来看一下 我们最终要实现的一个效果就是这个样子的

00:36.000 --> 00:39.000
有一个立方体 对吧 我们可以看到有个立方体

00:39.000 --> 00:43.000
一个 呃 一个

00:43.000 --> 00:46.000
这叫正方体或者长方体 对吧

00:46.000 --> 00:49.000
然后它在旋转一个效果

00:49.000 --> 00:53.000
然后我们这个画布是一个

00:53.000 --> 00:56.000
填满我整个屏幕的一个画布 看到了吧

00:56.000 --> 01:00.000
OK 那我们接下来就来实现这样的一个效果

01:00.000 --> 01:03.000
那上一堂课我说了3.js里面

01:03.000 --> 01:06.000
它有三个最主要的对象

01:06.000 --> 01:09.000
啊 第一个对象是这个 呃 场景

01:09.000 --> 01:11.000
第二个对象是 呃 相机

01:11.000 --> 01:13.000
第三个对象是渲染器 对吧

01:13.000 --> 01:15.000
那我们首先先来

01:15.000 --> 01:18.000
创建一下这三个对象

01:18.000 --> 01:21.000
那在创建之前我们是不是要引入一下3.js啊

01:21.000 --> 01:25.000
对吧 那上一堂课也说了在哪里引入对不对

01:25.000 --> 01:27.000
我们只需要去下载一下就可以了

01:27.000 --> 01:30.000
我们可以呃 再回头来再说一下吧

01:30.000 --> 01:32.000
大家在哪 在哪去下载啊

01:32.000 --> 01:35.000
你可以点击这 看这里啊

01:35.000 --> 01:36.000
开始之前点击一下它

01:36.000 --> 01:38.000
然后它这不有一个圆码吗

01:38.000 --> 01:40.000
你右键保存 另寸为一下也可以

01:40.000 --> 01:42.000
然后还有一种方法呢

01:42.000 --> 01:43.000
大家可以去找一下

01:43.000 --> 01:45.000
可以在github上去找一下

01:45.000 --> 01:47.000
可以去找一下

01:47.000 --> 01:49.000
嗯

01:49.000 --> 01:52.000
3.js

01:52.000 --> 01:54.000
下载

01:54.000 --> 01:56.630
ok

01:56.630 --> 01:58.630
然后我们可以去找一下啊

01:58.630 --> 02:00.630
在这里有个登录的

02:00.630 --> 02:01.630
登录的

02:01.630 --> 02:04.630
可以看一下 哎 它自动可以给你下载了对不对

02:04.630 --> 02:06.630
然后下载完成之后

02:06.630 --> 02:08.630
一会儿等它下载完了之后再来说

02:08.630 --> 02:10.630
可以吧 下载完成之后

02:10.630 --> 02:12.630
它里面有一个文件夹啊

02:12.630 --> 02:15.630
你要去文件夹 下面去找3.js

02:15.630 --> 02:17.630
好吧 一会儿我们再来说这个啊

02:17.630 --> 02:18.630
ok

02:18.630 --> 02:20.630
然后我们现在已经引入了对不对

02:20.630 --> 02:22.630
啊 引入这个3.js

02:22.630 --> 02:23.630
引入了之后

02:23.630 --> 02:25.630
我们接下来创建一个square无标签

02:25.630 --> 02:27.630
然后接下来我们就需要

02:27.630 --> 02:29.630
创建这三个对象

02:29.630 --> 02:31.630
出实话这三个对象

02:31.630 --> 02:33.630
创建

02:33.630 --> 02:35.630
场景

02:35.630 --> 02:37.630
创建场景

02:37.630 --> 02:38.630
怎么来创建场景呢

02:38.630 --> 02:39.630
先起一个编列名啊

02:39.630 --> 02:41.630
叫syn

02:41.630 --> 02:43.630
叫syn

02:43.630 --> 02:44.630
它是一个场景的一个意思

02:44.630 --> 02:46.630
然后在我们3.js里面

02:46.630 --> 02:48.630
创建场景只需要

02:48.630 --> 02:50.630
调用一个过作函数就可以了

02:50.630 --> 02:52.630
我们在这里可以看到 对吧

02:52.630 --> 02:53.630
它这里有个例子

02:53.630 --> 02:54.630
对不对 创建场景

02:54.630 --> 02:56.630
直接调用3.syn

02:56.630 --> 02:57.630
就可以了

02:57.630 --> 02:58.630
这个个作函数

02:58.630 --> 02:59.630
那我们也是一样的

02:59.630 --> 03:00.630
调用一下

03:00.630 --> 03:02.630
3.sc1.1

03:02.630 --> 03:03.630
syn

03:03.630 --> 03:04.630
可以吧

03:04.630 --> 03:06.630
然后握一个craminal

03:06.630 --> 03:08.630
ca mer

03:08.630 --> 03:09.630
对吧

03:09.630 --> 03:10.630
cramer

03:10.630 --> 03:11.630
cramer啊

03:11.630 --> 03:12.630
然后也是一样的

03:12.630 --> 03:13.630
注意这是nu出来了

03:13.630 --> 03:15.630
一个对象

03:15.630 --> 03:16.630
nu出来的一个对象

03:16.630 --> 03:18.630
所以nu关键字不要忘记

03:18.630 --> 03:20.630
2

03:20.630 --> 03:22.630
然后这个相机啊

03:22.630 --> 03:24.630
这个cramer

03:24.630 --> 03:25.630
这个相机

03:25.630 --> 03:26.630
它有几个相机

03:26.630 --> 03:27.630
几种相机

03:27.630 --> 03:29.630
在我们的webgr里面

03:29.630 --> 03:30.630
我是不是也说过

03:30.630 --> 03:32.630
它的一个视角那个问题

03:32.630 --> 03:33.630
对吧

03:33.630 --> 03:34.630
那它的视角问题

03:34.630 --> 03:35.630
其实就是

03:35.630 --> 03:37.630
我们这个相机的一个问题啊

03:37.630 --> 03:38.630
那我们相机这里

03:38.630 --> 03:40.630
有两类相机

03:40.630 --> 03:43.630
一类是这个

03:43.630 --> 03:44.630
透视相机

03:44.630 --> 03:46.630
也管它叫远景相机

03:46.630 --> 03:49.630
还有一类是正焦

03:49.630 --> 03:50.630
投影对吧

03:50.630 --> 03:51.630
正焦投影

03:51.630 --> 03:53.630
也管它叫

03:53.630 --> 03:55.630
立方体相机对吧

03:55.630 --> 03:57.630
也可以叫正焦相机

03:57.630 --> 03:58.630
都可以啊

03:58.630 --> 03:59.630
可以看一下

03:59.630 --> 04:00.630
它在这里啊

04:00.630 --> 04:01.630
在这里

04:01.630 --> 04:02.630
在视像机这里

04:02.630 --> 04:04.630
它有这么几个对象

04:04.630 --> 04:06.630
然后你可以每一个都点进去看一下

04:06.630 --> 04:07.630
那这一部分

04:07.630 --> 04:09.630
这一部分我们下一堂课来讲

04:09.630 --> 04:10.630
我们说这一堂课

04:10.630 --> 04:13.630
就先来实现这样的一个效果

04:13.630 --> 04:15.630
实现完这样的一个效果之后

04:15.630 --> 04:16.630
我在根据

04:16.630 --> 04:19.630
这一个Demo里面所用到的一些

04:19.630 --> 04:20.630
接口

04:20.630 --> 04:21.630
一些方法

04:21.630 --> 04:24.630
我们再详细的一个方法

04:24.630 --> 04:25.630
一个方法来说

04:25.630 --> 04:26.630
好吧

04:26.630 --> 04:27.630
OK

04:27.630 --> 04:29.630
那我们直接用一下

04:29.630 --> 04:30.630
这个远景相机

04:30.630 --> 04:33.630
就像我们

04:33.630 --> 04:36.630
接近于我们人类

04:36.630 --> 04:37.630
人类的生活当中

04:37.630 --> 04:40.630
你所看到的事物的一个

04:40.630 --> 04:42.630
一个情况

04:42.630 --> 04:43.630
可以吧

04:43.630 --> 04:45.630
那我们就可以使用这个

04:45.630 --> 04:47.630
perspective grammar

04:47.630 --> 04:49.630
把它copy过来

04:49.630 --> 04:50.630
对吧

04:50.630 --> 04:52.630
然后这个透视相机

04:52.630 --> 04:53.630
它有几个参数

04:53.630 --> 04:54.630
第一个参数呢

04:54.630 --> 04:56.630
是一个视角

04:56.630 --> 04:58.630
是你能看到的

04:58.630 --> 05:00.630
你能看到的一个视角

05:00.630 --> 05:01.630
我们可以看一下一个图

05:01.630 --> 05:03.630
我这里有个图

05:03.630 --> 05:04.630
可以看一下

05:04.630 --> 05:05.630
远景相机

05:05.630 --> 05:06.630
远景相机

05:06.630 --> 05:07.630
第一个参数

05:07.630 --> 05:08.630
它是视角

05:08.630 --> 05:09.630
这个视角是什么意思

05:09.630 --> 05:11.630
就是我们上面这个面

05:11.630 --> 05:12.630
看到了吗

05:12.630 --> 05:13.630
这个面

05:13.630 --> 05:14.630
这个三角形面

05:14.630 --> 05:15.630
和下面底面

05:15.630 --> 05:17.630
它所夹的一个角

05:17.630 --> 05:19.630
这叫你可视区的一个夹角

05:19.630 --> 05:20.630
可以吧

05:20.630 --> 05:22.630
我就管它叫一个视角

05:22.630 --> 05:24.630
然后第二个值

05:24.630 --> 05:29.630
是我们一个屏幕的一个宽高比

05:29.630 --> 05:30.630
第二

05:30.630 --> 05:32.630
第二值是你的屏幕的宽高比

05:32.630 --> 05:34.630
你想渲染到

05:34.630 --> 05:36.630
多大的一个屏幕上去

05:36.630 --> 05:39.630
也就是我们所说的近屏面

05:39.630 --> 05:40.630
或者是远屏面

05:40.630 --> 05:41.630
它的一个宽高比

05:41.630 --> 05:42.630
对吧

05:42.630 --> 05:45.630
你就可以给它设置一下

05:45.630 --> 05:46.630
可以吧

05:46.630 --> 05:47.630
然后第三个参数

05:47.630 --> 05:51.630
是近屏面与我们相机的一个距离

05:51.630 --> 05:53.630
近屏面所在的一个距离

05:53.630 --> 05:54.630
还有第二

05:54.630 --> 05:57.630
第四个参数

05:57.630 --> 05:59.630
它是远屏面的一个距离

05:59.630 --> 06:02.630
我们根据这几个参数

06:02.630 --> 06:03.630
我们就可以定位

06:03.630 --> 06:04.630
我们这个近屏面

06:04.630 --> 06:06.630
和远屏面的一个位置了

06:06.630 --> 06:07.630
对不对

06:07.630 --> 06:09.630
我们物体

06:09.630 --> 06:12.630
在近屏面和远屏面

06:12.630 --> 06:14.630
近裁箭前面

06:14.630 --> 06:15.630
和远裁箭前面

06:15.630 --> 06:17.630
中间的位置

06:17.630 --> 06:19.630
我们才可以看到

06:19.630 --> 06:20.630
那在其他的位置

06:20.630 --> 06:23.630
在这个区域外的位置的话

06:23.630 --> 06:25.630
我们是看不到的

06:25.630 --> 06:27.630
这可以理解

06:27.630 --> 06:28.630
对吧

06:28.630 --> 06:30.630
这可以理解吧

06:30.630 --> 06:31.630
那OK

06:31.630 --> 06:32.630
那我们也给它设置一下

06:32.630 --> 06:33.630
可以吧

06:33.630 --> 06:34.630
我们设置一下

06:34.630 --> 06:35.630
那我们这块

06:35.630 --> 06:36.630
就直接给它拿过来吧

06:37.630 --> 06:38.630
复制一下

06:38.630 --> 06:41.630
然后往这里写一下

06:41.630 --> 06:42.630
然后这个宽高比

06:42.630 --> 06:43.630
我就直接写我们的

06:43.630 --> 06:45.630
这个页面的一个宽度和高度了

06:45.630 --> 06:46.630
对吧

06:46.630 --> 06:47.630
Window点

06:47.630 --> 06:48.630
Inner

06:48.630 --> 06:49.630
Height

06:49.630 --> 06:50.630
Innerize

06:50.630 --> 06:51.630
以上

06:51.630 --> 06:52.630
Window点

06:52.630 --> 06:54.630
InnerHeight

06:54.630 --> 06:56.630
可以吧

06:56.630 --> 06:58.630
然后近屏面在

06:58.630 --> 07:00.630
一向素的位置

07:00.630 --> 07:02.630
远屏面在一千向素的位置

07:02.630 --> 07:03.630
那这里

07:03.630 --> 07:05.630
这个单位

07:05.630 --> 07:07.630
第一个参数

07:07.630 --> 07:08.630
它是一个角度

07:08.630 --> 07:09.630
它单位是一个弧度

07:09.630 --> 07:10.630
对吧

07:10.630 --> 07:11.630
一个度数

07:11.630 --> 07:12.630
一个度数不是弧度了

07:12.630 --> 07:14.630
它是一个度数

07:14.630 --> 07:15.630
那最后

07:15.630 --> 07:16.630
这两个

07:16.630 --> 07:17.630
它俩的参数是什么呢

07:17.630 --> 07:18.630
这两个参数

07:18.630 --> 07:20.630
这是一个相对的参数

07:20.630 --> 07:23.630
你可以认为它是一个向素值

07:23.630 --> 07:24.630
你也可以认为

07:24.630 --> 07:26.630
它是毫米

07:26.630 --> 07:27.630
米

07:27.630 --> 07:28.630
什么单位都可以

07:28.630 --> 07:30.630
它就是一个相对的一个单位

07:30.630 --> 07:31.630
那理解吧

07:31.630 --> 07:33.630
它就是一个相对的单位

07:33.630 --> 07:34.630
OK

07:34.630 --> 07:35.630
现在这个

07:35.630 --> 07:36.630
相机已经

07:36.630 --> 07:37.630
创建完了

07:37.630 --> 07:38.630
对吧

07:38.630 --> 07:39.630
接下来

07:39.630 --> 07:40.630
我们要创建一个

07:40.630 --> 07:41.630
这个渲染器了

07:41.630 --> 07:42.630
对不对

07:42.630 --> 07:43.630
Renderer

07:43.630 --> 07:44.630
你有一个

07:44.630 --> 07:47.630
3.2

07:47.630 --> 07:48.630
然后这个Renderer

07:48.630 --> 07:50.630
应该怎么来创建呢

07:50.630 --> 07:52.630
渲染器也分很多种

07:52.630 --> 07:53.630
我们可以查一下

07:53.630 --> 07:54.630
这里面

07:54.630 --> 07:55.630
渲染器

07:55.630 --> 07:56.630
我觉得也分很多种

07:56.630 --> 07:58.630
我们可以搜一下Renderer

07:59.630 --> 08:02.630
Renderer

08:02.630 --> 08:03.630
对吧

08:03.630 --> 08:04.630
你看这里

08:04.630 --> 08:05.630
渲染器也有四种

08:05.630 --> 08:06.630
对吧

08:06.630 --> 08:07.630
然后每一种渲染器

08:07.630 --> 08:08.630
它都是有一点区别的

08:08.630 --> 08:09.630
然后

08:09.630 --> 08:11.630
这个区别是什么

08:11.630 --> 08:12.630
我们下一堂课

08:12.630 --> 08:13.630
再去讲它的文档的时候

08:13.630 --> 08:14.630
我们再来说

08:14.630 --> 08:15.630
可以吧

08:15.630 --> 08:16.630
那好

08:16.630 --> 08:17.630
我们先用这个

08:17.630 --> 08:18.630
先用第一个比较普遍用到的

08:18.630 --> 08:19.630
就是这个

08:19.630 --> 08:20.630
WebGL Renderer

08:20.630 --> 08:21.630
可以吧

08:21.630 --> 08:22.630
WebGL Renderer

08:22.630 --> 08:24.630
它是这个

08:24.630 --> 08:25.630
用WebGL

08:25.630 --> 08:26.630
渲染出你

08:26.630 --> 08:28.630
制作的一个场景的

08:28.630 --> 08:29.630
那我们是不是就可以用它

08:29.630 --> 08:30.630
对吧

08:30.630 --> 08:31.630
那我们直接拿过来用了

08:31.630 --> 08:33.630
然后这个Renderer里面

08:33.630 --> 08:34.630
你可以传第一个参数

08:34.630 --> 08:35.630
你也可以不传

08:36.630 --> 08:37.630
你可以看一下

08:37.630 --> 08:39.630
我们这个参数传的是什么

08:40.630 --> 08:41.630
这个参数

08:41.630 --> 08:42.630
它有一个属性

08:42.630 --> 08:43.630
叫Cavers

08:43.630 --> 08:44.630
这个Cavers

08:47.630 --> 08:48.630
这个Cavers

08:48.630 --> 08:50.630
也就是我们要把

08:50.630 --> 08:51.630
我们的

08:51.630 --> 08:53.630
我们的元素

08:53.630 --> 08:54.630
我们的元素

08:54.630 --> 08:55.630
我们里面的内容

08:55.630 --> 08:56.630
要渲染到哪去

08:56.630 --> 08:57.630
那如果你要是

08:57.630 --> 08:58.630
不添写这个的话

08:58.630 --> 08:59.630
它会给你默认

08:59.630 --> 09:00.630
让你自己去写

09:00.630 --> 09:02.630
它会默认给你

09:02.630 --> 09:03.630
创建一个Cavers的

09:03.630 --> 09:04.630
一个道目元素

09:04.630 --> 09:05.630
可以吧

09:06.630 --> 09:07.630
然后还有

09:07.630 --> 09:08.630
下面这个

09:08.630 --> 09:10.630
Contax这个属性

09:10.630 --> 09:11.630
也是一样的

09:11.630 --> 09:12.630
Contax这个属性

09:12.630 --> 09:14.630
它是将渲染器

09:14.630 --> 09:16.630
附加到一有的

09:16.630 --> 09:17.630
渲染环境当中

09:17.630 --> 09:18.630
也就是说

09:18.630 --> 09:20.630
如果你页面里面有的话

09:20.630 --> 09:22.630
页面里面有这个

09:22.630 --> 09:23.630
环境的话

09:23.630 --> 09:24.630
Cavers环境的话

09:24.630 --> 09:26.630
我们就可以加上这个Contax

09:26.630 --> 09:27.630
代表是

09:27.630 --> 09:28.630
参加稳定的一个意思

09:28.630 --> 09:29.630
对吧

09:29.630 --> 09:31.630
然后下面这个Pursation

09:31.630 --> 09:33.630
代表着色器的精度

09:33.630 --> 09:34.630
这是不是就用到

09:34.630 --> 09:35.630
着色器的一个问题了

09:35.630 --> 09:36.630
对吧

09:36.630 --> 09:37.630
说到着色器的问题了

09:37.630 --> 09:39.630
我们在webgr里面

09:39.630 --> 09:42.630
是不是要咱们自己去编写

09:42.630 --> 09:43.630
一般的着色器

09:43.630 --> 09:45.630
我们都需要自己在编写

09:45.630 --> 09:46.630
对吧

09:46.630 --> 09:47.630
着色器语言

09:47.630 --> 09:48.630
我们都需要

09:48.630 --> 09:49.630
自己去写一下

09:49.630 --> 09:52.630
但是在3.js里面

09:52.630 --> 09:54.630
我们有一些

09:54.630 --> 09:55.630
比较基础的

09:55.630 --> 09:56.630
比较简单的

09:56.630 --> 09:57.630
那些着色器语言

09:57.630 --> 09:58.630
你就不用再写了

09:58.630 --> 10:00.630
因为它已经给你封装好了

10:00.630 --> 10:01.630
我们只需要

10:01.630 --> 10:02.630
调用其中的一些方法

10:02.630 --> 10:03.630
你看像这个

10:03.630 --> 10:04.630
缺染器的话

10:04.630 --> 10:06.630
webgr render row

10:06.630 --> 10:09.630
它里面就有对着色器的一些操作

10:09.630 --> 10:10.630
对不对

10:10.630 --> 10:12.630
像这个着色器的一个精度

10:12.630 --> 10:13.630
对不对

10:13.630 --> 10:16.630
还有这个

10:16.630 --> 10:17.630
是否包含透明度

10:17.630 --> 10:19.630
这些对吧

10:19.630 --> 10:20.630
等等

10:20.630 --> 10:21.630
后面还有很多

10:21.630 --> 10:23.630
那这些我们也最后

10:23.630 --> 10:25.630
我们后面一堂课

10:25.630 --> 10:27.630
也会带着大家来说

10:27.630 --> 10:28.630
它的这些参数

10:28.630 --> 10:30.630
可以吧

10:30.630 --> 10:31.630
那我们这堂课

10:31.630 --> 10:33.630
还是直接拿过来用

10:33.630 --> 10:35.630
然后我们这个参数

10:35.630 --> 10:37.630
这个参数你是可以选的

10:37.630 --> 10:38.630
如果你想要对它的一个

10:38.630 --> 10:42.630
渲染器进行一些处理的话

10:42.630 --> 10:44.630
我们就可以写这些参数

10:44.630 --> 10:45.630
但如果你不想

10:45.630 --> 10:47.630
对它进行任何的处理

10:47.630 --> 10:48.630
直接用它默认的话

10:48.630 --> 10:49.630
也是可以的

10:49.630 --> 10:50.630
可以吧

10:50.630 --> 10:51.630
那我们就直接

10:51.630 --> 10:54.630
调用一下webgr

10:54.630 --> 10:56.630
webgr

10:56.630 --> 11:00.630
gr

11:00.630 --> 11:01.630
调用一下就可以了

11:01.630 --> 11:02.630
然后渲染器

11:02.630 --> 11:04.630
我创建完了这个渲染器

11:04.630 --> 11:06.630
但是我没有给这个渲染器

11:06.630 --> 11:07.630
设置大小对不对

11:07.630 --> 11:09.630
我们接下来要给这个渲染器

11:09.630 --> 11:10.630
设置一个大小

11:10.630 --> 11:11.630
第2

11:11.630 --> 11:14.630
size

11:14.630 --> 11:15.630
size

11:15.630 --> 11:17.630
然后我们要给它设置多大呢

11:17.630 --> 11:18.630
我们是不是

11:18.630 --> 11:19.630
就可以设置整个页面的这么大

11:19.630 --> 11:20.630
对吧

11:20.630 --> 11:21.630
我们可以设置一下

11:21.630 --> 11:25.630
window.innerwise

11:26.630 --> 11:27.630
整个页面这么大

11:27.630 --> 11:28.630
OK

11:28.630 --> 11:29.630
那我们现在是不是

11:29.630 --> 11:30.630
渲染器也设置完了

11:30.630 --> 11:31.630
对吧

11:31.630 --> 11:32.630
渲染器也出实化完了

11:32.630 --> 11:33.630
接下来我们要做什么了

11:33.630 --> 11:37.630
是不是应该有一个物体

11:37.630 --> 11:38.630
对吧

11:38.630 --> 11:39.630
然后我们要最后

11:39.630 --> 11:40.630
要实现的一个效果

11:40.630 --> 11:41.630
是不是一个立方体

11:41.630 --> 11:42.630
对不对

11:42.630 --> 11:43.630
那我们就接下来

11:43.630 --> 11:45.630
就要实现这样的一个立方体

11:45.630 --> 11:46.630
那这个立方体

11:46.630 --> 11:47.630
怎么来实现呢

11:47.630 --> 11:49.630
在我们3.js里面

11:49.630 --> 11:51.630
有一个gimitrate的一个概念

11:51.630 --> 11:52.630
这一页

11:52.630 --> 11:56.630
gimitrate的一个概念

11:56.630 --> 11:57.630
gimitrate的一个概念

11:57.630 --> 11:59.630
gimitrate就代表是几何体

11:59.630 --> 12:00.630
比如说

12:00.630 --> 12:02.630
它已经把所有的形状

12:02.630 --> 12:03.630
都给你封装好了

12:03.630 --> 12:04.630
我们只需要去

12:04.630 --> 12:06.630
调用它相的一些方法

12:06.630 --> 12:07.630
就可以了

12:07.630 --> 12:08.630
那我们的一个立方体

12:08.630 --> 12:09.630
它就相当于盒子

12:09.630 --> 12:10.630
对不对

12:10.630 --> 12:11.630
那这个盒子的话

12:11.630 --> 12:14.630
我们就可以调用这个box.gimitrate

12:14.630 --> 12:15.630
box.gimitrate

12:15.630 --> 12:16.630
我们可以看一下

12:16.630 --> 12:19.630
它的样式是这样的

12:19.630 --> 12:20.630
对吧

12:20.630 --> 12:21.630
它就是一个立方体

12:21.630 --> 12:22.630
形状

12:22.630 --> 12:23.630
对不对

12:23.630 --> 12:24.630
那我们就可以直接调用

12:24.630 --> 12:25.630
这个gimitrate

12:25.630 --> 12:27.630
一个new一个gimitrate

12:27.630 --> 12:28.630
就可以了

12:28.630 --> 12:30.630
先建一个gimitrate的一个对象

12:30.630 --> 12:31.630
那我们把直接

12:31.630 --> 12:32.630
直接copy过来吧

12:32.630 --> 12:33.630
可以吧

12:33.630 --> 12:35.630
刷建

12:35.630 --> 12:37.630
几何体

12:37.630 --> 12:38.630
OK吧

12:38.630 --> 12:40.630
然后我们创建完几何体之后

12:40.630 --> 12:42.630
并不就完事了

12:42.630 --> 12:43.630
你这创建完几何体

12:43.630 --> 12:44.630
你是不是还要

12:44.630 --> 12:45.630
给这个几何体

12:45.630 --> 12:46.630
添加颜色

12:46.630 --> 12:47.630
添加颜色

12:47.630 --> 12:49.630
然后还有一些材质

12:49.630 --> 12:50.630
对吧

12:50.630 --> 12:51.630
添加

12:51.630 --> 12:52.630
如何添加颜色呢

12:52.630 --> 12:54.630
在我们3.js里面

12:54.630 --> 12:55.630
添加颜色

12:55.630 --> 12:57.630
就是给它

12:57.630 --> 12:58.630
你可以

12:58.630 --> 12:59.630
一种方式

12:59.630 --> 13:00.630
可以给它添加文利

13:00.630 --> 13:01.630
对吧

13:01.630 --> 13:02.630
文利就是我们

13:02.630 --> 13:04.630
要添加一些图片

13:04.630 --> 13:05.630
对吧

13:05.630 --> 13:06.630
往我们的这个

13:06.630 --> 13:07.630
图形身上

13:07.630 --> 13:08.630
附加图片

13:08.630 --> 13:09.630
还有一种方式是什么呢

13:09.630 --> 13:10.630
就是添加材质

13:10.630 --> 13:11.630
就是这个

13:11.630 --> 13:12.630
添加材质

13:12.630 --> 13:13.630
添加材质

13:13.630 --> 13:14.630
我们也可以给它添加颜色的

13:14.630 --> 13:15.630
可以吧

13:15.630 --> 13:16.630
那我们直接把这个材质

13:16.630 --> 13:20.780
直接拿过来了

13:20.780 --> 13:21.780
材质

13:21.780 --> 13:22.780
又创建了一个材质

13:22.780 --> 13:23.780
对吧

13:23.780 --> 13:24.780
但我这个材质

13:24.780 --> 13:25.780
和我的结合体

13:25.780 --> 13:26.780
现在还没有连接上

13:26.780 --> 13:27.780
对不对

13:27.780 --> 13:28.780
怎么给它添加颜色上呢

13:28.780 --> 13:29.780
我们就需要一个

13:29.780 --> 13:31.780
Mesh的一个结构

13:31.780 --> 13:32.780
一个结构

13:32.780 --> 13:33.780
我们可以查一下

13:33.780 --> 13:34.780
这个Mesh

13:34.780 --> 13:35.780
MESH

13:35.780 --> 13:36.780
你可以查一下

13:36.780 --> 13:37.780
Mesh

13:37.780 --> 13:38.780
这个Mesh

13:38.780 --> 13:40.780
代表是网格的一个结构

13:40.780 --> 13:42.780
网格的一个结构

13:42.780 --> 13:43.780
我们就可以把所有

13:43.780 --> 13:45.780
把我们的

13:45.780 --> 13:47.780
这个材料

13:47.780 --> 13:49.780
把我们的这个材质

13:49.780 --> 13:50.780
和我们的

13:50.780 --> 13:51.780
结合体

13:51.780 --> 13:52.780
进行一个结合

13:52.780 --> 13:53.780
你可以理解为

13:53.780 --> 13:54.780
这个Mesh

13:54.780 --> 13:55.780
它就是代表一个

13:55.780 --> 13:56.780
结合的意思

13:56.780 --> 13:57.780
对不对

13:57.780 --> 13:58.780
它就是

13:58.780 --> 14:00.780
通过这两个元素

14:00.780 --> 14:01.780
这两个元素

14:01.780 --> 14:03.780
结合成一个

14:03.780 --> 14:04.780
对吧

14:04.780 --> 14:05.780
结合成在

14:05.780 --> 14:07.780
结合在一起

14:07.780 --> 14:09.780
通过网格的一个结构

14:09.780 --> 14:11.780
给它结合在一起

14:11.780 --> 14:12.780
可以吧

14:12.780 --> 14:13.780
那我们就直接

14:13.780 --> 14:14.780
把它也拿过来吧

14:14.780 --> 14:15.780
可以吧

14:15.780 --> 14:17.780
Mesh

14:18.780 --> 14:20.780
这样一来

14:20.780 --> 14:22.780
它俩结合成之后

14:22.780 --> 14:24.780
是不是就结合出来一个

14:24.780 --> 14:25.780
立方体

14:25.780 --> 14:26.780
对吧

14:26.780 --> 14:27.780
一个立方体

14:27.780 --> 14:28.780
那这个立方体

14:28.780 --> 14:29.780
我们接下来

14:29.780 --> 14:30.780
是不是应该添加到

14:30.780 --> 14:31.780
我们的场景当中去

14:31.780 --> 14:32.780
对吧

14:32.780 --> 14:33.780
那我们就调用

14:33.780 --> 14:34.780
吸引身上的一个

14:34.780 --> 14:35.780
挨的方法

14:35.780 --> 14:36.780
把这个Tube

14:36.780 --> 14:37.780
添加进去

14:37.780 --> 14:38.780
就可以了

14:38.780 --> 14:39.780
那我们现在

14:39.780 --> 14:40.780
已经添加完场景了

14:40.780 --> 14:41.780
接下来

14:41.780 --> 14:42.780
是不是应该

14:42.780 --> 14:43.780
把我们的这些

14:43.780 --> 14:44.780
场景啊

14:44.780 --> 14:45.780
还有这个

14:45.780 --> 14:46.780
相机啊

14:46.780 --> 14:47.780
就渲染到

14:47.780 --> 14:48.780
我的页面上去

14:48.780 --> 14:49.780
对吧

14:49.780 --> 14:50.780
渲染到

14:50.780 --> 14:51.780
我们的渲染器里面去

14:51.780 --> 14:52.780
那怎么来渲染呢

14:52.780 --> 14:53.780
我们就需要调用

14:53.780 --> 14:54.780
Render身上的一个

14:54.780 --> 14:56.780
Render方法

14:56.780 --> 14:57.780
渲染器身上的

14:57.780 --> 14:58.780
一个Render方法

14:58.780 --> 14:59.780
然后把我们的

14:59.780 --> 15:00.780
这个

15:00.780 --> 15:01.780
场景

15:01.780 --> 15:03.780
还有我们的相机

15:03.780 --> 15:04.780
传进去

15:04.780 --> 15:06.780
我们就可以了

15:06.780 --> 15:07.780
我们现在来看一下

15:07.780 --> 15:08.780
好不好实

15:08.780 --> 15:09.780
我们刷新

15:09.780 --> 15:10.780
发现没有

15:10.780 --> 15:11.780
任何的一个效果

15:11.780 --> 15:12.780
看一下

15:12.780 --> 15:13.780
有没有抱错

15:14.780 --> 15:15.780
我们先来看一下

15:15.780 --> 15:16.780
有没有抱错

15:16.780 --> 15:17.780
它还没有抱错

15:17.780 --> 15:18.780
对吧

15:18.780 --> 15:19.780
这是为什么呢

15:19.780 --> 15:20.780
来说一下

15:20.780 --> 15:21.780
这是为什么

15:22.780 --> 15:23.780
这是因为

15:24.780 --> 15:25.780
我们现在

15:25.780 --> 15:26.780
看一下

15:26.780 --> 15:27.780
我们的几颗体

15:27.780 --> 15:28.780
我们几颗体

15:28.780 --> 15:29.780
它大小是

15:29.780 --> 15:30.780
1 1 1

15:30.780 --> 15:31.780
对吧

15:31.780 --> 15:32.780
它的宽高

15:32.780 --> 15:33.780
还有深度

15:33.780 --> 15:34.780
都是1

15:34.780 --> 15:35.780
然后呢

15:35.780 --> 15:36.780
我们的这个

15:36.780 --> 15:37.780
渲染器

15:37.780 --> 15:38.780
我们的渲染器

15:38.780 --> 15:39.780
它可以渲染的

15:39.780 --> 15:40.780
范围是

15:40.780 --> 15:41.780
1到1000

15:41.780 --> 15:42.780
对吧

15:42.780 --> 15:43.780
和我们的物体

15:43.780 --> 15:44.780
它俩的位置

15:44.780 --> 15:45.780
我是不是现在

15:45.780 --> 15:46.780
还没有定义

15:46.780 --> 15:47.780
对吧

15:47.780 --> 15:48.780
那它俩

15:48.780 --> 15:49.780
初始的位置在哪呢

15:49.780 --> 15:50.780
它俩初始的位置

15:50.780 --> 15:51.780
都是在我们

15:51.780 --> 15:52.780
在我们

15:52.780 --> 15:53.780
世界作表系的

15:53.780 --> 15:54.780
原点的一个位置

15:54.780 --> 15:55.780
世界作表系

15:55.780 --> 15:56.780
原点的位置

15:56.780 --> 15:57.780
那我们如何才能

15:57.780 --> 15:58.780
让它俩

15:58.780 --> 15:59.780
错开呢

15:59.780 --> 16:00.780
现在

16:00.780 --> 16:01.780
它俩是不是都在一起

16:01.780 --> 16:02.780
对吧

16:02.780 --> 16:03.780
也就是并排

16:03.780 --> 16:04.780
并排的话

16:04.780 --> 16:05.780
你是不是就看不到

16:05.780 --> 16:06.780
对不对

16:06.780 --> 16:07.780
并排的话看不到

16:07.780 --> 16:08.780
那怎么办呢

16:08.780 --> 16:09.780
我们是不是就需要

16:09.780 --> 16:10.780
给它移动一下

16:10.780 --> 16:11.780
把我们的

16:11.780 --> 16:12.780
相机

16:12.780 --> 16:13.780
给它移动一下

16:13.780 --> 16:14.780
我们调用一下

16:14.780 --> 16:15.780
相机身上的

16:15.780 --> 16:16.780
Position

16:16.780 --> 16:17.780
这个属性

16:17.780 --> 16:18.780
然后给它设置一个Z

16:18.780 --> 16:19.780
给它

16:19.780 --> 16:20.780
改一下

16:20.780 --> 16:21.780
对吧

16:21.780 --> 16:22.780
让它出来

16:22.780 --> 16:23.780
我们这个位置来看一下

16:23.780 --> 16:24.780
好像还是没有

16:24.780 --> 16:25.780
是吧

16:25.780 --> 16:26.780
我们可以看一下

16:26.780 --> 16:27.780
是不是没有渲染上去

16:30.780 --> 16:31.780
又过来了

16:31.780 --> 16:32.780
现在是不是没有渲染

16:32.780 --> 16:33.780
对吧

16:33.780 --> 16:34.780
为什么没有渲染

16:34.780 --> 16:35.780
我们是不是

16:35.780 --> 16:36.780
这个道目元素

16:36.780 --> 16:37.780
还没有给它

16:37.780 --> 16:38.780
进加上去

16:38.780 --> 16:39.780
你可以看一下

16:39.780 --> 16:40.780
我们结构里面

16:40.780 --> 16:41.780
还是没有CarWars

16:41.780 --> 16:42.780
对不对

16:42.780 --> 16:43.780
我们之前在

16:43.780 --> 16:44.780
学WebGL里面的时候

16:44.780 --> 16:46.780
我们在学WebGL的时候

16:46.780 --> 16:47.780
是不是首先

16:47.780 --> 16:48.780
创建了一个CarWars

16:48.780 --> 16:49.780
但是我现在

16:49.780 --> 16:50.780
CarWars还没有

16:50.780 --> 16:51.780
在页面里面

16:51.780 --> 16:52.780
对吧

16:52.780 --> 16:53.780
那这应该怎么办呢

16:53.780 --> 16:55.780
我们这个CarWars

16:55.780 --> 16:56.780
到底有没有创建的

16:56.780 --> 16:57.780
我们这个CarWars

16:57.780 --> 16:59.780
是一定是创建好的

16:59.780 --> 17:01.780
是在我们Render

17:01.780 --> 17:02.780
这里面

17:02.780 --> 17:03.780
创建的

17:03.780 --> 17:04.780
那创建完了

17:04.780 --> 17:05.780
这个元素

17:05.780 --> 17:06.780
是不是需要给它

17:06.780 --> 17:07.780
插入到我们的

17:07.780 --> 17:08.780
页面当中

17:08.780 --> 17:09.780
对吧

17:09.780 --> 17:10.780
给它插入一下

17:10.780 --> 17:11.780
怎么来插入呢

17:11.780 --> 17:12.780
直接

17:12.780 --> 17:13.780
选中

17:13.780 --> 17:14.780
选中

17:14.780 --> 17:15.780
我们要插入的一个位置

17:15.780 --> 17:16.780
Document.body

17:16.780 --> 17:17.780
Document.body

17:17.780 --> 17:18.780
Document.body

17:19.780 --> 17:20.780
Document.body

17:21.780 --> 17:22.780
然后

17:22.780 --> 17:23.780
把我们的道目元素

17:23.780 --> 17:24.780
传进去

17:24.780 --> 17:25.780
对吧

17:25.780 --> 17:26.780
我们Render

17:26.780 --> 17:27.780
然后渲染器里面的

17:27.780 --> 17:28.780
道目元素

17:28.780 --> 17:29.780
那渲染器里面

17:29.780 --> 17:30.780
道目元素在哪呢

17:30.780 --> 17:32.780
在道目Element里面

17:32.780 --> 17:33.780
存在的

17:33.780 --> 17:34.780
这个CarWars

17:34.780 --> 17:36.780
在道目Element里面存在的

17:36.780 --> 17:37.780
所以我们就直接

17:37.780 --> 17:38.780
把它

17:38.780 --> 17:39.780
插进去就可以了

17:39.780 --> 17:40.780
这回我们来看一下

17:40.780 --> 17:41.780
刷新一下

17:41.780 --> 17:42.780
诶 爆了个错

17:42.780 --> 17:43.780
lopendchild

17:43.780 --> 17:44.780
我们看一下

17:44.780 --> 17:45.780
APP

17:46.780 --> 17:48.780
Document.append

17:48.780 --> 17:50.780
CHRD

17:50.780 --> 17:51.780
好像没有什么问题

17:51.780 --> 17:52.780
对吧

17:52.780 --> 17:54.780
body.lopendchild

17:56.780 --> 17:57.780
对吧

17:57.780 --> 17:59.780
这回来刷新一下

17:59.780 --> 18:00.780
Render

18:00.780 --> 18:01.780
Render is now different

18:01.780 --> 18:02.780
Render.row

18:02.780 --> 18:04.780
刷新

18:04.780 --> 18:05.780
诶 这是不是出来了

18:05.780 --> 18:06.780
然后我们这个元素

18:06.780 --> 18:07.780
是不是也就出来了

18:07.780 --> 18:08.780
元素出来了

18:08.780 --> 18:09.780
那接下来是不是

18:09.780 --> 18:10.780
让它运动了

18:10.780 --> 18:11.780
对吧

18:11.780 --> 18:12.780
那如何让它运动呢

18:12.780 --> 18:14.780
我们之前在学WebGL的时候

18:14.780 --> 18:15.780
我们在让它运动

18:15.780 --> 18:16.780
是不是就让它

18:16.780 --> 18:17.780
啊 旋转啊

18:17.780 --> 18:18.780
一绕着某一个肘

18:18.780 --> 18:20.780
进行一个旋转就可以了

18:20.780 --> 18:21.780
对吧

18:21.780 --> 18:22.780
那我们那个时候

18:22.780 --> 18:23.780
在做旋转的时候

18:23.780 --> 18:24.780
是自己

18:24.780 --> 18:26.780
自己去写这个

18:26.780 --> 18:27.780
嗯 矩阵

18:27.780 --> 18:28.780
对吧 自己写矩阵

18:28.780 --> 18:30.780
然后去写矩阵的一个成绩

18:30.780 --> 18:31.780
对吧

18:31.780 --> 18:33.780
但到了Sure.js里面的时候

18:33.780 --> 18:34.780
啊

18:34.780 --> 18:35.780
它已经把我们的

18:35.780 --> 18:36.780
这些旋转啊

18:36.780 --> 18:37.780
还有评仪啊

18:37.780 --> 18:38.780
这些变换

18:38.780 --> 18:40.780
它都给你进行一些封装了

18:40.780 --> 18:41.780
我们只需要

18:41.780 --> 18:42.780
调用先安的方法

18:42.780 --> 18:43.780
就可以了

18:43.780 --> 18:44.780
那我们这个

18:44.780 --> 18:45.780
怎么来调用

18:45.780 --> 18:46.780
调用什么方法呢

18:46.780 --> 18:47.780
来如何调用呢

18:47.780 --> 18:49.780
我们现在是不是就希望

18:49.780 --> 18:50.780
它进行一个旋转

18:50.780 --> 18:51.780
那旋转的话

18:51.780 --> 18:52.780
怎么来让一个物体

18:52.780 --> 18:53.780
进行一个运动呢

18:53.780 --> 18:55.780
我们之前在学WebGL的时候

18:55.780 --> 18:56.780
是不是就是啊

18:56.780 --> 18:58.780
不断的让它去改变

18:58.780 --> 19:00.780
某一个直

19:00.780 --> 19:01.780
对不对

19:01.780 --> 19:02.780
改变某一个直

19:02.780 --> 19:03.780
那我们也是可以给它

19:03.780 --> 19:04.780
改变某一个角度

19:04.780 --> 19:05.780
对不对

19:06.780 --> 19:08.780
延着X轴改变角度

19:08.780 --> 19:09.780
延着Y轴改变角度

19:09.780 --> 19:11.780
还要延着Z轴改变角度

19:11.780 --> 19:12.780
我就让它动一下就可以

19:12.780 --> 19:13.780
对吧

19:13.780 --> 19:14.780
然后就不断的吧

19:14.780 --> 19:15.780
对吧

19:15.780 --> 19:16.780
时刻的去改变

19:16.780 --> 19:18.780
那我们就来一个函数

19:18.780 --> 19:20.780
来一个运动的一个函数

19:20.780 --> 19:21.780
按在那边请

19:22.780 --> 19:23.780
运动的一个函数

19:23.780 --> 19:24.780
这个函数里面呢

19:24.780 --> 19:26.780
我们就需要让它运动

19:26.780 --> 19:27.780
对吧

19:27.780 --> 19:28.780
那运动的话

19:28.780 --> 19:29.780
我们应该操作谁呢

19:29.780 --> 19:30.780
我们应该操作的是

19:30.780 --> 19:31.780
最终

19:31.780 --> 19:32.780
这个立方体

19:32.780 --> 19:33.780
对吧

19:33.780 --> 19:34.780
让立方体进行一个运动

19:34.780 --> 19:36.780
那我们就可以操作这个Cube

19:36.780 --> 19:38.780
那Cube我们可以打印一下这个Cube

19:38.780 --> 19:40.780
大家可以打印一下这个Cube

19:40.780 --> 19:42.780
可以看一下Cube都有什么东西

19:42.780 --> 19:43.780
它里面

19:43.780 --> 19:46.780
这个对象里面都有哪些属性

19:46.780 --> 19:50.220
来我们刷新一下

19:50.220 --> 19:51.220
打印了对吧

19:51.220 --> 19:52.220
我们可以打开

19:52.220 --> 19:53.220
打开之后

19:53.220 --> 19:54.220
我们看一下

19:54.220 --> 19:56.220
这里面有没有旋转的

19:56.220 --> 19:57.220
一些直呢

19:57.220 --> 19:59.220
我们发现有个Rotation

19:59.220 --> 20:00.220
对吧

20:00.220 --> 20:01.220
那这个Rotation

20:01.220 --> 20:03.220
是不是在我们

20:03.220 --> 20:05.220
CRS里面有一个动画

20:05.220 --> 20:06.220
对吧

20:06.220 --> 20:07.220
不是动画

20:07.220 --> 20:08.220
有一个旋转变换

20:08.220 --> 20:09.220
对不对

20:09.220 --> 20:10.220
它就叫Rotation

20:10.220 --> 20:11.220
对不对

20:11.220 --> 20:12.220
那我们这个Rotation

20:12.220 --> 20:14.220
它也是一个旋转的一个意思

20:14.220 --> 20:15.220
然后你可以发现

20:15.220 --> 20:16.220
它下面有这个X,Y,Z

20:16.220 --> 20:17.220
对吧

20:17.220 --> 20:18.220
X,Y,Z

20:18.220 --> 20:19.220
那这X,Y,Z

20:19.220 --> 20:21.220
代表的就是我们这个

20:21.220 --> 20:22.220
沿着X转转角度

20:22.220 --> 20:24.220
沿着Y转转角度

20:24.220 --> 20:26.220
沿着Z转转的一个角度

20:26.220 --> 20:27.220
可以吧

20:27.220 --> 20:28.220
它是一个弧度

20:28.220 --> 20:30.220
它是一个弧度值的一个数

20:30.220 --> 20:31.220
那我们怎么去

20:31.220 --> 20:33.220
让它进行一个移动呢

20:33.220 --> 20:35.220
我是不是就直接动态的改变

20:35.220 --> 20:37.220
Rotation下面的

20:37.220 --> 20:39.220
每个值就行了对吧

20:39.220 --> 20:40.220
Rot,Ti,1

20:40.220 --> 20:41.220
对吧

20:41.220 --> 20:42.220
Rotation

20:42.220 --> 20:43.220
第二

20:43.220 --> 20:44.220
那我先让它沿着X转

20:44.220 --> 20:45.220
可以吧

20:45.220 --> 20:47.220
我每次都让它加0.1

20:47.220 --> 20:48.220
可以吧

20:48.220 --> 20:49.220
加点点1

20:49.220 --> 20:51.220
然后让它不断的进行一个旋转

20:51.220 --> 20:52.220
对吧

20:52.220 --> 20:53.220
当我每次改完了之后

20:53.220 --> 20:54.220
是不是还需要渲染一下

20:54.220 --> 20:55.220
对不对

20:55.220 --> 20:57.220
所以把渲染放在这里

20:57.220 --> 20:58.220
可以吧

20:58.220 --> 20:59.220
然后

20:59.220 --> 21:01.220
我是不是要时刻的去触发这样的

21:01.220 --> 21:02.220
一个函数

21:02.220 --> 21:04.220
时刻的触发这个函数的话

21:04.220 --> 21:05.220
那我们就需要

21:05.220 --> 21:07.220
执行一个

21:07.220 --> 21:09.220
关键针动画对吧

21:09.220 --> 21:10.220
把这个animate

21:10.220 --> 21:12.220
传进去

21:12.220 --> 21:13.220
对不对

21:13.220 --> 21:15.220
关键针动画

21:15.220 --> 21:16.220
然后我们现在来看一下

21:16.220 --> 21:17.220
它是不是就动起来了

21:17.220 --> 21:18.220
对吧

21:18.220 --> 21:19.220
它现在动起来吧

21:19.220 --> 21:20.220
那我们接下来

21:20.220 --> 21:21.220
我们最终要实现

21:21.220 --> 21:22.220
这样的一个效果对不对

21:22.220 --> 21:23.220
这样的一个效果

21:23.220 --> 21:25.220
你发现它是

21:25.220 --> 21:26.220
绕着

21:26.220 --> 21:29.220
X和Y轴那个

21:29.220 --> 21:30.220
那个

21:30.220 --> 21:31.220
写

21:31.220 --> 21:33.220
写线

21:33.220 --> 21:35.220
进行一个

21:35.220 --> 21:37.220
X轴和Y轴

21:37.220 --> 21:38.220
夹角的一个

21:38.220 --> 21:39.220
评分线

21:39.220 --> 21:40.220
进行旋转的对不对

21:40.220 --> 21:42.220
那我们就可以给它再加

21:42.220 --> 21:43.220
对不对

21:43.220 --> 21:44.220
我让它的Y轴

21:44.220 --> 21:45.220
也进行一个旋转

21:45.220 --> 21:47.220
点Rotation

21:47.220 --> 21:48.220
点Y

21:48.220 --> 21:49.220
也给它

21:49.220 --> 21:51.220
加到0.1

21:51.220 --> 21:52.220
我们再来看一下

21:52.220 --> 21:53.220
刷新一下

21:53.220 --> 21:54.220
不是这个

21:54.220 --> 21:55.220
刷新一下

21:55.220 --> 21:56.220
这回看一下

21:56.220 --> 21:57.220
对吧

21:57.220 --> 21:58.220
它转的有点快

21:58.220 --> 21:59.220
是不是

21:59.220 --> 22:00.220
让它慢一点

22:00.220 --> 22:01.220
加的小一点

22:01.220 --> 22:02.220
少一点

22:02.220 --> 22:03.220
是不是可以

22:03.220 --> 22:04.220
刷新一下

22:04.220 --> 22:05.220
是不是就可以了

22:05.220 --> 22:07.220
一样的吧

22:07.220 --> 22:08.220
对不对

22:08.220 --> 22:10.220
这是不是可以了

22:10.220 --> 22:12.220
现在它是不是就旋转了

22:12.220 --> 22:13.220
那跟我这个效果

22:13.220 --> 22:14.220
是不是差不多了

22:14.220 --> 22:15.220
然后有同学会发现

22:15.220 --> 22:16.220
我说你这也怎么这么大呀

22:16.220 --> 22:18.220
它这怎么这么小啊

22:18.220 --> 22:19.220
这是为什么呢

22:19.220 --> 22:20.220
我们可以思想一下

22:20.220 --> 22:21.220
我们的相机

22:21.220 --> 22:23.220
在拍摄一个物体的时候

22:23.220 --> 22:25.220
如果我离它近的话

22:25.220 --> 22:26.220
它是不是就大

22:26.220 --> 22:27.220
如果离它远呢

22:27.220 --> 22:28.220
它是不是就小

22:28.220 --> 22:29.220
对吧

22:29.220 --> 22:30.220
我想给它改小一点

22:30.220 --> 22:31.220
怎么办

22:31.220 --> 22:32.220
我是不是就让相机

22:32.220 --> 22:33.220
远离我的元素

22:33.220 --> 22:34.220
对吧

22:34.220 --> 22:35.220
远离我的元素

22:35.220 --> 22:36.220
是不是就可以了

22:36.220 --> 22:37.220
我给它改成10

22:37.220 --> 22:38.220
是不是感觉

22:38.220 --> 22:39.220
这样的话

22:39.220 --> 22:40.220
差不多了吧

22:40.220 --> 22:41.220
对不对

22:41.220 --> 22:42.220
你看

22:42.220 --> 22:44.220
它是不是就一样了

22:44.220 --> 22:45.220
能跟上吧

22:45.220 --> 22:46.220
那这就是我们

22:46.220 --> 22:47.220
第一个

22:47.220 --> 22:49.220
3.js的一个程序

22:49.220 --> 22:50.220
然后在这里

22:50.220 --> 22:52.220
我们用到了一些

22:52.220 --> 22:53.220
方法

22:53.220 --> 22:54.220
对不对

22:54.220 --> 22:56.220
3.js里面的方法

22:56.220 --> 22:58.220
都有哪些方法呢

22:58.220 --> 22:59.220
我们下一堂课

22:59.220 --> 23:00.220
来

23:00.220 --> 23:01.220
详细的来说

23:01.220 --> 23:02.220
那我们这堂课

23:02.220 --> 23:03.220
先来过一下

23:03.220 --> 23:04.220
第一个方法

23:04.220 --> 23:05.220
就是这个

23:05.220 --> 23:06.220
创建场景

23:06.220 --> 23:07.220
没有什么多说的

23:07.220 --> 23:08.220
就创建一个空的

23:08.220 --> 23:09.220
一个场景

23:09.220 --> 23:10.220
对不对

23:10.220 --> 23:11.220
然后第二个

23:11.220 --> 23:12.220
是我们创建

23:12.220 --> 23:14.220
相机

23:14.220 --> 23:15.220
然后相机

23:15.220 --> 23:16.220
我之前说

23:16.220 --> 23:17.220
分成很多种

23:17.220 --> 23:18.220
对吧

23:18.220 --> 23:19.220
分成两种

23:19.220 --> 23:21.220
一个是元净相机

23:23.220 --> 23:24.220
元净

23:26.220 --> 23:27.220
相机

23:27.220 --> 23:28.220
还有一个

23:28.220 --> 23:29.220
和

23:29.220 --> 23:30.220
正交

23:31.220 --> 23:32.220
正交

23:33.220 --> 23:34.220
相机

23:34.220 --> 23:35.220
对吧

23:35.220 --> 23:36.220
那这两个相机

23:36.220 --> 23:38.220
我们下一堂课来说

23:38.220 --> 23:39.220
下一堂课

23:39.220 --> 23:40.220
我们主要就是来说一下

23:40.220 --> 23:41.220
这个

23:41.220 --> 23:42.220
相机这一部分

23:42.220 --> 23:43.220
可以吧

23:43.220 --> 23:44.220
主要来说一下

23:44.220 --> 23:45.220
相机这一部分

23:46.220 --> 23:48.220
那我们再下一堂课

23:48.220 --> 23:49.220
再下一堂课

23:49.220 --> 23:50.220
我们每一堂课

23:50.220 --> 23:51.220
就讲一个

23:51.220 --> 23:52.220
讲一个

23:52.220 --> 23:53.220
这个

23:54.220 --> 23:55.220
每一堂课

23:55.220 --> 23:56.220
我们去讲

23:56.220 --> 23:57.220
一个接口

23:57.220 --> 23:58.220
可以吧

23:58.220 --> 23:59.220
每一堂课讲一个接口

23:59.220 --> 24:00.220
一堂课

24:00.220 --> 24:01.220
大家把一个接口弄明白

24:01.220 --> 24:02.220
好吧

24:02.220 --> 24:03.220
然后再往后

24:03.220 --> 24:04.220
还会讲这个

24:04.220 --> 24:05.220
Renderer

24:05.220 --> 24:06.220
这个渲染器

24:06.220 --> 24:07.220
渲染器

24:07.220 --> 24:08.220
渲染器

24:08.220 --> 24:09.220
这个

24:09.220 --> 24:10.220
渲染器是不是

24:10.220 --> 24:11.220
也有很多个

24:11.220 --> 24:12.220
方法

24:12.220 --> 24:13.220
对吧

24:13.220 --> 24:14.220
很多个方法

24:14.220 --> 24:15.220
我们都会

24:15.220 --> 24:16.220
带着大家来说的

24:16.220 --> 24:17.220
可以吧

24:17.220 --> 24:18.220
然后还有什么

24:18.220 --> 24:19.220
下面这个Size

24:19.220 --> 24:20.220
就不用说了

24:20.220 --> 24:21.220
对吧

24:21.220 --> 24:22.220
就是设置一个宽高

24:22.220 --> 24:23.220
宽高

24:23.220 --> 24:24.220
那这个Size

24:24.220 --> 24:25.220
这个方法

24:25.220 --> 24:26.220
我们再

24:27.220 --> 24:28.220
再讲Renderer

24:28.220 --> 24:29.220
的时候

24:29.220 --> 24:30.220
还是会带着大家来说

24:30.220 --> 24:31.220
然后后面就是

24:31.220 --> 24:32.220
jimotray了

24:32.220 --> 24:33.220
对不对

24:33.220 --> 24:34.220
是一个几颗体

24:34.220 --> 24:35.220
这是几颗体

24:36.220 --> 24:37.220
几颗体的一个部分

24:37.220 --> 24:38.220
我们一个一个来说

24:38.220 --> 24:39.220
然后几颗体完了之后

24:39.220 --> 24:40.220
我们再来说

24:40.220 --> 24:41.220
这个

24:41.220 --> 24:42.220
材质

24:42.220 --> 24:43.220
可以吧

24:43.220 --> 24:44.220
材质

24:47.230 --> 24:48.230
材质的问题

24:48.230 --> 24:49.230
好吧

24:49.230 --> 24:50.230
那好

24:50.230 --> 24:51.230
本堂课

24:51.230 --> 24:52.230
我们就先到这

24:52.230 --> 24:53.230
咱们下一堂课

