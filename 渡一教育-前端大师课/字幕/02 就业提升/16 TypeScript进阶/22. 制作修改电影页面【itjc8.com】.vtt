WEBVTT

00:00.620 --> 00:03.440
大家好 我是杜亦教育 微博全程讲师 元静

00:04.200 --> 00:09.840
好了 那么我们这里呢 就还剩下最后一个功能了 对吧 就是修改电影

00:10.600 --> 00:13.420
修改电影呢 我们和添加电影一样啊

00:13.940 --> 00:18.800
仍然是使用这个逐渐 就是movie form这个逐渐 这个逐渐的本来就是做了通用的

00:19.060 --> 00:21.620
可以在添加页面用也可以在修改页面用

00:22.380 --> 00:23.920
那大家想这么一个问题啊

00:24.420 --> 00:27.760
就是我做添加电影这个页面的时候呢

00:28.020 --> 00:30.320
我只给了这个逐渐一个属性

00:30.520 --> 00:32.120
就是on-submit这个属性

00:32.620 --> 00:38.000
当我们点击提交的时候完成了各种各样验证之后呢

00:38.260 --> 00:42.360
要怎么处理啊 比方说要发送什么阿加克斯请求啊之类的

00:42.620 --> 00:44.400
处理啊 要怎么去处理

00:44.660 --> 00:45.680
交给他来完成

00:46.700 --> 00:48.740
如果是在修改页面的话

00:49.000 --> 00:50.800
除了要传递这个东西之外

00:51.060 --> 00:52.840
还需不需要传递其他东西

00:53.360 --> 00:54.640
大家宣想这么一个问题

00:55.400 --> 00:56.940
就是我要修改电影

00:57.200 --> 01:00.280
那我除了传递这个这个毁掉函数之外

01:00.520 --> 01:02.320
我还需不需要传递其他东西

01:03.600 --> 01:04.880
肯定是需要了对吧

01:05.140 --> 01:06.920
因为你要修改电影的话

01:07.180 --> 01:09.240
那你肯定要把一个电影对象给他呀

01:09.500 --> 01:11.280
就是这个电影有哪些数据

01:11.540 --> 01:13.840
他要在这个表单里面默认显示出来

01:14.100 --> 01:17.160
你看添加电影的话他这里没有显示任何东西

01:17.420 --> 01:18.960
但是如果你做修改电影

01:19.220 --> 01:19.980
你点编辑

01:20.500 --> 01:23.060
传了一个电影id过去要显示那个表单

01:23.320 --> 01:26.140
那么这个表单里面呢会自动的就填充一些数据

01:26.380 --> 01:29.720
就是当前电影的所有的数据呢要把填充进去

01:30.600 --> 01:34.280
所以说呢做修改电影这块我们还需要传递另外一个属性

01:34.800 --> 01:38.120
于是呢我们这个组件呢会涉及到一些改动

01:38.880 --> 01:41.440
啊这个组件他是不是要加一个属性啊

01:41.960 --> 01:46.080
这个组件里边呢我们之前啊只做了这么两个属性啊一个缝

01:47.080 --> 01:47.920
一个on sabre

01:48.360 --> 01:53.240
啊其他的一些属性呢都是乃至于啊就这个缝这个属性呢是乃至于注入的对吧

01:53.480 --> 01:56.560
还有这个路由里边的属性呢他也是乃至于注入的

01:56.760 --> 01:59.840
那么现在呢我们有要应付修改的场景

02:00.240 --> 02:03.600
所以说呢我们这一块呢还需要加一个属性啊

02:04.400 --> 02:07.800
是什么呢就是母位对象啊母位对象

02:08.520 --> 02:09.840
啊内情当然就是mv

02:11.280 --> 02:13.720
你要给我传递一个母位对象进来

02:14.520 --> 02:19.360
啊这母位对象进来过后呢我要做啥呢我就是把它显示到这个表单里面

02:20.240 --> 02:24.680
当然这个属性离家的话这边就抱错啊他说你这里没有少了一个属性

02:25.440 --> 02:26.800
对吧他是添加页面的话

02:27.560 --> 02:28.960
确实他不需要这个属性

02:29.720 --> 02:33.920
因此呢这个属性呢应该是什么应该是一个可选的啊

02:34.320 --> 02:38.600
如果你没有传递的话那我那我就不显示啊不显示个默认的值

02:39.080 --> 02:41.520
如果你传递了的话我就显示默认值

02:42.040 --> 02:44.760
因此呢他会有这么一个属性需要你传递

02:45.800 --> 02:50.560
好了我们先把这个组件呢改造成他的属性结构啊改造成这个样子

02:51.040 --> 02:57.400
改到之后呢我们再来做这个修改页面啊先把这个页面给他做了啊以后呢我们再说组件里边还有一些变化

02:58.320 --> 03:06.560
好页面呢Edits啊母位这个页面啊那么做法呢跟添加页面差不多对吧啊这里呢你看

03:07.480 --> 03:10.720
我这里呢之前啊在修改页面里边使用了这个东西

03:11.440 --> 03:12.560
这个东西我们在做那个

03:13.360 --> 03:20.480
表单组件的时候是不是也做过对不对这个表示上呢路由的组件属性他里边给你注入了一些什么history啊

03:21.500 --> 03:22.520
什么啊

03:23.280 --> 03:32.800
March啊这东西啊给你注入进来了那么接下来呢我就在这个主件啊这个Edits move这个页面里边呢去使用这个movi foam这个组件

03:33.280 --> 03:37.200
但是使用的方式呢跟这个这边差不多啊我只把这边复制一下啊

03:37.880 --> 03:38.840
把这边复制一下

03:39.520 --> 03:45.680
然后这里直接争过来啊 因为差不多的该导入的倒入一下啊该倒入的把倒入一下

03:46.160 --> 03:47.120
这里倒入一下

03:48.320 --> 03:50.400
好我们首先来搞定这个属性啊

03:50.560 --> 03:56.120
这个属性是一个回调函数

03:56.120 --> 03:59.800
当我们点击提交的时候要做什么事情

03:59.800 --> 04:02.560
现在我们现在到了修改的页面

04:02.560 --> 04:06.160
修改页面的时候提交的时候要做啥了

04:06.160 --> 04:08.560
肯定就是发送阿加克斯请求

04:08.560 --> 04:10.240
那么发送阿加克斯请求的话

04:10.240 --> 04:11.600
这里不再是add了

04:11.600 --> 04:15.520
应该是什么addit修改

04:15.520 --> 04:18.360
然后这里边它会让你传两个东西

04:18.560 --> 04:19.880
一个东西是add

04:19.880 --> 04:23.520
一个东西是修改之后的母位对象

04:23.520 --> 04:25.440
修改之后的母位对象

04:25.440 --> 04:26.080
好了

04:26.080 --> 04:28.840
那么add的话

04:28.840 --> 04:29.800
到这里

04:29.800 --> 04:32.280
这个add我们可以直接使用进来

04:32.280 --> 04:33.880
因为这个注入了属性了对吧

04:33.880 --> 04:35.840
我们可以使用js props

04:35.840 --> 04:38.120
然后里边的什么march

04:38.120 --> 04:40.560
然后params.add

04:40.560 --> 04:42.200
这是我们的add对不对

04:42.200 --> 04:43.320
然后第二个属性

04:43.320 --> 04:45.880
第二个参数就是一个电影对象

04:45.880 --> 04:47.320
电影对象的话它已经给力了

04:47.360 --> 04:48.640
你直接传定今天就行了

04:48.640 --> 04:51.720
它通过这个回调函数的参数已经给力了

04:51.720 --> 04:54.120
修改之后的电影对象你给它就行了

04:54.120 --> 04:55.240
那就完了对吧

04:55.240 --> 04:56.280
还有啥了

04:56.280 --> 04:57.560
就没啥了

04:57.560 --> 04:58.400
没啥了

04:58.400 --> 05:00.440
所以说这里就已经搞定了

05:00.440 --> 05:02.160
就已经搞定了

05:02.160 --> 05:03.360
另外一个属性

05:03.360 --> 05:05.680
这是回调函数能搞定了

05:05.680 --> 05:09.680
然后另外一个属性是move

05:09.680 --> 05:11.400
这个是不是要传递

05:11.400 --> 05:13.040
这个属性它需要传递的

05:13.040 --> 05:15.280
因为添加页面是不需要传递的

05:15.320 --> 05:17.320
但是这里是不是需要传递

05:17.320 --> 05:18.880
这里传递的时候

05:18.880 --> 05:19.960
我传递谁呢

05:19.960 --> 05:21.600
我传递啥呢

05:21.600 --> 05:24.440
那么这个时候因为以前咋做的

05:24.440 --> 05:26.760
其实这里以前咋做现在咋做

05:26.760 --> 05:27.960
以前我们会咋做呢

05:27.960 --> 05:31.920
以前我们是做一个state出来

05:31.920 --> 05:32.880
一个状态

05:32.880 --> 05:34.680
因为现在我们没有在仓库里边

05:34.680 --> 05:37.520
这个修改的数据没有在仓库里边

05:37.520 --> 05:39.720
因此我们就在state里边来

05:39.720 --> 05:41.720
state里边

05:41.720 --> 05:43.880
这里我们写这么一个

05:43.880 --> 05:45.880
就写一个move

05:45.880 --> 05:46.960
内想就是

05:46.960 --> 05:47.760
内想是啥呢

05:47.760 --> 05:49.760
就是一个move

05:49.760 --> 05:52.760
就是一个move

05:52.760 --> 05:53.840
这里不是内想

05:53.840 --> 05:54.960
这里不是内想

05:54.960 --> 05:56.720
move默认值为

05:56.720 --> 05:57.840
默认值为什么呢

05:57.840 --> 05:58.960
为安迪范

05:58.960 --> 06:01.080
比方说默认值为安迪范

06:01.080 --> 06:02.360
一开始没有

06:02.360 --> 06:05.160
那么这里我们给这个state

06:05.160 --> 06:08.480
把这个state的move数据就传过来

06:08.480 --> 06:10.360
当然这个不能永远是安迪范

06:10.360 --> 06:11.440
不能永远是安迪范

06:11.440 --> 06:13.320
它从会复职的

06:13.440 --> 06:14.280
那么这个时候

06:14.280 --> 06:17.280
我需要对这个state的内想进行一下约束

06:17.280 --> 06:18.680
为什么要进行约束呢

06:18.680 --> 06:20.160
就是有了state之后

06:20.160 --> 06:21.480
我们到时候肯定会使用

06:21.480 --> 06:23.760
state state

06:23.760 --> 06:25.400
来改变它的状态对吧

06:25.400 --> 06:26.760
那改变状态的时候

06:26.760 --> 06:28.400
它现在没有办法提示里

06:28.400 --> 06:29.920
这里边状态的内想是啥

06:29.920 --> 06:30.720
它不知道

06:30.720 --> 06:31.920
它不知道状态的内想是啥

06:31.920 --> 06:33.360
它没办法提示里

06:33.360 --> 06:34.320
比如我们这里写个move

06:34.320 --> 06:35.440
你看一下

06:35.440 --> 06:36.120
有提示吗

06:36.120 --> 06:37.160
没有提示

06:37.160 --> 06:38.480
它不知道状态是啥

06:38.480 --> 06:40.120
因此我们需要约束一下

06:40.120 --> 06:41.320
状态的内想

06:41.320 --> 06:44.680
我们之前在技术部分是不是也讲过

06:44.680 --> 06:45.680
也讲过的

06:45.680 --> 06:48.200
这个component里边它有两个犯行

06:48.200 --> 06:48.800
一个犯行了

06:48.800 --> 06:50.720
第一个犯行了表示属性的内想

06:50.720 --> 06:53.120
就这一块属性的内想

06:53.120 --> 06:54.200
然后还有一个内想

06:54.200 --> 06:57.600
第二个是状态的内想

06:57.600 --> 06:58.040
好了

06:58.040 --> 07:00.120
那么这里来约束一下

07:00.120 --> 07:01.360
约束一下

07:01.360 --> 07:03.520
interface

07:03.520 --> 07:06.160
这里是edits page state

07:07.960 --> 07:08.840
那这里面有啥呢

07:08.840 --> 07:09.600
就一个属性

07:09.600 --> 07:10.560
move

07:10.560 --> 07:14.720
内想是move

07:14.720 --> 07:16.600
有这么个内想

07:16.600 --> 07:17.680
它一开始是可选的

07:17.680 --> 07:18.920
它是可选的

07:18.920 --> 07:19.880
为什么可选的

07:19.880 --> 07:20.960
因为这个属性

07:20.960 --> 07:22.960
它是一个一步读取的过程

07:22.960 --> 07:24.480
它一开始是undefend

07:24.480 --> 07:26.760
所以它把它做成可选的

07:26.760 --> 07:29.920
然后把内想约束放这儿

07:29.920 --> 07:31.400
直接来

07:31.400 --> 07:34.200
那么有了这里的内想约束之后

07:34.200 --> 07:34.960
我们这里你看

07:34.960 --> 07:37.040
就能获得智能提示了move

07:37.040 --> 07:38.440
你看

07:38.480 --> 07:39.440
这样子的智能提示

07:39.440 --> 07:40.880
就可以获取了

07:40.880 --> 07:43.600
那么这是关于内想约束

07:43.600 --> 07:44.960
然后这里约束过程

07:44.960 --> 07:45.960
你还得做一件事

07:45.960 --> 07:49.640
就是把这里约束一下

07:49.640 --> 07:51.880
就防止这里写默认值的时候

07:51.880 --> 07:54.200
写State默认值的时候

07:54.200 --> 07:55.040
把这里写错

07:55.040 --> 07:55.880
把防止写错

07:55.880 --> 07:57.120
你就加这么一行呆

07:57.120 --> 07:58.080
就可以防止写错了

07:58.080 --> 07:58.680
比什么不好

07:58.680 --> 07:59.880
比方说这里写错了

07:59.880 --> 08:01.400
那是马上就爆错

08:01.400 --> 08:02.400
好吧

08:02.400 --> 08:05.480
那么把状态约束了一下

08:05.480 --> 08:05.720
好

08:05.720 --> 08:08.160
接下来就是状态的改变了

08:08.200 --> 08:09.680
状态的改变

08:09.680 --> 08:11.360
状态什么时候改变了

08:11.360 --> 08:12.240
我们可以认为

08:12.240 --> 08:14.200
这个页面加载完成过后

08:14.200 --> 08:18.440
我要从用阿迦克斯去读取电影数据

08:18.440 --> 08:19.760
读取了之后

08:19.760 --> 08:21.080
读取了之后

08:21.080 --> 08:22.880
我把这个move给它复始

08:22.880 --> 08:23.120
好

08:23.120 --> 08:24.920
这里我们可以写个生命周期函数

08:24.920 --> 08:26.560
component的demont

08:28.160 --> 08:29.960
当页面加载完成之后

08:29.960 --> 08:31.520
当页面的组件

08:31.520 --> 08:34.760
组件嵌入到这个网页之后

08:34.760 --> 08:35.840
我们要做一件事

08:35.840 --> 08:36.760
什么事呢

08:36.840 --> 08:37.840
这肯定是个异部的

08:37.840 --> 08:38.760
对吧

08:38.760 --> 08:41.520
我们要去用mov service

08:41.520 --> 08:44.240
进行阿迦克斯请求

08:44.240 --> 08:44.840
请求谁呢

08:44.840 --> 08:47.080
就是get

08:48.480 --> 08:49.600
mov白id

08:49.600 --> 08:50.680
把id传进去

08:50.680 --> 08:52.120
id来自于

08:52.120 --> 08:53.680
属相march

08:54.760 --> 08:55.760
params

08:55.760 --> 08:56.800
白d

08:56.800 --> 08:58.360
把id传进去

08:58.360 --> 09:00.400
然后就得到一个电影对象

09:00.400 --> 09:03.120
返回的是一个weight

09:03.120 --> 09:05.640
返回了一个响应结果

09:06.600 --> 09:07.160
响应结果

09:09.040 --> 09:10.560
这个响应结果里面我们看一下

09:10.560 --> 09:11.920
我们可能现在忘了

09:11.920 --> 09:13.280
他有没有可能爆错

09:13.280 --> 09:13.920
有没有可能爆错

09:13.920 --> 09:15.560
我们指着他看一下

09:15.560 --> 09:17.000
返回的结果呢

09:17.000 --> 09:18.000
他没有爆错

09:18.000 --> 09:20.000
一定是一个正常的响应结果

09:20.000 --> 09:20.880
这个返回的结果

09:20.880 --> 09:21.880
要么是now

09:21.880 --> 09:23.560
要么是move对象

09:23.560 --> 09:25.360
好

09:25.360 --> 09:27.000
我们判断一下

09:27.000 --> 09:27.760
如果

09:27.760 --> 09:29.240
wisp.data

09:29.240 --> 09:30.600
如果有值

09:30.600 --> 09:31.640
它不是now

09:31.640 --> 09:32.560
有值

09:32.560 --> 09:33.680
那么有值的情况下

09:33.680 --> 09:35.520
你看一下这里有类型保护

09:35.560 --> 09:37.280
这里有类型保护

09:37.280 --> 09:38.560
那么现在

09:38.560 --> 09:39.800
得到了data

09:39.800 --> 09:41.600
就一定是move了

09:41.600 --> 09:43.160
因为有类型保护

09:43.160 --> 09:43.680
好

09:43.680 --> 09:45.080
那么我就把这个move对象

09:45.080 --> 09:46.680
直接复制到State里面去

09:46.680 --> 09:48.360
这里直接复制完事了

09:48.360 --> 09:49.960
这里非常非常简单

09:49.960 --> 09:53.400
move对象直接复制为wisp.data

09:53.400 --> 09:56.280
完事

09:56.280 --> 09:57.400
通过这样的方式

09:57.400 --> 09:58.480
在这个页面里面

09:58.480 --> 10:00.760
就是把这个总之目的

10:00.760 --> 10:02.040
就是把这个数据

10:02.040 --> 10:03.320
给它复制过去

10:03.320 --> 10:05.480
把这个数据给它复制过去

10:05.760 --> 10:06.800
好

10:06.800 --> 10:09.720
这样子写完了之后

10:09.720 --> 10:11.360
那么这边其实是搞定的

10:11.360 --> 10:12.440
已经搞定了

10:12.440 --> 10:14.000
那么到了这边来

10:14.000 --> 10:15.280
到了这边来

10:15.280 --> 10:17.160
move封你这边来

10:17.160 --> 10:18.840
到了这边来的话

10:18.840 --> 10:21.240
它里边

10:21.240 --> 10:23.800
我就要根据你传辑的数据

10:23.800 --> 10:27.720
传辑的move数据

10:27.720 --> 10:29.360
来显示这个表达

10:29.360 --> 10:32.000
现在我们目前还看不到效果

10:32.000 --> 10:33.520
目前我们点编辑的时候

10:33.520 --> 10:34.880
倒是能跳过去

10:34.960 --> 10:36.320
我们看一下也没有爆错

10:36.320 --> 10:37.840
数据肯定是传过去了

10:37.840 --> 10:39.760
实际上你这里通过

10:39.760 --> 10:42.920
rex调试工具也可以看得清清楚

10:42.920 --> 10:44.480
这数据肯定是传过去了

10:44.480 --> 10:46.240
我们看一下

10:46.240 --> 10:48.600
这里这个表达

10:48.600 --> 10:50.440
这个缝

10:50.440 --> 10:52.160
在调试工具里边

10:52.160 --> 10:53.000
调试工具里边

10:53.000 --> 10:55.080
看一下整个表达

10:55.080 --> 10:57.080
这个表达切入

10:57.080 --> 11:00.120
找到这

11:00.120 --> 11:01.120
找到这

11:01.120 --> 11:03.800
你看move对象是不是已经传过去了

11:03.880 --> 11:06.160
这个move对象已经传过去了

11:06.160 --> 11:07.920
也就是说数据肯定是传过去了

11:07.920 --> 11:08.960
你不用担心

11:08.960 --> 11:10.040
传过去之后

11:10.040 --> 11:11.560
我们现在要搞定的是咋了

11:11.560 --> 11:12.600
搞定的是

11:12.600 --> 11:15.600
这边如何把这个默认值显示出来

11:15.600 --> 11:16.920
要显示这一块的默认值

11:16.920 --> 11:19.320
你肯定要去参考官方文档

11:19.320 --> 11:21.040
表达官方文档

11:21.040 --> 11:23.520
官方文档里边其实也说到了

11:23.520 --> 11:26.280
这个传默认值怎么传定呢

11:26.280 --> 11:27.800
需要在这

11:27.800 --> 11:29.080
需要在这

11:29.080 --> 11:31.600
这个form里边有一个create寒数

11:31.600 --> 11:32.680
有一个create寒数

11:32.720 --> 11:33.880
你看

11:33.880 --> 11:35.800
它是一个高阶组件

11:35.800 --> 11:36.720
配置好了之后

11:36.720 --> 11:38.640
做高阶组件就是formcreate

11:38.640 --> 11:40.120
看这个寒数

11:40.120 --> 11:41.840
这个寒数里边是可以传配置的

11:41.840 --> 11:43.320
这里可以传配置的

11:43.320 --> 11:44.400
这里边

11:44.400 --> 11:46.080
这里边有哪些配置呢

11:46.080 --> 11:47.480
其中一个配置

11:47.480 --> 11:49.480
他就说到了create的配置

11:49.480 --> 11:51.120
OB型式

11:51.120 --> 11:53.640
这个配置里面有个配置叫做map

11:53.640 --> 11:56.040
probs to fields

11:56.040 --> 11:58.840
就是音色属性道

11:58.840 --> 12:02.040
到表单的

12:02.080 --> 12:03.120
字端里边

12:03.120 --> 12:04.320
表单域里边

12:04.320 --> 12:07.040
音色属性到表单域里边

12:07.040 --> 12:09.280
所以说你配置这个玩意就行了

12:10.920 --> 12:12.840
那么它是一个寒数

12:12.840 --> 12:14.520
它会把这个属性给你

12:14.520 --> 12:16.200
它会把这个属性传给你

12:16.200 --> 12:18.320
然后你写个寒数

12:18.320 --> 12:19.480
这个属性啥类型呢

12:19.480 --> 12:23.080
这个属性是iphone prop

12:23.080 --> 12:24.520
那么你看一下这个属性

12:24.520 --> 12:25.680
属属些

12:25.680 --> 12:27.560
是不是就是这个组件的类型

12:27.560 --> 12:28.440
组件的属性类型

12:28.440 --> 12:30.600
你看这里写的番型就很好了

12:30.640 --> 12:32.720
它就知道了属性的类型是这个

12:32.720 --> 12:34.560
那么这个属性拿到了之后

12:34.560 --> 12:37.000
我们看可以从属性里面取出啥

12:37.000 --> 12:38.480
是不是可以取出move了

12:38.480 --> 12:39.000
对不对

12:39.000 --> 12:40.440
可以取出move了

12:40.440 --> 12:40.600
好

12:40.600 --> 12:42.480
这个寒数返回啥呢

12:42.480 --> 12:45.200
这个寒数这样子返回

12:45.200 --> 12:47.040
这里返回的是啥呢

12:47.040 --> 12:49.160
返回的是这么一种格式

12:49.160 --> 12:50.560
按照官方文档所说

12:50.560 --> 12:53.600
比方说我要给name这个字端

12:53.600 --> 12:55.360
你看这里面不是一个name字端吗

12:55.360 --> 12:55.960
对吧

12:55.960 --> 12:57.240
就是电影的名称

12:57.240 --> 12:58.360
它对应到这

12:58.360 --> 12:59.600
name这个字端

12:59.640 --> 13:02.680
我要给这个name的字端付一个默认值

13:02.680 --> 13:04.640
那么我就可以这样子写

13:04.640 --> 13:06.120
name这个字端

13:06.120 --> 13:07.080
然后冒号

13:07.080 --> 13:08.320
它的值等于啥呢

13:08.320 --> 13:10.240
它的值不能直接复制

13:10.240 --> 13:11.920
它要使用这种方式

13:11.920 --> 13:13.520
form

13:13.520 --> 13:15.680
你看官方文档里面说到这个问题

13:15.680 --> 13:18.720
要使用form.crease.form.field

13:18.720 --> 13:20.080
来把这个值标记一下

13:21.280 --> 13:22.760
这样子它方便去对应

13:24.040 --> 13:25.800
crease.form.field

13:25.800 --> 13:27.200
来标记一下

13:27.200 --> 13:28.720
那么怎么来标记呢

13:28.800 --> 13:30.600
我们可以看官方文档

13:30.600 --> 13:32.600
看官方文档这里的说法

13:32.600 --> 13:36.840
它说可以用这个东西来标记这个配置

13:36.840 --> 13:37.680
标记的时候

13:37.680 --> 13:39.160
这有个例子

13:39.160 --> 13:40.400
它让你去参考

13:40.400 --> 13:41.880
标记的是咋标记的呢

13:41.880 --> 13:44.000
就是crease.form.field的

13:44.000 --> 13:46.040
然后这里面传一个配置对象

13:46.040 --> 13:47.680
这个对象里面其他的不用管

13:47.680 --> 13:49.960
就是给它value复制就完事了

13:49.960 --> 13:53.840
也就是说这里传一个对象进来

13:53.840 --> 13:55.000
它的value值呢

13:55.000 --> 13:57.640
比方说先水便写

13:57.680 --> 13:59.960
ast 先水便写一个

13:59.960 --> 14:01.120
咱们来看一下

14:01.120 --> 14:01.920
咱们来看一下这边

14:03.120 --> 14:04.840
你看这摸认值就有了

14:04.840 --> 14:06.920
ast就有摸认值了

14:06.920 --> 14:08.440
就这么简单

14:08.440 --> 14:09.320
所以说

14:09.320 --> 14:10.400
那么这边呢

14:10.400 --> 14:12.200
我们怎么来处理呢

14:12.200 --> 14:13.400
具体该怎么处理

14:13.400 --> 14:16.800
那是不是这里有很多地方要判断一下

14:16.800 --> 14:18.040
首先要判断一下

14:18.040 --> 14:19.040
因为它是可选的

14:19.040 --> 14:19.640
对吧

14:19.640 --> 14:21.120
props.form

14:21.120 --> 14:24.360
props.movie有没有值

14:24.360 --> 14:25.480
如果有值的话

14:25.480 --> 14:26.240
我才返回

14:26.280 --> 14:28.360
没有值我就不返回了

14:28.360 --> 14:29.880
没有值我就不返回了

14:29.880 --> 14:31.440
没有值的肯定是做添加

14:31.440 --> 14:32.000
对吧

14:32.000 --> 14:33.680
添加的话我就不返回了

14:33.680 --> 14:35.200
不返回任何摸认值

14:35.200 --> 14:36.640
如果有值的情况下

14:36.640 --> 14:38.000
我就返回一个东西

14:38.000 --> 14:39.640
返回一些摸认值

14:39.640 --> 14:41.040
我这里返回一个name

14:41.040 --> 14:42.040
那么其实可以返回

14:42.040 --> 14:43.040
这里返回啥

14:43.040 --> 14:46.040
就返回props.movie

14:46.040 --> 14:48.080
点movie 点

14:48.080 --> 14:49.480
你看现在有类型保护

14:49.480 --> 14:50.680
因为你判断了过后了

14:50.680 --> 14:51.680
它就能够识别出

14:51.680 --> 14:53.400
它一定不是undefined

14:53.400 --> 14:54.680
它一定不是undefined

14:54.720 --> 14:57.120
那么这里返回movie.name

14:57.120 --> 15:00.080
这样子返回就完事了

15:00.080 --> 15:04.000
保存一下我们看一下

15:04.000 --> 15:04.960
你看

15:04.960 --> 15:06.640
读出来之后

15:06.640 --> 15:07.760
我们就可以得到

15:07.760 --> 15:09.800
这个编辑的电影名称

15:09.800 --> 15:11.200
如果你是做添加

15:11.200 --> 15:11.960
你看就没有

15:11.960 --> 15:13.120
就没有摸认值

15:13.120 --> 15:14.280
如果你做修改

15:14.280 --> 15:15.600
比方说这里点修改

15:15.600 --> 15:17.320
那么就用摸认值

15:17.320 --> 15:18.600
明白这个意思吗

15:18.600 --> 15:19.320
对吧

15:19.320 --> 15:19.560
好

15:19.560 --> 15:21.280
那这里我们就一试些

15:21.280 --> 15:22.600
这是个体力活

15:22.600 --> 15:24.080
当然有些同学很聪明

15:24.080 --> 15:26.320
这里我们没有必要就

15:26.360 --> 15:28.360
傻不拉鸡的自己一个一个去写

15:28.360 --> 15:29.920
这样子太烦说了

15:29.920 --> 15:32.080
而且如果这样子一直写

15:32.080 --> 15:33.440
直接这样子写的话

15:33.440 --> 15:34.400
会导致一个问题

15:34.400 --> 15:35.240
就是说

15:36.600 --> 15:38.520
如果将来属性有变动的话

15:38.520 --> 15:39.720
你这里也要跟着变

15:39.720 --> 15:40.240
所以说这里

15:40.240 --> 15:41.680
我们可以用动态的方式

15:41.680 --> 15:42.920
来把这个声称出来

15:42.920 --> 15:44.960
把对象声称出来就完事了

15:44.960 --> 15:46.440
实际上这里我再说一点

15:46.440 --> 15:48.200
其实你看这个函数

15:48.200 --> 15:51.160
它返回的类型设置的是void

15:51.160 --> 15:52.640
实际上我个人觉得

15:52.680 --> 15:56.200
我个人觉得设置为void的话

15:57.480 --> 15:58.760
肯定是不是很完美

15:58.760 --> 16:01.080
这个肯定是不是很完美的一种状态

16:01.080 --> 16:03.080
因为你这个函数

16:03.080 --> 16:05.560
要么可以要么不返回

16:05.560 --> 16:06.440
要返回的话

16:06.440 --> 16:08.320
是不是要跟这个表单预对应了

16:08.320 --> 16:10.440
应该跟表单预对应

16:10.440 --> 16:12.320
你甚至可以把这些每个表单预

16:12.320 --> 16:14.280
做成一个partial

16:14.280 --> 16:15.760
做成一个可选的都行

16:15.760 --> 16:17.960
但是直接用一个void

16:17.960 --> 16:19.800
我觉得不是很合理

16:19.800 --> 16:20.360
好

16:20.360 --> 16:22.040
那么这里我们不管它

16:22.120 --> 16:24.080
我们直接写个函数

16:24.080 --> 16:27.240
来帮我们生成这么一个对象

16:27.240 --> 16:29.080
帮助我们生成这么一个对象

16:29.080 --> 16:29.440
好

16:29.440 --> 16:31.040
我们写个函数吧

16:31.040 --> 16:37.920
get default field

16:37.920 --> 16:39.320
然后你传一个啥进来

16:39.320 --> 16:43.480
传一个movey对象进来

16:43.480 --> 16:44.920
我返回一个啥呢

16:44.920 --> 16:46.920
返回这么一种格式的对象

16:46.920 --> 16:48.480
返回这么一种格式的对象

16:48.480 --> 16:49.640
你看这个值是啥

16:49.680 --> 16:50.920
这个值是n例

16:50.920 --> 16:52.440
返回这么一种格式

16:52.440 --> 16:55.880
也就是我这里直接写函数

16:55.880 --> 16:57.520
主要是还要讲另外一个东西

16:57.520 --> 16:58.840
还要讲另外一个东西

16:58.840 --> 17:00.280
返回的是另外一个值n例

17:00.280 --> 17:02.000
因为它这里约束的就为n例

17:02.000 --> 17:02.600
它就为n例

17:02.600 --> 17:03.800
到我怎么办呢

17:03.800 --> 17:04.320
对吧

17:04.320 --> 17:06.440
也就是我给一个movey对象进来

17:06.440 --> 17:07.560
你给我返回的是啥呢

17:07.560 --> 17:10.000
比方说你给我的movey对象

17:10.000 --> 17:11.720
是这个样子

17:11.720 --> 17:15.040
什么Name属性一个字不错

17:15.040 --> 17:20.240
然后什么type是属像一个数组

17:20.240 --> 17:20.960
一个数组

17:20.960 --> 17:23.080
数组里面是一个字不错

17:23.080 --> 17:24.560
也就是说你给我的格式呢

17:24.560 --> 17:25.960
是这种的格式

17:28.360 --> 17:29.000
是这种格式

17:30.440 --> 17:32.120
我返回的格式呢

17:32.120 --> 17:33.280
是这种格式

17:33.280 --> 17:35.280
属性是全部对应的

17:35.280 --> 17:36.200
只不过变成了n例

17:37.880 --> 17:39.440
我强行加一个姿势的眼睛去

17:40.640 --> 17:42.920
变成这种格式

17:43.200 --> 17:45.560
现在我们要做这个返回内形

17:45.560 --> 17:49.000
我们要根据这个内形来计算出这个内形

17:49.000 --> 17:49.600
来吧

17:49.600 --> 17:52.520
我们把内形演算的姿势在这里讲一讲

17:53.720 --> 17:54.480
怎么来做

17:55.480 --> 17:57.560
我以致内形是这个

17:57.560 --> 18:00.120
现在我要得到一个新的内形是这个

18:00.120 --> 18:01.960
属性全部一致

18:01.960 --> 18:04.400
只是返回内形变成了n例

18:04.400 --> 18:05.560
变成了n例

18:05.560 --> 18:05.960
怎么做

18:05.960 --> 18:07.560
我们自己来做一遍

18:07.560 --> 18:08.360
怎么做呢

18:08.360 --> 18:10.520
我们可以写一个内形别名

18:11.520 --> 18:12.800
内形别名

18:12.800 --> 18:18.160
给他取个名字叫做moviefield

18:19.760 --> 18:21.720
那么他的内形别名怎么算出来的呢

18:21.720 --> 18:22.920
这个内形

18:22.920 --> 18:24.640
他是一个对象

18:24.640 --> 18:26.280
首先他肯定是一个对象

18:26.280 --> 18:28.680
对象里边我们可以使用锁引器

18:28.680 --> 18:31.720
来约束他的字段

18:31.720 --> 18:33.320
他的字段是啥呢

18:33.320 --> 18:35.240
字段必须是k

18:35.240 --> 18:36.440
在这个k25

18:36.440 --> 18:38.720
我们把这个iMovie的字段全部算出来

18:39.720 --> 18:43.240
iMovie里边有哪些属性全部拿出来

18:43.240 --> 18:45.400
形成这么一个联合的内形

18:45.400 --> 18:46.440
然后他的属性

18:46.440 --> 18:49.120
必须在这个联合的内形当中

18:49.120 --> 18:50.800
只不过我把他的结果

18:50.800 --> 18:52.280
这个属性的结果

18:52.280 --> 18:55.440
他的属性本身的内形变成n例

18:55.440 --> 18:57.200
变成这个样子

18:57.200 --> 18:57.400
好

18:57.400 --> 18:59.120
这样子我们指着他的看一下

18:59.120 --> 19:01.160
是不是这些属性全部变成n例了

19:01.160 --> 19:02.880
全部变成了n例了

19:02.880 --> 19:03.880
就这么简单

19:03.880 --> 19:05.520
就这么简单

19:05.520 --> 19:08.160
甚至说我还可以把这个id去掉

19:08.200 --> 19:08.680
对吧

19:08.680 --> 19:09.680
我id不要

19:09.680 --> 19:11.520
id不要都可以

19:11.520 --> 19:13.480
比方说我要比方说

19:13.480 --> 19:14.760
我要把id去掉

19:14.760 --> 19:15.480
我咋去掉

19:16.800 --> 19:18.280
这里有点难度

19:18.280 --> 19:19.680
我要把id去掉

19:19.680 --> 19:20.400
我咋去掉

19:22.240 --> 19:23.200
怎么去掉呢

19:23.200 --> 19:26.800
你把这一块想象成一个啥

19:26.800 --> 19:29.000
想象成一个联合内形

19:29.000 --> 19:30.560
就是他包含了什么

19:30.560 --> 19:31.160
就这一块

19:31.160 --> 19:32.120
我现在框住这一块

19:32.120 --> 19:33.320
你可以这样子想象

19:33.320 --> 19:34.360
框住这一块

19:34.360 --> 19:37.320
你可以想象成这么一种内形

19:37.360 --> 19:39.600
就是id

19:39.600 --> 19:40.880
还有name

19:40.880 --> 19:41.840
对吧

19:41.840 --> 19:43.920
还有啥了

19:43.920 --> 19:45.480
还有啥啥啥

19:45.480 --> 19:46.440
其他属性

19:46.440 --> 19:47.840
想象成这么一个内形

19:47.840 --> 19:50.160
那我是不是只要使用exclude

19:51.480 --> 19:52.800
exclude

19:52.800 --> 19:53.640
有这么一个内形

19:53.640 --> 19:55.360
远预定一等内形演算

19:55.360 --> 19:55.960
对吧

19:55.960 --> 19:57.840
有这么一个内形演算

19:57.840 --> 19:59.480
我们使用exclude

19:59.480 --> 20:00.280
然后呢

20:00.280 --> 20:03.280
这里给他把id去掉就完事了

20:03.280 --> 20:03.760
对吧

20:03.760 --> 20:05.560
把id去掉就完事了

20:05.560 --> 20:06.800
好咱们来试一下呗

20:06.840 --> 20:08.080
我们把这一部分

20:08.080 --> 20:09.560
这个联合内形

20:09.560 --> 20:11.920
然后给外面给他套上一个exclude

20:13.040 --> 20:14.400
exclude

20:14.400 --> 20:16.280
然后第一个方形的是这个

20:16.280 --> 20:17.920
第二个方形的就是一个id

20:21.120 --> 20:21.880
把他去掉

20:21.880 --> 20:23.120
我们再来看

20:23.120 --> 20:24.520
id是不是没了

20:24.520 --> 20:25.120
id就没了

20:26.200 --> 20:26.680
总之呢

20:26.680 --> 20:28.800
我这里就强行加这么一个

20:28.800 --> 20:29.840
加这么一个规则

20:31.360 --> 20:32.960
这里写好了之后呢

20:32.960 --> 20:35.000
我们就把这个内形

20:35.040 --> 20:36.680
作为这个函数的

20:36.680 --> 20:38.400
返回内形方招

20:39.920 --> 20:40.080
好

20:40.080 --> 20:42.600
接下来就是函数如何来输写

20:42.600 --> 20:43.240
怎么输写呢

20:43.240 --> 20:45.000
我们底下思路啊

20:45.000 --> 20:49.000
其实无非就是循环读取这个movey

20:49.000 --> 20:49.560
啊

20:49.560 --> 20:51.160
循环读取这个movey

20:51.160 --> 20:52.440
这个对象

20:52.440 --> 20:53.000
然后呢

20:53.000 --> 20:56.680
把这个对象里边所有的属性值呢

20:56.680 --> 20:59.040
变成这个属性值

20:59.040 --> 21:00.160
对吧

21:00.160 --> 21:00.320
好

21:00.320 --> 21:00.760
那么这里呢

21:00.760 --> 21:02.920
我们可以用一个很简单的方式啊

21:02.960 --> 21:04.520
比方说我们形成一个对象

21:04.520 --> 21:06.080
ob界啊

21:06.080 --> 21:07.200
先给他约数为n

21:08.480 --> 21:11.240
一个普通的一个普通的对象

21:11.240 --> 21:11.880
然后呢

21:11.880 --> 21:13.240
我们循环啥呢

21:13.240 --> 21:16.320
循环movey里边的每一个属性值

21:16.320 --> 21:16.680
对吧

21:16.680 --> 21:18.920
我们循环movey里边的每一个属性值

21:18.920 --> 21:20.120
好用4in循环

21:21.120 --> 21:21.920
循环啥呢

21:21.920 --> 21:24.080
循环movey里边的每一个属性值

21:25.160 --> 21:25.400
好

21:25.400 --> 21:26.160
属性名啊

21:26.160 --> 21:27.320
循环他的每一个属性名

21:27.320 --> 21:28.040
那么这个key呢

21:28.040 --> 21:29.480
得到的肯定就是一个属性名

21:30.680 --> 21:31.400
接下来呢

21:31.440 --> 21:33.400
把这个ob界啊

21:34.400 --> 21:35.960
ob界调key

21:35.960 --> 21:37.560
给他重新复职

21:37.560 --> 21:40.880
给这个对象的相应的属性重新复职

21:40.880 --> 21:41.880
复职的时候呢

21:41.880 --> 21:44.120
我们就可以使用这种方式啊

21:44.120 --> 21:44.920
使用这种方式

21:45.960 --> 21:46.120
好

21:46.120 --> 21:47.640
这create form field

21:47.640 --> 21:48.200
对吧

21:48.200 --> 21:49.120
那么这里呢

21:49.120 --> 21:50.240
value值等于啥呢

21:50.240 --> 21:51.880
value值是不是等于

21:51.880 --> 21:53.400
跟以前电影是一样的啊

21:53.400 --> 21:55.440
跟以前的对象是一样的属性值

21:55.440 --> 21:55.840
对吧

21:55.840 --> 21:56.240
这里呢

21:56.240 --> 21:59.320
我们就可以使用movey key

22:00.320 --> 22:01.120
好

22:01.120 --> 22:02.520
这样子就把这个对象生成了

22:02.520 --> 22:02.840
最后呢

22:02.840 --> 22:04.200
我们把这个对象返回就完事了

22:05.520 --> 22:06.400
就完事了

22:06.400 --> 22:06.560
啊

22:06.560 --> 22:07.200
这里呢

22:07.200 --> 22:09.240
我这里边这个ob界的对象啊

22:09.240 --> 22:11.560
我没有用任何的类型检查啊

22:11.560 --> 22:13.080
没有任何的类型检查

22:13.080 --> 22:13.640
第一个呢

22:13.640 --> 22:15.520
是因为这个代码很简单

22:15.520 --> 22:16.280
第二个呢

22:16.280 --> 22:19.120
是因为我这里要动态的给他加属性

22:19.120 --> 22:20.000
用内形检查

22:20.000 --> 22:21.520
因为这里用内形检查呢

22:21.520 --> 22:23.320
会反而导致一些不太方便

22:24.200 --> 22:24.880
ok啊

22:24.880 --> 22:25.480
那这里呢

22:25.480 --> 22:27.680
我就把这个函数给写好了

22:27.680 --> 22:27.920
好

22:27.920 --> 22:28.920
写好了之后呢

22:28.960 --> 22:31.040
这个函数是不是就可以用下来了

22:31.040 --> 22:32.080
对不对

22:32.080 --> 22:34.600
我们直接在这里返回个啥呢

22:34.600 --> 22:36.600
就返回这个函数的调用结果

22:36.600 --> 22:37.320
哎

22:37.320 --> 22:40.160
get default field

22:40.160 --> 22:41.800
然后把什么东西传进去

22:41.800 --> 22:43.680
把这个movey对象传进去

22:43.680 --> 22:44.400
剩下的事情

22:44.400 --> 22:46.480
你帮我返回一个默认

22:46.480 --> 22:47.520
制断的集合

22:47.520 --> 22:48.400
默认制断了

22:48.400 --> 22:51.240
默认制断的属性就完事了

22:51.240 --> 22:51.400
好

22:51.400 --> 22:53.120
保存一下

22:53.120 --> 22:54.120
这边我们来看一下

22:55.320 --> 22:55.480
哎

22:55.480 --> 22:57.240
这里应该是哪个地方包错了啊

22:58.240 --> 22:59.120
哎

22:59.120 --> 22:59.720
没有包错

23:00.720 --> 23:01.520
没有包错

23:03.520 --> 23:04.360
咱们刷新一次

23:04.360 --> 23:08.900
看一下啊

23:08.900 --> 23:09.580
这怎么回事

23:12.510 --> 23:13.110
这我看一下

23:13.110 --> 23:14.230
这里打印一下

23:14.230 --> 23:15.630
这个有没有运行啊

23:15.630 --> 23:17.150
有没有运行这个函数

23:17.150 --> 23:18.150
把ob界打印出来

23:20.720 --> 23:23.930
看一下啊

23:23.930 --> 23:24.730
key

23:24.730 --> 23:25.890
展开

23:25.890 --> 23:26.130
哎

23:26.130 --> 23:27.090
它只有一个key

23:27.090 --> 23:27.290
哦

23:27.290 --> 23:28.010
这里出了问题了

23:28.010 --> 23:28.610
对吧

23:28.610 --> 23:29.890
这里我写错了啊

23:29.890 --> 23:30.770
这里应该咋写的

23:30.770 --> 23:32.690
这应该是两个综扩号啊

23:32.690 --> 23:34.730
两个综扩号啊

23:34.770 --> 23:36.450
这个key里面存的是属性名

23:36.450 --> 23:37.890
我怎么能这样子写呢

23:37.890 --> 23:40.490
刚才弄的写法是给它的一个属性

23:40.490 --> 23:42.650
名字叫做属性的名字叫做key

23:42.650 --> 23:43.610
给它复制

23:43.610 --> 23:44.610
那不对啊

23:44.610 --> 23:45.930
应该把key的值呢

23:45.930 --> 23:47.450
作为属性的名字啊

23:47.450 --> 23:49.930
作为属性的名字来进行处理

23:49.930 --> 23:50.090
好

23:50.090 --> 23:50.730
保存一下

23:50.730 --> 23:52.090
那么我们可以看到啊

23:52.090 --> 23:52.770
这些东西都有了

23:53.730 --> 23:53.930
好

23:53.930 --> 23:55.530
咱们再点点一点点表啊

23:55.530 --> 23:58.290
点第一个编辑啊都有了

23:58.290 --> 23:58.930
对吧

23:58.930 --> 23:59.090
好

23:59.090 --> 24:01.050
我们比方说修改试一下啊

24:01.050 --> 24:01.930
修改试一下

24:01.930 --> 24:02.890
点击上传

24:02.890 --> 24:04.690
我们随便找一张图片啊

24:04.730 --> 24:05.170
然后呢

24:05.170 --> 24:06.290
这个开启啊

24:06.290 --> 24:07.610
开启啊

24:07.610 --> 24:09.890
描述也写上点提交

24:09.890 --> 24:11.410
处理成功返回过后

24:12.410 --> 24:14.730
你看第一个浏览地球是不是有图片了

24:14.730 --> 24:15.290
好

24:15.290 --> 24:17.210
然后我们再点编辑

24:17.210 --> 24:17.410
好

24:17.410 --> 24:17.890
这个时候呢

24:17.890 --> 24:19.970
其实大家应该发现了一个问题啊

24:19.970 --> 24:21.570
有个地方有点不对

24:21.570 --> 24:22.410
啥地方不对呢

24:23.410 --> 24:24.970
再看一下啊

24:24.970 --> 24:25.930
看一下第一个

24:25.930 --> 24:27.490
第一个正在热印即将上映

24:27.490 --> 24:29.050
今年影片上都是开启的

24:29.050 --> 24:30.490
我们点操作过后了

24:30.490 --> 24:32.210
这个地方不对啊

24:32.210 --> 24:33.530
这个地方不对

24:33.530 --> 24:35.570
那么这个地方是怎么回事呢

24:35.570 --> 24:38.170
这个地方发生的问题啊

24:38.170 --> 24:41.450
它的原因是这个原因

24:41.450 --> 24:43.050
我们先看这儿

24:43.050 --> 24:44.610
就是表单域里边呢

24:44.610 --> 24:46.250
它是这样子来处理的啊

24:46.250 --> 24:48.570
这应该你们以前学过这样的知识

24:48.570 --> 24:50.610
就是电影这里啊

24:50.610 --> 24:52.410
比方说电影这里

24:52.410 --> 24:53.490
它这里有个字段

24:53.490 --> 24:53.970
对吧

24:53.970 --> 24:55.890
一个属性name

24:55.890 --> 24:57.610
它会把name的值呢

24:57.610 --> 25:01.810
作为主件的value值给它复制进去

25:01.810 --> 25:02.730
把name的值呢

25:02.770 --> 25:05.530
作为主件的value值给它复制进去

25:05.530 --> 25:06.970
但是它就遇到一个问题

25:06.970 --> 25:07.970
有些组件呢

25:07.970 --> 25:09.850
它不是value这个属性

25:09.850 --> 25:11.810
你设置的不是value这个属性

25:11.810 --> 25:12.730
比方说

25:12.730 --> 25:14.330
这里的正在热印

25:14.330 --> 25:16.490
用的是switch这个组件

25:16.490 --> 25:18.770
这里也用的是switch这个组件

25:18.770 --> 25:19.370
因此呢

25:19.370 --> 25:21.810
它设置值的时候设置这个ease heart

25:21.810 --> 25:23.090
比方说为true

25:23.090 --> 25:23.890
它设置值的时候

25:23.890 --> 25:25.410
它是设置的是value

25:25.410 --> 25:26.370
哪有这个属性啊

25:26.370 --> 25:28.370
根本就没有这个属性对吧

25:28.370 --> 25:29.690
它根本就没有这个属性

25:29.690 --> 25:31.330
它是这样子来设置的

25:31.530 --> 25:33.410
压个就没有这个属性

25:33.410 --> 25:34.010
所以说呢

25:34.010 --> 25:35.730
还会导致这样的问题

25:35.730 --> 25:37.490
那么我们看一下这里

25:37.490 --> 25:39.250
switch这个这个组件

25:39.250 --> 25:40.890
它应该是一个什么样的属性呢

25:40.890 --> 25:41.450
我们看一下

25:43.250 --> 25:44.850
应该是checked

25:44.850 --> 25:46.210
是这个属性值

25:46.210 --> 25:47.250
是这个属性值

25:47.250 --> 25:48.730
它不是value

25:48.730 --> 25:49.570
那么也就是说

25:49.570 --> 25:50.530
我在这里呢

25:50.530 --> 25:51.490
要告诉它

25:51.490 --> 25:52.690
你设置属性的时候呢

25:52.690 --> 25:54.770
不要去设置它的value属性

25:54.770 --> 25:57.050
应该设置另外一个属性

25:57.050 --> 25:58.370
我们这里继续配置一下

25:58.370 --> 25:59.290
就完事了

25:59.290 --> 26:00.290
之前添加的话

26:00.330 --> 26:01.290
由于没有默认值

26:01.290 --> 26:02.730
我们发现不了这个问题

26:02.730 --> 26:04.010
我们现在知道了

26:04.010 --> 26:04.570
那么这里呢

26:04.570 --> 26:06.130
应该是使用的是

26:07.890 --> 26:08.930
prob

26:08.930 --> 26:10.730
valueprob内

26:10.730 --> 26:13.130
就是它的把它直干设置过去

26:13.130 --> 26:14.970
设置到这个组件上

26:14.970 --> 26:17.010
设置的是什么属性

26:17.010 --> 26:18.770
把它设置为checked

26:18.770 --> 26:19.450
好

26:19.450 --> 26:21.410
我们保存一下

26:21.410 --> 26:22.010
这边刷新

26:23.650 --> 26:24.570
好你看一下

26:24.570 --> 26:25.930
这不是默认选中了吗

26:25.930 --> 26:27.010
对不对

26:27.010 --> 26:27.250
好

26:27.250 --> 26:28.570
然后下边也是一样

26:28.570 --> 26:29.410
下边也是一样

26:30.370 --> 26:31.450
放过去

26:31.450 --> 26:32.490
放过去

26:32.490 --> 26:33.890
保存

26:33.890 --> 26:35.090
就完事了

26:35.090 --> 26:35.250
好

26:35.250 --> 26:37.010
咱们看

26:37.010 --> 26:38.090
就完事了

26:38.090 --> 26:38.610
就完事了

26:38.610 --> 26:40.130
好

26:40.130 --> 26:40.810
那么就没了

26:40.810 --> 26:41.330
还有啥呢

26:41.330 --> 26:43.530
比方说我们把这两个取消掉

26:43.530 --> 26:44.570
提交

26:44.570 --> 26:45.970
处理成功

26:45.970 --> 26:47.370
那这两个就没了

26:47.370 --> 26:48.210
对吧

26:48.210 --> 26:48.690
好

26:48.690 --> 26:49.130
咱们呢

26:49.130 --> 26:51.130
我们再看一下这个地区和内行

26:51.130 --> 26:53.330
地区加上个台湾香港

26:53.330 --> 26:54.610
内行加上一个

26:54.610 --> 26:57.370
喜剧和动作

26:57.370 --> 26:57.770
提交

26:58.770 --> 26:59.970
好

26:59.970 --> 27:01.010
咱们看一下

27:01.010 --> 27:02.770
地区内行都变化了

27:03.770 --> 27:04.090
好

27:04.090 --> 27:07.050
那么咱们整个的增商改查就完了

27:07.050 --> 27:08.250
就做完了

27:08.250 --> 27:09.490
好

27:09.490 --> 27:10.210
那还有啥呢

27:10.210 --> 27:11.010
就没啥了

27:11.010 --> 27:11.570
就没啥了

27:11.570 --> 27:14.690
整个系统我们支持的就做完了

27:14.690 --> 27:17.130
虽然我们只做了一个增商改查

27:17.130 --> 27:19.130
但是我们通过这个

27:19.130 --> 27:20.850
这个小的练习

27:20.850 --> 27:23.370
讲了很多关于TS

27:23.370 --> 27:25.970
如何去结合到这个系统的知识

27:25.970 --> 27:27.170
我再重申一遍

27:27.250 --> 27:28.810
这些内行系统呢

27:28.810 --> 27:30.290
都是可选的

27:30.290 --> 27:32.290
只不过我在讲这个东西的时候

27:32.290 --> 27:34.810
我肯定是要把它面面去讲道

27:34.810 --> 27:37.610
因为我保不起你们以后到公司里面

27:37.610 --> 27:40.010
就有可能会要求你们要做

27:40.010 --> 27:42.410
要比方说让你百分之百的覆盖

27:42.410 --> 27:43.930
所有的内行

27:43.930 --> 27:44.610
百分之百

27:44.610 --> 27:46.890
就TS要覆盖率要达到百分之百

27:46.890 --> 27:49.050
那这些细致没解的地方

27:49.050 --> 27:52.170
你就需要做很多很多的处理

27:52.170 --> 27:53.850
如果公司里面没有要求的话

27:53.850 --> 27:55.450
那你根据自己的喜好

27:55.490 --> 27:57.570
你自己觉得这个地方容易出错

27:57.570 --> 27:58.930
那么给他加上内行检查

27:58.930 --> 28:00.850
如果觉得不容易出错

28:00.850 --> 28:02.050
你自己写的代码没问题

28:02.050 --> 28:04.330
当你使用N你没有任何问题

28:04.330 --> 28:05.730
你就使用N你

28:05.730 --> 28:07.970
按照以前的做法来做就行了

28:07.970 --> 28:09.890
内行系统本身是可选的

28:09.890 --> 28:11.170
在你合适的时候

28:11.170 --> 28:12.690
你觉得可以加的时候

28:12.690 --> 28:15.050
你给他加上就完事了

28:15.050 --> 28:15.730
好了

28:15.730 --> 28:17.290
那么我们系统做完之后

28:17.290 --> 28:19.970
我们想想还有什么事情没做

28:19.970 --> 28:21.530
还有没有遗漏的

28:22.530 --> 28:23.690
好像是真没有了

28:23.850 --> 28:26.810
那么做完之后

28:26.810 --> 28:28.250
我们下一个小节

28:28.250 --> 28:29.810
就把它做个打包

28:29.810 --> 28:31.170
讲一下打包

28:31.170 --> 28:31.690
好吧

28:31.690 --> 28:34.410
那么这里我们这一课就到此结束了

28:34.410 --> 28:35.010
拜拜

