WEBVTT

00:00.820 --> 00:06.460
好 支持呢 我们最核心的功能呢 已经开发完毕了

00:07.220 --> 00:10.800
那么最后呢 我们来开发这么一个游戏内

00:11.320 --> 00:15.420
这个游戏内呢 他要能够控制整个游戏的进程

00:15.920 --> 00:18.220
OK 那么这一刻 我们来开发

00:19.000 --> 00:19.760
游戏内

00:20.280 --> 00:23.340
这个游戏内 他能够控制游戏的进程 比方说

00:23.600 --> 00:25.400
方块的自动下落呀

00:25.660 --> 00:27.960
什么消除啊

00:28.220 --> 00:30.520
还有什么就是那个

00:30.860 --> 00:36.440
下一个方块是什么呀 游戏停暂停啊 游戏计分啊 之类的东西啊

00:36.960 --> 00:38.240
靠游戏内来完成

00:38.760 --> 00:42.080
当然了 这个内还是仅仅是一个数据内

00:42.340 --> 00:43.620
只控制数据

00:43.880 --> 00:46.440
界面怎么办 在界面怎么显示

00:46.700 --> 00:47.200
无所谓

00:47.460 --> 00:49.760
我们会要让专门的内来进行处理

00:50.800 --> 00:54.640
OK 我们这里呢 我们新建这么一个内 叫取名为GAME

00:56.160 --> 00:57.960
这么一个游戏内好 直接导出啊

00:58.720 --> 01:00.000
CLASS GAME

01:01.020 --> 01:01.800
好 游戏内

01:02.820 --> 01:08.440
首先我们思考一个问题啊 我们开发这么多的内了 每次开发内呢 我们都是先思考的是咋了

01:08.700 --> 01:11.520
思考这个内里边有哪些属性 对吧

01:12.300 --> 01:16.900
好 这个游戏内里边也是一样啊 他有哪些属性呢 我一次来罗列一下

01:18.180 --> 01:20.480
第一个属性 游戏状态

01:21.500 --> 01:24.580
游戏的进程呢 他是有一定状态的 比方说

01:25.100 --> 01:25.860
还未开始

01:26.120 --> 01:27.140
比方说

01:28.100 --> 01:31.260
已经开始游戏 正在游戏中 还有了就是

01:31.700 --> 01:34.820
游戏一暂停 游戏

01:35.060 --> 01:35.660
已结束

01:36.060 --> 01:38.420
等等等等 这些都是游戏的状态

01:39.020 --> 01:42.580
因此呢 我们首先写这么一个属性 叫GAME STANTERS

01:43.020 --> 01:43.900
游戏状态

01:44.660 --> 01:48.340
那么他是一个什么内型啊 我们现在既然在学TS

01:48.980 --> 01:53.460
就对每一个属性啊 对每一个变量 我们心里要有数 他是一个什么内型

01:54.220 --> 01:54.900
什么内型呢

01:55.460 --> 01:58.740
当然这是一个每一句内型啊 每一句内型是最合适的

01:59.260 --> 02:01.060
所以说这里呢 我们直接

02:01.540 --> 02:03.100
呃taps里面加一个每一句

02:04.380 --> 02:05.900
表示游戏的状态

02:07.700 --> 02:08.980
GAME STANTERS

02:09.500 --> 02:11.020
有哪些状态呢 INIT

02:11.540 --> 02:12.820
表示未开始

02:13.340 --> 02:14.100
未开始

02:14.860 --> 02:16.140
然后呢 PLAYING

02:17.180 --> 02:18.700
游戏正在进行中

02:19.740 --> 02:20.500
进行中

02:21.020 --> 02:23.060
然后呢 还有就是 POST

02:23.780 --> 02:25.580
游戏已暂停

02:26.080 --> 02:28.140
暂停 暂停的状态

02:28.380 --> 02:30.180
还有就是 OVER GAME OVER

02:30.440 --> 02:31.200
游戏结束

02:32.480 --> 02:34.540
一共有这么四种状态

02:34.800 --> 02:35.820
有这么四种状态

02:36.580 --> 02:39.140
好了 那么我们在游戏内里边呢

02:39.400 --> 02:43.740
他这个他这个属性的内型呢 就应该是 GAME STANTERS

02:44.000 --> 02:45.540
表示游戏状态

02:46.060 --> 02:48.860
那么游戏一开始 最开始的状态应该是啥呢

02:49.120 --> 02:52.200
最开始的状态肯定是初始的状态 对吧 初始的状态

02:52.400 --> 02:54.200
好 我们给他取个名字

02:54.460 --> 02:56.260
GAME

02:57.020 --> 02:59.760
不 取名字 GAME STANTERS

03:00.020 --> 03:01.620
STANTERS INIT

03:02.140 --> 03:05.200
好 这只应该复初始 表示游戏一开始状态呢

03:05.460 --> 03:06.740
是初始化的状态

03:07.000 --> 03:09.560
我们现在不要去想见面啊 不要去想见面

03:09.820 --> 03:11.860
一想见面的话 这个事情又复杂了

03:12.120 --> 03:14.420
我们仔细先把数据搞定

03:14.680 --> 03:15.700
先搞定数据

03:16.460 --> 03:20.060
好 除了游戏状态之外呢 游戏里边还有什么东西呢

03:20.640 --> 03:23.800
还有这么一些东西 一个是当前方块

03:25.080 --> 03:30.000
当前玩家操作的方块 就是耳朵式方块

03:30.640 --> 03:33.200
那么这个方块呢 我们给他取个属性名

03:33.320 --> 03:35.520
表示CURR TERRORS

03:36.000 --> 03:38.720
当前玩家操作的方块是啥

03:39.280 --> 03:41.560
OK 那么他的属性值呢

03:41.800 --> 03:44.360
给他取个值啊 取个值就是

03:44.380 --> 03:50.060
SQUARE GROUP

03:50.060 --> 03:52.220
对吧 我们之前操作的方块都是这么个类型

03:52.820 --> 03:55.460
那么这个属性呢 可以可选

03:56.300 --> 03:58.660
设为可选 一开始的值呢是没有的

03:58.660 --> 04:01.740
玩家是没有操作 没有操作任何方块

04:01.740 --> 04:04.580
因为一开始游戏是初始化的状态

04:04.580 --> 04:06.500
因此的玩家没有操作任何的方块

04:07.460 --> 04:08.940
好 还有什么属性呢

04:08.940 --> 04:11.260
我先把属性写好 后面再说怎么来操作

04:11.720 --> 04:14.600
还有什么属性呢 还有下一个方块

04:15.160 --> 04:18.760
下一个方块是啥 你看我们之前玩这个耳朵式方块对吧

04:18.760 --> 04:20.760
你看这里是我们操作的方块

04:21.160 --> 04:23.560
然后呢 这个方块呢 就是下一个方块

04:23.560 --> 04:26.760
下一个方块是啥 先不要去考虑显示啊

04:26.760 --> 04:28.760
先把这个数据逻辑考虑清楚

04:29.320 --> 04:31.320
NEXT TERRORS

04:31.320 --> 04:33.160
下一个方块是啥

04:33.160 --> 04:35.360
我们把也是可选的

04:35.360 --> 04:37.560
也是可选的 这个不能可选啊

04:37.560 --> 04:38.560
这个不能可选

04:38.760 --> 04:41.260
这个是下一个方块始终都是有东西的

04:41.260 --> 04:44.260
square group

04:44.860 --> 04:47.060
那么下一个方块的值是啥呢

04:47.060 --> 04:49.260
下一个方块的值呢 它的出指呢

04:49.260 --> 04:50.660
我们可以用这种方式啊

04:50.660 --> 04:52.660
之前不是随机生成一个方块吗 对吧

04:52.660 --> 04:54.660
那么下一个方块是不是也是随机的

04:54.660 --> 04:57.060
对不对 下一个方块也是随机的

04:57.060 --> 04:58.860
所以说这里的下一个方块

04:58.860 --> 05:00.660
我们直接通过之前的代码

05:00.660 --> 05:02.660
就是terrors

05:03.660 --> 05:05.660
就是什么 我们之前是啥写的

05:06.660 --> 05:09.660
之前是crate terrace

05:09.660 --> 05:11.660
通过这么一个函数

05:11.660 --> 05:14.660
通过这么一个函数来创建这么一个俄罗斯方块

05:14.660 --> 05:17.660
好 他要告诉我一个中心点坐标

05:17.660 --> 05:19.660
中心点的坐标在哪

05:19.660 --> 05:22.660
那么下一个方块的中心点坐标在哪呢

05:22.660 --> 05:26.660
随便呗 都还没有到都还没有成为玩家操作的方块对吧

05:26.660 --> 05:28.660
那下一个方块的中心点坐标

05:28.660 --> 05:30.660
我就直接来0和0吧

05:30.660 --> 05:32.660
0和0 x

05:32.660 --> 05:34.660
0 y

05:35.660 --> 05:38.660
这是下一个方块的中心点坐标

05:40.660 --> 05:44.660
好了 那么现在我们写了这么三个属性

05:44.660 --> 05:46.660
写了这么三个属性

05:46.660 --> 05:49.660
接下来我们来看一下它里边有哪些函数

05:49.660 --> 05:52.660
就有哪些方法可以去操作

05:52.660 --> 05:54.660
这些属性的值

05:54.660 --> 05:57.660
首先第一个方法我们非常容易想到的就是

05:57.660 --> 05:59.660
游戏开始start

06:00.660 --> 06:02.660
它表示啥意思呢

06:02.660 --> 06:05.660
这个注释表示游戏开始

06:05.660 --> 06:10.660
游戏开始的时候当然你要改变什么

06:10.660 --> 06:11.660
改变状态对不对

06:11.660 --> 06:13.660
你要改变那个游戏的状态

06:13.660 --> 06:17.660
游戏开始 它如果已经是开始状态了

06:17.660 --> 06:19.660
那就什么都不用做了

06:19.660 --> 06:21.660
如果它是暂停状态

06:21.660 --> 06:23.660
或者是游戏结束状态

06:23.660 --> 06:26.660
或者是游戏还未开始的状态等等等等

06:26.660 --> 06:28.660
那么这些情况下呢

06:28.660 --> 06:29.660
我们都把它状态了

06:29.660 --> 06:31.660
跟它更改成为游戏开始

06:31.660 --> 06:33.660
所以说第一个要做的事情就是

06:33.660 --> 06:37.660
游戏状态的改变

06:37.660 --> 06:38.660
怎么改变呢

06:38.660 --> 06:41.660
如果游戏状态

06:42.660 --> 06:45.660
甚至呢我们这里可以直接

06:46.660 --> 06:48.660
直接这样子判断一下

06:48.660 --> 06:49.660
判断一下

06:49.660 --> 06:52.660
如果 Game Standards

06:52.660 --> 06:54.660
如果等于呢

06:54.660 --> 06:57.660
如果它已经是开始状态了

06:57.660 --> 07:00.660
如果已经在游戏中了

07:00.660 --> 07:02.660
那么这个时候呢我们什么都不做

07:02.660 --> 07:04.660
什么都不做就行了

07:04.660 --> 07:05.660
好

07:05.660 --> 07:08.660
后边呢就是游戏是其他状态的情况

07:08.660 --> 07:10.660
是其他状态的情况呢

07:10.660 --> 07:11.660
我们要把它做什么呢

07:11.660 --> 07:12.660
要给它复制

07:12.660 --> 07:15.660
复制为 Game Standards

07:15.660 --> 07:16.660
为什么呢

07:16.660 --> 07:18.660
为 Playing

07:18.660 --> 07:20.660
把它的状态改变成为游戏

07:20.660 --> 07:22.660
正在进行中的状态

07:22.660 --> 07:24.660
改变完了状态之后呢

07:24.660 --> 07:26.660
还有哪些事情可以做呢

07:26.660 --> 07:27.660
需要做呢

07:27.660 --> 07:29.660
就是无论是沉冲

07:29.660 --> 07:31.660
从什么状态

07:31.660 --> 07:32.660
到了游戏

07:32.660 --> 07:34.660
正在进行中的状态

07:34.660 --> 07:35.660
那么这个过程中

07:35.660 --> 07:36.660
还有哪些事情可以做

07:36.660 --> 07:37.660
大家想一想

07:37.660 --> 07:38.660
还需要做

07:38.660 --> 07:40.660
我们去做的

07:40.660 --> 07:41.660
好

07:41.660 --> 07:43.660
其中有一件事情呢就是

07:43.660 --> 07:45.660
我们要让方块呢

07:45.660 --> 07:47.660
开始自由的往下落

07:47.660 --> 07:48.660
一块一块的

07:48.660 --> 07:50.660
当前那个方块啊

07:50.660 --> 07:51.660
当前那个方块

07:51.660 --> 07:53.660
一块一块往下落

07:53.660 --> 07:54.660
那么当前的方块呢

07:54.660 --> 07:55.660
它有可能是空的

07:55.660 --> 07:57.660
就是有可能没有直

07:57.660 --> 07:58.660
对吧

07:58.660 --> 07:59.660
当前的方块啊

07:59.660 --> 08:01.660
它的内情 square group

08:01.660 --> 08:02.660
它有可能是没有直的

08:02.660 --> 08:03.660
因此呢

08:03.660 --> 08:04.660
这里呢

08:04.660 --> 08:05.660
我们需要判断一下

08:05.660 --> 08:07.660
需要判断一下

08:07.660 --> 08:08.660
就是判断一下

08:08.660 --> 08:09.660
当前那个方块

08:09.660 --> 08:11.660
有没有直

08:11.660 --> 08:13.660
Carteris

08:13.660 --> 08:15.660
如果当前那个方块

08:15.660 --> 08:16.660
没有直

08:16.660 --> 08:18.660
没有直是不是要复直啊

08:18.660 --> 08:21.660
给当前的方块

08:21.660 --> 08:24.660
当前操作的

08:24.660 --> 08:31.660
当前玩家操作的方块复直

08:31.660 --> 08:33.660
那么复为什么直呢

08:33.660 --> 08:34.660
当前可以

08:34.660 --> 08:35.660
玩家操作的方块

08:35.660 --> 08:36.660
复为什么直呢

08:36.660 --> 08:37.660
大家想一想啊

08:37.660 --> 08:40.660
应该复为什么直

08:40.660 --> 08:42.660
给当前玩家操作的方块复直

08:42.660 --> 08:44.660
其实复制的是什么直

08:44.660 --> 08:45.660
是不是就是下一个方块

08:45.660 --> 08:46.660
对不对

08:46.660 --> 08:48.660
就是下一个方块

08:48.660 --> 08:49.660
好

08:49.660 --> 08:50.660
我们可以看一下啊

08:50.660 --> 08:52.660
比方说我们这里

08:52.660 --> 08:53.660
重新开始

08:54.660 --> 08:56.660
所以一开始没有直的时候

08:56.660 --> 08:59.660
就要复制为下一个直

08:59.660 --> 09:00.660
比方

09:00.660 --> 09:01.660
当然这里这个过程

09:01.660 --> 09:02.660
大家感受不到

09:02.660 --> 09:03.660
因为太快了

09:03.660 --> 09:04.660
瞬间就过来了

09:04.660 --> 09:05.660
其实它一开始是下一个方块

09:05.660 --> 09:06.660
然后游戏一开始呢

09:06.660 --> 09:07.660
就把它变成了

09:07.660 --> 09:09.660
当前可以操作的方块了

09:09.660 --> 09:11.660
所以说复制为什么呢

09:11.660 --> 09:14.660
复制为NextCarteris

09:14.660 --> 09:16.660
那么把下一个方块的直

09:16.660 --> 09:19.660
复制为当前可以操作的方块

09:19.660 --> 09:22.660
那同时下一个方块改变

09:22.660 --> 09:24.660
下一个方块改变

09:24.660 --> 09:26.660
其实像这个过程啊

09:26.660 --> 09:27.660
像这个过程

09:27.660 --> 09:28.660
我们可以认为

09:28.660 --> 09:29.660
专门写个函数来处理

09:29.660 --> 09:31.660
表示切换方块

09:31.660 --> 09:33.660
表示切换方块

09:33.660 --> 09:34.660
好

09:34.660 --> 09:36.660
我现在虽然无法想象的到

09:36.660 --> 09:38.660
之后要不要用这个东西

09:38.660 --> 09:39.660
需不需要用这个东西

09:39.660 --> 09:40.660
但是我们可以想象到

09:40.660 --> 09:41.660
这个操作呢

09:41.660 --> 09:43.660
一定是有一个完整逻辑的

09:43.660 --> 09:45.660
我们把它取名为switch

09:45.660 --> 09:47.660
switchteras

09:47.660 --> 09:50.660
切换方块

09:51.660 --> 09:52.660
那么这个函数呢

09:52.660 --> 09:54.660
我先暂时把它设为私有的吧

09:54.660 --> 09:55.660
这个东西应该是

09:55.660 --> 09:56.660
不需要让外面的方块

09:56.660 --> 09:58.660
是游戏里面自行控制的

09:58.660 --> 09:59.660
怎么做呢

09:59.660 --> 10:00.660
就是把下一个方块

10:00.660 --> 10:02.660
复制给Carteris

10:02.660 --> 10:03.660
然后把下一个方块

10:03.660 --> 10:04.660
重新给它复制

10:04.660 --> 10:06.660
就把这个东西重新调用一次

10:06.660 --> 10:08.660
重新复制

10:08.660 --> 10:09.660
就完事了

10:09.660 --> 10:10.660
这就是切换方块

10:10.660 --> 10:11.660
好那么这里的

10:11.660 --> 10:14.660
调用switchteras

10:14.660 --> 10:16.660
当前首先改变游戏状态

10:16.660 --> 10:18.660
游戏状态

10:18.660 --> 10:21.660
改变之后呢

10:21.660 --> 10:23.660
然后切换方块

10:23.660 --> 10:25.660
如果当前方块没有值

10:25.660 --> 10:27.660
那么就切换方块

10:27.660 --> 10:30.660
切换完了方块之后

10:30.660 --> 10:32.660
还要做什么事情呢

10:32.660 --> 10:34.660
是不是要控制当前方块的自由下落

10:34.660 --> 10:35.660
对吧

10:35.660 --> 10:38.660
要控制当前方块的自由下落

10:38.660 --> 10:39.660
OK

10:39.660 --> 10:40.660
那么现在呢

10:40.660 --> 10:42.660
我们再写个函数

10:42.660 --> 10:45.660
专门来控制方块的自由下落

10:45.660 --> 10:47.660
专门来控制方块的自由下落

10:47.660 --> 10:49.660
然后该取个名字

10:49.660 --> 10:53.350
叫out to drop

10:53.350 --> 10:58.350
就是当前方块自由下落

10:58.350 --> 11:00.350
这是一个独立的函数

11:00.350 --> 11:02.350
它有可能在这个函数里面调用

11:02.350 --> 11:04.350
也有可能在其他的函数里面调用

11:04.350 --> 11:06.350
这个我现在说不准

11:06.350 --> 11:08.350
因为我开发一个程序的时候

11:08.350 --> 11:10.350
你很难预先知道

11:10.350 --> 11:12.350
某些东西在什么时候调用

11:12.350 --> 11:14.350
因此你写这个函数的时候

11:14.350 --> 11:15.350
尽量的

11:15.350 --> 11:17.350
不要说这个函数一定是在

11:17.350 --> 11:18.350
函数里面调用的

11:18.350 --> 11:19.350
不能这样去

11:19.350 --> 11:20.350
不让这样去假设

11:20.350 --> 11:22.350
因为它有可能在别的函数里面调用

11:22.350 --> 11:25.350
因此我们这里去调用这个out to drop

11:25.350 --> 11:27.350
那么在编写这个out to drop的时候

11:27.350 --> 11:28.350
你就不能假设

11:28.350 --> 11:30.350
它只能在函数里面调用

11:30.350 --> 11:33.350
这也是一个编程的一个基本思维

11:33.350 --> 11:34.350
就是你写一个函数的时候

11:34.350 --> 11:36.350
你不能去做这种假设

11:36.350 --> 11:37.350
这种假设很危险

11:37.350 --> 11:39.350
因为将来如果你有了这种假设的话

11:39.350 --> 11:40.350
那么这个函数

11:40.350 --> 11:43.350
跟这个函数联系的非常非常紧密

11:43.350 --> 11:46.350
将来我如果像直接调用这个函数的时候

11:46.350 --> 11:49.350
就有就会出现可能会出现很多问题

11:49.350 --> 11:51.350
那么这里面

11:51.350 --> 11:53.350
当前方块自由下落

11:53.350 --> 11:55.350
那么肯定是一个计时器对吧

11:55.350 --> 11:57.350
一个计时器

11:57.350 --> 11:59.350
那么这个函数里面

11:59.350 --> 12:01.350
如果当前已经有计时器了

12:01.350 --> 12:03.350
当前已经有计时器了

12:03.350 --> 12:06.350
那么这个时候就可以什么都不做

12:06.350 --> 12:08.350
如果没有计时器

12:08.350 --> 12:09.350
我们才给它

12:09.350 --> 12:11.350
给它复制一个计时器

12:11.350 --> 12:15.350
所以这里我需要一个计时器

12:15.350 --> 12:17.350
一个计时器

12:17.350 --> 12:19.350
计时器

12:19.350 --> 12:23.350
给它取名为Timer

12:23.350 --> 12:25.350
当然我们在浏览器里面的计时器

12:25.350 --> 12:26.350
计时器是什么类型

12:26.350 --> 12:28.350
我们知道在浏览器里面

12:28.350 --> 12:29.350
计时器其实就是个啥

12:29.350 --> 12:31.350
就是一个数字

12:31.350 --> 12:32.350
就是一个数字

12:32.350 --> 12:33.350
那么把它设为可选吧

12:33.350 --> 12:35.350
让它不过认为亡地蛋

12:35.350 --> 12:37.350
有这么个计时器

12:37.350 --> 12:38.350
我们这里判断一下

12:38.350 --> 12:40.350
首先判断一下

12:40.350 --> 12:43.350
Timer有没有值

12:44.350 --> 12:48.350
如果Timer有值的话

12:48.350 --> 12:50.350
什么都不做

12:50.350 --> 12:53.350
说明当前已经有计时器了

12:53.350 --> 12:54.350
已经再自由下落了

12:54.350 --> 12:56.350
你再重新调用这个函数

12:56.350 --> 12:57.350
我什么都不做

12:57.350 --> 12:58.350
再说一次

12:58.350 --> 13:00.350
你编写这个函数的时候

13:00.350 --> 13:01.350
不要去想当然的

13:01.350 --> 13:02.350
认为这个函数

13:02.350 --> 13:04.350
一定在十大尺里面调用

13:04.350 --> 13:05.350
那不一定的

13:05.350 --> 13:06.350
尽管我现在

13:06.350 --> 13:07.350
还无法想象到

13:07.350 --> 13:09.350
后边有没有可能调用这个函数

13:09.350 --> 13:11.350
但是你先不要去做这种假设

13:11.350 --> 13:13.350
尽量不要去做这种假设

13:13.350 --> 13:14.350
不然的话

13:14.350 --> 13:15.350
这个函数跟十大尺

13:15.350 --> 13:17.350
就联系得过于紧密

13:17.350 --> 13:18.350
那么到时候

13:18.350 --> 13:19.350
你要分开调用的时候

13:19.350 --> 13:21.350
就会出问题

13:21.350 --> 13:22.350
我们首先判断一下

13:22.350 --> 13:24.350
有没有这个计时器

13:24.350 --> 13:26.350
如果没有这个计时器

13:26.350 --> 13:27.350
如果有这个计时器

13:27.350 --> 13:28.350
什么都不做

13:28.350 --> 13:30.350
其实还有一种情况

13:30.350 --> 13:31.350
什么都不做

13:31.350 --> 13:32.350
什么情况呢

13:32.350 --> 13:34.350
就是当前的游戏

13:34.350 --> 13:36.350
这game standards

13:36.350 --> 13:38.350
游戏状态等于啥呢

13:38.350 --> 13:40.350
game standards

13:40.350 --> 13:41.350
等于

13:42.350 --> 13:44.350
不等于配映的时候

13:45.350 --> 13:47.350
不等于配映的时候

13:47.350 --> 13:48.350
那么这个时候

13:48.350 --> 13:50.350
它也是什么都不做

13:50.350 --> 13:51.350
明白这个意思吗

13:51.350 --> 13:52.350
你先不要假设说

13:52.350 --> 13:55.350
START里面好像把它改成了配映

13:55.350 --> 13:56.350
你不能这样去假设

13:56.350 --> 13:58.350
如果你这样假设的话

13:58.350 --> 14:00.350
这两个函数联系得太紧密了

14:00.350 --> 14:02.350
好接下来

14:02.350 --> 14:04.350
那么剩下的情况就是

14:04.350 --> 14:06.350
游戏是正在进行中

14:06.350 --> 14:08.350
并且又没有计时器

14:08.350 --> 14:09.350
那就简单了

14:09.350 --> 14:10.350
我就给它复制一个计时器

14:10.350 --> 14:12.350
就是set interval

14:12.350 --> 14:13.350
一个计时器

14:13.350 --> 14:17.730
这个计时器每隔多少时间

14:17.730 --> 14:19.730
方块落下一隔呢

14:19.730 --> 14:21.730
每隔多少时间往下落呢

14:21.730 --> 14:23.730
这个简单

14:23.730 --> 14:25.730
多少时间呢

14:25.730 --> 14:27.730
我们取决于

14:27.730 --> 14:29.730
这个游戏的难度

14:29.730 --> 14:31.730
游戏越难

14:31.730 --> 14:33.730
是不是这个时间就越短

14:33.730 --> 14:35.730
有没有意思

14:35.730 --> 14:36.730
游戏越难的话

14:36.730 --> 14:37.730
这个时间就越短

14:37.730 --> 14:39.730
所以说这个地方有可能

14:39.730 --> 14:41.730
会随着我们之后

14:41.730 --> 14:42.730
要做积分

14:42.730 --> 14:43.730
积分的增加

14:43.730 --> 14:45.730
那么它的时间会逐渐减少

14:45.730 --> 14:46.730
所以说呢

14:46.730 --> 14:47.730
这里面呢

14:47.730 --> 14:49.730
我们可以给它一个

14:49.730 --> 14:51.730
一个属性吧

14:51.730 --> 14:52.730
属性

14:52.730 --> 14:54.730
这个属性应该是Private的

14:54.730 --> 14:56.730
Private的

14:56.730 --> 14:58.730
这些属性都把设成Private

14:58.730 --> 15:00.730
都把设成Private

15:00.730 --> 15:04.260
当时习惯

15:04.260 --> 15:06.260
必须把这些属性名前面

15:06.260 --> 15:07.260
都加上一个下滑线

15:07.260 --> 15:09.260
表示的是一个私有属性

15:09.260 --> 15:13.020
这里也是一样

15:13.020 --> 15:14.020
把私有属性下滑线

15:14.020 --> 15:15.020
这里也是一样

15:15.020 --> 15:18.100
好 计时器

15:18.100 --> 15:19.100
下面呢

15:19.100 --> 15:20.100
是

15:20.100 --> 15:21.100
间隔时间

15:21.100 --> 15:23.100
啊 间隔时间

15:23.100 --> 15:25.100
自动下落

15:25.100 --> 15:27.100
的间隔

15:27.100 --> 15:29.100
时间

15:29.100 --> 15:30.100
时间

15:30.100 --> 15:32.100
好 切成Private

15:32.100 --> 15:34.100
Directing

15:34.100 --> 15:35.100
Number

15:35.100 --> 15:37.100
给它个默认值吧

15:37.100 --> 15:39.100
我们之后再处理这个问题

15:39.100 --> 15:41.100
就是怎么学到分数的增加

15:41.100 --> 15:43.100
时间间隔越来越小

15:43.100 --> 15:44.100
之后再处理这个问题

15:44.100 --> 15:45.100
现在呢

15:45.100 --> 15:47.100
给它一个默认值

15:47.100 --> 15:49.100
比方说一秒钟

15:49.100 --> 15:50.100
好 那么这边呢

15:50.100 --> 15:52.100
就使用这个私有属性

15:52.100 --> 15:54.100
Directing

15:54.100 --> 15:56.100
使用个私有属性

15:56.100 --> 15:58.100
诶 这里为什么爆错

15:58.100 --> 16:01.660
哦 这里的爆错

16:01.660 --> 16:02.660
爆错了

16:02.660 --> 16:03.660
所以它这个情况

16:03.660 --> 16:05.660
这个爆错的原因呢

16:05.660 --> 16:06.660
是因为

16:06.660 --> 16:08.660
这个CS-interval

16:08.660 --> 16:10.660
它在no的环境里边也有

16:10.660 --> 16:13.660
在浏览器环境里边也有

16:13.660 --> 16:14.660
那么现在呢

16:14.660 --> 16:17.660
由于我们目前是浏览器环境

16:17.660 --> 16:18.660
同时呢

16:18.660 --> 16:20.660
我们又安装了这个东西

16:20.660 --> 16:22.660
安装看no的marchus下面

16:22.660 --> 16:23.660
安装这个no的环境的

16:23.660 --> 16:24.660
就是内形

16:24.660 --> 16:25.660
因此呢

16:25.660 --> 16:27.660
它这里很不巧的是

16:27.660 --> 16:29.660
它推断出来这个set-interval

16:29.660 --> 16:31.660
是no的环境的内形

16:31.660 --> 16:33.660
啊 是no的环境

16:33.660 --> 16:34.660
而no的环境呢

16:34.660 --> 16:35.660
它返回的内形呢

16:35.660 --> 16:37.660
叫做timeout这个内形

16:37.660 --> 16:38.660
返回的是这个内形

16:38.660 --> 16:39.660
而不是一个number内形

16:39.660 --> 16:41.660
因此它这里爆错了

16:41.660 --> 16:43.660
那么我们要做的事情

16:43.660 --> 16:44.660
其实很简单

16:44.660 --> 16:46.660
就把no的环境给它删除掉

16:46.660 --> 16:47.660
就完成了

16:47.660 --> 16:48.660
把no的环境

16:48.660 --> 16:50.660
在no的marchus里边

16:50.660 --> 16:51.660
当然

16:51.660 --> 16:52.660
如果你是一个新的项目的话

16:52.660 --> 16:53.660
你肯定是没有这个环境的

16:53.660 --> 16:54.660
对吧

16:54.660 --> 16:55.660
肯定是没有的

16:55.660 --> 16:56.660
OK 我们把它删除掉

16:56.660 --> 16:57.660
删除掉就行了

16:58.660 --> 16:59.660
好

17:00.660 --> 17:01.660
删除掉之后呢

17:01.660 --> 17:02.660
我们现在看就正确了

17:02.660 --> 17:03.660
对吧 返回的是一个number了

17:03.660 --> 17:04.660
OK

17:05.660 --> 17:06.660
好 那么这里

17:06.660 --> 17:08.660
每隔一段时间

17:08.660 --> 17:10.660
当前方块自由下落

17:10.660 --> 17:11.660
当前方块自由下落

17:11.660 --> 17:13.660
那么首先判断一下

17:13.660 --> 17:15.660
当前方块不是有可能围空吗

17:15.660 --> 17:16.660
对吧

17:16.660 --> 17:17.660
你不能去做假设

17:17.660 --> 17:18.660
不能说一开始

17:18.660 --> 17:19.660
你给它敷了纸

17:19.660 --> 17:20.660
它一定不围空了

17:20.660 --> 17:22.660
不能做这种假设

17:22.660 --> 17:23.660
因为这个海出

17:23.660 --> 17:24.660
不知道在什么情况下调用

17:24.660 --> 17:26.660
好 看一下当前的方块

17:26.660 --> 17:27.660
是不是围空

17:27.660 --> 17:29.660
如果z

17:29.660 --> 17:30.660
这个东西它不围空

17:30.660 --> 17:32.660
不围空怎么办呢

17:32.660 --> 17:33.660
是不是一次往下落

17:33.660 --> 17:34.660
对吧

17:34.660 --> 17:35.660
一次往下落

17:35.660 --> 17:37.660
OK 那么就是z

17:38.660 --> 17:40.660
我们之前写过的对吧

17:40.660 --> 17:42.660
叫做terrace入

17:42.660 --> 17:44.660
然后moo

17:45.660 --> 17:46.660
moo什么

17:46.660 --> 17:48.660
一个是把一个方块团进去

17:48.660 --> 17:49.660
当前的方块

17:49.660 --> 17:51.660
terrace团进去

17:51.660 --> 17:52.660
然后呢

17:52.660 --> 17:53.660
移动方向

17:53.660 --> 17:54.660
移动方向就是moo

17:55.660 --> 17:56.660
direction

17:57.660 --> 17:59.660
往下移动一个

17:59.660 --> 18:00.660
就完事了对吧

18:00.660 --> 18:01.660
是不是完事了

18:01.660 --> 18:03.660
往下移动一个

18:03.660 --> 18:04.660
那么这个东西

18:04.660 --> 18:05.660
会返回一个成功

18:05.660 --> 18:06.660
还是失败

18:06.660 --> 18:08.660
我们现在暂时不管

18:08.660 --> 18:09.660
先暂时不管

18:09.660 --> 18:11.660
OK 就搞定了

18:11.660 --> 18:13.660
当前方块的自由下落

18:13.660 --> 18:15.660
好 咱们来测试一下吧

18:15.660 --> 18:17.660
咱们来测试一下

18:18.660 --> 18:20.660
我们到index里面来

18:21.660 --> 18:22.660
index里面来

18:22.660 --> 18:24.660
好 我们这些乱七八糟的玩意

18:24.660 --> 18:26.660
就刚刚删除掉了

18:26.660 --> 18:28.660
我们重新来使用一下

18:28.660 --> 18:29.660
这个游戏内

18:29.660 --> 18:31.660
使用一下这个游戏内

18:31.660 --> 18:32.660
创建一个

18:32.660 --> 18:35.660
创建一个game的对象

18:37.660 --> 18:38.660
然后呢

18:38.660 --> 18:40.660
调用游戏的start

18:40.660 --> 18:41.660
游戏开始

18:41.660 --> 18:42.660
游戏开始

18:42.660 --> 18:43.660
咱们来试一下

18:43.660 --> 18:44.660
看这个游戏

18:44.660 --> 18:45.660
能不能看到方块

18:45.660 --> 18:46.660
一块往下落

18:47.660 --> 18:48.660
还是说

18:48.660 --> 18:49.660
还要做一些其他的事情

18:50.660 --> 18:52.980
好 我们一开始呢

18:52.980 --> 18:53.980
调用了游戏开始

18:53.980 --> 18:54.980
调用了游戏开始

18:54.980 --> 18:55.980
但是呢

18:55.980 --> 18:56.980
我们发现

18:56.980 --> 18:58.980
界面上没有任何显示

18:58.980 --> 19:00.980
为什么没有任何显示呢

19:00.980 --> 19:01.980
是因为我们现在

19:01.980 --> 19:03.980
只处理的是数据

19:03.980 --> 19:05.980
没有跟任何的显示挂钩

19:05.980 --> 19:06.980
没有跟显示挂钩

19:07.980 --> 19:08.980
没有挂钩的原因呢

19:08.980 --> 19:09.980
主要原因呢

19:09.980 --> 19:11.980
是因为我没有去设置啥呢

19:11.980 --> 19:12.980
没有去设置

19:13.980 --> 19:15.980
玩家操作的方块

19:15.980 --> 19:17.980
这些方块里面的

19:17.980 --> 19:18.980
不是

19:18.980 --> 19:19.980
这个最终要显示

19:19.980 --> 19:20.980
靠这个东西对吧

19:20.980 --> 19:21.980
小的方块

19:21.980 --> 19:23.980
主要是靠这个东西

19:23.980 --> 19:24.980
那么没有去设置

19:24.980 --> 19:25.980
这个玩意儿

19:25.980 --> 19:26.980
没有去设置这个玩意儿

19:26.980 --> 19:28.980
那么这个时候呢

19:28.980 --> 19:29.980
我们可以怎么来处理

19:29.980 --> 19:30.980
这个问题呢

19:30.980 --> 19:31.980
如果我要显示的话

19:31.980 --> 19:33.980
假设我现在要做显示的话

19:33.980 --> 19:35.980
那么现在我怎么来处理

19:35.980 --> 19:36.980
这个问题

19:36.980 --> 19:37.980
当然这里的处理方式呢

19:37.980 --> 19:38.980
大家可以想象一下

19:38.980 --> 19:39.980
很有很多

19:39.980 --> 19:41.980
那么现在我们要探讨的是

19:41.980 --> 19:43.980
如果把它显示到界面上

19:43.980 --> 19:45.980
用哪种处理方式最好

19:47.980 --> 19:48.980
大家想一想啊

19:49.980 --> 19:50.980
其实啊

19:50.980 --> 19:51.980
这里的

19:51.980 --> 19:53.980
显示啊

19:53.980 --> 19:55.980
跟我们之前的Square

19:55.980 --> 19:57.980
非常的类似

19:57.980 --> 19:59.980
就是这个game内呢

19:59.980 --> 20:01.980
还有这么一个特点

20:01.980 --> 20:02.980
game内

20:02.980 --> 20:04.980
清楚

20:04.980 --> 20:06.980
什么时候

20:06.980 --> 20:08.980
进行

20:08.980 --> 20:10.980
显示的切换

20:10.980 --> 20:12.980
什么叫显示的切换

20:12.980 --> 20:13.980
一看

20:13.980 --> 20:15.980
这里一开始这个

20:15.980 --> 20:17.980
下一个方块显示到这儿的

20:17.980 --> 20:18.980
那么一会儿呢

20:18.980 --> 20:19.980
切换的时候

20:19.980 --> 20:21.980
下一个方块要切换到这边来

20:21.980 --> 20:22.980
对不对

20:22.980 --> 20:23.980
要切换到这边来

20:23.980 --> 20:24.980
然后呢

20:24.980 --> 20:26.980
这边要重新显示

20:26.980 --> 20:29.980
这些呢都属于显示的切换

20:29.980 --> 20:31.980
都属于显示的切换

20:31.980 --> 20:33.980
它非常清楚

20:33.980 --> 20:35.980
显示的时候进行显示的切换

20:35.980 --> 20:37.980
但不知道

20:37.980 --> 20:39.980
如何显示

20:39.980 --> 20:41.980
但不知道如何显示

20:41.980 --> 20:42.980
好

20:42.980 --> 20:43.980
那么这个时候呢

20:43.980 --> 20:45.980
跟那边Square也是一样的

20:45.980 --> 20:48.980
Square它知道什么时候显示

20:48.980 --> 20:50.980
表了你做标重新复制的

20:50.980 --> 20:52.980
它就要重新显示

20:52.980 --> 20:53.980
那但是呢

20:53.980 --> 20:54.980
它不知道的是什么呢

20:54.980 --> 20:56.980
不知道的是如何来进行显示

20:56.980 --> 20:57.980
显示到控制台

20:57.980 --> 20:58.980
显示到手机

20:58.980 --> 21:00.980
还是显示到浏览器上面

21:00.980 --> 21:01.980
它不知道

21:01.980 --> 21:02.980
于是呢

21:03.980 --> 21:04.980
提供一个接口

21:04.980 --> 21:06.980
让你给我复制

21:06.980 --> 21:07.980
好

21:07.980 --> 21:08.980
那么现在呢

21:08.980 --> 21:09.980
我们有同样的办法

21:09.980 --> 21:10.980
在game内里边

21:10.980 --> 21:12.980
我们同样的提供这么一个接口

21:12.980 --> 21:14.980
给它取个名字

21:14.980 --> 21:16.980
取个名字呢叫做

21:16.980 --> 21:17.980
叫做什么呢

21:17.980 --> 21:18.980
应该在这里写是吧

21:18.980 --> 21:19.980
Types里面写

21:19.980 --> 21:21.980
导出一个接口

21:21.980 --> 21:22.980
Interface

21:22.980 --> 21:24.980
取个名字叫做gamev2

21:27.980 --> 21:30.980
用于控制游戏显示的东西

21:30.980 --> 21:31.980
那么这里边呢

21:31.980 --> 21:33.980
用了这么一些函数

21:33.980 --> 21:35.980
需要你来实现

21:35.980 --> 21:36.980
好

21:36.980 --> 21:38.980
首先我们能想到的是

21:38.980 --> 21:39.980
有这么一个函数

21:39.980 --> 21:41.980
叫做showNext

21:41.980 --> 21:43.980
显示下一个

21:43.980 --> 21:45.980
显示下一个方块

21:45.980 --> 21:47.980
就是把下一个方块呢

21:47.980 --> 21:49.980
你设置好它的显示器

21:49.980 --> 21:51.980
把它显示到界面上

21:51.980 --> 21:52.980
比方说我们下一个方块呢

21:52.980 --> 21:53.980
在这儿

21:53.980 --> 21:54.980
对吧

21:54.980 --> 21:55.980
你把它显示出来

21:55.980 --> 21:56.980
好

21:56.980 --> 21:57.980
我们首先写到这么一个函数

21:57.980 --> 21:58.980
showNext

21:58.980 --> 21:59.980
好

21:59.980 --> 22:00.980
这个函数里边

22:00.980 --> 22:02.980
给你下一个方块的对象

22:02.980 --> 22:04.980
把Tyres对象给你

22:04.980 --> 22:06.980
这个square

22:06.980 --> 22:07.980
group

22:07.980 --> 22:08.980
好

22:08.980 --> 22:09.980
返回类型

22:09.980 --> 22:10.980
好

22:10.980 --> 22:11.980
我们首先写这么一个函数

22:11.980 --> 22:12.980
这个函数怎么实现

22:12.980 --> 22:13.980
你自己去实现

22:13.980 --> 22:14.980
我不管

22:14.980 --> 22:15.980
你具体怎么去显示

22:15.980 --> 22:16.980
把这个方块

22:16.980 --> 22:17.980
显示到控制台

22:17.980 --> 22:18.980
还是把这个方块

22:18.980 --> 22:19.980
显示到哪儿

22:19.980 --> 22:20.980
随便你

22:20.980 --> 22:21.980
总之呢

22:21.980 --> 22:22.980
我会给你提供这么一个函数

22:22.980 --> 22:24.980
让你去实现

22:24.980 --> 22:25.980
然后还可以想到

22:25.980 --> 22:26.980
这里边还有一个函数

22:26.980 --> 22:28.980
叫switch

22:28.980 --> 22:29.980
就是切换

22:29.980 --> 22:31.980
切换方块的时候

22:31.980 --> 22:32.980
会涉及到

22:32.980 --> 22:34.980
显示状态的改变

22:34.980 --> 22:35.980
你想啊

22:35.980 --> 22:37.980
你这个方块一开始在这儿

22:37.980 --> 22:39.980
然后切换到主面板的时候

22:39.980 --> 22:40.980
是不是会导致

22:40.980 --> 22:41.980
显示

22:41.980 --> 22:43.980
它的显示的动物对象

22:43.980 --> 22:45.980
或者是在手机上呢

22:45.980 --> 22:47.980
导致显示的面板

22:47.980 --> 22:48.980
或者是在控制台里边

22:48.980 --> 22:49.980
输出怎么样

22:49.980 --> 22:51.980
都会导致发生改变

22:51.980 --> 22:52.980
因此呢

22:52.980 --> 22:53.980
这一块呢

22:53.980 --> 22:54.980
我们也需要给你

22:54.980 --> 22:55.980
提供一个函数

22:55.980 --> 22:56.980
这个函数里面

22:56.980 --> 22:58.980
我会给你传两个参数

22:58.980 --> 23:00.980
就是切换面板

23:00.980 --> 23:02.980
切换的时候呢

23:02.980 --> 23:04.980
当前那个下一个方块

23:04.980 --> 23:06.980
当前那个方块

23:06.980 --> 23:07.980
把下一个方块切换到

23:07.980 --> 23:08.980
当前那个方块来

23:08.980 --> 23:10.980
我也会给你传一个对象

23:10.980 --> 23:12.980
square

23:12.980 --> 23:14.980
我最好打个注释吧

23:14.980 --> 23:15.980
就要打个注释

23:15.980 --> 23:17.980
这参数是啥意思

23:17.980 --> 23:19.980
显示下一个方块的时候

23:19.980 --> 23:20.980
那么这个参数啥意思呢

23:20.980 --> 23:22.980
这个参数表示的是

23:22.980 --> 23:25.980
下一个方块对象

23:25.980 --> 23:27.980
我也把方块对象给你

23:27.980 --> 23:28.980
那么你去搞定

23:28.980 --> 23:30.980
他怎么去显示

23:30.980 --> 23:31.980
这里呢

23:31.980 --> 23:32.980
也是一样

23:32.980 --> 23:35.980
当我切换方块的时候呢

23:35.980 --> 23:37.980
切换的方块

23:37.980 --> 23:38.980
方块对象

23:38.980 --> 23:39.980
我也会告诉你

23:39.980 --> 23:41.980
对象是啥

23:41.980 --> 23:42.980
好了

23:42.980 --> 23:44.980
有了这么两个函数

23:44.980 --> 23:46.980
有了这么两个函数之后

23:46.980 --> 23:47.980
我们要做的事情

23:47.980 --> 23:49.980
就是在game里边

23:49.980 --> 23:51.980
加上这么一个属性

23:51.980 --> 23:52.980
这个属性你可以加到这

23:52.980 --> 23:53.980
也可以加到构造函数里边

23:53.980 --> 23:54.980
比方说

23:54.980 --> 23:56.980
你要创建这个game

23:56.980 --> 23:57.980
这个游戏内的时候呢

23:57.980 --> 23:59.980
你要把这个显示

23:59.980 --> 24:00.980
显示对象给我

24:00.980 --> 24:01.980
那OK

24:01.980 --> 24:02.980
那我就可以写到这

24:02.980 --> 24:03.980
好

24:03.980 --> 24:04.980
我们在这里呢

24:04.980 --> 24:07.980
我们就写上这么一个属性

24:07.980 --> 24:09.980
game

24:09.980 --> 24:11.980
这个叫做512

24:11.980 --> 24:12.980
512

24:12.980 --> 24:14.980
它的内想是game512

24:14.980 --> 24:15.980
你要把我

24:15.980 --> 24:17.980
怎么去显示这个游戏

24:17.980 --> 24:19.980
这个画面怎么去显示

24:19.980 --> 24:20.980
你要把这个东西

24:20.980 --> 24:21.980
实现然后传给我

24:21.980 --> 24:23.980
传给我之后呢

24:23.980 --> 24:24.980
最开始的时候

24:24.980 --> 24:26.980
游戏刚开始的时候

24:26.980 --> 24:27.980
应该显示啥

24:27.980 --> 24:29.980
应该显示这个玩意

24:30.980 --> 24:31.980
主面吧

24:31.980 --> 24:32.980
还没有东西对吧

24:32.980 --> 24:33.980
但是下一个方块已经有了

24:33.980 --> 24:35.980
那么你要把下一个方块

24:35.980 --> 24:36.980
显示出来

24:36.980 --> 24:37.980
这就再次的说明了

24:37.980 --> 24:38.980
什么问题了

24:38.980 --> 24:39.980
就说

24:39.980 --> 24:42.980
我知道什么时候

24:42.980 --> 24:44.980
要去做显示

24:44.980 --> 24:45.980
怎么显示

24:45.980 --> 24:46.980
我不知道

24:46.980 --> 24:48.980
我能知道的是

24:48.980 --> 24:49.980
什么时候进行显示

24:49.980 --> 24:50.980
但是我不知道

24:50.980 --> 24:51.980
如何显示

24:51.980 --> 24:52.980
让你去实现

24:53.980 --> 24:54.980
好

24:54.980 --> 24:55.980
什么时候切换呢

24:55.980 --> 24:56.980
你看我们之前写过

24:56.980 --> 24:57.980
这么一个函数

24:57.980 --> 24:58.980
切换方块

24:58.980 --> 24:59.980
那这不就切换了吗

24:59.980 --> 25:00.980
对吧

25:00.980 --> 25:01.980
方块一切换

25:01.980 --> 25:02.980
怎么样呢

25:02.980 --> 25:04.980
我要去调用相应的函数

25:04.980 --> 25:05.980
512

25:05.980 --> 25:07.980
里边不是有switch这个函数吗

25:07.980 --> 25:08.980
切换的时候

25:08.980 --> 25:10.980
我会把切换的方块

25:10.980 --> 25:11.980
对象给你

25:11.980 --> 25:12.980
之前是next

25:12.980 --> 25:13.980
变成ker

25:13.980 --> 25:14.980
变成kerteros

25:14.980 --> 25:16.980
那么我会把这个对象给你

25:16.980 --> 25:18.980
那你剩下的事情去搞定吧

25:18.980 --> 25:19.980
怎么去移除动物元素

25:19.980 --> 25:21.980
怎么去操作你随便

25:21.980 --> 25:22.980
你去搞定

25:22.980 --> 25:23.980
好

25:23.980 --> 25:24.980
然后切换之后

25:24.980 --> 25:26.980
又要显示下一个方块了

25:26.980 --> 25:28.980
新的下一个方块又产生了

25:28.980 --> 25:30.980
因此我又要去调用

25:30.980 --> 25:31.980
shownext

25:31.980 --> 25:33.980
我要把下一个方块给你

25:33.980 --> 25:34.980
因为每一次切换

25:34.980 --> 25:35.980
它意味着

25:35.980 --> 25:37.980
下一个新的方块又产生了

25:37.980 --> 25:39.980
因此我这里

25:39.980 --> 25:41.980
又去显示下一个方块

25:41.980 --> 25:42.980
好了

25:42.980 --> 25:43.980
写好了这个512之后

25:43.980 --> 25:45.980
我们再来试一下

25:45.980 --> 25:46.980
那么它这里就在提示你

25:46.980 --> 25:47.980
你不能这样去做

25:47.980 --> 25:49.980
你还要给我传一个512

25:49.980 --> 25:51.980
它的类型是实现了这个接口的

25:51.980 --> 25:52.980
那咱们试一下

25:52.980 --> 25:54.980
试一下

25:54.980 --> 25:55.980
好

25:55.980 --> 25:57.980
甚至我们就可以直接在512里面

25:57.980 --> 25:59.980
创建一个新的类来进行处理的

25:59.980 --> 26:00.980
对吧

26:00.980 --> 26:02.980
直接这里面来处理吧

26:02.980 --> 26:03.980
比方说这里面

26:03.980 --> 26:04.980
我给它一个

26:04.980 --> 26:06.980
game512

26:06.980 --> 26:08.980
512TS

26:08.980 --> 26:09.980
这里面导出的类

26:09.980 --> 26:10.980
它专门来控制显示的

26:10.980 --> 26:13.980
class game512

26:13.980 --> 26:15.980
它去实现接口

26:15.980 --> 26:18.980
game

26:18.980 --> 26:20.980
好像名字重名了是吧

26:20.980 --> 26:22.980
好像重名了

26:22.980 --> 26:24.980
重名了的话

26:24.980 --> 26:25.980
我想一想

26:25.980 --> 26:26.980
我这里给它换一个吧

26:26.980 --> 26:27.980
这个换个名字

26:27.980 --> 26:29.980
那么同意使用

26:29.980 --> 26:32.980
game配戏512

26:32.980 --> 26:34.980
game配戏512

26:34.980 --> 26:35.980
这里

26:35.980 --> 26:36.980
这边也是

26:36.980 --> 26:37.980
game配戏512

26:37.980 --> 26:39.980
好 这边

26:39.980 --> 26:40.980
找不到名称

26:40.980 --> 26:41.980
从模块导入

26:41.980 --> 26:42.980
导入之后

26:42.980 --> 26:44.980
我们这里

26:44.980 --> 26:46.980
实现接口

26:46.980 --> 26:47.980
实现接口

26:47.980 --> 26:48.980
它这里用了

26:48.980 --> 26:50.980
esnx的模块的话

26:50.980 --> 26:51.980
就动态导入

26:51.980 --> 26:52.980
来搞定这个类型的

26:52.980 --> 26:53.980
那么这里

26:53.980 --> 26:55.980
我们可以不用动态导入

26:55.980 --> 26:57.980
不用动态导入

26:57.980 --> 26:59.980
把类型导入进来

26:59.980 --> 27:00.980
好 那么这个类里面去搞定

27:00.980 --> 27:02.980
那它还不好搞定吗

27:02.980 --> 27:03.980
它就已经明确了

27:03.980 --> 27:05.980
一定要显示到页面上对吧

27:05.980 --> 27:06.980
要显示到页面上

27:06.980 --> 27:07.980
还不好说吗

27:07.980 --> 27:09.980
显示下一个方块的时候

27:09.980 --> 27:10.980
以前咋做的

27:10.980 --> 27:12.980
显示下一个方块的时候

27:12.980 --> 27:13.980
是不是吧

27:13.980 --> 27:14.980
方块堆枪里面的

27:14.980 --> 27:15.980
这个什么玩意

27:15.980 --> 27:17.980
squares得到对吧

27:17.980 --> 27:19.980
把它的这些小方块得到

27:19.980 --> 27:20.980
然后循环

27:20.980 --> 27:22.980
循环这些小方块

27:22.980 --> 27:24.980
每次循环怎么样

27:24.980 --> 27:26.980
给这个小方块

27:26.980 --> 27:28.980
它的512复制

27:28.980 --> 27:30.980
你看以前是不是这样做的

27:30.980 --> 27:32.980
每一个小方块都有个512

27:32.980 --> 27:33.980
以前的512是啥

27:33.980 --> 27:34.980
是啥

27:34.980 --> 27:36.980
是不是就是一个square

27:36.980 --> 27:38.980
page

27:38.980 --> 27:40.980
square page 512

27:40.980 --> 27:41.980
这是以前做法

27:41.980 --> 27:43.980
那么以前的小方块

27:43.980 --> 27:45.980
要把显示到某一个地方

27:45.980 --> 27:47.980
那么我们使用这种方式

27:47.980 --> 27:49.980
把square给力

27:49.980 --> 27:50.980
把它对象给力

27:50.980 --> 27:51.980
然后

27:51.980 --> 27:53.980
这个接块位的容器给力

27:53.980 --> 27:55.980
你要显示到哪个容器里边

27:55.980 --> 27:57.980
小方块我们给它一个容器吧

27:57.980 --> 27:58.980
给它一个容器

27:58.980 --> 28:01.980
我们先把接块位倒进来

28:01.980 --> 28:02.980
好 哪个容器呢

28:02.980 --> 28:04.980
我们在页面上处理一下

28:04.980 --> 28:06.980
这个入扯里边

28:06.980 --> 28:07.980
我们给它

28:07.980 --> 28:09.980
给它两个东西吧

28:09.980 --> 28:11.980
给它两个东西

28:11.980 --> 28:14.980
一个是panel游戏面板

28:14.980 --> 28:16.980
一个是

28:16.980 --> 28:18.980
下一个方块

28:18.980 --> 28:21.980
下一个方块

28:21.980 --> 28:23.980
提示

28:23.980 --> 28:24.980
两个DIV

28:24.980 --> 28:25.980
一个是游戏面板

28:25.980 --> 28:27.980
一个是游戏的提示

28:27.980 --> 28:29.980
提示这里有个下一个方块

28:29.980 --> 28:30.980
next

28:30.980 --> 28:31.980
有下一个方块

28:31.980 --> 28:33.980
我就要把下一个方块显示到这

28:33.980 --> 28:35.980
我就把下一个方块显示到这

28:35.980 --> 28:36.980
就完成了

28:36.980 --> 28:37.980
那么这个区域

28:37.980 --> 28:39.980
我给它一个宽高吧

28:39.980 --> 28:41.980
一次来设置一下样式

28:41.980 --> 28:42.980
就这个入扯

28:42.980 --> 28:44.980
我给它设置成一个弹性盒

28:44.980 --> 28:45.980
flex

28:45.980 --> 28:46.980
这个靠左

28:46.980 --> 28:47.980
这个靠右

28:47.980 --> 28:49.980
设置成弹性盒

28:49.980 --> 28:51.980
设置成弹性盒之后

28:51.980 --> 28:52.980
我们看一下

28:52.980 --> 28:54.980
这个地方就不设置宽高了

28:54.980 --> 28:58.980
我们就把宽高设置到游戏面板里面来

28:58.980 --> 28:59.980
panel

28:59.980 --> 29:00.980
设置到游戏面板里面来

29:00.980 --> 29:01.980
宽高

29:01.980 --> 29:02.980
然后

29:02.980 --> 29:03.980
我们再想一想

29:03.980 --> 29:06.980
这个地方是背景颜色

29:06.980 --> 29:08.980
然后这个地方

29:08.980 --> 29:09.980
弹性盒

29:09.980 --> 29:12.980
这个地方我们就把它复制过来

29:12.980 --> 29:13.980
弹性盒

29:13.980 --> 29:17.980
给它设置一下justify content center

29:17.980 --> 29:19.980
设置一下弹性盒

29:19.980 --> 29:22.980
弹性项目的居中

29:22.980 --> 29:23.980
在主轴上居中

29:23.980 --> 29:25.980
这些都是CSS样式的

29:25.980 --> 29:28.980
就整个弹性盒里面的东西

29:28.980 --> 29:29.980
就这一块

29:29.980 --> 29:30.980
这一块他们都靠中

29:30.980 --> 29:32.980
靠中间显示

29:32.980 --> 29:33.980
panel

29:33.980 --> 29:34.980
这一块给它宽高为300

29:34.980 --> 29:36.980
背景颜色为黑色

29:36.980 --> 29:39.980
然后它里面由于它有方块

29:39.980 --> 29:41.980
所以说把它设置为relative

29:41.980 --> 29:42.980
因为方块是绝对定位

29:42.980 --> 29:44.980
然后这个next

29:44.980 --> 29:46.980
也是要设置一下

29:46.980 --> 29:47.980
next

29:47.980 --> 29:50.980
也是把它设置为相对为定位

29:50.980 --> 29:52.980
然后给它设置个宽高

29:52.980 --> 29:53.980
宽高的话

29:53.980 --> 29:54.980
这里就

29:54.980 --> 29:56.980
我看每一个方块是多少

29:56.980 --> 30:00.980
每一个方块是30

30:00.980 --> 30:01.980
30

30:01.980 --> 30:02.980
那么这里呢

30:02.980 --> 30:03.980
就给它设置为

30:03.980 --> 30:05.980
我看一下设置为多少

30:05.980 --> 30:06.980
120吧

30:06.980 --> 30:07.980
120

30:07.980 --> 30:10.980
宽高为120

30:10.980 --> 30:12.980
下一个方块就显示到这里边

30:12.980 --> 30:14.980
就显示到这里边

30:14.980 --> 30:15.980
好

30:15.980 --> 30:17.980
那么这个方块就显示到这

30:17.980 --> 30:18.980
主面就显示到这

30:18.980 --> 30:19.980
好

30:19.980 --> 30:20.980
那么我们到这边来

30:20.980 --> 30:22.980
下一个方块怎么显示

30:22.980 --> 30:24.980
那是不是就是多了

30:24.980 --> 30:25.980
啥呢

30:25.980 --> 30:26.980
啥呢

30:26.980 --> 30:28.980
就是

30:28.980 --> 30:29.980
next

30:29.980 --> 30:30.980
对不对

30:30.980 --> 30:31.980
显示到这一块

30:31.980 --> 30:33.980
下一个方块就显示到这

30:33.980 --> 30:35.980
要切换的时候怎么切换呢

30:35.980 --> 30:37.980
切换的时候怎么切换

30:37.980 --> 30:40.980
那么这个方块是要切换的方块

30:40.980 --> 30:42.980
这个方块是要切换的方块

30:42.980 --> 30:43.980
那么首先

30:43.980 --> 30:44.980
首先怎么样

30:44.980 --> 30:47.980
它要从下一个方块那边移除掉

30:47.980 --> 30:48.980
对不对

30:48.980 --> 30:50.980
得到

30:50.980 --> 30:53.980
它的每一个小方块

30:53.980 --> 30:55.980
它的每一个小方块

30:55.980 --> 30:56.980
每一个小方块呢

30:56.980 --> 30:58.980
首先它的512

30:58.980 --> 30:59.980
要移除掉

30:59.980 --> 31:02.980
它里面不是之前写过这个函数吗

31:02.980 --> 31:03.980
之前我们看一下

31:03.980 --> 31:06.980
每一个小方块的512

31:06.980 --> 31:09.980
它不是可以显示可以移除吗

31:09.980 --> 31:10.980
对不对

31:10.980 --> 31:11.980
好

31:11.980 --> 31:13.980
先把这个小方块的512

31:13.980 --> 31:14.980
调用它的函数

31:14.980 --> 31:15.980
把它移除掉

31:15.980 --> 31:16.980
得不到呢

31:16.980 --> 31:18.980
512

31:18.980 --> 31:20.980
2

31:20.980 --> 31:21.980
512

31:21.980 --> 31:22.980
它有可能是安迪范

31:22.980 --> 31:23.980
对吧

31:23.980 --> 31:24.980
它有可能是安迪范

31:24.980 --> 31:25.980
那么我们肯定这里

31:25.980 --> 31:26.980
它不可能是安迪范

31:26.980 --> 31:27.980
要切换嘛

31:27.980 --> 31:28.980
所以说remove

31:28.980 --> 31:29.980
先把它移除掉

31:29.980 --> 31:30.980
不再显示

31:30.980 --> 31:32.980
然后给它512重新复制

31:32.980 --> 31:34.980
重新复制square

31:34.980 --> 31:36.980
配级512

31:36.980 --> 31:38.980
sql

31:38.980 --> 31:40.980
panel

31:40.980 --> 31:41.980
把这个小方块显示到

31:41.980 --> 31:43.980
主面板里边了

31:43.980 --> 31:45.980
就写完这个显示了

31:45.980 --> 31:46.980
写完了之后

31:46.980 --> 31:48.980
我们再在index里边

31:48.980 --> 31:49.980
创建一个游戏对象

31:49.980 --> 31:51.980
游戏对象创建好了之后

31:51.980 --> 31:53.980
我给它一个512

31:53.980 --> 31:56.980
配级512

31:56.980 --> 31:59.980
把这个对象给它

31:59.980 --> 32:03.670
好我们再来看

32:03.670 --> 32:05.670
一开始呢

32:05.670 --> 32:07.670
本来是在那个时候里边了

32:07.670 --> 32:08.670
那个时候里边了

32:08.670 --> 32:09.670
我们看一下那个时候

32:09.670 --> 32:10.670
它现在跑到主面板了

32:10.670 --> 32:11.670
为什么跑到主面板

32:11.670 --> 32:12.670
因为我调用了start

32:12.670 --> 32:14.670
如果我没有调用start

32:14.670 --> 32:16.670
那么它应该在那个时候的

32:16.670 --> 32:17.670
面板里边

32:17.670 --> 32:18.670
我们来看一下那个时候的那边

32:18.670 --> 32:20.670
为什么没有显示出来

32:20.670 --> 32:21.670
那个时候里边

32:21.670 --> 32:23.670
宽高为0和0

32:23.670 --> 32:25.670
宽高为0和0

32:25.670 --> 32:29.670
那这里的我设置的宽高是

32:29.670 --> 32:33.670
120乘以120

32:33.670 --> 32:36.670
那现在为什么没有这个

32:36.670 --> 32:37.670
显示呢

32:37.670 --> 32:38.670
我看一下

32:38.670 --> 32:42.750
为什么样式没有生效

32:42.750 --> 32:44.750
我这里写错了对吧

32:44.750 --> 32:45.750
应该写为id

32:45.750 --> 32:46.750
应该写为id

32:46.750 --> 32:48.750
保存一下

32:48.750 --> 32:50.750
你看一开始显示到

32:50.750 --> 32:51.750
那个时候里边

32:51.750 --> 32:52.750
一开始显示到这儿

32:52.750 --> 32:53.750
然后呢

32:53.750 --> 32:55.750
我们一会儿调用启动的时候

32:55.750 --> 32:56.750
它就从那个时候

32:56.750 --> 32:58.750
显示到这边了

32:58.750 --> 33:00.750
但是现在有个问题就是

33:00.750 --> 33:02.750
它咋这样的显示呢

33:02.750 --> 33:04.750
它咋这样的显示呢

33:04.750 --> 33:06.750
这是因为

33:06.750 --> 33:08.750
咱们的这个方块

33:08.750 --> 33:09.750
它的坐标

33:09.750 --> 33:11.750
设置的是啥呢

33:11.750 --> 33:14.750
设置的是0和0

33:14.750 --> 33:16.750
它的坐标设置的是0和0

33:16.750 --> 33:17.750
因此呢

33:17.750 --> 33:18.750
造成了这种

33:18.750 --> 33:20.750
这种显示的现象

33:20.750 --> 33:21.750
就这个坐标啊

33:21.750 --> 33:23.750
我们看一下

33:23.750 --> 33:24.750
gaming里边

33:24.750 --> 33:27.380
我们当我们

33:27.380 --> 33:29.380
创建一个

33:29.380 --> 33:31.380
创建一个方块的时候

33:31.380 --> 33:34.380
给它的中心点坐标是0和0

33:34.380 --> 33:35.380
因此呢

33:35.380 --> 33:36.380
中心点是0和0

33:36.380 --> 33:37.380
那么一开始

33:37.380 --> 33:38.380
是不是这个点

33:38.380 --> 33:39.380
就应该是

33:39.380 --> 33:40.380
横坐标应该是负数了

33:40.380 --> 33:41.380
对吧

33:41.380 --> 33:42.380
那么它就跑出来了

33:42.380 --> 33:44.380
就这个原因造成了

33:44.380 --> 33:45.380
那么我们一开始

33:45.380 --> 33:46.380
应该设置

33:46.380 --> 33:48.380
怎么样的坐标比较合适呢

33:48.380 --> 33:50.380
那又想这个问题了

33:50.380 --> 33:51.380
我一开始

33:51.380 --> 33:52.380
应该设置

33:52.380 --> 33:54.380
什么样的坐标比较合适

33:54.380 --> 33:57.820
想这么一个问题

33:57.820 --> 34:00.330
其实啊

34:00.330 --> 34:01.330
这里呢

34:01.330 --> 34:03.330
可以经过一个计算

34:03.330 --> 34:05.330
怎么计算呢

34:05.330 --> 34:07.330
我们的目标是

34:07.330 --> 34:09.330
保证这个方块的

34:09.330 --> 34:11.330
每一个小方块

34:11.330 --> 34:13.330
它的坐标

34:13.330 --> 34:15.330
都不可能

34:15.330 --> 34:16.330
是负数

34:16.330 --> 34:18.330
都不可能超出边界

34:18.330 --> 34:19.330
保证这个方块的

34:19.330 --> 34:20.330
每一个小方块

34:20.330 --> 34:21.330
它的坐标

34:21.330 --> 34:23.330
都不可能超出边界

34:23.330 --> 34:25.330
我们要做这么一个处理

34:25.330 --> 34:27.330
那么这个处理呢

34:27.330 --> 34:28.330
肯定想象

34:28.330 --> 34:29.330
那肯定要经过

34:29.330 --> 34:30.330
一个计算

34:30.330 --> 34:31.330
对不对

34:31.330 --> 34:32.330
肯定要经过

34:32.330 --> 34:34.330
不要着急啊

34:34.330 --> 34:35.330
虽然这是个小问题

34:35.330 --> 34:36.330
但是你不扔人处理的话

34:36.330 --> 34:38.330
它仍然会困扰你

34:38.330 --> 34:39.330
不要着急

34:39.330 --> 34:40.330
我们这里呢

34:40.330 --> 34:42.330
会举专门来写一个函数

34:42.330 --> 34:44.330
来计算

34:44.330 --> 34:46.330
中心点坐标

34:46.330 --> 34:48.330
好我们这里

34:48.330 --> 34:50.330
好我来这里呢

34:50.330 --> 34:51.330
写这么一个

34:51.330 --> 34:53.330
私有的函数

34:53.330 --> 34:55.330
给它取个名字啊

34:55.330 --> 34:57.330
叫做reset

34:57.330 --> 34:59.330
重新设置

34:59.330 --> 35:01.330
center point

35:01.330 --> 35:04.330
重新设置中心点的坐标

35:04.330 --> 35:05.330
你给我一个什么东西呢

35:05.330 --> 35:07.330
你给我两个参数

35:07.330 --> 35:08.330
第一个参数呢

35:08.330 --> 35:10.330
是宽度

35:10.330 --> 35:13.330
就是面板的宽度

35:13.330 --> 35:14.330
面板的宽度

35:14.330 --> 35:16.330
我要在哪个区域显示

35:16.330 --> 35:17.330
我无所谓

35:17.330 --> 35:19.330
但是呢你要把这个区域的宽度告诉我

35:19.330 --> 35:21.330
注意这个宽度啊

35:21.330 --> 35:23.330
指的是逻辑宽度

35:23.330 --> 35:24.330
就像这样子

35:24.330 --> 35:25.330
像这样子

35:25.330 --> 35:27.330
一个一个的逻辑宽度

35:27.330 --> 35:29.330
那么

35:29.330 --> 35:30.330
这不是相数值啊

35:30.330 --> 35:31.330
这里不是相数值

35:31.330 --> 35:33.330
宽度有几个格子

35:33.330 --> 35:34.330
是这么个意思

35:34.330 --> 35:36.330
我希望呢把它横向的

35:36.330 --> 35:38.330
显示在格子的中间

35:38.330 --> 35:41.330
和最上方

35:41.330 --> 35:43.330
然后你还要告诉我啥呢

35:43.330 --> 35:45.330
还要告诉我一个terrors

35:45.330 --> 35:47.330
就是方块对象

35:47.330 --> 35:49.330
告诉我这么两个东西

35:49.330 --> 35:51.330
我帮你重新设置它的中心点坐标

35:51.330 --> 35:54.640
好这里

35:54.640 --> 35:58.640
设置中心点坐标

35:58.640 --> 36:00.640
以达到

36:00.640 --> 36:02.640
让

36:02.640 --> 36:04.640
该方块

36:04.640 --> 36:06.640
该

36:06.640 --> 36:08.640
让该方块

36:08.640 --> 36:10.640
该方块

36:10.640 --> 36:12.640
出现在

36:12.640 --> 36:13.640
出现在哪呢

36:13.640 --> 36:18.080
出现在区域的

36:18.080 --> 36:20.080
中上方

36:20.080 --> 36:22.080
中上

36:22.080 --> 36:24.080
中上

36:24.080 --> 36:25.080
上方

36:25.080 --> 36:27.080
出现在这个位置

36:27.080 --> 36:29.080
水平方向上在中间

36:29.080 --> 36:31.080
垂直方向上在上边

36:31.080 --> 36:32.080
出现在这个位置

36:32.080 --> 36:33.080
也就是说

36:33.080 --> 36:34.080
看这个图

36:34.080 --> 36:35.080
出现在哪呢

36:35.080 --> 36:36.080
出现在这种位置

36:36.080 --> 36:38.080
当然这个方块没法绝对正中

36:38.080 --> 36:40.080
没法绝对的去中

36:40.080 --> 36:42.080
因为它格子数量的问题

36:42.080 --> 36:43.080
它没法绝对去中

36:43.080 --> 36:44.080
但是呢

36:44.080 --> 36:46.080
尽量出现在中间

36:46.080 --> 36:48.080
然后呢上边的话

36:48.080 --> 36:50.080
如果超出了

36:50.080 --> 36:51.080
那么要向下一种

36:51.080 --> 36:52.080
比方的这种情况就不允许

36:52.080 --> 36:53.080
不允许

36:53.080 --> 36:55.080
那么最终要移动到这

36:55.080 --> 36:57.080
移动到这

36:57.080 --> 36:59.080
这个方块的形状是这样子

36:59.080 --> 37:00.080
要移动到这

37:00.080 --> 37:01.080
总之

37:01.080 --> 37:02.080
我做这么一个处理

37:02.080 --> 37:03.080
做这么一个处理

37:03.080 --> 37:04.080
好

37:04.080 --> 37:05.080
我们来处理一下这个问题

37:05.080 --> 37:06.080
其实这个问题

37:06.080 --> 37:08.080
并不复杂

37:08.080 --> 37:09.080
怎么处理呢

37:09.080 --> 37:10.080
你把方块对象告诉我了

37:10.080 --> 37:11.080
你把宽度告诉我了

37:11.080 --> 37:12.080
那么中线的横座标

37:12.080 --> 37:13.080
就已经出来了

37:13.080 --> 37:15.080
中线的横座标

37:15.080 --> 37:16.080
就已经出来了

37:16.080 --> 37:17.080
横座标X

37:17.080 --> 37:18.080
应该等于多少

37:18.080 --> 37:19.080
宽度

37:19.080 --> 37:21.080
中线的宽度

37:21.080 --> 37:22.080
就是整个宽度

37:22.080 --> 37:23.080
处于2

37:23.080 --> 37:24.080
对不对

37:24.080 --> 37:25.080
或者是处于2-1

37:25.080 --> 37:26.080
看你都行

37:26.080 --> 37:27.080
看这个地方

37:27.080 --> 37:29.080
中心点假设是在这

37:29.080 --> 37:31.080
中心点假设是在这

37:31.080 --> 37:33.080
假设这个地方

37:33.080 --> 37:35.080
先出一点

37:35.080 --> 37:37.080
假设中心点在这

37:37.080 --> 37:38.080
那么你看一下

37:38.080 --> 37:39.080
横向有多少个格子

37:39.080 --> 37:41.080
横向有8个格子对吧

37:41.080 --> 37:44.080
8个格子处于2等于4

37:44.080 --> 37:46.080
那么这个中心点的作表

37:46.080 --> 37:48.080
是0,1,2,3

37:48.080 --> 37:50.080
就4-1

37:50.080 --> 37:51.080
看你自己

37:51.080 --> 37:52.080
要不要减这个1

37:52.080 --> 37:53.080
其实无所谓

37:53.080 --> 37:54.080
如果不减1的话

37:54.080 --> 37:55.080
中心点就在这

37:55.080 --> 37:58.080
总之你处理一下这个问题

37:58.080 --> 37:59.080
好

37:59.080 --> 38:00.080
那么我这里比方简易吧

38:00.080 --> 38:01.080
简易

38:01.080 --> 38:03.080
横座标就算出来了

38:03.080 --> 38:05.080
那么中座标

38:05.080 --> 38:07.080
中座标怎么办呢

38:07.080 --> 38:08.080
中座标

38:08.080 --> 38:10.080
我们可以用这种方式处理

38:10.080 --> 38:11.080
先处理横座标

38:11.080 --> 38:12.080
中座标

38:12.080 --> 38:13.080
我们来看一下

38:13.080 --> 38:14.080
它有没有

38:14.080 --> 38:15.080
有一个方块

38:15.080 --> 38:18.080
不在边界之内

38:18.080 --> 38:20.080
不在边界之内

38:20.080 --> 38:21.080
有的跑到边界外面去了

38:21.080 --> 38:22.080
如果有的话

38:22.080 --> 38:24.080
就向下移动一个

38:25.080 --> 38:27.080
先把中座标设为0吧

38:27.080 --> 38:28.080
先设为0

38:28.080 --> 38:29.080
然后呢

38:29.080 --> 38:31.080
设置一下terras

38:31.080 --> 38:32.080
terras的啥呢

38:32.080 --> 38:37.080
就是point

38:37.080 --> 38:38.080
centerpoint

38:38.080 --> 38:40.080
设置一下它

38:40.080 --> 38:42.080
然后xy全过去

38:42.080 --> 38:45.080
先把中心点作标设置为这个

38:45.080 --> 38:47.080
然后再怎么做什么呢

38:47.080 --> 38:48.080
然后看一下

38:48.080 --> 38:50.080
其中有没有一个作标

38:50.080 --> 38:51.080
是小于0的

38:51.080 --> 38:53.080
就是y作标是小于0的

38:53.080 --> 38:55.080
判断一下

38:55.080 --> 38:57.080
terras这些小方块里边

38:57.080 --> 38:59.080
有没有存在这么一个条件

38:59.080 --> 39:01.080
满足条件的

39:01.080 --> 39:02.080
什么条件呢

39:02.080 --> 39:04.080
就是它的point

39:04.080 --> 39:06.080
y作标小于0

39:06.080 --> 39:08.080
有没有满足这个条件的

39:08.080 --> 39:09.080
如果有的话

39:09.080 --> 39:11.080
说明还不行

39:11.080 --> 39:12.080
还要往下一动

39:12.080 --> 39:13.080
还要往下一动

39:13.080 --> 39:15.080
terras

39:15.080 --> 39:18.080
可以用这种方式来移动

39:18.080 --> 39:22.670
terras入

39:22.670 --> 39:24.670
这里

39:24.670 --> 39:27.670
moo

39:27.670 --> 39:29.670
把terras传进去

39:29.670 --> 39:32.670
然后moo移动方向

39:32.670 --> 39:34.670
moo direction

39:34.670 --> 39:37.670
往下一动一个

39:37.670 --> 39:39.670
当然这里可以用wile循环

39:39.670 --> 39:40.670
wile循环

39:40.670 --> 39:41.670
如果移动一个之后

39:41.670 --> 39:42.670
还不行

39:42.670 --> 39:43.670
大家就再移动一个

39:43.670 --> 39:45.670
还不行就再移动一个

39:45.670 --> 39:47.670
通过这种方式来进行处理

39:47.670 --> 39:48.670
总之呢

39:48.670 --> 39:51.670
把它变成移动位置

39:51.670 --> 39:53.670
把它移动到正确的位置

39:54.670 --> 39:57.670
这个地方有没有可能出现死循环

39:57.670 --> 39:59.670
大家想一想

39:59.670 --> 40:01.670
有没有可能出现死循环

40:02.670 --> 40:04.670
这是有可能出现死循环的

40:04.670 --> 40:06.670
是有可能会出现死循环的

40:06.670 --> 40:08.670
这个地方大家注意一下

40:08.670 --> 40:10.670
这个地方有可能会产生问题

40:10.670 --> 40:12.670
因为它如果出现这种情况

40:12.670 --> 40:14.670
它这个格子只有一行

40:14.670 --> 40:16.670
它只有这么一行

40:16.670 --> 40:17.670
那你想一想

40:17.670 --> 40:19.670
是不是一开始是这个样子

40:19.670 --> 40:21.670
比方说

40:21.670 --> 40:23.670
我把下面插出了

40:23.670 --> 40:28.260
插板

40:28.260 --> 40:33.150
怎么把它调大一点

40:33.150 --> 40:34.150
插板调大一点

40:34.150 --> 40:36.150
我重新建一个

40:37.150 --> 40:39.150
比方说是这种情况

40:40.150 --> 40:42.150
不花那么长吗

40:43.150 --> 40:48.510
只有一格

40:48.510 --> 40:52.400
比方说这个面板

40:52.400 --> 40:54.400
中心点在哪呢

40:54.400 --> 40:56.400
中心点

40:56.400 --> 40:57.400
比方说在这吧

40:57.400 --> 40:59.400
在这

41:00.400 --> 41:01.400
看着

41:01.400 --> 41:03.400
它的形状是这样子的

41:03.400 --> 41:05.400
那么现在是不是出了问题

41:05.400 --> 41:07.400
你往下一个能移动吗

41:07.400 --> 41:09.400
是不是没法移动

41:09.400 --> 41:10.400
能不能移动

41:10.400 --> 41:11.400
没有办法移动

41:11.400 --> 41:13.400
是没有办法移动的

41:13.400 --> 41:15.400
因为这个函数

41:15.400 --> 41:16.400
它要判断的

41:16.400 --> 41:17.400
它判断往下移动

41:17.400 --> 41:19.400
有没有插出边界

41:19.400 --> 41:21.400
往下移动有没有插出边界

41:21.400 --> 41:22.400
因此它发现

41:22.400 --> 41:23.400
往下移动也移动不了

41:23.400 --> 41:24.400
因此它没法移动

41:24.400 --> 41:26.400
那么这就死循环了

41:26.400 --> 41:27.400
当然这种情况

41:27.400 --> 41:29.400
本身是你游戏设计的有问题

41:29.400 --> 41:30.400
你这个游戏的面板

41:30.400 --> 41:31.400
怎么只有这么一点

41:31.400 --> 41:33.400
那是你自己的问题

41:33.400 --> 41:35.400
这个地方是你自己的问题

41:35.400 --> 41:36.400
所以说呢

41:37.400 --> 41:38.400
看你要不要考虑这个点

41:38.400 --> 41:40.400
但是如果出现这个问题

41:40.400 --> 41:42.400
这个程序就直接卡死了

41:42.400 --> 41:43.400
就直接卡死了

41:43.400 --> 41:45.400
所以说这里怎么处理呢

41:45.400 --> 41:47.400
我们还是用这种方式处理好一点

41:47.400 --> 41:49.400
往下移动的时候呢

41:49.400 --> 41:50.400
我们就强行移动

41:50.400 --> 41:51.400
强行移动

41:51.400 --> 41:53.400
square 5

41:54.400 --> 41:56.400
square 4一起

41:57.400 --> 41:59.400
把每一个小方块的y座标加一

41:59.400 --> 42:01.400
把每一个小方块的y座标

42:01.400 --> 42:03.400
破影者重新设置一下

42:03.400 --> 42:04.400
设置为啥呢

42:04.400 --> 42:06.400
设置为x不变

42:06.400 --> 42:07.400
x不变

42:07.400 --> 42:08.400
破影者x

42:08.400 --> 42:10.400
然后y座标加一

42:10.400 --> 42:12.400
sq 破影者 y 加一

42:13.400 --> 42:15.400
通过这种方式来进行实现

42:15.400 --> 42:16.400
不然的话

42:16.400 --> 42:17.400
这个循环有可能是

42:17.400 --> 42:18.400
永远导致死循环

42:18.400 --> 42:19.400
这样子呢

42:19.400 --> 42:20.400
就不会导致死循环了

42:20.400 --> 42:21.400
尽管呢

42:21.400 --> 42:22.400
它可能往下一动

42:22.400 --> 42:23.400
满足不了

42:23.400 --> 42:25.400
满足不了游戏规则

42:26.400 --> 42:27.400
至少呢

42:28.400 --> 42:30.400
可以保证不会出现死循环

42:30.400 --> 42:31.400
我们先写到这吧

42:31.400 --> 42:32.400
之后呢

42:32.400 --> 42:33.400
我们再考虑一些细节的问题

42:33.400 --> 42:34.400
先写到这

42:35.400 --> 42:36.400
好 这样子呢

42:36.400 --> 42:37.400
我们就设置了

42:37.400 --> 42:38.400
这个方块的

42:38.400 --> 42:39.400
方块的中心点座标

42:39.400 --> 42:42.400
始终保持在区域的中上方

42:43.400 --> 42:45.400
有了这个函数之后

42:45.400 --> 42:46.400
你看一下什么时候要调用

42:47.400 --> 42:48.400
游戏最开始的时候

42:48.400 --> 42:50.400
产生下一个方块的时候

42:50.400 --> 42:51.400
所以要调用一下

42:52.400 --> 42:54.400
先调用一下再说吧

42:54.400 --> 42:56.400
你的一个座标有可能会出现

42:56.400 --> 42:57.400
出现问题的

42:57.400 --> 42:58.400
所以我先调用

42:58.400 --> 42:59.400
set

42:59.400 --> 43:01.400
reset center point

43:01.400 --> 43:03.400
宽度告诉你

43:03.400 --> 43:04.400
宽度是多少

43:04.400 --> 43:05.400
我们可以配置一下

43:05.400 --> 43:06.400
可以在游戏配置里边

43:06.400 --> 43:08.400
我们之前配置过面板的宽度

43:08.400 --> 43:10.400
然后再配置一下 next size

43:11.400 --> 43:12.400
下一个宽度

43:12.400 --> 43:14.400
下一个宽度的话就是

43:14.400 --> 43:16.400
比方说宽度为4

43:17.400 --> 43:19.400
高度为4

43:19.400 --> 43:21.400
比方配置这么一个值

43:21.400 --> 43:22.400
好 那么这边呢

43:22.400 --> 43:23.400
我们就可以使用

43:23.400 --> 43:25.400
game.confid

43:25.400 --> 43:27.400
next size

43:27.400 --> 43:28.400
维持

43:28.400 --> 43:29.400
宽度告诉你

43:29.400 --> 43:30.400
然后把下一个

43:30.400 --> 43:32.400
我要设置的是下一个

43:32.400 --> 43:34.400
方块的座标告诉你

43:34.400 --> 43:35.400
好 告诉你过后

43:35.400 --> 43:36.400
你去重新设置吧

43:36.400 --> 43:38.400
你去帮我把设置

43:38.400 --> 43:40.400
好 那么咱们再来看一下

43:40.400 --> 43:41.400
可以看一下

43:41.400 --> 43:43.400
现在是不是没问题了

43:43.400 --> 43:45.400
但是白色现在是不是不太好了

43:45.400 --> 43:46.400
白色就不太好了

43:46.400 --> 43:47.400
我们再

43:47.400 --> 43:48.400
控制一下

43:48.400 --> 43:51.400
颜色这一块就不要白色了

43:51.400 --> 43:52.400
白色不要

43:53.400 --> 43:54.400
你看

43:54.400 --> 43:56.400
它现在不会跑外面去了

43:56.400 --> 43:57.400
就不会超出了

43:58.400 --> 43:59.400
当然了

43:59.400 --> 44:00.400
你可以控制一下

44:00.400 --> 44:02.400
他们质量的距离

44:02.400 --> 44:03.400
我们后面再说吧

44:03.400 --> 44:05.400
好 那么这一块搞定了

44:05.400 --> 44:07.400
这一块搞定了

44:07.400 --> 44:09.400
好 我们再来想一想

44:10.400 --> 44:12.400
我们现在呢

44:12.400 --> 44:13.400
游戏开始过后

44:13.400 --> 44:14.400
我们来看一下

44:14.400 --> 44:16.400
游戏开始过后

44:16.400 --> 44:24.380
游戏开始

44:25.380 --> 44:26.380
好 游戏开始过后

44:26.380 --> 44:27.380
你会发现

44:27.380 --> 44:28.380
没有什么问题的

44:28.380 --> 44:29.380
对吧

44:29.380 --> 44:31.380
那这个地方又出问题了

44:31.380 --> 44:32.380
这边没有问题

44:32.380 --> 44:34.380
那这个地方是不是又出问题了

44:34.380 --> 44:35.380
又出问题了

44:35.380 --> 44:36.380
所以这里又

44:36.380 --> 44:38.380
为什么又出问题了呢

44:38.380 --> 44:39.380
它怎么回事呢

44:39.380 --> 44:40.380
它怎么又出问题了

44:40.380 --> 44:42.380
这里是因为

44:42.380 --> 44:45.380
我们再产生了下一个方块之后

44:45.380 --> 44:46.380
你看这

44:46.380 --> 44:52.100
在切换方块的时候

44:52.100 --> 44:53.100
我又产生了方块

44:53.100 --> 44:55.100
是不是还是个负责的零和零

44:55.100 --> 44:56.100
对不对

44:57.100 --> 44:58.100
那么这里呢

44:58.100 --> 45:00.100
我们还得调用一次

45:02.100 --> 45:04.100
宽度传进去

45:08.100 --> 45:10.100
然后呢 方块传进去

45:10.100 --> 45:11.100
还得调用一次

45:11.100 --> 45:14.100
当它们帮我重新设置一下座表

45:14.100 --> 45:19.530
好 我们来看一下

45:19.530 --> 45:22.530
是不是有的时候还是会出问题

45:22.530 --> 45:23.530
我们再来看一下

45:23.530 --> 45:24.530
这些问题

45:24.530 --> 45:25.530
这些问题都是

45:25.530 --> 45:26.530
细致摸解的问题了

45:26.530 --> 45:27.530
都很好解决了

45:27.530 --> 45:28.530
你看这个地方

45:28.530 --> 45:29.530
出问题了

45:29.530 --> 45:32.530
是因为我们那个Panel

45:32.530 --> 45:34.530
就是下一个出现的方块

45:34.530 --> 45:36.530
它只有四格

45:36.530 --> 45:38.530
横向只有四格

45:38.530 --> 45:39.530
那如果

45:39.530 --> 45:41.530
它的中心点座标在这

45:41.530 --> 45:42.530
你看在这

45:42.530 --> 45:43.530
那左边

45:43.530 --> 45:46.530
是不是得有两个空板

45:46.530 --> 45:47.530
但是它一共只有四格

45:47.530 --> 45:48.530
所以不够的

45:48.530 --> 45:49.530
那么这个时候

45:49.530 --> 45:51.530
它确实处理不了

45:51.530 --> 45:52.530
这个问题确实麻烦

45:52.530 --> 45:53.530
那怎么办

45:53.530 --> 45:55.530
那你最好的办法

45:55.530 --> 45:57.530
就是把配置

45:57.530 --> 45:58.530
给它加多一点

45:58.530 --> 46:00.530
比方说加成六格

46:00.530 --> 46:02.530
或者是八格都可以

46:02.530 --> 46:04.530
宽度给它加多一点

46:04.530 --> 46:05.530
那么这个地方就搞定了

46:05.530 --> 46:06.530
对吧

46:06.530 --> 46:07.530
这个东西不用纠结

46:07.530 --> 46:08.530
因为你这个

46:08.530 --> 46:09.530
要玩这个游戏

46:09.530 --> 46:12.530
总有一个最小的宽度

46:12.530 --> 46:13.530
因此这个地方

46:13.530 --> 46:14.530
我们先把搞定

46:14.530 --> 46:15.530
好

46:15.530 --> 46:16.530
然后我们再来看

46:16.530 --> 46:17.530
再来看

46:17.530 --> 46:19.530
那么现在呢

46:19.530 --> 46:20.530
八个我们再

46:20.530 --> 46:21.530
设成六个吧

46:21.530 --> 46:22.530
设成五个

46:22.530 --> 46:23.530
我们看一下

46:23.530 --> 46:24.530
设成五个

46:24.530 --> 46:26.530
好 主要是说这个问题

46:27.530 --> 46:28.530
设成五个之后

46:28.530 --> 46:30.530
这边怎么出问题了

46:30.530 --> 46:33.530
这边怎么出问题了

46:33.530 --> 46:34.530
是怎么回事

46:34.530 --> 46:35.530
怎么回事呢

46:35.530 --> 46:36.530
为什么只有一半的

46:36.530 --> 46:37.530
怎么会出现

46:37.530 --> 46:39.530
这种整体的现象

46:39.530 --> 46:40.530
这个都是细致磨叶的问题

46:40.530 --> 46:41.530
这些问题都很好解决

46:41.530 --> 46:43.530
你看就明白了

46:43.530 --> 46:44.530
因为五呢

46:44.530 --> 46:45.530
它处一二的余数

46:45.530 --> 46:47.530
处不经

46:47.530 --> 46:49.530
它这里处出来是小数

46:49.530 --> 46:50.530
就是这个原因

46:50.530 --> 46:51.530
其他也没有啥

46:51.530 --> 46:52.530
就是这个原因

46:52.530 --> 46:53.530
那么这里呢

46:53.530 --> 46:54.530
我们可以

46:54.530 --> 46:55.530
把变成整数

46:56.530 --> 46:58.530
相上取整

47:00.530 --> 47:01.530
这样子再处理

47:01.530 --> 47:03.530
这个很简单

47:03.530 --> 47:04.530
这个很简单

47:04.530 --> 47:05.530
然后我们再解决

47:05.530 --> 47:06.530
这边这个问题

47:06.530 --> 47:08.530
那边是集中的

47:08.530 --> 47:09.530
没什么问题

47:09.530 --> 47:10.530
那边是集中的

47:10.530 --> 47:11.530
那到这边

47:11.530 --> 47:12.530
为什么没集中呢

47:12.530 --> 47:13.530
是因为那边

47:13.530 --> 47:14.530
是按照这边

47:14.530 --> 47:16.530
面板的宽度来算的

47:16.530 --> 47:17.530
而这边

47:17.530 --> 47:18.530
到了这边

47:18.530 --> 47:19.530
是不是要重新算一次

47:19.530 --> 47:20.530
重新算一次

47:20.530 --> 47:21.530
终点坐标在哪

47:21.530 --> 47:22.530
对不对

47:22.530 --> 47:23.530
这个也简单

47:23.530 --> 47:24.530
你把它重新

47:24.530 --> 47:25.530
然后呢

47:25.530 --> 47:26.530
怎么样

47:26.530 --> 47:28.530
你再重新设置一下

47:28.530 --> 47:29.530
比方说

47:29.530 --> 47:30.530
在这里

47:30.530 --> 47:32.530
重新设置一下

47:32.530 --> 47:33.530
Z

47:33.530 --> 47:34.530
Reset

47:34.530 --> 47:35.530
CenterPoint

47:35.530 --> 47:37.530
重新设置一下就完成了

47:37.530 --> 47:38.530
宽度

47:38.530 --> 47:40.530
宽度传进去

47:40.530 --> 47:41.530
就是

47:41.530 --> 47:43.530
GameConfig

47:43.530 --> 47:44.530
那么现在要

47:44.530 --> 47:46.530
给它的面板的宽度是多少

47:46.530 --> 47:47.530
给它

47:47.530 --> 47:48.530
就不是下一个面板

47:48.530 --> 47:49.530
就不是下一个

47:49.530 --> 47:51.530
方块下一个方块的位置了

47:51.530 --> 47:53.530
就是主面板的宽度给它

47:53.530 --> 47:54.530
然后呢

47:54.530 --> 47:55.530
再重新设置一下

47:55.530 --> 47:57.530
设置一下坐标

47:57.530 --> 47:59.530
Cartier

47:59.530 --> 48:00.530
好,现在我们再看一下

48:00.530 --> 48:01.530
刷新

48:01.530 --> 48:03.530
你看,现在没什么问题了

48:03.530 --> 48:04.530
就没什么问题了

48:04.530 --> 48:06.530
一切都正常了

48:07.530 --> 48:08.530
好,接下来呢

48:08.530 --> 48:09.530
我们再去实验一下

48:09.530 --> 48:10.530
这个Game里面的

48:10.530 --> 48:11.530
其他功能

48:11.530 --> 48:12.530
比方说暂停

48:12.530 --> 48:13.530
恢复啊

48:13.530 --> 48:14.530
这些功能

48:14.530 --> 48:15.530
那么

48:15.530 --> 48:16.530
比方说暂停

48:16.530 --> 48:18.530
我们设置一下暂停功能

48:18.530 --> 48:19.530
自由下落

48:19.530 --> 48:21.530
这里我们再加函数

48:21.530 --> 48:22.530
这是start

48:22.530 --> 48:23.530
开始

48:23.530 --> 48:24.530
然后pause

48:24.530 --> 48:26.530
游戏暂停

48:26.530 --> 48:28.530
设下暂停功能

48:28.530 --> 48:31.530
游戏暂停

48:31.530 --> 48:32.530
游戏暂停

48:32.530 --> 48:34.530
什么情况下可以使

48:34.530 --> 48:35.530
可以

48:35.530 --> 48:36.530
这个函数可以生效

48:36.530 --> 48:38.530
什么情况下游戏可以暂停

48:38.530 --> 48:39.530
判断一下

48:39.530 --> 48:40.530
判断一下

48:40.530 --> 48:41.530
什么情况下呢

48:41.530 --> 48:43.530
只有当game status

48:43.530 --> 48:45.530
等于

48:45.530 --> 48:47.530
等于啥的时候可以游戏暂停

48:47.530 --> 48:50.530
正在玩的时候

48:50.530 --> 48:51.530
正在玩的时候呢

48:51.530 --> 48:52.530
你这个时候呢

48:52.530 --> 48:53.530
可以暂停游戏

48:53.530 --> 48:55.530
可以暂停游戏

48:55.530 --> 48:57.530
把它复制为game status

48:57.530 --> 48:59.530
pause

48:59.530 --> 49:01.530
复制为这个状态

49:01.530 --> 49:02.530
好暂停游戏的时候

49:02.530 --> 49:04.530
要做什么事情呢

49:04.530 --> 49:05.530
暂停游戏的时候

49:05.530 --> 49:06.530
要做啥事

49:06.530 --> 49:08.530
所以就把这个技师系

49:08.530 --> 49:10.530
给它复为undefine

49:10.530 --> 49:11.530
复为undefine

49:11.530 --> 49:13.530
然后呢

49:13.530 --> 49:15.530
之前clear

49:15.530 --> 49:16.530
interval

49:16.530 --> 49:17.530
把技师系先清除

49:17.530 --> 49:18.530
清除过后

49:18.530 --> 49:19.530
把它复制为undefine

49:19.530 --> 49:20.530
好

49:20.530 --> 49:21.530
来试一下游戏暂停

49:21.530 --> 49:23.530
试一下游戏暂停

49:23.530 --> 49:24.530
这里

49:24.530 --> 49:26.530
这些按钮呢

49:26.530 --> 49:27.530
来一个

49:27.530 --> 49:28.530
暂停

49:28.530 --> 49:29.530
暂停

49:29.530 --> 49:30.530
然后

49:31.530 --> 49:32.530
btn

49:33.530 --> 49:34.530
start

49:34.530 --> 49:35.530
开始

49:35.530 --> 49:36.530
开始

49:37.530 --> 49:39.530
这里暂停pause

49:40.530 --> 49:41.530
好 试一下

49:41.530 --> 49:43.530
照这边来

49:44.530 --> 49:45.530
index

49:45.530 --> 49:47.530
这里注册实现

49:47.530 --> 49:49.530
对这些按钮注册实现

49:49.530 --> 49:51.530
btn start

49:51.530 --> 49:53.530
点击的时候呢

49:53.530 --> 49:55.530
点击的时候游戏开始

49:55.530 --> 49:59.030
get start

49:59.030 --> 50:01.030
wg

50:01.030 --> 50:02.030
get query

50:02.030 --> 50:05.980
然后游戏暂停呢

50:05.980 --> 50:07.980
这里btn pause

50:09.980 --> 50:11.980
那么这里交用pause

50:11.980 --> 50:12.980
游戏暂停

50:13.980 --> 50:14.980
好 咱们来试一下

50:14.980 --> 50:18.740
好 现在游戏暂停开始

50:18.740 --> 50:19.740
点开始

50:19.740 --> 50:21.740
游戏开始暂停

50:22.740 --> 50:23.740
不动了

50:23.740 --> 50:24.740
对吧

50:24.740 --> 50:25.740
然后再点开始

50:26.740 --> 50:27.740
继续

50:27.740 --> 50:29.740
游戏开始暂停

50:29.740 --> 50:31.740
游戏不动了

50:31.740 --> 50:34.740
好 说明暂停和开始的功能呢

50:34.740 --> 50:35.740
都没有什么问题了

50:36.740 --> 50:38.740
OK 那么这是我们第一阶段

50:38.740 --> 50:40.740
就是游戏内

50:40.740 --> 50:41.740
它里边东西有点多

50:41.740 --> 50:42.740
就是一下最后一块的

50:42.740 --> 50:45.740
游戏内开发的第一个阶段

50:45.740 --> 50:47.740
我们先把这个下一个方块

50:47.740 --> 50:49.740
和当前这个方块

50:49.740 --> 50:52.740
他们的功能给它做出来

50:52.740 --> 50:53.740
那么其实现在呢

50:53.740 --> 50:55.740
就已经能够实现不少的功能了

50:55.740 --> 50:57.740
比方说用户控制

50:57.740 --> 50:59.740
用户控制完全可以实现了

50:59.740 --> 51:00.740
对吧

51:00.740 --> 51:01.740
用户控制就可以实现了

51:01.740 --> 51:03.740
比方说我在游戏内里边

51:04.740 --> 51:05.740
这里

51:06.740 --> 51:08.740
我在游戏内里边

51:09.740 --> 51:11.740
加上这么一些函数

51:11.740 --> 51:14.740
或者我直接把这个东西扔出来吧

51:14.740 --> 51:16.740
或者我直接加函数吧

51:16.740 --> 51:20.060
加函数 加一功能函数

51:21.060 --> 51:23.060
操作

51:24.060 --> 51:27.060
我们用这个名字开头

51:27.060 --> 51:29.060
操作项主就是玩家操作

51:29.060 --> 51:31.060
它比甭管用啥操作的

51:31.060 --> 51:33.060
你点按钮操作也好

51:33.060 --> 51:34.060
直接调用函数操作也好

51:34.060 --> 51:36.060
或者是按键盘操作也好

51:36.060 --> 51:37.060
总之你可以操作

51:37.060 --> 51:39.060
当你调用这个函数的时候

51:39.060 --> 51:41.060
就表示控制游戏项主

51:41.060 --> 51:43.060
控制游戏项主怎么控制呢

51:43.060 --> 51:44.060
判断一下

51:44.060 --> 51:45.060
如果

51:46.060 --> 51:48.060
Kartarus有值

51:48.060 --> 51:49.060
当前的方块有值

51:49.060 --> 51:51.060
并且游戏正在进行中

51:52.060 --> 51:54.060
游戏正在进行中

51:54.060 --> 51:56.060
GameStatus等于

51:56.060 --> 51:58.060
千万不要忘了游戏状态

51:58.060 --> 52:00.060
千万不要忘了游戏状态

52:00.060 --> 52:02.060
游戏正在进行中

52:02.060 --> 52:04.060
那么你就可以操作

52:04.060 --> 52:05.060
怎么操作呢

52:05.060 --> 52:07.060
就是this

52:07.060 --> 52:09.060
就是那个

52:09.060 --> 52:10.060
我们之前写的内

52:10.060 --> 52:12.060
Kartarus入

52:14.060 --> 52:15.060
第二个参数

52:15.060 --> 52:17.060
第二个参数是move

52:17.060 --> 52:19.060
是方向

52:20.060 --> 52:21.060
move

52:21.060 --> 52:22.060
direction

52:23.060 --> 52:24.060
向左移动

52:24.060 --> 52:25.060
判断一下

52:25.060 --> 52:26.060
向左移动

52:26.060 --> 52:27.060
完事了对吧

52:27.060 --> 52:28.060
那么向右呢

52:29.060 --> 52:30.060
向下呢

52:30.060 --> 52:32.060
都是一样的

52:32.060 --> 52:33.060
right

52:33.060 --> 52:34.060
Ctrl-Right

52:34.060 --> 52:35.060
或者这里用

52:35.060 --> 52:36.060
托风命运法也可以

52:36.060 --> 52:37.060
Ctrl-Left

52:37.060 --> 52:39.060
Ctrl-Right

52:39.060 --> 52:40.060
那么这里

52:40.060 --> 52:41.060
right

52:41.060 --> 52:42.060
这里

52:42.060 --> 52:43.060
当

52:43.060 --> 52:44.060
向下的话

52:44.060 --> 52:45.060
我给它一个特殊的操作方式

52:45.060 --> 52:46.060
就是move

52:46.060 --> 52:47.060
direction

52:47.060 --> 52:48.060
直接向下

52:49.060 --> 52:50.060
这里用当

52:51.060 --> 52:53.060
然后还有就是

52:53.060 --> 52:54.060
旋转

52:56.060 --> 52:58.060
Ctrl-Rotate

52:58.060 --> 52:59.060
旋转

53:00.060 --> 53:01.060
Rotate

53:01.060 --> 53:02.060
那么是一样的

53:02.060 --> 53:03.060
如果当前方块

53:03.060 --> 53:04.060
有东西并且

53:04.060 --> 53:05.060
游戏正在进行中

53:05.060 --> 53:06.060
那么你就旋转呗

53:07.060 --> 53:08.060
Rotate

53:09.060 --> 53:10.060
给我传一个参数就行了

53:10.060 --> 53:11.060
当前方块扔进去

53:11.060 --> 53:13.060
你去选旋转呗

53:13.060 --> 53:14.060
好

53:14.060 --> 53:15.060
我们就提供了游戏内里面

53:15.060 --> 53:16.060
封装了四个方法

53:16.060 --> 53:17.060
通过这个四个方法呢

53:17.060 --> 53:18.060
我们之后操作的时候呢

53:18.060 --> 53:20.060
通过这四个方法来操作

53:20.060 --> 53:21.060
那就很简单了

53:21.060 --> 53:22.060
对吧

53:22.060 --> 53:23.060
我这里就可以用这种方式

53:23.060 --> 53:25.060
甚至我就已经可以用

53:25.060 --> 53:26.060
键盘的方式了

53:26.060 --> 53:27.060
我还是用按钮吧

53:27.060 --> 53:28.060
大家看得清楚一点

53:28.060 --> 53:29.060
我们后边再把它

53:29.060 --> 53:31.060
用键盘的时间杆加上

53:32.060 --> 53:33.060
Left

53:33.060 --> 53:34.060
向左

53:36.060 --> 53:37.060
然后

53:37.060 --> 53:38.060
Btn

53:38.060 --> 53:39.060
button

53:40.060 --> 53:41.060
Btn

53:41.060 --> 53:42.060
Right

53:42.060 --> 53:43.060
向右

53:44.060 --> 53:45.060
然后button

53:46.060 --> 53:47.060
Btn

53:47.060 --> 53:48.060
Down

53:48.060 --> 53:49.060
向下

53:50.060 --> 53:51.060
向下

53:51.060 --> 53:52.060
然后button

53:53.060 --> 53:54.060
ID

53:54.060 --> 53:55.060
Btn

53:55.060 --> 53:56.060
Rotate

53:57.060 --> 53:58.060
然后是

53:59.060 --> 54:00.060
旋转

54:00.060 --> 54:01.060
旋转

54:01.060 --> 54:02.060
旋转

54:02.060 --> 54:03.060
到时候我们把它

54:03.060 --> 54:04.060
做成键盘就完成了

54:05.060 --> 54:06.060
好

54:06.060 --> 54:07.060
最后呢

54:07.060 --> 54:08.060
我们这里

54:08.060 --> 54:09.060
来吧

54:09.060 --> 54:11.060
又是个体力活了

54:11.060 --> 54:12.060
懂我意思的话

54:12.060 --> 54:13.060
接下来的视频

54:13.060 --> 54:14.060
你都不用看了

54:14.060 --> 54:15.060
对吧

54:15.060 --> 54:16.060
你自己把写了

54:16.060 --> 54:17.060
Btn

54:17.060 --> 54:18.060
Left

54:19.060 --> 54:20.060
是这样写吧

54:21.060 --> 54:22.060
Btn

54:22.060 --> 54:23.060
Left

54:23.060 --> 54:24.060
然后game

54:24.060 --> 54:25.060
Control

54:25.060 --> 54:26.060
Left

54:26.060 --> 54:27.060
它提供了相应的函数

54:27.060 --> 54:28.060
去调用完事了

54:29.060 --> 54:30.060
Control

54:30.060 --> 54:31.060
Right

54:31.060 --> 54:32.060
游戏呢

54:32.060 --> 54:33.060
就相当于是我

54:33.060 --> 54:34.060
只跟这个游戏

54:34.060 --> 54:35.060
打交道

54:35.060 --> 54:36.060
其他我不管了

54:36.060 --> 54:37.060
Right

54:37.060 --> 54:40.070
好

54:40.070 --> 54:41.070
这里是

54:41.070 --> 54:42.070
向下

54:42.070 --> 54:45.340
Down

54:45.340 --> 54:46.340
Control

54:46.340 --> 54:50.230
这个ControlRotate

54:50.230 --> 54:51.230
Btn

54:51.230 --> 54:52.230
Rotate

54:52.230 --> 54:53.230
好看一下吧

54:54.230 --> 54:55.230
好

54:55.230 --> 54:56.230
这里

54:56.230 --> 54:58.230
开始

54:58.230 --> 55:00.230
左左左

55:00.230 --> 55:01.230
下

55:01.230 --> 55:02.230
没了

55:02.230 --> 55:03.230
每次都要下一次切换

55:03.230 --> 55:04.230
下一次切换

55:04.230 --> 55:05.230
我们还没有做

55:05.230 --> 55:06.230
开始

55:06.230 --> 55:07.230
左

55:07.230 --> 55:08.230
右

55:09.230 --> 55:10.230
暂停

55:10.230 --> 55:11.230
暂停过后你看

55:11.230 --> 55:12.230
没反应了

55:12.230 --> 55:13.230
没反应了

55:13.230 --> 55:14.230
开始

55:14.230 --> 55:15.230
旋转

55:15.230 --> 55:16.230
旋转

55:16.230 --> 55:17.230
旋转

55:17.230 --> 55:18.230
旋转

55:18.230 --> 55:19.230
旋转

55:19.230 --> 55:20.230
一直可以旋转

55:20.230 --> 55:21.230
当然我们还没有

55:21.230 --> 55:22.230
还没有

55:22.230 --> 55:23.230
设置就是

55:23.230 --> 55:24.230
下一次切换的问题

55:24.230 --> 55:25.230
OK

55:25.230 --> 55:26.230
我们先把这个完成

55:26.230 --> 55:27.230
先把这个完成

55:27.230 --> 55:29.230
其实已经写了不少的代码了

55:29.230 --> 55:30.230
我们一次一结合

55:30.230 --> 55:31.230
不要讲的太多

55:31.230 --> 55:33.230
一点一点的消化

55:33.230 --> 55:35.230
搞定这个game内

55:35.230 --> 55:36.230
看上去代码很多

55:36.230 --> 55:37.230
其实都是一些

55:37.230 --> 55:38.230
机械化的劳动

55:38.230 --> 55:39.230
你看这里一个代码

55:39.230 --> 55:40.230
STARS一个代码

55:40.230 --> 55:41.230
有哪些事情可以做吗

55:41.230 --> 55:42.230
没有什么事情可以做

55:42.230 --> 55:43.230
占了那么多

55:43.230 --> 55:44.230
比方说现在

55:44.230 --> 55:45.230
这些操作的代码

55:45.230 --> 55:46.230
没有什么事情

55:46.230 --> 55:48.230
占了12345

55:48.230 --> 55:49.230
看上去代码很多

55:49.230 --> 55:50.230
其实代码都很简单

55:50.230 --> 55:51.230
都很简单

55:51.230 --> 55:53.230
我们这一刻

55:53.230 --> 55:55.230
先把这个东西搞定

55:55.230 --> 55:56.230
然后接下来

55:56.230 --> 55:58.230
大家可以去思考一下

55:58.230 --> 56:00.230
如果方块

56:00.230 --> 56:02.230
到底过后

56:02.230 --> 56:03.230
到底过后

56:03.230 --> 56:05.230
就是接触到

56:05.230 --> 56:06.230
底部过后

56:06.230 --> 56:07.230
又该如何来处理

56:07.230 --> 56:09.230
可以去思考一下

56:09.230 --> 56:10.230
OK

56:10.230 --> 56:11.230
我们先就到这了

56:11.230 --> 56:12.230
这一刻

56:12.230 --> 56:13.230
OK

56:13.230 --> 56:14.230
下一刻再说

56:14.230 --> 56:15.230
分享一下内容

56:15.230 --> 56:16.230
好 拜拜

