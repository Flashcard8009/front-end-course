WEBVTT

00:00.500 --> 00:05.900
好 说一下那个TS 如何跟5u3 进行结合

00:07.400 --> 00:13.200
TS 5u3 因为我们的项目呢是跟RAGAT 结合对吧

00:13.960 --> 00:21.240
其实呢TS这个东西呢现在这么流行它可以跟很多的前端框架或者是一些前端技术都可以结合

00:22.040 --> 00:28.640
那么这个扣该怎么去上呢 我没有办法说哪一个前端框架哪一个前端技术我要给他讲一个TS

00:28.640 --> 00:31.760
跟这个东西怎么融合 跟那个东西怎么融合 不需要

00:32.720 --> 00:40.320
TS 跟任何技术结合是极其简单的 你要做的唯一的一件事就是去看它的官方稳当

00:40.520 --> 00:48.320
当然前的条件 你得把我们这个TS这个课你得学明白 你学明白了之后 你看它的官方稳当一下就明白了

00:49.040 --> 00:55.280
比方说TS 跟5u3 该如何结合 这顺带说一下啊 说这5u2 咋结合呢

00:56.240 --> 01:03.120
反正5u2我不推荐你使用TS啊 因为5u2它本身不是TS写的 跟TS结合起来有很多的困难

01:03.920 --> 01:08.720
5u3 该如何跟TS结合 首先你要做的是打开5u3的官方稳当

01:09.520 --> 01:19.480
进入5u的官网 进去之后呢 我们到了它的深度指南 其实你们可以想象到啊 以后呢 很多其他的技术

01:20.440 --> 01:28.520
它如果说支持TS 它都会在它的稳当里边 专门给你开一个专栏 像5u3这一块

01:29.720 --> 01:35.400
高速理 如果说你要在这个技术里边使用TS 该如何去使用 非常的简单

01:36.200 --> 01:39.960
进去之后呢 它有种难啊 我还是把我上小点吧 右边有个目录

01:40.440 --> 01:43.480
种难里边还会告诉你怎么配置 其实呢 你用Vector这个

01:44.440 --> 01:48.040
脚手加拿搭起来过后呢 你该选择了支持TS语言

01:48.600 --> 01:52.600
它就已经自动给你全部配置好了 你不需要做任何额外的事了

01:53.720 --> 01:58.760
无论呢 你就是要去安装一些vscode的插件 比方说这个插件

02:00.120 --> 02:01.240
比方说像这个插件

02:02.440 --> 02:07.960
安装好了之后呢 还自动支持了啊 你不要做太多的事情 那么常见使用说明就可以看一下

02:08.680 --> 02:10.440
它单码里边该如何去书写

02:11.400 --> 02:14.760
它告诉你呢 你可以使用这个define component

02:15.640 --> 02:16.600
通过这个函数

02:17.480 --> 02:23.240
我们的viu3不是支持两种模式吗 一种是配置式的 一种是组合式的API

02:23.640 --> 02:26.120
对吧 如果说你使用配置式的API的话

02:26.760 --> 02:32.360
那么你可以把个配置呢放到一个函数里边 这个函数里边它具有类型推到

02:32.840 --> 02:36.680
那么在这里边呢 你可以检查各种类型了 可以使用里边的类型推到

02:36.760 --> 02:41.160
比方说你这里使用Zis的Name 它又知道了 它会从这里去找这个Name

02:41.720 --> 02:43.240
它这里没有推到的啊

02:44.040 --> 02:47.160
如果说你使用的是组合式的API的话

02:47.800 --> 02:52.760
比方说往下找 当然前提条件呢 给这个script的元素加上这个longreg

02:52.760 --> 02:57.480
把它设置为TAS 非常简单 这个方案一看就明白了 又好啥好说的

02:58.040 --> 03:00.200
然后呢 现在呢 往下边找啊 比方说

03:01.160 --> 03:07.720
下面它还有一个专门的专栏说 跟那个组合式的API和选项式的 就是配置式的API

03:08.040 --> 03:10.920
比方说组合式的API是5u3里边最流行的时候

03:11.160 --> 03:15.560
那么进去之后呢 我们可以看到它有各种 就这么一点点东西 你看嘛

03:16.520 --> 03:17.400
就这么一点东西

03:18.760 --> 03:21.800
其实那些都难 就这么点东西 你都不用全部看完

03:22.360 --> 03:23.800
你需要哪里看哪里

03:24.120 --> 03:26.360
因为我们这个TAS呢 是渐近式的

03:26.920 --> 03:28.520
那你需要多少你用多少

03:29.400 --> 03:33.240
比方说这个对这个属性的定义 你就可以有多种邪法

03:33.720 --> 03:37.320
它上面也给你取得各种例子啊 你可以用那种传统的邪法

03:37.960 --> 03:39.400
直接把个属性定义到这里面

03:40.040 --> 03:41.640
通过一个函数叫DefanProbs

03:42.760 --> 03:44.520
前提条件得把它设置为这个啊

03:45.160 --> 03:47.880
通过这个DefanProbs来设置定义属性

03:48.360 --> 03:52.760
也可以呢使用翻型的模式 因为翻型的是TAS所支持的

03:53.400 --> 03:57.080
用翻型的模式呢 也可以把这个翻型里面的内形的提出来

03:57.160 --> 03:59.800
你看我这边表示说 我这里有两个属性

03:59.800 --> 04:02.360
一个FOO是训内型 你看这就是TS代码了

04:03.400 --> 04:05.720
一个BAR呢 是可选的 你看下个问号

04:06.120 --> 04:06.840
它是Number

04:07.400 --> 04:11.160
把它作为翻型传进去 也可以完成属性的定义

04:13.000 --> 04:16.200
然后呢 它还告诉你 如果说你要使用默认值怎么办

04:17.240 --> 04:20.680
使用默认值呢 你要用一个辅助函数啊 叫WizDefault

04:21.560 --> 04:25.240
首先定义属性 有这么两个属性 它们都是可选的

04:26.200 --> 04:28.280
如果说你不加问号的话 就是必填的

04:29.000 --> 04:32.920
它是可选的 然后呢 如果说它没传的话 使用默认值

04:32.920 --> 04:35.800
下边它就是默认值 没问题吧

04:36.680 --> 04:37.640
这有啥好说的呢

04:38.440 --> 04:43.400
下边可以意思看嘛 比方说AMATS这个事件 定义事件

04:43.400 --> 04:46.760
对吧 我们在WizDefault定义事件用DefanAMATS

04:47.960 --> 04:51.000
那么如果说你使用TS的话 你可以把它作为翻型

04:51.560 --> 04:54.120
对吧 翻型的表示说有两个事件

04:54.840 --> 04:57.720
一个事件的名字呢 叫Change 一个事件的名字呢 叫Update

04:58.840 --> 05:02.760
这两个事件里边呢 第一个事件呢 要传递一个参数ID

05:03.320 --> 05:07.400
第二个事件呢 它出发的时候会传递一个参数Value

05:08.680 --> 05:12.040
对吧 就这么个意思 那么抽边东西没啥好说的

05:12.040 --> 05:14.120
比方说Ref 你自己看吧

05:14.680 --> 05:18.840
你学过TS呢 这些文档都能够轻而易举的看懂

05:19.880 --> 05:23.000
所以权力条件 你只要理解的GS就能理解这些东西

05:23.720 --> 05:26.760
那么其他的比一些技术呢 比方说上面Aggalext

05:26.760 --> 05:30.440
Nest或者是一些SSR或者是一些UniApp

05:30.440 --> 05:31.480
一些关系包的东西

05:32.040 --> 05:36.520
他们都会有一些文档来说明TS在里边该如何使用

05:37.080 --> 05:40.360
那你看它的文档就完事了 那就不需要一一讲解了

05:41.160 --> 05:42.520
就说这么一个问题

