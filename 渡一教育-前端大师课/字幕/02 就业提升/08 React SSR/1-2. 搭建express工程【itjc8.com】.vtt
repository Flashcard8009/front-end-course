WEBVTT

00:00.750 --> 00:06.750
从这节课开始呢 我就一步一步手动的来搭建这个SSR工程

00:06.750 --> 00:10.750
现在学习的时候呢 就是跟着我

00:10.750 --> 00:13.750
我做一点 你们跟着做一点 一定要跟上

00:13.750 --> 00:17.750
但是呢 你们在做的时候呢 不要去超过了代码 没什么意义

00:17.750 --> 00:20.750
就是我写了之后呢 你看完课程理解了之后 你自己去写一遍

00:20.750 --> 00:24.750
这样子呢 你才有感觉 在写的过程中呢 你写的每一步呢

00:24.750 --> 00:28.750
你就会去思考 这一步在干嘛 在解决什么样的问题

00:28.750 --> 00:32.750
一定要这样做 不然的话 学到后边 因为他解决的问题很多

00:32.750 --> 00:34.750
学到后边的话 你可能大家就有点懵了

00:34.750 --> 00:38.750
好 接下来我们第一步 首先来搭建一个Express服务器

00:38.750 --> 00:42.750
因为我们毕竟是开发服务端嘛 对吧 看SSR的服务端宣展

00:42.750 --> 00:46.750
那肯定要搭建服务器 那么我们服务器呢 就用Express

00:46.750 --> 00:50.750
因为我们是开发的单页应用程序 我们先安装吧

00:50.750 --> 00:53.750
先安装Express 让它安装

00:53.750 --> 00:56.750
因为我们开发的是一个单页应用程序

00:56.750 --> 01:00.750
所以说呢 我们要针对所有的get请求呢 想应同一个页面

01:00.750 --> 01:04.750
因为只有一个页面嘛 好 接下来呢 我们在这里

01:04.750 --> 01:08.750
新建一个文件夹 我们把我们的代码放到这个src目录下边

01:08.750 --> 01:12.750
按照国际惯例 然后再新建一个文件 给它建一个server

01:12.750 --> 01:14.750
解释文件

01:14.750 --> 01:18.750
好 没有安装

01:18.750 --> 01:22.750
怎么跑到wippack里边去了

01:22.750 --> 01:26.750
再打开

01:26.750 --> 01:30.750
power show

01:30.750 --> 01:36.320
安装一个express 等下 等下 跑到src目录下边去了

01:36.320 --> 01:40.320
CD

01:40.320 --> 01:44.320
ok 再这里安装

01:44.320 --> 01:48.320
然后呢 我们这里写一个server.js文件 那么这里呢 我们就利用express的功能

01:48.320 --> 01:55.230
express 先倒入进来

01:55.230 --> 01:59.230
好 然后呢express 我们新建一个应用

01:59.230 --> 02:03.230
新建一个express应用 最后来我们监听一下

02:03.230 --> 02:07.230
nation 比方说8080

02:07.230 --> 02:11.230
接下来我们要解决这么一个问题

02:11.230 --> 02:15.230
就是说 我们无论是请求 什么请求 只要自己是get请求

02:15.230 --> 02:19.230
我就军想应同一个页面 好 所以我们这里怎么写呢

02:19.230 --> 02:23.230
appget 对吧 接收get请求 任何请求都要想应同一个页面

02:23.230 --> 02:27.230
因此我写个新号 匹配上所有请求

02:27.230 --> 02:31.230
然后接下来regress

02:31.230 --> 02:35.230
我们这里是不是该想应一个send 想一个什么呢 想一个文本就行了

02:35.230 --> 02:39.230
想一个文本 那么这个文本呢 就是一个atm页面

02:39.230 --> 02:43.230
文本我们这里写一个吧 写一个文本

02:43.230 --> 02:49.120
constatm一个文本

02:49.120 --> 02:53.120
ok 那么就想应这么一个atm页面 这是ssr

02:53.120 --> 02:57.120
root 这里边该想一个内容

02:57.120 --> 03:01.120
Hello ssr 我们把这个文本放到这儿

03:01.120 --> 03:05.120
send 行了 保存 好 那么我们的页面

03:05.120 --> 03:09.120
服务器就写好了 对吧 接下来我们来运行一下

03:09.120 --> 03:13.120
load server 下面的index

03:13.120 --> 03:17.120
运行

03:17.120 --> 03:21.120
它无法

03:21.120 --> 03:25.120
接下来的server

03:25.120 --> 03:29.120
这里没有提示 对吧 给它一个提示吧 连上过后来我们给它一个提示

03:29.120 --> 03:33.120
服务器启动 server start on

03:33.120 --> 03:38.560
8080 保存

03:38.560 --> 03:42.560
停止 其实服务器刚才已经启动了 运行

03:42.560 --> 03:46.560
打开了 那么现在我们打开留言继续访问一下 看能不能得到页面呢

03:46.560 --> 03:50.560
localhost8080

03:50.560 --> 03:54.560
我们的页面元代吧 你看就是服务器跟我们响应的结果

03:54.560 --> 03:58.560
特别简单 我们把服务器搭建好了

03:58.560 --> 04:02.560
搭建好了过后 我们为后边做一些准备吧

04:02.560 --> 04:06.560
我们首先在packet.json里边添加一个脚奔

04:06.560 --> 04:10.560
这样子能更加方便的来启动服务器 在这里边添加一个脚奔

04:10.560 --> 04:14.560
比如说服务器的启动 服务器的启动 我们用start

04:14.560 --> 04:18.560
服务器启动了我们这里写上

04:18.560 --> 04:22.560
dev start 这里边我们就写一个非常简单的代码

04:22.560 --> 04:26.560
load server src server

04:26.560 --> 04:30.560
那么之后我们启动的时候就怎么启动了

04:30.560 --> 04:34.560
之后启动我们就用 npm run

04:34.560 --> 04:38.560
dev start 开发阶段的启动 你看是不是一样的

04:38.560 --> 04:42.560
这是我们把配置的脚奔

04:42.560 --> 04:46.560
但是这样子你们大家都知道 如果说这个代码一改动

04:46.560 --> 04:49.560
它是不会重新那个就是

04:49.560 --> 04:52.560
重新就是应用新的代码的 因为我们必须要重新启动

04:52.560 --> 04:55.560
比方说我们来看一下吧 启动之后

04:55.560 --> 04:58.560
那么现在我们刷新页面 刷新页面我们看到这个

04:58.560 --> 05:02.560
既然我们代码一改动 一保存

05:02.560 --> 05:05.560
保存过后再刷新页面 你看是不是还是这个

05:05.560 --> 05:08.560
因为服务器还是用的是之前的代码 夹在到内存过后的

05:08.560 --> 05:11.560
之前的代码 因此我们现在希望它能够

05:11.560 --> 05:14.560
我们代码改动之后 它能够重新适应我们的改动

05:14.560 --> 05:17.560
能够重新启动服务器 自动的重新启动

05:17.560 --> 05:20.560
不然的话我每次启动都比较麻烦 因此我们这里利用一个工具

05:20.560 --> 05:23.560
叫做loader mode 大家应该都知道

05:23.560 --> 05:26.560
按这个工具

05:26.560 --> 05:31.510
它应该用开发安装 对吧 我们一会儿

05:31.510 --> 05:34.510
把它改一下 稍微拍一个节省里面改一下

05:34.510 --> 05:38.510
安装好了 那么我们这里稍微改一下 应该用开发一代

05:38.510 --> 05:41.510
因为这个东西并不参与运行了

05:41.510 --> 05:46.140
放过来 OK

05:46.140 --> 05:49.140
到这边 我们可以在脚背里面再重新写一下

05:49.140 --> 05:53.140
用loader mode去监控它 这边我们前面写上loader mode

05:53.140 --> 05:55.140
Watch

05:55.140 --> 05:58.140
Watch哪儿呢?Watch src目录

05:58.140 --> 06:01.140
src目录里边已改动 改动之后

06:01.140 --> 06:04.140
我们干嘛 改动之后我们去运行

06:04.140 --> 06:08.140
运行load这个指令

06:08.140 --> 06:11.140
好 接下来我们再来看一下

06:11.140 --> 06:16.100
NPM run.start

06:16.100 --> 06:19.100
运行出来了 咱们刷新

06:19.100 --> 06:21.100
看一下 是不是应用新的代码

06:21.100 --> 06:23.100
接下来我们来这边改动一下

06:23.100 --> 06:26.100
一 保存 这里刷新

06:26.100 --> 06:28.100
是应用新的代码 对吧

06:28.100 --> 06:30.100
一保存它就重新启动了

06:30.100 --> 06:31.100
Restarting

06:31.100 --> 06:33.100
OK 那么这里 工程就

06:33.100 --> 06:36.100
Express的工程就准备在差不多了

06:36.100 --> 06:38.100
好 这几颗到此结束

