WEBVTT

00:00.430 --> 00:02.430
好 我们接下来做

00:02.430 --> 00:06.430
我们对路由这一块来做一个特殊的处理

00:06.430 --> 00:09.430
因为后续我们会讲Redux

00:09.430 --> 00:12.430
Redux在SSR里面的应用

00:12.430 --> 00:15.430
而Redux不是说要求

00:15.430 --> 00:17.430
就在某一些细节处理上

00:17.430 --> 00:20.430
我们最好把路由写成一个配置

00:20.430 --> 00:22.430
就像无忧那样子写成一个配置

00:22.430 --> 00:24.430
不然的话SSR的时候不太好处理

00:24.430 --> 00:27.430
但是不是说你们编写Redux程序

00:27.430 --> 00:29.430
就必须要写成配置的方式

00:29.430 --> 00:31.430
而不是这种组件的方式

00:31.430 --> 00:32.430
不是这个意思

00:32.430 --> 00:34.430
而是在SSR的时候

00:34.430 --> 00:36.430
遇到一些细节问题的时候

00:36.430 --> 00:37.430
不是很好处理

00:37.430 --> 00:39.430
如果你不写配置的话

00:39.430 --> 00:41.430
如果说你不使用SSR

00:41.430 --> 00:43.430
那肯定是用组件的方式

00:43.430 --> 00:45.430
更加容易理解

00:45.430 --> 00:46.430
好 那咱们这里呢

00:46.430 --> 00:47.430
新建个配置文件

00:47.430 --> 00:49.430
我们这就可能先把它改造成配置

00:49.430 --> 00:51.430
然后它会使用一个第三方库

00:51.430 --> 00:53.430
来帮我们去完成

00:53.430 --> 00:55.430
这里我们写上一个就是

00:55.430 --> 00:57.430
road config

00:57.430 --> 00:59.430
我们把我们的目前的页面

00:59.430 --> 01:01.430
来做成一个配置

01:01.430 --> 01:03.430
那么这里我就导出

01:03.430 --> 01:05.430
导出一个对象

01:05.430 --> 01:07.430
导出一个对象

01:07.430 --> 01:09.430
这对象里导出一个数组

01:09.430 --> 01:10.430
因为我们在相无忧里面

01:10.430 --> 01:11.430
不就是个数组吗

01:11.430 --> 01:12.430
对吧 都有一个配置

01:12.430 --> 01:14.430
那么这里我们有三个

01:14.430 --> 01:16.430
分别是这个

01:16.430 --> 01:19.430
分别是那个pass

01:19.430 --> 01:20.430
每个是一个对象

01:20.430 --> 01:21.430
每个路由配置是个对象

01:21.430 --> 01:22.430
pass

01:22.430 --> 01:23.430
我们就相当于是

01:23.430 --> 01:25.430
把这些属性写过来

01:25.430 --> 01:27.430
这样子

01:29.430 --> 01:31.430
下面就是component

01:31.430 --> 01:33.430
为home

01:33.430 --> 01:34.430
我们把它写成这个样子

01:34.430 --> 01:37.940
先把它写过来

01:37.940 --> 01:38.940
这里边

01:38.940 --> 01:40.940
下边就是movies

01:40.940 --> 01:42.940
movies

01:42.940 --> 01:44.940
下边是没有

01:44.940 --> 01:46.940
movies

01:46.940 --> 01:47.940
下边是没有

01:47.940 --> 01:48.940
这个东西

01:48.940 --> 01:49.940
这些东西都没有

01:49.940 --> 01:50.940
都没有

01:50.940 --> 01:51.940
那么就匹配

01:51.940 --> 01:52.940
not found

01:52.940 --> 01:54.940
我们把它写成配置的格式

01:54.940 --> 01:55.940
然后我们把该导入的东西

01:55.940 --> 01:57.940
导入进来

01:57.940 --> 01:58.940
OK 该导入东西

01:58.940 --> 01:59.940
导入进来

01:59.940 --> 02:00.940
行了

02:00.940 --> 02:01.940
咱们那个配置文件

02:01.940 --> 02:02.940
就写好了

02:02.940 --> 02:03.940
那么现在我们要利用

02:03.940 --> 02:05.940
这个配置文件来生成主件

02:05.940 --> 02:06.940
其实我刚才

02:06.940 --> 02:07.940
翻了一下

02:07.940 --> 02:08.940
翻了一下我以前

02:08.940 --> 02:09.940
录的rather视频

02:09.940 --> 02:10.940
我都忘了

02:10.940 --> 02:11.940
我以前也没有讲那个

02:11.940 --> 02:12.940
配置模式

02:12.940 --> 02:13.940
我发现讲了的

02:13.940 --> 02:14.940
不仅讲了

02:14.940 --> 02:15.940
我还把他圆

02:15.940 --> 02:16.940
我们该怎么去手动

02:16.940 --> 02:17.940
来处理

02:17.940 --> 02:19.940
我们都把它写好的

02:19.940 --> 02:20.940
包括多级路由

02:20.940 --> 02:21.940
包括命名路由

02:21.940 --> 02:22.940
我都是写过的

02:22.940 --> 02:23.940
所以说我只讲过的

02:23.940 --> 02:24.940
如果说忘了

02:24.940 --> 02:26.940
同学可以去参考一下

02:26.940 --> 02:27.940
我之前的那个做法

02:27.940 --> 02:29.940
不过我这里做的比较简单

02:29.940 --> 02:30.940
我这怎么做呢

02:30.940 --> 02:31.940
我这里用最简单的方式

02:31.940 --> 02:32.940
因为我这里也不去

02:32.940 --> 02:33.940
考虑多级路由的情况

02:33.940 --> 02:35.940
我们下列课讲多级路由

02:35.940 --> 02:37.940
我们这里我们就导入

02:37.940 --> 02:38.940
导入那个配置

02:38.940 --> 02:39.940
roadconfig

02:39.940 --> 02:40.940
from

02:41.940 --> 02:42.940
roadconfig

02:42.940 --> 02:43.940
导入它

02:43.940 --> 02:45.940
然后我们在这里边

02:45.940 --> 02:46.940
其实我们就是要利用

02:46.940 --> 02:47.940
这个数组

02:47.940 --> 02:48.940
对吧

02:48.940 --> 02:49.940
他导出一个数组

02:49.940 --> 02:50.940
我们就是要利用这个数组

02:50.940 --> 02:51.940
来生成一些road逐渐

02:51.940 --> 02:52.940
那么如果说你仅仅

02:52.940 --> 02:53.940
到这样做的话

02:53.940 --> 02:54.940
就特别简单

02:54.940 --> 02:55.940
那这里怎么做呢

02:55.940 --> 02:56.940
我们就可以完全利用

02:56.940 --> 02:57.940
这个roadconfig

02:57.940 --> 02:58.940
或者说换个名字

03:00.940 --> 03:01.940
换成road

03:01.940 --> 03:03.940
road这样子的好理

03:03.940 --> 03:04.940
便于理解点

03:04.940 --> 03:05.940
road

03:05.940 --> 03:06.940
表示我们多级路由配置

03:06.940 --> 03:07.940
road

03:07.940 --> 03:08.940
我们可以用map

03:08.940 --> 03:09.940
每一个

03:09.940 --> 03:10.940
是不是配置

03:10.940 --> 03:11.940
每一个就是

03:11.940 --> 03:13.940
一个很多配置的属性

03:13.940 --> 03:14.940
对吧

03:14.940 --> 03:15.940
每一个就是很多配置的属性

03:15.940 --> 03:16.940
每一个对象里边

03:16.940 --> 03:17.940
是不是有很多配置的属性

03:17.940 --> 03:18.940
OK

03:18.940 --> 03:19.940
那么这里呢

03:19.940 --> 03:20.940
我们就生成一个什么

03:20.940 --> 03:21.940
生成一个road

03:21.940 --> 03:22.940
给它返回一个road

03:22.940 --> 03:23.940
好

03:23.940 --> 03:24.940
那么返回了road

03:24.940 --> 03:25.940
里边呢

03:25.940 --> 03:26.940
我们就把这些属性

03:26.940 --> 03:27.940
对象里边不是有这些属性吗

03:27.940 --> 03:28.940
那么我们就直接把

03:28.940 --> 03:29.940
这个属性展开

03:29.940 --> 03:30.940
probs

03:30.940 --> 03:31.940
是不是完事了

03:31.940 --> 03:32.940
对吧

03:32.940 --> 03:33.940
就完事了

03:33.940 --> 03:34.940
非常简单

03:34.940 --> 03:35.940
我们就这样简单处理一下

03:35.940 --> 03:36.940
当然这样子呢

03:36.940 --> 03:37.940
我们呢

03:37.940 --> 03:38.940
运行一下

03:38.940 --> 03:39.940
这样子呢

03:39.940 --> 03:40.940
其实是没问题的

03:40.940 --> 03:41.940
只不过呢

03:41.940 --> 03:42.940
他会报一个警告

03:42.940 --> 03:43.940
就是说

03:43.940 --> 03:44.940
因为你懂得

03:44.940 --> 03:45.940
数组里面

03:45.940 --> 03:46.940
印射成主见的话

03:46.940 --> 03:47.940
他需要给个keyz

03:47.940 --> 03:48.940
你看一下吧

03:48.940 --> 03:49.940
我们这里呢

03:49.940 --> 03:50.940
运行出来

03:51.940 --> 03:52.940
localhost

03:52.940 --> 03:53.940
8080

03:55.940 --> 03:56.940
点评检查

03:58.940 --> 03:59.940
他会有这么一个

03:59.940 --> 04:00.940
对keyz的要求

04:00.940 --> 04:01.940
所以说我们这里呢

04:01.940 --> 04:03.940
就直接把keyz加上

04:03.940 --> 04:04.940
keyz加上

04:04.940 --> 04:05.940
home

04:07.940 --> 04:08.940
keyz随便写

04:08.940 --> 04:09.940
随便写

04:09.940 --> 04:10.940
或者呢

04:10.940 --> 04:11.940
我们用那个

04:11.940 --> 04:12.940
就这样写吧

04:12.940 --> 04:13.940
movies

04:14.940 --> 04:15.940
都小写吧

04:16.940 --> 04:17.940
这里呢

04:17.940 --> 04:18.940
我们给他个keyz

04:18.940 --> 04:19.940
not found

04:21.940 --> 04:22.940
ok

04:22.940 --> 04:23.940
keyz加上

04:23.940 --> 04:24.940
没有警告了

04:24.940 --> 04:25.940
而且呢

04:25.940 --> 04:26.940
目前的一切都正常

04:26.940 --> 04:27.940
还包括那个

04:27.940 --> 04:28.940
老师放的一切都正常

04:28.940 --> 04:29.940
为什么呢

04:29.940 --> 04:30.940
因为

04:30.940 --> 04:31.940
其实没有什么变化

04:31.940 --> 04:32.940
只是把形成个配置文件

04:32.940 --> 04:33.940
然后再根据

04:33.940 --> 04:34.940
数组呢

04:34.940 --> 04:35.940
再生成这个肉车主见

04:35.940 --> 04:37.940
好那这样子写完之后呢

04:37.940 --> 04:38.940
我们现在是手动写

04:38.940 --> 04:39.940
对吧

04:39.940 --> 04:40.940
那目前呢

04:40.940 --> 04:41.940
是解决不了多几度油的

04:41.940 --> 04:42.940
已经的一些细节问题

04:42.940 --> 04:43.940
不好解决

04:43.940 --> 04:44.940
为了方便

04:44.940 --> 04:45.940
后面解决这个问题呢

04:45.940 --> 04:46.940
我们最好呢

04:46.940 --> 04:47.940
去安装一个

04:47.940 --> 04:48.940
第三方的主见

04:48.940 --> 04:49.940
第三方的裤

04:49.940 --> 04:50.940
可以更加方便的

04:50.940 --> 04:52.940
来帮我们生成那个就是

04:52.940 --> 04:53.940
根据配置

04:53.940 --> 04:54.940
来生成这个肉车主见

04:54.940 --> 04:55.940
啊

04:55.940 --> 04:56.940
而且呢

04:56.940 --> 04:57.940
我们这里还手动加了水

04:57.940 --> 04:58.940
对吧

04:58.940 --> 04:59.940
而且呢

04:59.940 --> 05:00.940
我们一般来说

05:00.940 --> 05:01.940
将5u里边配置的话

05:01.940 --> 05:02.940
它会自动举例加上

05:02.940 --> 05:03.940
那种类似于水的功能

05:03.940 --> 05:04.940
就匹配到了

05:04.940 --> 05:05.940
就不再往激情往后匹配了

05:05.940 --> 05:06.940
那么这样子呢

05:06.940 --> 05:07.940
我们

05:07.940 --> 05:08.940
对于这种方式的处理

05:08.940 --> 05:09.940
我们现在目前是

05:09.940 --> 05:10.940
手动的加水

05:10.940 --> 05:11.940
那么我们现在

05:11.940 --> 05:12.940
可以利用一个第三方裤

05:12.940 --> 05:13.940
啊

05:13.940 --> 05:14.940
这第三方裤的名字呢

05:14.940 --> 05:15.940
叫做

05:15.940 --> 05:16.940
Root

05:16.940 --> 05:17.940
confit

05:17.940 --> 05:18.940
叫啥

05:18.940 --> 05:19.940
算了

05:19.940 --> 05:20.940
我还是查一下吧

05:20.940 --> 05:23.310
免得遇忘

05:23.310 --> 05:24.310
叫做

05:24.310 --> 05:25.310
Root

05:25.310 --> 05:26.310
react

05:26.310 --> 05:27.310
应该是这个名字啊

05:27.310 --> 05:28.310
Rootconfig

05:28.310 --> 05:29.310
啊就这个啊

05:29.310 --> 05:30.310
就这个第三方裤

05:30.310 --> 05:31.310
那么这个第三方裤

05:31.310 --> 05:32.310
它就是专门

05:32.310 --> 05:33.310
来处理这个配置的

05:33.310 --> 05:34.310
方式情况

05:34.310 --> 05:35.310
因为我们知道

05:35.310 --> 05:36.310
之前我们讲

05:36.310 --> 05:37.310
Root的时候呢

05:37.310 --> 05:38.310
Root

05:38.310 --> 05:39.310
它其实没有去

05:39.310 --> 05:40.310
做这些事情的

05:40.310 --> 05:41.310
没有是什么配置的

05:41.310 --> 05:42.310
那全是要

05:42.310 --> 05:43.310
考虑自己说

05:43.310 --> 05:44.310
我们之前的

05:44.310 --> 05:45.310
还自己写过代嘛

05:45.310 --> 05:46.310
然后来去

05:46.310 --> 05:47.310
根据配置文件

05:47.310 --> 05:48.310
来生成主见

05:48.310 --> 05:49.310
还用了比较

05:49.310 --> 05:50.310
复杂的方式

05:50.310 --> 05:51.310
对吧

05:51.310 --> 05:52.310
还用了低伪那些东西

05:52.310 --> 05:53.310
那么实际上

05:53.310 --> 05:54.310
这个组件

05:54.310 --> 05:55.310
这个第三方裤呢

05:55.310 --> 05:56.310
它可以帮助你完成啊

05:56.310 --> 05:57.310
这个三方裤

05:57.310 --> 05:58.310
其实它给你提供了

05:58.310 --> 05:59.310
两个函数

05:59.310 --> 06:00.310
一个是March Road

06:00.310 --> 06:01.310
我们以后

06:01.310 --> 06:02.310
在以后会用啊

06:02.310 --> 06:03.310
现在用不到

06:03.310 --> 06:04.310
还有这个Render Road

06:04.310 --> 06:05.310
那么这一刻

06:05.310 --> 06:06.310
我们会用到这个东西啊

06:06.310 --> 06:07.310
那么这个Render Road

06:07.310 --> 06:08.310
它是根据配置文件

06:08.310 --> 06:09.310
来渲染一个

06:09.310 --> 06:10.310
渲染一系列的Road

06:10.310 --> 06:11.310
组件

06:11.310 --> 06:12.310
好

06:12.310 --> 06:13.310
咱们来看一下吧

06:13.310 --> 06:14.310
特别简单

06:14.310 --> 06:15.310
用起来特别简单

06:15.310 --> 06:16.310
我们的导入

06:16.310 --> 06:17.310
from

06:17.310 --> 06:18.310
react

06:18.310 --> 06:19.310
react

06:19.310 --> 06:20.310
那么导入它

06:20.310 --> 06:21.310
那么这里边一个Render Road

06:21.310 --> 06:22.310
它就是跟

06:22.310 --> 06:23.310
这个Render Road

06:23.310 --> 06:24.310
它是一个函数啊

06:24.310 --> 06:25.310
它就会根据你的

06:25.310 --> 06:26.310
一个数组

06:26.310 --> 06:27.310
根据你路由的配置能

06:27.310 --> 06:28.310
来生成

06:28.310 --> 06:29.310
一个一系列的Road组件

06:29.310 --> 06:30.310
有相当于是

06:30.310 --> 06:31.310
把这个东西封装上一个函数

06:31.310 --> 06:32.310
而且它里面

06:32.310 --> 06:34.310
是自动包含示威器的

06:34.310 --> 06:35.310
我们来看一下吧

06:35.310 --> 06:36.310
自动包含示威器

06:36.310 --> 06:37.310
所以我们这里呢

06:37.310 --> 06:38.310
只需要调用这个函数

06:38.310 --> 06:39.310
把什么传给它

06:39.310 --> 06:40.310
把我们那个数组传给它就行了

06:40.310 --> 06:41.310
对吧

06:41.310 --> 06:42.310
它就会把这个数组呢

06:42.310 --> 06:43.310
生成Road组件

06:43.310 --> 06:44.310
像这个东西

06:44.310 --> 06:45.310
是不是很简单

06:45.310 --> 06:46.310
这么一个函数

06:46.310 --> 06:47.310
自己都会写一个

06:47.310 --> 06:49.310
咱们这里写好了之后

06:49.310 --> 06:50.310
我们再来看一下

06:50.310 --> 06:52.880
运行

06:52.880 --> 06:56.220
ok

06:56.220 --> 06:57.220
这里呢

06:57.220 --> 07:01.450
刷新

07:01.450 --> 07:02.450
刷新

07:02.450 --> 07:03.450
ok

07:03.450 --> 07:04.450
一切正常

07:04.450 --> 07:05.450
一切正常都是一样的

07:05.450 --> 07:06.450
咱们再看一下

07:06.450 --> 07:08.450
如果说做组建分析的话

07:08.450 --> 07:09.450
我们看一下

07:09.450 --> 07:10.450
component

07:10.450 --> 07:11.450
那么component里面

07:11.450 --> 07:12.450
它就会

07:12.450 --> 07:13.450
看到没有

07:13.450 --> 07:14.450
是不是加上了示威器

07:14.450 --> 07:15.450
加上了示威器

07:15.450 --> 07:16.450
我们给你套了一个

07:16.450 --> 07:17.450
所以它里面

07:17.450 --> 07:18.450
已经自动帮你做了

07:18.450 --> 07:19.450
明白了

07:19.450 --> 07:20.450
是吧

07:20.450 --> 07:21.450
ok

07:21.450 --> 07:22.450
它的好处

07:22.450 --> 07:23.450
帮你生成一个Road组件

07:23.450 --> 07:24.450
那么我们完全可以使用它

07:24.450 --> 07:25.450
像这个东西

07:25.450 --> 07:26.450
我就可以不用了

07:26.450 --> 07:27.450
不用了

07:27.450 --> 07:28.450
ok

07:28.450 --> 07:29.450
那么现在都一样的

07:29.450 --> 07:30.450
看一下服务端旋

07:30.450 --> 07:31.450
电影

07:31.450 --> 07:32.450
电影列表

07:32.450 --> 07:33.450
都是没问题的

07:33.450 --> 07:34.450
都是没问题

07:34.450 --> 07:35.450
这里电影列表

07:35.450 --> 07:37.450
然后再看首页

07:37.450 --> 07:39.450
首页

07:39.450 --> 07:40.450
没问题

07:40.450 --> 07:41.450
都是没问题的

07:41.450 --> 07:42.450
ok

07:42.450 --> 07:43.450
那现在我们就把这个东西

07:43.450 --> 07:44.450
把它变成了配置的模式

07:44.450 --> 07:45.450
大家跟着我做一遍

07:45.450 --> 07:47.450
因为会对后边的影响

07:47.450 --> 07:48.450
其实目前做不做配置

07:48.450 --> 07:49.450
都无所谓的

07:49.450 --> 07:50.450
这是关于这一块

