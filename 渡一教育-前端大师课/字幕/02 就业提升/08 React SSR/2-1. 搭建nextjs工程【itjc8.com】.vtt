WEBVTT

00:01.010 --> 00:06.510
上一章咱们学了如何去手动的搭建一个SSR工程

00:06.510 --> 00:10.010
上一章很重要的 大家学了之后跟着做了之后

00:10.010 --> 00:14.010
就对SSR工程里边有哪些问题

00:14.010 --> 00:17.010
我们需要去解决 以及如何去解决

00:17.010 --> 00:19.510
那么有了一个大致的方案了

00:19.510 --> 00:23.010
至少以后遇到了这些问题有了一个方向了

00:23.010 --> 00:26.010
但实际上我们在公司里边做开发的话

00:26.010 --> 00:30.010
实际上不太会去手动的搭建SSR工程 当然也有

00:30.010 --> 00:33.010
一般来说会去用一些框架

00:33.010 --> 00:36.010
那么这些框架主要是两个

00:36.010 --> 00:38.010
一个是污密解释 大家学过了 对吧

00:38.010 --> 00:41.010
一个是Nexer解释

00:41.010 --> 00:44.010
这两个都能支持SSR

00:44.010 --> 00:46.010
但是有一说一

00:46.010 --> 00:49.010
不能说你用了这个框架之后

00:49.010 --> 00:51.010
你就能解决所有问题了

00:51.010 --> 00:54.010
它有些问题也是需要你手中处理的

00:54.010 --> 00:56.010
那我们这一章到底学啥呢

00:56.010 --> 00:58.010
这一章咱们学习Nexer解释

00:58.010 --> 01:01.010
为什么不用污密解释去搭建SSR呢

01:01.010 --> 01:05.010
是因为这样子污密解释目前刚刚升级到3.0

01:05.010 --> 01:07.010
给大家看一下官网吧

01:07.010 --> 01:11.010
污密解释升级到3.0之后有一个问题啊

01:14.010 --> 01:16.010
看一下吧

01:16.010 --> 01:19.010
升级到3.0之后 它目前还不支持SSR

01:19.010 --> 01:21.010
我们看一下它的文档

01:21.010 --> 01:24.010
后边一个SSR 康明述

01:24.010 --> 01:26.010
它占位加上

01:26.010 --> 01:28.010
如果说你要用SSR的话

01:28.010 --> 01:31.010
你只能用2.0版本

01:31.010 --> 01:34.010
但2.0版本呢 目前更新到3.0

01:34.010 --> 01:37.010
我担心到2.0版本很快就过时了

01:37.010 --> 01:39.010
所以说现在这个很纠结

01:39.010 --> 01:41.010
其实也没有啥

01:41.010 --> 01:44.010
因为SSR在2.0版本的时候

01:44.010 --> 01:45.010
它就明确说了

01:45.010 --> 01:49.010
它的SSR 框架就是跟Nexer解释学的

01:49.010 --> 01:51.010
所以说你学了Nexer解释之后

01:51.010 --> 01:54.010
你之后再去用污密解释的SSR

01:54.010 --> 01:55.010
就差不多了

01:55.010 --> 01:57.010
没有什么多的区别

01:57.010 --> 01:59.010
所以说我们这一章的学习Nexer解释

01:59.010 --> 02:01.010
而且目前市面上

02:01.010 --> 02:03.010
到公司里面Nexer解释

02:03.010 --> 02:05.010
就污密解释 使用多使用少了

02:05.010 --> 02:07.010
这个都还说不好 都在用

02:07.010 --> 02:10.010
所以说我们这里就直接使用Nexer解释

02:10.010 --> 02:13.010
那么我们首先看一下Nexer解释的官网

02:13.010 --> 02:14.010
给大家看一下吧

02:14.010 --> 02:15.010
它有两个网站

02:15.010 --> 02:17.010
一个是官网 一个是民间中文网

02:17.010 --> 02:19.010
民间中文网我看了一下

02:19.010 --> 02:20.010
它就是翻译的

02:20.010 --> 02:21.010
很多人都没有翻译

02:21.010 --> 02:23.010
所以说我们还是看官网吧

02:23.010 --> 02:25.010
看了官网来说

02:25.010 --> 02:27.010
大家看不懂 没事

02:27.010 --> 02:28.010
我带大家读

02:28.010 --> 02:30.010
我们这里直接找了它Docs

02:30.010 --> 02:33.010
它其实一看一下它的首页

02:33.010 --> 02:35.010
它说 它首页的话

02:35.010 --> 02:37.010
它就是来做server

02:37.010 --> 02:39.010
等一下

02:39.010 --> 02:41.010
它就是做SSR的

02:41.010 --> 02:42.010
server render

02:42.010 --> 02:44.010
server side render

02:44.010 --> 02:46.010
它做SSR的

02:46.010 --> 02:47.010
那么它其实还有个好处

02:47.010 --> 02:48.010
帮你生成静态一面

02:48.010 --> 02:49.010
只不过这个东西

02:49.010 --> 02:51.010
一般来说我们网站是动态的

02:52.010 --> 02:53.010
Internet不太会用

02:53.010 --> 02:55.010
我们一般来会生成

02:55.010 --> 02:58.010
就直接使用它的SSR功能就行了

02:58.010 --> 03:00.010
好 咱们找到它的Docs

03:00.010 --> 03:01.010
文档

03:01.010 --> 03:02.010
文档的第一个就是开始

03:02.010 --> 03:04.010
以后你们大家要学会看文档

03:04.010 --> 03:06.010
其实它全英文的也没关系

03:06.010 --> 03:07.010
你大概都看得懂

03:07.010 --> 03:09.010
前面的乐队都不用看了

03:09.010 --> 03:10.010
你直接看一下怎么来用

03:10.010 --> 03:11.010
它有两种用法

03:11.010 --> 03:13.010
一种是直接使用它的脚手架

03:13.010 --> 03:14.010
那个是App

03:14.010 --> 03:15.010
使用它的脚手架

03:15.010 --> 03:19.010
另外一个是使用它的手动大键

03:19.010 --> 03:20.010
那么我们这里的手动大键

03:20.010 --> 03:21.010
手动大键的话

03:21.010 --> 03:23.010
更加容易理解它的整个的

03:23.010 --> 03:25.010
要处理的流程

03:25.010 --> 03:26.010
咱们来手动大键

03:26.010 --> 03:27.010
它要安装三个东西

03:27.010 --> 03:29.010
一个是REX REX 动

03:29.010 --> 03:30.010
这个都毫无疑问

03:30.010 --> 03:31.010
一定要安装的

03:31.010 --> 03:32.010
另外一个呢

03:32.010 --> 03:33.010
就是它的Nex

03:33.010 --> 03:34.010
这么一个框架

03:34.010 --> 03:36.010
咱们来安装一下

03:36.010 --> 03:37.010
来吧

03:37.010 --> 03:39.010
我们这里使用NPM

03:39.010 --> 03:41.010
Install

03:41.010 --> 03:42.010
Nex

03:42.010 --> 03:43.010
Rex

03:43.010 --> 03:46.010
然后Rex 动

03:46.010 --> 03:47.010
让它安装

03:47.010 --> 03:49.010
好 让它安装一会

03:49.010 --> 03:50.010
安装好了之后

03:50.010 --> 03:52.010
它让你在pack.json里边

03:52.010 --> 03:53.010
配置一些脚问

03:53.010 --> 03:54.010
我们一会会配置

03:54.010 --> 03:55.010
等它安装吧

03:55.010 --> 03:56.010
然后呢

03:56.010 --> 03:57.010
它就非常简单了

03:57.010 --> 03:59.010
你只要在工程里边

03:59.010 --> 04:00.010
去建立这么一个目录

04:00.010 --> 04:02.010
Pages

04:02.010 --> 04:03.010
就跟那个

04:03.010 --> 04:05.010
無蜜接使是不差不多的

04:05.010 --> 04:07.010
无蜜接使其实就是从这儿写过来了

04:07.010 --> 04:09.010
Pages里边

04:09.010 --> 04:11.010
Nex 它会把它当成页面

04:11.010 --> 04:12.010
就这里边的所有东西

04:12.010 --> 04:13.010
它会当成页面

04:13.010 --> 04:14.010
而且呢

04:14.010 --> 04:16.010
会自动的把它映射到度游

04:16.010 --> 04:18.010
然后标准我们在这里写一个吧

04:18.010 --> 04:21.010
写一个index.js

04:21.010 --> 04:22.010
jsx

04:22.010 --> 04:23.010
好

04:23.010 --> 04:24.010
那么这里呢

04:24.010 --> 04:26.010
我们写上一个函数

04:26.010 --> 04:27.010
写上一个函数

04:27.010 --> 04:28.010
那么这就是个主键

04:28.010 --> 04:29.010
对吧

04:29.010 --> 04:30.010
你都不用去导入rex

04:30.010 --> 04:31.010
它会手动帮你处理

04:31.010 --> 04:32.010
比方说我们这里呢

04:32.010 --> 04:34.010
就返回一个

04:34.010 --> 04:35.010
H

04:35.010 --> 04:37.010
index

04:37.010 --> 04:39.010
首页

04:39.010 --> 04:40.010
你看一下吧

04:40.010 --> 04:41.010
我们这里呢

04:41.010 --> 04:42.010
再建一个文念甲

04:42.010 --> 04:45.010
比方说我们这里建个文念甲就是

04:46.010 --> 04:48.010
movies

04:49.010 --> 04:50.010
movies

04:50.010 --> 04:51.010
那么现在呢

04:51.010 --> 04:52.010
我们在这里新建个文件

04:52.010 --> 04:54.010
index.jsx

04:54.010 --> 04:55.010
好

04:55.010 --> 04:56.010
这里呢

04:56.010 --> 04:57.010
我们再来edf

04:57.010 --> 04:58.010
这里呢

04:58.010 --> 04:59.010
返回一个

04:59.010 --> 05:01.010
hdn1

05:01.010 --> 05:02.010
OK

05:02.010 --> 05:03.010
那么现在呢

05:03.010 --> 05:04.010
我们再来一个

05:04.010 --> 05:05.010
再来一个

05:05.010 --> 05:07.010
除了用这种文件甲的方式

05:07.010 --> 05:08.010
我们再来一个

05:08.010 --> 05:09.010
再来一个一面

05:09.010 --> 05:11.010
Page1

05:11.010 --> 05:13.010
当然js也可以

05:13.010 --> 05:14.010
jsjs

05:14.010 --> 05:15.010
都无所谓的

05:15.010 --> 05:17.010
edf

05:17.010 --> 05:18.010
那么这里呢

05:18.010 --> 05:20.010
Page1

05:20.010 --> 05:22.010
返回

05:22.010 --> 05:24.010
return

05:24.010 --> 05:25.010
Page1

05:25.010 --> 05:26.010
OK

05:26.010 --> 05:27.010
那么现在呢

05:27.010 --> 05:28.010
我们就已经可以

05:28.010 --> 05:29.010
实现一个什么效果呢

05:29.010 --> 05:30.010
就它已经有路由了

05:30.010 --> 05:32.010
当我们访问这样的地址

05:32.010 --> 05:33.010
当我们访问

05:33.010 --> 05:34.010
这样的地址的时候

05:34.010 --> 05:35.010
它对应到哪个主键呢

05:35.010 --> 05:36.010
对应到Page

05:36.010 --> 05:38.010
下面的index.jsx

05:38.010 --> 05:39.010
对吧

05:39.010 --> 05:40.010
那么当我们访问

05:40.010 --> 05:41.010
这样的路径的时候

05:41.010 --> 05:42.010
movies

05:42.010 --> 05:43.010
那么这个时候呢

05:43.010 --> 05:44.010
Page1

05:44.010 --> 05:46.010
下面的movies.jsx

05:46.010 --> 05:47.010
有没有这个文件

05:47.010 --> 05:48.010
是没有

05:48.010 --> 05:49.010
没有的话

05:49.010 --> 05:50.010
它就会找对应的目录

05:50.010 --> 05:51.010
对应的目录就是

05:51.010 --> 05:55.010
movies index.jsx

05:55.010 --> 05:56.010
它会找到这个

05:56.010 --> 05:57.010
然后呢

05:57.010 --> 05:58.010
再来一个

05:58.010 --> 05:59.010
Page1

05:59.010 --> 06:00.010
那么它会找到

06:00.010 --> 06:01.010
Page下面的

06:01.010 --> 06:03.010
Page1.jsx

06:03.010 --> 06:04.010
就这么简单

06:04.010 --> 06:05.010
如果说找到了

06:05.010 --> 06:06.010
找不到的话

06:06.010 --> 06:07.010
又会去找这个

06:07.010 --> 06:08.010
Page1

06:08.010 --> 06:09.010
目录下面的

06:09.010 --> 06:11.010
index.jsx

06:12.010 --> 06:13.010
没问题吧

06:13.010 --> 06:14.010
OK

06:14.010 --> 06:15.010
那么我们现在就

06:15.010 --> 06:16.010
做了三个页面出来

06:16.010 --> 06:17.010
就这么简单

06:17.010 --> 06:18.010
然后呢

06:18.010 --> 06:19.010
我们这里安装好了

06:19.010 --> 06:20.010
安装好了

06:20.010 --> 06:21.010
它有些警告

06:21.010 --> 06:22.010
警告不用管它

06:22.010 --> 06:23.010
咱们来这边

06:23.010 --> 06:24.010
来看一下

06:24.010 --> 06:25.010
这里呢

06:25.010 --> 06:26.010
我们要配置一下

06:26.010 --> 06:27.010
Page1.jsx的脚本

06:27.010 --> 06:29.010
这里呢有三个脚本

06:29.010 --> 06:30.010
我们这里呢

06:30.010 --> 06:31.010
找到这个

06:31.010 --> 06:33.010
找到这个Page1.jsx

06:33.010 --> 06:34.010
脚本这里呢

06:34.010 --> 06:35.010
我们配置一下

06:35.010 --> 06:36.010
有三个

06:36.010 --> 06:37.010
一个step

06:37.010 --> 06:38.010
就是我们开发的时候

06:38.010 --> 06:39.010
它会启动一个开发服务器

06:39.010 --> 06:40.010
也就是它类似的webpack

06:40.010 --> 06:41.010
它启动一个开发服务器

06:41.010 --> 06:43.010
来帮我们来调试

06:43.010 --> 06:44.010
然后呢

06:44.010 --> 06:45.010
如果说我们要打包的话

06:45.010 --> 06:46.010
要进行两步

06:46.010 --> 06:47.010
先build

06:47.010 --> 06:48.010
然后再start

06:48.010 --> 06:50.010
就是打包完成之后呢

06:50.010 --> 06:51.010
我们直接利用这个工程

06:51.010 --> 06:52.010
来启动一个服务器

06:52.010 --> 06:53.010
好

06:53.010 --> 06:54.010
接下来我们来看一下吧

06:54.010 --> 06:55.010
来看一下

06:55.010 --> 06:56.010
保存

06:56.010 --> 06:58.010
首先我们能用开发模式运行一下

06:58.010 --> 06:59.010
NPM

06:59.010 --> 07:00.010
对

07:00.010 --> 07:01.010
NPM装

07:01.010 --> 07:02.010
对

07:02.010 --> 07:03.010
好来运行一下

07:03.010 --> 07:05.010
那么它现在告诉你

07:05.010 --> 07:07.010
现在正在了

07:07.010 --> 07:09.010
正在了开启这个开发服务器

07:10.010 --> 07:13.580
那么现在它等待在哪个端口呢

07:13.580 --> 07:14.580
3000端口

07:14.580 --> 07:15.580
ok

07:15.580 --> 07:17.580
那么现在编印完成

07:17.580 --> 07:18.580
编印完成过后呢

07:18.580 --> 07:19.580
你会看到

07:19.580 --> 07:20.580
这个目录下面呢

07:20.580 --> 07:21.580
它出现这么一个文件夹

07:21.580 --> 07:22.580
del next

07:22.580 --> 07:23.580
这么一个文件夹

07:23.580 --> 07:24.580
这个文件夹呢

07:24.580 --> 07:25.580
就是它编印的结果

07:25.580 --> 07:26.580
那么这里呢就是

07:26.580 --> 07:28.580
最原始的服务器代码

07:28.580 --> 07:29.580
以及呢

07:29.580 --> 07:30.580
刻骨大代码

07:30.580 --> 07:31.580
都在这里面

07:31.580 --> 07:32.580
全部都在这里面

07:32.580 --> 07:33.580
你不用管它是什么

07:33.580 --> 07:34.580
它打包完成过后

07:34.580 --> 07:35.580
就是个del next

07:35.580 --> 07:36.580
就跟那个无蜜结实

07:36.580 --> 07:37.580
所以也要编译

07:37.580 --> 07:39.580
那么我们这个文件夹呢

07:39.580 --> 07:40.580
因为它文件的改动呢

07:40.580 --> 07:41.580
会导致这个文件夹改动

07:41.580 --> 07:42.580
因此呢

07:42.580 --> 07:43.580
我们这里呢

07:43.580 --> 07:44.580
一般来说

07:44.580 --> 07:45.580
会在git1.0里面把它去掉

07:45.580 --> 07:46.580
del next

07:46.580 --> 07:47.580
这个文件夹

07:47.580 --> 07:48.580
我们把它去掉

07:49.580 --> 07:50.580
那么现在呢

07:50.580 --> 07:51.580
我们来看一下

07:52.580 --> 07:53.580
我们这里呢

07:53.580 --> 07:54.580
运行

07:54.580 --> 07:55.580
运行出来了

07:55.580 --> 07:56.580
接下来我们在这里

07:56.580 --> 07:57.580
localhost3000

07:59.580 --> 08:00.580
你看

08:00.580 --> 08:01.580
是不是首页发文到了

08:01.580 --> 08:02.580
而且呢

08:02.580 --> 08:03.580
不仅如此

08:03.580 --> 08:04.580
点击右键

08:04.580 --> 08:05.580
查看页面原代码

08:05.580 --> 08:06.580
你这里刷新一下

08:06.580 --> 08:07.580
你会看到

08:07.580 --> 08:08.580
它做了一些注水的工作

08:08.580 --> 08:09.580
对吧

08:09.580 --> 08:10.580
给你加了一些东西进来

08:10.580 --> 08:11.580
这个东西不用管它

08:11.580 --> 08:12.580
我们往下面看

08:12.580 --> 08:13.580
首页

08:15.580 --> 08:16.580
你看这里

08:16.580 --> 08:17.580
首页出来了

08:17.580 --> 08:18.580
也就是我们这里的主键

08:18.580 --> 08:20.580
它会在服务端完成渲染之后

08:20.580 --> 08:21.580
给发到科普端

08:21.580 --> 08:23.580
也就是有理由

08:23.580 --> 08:24.580
它就解决了白屏问题

08:24.580 --> 08:26.580
以及SEO的问题

08:26.580 --> 08:27.580
好

08:27.580 --> 08:28.580
这样我们再看一下

08:28.580 --> 08:29.580
如果说movice

08:29.580 --> 08:30.580
发文证

08:30.580 --> 08:31.580
是不是电影页

08:31.580 --> 08:32.580
对吧

08:32.580 --> 08:33.580
点击右键

08:33.580 --> 08:34.580
查看原代码

08:34.580 --> 08:35.580
电影页出来了

08:35.580 --> 08:36.580
然后呢

08:37.580 --> 08:38.580
配级1

08:39.580 --> 08:40.580
配级1

08:40.580 --> 08:41.580
你看看

08:41.580 --> 08:42.580
是不是都有了

08:42.580 --> 08:43.580
而且不仅如此

08:43.580 --> 08:45.580
它还给你自动做了一些优化

08:46.580 --> 08:47.580
就是我们

08:47.580 --> 08:48.580
每一个页面的代码

08:48.580 --> 08:50.580
你要用到哪些代码

08:50.580 --> 08:51.580
它才会加载那些代码

08:51.580 --> 08:52.580
比方说我们首页

08:52.580 --> 08:54.580
首页的话是用不到这个

08:54.580 --> 08:55.580
用不到的

08:55.580 --> 08:57.580
就是index和配级1

08:57.580 --> 08:58.580
这个页面的代码

08:58.580 --> 09:00.580
因此它只加载首页的代码

09:00.580 --> 09:01.580
当你挑转到index

09:01.580 --> 09:03.580
当你挑转到配级1的时候

09:03.580 --> 09:05.580
它才会去加载

09:05.580 --> 09:06.580
特写页面代码

09:06.580 --> 09:07.580
因为它每个页面的代码

09:07.580 --> 09:08.580
是分开的

09:08.580 --> 09:09.580
它当然会提取一些

09:09.580 --> 09:10.580
公共代码

09:10.580 --> 09:11.580
是这么回事

09:11.580 --> 09:12.580
所以说优化

09:12.580 --> 09:13.580
它都可以帮你优化了

09:13.580 --> 09:14.580
很多情况下

09:14.580 --> 09:16.580
我们都不需要去手动管理

09:16.580 --> 09:17.580
OK

09:17.580 --> 09:18.580
那么这里

09:18.580 --> 09:19.580
我们就把这个工程

09:19.580 --> 09:20.580
大家好了

09:20.580 --> 09:21.580
那么这是开发模式

09:21.580 --> 09:22.580
如果说我们编写完代码

09:22.580 --> 09:23.580
已经调试完成之后

09:23.580 --> 09:24.580
调试完成之后

09:24.580 --> 09:25.580
我们要打包

09:25.580 --> 09:26.580
打包的话

09:26.580 --> 09:27.580
怎么打包呢

09:27.580 --> 09:29.580
npm build

09:29.580 --> 09:30.580
run build

09:31.580 --> 09:32.580
那么通过这个命令

09:32.580 --> 09:33.580
来完成打包

09:33.580 --> 09:34.580
大家等一下

09:34.580 --> 09:36.580
那么它就会生成一个

09:36.580 --> 09:38.580
生产环境的打包代码

09:39.580 --> 09:40.580
稍等一下

09:47.340 --> 09:49.340
刚才还忘了演示了

09:49.340 --> 09:50.340
忘了演示什么了

09:50.340 --> 09:51.340
忘了演示就是

09:51.340 --> 09:52.340
我们代码改变了之后

09:52.340 --> 09:54.340
它会进行热替换

09:54.340 --> 09:56.340
它是开启的热替换的

09:56.340 --> 09:57.340
所以说你直接改代码

09:57.340 --> 09:59.340
你可以在流量器里边看到效果

09:59.340 --> 10:00.340
刚才忘了演示了

10:00.340 --> 10:01.340
大家可以去试一下

10:04.620 --> 10:05.620
打包有点久

10:05.620 --> 10:06.620
打包有点久

10:07.620 --> 10:09.620
是否这卡住了吗

10:09.620 --> 10:11.620
我印象中是没有那么久的

10:12.620 --> 10:13.620
刚才应该是卡住了

10:13.620 --> 10:14.620
点了一下

10:14.620 --> 10:15.620
现在我不知道怎么回事

10:15.620 --> 10:17.620
我这个power show老实说问题

10:17.620 --> 10:19.620
是不是因为我没有用那个

10:21.620 --> 10:22.620
管理员身份打开

10:23.620 --> 10:24.620
那么现在打包完成了

10:25.620 --> 10:26.620
打包完成了

10:26.620 --> 10:27.620
你看它每个页面

10:27.620 --> 10:28.620
Movies页面

10:28.620 --> 10:29.620
它可以打包了

10:29.620 --> 10:31.620
配级1页面可以打包了

10:31.620 --> 10:33.620
然后手页也可以打包了

10:33.620 --> 10:34.620
每个页面都打包了

10:35.620 --> 10:37.620
那么现在我们来看一下

10:38.620 --> 10:40.620
这些文件的拆分都比较好的

10:40.620 --> 10:42.620
那么现在我们打包完成了之后

10:42.620 --> 10:44.620
然后我们它打包到哪儿的

10:44.620 --> 10:45.620
打包到这儿的

10:45.620 --> 10:46.620
还是这个目录下面

10:46.620 --> 10:48.620
那么打包完成之后

10:48.620 --> 10:49.620
我们来运行一下

10:49.620 --> 10:50.620
怎么来运行

10:50.620 --> 10:54.620
NPM run start

10:54.620 --> 10:55.620
运行

10:55.620 --> 10:56.620
那么它就会以这个目录

10:56.620 --> 10:58.620
为服务器来进行启动

10:58.620 --> 10:59.620
那么现在就启动了

10:59.620 --> 11:00.620
接下来我们来看一下

11:00.620 --> 11:01.620
配级1

11:01.620 --> 11:02.620
没问题

11:02.620 --> 11:04.620
手页没问题

11:05.620 --> 11:06.620
然后Movies都没问题

11:07.620 --> 11:09.620
这就是它的最基本的工程的搭建

11:09.620 --> 11:11.620
以及它的基本的使用

11:11.620 --> 11:14.620
我们这里可能先做一个介绍

11:14.620 --> 11:15.620
以及它的基本使用

11:15.620 --> 11:16.620
把工程搭建起来

11:16.620 --> 11:17.620
好了

11:17.620 --> 11:18.620
下来跟他去做一下

11:18.620 --> 11:19.620
非常简单

