WEBVTT

00:00.300 --> 00:03.300
这节课咱们来搞定图片

00:03.300 --> 00:06.300
其实上节课咱们搞定了CSS

00:06.300 --> 00:08.300
你只要把上节课搞懂了之后

00:08.300 --> 00:11.300
这节课搞定图片实际上是非常简单的

00:11.300 --> 00:13.300
还是那个道理

00:13.300 --> 00:20.300
就是说客户端负责生成图片文件

00:20.300 --> 00:26.300
然后服务器保证图片录进一致

00:26.300 --> 00:29.870
就行了 就没了

00:29.870 --> 00:31.870
比如说我们这里有个图片

00:31.870 --> 00:33.870
成哥 我也不好用别人的图片

00:33.870 --> 00:37.870
比如说我们在页面上

00:37.870 --> 00:40.870
然后去使用这张图片

00:40.870 --> 00:42.870
import导入

00:45.870 --> 00:48.870
png url from

00:48.870 --> 00:50.870
反回上级目录

00:50.870 --> 00:52.870
再反回上级目录

00:52.870 --> 00:55.870
and set成哥.png

00:55.870 --> 00:57.870
导致图片

00:57.870 --> 00:59.870
然后这是图片录进

00:59.870 --> 01:01.870
图片录进我们就在这吧

01:01.870 --> 01:03.870
随便找个地方

01:03.870 --> 01:05.870
那么录进我就写这

01:05.870 --> 01:07.870
png url

01:07.870 --> 01:09.870
那么这个单码的服务端会运行

01:09.870 --> 01:10.870
客户端也会运行

01:10.870 --> 01:12.870
那么肯定要经过微拍的解析

01:12.870 --> 01:14.870
微拍的肯定是解析不了这个图片的

01:14.870 --> 01:17.870
所以说我们要利用fileloader

01:17.870 --> 01:19.870
fileloader

01:19.870 --> 01:21.870
然后来帮我们加载图片

01:21.870 --> 01:23.870
并且生成图片

01:23.870 --> 01:25.870
fileloader还会生成图片

01:26.870 --> 01:27.870
客户端肯定要配置

01:27.870 --> 01:28.870
服务端肯定要配置

01:28.870 --> 01:30.870
我们只需要让客户端来生成图片

01:30.870 --> 01:31.870
到这个目录

01:31.870 --> 01:33.870
比较到amg文件夹下面

01:33.870 --> 01:34.870
然后服务器端

01:34.870 --> 01:36.870
它只是把这个录进放这就行了

01:36.870 --> 01:37.870
它不要生成文件了

01:37.870 --> 01:39.870
就这么一回事

01:39.870 --> 01:41.870
比方说我们在客户端这里

01:41.870 --> 01:43.870
客户端这里我们再配置一个module

01:47.870 --> 01:48.870
这什么呢

01:48.870 --> 01:50.870
凡是以png

01:50.870 --> 01:52.870
或者是

01:52.870 --> 01:54.870
jpg

01:55.870 --> 01:57.870
或者是

01:57.870 --> 01:59.870
gif

01:59.870 --> 02:01.870
我们随便写几个图片的录进

02:01.870 --> 02:02.870
后续名吧

02:02.870 --> 02:04.870
凡是以这几个东西结尾的

02:04.870 --> 02:05.870
结尾的

02:05.870 --> 02:06.870
那么我们就认为是图片

02:06.870 --> 02:07.870
图片的话我们交给

02:07.870 --> 02:09.870
usefileloader

02:09.870 --> 02:11.870
fileloader去执行

02:11.870 --> 02:12.870
就完了

02:12.870 --> 02:13.870
那么这样子

02:13.870 --> 02:15.870
客户端肯定会生成图片了

02:15.870 --> 02:16.870
我们再配置一下吧

02:16.870 --> 02:17.870
再配置一下

02:17.870 --> 02:18.870
这样子再配置一下

02:18.870 --> 02:19.870
loader

02:19.870 --> 02:21.870
我们使用fileloader

02:21.870 --> 02:23.870
配置一下options

02:23.870 --> 02:25.870
它里边有一个配置

02:25.870 --> 02:26.870
好久没用了

02:26.870 --> 02:27.870
我都有一点忘了

02:27.870 --> 02:28.870
看一下吧

02:28.870 --> 02:29.870
看一下文档

02:35.710 --> 02:37.710
这里我们看一下怎么配置的

02:37.710 --> 02:39.710
一个文件名

02:39.710 --> 02:40.710
name

02:40.710 --> 02:42.710
文件名配置到哪呢

02:42.710 --> 02:46.710
配置到mh目录下面的name

02:46.710 --> 02:48.710
然后

02:48.710 --> 02:49.710
hash

02:50.710 --> 02:52.710
然后后边是est

02:53.710 --> 02:55.710
就是后续名

02:55.710 --> 02:56.710
那么现在的客户端

02:56.710 --> 02:57.710
就可以生成文件了

02:57.710 --> 02:58.710
好

02:58.710 --> 02:59.710
咱们单独来试一下

02:59.710 --> 03:01.710
单独来试一下客户端

03:01.710 --> 03:03.710
npm run

03:03.710 --> 03:05.710
dev

03:05.710 --> 03:07.710
build

03:07.710 --> 03:09.710
client

03:09.710 --> 03:11.710
生成

03:11.710 --> 03:13.710
那么你看一下

03:13.710 --> 03:16.150
这边

03:16.150 --> 03:17.150
没生成文件吗

03:17.150 --> 03:18.150
生成出来了

03:18.150 --> 03:19.150
你看一下

03:19.150 --> 03:20.150
所以生成出来了

03:20.150 --> 03:22.150
图片文件就生成出来了

03:22.150 --> 03:23.150
那么现在

03:23.150 --> 03:24.150
客户端那边搞定了

03:24.150 --> 03:25.150
服务器端的时候

03:25.150 --> 03:26.150
还得配置一下

03:26.150 --> 03:27.150
服务端不配置的话

03:27.150 --> 03:29.150
第一 它未拍个解析不了这个文件

03:29.150 --> 03:30.150
这个文件搞不定

03:30.150 --> 03:32.150
它不知道怎么来处理

03:32.150 --> 03:33.150
第二个

03:33.150 --> 03:34.150
你不配置的话

03:34.150 --> 03:36.150
它生成的路径就不一样

03:36.150 --> 03:37.150
但是服务端有一个问题就是

03:37.150 --> 03:38.150
它不能再生成文件了

03:38.150 --> 03:40.150
因为文件它生成到哪儿去了

03:40.150 --> 03:41.150
它生成到这个目录下面去了

03:41.150 --> 03:43.150
它不能再生成文件了

03:43.150 --> 03:44.150
那么服务端怎么能

03:44.150 --> 03:45.150
怎么能让它不生成文件呢

03:45.150 --> 03:46.150
我们往下找一找

03:46.150 --> 03:48.150
它肯定有说

03:48.150 --> 03:50.150
这里的mh file

03:50.150 --> 03:51.150
就这个

03:51.150 --> 03:52.150
它问你要不要生成文件

03:52.150 --> 03:53.150
默认是要生成文件

03:53.150 --> 03:55.150
那么它这里已经说得很明白了

03:55.150 --> 03:56.150
提供这个选项

03:56.150 --> 03:57.150
主要是为了服务端

03:57.150 --> 03:59.150
server side package

03:59.150 --> 04:01.150
那么让服务端只生成路径

04:01.150 --> 04:02.150
它不要生成文件

04:02.150 --> 04:04.150
所以说我们把配置为force就行了

04:04.150 --> 04:05.150
OK

04:05.150 --> 04:06.150
那么这里

04:06.150 --> 04:08.150
服务端这里

04:08.150 --> 04:10.150
服务端这里

04:10.150 --> 04:12.150
在这儿

04:12.150 --> 04:13.150
我们一样的

04:13.150 --> 04:15.150
只是让它不要再生成

04:15.150 --> 04:16.150
mh file等于force

04:16.150 --> 04:18.150
不要再生成文件了

04:18.150 --> 04:19.150
没了

04:19.150 --> 04:20.150
没了

04:20.150 --> 04:21.150
其他都一样

04:21.150 --> 04:22.150
接下来我们来看一下

04:22.150 --> 04:26.300
现在我们来运行

04:26.300 --> 04:28.300
npn装

04:28.300 --> 04:32.080
dev

04:32.080 --> 04:33.080
看一下

04:33.080 --> 04:37.290
现在我们打开localhost

04:37.290 --> 04:39.290
8080

04:39.290 --> 04:40.290
你看

04:40.290 --> 04:41.290
图片是不是出来了

04:41.290 --> 04:42.290
然后我们看一下元代吧

04:42.290 --> 04:43.290
元代吧里边

04:43.290 --> 04:44.290
是不是也有一个image

04:44.290 --> 04:46.290
图片的路径也是这样子

04:46.290 --> 04:47.290
没问题

04:47.290 --> 04:48.290
只是服端不生成图片

04:48.290 --> 04:49.290
客户端生成图片

04:49.290 --> 04:51.290
我们图片生成到哪去了

04:51.290 --> 04:52.290
生成到public目录下面去了

04:52.290 --> 04:53.290
public目录

04:53.290 --> 04:54.290
我们知道是静态目录

04:54.290 --> 04:56.290
我们只要根据路径来访问

04:56.290 --> 04:57.290
它就能够去到图片

04:57.290 --> 04:58.290
你看

04:58.290 --> 05:00.290
图片地址复制一下

05:00.290 --> 05:01.290
然后这里展开过来

05:01.290 --> 05:02.290
你看

05:02.290 --> 05:03.290
是不是这个路径

05:03.290 --> 05:04.290
这个路径它就能够访问到

05:04.290 --> 05:06.290
public目录下面的这个文件了

05:06.290 --> 05:07.290
为什么能访问到

05:07.290 --> 05:09.290
因为服端这边有这个东西

05:09.290 --> 05:11.290
有这个东西存在

05:11.290 --> 05:13.290
都是关于这一块图片

05:13.290 --> 05:14.290
那么如果说有的时候

05:14.290 --> 05:16.290
图片是在CSS里边

05:16.290 --> 05:17.290
它又怎么办呢

05:17.290 --> 05:18.290
是在CSS里边

05:18.290 --> 05:19.290
我们是一样的

05:19.290 --> 05:20.290
是一样的

05:20.290 --> 05:21.290
比方说

05:21.290 --> 05:22.290
我们这里不是

05:22.290 --> 05:24.290
这里有个div

05:24.290 --> 05:25.290
div

05:25.290 --> 05:27.290
这个div它有一个class

05:27.290 --> 05:28.290
class name

05:28.290 --> 05:29.290
我们这里

05:29.290 --> 05:31.290
在CSS里边写一下

05:31.290 --> 05:33.290
就是一个bg

05:33.290 --> 05:35.290
background

05:35.290 --> 05:36.290
url

05:36.290 --> 05:37.290
图片来自于哪呢

05:37.290 --> 05:38.290
来自于

05:38.290 --> 05:39.290
第2条鞋杠

05:39.290 --> 05:40.290
第2条鞋杠

05:40.290 --> 05:42.290
而CSS下面的

05:42.290 --> 05:43.290
这个图片

05:43.290 --> 05:44.290
那么给它一个宽高

05:44.290 --> 05:46.290
宽度为300个相处

05:46.290 --> 05:48.290
高度为300个相处

05:48.290 --> 05:49.290
ok

05:49.290 --> 05:50.290
那么这边

05:50.290 --> 05:51.290
我们就使用这个class name

05:51.290 --> 05:52.290
bg

05:52.290 --> 05:53.290
styles

05:53.290 --> 05:54.290
bg

05:54.290 --> 05:55.290
这个我主持要了

05:55.290 --> 05:56.290
那么如果说是

05:56.290 --> 05:57.290
这种情况的话

05:57.290 --> 05:58.290
这种情况的话

05:58.290 --> 05:59.290
我们在这里加一个

05:59.290 --> 06:00.290
还是把e密集加上

06:01.290 --> 06:02.290
大家看代码的时候

06:02.290 --> 06:03.290
都存在

06:03.290 --> 06:04.290
这里我们png

06:04.290 --> 06:05.290
url

06:05.290 --> 06:06.290
ok

06:06.290 --> 06:07.290
我们把这种东西加上

06:07.290 --> 06:08.290
那么现在

06:08.290 --> 06:09.290
我们来看一下

06:09.290 --> 06:10.290
现在会有什么样的问题

06:10.290 --> 06:11.290
我们一个问题解决

06:11.290 --> 06:13.290
那么现在这个div的图片

06:13.290 --> 06:14.290
是不是没有出来

06:14.290 --> 06:15.290
div的图片没有出来

06:15.290 --> 06:16.290
那怎么会没有出来呢

06:16.290 --> 06:18.290
我们来检查一下元代

06:18.290 --> 06:20.290
我们要学会分析问题

06:20.290 --> 06:21.290
那么这个内央式是存在的

06:21.290 --> 06:22.290
内央式是存在的

06:22.290 --> 06:24.290
那么我们这里的右键

06:24.290 --> 06:25.290
检查

06:25.290 --> 06:26.290
内央式是存在的

06:26.290 --> 06:27.290
内央式该加上了

06:27.290 --> 06:28.290
因为我们上去可以

06:28.290 --> 06:29.290
已经搞定了样式

06:29.290 --> 06:30.290
内央式里边

06:30.290 --> 06:31.290
它一个url

06:31.290 --> 06:32.290
url的图片

06:32.290 --> 06:33.290
它路径也出来了

06:33.290 --> 06:34.290
路径也出来了

06:34.290 --> 06:35.290
但是一个问题在于什么呢

06:35.290 --> 06:36.290
这个路径不对

06:36.290 --> 06:37.290
这个路径不对

06:37.290 --> 06:38.290
因为这个路径

06:38.290 --> 06:39.290
它的CSS文件在哪呢

06:39.290 --> 06:41.290
它生成的CSS文件在这

06:41.290 --> 06:42.290
它是读到什么呢

06:42.290 --> 06:43.290
读到当前目录下面的

06:43.290 --> 06:44.290
e密集下面的东西

06:44.290 --> 06:45.290
对吧

06:45.290 --> 06:46.290
当前目录下面的东西

06:46.290 --> 06:47.290
你看

06:47.290 --> 06:48.290
当前目录下面

06:48.290 --> 06:49.290
这个CSS文件夹下面

06:49.290 --> 06:50.290
是不是没有图片

06:50.290 --> 06:51.290
你看这个路径

06:51.290 --> 06:52.290
这是我们的CSS

06:52.290 --> 06:53.290
这个CSS

06:53.290 --> 06:54.290
它读的是url

06:54.290 --> 06:55.290
这个东西

06:55.290 --> 06:56.290
当前目录没有这个文件

06:56.290 --> 06:57.290
那么这个是什么问题呢

06:57.290 --> 06:59.290
这是个典型的

06:59.290 --> 07:00.290
典型的什么问题

07:00.290 --> 07:01.290
典型的打包的时候

07:01.290 --> 07:04.290
没有给它配置public pass

07:04.290 --> 07:06.290
我们以前讲wepack的时候讲过

07:06.290 --> 07:07.290
所以说我们这里只需要

07:07.290 --> 07:08.290
把public pass配置一下

07:08.290 --> 07:10.290
我们在pass里边配置吧

07:10.290 --> 07:13.290
配置一个output里边

07:13.290 --> 07:14.290
这边没有output

07:14.290 --> 07:16.290
大家在这边配置吧

07:16.290 --> 07:21.290
然后配置一个public pass

07:21.290 --> 07:22.290
配置一个这个东西

07:23.290 --> 07:24.290
保存

07:24.290 --> 07:25.290
我们这里重新打包一次

07:31.200 --> 07:32.200
ok

07:32.200 --> 07:33.200
那么现在我们再刷新一次

07:34.200 --> 07:36.200
还是没有出来

07:36.200 --> 07:37.200
还是没有出来

07:37.200 --> 07:39.200
那么我们看一下怎么回事

07:39.200 --> 07:40.200
它应该出来了

07:40.200 --> 07:41.200
应该出来才对

07:41.200 --> 07:43.200
但它还是没有出来

07:43.200 --> 07:44.200
再刷新一次

07:44.200 --> 07:45.200
出来了

07:45.200 --> 07:46.200
出来了

07:46.200 --> 07:47.200
刚才还没打包完成

07:47.200 --> 07:48.200
ok

07:48.200 --> 07:49.200
那么现在的deb是不是出来了

07:49.200 --> 07:50.200
那么现在的图片路径

07:50.200 --> 07:51.200
你看一下

07:51.200 --> 07:53.200
给你夹了一个public pass在前面

07:53.200 --> 07:54.200
对吧

07:54.200 --> 07:55.200
那么这样就没问题了

07:55.200 --> 07:56.200
ok

07:56.200 --> 07:57.200
这是关于这一块

07:57.200 --> 07:59.200
这里有一个错误

08:00.200 --> 08:01.200
服务端没有配置

08:01.200 --> 08:02.200
服务端没有配置

08:02.200 --> 08:04.200
那么服务端还得配置一下

08:05.200 --> 08:06.200
两个不一样

08:06.200 --> 08:07.200
两个不一样

08:07.200 --> 08:09.200
那么服务端也得配置一下

08:09.200 --> 08:11.200
服务端这里也配置一下

08:11.200 --> 08:14.200
public pass

08:14.200 --> 08:15.200
保存

08:17.200 --> 08:18.200
有人打包

08:20.200 --> 08:21.200
其实服务端不配置的话

08:21.200 --> 08:22.200
也不影响

08:22.200 --> 08:24.200
但是他希望两个是保持一致的

08:24.200 --> 08:25.200
希望两个保持一致

08:26.200 --> 08:28.770
这里怎么刷新

08:30.770 --> 08:31.770
现在没错误了

08:31.770 --> 08:32.770
对吧

08:32.770 --> 08:33.770
ok

08:33.770 --> 08:34.770
那么这一块就是关于

08:34.770 --> 08:36.770
关于图片的处理

08:36.770 --> 08:37.770
是一样的道理

08:37.770 --> 08:38.770
当然如果说

08:38.770 --> 08:39.770
你还要做什么字体图标

08:39.770 --> 08:40.770
那些是一样的道理

08:40.770 --> 08:42.770
它只是一个普通文件而已

08:42.770 --> 08:43.770
字体图标

08:43.770 --> 08:44.770
ok

08:44.770 --> 08:45.770
那么是关于这一块的处理

