WEBVTT

00:00.300 --> 00:03.500
哈喽 同学们大家好 咱们今天来继续学习NAS

00:03.500 --> 00:07.500
今天学习内容呢 是跟路过相关

00:07.500 --> 00:11.300
然后这个在讲课程之前呢 给大家推荐一个网站

00:11.300 --> 00:14.000
因为这个呢 是纯中文的

00:14.000 --> 00:16.600
因为之前呢 跟同学们说看英文网站

00:16.600 --> 00:20.600
考虑到大家说这个 在学习上的困难程度对吧

00:20.600 --> 00:24.000
毕竟 因为文档越度前车越有压力

00:24.000 --> 00:25.800
那当然了 那你说这个文档全嘛

00:25.800 --> 00:28.000
如果是API的话 是够全的

00:28.000 --> 00:31.300
但是你就不要什么周期什么的 这些东西这里面是没有的

00:31.300 --> 00:35.300
这个还是要关注原文档的 所以说都要看

00:35.300 --> 00:39.300
都要看 OK 这是咱们课前要说的内容

00:39.300 --> 00:42.300
那行吧 来吧 那这堂课咱们说路由

00:42.300 --> 00:46.000
路由正常来说 咱们的这个项目会有个路透配置对吧

00:46.000 --> 00:48.000
就关于这个路由的一个配置

00:48.000 --> 00:50.800
那在这呢 它属于一个自动化的

00:50.800 --> 00:53.300
自动化干嘛呢 在我们这个配置司里面

00:53.300 --> 00:55.700
当我们去搞一些页面的时候

00:55.700 --> 00:57.900
它会自动帮我们搞成路由

00:57.900 --> 00:58.900
那搞成路由

01:01.400 --> 01:03.700
来 那这个indexer view呢 就是

01:03.700 --> 01:05.700
默认的对吧 包括演了一个组件

01:05.700 --> 01:07.900
这个组件也是自动演入的 咱先给它干掉

01:12.300 --> 01:14.000
indexer view 比方说h1

01:14.000 --> 01:16.500
这个我是主页面

01:17.600 --> 01:20.500
那然后代码跑起来

01:20.500 --> 01:22.900
npm runv

01:30.620 --> 01:32.620
构建客户端以及服务端

01:32.620 --> 01:34.020
稍等一下

01:34.020 --> 01:37.220
index对吧 出来之后访问3000

01:37.220 --> 01:39.420
OK 没问题 对吧 没问题

01:40.920 --> 01:43.420
那么比方说呢 这里面我们再来一个什么呢

01:43.420 --> 01:44.420
叫abot view

01:53.710 --> 01:54.710
h1

01:54.710 --> 01:55.910
这个abot

01:58.110 --> 01:59.110
abot一点

02:01.680 --> 02:04.080
回来对吧 后面加一个abot

02:05.080 --> 02:07.480
就可以轻轻调整到abot颜面

02:07.480 --> 02:08.880
那你说那也没调整啊

02:08.880 --> 02:11.880
我们通常用什么路头link对吧

02:11.880 --> 02:13.280
但是在naxt里面啊

02:13.280 --> 02:14.680
它没有专门一个标签

02:14.680 --> 02:16.280
有个专门的标签叫什么呢

02:17.480 --> 02:18.080
dnv

02:18.880 --> 02:20.080
那不是dnv啊

02:20.080 --> 02:21.280
我给它泡泡起来

02:21.280 --> 02:24.480
它有什么呢 叫naxtlink

02:25.080 --> 02:27.280
里面有一根我们的路头link一样

02:27.280 --> 02:28.280
比方说这里面

02:29.080 --> 02:31.080
这个abot

02:32.480 --> 02:33.480
abot颜面

02:35.920 --> 02:37.320
然后这个地方

02:38.520 --> 02:40.120
来再修改一下结构

02:40.120 --> 02:40.720
dnv

02:43.230 --> 02:44.230
那什么呢

02:44.230 --> 02:44.830
这个

02:45.830 --> 02:47.230
naxtlink

02:48.630 --> 02:49.230
to

02:49.430 --> 02:50.830
我们的根路径

02:53.210 --> 02:54.010
主页

02:54.410 --> 02:55.210
首页

02:58.380 --> 02:59.580
回来对吧

02:59.780 --> 03:00.580
首页

03:00.580 --> 03:01.380
abot颜面

03:01.380 --> 03:02.580
对吧 进行颜面调整

03:02.580 --> 03:03.780
跟之前的差不多

03:04.380 --> 03:05.980
OK 那你说颜面内容啊

03:05.980 --> 03:07.780
那咱们这样在这里面

03:08.180 --> 03:09.180
困难点东西是什么呢

03:09.180 --> 03:11.580
就是我们想用其他插件怎么办

03:11.980 --> 03:12.780
那其他插件

03:12.780 --> 03:14.780
比方说我们想用element

03:14.780 --> 03:15.780
element ui

03:15.980 --> 03:16.380
对吧

03:16.380 --> 03:18.980
包括咱们第一天低堂课构建的时候

03:18.980 --> 03:19.580
e

03:19.780 --> 03:20.580
le

03:20.580 --> 03:21.380
me

03:21.380 --> 03:22.180
nt

03:22.180 --> 03:23.180
element

03:23.580 --> 03:24.980
点 ui 是吧

03:26.780 --> 03:27.780
哎 这个

03:31.050 --> 03:32.450
element ui

03:32.450 --> 03:33.050
对吧

03:33.050 --> 03:35.250
那我们想把它引入的时候怎么办

03:35.250 --> 03:36.650
那把它引入的时候怎么办

03:36.650 --> 03:38.250
那一方面我们需要装它

03:38.250 --> 03:38.850
对吧

03:38.850 --> 03:39.450
拿过来

03:39.450 --> 03:40.450
啊 咱们装一下

03:45.150 --> 03:46.350
把这个服务停止一下

03:47.950 --> 03:48.750
装一下它

03:49.750 --> 03:51.150
那装它完之后

03:51.150 --> 03:51.750
干嘛呢

03:51.750 --> 03:53.150
我们不是说要

03:53.550 --> 03:55.550
正常来说我们会再注入口文件

03:55.550 --> 03:55.950
对吧

03:55.950 --> 03:58.350
去引入什么什么的

03:58.350 --> 03:59.150
这样的一个操作

03:59.150 --> 04:01.750
在这里面是我们通过一个文件夹来操作的

04:01.750 --> 04:02.750
那个文件叫什么呢

04:02.750 --> 04:03.750
就叫plagins

04:03.750 --> 04:05.950
plugins

04:06.550 --> 04:07.350
plagins

04:07.350 --> 04:09.350
里面是入关的什么

04:09.350 --> 04:10.350
gs文件

04:10.750 --> 04:11.950
这个gs文件呢

04:11.950 --> 04:12.950
就是

04:13.550 --> 04:14.550
用来描述啊

04:14.550 --> 04:16.750
或者说引用我们一些插件用

04:17.350 --> 04:19.750
在这里面来一个叫element

04:19.750 --> 04:20.550
le

04:20.550 --> 04:21.350
me

04:21.350 --> 04:21.950
element

04:21.950 --> 04:22.950
点 ui

04:22.950 --> 04:23.750
element

04:23.750 --> 04:24.550
点 ui

04:24.950 --> 04:25.950
点 gs

04:26.350 --> 04:27.350
那在这里面呢

04:27.350 --> 04:29.150
跟我们之前也用

04:29.150 --> 04:31.150
这个element一样

04:31.150 --> 04:32.750
import view

04:32.750 --> 04:33.950
from view

04:37.950 --> 04:38.950
import

04:39.950 --> 04:40.950
element ui

04:41.950 --> 04:42.950
然后干嘛呢

04:42.950 --> 04:43.950
view

04:43.950 --> 04:44.950
views一下

04:46.950 --> 04:48.950
element ui

04:48.950 --> 04:49.950
那你说这个东西

04:49.950 --> 04:50.950
这个gs

04:50.950 --> 04:51.950
OK告诉我们

04:51.950 --> 04:52.950
使用element ui

04:52.950 --> 04:53.950
并且组建是自动倒入的

04:53.950 --> 04:55.950
那我们咋知道

04:55.950 --> 04:57.950
会引用这个插件呢

04:57.950 --> 04:58.950
是因为这样解构我们不

04:58.950 --> 04:59.950
我们还需要另外一个

04:59.950 --> 05:00.950
nice and configured gs

05:00.950 --> 05:02.950
咱们说过这文件很重要

05:02.950 --> 05:04.950
就要在这里配置plagins

05:04.950 --> 05:06.950
那这种数组干嘛呢

05:06.950 --> 05:07.950
我们去引入

05:07.950 --> 05:09.950
这个 app代表的是

05:09.950 --> 05:10.950
这个路径

05:10.950 --> 05:11.950
这个路径

05:11.950 --> 05:13.950
但是跟路径下的这个

05:13.950 --> 05:15.950
plagins

05:16.950 --> 05:18.950
plugins

05:18.950 --> 05:20.950
下面的element

05:20.950 --> 05:21.950
le

05:21.950 --> 05:22.950
m

05:22.950 --> 05:23.950
ent

05:23.950 --> 05:24.950
element ui

05:24.950 --> 05:26.950
去引入这样的 gs

05:26.950 --> 05:28.950
那同时这个 css

05:28.950 --> 05:30.950
还对用着一个样式

05:30.950 --> 05:31.950
对吧

05:31.950 --> 05:32.950
还有个

05:32.950 --> 05:33.950
因为这引入的是

05:33.950 --> 05:34.950
全球 css 的样式

05:34.950 --> 05:35.950
因为现在引入的话

05:35.950 --> 05:36.950
只有功能

05:36.950 --> 05:37.950
没有样式

05:38.950 --> 05:40.950
快速上手

05:40.950 --> 05:41.950
对吧

05:41.950 --> 05:42.950
这不就在这吗

05:42.950 --> 05:43.950
这是它的一个样式

05:43.950 --> 05:44.950
ok 把这个地址拿过来

05:44.950 --> 05:45.950
控制一下

05:49.950 --> 05:51.950
这样的话就完事

05:51.950 --> 05:52.950
这样的完事

05:52.950 --> 05:53.950
一方面

05:53.950 --> 05:55.950
我们把它放到plagins文件夹下

05:55.950 --> 05:57.950
作为一个 element ui

05:57.950 --> 05:59.950
将 gs 引入

05:59.950 --> 06:01.950
element ui

06:01.950 --> 06:02.950
然后同时呢

06:02.950 --> 06:03.950
我们需要nice 里面

06:03.950 --> 06:04.950
配置一下

06:04.950 --> 06:06.950
一方面配置我们的plagins

06:06.950 --> 06:07.950
这个插件

06:07.950 --> 06:09.950
另一方面配置我们这个全球样式

06:09.950 --> 06:10.950
当然说同学

06:10.950 --> 06:11.950
同学会说

06:11.950 --> 06:12.950
老实弄我

06:12.950 --> 06:13.950
如果之前

06:13.950 --> 06:15.950
我们选中这个 element ui

06:15.950 --> 06:16.950
其实跟这一样

06:16.950 --> 06:18.950
只不过在这里

06:18.950 --> 06:20.950
在这里有一点区别

06:20.950 --> 06:22.950
有一点区别是在这个

06:24.950 --> 06:26.950
在咱们这个配置这个地方

06:26.950 --> 06:27.950
配置这个地方

06:27.950 --> 06:28.950
它干嘛做了一个国际化

06:28.950 --> 06:29.950
就是

06:32.950 --> 06:33.950
它还会有一个

06:33.950 --> 06:34.950
这个代码

06:34.950 --> 06:35.950
这个代码英文美丽

06:35.950 --> 06:36.950
多了个这个

06:37.950 --> 06:38.950
OK

06:39.950 --> 06:41.950
那事完事完事之后干嘛呢

06:41.950 --> 06:42.950
比如说回来

06:42.950 --> 06:43.950
我们修改一下页面

06:43.950 --> 06:44.950
修改页面

06:44.950 --> 06:45.950
咱们这样

06:45.950 --> 06:46.950
随便用里面那些组件

06:46.950 --> 06:48.950
搞一个多一点

06:49.950 --> 06:50.950
当然

06:50.950 --> 06:52.950
它里面的选择是有很多的

06:53.950 --> 06:55.950
来个什么

06:57.950 --> 06:59.950
文字提示折叠面板

06:59.950 --> 07:00.950
那就它吧

07:00.950 --> 07:01.950
好吧

07:01.950 --> 07:02.950
咱们把这个代码复制一下

07:03.950 --> 07:08.290
咱把这个代码复制一下

07:10.290 --> 07:17.120
咱把这个代码复制一下

07:17.120 --> 07:18.120
然后这个

07:18.120 --> 07:19.120
回到这里

07:22.330 --> 07:24.330
然后这个这里面

07:24.330 --> 07:25.330
咱把这里面

07:25.330 --> 07:27.330
剩下的内容也拿过来

07:35.050 --> 07:36.050
OK

07:36.050 --> 07:37.050
这个时候我们在之前

07:37.050 --> 07:38.050
npm软的dev

07:39.050 --> 07:52.300
OK

07:53.300 --> 07:54.300
诶 数页

07:54.300 --> 07:55.300
对吧

07:55.300 --> 07:56.300
你会发现

07:56.300 --> 07:58.300
它就是这样的一个

07:58.300 --> 07:59.300
这个这个这个组件

07:59.300 --> 08:00.300
包括这个样式也有

08:00.300 --> 08:01.300
啊 也有

08:03.300 --> 08:04.300
包错

08:04.300 --> 08:05.300
这包错啥的没有

08:05.300 --> 08:06.300
这正常的一个输入

08:06.300 --> 08:07.300
对吧 输出 事件

08:07.300 --> 08:08.300
没有任何问题

08:08.300 --> 08:09.300
就是事件这些东西

08:09.300 --> 08:10.300
跟我们开发一样

08:11.300 --> 08:12.300
包括这个引入组件

08:12.300 --> 08:13.300
啥的也一样

08:13.300 --> 08:14.300
那这个说

08:14.300 --> 08:15.300
写更高级内容

08:15.300 --> 08:16.300
咱就不写了

08:16.300 --> 08:17.300
这是给大家做个演示

08:17.300 --> 08:18.300
OK

08:18.300 --> 08:19.300
呃 然后

08:19.300 --> 08:20.300
那路由

08:20.300 --> 08:21.300
这是正常的这个路由

08:21.300 --> 08:22.300
相当于我们在这个

08:22.300 --> 08:23.300
里面配置嘛

08:24.300 --> 08:25.300
在这看一下

08:25.300 --> 08:26.300
对吧

08:26.300 --> 08:27.300
两个组件

08:27.300 --> 08:28.300
两个组件

08:28.300 --> 08:29.300
那你说

08:29.300 --> 08:30.300
比如说我们想

08:30.300 --> 08:31.300
这个发文章

08:31.300 --> 08:32.300
文章列表

08:32.300 --> 08:33.300
然后文章ID什么的

08:33.300 --> 08:34.300
这又该怎么搞

08:34.300 --> 08:35.300
OK啊

08:35.300 --> 08:36.300
那正常来说

08:37.300 --> 08:38.300
我 我们可能说

08:38.300 --> 08:39.300
去访问访问什么的

08:39.300 --> 08:40.300
呃 这个

08:40.300 --> 08:41.300
对 我们的这个

08:41.300 --> 08:42.300
article

08:42.300 --> 08:43.300
art

08:43.300 --> 08:44.300
ic

08:44.300 --> 08:45.300
le

08:45.300 --> 08:46.300
下面的

08:46.300 --> 08:47.300
123文章

08:47.300 --> 08:48.300
或者说

08:48.300 --> 08:49.300
n1

08:49.300 --> 08:50.300
这样的一个路径

08:50.300 --> 08:51.300
对吧

08:51.300 --> 08:52.300
当然它现在是没有嘛

08:52.300 --> 08:53.300
找不到这样的一个路径

08:53.300 --> 08:54.300
那你说

08:54.300 --> 08:55.300
怎么办呢

08:55.300 --> 08:56.300
我们是通过

08:56.300 --> 08:57.300
文件夹的方式

08:57.300 --> 08:58.300
许存处

08:58.300 --> 08:59.300
在它下面

08:59.300 --> 09:00.300
创建文件夹

09:00.300 --> 09:01.300
article

09:01.300 --> 09:02.300
art

09:02.300 --> 09:03.300
ic

09:03.300 --> 09:04.300
le

09:04.300 --> 09:05.300
然后下面有一个

09:05.300 --> 09:06.300
wonder view

09:10.090 --> 09:13.740
嗯

09:13.740 --> 09:17.500
我是一篇文章

09:17.500 --> 09:18.500
呃

09:18.500 --> 09:21.780
我是一篇文章

09:22.780 --> 09:23.780
来 刷新

09:23.780 --> 09:24.780
对吧

09:24.780 --> 09:25.780
这部分就有了

09:25.780 --> 09:26.780
这部分就有了

09:26.780 --> 09:27.780
那有头优回问

09:27.780 --> 09:28.780
老实

09:28.780 --> 09:29.780
那这个地方

09:29.780 --> 09:30.780
正常我们文章的话

09:30.780 --> 09:31.780
会传个文章ID

09:31.780 --> 09:32.780
123

09:32.780 --> 09:33.780
对吧

09:33.780 --> 09:34.780
这是什么呢

09:34.780 --> 09:35.780
主要是我们的动态路由

09:35.780 --> 09:36.780
对吧

09:36.780 --> 09:37.780
动态路由

09:37.780 --> 09:38.780
那动态路由怎么办

09:38.780 --> 09:39.780
那我们也没有路由配置

09:39.780 --> 09:40.780
那这个时候

09:40.780 --> 09:43.780
当你想搞动态路由的时候

09:43.780 --> 09:44.780
创建文件

09:44.780 --> 09:46.780
下滑线开头

09:46.780 --> 09:48.780
Gun ID

09:48.780 --> 09:50.780
Gun ID.real

09:50.780 --> 09:51.780
那这个Gun ID.real

09:51.780 --> 09:52.780
代表什么呢

09:52.780 --> 09:53.780
就是我们这个

09:53.780 --> 09:54.780
动态路由

09:54.780 --> 09:55.780
article

09:55.780 --> 09:56.780
下面的这个

09:56.780 --> 09:57.780
相当于

10:13.250 --> 10:15.250
相当于我们的这个

10:15.250 --> 10:16.250
什么article

10:16.250 --> 10:18.250
art

10:18.250 --> 10:20.250
下面的ID

10:20.250 --> 10:21.250
相当于这样的

10:21.250 --> 10:22.250
动态路由

10:22.250 --> 10:23.250
那相当于这样的

10:23.250 --> 10:24.250
动态路由

10:24.250 --> 10:26.250
ok

10:26.250 --> 10:28.250
div

10:28.250 --> 10:29.250
什么div

10:29.250 --> 10:31.250
default

10:31.250 --> 10:32.250
然后在这

10:32.250 --> 10:33.250
干嘛呢

10:33.250 --> 10:35.250
搞一个div

10:35.250 --> 10:36.250
然后比方说

10:36.250 --> 10:37.250
这个

10:38.250 --> 10:41.250
当前文章ID

10:41.250 --> 10:42.250
没

10:42.250 --> 10:43.250
对吧

10:43.250 --> 10:44.250
那正常来说

10:44.250 --> 10:45.250
会写什么

10:45.250 --> 10:46.250
会写什么

10:46.250 --> 10:48.250
router.prms.id

10:48.250 --> 10:49.250
对吧

10:49.250 --> 10:50.250
对吧

10:50.250 --> 10:51.250
正常我们会这么写

10:51.250 --> 10:52.250
但是回到页面里面来

10:52.250 --> 10:53.250
比方说

10:53.250 --> 10:54.250
这来个123

10:54.250 --> 10:55.250
对吧

10:55.250 --> 10:56.250
哎呀

10:56.250 --> 10:57.250
什么看到的

10:57.250 --> 11:00.250
part of antifan的

11:00.250 --> 11:01.250
读不到这个属性

11:01.250 --> 11:03.250
为什么读不到这个属性

11:03.250 --> 11:04.250
那这个时候干嘛呢

11:04.250 --> 11:05.250
咱们要回到

11:05.250 --> 11:08.250
NAS的一个生命周期里面

11:08.250 --> 11:10.250
你说NAS生命周期

11:10.250 --> 11:11.250
跟我们的这个

11:11.250 --> 11:12.250
客户端的生命周期

11:12.250 --> 11:13.250
有没有不一样呢

11:13.250 --> 11:14.250
它确实

11:14.250 --> 11:16.250
比方说这一边有个NAS

11:16.250 --> 11:18.250
Router.modelware

11:18.250 --> 11:19.250
就中间键

11:19.250 --> 11:20.250
然后Volidate

11:20.250 --> 11:22.250
这个是用数议验证的

11:22.250 --> 11:23.250
就是咱们会看一下它

11:23.250 --> 11:25.250
还有个SyncData

11:25.250 --> 11:26.250
Fetch

11:26.250 --> 11:27.250
这个Fetch跟我们ES6

11:27.250 --> 11:28.250
这个Fetch不是

11:28.250 --> 11:29.250
它只是说

11:29.250 --> 11:31.250
一个是返回Promise

11:31.250 --> 11:32.250
另外一个是

11:32.250 --> 11:33.250
可以把数据

11:33.250 --> 11:34.250
作为当前对象

11:34.250 --> 11:36.250
返回给当前页面

11:36.250 --> 11:37.250
然后Created

11:38.250 --> 11:39.250
Mounted

11:39.250 --> 11:42.250
上面是我们的NAS

11:43.250 --> 11:44.250
生命周期

11:44.250 --> 11:45.250
下面是我们的

11:46.250 --> 11:48.250
Volidate的生命周期

11:50.250 --> 11:52.250
那刚才说的这个问题

11:52.250 --> 11:53.250
那这怎么办呢

11:54.250 --> 11:55.250
这儿

11:55.250 --> 11:56.250
我们说了它会直接

11:56.250 --> 11:57.250
Modelware

11:57.250 --> 11:58.250
用它不用

11:58.250 --> 12:00.250
咱们来SyncData

12:00.250 --> 12:01.250
之前咱们封装内

12:01.250 --> 12:02.250
还说是不是也有一个

12:02.250 --> 12:03.250
叫SyncData

12:03.250 --> 12:04.250
A,S,Y,N,C

12:04.250 --> 12:05.250
Data

12:05.250 --> 12:06.250
这个是固定的

12:06.250 --> 12:07.250
这不能改

12:08.250 --> 12:09.250
SyncData

12:09.250 --> 12:10.250
那这里面

12:10.250 --> 12:11.250
它会传应什么呢

12:11.250 --> 12:12.250
Context

12:12.250 --> 12:13.250
上下文

12:13.250 --> 12:15.250
这上下文内容也很多

12:15.250 --> 12:16.250
在

12:17.250 --> 12:19.250
Context and Hypers

12:19.250 --> 12:20.250
看着

12:22.250 --> 12:23.250
是这样的一张

12:23.250 --> 12:24.250
它里面有什么

12:24.250 --> 12:25.250
Redirect

12:25.250 --> 12:26.250
Redirect

12:26.250 --> 12:27.250
就相当于

12:27.250 --> 12:28.250
我们的

12:30.250 --> 12:31.250
Router的

12:31.250 --> 12:32.250
重定项

12:32.250 --> 12:33.250
重定项

12:33.250 --> 12:34.250
然后这里面

12:34.250 --> 12:35.250
你看有些方法

12:35.250 --> 12:36.250
是什么

12:36.250 --> 12:37.250
客户端的

12:37.250 --> 12:38.250
服务端的都可以

12:38.250 --> 12:39.250
像这里面

12:39.250 --> 12:40.250
这俩是服务端

12:40.250 --> 12:41.250
这俩是单纯的

12:41.250 --> 12:42.250
客户端用的

12:42.250 --> 12:43.250
剩下的都可以用

12:43.250 --> 12:44.250
都可以用

12:44.250 --> 12:45.250
那像这里面

12:45.250 --> 12:46.250
APT Review的实力

12:46.250 --> 12:47.250
这个是环境

12:47.250 --> 12:49.250
然后是我们的一些配置

12:49.250 --> 12:51.250
这是路由Root

12:51.250 --> 12:52.250
是配置不是Root

12:52.250 --> 12:53.250
还是Root

12:53.250 --> 12:54.250
当前那个路由

12:54.250 --> 12:56.250
Quarry的话就是里面的参数

12:56.250 --> 12:59.250
然后Permas

12:59.250 --> 13:00.250
就是咱们要的那个东西

13:00.250 --> 13:01.250
所以说

13:01.250 --> 13:02.250
我们可以在这干嘛

13:02.250 --> 13:04.250
解构出属性

13:05.250 --> 13:06.250
解构出属性

13:06.250 --> 13:07.250
那对于它

13:07.250 --> 13:08.250
对于它干嘛

13:08.250 --> 13:12.250
你可以返回

13:12.250 --> 13:15.250
把Permas里面的ID返回

13:15.250 --> 13:16.250
比如说在这

13:16.250 --> 13:17.250
ConstakeID

13:17.250 --> 13:19.250
等于Primas.id

13:19.250 --> 13:21.250
因为我们这个

13:21.250 --> 13:22.250
这个动态路由就是ID

13:22.250 --> 13:23.250
对吧

13:23.250 --> 13:25.250
并且你把这个ID返回

13:25.250 --> 13:27.250
因为你返回的对象

13:27.250 --> 13:29.250
它会作为我们这个data

13:29.250 --> 13:30.250
在页面展示的时候

13:30.250 --> 13:31.250
被我们去调用

13:31.250 --> 13:32.250
所以说这个地方

13:32.250 --> 13:33.250
你直接返回ID

13:33.250 --> 13:34.250
就是可以返回到的

13:35.250 --> 13:38.250
来刷新

13:38.250 --> 13:39.250
对吧

13:39.250 --> 13:40.250
123

13:40.250 --> 13:41.250
比方说这

13:41.250 --> 13:45.010
这个什么123

13:45.010 --> 13:46.010
456

13:47.010 --> 13:48.010
对吧

13:48.010 --> 13:49.010
也可以

13:49.010 --> 13:50.010
这个时候还有个问题

13:50.010 --> 13:51.010
老师

13:51.010 --> 13:52.010
如果你ID

13:52.010 --> 13:54.010
我们就要字母创

13:54.010 --> 13:55.010
就要数字

13:55.010 --> 13:56.010
你比如说

13:56.010 --> 13:57.010
你来个123abc

13:57.010 --> 13:58.010
不行怎么办

13:58.010 --> 13:59.010
这个时候就需要

13:59.010 --> 14:00.010
另外的一个方法

14:00.010 --> 14:01.010
还是在这里

14:01.010 --> 14:02.010
在这里

14:02.010 --> 14:03.010
两个图

14:03.010 --> 14:05.010
大家去看一下就行

14:05.010 --> 14:07.010
还是life circle

14:07.010 --> 14:08.010
上面不会有一个validate

14:08.010 --> 14:09.010
这个东西干嘛

14:09.010 --> 14:11.010
就是用来验证的

14:11.010 --> 14:13.010
你看这是什么

14:13.010 --> 14:14.010
useful tovalidate

14:14.010 --> 14:15.010
demonic

14:15.010 --> 14:16.010
router

14:16.010 --> 14:17.010
parameter

14:17.010 --> 14:18.010
就干嘛验证我们的

14:18.010 --> 14:19.010
这个参数的

14:19.010 --> 14:20.010
验证我们的这个参数

14:20.010 --> 14:21.010
那同样它里面

14:21.010 --> 14:23.010
也传的是这样的对象

14:23.010 --> 14:24.010
叫什么

14:24.010 --> 14:25.010
validate

14:26.010 --> 14:28.010
varidate

14:28.010 --> 14:29.010
是吧

14:29.010 --> 14:30.010
validate

14:30.010 --> 14:31.010
同样

14:31.010 --> 14:33.010
prams

14:36.010 --> 14:37.010
在这里面

14:37.010 --> 14:38.010
会干嘛

14:38.010 --> 14:39.010
会搞咱们的

14:39.010 --> 14:40.010
这个

14:40.010 --> 14:42.010
会把对象

14:43.010 --> 14:45.010
会把咱们的这个

14:45.010 --> 14:47.010
参数拿到

14:47.010 --> 14:48.010
在这里面

14:48.010 --> 14:49.010
一定要就是

14:49.010 --> 14:51.010
一定返回的是

14:51.010 --> 14:53.010
verdate

14:54.010 --> 14:56.010
validate

14:57.010 --> 14:58.010
干嘛呢

14:58.010 --> 14:59.010
如果处的话

14:59.010 --> 15:01.010
就进到对应的路由下

15:01.010 --> 15:02.010
如果不是的话

15:02.010 --> 15:03.010
就返回404

15:03.010 --> 15:05.010
或者500错误的那个页面

15:05.010 --> 15:07.010
所以说这里面返回

15:07.010 --> 15:08.010
我们的这个要求是啥呢

15:08.010 --> 15:09.010
全数字

15:09.010 --> 15:10.010
那写个证则呗

15:10.010 --> 15:11.010
对吧

15:11.010 --> 15:12.010
以数字开头

15:12.010 --> 15:14.010
以数字结尾

15:15.010 --> 15:16.010
这样

15:16.010 --> 15:17.010
第

15:17.010 --> 15:18.010
加嘛

15:18.010 --> 15:19.010
是吧

15:19.010 --> 15:20.010
点test

15:21.010 --> 15:22.010
谁呀

15:22.010 --> 15:23.010
咱们的

15:23.010 --> 15:24.010
pr

15:24.010 --> 15:25.010
a

15:25.010 --> 15:26.010
点id嘛

15:26.010 --> 15:27.010
如果是进来

15:27.010 --> 15:28.010
不是的话进来

15:28.010 --> 15:29.010
回来

15:32.220 --> 15:33.220
刷新

15:33.220 --> 15:34.220
对吧

15:34.220 --> 15:35.220
一二三四五六A

15:36.220 --> 15:37.220
就进不来了

15:37.220 --> 15:38.220
就进不来了

15:38.220 --> 15:39.220
对吧

15:40.220 --> 15:42.220
这是关于路由的验证

15:42.220 --> 15:43.220
路由的验证

15:43.220 --> 15:44.220
包括说

15:44.220 --> 15:45.220
老师刚才讲的

15:45.220 --> 15:46.220
这些内容呢

15:46.220 --> 15:47.220
这里面都有

15:47.220 --> 15:48.220
包括说跳转

15:48.220 --> 15:49.220
基础路由

15:49.220 --> 15:50.220
他们的一个转化

15:50.220 --> 15:51.220
动态路由

15:52.220 --> 15:53.220
包括说

15:53.220 --> 15:54.220
参数销验

15:54.220 --> 15:55.220
在这都有

15:55.220 --> 15:56.220
都有

15:56.220 --> 15:57.220
那其实

15:58.220 --> 15:59.220
无论是个sync data

15:59.220 --> 16:00.220
它的应用场景

16:00.220 --> 16:01.220
在这里面干嘛呢

16:01.220 --> 16:02.220
是为了

16:02.220 --> 16:03.220
把数据

16:03.220 --> 16:04.220
存储到

16:04.220 --> 16:05.220
本地公共用户使用

16:05.220 --> 16:07.220
还说我们这个验证

16:08.220 --> 16:09.220
这个在我们

16:09.220 --> 16:10.220
用路由的时候

16:10.220 --> 16:11.220
会用到

16:11.220 --> 16:12.220
会用到

16:12.220 --> 16:13.220
包括说这里面干嘛呢

16:13.220 --> 16:14.220
引入一个插件

16:14.220 --> 16:15.220
尽管说咱就给大家

16:15.220 --> 16:16.220
演示了一下

16:16.220 --> 16:17.220
并没有说

16:17.220 --> 16:18.220
更深入的去用

16:18.220 --> 16:20.220
本身在开发的时候

16:20.220 --> 16:21.220
才会用嘛

16:21.220 --> 16:22.220
在开发的时候

16:22.220 --> 16:23.220
才会用

16:23.220 --> 16:24.220
还有就是

16:24.220 --> 16:25.220
大家如果

16:25.220 --> 16:27.220
咱们新建一个项目

16:27.220 --> 16:28.220
新建一个项目

16:31.220 --> 16:32.220
npm

16:32.220 --> 16:33.220
init

16:36.220 --> 16:37.220
naxt

16:37.220 --> 16:38.220
app

16:38.220 --> 16:39.220
叫什么呢

16:39.220 --> 16:40.220
naxt view

16:41.220 --> 16:42.220
因为在这里面

16:42.220 --> 16:43.220
我们说了

16:43.220 --> 16:45.220
可以帮我们选择一些什么

16:45.220 --> 16:46.220
这些插件

16:46.220 --> 16:47.220
跟我们去直接用嘛

16:47.220 --> 16:48.220
对吧

16:48.220 --> 16:49.220
那这里面咱们要说

16:49.220 --> 16:50.220
一个特殊的项

16:50.220 --> 16:51.220
包括什么 element view

16:51.220 --> 16:52.220
这些东西

16:52.220 --> 16:53.220
大都知道

16:53.220 --> 16:54.220
是吧

16:54.220 --> 16:56.220
给大家介绍一个国外的

16:57.220 --> 16:58.220
介绍国外的

17:02.220 --> 17:03.220
OK

17:03.220 --> 17:04.220
js

17:04.220 --> 17:05.220
npm

17:05.220 --> 17:06.220
然后下面

17:06.220 --> 17:07.220
这有一个

17:07.220 --> 17:09.220
这个view

17:09.220 --> 17:10.220
v

17:10.220 --> 17:11.220
这个

17:11.220 --> 17:12.220
这个

17:12.220 --> 17:13.220
这个

17:13.220 --> 17:15.220
vittify.js

17:15.220 --> 17:16.220
啊

17:16.220 --> 17:18.220
你如果用它说实话的话

17:18.220 --> 17:19.220
它会比咱们说实话

17:19.220 --> 17:20.220
一个页面

17:21.220 --> 17:42.480
稍等一下

17:42.480 --> 17:43.480
刚才说了

17:43.480 --> 17:44.480
选了一个叫什么

17:44.480 --> 17:45.480
咱们可以先看一下

17:45.480 --> 17:46.480
这个Windows

17:46.480 --> 17:56.930
啊

17:56.930 --> 17:57.930
因为这个呢

17:57.930 --> 17:59.930
是给唇后端人用去使用的

17:59.930 --> 18:00.930
啊

18:00.930 --> 18:01.930
你说呢

18:01.930 --> 18:02.930
前端能不能用

18:02.930 --> 18:03.930
能用

18:03.930 --> 18:04.930
干嘛呢

18:04.930 --> 18:05.930
就是

18:05.930 --> 18:06.930
它的这个语话

18:06.930 --> 18:07.930
包括主题什么的

18:07.930 --> 18:08.930
用起来

18:08.930 --> 18:09.930
会更直接一些

18:09.930 --> 18:10.930
那你说

18:10.930 --> 18:11.930
刚才咱们看给 element view

18:11.930 --> 18:13.930
当你在用起来的时候

18:13.930 --> 18:14.930
你会发现

18:14.930 --> 18:15.930
你会发现怎么着呢

18:15.930 --> 18:16.930
它

18:16.930 --> 18:17.930
这个

18:17.930 --> 18:18.930
我们有些布局

18:18.930 --> 18:19.930
还需要自己去搭

18:19.930 --> 18:20.930
自己去建

18:20.930 --> 18:21.930
那在这里面呢

18:21.930 --> 18:22.930
就这个

18:22.930 --> 18:24.930
把基本的内容给咱们搞好了

18:24.930 --> 18:26.930
可以直接在它这个基础上去搞

18:26.930 --> 18:27.930
会自动搞这个插件

18:27.930 --> 18:28.930
啊

18:28.930 --> 18:29.930
会自动搞这个插件

18:29.930 --> 18:30.930
一会咱们也看一下

18:30.930 --> 18:31.930
它装完之后会怎么样

18:31.930 --> 18:32.930
咱去看看

18:32.930 --> 18:33.930
是不是像老师说的那样

18:33.930 --> 18:34.930
啊

18:34.930 --> 18:35.930
这

18:35.930 --> 18:36.930
这完事了对吧

18:36.930 --> 18:37.930
OK用MS code打开

18:37.930 --> 18:38.930
code

18:38.930 --> 18:40.930
next view

18:40.930 --> 18:43.500
啊

18:43.500 --> 18:44.500
来

18:44.500 --> 18:45.500
咱们看一下

18:45.500 --> 18:46.500
这里面还多了个lios

18:46.500 --> 18:47.500
lios是啥呢

18:47.500 --> 18:48.500
咱们这个

18:48.500 --> 18:49.500
周说啊

18:49.500 --> 18:50.500
呃

18:50.500 --> 18:52.870
这里面应该是

18:52.870 --> 18:54.870
直接在这里配置的

18:54.870 --> 18:57.820
啊

18:57.820 --> 18:58.820
直接

18:58.820 --> 18:59.820
build modules

18:59.820 --> 19:00.820
直接搞的它

19:00.820 --> 19:01.820
啊

19:01.820 --> 19:02.820
包括是在这里面

19:02.820 --> 19:03.820
应该塞在这些处理

19:03.820 --> 19:04.820
啊

19:04.820 --> 19:05.820
那不管它了

19:05.820 --> 19:06.820
然后在这个时候

19:06.820 --> 19:07.820
我们让它跑起来

19:08.820 --> 19:11.820
这个npm run

19:12.820 --> 19:13.820
dv

19:15.820 --> 19:16.820
哎呀

19:16.820 --> 19:17.820
cd

19:17.820 --> 19:18.820
next

19:20.820 --> 19:21.820
view

19:22.820 --> 19:23.820
npm run

19:23.820 --> 19:24.820
dv

19:24.820 --> 19:44.670
嗯

19:44.670 --> 19:45.670
来

19:49.970 --> 19:50.970
嗯

19:56.930 --> 19:57.930
它会给一个

19:57.930 --> 19:58.930
咱这样的一个

19:58.930 --> 20:00.930
来搭建了一个基本的页面啊

20:00.930 --> 20:02.930
你可以在这里面配合着

20:02.930 --> 20:04.930
它里面的一个文档啊

20:04.930 --> 20:05.930
包括说里面的一些

20:05.930 --> 20:06.930
组建什么的

20:06.930 --> 20:07.930
啊

20:07.930 --> 20:08.930
去自己实验一些效果

20:08.930 --> 20:09.930
啊

20:09.930 --> 20:10.930
去实验一些效果

20:11.930 --> 20:12.930
只不过这个呢

20:12.930 --> 20:14.930
相比咱之前的一个更复杂

20:14.930 --> 20:15.930
包括说老师那我能不能

20:15.930 --> 20:16.930
基于这样的一个环境去开发

20:16.930 --> 20:17.930
也没有任何问题

20:17.930 --> 20:18.930
啊

20:18.930 --> 20:19.930
也没有任何问题

20:19.930 --> 20:20.930
所以说这个地方呢

20:20.930 --> 20:21.930
同学们

20:21.930 --> 20:22.930
主动的去玩一玩

20:22.930 --> 20:23.930
好

20:23.930 --> 20:24.930
好吧

20:24.930 --> 20:25.930
ok那这档可能咱们说到这

