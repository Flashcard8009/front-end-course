WEBVTT

00:00.300 --> 00:03.700
好了 同学们 咱们今天继续来学习Build SSR

00:03.700 --> 00:05.500
那今天咱们课程干嘛呢

00:05.500 --> 00:08.300
来基于Build CLS3这样的一个胶尔架

00:08.300 --> 00:09.700
咱们基于这样的胶守架

00:09.700 --> 00:12.700
给它修改一个SSR的环境 对吧

00:12.700 --> 00:14.500
那之前咱们了解API

00:14.500 --> 00:16.700
包括说通外拍个自己搭建一个

00:16.700 --> 00:19.900
那这里面咱们用胶尔架来搭建一个环境

00:19.900 --> 00:24.860
然后把它配称我们可以搞

00:24.860 --> 00:27.500
服务灯开发的这样的一套环境

00:28.100 --> 00:30.300
OK 那在这里面咱们就创建一个项目

00:30.300 --> 00:32.300
好吧 至于在这 干嘛呢

00:32.300 --> 00:33.700
切换目录

00:33.700 --> 00:35.500
5

00:35.500 --> 00:37.100
OK 然后利用指令

00:37.100 --> 00:39.100
Build Create

00:39.100 --> 00:42.100
什么的 CLI SSR

00:42.100 --> 00:44.900
利用它来创建一个项目

00:44.900 --> 00:48.300
OK 咱们这里面手动选一下

00:48.300 --> 00:50.100
然后路由啊

00:50.100 --> 00:52.100
Build X都选上

00:52.100 --> 00:53.300
会车

00:53.300 --> 00:56.100
二版本的就可以

00:56.100 --> 01:06.120
OK 让它安装一下依赖

01:06.120 --> 01:07.720
那其实咱们之前

01:07.720 --> 01:09.720
你看搭建的这样的一个目录

01:09.720 --> 01:12.920
其实跟这个一会生成出来的这个目录

01:12.920 --> 01:16.950
其实还是很像的

01:16.950 --> 01:41.260
Normal Rose

01:41.260 --> 01:43.260
OK 完事了 是吧

01:43.260 --> 01:46.060
还得等一下

01:46.060 --> 01:47.460
这个一会

01:47.460 --> 01:48.660
他们在看的时候

01:48.660 --> 01:50.560
安装依赖的这个地方可以跳过

01:50.560 --> 01:52.560
首先大家都会

01:52.560 --> 01:54.560
OK

01:54.560 --> 01:57.760
OK 那这是一个正常咱们的一个项目

01:57.760 --> 01:58.760
一个项目 对吧

01:58.760 --> 02:00.760
包括说切进去

02:00.760 --> 02:02.760
然后开启服务

02:02.760 --> 02:04.760
本地服务 OK

02:04.760 --> 02:06.760
咱们已经知道SSR怎么处理的

02:06.760 --> 02:09.760
包括之前完成的代码在这

02:09.760 --> 02:12.760
干嘛呢 咱把这个服务器给它粘过来

02:12.760 --> 02:14.760
放到这个文件夹下

02:16.760 --> 02:18.760
这是咱们的服务

02:18.960 --> 02:20.960
那同样咱是不是还得有一个入口文件

02:20.960 --> 02:22.960
对吧 咱也粘过来

02:22.960 --> 02:24.960
SSR C下面这个安吹

02:32.640 --> 02:34.640
也放到这个下面来

02:34.640 --> 02:36.640
也放到这个下面来

02:36.640 --> 02:38.640
那这样的话

02:38.640 --> 02:40.640
对于当前的这个里面代码来说

02:40.640 --> 02:41.640
它也缺点东西 是吧

02:41.640 --> 02:42.640
配点东西

02:42.640 --> 02:44.640
那这样咱们先切进去

02:44.640 --> 02:46.640
CD

02:46.640 --> 02:48.640
CRA

02:48.640 --> 02:49.640
对吧 咱们

02:49.640 --> 02:51.640
因为这个

02:51.640 --> 02:53.640
这部端呢 还有说这个

02:53.640 --> 02:54.640
Wi-Fi的配置

02:54.640 --> 02:55.640
咱们需要一些插件

02:55.640 --> 02:57.640
比方说NPM

02:57.640 --> 02:59.640
什么呢 我们的Express

02:59.640 --> 03:00.640
好吧

03:00.640 --> 03:02.640
EXP and EXPRESS

03:02.640 --> 03:03.640
还有什么View

03:03.640 --> 03:05.640
SR Render

03:05.640 --> 03:09.530
对吧

03:09.530 --> 03:11.530
来 需要用它们

03:11.530 --> 03:12.530
这样的让它一下子下

03:12.530 --> 03:13.530
这个依赖让它装着

03:13.530 --> 03:14.530
咱们回来改一下

03:14.530 --> 03:15.530
改什么呢

03:15.530 --> 03:17.530
你看 首先在咱们的这个

03:17.530 --> 03:19.530
入口文件这里面

03:19.530 --> 03:21.530
你看咱们引的是慢点

03:21.530 --> 03:22.530
JS

03:22.530 --> 03:23.530
没问题是它

03:23.530 --> 03:24.530
对吧

03:24.530 --> 03:26.530
包括它引的是慢点JS

03:26.530 --> 03:27.530
那其实是什么

03:27.530 --> 03:28.530
同级的 对吧

03:28.530 --> 03:29.530
这个上级目录的

03:29.530 --> 03:31.530
引的没问题

03:31.530 --> 03:32.530
没问题

03:32.530 --> 03:33.530
但是慢点JS

03:33.530 --> 03:34.530
这边咱们改一下

03:34.530 --> 03:35.530
对吧 改一下

03:35.530 --> 03:36.530
那怎么改呢

03:36.530 --> 03:37.530
那原来是不是

03:37.530 --> 03:38.530
反而一个函数

03:38.530 --> 03:39.530
对吧 反而一个函数

03:39.530 --> 03:40.530
那我可以在这

03:40.530 --> 03:41.530
咱们就直接搞

03:41.530 --> 03:42.530
什么呢

03:42.530 --> 03:44.530
export default

03:45.530 --> 03:46.530
什么呢

03:46.530 --> 03:47.530
来 方式

03:48.530 --> 03:50.530
然后这里面

03:50.530 --> 03:51.530
干嘛呢

03:51.530 --> 03:52.530
有这样的一个app

03:52.530 --> 03:53.530
对吧

03:53.530 --> 03:55.530
concept app

03:55.530 --> 03:56.530
等它

03:56.530 --> 03:58.530
然后在最后咱们

03:58.530 --> 03:59.530
进行一个返回

03:59.530 --> 04:00.530
然后当然了

04:00.530 --> 04:01.530
这挂在也不在这挂了

04:01.530 --> 04:02.530
对吧

04:04.530 --> 04:06.530
然后后面干嘛呢

04:06.530 --> 04:08.530
我们把这个app返回

04:08.530 --> 04:09.530
那当然说

04:09.530 --> 04:10.530
还有什么router store

04:10.530 --> 04:12.530
一定返回 是吧

04:12.530 --> 04:13.530
那同样

04:13.530 --> 04:14.530
咱这个router store

04:14.530 --> 04:15.530
是不是得改一下

04:15.530 --> 04:16.530
改一下

04:16.530 --> 04:17.530
改什么呢

04:17.530 --> 04:19.530
就是给它改成一个方法

04:19.530 --> 04:20.530
给它改成一个方法

04:20.530 --> 04:21.530
比如说这儿

04:21.530 --> 04:23.530
叫create router

04:23.530 --> 04:29.830
这个地方叫什么create store

04:29.830 --> 04:31.830
就把它改成个方法

04:31.830 --> 04:32.830
对吧

04:32.830 --> 04:33.830
然后在这干嘛呢

04:33.830 --> 04:36.830
这个costrouter

04:36.830 --> 04:39.830
等于create router

04:39.830 --> 04:41.830
coststore

04:41.830 --> 04:49.050
等于create store

04:49.050 --> 04:50.050
对吧

04:50.050 --> 04:53.050
然后把它们都返回

04:53.050 --> 04:54.050
咱们的入口文件改了一下

04:54.050 --> 04:56.050
然后回到这个

04:56.050 --> 04:58.050
路由这里

04:58.050 --> 04:59.050
对吧

04:59.050 --> 05:01.050
这里面默认导出这个

05:01.050 --> 05:02.050
这个对象

05:02.050 --> 05:04.050
这样

05:04.050 --> 05:06.050
方身

05:06.050 --> 05:11.730
咱默认导出一个函数

05:11.730 --> 05:17.640
这个函数里面是它

05:17.640 --> 05:18.640
然后

05:18.640 --> 05:22.640
把这个router返回

05:22.640 --> 05:25.640
同样store里面也是

05:25.640 --> 05:27.640
对吧

05:27.640 --> 05:29.640
套上一层

05:29.640 --> 05:35.580
直接在这里return

05:35.580 --> 05:37.580
没问题是吧

05:37.580 --> 05:39.580
路由这也没问题

05:39.580 --> 05:41.580
也没问题

05:41.580 --> 05:42.580
OK

05:42.580 --> 05:45.580
这是路由和它

05:45.580 --> 05:47.580
改完之后

05:47.580 --> 05:48.580
不行

05:48.580 --> 05:50.580
咱得需要

05:50.580 --> 05:51.580
环境的配置

05:51.580 --> 05:52.580
比方说咱们的buy pad

05:52.580 --> 05:53.580
对吧

05:53.580 --> 05:54.580
来 修开

05:54.580 --> 05:55.580
在这里面要改办法

05:55.580 --> 05:56.580
怎么办呢

05:56.580 --> 05:57.580
这里面我们要改的话

05:57.580 --> 05:58.580
只能说

05:58.580 --> 05:59.580
创建个文件

05:59.580 --> 06:00.580
创建个文件

06:01.580 --> 06:02.580
通缉

06:02.580 --> 06:04.580
创建一个叫view.configure.js

06:04.580 --> 06:05.580
咱们需要自己

06:05.580 --> 06:06.580
去修改一下

06:06.580 --> 06:08.580
configure.js

06:08.580 --> 06:10.580
view.configure.js

06:10.580 --> 06:11.580
在这里面

06:11.580 --> 06:13.580
咱们需要

06:13.580 --> 06:14.580
利用什么

06:14.580 --> 06:16.580
configure webpack

06:16.580 --> 06:17.580
这样的一个

06:17.580 --> 06:18.580
内置的

06:18.580 --> 06:19.580
一个修改 webpack

06:19.580 --> 06:20.580
配置的

06:20.580 --> 06:22.580
方法来修改

06:22.580 --> 06:24.580
全中有比默认的

06:24.580 --> 06:25.580
要高一些

06:25.580 --> 06:26.580
OK

06:26.580 --> 06:28.580
我们之前

06:28.580 --> 06:29.580
还是咱们对比着来

06:29.580 --> 06:30.580
因为这个东西

06:30.580 --> 06:31.580
大家不需要背

06:31.580 --> 06:32.580
不需要具

06:32.580 --> 06:33.580
一方面是

06:33.580 --> 06:34.580
理解他们的流程

06:34.580 --> 06:35.580
就可以

06:35.580 --> 06:36.580
那其实无论对于

06:36.580 --> 06:37.580
sure还clean

06:37.580 --> 06:38.580
他们来说

06:38.580 --> 06:40.580
除了入口文件

06:40.580 --> 06:41.580
不一样之外

06:41.580 --> 06:42.580
还有一些什么

06:42.580 --> 06:43.580
其他的配置也都不一样

06:43.580 --> 06:44.580
咱们拿过来

06:44.580 --> 06:45.580
分别改一下

06:45.580 --> 06:46.580
分别改一下

06:47.580 --> 06:48.580
回到了

06:50.580 --> 06:51.580
这里来

06:51.580 --> 06:52.580
和这里来

06:52.580 --> 06:53.580
首先

06:53.580 --> 06:54.580
干嘛呢

06:54.580 --> 06:55.580
我们得

06:55.580 --> 06:57.580
把两个插件

06:57.580 --> 06:58.580
什么clean

06:58.580 --> 06:59.580
直接引过来

07:01.580 --> 07:02.580
你说

07:02.580 --> 07:03.580
两环境

07:03.580 --> 07:04.580
一个文件撒稿

07:04.580 --> 07:05.580
别着急

07:05.580 --> 07:07.580
view so render

07:07.580 --> 07:10.580
下面的clean

07:10.580 --> 07:11.580
plugin

07:13.580 --> 07:14.580
什么呢

07:14.580 --> 07:15.580
还有一个

07:15.580 --> 07:18.580
const view

07:18.580 --> 07:19.580
ssr

07:20.580 --> 07:21.580
server

07:21.580 --> 07:22.580
plugin

07:33.400 --> 07:34.400
这里面

07:34.400 --> 07:35.400
说了

07:35.400 --> 07:36.400
一个文件

07:36.400 --> 07:37.400
要表示

07:37.400 --> 07:38.400
两块内容

07:38.400 --> 07:39.400
这个时候

07:39.400 --> 07:40.400
咱们需要

07:40.400 --> 07:41.400
设置一个

07:41.400 --> 07:42.400
对应的环境辆量

07:42.400 --> 07:43.400
来表示

07:43.400 --> 07:44.400
当年是服务端环境

07:44.400 --> 07:45.400
还是扣端环境

07:45.400 --> 07:46.400
这个时候

07:46.400 --> 07:47.400
咱们还需要一个插件

07:47.400 --> 07:48.400
需要一个插件

07:49.400 --> 07:50.400
npm

07:50.400 --> 07:51.400
i

07:51.400 --> 07:52.400
什么呢

07:52.400 --> 07:53.400
cause

07:53.400 --> 07:54.400
cause

07:59.160 --> 08:00.160
s

08:02.160 --> 08:03.160
设置环境的

08:03.160 --> 08:04.160
因为

08:04.160 --> 08:05.160
ok

08:05.160 --> 08:06.160
在这干嘛呢

08:06.160 --> 08:07.160
我们可以通过

08:07.160 --> 08:08.160
它来拿到

08:08.160 --> 08:09.160
我们当前的环境

08:09.160 --> 08:10.160
是什么

08:11.160 --> 08:12.160
一会我写脚本的时候

08:12.160 --> 08:13.160
再说

08:13.160 --> 08:14.160
const

08:14.160 --> 08:16.160
我们来一个

08:16.160 --> 08:17.160
target

08:19.160 --> 08:21.160
我们能够标环境

08:21.160 --> 08:22.160
什么呢

08:22.160 --> 08:23.160
等于

08:23.160 --> 08:24.160
pro

08:24.160 --> 08:26.160
process.inlay

08:26.160 --> 08:28.160
咱们设置一个辆量

08:28.160 --> 08:29.160
叫

08:29.160 --> 08:30.160
bypack

08:31.160 --> 08:32.160
target

08:35.720 --> 08:37.720
看它是不是等于node

08:39.720 --> 08:40.720
如果是node的话

08:40.720 --> 08:41.720
这就是干嘛

08:41.720 --> 08:42.720
服端环境

08:42.720 --> 08:43.720
不是的话是扣端环境

08:43.720 --> 08:44.720
对吧

08:44.720 --> 08:45.720
然后在这干嘛呢

08:45.720 --> 08:46.720
target

08:46.720 --> 08:47.720
我们的

08:48.720 --> 08:49.720
目标

08:49.720 --> 08:50.720
到底是服端还是扣端

08:50.720 --> 08:51.720
那就根据

08:51.720 --> 08:52.720
我们target

08:52.720 --> 08:53.720
node来判断

08:54.720 --> 08:55.720
如果

08:55.720 --> 08:56.720
出的话

08:56.720 --> 08:57.720
说明它是服端环境

08:57.720 --> 08:59.720
否则是我们的

08:59.720 --> 09:00.720
扣端环境

09:01.720 --> 09:02.720
对吧

09:03.720 --> 09:04.720
然后紧接着

09:04.720 --> 09:05.720
导出

09:05.720 --> 09:06.720
module.expose

09:09.720 --> 09:10.720
module.expose

09:10.720 --> 09:11.720
在这里面

09:11.720 --> 09:12.720
咱们不能像之前

09:12.720 --> 09:13.720
用mode

09:13.720 --> 09:14.720
不用

09:14.720 --> 09:15.720
咱们在这里面用configure

09:18.720 --> 09:19.720
configure

09:24.210 --> 09:25.210
configure.wipepack

09:26.210 --> 09:29.840
configure.grewipepack

09:31.840 --> 09:32.840
干嘛呢

09:32.840 --> 09:33.840
写一个函数

09:34.840 --> 09:35.840
然后这里面

09:35.840 --> 09:36.840
返回一个对象

09:40.120 --> 09:41.120
返回个对象

09:41.120 --> 09:42.120
这个对象里面有啥呢

09:42.120 --> 09:44.120
首先咱们的入口

09:45.120 --> 09:46.120
入口

09:46.120 --> 09:47.120
这个入口是有说法的

09:47.120 --> 09:48.120
为什么呢

09:48.120 --> 09:49.120
就是对于

09:50.120 --> 09:51.120
clri

09:51.120 --> 09:52.120
叫他的入口文件

09:52.120 --> 09:53.120
叫ap.gs

09:53.120 --> 09:54.120
所以说

09:54.120 --> 09:55.120
咱们在这里面

09:55.120 --> 09:56.120
给他在

09:56.120 --> 09:57.120
设置入口文件的时候

09:57.120 --> 09:58.120
给他清明

09:58.120 --> 09:59.120
叫

10:00.120 --> 10:01.120
app

10:01.120 --> 10:03.120
然后他们对应的路径

10:03.120 --> 10:04.120
叫什么呢

10:05.120 --> 10:06.120
src

10:06.120 --> 10:07.120
下面安吹

10:07.120 --> 10:08.120
下面

10:08.120 --> 10:09.120
什么呢

10:09.120 --> 10:10.120
这个

10:11.120 --> 10:12.120
我们这个target

10:14.120 --> 10:15.120
下面的

10:15.120 --> 10:16.120
点安吹

10:16.120 --> 10:17.120
点gs

10:17.120 --> 10:18.120
对吧

10:18.120 --> 10:19.120
他代表的是

10:20.120 --> 10:21.120
这个

10:23.120 --> 10:24.120
服务端还是客服端

10:24.120 --> 10:26.120
然后接着往下来

10:26.120 --> 10:27.120
我们除了他干嘛呢

10:27.120 --> 10:29.120
我们还有一个target

10:29.120 --> 10:30.120
对吧

10:30.120 --> 10:31.120
target的代表

10:31.120 --> 10:32.120
它是不是node环境

10:32.120 --> 10:33.120
是吧

10:33.120 --> 10:34.120
同样

10:34.120 --> 10:35.120
通过我们targetnode

10:35.120 --> 10:36.120
来判断一下

10:36.120 --> 10:37.120
如果出的话

10:37.120 --> 10:38.120
什么

10:38.120 --> 10:39.120
就是node环境

10:40.120 --> 10:41.120
对吧

10:41.120 --> 10:42.120
其实

10:42.120 --> 10:43.120
其他的话

10:43.120 --> 10:44.120
就是我们的外部环境

10:44.120 --> 10:45.120
或者不写都行

10:45.120 --> 10:46.120
然后再来

10:46.120 --> 10:47.120
什么呢

10:47.120 --> 10:48.120
我们的

10:49.120 --> 10:50.120
这个

10:50.120 --> 10:51.120
还有output

10:53.680 --> 10:54.680
output

10:54.680 --> 10:55.680
那这里面什么呢

10:56.680 --> 10:57.680
laborate target

10:59.680 --> 11:01.680
laborarway

11:02.680 --> 11:03.680
target

11:03.680 --> 11:04.680
什么呢

11:04.680 --> 11:05.680
在这里面

11:05.680 --> 11:07.680
有一个要根据我们的targetnode

11:07.680 --> 11:08.680
来判断一下

11:08.680 --> 11:10.680
如果是服务端的话

11:10.680 --> 11:12.680
也利用comment.js2

11:12.680 --> 11:14.680
coimm.com.js2

11:14.680 --> 11:16.680
这样的一个maborarway

11:16.680 --> 11:17.680
否则的话就安定办的

11:17.680 --> 11:18.680
是吧

11:19.680 --> 11:20.680
然后还有就是

11:20.680 --> 11:21.680
我们的查件

11:21.680 --> 11:24.680
plugins

11:24.680 --> 11:25.680
那同样

11:25.680 --> 11:26.680
在这里面

11:26.680 --> 11:28.680
用targetnode

11:28.680 --> 11:30.680
来判断一下

11:30.680 --> 11:31.680
如果是出的话

11:31.680 --> 11:32.680
也利用服务端

11:32.680 --> 11:33.680
那执行的是

11:33.680 --> 11:34.680
vue

11:35.680 --> 11:37.680
serverplugin

11:37.680 --> 11:38.680
对吧

11:38.680 --> 11:39.680
否则的话

11:39.680 --> 11:40.680
执行的是

11:41.680 --> 11:43.680
vue.clean.plugin

11:43.680 --> 11:44.680
没问题

11:44.680 --> 11:45.680
没问题

11:45.680 --> 11:46.680
给它整合到一个文件了

11:46.680 --> 11:47.680
对吧

11:47.680 --> 11:48.680
这里面还需要

11:48.680 --> 11:50.680
有一点需要注意的地方

11:50.680 --> 11:51.680
注意的地方在哪呢

11:51.680 --> 11:52.680
就是

11:52.680 --> 11:53.680
正常来说

11:53.680 --> 11:54.680
我们是

11:54.680 --> 11:56.680
多入口文件

11:56.680 --> 11:57.680
多入口文件

11:57.680 --> 11:58.680
然后

11:59.680 --> 12:01.680
导致我们StateChance

12:01.680 --> 12:02.680
它生成的

12:03.680 --> 12:04.680
也是多入口的

12:05.680 --> 12:06.680
会不会导致不错

12:06.680 --> 12:08.680
所以咱们把它给关闭一下

12:08.680 --> 12:09.680
那什么呢

12:09.680 --> 12:10.680
利用Chance

12:12.680 --> 12:13.680
来Pack

12:14.680 --> 12:19.360
干嘛呢

12:19.360 --> 12:20.360
我们这里面来看Fake

12:22.360 --> 12:23.360
点Optimization

12:26.360 --> 12:27.360
OptiA

12:27.360 --> 12:28.360
Opti

12:28.360 --> 12:29.360
i

12:29.360 --> 12:30.360
mi

12:30.360 --> 12:31.360
za

12:31.360 --> 12:32.360
tln

12:32.360 --> 12:33.360
点Suppelate

12:33.360 --> 12:34.360
trunk

12:37.360 --> 12:38.360
按一按

12:39.360 --> 12:40.360
进行关闭

12:40.360 --> 12:41.360
ok

12:41.360 --> 12:42.360
那这样的话

12:42.360 --> 12:43.360
咱们这个

12:43.360 --> 12:44.360
wildpad完事

12:45.360 --> 12:46.360
wildpad完事

12:46.360 --> 12:47.360
wildpad完事之后

12:47.360 --> 12:48.360
咱们干嘛呢

12:48.360 --> 12:49.360
开始定义脚本

12:49.360 --> 12:50.360
对吧

12:50.360 --> 12:51.360
开始定义脚本

12:55.360 --> 12:57.360
回到我们这个pattern.json里面

12:57.360 --> 12:58.360
无非就是打包这点事了

12:58.360 --> 12:59.360
对吧

13:03.360 --> 13:04.360
来

13:04.360 --> 13:05.360
那我们有这个客户端

13:05.360 --> 13:06.360
服务端打包都有

13:06.360 --> 13:07.360
是吧

13:07.360 --> 13:08.360
有一个bude

13:08.360 --> 13:09.360
什么cleant

13:11.360 --> 13:12.360
int

13:14.360 --> 13:15.360
对吧

13:15.360 --> 13:16.360
那这个打包呢

13:16.360 --> 13:18.360
其实就是我们的这个

13:18.360 --> 13:20.360
这个客户端打包

13:20.360 --> 13:21.360
就用这个bude就可以了

13:23.360 --> 13:25.360
然后还有一个服务端

13:25.360 --> 13:26.360
对吧

13:26.360 --> 13:27.360
还有一个服务端

13:27.360 --> 13:28.360
这个服务端呢

13:28.360 --> 13:29.360
什么的

13:30.360 --> 13:32.360
bude server

13:35.360 --> 13:36.360
那这里面干嘛呢

13:36.360 --> 13:38.360
我们设置一个环境

13:38.360 --> 13:39.360
cross

13:39.360 --> 13:40.360
因为

13:41.360 --> 13:42.360
什么的这个

13:43.360 --> 13:46.890
wildpad

13:47.890 --> 13:50.270
target

13:52.270 --> 13:53.270
什么的

13:57.270 --> 13:58.270
然后

13:58.270 --> 14:00.270
执行我们这个

14:00.270 --> 14:01.270
打包

14:01.270 --> 14:02.270
bude

14:02.270 --> 14:03.270
cli

14:04.270 --> 14:05.270
server

14:06.270 --> 14:07.270
series

14:08.270 --> 14:10.640
bude

14:11.640 --> 14:13.640
刚刚mode干嘛呢

14:13.640 --> 14:15.640
指向我们的这个server服

14:16.640 --> 14:17.640
指向我们的server服

14:18.640 --> 14:19.640
OK啊

14:19.640 --> 14:21.640
那这里面默认他有一个那个

14:21.640 --> 14:22.640
那个插件

14:22.640 --> 14:23.640
就是清空我们这个打包结果的

14:23.640 --> 14:25.640
所以说在这干嘛呢

14:25.640 --> 14:26.640
咱们在打包的时候

14:26.640 --> 14:27.640
要多做一点事啊

14:27.640 --> 14:28.640
多做一点事

14:28.640 --> 14:29.640
做啥呢

14:29.640 --> 14:30.640
回来

14:31.640 --> 14:32.640
把这关掉

14:36.210 --> 14:38.210
那咱们再搞一个指令

14:38.210 --> 14:39.210
干嘛呢

14:39.210 --> 14:41.210
叫bude

14:42.210 --> 14:43.210
啊

14:43.210 --> 14:44.210
两个都执行

14:44.210 --> 14:45.210
啊两个都执行

14:45.210 --> 14:47.210
那以为是他要打两次包对吧

14:47.210 --> 14:48.210
打两次包呢

14:48.210 --> 14:49.210
这里面会出现小问题

14:49.210 --> 14:50.210
就是每次打包之后

14:50.210 --> 14:51.210
目录不必清空

14:51.210 --> 14:52.210
那所以说

14:52.210 --> 14:53.210
第一方面

14:53.210 --> 14:54.210
我们首先先执行什么呢

14:54.210 --> 14:56.210
我们的这个

14:56.210 --> 14:57.210
呃

14:57.210 --> 14:58.210
服务端打包

14:58.210 --> 14:59.210
bude

14:59.210 --> 15:00.210
server

15:01.210 --> 15:02.210
那来我们在这边手动来

15:02.210 --> 15:03.210
试一下

15:03.210 --> 15:05.210
看看首先他会不会出错

15:05.210 --> 15:06.210
npm乱

15:06.210 --> 15:07.210
bude

15:07.210 --> 15:08.210
server

15:09.210 --> 15:10.210
看一下

15:11.210 --> 15:16.920
对吧

15:16.920 --> 15:17.920
完事了

15:17.920 --> 15:18.920
完事你看第四层里面

15:18.920 --> 15:19.920
就只有一个这个

15:19.920 --> 15:20.920
只有一个这个文件

15:20.920 --> 15:21.920
那所以说

15:21.920 --> 15:22.920
在打包完之后

15:22.920 --> 15:24.920
打包完成之后干嘛呢

15:24.920 --> 15:25.920
我们需要移动

15:25.920 --> 15:26.920
把这个文件移出来

15:26.920 --> 15:27.920
就相当于保存一下

15:27.920 --> 15:28.920
目

15:28.920 --> 15:29.920
什么的

15:29.920 --> 15:30.920
第四层

15:30.920 --> 15:31.920
啊

15:31.920 --> 15:32.920
第四层下面的

15:32.920 --> 15:33.920
呃

15:33.920 --> 15:34.920
叫什么的view

15:36.920 --> 15:37.920
叫什么

15:37.920 --> 15:39.920
冲命名

15:39.920 --> 15:46.770
哎

15:46.770 --> 15:51.320
跟着谁

15:54.020 --> 15:55.020
对吧

15:55.020 --> 15:56.020
咱把这个接次移出来

15:56.020 --> 15:57.020
啊一出来叫什么呢

15:57.020 --> 15:58.020
叫

15:58.020 --> 15:59.020
呃

15:59.020 --> 16:00.020
你叫个b

16:00.020 --> 16:01.020
或者叫关总

16:02.020 --> 16:03.020
给他存到外面来

16:03.020 --> 16:04.020
啊

16:04.020 --> 16:05.020
然后存外面来之后

16:05.020 --> 16:06.020
干嘛呢

16:06.020 --> 16:07.020
再执行一下

16:07.020 --> 16:08.020
npm乱

16:08.020 --> 16:09.020
bude

16:10.020 --> 16:11.020
什么的

16:11.020 --> 16:12.020
clint

16:12.020 --> 16:13.020
啊

16:13.020 --> 16:14.020
扣断再进行打包

16:14.020 --> 16:16.020
打包完成之后干嘛呢

16:16.020 --> 16:17.020
再把它移进去

16:17.020 --> 16:18.020
啊

16:18.020 --> 16:19.020
再把它移进去

16:21.020 --> 16:22.020
就是这这段代码

16:23.020 --> 16:24.020
再执行一下

16:25.020 --> 16:27.020
那只不过移进去的话

16:27.020 --> 16:28.020
是把bando

16:28.020 --> 16:29.020
干嘛呢

16:29.020 --> 16:30.020
移到里面

16:30.020 --> 16:31.020
并且

16:32.020 --> 16:33.020
给其名叫

16:33.020 --> 16:34.020
哎

16:34.020 --> 16:35.020
移到这里面

16:35.020 --> 16:36.020
并且起码叫这个接字文件

16:36.020 --> 16:37.020
啊

16:37.020 --> 16:38.020
那咱们来试一下

16:38.020 --> 16:39.020
咱们来试一下

16:39.020 --> 16:42.020
npm乱bude

16:42.020 --> 16:43.020
哦

16:43.020 --> 16:44.020
啊

16:44.020 --> 16:45.020
来感受一下

16:46.020 --> 16:48.330
你看

16:48.330 --> 16:49.330
首先他会没有

16:49.330 --> 16:52.990
对吧

16:52.990 --> 16:53.990
哎

16:53.990 --> 16:54.990
移动一个文件之后

16:54.990 --> 16:55.990
完事

16:55.990 --> 16:56.990
会给清除

16:56.990 --> 16:57.990
啊

16:57.990 --> 16:58.990
之后有个bando

16:59.990 --> 17:01.990
然后又把bando移进去

17:02.990 --> 17:03.990
对吧

17:03.990 --> 17:04.990
有这两文件

17:04.990 --> 17:05.990
有这两文件干嘛呢

17:05.990 --> 17:06.990
方便我们这个搜索去调用

17:06.990 --> 17:07.990
对吧

17:07.990 --> 17:08.990
搜索去调用

17:08.990 --> 17:09.990
OK

17:09.990 --> 17:10.990
那这个时候干嘛呢

17:10.990 --> 17:11.990
我们再切弯到

17:11.990 --> 17:13.990
这个搜索都进去

17:13.990 --> 17:14.990
啊

17:14.990 --> 17:15.990
然后node

17:15.990 --> 17:17.990
index.js

17:18.990 --> 17:19.990
OK

17:23.960 --> 17:24.960
来

17:24.960 --> 17:25.960
我们打开这个暖气

17:26.960 --> 17:27.960
端口多少来着

17:28.960 --> 17:29.960
12396

17:31.960 --> 17:35.490
对吧

17:35.490 --> 17:36.490
哎

17:36.490 --> 17:38.930
About

17:38.930 --> 17:39.930
没有任何问题

17:39.930 --> 17:40.930
对吧

17:40.930 --> 17:41.930
包括说你在这里

17:41.930 --> 17:42.930
请求About

17:42.930 --> 17:44.930
就是你再检查一下

17:44.930 --> 17:54.560
就是查查查王爷原代码的时候

17:54.560 --> 17:55.560
对吧

17:55.560 --> 17:57.560
你会发现里面这些东西都有

17:57.560 --> 17:58.560
啊

17:58.560 --> 17:59.560
就最起码我们要展示的

17:59.560 --> 18:00.560
这些东西是有的

18:00.560 --> 18:01.560
啊

18:01.560 --> 18:02.560
当然里面也没其他的

18:02.560 --> 18:03.560
包括Home这也一样

18:03.560 --> 18:04.560
啊

18:04.560 --> 18:05.560
刷新

18:05.560 --> 18:10.750
是吧

18:10.750 --> 18:11.750
就很长

18:11.750 --> 18:12.750
就在这里面

18:12.750 --> 18:13.750
所以说咱们这个

18:13.750 --> 18:15.750
基于CLSI去修改

18:15.750 --> 18:16.750
咱们的这个

18:16.750 --> 18:17.750
成功的啊

18:17.750 --> 18:18.750
就是这个

18:19.750 --> 18:20.750
就交易价去改

18:20.750 --> 18:21.750
我们的SSR环境

18:21.750 --> 18:22.750
这个就完成了

18:22.750 --> 18:23.750
啊

