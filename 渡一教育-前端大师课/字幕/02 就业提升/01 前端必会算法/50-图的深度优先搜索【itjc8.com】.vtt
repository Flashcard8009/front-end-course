WEBVTT

00:01.330 --> 00:03.330
哈喽 大家好

00:03.330 --> 00:07.330
上一集我们说了树的深搜和广搜

00:07.330 --> 00:10.330
我们这一集来说 图的深搜和广搜

00:10.330 --> 00:12.330
树的深搜广搜其实就是个练手

00:12.330 --> 00:15.330
图的深搜广搜比较复杂

00:15.330 --> 00:17.330
它复杂在哪儿呢

00:17.330 --> 00:19.330
我们看 这是一个图

00:19.330 --> 00:20.330
对吧

00:20.330 --> 00:22.330
A,B,C,D

00:22.330 --> 00:24.330
如果我们去搜索的话

00:24.330 --> 00:26.330
看 这个A

00:26.330 --> 00:28.330
假如说以A为起点

00:28.330 --> 00:29.330
A的下一个

00:29.330 --> 00:30.330
A搜索完了之后

00:30.330 --> 00:32.330
A的下一个是C

00:32.330 --> 00:33.330
C的下一个是B

00:33.330 --> 00:35.330
B的下一个是A

00:35.330 --> 00:36.330
A的下一个是C

00:36.330 --> 00:37.330
C的下一个是B

00:37.330 --> 00:38.330
再下一个A,B,C

00:38.330 --> 00:39.330
AC,B,AC,B

00:39.330 --> 00:40.330
是吧

00:40.330 --> 00:41.330
循环了是吧

00:41.330 --> 00:43.330
它始终走不到地和异

00:43.330 --> 00:45.330
在这块就死循环了

00:45.330 --> 00:47.330
在这块就死循环了

00:47.330 --> 00:48.330
或者是直接

00:48.330 --> 00:51.330
AC,AC,AC,AC

00:51.330 --> 00:53.330
来回的让它回的串

00:53.330 --> 00:54.330
是吧

00:54.330 --> 00:57.330
它就有可能就死循环了

00:57.330 --> 00:59.330
所以说如果是图的话

00:59.330 --> 01:01.330
我们该如何进行深搜

01:01.330 --> 01:04.330
该如何进行深搜和广搜

01:04.330 --> 01:06.330
记住一点就是

01:06.330 --> 01:08.330
找过的点就不再找了

01:08.330 --> 01:10.330
找过的点就不再找了

01:10.330 --> 01:11.330
我们来看一下

01:11.330 --> 01:13.330
这种代码到底要怎么写

01:19.580 --> 01:20.580
稍等

01:20.580 --> 01:22.580
我把这个代码提交一下

01:22.580 --> 01:31.080
把这个代码提交一下

01:31.080 --> 01:33.080
然后我们来想想

01:33.080 --> 01:35.080
这个数的深搜广搜怎么写

01:35.080 --> 01:37.080
首先不是图的深搜广搜

01:37.080 --> 01:39.080
首先我们得构建出来一个图

01:39.080 --> 01:41.080
图和数是有区别的

01:41.080 --> 01:43.080
我们这个数

01:43.080 --> 01:45.080
只有父亲戚点指向子戒点

01:45.080 --> 01:46.080
是吧

01:46.080 --> 01:48.080
我们不考虑来回指的情况

01:48.080 --> 01:50.080
但是图不是

01:50.080 --> 01:51.080
图

01:51.080 --> 01:53.080
父亲戚点不但能指向子戒点

01:53.080 --> 01:54.080
不是

01:54.080 --> 01:55.080
A戒点能指向B

01:55.080 --> 01:56.080
B也能指向A

01:56.080 --> 01:58.080
所以它两个点就可以形成循环

01:59.080 --> 02:01.080
图的

02:01.080 --> 02:02.080
深度

02:02.080 --> 02:04.080
优先搜索

02:05.080 --> 02:07.080
它两个点都可以形成咨询环

02:07.080 --> 02:08.080
是吧

02:08.080 --> 02:09.080
因为A指向B

02:09.080 --> 02:10.080
B指向A

02:10.080 --> 02:11.080
A在指向B

02:11.080 --> 02:12.080
B在指向B

02:12.080 --> 02:13.080
是吧

02:14.080 --> 02:15.080
所以说

02:15.080 --> 02:16.080
我们先来

02:16.080 --> 02:17.080
不管怎么样

02:17.080 --> 02:19.080
先来构建一个图的

02:20.080 --> 02:22.080
this value等于

02:22.080 --> 02:23.080
value

02:23.080 --> 02:27.080
this neighbor

02:27.080 --> 02:29.080
为什么我有的时候用 neighbor

02:29.080 --> 02:30.080
有的时候用 child

02:30.080 --> 02:32.080
有父子关系的我就用 child

02:33.080 --> 02:35.080
没有父子关系的都是平级的

02:36.080 --> 02:37.080
我就用 neighbor

02:39.080 --> 02:40.080
valueA等于

02:40.080 --> 02:41.080
你用一个 node

02:41.080 --> 02:42.080
A

02:44.080 --> 02:46.080
A,B,C,D,E,5个点是吧

02:46.080 --> 02:48.080
A,B,C,D,E

02:50.080 --> 02:54.080
A,B,C,D,E

02:55.080 --> 02:58.080
A,B,C,D,E

02:59.080 --> 03:00.080
然后呢

03:00.080 --> 03:01.080
A有两个连续是吧

03:01.080 --> 03:03.080
A the neighbor

03:03.080 --> 03:04.080
的 push

03:05.080 --> 03:06.080
B和C

03:08.080 --> 03:09.080
A the neighbor

03:09.080 --> 03:10.080
的 push

03:11.080 --> 03:12.080
C

03:12.080 --> 03:13.080
B有三个连续

03:13.080 --> 03:14.080
ACD

03:14.080 --> 03:15.080
B the neighbor

03:15.080 --> 03:16.080
的 push

03:16.080 --> 03:17.080
A

03:17.080 --> 03:18.080
B the neighbor

03:18.080 --> 03:19.080
的 push

03:19.080 --> 03:20.080
C

03:21.080 --> 03:22.080
B the neighbor

03:22.080 --> 03:23.080
的 push

03:23.080 --> 03:24.080
D

03:24.080 --> 03:25.080
D

03:28.290 --> 03:30.290
然后C有三个连续是吧

03:30.290 --> 03:31.290
ABD

03:31.290 --> 03:32.290
C the neighbor

03:32.290 --> 03:33.290
的 push

03:33.290 --> 03:34.290
A

03:35.290 --> 03:36.290
C the neighbor

03:36.290 --> 03:37.290
的 push

03:37.290 --> 03:38.290
B

03:38.290 --> 03:39.290
C the neighbor

03:39.290 --> 03:40.290
的 push

03:40.290 --> 03:41.290
D

03:43.290 --> 03:44.290
D有三个连续

03:44.290 --> 03:45.290
B,C,E

03:45.290 --> 03:46.290
D the neighbor

03:46.290 --> 03:47.290
的 push

03:47.290 --> 03:48.290
B

03:49.290 --> 03:50.290
D the neighbor

03:50.290 --> 03:51.290
的 push

03:51.290 --> 03:52.290
C

03:54.790 --> 03:55.790
B,C,E

03:55.790 --> 03:57.790
D the neighbor

03:57.790 --> 03:58.790
的 push

03:58.790 --> 03:59.790
E

03:59.790 --> 04:00.790
然后呢

04:00.790 --> 04:01.790
E只有一个连续

04:01.790 --> 04:02.790
D是吧

04:03.790 --> 04:04.790
E the neighbor

04:04.790 --> 04:05.790
的 push

04:05.790 --> 04:06.790
D

04:07.790 --> 04:08.790
这样的话

04:08.790 --> 04:09.790
我们就构建出来了

04:09.790 --> 04:11.790
这个图了是吧

04:11.790 --> 04:12.790
图了

04:13.790 --> 04:14.790
方式

04:14.790 --> 04:15.790
D和C

04:16.790 --> 04:18.790
随便给我一个节点

04:18.790 --> 04:19.790
随便给我一个节点就行

04:19.790 --> 04:20.790
只要是这个图容

04:20.790 --> 04:22.790
随便给我一个节点就行

04:22.790 --> 04:23.790
然后呢

04:23.790 --> 04:24.790
随便给我一个什么呢

04:24.790 --> 04:25.790
再给我一个tour guide

04:27.790 --> 04:28.790
再给我一个pice

04:28.790 --> 04:29.790
走过的路径

04:30.790 --> 04:31.790
比如说我想看

04:31.790 --> 04:32.790
console.log

04:32.790 --> 04:33.790
什么呢

04:33.790 --> 04:34.790
看peepsearch

04:35.790 --> 04:36.790
随便给一个节点

04:36.790 --> 04:37.790
A,B,C,D

04:37.790 --> 04:38.790
就行随便吧

04:38.790 --> 04:39.790
B吧

04:39.790 --> 04:40.790
B这个接点

04:40.790 --> 04:41.790
以B这个节点为开始

04:41.790 --> 04:42.790
我要找一个

04:42.790 --> 04:43.790
谁呢

04:43.790 --> 04:44.790
找一个

04:44.790 --> 04:45.790
C在不在里面

04:46.790 --> 04:47.790
pice

04:47.790 --> 04:48.790
走过的路径

04:48.790 --> 04:49.790
最开始没有

04:50.790 --> 04:51.790
空的数据

04:52.790 --> 04:54.790
把空的数据留下来

04:54.790 --> 04:55.790
然后呢

04:55.790 --> 04:56.790
这个load

04:56.790 --> 04:57.790
我们看

04:57.790 --> 04:58.790
维不维空

04:59.790 --> 05:01.790
load等于空

05:02.790 --> 05:03.790
就rechain

05:04.790 --> 05:05.790
force

05:06.790 --> 05:07.790
看

05:07.790 --> 05:08.790
如果空底点

05:08.790 --> 05:09.790
这样没有土

05:09.790 --> 05:10.790
没有土的话

05:10.790 --> 05:11.790
就rechain force

05:11.790 --> 05:12.790
然后如果

05:12.790 --> 05:14.790
load的y6

05:14.790 --> 05:15.790
等于target

05:16.790 --> 05:18.790
它是直相同

05:18.790 --> 05:19.790
纳美的手

05:19.790 --> 05:20.790
rechain force

05:23.790 --> 05:24.790
如果load的

05:24.790 --> 05:26.790
的y6也不相当

05:26.790 --> 05:27.790
太不维空

05:27.790 --> 05:28.790
那我就得找它的邻居了

05:28.790 --> 05:29.790
是吧

05:30.790 --> 05:31.790
不是它的隔壁老王

05:31.790 --> 05:32.790
是它的邻居

05:32.790 --> 05:33.790
brake item

05:33.790 --> 05:34.790
air

05:34.790 --> 05:37.490
i小鱼

05:37.490 --> 05:38.490
load the lance

05:38.490 --> 05:40.490
load the neighbor

05:40.490 --> 05:41.490
the lance

05:49.170 --> 05:51.170
load的如果查看过了

05:51.170 --> 05:53.170
load的如果查看过了

05:53.170 --> 05:55.170
我们就像pace的push

05:58.740 --> 05:59.740
pace的push node

05:59.740 --> 06:01.740
把当前那个节点

06:01.740 --> 06:02.740
放到

06:02.740 --> 06:04.740
已经查看过的路径

06:04.740 --> 06:05.740
把当前的节点

06:05.740 --> 06:07.740
放到已经查看过的路径

06:09.740 --> 06:10.740
所以呢

06:10.740 --> 06:11.740
我们在前面

06:11.740 --> 06:12.740
再加一点

06:12.740 --> 06:13.740
衣服

06:13.740 --> 06:14.740
什么呢

06:14.740 --> 06:16.740
pace

06:16.740 --> 06:18.740
index of node

06:19.740 --> 06:20.740
大于富一

06:20.740 --> 06:21.740
就是我们之前找过了

06:21.740 --> 06:22.740
这个点

06:22.740 --> 06:23.740
是吧

06:23.740 --> 06:24.740
rechain force

06:24.740 --> 06:25.740
这个点之前找过了

06:25.740 --> 06:26.740
rechain force

06:30.010 --> 06:31.010
然后呢就一个去找

06:31.010 --> 06:32.010
dip search

06:34.010 --> 06:37.010
load the neighbor

06:40.010 --> 06:41.010
对吧

06:41.010 --> 06:42.010
dip search node

06:42.010 --> 06:43.010
the neighbor

06:43.010 --> 06:44.010
然后呢查看

06:44.010 --> 06:45.010
把这个值传进去

06:45.010 --> 06:47.010
把pace传进去

06:47.010 --> 06:49.010
它这个问题多在哪

06:49.010 --> 06:51.010
多在一个字是吧

06:51.010 --> 06:52.010
你必须要判断一下

06:52.010 --> 06:53.010
当前的这个节点

06:53.010 --> 06:55.010
我走没走过

06:55.010 --> 06:56.010
这个和

06:56.010 --> 06:58.010
数形的伸缩是不一样的

06:58.010 --> 06:59.010
数的伸缩

06:59.010 --> 07:00.010
不用判断走没走过

07:00.010 --> 07:02.010
它不会形成还

07:02.010 --> 07:03.010
绝对不可能走过

07:03.010 --> 07:04.010
是吧

07:04.010 --> 07:05.010
但是图不一样

07:05.010 --> 07:06.010
图必须有这么一个

07:07.010 --> 07:08.010
然后呢

07:08.010 --> 07:09.010
它这个dip算是呢

07:09.010 --> 07:10.010
算算的是什么呢

07:10.010 --> 07:11.010
是算的是

07:11.010 --> 07:12.010
有没有这个

07:12.010 --> 07:13.010
值是吧

07:13.010 --> 07:14.010
有这个还是没有这个

07:14.010 --> 07:16.010
不是一个result

07:16.010 --> 07:17.010
force

07:18.010 --> 07:19.010
然后呢

07:19.010 --> 07:20.010
result

07:20.010 --> 07:21.010
或等于

07:21.010 --> 07:22.010
还记着吧

07:22.010 --> 07:24.010
数的伸缩也这样是吧

07:24.010 --> 07:26.010
维签人

07:26.010 --> 07:28.010
维造起来

07:28.010 --> 07:29.010
这样的话

07:29.010 --> 07:30.010
我们就完成了一个

07:30.010 --> 07:32.010
图的伸缩

07:32.010 --> 07:33.010
图的伸缩

07:33.010 --> 07:34.010
我们来看一下

07:34.010 --> 07:35.010
我们算

07:35.010 --> 07:36.010
传入一个b

07:36.010 --> 07:37.010
c

07:37.010 --> 07:41.730
这个能不能完成

07:41.730 --> 07:43.730
就让我反过来

07:43.730 --> 07:45.730
force

07:47.730 --> 07:48.730
存在是吧

07:48.730 --> 07:50.730
存在c是吧

07:50.730 --> 07:52.730
它能存不存在d

07:52.730 --> 07:53.730
存在d是吧

07:53.730 --> 07:54.730
存不存在n

07:56.730 --> 07:57.730
不存在n

07:57.730 --> 07:58.730
是吧

07:58.730 --> 07:59.730
搞定

07:59.730 --> 08:00.730
这就是图的伸缩

08:00.730 --> 08:01.730
图的伸缩

08:01.730 --> 08:02.730
比数的伸缩

08:02.730 --> 08:03.730
要考虑一个是

08:03.730 --> 08:04.730
不要形成还

08:05.730 --> 08:06.730
图

08:06.730 --> 08:07.730
不能形成还

08:07.730 --> 08:08.730
这就是图的伸缩

08:08.730 --> 08:09.730
那下一集

08:09.730 --> 08:10.730
我们来说

08:10.730 --> 08:11.730
图的广度有点松松

