WEBVTT

00:00.000 --> 00:07.000
哈喽 大家好 这一集我们来说二刹书的地夫算法

00:07.000 --> 00:10.000
这是一个盗梦结构的一个地夫算法

00:10.000 --> 00:13.000
这是我们在WeiWei中大家经常能看得到的

00:13.000 --> 00:17.000
这个地夫算法 如果你把二刹书扩到数性结构上

00:17.000 --> 00:19.000
那就是一个盗梦的地夫算法

00:19.000 --> 00:21.000
跟算法的结构是一样的

00:21.000 --> 00:25.000
之所以要地夫 我们需要得到的是什么

00:25.000 --> 00:28.000
地夫了之后我们需要得到的是什么

00:28.000 --> 00:30.000
新增了什么

00:30.000 --> 00:33.000
修改了什么

00:33.000 --> 00:36.000
删除了什么

00:36.000 --> 00:39.000
对吧 我们以此才能做出来的地夫

00:39.000 --> 00:41.000
地夫就是比较

00:41.000 --> 00:43.000
我要知道新增了什么

00:43.000 --> 00:44.000
修改了什么

00:44.000 --> 00:46.000
删除了什么

00:46.000 --> 00:50.000
所以我们要不但在比较的过程中

00:50.000 --> 00:52.000
我们不但要进行比较

00:52.000 --> 00:56.000
还要给它创建出来一个这样的地夫的记录

00:56.000 --> 00:58.000
我要问你

00:58.000 --> 01:00.000
地夫list

01:00.000 --> 01:02.000
一个数组

01:02.000 --> 01:04.000
我希望这个数组

01:04.000 --> 01:06.000
是一个什么结构呢

01:06.000 --> 01:07.000
这个数组呢

01:07.000 --> 01:10.000
已经每一个元素是一个对象

01:11.000 --> 01:14.000
是一个type

01:16.000 --> 01:22.170
我说新增

01:22.170 --> 01:23.170
type新增

01:23.170 --> 01:24.170
然后呢

01:24.170 --> 01:26.170
我说这个节点

01:26.170 --> 01:27.170
note

01:27.170 --> 01:29.170
比如说ar

01:29.170 --> 01:31.170
或者是cr

01:31.170 --> 01:33.170
类似于这样

01:33.170 --> 01:35.170
类似于一个这样的结构

01:35.170 --> 01:37.170
这是里面的每一个元素

01:37.170 --> 01:39.170
比如说修改

01:39.170 --> 01:41.170
type

01:41.170 --> 01:43.170
修改

01:43.170 --> 01:45.170
然后note是什么

01:45.170 --> 01:46.170
我可以有两个

01:46.170 --> 01:48.170
一个是orange

01:48.170 --> 01:51.860
就是原来的节点是什么

01:51.860 --> 01:52.860
新增的话

01:52.860 --> 01:53.860
原来的节点是什么

01:53.860 --> 01:55.860
原来的节点是空是吧

01:55.860 --> 01:57.860
现在的节点呢

01:57.860 --> 01:58.860
note

01:58.860 --> 01:59.860
现在是什么

01:59.860 --> 02:00.860
比如说是cr

02:00.860 --> 02:02.860
假如说过去没有cr

02:02.860 --> 02:03.860
现在有cr

02:03.860 --> 02:04.860
修改的呢

02:04.860 --> 02:06.860
那就是orange

02:06.860 --> 02:08.860
是

02:08.860 --> 02:11.860
这个c1

02:11.860 --> 02:13.860
c1

02:13.860 --> 02:14.860
然后呢note

02:14.860 --> 02:16.860
现在呢是cr

02:16.860 --> 02:18.860
这是修改是吧

02:18.860 --> 02:19.860
过去的节点

02:19.860 --> 02:21.860
现在的节点

02:21.860 --> 02:23.860
那删除呢

02:23.860 --> 02:27.820
太后

02:28.820 --> 02:30.820
删除

02:30.820 --> 02:32.820
orange

02:32.820 --> 02:33.820
删除是不是过去得有

02:33.820 --> 02:35.820
比如说过去有cr

02:35.820 --> 02:36.820
现在呢

02:36.820 --> 02:37.820
现在为空

02:37.820 --> 02:44.840
这种情况下

02:44.840 --> 02:46.840
这样的一种情况下

02:46.840 --> 02:48.840
我把它沾到上面来

02:48.840 --> 02:52.470
新增

02:52.470 --> 02:54.470
修改

02:54.470 --> 02:56.470
删除

02:56.470 --> 02:58.470
新增过去为空

02:58.470 --> 03:00.470
现在的节点

03:00.470 --> 03:01.470
以及修改

03:01.470 --> 03:02.470
过去的节点

03:02.470 --> 03:03.470
现在的节点

03:03.470 --> 03:05.470
还有删除

03:05.470 --> 03:06.470
过去的节点

03:06.470 --> 03:07.470
现在为空

03:07.470 --> 03:08.470
这样的情况下是删除

03:08.470 --> 03:09.470
是吧

03:09.470 --> 03:11.470
我添加很多这样的对象

03:11.470 --> 03:12.470
好吧

03:12.470 --> 03:13.470
我们就开始进行比较吧

03:13.470 --> 03:14.470
好吧

03:14.470 --> 03:16.470
方式

03:16.470 --> 03:17.470
dif

03:19.470 --> 03:21.470
给出一个root1

03:21.470 --> 03:23.470
一个root2

03:23.470 --> 03:26.470
我们要最后return出来一个dif list

03:26.470 --> 03:27.470
是吧

03:27.470 --> 03:29.470
我们要最后要return一个dif list

03:29.470 --> 03:31.780
好

03:31.780 --> 03:33.780
那我们先来

03:33.780 --> 03:34.780
这个

03:34.780 --> 03:36.780
还有个dif list

03:37.780 --> 03:38.780
root1

03:38.780 --> 03:39.780
root2

03:39.780 --> 03:40.780
dif list

03:40.780 --> 03:42.780
然后我们对这个dif list的进行修改

03:42.780 --> 03:45.780
比如说我们要进行dif trade

03:45.780 --> 03:47.780
A1

03:47.780 --> 03:49.780
和A2这两个处

03:49.780 --> 03:50.780
处是吧

03:50.780 --> 03:51.780
dif list

03:51.780 --> 03:52.780
我们先传一个空数组

03:52.780 --> 03:53.780
因为最开始的时候

03:53.780 --> 03:54.780
我也不知道什么东西不一样

03:54.780 --> 03:56.780
我给它传个空数组

03:58.780 --> 04:00.780
一个dif list

04:00.780 --> 04:06.400
等于空数组

04:06.400 --> 04:07.400
稍等一下

04:07.400 --> 04:09.900
我这块又卡了

04:09.900 --> 04:12.900
我可能又需要关一下这个编辑器了

04:12.900 --> 04:22.050
等它转完

04:22.050 --> 04:25.940
关一下编辑器

04:25.940 --> 04:26.940
这种时候必须得关

04:26.940 --> 04:27.940
如果你继续打的话

04:27.940 --> 04:28.940
它还会卡

04:28.940 --> 04:42.520
有点惨是吧

04:42.520 --> 04:43.520
好吧

04:43.520 --> 04:44.520
这些能关的

04:44.520 --> 04:52.020
现在都关一些了

04:52.020 --> 04:53.020
我重启一下

04:53.020 --> 05:05.310
我也不知道

05:05.310 --> 05:10.310
传进去一个dif list

05:10.310 --> 05:11.310
然后最后

05:11.310 --> 05:15.200
我们来打印一下

05:15.200 --> 05:16.200
dif list

05:16.200 --> 05:20.200
我们通过dif trade

05:20.200 --> 05:21.200
来增加dif list

05:21.200 --> 05:22.200
看看哪里不一样

05:22.200 --> 05:23.200
我们就往里添一个

05:23.200 --> 05:24.200
哪里不一样

05:24.200 --> 05:25.200
我们就添一个

05:25.200 --> 05:27.200
首先还是第一点

05:27.200 --> 05:30.200
如果

05:30.200 --> 05:34.200
route1

05:34.200 --> 05:36.200
等于route2

05:36.200 --> 05:38.200
是不是就完全相当

05:38.200 --> 05:41.200
直接水浅dif list

05:41.200 --> 05:42.200
就完事了

05:42.200 --> 05:43.200
微空就微空

05:43.200 --> 05:45.200
dif list没有就没有

05:45.200 --> 05:49.200
如果

05:49.200 --> 05:53.200
route1等于空

05:53.200 --> 05:55.200
如果route1等于空

05:55.200 --> 06:01.200
且route2不等于空

06:01.200 --> 06:04.200
这代表的是什么呢

06:04.200 --> 06:08.200
是不是代表的是新增了节点

06:08.200 --> 06:09.200
对吧

06:09.200 --> 06:10.200
一微空

06:10.200 --> 06:11.200
过去的微空

06:11.200 --> 06:12.200
现在的微空

06:12.200 --> 06:13.200
这不是就新增了吗

06:13.200 --> 06:14.200
对吧

06:14.200 --> 06:16.200
那我就dif list

06:16.200 --> 06:18.200
push

06:18.200 --> 06:19.200
push一个什么的

06:19.200 --> 06:21.200
这么一个对象

06:21.200 --> 06:23.200
太空

06:23.200 --> 06:26.200
新增

06:26.200 --> 06:28.200
然后

06:28.200 --> 06:33.500
orange

06:33.500 --> 06:35.500
orange什么

06:35.500 --> 06:38.500
orange过去是空的是吧

06:38.500 --> 06:39.500
现在

06:39.500 --> 06:41.500
no

06:41.500 --> 06:43.500
route2

06:43.500 --> 06:44.500
对吧

06:44.500 --> 06:45.500
这是新增

06:45.500 --> 06:47.500
else is

06:47.500 --> 06:51.380
route1

06:51.380 --> 06:53.380
不等于空

06:53.380 --> 06:54.380
但是

06:54.380 --> 06:57.380
route2却等于空

06:57.380 --> 06:58.380
这代表什么

06:58.380 --> 07:00.380
过去的不等于空

07:00.380 --> 07:01.380
过去有东西

07:01.380 --> 07:02.380
现在被空了

07:02.380 --> 07:03.380
这代表的是什么

07:03.380 --> 07:04.380
这代表的是

07:04.380 --> 07:06.380
删除了节点

07:06.380 --> 07:11.020
这代表的是删除了节点

07:11.020 --> 07:14.020
那就dif list的

07:14.020 --> 07:15.020
push

07:15.020 --> 07:19.670
太空

07:19.670 --> 07:20.670
墓号

07:20.670 --> 07:22.670
删除

07:22.670 --> 07:26.240
orange

07:26.240 --> 07:29.240
是route1

07:29.240 --> 07:32.240
no

07:32.240 --> 07:34.240
空

07:34.240 --> 07:36.240
这代表的是删除了节点

07:36.240 --> 07:38.240
对吧

07:38.240 --> 07:39.240
然后

07:39.240 --> 07:41.240
再否则

07:41.240 --> 07:43.240
dif

07:43.240 --> 07:48.980
else is

07:50.980 --> 07:52.980
route1的value

07:53.980 --> 07:56.980
不等于route2的value

07:56.980 --> 07:58.980
是不是也是不想弄的意思

07:58.980 --> 08:02.740
这代表的是什么

08:02.740 --> 08:05.740
相同位置的节点

08:05.740 --> 08:08.740
值不同的

08:08.740 --> 08:10.740
表示修改的节点

08:10.740 --> 08:13.120
对吧

08:13.120 --> 08:19.200
那就dif list的push

08:19.200 --> 08:21.200
太空

08:21.200 --> 08:24.200
修改

08:24.200 --> 08:27.510
orange

08:27.510 --> 08:29.510
route1

08:29.510 --> 08:31.510
no

08:31.510 --> 08:34.950
route2

08:34.950 --> 08:36.950
新增删除修改

08:36.950 --> 08:38.950
删除情况

08:38.950 --> 08:39.950
最后

08:39.950 --> 08:41.950
既没有删新增

08:41.950 --> 08:42.950
也没有删除

08:42.950 --> 08:43.950
也没有修改

08:43.950 --> 08:44.950
那就是怎么样

08:44.950 --> 08:46.950
现在都是一样

08:46.950 --> 08:47.950
我们得继续向下

08:47.950 --> 08:48.950
进行比较

08:48.950 --> 08:49.950
对吧

08:49.950 --> 08:53.900
dif trade

08:53.900 --> 08:57.900
route1的life

08:57.900 --> 08:59.900
然后

08:59.900 --> 09:03.900
route2的life

09:03.900 --> 09:05.900
dif list

09:05.900 --> 09:06.900
然后

09:06.900 --> 09:08.900
dif trade

09:08.900 --> 09:10.900
route1的right

09:10.900 --> 09:13.900
route2的right

09:13.900 --> 09:15.900
dif list

09:15.900 --> 09:16.900
老师

09:16.900 --> 09:17.900
为什么不用旋转

09:17.900 --> 09:18.900
我们

09:18.900 --> 09:21.900
假设的是比较道目的一个场景

09:21.900 --> 09:22.900
比较道目的场景

09:22.900 --> 09:24.900
这个就是不用旋转

09:24.900 --> 09:25.900
按位置

09:25.900 --> 09:26.900
对应着去比较

09:26.900 --> 09:28.900
这就OK

09:28.900 --> 09:30.900
这就是dif trade

09:30.900 --> 09:31.900
再来看一下

09:31.900 --> 09:33.900
这两个数现在有什么不一样

09:33.900 --> 09:42.020
我现在是给旋转过来

09:42.020 --> 09:44.020
是不是修改

09:44.020 --> 09:46.020
看好了

09:46.020 --> 09:47.020
我现在这个的是什么

09:47.020 --> 09:49.020
我现在我想给他还原

09:49.020 --> 09:51.020
咱们先改

09:51.020 --> 09:54.580
先给大家来讲

09:54.580 --> 09:56.580
现在两个数是相等的

09:56.580 --> 10:02.280
两个数是相等的

10:02.280 --> 10:04.280
这样的两个数是相等的

10:04.280 --> 10:07.280
我如果给右边这颗数

10:07.280 --> 10:09.280
干掉一个e

10:09.280 --> 10:10.280
什么

10:10.280 --> 10:13.280
就是b2的right给他干掉

10:13.280 --> 10:16.280
b2的right给他干掉

10:16.280 --> 10:18.280
我们希望得到什么

10:18.280 --> 10:19.280
一个山储

10:19.280 --> 10:21.280
过去是

10:21.280 --> 10:23.280
过去是什么

10:23.280 --> 10:28.550
过去是

10:28.550 --> 10:31.550
不是这个数

10:31.550 --> 10:34.550
等会我们再来重搞一下

10:34.550 --> 10:51.020
我们把这个山储

10:51.020 --> 10:53.020
这两个数本身是相等的

10:53.020 --> 10:56.020
然后我把c的右边的山储

10:56.020 --> 10:58.020
这是右边的数是什么

10:58.020 --> 11:00.020
c2是修改之后的

11:00.020 --> 11:02.020
我们把c2的right给山储

11:02.020 --> 11:05.020
c2的right等于g2是吧

11:05.020 --> 11:07.020
我把g的对应为山储

11:07.020 --> 11:09.020
我们希望得到的什么

11:09.020 --> 11:11.020
我们希望得到粒斯他里面

11:11.020 --> 11:12.020
是有内容的

11:12.020 --> 11:14.020
然后是山储

11:14.020 --> 11:15.020
是吧

11:15.020 --> 11:16.020
过去是g2

11:16.020 --> 11:18.020
现在是空

11:18.020 --> 11:20.580
对吧

11:20.580 --> 11:22.580
过去是g1

11:22.580 --> 11:23.580
过去是g1

11:23.580 --> 11:25.580
现在是空

11:25.580 --> 11:26.580
对吧

11:26.580 --> 11:29.900
我来打印一下

11:29.900 --> 11:30.900
是吧

11:30.900 --> 11:31.900
山储

11:31.900 --> 11:32.900
all engine是什么

11:32.900 --> 11:33.900
是g对吧

11:33.900 --> 11:35.900
all engine这块是g

11:35.900 --> 11:36.900
g这个节点

11:36.900 --> 11:38.900
现在这块是空

11:38.900 --> 11:40.900
现在这块是空

11:40.900 --> 11:41.900
对了这块是空

11:41.900 --> 11:43.900
这是山储

11:43.900 --> 11:44.900
g这个节点

11:44.900 --> 11:46.900
我现在希望他给他

11:46.900 --> 11:48.900
贴到别的位置上

11:48.900 --> 11:51.900
贴到f的右边

11:51.900 --> 11:53.900
我这块算杀了个节点

11:53.900 --> 11:55.900
但是我这块加了一个节点

11:55.900 --> 11:56.900
对吧

11:56.900 --> 11:57.900
这块杀了一个

11:57.900 --> 11:58.900
这块加了一个

11:58.900 --> 11:59.900
对吧

11:59.900 --> 12:04.300
我给f的右边

12:04.300 --> 12:09.300
f2的right等于g2

12:09.300 --> 12:10.300
对吧

12:10.300 --> 12:12.300
我们现在希望的什么

12:12.300 --> 12:13.300
这块得有两条了吧

12:13.300 --> 12:15.300
一条是山储了g

12:15.300 --> 12:16.300
一条是新增了g

12:16.300 --> 12:17.300
对吧

12:17.300 --> 12:18.300
我们来运行一下

12:18.300 --> 12:21.060
是吧

12:21.060 --> 12:23.060
这会有个新增了一个g

12:23.060 --> 12:24.060
是吧

12:24.060 --> 12:26.060
再是g的节点

12:26.060 --> 12:28.060
曾经是空

12:28.060 --> 12:30.060
现在的g2这个节点

12:30.060 --> 12:32.060
过去是空

12:32.060 --> 12:33.060
这是新增

12:33.060 --> 12:34.060
这是山储

12:34.060 --> 12:36.060
我们再来个修改

12:36.060 --> 12:38.060
比如说修改了一个d

12:40.060 --> 12:44.060
第二内容我给他变了

12:44.060 --> 12:46.060
第二的内容

12:46.060 --> 12:49.060
我给他从d变成x

12:49.060 --> 12:50.060
不一样了对吧

12:50.060 --> 12:51.060
这个值就不一样了

12:51.060 --> 12:52.060
对吧

12:52.060 --> 12:53.060
那应该变成修改

12:53.060 --> 12:54.060
是吧

12:54.060 --> 12:56.060
再运行一下

12:56.060 --> 12:57.060
是吧

12:57.060 --> 12:58.060
新增一个g

12:58.060 --> 12:59.060
山储了一个g

12:59.060 --> 13:00.060
修改了一个d

13:00.060 --> 13:01.060
是吧

13:01.060 --> 13:02.060
过去的内容是d

13:02.060 --> 13:05.060
现在修改为x

13:05.060 --> 13:06.060
是吧

13:06.060 --> 13:08.060
过去为d

13:08.060 --> 13:11.060
现在为x

13:11.060 --> 13:12.060
是吧

13:12.060 --> 13:13.060
这就是修改

13:13.060 --> 13:14.060
好

13:14.060 --> 13:16.060
浪费大家一个问题

13:16.060 --> 13:18.060
我如果把b改成z

13:18.060 --> 13:21.060
我应该得到的是什么

13:21.060 --> 13:22.060
把b改成z

13:22.060 --> 13:24.060
我得到的是什么

13:24.060 --> 13:31.120
把b改成z得到的是什么

13:31.120 --> 13:33.120
新增g对吧

13:33.120 --> 13:35.120
修改g对吧

13:35.120 --> 13:37.120
山储g对吧

13:37.120 --> 13:43.030
修改变成d变成x

13:43.030 --> 13:45.030
但是我这会没学来是吧

13:45.030 --> 13:46.030
把b改成z是吧

13:46.030 --> 13:50.030
b2改成z

13:50.030 --> 13:52.030
b2改成z

13:52.030 --> 13:53.030
是吧

13:53.030 --> 13:56.030
变成修改b改成z

13:56.030 --> 13:57.030
b改成z

13:57.030 --> 14:00.030
但是这个时候有点问题

14:00.030 --> 14:02.030
有点什么问题

14:02.030 --> 14:04.030
有点什么问题

14:04.030 --> 14:06.030
这个节点的值变了

14:06.030 --> 14:08.030
它的左孩子的值什么也变了

14:08.030 --> 14:10.030
但是它的右孩子的值什么没变

14:10.030 --> 14:12.030
实际上我们只变了两个节点

14:12.030 --> 14:13.030
一个是d这个节点

14:13.030 --> 14:15.030
一个是b的这个节点

14:15.030 --> 14:16.030
这两个节点是变了的

14:16.030 --> 14:17.030
但是呢

14:17.030 --> 14:18.030
这个e这个节点

14:18.030 --> 14:19.030
我们并没有变

14:19.030 --> 14:20.030
但是呢

14:20.030 --> 14:22.030
我们又体现不出来了

14:22.030 --> 14:23.030
体现不出来

14:23.030 --> 14:24.030
这块相同了

14:24.030 --> 14:25.030
我们只说b变了

14:25.030 --> 14:27.030
没有说x变

14:27.030 --> 14:28.030
对吧

14:28.030 --> 14:30.030
有可能下面的这个e下面

14:30.030 --> 14:32.030
还有成百上下的节点都相同

14:32.030 --> 14:34.030
我们只改了两个节点

14:34.030 --> 14:35.030
它这块呢

14:35.030 --> 14:36.030
就忽略了一个

14:36.030 --> 14:38.030
这是什么原因呢

14:38.030 --> 14:41.030
修改了之后

14:41.030 --> 14:42.030
修改了之后

14:42.030 --> 14:44.030
其实还要继续走地步

14:44.030 --> 14:45.030
修改了之后

14:45.030 --> 14:47.030
也要继续走地步

14:47.030 --> 14:49.030
因为当前的节点变了

14:49.030 --> 14:51.030
当前的这个节点变了

14:51.030 --> 14:52.030
不代表我的

14:52.030 --> 14:54.030
所有的此节点都变了

14:54.030 --> 14:56.030
它跟新能和山竹不一样

14:56.030 --> 14:57.030
你过去没有

14:57.030 --> 14:58.030
我现在添一个节点

14:58.030 --> 14:59.030
我后门的东西肯定全是新的

14:59.030 --> 15:00.030
因为你过去

15:00.030 --> 15:01.030
这个分支都没有

15:01.030 --> 15:02.030
是吧

15:02.030 --> 15:03.030
山竹也是

15:03.030 --> 15:04.030
我这个节点都没有了

15:04.030 --> 15:05.030
我连子孙都没有

15:05.030 --> 15:06.030
是吧

15:06.030 --> 15:07.030
所以我后门的就都山竹了

15:07.030 --> 15:08.030
但是修改了不是

15:08.030 --> 15:10.030
修改可能只有我这个节点变了

15:10.030 --> 15:12.030
我的儿子孙子都没有变

15:12.030 --> 15:13.030
对吧

15:13.030 --> 15:14.030
所以修改的话

15:14.030 --> 15:16.030
后面也得继续下地步

15:16.030 --> 15:18.030
这是一个坑

15:18.030 --> 15:19.030
必须得记住

15:19.030 --> 15:21.030
当前的节点变了

15:21.030 --> 15:23.030
不代表我的所有的此节点变了

15:24.030 --> 15:25.030
这样的话

15:25.030 --> 15:26.030
实际上

15:26.030 --> 15:27.030
我们就有两个修改

15:27.030 --> 15:28.030
一个是B改成了Z

15:28.030 --> 15:29.030
一个是D改成了X

15:29.030 --> 15:30.030
是吧

15:30.030 --> 15:31.030
新增一个

15:31.030 --> 15:32.030
山竹一个修改

15:32.030 --> 15:33.030
一个修改一个

15:33.030 --> 15:34.030
是吧

15:34.030 --> 15:35.030
这样的话

15:35.030 --> 15:36.030
我们就可以做到

15:36.030 --> 15:37.030
二差数的比较

15:37.030 --> 15:38.030
以此类推

15:38.030 --> 15:39.030
我们可以做到

15:39.030 --> 15:40.030
数形结构的比较

15:40.030 --> 15:42.030
道目结构比较

15:42.030 --> 15:43.030
就比较简单

15:43.030 --> 15:45.030
这就是一个简单的

15:45.030 --> 15:47.030
一个地步算法

15:47.030 --> 15:48.030
也可以把它

15:48.030 --> 15:50.030
还原为一个道目结构的

15:50.030 --> 15:51.030
一个地步算法

15:52.030 --> 15:54.030
是一个经常比较容易考的

15:54.030 --> 15:55.030
大家可以回去试下

15:55.030 --> 15:57.030
用道目来做一下这个地步

15:57.030 --> 15:58.030
实际上就是

15:58.030 --> 16:00.030
把两个节点变成多个节点了而已

16:02.030 --> 16:03.030
好

16:03.030 --> 16:04.030
我们这段到就先到这里

