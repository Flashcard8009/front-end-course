WEBVTT

00:01.330 --> 00:06.330
哈喽 大家好 上一集咱们说了二叉树双旋的概念

00:06.330 --> 00:13.330
这一集我们来说一下二叉树如何用代码来实现双旋

00:13.330 --> 00:16.330
我先把上一次的代码给提交一下

00:16.330 --> 00:26.460
我先把上一次代码提交一下

00:26.460 --> 00:29.460
这回该多少集了

00:29.460 --> 00:32.460
44集是吧

00:32.460 --> 00:39.890
拉出一个新的分支44

00:39.890 --> 00:47.890
我们管它叫二叉树双旋的代码实现

00:47.890 --> 00:55.610
这是之前基于单旋的一个代码 是吧

00:55.610 --> 00:57.610
基于单旋的代码

00:57.610 --> 01:03.610
但是我们在进行单旋之前 现在要进行判断了

01:03.610 --> 01:09.610
要看它的变化分支

01:09.610 --> 01:13.610
二叉树双旋对于需要诱选的时候来说

01:13.610 --> 01:16.610
它的变化分支是什么

01:16.610 --> 01:20.940
变化分支是什么

01:20.940 --> 01:22.940
趁着吹是什么

01:22.940 --> 01:25.940
趁着吹是什么 该的地破

01:25.940 --> 01:30.940
Root的Life的Rat

01:30.940 --> 01:32.940
是吧

01:32.940 --> 01:38.940
二叉树双旋的代码

01:38.940 --> 01:41.940
等于该的地破

01:41.940 --> 01:45.940
Root的Life的Life

01:45.940 --> 01:46.940
是吧

01:46.940 --> 01:49.940
这是变化分支 这是非变化分支

01:49.940 --> 01:50.940
是吧

01:50.940 --> 01:53.940
我们看变化分支是不是比较深

01:53.940 --> 02:06.180
如果趁着吹的地破

02:06.180 --> 02:09.180
大于No趁着吹的地破 是吧

02:09.180 --> 02:12.180
代表的是变化分支比较深 怎么办

02:12.180 --> 02:16.180
我们要对左子树先进行左单旋 是吧

02:16.180 --> 02:24.790
Live的Rotate的Root的Live

02:24.790 --> 02:28.790
要对左子树进行左单旋

02:28.790 --> 02:31.790
需要左旋的

02:31.790 --> 02:33.790
Root一个Change Tree

02:33.790 --> 02:34.790
地破

02:34.790 --> 02:35.790
等于什么

02:35.790 --> 02:37.790
该的地破

02:37.790 --> 02:41.790
Root的Rat的Life

02:41.790 --> 02:42.790
是吧

02:42.790 --> 02:47.790
Root一个No趁着吹的地破

02:47.790 --> 02:49.790
等于该的地破

02:49.790 --> 02:54.790
Root的Rat的Rat

02:54.790 --> 02:57.790
然后叛断

02:57.790 --> 02:58.790
一样 是吧

02:58.790 --> 03:00.790
看变化分支是不是足够深

03:00.790 --> 03:02.790
如果变化分支的深度

03:02.790 --> 03:04.790
大于非变化分支的深度

03:04.790 --> 03:05.790
怎么样

03:05.790 --> 03:09.790
对右子树先进行右单旋

03:09.790 --> 03:10.790
Rat

03:11.790 --> 03:14.790
Rotate的Root的Rat

03:14.790 --> 03:21.920
要先对右子树进行右单旋

03:21.920 --> 03:26.230
然后我们再进行左单旋

03:26.230 --> 03:28.230
就是加一个这样的一个判断

03:28.230 --> 03:30.230
如果不加的时候

03:30.230 --> 03:33.230
肯定是有一些情况是不好使的 是吧

03:33.230 --> 03:35.230
这个时候我们来看一下这样的情况

03:35.230 --> 03:36.230
OK

03:36.230 --> 03:40.670
情况本身是什么来着

03:40.670 --> 03:43.670
87652 是吧

03:43.670 --> 03:45.670
来试一下

03:45.670 --> 03:54.850
8765

03:54.850 --> 03:58.850
8765

03:58.850 --> 03:59.850
是吧

03:59.850 --> 04:04.850
87652 是吧

04:04.850 --> 04:07.850
Root的Rat的Life

04:07.850 --> 04:09.850
等于Root的Rat

04:09.850 --> 04:11.850
Root的Rat的Life

04:11.850 --> 04:13.850
等于Root的Rat

04:13.850 --> 04:15.850
Root的Rat的Life

04:15.850 --> 04:18.850
等于Root的Rat

04:18.850 --> 04:20.850
Root的Rat的Life

04:20.850 --> 04:22.850
等于Root的Rat

04:22.850 --> 04:25.850
连成的一个串形的二叉树

04:25.850 --> 04:26.850
是吧

04:26.850 --> 04:28.850
8的左边是7

04:28.850 --> 04:29.850
7的左边是6

04:29.850 --> 04:30.850
6的左边是5

04:30.850 --> 04:31.850
5的左边是12

04:31.850 --> 04:32.850
是吧

04:32.850 --> 04:35.850
来先看一下运行的结果

04:35.850 --> 04:36.850
是吧

04:36.850 --> 04:43.620
Root的Rat

04:43.620 --> 04:49.960
是吧

04:49.960 --> 04:51.960
本身是False 是吧

04:51.960 --> 04:52.960
是不平衡的

04:52.960 --> 04:54.960
趁着了之后

04:54.960 --> 04:56.960
它现在变成平衡的 是吧

04:57.960 --> 04:59.960
7的左边是5

05:00.960 --> 05:02.960
7的右边是8

05:02.960 --> 05:03.960
是吧

05:04.960 --> 05:06.960
最后变成7的左边是5

05:06.960 --> 05:08.960
右边是8

05:08.960 --> 05:10.960
然后5的左边是2

05:10.960 --> 05:11.960
5的右边是6

05:11.960 --> 05:12.960
对吧

05:12.960 --> 05:13.960
5的左边是2

05:13.960 --> 05:14.960
5的右边是6

05:14.960 --> 05:15.960
是吧

05:15.960 --> 05:17.960
跟我们预期的结果是一样的

05:17.960 --> 05:19.960
这就是左右双旋

05:19.960 --> 05:20.960
和右左双旋的实现

05:20.960 --> 05:21.960
是吧

05:21.960 --> 05:22.960
理论上看得很复杂

05:22.960 --> 05:23.960
但是代码上实现起来

05:23.960 --> 05:24.960
就很简单 是吧

05:24.960 --> 05:25.960
但是研究的时候

05:25.960 --> 05:26.960
是比较复杂的

05:26.960 --> 05:28.960
实现的时候比较简单

05:28.960 --> 05:30.960
那我们现在来试一下

05:30.960 --> 05:32.960
我如果生成

05:32.960 --> 05:34.960
一万个节点

05:34.960 --> 05:36.960
我如果生成一万个节点

05:36.960 --> 05:39.960
看看它会不会

05:39.960 --> 05:41.960
会有什么的一个进展

05:41.960 --> 05:43.960
看看能不能平衡

05:43.960 --> 05:45.960
我们可以事先告辞了

05:45.960 --> 05:46.960
这是不会平衡的

05:46.960 --> 05:47.960
现在

05:47.960 --> 05:49.960
Full循环

05:50.960 --> 05:51.960
它嘛呢

05:51.960 --> 05:52.960
生成一万个节点

05:52.960 --> 05:53.960
It's Balance

05:53.960 --> 05:54.960
Life的Rotate

05:56.960 --> 05:57.960
Change

05:59.960 --> 06:00.960
稍等

06:00.960 --> 06:01.960
我先提交一下代码

06:01.960 --> 06:02.960
我沾一下

06:02.960 --> 06:04.960
构建二杀数的代码

06:04.960 --> 06:08.980
沾一下构建二杀数的代码

06:08.980 --> 06:17.050
我先推送

06:17.050 --> 06:18.050
推送成功了

06:18.050 --> 06:21.050
然后这块有个构建二杀搜索数

06:21.050 --> 06:22.050
Check out

06:25.190 --> 06:26.190
这块有个Build的色彩

06:26.190 --> 06:27.190
和AdeNode 是吧

06:27.190 --> 06:29.190
我把这两个弓缩过去

06:31.570 --> 06:32.570
一个44

06:39.300 --> 06:41.300
我是一个AdeNode

06:41.300 --> 06:42.300
Full循环

06:42.300 --> 06:44.300
Ware一个i等于0

06:44.300 --> 06:46.300
i小于一万

06:46.300 --> 06:48.300
加加

06:48.300 --> 06:50.300
我要创建一万个节点

06:50.300 --> 06:52.300
创建一万个节点

06:54.300 --> 06:55.300
创建个数组吧

06:55.300 --> 06:56.300
Ware一个

06:56.300 --> 06:58.300
AR

06:58.300 --> 07:02.120
然后AR

07:02.120 --> 07:03.120
i

07:03.120 --> 07:05.120
等于什么呢

07:05.120 --> 07:07.120
AR的Push吧

07:07.120 --> 07:16.000
Push是什么呢

07:16.000 --> 07:19.000
Mass.floor

07:19.000 --> 07:21.000
Mass.random

07:21.000 --> 07:23.000
成语

07:23.000 --> 07:24.000
一万

07:24.000 --> 07:26.000
我创建一万个随机数

07:26.000 --> 07:27.000
放到这个数组里

07:27.000 --> 07:29.000
然后用这个数组

07:29.000 --> 07:31.000
构建出来一个二杀数

07:31.000 --> 07:32.000
构建出来一个二杀数

07:32.000 --> 07:33.000
Ware一个root

07:33.000 --> 07:36.000
等于Build SearchTree

07:36.000 --> 07:38.000
构建出来一个二杀搜索数

07:38.000 --> 07:40.000
构建出来一个二杀搜索数

07:43.000 --> 07:44.000
然后呢

07:46.000 --> 07:49.000
我用这个二杀搜索数来进行搜索

07:49.000 --> 07:52.760
这个还得再提交一下

07:52.760 --> 08:02.980
还得再沾个代码

08:02.980 --> 08:04.980
把这个先推上去

08:04.980 --> 08:05.980
然后呢

08:05.980 --> 08:09.420
进行搜索

08:09.420 --> 08:10.420
来个四十百Tree

08:10.420 --> 08:11.420
好吧

08:11.420 --> 08:12.420
四十百Tree

08:12.420 --> 08:24.250
都是沾的过去代码

08:24.250 --> 08:26.250
这个是构建二杀数

08:26.250 --> 08:28.250
这个是AdeNode

08:28.250 --> 08:29.250
然后呢

08:29.250 --> 08:31.250
这个部分是Change

08:31.250 --> 08:33.250
这个部分是

08:33.250 --> 08:34.250
右旋

08:34.250 --> 08:35.250
这个部分是左旋

08:35.250 --> 08:37.250
这部分是判断是我平衡

08:37.250 --> 08:39.250
这是判断是否的深度相同

08:39.250 --> 08:47.900
稍等

08:47.900 --> 08:49.900
我把这个地方给它剪接掉

08:49.900 --> 08:50.900
给它放到最后

08:50.900 --> 08:52.900
大家之后看代码

08:52.900 --> 08:54.900
可以去最后面来找这块

08:54.900 --> 08:58.270
我有一万个节点

08:58.270 --> 08:59.270
然后呢

08:59.270 --> 09:01.270
我四十百Tree

09:01.270 --> 09:05.290
cancel了点LOG

09:05.290 --> 09:06.290
四十百Tree

09:06.290 --> 09:07.290
root

09:07.290 --> 09:10.290
比如说我找一千这个数

09:10.290 --> 09:12.290
一千这个数

09:12.290 --> 09:13.290
然后呢

09:13.290 --> 09:15.290
cancel了点LOG

09:15.290 --> 09:16.290
什么呢

09:23.160 --> 09:25.160
这是先找第一遍是吧

09:27.160 --> 09:28.160
处

09:28.160 --> 09:29.160
九次是吧存在

09:29.160 --> 09:30.160
九次

09:30.160 --> 09:32.160
处13

09:32.160 --> 09:34.160
处13

09:34.160 --> 09:35.160
然后呢

09:35.160 --> 09:36.160
咱们把这个二杀数呢

09:36.160 --> 09:38.160
进行一次操作是吧

09:38.160 --> 09:40.160
为一个NewRoot

09:40.160 --> 09:42.160
等于什么呢Change

09:42.160 --> 09:45.160
把root进行一下改变

09:45.160 --> 09:47.160
把root进行一下改变

09:47.160 --> 09:48.160
然后呢

09:48.160 --> 09:50.160
我们再用这个新的改变之后的数

09:50.160 --> 09:51.160
来进行搜索

09:51.160 --> 09:53.160
四十百Tree

09:53.160 --> 09:55.160
NewRoot

09:55.160 --> 10:03.140
一千

10:03.140 --> 10:06.650
我这个时候大麻儿清零一下

10:06.650 --> 10:08.650
大麻儿清零一下

10:08.650 --> 10:09.650
然后呢

10:09.650 --> 10:13.860
cancel了点LOG

10:13.860 --> 10:16.490
大麻儿

10:16.490 --> 10:18.860
看一下

10:18.860 --> 10:19.860
是吧

10:19.860 --> 10:21.860
十一次

10:21.860 --> 10:22.860
八次

10:22.860 --> 10:28.380
十六次

10:28.380 --> 10:33.160
三次

10:33.160 --> 10:34.160
等一下

10:34.160 --> 10:35.160
怎么内容

10:35.160 --> 10:48.780
这个值不一样的呢

10:48.780 --> 10:50.780
我看一下

10:50.780 --> 10:52.780
四数虽然减少了

10:52.780 --> 10:53.780
但是它这个

10:53.780 --> 10:55.780
二杀数长的不一样的

10:55.780 --> 10:57.780
是吧

10:57.780 --> 10:58.780
我看一下

10:58.780 --> 10:59.780
先不看这个

10:59.780 --> 11:01.780
先不看这个设施

11:01.780 --> 11:05.340
先不看这个设施

11:05.340 --> 11:07.340
我们先来看一下这个层数

11:07.340 --> 11:09.340
之前有多少层呢

11:09.340 --> 11:12.340
cancel了点LOG

11:12.340 --> 11:14.340
getDeep

11:14.340 --> 11:16.340
root

11:17.340 --> 11:18.340
然后呢

11:18.340 --> 11:20.340
我们再cancel了点LOG

11:20.340 --> 11:22.340
getDeep

11:22.340 --> 11:24.340
NewRoot

11:24.340 --> 11:26.340
看看它有多少层

11:26.340 --> 11:37.440
一层

11:37.440 --> 11:39.440
三十一十四

11:39.440 --> 11:42.440
二十九十二

11:42.440 --> 11:44.440
二十九五

11:44.440 --> 11:46.440
这个肯定是有点问题

11:46.440 --> 11:48.440
我看看这块哪有问题

11:48.440 --> 11:52.140
看看哪里

11:52.140 --> 11:59.930
出现了错误是吧

11:59.930 --> 12:05.930
对左跟进行左旋

12:05.930 --> 12:09.930
然后左跟等于左旋的结果

12:09.930 --> 12:10.930
然后呢

12:10.930 --> 12:13.930
我对右跟进行右旋

12:13.930 --> 12:15.930
需要左旋的时候

12:15.930 --> 12:18.930
我对右跟进行右旋

12:18.930 --> 12:20.930
等于右旋的结果

12:20.930 --> 12:21.930
我看一下

12:21.930 --> 12:23.930
如果不需要双旋这次行的话

12:23.930 --> 12:25.930
会不会有问题

12:25.930 --> 12:30.710
如果不需要双旋这次行的话

12:30.710 --> 12:33.710
我看看会变成什么样

12:33.710 --> 12:36.710
二十八

12:36.710 --> 12:39.710
三十一

12:39.710 --> 12:43.710
这个一厉害呀

12:43.710 --> 12:46.710
怎么会出现一个一呢

12:46.710 --> 12:55.040
看看啊

12:55.040 --> 13:01.620
这个一是哪来的

13:01.620 --> 13:02.620
这个神奇了

13:02.620 --> 13:03.620
这个一是哪来的

13:03.620 --> 13:09.080
我看一下

13:09.080 --> 13:12.080
也就是说单旋这块

13:12.080 --> 13:14.080
写的是有问题的

13:14.080 --> 13:15.080
对吧

13:15.080 --> 13:17.080
也就是单旋了之后

13:17.080 --> 13:23.460
我这一旋转了之后

13:23.460 --> 13:28.570
不平衡了

13:28.570 --> 13:29.570
该的地铺

13:29.570 --> 13:30.570
life的地铺

13:30.570 --> 13:32.570
right的地铺

13:32.570 --> 13:38.570
左边

13:38.570 --> 13:40.570
left的地铺

13:40.570 --> 13:41.570
right的地铺

13:41.570 --> 13:43.570
我最后是不是得转移

13:43.570 --> 13:47.740
对吧

13:47.740 --> 13:48.740
我左最后

13:48.740 --> 13:49.740
我如果要是

13:49.740 --> 13:51.740
不进行旋转的话

13:51.740 --> 13:53.740
我是不是得转移一个路程

13:53.740 --> 13:59.860
二十八

13:59.860 --> 14:00.860
二十九

14:00.860 --> 14:01.860
二十

14:01.860 --> 14:02.860
三十一

14:02.860 --> 14:03.860
十九

14:03.860 --> 14:04.860
二十八

14:04.860 --> 14:05.860
七

14:05.860 --> 14:06.860
二十九

14:06.860 --> 14:07.860
十八

14:07.860 --> 14:08.860
二十八一

14:08.860 --> 14:11.860
还会出现一层是吧

14:11.860 --> 14:14.860
还有哪块我得转移一个

14:14.860 --> 14:15.860
啊

14:15.860 --> 14:17.860
这个ABS这块真是啊

14:17.860 --> 14:18.860
对啊

14:18.860 --> 14:19.860
转移出去

14:19.860 --> 14:21.860
得转移一个这个路程

14:21.860 --> 14:26.290
啊

14:26.290 --> 14:28.290
三十二十三

14:28.290 --> 14:29.290
三十一

14:29.290 --> 14:30.290
二十一

14:30.290 --> 14:31.290
二十七

14:31.290 --> 14:32.290
二十一

14:32.290 --> 14:33.290
二十二

14:33.290 --> 14:34.290
二十九

14:34.290 --> 14:35.290
二十二

14:35.290 --> 14:36.290
二十九

14:36.290 --> 14:38.290
二十一

14:38.290 --> 14:40.290
三十二十三

14:40.290 --> 14:41.290
二十八

14:41.290 --> 14:42.290
二十一啊

14:42.290 --> 14:44.290
看看这回应该是差不多的是吧

14:44.290 --> 14:49.780
把这会解掉注释

14:49.780 --> 14:51.780
二十九十七

14:51.780 --> 14:52.780
二十八

14:52.780 --> 14:53.780
十八

14:53.780 --> 14:54.780
二十六

14:54.780 --> 14:55.780
十六

14:55.780 --> 14:56.780
四十

14:56.780 --> 14:57.780
十八

14:57.780 --> 14:58.780
三十一

14:58.780 --> 14:59.780
十八

14:59.780 --> 15:00.780
三十一

15:00.780 --> 15:01.780
十七

15:01.780 --> 15:02.780
是吧

15:02.780 --> 15:03.780
这回这个层数啊

15:04.780 --> 15:05.780
我这些返回那个处啊

15:05.780 --> 15:06.780
返回处的话

15:06.780 --> 15:07.780
还是挺二的

15:08.780 --> 15:09.780
这样的话呢

15:09.780 --> 15:10.780
我们就可以让它这个

15:10.780 --> 15:11.780
层数啊

15:11.780 --> 15:12.780
变得很少

15:12.780 --> 15:13.780
啊

15:13.780 --> 15:14.780
层数变得很少啊

15:14.780 --> 15:15.780
像刚才这个

15:15.780 --> 15:16.780
继续啊

15:16.780 --> 15:17.780
四十八

15:17.780 --> 15:18.780
吹

15:18.780 --> 15:19.780
找到这个路程

15:20.780 --> 15:21.780
四十八吹

15:24.090 --> 15:25.090
都是first

15:26.090 --> 15:27.090
都是first

15:27.090 --> 15:28.090
都是first

15:29.090 --> 15:30.090
都是first

15:31.090 --> 15:33.090
有没有可能都是初一下

15:35.090 --> 15:37.090
一直都是first吗

15:37.090 --> 15:41.640
啊

15:41.640 --> 15:42.640
我也没给数是吧

15:42.640 --> 15:50.690
都是初了

15:50.690 --> 15:51.690
都是first

15:52.690 --> 15:53.690
都是first

15:53.690 --> 15:54.690
都是初是吧

15:54.690 --> 15:55.690
现在他们一二啊

15:55.690 --> 15:56.690
然后呢

15:56.690 --> 15:58.690
我打印一下他们的次数啊

15:58.690 --> 16:00.690
他们的比较次数

16:00.690 --> 16:01.690
啊

16:01.690 --> 16:02.690
在这个

16:02.690 --> 16:03.690
这次必要之前呢

16:03.690 --> 16:05.690
我必须得让那么二等于零

16:05.690 --> 16:06.690
啊

16:06.690 --> 16:07.690
重新给他置为零

16:07.690 --> 16:08.690
啊

16:08.690 --> 16:09.690
不能让他进去哪家

16:09.690 --> 16:10.690
然后呢

16:10.690 --> 16:11.690
我再打印

16:11.690 --> 16:14.690
落了那么二

16:14.690 --> 16:17.580
啊

16:18.580 --> 16:19.580
first

16:19.580 --> 16:20.580
过去比较十五六次

16:20.580 --> 16:21.580
现在比较十五次

16:22.580 --> 16:24.580
初过去比较十五次

16:24.580 --> 16:26.580
现在比较十一次

16:26.580 --> 16:27.580
啊

16:27.580 --> 16:29.580
first过去比较十五次

16:29.580 --> 16:30.580
现在比较十三次

16:31.580 --> 16:32.580
初过去比较四次

16:32.580 --> 16:33.580
现在比较六次啊

16:33.580 --> 16:34.580
这也不行

16:34.580 --> 16:35.580
这是一种特殊情况

16:35.580 --> 16:36.580
是吧

16:36.580 --> 16:37.580
first过去比较十五次

16:37.580 --> 16:39.580
现在比较十四次

16:39.580 --> 16:40.580
啊

16:40.580 --> 16:41.580
然后呢

16:41.580 --> 16:42.580
初过去比较十四

16:42.580 --> 16:43.580
现在比较十二次

16:43.580 --> 16:44.580
啊

16:44.580 --> 16:45.580
应该是有可能是吧

16:45.580 --> 16:46.580
因为过去不平衡

16:46.580 --> 16:48.580
会有一个分支

16:48.580 --> 16:49.580
非常的短啊

16:49.580 --> 16:50.580
过去如果不平衡的话

16:50.580 --> 16:52.580
会有个分支非常的短啊

16:52.580 --> 16:53.580
然后呢

16:53.580 --> 16:54.580
初过去是二十七次

16:54.580 --> 16:55.580
现在是十六次

16:55.580 --> 16:56.580
啊

16:56.580 --> 16:58.580
初过去是十六次

16:58.580 --> 17:00.580
现在是十四次

17:00.580 --> 17:01.580
啊

17:01.580 --> 17:02.580
初过去是二十二次

17:02.580 --> 17:03.580
现在是十五次

17:03.580 --> 17:04.580
是吧

17:04.580 --> 17:06.580
但是平均下来

17:06.580 --> 17:07.580
是不是我们进行了

17:07.580 --> 17:08.580
这些操作的时候

17:08.580 --> 17:09.580
平均的

17:09.580 --> 17:11.580
查找次数

17:11.580 --> 17:13.580
会减少很多

17:13.580 --> 17:14.580
是吧

17:14.580 --> 17:15.580
有很多次都是

17:15.580 --> 17:16.580
过去是二十来次

17:16.580 --> 17:17.580
现在都只有十几次

17:17.580 --> 17:18.580
是吧

17:18.580 --> 17:19.580
少的是不少

17:19.580 --> 17:20.580
啊

17:20.580 --> 17:22.580
这能够减少很多的查找次数

17:22.580 --> 17:23.580
啊

17:23.580 --> 17:24.580
这个呢

17:24.580 --> 17:25.580
就是一个我们

17:25.580 --> 17:27.580
一个添加双旋之后的

17:27.580 --> 17:28.580
但是呢

17:28.580 --> 17:30.580
添加了双旋之后

17:30.580 --> 17:32.580
不代表我们就

17:32.580 --> 17:34.580
平衡了

17:34.580 --> 17:37.580
我把这个东西铸掉

17:37.580 --> 17:38.580
啊

17:38.580 --> 17:39.580
双旋之后呢

17:39.580 --> 17:41.580
我们看看是不是平衡了

17:41.580 --> 17:51.120
啊

17:51.120 --> 17:53.120
双旋之后是否就平衡了

17:53.120 --> 17:55.120
还是不平衡

17:55.120 --> 17:56.120
对吧

17:56.120 --> 17:58.120
还是不平衡

17:58.120 --> 17:59.120
为什么呢

17:59.120 --> 18:02.120
因为还有一些特殊情况

18:02.120 --> 18:03.120
我们没有考虑到

18:03.120 --> 18:05.120
还有一些特殊情况

18:05.120 --> 18:06.120
没有考虑到

18:06.120 --> 18:08.120
这就是我们下一个要说的

18:08.120 --> 18:11.120
左左双旋和右右双旋

18:11.120 --> 18:12.120
啊

18:12.120 --> 18:13.120
就是说我们现在进行的是

18:13.120 --> 18:15.120
左右双旋和右左双旋

18:15.120 --> 18:17.120
还有两种双旋

18:17.120 --> 18:18.120
我们没有考虑到

18:18.120 --> 18:19.120
这两种双旋的情况

18:19.120 --> 18:20.120
非常的特殊

18:20.120 --> 18:22.120
我们下一集来说

18:22.120 --> 18:24.120
左左双旋和右右双旋

