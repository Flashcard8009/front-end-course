WEBVTT

00:00.820 --> 00:02.820
Hello 大家好

00:02.820 --> 00:05.320
上一集我们说完了这个地负算法

00:05.320 --> 00:08.320
今天我们说一些图论相关的算法

00:08.320 --> 00:12.320
非常出名的一个就是最小生生树

00:12.320 --> 00:14.320
最小生生树什么意思呢

00:14.320 --> 00:15.820
他们有一个这样的前提

00:15.820 --> 00:17.320
我们有几个村庄

00:17.320 --> 00:19.820
ABCDE 这个村庄

00:19.820 --> 00:23.320
这个村庄之间现在没有任何村庄进行联通

00:23.320 --> 00:25.820
有同学说老师你画的这个线是啥意思

00:25.820 --> 00:26.820
这还有树

00:26.820 --> 00:27.820
不是联通的吗

00:27.820 --> 00:29.820
这个不是代表他们联通了

00:29.820 --> 00:34.820
这是如果要将A和B之间修一条路给他们联通

00:34.820 --> 00:36.820
需要花4万块钱

00:36.820 --> 00:40.820
如果在A和C之间修一条路花7万块钱

00:40.820 --> 00:43.820
如果在C和B之间修一条路需要花8万块钱

00:43.820 --> 00:46.820
如果在C和D之间修一条路花5万块钱

00:46.820 --> 00:48.820
如果在D和E之间修一条路花7万块钱

00:48.820 --> 00:52.820
如果在B和D之间修一条路花6万块钱

00:52.820 --> 00:55.820
这是如果要是修这条路要花多少钱

00:55.820 --> 00:56.820
大家现在问什么呢

00:56.820 --> 00:57.820
问

00:57.820 --> 00:59.820
我们希望

01:07.110 --> 01:15.110
希望将所有的村庄都联通

01:15.110 --> 01:20.110
但是需要花费的钱最少

01:22.110 --> 01:24.110
希望将所有的村庄都联通

01:24.110 --> 01:26.110
但是需要花费的钱最少

01:26.110 --> 01:28.110
有同学说为什么B不能联动E

01:28.110 --> 01:30.110
他有可能这块有个大湖

01:30.110 --> 01:31.110
有个非常大的水库

01:31.110 --> 01:33.110
或者一个湖泊

01:33.110 --> 01:35.110
你直接修路修不过去

01:35.110 --> 01:37.110
或者是修路的遭下太高了

01:37.110 --> 01:39.110
我们就默认就不能修了

01:39.110 --> 01:41.110
我们默认这块就不能修了

01:41.110 --> 01:43.110
或者这块有座大山

01:43.110 --> 01:44.110
你根本就修不过来

01:44.110 --> 01:46.110
我们默认就不能修了

01:47.110 --> 01:50.110
比如说这座大开如果修的话花100万

01:50.110 --> 01:51.110
那我不如就绕着

01:51.110 --> 01:53.110
所以这会我们可能压根儿就不行

01:54.110 --> 01:56.110
这样一种情况

01:56.110 --> 01:58.110
这是一个最小生成树的一个问题

02:00.110 --> 02:03.110
如果我们人类的思维去看的话

02:03.110 --> 02:05.110
你们可以挨根儿的用脑子去看

02:05.110 --> 02:06.110
你大概也能看起来

02:06.110 --> 02:08.110
用这条边不用这条边

02:08.110 --> 02:09.110
用这条边不用这条边

02:09.110 --> 02:11.110
然后最后能算

02:11.110 --> 02:13.110
算完之后你可能拿到一个结果

02:13.110 --> 02:14.110
但是你要提早

02:16.110 --> 02:18.110
我们感觉自己脑子也能算出来

02:18.110 --> 02:21.110
不用什么特殊的算法

02:21.110 --> 02:23.110
但是也有这种情况

02:24.110 --> 02:26.110
当我们这个顶点特别多的时候

02:27.110 --> 02:29.110
比如说怎么国家的建设

02:29.110 --> 02:31.110
我要有上千个村庄

02:31.110 --> 02:33.110
我要对上千的村庄里面

02:33.110 --> 02:34.110
给他们进行联通

02:34.110 --> 02:35.110
我们都要公路联通

02:35.110 --> 02:36.110
是吧

02:36.110 --> 02:37.110
要致富先修路

02:37.110 --> 02:40.110
要把所有的村庄都给他联通

02:40.110 --> 02:43.110
但是我又希望联通就好

02:43.110 --> 02:44.110
花的钱要少

02:44.110 --> 02:45.110
结约成本

02:45.110 --> 02:46.110
这样的话我们要算

02:46.110 --> 02:47.110
上千个节点

02:47.110 --> 02:50.110
我们就不是我们人力能够搞的定了

02:51.110 --> 02:52.110
对吧

02:52.110 --> 02:54.110
上千个节点我们人力就搞不定了

02:54.110 --> 02:56.110
这个时候我们就需要计算了

02:56.110 --> 02:58.110
这个时候我们就需要计算了

02:58.110 --> 03:00.110
在我们的网络里面有很多的时候

03:00.110 --> 03:03.110
需要用到最小生存数的计算

03:03.110 --> 03:04.110
比如说一动连头

03:04.110 --> 03:06.110
要给你们铺设网线

03:06.110 --> 03:08.110
我怎么样连

03:08.110 --> 03:10.110
能保证我要给他们连起来

03:10.110 --> 03:12.110
然后还要保证

03:12.110 --> 03:14.110
我用花费的材料最少

03:14.110 --> 03:15.110
钱数最少

03:15.110 --> 03:17.110
比如说国家电脑

03:17.110 --> 03:18.110
然后铺设电线过去

03:18.110 --> 03:20.110
我要怎么样连

03:20.110 --> 03:21.110
才能保证

03:21.110 --> 03:23.110
每个村庄都能有电

03:23.110 --> 03:25.110
然后我花费最少

03:25.110 --> 03:28.110
就是一个最小生存数的问题

03:28.110 --> 03:30.110
你说这个明明是一个图

03:30.110 --> 03:32.110
为什么叫生存数

03:32.110 --> 03:34.110
为什么叫生存数

03:35.110 --> 03:37.110
就是在学算法的时候

03:37.110 --> 03:38.110
你要知道它为什么

03:38.110 --> 03:39.110
为什么要这么搞

03:39.110 --> 03:40.110
想想

03:40.110 --> 03:42.110
数有什么特点

03:42.110 --> 03:44.110
数不需要形成环

03:44.110 --> 03:46.110
数的学生叫什么

03:46.110 --> 03:51.090
有向无环图是吧

03:51.090 --> 03:52.090
对吧

03:52.090 --> 03:53.090
是吧

03:53.090 --> 03:54.090
没有环

03:54.090 --> 03:55.090
没有环

03:55.090 --> 03:58.090
主要是我们需要的是一个无环图

03:58.090 --> 04:00.090
我们需要的是一个无环图

04:00.090 --> 04:03.090
你看看这个图

04:03.090 --> 04:05.090
我们如果节省代价的话

04:05.090 --> 04:07.090
我们有一些编书可以不用学

04:07.090 --> 04:09.090
比如说B C之间给删掉

04:09.090 --> 04:11.090
D C之间给删掉

04:11.090 --> 04:13.090
把这两条编给删掉

04:13.090 --> 04:14.090
是不是也能连通

04:14.090 --> 04:15.090
C可以通过A

04:15.090 --> 04:16.090
可以到B

04:16.090 --> 04:17.090
到D到E 是吧

04:17.090 --> 04:18.090
也是连通了

04:18.090 --> 04:19.090
绕远就是绕远

04:19.090 --> 04:20.090
我们要的是连通

04:20.090 --> 04:21.090
没说要

04:21.090 --> 04:23.090
每个村庄都尽可能最近

04:23.090 --> 04:24.090
对吧

04:24.090 --> 04:26.090
所以说它有可能绕一点

04:26.090 --> 04:27.090
但是我们就连通了

04:27.090 --> 04:29.090
所以说我们避免了什么

04:29.090 --> 04:30.090
避免形成环是吧

04:30.090 --> 04:32.090
比如说A B C它形成环了

04:32.090 --> 04:34.090
我把这条编一删

04:34.090 --> 04:36.090
A B C就暂时不会有环了

04:36.090 --> 04:38.090
但是会出现一个A B C D这样的环

04:38.090 --> 04:39.090
是吧

04:39.090 --> 04:40.090
A B C D这样的环

04:40.090 --> 04:42.090
我就再把C和D删掉

04:42.090 --> 04:43.090
或者是

04:43.090 --> 04:44.090
把两个给删掉了

04:44.090 --> 04:45.090
总之我要删两条编

04:45.090 --> 04:47.090
比如说我删B C和B D

04:47.090 --> 04:49.090
删B C和B D

04:49.090 --> 04:51.090
是不是也能形成

04:51.090 --> 04:52.090
也能连长

04:52.090 --> 04:53.090
是吧

04:53.090 --> 04:54.090
B A C D E

04:54.090 --> 04:56.090
也可以这样的进行连通

04:56.090 --> 04:57.090
是吧

04:57.090 --> 04:58.090
我怎么删

04:58.090 --> 05:00.090
能够保证我剩下的这个路

05:00.090 --> 05:01.090
我剩的

05:01.090 --> 05:03.090
我所耗费的空间最小

05:03.090 --> 05:05.090
耗费的资金最少

05:05.090 --> 05:07.090
这种问题

05:07.090 --> 05:10.090
就适用于我们的最小生存数问题

05:10.090 --> 05:11.090
最小生存数问题

05:11.090 --> 05:13.090
最小生存数有两种算法

05:13.090 --> 05:15.090
一种叫做普利姆算法

05:15.090 --> 05:18.090
一种叫做

05:18.090 --> 05:21.090
克鲁斯卡尔算法

05:21.090 --> 05:23.090
这两种算法都是标准的

05:23.090 --> 05:25.090
最小生存数算法

05:25.090 --> 05:27.090
我们可以通过这两种算法来

05:27.090 --> 05:28.090
解决这个问题

05:28.090 --> 05:29.090
普利姆算法

05:29.090 --> 05:30.090
外号

05:30.090 --> 05:31.090
它有个称呼叫做

05:31.090 --> 05:35.090
加点法

05:35.090 --> 05:36.090
克鲁斯卡尔算法

05:36.090 --> 05:37.090
也有一个称号

05:37.090 --> 05:40.090
它叫加编法

05:40.090 --> 05:42.090
加点法和加编法

05:42.090 --> 05:44.090
究竟是如何做的呢

05:44.090 --> 05:45.090
我们如何

05:45.090 --> 05:47.090
用普利姆算法和克鲁斯卡尔算法

05:47.090 --> 05:51.090
能唯一的求出一个最小的生存数

05:51.090 --> 05:53.090
我们下一集和下下集

05:53.090 --> 05:54.090
一次来讲

05:54.090 --> 05:56.090
普利姆算法和克鲁斯卡尔算法

