WEBVTT

00:00.750 --> 00:02.750
Hello 大家好

00:02.750 --> 00:06.750
上一集咱们说了一个最基本的代理

00:06.750 --> 00:10.750
但是我们也说了有一些特殊的情况

00:10.750 --> 00:13.750
比如说对象套对象 比如说数组

00:13.750 --> 00:15.750
这一集我们就来说其中的一种

00:15.750 --> 00:17.750
就是对象里面套对象

00:17.750 --> 00:19.750
比如说我再定一个

00:19.750 --> 00:21.750
定一个OB阶

00:21.750 --> 00:23.750
定一个OB阶

00:23.750 --> 00:26.750
OB阶我给它点属性

00:26.750 --> 00:28.750
A帽号1

00:28.750 --> 00:32.260
B帽号2

00:32.260 --> 00:34.260
ABXY

00:34.260 --> 00:37.260
AB之后可能还会有用

00:37.260 --> 00:41.570
X1

00:41.570 --> 00:43.570
Y12

00:43.570 --> 00:45.570
这是一个典型的data对象

00:45.570 --> 00:47.570
下面还有套这个对象

00:47.570 --> 00:50.570
如果按照我们上一集说的这种方式来代理

00:50.570 --> 00:52.570
按照我们上一集的方式来代理

00:52.570 --> 00:54.570
看一下

00:54.570 --> 00:57.570
比如说我要打印data.obg

00:57.570 --> 01:00.570
data.x 等于3

01:00.570 --> 01:02.570
它是没有变化的 是吧

01:02.570 --> 01:08.570
它不像Tyce.content等于monkey

01:08.570 --> 01:11.570
我是不是把什么东西给删了

01:11.570 --> 01:13.570
都不打印了

01:13.570 --> 01:17.840
这

01:17.840 --> 01:23.470
console.log

01:23.470 --> 01:31.110
我先打一行小等号吧 好吧

01:31.110 --> 01:33.110
我content

01:33.110 --> 01:35.110
Tyce.content我给它改为monkey

01:35.110 --> 01:37.110
它不但会把这个值改了

01:37.110 --> 01:38.110
还会打印一行等号

01:38.110 --> 01:40.110
执行了一个别的事情

01:40.110 --> 01:42.110
我们可以在代码的位置之后

01:42.110 --> 01:46.110
来让它改变页面上的渲染的内容

01:46.110 --> 01:49.110
但是我如果修改Tyce.obg.x

01:49.110 --> 01:51.110
让它等于3

01:51.110 --> 01:53.110
它就不会打印这行等号

01:53.110 --> 01:57.110
因为我们只对外面整个对象

01:57.110 --> 01:58.110
进行了代理

01:58.110 --> 02:01.110
没有对它其中的每一个属性

02:01.110 --> 02:02.110
多进行代理 是吧

02:02.110 --> 02:04.110
所以说我们还差了点东西

02:04.110 --> 02:06.110
这个东西差在哪呢

02:06.110 --> 02:07.110
其实很简单

02:07.110 --> 02:09.110
如果你们听我的算法课的话

02:09.110 --> 02:12.110
就比较简单了

02:12.110 --> 02:13.110
当然了

02:13.110 --> 02:14.110
咱们现在的算法课

02:14.110 --> 02:17.110
都是之前下午直播的 是吧

02:17.110 --> 02:22.110
当你们能看到今天的视频的时候

02:22.110 --> 02:25.110
基本上我就已经在开始的

02:25.110 --> 02:27.110
给大家来录制算法的录播了

02:27.110 --> 02:29.110
所以说你们在不久的将来

02:29.110 --> 02:31.110
就能看到算法的录播了

02:31.110 --> 02:33.110
好了

02:33.110 --> 02:34.110
话说回来

02:34.110 --> 02:37.110
我们这个东西到底该如何进行代理

02:37.110 --> 02:41.110
才能让它能够把它的子对象

02:41.110 --> 02:43.110
也进行代理上 是吧

02:43.110 --> 02:44.110
我们希望的是

02:44.110 --> 02:46.110
不只代理外面的这个对象

02:46.110 --> 02:48.110
下面这一层也代理上

02:48.110 --> 02:49.110
看好了

02:49.110 --> 02:51.110
我们在这会是代理这个属性

02:51.110 --> 02:53.110
我们在这会是代理这个属性

02:53.110 --> 02:56.110
如果这个属性它是个对象

02:56.110 --> 02:57.110
是吧

02:57.110 --> 02:59.110
就说如果这个属性

02:59.110 --> 03:03.110
是OBG的PROP

03:03.110 --> 03:07.740
这个东西是个对象的时候

03:07.740 --> 03:09.740
如果这个东西是个对象的时候

03:09.740 --> 03:11.740
我们要怎么办

03:11.740 --> 03:13.740
要再继续进行代理

03:13.740 --> 03:15.740
要再继续进行代理

03:15.740 --> 03:18.740
PROXOBG第二个

03:18.740 --> 03:22.060
PROP

03:22.060 --> 03:23.060
掉谁啊

03:23.060 --> 03:25.060
记住啊 掉外面

03:25.060 --> 03:28.060
因为你现在不确定

03:28.060 --> 03:30.060
这个东西是一个对象

03:30.060 --> 03:31.060
还是一个数字

03:31.060 --> 03:33.060
你现在不确定这个东西是个对象

03:33.060 --> 03:34.060
还是数字

03:34.060 --> 03:35.060
你就掉外面

03:35.060 --> 03:37.060
外面这个会去判断它

03:37.060 --> 03:39.060
是不是对象还是数字

03:39.060 --> 03:41.060
把VM传进去

03:41.060 --> 03:47.060
OBG的PROP传进去

03:47.060 --> 03:49.060
这个时候这个Names被子

03:49.060 --> 03:51.060
它就要起作用了

03:51.060 --> 03:52.060
这个时候这个Names被子

03:52.060 --> 03:53.060
就要起作用了

03:53.060 --> 03:55.060
我们刚才这个

03:55.060 --> 03:57.060
刚才这个content的

03:57.060 --> 03:58.060
我直接就叫它content就行

03:58.060 --> 03:59.060
是吧

03:59.060 --> 04:01.060
因为它直接就挂在我们这个

04:01.060 --> 04:02.060
地右翼的

04:02.060 --> 04:04.060
或者是V右翼这个对象的下面

04:04.060 --> 04:05.060
是吧

04:05.060 --> 04:07.060
它直接就挂在对象的下面

04:07.060 --> 04:09.060
但是如果再下一层

04:09.060 --> 04:10.060
这个X

04:10.060 --> 04:12.060
它能直接挂在外面的下面吗

04:12.060 --> 04:13.060
不能是吧

04:13.060 --> 04:15.060
它是OBG下面的

04:15.060 --> 04:16.060
是吧

04:16.060 --> 04:17.060
所以呢

04:17.060 --> 04:18.060
它呀

04:18.060 --> 04:20.060
在往下传的时候

04:20.060 --> 04:22.060
它就有了它的命名空间

04:22.060 --> 04:24.060
它就有了它的命名空间

04:24.060 --> 04:26.060
它的命名空间是什么呢

04:26.060 --> 04:28.060
是上一集给你传进来的命名空间

04:28.060 --> 04:31.060
命名空间加上当前这一集的属性名

04:31.060 --> 04:34.060
你看我们最开始来传进来的时候

04:34.060 --> 04:35.060
这个命名空间是空

04:35.060 --> 04:36.060
是吧

04:36.060 --> 04:37.060
因为它没有上一集

04:37.060 --> 04:39.060
它就在跟目录下

04:39.060 --> 04:41.060
但是在这里不一样的是吧

04:41.060 --> 04:42.060
在这里

04:42.060 --> 04:44.060
我要想再往下掉

04:44.060 --> 04:46.060
是基于当前的这个名

04:46.060 --> 04:47.060
去往下掉

04:47.060 --> 04:48.060
基于当前的名是谁

04:48.060 --> 04:49.060
OBG是吧

04:49.060 --> 04:50.060
是吧

04:50.060 --> 04:51.060
当前的名是OBG

04:51.060 --> 04:53.060
所以说我们是基于OBG

04:53.060 --> 04:54.060
再去往下掉

04:54.060 --> 04:55.060
这样的话

04:55.060 --> 04:57.060
我们就需要来修改

04:57.060 --> 04:58.060
它的命名空间

04:58.060 --> 05:00.060
我们来写一个方法

05:02.060 --> 05:04.060
Gate Name Space

05:04.060 --> 05:08.060
我们来传一下当前的这个Name Space

05:08.060 --> 05:11.060
然后再传一下当前的这个属性

05:11.060 --> 05:13.060
传一下当前的Name Space

05:13.060 --> 05:15.060
传一下当前的属性

05:15.060 --> 05:16.060
如果

05:19.060 --> 05:22.060
如果当前的Name Space

05:22.060 --> 05:24.060
等于空的时候

05:24.060 --> 05:26.060
那就Return

05:26.060 --> 05:29.060
直接Return当前的属性就行了

05:29.060 --> 05:30.060
如果

05:31.060 --> 05:33.060
当前的属性为空的时候

05:33.060 --> 05:37.520
别只为空了

05:37.520 --> 05:38.520
或上一个吧

05:38.520 --> 05:40.520
Name Space

05:40.520 --> 05:42.520
等于空串

05:43.520 --> 05:46.520
或者是Name Prop

05:46.520 --> 05:48.520
等于空串

05:48.520 --> 05:51.520
我们就直接Return当前的这个Name Space

05:51.520 --> 05:53.520
否则的话

05:53.520 --> 05:59.620
这是一个Alts意思的关系

06:01.620 --> 06:04.620
ELSE

06:04.620 --> 06:06.620
Alts

06:06.620 --> 06:07.620
Alts怎么样

06:07.620 --> 06:09.620
我们要进行拼起来

06:09.620 --> 06:11.620
就像这个X

06:11.620 --> 06:12.620
它的全名是什么

06:12.620 --> 06:14.620
是OBG.X

06:14.620 --> 06:15.620
是吧

06:15.620 --> 06:18.620
这个X的全名就得是OBG.X

06:18.620 --> 06:21.620
所以它的Name Space是什么呢

06:21.620 --> 06:25.190
是

06:25.190 --> 06:28.190
No Name Space

06:28.190 --> 06:31.190
加上点

06:32.190 --> 06:35.190
No Prop

06:35.190 --> 06:37.190
像我们在这要是往下掉

06:37.190 --> 06:39.190
像我们在这会直接往下掉

06:39.190 --> 06:40.190
第一层的时候

06:40.190 --> 06:42.190
这个Name Space是啥

06:42.190 --> 06:45.190
因为它刚才的No Name Space为空

06:45.190 --> 06:47.190
所以No Prop

06:47.190 --> 06:48.190
是啥

06:48.190 --> 06:50.190
是OBG

06:50.190 --> 06:51.190
是OBG

06:51.190 --> 06:53.190
所以我们传入两个是吧

06:53.190 --> 06:57.190
一个是Name Space

06:57.190 --> 06:59.190
另一个是Prop

07:02.080 --> 07:05.080
这个用来作为我们的命名空间

07:05.080 --> 07:08.080
用来作为我们的命名空间

07:08.080 --> 07:09.080
这样的话

07:09.080 --> 07:11.080
我们来看一下

07:11.080 --> 07:13.080
应该就OK了

07:13.080 --> 07:15.080
我在修改Test的点Counting的

07:15.080 --> 07:18.080
我把它改成Monkey

07:18.080 --> 07:20.080
这是不会变的

07:20.080 --> 07:22.080
不会因为这个来出错

07:22.080 --> 07:24.080
当我修改OBG.X

07:24.080 --> 07:26.080
等于6的时候

07:26.080 --> 07:29.080
它也会出现一行的

07:29.080 --> 07:30.080
这样的话

07:30.080 --> 07:32.080
我就能够知道

07:32.080 --> 07:34.080
它什么时候修改了

07:34.080 --> 07:36.080
它下面这个属性

07:36.080 --> 07:38.080
比如说我打印的时候

07:38.080 --> 07:39.080
别再修改

07:39.080 --> 07:41.080
别再打印这个等号了

07:41.080 --> 07:44.650
我打印Name Space

07:44.650 --> 07:46.650
打印什么呢

07:46.650 --> 07:48.650
打印Date Name Space

07:48.650 --> 07:53.790
是传进去一个Name Space

07:53.790 --> 07:55.790
加上当前的Prop

07:55.790 --> 08:00.320
不再打印等号了

08:00.320 --> 08:02.320
这个就相当于是打印一下

08:02.320 --> 08:04.320
我修改的是哪个属性

08:04.320 --> 08:07.320
我如果修改的是

08:07.320 --> 08:09.320
Test的点Counting的

08:09.320 --> 08:12.320
等于Monkey

08:12.320 --> 08:13.320
它说我修改的是

08:13.320 --> 08:14.320
修改的是Counting的

08:14.320 --> 08:15.320
是吧

08:15.320 --> 08:18.320
我如果修改的是OBG.X

08:18.320 --> 08:20.320
让它等于6

08:20.320 --> 08:21.320
这块它说我修改的是吗

08:21.320 --> 08:22.320
是OBG.X

08:22.320 --> 08:23.320
是吧

08:23.320 --> 08:25.320
这就是命名空间

08:25.320 --> 08:27.320
来表示着我当前修改的

08:27.320 --> 08:30.320
这个东西是个啥

08:30.320 --> 08:32.320
这就是我们这一节主要来说的内容

08:32.320 --> 08:34.320
我们的代理

08:34.320 --> 08:35.320
要层层代理

08:35.320 --> 08:37.320
不能只代理跟路径下

08:37.320 --> 08:38.320
要不然的话

08:38.320 --> 08:40.320
你修改它的子属性

08:40.320 --> 08:42.320
你这个东西就补货不到了

08:42.320 --> 08:43.320
所以它其实也是个

08:43.320 --> 08:44.320
地规的方式

08:44.320 --> 08:46.320
地规到它的附几去

08:46.320 --> 08:49.320
地规到它的附几去

08:49.320 --> 08:51.320
这就是一个

08:51.320 --> 08:53.320
来代理对象

08:53.320 --> 08:55.320
套对象的这种情况

08:55.320 --> 08:58.320
下级我们来说代理数组

08:58.320 --> 09:00.320
下级我们来说代理数组

09:00.320 --> 09:02.320
代理数组还是比较复杂的

09:02.320 --> 09:04.320
咱们下一集单级来说

