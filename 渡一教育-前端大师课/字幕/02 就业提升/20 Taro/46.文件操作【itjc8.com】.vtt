WEBVTT

00:00.000 --> 00:02.400
好 我们今天给大家讲解Tarot课程

00:02.400 --> 00:08.000
这些课呢 给大家讲解一下文件的API的一些综合操作

00:08.000 --> 00:13.400
那么文件API呢 在Tarot中有几个 我们先介绍一下

00:13.400 --> 00:19.400
第一个Tarot有一个get5info

00:19.400 --> 00:26.200
它可以得到现在的所有的Tarot的一些文件的信息

00:26.200 --> 00:27.800
Tarot接口的信息

00:27.800 --> 00:35.600
第二个 有一个我们的get saved5info

00:35.600 --> 00:42.800
我们可以得到Tarot经过文件保存以后的缓存的文件的信息

00:42.800 --> 00:48.300
第三个 我们有save saved5lister

00:48.300 --> 00:51.700
我们已经保存的文件的列表

00:51.700 --> 00:55.200
还有呢 就是我们的打开文件

00:55.300 --> 00:59.070
就是我们的open document

00:59.070 --> 01:03.170
以及Tarot的save file

01:03.170 --> 01:06.070
好 这几个都是我们平时能够见到

01:06.070 --> 01:09.570
也可以通用的使用的一些标签

01:09.570 --> 01:11.170
那么额外注意一下

01:11.170 --> 01:21.270
这些标签在Tarot中只支持微信小程序

01:21.270 --> 01:33.300
我们的h5的有就是get5info

01:33.300 --> 01:35.900
这个是只支持微信小程序的

01:35.900 --> 01:42.440
在h5和rn中它是不可用的

01:42.440 --> 01:44.340
这点咱们知道一下

01:44.340 --> 01:48.940
好了 那么我们现在就给大家来做一个综合的演示

01:48.940 --> 01:53.540
我们把几个功能都给大家存储一下 使用一下

01:53.540 --> 01:57.140
首先呢 我们创建我们的页面在pages里面

01:57.140 --> 02:01.840
我们称之为fi文件

02:01.840 --> 02:06.040
然后创建一个fi出来

02:06.040 --> 02:07.640
jxx

02:07.640 --> 02:16.260
同时我们创建它的一个fi的css

02:16.260 --> 02:21.360
然后 我们在fi.js里面做引用

02:21.360 --> 02:33.950
import tarot component from tarot tarot

02:33.950 --> 02:43.960
然后view from tarot component

02:43.960 --> 02:49.360
倒入fi.css

02:49.360 --> 02:56.790
然后expert expert default

02:56.790 --> 03:04.220
然后是class class

03:04.220 --> 03:12.920
然后fi extends component

03:12.920 --> 03:23.020
constructor super

03:23.020 --> 03:31.960
preface preface state

03:31.960 --> 03:40.020
给空configure文件操作

03:40.020 --> 03:43.730
去到jxx里面

03:43.730 --> 03:48.980
我们把下面的这句拿过来

03:48.980 --> 03:53.780
写上文件操作

03:53.780 --> 03:55.580
紧接着我们再来

03:55.580 --> 03:58.380
那么它可以文件操作了

03:58.380 --> 04:11.820
那么randle

04:11.820 --> 04:17.180
randle文件操作

04:17.180 --> 04:19.280
然后如果它需要样式的话

04:19.280 --> 04:22.280
我们再给它一个样式

04:22.280 --> 04:26.180
不是样式 就是那个生命周期

04:26.180 --> 04:31.270
component did a show

04:31.270 --> 04:35.630
往下放放在stator后面

04:35.630 --> 04:41.130
好 基本上一个完整的一个格式就出来了

04:41.130 --> 04:46.130
然后我们紧接着开始做页面的简单布局

04:46.130 --> 04:50.230
我们把每一个功能做成一个小的section

04:50.230 --> 04:53.130
然后大家看起来都会很简单

04:53.130 --> 04:56.630
我们首先我们在这边写上classnet

04:56.630 --> 05:02.170
我们带上我们的container

05:02.170 --> 05:08.000
然后里面每一个我们都带上view

05:08.000 --> 05:11.100
然后里面是我的classnet

05:11.100 --> 05:14.200
咱们把每一个都定为一个pater section

05:14.200 --> 05:16.500
一个区域

05:16.500 --> 05:18.100
每个都定个区域

05:18.100 --> 05:20.300
那每个区域里面的都有一个名词

05:20.300 --> 05:23.500
咱们可以空建名

05:23.500 --> 05:31.940
然后classnet咱们给的是country title

05:31.940 --> 05:33.840
保存文件

05:33.840 --> 05:35.440
我们写的是

05:35.540 --> 05:42.040
紧接着下面我们用一个按钮表述一下

05:42.040 --> 05:43.240
我们写个按钮出来

05:43.240 --> 05:51.330
按钮当然需要在上面进行注册

05:51.330 --> 05:53.330
紧接着我们在这边

05:53.330 --> 05:54.730
我们把按钮中写一下

05:54.730 --> 05:58.530
这个叫做保存文件

05:58.530 --> 06:02.030
OK 那么我们这边肯定有一个事件

06:02.030 --> 06:03.530
unclick

06:03.530 --> 06:12.290
然后事件我们称之为this.save by

06:12.290 --> 06:22.840
this.save by

06:22.840 --> 06:24.940
保存文件

06:24.940 --> 06:33.890
OK 我们把几个样式简单的定制一下

06:33.890 --> 06:37.910
container

06:37.910 --> 06:41.070
100%

06:41.070 --> 06:43.270
background

06:43.270 --> 06:45.470
grame

06:45.470 --> 06:47.070
pater

06:47.070 --> 06:49.680
section

06:49.680 --> 06:51.680
宽度

06:51.680 --> 06:54.800
100%

06:54.800 --> 06:56.200
border

06:56.200 --> 06:58.720
ridius

06:58.720 --> 07:00.720
10个rpx

07:00.720 --> 07:04.020
然后padding

07:04.020 --> 07:06.620
我们做的是10个rpx

07:06.620 --> 07:08.020
然后0

07:08.020 --> 07:09.420
然后merge

07:09.420 --> 07:11.720
我们也做的是10个rpx

07:11.720 --> 07:13.320
0

07:13.320 --> 07:17.520
然后给它一个背景色

07:17.520 --> 07:20.620
白色纸

07:20.620 --> 07:22.120
pater section

07:22.120 --> 07:24.620
里面的按钮

07:24.620 --> 07:26.120
我们所有的按钮的话呢

07:26.120 --> 07:29.020
我们都是让它旁边离开一点元素

07:29.020 --> 07:33.080
我们去做成的是

07:33.080 --> 07:34.780
merge 10px

07:34.780 --> 07:38.080
然后再有一个是country

07:38.080 --> 07:41.480
控制器的title

07:41.480 --> 07:44.380
字体

07:44.380 --> 07:48.090
加粗一点

07:48.090 --> 07:54.230
然后给它一个vw

07:54.230 --> 07:55.230
好了

07:55.230 --> 07:56.730
把现在这个files

07:56.730 --> 08:03.390
我们把它放到jaxx的第一句话来

08:03.390 --> 08:05.090
paters

08:05.090 --> 08:06.790
fi

08:06.790 --> 08:22.460
然后后边的是fi

08:22.460 --> 08:32.740
然后可以看一下界面

08:32.740 --> 08:34.740
还没好

08:34.740 --> 08:38.350
它的这边的生成

08:38.350 --> 08:39.150
那个慢

08:39.150 --> 08:40.150
那边的话呢

08:40.150 --> 08:40.850
编译速度

08:40.850 --> 08:48.160
我们也得慢一点

08:48.160 --> 08:49.960
如果你发觉这边没有出来的话

08:50.360 --> 08:53.360
那么你可以去进行所谓的重新加载

08:53.360 --> 08:54.760
这个年

08:54.760 --> 08:56.560
我们看到出来了

08:56.560 --> 08:58.860
我们这边有一个保存文件

08:58.860 --> 08:59.360
对吧

08:59.360 --> 09:01.260
有这样的一个效果

09:01.260 --> 09:02.260
然后呢

09:02.260 --> 09:03.360
我们有一个pater

09:03.360 --> 09:05.960
我们把pater再设定一下

09:05.960 --> 09:08.260
不然的话太

09:08.260 --> 09:11.370
太小我们说

09:11.370 --> 09:12.570
我们在这上面

09:12.570 --> 09:16.350
pater设定一下

09:16.350 --> 09:21.260
pater

09:21.260 --> 09:22.260
高度

09:22.260 --> 09:23.960
100%

09:23.960 --> 09:25.260
container里面呢

09:25.260 --> 09:28.460
我们其实把这个也可以设一下

09:28.460 --> 09:29.660
display

09:29.660 --> 09:31.960
flex

09:31.960 --> 09:33.560
flex direction

09:33.560 --> 09:35.160
row

09:35.160 --> 09:38.630
column

09:38.630 --> 09:40.930
设成column

09:40.930 --> 09:43.030
align item

09:43.030 --> 09:45.130
center

09:45.130 --> 09:47.230
just a contenter

09:47.230 --> 09:50.270
flex start

09:50.270 --> 09:51.770
pattern

09:51.770 --> 09:53.870
40rpx

09:53.870 --> 09:55.870
0

09:55.870 --> 09:58.270
box styling

09:58.270 --> 10:01.620
box

10:01.620 --> 10:06.000
看一下页面

10:06.000 --> 10:07.700
就形成这个效果

10:07.700 --> 10:10.600
待会不断的我们往里写就可以了

10:10.600 --> 10:11.400
按钮的话呢

10:11.400 --> 10:14.100
我们再给他做成的是

10:14.100 --> 10:18.590
taply primary

10:18.590 --> 10:22.790
是一个绿色起步

10:22.790 --> 10:24.490
OK了

10:24.490 --> 10:25.190
现在的话呢

10:25.190 --> 10:26.590
我们就可以继续开认里面

10:26.590 --> 10:28.890
首先做保存文件

10:28.890 --> 10:30.090
那么保存文件呢

10:30.090 --> 10:31.390
我们主要做的是

10:31.390 --> 10:33.790
我们把当前有一个文件

10:33.790 --> 10:37.090
我们把它直接作为一种存储结构来属写

10:37.190 --> 10:42.620
save file

10:42.620 --> 10:44.120
我们去选择一个图片

10:44.120 --> 10:45.720
我们说

10:45.720 --> 10:46.920
当前的一个文件

10:46.920 --> 10:48.620
我们

10:48.620 --> 10:52.220
选择一个图片

10:52.220 --> 10:54.320
然后

10:54.320 --> 10:57.920
并保存到

10:57.920 --> 11:02.060
本地

11:02.060 --> 11:06.570
terror.choice

11:06.570 --> 11:10.940
imager

11:10.940 --> 11:17.550
success

11:17.550 --> 11:19.350
conster

11:19.350 --> 11:20.450
temper

11:20.450 --> 11:21.950
fi

11:21.950 --> 11:22.350
pass

11:22.350 --> 11:25.250
我们可以给一个简单的自付串

11:25.250 --> 11:27.950
然后它是可以通过res.temperfipass

11:27.950 --> 11:29.650
我们之前学过

11:29.650 --> 11:31.950
temperfipass得到这个值的

11:31.950 --> 11:33.650
得到以后我们先看一下

11:33.650 --> 11:35.850
这个值它究竟是一个什么样的

11:35.850 --> 11:37.450
如果你以前记得同学的话

11:37.450 --> 11:45.100
那你应该脑中有个反馈的

11:45.100 --> 11:46.300
点击一下以后的话

11:46.300 --> 11:47.800
它会打开这样的一个

11:47.800 --> 11:50.000
我们进到图片文件家里面

11:50.000 --> 11:51.300
随便选一张图片

11:51.300 --> 11:54.300
那么它会反会给我的是这样一个注意

11:54.300 --> 11:56.800
它是一个带http开头的tmp

11:56.800 --> 11:59.000
作为其实png

11:59.000 --> 12:00.900
或者说你当前图片的扩展名

12:00.900 --> 12:02.600
作为最后截止的

12:02.600 --> 12:04.600
这样一个临时文件的路径

12:04.600 --> 12:05.300
是吧

12:05.300 --> 12:06.500
这个结构

12:06.500 --> 12:07.900
那么一旦这个结构有了

12:07.900 --> 12:08.700
我们现在做法

12:08.700 --> 12:11.000
就是我们把它存储到本地

12:11.000 --> 12:16.370
存储方式就是利用我们刚才所学到的

12:16.370 --> 12:19.470
用terror.safety

12:19.470 --> 12:21.770
用这个结构来存储

12:21.770 --> 12:22.770
safety里面

12:22.770 --> 12:24.070
首先它需要你

12:24.070 --> 12:27.170
的就是一个临时图片的路径

12:27.170 --> 12:29.170
temperfipass

12:29.170 --> 12:30.170
帽号

12:30.170 --> 12:33.270
跟上你就是你现在这个路径之人

12:33.270 --> 12:34.270
注意

12:34.270 --> 12:35.970
这样写很多同学会这样写

12:35.970 --> 12:38.370
写完以后的话就会报错

12:38.370 --> 12:39.270
原因很简单

12:39.270 --> 12:40.570
咱们仔细看

12:40.570 --> 12:42.770
它反会给你的是一个中扩号

12:42.770 --> 12:43.970
也就意味着

12:43.970 --> 12:45.570
这个是一个宿主

12:45.570 --> 12:47.670
所以你必须在这里

12:47.670 --> 12:49.870
以一个0的方式

12:49.870 --> 12:53.850
获取到这条数据

12:53.850 --> 12:57.160
请接着

12:57.160 --> 12:58.660
我们从这里来

12:58.660 --> 13:00.460
再得到这个值

13:00.460 --> 13:01.260
success

13:01.260 --> 13:03.160
res

13:03.160 --> 13:04.560
当你获取成功以后

13:04.560 --> 13:06.260
我们保存成功以后

13:06.260 --> 13:08.860
它就会返回你一个res过来

13:08.860 --> 13:10.460
我们来看一下

13:10.460 --> 13:13.760
我们把这个res打出来

13:13.760 --> 13:17.470
我们把前面这个先关掉了

13:17.470 --> 13:19.670
这个res一旦打出来的话

13:19.670 --> 13:29.830
它应该就是你本地所存储的图片路径

13:29.830 --> 13:31.530
本地所存储的图片路径

13:31.530 --> 13:32.630
那么这样的话呢

13:32.630 --> 13:36.960
我们再来看一下

13:36.960 --> 13:38.760
点击

13:38.760 --> 13:39.260
对吧

13:39.260 --> 13:40.560
选小飞机

13:40.560 --> 13:42.060
咱们有没有看到

13:42.060 --> 13:46.860
它会给一个save saved five parts

13:46.860 --> 13:48.260
这是存储在你本地

13:48.260 --> 13:51.460
也就是你现在手机端的一个路径

13:51.460 --> 13:53.960
它是在你的微信里面

13:53.960 --> 13:56.660
那么我们现在就可以拿出这个值来

13:56.660 --> 14:02.660
它叫save five parts

14:02.660 --> 14:12.700
我们把它存储下来

14:12.700 --> 14:16.000
save five parts

14:16.000 --> 14:17.900
那么注意一下

14:17.900 --> 14:21.000
那么图片最后它的存储在哪里呢

14:21.000 --> 14:22.200
那么我们来看一下

14:22.200 --> 14:25.800
我们在你的系统中有一个位置

14:25.800 --> 14:29.100
这个图片我们去打开看一下

14:29.100 --> 14:31.800
我们打开你的现在的目录

14:31.800 --> 14:36.600
在c盘的users用户

14:36.600 --> 14:40.800
用户里面找到现在所使用的帐户

14:40.800 --> 14:45.240
然后找到里面有一个叫app

14:45.240 --> 14:47.440
我们找一下appdata

14:47.440 --> 14:49.340
在这个里面

14:49.340 --> 14:50.840
我们再往里找

14:50.840 --> 14:52.140
表示本地

14:52.140 --> 14:53.440
本地里面呢

14:53.440 --> 14:55.540
这边往下我们看

14:55.540 --> 14:58.840
这边往下有个微信web开发者工具

14:58.840 --> 15:01.440
这边有个user data

15:01.440 --> 15:04.960
它其实是存在这里的

15:04.960 --> 15:10.800
在这个里面有刚才的那张图片

15:10.800 --> 15:15.300
具体的话我们得去local status

15:15.300 --> 15:16.300
本地数据

15:16.300 --> 15:19.100
它的所有数据都会在这里面出现

15:19.100 --> 15:21.900
包括是默认的值

15:21.900 --> 15:27.300
包括是它的一个我们的那个缓存

15:27.300 --> 15:28.700
文件缓存

15:28.700 --> 15:30.600
包括是都会在这个文件中

15:30.600 --> 15:32.800
你知道一下在这个位置

15:32.800 --> 15:34.700
那么它都会存储在这里面

15:34.700 --> 15:36.400
那么至于存在哪里

15:36.400 --> 15:39.700
你需要根据它现在的一个存储结构

15:39.700 --> 15:41.300
来进行操作

15:41.300 --> 15:44.200
那么我们不需要很多的说到这里面来拿

15:44.200 --> 15:45.300
但是我们知道一下

15:45.300 --> 15:47.800
它会存在电脑的这一端

15:47.800 --> 15:50.500
这个咱们知道一下就可以了

15:50.500 --> 15:54.310
我把它写在这

15:54.310 --> 15:57.780
对于windows来讲

15:57.780 --> 15:59.780
无论你通过什么样的存储

15:59.780 --> 16:01.480
只要你想存储在本地

16:01.480 --> 16:03.180
对于web开发者工具来讲

16:03.180 --> 16:12.550
它一定的存储位置就是在C盘的

16:12.550 --> 16:14.050
用户的

16:14.050 --> 16:15.750
你现在的用户名

16:15.750 --> 16:20.750
然后下面的app data

16:20.750 --> 16:27.220
下面的local

16:27.220 --> 16:31.720
下面的微信web

16:31.720 --> 16:33.720
开发者工具

16:33.720 --> 16:39.350
里边的user date

16:39.350 --> 16:42.850
注意这个步骤就可以了

16:42.850 --> 16:43.750
那么这样的话

16:43.750 --> 16:45.550
我们就可以把这张图片

16:45.550 --> 16:47.850
直接存储到你现在所需要的

16:47.850 --> 16:49.350
图片已经存储完毕

16:49.350 --> 16:50.550
之后的话

16:50.550 --> 16:53.950
我们还可以去读取这个内容

16:53.950 --> 16:57.350
我们后面给它用户一个提示吧

16:57.350 --> 17:06.520
咱们称之为terror show model

17:06.520 --> 17:10.420
然后里边的话应该是show model

17:10.420 --> 17:12.020
model里边的话应该

17:12.020 --> 17:12.820
show toast吧

17:12.820 --> 17:16.220
toast里面的话简单看着一下

17:16.220 --> 17:17.020
model也行

17:17.020 --> 17:19.120
我们title

17:19.120 --> 17:28.820
告诉它提示

17:28.820 --> 17:30.920
content

17:30.920 --> 17:41.160
我们给的是内容是存储完成

17:41.260 --> 17:42.560
存储完成

17:42.560 --> 17:43.460
行吧

17:43.460 --> 17:50.050
然后success

17:50.050 --> 17:50.950
show cancel

17:50.950 --> 17:53.980
我们还有一个

17:53.980 --> 18:00.440
我们做一个force

18:00.440 --> 18:01.440
然后success

18:01.440 --> 18:02.540
我们给出的是

18:02.540 --> 18:03.940
它一旦成功以后

18:03.940 --> 18:06.850
我们res

18:06.850 --> 18:10.840
点下钮就不用打了

18:10.840 --> 18:12.840
提示存储完成

18:12.840 --> 18:15.240
紧接着我们下一步

18:15.240 --> 18:16.940
这是它的存储功能

18:16.940 --> 18:18.940
那么存储还算比较简单

18:18.940 --> 18:20.140
不复杂

18:20.140 --> 18:22.140
那么我们再来获取本地

18:22.140 --> 18:27.340
临式图片存储的一个位置

18:27.340 --> 18:30.540
我们把这句话这里打印在本地

18:30.540 --> 18:55.280
打印在控制台里面

18:55.280 --> 18:59.830
我们来看一下

18:59.830 --> 19:02.330
保存文件或者应该更确切的讲

19:02.330 --> 19:04.030
应该是选择文件

19:04.030 --> 19:06.530
选择好以后存储完成

19:06.530 --> 19:07.830
确定

19:07.830 --> 19:09.430
这个路径

19:09.430 --> 19:15.860
我们把这个路径看一下

19:15.860 --> 19:17.460
这边它是没有拿到什么

19:17.460 --> 19:20.060
还是save five parts

19:20.060 --> 19:20.860
我们看一下

19:20.860 --> 19:34.790
我们把它打印一下

19:34.790 --> 19:37.290
这个有对吧

19:37.290 --> 19:46.470
我们把这个拿过来

19:46.470 --> 19:48.070
然后此时我们再来看一下

19:48.070 --> 19:55.530
这个应该是ok的

19:55.530 --> 19:58.030
保存文件选择图片

19:58.030 --> 19:59.830
完成路径在这

19:59.830 --> 20:01.230
ok

20:01.230 --> 20:03.130
紧接着我们做第二件事情

20:03.130 --> 20:11.720
那就是获取本地的缓存临式文件

20:11.720 --> 20:23.040
继续结构完成一样

20:23.140 --> 20:36.750
我们做它的结构是一样的

20:36.750 --> 20:38.250
view

20:38.250 --> 20:44.730
class

20:44.730 --> 20:51.300
title

20:51.300 --> 21:00.670
我们称它为获取本地缓存

21:00.670 --> 21:05.500
临式文件

21:05.500 --> 21:12.070
button

21:12.070 --> 21:13.170
primary

21:13.170 --> 21:14.270
on

21:14.270 --> 21:18.050
click

21:18.050 --> 21:20.350
this.

21:20.350 --> 21:23.350
我们本地缓存件咱们叫做get

21:23.350 --> 21:24.450
fi

21:24.450 --> 21:28.590
info

21:28.590 --> 21:35.820
看一下页面

21:35.820 --> 21:36.920
按钮

21:36.920 --> 21:39.120
按钮

21:39.120 --> 21:45.440
没写这文字对吧

21:45.440 --> 21:52.060
再来看一下

21:52.060 --> 21:52.860
有了

21:52.860 --> 21:57.220
获取本地缓存临式文件

21:57.220 --> 21:57.720
get

21:57.720 --> 21:58.020
fi

21:58.020 --> 22:15.360
info

22:15.360 --> 22:18.960
获取本地缓存临式文件

22:18.960 --> 22:19.260
get

22:19.260 --> 22:19.360
fi

22:19.360 --> 22:20.260
info

22:20.260 --> 22:22.160
本地临式缓存文件

22:22.160 --> 22:24.060
其实它的话

22:24.060 --> 22:25.260
我们还可以这样

22:25.260 --> 22:27.960
就是你去选择前面注意

22:27.960 --> 22:29.060
我们这边的话

22:29.060 --> 22:30.060
我们选择一张照片

22:30.060 --> 22:31.860
它直接存下来了对吧

22:31.860 --> 22:33.560
那么临式文件的算法

22:33.560 --> 22:34.560
临式文件的操作

22:34.560 --> 22:38.560
其实我们依然是可以拿到我们的

22:38.560 --> 22:42.670
比如说

22:42.670 --> 22:44.070
在没有存储之前

22:44.070 --> 22:46.270
在没有它改变我们的这样的存储

22:46.270 --> 22:48.170
这是本地的一个缓存路径

22:48.170 --> 22:49.370
这是在改变之前

22:49.370 --> 22:51.170
这就是它的临式文件

22:51.170 --> 22:53.070
所以我们还是以图片为例

22:53.070 --> 22:54.570
我们来看一下

22:54.570 --> 22:57.470
我们缩一下它里面的一个计算值

22:57.470 --> 22:59.470
就做这个逻辑

22:59.470 --> 23:04.140
它计算值是什么

23:04.140 --> 23:07.740
terror.choice

23:07.840 --> 23:10.340
imager

23:10.340 --> 23:12.540
然后选择图片的时候

23:12.540 --> 23:14.040
它也就意味着

23:14.040 --> 23:16.140
它就做了一个所谓的

23:16.140 --> 23:19.140
临式文件的获取

23:19.140 --> 23:20.040
但是请注意

23:20.040 --> 23:21.240
这里面有几个点

23:21.240 --> 23:23.040
我们一直是强调大家的

23:23.040 --> 23:24.040
临式文件呢

23:24.040 --> 23:25.740
我不太说是坑

23:25.740 --> 23:26.540
但是至少来说

23:26.540 --> 23:32.550
它是一个不能犯的错误

23:32.550 --> 23:34.050
然后在里面我们都说

23:34.050 --> 23:35.250
我们在success里面

23:35.250 --> 23:36.150
我们做

23:36.150 --> 23:37.150
这一步

23:37.150 --> 23:38.650
terror.get

23:38.650 --> 23:42.810
fineinfo

23:42.810 --> 23:44.810
fineparse

23:44.810 --> 23:46.310
我们把什么拿进来

23:46.310 --> 23:48.310
把你现在刚刚前面

23:48.310 --> 23:51.110
res拿到的那个叫做

23:51.110 --> 23:53.310
temperfineparse

23:53.310 --> 23:56.310
里面第1个0拿进来

23:56.310 --> 23:57.410
注意

23:57.410 --> 23:58.110
这边的话

23:58.110 --> 24:00.010
它会返回一些数值

24:00.010 --> 24:01.810
进行计算

24:01.810 --> 24:02.510
所以呢

24:02.510 --> 24:04.010
我们这边有一个size

24:04.010 --> 24:05.410
你先记住一下

24:05.410 --> 24:09.910
它是以字节为单位的

24:09.910 --> 24:13.420
同时

24:13.420 --> 24:14.820
deterrest

24:14.820 --> 24:16.020
我们说它是计算

24:16.020 --> 24:18.620
我们可以计算算法

24:18.620 --> 24:19.520
有一个算法

24:19.520 --> 24:20.920
我们现在的算法有两种

24:20.920 --> 24:23.120
英语MD5一个sh1

24:23.120 --> 24:24.620
这两种

24:24.620 --> 24:29.270
我们说默认使用的

24:29.270 --> 24:36.200
是MD5

24:36.200 --> 24:37.400
success

24:37.400 --> 24:38.500
然后我们把这个

24:38.500 --> 24:41.500
只给打印出来

24:41.500 --> 24:55.910
也就是它经过获取以后里面的内容

24:55.910 --> 24:56.310
好了

24:56.310 --> 24:57.710
那么我们来看一下

24:57.710 --> 25:02.480
现在这个操作

25:02.480 --> 25:03.780
获取临时文件

25:03.780 --> 25:04.880
张图片拿到

25:04.880 --> 25:06.880
咱们看到什么

25:06.880 --> 25:07.980
对这张临时图片来讲

25:07.980 --> 25:09.080
它的大小是多少

25:09.080 --> 25:09.980
对不对

25:09.980 --> 25:11.280
然后的话

25:11.280 --> 25:12.480
那么deter

25:12.480 --> 25:14.480
deter它是一种算法

25:14.480 --> 25:17.380
默认用MD5对你这个路径

25:17.380 --> 25:19.680
完全进行了一个所谓的

25:19.680 --> 25:20.580
加密以后

25:20.580 --> 25:21.980
它形成了这样的一个

25:21.980 --> 25:23.780
那个加密值

25:23.780 --> 25:24.380
之后的话

25:24.380 --> 25:26.880
如果你本地需要传送什么东西上来的话

25:26.880 --> 25:28.380
你只需要把这个路径

25:28.380 --> 25:29.280
进行加密的话

25:29.280 --> 25:31.080
就可以使用这个deter

25:31.080 --> 25:32.380
这结构

25:32.380 --> 25:33.180
所以呢

25:33.180 --> 25:34.880
它可以得到你这个大小

25:34.880 --> 25:36.180
包括是这个字节

25:36.180 --> 25:37.680
我们在上传图片的时候

25:37.680 --> 25:39.680
你也可以通过这个方式

25:39.680 --> 25:40.680
去判断一下

25:40.680 --> 25:44.680
现在图片的大小是否满足你现在的服务器的需求

25:44.680 --> 25:46.680
是这个逻辑

25:46.680 --> 25:47.380
ok

25:47.380 --> 25:48.180
它其他的话

25:48.180 --> 25:50.180
一般性它的整个操作

25:50.180 --> 25:51.780
和我们的上面的这个

25:51.780 --> 25:55.400
会配合使用这两者之间

25:55.400 --> 25:55.900
好了

25:55.900 --> 25:56.800
那么紧接着

25:56.800 --> 25:58.500
这个没有什么难度可言

25:58.500 --> 25:59.700
只是大家知道一下

25:59.700 --> 26:01.200
它能拿到什么

26:01.200 --> 26:02.200
当然我刚才说了

26:02.200 --> 26:04.800
它会有一个坑或者称之为

26:04.800 --> 26:05.900
注意点

26:05.900 --> 26:06.700
就是

26:08.000 --> 26:09.800
这个路径

26:09.800 --> 26:12.000
这个路径

26:12.000 --> 26:13.600
由于它是临时路径

26:13.600 --> 26:14.500
所以呢

26:14.500 --> 26:16.200
它每次在操作的时候

26:16.200 --> 26:19.800
都会把前一次的操作给覆盖了

26:19.800 --> 26:20.500
或者说

26:20.500 --> 26:22.300
临时路径在整个运用期间

26:22.300 --> 26:24.900
只能为唯一的一个

26:24.900 --> 26:26.100
你不能说是

26:26.100 --> 26:27.900
我今天记住了这个路径

26:27.900 --> 26:30.200
然后待会我进行第二次操作的时候

26:30.200 --> 26:32.700
我想显示前一次的路径

26:32.700 --> 26:34.500
那是不行的

26:34.500 --> 26:36.800
除非你对它进行了完整的保存

26:36.800 --> 26:38.000
合为临时路径

26:38.000 --> 26:39.300
临时路径就是属于

26:39.300 --> 26:41.700
它可以在当前运行环境中

26:41.700 --> 26:42.700
给你指向这里

26:42.700 --> 26:44.100
但是它不能做的是

26:44.100 --> 26:46.600
长期给你进行保存的访问

26:46.600 --> 26:48.000
这点你需要理解

26:48.000 --> 26:48.600
ok

26:48.600 --> 26:50.400
那么这是第二个功能

26:50.400 --> 26:51.500
我们称之为

26:51.500 --> 26:53.300
就是获取临时路径

26:53.300 --> 26:54.400
第三个呢

26:54.500 --> 26:55.900
我们可以获取

26:55.900 --> 26:58.400
以存储的文件列表

26:58.400 --> 26:59.200
我们可以获取

26:59.200 --> 27:01.100
以存储的文件列表

27:01.100 --> 27:07.350
我们在这边写

27:07.350 --> 27:10.660
把上面的复制下来

27:10.660 --> 27:22.730
这是一个区域

27:22.730 --> 27:26.240
获取

27:26.240 --> 27:34.370
以存储的文件列表

27:34.370 --> 27:43.190
button按钮

27:43.190 --> 27:53.810
type primary on click

27:53.810 --> 27:55.110
然后呢

27:55.110 --> 27:56.510
这边我们写上

27:56.510 --> 27:58.210
文件存储列表的话

27:58.210 --> 27:59.510
我们名称

27:59.510 --> 28:00.910
叫做get

28:00.910 --> 28:02.610
来一下

28:02.610 --> 28:09.140
get saved

28:09.140 --> 28:18.640
fire list

28:18.640 --> 28:19.940
这边也是一样保存

28:19.940 --> 28:23.340
by the list

28:23.340 --> 28:24.640
by the list不加的话

28:24.640 --> 28:25.640
其实你能够调用

28:25.640 --> 28:27.140
只不过by the list有两种作用

28:27.140 --> 28:27.840
第一个的话呢

28:27.840 --> 28:29.940
你可以确保在当前的

28:29.940 --> 28:30.940
在这个方法中的

28:30.940 --> 28:32.240
this是指向于我们

28:32.240 --> 28:34.040
最外层的这样一个对象

28:34.040 --> 28:34.440
第二个呢

28:34.440 --> 28:35.140
你要传参的话

28:35.140 --> 28:36.640
你可以把参数跟在后面

28:36.640 --> 28:38.940
这是有两个是可以使用

28:38.940 --> 28:39.540
然后呢

28:39.540 --> 28:42.640
我们现在直接是完成一个

28:42.640 --> 29:06.960
存储文件列表获取的事件

29:06.960 --> 29:07.260
好

29:07.260 --> 29:15.460
我们请接着继续来

29:15.460 --> 29:16.960
获取存储列表

29:16.960 --> 29:19.960
微信和我们的terror

29:19.960 --> 29:23.560
都有一个叫做get

29:23.560 --> 29:25.960
save fire list

29:25.960 --> 29:28.960
都有一个这个

29:28.960 --> 29:32.160
那我们针对于它来做一个

29:32.160 --> 29:33.760
success

29:33.760 --> 29:35.060
res

29:35.060 --> 29:37.160
我们来得到完整的

29:37.160 --> 29:43.180
这个不需要这样打

29:43.180 --> 29:46.240
在后面

29:46.240 --> 29:47.940
通过它完整的得到一下

29:47.940 --> 29:48.840
我们现在里面

29:48.840 --> 29:51.340
所呈现出来的列表结构

29:51.340 --> 29:52.340
那么列表的话

29:52.340 --> 29:53.540
我们先呈现在这

29:53.540 --> 29:56.840
我们然后把页面这样做一个循环呈现

29:56.840 --> 29:58.940
res.fire

29:58.940 --> 29:59.840
它里面的内容

29:59.840 --> 30:02.040
我们先通过res看出来

30:02.040 --> 30:03.440
它究竟里面有多少内容

30:03.440 --> 30:06.340
是我通过现在

30:06.340 --> 30:08.240
临时文件获取我们的

30:08.240 --> 30:09.640
哎呦名称还是没有出来

30:09.640 --> 30:11.440
对吧

30:11.440 --> 30:15.340
咱们把这个button的名字没写

30:15.340 --> 30:19.880
显示文字

30:19.880 --> 30:20.280
好

30:20.280 --> 30:25.600
我们再来看一下

30:25.600 --> 30:27.400
按钮primer

30:27.400 --> 30:29.100
primer

30:29.100 --> 30:39.570
type

30:39.570 --> 30:41.470
获取以存储的文件列表

30:41.470 --> 30:42.370
现在出来以后

30:42.370 --> 30:43.770
你会发现里面有四个

30:43.770 --> 30:45.770
是之前我已经存过的

30:45.770 --> 30:47.370
里面有四个图片出来了

30:47.370 --> 30:48.170
对吧

30:48.170 --> 30:48.870
现在再来

30:48.870 --> 30:52.440
我们再保存一个

30:52.440 --> 30:54.140
随便选择一个

30:54.140 --> 30:56.140
存储完成点开

30:56.140 --> 30:57.740
是不是五个了

30:57.740 --> 30:58.340
看到了吗

30:58.340 --> 30:59.440
是不是五个了

30:59.440 --> 31:01.040
所以从它的角度来讲的话

31:01.040 --> 31:02.940
我们完全可以取得到的

31:02.940 --> 31:04.340
但请注意

31:04.340 --> 31:07.240
这个文件的格式

31:07.240 --> 31:09.940
它不是一个tmp开头吧

31:09.940 --> 31:10.440
是吧

31:10.440 --> 31:12.740
所以它是一个本地

31:12.740 --> 31:13.740
应该存储着的

31:13.740 --> 31:15.940
它并不是我们大家所谓的

31:15.940 --> 31:17.640
那个临时文件

31:17.640 --> 31:19.040
如果你要获取临时文件

31:19.040 --> 31:21.240
记住在这样的素组里面

31:21.240 --> 31:22.440
特别是在存储

31:22.440 --> 31:26.040
当前图片的一个多纸操作过程中

31:26.040 --> 31:28.540
千万不能在这边去看到tmp

31:28.540 --> 31:29.740
一旦tmp出现的话

31:29.740 --> 31:30.940
那那个路径是死的

31:30.940 --> 31:32.440
也就是说那是假路径

31:32.440 --> 31:33.840
你根本不能用的

31:33.840 --> 31:34.540
所以这样的话

31:34.540 --> 31:35.640
我们就可以获得了

31:35.640 --> 31:37.440
现在文件的一个

31:37.440 --> 31:40.040
在本地的存储路径

31:40.040 --> 31:40.840
OK吧

31:40.840 --> 31:41.240
好

31:41.240 --> 31:44.040
我们紧接着继续

31:44.040 --> 31:44.940
大家会发现

31:44.940 --> 31:48.380
不难吧

31:48.380 --> 31:49.680
只要

31:49.680 --> 31:51.380
只要你自己愿意去看一下

31:51.380 --> 31:52.280
学一下

31:52.280 --> 32:00.280
其实不难都是

32:00.280 --> 32:01.380
那么一旦有了

32:01.380 --> 32:05.860
我们现在就做一个清除

32:05.860 --> 32:13.730
清除本地缓存文件

32:13.730 --> 32:20.280
做这功能

32:20.280 --> 32:23.280
待会我们把上面的列表给它呈现出来

32:23.280 --> 32:24.180
就可以展现一下

32:24.180 --> 32:25.480
你本地有几张图片

32:25.480 --> 32:36.630
对吧

32:36.630 --> 32:37.530
清除

32:37.530 --> 32:43.300
哎

32:43.300 --> 32:44.400
this.

32:44.400 --> 32:45.000
清除

32:45.000 --> 32:45.700
清除的话

32:45.700 --> 32:47.500
我们这样给

32:47.500 --> 32:51.620
叫做remove

32:51.620 --> 33:09.410
save the file

33:09.410 --> 33:18.170
清除本地缓存文件

33:18.170 --> 33:20.970
remove save file

33:20.970 --> 33:21.370
清除

33:21.370 --> 33:24.270
其实我们只是调用它里面的某一个功能

33:24.270 --> 33:25.170
这个功能的话

33:25.170 --> 33:26.070
我们就称之为

33:26.070 --> 33:28.670
就是先得到你的列表

33:28.670 --> 33:29.970
然后列表里面

33:29.970 --> 33:30.970
每一个内容

33:30.970 --> 33:32.470
我们进行清除

33:32.470 --> 33:33.670
这样操作

33:33.670 --> 33:34.570
我们来看

33:34.570 --> 33:37.950
首先

33:37.950 --> 33:42.950
terror.get

33:42.950 --> 33:46.830
save file list

33:46.830 --> 33:48.630
得到你现在的所有列表

33:48.630 --> 33:51.030
我们通过success的方式

33:51.030 --> 33:53.230
is得到

33:53.230 --> 33:54.030
你这边的可以看

33:54.030 --> 33:55.130
我们先不看了

33:55.130 --> 33:56.030
然后往下

33:56.030 --> 34:01.290
然后做删除

34:01.290 --> 34:02.490
做删除操作

34:02.490 --> 34:04.690
那么如果先做个判断

34:04.690 --> 34:06.790
当前的

34:06.790 --> 34:11.620
file list

34:11.620 --> 34:12.520
在这个里面

34:12.520 --> 34:14.320
它一定会有一个文件列表

34:14.320 --> 34:15.820
它的长度

34:15.820 --> 34:16.920
如果说是

34:16.920 --> 34:17.620
大于零

34:17.620 --> 34:19.820
我们才做这个事情

34:19.820 --> 34:21.620
如果你根本就没有任何东西

34:21.620 --> 34:22.520
那我何必去做呢

34:22.520 --> 34:23.220
对吧

34:23.220 --> 34:25.520
没有所谓的删除概念

34:25.520 --> 34:26.320
紧接着

34:26.320 --> 34:30.720
我们通过循环的方式来

34:30.720 --> 34:32.620
我们这次用一个

34:32.620 --> 34:35.720
for结构来做

34:35.720 --> 34:38.120
is.file list

34:38.120 --> 34:43.970
里边有一个lens

34:43.970 --> 34:45.570
在整个对素组里面

34:45.570 --> 34:46.570
我们做一下

34:46.570 --> 34:48.370
wishterror

34:48.370 --> 34:51.070
我们给它一个remove

34:51.070 --> 34:53.070
删除

34:53.070 --> 34:56.370
save file文件

34:56.370 --> 34:58.770
那么文件路径给它

34:58.770 --> 35:01.670
file path

35:01.670 --> 35:02.970
后面这路径怎么给呢

35:02.970 --> 35:07.470
其实你现在就是在res.file list里面

35:07.470 --> 35:08.470
对吧

35:08.470 --> 35:11.470
res.file list

35:11.470 --> 35:12.870
这里面有个i

35:12.870 --> 35:13.770
这里面有个i

35:13.770 --> 35:17.170
而这个i就是file path

35:17.170 --> 35:19.270
我们拿出它的文件名来

35:19.270 --> 35:21.570
你把它给删了

35:21.570 --> 35:25.370
successres.conf

35:25.370 --> 35:27.070
console.log

35:27.070 --> 35:28.270
然后的话呢

35:28.270 --> 35:30.570
我们这边写上

35:30.570 --> 35:32.770
successres

35:32.770 --> 35:35.870
表示这是一个成功的状态

35:35.870 --> 35:37.370
继续

35:37.370 --> 35:38.970
file

35:38.970 --> 35:43.250
res.console.log

35:43.250 --> 35:49.980
这是一个失败的状态

35:49.980 --> 35:51.880
当然你如果写得全一点

35:51.880 --> 35:59.820
你最好这边再有一个complete

35:59.820 --> 36:04.160
res

36:04.160 --> 36:19.470
你这边写上的是

36:19.470 --> 36:20.370
OK

36:20.370 --> 36:23.070
我们就完成了这几个内容的操作

36:23.070 --> 36:24.570
我们看到我们的删除

36:24.570 --> 36:26.870
其实它是一个一个删的

36:26.870 --> 36:29.270
然后把现在缓存中的所有内容

36:29.270 --> 36:30.470
我们读取出来以后

36:30.470 --> 36:33.870
如果判断当前还是有缓存的值的话

36:33.870 --> 36:36.370
我们先拿出里面某一个

36:36.370 --> 36:38.770
然后把它做在了我们的remove

36:38.770 --> 36:39.370
file

36:39.370 --> 36:40.070
remove

36:40.070 --> 36:41.670
那个sortify的上面

36:41.670 --> 36:43.170
然后大进行删除

36:43.170 --> 36:43.970
然后看到吗

36:43.970 --> 36:46.370
然后进行这样的循环操作

36:46.370 --> 36:47.470
那么我们来看一下

36:47.470 --> 36:50.070
这样的循环操作以后

36:50.070 --> 36:51.070
会有数据吗

36:51.170 --> 36:53.370
首先我们

36:53.370 --> 36:55.270
获取本地临时缓存文件

36:55.270 --> 36:56.370
有5个对吧

36:56.370 --> 36:58.170
清除

36:58.170 --> 37:02.900
我们点好了

37:02.900 --> 37:04.900
我们清除按钮的时候没关联呢

37:04.900 --> 37:07.500
我们来看一下

37:07.500 --> 37:10.000
它连这个都没出来对吧

37:10.000 --> 37:12.200
是它这个名称没关联吗

37:12.200 --> 37:13.700
没保存我们看到吗

37:13.700 --> 37:19.230
我没保存

37:19.230 --> 37:26.650
我们再来一次

37:26.650 --> 37:27.750
现在有5个

37:27.750 --> 37:29.650
1点下去

37:29.650 --> 37:31.450
success

37:31.450 --> 37:33.050
complete完成

37:33.050 --> 37:34.250
都代表只删除了

37:34.250 --> 37:35.350
然后此时呢

37:35.350 --> 37:37.350
我们再来点一下

37:37.350 --> 37:38.050
几个

37:38.050 --> 37:38.950
0个

37:38.950 --> 37:40.250
是不是都删掉了

37:40.250 --> 37:40.750
对吧

37:40.750 --> 37:42.550
所以清除本地缓存这个按钮

37:42.550 --> 37:44.950
也就意味着实现效果了

37:44.950 --> 37:45.650
我们看到

37:45.650 --> 37:48.150
清除它需要的是单文件清除

37:48.150 --> 37:57.810
单文件名

37:57.810 --> 38:00.410
单文件名的清除它是一个

38:00.410 --> 38:01.210
ok

38:01.210 --> 38:01.910
那这样的话呢

38:01.910 --> 38:03.210
我们就能很容易看到

38:03.210 --> 38:05.710
现在的整个操作结果了

38:05.710 --> 38:08.910
紧接着我们再往下

38:08.910 --> 38:10.010
下面还有什么呢

38:10.010 --> 38:37.870
我们要打开一个文件

38:37.870 --> 38:55.720
打开文件

38:55.720 --> 39:06.460
primary

39:06.460 --> 39:09.720
unclick

39:09.720 --> 39:10.220
unclick

39:10.220 --> 39:11.620
我们写上打开文件

39:11.620 --> 39:13.520
我们成为open document

39:13.520 --> 39:22.550
对吧

39:22.550 --> 39:23.950
open document

39:23.950 --> 39:43.400
打开文件

39:43.400 --> 39:44.600
我们打开文件呢

39:44.600 --> 39:47.000
我们需要先下载一篇文档

39:47.000 --> 39:52.430
注意下啊

39:52.430 --> 39:59.830
打开文件需要先下载文档

39:59.830 --> 40:00.230
所以呢

40:00.230 --> 40:00.930
我们这边呢

40:00.930 --> 40:01.930
先写一下

40:01.930 --> 40:03.330
我们有一个叫

40:03.330 --> 40:04.830
down

40:04.830 --> 40:06.430
load file

40:06.430 --> 40:08.330
我们可以下载一个文档过来

40:08.330 --> 40:09.530
那么load file呢

40:09.530 --> 40:12.130
它需要一个url

40:12.130 --> 40:13.530
这个位置上

40:13.530 --> 40:14.030
然后呢

40:14.030 --> 40:15.030
这个文档注意下

40:15.030 --> 40:17.530
它支持的是

40:17.530 --> 40:19.830
docx

40:19.830 --> 40:21.730
xsl

40:21.730 --> 40:23.530
ppt

40:23.530 --> 40:24.530
pdf

40:24.530 --> 40:27.340
这些都支持

40:27.340 --> 40:28.340
下载好以后

40:28.340 --> 40:30.040
我们的res能接到

40:30.040 --> 40:30.940
那么紧接着

40:30.940 --> 40:33.140
通过res里面来打开

40:33.340 --> 40:34.340
首先

40:34.340 --> 40:36.740
我们可以有一个file path

40:36.740 --> 40:38.240
得到你现在的值

40:38.240 --> 40:40.740
也就是res的

40:40.740 --> 40:42.540
template file

40:42.540 --> 40:43.540
然后呢

40:43.540 --> 40:47.040
我们做一个tarrow的

40:47.040 --> 40:49.340
open document

40:49.340 --> 40:51.740
打开

40:51.740 --> 40:55.240
你把你现在拿过来的路径给它

40:55.240 --> 40:56.640
就是这个路径

40:56.640 --> 40:58.440
作为打开路径的文件

40:58.440 --> 41:05.700
文件名存在

41:05.700 --> 41:14.620
success

41:14.620 --> 41:17.020
我们不用去使用

41:17.020 --> 41:18.020
系统给到的

41:18.020 --> 41:20.820
我们直接这自己来做success

41:20.820 --> 41:25.440
然后

41:25.440 --> 41:31.800
文件已经打开

41:31.800 --> 41:32.200
对吧

41:32.200 --> 41:33.100
文件已经打开

41:33.100 --> 41:34.600
我们使用这样的结构来写

41:34.600 --> 41:38.680
这边都好

41:38.680 --> 41:39.580
我们看一下

41:39.580 --> 41:40.880
现在主要的是

41:40.880 --> 41:42.380
我们打开文件

41:42.380 --> 41:44.780
先要通过tarrow的download file

41:44.780 --> 41:46.380
去下载一个文件过来

41:46.380 --> 41:47.380
下载好文件以后

41:47.380 --> 41:48.680
取得这文件的

41:48.680 --> 41:49.380
零时路径

41:49.380 --> 41:50.080
零时路径

41:50.080 --> 41:52.580
放在我们的open document文件中

41:52.580 --> 41:53.980
形成打开

41:53.980 --> 41:55.880
形成这样一个结构

41:55.880 --> 41:58.880
那么只要你现在能给到一个

41:58.880 --> 42:00.680
在线的一个word

42:00.680 --> 42:02.680
或者xl ppt or pdf的文档

42:02.680 --> 42:04.480
那么他就能够进行

42:04.480 --> 42:06.380
一个文件的打开操作

42:06.380 --> 42:07.780
当然他的打开呢

42:07.780 --> 42:09.280
在移动端上面的话呢

42:09.280 --> 42:10.880
他一般需要去找到

42:10.880 --> 42:12.480
他的一个对应的

42:12.480 --> 42:13.180
软件

42:13.180 --> 42:14.680
如果他的软件打不到的话

42:14.680 --> 42:16.680
那他本身也不会有现实

42:16.680 --> 42:17.480
就是我们微信

42:17.480 --> 42:19.480
比如说大家传给你一个文件

42:19.480 --> 42:22.080
大家一旦点击下载打开的时候

42:22.080 --> 42:24.380
你需要找到这个合适软件是吧

42:24.380 --> 42:26.980
不然告诉你说再先下载需要是

42:26.980 --> 42:28.380
ok这个的话呢

42:28.380 --> 42:29.980
就是非常简单的一个功能

42:29.980 --> 42:32.580
他借助于其他的软件来完成的

42:32.580 --> 42:34.380
那我们现在回过头来看页面

42:34.380 --> 42:35.380
页面上面基本上

42:35.380 --> 42:36.580
我们已经做到了

42:36.580 --> 42:38.880
我们把文件操作的几个功能

42:38.880 --> 42:41.080
选项全在这全列了一遍

42:41.080 --> 42:43.180
那么对于文件来讲的话呢

42:43.180 --> 42:44.980
相对而言都比较简单

42:44.980 --> 42:46.980
我们不做复杂的功能设定

42:46.980 --> 42:48.780
因为在微信小程序中呢

42:48.780 --> 42:51.780
他并非是专用于文件处理的

42:51.780 --> 42:55.280
他只是作为本地文件的一个设置

42:55.280 --> 42:57.280
然后特别还要注意一下的是

42:57.280 --> 43:00.280
在本地存储文件以后

43:00.280 --> 43:02.380
无论你小程序是否关闭

43:02.380 --> 43:05.280
本地文件的存储依然是存在着的

43:05.280 --> 43:08.680
所以你如果多次往本地文件存储以后

43:08.680 --> 43:10.080
但一直没有删除

43:10.080 --> 43:13.280
那么你会越来越消耗本地存储文件位置

43:13.280 --> 43:15.780
所以呢我们需要的是把这个内容啊

43:15.780 --> 43:16.680
到时候用完了

43:16.680 --> 43:18.180
你可以删除它啊

43:18.180 --> 43:19.780
删除本地文件啊

43:19.780 --> 43:22.080
这是我们继续希望大家呢

43:22.080 --> 43:25.480
在移动端手机端上面所做的一些操作

43:25.480 --> 43:25.980
好

43:25.980 --> 43:28.480
那么文件操作这一块就先讲到这里了

