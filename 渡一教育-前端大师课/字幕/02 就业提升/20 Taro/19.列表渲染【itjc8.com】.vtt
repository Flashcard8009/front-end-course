WEBVTT

00:00.000 --> 00:02.300
好 我们继续讲解Tairo系列课程

00:02.300 --> 00:04.600
这些课呢 给大家讲解一下列表宣染

00:05.500 --> 00:08.700
在之前的课程中呢 我们讲解了我们的

00:09.300 --> 00:14.300
条件宣染啊 并且有好几个点啊 是属于给大家需要详细修名的

00:14.300 --> 00:16.100
我们在上节课呢 已经给大家说道了

00:16.300 --> 00:18.600
那么这些课呢 我们主要做一下列表宣染

00:19.000 --> 00:22.800
列表宣染 其实从很多程度上 我们大家在以前的学习过程中

00:22.800 --> 00:25.500
还是以为的把它理解成 就是一个列表

00:25.800 --> 00:29.900
但是呢 并非是如此啊 列表宣染更多的也会在我们这边

00:30.200 --> 00:34.600
呈现给大家的 是我们所谓的一个宣染的重点在这个上面

00:35.200 --> 00:39.800
列表宣染本身自己呢 我们说是可以利用Jasky脚本里面的Map函数

00:39.800 --> 00:42.200
来完成这样的一个宣染过程

00:42.800 --> 00:46.600
它是可以直接返回你现在的一个新宿组的

00:47.300 --> 00:51.500
对吧 我们大家会知道 4HMap 还有Filter 这样的操作

00:52.300 --> 00:54.500
可以在Random中带入JSA

00:55.100 --> 00:58.500
我们来完成宣染 因为我们的宣染部分呢 除了

00:59.100 --> 01:03.500
在我们的整个代码里面完成我们的基本的Map操作以外

01:03.900 --> 01:07.000
我们还能够把它带入JSA的一些语法标签

01:07.000 --> 01:09.700
然后来完成你下面见面的一定的呈现

01:10.300 --> 01:12.700
同时呢 我们会讲到key跟tower key

01:13.200 --> 01:14.900
这两个的一个操作

01:15.400 --> 01:19.800
因为在我们的整个的宣染过程中呢 其实系统还是需要你有一个key

01:20.400 --> 01:22.400
能够让它系统能够很明确

01:22.400 --> 01:26.000
当前这里边是有一个能够直确保其唯一性的

01:26.700 --> 01:29.000
再往下呢 就是key的一个要求

01:29.300 --> 01:31.100
key的要求的话呢 其实很简单

01:31.800 --> 01:32.900
它有几个要求

01:33.100 --> 01:37.200
最重要的一点就是元素的key在它的兄弟节点元素之间是唯一的

01:37.800 --> 01:40.100
什么意思 我们key不要求是全局唯一

01:40.100 --> 01:42.400
但是呢 在当前页面的其他的

01:42.400 --> 01:45.300
比如说你在有两个Map操作的过程中

01:45.300 --> 01:47.200
那么它需要唯一就可以了

01:47.700 --> 01:51.000
当然key我们也会设计到它的一个传直操作

01:51.000 --> 01:53.600
它是怎么样往里面进行数据传直

01:53.800 --> 01:56.100
以及我们在做tower过程中

01:56.100 --> 01:58.500
它和我们的reactor有些不同点

01:58.600 --> 02:01.600
那么我们会在这里给大家做一个详细的介绍

02:02.000 --> 02:03.600
首先我们打开代码

02:04.800 --> 02:05.700
我们打开代码

02:06.000 --> 02:07.900
我们清见一个页面

02:09.970 --> 02:11.870
我们称之为就是我们的

02:15.830 --> 02:16.430
Lister

02:16.430 --> 02:20.370
我们称之为ListerMap

02:29.700 --> 02:33.100
好 我们把里面的一个基本结构给搭建一下

02:35.560 --> 02:40.660
Import Taro Component

02:44.820 --> 02:49.680
From Taro

02:53.320 --> 02:57.280
Import View Tester

02:57.380 --> 02:58.780
经常用到的两个

03:00.380 --> 03:07.900
From Taro Components

03:10.920 --> 03:13.620
Experts Default

03:14.420 --> 03:15.920
Class My

03:17.020 --> 03:20.120
我们写上我们的名称叫做ListerMap

03:24.720 --> 03:29.170
Extends Component

03:31.530 --> 03:32.730
然后里边的话呢

03:32.730 --> 03:35.930
我们说Constructure

03:40.210 --> 03:45.030
然后写上Super Arguments

03:50.340 --> 03:51.340
Component

03:52.940 --> 03:53.740
Ditamount

04:00.700 --> 04:01.300
Render

04:04.180 --> 04:04.880
Return

04:08.640 --> 04:10.540
OK 我们把这个写好

04:11.540 --> 04:15.840
然后我们把它放在我们的app.js插里面

04:21.570 --> 04:23.370
改一下ListerMap

04:27.260 --> 04:27.960
ListerMap

04:28.760 --> 04:32.060
运行了 我们看一下它有哪个点上Return

04:43.270 --> 04:45.870
我们写上我们自己的一个跟文件

04:46.770 --> 04:47.270
好了

04:47.970 --> 04:50.970
这样的话我们就完成了一个页面的初始化

04:50.970 --> 04:53.270
咱们看到页面初始化是这样一个结构

04:54.070 --> 04:55.270
紧接着我们继续

04:55.770 --> 04:58.570
我们首先来看一下在js中

04:58.570 --> 05:01.570
你如果说要对一个数据

05:01.570 --> 05:04.570
我们称之为列表进行所谓的Map操作

05:04.570 --> 05:05.570
可以怎么样写

05:05.970 --> 05:08.770
我们就直接把它写在我们的Ditamount里面

05:10.680 --> 05:12.280
我们先订一个素组

05:18.780 --> 05:20.780
1 2 3 4 5

05:21.180 --> 05:21.980
订一个素组

05:23.680 --> 05:24.480
我封号不要

05:25.680 --> 05:26.180
第二步

05:26.880 --> 05:27.480
Constructure

05:29.490 --> 05:30.690
我们订一个Double

05:30.690 --> 05:33.290
就是我想把这个数值成2

05:34.090 --> 05:35.290
Number 4.Map

05:35.890 --> 05:37.890
这里边一定用到了一个匿名函数

05:37.890 --> 05:43.840
我们写上每一项所取出来的

05:44.840 --> 05:51.620
然后成2

05:52.420 --> 05:53.720
形成这样一个写法

05:54.620 --> 05:57.520
那么我们取出这个数值以后的话

05:57.520 --> 05:58.920
那么这个数值

05:58.920 --> 06:00.420
它就会自行的

06:00.620 --> 06:03.320
从1 2 3 4 5里面取出每一个成2

06:03.320 --> 06:05.320
然后全部返回给我的Double

06:05.920 --> 06:07.620
然后我们把Double呈现一下

06:08.120 --> 06:09.120
先复习一下

06:11.290 --> 06:12.490
好我们看一下页面

06:15.940 --> 06:17.540
是不是2680出来了

06:17.840 --> 06:19.840
首先把这部分先了解一下

06:20.340 --> 06:22.640
紧接着我们将利用这个语法

06:22.640 --> 06:24.740
我们来做页面的渲染

06:24.840 --> 06:25.640
在这里面做

06:26.640 --> 06:27.840
我们做页面的渲染

06:27.840 --> 06:29.940
那么页面的渲染可以怎么玩呢

06:29.940 --> 06:31.240
那么我们先来

06:31.240 --> 06:33.340
我们把整个这块内容

06:33.740 --> 06:36.040
我们可以不定义在这个里面了

06:36.040 --> 06:37.240
我们把它注释掉

06:37.740 --> 06:39.140
这是我们先看到的效果

06:42.080 --> 06:42.880
这是我们写上

06:45.660 --> 06:47.360
Java Scrivita中的

06:48.660 --> 06:49.960
Java Scrivita中的

06:52.460 --> 06:52.960
操作

06:54.160 --> 06:54.860
Map操作

06:57.610 --> 06:59.010
紧接着我们往这走

06:59.210 --> 07:01.110
我们写上

07:01.210 --> 07:04.010
你现在需要在这里所看到的

07:04.310 --> 07:05.610
我们的循环的结构

07:05.910 --> 07:07.010
那么这样的话

07:07.010 --> 07:08.510
我们需要把你的定义

07:08.510 --> 07:10.010
先写在Random里面

07:10.010 --> 07:11.410
因为速组吗

07:12.110 --> 07:14.810
速组我们采用第2个Mambus

07:15.310 --> 07:19.210
然后我们让它自行完成

07:19.210 --> 07:21.110
就是我们用它的解析幅来做

07:23.610 --> 07:24.210
3点

07:25.310 --> 07:28.410
速组我们要解开一个100

07:29.110 --> 07:30.010
这样的一个速组

07:30.610 --> 07:32.110
有同学说这样就可以了

07:32.210 --> 07:33.610
那么我们来看一下

07:33.910 --> 07:35.010
如果你这样可以的话

07:35.010 --> 07:35.810
我们来看一下

07:35.810 --> 07:37.210
我们做一个Number

07:37.910 --> 07:39.810
解析幅解个100出来

07:43.700 --> 07:44.100
你看

07:45.900 --> 07:48.800
它会有一个Number is not defined的定义

07:49.700 --> 07:50.700
不

07:51.700 --> 07:52.500
我们加一个

07:56.440 --> 07:59.940
你注意它里面会给你是一个我们的空

08:00.440 --> 08:01.640
它会给你一个空

08:02.340 --> 08:04.540
那么这就意味着它有解析

08:04.540 --> 08:06.140
但它没有办法

08:06.840 --> 08:08.940
对应到它里面的每一个数据

08:08.940 --> 08:11.340
我们说每一个数据的对应

08:11.340 --> 08:13.240
你都需要给它一个什么

08:13.540 --> 08:14.140
key

08:14.740 --> 08:16.140
你都要给它一个key

08:16.640 --> 08:17.540
去这样写

08:17.740 --> 08:18.840
那么我们来看一下

08:18.840 --> 08:20.940
它解析出来是100个值

08:20.940 --> 08:22.540
但是100个值没有办法

08:22.540 --> 08:26.140
直接对应到你现在的每一个元素位

08:26.140 --> 08:27.440
所以它要个key

08:27.740 --> 08:28.340
注意一下

08:28.440 --> 08:29.940
你想解析以后

08:29.940 --> 08:30.840
你想做个数组

08:30.840 --> 08:32.340
你都可以用这样的方式

08:32.940 --> 08:34.640
一个key代表一个值唯一性

08:34.640 --> 08:36.540
这样的话它就可以解析出来了

08:37.140 --> 08:37.740
紧接着

08:37.740 --> 08:41.140
我们看到我现在有100个数据解析出来以后的话

08:41.140 --> 08:42.940
那我下面就开始进行

08:43.140 --> 08:45.140
我们的所谓的JS表达式了

08:45.140 --> 08:45.540
注意

08:45.540 --> 08:48.240
这里面我们可以用这样的表达式的结构来写

08:48.940 --> 08:50.640
我们写的方式就是

08:50.640 --> 08:51.640
我们依然

08:51.640 --> 08:52.840
我们用Numbers

08:52.840 --> 08:54.240
就不是这个Numbers吗

08:54.540 --> 08:55.140
Map

08:58.970 --> 08:59.570
Member

09:00.770 --> 09:02.670
我们把里面的数据拿出来

09:03.170 --> 09:04.170
我们把里面数据

09:04.170 --> 09:05.570
每一个数据

09:05.570 --> 09:06.170
注意

09:07.170 --> 09:08.670
你这边写的时候

09:08.670 --> 09:10.570
由于它本身自己

09:10.570 --> 09:13.270
能够把它放置到这个Demo中

09:13.470 --> 09:15.370
但是我现在这边的话

09:15.870 --> 09:17.670
你这边也可以去放置变量

09:17.670 --> 09:18.470
但是我们说

09:18.470 --> 09:20.870
我们在这能不能直接输出

09:21.270 --> 09:23.370
你能不能直接输出在这里面

09:23.870 --> 09:25.270
接用Return

09:26.370 --> 09:27.370
它是一个Map

09:27.970 --> 09:30.970
这个Return不是返回给我最高的一个页面

09:30.970 --> 09:34.470
而是返回给我它现在谁调用Map的这个位置

09:34.770 --> 09:36.670
所以我把后面的这个数值

09:36.770 --> 09:39.670
直接返回到现在的这个View里面

09:40.770 --> 09:41.570
我们来看一下

09:42.170 --> 09:43.270
我把Numbers

09:43.470 --> 09:44.670
就直接这样输出

09:44.670 --> 09:45.470
先看一下

09:45.870 --> 09:47.770
它能不能显示在界面中

09:50.130 --> 09:50.530
看

09:50.830 --> 09:51.830
是不是可以呈现

09:52.130 --> 09:53.230
数字可以出来了

09:53.730 --> 09:54.330
不够

09:55.430 --> 09:56.830
我现在数字出来了

09:56.830 --> 10:08.680
我还需要是由我带上标签的View

10:08.680 --> 10:09.680
带上标签

10:10.280 --> 10:11.580
但是你这样一带标签

10:11.580 --> 10:12.380
你看一下

10:12.580 --> 10:13.980
就会有一个小问题

10:14.680 --> 10:16.280
这个小问题是你的Numbers

10:16.580 --> 10:17.380
你的Numbers

10:17.380 --> 10:18.780
虽然在我们里面

10:18.780 --> 10:21.780
依然呈现了我们现在的100个数字

10:22.080 --> 10:23.180
但是你呈现的时候

10:23.180 --> 10:24.580
由于你加了个标签系统

10:24.580 --> 10:26.480
会认为你是形成了一个字幅串

10:26.480 --> 10:28.980
它把这个也认为JSX的一个字幅串结构了

10:29.380 --> 10:35.180
所以你需要在里面再带上一个JSX的一个表达式

10:35.280 --> 10:36.680
然后由于从零开始

10:36.680 --> 10:38.880
我们给它做一个计算加一

10:39.180 --> 10:40.180
先再来看一下

10:43.270 --> 10:44.670
是不是就出来了数字

10:45.070 --> 10:45.670
这样的话

10:45.670 --> 10:46.870
是不是我们现在可以了

10:47.770 --> 10:50.470
这是属于我们可以把组件

10:50.870 --> 10:51.970
随着我们现在

10:51.970 --> 10:52.670
包括是

10:52.870 --> 10:55.170
你觉得老师我能不能完成这里面

10:55.170 --> 10:56.570
是不是可以放组件呢

10:56.770 --> 10:57.770
我们再来看一下

10:58.170 --> 11:00.670
如果现在我这放的是一个普通纸

11:00.670 --> 11:03.470
但是你现在想把组件一起放进来的话

11:03.770 --> 11:04.770
那我们来看一下

11:04.770 --> 11:06.570
我现在要有一个组件了

11:06.770 --> 11:08.670
这组件我传一个数值进去

11:08.970 --> 11:10.170
然后传一个数值进去以后

11:10.170 --> 11:12.570
由组件里面来完成这样一个操作

11:13.770 --> 11:15.870
看一下怎么完成一个组件的操作

11:15.870 --> 11:17.670
我们把这个纸传到组件中

11:17.670 --> 11:18.770
然后组件来完成

11:18.770 --> 11:20.370
首先我们打开一个组件

11:20.670 --> 11:22.370
Customer Compar

11:22.370 --> 11:24.070
这里面我们代码

11:24.070 --> 11:25.970
以前有一些其他代码

11:25.970 --> 11:26.770
我们先删掉

11:26.770 --> 11:28.070
然后我们可以看到

11:28.070 --> 11:29.170
它里面比较干净

11:29.570 --> 11:32.270
然后我们这边简单写个Tester

11:38.300 --> 11:39.200
写个Tester

11:39.600 --> 11:40.800
里面写上你的内容

11:40.800 --> 11:41.500
123

11:41.500 --> 11:42.700
我们先这样写上

11:43.100 --> 11:45.100
然后我们这边做一个小样式

11:45.100 --> 11:46.600
让它形成一个行

11:47.300 --> 11:48.300
这是叫做

11:49.200 --> 11:49.600
1

11:51.000 --> 11:51.800
就写个数字

11:52.100 --> 11:53.200
它形成一个行

11:53.200 --> 11:55.100
所以这边我们去等于

11:55.300 --> 11:56.600
我们里面写个样式

11:56.600 --> 11:57.400
这叫做

12:01.860 --> 12:03.560
这个叫做我们叫做

12:04.460 --> 12:05.260
index吧

12:05.260 --> 12:08.260
因为样式结构本身和外部是不受影响

12:08.260 --> 12:10.360
所以我们单独在它里面订

12:10.760 --> 12:12.260
然后它有一个样式在这

12:12.260 --> 12:13.760
我们订它的index

12:14.360 --> 12:15.260
它是一个行

12:15.260 --> 12:17.460
我们把这个行相对而言

12:17.460 --> 12:18.460
订的比如说

12:18.860 --> 12:20.560
宽度100%

12:20.860 --> 12:21.960
它要做个列表

12:22.360 --> 12:24.360
它的高度我们给它一个

12:25.360 --> 12:26.860
80個APX

12:27.360 --> 12:29.360
然后背景给一个灰色我们是

12:30.360 --> 12:32.920
太深了

12:32.920 --> 12:33.920
给一个小浅一点

12:34.920 --> 12:35.920
给一个浅灰色

12:36.420 --> 12:38.420
然后字体我们给一个黑色

12:38.920 --> 12:41.620
就这样

12:42.620 --> 12:43.620
形成了我们

12:43.620 --> 12:45.620
然后最后我们做个边框

12:45.620 --> 12:47.620
边框的话

12:47.620 --> 12:48.620
做底边

12:50.620 --> 12:51.620
底边框22APX

12:52.620 --> 12:55.250
22APX

12:56.250 --> 12:59.520
然后给一个

12:59.520 --> 13:00.520
然后给一个

13:01.520 --> 13:02.520
深灰色

13:02.520 --> 13:03.520
好就可以了

13:04.520 --> 13:06.520
我们满足了这样的一个格式要求

13:06.520 --> 13:08.520
然后我们把它先神线出来

13:08.520 --> 13:09.520
我们把它给拿过来

13:13.630 --> 13:15.630
in part我们称之为menu

13:16.630 --> 13:18.630
或者称之为就是number list

13:21.580 --> 13:22.580
number list我们写成

13:23.580 --> 13:25.580
然后我们从里边拿

13:25.580 --> 13:27.580
我们拿的方式是点点杠

13:27.580 --> 13:28.580
点点杠

13:28.580 --> 13:29.580
component

13:29.580 --> 13:30.580
然后的话

13:30.580 --> 13:32.580
这里边显示的是

13:33.580 --> 13:35.580
我们做一个什么

13:36.580 --> 13:38.580
customer在customer compare的里面

13:38.580 --> 13:40.580
对吧我们应该是在这个里面

13:40.580 --> 13:42.580
customer compare里面

13:42.580 --> 13:44.580
好拿过来以后

13:44.580 --> 13:46.580
然后我们先显示一下

13:46.580 --> 13:48.580
看一下它的一个显示效果

13:48.580 --> 13:50.580
我们不要放在这里边

13:50.580 --> 13:52.580
我们单独拿出来

13:52.580 --> 13:54.580
看一下我们的样式

13:54.580 --> 13:59.320
这边有一个错

13:59.320 --> 14:00.320
我们看一下

14:01.320 --> 14:05.790
它是我里面代码的问题吗

14:05.790 --> 14:06.790
路径找不到

14:06.790 --> 14:08.790
它说这个路径

14:08.790 --> 14:09.790
还得往下走一趟

14:09.790 --> 14:10.790
刚才没打出来吗

14:10.790 --> 14:16.920
好我们来看一下

14:17.920 --> 14:19.920
就是这个

14:19.920 --> 14:21.920
我们把它呈现出来了

14:21.920 --> 14:22.920
那么数字的话

14:22.920 --> 14:23.920
我们让它往下一点点

14:23.920 --> 14:24.920
居中就行

14:24.920 --> 14:28.290
那么最简单的方式是啥

14:28.290 --> 14:30.290
航高设定一个对不对

14:31.290 --> 14:33.290
light height

14:33.290 --> 14:34.290
80rpx

14:35.290 --> 14:36.290
这样就可以了

14:36.290 --> 14:38.290
然后我们再过一下页面

14:39.290 --> 14:40.290
ok

14:45.420 --> 14:46.420
packing left

14:46.420 --> 14:48.420
然后packing left

14:48.420 --> 14:50.420
我们离左边离开

14:50.420 --> 14:52.420
30rpx

14:52.420 --> 14:57.520
然后这边我们再有一个

14:57.520 --> 15:06.360
镜头幅

15:06.360 --> 15:08.360
然后给它定一个

15:08.360 --> 15:09.360
class name

15:09.360 --> 15:11.360
我们称它为什么

15:11.360 --> 15:15.850
arrow

15:15.850 --> 15:22.430
定一个镜头

15:22.430 --> 15:24.430
这镜头我们让它

15:26.430 --> 15:28.430
不一定要到全右边去

15:28.430 --> 15:32.640
我们只让它显示一下

15:32.640 --> 15:38.640
我们做一个

15:38.640 --> 15:39.640
我们试一下

15:39.640 --> 15:40.640
我们这样

15:40.640 --> 15:45.610
我们直接给它

15:45.610 --> 15:46.610
right

15:46.610 --> 15:47.610
往右边放

15:47.610 --> 15:53.100
好我们看看效果

15:53.100 --> 16:05.050
我们的镜头幅呢

16:05.050 --> 16:07.050
我们让它字体也成黑色

16:07.050 --> 16:14.360
先出来

16:14.360 --> 16:15.360
出来了

16:15.360 --> 16:16.360
ok

16:16.360 --> 16:17.360
你加一个

16:17.360 --> 16:18.360
在它的幅上面

16:18.360 --> 16:21.730
我们加一个position

16:21.730 --> 16:22.730
在它上面

16:22.730 --> 16:24.730
我们加一个position的

16:24.730 --> 16:25.730
absolutio

16:27.730 --> 16:31.810
我们加一个absolutio

16:31.810 --> 16:33.810
这样加好以后的话

16:33.810 --> 16:35.810
我们再做一个

16:35.810 --> 16:36.810
right

16:36.810 --> 16:38.810
我们给它个20rpx

16:38.810 --> 16:43.660
好现在再来看一下

16:43.660 --> 16:44.660
出来了吧

16:44.660 --> 16:45.660
ok

16:45.660 --> 16:46.660
好了

16:46.660 --> 16:48.660
那我们警觉来看

16:48.660 --> 16:49.660
看到了

16:49.660 --> 16:50.660
nonlister

16:50.660 --> 16:51.660
它最后显示出来

16:51.660 --> 16:53.660
是这样的一个格式

16:53.660 --> 16:56.660
那我们就应该把它放到我们的

16:56.660 --> 16:57.660
map里面去

16:57.660 --> 17:03.920
我们在这进行替换

17:03.920 --> 17:04.920
待会我们把return

17:04.920 --> 17:05.920
下面一个擦掉

17:05.920 --> 17:07.920
那么你们看到的是呢

17:07.920 --> 17:08.920
就是

17:08.920 --> 17:09.920
我里面要的值

17:09.920 --> 17:10.920
这个值呢

17:10.920 --> 17:12.920
我要通过外部传输进来

17:12.920 --> 17:15.680
那我们说

17:15.680 --> 17:17.680
它里面所看到的这个1

17:17.680 --> 17:19.680
我应该是通过什么

17:19.680 --> 17:22.500
distant

17:22.500 --> 17:23.500
properth

17:23.500 --> 17:24.500
点

17:24.500 --> 17:25.500
比如说number

17:25.500 --> 17:27.500
这样一个变量进来

17:27.500 --> 17:29.500
那么这个number

17:29.500 --> 17:30.500
应该就在这边

17:30.500 --> 17:34.520
等于

17:34.520 --> 17:36.520
我们把这个number1给它

17:36.520 --> 17:44.650
是吧

17:44.650 --> 17:45.650
这样的一个结构

17:45.650 --> 17:50.500
那我们来看一下页面

17:50.500 --> 17:51.500
出来了吧

17:51.500 --> 17:52.500
好

17:52.500 --> 17:54.500
我们把它做成这样的一个格式了

17:54.500 --> 17:56.500
所以意味着

17:56.500 --> 17:59.500
我们其实是可以去做一个简单的

17:59.500 --> 18:00.500
这个样式

18:00.500 --> 18:02.500
我这边只是做了一个简单的

18:02.500 --> 18:03.500
这样的

18:03.500 --> 18:04.500
一个

18:04.500 --> 18:05.500
可点击的区域

18:05.500 --> 18:06.500
然后呢

18:06.500 --> 18:07.500
我们把所选的内容

18:07.500 --> 18:10.500
可以通过这样的一个属性的方式

18:10.500 --> 18:11.500
传给我们的组建

18:11.500 --> 18:14.500
然后组建在接收到这个值以后的话

18:14.500 --> 18:15.500
那么很简单

18:15.500 --> 18:18.500
它只需要去把你放置在你现在

18:18.500 --> 18:20.500
所组合的这个页面的

18:20.500 --> 18:21.500
我们所需要的位置

18:21.500 --> 18:22.500
就可以了

18:22.500 --> 18:23.500
对吧

18:23.500 --> 18:24.500
这样的话

18:24.500 --> 18:25.500
是不是就出来了

18:25.500 --> 18:26.500
所以我们讲

18:26.500 --> 18:27.500
组建的

18:27.500 --> 18:29.500
特别是在列表上面

18:29.500 --> 18:30.500
第二块内容

18:30.500 --> 18:31.500
我们就说到了

18:31.500 --> 18:32.500
我们来看

18:32.500 --> 18:33.500
我们说到

18:33.500 --> 18:34.500
我们可以把Random中

18:34.500 --> 18:36.500
带入JSS的内容

18:36.500 --> 18:37.500
进行渲染

18:37.500 --> 18:38.500
这是我们刚才说的

18:38.500 --> 18:39.500
对吧

18:39.500 --> 18:40.500
我们把这块内容

18:40.500 --> 18:41.500
作为组建放进去

18:41.500 --> 18:42.500
那么这边

18:42.500 --> 18:43.500
我们把它一起

18:43.500 --> 18:45.500
作为渲染结构出来

18:45.500 --> 18:46.500
好

18:46.500 --> 18:48.500
我们再来看

18:48.500 --> 18:49.500
第三个

18:49.500 --> 18:51.500
key和

18:51.500 --> 18:53.500
那个tar key

18:53.500 --> 18:54.500
tar key和key的话呢

18:54.500 --> 18:56.500
它主要的这个点是在哪里

18:56.500 --> 18:57.500
就是这边

18:57.500 --> 18:58.500
虽然显示了

18:58.500 --> 18:59.500
好

18:59.500 --> 19:01.500
我们把它的console给隐藏掉

19:01.500 --> 19:03.500
把它给先隐藏了

19:03.500 --> 19:07.940
那么我们来看一下页面

19:07.940 --> 19:08.940
很正常的这个数据显示

19:08.940 --> 19:09.940
也没有抱错

19:09.940 --> 19:10.940
但是请注意

19:10.940 --> 19:11.940
这个位置

19:11.940 --> 19:12.940
这个位置

19:12.940 --> 19:14.940
它有一个警告

19:14.940 --> 19:15.940
这个警告呢

19:15.940 --> 19:16.940
是这样说的

19:16.940 --> 19:17.940
它指向于

19:17.940 --> 19:18.940
当前的这个

19:18.940 --> 19:19.940
它说

19:19.940 --> 19:22.940
now you can provide a tab

19:22.940 --> 19:24.940
你可以去对它加载一个

19:24.940 --> 19:26.940
这边用了一个v4

19:26.940 --> 19:28.940
它用了一个manualist

19:28.940 --> 19:29.940
是一个叫做

19:29.940 --> 19:31.940
我们的微信4

19:31.940 --> 19:32.940
但是一旦用到

19:32.940 --> 19:34.940
微信4的时候的话呢

19:34.940 --> 19:35.940
那么对微信来讲

19:35.940 --> 19:37.940
它希望你加一个

19:37.940 --> 19:39.940
微信key

19:39.940 --> 19:40.940
这样的话

19:40.940 --> 19:41.940
能够唯一去代表

19:41.940 --> 19:43.940
这一条数据

19:43.940 --> 19:45.940
所以对于它来讲的话呢

19:45.940 --> 19:47.940
系统希望你给一个key

19:47.940 --> 19:49.940
那么这个key怎么给呢

19:49.940 --> 19:51.940
我们说的key本身自己

19:51.940 --> 19:53.940
我们说明一下

19:53.940 --> 19:55.940
它是付给我们

19:55.940 --> 19:57.940
现在整个这个操作对象

19:57.940 --> 19:58.940
然后呢

19:58.940 --> 19:59.940
告知它

19:59.940 --> 20:01.940
这是唯一的一个数据记录

20:01.940 --> 20:03.940
所以我们第一种的给法

20:03.940 --> 20:05.940
就直接给一个key

20:05.940 --> 20:06.940
然后这个key呢

20:06.940 --> 20:07.940
我们需要给一个

20:07.940 --> 20:10.940
能代表这行唯一数据的

20:10.940 --> 20:12.940
比如说number

20:12.940 --> 20:13.940
肯住保存

20:13.940 --> 20:15.940
然后现在你运行一下

20:16.940 --> 20:17.940
咱们再来看

20:17.940 --> 20:18.940
是否能正常显示

20:18.940 --> 20:19.940
这边是否报

20:19.940 --> 20:20.940
看一下

20:20.940 --> 20:21.940
这边是不报错了

20:21.940 --> 20:22.940
或者说

20:22.940 --> 20:23.940
它不报警告

20:23.940 --> 20:25.940
我们出去看一下

20:25.940 --> 20:26.940
在你的manualist上面

20:26.940 --> 20:27.940
我们注意一下

20:27.940 --> 20:29.940
在它原码上面的话呢

20:29.940 --> 20:31.940
这个key是不会在这上面

20:31.940 --> 20:32.940
去呈现的

20:32.940 --> 20:34.940
这点你需要了解

20:34.940 --> 20:35.940
你看到这上面

20:35.940 --> 20:37.940
我们完全打开

20:37.940 --> 20:41.440
你有看到那个key吗

20:41.440 --> 20:42.440
没有

20:42.440 --> 20:44.440
这个key的作用就是

20:44.440 --> 20:45.440
能够去确保

20:45.440 --> 20:47.440
这条记录的唯一性

20:47.440 --> 20:49.440
它是对于程序

20:49.440 --> 20:51.440
特别是对于我们的

20:51.440 --> 20:52.440
整个开发

20:52.440 --> 20:53.440
后续来而言的

20:53.440 --> 20:56.440
它并不是给你做展示的

20:56.440 --> 20:58.440
所以这部分呢

20:58.440 --> 21:00.440
包括是我们后期

21:00.440 --> 21:02.440
用到比如说

21:02.440 --> 21:03.440
增减元素

21:03.440 --> 21:04.440
包括是我们用到

21:04.440 --> 21:06.440
我们每一个的元素的

21:06.440 --> 21:07.440
一些复制的确定

21:07.440 --> 21:08.440
等价于

21:08.440 --> 21:09.440
凡是针对这条记录的

21:09.440 --> 21:10.440
一些值

21:10.440 --> 21:11.440
我们都可以用这个key

21:11.440 --> 21:13.440
后续来做操作

21:13.440 --> 21:14.440
那么tarokey呢

21:14.440 --> 21:16.440
tarokey和key基本上是保持一样

21:16.440 --> 21:17.440
只不过tarokey的

21:17.440 --> 21:20.440
它是更适用于原生开发

21:20.440 --> 21:22.440
就是小程序的原生开发

21:22.440 --> 21:23.440
确保每一个

21:23.440 --> 21:24.440
我们所谓的

21:24.440 --> 21:26.440
我们的微信key的话呢

21:26.440 --> 21:27.440
其实和tarokey是一样

21:27.440 --> 21:29.440
所以你在这个位置上呢

21:29.440 --> 21:33.720
你可以

21:33.720 --> 21:35.720
tarokey

21:35.720 --> 21:37.720
你可以把这个写上

21:37.720 --> 21:38.720
你这样去写的话

21:38.720 --> 21:39.720
其实和你刚才

21:39.720 --> 21:42.720
我们所看到的这个效果

21:42.720 --> 21:43.720
让它运行一下

21:43.720 --> 21:45.720
其实是一样的

21:45.720 --> 21:47.720
你看这边

21:47.720 --> 21:49.720
和刚才打开的结构是一样的

21:49.720 --> 21:51.720
所以我们讲一下

21:51.720 --> 21:52.720
就是当前

21:52.720 --> 21:54.720
你正在运行的整个

21:54.720 --> 21:55.720
这一部分内容

21:55.720 --> 21:57.720
只要你加一个key

21:57.720 --> 21:59.720
无论是key还是tarokey

21:59.720 --> 22:01.720
那么本身tarokeys

22:01.720 --> 22:02.720
这边少一个s

22:02.720 --> 22:04.720
应该是tarokeys

22:04.720 --> 22:05.720
tarokey

22:05.720 --> 22:07.720
它全称叫tarokeys

22:07.720 --> 22:09.720
就这样行了

22:09.720 --> 22:10.720
那么你加个key和tarokeys

22:10.720 --> 22:12.720
在至少现在的

22:12.720 --> 22:15.720
针对于当前这个元素的操作上面

22:15.720 --> 22:17.720
这个是没有什么问题的

22:17.720 --> 22:20.720
那么同时这边再说明一下

22:20.720 --> 22:22.720
就是key元素

22:22.720 --> 22:24.720
key元素我们并没有要求

22:24.720 --> 22:26.720
你key元素一定要是一个叫做

22:26.720 --> 22:28.720
全聚微信

22:28.720 --> 22:30.720
我们key元素只要做在

22:30.720 --> 22:32.720
当前页面中

22:32.720 --> 22:35.720
兄弟元素之间的微信就可以了

22:35.720 --> 22:37.720
兄弟之间的微信就可以了

22:37.720 --> 22:39.720
那么什么叫兄弟之间

22:39.720 --> 22:41.720
就上有一个key

22:41.720 --> 22:43.720
或者甚至上有一个map

22:43.720 --> 22:45.720
下有一个map的情况

22:45.720 --> 22:46.720
那么这种时候

22:46.720 --> 22:49.720
我们就可以利用当前的这个叫做

22:49.720 --> 22:50.720
key的方式

22:50.720 --> 22:52.720
只要确保其唯一的当前这一段

22:52.720 --> 22:53.720
就可以

22:53.720 --> 22:55.720
好我们来做一下

22:55.720 --> 22:57.720
我们还可以单独再创建一个

22:57.720 --> 22:59.720
我们现在的话只要在

22:59.720 --> 23:01.720
界面中用吧

23:01.720 --> 23:03.720
我们直接跑到界面中

23:03.720 --> 23:05.720
我们打开

23:05.720 --> 23:06.720
about

23:06.720 --> 23:08.720
然后我们把里面代码

23:08.720 --> 23:10.720
简单做一个修改

23:11.720 --> 23:14.720
把其他不用到的我们先删掉

23:14.720 --> 23:15.720
比如说

23:15.720 --> 23:17.720
构造里面把这些删掉

23:17.720 --> 23:20.720
然后我们有一个go to index

23:20.720 --> 23:22.720
这个我们暂时不用

23:22.720 --> 23:26.280
生命周期跳转一句不用

23:26.280 --> 23:30.110
然后呢我们这边

23:30.110 --> 23:33.110
把里面的这个也删掉

23:33.110 --> 23:35.110
就留了一个view

23:35.110 --> 23:36.110
保存

23:36.110 --> 23:38.110
然后咱们把这个about

23:38.110 --> 23:40.110
放在第1个阵线

23:40.110 --> 23:50.840
about放在第1个

23:50.840 --> 23:53.840
那么我们里面只要给他about写上

23:53.840 --> 23:54.840
看一下

23:54.840 --> 23:56.840
是不是到第1个来了

23:57.840 --> 23:58.840
说吧

23:58.840 --> 24:01.800
对吧

24:01.800 --> 24:02.800
about到第1个来了

24:02.800 --> 24:03.800
好

24:03.800 --> 24:06.800
我们就针对他来做一个简单的一个

24:06.800 --> 24:08.800
就是多key的操作

24:08.800 --> 24:11.800
也就是意味着多map的操作

24:11.800 --> 24:12.800
首先第1点

24:12.800 --> 24:14.800
我们在construct里面

24:14.800 --> 24:15.800
咱们设定一个

24:15.800 --> 24:17.800
this.stater

24:17.800 --> 24:18.800
好

24:18.800 --> 24:20.800
如果你没有样式

24:20.800 --> 24:21.800
我们说明一下

24:21.800 --> 24:22.800
我们有样式

24:22.800 --> 24:23.800
或者称之为

24:23.800 --> 24:24.800
go to函数

24:24.800 --> 24:26.800
你就在go to函数里面去设定

24:26.800 --> 24:27.800
如果没有go to函数的话呢

24:27.800 --> 24:30.800
那么你大可是在我们的类中设定

24:30.800 --> 24:32.800
你在这设也可以

24:32.800 --> 24:34.800
比如说你就订一个

24:34.800 --> 24:35.800
stater

24:35.800 --> 24:38.800
就这么大大方方的订一个出来

24:38.800 --> 24:39.800
然后在里面

24:39.800 --> 24:40.800
我们去订上我们所需要的

24:40.800 --> 24:43.800
比如说post this

24:43.800 --> 24:45.800
然后给参数

24:45.800 --> 24:48.800
第1个我们是id等于1

24:48.800 --> 24:53.840
title我们给出

24:53.840 --> 24:54.840
Hello

24:54.840 --> 24:57.210
word

24:57.210 --> 25:03.470
content内容

25:03.470 --> 25:05.470
welcome to learning

25:05.470 --> 25:07.470
学习

25:07.470 --> 25:08.470
好吧

25:08.470 --> 25:09.470
我们给出这样一趟

25:09.470 --> 25:11.470
紧接着我们再给一个

25:11.470 --> 25:12.470
给两个

25:12.470 --> 25:14.470
id r

25:14.470 --> 25:17.550
title

25:17.550 --> 25:23.440
install

25:23.440 --> 25:26.440
content

25:26.440 --> 25:34.880
you can install

25:34.880 --> 25:36.880
我们先写两句话

25:36.880 --> 25:37.880
然后这个呢

25:37.880 --> 25:39.880
就完成了一个初始数组

25:39.880 --> 25:41.880
我们把它放在这上面

25:41.880 --> 25:42.880
stater上面

25:42.880 --> 25:44.880
紧接着我们在randow中

25:44.880 --> 25:45.880
go to函数

25:45.880 --> 25:49.700
现在我们暂时不用用

25:49.700 --> 25:52.700
然后这个我们暂时也没有

25:52.700 --> 25:54.700
我们在randow里面

25:54.700 --> 25:55.700
randow里面的话呢

25:55.700 --> 25:57.700
首先我们做第一件事

25:57.700 --> 25:59.700
我们创建一个常量

25:59.700 --> 26:02.700
当然这个常量我们直接去取得

26:02.700 --> 26:04.700
我们要拿到的是

26:04.700 --> 26:06.700
this.stater里面的内容

26:06.700 --> 26:08.700
但是我不去一个个找

26:08.700 --> 26:09.700
我直接把这个post

26:09.700 --> 26:11.700
以定名的方式取出来

26:11.700 --> 26:12.700
定死它的名字

26:12.700 --> 26:13.700
显示敲坐

26:13.700 --> 26:15.700
我们把它取出来

26:15.700 --> 26:16.700
然后呢

26:16.700 --> 26:17.700
我们下面写上

26:17.700 --> 26:25.780
conster

26:25.780 --> 26:26.780
stater bar

26:26.780 --> 26:35.980
我们把里面的值给拿出来

26:35.980 --> 26:36.980
也就是说

26:36.980 --> 26:38.980
我们在这里面设定一个模型

26:38.980 --> 26:40.980
也就是我们大家所谓的一个

26:40.980 --> 26:42.980
显示的一个结构

26:42.980 --> 26:44.980
我们把jaxxl

26:44.980 --> 26:45.980
结构写在这

26:45.980 --> 26:49.360
里面首先第一点

26:49.360 --> 26:50.360
我们去循环

26:50.360 --> 26:56.230
当前的这个post

26:56.230 --> 26:57.230
post

26:57.230 --> 26:58.230
我们不要换下来

26:58.230 --> 27:01.920
我们放在上面做

27:01.920 --> 27:04.920
post.map

27:04.920 --> 27:06.920
然后在这个里面

27:06.920 --> 27:09.920
我们去完成单个值的操作

27:09.920 --> 27:13.640
map

27:13.640 --> 27:14.640
然后呢

27:14.640 --> 27:16.640
我们写上

27:16.640 --> 27:18.640
这个我们写post

27:18.640 --> 27:19.640
单值

27:19.640 --> 27:20.640
单值操作

27:20.640 --> 27:22.640
然后这边我们打上一个

27:22.640 --> 27:23.640
箭头服

27:23.640 --> 27:24.640
那么注意

27:24.640 --> 27:25.640
如果你希望

27:25.640 --> 27:28.640
每一个的我们post里面的值

27:28.640 --> 27:30.640
需要操作于当前的

27:30.640 --> 27:32.640
一个jaxx对象的话

27:32.640 --> 27:34.640
那么你直接在这后面

27:34.640 --> 27:36.640
就写上你jaxxl代码

27:36.640 --> 27:38.640
我们一般有时候会这样写

27:38.640 --> 27:40.640
但是我们也可以省掉

27:40.640 --> 27:41.640
我们直接在里面

27:41.640 --> 27:44.640
把我们的jaxxl代码写上

27:44.640 --> 27:46.640
taxter

27:46.640 --> 27:48.640
首先第一步

27:48.640 --> 27:49.640
里面写上

27:49.640 --> 27:51.640
你现在所需要用到的

27:51.640 --> 27:52.640
poster里面的

27:52.640 --> 27:53.640
title

27:53.640 --> 27:54.640
就是把这样

27:54.640 --> 27:56.640
部分内容给拿出来

27:56.640 --> 27:57.640
对吧

27:57.640 --> 27:58.640
同时我们还可以

27:58.640 --> 28:00.640
那么由于你用了map

28:00.640 --> 28:02.640
所以对配对

28:02.640 --> 28:03.640
mapkey

28:03.640 --> 28:04.640
你写上

28:04.640 --> 28:07.470
然后什么

28:07.470 --> 28:09.470
post里面有个id

28:09.470 --> 28:10.470
我们写上

28:10.470 --> 28:11.470
这样的话

28:11.470 --> 28:12.470
是不是我现在有一个

28:12.470 --> 28:14.470
全局唯一标识服务

28:14.470 --> 28:15.470
或者称之为

28:15.470 --> 28:17.470
当前的这个map

28:17.470 --> 28:18.470
里面的唯一标识服务

28:18.470 --> 28:19.470
post id

28:19.470 --> 28:20.470
然后它的呈现

28:20.470 --> 28:22.470
是用title的方式来做

28:22.470 --> 28:24.470
我后面的把它给

28:24.470 --> 28:25.470
收一下

28:25.470 --> 28:26.470
好

28:26.470 --> 28:28.470
这是属于第一个模型

28:28.470 --> 28:30.470
我们把这个内容放在

28:30.470 --> 28:33.470
叫做sliderbar里面

28:33.470 --> 28:35.470
紧接着我们继续来

28:35.470 --> 28:37.470
我们把当前的

28:37.470 --> 28:38.470
这个内容

28:38.470 --> 28:40.470
整个这个操作

28:40.470 --> 28:42.470
我们再做另外一套

28:42.470 --> 28:44.470
这是属于叫sliderbar

28:44.470 --> 28:47.470
我们再写一个conster

28:47.470 --> 28:50.470
content

28:50.470 --> 28:53.470
postus.map

28:53.470 --> 28:56.470
postus.map

28:56.470 --> 28:57.470
好

28:57.470 --> 28:58.470
我们一起来看

28:58.470 --> 29:00.470
我们把这个

29:00.470 --> 29:02.470
postus.map

29:02.470 --> 29:03.470
我们

29:03.470 --> 29:05.470
打上post

29:05.470 --> 29:10.380
打过号

29:10.380 --> 29:12.380
里面直接return

29:12.380 --> 29:14.380
我们返回

29:14.380 --> 29:15.380
返回你现在

29:15.380 --> 29:17.380
所需要执行的

29:17.380 --> 29:19.380
我们的

29:19.380 --> 29:24.680
jxview

29:24.680 --> 29:26.680
我们把它换下来

29:26.680 --> 29:35.000
写在这

29:35.000 --> 29:40.750
这样去写view

29:40.750 --> 29:41.750
然后里面呢

29:41.750 --> 29:43.750
我们写上text

29:49.260 --> 29:51.260
由于它依然循环的是postus

29:51.260 --> 29:53.260
依然循环postus

29:53.260 --> 29:54.260
只不过呢

29:54.260 --> 29:55.260
它里面我们现在

29:55.260 --> 29:57.260
这边是不做我们的return

29:57.260 --> 29:58.260
它直接把这个内容

29:58.260 --> 30:00.260
可以直接呈现

30:00.260 --> 30:01.260
这部分呢

30:01.260 --> 30:02.260
我们写return的返回

30:02.260 --> 30:03.260
其实这两个结构

30:03.260 --> 30:04.260
是一样的

30:04.260 --> 30:05.260
我们呢

30:05.260 --> 30:06.260
把它这个内容

30:06.260 --> 30:07.260
依然是用

30:07.260 --> 30:09.260
jxview

30:09.260 --> 30:11.260
post里面

30:11.260 --> 30:12.260
然后点

30:12.260 --> 30:14.260
title

30:14.260 --> 30:15.260
同样再来

30:15.260 --> 30:23.530
post

30:23.530 --> 30:24.530
点

30:24.530 --> 30:26.530
content

30:26.530 --> 30:27.530
把这两部分拿出来

30:27.530 --> 30:29.530
和这个基本差不多了

30:29.530 --> 30:30.530
然后别忘了

30:30.530 --> 30:32.530
我们一定有一个key

30:32.530 --> 30:33.530
然后呢

30:33.530 --> 30:35.530
把我们的post

30:35.530 --> 30:37.530
点

30:37.530 --> 30:38.530
id

30:38.530 --> 30:39.530
拿过来

30:39.530 --> 30:41.530
形成这三个

30:42.530 --> 30:43.530
好

30:43.530 --> 30:44.530
那么这样写好以后呢

30:44.530 --> 30:45.530
我们下面

30:45.530 --> 30:47.530
就回到return里面来了

30:47.530 --> 30:49.530
我们return本身自己

30:49.530 --> 30:50.530
先做一个

30:50.530 --> 30:52.530
把里面的删掉

30:52.530 --> 30:54.530
先做一个大扩号

30:54.530 --> 30:56.530
表示整个区间在这里面

30:56.530 --> 31:01.440
整个区间在这里面

31:01.440 --> 31:02.440
然后

31:02.440 --> 31:03.440
我们把上面

31:03.440 --> 31:04.440
第一个

31:04.440 --> 31:06.440
slidebar

31:06.440 --> 31:08.440
我们把它作为一个简单的结构

31:08.440 --> 31:10.440
把它往这儿放

31:11.440 --> 31:12.440
诶

31:12.440 --> 31:13.440
注意啊

31:13.440 --> 31:14.440
因为我们讲过

31:14.440 --> 31:15.440
对jxx的整个

31:15.440 --> 31:16.440
这语法来讲

31:16.440 --> 31:18.440
它是可以放入这样一个

31:18.440 --> 31:19.440
常量的

31:19.440 --> 31:20.440
只不过这个常量

31:20.440 --> 31:22.440
由于你后面使用了map

31:22.440 --> 31:24.440
它里面会不断的放入

31:24.440 --> 31:25.440
我们现在

31:25.440 --> 31:27.440
它返回一个新速组的话

31:27.440 --> 31:28.440
把整个这个

31:28.440 --> 31:29.440
jxx的问题

31:29.440 --> 31:30.440
往里面放了

31:30.440 --> 31:32.440
所以这边的呈现

31:32.440 --> 31:34.440
就是这边循环玩的结果

31:34.440 --> 31:35.440
理解吧

31:35.440 --> 31:36.440
好

31:36.440 --> 31:40.800
第二个继续

31:40.800 --> 31:41.800
我们这边呢

31:41.800 --> 31:42.800
我们可以

31:44.800 --> 31:45.800
分开一点

31:45.800 --> 31:47.800
我们做一个view

31:47.800 --> 31:53.420
我们做个view

31:54.420 --> 31:55.420
这是换行

31:55.420 --> 31:57.420
我们写上一杠

31:57.420 --> 32:00.310
第二个再来

32:00.310 --> 32:01.310
我们把

32:01.310 --> 32:04.680
下面的

32:04.680 --> 32:05.680
content

32:05.680 --> 32:06.680
是它

32:06.680 --> 32:08.680
把它也输出在这儿

32:09.680 --> 32:10.680
那么它里面

32:10.680 --> 32:11.680
依然是map

32:11.680 --> 32:12.680
会返回一个新速组

32:12.680 --> 32:13.680
每次这边的数据的话

32:13.680 --> 32:14.680
都会通过

32:14.680 --> 32:16.680
当前的post数据拿出来

32:16.680 --> 32:19.680
然后返回到我们的contenter里面

32:19.680 --> 32:20.680
这样的话呢

32:20.680 --> 32:21.680
我们大家就可以明确了

32:21.680 --> 32:23.680
我们来看一下效果

32:23.680 --> 32:24.680
首先看一下

32:24.680 --> 32:25.680
我们上面的

32:25.680 --> 32:27.680
我们上面是hello

32:27.680 --> 32:28.680
我们来看一下

32:28.680 --> 32:32.960
整个这个结构体

32:32.960 --> 32:33.960
在stator里面

32:33.960 --> 32:34.960
我们这边

32:34.960 --> 32:36.960
直接拿出post

32:36.960 --> 32:37.960
然后拿出以后的话呢

32:37.960 --> 32:39.960
然后我们把里面的post

32:39.960 --> 32:40.960
内容

32:40.960 --> 32:42.960
直接以post的方式拆开

32:42.960 --> 32:44.960
然后这样去写在我们这里边

32:44.960 --> 32:45.960
那么看一下

32:45.960 --> 32:46.960
这里面一个是hello

32:46.960 --> 32:48.960
一个是welcome to learning

32:48.960 --> 32:49.960
对不对

32:49.960 --> 32:50.960
那么这里的话呢

32:50.960 --> 32:51.960
我们看到

32:51.960 --> 32:52.960
由于我这里边的

32:52.960 --> 32:53.960
所有的循环

32:53.960 --> 32:55.960
针对text来讲的

32:55.960 --> 32:56.960
所以它的呈现

32:56.960 --> 32:58.960
就会呈现出hello

32:58.960 --> 33:01.960
然后后面给出的是hello word

33:01.960 --> 33:02.960
instore

33:02.960 --> 33:03.960
是吧

33:03.960 --> 33:04.960
这个是这个词对吧

33:04.960 --> 33:06.960
这两个的话应该是ok了

33:06.960 --> 33:07.960
继续往下看

33:07.960 --> 33:08.960
我们回到它里面

33:08.960 --> 33:10.960
这个是content

33:10.960 --> 33:11.960
它里面没有呈现

33:11.960 --> 33:12.960
那我们来看一下

33:12.960 --> 33:14.960
它的结构

33:14.960 --> 33:16.960
我们这边完成一个post

33:16.960 --> 33:18.960
然后它的map

33:18.960 --> 33:20.960
然后它直接返回一个return

33:20.960 --> 33:21.960
这种情况下呢

33:21.960 --> 33:23.960
我们只需要把

33:23.960 --> 33:25.960
第一行

33:25.960 --> 33:27.960
我们把第一行放在return后面

33:27.960 --> 33:28.960
return后面

33:28.960 --> 33:30.960
其实打了一个回车服

33:30.960 --> 33:32.960
它就呈现回车效果了

33:32.960 --> 33:33.960
我们把回车服

33:33.960 --> 33:34.960
去掉

33:34.960 --> 33:35.960
把当前的后面一行

33:35.960 --> 33:36.960
放置上来

33:36.960 --> 33:37.960
在return同行上面

33:37.960 --> 33:38.960
此时你来看

33:38.960 --> 33:40.960
hello word

33:40.960 --> 33:41.960
对不对

33:41.960 --> 33:42.960
它第一个内容

33:42.960 --> 33:43.960
呈现出来了

33:43.960 --> 33:45.960
post id

33:45.960 --> 33:46.960
代表的是

33:46.960 --> 33:47.960
这个title

33:47.960 --> 33:48.960
第二个是我们这部分

33:48.960 --> 33:49.960
那么我们可以

33:49.960 --> 33:51.960
做一个非常简单的

33:51.960 --> 33:52.960
注意

33:52.960 --> 33:53.960
它为什么能够

33:53.960 --> 33:54.960
换成两行

33:54.960 --> 33:55.960
其实很简单

33:55.960 --> 33:56.960
因为它我们循环的

33:56.960 --> 33:57.960
这块内容是view

33:57.960 --> 33:58.960
看到吗

33:58.960 --> 33:59.960
map的view

33:59.960 --> 34:00.960
现在它本身来讲

34:00.960 --> 34:01.960
它可以换成

34:01.960 --> 34:02.960
两行显示

34:02.960 --> 34:04.960
在上面的这个的话

34:04.960 --> 34:05.960
其实我们在上面

34:05.960 --> 34:06.960
做的时候

34:06.960 --> 34:07.960
由于我们循环的不是view

34:07.960 --> 34:08.960
我们循环的是

34:08.960 --> 34:09.960
里面这个tester

34:09.960 --> 34:10.960
那么你想做的

34:10.960 --> 34:11.960
更漂亮的话

34:11.960 --> 34:13.960
你就可以把它给放进去

34:13.960 --> 34:15.960
你可以把它给放进去

34:15.960 --> 34:17.960
这东西是这么说的

34:17.960 --> 34:18.960
那么你来看一下

34:18.960 --> 34:19.960
你发现吗

34:19.960 --> 34:21.960
它为什么抱错

34:21.960 --> 34:22.960
你回忆一下

34:22.960 --> 34:23.960
为什么

34:23.960 --> 34:27.780
能给出个理由吗

34:28.780 --> 34:30.780
这是randle

34:30.780 --> 34:32.780
randle

34:32.780 --> 34:34.780
本身在操作过程中

34:34.780 --> 34:35.780
为什么

34:35.780 --> 34:36.780
这边

34:36.780 --> 34:37.780
我们放上去以后

34:37.780 --> 34:38.780
它就放进去以后

34:38.780 --> 34:39.780
就抱错它不能直接

34:39.780 --> 34:40.780
使用这样的格式

34:40.780 --> 34:42.780
因为你本身需要一个

34:42.780 --> 34:43.780
跟路景

34:43.780 --> 34:45.780
你本身需要一个跟路景

34:45.780 --> 34:47.780
那么这样的话

34:47.780 --> 34:48.780
导致我们现在

34:48.780 --> 34:52.860
需要这样一个view

34:52.860 --> 34:53.860
好了

34:53.860 --> 34:54.860
那么这样的话

34:54.860 --> 34:55.860
我们就完成了

34:55.860 --> 34:56.860
一个最简单的

34:56.860 --> 34:57.860
一个输出

34:57.860 --> 34:58.860
也就是意味着

34:58.860 --> 34:59.860
在同时

34:59.860 --> 35:01.860
两个map的情况下面

35:01.860 --> 35:03.860
我们并没有要求

35:03.860 --> 35:04.860
post ID

35:04.860 --> 35:05.860
一定要是不一样

35:05.860 --> 35:06.860
因为

35:06.860 --> 35:07.860
它只要在当前

35:07.860 --> 35:08.860
这个元素

35:08.860 --> 35:09.860
节点级

35:09.860 --> 35:10.860
也就是整个这map里面

35:10.860 --> 35:11.860
操作回一样

35:11.860 --> 35:12.860
就可以了

35:12.860 --> 35:13.860
包括是这边

35:13.860 --> 35:14.860
也是一样

35:14.860 --> 35:15.860
它操作回一样

35:15.860 --> 35:16.860
就可以运行了

35:16.860 --> 35:17.860
理解吧

35:17.860 --> 35:18.860
这个结构

35:18.860 --> 35:19.860
OK

35:19.860 --> 35:20.860
那我们来看

35:20.860 --> 35:21.860
继续往下

35:21.860 --> 35:22.860
我们本身

35:22.860 --> 35:23.860
我们做到了

35:23.860 --> 35:24.860
我们可以在

35:24.860 --> 35:26.860
不一样的页面中

35:26.860 --> 35:27.860
同一个页面中

35:27.860 --> 35:29.860
用不同的map

35:29.860 --> 35:30.860
可以完成

35:30.860 --> 35:31.860
如果是key

35:31.860 --> 35:32.860
在当前这个元素中

35:32.860 --> 35:33.860
就唯一就可以了

35:33.860 --> 35:34.860
OK

35:34.860 --> 35:36.860
那么key的传直

35:36.860 --> 35:38.860
这个就说明一下

35:38.860 --> 35:40.860
我们讲key的传直

35:40.860 --> 35:41.860
如果你如果是

35:41.860 --> 35:42.860
要操作一个key的话

35:42.860 --> 35:44.860
那么本身这个key

35:44.860 --> 35:45.860
它是作为

35:45.860 --> 35:48.860
当前的一个关键词

35:48.860 --> 35:49.860
也就是意味着

35:49.860 --> 35:50.860
它是唯一确保

35:50.860 --> 35:51.860
一条记录的

35:51.860 --> 35:52.860
它并非是你

35:52.860 --> 35:54.860
进行数据传输的

35:54.860 --> 35:55.860
所以我们来看一下

35:55.860 --> 35:57.860
我们用一个click

35:57.860 --> 35:58.860
然后这边我们写上

35:58.860 --> 35:59.860
一个我们的方法

35:59.860 --> 36:01.860
比如说我们这个handle a value

36:01.860 --> 36:02.860
上面非常简单

36:02.860 --> 36:05.860
我们就是this点handle a value

36:05.860 --> 36:06.860
调用一下它

36:06.860 --> 36:08.860
这边我们呈现一下e

36:08.860 --> 36:13.640
我们来看一下

36:13.640 --> 36:14.640
对它点击一下

36:14.640 --> 36:16.640
你会发现

36:16.640 --> 36:18.640
随便你怎么找

36:18.640 --> 36:21.640
你是找不到这个key的

36:21.640 --> 36:23.640
key它不会自动的

36:23.640 --> 36:25.640
帮你进行数据传送

36:25.640 --> 36:26.640
那么它也不会

36:26.640 --> 36:27.640
帮你进行数据传直

36:27.640 --> 36:29.640
你要获取它的操作

36:29.640 --> 36:31.640
那么你只能是

36:31.640 --> 36:32.640
自己完成

36:32.640 --> 36:33.640
一个

36:33.640 --> 36:34.640
我们比如说

36:34.640 --> 36:36.640
我们自己把这个数据

36:36.640 --> 36:38.640
再次的通过

36:38.640 --> 36:39.640
我们自己定义的变量

36:39.640 --> 36:40.640
进行传送

36:40.640 --> 36:44.600
我们自己定义变量

36:44.600 --> 36:45.600
那么注意

36:45.600 --> 36:46.600
这里边的话

36:46.600 --> 36:47.600
我们就直接这样

36:47.600 --> 36:48.600
datagon就可以了

36:48.600 --> 36:49.600
这样写

36:49.600 --> 36:51.600
然后我们可以看到

36:51.600 --> 36:52.600
我一点下去

36:52.600 --> 36:53.600
一打开

36:53.600 --> 36:54.600
它会在这里面

36:54.600 --> 36:55.600
接到这个ID

36:55.600 --> 36:56.600
对不对

36:56.600 --> 36:57.600
我们同时

36:57.600 --> 36:58.600
再来看

36:58.600 --> 36:59.600
点后面这个

36:59.600 --> 37:00.600
接到了

37:00.600 --> 37:02.600
所以我们讲

37:02.600 --> 37:03.600
记得传直

37:03.600 --> 37:04.600
更确切的讲

37:04.600 --> 37:07.600
是key数据的传递

37:07.600 --> 37:08.600
key数据的传递

37:08.600 --> 37:09.600
是要通过你

37:09.600 --> 37:11.600
现在的传直的方式

37:11.600 --> 37:13.600
传直的其他的一些语法

37:13.600 --> 37:14.600
来完成

37:14.600 --> 37:15.600
key它能确保的是

37:15.600 --> 37:17.600
张田这条记录的一个微信

37:17.600 --> 37:18.600
但是

37:18.600 --> 37:19.600
它无法进行

37:19.600 --> 37:21.600
所谓的一个数据

37:21.600 --> 37:22.600
直接传给你

37:22.600 --> 37:23.600
事件进行操作

37:23.600 --> 37:24.600
这点上面

37:24.600 --> 37:25.600
你是要明确一下

37:25.600 --> 37:26.600
所以我们讲

37:26.600 --> 37:27.600
如果说你现在

37:27.600 --> 37:28.600
当然

37:28.600 --> 37:29.600
选key的时候

37:29.600 --> 37:30.600
也要注意

37:30.600 --> 37:31.600
本身来讲

37:31.600 --> 37:32.600
就是说

37:32.600 --> 37:33.600
里面最好是

37:33.600 --> 37:34.600
可以拿到

37:34.600 --> 37:35.600
比如说

37:35.600 --> 37:37.600
这个记录的一个逐渐

37:37.600 --> 37:38.600
或者说是

37:38.600 --> 37:40.600
就本身有一个ID

37:40.600 --> 37:41.600
但如果你没有的话

37:41.600 --> 37:43.600
那你只要做一件事情

37:43.600 --> 37:44.600
什么呢

37:44.600 --> 37:45.600
就是你自行可以

37:45.600 --> 37:46.600
创建一个key

37:46.600 --> 37:47.600
在你绑定到

37:47.600 --> 37:49.600
我们这个Post

37:49.600 --> 37:51.600
时候的前面

37:51.600 --> 37:52.600
你就可以

37:52.600 --> 37:53.600
应该去创建一个key

37:53.600 --> 37:55.600
或者创建一个ID

37:55.600 --> 37:56.600
唯一代表条记录

37:56.600 --> 37:57.600
那么你不放在这里面

37:57.600 --> 37:58.600
就ok了

37:58.600 --> 38:00.600
是这样的一个元素

38:00.600 --> 38:01.600
那么这就是

38:01.600 --> 38:03.600
我们所谓的一个key值

38:03.600 --> 38:04.600
这个key值

38:04.600 --> 38:06.600
确保记录以后

38:06.600 --> 38:07.600
然后传直操作

38:07.600 --> 38:08.600
这样的结构

38:08.600 --> 38:09.600
我们就能知道

38:09.600 --> 38:10.600
你点了哪一条

38:10.600 --> 38:11.600
对吧

38:11.600 --> 38:12.600
那么后续的操作

38:12.600 --> 38:13.600
你就可以到我们的

38:13.600 --> 38:14.600
这个handle value中

38:15.600 --> 38:16.600
就完成了

38:16.600 --> 38:17.600
ok

38:17.600 --> 38:19.600
这是这边所设计到的

38:19.600 --> 38:20.600
那么这也就是

38:20.600 --> 38:21.600
我们所谓的key的传直

38:21.600 --> 38:22.600
传直

38:22.600 --> 38:24.600
其实就是自定义值的操作

38:24.600 --> 38:25.600
ok

38:25.600 --> 38:26.600
那么列表渲染

38:26.600 --> 38:27.600
本身来说

38:27.600 --> 38:28.600
并不复杂

38:28.600 --> 38:29.600
主要的

38:29.600 --> 38:30.600
我们现在

38:30.600 --> 38:32.600
通过我们的map操作

38:32.600 --> 38:33.600
然后完成对它里面

38:33.600 --> 38:35.600
某一部分数据的更新

38:35.600 --> 38:36.600
只不过呢

38:36.600 --> 38:37.600
这种数据呢

38:37.600 --> 38:38.600
我们把它写成了一个

38:38.600 --> 38:39.600
jxx的形式

38:39.600 --> 38:40.600
jxx的形式

38:40.600 --> 38:41.600
对吧

38:41.600 --> 38:42.600
这样的情况

38:42.600 --> 38:43.600
然后呢

38:43.600 --> 38:44.600
我们现在在运行的时候呢

38:44.600 --> 38:46.600
我们也可以

38:46.600 --> 38:47.600
数据

38:47.600 --> 38:48.600
我直接这里是通过

38:48.600 --> 38:49.600
我们state里面放置的

38:49.600 --> 38:50.600
那么你也可以单独

38:50.600 --> 38:52.600
给它额外放置一个数据

38:52.600 --> 38:53.600
实际形成

38:53.600 --> 38:54.600
我们比较

38:54.600 --> 38:55.600
有一定的

38:55.600 --> 38:56.600
web操作

38:56.600 --> 38:57.600
比如说

38:57.600 --> 38:58.600
我们之前讲过

38:58.600 --> 38:59.600
jx的引入

38:59.600 --> 39:00.600
你直接把那个数据

39:00.600 --> 39:01.600
引进来

39:01.600 --> 39:02.600
是不是可以啊

39:02.600 --> 39:03.600
对吧

39:03.600 --> 39:04.600
这样的操作

39:04.600 --> 39:05.600
完全是可以在你

39:05.600 --> 39:06.600
现在的一个

39:06.600 --> 39:07.600
开发过程中的

39:07.600 --> 39:08.600
ok

39:08.600 --> 39:09.600
那么我就不再去

39:09.600 --> 39:10.600
往外面写jx了

39:10.600 --> 39:11.600
好

39:11.600 --> 39:12.600
那么希望大家呢

39:12.600 --> 39:13.600
注意啊

39:13.600 --> 39:14.600
state里面

39:14.600 --> 39:15.600
我们强调的一点

39:15.600 --> 39:16.600
就是它放的是

39:16.600 --> 39:17.600
可视数据

39:17.600 --> 39:18.600
不是可视数据

39:18.600 --> 39:19.600
要不就是引入

39:19.600 --> 39:20.600
要不就是

39:20.600 --> 39:21.600
属于内部创建

39:21.600 --> 39:22.600
这样的结构

39:22.600 --> 39:23.600
ok

39:23.600 --> 39:24.600
那么我们的

39:24.600 --> 39:25.600
列表渲染

39:25.600 --> 39:26.600
就先讲到这

