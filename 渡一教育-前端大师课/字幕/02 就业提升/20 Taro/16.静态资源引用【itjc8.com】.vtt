WEBVTT

00:00.240 --> 00:02.800
好 我们继续讲解Tairo系列课程

00:02.800 --> 00:04.340
这些课呢给大家讲解一下

00:04.340 --> 00:06.640
静态资源的一些引用

00:06.640 --> 00:09.440
引用资源其实对我们来讲其实不陌生

00:09.440 --> 00:12.540
只不过我们做一个总结式的

00:12.540 --> 00:16.360
把我们所能够引用的所有的一些情况

00:16.360 --> 00:17.900
在这边做一个会总

00:17.900 --> 00:20.980
并不是说这个大家会与不会

00:20.980 --> 00:22.260
我们引用方式有几种啊

00:22.260 --> 00:23.800
第一种样式可以引进来

00:23.800 --> 00:27.640
JS可以引进来 图片音频等一些媒体资源可以引进来

00:27.640 --> 00:30.460
以及杰森资源可以引进来 引入方式

00:30.460 --> 00:33.540
都是通过我们ES6的我们的

00:33.540 --> 00:35.320
Inpart与进来的

00:35.320 --> 00:39.420
好 我们来看一下 简单引几个 然后大家知道一下就可以了

00:39.420 --> 00:44.540
首先呢 我们打开我们的页面啊 随便打开我们新建一个吧

00:44.540 --> 00:47.100
或者说我们原来就有一个index页面

00:47.100 --> 00:49.140
所以呢 我们就拿它来做

00:49.140 --> 00:56.740
我们把它放在第一个 它上面比较干净

00:56.740 --> 00:58.780
好 我们把index页面拿出来

00:58.780 --> 01:00.960
然后的话呢 它上面我们来看一下

01:00.960 --> 01:03.960
它上面其实什么都不会有 对吧

01:03.960 --> 01:07.760
然后这个是生命周期 我们这上面也没有什么东西

01:07.760 --> 01:08.560
你来看

01:08.560 --> 01:12.000
它基本上形成一个特别干净的index结构

01:12.000 --> 01:14.760
然后打开页面看一下

01:14.760 --> 01:16.240
就index 对吧

01:16.240 --> 01:17.800
OK 首先第一步

01:17.800 --> 01:20.680
我们可以对它进行样式操作

01:20.680 --> 01:25.960
我们说了 我们对于我们的那个

01:25.960 --> 01:27.240
代码的样式的写法

01:27.300 --> 01:30.540
我们应该是 并非是class 应该是class.nit

01:30.540 --> 01:33.780
为什么 因为class对于我们的terror来讲

01:33.780 --> 01:35.820
它是一种保留字

01:35.820 --> 01:37.740
它有它的类的结构存在

01:37.740 --> 01:38.660
所以我们这里边呢

01:38.660 --> 01:41.660
我们可以直接写上我们所需要的样式

01:41.660 --> 01:43.020
而这个样式呢

01:43.020 --> 01:45.100
我们就要从外部引进来

01:45.100 --> 01:46.180
它在这边

01:46.180 --> 01:47.540
所以呢 我们写的是

01:49.140 --> 01:52.420
import 我们引进来样式

01:52.420 --> 01:56.660
样式是在我们的当前目录下

01:56.680 --> 01:58.520
我们的index

01:59.800 --> 02:00.760
这样引进来

02:02.120 --> 02:05.120
好 那我们去到当前文件中

02:06.520 --> 02:07.560
当前index

02:08.280 --> 02:10.440
我们就把它写上一个颜色

02:11.880 --> 02:13.960
比如说红色字体

02:15.640 --> 02:17.360
宽度我们写上

02:17.360 --> 02:18.080
这部分呢

02:18.080 --> 02:22.560
我们给它一个400的apps

02:24.000 --> 02:26.640
高度给它也是400的apps

02:27.320 --> 02:28.440
好了 就这样吧

02:29.440 --> 02:30.040
红色字体

02:31.280 --> 02:33.480
然后呢 引的时候我们加上css

02:34.800 --> 02:36.440
那这时候我们来看一下效果

02:39.720 --> 02:41.040
哎 出来了对吧

02:41.040 --> 02:42.920
背景没有看 我没有给背景色

02:42.920 --> 02:44.040
但红色字体出来了

02:44.040 --> 02:45.480
我们给一个背景色就可以了

02:46.400 --> 02:47.240
background of color

02:48.160 --> 02:49.480
然后我们给一个奶白色

02:54.880 --> 02:55.600
出来了吧

02:55.600 --> 02:57.680
OK 那么样式的结构就这样

02:57.680 --> 02:58.960
直接可以引入进来

02:58.960 --> 03:00.560
对吧 这是第一种

03:00.560 --> 03:01.720
那么第二种文件呢

03:01.720 --> 03:03.680
我们称之为就是GS文件

03:04.720 --> 03:06.640
这种方式就是GS

03:06.640 --> 03:09.200
那么GS其实就是我们的组件

03:09.200 --> 03:11.080
我们的组件我们可以看到这儿

03:11.720 --> 03:14.520
我们在这里面其实都是GS代码

03:14.520 --> 03:16.160
我们这里面都是GS代码

03:16.160 --> 03:18.480
所以你的组件的引入

03:18.480 --> 03:19.560
我们看到

03:19.560 --> 03:21.680
我们这边有一个修碳

03:21.680 --> 03:23.320
对吧 修碳其实Click

03:23.320 --> 03:25.040
它其实是GS写法

03:25.040 --> 03:39.460
我们把它给引进来

03:39.460 --> 03:40.300
component

03:41.260 --> 03:41.900
修碳

03:42.420 --> 03:42.820
修碳

03:43.940 --> 03:44.900
把它引进来

03:44.900 --> 03:46.840
那么这个就是GS的引入

03:46.840 --> 03:47.960
那我们在这里边

03:48.720 --> 04:02.790
我们可以把它给显示出来

04:02.790 --> 04:03.590
对吧

04:03.590 --> 04:04.150
好

04:04.150 --> 04:05.150
GS的引入呢

04:05.150 --> 04:07.510
其实我们把它也可以理解成

04:07.510 --> 04:09.710
就是组件的一种引入

04:09.710 --> 04:12.150
因为GS本身里面我们可以写function

04:12.150 --> 04:14.270
函数式组件也可以写类似组件

04:14.270 --> 04:17.230
那么组件的结构都是以GS方式来写的

04:17.230 --> 04:19.110
那么我们就完成了这样的一个

04:19.110 --> 04:20.870
第二个GS的操作

04:20.870 --> 04:22.350
第三个引入呢

04:22.350 --> 04:24.590
就是我们所谓的媒体资源

04:24.590 --> 04:25.630
比如说图片

04:26.250 --> 04:27.490
比如说图片的引入

04:28.490 --> 04:29.930
我们的整个文件中

04:29.930 --> 04:31.610
我们这边有个123图片

04:31.610 --> 04:33.370
我们打开就是一个孩子图片

04:33.370 --> 04:34.090
对吧

04:34.090 --> 04:34.450
然后呢

04:34.450 --> 04:36.450
我们就拿这张图片来做

04:36.450 --> 04:37.450
我们引入

04:38.650 --> 04:39.530
引入图片

04:39.530 --> 04:40.010
然后呢

04:40.010 --> 04:45.890
我们的位置是在上层的M majors 下面有个123.jpg

04:45.890 --> 04:46.570
这张图片

04:46.570 --> 04:47.530
然后引入以后呢

04:47.530 --> 04:48.410
取个名称

04:49.690 --> 04:50.610
tutting picture

04:53.700 --> 04:54.620
chart picture

04:54.620 --> 05:03.180
我们做这个操作

05:03.180 --> 05:03.900
ok

05:03.920 --> 05:05.280
那么我们现在呢

05:05.280 --> 05:07.880
就可以把这个内容啊

05:07.880 --> 05:09.600
直接运行到我们的

05:10.680 --> 05:12.200
因为它本身就是图片了

05:13.360 --> 05:14.200
M majors

05:14.200 --> 05:20.260
直接放到M majors 里面来

05:20.260 --> 05:21.060
src

05:23.020 --> 05:24.380
然后我们把图片放进来

05:26.140 --> 05:27.420
把图片放进来

05:27.420 --> 05:28.860
那么图片出来以后呢

05:28.860 --> 05:30.820
它的高度应该是称大了

05:30.820 --> 05:35.340
所以我们把原来的样式里面的那个高度啊

05:35.340 --> 05:37.740
给它给加大一点

05:37.740 --> 05:43.220
比如说它我做成百分百

05:43.220 --> 05:45.020
这个我做成800

05:45.020 --> 05:48.170
大一点

05:48.170 --> 05:49.210
咱们再来看一下效果

05:50.890 --> 05:51.610
对吧

05:51.610 --> 05:53.570
这样图片就被引进来了

05:53.570 --> 05:54.290
ok

05:54.290 --> 05:55.210
那么这样的话呢

05:55.210 --> 05:56.450
我们说啊

05:56.450 --> 05:58.090
这上面是GS

05:58.090 --> 05:59.930
也就是一个组件形式

05:59.930 --> 06:01.170
样式

06:01.170 --> 06:03.330
再加上媒体资源

06:03.330 --> 06:03.850
还有呢

06:03.850 --> 06:06.730
我们也可以引入一些配置文件

06:06.730 --> 06:09.450
你也可以引入一个配置文件

06:09.450 --> 06:10.130
比如说

06:10.130 --> 06:11.690
我们来试一下

06:11.710 --> 06:13.110
我们在当前

06:13.110 --> 06:15.790
我们的整个的页面中

06:15.790 --> 06:18.230
我们的Payters index中

06:18.230 --> 06:19.430
我们新建一个

06:21.230 --> 06:26.300
新建一个我们的

06:26.300 --> 06:27.180
nan.json

06:28.340 --> 06:29.820
我们新建这样一个文件

06:29.820 --> 06:30.580
然后里面呢

06:30.580 --> 06:34.920
我们写上

06:34.920 --> 06:35.920
比如说

06:35.920 --> 06:37.880
x 等于1

06:37.880 --> 06:41.060
写上这样一个字

06:41.060 --> 06:41.620
保存一下

06:43.300 --> 06:47.980
紧接着回到我们页面中

06:47.980 --> 06:52.850
我们导入一下

06:52.850 --> 06:55.850
nan.json

06:56.730 --> 06:59.720
from

06:59.720 --> 07:04.040
它是导入我们现在里面的

07:04.040 --> 07:05.040
在当前页面中

07:05.040 --> 07:10.100
其实就是啊

07:10.100 --> 07:12.980
index.json

07:14.380 --> 07:15.860
这部分内容

07:15.860 --> 07:16.460
对吧

07:16.460 --> 07:17.700
我们导入这部分内容

07:19.380 --> 07:22.770
然后

07:22.770 --> 07:24.690
我们把它运用一下

07:24.690 --> 07:27.690
我们对它直接进行

07:27.690 --> 07:38.660
我们在这里的一个输出

07:38.660 --> 07:40.500
我们直接这样去输出

07:40.500 --> 07:41.260
它告诉我

07:41.260 --> 07:43.500
这个json不存在对吧

07:43.500 --> 07:44.000
我们看一下

07:44.000 --> 07:44.480
啊不对

07:44.480 --> 07:45.040
不是index

07:45.040 --> 07:45.320
对吧

07:45.320 --> 07:46.000
应该是

07:47.880 --> 07:52.150
nan的

07:52.150 --> 07:52.390
哎

07:52.390 --> 07:53.390
它报了一个错

07:53.390 --> 07:54.310
我们看一下

07:55.630 --> 07:55.950
它说

07:55.950 --> 07:57.270
json的第七行

07:57.270 --> 07:57.950
好

07:57.950 --> 07:58.750
在json中

07:58.750 --> 08:03.320
我们把它以引号的方式引掉

08:03.320 --> 08:03.840
就好了

08:03.840 --> 08:04.800
是吧

08:04.800 --> 08:04.960
好

08:04.960 --> 08:09.800
我们再来看一下效果

08:09.800 --> 08:10.680
看一下

08:10.680 --> 08:11.600
现在是不是

08:11.600 --> 08:12.200
这边

08:12.200 --> 08:13.400
x 等于1的方式

08:13.400 --> 08:15.160
已经被传输进来了

08:15.160 --> 08:15.680
好

08:15.680 --> 08:17.320
那这样你所看到的效果

08:17.320 --> 08:18.080
就意味着

08:18.080 --> 08:20.000
你现在能够很容易的

08:20.660 --> 08:23.020
把一个组建的js引进来

08:23.020 --> 08:24.980
把一个样式引进来

08:24.980 --> 08:26.700
把一个资源引进来

08:26.700 --> 08:29.020
和把一个json格式引进来

08:29.020 --> 08:30.900
我们履下整个这个结构

08:30.900 --> 08:31.700
第一

08:31.700 --> 08:33.820
我们如果要引入js文件

08:33.820 --> 08:35.220
其实更确切的讲

08:35.220 --> 08:37.460
我们可以把一个组建引进来

08:37.460 --> 08:38.660
组建引法在之前

08:38.660 --> 08:40.260
怎么调用组建过程中

08:40.260 --> 08:41.940
我们已经讲解到了

08:41.940 --> 08:42.740
第二呢

08:42.740 --> 08:44.580
我们引入一个样式的话

08:44.580 --> 08:45.780
在当前文件中

08:45.780 --> 08:47.860
我们就可以建立一个简单的

08:47.860 --> 08:49.220
或者说对当前页面

08:49.220 --> 08:50.840
所使用到的样式

08:50.840 --> 08:51.920
在这个样式中

08:51.920 --> 08:53.320
我们就可以很容易的

08:53.320 --> 08:54.280
把它作为input

08:54.280 --> 08:55.520
拿进来以后

08:55.520 --> 08:56.400
你在页面中

08:56.400 --> 08:57.520
哪里需要使用

08:57.520 --> 08:58.480
直接用index的

08:58.480 --> 09:00.760
或者说是根据你现在所写的

09:00.760 --> 09:02.560
一个类选择器的方式

09:02.560 --> 09:04.920
来进行我们现在的书写

09:04.920 --> 09:07.200
不需要在前面给它定名称

09:07.200 --> 09:07.880
第三

09:07.880 --> 09:10.040
图片或者说是媒体资源

09:10.040 --> 09:12.000
我们存储在本地以后的话

09:12.000 --> 09:12.920
我们会发现

09:12.920 --> 09:14.120
我们本地的内容

09:14.120 --> 09:15.520
我们依然可以通过

09:15.520 --> 09:17.240
我们现在这种的导入方式

09:17.240 --> 09:18.640
让它导进来

09:18.640 --> 09:19.340
第三

09:19.340 --> 09:20.180
第四

09:20.180 --> 09:21.140
导进来以后

09:21.140 --> 09:21.780
你看

09:21.780 --> 09:23.380
它就直接可以在它图片

09:23.380 --> 09:24.820
比如说你就把它理解为

09:24.820 --> 09:26.500
这是一个辨量

09:26.500 --> 09:28.180
可以直接在我们的

09:28.180 --> 09:30.380
JESTA表达式里面进行使用

09:30.380 --> 09:31.060
再往下

09:31.060 --> 09:32.740
就是nandjessen

09:32.740 --> 09:33.940
nandjessen是什么

09:33.940 --> 09:36.740
是我们外部定义了一个jessen格式

09:36.740 --> 09:37.820
那么注意一下

09:37.820 --> 09:38.900
这个jessen格式

09:38.900 --> 09:40.580
在这边定义完以后的话

09:40.580 --> 09:42.300
它就是个纯jessen

09:42.300 --> 09:43.780
它是个纯jessen

09:43.780 --> 09:45.460
我们可以把这种格式

09:45.460 --> 09:46.060
理解为

09:46.060 --> 09:49.360
它也是一个就是辅助配置文件

09:49.360 --> 09:51.160
你看这边进行修改

09:51.160 --> 09:53.280
然后导入它以后的话

09:53.280 --> 09:57.040
那么你其实可以直接获取里面的内容

09:57.040 --> 09:58.560
你可以直接获取

09:58.560 --> 09:59.960
我们可以看到这边的x

09:59.960 --> 10:00.920
会直接拿到

10:00.920 --> 10:08.160
那么我们也可以进行直接的点出来

10:08.160 --> 10:12.610
这样的方式都可以的

10:12.610 --> 10:13.290
对吧

10:13.290 --> 10:14.770
那我们这样就可以拿到

10:14.770 --> 10:17.730
你现在在我们单独文件中

10:17.730 --> 10:19.090
jessen中配置的

10:19.090 --> 10:20.690
注意我们一直把这个文件

10:20.690 --> 10:22.870
称之为叫配置的信息

10:22.870 --> 10:24.390
在程序中进行运行

10:24.390 --> 10:25.390
比如说

10:25.390 --> 10:27.150
你想让它呈现哪一部分

10:27.150 --> 10:29.750
或者说是A面的

10:29.750 --> 10:31.150
那么你或者说A模块的

10:31.150 --> 10:33.230
你就把它这里写出A

10:33.230 --> 10:34.990
那么之后你切换成B

10:34.990 --> 10:36.350
那么你就不用去动程序

10:36.350 --> 10:37.670
你在这边切就行

10:37.670 --> 10:39.950
那么程序通过引入你的jessen格式

10:39.950 --> 10:43.350
然后来进行里面的一些逻辑业务处理

10:43.350 --> 10:43.950
OK吧

10:43.950 --> 10:45.950
那么这其实就是我们说到的

10:45.950 --> 10:48.510
引用的几个资源的方式

10:48.570 --> 10:49.570
我们把这边都做一下

10:49.570 --> 10:51.570
注意它的位置和内容

10:51.570 --> 10:52.330
特别注意

10:52.330 --> 10:53.890
我们刚才强调了几点

10:53.890 --> 10:54.650
第一

10:54.650 --> 10:57.450
就是在引用我们现在的jessen格式的时候

10:57.450 --> 10:58.730
你一定得打引号

10:58.730 --> 10:59.930
你如果打单引号

10:59.930 --> 11:01.610
你再来看一下

11:01.610 --> 11:02.690
你把这保存了

11:02.690 --> 11:04.290
你在这边来

11:04.290 --> 11:06.450
你单引号依然会有错误出现的

11:06.450 --> 11:07.090
这边注意

11:07.090 --> 11:08.170
他告诉你

11:08.170 --> 11:10.050
这个单引号是不可用的

11:10.050 --> 11:11.770
所以你在jessen里面的时候

11:11.770 --> 11:12.890
你一定要双引号

11:12.890 --> 11:13.770
如果你不用的话

11:13.770 --> 11:15.330
他也会爆错

11:15.330 --> 11:16.170
第二点

11:16.170 --> 11:17.890
你在所有的这种所谓的jessen

11:17.890 --> 11:20.270
也好在这种的一些辅助文件中

11:20.270 --> 11:21.750
你进行编译以后

11:21.750 --> 11:24.310
他只会帮你拷贝到我们现在的

11:24.310 --> 11:26.630
所要的正常的目录下面

11:26.630 --> 11:27.790
就是我们的dister下面

11:27.790 --> 11:29.550
但是不会进行任何的编译

11:29.550 --> 11:30.910
这时候他编译成功了

11:30.910 --> 11:31.710
他才会

11:31.710 --> 11:33.550
你要回到主调界面

11:33.550 --> 11:34.550
引导界面

11:34.550 --> 11:36.710
你才能够进行正常的编译

11:36.710 --> 11:37.350
OK吧

11:37.350 --> 11:38.630
那么这部分

11:38.630 --> 11:41.550
就是我们所谓的一个页面

11:41.550 --> 11:44.270
我们引用关系的一个操作

11:44.270 --> 11:44.990
当然

11:44.990 --> 11:47.710
那么这边还有一点要说明的

11:47.710 --> 11:50.480
就是这个

11:50.480 --> 11:52.440
这是要关键说明的一点

11:52.440 --> 11:54.760
就是小程序本身我们要求过

11:54.760 --> 11:57.120
他本身的大小只有两兆大小

11:57.120 --> 12:00.920
但是你本地图片这样运行以后的话

12:00.920 --> 12:03.200
这样图片万一他本身这张图片就两兆

12:03.200 --> 12:04.480
那这时候的话怎么办

12:04.480 --> 12:06.040
你现在好像是能够呈现

12:06.040 --> 12:08.000
但是你一旦进行发布或操作的时候

12:08.000 --> 12:08.920
一定会出问题

12:08.920 --> 12:11.040
那么这个我们看一下

12:11.040 --> 12:13.760
在tarrow中他有一种解决的办法的

12:13.760 --> 12:18.280
我们打开我们的tarrow的官网

12:18.300 --> 12:21.180
在官网上面静态资源引用这一块上面

12:21.180 --> 12:22.180
他这边有说明

12:22.180 --> 12:24.260
你看在小程序样式中

12:24.260 --> 12:26.860
默认是不能直接引用本地资源的

12:26.860 --> 12:28.700
只能通过网络地址

12:28.700 --> 12:30.460
这是小程序本身规定

12:30.460 --> 12:33.740
或者Base64的方式来进行资源引用

12:33.740 --> 12:35.260
Base64是什么

12:35.260 --> 12:37.100
那个编码

12:37.100 --> 12:38.340
Base64是种编码

12:38.340 --> 12:39.820
为了方便开发

12:39.820 --> 12:44.460
tarrow提供了直接的样式中引入本地资源的方式

12:44.460 --> 12:45.740
就像我们刚才这样

12:45.740 --> 12:48.800
我们可以拿本地的major里面图片给人家拿出来的

12:48.800 --> 12:50.000
起源里是通过

12:50.000 --> 12:50.840
注意哦

12:50.840 --> 12:53.040
它是post的url的方式

12:53.040 --> 12:53.760
插件

12:53.760 --> 12:55.640
它是通过这样的一个插件

12:55.640 --> 12:59.240
将你地址引用的时候转换成Base64

12:59.240 --> 13:00.480
这时候才能正常显示

13:00.480 --> 13:03.680
它内部是做了一个post CSS的操作

13:03.680 --> 13:06.120
并且进行了Base64的转换

13:06.120 --> 13:07.720
这个你知道一下就行

13:07.720 --> 13:12.880
tarrow会默认对10k以下的资源进行转换

13:12.880 --> 13:13.960
这点注意哦

13:13.960 --> 13:15.120
你要超过的话

13:15.120 --> 13:16.660
它会提示你的事

13:16.660 --> 13:19.820
所以我们讲一下整个这个开发里面

13:19.820 --> 13:22.100
如果你说你要现在配置

13:22.100 --> 13:23.180
你现在要多大

13:23.180 --> 13:24.300
那么你注意

13:24.300 --> 13:26.740
你在你的config的index下面

13:26.740 --> 13:29.580
在configindex下面

13:29.580 --> 13:30.900
你要设定一下

13:30.900 --> 13:31.940
设定一下

13:31.940 --> 13:35.420
就是设定转换尺寸

13:35.420 --> 13:36.460
设定转换尺寸

13:36.460 --> 13:38.060
注意一下这个就可以

13:38.060 --> 13:39.820
那么一旦你设大了以后

13:39.820 --> 13:40.540
你要注意哦

13:40.540 --> 13:41.700
你的本身小程序

13:41.700 --> 13:44.260
它还是只能包含在两张

13:44.260 --> 13:47.200
所以一旦这种图片有尽量

13:47.200 --> 13:48.800
要不就图片小

13:48.800 --> 13:51.080
要不就是用icon图标

13:51.080 --> 13:52.280
这种逻辑你要是知道

13:52.280 --> 13:52.800
不然的话

13:52.800 --> 13:53.720
你把这边设大

13:53.720 --> 13:58.120
但是你最后形成的小程序的整个大小还是超过两照的话

13:58.120 --> 13:59.720
那肯定不行

13:59.720 --> 14:00.200
OK吧

14:00.200 --> 14:00.640
好

14:00.640 --> 14:03.320
那么这边就说明一下就可以了

14:03.320 --> 14:04.160
并且有同学

14:04.160 --> 14:05.560
一旦问起你来

14:05.560 --> 14:06.960
你会也能说得出来

14:06.960 --> 14:10.360
它是通过了Base64的一个转换结构来完成的

14:10.360 --> 14:10.880
OK

14:10.880 --> 14:12.160
那么这些课就先上到这里

