WEBVTT

00:00.000 --> 00:05.000
我们这节课继续讲解Tera系列课程之框架简介

00:05.000 --> 00:14.000
那么在之前的课程中呢我们简单的认识了Tera并且知道了他的好处和他的一些和其他框架的区别

00:14.000 --> 00:22.000
第二呢我们也学习了怎么样通过我们的NPN的方式或者CNPN的解方式

00:22.000 --> 00:29.000
去安装我们的脚手架初始化Tera命令使其能够打开在我们的VSCode中

00:29.000 --> 00:37.000
第三呢我们也学会了怎么样去编译我们的微信小程序代码和我们的H5代码

00:37.000 --> 00:45.000
那么如果有一些其他的比如说百度啊支付宝啊小程序生态圈的这样的一些代码操作呢

00:45.000 --> 00:52.000
我们的官网上面有这方面的一个编译的命令那么在上节课呢都告诉大家在哪里有了

00:52.000 --> 00:59.000
这些课呢我们上节课我们说我们官网上面的东西已经完成了我们的可以看到效果了

00:59.000 --> 01:07.000
但是呢我们的框架啊没有给大家详细的说明一下这些课呢给大家把这部分内容简单的介绍一下

01:07.000 --> 01:16.000
简单而且详细一点首先第一个呢我们教一下目录结构在我们经过上节课安装完成以后的话呢

01:16.000 --> 01:20.000
你这边就能看到类似于这样的一个目录结构

01:20.000 --> 01:27.000
我们打开一下我们把上节课的代码打开一下那么其实啊就是一个新代码结构

01:27.000 --> 01:34.000
那咱们可以看到里面啥都没干就是一个你创建完项目以后所看到的一个结构机器

01:34.000 --> 01:40.000
在整个这代码上面的话呢我们会发现他的内容啊除了我们的灰色部分

01:40.000 --> 01:45.000
因为灰色部分是不需要你进行编译的或者说操作的是系统自动完成的

01:45.000 --> 01:53.000
你来看有一个dister这就是我们刚才前面一直强调的他是编译后的目录结果

01:53.000 --> 01:58.000
我们把它编译成微型小程序以后那么这里面就是小程序的目录结构了

01:58.000 --> 02:08.000
让我们能够进行直接完成小程序的运行小程的运行所指向的位置就是我们的dister下面

02:08.000 --> 02:13.000
因为小程序需要去找到app.json这个文件ok这里我们暂时不动

02:13.000 --> 02:18.000
但是你可以看啊如果编译好与美好是否成功都可以通过这看

02:18.000 --> 02:24.000
第二个是configureconfigure文件加下有三个文件这边我们说到了

02:24.000 --> 02:30.000
首先configure是一个比较全面的一个配置目录我们在很多的框架里面都能发现

02:30.000 --> 02:37.000
那么他有几个呢第一个就是默认配置啊还有一个呢就是我们这边的开发配置打包配置

02:37.000 --> 02:45.000
那么现在我们先不讲打包默认配置开发配置开发配置里面啊当前的模式是开发模式啊

02:45.000 --> 02:52.000
他有这个那并且呢他会告诉你现在的啊容器现在的web app

02:52.000 --> 02:58.000
那么默认创台下我们都可以不去写现在啊我们都可以不去写我们只要看一下就可以了

02:58.000 --> 03:06.000
创建时间然后现在的我们的宽度包括是我们的啊这下面的一些简单的其他的信息

03:06.000 --> 03:12.000
这一般我们不用动自己我们都不用动啊除非说是你已经学会了

03:12.000 --> 03:17.000
包括在后期的过程中有特殊的配置要求你再去进行操作

03:17.000 --> 03:24.000
我们现在先不用动那么只要知道这里面是配置信息就为止再往下src

03:24.000 --> 03:29.000
src就是我们所谓的我们平时写带原码的地方

03:29.000 --> 03:36.000
我们打开可以看到首先这边有个配置配置我们说他就是页面的文件目录

03:36.000 --> 03:40.000
打开以后咱们可以看到里面其实有一个文件

03:40.000 --> 03:43.000
这个文件呢叫做index他其实是个目录吗

03:43.000 --> 03:49.000
然后打开以后的话我们会发现里面有两个文件一个是jsxjsx

03:49.000 --> 03:53.000
就是我们类似于像reactor一样的里面的random

03:53.000 --> 03:56.000
包括是return的这样的一个文件结构

03:56.000 --> 04:00.000
这里边呢就和我们刚才在官网上面看到的那个是一样的

04:00.000 --> 04:04.000
我们的很多的原码都会在这里面进行编写

04:04.000 --> 04:08.000
那么第二个文件呢是样式文件

04:08.000 --> 04:13.000
那么这点要注意一下啊就是有时候同学如果你建立起来

04:13.000 --> 04:16.000
这不是srcss

04:16.000 --> 04:19.000
在我们创建项目的时候你还记得吗

04:19.000 --> 04:24.000
我们在选择你希望这里用什么样的css预夹载包

04:24.000 --> 04:27.000
如果你不用的话那就是标准css

04:27.000 --> 04:30.000
如果你用的话那你可以写srcss

04:30.000 --> 04:32.000
这些都可以

04:32.000 --> 04:35.000
这位这个后罪名根据你当初的配置来显示

04:35.000 --> 04:38.000
我不用那么现在先用css来表示

04:38.000 --> 04:41.000
紧接着再往下这边有一个app.css

04:41.000 --> 04:43.000
这是称之为总样式

04:43.000 --> 04:47.000
也就是我们所谓的在微信中你记得吗

04:47.000 --> 04:49.000
也有一个app.css

04:49.000 --> 04:52.000
它只不过叫做app.wxss

04:52.000 --> 04:53.000
对吧

04:53.000 --> 04:55.000
它称之为全局样式我们是

04:55.000 --> 04:57.000
ok 知道一下

04:57.000 --> 04:58.000
再往下看

04:58.000 --> 04:59.000
再往下看

04:59.000 --> 05:01.000
这边呢还有一个wx

05:01.000 --> 05:03.000
那个jsX

05:03.000 --> 05:06.000
这个jsX呢其实就是我们的一个

05:06.000 --> 05:09.000
我们的整个项目的

05:09.000 --> 05:12.000
全局的jsX文件

05:12.000 --> 05:14.000
全局的jsX文件

05:14.000 --> 05:18.000
类似于我们在之前大家所看到的那个叫做

05:18.000 --> 05:20.000
微信里面app.js

05:20.000 --> 05:23.000
这样一个概念

05:23.000 --> 05:27.000
然后这边注意下有一个index的html

05:27.000 --> 05:31.000
那么这个呢是为了给h5页面所使用到的

05:31.000 --> 05:33.000
这是给h5页面所使用的

05:33.000 --> 05:36.000
微信里面肯定是不可能用html嘛

05:36.000 --> 05:39.020
对吧

05:39.020 --> 05:40.020
然后紧接着

05:40.020 --> 05:42.020
这个是忽略文件

05:42.020 --> 05:44.020
这两个的话都是配置结构不用管它

05:44.020 --> 05:46.020
那么下面这两个呢

05:46.020 --> 05:48.020
这是属于项目配置文件

05:48.020 --> 05:50.020
这是包管理文件

05:50.020 --> 05:52.020
包管理文件呢里面主要是

05:52.020 --> 05:54.020
我们如果在用过webpack

05:54.020 --> 05:56.020
或者说npvue的结构的话都有

05:56.020 --> 05:57.020
告诉你

05:57.020 --> 06:00.020
它现在scribbit用到的那些包对吧

06:00.020 --> 06:03.020
然后依赖像就是包管理文件

06:03.020 --> 06:05.020
这个呢是项目配置文件

06:05.020 --> 06:06.020
告诉你

06:06.020 --> 06:08.020
现在的微信小程序的根木路

06:08.020 --> 06:09.020
是在distr下面

06:09.020 --> 06:12.020
当前项目的名称叫mypp1

06:12.020 --> 06:13.020
描述对吧

06:13.020 --> 06:15.020
你是否有appid存在

06:15.020 --> 06:17.020
这些都是属于一个

06:17.020 --> 06:19.020
微信小程序的描述文件

06:19.020 --> 06:20.020
ok

06:20.020 --> 06:22.020
那么有这几个以后的话呢

06:22.020 --> 06:24.020
我们就可以进行一定的开发了

06:24.020 --> 06:26.020
先了解这几个

06:26.020 --> 06:27.020
紧接着

06:27.020 --> 06:28.020
我们现在这看好以后

06:28.020 --> 06:30.020
我们再到官网来看一下

06:30.020 --> 06:33.020
它还有什么给我们的注意点

06:33.020 --> 06:35.020
我刚才从呢是从这边下来

06:35.020 --> 06:36.020
咱们看到

06:36.020 --> 06:37.020
首先告诉你的是

06:37.020 --> 06:40.020
我们的系统的默认的

06:40.020 --> 06:42.020
一个src的目录

06:42.020 --> 06:45.020
它是从app.gs开始的

06:45.020 --> 06:46.020
是从这儿

06:46.020 --> 06:49.020
也就是这个称之为项目入口文件

06:49.020 --> 06:51.020
项目入口文件

06:51.020 --> 06:53.020
那么这个入口文件呢

06:53.020 --> 06:54.020
我们看一下

06:54.020 --> 06:55.020
就从这里看待吧

06:55.020 --> 06:56.020
我们就不切了

06:56.020 --> 06:57.020
项目入口文件里面

06:57.020 --> 07:00.020
首先它需要通过tarrow导入命令

07:00.020 --> 07:01.020
告诉你

07:01.020 --> 07:04.020
你现在需要用到tarrow这样的一个指令

07:04.020 --> 07:06.020
里面会用到一些component

07:06.020 --> 07:08.020
也就是我们所谓的组件

07:08.020 --> 07:09.020
然后呢

07:09.020 --> 07:10.020
你现在文件呢

07:10.020 --> 07:13.020
是要导入一个配置下的index出来

07:13.020 --> 07:16.020
然后导入以后起名为index

07:16.020 --> 07:18.020
然后把样式导进来

07:18.020 --> 07:20.020
它用的是tsss 这个没关系

07:20.020 --> 07:21.020
然后紧接着呢

07:21.020 --> 07:23.020
它这边去做一个组件

07:23.020 --> 07:26.020
它做了一个class的组件继承

07:26.020 --> 07:27.020
然后呢

07:27.020 --> 07:28.020
注意这边

07:28.020 --> 07:30.020
这个是它的本身的配置文件

07:30.020 --> 07:31.020
那么讲一下

07:31.020 --> 07:32.020
这里的配置文件

07:32.020 --> 07:36.020
其实它是单独形成在你文件中的

07:36.020 --> 07:38.020
而并不是你单独去拿一个出来

07:38.020 --> 07:39.020
我们以前的话

07:39.020 --> 07:41.020
可能需要单独配置一个单独文件

07:41.020 --> 07:43.020
比方说是ts 出来

07:43.020 --> 07:45.020
但是它可以在直接在里面书写

07:45.020 --> 07:46.020
这个

07:46.020 --> 07:47.020
那么这个配置文件

07:47.020 --> 07:48.020
大家仔细看一下

07:48.020 --> 07:50.020
这里面的结构

07:50.020 --> 07:51.020
patter

07:52.020 --> 07:53.020
window

07:53.020 --> 07:55.020
这个好像很熟是吧

07:55.020 --> 07:57.020
我们打开我们的微信小程序

07:57.020 --> 07:59.020
我们打开app.json

07:59.020 --> 08:01.020
打开以后你来看

08:01.020 --> 08:03.020
是不是这一块很熟

08:03.020 --> 08:05.020
所以我们就变成的是

08:05.020 --> 08:08.020
如果你现在看到我们的

08:08.020 --> 08:10.020
就是我们叫做app.js

08:10.020 --> 08:13.020
我们打开我们的vs来看

08:13.020 --> 08:14.020
打开vs

08:14.020 --> 08:21.550
你可以看到

08:21.550 --> 08:22.550
在这

08:22.550 --> 08:24.550
我们的app.js 这里面

08:24.550 --> 08:25.550
这部分内容

08:25.550 --> 08:26.550
这部分内容

08:26.550 --> 08:29.550
其实就是最后生成的时候

08:29.550 --> 08:30.550
会变成什么

08:30.550 --> 08:32.550
会变成我们在微信中的

08:32.550 --> 08:34.550
全局配置文件

08:34.550 --> 08:35.550
全局配置文件

08:36.550 --> 08:38.550
那么这里面有一些什么

08:38.550 --> 08:39.550
微信里面

08:39.550 --> 08:41.550
我们有做过简单介绍

08:41.550 --> 08:43.550
这边由于我们要使用

08:43.550 --> 08:45.550
包括是有些内容

08:45.550 --> 08:47.550
还可以在不同的小程序上使用

08:47.550 --> 08:49.550
我们也要做一个详细的介绍

08:49.550 --> 08:51.550
这部分内容

08:51.550 --> 08:52.550
回来

08:52.550 --> 08:53.550
紧接着

08:53.550 --> 08:54.550
这部分内容好了

08:54.550 --> 08:55.550
接下去

08:55.550 --> 08:56.550
这部分内容

08:56.550 --> 08:57.550
这部分

08:57.550 --> 08:59.550
我们称之为叫生命周期

08:59.550 --> 09:01.550
那么我们会有专门的一节

09:01.550 --> 09:03.550
来讲解生命周期

09:03.550 --> 09:06.550
包括是大家看到有几个词比较很有意思

09:06.550 --> 09:07.550
那个

09:07.550 --> 09:08.550
component

09:08.550 --> 09:09.550
组件

09:09.550 --> 09:10.550
就是mount

09:10.550 --> 09:11.550
什么意思

09:11.550 --> 09:12.550
挂载

09:12.550 --> 09:13.550
well

09:13.550 --> 09:15.550
还用进行时和过去时

09:15.550 --> 09:17.550
将要挂载表示还没有

09:17.550 --> 09:18.550
那是什么

09:18.550 --> 09:19.550
之前

09:19.550 --> 09:21.550
过去式

09:21.550 --> 09:22.550
已经完成

09:22.550 --> 09:24.550
还有一个show header

09:24.550 --> 09:25.550
那么这两个的话

09:25.550 --> 09:26.550
其实在微信中

09:26.550 --> 09:28.550
如果你还记得微信的

09:28.550 --> 09:30.550
所谓的生命周期的话

09:30.550 --> 09:31.550
你会记得里面

09:32.550 --> 09:33.550
理解吧

09:33.550 --> 09:35.550
那么他就是起这个作用的

09:35.550 --> 09:37.550
然后这一块就很简单了

09:37.550 --> 09:39.550
这一块即使就是我们平时所讲到的

09:41.550 --> 09:42.550
好了

09:42.550 --> 09:43.550
我们回来看一下

09:43.550 --> 09:44.550
我们的代码看到吗

09:44.550 --> 09:45.550
里面

09:45.550 --> 09:46.550
这里很简单

09:46.550 --> 09:47.550
有这几个

09:47.550 --> 09:48.550
还有爆错的机制

09:48.550 --> 09:49.550
然后

09:50.550 --> 09:52.550
这些内容都会有

09:52.550 --> 09:53.550
那么

09:54.550 --> 09:55.550
以后的话

09:55.550 --> 09:57.550
我们在这就进行输出

09:57.550 --> 09:58.550
我们说

09:58.550 --> 09:59.550
基本上

09:59.550 --> 10:00.550
里面的结构

10:00.550 --> 10:01.550
就会有

10:01.550 --> 10:02.550
但是请注意

10:02.550 --> 10:04.550
那么我们这边强调一下

10:04.550 --> 10:06.550
我们尽量不要

10:06.550 --> 10:08.550
或者说就是不要

10:08.550 --> 10:10.550
在我们的rendle里去做

10:10.550 --> 10:12.550
业务逻辑代码

10:12.550 --> 10:13.550
在这边

10:13.550 --> 10:15.550
你去写很多的业务逻辑

10:15.550 --> 10:16.550
这个是不要什么

10:16.550 --> 10:17.550
循环判断

10:17.550 --> 10:19.550
包括是

10:19.550 --> 10:20.550
一些

10:20.550 --> 10:21.550
数组的一些

10:21.550 --> 10:22.550
操作

10:22.550 --> 10:23.550
不要

10:23.550 --> 10:24.550
为什么

10:24.550 --> 10:25.550
因为之后最后的

10:25.550 --> 10:26.550
在宣染过程中

10:26.550 --> 10:27.550
他会把

10:27.550 --> 10:28.550
index

10:28.550 --> 10:29.550
呈现内容

10:29.550 --> 10:30.550
覆盖掉你现在的

10:30.550 --> 10:31.550
rendle里面部分内容的

10:31.550 --> 10:33.550
这index在哪

10:33.550 --> 10:34.550
就他

10:34.550 --> 10:35.550
就他

10:35.550 --> 10:36.550
注意一下

10:36.550 --> 10:37.550
那么这样的话

10:37.550 --> 10:38.550
我们就可以去

10:38.550 --> 10:39.550
告诉你

10:39.550 --> 10:40.550
他其实

10:40.550 --> 10:42.550
对于框架来讲

10:42.550 --> 10:43.550
他的首页

10:43.550 --> 10:44.550
是在我们的

10:44.550 --> 10:46.550
Peters的index里面

10:46.550 --> 10:47.550
刚才我们看

10:47.550 --> 10:48.550
那个Hollower的

10:48.550 --> 10:49.550
至少在这边

10:49.550 --> 10:50.550
没有吧

10:50.550 --> 10:51.550
在这边没有吧

10:51.550 --> 10:52.550
那我们去找一下

10:52.550 --> 10:54.550
在Peters里面

10:55.550 --> 10:56.550
看到吗

10:56.550 --> 10:57.550
这边Hollower的

10:57.550 --> 10:58.550
对吧

10:58.550 --> 11:00.550
我们在Peters进去

11:00.550 --> 11:01.550
找到index

11:01.550 --> 11:02.550
注意一下

11:02.550 --> 11:03.550
index

11:03.550 --> 11:04.550
他的文件名和目录名

11:04.550 --> 11:05.550
是一致的

11:05.550 --> 11:06.550
我们打开

11:06.550 --> 11:07.550
打开以后的话

11:07.550 --> 11:08.550
他告诉你

11:08.550 --> 11:09.550
这边有好几个

11:09.550 --> 11:10.550
导入

11:10.550 --> 11:11.550
待会来看

11:11.550 --> 11:12.550
我们先往下跑

11:12.550 --> 11:13.550
先往下跑

11:13.550 --> 11:14.550
有没有看到

11:14.550 --> 11:15.550
下面有一个Hollower的

11:15.550 --> 11:16.550
代表的是

11:16.550 --> 11:18.550
他显示的是这一块

11:18.550 --> 11:19.550
rendle return

11:19.550 --> 11:21.550
返回了这段代码

11:21.550 --> 11:23.550
这段代码很有意思

11:23.550 --> 11:24.550
他这边出现了

11:24.550 --> 11:26.550
我们的微信的标签

11:26.550 --> 11:28.550
怎么可以直接这样显

11:28.550 --> 11:30.550
我们往上跑

11:30.550 --> 11:31.550
我们先看一看

11:31.550 --> 11:32.550
首先

11:32.550 --> 11:33.550
前面这行没问题

11:33.550 --> 11:34.550
还是正常的

11:34.550 --> 11:35.550
tarrow的命令的导入

11:35.550 --> 11:36.550
表示

11:36.550 --> 11:37.550
本身是一个tarrow页面

11:37.550 --> 11:38.550
第二行

11:38.550 --> 11:39.550
注意一下

11:39.550 --> 11:40.550
他可以引入

11:40.550 --> 11:41.550
请注意

11:41.550 --> 11:43.550
他可以引入Components

11:43.550 --> 11:45.550
tarrow.js的Components

11:45.550 --> 11:46.550
是什么

11:46.550 --> 11:47.550
它其实就是

11:47.550 --> 11:48.550
微信里面的

11:48.550 --> 11:49.550
标签名称

11:49.550 --> 11:50.550
ViewTester

11:50.550 --> 11:51.550
代表

11:51.550 --> 11:52.550
当前页面

11:52.550 --> 11:54.550
是可以使用ViewTester的

11:54.550 --> 11:55.550
系统也会知道

11:55.550 --> 11:57.550
你这样写上去以后

11:57.550 --> 11:58.550
这是什么意思

11:58.550 --> 12:00.550
它会从这里面去找定义

12:00.550 --> 12:01.550
是这意思

12:01.550 --> 12:02.550
OK

12:02.550 --> 12:05.550
这就是我们的一个简单机制

12:05.550 --> 12:06.550
同时

12:06.550 --> 12:08.550
我们回到PBT

12:08.550 --> 12:10.550
我们说过了

12:10.550 --> 12:11.550
我们全局配置文件

12:11.550 --> 12:13.550
其实是我们最后

12:13.550 --> 12:14.550
生成的时候的

12:14.550 --> 12:16.550
App.json

12:16.550 --> 12:17.550
这个json文件

12:17.550 --> 12:19.550
我们有一个参照列表

12:19.550 --> 12:20.550
这里面

12:20.550 --> 12:21.550
我个人认为

12:21.550 --> 12:23.550
讲得非常的好

12:23.550 --> 12:25.550
因为很细致

12:25.550 --> 12:26.550
就是在当前

12:26.550 --> 12:28.550
我打开的这个下面

12:28.550 --> 12:29.550
全局配置文件

12:29.550 --> 12:30.550
其实

12:30.550 --> 12:33.860
我们打开我们的项目

12:33.860 --> 12:35.860
在我们的

12:35.860 --> 12:37.860
关掉src的配置

12:37.860 --> 12:40.860
在我们的App.jsx里面

12:40.860 --> 12:42.860
然后这边

12:42.860 --> 12:43.860
我们可以看到

12:43.860 --> 12:45.860
这边的configure

12:45.860 --> 12:46.860
分成两部分内容

12:46.860 --> 12:47.860
就称之为我们的

12:47.860 --> 12:48.860
全局配置文件

12:48.860 --> 12:50.860
configure的一个区间

12:50.860 --> 12:51.860
在这个

12:51.860 --> 12:53.860
json的大过号里

12:53.860 --> 12:54.860
我们一边这样吧

12:54.860 --> 12:55.860
我们一边做

12:55.860 --> 12:56.860
一边可以修改

12:56.860 --> 12:57.860
首先

12:57.860 --> 12:58.860
我们看到有两个

12:58.860 --> 13:00.860
第一个叫Peters

13:00.860 --> 13:01.860
Peters是什么

13:01.860 --> 13:02.860
Peters是我们

13:02.860 --> 13:04.860
所有页面的路径列表

13:04.860 --> 13:05.860
它是一个stream

13:05.860 --> 13:07.860
它是一个array

13:07.860 --> 13:08.860
它是一个每个自幅串

13:08.860 --> 13:09.860
stream array

13:09.860 --> 13:11.860
自幅串速足

13:11.860 --> 13:12.860
注意

13:12.860 --> 13:13.860
它是必填像

13:13.860 --> 13:15.860
你必须要这一项内容

13:15.860 --> 13:17.860
微信小程序和百度小程序

13:17.860 --> 13:18.860
你以后

13:18.860 --> 13:19.860
如果做百度小程序

13:19.860 --> 13:20.860
包括后面咱们看

13:20.860 --> 13:21.860
什么支付宝

13:21.860 --> 13:22.860
凡是和小程序有关的

13:22.860 --> 13:24.860
全都支持

13:24.860 --> 13:25.860
那么这个内容

13:25.860 --> 13:26.860
以后你做的事情

13:26.860 --> 13:27.860
你会发现

13:27.860 --> 13:28.860
一样

13:28.860 --> 13:29.860
那么H5也支持

13:29.860 --> 13:30.860
看到吗

13:30.860 --> 13:31.860
这东西

13:31.860 --> 13:32.860
那么我们讲

13:32.860 --> 13:33.860
继续往下

13:33.860 --> 13:34.860
H5是什么意思

13:34.860 --> 13:35.860
H5就是

13:35.860 --> 13:36.860
你在手机上面

13:36.860 --> 13:37.860
呈现的那一块

13:37.860 --> 13:38.860
你在这边

13:38.860 --> 13:39.860
有个头部文件

13:39.860 --> 13:40.860
背景文件

13:40.860 --> 13:41.860
都可以

13:41.860 --> 13:43.860
我们说用Peters

13:43.860 --> 13:44.860
那么紧接着

13:44.860 --> 13:45.860
页面有了

13:45.860 --> 13:47.860
我们紧接着往下

13:47.860 --> 13:48.860
Windows

13:48.860 --> 13:49.860
Windows是指

13:49.860 --> 13:51.860
叫做全局默认

13:51.860 --> 13:52.860
窗口表现

13:52.860 --> 13:53.860
也就是说

13:53.860 --> 13:55.860
我们的窗口的样式配置

13:55.860 --> 13:58.860
和页面的底色配置

13:58.860 --> 14:00.860
那么都是用Windows来完成的

14:00.860 --> 14:02.860
那么我们这两个是

14:02.860 --> 14:04.860
虽然它写的是否

14:04.860 --> 14:05.860
但是我们基本上

14:05.860 --> 14:07.860
最基本的两个写法

14:07.860 --> 14:09.860
就是配置跟Windows

14:09.860 --> 14:10.860
这部分上面有

14:10.860 --> 14:12.860
那么我待会往下来看

14:12.860 --> 14:13.860
待会下面也有强烈的

14:13.860 --> 14:15.860
那个叫做

14:15.860 --> 14:17.860
写法的一个简单定义

14:17.860 --> 14:18.860
Tabba是什么

14:18.860 --> 14:19.860
底部触摸蓝

14:19.860 --> 14:20.860
我们把它称之为

14:20.860 --> 14:21.860
底部触摸蓝

14:21.860 --> 14:23.860
其实它也可以搬位置

14:23.860 --> 14:25.860
大家应该对这个词

14:25.860 --> 14:26.860
应该不陌生

14:26.860 --> 14:28.860
还有Network Timeout

14:28.860 --> 14:29.860
网络超时

14:29.860 --> 14:30.860
注意

14:30.860 --> 14:32.860
网络超时这个内容

14:32.860 --> 14:33.860
它只支持

14:33.860 --> 14:35.860
我们的微信小程序

14:35.860 --> 14:37.860
它只支持微信小程序

14:37.860 --> 14:38.860
紧接着

14:38.860 --> 14:39.860
我们还有Debug

14:39.860 --> 14:40.860
Debug模式

14:40.860 --> 14:42.860
一旦你被开启以后

14:42.860 --> 14:43.860
那么你现在

14:43.860 --> 14:44.860
系统怎么样

14:44.860 --> 14:46.860
进入到我们的

14:46.860 --> 14:48.860
生命周期的

14:48.860 --> 14:49.860
在运行哪个

14:49.860 --> 14:50.860
在运行哪个

14:50.860 --> 14:51.860
它都会在我们

14:51.860 --> 14:53.860
以console.log的方式

14:53.860 --> 14:54.860
打印在我们的

14:54.860 --> 14:56.860
控制台上面

14:56.860 --> 14:57.860
它会启动

14:57.860 --> 14:59.860
这个叫做调试模式

14:59.860 --> 15:00.860
当然

15:00.860 --> 15:01.860
我们正式发布以后

15:01.860 --> 15:02.860
你需要关闭它

15:02.860 --> 15:05.860
它默认是一个force

15:05.860 --> 15:06.860
好

15:06.860 --> 15:07.860
继续往下来看一下吧

15:07.860 --> 15:08.860
就是

15:08.860 --> 15:10.860
是否使用插件

15:10.860 --> 15:11.860
那么这个

15:11.860 --> 15:12.860
我们注意一下

15:12.860 --> 15:13.860
这个的话

15:13.860 --> 15:14.860
至少现在

15:14.860 --> 15:15.860
小程序只止

15:15.860 --> 15:16.860
但是在其他不只止

15:16.860 --> 15:17.860
小程序的话

15:17.860 --> 15:18.860
如果说

15:18.860 --> 15:19.860
小程序可以外部

15:19.860 --> 15:21.860
对应插件结构

15:21.860 --> 15:25.010
进行操作

15:25.010 --> 15:26.010
我们继续看一下

15:26.010 --> 15:28.010
我们的window

15:28.010 --> 15:29.010
window对象里面

15:29.010 --> 15:30.010
后面我们还会

15:30.010 --> 15:31.010
有继续的往下讲

15:31.010 --> 15:33.010
我们等会会细讲

15:33.010 --> 15:34.010
那么tabba

15:34.010 --> 15:35.010
底部触摸蓝

15:35.010 --> 15:36.010
底部触摸蓝

15:36.010 --> 15:37.010
就是我们可以

15:37.010 --> 15:38.010
在微信的底部

15:38.010 --> 15:40.010
去做一二三个

15:40.010 --> 15:41.010
这样的触摸

15:41.010 --> 15:42.010
然后能够让它

15:42.010 --> 15:43.010
进行跳转

15:43.010 --> 15:46.010
然后那个network timeout

15:46.010 --> 15:47.010
network timeout

15:47.010 --> 15:48.010
是网络超时时间

15:48.010 --> 15:49.010
那么这个超时时间

15:49.010 --> 15:51.010
无论是你的上传

15:51.010 --> 15:52.010
下载

15:52.010 --> 15:53.010
还有一些

15:53.010 --> 15:54.010
其他的一些动作

15:54.010 --> 15:55.010
只要和网络有关

15:55.010 --> 15:57.010
在一次操作过程中超时了

15:57.010 --> 15:59.010
那它就不会再继续往下

15:59.010 --> 16:00.010
我们说了

16:00.010 --> 16:02.010
它只有微信本身自带着

16:02.010 --> 16:03.010
再往下debug

16:03.010 --> 16:04.010
调试模式

16:04.010 --> 16:05.010
对吧

16:05.010 --> 16:06.010
那么注意一下

16:06.010 --> 16:07.010
插件功能

16:07.010 --> 16:08.010
插件功能的话

16:08.010 --> 16:10.010
主要的是

16:10.010 --> 16:11.010
微信会给到

16:11.010 --> 16:12.010
一些额外的一些

16:12.010 --> 16:14.010
插件的使用

16:14.010 --> 16:15.010
那我们可以把它

16:15.010 --> 16:16.010
放入进来

16:16.010 --> 16:18.010
但是进来之前的话

16:18.010 --> 16:19.010
一定要在这边

16:19.010 --> 16:21.010
设置为true就可以了

16:21.010 --> 16:23.010
一个分包结构配置

16:23.010 --> 16:24.010
合为分包

16:24.010 --> 16:25.010
那么是这样的

16:25.010 --> 16:28.010
微信我们强调的是

16:28.010 --> 16:32.010
它每一个微信小程序

16:32.010 --> 16:34.010
其实我们把它理解为

16:34.010 --> 16:36.010
它是由多个页面

16:36.010 --> 16:38.010
组成的一个

16:38.010 --> 16:41.010
所谓的简易版的APP

16:41.010 --> 16:43.010
那么如果说

16:43.010 --> 16:45.010
这个是一个

16:45.010 --> 16:48.010
非常的一个功能强大的话

16:48.010 --> 16:50.010
它势必逃不开

16:50.010 --> 16:52.010
它现在在里面的一些图片

16:52.010 --> 16:54.010
或者说是外围的一些

16:54.010 --> 16:55.010
一些资源

16:55.010 --> 16:57.010
但是由于微信

16:57.010 --> 16:59.010
它本身的限制导致

16:59.010 --> 17:01.010
每一个所谓的文件

17:01.010 --> 17:03.010
不能超过两兆

17:03.010 --> 17:05.010
那这样的话

17:05.010 --> 17:07.010
我们就只能做到的是

17:07.010 --> 17:09.010
我们如果文件过大

17:09.010 --> 17:10.010
我们就要把它拆成

17:10.010 --> 17:11.010
不同的包

17:11.010 --> 17:13.010
我们可以把主文件

17:13.010 --> 17:15.010
做成一个主包

17:15.010 --> 17:16.010
然后不同的文件

17:16.010 --> 17:17.010
做成分包

17:17.010 --> 17:19.010
那么如果说我的文件

17:19.010 --> 17:21.010
比如说我的微信小程序

17:21.010 --> 17:22.010
有10个页面

17:22.010 --> 17:24.010
那么我们先把前两个页面

17:24.010 --> 17:25.010
打成一个主包

17:25.010 --> 17:27.010
它在两兆之内

17:27.010 --> 17:30.010
然后我们在运行过程中

17:30.010 --> 17:31.010
我们在预夹在

17:31.010 --> 17:33.010
后面的包的结构

17:33.010 --> 17:34.010
那这样的话

17:34.010 --> 17:37.010
就可以做到非常好的一个操作

17:37.010 --> 17:39.010
这个就是属于

17:39.010 --> 17:41.010
每次下载就有两兆的大小

17:41.010 --> 17:42.010
不到两兆

17:42.010 --> 17:43.010
可以这样讲

17:43.010 --> 17:44.010
ok

17:44.010 --> 17:45.010
这就是分包机制

17:45.010 --> 17:47.010
在我们的微信小程中有

17:47.010 --> 17:49.010
那么当然你要做分包的话

17:49.010 --> 17:51.010
就是表示你的程序非常大了

17:51.010 --> 17:52.010
那么你需要在这边

17:52.010 --> 17:54.010
进行配置

17:54.010 --> 17:56.010
这是只有我们看到

17:56.010 --> 17:57.010
微信小程序

17:57.010 --> 17:59.010
和我们的后面的

17:59.010 --> 18:00.010
包括是这两个

18:00.010 --> 18:02.010
H5和RM有

18:02.010 --> 18:04.010
就Racknative

18:04.010 --> 18:05.010
其他的两个小程序

18:05.010 --> 18:06.010
还是没有

18:06.010 --> 18:07.010
紧接着

18:07.010 --> 18:08.010
我们再看

18:08.010 --> 18:09.010
Workers

18:09.010 --> 18:10.010
Workers呢

18:10.010 --> 18:12.010
主要是指的是叫做

18:12.010 --> 18:13.010
多进程

18:13.010 --> 18:14.010
微信小程序

18:14.010 --> 18:16.010
如果你需要使用多进程的话

18:16.010 --> 18:17.010
多线程的话

18:17.010 --> 18:19.010
你就要使用Workers

18:19.010 --> 18:21.010
Workers也会在这里面进行配置

18:21.010 --> 18:23.010
就要很多的功能

18:23.010 --> 18:25.010
就微信小程本身自带

18:25.010 --> 18:26.010
其他的一些生态圈的

18:26.010 --> 18:27.010
和功能上面

18:27.010 --> 18:28.010
它尽是不带这个操作

18:28.010 --> 18:30.010
包括是这个

18:30.010 --> 18:33.010
require background models

18:33.010 --> 18:34.010
它需要指的是

18:34.010 --> 18:36.010
后台的一个播放

18:36.010 --> 18:38.010
或者后台的功能操作

18:38.010 --> 18:40.010
你需要这边配置

18:40.010 --> 18:41.010
比如说

18:41.010 --> 18:42.010
背景音乐播放

18:42.010 --> 18:43.010
背景音乐播放

18:43.010 --> 18:47.010
你就需要在require background models里面

18:47.010 --> 18:49.010
去设定这样的背景音乐

18:49.010 --> 18:50.010
好

18:50.010 --> 18:51.010
待会我们可以看到

18:51.010 --> 18:52.010
Blogging

18:52.010 --> 18:53.010
插件

18:53.010 --> 18:54.010
你用到什么插件吗

18:54.010 --> 18:56.010
如果第三方插件使用的话

18:56.010 --> 18:58.010
需要在这边注册

18:58.010 --> 19:00.010
然后分包下载规则

19:00.010 --> 19:02.010
你是怎么样下

19:02.010 --> 19:03.010
是第一个

19:03.010 --> 19:04.010
主包下载以后

19:04.010 --> 19:06.010
分包连续下载

19:06.010 --> 19:09.010
说打开到某个点上在预加载

19:09.010 --> 19:11.010
Resizable

19:11.010 --> 19:13.010
Resizable表示的是

19:13.010 --> 19:15.010
小程序是否支持

19:15.010 --> 19:18.010
iPad屏幕的旋转

19:18.010 --> 19:21.010
因为对iPad来讲的话

19:21.010 --> 19:23.010
它的屏幕相对比较大

19:23.010 --> 19:24.010
如果你小程序

19:24.010 --> 19:26.010
本身自己在手机端的话

19:26.010 --> 19:28.010
我们一般没有旋转功能

19:28.010 --> 19:29.010
但是如果在Pad端的话

19:29.010 --> 19:30.010
我们其实可以

19:30.010 --> 19:32.010
让它进行旋转操作

19:32.010 --> 19:33.010
这个我们可以在这边

19:33.010 --> 19:35.010
设置一个True

19:35.010 --> 19:37.010
Navigate to Miniprogram

19:37.010 --> 19:38.010
Add Lester

19:38.010 --> 19:41.010
它是只需要跳转小程序的列表

19:41.010 --> 19:42.010
需要跳转小程序的列表

19:42.010 --> 19:43.010
这指的是

19:43.010 --> 19:44.010
外部

19:44.010 --> 19:45.010
铸腰

19:45.010 --> 19:47.010
小程序之间

19:47.010 --> 19:49.010
是可以进行跳转的

19:49.010 --> 19:52.010
小程序之间是可以进行跳转的

19:52.010 --> 19:54.010
而所谓的APP和小程序之间

19:54.010 --> 19:59.010
只有反回的概念

19:59.010 --> 20:00.010
我如果有个APP

20:00.010 --> 20:02.010
外部跳转到小程序

20:02.010 --> 20:04.010
从微信的订阅号

20:04.010 --> 20:05.010
或者说公众号

20:05.010 --> 20:07.010
服务号里面跳转到小程序

20:07.010 --> 20:09.010
小程序可以回

20:09.010 --> 20:10.010
我们的原先的订阅号

20:10.010 --> 20:12.010
但是它无法进行外围跳转

20:12.010 --> 20:14.010
你说小程序跳到百度去

20:14.010 --> 20:15.010
那不行

20:15.010 --> 20:16.010
这就是

20:16.010 --> 20:17.010
但小程序之间

20:17.010 --> 20:19.010
是可以进行跳转的

20:19.010 --> 20:21.010
但是这个功能强调一下

20:21.010 --> 20:23.010
它并不是所有时间都支持

20:23.010 --> 20:24.010
现在的话

20:24.010 --> 20:25.010
应该讲

20:25.010 --> 20:27.010
安卓的上面是支持的

20:27.010 --> 20:28.010
苹果上面的话

20:28.010 --> 20:29.010
之前是支持

20:29.010 --> 20:31.010
后一段时间被封闭了

20:31.010 --> 20:33.010
说这个功能不能用

20:33.010 --> 20:35.010
那么这边只说一下

20:35.010 --> 20:36.010
因为我们之前看到

20:36.010 --> 20:37.010
有些小程序

20:37.010 --> 20:39.010
就是点击它是个综合页

20:39.010 --> 20:40.010
你要跳到哪个小程序

20:40.010 --> 20:41.010
一点下去

20:41.010 --> 20:43.010
在苹果上面是不可以跳转

20:43.010 --> 20:45.010
再有个use components

20:45.010 --> 20:48.010
use components是自定义的组件

20:48.010 --> 20:50.010
我们称之为components

20:50.010 --> 20:52.010
你要使用自定义组件

20:52.010 --> 20:53.010
那么我们在讲解

20:53.010 --> 20:54.010
原生自定义组件的时候

20:54.010 --> 20:56.010
我们说到过using components

20:56.010 --> 20:58.010
把你的组件名网里面写

20:58.010 --> 21:00.010
并且我们进行一个注册

21:00.010 --> 21:01.010
这样就是

21:01.010 --> 21:02.010
这是注意

21:02.010 --> 21:03.010
它不是单页面籍

21:03.010 --> 21:05.010
它写在全局里面

21:05.010 --> 21:07.010
所以它称为全局自定义组件

21:07.010 --> 21:08.010
创建以后

21:08.010 --> 21:09.010
在各个页面都能使用

21:09.010 --> 21:11.010
还有一个permission

21:11.010 --> 21:12.010
permission的话

21:12.010 --> 21:14.010
它其实是小程序接口

21:14.010 --> 21:16.010
提示设置

21:16.010 --> 21:17.010
这个的话

21:17.010 --> 21:18.010
当然我们下面来讲

21:18.010 --> 21:20.010
首先我们简单看到几个

21:20.010 --> 21:21.010
它下面是

21:21.010 --> 21:22.010
这个是前面汇总

21:22.010 --> 21:24.010
然后下面是一个分数

21:24.010 --> 21:25.010
首先pager

21:25.010 --> 21:26.010
我们说一下

21:26.010 --> 21:28.010
pager本身来讲的话

21:28.010 --> 21:29.010
我们讲

21:29.010 --> 21:30.010
每一个小程序页面的

21:30.010 --> 21:31.010
所有的列表都会在pager里面

21:31.010 --> 21:33.010
我们需要

21:33.010 --> 21:34.010
如果新建小程序的话

21:34.010 --> 21:35.010
我们就需要在pager里

21:35.010 --> 21:37.010
去增加一个

21:37.010 --> 21:39.010
我们的小程序的页面路径

21:39.010 --> 21:41.010
但如果说你现在

21:41.010 --> 21:42.010
删除了以后

21:42.010 --> 21:43.010
你也要自行的

21:43.010 --> 21:45.010
再进行维护删除

21:45.010 --> 21:46.010
那么放在

21:46.010 --> 21:48.010
第一个上面的文件

21:48.010 --> 21:50.010
在pagers上面的文件

21:50.010 --> 21:51.010
我们就称之为

21:51.010 --> 21:52.010
是它的起始路径

21:52.010 --> 21:54.010
我们来做一下

21:54.010 --> 21:56.010
首先我们在当前里面

21:56.010 --> 21:58.010
创建一个出来

21:58.010 --> 21:59.010
我们有一个index

21:59.010 --> 22:00.010
对吧

22:00.010 --> 22:02.010
我们这时候在右键

22:02.010 --> 22:04.010
我们去创建一个folder

22:04.010 --> 22:06.010
我们称之为叫about

22:07.010 --> 22:09.010
创建一个about出来

22:09.010 --> 22:10.010
然后我们在里面

22:10.010 --> 22:12.010
去创建我们的样式

22:12.010 --> 22:14.010
创建我们的代码和样式

22:14.010 --> 22:16.010
新建

22:16.010 --> 22:20.010
about.jsx

22:21.010 --> 22:22.010
再来

22:22.010 --> 22:28.510
再创建一个about.css

22:28.510 --> 22:30.510
创建两个文件出来

22:30.510 --> 22:32.510
两个文件里面

22:32.510 --> 22:33.510
先待会儿写

22:33.510 --> 22:34.510
这一旦你创建好以后

22:34.510 --> 22:37.510
我们就把你现在路径

22:37.510 --> 22:40.510
可以往这写一下

22:40.510 --> 22:43.510
about

22:43.510 --> 22:45.510
这样写好

22:45.510 --> 22:46.510
所有你在这边

22:46.510 --> 22:47.510
做好的任何操作

22:47.510 --> 22:49.510
只要你按保存

22:49.510 --> 22:50.510
它就会自动完成

22:50.510 --> 22:52.510
你下面的一个编译

22:52.510 --> 22:53.510
并且

22:53.510 --> 22:55.510
它告诉你修改了什么

22:55.510 --> 22:57.510
并且你生成了什么

22:57.510 --> 22:59.510
这边都会有这些操作

22:59.510 --> 23:00.510
看到吗

23:00.510 --> 23:01.510
我们这样的话

23:01.510 --> 23:02.510
就是

23:02.510 --> 23:04.510
它说为找到component的定义

23:04.510 --> 23:05.510
对啊

23:05.510 --> 23:07.510
因为我现在里面还没写

23:07.510 --> 23:08.510
然后的话

23:08.510 --> 23:09.510
我们需要到这里面

23:09.510 --> 23:10.510
来完成样式结构

23:10.510 --> 23:12.510
我们先可以不写

23:12.510 --> 23:13.510
然后对.jxx

23:13.510 --> 23:14.510
我们来书写一下

23:14.510 --> 23:15.510
做第一步

23:15.510 --> 23:16.510
import

23:16.510 --> 23:18.510
你要把taro导进来

23:18.510 --> 23:19.510
当然

23:19.510 --> 23:21.510
我们要用到组建

23:21.510 --> 23:24.510
component

23:24.510 --> 23:25.510
导入的位置

23:25.510 --> 23:26.510
就是我们说的

23:26.510 --> 23:28.510
taro.js

23:28.510 --> 23:31.510
里面的taro

23:31.510 --> 23:32.510
紧接着

23:32.510 --> 23:34.510
第二步

23:34.510 --> 23:35.510
import

23:35.510 --> 23:36.510
导入

23:36.510 --> 23:37.510
如果这个页面

23:37.510 --> 23:38.510
需要用到的话

23:38.510 --> 23:39.510
我们就可以把

23:39.510 --> 23:43.080
这两个先放着

23:43.080 --> 23:44.080
是什么

23:44.080 --> 23:46.080
是我们所谓的

23:46.080 --> 23:50.540
微信的标签

23:50.540 --> 23:54.540
taro.js.component

23:54.540 --> 23:58.180
再来

23:58.180 --> 24:00.180
导入我们的样式

24:00.180 --> 24:01.180
那么样式在哪里呢

24:01.180 --> 24:03.180
当前目录下

24:03.180 --> 24:05.180
taro.css

24:05.180 --> 24:07.180
倒是样式

24:07.180 --> 24:09.180
expert default

24:09.180 --> 24:12.180
作为借口暴露

24:12.180 --> 24:13.180
做个类

24:13.180 --> 24:16.180
我们称之为about

24:16.180 --> 24:19.810
大写a

24:19.810 --> 24:21.810
extends.component

24:21.810 --> 24:28.000
你可以做它的继承

24:28.000 --> 24:29.000
它只这两个

24:29.000 --> 24:30.000
还没用到过

24:30.000 --> 24:32.000
这个是

24:32.000 --> 24:33.000
紧接着

24:33.000 --> 24:34.000
我们在里面

24:34.000 --> 24:35.000
你可以去

24:35.000 --> 24:37.000
书写你要的结构内容

24:37.000 --> 24:38.000
包括是我们的

24:38.000 --> 24:40.000
初始化的configure

24:40.000 --> 24:42.000
我们可以定义configure

24:42.000 --> 24:43.000
你也可以去定义

24:43.000 --> 24:45.000
你现在的生命周期

24:45.000 --> 24:47.000
我们写上

24:47.000 --> 24:49.000
可以是初始化

24:49.000 --> 24:51.000
内容

24:51.000 --> 24:52.000
配置

24:52.000 --> 24:53.000
应该称之为

24:53.000 --> 24:55.000
然后还有

24:55.000 --> 24:57.000
生命

24:57.000 --> 24:58.000
周期

24:58.000 --> 24:59.000
对吧

24:59.000 --> 25:01.000
然后还有

25:01.000 --> 25:04.890
还有就是我们的

25:04.890 --> 25:05.890
random

25:05.890 --> 25:07.890
这些内容

25:07.890 --> 25:08.890
它会有个错

25:08.890 --> 25:09.890
当然了

25:09.890 --> 25:10.890
我们还没写完

25:10.890 --> 25:11.890
我们需要把

25:11.890 --> 25:13.890
它默认写出来的时候

25:13.890 --> 25:15.890
因为它是继承了component

25:15.890 --> 25:16.890
所以这边

25:16.890 --> 25:19.890
它一定要去完成一个random

25:19.890 --> 25:21.890
需要完成一个random

25:21.890 --> 25:22.890
random里面需要一个return

25:22.890 --> 25:23.890
而return

25:23.890 --> 25:25.890
一定要返回一个

25:25.890 --> 25:27.890
我们的jessar

25:27.890 --> 25:28.890
所以你这边

25:28.890 --> 25:30.890
可以写一下div

25:30.890 --> 25:31.890
写上这样一个内容

25:31.890 --> 25:32.890
contrast保存

25:32.890 --> 25:33.890
你看

25:33.890 --> 25:34.890
它变异就出来了

25:34.890 --> 25:35.890
对吧

25:35.890 --> 25:36.890
然后变异ok以后的话

25:36.890 --> 25:38.890
至少这上面是没有错误了

25:38.890 --> 25:42.900
它生成了about页面

25:42.900 --> 25:44.900
打开你的

25:44.900 --> 25:46.900
微信小程去界面

25:46.900 --> 25:47.900
来看一下

25:47.900 --> 25:48.900
刷新一下

25:48.900 --> 25:49.900
打开pages

25:49.900 --> 25:51.900
是不是about有了

25:51.900 --> 25:52.900
对吧

25:52.900 --> 25:53.900
这样about有了以后

25:53.900 --> 25:54.900
代表你的页面

25:54.900 --> 25:56.900
已经生成成功了

25:56.900 --> 25:58.900
所以去建一个页面的结构

25:58.900 --> 26:00.900
其实相对而言

26:00.900 --> 26:02.900
手动建立一下

26:02.900 --> 26:04.900
就是建立一个jessar

26:04.900 --> 26:05.900
然后把里面的

26:05.900 --> 26:06.900
所需要的内容

26:06.900 --> 26:07.900
给它放进来

26:07.900 --> 26:09.900
然后我们可以建立一个样式

26:09.900 --> 26:10.900
之后我们的样式

26:10.900 --> 26:11.900
可以在这里面进行书写

26:11.900 --> 26:12.900
ok

26:12.900 --> 26:13.900
这是我们这边

26:13.900 --> 26:15.900
所说到的一个新建页面

26:15.900 --> 26:16.900
对吧

26:16.900 --> 26:17.900
新建页面以后的话

26:17.900 --> 26:19.900
你一定要把它放在

26:19.900 --> 26:21.900
我们的pages里面

26:21.900 --> 26:23.900
这是pages所设定的一个纸

26:23.900 --> 26:25.900
紧接着我们再来看

26:25.900 --> 26:27.900
我们再打开我们的官网

26:27.900 --> 26:29.900
这个

26:29.900 --> 26:30.900
是window

26:30.900 --> 26:31.900
在window里面

26:31.900 --> 26:33.900
我们有几个配置

26:33.900 --> 26:34.900
比如说

26:34.900 --> 26:35.900
nevigated by background

26:35.900 --> 26:36.900
然后样式

26:36.900 --> 26:37.900
这几个的话

26:37.900 --> 26:38.900
系统会给到我们

26:38.900 --> 26:40.900
我们来简单修改一下

26:40.900 --> 26:41.900
看一下它的一个

26:41.900 --> 26:43.900
编译后的效果

26:43.900 --> 26:44.900
首先

26:44.900 --> 26:47.900
它给了我们几个

26:47.900 --> 26:48.900
包括是

26:48.900 --> 26:49.900
咱们看到

26:49.900 --> 26:51.900
有一个wechat

26:51.900 --> 26:52.900
wechat

26:52.900 --> 26:53.900
我们大家在微信里面

26:53.900 --> 26:54.900
也见过

26:54.900 --> 26:55.900
它表示

26:55.900 --> 26:57.900
我们写上

26:57.900 --> 26:59.900
terror

26:59.900 --> 27:01.900
操作

27:01.900 --> 27:03.900
那么此时你编译以后

27:03.900 --> 27:04.900
没有问题

27:04.900 --> 27:06.900
它会自动帮你生成

27:06.900 --> 27:07.900
但是此时你去看

27:07.900 --> 27:08.900
你页面的时候

27:08.900 --> 27:09.900
它还是一个首页

27:09.900 --> 27:10.900
为什么呢

27:10.900 --> 27:12.900
原因是在于

27:12.900 --> 27:14.900
因为我们的整个页面的形式

27:14.900 --> 27:17.900
它依然是显示index

27:17.900 --> 27:19.900
所以在index里面

27:19.900 --> 27:20.900
我们去看一下

27:20.900 --> 27:21.900
在index里面

27:21.900 --> 27:23.900
jx差里面

27:23.900 --> 27:24.900
我们发现

27:24.900 --> 27:25.900
它也有一个configure

27:25.900 --> 27:26.900
你还记得我们

27:26.900 --> 27:28.900
原来在做微信小程序的时候

27:28.900 --> 27:29.900
我们讲过

27:29.900 --> 27:31.900
如果是全局配置文件

27:31.900 --> 27:34.900
我们可以放在app.js里面

27:34.900 --> 27:35.900
但如果每个页面

27:35.900 --> 27:37.900
单独有配置的话

27:37.900 --> 27:38.900
我们需要放在

27:38.900 --> 27:40.900
我们的当前这个页面的

27:40.900 --> 27:42.900
当前的配置文件

27:42.900 --> 27:43.900
每个页面也能建立一个

27:43.900 --> 27:44.900
当初叫什么

27:44.900 --> 27:46.900
以我们的项目名称

27:46.900 --> 27:47.900
点json

27:47.900 --> 27:48.900
在那个里面建

27:48.900 --> 27:49.900
所以这边的话

27:49.900 --> 27:51.900
我们就建立了一个首页

27:51.900 --> 27:52.900
如果说

27:52.900 --> 27:53.900
没有这个的话

27:53.900 --> 27:55.900
那么你完全就可以生成

27:55.900 --> 27:57.900
我们现在的一个

27:57.900 --> 28:00.900
全局页面的结构了

28:00.900 --> 28:01.900
你来看

28:01.900 --> 28:03.900
我们把它给删了

28:03.900 --> 28:07.660
它里面没有这一项

28:07.660 --> 28:09.660
然后你此时再来看

28:09.660 --> 28:11.660
太后操作是不是出来了

28:11.660 --> 28:12.660
对吧

28:12.660 --> 28:14.660
好 我们把它先放上

28:14.660 --> 28:16.660
待会儿再来进到它里面

28:16.660 --> 28:17.660
这个有

28:17.660 --> 28:18.660
但是如果说

28:18.660 --> 28:19.660
我们把前后的改掉

28:19.660 --> 28:21.660
比如说我把它改成00

28:21.660 --> 28:22.660
它改成white

28:22.660 --> 28:25.100
然后保存

28:25.100 --> 28:26.100
生成

28:26.100 --> 28:27.100
然后再来看一下页面

28:27.100 --> 28:29.100
是不是变黑色了

28:29.100 --> 28:30.100
这个很简单

28:30.100 --> 28:31.100
这个还记得吗

28:31.100 --> 28:33.100
background test style

28:33.100 --> 28:35.100
它表示背景的一个样式

28:35.100 --> 28:37.100
字体的样式

28:37.100 --> 28:41.060
字体样式是什么

28:41.060 --> 28:42.060
这里面是没有的

28:42.060 --> 28:45.060
那么我们打开我们的

28:45.060 --> 28:46.060
文档

28:46.060 --> 28:48.060
我们继续往下来看

28:48.060 --> 28:49.060
字体样式

28:49.060 --> 28:51.060
它是这个

28:51.060 --> 28:53.060
这个是导航的对吧

28:53.060 --> 28:54.060
那么字体样式

28:54.060 --> 28:55.060
其实它指的是

28:55.060 --> 28:56.060
这里

28:56.060 --> 28:58.060
就是下拉拉顶

28:58.060 --> 29:00.060
我们看一下

29:00.060 --> 29:01.060
首先我们往下走

29:01.060 --> 29:02.060
背景颜色

29:02.060 --> 29:04.060
这几个刚才我们都设置过了

29:04.060 --> 29:06.060
background test style

29:06.060 --> 29:07.060
loading操作

29:07.060 --> 29:08.060
你要设置loading的话

29:08.060 --> 29:10.060
你必须下面先做一步

29:10.060 --> 29:12.060
enable portal refresh

29:12.060 --> 29:14.060
我们把它给打开

29:14.060 --> 29:15.060
默认是force

29:15.060 --> 29:17.060
表示是否开启下拉刷新

29:17.060 --> 29:19.060
那么这个在微信中有

29:19.060 --> 29:21.060
我们这边加一下

29:21.060 --> 29:25.160
是什么

29:25.160 --> 29:26.160
to

29:26.160 --> 29:29.160
表示允许你进入下拉刷新的状态

29:29.160 --> 29:31.160
一旦你完成以后

29:31.160 --> 29:32.160
你看页面

29:32.160 --> 29:34.160
无论你什么样的结构

29:34.160 --> 29:35.160
我们都可以进行下拉了

29:35.160 --> 29:36.160
而下拉以后

29:36.160 --> 29:38.160
这边页面上面

29:38.160 --> 29:39.160
loading有没有

29:39.160 --> 29:40.160
有

29:40.160 --> 29:42.160
但是页面的颜色和背景色保持一致

29:42.160 --> 29:43.160
所以你看不见

29:43.160 --> 29:45.160
所以我们需要额外

29:45.160 --> 29:46.160
再加一个出来

29:46.160 --> 29:48.160
我们看一下

29:48.160 --> 29:51.160
这边有一个background color

29:51.160 --> 29:53.160
把它拿过来

29:53.160 --> 29:56.880
background color

29:56.880 --> 29:58.880
我们给一个设置

29:58.880 --> 29:59.880
这个设置

29:59.880 --> 30:01.880
我们给一个

30:01.880 --> 30:04.510
ccc

30:04.510 --> 30:06.510
灰色设置

30:06.510 --> 30:08.510
当你把灰色设置

30:08.510 --> 30:09.510
上去以后

30:09.510 --> 30:10.510
我们再来看

30:10.510 --> 30:11.510
下拉

30:11.510 --> 30:12.510
是不是灰色出来了

30:12.510 --> 30:13.510
然后我们loading

30:13.510 --> 30:14.510
这个有了

30:14.510 --> 30:15.510
白色

30:15.510 --> 30:16.510
但白色我们现在

30:16.510 --> 30:17.510
没有让它进行变化

30:17.510 --> 30:18.510
那么怎么办呢

30:18.510 --> 30:19.510
我们看到

30:19.510 --> 30:21.510
它上面会告诉你

30:21.510 --> 30:23.510
它的整个这个设置

30:23.510 --> 30:24.510
可以通过dark

30:24.510 --> 30:25.510
跟light来设定

30:25.510 --> 30:27.510
light是白色

30:27.510 --> 30:28.510
dark

30:28.510 --> 30:29.510
那就是我们所谓的

30:29.510 --> 30:30.510
啥

30:30.510 --> 30:32.510
动态效果

30:32.510 --> 30:35.510
我们可以修改它一下

30:35.510 --> 30:37.510
dark

30:37.510 --> 30:42.190
变异

30:42.190 --> 30:43.190
动态效果有了

30:43.190 --> 30:44.190
好

30:44.190 --> 30:45.190
紧接着我们继续往下看

30:45.190 --> 30:48.020
那么还有两项

30:48.020 --> 30:50.020
background color top

30:50.020 --> 30:52.020
这个紧iOS支持

30:52.020 --> 30:53.020
这个用得到不多

30:53.020 --> 30:55.020
顶部的窗户的背景色

30:55.020 --> 30:57.020
底部的窗户的背景色

30:57.020 --> 30:58.020
这个还用得不多

30:58.020 --> 30:59.020
这些是

30:59.020 --> 31:01.020
因为它紧支持一种颜色的话

31:01.020 --> 31:02.020
其实不满足我们

31:02.020 --> 31:03.020
其他的几个

31:03.020 --> 31:04.020
那么你也可以设置

31:04.020 --> 31:05.020
主要还是颜色的

31:05.020 --> 31:07.020
三个f

31:07.020 --> 31:08.020
什么

31:08.020 --> 31:09.020
白色

31:09.020 --> 31:10.020
然后enable我们说了

31:10.020 --> 31:12.020
那么这个的话

31:12.020 --> 31:13.020
我们说

31:13.020 --> 31:15.020
页面上拉触底

31:15.020 --> 31:16.020
也就是说

31:16.020 --> 31:19.020
离顶部的上拉触底

31:19.020 --> 31:21.020
碰到顶部的距离

31:21.020 --> 31:23.020
它的一个显示效果

31:23.020 --> 31:24.020
也就是

31:24.020 --> 31:25.020
如果差顶部

31:25.020 --> 31:27.020
还离开50个

31:27.020 --> 31:28.020
注意它单位

31:28.020 --> 31:30.020
那么微信本身自己

31:30.020 --> 31:31.020
它支持

31:31.020 --> 31:32.020
它原自己的单位

31:32.020 --> 31:33.020
是rpx

31:33.020 --> 31:35.020
那么它同时是支持px的

31:35.020 --> 31:37.020
px和rpx的转换

31:37.020 --> 31:38.020
我们也是讲过的

31:38.020 --> 31:39.020
这边再说一下

31:39.020 --> 31:40.020
px和rpx

31:40.020 --> 31:41.020
在微信里面的话

31:41.020 --> 31:42.020
它会有一个

31:42.020 --> 31:44.020
非固定式的转换

31:44.020 --> 31:46.020
也就是rpx是一个动态的

31:46.020 --> 31:48.020
px是一个固定的像素值

31:48.020 --> 31:50.020
那么他们两者之间的转换

31:50.020 --> 31:53.020
我们一般都用iPhone 6的结构

31:53.020 --> 31:54.020
来进行

31:54.020 --> 31:55.020
所谓的一个配置

31:55.020 --> 31:57.020
或者说基础版的操作

31:57.020 --> 31:59.020
因为iPhone 6的情况下

31:59.020 --> 32:01.020
我们的px和rpx的

32:01.020 --> 32:02.020
转换比率

32:02.020 --> 32:03.020
是1比2的比率

32:03.020 --> 32:05.020
所以我们如果

32:05.020 --> 32:07.020
设定为我们的

32:07.020 --> 32:09.020
比如说

32:09.020 --> 32:11.020
10px

32:11.020 --> 32:13.020
像它这边的50px的话

32:13.020 --> 32:14.020
那就意味着

32:14.020 --> 32:17.020
你可以把它改成100rpx

32:17.020 --> 32:19.020
10px就等于

32:19.020 --> 32:21.020
20rpx

32:21.020 --> 32:22.020
在iPhone 6的情况下

32:22.020 --> 32:24.020
那么在其他的情况下

32:24.020 --> 32:25.020
我们就说明了

32:25.020 --> 32:27.020
如果说你是在其他的

32:27.020 --> 32:28.020
比如说

32:28.020 --> 32:29.020
你上面怎么看

32:29.020 --> 32:30.020
它的模拟器

32:30.020 --> 32:32.020
还有很多的选项

32:32.020 --> 32:34.020
我们在5,6

32:34.020 --> 32:35.020
其他的上面上

32:35.020 --> 32:36.020
它都会有

32:36.020 --> 32:37.020
比如说在6的话

32:37.020 --> 32:40.020
它是1比2.1级

32:40.020 --> 32:41.020
然后5的话

32:41.020 --> 32:43.020
1比1.9级

32:43.020 --> 32:44.020
那么这样的话

32:44.020 --> 32:46.020
它其实差了一点点

32:46.020 --> 32:47.020
但是对页面的

32:47.020 --> 32:48.020
展示效果来讲

32:48.020 --> 32:49.020
其实不会有

32:49.020 --> 32:51.020
特别大的不同

32:51.020 --> 32:52.020
所以我们

32:52.020 --> 32:54.020
用iPhone 6的结构

32:54.020 --> 32:55.020
来作为1比2的比例

32:55.020 --> 32:56.020
这个是一个

32:56.020 --> 32:58.020
微信所需要

32:58.020 --> 32:59.020
或者说

32:59.020 --> 33:00.020
要求我们进行

33:00.020 --> 33:01.020
这方面开发的

33:01.020 --> 33:03.020
那么根据你屏幕来看

33:03.020 --> 33:04.020
如果你屏幕的话

33:04.020 --> 33:06.020
下面显示不下了

33:06.020 --> 33:07.020
或者说不够的话

33:07.020 --> 33:08.020
你就往下拖一下

33:08.020 --> 33:09.020
就能看到全部

33:09.020 --> 33:10.020
还有一种办法

33:10.020 --> 33:12.020
就是你把它的显示比例

33:12.020 --> 33:13.020
缩小一下

33:13.020 --> 33:14.020
这个你也能看到全部

33:14.020 --> 33:15.020
理解吧

33:15.020 --> 33:16.020
好

33:16.020 --> 33:17.020
OK

33:17.020 --> 33:18.020
那么这是我们说到的

33:18.020 --> 33:19.020
这部分

33:19.020 --> 33:20.020
然后再有一个

33:20.020 --> 33:22.020
它是屏幕的旋转设置

33:22.020 --> 33:24.020
屏幕的旋转设置

33:24.020 --> 33:25.020
那么这个的话

33:25.020 --> 33:26.020
主要的

33:26.020 --> 33:28.020
还是属于它支持

33:28.020 --> 33:29.020
只有几个

33:29.020 --> 33:31.020
区域的变化

33:31.020 --> 33:32.020
小程序本身自己

33:32.020 --> 33:33.020
应该讲

33:33.020 --> 33:35.020
在移动端上面的话

33:35.020 --> 33:37.020
它可以多做屏幕的旋转

33:37.020 --> 33:38.020
因为旋转以后

33:38.020 --> 33:40.020
它的整个布局和它的显示效果

33:40.020 --> 33:42.020
就和数牌完全不一样了

33:42.020 --> 33:44.020
所以这个用的不多

33:44.020 --> 33:45.020
屏幕上面我们说

33:45.020 --> 33:46.020
好

33:46.020 --> 33:47.020
咱们看一下

33:47.020 --> 33:48.020
就是我们刚才说的这几项

33:48.020 --> 33:49.020
其实

33:49.020 --> 33:50.020
由于Taro

33:50.020 --> 33:52.020
它是支持各种平台的

33:52.020 --> 33:53.020
那么各种平台

33:53.020 --> 33:54.020
上面的支持比率

33:54.020 --> 33:56.020
首先我们说到的这些

33:56.020 --> 33:57.020
都是在微信上面

33:57.020 --> 33:58.020
是支持的

33:58.020 --> 33:59.020
那么在百度小程序

33:59.020 --> 34:02.020
字节和支付宝上面的话

34:02.020 --> 34:04.020
都有相对的不同的

34:04.020 --> 34:05.020
特别是对于支付宝来讲

34:05.020 --> 34:07.020
有很多的不支持

34:07.020 --> 34:08.020
因为支付宝

34:08.020 --> 34:10.020
本身自己还有它自己的一个

34:10.020 --> 34:12.020
款式和样式的一个固定

34:12.020 --> 34:15.020
它需要进行统一化

34:15.020 --> 34:17.020
那么当然在H5和react上面

34:17.020 --> 34:18.020
更多的不支持

34:18.020 --> 34:20.020
所以一般为什么

34:20.020 --> 34:22.020
微信所给出就前面这几个

34:22.020 --> 34:23.020
因为它支持的

34:23.020 --> 34:25.020
应该讲更多

34:25.020 --> 34:26.020
包括Taro所给出的

34:26.020 --> 34:27.020
也是更多

34:27.020 --> 34:28.020
OK

34:28.020 --> 34:29.020
那么这是我们说到的

34:29.020 --> 34:30.020
包括是咱们看

34:30.020 --> 34:32.020
这是系统给到的一个基本结构

34:32.020 --> 34:34.020
刚才我们也用它

34:34.020 --> 34:36.020
做了一个简单的样式操作

34:36.020 --> 34:37.020
对不对

34:37.020 --> 34:38.020
这样的小做

34:38.020 --> 34:39.020
那么所以大家

34:39.020 --> 34:40.020
如果说

34:40.020 --> 34:42.020
你需要去修改一些内容的时候

34:42.020 --> 34:43.020
你时间长了

34:43.020 --> 34:44.020
你就会知道

34:44.020 --> 34:46.020
在我们的整个这里边

34:46.020 --> 34:48.020
因为它会最后编一层

34:48.020 --> 34:51.020
编一层我们的app.json

34:51.020 --> 34:52.020
看到吧

34:52.020 --> 34:53.020
我之后的修改

34:53.020 --> 34:54.020
都会在这边呈现

34:54.020 --> 34:56.020
你千万还是那句话

34:56.020 --> 34:57.020
别在这边改

34:57.020 --> 34:59.020
你在这边改的话

34:59.020 --> 35:00.020
那么你的维护代码

35:00.020 --> 35:01.020
需要两端维护

35:01.020 --> 35:02.020
我们还是回到我们的

35:02.020 --> 35:04.020
这里来进行操作

35:04.020 --> 35:05.020
OK吧

35:05.020 --> 35:06.020
好

35:06.020 --> 35:07.020
那么这是Windows里面的操作

35:07.020 --> 35:09.020
Windows现在在回忆下

35:09.020 --> 35:11.020
它主要是针对于微信小程序

35:11.020 --> 35:12.020
或者称之为

35:12.020 --> 35:17.020
你现在的小程序端的界面

35:17.020 --> 35:21.020
就是我们的窗体和背景的一个设置

35:21.020 --> 35:22.020
这是我们这边

35:22.020 --> 35:23.020
所看到的

35:23.020 --> 35:25.020
紧接着继续

35:25.020 --> 35:27.020
那么再往下Tababa

35:27.020 --> 35:28.020
Tababa就是我们

35:28.020 --> 35:30.020
所谓的一个触摸栏

35:30.020 --> 35:31.020
注意哦

35:31.020 --> 35:32.020
它这边有一个要求

35:32.020 --> 35:33.020
就是Tababa

35:33.020 --> 35:35.020
以前我们一直讲在底部直线

35:35.020 --> 35:38.020
那么它其实可以在顶部

35:38.020 --> 35:39.020
只不过我们在

35:39.020 --> 35:42.020
现实操作中的不督

35:42.020 --> 35:43.020
我们在顶部有时候

35:43.020 --> 35:44.020
都会用的是

35:44.020 --> 35:46.020
自己去做一个Tab切换

35:46.020 --> 35:48.020
但是它也可以顶部

35:48.020 --> 35:49.020
我们先说明一下

35:49.020 --> 35:51.020
紧接着我们往下看

35:51.020 --> 35:52.020
Tababa在里面的话

35:52.020 --> 35:53.020
待会我们来做一下

35:53.020 --> 35:54.020
它和微信小程序

35:54.020 --> 35:57.020
还是有相同点有不同点

35:57.020 --> 35:59.020
Tababa本身你看到

35:59.020 --> 36:00.020
Color

36:00.020 --> 36:01.020
我们所谓的就是

36:01.020 --> 36:02.020
自体颜色

36:02.020 --> 36:03.020
Select的Color

36:03.020 --> 36:05.020
表示我们的选中自体颜色

36:05.020 --> 36:06.020
Background的Color

36:06.020 --> 36:07.020
背景色

36:07.020 --> 36:08.020
然后呢

36:08.020 --> 36:10.020
这边都是Background Style

36:10.020 --> 36:11.020
那么这边有两个

36:11.020 --> 36:13.020
它主要指的是边框

36:13.020 --> 36:14.020
边框支持的是

36:14.020 --> 36:15.020
白色和黑色

36:15.020 --> 36:16.020
只能选两项

36:16.020 --> 36:17.020
它最重要的一点

36:17.020 --> 36:18.020
就是它

36:18.020 --> 36:19.020
就是Lister

36:19.020 --> 36:20.020
Lister的话

36:20.020 --> 36:21.020
主要是它里面

36:21.020 --> 36:23.020
我们选择项

36:23.020 --> 36:24.020
就是底部几个

36:24.020 --> 36:25.020
选择项的点击

36:25.020 --> 36:26.020
选择项的点击

36:26.020 --> 36:27.020
它里面每一个

36:27.020 --> 36:28.020
它是速度结构

36:28.020 --> 36:30.020
每一个都是Jason

36:30.020 --> 36:31.020
Jason里面的话

36:31.020 --> 36:32.020
需要单独配置

36:32.020 --> 36:33.020
待会我们来做

36:33.020 --> 36:34.020
还有一个是这个

36:34.020 --> 36:35.020
就是我们刚才讲到的

36:35.020 --> 36:37.020
它到底是顶部和底部

36:37.020 --> 36:38.020
如果是顶部的话

36:38.020 --> 36:40.020
你需要把它改一下

36:40.020 --> 36:41.020
改成Top

36:41.020 --> 36:42.020
如果是底部的话

36:42.020 --> 36:43.020
你就要默认

36:43.020 --> 36:44.020
不要设定它也可以

36:44.020 --> 36:45.020
它就是Button

36:45.020 --> 36:46.020
这个是

36:46.020 --> 36:48.020
以及我们有个Custom

36:48.020 --> 36:49.020
Custom的话

36:49.020 --> 36:51.020
其实是用户自定义Tababa

36:51.020 --> 36:52.020
你想变成什么样子

36:52.020 --> 36:53.020
是否是自定义的

36:53.020 --> 36:55.020
那么一般性微信

36:55.020 --> 36:56.020
上面的话

36:56.020 --> 36:57.020
我们自定义不多

36:57.020 --> 36:58.020
要用它线系统

36:58.020 --> 37:00.020
给到的这些就可以

37:00.020 --> 37:01.020
同时先看一下

37:01.020 --> 37:03.020
它的支持基本上都支持

37:03.020 --> 37:05.020
特别是Custom

37:05.020 --> 37:08.020
除了基础库2.5.0

37:08.020 --> 37:09.020
以上的微信支持

37:09.020 --> 37:10.020
其他压根都不支持

37:10.020 --> 37:12.020
因为一旦自定义的话

37:12.020 --> 37:14.020
你上面的整个格式

37:14.020 --> 37:16.020
或者说你整个的效果

37:16.020 --> 37:18.020
完全和你微信所给出的

37:18.020 --> 37:20.020
或者称之为小程序所给出的

37:20.020 --> 37:22.020
有非常大的一个不同点的

37:22.020 --> 37:24.020
或者说风险性在

37:24.020 --> 37:25.020
是这意思

37:25.020 --> 37:26.020
那么我们刚才说了

37:26.020 --> 37:29.020
List里面是我们现在的一个

37:29.020 --> 37:32.020
下面每一个点击框的操作

37:32.020 --> 37:34.020
List里面你看到这边

37:34.020 --> 37:35.020
会有四个选项

37:35.020 --> 37:36.020
一个是Payter Pass

37:36.020 --> 37:37.020
一个Tester

37:37.020 --> 37:38.020
一个是Icon Pass

37:38.020 --> 37:39.020
一个Select Icon Pass

37:39.020 --> 37:40.020
那么我们怎么样

37:40.020 --> 37:41.020
去对它进行操作呢

37:41.020 --> 37:43.020
我们来看一下

37:43.020 --> 37:45.020
首先我们这边

37:45.020 --> 37:47.020
去写我们的Tababa

37:47.020 --> 37:49.020
那么如果有几种写法

37:49.020 --> 37:50.020
如果你怕自己写错

37:50.020 --> 37:52.020
那么第一种写法

37:52.020 --> 37:54.020
你就打开官网

37:54.020 --> 37:55.020
打开官网

37:55.020 --> 37:56.020
官网上面的话

37:56.020 --> 37:58.020
你去把Tababa给复制下来

37:58.020 --> 37:59.020
然后的话

37:59.020 --> 38:01.020
按照微信所要求的来写

38:01.020 --> 38:03.020
还有第二种方式

38:03.020 --> 38:04.020
第一种是手写

38:04.020 --> 38:06.020
第二种方式是这样干

38:06.020 --> 38:08.020
你打开微信

38:08.020 --> 38:09.020
微信里面由于Tababa

38:09.020 --> 38:11.020
是属于小程序

38:11.020 --> 38:13.020
所特有的一个功能

38:13.020 --> 38:15.020
所以在这样的编辑器里面

38:15.020 --> 38:16.020
它会有提示

38:16.020 --> 38:18.020
这种操作我们讲

38:18.020 --> 38:19.020
并不是编辑

38:19.020 --> 38:21.020
而是我们功能化的

38:21.020 --> 38:22.020
Tababa

38:22.020 --> 38:23.020
你看到吗

38:23.020 --> 38:24.020
它会有Tababa的提示

38:24.020 --> 38:26.020
功能化的一个使用

38:26.020 --> 38:28.020
利用回车的方式

38:28.020 --> 38:30.020
它帮你补了一个出来

38:30.020 --> 38:32.020
所以我们把这个内容

38:32.020 --> 38:34.020
复制剪切掉

38:34.020 --> 38:35.020
我们把它剪切掉

38:35.020 --> 38:37.020
这里面亚哥先不做任何东西

38:37.020 --> 38:38.020
对吧

38:38.020 --> 38:39.020
放弃

38:39.020 --> 38:41.020
我们不用去打进修改

38:41.020 --> 38:42.020
它里面还是维持原样

38:42.020 --> 38:44.020
但是刚才的那个代码

38:44.020 --> 38:45.020
我们已经复制到了

38:45.020 --> 38:47.020
此时我们到这边来打

38:47.020 --> 38:48.020
把它放出来

38:48.020 --> 38:49.020
注意

38:49.020 --> 38:51.020
一定是属于前和后

38:51.020 --> 38:52.020
两个之间

38:53.020 --> 38:54.020
然后在最后这个上面

38:54.020 --> 38:56.020
你就不用加豆好了

38:56.020 --> 38:57.020
这样的情况

38:57.020 --> 38:58.020
那么我们看到的是

38:58.020 --> 39:00.020
系统给了我们一个

39:00.020 --> 39:01.020
我们的Lister

39:01.020 --> 39:03.020
我们里面的一项

39:03.020 --> 39:04.020
那么对于Lister来讲

39:04.020 --> 39:07.020
我们要求是至少两项

39:07.020 --> 39:09.020
最多五项

39:09.020 --> 39:10.020
在底部

39:10.020 --> 39:12.020
所以我们就可以对它进行

39:12.020 --> 39:14.020
简单的一个格式定义

39:14.020 --> 39:19.630
我们把这个往后移一下

39:19.630 --> 39:21.630
这是一项

39:21.630 --> 39:22.630
我们打一个豆

39:22.630 --> 39:24.630
我们再补一个上来

39:27.390 --> 39:28.390
再补一个上来

39:28.390 --> 39:29.390
然后此时

39:29.390 --> 39:31.390
我们就来配里面的四项内容

39:31.390 --> 39:33.390
第一项是Payter Pass

39:33.390 --> 39:34.390
那么这时候

39:34.390 --> 39:35.390
我们拿上面

39:35.390 --> 39:36.390
注意

39:36.390 --> 39:37.390
你拿的路径一定是

39:37.390 --> 39:38.390
从Payters里面拿的

39:38.390 --> 39:40.390
我们把它放在这

39:40.390 --> 39:41.390
第二个

39:41.390 --> 39:43.390
我们的About

39:43.390 --> 39:45.390
把它放在这

39:46.390 --> 39:47.390
第二个是

39:47.390 --> 39:48.390
我们Test的显示内容

39:48.390 --> 39:50.390
咱们称之为

39:50.390 --> 39:51.390
首页

39:51.390 --> 39:53.390
这个关于

39:53.390 --> 39:55.390
这两个都放好了

39:55.390 --> 39:56.390
再往下

39:56.390 --> 39:57.390
就是两个

39:57.390 --> 39:58.390
我们的图片

39:58.390 --> 40:00.390
图片的方式

40:00.390 --> 40:01.390
在微信里面

40:01.390 --> 40:02.390
我们是在根目录下

40:02.390 --> 40:03.390
去创建的

40:03.390 --> 40:04.390
这点就不一样

40:04.390 --> 40:05.390
那么这点

40:05.390 --> 40:06.390
我们说明的是

40:06.390 --> 40:08.390
由于我们本身来讲

40:08.390 --> 40:10.390
它需要有一个编译过程

40:10.390 --> 40:13.390
所以我们整个的操作

40:13.390 --> 40:14.390
包括是我们的

40:14.390 --> 40:16.390
自己建立的操作

40:16.390 --> 40:18.390
我们都得放在

40:18.390 --> 40:20.390
我们的SRC里面

40:20.390 --> 40:21.390
放在SRC

40:21.390 --> 40:22.390
不像微信

40:22.390 --> 40:23.390
我们放在根目录下

40:23.390 --> 40:24.390
或者说

40:24.390 --> 40:25.390
放在任何地方都可以

40:25.390 --> 40:27.390
但是对于我们的Teller来讲

40:27.390 --> 40:29.390
我们在SRC里面

40:29.390 --> 40:31.390
你新建一个目录

40:32.390 --> 40:34.390
我们叫做Imagers

40:35.390 --> 40:36.390
当你新建以后

40:36.390 --> 40:37.390
你发现吗

40:37.390 --> 40:38.390
它这边会感知

40:38.390 --> 40:40.390
你已经新建了这样一个目录

40:40.390 --> 40:41.390
紧接着

40:41.390 --> 40:43.390
我们把自己

40:43.390 --> 40:44.390
之前如果有过的

40:44.390 --> 40:46.390
我们的一些图片

40:46.390 --> 40:47.390
比如说

40:47.390 --> 40:48.390
我有这些图片

40:48.390 --> 40:49.390
我把这些

40:49.390 --> 40:51.390
这是系统所给到的一个

40:51.390 --> 40:52.390
实例里面的

40:52.390 --> 40:53.390
几个Icon图标

40:53.390 --> 40:55.390
我把它给复制过来

40:56.390 --> 40:57.390
把它直接放在

40:57.390 --> 40:59.390
我们的Imagers里面

40:59.390 --> 41:01.390
这边复制不进去

41:01.390 --> 41:03.390
所以我们通过

41:03.390 --> 41:04.390
我们的

41:05.390 --> 41:06.390
根文件来复制

41:07.390 --> 41:09.390
这就是我们的物理路径

41:09.390 --> 41:11.390
先跑到这边来

41:11.390 --> 41:14.390
这是我们的APP1

41:14.390 --> 41:16.390
然后跑到SRC里面

41:16.390 --> 41:17.390
刚才是不是建了Imagers

41:17.390 --> 41:18.390
打开

41:18.390 --> 41:20.390
我们把它复制在这边

41:20.390 --> 41:22.390
12344张图片

41:22.390 --> 41:23.390
对吧

41:23.390 --> 41:25.390
然后我们把它放在旁边去

41:26.390 --> 41:27.390
紧接着

41:27.390 --> 41:29.390
我们从这里面就能看到

41:29.390 --> 41:30.390
它告诉你

41:30.390 --> 41:31.390
其实你的新建

41:31.390 --> 41:33.390
你的当前的程序下面

41:33.390 --> 41:35.390
有四个新文件就来了

41:35.390 --> 41:37.390
然后我们对它进行放置

41:37.390 --> 41:38.390
第一步

41:38.390 --> 41:39.390
找到路径

41:39.390 --> 41:40.390
路径不能错

41:40.390 --> 41:41.390
因为现在

41:41.390 --> 41:42.390
你是在哪个下面

41:42.390 --> 41:45.390
在我们的APP.jsX下面

41:45.390 --> 41:47.390
所以和它同级目录下

41:47.390 --> 41:48.390
有一个Imagers

41:48.390 --> 41:49.390
所以我们来做

41:49.390 --> 41:51.390
同级目录下的Imagers

41:51.390 --> 41:55.390
下面的Icon1.png

41:55.390 --> 41:56.390
注意

41:56.390 --> 41:57.390
我们一定要选择到

41:57.390 --> 41:58.390
这两个不能错

41:58.390 --> 42:00.390
这个是以选中的

42:00.390 --> 42:01.390
以选中的

42:01.390 --> 42:02.390
应该是什么

42:02.390 --> 42:03.390
绿色的

42:03.390 --> 42:04.390
未选中的

42:04.390 --> 42:05.390
应该是

42:05.390 --> 42:07.390
所谓的灰色的

42:07.390 --> 42:09.390
所以你会看到

42:09.390 --> 42:11.390
我们的1是什么

42:11.390 --> 42:13.390
1本身来讲

42:13.390 --> 42:15.390
是一个灰色的

42:15.390 --> 42:16.390
灰色就是未选中

42:16.390 --> 42:17.390
对吧

42:17.390 --> 42:18.390
那么OK

42:18.390 --> 42:19.390
我们这个写法是对的

42:19.390 --> 42:20.390
紧接着

42:20.390 --> 42:22.770
往下

42:22.770 --> 42:23.770
我们这边写上

42:23.770 --> 42:24.770
1

42:24.770 --> 42:25.770
同样

42:25.770 --> 42:32.540
我们把它复制一下

42:32.540 --> 42:34.540
2

42:34.540 --> 42:35.540
2

42:35.540 --> 42:36.540
保存

42:36.540 --> 42:37.540
保存以后的话

42:37.540 --> 42:38.540
它整个这个

42:38.540 --> 42:39.540
会进行编译

42:39.540 --> 42:40.540
编译以后的话

42:40.540 --> 42:41.540
生成我们的界面

42:41.540 --> 42:43.540
然后我们打开来看

42:43.540 --> 42:44.540
是不是

42:44.540 --> 42:45.540
这边就会有两个出来了

42:45.540 --> 42:46.540
这边有两个出来了

42:46.540 --> 42:47.540
同时

42:47.540 --> 42:49.540
你随便这边

42:49.540 --> 42:50.540
是否打开

42:50.540 --> 42:51.540
它会直接帮你

42:51.540 --> 42:52.540
把里面代码给更新

42:52.540 --> 42:53.540
你会发现

42:53.540 --> 42:54.540
这边就有了

42:54.540 --> 42:55.540
对吧

42:55.540 --> 42:56.540
这边是关于

42:56.540 --> 42:57.540
是不是跳到了

42:57.540 --> 42:59.540
第二个关于页面来

42:59.540 --> 43:00.540
过来了

43:00.540 --> 43:01.540
因为这个页面上

43:01.540 --> 43:02.540
我们没有做任何东西

43:02.540 --> 43:03.540
对不对

43:03.540 --> 43:04.540
然后

43:04.540 --> 43:05.540
首页有个Hello word

43:05.540 --> 43:06.540
OK

43:06.540 --> 43:07.540
那么这样的话

43:07.540 --> 43:08.540
就完成了

43:08.540 --> 43:09.540
这个tabba的创建

43:09.540 --> 43:10.540
记住吗

43:10.540 --> 43:11.540
这个格式

43:11.540 --> 43:12.540
OK

43:12.540 --> 43:13.540
那么这下面的

43:13.540 --> 43:14.540
这种文字

43:14.540 --> 43:15.540
包括是这个的话

43:15.540 --> 43:17.540
你可以单独进行配置

43:17.540 --> 43:20.540
我们来做一个简单的设置

43:20.540 --> 43:21.540
比如说

43:21.540 --> 43:22.540
你们看到的

43:22.540 --> 43:24.540
这边有一个

43:24.540 --> 43:25.540
style

43:25.540 --> 43:26.540
border style

43:26.540 --> 43:27.540
样式的设定

43:27.540 --> 43:29.540
你要跑到当前的

43:29.540 --> 43:30.540
这个配置文件

43:30.540 --> 43:32.540
或者配置configure哪里呢

43:32.540 --> 43:34.540
tabba的list的外面

43:34.540 --> 43:36.540
在这边进行设定

43:36.540 --> 43:38.540
在这边进行设定

43:38.540 --> 43:39.540
我们要求的是

43:39.540 --> 43:41.540
它只有两个选项

43:41.540 --> 43:42.540
一个是黑色

43:42.540 --> 43:43.540
一个是白色

43:43.540 --> 43:44.540
默认状态下

43:44.540 --> 43:45.540
我们再来看一下

43:45.540 --> 43:46.540
默认状态

43:46.540 --> 43:47.540
它这条边框

43:47.540 --> 43:49.540
是一个黑色的

43:49.540 --> 43:51.540
我们可以设定一个白色

43:51.540 --> 43:52.540
white

43:52.540 --> 43:53.540
别忘了

43:53.540 --> 43:54.540
6号

43:54.540 --> 43:55.540
contrast保存

43:55.540 --> 43:57.540
此时我们来看一下

43:57.540 --> 43:58.540
发现没有

43:58.540 --> 43:59.540
没有了

43:59.540 --> 44:00.540
这条线

44:00.540 --> 44:01.540
理解吧

44:01.540 --> 44:04.540
然后我们再来加解一下

44:04.540 --> 44:05.540
它还有什么呢

44:05.540 --> 44:07.540
叫做 background color

44:07.540 --> 44:09.540
背景色

44:09.540 --> 44:11.540
然后我们再来设定

44:11.540 --> 44:16.190
同样在这个位置

44:16.190 --> 44:17.190
我们设定16进质的

44:17.190 --> 44:20.190
比如说

44:20.190 --> 44:22.190
我们做一个

44:22.190 --> 44:24.190
先给一个看一下

44:24.190 --> 44:26.500
f00

44:26.500 --> 44:27.500
当然

44:27.500 --> 44:29.500
这上面去设置这个的话

44:29.500 --> 44:31.500
总不太好看

44:31.500 --> 44:32.500
但是我们看到了

44:32.500 --> 44:33.500
它可以设置

44:33.500 --> 44:36.500
我就把它先给擦了

44:36.500 --> 44:38.500
绿配红

44:38.500 --> 44:39.500
很难看

44:39.500 --> 44:40.500
然后紧接着

44:40.500 --> 44:41.500
我们回来以后

44:41.500 --> 44:42.500
我们把上面这个

44:42.500 --> 44:48.420
也改成 black

44:48.420 --> 44:49.420
此时我们能看到

44:49.420 --> 44:51.420
它已经呈现出来了

44:51.420 --> 44:52.420
再接下去的话

44:52.420 --> 44:53.420
我们如果选关于

44:53.420 --> 44:55.420
或者说我们这样点

44:55.420 --> 44:57.420
下面这个字体颜色

44:58.420 --> 44:59.420
和它现在的

44:59.420 --> 45:01.420
这个颜色是保持一致的

45:01.420 --> 45:02.420
如果你不要的话

45:02.420 --> 45:04.420
那么在官网的上面

45:04.420 --> 45:05.420
它会告诉你

45:05.420 --> 45:07.420
你有一个 selected color

45:07.420 --> 45:08.420
表示

45:08.420 --> 45:10.420
选中以后的自色

45:10.420 --> 45:11.420
和字颜色

45:11.420 --> 45:12.420
这两个我又不再做了

45:12.420 --> 45:13.420
你可以设置

45:13.420 --> 45:14.420
它的位置

45:14.420 --> 45:16.420
依然是放在 lister 外面

45:16.420 --> 45:17.420
tabber bar 的里面

45:17.420 --> 45:18.420
这样位置上去放

45:18.420 --> 45:19.420
这样就可能看到

45:19.420 --> 45:21.420
下面的这个配置了

45:21.420 --> 45:23.420
这几个内容都有

45:23.420 --> 45:24.420
我们把这个设定一下

45:24.420 --> 45:25.420
就是 position

45:25.420 --> 45:26.420
有个 top

45:26.420 --> 45:27.420
我们看一下

45:27.420 --> 45:29.420
如果它在顶部的时候

45:29.420 --> 45:30.420
也在这里

45:30.420 --> 45:37.700
top

45:37.700 --> 45:38.700
保存

45:38.700 --> 45:40.700
此时我们来看看

45:40.700 --> 45:41.700
看到了吗

45:41.700 --> 45:42.700
顶部的效果

45:42.700 --> 45:43.700
其实和底部

45:43.700 --> 45:45.700
有一个最大的区别

45:45.700 --> 45:46.700
就是底部

45:46.700 --> 45:47.700
它是一个点

45:47.700 --> 45:48.700
比如说是

45:48.700 --> 45:49.700
我们所谓的

45:49.700 --> 45:50.700
有一条线

45:50.700 --> 45:51.700
但顶部的话

45:51.700 --> 45:52.700
它其实下面

45:52.700 --> 45:54.700
自己会多出这个效果来

45:54.700 --> 45:56.700
这样切换两个页面

45:56.700 --> 45:57.700
你会感受到的

45:57.700 --> 45:58.700
好像是

45:58.700 --> 46:00.700
做了一个 tab 效果

46:00.700 --> 46:01.700
有一个

46:01.700 --> 46:03.700
我们的 tab 页面结构

46:03.700 --> 46:04.700
其实

46:04.700 --> 46:06.700
就可以用这样的方式来操作

46:06.700 --> 46:07.700
ok吧

46:07.700 --> 46:08.700
这是属于 tab 的

46:08.700 --> 46:09.700
紧接着

46:09.700 --> 46:12.460
我们继续来看

46:12.460 --> 46:14.460
你要做顶部 tab 的时候

46:14.460 --> 46:15.460
有两种方式

46:15.460 --> 46:16.460
第一步

46:16.460 --> 46:17.460
你就可以

46:17.460 --> 46:18.460
自行去做一个

46:18.460 --> 46:19.460
这个很方便

46:19.460 --> 46:21.460
自己做一个 tab 在顶部

46:21.460 --> 46:22.460
第二个的话

46:22.460 --> 46:23.460
你就用我们现在的

46:23.460 --> 46:24.460
这样的 position

46:24.460 --> 46:25.460
那么自己做

46:25.460 --> 46:27.460
和用 position 的 tab bar

46:27.460 --> 46:28.460
的两个区别是什么呢

46:28.460 --> 46:29.460
你自己做

46:29.460 --> 46:30.460
其实

46:30.460 --> 46:33.460
我们不一定会跳转页面

46:33.460 --> 46:34.460
之后

46:34.460 --> 46:35.460
我们会大家可以演示

46:35.460 --> 46:37.460
我们可以在当前页面中

46:37.460 --> 46:38.460
利用一些组件

46:38.460 --> 46:41.460
完成页面的切换

46:41.460 --> 46:42.460
你现在可以打开

46:42.460 --> 46:43.460
你现在手机上面

46:43.460 --> 46:45.460
任何的这样的新闻类

46:45.460 --> 46:46.460
比如说进入头条

46:46.460 --> 46:48.460
缩护新闻

46:48.460 --> 46:49.460
那么上面

46:49.460 --> 46:50.460
我们会有这种

46:50.460 --> 46:52.460
所谓的菜单

46:52.460 --> 46:53.460
对不对

46:53.460 --> 46:54.460
导航蓝

46:54.460 --> 46:55.460
你点击以后

46:55.460 --> 46:56.460
你发现吗

46:56.460 --> 46:57.460
它底部

46:57.460 --> 46:58.460
其实是没有挑页面的

46:58.460 --> 46:59.460
它其实是通过

46:59.460 --> 47:00.460
我们当前那些

47:00.460 --> 47:02.460
组件的滑块

47:02.460 --> 47:04.460
进行滑块的切换

47:04.460 --> 47:05.460
并非页面

47:05.460 --> 47:06.460
但是如果你要把

47:06.460 --> 47:08.460
position 本来做成 top 的话

47:08.460 --> 47:10.460
那么顶部的这样的操作

47:10.460 --> 47:12.460
它其实是切页面的

47:12.460 --> 47:14.460
这点上面是不同的

47:14.460 --> 47:15.460
这个我们知道一下

47:15.460 --> 47:17.460
那么经常我们的操作

47:17.460 --> 47:19.460
还是把它先放在底部

47:19.460 --> 47:20.460
因为大家很习惯

47:20.460 --> 47:26.030
对吧

47:26.030 --> 47:27.030
OK

47:27.030 --> 47:28.030
那么紧接着

47:28.030 --> 47:30.030
我们继续往下来看

47:30.030 --> 47:32.030
这是属于 tab bar 的

47:32.030 --> 47:33.030
上面的话

47:33.030 --> 47:35.030
你如果不满足这个条件的话

47:35.030 --> 47:37.030
它一定会给你

47:37.030 --> 47:38.030
抱错

47:38.030 --> 47:39.030
比如说我就写一个

47:39.030 --> 47:40.030
一个你还要去给它干嘛

47:40.030 --> 47:41.030
你根本就没法跳

47:41.030 --> 47:42.030
对吧

47:42.030 --> 47:43.030
那么同时

47:43.030 --> 47:44.030
额外再说一下

47:44.030 --> 47:45.030
就是

47:45.030 --> 47:48.030
我们一旦把这个页面的内容

47:48.030 --> 47:49.030
这个路径

47:49.030 --> 47:50.030
放在了 tab bar 的

47:50.030 --> 47:51.030
我们里面的 path 中

47:51.030 --> 47:52.030
那跳转方式

47:52.030 --> 47:55.030
就必须用 switch tab 来进行跳转

47:55.030 --> 47:57.030
这是额外说一下

47:57.030 --> 47:58.030
紧接着

47:58.030 --> 47:59.030
我们看到

47:59.030 --> 48:00.030
它下面会给你一个建议

48:00.030 --> 48:01.030
那么大家之后

48:01.030 --> 48:03.030
在做这张图片的时候

48:03.030 --> 48:04.030
你也可以

48:04.030 --> 48:07.030
显示为 81 x 81 像素的

48:07.030 --> 48:08.030
它注意

48:08.030 --> 48:10.030
它不支持网络图片

48:10.030 --> 48:11.030
所以这点上面的话

48:11.030 --> 48:12.030
我们要相信

48:12.030 --> 48:13.030
就是说

48:13.030 --> 48:14.030
微信本身的图片

48:14.030 --> 48:17.030
它其实可以用网络图片来载

48:17.030 --> 48:18.030
因为我们讲了

48:18.030 --> 48:19.030
每一个微信包的大小

48:19.030 --> 48:20.030
不可以超过两兆

48:20.030 --> 48:22.030
所以它不像网页一样

48:22.030 --> 48:23.030
本地可以存放图片

48:23.030 --> 48:25.030
但是 icon

48:25.030 --> 48:27.030
因为它是个图标概念

48:27.030 --> 48:28.030
注意

48:28.030 --> 48:29.030
它是个图标

48:29.030 --> 48:30.030
它的本身

48:30.030 --> 48:32.030
是一定会放置在微信里面的

48:32.030 --> 48:33.030
并且它的大小

48:33.030 --> 48:36.030
是限制在 40K 以内

48:36.030 --> 48:38.030
这点知道一下就行了

48:38.030 --> 48:39.030
OK

48:39.030 --> 48:40.030
我们看到这句话

48:40.030 --> 48:42.030
当它为 top 时候是不显示 icon

48:42.030 --> 48:44.030
所以你在做

48:44.030 --> 48:45.030
那个

48:45.030 --> 48:46.030
头部的时候

48:46.030 --> 48:47.030
你说

48:47.030 --> 48:48.030
没有这个 icon 的显示

48:48.030 --> 48:49.030
但是

48:49.030 --> 48:50.030
有同学说

48:50.030 --> 48:52.030
老师 既然我如果这么做

48:52.030 --> 48:53.030
那我能不能

48:53.030 --> 48:55.030
把这两个就不写了

48:55.030 --> 48:56.030
你来看

48:56.030 --> 49:02.570
保存

49:02.570 --> 49:03.570
页面

49:03.570 --> 49:07.480
不写了

49:07.480 --> 49:09.480
但是如果你把它放在底部的话

49:09.480 --> 49:10.480
你来看

49:10.480 --> 49:11.480
保存

49:11.480 --> 49:15.070
看到吗

49:15.070 --> 49:19.280
它底部会出现

49:19.280 --> 49:21.280
这两项的时候的话

49:21.280 --> 49:22.280
依然会

49:22.280 --> 49:23.280
就是我们所谓的

49:23.280 --> 49:24.280
显示效果

49:24.280 --> 49:25.280
是不好的

49:27.280 --> 49:29.280
这边额外说一下

49:29.280 --> 49:30.280
这边额外

49:30.280 --> 49:31.280
这个和微信

49:31.280 --> 49:32.280
本身自己有一个很大的

49:32.280 --> 49:33.280
微信原生开发

49:33.280 --> 49:35.280
原生在开发的时候

49:35.280 --> 49:36.280
如果说

49:36.280 --> 49:37.280
你在这里面

49:37.280 --> 49:39.280
把它这两项不写的话

49:39.280 --> 49:41.280
原生是抱错的

49:41.280 --> 49:42.280
就是你不可以

49:42.280 --> 49:43.280
这样去做

49:43.280 --> 49:44.280
你没有

49:44.280 --> 49:45.280
是没有所谓的

49:45.280 --> 49:46.280
这两项不存在

49:46.280 --> 49:48.280
但是对于我们的

49:48.280 --> 49:49.280
那个terror 来讲

49:49.280 --> 49:50.280
我们没有它

49:50.280 --> 49:51.280
因为它编译的时候

49:51.280 --> 49:53.280
就可以去形成这样的效果

49:53.280 --> 49:54.280
因为它多了一个

49:54.280 --> 49:56.280
这个position 的方式

49:57.280 --> 49:58.280
OK

49:58.280 --> 49:59.280
我们就说明一下

49:59.280 --> 50:00.280
这一点

50:00.280 --> 50:01.280
紧接着

50:01.280 --> 50:02.280
我们继续往下走

50:02.280 --> 50:04.280
Type 8 就讲完了

50:04.280 --> 50:05.280
它的属性里面

50:05.280 --> 50:06.280
基本上我们都设计到

50:06.280 --> 50:08.280
所以对大家来讲的话

50:09.280 --> 50:11.280
怎么样去利用这些属性

50:11.280 --> 50:12.280
做出你所需要的界面

50:12.280 --> 50:13.280
每一个属性

50:13.280 --> 50:14.280
我们都会设计到了

50:14.280 --> 50:15.280
已经是

50:15.280 --> 50:16.280
再往下

50:17.280 --> 50:19.280
Network Timeout

50:19.280 --> 50:20.280
它是作为

50:20.280 --> 50:21.280
网络请求

50:21.280 --> 50:23.280
超时时间处理

50:23.280 --> 50:24.280
那么在我们的

50:24.280 --> 50:25.280
微信上面的话

50:25.280 --> 50:26.280
它的网络请求

50:26.280 --> 50:28.280
因为它本身自己

50:28.280 --> 50:29.280
主要是和

50:29.280 --> 50:30.280
除了本地存储

50:30.280 --> 50:31.280
一些icon

50:31.280 --> 50:32.280
和临时的一些

50:32.280 --> 50:33.280
Template目录图片以外

50:33.280 --> 50:35.280
Template文件以外

50:35.280 --> 50:36.280
它很多的一些操作

50:36.280 --> 50:37.280
都是和网络请求

50:37.280 --> 50:39.280
无论是数据的请求

50:39.280 --> 50:40.280
还是图片的请求

50:40.280 --> 50:42.280
或者说是一些

50:42.280 --> 50:43.280
云端的请求

50:43.280 --> 50:44.280
都是需要的

50:44.280 --> 50:46.280
但是我们不可靠

50:46.280 --> 50:47.280
也就意味着

50:47.280 --> 50:48.280
网络上面的时间

50:48.280 --> 50:49.280
如果太慢的话

50:49.280 --> 50:50.280
注意它的时间确定

50:50.280 --> 50:53.280
它的时间是在6万

50:53.280 --> 50:54.280
我们知道

50:54.280 --> 50:55.280
它的单位是好秒

50:55.280 --> 50:56.280
所以意味着

50:56.280 --> 50:58.280
61000等于1秒

50:58.280 --> 50:59.280
所以6万

50:59.280 --> 51:01.280
也就是所谓多少

51:01.280 --> 51:02.280
1分钟

51:03.280 --> 51:04.280
60秒

51:04.280 --> 51:05.280
对吧

51:05.280 --> 51:06.280
我们来看

51:06.280 --> 51:07.280
它几个

51:07.280 --> 51:08.280
它可以识别

51:08.280 --> 51:09.280
或者说

51:09.280 --> 51:10.280
它可以去控制的是

51:10.280 --> 51:11.280
request

51:11.280 --> 51:12.280
那么我们平时

51:12.280 --> 51:13.280
所讲到的

51:13.280 --> 51:15.280
它是一个

51:15.280 --> 51:17.280
异部的通讯机制

51:17.280 --> 51:18.280
也就是我们平时

51:18.280 --> 51:19.280
在用其他的一些

51:19.280 --> 51:20.280
语法做手的

51:20.280 --> 51:21.280
类似于那个

51:21.280 --> 51:22.280
阿甲克斯的概念

51:22.280 --> 51:23.280
异部通讯机制

51:23.280 --> 51:24.280
还有获取

51:24.280 --> 51:25.280
socket的连接

51:25.280 --> 51:27.280
这是实时连接功能

51:27.280 --> 51:28.280
也是一样

51:28.280 --> 51:30.280
还有uplotify

51:30.280 --> 51:31.280
表示

51:31.280 --> 51:32.280
我进行

51:32.280 --> 51:33.280
所谓的

51:33.280 --> 51:34.280
上传

51:34.280 --> 51:35.280
或者说

51:35.280 --> 51:36.280
下载文件

51:36.280 --> 51:38.280
我们的下载文件

51:38.280 --> 51:39.280
我们的download file

51:39.280 --> 51:40.280
这两个

51:40.280 --> 51:41.280
都是属于

51:41.280 --> 51:43.280
我们的

51:43.280 --> 51:44.280
1分钟机制

51:44.280 --> 51:45.280
那么你

51:45.280 --> 51:46.280
设它的时候

51:46.280 --> 51:47.280
你不用去对它

51:47.280 --> 51:48.280
进行额外设定

51:48.280 --> 51:49.280
你只需要

51:49.280 --> 51:51.280
把它给打开

51:51.280 --> 51:52.280
这样就是

51:52.280 --> 51:53.280
来看一下

51:53.280 --> 51:54.280
Bender Day

51:54.280 --> 51:55.280
给我们设置

51:55.280 --> 51:56.280
我们看一下写法

51:56.280 --> 51:57.280
我们写在

51:57.280 --> 51:58.280
这

51:58.280 --> 51:59.280
不是在Table 8里面了

51:59.280 --> 52:00.280
我们设定

52:00.280 --> 52:03.280
network

52:03.280 --> 52:04.280
timeout

52:04.280 --> 52:07.360
别忘了

52:07.360 --> 52:08.360
我们这边

52:08.360 --> 52:10.360
给它完成一个

52:10.360 --> 52:12.360
格式化

52:12.360 --> 52:13.360
那么在

52:13.360 --> 52:14.360
主要不是简单的

52:14.360 --> 52:15.360
设为true and false

52:15.360 --> 52:17.360
你需要做法式

52:17.360 --> 52:18.360
你在这里面

52:18.360 --> 52:19.360
单独给它设定

52:19.360 --> 52:22.360
比如我想设的是request

52:22.360 --> 52:23.360
我只设的是

52:23.360 --> 52:24.360
1万

52:24.360 --> 52:26.360
然后

52:26.360 --> 52:29.360
download file

52:29.360 --> 52:31.360
我给它设的是

52:31.360 --> 52:32.360
1万5

52:32.360 --> 52:34.360
这样去设定

52:34.360 --> 52:35.360
然后这样的话

52:35.360 --> 52:37.360
它才会去对它起作用

52:37.360 --> 52:39.360
这点大家需要了解

52:39.360 --> 52:40.360
就把刚才几项

52:40.360 --> 52:42.360
往里放就行了

52:42.360 --> 52:43.360
额外说明一下

52:43.360 --> 52:46.360
那么在Json格式里面

52:46.360 --> 52:47.360
我们这边的话

52:47.360 --> 52:48.360
特别注意

52:48.360 --> 52:49.360
它永远是存在于

52:49.360 --> 52:51.360
我们的一个建值队

52:51.360 --> 52:53.360
也就是用贸后的方式

52:53.360 --> 52:54.360
千万别在这边

52:54.360 --> 52:55.360
去做等于

52:55.360 --> 52:56.360
这个操作

52:56.360 --> 52:57.360
等于是我们的

52:57.360 --> 52:58.360
方法

52:58.360 --> 52:59.360
函数里面

52:59.360 --> 53:00.360
所做的事情

53:00.360 --> 53:01.360
好了

53:01.360 --> 53:02.360
紧接着

53:02.360 --> 53:04.740
我们继续往下来看

53:04.740 --> 53:05.740
第八个

53:05.740 --> 53:07.740
第八个是调试模式

53:07.740 --> 53:08.740
调试模式

53:08.740 --> 53:09.740
默认状态下

53:09.740 --> 53:10.740
是不打开的

53:10.740 --> 53:12.740
那么默认状态下的调试

53:12.740 --> 53:13.740
只是你认为的

53:13.740 --> 53:15.740
你想看什么数据

53:15.740 --> 53:16.740
你就可以做输出

53:16.740 --> 53:17.740
但是

53:17.740 --> 53:18.740
我们在系统调试过程中

53:18.740 --> 53:20.740
我们很希望看到

53:20.740 --> 53:21.740
系统究竟

53:21.740 --> 53:22.740
做了哪些步骤

53:22.740 --> 53:23.740
哪些先做

53:23.740 --> 53:24.740
哪些后做的

53:24.740 --> 53:25.740
那么这种时候

53:25.740 --> 53:26.740
系统就会

53:26.740 --> 53:27.740
你可以打开

53:27.740 --> 53:28.740
第八个

53:28.740 --> 53:29.740
等于q

53:29.740 --> 53:30.740
然后

53:30.740 --> 53:32.740
系统会以一个info的方式

53:32.740 --> 53:33.740
在控制台

53:33.740 --> 53:34.740
把你的整个

53:34.740 --> 53:36.740
把系统整个的操作

53:36.740 --> 53:37.740
给你显示出来

53:37.740 --> 53:38.740
第八个info

53:38.740 --> 53:39.740
那我们来看一下

53:39.740 --> 53:41.740
我们在这边设定

53:41.740 --> 53:42.740
还是一样

53:42.740 --> 53:43.740
很简单

53:43.740 --> 53:48.650
我们做成

53:48.650 --> 53:49.650
第八个

53:49.650 --> 53:50.650
我们做成

53:50.650 --> 53:51.650
tru

53:51.650 --> 53:52.650
这样是好

53:52.650 --> 53:54.650
cantress保存

53:54.650 --> 53:56.650
此时你来到我们的界面中

53:56.650 --> 53:57.650
它去刷新

53:57.650 --> 53:58.650
注意这边没有

53:58.650 --> 54:00.650
这边会出一堆的内容出来

54:00.650 --> 54:01.650
这一堆的内容

54:01.650 --> 54:02.650
其实就是

54:02.650 --> 54:04.650
系统在运行了什么东西

54:04.650 --> 54:06.650
以一个info的方式出来

54:06.650 --> 54:07.650
你比如说你看

54:07.650 --> 54:08.650
它告诉你

54:08.650 --> 54:09.650
系统越默认

54:09.650 --> 54:11.650
先做了一个onlunch

54:11.650 --> 54:12.650
代表的是

54:12.650 --> 54:13.650
系统的一个

54:13.650 --> 54:14.650
加载

54:14.650 --> 54:15.650
显示

54:15.650 --> 54:17.650
它做了一个onlpprouter

54:17.650 --> 54:19.650
就是路由的一个寻止

54:19.650 --> 54:20.650
代表的是

54:20.650 --> 54:22.650
它找到了当前的一个

54:22.650 --> 54:23.650
起始路由

54:23.650 --> 54:24.650
然后更新了

54:24.650 --> 54:25.650
页面的初始数据

54:25.650 --> 54:27.650
那么这个初始数据

54:27.650 --> 54:29.650
就是从我们的

54:29.650 --> 54:30.650
app

54:30.650 --> 54:31.650
在我们的index里面

54:31.650 --> 54:32.650
拿到的

54:32.650 --> 54:33.650
然后再完成页面的

54:33.650 --> 54:34.650
捞的

54:34.650 --> 54:36.650
把数据夹在进去以后

54:36.650 --> 54:37.650
准备显示

54:37.650 --> 54:38.650
显示数据

54:38.650 --> 54:39.650
这边执行一下

54:39.650 --> 54:41.650
虽然我们没有在这里面去写代

54:41.650 --> 54:43.650
但是它完全是可以完成

54:43.650 --> 54:45.650
这个一个的操作过程

54:45.650 --> 54:46.650
让大家能看到

54:46.650 --> 54:48.650
最后完成以后的话

54:48.650 --> 54:50.650
永远最后执行的是我们的

54:50.650 --> 54:51.650
这部分就是unread it

54:51.650 --> 54:52.650
注意

54:52.650 --> 54:54.650
这里面的整个这个

54:54.650 --> 54:55.650
其实是微信

54:55.650 --> 54:57.650
在编译以后

54:57.650 --> 54:59.650
在执行的时候的生命周期

54:59.650 --> 55:01.650
而并非是我们

55:01.650 --> 55:02.650
terror的格式

55:02.650 --> 55:04.650
terror 本身自己在最后

55:04.650 --> 55:05.650
编译以后的话

55:05.650 --> 55:06.650
它会把它

55:06.650 --> 55:08.650
转换成这样的模型

55:08.650 --> 55:10.650
这是我们所设计到的

55:10.650 --> 55:11.650
那么大家同时

55:11.650 --> 55:12.650
刚才也看到了

55:12.650 --> 55:13.650
我们下面这边

55:13.650 --> 55:14.650
也有生命周期

55:14.650 --> 55:15.650
那么生命周期

55:15.650 --> 55:16.650
相对比较多

55:16.650 --> 55:18.650
我们会在固定的

55:18.650 --> 55:19.650
下节课里面

55:19.650 --> 55:20.650
给大家强调来讲解

55:20.650 --> 55:21.650
那么生命周期

55:21.650 --> 55:22.650
哪些是

55:22.650 --> 55:24.650
微信本身自带的

55:24.650 --> 55:25.650
微信自己有的

55:25.650 --> 55:26.650
哪些是通用的

55:26.650 --> 55:27.650
哪些是在哪个

55:27.650 --> 55:28.650
节点上操作

55:28.650 --> 55:29.650
那么

55:29.650 --> 55:30.650
特别注意

55:30.650 --> 55:31.650
telebar的设置的话

55:31.650 --> 55:33.650
特别是在telebar里面

55:33.650 --> 55:34.650
设置的话

55:34.650 --> 55:35.650
在我们的config里面

55:35.650 --> 55:36.650
设置的话

55:36.650 --> 55:37.650
有非常多的

55:37.650 --> 55:38.650
让我们能够

55:38.650 --> 55:39.650
很好的

55:39.650 --> 55:40.650
完成界面的

55:40.650 --> 55:41.650
一个展示

55:41.650 --> 55:43.650
和它的预调式功能

55:43.650 --> 55:44.650
还有接下来的话

55:44.650 --> 55:45.650
这些我就不在这边

55:45.650 --> 55:46.650
去做了

55:46.650 --> 55:48.650
包括是function pager

55:48.650 --> 55:49.650
它表示页面插件

55:49.650 --> 55:50.650
还有紫包的

55:50.650 --> 55:51.650
是否启用包

55:51.650 --> 55:53.650
或者是多线程的

55:53.650 --> 55:54.650
一个操作

55:54.650 --> 55:55.650
以及我们下面

55:55.650 --> 55:57.650
是否有我们的一个

55:57.650 --> 55:59.650
叫做后台运行能力

55:59.650 --> 56:00.650
那么有些内容

56:00.650 --> 56:01.650
后台运行

56:01.650 --> 56:02.650
倒可以

56:02.650 --> 56:03.650
就是这句话

56:03.650 --> 56:04.650
我们有些程序

56:04.650 --> 56:05.650
想运行

56:05.650 --> 56:06.650
比如说后台音乐播放

56:06.650 --> 56:08.650
我们在原生里面做过

56:08.650 --> 56:09.650
对吧

56:09.650 --> 56:10.650
我们说

56:10.650 --> 56:11.650
做一个在线播放器

56:11.650 --> 56:13.650
然后点击一个图像以后

56:13.650 --> 56:14.650
那么它其实是在

56:14.650 --> 56:16.650
后台播放音乐

56:16.650 --> 56:17.650
同时我们也可以

56:17.650 --> 56:18.650
做一个页面

56:18.650 --> 56:19.650
直接有一个

56:19.650 --> 56:20.650
后台播放的功能

56:20.650 --> 56:22.650
我们需要把这个内容

56:22.650 --> 56:24.650
把它直接先放在

56:27.650 --> 56:28.650
告诉他

56:28.650 --> 56:29.650
现在我的模式中

56:29.650 --> 56:30.650
是开启了

56:30.650 --> 56:32.650
后台的一个播放功能

56:32.650 --> 56:33.650
模式

56:33.650 --> 56:34.650
什么东西呢

56:34.650 --> 56:35.650
Audio的播放

56:35.650 --> 56:36.650
好

56:36.650 --> 56:37.650
再来

56:37.650 --> 56:40.860
Plugging

56:40.860 --> 56:41.860
是否需要使用

56:41.860 --> 56:42.860
插件这些

56:42.860 --> 56:43.860
那么这个

56:43.860 --> 56:44.860
是否是在

56:44.860 --> 56:45.860
我们PAD上

56:45.860 --> 56:46.860
支持屏幕旋转

56:46.860 --> 56:47.860
这些

56:47.860 --> 56:48.860
那么

56:48.860 --> 56:49.860
Uthing Component

56:49.860 --> 56:50.860
我们做到

56:50.860 --> 56:51.860
我们组建的时候

56:51.860 --> 56:53.860
我们来对它进行配置

56:53.860 --> 56:54.860
那么最后一个

56:54.860 --> 56:57.860
说的是Permission

56:57.860 --> 56:58.860
Permission的话

56:58.860 --> 56:59.860
它其实是一个

56:59.860 --> 57:00.860
叫做接口提示

57:00.860 --> 57:01.860
接口提示

57:01.860 --> 57:02.860
接口提示

57:02.860 --> 57:03.860
我们有时候

57:03.860 --> 57:04.860
会去问用户

57:04.860 --> 57:05.860
要一些权限

57:05.860 --> 57:06.860
比如说

57:06.860 --> 57:08.860
我希望得到你

57:08.860 --> 57:09.860
当前的位置

57:09.860 --> 57:10.860
我希望得到你

57:10.860 --> 57:12.860
当前的摄像机

57:12.860 --> 57:13.860
摄像功能

57:13.860 --> 57:14.860
我希望得到你

57:14.860 --> 57:16.860
现在的一个

57:16.860 --> 57:17.860
比如说

57:19.860 --> 57:20.860
麦克风

57:20.860 --> 57:21.860
类似于这样的

57:21.860 --> 57:22.860
一个权限设置

57:22.860 --> 57:24.860
那么这样的权限

57:24.860 --> 57:25.860
你一般用户都会是

57:25.860 --> 57:26.860
确定取消这样的按钮

57:26.860 --> 57:27.860
对吧

57:27.860 --> 57:28.860
那么需要的时候

57:28.860 --> 57:29.860
除了这个以外

57:29.860 --> 57:30.860
我们后面

57:30.860 --> 57:31.860
还会给它一个

57:31.860 --> 57:32.860
所谓的描述文本

57:32.860 --> 57:33.860
所以呢

57:33.860 --> 57:34.860
我们在这边

57:34.860 --> 57:36.860
可以把这个打上去

57:36.860 --> 57:38.860
我们把它先配置到

57:38.860 --> 57:39.860
我们的代码中

57:40.860 --> 57:42.860
你可以把这个打上

57:42.860 --> 57:43.860
这个注意

57:43.860 --> 57:44.860
它指的是

57:44.860 --> 57:45.860
你看这边

57:45.860 --> 57:46.860
User Location

57:46.860 --> 57:47.860
它指的是

57:47.860 --> 57:48.860
Scopper User Location

57:48.860 --> 57:49.860
是指在你

57:49.860 --> 57:50.860
获取当前

57:50.860 --> 57:51.860
用户位置的时候

57:51.860 --> 57:52.860
我们可以注意

57:52.860 --> 57:54.860
它不是修改

57:54.860 --> 57:56.860
它是多加一个

57:56.860 --> 57:58.860
多加一个提示

57:58.860 --> 58:00.860
多加一个提示出来

58:00.860 --> 58:02.860
那么我们看系统所给到的

58:02.860 --> 58:04.860
我们看系统所给到的

58:05.860 --> 58:06.860
系统所给到的

58:06.860 --> 58:07.860
是这样

58:07.860 --> 58:09.860
如果你想获得位置的时候

58:09.860 --> 58:11.860
上面是系统所给出的

58:11.860 --> 58:12.860
要获取你的地理位置

58:12.860 --> 58:13.860
对不对

58:13.860 --> 58:14.860
但是

58:14.860 --> 58:15.860
同时

58:15.860 --> 58:17.860
这句话会出现在下面

58:17.860 --> 58:19.860
做一个提示

58:19.860 --> 58:20.860
它只会用到

58:20.860 --> 58:22.860
你现在效果展示上

58:22.860 --> 58:24.860
它并不是改变你上面的

58:24.860 --> 58:26.860
需要获取内容的文本

58:26.860 --> 58:27.860
如果能改文本的话

58:27.860 --> 58:28.860
那这事儿糟了

58:28.860 --> 58:30.860
你现在要获得它地理位置

58:30.860 --> 58:31.860
你就说一下

58:31.860 --> 58:32.860
你喜欢小程序吗

58:32.860 --> 58:34.860
然后诱导用户点允许

58:34.860 --> 58:35.860
允许

58:35.860 --> 58:36.860
或者取消

58:36.860 --> 58:37.860
所以它只是一个提示

58:37.860 --> 58:38.860
OK

58:38.860 --> 58:39.860
到这里的话

58:39.860 --> 58:40.860
我们的TabBar

58:40.860 --> 58:41.860
或者

58:41.860 --> 58:44.860
我们的App的

58:44.860 --> 58:45.860
JSA的一个配置

58:45.860 --> 58:46.860
就是Configure

58:46.860 --> 58:48.860
那么我们就全都讲到了

58:48.860 --> 58:49.860
在这里面

58:49.860 --> 58:50.860
我们看到

58:50.860 --> 58:52.860
我们有非常多的一些配置情况

58:52.860 --> 58:53.860
那么并不是大家

58:53.860 --> 58:54.860
所有的内容

58:54.860 --> 58:55.860
都要马上去记住

58:55.860 --> 58:56.860
但是有一些内容

58:56.860 --> 58:57.860
你至少来进来以后

58:57.860 --> 58:59.860
一进到这个程序以后

58:59.860 --> 59:00.860
你可以马上的

59:00.860 --> 59:01.860
进行一些简单的配置

59:01.860 --> 59:02.860
比如说

59:02.860 --> 59:04.860
这个你是非得知道的

59:04.860 --> 59:06.860
因为每个页面都和它有关

59:06.860 --> 59:08.860
然后页面的好不好看

59:08.860 --> 59:09.860
页面的顶部

59:09.860 --> 59:10.860
你可以把这里面

59:10.860 --> 59:12.860
进行简单的一些修改

59:12.860 --> 59:13.860
那么时间上面

59:13.860 --> 59:14.860
如果你现在

59:14.860 --> 59:15.860
网络

59:15.860 --> 59:16.860
如果你发现

59:16.860 --> 59:17.860
网络还比较快

59:17.860 --> 59:18.860
那么你暂时

59:18.860 --> 59:19.860
可以不设置

59:19.860 --> 59:20.860
Network Timeout

59:20.860 --> 59:21.860
但是你发现

59:21.860 --> 59:22.860
你现在网络就是很慢

59:22.860 --> 59:23.860
那么你这时候

59:23.860 --> 59:25.860
你就可以采取这个模式

59:25.860 --> 59:26.860
同时

59:26.860 --> 59:28.860
你一旦采取这个模式以后

59:28.860 --> 59:29.860
我们是可以

59:29.860 --> 59:30.860
在用微信小程序里面

59:30.860 --> 59:32.860
这边进行调试的

59:32.860 --> 59:34.860
我们在微信小程序的

59:34.860 --> 59:36.860
整个的屏幕上面

59:36.860 --> 59:37.860
我们有一个

59:37.860 --> 59:38.860
网络连接状态

59:38.860 --> 59:39.860
那么你这时候

59:39.860 --> 59:41.860
你可以切2G 3G 4G

59:41.860 --> 59:43.860
来保持你现在网络上面

59:43.860 --> 59:44.860
如果不通

59:44.860 --> 59:45.860
或者不顺畅

59:45.860 --> 59:46.860
情况下的

59:46.860 --> 59:47.860
一个连接

59:47.860 --> 59:48.860
或者是操作

59:48.860 --> 59:50.860
这上面是可以这么去做的

59:50.860 --> 59:51.860
OK

59:51.860 --> 59:52.860
那么这是我们说到的

59:52.860 --> 59:53.860
再往下的话

59:53.860 --> 59:54.860
背景音乐

59:54.860 --> 59:55.860
包括调试模式

59:55.860 --> 59:57.860
那么调试模式的话

59:58.860 --> 01:00:00.860
默认你可以把它都打开吧

01:00:00.860 --> 01:00:02.860
因为我们后期的话

01:00:02.860 --> 01:00:03.860
在做的过程中

01:00:03.860 --> 01:00:05.860
我们都会自行的去完成

01:00:05.860 --> 01:00:07.860
现在的模式的创建

01:00:07.860 --> 01:00:08.860
和你现在的

01:00:08.860 --> 01:00:10.860
一些提示代码的一个输出

01:00:10.860 --> 01:00:12.860
那么它主要的还是

01:00:12.860 --> 01:00:14.860
基于我们微信的

01:00:14.860 --> 01:00:16.860
生命周期的一个呈现

01:00:16.860 --> 01:00:18.860
Permission表示的是位置

01:00:18.860 --> 01:00:20.860
或者说用户全线

01:00:20.860 --> 01:00:22.860
用户全线的提示文本

01:00:23.860 --> 01:00:24.860
还有一个就是Table 8

01:00:24.860 --> 01:00:25.860
Table 8里面

01:00:25.860 --> 01:00:26.860
我们刚才讲的比较多

01:00:26.860 --> 01:00:29.860
因为Table 8本身的配置来讲

01:00:29.860 --> 01:00:31.860
虽然不难

01:00:31.860 --> 01:00:33.860
但是东西比较多

01:00:33.860 --> 01:00:35.860
完成了我们底部的操作

01:00:35.860 --> 01:00:37.860
我们当初强调了一句话

01:00:37.860 --> 01:00:40.860
底部一旦有了这样的一个Table 8以后

01:00:40.860 --> 01:00:43.860
调短模型就变成了改变了

01:00:43.860 --> 01:00:44.860
调短语剧

01:00:44.860 --> 01:00:46.860
我们以前用过什么

01:00:46.860 --> 01:00:48.860
Navigate to redirect to

01:00:48.860 --> 01:00:50.860
那么这些都是不能用的

01:00:50.860 --> 01:00:52.860
你要用微信特有的

01:00:52.860 --> 01:00:54.860
SwitchTab的结构来做

01:00:54.860 --> 01:00:57.860
那么这就是我们所谓的一个框架

01:00:57.860 --> 01:01:00.860
加配置文件的一个做法

01:01:00.860 --> 01:01:02.860
那么相信大家看到了以后

01:01:02.860 --> 01:01:05.860
一定会对它进行一定的熟悉

01:01:05.860 --> 01:01:08.860
同时我们这里再讲一下

01:01:08.860 --> 01:01:10.860
因为刚才我们涉及到的是

01:01:10.860 --> 01:01:11.860
这是全局的在哪里

01:01:11.860 --> 01:01:13.860
在app.jsX里面

01:01:13.860 --> 01:01:15.860
那么如果单页面中

01:01:15.860 --> 01:01:17.860
我们单页面中也会有这样一个

01:01:17.860 --> 01:01:19.860
刚才我们看到了

01:01:19.860 --> 01:01:21.860
我们在我们的index下面

01:01:21.860 --> 01:01:22.860
这边有一个

01:01:22.860 --> 01:01:24.860
那么在这个里面

01:01:24.860 --> 01:01:25.860
在单页面里面

01:01:25.860 --> 01:01:28.860
你只能书写的是Window里面的这块部分

01:01:28.860 --> 01:01:30.860
你只能书写Window的这块部分

01:01:30.860 --> 01:01:33.860
而不能去书写其他的

01:01:33.860 --> 01:01:35.860
因为对于Window来讲

01:01:35.860 --> 01:01:37.860
它并非针对于

01:01:37.860 --> 01:01:39.860
对于我们的Pater

01:01:39.860 --> 01:01:40.860
每个页面来讲

01:01:40.860 --> 01:01:41.860
它并非针对于全局

01:01:41.860 --> 01:01:43.860
它只针对于当前页面的

01:01:43.860 --> 01:01:45.860
一个显示情况

01:01:45.860 --> 01:01:47.860
所以它只能有当前页面的

01:01:47.860 --> 01:01:49.860
Window窗口的配置信息

01:01:49.860 --> 01:01:51.860
你不能对它里面也设置配置

01:01:51.860 --> 01:01:53.860
你也对它设置超时时间

01:01:53.860 --> 01:01:54.860
那不行

01:01:54.860 --> 01:01:55.860
这点理解

01:01:55.860 --> 01:01:57.860
所以我们只需要修改的时候

01:01:57.860 --> 01:01:58.860
你把这里面的某部分内容

01:01:58.860 --> 01:02:00.860
比如说你就像这个

01:02:00.860 --> 01:02:01.860
你把它复制过来

01:02:01.860 --> 01:02:02.860
这边进行修改

01:02:02.860 --> 01:02:03.860
就可以了

01:02:03.860 --> 01:02:06.860
这是属于我们的配置的一部分内容

01:02:06.860 --> 01:02:08.860
我们可以打开看到

01:02:08.860 --> 01:02:09.860
具体的配置

01:02:09.860 --> 01:02:11.860
我们在这边讲了也比较多

01:02:11.860 --> 01:02:12.860
那么大家的话

01:02:12.860 --> 01:02:13.860
可以去尝试

01:02:13.860 --> 01:02:14.860
一定注意

01:02:14.860 --> 01:02:16.860
你在这边的操作

01:02:16.860 --> 01:02:19.860
整个的我们的

01:02:19.860 --> 01:02:21.860
APP点直接插里面的操作

01:02:21.860 --> 01:02:24.860
你会影响到直接保存就可以

01:02:24.860 --> 01:02:26.860
发现如果有错

01:02:26.860 --> 01:02:27.860
你就直接在下面

01:02:27.860 --> 01:02:28.860
它的提示

01:02:28.860 --> 01:02:29.860
我觉得还是比较顺的

01:02:29.860 --> 01:02:30.860
特别是有同学

01:02:30.860 --> 01:02:31.860
看到中文状态下

01:02:31.860 --> 01:02:32.860
会觉得很舒服

01:02:32.860 --> 01:02:34.860
我们前面有一个抱错的点

01:02:34.860 --> 01:02:35.860
对吧

01:02:35.860 --> 01:02:36.860
它提示也会比较全

01:02:36.860 --> 01:02:37.860
告诉你

01:02:37.860 --> 01:02:38.860
在这里面

01:02:38.860 --> 01:02:39.860
你看到

01:02:39.860 --> 01:02:40.860
它说你这还没写全

01:02:40.860 --> 01:02:42.860
这里面还有东西

01:02:42.860 --> 01:02:43.860
理解吧

01:02:43.860 --> 01:02:44.860
我们其实

01:02:44.860 --> 01:02:45.860
我们当初只是保存了一下

01:02:45.860 --> 01:02:46.860
我们只是保存了一下

01:02:46.860 --> 01:02:48.860
我们其实要把Random里面给写全

01:02:48.860 --> 01:02:50.860
新建页面的时候

01:02:50.860 --> 01:02:51.860
同时这边在额外说一下

01:02:51.860 --> 01:02:53.860
新建页面的时候

01:02:53.860 --> 01:02:54.860
我们都建在Peters下面

01:02:54.860 --> 01:02:56.860
我们去新建一个

01:02:56.860 --> 01:02:57.860
建一个目录出来

01:02:57.860 --> 01:02:59.860
然后里面两个文件

01:02:59.860 --> 01:03:00.860
这个文件结构

01:03:00.860 --> 01:03:02.860
要和你当初创建的时候保持一致

01:03:02.860 --> 01:03:03.860
你创建是用Less

01:03:03.860 --> 01:03:04.860
就用Less

01:03:04.860 --> 01:03:06.860
你创建CSS就CSS

01:03:06.860 --> 01:03:07.860
然后里边的话

01:03:07.860 --> 01:03:08.860
我们会导入

01:03:08.860 --> 01:03:09.860
这个由于我这里没有用

01:03:09.860 --> 01:03:10.860
所以它会抱两个红线

01:03:10.860 --> 01:03:11.860
没有关系

01:03:11.860 --> 01:03:13.860
然后你导入这个样式

01:03:13.860 --> 01:03:14.860
那么这里边的

01:03:14.860 --> 01:03:15.860
初始配置

01:03:15.860 --> 01:03:16.860
生命周期

01:03:16.860 --> 01:03:17.860
加Random

01:03:17.860 --> 01:03:18.860
Random一定要有这个内容

01:03:18.860 --> 01:03:19.860
为什么

01:03:19.860 --> 01:03:20.860
因为它这里叫做

01:03:20.860 --> 01:03:21.860
继承

01:03:21.860 --> 01:03:23.860
它用了我们的类

01:03:23.860 --> 01:03:25.860
和继承的概念

01:03:25.860 --> 01:03:27.860
然后继承了Component

01:03:27.860 --> 01:03:28.860
Component里面

01:03:28.860 --> 01:03:29.860
就需要你有一个

01:03:29.860 --> 01:03:30.860
我们的Random

01:03:30.860 --> 01:03:32.860
Random里面需要有Return

01:03:32.860 --> 01:03:33.860
Return一定要有一个

01:03:33.860 --> 01:03:34.860
JSX的返回

01:03:34.860 --> 01:03:35.860
所以我们就写了

01:03:35.860 --> 01:03:36.860
一个这样的一个内容

01:03:36.860 --> 01:03:37.860
你可以里面写

01:03:37.860 --> 01:03:39.860
比如说123

01:03:39.860 --> 01:03:40.860
这个内容都可以

01:03:40.860 --> 01:03:41.860
好了

01:03:41.860 --> 01:03:43.860
那么这就是我们这边

01:03:43.860 --> 01:03:44.860
所要设计到的

01:03:44.860 --> 01:03:45.860
我们的一个

01:03:45.860 --> 01:03:47.860
包括新建页面也好

01:03:47.860 --> 01:03:49.860
包括是我们的项目结构

01:03:49.860 --> 01:03:50.860
也好

01:03:50.860 --> 01:03:51.860
包括是我们的一个

01:03:51.860 --> 01:03:52.860
配置文件也好

01:03:52.860 --> 01:03:53.860
全部内容

01:03:53.860 --> 01:03:54.860
大家可以去

01:03:54.860 --> 01:03:55.860
自己观察一下

