WEBVTT

00:00.620 --> 00:06.620
我们继续接着我们之前的内容来讲解我们的录音机功能

00:06.620 --> 00:11.620
那么在之前的课程中呢 我们现在已经完成了所谓的一个

00:11.620 --> 00:14.620
最终显示的一个scholar view

00:14.620 --> 00:17.620
把我们的一个view的结构简单搭建一下

00:17.620 --> 00:22.620
页面会呈现出路径 成主事件和音频大小

00:22.620 --> 00:25.620
这样的三个信息

00:25.620 --> 00:28.620
然后呢 我们又做了一个动态麦克风

00:28.620 --> 00:31.620
也就是说 当我按键按下去以后

00:31.620 --> 00:36.620
那么会有这样的一个麦克风的一个动作进行操作

00:36.620 --> 00:39.620
那么这是我们之后需要做的一个事情

00:39.620 --> 00:42.620
然后呢 现在呢 我们先把它隐藏一下

00:42.620 --> 00:45.620
待会我们再来 因为它是一个

00:45.620 --> 00:47.620
并不是一个功能性的操作

00:47.620 --> 00:51.620
它只是一个景上天花 让我们能看到更有意思的

00:51.620 --> 00:53.620
我们先做下面的一块

00:53.620 --> 00:55.620
下面这一块我们先写出来

00:55.620 --> 00:59.620
它就是按钮 或者称为按键

00:59.620 --> 01:01.620
我们把这块内容写一下

01:01.620 --> 01:07.750
view

01:07.750 --> 01:09.750
我们给它订个小样式

01:09.750 --> 01:14.090
recorder

01:14.090 --> 01:19.260
style

01:19.260 --> 01:20.260
button

01:20.260 --> 01:25.720
样式写一下 它也订一个出来

01:25.720 --> 01:28.720
它叫做btn

01:28.720 --> 01:30.720
style

01:30.720 --> 01:32.720
然后我们叫做

01:32.720 --> 01:35.720
按住录音

01:35.720 --> 01:38.720
我们把这两个小样式写一下

01:38.720 --> 01:40.720
样式也比较简单

01:40.720 --> 01:42.720
我们不做复杂的样式

01:42.720 --> 01:45.720
两个样式呢 主要的是让按钮

01:45.720 --> 01:47.720
呈在底部 并且别两边称满

01:47.720 --> 01:51.220
recorder

01:51.220 --> 01:54.750
style

01:54.750 --> 01:55.750
position

01:55.750 --> 01:57.750
fixed 固定

01:57.750 --> 02:02.130
button在底部

02:02.130 --> 02:04.130
你左边也为0

02:04.130 --> 02:08.130
这个效果的高度做120

02:09.130 --> 02:11.130
然后宽度我们做100%

02:11.130 --> 02:15.020
第二个btn

02:15.020 --> 02:19.100
style

02:19.100 --> 02:20.100
merge

02:20.100 --> 02:21.100
我们写0

02:21.100 --> 02:23.100
32px

02:23.100 --> 02:24.100
好了 样式好了

02:24.100 --> 02:26.100
现在我们来看一下页面

02:26.100 --> 02:32.100
是不是在下面出现一个按钮

02:32.100 --> 02:35.100
让按钮形成一个绿色

02:35.100 --> 02:37.100
我们给一个type

02:38.100 --> 02:40.100
primer

02:40.100 --> 02:43.100
页面就基本上完成

02:43.100 --> 02:45.100
就是一个按钮 下面有这一块内容

02:46.100 --> 02:49.100
接下去呢 我们将对按钮进行事件操作

02:49.100 --> 02:51.100
事件的话 我们对按钮上面

02:51.100 --> 02:54.100
经常我们以前干的事是onclick

02:54.100 --> 02:57.100
对吧 我们经常完成的是onclick

02:57.100 --> 02:59.100
代表单击以后 你看那么

02:59.100 --> 03:01.100
手指出摸后马上离开

03:01.100 --> 03:05.100
但是 你现在所需要做的是按住

03:05.100 --> 03:07.100
和我们有时候要按释放

03:07.100 --> 03:09.100
那么在这种情况下呢

03:09.100 --> 03:11.100
我们要改一个事件

03:11.100 --> 03:14.100
on开始以后 我们有一个touch

03:14.100 --> 03:17.100
touch里面首先我们看到有个start

03:17.100 --> 03:20.100
start是手指出摸动作开始

03:20.100 --> 03:23.100
手指出摸动作开始

03:23.100 --> 03:25.100
那其实就是我们所谓的按下

03:25.100 --> 03:27.100
它没有down那个概念

03:27.100 --> 03:29.100
它其实就是出摸动作开始

03:29.100 --> 03:33.100
因为在我们的手机上面的话

03:33.100 --> 03:36.100
它不像键盘 有一个上下的概念

03:36.100 --> 03:38.100
只要你碰上去 那就是开始

03:38.100 --> 03:40.100
我们说start

03:40.100 --> 03:41.100
我们写一下

03:41.100 --> 03:44.100
我们把它叫做this点touch down

03:44.100 --> 03:47.660
第二还有一个

03:47.660 --> 03:49.660
有一个touch end

03:49.660 --> 03:54.660
就是手指出摸放开以后

03:54.660 --> 03:57.660
结束以后所做的一个事

03:57.660 --> 04:03.700
this点touch end

04:03.700 --> 04:05.700
有一个这个

04:05.700 --> 04:09.700
当然我们把它写自己的名字

04:09.700 --> 04:12.700
叫做touch up

04:12.700 --> 04:14.700
手网上弹开

04:14.700 --> 04:16.700
好 把这两个事件

04:16.700 --> 04:18.700
当然我们写全

04:18.700 --> 04:21.700
我们可以做一个this的指向绑定

04:21.700 --> 04:29.750
this的指向绑定

04:29.750 --> 04:39.680
紧接着我们把整个这个touch down

04:39.680 --> 04:42.680
我们在上面把这个事件写出来

04:42.680 --> 04:43.680
那么与其呢

04:43.680 --> 04:45.680
我们把它的框架也一起写出来

04:45.680 --> 04:47.680
我们先把它touch down写好

04:47.680 --> 04:51.060
还有一个touch end 对吧

04:51.060 --> 04:52.060
touch up

04:52.060 --> 05:06.580
我们称之为constructor

05:06.580 --> 05:07.580
super

05:07.580 --> 05:08.580
proper

05:08.580 --> 05:10.580
proper

05:10.580 --> 05:15.100
stator

05:15.100 --> 05:31.120
configure

05:31.120 --> 05:32.120
手指

05:32.120 --> 05:34.120
按键

05:34.120 --> 05:36.120
触摸

05:36.120 --> 05:38.820
后

05:38.820 --> 05:40.820
触发

05:40.820 --> 05:42.820
这个应该是

05:42.820 --> 05:43.820
手指

05:43.820 --> 05:45.820
按键

05:45.820 --> 05:47.820
放开后

05:47.820 --> 05:49.820
触发

05:49.820 --> 05:52.820
那把页面上面的这个也改一下吧

05:52.820 --> 05:54.820
我们在app.js里面

05:54.820 --> 05:56.820
去找到我们的改

05:56.820 --> 06:00.820
头文件的头的txt title这个文本

06:00.820 --> 06:02.820
我们把它给放过来

06:02.820 --> 06:04.820
我们把它称之为叫录音机

06:04.820 --> 06:10.620
都好去掉

06:10.620 --> 06:11.620
OK了

06:11.620 --> 06:12.620
这样的话呢

06:12.620 --> 06:14.620
基本上我们把结构就打好了

06:14.620 --> 06:16.620
此时你就可以对着这个按钮

06:16.620 --> 06:19.620
去进行点击和放开操作了

06:19.620 --> 06:22.620
好 我们现在回到我们这里边来

06:23.620 --> 06:27.640
开始写

06:27.640 --> 06:30.640
首先我们从控制台先获取一下

06:30.640 --> 06:32.640
现在称之为

06:32.640 --> 06:36.590
开始录音

06:36.590 --> 06:37.590
手指按下

06:37.590 --> 06:44.100
然后我们去

06:44.100 --> 06:46.100
调用我们麦克风的争动化

06:46.100 --> 06:55.090
那么在这个上面的话

06:55.090 --> 06:57.090
我们单独可以写一个

06:57.090 --> 07:02.300
麦克风争动化的speaking

07:02.300 --> 07:08.270
我们可以单独写一个方法出来

07:08.270 --> 07:10.270
这个方法本身自己的话

07:10.270 --> 07:12.270
我们只要对它进行

07:12.270 --> 07:16.160
我们的调用

07:16.160 --> 07:18.160
给它参数就行了

07:18.160 --> 07:21.600
那么我们这边来

07:21.600 --> 07:25.910
当前的speaking

07:25.910 --> 07:28.910
争动化我们在这里面写

07:28.910 --> 07:30.910
合为争动化

07:30.910 --> 07:32.910
其实就是我们之前

07:32.910 --> 07:34.910
大家在做页面的时候

07:34.910 --> 07:36.910
这边写的1234

07:36.910 --> 07:37.910
对吧 我们写的

07:37.910 --> 07:39.910
12345五张图片

07:39.910 --> 07:40.910
那么我们现在的话

07:40.910 --> 07:42.910
就可以把这五张图片的结构

07:42.910 --> 07:44.910
我们在这里面去设定

07:44.910 --> 07:46.910
我们首先

07:46.910 --> 07:48.910
我们在这边去做一个

07:48.910 --> 07:54.300
不是写这个

07:54.300 --> 07:56.300
我们调speaking

07:56.300 --> 07:57.300
完成speaking的调用

07:57.300 --> 07:58.300
然后同时

07:58.300 --> 08:00.300
我们可以把当前的Z

08:00.300 --> 08:01.300
传给它

08:01.300 --> 08:02.300
你不传的话直接用

08:02.300 --> 08:03.300
也行

08:03.300 --> 08:05.300
那我们来把下面的这块内容

08:05.300 --> 08:07.300
给填全了需要

08:07.300 --> 08:09.300
首先第一点

08:09.300 --> 08:10.300
我们在这里面

08:10.300 --> 08:12.300
我们需要有一个变量

08:12.300 --> 08:13.300
这个变量就是

08:13.300 --> 08:15.300
这部分内容到底呈现

08:15.300 --> 08:17.300
还是不呈现

08:17.300 --> 08:19.300
我们需要有一个判断

08:19.300 --> 08:21.300
那么这个变量值

08:21.300 --> 08:23.300
我们在这里做

08:23.300 --> 08:25.300
我们在这边写

08:25.300 --> 08:27.300
如果说这个变量值

08:27.300 --> 08:28.300
是存在的

08:28.300 --> 08:29.300
或者说是ok通过的

08:29.300 --> 08:31.300
那么它就能够

08:31.300 --> 08:33.300
把这个内容给显示出来

08:33.300 --> 08:35.300
那么我们就这样写

08:35.300 --> 08:36.300
有几种写法

08:36.300 --> 08:37.300
第一种

08:37.300 --> 08:39.300
我们直接在这边写一个大的

08:39.300 --> 08:44.080
gest

08:44.080 --> 08:45.080
然后在里面

08:45.080 --> 08:46.080
我们去写上

08:46.080 --> 08:49.080
我们的那个条件渲染

08:49.080 --> 08:51.080
如果

08:51.080 --> 08:52.080
当前的

08:52.080 --> 08:54.080
我们定一个stater

08:54.080 --> 08:56.080
里面我们定一个espeaking

08:56.080 --> 09:01.180
它是为q的话

09:01.180 --> 09:12.790
那么我们就把下面这个呈现出来

09:12.790 --> 09:14.790
我们直接把这一段给呈现出来

09:14.790 --> 09:28.630
就这样写

09:28.630 --> 09:29.630
这是一种格式

09:29.630 --> 09:30.630
当然还有一种

09:30.630 --> 09:31.630
更简单一点

09:31.630 --> 09:33.630
我们就把这espeaking

09:33.630 --> 09:34.630
作为它hidden

09:34.630 --> 09:36.630
这边我们可以写一个hidden

09:36.630 --> 09:38.630
对吧 隐藏和显示

09:38.630 --> 09:39.630
那我们呢

09:39.630 --> 09:40.630
给大家演示一下

09:40.630 --> 09:41.630
两种结构对吧

09:41.630 --> 09:43.630
我们把第二种结构拿出来

09:43.630 --> 09:44.630
第二种结构呢

09:44.630 --> 09:45.630
更简单一点

09:45.630 --> 09:47.630
第二种结构更简单一点

09:47.630 --> 09:48.630
它其实就是在这儿

09:48.630 --> 09:50.630
我们可以写个hidden

09:50.630 --> 09:51.630
然后呢

09:51.630 --> 09:52.630
你在这里去写

09:52.630 --> 09:53.630
你现在的一个结构

09:53.630 --> 09:55.630
在这儿写上我们的

09:55.630 --> 09:57.630
this there

09:57.630 --> 09:58.630
is

09:58.630 --> 10:00.630
speaking

10:00.630 --> 10:02.630
stater side

10:02.630 --> 10:07.180
is speaking

10:07.180 --> 10:09.180
这个值为真的时候

10:09.180 --> 10:10.180
那么我们就显示

10:10.180 --> 10:11.180
这个值为假

10:11.180 --> 10:13.180
我们就不显示

10:13.180 --> 10:14.180
第二

10:14.180 --> 10:16.180
我们需要去拿到

10:16.180 --> 10:18.180
几张图片出来

10:18.180 --> 10:19.180
那么图片的话呢

10:19.180 --> 10:21.180
那么我这边呢

10:21.180 --> 10:22.180
在我们之前的案例中

10:22.180 --> 10:23.180
我把它拿过来

10:23.180 --> 10:25.180
我们把它放在

10:25.180 --> 10:27.180
当前的项目的

10:27.180 --> 10:29.180
images里面去

10:29.180 --> 10:31.180
找到当前的目录

10:31.180 --> 10:32.180
打开

10:32.180 --> 10:34.180
然后找到src

10:34.180 --> 10:35.180
找到images

10:35.180 --> 10:36.180
这边有一些文件

10:36.180 --> 10:38.180
我们把放进来

10:38.180 --> 10:39.180
就这些图片

10:39.180 --> 10:40.180
你看到吗

10:40.180 --> 10:41.180
有一档

10:41.180 --> 10:42.180
两档

10:42.180 --> 10:43.180
三档

10:43.180 --> 10:44.180
四档

10:44.180 --> 10:45.180
五档

10:45.180 --> 10:46.180
五张图片

10:46.180 --> 10:47.180
对吧

10:47.180 --> 10:48.180
好

10:48.180 --> 10:49.180
我们把这个放在这儿

10:49.180 --> 10:50.180
就可以了

10:50.180 --> 10:51.180
紧接着呢

10:51.180 --> 10:52.180
我们把图片给导入进来

10:52.180 --> 10:55.070
我们来看

10:55.070 --> 10:57.070
是不是在这里边有了

10:57.070 --> 10:59.070
那么它的位置的话呢

10:59.070 --> 11:00.070
我们看一下

11:00.070 --> 11:02.070
它是属于在paders下的

11:02.070 --> 11:03.070
所有的话呢

11:03.070 --> 11:04.070
我们看一下

11:04.070 --> 11:05.070
点点杠

11:05.070 --> 11:06.070
点点杠

11:06.070 --> 11:07.070
我们应该推两层

11:07.070 --> 11:09.070
它是在当前的

11:09.070 --> 11:10.070
任何一个paders里面

11:10.070 --> 11:11.070
推层

11:11.070 --> 11:13.070
paders推到这一层以后

11:13.070 --> 11:14.070
images

11:14.070 --> 11:16.070
然后去找到

11:16.070 --> 11:18.070
名称叫

11:18.070 --> 11:20.070
我们直接复制它的

11:20.070 --> 11:21.070
重命名

11:21.070 --> 11:28.100
这样就可以拿到它的名称了

11:28.100 --> 11:29.100
直接在这边

11:29.100 --> 11:30.100
我们把这个写上来

11:30.100 --> 11:34.430
点png

11:34.430 --> 11:36.430
我们复制一下

11:36.430 --> 11:39.640
第二张

11:39.640 --> 11:45.060
第三张

11:45.060 --> 11:48.400
第四张

11:48.400 --> 11:51.290
第五张

11:51.290 --> 11:52.290
保存

11:52.290 --> 11:54.290
那么这样的五张图片呢

11:54.290 --> 11:55.290
在这边就有了

11:55.290 --> 11:57.290
但是我显示的时候

11:57.290 --> 11:59.290
我只能说是

11:59.290 --> 12:00.290
把这五张图片

12:00.290 --> 12:02.290
显示于否出来

12:02.290 --> 12:04.290
现在你去看界面的话呢

12:04.290 --> 12:05.290
那么我们说

12:05.290 --> 12:07.290
它说这五张图片位置

12:07.290 --> 12:08.290
对吧

12:08.290 --> 12:10.730
我们看一下

12:10.730 --> 12:12.730
它指的位置是

12:12.730 --> 12:14.730
我们现在的images

12:14.730 --> 12:15.730
下面

12:15.730 --> 12:16.730
有这样一张图片

12:16.730 --> 12:18.730
对啊

12:18.730 --> 12:20.730
我们来看一下

12:20.730 --> 12:24.730
在我们的

12:24.730 --> 12:26.730
那我们得放到

12:26.730 --> 12:27.730
Static里面去

12:27.730 --> 12:28.730
因为在这里面的话呢

12:28.730 --> 12:30.730
它本身咱们看到

12:30.730 --> 12:31.730
它需要在Static里面

12:31.730 --> 12:33.730
放到这张图片记忆

12:33.730 --> 12:34.730
所以呢

12:34.730 --> 12:35.730
我们把这个路径

12:35.730 --> 12:37.730
放到这个Static来

12:37.730 --> 12:39.730
在这

12:39.730 --> 12:40.730
好

12:40.730 --> 12:41.730
OK

12:41.730 --> 12:42.730
换一个位置

12:42.730 --> 12:53.020
我们找到src

12:53.020 --> 12:54.020
下面的images

12:54.020 --> 12:56.020
换个位置

12:56.020 --> 12:59.840
我们把它放到

12:59.840 --> 13:05.580
Static的images

13:05.580 --> 13:06.580
那这样的话

13:06.580 --> 13:09.580
我们的路径的话

13:09.580 --> 13:10.580
你就要稍微动一下

13:10.580 --> 13:12.580
它是往上一层走

13:12.580 --> 13:14.580
上一层走完以后

13:14.580 --> 13:16.580
再往上一层走到images

13:16.580 --> 13:18.580
走到上层的时候

13:18.580 --> 13:19.580
我们这里面

13:19.580 --> 13:21.580
得加一个路径

13:21.580 --> 13:22.580
Static

13:22.580 --> 13:36.070
都加一个路径出来

13:36.070 --> 13:37.070
那么此时

13:37.070 --> 13:42.820
我们再来看一下界面

13:42.820 --> 13:44.820
它说没有这个东西吗

13:44.820 --> 13:46.820
我们来查一下

13:46.820 --> 13:47.820
这找的话

13:47.820 --> 13:48.820
我们去看一下

13:48.820 --> 13:50.820
我们在当前

13:50.820 --> 13:52.820
这个文件加下面

13:52.820 --> 13:54.820
我们会发现路径是对的

13:54.820 --> 13:56.820
它是在双层上面

13:56.820 --> 13:58.820
通过我们的Pages往里倒

13:58.820 --> 13:59.820
一层两层

13:59.820 --> 14:00.820
倒到Pages层

14:00.820 --> 14:01.820
然后往里面

14:01.820 --> 14:03.820
叫Static Limit Images

14:03.820 --> 14:05.820
但是它说一直找不到这个路径

14:05.820 --> 14:07.820
原因是在于哪里呢

14:07.820 --> 14:08.820
并不是这个路径的错

14:08.820 --> 14:10.820
而是它最终要找的是

14:10.820 --> 14:12.820
找的是我们的Desk

14:12.820 --> 14:14.820
里面的Static

14:14.820 --> 14:15.820
里面的Images

14:15.820 --> 14:17.820
在这它找不到

14:17.820 --> 14:18.820
所以我们的话

14:18.820 --> 14:19.820
我们可以把图片

14:19.820 --> 14:21.820
从这复制到这来

14:21.820 --> 14:23.820
直到这个Static里面来

14:23.820 --> 14:24.820
这样的话

14:24.820 --> 14:25.820
我们应该能看到

14:25.820 --> 14:26.820
它现在的

14:26.820 --> 14:27.820
找到了

14:27.820 --> 14:28.820
就会有

14:28.820 --> 14:29.820
我们首先看

14:29.820 --> 14:30.820
这个里面没有

14:30.820 --> 14:32.820
它最终要编译的是这个文件

14:32.820 --> 14:34.820
所以我们这边来

14:34.820 --> 14:42.580
再给它复制一份出来

14:42.580 --> 14:47.580
放在Dister的Static Images里面

14:47.580 --> 14:48.580
放这

14:48.580 --> 14:49.580
好了

14:49.580 --> 14:50.580
那么请接着

14:50.580 --> 14:51.580
我们现在再来看一下

14:51.580 --> 14:56.690
它应该是有了

14:56.690 --> 14:57.690
它只不过集中在这边

14:57.690 --> 14:58.690
对不对

14:59.690 --> 15:00.690
那么请接着的话

15:00.690 --> 15:01.690
我们现在

15:01.690 --> 15:04.690
我们看一下Speak Style

15:04.690 --> 15:07.690
跟Sound Style

15:07.690 --> 15:09.690
这两个我们样式有接吗

15:09.690 --> 15:10.690
没有

15:10.690 --> 15:12.690
我们把这两个样式建一下

15:12.690 --> 15:16.450
我们一个Speak Style

15:16.450 --> 15:18.450
跟Sound Style

15:18.450 --> 15:30.740
Position

15:30.740 --> 15:32.740
Relative

15:32.740 --> 15:34.740
Height

15:34.740 --> 15:37.740
240rpx

15:37.740 --> 15:39.740
高度

15:39.740 --> 15:40.740
宽度

15:40.740 --> 15:44.120
240rpx

15:44.120 --> 15:45.120
Bolder

15:45.120 --> 15:47.120
Reduce

15:47.120 --> 15:49.120
20个rpx

15:49.120 --> 15:52.940
Bolder

15:52.940 --> 15:54.940
我们按Merge

15:54.940 --> 15:56.940
这边做一个Merge

15:56.940 --> 15:58.940
Merge做50%

15:58.940 --> 16:00.940
然后给它一个O2

16:00.940 --> 16:03.320
然后

16:03.320 --> 16:08.100
Backgrounder

16:08.100 --> 16:09.100
Add

16:09.100 --> 16:10.100
26A5

16:10.100 --> 16:11.100
FF

16:11.100 --> 16:16.850
我们给一个这个设置

16:16.850 --> 16:21.060
Sound Style

16:21.060 --> 16:22.060
Position

16:22.060 --> 16:24.060
Resolute

16:24.060 --> 16:25.060
Wise

16:25.060 --> 16:27.060
74rpx

16:27.060 --> 16:30.580
Height

16:30.580 --> 16:32.580
150rpx

16:32.580 --> 16:36.790
Mergent Top

16:36.790 --> 16:41.960
给出45rpx

16:41.960 --> 16:45.400
Mergent Left

16:45.400 --> 16:49.160
83rpx

16:49.160 --> 16:51.160
给出这几个数值

16:51.160 --> 16:53.160
我们最终希望的是

16:53.160 --> 16:56.160
它会出现在中间这个区域内

16:56.160 --> 16:58.160
中间这个区域内

16:58.160 --> 16:59.160
它会在这上面

16:59.160 --> 17:01.160
1234 1234这样的波动

17:01.160 --> 17:02.160
OK

17:02.160 --> 17:04.160
订位我们是订好了

17:04.160 --> 17:05.160
进下去

17:05.160 --> 17:07.160
我们怎么样让它首先

17:07.160 --> 17:09.160
这个is speaking

17:09.160 --> 17:17.630
我们现在为它设置为Force

17:17.630 --> 17:18.630
就表示隐藏吗

17:18.630 --> 17:19.630
不隐藏

17:19.630 --> 17:21.630
我们待会可以看一下这个效果

17:21.630 --> 17:26.030
我们需要看到的是在过程中

17:26.030 --> 17:28.030
它这边有上下的一个波动

17:28.030 --> 17:30.030
这种波动我们称之为真

17:30.030 --> 17:31.030
而这个真动画

17:31.030 --> 17:33.030
我们需要手动来做的

17:33.030 --> 17:35.030
我们按键放

17:35.030 --> 17:36.030
在这里面做

17:36.030 --> 17:38.030
真动画

17:38.030 --> 17:41.920
那么我们先要考虑好

17:41.920 --> 17:43.920
这个真动画它本身

17:43.920 --> 17:45.920
需要怎么样去实现

17:45.920 --> 17:48.920
你要回到我们的这里面来

17:48.920 --> 17:50.920
它怎么去实现这个

17:50.920 --> 17:51.920
也就是说

17:51.920 --> 17:52.920
几短时间内

17:52.920 --> 17:54.920
让它在不同的图片之间

17:54.920 --> 17:56.920
进行切换

17:56.920 --> 17:58.920
理解吧这个逻辑

17:58.920 --> 18:00.920
不同图片内进行切换

18:00.920 --> 18:01.920
那么

18:01.920 --> 18:03.920
如果要图片切换的话

18:03.920 --> 18:04.920
那就意味着

18:04.920 --> 18:06.920
一定是要做到的是

18:06.920 --> 18:08.920
每一张图片有一个标签

18:08.920 --> 18:09.920
是吗

18:09.920 --> 18:12.920
就是当这个标签满足的时候

18:12.920 --> 18:13.920
那么它呈现

18:13.920 --> 18:14.920
过一会

18:14.920 --> 18:16.920
这个标签另一个满足了

18:16.920 --> 18:17.920
就另一个呈现

18:17.920 --> 18:18.920
是不是这个逻辑

18:18.920 --> 18:19.920
那么这样的话

18:19.920 --> 18:21.920
我们这边就可以有一定的

18:21.920 --> 18:23.920
修改代码了

18:23.920 --> 18:25.920
我们需要去做条件判断

18:25.920 --> 18:27.920
比如说我定一个j

18:27.920 --> 18:29.920
如果j等于2的时候

18:29.920 --> 18:31.920
我们里面去循环那个j

18:31.920 --> 18:32.920
并且控制那个j

18:32.920 --> 18:34.920
在短时间内的一个数值变化

18:34.920 --> 18:36.920
如果这个j等于2的时候

18:36.920 --> 18:38.920
那么我们就显示第一局

18:38.920 --> 18:40.920
j等于3的时候显示第二局

18:40.920 --> 18:42.920
依次类推

18:42.920 --> 18:43.920
是不是我们这样的话

18:43.920 --> 18:45.920
就可以有一个小辩量

18:45.920 --> 18:48.920
来控制哪张图片呈现

18:48.920 --> 18:51.920
最终我们把上面这个

18:51.920 --> 18:53.920
叫做espeaking的

18:53.920 --> 18:55.920
这样的一个麦克风的view打开

18:55.920 --> 18:58.920
然后里面在不断的图片的进行

18:58.920 --> 19:00.920
这样的一个

19:00.920 --> 19:01.920
重新的渲染

19:01.920 --> 19:02.920
你就能看到

19:02.920 --> 19:04.920
我们现在按下去以后

19:04.920 --> 19:07.920
有一个图片的这样的标签的出现

19:07.920 --> 19:08.920
好 那我们来看一下

19:08.920 --> 19:10.920
就以我们刚才的这个概念来讲

19:10.920 --> 19:12.920
我们每一个要加一个标签

19:12.920 --> 19:13.920
做条件渲染

19:13.920 --> 19:15.920
我们的条件渲染里面

19:15.920 --> 19:16.920
有几种做法

19:16.920 --> 19:17.920
我们之前也学过

19:17.920 --> 19:20.920
我们有最简单的一种做法

19:20.920 --> 19:22.920
就是用我们的逻辑用算符

19:22.920 --> 19:23.920
你不用的话

19:23.920 --> 19:24.920
你可以用我们的最外面

19:24.920 --> 19:25.920
去建一个大的

19:25.920 --> 19:27.920
然后里面一旦满足这条件的话

19:27.920 --> 19:28.920
把这个在这输出

19:28.920 --> 19:30.920
和我们刚才前面说法一样

19:30.920 --> 19:32.920
但现在还有一种就是简单的

19:32.920 --> 19:34.920
逻辑用算符来做

19:34.920 --> 19:37.920
我们在Maders外面

19:37.920 --> 19:43.450
咱们去做一个表达式

19:43.450 --> 19:46.450
然后在这个表达式前面

19:46.450 --> 19:47.450
我们这边用一个双语

19:47.450 --> 19:49.450
在前面写上

19:49.450 --> 19:52.450
我们这边可以定一个变量出来

19:52.450 --> 19:54.450
你可以定一个变量

19:54.450 --> 19:55.450
比如说

19:55.450 --> 19:56.450
this点

19:56.450 --> 19:58.450
stater点

19:59.450 --> 20:00.450
flag

20:00.450 --> 20:02.450
如果等于R的话

20:03.450 --> 20:04.450
你这样写

20:04.450 --> 20:06.450
如果有一个flag等于R的时候

20:06.450 --> 20:09.450
那我就渲染后面的这个内容

20:09.450 --> 20:11.450
如果说你现在不是R

20:11.450 --> 20:13.450
那么你可以判断其他的

20:13.450 --> 20:15.450
如果说我们说过

20:15.450 --> 20:17.450
前面如果说满足条件

20:17.450 --> 20:19.450
那么我们的语号

20:19.450 --> 20:21.450
后面的这部分的

20:21.450 --> 20:22.450
JXXA会被渲染

20:22.450 --> 20:24.450
如果前面满足不了条件

20:24.450 --> 20:26.450
就是它返回的是force

20:26.450 --> 20:29.450
那么后面就不会被渲染

20:30.450 --> 20:32.450
所以我们按照这个概念

20:32.450 --> 20:34.450
我们把它一起做一下

20:34.450 --> 20:47.380
然后

20:47.380 --> 20:53.130
当前的

20:53.130 --> 20:55.760
stater点

20:55.760 --> 20:56.760
flag

20:56.760 --> 20:58.760
如果等于3

20:58.760 --> 21:04.500
当前的

21:04.500 --> 21:06.500
stater

21:06.500 --> 21:07.500
flag

21:07.500 --> 21:08.500
如果等于4

21:08.500 --> 21:13.420
当前的

21:13.420 --> 21:15.420
stater

21:15.420 --> 21:16.420
flag

21:16.420 --> 21:17.420
等于5

21:17.420 --> 21:23.100
当前的

21:23.100 --> 21:25.100
flag

21:25.100 --> 21:27.100
等于6

21:27.100 --> 21:28.100
好

21:28.100 --> 21:30.100
我们把这几个这样写好

21:30.100 --> 21:32.470
把这一行删掉

21:32.470 --> 21:33.470
你看

21:33.470 --> 21:35.470
这个结构就比较简单了

21:35.470 --> 21:37.470
我们首先sbeking

21:37.470 --> 21:38.470
显示出来

21:38.470 --> 21:42.300
然后我们里面定一个flag

21:42.300 --> 21:49.360
我们可以默认定一个flag

21:49.360 --> 21:50.360
flag默认顶1

21:50.360 --> 21:52.360
它哪个都不显示

21:53.360 --> 21:56.360
然后我通过内部的代码的变化

21:56.360 --> 21:59.360
我来针对flag进行操作

21:59.360 --> 22:00.360
对吧

22:00.360 --> 22:02.360
我可以让它变

22:02.360 --> 22:03.360
所以我们这边

22:03.360 --> 22:04.360
首先来

22:04.360 --> 22:05.360
首先

22:05.360 --> 22:08.360
当你手机触摸的时候

22:08.360 --> 22:10.360
麦克风的争动化掉起

22:10.360 --> 22:12.360
同时下面

22:13.360 --> 22:15.360
显示

22:15.360 --> 22:19.760
麦克风

22:19.760 --> 22:21.760
显示

22:21.760 --> 22:24.650
麦克风

22:24.650 --> 22:25.650
什么叫显示

22:25.650 --> 22:26.650
因为我刚开始

22:26.650 --> 22:28.650
这个字我要设成处的

22:28.650 --> 22:29.650
也就是

22:29.650 --> 22:30.650
打开页面时

22:30.650 --> 22:32.650
就根本看不见这部分内容

22:32.650 --> 22:34.650
但是我一旦

22:34.650 --> 22:35.650
点击下去以后

22:35.650 --> 22:36.650
我们就能看到

22:36.650 --> 22:37.650
所以

22:39.650 --> 22:44.900
我们修改它

22:53.370 --> 22:56.370
那我们来看一下页面的简单效果

22:56.370 --> 22:57.370
首先一打开

22:57.370 --> 22:58.370
你应该看不到中间的内部人

22:58.370 --> 22:59.370
按下去

22:59.370 --> 23:00.370
是不是这个出来了

23:00.370 --> 23:01.370
是不是出来了

23:01.370 --> 23:02.370
对吧

23:02.370 --> 23:03.370
然后呢

23:03.370 --> 23:04.370
同时呢

23:04.370 --> 23:05.370
我们还有一个

23:05.370 --> 23:07.370
那么我们在

23:07.370 --> 23:08.370
放开的时候

23:08.370 --> 23:10.370
我们应该是把这个内容给关掉

23:10.370 --> 23:12.370
所以我们

23:12.370 --> 23:13.370
关闭麦克风

23:13.370 --> 23:15.370
现在这边也写一下

23:15.370 --> 23:22.420
或者不显示

23:22.420 --> 23:23.420
再设为处

23:23.420 --> 23:25.860
好

23:25.860 --> 23:26.860
这功能大家应该说

23:26.860 --> 23:28.860
一看就明确了

23:28.860 --> 23:29.860
怎么让它中间出来

23:29.860 --> 23:30.860
对吧

23:30.860 --> 23:35.460
按下去

23:35.460 --> 23:36.460
我们有

23:36.460 --> 23:37.460
改变吗

23:37.460 --> 23:38.460
这个

23:39.460 --> 23:40.460
说错了

23:40.460 --> 23:41.460
这是争动化

23:41.460 --> 23:43.460
应该还在下面一个

23:43.460 --> 23:44.460
对吧

23:44.460 --> 23:46.460
放掉麦克风应该在这个里面

23:46.460 --> 23:54.470
我们再来看一下

23:54.470 --> 23:55.470
按下

23:55.470 --> 23:56.470
放开

23:56.470 --> 23:57.470
按下

23:57.470 --> 23:58.470
放开

23:58.470 --> 23:59.470
对吧

23:59.470 --> 24:00.470
这个效果

24:00.470 --> 24:01.470
好

24:01.470 --> 24:02.470
我们紧接着

24:02.470 --> 24:04.470
那么一旦我现在已经完成了

24:04.470 --> 24:06.470
我们现在的一个效果以后

24:06.470 --> 24:08.470
我们开始掉争动化

24:08.470 --> 24:11.470
争动化其实它非常简单

24:11.470 --> 24:12.470
它的逻辑

24:12.470 --> 24:15.470
就是去改变我们那个flag那个值

24:15.470 --> 24:16.470
是吧

24:16.470 --> 24:18.470
改变我们flag那个值

24:18.470 --> 24:19.470
那么这flag这个值呢

24:19.470 --> 24:21.470
我们只需要去完成

24:21.470 --> 24:23.470
几个简单的一个

24:23.470 --> 24:24.470
呃

24:24.470 --> 24:25.470
我们怎么说

24:25.470 --> 24:26.470
呃

24:26.470 --> 24:27.470
循环

24:27.470 --> 24:29.470
或者称之为延迟执行

24:29.470 --> 24:32.470
那么它就可以直接来做这部分的操作

24:32.470 --> 24:34.470
首先我们来看一下啊

24:34.470 --> 24:35.470
我们这里边

24:35.470 --> 24:37.470
我们可以做一个什么呢

24:37.470 --> 24:40.470
我们测一个简单的变量

24:40.470 --> 24:42.470
我们做一个简单的变量

24:42.470 --> 24:43.470
然后呢

24:43.470 --> 24:44.470
由于我只有五张图片

24:44.470 --> 24:47.470
所以我在五张图片内进行循环

24:47.470 --> 24:50.470
每隔一段时间去执行一下这个操作

24:50.470 --> 24:52.470
那么一旦到这个时间点了

24:52.470 --> 24:54.470
我们就把这个值啊

24:54.470 --> 24:55.470
给它改变一下

24:55.470 --> 24:56.470
所以我们来看一下

24:56.470 --> 24:58.470
我们这么做

24:58.470 --> 25:00.470
每隔一段时间set interval

25:00.470 --> 25:01.470
是不是

25:01.470 --> 25:04.470
每隔一段时间执行一个代码

25:04.470 --> 25:08.830
过多久

25:08.830 --> 25:11.400
零点二秒

25:11.400 --> 25:13.400
过零点二秒

25:13.400 --> 25:14.400
首先在这里面

25:14.400 --> 25:15.400
我们做一个i

25:15.400 --> 25:17.400
定一个变量我们在这

25:17.400 --> 25:22.760
i等于1

25:22.760 --> 25:24.760
先定个变量

25:24.760 --> 25:25.760
然后

25:25.760 --> 25:27.760
i在里面做加加

25:28.760 --> 25:30.760
那么此时

25:30.760 --> 25:32.760
如果说i除以5

25:32.760 --> 25:34.760
如果说我们做一个i

25:34.760 --> 25:36.760
去除以5的余数

25:37.760 --> 25:39.760
i除以5的余数

25:39.760 --> 25:41.760
其实就是我们在里面得到的

25:41.760 --> 25:43.760
零一二三四

25:43.760 --> 25:45.760
这样的一些

25:45.760 --> 25:46.760
值

25:46.760 --> 25:47.760
我们说

25:47.760 --> 25:48.760
二二三四五这样的值

25:48.760 --> 25:49.760
那么这样的话呢

25:49.760 --> 25:50.760
我们就可以在页面中

25:50.760 --> 25:52.760
直接去做判断

25:52.760 --> 25:54.760
我们说i是从一开始的

25:54.760 --> 25:56.760
一现在直接进去以后

25:56.760 --> 25:57.760
现在是二

25:57.760 --> 25:59.760
这个你可以去

25:59.760 --> 26:00.760
可一下

26:00.760 --> 26:02.760
那么我们直接把这个值

26:02.760 --> 26:04.760
进行一个简单的

26:04.760 --> 26:07.760
set

26:07.760 --> 26:09.760
stater

26:09.760 --> 26:10.760
那么这里边

26:10.760 --> 26:12.760
我们最好不要去用

26:12.760 --> 26:13.760
this

26:13.760 --> 26:14.760
我们可以

26:14.760 --> 26:16.760
明确的在外面去定义一下

26:16.760 --> 26:19.200
let

26:19.200 --> 26:21.200
that

26:21.200 --> 26:23.200
this

26:23.200 --> 26:25.200
我们把这个z拿进来

26:25.200 --> 26:26.200
这样去用的话

26:26.200 --> 26:28.200
就非常的明显

26:28.200 --> 26:32.790
然后我们在j

26:32.790 --> 26:34.790
或者flag

26:34.790 --> 26:36.790
我们等于

26:36.790 --> 26:46.380
你这个值

26:46.380 --> 26:47.380
我们等于这个值

26:47.380 --> 26:51.860
看一下

26:51.860 --> 26:52.860
如果现在的话呢

26:52.860 --> 26:54.860
我们每次执行完

26:54.860 --> 26:56.860
我们的flag这个值

26:56.860 --> 26:58.860
我们在这里边

26:58.860 --> 27:02.500
直接this.stater

27:02.500 --> 27:04.500
你还不能在这写

27:04.500 --> 27:05.500
为什么

27:05.500 --> 27:06.500
因为它本身这个值的话

27:06.500 --> 27:07.500
是一个异不执行

27:07.500 --> 27:09.500
我们看i就可以了

27:09.500 --> 27:13.130
我们看一下

27:13.130 --> 27:14.130
你要看它的话

27:14.130 --> 27:20.980
你需要在它后面

27:20.980 --> 27:22.980
再去写一个函数

27:22.980 --> 27:24.980
我们先看i就行了

27:24.980 --> 27:25.980
因为本身是一样的

27:25.980 --> 27:26.980
它是

27:26.980 --> 27:28.980
i的值会不断的往后走

27:28.980 --> 27:30.980
不断的往后走

27:30.980 --> 27:31.980
然后此时呢

27:31.980 --> 27:32.980
你就可以拿着这个值

27:32.980 --> 27:34.980
不断的去进行我们的渲染

27:34.980 --> 27:36.980
不断的除以后

27:36.980 --> 27:37.980
因为

27:37.980 --> 27:38.980
本身来讲

27:38.980 --> 27:39.980
它本就是

27:39.980 --> 27:41.980
五张图片的一个

27:41.980 --> 27:43.980
余术的操作

27:43.980 --> 27:44.980
ok

27:44.980 --> 27:46.980
那么这样的话

27:46.980 --> 27:47.980
就完成了

27:47.980 --> 27:48.980
第一个功能

27:48.980 --> 27:49.980
当然

27:49.980 --> 27:50.980
它什么时候关闭呢

27:50.980 --> 27:52.980
我们作为一个简单的

27:52.980 --> 27:59.430
conster

27:59.430 --> 28:00.430
记录一下

28:00.430 --> 28:08.160
咱们叫做my

28:08.160 --> 28:09.160
或者说

28:09.160 --> 28:11.160
那个initial

28:11.160 --> 28:16.520
我们做一个这个动作

28:16.520 --> 28:18.520
已经把它给调起来了

28:18.520 --> 28:19.520
接下去呢

28:19.520 --> 28:20.520
我们把它给关掉

28:20.520 --> 28:21.520
并且呢

28:21.520 --> 28:22.520
能够看一下

28:22.520 --> 28:24.520
这里边的一个简单变化

28:24.520 --> 28:26.520
你要把它给关了的话

28:26.520 --> 28:28.520
你就必须要给它设定一个剧柄

28:28.520 --> 28:30.520
你要给它设定一个剧柄

28:30.520 --> 28:33.410
咱们叫做

28:33.410 --> 28:35.410
interval

28:35.410 --> 28:37.410
那么你如果在这边咱们

28:37.410 --> 28:39.410
做一个let的话

28:39.410 --> 28:40.410
因为我们知道

28:40.410 --> 28:42.410
let是有一个我们的

28:42.410 --> 28:43.410
不能做提升的

28:43.410 --> 28:44.410
所以呢

28:44.410 --> 28:46.410
我们如果你写个var

28:46.410 --> 28:48.410
那么你这时候来看啊

28:48.410 --> 28:50.410
我们把它放在

28:50.410 --> 28:52.410
当前的touch里面

28:52.410 --> 28:54.410
我们把它放在touch里面

28:54.410 --> 28:55.410
做关闭

28:55.410 --> 28:58.780
关闭是clear

28:58.780 --> 28:59.780
interval

28:59.780 --> 29:01.780
你就这么写

29:01.780 --> 29:02.780
那么你看一下

29:02.780 --> 29:03.780
能不能执行到

29:03.780 --> 29:04.780
当然

29:04.780 --> 29:06.780
我们希望能够看到里面有个变化

29:06.780 --> 29:08.780
所以我们给它一个

29:08.780 --> 29:09.780
回调

29:09.780 --> 29:10.780
然后在这里面去看一下

29:10.780 --> 29:11.780
我们的

29:11.780 --> 29:14.780
这个flag这个值

29:14.780 --> 29:21.170
flag这个值

29:21.170 --> 29:25.950
this点stater点

29:25.950 --> 29:27.950
flag

29:27.950 --> 29:28.950
这边我写了一个

29:28.950 --> 29:29.950
但你会发现

29:29.950 --> 29:31.950
它这边我如果直接用它的话

29:31.950 --> 29:33.950
即使我用了这个提升

29:33.950 --> 29:36.580
按住

29:37.580 --> 29:38.580
往下一放

29:38.580 --> 29:39.580
抱错了吧

29:39.580 --> 29:41.580
真抱错了吧

29:41.580 --> 29:42.580
所以呢

29:42.580 --> 29:43.580
我们讲的是

29:43.580 --> 29:45.580
这个做法是不行的

29:45.580 --> 29:47.580
那我怎么样去完成呢

29:47.580 --> 29:49.580
那我就把它的定义啊

29:49.580 --> 29:51.580
我放到最高处去

29:51.580 --> 29:52.580
也就是在类的外部

29:52.580 --> 29:55.580
我们去定义这个变量值

29:55.580 --> 29:57.580
咱们在这边直接这样定义

29:57.580 --> 29:58.580
我们把这个

29:58.580 --> 30:00.580
它是自动添加的

30:00.580 --> 30:02.580
我们在外部直接定义这边量值

30:02.580 --> 30:04.580
然后此时你往它对象元素中

30:04.580 --> 30:06.580
进行set interval的一个对象

30:06.580 --> 30:08.580
也就是我们称为的剧柄的复制

30:08.580 --> 30:10.580
此时你再从外部去

30:10.580 --> 30:12.580
拿到这个进行改变

30:12.580 --> 30:19.610
此时你来看一下效果

30:19.610 --> 30:20.610
首先点下去

30:20.610 --> 30:22.610
然后咚咚咚咚咚咚

30:22.610 --> 30:23.610
看旁边放掉

30:23.610 --> 30:25.610
是不是这边停掉了

30:25.610 --> 30:26.610
理解吧

30:26.610 --> 30:27.610
这个概念

30:27.610 --> 30:29.610
这个是我们这里边

30:29.610 --> 30:31.610
很多同学会碰到的一个问题

30:31.610 --> 30:33.610
就是你不能在里面

30:33.610 --> 30:35.610
去使用我们的var

30:35.610 --> 30:37.610
你说var的话提升

30:37.610 --> 30:39.610
它可以变量作用率提升

30:39.610 --> 30:41.610
其实在这里面无效

30:41.610 --> 30:43.610
同时你同时看到的是

30:43.610 --> 30:45.610
我们一旦需要在两个世界内

30:45.610 --> 30:46.610
同时操作的话

30:46.610 --> 30:47.610
有几种方法

30:47.610 --> 30:48.610
第一种的话

30:48.610 --> 30:50.610
我在调这个世界的时候

30:50.610 --> 30:51.610
我把同样的这个

30:51.610 --> 30:53.610
给它传过去就可以了

30:53.610 --> 30:55.610
但是你在世界内

30:55.610 --> 30:57.610
再调另一个的话

30:57.610 --> 30:58.610
那么一样

30:58.610 --> 30:59.610
依然我们就可以把它

30:59.610 --> 31:01.610
直接定在最外层

31:01.610 --> 31:02.610
定在最外层

31:02.610 --> 31:03.610
然后要用的时候

31:03.610 --> 31:05.610
直接对它进行使用

31:05.610 --> 31:06.610
调用就可以了

31:06.610 --> 31:07.610
对吧

31:07.610 --> 31:09.610
我们把厨师这边写一下

31:09.610 --> 31:11.610
这个叫做

31:11.610 --> 31:17.930
关闭

31:17.930 --> 31:21.840
时间

31:21.840 --> 31:23.840
这边就是开启这个

31:23.840 --> 31:24.840
争动化时间

31:24.840 --> 31:25.840
咱们看到了

31:25.840 --> 31:26.840
我有个flag一直在变

31:26.840 --> 31:27.840
同时我们刚刚

31:27.840 --> 31:28.840
如果注意个同学

31:28.840 --> 31:30.840
注意中间这一块

31:30.840 --> 31:31.840
看到吗

31:31.840 --> 31:35.220
中间这个是不是在闪

31:35.220 --> 31:36.220
那是代表着

31:36.220 --> 31:38.220
你现在的好像似乎在说话一样

31:38.220 --> 31:40.220
所以这个效果我们就出来了

31:40.220 --> 31:41.220
我们再来看一下

31:41.220 --> 31:44.220
整体这个效果的制作方式

31:44.220 --> 31:46.220
这个效果是这样的

31:46.220 --> 31:47.220
首先我们这边

31:47.220 --> 31:49.220
做了一个简单的view

31:49.220 --> 31:50.220
然后里面

31:50.220 --> 31:52.220
定义了我们的5张图片

31:52.220 --> 31:54.220
然后我们在这个大view

31:54.220 --> 31:55.220
上面的话

31:55.220 --> 31:57.220
我们写了一个espeaking

31:57.220 --> 31:59.220
它表示的是否显示

31:59.220 --> 32:00.220
如果说

32:00.220 --> 32:02.220
在没有点按钮的时候

32:02.220 --> 32:03.220
默认状态

32:03.220 --> 32:04.220
它是隐隐藏

32:04.220 --> 32:06.220
一旦你先点了按钮以后

32:06.220 --> 32:08.220
它就变成一个显示按钮

32:08.220 --> 32:10.220
所以这个值得改变

32:10.220 --> 32:11.220
第二

32:11.220 --> 32:12.220
我们里面5张图片

32:12.220 --> 32:13.220
怎么让它轮寻呢

32:13.220 --> 32:14.220
轮寻的方式是

32:14.220 --> 32:16.220
我们依然设定一个变量

32:16.220 --> 32:17.220
在这个变量的过程

32:17.220 --> 32:18.220
改变的过程中

32:18.220 --> 32:20.220
我们不断的去刷新

32:20.220 --> 32:22.220
当前的这个值

32:22.220 --> 32:24.220
不断的进行刷新

32:24.220 --> 32:26.220
这个刷新的特点在于

32:26.220 --> 32:28.220
我们怎么样去控制

32:28.220 --> 32:29.220
我们现在所谓的一个

32:29.220 --> 32:30.220
我们把5张图片

32:30.220 --> 32:33.220
把它理解成5个真动化

32:33.220 --> 32:34.220
那么这样的话

32:34.220 --> 32:36.220
它就会不断的进行改变

32:36.220 --> 32:37.220
同时我们来看

32:37.220 --> 32:38.220
对它的改变

32:38.220 --> 32:40.220
我们需要去做一个简单的

32:40.220 --> 32:41.220
实践

32:41.220 --> 32:42.220
叫做speaking

32:42.220 --> 32:43.220
所以我们这边

32:43.220 --> 32:45.220
只是换起了这个speaking

32:45.220 --> 32:46.220
完成以后的话

32:46.220 --> 32:48.220
我们里面做一个set interval

32:48.220 --> 32:49.220
也就是我们

32:49.220 --> 32:51.220
做0.2秒时间的切换

32:51.220 --> 32:53.220
0.2秒时间的切换

32:53.220 --> 32:54.220
做什么

32:54.220 --> 32:56.220
我们里面不断的有一个值

32:56.220 --> 32:57.220
不断的在累加

32:57.220 --> 32:58.220
累加的时候

32:58.220 --> 32:59.220
由于我只有5张图片

32:59.220 --> 33:01.220
也就是我俗称的5真

33:01.220 --> 33:03.220
所以我对它进行

33:03.220 --> 33:04.220
除取

33:04.220 --> 33:06.220
那么这个余数

33:06.220 --> 33:07.220
就是我现在

33:07.220 --> 33:08.220
前面所判断的

33:08.220 --> 33:10.850
这个值

33:10.850 --> 33:11.850
如果说

33:11.850 --> 33:12.850
你现在判断到那个值了

33:12.850 --> 33:13.850
那么ok

33:13.850 --> 33:15.850
就是改变了flag

33:15.850 --> 33:16.850
那么这样的话

33:16.850 --> 33:18.850
我flag就会重新渲染页面

33:18.850 --> 33:20.850
然后再做图片的显示

33:20.850 --> 33:21.850
ok吧

33:21.850 --> 33:22.850
是这个逻辑

33:22.850 --> 33:23.850
那么形成了

33:23.850 --> 33:25.850
我们现在的真真这样图片

33:25.850 --> 33:26.850
那么大家之后

33:26.850 --> 33:27.850
这样图片的话

33:27.850 --> 33:28.850
如果说你以后

33:28.850 --> 33:30.850
有这样一个gif动画

33:30.850 --> 33:32.850
那么你可以用gif动画

33:32.850 --> 33:33.850
但是没有的话

33:33.850 --> 33:34.850
你自己做的话

33:34.850 --> 33:36.850
那就是按照我们刚才这个逻辑来

33:36.850 --> 33:38.850
这是显示成功了

33:38.850 --> 33:40.850
并不是真正录音

33:40.850 --> 33:41.850
显示成功了

33:41.850 --> 33:42.850
对吧

33:42.850 --> 33:43.850
紧接着我们再来

33:43.850 --> 33:45.850
我们还要录音呢

33:45.850 --> 33:46.850
录音在哪里

33:46.850 --> 33:47.850
当你前面这里

33:47.850 --> 33:49.850
狐狸花哨的所有的那些

33:49.850 --> 33:51.850
效果全都做好了

33:51.850 --> 33:58.230
下面开始录音

33:58.230 --> 34:07.750
按下以后的开始录音

34:07.750 --> 34:12.560
tarrow

34:12.560 --> 34:13.560
start

34:13.560 --> 34:14.560
recorder

34:14.560 --> 34:16.940
录音

34:16.940 --> 34:22.740
录音成功以后

34:22.740 --> 34:28.170
我们把数据

34:28.170 --> 34:29.170
直接放在

34:29.170 --> 34:32.540
获取到一个临时文件

34:32.540 --> 34:33.540
获取

34:33.540 --> 34:35.540
录音的

34:36.540 --> 34:37.540
临

34:37.540 --> 34:39.540
临时文件

34:39.540 --> 34:40.540
路径

34:40.540 --> 34:43.880
temper

34:43.880 --> 34:44.880
fi

34:44.880 --> 34:45.880
pass

34:45.880 --> 34:48.700
temper

34:48.700 --> 34:49.700
fi

34:49.700 --> 34:52.780
pass

34:52.780 --> 34:53.780
我先写着

34:53.780 --> 34:54.780
待会我们一直往下

34:54.780 --> 34:55.780
再往下走

34:55.780 --> 34:57.780
console.log

34:57.780 --> 35:02.440
我们可以从控制台看到

35:02.440 --> 35:09.020
我们可以从控制台看到

35:09.020 --> 35:10.020
temper.fi

35:10.020 --> 35:11.020
pass

35:11.020 --> 35:12.020
加上

35:13.020 --> 35:14.020
不是加了

35:14.020 --> 35:16.650
我们逗号就可以了

35:16.650 --> 35:18.650
把这个路径的文件拿出来

35:18.650 --> 35:20.650
我们在那边展示一下

35:20.650 --> 35:21.650
紧接着

35:21.650 --> 35:22.650
我们下面

35:22.650 --> 35:25.650
我们调用一个我们之前

35:25.650 --> 35:27.650
原生写过

35:27.650 --> 35:29.650
但是我们后期一直在tarrow中

35:29.650 --> 35:30.650
没有去做的

35:30.650 --> 35:34.020
咱们叫做持久保存

35:34.020 --> 35:35.020
之后讲到的话

35:35.020 --> 35:37.020
我们也可以继续讲

35:37.020 --> 35:38.020
我们用tarrow

35:38.020 --> 35:40.020
有一个叫做safefi

35:40.020 --> 35:42.020
对吧保存文件

35:42.020 --> 35:43.020
文件这一块

35:43.020 --> 35:44.020
我们讲过对吧

35:44.020 --> 35:45.020
记得

35:45.020 --> 35:46.020
我们把它

35:46.020 --> 35:47.020
对的讲过的

35:47.020 --> 35:49.020
持久保存safefi

35:49.020 --> 35:50.020
然后

35:50.020 --> 35:53.020
temper.fi.pass

35:53.020 --> 35:54.020
我们把它

35:54.020 --> 35:55.020
小辨量

35:55.020 --> 35:57.020
我们做一个局部辨量

35:57.020 --> 35:59.020
我们做一个前置

35:59.020 --> 36:00.020
代表

36:00.020 --> 36:02.020
这就是一个局部辨量结构

36:02.020 --> 36:03.020
那么我们的命名

36:03.020 --> 36:04.020
或者称之为

36:04.020 --> 36:07.020
我们现在的存主内容

36:07.020 --> 36:08.020
我们本身来说

36:08.020 --> 36:09.020
就会有这样的名称在

36:09.020 --> 36:10.020
我们不管

36:10.020 --> 36:11.020
小辨量

36:11.020 --> 36:13.020
我们用一个下滑线

36:13.020 --> 36:14.020
同时

36:14.020 --> 36:15.020
我们看到

36:15.020 --> 36:17.020
我们一旦存主成功

36:17.020 --> 36:18.020
我这边全用的是

36:18.020 --> 36:20.020
回调模式

36:20.020 --> 36:25.940
如果你存主成功

36:25.940 --> 36:26.940
那么我们这边

36:26.940 --> 36:27.940
就应该得到的是

36:27.940 --> 36:32.780
你本地的

36:32.780 --> 36:35.780
本地文件大小

36:35.780 --> 36:40.060
我们可以有一个限制

36:40.060 --> 36:42.060
它是在

36:42.060 --> 36:46.330
100噪以内

36:46.330 --> 36:48.330
拿出来

36:48.330 --> 36:51.330
safefi.pass

36:51.330 --> 37:06.990
safefi.pass

37:06.990 --> 37:13.220
console

37:13.220 --> 37:15.220
pass路径

37:15.220 --> 37:26.420
下滑线

37:26.420 --> 37:32.770
好了

37:32.770 --> 37:33.770
我们把这些内容

37:33.770 --> 37:34.770
都做好了

37:34.770 --> 37:35.770
同时

37:35.770 --> 37:36.770
我们

37:36.770 --> 37:37.770
这边有个res

37:37.770 --> 37:38.770
那么我们其实拿的

37:38.770 --> 37:39.770
就是它

37:39.770 --> 37:40.770
它爆红线干嘛

37:40.770 --> 37:47.980
res is already

37:47.980 --> 37:49.980
declare in the upper

37:49.980 --> 37:51.980
score

37:51.980 --> 37:55.740
没问题

37:55.740 --> 37:56.740
那么当你现在

37:56.740 --> 37:57.740
已经保存成功以后的话

37:57.740 --> 37:58.740
已经路径有了

37:58.740 --> 37:59.740
那么接下去

37:59.740 --> 38:01.740
我们就把它做一个

38:01.740 --> 38:03.740
简单的提示用户

38:03.740 --> 38:08.720
成功提示

38:08.720 --> 38:10.720
再用tarrow的

38:10.720 --> 38:12.720
show toast

38:12.720 --> 38:17.340
title

38:17.340 --> 38:23.080
录音完成

38:23.080 --> 38:28.660
icon

38:28.660 --> 38:32.060
success

38:32.060 --> 38:38.540
duration

38:38.540 --> 38:43.260
1500毫秒

38:43.260 --> 38:44.260
继续

38:44.260 --> 38:47.260
这部分已经完成了录音

38:47.260 --> 38:48.260
那么

38:48.260 --> 38:50.260
我可以在放开那一刻

38:50.260 --> 38:51.260
同时

38:51.260 --> 38:52.260
我刚才说了

38:52.260 --> 38:54.260
前面有做法

38:54.260 --> 38:55.260
你可以在

38:55.260 --> 38:56.260
放开的时候

38:56.260 --> 38:58.260
到我们的手指按键

38:58.260 --> 38:59.260
那个放开以后

38:59.260 --> 39:01.260
去做后期的事情

39:01.260 --> 39:03.260
你也可以在这直接接下去做

39:03.260 --> 39:05.260
两者最大的区别是在于

39:05.260 --> 39:07.260
你要不要用到一些

39:07.260 --> 39:08.260
在我们

39:08.260 --> 39:10.260
就是手指按下去的对象

39:10.260 --> 39:11.260
如果你要用到的话

39:11.260 --> 39:13.260
那么你就可以在我们的

39:13.260 --> 39:15.260
整个这个叫做

39:15.260 --> 39:16.260
按下里面做

39:16.260 --> 39:17.260
如果说你不用的话

39:17.260 --> 39:19.260
你就可以在我们的

39:19.260 --> 39:21.260
放开那个时间做

39:21.260 --> 39:22.260
原因就是

39:22.260 --> 39:24.260
如果你放开还要用到的话

39:24.260 --> 39:25.260
那你必须把现在的

39:25.260 --> 39:26.260
按下去的对象

39:26.260 --> 39:27.260
定成全局

39:27.260 --> 39:29.260
这样你才能用到

39:29.260 --> 39:31.260
至少从页面角度来讲

39:31.260 --> 39:32.260
需要是全页面的全局格

39:32.260 --> 39:33.260
你概念

39:33.260 --> 39:34.260
好了

39:34.260 --> 39:36.260
那么我们就在这里边写吧

39:36.260 --> 39:37.260
我们现在成功提示

39:37.260 --> 39:38.260
已经完成了

39:38.260 --> 39:39.260
接下去的话

39:39.260 --> 39:41.260
我们想去获取一下

39:41.260 --> 39:42.260
当前的

39:42.260 --> 39:43.260
这个列表

39:43.260 --> 39:44.260
也就是我们之前

39:44.260 --> 39:46.260
不是做过文件操作吗

39:46.260 --> 39:47.260
我们说

39:47.260 --> 39:48.260
获取当前

39:48.260 --> 39:50.260
已经保存的文件列表

39:50.260 --> 39:52.260
是不是可以这样写

39:52.260 --> 39:56.530
获取当前

39:56.530 --> 40:05.180
已经保存的文件列表

40:05.180 --> 40:07.180
我们做法是

40:07.180 --> 40:12.620
terror.get saved

40:12.620 --> 40:16.380
有一个fire list

40:16.380 --> 40:18.380
拿出它来

40:18.380 --> 40:24.910
success

40:24.910 --> 40:30.780
我们可以在这看一下

40:30.780 --> 40:41.420
已经保存的文件列表

40:41.420 --> 40:47.190
RES

40:47.190 --> 40:51.340
然后我们设个变量

40:51.340 --> 40:58.080
这变量是个宿主

40:58.080 --> 40:59.080
我们循环一下

40:59.080 --> 41:00.080
当前你拿出来的

41:00.080 --> 41:02.080
RES里面的内容

41:02.080 --> 41:10.670
我们这次用副来循环

41:10.670 --> 41:14.670
RES.firelister

41:14.670 --> 41:16.670
它里面拿出数据的时候

41:16.670 --> 41:18.670
应该是有一个firelister

41:18.670 --> 41:21.670
点length 长度

41:21.670 --> 41:23.670
然后

41:23.670 --> 41:26.670
循环整个这个结构

41:26.670 --> 41:27.670
我们要做的是

41:27.670 --> 41:29.670
把它里面拿出东西来

41:29.670 --> 41:30.670
进行格式化

41:30.670 --> 41:33.670
并且按照我们所要求的内容

41:33.670 --> 41:35.670
重新存回到我们现在的

41:35.670 --> 41:38.670
这个叫做voice里面去

41:38.670 --> 41:41.670
首先我们在这边

41:41.670 --> 41:42.670
我们写的是

41:42.670 --> 41:47.180
获取格式化时间

41:47.180 --> 41:50.740
length

41:50.740 --> 41:51.740
create time

41:51.740 --> 41:53.740
我们创建的时间

41:53.740 --> 41:55.740
我们用一个data

41:55.740 --> 41:56.740
它拿过来以后

41:56.740 --> 41:57.740
我们在这里边

41:57.740 --> 42:04.400
我们会有一个firelister

42:04.400 --> 42:05.400
然后

42:05.400 --> 42:07.400
create time

42:07.400 --> 42:10.400
你会拿过来有这样一个时间

42:10.400 --> 42:12.400
煎到 这样吧

42:12.400 --> 42:14.400
我们到这一步为止

42:14.400 --> 42:15.400
下面这部分

42:15.400 --> 42:17.400
我们先把上面展现一下

42:17.400 --> 42:18.400
展现好以后

42:18.400 --> 42:19.400
我们看到数据了

42:19.400 --> 42:20.400
我们再往下来

42:20.400 --> 42:22.400
因为我们先没写了一堆以后的话

42:22.400 --> 42:24.400
我们测试一下这些功能

42:24.400 --> 42:25.400
我们先捋一下代码

42:25.400 --> 42:27.400
开始录音点下去以后的话

42:27.400 --> 42:28.400
前面不用管了

42:28.400 --> 42:30.400
前面是效果已经OK了

42:30.400 --> 42:32.400
它本身能够进行录音

42:32.400 --> 42:33.400
录音以后

42:33.400 --> 42:35.400
它现在的原始文件

42:35.400 --> 42:37.400
原始的临史文件

42:37.400 --> 42:38.400
录进

42:38.400 --> 42:39.400
临史文件拿到以后

42:39.400 --> 42:40.400
做存储

42:40.400 --> 42:41.400
做存储

42:41.400 --> 42:42.400
它是指它的内部

42:42.400 --> 42:46.990
那么这边我们写个E

42:46.990 --> 42:49.990
然后我们拿到这个以后的话

42:49.990 --> 42:50.990
我们就把它进行存储

42:50.990 --> 42:51.990
存储的话

42:51.990 --> 42:53.990
完成现在的一个

42:53.990 --> 42:56.990
就是新的存储以后的文件的录进

42:56.990 --> 42:58.990
所以这边可以呈现出来

42:58.990 --> 43:00.990
然后它下面提示你录音成功

43:00.990 --> 43:02.990
成功以后的话

43:02.990 --> 43:04.990
那么这边我们就可以拿到

43:04.990 --> 43:07.990
现在的一个存储列表

43:07.990 --> 43:09.990
我们把存储列表已经拿出来

43:09.990 --> 43:10.990
我们看一下这个

43:10.990 --> 43:15.970
到这里为止的一个效果

43:15.970 --> 43:17.970
首先我们这边来看

43:17.970 --> 43:26.860
我们点击12345一放开

43:26.860 --> 43:28.860
这边还在录音是吧

43:28.860 --> 43:29.860
它的关闭录音动作

43:29.860 --> 43:31.860
现在我们是不是没做

43:31.860 --> 43:36.990
我们来看一下

43:36.990 --> 43:38.990
我们有一个开始录音

43:38.990 --> 43:39.990
开始录音的过程里面

43:39.990 --> 43:42.990
一旦开始成功以后

43:42.990 --> 43:45.990
我们应该把光标放开那一刻

43:45.990 --> 43:46.990
或者称之为

43:46.990 --> 43:49.990
我们这里边有一个录音结束

43:49.990 --> 43:50.990
有这样一个动作

43:50.990 --> 43:52.990
我们把这个录音结束动作

43:52.990 --> 43:55.990
我们坐在放开那个里面

43:55.990 --> 43:57.990
我们坐在这儿

43:57.990 --> 43:59.990
称之为录音结束

43:59.990 --> 44:04.620
不然它没法关

44:04.620 --> 44:06.620
录音结束

44:06.620 --> 44:08.620
在这儿

44:09.620 --> 44:14.060
Tarot Stop Recorder

44:14.060 --> 44:16.060
做一个这个动作

44:16.060 --> 44:17.060
那么这样的话

44:17.060 --> 44:18.060
它就会回到我们

44:18.060 --> 44:20.060
一旦你开始start以后

44:20.060 --> 44:21.060
Stop Recorder调用

44:21.060 --> 44:23.060
它就到这儿来了

44:23.060 --> 44:25.060
我们来看一下这个效果

44:25.060 --> 44:28.060
是不是我们理想中可以看到的

44:28.060 --> 44:30.060
123456一放开

44:30.060 --> 44:32.060
一放开录音完成

44:32.060 --> 44:33.060
咱们看有没有

44:33.060 --> 44:35.060
它给到了一个临时路径

44:35.060 --> 44:36.060
已经出来了

44:36.060 --> 44:38.060
然后存储位置没有给到

44:38.060 --> 44:39.060
对吧

44:39.060 --> 44:41.060
现在里面已经有几个文件

44:41.060 --> 44:42.060
因为之前我存过

44:42.060 --> 44:44.060
现在有六个文件在里面

44:44.060 --> 44:45.060
对吧

44:45.060 --> 44:46.060
好

44:46.060 --> 44:48.060
我们回过头来看一下

44:48.060 --> 44:50.060
六个文件里面的话

44:50.060 --> 44:51.060
我们需要

44:51.060 --> 44:53.060
第一步要解决的问题是

44:53.060 --> 44:56.060
我们看一下存储文件路径

44:56.060 --> 44:58.060
这个没有呈现

44:58.060 --> 45:01.060
存储文件路径是在这儿

45:01.060 --> 45:04.060
这个它现在这部分存储以后

45:04.060 --> 45:05.060
没有返回给我

45:05.060 --> 45:08.060
我们来找一下原因是什么

45:08.060 --> 45:09.060
这个

45:09.060 --> 45:11.060
这边没有那个横线

45:11.060 --> 45:13.060
这个是它系统自带的

45:13.060 --> 45:15.060
再来一次看一下

45:15.060 --> 45:17.060
我们存入进去的时候的话

45:17.060 --> 45:19.060
它其实这个路径

45:19.060 --> 45:22.820
这部分我们刚才改错了

45:22.820 --> 45:24.820
123456放开

45:24.820 --> 45:25.820
看到吗 路径出来了

45:25.820 --> 45:27.820
这个是一个临时路径

45:27.820 --> 45:28.820
有一个tmp的

45:28.820 --> 45:30.820
这是我们已经存好的一个位置

45:30.820 --> 45:31.820
这边有

45:31.820 --> 45:32.820
所以它骑出来了

45:32.820 --> 45:34.820
我们来看一下打开以后

45:34.820 --> 45:36.820
这个里边我们看到一下

45:36.820 --> 45:38.820
找一下这个

45:38.820 --> 45:41.820
最后后坠是2411f的

45:41.820 --> 45:49.080
它在

45:49.080 --> 45:53.080
vipars存储路径

45:53.080 --> 45:54.080
不是2411

45:54.080 --> 45:56.080
它其实后面还有

45:56.080 --> 45:59.580
它是好长的一个

45:59.580 --> 46:01.580
但是我们现在已经看到的是

46:01.580 --> 46:03.580
我们从前面来看就可以了

46:03.580 --> 46:05.580
它是2326

46:05.580 --> 46:07.580
它后面这个是一样

46:07.580 --> 46:09.580
我们这边有一个不一样的

46:09.580 --> 46:11.580
从这个数值来吧

46:11.580 --> 46:12.580
这个

46:12.580 --> 46:13.580
QB

46:13.580 --> 46:14.580
是不是这个

46:14.580 --> 46:15.580
就是这个了

46:15.580 --> 46:16.580
QB

46:16.580 --> 46:17.580
其他都是没有的

46:17.580 --> 46:18.580
ok

46:18.580 --> 46:19.580
那么这样的话

46:19.580 --> 46:20.580
我们看到的是

46:20.580 --> 46:22.580
的确它存入进去了

46:22.580 --> 46:23.580
的确它存入进去了

46:23.580 --> 46:24.580
那本地的话

46:24.580 --> 46:26.580
我们把本地的文件缓存

46:26.580 --> 46:28.580
也清一下

46:28.580 --> 46:30.580
此时你再来进行操作一下

46:30.580 --> 46:38.250
12345

46:38.250 --> 46:39.250
就一个了

46:39.250 --> 46:40.250
是吗

46:40.250 --> 46:41.250
那么就是我们刚才写的

46:41.250 --> 46:43.250
就是这个文件

46:43.250 --> 46:44.250
ok

46:44.250 --> 46:45.250
那这样的话

46:45.250 --> 46:46.250
我们已经完成了

46:46.250 --> 46:47.250
至少我现在

46:47.250 --> 46:48.250
能够有这个效果

46:48.250 --> 46:49.250
我们看里面

46:49.250 --> 46:51.250
你能得到三个值

46:51.250 --> 46:53.250
在这个Five Lister里面

46:53.250 --> 46:54.250
首先

46:54.250 --> 46:55.250
你看到的是Crit time

46:55.250 --> 46:57.250
它表示你创建的时间

46:57.250 --> 46:58.250
第二个呢

46:58.250 --> 47:00.250
你有一个Five Pass

47:00.250 --> 47:02.250
就表示你现在的一个

47:02.250 --> 47:04.250
在它的文件存储里面

47:04.250 --> 47:06.250
所有的一个路径

47:06.250 --> 47:07.250
第三个

47:07.250 --> 47:08.250
文件大小

47:08.250 --> 47:10.250
那我们就可以把这三个内容

47:10.250 --> 47:11.250
注意位置

47:11.250 --> 47:12.250
Five Lister

47:12.250 --> 47:16.900
在这个里面

47:16.900 --> 47:17.900
那我们就到这儿来对吧

47:17.900 --> 47:18.900
我们看到

47:18.900 --> 47:20.900
我们的Five Lister

47:20.900 --> 47:29.530
长度拿出来

47:29.530 --> 47:30.530
我们现在在里面

47:30.530 --> 47:31.530
Crit time拿出来

47:31.530 --> 47:34.530
Crit time它是一个我们的

47:34.530 --> 47:35.530
秒值

47:35.530 --> 47:36.530
所以我们把它直接放在

47:36.530 --> 47:38.530
Crit time上面来

47:38.530 --> 47:39.530
这个是我们刚才

47:39.530 --> 47:40.530
前面已经做过的

47:40.530 --> 47:41.530
对吧

47:41.530 --> 47:46.380
请接着我们继续往下写

47:46.380 --> 47:54.780
将音频

47:54.780 --> 47:56.780
大小B

47:56.780 --> 48:02.070
转为KB

48:02.070 --> 48:03.070
Lat

48:03.070 --> 48:05.070
Size等于

48:05.070 --> 48:06.070
我们来

48:06.070 --> 48:07.070
从里边拿出

48:07.070 --> 48:10.450
Five Lister

48:10.450 --> 48:13.450
Size 除异

48:13.450 --> 48:14.450
1024

48:14.450 --> 48:18.340
To Fixed

48:18.340 --> 48:20.340
我们做个2

48:20.340 --> 48:22.340
保留两位小数

48:22.340 --> 48:23.340
这样我们把它

48:23.340 --> 48:24.340
转换了一个

48:24.340 --> 48:27.340
它的一个单位

48:27.340 --> 48:28.340
再来

48:28.340 --> 48:31.780
接下去

48:31.780 --> 48:32.780
建立对象

48:32.780 --> 48:38.100
存储于

48:38.100 --> 48:40.100
Voice里面

48:40.100 --> 48:42.100
再来

48:42.100 --> 48:43.100
我们注意

48:43.100 --> 48:44.100
这个是个素组

48:44.100 --> 48:45.100
我们里面存的

48:45.100 --> 48:48.180
都可以用的是

48:48.180 --> 48:49.180
Voice

48:49.180 --> 48:50.180
等于

48:50.180 --> 48:53.940
Five Parts

48:53.940 --> 48:54.940
首先第一个

48:54.940 --> 48:55.940
RES点

48:55.940 --> 48:57.940
我们直接拿过来

48:57.940 --> 49:04.070
Five Lister

49:04.070 --> 49:05.070
I

49:05.070 --> 49:07.070
点

49:07.070 --> 49:08.070
Five Parts

49:08.070 --> 49:12.220
Crit time

49:12.220 --> 49:14.220
等于

49:14.220 --> 49:15.220
举步

49:15.220 --> 49:22.940
Crit time

49:22.940 --> 49:23.940
第三

49:23.940 --> 49:32.980
Size

49:32.980 --> 49:34.980
Size

49:34.980 --> 49:36.980
把这三块拿过来

49:36.980 --> 49:37.980
当然

49:37.980 --> 49:38.980
我们希望的是

49:38.980 --> 49:39.980
由于这是

49:39.980 --> 49:41.980
我们一个简单的格式

49:41.980 --> 49:42.980
所以我们把它连接到

49:42.980 --> 49:44.980
我们连到Voice后面去

49:44.980 --> 49:55.400
放进去

49:55.400 --> 50:07.030
这时候我们写的是

50:07.030 --> 50:09.030
Con

50:09.030 --> 50:14.030
Tec

50:14.030 --> 50:15.030
Voice

50:15.030 --> 50:17.030
连接进去

50:17.030 --> 50:19.030
此时我们可以看一下

50:19.030 --> 50:20.030
在这

50:20.030 --> 50:21.030
我们把这个

50:21.030 --> 50:25.300
Voice拿出来

50:25.300 --> 50:29.280
把它拿出来

50:29.280 --> 50:44.110
此时我们看看

50:44.110 --> 50:46.110
123456

50:46.110 --> 50:48.110
Lens有一个爆错

50:48.110 --> 50:50.110
我们看一下它的问题

50:50.110 --> 50:52.110
它是指的是

50:52.110 --> 50:54.110
这个是我们写

50:55.110 --> 50:56.110
ISR

50:56.110 --> 50:57.110
OK

50:57.110 --> 51:07.530
123456

51:08.530 --> 51:09.530
0

51:09.530 --> 51:11.530
我们来看一下

51:11.530 --> 51:19.130
它这边有一个0

51:19.130 --> 51:20.130
它指的是

51:20.130 --> 51:22.130
我们的一个

51:23.130 --> 51:25.130
0位定义

51:25.130 --> 51:27.130
成功返回函数里面

51:27.130 --> 51:28.130
我们来看一下

51:28.130 --> 51:30.130
因为本身来讲

51:30.130 --> 51:31.130
在这个里面

51:31.130 --> 51:32.130
我们是有数据的

51:32.130 --> 51:34.130
然后我们通过

51:34.130 --> 51:35.130
Five List里面

51:35.130 --> 51:36.130
然后我们根据刚才

51:36.130 --> 51:37.130
再看一下

51:37.130 --> 51:39.130
上面的情况

51:39.130 --> 51:40.130
以保存列表

51:40.130 --> 51:41.130
我们打开一下

51:41.130 --> 51:42.130
我们看到

51:42.130 --> 51:44.130
这边显示是Five List

51:44.130 --> 51:45.130
List里面

51:45.130 --> 51:47.130
数组的一个0

51:47.130 --> 51:48.130
有的

51:48.130 --> 51:49.130
我们再来看一下

51:49.130 --> 51:50.130
原码

51:50.130 --> 51:51.130
Parse

51:51.130 --> 51:52.130
它叫Five Pass

51:52.130 --> 51:53.130
所以这边改一改

51:53.130 --> 51:55.130
它叫Five Pass

51:56.130 --> 52:00.130
它不是我们的Five List

52:01.130 --> 52:02.130
看一下

52:02.130 --> 52:04.130
原因它其实真正的在这

52:04.130 --> 52:06.130
因为我这边写了个2

52:06.130 --> 52:07.130
所以我这边

52:07.130 --> 52:09.130
还是按照原意来写了个res

52:09.130 --> 52:11.130
所以我们把它直接写成2

52:11.130 --> 52:12.130
所以你看一下

52:12.130 --> 52:14.130
这个结构是对的

52:14.130 --> 52:16.130
只不过就是属于

52:16.130 --> 52:18.130
我们需要把res这个值

52:18.130 --> 52:19.130
变成我们现在

52:19.130 --> 52:21.130
Success返回的这个内容

52:21.130 --> 52:23.130
我们来看一下

52:23.130 --> 52:24.130
12345

52:25.130 --> 52:26.130
看到吗

52:26.130 --> 52:27.130
已经保存了

52:27.130 --> 52:28.130
然后下面Voice

52:28.130 --> 52:29.130
1234

52:29.130 --> 52:31.130
这里面5个都会进来

52:31.130 --> 52:32.130
对吧

52:32.130 --> 52:33.130
5条数据都会进来

52:33.130 --> 52:35.130
我在这里面进行显示的

52:35.130 --> 52:37.130
我们其实可以把它放在最外面

52:37.130 --> 52:38.130
对吧

52:38.130 --> 52:39.130
这样的话5条数据

52:39.130 --> 52:40.130
你在这边能看到

52:40.130 --> 52:41.130
好

52:41.130 --> 52:42.130
我们再把它清一下

52:42.130 --> 52:48.190
把文件的缓存清一下

52:48.190 --> 52:50.190
12345

52:50.190 --> 52:51.190
对吧

52:51.190 --> 52:52.190
这边有一条数据

52:53.190 --> 52:54.190
OK

52:54.190 --> 52:55.190
好

52:55.190 --> 52:56.190
那么现在我们已经把数据

52:56.190 --> 52:57.190
已经拿到了

52:57.190 --> 52:58.190
那么紧接的下去是什么呢

52:58.190 --> 52:59.190
我们把数据

52:59.190 --> 53:01.190
要呈现在界面上面

53:01.190 --> 53:02.190
是不是

53:02.190 --> 53:03.190
这个逻辑的话

53:03.190 --> 53:05.190
应该很简单了吧

53:05.190 --> 53:06.190
因为

53:06.190 --> 53:07.190
我们已经有这个数据

53:07.190 --> 53:09.190
我们把这个值

53:09.190 --> 53:13.820
把数据存储到

53:13.820 --> 53:15.820
Stator的

53:15.820 --> 53:16.820
This点

53:16.820 --> 53:20.100
Set

53:20.100 --> 53:27.270
Stator

53:27.270 --> 53:28.270
注意

53:28.270 --> 53:30.270
你现在这个位置

53:30.270 --> 53:32.270
你是在我们这里边

53:32.270 --> 53:33.270
所以最好的方式

53:33.270 --> 53:34.270
还是

53:34.270 --> 53:35.270
在外部

53:35.270 --> 53:36.270
咱们去订一个

53:36.270 --> 53:38.270
我们在外面应该有

53:38.270 --> 53:40.270
手指头摸

53:40.270 --> 53:41.270
that

53:41.270 --> 53:42.270
this

53:42.270 --> 53:43.270
改变一下

53:43.270 --> 53:46.860
我们里面

53:46.860 --> 53:55.170
做一个voice

53:55.170 --> 53:56.170
然后

53:56.170 --> 53:57.170
我们在这里

53:57.170 --> 54:01.080
把当前的这个voice

54:01.080 --> 54:02.080
放进来

54:03.080 --> 54:04.080
你去改变这个值

54:04.080 --> 54:05.080
那么

54:05.080 --> 54:06.080
首先我们到上面

54:06.080 --> 54:08.080
我们去看Status里面

54:08.080 --> 54:10.080
我们去订一个voice

54:10.080 --> 54:11.080
订好这个值以后的话

54:11.080 --> 54:17.400
那么我们只需要把这个值

54:17.400 --> 54:19.400
进行页面的循环

54:19.400 --> 54:20.400
对吗

54:20.400 --> 54:22.400
我这边对它已经复职了

54:22.400 --> 54:23.400
复完值以后的话

54:23.400 --> 54:24.400
它意味着

54:24.400 --> 54:25.400
它只要现在

54:25.400 --> 54:26.400
对它进行循环

54:26.400 --> 54:27.400
你就能看到

54:27.400 --> 54:30.400
我们这样一个操作值的出现

54:30.400 --> 54:31.400
回到页面中

54:31.400 --> 54:33.400
回到页面中

54:33.400 --> 54:35.400
我们的循环是在这

54:35.400 --> 54:40.630
我们这边不是空了两格吗

54:40.630 --> 54:42.630
那么循环是怎么循环的

54:42.630 --> 54:44.630
把这个拿出来

54:44.630 --> 54:54.730
你里面去做

54:54.730 --> 55:02.830
this.stat.voice.map

55:06.340 --> 55:08.340
进入里面循环

55:08.340 --> 55:10.340
item.index

55:10.340 --> 55:12.340
我们在这个item.index里面

55:12.340 --> 55:16.970
我们去做return

55:16.970 --> 55:26.740
把这一段拿过来

55:26.740 --> 55:27.740
这样的结构

55:27.740 --> 55:28.740
然后

55:28.740 --> 55:29.740
每一个item

55:29.740 --> 55:32.820
所拿出来的内容

55:32.820 --> 55:37.800
我们在这边就要修改

55:37.800 --> 55:41.750
item里面出来的

55:41.750 --> 55:43.750
我们首先路径

55:43.750 --> 55:50.240
这边会有一个pass

55:50.240 --> 55:51.240
我们去拿一下

55:51.240 --> 55:53.240
在它直接代码过程中

55:53.240 --> 55:57.900
有一个叫做

55:57.900 --> 55:59.900
5pass

55:59.900 --> 56:00.900
item.

56:00.900 --> 56:02.900
这边是事件

56:02.900 --> 56:03.900
其实这个事件

56:03.900 --> 56:12.140
我们把它放的就是

56:12.140 --> 56:13.140
时间

56:13.140 --> 56:16.770
我们赶紧改一下

56:16.770 --> 56:18.770
其实里面就是什么

56:18.770 --> 56:20.770
这边就是

56:20.770 --> 56:24.490
改一下

56:24.490 --> 56:29.660
其实里面就是什么

56:29.660 --> 56:31.660
return

56:31.660 --> 56:37.850
再有大小

56:37.850 --> 56:39.850
item.size

56:39.850 --> 56:43.930
大小

56:43.930 --> 56:47.750
后面跟下一个单位

56:47.750 --> 56:51.540
kb

56:51.540 --> 56:53.540
我们来看一下效果

56:53.540 --> 56:55.540
是否有问题

56:55.540 --> 56:56.540
还需要修改

56:56.540 --> 56:58.540
还说可以完成了

56:58.540 --> 57:03.640
首先

57:03.640 --> 57:05.640
123456

57:05.640 --> 57:06.640
完成

57:06.640 --> 57:08.640
看路径出来了

57:08.640 --> 57:09.640
存储时间还没有

57:09.640 --> 57:10.640
对吧

57:10.640 --> 57:11.640
音频大小

57:11.640 --> 57:13.640
其他的这边都会有了

57:13.640 --> 57:14.640
已经是

57:14.640 --> 57:16.640
这边有一个

57:16.640 --> 57:17.640
爆错

57:17.640 --> 57:19.640
它告诉我们的是追加的时候

57:19.640 --> 57:21.640
没有这个路径

57:21.640 --> 57:23.640
在这样的一个路径下面

57:23.640 --> 57:24.640
我们再来一次

57:24.640 --> 57:26.640
123456

57:26.640 --> 57:27.640
有了

57:27.640 --> 57:28.640
这个的话

57:28.640 --> 57:29.640
就暂时先不用

57:29.640 --> 57:31.640
它是日治的一个追加

57:31.640 --> 57:32.640
ok

57:32.640 --> 57:33.640
那我们看到了

57:33.640 --> 57:35.640
现在存储时间

57:35.640 --> 57:36.640
我们要稍微看一下

57:36.640 --> 57:38.640
它的问题是在哪

57:38.640 --> 57:42.720
这边有一个存储时间

57:42.720 --> 57:43.720
这边有个存储时间

57:43.720 --> 57:45.720
那么我们把这个voice

57:45.720 --> 57:47.720
我们这边拿出来看到的

57:47.720 --> 57:49.720
把上面这个打开我们

57:49.720 --> 57:50.720
voice里面

57:50.720 --> 57:52.720
这个也打开

57:52.720 --> 57:54.720
我们看一下时间

57:54.720 --> 57:55.720
时间是有的

57:55.720 --> 57:56.720
这边一个时间

57:56.720 --> 57:57.720
great time

57:57.720 --> 57:58.720
是吧

57:58.720 --> 57:59.720
好

57:59.720 --> 58:00.720
我们把这个时间

58:00.720 --> 58:01.720
看

58:01.720 --> 58:05.120
它的显示

58:05.120 --> 58:06.120
这个就是在这

58:06.120 --> 58:07.120
我们把great time

58:07.120 --> 58:08.120
给拿出来

58:08.120 --> 58:09.120
great time拿出来

58:09.120 --> 58:10.120
直接放进来

58:10.120 --> 58:11.120
它最后呈现的时候

58:11.120 --> 58:13.120
是一个对象结构

58:13.120 --> 58:14.120
像

58:14.120 --> 58:15.120
我们显示的时间

58:15.120 --> 58:16.120
是对象的话

58:16.120 --> 58:18.120
那我们把它强转成

58:18.120 --> 58:19.120
一个自付串

58:19.120 --> 58:24.800
我们把它强转成自付串

58:24.800 --> 58:25.800
因为很简单

58:25.800 --> 58:27.800
因为本身页面上面的话

58:27.800 --> 58:29.800
它最后给我呈现的时候

58:29.800 --> 58:30.800
它其实是个自付串

58:30.800 --> 58:32.800
它是个json自付串

58:32.800 --> 58:37.970
然后我们看一下

58:37.970 --> 58:38.970
出来了吧

58:38.970 --> 58:39.970
出来了

58:39.970 --> 58:40.970
ok

58:40.970 --> 58:41.970
然后我们把它里面

58:41.970 --> 58:42.970
还有最后几点给做掉

58:42.970 --> 58:43.970
第一的话

58:43.970 --> 58:44.970
我们在前面

58:44.970 --> 58:45.970
进行操作的时候

58:45.970 --> 58:46.970
会有一个爆错

58:46.970 --> 58:47.970
因为我没有加key

58:47.970 --> 58:49.970
所以我们把key加上

58:49.970 --> 59:03.180
第二就是我们现在

59:03.180 --> 59:04.180
原因应该是

59:04.180 --> 59:06.180
当我现在

59:06.180 --> 59:08.180
进行开始状态的话

59:08.180 --> 59:11.180
应该就把那几个可以拿出来

59:11.180 --> 59:12.180
而不是简单的

59:12.180 --> 59:13.180
最后的时候出来

59:13.180 --> 59:14.180
理解吧

59:14.180 --> 59:15.180
这个意思

59:15.180 --> 59:17.180
所以此时我们应该

59:17.180 --> 59:19.180
完成一个初始状态

59:19.180 --> 59:20.180
就把里面右的

59:20.180 --> 59:22.180
值给显示出来

59:22.180 --> 59:23.180
那么它现在

59:23.180 --> 59:24.180
把值显示出来

59:24.180 --> 59:25.180
初始状态

59:25.180 --> 59:26.180
在哪个手作呢

59:26.180 --> 59:28.180
就是undead show对吧

59:28.180 --> 59:31.180
所以我们在stater

59:31.180 --> 59:32.180
后面

59:32.180 --> 59:33.180
我们做一个

59:33.180 --> 59:35.180
component

59:35.180 --> 59:36.180
undead show

59:36.180 --> 59:38.180
一个身边周期钩子的韩束

59:38.180 --> 59:47.080
在它里面

59:47.080 --> 59:51.580
我们要做的是初始化

59:51.580 --> 59:56.050
初始化显示

59:56.050 --> 01:00:03.140
文件列表

01:00:03.140 --> 01:00:05.580
初始化显示文件列表

01:00:05.580 --> 01:00:06.580
那我们现在文件列表

01:00:06.580 --> 01:00:07.580
就是在下面

01:00:07.580 --> 01:00:09.580
我们直接把它掉取出来

01:00:09.580 --> 01:00:15.060
就是它

01:00:15.060 --> 01:00:16.060
就它

01:00:16.060 --> 01:00:17.060
那么我们

01:00:17.060 --> 01:00:18.060
这里也要用一次

01:00:18.060 --> 01:00:19.060
外部也要用一次

01:00:19.060 --> 01:00:21.060
那怎么做呢

01:00:21.060 --> 01:00:23.060
我们直接可以把它

01:00:23.060 --> 01:00:25.060
作为我们的一个单独的

01:00:25.060 --> 01:00:26.060
一个文件

01:00:26.060 --> 01:00:27.060
或者说

01:00:27.060 --> 01:00:31.660
一个事件来写

01:00:31.660 --> 01:00:32.660
咱们写的是

01:00:32.660 --> 01:00:34.660
get

01:00:34.660 --> 01:00:36.660
就得到文件

01:00:36.660 --> 01:00:46.110
列表

01:00:46.110 --> 01:00:47.110
获取

01:00:47.110 --> 01:00:56.020
它整个这一段

01:00:56.020 --> 01:00:57.020
拿过来

01:00:57.020 --> 01:00:58.020
那这边的话

01:00:58.020 --> 01:00:59.020
就改成this

01:00:59.020 --> 01:01:07.680
看一下

01:01:07.680 --> 01:01:08.680
首先在这个

01:01:08.680 --> 01:01:09.680
获取文件列表里面

01:01:09.680 --> 01:01:11.680
完成一个对象

01:01:11.680 --> 01:01:12.680
然后

01:01:12.680 --> 01:01:13.680
获取对象

01:01:13.680 --> 01:01:14.680
然后的话呢

01:01:14.680 --> 01:01:15.680
我们把文件列表的整个内容

01:01:15.680 --> 01:01:16.680
在里面循环

01:01:16.680 --> 01:01:18.680
循环完成以后的话呢

01:01:18.680 --> 01:01:19.680
我们把它组成一个voice

01:01:19.680 --> 01:01:20.680
voice

01:01:20.680 --> 01:01:21.680
加入到我们的voices

01:01:21.680 --> 01:01:22.680
voices

01:01:22.680 --> 01:01:24.680
加入到我们的最大的stater里面

01:01:24.680 --> 01:01:25.680
然后整个这个语句呢

01:01:25.680 --> 01:01:26.680
我们在

01:01:26.680 --> 01:01:28.680
当前的提示成功以后

01:01:28.680 --> 01:01:39.030
这边掉取一下

01:01:39.030 --> 01:01:42.030
所以我们写的就是

01:01:42.030 --> 01:01:44.030
this.get

01:01:44.030 --> 01:01:45.030
violist

01:01:45.030 --> 01:01:57.180
打开看一下

01:01:57.180 --> 01:02:00.180
现在由于我刚才清空缓存了

01:02:00.180 --> 01:02:02.180
这里面应该是没有东西的

01:02:02.180 --> 01:02:08.300
这边页面边有问题吗

01:02:08.300 --> 01:02:09.300
咱们看一下

01:02:09.300 --> 01:02:10.300
没有

01:02:10.300 --> 01:02:12.300
没有问题

01:02:12.300 --> 01:02:15.300
那就是我们

01:02:15.300 --> 01:02:22.010
微信这个慢了

01:02:22.010 --> 01:02:23.010
我们可以等它10秒钟时间

01:02:23.010 --> 01:02:24.010
如果它没有出来的话

01:02:24.010 --> 01:02:26.010
我们可以重新启动一下

01:02:26.010 --> 01:02:30.090
当前的微信

01:02:30.090 --> 01:02:31.090
它真没起来

01:02:31.090 --> 01:02:33.090
我们直接重新开一下微信

01:02:33.090 --> 01:02:41.040
就拿它

01:02:41.040 --> 01:02:42.040
开一下它内部的话

01:02:42.040 --> 01:02:44.040
会重新加载一遍

01:02:44.040 --> 01:02:45.040
那么这样的话呢

01:02:45.040 --> 01:02:46.040
就很容易把它给开起来

01:02:46.040 --> 01:02:48.040
不然可能中间有一个

01:02:48.040 --> 01:02:50.040
运行过多

01:02:50.040 --> 01:02:52.040
这边的话不用管它

01:02:52.040 --> 01:02:54.040
这是APPID的一个问题

01:02:54.040 --> 01:03:13.480
它在on show里面报了一个错

01:03:13.480 --> 01:03:15.480
说API get成功返回

01:03:15.480 --> 01:03:16.480
这事是

01:03:16.480 --> 01:03:22.160
我们来看一下

01:03:22.160 --> 01:03:25.160
因为你去调用当前的

01:03:25.160 --> 01:03:26.160
这个操作的时候

01:03:26.160 --> 01:03:27.160
我们把这个给删了

01:03:27.160 --> 01:03:28.160
可以里面

01:03:28.160 --> 01:03:30.160
调用这个操作的时候

01:03:30.160 --> 01:03:32.160
如果这里面没有数据

01:03:32.160 --> 01:03:35.240
对吧

01:03:35.240 --> 01:03:36.240
如果这里面没有数据

01:03:36.240 --> 01:03:37.240
我们应该是处理一下

01:03:37.240 --> 01:03:39.240
这部分内容

01:03:39.240 --> 01:03:41.240
这个问题其实是指这个

01:03:41.240 --> 01:03:42.240
我们再来看一下

01:03:42.240 --> 01:03:43.240
它指的问题

01:03:43.240 --> 01:03:44.240
其实是指DIS的指向问题

01:03:44.240 --> 01:03:45.240
所以这个

01:03:45.240 --> 01:03:46.240
其实我们在之前

01:03:46.240 --> 01:03:48.240
就很容易给它说到了

01:03:48.240 --> 01:03:49.240
它说dis.setState

01:03:49.240 --> 01:03:50.240
这个没有这个方法

01:03:50.240 --> 01:03:51.240
所以呢

01:03:51.240 --> 01:03:53.240
dis本身我们往上找

01:03:53.240 --> 01:03:54.240
由于你dis本身

01:03:54.240 --> 01:03:55.240
自己写在了success里面

01:03:55.240 --> 01:03:56.240
所以呢

01:03:56.240 --> 01:03:57.240
我们必须在外部

01:03:57.240 --> 01:03:58.240
给它去定义一个

01:03:58.240 --> 01:04:00.240
我们的Z

01:04:00.240 --> 01:04:01.240
也就是说

01:04:01.240 --> 01:04:03.240
把Z固定在外部

01:04:03.240 --> 01:04:04.240
这时候呢

01:04:04.240 --> 01:04:05.240
我们把Z来换起

01:04:05.240 --> 01:04:07.240
你现在的这个操作

01:04:07.240 --> 01:04:08.240
这是OK的

01:04:08.240 --> 01:04:09.240
同时呢

01:04:09.240 --> 01:04:10.240
我们往上看

01:04:10.240 --> 01:04:11.240
因为这边有调过一个

01:04:11.240 --> 01:04:12.240
get file list

01:04:12.240 --> 01:04:13.240
而这个的操作

01:04:13.240 --> 01:04:14.240
依然往上找一下

01:04:14.240 --> 01:04:16.240
它依然在success里面

01:04:16.240 --> 01:04:17.240
所以呢

01:04:17.240 --> 01:04:18.240
我们还是需要在外部

01:04:18.240 --> 01:04:20.240
再定一个

01:04:20.240 --> 01:04:21.240
Z

01:04:21.240 --> 01:04:22.240
Z

01:04:22.240 --> 01:04:25.240
然后把这个Z拿过来

01:04:25.240 --> 01:04:26.240
在这改一改

01:04:26.240 --> 01:04:28.240
应该这样就可以了

01:04:28.240 --> 01:04:29.240
不然你上面

01:04:29.240 --> 01:04:30.240
这个肯定也会错

01:04:30.240 --> 01:04:32.240
这是Z and Z的问题

01:04:32.240 --> 01:04:34.240
初始打开页面

01:04:34.240 --> 01:04:36.240
咱们看到原先有两个文件在

01:04:36.240 --> 01:04:37.240
对吧

01:04:37.240 --> 01:04:38.240
然后没有关系

01:04:38.240 --> 01:04:39.240
然后1.1234录音一放

01:04:39.240 --> 01:04:40.240
是不是第三个进去了

01:04:40.240 --> 01:04:41.240
OK吧

01:04:41.240 --> 01:04:43.240
所以这个录音G的功能

01:04:43.240 --> 01:04:44.240
我们现在基本上

01:04:44.240 --> 01:04:45.240
已经实现了

01:04:45.240 --> 01:04:47.240
我们的80%了

01:04:47.240 --> 01:04:48.240
为什么呢

01:04:48.240 --> 01:04:49.240
不是做完了吗

01:04:49.240 --> 01:04:50.240
没有

01:04:50.240 --> 01:04:51.240
还缺一个

01:04:51.240 --> 01:04:52.240
还缺个播放呢

01:04:52.240 --> 01:04:53.240
对吧

01:04:53.240 --> 01:04:54.240
我们现在的话

01:04:54.240 --> 01:04:55.240
应该是录音可以了

01:04:55.240 --> 01:04:57.240
列表呈现可以了

01:04:57.240 --> 01:04:58.240
对不对

01:04:58.240 --> 01:05:00.240
然后还有这样的一个效果可以了

01:05:00.240 --> 01:05:01.240
对吧

01:05:01.240 --> 01:05:02.240
当然这效果的话呢

01:05:02.240 --> 01:05:04.240
我们希望它出现在中间

01:05:04.240 --> 01:05:05.240
我们待会再调一下

01:05:05.240 --> 01:05:06.240
样式就可以了

01:05:06.240 --> 01:05:09.240
那么紧接着

01:05:09.240 --> 01:05:11.240
它这个样式会往下走

01:05:11.240 --> 01:05:12.240
对吧

01:05:12.240 --> 01:05:15.260
我们调整一下

01:05:15.260 --> 01:05:16.260
样式就可以了

01:05:16.260 --> 01:05:17.260
那么我们来看一下

01:05:17.260 --> 01:05:19.260
它的整个这个结构

01:05:19.260 --> 01:05:21.260
它为什么会往下乘

01:05:21.260 --> 01:05:22.260
这个

01:05:22.260 --> 01:05:23.260
其实这个很简愿

01:05:23.260 --> 01:05:24.260
很简单

01:05:24.260 --> 01:05:26.260
你看我第一个

01:05:26.260 --> 01:05:27.260
显示一下

01:05:27.260 --> 01:05:28.260
这个位置没问题

01:05:28.260 --> 01:05:29.260
第二个

01:05:29.260 --> 01:05:30.260
它成了一点

01:05:30.260 --> 01:05:32.260
再往下它又成了一点

01:05:32.260 --> 01:05:33.260
那么原因在于

01:05:33.260 --> 01:05:38.260
我们对于它这个view的一个speaker style

01:05:38.260 --> 01:05:40.260
我们采用的是relake相对定位

01:05:40.260 --> 01:05:41.260
那么如果改绝对

01:05:41.260 --> 01:05:42.260
那不行

01:05:42.260 --> 01:05:43.260
为什么

01:05:43.260 --> 01:05:45.260
因为它里面有个sound style

01:05:45.260 --> 01:05:46.260
sound style用了个绝对定位

01:05:46.260 --> 01:05:47.260
所以它里面那部分

01:05:47.260 --> 01:05:49.260
是针对于它来讲的

01:05:49.260 --> 01:05:50.260
所以我这部分不去改

01:05:50.260 --> 01:05:51.260
不能改绝对

01:05:51.260 --> 01:05:52.260
那么这时候

01:05:52.260 --> 01:05:54.260
但是我又相对于它来讲

01:05:54.260 --> 01:05:56.260
它是针对于外层的

01:05:56.260 --> 01:05:57.260
它的上一层

01:05:57.260 --> 01:05:59.260
所以你一旦上面这个内容

01:05:59.260 --> 01:06:01.260
再不断往下增加的话

01:06:01.260 --> 01:06:03.260
它就会往下移了

01:06:03.260 --> 01:06:05.260
解决这个问题的办法就是

01:06:05.260 --> 01:06:08.260
在我们当前的view的上面

01:06:08.260 --> 01:06:12.460
咱们再套一个view出来

01:06:12.460 --> 01:06:21.660
咱们再套一个view出来

01:06:21.660 --> 01:06:24.660
咱们再写一个view

01:06:24.660 --> 01:06:26.660
然后内部这个用相对的

01:06:26.660 --> 01:06:28.660
但是外部这个咱们写一个center

01:06:28.660 --> 01:06:30.660
让它在中间

01:06:30.660 --> 01:06:36.640
让它形成一个固定定位

01:06:36.640 --> 01:06:38.640
这样写

01:06:38.640 --> 01:06:40.640
我们就做一个

01:06:40.640 --> 01:06:42.640
position

01:06:42.640 --> 01:06:45.950
fixed

01:06:45.950 --> 01:06:46.950
然后左边

01:06:46.950 --> 01:06:49.950
我们给它是200个rpx

01:06:49.950 --> 01:06:50.950
然后top

01:06:50.950 --> 01:06:52.950
我们也给200个rpx

01:06:52.950 --> 01:06:53.950
我们来看一下效果

01:06:53.950 --> 01:07:05.070
当然这个200你可以调

01:07:05.070 --> 01:07:07.070
我没有说固定在那边

01:07:07.070 --> 01:07:10.510
没保存我们吧

01:07:10.510 --> 01:07:11.510
这个文件还没存

01:07:11.510 --> 01:07:13.510
注意这边有个点

01:07:13.510 --> 01:07:14.510
这个点的话是圆的

01:07:14.510 --> 01:07:15.510
你就没存

01:07:15.510 --> 01:07:22.130
我们重新开始清空你的文件

01:07:22.130 --> 01:07:26.270
点击在这

01:07:26.270 --> 01:07:28.270
看是不是一直在这边了

01:07:28.270 --> 01:07:29.270
当然这个

01:07:29.270 --> 01:07:31.270
所谓的上面2300你可以调

01:07:31.270 --> 01:07:33.270
我在这就不再去调了

01:07:33.270 --> 01:07:35.270
最多往它们再过来一点点

01:07:35.270 --> 01:07:37.270
比如说250

01:07:37.270 --> 01:07:41.250
好了

01:07:41.250 --> 01:07:42.250
那么这样的话

01:07:42.250 --> 01:07:43.250
我们就完成了当前的

01:07:43.250 --> 01:07:45.250
这个视力的前面的操作了

01:07:45.250 --> 01:07:46.250
我们接下去

01:07:46.250 --> 01:07:48.250
还有最后的20%是什么

01:07:48.250 --> 01:07:50.250
点击当前的这样的一条

01:07:50.250 --> 01:07:52.250
我们来听这个录音

01:07:52.250 --> 01:07:54.250
是这个过程

01:07:54.250 --> 01:07:57.880
我们先休息一下

01:07:57.880 --> 01:07:59.880
待会我们来做中间的

01:07:59.880 --> 01:08:00.880
这个听录音的

