WEBVTT

00:00.050 --> 00:02.050
好 我们继续讲解Tallot系列课乘

00:02.050 --> 00:05.050
系列课主要给大家讲解一下我们的导航组件

00:05.050 --> 00:10.050
导航组件其实对于我们的无论是小程序端

00:10.050 --> 00:11.050
还属于H5端

00:11.050 --> 00:13.050
那么它其实都可以使用

00:13.050 --> 00:15.050
但是这边额外说一下

00:15.050 --> 00:19.050
它对我们的RN来讲

00:19.050 --> 00:21.050
它是没有实现的

00:21.050 --> 00:22.050
它对RN来讲

00:22.050 --> 00:24.050
就是React Native来讲的话

00:24.050 --> 00:26.050
导航组件是不可用的

00:26.050 --> 00:30.050
这点上面在我们的Tallot上面是有强烈规定的

00:30.050 --> 00:33.050
那么我们现在的导航组件基本都用于

00:33.050 --> 00:34.050
要不就是H5

00:34.050 --> 00:37.050
要不就是我们现在的小程序端圈

00:37.050 --> 00:40.050
然后我们导航里面有好几个属性

00:40.050 --> 00:44.050
有些属性是属于行为属性

00:44.050 --> 00:48.050
有些属性是属于我们的表现属性

00:48.050 --> 00:50.050
表现属性比较说是

00:50.050 --> 00:51.050
颜色改一改

00:51.050 --> 00:52.050
背景改一改

00:52.050 --> 00:53.050
字体改一改

00:53.050 --> 00:54.050
这种成为表现

00:54.050 --> 00:56.050
它不影响你现在导航的一个使用

00:56.050 --> 00:58.050
那么行为属性的话

00:58.050 --> 01:00.050
比如说它可以有target

01:00.050 --> 01:02.050
表示的是那个跳转目标

01:02.050 --> 01:04.050
跳转然后URL的位置

01:04.050 --> 01:07.050
Open Type 类型以及Delta

01:07.050 --> 01:11.050
跳转的一个返回的深度

01:11.050 --> 01:14.050
还有的就是属于我们在跳转过程中

01:14.050 --> 01:17.050
你现在讲除了应用内的跳转以外

01:17.050 --> 01:18.050
我们还可以向应用外

01:18.050 --> 01:22.050
但是小程序本身的应用外跳转的话

01:22.050 --> 01:24.050
那么注意一下

01:24.050 --> 01:27.050
它只能往小程序进行跳

01:27.050 --> 01:29.050
它不存在于你说

01:29.050 --> 01:31.050
小程序跳到百度页面去

01:31.050 --> 01:33.050
这种情况是不存在的

01:33.050 --> 01:35.050
小程序跳到小程序

01:35.050 --> 01:36.050
那么这是可以

01:36.050 --> 01:38.050
但是请注意一下

01:38.050 --> 01:42.050
这种操作在之前

01:42.050 --> 01:43.050
无论是安置OS

01:43.050 --> 01:45.050
那么都是可以运行的

01:45.050 --> 01:47.050
但是在后期的时候

01:47.050 --> 01:49.050
就是在OS 端的话

01:49.050 --> 01:52.050
它进调了小程序跳小程序这个功能

01:52.050 --> 01:54.050
但是在安卓端是可以运行的

01:54.050 --> 01:56.050
所以我们这个功能

01:56.050 --> 01:57.050
我们给大家介绍一下

01:57.050 --> 01:59.050
并且告知大家怎么去操作

01:59.050 --> 02:01.050
但是是不是所有的

02:01.050 --> 02:04.050
现在的就是微信

02:04.050 --> 02:07.050
所能够提供这样的一个跳转

02:07.050 --> 02:10.050
它还是有带后面的我们来看的

02:10.050 --> 02:12.050
因为小程序跳小程序

02:12.050 --> 02:14.050
它其实要接住于微信的接口

02:14.050 --> 02:18.050
而微信本身自己在OS端的一个限制

02:18.050 --> 02:20.050
因为我们之前在操作的时候

02:20.050 --> 02:23.050
原来那么操作过程中是没有问题的

02:23.050 --> 02:24.050
但后期的话

02:24.050 --> 02:28.050
微信给出了它禁止小程序和小程序在OS端的一个跳转功能

02:28.050 --> 02:32.050
但是小程序本身的语法上面还是有的

02:32.050 --> 02:34.050
所以我们还是给大家介绍一下

02:34.050 --> 02:36.050
至少来说

02:36.050 --> 02:39.050
如果你开发的是一个安卓端的话

02:39.050 --> 02:41.050
那么其实这个是肯定能够运行的

02:41.050 --> 02:46.050
那么我们对导航功能做一个简单的介绍

02:46.050 --> 02:48.050
当然里面所用到的功能

02:48.050 --> 02:50.050
我们都给大家演示一把

02:50.050 --> 02:51.050
还是一样

02:51.050 --> 02:53.050
我们打开我们的项目

02:53.050 --> 02:54.050
然后在项目中

02:54.050 --> 02:57.050
我们创建一个我们最简单的页面

02:57.050 --> 03:03.410
成为navigator

03:03.410 --> 03:05.410
然后我们的country

03:05.410 --> 03:17.960
jxx

03:17.960 --> 03:20.960
我们就不再去做它的一个样式了

03:20.960 --> 03:22.960
因为样式的创建对我们来讲

03:22.960 --> 03:23.960
其实很简单

03:23.960 --> 03:26.960
只不过我们现在更多的想

03:26.960 --> 03:29.960
希望能看到现在的一些跳转语剧的使用

03:29.960 --> 03:31.960
然后我们把上面的这个

03:31.960 --> 03:33.960
import语剧写一下

03:33.960 --> 03:37.270
tarrow component

03:37.270 --> 03:41.800
from

03:41.800 --> 03:43.800
tarrow js

03:43.800 --> 03:48.110
tarrow import

03:48.110 --> 03:50.110
把两个常用的拿进来

03:50.110 --> 03:57.870
然后导航

03:57.870 --> 04:00.870
拿进来 from

04:00.870 --> 04:07.960
component

04:07.960 --> 04:13.420
然后default class

04:13.420 --> 04:15.420
然后写上我们现在

04:15.420 --> 04:17.420
当前这个功能

04:17.420 --> 04:18.420
never

04:18.420 --> 04:19.420
gator

04:19.420 --> 04:20.420
country

04:20.420 --> 04:29.540
tarol

04:29.540 --> 04:30.540
extence

04:30.540 --> 04:32.540
继承制我们的

04:32.540 --> 04:37.960
component

04:37.960 --> 04:38.960
extence

04:38.960 --> 04:45.980
ok

04:45.980 --> 04:48.980
然后我们把里面最简单的一个

04:48.980 --> 04:50.980
randow结构写一下

04:50.980 --> 05:00.590
复制一下

05:00.590 --> 05:02.590
我们把它

05:02.590 --> 05:03.590
做一个标签

05:03.590 --> 05:05.590
然后我们在这个过程中

05:05.590 --> 05:07.590
我们写上一个

05:07.590 --> 05:12.910
我们的never

05:12.910 --> 05:14.910
好我们把never这个词

05:14.910 --> 05:15.910
我们写到哪呢

05:15.910 --> 05:17.910
写到我们的never country

05:17.910 --> 05:19.910
我们崇明明

05:19.910 --> 05:21.910
崇明明的目的就是我们选

05:21.910 --> 05:22.910
punctuC复制一下

05:22.910 --> 05:28.170
我把写这儿

05:28.170 --> 05:30.170
然后我把下面的复制上来

05:30.170 --> 05:35.210
粘进去

05:35.210 --> 05:36.210
这样做

05:36.210 --> 05:38.210
好了我们把这个页面生成了

05:38.210 --> 05:41.210
然后同时这边也保存一下

05:41.210 --> 05:43.210
打开我们的程序

05:43.210 --> 05:44.210
我们来看一下

05:44.210 --> 05:48.100
来到never get这个页面了

05:49.100 --> 05:54.110
我们准备对它做一个跳转操作

05:54.110 --> 06:02.740
我们写never get

06:02.740 --> 06:03.740
never get

06:03.740 --> 06:05.740
在never get里面的话

06:05.740 --> 06:07.740
我们可以看到的是

06:07.740 --> 06:09.740
我们这边可以写比如说

06:09.740 --> 06:12.370
导航

06:12.370 --> 06:14.370
你可以写上这样一个字体

06:14.370 --> 06:15.370
然后呢

06:15.370 --> 06:18.370
在它的属性里面是要注意一下

06:18.370 --> 06:20.370
一般性我们的属性

06:20.370 --> 06:22.370
我们在官方上面的话

06:22.370 --> 06:24.370
特别是针对于我们的

06:24.370 --> 06:26.370
微信端的小程序端的话

06:26.370 --> 06:28.370
它的属性是有几个特殊的

06:28.370 --> 06:29.370
但是我们

06:29.370 --> 06:31.370
其实有几个我们常用到的

06:31.370 --> 06:32.370
但是有几个特殊的话

06:32.370 --> 06:33.370
我这边先说一下

06:33.370 --> 06:35.370
在taro的官方文档中

06:35.370 --> 06:37.370
这边有一个font

06:37.370 --> 06:39.370
font color

06:39.370 --> 06:41.370
它有一个这个词

06:41.370 --> 06:42.370
这个词呢

06:42.370 --> 06:43.370
我们说一下

06:43.370 --> 06:45.370
在现在的小程序端

06:45.370 --> 06:46.370
它是不起作用

06:46.370 --> 06:48.370
它表示它改变它的标题

06:48.370 --> 06:50.370
状态来颜色

06:50.370 --> 06:51.370
改变这些

06:51.370 --> 06:53.370
并且它只支持的是

06:53.370 --> 06:54.370
0

06:54.370 --> 06:56.370
和我们的

06:56.370 --> 06:57.370
f

06:57.370 --> 06:58.370
进程这两种

06:58.370 --> 07:00.370
但是我们所要知道的是什么

07:00.370 --> 07:02.370
我们的小程序本身

07:02.370 --> 07:04.370
它在状态篮标题篮颜色

07:04.370 --> 07:06.370
不是由它来改变的

07:06.370 --> 07:08.870
对吧

07:08.870 --> 07:09.870
我们的小程序的

07:09.870 --> 07:11.870
这个是在哪儿

07:11.870 --> 07:13.870
是在app.jx里面

07:13.870 --> 07:14.870
在这儿

07:14.870 --> 07:16.870
由它们来改变的

07:16.870 --> 07:17.870
所以这部分

07:17.870 --> 07:19.870
我们需要去知道一下

07:19.870 --> 07:20.870
你如果说你强烈的

07:20.870 --> 07:21.870
你去看

07:21.870 --> 07:23.870
那个taro的官方文档的话

07:23.870 --> 07:24.870
本身告诉你说

07:24.870 --> 07:25.870
这边有个前领色

07:25.870 --> 07:26.870
有个背景色

07:26.870 --> 07:27.870
那么这两个本身

07:27.870 --> 07:29.870
在这上面是不能去作用的

07:29.870 --> 07:30.870
这点需要明确

07:30.870 --> 07:31.870
第二个的话呢

07:31.870 --> 07:33.870
就是导航本身自己呢

07:33.870 --> 07:35.870
它的很多的属性

07:35.870 --> 07:37.870
就和我们的小程序端

07:37.870 --> 07:38.870
保持着一致

07:38.870 --> 07:40.870
小程序端保持的一致

07:40.870 --> 07:41.870
比如说

07:41.870 --> 07:43.870
它有个target

07:43.870 --> 07:44.870
它指的是

07:44.870 --> 07:45.870
你现在跳转

07:45.870 --> 07:47.870
你的目标是在哪儿

07:47.870 --> 07:48.870
我们先介绍一下

07:48.870 --> 07:50.870
target是目标

07:50.870 --> 07:51.870
目标的话呢

07:51.870 --> 07:53.870
小程序一般有两个目标

07:53.870 --> 07:57.950
这是我们前面说到的

07:57.950 --> 07:59.950
第一个是应用内

07:59.950 --> 08:04.060
我们称之为

08:04.060 --> 08:05.060
第二个呢

08:05.060 --> 08:07.060
我们称之为叫做mini program

08:07.060 --> 08:11.650
那么如果说不写它

08:11.650 --> 08:13.650
默认都是应用内

08:13.650 --> 08:14.650
应用内就是

08:14.650 --> 08:16.650
当前小程序内部

08:16.650 --> 08:17.650
如果说你需要

08:17.650 --> 08:19.650
跳转到其他小程序

08:19.650 --> 08:21.650
那你需要在这边写上mini program

08:21.650 --> 08:23.650
那我们写上

08:23.650 --> 08:27.470
写上其他小程序

08:27.470 --> 08:28.470
好我们来看一下

08:28.470 --> 08:32.100
首先我们做应用内

08:32.100 --> 08:33.100
应用内的跳转

08:33.100 --> 08:34.100
这是第一个参数

08:34.100 --> 08:36.100
第二个参数是url

08:36.100 --> 08:38.100
你想跳到哪个页面

08:38.100 --> 08:43.210
这个页面的话

08:43.210 --> 08:45.210
就是根据你当前的路径

08:45.210 --> 08:47.210
我们如果从跟路径出发的话

08:47.210 --> 08:48.210
那就是ok的

08:48.210 --> 08:49.210
然后我们找一下

08:49.210 --> 08:50.210
我们比如说

08:50.210 --> 08:53.210
我们想去到这个Hong页面

08:53.210 --> 08:54.210
这个页面的话

08:54.210 --> 08:55.210
是试图上的一些内容

08:55.210 --> 08:57.210
我们去到这个Hong页面

08:57.210 --> 08:59.210
所以你这边只要是

08:59.210 --> 09:03.210
Peters下的Hong

09:03.210 --> 09:04.210
下的Hong

09:04.210 --> 09:05.210
而这个路径

09:05.210 --> 09:07.210
其实你从哪里拿更舒服呢

09:07.210 --> 09:09.210
你是从app.jaxx里面去拿

09:09.210 --> 09:10.210
这里面都有

09:10.210 --> 09:12.210
对吧你从这里边拿的话

09:12.210 --> 09:13.210
会更舒服

09:13.210 --> 09:14.210
所以我们这样点击一下

09:14.210 --> 09:18.610
然后我们运行一下

09:18.610 --> 09:19.610
导航本身自己

09:19.610 --> 09:20.610
它是没有一个样式的

09:20.610 --> 09:22.610
它不像你现在的一个button

09:22.610 --> 09:24.610
点击以后

09:24.610 --> 09:25.610
我们看到

09:25.610 --> 09:26.610
下面会出现这样一个箭头

09:26.610 --> 09:28.610
它直接会跳转过来

09:28.610 --> 09:29.610
然后我们通过这个箭头

09:29.610 --> 09:31.610
又可以返回过去

09:31.610 --> 09:32.610
那么我们一直强调的是

09:32.610 --> 09:34.610
这个的打开

09:34.610 --> 09:35.610
它是意味着

09:35.610 --> 09:37.610
后面的页面也打开着

09:37.610 --> 09:39.610
只不过背心隐藏了

09:39.610 --> 09:40.610
没有关闭

09:40.610 --> 09:41.610
当我现在点击

09:41.610 --> 09:42.610
这个箭头的时候

09:42.610 --> 09:43.610
其实后面页面

09:43.610 --> 09:45.610
从未激活到激活状态

09:45.610 --> 09:46.610
所以当前页面的

09:46.610 --> 09:47.610
我们的shu

09:47.610 --> 09:48.610
这样一个生命周期

09:48.610 --> 09:50.610
它会被激活

09:50.610 --> 09:51.610
这是我们说的

09:51.610 --> 09:52.610
第一个

09:52.610 --> 09:53.610
就是正常情况下的

09:53.610 --> 09:55.610
我们的两个属性

09:55.610 --> 09:56.610
再有

09:56.610 --> 09:59.610
我们在打开一个页面以后

09:59.610 --> 10:00.610
我们如果想

10:00.610 --> 10:02.610
现在这个页面的跳转方式

10:02.610 --> 10:04.610
是否可以改变

10:04.610 --> 10:05.610
现在默认情况下

10:05.610 --> 10:06.610
我们都是属于

10:06.610 --> 10:08.610
新打开页面

10:08.610 --> 10:09.610
那么我们其实有一个属性

10:09.610 --> 10:10.610
注意哦

10:10.610 --> 10:12.610
它会提示你一个

10:12.610 --> 10:14.610
中间连着的type

10:14.610 --> 10:15.610
我们不要用它这个

10:15.610 --> 10:17.610
我们直接是用到的

10:17.610 --> 10:18.610
是这个属性

10:18.610 --> 10:20.980
你先看

10:20.980 --> 10:21.980
open type

10:21.980 --> 10:22.980
本身自己来指向的

10:22.980 --> 10:23.980
就是所谓的

10:23.980 --> 10:25.980
是一个导航的位置

10:25.980 --> 10:27.980
或者甚至为跳转方向

10:27.980 --> 10:28.980
这个跳转方向有几种呢

10:28.980 --> 10:30.980
我们这边给他说一下

10:30.980 --> 10:39.820
第一种

10:39.820 --> 10:45.390
是我们的nevi gate

10:45.390 --> 10:47.390
就是新打开页面

10:47.390 --> 10:52.780
第二种呢

10:52.780 --> 10:54.780
其实是redirector

10:54.780 --> 10:56.780
它是

10:56.780 --> 10:58.780
叫做什么

10:58.780 --> 11:03.050
重定向

11:03.050 --> 11:04.050
当前页面

11:04.050 --> 11:07.050
第三种是称之为swapper

11:07.050 --> 11:11.510
switch tab

11:11.510 --> 11:13.510
它称之为叫做tabba

11:13.510 --> 11:15.510
导航打开

11:15.510 --> 11:19.530
触摸蓝

11:19.530 --> 11:20.530
打开

11:20.530 --> 11:21.530
还有一个

11:21.530 --> 11:23.530
我们叫做relaunch

11:23.530 --> 11:26.990
relaunch呢

11:26.990 --> 11:27.990
它其实叫做

11:27.990 --> 11:28.990
它是两种型

11:28.990 --> 11:29.990
操作

11:29.990 --> 11:30.990
第一步

11:30.990 --> 11:34.990
它是关闭其他页面

11:34.990 --> 11:37.500
打开

11:37.500 --> 11:39.500
当前页面

11:39.500 --> 11:41.500
它是做两步操作

11:41.500 --> 11:42.500
再有

11:42.500 --> 11:46.500
我们称为nevi gate

11:46.500 --> 11:47.500
back

11:47.500 --> 11:51.500
它叫做导航后的回跳

11:51.500 --> 11:54.500
就是我如果用到的是

11:54.500 --> 11:55.500
nevi gate

11:55.500 --> 11:56.500
这个功能

11:56.500 --> 11:58.500
它打开一个新页面

11:58.500 --> 12:00.500
然后新页面利用nevi gate back

12:00.500 --> 12:01.500
进行回来

12:01.500 --> 12:02.500
是这个结构

12:02.500 --> 12:04.500
因为我们除了点

12:04.500 --> 12:05.500
上面那个箭头以外

12:05.500 --> 12:07.500
我们想点一个按钮

12:07.500 --> 12:08.500
表示返回

12:08.500 --> 12:09.500
或者从程序中

12:09.500 --> 12:10.500
进行返回

12:10.500 --> 12:12.500
我们经常会有这样的概念

12:12.500 --> 12:14.500
那么我们就用的是nevi gate back

12:14.500 --> 12:15.500
来做

12:15.500 --> 12:19.130
它是跳转后的返回

12:19.130 --> 12:21.130
那么既然有跳转后返回

12:21.130 --> 12:22.130
就一定会有一个

12:22.130 --> 12:24.130
就是我们刚才在ppt中

12:24.130 --> 12:25.130
看到的这个词

12:25.130 --> 12:28.130
就是delta

12:28.130 --> 12:29.130
这个词的意思

12:29.130 --> 12:30.130
是告诉我们

12:30.130 --> 12:32.130
你跳返回时候的

12:32.130 --> 12:36.130
你的所谓的

12:36.130 --> 12:37.130
你跳转返回的整个

12:37.130 --> 12:39.130
整个这个深度

12:39.130 --> 12:45.700
或者称之为层次

12:45.700 --> 12:46.700
它就不在这上面

12:46.700 --> 12:48.700
它主要的是在

12:48.700 --> 12:50.700
一旦你有跳返回的话

12:50.700 --> 12:51.700
你要在跳返回上面

12:51.700 --> 12:52.700
设置这个值

12:52.700 --> 12:53.700
待会我们来设

12:53.700 --> 12:54.700
它主要的是

12:54.700 --> 12:57.700
你现在回跳一个一层

12:57.700 --> 12:58.700
还是两层

12:58.700 --> 12:59.700
对吧

12:59.700 --> 13:00.700
它是给的是这个意思

13:00.700 --> 13:02.700
因为我们不断的在

13:02.700 --> 13:04.700
每一个页面都用nevi gate跳转

13:04.700 --> 13:05.700
它会不断的打开

13:05.700 --> 13:08.700
你可能打开两到三个以后

13:08.700 --> 13:09.700
那么你后面的一个操作

13:09.700 --> 13:11.700
到底你想回推到前面

13:11.700 --> 13:12.700
哪里去

13:12.700 --> 13:14.700
还是说把前面的所有关掉

13:14.700 --> 13:16.700
然后重新进行打开

13:16.700 --> 13:17.700
那么这就根据

13:17.700 --> 13:18.700
这两个属性

13:18.700 --> 13:19.700
一个是relaunch

13:19.700 --> 13:23.700
一个是我们的nevi gate back

13:23.700 --> 13:24.700
来操作

13:24.700 --> 13:25.700
nevi gate

13:25.700 --> 13:27.700
它会带上这个delta

13:27.700 --> 13:28.700
是我们所谓的深度

13:28.700 --> 13:29.700
或者层次

13:29.700 --> 13:30.700
好

13:30.700 --> 13:31.700
我们一个来看

13:31.700 --> 13:33.700
首先我们先完成前面这个

13:33.700 --> 13:35.700
就是这是一个正常现象

13:35.700 --> 13:36.700
我们把它写着

13:36.700 --> 13:39.700
然后我复制一下

13:39.700 --> 13:43.700
修改一下下面的

13:43.700 --> 13:44.700
redirector

13:44.700 --> 13:49.510
那我们来看一下

13:49.510 --> 13:53.270
这个的跳转格式

13:53.270 --> 13:54.270
点击

13:54.270 --> 13:56.270
我把这两个名称都重命名一下

13:56.270 --> 13:59.270
我们把它叫做taro导航

13:59.270 --> 14:02.270
这个叫做taro导航的

14:03.270 --> 14:06.270
这里是nevi gate

14:06.270 --> 14:12.990
这个是taro导航的redirector

14:12.990 --> 14:17.540
再来

14:17.540 --> 14:22.710
先点上面这个

14:22.710 --> 14:24.710
上面是taro navigator

14:24.710 --> 14:25.710
新开页面的

14:25.710 --> 14:27.710
再点这个

14:27.710 --> 14:28.710
这个是当前页面

14:28.710 --> 14:30.710
发现没有这个箭头了

14:30.710 --> 14:32.710
它直接把这页面给呈现出来

14:32.710 --> 14:34.710
那就是叫做重定象

14:34.710 --> 14:35.710
我们是这么称出的

14:35.710 --> 14:36.710
好

14:36.710 --> 14:37.710
我们看到了

14:37.710 --> 14:38.710
它都是属于

14:38.710 --> 14:40.710
调用了我们的这两个操作

14:40.710 --> 14:41.710
那么紧接着

14:41.710 --> 14:43.710
我们这个操作

14:43.710 --> 14:45.710
它主要我们其实很简单

14:45.710 --> 14:47.710
我们需要把当前页面

14:47.710 --> 14:48.710
你要跳转

14:48.710 --> 14:49.710
到的这个页面

14:49.710 --> 14:51.710
是属于触摸栏

14:51.710 --> 14:52.710
上面所设定到的

14:52.710 --> 14:54.710
因为我们强调过

14:54.710 --> 14:55.710
触摸栏的设定

14:55.710 --> 14:56.710
跳转

14:56.710 --> 14:58.710
和我们本身页面的打开

14:58.710 --> 15:00.710
它是两个概念

15:00.710 --> 15:01.710
我们本身页面

15:01.710 --> 15:02.710
它是无论是重定象

15:02.710 --> 15:03.710
还是新打开

15:03.710 --> 15:06.710
它都是作为一种打开操作

15:06.710 --> 15:08.710
但是对于我们触摸栏来讲

15:08.710 --> 15:12.710
它是不带参数的页面的切换

15:12.710 --> 15:13.710
是这个逻辑

15:13.710 --> 15:15.710
所以我们在做的过程中

15:15.710 --> 15:17.710
一旦你现在这个

15:17.710 --> 15:18.710
因为我现在页面中

15:18.710 --> 15:19.710
咱们没有去设定

15:19.710 --> 15:21.710
所谓的一个触摸栏

15:21.710 --> 15:23.710
一旦你现在打开的这个页面

15:23.710 --> 15:26.710
在你当初在app.jaxx

15:26.710 --> 15:28.710
所定义的位置上面

15:28.710 --> 15:29.710
在这里面

15:29.710 --> 15:31.710
你做过tabra设定的话

15:31.710 --> 15:33.710
那么你就需要用这样的方式

15:33.710 --> 15:36.710
直接加我们的switchtabra的方式

15:36.710 --> 15:37.710
来进行跳转

15:37.710 --> 15:38.710
再往下

15:38.710 --> 15:41.710
我们的unlunch

15:41.710 --> 15:42.710
unlunch的话

15:42.710 --> 15:44.710
我们需要做两层跳转

15:44.710 --> 15:46.710
它是关闭其他页面

15:46.710 --> 15:48.710
来打开当前页面

15:48.710 --> 15:49.710
就像我们刚才一样

15:49.710 --> 15:51.710
我们刚才现在点击

15:51.710 --> 15:52.710
这个导航的时候

15:52.710 --> 15:53.710
这时候

15:53.710 --> 15:55.710
其实是两个页面被打开了

15:55.710 --> 15:56.710
对吧

15:56.710 --> 15:57.710
然后我现在再点一个按钮的话

15:57.710 --> 15:59.710
它会打开第三个页面

15:59.710 --> 16:00.710
这时候有三个页面打开

16:00.710 --> 16:02.710
但我再有一个页面打开四个

16:02.710 --> 16:04.710
如果四个页面全打开以后

16:04.710 --> 16:05.710
我想再点一下

16:05.710 --> 16:07.710
那么它会把前面四个页面全关掉

16:07.710 --> 16:10.710
lunch是在这个点上进行处理

16:10.710 --> 16:12.710
它并非是

16:12.710 --> 16:14.710
如果你在四个页面打开以后

16:14.710 --> 16:15.710
你用redirector

16:15.710 --> 16:18.710
它只会对于当前第四个页面

16:18.710 --> 16:20.710
进行所谓的重定项

16:20.710 --> 16:21.710
但是前面三个页面

16:21.710 --> 16:22.710
它还是打开着

16:22.710 --> 16:23.710
只是这个时间

16:23.710 --> 16:25.710
你无法再对它操作了

16:25.710 --> 16:26.710
这个是一个

16:26.710 --> 16:28.710
不是特别舒服的一个事

16:28.710 --> 16:29.710
因为内存被占用了

16:29.710 --> 16:31.710
你理解这个逻辑吧

16:31.710 --> 16:32.710
对吧

16:32.710 --> 16:34.710
我们做一个简单的

16:34.710 --> 16:38.540
画图

16:38.540 --> 16:40.540
给大家理解一下这个逻辑

16:40.540 --> 16:41.540
有同学可能

16:41.540 --> 16:42.540
如果不理解的话

16:42.540 --> 16:43.540
它会有一定的误区

16:43.540 --> 16:44.540
它会认为

16:44.540 --> 16:46.540
我不是说重定项了吗

16:46.540 --> 16:48.540
a页面

16:48.540 --> 16:49.540
当你redirector

16:49.540 --> 16:50.540
navigate2的时候

16:50.540 --> 16:51.540
navigate的时候

16:51.540 --> 16:53.540
它打开b页面

16:53.540 --> 16:56.540
你所眼睛所看到的

16:56.540 --> 16:58.540
是你的b页面

16:58.540 --> 17:00.540
但是a页面一直打开着

17:00.540 --> 17:02.540
但是它是有回退方式

17:02.540 --> 17:04.540
能够回去的

17:04.540 --> 17:05.540
当你b页面里面

17:05.540 --> 17:07.540
又是一个navigate链接

17:07.540 --> 17:12.360
你又跳转到了c页面

17:12.360 --> 17:14.360
那么c页面本身

17:14.360 --> 17:16.360
也有这个链接可以回

17:16.360 --> 17:18.360
此时你眼睛能看到的

17:18.360 --> 17:20.360
是c页面

17:20.360 --> 17:22.360
然后在c页面中

17:22.360 --> 17:25.360
此时你用了一个launch

17:25.360 --> 17:30.400
我就这么写一下了

17:30.400 --> 17:31.400
你用个launch

17:31.400 --> 17:32.400
你这时候

17:32.400 --> 17:33.400
或者说你不用launch

17:33.400 --> 17:35.400
我们先用redirector来做

17:35.400 --> 17:37.400
你这时候用了个redirector

17:37.400 --> 17:38.400
叫做重定项

17:38.400 --> 17:41.400
这时候你打开了一个d页面

17:41.400 --> 17:42.400
那么你注意了

17:42.400 --> 17:43.400
你的d页面

17:43.400 --> 17:46.400
虽然在本页面打开的

17:46.400 --> 17:48.400
但是此时

17:48.400 --> 17:50.400
你已经没有这个按钮了

17:50.400 --> 17:52.400
因为它是当前页面打开以后

17:52.400 --> 17:54.400
那么你前面两个怎么办

17:54.400 --> 17:56.400
是这个逻辑

17:56.400 --> 17:57.400
并且

17:57.400 --> 17:58.400
一旦你在当前页面

17:58.400 --> 17:59.400
做更多的操作

17:59.400 --> 18:01.400
其实你不用回到前面页面

18:01.400 --> 18:02.400
所以我们的做法

18:02.400 --> 18:03.400
应该是把前面两个页面

18:03.400 --> 18:04.400
全关掉它

18:04.400 --> 18:06.400
你就得用launch

18:06.400 --> 18:07.400
我就写个ar了

18:07.400 --> 18:08.400
你用launch的方式

18:08.400 --> 18:09.400
把前面关了

18:09.400 --> 18:10.400
就在当前页面

18:10.400 --> 18:11.400
直接看就可以了

18:11.400 --> 18:13.400
你不需要再把前面开着

18:13.400 --> 18:14.400
因为没有用了

18:14.400 --> 18:15.400
是这个逻辑

18:15.400 --> 18:16.400
理解吧

18:16.400 --> 18:18.400
launch是在这一层上面的

18:18.400 --> 18:19.400
好

18:19.400 --> 18:20.400
那么这样的话

18:20.400 --> 18:21.400
我们可以

18:21.400 --> 18:23.400
做一个简单的

18:23.400 --> 18:24.400
按钮

18:24.400 --> 18:25.400
给大家看一下

18:25.400 --> 18:27.400
它的一个平凡跳转的情况

18:27.400 --> 18:29.400
我们跳转到home

18:29.400 --> 18:30.400
对吧

18:30.400 --> 18:31.400
然后我们在home上面

18:31.400 --> 18:33.400
再做一层跳转

18:33.400 --> 18:35.400
我们把它复制一下

18:35.400 --> 18:41.880
也做never get的跳转

18:41.880 --> 18:43.880
我们也做的是never get的跳转

18:43.880 --> 18:44.880
然后把它进行

18:44.880 --> 18:47.880
所谓的放到home去

18:47.880 --> 18:51.770
在home的最上面

18:51.770 --> 18:53.770
我们再做一个跳转

18:53.770 --> 18:55.770
它在跳转到哪里呢

18:55.770 --> 18:56.770
mypader吃

18:56.770 --> 19:03.860
mypader吃

19:03.860 --> 19:05.860
然后到mypader页面的时候

19:05.860 --> 19:06.860
我们到这边来

19:06.860 --> 19:07.860
它还有跳转

19:07.860 --> 19:12.740
我们把它再拿一下

19:12.740 --> 19:14.740
此时我们跑到

19:14.740 --> 19:16.740
我们的mypader里面

19:17.740 --> 19:18.740
然后这里面

19:18.740 --> 19:19.740
反正我觉得有好几个页面

19:19.740 --> 19:20.740
对吧

19:20.740 --> 19:21.740
在这

19:21.740 --> 19:24.740
我们去做我们现在的跳转模型

19:24.740 --> 19:27.740
那此时你去做一个我们的launch

19:27.740 --> 19:31.180
把这个字改了

19:31.180 --> 19:33.180
或者做一个redirector

19:33.180 --> 19:42.580
redirector

19:42.580 --> 19:43.580
做成这个字

19:43.580 --> 19:44.580
redirector

19:44.580 --> 19:46.580
然后保存

19:46.580 --> 19:47.580
保存以后的话

19:47.580 --> 19:48.580
我们来看一下

19:48.580 --> 19:51.580
整个跳转的一个形式

19:51.580 --> 19:53.580
是什么样的

19:53.580 --> 19:56.580
首先第一层点击

19:56.580 --> 19:58.580
跳到了home

19:58.580 --> 20:00.580
home再点击

20:00.580 --> 20:04.580
这时候去到了我们的

20:04.580 --> 20:05.580
mypader

20:05.580 --> 20:06.580
mypader

20:06.580 --> 20:07.580
这个按钮名称不对

20:07.580 --> 20:08.580
我们把它名称改一下

20:08.580 --> 20:10.580
不然大家看起来

20:10.580 --> 20:11.580
我们这个时候

20:11.580 --> 20:13.580
我们把它名称改成redirector

20:13.580 --> 20:15.580
它去到了我们的

20:15.580 --> 20:17.580
它再跳一个

20:17.580 --> 20:19.580
mypader不能跳自己对吧

20:19.580 --> 20:20.580
mypader我们说

20:20.580 --> 20:22.580
再给它一个

20:23.580 --> 20:24.580
txtpager

20:24.580 --> 20:30.190
我们这边有这个页面

20:30.190 --> 20:32.760
txtpager

20:32.760 --> 20:34.760
好我们再来看一下

20:34.760 --> 20:36.760
这个我们名称改了

20:36.760 --> 20:40.970
我们改成的是redirector了

20:40.970 --> 20:42.970
首先我们点击第一个按钮

20:42.970 --> 20:43.970
让它跳过来

20:43.970 --> 20:44.970
这时候跳到了

20:44.970 --> 20:46.970
此时打开了两个页面

20:46.970 --> 20:47.970
再点下去

20:47.970 --> 20:49.970
此时打开了三个页面

20:49.970 --> 20:50.970
对吧

20:50.970 --> 20:51.970
redirector跳

20:51.970 --> 20:53.970
注意这个时候

20:53.970 --> 20:55.970
这个时候的你的跳转

20:55.970 --> 20:56.970
注意

20:56.970 --> 20:57.970
它本身来说

20:57.970 --> 20:58.970
上面这个按钮

20:58.970 --> 21:00.970
和你现在的这个效果

21:00.970 --> 21:01.970
是不匹配的

21:01.970 --> 21:02.970
因为你的这个时候

21:02.970 --> 21:03.970
你的跳转

21:03.970 --> 21:05.970
虽然它出了这个

21:05.970 --> 21:06.970
但是我们讲一下

21:06.970 --> 21:08.970
本身的这个内容

21:08.970 --> 21:09.970
你的回退

21:09.970 --> 21:10.970
它的navigator的跳转

21:10.970 --> 21:11.970
和redirector

21:11.970 --> 21:12.970
你看到

21:12.970 --> 21:14.970
它其实这个效果

21:14.970 --> 21:15.970
是不是你要的

21:15.970 --> 21:17.970
我要的是在当前页面

21:17.970 --> 21:18.970
全部重新打开

21:18.970 --> 21:19.970
所以这时候

21:19.970 --> 21:21.970
你的应该的逻辑

21:21.970 --> 21:23.970
应该使用的是launch

21:23.970 --> 21:25.970
我们把launch去改一下

21:25.970 --> 21:26.970
注意

21:26.970 --> 21:27.970
这个格式的话

21:27.970 --> 21:28.970
它会把你

21:28.970 --> 21:30.970
因为你有一个框在外面

21:30.970 --> 21:33.970
但是在我们其他的几个小程序里面

21:33.970 --> 21:34.970
特别是在于

21:34.970 --> 21:36.970
百度的和这种上面的话

21:36.970 --> 21:37.970
那么这种跳转

21:37.970 --> 21:38.970
也会受到影响

21:38.970 --> 21:40.970
有些有有些没有

21:40.970 --> 21:41.970
我们与其这样

21:41.970 --> 21:43.970
我们还不如我们在这上面

21:43.970 --> 21:47.970
我们使用我们的launch

21:47.970 --> 21:49.970
用这个功能来做

21:49.970 --> 21:52.660
好

21:52.660 --> 21:53.660
你再来看一下

21:53.660 --> 21:55.660
页面的效果格式

21:55.660 --> 21:57.660
它那个其实是不稳定的

21:57.660 --> 21:58.660
也就是说

21:58.660 --> 21:59.660
小程序有可能这样

21:59.660 --> 22:01.660
有可能在我们的

22:01.660 --> 22:02.660
支付微信小程序上

22:02.660 --> 22:04.660
百度小程序和支付包小程序

22:04.660 --> 22:06.660
它的显示是不一样的

22:06.660 --> 22:08.660
但是它的那个redirector

22:08.660 --> 22:10.660
它和我们现在的整个页面

22:10.660 --> 22:11.660
已经或者navigate

22:11.660 --> 22:13.660
已经形成没有区别

22:13.660 --> 22:14.660
那么你看

22:14.660 --> 22:15.660
多打开以后

22:15.660 --> 22:16.660
我这边用launch的方式

22:16.660 --> 22:17.660
那就对了

22:17.660 --> 22:19.660
一点没有了

22:19.660 --> 22:20.660
没有的意味着

22:20.660 --> 22:22.660
它把前面都给关闭掉了

22:22.660 --> 22:23.660
然后这时候

22:23.660 --> 22:26.660
它才会出当前就一个页面了

22:26.660 --> 22:28.660
记住这个逻辑

22:28.660 --> 22:29.660
那个前面的

22:29.660 --> 22:32.660
所以我们再打开多个页面的时候

22:32.660 --> 22:33.660
再强调一点

22:33.660 --> 22:35.660
再打开多个页面的时候

22:35.660 --> 22:37.660
如果你不想再返回了

22:37.660 --> 22:40.660
你这时候就用我们的relaunch

22:40.660 --> 22:41.660
然后完成

22:41.660 --> 22:43.660
把其他页面关闭

22:43.660 --> 22:44.660
把自己再打开

22:44.660 --> 22:46.660
这个过程

22:46.660 --> 22:47.660
那么如果单页面

22:47.660 --> 22:48.660
进行跳转的话

22:48.660 --> 22:49.660
redirector

22:49.660 --> 22:51.660
如果你非是单页面跳转

22:51.660 --> 22:53.660
那么你就会形成一个

22:53.660 --> 22:55.660
你在多页面结构下面

22:55.660 --> 22:57.660
redirector和navigator

22:57.660 --> 22:59.660
它其实是一样效果的情况

22:59.660 --> 23:02.660
这个是并不是你所需要的

23:02.660 --> 23:03.660
对吧

23:03.660 --> 23:04.660
然后同时我们也强调了

23:04.660 --> 23:06.660
这个在不同小程序上

23:06.660 --> 23:07.660
它的呈现是不一样

23:07.660 --> 23:09.660
因为你要用到的是redirector

23:09.660 --> 23:11.660
但是本身你的页面跳转

23:11.660 --> 23:13.660
方式又变成了navigator

23:13.660 --> 23:14.660
对吧

23:14.660 --> 23:15.660
那么这个需要注意一下

23:15.660 --> 23:17.660
所以我们把open type的这个词

23:17.660 --> 23:18.660
说了一下

23:18.660 --> 23:19.660
relaunch

23:19.660 --> 23:21.660
同时我们现在再来看

23:21.660 --> 23:23.660
我们现在回到我们

23:23.660 --> 23:25.660
一起跳转的上面

23:25.660 --> 23:27.660
我们刚刚所谓的一个操作

23:27.660 --> 23:29.660
我们第一个页面是我们的

23:29.660 --> 23:33.620
我们回来

23:33.620 --> 23:34.620
我们第一个页面操作的是

23:34.620 --> 23:36.620
我们的navigator country

23:36.620 --> 23:37.620
对吧

23:37.620 --> 23:39.620
我们在navigator country上面

23:39.620 --> 23:41.620
我们跳转到了第二个页面

23:41.620 --> 23:43.620
我们跳转到第二个页面

23:43.620 --> 23:45.620
第二个页面是我们的

23:45.620 --> 23:46.620
什么

23:46.620 --> 23:47.620
我们要做一个回跳

23:47.620 --> 23:48.620
Hong页面

23:48.620 --> 23:49.620
所以我们在Hong上面

23:49.620 --> 23:51.620
再做一个连接

23:51.620 --> 23:53.620
我们在Hong上面

23:53.620 --> 23:55.620
在下面再做一个连接

23:55.620 --> 24:08.340
我们称为回退

24:08.340 --> 24:13.500
回退按钮

24:13.500 --> 24:15.500
整个回退按钮的话

24:15.500 --> 24:17.500
这一边的话

24:17.500 --> 24:19.500
我们写上

24:19.500 --> 24:21.500
我们现在的一个

24:21.500 --> 24:22.500
target不写了

24:22.500 --> 24:24.500
self是自己写上open type

24:24.500 --> 24:29.570
写上open type

24:29.570 --> 24:30.570
open type里面

24:30.570 --> 24:32.570
首先给到的是

24:32.570 --> 24:35.570
我们的navigate back

24:35.570 --> 24:36.570
就做这个操作

24:36.570 --> 24:41.800
那我们来看一下

24:41.800 --> 24:42.800
首先

24:42.800 --> 24:44.800
navigator跳过去

24:44.800 --> 24:48.370
这时候你点它

24:48.370 --> 24:49.370
会去到其他地方

24:49.370 --> 24:50.370
我们点回退

24:50.370 --> 24:52.370
和你点上面那个箭头

24:52.370 --> 24:54.370
是一样的功能

24:54.370 --> 24:55.370
它回来了

24:55.370 --> 24:56.370
对吧

24:56.370 --> 24:57.370
这个逻辑

24:57.370 --> 24:58.370
这个很简单吧

24:58.370 --> 24:59.370
这个逻辑回来了

24:59.370 --> 25:01.370
同时我们说

25:01.370 --> 25:03.370
你现在还可以在我们后面的

25:03.370 --> 25:05.370
你再往后再做一层

25:05.370 --> 25:07.370
就是它再跳一急

25:07.370 --> 25:08.370
走

25:08.370 --> 25:09.370
它再跳到哪里

25:09.370 --> 25:11.370
我们看到这边写的是my pager

25:11.370 --> 25:13.370
所以我们去到my pager去

25:13.370 --> 25:18.560
在my pager上面

25:18.560 --> 25:20.560
我们也点回退按钮

25:20.560 --> 25:21.560
那我们再来看一下

25:21.560 --> 25:24.560
也就是它打开两层以后的回退

25:24.560 --> 25:26.560
点击第一层

25:26.560 --> 25:28.560
打开了

25:28.560 --> 25:29.560
再点第二层

25:29.560 --> 25:30.560
打开了

25:30.560 --> 25:32.560
此时回退

25:32.560 --> 25:34.560
回退到上一层

25:34.560 --> 25:35.560
咱们看到吗

25:35.560 --> 25:37.560
它回退到上一层的结构

25:37.560 --> 25:38.560
ok

25:38.560 --> 25:39.560
那么这是我们说到的

25:39.560 --> 25:40.560
就是这个

25:40.560 --> 25:42.560
一个叫做navigate

25:42.560 --> 25:44.560
navigate back的功能

25:44.560 --> 25:46.560
回退还设计到一个词

25:46.560 --> 25:48.560
叫做delta

25:48.560 --> 25:50.560
delta的话呢

25:50.560 --> 25:51.560
它主要是回对层次

25:51.560 --> 25:53.560
默认值是1

25:53.560 --> 25:55.560
默认值是1

25:55.560 --> 25:56.560
这个

25:56.560 --> 25:58.560
那么我们怎么样给它

25:58.560 --> 26:00.560
更多的比如说我回2

26:00.560 --> 26:02.560
你来看一下这个情况

26:02.560 --> 26:03.560
我们给一个2

26:03.560 --> 26:09.110
它是在两层上面

26:09.110 --> 26:11.110
这边是自付串

26:11.110 --> 26:17.880
我们看一下

26:17.880 --> 26:18.880
它给我暴力

26:19.880 --> 26:21.880
delta

26:21.880 --> 26:23.880
这是我们的一个属性

26:23.880 --> 26:27.380
属性上面的话呢

26:27.380 --> 26:29.380
这个词有一点

26:29.380 --> 26:31.380
就是对于我们的整个

26:31.380 --> 26:32.380
这个

26:32.380 --> 26:34.380
那个tera来讲的话呢

26:34.380 --> 26:36.380
它是需要这上面都带上

26:36.380 --> 26:38.380
自付串结构的

26:38.380 --> 26:40.380
但是对于我们的小程序来讲

26:40.380 --> 26:41.380
这个词呢

26:41.380 --> 26:43.380
它需要的是一个

26:43.380 --> 26:45.380
那个number leasing

26:45.380 --> 26:47.380
那我们看一下

26:47.380 --> 26:49.380
去自动的进行回转

26:49.380 --> 26:51.380
它用自付串的方式直接自己转

26:51.380 --> 26:53.380
小程序是有带有这功能

26:53.380 --> 26:55.380
我们不用去做这个

26:55.380 --> 26:57.380
我们现在看一下小程序是否能完成

26:57.380 --> 26:59.380
这个自己的回转

26:59.380 --> 27:00.380
首先点一下

27:00.380 --> 27:01.380
点1级

27:01.380 --> 27:03.380
跳转第1个页面

27:03.380 --> 27:05.380
点第2级

27:05.380 --> 27:06.380
跳转第2个对不对

27:06.380 --> 27:07.380
现在打开了几个

27:07.380 --> 27:08.380
3个

27:08.380 --> 27:09.380
我要回退的时候

27:09.380 --> 27:10.380
我们看到

27:10.380 --> 27:12.380
这边给了一个自付串的2

27:12.380 --> 27:13.380
小程序number数据

27:13.380 --> 27:14.380
它会自行完成

27:14.380 --> 27:15.380
转换

27:15.380 --> 27:16.380
我们来看一下

27:16.380 --> 27:17.380
点击

27:17.380 --> 27:18.380
它回到哪里去

27:18.380 --> 27:20.380
回到我的第1页面来了

27:20.380 --> 27:21.380
对不对

27:21.380 --> 27:24.380
这个就是它的回退的一个层次

27:24.380 --> 27:26.380
我们也可以把它理解成叫

27:26.380 --> 27:27.380
深度

27:27.380 --> 27:29.380
这是在当前

27:29.380 --> 27:30.380
我们的inune

27:30.380 --> 27:32.380
所要做的一个非常简单

27:32.380 --> 27:33.380
或者说

27:33.380 --> 27:36.380
比较快速的一种跳转模型

27:36.380 --> 27:37.380
ok

27:37.380 --> 27:39.380
紧接着我们下面再来说一下

27:39.380 --> 27:40.380
小程序

27:40.380 --> 27:42.380
本身自己的这4个功能

27:42.380 --> 27:43.380
我们刚才都用到了

27:43.380 --> 27:45.380
那么它其实也能跳转

27:45.380 --> 27:46.380
其他小程序

27:46.380 --> 27:47.380
这个的话

27:47.380 --> 27:48.380
我们也在刚开始讲

27:48.380 --> 27:49.380
这堂课的时候

27:49.380 --> 27:50.380
我们就说过

27:50.380 --> 27:52.380
它其实有受到微信的

27:52.380 --> 27:54.380
一个跳转的功能的限制

27:54.380 --> 27:55.380
那我们这边

27:55.380 --> 27:57.380
给大家去介绍一下

27:57.380 --> 28:00.380
大家也可以在安卓记上去测试

28:00.380 --> 28:05.040
安卓记上是肯定没问题的

28:05.040 --> 28:06.040
navigator

28:06.040 --> 28:10.950
我们写上

28:10.950 --> 28:12.950
我们在这边写上

28:12.950 --> 28:14.950
pocket

28:14.950 --> 28:18.950
写上mini program

28:18.950 --> 28:20.950
你可以写上这个词

28:20.950 --> 28:21.950
然后

28:21.950 --> 28:23.950
这个就代表跳转其他小程序

28:23.950 --> 28:25.950
它需要的一股脑的参数

28:25.950 --> 28:26.950
有几个

28:26.950 --> 28:27.950
第一个

28:27.950 --> 28:28.950
它需要这个参数

28:28.950 --> 28:30.950
appid

28:30.950 --> 28:32.950
appid是每个小程序特有的

28:32.950 --> 28:33.950
并且这个id

28:33.950 --> 28:34.950
你一定要让它

28:34.950 --> 28:35.950
形成一个真实有效id

28:35.950 --> 28:36.950
你不能说

28:36.950 --> 28:38.950
我自己做个测试id进行跳转

28:38.950 --> 28:39.950
那不行

28:39.950 --> 28:40.950
那么我们写一下

28:40.950 --> 28:41.950
跳

28:41.950 --> 28:42.950
转

28:42.950 --> 28:43.950
其他

28:43.950 --> 28:45.950
小程序的

28:45.950 --> 28:46.950
参数

28:46.950 --> 28:50.780
设定

28:50.780 --> 28:52.780
你要给一个id

28:52.780 --> 28:54.780
我现在的小程序

28:54.780 --> 28:55.780
我们在这边

28:55.780 --> 28:57.780
由于我们是本地化的操作

28:57.780 --> 28:58.780
所以我这边

28:58.780 --> 28:59.780
咱们看到

28:59.780 --> 29:01.780
我可以给一个我自己的id

29:01.780 --> 29:03.780
也可以给一个测试id

29:03.780 --> 29:05.780
那我可以把这个id给过来

29:05.780 --> 29:06.780
当然自己跳自己

29:06.780 --> 29:07.780
那肯定不行

29:07.780 --> 29:08.780
你把它id给过来

29:08.780 --> 29:10.780
它会进行服务器转发的时候

29:10.780 --> 29:12.780
去找到这个id

29:12.780 --> 29:13.780
第二个

29:13.780 --> 29:14.780
找到id以后

29:14.780 --> 29:15.780
你后面还得给第二个参数

29:15.780 --> 29:17.780
就是你的pass

29:17.780 --> 29:19.780
你想把它定位到你页面的哪里去

29:19.780 --> 29:20.780
也就是

29:20.780 --> 29:22.780
当前这个id

29:22.780 --> 29:24.780
所对应小程序的页面

29:24.780 --> 29:26.780
那么一般性

29:26.780 --> 29:28.780
我们一般性所对应的

29:28.780 --> 29:29.780
都是它的起始页面

29:29.780 --> 29:30.780
也就是所谓的

29:30.780 --> 29:32.780
而入口页面

29:32.780 --> 29:34.780
我比如说我写一下

29:34.780 --> 29:35.780
Peters下的

29:35.780 --> 29:36.780
我们的Hong

29:36.780 --> 29:38.780
你说能跳转其他页面吗

29:38.780 --> 29:39.780
可以

29:39.780 --> 29:40.780
但是这个页面

29:40.780 --> 29:42.780
你得根据它的本身的参数来

29:42.780 --> 29:44.780
如果当前页面需要参数的话

29:44.780 --> 29:45.780
你还得带参过去

29:45.780 --> 29:47.780
因为它本身页面有业务逻辑的概念

29:47.780 --> 29:48.780
是吧

29:48.780 --> 29:49.780
然后这样好了以后的话

29:49.780 --> 29:50.780
那么我们后面

29:50.780 --> 29:53.780
还会有一些额外的参数数据

29:53.780 --> 29:54.780
我们说

29:54.780 --> 29:56.780
比如说我们有个acture date

29:56.780 --> 29:58.780
我们有个acture date

29:58.780 --> 30:00.780
就是你可以像

30:00.780 --> 30:02.780
这个页面传送数据的方式

30:02.780 --> 30:03.780
就是这样写

30:03.780 --> 30:05.780
acture date

30:05.780 --> 30:09.090
你可以这样写acture date

30:09.090 --> 30:11.090
然后你给它传参

30:11.090 --> 30:12.090
这里边的结构

30:12.090 --> 30:14.090
是一个json结构

30:14.090 --> 30:15.090
所以一般性我们

30:15.090 --> 30:16.090
这个时候

30:16.090 --> 30:17.090
你都可以用我们的

30:17.090 --> 30:19.090
比如说一个变量的方式

30:19.090 --> 30:24.100
this.stater.

30:24.100 --> 30:26.100
我们里面写上

30:27.100 --> 30:28.100
一个怎么说

30:28.100 --> 30:30.100
就是一个变量名吧

30:30.100 --> 30:32.100
就是我们称之为

30:32.100 --> 30:35.100
acture date

30:35.100 --> 30:41.340
acture date数据

30:41.340 --> 30:42.340
这样

30:42.340 --> 30:43.340
你去把这个数据写在

30:43.340 --> 30:44.340
它意味着

30:44.340 --> 30:46.340
你可以把这个数据的值

30:46.340 --> 30:47.340
它里面是个json格式

30:47.340 --> 30:48.340
那么这个数据

30:48.340 --> 30:51.340
它可以在你的新的

30:51.340 --> 30:53.340
这个小程序的

30:53.340 --> 30:54.340
比如说我现在指定的

30:54.340 --> 30:55.340
这个后页面的

30:55.340 --> 30:56.340
哪里呢

30:56.340 --> 30:58.340
它的生命周期里面

30:58.340 --> 30:59.340
会设计到

30:59.340 --> 31:00.340
获取到

31:00.340 --> 31:01.340
比如说on show

31:01.340 --> 31:02.340
你可以在on show中

31:02.340 --> 31:03.340
去获取这个值

31:03.340 --> 31:04.340
ok吧

31:04.340 --> 31:05.340
是这个逻辑

31:05.340 --> 31:07.340
那么你当你这样做好以后的话

31:07.340 --> 31:08.340
它就跳过去了

31:08.340 --> 31:11.340
这个是最简单的一种格式

31:11.340 --> 31:13.340
也没有所谓的复杂的

31:13.340 --> 31:14.340
那么当然

31:14.340 --> 31:15.340
这边额外的说一下

31:15.340 --> 31:18.340
就是你跳转到新小程序以后

31:18.340 --> 31:20.340
那么本身来讲

31:20.340 --> 31:21.340
在当前

31:21.340 --> 31:23.340
我的本身的这个小程序里面

31:23.340 --> 31:25.340
我们会有一个

31:25.340 --> 31:26.340
三参数的

31:26.340 --> 31:28.340
事件回调操作

31:28.340 --> 31:29.340
有三参数的

31:29.340 --> 31:31.340
事件回调操作

31:31.340 --> 31:32.340
我们在这里

31:32.340 --> 31:34.340
我们写一个什么呢

31:34.340 --> 31:35.340
微信小程序

31:35.340 --> 31:36.340
本身自己是有一个

31:36.340 --> 31:37.340
bound success

31:37.340 --> 31:38.340
bound file

31:38.340 --> 31:39.340
跟bound complete

31:39.340 --> 31:40.340
但是我们可以

31:40.340 --> 31:41.340
直接在这边写成什么

31:41.340 --> 31:42.340
我们的事件

31:42.340 --> 31:44.340
比如说on

31:44.340 --> 31:45.340
你可以写上

31:45.340 --> 31:47.780
什么

31:47.780 --> 31:51.660
success

31:51.660 --> 31:52.660
你可以这样写

31:52.660 --> 31:53.660
unsuccess

31:54.660 --> 31:55.660
第二

31:55.660 --> 32:01.150
我们这边写上on file

32:01.150 --> 32:07.770
再往下写的是on complete

32:07.770 --> 32:08.770
这三个属性

32:08.770 --> 32:09.770
三个属性

32:09.770 --> 32:11.770
分别对应三个事件

32:11.770 --> 32:13.770
它是属于你跳转过去

32:13.770 --> 32:14.770
成功以后

32:14.770 --> 32:15.770
会掉去这个事件

32:15.770 --> 32:16.770
一旦失败了

32:16.770 --> 32:17.770
会掉这个事件

32:17.770 --> 32:18.770
无论你是否执行

32:18.770 --> 32:19.770
成功和失败

32:19.770 --> 32:21.770
它都会做一个完成事件

32:21.770 --> 32:22.770
这三个事件

32:22.770 --> 32:24.770
我就在不在这里面去做了

32:24.770 --> 32:25.770
那么

32:25.770 --> 32:26.770
微信本身自己

32:26.770 --> 32:27.770
如果你在微信中

32:27.770 --> 32:28.770
写这个事情的话

32:28.770 --> 32:30.770
你只要把on改成bound

32:30.770 --> 32:31.770
就可以了

32:31.770 --> 32:33.770
是这个格式

32:34.770 --> 32:35.770
那么这边的话

32:35.770 --> 32:36.770
由于我没有一个

32:36.770 --> 32:37.770
我不能说我自己跳自己

32:37.770 --> 32:38.770
这时候是

32:38.770 --> 32:39.770
跳自己的话

32:39.770 --> 32:41.770
这个你看它能不能行

32:41.770 --> 32:43.770
我把它这边写一下

32:43.770 --> 32:44.770
我说

32:44.770 --> 32:45.770
跳转自己

32:45.770 --> 32:47.770
跳转其他小程序

32:47.770 --> 32:53.090
去这样说

32:53.090 --> 32:56.460
但是它跳的id是我自己

32:56.460 --> 32:58.460
所以你看一下

32:58.460 --> 33:00.460
有反应吗

33:00.460 --> 33:02.460
没有

33:02.460 --> 33:03.460
所以这个上面

33:03.460 --> 33:04.460
咱们需要知道一下

33:04.460 --> 33:05.460
就可以了

33:05.460 --> 33:07.460
小程序本身的跳转来说

33:07.460 --> 33:10.460
而且我现在是属于我们的模拟器

33:10.460 --> 33:12.460
模拟器本身自己也不会进行跳转

33:12.460 --> 33:14.460
所以这种方式

33:14.460 --> 33:16.460
其实在我们生活中是哪里用到呢

33:16.460 --> 33:19.460
就是我们小程序可以做一个会总页

33:19.460 --> 33:20.460
做个会总页

33:20.460 --> 33:21.460
比如说我见过的

33:21.460 --> 33:23.460
有一些游戏的页面

33:23.460 --> 33:25.460
比如说这是个游戏列表

33:25.460 --> 33:27.460
当你只要关注这个游戏列表

33:27.460 --> 33:29.460
进行收藏以后的话

33:29.460 --> 33:30.460
你只要看到里面

33:30.460 --> 33:31.460
某一个游戏

33:31.460 --> 33:32.460
你点击一下

33:32.460 --> 33:35.460
你会跳到这个游戏的小程序页面去

33:35.460 --> 33:36.460
是这样的一个过程

33:36.460 --> 33:38.460
那么当你完好以后

33:38.460 --> 33:39.460
你想把这个关了

33:39.460 --> 33:40.460
那么它其实小程序

33:40.460 --> 33:42.460
才可以再跳回来

33:42.460 --> 33:44.460
这是我们所谓的一个

33:44.460 --> 33:47.460
跳转过程中所涉及到的

33:47.460 --> 33:49.460
其他小程序的格式

33:49.460 --> 33:51.460
但是永远还强调一点

33:51.460 --> 33:52.460
小程序的跳转

33:52.460 --> 33:54.460
除了自己和其他小程序外

33:54.460 --> 33:57.460
你不可以向外往进行跳转

33:57.460 --> 33:59.460
这是非常强调的一点

33:59.460 --> 34:00.460
如果你在往外跳的话

34:00.460 --> 34:01.460
那这个小程序

34:01.460 --> 34:04.460
就没有它的一个安全性了

34:04.460 --> 34:06.460
因为本身自己很简单

34:06.460 --> 34:07.460
你也拿不到任何的链接

34:07.460 --> 34:08.460
你也拿不到数据

34:08.460 --> 34:09.460
本身是在自己里面玩

34:09.460 --> 34:11.460
所以它的话这是安全的

34:11.460 --> 34:13.460
然后小程序倒小程序

34:13.460 --> 34:15.460
小程序本身的申请和操作

34:15.460 --> 34:16.460
你都是离不开

34:16.460 --> 34:18.460
我们现在的微信的

34:18.460 --> 34:19.460
穿越的

34:19.460 --> 34:20.460
微信本身自己里面

34:20.460 --> 34:21.460
会对它进行安全防御

34:21.460 --> 34:24.460
所以的话你本身自己也是安全的

34:24.460 --> 34:26.460
但是你在跳到外面去

34:26.460 --> 34:27.460
我自个儿做一个网站

34:27.460 --> 34:28.460
自己做一个APP

34:28.460 --> 34:29.460
自己做一个

34:29.460 --> 34:31.460
任何的一个A页面

34:31.460 --> 34:32.460
你跳过去以后

34:32.460 --> 34:34.460
那小程序本身自己的安全性就没有了

34:34.460 --> 34:35.460
对吧

34:35.460 --> 34:37.460
我们所谓的什么钓鱼网站

34:37.460 --> 34:39.460
或者说是其他的一些

34:39.460 --> 34:41.460
反正不合法的一些的话

34:41.460 --> 34:42.460
我们都可以去了

34:42.460 --> 34:43.460
那这个的话

34:43.460 --> 34:45.460
小程序就非常不安全了

34:45.460 --> 34:46.460
并且我可以通过你的数据过去

34:46.460 --> 34:47.460
还能反知道

34:47.460 --> 34:49.460
你这边里面是怎么样的一个结构

34:49.460 --> 34:50.460
这种的话

34:50.460 --> 34:51.460
抓包操作的话

34:51.460 --> 34:53.460
会非常的渐变

34:53.460 --> 34:55.460
所以我们讲小程序不允许

34:55.460 --> 34:56.460
你去做这个事情

34:56.460 --> 34:57.460
所以这个就是

34:57.460 --> 34:58.460
我们导航的

34:58.460 --> 35:00.460
组建的一个运用

35:00.460 --> 35:01.460
这边我们主要是

35:01.460 --> 35:03.460
给他做一个基础介绍

35:03.460 --> 35:04.460
和作为一个远程

35:04.460 --> 35:06.460
其他小程序的一个调用规则

35:06.460 --> 35:08.460
但是受到我们的一个微信端的

35:08.460 --> 35:10.460
和我们现在的

35:10.460 --> 35:12.460
不同时移动端的

35:12.460 --> 35:14.460
比如说苹果和安卓端的影响

35:14.460 --> 35:16.460
我们可能这个操作

35:16.460 --> 35:17.460
不一定能够完全适用

35:17.460 --> 35:19.460
但是与法是存在着的

35:19.460 --> 35:20.460
好吧

35:20.460 --> 35:22.460
那我这边就把这个介绍一下

35:22.460 --> 35:24.460
这也就是我们现在的导航的部分

