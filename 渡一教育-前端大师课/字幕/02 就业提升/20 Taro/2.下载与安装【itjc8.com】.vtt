WEBVTT

00:00.240 --> 00:03.240
好 我们这节课继续讲解我们的title

00:03.240 --> 00:05.240
上节课我们做了个简单的介绍

00:05.240 --> 00:09.240
这节课我们讲一下它的下载与安装

00:09.240 --> 00:11.240
自己我们想一下

00:11.240 --> 00:14.240
它是基于我们的Noder的

00:14.240 --> 00:19.240
也就是说它需要在Noder环境中进行开发

00:19.240 --> 00:23.240
Noder的我们的环境版本一般要大于8.0

00:23.240 --> 00:26.240
这是它所要求的一个

00:26.240 --> 00:30.240
第二个 它的安装可以通过CLI的这样的工具来安装

00:30.240 --> 00:35.240
那么安装的话 我们使用的命令可以是我们的NPN 玩暗

00:35.240 --> 00:37.240
这两个都可以

00:37.240 --> 00:40.240
那么全局安装 我们的TargetCLI

00:40.240 --> 00:43.240
CLI我们知道 脚手架

00:43.240 --> 00:45.240
那么通过这个脚手架

00:45.240 --> 00:50.240
我们可以很好的去部出你现在的整个界面

00:50.240 --> 00:52.240
那么我们这边写了一下

00:52.240 --> 00:57.240
待会我们到官方的文档看一下一些它的注意事项

00:57.240 --> 01:01.240
我们NPN Store 然后安装G 然后完成这个

01:01.240 --> 01:03.240
Y按 完成这个也可以

01:03.240 --> 01:06.240
但是我们注意一下 由于网速原因

01:06.240 --> 01:11.240
NPN这个不是说像其他的一些安装

01:11.240 --> 01:13.240
你说等一等 还是可以的

01:13.240 --> 01:16.240
由于这个脚手架比较大 因为很简单

01:16.240 --> 01:20.240
Target本身要支持所有的我们的平台

01:21.240 --> 01:23.240
所有的生态圈

01:23.240 --> 01:28.240
所以它的整个功能项目的大小非常大

01:28.240 --> 01:32.240
那么NPN的网速安装60%的可能性

01:32.240 --> 01:35.240
由于网速原因会失败

01:35.240 --> 01:36.240
那么我们怎么办呢

01:36.240 --> 01:39.240
我们说我们采取CNPN的方式

01:39.240 --> 01:40.240
那么如果不会装了同学的话

01:40.240 --> 01:42.240
你去执行这两句代码

01:42.240 --> 01:46.240
去注册一个中国的淘宝的一个镜像

01:46.240 --> 01:48.240
当你这样注册完成以后的话

01:48.240 --> 01:51.240
你就可以通过CNPN的Install的方式来安装

01:51.240 --> 01:56.240
后面的写法和我们去使用NPN的安装是一样的

01:56.240 --> 01:57.240
好 这点大家注意

01:57.240 --> 01:59.240
那么在我这台电脑上

01:59.240 --> 02:01.240
我们的这个已经安装过

02:01.240 --> 02:10.010
所以的话CNPN是有的 装好了

02:10.010 --> 02:12.010
那么装法是和这个是一样的

02:12.010 --> 02:15.010
那我就用这个来进行我们的全局安装

02:15.010 --> 02:17.010
全局安装的话

02:17.010 --> 02:19.010
整个这个写法上面

02:19.010 --> 02:21.010
其实我们很简单

02:21.010 --> 02:24.010
我们就直接利用你现在的CNPN的这个写法

02:24.010 --> 02:25.010
来

02:25.010 --> 02:28.280
C

02:28.280 --> 02:31.620
Install

02:31.620 --> 02:40.240
你就直接这样装

02:40.240 --> 02:42.240
那么因为我装过

02:42.240 --> 02:43.240
这个时间的话

02:43.240 --> 02:45.240
差不多应该是

02:45.240 --> 02:47.240
两三分钟时间

02:47.240 --> 02:49.240
如果你有NPN的话

02:49.240 --> 02:50.240
那就不止了

02:50.240 --> 02:51.240
你用NPN的话

02:51.240 --> 02:53.240
可能20分钟都有可能

02:53.240 --> 02:54.240
这个的话

02:54.240 --> 02:56.240
应该现在的下载过程中

02:56.240 --> 02:59.240
应该有80个文件左右

02:59.240 --> 03:01.240
下载完以后的话

03:01.240 --> 03:03.240
那么它会进行自己

03:03.240 --> 03:05.240
进行所谓的

03:05.240 --> 03:06.240
插件的安装

03:06.240 --> 03:07.240
这个我就在这儿不装了

03:07.240 --> 03:09.240
大家可以去执行一下

03:09.240 --> 03:11.680
下面一堆出来

03:11.680 --> 03:12.680
好

03:12.680 --> 03:13.680
那么我这边给大家说一下

03:13.680 --> 03:15.680
那么我们来看一下

03:15.680 --> 03:18.680
官方的一个文档

03:18.680 --> 03:20.680
官方文档的介绍

03:20.680 --> 03:22.680
首先这个关于Taro这一块

03:22.680 --> 03:24.680
大家可以从官方文档的

03:24.680 --> 03:26.680
首页进入以后的话

03:26.680 --> 03:28.680
进到它的文档界面

03:28.680 --> 03:29.680
文档界面下面

03:29.680 --> 03:30.680
它讲的还是比较细

03:30.680 --> 03:31.680
这边的话

03:31.680 --> 03:33.680
给它做一个简单介绍

03:33.680 --> 03:35.680
之前我们说过一点Taro的介绍

03:35.680 --> 03:37.680
那么这边在额外多说一下

03:37.680 --> 03:39.680
Taro的风格大家看到

03:39.680 --> 03:40.680
就是这个

03:40.680 --> 03:43.680
如果你写过我们的React

03:43.680 --> 03:44.680
的话同学

03:44.680 --> 03:45.680
那你对这个结构

03:45.680 --> 03:47.680
会有眼熟

03:47.680 --> 03:48.680
就是我们刚才强调的

03:48.680 --> 03:50.680
它是React的愈法规范

03:50.680 --> 03:52.680
那么如果不熟同学的话

03:52.680 --> 03:53.680
那么后面

03:53.680 --> 03:55.680
我们给大家做讲解吧

03:55.680 --> 03:56.680
这部分内容

03:56.680 --> 03:58.680
包括是我们的类

03:58.680 --> 03:59.680
继承

03:59.680 --> 04:02.680
包括是我们的Import的导入

04:02.680 --> 04:04.680
包括是定名的

04:04.680 --> 04:05.680
写法

04:05.680 --> 04:08.680
包括是里面Stator的结构

04:08.680 --> 04:10.680
这是它的一个

04:10.680 --> 04:11.680
Stator辨量

04:11.680 --> 04:14.680
包括是生命周期

04:14.680 --> 04:16.680
包括是它的事件

04:16.680 --> 04:21.680
以及它的JSX

04:21.680 --> 04:23.680
有点绕口

04:23.680 --> 04:24.680
JSX

04:24.680 --> 04:26.680
一般我读JSX

04:26.680 --> 04:28.680
JSX的写法

04:28.680 --> 04:29.680
那么这是OK的

04:29.680 --> 04:31.680
紧接着我们往下看一下

04:31.680 --> 04:32.680
它所支持的

04:32.680 --> 04:34.680
因为之前我们介绍过

04:34.680 --> 04:35.680
这边简单看一下

04:35.680 --> 04:37.680
快速开发小程序

04:37.680 --> 04:38.680
你发现吗

04:38.680 --> 04:39.680
好多的界面都会有

04:39.680 --> 04:40.680
对吧

04:40.680 --> 04:41.680
然后其他的下面的话

04:41.680 --> 04:42.680
我们就现在就不用了

04:42.680 --> 04:43.680
下面就一大堆

04:43.680 --> 04:45.680
它告诉你用了很多

04:45.680 --> 04:47.680
Taro团队也是比较大的

04:47.680 --> 04:48.680
因为毕竟来讲

04:48.680 --> 04:50.680
它分了非洲兜的组

04:50.680 --> 04:51.680
它不是几个人

04:51.680 --> 04:52.680
如果说

04:52.680 --> 04:54.680
它是每一个组都

04:54.680 --> 04:55.680
一个人的话

04:56.680 --> 04:57.680
这样讲

04:57.680 --> 04:59.680
京东Auto实验室的话

04:59.680 --> 05:01.680
还是比较牛的一个团队

05:01.680 --> 05:03.680
并且我们说Taro也支持到了

05:03.680 --> 05:06.680
非常多的公司和个人贡献者

05:06.680 --> 05:08.680
给了非常多的帮助

05:08.680 --> 05:11.680
使这套内容做得非常的完善

05:11.680 --> 05:14.680
我们从快速开始里面看到

05:14.680 --> 05:15.680
我们所谓的安装

05:15.680 --> 05:18.680
我们要求的是8.0以上的版本

05:18.680 --> 05:20.680
然后安装方式就是这个

05:20.680 --> 05:21.680
那么我们刚才说了

05:21.680 --> 05:23.680
如果你需要快速的话

05:23.680 --> 05:24.680
你用CNPN的方式来

05:24.680 --> 05:26.680
然后你说

05:26.680 --> 05:28.680
这个先不用管

05:28.680 --> 05:30.680
它是错误时候的一个

05:30.680 --> 05:32.680
然后初始化项目

05:32.680 --> 05:34.680
一旦你完成以后的话

05:34.680 --> 05:35.680
你装完以后

05:35.680 --> 05:36.680
你就可以开始

05:36.680 --> 05:39.680
创建初始化一个项目命令

05:39.680 --> 05:41.680
用Taro init

05:41.680 --> 05:42.680
这是项目名称

05:42.680 --> 05:44.680
叫myapp

05:44.680 --> 05:45.680
那么如果说

05:45.680 --> 05:47.680
你现在是

05:47.680 --> 05:49.680
NPN 5.2以上版本的话

05:49.680 --> 05:52.680
你还可以进行另外一种操作

05:52.680 --> 05:54.680
不全局安装情况下

05:54.680 --> 05:56.680
使用NPN创建模板

05:56.680 --> 05:58.680
那么这两个是一套

05:58.680 --> 06:00.680
是前面这个

06:00.680 --> 06:01.680
和它是一套

06:01.680 --> 06:03.680
那么如果这两个省掉

06:03.680 --> 06:04.680
直接用它来做

06:04.680 --> 06:05.680
那也行

06:05.680 --> 06:07.680
因为我们做NPN的时候

06:07.680 --> 06:08.680
我们写了个G

06:08.680 --> 06:10.680
那就是Global的一个全局安装

06:10.680 --> 06:11.680
脚手架

06:11.680 --> 06:13.680
然后对它里面进行单独安装

06:13.680 --> 06:14.680
那么这时候

06:14.680 --> 06:15.680
Taro这个命令

06:15.680 --> 06:17.680
你在这可以使用了

06:17.680 --> 06:19.680
但如果你没有全局安装

06:19.680 --> 06:20.680
全线的话

06:20.680 --> 06:22.680
就可以使用这个命令来安装

06:22.680 --> 06:24.680
它没有全局操作的话

06:24.680 --> 06:25.680
然后用脚手架

06:25.680 --> 06:27.680
直接初始化一个myapp出来

06:27.680 --> 06:28.680
好

06:28.680 --> 06:29.680
那我们给大家演示一下

06:29.680 --> 06:30.680
由于我之前

06:30.680 --> 06:32.680
我们的CNPN已经装过了

06:32.680 --> 06:33.680
所以我现在

06:33.680 --> 06:34.680
直接可以进行

06:34.680 --> 06:35.680
我们的代码操作

06:35.680 --> 06:37.680
一盘里面

06:37.680 --> 06:38.680
Taro里面来

06:38.680 --> 06:42.500
然后我这边

06:42.500 --> 06:44.500
先转盘幅

06:44.500 --> 06:45.500
转过来

06:45.500 --> 06:46.500
我以前建立了一个

06:46.500 --> 06:47.500
那我现在重新

06:47.500 --> 06:48.500
再建个新的

06:48.500 --> 06:49.500
我们来写一下

06:49.500 --> 06:51.500
咱们叫做Taro

06:52.500 --> 06:55.500
init myapp

06:55.500 --> 06:56.500
e

06:56.500 --> 06:57.500
回车

06:58.500 --> 07:00.500
那么它就会给你进行创建

07:02.500 --> 07:04.500
它会有一些所谓的

07:05.500 --> 07:06.500
提示问你

07:06.500 --> 07:07.500
创建模板成功

07:07.500 --> 07:08.500
问你项目介绍

07:08.500 --> 07:09.500
我们放空

07:10.500 --> 07:11.500
ts的话

07:11.500 --> 07:12.500
强类型的结构

07:12.500 --> 07:14.500
我们现在暂时不用

07:14.500 --> 07:15.500
然后问你用哪一种

07:15.500 --> 07:17.500
我们样式对吧

07:17.500 --> 07:19.500
我们用less

07:19.500 --> 07:20.500
放在这边

07:20.500 --> 07:21.500
它问你

07:21.500 --> 07:23.500
预处理器

07:23.500 --> 07:24.500
你要不要

07:24.500 --> 07:25.500
预处理器

07:25.500 --> 07:26.500
那么如果不要的话

07:26.500 --> 07:27.500
你就选无

07:28.500 --> 07:29.500
然后的话

07:29.500 --> 07:30.500
选择模板

07:30.500 --> 07:31.500
它问你

07:31.500 --> 07:32.500
选择模板

07:32.500 --> 07:33.500
你现在

07:33.500 --> 07:34.500
请选择默认模板

07:34.500 --> 07:35.500
我们就用

07:35.500 --> 07:36.500
默认帮你创建出

07:36.500 --> 07:37.500
一堆文件出来

07:37.500 --> 07:38.500
它问你

07:38.500 --> 07:39.500
它要执行CNPN

07:39.500 --> 07:40.500
你发现吗

07:40.500 --> 07:41.500
它也会去进行

07:41.500 --> 07:43.500
我们的一个

07:44.500 --> 07:45.500
模块的

07:45.500 --> 07:46.500
或者称之为

07:46.500 --> 07:47.500
组建的一个下载

07:47.500 --> 07:48.500
其实

07:48.500 --> 07:50.500
它也是从CNPN走的

07:50.500 --> 07:51.500
你会发现

07:51.500 --> 07:52.500
这边它给你创建了

07:52.500 --> 07:53.500
一堆代码

07:53.500 --> 07:54.500
系统中

07:54.500 --> 07:55.500
它已经帮你创建

07:55.500 --> 07:56.500
一堆代码

07:56.500 --> 07:57.500
咱们来看一下

07:57.500 --> 07:58.500
这一堆代码里面的话

07:58.500 --> 07:59.500
首先

07:59.500 --> 08:00.500
创建项目

08:00.500 --> 08:01.500
名称

08:01.500 --> 08:02.500
是我们刚才见的

08:02.500 --> 08:03.500
这里面有几个

08:03.500 --> 08:04.500
这两个很简单

08:04.500 --> 08:05.500
就是

08:05.500 --> 08:08.500
Edit的本身的配置文件

08:09.500 --> 08:10.500
然后创建成功

08:10.500 --> 08:11.500
我们往前先看一下

08:12.500 --> 08:14.500
这边有一个

08:14.500 --> 08:16.500
Git Hulu文件

08:16.500 --> 08:17.500
这有个Package

08:17.500 --> 08:18.500
Package的文件

08:18.500 --> 08:19.500
基本上是

08:19.500 --> 08:20.500
我们针对于

08:20.500 --> 08:21.500
微信名台来讲

08:21.500 --> 08:23.500
是包文件的一个管理

08:23.500 --> 08:24.500
然后

08:24.500 --> 08:25.500
微信本身自己

08:25.500 --> 08:26.500
有个项目管理文件

08:26.500 --> 08:27.500
对吧

08:27.500 --> 08:28.500
我们在以前

08:28.500 --> 08:29.500
所讲解过程中

08:29.500 --> 08:30.500
都会发现这个文件

08:30.500 --> 08:31.500
代表的是

08:31.500 --> 08:32.500
我们可以去配置

08:32.500 --> 08:33.500
一些信息

08:33.500 --> 08:35.500
是全局的项目配置

08:35.500 --> 08:36.500
包括是我们的

08:36.500 --> 08:37.500
云的

08:37.500 --> 08:38.500
我们记得吗

08:38.500 --> 08:39.500
云的

08:39.500 --> 08:40.500
我们的Cloud Function Router

08:40.500 --> 08:42.500
也是在这里面配的

08:42.500 --> 08:43.500
然后下面这些

08:43.500 --> 08:44.500
是我们的

08:44.500 --> 08:45.500
系统的文件

08:45.500 --> 08:46.500
待会我们后期

08:46.500 --> 08:47.500
会介绍

08:47.500 --> 08:48.500
像包括是

08:48.500 --> 08:49.500
1.css

08:49.500 --> 08:50.500
全局样式结构

08:50.500 --> 08:51.500
对不对

08:51.500 --> 08:52.500
有一个这个文件

08:52.500 --> 08:53.500
出来

08:53.500 --> 08:54.500
那么我们大家都会知道

08:54.500 --> 08:56.500
在微信小程序的开发里面的话

08:56.500 --> 08:58.500
它是不存在于HTML的

08:58.500 --> 08:59.500
但是为什么它会创建

08:59.500 --> 09:00.500
其实我们就回到

09:00.500 --> 09:02.500
最原初的一个状态

09:02.500 --> 09:04.500
Taro并不是简单

09:04.500 --> 09:05.500
给微信小程序

09:05.500 --> 09:06.500
进行编码的

09:06.500 --> 09:07.500
它是可以适合

09:07.500 --> 09:09.500
在各个平台上面

09:09.500 --> 09:10.500
都进行

09:10.500 --> 09:11.500
一次编码

09:11.500 --> 09:12.500
多处使用的

09:12.500 --> 09:13.500
所以

09:13.500 --> 09:14.500
你如果现在的开发

09:14.500 --> 09:15.500
你说我不是

09:15.500 --> 09:16.500
在微信小程序

09:17.500 --> 09:18.500
见面的话

09:18.500 --> 09:19.500
那这个index

09:19.500 --> 09:21.500
这时候完全就可以使用

09:21.500 --> 09:22.500
所以从这点

09:22.500 --> 09:23.500
上面明确

09:23.500 --> 09:24.500
并不是说

09:24.500 --> 09:26.500
它为了完成

09:26.500 --> 09:28.500
某一个小程序

09:28.500 --> 09:29.500
而去做这东西

09:29.500 --> 09:31.500
它是可以把所有的

09:31.500 --> 09:33.500
你能使用到的文件

09:33.500 --> 09:34.500
全给你建立起来

09:34.500 --> 09:35.500
当然

09:35.500 --> 09:36.500
你如果后期

09:36.500 --> 09:37.500
在编译的时候

09:37.500 --> 09:38.500
注意

09:38.500 --> 09:39.500
我们强调一点

09:39.500 --> 09:40.500
一次编码

09:40.500 --> 09:41.500
多端运行

09:41.500 --> 09:43.500
但不代表的

09:43.500 --> 09:45.500
只能一次个编译

09:45.500 --> 09:47.500
根据不同的平台

09:47.500 --> 09:49.500
完成不同的编译操作

09:49.500 --> 09:50.500
那么使其

09:50.500 --> 09:51.500
能够适应

09:51.500 --> 09:52.500
与当前平台的

09:52.500 --> 09:53.500
因为我们都知道

09:53.500 --> 09:54.500
如果我们想在

09:54.500 --> 09:55.500
微信小程序

09:55.500 --> 09:56.500
做这些事的话

09:56.500 --> 09:58.500
一定会出现一种

09:58.500 --> 09:59.500
所谓的

10:01.500 --> 10:02.500
WXML

10:02.500 --> 10:03.500
WXSS

10:03.500 --> 10:04.500
JSN

10:04.500 --> 10:05.500
JS的这四个文件

10:05.500 --> 10:06.500
对不对

10:06.500 --> 10:07.500
这种是不能用的

10:07.500 --> 10:09.500
那么它就会忽略它

10:09.500 --> 10:10.500
它就会忽略它

10:10.500 --> 10:11.500
这意思

10:11.500 --> 10:12.500
理解吧

10:12.500 --> 10:13.500
好

10:13.500 --> 10:14.500
那么注意一下

10:14.500 --> 10:15.500
我们紧接着下去

10:15.500 --> 10:16.500
它说

10:16.500 --> 10:17.500
你现在

10:17.500 --> 10:18.500
完成

10:18.500 --> 10:20.500
它现在执行了一个CD

10:20.500 --> 10:21.500
然后GIT

10:21.500 --> 10:23.500
执行GIT init的话

10:23.500 --> 10:24.500
那么这样的话

10:24.500 --> 10:25.500
执行了一堆的代码

10:25.500 --> 10:26.500
我们不用管了

10:26.500 --> 10:27.500
我们看到下面

10:27.500 --> 10:29.500
它中文还提示你

10:29.500 --> 10:30.500
完成了

10:30.500 --> 10:31.500
然后你可以切到

10:31.500 --> 10:32.500
这个目录中去

10:32.500 --> 10:33.500
使用了

10:33.500 --> 10:34.500
好

10:34.500 --> 10:35.500
我们把它给关了

10:35.500 --> 10:37.500
那么我们去使用

10:37.500 --> 10:39.500
它的时候的话

10:39.500 --> 10:40.500
那么注意

10:40.500 --> 10:41.500
刚才我们这边已经完成了

10:41.500 --> 10:42.500
包括这边

10:42.500 --> 10:43.500
它写了一堆代码

10:43.500 --> 10:44.500
也是完成

10:44.500 --> 10:45.500
我们刚才的操作

10:45.500 --> 10:47.500
完成刚才的操作

10:47.500 --> 10:48.500
紧接着

10:48.500 --> 10:50.500
我们得进到它里边

10:50.500 --> 10:51.500
咱们注意这边

10:51.500 --> 10:53.500
我们得进到它里边

10:53.500 --> 10:54.500
完成

10:54.500 --> 10:55.500
我们的

10:55.500 --> 10:56.500
你注意这边

10:56.500 --> 10:57.500
CNPN

10:57.500 --> 10:59.500
完成依赖项的安装

10:59.500 --> 11:01.500
完成依赖项的安装

11:01.500 --> 11:03.500
前的一些版本里面的话

11:03.500 --> 11:04.500
你手动安装

11:04.500 --> 11:05.500
但是现在的话

11:05.500 --> 11:06.500
注意

11:06.500 --> 11:07.500
现在的

11:07.500 --> 11:08.500
只要是新的

11:08.500 --> 11:09.500
刚才我这样操作的话

11:09.500 --> 11:11.500
它会默认安装

11:11.500 --> 11:12.500
我们的依赖项

11:12.500 --> 11:14.500
那么怎么样观察你

11:14.500 --> 11:15.500
到底现在装的没装呢

11:15.500 --> 11:16.500
很简单

11:16.500 --> 11:18.500
我们去打开我们

11:18.500 --> 11:20.500
现在的一个VS Coder

11:20.500 --> 11:21.500
我们去找到

11:21.500 --> 11:23.500
当前的这个目录

11:23.500 --> 11:24.500
我到买APP1

11:24.500 --> 11:25.500
对不对

11:25.500 --> 11:26.500
我找到它

11:26.500 --> 11:27.500
打开

11:27.500 --> 11:28.500
看到吗

11:28.500 --> 11:29.500
Node Models

11:29.500 --> 11:30.500
是不是这个已经有了

11:30.500 --> 11:31.500
我们选择打开

11:31.500 --> 11:33.500
那么这边

11:33.500 --> 11:35.500
我个人是比较建议

11:35.500 --> 11:36.500
还是使用VS Coder

11:36.500 --> 11:37.500
是一个比较

11:37.500 --> 11:38.500
轻量级的

11:38.500 --> 11:39.500
功能级成化的

11:39.500 --> 11:41.500
一个开号平台

11:41.500 --> 11:42.500
用起来

11:42.500 --> 11:43.500
大家如果

11:43.500 --> 11:44.500
当然这不强制

11:44.500 --> 11:45.500
如果大家个人喜欢

11:45.500 --> 11:46.500
HPU的DreamWeber

11:46.500 --> 11:47.500
或者SupplyTester

11:47.500 --> 11:48.500
各种类型的话

11:48.500 --> 11:50.500
你都可以使用

11:50.500 --> 11:51.500
OK

11:51.500 --> 11:52.500
那么现在

11:52.500 --> 11:53.500
我们打开以后

11:53.500 --> 11:54.500
会发现这里面

11:54.500 --> 11:55.500
目录结构

11:55.500 --> 11:56.500
已经帮助我们存在了

11:56.500 --> 11:57.500
同时

11:57.500 --> 11:58.500
我们再来看

11:58.500 --> 12:00.500
这部分内容就不需要了

12:00.500 --> 12:01.500
那么接下去

12:01.500 --> 12:03.500
你就可以进行运行了

12:03.500 --> 12:04.500
注意

12:04.500 --> 12:05.500
它的运行

12:05.500 --> 12:06.500
它需要经过

12:06.500 --> 12:07.500
看到吗

12:07.500 --> 12:09.500
将代码编一层

12:09.500 --> 12:10.500
不同端的代码

12:10.500 --> 12:12.500
不同端的代码

12:12.500 --> 12:13.500
那么就意味着

12:13.500 --> 12:15.500
你要通过不同的

12:15.500 --> 12:16.500
编译命令

12:16.500 --> 12:17.500
来完成

12:17.500 --> 12:19.500
不同平台的代码编译

12:19.500 --> 12:20.500
首先

12:20.500 --> 12:21.500
它下面告诉你

12:21.500 --> 12:22.500
有小程序

12:22.500 --> 12:24.500
百度支付宝

12:24.500 --> 12:25.500
字节跳动

12:25.500 --> 12:26.500
这一条就是抖音

12:26.500 --> 12:27.500
QQ

12:27.500 --> 12:28.500
然后快音用

12:28.500 --> 12:29.500
H5

12:29.500 --> 12:31.500
各种的

12:31.500 --> 12:32.500
React Native

12:32.500 --> 12:34.500
各种的编译方式

12:34.500 --> 12:35.500
那么我们就

12:35.500 --> 12:36.500
我们现在主要

12:36.500 --> 12:37.500
讲解的是

12:37.500 --> 12:38.500
微信小程序

12:38.500 --> 12:39.500
微信小程序的编译

12:39.500 --> 12:40.500
我们来看

12:40.500 --> 12:42.500
找到npn script

12:42.500 --> 12:43.500
npn script

12:43.500 --> 12:45.500
里面有两个方式

12:45.500 --> 12:47.500
第一个叫npn run dv

12:47.500 --> 12:48.500
wapp

12:48.500 --> 12:49.500
第二个是builder

12:49.500 --> 12:50.500
那么这两个区别

12:50.500 --> 12:52.500
是在于dv development

12:52.500 --> 12:54.500
开发编译

12:54.500 --> 12:55.500
builder

12:55.500 --> 12:57.500
它称之为就是

12:57.500 --> 12:59.500
那个发布编译

12:59.500 --> 13:01.500
或者你称之为就是开发版

13:01.500 --> 13:03.500
这是发布版

13:03.500 --> 13:04.500
这两种

13:04.500 --> 13:05.500
那我们现在的开发过程中

13:05.500 --> 13:07.500
都用它来完成

13:07.500 --> 13:08.500
怎么做呢

13:08.500 --> 13:10.500
我们就可以直接

13:10.500 --> 13:13.500
打开当前所在的

13:13.500 --> 13:15.500
这个项目目录

13:15.500 --> 13:16.500
不要在taro下面

13:16.500 --> 13:18.500
找到它项目目录下

13:18.500 --> 13:20.500
然后我们来书写

13:20.500 --> 13:22.500
这个代码

13:22.500 --> 13:31.510
我们把它复制过来

13:31.510 --> 13:36.260
运行

13:36.260 --> 13:37.260
它会进行编译

13:37.260 --> 13:39.260
开始编译

13:39.260 --> 13:40.260
它会去帮助你

13:40.260 --> 13:42.260
识别小程序

13:42.260 --> 13:44.260
里面所需要的代码

13:44.260 --> 13:45.260
并且完成

13:45.260 --> 13:47.260
某些代码的生成

13:47.260 --> 13:50.260
使其能够在小程序页面中

13:50.260 --> 13:51.260
进行

13:51.260 --> 13:52.260
显示

13:52.260 --> 13:53.260
首先我们来看一下

13:53.260 --> 13:55.260
它这边给我们的一个提示

13:55.260 --> 13:57.260
它生成了什么

13:57.260 --> 13:58.260
你看

13:58.260 --> 14:00.260
它说编译了所有页面

14:00.260 --> 14:02.260
编译了我们index index页面

14:02.260 --> 14:04.260
这其实是它的首页

14:04.260 --> 14:05.260
我们看下面

14:05.260 --> 14:07.260
它生成了四个文件

14:07.260 --> 14:09.260
这个index看到

14:09.260 --> 14:11.260
什么wxmlwxsjsjson

14:11.260 --> 14:12.260
这四个文件

14:12.260 --> 14:14.260
看到它的位置吗

14:14.260 --> 14:16.260
它的paters the index index下

14:16.260 --> 14:18.260
那么这就意味着是什么

14:18.260 --> 14:20.260
它好像就形成了我们

14:20.260 --> 14:22.260
在原生小程序中开发的

14:22.260 --> 14:23.260
四个文件

14:23.260 --> 14:24.260
是吧

14:24.260 --> 14:25.260
同时你这样做完以后

14:25.260 --> 14:26.260
你会发现没有

14:26.260 --> 14:28.260
在我们的系统文件中

14:28.260 --> 14:30.260
多了一个dister出来

14:30.260 --> 14:32.260
如果你听过我们

14:32.260 --> 14:34.260
我讲解的npview结构的话

14:34.260 --> 14:37.260
那么包括是webpackager的结构的话

14:37.260 --> 14:38.260
你就会发现

14:38.260 --> 14:40.260
这个其实是一个通用的形式

14:40.260 --> 14:42.260
只要你发布以后

14:42.260 --> 14:44.260
你就能够在这个里面

14:44.260 --> 14:46.260
就看到我们整个这个代码

14:46.260 --> 14:48.260
包括是微信小程序的

14:48.260 --> 14:50.260
1 2 3这几个代码

14:50.260 --> 14:52.260
如果大家会想到原生

14:52.260 --> 14:53.260
写过同学的话

14:53.260 --> 14:54.260
就应该非常熟

14:54.260 --> 14:56.260
打开我们的paters

14:56.260 --> 14:57.260
是不是这里面

14:57.260 --> 14:59.260
就是很简单的一个

14:59.260 --> 15:00.260
首页代码

15:00.260 --> 15:01.260
对吧

15:01.260 --> 15:02.260
那么现在

15:02.260 --> 15:04.260
我们可以打开微信小程序

15:04.260 --> 15:06.260
来看一下这个代码结构

15:07.260 --> 15:09.260
微信小程序打开

15:09.260 --> 15:11.260
我就不在这强调说

15:11.260 --> 15:12.260
微信小程序怎么安装

15:12.260 --> 15:13.260
怎么用了

15:13.260 --> 15:14.260
但是学过微信小程序

15:14.260 --> 15:16.260
开发同学都应该知道

15:16.260 --> 15:18.260
我们打开那个叫做

15:18.260 --> 15:19.260
微信web开发者工具

15:19.260 --> 15:20.260
对吧

15:21.260 --> 15:23.260
我们注意

15:23.260 --> 15:24.260
打开的路径

15:24.260 --> 15:26.260
一定要去找到

15:26.260 --> 15:27.260
当前的dister

15:27.260 --> 15:28.260
注意一下

15:28.260 --> 15:29.260
你一定要找到dister

15:29.260 --> 15:31.260
你不能再买app

15:31.260 --> 15:34.260
e或者说你的项目文件下打开

15:34.260 --> 15:35.260
你要去找到dister

15:35.260 --> 15:37.260
因为只有dister下面的文件

15:37.260 --> 15:39.260
才是你现在微信小程序

15:39.260 --> 15:41.260
最后所运行的文件

15:41.260 --> 15:45.550
打开以后

15:45.550 --> 15:46.550
我们可以看一下

15:46.550 --> 15:52.040
它给我显示什么

15:52.040 --> 16:04.290
这个要稍等几秒钟

16:04.290 --> 16:05.290
出来了

16:05.290 --> 16:06.290
Hello world

16:06.290 --> 16:09.290
那么这个就是我们整个

16:09.290 --> 16:12.290
叫做terror

16:12.290 --> 16:14.290
它所默认完成以后

16:14.290 --> 16:15.290
编译以后

16:15.290 --> 16:17.290
所看到的一个界面

16:17.290 --> 16:19.290
Hello world

16:19.290 --> 16:20.290
当然

16:20.290 --> 16:22.290
你也能通过它

16:22.290 --> 16:25.290
去完成我们的另外的一个编译

16:25.290 --> 16:26.290
就是我们所谓的

16:26.290 --> 16:27.290
一个h5的编译

16:27.290 --> 16:28.290
对吧

16:28.290 --> 16:29.290
好

16:29.290 --> 16:31.290
我们继续打开来看一下

16:31.290 --> 16:33.290
这是微信的编译

16:33.290 --> 16:34.290
对吧

16:34.290 --> 16:35.290
百度小程序

16:35.290 --> 16:36.290
圈支付报小程序

16:36.290 --> 16:38.290
各自都可以有它的一个名称

16:38.290 --> 16:41.290
也可以对它进行编译操作

16:41.290 --> 16:42.290
那么h5的话

16:42.290 --> 16:43.290
你很简单

16:43.290 --> 16:45.290
你只要dvh5

16:45.290 --> 16:46.290
这样的方式就可以了

16:46.290 --> 16:48.290
那么我们通过外围的方式

16:48.290 --> 16:51.600
你再来看一下吧

16:51.600 --> 16:52.600
我们这个

16:52.600 --> 16:58.190
应该是在e盘下

16:58.190 --> 16:59.190
cd

16:59.190 --> 17:02.190
我是在terror

17:02.190 --> 17:05.630
下面的

17:05.630 --> 17:07.630
myappe

17:07.630 --> 17:09.630
在它里面

17:09.630 --> 17:10.630
我们打上这个

17:10.630 --> 17:18.140
把这个关一下

17:18.140 --> 17:20.140
它开始编译

17:20.140 --> 17:22.140
它这时候给你创建出来了

17:22.140 --> 17:25.140
一些html也面

17:25.140 --> 17:26.140
这时候的话

17:26.140 --> 17:27.140
它会打开一个

17:27.140 --> 17:29.140
我们的00

17:29.140 --> 17:30.140
这个的话

17:30.140 --> 17:32.140
我们等会儿可以修改一下

17:32.140 --> 17:33.140
我们看一下

17:33.140 --> 17:34.140
它说comply

17:34.140 --> 17:35.140
在编译

17:35.140 --> 17:40.390
complying

17:40.390 --> 17:41.390
看一下出来

17:41.390 --> 17:42.390
它说

17:42.390 --> 17:43.390
已经编译成功了

17:43.390 --> 17:45.390
你去访问这个网址

17:45.390 --> 17:46.390
其实不是这个

17:46.390 --> 17:48.390
我们访问的是本地

17:48.390 --> 17:51.390
127.0.0.1

17:51.390 --> 17:52.390
是这个

17:52.390 --> 17:53.390
你看到吗

17:53.390 --> 17:55.390
至于它为什么用10086

17:55.390 --> 17:57.390
这个我就没搞懂

17:57.390 --> 17:58.390
咱们也不用去搞

17:58.390 --> 18:00.390
是否和移动

18:00.390 --> 18:01.390
有任何的关联

18:01.390 --> 18:02.390
对吧

18:02.390 --> 18:03.390
咱们看到的是

18:03.390 --> 18:05.390
它在网页板上面

18:05.390 --> 18:07.390
我用这条命令进行编译以后

18:07.390 --> 18:10.390
它就能够实现H5的一个呈现

18:10.390 --> 18:11.390
然后呢

18:11.390 --> 18:12.390
我们之前的编译

18:12.390 --> 18:13.390
它就会出现

18:13.390 --> 18:14.390
我们的小程序的

18:14.390 --> 18:15.390
理解吧

18:15.390 --> 18:16.390
那么这就是

18:16.390 --> 18:18.390
我们这边说到的

18:18.390 --> 18:19.390
当然我在这里

18:19.390 --> 18:20.390
编译完成以后

18:20.390 --> 18:22.390
小程序这边就会失效

18:22.390 --> 18:24.390
小程序这边就会失效

18:24.390 --> 18:25.390
所以这点的话

18:25.390 --> 18:27.390
我们需要是了解到

18:27.390 --> 18:28.390
ok

18:28.390 --> 18:29.390
那么至少来说

18:29.390 --> 18:30.390
我们能知道

18:30.390 --> 18:33.390
现在通过不同的编译方式

18:33.390 --> 18:35.390
我可以在不同的平台

18:35.390 --> 18:36.390
进行这方面的操作

18:36.390 --> 18:39.390
我们可以重新进入小程序的编译状态

18:39.390 --> 18:43.220
重新走一下

18:43.220 --> 18:49.600
我们的修改

18:49.600 --> 18:51.600
特别是我们在维护代码的时候

18:51.600 --> 18:53.600
我们要注意一些东西

18:53.600 --> 18:55.600
我们要注意一些东西

18:55.600 --> 18:56.600
就是

18:56.600 --> 18:58.600
那么什么东西呢

18:58.600 --> 19:01.600
就是你在进行代码开发

19:01.600 --> 19:03.600
和代码维护的时候

19:03.600 --> 19:05.600
你一定要做到的是

19:05.600 --> 19:07.600
你现在的一个

19:07.600 --> 19:10.600
我们的VSCoder代码的维护

19:11.600 --> 19:14.600
你不能去一边在小程序做

19:14.600 --> 19:17.600
你不能一边在小程序去修改

19:17.600 --> 19:19.600
在这儿改代码

19:19.600 --> 19:21.600
再来在这边进行操作

19:21.600 --> 19:22.600
这个的话

19:22.600 --> 19:23.600
我们讲是

19:23.600 --> 19:25.600
不可取的

19:25.600 --> 19:27.600
原因很简单

19:27.600 --> 19:28.600
因为

19:28.600 --> 19:29.600
如果你在这边

19:29.600 --> 19:30.600
虽然逻辑上

19:30.600 --> 19:31.600
你可以在这边

19:31.600 --> 19:33.600
随意的去修改代码

19:33.600 --> 19:35.600
和书写内容

19:35.600 --> 19:37.600
但是我们不建议这样做的

19:37.600 --> 19:38.600
不存在于

19:38.600 --> 19:39.600
你这边改一下

19:39.600 --> 19:40.600
这种逻辑上

19:40.600 --> 19:42.600
我们不希望这样做

19:42.600 --> 19:43.600
因为Dister这个文件

19:43.600 --> 19:44.600
本身来讲

19:44.600 --> 19:46.600
它就是因为为了生成出来

19:46.600 --> 19:48.600
我们尽量不要去多动

19:48.600 --> 19:49.600
不要去多动

19:49.600 --> 19:50.600
除非碰到了

19:50.600 --> 19:52.600
你现在的Terror

19:52.600 --> 19:53.600
或者类似于这样的框架

19:53.600 --> 19:55.600
无法解决的问题

19:55.600 --> 19:57.600
那必须有小程序来完成

19:57.600 --> 19:58.600
那你这时候

19:58.600 --> 19:59.600
才可能

19:59.600 --> 20:01.600
是不是试着长续去动一下

20:01.600 --> 20:02.600
不然

20:02.600 --> 20:03.600
不要去做这个操作

20:03.600 --> 20:04.600
我们所有的修改

20:04.600 --> 20:05.600
和所有的维护

20:05.600 --> 20:06.600
都在当前的

20:06.600 --> 20:07.600
这个叫做

20:07.600 --> 20:09.600
Terror框架里面去进行

20:09.600 --> 20:10.600
OK

20:10.600 --> 20:11.600
现在的话

20:11.600 --> 20:12.600
我们已经看到

20:12.600 --> 20:13.600
它已经呈现出来了

20:13.600 --> 20:14.600
回到我们的文档

20:14.600 --> 20:16.600
整个文档上面的话

20:16.600 --> 20:17.600
下面还有一些

20:17.600 --> 20:18.600
其他的部分

20:18.600 --> 20:19.600
包括是什么选择器

20:19.600 --> 20:20.600
这些

20:20.600 --> 20:21.600
那么这个就不在

20:21.600 --> 20:22.600
我们说

20:22.600 --> 20:23.600
现在刚开始学习过程中

20:23.600 --> 20:24.600
它应该讲

20:24.600 --> 20:25.600
以下

20:25.600 --> 20:26.600
写法是不支持的

20:26.600 --> 20:27.600
挺转化

20:27.600 --> 20:28.600
包括是什么

20:28.600 --> 20:29.600
加号

20:29.600 --> 20:30.600
包括是什么

20:30.600 --> 20:32.600
Spling

20:32.600 --> 20:33.600
大愚号

20:33.600 --> 20:34.600
这些

20:34.600 --> 20:35.600
OK

20:35.600 --> 20:36.600
那我们后期的话

20:37.600 --> 20:38.600
紧接着

20:38.600 --> 20:39.600
我们看到

20:39.600 --> 20:40.600
它在样式上面

20:40.600 --> 20:41.600
H5上面

20:41.600 --> 20:42.600
它既可以使用

20:42.600 --> 20:43.600
我们说

20:43.600 --> 20:44.600
Flex布局

20:44.600 --> 20:45.600
Ben布局

20:45.600 --> 20:46.600
Style布局

20:46.600 --> 20:47.600
这些都可以

20:47.600 --> 20:49.600
这是在H5结构上面

20:49.600 --> 20:50.600
大家可以自行的

20:50.600 --> 20:52.600
之后去进行

20:52.600 --> 20:54.600
进阶的一些了解

20:54.600 --> 20:55.600
因为我们的Terror

20:55.600 --> 20:56.600
我们主要针对于

20:56.600 --> 20:57.600
包括官网上面

20:57.600 --> 20:58.600
它也主针对于

20:58.600 --> 21:00.600
微信小程序的开发

21:00.600 --> 21:01.600
同时

21:01.600 --> 21:02.600
它也会有一些

21:02.600 --> 21:03.600
其他生态圈的

21:03.600 --> 21:04.600
包括是这些

21:04.600 --> 21:05.600
看到吗

21:05.600 --> 21:06.600
好了

21:06.600 --> 21:07.600
我们说一下

21:07.600 --> 21:08.600
Terror如果你想学习

21:08.600 --> 21:09.600
它的一些命令的话

21:09.600 --> 21:10.600
你可以利用

21:10.600 --> 21:11.600
它现在给出的

21:11.600 --> 21:12.600
一个Helper方式

21:12.600 --> 21:13.600
同时

21:13.600 --> 21:15.600
Terror本身自己的命令

21:15.600 --> 21:16.600
它也会有一些

21:16.600 --> 21:17.600
依赖上的更新

21:17.600 --> 21:18.600
那么你会去做

21:18.600 --> 21:19.600
这样的命令

21:19.600 --> 21:20.600
这样去更新

21:20.600 --> 21:21.600
它里面的一个

21:21.600 --> 21:22.600
全局库

21:22.600 --> 21:23.600
这意思

21:23.600 --> 21:24.600
其他的话

21:24.600 --> 21:25.600
就是一些抱挫

21:25.600 --> 21:26.600
检测

21:26.600 --> 21:27.600
这些问题

21:27.600 --> 21:28.600
不在我们这边所想了

21:28.600 --> 21:29.600
所以安装的话

21:29.600 --> 21:30.600
大家只要根据我

21:30.600 --> 21:31.600
刚才的操作

21:31.600 --> 21:32.600
刚才我这样的一些

21:32.600 --> 21:33.600
编译

21:33.600 --> 21:34.600
至于这个里面

21:34.600 --> 21:35.600
究竟是

21:35.600 --> 21:36.600
做什么功能

21:36.600 --> 21:37.600
那么我们在后期

21:37.600 --> 21:38.600
强烈的来

21:38.600 --> 21:39.600
做这方面的

21:39.600 --> 21:40.600
一个分析手

21:40.600 --> 21:41.600
给大家讲解

21:41.600 --> 21:42.600
现在你如果说

21:42.600 --> 21:43.600
想看的话

21:43.600 --> 21:44.600
没有问题

21:44.600 --> 21:45.600
但你尽量不要自己

21:45.600 --> 21:46.600
先去改

21:46.600 --> 21:47.600
好吧

21:47.600 --> 21:48.600
那么这就是

21:48.600 --> 21:49.600
我们所的快速

21:49.600 --> 21:51.600
安装和使用的课程

21:51.600 --> 21:52.600
大家的话

21:52.600 --> 21:53.600
一定要去多去

21:53.600 --> 21:54.600
安装了解一下

21:54.600 --> 21:55.600
碰到问题以后

21:55.600 --> 21:56.600
然后

21:56.600 --> 21:57.600
可以查个官网

21:57.600 --> 21:58.600
可以给我

21:58.600 --> 21:59.600
进行一些

21:59.600 --> 22:00.600
问题反馈

22:00.600 --> 22:01.600
好

22:01.600 --> 22:02.600
那么这节课

22:02.600 --> 22:03.600
谢谢大家

22:03.600 --> 22:04.600
谢谢大家

