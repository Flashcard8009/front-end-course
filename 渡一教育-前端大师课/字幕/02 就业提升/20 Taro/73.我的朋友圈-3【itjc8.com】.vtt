WEBVTT

00:00.110 --> 00:04.110
好 我们继续开始讲解我们的这个社交圈

00:04.110 --> 00:07.110
那么在之前的课程中呢

00:07.110 --> 00:11.110
我们把现在的几个页面的布局格式

00:11.110 --> 00:13.110
我们已经全部定完了

00:13.110 --> 00:16.110
广场的显示所有内容的

00:16.110 --> 00:19.110
发布的 这边会有内容填写

00:19.110 --> 00:22.110
这边可以看到不同的显示

00:22.110 --> 00:25.110
选择和发布两个按钮

00:25.110 --> 00:29.110
我的 里面会有你当前的个人的信息

00:29.110 --> 00:32.110
还有一个简单的布局

00:32.110 --> 00:33.110
那布局呢

00:33.110 --> 00:36.110
我们采取的是类似于一个

00:36.110 --> 00:39.110
我们的按钮的一个列表

00:39.110 --> 00:41.110
好 那么这节课开始呢

00:41.110 --> 00:43.110
我们将开始制作它的功能

00:43.110 --> 00:55.780
首先我们从发布这个功能开始制作起

00:55.780 --> 00:56.780
publish

00:56.780 --> 01:00.420
发布社交圈

01:00.420 --> 01:03.420
首先我们找到当前的

01:04.420 --> 01:05.420
选择图片

01:05.420 --> 01:07.420
这个choose and major

01:07.420 --> 01:11.940
在这儿

01:11.940 --> 01:12.940
choose and major 里面

01:12.940 --> 01:13.940
第一步

01:13.940 --> 01:16.700
tarrow

01:16.700 --> 01:20.270
选择图片

01:20.270 --> 01:26.030
tarrow.choose

01:26.030 --> 01:27.030
major

01:27.030 --> 01:31.460
count

01:31.460 --> 01:32.460
我们先选

01:32.460 --> 01:34.460
告诉它最多选三张

01:34.460 --> 01:36.460
那么在这个过程中呢

01:36.460 --> 01:38.460
我们可以一边做这个

01:38.460 --> 01:40.460
一边同时我们再回顾一下

01:40.460 --> 01:42.460
tarrow 中的我们的choose and major

01:42.460 --> 01:44.460
这样的一个

01:44.460 --> 01:45.460
我们的

01:45.460 --> 01:46.460
事件

01:47.460 --> 01:48.460
你来看

01:49.460 --> 01:50.460
choose and major

01:50.460 --> 01:51.460
选择图片

01:51.460 --> 01:52.460
tarrow的

01:52.460 --> 01:54.460
它的方式和我们的这个

01:54.460 --> 01:55.460
微信很像

01:56.460 --> 01:58.460
然后它里面有一些参数呢

01:58.460 --> 02:01.460
首先我们可以看到参数级objector

02:02.460 --> 02:03.460
参数级里面呢

02:03.460 --> 02:04.460
主要的内容

02:04.460 --> 02:06.460
我们可以去参考我们的

02:06.460 --> 02:08.460
这个微信

02:08.460 --> 02:10.460
同时也可以看到这一级里面

02:10.460 --> 02:13.460
首先你可以有一个count

02:13.460 --> 02:15.460
最多是9张图片

02:15.460 --> 02:17.460
还可以是sauce type

02:17.460 --> 02:19.460
那么你可以告诉它

02:19.460 --> 02:21.460
你是前置和后置

02:21.460 --> 02:23.460
你可以告诉它

02:23.460 --> 02:25.460
你现在size type

02:25.460 --> 02:27.460
你给的尺寸是哪一个

02:27.460 --> 02:29.460
我们看到

02:29.460 --> 02:30.460
你所选择尺寸

02:30.460 --> 02:32.460
在s5端呢是未能实现的

02:32.460 --> 02:33.460
但是在移动端上面

02:33.460 --> 02:35.460
我们这两个都是可以实现的

02:35.460 --> 02:38.460
那么我们就把这三个参数卷给它

02:38.460 --> 02:41.460
同时你这边能看到的是success5Complete

02:41.460 --> 02:43.460
这些都是属于

02:43.460 --> 02:45.460
你一旦成功以后的回掉

02:45.460 --> 02:47.460
所以我们把这几个值

02:47.460 --> 02:48.460
在这给它

02:48.460 --> 02:49.460
第一个count

02:49.460 --> 02:51.460
我们选3张图片

02:52.460 --> 02:53.460
sauce type

02:53.460 --> 02:55.460
它是一个素组

02:55.460 --> 02:56.460
sauce type

02:56.460 --> 02:57.460
所以我们后面给出

02:57.460 --> 03:01.150
图片来源

03:01.150 --> 03:03.590
album

03:04.590 --> 03:09.020
camera

03:09.020 --> 03:10.020
注意哦

03:10.020 --> 03:12.020
那么我把这后面注实也写上

03:12.020 --> 03:15.900
之后大家看的时候

03:15.900 --> 03:17.900
就不需要再去

03:17.900 --> 03:19.900
那个文档里看

03:19.900 --> 03:20.900
这边写上

03:20.900 --> 03:22.900
这个是

03:22.900 --> 03:25.900
最多可选的

03:25.900 --> 03:26.900
图片数

03:26.900 --> 03:32.390
系统

03:32.390 --> 03:34.390
规定

03:34.390 --> 03:36.960
最多

03:36.960 --> 03:37.960
9张

03:37.960 --> 03:41.420
再有一个

03:41.420 --> 03:43.420
sauce type

03:43.420 --> 03:46.420
表示现在图片的尺寸

03:46.420 --> 03:48.420
或者说精细度

03:48.420 --> 03:54.170
我们写上

03:54.170 --> 03:56.170
压缩的和我们的

03:56.170 --> 03:58.170
那个正常的

03:58.170 --> 04:04.650
compressed

04:04.650 --> 04:08.280
图片的尺寸

04:08.280 --> 04:14.860
当这个完成以后

04:14.860 --> 04:17.860
我们可以使用success for

04:17.860 --> 04:19.860
那么这个和then的话

04:19.860 --> 04:20.860
有个区别

04:20.860 --> 04:23.860
我这边把两个都告诉你一下

04:23.860 --> 04:24.860
那么第一种写法

04:24.860 --> 04:27.860
我们是使用最简单的

04:27.860 --> 04:30.860
我们使用最简单的success

04:30.860 --> 04:33.860
然后面直接跟上你现在的

04:33.860 --> 04:34.860
比如说function

04:34.860 --> 04:39.090
这样的结构

04:39.090 --> 04:41.090
这样写

04:41.090 --> 04:43.090
我把集中都写一下

04:43.090 --> 04:45.090
后面我们就写单种了

04:45.090 --> 04:46.090
那么这样的话

04:46.090 --> 04:48.090
你就能得到你现在的数据

04:48.090 --> 04:52.230
我们从这来看

04:52.230 --> 04:53.230
这种结构

04:53.230 --> 04:55.230
我们称之为回调结构

04:55.230 --> 04:58.230
就和我们在taro要求的

04:58.230 --> 05:01.230
那个参数级里面是一样的

05:01.230 --> 05:02.230
第二个

05:02.230 --> 05:08.230
我们写上file

05:08.230 --> 05:11.230
然后你这边写上

05:11.230 --> 05:14.740
function

05:14.740 --> 05:20.820
它说抱错

05:20.820 --> 05:22.820
再有无论你成功与否

05:22.820 --> 05:29.210
我们可以写上一个complete

05:29.210 --> 05:30.210
咱们这样写

05:30.210 --> 05:31.210
对吧

05:31.210 --> 05:36.910
res

05:36.910 --> 05:39.910
咱们称之为

05:39.910 --> 05:40.910
res

05:40.910 --> 05:43.910
这是第一种的标准的格式

05:43.910 --> 05:44.910
那么第二种

05:44.910 --> 05:46.910
我们把它注释掉

05:46.910 --> 05:52.910
第二种依然是回调模式

05:52.910 --> 05:54.910
我们采取的是

05:54.910 --> 05:55.910
直接是帽号

05:55.910 --> 05:58.910
然后是res的箭头符

05:58.910 --> 06:00.910
你可以用这样的结构来

06:00.910 --> 06:02.910
我们把上面的复制一下

06:02.910 --> 06:04.910
咱们这边写一下

06:04.910 --> 06:06.910
这是属于

06:06.910 --> 06:11.310
标准

06:11.310 --> 06:14.460
callback

06:14.460 --> 06:28.010
第二种是这种

06:28.010 --> 06:59.800
这个我们写成er

06:59.800 --> 07:04.420
res

07:04.420 --> 07:05.420
好

07:05.420 --> 07:07.420
这是第二种形式

07:07.420 --> 07:09.420
我们称之为

07:09.420 --> 07:11.420
箭头形式

07:11.420 --> 07:20.810
你也可以这样写

07:20.810 --> 07:22.810
箭头模式

07:22.810 --> 07:24.810
第三种的是

07:24.810 --> 07:27.810
没有箭头的一种运行

07:27.810 --> 07:29.810
是这样

07:29.810 --> 07:30.810
success

07:30.810 --> 07:33.810
直接把res拿过来

07:33.810 --> 08:01.570
直接这样写

08:01.570 --> 08:02.570
对吧

08:02.570 --> 08:06.220
直接这样写

08:06.220 --> 08:07.220
这三种是

08:07.220 --> 08:24.360
省略箭头的一种格式

08:24.360 --> 08:25.360
这三种

08:25.360 --> 08:29.780
还有

08:29.780 --> 08:31.780
甚至我们可以这样

08:31.780 --> 08:35.610
success

08:35.610 --> 08:37.610
帽号

08:37.610 --> 08:53.460
我们

08:53.460 --> 08:54.460
不用这样

08:54.460 --> 08:55.460
甚至是我们下面一种

08:55.460 --> 08:56.460
不是在这里面

08:56.460 --> 08:58.460
甚至我们还可以就是

08:58.460 --> 09:00.460
直接用land的方式来写

09:00.460 --> 09:45.410
你可以这样写

09:45.410 --> 09:46.410
这种方式呢

09:46.410 --> 09:47.410
是我们的

09:47.410 --> 09:49.410
那个 promise

09:49.410 --> 09:50.410
所以上面算一种方式

09:50.410 --> 09:52.410
我在这边都告知大家

09:52.410 --> 09:53.410
那么

09:53.410 --> 09:55.410
只有在箭头服里面

09:55.410 --> 09:57.410
this操作它会进行提升

09:57.410 --> 09:58.410
其他操作的话

09:58.410 --> 10:00.410
你都需要在外部定义一个

10:00.410 --> 10:02.410
this的别名 that

10:02.410 --> 10:03.410
这结构

10:03.410 --> 10:07.580
好

10:07.580 --> 10:09.580
我们采用最后一种模式来

10:09.580 --> 10:10.580
上面三种不差了

10:10.580 --> 10:11.580
大家的话呢

10:11.580 --> 10:13.580
之后可以看到

10:13.580 --> 10:15.580
然后紧接着我们这边

10:15.580 --> 10:17.580
then我们拿到这个数据以后

10:17.580 --> 10:18.580
我们这边能够看到

10:18.580 --> 10:20.580
你现在所给我们的一个

10:20.580 --> 10:21.580
数据返回

10:21.580 --> 10:22.580
然后呢

10:22.580 --> 10:23.580
一旦返回以后

10:23.580 --> 10:24.580
我们在这里面

10:24.580 --> 10:25.580
需要执行我们的代码

10:25.580 --> 10:26.580
我们把它换下来

10:26.580 --> 10:37.310
首先我们先看

10:37.310 --> 10:38.310
数据结构返回

10:38.310 --> 10:46.300
现在我们要跳

10:46.300 --> 10:47.300
到

10:47.300 --> 10:48.300
publish一面

10:48.300 --> 11:14.520
那编译一下

11:14.520 --> 11:23.360
打到发布一面

11:23.360 --> 11:30.060
不片

11:30.060 --> 11:32.060
弹开我们现在的一个

11:32.060 --> 11:34.060
图片选择器

11:34.060 --> 11:36.060
那么这边还是注意一下

11:36.060 --> 11:38.060
随便可以选择图片

11:38.060 --> 11:39.060
一张

11:39.060 --> 11:41.060
可以返回

11:41.060 --> 11:43.060
一张图片

11:43.060 --> 11:45.060
你再选择

11:45.060 --> 11:47.060
一张两张

11:47.060 --> 11:49.060
点开

11:49.060 --> 11:51.060
在我们的

11:51.060 --> 11:54.060
tempor5 pass里面有两张图片

11:54.060 --> 11:56.060
我们再来

11:56.060 --> 11:57.060
我们说可以选三张

11:57.060 --> 12:01.210
那我选四张呢

12:01.210 --> 12:03.210
它还是记三张

12:03.210 --> 12:04.210
OK吧

12:04.210 --> 12:05.210
所以这个上面

12:05.210 --> 12:06.210
我们需要知道

12:06.210 --> 12:07.210
同时我们应该

12:07.210 --> 12:08.210
给用户一个提示

12:08.210 --> 12:09.210
就是属于

12:09.210 --> 12:10.210
会是四张的话

12:10.210 --> 12:11.210
告诉你

12:11.210 --> 12:12.210
现在只有三张

12:12.210 --> 12:14.210
可以传送

12:14.210 --> 12:15.210
我们来做这个操作

12:15.210 --> 12:16.210
那么注意

12:16.210 --> 12:17.210
整个这个操作

12:17.210 --> 12:20.210
都是在我们当前的

12:20.210 --> 12:21.210
这个称之为

12:21.210 --> 12:29.040
tempor5 pass里面

12:29.040 --> 12:32.820
如果

12:32.820 --> 12:34.820
它并不会去接收到

12:34.820 --> 12:35.820
你四张数据

12:35.820 --> 12:36.820
所以它只会

12:36.820 --> 12:38.820
拿你三张进行传送

12:38.820 --> 12:40.820
这意思

12:40.820 --> 12:41.820
那么我们一旦

12:41.820 --> 12:42.820
接到三的时候

12:42.820 --> 12:43.820
给用户一个提示

12:43.820 --> 12:44.820
如果

12:44.820 --> 12:45.820
res.tempor5 pass

12:45.820 --> 12:47.820
tempor5 pass

12:47.820 --> 12:48.820
它里面的

12:48.820 --> 12:49.820
lens

12:49.820 --> 12:51.820
如果等于3的话

12:51.820 --> 12:53.820
我们给一个用户一个提示

12:53.820 --> 12:55.820
不管你做什么操作

12:55.820 --> 12:56.820
我们都告诉你

12:56.820 --> 12:58.820
本程序最多

12:58.820 --> 12:59.820
上传三张

12:59.820 --> 13:02.820
就是show toast

13:02.820 --> 13:07.440
菜头

13:07.440 --> 13:15.770
最多

13:15.770 --> 13:17.770
三张图片

13:17.770 --> 13:23.700
icon不需要

13:23.700 --> 13:27.780
duration

13:27.780 --> 13:28.780
一秒钟

13:28.780 --> 13:39.610
够了

13:39.610 --> 13:41.610
点开图片

13:41.610 --> 13:42.610
一

13:42.610 --> 13:43.610
二

13:43.610 --> 13:44.610
三张

13:44.610 --> 13:45.610
最多三张

13:45.610 --> 13:47.610
我们这边有提示

13:47.610 --> 13:48.610
当你现在

13:48.610 --> 13:49.610
只有两张时候

13:49.610 --> 13:50.610
它不会有提示

13:50.610 --> 13:51.610
是吧

13:51.610 --> 13:52.610
我们先证明

13:52.610 --> 13:53.610
给用户一个

13:53.610 --> 13:55.610
有好的这样的概念

13:55.610 --> 13:56.610
紧接着

13:56.610 --> 13:57.610
我们再说一下

13:57.610 --> 13:58.610
这里面

13:58.610 --> 14:00.610
我们一直强调的一点

14:00.610 --> 14:01.610
就是

14:01.610 --> 14:03.610
我们大家可以看到

14:03.610 --> 14:04.610
我们可以

14:04.610 --> 14:06.610
做一个简单的测试

14:06.610 --> 14:10.610
就是tempor5 pass

14:10.610 --> 14:12.610
这是一个图片上传

14:12.610 --> 14:13.610
到我们的

14:13.610 --> 14:15.610
微信端的一个临时路径

14:15.610 --> 14:17.610
这个临时路径

14:17.610 --> 14:18.610
它是不可以

14:18.610 --> 14:20.610
长期存储的

14:20.610 --> 14:21.610
就意味着

14:21.610 --> 14:23.610
如果你现在拿到这路径

14:23.610 --> 14:24.610
你可以在下面

14:24.610 --> 14:25.610
进行

14:25.610 --> 14:27.610
预览呈现

14:27.610 --> 14:29.610
但是你无法把这个路径

14:29.610 --> 14:32.610
放置在我们现在的

14:32.610 --> 14:33.610
数据库

14:33.610 --> 14:34.610
或者长期保存

14:34.610 --> 14:35.610
因为它后期

14:35.610 --> 14:37.610
后一个上传过程

14:37.610 --> 14:39.610
会把当前这个临时路径

14:39.610 --> 14:41.610
给封盖了

14:41.610 --> 14:42.610
也就是说

14:42.610 --> 14:43.610
取消了现在的

14:43.610 --> 14:45.610
创建一个新的出来

14:45.610 --> 14:47.610
它不是覆盖

14:47.610 --> 14:49.610
就是把这个

14:49.610 --> 14:50.610
原来删掉了

14:50.610 --> 14:51.610
生成一个新的

14:51.610 --> 14:53.610
那我们现在

14:53.610 --> 14:54.610
先把它做下去

14:54.610 --> 14:55.610
然后待会来看一下

14:55.610 --> 14:56.610
这个效果

14:57.610 --> 14:58.610
现在我们已经

14:58.610 --> 14:59.610
拿到了这个数据

14:59.610 --> 15:00.610
对吧

15:00.610 --> 15:01.610
这个数据在这个里面

15:01.610 --> 15:02.610
所以我们把

15:02.610 --> 15:03.610
这个数据

15:03.610 --> 15:09.680
保存到Stator中

15:09.680 --> 15:11.680
那么Stator里面

15:11.680 --> 15:15.310
我们去做一个

15:15.310 --> 15:16.310
简单的

15:20.260 --> 15:21.260
这里面做个

15:21.260 --> 15:23.260
数组空数组

15:23.260 --> 15:27.600
我们注视表示为

15:27.600 --> 15:29.600
用户

15:29.600 --> 15:31.600
选择的

15:31.600 --> 15:36.550
图片数组级

15:36.550 --> 15:48.340
在这

15:48.340 --> 15:50.340
它是在Zen里面有箭头

15:50.340 --> 15:52.340
但是我们为了确保

15:52.340 --> 15:53.340
我们或者说

15:53.340 --> 15:54.340
做一个统一

15:54.340 --> 15:55.340
所有在回掉函数

15:55.340 --> 15:56.340
或者说

15:56.340 --> 15:57.340
结构中的

15:57.340 --> 15:58.340
我们都用Z来表述

15:58.340 --> 15:59.340
所以我们前面

15:59.340 --> 16:00.340
订一个Z

16:00.340 --> 16:04.480
我们在这写

16:04.480 --> 16:05.480
Z点

16:05.480 --> 16:06.480
Stator

16:06.480 --> 16:10.500
修改里面的

16:10.500 --> 16:14.510
Imagers

16:14.510 --> 16:16.510
RES

16:16.510 --> 16:17.510
是这边的

16:17.510 --> 16:18.510
是这边

16:18.510 --> 16:19.510
RES点

16:19.510 --> 16:23.530
Template Files

16:23.530 --> 16:24.530
拿过来

16:24.530 --> 16:27.930
我们把它放到

16:27.930 --> 16:29.930
Imager里面取

16:30.930 --> 16:31.930
然后呢

16:31.930 --> 16:32.930
我们页面中

16:32.930 --> 16:33.930
我们页面中

16:33.930 --> 16:35.930
这一块内容的呈现

16:35.930 --> 16:36.930
就是靠Imagers来的

16:36.930 --> 16:37.930
所以我们先把

16:37.930 --> 16:38.930
页面的这块

16:38.930 --> 16:42.370
呈现出来

16:42.370 --> 16:43.370
我们走到

16:43.370 --> 16:44.370
它现在的

16:44.370 --> 16:45.370
这个部分

16:45.370 --> 16:46.370
然后把这个

16:46.370 --> 16:47.370
多余的

16:47.370 --> 16:48.370
我们做

16:48.370 --> 16:49.370
演示的两块

16:49.370 --> 16:55.260
删掉

16:55.260 --> 16:56.260
然后我们在这边

16:56.260 --> 16:57.260
做

16:57.260 --> 16:59.260
循环

16:59.260 --> 17:01.260
当前的

17:01.260 --> 17:03.260
Stator里面的

17:03.260 --> 17:05.260
Imagers

17:05.260 --> 17:06.260
然后点

17:06.260 --> 17:07.260
Map

17:07.260 --> 17:12.690
Item

17:12.690 --> 17:14.690
Dohaw

17:14.690 --> 17:15.690
Index

17:15.690 --> 17:19.450
做一个函数的返回

17:20.450 --> 17:21.450
函数返回内容

17:21.450 --> 17:22.450
就是当前

17:22.450 --> 17:23.450
这个

17:23.450 --> 17:28.000
爆魂线

17:28.000 --> 17:29.000
原因就是

17:29.000 --> 17:30.000
需要你在当前

17:30.000 --> 17:31.000
这上面

17:31.000 --> 17:32.000
订个Key

17:32.000 --> 17:34.570
我们就把

17:34.570 --> 17:35.570
当前Index

17:35.570 --> 17:36.570
拿过来

17:36.570 --> 17:37.570
这个Key

17:37.570 --> 17:38.570
你可以这样写

17:38.570 --> 17:40.570
你也可以写成

17:40.570 --> 17:43.780
TaroKey

17:43.780 --> 17:45.780
这样的格式都可以

17:45.780 --> 17:46.780
那么其作用呢

17:46.780 --> 17:47.780
主要的

17:47.780 --> 17:48.780
并不是我们

17:48.780 --> 17:49.780
进行传旨

17:49.780 --> 17:50.780
而是让系统

17:50.780 --> 17:51.780
能够指导

17:51.780 --> 17:52.780
每一个View

17:52.780 --> 17:53.780
有一个单独的

17:53.780 --> 17:55.780
唯一的标识符

17:55.780 --> 17:56.780
因为最后

17:56.780 --> 17:57.780
生成页面的时候

17:57.780 --> 17:59.780
这个Key是没有的

17:59.780 --> 18:00.780
第二步呢

18:00.780 --> 18:01.780
我们改一下

18:01.780 --> 18:02.780
里面的部分

18:02.780 --> 18:03.780
然后首先

18:03.780 --> 18:04.780
我们现在

18:04.780 --> 18:05.780
需要看到的是

18:05.780 --> 18:06.780
这张图片

18:06.780 --> 18:07.780
是吧

18:07.780 --> 18:08.780
那么

18:08.780 --> 18:09.780
我们所有内容

18:09.780 --> 18:10.780
都存在了

18:10.780 --> 18:11.780
当前的Key里面

18:11.780 --> 18:12.780
所以我们现在

18:12.780 --> 18:13.780
从这里面拿

18:13.780 --> 18:18.300
Imagers里面了

18:18.300 --> 18:19.300
那么我们从这边

18:19.300 --> 18:20.300
把数据拿出来

18:20.300 --> 18:21.300
它是在

18:21.300 --> 18:23.300
当前的Item

18:23.300 --> 18:25.300
每一项里面

18:25.300 --> 18:27.300
每一项是什么

18:27.300 --> 18:28.300
这边我们要看一下

18:28.300 --> 18:30.300
当前的每一项

18:30.300 --> 18:36.110
我们

18:36.110 --> 18:38.110
现在先把它放空

18:38.110 --> 18:39.110
我们到

18:39.110 --> 18:41.110
Imagers里面看一下

18:41.110 --> 18:42.110
它每一项

18:42.110 --> 18:46.770
在上面呈现一下

18:46.770 --> 18:49.270
其实

18:49.270 --> 18:52.710
我们选择

18:52.710 --> 18:54.710
两张

18:54.710 --> 18:56.710
看这儿啊

18:56.710 --> 18:58.710
Imagers里面

18:58.710 --> 18:59.710
它其实每一项

18:59.710 --> 19:00.710
都是一个路径

19:00.710 --> 19:01.710
它其实进去的

19:01.710 --> 19:02.710
每一项

19:02.710 --> 19:03.710
它都是

19:03.710 --> 19:04.710
已经是一个路径了

19:04.710 --> 19:05.710
所以

19:05.710 --> 19:06.710
我在这边操作的时候

19:06.710 --> 19:07.710
我只要

19:07.710 --> 19:15.500
把它的Item拿出来

19:15.500 --> 19:16.500
对吧

19:16.500 --> 19:17.500
再来看一下

19:17.500 --> 19:24.660
现在是什么都没有的

19:24.660 --> 19:26.660
然后选择图片

19:26.660 --> 19:30.220
选两张

19:30.220 --> 19:31.220
咦

19:31.220 --> 19:32.220
咱没有发觉

19:32.220 --> 19:33.220
它只有呈现出

19:33.220 --> 19:35.220
一张过来

19:35.220 --> 19:36.220
是吧

19:36.220 --> 19:37.220
为什么就一张呢

19:37.220 --> 19:39.220
我们再来试一下

19:39.220 --> 19:40.220
我选一张

19:40.220 --> 19:42.220
没问题

19:42.220 --> 19:43.220
我再选一张

19:43.220 --> 19:45.220
两张

19:46.220 --> 19:47.220
我们再来试一下

19:47.220 --> 19:48.220
一张

19:48.220 --> 19:49.220
两张

19:49.220 --> 19:50.220
三张

19:50.220 --> 19:52.220
点这儿

19:52.220 --> 19:53.220
有吧

19:53.220 --> 19:54.220
一张的话

19:54.220 --> 19:55.220
其实是刚才

19:55.220 --> 19:57.220
我们在存储过程中的时候

19:57.220 --> 19:59.220
我们选择的时候

19:59.220 --> 20:01.220
可能有一张漏了

20:01.220 --> 20:02.220
咱们看到了

20:02.220 --> 20:03.220
现在我这个

20:03.220 --> 20:05.220
已经呈现出来了

20:05.220 --> 20:06.220
此时

20:06.220 --> 20:07.220
我们大家来注意一下

20:07.220 --> 20:08.220
我们把刚才

20:08.220 --> 20:09.220
那个功能

20:09.220 --> 20:10.220
演示一下

20:10.220 --> 20:12.220
就是那个图片的路径

20:12.220 --> 20:14.220
是否还有

20:14.220 --> 20:15.220
首先

20:15.220 --> 20:16.220
我们现在

20:16.220 --> 20:17.220
确保现在

20:17.220 --> 20:18.220
这里边的结构

20:18.220 --> 20:19.220
我们重新刷新一下

20:19.220 --> 20:26.540
是没有任何的图片的

20:26.540 --> 20:27.540
你来看

20:27.540 --> 20:28.540
首先我选

20:28.540 --> 20:30.540
第一张图片

20:30.540 --> 20:32.540
打开

20:32.540 --> 20:33.540
把这个图片路径

20:33.540 --> 20:35.540
我们人工的手动

20:35.540 --> 20:43.100
记录一下

20:43.100 --> 20:45.100
这是这张图片的路径

20:45.100 --> 20:46.100
我现在呈现的

20:46.100 --> 20:47.100
就是这张

20:47.100 --> 20:53.870
好

20:53.870 --> 20:54.870
紧接着

20:54.870 --> 20:55.870
不要动

20:55.870 --> 20:56.870
紧接着我这边

20:56.870 --> 20:57.870
再选第二张

20:57.870 --> 20:58.870
这边改了

20:58.870 --> 20:59.870
对吧

20:59.870 --> 21:00.870
此时

21:00.870 --> 21:01.870
我的问题来了

21:01.870 --> 21:02.870
我此时

21:02.870 --> 21:03.870
页面中

21:03.870 --> 21:05.870
我把这个路径

21:05.870 --> 21:07.870
直接换成

21:07.870 --> 21:08.870
我们之前的

21:08.870 --> 21:09.870
首先你来看一下

21:09.870 --> 21:10.870
我第二个路径

21:10.870 --> 21:11.870
我们把

21:11.870 --> 21:12.870
第二个路径拿出来

21:12.870 --> 21:15.820
你来看一下

21:15.820 --> 21:16.820
它和第一个路径

21:16.820 --> 21:17.820
是一样的

21:17.820 --> 21:27.370
看

21:27.370 --> 21:28.370
都不一样

21:28.370 --> 21:29.370
名称是吧

21:29.370 --> 21:30.370
那我把

21:30.370 --> 21:32.370
第一个路径的内容

21:32.370 --> 21:34.370
我往这再放一下

21:34.370 --> 21:37.260
你看

21:37.260 --> 21:38.260
我直接固定

21:38.260 --> 21:43.360
上去这个路径

21:43.360 --> 21:45.360
是我之前传的

21:45.360 --> 21:47.360
那我现在来看一下

21:47.360 --> 21:48.360
页面了

21:48.360 --> 21:49.360
在这

21:51.360 --> 21:53.360
它这个会不会有

21:53.360 --> 21:56.630
运行了

21:56.630 --> 21:57.630
看

21:57.630 --> 21:58.630
再刷新一下

21:58.630 --> 22:05.870
有吗

22:05.870 --> 22:06.870
没有

22:07.870 --> 22:08.870
那就告诉你

22:08.870 --> 22:09.870
这个路径

22:09.870 --> 22:11.870
它只是一个临时路径

22:11.870 --> 22:12.870
我们可以在

22:12.870 --> 22:14.870
现在的循环过程中

22:14.870 --> 22:16.870
现在的读取过程中

22:16.870 --> 22:17.870
去拿到

22:17.870 --> 22:19.870
但是你无法做保留

22:19.870 --> 22:20.870
所以

22:20.870 --> 22:21.870
当你后面

22:21.870 --> 22:22.870
这个路径出来的时候

22:22.870 --> 22:23.870
这个路径

22:23.870 --> 22:24.870
就无效了

22:24.870 --> 22:25.870
ok吧

22:25.870 --> 22:26.870
这个逻辑需要理情

22:27.870 --> 22:28.870
紧接着

22:28.870 --> 22:29.870
我们继续往下

22:30.870 --> 22:31.870
所以

22:31.870 --> 22:32.870
我们现在

22:32.870 --> 22:33.870
所能看到的

22:33.870 --> 22:34.870
只是一个预览

22:34.870 --> 22:35.870
不用关心

22:35.870 --> 22:36.870
它现在

22:36.870 --> 22:37.870
究竟是

22:37.870 --> 22:38.870
什么样的状态

22:39.870 --> 22:40.870
预览

22:40.870 --> 22:41.870
看一下

22:41.870 --> 22:42.870
你刚才选的图片

22:42.870 --> 22:43.870
是这样的吗

22:43.870 --> 22:44.870
上传了吗

22:44.870 --> 22:45.870
没有

22:45.870 --> 22:46.870
只是看一下

22:46.870 --> 22:47.870
第二步

22:47.870 --> 22:48.870
我们现在

22:48.870 --> 22:49.870
可以对它进行

22:49.870 --> 22:50.870
重要

22:50.870 --> 22:51.870
你一旦

22:51.870 --> 22:52.870
这边做好以后

22:52.870 --> 22:53.870
你这边去做操作

22:53.870 --> 22:55.870
你一旦发布朋友圈

22:55.870 --> 22:56.870
这不就

22:56.870 --> 22:57.870
一定要这里面

22:57.870 --> 22:58.870
做一个事情的

22:58.870 --> 22:59.870
因为现在

22:59.870 --> 23:00.870
我们程序所得到的

23:00.870 --> 23:02.870
都是这个临时路径

23:02.870 --> 23:04.870
你如果光这样

23:04.870 --> 23:06.870
你把它进行发布

23:06.870 --> 23:07.870
那这时候

23:07.870 --> 23:08.870
你所存储的是什么

23:08.870 --> 23:09.870
是你自己写的

23:09.870 --> 23:10.870
这段文本

23:10.870 --> 23:11.870
和

23:11.870 --> 23:13.870
这个临时路径

23:13.870 --> 23:14.870
刚才我们讲过了

23:14.870 --> 23:15.870
这个临时路径

23:15.870 --> 23:16.870
不可以存

23:16.870 --> 23:17.870
所以

23:17.870 --> 23:19.870
在这种情况下

23:19.870 --> 23:20.870
你必须要做的是

23:20.870 --> 23:21.870
当你图片

23:21.870 --> 23:24.870
已经显示出来以后的话

23:24.870 --> 23:25.870
那么此时

23:25.870 --> 23:27.870
我们就可以把这个图片

23:27.870 --> 23:29.870
存到服务去云端

23:29.870 --> 23:30.870
这种写法

23:30.870 --> 23:32.870
也可以在你发布

23:32.870 --> 23:33.870
社交圈的时候

23:33.870 --> 23:35.870
把它存到云端

23:35.870 --> 23:36.870
都可以

23:36.870 --> 23:37.870
你说老师

23:37.870 --> 23:38.870
那我这个不要呢

23:38.870 --> 23:39.870
你删的时候删云端

23:40.870 --> 23:41.870
对吧

23:41.870 --> 23:42.870
这逻辑

23:42.870 --> 23:43.870
好

23:43.870 --> 23:44.870
那我们现在

23:44.870 --> 23:45.870
来看一下

23:45.870 --> 23:46.870
我们现在就以

23:46.870 --> 23:47.870
第一种方式来做

23:47.870 --> 23:48.870
就是

23:48.870 --> 23:50.870
当我发布到这里的时候

23:50.870 --> 23:51.870
我直接进行

23:51.870 --> 23:53.870
我们所谓的上传

23:53.870 --> 23:54.870
这个是可以的

23:54.870 --> 23:55.870
继续

23:56.870 --> 23:57.870
我们

23:57.870 --> 23:59.870
继续回到我们这里面

24:01.870 --> 24:02.870
做云端的

24:02.870 --> 24:04.870
这个数据的操作

24:04.870 --> 24:06.870
那么这边要注意

24:06.870 --> 24:08.870
因为我们的图片

24:08.870 --> 24:10.870
它是一个速度结构

24:10.870 --> 24:12.870
但云的上传

24:12.870 --> 24:14.870
它只能单张单张做

24:14.870 --> 24:16.870
所以我们这边必须

24:16.870 --> 24:17.870
要完成的是

24:17.870 --> 24:18.870
所谓的

24:18.870 --> 24:19.870
一个循环的

24:19.870 --> 24:21.870
云端结构的操作

24:22.870 --> 24:23.870
好

24:23.870 --> 24:27.380
我们写一个方法出来

24:27.380 --> 24:29.380
我们写一个方法

24:29.380 --> 24:31.380
我们称之为

24:31.380 --> 24:32.380
那个

24:32.380 --> 24:37.100
set

24:37.100 --> 24:40.180
imager

24:40.180 --> 24:41.180
to

24:41.180 --> 24:48.800
clouder

24:48.800 --> 24:52.140
将

24:52.140 --> 24:53.140
图片

24:54.140 --> 24:55.140
存储到

24:56.140 --> 24:57.140
云端

24:58.140 --> 25:00.140
那么我们在这边就做了

25:01.140 --> 25:02.140
首先我们把它存到了

25:02.140 --> 25:04.140
当前的这个数据中

25:04.140 --> 25:06.140
当你存完以后

25:06.140 --> 25:07.140
我们注意

25:07.140 --> 25:09.140
才能做这个事

25:09.140 --> 25:11.140
所以我们在它

25:11.140 --> 25:14.140
进行完成的回调函数中

25:14.140 --> 25:16.140
然后去调用当前

25:16.140 --> 25:25.140
下面的这个方法

25:25.140 --> 25:26.140
数据

25:26.140 --> 25:27.140
存储到

25:28.140 --> 25:29.140
云端

25:29.140 --> 25:31.140
是这个逻辑

25:31.140 --> 25:33.140
如果你直接写的话

25:33.140 --> 25:35.140
你不一定能够去得到这个数据

25:35.140 --> 25:36.140
为什么

25:36.140 --> 25:41.630
我们再次强调

25:41.630 --> 25:46.630
是

25:46.630 --> 25:48.630
异步操作

25:48.630 --> 25:51.780
OK吧

25:51.780 --> 25:52.780
set

25:52.780 --> 25:53.780
imager

25:53.780 --> 25:54.780
to

25:54.780 --> 25:55.780
clouder

25:55.780 --> 25:57.780
紧接着我们继续

25:57.780 --> 25:58.780
setimager

25:58.780 --> 25:59.780
to

25:59.780 --> 26:00.780
clouder

26:00.780 --> 26:01.780
我们上传云

26:01.780 --> 26:07.290
来

26:08.290 --> 26:10.290
我们把整个的

26:10.290 --> 26:15.420
我们不销传了

26:15.420 --> 26:16.420
因为它整个数据

26:16.420 --> 26:17.420
全在imager

26:17.420 --> 26:18.420
里面了

26:18.420 --> 26:20.420
所以从这边可以直接得到

26:20.420 --> 26:21.420
对吧

26:21.420 --> 26:23.420
首先我们先拿到

26:23.420 --> 26:25.420
imagers

26:25.420 --> 26:26.420
它从哪里来

26:26.420 --> 26:27.420
this

26:27.420 --> 26:28.420
点

26:28.420 --> 26:29.420
它可以用this了

26:29.420 --> 26:32.730
this点

26:32.730 --> 26:34.730
stater.imagers

26:34.730 --> 26:35.730
里面拿出来

26:35.730 --> 26:37.730
所有的图片修举

26:37.730 --> 26:38.730
我们称之为

26:38.730 --> 26:40.730
imagers

26:40.730 --> 26:44.510
data

26:44.510 --> 26:45.510
然后

26:45.510 --> 26:49.270
我们经过循环

26:49.270 --> 26:52.480
imagers

26:52.480 --> 26:53.480
map

26:53.480 --> 26:55.480
我们这边换一个

26:55.480 --> 26:57.480
我们用for的结构来看一下

26:57.480 --> 26:59.480
换一种for的写法

26:59.480 --> 27:01.480
我们i硬

27:01.480 --> 27:03.480
而我们做一个

27:03.480 --> 27:05.480
这个叫做imagers

27:05.480 --> 27:06.480
data

27:06.480 --> 27:08.480
对它进行循环结构操作

27:08.480 --> 27:09.480
这样写

27:09.480 --> 27:13.180
将图片

27:13.180 --> 27:15.180
上传至

27:15.180 --> 27:17.180
存储

27:17.180 --> 27:19.180
云存储空间

27:19.180 --> 27:26.780
terral

27:26.780 --> 27:27.780
点

27:27.780 --> 27:29.780
clouder

27:29.780 --> 27:31.780
点

27:31.780 --> 27:32.780
up

27:32.780 --> 27:33.780
load of file

27:33.780 --> 27:35.780
上传文件

27:35.780 --> 27:36.780
在做这个操作的时候

27:36.780 --> 27:38.780
你一定要确保

27:38.780 --> 27:40.780
你在你的app点

27:40.780 --> 27:43.780
jsx里面的最上面

27:43.780 --> 27:45.780
进行云出使化的注册

27:45.780 --> 27:46.780
注册过

27:46.780 --> 27:48.780
要写上这句话

27:48.780 --> 27:49.780
clouder

27:49.780 --> 27:50.780
terral

27:50.780 --> 27:51.780
clouder init

27:51.780 --> 27:54.780
告诉它你现在云端的一个

27:54.780 --> 27:56.780
环境名称

27:56.780 --> 27:58.780
云端环境名称

27:58.780 --> 28:00.780
打开云开发

28:00.780 --> 28:02.780
找到它的设置

28:02.780 --> 28:04.780
在里面就能看到你当前

28:04.780 --> 28:09.470
所需要操作的那个环境ID

28:09.470 --> 28:10.470
有了这一步

28:10.470 --> 28:14.100
你才能继续往下

28:14.100 --> 28:17.990
这边我们写item

28:17.990 --> 28:19.990
然后apploader clouder

28:19.990 --> 28:21.990
代表的是apploader file

28:21.990 --> 28:23.990
上传文件

28:23.990 --> 28:25.990
在里面首先第一个

28:25.990 --> 28:29.990
clouder path

28:29.990 --> 28:31.990
就是我们所谓的

28:31.990 --> 28:33.990
本地文件

28:33.990 --> 28:35.990
文件名是什么

28:35.990 --> 28:36.990
我们做一个

28:36.990 --> 28:38.990
所以我们写出的是

28:38.990 --> 28:41.990
我们写一个简单的日期的

28:41.990 --> 28:44.990
that我们写一个top

28:44.990 --> 28:46.990
to street

28:46.990 --> 28:50.880
把当前的时间给它

28:50.880 --> 28:54.880
做一个时间的一个格式化

28:54.880 --> 28:58.640
待会儿写

28:58.640 --> 29:02.850
就写this吧

29:02.850 --> 29:03.850
第二个

29:03.850 --> 29:06.850
fi path

29:06.850 --> 29:08.850
我们写出的就是

29:08.850 --> 29:10.850
images

29:10.850 --> 29:11.850
data

29:11.850 --> 29:12.850
注意

29:12.850 --> 29:13.850
它是速足

29:13.850 --> 29:14.850
所以我们通过里面

29:14.850 --> 29:16.850
拿出

29:16.850 --> 29:17.850
item

29:17.850 --> 29:19.850
这个循环来

29:19.850 --> 29:22.220
拿i

29:22.220 --> 29:23.220
它不是一项

29:23.220 --> 29:24.220
我们就拿它

29:24.220 --> 29:29.520
现在里面的索引来

29:29.520 --> 29:33.540
每项可以拿到

29:33.540 --> 29:34.540
再往下

29:34.540 --> 29:38.230
z

29:38.230 --> 29:42.310
res

29:42.310 --> 29:43.310
我们做一个

29:43.310 --> 29:44.310
这里面进到了

29:44.310 --> 29:46.310
我们现在的

29:46.310 --> 29:48.310
那个叫什么

29:48.310 --> 29:49.310
res集合中

29:49.310 --> 29:50.310
所以我们外面

29:50.310 --> 29:51.310
data

29:51.310 --> 29:52.310
这是回调里面了

29:52.310 --> 29:57.800
然后我们里面

29:57.800 --> 29:58.800
可以做的是

29:58.800 --> 30:09.660
that.setData

30:09.660 --> 30:12.610
待会儿

30:12.610 --> 30:13.610
我们

30:13.610 --> 30:14.610
这个

30:14.610 --> 30:15.610
我们先看一下

30:15.610 --> 30:16.610
这个数据

30:16.610 --> 30:17.610
然后我们把这里面的

30:17.610 --> 30:18.610
填充一下那部分

30:18.610 --> 30:22.500
res

30:22.500 --> 30:23.500
先看一下吧

30:23.500 --> 30:25.500
这个我们写一下

30:25.500 --> 30:27.500
传完以后

30:27.500 --> 30:29.500
它会返回给我的一个结构

30:29.500 --> 30:30.500
然后这边

30:30.500 --> 30:32.500
我们就写上的是

30:33.500 --> 30:34.500
cloud

30:35.500 --> 30:36.500
back

30:37.500 --> 30:38.500
好吧

30:38.500 --> 30:39.500
先看以后以后再做

30:39.500 --> 30:41.810
然后我现在

30:41.810 --> 30:43.810
一旦完成云端的

30:43.810 --> 30:44.810
我们的

30:44.810 --> 30:45.810
不是云端

30:45.810 --> 30:46.810
一旦完成我现在的

30:46.810 --> 30:47.810
选择以后

30:47.810 --> 30:48.810
我这边就可以

30:48.810 --> 30:49.810
做到的是

30:49.810 --> 30:50.810
让把数据存储

30:50.810 --> 30:51.810
到我们的预览界面

30:51.810 --> 30:52.810
然后同时

30:52.810 --> 30:54.810
调起我现在的

30:54.810 --> 30:55.810
一个云端的存储

30:55.810 --> 30:57.810
云端存储里面的话

30:57.810 --> 30:58.810
我们看到

30:58.810 --> 30:59.810
这边有一个

30:59.810 --> 31:00.810
简单的

31:00.810 --> 31:01.810
主要是

31:01.810 --> 31:02.810
做的是

31:02.810 --> 31:03.810
我们把整个

31:03.810 --> 31:04.810
这个代码

31:04.810 --> 31:05.810
写出来

31:05.810 --> 31:06.810
然后的话完成

31:06.810 --> 31:07.810
不断的循环

31:07.810 --> 31:09.810
把我们majus里面数据

31:09.810 --> 31:10.810
拿到这个

31:10.810 --> 31:11.810
临时文件以后

31:11.810 --> 31:12.810
我们去完成

31:12.810 --> 31:13.810
现在的一个

31:13.810 --> 31:14.810
云端传

31:14.810 --> 31:15.810
传送

31:15.810 --> 31:16.810
云端传送里面呢

31:16.810 --> 31:17.810
我们这边要定义一个

31:17.810 --> 31:19.810
叫做to time

31:19.810 --> 31:21.810
时间的一个更名

31:21.810 --> 31:22.810
这个其实很简单

31:22.810 --> 31:23.810
我们做一个

31:23.810 --> 31:25.810
时间的定义

31:25.810 --> 31:27.810
把它取一个名称

31:27.810 --> 31:28.810
然后面是你

31:28.810 --> 31:29.810
当前的

31:29.810 --> 31:31.810
你现在图片在哪里

31:31.810 --> 31:32.810
传送以后

31:32.810 --> 31:33.810
回来

31:33.810 --> 31:34.810
那我们定一下这个

31:34.810 --> 31:43.050
时间日期转换

31:43.050 --> 31:53.980
它传送一个时间进来

31:53.980 --> 31:54.980
Time

31:56.980 --> 31:57.980
Let

31:58.980 --> 31:59.980
Rendle

32:00.980 --> 32:01.980
Mass点

32:02.980 --> 32:03.980
Follow

32:03.980 --> 32:04.980
我们给一个Mass

32:04.980 --> 32:07.800
随机

32:07.800 --> 32:14.630
我们从

32:15.630 --> 32:16.630
最大值

32:16.630 --> 32:17.630
减最小值

32:17.630 --> 32:18.630
然后的话

32:18.630 --> 32:20.630
去加上一个最小值

32:20.630 --> 32:22.940
随机数

32:22.940 --> 32:25.510
然后呢

32:25.510 --> 32:27.510
我们这边给的是

32:27.510 --> 32:28.510
STR

32:28.510 --> 32:29.510
一个字服串

32:29.510 --> 32:32.210
Rendle

32:32.210 --> 32:33.210
加

32:33.210 --> 32:39.620
Time

32:39.620 --> 32:40.620
Get

32:40.620 --> 32:41.620
Million

32:42.620 --> 32:45.060
Time是我们的

32:45.060 --> 32:46.060
一个当前的时间

32:46.060 --> 32:47.060
所以我们

32:47.060 --> 32:52.990
然后去加上

32:53.990 --> 32:54.990
点Png

32:54.990 --> 32:57.560
Return

32:57.560 --> 32:58.560
STR

32:58.560 --> 33:01.380
这个你先打不出来

33:01.380 --> 33:02.380
原因很简单

33:02.380 --> 33:03.380
因为他并不知道

33:03.380 --> 33:04.380
这个数据传进来

33:04.380 --> 33:05.380
是什么东西

33:05.380 --> 33:06.380
但是我们看到的

33:06.380 --> 33:07.380
其实传进来是一个

33:07.380 --> 33:08.380
data对象

33:08.380 --> 33:09.380
对吧

33:09.380 --> 33:10.380
所以他可以直接这样操作

33:10.380 --> 33:11.380
我们呢

33:11.380 --> 33:14.380
可以看一下这个结构

33:14.380 --> 33:16.380
我把它现在直接

33:16.380 --> 33:17.380
先下面不用做

33:17.380 --> 33:18.380
然后呢

33:18.380 --> 33:19.380
我们来看一下

33:19.380 --> 33:21.380
这个打回来的一个结构

33:21.380 --> 33:23.380
先做它一个测试

33:23.380 --> 33:27.460
在这边

33:27.460 --> 33:29.460
我们console.log

33:29.460 --> 33:31.460
把这个代码拿出来

33:31.460 --> 33:35.890
对吧

33:35.890 --> 33:36.890
将图变存到云

33:36.890 --> 33:38.890
其实我们只是做一个显示

33:39.890 --> 33:41.890
它只是本地做个预览

33:41.890 --> 33:45.480
看

33:45.480 --> 33:46.480
是不是有一个

33:46.480 --> 33:48.480
这样的一个标识出来了

33:48.480 --> 33:50.480
再来一次

33:50.480 --> 33:51.480
对吧

33:51.480 --> 33:52.480
所以他会返回过

33:52.480 --> 33:53.480
这样一个标识

33:53.480 --> 33:55.480
我就拿这个标识用

33:55.480 --> 34:03.100
好

34:03.100 --> 34:04.100
那么这样的话呢

34:04.100 --> 34:06.100
我们就可以上传上去了

34:06.100 --> 34:07.100
上传上去

34:07.100 --> 34:09.100
我们来看一下res的返回

34:09.100 --> 34:13.980
刷一下

34:13.980 --> 34:21.960
选择图片

34:21.960 --> 34:24.960
选择这个小电视机

34:24.960 --> 34:25.960
看

34:25.960 --> 34:26.960
这边立马给我返回了

34:26.960 --> 34:27.960
一个数据

34:27.960 --> 34:28.960
这个数据里面

34:28.960 --> 34:30.960
就会有一个fiID

34:30.960 --> 34:31.960
是不是

34:31.960 --> 34:32.960
这个数据其实就是

34:32.960 --> 34:33.960
我现在所需要进行

34:33.960 --> 34:35.960
后期存储数据库

34:35.960 --> 34:37.960
所用到的一个地址

34:37.960 --> 34:39.960
这是一个在云端

34:39.960 --> 34:41.960
因为它存在云端了

34:41.960 --> 34:43.960
所以它可以长期存储

34:43.960 --> 34:45.960
所以这个地址是真是有效的

34:45.960 --> 34:46.960
这个结构

34:46.960 --> 34:47.960
对吧

34:47.960 --> 34:49.960
所以在这里边有

34:49.960 --> 34:51.960
那么我们把它给存到

34:51.960 --> 34:53.960
我们现在的一个

34:53.960 --> 34:56.960
images里面去

34:56.960 --> 34:58.960
我们可以这样做

34:58.960 --> 35:01.960
我们在最外部去定义一个

35:01.960 --> 35:02.960
我们的长量值

35:02.960 --> 35:04.960
然后把我们当前的

35:04.960 --> 35:06.960
所有数据全存在那个里面

35:06.960 --> 35:09.960
我们把现在所拿到的res

35:09.960 --> 35:11.960
全存在外部

35:11.960 --> 35:13.960
存在这个长量里面

35:13.960 --> 35:14.960
conster

35:14.960 --> 35:15.960
你比如说写上

35:15.960 --> 35:17.960
现在的data

35:17.960 --> 35:19.960
我们的数据info

35:19.960 --> 35:22.850
你这边定义一下

35:22.850 --> 35:24.850
比如说images

35:24.850 --> 35:30.270
user

35:30.270 --> 35:32.270
对象

35:32.270 --> 35:34.270
当前的内容

35:34.270 --> 35:42.190
我们可以全定义出来

35:42.190 --> 35:44.190
我们可以定一个canIuse

35:44.190 --> 35:46.190
这个是干嘛呢

35:46.190 --> 35:48.190
Taro有这样一个功能

35:48.190 --> 35:49.190
叫canIuse

35:49.190 --> 35:50.190
我们介绍过

35:50.190 --> 35:52.190
它会返回一个当前

35:52.190 --> 35:54.190
是否可以使用

35:54.190 --> 35:55.190
后面这样的一个

35:55.190 --> 35:56.190
组件属性

35:56.190 --> 35:58.190
或者是对象的这样一个功能

35:58.190 --> 35:59.190
所以我们现在

35:59.190 --> 36:01.190
这边直接可以这样

36:02.190 --> 36:06.190
button.open

36:06.190 --> 36:09.190
type

36:09.190 --> 36:13.190
然后点getUseInfo

36:13.190 --> 36:15.190
你可以给出这样一个值

36:15.190 --> 36:16.190
它可以判断

36:16.190 --> 36:18.190
按有现在有一个

36:18.190 --> 36:19.190
open type

36:19.190 --> 36:20.190
是否可以操作

36:20.190 --> 36:22.190
我们的getUseInfo

36:22.190 --> 36:23.190
这个操作

36:23.190 --> 36:24.190
如果可以的话

36:24.190 --> 36:25.190
它会返回true

36:25.190 --> 36:26.190
isLike

36:26.190 --> 36:31.740
我们在外部定一个这个值

36:31.740 --> 36:33.740
然后我们在

36:33.740 --> 36:34.740
现在在完成

36:34.740 --> 36:36.740
整个操作的过程中

36:36.740 --> 36:37.740
我们把当前的

36:37.740 --> 36:38.740
这个元素

36:38.740 --> 36:40.740
全部存储到

36:40.740 --> 36:41.740
那个值里去

36:41.740 --> 36:42.740
所以

36:42.740 --> 36:49.740
dataInfo.imagesPush

36:49.740 --> 36:52.740
我们res.fiid

36:52.740 --> 36:54.740
这边要注意

36:55.740 --> 36:56.740
由于我把整个

36:56.740 --> 36:58.740
这concept定义在了

36:58.740 --> 36:59.740
class这个的外部

36:59.740 --> 37:01.740
所以你不能在

37:01.740 --> 37:02.740
我们的这里

37:02.740 --> 37:05.740
你去用this

37:05.740 --> 37:06.740
如果你这样用的话

37:06.740 --> 37:07.740
它会告诉你

37:07.740 --> 37:10.740
它找不到这个dataInfo的

37:10.740 --> 37:11.740
你来看一下

37:11.740 --> 37:22.250
看到吗

37:22.250 --> 37:23.250
它告诉你

37:23.250 --> 37:24.250
它是没法找到

37:24.250 --> 37:26.250
这个属性images

37:26.250 --> 37:28.250
所以它这个没有

37:28.250 --> 37:30.250
所以你必须把它给删掉

37:30.250 --> 37:31.250
这时候呢

37:31.250 --> 37:32.250
它会去寻找

37:32.250 --> 37:34.250
这个叫做dataInfo

37:34.250 --> 37:35.250
那么它其实

37:35.250 --> 37:36.250
就是我们外部定义的

37:36.250 --> 37:37.250
这个长量

37:37.250 --> 37:40.140
紧接着

37:40.140 --> 37:43.140
我们有了这个值以后

37:43.140 --> 37:44.140
那你只要有

37:44.140 --> 37:45.140
两个图片

37:45.140 --> 37:46.140
它就会进行两次循环

37:46.140 --> 37:48.140
我们在最后完成

37:48.140 --> 37:50.140
这个for语句的后面

37:50.140 --> 37:53.830
我们打印一下

37:53.830 --> 37:54.830
我们来看一下

37:54.830 --> 37:56.830
这个叫做

37:56.830 --> 38:04.690
dataInfo对象

38:04.690 --> 38:10.820
dataInfo对象

38:10.820 --> 38:11.820
我们运行一下

38:11.820 --> 38:12.820
主要前面这边

38:12.820 --> 38:14.820
我们就没有任何输出了

38:14.820 --> 38:16.820
我们把这个语句的话

38:16.820 --> 38:27.640
隐藏掉

38:27.640 --> 38:29.640
选择图片

38:29.640 --> 38:31.640
一 二

38:31.640 --> 38:36.640
打开

38:36.640 --> 38:37.640
我们看

38:37.640 --> 38:38.640
这个是dataInfo

38:38.640 --> 38:40.640
是不是两张图片进去了

38:40.640 --> 38:42.640
而这两张图片

38:42.640 --> 38:43.640
其实是我现在

38:43.640 --> 38:46.640
已经上传完cloud以后

38:46.640 --> 38:48.640
所返回的链接

38:48.640 --> 38:49.640
是吧

38:49.640 --> 38:52.140
所以表示

38:52.140 --> 38:53.140
这个操作已经完成了

38:53.140 --> 38:55.140
我把数据存在了我们的

38:55.140 --> 38:57.140
叫dataInfo里面

38:58.140 --> 39:00.140
好

39:00.140 --> 39:01.140
第二步

39:01.140 --> 39:05.120
我们去获取

39:05.120 --> 39:08.120
现在用户输入的内容

39:08.120 --> 39:10.120
在哪

39:10.120 --> 39:11.120
两种方式

39:11.120 --> 39:13.120
我们都可以获取到

39:13.120 --> 39:14.120
第一种的话

39:14.120 --> 39:16.120
我们用户点击

39:16.120 --> 39:17.120
上面

39:17.120 --> 39:18.120
我们在这边

39:18.120 --> 39:19.120
我们看一下

39:19.120 --> 39:21.120
我们有一个

39:21.120 --> 39:23.120
用户的写点点评

39:23.120 --> 39:25.120
我们做了一个叫做

39:25.120 --> 39:26.120
blur

39:26.120 --> 39:29.120
就是当它移开鼠标的时候

39:29.120 --> 39:31.120
光标的时候

39:31.120 --> 39:33.120
get text area content

39:33.120 --> 39:34.120
先做这一种

39:34.120 --> 39:35.120
等会把第二种拿出来

39:35.120 --> 39:43.810
获取它的值

39:43.810 --> 39:49.360
它的值是在这里边有

39:49.360 --> 39:50.360
拿出来以后

39:50.360 --> 39:51.360
我们把它放哪

39:51.360 --> 39:52.360
依然

39:52.360 --> 39:53.360
我们把这个值

39:53.360 --> 39:55.360
我们可以把它放在

39:55.360 --> 39:57.360
我们的dataInfo里面

39:57.360 --> 39:58.360
对吧

39:58.360 --> 39:59.360
放在dataInfo里面

39:59.360 --> 40:01.360
先看一下这个值的位置

40:01.360 --> 40:03.360
应该是正常的情况下

40:03.360 --> 40:06.360
那么它会在我们的

40:06.360 --> 40:08.360
数据里面

40:08.360 --> 40:10.360
会有一个正常的1234

40:10.360 --> 40:11.360
返回

40:11.360 --> 40:12.360
我只要移开

40:12.360 --> 40:13.360
你看

40:13.360 --> 40:14.360
它就有了

40:14.360 --> 40:15.360
它会在一个data

40:15.360 --> 40:18.360
detail.value里面有

40:18.360 --> 40:22.700
所以我们拿一下

40:22.700 --> 40:24.700
detail.value

40:24.700 --> 40:26.700
那么如果你现在里面

40:26.700 --> 40:28.700
什么值都没输

40:28.700 --> 40:29.700
那么会形成什么效果呢

40:29.700 --> 40:30.700
你来看

40:30.700 --> 40:32.700
如果我先删完它

40:32.700 --> 40:38.060
我删完了

40:38.060 --> 40:40.060
这时候你再来看

40:40.060 --> 40:41.060
有吗

40:41.060 --> 40:42.060
detail.value是空

40:42.060 --> 40:43.060
那这时候

40:43.060 --> 40:45.060
我们要做一个判别

40:45.060 --> 40:47.060
如果

40:47.060 --> 40:51.060
1.detail.value

40:51.060 --> 40:53.060
如果它等于空值的话

40:53.060 --> 40:58.650
那我们现在就告诉用户

40:58.650 --> 41:00.650
提示

41:00.650 --> 41:02.650
show toast

41:02.650 --> 41:08.350
title

41:08.350 --> 41:18.220
没有内容

41:18.220 --> 41:19.220
注意

41:19.220 --> 41:21.220
它不是不可以

41:21.220 --> 41:22.220
只是这边

41:22.220 --> 41:23.220
我们提示一下用户

41:23.220 --> 41:24.220
没有内容

41:24.220 --> 41:25.220
当然你后面不提示

41:25.220 --> 41:27.220
我们后面依然是可以

41:27.220 --> 41:29.220
我们先做一个提示

41:29.220 --> 41:30.220
后面的话

41:30.220 --> 41:31.220
我们也做不提示操作

41:31.220 --> 41:32.220
两种

41:32.220 --> 41:42.450
然后我们把值存储到

41:42.450 --> 41:46.080
dataInfo里面去

41:46.080 --> 41:51.140
dataInfo.

41:51.140 --> 41:53.140
content

41:53.140 --> 41:54.140
内容

41:54.140 --> 42:00.660
detail.value

42:00.660 --> 42:06.740
我们来看一下

42:06.740 --> 42:17.290
没有内容

42:17.290 --> 42:18.290
短一点

42:18.290 --> 42:31.460
剪掉一秒钟我们要

42:31.460 --> 42:39.910
没关系

42:39.910 --> 42:40.910
有东西

42:40.910 --> 42:42.910
删完

42:42.910 --> 42:43.910
没有内容

42:43.910 --> 42:44.910
OK

42:44.910 --> 42:46.910
没有文本

42:46.910 --> 42:54.980
然后紧接着我们继续

42:54.980 --> 42:55.980
我们

42:55.980 --> 42:57.980
一旦你现在把数据

42:57.980 --> 42:58.980
全部存储到了

42:58.980 --> 43:00.980
我们现在的这样一个data里面

43:00.980 --> 43:02.980
那么数据已经得到了

43:02.980 --> 43:03.980
同时图片

43:03.980 --> 43:04.980
我们现在也得到了

43:04.980 --> 43:06.980
因为我现在把它是放在

43:06.980 --> 43:08.980
一个const的权局里面

43:08.980 --> 43:10.980
并没有做成一个局部的变量

43:10.980 --> 43:11.980
所以呢

43:11.980 --> 43:12.980
我们接下去

43:12.980 --> 43:15.980
你就可以去做你现在的提交了

43:15.980 --> 43:16.980
提交动作

43:16.980 --> 43:17.980
是在我们的

43:17.980 --> 43:19.980
foam submit里面

43:19.980 --> 43:24.020
在这

43:25.020 --> 43:26.020
foam submit

43:27.020 --> 43:28.020
我们首先

43:29.020 --> 43:30.020
判断

43:31.020 --> 43:32.020
开始啊

43:32.020 --> 43:37.900
表单元素中

43:38.900 --> 43:40.900
我们可以通过

43:40.900 --> 43:41.900
我们这边也说明

43:41.900 --> 43:43.900
因为刚才我们前面也说过

43:43.900 --> 43:45.900
我们可以直接通过它的

43:45.900 --> 43:46.900
nan来取值

43:46.900 --> 43:47.900
import里面

43:48.900 --> 43:49.900
它是可以

43:49.900 --> 43:50.900
通过

43:50.900 --> 43:51.900
nan

43:51.900 --> 43:52.900
或取值的

43:55.210 --> 43:56.210
test area 不行

44:02.620 --> 44:03.620
test area

44:04.620 --> 44:06.620
依然需要

44:07.620 --> 44:08.620
通过

44:09.620 --> 44:10.620
对象

44:11.620 --> 44:13.620
而事件处理方式

44:13.620 --> 44:18.740
操作

44:19.740 --> 44:20.740
那你正常的货值

44:20.740 --> 44:22.740
我们操作也可以是这种结构

44:22.740 --> 44:23.740
我们这边写一下

44:25.740 --> 44:26.740
就是我们的

44:26.740 --> 44:30.120
data info.content

44:31.120 --> 44:32.120
你可以写成的是

44:33.120 --> 44:34.120
这边拿个e

44:35.120 --> 44:41.350
e.detail.value

44:42.350 --> 44:46.880
我们的名字是什么

44:47.880 --> 44:48.880
我们给这个

44:49.880 --> 44:51.880
输入框写了一名字

44:51.880 --> 44:52.880
你还记得吗

44:52.880 --> 44:59.110
我们输入框在这写点内容吧

44:59.110 --> 45:02.000
这个

45:02.000 --> 45:03.000
叫 import

45:04.000 --> 45:05.000
content

45:05.000 --> 45:10.210
我们就可以把这个名字写在这

45:10.210 --> 45:12.210
那么以这样的方式

45:12.210 --> 45:13.210
我们依然可以取到

45:13.210 --> 45:15.210
你输入框的内容

45:16.210 --> 45:17.210
那由于我们前面

45:17.210 --> 45:19.210
已经在上面进行了操作

45:19.210 --> 45:20.210
所以我们本身来讲

45:20.210 --> 45:22.210
这个暂时可以注释掉

45:22.210 --> 45:24.210
如果你上面没有那个blur

45:24.210 --> 45:25.210
那你就可以直接通过

45:25.210 --> 45:26.210
这个方式来得到

45:27.210 --> 45:28.210
这说明一下

45:28.210 --> 45:29.210
import元素可以的

45:30.210 --> 45:31.210
对吧

45:31.210 --> 45:32.210
但是我们现在

45:32.210 --> 45:33.210
你要把它换成

45:33.210 --> 45:34.210
import元素去做

45:34.210 --> 45:36.210
紧接着我们继续往下

45:37.210 --> 45:38.210
表单提交

45:38.210 --> 45:39.210
我们首先第一步

45:39.210 --> 45:41.210
我们判断一下

45:41.210 --> 45:47.290
data info.canIuse

45:48.290 --> 45:49.290
这个是否可用

45:51.290 --> 45:52.290
就是我们先要去

45:52.290 --> 45:54.290
调取它现在的这个方法

45:54.290 --> 45:57.290
问你按钮里面的这个

45:57.290 --> 45:58.290
UseInfo

45:58.290 --> 46:00.290
是不是现在能够获取数据

46:00.290 --> 46:03.290
它会返回的只是个真和假

46:03.290 --> 46:05.290
不会有任何数据

46:05.290 --> 46:08.290
所以我们这边先来看一下

46:08.290 --> 46:16.720
我们拿到这部分

46:16.720 --> 46:24.660
first

46:24.660 --> 46:25.660
看到

46:25.660 --> 46:26.660
这边有个提示

46:26.660 --> 46:28.660
你是否希望它有个

46:28.660 --> 46:29.660
全线获取

46:30.660 --> 46:31.660
允许

46:32.660 --> 46:33.660
first

46:33.660 --> 46:34.660
它没有现在办法得到

46:34.660 --> 46:36.660
那么我们来改一改

46:37.660 --> 46:38.660
canIuse

46:38.660 --> 46:40.660
里面所写的这个结构

46:40.660 --> 46:42.660
它由于是直接

46:42.660 --> 46:44.660
针对于我们的微信的

46:44.660 --> 46:46.660
所以你需要把这个结构

46:46.660 --> 46:48.660
变成微信的结构形式

46:48.660 --> 46:49.660
也就是

46:49.660 --> 46:50.660
小写

46:51.660 --> 46:53.660
中钢T

46:53.660 --> 46:55.660
getUseInfo

46:55.660 --> 46:56.660
这样的写法

46:57.660 --> 46:58.660
保存

46:58.660 --> 46:59.660
现在再来看一下

46:59.660 --> 47:01.660
它这个的返回

47:01.660 --> 47:07.750
去了吧

47:08.750 --> 47:09.750
所以

47:09.750 --> 47:10.750
这边我们又强调一下

47:11.750 --> 47:16.820
canIuse

47:16.820 --> 47:17.820
是

47:17.820 --> 47:18.820
针对

47:20.820 --> 47:21.820
小程序的

47:21.820 --> 47:22.820
事件

47:23.820 --> 47:25.820
属性事件判断

47:25.820 --> 47:32.030
所以

47:32.030 --> 47:33.030
需要

47:34.030 --> 47:35.030
使用

47:36.030 --> 47:37.030
小程序的

47:37.030 --> 47:41.050
书写规则

47:41.050 --> 47:44.130
这是我们上面

47:44.130 --> 47:45.130
我们写到上面去

47:47.700 --> 47:48.700
记得它后面

47:48.700 --> 47:49.700
这样

47:49.700 --> 47:51.700
这样我们能看清了

47:52.700 --> 47:53.700
先判断一下

47:53.700 --> 47:54.700
你现在是否能够有

47:54.700 --> 47:56.700
UseInfo的数据

47:56.700 --> 47:57.700
同时

47:57.700 --> 47:58.700
我们把用户这个数据

47:58.700 --> 47:59.700
也清除掉

47:59.700 --> 48:00.700
我们说

48:01.700 --> 48:02.700
我们的

48:02.700 --> 48:03.700
授权数据

48:04.700 --> 48:05.700
那么

48:05.700 --> 48:06.700
你刚才的点击下去

48:06.700 --> 48:08.700
它问你要全先获取

48:08.700 --> 48:10.700
这个操作是在哪里掉

48:10.700 --> 48:11.700
会换起的呢

48:11.700 --> 48:13.700
它其实是在这儿

48:14.700 --> 48:15.700
是这个

48:16.700 --> 48:17.700
是OpenType

48:17.700 --> 48:19.700
getUseInfo

48:19.700 --> 48:20.700
只要你在按钮上

48:20.700 --> 48:22.700
加入了OpenType属性

48:22.700 --> 48:24.700
当然你得到用户信息

48:24.700 --> 48:25.700
在你点这按钮

48:25.700 --> 48:26.700
它会自动的去

48:26.700 --> 48:27.700
你点确定的时候

48:27.700 --> 48:29.700
那么你就可以利用内部的

48:29.700 --> 48:30.700
OpenType来得数据了

48:32.700 --> 48:34.700
这个操作和你内部的

48:34.700 --> 48:35.700
我们的这个

48:35.700 --> 48:36.700
显示

48:36.700 --> 48:37.700
或者说操作

48:37.700 --> 48:38.700
它是保持一致的

48:39.700 --> 48:41.700
所以我们简单来看

48:41.700 --> 48:42.700
我们现在

48:42.700 --> 48:43.700
首先

48:43.700 --> 48:44.700
点下去

48:44.700 --> 48:47.700
如果我这边已经点了确定了

48:47.700 --> 48:48.700
那么本身内部

48:48.700 --> 48:49.700
它已经记录住

48:49.700 --> 48:50.700
你当前的这个选项

48:50.700 --> 48:51.700
允许

48:52.700 --> 48:53.700
此时同时

48:53.700 --> 48:54.700
它内部告诉你

48:54.700 --> 48:56.700
你现在其实是可以使用

48:56.700 --> 48:58.700
我们现在的这个叫做

49:02.100 --> 49:03.100
这个属性可用

49:03.100 --> 49:04.100
在微信里面

49:04.100 --> 49:05.100
好

49:05.100 --> 49:06.100
一旦这个可以了

49:06.100 --> 49:08.100
那我们接着继续往下

49:09.100 --> 49:11.100
那么如果你现在已经完成了

49:11.100 --> 49:13.100
我们这样的操作以后

49:13.100 --> 49:14.100
现在首先第一步

49:14.100 --> 49:19.670
判断

49:19.670 --> 49:27.920
images的数量

49:27.920 --> 49:28.920
主要

49:28.920 --> 49:31.920
我们这里面要完成的几个操作是

49:31.920 --> 49:33.920
我们发布有三种形式

49:33.920 --> 49:34.920
第一种

49:35.920 --> 49:36.920
图片

49:36.920 --> 49:37.920
加文字

49:38.920 --> 49:39.920
第二种

49:39.920 --> 49:41.920
景图片

49:41.920 --> 49:42.920
第三种

49:42.920 --> 49:43.920
景文字

49:43.920 --> 49:45.920
有三种可以做的部分

49:46.920 --> 49:47.920
图片管图片

49:47.920 --> 49:48.920
文字管文字的操作

49:48.920 --> 49:49.920
我们来做

49:49.920 --> 49:52.920
判断我们现在图片的

49:52.920 --> 49:55.920
判断我们images的数量

49:55.920 --> 49:56.920
对的

49:56.920 --> 50:02.050
如果

50:02.050 --> 50:05.050
当前的this

50:05.050 --> 50:07.050
点images

50:07.050 --> 50:09.050
我们不是this

50:09.050 --> 50:12.050
如果当前的didinfo

50:12.050 --> 50:15.050
里面的images

50:15.050 --> 50:17.050
就是刚才我们传的数据

50:17.050 --> 50:19.050
如果它的length大于0

50:19.050 --> 50:20.050
啥意思

50:20.050 --> 50:22.050
有数据

50:22.050 --> 50:23.050
它是有数据的

50:24.050 --> 50:25.050
那么在这种情况下

50:25.050 --> 50:26.050
我们这边

50:26.050 --> 50:29.490
保存数据去

50:30.490 --> 50:32.490
到云端

50:33.490 --> 50:35.490
我们可以做这个事

50:36.490 --> 50:37.490
不然

50:37.490 --> 50:38.490
再来判断

50:39.490 --> 50:42.490
当前didinfo里面的

50:42.490 --> 50:44.490
content.twin

50:44.490 --> 50:46.490
把旁边两个空格

50:46.490 --> 50:48.490
做个样式化

50:48.490 --> 50:53.080
如果说你这里面

50:53.080 --> 50:55.080
也不为空代表什么

50:55.080 --> 50:56.080
有文本

50:56.080 --> 50:58.520
保存

50:58.520 --> 50:59.520
数据

50:59.520 --> 51:04.300
到云端

51:04.300 --> 51:06.300
这里面都可以这样去调取

51:06.300 --> 51:07.300
这个数据

51:07.300 --> 51:10.130
然后

51:10.130 --> 51:11.130
再有的

51:11.130 --> 51:17.340
什么都没做

51:17.340 --> 51:19.340
你又没有文本

51:19.340 --> 51:20.340
你又没有内容

51:20.340 --> 51:22.340
所以我们在这做提示

51:22.340 --> 51:24.340
所以我们前面说了

51:24.340 --> 51:26.340
我们刚才在这边的提示

51:26.340 --> 51:27.340
没有文本的操作

51:27.340 --> 51:29.340
我们可以把它放在后面

51:29.340 --> 51:30.340
对吧

51:30.340 --> 51:31.340
我们可以把它放在后面

51:31.340 --> 51:33.340
所以我们这次的求改在这

51:33.340 --> 51:35.340
你把它拿到这来

51:35.340 --> 51:37.340
然后这个就先不用判断

51:37.340 --> 51:38.340
因为没有文本

51:38.340 --> 51:39.340
我们让它记录依然

51:39.340 --> 51:43.640
放到这来

51:43.640 --> 51:44.640
我们跟它说

51:44.640 --> 51:45.640
写点东西吧

51:52.690 --> 51:53.690
长一点

51:53.690 --> 51:58.370
一秒钟

51:58.370 --> 51:59.370
形成这个结构

52:00.370 --> 52:02.370
如果说你现在

52:02.370 --> 52:04.370
告先说声明

52:04.370 --> 52:05.370
你现在能不能使用

52:05.370 --> 52:06.370
我们现在

52:06.370 --> 52:07.370
Can I use

52:07.370 --> 52:11.060
这样里面的一个结构

52:11.060 --> 52:13.060
如果你得到用户信息可以

52:13.060 --> 52:14.060
那么我们下面

52:14.060 --> 52:15.060
images.lens

52:15.060 --> 52:16.060
表示的是

52:16.060 --> 52:18.060
如果你下面图片是有的

52:18.060 --> 52:19.060
已经进行上传过了

52:19.060 --> 52:21.060
保存到云端

52:21.060 --> 52:22.060
如果你现在

52:22.060 --> 52:25.060
这边是我们的图片是什么

52:25.060 --> 52:26.060
存在着的

52:26.060 --> 52:27.060
或者说

52:27.060 --> 52:28.060
文本存在着的保存到数据

52:28.060 --> 52:30.060
所以我们可以把这两句话

52:30.060 --> 52:38.430
合成一句来写

52:38.430 --> 52:40.430
或者

52:40.430 --> 52:42.430
把这块删掉

52:42.430 --> 52:43.430
对吧

52:43.430 --> 52:46.870
如果你现在图片存在

52:46.870 --> 52:47.870
或者

52:47.870 --> 52:48.870
只要有一个

52:48.870 --> 52:49.870
图片只要有存在

52:49.870 --> 52:50.870
或者文本存在的话

52:50.870 --> 52:51.870
都往这走

52:51.870 --> 52:53.870
如果你图片没有

52:53.870 --> 52:55.870
你的文本也没有

52:55.870 --> 52:57.870
那你这时候写点东西吧

52:57.870 --> 52:59.870
我们先看写点东西吧

52:59.870 --> 53:00.870
这边是保存

53:00.870 --> 53:19.950
写点东西吧

53:19.950 --> 53:20.950
对吧

53:20.950 --> 53:21.950
只要写个A

53:21.950 --> 53:23.950
它里面跳到保存

53:23.950 --> 53:26.330
对吧

53:26.330 --> 53:27.330
如果我现在

53:27.330 --> 53:28.330
这边点上去

53:28.330 --> 53:29.330
说一张图片

53:29.330 --> 53:31.330
它也到保存

53:31.330 --> 53:32.330
对吧

53:32.330 --> 53:33.330
现在我没有做删除

53:33.330 --> 53:34.330
删除我们按钮

53:34.330 --> 53:35.330
还没有做

53:36.330 --> 53:37.330
OK

53:37.330 --> 53:38.330
那现在这样的话

53:38.330 --> 53:41.330
我们就可以有保存的这个动作了

53:41.330 --> 53:44.410
保存的话

53:44.410 --> 53:45.410
其实

53:45.410 --> 53:47.410
我们需要单独写一个实践出来

53:47.410 --> 53:49.410
是要方法出来

53:49.410 --> 53:51.410
我们写到

53:51.410 --> 53:52.410
它是

53:52.410 --> 53:53.410
不是返回的

53:53.410 --> 53:54.410
所以它是

53:54.410 --> 53:56.410
当前this里面

53:56.410 --> 53:58.410
this里面点save

53:58.410 --> 54:01.410
data2

54:01.410 --> 54:03.410
server

54:03.410 --> 54:09.540
形成这样的一个方法

54:09.540 --> 54:10.540
我们在后面写

54:10.540 --> 54:14.940
save

54:14.940 --> 54:15.940
data

54:15.940 --> 54:17.940
2

54:17.940 --> 54:18.940
server

54:18.940 --> 54:25.700
保存到

54:25.700 --> 54:26.700
服务器

54:26.700 --> 54:29.700
也就是我们所谓的云数据端

54:29.700 --> 54:39.540
首先

54:39.540 --> 54:41.540
需要在云端

54:41.540 --> 54:45.370
有一个

54:45.370 --> 54:47.370
数据集合

54:47.370 --> 54:49.370
那么我们可以自己命名

54:49.370 --> 54:50.370
比如说

54:50.370 --> 54:52.370
topic demo

54:52.370 --> 54:54.370
可以起上这样一个名称

54:54.370 --> 54:56.370
自己可以定

54:56.370 --> 54:57.370
然后数据库操作

54:57.370 --> 55:01.370
我们直接可以在上部给它给定义掉

55:01.370 --> 55:03.370
我们在最上面

55:03.370 --> 55:06.370
我们把数据库的那一块给它定掉

55:06.370 --> 55:09.370
咱们定一个出来吧

55:09.370 --> 55:11.370
constra dv

55:11.370 --> 55:13.370
微信点

55:13.370 --> 55:14.370
不如微信

55:14.370 --> 55:15.370
tarrow

55:15.370 --> 55:17.370
点

55:17.370 --> 55:21.340
clouder

55:21.340 --> 55:22.340
database

55:22.340 --> 55:26.550
数据库定义

55:26.550 --> 55:28.550
collection我们就写到页面中去了

55:28.550 --> 55:30.550
我们到collection是到页面中去写

55:30.550 --> 55:49.740
到下面代码中去写

55:49.740 --> 55:50.740
在这

55:50.740 --> 56:03.460
db.collection demo

56:03.460 --> 56:04.460
这样添加

56:04.460 --> 56:20.870
params.let

56:20.870 --> 56:25.210
params.data

56:25.210 --> 56:26.210
写进去吧

56:26.210 --> 56:28.210
我们把这个数据data

56:28.210 --> 56:29.210
保存

56:29.210 --> 56:35.720
content

56:35.720 --> 56:36.720
内容

56:36.720 --> 56:38.720
我们就是来自于

56:38.720 --> 56:40.720
datainfo里面的

56:40.720 --> 56:42.720
content

56:42.720 --> 56:47.440
数据

56:47.440 --> 56:49.440
而日期我们就写上

56:49.440 --> 56:51.440
new data

56:51.440 --> 57:01.000
图片

57:01.000 --> 57:03.000
我们要一个图片存处

57:03.000 --> 57:06.000
这个图片其实就是我们的

57:06.000 --> 57:08.000
datainfo

57:08.000 --> 57:17.240
datainfo的

57:17.240 --> 57:22.150
imagers

57:22.150 --> 57:26.680
user

57:26.680 --> 57:28.680
它其实就是

57:28.680 --> 57:33.060
datainfo里面的

57:33.060 --> 57:39.020
user

57:39.020 --> 57:40.020
is like

57:40.020 --> 57:45.630
datainfo里面的

57:45.630 --> 57:50.900
is like

57:50.900 --> 57:51.900
好我们看到

57:51.900 --> 57:54.900
我把这个数据存在这

57:54.900 --> 57:56.900
一二三个内容

57:56.900 --> 57:59.900
用户的话我们到时候后面来

57:59.900 --> 58:01.900
我们先把这个结构先搭出来

58:01.900 --> 58:03.900
当你现在这样存进去

58:03.900 --> 58:06.900
这样完成这个操作以后

58:06.900 --> 58:08.900
我们返回数据

58:08.900 --> 58:10.900
它是进行一个保存的

58:10.900 --> 58:14.780
拿到数据

58:14.780 --> 58:15.780
然后我们说

58:15.780 --> 58:16.780
这边首先第一步

58:16.780 --> 58:18.780
我们可以把里面的东西

58:18.780 --> 58:20.780
全部清空掉

58:20.780 --> 58:22.780
存完了

58:22.780 --> 58:26.800
清空数据

58:26.800 --> 58:30.800
datainfo

58:30.800 --> 58:32.800
datainfo

58:32.800 --> 58:33.800
content

58:33.800 --> 58:41.240
等于空

58:41.240 --> 58:44.810
datainfo

58:44.810 --> 58:52.630
imagers

58:52.630 --> 58:56.650
datainfo

58:56.650 --> 58:58.650
然后重新

58:58.650 --> 59:00.650
我们把

59:00.650 --> 59:02.650
页面中的这个也设掉

59:02.650 --> 59:05.650
在我们的stater里面

59:05.650 --> 59:08.650
我们这边可以设一个content

59:08.650 --> 59:09.650
内容

59:09.650 --> 59:12.220
反而把这些东西

59:12.220 --> 59:14.220
反而我那个上传完了

59:14.220 --> 59:28.220
我把所有的数据全部清掉

59:28.220 --> 59:31.220
that.set

59:31.220 --> 59:32.220
stater

59:32.220 --> 59:48.970
这个that

59:48.970 --> 01:00:00.600
数据库操作完毕以后

01:00:00.600 --> 01:00:03.600
我们后面可以给用户一个提示

01:00:03.600 --> 01:00:13.440
我们写一个方法出来

01:00:13.440 --> 01:00:16.440
that.show

01:00:16.440 --> 01:00:18.440
tip

01:00:18.440 --> 01:00:20.440
and

01:00:20.440 --> 01:00:22.440
switch tab

01:00:22.440 --> 01:00:27.800
我们可以到用户这样一个提示

01:00:27.800 --> 01:00:38.660
用户提示

01:00:38.660 --> 01:00:44.540
taro.show

01:00:44.540 --> 01:00:45.540
post

01:00:45.540 --> 01:00:49.190
title

01:00:49.190 --> 01:00:52.140
新增

01:00:52.140 --> 01:00:54.140
记录

01:00:54.140 --> 01:00:55.140
成功

01:00:55.140 --> 01:01:07.870
non-duration

01:01:07.870 --> 01:01:09.870
0.5秒

01:01:09.870 --> 01:01:13.020
我们来试一下

01:01:13.020 --> 01:01:22.820
你好

01:01:22.820 --> 01:01:28.590
图片选择

01:01:28.590 --> 01:01:29.590
发布朋友圈

01:01:29.590 --> 01:01:30.590
新增记录成功

01:01:30.590 --> 01:01:32.590
太短了那时间显示

01:01:32.590 --> 01:01:33.590
等会儿看

01:01:33.590 --> 01:01:36.860
数据库

01:01:36.860 --> 01:01:43.530
topic

01:01:43.530 --> 01:01:47.610
我们的数据库名叫做

01:01:47.610 --> 01:01:48.610
topic

01:01:48.610 --> 01:01:49.610
topic name

01:01:49.610 --> 01:01:50.610
topic demo

01:01:50.610 --> 01:01:51.610
对的

01:01:51.610 --> 01:01:55.050
这里面是有我们的数据的

01:01:55.050 --> 01:01:57.050
你好

01:01:57.050 --> 01:01:58.050
对不对

01:01:58.050 --> 01:01:59.050
就这个

01:01:59.050 --> 01:02:01.050
现在加进来的

01:02:01.050 --> 01:02:02.050
那么看一下

01:02:02.050 --> 01:02:03.050
magers里面

01:02:03.050 --> 01:02:05.050
就有一张图片的记录在了

01:02:05.050 --> 01:02:06.050
这个进来了

01:02:06.050 --> 01:02:07.050
时间进来了

01:02:07.050 --> 01:02:08.050
对吧

01:02:08.050 --> 01:02:09.050
是否是关注

01:02:09.050 --> 01:02:11.050
但是还没有

01:02:11.050 --> 01:02:13.050
ok

01:02:13.050 --> 01:02:15.050
那么这样是不是我们把记录

01:02:15.050 --> 01:02:16.050
那个加进来

01:02:16.050 --> 01:02:17.050
我们把它捋一下

01:02:17.050 --> 01:02:18.050
长一点

01:02:18.050 --> 01:02:19.050
太短了

01:02:19.050 --> 01:02:21.050
一秒钟

01:02:21.050 --> 01:02:22.050
好

01:02:22.050 --> 01:02:23.050
我们做了第一个功能

01:02:23.050 --> 01:02:24.050
那么同时呢

01:02:24.050 --> 01:02:25.050
我们还可以再看一下

01:02:25.050 --> 01:02:26.050
数据库的记录

01:02:26.050 --> 01:02:27.050
前面还有一些其他的

01:02:27.050 --> 01:02:28.050
对吧

01:02:28.050 --> 01:02:29.050
那么这个没有关系

01:02:29.050 --> 01:02:31.050
之后我们可以做它的一个

01:02:31.050 --> 01:02:32.050
显示列表

01:02:32.050 --> 01:02:34.050
至少来说有一些数据

01:02:34.050 --> 01:02:36.050
我们完成了一个

01:02:36.050 --> 01:02:39.050
简单的那个发布功能

01:02:39.050 --> 01:02:40.050
那么同时呢

01:02:40.050 --> 01:02:42.050
我们这里面还可以看一下

01:02:42.050 --> 01:02:44.050
如果我说我什么都没有

01:02:44.050 --> 01:02:46.050
发布肯定不行

01:02:46.050 --> 01:02:47.050
我写一点

01:02:47.050 --> 01:02:49.050
单文本

01:02:49.050 --> 01:02:50.050
发布

01:02:50.050 --> 01:02:52.050
新增记录成功

01:02:52.050 --> 01:02:54.050
它也可以进行录入

01:02:54.050 --> 01:02:58.190
单文本

01:02:58.190 --> 01:03:00.190
看magers里面没东西

01:03:00.190 --> 01:03:02.190
再来

01:03:02.190 --> 01:03:04.190
删掉文本

01:03:04.190 --> 01:03:05.190
直接上图

01:03:05.190 --> 01:03:09.270
新增记录成功

01:03:09.270 --> 01:03:12.840
这时候数据库看一下

01:03:12.840 --> 01:03:13.840
没有文本

01:03:13.840 --> 01:03:14.840
有一张图

01:03:14.840 --> 01:03:15.840
是不是

01:03:15.840 --> 01:03:19.840
所以它图文可和可分

01:03:19.840 --> 01:03:20.840
但什么都没有

01:03:20.840 --> 01:03:22.840
那不行

01:03:22.840 --> 01:03:24.840
OK

01:03:24.840 --> 01:03:25.840
那么现在形成了

01:03:25.840 --> 01:03:27.840
我们这样的一个简单结构

01:03:27.840 --> 01:03:28.840
然后呢

01:03:28.840 --> 01:03:29.840
我们可以把这个内容

01:03:29.840 --> 01:03:32.840
现在写到我们的

01:03:32.840 --> 01:03:34.840
履一下整个代码结构

01:03:34.840 --> 01:03:38.280
怎么样进行发布的

01:03:38.280 --> 01:03:39.280
我们整个代码呢

01:03:39.280 --> 01:03:40.280
我们把它写在了

01:03:40.280 --> 01:03:41.280
publish里面

01:03:41.280 --> 01:03:43.280
然后整个这里面的结构呢

01:03:43.280 --> 01:03:44.280
相对而言

01:03:44.280 --> 01:03:46.280
还是比较多一点的

01:03:46.280 --> 01:03:47.280
当然有些东西

01:03:47.280 --> 01:03:48.280
现在还没有用到

01:03:48.280 --> 01:03:49.280
有些东西

01:03:49.280 --> 01:03:50.280
还我们已经全部写掉了

01:03:50.280 --> 01:03:51.280
我们说

01:03:51.280 --> 01:03:52.280
我们使用了一个

01:03:52.280 --> 01:03:55.280
在最顶部定义的一个

01:03:55.280 --> 01:03:57.280
长量叫data info

01:03:57.280 --> 01:03:59.280
代表的是现在用户的一些

01:03:59.280 --> 01:04:01.280
数据情况

01:04:01.280 --> 01:04:02.280
我们的包括是

01:04:02.280 --> 01:04:03.280
数据库的存储情况

01:04:03.280 --> 01:04:04.280
都会有

01:04:04.280 --> 01:04:05.280
这里面用到一个部分

01:04:05.280 --> 01:04:07.280
叫can i use

01:04:07.280 --> 01:04:08.280
can i use是帮助我们

01:04:08.280 --> 01:04:10.280
能够识别

01:04:10.280 --> 01:04:11.280
是不是某一个属性

01:04:11.280 --> 01:04:12.280
或对象

01:04:12.280 --> 01:04:13.280
或一些内容的使用

01:04:13.280 --> 01:04:14.280
是否可用

01:04:14.280 --> 01:04:15.280
如果可以

01:04:15.280 --> 01:04:16.280
它会返回一个

01:04:19.280 --> 01:04:21.280
那么在整个这个世界里面

01:04:21.280 --> 01:04:23.280
在这个那个组建里面

01:04:23.280 --> 01:04:25.280
首先我们有Stator

01:04:25.280 --> 01:04:26.280
这个待会后面再用

01:04:26.280 --> 01:04:27.280
我们定一个初始值

01:04:27.280 --> 01:04:28.280
你可以有一个

01:04:28.280 --> 01:04:30.280
你可以有个初始值

01:04:30.280 --> 01:04:32.280
我们有个图片

01:04:32.280 --> 01:04:33.280
对吧

01:04:33.280 --> 01:04:34.280
图片我们可以放置

01:04:34.280 --> 01:04:35.280
我们所要的一些

01:04:35.280 --> 01:04:36.280
我们

01:04:36.280 --> 01:04:37.280
显示部分

01:04:37.280 --> 01:04:38.280
也就是我们所谓的

01:04:38.280 --> 01:04:39.280
上传

01:04:39.280 --> 01:04:40.280
选择图片以后的

01:04:40.280 --> 01:04:42.280
聚集地存储地

01:04:42.280 --> 01:04:43.280
这是我们的

01:04:43.280 --> 01:04:44.280
表单设置

01:04:46.280 --> 01:04:47.280
奉表单提交的时候

01:04:47.280 --> 01:04:48.280
先判断

01:04:48.280 --> 01:04:49.280
你现在是不是

01:04:49.280 --> 01:04:51.280
可以使用某一些的空间

01:04:51.280 --> 01:04:52.280
可以的话

01:04:52.280 --> 01:04:53.280
判断一下你现在

01:04:53.280 --> 01:04:54.280
是不是有我们

01:04:54.280 --> 01:04:55.280
现在所谓的

01:04:55.280 --> 01:04:57.280
一个图片

01:04:57.280 --> 01:04:58.280
如果图片有

01:04:58.280 --> 01:04:59.280
并且或者

01:04:59.280 --> 01:05:01.280
现在你现在文本有的话

01:05:01.280 --> 01:05:02.280
两者取其一

01:05:02.280 --> 01:05:03.280
就可以

01:05:04.280 --> 01:05:06.280
调用我们现在的

01:05:06.280 --> 01:05:08.280
save date to server

01:05:08.280 --> 01:05:10.280
就是保存到云端

01:05:10.280 --> 01:05:12.280
什么都没有

01:05:12.280 --> 01:05:14.280
给点提示

01:05:14.280 --> 01:05:16.280
保存到云端

01:05:16.280 --> 01:05:17.280
我们首先把你

01:05:17.280 --> 01:05:18.280
现在上面的

01:05:18.280 --> 01:05:20.280
所有数据给拿过来

01:05:20.280 --> 01:05:21.280
然后这边

01:05:21.280 --> 01:05:22.280
我们现在是告诉你

01:05:22.280 --> 01:05:23.280
云端的上传

01:05:23.280 --> 01:05:25.280
一旦你唱成功以后的话

01:05:25.280 --> 01:05:26.280
那么我们把里面

01:05:26.280 --> 01:05:27.280
所有数据清掉

01:05:27.280 --> 01:05:29.280
为什么要清掉

01:05:29.280 --> 01:05:30.280
因为你后面的

01:05:30.280 --> 01:05:31.280
所有操作

01:05:31.280 --> 01:05:32.280
我们都不希望

01:05:32.280 --> 01:05:34.280
在本地有一些残留

01:05:34.280 --> 01:05:35.280
这样能看到的

01:05:35.280 --> 01:05:36.280
非常多的东西

01:05:36.280 --> 01:05:37.280
对吧

01:05:37.280 --> 01:05:39.280
然后有可能还有抱错

01:05:39.280 --> 01:05:40.280
所以一旦完成了

01:05:40.280 --> 01:05:42.280
就不需要这些了

01:05:42.280 --> 01:05:43.280
任务提示告诉他

01:05:43.280 --> 01:05:45.280
新纪录添加成功

01:05:45.280 --> 01:05:47.280
ok 就这样一个情况

01:05:47.280 --> 01:05:49.280
然后获取当前的内容

01:05:49.280 --> 01:05:50.280
我们说过

01:05:50.280 --> 01:05:51.280
我们可有两种方式

01:05:51.280 --> 01:05:52.280
第一种是以

01:05:52.280 --> 01:05:53.280
input元素

01:05:53.280 --> 01:05:55.280
逢表单的获取

01:05:55.280 --> 01:05:56.280
第二种是属于

01:05:56.280 --> 01:05:57.280
非input

01:05:57.280 --> 01:05:59.280
非input元素的表单组件

01:06:00.280 --> 01:06:01.280
在非input

01:06:01.280 --> 01:06:02.280
在非input

01:06:02.280 --> 01:06:03.280
表单组件里面的

01:06:03.280 --> 01:06:05.280
test area是首选

01:06:05.280 --> 01:06:06.280
也就是说

01:06:06.280 --> 01:06:08.280
它要通过我们的

01:06:08.280 --> 01:06:09.280
事件操作

01:06:09.280 --> 01:06:11.280
来获取当前的内容

01:06:11.280 --> 01:06:12.280
而它不能直接

01:06:12.280 --> 01:06:13.280
通过表单来走

01:06:14.280 --> 01:06:15.280
那么这就是

01:06:15.280 --> 01:06:16.280
我们说的

01:06:16.280 --> 01:06:18.280
获取内容的方式

01:06:18.280 --> 01:06:20.280
把内容拿进来以后

01:06:20.280 --> 01:06:21.280
直接存储到

01:06:21.280 --> 01:06:22.280
我们现在的

01:06:22.280 --> 01:06:24.280
data infer里面

01:06:24.280 --> 01:06:25.280
第二

01:06:25.280 --> 01:06:26.280
图片选择

01:06:26.280 --> 01:06:27.280
对吧

01:06:27.280 --> 01:06:28.280
刚才前面我们说过

01:06:28.280 --> 01:06:29.280
它有几种情况

01:06:29.280 --> 01:06:30.280
一进来

01:06:30.280 --> 01:06:31.280
我们就在介绍

01:06:31.280 --> 01:06:32.280
这部分内容

01:06:32.280 --> 01:06:33.280
对吧

01:06:33.280 --> 01:06:34.280
那么图片存到云端的话

01:06:34.280 --> 01:06:35.280
其实

01:06:35.280 --> 01:06:36.280
把它拿出

01:06:36.280 --> 01:06:37.280
你现在所有的图片

01:06:37.280 --> 01:06:39.280
就是你现在已经

01:06:39.280 --> 01:06:40.280
可以看到的

01:06:40.280 --> 01:06:41.280
临时文件图片

01:06:41.280 --> 01:06:42.280
然后我们

01:06:42.280 --> 01:06:43.280
每做一个循环

01:06:43.280 --> 01:06:44.280
都将去执行

01:06:44.280 --> 01:06:45.280
我们现在

01:06:45.280 --> 01:06:46.280
total cloud up

01:06:46.280 --> 01:06:47.280
plotify操作

01:06:48.280 --> 01:06:50.280
把数据拿出来以后的话

01:06:50.280 --> 01:06:51.280
我们把它

01:06:51.280 --> 01:06:52.280
直接压入到

01:06:52.280 --> 01:06:53.280
注意这边

01:06:53.280 --> 01:06:54.280
执行了一个push

01:06:54.280 --> 01:06:55.280
我们把它

01:06:55.280 --> 01:06:56.280
压入到我们的

01:06:56.280 --> 01:06:57.280
现在的

01:06:57.280 --> 01:06:58.280
变量

01:06:58.280 --> 01:07:00.280
data major里面

01:07:00.280 --> 01:07:02.280
data infer major里面

01:07:02.280 --> 01:07:03.280
压进去

01:07:03.280 --> 01:07:04.280
在本地

01:07:04.280 --> 01:07:05.280
看到这些图片

01:07:05.280 --> 01:07:07.280
并且也存出着

01:07:07.280 --> 01:07:09.280
它已经上传完的那个路径

01:07:10.280 --> 01:07:11.280
是这个意思

01:07:11.280 --> 01:07:13.280
算是一个时间转换

01:07:13.280 --> 01:07:14.280
个日期

01:07:14.280 --> 01:07:16.280
基本这功能有了

01:07:16.280 --> 01:07:17.280
都实现了

01:07:17.280 --> 01:07:18.280
这基本功能

01:07:18.280 --> 01:07:20.280
那么我们还有个use

01:07:20.280 --> 01:07:22.280
use该怎么获得

01:07:22.280 --> 01:07:23.280
那是用户数据

01:07:23.280 --> 01:07:25.280
用户数据获得以后

01:07:25.280 --> 01:07:26.280
我们本身就可以

01:07:26.280 --> 01:07:27.280
把它存在这里面

01:07:27.280 --> 01:07:29.280
然后去到后页面的时候

01:07:29.280 --> 01:07:30.280
我们可以直接看

01:07:30.280 --> 01:07:31.280
也可以单独取

01:07:31.280 --> 01:07:32.280
但是我们这边

01:07:32.280 --> 01:07:33.280
后期

01:07:33.280 --> 01:07:34.280
用户数据出来

01:07:34.280 --> 01:07:35.280
好

01:07:35.280 --> 01:07:37.280
那么前面的这个功能

01:07:37.280 --> 01:07:38.280
希望先去练一下

01:07:38.280 --> 01:07:40.280
我们这些图片先休息一下

01:07:40.280 --> 01:07:41.280
然后我们待会

01:07:41.280 --> 01:07:42.280
继续讲解这部分内容

