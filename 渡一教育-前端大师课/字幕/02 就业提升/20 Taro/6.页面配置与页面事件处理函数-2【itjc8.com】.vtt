WEBVTT

00:00.300 --> 00:03.740
好 我们继续讲解我们的Tarot

00:03.740 --> 00:07.980
我们的一个框架 框架本身里面还有非常多的东西

00:07.980 --> 00:10.620
那么有些呢 和卫星响声有相似

00:10.620 --> 00:14.780
有些呢 它是本身有一些区别 书写的方式也有些不同

00:14.780 --> 00:17.500
所以呢 我们给大家做一些完整的讲解

00:17.500 --> 00:21.500
那么之前呢 我们讲到了它的页面事件处理函数

00:21.500 --> 00:24.460
那么呢 我们讲了两个 一个是Unplugged on Refresh

00:24.460 --> 00:26.860
并且把里面的一些注意点 也给大家说到了

00:27.020 --> 00:30.620
并且Reach Button 它离底部的距离

00:30.620 --> 00:33.580
那么这两个呢 在我们前节课里面已经给大家讲到了

00:33.580 --> 00:35.740
那么这节课呢 我们继续往下讲解

00:35.740 --> 00:39.500
我们讲Unplugged on Pader Scholar

00:39.500 --> 00:42.460
Unplugged on Pader Scholar是下拉刷新的动作

00:42.460 --> 00:44.860
它的下拉刷新呢 主要的是

00:44.860 --> 00:46.620
我在滚动期间

00:46.620 --> 00:49.660
因为有些时候啊 我们经常会发生的是

00:49.660 --> 00:52.940
我们需要在它页面的底部 在这边呢

00:53.020 --> 00:57.100
会有一个所谓的 就是回到顶部

00:57.100 --> 00:58.620
理解吧 回到顶部

00:58.620 --> 01:00.860
那么你页面一旦在下拉的时候

01:00.860 --> 01:03.020
它始终得保持在这个位置

01:03.020 --> 01:05.740
那么这种时候呢 或者你在拉的过程中

01:05.740 --> 01:08.700
我们比如说 我拉到你顶部 离开

01:08.700 --> 01:12.860
比如说 40 像素 50 像素的位置的时候

01:12.860 --> 01:15.180
我们右边把抽屉给拉开来

01:15.180 --> 01:16.540
好 这种效果

01:16.540 --> 01:20.460
我们就应该是在它下拉过程中去进行监督

01:20.460 --> 01:21.500
是这个逻辑

01:21.660 --> 01:22.860
那么我们在这边

01:22.860 --> 01:24.220
我们就要用到这个 Un

01:26.220 --> 01:27.980
Un Pader Scholar

01:29.820 --> 01:30.780
我们在里面打开

01:34.030 --> 01:42.850
Un Pader Scholar 下拉动作

01:44.450 --> 01:47.490
那么它在下拉的时候呢 请注意啊

01:47.490 --> 01:48.610
它需要有参数

01:49.730 --> 01:50.770
它的参数是一个

01:51.330 --> 01:54.690
它参数我们 object 一般我们在接收事件参数的时候

01:54.690 --> 01:57.650
我们都会用个 event 事件参数来接收

01:57.730 --> 01:58.930
那么这个参数呢

01:58.930 --> 02:01.090
我们都可以得到 Scholar Top

02:01.090 --> 02:02.210
也就是说

02:02.210 --> 02:05.570
它页面垂直方向以滚动的距离

02:05.570 --> 02:10.130
注意 这个以滚动距离是针对你屏幕可见区域的顶部

02:10.130 --> 02:11.570
是这个来操作的

02:11.570 --> 02:12.690
那么我们来看一下

02:12.690 --> 02:13.650
我们写个 E

02:15.250 --> 02:17.810
我们作为一个事件存在

02:17.810 --> 02:20.850
然后下面 Consola.loge

02:22.990 --> 02:24.990
好 我们拉动一下

02:27.900 --> 02:30.540
看 是不是有 Scholar Top

02:30.700 --> 02:32.700
往下动 是不是这边就有显示了

02:33.420 --> 02:35.420
就要往上 它也会有

02:35.420 --> 02:38.860
到顶部的时候 它就是回到零了 对吧

02:38.860 --> 02:42.460
那么我们可以根据这个来做一个判别

02:42.460 --> 02:44.380
如果到哪一个点上手

02:44.380 --> 02:46.300
比如说我们可以

02:46.300 --> 02:48.300
经常我们会有这种效果

02:48.300 --> 02:51.020
当这种效果做出来以后的话会比较炫

02:51.020 --> 02:51.980
这种就是

02:51.980 --> 02:53.980
比如说 Scholar Top

02:53.980 --> 02:56.620
我们达到比如说50的时候

02:56.620 --> 02:57.900
让它去做什么事

02:57.980 --> 03:00.620
我们比如说旁边我们可以多一个

03:00.620 --> 03:04.060
我们的抽体

03:04.060 --> 03:05.740
抽体的概念就是我们点一下上面

03:05.740 --> 03:08.460
比如说有三个一个杠 一个图标

03:08.460 --> 03:09.820
让旁边可以弹出

03:09.820 --> 03:12.700
比如说你的菜单或者是这样的功能

03:12.700 --> 03:15.100
我们等之后会把抽体的功能做出来

03:15.100 --> 03:16.460
但是我们现在的话

03:16.460 --> 03:21.180
我们看一下是否可以有一些弹框或者说是这样的

03:21.180 --> 03:24.460
如果这个值等于50

03:24.460 --> 03:26.220
也就是我往下拉的时候

03:26.300 --> 03:28.460
那么弹框依然是

03:28.460 --> 03:31.340
虽然我们现在使用的是Telecom恰

03:31.340 --> 03:33.980
那么你本身你用这个来做

03:33.980 --> 03:35.500
你会看一下

03:35.500 --> 03:36.700
这个很有意思

03:36.700 --> 03:40.620
它会在我们的VSCoder的提示框里面

03:40.620 --> 03:42.220
会给到你Alert

03:42.220 --> 03:43.580
那么我们来看一下

03:43.580 --> 03:44.940
它是否会转化

03:44.940 --> 03:50.960
就是我们把ok这个字给打出来

03:50.960 --> 03:54.620
你来看

03:54.620 --> 03:57.900
往下拉拉拉的过程中使风

03:57.900 --> 03:59.500
始终会有一个爆错

03:59.500 --> 04:00.300
看到吗

04:00.380 --> 04:04.460
它告诉你Alert is not a function

04:04.460 --> 04:07.260
它表示它没有办法去实现这个

04:07.260 --> 04:08.540
那么很简单

04:08.540 --> 04:11.020
它在这里面输鞋的时候

04:11.020 --> 04:12.940
它并非是GS代码

04:12.940 --> 04:15.820
所以它无法实现去调用这个的

04:15.820 --> 04:16.700
它会认为

04:16.700 --> 04:18.860
你是不是调用了某一个方法

04:18.860 --> 04:21.020
你去看或者说是function

04:21.020 --> 04:21.820
没有

04:21.820 --> 04:23.900
同时我们再强调一点

04:23.900 --> 04:26.700
就是微信本身的GS

04:26.700 --> 04:30.220
也就是我们在它里面所执行的这个GS代码

04:30.220 --> 04:34.380
它并非是完整的全部的GS JavaScript脚本

04:34.380 --> 04:36.140
它是一个JavaScript内核

04:36.140 --> 04:38.300
成为GS code

04:38.300 --> 04:41.900
它整个内核里面最重要的一点

04:41.900 --> 04:44.940
就是它没有浏览器对象的支持

04:44.940 --> 04:46.300
也就是俗称的

04:46.300 --> 04:48.460
就是它没有Window对象

04:48.460 --> 04:49.580
没有Window对象

04:49.580 --> 04:51.820
我们所谓的Window的所有的操作

04:51.820 --> 04:53.420
它都不可以执行

04:53.420 --> 04:54.540
那么这就意味着

04:54.540 --> 04:58.380
我们平时所谓的动模型就不可以

04:58.460 --> 05:00.220
Alert本身也属于

05:00.220 --> 05:03.500
我们的Window.Alert的一个事件处理方法

05:03.500 --> 05:05.420
所以我们就不能用它

05:05.420 --> 05:06.780
那么微信还记得吗

05:06.780 --> 05:10.140
微信怎么样能够做一些弹框处理呢

05:10.140 --> 05:11.980
我们先做一个这个操作

05:11.980 --> 05:13.180
微信点

05:13.180 --> 05:15.180
show toast

05:15.180 --> 05:16.060
还记得吗

05:16.060 --> 05:18.620
去这样去写

05:18.620 --> 05:19.500
看到吗

05:19.500 --> 05:21.980
它会告诉你显示提示框带码

05:21.980 --> 05:22.700
这事儿

05:22.700 --> 05:25.660
我们在里面打出来

05:25.660 --> 05:27.260
title

05:27.260 --> 05:29.180
我们给出

05:29.180 --> 05:32.660
表示

05:32.660 --> 05:36.450
就写上

05:36.450 --> 05:38.370
success

05:38.370 --> 05:39.010
保存

05:39.010 --> 05:40.130
那我们现在来看一下

05:40.130 --> 05:43.550
这样的效果

05:43.550 --> 05:45.550
走走走

05:45.550 --> 05:46.190
看

05:46.190 --> 05:47.390
success出来了吧

05:47.390 --> 05:48.190
到50的位置

05:48.190 --> 05:48.990
你再往下没有

05:48.990 --> 05:50.670
但你回上去

05:50.670 --> 05:51.790
一旦你到50点上

05:51.790 --> 05:53.230
它就会success出来

05:53.230 --> 05:53.790
所以

05:53.790 --> 05:55.390
我们用这样的方式

05:55.390 --> 05:56.670
就可以直接操作

05:56.670 --> 05:57.150
对吧

05:57.150 --> 05:58.510
首先我们讲到的是

05:58.510 --> 05:59.230
因为之前呢

05:59.230 --> 06:00.670
后面还没有讲下去

06:00.670 --> 06:03.310
我们就可以使用微信所给到的

06:03.310 --> 06:04.830
这样的一些结构

06:04.830 --> 06:05.630
ok

06:05.630 --> 06:06.510
那么同时呢

06:06.510 --> 06:07.470
我们看到

06:07.470 --> 06:09.070
我们的scolar操作

06:09.070 --> 06:11.150
有几点需要说明的

06:11.150 --> 06:13.310
我们在这上面也会有说出来

06:13.310 --> 06:14.430
看到这边

06:14.430 --> 06:16.030
注意

06:16.030 --> 06:18.430
只要在配置里面定义一次方法

06:18.430 --> 06:20.350
不要定义空方法

06:20.350 --> 06:21.230
也就是说

06:21.230 --> 06:22.350
你这页面没有用

06:22.350 --> 06:22.910
你说

06:22.910 --> 06:23.790
反正我也不写

06:23.790 --> 06:24.910
我就把这个东西

06:24.910 --> 06:26.910
就这么空的定义在那边

06:26.910 --> 06:28.270
那么这个说法是

06:28.270 --> 06:29.150
我们至少来说

06:29.150 --> 06:30.110
你觉得我没写东西

06:30.110 --> 06:31.870
好像似乎不会去做任何的

06:31.870 --> 06:32.830
系统编译

06:32.830 --> 06:34.590
其实系统是会做的

06:34.590 --> 06:36.590
我们就不应该让它放在这里

06:36.590 --> 06:37.710
放在这里以后

06:37.710 --> 06:38.590
你会影响

06:38.590 --> 06:41.150
以减少不必要的事件的

06:41.150 --> 06:42.270
那个渲染操作

06:42.270 --> 06:43.870
这样的逻辑

06:43.870 --> 06:44.910
所以这部分呢

06:44.910 --> 06:45.390
不要做

06:45.390 --> 06:46.750
要用的时候放上去

06:46.750 --> 06:47.870
第二个的话呢

06:47.870 --> 06:49.310
请避免on-scolar

06:49.310 --> 06:50.590
on-padre-scolar中

06:50.590 --> 06:52.030
频繁的使用

06:52.030 --> 06:54.590
this.setstater

06:54.590 --> 06:56.670
那么我们setstater代表的是

06:56.670 --> 06:58.350
我们去修改stater的值

06:58.350 --> 07:01.070
也进行成我们的绑定操作

07:01.070 --> 07:02.750
你在下拉过程中

07:02.750 --> 07:04.750
你如果作为这个操作呢

07:04.750 --> 07:06.750
逻辑上是没有问题的

07:06.750 --> 07:07.710
但是你这样的话

07:07.710 --> 07:08.430
你发现后面

07:08.430 --> 07:11.390
尤其每次要大量的输出数据时候

07:11.390 --> 07:13.870
你会影响通讯的耗时

07:13.870 --> 07:15.630
因为每次它都要去渲染

07:15.630 --> 07:17.630
而且你下拉速度非常快

07:17.630 --> 07:19.230
所以它这个过程呢

07:19.230 --> 07:21.150
是赶不上你现在的一个下拉

07:21.150 --> 07:22.590
你一下子滚轴一滚

07:22.590 --> 07:23.710
跨一下下去了

07:23.710 --> 07:25.390
但它每一步都要去做

07:25.390 --> 07:26.110
理解吧

07:26.110 --> 07:27.150
所以这个的话呢

07:27.150 --> 07:28.030
我们说

07:28.030 --> 07:30.110
我们会实现一些基本功能

07:30.110 --> 07:30.670
比如说

07:30.670 --> 07:31.950
像我刚才说的

07:31.950 --> 07:32.990
抽屉的打开

07:32.990 --> 07:34.270
一个界面的打开

07:34.270 --> 07:35.630
一个提示的打开

07:35.630 --> 07:36.590
或者说

07:36.590 --> 07:39.390
一个我们的值的操作

07:39.390 --> 07:40.910
如果你改变某一个值

07:40.910 --> 07:42.030
那问题还不大

07:42.030 --> 07:43.470
你里边如果stater里面

07:43.470 --> 07:46.030
你改变了四五十个值

07:46.030 --> 07:46.830
并且四五个值

07:46.830 --> 07:48.590
还要有不同的效果呈现

07:48.590 --> 07:49.470
那这个的话

07:49.470 --> 07:50.670
还不如

07:50.670 --> 07:52.750
你别做在这里边

07:52.750 --> 07:55.310
这个功能就不需要这么做

07:55.310 --> 07:57.390
这个是我们已经说到的

07:57.390 --> 07:58.590
Pager Scholar

07:58.590 --> 07:59.550
继续往下

07:59.550 --> 08:04.190
我们的Unshear App Messageer

08:04.190 --> 08:07.550
它表示是一个分享

08:07.550 --> 08:09.230
或者称之为叫转发

08:09.230 --> 08:10.510
我们更确切的讲

08:10.510 --> 08:13.310
应该称之为叫转发

08:13.310 --> 08:15.710
我们写下来

08:15.710 --> 08:17.070
这过程的话

08:17.070 --> 08:17.790
我们就

08:17.790 --> 08:18.830
现在是掩饰

08:18.830 --> 08:20.350
我就先控制放着

08:20.350 --> 08:21.070
正常的情况下

08:21.070 --> 08:22.910
我们不去放它

08:22.910 --> 08:24.590
它是只提高性能概念

08:24.590 --> 08:29.310
并不是愚发上的

08:29.310 --> 08:31.470
转发操作

08:31.470 --> 08:37.120
转发的行为事件

08:37.120 --> 08:38.080
继续来

08:38.080 --> 08:39.680
转发的行为事件

08:39.680 --> 08:40.480
我们说到

08:40.480 --> 08:41.520
它的转发

08:41.520 --> 08:42.800
需要有几个内容

08:42.800 --> 08:43.520
需要你知道

08:43.520 --> 08:44.320
一

08:44.320 --> 08:45.520
它需要你按钮

08:45.520 --> 08:46.640
如果你有个按钮

08:46.640 --> 08:48.320
里面组件上面的属性

08:48.320 --> 08:49.840
你写了一个

08:49.840 --> 08:51.760
Open Type等于shear

08:51.760 --> 08:53.840
组件上写的这部操作

08:53.840 --> 08:56.080
或者你点击了右上角的

08:56.080 --> 08:58.080
转发的这样的一个点点点

08:58.080 --> 08:59.040
按钮的时候

08:59.040 --> 09:00.480
它就会去触发

09:00.480 --> 09:02.160
当前的这个事件

09:02.240 --> 09:05.200
完成它现在里面的代码之行

09:05.200 --> 09:06.880
而你真的转发

09:06.880 --> 09:08.880
是靠里面来完成的

09:08.880 --> 09:10.080
那么我们这两个来看

09:10.080 --> 09:11.040
首先

09:11.040 --> 09:11.760
你现在

09:11.760 --> 09:12.320
我们这两个

09:12.320 --> 09:13.200
到位一起写一下

09:13.200 --> 09:14.160
写个按钮出来

09:14.160 --> 09:15.520
然后同时写这个

09:15.520 --> 09:16.560
那么注意

09:16.560 --> 09:17.840
我们如果说

09:17.840 --> 09:19.040
请记住

09:19.040 --> 09:19.680
如果说

09:19.680 --> 09:21.600
你是用的是普通按钮的话

09:21.600 --> 09:22.240
那么注意

09:22.240 --> 09:23.040
那么很

09:23.040 --> 09:24.480
没有办法去做on

09:24.480 --> 09:25.680
那个button

09:25.680 --> 09:28.080
那个Open Type这个事件

09:28.080 --> 09:30.240
我们一旦要用到Open Type

09:30.240 --> 09:32.080
那么你一定要用到的是

09:32.080 --> 09:33.920
我们的微信的组件

09:33.920 --> 09:35.440
也就是你要用component

09:35.440 --> 09:37.920
来引入这个button

09:37.920 --> 09:39.040
这个是

09:39.040 --> 09:40.400
紧接着我们来看

09:40.400 --> 09:41.040
它里面

09:41.040 --> 09:42.800
一旦你触发它的话

09:42.800 --> 09:44.880
这个就是我们会写成一个e

09:46.160 --> 09:48.000
event事件

09:48.000 --> 09:49.840
它会给到我三个参数

09:49.840 --> 09:50.960
那么主要的呢

09:50.960 --> 09:53.200
我们是可以看到这个来

09:53.200 --> 09:54.880
你到底点的是什么

09:54.880 --> 09:55.520
from

09:55.520 --> 09:58.160
它会有个from

09:58.160 --> 09:58.880
你现在from

09:58.880 --> 09:59.680
它会告诉你

09:59.680 --> 10:00.880
你到底是button

10:00.880 --> 10:01.600
还是manual

10:01.600 --> 10:02.880
你点的是按钮

10:02.880 --> 10:03.520
还是上面的

10:03.520 --> 10:05.200
右上角的转发菜单的

10:05.200 --> 10:07.760
这样的一个操作

10:07.760 --> 10:09.280
那么还有一个

10:09.280 --> 10:11.600
那么如果是button的话

10:11.600 --> 10:12.480
那么你看

10:12.480 --> 10:14.400
toget是

10:14.400 --> 10:17.200
触发此次转发的事件

10:17.200 --> 10:18.640
button的话呢

10:18.640 --> 10:20.320
则是没有任何的

10:20.320 --> 10:21.520
所以我们讲的是

10:21.520 --> 10:23.360
toget这个词

10:23.360 --> 10:24.400
是只有在

10:24.400 --> 10:25.920
你现在是属于

10:25.920 --> 10:27.200
我们的toget

10:27.200 --> 10:30.000
事件为我们的

10:30.000 --> 10:31.280
button按钮的时候

10:31.280 --> 10:33.600
它才会

10:33.600 --> 10:35.520
它才会有这个操作

10:35.520 --> 10:37.040
那么所以我们一般性

10:37.040 --> 10:38.560
我们直接fone进来以后

10:38.560 --> 10:38.960
你看到吗

10:38.960 --> 10:39.760
如果是button

10:39.760 --> 10:40.880
那么toget的事件

10:40.880 --> 10:43.280
会去转发此次button

10:43.280 --> 10:44.480
那么如果说是没有的话

10:44.480 --> 10:45.360
就不会

10:45.360 --> 10:47.280
所以你现在可以判断

10:47.280 --> 10:48.400
是不是button

10:48.400 --> 10:49.200
然后同时

10:49.200 --> 10:50.960
这个是页面包含的组件

10:50.960 --> 10:52.400
当前返回了url

10:52.400 --> 10:53.680
这个的话我们先不用做

10:53.680 --> 10:54.560
因为本身来讲

10:54.560 --> 10:56.080
我们并不需要它

10:56.080 --> 10:57.040
要转发的时候

10:57.040 --> 10:58.080
你要写个return

10:58.080 --> 10:59.040
return语句里面

10:59.040 --> 11:00.080
包含一个object

11:00.080 --> 11:01.280
object是个对象

11:01.280 --> 11:02.640
对象里面可以涵盖

11:02.640 --> 11:04.080
这三部分内容

11:04.080 --> 11:05.920
那我们来玩一下

11:05.920 --> 11:06.720
我们看到下面

11:06.720 --> 11:08.880
它给了一个简单势力

11:08.880 --> 11:09.840
你看

11:09.840 --> 11:12.240
它写了一个onshearappmessager

11:12.240 --> 11:12.880
然后

11:12.880 --> 11:15.440
erc是它的事件接收

11:15.440 --> 11:15.840
它说

11:15.840 --> 11:19.040
如果你接到的是一个我们的fone

11:19.040 --> 11:20.800
也就是是button按钮的话

11:20.800 --> 11:21.760
那么它这边

11:21.760 --> 11:22.720
你可以看一下

11:22.720 --> 11:25.520
它里面所打印出来的这个toget

11:25.520 --> 11:25.840
对吧

11:25.840 --> 11:26.960
它可以看到一个toget

11:26.960 --> 11:28.320
toget的事件

11:28.320 --> 11:31.360
是此次转发事件的button

11:31.360 --> 11:32.480
你可以看一下

11:32.480 --> 11:33.200
然后呢

11:33.200 --> 11:34.720
你可以后面做一个return

11:34.720 --> 11:35.360
return里面

11:35.360 --> 11:37.040
一般我们可以放三个值

11:37.040 --> 11:38.880
你放两个也可以

11:38.880 --> 11:41.280
它会解取你当前

11:41.280 --> 11:43.600
这个页面的一部分

11:43.600 --> 11:45.600
它并不是一个宣传

11:45.600 --> 11:46.640
或者说

11:46.640 --> 11:47.840
我们的

11:47.840 --> 11:50.640
一个转发图

11:50.640 --> 11:52.240
转发图你可以自定义

11:52.240 --> 11:54.400
然后title自定义转发点击

11:54.400 --> 11:55.680
如果有人点击以后

11:55.680 --> 11:56.640
你往哪儿传

11:56.640 --> 11:58.080
并且给它一个什么样的参数

11:58.080 --> 12:00.080
你都是可以在这边定义的

12:00.080 --> 12:01.120
这个逻辑

12:01.120 --> 12:02.160
然后你看到

12:02.160 --> 12:03.840
我们下面这些的话就没有

12:03.840 --> 12:05.520
因为本身页面上面的话

12:05.520 --> 12:07.200
它是点击了按钮

12:07.200 --> 12:07.840
还是属于

12:07.840 --> 12:09.440
那我们来做一下

12:09.440 --> 12:10.720
还是属于

12:10.720 --> 12:12.800
我们这边给它扩充一下

12:12.800 --> 12:14.400
它这上面没有做全

12:14.400 --> 12:16.160
对吧

12:16.160 --> 12:17.520
首先

12:17.520 --> 12:18.880
我们这里边

12:18.880 --> 12:19.760
我们可以

12:19.760 --> 12:23.280
首先先去做右上角的操作

12:23.280 --> 12:26.270
接收参数

12:26.270 --> 12:28.830
我们如果不做任何判断

12:28.830 --> 12:32.380
我们直接return

12:32.380 --> 12:34.620
返回一个对象

12:34.620 --> 12:35.820
这个对象

12:35.820 --> 12:36.780
有一个title

12:36.780 --> 12:40.110
告它

12:40.110 --> 12:41.710
自定义

12:41.710 --> 12:44.540
标题

12:44.540 --> 12:45.820
或者我们写上

12:45.820 --> 12:56.430
那个parallel学习战

12:56.430 --> 12:57.950
这样写

12:57.950 --> 12:58.830
再来

12:58.830 --> 12:59.630
pass

12:59.630 --> 13:00.670
我们写上

13:00.670 --> 13:01.790
你要去到哪个页面

13:01.790 --> 13:03.710
我们其实就到它手页来

13:03.710 --> 13:08.910
pader下的index

13:08.910 --> 13:10.510
这样进来

13:10.510 --> 13:11.150
然后呢

13:11.150 --> 13:12.430
我们有一个图标

13:12.430 --> 13:13.070
对吧

13:13.070 --> 13:14.350
我们的图标的话

13:14.350 --> 13:16.590
你可以去拿任何一张图片

13:16.590 --> 13:17.550
我们来看

13:17.550 --> 13:18.750
我们的

13:18.750 --> 13:20.110
imager

13:20.110 --> 13:22.510
url

13:22.510 --> 13:24.110
图片我们说一下

13:24.110 --> 13:26.190
这个图片是一个自定义图片路径

13:26.190 --> 13:27.710
你可以是本地的

13:27.710 --> 13:29.070
那么也可以是网络的

13:29.070 --> 13:31.310
那我们就拿一张网络图片

13:31.310 --> 13:32.270
就是学习

13:32.270 --> 13:34.190
我们称之为学习图片

13:34.190 --> 13:35.470
本地图片网络图片

13:35.470 --> 13:37.150
都可以

13:37.150 --> 13:39.950
那我们就去到网络上

13:39.950 --> 13:41.870
我们拿一张下来

13:41.870 --> 13:43.390
我们称之为

13:43.390 --> 13:50.900
学习图片

13:50.900 --> 13:52.340
随便摆图图片里面

13:52.340 --> 13:53.620
有没有什么学习的

13:53.620 --> 13:55.780
对吧

13:55.780 --> 14:04.110
搞一张学习图片过来

14:04.110 --> 14:07.230
有没有什么好一点的

14:07.230 --> 14:08.430
就是类似于这样吧

14:08.430 --> 14:09.710
我们复制图片地址

14:09.710 --> 14:10.510
我们看一下

14:10.510 --> 14:13.310
是否这张图片可以呈现

14:13.310 --> 14:14.030
可以啊

14:14.030 --> 14:16.270
我们就把这图片拿过来

14:16.270 --> 14:20.670
借用一下

14:20.670 --> 14:22.110
它的这个地址

14:22.110 --> 14:23.150
不一定能够呈现

14:23.150 --> 14:25.310
它可能是一个另机

14:25.310 --> 14:29.900
我们换一个

14:29.900 --> 14:31.500
就这个吧

14:31.500 --> 14:32.940
复制图片地址

14:32.940 --> 14:33.980
咱们看一下

14:33.980 --> 14:34.620
对吧

14:34.620 --> 14:38.180
就是一个小图片

14:38.180 --> 14:39.380
拿过来

14:39.380 --> 14:40.980
在不做任何判断情况下

14:40.980 --> 14:42.660
我们只给了一个return

14:42.660 --> 14:43.780
这样的写法

14:43.780 --> 14:44.900
那么这样的话呢

14:44.900 --> 14:51.340
我们来看一下页面

14:51.340 --> 14:53.500
点击上面这个

14:53.500 --> 14:54.620
这个是关

14:54.620 --> 14:55.100
关的话

14:55.100 --> 14:56.620
它有个场景

14:56.620 --> 14:58.300
它有个转发出来

14:58.300 --> 14:59.260
那么如果说

14:59.260 --> 15:00.300
你没有它的话

15:00.380 --> 15:01.180
这个按钮点下去

15:01.180 --> 15:01.980
会是什么样的

15:01.980 --> 15:06.220
你来看

15:06.220 --> 15:07.020
你看到吗

15:07.020 --> 15:09.820
它说当前页面为设置分享效果

15:09.820 --> 15:11.340
只有你设置了这个

15:11.340 --> 15:16.060
那它才会下面出那个转发按钮

15:16.060 --> 15:17.820
点击

15:17.820 --> 15:19.660
页面出来点击点转发

15:19.660 --> 15:23.360
一打开

15:23.360 --> 15:25.200
学习战友了

15:25.200 --> 15:26.400
这是那个图片啊

15:26.400 --> 15:29.040
那个图片

15:29.040 --> 15:31.600
这边呈现不好

15:31.600 --> 15:33.600
这个图片它呈现的不好

15:33.600 --> 15:38.210
没有那一张

15:38.210 --> 15:39.330
我们图片就待会

15:39.330 --> 15:40.290
我们再找一张待会

15:40.290 --> 15:41.890
先把它的这个功能做好

15:41.890 --> 15:43.970
我们待会再找一张图片吧

15:43.970 --> 15:45.410
我们就先这样看

15:45.410 --> 15:48.210
待会再找一张

15:48.210 --> 15:49.570
转发点开

15:49.570 --> 15:50.370
你看到吗

15:50.370 --> 15:51.570
没有图片情况下

15:51.570 --> 15:53.890
它会节当前的

15:53.890 --> 15:56.130
屏幕从上往下的一段

15:56.130 --> 15:57.330
告诉你学习战

15:57.330 --> 15:58.210
然后这时候呢

15:58.210 --> 15:59.170
你点发送

15:59.170 --> 16:00.370
因为我现在是模拟

16:00.370 --> 16:01.730
所以的话模拟器上面

16:01.730 --> 16:03.330
所以它不会做转发

16:03.330 --> 16:05.170
那么这边额外说一下

16:05.170 --> 16:07.650
小程序的赫罗称之为

16:07.650 --> 16:10.130
我们的微信小程序的转发功能

16:10.130 --> 16:12.050
它可以给到个人

16:12.050 --> 16:13.730
可以给到群

16:13.730 --> 16:16.690
但是它没有办法给到朋友圈

16:16.690 --> 16:18.530
你谁有见过在朋友圈

16:18.530 --> 16:21.490
直接进来进到小程序的

16:21.490 --> 16:22.370
原因很简单

16:22.370 --> 16:25.730
因为小程序的宿主是针对于微信的

16:25.730 --> 16:27.490
它不能单独打开

16:27.490 --> 16:28.130
这个

16:28.130 --> 16:28.850
同时呢

16:28.850 --> 16:31.570
我们的小程序也做了这个限制

16:31.570 --> 16:33.730
它不希望你行程

16:33.730 --> 16:36.690
做小程序以后的一个

16:36.690 --> 16:38.770
无目的的传播

16:38.850 --> 16:40.290
行程这样大量的

16:40.290 --> 16:41.970
它希望简单的就是

16:41.970 --> 16:46.290
几个人或者是功能之间的一个小的操作

16:46.290 --> 16:48.290
它形成了这样的一个概念

16:48.290 --> 16:52.290
所以它没有办法往朋友圈进行转

16:52.290 --> 16:53.170
看到了

16:53.170 --> 16:54.770
我们把那图片再看一下

16:54.770 --> 16:55.970
我们把图片加载一下

16:55.970 --> 16:59.010
刚才那图片没有呈现出来对吧

16:59.010 --> 17:01.730
那么意味着可能是图片本身自己

17:03.570 --> 17:04.370
不对

17:04.370 --> 17:06.130
那张图片不对

17:06.130 --> 17:08.610
我们再来拿一张

17:08.610 --> 17:10.370
我们再拿一张网络图片

17:10.370 --> 17:11.330
我们看一下

17:13.010 --> 17:14.210
它支持JPG

17:14.210 --> 17:15.490
PNG

17:15.490 --> 17:17.410
这个图片

17:17.410 --> 17:18.210
路径

17:18.210 --> 17:18.690
我们看

17:18.690 --> 17:20.530
它其实是没有路径的

17:20.530 --> 17:21.730
那么我们

17:23.170 --> 17:23.970
网上的很多图片

17:23.970 --> 17:25.650
它没有路径的话呢

17:25.650 --> 17:26.290
这样这个

17:26.290 --> 17:27.010
我们看一下

17:28.610 --> 17:30.130
没有那个后坠

17:30.130 --> 17:30.370
看到了吗

17:30.370 --> 17:32.050
它没有那个后坠名

17:32.050 --> 17:34.930
那么它没有后坠名的话呢

17:34.930 --> 17:36.930
它本身这个效果

17:36.930 --> 17:37.730
复制图片地址

17:37.730 --> 17:38.930
我们这样再试试看

17:38.930 --> 17:40.930
不行的话我们拿本地

17:40.930 --> 17:41.570
看到了吗

17:41.570 --> 17:42.850
它其实是百度上面

17:42.850 --> 17:44.450
它把这个隐藏了

17:45.650 --> 17:47.010
那我们就不拿它了

17:47.010 --> 17:49.410
我们需要一个后坠是JPG的

17:49.410 --> 17:51.410
所以我们拿本地吧

17:51.410 --> 17:52.770
在我本地

17:52.770 --> 17:54.130
我们在Images里面

17:54.130 --> 17:56.050
我们也放了个123的图片

17:56.050 --> 17:57.890
就是一个孩子这样将图片

17:57.890 --> 18:00.530
然后我们就拿它来显示

18:00.530 --> 18:02.210
网上图片它本身后坠

18:02.210 --> 18:03.650
它都有一个问题

18:03.650 --> 18:06.130
它是经过转向的

18:06.370 --> 18:08.610
我们刚刚

18:08.610 --> 18:13.730
代表跑到现在的上层上层的Images里面

18:13.730 --> 18:14.050
ok

18:15.890 --> 18:19.330
Images里面我们找到123.jpg

18:19.330 --> 18:20.290
我们直接这样写

18:21.330 --> 18:23.010
网上图片你除非找到一张

18:23.010 --> 18:25.170
我们说你可以去拿一张后坠是JPG的

18:25.170 --> 18:26.290
这样一个图片

18:26.290 --> 18:28.530
并且它是没有防盗链的

18:28.530 --> 18:29.250
这样的故事

18:30.290 --> 18:31.730
我们现在来看一下

18:31.730 --> 18:32.050
打开

18:33.010 --> 18:33.410
点击

18:34.050 --> 18:34.610
转发

18:34.610 --> 18:35.010
有了吧

18:35.890 --> 18:36.530
这个有了

18:37.090 --> 18:39.010
可能刚才两个图片它都有防盗链

18:39.010 --> 18:40.770
并且它可能后坠明

18:40.770 --> 18:42.370
识别起来找不到

18:42.370 --> 18:44.210
现在我们拿本地这样图片的话就可以

18:45.330 --> 18:46.210
这样的话

18:46.210 --> 18:48.770
我们就能加载这样的一个效果出来

18:48.770 --> 18:50.050
进行转发

18:50.050 --> 18:52.290
同时我们再说一下

18:52.290 --> 18:54.050
本身自己它在做的时候

18:54.050 --> 18:55.650
我们刚才讲到了

18:55.650 --> 18:58.370
它会有一个所谓的判断

18:59.490 --> 19:01.330
我们此时再做个按钮出来

19:01.330 --> 19:01.970
我们来看一下

19:03.250 --> 19:04.290
我们做个按钮出来

19:05.330 --> 19:08.450
那么最好的方式是我们这边写一个button

19:10.580 --> 19:11.300
写个button

19:12.260 --> 19:12.580
好

19:12.580 --> 19:13.620
紧接着再来

19:22.050 --> 19:22.450
button

19:22.930 --> 19:26.990
咱们叫做转发

19:27.950 --> 19:28.590
对吧

19:28.590 --> 19:30.190
那么在这个转发上面

19:30.190 --> 19:30.830
我们写上

19:32.190 --> 19:32.910
open type

19:33.790 --> 19:34.270
等于

19:35.150 --> 19:35.550
shear

19:36.110 --> 19:36.830
写上这个词

19:37.790 --> 19:39.070
然后我们再来看一下效果

19:42.500 --> 19:43.540
是不是也掉出来了

19:44.340 --> 19:44.740
对吧

19:44.740 --> 19:45.780
我们刚才说的

19:45.780 --> 19:48.100
这功能的确是ok能够实现

19:48.100 --> 19:49.460
那么现在我们得回到

19:49.460 --> 19:51.300
我们现在的转发里面去

19:51.300 --> 19:52.740
转发里面本身自己呢

19:52.740 --> 19:53.700
在这一块上面

19:53.700 --> 19:54.660
我们需要去

19:55.300 --> 19:58.100
我们需要去对它进行一定的识别

19:58.100 --> 20:00.260
你到底是来自于哪一个

20:00.260 --> 20:00.900
通过这个e

20:01.460 --> 20:02.020
是吧

20:02.020 --> 20:03.380
我们在程序中也看到了

20:03.940 --> 20:04.340
if

20:05.780 --> 20:06.660
1点

20:08.180 --> 20:08.500
from

20:09.220 --> 20:11.540
如果它等于等于自付串

20:11.540 --> 20:13.700
并且里面是button的话

20:17.060 --> 20:17.620
button的话

20:18.500 --> 20:19.780
我们可以看一下

20:19.860 --> 20:22.500
它所传送过来的console.log

20:23.700 --> 20:25.140
它传送过来console.log

20:25.140 --> 20:25.940
1点

20:28.450 --> 20:29.170
jugit

20:29.170 --> 20:30.530
究竟是一个什么东西

20:31.970 --> 20:32.610
来

20:32.610 --> 20:34.210
我们继续运行

20:35.890 --> 20:37.250
把前面的删掉

20:38.050 --> 20:39.170
点它的话

20:41.010 --> 20:41.970
它会没有的

20:41.970 --> 20:42.770
这个是hitter

20:42.770 --> 20:44.130
表示后面的隐藏

20:44.450 --> 20:44.930
不算

20:45.650 --> 20:46.290
点它

20:47.250 --> 20:48.210
咱们看上面

20:48.530 --> 20:49.490
出来了一个

20:49.810 --> 20:50.130
好

20:50.130 --> 20:50.850
先关掉它

20:50.850 --> 20:51.410
我们来看

20:52.050 --> 20:54.130
这边会有一个target

20:54.130 --> 20:57.490
也就是当前这个按钮的一个事件

20:58.050 --> 20:59.090
当前这按钮

20:59.090 --> 21:00.770
我们看它距离顶部

21:00.770 --> 21:03.090
距离下面按钮是否有id

21:03.090 --> 21:04.450
按钮是否有数据

21:04.930 --> 21:05.570
这个内容

21:05.570 --> 21:07.490
有的数据可以怎么去加

21:08.290 --> 21:08.690
首先

21:09.250 --> 21:10.850
你的id你可以写死

21:10.850 --> 21:12.290
比如说mybtn

21:13.490 --> 21:14.610
这是id肯定能传

21:15.090 --> 21:16.850
那么它还有一个叫做dataset

21:16.850 --> 21:18.050
dataset数据

21:18.050 --> 21:20.290
其实是接收你自定义数据结构

21:20.770 --> 21:21.650
自定义数据结构

21:21.650 --> 21:23.250
其实我们就是datagun

21:23.650 --> 21:24.770
datagun里面的结构

21:24.770 --> 21:27.410
比如说我现在写上一个nand

21:28.130 --> 21:29.010
它是表示

21:29.010 --> 21:29.810
我们写上

21:30.530 --> 21:33.250
这是属于johnson

21:36.210 --> 21:37.570
给它一个简单的名字

21:37.570 --> 21:39.650
代表我自行点击按钮以后

21:39.650 --> 21:41.650
可以传输的一个内容

21:42.130 --> 21:42.770
此时

21:42.770 --> 21:43.650
我们来看一下

21:44.290 --> 21:46.770
对于我们现在的页面

21:47.570 --> 21:49.170
我们就可以进行操作了

21:49.170 --> 21:50.210
点击转发

21:50.930 --> 21:51.730
我们看这边

21:52.770 --> 21:53.250
看到吗

21:53.570 --> 21:54.930
id是没有关系

21:54.930 --> 21:55.890
刚才我设定的

21:55.890 --> 21:58.610
在dataset里面会设计这个内容出来

21:58.610 --> 21:59.570
那么这样的话

21:59.570 --> 22:01.570
我就可以把这些值

22:01.570 --> 22:04.210
进行人为的在这样的设定

22:04.210 --> 22:04.690
比如说

22:06.130 --> 22:06.530
taro

22:07.650 --> 22:08.370
学习站

22:09.650 --> 22:11.890
或者是学习平台

22:12.370 --> 22:13.410
我写上这几句话

22:13.970 --> 22:14.770
那么这样的话

22:14.770 --> 22:16.130
我在转发的里面

22:16.130 --> 22:17.810
我就可以直接把

22:17.810 --> 22:20.930
这里边所拿到的dataset

22:20.930 --> 22:22.450
我往这边放了

22:22.530 --> 22:23.890
我就不会写死了

22:23.890 --> 22:24.450
对吧

22:25.090 --> 22:25.650
一一点

22:26.210 --> 22:27.810
下面两个是一样的概念

22:27.810 --> 22:29.090
下面两个一样的概念

22:32.270 --> 22:33.390
我们这样

22:33.390 --> 22:35.070
我们不在这上面放

22:35.070 --> 22:35.550
为什么

22:35.550 --> 22:37.550
万一不是我们的button的话

22:37.550 --> 22:40.030
所以我们在里面去定义一个变量

22:40.030 --> 22:41.230
这个变量出来

22:41.230 --> 22:43.310
我们称之为下杠title

22:43.790 --> 22:44.670
里面就写上

22:45.870 --> 22:46.350
taro

22:46.990 --> 22:47.950
学习站

22:49.070 --> 22:51.630
然后在我们的最终显示位置

22:51.630 --> 22:53.630
我们把title写上去

22:54.510 --> 22:55.630
然后在这里

22:55.630 --> 22:57.390
我们写上的是

22:57.390 --> 22:59.550
如果你现在是button进来的

22:59.550 --> 23:01.950
那我们接收你button里面的数据

23:01.950 --> 23:02.990
来改变这个

23:02.990 --> 23:03.310
注意

23:03.310 --> 23:04.910
这边不要用this.title

23:04.910 --> 23:07.230
this.title表示对相极的了

23:07.230 --> 23:08.430
我现在只需要一个

23:08.430 --> 23:10.910
我们当前在这个函数事件里的

23:10.910 --> 23:12.110
所以你直接title

23:13.630 --> 23:14.510
它去等于

23:15.070 --> 23:20.350
你现在e.target里面的dataset.net

23:21.630 --> 23:22.350
这样去设定

23:23.070 --> 23:24.510
那么我们来看一下

23:24.510 --> 23:25.470
现在的页面效果

23:27.070 --> 23:29.630
首先如果你点击了我们的转发

23:29.630 --> 23:30.350
看到吗

23:30.350 --> 23:32.030
学习平台变成这个字

23:32.830 --> 23:34.830
但是如果你现在点击的是我们的

23:34.830 --> 23:36.190
上面这个的转发

23:36.190 --> 23:37.310
那么它是学习站

23:37.870 --> 23:38.670
是不是

23:38.670 --> 23:40.510
那么这样也就意味着

23:40.510 --> 23:44.110
我们现在可以控制转发的内容

23:44.110 --> 23:45.870
并不是写死在里面

23:45.870 --> 23:48.590
而是通过我现在的按钮

23:48.590 --> 23:51.550
来进行所谓的一个设定

23:51.630 --> 23:52.910
或者说给它传植

23:53.790 --> 23:54.910
是在这个上面

23:54.910 --> 23:55.710
注意哦

23:55.710 --> 23:58.830
这个是我们非常不同的一个点

23:59.630 --> 24:00.190
大家的话

24:00.190 --> 24:02.110
一定要把这内容去理清

24:02.110 --> 24:04.030
它的一个关系

24:04.030 --> 24:06.030
按钮的话由于可以传植

24:06.030 --> 24:07.550
所以它会有数据

24:07.550 --> 24:09.310
可以往里进行操作

24:09.310 --> 24:10.990
但是我如果点上面这个

24:10.990 --> 24:12.190
你哪来的数据传植

24:12.190 --> 24:13.950
它是属于我们整个的

24:15.070 --> 24:16.110
框架的

24:16.110 --> 24:17.550
它就没有办法进行操作

24:17.550 --> 24:17.950
理解吧

24:18.750 --> 24:19.550
一定这里面

24:19.550 --> 24:20.430
千万还有一点

24:20.910 --> 24:21.870
千万注意

24:21.870 --> 24:24.430
你不能在这里直接给它

24:24.430 --> 24:27.310
把这个1点target dataset往这放

24:27.310 --> 24:28.430
你一阵往这放以后

24:28.430 --> 24:31.310
万一它是通过我们的右上角进来的

24:31.310 --> 24:32.030
你就没值了

24:32.030 --> 24:32.510
这里是

24:33.630 --> 24:34.190
OK吧

24:34.190 --> 24:34.510
好

24:34.510 --> 24:37.150
这是属于I'm sure app messenger的设定

24:38.750 --> 24:39.630
Tel里面的写法

24:39.630 --> 24:40.590
请注意哦

24:40.590 --> 24:42.670
我们本身上面在设定的时候

24:42.670 --> 24:43.710
我们下面

24:43.710 --> 24:45.630
其实对它的操作

24:45.630 --> 24:47.630
我们就直接执行这样的按钮

24:47.630 --> 24:48.670
注意这个操作

24:49.550 --> 24:50.990
这是微信自带的

24:50.990 --> 24:52.270
你要直接用的话

24:52.270 --> 24:53.150
像这样的话

24:53.150 --> 24:54.830
其实你就可以用unclick

24:54.830 --> 24:56.110
这样没有没有关系

24:56.110 --> 24:57.950
但如果说你要微信自带的话

24:57.950 --> 25:00.510
那你上面需要导入我们的那个button

25:00.510 --> 25:02.510
让它知道这是一个微信按钮

25:03.710 --> 25:04.510
紧接着

25:04.510 --> 25:05.470
我们就继续来往下看

25:06.510 --> 25:07.550
我们打开文档

25:11.120 --> 25:13.040
我们往下走一下

25:16.940 --> 25:18.940
刚才我们说到的是这个

25:18.940 --> 25:20.060
share app messenger

25:20.620 --> 25:21.660
紧接继续往下

25:21.660 --> 25:22.300
resize

25:22.940 --> 25:26.620
resize是小屏幕进行所谓的屏幕

25:26.620 --> 25:31.740
进行旋转切换时出发

25:31.740 --> 25:32.540
那么这个的话

25:32.540 --> 25:34.380
我们要去看一下旋转区域

25:34.380 --> 25:35.180
也就是我们这

25:35.180 --> 25:36.780
之前我们不是看过吗

25:36.780 --> 25:38.540
Pay the orientation

25:38.540 --> 25:39.260
那个auto

25:39.260 --> 25:39.900
代表

25:39.900 --> 25:41.900
它的屏幕会根据你的情况

25:41.900 --> 25:43.100
自行进行切换

25:43.100 --> 25:43.740
对不对

25:43.740 --> 25:45.340
我们要求是2.5以上

25:45.340 --> 25:46.300
那么看到

25:46.300 --> 25:48.940
我们这个功能是直接设定一个q

25:48.940 --> 25:50.540
它是在页面中设定

25:50.620 --> 25:52.860
它是基于小程序2.3本本

25:52.860 --> 25:54.220
比它还早一点

25:54.220 --> 25:56.540
那么它是基于iPad上面的小程序

25:56.540 --> 25:57.180
可以支持

25:58.140 --> 26:01.020
它一旦自己会获取到iPad

26:01.020 --> 26:02.780
是不是在iPad上运行

26:02.780 --> 26:03.820
如果是的话

26:03.820 --> 26:05.980
由于iPad本身非常大

26:05.980 --> 26:08.620
那么有时候我们就希望它横向过来

26:08.620 --> 26:10.780
所以你就可以去设定这个词

26:10.780 --> 26:13.420
resizable to this

26:13.420 --> 26:14.300
你看一下

26:14.300 --> 26:15.660
这是小程序自己的

26:15.660 --> 26:17.500
如果在小程序添加此声明

26:17.500 --> 26:18.780
则在屏幕旋转时

26:18.780 --> 26:21.340
小程序随之会进行旋转

26:21.340 --> 26:23.260
那么尺寸也会注意变化

26:23.260 --> 26:25.900
注意在iPad上面不能单独配置这个

26:25.900 --> 26:27.420
需要支持屏幕旋转

26:27.420 --> 26:28.220
什么意思

26:28.220 --> 26:30.700
你需要把这项一起设定出来

26:30.700 --> 26:33.100
这两项是一定放在一起设定的

26:33.100 --> 26:33.660
ok

26:33.660 --> 26:34.540
说明一下就可以

26:36.300 --> 26:39.500
它其实这两项的作用不一样

26:39.500 --> 26:41.100
它代表的叫做

26:41.100 --> 26:42.540
允许旋转

26:42.540 --> 26:46.220
它是叫做允许改变大小

26:46.220 --> 26:50.060
允许size尺寸

26:50.060 --> 26:52.220
able是可以

26:52.220 --> 26:53.900
re就是重新

26:53.900 --> 26:56.220
重新改变尺寸是可以

26:56.220 --> 26:57.740
旋转以后重新改变尺寸

26:57.740 --> 27:00.300
那这个逻辑才顺利

27:00.300 --> 27:00.860
ok

27:00.860 --> 27:01.820
我们继续往下

27:01.820 --> 27:03.260
这个我就不设定了

27:03.260 --> 27:04.460
那么下面还有一些

27:04.460 --> 27:07.420
比如说像这个点击tab是触发

27:07.420 --> 27:09.180
那么如果说

27:09.180 --> 27:10.380
当前页面

27:10.380 --> 27:13.980
它的确是属于我们的tabwa下面的

27:13.980 --> 27:15.500
那么它会触发这个值

27:15.500 --> 27:16.460
我们来看一下

27:16.460 --> 27:17.900
我们当前这个页面

27:17.900 --> 27:20.460
是不是index这个值

27:20.460 --> 27:21.420
的确是

27:21.420 --> 27:36.780
所以我们在这边写一下

27:36.780 --> 27:38.060
点击tab是触发

27:38.060 --> 27:39.900
我们只要写内容就可以

27:39.900 --> 27:43.460
并不需要我们过多的

27:43.460 --> 27:44.180
业务逻辑

27:44.180 --> 27:46.100
咱们是根据不同的业务可以判断

27:46.100 --> 27:47.300
但是触发时间点

27:47.300 --> 27:48.580
我们应该都知道

27:48.580 --> 27:49.140
对吧

27:49.140 --> 27:53.940
这应该是tabitemtab

27:53.940 --> 27:56.500
我们把这个字写在这儿

27:56.500 --> 27:56.740
好

27:56.740 --> 27:57.380
我们来看一下

27:59.140 --> 28:00.180
本身这个页面

28:00.180 --> 28:02.740
就是属于我们的tab接口里面的

28:02.740 --> 28:03.460
那我们来看

28:03.460 --> 28:04.340
点击它

28:04.340 --> 28:05.940
是不是它触发了

28:05.940 --> 28:06.660
对吧

28:06.660 --> 28:07.700
那么问题来了

28:07.700 --> 28:08.740
点击它

28:08.740 --> 28:10.100
当然没有了

28:10.100 --> 28:12.820
但是在我们的后一个页面

28:12.820 --> 28:14.500
后一个页面的时候

28:14.500 --> 28:16.180
我们再回点它

28:16.180 --> 28:17.860
它立马会触发

28:17.860 --> 28:19.620
所以这个操作

28:19.620 --> 28:20.580
它本身来讲

28:20.580 --> 28:21.700
有两个点触发

28:21.700 --> 28:22.500
第一

28:22.500 --> 28:24.500
自己打开的已经点自己

28:24.500 --> 28:25.460
第二个的话呢

28:25.460 --> 28:26.900
是别的页面

28:26.900 --> 28:28.340
处于激活状态

28:28.340 --> 28:31.860
你从未激活到激活状态下

28:31.860 --> 28:32.980
它也会触发

28:34.020 --> 28:36.660
所以我们可以把它理解成什么呢

28:36.660 --> 28:40.580
是只要你对着当前设定过

28:40.580 --> 28:42.660
tabitemtab事件的

28:42.660 --> 28:45.620
这样的一个触发tabbar

28:45.620 --> 28:46.580
click事件的时候

28:46.580 --> 28:47.380
它就触发了

28:48.580 --> 28:49.860
是这个逻辑

28:49.860 --> 28:52.020
那么这个上面的话

28:52.020 --> 28:54.100
有时候我们经常会做什么

28:54.100 --> 28:57.300
就是我们经常会去做一个判别

28:57.380 --> 28:58.260
比如说

28:58.260 --> 29:00.420
你现在里面出现一个我的

29:00.420 --> 29:02.420
你是否是登录了

29:03.460 --> 29:04.100
对吧

29:04.100 --> 29:05.780
我们如果没有登录

29:05.780 --> 29:06.580
那么这时候

29:06.580 --> 29:08.260
我们肯定给它一个参数

29:08.260 --> 29:09.700
让它显示是

29:09.700 --> 29:10.740
你去登录

29:10.740 --> 29:12.660
给它一个登录注册界面

29:12.660 --> 29:14.020
如果你已经登录了

29:14.020 --> 29:15.780
那么这时候就OK

29:15.780 --> 29:16.820
除了这个以外呢

29:16.820 --> 29:17.940
我们还可以再做

29:17.940 --> 29:19.220
就是引申为

29:19.220 --> 29:21.540
你需要进入这个页面的

29:21.540 --> 29:22.900
或者这个操作的

29:22.900 --> 29:24.180
一个权限

29:24.180 --> 29:25.780
一个权限

29:25.780 --> 29:27.380
那么我们可以在我们的

29:27.380 --> 29:29.220
tabitemtab里面去执行

29:30.180 --> 29:31.460
是这个逻辑

29:31.460 --> 29:32.980
紧接着我们继续往下看

29:33.780 --> 29:36.500
主要它下面会有几个操作点

29:36.500 --> 29:39.460
你点击了哪一个

29:39.460 --> 29:41.460
你现在因为下面的

29:41.460 --> 29:42.660
我们的tab的话呢

29:42.660 --> 29:43.700
它是在list里面

29:43.700 --> 29:44.820
tabbarlist里面

29:44.820 --> 29:46.260
所以它是一个宿主

29:46.260 --> 29:48.340
你可以知道我点了哪一个

29:48.340 --> 29:49.300
对吧

29:49.300 --> 29:50.580
被点击的item

29:50.580 --> 29:52.020
是到底是哪一个item

29:52.020 --> 29:53.140
以及文本

29:53.140 --> 29:54.660
这个的话我就不掩饰了

29:54.660 --> 29:56.260
那应该一看就明白

29:56.260 --> 29:57.460
它可以获取

29:57.460 --> 29:59.060
当前你点了那个按钮的

29:59.060 --> 30:00.740
元素数据

30:00.740 --> 30:01.700
这意思

30:02.820 --> 30:04.580
再看一下这个

30:04.580 --> 30:08.420
叫做component well-relauded

30:08.420 --> 30:10.580
plauded

30:10.580 --> 30:12.980
那个lauded是加载

30:12.980 --> 30:13.620
plaud

30:13.620 --> 30:15.380
它表示预加载

30:15.380 --> 30:18.500
那么什么时候会有预加载勾字函数呢

30:18.500 --> 30:20.660
那么这边需要额外说一下

30:20.660 --> 30:21.860
所谓的预加载

30:21.860 --> 30:25.300
其实是微信后期所给出的一个

30:25.300 --> 30:26.580
加载模型

30:26.580 --> 30:28.100
那么主要的预加载呢

30:28.100 --> 30:30.500
我们很多时候都用在分包上面

30:30.500 --> 30:31.860
都在分包上面

30:31.860 --> 30:35.300
也就是说我们记得分包的概念吗

30:35.300 --> 30:36.500
分包是指的是

30:36.500 --> 30:39.540
我们如果一个程序或者小程序

30:39.540 --> 30:41.140
它大于了两兆

30:41.140 --> 30:42.580
但是我想使用的过程中

30:42.580 --> 30:45.460
我就需要把主程序打包一下

30:45.460 --> 30:46.900
形成一个主包

30:46.900 --> 30:47.540
然后呢

30:47.540 --> 30:49.940
你要加载或者打下面页面的时候

30:49.940 --> 30:51.940
我们再下载另一个分包

30:51.940 --> 30:52.580
这样呢

30:52.580 --> 30:53.780
每个包的大小

30:53.780 --> 30:55.940
只要不大于两兆就ok了

30:55.940 --> 30:58.980
那么如果说我在下载主包的时候

30:58.980 --> 31:00.820
我们需要去完成

31:00.820 --> 31:02.820
其他页面的预加载概念

31:02.820 --> 31:03.620
就是说

31:03.620 --> 31:05.460
我现在主包上面下载好了

31:05.460 --> 31:06.660
你用户一直是看看

31:06.660 --> 31:07.540
没有什么事

31:07.540 --> 31:08.660
那么这种时候呢

31:08.660 --> 31:10.820
与其在用户点击的一刻

31:10.820 --> 31:11.620
一起加载

31:11.620 --> 31:12.500
还不如

31:12.500 --> 31:15.460
我们可以进行额外的预先的

31:15.460 --> 31:16.340
去加载功能

31:16.340 --> 31:18.980
这种时候我们是要设定这个字的

31:18.980 --> 31:20.580
是这个逻辑

31:20.580 --> 31:22.260
是属于这样的预加载

31:22.260 --> 31:25.460
有些内容还没有从网络上下来

31:25.460 --> 31:27.780
有些内容还没有进行

31:27.780 --> 31:29.220
那个操作的前

31:29.220 --> 31:31.700
我们先完成它的一个预加载

31:31.700 --> 31:32.900
是这个逻辑

31:32.900 --> 31:34.260
如果你是文本啊

31:34.260 --> 31:35.300
或者说是一些内容

31:35.300 --> 31:36.660
那这个就不需要了

31:36.660 --> 31:37.700
这个很简单

31:37.700 --> 31:39.620
预加载其实最主要的目的

31:39.620 --> 31:42.260
就是让我们在操作后续内容的时候

31:42.260 --> 31:43.860
加快速度

31:43.860 --> 31:46.020
但是网络的操作这个点

31:46.020 --> 31:46.980
把它分散了

31:46.980 --> 31:48.260
不是在点击的那一刻

31:48.260 --> 31:49.780
而是在点击之前

31:49.780 --> 31:51.780
它是起这个作用的事

31:51.780 --> 31:53.780
紧接着我们再看这个

31:53.780 --> 31:56.020
这个是on tap click

31:56.020 --> 31:56.740
它只

31:56.740 --> 31:57.540
注意一下

31:57.540 --> 31:58.500
这个你不能用

31:58.500 --> 32:01.700
它只支持支付保小程序的预计操作

32:01.700 --> 32:05.700
那么点击我们的支付保小程序的时候

32:05.700 --> 32:08.260
那么上面会有一个标题

32:08.260 --> 32:10.580
那么标题操作时候会有这功能

32:10.580 --> 32:12.020
你即使写了

32:12.020 --> 32:16.300
那么微信在编译时候也会忽略它

32:16.300 --> 32:16.620
好

32:16.620 --> 32:17.260
那么注意啊

32:17.260 --> 32:18.060
支付保小程序

32:18.060 --> 32:20.380
它有一个on option menu

32:20.380 --> 32:21.900
它有一个菜单的

32:21.900 --> 32:22.860
这个是

32:22.860 --> 32:25.100
那么支付保小程序也有一个pop menu

32:25.100 --> 32:30.220
这些支付保小程序有一个polling reflect

32:30.220 --> 32:32.380
它是下拉阶段

32:32.380 --> 32:35.980
什么叫下拉阶段是触发的

32:35.980 --> 32:37.740
咱们举一个生活中的势力

32:37.740 --> 32:40.220
就是我一直在往下滚

32:40.220 --> 32:41.660
滚动看内容

32:41.660 --> 32:44.860
此时突然支付保推送给你一个数据

32:44.860 --> 32:46.300
推送给你一个内容

32:46.300 --> 32:48.220
在你页面中间弹出一个广告

32:48.220 --> 32:49.820
灯一个广告弹出来

32:49.820 --> 32:50.860
此时的时候

32:50.860 --> 32:52.060
你需要阶段

32:52.060 --> 32:54.140
也就是来看一下这功能

32:54.140 --> 32:55.580
所以你看它的提示

32:55.580 --> 32:58.860
H5并没有实现这个一个下拉阶段

32:58.860 --> 32:59.580
这设施

32:59.580 --> 33:01.020
下拉阶段这设施

33:01.020 --> 33:02.140
所以我们讲

33:02.140 --> 33:03.820
它本身来讲需要的是

33:03.820 --> 33:06.780
我们的pager window scholar这个事件

33:06.780 --> 33:09.740
而且完成这个来代替我们scolar view

33:09.740 --> 33:11.340
这个的话至少现在来讲

33:11.340 --> 33:13.340
大家并不需要过多的关心

33:13.340 --> 33:15.580
什么时候你去开发支付保小程序了

33:15.580 --> 33:17.500
那么你只需要把这几个设定一下

33:17.500 --> 33:20.060
知道它的出发点就可以了

33:20.060 --> 33:21.020
理解吧

33:21.020 --> 33:22.060
是这意思

33:22.060 --> 33:22.620
OK

33:22.620 --> 33:24.060
那么我们再来看一下

33:24.060 --> 33:26.140
刚刚我们说到的这么多的

33:26.140 --> 33:27.900
我们页面时间处理程序

33:27.900 --> 33:29.260
那么它都支持哪些

33:29.260 --> 33:30.780
这边做了一个会总表

33:30.780 --> 33:31.660
咱们看到

33:31.660 --> 33:34.460
基本上到我们的这个预加

33:34.460 --> 33:36.620
在前面的话小程序全支持

33:36.620 --> 33:38.860
那我们基本上这些内容

33:38.860 --> 33:42.460
就是1 2 3 4

33:42.460 --> 33:43.900
这两个还用的不多

33:43.900 --> 33:46.220
2 3 4经常有时候会用到

33:46.220 --> 33:47.900
因为

33:47.900 --> 33:50.300
除了我现在生活中

33:50.300 --> 33:51.900
除了看到所谓的

33:51.900 --> 33:52.860
就是3D

33:52.860 --> 33:54.140
就是我们所谓的

33:54.140 --> 33:56.460
利用陀螺仪加上螺盘

33:56.460 --> 33:58.460
来制作一些功能以外的话

33:58.460 --> 33:59.420
那么比如说

33:59.420 --> 34:00.300
大家先做

34:00.300 --> 34:03.340
有没有看到现在外面有一种

34:03.340 --> 34:04.780
装修公司

34:04.780 --> 34:07.100
让你在没有装修的时候

34:07.100 --> 34:08.780
就直接能看到

34:08.780 --> 34:10.060
现在的一个

34:10.060 --> 34:11.420
所谓的装修效果

34:11.420 --> 34:13.100
然后你手机可以旋转

34:13.100 --> 34:15.820
还有现在的VR AR的这种的虚拟效果

34:15.820 --> 34:17.260
这种效果上面

34:17.260 --> 34:18.780
它就会用到这种

34:18.780 --> 34:19.580
垂直不行

34:19.580 --> 34:20.860
水平过来

34:20.860 --> 34:21.580
但是

34:21.580 --> 34:23.900
其他的场景我们其实还不多

34:23.900 --> 34:27.260
你有见到过哪有小程序是横向过来使用的

34:27.260 --> 34:29.820
你可以告诉我一下有哪些

34:29.820 --> 34:31.020
我至少生活中没见到

34:31.020 --> 34:31.820
但是功能有

34:31.820 --> 34:33.180
我们会知道一下

34:33.180 --> 34:34.620
以后万一你进到公司

34:34.620 --> 34:36.140
或者说你自己要开发的话

34:36.140 --> 34:37.820
你也能去做这部分

34:37.820 --> 34:38.940
好 我们来说

34:38.940 --> 34:39.820
那么到这的话

34:39.820 --> 34:40.620
后面是组建了

34:40.620 --> 34:42.140
我们后面会继续讲解

34:42.140 --> 34:42.940
到这的话

34:42.940 --> 34:45.980
我们已经把我们的页面中的两大

34:45.980 --> 34:47.020
具体操作的

34:47.020 --> 34:47.820
一个是

34:47.820 --> 34:50.860
我们的页面的生命周期和它的configure

34:50.860 --> 34:53.660
第二个是页面的一个事件处理程序

34:53.660 --> 34:54.780
全部讲完了

34:54.780 --> 34:56.220
那么在这个过程中

34:56.220 --> 34:58.300
大家里面会设计到很多的一些坑

34:58.300 --> 34:59.660
或者说注意点

34:59.660 --> 35:00.780
甚至有一些

35:00.780 --> 35:04.380
是和我们平时在微信里面的写法完全不一样的

35:04.380 --> 35:06.060
那么你需要完全的去注意

35:06.060 --> 35:08.300
并且也能够进行一定的开发

35:08.300 --> 35:10.540
如果说你后期有些忘记的话

35:10.540 --> 35:12.220
你可以翻出这个视频

35:12.220 --> 35:14.540
来对它进行一定的重看

35:14.540 --> 35:15.260
ok

35:15.260 --> 35:17.580
那么这部分内容就先讲到这里了

