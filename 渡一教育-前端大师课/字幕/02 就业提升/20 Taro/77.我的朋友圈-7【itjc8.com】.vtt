WEBVTT

00:00.110 --> 00:03.510
好 我们继续讲解我们的这个案例

00:03.510 --> 00:08.110
就是我们的社交圈 朋友圈

00:08.110 --> 00:10.610
然后呢 我们在上节课时候呢

00:10.610 --> 00:12.110
我们做了一个回复

00:12.110 --> 00:15.110
我们把我们现在这篇信息

00:15.110 --> 00:17.610
这篇贴子的一个回复数据

00:17.610 --> 00:21.110
我们给它存储到了我们现在的一个数据库里面

00:21.110 --> 00:25.610
并且呢 我们也完成了对它的一个跳转

00:26.110 --> 00:29.110
乘田街那个操作以后

00:29.110 --> 00:32.610
它可以跳转回到我们前面的界面中

00:32.610 --> 00:35.610
那么此时呢 我们现在要做的一个事

00:35.610 --> 00:39.610
是对于这篇贴子下面的回复内容

00:39.610 --> 00:44.610
我们去做一个简单的 这个的一个显示

00:44.610 --> 00:46.610
那么我们来

00:46.610 --> 00:50.610
这个页面呢 应该是Home Detail 在这个页面中

00:50.610 --> 00:52.610
这个页面呢 我们往下看

00:52.610 --> 00:55.110
应该在这边 我们有一个回复

00:55.110 --> 01:00.000
对吧 这边有个回复列表

01:00.000 --> 01:03.000
我们需要把这里面内容呈现出来

01:03.000 --> 01:05.000
而这里面内容其实是我用户

01:05.000 --> 01:09.000
通过不断的回复回复 累加的

01:09.000 --> 01:12.000
所以它有循环的概念存在

01:12.000 --> 01:15.000
紧接着 我们呢 在什么时候

01:15.000 --> 01:17.000
我们把这个数据给调出来呢

01:17.000 --> 01:23.660
那我们现在我们去到我们的生命周期里面

01:23.660 --> 01:25.660
在我们生命周期里面

01:25.660 --> 01:29.660
我们可以把我们的这个数据给调换起来

01:29.660 --> 01:31.660
生命周期里面我们做过什么

01:31.660 --> 01:34.660
我们看到 首先在这个界面上面

01:34.660 --> 01:38.660
我们把这个贴子拿出来

01:38.660 --> 01:42.660
收藏是否喜欢 拿出来

01:42.660 --> 01:46.660
那么再往下 我们从这儿开始

01:47.660 --> 01:54.910
我们把它Get在这儿

01:54.910 --> 01:58.910
那么这个括号是我们最上面的

01:58.910 --> 02:00.910
就是Stator这个

02:00.910 --> 02:02.910
那我们就在这儿开始

02:02.910 --> 02:05.910
我们再拿一个回复列表

02:05.910 --> 02:16.080
拿一个回复列表 获取

02:16.080 --> 02:19.900
获取回复列表

02:19.900 --> 02:23.900
我们拿一个这样写 我们是

02:23.900 --> 02:35.110
that点 我们写个get reply

02:35.110 --> 02:38.870
get回复列表

02:38.870 --> 02:56.970
这页面之前已经操作过

02:56.970 --> 02:59.970
所以它会有db存在 直接用

02:59.970 --> 03:10.980
Well 它的条件是

03:10.980 --> 03:13.980
贴子

03:13.980 --> 03:16.980
topic的id 等于

03:16.980 --> 03:19.980
现在 this点

03:19.980 --> 03:24.860
Stator里面的id

03:24.860 --> 03:26.860
get 获取数据

03:26.860 --> 03:32.330
then res数据返回

03:32.330 --> 03:37.180
我们可以在这儿

03:37.180 --> 03:43.870
这是replay demo的res

03:43.870 --> 03:47.870
然后下面是把这个数据

03:47.870 --> 03:50.870
我们直接存到reply

03:50.870 --> 04:02.610
就是这个叫Stator里面来

04:02.610 --> 04:04.610
它由于是直接的调用

04:04.610 --> 04:07.610
所以我们这边可以有箭头

04:07.610 --> 04:09.610
但是我们还是喜欢

04:09.610 --> 04:11.610
给它做一个that

04:11.610 --> 04:17.010
这样的this指向非常明确

04:17.010 --> 04:19.010
that点

04:19.010 --> 04:22.010
set state

04:23.010 --> 04:28.010
然后这边我们写上

04:28.010 --> 04:34.780
刚才里面的reply

04:34.780 --> 04:36.780
帽号

04:36.780 --> 04:38.780
然后我们直接把这个数据

04:38.780 --> 04:41.780
直接针对于它现在的res

04:41.780 --> 04:48.460
里面返回的内容 给它替换掉

04:48.460 --> 04:49.460
替换掉

04:49.460 --> 04:51.460
保存

04:51.460 --> 04:54.460
reply里面就应该有我们现在的

04:54.460 --> 04:56.460
针对于你现在这个数据的

04:56.460 --> 05:00.020
我们可以通过这个指来看到

05:00.020 --> 05:02.020
针对于你这条数据的

05:02.020 --> 05:04.020
所有的评论

05:04.020 --> 05:10.660
会回复出来了

05:10.660 --> 05:12.660
这边告诉我

05:12.660 --> 05:14.660
有一条数据

05:14.660 --> 05:16.660
是对于它的评论

05:16.660 --> 05:18.660
好 这条数据在这里面有

05:18.660 --> 05:22.360
好 那么我们现在

05:22.360 --> 05:24.360
针对这个数据

05:24.360 --> 05:26.360
我们把它进行呈现

05:26.360 --> 05:30.950
把数据内容进行呈现

05:30.950 --> 05:32.950
我们这边显示数据有三个

05:32.950 --> 05:34.950
它不是这条一条 是这个

05:34.950 --> 05:36.950
reply demo对吧

05:36.950 --> 05:38.950
当前的这条数据

05:38.950 --> 05:39.950
是在这

05:39.950 --> 05:42.950
这个reply demo里面有三条

05:42.950 --> 05:43.950
打开以后的话

05:43.950 --> 05:45.950
它里面是在它的一个叫做

05:45.950 --> 05:47.950
data里面再打开

05:47.950 --> 05:48.950
看到吗

05:48.950 --> 05:50.950
这有三条评论在这

05:50.950 --> 05:52.950
我们显示了三个数据

05:52.950 --> 05:54.950
一个是我们现在的data

05:54.950 --> 05:57.950
一个是我们现在的一个reply demo

05:57.950 --> 05:59.950
一个是collector demo

05:59.950 --> 06:00.950
对吧

06:00.950 --> 06:01.950
所以我们应该看到的是

06:01.950 --> 06:03.950
第一个数据

06:03.950 --> 06:05.950
好 那么紧接着

06:05.950 --> 06:07.950
我们把这数据data

06:07.950 --> 06:09.950
已经存到replys里面了

06:09.950 --> 06:10.950
然后我们在界面中

06:10.950 --> 06:12.950
就可以去使用一下

06:12.950 --> 06:14.950
找到中间的这一块区域

06:14.950 --> 06:16.950
我们怎么样对它进行

06:16.950 --> 06:17.950
所谓的循环呢

06:17.950 --> 06:19.950
其实是针对于它下面的

06:19.950 --> 06:20.950
这一块内容

06:20.950 --> 06:22.950
所以我们在这边做

06:22.950 --> 06:30.620
我们把这个删了

06:30.620 --> 06:36.620
this.stater.replys

06:36.620 --> 06:41.250
mapItem

06:41.250 --> 06:51.580
index

06:51.580 --> 07:03.500
然后return

07:03.500 --> 07:05.500
把我们要的内容放在里面

07:05.500 --> 07:12.250
然后这边你可以写个key

07:12.250 --> 07:13.250
然后里边这边呢

07:13.250 --> 07:15.250
我们把这个index写在这

07:15.250 --> 07:20.160
加一

07:20.160 --> 07:23.160
这边是你现在的文本

07:23.160 --> 07:26.160
item里面的哪个数据

07:26.160 --> 07:29.160
item里面的哪个数据

07:29.160 --> 07:30.160
item里面我们看一下

07:30.160 --> 07:40.320
一个content

07:40.320 --> 07:53.620
我们来看一下

07:53.620 --> 07:56.630
点击

07:56.630 --> 07:57.630
三条数据

07:57.630 --> 07:59.630
应该在这个时候显示出来

07:59.630 --> 08:00.630
我的评论

08:00.630 --> 08:01.630
又一条评论

08:01.630 --> 08:02.630
还有一条评论

08:02.630 --> 08:03.630
是不是

08:03.630 --> 08:04.630
和我数据库里面的结构

08:04.630 --> 08:05.630
是对应起来了

08:05.630 --> 08:06.630
还有一条评论

08:06.630 --> 08:07.630
又一条评论

08:07.630 --> 08:08.630
我的评论

08:08.630 --> 08:09.630
是不是

08:09.630 --> 08:11.630
这针对于这个数据结构来说

08:11.630 --> 08:13.630
那么如果像它

08:13.630 --> 08:15.630
没有

08:15.630 --> 08:16.630
对吧

08:16.630 --> 08:21.500
我现在对它恢复一下

08:21.500 --> 08:24.500
挺好看

08:24.500 --> 08:25.500
恢复

08:25.500 --> 08:26.500
发表成功

08:26.500 --> 08:27.500
回来

08:27.500 --> 08:29.500
挺好看就出来了

08:29.500 --> 08:30.500
是吧

08:30.500 --> 08:31.500
这样的话就代表着

08:31.500 --> 08:32.500
我的回复功能

08:32.500 --> 08:34.500
我就做好了

08:34.500 --> 08:35.500
对它来讲

08:35.500 --> 08:36.500
我也挺喜欢

08:36.500 --> 08:38.500
写点一个喜欢

08:38.500 --> 08:40.500
这个贴子我也喜欢了

08:40.500 --> 08:41.500
ok

08:41.500 --> 08:42.500
这样的话

08:42.500 --> 08:44.500
我们再回来

08:44.500 --> 08:45.500
那么我们完成了

08:45.500 --> 08:46.500
这个功能以后

08:46.500 --> 08:48.500
我们的回复内容有了

08:48.500 --> 08:50.500
单贴有了

08:50.500 --> 08:51.500
我们喜欢与否的

08:51.500 --> 08:52.500
这个也有了

08:52.500 --> 08:54.500
那么此时

08:54.500 --> 08:58.500
我们再回过头来

08:58.500 --> 08:59.500
在这个界面上

08:59.500 --> 09:01.500
广场上

09:01.500 --> 09:02.500
单数据里面的操作

09:02.500 --> 09:04.500
已经完成了

09:04.500 --> 09:05.500
紧接着

09:05.500 --> 09:06.500
我们要做的是

09:06.500 --> 09:07.500
怎么把它

09:07.500 --> 09:10.500
不断地进行刷新

09:10.500 --> 09:11.500
现在我们拿了几条

09:11.500 --> 09:13.500
六条数据出来

09:13.500 --> 09:14.500
那么我们需要不断地

09:14.500 --> 09:15.500
对它进行刷新

09:15.500 --> 09:17.500
无论是这个刷新

09:17.500 --> 09:19.500
还是下面的下拉刷新

09:19.500 --> 09:21.500
这种都可以要有

09:21.500 --> 09:22.500
理解了

09:22.500 --> 09:23.500
那么我们来做

09:23.500 --> 09:24.500
我们首先

09:24.500 --> 09:25.500
我们要知道一下

09:25.500 --> 09:27.500
如果我下拉触底刷新

09:27.500 --> 09:29.500
是不断地往下沉接

09:29.500 --> 09:31.500
是不断地往下沉接

09:31.500 --> 09:33.500
而如果我是到底

09:33.500 --> 09:35.500
进行下拉刷新的话

09:35.500 --> 09:36.500
那我是把里面内容

09:36.500 --> 09:37.500
全部清除

09:37.500 --> 09:40.500
重新拿六条数据出来

09:40.500 --> 09:42.500
这是我们这边的一个逻辑

09:42.500 --> 09:43.500
就是我如果

09:43.500 --> 09:44.500
现在每次拿六条

09:44.500 --> 09:46.500
六条 六条 六条 六条

09:46.500 --> 09:47.500
一直往下拿

09:47.500 --> 09:48.500
你拿了差不多是

09:48.500 --> 09:49.500
七八十条了

09:49.500 --> 09:51.500
此时你往上骨

09:51.500 --> 09:52.500
滚到最上面的时候

09:52.500 --> 09:54.500
你把它这样一拉

09:54.500 --> 09:55.500
它就会把里面

09:55.500 --> 09:56.500
所有七八条全部清掉

09:56.500 --> 09:59.500
只拿最前面的六条

09:59.500 --> 10:00.500
是这个逻辑

10:00.500 --> 10:02.500
所以我们的刷新功能

10:02.500 --> 10:04.500
在这边我们要做一下

10:04.500 --> 10:05.500
我们来做

10:05.500 --> 10:09.500
把里面的这些全部关掉

10:09.500 --> 10:13.900
回到我们的首页来

10:13.900 --> 10:14.900
样式不要了

10:14.900 --> 10:18.500
在首页里面

10:18.500 --> 10:20.500
我们要完成刷新功能

10:20.500 --> 10:21.500
对吧

10:21.500 --> 10:22.500
那么刷新的话

10:22.500 --> 10:23.500
我们首先

10:23.500 --> 10:24.500
我们要回到我们的数据端

10:24.500 --> 10:25.500
我们来看一下

10:25.500 --> 10:27.500
这个数据端的操作

10:27.500 --> 10:29.500
我们拿数据的这一块

10:32.500 --> 10:33.500
得到数据

10:33.500 --> 10:35.500
我们这边是看到了

10:35.500 --> 10:36.500
我们有个排序

10:36.500 --> 10:37.500
按日期排序的

10:37.500 --> 10:39.500
并且我们的Limit

10:39.500 --> 10:41.500
限制拿几条数据

10:41.500 --> 10:42.500
然后拿出来

10:42.500 --> 10:44.500
那么这时候

10:44.500 --> 10:45.500
我们怎么样能够

10:45.500 --> 10:48.500
继续往下进行操作呢

10:48.500 --> 10:49.500
也就是说

10:49.500 --> 10:50.500
我一旦触底以后

10:50.500 --> 10:52.500
我再拿后六条

10:52.500 --> 10:53.500
该怎么拿呢

10:53.500 --> 10:54.500
唯一一下

10:54.500 --> 10:55.500
在这个页面中

10:55.500 --> 10:57.500
我们定义了有一个值

10:57.500 --> 10:58.500
看到吗

10:58.500 --> 10:59.500
画红线还没用

10:59.500 --> 11:01.500
就是Current Pager

11:01.500 --> 11:02.500
Current Pager

11:02.500 --> 11:04.500
Total Count这几个值

11:04.500 --> 11:07.500
Current Pager代表的是

11:07.500 --> 11:09.500
当前是哪个页面

11:09.500 --> 11:12.500
Current Pager是当前是哪个页面

11:12.500 --> 11:13.500
那么一旦知道

11:13.500 --> 11:15.500
当前这个页面以后的话

11:15.500 --> 11:17.500
我们就很容易

11:17.500 --> 11:19.500
把当前的页面

11:19.500 --> 11:20.500
是第一页

11:20.500 --> 11:23.500
去乘上至Pager Number

11:23.500 --> 11:27.500
就是我们需要隔离的条数

11:27.500 --> 11:29.500
这个逻辑想一下

11:29.500 --> 11:30.500
就是

11:30.500 --> 11:32.500
现在是第一页

11:32.500 --> 11:33.500
所以我们不需要管它

11:33.500 --> 11:36.500
就拿六条

11:36.500 --> 11:38.500
要拿第二页的时候

11:38.500 --> 11:39.500
那就是说

11:39.500 --> 11:41.500
我要从第七条开始拿

11:41.500 --> 11:43.500
拿六条 是吗

11:43.500 --> 11:44.500
那就是前面

11:44.500 --> 11:46.500
先要把六条给撇掉

11:46.500 --> 11:48.500
那我就拿当前的页数

11:48.500 --> 11:50.500
就是Current Pager

11:50.500 --> 11:52.500
乘上至Pager Number

11:52.500 --> 11:54.500
是不是一乘六等于六

11:54.500 --> 11:56.500
把前面的第六条先撇掉

11:56.500 --> 11:58.500
那么第二次拿完以后

11:58.500 --> 12:01.500
从七开始到十二

12:01.500 --> 12:03.500
那么从第三页

12:03.500 --> 12:05.500
那个后一页开始拿的时候

12:05.500 --> 12:06.500
第二页开始

12:06.500 --> 12:09.500
你应该是从第三条开始

12:09.500 --> 12:10.500
第三页

12:10.500 --> 12:12.500
从第三条开始

12:12.500 --> 12:13.500
那这时候应该是

12:13.500 --> 12:15.500
当前是第二页

12:15.500 --> 12:16.500
Current Pager等于

12:16.500 --> 12:19.500
二乘以我们的Pager Count

12:19.500 --> 12:21.500
就是十二条

12:21.500 --> 12:24.500
所以我们把Current Pager

12:24.500 --> 12:26.500
乘上至Pager Number

12:26.500 --> 12:28.500
我们做一个skip

12:28.500 --> 12:30.500
进行跳转

12:30.500 --> 12:31.500
这样的话呢

12:31.500 --> 12:32.500
我们就能很容易的知道

12:32.500 --> 12:33.500
我们后面的

12:33.500 --> 12:35.500
在哪六条的位置在哪

12:35.500 --> 12:37.500
就开始

12:37.500 --> 12:39.500
那么我们想一下

12:39.500 --> 12:41.500
页面触底

12:41.500 --> 12:43.500
这个事情在哪里做

12:43.500 --> 12:51.670
它Reach

12:51.670 --> 12:54.670
Unreach Button

12:54.670 --> 13:03.170
页面触底

13:04.170 --> 13:10.510
系统函数

13:10.510 --> 13:11.510
测试一下

13:11.510 --> 13:28.390
滚轴往下滚

13:28.390 --> 13:29.390
一旦到底的时候

13:29.390 --> 13:32.830
我们检查这边

13:32.830 --> 13:33.830
出来了吧

13:33.830 --> 13:35.830
所以它会感知到

13:35.830 --> 13:38.830
你现在滚轴到底部了

13:38.830 --> 13:40.830
我们就在这里面做

13:40.830 --> 13:42.830
首先我们来

13:42.830 --> 13:44.830
咱们定义一个

13:44.830 --> 13:48.270
简单的

13:48.270 --> 13:50.270
数组临时变量

13:50.270 --> 13:53.220
咱们来做

13:53.220 --> 13:59.780
获取后面的记录

13:59.780 --> 14:00.780
有条件

14:01.780 --> 14:03.780
如果

14:03.780 --> 14:04.780
我们这上面

14:04.780 --> 14:07.780
有一个topics

14:07.780 --> 14:09.780
我们有个topics

14:09.780 --> 14:10.780
那么

14:10.780 --> 14:11.780
这个topics里面存的

14:11.780 --> 14:12.780
都是我们现在的

14:12.780 --> 14:13.780
记录格式

14:13.780 --> 14:15.780
记录内容

14:15.780 --> 14:16.780
如果我们现在

14:16.780 --> 14:18.780
topics里面存的值

14:18.780 --> 14:29.730
我们说一下

14:29.730 --> 14:30.730
this点

14:30.730 --> 14:36.430
stater

14:36.430 --> 14:37.430
this点

14:37.430 --> 14:38.430
stater

14:38.430 --> 14:41.190
点

14:41.190 --> 14:42.190
topics

14:42.190 --> 14:50.750
它的长度

14:50.750 --> 14:52.750
我们用它来表述

14:54.750 --> 14:55.750
先放着吧

14:55.750 --> 14:56.750
没关系

14:56.750 --> 14:58.750
我们可以改变

14:58.750 --> 15:01.750
如果它里面的内容的长度

15:01.750 --> 15:03.750
小于

15:03.750 --> 15:05.750
当前的

15:05.750 --> 15:08.510
dater

15:08.510 --> 15:10.510
total count

15:10.510 --> 15:11.510
这样的话

15:11.510 --> 15:12.510
我们就是说

15:12.510 --> 15:21.460
你还没拿完

15:21.460 --> 15:23.460
可以继续

15:24.460 --> 15:29.460
获取

15:29.460 --> 15:30.460
db

15:30.460 --> 15:31.460
点

15:32.460 --> 15:35.020
collection

15:35.020 --> 15:36.020
topic

15:36.020 --> 15:39.230
demo

15:39.230 --> 15:42.120
skip

15:42.120 --> 15:43.120
我们拿

15:43.120 --> 15:44.120
从当前的

15:44.120 --> 15:46.120
我们来

15:46.120 --> 15:47.120
从当前的

15:47.120 --> 15:48.120
this点

15:48.120 --> 15:51.260
stater

15:51.260 --> 15:52.260
里面的

15:52.260 --> 15:55.960
current pager

15:55.960 --> 15:56.960
从当前的

15:56.960 --> 15:58.960
stater里面的current pager

15:58.960 --> 15:59.960
乘上指

15:59.960 --> 16:00.960
注意skip

16:00.960 --> 16:01.960
跳过

16:01.960 --> 16:02.960
当前的

16:02.960 --> 16:08.060
stater里面的

16:08.060 --> 16:10.060
pager number

16:10.060 --> 16:20.160
跳过这几条记录

16:20.160 --> 16:21.160
get

16:21.160 --> 16:36.280
去拿数据

16:36.280 --> 16:37.280
来

16:37.280 --> 16:38.280
如果

16:38.280 --> 16:39.280
我们要判断一下

16:39.280 --> 16:41.280
拿到的数据

16:41.280 --> 16:44.660
一定可以是一个res

16:44.660 --> 16:46.660
如果res里面的

16:46.660 --> 16:47.660
什么呢

16:47.660 --> 16:49.660
它的数据的

16:49.660 --> 16:51.660
长度

16:51.660 --> 16:53.660
如果它大于0

16:53.660 --> 16:55.660
代表有数据

16:55.660 --> 16:56.660
那就意味着什么呢

16:56.660 --> 16:57.660
意味着

16:57.660 --> 16:59.660
现在我们的

16:59.660 --> 17:01.660
两条以上记录素组存在

17:01.660 --> 17:03.660
包括是我们现在的

17:03.660 --> 17:04.660
整个的

17:04.660 --> 17:05.660
可以往下继续

17:06.660 --> 17:07.660
获取的

17:07.660 --> 17:09.660
如果它里面的数大于0

17:09.660 --> 17:11.660
那我们继续写

17:11.660 --> 17:13.660
那我们做法就很简单

17:13.660 --> 17:14.660
我们循环里面

17:14.660 --> 17:15.660
每一条数据

17:15.660 --> 17:16.660
把它拿出来

17:16.660 --> 17:17.660
然后把它放到

17:17.660 --> 17:18.660
我们临时的

17:18.660 --> 17:19.660
这个叫做tempor里面

17:19.660 --> 17:20.660
我们先

17:23.660 --> 17:25.660
这边我们用个for

17:25.660 --> 17:28.350
来做一次

17:28.350 --> 17:29.350
i

17:30.350 --> 17:31.350
等于0

17:31.350 --> 17:34.880
i

17:34.880 --> 17:35.880
小于

17:35.880 --> 17:36.880
res点

17:36.880 --> 17:41.560
dater点

17:42.560 --> 17:43.560
lens

17:44.560 --> 17:45.560
i加加

17:45.560 --> 17:48.380
let

17:49.380 --> 17:50.380
tempor

17:51.380 --> 17:52.380
topic

17:53.380 --> 17:54.380
等于

17:54.380 --> 17:55.380
res

17:55.380 --> 17:56.380
把里面的记录拿出来

17:58.380 --> 17:59.380
然后

18:00.380 --> 18:01.380
tempor.purs

18:02.380 --> 18:03.380
先塞进去

18:04.380 --> 18:05.380
temporatopic

18:06.380 --> 18:07.380
那么全会在这里面

18:08.380 --> 18:13.060
把这里面的数据

18:13.060 --> 18:14.060
拿好以后的话呢

18:14.060 --> 18:15.060
那么我们别忘了

18:16.060 --> 18:18.060
在退出所有的

18:18.060 --> 18:19.060
现在的

18:21.060 --> 18:22.060
这个不能退

18:22.060 --> 18:23.060
我们在当前退出

18:23.060 --> 18:24.060
所有的结构的时候

18:25.060 --> 18:26.060
我们需要去

18:26.060 --> 18:27.060
做一步操作

18:27.060 --> 18:28.060
那就是

18:28.060 --> 18:29.060
去添加当前的

18:29.060 --> 18:30.060
页面数加1

18:39.290 --> 18:40.290
let

18:41.290 --> 18:42.290
current pager

18:43.290 --> 18:44.290
我们应该

18:44.290 --> 18:45.290
更好的写上的是

18:48.240 --> 18:49.240
它应该已经

18:49.240 --> 18:50.240
放在我们的

18:50.240 --> 18:51.240
就是这个纸

18:52.240 --> 18:54.240
所以这个纸的话

18:54.240 --> 18:55.240
你就是this点

18:55.240 --> 18:56.240
set stator

19:05.210 --> 19:06.210
等于

19:07.210 --> 19:08.210
this点

19:09.210 --> 19:10.210
set stator

19:10.210 --> 19:11.210
点

19:11.210 --> 19:12.210
current pager

19:12.210 --> 19:14.780
加1

19:19.970 --> 19:20.970
那如果我们

19:20.970 --> 19:21.970
现在这个if语句

19:21.970 --> 19:22.970
没有进去

19:22.970 --> 19:23.970
就表示

19:23.970 --> 19:25.970
你现在所拿到的数目

19:25.970 --> 19:26.970
它本身

19:26.970 --> 19:27.970
已经大于了

19:27.970 --> 19:35.570
你现在的总共数目

19:35.570 --> 19:43.230
那我们就显示给用户

19:43.230 --> 19:44.230
没有数据了

19:54.290 --> 19:55.290
这个

19:55.290 --> 19:56.290
先不用去运行

19:56.290 --> 19:57.290
当你整个

19:57.290 --> 19:58.290
出底过程的时候

19:59.290 --> 20:00.290
我们判断一下

20:00.290 --> 20:01.290
你现在

20:02.290 --> 20:04.290
我们里面的条目数

20:04.290 --> 20:06.290
就是我们的topic条目数

20:06.290 --> 20:07.290
是否是小于

20:07.290 --> 20:08.290
你现在的总数的

20:10.290 --> 20:11.290
那么你就问

20:11.290 --> 20:12.290
总数哪里来

20:12.290 --> 20:13.290
待会我们来写

20:13.290 --> 20:15.290
如果你小于总数

20:15.290 --> 20:16.290
代表你还能继续拿

20:16.290 --> 20:17.290
那么这时候

20:17.290 --> 20:18.290
你就从我们的

20:18.290 --> 20:19.290
数据库里面去取数据

20:19.290 --> 20:21.290
数据取出来以后的话

20:21.290 --> 20:22.290
我们分别把

20:22.290 --> 20:23.290
每条数据

20:23.290 --> 20:24.290
都给它

20:24.290 --> 20:25.290
放置到我们tempor里面

20:26.290 --> 20:28.290
放到tempor里面

20:28.290 --> 20:29.290
对吧

20:29.290 --> 20:30.290
那么同时

20:30.290 --> 20:32.290
我们的tempor

20:32.290 --> 20:33.290
如果说

20:33.290 --> 20:34.290
把我们现在的

20:34.290 --> 20:35.290
这样的一个数值

20:35.290 --> 20:36.290
也就意味着

20:36.290 --> 20:37.290
把我们现在的

20:37.290 --> 20:39.290
整个当前页数

20:39.290 --> 20:40.290
加一

20:41.290 --> 20:42.290
缺一步

20:42.290 --> 20:43.290
我们已经放到tempor里面了

20:43.290 --> 20:44.290
对吧

20:44.290 --> 20:45.290
tempor里面

20:45.290 --> 20:46.290
放完以后的话

20:46.290 --> 20:47.290
那么我们需要

20:47.290 --> 20:49.290
把这个数据

20:49.290 --> 20:51.290
再做成一个新速足

20:51.290 --> 20:52.290
就是

20:52.290 --> 20:53.290
那我们来写

20:54.290 --> 20:55.290
let

20:55.290 --> 20:58.300
topic

20:58.300 --> 20:59.300
整语

21:00.300 --> 21:01.300
当前的

21:03.300 --> 21:04.300
state

21:05.300 --> 21:07.300
里面的topics

21:08.300 --> 21:09.300
连接上

21:09.300 --> 21:10.300
contact

21:10.300 --> 21:11.300
数组连接

21:12.300 --> 21:13.300
pemp

21:13.300 --> 21:15.870
把这里面

21:15.870 --> 21:16.870
全部连接上去

21:17.870 --> 21:18.870
连完以后的话

21:18.870 --> 21:20.870
把它重新复制给

21:22.870 --> 21:23.870
that点

21:24.870 --> 21:25.870
set a stator

21:29.980 --> 21:30.980
重新复制给

21:34.060 --> 21:38.670
topics

21:38.670 --> 21:39.670
等于这个

21:40.670 --> 21:41.670
或者我们直接

21:41.670 --> 21:42.670
把这个拿过来

21:42.670 --> 21:59.060
写上this

22:01.820 --> 22:02.820
我们把数据

22:02.820 --> 22:04.820
放在了所有的

22:04.820 --> 22:06.820
tempor里面以后的话

22:06.820 --> 22:08.820
我们把tempor数据

22:08.820 --> 22:10.820
和原来的topics合并

22:10.820 --> 22:12.820
再回到topics里面来

22:13.820 --> 22:14.820
这个结构

22:14.820 --> 22:15.820
然后下面

22:15.820 --> 22:16.820
我们把页面加一

22:16.820 --> 22:17.820
如果现在你里面

22:17.820 --> 22:18.820
已经存的数据

22:18.820 --> 22:19.820
已经大于

22:19.820 --> 22:20.820
或者等于

22:20.820 --> 22:21.820
现在的

22:21.820 --> 22:22.820
我们说是

22:22.820 --> 22:23.820
总数了

22:23.820 --> 22:24.820
那我们只要

22:24.820 --> 22:25.820
做的是

22:25.820 --> 22:26.820
我们告知它

22:26.820 --> 22:27.820
你现在

22:27.820 --> 22:28.820
已经没有数据了

22:28.820 --> 22:29.820
那么这里面有个问题

22:29.820 --> 22:31.820
就是我们前面说到的

22:31.820 --> 22:32.820
这个总数

22:32.820 --> 22:33.820
这个数哪里来

22:33.820 --> 22:34.820
所以我们需要

22:34.820 --> 22:36.820
在整个页面

22:36.820 --> 22:37.820
做之前

22:37.820 --> 22:39.820
先得到你的总数值

22:39.820 --> 22:40.820
这个逻辑

22:41.820 --> 22:42.820
所以

22:42.820 --> 22:44.820
我们还要做一步

22:44.820 --> 22:46.820
就是得到总数

22:46.820 --> 22:48.820
我们需要单独写一个

22:48.820 --> 22:50.820
获取总数的

22:50.820 --> 22:51.820
函数

22:51.820 --> 22:52.820
或者称为

22:52.820 --> 22:53.820
事件

22:53.820 --> 22:54.820
我们在这边写

22:54.820 --> 22:59.330
get data

23:00.330 --> 23:01.330
count

23:02.330 --> 23:03.330
来

23:04.330 --> 23:06.330
get data

23:07.330 --> 23:08.330
count

23:08.330 --> 23:13.860
获取总数值

23:13.860 --> 23:19.960
dv.collection

23:20.960 --> 23:24.040
topic demo

23:24.040 --> 23:27.350
topic demo

23:27.350 --> 23:28.350
就是话题表

23:28.350 --> 23:31.920
整个的话题表

23:31.920 --> 23:33.920
我们ware条件

23:33.920 --> 23:34.920
属于

23:40.180 --> 23:41.180
open id

23:41.180 --> 23:42.180
我们写上

23:44.620 --> 23:48.210
不用ware了

23:48.210 --> 23:50.210
我们直接拿出来吧

23:51.210 --> 23:52.210
我们直接拿get来

23:52.210 --> 23:53.210
count

23:53.210 --> 23:59.040
直接这样拿

24:00.040 --> 24:02.930
rs

24:02.930 --> 24:07.220
我们拿一个count

24:08.220 --> 24:13.670
返回一下

24:13.670 --> 24:17.780
topic

24:18.780 --> 24:19.780
demo

24:19.780 --> 24:20.780
count

24:21.780 --> 24:22.780
都好

24:22.780 --> 24:23.780
这边写上

24:23.780 --> 24:24.780
rs

24:26.780 --> 24:27.780
先来看一下

24:27.780 --> 24:37.000
看这

24:38.000 --> 24:39.000
topic count

24:39.000 --> 24:41.000
现在一共有15条数据

24:41.000 --> 24:42.000
OK

24:42.000 --> 24:44.000
就这样就可以了

24:44.000 --> 24:45.000
然后呢

24:45.000 --> 24:47.000
我们拿到这个数据

24:47.000 --> 24:48.000
这数据存在哪一个

24:48.000 --> 24:49.000
字段里面再看一下

24:49.000 --> 24:51.000
存在一个toto里面

24:51.000 --> 24:52.000
我们把它

24:52.000 --> 24:54.000
直接存到我们现在的

24:55.000 --> 24:56.000
这个叫做

24:56.000 --> 24:58.000
toto count里面来

24:58.000 --> 25:10.810
that

25:10.810 --> 25:11.810
点

25:11.810 --> 25:12.810
set

25:12.810 --> 25:15.570
stater

25:15.570 --> 25:19.260
that点set stater

25:19.260 --> 25:20.260
然后这边的话呢

25:20.260 --> 25:22.260
我们主要做的是

25:23.260 --> 25:24.260
toto count

25:24.260 --> 25:25.260
它等于

25:26.260 --> 25:27.260
rs

25:34.200 --> 25:35.200
它直接拿到的

25:35.200 --> 25:36.200
rs.里面的

25:36.200 --> 25:38.200
我们刚才说的那个叫做

25:39.200 --> 25:40.200
toto

25:40.200 --> 25:42.200
就直接拿这个纸

25:43.200 --> 25:44.200
这样的话我们的

25:44.200 --> 25:45.200
所谓的

25:46.200 --> 25:48.200
那个数量就有了

25:49.200 --> 25:50.200
好

25:50.200 --> 25:52.200
我们来测试一下

25:52.200 --> 25:58.480
再刷新一下

26:07.380 --> 26:08.380
它报了一个错

26:08.380 --> 26:10.380
叫toto count

26:10.380 --> 26:11.380
没有定义

26:11.380 --> 26:15.460
我们在下面来找一下

26:15.460 --> 26:16.460
如果有一两出错

26:16.460 --> 26:17.460
我们看一下是什么问题

26:17.460 --> 26:18.460
早知道

26:18.460 --> 26:22.930
这个应该是stater

26:23.930 --> 26:24.930
不是dater

26:24.930 --> 26:28.620
微信本身里面是dater

26:28.620 --> 26:30.620
在terror中stater

26:31.620 --> 26:32.620
再来一次

26:32.620 --> 26:36.920
看到吗

26:36.920 --> 26:37.920
它还能夹在

26:37.920 --> 26:42.130
它说我没有了

26:42.130 --> 26:43.130
对吧 数据

26:43.130 --> 26:45.950
再来一次

26:55.880 --> 26:56.880
它还能再夹在

26:56.880 --> 26:57.880
是吧

26:57.880 --> 26:58.880
图片上面

26:58.880 --> 26:59.880
内容的话

26:59.880 --> 27:01.880
基本传的是一样的图片

27:01.880 --> 27:02.880
所以这样我们看到

27:02.880 --> 27:03.880
能不断的把数据

27:03.880 --> 27:04.880
将夹在出来

27:05.880 --> 27:06.880
当然

27:06.880 --> 27:07.880
由于我现在的速度比较快

27:07.880 --> 27:09.880
当然我们大家做的时候

27:09.880 --> 27:11.880
你可以在夹在前面

27:11.880 --> 27:12.880
去夹一个

27:12.880 --> 27:13.880
我们的修loading

27:13.880 --> 27:14.880
我们来写一下

27:17.640 --> 27:18.640
我们处理夹在

27:20.640 --> 27:21.640
那么一旦

27:21.640 --> 27:22.640
你现在开始

27:22.640 --> 27:23.640
做数据过操作之前

27:24.640 --> 27:26.950
terror.

27:26.950 --> 27:27.950
修loading

27:32.420 --> 27:33.420
做一部这个

27:34.420 --> 27:35.420
然后

27:35.420 --> 27:37.420
当你全部数据完成以后

27:38.420 --> 27:40.420
那么在这里吧

27:40.420 --> 27:41.420
我们在直接在这个

27:41.420 --> 27:43.420
完成以后的话

27:43.420 --> 27:44.420
我们这边做一个

27:45.420 --> 27:49.330
terror的

27:49.330 --> 27:50.330
headloading

27:53.220 --> 27:54.220
就这样的情况

27:56.220 --> 27:57.220
紧接着我们再来

27:57.220 --> 27:58.220
当然这边

27:58.220 --> 28:00.220
我们既然有我们的

28:00.220 --> 28:01.220
dans

28:01.220 --> 28:03.220
我们最好写一个catch

28:03.220 --> 28:06.910
做一个错误异常的补货

28:20.940 --> 28:21.940
好

28:21.940 --> 28:22.940
那么这样的话

28:22.940 --> 28:24.940
我们的页面就比较完善一点

28:24.940 --> 28:26.940
我们本身是有错误异常补货

28:26.940 --> 28:28.940
本身我们现在有动态加载

28:28.940 --> 28:29.940
看到吗

28:29.940 --> 28:30.940
因为我速度比较快

28:30.940 --> 28:31.940
这个是加得起来

28:31.940 --> 28:32.940
没有数据了

28:32.940 --> 28:33.940
对吧

28:34.940 --> 28:35.940
然后紧接着

28:35.940 --> 28:36.940
我们再来说

28:37.940 --> 28:38.940
我们看到的

28:38.940 --> 28:40.940
整个开发的过程

28:44.400 --> 28:45.400
开发过程

28:45.400 --> 28:46.400
它本身是有一个

28:46.400 --> 28:48.400
我们不断的去加改

28:48.400 --> 28:49.400
它的功能

28:49.400 --> 28:50.400
不断的往上加

28:50.400 --> 28:53.400
我们可以有更多的一些操作

28:53.400 --> 28:54.400
可以在上面

28:54.400 --> 28:55.400
当然我们不去写全

28:55.400 --> 28:56.400
比如说

28:56.400 --> 28:58.400
这里面还有更多的一些

28:58.400 --> 28:59.400
什么点赞

29:00.400 --> 29:02.400
这在首页的评论

29:02.400 --> 29:03.400
这个你都可以做

29:03.400 --> 29:04.400
我们不代表

29:04.400 --> 29:05.400
你要把它做成

29:05.400 --> 29:06.400
现在的微信朋友圈

29:06.400 --> 29:08.400
一模一样的这个概念

29:08.400 --> 29:09.400
这点是要了解

29:09.400 --> 29:10.400
第二

29:10.400 --> 29:11.400
我们现在再来

29:11.400 --> 29:14.400
我们需要进行下拉刷新加载

29:14.400 --> 29:16.400
下拉刷新加载这功能

29:16.400 --> 29:17.400
我们做在哪

29:17.400 --> 29:18.400
我们说的是

29:18.400 --> 29:19.400
现在数据很多了

29:19.400 --> 29:21.400
我想直接开始看

29:21.400 --> 29:22.400
原有6条

29:22.400 --> 29:23.400
所以我要下拉的时候

29:23.400 --> 29:25.400
重新加载原有6条数据

29:26.400 --> 29:27.400
好 我们来看

29:28.400 --> 29:30.400
下拉刷新加载

29:30.400 --> 29:31.400
那么就意味着

29:31.400 --> 29:34.400
你需要去处理一个叫做

29:34.400 --> 29:35.400
那个

29:35.400 --> 29:38.400
un-pulled-on-refresh的函数

29:39.400 --> 29:46.060
下面这个

29:46.060 --> 29:52.540
下拉

29:53.540 --> 29:54.540
处理

29:54.540 --> 29:56.540
这是下拉

29:56.540 --> 30:00.170
刷新函数

30:00.170 --> 30:08.730
我们先加载

30:08.730 --> 30:11.040
标题栏

30:12.040 --> 30:13.040
老龄动作

30:13.040 --> 30:19.770
太柔

30:20.770 --> 30:21.770
秀

30:21.770 --> 30:30.030
引接着

30:31.030 --> 30:32.030
我们直接还是

30:32.030 --> 30:36.470
this.getData

30:36.470 --> 30:37.470
得数据

30:37.470 --> 30:40.910
下拉得数据

30:41.910 --> 30:42.910
getData的方式

30:42.910 --> 30:43.910
是我们之前

30:43.910 --> 30:44.910
已经写过的

30:44.910 --> 30:45.910
我们直接

30:45.910 --> 30:46.910
通过查找的方式

30:46.910 --> 30:53.960
拿到它

30:53.960 --> 30:54.960
对吧

30:54.960 --> 30:55.960
它只是从前面

30:55.960 --> 30:56.960
直接拿数据

30:56.960 --> 30:57.960
它只是从前面

30:57.960 --> 30:58.960
直接拿数据

30:58.960 --> 30:59.960
然后把数据

30:59.960 --> 31:01.960
全部的放到我们的

31:02.960 --> 31:03.960
dropx 里面

31:04.960 --> 31:05.960
所以此时你来看一下

31:06.960 --> 31:11.960
刷新

31:11.960 --> 31:14.400
看一下我页面存了吗

31:14.400 --> 31:15.400
我们存好了

31:16.400 --> 31:20.500
往下拉拉拉

31:20.500 --> 31:21.500
拉到底

31:21.500 --> 31:22.500
继续有数据出来

31:22.500 --> 31:23.500
没数据了

31:24.500 --> 31:25.500
这时候你往上

31:25.500 --> 31:26.500
往上这样一拉

31:26.500 --> 31:30.740
它还可以继续来

31:30.740 --> 31:31.740
对吧

31:31.740 --> 31:32.740
它回回回来了

31:33.740 --> 31:34.740
那么上面这个

31:34.740 --> 31:35.740
你看到我们这边

31:35.740 --> 31:37.740
已经有旋转了

31:37.740 --> 31:38.740
并且这个一旦

31:38.740 --> 31:39.740
加载完成以后

31:39.740 --> 31:40.740
也应该是一个

31:40.740 --> 31:41.740
消失状态

31:41.740 --> 31:42.740
所以这两步

31:42.740 --> 31:43.740
我们还得把它给

31:44.740 --> 31:45.740
回来

31:45.740 --> 31:46.740
在哪里呢

31:46.740 --> 31:47.740
我们在我们的

31:47.740 --> 31:48.740
getData里面

31:49.740 --> 31:55.380
在它的最后

31:56.380 --> 31:57.380
这样

31:57.380 --> 32:00.200
terror点

32:01.200 --> 32:02.200
Hit

32:02.200 --> 32:03.200
never get

32:03.200 --> 32:04.200
low party

32:04.200 --> 32:08.180
再来

32:09.180 --> 32:10.180
terror点

32:11.180 --> 32:12.180
Hit

32:16.470 --> 32:17.470
头部有一个

32:19.470 --> 32:29.120
然后关闭

32:29.120 --> 32:30.120
我们称之为

32:31.120 --> 32:32.120
那个叫做

32:33.120 --> 32:34.120
port on refresh

32:35.120 --> 32:36.120
port on refresh

32:36.120 --> 32:37.120
下拉的

32:37.120 --> 32:40.500
stop port on refresh

32:40.500 --> 32:49.270
来看一下

32:54.270 --> 32:55.270
这有拉对吧

32:55.270 --> 32:56.270
一旦有数据有

32:56.270 --> 32:57.270
没有数据呈现

32:57.270 --> 32:58.270
没有数据了

32:59.270 --> 33:00.270
然后回回回回回

33:00.270 --> 33:01.270
回到上面

33:01.270 --> 33:02.270
往下拖

33:05.990 --> 33:06.990
我已经点过按钮了

33:06.990 --> 33:07.990
我们再来看一下

33:08.990 --> 33:09.990
放

33:09.990 --> 33:10.990
它立马就出来了

33:10.990 --> 33:11.990
因为本地

33:11.990 --> 33:12.990
这个数据很快

33:14.990 --> 33:15.990
但是它中间

33:15.990 --> 33:17.990
你看上面有这个效果的

33:18.990 --> 33:19.990
中间内壳的话

33:19.990 --> 33:20.990
比较

33:20.990 --> 33:21.990
太快了

33:21.990 --> 33:22.990
显示不出

33:23.990 --> 33:24.990
所以现在这样的话

33:25.990 --> 33:27.990
我们对于首页来讲

33:27.990 --> 33:28.990
对于广场来讲

33:28.990 --> 33:30.990
它的加载内容已经出来了

33:31.990 --> 33:32.990
上下的加载

33:33.990 --> 33:34.990
点击任何一条以后

33:34.990 --> 33:36.990
进去能够看到这条数据

33:36.990 --> 33:38.990
然后可以回复

33:38.990 --> 33:39.990
可以评论

33:39.990 --> 33:41.990
可以以喜欢为喜欢

33:41.990 --> 33:42.990
是吧

33:42.990 --> 33:43.990
那么这个页面的数据

33:43.990 --> 33:44.990
就基本差不多了

33:44.990 --> 33:45.990
发布内容

33:45.990 --> 33:46.990
我们也是OK了

33:46.990 --> 33:47.990
接下去

33:47.990 --> 33:48.990
我们得回到这来

33:48.990 --> 33:50.990
我们这个还没做呢

33:50.990 --> 33:52.990
我们有一个发布历史

33:52.990 --> 33:53.990
然后呢

33:54.990 --> 33:57.990
我们这边有一个收藏列表

33:57.990 --> 33:58.990
那么这几个内容

33:58.990 --> 34:00.990
产品意见和我们的邀请好友

34:00.990 --> 34:01.990
这四个套作

34:02.990 --> 34:04.990
一个来列表收藏

34:04.990 --> 34:05.990
我们来

34:05.990 --> 34:09.650
列表收藏

34:10.650 --> 34:12.650
下面咱们建一个

34:12.650 --> 34:18.740
叫做收藏

34:19.740 --> 34:26.600
selector

34:26.600 --> 34:27.600
收藏页面

34:27.600 --> 34:34.140
页面搭建一下

34:34.140 --> 34:35.140
tarrow

34:35.140 --> 34:37.900
component

34:38.900 --> 34:42.820
from

34:42.820 --> 34:43.820
tarrow

34:44.820 --> 34:45.820
import

34:45.820 --> 34:52.930
view

34:53.930 --> 34:54.930
from

34:54.930 --> 35:02.420
component

35:13.180 --> 35:14.180
样式倒进来

35:15.180 --> 35:16.180
进接着

35:17.180 --> 35:23.630
把这个可以关了

35:23.630 --> 35:24.630
expert

35:24.630 --> 35:25.630
default

35:26.630 --> 35:29.650
样式

35:29.650 --> 35:30.650
collector

35:30.650 --> 35:34.690
extend

35:35.690 --> 35:36.690
component

35:40.660 --> 35:43.740
randow

35:43.740 --> 35:44.740
return

35:44.740 --> 35:48.660
view

35:48.660 --> 35:52.820
我们称之为

35:56.290 --> 35:57.290
界面其他的部分

36:00.180 --> 36:01.180
constructor

36:01.180 --> 36:09.500
preface

36:09.500 --> 36:15.910
state

36:19.060 --> 36:20.060
configure

36:20.060 --> 36:23.940
component.show

36:33.420 --> 36:34.420
然后这边的话呢

36:34.420 --> 36:35.420
我们基本上

36:35.420 --> 36:36.420
这是一个基本结构

36:36.420 --> 36:38.420
然后把我们的

36:39.420 --> 36:40.420
首页

36:40.420 --> 36:46.870
configure扶持过来

36:46.870 --> 36:54.660
好看一下基本结构页面

36:54.660 --> 36:55.660
就搭完了

36:56.660 --> 36:57.660
然后把它放到

36:57.660 --> 37:01.660
我们的app.jxx

37:01.660 --> 37:08.370
它除了第1个以外

37:08.370 --> 37:10.370
后面是没有顺序要求的

37:10.370 --> 37:27.210
这个页面的打开

37:27.210 --> 37:28.210
我们需要去到

37:28.210 --> 37:31.210
当前的密页面

37:31.210 --> 37:35.540
我们去到当前的密页面

37:35.540 --> 37:38.180
密页面

37:38.180 --> 37:39.180
我们去找到当前的

37:39.180 --> 37:40.180
这一块位置

37:40.180 --> 37:44.700
个人中心

37:44.700 --> 37:45.700
这一块不用看了

37:45.700 --> 37:46.700
这一块内容

37:46.700 --> 37:47.700
我们已经刚才

37:47.700 --> 37:48.700
显示出来了

37:48.700 --> 37:49.700
拆掉列表

37:49.700 --> 37:50.700
收藏列表

37:50.700 --> 37:52.700
主要是它

37:52.700 --> 37:54.700
uncollect

37:54.700 --> 37:55.700
click

37:55.700 --> 38:01.600
uncollect click

38:01.600 --> 38:03.600
它执行什么动作

38:03.600 --> 38:04.600
跳转

38:05.600 --> 38:06.600
对吧

38:06.600 --> 38:11.230
charol.nevget2

38:11.230 --> 38:14.990
url

38:14.990 --> 38:15.990
跳转一下

38:19.200 --> 38:24.880
当前目录下的

38:24.880 --> 38:29.860
collector

38:29.860 --> 38:31.860
当前目录下的collector

38:31.860 --> 38:36.730
我们跳一下

38:36.730 --> 38:37.730
nevgot过来

38:37.730 --> 38:49.000
点击列表

38:49.000 --> 38:51.000
collect过来了

38:51.000 --> 38:52.000
OK

38:53.000 --> 38:54.000
所以我们现在

38:54.000 --> 38:55.000
主要是

38:55.000 --> 38:57.000
接下去开始做collector

38:57.000 --> 39:03.000
它是一个收藏列表

39:03.000 --> 39:05.000
所谓的收藏

39:05.000 --> 39:06.000
那就是说

39:06.000 --> 39:07.000
我的数据

39:07.000 --> 39:08.000
是你之前

39:08.000 --> 39:12.000
所有你个人点过的那个喜欢

39:12.000 --> 39:13.000
理解吧

39:13.000 --> 39:16.000
你个人点过的那个喜欢

39:16.000 --> 39:18.000
所以我们这样的话

39:18.000 --> 39:19.000
我们就需要去知道

39:19.000 --> 39:21.000
你个人点过多少喜欢

39:21.000 --> 39:22.000
并且把这些数据

39:22.000 --> 39:24.000
全部获取出来

39:24.000 --> 39:25.000
对吧

39:25.000 --> 39:26.000
这个逻辑

39:26.000 --> 39:28.000
那么如果说你能够获取到

39:28.000 --> 39:29.000
你现在的数据结构的话

39:29.000 --> 39:31.000
那么我们这下面就好做了

39:31.000 --> 39:32.000
我们今天的

39:32.000 --> 39:33.000
这个页面的作法

39:33.000 --> 39:34.000
我们反作

39:34.000 --> 39:36.000
我们先做数据

39:37.000 --> 39:38.000
首先我们把几个数据

39:38.000 --> 39:40.000
只定义出来

39:40.000 --> 39:43.000
当前页数

39:43.000 --> 39:55.310
当前页显示内容

39:55.310 --> 39:57.310
当前总工页数

39:57.310 --> 40:06.720
所有的现在的collectors

40:06.720 --> 40:09.720
以及topics

40:09.720 --> 40:14.060
我们把几个字先定好

40:14.060 --> 40:16.060
紧接着我们下面再来

40:16.060 --> 40:21.420
首先在我们的

40:21.420 --> 40:26.420
get的秀里面

40:26.420 --> 40:28.420
我们要获取数据

40:28.420 --> 40:31.930
所以我们写的是

40:31.930 --> 40:38.240
this get date

40:38.240 --> 40:41.240
传一个数据给它

40:41.240 --> 40:49.580
stater下面的pager

40:49.580 --> 40:55.460
get date

40:55.460 --> 40:57.460
get data数据

40:57.460 --> 41:01.050
获取数据

41:01.050 --> 41:02.050
然后把get data数据

41:02.050 --> 41:04.050
拿过来以后的话

41:04.050 --> 41:07.050
我们把它

41:07.050 --> 41:09.050
直接经过数据库了

41:09.050 --> 41:12.620
数据库获取

41:12.620 --> 41:17.210
这样走

41:17.210 --> 41:23.020
collection

41:23.020 --> 41:24.020
不是

41:24.020 --> 41:25.020
db

41:25.020 --> 41:27.020
我们应该是db

41:27.020 --> 41:29.020
所以把db的这个事情

41:29.020 --> 41:31.020
咱们在上面去定义一下

41:31.020 --> 41:37.030
它应该是taro.clouder

41:38.030 --> 41:46.660
db.database

41:46.660 --> 42:02.540
然后db.collection

42:02.540 --> 42:07.150
will

42:07.150 --> 42:09.150
openid

42:09.150 --> 42:10.150
等于

42:10.150 --> 42:12.150
这个页面的openid

42:12.150 --> 42:14.150
我们从哪来

42:14.150 --> 42:16.150
我们需要得到你当前

42:16.150 --> 42:19.150
这个用户的openid结构

42:19.150 --> 42:20.150
好

42:20.150 --> 42:21.150
我们来获取一下

42:21.150 --> 42:22.150
我们可以这样做

42:22.150 --> 42:24.150
就是我们不是

42:24.150 --> 42:25.150
我们做法

42:25.150 --> 42:27.150
我们这个数据

42:27.150 --> 42:30.150
我们可以把它的这个

42:30.150 --> 42:32.150
openid

42:32.150 --> 42:35.150
存主到自定一个全局辨量中

42:35.150 --> 42:37.150
我们前面已经介绍过

42:37.150 --> 42:39.150
我们这边综合运用

42:39.150 --> 42:40.150
首先

42:40.150 --> 42:41.150
我们有一个global

42:41.150 --> 42:43.150
我们可以去建立一个

42:43.150 --> 42:45.150
我们的global的一个文件

42:45.150 --> 42:46.150
看到吗

42:46.150 --> 42:48.150
我们建立一个global文件

42:48.150 --> 42:50.150
这个文件的global里面

42:50.150 --> 42:51.150
我们就写上

42:51.150 --> 42:53.150
创建一个长量

42:53.150 --> 42:55.150
咱们称之为globaldata

42:55.150 --> 42:56.150
然后呢

42:56.150 --> 42:58.150
我们写两个expert

42:58.150 --> 43:01.150
就是导出的两个函数

43:01.150 --> 43:03.150
一个是叫做setglobaldata

43:03.150 --> 43:04.150
设定

43:04.150 --> 43:05.150
然后呢

43:05.150 --> 43:06.150
我们完成一个keyvalue

43:06.150 --> 43:08.150
就是往当前的这个

43:08.150 --> 43:10.150
global对象里面放置

43:10.150 --> 43:13.150
第二个是getglobaldata

43:13.150 --> 43:14.150
代表的是

43:14.150 --> 43:16.150
我们现在可以从里面取值

43:16.150 --> 43:17.150
那么整个global

43:17.150 --> 43:18.150
作为全局位置防止

43:18.150 --> 43:19.150
它和app.js

43:19.150 --> 43:21.150
属于同一节目录像

43:21.150 --> 43:25.740
那你要使用的时候呢

43:25.740 --> 43:26.740
很简单

43:26.740 --> 43:29.740
只需要去引用它就可以

43:29.740 --> 43:30.740
我们首先先引用一下

43:30.740 --> 43:31.740
给它复值

43:31.740 --> 43:32.740
给它复值

43:32.740 --> 43:34.740
那我们去到我们任何一个

43:34.740 --> 43:36.740
能够有我们这个global

43:36.740 --> 43:37.740
页面的

43:37.740 --> 43:39.740
或者说有这个数据的

43:39.740 --> 43:40.740
那么在哪呢

43:40.740 --> 43:41.740
我们看一下

43:41.740 --> 43:42.740
我们之前还记得吗

43:42.740 --> 43:44.740
我们在之前的页面中

43:44.740 --> 43:46.740
我们经常能看到这个值

43:46.740 --> 43:53.060
在Peters里面

43:53.060 --> 43:59.300
我们找到我们的首页

43:59.300 --> 44:09.580
我们看一下啊

44:09.580 --> 44:10.580
我们OpenID

44:10.580 --> 44:19.720
在我们发布评论

44:19.720 --> 44:20.720
这个页面

44:20.720 --> 44:30.750
它不在这啊

44:30.750 --> 44:32.750
它那我们说我们在

44:32.750 --> 44:38.370
Hondetail里面

44:38.370 --> 44:40.370
这里也是可以拿到的

44:40.370 --> 44:45.560
这边有的

44:45.560 --> 44:46.560
那么Hondetail

44:46.560 --> 44:48.560
应该是昏传给它的

44:48.560 --> 44:52.790
所以我们这边搜一下

44:52.790 --> 44:53.790
OpenID

44:55.790 --> 44:56.790
有

44:56.790 --> 44:58.790
它这边是可以拿到

44:58.790 --> 45:00.790
我们找一下这个OpenID

45:00.790 --> 45:02.790
它只要能够生成的那个点

45:02.790 --> 45:04.790
这是进行跳转的

45:07.100 --> 45:08.100
就是判断有没有

45:08.100 --> 45:10.100
我们单击每一项的时候

45:10.100 --> 45:11.100
这边

45:11.100 --> 45:12.100
它都会有

45:12.100 --> 45:13.100
那么我们就如果说

45:13.100 --> 45:15.100
你要查看某条信息

45:15.100 --> 45:17.100
那么这边有个OpenID对吧

45:17.100 --> 45:18.100
然后同时呢

45:18.100 --> 45:19.100
我们再往上

45:19.100 --> 45:21.100
看它的生成点还有吗

45:21.100 --> 45:34.820
onItemClick

45:34.820 --> 45:36.820
调用每一项的时候

45:36.820 --> 45:37.820
在这

45:38.820 --> 45:39.820
调用每一项的时候

45:39.820 --> 45:41.820
那么就是在这个

45:41.820 --> 45:42.820
我们完成

45:42.820 --> 45:44.820
setset那个topic

45:44.820 --> 45:45.820
放置的时候

45:45.820 --> 45:47.820
里面就会有

45:47.820 --> 45:49.820
当前这一条数据

45:49.820 --> 45:51.820
就是你个人的这个

45:51.820 --> 45:52.820
ID了

45:52.820 --> 45:54.820
我们去它的服务器里面

45:54.820 --> 46:00.940
找到这个我们的topic

46:00.940 --> 46:01.940
我们

46:01.940 --> 46:03.940
它是在什么时候放的呢

46:03.940 --> 46:04.940
刚夹在的时候

46:04.940 --> 46:07.940
我们找到它夹在位

46:07.940 --> 46:09.940
夹在位在这

46:10.940 --> 46:12.940
getData

46:12.940 --> 46:13.940
在这里面

46:13.940 --> 46:15.940
我们去拿到了你

46:15.940 --> 46:16.940
现在往下走

46:16.940 --> 46:17.940
往下走

46:17.940 --> 46:18.940
我们这边能看到

46:18.940 --> 46:20.940
一旦我数据有了以后

46:20.940 --> 46:21.940
我直接把data数据

46:21.940 --> 46:23.940
放到topics里面

46:23.940 --> 46:24.940
这里面就是你现在

46:24.940 --> 46:26.940
所有的结构

46:26.940 --> 46:28.940
那我们现在点击这一篇

46:28.940 --> 46:30.940
我要看一下我自己的

46:30.940 --> 46:32.940
那个ID的话

46:32.940 --> 46:33.940
那我只需要去得到

46:33.940 --> 46:34.940
我自己的ID

46:34.940 --> 46:35.940
对吧

46:35.940 --> 46:36.940
我拿到ID出来

46:36.940 --> 46:38.940
我们得到这个值的时候呢

46:38.940 --> 46:39.940
其实很简单

46:39.940 --> 46:40.940
我们有几种做法

46:40.940 --> 46:41.940
第一种呢

46:41.940 --> 46:42.940
我们可以

46:42.940 --> 46:44.940
做案例的时候先写死

46:44.940 --> 46:45.940
然后呢

46:45.940 --> 46:47.940
直接通过我们的

46:48.940 --> 46:49.940
值拿到

46:49.940 --> 46:50.940
就是我们直接是

46:50.940 --> 46:51.940
数据库拿到

46:51.940 --> 46:52.940
第二种呢

46:52.940 --> 46:53.940
我们想

46:53.940 --> 46:54.940
当前的数据

46:54.940 --> 46:55.940
其实有一个特点

46:55.940 --> 46:56.940
就是说它只要

46:56.940 --> 46:57.940
你存到数据库里

46:57.940 --> 46:58.940
它就会这种

46:58.940 --> 46:59.940
生成一个ID

46:59.940 --> 47:00.940
是吗

47:00.940 --> 47:01.940
所以我现在只要

47:01.940 --> 47:02.940
通过我们的

47:02.940 --> 47:04.940
这component data show

47:04.940 --> 47:05.940
往数据库里

47:05.940 --> 47:06.940
任何一个表中

47:06.940 --> 47:08.940
我们去存一个数据

47:08.940 --> 47:09.940
我们去存一个数据

47:09.940 --> 47:10.940
那么这个数据

47:10.940 --> 47:12.940
一旦存进去以后的话呢

47:12.940 --> 47:13.940
那么它就会给我返回

47:13.940 --> 47:15.940
我们现在的OpenID

47:15.940 --> 47:16.940
去查这道数据

47:16.940 --> 47:17.940
就可以拿到了

47:17.940 --> 47:18.940
是吧

47:18.940 --> 47:19.940
这结构

47:19.940 --> 47:20.940
所以我们现在

47:20.940 --> 47:21.940
你完全可以在集合里面

47:21.940 --> 47:22.940
你新建一个

47:22.940 --> 47:24.940
咱们称之为叫做

47:31.300 --> 47:35.660
login time

47:35.660 --> 47:37.660
你可以写一个login time

47:37.660 --> 47:38.660
登录时间

47:40.660 --> 47:41.660
然后呢

47:41.660 --> 47:42.660
我现在在我们的

47:42.660 --> 47:44.660
当前进到我们的

47:44.660 --> 47:45.660
me也好

47:45.660 --> 47:46.660
进到这个collector里面

47:46.660 --> 47:47.660
也好

47:47.660 --> 47:48.660
我们可以把这个

47:48.660 --> 47:49.660
数据往里

47:49.660 --> 47:50.660
插一个时间

47:50.660 --> 47:51.660
登录时间

47:51.660 --> 47:52.660
那么这样的话呢

47:52.660 --> 47:53.660
我们就可以直接

47:53.660 --> 47:54.660
反过来拿

47:54.660 --> 47:55.660
对吧

47:55.660 --> 47:56.660
所以我们这边

47:56.660 --> 47:57.660
先做一下

47:57.660 --> 48:00.490
先把还是把这个

48:00.490 --> 48:01.490
诸消掉

48:01.490 --> 48:02.490
我们先拿这个

48:06.460 --> 48:07.460
OpenID

48:07.460 --> 48:08.460
咱们叫做

48:09.460 --> 48:13.180
login time的操作

48:19.400 --> 48:20.400
咱们在这写上

48:21.400 --> 48:24.400
this.login time

48:25.400 --> 48:30.820
我只要往数据库里

48:30.820 --> 48:31.820
哪个表

48:32.820 --> 48:33.820
我们就要login time

48:34.820 --> 48:35.820
去插数据

48:35.820 --> 48:36.820
把它adder

48:36.820 --> 48:39.650
dater

48:40.650 --> 48:41.650
我们插一个数据进去

48:42.650 --> 48:43.650
咱们插一个

48:45.650 --> 48:46.650
就是一个时间

48:47.650 --> 48:50.020
就代表这个时间

48:50.020 --> 48:51.020
有人登录了

48:51.020 --> 48:52.020
来插这个数据

48:54.020 --> 48:55.020
login

48:55.020 --> 48:56.020
new

48:57.020 --> 48:58.020
date

48:58.020 --> 49:03.000
然后一旦这个数据进去了

49:03.000 --> 49:04.000
那么我们先在

49:04.000 --> 49:05.000
limar

49:05.000 --> 49:08.910
indead

49:09.910 --> 49:10.910
res的返回

49:11.910 --> 49:12.910
我们来看一下

49:13.910 --> 49:15.910
它给我返回的

49:15.910 --> 49:16.910
一定会有这个

49:16.910 --> 49:17.910
login

49:17.910 --> 49:18.910
那个有一个ID

49:18.910 --> 49:19.910
对不对

49:19.910 --> 49:42.170
我们直接这样

49:42.170 --> 49:43.170
它爆了一个

49:49.060 --> 49:50.060
然后拿到里面

49:50.060 --> 49:56.380
我们看一下这个值

49:56.380 --> 49:57.380
我们把这个写一下

49:58.380 --> 49:59.380
咱们叫

49:59.380 --> 50:00.380
login time

50:00.380 --> 50:04.230
它是在我进到

50:04.230 --> 50:05.230
collector

50:05.230 --> 50:06.230
这个页面的时候

50:06.230 --> 50:23.180
它还没加在出来

50:23.180 --> 50:26.900
重启它一下

51:01.590 --> 51:02.590
处理出来了

51:03.590 --> 51:04.590
点击我的

51:04.590 --> 51:10.740
点击收

51:11.740 --> 51:14.180
到这个页面以后

51:14.180 --> 51:15.180
咱们看

51:15.180 --> 51:16.180
login time数据是不是出来了

51:16.180 --> 51:17.180
出来以后的话

51:17.180 --> 51:18.180
我们去查一下数据库

51:19.180 --> 51:33.340
login time

51:33.340 --> 51:34.340
是不是这边有一个

51:34.340 --> 51:35.340
oban id

51:35.340 --> 51:36.340
它给我返回了

51:36.340 --> 51:38.340
当前的一个ID

51:38.340 --> 51:39.340
是吧

51:39.340 --> 51:40.340
所以我们拿着

51:40.340 --> 51:41.340
下纲ID

51:41.340 --> 51:42.340
再去反查

51:42.340 --> 51:43.340
它现在的数据

51:44.340 --> 51:46.340
拿着它的下纲ID

51:46.340 --> 51:47.340
我们再去拿

51:48.340 --> 51:49.340
咱们看着

51:49.340 --> 51:50.340
res的

51:50.340 --> 51:52.840
下纲ID

51:53.840 --> 51:54.840
你可以拿到这个值

51:55.840 --> 51:56.840
拿到以后

51:56.840 --> 51:57.840
然后

51:57.840 --> 51:58.840
再反过来

51:58.840 --> 51:59.840
去查它里面的

52:00.840 --> 52:05.150
db.collection

52:06.150 --> 52:08.150
再查它自己的

52:08.150 --> 52:20.550
你再去查它自己的

52:21.550 --> 52:23.550
doc的这条数据

52:24.550 --> 52:29.680
再去查这条数据

52:30.680 --> 52:31.680
我们get

52:31.680 --> 52:46.920
再去得到

52:47.920 --> 52:48.920
在这里面

52:48.920 --> 52:50.920
我们把这个数据拿出来

52:50.920 --> 52:53.300
再看一次

52:54.300 --> 52:57.060
这个res

52:57.060 --> 52:58.060
我们称之为

52:58.060 --> 53:00.060
我们把名称写一下

53:00.060 --> 53:01.060
它不叫res

53:01.060 --> 53:02.060
它就是叫做

53:04.060 --> 53:05.060
login time

53:07.060 --> 53:08.060
res

53:08.060 --> 53:12.220
那么这个

53:12.220 --> 53:13.220
我们就可以不要线

53:13.220 --> 53:24.690
因为它每个人

53:24.690 --> 53:26.690
自己做这次操作的时候

53:26.690 --> 53:27.690
都会有自己的

53:27.690 --> 53:28.690
一个ID生成

53:28.690 --> 53:29.690
而这个login id

53:29.690 --> 53:30.690
是在云端

53:30.690 --> 53:31.690
会有这样的存储的

53:31.690 --> 53:32.690
所以我只需要

53:32.690 --> 53:34.690
把这个数据存进来

53:34.690 --> 53:35.690
咱们看这边

53:36.690 --> 53:37.690
是不是

53:37.690 --> 53:38.690
这个oban id就有了

53:39.690 --> 53:40.690
我在这边

53:40.690 --> 53:41.690
我就可以直接

53:41.690 --> 53:42.690
用通过这个方式

53:42.690 --> 53:44.690
我可以得到这个

53:44.690 --> 53:45.690
下岗oban id

53:49.340 --> 53:50.340
点

53:50.340 --> 53:51.340
下岗

53:52.340 --> 53:53.340
oban id

53:54.340 --> 53:55.340
当你得到这个ID以后

53:55.340 --> 53:57.340
那我所有的查找动作

53:57.340 --> 53:59.340
我全是在这个里面完成

54:00.340 --> 54:01.340
所以我把我的

54:01.340 --> 54:03.340
整个getdata的结构

54:03.340 --> 54:04.340
我把getdata结构

54:04.340 --> 54:06.340
全部放到login time里面了完成

54:08.340 --> 54:09.340
是这样的情况

54:09.340 --> 54:10.340
那么这样

54:10.340 --> 54:12.340
我们就可以做得非常的舒服

54:13.340 --> 54:14.340
this点

54:14.340 --> 54:15.340
这个就不在这边写了

54:15.340 --> 54:20.770
这个放着没关系

54:20.770 --> 54:22.770
然后一旦你得到以后的话

54:22.770 --> 54:23.770
我们把它存储到

54:23.770 --> 54:25.770
现在的stater里面

54:25.770 --> 54:29.780
oban id

54:32.670 --> 54:39.340
等于空

54:39.340 --> 54:40.340
来

54:40.340 --> 54:41.340
这边我们

54:41.340 --> 54:42.340
依然

54:44.340 --> 54:53.300
做一个z

54:53.300 --> 54:55.300
z点

54:55.300 --> 54:59.260
set stater

55:00.260 --> 55:02.260
z点set stater

55:02.260 --> 55:03.260
然后这边

55:03.260 --> 55:05.260
我们放的是oban id

55:05.260 --> 55:10.360
等于我们把后面

55:10.360 --> 55:11.360
这个拿出来

55:11.360 --> 55:17.940
这样我就拿到了这个值

55:18.940 --> 55:19.940
然后我同时

55:19.940 --> 55:21.940
我通过这个值

55:21.940 --> 55:22.940
我在这里

55:22.940 --> 55:23.940
注意

55:23.940 --> 55:24.940
在它的

55:25.940 --> 55:27.940
回调里面

55:27.940 --> 55:28.940
我们再去执行

55:30.940 --> 55:31.940
获取数据

55:32.940 --> 55:33.940
获取我的

55:33.940 --> 55:35.940
收藏数据

55:35.940 --> 55:36.940
这样去得

55:37.940 --> 55:38.940
db点

55:40.940 --> 55:47.540
collection

55:47.540 --> 55:48.540
条件

55:49.540 --> 55:50.540
where

55:51.540 --> 55:54.810
那么

55:54.810 --> 55:55.810
下槓

55:55.810 --> 55:58.380
oban id

55:58.380 --> 55:59.380
等于

56:01.380 --> 56:02.380
get

56:02.380 --> 56:03.380
that

56:03.380 --> 56:04.380
点

56:04.380 --> 56:07.070
stater

56:08.070 --> 56:09.070
点

56:10.070 --> 56:11.070
oban id

56:11.070 --> 56:16.900
get

56:16.900 --> 56:18.900
我们把这个写在意行上

56:18.900 --> 56:32.390
会得到数据回来

56:32.390 --> 56:34.390
那么这个数据呢

56:34.390 --> 56:35.390
我们看一下

56:35.390 --> 56:36.390
如果正常情况下

56:36.390 --> 56:38.390
一定会得到我们现在的

56:39.390 --> 56:40.390
所需要的那个数据

56:40.390 --> 56:41.390
我们把它改一改

56:41.390 --> 56:46.180
我们把它就改成的是

56:46.180 --> 56:47.180
2s

56:47.180 --> 56:55.610
这里面没有其他的console的

56:55.610 --> 56:57.610
所以它只有最后这一步

56:57.610 --> 57:11.930
去到我的

57:11.930 --> 57:13.930
收藏列表

57:13.930 --> 57:17.010
怎么看到吗

57:17.010 --> 57:19.010
是不是有两条记录

57:19.010 --> 57:20.010
就出来了

57:21.010 --> 57:22.010
都是我现在的

57:22.010 --> 57:23.010
所以

57:23.010 --> 57:24.010
这个方式呢

57:24.010 --> 57:26.010
虽然可能会耗一点

57:26.010 --> 57:27.010
我们的网络资源

57:27.010 --> 57:29.010
但是它的确通过这样的方式

57:29.010 --> 57:30.010
让系统帮我们

57:30.010 --> 57:32.010
来完成这个oban id的获取

57:33.010 --> 57:35.010
这样的话呢很方便

57:35.010 --> 57:37.010
然后获取到以后的话

57:37.010 --> 57:38.010
那我们就可以把它

57:38.010 --> 57:40.010
直接放在我们的页面中

57:40.010 --> 57:41.010
然后进行我们的

57:41.010 --> 57:43.010
后面的操作了

57:43.010 --> 57:44.010
我们页面中

57:44.010 --> 57:45.010
我们有一个

57:45.010 --> 57:47.010
我们看一下有个selector

57:47.010 --> 57:48.010
对吧

57:48.010 --> 57:50.010
我们就把当前的这个数据

57:50.010 --> 57:52.010
放在这个selector里面去

57:53.010 --> 57:55.010
它的当前数据是在什么里面呢

57:55.010 --> 57:57.010
我们看一下是在这个data里面

57:57.010 --> 57:58.010
对吧

57:58.010 --> 57:59.010
data里面

57:59.010 --> 58:00.010
所以我们来写

58:05.070 --> 58:06.070
这里写一下

58:06.070 --> 58:07.070
我们是

58:13.070 --> 58:14.070
把数据放进去

58:14.070 --> 58:15.070
数据的话呢

58:15.070 --> 58:17.070
这边我们写上的是

58:26.280 --> 58:27.280
那里面的就是

58:27.280 --> 58:29.280
我们先在这边拿到的

58:29.280 --> 58:30.280
它里面的

58:31.280 --> 58:34.740
ok吧

58:34.740 --> 58:36.740
它拿到的date数据

58:36.740 --> 58:40.720
这样我们的数据

58:40.720 --> 58:41.720
就ok没问题了

58:44.540 --> 58:45.540
看一下

58:45.540 --> 58:46.540
看一下效果

58:46.540 --> 58:47.540
当这部好了

58:47.540 --> 58:48.540
后面还得查数据库

58:58.470 --> 58:59.470
数据出来了

58:59.470 --> 59:00.470
但是请注意啊

59:00.470 --> 59:01.470
我们放进去以后

59:01.470 --> 59:02.470
所拿到的数据

59:02.470 --> 59:04.470
这是我告诉我

59:04.470 --> 59:06.470
现在我有两条数据

59:06.470 --> 59:08.470
数据的操作

59:08.470 --> 59:12.470
一条呢是叫做id是9c91的

59:12.470 --> 59:14.470
一条是1c7的

59:14.470 --> 59:16.470
那么我们需要拿到

59:16.470 --> 59:18.470
具体这两条数据是什么

59:18.470 --> 59:19.470
所以我们下面

59:19.470 --> 59:21.470
还得来对它进行

59:22.470 --> 59:23.470
这个操作呢

59:23.470 --> 59:24.470
主要还是在我们的

59:24.470 --> 59:25.470
这里

59:25.470 --> 59:26.470
这是我们叫做

59:50.140 --> 59:51.140
这样去获取

59:51.140 --> 59:52.140
然后呢我们把它

59:52.140 --> 59:53.140
写出来

01:00:11.150 --> 01:00:12.150
获取内容根据id

01:00:12.150 --> 01:00:14.150
首先我们先写

01:00:14.150 --> 01:00:15.150
一个普通辨量

01:00:15.150 --> 01:00:21.180
等于

01:00:21.180 --> 01:00:23.180
我们写一个空的

01:00:23.180 --> 01:00:24.180
然后呢

01:00:24.180 --> 01:00:25.180
我们这边用个货

01:00:25.180 --> 01:00:26.180
来做啊

01:00:26.180 --> 01:00:27.180
我们看一下

01:00:27.180 --> 01:00:28.180
i

01:00:28.180 --> 01:00:30.180
然后在里面用我们的

01:00:30.180 --> 01:00:31.180
z

01:00:31.180 --> 01:00:32.180
用this就可以了

01:00:32.180 --> 01:00:33.180
这边

01:00:33.180 --> 01:00:34.180
点

01:00:34.180 --> 01:00:38.000
stator里面的

01:00:39.000 --> 01:00:40.000
galactus

01:00:40.000 --> 01:00:45.170
这个要放进去以后

01:00:45.170 --> 01:00:46.170
才能获得

01:00:46.170 --> 01:00:48.170
所以还得在它里面

01:00:48.170 --> 01:00:51.440
进去

01:00:51.440 --> 01:01:04.700
到这来

01:01:04.700 --> 01:01:10.060
现在我们要通过

01:01:10.060 --> 01:01:11.060
这个循环方式

01:01:11.060 --> 01:01:13.060
从我们的

01:01:13.060 --> 01:01:14.060
stator的galactus里面得到值

01:01:14.060 --> 01:01:15.060
刚才我们的

01:01:15.060 --> 01:01:16.060
放在外面对吧

01:01:16.060 --> 01:01:17.060
因为它又是一个

01:01:17.060 --> 01:01:18.060
setstator

01:01:18.060 --> 01:01:19.060
所以还得放到

01:01:19.060 --> 01:01:21.060
它的一个回调寒出种

01:01:21.060 --> 01:01:23.060
那么开始来取值

01:01:23.060 --> 01:01:24.060
首先第一个

01:01:24.060 --> 01:01:26.060
取出它的topic id

01:01:26.060 --> 01:01:34.810
这边我们也写一个

01:01:34.810 --> 01:01:35.810
that

01:01:35.810 --> 01:01:46.740
stator里面的

01:01:47.740 --> 01:01:48.740
galactus

01:01:49.740 --> 01:01:51.740
i拿出它的

01:01:51.740 --> 01:01:53.740
下杠id

01:01:54.740 --> 01:01:55.740
我们说

01:01:55.740 --> 01:01:59.750
去topic demo

01:01:59.750 --> 01:02:03.410
标

01:02:04.410 --> 01:02:05.410
找

01:02:05.410 --> 01:02:06.410
标啊

01:02:06.410 --> 01:02:07.410
找数据

01:02:07.410 --> 01:02:11.130
db.

01:02:12.130 --> 01:02:13.130
collection

01:02:13.130 --> 01:02:16.270
topic

01:02:17.270 --> 01:02:18.270
demo

01:02:18.270 --> 01:02:23.270
doc

01:02:24.270 --> 01:02:26.270
topic id

01:02:26.270 --> 01:02:31.210
get

01:02:31.210 --> 01:02:32.210
来获得数据

01:02:37.400 --> 01:02:39.400
then数据拿到

01:02:39.400 --> 01:02:46.550
拿到数据以后

01:02:46.550 --> 01:02:48.550
我们把它先放在

01:02:49.550 --> 01:02:50.550
我们的

01:02:51.550 --> 01:02:52.550
把它加入到

01:02:52.550 --> 01:02:53.550
topic id

01:02:54.550 --> 01:02:56.550
把它直接加进去

01:02:57.550 --> 01:02:59.550
它的数据应该在data里面

01:03:00.550 --> 01:03:01.550
把它数据拿出来

01:03:01.550 --> 01:03:02.550
我们先放在

01:03:03.550 --> 01:03:04.550
这里

01:03:04.550 --> 01:03:07.250
然后同时

01:03:07.250 --> 01:03:09.250
我们也可以把它push进去

01:03:10.250 --> 01:03:12.250
我们把它做成一个速度

01:03:13.250 --> 01:03:15.250
那么你这边的话

01:03:15.250 --> 01:03:16.250
你就可以

01:03:17.250 --> 01:03:19.250
我们在它里面push

01:03:21.250 --> 01:03:22.250
加入现在

01:03:25.460 --> 01:03:27.460
当你整个这个操作完成以后

01:03:27.460 --> 01:03:28.460
循环结束

01:03:28.460 --> 01:03:30.460
那么其实在它里面

01:03:30.460 --> 01:03:35.280
就应该有我们的数据结构了

01:03:35.280 --> 01:03:37.280
就是我们的所有的数据

01:03:37.280 --> 01:03:38.280
都应该在呈现出来了

01:03:38.280 --> 01:03:39.280
我们可以看一下

01:03:39.280 --> 01:03:45.920
当它数据有了以后的话

01:03:45.920 --> 01:03:46.920
那我们待会啊

01:03:46.920 --> 01:03:48.920
我们就可以直接把你现在的

01:03:48.920 --> 01:03:49.920
整个这个

01:03:51.920 --> 01:03:52.920
temp topics

01:03:52.920 --> 01:03:53.920
这边所有内容

01:03:53.920 --> 01:03:54.920
加到我们的

01:03:54.920 --> 01:03:56.920
整个的页面的

01:03:56.920 --> 01:03:57.920
topics里面来

01:04:10.980 --> 01:04:11.980
加到整个页面的

01:04:11.980 --> 01:04:12.980
所以

01:04:13.980 --> 01:04:14.980
that

01:04:14.980 --> 01:04:19.640
这里可以用this

01:04:19.640 --> 01:04:20.640
this点

01:04:20.640 --> 01:04:21.640
set

01:04:21.640 --> 01:04:22.640
state

01:04:22.640 --> 01:04:25.590
topic

01:04:25.590 --> 01:04:26.590
然后的话呢

01:04:27.590 --> 01:04:29.590
这边我们直接写的是

01:04:29.590 --> 01:04:34.720
整个这个

01:04:34.720 --> 01:04:38.930
把它直接加进去

01:04:38.930 --> 01:04:42.970
这个咱们

01:04:46.300 --> 01:04:47.300
给不需要

01:04:47.300 --> 01:04:51.980
好我们现在来看一下

01:04:51.980 --> 01:04:52.980
整个这个操作

01:04:52.980 --> 01:04:54.980
我们把它这个

01:04:54.980 --> 01:04:56.980
我们不用显示它了

01:04:56.980 --> 01:04:57.980
我们在这显示

01:04:58.980 --> 01:04:59.980
这个放这

01:04:59.980 --> 01:05:00.980
我们显示两次吧

01:05:01.980 --> 01:05:03.980
在它的回调里面

01:05:03.980 --> 01:05:07.740
我们去做个显示

01:05:08.740 --> 01:05:09.740
topic

01:05:09.740 --> 01:05:10.740
我们称为stat

01:05:11.740 --> 01:05:12.740
stacktopic

01:05:13.740 --> 01:05:21.940
还真的用一下啊

01:05:22.940 --> 01:05:33.130
statter点

01:05:33.130 --> 01:05:34.130
topic

01:05:34.130 --> 01:05:44.760
topics

01:05:56.160 --> 01:05:57.160
好我们来看一下页面

01:06:12.530 --> 01:06:13.530
它又满了

01:06:13.530 --> 01:06:20.700
再变印象

01:06:20.700 --> 01:06:28.010
云端数据

01:06:29.010 --> 01:06:32.470
云端没问题啊

01:06:33.470 --> 01:06:35.470
那我们要重新开它一下

01:06:35.470 --> 01:06:59.970
我们来看一下啊

01:06:59.970 --> 01:07:07.660
ok

01:07:07.660 --> 01:07:16.300
等一下

01:07:17.300 --> 01:07:18.300
这边的数据

01:07:19.300 --> 01:07:20.300
好我们看到这边

01:07:20.300 --> 01:07:22.300
它没有数据返回对吧

01:07:22.300 --> 01:07:23.300
前面这个数据倒有

01:07:23.300 --> 01:07:25.300
就是后面它没有查到

01:07:25.300 --> 01:07:26.300
那我们现在回过头来

01:07:26.300 --> 01:07:27.300
来看一下

01:07:27.300 --> 01:07:28.300
这里面的一个操作问题

01:07:29.300 --> 01:07:30.300
特别是这个部分

01:07:30.300 --> 01:07:31.300
那么这部分

01:07:31.300 --> 01:07:33.300
它是通过这个来的

01:07:33.300 --> 01:07:35.300
这个id是通过这拿到的

01:07:35.300 --> 01:07:36.300
对吧

01:07:36.300 --> 01:07:38.300
我们来看一下这块

01:07:38.300 --> 01:07:49.960
把它拿出来

01:07:49.960 --> 01:07:57.500
看一下这个topic

01:07:57.500 --> 01:07:59.500
id里面有没有值

01:07:59.500 --> 01:08:12.050
有啊

01:08:12.050 --> 01:08:14.050
这个topic id里面有值

01:08:14.050 --> 01:08:16.050
有值就意味着

01:08:16.050 --> 01:08:17.050
这边是可以拿数据

01:08:17.050 --> 01:08:18.050
只不过这个表明

01:08:18.050 --> 01:08:19.050
我们查一下

01:08:20.050 --> 01:08:21.050
打开

01:08:21.050 --> 01:08:29.610
我们去找一下

01:08:29.610 --> 01:08:31.610
topic demo

01:08:31.610 --> 01:08:33.610
topic demo

01:08:33.610 --> 01:08:38.480
topic demo

01:08:38.480 --> 01:08:39.480
对的啊

01:08:39.480 --> 01:08:40.480
我们这边拿这个值

01:08:40.480 --> 01:08:42.480
然后拿出来以后

01:08:42.480 --> 01:08:43.480
它直接拿它的data

01:08:43.480 --> 01:08:45.480
那表示这个值

01:08:45.480 --> 01:08:46.480
是可以拿到的

01:08:46.480 --> 01:08:55.420
我们这边把它拿一下

01:08:55.420 --> 01:08:58.420
这是属于topic demo

01:08:58.420 --> 01:09:01.420
数据里面的res

01:09:01.420 --> 01:09:03.420
难道它这个不是这个

01:09:03.420 --> 01:09:04.420
data吗

01:09:04.420 --> 01:09:10.020
还是哪里写错一个字母

01:09:10.020 --> 01:09:12.020
我们来调一下

01:09:12.020 --> 01:09:23.460
这个console

01:09:23.460 --> 01:09:24.460
这个不管啊

01:09:24.460 --> 01:09:25.460
我们先把这个改一下

01:09:25.460 --> 01:09:26.460
它其实的原因

01:09:26.460 --> 01:09:27.460
并不是弹码上面

01:09:27.460 --> 01:09:29.460
而是属于这个data

01:09:29.460 --> 01:09:31.460
它是一个异布

01:09:31.460 --> 01:09:32.460
所以呢

01:09:32.460 --> 01:09:33.460
它在返回

01:09:33.460 --> 01:09:34.460
做这个数据的时候

01:09:34.460 --> 01:09:35.460
你下面直接用的时候

01:09:35.460 --> 01:09:37.460
它是不可以显示出来的

01:09:37.460 --> 01:09:38.460
那我们就这么做

01:09:38.460 --> 01:09:40.460
我们把整个这个部分啊

01:09:40.460 --> 01:09:42.460
搬进去

01:09:42.460 --> 01:09:46.410
我们把下面的整个搬进去

01:09:46.410 --> 01:09:48.410
我们做这个操作

01:09:48.410 --> 01:09:50.410
就是当你现在

01:09:50.410 --> 01:09:52.410
拿到一条记录的时候

01:09:52.410 --> 01:09:54.410
我们就把这条记录

01:09:54.410 --> 01:09:56.410
直接用contact的方式

01:09:56.410 --> 01:09:57.410
注意

01:09:57.410 --> 01:09:58.410
这边不能用post

01:09:59.410 --> 01:10:00.410
post是追加

01:10:00.410 --> 01:10:02.410
在于改变原有素组

01:10:02.410 --> 01:10:03.410
情况下后面追加

01:10:03.410 --> 01:10:04.410
contact

01:10:04.410 --> 01:10:06.410
它其实是

01:10:06.410 --> 01:10:08.410
不改变两个速度情况下

01:10:08.410 --> 01:10:10.410
返回一个新速组

01:10:10.410 --> 01:10:11.410
那这样的话呢

01:10:11.410 --> 01:10:13.410
我就对topics里面的值

01:10:13.410 --> 01:10:15.410
进行了两次更新

01:10:15.410 --> 01:10:16.410
那么这样的话

01:10:16.410 --> 01:10:17.410
我在后面返回的时候

01:10:17.410 --> 01:10:19.410
我有两条记录

01:10:19.410 --> 01:10:20.410
所以在第二次数据返回的时候

01:10:20.410 --> 01:10:21.410
这里面的数据

01:10:21.410 --> 01:10:23.410
就是那个topics里面

01:10:23.410 --> 01:10:24.410
就应该变成两条了

01:10:24.410 --> 01:10:26.410
应该是这样一个结构

01:10:26.410 --> 01:10:27.410
好

01:10:27.410 --> 01:10:32.470
我们来看一下吧

01:10:32.470 --> 01:10:33.470
你放在下面的时候

01:10:33.470 --> 01:10:34.470
由于data

01:10:34.470 --> 01:10:35.470
它是一个异布

01:10:35.470 --> 01:10:36.470
异布的话呢

01:10:36.470 --> 01:10:37.470
它把数据

01:10:37.470 --> 01:10:38.470
还没有返回的时候

01:10:38.470 --> 01:10:39.470
你已经呈现了

01:10:39.470 --> 01:10:40.470
所以这时候

01:10:40.470 --> 01:10:41.470
你已经没数据

01:10:42.470 --> 01:10:43.470
连一下

01:10:43.470 --> 01:10:44.470
我们来看一下

01:10:44.470 --> 01:10:45.470
对吧

01:10:45.470 --> 01:10:47.470
这边是不是有两条数据

01:10:48.470 --> 01:10:49.470
两条数据出来了

01:10:51.470 --> 01:10:53.470
这是很简单的一个逻辑

01:10:54.470 --> 01:10:55.470
我们到我们的

01:10:55.470 --> 01:10:57.470
这个表中去看一下

01:10:57.470 --> 01:10:58.470
哪个呢

01:11:00.470 --> 01:11:02.470
topic demo

01:11:03.470 --> 01:11:05.470
这里面都会看到你的数据

01:11:05.470 --> 01:11:06.470
我们这样吧

01:11:06.470 --> 01:11:08.470
我们直接把这个数据

01:11:08.470 --> 01:11:09.470
现在在页面中

01:11:09.470 --> 01:11:10.470
这样你就看起来更简单

01:11:10.470 --> 01:11:11.470
对吧

01:11:11.470 --> 01:11:13.470
我们把topic拿出来

01:11:13.470 --> 01:11:18.360
然后找到当前的

01:11:18.360 --> 01:11:19.360
页面位置

01:11:19.360 --> 01:11:21.360
我们页面其实还没写

01:11:21.360 --> 01:11:22.360
那么现在呢

01:11:22.360 --> 01:11:24.360
我们把页面可以写一下

01:11:24.360 --> 01:11:25.360
当然我们做之前

01:11:25.360 --> 01:11:26.360
我们还是履一下

01:11:26.360 --> 01:11:27.360
前面的代码

01:11:28.360 --> 01:11:29.360
首先

01:11:29.360 --> 01:11:30.360
我们呢

01:11:30.360 --> 01:11:32.360
创建了我们现在的

01:11:32.360 --> 01:11:34.360
一个方法

01:11:34.360 --> 01:11:36.360
我们把前面这个先删掉了

01:11:36.360 --> 01:11:37.360
获取数据

01:11:37.360 --> 01:11:39.360
我们先创建一个login time

01:11:39.360 --> 01:11:40.360
这是登录时间的判断

01:11:40.360 --> 01:11:41.360
为了

01:11:41.360 --> 01:11:42.360
我们这边说

01:11:43.360 --> 01:11:45.360
为了获取

01:11:45.360 --> 01:11:50.310
OpenID的方法之一

01:11:53.200 --> 01:11:54.200
我们先自己往

01:11:54.200 --> 01:11:55.200
随便往一个

01:11:55.200 --> 01:11:56.200
登录时间里

01:11:56.200 --> 01:11:57.200
查一条记录

01:11:57.200 --> 01:11:58.200
那么这条记录

01:11:58.200 --> 01:11:59.200
当然后期的话

01:11:59.200 --> 01:12:00.200
我们可以清

01:12:00.200 --> 01:12:02.200
那么我们查好以后呢

01:12:02.200 --> 01:12:04.200
它会返回给我一个

01:12:04.200 --> 01:12:05.200
ID

01:12:05.200 --> 01:12:06.200
新记录ID

01:12:06.200 --> 01:12:07.200
但是由于我新记录

01:12:07.200 --> 01:12:08.200
查入以后呢

01:12:08.200 --> 01:12:10.200
它会自动生成一个OpenID

01:12:10.200 --> 01:12:12.200
所以我再去查找这个数据

01:12:12.200 --> 01:12:14.200
拿出它的OpenID来

01:12:14.200 --> 01:12:15.200
拿出以后的话呢

01:12:15.200 --> 01:12:17.200
我把这个OpenID

01:12:17.200 --> 01:12:19.200
根据这个OpenID的数据

01:12:19.200 --> 01:12:21.200
我去查找叫做collect demo

01:12:21.200 --> 01:12:23.200
就是我收藏数据表

01:12:23.200 --> 01:12:24.200
收藏数据表数据

01:12:24.200 --> 01:12:25.200
拿出来以后的话呢

01:12:25.200 --> 01:12:27.200
我们这个也不要了

01:12:27.200 --> 01:12:28.200
收藏数据表数据

01:12:28.200 --> 01:12:29.200
拿出来以后

01:12:29.200 --> 01:12:30.200
每条数据

01:12:30.200 --> 01:12:32.200
我们都把它进行

01:12:32.200 --> 01:12:33.200
追加

01:12:33.200 --> 01:12:34.200
我们把它给追加到

01:12:34.200 --> 01:12:36.200
我们现有的一个表里面

01:12:36.200 --> 01:12:37.200
记住吗

01:12:37.200 --> 01:12:38.200
我们把它加入到

01:12:38.200 --> 01:12:39.200
我们大家collect里面

01:12:39.200 --> 01:12:41.200
但是这里面存储的呢

01:12:41.200 --> 01:12:44.200
它其实是我们的ID

01:12:44.200 --> 01:12:45.200
所以我们需要

01:12:45.200 --> 01:12:47.200
通过另一个方法来操作

01:12:47.200 --> 01:12:52.200
就是get topic from collector

01:12:52.200 --> 01:12:53.200
或许内容

01:12:53.200 --> 01:12:55.200
根据

01:12:55.200 --> 01:13:03.240
刚获得的中的ID

01:13:03.240 --> 01:13:06.620
你把这ID拿过来

01:13:06.620 --> 01:13:08.620
这个我们也可以不要

01:13:08.620 --> 01:13:09.620
拿过来以后的话呢

01:13:09.620 --> 01:13:11.620
那么我们对它进行循环

01:13:11.620 --> 01:13:13.620
每次取出一个ID

01:13:13.620 --> 01:13:14.620
取出ID以后的话呢

01:13:14.620 --> 01:13:16.620
我们就可以进行ID的

01:13:16.620 --> 01:13:18.620
数据库查找

01:13:18.620 --> 01:13:20.620
把这条记录拿出来以后

01:13:20.620 --> 01:13:22.620
然后我们把这条记录完整的

01:13:22.620 --> 01:13:24.620
把它contactor

01:13:24.620 --> 01:13:26.620
连接到我们的数据里面

01:13:26.620 --> 01:13:28.620
再把它存回我们的

01:13:28.620 --> 01:13:30.620
就是topic里面

01:13:30.620 --> 01:13:32.620
形成这样一个结构

01:13:32.620 --> 01:13:33.620
这样我们的数据就有了

01:13:33.620 --> 01:13:34.620
是吧

01:13:34.620 --> 01:13:35.620
这里面的结构

01:13:35.620 --> 01:13:36.620
还是比较多一点

01:13:36.620 --> 01:13:38.620
所以大家可以对这里面

01:13:38.620 --> 01:13:39.620
稍微的需要细化

01:13:39.620 --> 01:13:40.620
去了解一下

01:13:40.620 --> 01:13:41.620
我们休息一下

01:13:41.620 --> 01:13:43.620
到时候我们开始做页面部分

