WEBVTT

00:00.050 --> 00:02.570
好 我们继续讲解Tarot系列课程

00:02.570 --> 00:06.970
这些课呢 讲究一下 组建库中的一个Tarot地图组建

00:06.970 --> 00:11.770
Tarot地图组建呢 相对而言 比起我们的其他的一些

00:11.770 --> 00:16.130
我们的导航组建啊 表单组建啊

00:16.130 --> 00:19.650
相对它的内容呢 或者它的属性呢 比较多一点

00:19.650 --> 00:24.410
并且呢 有一些呢 我们说要支持我们的百度

00:24.410 --> 00:26.650
支付宝 微信等这样的

00:26.850 --> 00:30.610
同时 我们还要说明一下 就是对Map组建来

00:30.610 --> 00:32.970
Map的这样的一个操作来讲

00:32.970 --> 00:39.290
它呢 是不能去使用在我们的H5跟RM的版本上面

00:39.290 --> 00:41.330
好 所以呢 我们讲

00:41.330 --> 00:44.930
如果说 你现在最后要生成出来的是H5

00:44.930 --> 00:46.970
或者说是RM版本的话

00:46.970 --> 00:50.970
你是不可以去用我们的Map组建的

00:50.970 --> 00:51.970
这点你需要明确

00:51.970 --> 00:53.450
因为 为什么啊

00:53.450 --> 00:56.610
这点其实我这边给一个简单的一个逻辑

00:56.650 --> 00:58.850
就是 其实这个Map

00:58.850 --> 01:01.170
它不是我们所谓的

01:01.170 --> 01:03.130
就是它的一个特有功能

01:03.130 --> 01:06.850
或者是称之为它自己自带功能

01:06.850 --> 01:12.250
而是它要去调取它的附带的那个Apps的

01:12.250 --> 01:14.610
比如说 我们的微信小程序

01:14.610 --> 01:18.010
它要调取微信所能够有个地图功能

01:18.010 --> 01:19.650
那百对人百度地图功能

01:19.650 --> 01:20.890
周宝 周宝地图功能

01:20.890 --> 01:22.210
它要去完成这个

01:22.210 --> 01:24.090
但H5你调谁

01:24.130 --> 01:27.930
没有所谓的在线的一个H5的支付功能

01:27.930 --> 01:29.330
那个地图功能

01:29.330 --> 01:30.690
没有这个概念

01:30.690 --> 01:32.730
所以从这个逻辑来讲的话

01:32.730 --> 01:35.010
包括是那个React Native

01:35.010 --> 01:37.290
React本身自己也没有地图功能

01:37.290 --> 01:38.010
好吧 好

01:38.010 --> 01:39.330
那么这就说明一下

01:39.330 --> 01:41.010
这个在微信小程序

01:41.010 --> 01:43.930
特别是在Taro中的Map的一个特点

01:43.930 --> 01:46.650
第二 无论你用哪一种的Map写法

01:46.650 --> 01:49.090
你永远得知道它的经纬度

01:49.090 --> 01:50.650
因为Map本身实现

01:50.650 --> 01:53.170
是通过经纬度的方式来完成的

01:53.210 --> 01:53.850
好了

01:53.850 --> 01:56.890
我们开始写一下我们的Map程序

01:56.890 --> 02:00.130
并且我们也做一个简单的案例

02:00.130 --> 02:00.890
做一个小案例

02:00.890 --> 02:01.970
看一下

02:01.970 --> 02:05.850
首先我们依然到我们的Pader上面

02:05.850 --> 02:12.920
咱们建一个Map空间

02:12.920 --> 02:19.650
然后这边我们建立Map

02:19.650 --> 02:21.930
我们还是不需要你的样式

02:21.930 --> 02:23.930
然后我们把整个这个

02:23.930 --> 02:28.410
我们放在你现在的Pader里面

02:28.410 --> 02:29.490
我们放在Pader里面

02:29.490 --> 02:40.980
我们这边写上我们的Map Country

02:40.980 --> 02:47.490
Map Country

02:47.490 --> 02:47.810
好

02:47.810 --> 02:48.850
我们在这边

02:48.850 --> 02:50.930
我们开始对它进行

02:50.930 --> 02:52.850
首先第一个还是那回事

02:52.850 --> 02:56.890
我们把上面的两行倒入

02:56.890 --> 02:58.890
先引入 紧来

02:58.890 --> 03:00.210
你每一个页面

03:00.210 --> 03:02.330
无论是组件还是属于

03:02.330 --> 03:04.770
如果组件用到的是类组件

03:04.770 --> 03:08.810
你就必须用到的是我们的Taro下的Taro

03:08.810 --> 03:09.530
对吧

03:09.570 --> 03:12.530
如果你用到的是韩束组件的话

03:12.530 --> 03:15.330
那么一般我们也要倒入

03:15.330 --> 03:18.940
对吧

03:18.940 --> 03:19.740
Map

03:19.740 --> 03:22.500
我们就用Map

03:22.500 --> 03:23.980
那么后面我们要加的话

03:23.980 --> 03:25.340
我们再来

03:25.340 --> 03:31.460
这边我们写上Component

03:31.460 --> 03:34.900
然后Expert

03:34.900 --> 03:36.220
Default

03:36.220 --> 03:38.220
Class

03:38.220 --> 03:40.100
Map

03:40.100 --> 03:43.130
Country

03:43.130 --> 03:45.530
Extents

03:45.530 --> 03:52.960
Component

03:52.960 --> 03:55.840
Constractor

03:55.840 --> 04:01.610
Super

04:01.610 --> 04:05.180
Aggrements

04:05.180 --> 04:08.790
Random

04:08.790 --> 04:17.490
Return

04:17.490 --> 04:19.130
Map

04:19.130 --> 04:20.450
Country

04:20.450 --> 04:22.050
保存

04:22.050 --> 04:28.300
查一下页面

04:28.300 --> 04:30.140
来了Map Country

04:30.140 --> 04:31.620
接下去我们可以了

04:31.620 --> 04:32.500
View

04:32.500 --> 04:33.900
注册

04:33.900 --> 04:38.000
声明一下

04:38.000 --> 04:50.340
里面把Map打伤

04:50.340 --> 04:51.860
紧接着我们来

04:51.860 --> 04:55.060
那么首先我们Map本身自己

04:55.060 --> 04:58.140
我们去要用到一点点的

04:58.140 --> 04:59.340
经纬度的格式

04:59.340 --> 05:01.260
同时我们还要用到

05:01.260 --> 05:04.020
它本身所自带的一些的参数

05:04.020 --> 05:06.140
我们一个个来加一下

05:06.140 --> 05:08.460
在我们的正常的写法中

05:08.460 --> 05:09.540
我们应该是往下写

05:09.540 --> 05:11.220
但是我们为大家看得清

05:11.220 --> 05:13.780
所以我们把它放在下面来

05:13.780 --> 05:15.020
也就是换行的方式

05:15.020 --> 05:17.140
每一个属性一行

05:17.140 --> 05:19.060
首先我写上MyMap

05:19.060 --> 05:21.380
这是我的一个地图的ID

05:21.380 --> 05:22.500
首先写上

05:22.500 --> 05:24.580
第二个我们依然在里面

05:24.580 --> 05:26.380
我们由于只是订个高宽

05:26.380 --> 05:28.740
所以我们不去写我们的

05:28.740 --> 05:31.020
那个CSS格式了

05:31.020 --> 05:36.060
我们就在里面订一下

05:36.060 --> 05:37.500
第三个

05:37.500 --> 05:40.580
我们写上Lotitude

05:40.580 --> 05:42.740
这个是我们的什么

05:42.740 --> 05:45.420
这个是我们的一个精度

05:45.420 --> 05:46.740
我们对它来讲

05:46.740 --> 05:47.940
我们想采取的是

05:47.940 --> 05:50.020
从Static里面拿

05:50.020 --> 05:52.860
从Static里面拿出来

05:52.860 --> 05:53.820
当然现在还没有

05:53.820 --> 05:55.620
我们先把它写上

05:55.620 --> 05:59.780
再有Longitude

05:59.780 --> 06:02.820
然后这个是维度

06:02.820 --> 06:10.890
等于Stator里面的

06:10.890 --> 06:12.410
Longitude

06:12.410 --> 06:12.970
维度

06:12.970 --> 06:14.330
然后还有

06:14.330 --> 06:16.330
就是我们可以做标记

06:16.330 --> 06:16.970
就是地图上

06:16.970 --> 06:17.650
咱们经常

06:17.650 --> 06:19.210
比如说有一个小绿色的

06:19.210 --> 06:21.170
小蓝色的这种小标记

06:21.170 --> 06:23.250
我们可以拿这个Mark来做

06:23.250 --> 06:26.570
它依然使用我们在Staters里面

06:26.570 --> 06:31.930
定义的Marks

06:31.930 --> 06:34.010
以及我们上面

06:34.010 --> 06:38.500
我们还可以订一个Covers

06:38.500 --> 06:44.490
我们可以订一个Covers出来

06:44.490 --> 06:47.970
先写上Covers标记

06:47.970 --> 06:50.010
它也称之为覆盖标记

06:50.010 --> 06:51.770
那么这两个其实

06:51.770 --> 06:54.250
在用途上是可以等价的

06:54.250 --> 06:55.810
但是在官网上面

06:55.810 --> 06:58.170
就是微信的官方的要求的话

06:58.170 --> 07:01.210
那么这个你倒真的可以不写

07:01.210 --> 07:02.530
但是以Marks来写

07:02.530 --> 07:05.810
所以我们就符合官网写法

07:05.810 --> 07:07.210
就是直接用Marks来写

07:07.210 --> 07:08.370
这样相对而言

07:08.370 --> 07:10.650
大家应该看起来也会比较顺一点

07:10.650 --> 07:11.450
然后紧接着

07:11.450 --> 07:15.970
我们把这些内容直接在我们的Stator里面

07:15.970 --> 07:16.610
做一下

07:16.610 --> 07:20.280
把数据加上去

07:20.280 --> 07:22.720
我们把数据加上去

07:22.720 --> 07:28.790
先每一个都写出来

07:28.790 --> 07:30.190
这个待会

07:30.190 --> 07:33.470
我们加一个

07:33.470 --> 07:36.230
这个也待会

07:36.230 --> 07:38.630
然后我们在上面

07:38.630 --> 07:41.190
有个Marks

07:41.190 --> 07:43.910
我们有个Marks

07:43.910 --> 07:46.830
我们把Marks写出来

07:46.830 --> 07:48.830
我们上面去标注一个点

07:48.830 --> 07:50.070
由于它是Marks

07:50.070 --> 07:52.590
所以它应该给的是一个

07:52.590 --> 07:53.510
Jason格式

07:53.510 --> 07:55.670
在一个素组里面

07:55.670 --> 07:57.150
是这个方式

07:57.150 --> 07:58.910
那么这边给个坐标

07:58.910 --> 07:59.670
我们这样

07:59.670 --> 08:05.470
我们把腾讯微信的总部的那个坐标地址写上

08:05.470 --> 08:10.510
23.099994

08:10.510 --> 08:15.190
然后这个是113.324

08:15.190 --> 08:17.070
324520

08:17.070 --> 08:19.790
主要这个一定得写得准确

08:19.790 --> 08:21.750
因为你差一点点经维度的话

08:21.750 --> 08:23.510
那地址就差十万八千里了

08:23.510 --> 08:25.270
跑了特别远了

08:25.270 --> 08:26.950
你别13.14

08:26.950 --> 08:28.070
这个

08:28.070 --> 08:29.030
然后我们写上

08:29.030 --> 08:31.190
第一个我们标注的点

08:31.190 --> 08:32.750
起名id

08:32.750 --> 08:33.870
然后第二个

08:33.870 --> 08:35.030
Latitude

08:35.030 --> 08:37.550
然后我们加上它的一个坐标

08:37.550 --> 08:39.750
它的坐标也是一种部吧

08:39.750 --> 08:40.990
一个是地图

08:40.990 --> 08:42.510
所给你呈现的一个区域

08:42.510 --> 08:43.830
一个是标注

08:43.830 --> 08:45.470
所给你出现的这个区域

08:45.470 --> 08:46.950
我们把它也写上

08:46.950 --> 08:54.050
也是这个

08:54.050 --> 08:54.770
也是这个

08:54.770 --> 08:55.930
我们把它这个写上了

08:55.930 --> 08:56.610
好了

08:56.610 --> 08:57.690
那么这样的话

08:57.690 --> 08:58.890
我们就给出了

08:58.890 --> 08:59.250
一个纸

08:59.250 --> 08:59.650
两个纸

08:59.650 --> 09:00.810
三个纸

09:00.810 --> 09:01.610
然后同时

09:01.610 --> 09:03.170
我们有一个大小限定

09:03.170 --> 09:06.170
我们来看看页面吧

09:06.170 --> 09:07.650
是不是出来了

09:07.650 --> 09:10.530
首先我们中心位所定义的

09:11.410 --> 09:13.730
应该就是我们最上面

09:13.730 --> 09:15.490
大家所看到的

09:15.490 --> 09:17.170
这两个位置所出现的

09:17.170 --> 09:18.810
而这有一个图标

09:18.810 --> 09:19.970
怎么看到吗

09:19.970 --> 09:21.490
这个图标就是在这

09:21.490 --> 09:24.370
这个是腾讯微信总部的一个图标

09:24.370 --> 09:25.530
它代表的是这个位置

09:25.530 --> 09:28.250
所以它的话基本上这几个纸

09:28.250 --> 09:35.290
就能完成你现在的整个地图的操作了

09:35.290 --> 09:36.970
那么我们接下来

09:36.970 --> 09:40.450
我们去做几个能够动态

09:40.450 --> 09:43.690
来改变这张地图的一个按钮

09:43.690 --> 09:45.450
并且能够操作它一下

09:45.450 --> 09:47.250
它的属性的一些操作结构

09:47.250 --> 09:49.730
比如说我们会获取一下位置

09:49.730 --> 09:51.010
然后移动位置

09:51.010 --> 09:53.290
甚至是我们移动标注都可以

09:53.290 --> 09:54.490
比如说这个标注点

09:54.490 --> 09:56.330
我们怎么让它动起来

09:56.330 --> 09:57.850
这些我们说

09:57.850 --> 09:59.250
在之前的课程中

09:59.250 --> 10:00.330
我们是没有讲过的

10:00.330 --> 10:02.290
那么同时我们地图上面

10:02.290 --> 10:04.970
还可以给大家做一些动态的

10:04.970 --> 10:06.010
特别在Taro中

10:06.010 --> 10:09.770
怎么去运用这些属性和实践的写法

10:09.770 --> 10:25.090
我们来看一下

10:25.090 --> 10:30.740
我们首先做一个view

10:30.740 --> 10:32.820
我们写一个button

10:32.820 --> 10:35.060
button爆错

10:35.060 --> 10:42.060
没有声明

10:42.060 --> 10:44.340
然后写上

10:44.340 --> 10:49.620
按钮首先第一个叫做获取位置

10:49.620 --> 10:51.260
获取位置

10:51.260 --> 10:53.060
用onclick的方式

10:53.060 --> 10:56.340
来获取你当前所点击的一个事件

10:56.340 --> 11:01.020
我们叫做get center

11:01.020 --> 11:04.880
中心location

11:04.880 --> 11:07.720
获得中心位置

11:07.720 --> 11:15.500
我们把它写出来

11:15.500 --> 11:17.100
获取位置

11:17.100 --> 11:17.580
好

11:19.100 --> 11:20.020
紧接着

11:20.020 --> 11:21.140
我们再来写一个

11:21.140 --> 11:26.190
我们把按钮前写好button

11:29.940 --> 11:30.660
onclick

11:31.660 --> 11:33.820
这个我们做的是

11:33.820 --> 11:38.170
我们叫做移动位置

11:38.170 --> 11:39.130
叫做移动位置

11:39.130 --> 11:39.850
我们就写上

11:40.850 --> 11:58.730
当前的movie to location

11:58.730 --> 12:04.920
移动位置

12:04.920 --> 12:06.200
第三个按钮

12:06.200 --> 12:09.680
我们说移动标注

12:10.920 --> 12:12.840
我们不是把它点蓝色点

12:12.840 --> 12:14.400
点在了腾讯总部吗

12:14.400 --> 12:15.480
我们把它移动一下

12:15.480 --> 12:17.480
移到我们所需要看到的

12:17.480 --> 12:18.560
或者称之为

12:18.560 --> 12:24.540
我们想让它看到的一个位置

12:24.540 --> 12:28.820
单击变化

12:29.820 --> 12:31.340
translate

12:31.340 --> 12:34.150
是不是变化

12:34.150 --> 12:35.910
mark 标记

12:35.910 --> 12:46.630
移动标记的改变

12:46.630 --> 12:52.010
再来一个

12:52.770 --> 12:59.100
缩放视野的金维度

13:00.100 --> 13:02.140
就你现在看到的这个大小

13:02.140 --> 13:03.660
我们把它

13:03.660 --> 13:04.860
金维度缩放一下

13:04.860 --> 13:07.380
就比例尺放到一下

13:07.380 --> 13:08.300
这个也可以

13:08.300 --> 13:10.180
所以我们再写一个

13:10.260 --> 13:19.600
当前的includer points

13:19.600 --> 13:28.180
我们把这个写一下

13:28.180 --> 13:30.620
我们把下面的名称堆印一下

13:30.620 --> 13:31.300
这样的话

13:31.300 --> 13:33.580
我们注释就能很明确

13:33.580 --> 13:34.860
那个事件是哪一个

13:34.860 --> 13:38.440
对吧

13:38.440 --> 13:44.300
这是称之为移动标注

13:44.300 --> 13:44.940
好了

13:44.940 --> 13:46.140
那么这样的话

13:46.140 --> 13:49.660
我们就准备好了四个事件

13:49.660 --> 13:52.460
然后四个事件分别堆印到现在的

13:52.500 --> 13:56.340
我们的四个我们的按钮上面

13:56.340 --> 13:58.500
我们一个个来实现

13:58.500 --> 14:00.180
对于这个地图来讲

14:00.180 --> 14:01.180
它是两大功能

14:01.180 --> 14:02.220
第一个展现功能

14:02.220 --> 14:04.700
第二个数据获取和操作功能

14:04.700 --> 14:05.020
对吧

14:05.020 --> 14:05.940
这里面

14:05.940 --> 14:07.300
那么首先第一步

14:07.300 --> 14:08.660
我们还是一样

14:08.660 --> 14:10.580
先到我们的constructor里面

14:10.580 --> 14:13.140
因为你一旦要通过事件操作的话

14:13.140 --> 14:15.060
你一定得有一个什么

14:15.060 --> 14:18.460
事件的一个我们的上下文

14:18.460 --> 14:19.860
我们以前一直讲

14:19.860 --> 14:22.020
如果你组建内部操作

14:22.020 --> 14:24.180
那么你针对的是属性

14:24.180 --> 14:27.500
或者你组建本身上面有个被动事件

14:27.500 --> 14:30.740
还有一种是你没有和组建有关

14:30.740 --> 14:33.020
但是你要通过其他的一些事件

14:33.020 --> 14:35.740
来对组建有一些操作的话

14:35.740 --> 14:38.380
你先要拿到这个组建的一个上下文

14:38.380 --> 14:39.940
其他的对象

14:39.940 --> 14:41.420
那么这样才可以

14:41.420 --> 14:43.300
而拿他的对象的方式

14:43.300 --> 14:45.500
一般性都是由微信自动的

14:45.500 --> 14:47.940
或者自己完成创建

14:47.940 --> 14:48.860
创建方式

14:48.860 --> 14:51.860
由微信本身的WX对象

14:51.900 --> 14:55.730
用crate的方式创建

14:55.730 --> 14:56.770
用crate

14:56.770 --> 14:58.530
创建后面一个名称

14:58.530 --> 15:01.490
我们这里叫做map context

15:01.490 --> 15:02.290
然后

15:02.290 --> 15:04.250
后面这边我们要写上的是

15:04.250 --> 15:08.730
你现在的一个ID名

15:08.730 --> 15:12.890
myweb

15:12.890 --> 15:16.090
然后等于你下面所给出来的

15:16.090 --> 15:21.170
当前的map text

15:21.170 --> 15:23.490
给出map context

15:23.490 --> 15:24.330
这是属于

15:24.330 --> 15:27.210
我现在所要获得的已经获得的一个

15:27.210 --> 15:30.490
上下文能够在我的所有的事件中

15:30.490 --> 15:33.850
操作于myweb的一个对象

15:33.850 --> 15:36.490
我们一直称它为

15:36.490 --> 15:43.290
获取地图的上下文操作

15:43.290 --> 15:45.770
地图的对象

15:45.770 --> 15:49.650
或者称之为就是上下文

15:49.650 --> 15:51.330
这么说法

15:51.330 --> 15:53.890
紧接着我们回到我们现在的获取位置

15:53.890 --> 15:55.090
上面来

15:55.090 --> 15:56.930
我们所谓的获取位置

15:56.930 --> 15:59.210
其实我们就要调用

15:59.210 --> 16:03.090
现在的map context里面一个方法

16:03.090 --> 16:04.010
来

16:04.010 --> 16:09.290
当前的map context

16:09.290 --> 16:11.090
它里面有一个叫做get

16:11.090 --> 16:11.730
咱们看到吗

16:11.730 --> 16:12.890
这个有个提示

16:12.890 --> 16:14.850
get center location

16:14.850 --> 16:18.210
获取它当前中心点的一个位置

16:18.210 --> 16:19.130
然后

16:19.130 --> 16:22.730
中心点位置其实就是我额外要定义的

16:22.730 --> 16:24.570
就是我在static里面的这个

16:24.570 --> 16:26.890
它其实就是矛准中心点

16:26.890 --> 16:29.850
然后再给了一个默认的缩放比例

16:29.850 --> 16:34.600
就呈现出这张地图了

16:34.600 --> 16:38.660
success

16:38.660 --> 16:41.820
然后我们后面可以获取它的值

16:41.820 --> 16:47.060
我们再打印一下

16:47.060 --> 16:48.580
longitude

16:48.580 --> 17:00.300
is.latitude

17:00.300 --> 17:02.060
scanio

17:02.060 --> 17:03.980
第一个点下去

17:03.980 --> 17:05.100
得到了

17:05.140 --> 17:07.300
得到了它的两个点作标

17:07.300 --> 17:08.660
对吧

17:08.660 --> 17:12.060
你说那老师我现在移动一下能不能做到

17:12.060 --> 17:13.420
得到了吧

17:13.420 --> 17:14.780
是不是也得到了

17:14.780 --> 17:18.180
所以我们现在的整个这个操作

17:18.180 --> 17:22.020
它不是针对于我现在刚起始点上的

17:22.020 --> 17:24.260
而是你在拖动过程中

17:24.260 --> 17:26.780
你所能看到中心点的位置

17:26.780 --> 17:28.140
它这是可以得到的

17:28.140 --> 17:28.940
对吧

17:28.940 --> 17:31.140
这时候你滚轴滚动鼠标

17:31.140 --> 17:33.020
它其实是一种缩放

17:33.020 --> 17:33.460
缩放

17:33.460 --> 17:34.420
我把它移走

17:34.420 --> 17:35.100
对吧

17:35.100 --> 17:37.140
移到了这

17:37.140 --> 17:39.740
这是不是就后面的手指全都变了

17:39.740 --> 17:40.140
ok

17:40.140 --> 17:41.340
记住第一点

17:41.340 --> 17:42.500
它是获取

17:42.500 --> 17:43.260
我们写一下

17:43.260 --> 17:46.780
获取当前显示的

17:46.780 --> 17:50.660
并不是我们初始化的

17:50.660 --> 17:53.140
获取地图

17:53.140 --> 17:57.060
当前显示的

17:57.060 --> 17:58.500
中心点的

17:58.500 --> 18:01.640
左标

18:01.640 --> 18:06.500
可拖动

18:06.500 --> 18:09.020
可拖动地图

18:09.020 --> 18:10.380
这是第一概念

18:10.500 --> 18:11.940
我们不但是要知道怎么拿

18:11.940 --> 18:14.420
而且知道它是一个什么样的东西

18:14.420 --> 18:15.060
第二点

18:15.060 --> 18:16.100
我们来做

18:16.100 --> 18:18.260
我们叫做移动

18:18.260 --> 18:19.100
我们看一下

18:19.100 --> 18:20.820
我们主要是什么呢

18:20.820 --> 18:23.300
移动位置

18:23.300 --> 18:27.660
我们使用movie to location

18:27.660 --> 18:32.380
我们在这边来移动位置

18:32.380 --> 18:37.500
在它本身的当前的上下文对象里面

18:37.500 --> 18:39.220
它也有这样的一个操作

18:39.220 --> 18:39.940
我们来看一下

18:39.940 --> 18:40.900
这个点

18:41.860 --> 18:43.460
np contestor

18:43.460 --> 18:44.420
点

18:44.420 --> 18:47.460
它有一个movie to location

18:47.460 --> 18:51.140
它是去到你当前所在的位置

18:51.140 --> 18:53.540
去到你当前所在的位置

18:53.540 --> 18:55.140
它是这样一个做法

18:55.140 --> 18:55.660
但是呢

18:55.660 --> 18:56.900
这个做法有一点

18:56.900 --> 18:58.380
它需要去获取

18:58.380 --> 18:59.540
它要有权限

18:59.540 --> 19:02.380
获取你现在所在的城市位

19:02.380 --> 19:05.380
城市的位置的权限

19:05.380 --> 19:06.780
获取城市的一个权限

19:06.780 --> 19:07.860
如果你没有的话

19:07.860 --> 19:08.780
那它获取不到

19:08.780 --> 19:09.580
第二

19:09.580 --> 19:12.300
即使你获取到了你现在的权限

19:12.300 --> 19:15.500
但是你所在城市非常偏

19:15.500 --> 19:17.540
在地图上是基本

19:17.540 --> 19:19.020
就是说是太小了

19:19.020 --> 19:20.540
所以它也获取不到

19:20.540 --> 19:24.340
会有这样的一个不可控性存在

19:24.340 --> 19:25.860
那我们可以看一下

19:25.860 --> 19:28.140
那么你怎么样知道它能不能获取到呢

19:28.140 --> 19:29.820
那么或者是否正常

19:29.820 --> 19:32.100
在正常的尝试获取呢

19:32.100 --> 19:33.060
首先很正常

19:33.060 --> 19:33.860
我们显示出来

19:33.860 --> 19:36.980
区域它是一个我们之前定义好的位置

19:36.980 --> 19:38.420
当你点移动位置的时候

19:38.420 --> 19:39.700
我们可以看到这个位置

19:39.700 --> 19:40.780
我还没点啊

19:40.780 --> 19:41.820
当你点移动位置的时候

19:41.820 --> 19:42.780
我们看到上面

19:42.780 --> 19:44.540
它会有一个箭头出现

19:44.540 --> 19:47.340
这个箭头就是它在获取你的位置

19:47.340 --> 19:49.940
如果你的位置已经是在大城市

19:49.940 --> 19:53.180
或者是说你是一个比较容易找到的

19:53.180 --> 19:56.260
那么它立马会给到你当前位置的一个信息

19:57.940 --> 20:00.580
但是如果说你的位置是属于比较偏

20:00.580 --> 20:03.580
或者你现在当前没有办法直接获取到

20:03.580 --> 20:06.780
你现在的这样的一个位置的时候

20:06.780 --> 20:07.940
那么它页面是不动的

20:07.940 --> 20:09.820
你看看到吗

20:09.820 --> 20:11.380
它在获取我的位置

20:11.380 --> 20:12.940
但是我现在呢

20:12.940 --> 20:15.500
在一个防空洞里面

20:15.500 --> 20:16.900
所以它没有办法获取到

20:16.900 --> 20:23.260
所以它就不会有这样的一个所谓的显示

20:23.260 --> 20:24.180
正常的情况下

20:24.180 --> 20:26.220
应该是它的地图会跳转到

20:26.220 --> 20:26.980
比如说你在北京

20:26.980 --> 20:27.860
你在哈尔滨

20:27.860 --> 20:32.020
你可以直接跳转到你现在所要的这个位置

20:32.020 --> 20:32.460
知道吧

20:32.460 --> 20:33.540
这个逻辑

20:33.540 --> 20:35.620
这是移动位置上面的一个功能

20:35.620 --> 20:37.380
那大家可以拿着这个去尝试

20:39.180 --> 20:40.220
紧接着

20:40.220 --> 20:42.100
我们来看一下第三个

20:42.100 --> 20:45.260
第三个是translator mark

20:45.260 --> 20:46.860
translator mark是指

20:46.860 --> 20:49.020
我们现在本身的界面上面

20:49.020 --> 20:53.100
我们已经有一个所谓的mark标记了

20:53.100 --> 20:55.700
我们想让这个标记移动一下

20:55.700 --> 20:58.340
让这个标记去移动一下

20:58.340 --> 20:59.820
那这该怎么做呢

20:59.820 --> 21:01.900
那大家来看我现在做法

21:01.900 --> 21:03.980
那么移动这个标记呢

21:03.980 --> 21:04.740
意味着

21:04.740 --> 21:07.180
你一定要告诉这个标记

21:07.180 --> 21:09.060
你移到哪里去

21:09.060 --> 21:10.940
以多少时间

21:10.940 --> 21:15.620
是否自动完成所谓的移动的过程

21:15.620 --> 21:18.180
这些都是我们自己可以设定的

21:18.180 --> 21:21.820
所以我们继续借助于mapcontext

21:21.820 --> 21:22.460
来

21:22.460 --> 21:24.900
他有一个translator mark

21:24.900 --> 21:26.540
甚至为叫移动

21:26.540 --> 21:28.340
然后在这个移动上面的话呢

21:28.340 --> 21:30.340
我们这边给几个参数

21:30.340 --> 21:31.420
第一的话呢

21:31.420 --> 21:33.540
我们给一个标记点的id

21:33.540 --> 21:38.020
因为标记点本身都应该有一个id来绑定

21:38.020 --> 21:38.500
所以呢

21:38.500 --> 21:40.220
我们给一个e

21:40.220 --> 21:42.500
第二个alturator

21:43.500 --> 21:44.500
大写了

21:44.500 --> 21:49.900
alturator

21:49.900 --> 21:51.020
我们把它称之为

21:51.020 --> 21:55.260
它是否会自行的进行运动旋转这东西

21:55.260 --> 21:56.460
然后duration

21:58.260 --> 22:00.620
duration我们给的是1000

22:00.620 --> 22:01.580
一秒钟时间

22:02.580 --> 22:03.580
那么

22:03.580 --> 22:10.230
destination

22:10.230 --> 22:11.230
destination

22:13.230 --> 22:15.230
我们给的是一个

22:15.230 --> 22:18.230
你要移动到的目标地址

22:18.230 --> 22:19.230
我们离它近一点啊

22:19.230 --> 22:21.230
我们待会刚才是

22:21.230 --> 22:23.230
不是移动了好几个吗

22:23.230 --> 22:25.230
我们随便给一个离它近一点

22:25.230 --> 22:28.230
10229

22:28.230 --> 22:33.850
longitude

22:33.850 --> 22:36.850
然后写的是113.334

22:36.850 --> 22:38.850
5211

22:38.850 --> 22:39.850
反正你就到旁边

22:39.850 --> 22:41.850
地图你去拉一下

22:41.850 --> 22:43.850
拉在它的旁边这个位置上面

22:43.850 --> 22:45.850
你自个给一个点

22:45.850 --> 22:47.850
然后获取到它两个坐标值

22:47.850 --> 22:52.460
把它放在这

22:52.460 --> 22:53.460
好

22:53.460 --> 22:54.460
紧接着

22:54.460 --> 22:56.460
这是它的第一参数

22:56.460 --> 22:58.460
这是它的第一参数

22:58.460 --> 23:00.460
当它整个动画

23:00.460 --> 23:01.460
也就是说

23:01.460 --> 23:03.460
移动全部完成以后

23:03.460 --> 23:04.460
记着

23:04.460 --> 23:07.460
它的全部动画移动完成以后

23:07.460 --> 23:09.460
它有一个事件

23:09.460 --> 23:12.840
它有一个

23:12.840 --> 23:14.840
animation end的事件

23:14.840 --> 23:15.840
这是指

23:15.840 --> 23:17.840
全部

23:17.840 --> 23:19.840
动画

23:19.840 --> 23:20.840
完成后的

23:20.840 --> 23:21.840
操作

23:21.840 --> 23:23.840
那么我们只要打印一下

23:23.840 --> 23:25.840
动画已完成

23:25.840 --> 23:26.840
动画已完成

23:26.840 --> 23:28.840
给出这样一个词

23:28.840 --> 23:34.390
紧接着我们来

23:34.390 --> 23:37.390
我们看一下页面的效果

23:37.390 --> 23:39.390
我们点击一下

23:39.390 --> 23:44.620
我们来看一下啊

23:44.620 --> 23:46.620
首先这个操作过程中

23:46.620 --> 23:48.620
我们

23:48.620 --> 23:50.620
绑定了一个叫translator

23:50.620 --> 23:52.620
然后它里面down translator

23:52.620 --> 23:53.620
OK

23:53.620 --> 23:58.090
我们过一下代码

23:58.090 --> 24:00.090
旅一下代码

24:00.090 --> 24:02.090
这边多了一个s mark id

24:02.090 --> 24:04.090
如果你多s的话

24:04.090 --> 24:06.090
我们其实从界面上是能够看到的

24:06.090 --> 24:08.090
一旦你错了这样的一些东西的话

24:08.090 --> 24:09.090
没有关系

24:09.090 --> 24:11.090
那么你界面看到了就可以了

24:11.090 --> 24:12.090
你比如说我们这边做完

24:12.090 --> 24:13.090
我们点一次移动

24:13.090 --> 24:14.090
你发现吗

24:14.090 --> 24:15.090
这边有个景区

24:15.090 --> 24:17.090
叫做map context translator mark

24:17.090 --> 24:19.090
require mark id

24:19.090 --> 24:20.090
它问你要个mark id

24:20.090 --> 24:21.090
但问题是我们不是给了吗

24:21.090 --> 24:22.090
一看

24:22.090 --> 24:23.090
s多了一个

24:23.090 --> 24:24.090
查掉以后

24:24.090 --> 24:26.090
我们来看整个的效果

24:26.090 --> 24:28.090
现在我们打开以后

24:28.090 --> 24:29.090
它已经

24:29.090 --> 24:31.090
来到了我们当前的初始界面

24:31.090 --> 24:33.090
我们把界面放大一点

24:33.090 --> 24:35.090
然后我们点击一下移动标注

24:35.090 --> 24:37.090
是不是动了

24:37.090 --> 24:39.090
动到最后停下来了

24:39.090 --> 24:40.090
动画已完成

24:40.090 --> 24:41.090
再来看一下

24:41.090 --> 24:43.090
当animate动画完成了

24:43.090 --> 24:45.090
当animate动画完成以后

24:45.090 --> 24:47.090
最后才会掉去这个end的事件

24:49.090 --> 24:50.090
点击

24:50.090 --> 24:53.590
地图由于尺寸过小

24:53.590 --> 24:54.590
是不是看不到了

24:54.590 --> 24:55.590
所以的话

24:55.590 --> 24:57.590
我们可以到时候把它放大

24:57.590 --> 24:58.590
因为一

24:58.590 --> 24:59.590
我的时间要求

24:59.590 --> 25:00.590
从这儿到这儿花1秒钟

25:00.590 --> 25:01.590
二的话

25:01.590 --> 25:02.590
坐标我也定住了

25:02.590 --> 25:04.590
所以整个这个过程中

25:04.590 --> 25:06.590
我们就不会在以视野

25:06.590 --> 25:08.590
作为它现在的一个

25:08.590 --> 25:10.590
收放比例的显示了

25:10.590 --> 25:11.590
就像我现在一样

25:11.590 --> 25:13.590
我必须要通过手动的方式来做

25:13.590 --> 25:14.590
当然我们来调这部分

25:14.590 --> 25:15.590
当然我们看到了

25:15.590 --> 25:17.590
animation的动画完成

25:17.590 --> 25:18.590
对吧

25:18.590 --> 25:19.590
animation的end完成以后

25:19.590 --> 25:20.590
会有这样一个提示

25:20.590 --> 25:21.590
ok

25:21.590 --> 25:23.590
这是我们刚刚看到的

25:23.590 --> 25:25.590
map操作里面几个点

25:25.590 --> 25:26.590
都是比较

25:26.590 --> 25:27.590
重要的一个

25:27.590 --> 25:29.590
通过我们的这部分来完成

25:29.590 --> 25:30.590
再有一个

25:30.590 --> 25:32.590
就是视野的经纬度

25:32.590 --> 25:34.590
视野的经纬度

25:34.590 --> 25:35.590
它其实或者说

25:35.590 --> 25:38.590
它的一个大小宽度的话

25:38.590 --> 25:39.590
我们其实是在这儿

25:39.590 --> 25:41.590
可以额外的再调一把

25:41.590 --> 25:45.670
我们来看一下

25:45.670 --> 25:47.670
首先

25:47.670 --> 25:50.670
当前的map contest

25:50.670 --> 25:52.670
拿出来

25:52.670 --> 25:54.670
include points

25:54.670 --> 25:59.100
然后

25:59.100 --> 26:01.100
这个是我们现在

26:01.100 --> 26:03.100
要关注到的就是里边

26:03.100 --> 26:04.100
padding

26:04.100 --> 26:06.100
先设置它的一个点位

26:06.100 --> 26:08.100
我们设置两个点位

26:08.100 --> 26:11.100
点位其实就是points

26:11.100 --> 26:13.100
我想在里面

26:13.100 --> 26:15.100
除了我刚才前面所谓的

26:15.100 --> 26:17.100
人为加了一个

26:17.100 --> 26:19.100
我们这样的一个初始化点以外

26:19.100 --> 26:21.100
初始化一个max标记以外

26:21.100 --> 26:23.100
我们还可以在码中

26:23.100 --> 26:25.100
再来给它完成

26:25.100 --> 26:27.100
加了一个点位的添加

26:27.100 --> 26:29.100
include points

26:29.100 --> 26:33.750
然后此时我们加出来

26:33.750 --> 26:35.750
第一个

26:35.750 --> 26:37.750
latitude

26:37.750 --> 26:39.750
都是在深圳

26:39.750 --> 26:45.620
longitude

26:45.620 --> 26:50.620
13.3345211

26:50.620 --> 26:52.620
给出这样一个值

26:52.620 --> 26:56.770
dou

26:56.770 --> 27:00.100
第二个

27:00.100 --> 27:01.100
我们把这个改一下

27:01.100 --> 27:04.100
00229

27:04.100 --> 27:08.630
这个也改一下

27:08.630 --> 27:11.630
3345211

27:11.630 --> 27:13.630
它属于同一个

27:13.630 --> 27:15.630
longitude上面

27:15.630 --> 27:18.630
points 给出来了

27:18.630 --> 27:20.630
points 给出来以后的话

27:20.630 --> 27:22.630
那么我们就可以直接利用

27:22.630 --> 27:23.630
points

27:23.630 --> 27:25.630
在我们现在的整个

27:25.630 --> 27:27.630
地图上面

27:27.630 --> 27:29.630
去加两个点

27:29.630 --> 27:31.630
去加两个点出来

27:31.630 --> 27:33.630
我们打开看一下

27:33.630 --> 27:35.630
现在的话

27:35.630 --> 27:39.840
我们来看一下

27:39.840 --> 27:43.730
这个点位它在哪里

27:43.730 --> 27:45.730
这个点位的话

27:45.730 --> 27:47.730
我们需要的是

27:47.730 --> 27:49.730
我们把它的include points

27:49.730 --> 27:51.730
我们设置两个点

27:51.730 --> 27:52.730
这两个点

27:52.730 --> 27:54.730
我们现在在屏幕上面

27:54.730 --> 27:55.730
你现在是看不到

27:55.730 --> 27:57.730
它的原因是什么呢

27:57.730 --> 27:58.730
原因是

27:58.730 --> 27:59.730
这两个点

27:59.730 --> 28:00.730
它其实最终的目的

28:00.730 --> 28:02.730
它是可以做一个叫include point

28:02.730 --> 28:04.730
导入两个点

28:04.730 --> 28:05.730
做标

28:05.730 --> 28:06.730
但是这两个点

28:06.730 --> 28:08.730
其实它要通过我们的一个叫做

28:08.730 --> 28:10.730
这个不也没有呢

28:10.730 --> 28:12.730
导入我们的cover来完成

28:12.730 --> 28:14.730
它对cover进行一个操作

28:14.730 --> 28:15.730
covers

28:15.730 --> 28:16.730
所以呢

28:16.730 --> 28:17.730
我们需要把covers的这个值给

28:17.730 --> 28:18.730
设置出来

28:18.730 --> 28:19.730
我们这样

28:19.730 --> 28:21.730
我们把covers的值

28:21.730 --> 28:25.040
在我们的state

28:25.040 --> 28:26.040
里面

28:26.040 --> 28:27.040
咱们把它给

28:27.040 --> 28:28.040
设置出来

28:28.040 --> 28:30.040
covers的观望说法是

28:30.040 --> 28:31.040
官方的说法是

28:31.040 --> 28:33.040
这个词尽量不用了

28:33.040 --> 28:34.040
所以我们这边演示一下

28:34.040 --> 28:35.040
但不代表着

28:35.040 --> 28:36.040
我们之后会用

28:36.040 --> 28:37.040
因为它现在

28:37.040 --> 28:40.040
会把这个词已经取消了

28:40.040 --> 28:41.040
covers

28:41.040 --> 28:42.040
让你知道一下吧

28:42.040 --> 28:48.100
它会覆盖在

28:48.100 --> 28:49.100
其他的一个

28:49.100 --> 28:51.100
绿色的标记

28:51.100 --> 28:57.360
letitude

28:57.360 --> 28:59.360
二三点零

28:59.360 --> 29:02.930
九九九九四

29:02.930 --> 29:04.930
longitude

29:04.930 --> 29:06.930
一一三

29:06.930 --> 29:07.930
点

29:07.930 --> 29:08.930
三四四

29:08.930 --> 29:10.930
五二零

29:10.930 --> 29:11.930
然后同时

29:11.930 --> 29:12.930
它给一个

29:12.930 --> 29:17.970
imager

29:17.970 --> 29:19.970
给一个图片出来

29:19.970 --> 29:20.970
比如说

29:20.970 --> 29:21.970
它给一个图片

29:21.970 --> 29:22.970
我们取立

29:22.970 --> 29:23.970
这样一个图片

29:23.970 --> 29:24.970
它可以把这个图片

29:24.970 --> 29:26.970
以一个绿色小标记的方式

29:26.970 --> 29:27.970
现在我没这个图片

29:27.970 --> 29:29.970
显示在比如说这上面

29:29.970 --> 29:30.970
但是问题是什么

29:30.970 --> 29:31.970
就是说你

29:31.970 --> 29:33.970
原本的逻辑是

29:33.970 --> 29:35.970
我们可以把你

29:35.970 --> 29:36.970
现在这个显示内容

29:36.970 --> 29:38.970
点击我们最后一个按钮

29:38.970 --> 29:40.970
我们可以让它把里面

29:40.970 --> 29:42.970
一个坐标替换成这个

29:42.970 --> 29:43.970
但是问题是

29:43.970 --> 29:45.970
这块内容

29:45.970 --> 29:47.970
本身在我们微信上面

29:47.970 --> 29:48.970
它已经现在

29:48.970 --> 29:50.970
就在最近两个版本里面

29:50.970 --> 29:51.970
进行了取消

29:51.970 --> 29:52.970
所以我们

29:52.970 --> 29:54.970
就可不再用这个

29:54.970 --> 29:56.970
叫做included points

29:56.970 --> 29:57.970
所以这个

29:57.970 --> 29:58.970
我的助销掉它

29:58.970 --> 29:59.970
知道一下

29:59.970 --> 30:01.970
以前有一个叫included points

30:01.970 --> 30:03.970
视野的缩放

30:03.970 --> 30:05.970
你可以用它来缩放视野

30:05.970 --> 30:06.970
没关系

30:06.970 --> 30:08.970
但你要替换点

30:08.970 --> 30:09.970
那这事做不到

30:09.970 --> 30:11.970
这个是原因很简单

30:11.970 --> 30:13.970
微信本身在不再维护这个界面

30:13.970 --> 30:15.970
或者说不再维护这样的一个

30:15.970 --> 30:16.970
功能了

30:16.970 --> 30:20.920
这个咱们知道一下

30:20.920 --> 30:22.920
所以对于我们不再维护

30:22.920 --> 30:23.920
不再执行的内容

30:23.920 --> 30:26.920
我们这边就不再去多做它了

30:26.920 --> 30:27.920
OK

30:27.920 --> 30:29.920
那么这个其实就是地图

30:29.920 --> 30:30.920
地图相对而言

30:30.920 --> 30:32.920
功能还是比较多

30:32.920 --> 30:34.920
包括它的一个操作

30:34.920 --> 30:36.920
上面东西还比较多

30:36.920 --> 30:39.920
那么包括我们还有好多没讲的

30:39.920 --> 30:42.920
没有讲的很多都属于微信端的

30:42.920 --> 30:44.920
那么这个在原生格式里面

30:44.920 --> 30:45.920
我们就讲过

30:45.920 --> 30:46.920
比如说我们在标记

30:46.920 --> 30:47.920
除了一个点

30:47.920 --> 30:48.920
还能标记两个点

30:48.920 --> 30:49.920
那么还能画条线

30:49.920 --> 30:50.920
类似于这样的

30:50.920 --> 30:52.920
然后在上面还能画个圆

30:52.920 --> 30:54.920
这样的格式都有

30:54.920 --> 30:55.920
OK吧

30:55.920 --> 30:56.920
那么地图上画线

30:56.920 --> 30:57.920
画圆的事情

30:57.920 --> 30:58.920
那么我们大家可以参考

30:58.920 --> 31:00.920
微信的那个文档

31:00.920 --> 31:02.920
那么这就是第一部分

31:02.920 --> 31:04.920
就是我们在tarrow中

31:04.920 --> 31:06.920
你怎么样去完成

31:06.920 --> 31:07.920
一个map组件的使用

31:07.920 --> 31:09.920
并且调用方式

31:09.920 --> 31:10.920
和调用方法

31:10.920 --> 31:11.920
和它的属性写法

31:11.920 --> 31:13.920
我这里面已经全写上了

31:13.920 --> 31:14.920
OK

31:14.920 --> 31:15.920
那我们接着说

31:15.920 --> 31:17.920
第二个

31:17.920 --> 31:19.920
我们地图的这个

31:19.920 --> 31:20.920
那么就讲到这儿

31:20.920 --> 31:21.920
我们后面的话

31:21.920 --> 31:22.920
我们会讲一个画布

31:22.920 --> 31:23.920
好

31:23.920 --> 31:24.920
那我们地图的这个事情

31:24.920 --> 31:25.920
就先讲到这儿了

