WEBVTT

00:00.050 --> 00:04.450
好 我们继续讲解我们的Tarot的我们的希腊课程

00:04.450 --> 00:06.650
这些课继续讲解我们的社交圈

00:07.450 --> 00:11.450
社交圈我们已经完成了把这部分的内容

00:11.450 --> 00:14.250
添加到我们的数据库了

00:14.250 --> 00:16.650
但是这里面有一个用户数据

00:16.650 --> 00:18.450
这边是没有得到

00:18.450 --> 00:22.050
所以我们来做一部用户数据的获取

00:22.650 --> 00:28.450
首先第一步进入到我们的当前的社交圈发布页面

00:28.850 --> 00:31.650
那么用户数据的获取

00:31.650 --> 00:35.450
其实它应该是进入这页面的时候

00:35.450 --> 00:41.390
我们就应该有这方面的一个获取权限

00:41.390 --> 00:44.390
所以整个操作应该是放在哪儿做呢

00:45.590 --> 00:48.820
生命周期里面

00:48.820 --> 00:50.420
应该放在生命周期里面做

00:52.220 --> 00:53.020
我们来写一下

00:54.220 --> 00:55.620
我们写一方法出来

00:55.620 --> 01:04.540
点4点用户的登录信息

01:04.540 --> 01:09.140
在这里写

01:09.140 --> 01:14.910
我们去拿到用户的登录信息

01:14.910 --> 01:30.600
用户 投降 获取权限

01:30.600 --> 01:42.820
terror get setting 获取数据

01:42.820 --> 01:49.010
success我们拿

01:49.010 --> 01:49.610
if

01:50.910 --> 01:51.710
我们来判断一下

01:51.710 --> 01:56.720
首先我们看一下这边拿到的是什么数据

01:56.720 --> 02:05.050
我们是写上一个标题

02:05.050 --> 02:05.950
logging

02:07.050 --> 02:10.780
res

02:10.780 --> 02:14.970
请接着来

02:14.970 --> 02:16.270
刷新一下

02:16.270 --> 02:21.190
看一下这边

02:21.190 --> 02:22.390
我们可以判断一下

02:22.390 --> 02:23.690
现在我这边

02:23.690 --> 02:24.990
你说拿到的

02:24.990 --> 02:26.690
这里面有个scolar

02:26.690 --> 02:28.090
use info

02:28.090 --> 02:30.790
代表当前是否有权限可以拿

02:30.790 --> 02:32.790
use info的数据

02:32.790 --> 02:34.690
如果这个值是反为true

02:34.690 --> 02:36.890
表示用户已经授权

02:36.890 --> 02:38.090
理解吧

02:38.090 --> 02:39.990
就是我刚才已经授过权

02:39.990 --> 02:41.990
在这儿 授权清除

02:41.990 --> 02:51.450
再来看一下 刷一下

02:51.450 --> 02:51.850
打开

02:53.350 --> 02:54.250
看到吗

02:54.250 --> 02:57.050
这里面我们是没有任何东西的

02:57.150 --> 02:58.750
代表的是用户没有授权

02:58.750 --> 02:59.150
对吧

02:59.150 --> 03:00.950
我像我这边我授权了

03:00.950 --> 03:02.550
那这样的话就可以了

03:02.550 --> 03:03.050
ok

03:03.050 --> 03:04.350
那我们这边的操作

03:04.350 --> 03:08.150
是判断用户是否已经授权的一个格式

03:08.150 --> 03:09.550
如果

03:09.550 --> 03:12.250
res点

03:12.250 --> 03:20.690
all sir setting

03:20.690 --> 03:22.490
scoper点

03:22.490 --> 03:26.400
use info

03:26.400 --> 03:28.000
判断一下用户是否

03:28.000 --> 03:31.000
这个叫做all sir setting

03:31.000 --> 03:33.300
use info是否存在

03:33.300 --> 03:41.050
如果存在就是已经授权

03:41.050 --> 03:42.450
可以直接

03:42.450 --> 03:43.850
咱们去调用

03:43.850 --> 03:45.550
叫做get

03:45.550 --> 03:47.850
use info

03:47.850 --> 03:50.050
获取

03:50.050 --> 03:56.320
投向和逆称

03:56.320 --> 03:57.620
tarrow

03:57.620 --> 03:58.920
get

03:58.920 --> 04:13.760
use info

04:13.760 --> 04:19.280
我们把这部分

04:19.280 --> 04:27.950
获取一下

04:27.950 --> 04:29.350
咱们可以把这个RES

04:29.350 --> 04:32.250
这个RES的话拿出来看一下

04:32.250 --> 04:33.750
当然我们可以起其他名称

04:33.750 --> 04:35.850
它和上面这个会有冲

04:35.850 --> 04:40.980
所以我们起成

04:40.980 --> 04:59.220
use RES

04:59.220 --> 05:00.120
咱们看

05:00.120 --> 05:00.820
是不是

05:00.820 --> 05:04.020
它得到了你个人的很多的信息

05:04.020 --> 05:05.420
在我们的

05:05.420 --> 05:06.720
这里面对不对

05:06.720 --> 05:09.320
逆称啊名称啊这些在这里面有

05:09.320 --> 05:11.920
包括use info里面

05:11.920 --> 05:12.420
在这里面

05:12.420 --> 05:14.820
use info里面也会得到的

05:14.820 --> 05:15.420
ok

05:15.420 --> 05:17.820
那这样的话我们就可以直接在这边

05:17.820 --> 05:22.920
把它存储到

05:22.920 --> 05:25.530
存储到

05:25.530 --> 05:36.450
我们的data info里面去了

05:36.450 --> 05:37.450
data info

05:37.450 --> 05:38.850
data use

05:38.850 --> 05:41.290
对

05:41.290 --> 05:45.980
我们写出use RES

05:45.980 --> 05:47.580
data

05:47.580 --> 05:50.840
use info

05:50.840 --> 05:52.840
这样的

05:52.840 --> 05:55.540
那么此时我们再来存一个数据

05:55.540 --> 05:57.640
此时应该我们这个数据里面已经

05:57.640 --> 06:00.240
包含了use用户了

06:00.240 --> 06:14.760
我们把这个给隐藏了

06:14.760 --> 06:17.950
我的

06:17.950 --> 06:21.520
我发布的

06:21.520 --> 06:26.490
内容

06:26.490 --> 06:28.990
选择图片

06:28.990 --> 06:31.920
选两张

06:31.920 --> 06:33.220
发布社交圈

06:33.220 --> 06:34.820
新纪录添加成功

06:34.820 --> 06:37.720
去数据看看一下

06:37.720 --> 06:38.920
我发布的内容

06:38.920 --> 06:39.920
两张

06:39.920 --> 06:40.820
看use里面

06:40.820 --> 06:41.620
是不是两张

06:41.620 --> 06:42.120
use里面

06:42.120 --> 06:45.120
是不是这个数据全有了

06:45.120 --> 06:45.920
ok吧

06:45.920 --> 06:46.420
好

06:46.420 --> 06:47.720
这样的话我们代表着

06:47.720 --> 06:51.320
我们至少来说发布的这个动作就完成了

06:51.320 --> 06:53.720
把我的所有数据全部进去了

06:53.720 --> 06:54.620
对吧

06:54.620 --> 06:55.620
然后此时呢

06:55.620 --> 06:57.420
我们将做的是第二件事

06:57.420 --> 07:00.320
那就是广场

07:00.320 --> 07:01.820
广场需要把我的

07:01.820 --> 07:03.120
所有的数据

07:03.120 --> 07:06.120
在这里面全部给它呈现出来

07:06.120 --> 07:07.620
是这个意图

07:07.620 --> 07:09.620
那我们来看

07:09.620 --> 07:10.520
关闭

07:10.520 --> 07:11.820
打开我们的

07:11.820 --> 07:17.210
Home

07:17.210 --> 07:19.210
我们跑到我们现在代码中

07:19.210 --> 07:20.410
我们准备来

07:20.410 --> 07:21.710
首先第一步

07:21.710 --> 07:24.010
需要在我们的手页上面

07:24.010 --> 07:26.510
我们去用我们的

07:26.510 --> 07:27.610
数据库操作

07:27.610 --> 07:32.650
所以我们再对顶部

07:32.650 --> 07:34.750
Constor

07:34.750 --> 07:35.950
App

07:35.950 --> 07:36.950
Get

07:36.950 --> 07:38.850
App

07:38.850 --> 07:40.150
得到这个

07:40.150 --> 07:41.350
我们不用App了

07:41.350 --> 07:43.250
我们直接在里面拿

07:43.250 --> 07:45.150
我们拿数据库的操作

07:45.150 --> 07:47.450
得到Tarot

07:47.450 --> 07:50.980
点Cloud

07:50.980 --> 07:57.670
点Database

07:57.670 --> 08:00.170
紧接着我们继续

08:00.170 --> 08:01.170
在哪里做呢

08:01.170 --> 08:03.270
生命周期里面

08:03.270 --> 08:05.270
我们可以写一个Get

08:05.270 --> 08:08.460
得到数据

08:08.460 --> 08:09.460
Date

08:09.460 --> 08:11.360
得到数据

08:11.360 --> 08:14.360
那我们现在直接把这个

08:14.360 --> 08:16.560
Dist and Get Data

08:16.560 --> 08:19.060
写一下

08:19.060 --> 08:20.060
Dist and Get Data

08:20.060 --> 08:23.460
我们去获取现在的所有的记录

08:23.460 --> 08:25.460
我们说是

08:25.460 --> 08:36.870
第一步

08:36.870 --> 08:39.270
但是我们每次

08:39.270 --> 08:40.670
我们这个写

08:41.870 --> 08:45.470
记录

08:45.470 --> 08:47.670
每次只拿

08:47.670 --> 08:49.770
20条

08:49.770 --> 08:53.720
数据

08:53.720 --> 08:56.420
所以我们的结构就变成的是

08:56.420 --> 08:59.220
Db点

08:59.220 --> 09:03.080
Glaction

09:03.080 --> 09:08.180
Topic

09:08.180 --> 09:08.880
点

09:08.880 --> 09:10.480
我们后面有

09:10.480 --> 09:11.580
Otherby

09:11.580 --> 09:14.180
这是属于我们的排序

09:14.180 --> 09:15.280
我们给它

09:15.280 --> 09:16.880
在这个

09:16.880 --> 09:17.880
Topic Demo

09:17.880 --> 09:19.480
我们看一下

09:19.480 --> 09:20.280
数据库里面

09:20.280 --> 09:21.480
Topic Demo

09:21.480 --> 09:25.380
它本身自己我们有一个叫做

09:25.380 --> 09:26.080
日期

09:26.080 --> 09:27.880
我们有个日期

09:27.880 --> 09:31.690
我们针对这个日期

09:31.690 --> 09:33.490
给它做一个

09:33.490 --> 09:34.890
DSC

09:34.890 --> 09:37.360
操作

09:37.360 --> 09:38.960
Limit

09:38.960 --> 09:41.160
然后

09:41.160 --> 09:42.460
我们把这个数据

09:42.460 --> 09:45.060
我们需要在外部定一个变量

09:45.060 --> 09:46.460
什么变量呢

09:46.460 --> 09:47.360
我们要问它

09:47.360 --> 09:49.860
现在你到底需要有几个

09:49.860 --> 09:51.260
我们现在的

09:51.260 --> 09:52.060
一行几个

09:52.060 --> 09:52.860
每夜几个

09:52.860 --> 09:54.660
我们把这些数据全定一下

09:54.660 --> 09:57.770
在State里面

09:57.770 --> 09:59.770
我们定一下

09:59.770 --> 10:00.870
Current

10:00.870 --> 10:03.700
Pager

10:03.700 --> 10:04.300
等于一

10:04.300 --> 10:06.300
当前是第一页

10:06.300 --> 10:07.900
Pager Number

10:08.800 --> 10:10.900
每夜我们的数值

10:10.900 --> 10:14.400
我们可以写个初始值在这边

10:14.400 --> 10:18.660
再有

10:18.660 --> 10:20.060
页面数

10:20.060 --> 10:23.460
然后Total Count

10:23.460 --> 10:25.160
是0

10:25.160 --> 10:27.740
然后

10:27.740 --> 10:30.350
Topics

10:30.350 --> 10:31.150
内容

10:31.150 --> 10:35.720
我们把几个值全定一出来

10:35.720 --> 10:36.720
我们在这边

10:36.720 --> 10:38.420
我们首先要拿的是

10:38.420 --> 10:41.320
你现在里面所需要的

10:41.320 --> 10:42.820
调数

10:42.820 --> 10:46.040
成20

10:46.140 --> 10:47.040
每夜拿

10:47.040 --> 10:47.740
少一点吧

10:47.740 --> 10:49.840
每夜拿10条吧

10:49.840 --> 10:51.340
或者6条

10:51.340 --> 10:52.240
我们拿少一点

10:52.240 --> 11:01.040
每夜拿6条

11:01.040 --> 11:02.340
好

11:02.340 --> 11:04.240
That点

11:04.240 --> 11:04.940
Pager

11:04.940 --> 11:06.840
我们从过这里边来

11:06.840 --> 11:08.740
This点

11:08.740 --> 11:10.540
This点

11:10.540 --> 11:12.140
Stator点

11:12.140 --> 11:16.040
Pager Number

11:16.040 --> 11:16.640
换下来

11:16.640 --> 11:27.680
太长了

11:27.680 --> 11:33.190
Get

11:33.190 --> 11:35.090
Success

11:35.090 --> 11:35.890
RES

11:35.890 --> 11:38.090
我们里面拿数据

11:38.090 --> 11:40.290
当你拿到这些数据以后的话

11:40.290 --> 11:41.090
我们来看一下

11:41.090 --> 11:52.030
是否能够正常拿取

11:52.030 --> 11:53.530
由于我们要做第一个页面

11:53.530 --> 11:56.030
所以我们再把我们的

11:56.030 --> 12:06.640
切回到第一个取

12:06.640 --> 12:07.840
Me

12:07.840 --> 12:08.440
不是

12:08.440 --> 12:09.940
这是Hong

12:09.940 --> 12:22.440
应该是Hong

12:22.440 --> 12:25.240
GetData的拿法是在我们的生命周期里面

12:25.240 --> 12:26.440
所以打开页面的时候

12:26.440 --> 12:28.040
我们应该这边是可以看到

12:28.040 --> 12:42.240
有一些数据返回的

12:42.240 --> 12:42.840
编一好了

12:42.840 --> 12:50.530
我们再开启

12:50.530 --> 12:51.630
看这边

12:51.630 --> 12:54.230
是不是应该有6条数据回来了

12:54.330 --> 12:55.330
对吧

12:55.330 --> 12:57.430
这边的确有6条回来了

12:57.430 --> 12:59.530
所以有6条数据拿到以后的话

12:59.530 --> 13:01.030
那么我们下面就可以针对

13:01.030 --> 13:03.030
这些数据进行操作

13:03.030 --> 13:04.830
RES它在哪个里面

13:04.830 --> 13:05.930
它其实是在Data

13:05.930 --> 13:07.530
我们刚才在里面

13:07.530 --> 13:10.300
Map循环

13:10.300 --> 13:12.400
我们里面第一个咱们写Value吧

13:12.400 --> 13:13.800
第二个Index

13:13.800 --> 13:15.800
第三个是它自身的

13:15.800 --> 13:21.130
Berry

13:21.130 --> 13:22.230
然后

13:22.230 --> 13:25.430
针对当前的我们的数值

13:25.430 --> 13:28.230
我们可以把这里边的Value

13:28.230 --> 13:29.630
拿出来

13:30.130 --> 13:31.630
它里面的Data

13:31.630 --> 13:35.260
我们看一下结构

13:35.260 --> 13:38.160
Ari里面打开我们看到

13:38.160 --> 13:41.460
这里面是由你现在的所有的信息的

13:41.460 --> 13:44.560
首先我们拿的方式是通过我们的

13:44.560 --> 13:46.760
这是RES.data拿

13:46.760 --> 13:48.960
data拿到的是整个这个数据

13:48.960 --> 13:49.860
对吧

13:49.860 --> 13:51.460
这数据里面的话呢

13:51.460 --> 13:52.760
那么我们看一下

13:52.760 --> 13:54.960
我们这边有一个Data

13:54.960 --> 13:56.960
Data它是一个日期格式

13:56.960 --> 14:06.290
我们先把它转成自付创格式

14:06.390 --> 14:08.990
我们把它转成自付创格式

14:08.990 --> 14:09.790
然后呢

14:09.790 --> 14:11.590
这边来

14:11.590 --> 14:16.860
我们再给它放进去

14:16.860 --> 14:19.360
拿过来的只是先给它放回去

14:19.360 --> 14:23.760
形成我们现在的一个修改

14:23.760 --> 14:26.060
它是修改

14:26.060 --> 14:37.490
当前日期格式

14:37.490 --> 14:38.290
好

14:38.290 --> 14:39.690
那我把数据全拿出来

14:39.690 --> 14:45.800
放在我们的topics里面

14:45.800 --> 14:57.110
这边我们依然用Zat来表示

14:57.110 --> 14:59.710
Zat.

14:59.810 --> 15:04.600
ZatStator

15:04.600 --> 15:10.930
Zat.ZatStator

15:10.930 --> 15:14.930
我们把里面的topics

15:16.330 --> 15:24.350
等于你现在给我的RES.data

15:24.350 --> 15:26.150
放完以后

15:26.150 --> 15:33.200
这个是帽好

15:33.200 --> 15:34.400
放完以后的话呢

15:34.400 --> 15:39.800
那么我们可以直接把当前的topics

15:39.800 --> 15:41.300
把你里面的topics

15:41.300 --> 15:44.700
直接再完成你现在的一个数据复制

15:44.700 --> 15:46.300
那么当前的这个页面

15:46.300 --> 15:50.800
我们依然可以使用我们以前的这个结构

15:50.800 --> 15:52.800
现在这里边的topics已经有值了

15:52.800 --> 15:54.300
是吧

15:54.300 --> 15:57.200
我们现在继续来回来看一下

15:57.200 --> 15:58.800
过了这个以后

15:58.800 --> 16:00.100
我们在这里面

16:00.100 --> 16:03.300
我们看一下数据结构

16:03.300 --> 16:04.900
再看一下

16:04.900 --> 16:07.900
console.log

16:07.900 --> 16:13.700
this.stator里面的topics

16:13.700 --> 16:22.330
是不是把这数据已经进去了

16:22.330 --> 16:23.930
报了一个错对吧

16:23.930 --> 16:30.140
它说不能读取topics这个属性

16:30.140 --> 16:39.830
这个是在Stator里面

16:39.830 --> 16:43.730
Stator里面this.topics

16:43.730 --> 16:45.930
我们应该是有这个属性对吧

16:45.930 --> 16:47.830
我们来查一下

16:49.830 --> 16:50.830
我们还得用Zat

16:50.830 --> 16:54.630
因为this的话它根本没有指向到外层

16:54.630 --> 16:58.960
然后我们重新来看一下

16:58.960 --> 16:59.660
对吧

16:59.660 --> 17:02.060
它里面是不是有这6个值了

17:02.060 --> 17:04.260
我们看到已经放进去了

17:04.260 --> 17:06.160
那么topics有了以后的话呢

17:06.160 --> 17:08.960
那么其实在这个页面上面

17:08.960 --> 17:11.760
我们其实可以多做一个操作的

17:11.760 --> 17:12.360
什么呢

17:12.360 --> 17:14.560
就你在正式在运行的过程中

17:14.560 --> 17:16.160
当然我们在加载数据时候

17:16.160 --> 17:19.860
我们也可以做一些标题栏上面的设定

17:19.860 --> 17:21.960
比如说标题栏上面我们在前面

17:22.060 --> 17:25.460
可以去给它做一个标题栏loading

17:25.460 --> 17:27.860
还有下拉刷新这样的功能

17:27.860 --> 17:30.360
我们都可以在上面给它先写出来

17:31.460 --> 17:32.660
我们是可以这样

17:32.660 --> 17:34.460
因为我们还有不同的加载方式

17:34.460 --> 17:36.360
所以我先写个注释 教授

17:36.360 --> 17:40.260
我们现在后面是可以做不同的加载方式

17:40.260 --> 17:42.260
然后有一些不同的显示

17:43.760 --> 17:51.660
下面可以隐藏标题栏的loading动作

17:52.760 --> 18:06.100
和终止下拉刷新动作

18:06.100 --> 18:08.300
ok 是这样的过程

18:08.300 --> 18:09.700
然后我们就很简单

18:09.700 --> 18:12.200
我们只要把这部分内容完成

18:12.200 --> 18:16.000
你现在的一个加载动作就可以了

18:16.000 --> 18:19.100
首先我们当然你在做这过程的时候

18:19.100 --> 18:26.340
我们最好还是有一个防御机制

18:26.340 --> 18:28.640
最好有个防御机制

18:28.640 --> 18:30.140
一旦有错误情况下

18:30.140 --> 18:51.240
应该还是有这个来报错的

18:51.340 --> 18:52.140
这是第一块

18:52.140 --> 18:53.640
我们topics有值了

18:55.040 --> 18:56.640
一旦topics有值的话

18:56.640 --> 19:02.790
我们页面中是不是应该可以做显示了

19:02.790 --> 19:06.460
回到页面中

19:06.460 --> 19:08.860
图片 内容

19:08.860 --> 19:10.960
我们可以显示部分出来了

19:10.960 --> 19:13.500
我们来做

19:13.500 --> 19:15.000
首先我们在外部

19:15.000 --> 19:20.870
我们去引用一个我们的

19:20.870 --> 19:30.960
this.data里面的topics

19:30.960 --> 19:35.870
我们要对它进行循环

19:36.770 --> 19:51.440
byton.index.return

19:51.440 --> 19:56.720
数据可以返回

19:56.720 --> 19:59.120
咱们把下面整个这一段

19:59.120 --> 20:20.480
咱们全都可以放到里边去

20:20.480 --> 20:32.550
在上面咱们做个key index

20:32.550 --> 20:35.350
那么在这里面的时候

20:35.350 --> 20:38.450
我们需要有不同的一些判断的

20:38.450 --> 20:41.550
也就是说我们呈现的页面结构

20:41.550 --> 20:44.550
需要有不同的格式出现

20:44.550 --> 20:47.250
因为有些是有投向的

20:47.250 --> 20:49.250
有些是有内容的

20:49.250 --> 20:50.450
有些是没有内容的

20:50.450 --> 20:50.850
对吧

20:50.850 --> 20:52.250
这个格式

20:52.250 --> 20:53.850
但是前面这一块内容

20:53.850 --> 20:55.650
我们可以按照我们的要求

20:55.650 --> 20:57.350
把它以用户的方式呈现

20:57.350 --> 20:59.450
首先用户投向这一块

20:59.450 --> 21:01.050
这块是ok的

21:01.050 --> 21:02.950
用户投向这一块是ok的

21:02.950 --> 21:04.850
所以我们在这边我们来

21:06.050 --> 21:14.440
item.user

21:14.440 --> 21:15.140
这边不是

21:15.140 --> 21:18.890
这边是nickname

21:18.890 --> 21:23.020
这边是nickname

21:23.120 --> 21:25.120
第二个

21:25.120 --> 21:27.820
这边来

21:27.820 --> 21:33.020
item的日期

21:33.020 --> 21:35.420
这个item的日期

21:35.420 --> 21:37.920
再有一个

21:37.920 --> 21:40.620
这个是我们做的一个假投向

21:40.620 --> 21:44.440
我们现在把它换成

21:44.440 --> 21:52.770
item的user里面的uil

21:52.770 --> 21:57.080
这样换出来

21:57.080 --> 22:00.480
那么我们在点击这个操作的时候

22:00.480 --> 22:01.680
我们在点击

22:01.680 --> 22:06.480
我们现在整个这个页面的时候

22:06.480 --> 22:08.480
我们可以有一个

22:08.480 --> 22:11.080
可以有一个叫做

22:11.080 --> 22:14.380
是不是对单击某一个项目

22:14.380 --> 22:15.380
也就是说

22:15.380 --> 22:16.480
我这是不是一条

22:16.480 --> 22:17.980
首先我们来看一下

22:17.980 --> 22:21.080
一条数据如果呈现出来的话

22:21.080 --> 22:23.080
下面没有改

22:23.080 --> 22:24.380
我说这条不错

22:24.380 --> 22:26.180
所以我现在可以对它已经点击一下

22:26.180 --> 22:27.680
我想看这个内容

22:27.680 --> 22:28.880
所以意味着

22:28.880 --> 22:31.580
我需要在整个这个上面

22:31.580 --> 22:35.500
进行传参

22:35.500 --> 22:37.000
bound this

22:37.000 --> 22:39.400
后面跟参

22:39.400 --> 22:40.400
跟的是

22:40.400 --> 22:47.500
首先我们跟上item的下桿id跟上

22:47.500 --> 22:53.300
再跟上一个我们item

22:53.300 --> 22:56.680
我们应该会有一个

22:56.680 --> 22:57.780
能跟这个

22:57.780 --> 23:02.880
我们看一下数据就可以了

23:02.880 --> 23:05.680
在数据困拿出来有item和openid这两个都有

23:05.680 --> 23:08.280
所以我们可以直接把这两个给过它

23:08.480 --> 23:11.680
前面这个待会来写那部分

23:11.680 --> 23:12.880
接下去我们看到

23:12.880 --> 23:16.380
我们这边有个日期没拿出来

23:16.380 --> 23:18.180
我们看一下

23:18.180 --> 23:28.760
当前发布的日期

23:28.760 --> 23:30.260
这边没存进来

23:30.260 --> 23:31.560
这边有一个空

23:31.560 --> 23:36.560
所以我们应该去看一下数据存的点

23:36.560 --> 23:40.460
存的点它其实是数据库里

23:40.460 --> 23:41.760
它应该是在数据库里的

23:41.760 --> 23:42.860
我们找一下

23:42.860 --> 23:53.570
数据库里这几条数据本身就没数据

23:53.570 --> 23:58.780
我们看一下

23:58.780 --> 24:05.090
data

24:05.090 --> 24:06.790
数据库里这个时间

24:06.790 --> 24:08.990
这个东西是有数据的

24:08.990 --> 24:09.190
对吧

24:09.190 --> 24:13.290
我们看到data都是有的

24:13.290 --> 24:13.590
好

24:13.590 --> 24:17.300
那我回过头来

24:17.300 --> 24:18.400
我们在topic的时候

24:18.400 --> 24:23.400
我们看一下这个时间

24:23.400 --> 24:24.400
这边

24:24.400 --> 24:25.200
这边

24:25.200 --> 24:27.000
这边是e

24:27.000 --> 24:28.000
data

24:28.000 --> 24:28.200
好

24:28.200 --> 24:30.000
再来看一下

24:30.000 --> 24:34.300
就看第一条这个数据

24:34.300 --> 24:35.900
是不是时间出来了

24:35.900 --> 24:36.700
OK吧

24:36.700 --> 24:37.400
OK

24:37.400 --> 24:38.100
然后的话

24:38.100 --> 24:40.300
上面这三块出来了

24:40.300 --> 24:47.200
你接着我们继续往下

24:47.200 --> 24:50.100
这块内容已经有我们现在的数据结构了

24:50.100 --> 24:51.800
然后我们下面

24:51.800 --> 24:54.000
下面的话就像我刚才说的

24:54.000 --> 24:55.700
你需要做判别了

24:55.700 --> 24:59.000
它是否有这个内容存在

24:59.000 --> 25:02.910
那么我们首先往下跑

25:02.910 --> 25:06.600
我们把它分开一点

25:06.600 --> 25:09.400
这个是显示内容和图片对吧

25:09.400 --> 25:11.700
那么我们要单独再做两个出来

25:11.700 --> 25:17.460
就是显示单图片和显示单内容的

25:17.460 --> 25:24.290
我们在下面写一下

25:24.290 --> 25:27.990
显示和内容和图片在content里面

25:27.990 --> 25:29.690
那么content里面在这

25:29.690 --> 25:30.490
我们也来

25:30.490 --> 25:32.390
我们把这个写到里面来

25:32.390 --> 25:33.390
它是内容区域

25:33.390 --> 25:37.290
首先这个是显示图片和内容

25:37.290 --> 25:39.090
第二个

25:39.090 --> 25:40.890
这个部分

25:40.890 --> 25:43.390
我们先写出来

25:43.390 --> 25:46.290
它是显示单内容

25:46.290 --> 25:47.290
单图片

25:47.290 --> 25:48.590
单内容

25:48.590 --> 25:53.500
单图片

25:53.500 --> 25:54.600
单图片的话

25:54.600 --> 25:56.200
其实和上面是一样

25:56.200 --> 25:57.300
只不过

25:57.300 --> 26:00.500
就是它是没有文本这一块的

26:00.500 --> 26:04.930
所以它只有这一块

26:04.930 --> 26:08.240
它只有这一块内容

26:08.240 --> 26:16.400
单文字

26:16.400 --> 26:22.620
它只有上面的这块内容

26:22.620 --> 26:26.630
是这样的

26:26.630 --> 26:27.930
但是它们之间

26:27.930 --> 26:29.430
我们只能显示一块

26:29.430 --> 26:30.430
所以我们需要

26:30.430 --> 26:33.930
根据imagers或图片内容进行判别

26:33.930 --> 26:35.330
我们开始

26:35.330 --> 26:36.430
图片和内容里面

26:36.430 --> 26:38.930
这边我们开始进行所谓的循环

26:38.930 --> 26:41.230
我们可以把它数据进行

26:41.230 --> 26:42.330
循环显示

26:42.330 --> 26:51.600
或者说我们可以做判断

26:51.600 --> 26:55.400
如果用三目做的话

26:55.400 --> 26:57.300
太多了

26:57.300 --> 27:10.900
我们还是用标签的方式来写

27:10.900 --> 27:12.700
我们怎么把它给分一下

27:12.700 --> 27:15.400
那么我们还是采用

27:15.400 --> 27:17.600
因为在有两种做法

27:17.600 --> 27:18.300
第一种

27:18.400 --> 27:20.400
我们直接使用我们的

27:20.400 --> 27:21.100
不要用三目

27:21.100 --> 27:22.100
我们用语号

27:22.100 --> 27:24.300
用那个语号的判别

27:24.300 --> 27:26.100
然后三目太长这是

27:26.100 --> 27:27.400
并且有一个是微空

27:27.400 --> 27:28.400
也不核算

27:28.400 --> 27:30.500
然后我们用语号的方式来做的话

27:30.500 --> 27:32.200
相对让人比较好一下

27:32.200 --> 27:33.600
因为对于Taro来讲

27:33.600 --> 27:35.100
我们知道它的语的话

27:35.100 --> 27:38.400
当你前面形成了我们可使用状态

27:38.400 --> 27:40.300
那么后面就是

27:40.300 --> 27:41.600
语前面是true

27:41.600 --> 27:43.100
那么后面会被编译

27:43.100 --> 27:44.000
语前面是force

27:44.000 --> 27:45.700
后面就不会有编译

27:45.700 --> 27:48.100
我们来做这个操作

27:48.100 --> 27:51.500
那么我们这边首先

27:51.500 --> 27:52.300
但是语的话

27:52.300 --> 27:53.800
如果你前面还有语

27:53.800 --> 27:56.600
那我们要用一个小号扩主

27:56.600 --> 27:58.200
你先看我现在写

27:58.200 --> 27:59.300
如果我item

27:59.300 --> 28:02.100
它是在大循环里面

28:02.100 --> 28:02.900
在大循环里面

28:02.900 --> 28:04.400
如果我item

28:04.400 --> 28:08.300
它的content

28:08.300 --> 28:09.700
内容

28:09.700 --> 28:11.000
我们可以看一下

28:11.000 --> 28:12.200
这个

28:12.200 --> 28:17.700
item里面的每一项的content内容和images

28:17.700 --> 28:19.400
如果我itemcontent内容

28:19.400 --> 28:21.300
它不等于空

28:21.300 --> 28:23.300
表示有值

28:23.300 --> 28:31.370
并且item的images.lens

28:31.370 --> 28:33.270
它也大于0

28:33.270 --> 28:34.670
这两个条件都满足

28:34.670 --> 28:36.770
代表有图片有内容

28:36.770 --> 28:39.770
所以我们就可以把后面这段给输出

28:39.770 --> 28:40.570
当然

28:40.570 --> 28:41.470
这样做的话

28:41.470 --> 28:42.870
我们最好的方式是

28:42.870 --> 28:45.670
这边给一个扩号

28:45.670 --> 28:47.670
代表着前面是个判断条件

28:47.670 --> 28:48.470
后面是执行

28:48.470 --> 28:49.970
你不给的话其实一样

28:49.970 --> 28:51.070
它这个维促了

28:51.070 --> 28:51.870
它才往后做

28:51.870 --> 28:52.670
这个也维促了

28:52.670 --> 28:54.570
再往后做

28:54.570 --> 28:56.070
这一集

28:56.070 --> 28:59.810
第二个单图片也是一样

28:59.810 --> 29:00.710
前放一个

29:00.710 --> 29:03.510
后放一个

29:03.510 --> 29:04.110
前放一个

29:04.110 --> 29:05.310
后放一个

29:05.310 --> 29:13.490
然后我们这边来

29:13.490 --> 29:14.790
首先

29:14.790 --> 29:16.590
单图片的话

29:16.590 --> 29:17.890
imager

29:17.890 --> 29:20.190
这边还要注意一下

29:20.190 --> 29:22.490
如果你在微信小程序里面

29:22.490 --> 29:24.390
你可以用我们的微信f

29:24.390 --> 29:25.290
微信ls

29:25.290 --> 29:27.190
它是有个fls的概念

29:27.190 --> 29:28.990
但是在这里面

29:28.990 --> 29:30.190
我们是一个独立的

29:30.190 --> 29:31.790
也就是它是一个独立的判断

29:31.790 --> 29:32.490
它也是独立的

29:32.490 --> 29:33.990
不存在于它判断完以后

29:33.990 --> 29:35.690
它就不做

29:35.690 --> 29:36.190
这样的一个

29:36.190 --> 29:38.090
没有fls的概念

29:38.090 --> 29:40.390
所以你得写全

29:40.390 --> 29:41.290
也就是说

29:41.290 --> 29:46.340
如果它的图片

29:46.340 --> 29:49.380
乍于0

29:49.380 --> 29:52.820
同时

29:52.820 --> 29:55.020
它的

29:55.020 --> 29:56.620
内容

29:56.620 --> 29:58.920
等于0空

29:58.920 --> 30:00.820
它要满足内容是空

30:00.820 --> 30:02.420
并且图片大于0

30:02.420 --> 30:04.420
在这种前提下面

30:04.420 --> 30:05.320
那么

30:05.320 --> 30:08.520
它就应该能够进行这段的输出

30:08.520 --> 30:12.520
我们把这个扩号扩起来

30:12.520 --> 30:15.320
我们把这个扩号扩起来

30:15.320 --> 30:17.790
ok

30:17.790 --> 30:19.090
这边注意一下

30:19.090 --> 30:21.390
我从上面拿下来时候的话

30:21.390 --> 30:22.490
我们写的时候

30:22.490 --> 30:23.390
如果说

30:23.390 --> 30:25.090
你里面单独做它输出

30:25.090 --> 30:26.790
它会要你一个根结点

30:26.790 --> 30:27.890
所以你在这边

30:27.890 --> 30:29.590
你可以单加一个view

30:29.590 --> 30:32.290
你可以单加一个view

30:32.290 --> 30:32.990
然后下面

30:32.990 --> 30:34.790
如果这是图片有

30:34.790 --> 30:35.790
文本有

30:35.790 --> 30:36.590
显示这一段

30:36.590 --> 30:38.590
如果是图片有

30:38.590 --> 30:40.490
文本没有显示这一段

30:40.490 --> 30:44.780
那么这边依然

30:44.780 --> 30:47.380
也写这样的一个概念

30:47.380 --> 30:49.960
扩号

30:49.960 --> 30:52.160
如果现在是

30:52.160 --> 30:53.960
文本有

30:53.960 --> 30:55.160
图片没有

30:55.160 --> 30:56.860
这个是

30:56.860 --> 30:58.560
images点

30:58.560 --> 31:00.060
length

31:00.060 --> 31:04.360
如果现在是图片为0

31:04.360 --> 31:06.760
并且

31:06.860 --> 31:09.160
items

31:09.160 --> 31:10.360
count

31:10.360 --> 31:13.560
它不为空

31:13.560 --> 31:14.560
文本不为空

31:14.560 --> 31:19.720
那就呈现这一段

31:19.720 --> 31:20.520
保存一下

31:20.520 --> 31:21.320
我们来看页面

31:21.320 --> 31:26.750
有没有问题

31:26.750 --> 31:27.250
出来了

31:27.250 --> 31:28.050
对吧

31:28.050 --> 31:29.350
这结构

31:29.350 --> 31:30.450
那么我们来看一下

31:30.450 --> 31:32.250
对照一下

31:32.250 --> 31:35.350
那么如果现在图片为空

31:35.350 --> 31:36.450
呈现这一段

31:36.450 --> 31:38.550
并且内容不为空

31:38.550 --> 31:39.850
那就文本了

31:39.850 --> 31:42.550
如果现在图片大于0

31:42.550 --> 31:43.650
但内容为空

31:43.650 --> 31:45.250
那就呈现这一段了

31:45.250 --> 31:47.250
如果现在图片

31:47.250 --> 31:48.450
不为空

31:48.450 --> 31:50.150
那个

31:50.150 --> 31:50.950
不为空

31:50.950 --> 31:52.850
内容大于0呈现这一段

31:52.850 --> 31:53.250
对吧

31:53.250 --> 31:54.050
编译没问题

31:54.050 --> 31:54.950
我们看一下页面

31:54.950 --> 31:59.300
是不是这个要求

31:59.300 --> 32:00.300
我们来看一下

32:00.300 --> 32:02.200
首先这个上面我发

32:02.200 --> 32:02.800
这里面的话

32:02.800 --> 32:04.000
由于我内容还没定

32:04.000 --> 32:05.500
所以你看到有些部分

32:05.500 --> 32:06.500
是有图片的

32:06.500 --> 32:07.400
对吧

32:07.400 --> 32:10.900
有些部分是就一个文本

32:10.900 --> 32:11.500
对吧

32:11.500 --> 32:12.800
这个是有图片有文本

32:12.800 --> 32:13.800
有图片有文本

32:13.800 --> 32:14.300
对吧

32:14.300 --> 32:17.200
这个的话是哪个

32:17.200 --> 32:17.700
这个的话

32:17.700 --> 32:19.100
现在至少还没有看到

32:19.100 --> 32:19.700
它的内容

32:19.700 --> 32:21.900
我们看一下这里边

32:21.900 --> 32:23.500
我们对照一下

32:23.500 --> 32:24.700
首先第一个

32:24.700 --> 32:27.600
我发布的内容

32:27.600 --> 32:28.500
我们对照一下

32:28.500 --> 32:30.000
这是有内容有文本

32:30.000 --> 32:30.600
对吧

32:30.600 --> 32:32.400
有内容有文本

32:32.400 --> 32:33.500
第二个的话

32:33.500 --> 32:37.500
就是没内容有图片

32:37.500 --> 32:38.600
没内容有图片

32:38.600 --> 32:40.600
这是

32:40.600 --> 32:43.300
第三个是单文本

32:43.300 --> 32:45.900
这样我们就可以把它里面的文字

32:45.900 --> 32:46.700
显示出来

32:46.700 --> 32:49.000
你看这边文字显示出来

32:49.000 --> 32:49.600
显出来以后

32:49.600 --> 32:50.900
我们就能看到了

32:50.900 --> 32:58.240
它里面究竟是一个什么样的情况

32:58.240 --> 33:03.820
我们这边是图片

33:03.820 --> 33:06.020
这边是图片大于0

33:06.020 --> 33:07.720
内容不为空

33:07.720 --> 33:08.920
好的

33:08.920 --> 33:13.360
我们把里面文本写出来

33:13.360 --> 33:14.960
首先最前面的

33:14.960 --> 33:16.760
我们是有内容有文本

33:16.760 --> 33:18.660
所以文本这一块

33:18.660 --> 33:23.390
我们应该呈现的是

33:23.390 --> 33:32.140
item里面的content

33:32.140 --> 33:34.740
这个内容

33:34.740 --> 33:36.540
第二我们往下

33:36.540 --> 33:38.540
把里面的四个我们全删掉

33:38.540 --> 33:41.040
保留一个

33:41.040 --> 33:43.640
然后这边的图片

33:43.640 --> 33:45.340
这边的图片的话

33:45.340 --> 33:48.640
我们这边还得形成循环

33:48.640 --> 33:53.060
你还得有一级

33:53.060 --> 33:56.560
这边会比较复杂一点

33:56.560 --> 33:57.660
这边还会有一级

33:57.660 --> 33:59.860
因为我里面拿到的是什么

33:59.860 --> 34:03.230
item的imager

34:03.230 --> 34:04.930
map

34:04.930 --> 34:07.130
然后这是

34:07.130 --> 34:25.760
map item index

34:25.760 --> 34:30.580
把它进去

34:30.580 --> 34:48.840
然后key index

34:48.840 --> 34:50.940
第二个叫map index

34:50.940 --> 35:00.520
怎么叫

35:00.520 --> 35:02.720
第二个你得把这个map这个值

35:02.720 --> 35:11.680
给显示出来

35:11.680 --> 35:12.580
这个src

35:12.580 --> 35:24.540
那我们直接把这个map item拿出来

35:24.540 --> 35:26.440
把这行收掉

35:26.440 --> 35:30.440
看一下这行的效果有图有文的

35:30.440 --> 35:31.440
报了一个错

35:31.440 --> 35:32.940
我们来找一下

35:32.940 --> 35:38.440
他说肯定是一个扩耗的问题

35:38.440 --> 35:42.040
这边咱没形return

35:42.040 --> 35:54.220
咱们把它放进去

35:54.220 --> 35:55.820
好这里两张图片出来了

35:55.820 --> 35:56.620
对吧

35:56.620 --> 35:57.820
有文本有图片的

35:57.820 --> 35:58.920
先不用看这些

35:58.920 --> 36:01.020
有文本有图片的是不是出来了

36:01.020 --> 36:04.620
一二三四五六者

36:04.620 --> 36:05.720
至少有文本有图片的

36:05.720 --> 36:07.120
我们已经看到了

36:07.220 --> 36:13.600
紧接着我们继续往下

36:13.600 --> 36:14.900
学第二个

36:14.900 --> 36:18.480
单图片的

36:18.480 --> 36:23.120
把这个删了

36:23.120 --> 36:25.320
单图片的其实里面的结构

36:25.320 --> 36:27.520
和我们刚刚在前面做的

36:27.520 --> 36:29.020
基本保持一致

36:29.020 --> 36:31.220
所以我们可以把前面的这一块

36:31.220 --> 36:33.020
给复制下来

36:33.020 --> 36:40.700
就把这个scolar view给复制下来

36:40.700 --> 36:41.700
再来

36:41.700 --> 36:44.900
单文本的其实就是

36:44.900 --> 36:50.900
item content

36:50.900 --> 36:59.790
好此时再来看一下效果

36:59.790 --> 37:00.990
单文本

37:00.990 --> 37:03.090
这个是图片这边有

37:03.090 --> 37:03.890
对吧

37:03.890 --> 37:05.190
这个也有

37:05.190 --> 37:07.190
那么其中这里面有几条数据

37:07.190 --> 37:09.290
是之前User我们数据没有进去

37:09.290 --> 37:10.990
我们看一下

37:10.990 --> 37:11.590
是之前的

37:11.590 --> 37:12.790
你看这边没有对吧

37:12.790 --> 37:13.490
没有数据

37:13.490 --> 37:16.390
所以我们把它给删除掉

37:16.390 --> 37:17.790
没有数据的我们就删除掉

37:17.790 --> 37:20.290
因为前面做测试的时候

37:20.290 --> 37:22.190
我们没有把User放进去的

37:22.190 --> 37:30.540
几条级录也在

37:30.540 --> 37:30.740
对吧

37:30.740 --> 37:31.940
现在都有了

37:31.940 --> 37:41.360
然后我们重新编译一下

37:41.360 --> 37:42.460
有了吧

37:42.460 --> 37:45.630
这些数据都有了

37:45.730 --> 37:46.530
ok

37:46.530 --> 37:47.330
那这样的话

37:47.330 --> 37:49.630
我们就能看到我们的数据出现了

37:49.630 --> 37:51.130
这样的方式

37:51.130 --> 37:53.130
这边有一个没有数据对吧

37:53.130 --> 37:56.130
没内容我们找一下

37:56.130 --> 37:58.930
这个内容没有

37:58.930 --> 38:01.770
这有一条

38:01.770 --> 38:02.870
应该有个图片

38:02.870 --> 38:04.870
但是可能这图片被删掉了

38:04.870 --> 38:06.470
可能这图片被删掉了

38:06.470 --> 38:07.770
总之前面的数据

38:07.770 --> 38:09.870
我们这里刚传的是都是正确的

38:09.870 --> 38:10.570
对吧

38:10.570 --> 38:12.070
然后前面有一些数据

38:12.070 --> 38:14.070
可能数据户的数据被删掉了

38:14.070 --> 38:14.670
存储的

38:14.670 --> 38:15.670
那我们说

38:15.670 --> 38:17.870
后期我们只需要有这样方面的

38:17.870 --> 38:18.770
继续的添加

38:18.770 --> 38:21.470
你这边就能看到这个数据的呈现

38:21.470 --> 38:22.070
ok

38:22.070 --> 38:24.170
那么紧接着我们继续来说

38:24.170 --> 38:27.170
那么回来看一下这个结构

38:27.170 --> 38:29.870
这个结构还是比较有点

38:29.870 --> 38:44.260
需要细心的去设计的

38:44.260 --> 38:45.160
你看到的是

38:45.160 --> 38:46.760
我们整个页面的操作

38:46.760 --> 38:48.460
其实它里面

38:48.460 --> 38:51.160
如果说分成三大块

38:51.160 --> 38:52.760
如果说它是一个

38:52.760 --> 38:53.760
像微信一样

38:53.760 --> 38:55.060
如果你去直接做

38:55.060 --> 38:55.660
fls

38:55.660 --> 38:56.860
它有这套内容的话

38:56.860 --> 38:58.060
那就好办

38:58.060 --> 39:00.860
但是对于我们整个这部分来讲的话

39:00.860 --> 39:02.860
它的难度是在于

39:02.860 --> 39:04.660
它的循环

39:04.660 --> 39:08.060
它使用到的是我们的map

39:08.060 --> 39:12.260
而它本身在我们的这个表达室里面

39:12.260 --> 39:15.860
它是无法使用我们的if结构的

39:15.860 --> 39:17.660
所以它只有两个东西

39:17.660 --> 39:19.460
一个是语号

39:19.460 --> 39:21.260
一个是三目

39:21.260 --> 39:21.860
对吧

39:21.860 --> 39:24.160
所以我们把它进行混编码式的操作

39:24.160 --> 39:26.060
这也是react的特点

39:26.060 --> 39:28.160
这样的结构进行操作

39:28.160 --> 39:31.560
那么我们在拿到数据的那一刻的话

39:31.560 --> 39:34.160
首先我是一个大循环

39:34.160 --> 39:36.160
把我所有的数据都在里面循环

39:36.160 --> 39:39.660
然后前面我们这边所拿到的是信息

39:39.660 --> 39:43.160
是我们的一个user的信息

39:43.160 --> 39:44.460
这user是什么

39:44.460 --> 39:46.060
是你存的时候

39:46.060 --> 39:49.260
比如我在发布存储的时候

39:49.260 --> 39:50.360
我进去的

39:50.360 --> 39:52.160
那么你在发布存储的时候

39:52.160 --> 39:53.560
你放进去的

39:53.560 --> 39:54.460
理解吧

39:54.460 --> 39:55.560
但我读的时候的

39:55.560 --> 39:58.960
我就把某个人你放的和我放的都读出来了

39:58.960 --> 39:59.860
那么这样的话

39:59.860 --> 40:00.760
我们在user里面

40:00.760 --> 40:03.160
就可以把这个信息全部呈现出来

40:03.160 --> 40:04.160
所以有同学老说的

40:04.160 --> 40:05.560
老说什么全是你

40:05.560 --> 40:07.560
因为我这数据都是我存的

40:07.560 --> 40:08.360
而我存的时候

40:08.360 --> 40:12.560
是用我个人的一个微信登录信息存进去的

40:12.560 --> 40:15.360
如果说我和你同时在用

40:15.360 --> 40:16.160
那你也往里存

40:16.160 --> 40:17.960
那你的数据就会呈现在这

40:17.960 --> 40:19.960
理解吧

40:19.960 --> 40:21.160
景先生我们说一下

40:21.160 --> 40:22.660
那么在这个结构上面

40:22.660 --> 40:23.660
还有一点

40:23.660 --> 40:26.460
就是我们的这种欠套结构

40:26.460 --> 40:28.860
一定你现在需要去注意

40:28.860 --> 40:31.660
一你前面欠套完成以后的话

40:31.660 --> 40:35.460
如果你在内部再次欠套我们的结构的话

40:35.460 --> 40:36.960
那么你一定要去注意

40:36.960 --> 40:39.160
你现在index那个参数

40:39.160 --> 40:40.360
虽然说这参数

40:40.360 --> 40:41.760
它本身只限定于

40:41.760 --> 40:44.660
当前的这个map结构里面

40:44.660 --> 40:45.760
但是我们还是最好是

40:45.760 --> 40:47.760
把它形成不一样的命名

40:47.760 --> 40:48.760
第二个

40:48.760 --> 40:49.860
我们用语号的话

40:49.860 --> 40:51.960
一般我们前面都是一个值

40:51.960 --> 40:54.860
或者说称之为一个判断表达式

40:54.860 --> 40:55.960
但如果像我一样

40:55.960 --> 40:57.760
如果有两个判断表达式的话

40:57.760 --> 41:00.060
那么我们用个扩号扩起来

41:00.060 --> 41:01.560
再有一点

41:01.560 --> 41:04.460
那么这里面是前面我们强调的

41:04.460 --> 41:05.860
因为在f里面

41:05.860 --> 41:08.460
我们经常会干这种事情

41:08.460 --> 41:09.960
我们拿一个计识本

41:09.960 --> 41:11.860
给大家说一下

41:11.860 --> 41:12.960
就是微信里面

41:12.960 --> 41:14.560
你老干这样的事情

41:14.560 --> 41:18.360
view,微信,if

41:18.360 --> 41:19.760
什么什么什么什么

41:19.760 --> 41:20.960
这样的写对吧

41:20.960 --> 41:21.760
我们就这样写的

41:21.760 --> 41:22.660
什么什么什么

41:22.660 --> 41:25.460
然后这个是一个例子

41:25.460 --> 41:28.960
那么你就会在这个view里面

41:28.960 --> 41:31.160
你去写if的一句

41:31.160 --> 41:32.560
当你这样写好以后

41:32.560 --> 41:34.660
你后面还可以继续写view

41:34.660 --> 41:35.960
你写什么呢

41:35.960 --> 41:40.960
说微信,if

41:40.960 --> 41:42.660
或者说elf

41:42.660 --> 41:44.260
你可以去这样写

41:44.260 --> 41:44.860
对吧

41:44.860 --> 41:47.360
就是lcf

41:47.360 --> 41:48.360
然后呢

41:48.360 --> 41:49.760
xxx

41:49.760 --> 41:51.860
再有xxx

41:51.860 --> 41:53.660
view

41:53.660 --> 41:54.660
然后再来

41:54.660 --> 41:59.170
你最后还可以写成这样

41:59.170 --> 42:00.570
else

42:00.570 --> 42:01.170
对吧

42:01.170 --> 42:02.270
它只要不满足

42:02.270 --> 42:04.770
因为它永远是执行一段代

42:04.770 --> 42:05.670
或者称之为

42:05.670 --> 42:07.170
它只是执行一块

42:07.170 --> 42:08.270
它不会说这块执行

42:08.270 --> 42:09.770
再执行这一块

42:09.770 --> 42:11.870
但是我们现在在tarrow中

42:11.870 --> 42:14.070
你注意一下

42:14.070 --> 42:17.370
我们利用tarrow所给到的

42:17.370 --> 42:18.770
这个标签

42:18.770 --> 42:20.570
我们上面注意

42:20.570 --> 42:23.470
我们这样写吧

42:23.470 --> 42:25.970
tarrow你这里判断一句

42:25.970 --> 42:28.670
这个它不存在属于一个单if的概念

42:28.670 --> 42:32.470
它永远都是if

42:32.470 --> 42:33.470
它结构是这样

42:33.470 --> 42:34.270
if

42:34.270 --> 42:35.470
怎么怎么怎么样

42:35.470 --> 42:36.470
写出来以后

42:36.470 --> 42:39.670
那么写在后面

42:39.670 --> 42:41.270
这是它的wy

42:41.270 --> 42:44.470
同时它下面还是一样if

42:44.470 --> 42:46.570
什么什么什么

42:46.570 --> 42:47.770
xxx

42:47.770 --> 42:49.470
所以这种结构呢

42:49.470 --> 42:52.870
你必须把所有条件写写全

42:52.870 --> 42:54.870
它其实是每一步都会去执行

42:54.870 --> 42:56.570
而不像我们的在微信中

42:56.570 --> 42:57.670
它会跳过

42:57.670 --> 42:59.570
然后执行中间的这一块内容

42:59.570 --> 43:00.670
理解吧

43:00.670 --> 43:02.470
这是它现在的区别

43:02.470 --> 43:03.470
ok

43:03.470 --> 43:05.470
紧接着我们回扩头来

43:05.470 --> 43:07.370
所以我们在这判断的时候

43:07.370 --> 43:08.570
我们这边会比较烦

43:08.570 --> 43:09.870
比如说你写的是

43:09.870 --> 43:12.570
如果内容不为空

43:12.570 --> 43:16.570
那么并且图片的长度大于0

43:16.570 --> 43:17.470
也不为空

43:17.470 --> 43:19.270
那么就显示这一段

43:19.270 --> 43:22.270
如果图片长度大于0

43:22.270 --> 43:25.070
但是并且内容还要为空

43:25.070 --> 43:26.470
那么它就显示这一段

43:26.470 --> 43:27.070
对吧

43:27.070 --> 43:29.070
如果图片等于0

43:29.070 --> 43:31.770
并且内容不等于0

43:31.770 --> 43:32.470
那么你显示这一段

43:32.470 --> 43:34.570
所以它本身形成了这样的一个结构

43:34.570 --> 43:35.870
永远记住

43:35.870 --> 43:38.470
在Taro中我们的这种格式

43:38.470 --> 43:41.870
我们依然是要写完整的

43:41.870 --> 43:45.570
写全你的前面的判断

43:45.570 --> 43:46.270
当然

43:46.270 --> 43:46.770
列腐语句

43:46.770 --> 43:48.470
如果你要做这种渲染的话

43:48.470 --> 43:53.070
你直接放在不要在Rendle的return里面

43:53.070 --> 43:55.570
你单独拿出来在一方法里面去做

43:55.570 --> 43:56.570
那个时候里面的话

43:56.570 --> 43:57.170
时间里面

43:57.170 --> 44:01.570
你是可以去写我们的叫做if语句的

44:01.570 --> 44:02.570
那么这样的话

44:02.570 --> 44:05.270
我们可以先做一部操作了

44:05.270 --> 44:12.670
我们先点一下我们的发布

44:12.670 --> 44:14.470
在这边我们写一下

44:14.470 --> 44:16.170
我们看每次发布以后

44:16.170 --> 44:18.670
它会呈现的

44:18.670 --> 44:24.310
这是图文发布

44:24.310 --> 44:28.250
选择图片

44:28.250 --> 44:33.150
选择这里边一个人物图片

44:33.150 --> 44:35.150
发布

44:35.150 --> 44:36.750
发布成功

44:36.750 --> 44:39.250
回过来

44:39.250 --> 44:39.950
看到吗

44:39.950 --> 44:40.550
出来了

44:40.550 --> 44:41.850
有图有文

44:41.850 --> 44:46.200
紧接着继续

44:46.200 --> 44:47.200
我们应该发完以后

44:47.200 --> 44:48.700
把这里面的清掉

44:48.700 --> 44:50.500
这个是一个小东西

44:50.500 --> 44:57.130
单文字的发布

44:57.130 --> 44:58.930
发布社交圈

44:58.930 --> 45:00.130
单文字的发布

45:00.130 --> 45:02.330
对不对

45:02.330 --> 45:04.630
单图片

45:04.630 --> 45:14.520
这是一个齿轮发布

45:14.520 --> 45:17.620
我们看到单图片的这个齿轮没有出来

45:17.620 --> 45:17.920
对吧

45:17.920 --> 45:19.320
我们再来试一下

45:19.320 --> 45:20.720
那表示这个有个小问题

45:20.720 --> 45:23.420
我们再改一改

45:23.420 --> 45:26.250
发布

45:26.250 --> 45:27.050
的确

45:27.050 --> 45:28.250
我们有个齿轮没出来

45:28.250 --> 45:30.050
首先我们看一下数据库里

45:30.050 --> 45:36.870
这个齿轮是否已经被拿到

45:36.870 --> 45:41.240
在这

45:41.240 --> 45:41.740
在这里

45:41.740 --> 45:43.040
这个齿轮

45:43.040 --> 45:43.840
这张图片

45:43.840 --> 45:45.340
这边已经有了

45:45.340 --> 45:45.940
对吧

45:45.940 --> 45:48.340
cloud tester这个文有了

45:48.340 --> 45:50.540
那我们来看一下弹码了

45:50.540 --> 45:52.440
弹码单图片的发布

45:52.440 --> 45:55.840
应该是在这一块里面的

45:55.840 --> 45:56.840
我们找到图片

45:56.840 --> 45:57.840
看到吗

45:57.840 --> 45:59.040
这个位置

45:59.040 --> 46:00.040
那么图片的话

46:00.040 --> 46:01.040
map item

46:01.040 --> 46:03.540
map item其实就是这个对吧

46:03.540 --> 46:09.760
那么这里面拿出这个map item来

46:09.760 --> 46:12.160
这个格式是一样的map item对吧

46:12.160 --> 46:15.460
图片有文本都有的时候

46:15.460 --> 46:19.360
我们查一下

46:19.360 --> 46:20.260
这一边

46:20.260 --> 46:22.560
item content

46:22.560 --> 46:24.160
thu nt ent

46:24.160 --> 46:25.460
稍微一个t

46:25.460 --> 46:27.860
所以它没有进到这个里面来

46:27.860 --> 46:33.950
我们再来刷新一下

46:33.950 --> 46:34.750
对吧

46:34.750 --> 46:36.150
它不是图片没拿到

46:36.150 --> 46:38.550
它是没进到那个语句里面来

46:38.550 --> 46:41.950
我们就把这个呈现出来了

46:41.950 --> 46:43.750
图文

46:43.750 --> 46:44.850
单文

46:44.850 --> 46:46.150
单图

46:46.150 --> 46:46.950
对吧

46:46.950 --> 46:47.650
图文

46:47.650 --> 46:48.350
单文

46:48.350 --> 46:49.850
单图

46:49.850 --> 46:50.650
好

46:50.650 --> 46:52.750
那么这一块内容也就有了

46:52.750 --> 46:54.450
那么紧接着的话

46:54.450 --> 46:55.450
我们看

46:55.450 --> 46:57.350
我们觉得这个内容不错

46:57.350 --> 47:00.250
我们如果单想看这个数据的话

47:00.250 --> 47:02.550
我们就应该对它进行点击

47:02.550 --> 47:03.650
无论你在这点

47:03.650 --> 47:04.250
还是这点

47:04.250 --> 47:04.850
还是这点

47:04.850 --> 47:07.750
你都应该可以看到这里面的数据

47:07.750 --> 47:09.050
那这个操作

47:09.050 --> 47:10.250
就是我们现在

47:10.250 --> 47:15.820
对它前面最前写到的那个世界

47:15.820 --> 47:16.420
我们在这

47:16.520 --> 47:17.320
你还记得吗

47:17.320 --> 47:18.420
我们这写了一个

47:18.420 --> 47:19.620
no

47:19.620 --> 47:21.420
on item click

47:21.420 --> 47:24.920
当单击某一项的时候的操作

47:24.920 --> 47:25.620
那么这时候

47:25.620 --> 47:26.820
你看到e2

47:26.820 --> 47:28.720
这里面会有这个内容存在

47:28.720 --> 47:30.420
我们把这个给它放出来

47:30.420 --> 47:32.920
on item click

47:32.920 --> 47:34.020
有了

47:34.020 --> 47:36.020
那么并且它传了几个值过来

47:36.020 --> 47:36.620
我们看到

47:36.620 --> 47:37.420
第一个是id

47:37.420 --> 47:38.920
第二个是open id

47:38.920 --> 47:44.450
我们来拿一下id

47:44.450 --> 47:48.500
open id

47:48.500 --> 47:54.870
搜了点log id

47:54.870 --> 48:02.960
open id

48:02.960 --> 48:04.660
我们看到这两个以后的话

48:04.660 --> 48:06.560
那么我们现在就可以进行

48:06.560 --> 48:09.360
我们现在的一个测试

48:09.360 --> 48:11.660
看一下这两个数据是否可以在这边

48:11.660 --> 48:12.860
我们点一下

48:12.860 --> 48:13.860
看到吗

48:13.860 --> 48:14.860
前面一个数据

48:14.860 --> 48:15.760
后面一个数据

48:15.760 --> 48:17.460
我们把它再分开来看一下

48:17.460 --> 48:20.260
不然你看不清

48:20.260 --> 48:44.430
这是id open id

48:44.430 --> 48:45.630
点一下

48:45.630 --> 48:46.530
对吧

48:46.530 --> 48:50.330
我能得到你现在当前这个用户

48:50.330 --> 48:53.630
它本身自己的id和open id

48:53.630 --> 48:55.830
得到这两个值很重要

48:55.830 --> 49:00.330
因为id是你现在这条记录的一个主址

49:00.330 --> 49:04.230
open id是你现在这个用户的一个主址

49:04.230 --> 49:06.030
所以我有了这两个以后

49:06.030 --> 49:08.330
无论你现在是这条记录

49:08.330 --> 49:09.730
还是你这个用户

49:09.730 --> 49:12.430
我都可以后期进行操作

49:12.430 --> 49:14.030
那么我们做一个事

49:14.030 --> 49:15.130
它本身自己

49:15.230 --> 49:17.830
我们不做任何的一些显示

49:17.830 --> 49:22.130
它只是完成一个跳转

49:22.130 --> 49:24.130
我们拿出这两个值来进行

49:24.130 --> 49:27.730
那么当然为了做一些防御的话

49:27.730 --> 49:30.330
我们可以有一些简单的判断

49:30.330 --> 49:32.630
我们可以把这两个先隐藏掉了

49:32.630 --> 49:34.630
或者删掉都可以

49:34.630 --> 49:37.530
let id等于

49:37.530 --> 49:39.330
我们判断一下

49:39.330 --> 49:46.860
这是如果id等于空

49:46.860 --> 49:57.950
或者open id也等于空

49:57.950 --> 50:06.890
那么很简单

50:06.890 --> 50:09.390
我们需要你回到这个界面去

50:09.390 --> 50:12.990
你不能进行后续的操作

50:12.990 --> 50:16.390
给用户提示

50:16.390 --> 50:23.740
提示用一个show toaster

50:23.740 --> 50:25.040
正常情况下

50:25.040 --> 50:27.840
它是不会爆这个出来的对吧

50:27.840 --> 50:30.140
除非用户做了一些特别的处理

50:30.140 --> 50:32.040
所以说

50:32.040 --> 50:44.720
您非法操作

50:44.720 --> 50:45.220
Running

50:45.220 --> 50:48.520
我们给它一个警告

50:48.520 --> 50:52.830
Duration默认1.5秒

50:52.830 --> 50:55.030
当然这个现在很难爆出来

50:55.030 --> 50:56.130
我们除非说是

50:56.130 --> 50:57.330
我就不给它传参

50:57.330 --> 51:00.600
我们可以看到这个效果

51:00.600 --> 51:02.700
然后我进来以后的话

51:02.700 --> 51:04.300
我们做一个测试吧

51:04.300 --> 51:12.010
我们把id清空

51:12.010 --> 51:13.710
射空

51:13.710 --> 51:23.950
这样来

51:23.950 --> 51:25.050
它有一个

51:25.050 --> 51:26.150
我们看一下

51:26.150 --> 51:30.340
它指的是

51:30.340 --> 51:33.240
你不能和它定同名的一个值

51:33.240 --> 51:34.940
那么我们这样的话

51:34.940 --> 51:39.710
我们这边做个e

51:39.710 --> 51:43.110
我们这样让它进去一下

51:43.110 --> 51:45.710
待会再改回来

51:45.710 --> 51:47.510
就主要告诉你这个地方

51:47.510 --> 51:50.910
这个按钮的作用

51:50.910 --> 51:51.810
对吧

51:51.810 --> 51:52.910
非法操作

51:52.910 --> 51:55.110
这个就是

51:55.110 --> 51:59.440
图标不要了我们

51:59.440 --> 52:01.540
然后我们现在知道一下

52:01.540 --> 52:02.640
有这样一个提示

52:02.640 --> 52:04.240
当然这应该是要用户

52:04.240 --> 52:06.540
真的是非正常操作情况下

52:06.540 --> 52:07.840
才会爆出来

52:07.840 --> 52:10.640
接下去跳转

52:10.640 --> 52:14.370
tarrow

52:14.370 --> 52:15.670
never get redirector

52:15.670 --> 52:18.950
never get true

52:18.950 --> 52:21.790
url

52:21.790 --> 52:22.390
然后呢

52:22.390 --> 52:24.090
这边我们给出的是

52:24.090 --> 52:27.190
它要跳到我们

52:27.190 --> 52:28.790
它上一集的

52:28.790 --> 52:35.100
或者我们称之为同级吧

52:35.100 --> 52:36.500
所以它同级目录一下

52:36.500 --> 52:38.700
我们现在这个是

52:38.700 --> 52:39.900
jxl

52:39.900 --> 52:40.900
同级目录下

52:41.000 --> 52:42.100
我们有一个页面

52:42.100 --> 52:47.220
咱们取名为

52:47.220 --> 52:54.130
home detail

52:54.130 --> 52:55.930
home detail

52:55.930 --> 52:57.830
传参

52:57.830 --> 52:58.830
id

52:58.830 --> 53:09.330
用一个我们的es6表达是

53:09.330 --> 53:12.990
等于

53:12.990 --> 53:14.090
id

53:14.090 --> 53:17.920
与上

53:17.920 --> 53:19.820
open id

53:19.820 --> 53:28.220
等于

53:28.220 --> 53:30.860
open id

53:30.860 --> 53:32.860
进行这样的跳转

53:32.860 --> 53:34.160
我们先去建立一个

53:34.160 --> 53:44.890
home detail出来

53:44.890 --> 53:48.500
jxx

53:48.500 --> 53:55.270
home detail.css

53:55.270 --> 53:56.870
import

53:56.870 --> 54:00.880
tarrow

54:00.880 --> 54:02.680
component

54:02.680 --> 54:04.980
from

54:04.980 --> 54:05.980
tarrow

54:05.980 --> 54:08.480
tarrow

54:08.480 --> 54:18.490
import

54:18.490 --> 54:21.340
view

54:21.340 --> 54:22.140
from

54:22.140 --> 54:33.110
component

54:33.110 --> 54:35.110
home

54:35.110 --> 54:36.310
detail

54:36.310 --> 54:39.480
dss

54:39.480 --> 54:45.100
expert default

54:45.100 --> 54:46.400
home

54:46.400 --> 54:49.240
detail

54:49.240 --> 54:52.840
extends

54:52.840 --> 54:54.540
components

54:54.540 --> 55:00.830
class

55:00.830 --> 55:03.880
random

55:03.880 --> 55:06.560
return

55:06.560 --> 55:11.180
view

55:11.180 --> 55:12.580
home

55:12.580 --> 55:14.580
detail

55:14.580 --> 55:15.480
基本有了这个

55:15.480 --> 55:18.440
然后把它

55:18.440 --> 55:20.940
放到我们的

55:20.940 --> 55:22.940
app.jxx里面去

55:22.940 --> 55:33.080
别放第一个

55:33.080 --> 55:33.680
不对

55:33.680 --> 55:36.280
这边

55:36.280 --> 55:46.320
frind

55:46.320 --> 55:54.820
在边移

55:54.820 --> 56:00.340
在生成

56:00.340 --> 56:10.710
我们来看一下页面

56:10.710 --> 56:15.600
点击一下

56:15.600 --> 56:17.200
跳转了

56:17.200 --> 56:18.500
home detail过来了

56:18.500 --> 56:21.260
是吧

56:21.260 --> 56:22.060
ok

56:22.060 --> 56:22.960
那代表着

56:22.960 --> 56:24.160
我们现在的这个页面

56:24.160 --> 56:24.960
已经完成了

56:24.960 --> 56:26.560
跳转也完成了

56:26.560 --> 56:27.160
做的是

56:27.160 --> 56:29.160
我们让它要进行

56:29.160 --> 56:30.160
接收这个值

56:30.160 --> 56:31.560
并且在当前页面

56:31.560 --> 56:33.860
针对针当前的这条记录

56:33.860 --> 56:35.060
进行成前

56:35.060 --> 56:35.660
是吧

56:35.660 --> 56:35.860
好

56:35.860 --> 56:36.660
我们休息一下

56:36.660 --> 56:37.360
待会我们继续

