WEBVTT

00:00.240 --> 00:02.800
好 这一张呢 是进阶

00:03.060 --> 00:07.660
进阶里边的东西呢 你们很有可能以后不怎么会用得到

00:07.920 --> 00:11.240
不过呢 学习这些进阶知识

00:11.500 --> 00:17.900
对你们去以后做类似的事情啊 它不一定是完全一样 做类似的事情 或者是直接去

00:18.160 --> 00:21.480
设计一个框架 或者是去

00:21.740 --> 00:24.820
用一些别的一些框架 或者是没有用ag

00:25.020 --> 00:30.400
再用做其他处理的时候呢 可以做一个参考 学习学习一下它的诗路 也是挺不错的

00:31.680 --> 00:35.280
这一节可能我们讲一下扩展 其实我们之前也扩展过的

00:36.040 --> 00:37.560
扩展过什么呢 扩展过这个app

00:38.440 --> 00:43.400
这个app里边是不是加了一个actress 对不对 扩展了一个属性 对 这就是扩展

00:44.040 --> 00:49.080
那么在ag里边呢 它提供了一种机制啊 你可以去非常方便的扩展这些东西

00:49.600 --> 00:51.640
扩展什么呢 包括什么app cation

00:53.810 --> 01:00.170
app cation 就是app对象 我们之前扩展的就是它 对吧 都是一个全局的 一个ag应用的只有一个

01:00.970 --> 01:02.810
呃 然后呢 扩展什么context

01:03.850 --> 01:06.730
再怎么呢 再请求上下吻里边 对吧 再处理请求

01:07.290 --> 01:08.450
呃 就这个东西

01:10.610 --> 01:16.730
就这个东西 扩展它 或者是扩展request 扩展response 就是往里边加属性加方法

01:17.490 --> 01:19.490
呃 然后呢 是扩展什么的 扩展那个就是

01:20.930 --> 01:22.410
helper 这都可以扩展

01:23.150 --> 01:29.830
那么具体怎么扩展的 首先我们一个说app cation的话 扩展的还比较特殊 它可以有两种方式扩展

01:30.950 --> 01:36.870
第一种方式就是在这个启动的时候 它会运行这个app.js 会运行这个东西 这个模块

01:37.230 --> 01:43.030
instagram这里面给它直接加就行了 不过呢 这种扩展方式呢 它是加到哪呢 加到实力里边去了

01:43.750 --> 01:50.950
相当于这个app对象 它是怎么来的呢 它是通过这个东西来创建的 通过六一个app对象

01:51.930 --> 02:01.090
app cation对象 通过它来创建的这个对象 那么创建的对象 把对象传进来 你是扩展到哪儿的 扩展到它的实力里边去的

02:01.810 --> 02:06.890
而ag.js呢 它给你提供的扩展 真正的扩展方式呢 是扩展到圆形上面的

02:07.490 --> 02:10.690
不过呢 对app来说也无所谓 因为它实力的话也只有一个

02:11.810 --> 02:13.130
那么如果说你要扩展的话

02:14.370 --> 02:15.970
你可以在这里进行扩展

02:16.750 --> 02:21.830
可以在app里边加上一个文件夹 叫extension extend

02:23.950 --> 02:24.550
extend

02:25.950 --> 02:30.670
那么在这里边进行扩展 比方说我们要扩展这个app cation 那怎么扩展能够新建个文件

02:31.430 --> 02:32.110
app cation

02:32.830 --> 02:33.430
调解一下

02:34.230 --> 02:43.110
好 那么这边直接导出一个对象 这个对象的所有所有属性 它会全部加到这个app cation的圆形上面去 是不是就可以直接用了

02:43.530 --> 02:48.050
比方说这个ag cation 那么我们怎么来扩展的 我们就直接写个ag cation 啊 属性

02:49.570 --> 02:52.850
然后呢 这边直接倒过来 对吧 这样的可以扩展

02:53.690 --> 03:02.330
好 那么这句话是不是不要了 我们把扩展的东西统一放到这 那现在能不能用ag cation的 我们来看一下吧 访问一下 看能不能用就行了 好 现在打开

03:04.970 --> 03:05.610
npm装

03:12.190 --> 03:12.990
好 打开了啊

03:13.970 --> 03:20.130
不过 现在是用vue来做的 是吧 用vue来做的 它也没有也没有使用这个ag cation

03:20.850 --> 03:23.690
啊 我们这里随便来一个吧 我们就在这里随便加一个吧

03:24.610 --> 03:25.810
我们这里直接输出吧

03:26.610 --> 03:35.610
uh this and actions 看一下能不能得到结果 能不能得到结果 好 保存 然后呢 我们接下访问啊 访问那个

03:36.890 --> 03:37.570
nokahos

03:38.350 --> 03:38.670
期限

03:40.110 --> 03:48.270
好 看一下这里有没有输出 是不是有输出 对吧 有输出是不是没有问题的 对不对 啊 这是扩展这个x的 不过呢 它是扩展到圆形上面的啊

03:49.110 --> 03:57.350
好 这是扩展这个啊 IPK型 那么后边呢 其他的东西呢 也是类似的 比方的contact色 那么这个我只加了哪呢 这个我是加到这

03:58.870 --> 04:01.350
啊 extend 然后呢 IPK型

04:01.650 --> 04:08.010
ges 是吧 导出一个对象 他会把对象的东西呢 放到这个圆形上面 那么下面的是一样的啊 contact色放到哪呢

04:08.410 --> 04:10.490
那就放到这个contact色里面去

04:11.450 --> 04:13.930
不用说了吧啊 然后呢request 放到哪呢

04:14.930 --> 04:16.170
是放到这个request 里面去

04:18.290 --> 04:25.010
啊 然后呢 response 呢 它是放到这个response 里面去啊 helper 呢 自然是放到helper 里面去 我们之前讲那个helper 的时候

04:25.890 --> 04:28.610
那么是不是讲过这个东西 是吧 我们只是没有写啊

04:29.450 --> 04:31.050
helper 里面去 对不对

04:31.410 --> 04:39.410
加到这边去 就可以进行扩展 那么有这么多扩展点 我们到底有的时候扩展一些方法呀 扩展一些属性啊 对吧 我们这里还是

04:39.410 --> 04:44.050
当然可以扩展方法吗 可以 当然可以啊 比方说一个 随便写个方法啊

04:46.930 --> 04:50.530
对吧 随便写个方法 他都可以扩展 比方说我们在这里啊 调一下这个方法

04:52.690 --> 04:53.210
啊保存

04:56.290 --> 04:56.530
刷新

04:57.650 --> 04:58.530
不得到了吗 对不对

04:59.510 --> 05:04.030
好 那么到底扩展哪呢 我给大家画了一个扩展决策书啊 这个东西是很灵活的啊

05:04.790 --> 05:10.150
其实呢 你自己分析也能分析得出来 因为IPK型是全局的 他跟某一式请求没有什么关系

05:10.430 --> 05:13.550
就是在请求中发生没有发生的时候 他也可以使用的

05:15.070 --> 05:19.950
比方说像怎么contact 是呢 是跟请求相关的 这几个字不都跟请求相关的

05:20.190 --> 05:22.350
contact 是然后request

05:23.030 --> 05:27.710
response helper 什么都跟请求相关 那么这都跟请求相关的 那么到底要选哪一个呢 我给大家

05:27.930 --> 05:28.570
画一个决策书

05:29.730 --> 05:34.890
那如果说你首先判断一下你要扩展的方法也好 属性也好 这个要使用它的话

05:35.450 --> 05:42.570
是不是一定在请求的过程中使用 如果说是的话 我们进一步 进一步确定 如果说不是的话 那就直接扩展IPK型

05:42.770 --> 05:45.250
对吧 请求都没有 那只有IPK型可以扩展

05:46.330 --> 05:53.290
那如果比方说像这个x小时啊 这个x小时呢 我也不能确定啊 因为他是他的作用呢 是请求远程地址

05:53.490 --> 05:59.730
对吧 请求远程地址 那不一定是要有一个请求到我的服务器 我才去请求远程地址 不一定的 对吧 我可能

06:01.090 --> 06:05.490
没事的时候去请求一下 或者启动的时候就去请求一下 所以说我把扩展到IPK型里面

06:06.290 --> 06:10.290
那如果说我先处理的东西是在请求过程中发生的那么要继续确定

06:11.450 --> 06:18.410
就问这么四个问题 首先问自己 你这个是你这个扩展的方法是不是为了获取请求中的一些信息呢

06:18.770 --> 06:23.850
比方说获取一些加方便的你扩展一个东西 扩展一个方法 更加方便的来获取文件数据

06:24.890 --> 06:29.010
等等等等 是不是要获取请求中的信息呢 如果是的话 那么就扩展request

06:30.250 --> 06:35.130
那么你如果说不是的话 那就问自己 你扩展这个方法也好 扩展这个属性也好 是不是为了

06:35.810 --> 06:38.610
更好的来设置享用中的信息呢

06:39.410 --> 06:41.930
比方设置一个直接复制一个属性 或者设置一个

06:42.530 --> 06:46.970
直接调用一个方法就可以直接让他让对方下载文件 对不对 总之呢

06:47.970 --> 06:50.770
是不是跟小硬相关的 如果说是的话 扩展reresponse

06:51.490 --> 06:55.170
如果这两个都不是的话 你既可以扩展contact是也可以扩展have

06:55.170 --> 07:00.370
这个东西呢 这两个的是非常非常类似的啊 就是处理这一边角 边边角角

07:00.650 --> 07:05.010
就是没有扩展没有跟他无关 跟他也无关 那么放到这也可以放到这

07:06.690 --> 07:13.850
好 这是那这是这一块 那么我建议大家呢 如果说跟业务比较相关的啊 跟业务功能比较相关的 你放到这

07:14.450 --> 07:17.650
如果说跟业务都能无关的啊 你可以放到这个help里边

07:18.530 --> 07:23.010
好 就是扩展点啊 其他的就没有什么了啊 他就提供了这么一种机制来进行扩展

07:23.930 --> 07:24.930
ok

