WEBVTT

00:00.000 --> 00:02.000
这节课呢 咱们把那个讲了

00:02.000 --> 00:04.500
通用模型的体讯讲了

00:04.500 --> 00:06.700
讲之前呢 我们先把这些端气发招了

00:06.700 --> 00:09.500
之前的一个毫无意义的删掉啊

00:09.500 --> 00:10.500
这个玩意删掉

00:10.500 --> 00:12.500
这个玩意删掉

00:12.500 --> 00:17.200
这个配置这里也删掉

00:17.200 --> 00:20.200
Rotor里边这个玩意删掉

00:20.200 --> 00:23.200
OK 把这些端气发招的玩意删掉

00:23.200 --> 00:26.700
然后呢 这节课我们说了一下

00:26.700 --> 00:28.700
通用模型 啥意思呢

00:28.700 --> 00:31.200
就是这里的问题 你看啊

00:31.200 --> 00:34.200
HomeJS里边有一些模型是通用的

00:34.200 --> 00:36.200
什么模型是通用的呢

00:36.200 --> 00:37.200
你看这个模型

00:37.200 --> 00:40.200
模型里边优着这个属性是不是通用的

00:40.200 --> 00:42.200
因为别的IG信是不是也可能会需要

00:42.200 --> 00:44.200
这个模型交给试图的时候

00:44.200 --> 00:47.200
比方说这个Home试图里边要显示一个ID号

00:47.200 --> 00:48.200
什么什么什么的吧

00:48.200 --> 00:50.200
那别的试图里边可能也要显示

00:50.200 --> 00:52.200
因为登入过后呢 可能到处都要显示这个东西

00:52.200 --> 00:54.200
这个模型是不是通用的

00:54.200 --> 00:56.200
那么如果说通用的你不提去的话

00:56.200 --> 00:58.200
就会导致在很多的IG信里边

00:58.200 --> 01:00.200
因为模型 因为我们试图需要嘛

01:00.200 --> 01:02.200
所以说在很多IG信里边

01:02.200 --> 01:04.200
我们都会把这些模型全部要给过去

01:04.200 --> 01:06.200
而另一方面呢

01:06.200 --> 01:08.200
像有一些数据呢

01:08.200 --> 01:10.200
它也是通用的 比方说像这个数据

01:10.200 --> 01:12.200
这个数据是不是也是通用的

01:12.200 --> 01:14.200
你看啊 这里是有这个数据

01:14.200 --> 01:16.200
然后这里边是不是也有这个数据

01:16.200 --> 01:18.200
对吧 是不是都有这个数据

01:18.200 --> 01:20.200
虽然只是一个字不串

01:20.200 --> 01:22.200
但是是不是也是通用的 对不对

01:22.200 --> 01:24.200
那么像这种通用的东西啊

01:24.200 --> 01:26.200
我们就尽量的要把它提取一下

01:26.200 --> 01:28.200
尽量的进行提取

01:28.200 --> 01:30.200
那具体是怎么来提取呢

01:30.200 --> 01:32.200
好 咱们来看一下这张图

01:32.200 --> 01:34.200
我们的MVC模式里边

01:34.200 --> 01:36.200
控制器生成模型 对吧

01:36.200 --> 01:38.200
由它来生成模型

01:38.200 --> 01:40.200
那么模型里边呢 我把模型交给试图

01:40.200 --> 01:42.200
试图去渲染 现在过后呢

01:42.200 --> 01:44.200
试图更改 就是用户的操作过后呢

01:44.200 --> 01:46.200
可能又会请求服务器 又会交给Ctrl

01:46.200 --> 01:48.200
又生成新的模型

01:48.200 --> 01:50.200
我们现在就关注这一块

01:50.200 --> 01:52.200
在模型里边呢 有一些属性

01:52.200 --> 01:54.200
因为模型就是个对象嘛

01:54.200 --> 01:56.200
有一些属性呢 可能是通用的

01:56.200 --> 01:58.200
一个情况 一个是全取通用

01:58.200 --> 02:00.200
这叫全取通用的

02:00.200 --> 02:02.200
就是跟请求无关系 没有什么关系

02:02.200 --> 02:04.200
任何请求 任何试图

02:04.200 --> 02:06.200
它都有可能会用到的数据

02:06.200 --> 02:08.200
是不是像这些数据 对吧

02:08.200 --> 02:10.200
这个数据都固定的

02:10.200 --> 02:12.200
那么像这种数据呢 叫全取通用模型

02:12.200 --> 02:14.200
全取通用模型呢 我们需要提取一下

02:14.200 --> 02:16.200
另外一种叫上下文通用模型

02:16.200 --> 02:18.200
就是呢 它并不是全取使用

02:18.200 --> 02:20.200
但是在某一部分请求里边会使用

02:20.200 --> 02:22.200
比方说像登录过后

02:22.200 --> 02:24.200
才能访问的页面里边

02:24.200 --> 02:26.200
那么那些页面呢 可能会用到

02:26.200 --> 02:28.200
这些用户信息 对不对

02:28.200 --> 02:30.200
那么这些模型呢 我们也可能会需要

02:30.200 --> 02:32.200
提取一下 那么最后的就是局部模型

02:32.200 --> 02:34.200
局部模型就是具体的埃克西里边

02:34.200 --> 02:36.200
像这些地区数据 对吧

02:36.200 --> 02:38.200
像这些模型

02:38.200 --> 02:40.200
所以我们 这是局部模型

02:40.200 --> 02:42.200
那么这些模型具体怎么提取呢

02:42.200 --> 02:44.200
Agg呢 还有定义的规范

02:44.200 --> 02:46.200
它说啊 你只要

02:46.200 --> 02:48.200
把全局模型放到这儿

02:48.200 --> 02:50.200
就行了 你把

02:50.200 --> 02:52.200
上下文通的模型放到这儿

02:53.200 --> 02:55.200
然后呢 你把具体的局部模型

02:55.200 --> 02:57.200
你就自己放到这个位置

02:57.200 --> 02:59.200
把局部模型直接放到这个位置

02:59.200 --> 03:02.200
当把这个模型交给仕途的时候

03:02.200 --> 03:04.200
它会自动的把你的局部模型

03:04.200 --> 03:06.200
你这一块放的是什么呢

03:06.200 --> 03:08.200
实际上这一块放的就是局部模型

03:08.200 --> 03:10.200
放的就是局部模型

03:10.200 --> 03:12.200
它会自动的把局部模型

03:12.200 --> 03:15.200
和上下文中的这个地方的对象

03:15.200 --> 03:16.200
和这个地方的对象

03:16.200 --> 03:18.200
然后合并 合并成一个完整的对象

03:18.200 --> 03:20.200
交给不用 它会自动完成

03:21.200 --> 03:23.200
因此呢 你要做的事情就很简单的

03:23.200 --> 03:25.200
比方说像这一块

03:25.200 --> 03:26.200
像这个东西

03:26.200 --> 03:27.200
这个东西的话

03:27.200 --> 03:29.200
我们就可以这样子来处理 看着啊

03:29.200 --> 03:31.200
我们这样子来处理

03:31.200 --> 03:33.200
我们呢 把它放到

03:33.200 --> 03:35.200
这个全局模型里边

03:35.200 --> 03:37.200
放到App.locals里边

03:37.200 --> 03:38.200
那么怎么放的

03:38.200 --> 03:39.200
我们一般来说会放到

03:39.200 --> 03:40.200
起到这个位置

03:40.200 --> 03:41.200
在启动过后

03:41.200 --> 03:44.200
我们往App.locals里边

03:44.200 --> 03:45.200
设置一个

03:45.200 --> 03:47.200
全局的标题叫做

03:47.200 --> 03:49.200
地区数据库

03:49.200 --> 03:50.200
对不对

03:50.200 --> 03:51.200
这是全局的标题

03:51.200 --> 03:54.200
好 有了这个全局的模型之外

03:54.200 --> 03:55.200
之后你看我们回到这

03:55.200 --> 03:57.200
这些地方我们只需要

03:57.200 --> 03:58.200
写差异性的东西就行了

03:58.200 --> 03:59.200
比方说

03:59.200 --> 04:01.200
抬头为首页

04:01.200 --> 04:04.200
好 这边只是登录

04:04.200 --> 04:07.200
登录

04:07.200 --> 04:08.200
是不这样子

04:08.200 --> 04:10.200
我们这样子来处理一下

04:10.200 --> 04:11.200
处理好了之后

04:11.200 --> 04:12.200
你看着

04:12.200 --> 04:13.200
咱们处理好了之后

04:13.200 --> 04:16.200
到了仕图里边

04:16.200 --> 04:18.200
你看我们现在这个局部模型

04:18.200 --> 04:21.200
给它的局部模型里边

04:21.200 --> 04:22.200
是不是只有一个title

04:22.200 --> 04:24.200
就这三个属性对不对

04:24.200 --> 04:27.200
是不是只有这三个属性

04:27.200 --> 04:29.200
我们这里最好换一个名字

04:29.200 --> 04:30.200
避免冲突

04:30.200 --> 04:31.200
global title

04:31.200 --> 04:34.200
全局标题

04:34.200 --> 04:35.200
你看啊

04:35.200 --> 04:37.200
这里边我们给它三个属性

04:37.200 --> 04:38.200
title error老片ID

04:38.200 --> 04:40.200
对吧 这边给它一个属性

04:40.200 --> 04:41.200
那么合并起来

04:41.200 --> 04:43.200
是不是就有四个属性了

04:43.200 --> 04:44.200
那么它到时候

04:44.200 --> 04:46.200
宣扰这个模型模板的时候

04:46.200 --> 04:47.200
宣扰这个就是模板的时候

04:47.200 --> 04:49.200
它会把我们的局部模型

04:49.200 --> 04:51.200
和我们的全局模型进行合并

04:51.200 --> 04:53.200
合并过后交给模板

04:53.200 --> 04:54.200
那么模板里边

04:54.200 --> 04:56.200
比方说我们的home

04:56.200 --> 04:58.200
在这里边

04:58.200 --> 04:59.200
header里边

04:59.200 --> 05:00.200
那么这个时候

05:00.200 --> 05:02.200
title这里我就可以这样子写

05:02.200 --> 05:03.200
这是局部的标题

05:03.200 --> 05:05.200
然后后边写个横杆

05:05.200 --> 05:08.200
然后这边写上一个global title

05:08.200 --> 05:09.200
因为它是合并

05:09.200 --> 05:11.200
合并就成一个完整对象了

05:11.200 --> 05:12.200
对不对

05:12.200 --> 05:13.200
保存

05:13.200 --> 05:15.580
咱们来看一下吧

05:15.580 --> 05:17.580
npm装

05:17.580 --> 05:20.780
刷新

05:20.780 --> 05:22.780
你看是不是还是可以显示出来

05:22.780 --> 05:23.780
对吧

05:23.780 --> 05:24.780
那有东西说

05:24.780 --> 05:25.780
是不是有缓存没变了

05:25.780 --> 05:26.780
那我这个放个这个嘛

05:26.780 --> 05:27.780
放个这个符号

05:27.780 --> 05:28.780
好

05:28.780 --> 05:29.780
然后呢

05:29.780 --> 05:30.780
刷新

05:30.780 --> 05:31.780
你看是不是变了

05:31.780 --> 05:32.780
对不对

05:32.780 --> 05:33.780
然后我们看一下logging

05:34.780 --> 05:35.780
说没问题

05:35.780 --> 05:36.780
对吧 都没问题

05:36.780 --> 05:37.780
明儿这意思吧

05:37.780 --> 05:38.780
也就是说

05:38.780 --> 05:39.780
我们就可以提取一些权确的东西了

05:39.780 --> 05:40.780
它会自动进行合并

05:40.780 --> 05:42.780
而在我们的ag型里边

05:42.780 --> 05:43.780
是不是就可以少关心一些事情

05:43.780 --> 05:44.780
对吧

05:44.780 --> 05:45.780
可以少关心一些

05:45.780 --> 05:47.780
这些权确的通用的东西

05:47.780 --> 05:48.780
我就不管了

05:48.780 --> 05:49.780
也差异性的东西

05:49.780 --> 05:50.780
局部的东西

05:51.780 --> 05:52.780
这是权确模型的提取

05:52.780 --> 05:54.780
那么权确模型就提取出来了

05:54.780 --> 05:56.780
局部模型和我也跟权确模型一样合并

05:56.780 --> 05:57.780
然后来看一下

05:57.780 --> 05:58.780
上下文通用模型的

05:58.780 --> 05:59.780
这个东西

05:59.780 --> 06:00.780
比方说

06:00.780 --> 06:01.780
咱们在home里边

06:01.780 --> 06:03.780
不是要用到用户吗

06:03.780 --> 06:04.780
当前都录了用户

06:04.780 --> 06:05.780
那么我们可以想象

06:05.780 --> 06:06.780
在别的ag型里边

06:06.780 --> 06:08.780
也可能会用到用户

06:08.780 --> 06:10.780
还要去试图里边

06:10.780 --> 06:12.780
是不是也可能会用到一些用户信息

06:12.780 --> 06:13.780
那么这些意思

06:13.780 --> 06:14.780
也是属于通用模型

06:14.780 --> 06:15.780
只不过它的范围

06:15.780 --> 06:16.780
不像权确那么广

06:16.780 --> 06:17.780
它是在某一些

06:17.780 --> 06:19.780
或者是某几个ag型中

06:19.780 --> 06:21.780
或者是某几个的页面中

06:21.780 --> 06:22.780
会使用

06:22.780 --> 06:23.780
那么像这种情况

06:23.780 --> 06:24.780
我们一般来说

06:24.780 --> 06:25.780
就写到中间键里边

06:25.780 --> 06:26.780
比方说在这

06:26.780 --> 06:27.780
我们之前是写到哪儿的

06:27.780 --> 06:28.780
之前是不是写到

06:28.780 --> 06:29.780
这个stats里边的

06:29.780 --> 06:30.780
好

06:30.780 --> 06:31.780
现在我们写到locals里边

06:31.780 --> 06:32.780
locals里边

06:32.780 --> 06:35.780
我们给locals里边加上一个

06:35.780 --> 06:38.780
加上一个U字的属性

06:38.780 --> 06:39.780
给它等于这个

06:39.780 --> 06:40.780
那么相当于是locals

06:40.780 --> 06:41.780
本来是一个对象

06:41.780 --> 06:42.780
对吧

06:42.780 --> 06:43.780
一个空对象

06:43.780 --> 06:44.780
往空对象里边是加

06:44.780 --> 06:45.780
加那个U字的属性

06:45.780 --> 06:46.780
对吧

06:46.780 --> 06:48.780
当前或者叫localU字

06:48.780 --> 06:49.780
我就叫U字

06:49.780 --> 06:50.780
U字属性

06:50.780 --> 06:51.780
加进去

06:51.780 --> 06:52.780
好

06:52.780 --> 06:53.780
加进去了过后

06:53.780 --> 06:54.780
我们现在到了

06:54.780 --> 06:55.780
home.js里边去

06:55.780 --> 06:56.780
在这

06:56.780 --> 06:57.780
这里不是

06:57.780 --> 06:59.780
要传递这个模型吗

06:59.780 --> 07:01.780
我们这里只需要传递

07:01.780 --> 07:02.780
局部模型就行了

07:02.780 --> 07:04.780
只需要传递局部模型

07:04.780 --> 07:05.780
然后我们这里

07:05.780 --> 07:06.780
是不是要给

07:06.780 --> 07:07.780
Promises

07:07.780 --> 07:08.780
对不对

07:08.780 --> 07:09.780
那么我们这里

07:09.780 --> 07:10.780
只需要给一个模型

07:10.780 --> 07:13.540
model

07:13.540 --> 07:14.540
等于什么呢

07:14.540 --> 07:16.540
等于

07:16.540 --> 07:17.540
title为首页

07:19.540 --> 07:20.540
Promises

07:21.540 --> 07:22.540
Risp

07:22.540 --> 07:23.540
这里就换成Risp

07:23.540 --> 07:26.540
第二个名字吧

07:27.540 --> 07:28.540
给它

07:28.540 --> 07:29.540
那么这样子的写上去

07:29.540 --> 07:30.540
看上去更加合理

07:30.540 --> 07:31.540
你看

07:31.540 --> 07:32.540
非常简洁的代码

07:32.540 --> 07:33.540
我们只需要

07:33.540 --> 07:34.540
搞定局部模型就行了

07:34.540 --> 07:35.540
那么这些

07:35.540 --> 07:36.540
同用的模型

07:36.540 --> 07:37.540
它会自动进行和平

07:37.540 --> 07:38.540
这是我们局部的东西

07:38.540 --> 07:39.540
对吧

07:39.540 --> 07:40.540
我们要在页面上

07:40.540 --> 07:41.540
显示首页标题

07:41.540 --> 07:42.540
然后呢

07:42.540 --> 07:43.540
这是我们的那个

07:44.540 --> 07:45.540
这是我们的就是

07:45.540 --> 07:46.540
省份数据

07:46.540 --> 07:47.540
地区数据

07:47.540 --> 07:48.540
然后剩下的

07:48.540 --> 07:49.540
什么用户啊

07:49.540 --> 07:50.540
还有这个

07:50.540 --> 07:51.540
还有页面上的

07:51.540 --> 07:52.540
什么这个这个地方

07:52.540 --> 07:53.540
一些全局的数据

07:53.540 --> 07:54.540
它会自动进行和平

07:54.540 --> 07:55.540
因为我们这里边

07:55.540 --> 07:56.540
它运行了中间键

07:56.540 --> 07:57.540
对不对

07:57.540 --> 07:58.540
运行了这个中间键

07:58.540 --> 07:59.540
中间键里边

07:59.540 --> 08:00.540
是不是加了一个局部模型

08:00.540 --> 08:01.540
对吧

08:01.540 --> 08:02.540
就是一个

08:02.540 --> 08:03.540
局部

08:03.540 --> 08:04.540
就是上下文通用模型

08:04.540 --> 08:05.540
那么它到时候呢

08:05.540 --> 08:06.540
会将文的局部模型

08:06.540 --> 08:07.540
上下文通用模型

08:07.540 --> 08:08.540
全局模型

08:08.540 --> 08:09.540
全部进行和平

08:09.540 --> 08:10.540
和平之后呢

08:10.540 --> 08:11.540
形成一个完整的模型

08:11.540 --> 08:12.540
交给仕图

08:12.540 --> 08:13.540
那么仕图里边

08:13.540 --> 08:14.540
就不用改了

08:14.540 --> 08:15.540
仕图里边能不能得到U

08:15.540 --> 08:16.540
可以得到U

08:16.540 --> 08:17.540
它棍合过后就有U字了

08:17.540 --> 08:18.540
好

08:18.540 --> 08:19.540
咱们来看一下

08:19.540 --> 08:20.540
防线手艺

08:20.540 --> 08:22.540
你看

08:22.540 --> 08:23.540
是不是能得到U字了

08:23.540 --> 08:24.540
对不对

08:24.540 --> 08:25.540
就这么一回事

08:25.540 --> 08:26.540
就是可以把一个

08:26.540 --> 08:28.540
通用模型提取出来

08:28.540 --> 08:29.540
通过这种方式

08:29.540 --> 08:30.540
其他没啥了

08:30.540 --> 08:31.540
就说一下这个地方

