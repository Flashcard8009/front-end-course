WEBVTT

00:00.000 --> 00:04.340
大家好 我是今天的主要老师 叫陈四彤 陈老师

00:04.340 --> 00:08.000
今天由我给大家来讲一个GS中只有李承辈的一节课

00:08.000 --> 00:11.000
大家好 我叫季晨 今天由我来助讲一节

00:11.000 --> 00:13.000
据说具有李承辈的一节课

00:13.000 --> 00:16.000
对对 这一节课我的目的就是给你们断了

00:16.000 --> 00:19.000
以后再也不用听你们承辈的课了

00:19.000 --> 00:21.000
最后一节是不可能的

00:23.000 --> 00:25.000
为什么叫李承辈一节课呢

00:25.000 --> 00:29.000
因为我们这节课名叫做GS收官 对吧

00:29.000 --> 00:31.000
比如说到这一课为止的话

00:31.000 --> 00:34.000
你基本上可以把这个这么说吧

00:34.000 --> 00:36.000
就是这一课完事以后

00:36.000 --> 00:38.000
你可以把我忘了

00:38.000 --> 00:41.000
整个GS的这个所有的攻击性的一些内容

00:41.000 --> 00:43.000
就前提的这样一些内容和技术知识

00:43.000 --> 00:44.000
已经全高于断落了

00:44.000 --> 00:47.000
如果你再往深了去加深来这个GS的话

00:47.000 --> 00:51.000
你可以去看看我后面讲的这个你不知道的GS

00:51.000 --> 00:52.000
当然这么跟你说

00:52.000 --> 00:54.000
这一课完事

00:54.000 --> 00:58.000
整个的这个GS所有的技术部分都高于断落了

00:58.000 --> 01:01.000
这个收官的知识点其实稍微比较杂一点

01:01.000 --> 01:03.000
其实就是对之前那个查却不漏

01:03.000 --> 01:05.000
这个课程我也没怎么备

01:05.000 --> 01:08.000
我就是按照我的记忆做出这样一个PBT

01:08.000 --> 01:11.000
所以说就是这个翻到哪儿就讲到哪儿

01:11.000 --> 01:12.000
那这个

01:12.000 --> 01:13.000
历史上最随意的一段

01:13.000 --> 01:14.000
对 最随意的一段

01:14.000 --> 01:16.000
那就走 走 走

01:16.000 --> 01:17.000
走起走起

01:17.000 --> 01:20.000
OK 那这一课其实咱们先来讲

01:20.000 --> 01:21.000
应该讲的并不是这个论坑

01:21.000 --> 01:23.000
现在基本组成了

01:23.000 --> 01:24.000
在我的脑海中

01:24.000 --> 01:25.000
确实挺随意的

01:25.000 --> 01:27.000
这个脑海中应该是到个tap

01:27.000 --> 01:28.000
对 到个tap

01:28.000 --> 01:29.000
头

01:29.000 --> 01:30.000
对 头

01:30.000 --> 01:32.000
那这个到tap具体是干什么呢

01:32.000 --> 01:34.000
其实我直接跟你说完以后的话

01:34.000 --> 01:35.000
花10分钟的时间

01:35.000 --> 01:36.000
可以产出清楚

01:36.000 --> 01:38.000
但我觉得不够深刻一些

01:38.000 --> 01:39.000
为什么说不够深刻呢

01:39.000 --> 01:41.000
因为我希望你能了解一下

01:41.000 --> 01:43.000
这个整个的就是网页

01:43.000 --> 01:44.000
当你从

01:44.000 --> 01:46.000
当你通过这个六眼气扣端

01:46.000 --> 01:48.000
获取过来以后的话

01:48.000 --> 01:50.000
它今天是哪些这样的一个过程

01:50.000 --> 01:52.000
这个过程如果你都了解以后的话

01:52.000 --> 01:54.000
我相信这个一个到个tap的话

01:54.000 --> 01:55.000
这个小的知识点

01:55.000 --> 01:56.000
就不足特别绿了

01:56.000 --> 01:58.000
目的就是跟你讲的

01:58.000 --> 01:59.000
客户民心 追行似乎的

01:59.000 --> 02:00.000
忘都忘不掉

02:00.000 --> 02:02.000
多忘都斩断反侧

02:02.000 --> 02:03.000
光光创强都不行

02:03.000 --> 02:04.000
就忘不掉了

02:04.000 --> 02:05.000
就是这个意思

02:05.000 --> 02:06.000
就是这个意思

02:06.000 --> 02:07.000
那其实那个

02:07.000 --> 02:09.000
主要目的是想深入浅出一下

02:09.000 --> 02:10.000
OK

02:10.000 --> 02:12.000
那这边咱拋出一个小的疑问

02:12.000 --> 02:14.000
我相信这个疑问的话

02:14.000 --> 02:16.000
对于很多这样的一个公司

02:16.000 --> 02:17.000
面试的时候

02:17.000 --> 02:19.000
他都会去

02:19.000 --> 02:20.000
就是问人

02:20.000 --> 02:21.000
他们出这样一个题

02:21.000 --> 02:23.000
那很多这个同学

02:23.000 --> 02:24.000
你自身的这样的一个对前端

02:24.000 --> 02:26.000
对网络的一个了解的话

02:26.000 --> 02:27.000
可能达成这样的项目

02:27.000 --> 02:28.000
它也是不一样的

02:28.000 --> 02:29.000
不一样的

02:29.000 --> 02:30.000
不一样

02:30.000 --> 02:32.000
那这个问题是啥呢

02:32.000 --> 02:34.000
就是当你通过浏览器

02:34.000 --> 02:37.000
当你通过一个浏览器

02:37.000 --> 02:39.000
像服务器发送一个请求

02:39.000 --> 02:40.000
想把网页请求过来的时候

02:40.000 --> 02:42.000
大致经历过哪些过程

02:42.000 --> 02:44.000
这几个过程的话

02:44.000 --> 02:45.000
其实呢

02:45.000 --> 02:47.000
我们可以往深入去讲

02:47.000 --> 02:48.000
大家也可以往

02:48.000 --> 02:49.000
稍微这个浅的话

02:49.000 --> 02:50.000
向它浅览去讲

02:50.000 --> 02:51.000
那咱们这一课

02:51.000 --> 02:52.000
并不是网络的一个内容

02:52.000 --> 02:54.000
具体深入的东西

02:54.000 --> 02:55.000
放在网络之后

02:55.000 --> 02:56.000
我们去来讲

02:56.000 --> 02:57.000
放在网络之中

02:57.000 --> 02:58.000
我们去来讲

02:58.000 --> 02:59.000
那现在呢

02:59.000 --> 03:01.000
我主要是把这个几个

03:01.000 --> 03:02.000
具体的步骤

03:02.000 --> 03:03.000
咱给他划分一下

03:03.000 --> 03:05.000
那我们知道

03:05.000 --> 03:06.000
我现在打开一个页面

03:06.000 --> 03:07.000
打开一个页面

03:07.000 --> 03:08.000
这个页面的话

03:08.000 --> 03:09.000
如果输个网址

03:09.000 --> 03:10.000
在这3w点

03:10.000 --> 03:11.000
百度点com

03:11.000 --> 03:12.000
我随便来一个

03:12.000 --> 03:13.000
OK

03:13.000 --> 03:14.000
你会发现

03:14.000 --> 03:15.000
输完网址以后的话

03:15.000 --> 03:16.000
我一点回说这个页面

03:16.000 --> 03:18.000
就展示在你面前了

03:18.000 --> 03:19.000
对吧

03:19.000 --> 03:20.000
是瞬间就搞定那个事

03:20.000 --> 03:21.000
但其实呢

03:21.000 --> 03:22.000
很多很多很多的步骤

03:22.000 --> 03:23.000
对吧

03:23.000 --> 03:24.000
那首先呢

03:24.000 --> 03:25.000
我可以在这边

03:25.000 --> 03:26.000
给大家去划分一下吧

03:26.000 --> 03:27.000
行吧

03:27.000 --> 03:28.000
大概简单的来铝铝

03:28.000 --> 03:29.000
简单来铝铝

03:29.000 --> 03:30.000
就是从你输入网址

03:30.000 --> 03:32.000
敲回车那一刻起

03:32.000 --> 03:34.000
到你完整的看到这个网页

03:34.000 --> 03:35.000
都发生了什么东西

03:35.000 --> 03:36.000
对

03:36.000 --> 03:37.000
到底都发生了

03:37.000 --> 03:38.000
什么事情对吧

03:38.000 --> 03:39.000
好那现在呢

03:39.000 --> 03:40.000
咱们看一下

03:40.000 --> 03:41.000
我还是写一个

03:41.000 --> 03:42.000
创新页面

03:42.000 --> 03:43.000
在这里面

03:43.000 --> 03:44.000
我来一个HMR5

03:44.000 --> 03:45.000
完了之后

03:45.000 --> 03:46.000
Tab一下

03:46.000 --> 03:47.000
创新完整个结构以后的话

03:47.000 --> 03:48.000
好在这写个GS

03:48.000 --> 03:49.000
那我在这呢

03:49.000 --> 03:50.000
先分下这个步骤

03:50.000 --> 03:51.000
那你是输了一个URL对吧

03:51.000 --> 03:52.000
对

03:52.000 --> 03:53.000
就是我们所说的网址

03:53.000 --> 03:54.000
这个网址

03:54.000 --> 03:55.000
当你说完以后的话

03:55.000 --> 03:56.000
点完回车

03:56.000 --> 03:57.000
其实啊

03:57.000 --> 03:59.000
这一块进了一个过程

03:59.000 --> 04:01.000
就是有一个DNS

04:01.000 --> 04:02.000
这样一个过程对吧

04:02.000 --> 04:04.000
把URL给你解析成了

04:04.000 --> 04:05.000
一个具体的IP地址

04:05.000 --> 04:06.000
那是网络里面的东西

04:06.000 --> 04:07.000
当时谢谢

04:07.000 --> 04:08.000
对那IP地址

04:08.000 --> 04:09.000
你可以怎么来理解呢

04:09.000 --> 04:10.000
就是比如说

04:10.000 --> 04:11.000
我要找到你家的话

04:11.000 --> 04:12.000
你再给我一个

04:12.000 --> 04:13.000
你的具体地址对吧

04:13.000 --> 04:14.000
你这家是在哪个

04:14.000 --> 04:15.000
是哪个村

04:15.000 --> 04:16.000
那个村叫的

04:16.000 --> 04:17.000
这个市道村

04:17.000 --> 04:18.000
哪个区对吧

04:18.000 --> 04:19.000
完了之后

04:19.000 --> 04:20.000
比如说哪个小区

04:20.000 --> 04:21.000
对吧

04:21.000 --> 04:22.000
前面那些缅甸区

04:22.000 --> 04:23.000
对对对

04:23.000 --> 04:24.000
就很复杂一个地方对吧

04:24.000 --> 04:25.000
哎呀

04:25.000 --> 04:26.000
这个东西

04:26.000 --> 04:27.000
对到下

04:27.000 --> 04:28.000
具体上

04:28.000 --> 04:29.000
可能你家那门牌号

04:29.000 --> 04:31.000
我才能去找到你

04:31.000 --> 04:32.000
那我们通过一个URL

04:32.000 --> 04:33.000
其实它叫做

04:33.000 --> 04:34.000
资源定位器

04:34.000 --> 04:36.000
通过DNS解析完以后的话

04:36.000 --> 04:37.000
就能解析成

04:37.000 --> 04:38.000
这样一个具体的IP地址

04:38.000 --> 04:39.000
那我通过这个地址

04:39.000 --> 04:40.000
可以具体找到

04:40.000 --> 04:41.000
你这个真正的服务器

04:41.000 --> 04:42.000
对吧

04:42.000 --> 04:43.000
你到底在哪

04:43.000 --> 04:44.000
网络中这么大

04:44.000 --> 04:45.000
对吧

04:45.000 --> 04:46.000
在帽帽这个服务器中

04:46.000 --> 04:47.000
想找到你的话

04:47.000 --> 04:48.000
我必须得通过

04:48.000 --> 04:49.000
这个东西

04:49.000 --> 04:50.000
才能去具体的定位到

04:50.000 --> 04:52.000
那他找上IP以后的话

04:52.000 --> 04:54.000
具体找到你的一个地址以后

04:54.000 --> 04:55.000
好了

04:55.000 --> 04:56.000
那接下来的事情

04:56.000 --> 04:57.000
就是要跟你建立链接

04:57.000 --> 04:58.000
对吧

04:58.000 --> 04:59.000
我不能

04:59.000 --> 05:00.000
找到你

05:00.000 --> 05:01.000
我是找到你家

05:01.000 --> 05:02.000
对吧

05:02.000 --> 05:03.000
我不能直接碰碰他的肉

05:03.000 --> 05:04.000
对吧

05:04.000 --> 05:05.000
我得敲敲门对吧

05:05.000 --> 05:06.000
以表尊敬

05:06.000 --> 05:07.000
所以说这里面

05:07.000 --> 05:08.000
可能需要通过这个TCP

05:08.000 --> 05:09.000
对吧

05:09.000 --> 05:10.000
建立这样的一个

05:10.000 --> 05:11.000
三次握手

05:11.000 --> 05:12.000
对吧

05:12.000 --> 05:13.000
建立这样的一个链接

05:13.000 --> 05:15.000
那TCP建立完链接以后的话

05:15.000 --> 05:16.000
好了

05:16.000 --> 05:17.000
这个服务器

05:17.000 --> 05:18.000
反昏给你

05:18.000 --> 05:19.000
反昏给你以后

05:19.000 --> 05:21.000
它可能把一些

05:21.000 --> 05:22.000
一些资源

05:22.000 --> 05:23.000
这些资源的话

05:23.000 --> 05:24.000
当然有GS

05:24.000 --> 05:25.000
有这种脚本资源

05:25.000 --> 05:26.000
有HML

05:26.000 --> 05:27.000
有CSS

05:27.000 --> 05:28.000
还有一些图片等等

05:28.000 --> 05:29.000
这些脚本资源

05:29.000 --> 05:30.000
什么静态资源

05:30.000 --> 05:32.000
一并全部反昏给你

05:32.000 --> 05:33.000
反昏给你以后的话

05:33.000 --> 05:35.000
接下来就是我们要说的重点

05:35.000 --> 05:36.000
对吧

05:36.000 --> 05:37.000
反昏给你东西都已经

05:37.000 --> 05:38.000
给到你的

05:38.000 --> 05:39.000
对吧

05:39.000 --> 05:40.000
都已经到了这样的

05:40.000 --> 05:41.000
那个浏览器之中了

05:41.000 --> 05:42.000
那接下来的事情

05:42.000 --> 05:43.000
它就是要给的

05:43.000 --> 05:44.000
进行解析和展示

05:44.000 --> 05:46.000
对于GS的一个解析的话

05:46.000 --> 05:47.000
我们之前诚哥

05:47.000 --> 05:48.000
诚哥之前是讲过这样的

05:48.000 --> 05:49.000
一个时间线的

05:49.000 --> 05:50.000
是讲过

05:50.000 --> 05:51.000
对

05:51.000 --> 05:52.000
你可以直接看这个时间线

05:52.000 --> 05:53.000
时间线

05:53.000 --> 05:54.000
对

05:54.000 --> 05:55.000
我这样的一个顺序

05:55.000 --> 05:56.000
那这个时间线

05:56.000 --> 05:57.000
是专门

05:57.000 --> 05:58.000
真的为这个GS的

05:58.000 --> 05:59.000
并没有太说

05:59.000 --> 06:00.000
HML和CSS怎么一回事

06:00.000 --> 06:01.000
对吧

06:01.000 --> 06:02.000
怎么一个过程

06:02.000 --> 06:03.000
那我们可以把这个GS

06:03.000 --> 06:04.000
抛开它来

06:04.000 --> 06:05.000
它来看

06:05.000 --> 06:06.000
就是GS的时间线

06:06.000 --> 06:07.000
你可以直接看你的车的客

06:08.000 --> 06:09.000
我们这边

06:09.000 --> 06:10.000
就不再去追数了

06:10.000 --> 06:11.000
时间线

06:12.000 --> 06:13.000
OK

06:13.000 --> 06:14.000
那再来的话

06:14.000 --> 06:15.000
这个就是

06:15.000 --> 06:16.000
对于HML和CSS

06:16.000 --> 06:18.000
这样的一些解析和展示的话

06:18.000 --> 06:19.000
这个过程

06:19.000 --> 06:21.000
有没有专门的一个叫法

06:21.000 --> 06:22.000
叫做渲染

06:22.000 --> 06:23.000
渲染对吧

06:23.000 --> 06:24.000
渲染过程

06:24.000 --> 06:25.000
渲染

06:25.000 --> 06:26.000
渲染隐形做的事

06:26.000 --> 06:27.000
对

06:27.000 --> 06:28.000
OK 渲染过程

06:28.000 --> 06:29.000
渲染

06:29.000 --> 06:30.000
渲染隐形就是把HML和CSS

06:30.000 --> 06:32.000
最后给它展现出来

06:32.000 --> 06:33.000
展现到你的眼前

06:33.000 --> 06:34.000
但这个过程

06:34.000 --> 06:35.000
是有一个东西

06:35.000 --> 06:36.000
来参与的

06:36.000 --> 06:37.000
叫做渲染隐形

06:37.000 --> 06:38.000
一会我们来

06:38.000 --> 06:39.000
简单再来去说说它

06:39.000 --> 06:40.000
渲染

06:40.000 --> 06:41.000
我记得我之前

06:41.000 --> 06:42.000
在课上稍稍提过一些

06:42.000 --> 06:43.000
提过一些

06:43.000 --> 06:44.000
渲染隐形

06:44.000 --> 06:45.000
渲染隐形

06:45.000 --> 06:46.000
渲染隐形

06:46.000 --> 06:47.000
其实呢

06:47.000 --> 06:48.000
我这课

06:48.000 --> 06:50.000
就是再稍稍的再提一下

06:50.000 --> 06:51.000
再稍稍再提

06:51.000 --> 06:52.000
后面还有课

06:52.000 --> 06:53.000
后面还有课

06:53.000 --> 06:54.000
OK

06:54.000 --> 06:55.000
渲染完课以后的话

06:55.000 --> 06:56.000
当然整个的这样的一个

06:56.000 --> 06:57.000
其实当这个整个内容

06:57.000 --> 06:58.000
反问给你的时候

06:58.000 --> 07:01.000
这个就要经历另外一步

07:01.000 --> 07:02.000
就是

07:02.000 --> 07:03.000
服务器已经把东西

07:03.000 --> 07:04.000
都给你的对吧

07:04.000 --> 07:05.000
那你俩其实可以

07:05.000 --> 07:06.000
就是断开了

07:06.000 --> 07:07.000
这里面还有个

07:07.000 --> 07:08.000
叫做TCP的一个

07:08.000 --> 07:09.000
四四挥挥手

07:09.000 --> 07:10.000
为什么是三四

07:10.000 --> 07:11.000
为什么是四四

07:11.000 --> 07:12.000
咱们在网络课中

07:12.000 --> 07:13.000
会详细的去来讲

07:13.000 --> 07:14.000
具体的这样那个

07:14.000 --> 07:16.000
深入的详细的步骤

07:16.000 --> 07:17.000
挥手的过程

07:17.000 --> 07:18.000
对

07:18.000 --> 07:19.000
董小姐回去说

07:19.000 --> 07:20.000
四四挥手

07:20.000 --> 07:21.000
你可以先预习一下

07:21.000 --> 07:22.000
看看徐之摩的诗

07:23.000 --> 07:24.000
带别扛脚的

07:26.000 --> 07:27.000
OK

07:27.000 --> 07:28.000
那其实呢

07:28.000 --> 07:29.000
比如说当你试完

07:29.000 --> 07:30.000
一个UNL以后的话

07:30.000 --> 07:31.000
好了

07:31.000 --> 07:32.000
最后这个网页

07:32.000 --> 07:33.000
显示到你的面前

07:33.000 --> 07:34.000
它是经历这么多步

07:34.000 --> 07:35.000
经历这么多步

07:35.000 --> 07:36.000
那我们今天呢

07:36.000 --> 07:37.000
只要研究一下

07:37.000 --> 07:38.000
这一块

07:38.000 --> 07:39.000
HM3SS

07:39.000 --> 07:40.000
你怎么给它

07:41.000 --> 07:42.000
那OK

07:42.000 --> 07:43.000
你会发现

07:43.000 --> 07:44.000
这个

07:44.000 --> 07:45.000
居然一个页面

07:45.000 --> 07:46.000
反而到你的这样的面前

07:46.000 --> 07:48.000
居然经历这么多一个步骤

07:48.000 --> 07:49.000
那这个627

07:49.000 --> 07:50.000
一定是比较复杂一些的

07:50.000 --> 07:51.000
对不对

07:51.000 --> 07:52.000
相当复杂

07:52.000 --> 07:53.000
对

07:53.000 --> 07:54.000
所以说这个

07:54.000 --> 07:55.000
我们今天来

07:55.000 --> 07:56.000
还是不先来说

07:56.000 --> 07:57.000
这个选择过程

07:57.000 --> 07:58.000
到底经历了什么

07:58.000 --> 07:59.000
我们来看一下

07:59.000 --> 08:01.000
627的一个组成

08:01.000 --> 08:02.000
也就是说扣体了

08:02.000 --> 08:03.000
对吧

08:03.000 --> 08:04.000
这个第一

08:04.000 --> 08:05.000
627的组成

08:05.000 --> 08:06.000
其实我还是有精心

08:06.000 --> 08:07.000
准备一下的

08:07.000 --> 08:08.000
我觉得扣的过程

08:08.000 --> 08:09.000
有点漫长

08:09.000 --> 08:10.000
对

08:10.000 --> 08:11.000
咱们我就讲什么了

08:11.000 --> 08:12.000
OK

08:12.000 --> 08:13.000
那627的组成

08:13.000 --> 08:14.000
627组成

08:14.000 --> 08:15.000
那为什么要讲这呢

08:15.000 --> 08:16.000
因为其实

08:16.000 --> 08:17.000
这里面的

08:17.000 --> 08:18.000
每个步骤

08:18.000 --> 08:19.000
其实相应的

08:19.000 --> 08:20.000
就是它都有

08:20.000 --> 08:22.000
对应的627的不同的部分

08:22.000 --> 08:24.000
提供不同的功能

08:24.000 --> 08:25.000
那当然

08:25.000 --> 08:26.000
这个627的组成

08:26.000 --> 08:27.000
我先来说一下

08:27.000 --> 08:28.000
首先用户界面

08:28.000 --> 08:29.000
就说那个壳子

08:29.000 --> 08:30.000
对吧

08:30.000 --> 08:31.000
627它长什么样

08:31.000 --> 08:32.000
就像之前的627

08:32.000 --> 08:34.000
叫做红心627

08:34.000 --> 08:35.000
对吧

08:35.000 --> 08:36.000
它不说

08:36.000 --> 08:37.000
是相当于

08:37.000 --> 08:38.000
把crown里面那些

08:38.000 --> 08:39.000
内核的东西

08:39.000 --> 08:40.000
拿出来

08:40.000 --> 08:41.000
我换那个壳子而已

08:41.000 --> 08:42.000
那这个壳子

08:42.000 --> 08:43.000
必须符合中国的风格

08:43.000 --> 08:44.000
对

08:44.000 --> 08:45.000
印象功成色

08:47.000 --> 08:48.000
是中国市场吧

08:48.000 --> 08:49.000
对吧

08:49.000 --> 08:50.000
普遍它都这么做

08:50.000 --> 08:51.000
这是我的怀疑一个事

08:51.000 --> 08:52.000
之前这个腾讯

08:52.000 --> 08:53.000
包括什么什么

08:53.000 --> 08:54.000
百度627

08:54.000 --> 08:55.000
3位627

08:55.000 --> 08:56.000
搜购我什么的

08:56.000 --> 08:57.000
金牌都这么做的

08:57.000 --> 08:58.000
差不多

08:58.000 --> 08:59.000
两件没有引起

08:59.000 --> 09:00.000
那么大的舆论风格

09:00.000 --> 09:01.000
因为这个没有引起

09:01.000 --> 09:02.000
大家的爱国情怀

09:04.000 --> 09:05.000
那这个

09:05.000 --> 09:06.000
用户界面

09:06.000 --> 09:07.000
你就可以得成

09:07.000 --> 09:08.000
你能看到那些壳子

09:08.000 --> 09:09.000
就比如说什么

09:09.000 --> 09:10.000
这玩意

09:10.000 --> 09:11.000
菜单篮

09:11.000 --> 09:12.000
书框

09:12.000 --> 09:13.000
等等

09:13.000 --> 09:14.000
外壳

09:14.000 --> 09:15.000
特别面

09:15.000 --> 09:16.000
户界面

09:16.000 --> 09:18.000
这个东西咱没有标说

09:18.000 --> 09:19.000
接下来的话就是

09:19.000 --> 09:20.000
这个东西叫做浏览器引擎

09:20.000 --> 09:22.000
这个东西你看是比较大

09:22.000 --> 09:24.000
这个引擎这个词的话

09:24.000 --> 09:26.000
大家在发动机门听过一些

09:26.000 --> 09:27.000
汽车引擎

09:27.000 --> 09:28.000
达伯人

09:28.000 --> 09:29.000
当然乘客在之前的课里面

09:29.000 --> 09:30.000
他也提过这个

09:30.000 --> 09:31.000
对简单提过

09:31.000 --> 09:32.000
引擎

09:32.000 --> 09:33.000
引擎这个词

09:33.000 --> 09:34.000
就是好高上

09:34.000 --> 09:35.000
对

09:35.000 --> 09:36.000
怎么来解释一下

09:36.000 --> 09:37.000
其实引擎这个东西也很简单

09:37.000 --> 09:40.000
它无非就是浏览器中的一些程序

09:40.000 --> 09:42.000
它也就是程序而已

09:42.000 --> 09:43.000
那为什么叫引擎

09:43.000 --> 09:44.000
起这么高上的名了

09:44.000 --> 09:45.000
对吧

09:45.000 --> 09:46.000
浏览器引擎

09:46.000 --> 09:47.000
确然引擎

09:47.000 --> 09:48.000
GS引擎

09:48.000 --> 09:49.000
对吧

09:49.000 --> 09:50.000
其实也很简单

09:50.000 --> 09:51.000
就是你要知道汽车

09:51.000 --> 09:52.000
在发动的时候

09:52.000 --> 09:54.000
引擎顺带就开了起来

09:54.000 --> 09:55.000
去动力的

09:55.000 --> 09:56.000
那我说浏览器引擎

09:56.000 --> 09:57.000
就是浏览器在开的时候

09:57.000 --> 09:59.000
相应的一些程序跑起来了

09:59.000 --> 10:00.000
对吧

10:00.000 --> 10:01.000
引擎

10:01.000 --> 10:02.000
不需要引擎带一下

10:02.000 --> 10:03.000
那宣言引擎是什么意思呢

10:03.000 --> 10:04.000
就是你宣言的时候

10:04.000 --> 10:05.000
它就启动一下

10:05.000 --> 10:06.000
对不对

10:06.000 --> 10:07.000
宣言引擎

10:07.000 --> 10:08.000
其实无非是程序而已

10:08.000 --> 10:09.000
这比喻很恰当

10:09.000 --> 10:11.000
那

10:11.000 --> 10:13.000
浏览器的组成

10:13.000 --> 10:15.000
不止这些漆部分

10:15.000 --> 10:16.000
但很多很多

10:16.000 --> 10:17.000
但这里面是它主要的

10:17.000 --> 10:18.000
有用户界面

10:18.000 --> 10:19.000
壳子的吧

10:19.000 --> 10:20.000
浏览器的引擎

10:20.000 --> 10:21.000
宣言引擎

10:21.000 --> 10:22.000
但是它负责这些事情

10:22.000 --> 10:24.000
就是把SSS

10:24.000 --> 10:26.000
给它真正的渲染展示出来

10:26.000 --> 10:28.000
网络这个东西也很简单

10:28.000 --> 10:29.000
就是直接

10:29.000 --> 10:31.000
通过它来进行这样网络请求

10:31.000 --> 10:32.000
通过它来进行

10:32.000 --> 10:33.000
网络的一个发送

10:33.000 --> 10:34.000
那另外后端呢

10:34.000 --> 10:35.000
它就盖一些

10:35.000 --> 10:36.000
比如说

10:36.000 --> 10:37.000
抬个警告口啊什么的

10:37.000 --> 10:38.000
对吧

10:38.000 --> 10:39.000
它会是这样的一些东西

10:39.000 --> 10:41.000
不是在这个email里面的

10:41.000 --> 10:42.000
对吧

10:42.000 --> 10:43.000
email里面的东西

10:43.000 --> 10:44.000
它这个宣言引擎

10:44.000 --> 10:45.000
它来一句话

10:45.000 --> 10:46.000
那GS引擎的话

10:46.000 --> 10:47.000
就是来解释执行GS了

10:47.000 --> 10:48.000
是

10:48.000 --> 10:49.000
那数据存手这一块的话

10:49.000 --> 10:50.000
还就是

10:50.000 --> 10:51.000
学到H5的话

10:51.000 --> 10:52.000
你就知道了

10:52.000 --> 10:53.000
咱们有什么

10:53.000 --> 10:54.000
对look sorry

10:54.000 --> 10:55.000
cool cool cool cool

10:55.000 --> 10:56.000
等等等

10:56.000 --> 10:57.000
就是提供持有化

10:57.000 --> 10:58.000
缓存的

10:58.000 --> 10:59.000
浏览器的基本组成

10:59.000 --> 11:00.000
它有这么多

11:00.000 --> 11:01.000
然后它有这么多

11:01.000 --> 11:02.000
那每一个部分

11:02.000 --> 11:03.000
它的功能对吧

11:03.000 --> 11:04.000
对那么每个步骤

11:04.000 --> 11:05.000
其实你能够找到

11:05.000 --> 11:06.000
对应的这样的一个

11:06.000 --> 11:07.000
提供功能的

11:07.000 --> 11:08.000
这样的一个组成部分

11:08.000 --> 11:09.000
对

11:09.000 --> 11:10.000
这个就把之前我讲的

11:10.000 --> 11:11.000
浏览器的一个粗略组成

11:11.000 --> 11:12.000
给西化了一下

11:12.000 --> 11:13.000
对

11:13.000 --> 11:14.000
稍微西化了一下

11:14.000 --> 11:15.000
稍微西化了一下

11:15.000 --> 11:16.000
这边呢

11:16.000 --> 11:17.000
我要就是

11:17.000 --> 11:18.000
本来想自己画画

11:18.000 --> 11:19.000
本来想自己的画画图

11:19.000 --> 11:20.000
后来这个有一时间

11:20.000 --> 11:21.000
那个问

11:21.000 --> 11:22.000
我说到上到了一个图

11:22.000 --> 11:23.000
当的不是很清晰

11:23.000 --> 11:24.000
也不太清晰

11:24.000 --> 11:26.000
而且是没有必要那么清晰

11:26.000 --> 11:27.000
因为这个不是

11:27.000 --> 11:28.000
我们只可一回的

11:28.000 --> 11:30.000
在后面的

11:30.000 --> 11:31.000
在后面

11:31.000 --> 11:32.000
我还会详细的说一说

11:32.000 --> 11:33.000
这一块的话

11:33.000 --> 11:34.000
其实呢

11:34.000 --> 11:35.000
正好能把我那个

11:35.000 --> 11:36.000
描述的过程

11:36.000 --> 11:37.000
给它还原

11:37.000 --> 11:38.000
细细化一下

11:38.000 --> 11:40.000
当你说出一个URL以后的话

11:40.000 --> 11:41.000
当然呢

11:41.000 --> 11:42.000
我们之前其实讲了个

11:42.000 --> 11:43.000
bomb的时候

11:43.000 --> 11:44.000
提到个东西叫做online

11:44.000 --> 11:45.000
对吧

11:45.000 --> 11:46.000
online是什么意思

11:46.000 --> 11:47.000
就是我们在

11:47.000 --> 11:48.000
离线缓存的时候

11:48.000 --> 11:49.000
可能会具用

11:49.000 --> 11:50.000
对

11:50.000 --> 11:51.000
所以当我们去发送一个

11:51.000 --> 11:52.000
请求

11:52.000 --> 11:53.000
像请求一个网页的时候

11:53.000 --> 11:54.000
为什么这还有这两条呢

11:54.000 --> 11:55.000
什么存储

11:55.000 --> 11:56.000
对吧

11:56.000 --> 11:57.000
因为你有可能是在一个

11:57.000 --> 11:58.000
脱离这个网络的情况下

11:58.000 --> 11:59.000
是

11:59.000 --> 12:00.000
对吧

12:00.000 --> 12:01.000
你去取东西就行了

12:01.000 --> 12:02.000
对

12:02.000 --> 12:03.000
最后给它展现出来

12:03.000 --> 12:04.000
就是意思就是

12:04.000 --> 12:05.000
你不联网的时候

12:05.000 --> 12:06.000
有时候你输出一个网址

12:06.000 --> 12:07.000
它也能返回一个页面

12:07.000 --> 12:08.000
对

12:08.000 --> 12:09.000
它也是可以存到的

12:09.000 --> 12:10.000
读的是你的缓存

12:10.000 --> 12:11.000
就比如说现在你拿那个

12:11.000 --> 12:12.000
手机淘宝

12:12.000 --> 12:13.000
手机淘宝就能说明这个问题的

12:13.000 --> 12:14.000
手机淘宝

12:14.000 --> 12:15.000
其实你不联网的话

12:15.000 --> 12:16.000
你打开它

12:16.000 --> 12:17.000
也有一个基本的页面

12:17.000 --> 12:18.000
只不过你用不了而已

12:18.000 --> 12:19.000
那个基本页面

12:19.000 --> 12:20.000
在不联网的情况下

12:20.000 --> 12:21.000
能展现出来

12:21.000 --> 12:22.000
不是因为它是一个

12:22.000 --> 12:23.000
Native的APP

12:23.000 --> 12:24.000
它也是一个

12:24.000 --> 12:25.000
它也是一个

12:25.000 --> 12:26.000
Hybrid的APP

12:26.000 --> 12:27.000
里面签了15页面

12:27.000 --> 12:28.000
它没联网

12:28.000 --> 12:29.000
对

12:29.000 --> 12:30.000
它没联网

12:30.000 --> 12:31.000
读出来那个页面

12:31.000 --> 12:32.000
就是缓存

12:32.000 --> 12:33.000
里面读出来这个东西

12:33.000 --> 12:34.000
所以说这一块

12:34.000 --> 12:35.000
网页内容这一块的话

12:35.000 --> 12:36.000
是你有可能是

12:36.000 --> 12:38.000
真正通过网络请我回来的

12:38.000 --> 12:39.000
你也可能是从

12:39.000 --> 12:40.000
这个存储的东西

12:40.000 --> 12:41.000
对吧

12:41.000 --> 12:42.000
他竟然给的是

12:42.000 --> 12:44.000
取到这样的练习之中的

12:44.000 --> 12:45.000
那取完以后的话

12:45.000 --> 12:46.000
OK 网页内容

12:46.000 --> 12:48.000
最后拿到手了

12:48.000 --> 12:49.000
接下来就是要展示

12:49.000 --> 12:50.000
对不对

12:50.000 --> 12:51.000
那展示的过程

12:51.000 --> 12:52.000
比如说宣演型

12:52.000 --> 12:54.000
它会把HML

12:54.000 --> 12:55.000
生成什么DOM数

12:55.000 --> 12:56.000
把CSS

12:56.000 --> 12:58.000
这样的一个叫CSS

12:58.000 --> 12:59.000
样子就在一合成

12:59.000 --> 13:00.000
对吧

13:00.000 --> 13:01.000
等等

13:01.000 --> 13:02.000
就渲染的数

13:02.000 --> 13:03.000
但这过程中

13:03.000 --> 13:04.000
GS引擎

13:04.000 --> 13:05.000
比如说

13:05.000 --> 13:06.000
我们后面要做的是

13:06.000 --> 13:07.000
数据可知化

13:07.000 --> 13:09.000
而且是动态数据的可知化

13:09.000 --> 13:10.000
很多数据

13:10.000 --> 13:12.000
要展示的这些数据

13:12.000 --> 13:14.000
其实是通过GS来操作

13:14.000 --> 13:15.000
生成标签的

13:15.000 --> 13:17.000
它只能通过GS来操作

13:17.000 --> 13:18.000
所以说

13:18.000 --> 13:19.000
这一块可能说

13:19.000 --> 13:20.000
在生成DOM数的时候

13:20.000 --> 13:22.000
也有GS的这个引擎

13:22.000 --> 13:23.000
肯定有它的参与

13:23.000 --> 13:24.000
所以最后

13:24.000 --> 13:25.000
反正就是

13:25.000 --> 13:27.000
这些过程要生成这么个东西

13:27.000 --> 13:28.000
对吧

13:28.000 --> 13:29.000
最后浏览器再给它进行

13:29.000 --> 13:30.000
布局计算

13:30.000 --> 13:31.000
再绘画

13:31.000 --> 13:32.000
绘制

13:32.000 --> 13:33.000
今天这样的一个过程

13:33.000 --> 13:34.000
其实

13:34.000 --> 13:36.000
这个图就很好的

13:36.000 --> 13:38.000
能来说明一下

13:38.000 --> 13:40.000
整个的我们刚才所说的

13:40.000 --> 13:42.000
这样的一个网页

13:42.000 --> 13:43.000
从发送请求

13:43.000 --> 13:44.000
到请求会来展示的

13:44.000 --> 13:46.000
这样一个大致的一个流程

13:46.000 --> 13:47.000
对

13:47.000 --> 13:48.000
但是我们后面具体

13:48.000 --> 13:49.000
要抛弃的就是

13:49.000 --> 13:50.000
这一块的流程

13:50.000 --> 13:51.000
我们后面还有图

13:51.000 --> 13:52.000
对 咱们这个图

13:52.000 --> 13:53.000
重点展示的

13:53.000 --> 13:54.000
也不是说

13:54.000 --> 13:55.000
咱们这个图

13:55.000 --> 13:56.000
不是说把整个过程

13:56.000 --> 13:57.000
平均展示下来了

13:57.000 --> 13:58.000
是有一个重点展示环节的

13:58.000 --> 13:59.000
重点展示

13:59.000 --> 14:00.000
就是徐老师现在选的

14:00.000 --> 14:01.000
这个部分

14:01.000 --> 14:02.000
其实前面还有一个

14:02.000 --> 14:03.000
很大的一个很长的步骤

14:03.000 --> 14:04.000
就是URL

14:04.000 --> 14:05.000
到这个

14:05.000 --> 14:06.000
比如一个

14:06.000 --> 14:07.000
一个正常URL

14:07.000 --> 14:08.000
到这个DMS解析

14:08.000 --> 14:09.000
到这个生产IP地址

14:09.000 --> 14:10.000
然后什么三四挥手

14:10.000 --> 14:11.000
什么的

14:11.000 --> 14:12.000
还有一大串

14:12.000 --> 14:13.000
那个东西还能去

14:13.000 --> 14:14.000
重点展示一下

14:14.000 --> 14:15.000
这个图就没有说

14:15.000 --> 14:16.000
把整个过程全展示

14:16.000 --> 14:17.000
全展示完

14:17.000 --> 14:18.000
一个图好像也不太够用

14:18.000 --> 14:19.000
因为咱们这一刻

14:19.000 --> 14:20.000
所讲的就是

14:20.000 --> 14:21.000
这个现的过程

14:21.000 --> 14:22.000
重点展示的是

14:22.000 --> 14:23.000
OK

14:23.000 --> 14:24.000
比如说

14:24.000 --> 14:25.000
你看到这的话

14:25.000 --> 14:26.000
如果你想打那个

14:26.000 --> 14:27.000
非常经典的

14:27.000 --> 14:28.000
一个网址

14:28.000 --> 14:29.000
输入进去之后

14:29.000 --> 14:30.000
到反过夜面

14:30.000 --> 14:31.000
是整个过程的话

14:31.000 --> 14:32.000
还打的不是很充分

14:32.000 --> 14:33.000
你得学完网络之后

14:33.000 --> 14:34.000
才能把那个题

14:34.000 --> 14:35.000
完整的打出来

14:35.000 --> 14:36.000
所以学到这

14:36.000 --> 14:37.000
千万别去忙

14:37.000 --> 14:38.000
目面是那道题

14:38.000 --> 14:39.000
一般面试过来

14:39.000 --> 14:40.000
面你可能说

14:40.000 --> 14:41.000
也就能有一小时的时间

14:41.000 --> 14:42.000
对吧

14:42.000 --> 14:43.000
如果说你把

14:43.000 --> 14:44.000
咱们所有东西

14:44.000 --> 14:45.000
全学完以后的话

14:45.000 --> 14:46.000
你能给它砍一下我

14:46.000 --> 14:47.000
对吧

14:47.000 --> 14:48.000
能砍死的

14:48.000 --> 14:49.000
砍蒙的

14:49.000 --> 14:50.000
OK

14:50.000 --> 14:51.000
那咱这样

14:51.000 --> 14:52.000
再往后来

14:52.000 --> 14:53.000
那咱们知道

14:53.000 --> 14:54.000
六暗期的组成有这么多

14:54.000 --> 14:55.000
对吧

14:55.000 --> 14:56.000
他们分别提供不能功能

14:56.000 --> 14:57.000
对不对

14:57.000 --> 14:59.000
那整个夜晚的展示过程

14:59.000 --> 15:00.000
咱俩大概有了

15:00.000 --> 15:01.000
具体的一个了解

15:01.000 --> 15:02.000
对吧

15:02.000 --> 15:03.000
其实咱们

15:03.000 --> 15:04.000
这是害我的图

15:04.000 --> 15:05.000
这个图就是

15:05.000 --> 15:06.000
来还原一下

15:06.000 --> 15:07.000
我们刚才六暗期的

15:07.000 --> 15:08.000
组成部分

15:08.000 --> 15:09.000
你可以再来看看

15:09.000 --> 15:10.000
有英雄见面

15:10.000 --> 15:11.000
对吧

15:11.000 --> 15:12.000
有六暗期的引擎

15:12.000 --> 15:13.000
有宣言引擎

15:13.000 --> 15:14.000
有GS接着气

15:14.000 --> 15:15.000
有UI后段

15:15.000 --> 15:16.000
有数据一个存储

15:16.000 --> 15:17.000
有网络

15:17.000 --> 15:18.000
这么一大块

15:18.000 --> 15:19.000
这么一大堆

15:19.000 --> 15:20.000
组成了这样的

15:20.000 --> 15:22.000
去对它进行这样的

15:22.000 --> 15:23.000
图片的一个展示

15:23.000 --> 15:24.000
OK

15:24.000 --> 15:25.000
那六暗期的组成

15:25.000 --> 15:26.000
咱们高冬以后的话

15:26.000 --> 15:27.000
接下来的话

15:27.000 --> 15:28.000
咱们来说说说什么呢

15:28.000 --> 15:29.000
来说一下这个渲染

15:29.000 --> 15:30.000
对吧

15:30.000 --> 15:31.000
因为我们说中文讲一下

15:31.000 --> 15:32.000
这个是渲染的一个过程

15:32.000 --> 15:33.000
对

15:33.000 --> 15:34.000
那提到渲染的过程的话

15:34.000 --> 15:35.000
对

15:35.000 --> 15:36.000
提到这个渲染的过程的话

15:36.000 --> 15:37.000
我们

15:37.000 --> 15:38.000
先来说一下

15:38.000 --> 15:39.000
说一下

15:39.000 --> 15:40.000
这个什么呢

15:40.000 --> 15:41.000
说一下

15:41.000 --> 15:42.000
OK

15:42.000 --> 15:43.000
什么是渲染

15:43.000 --> 15:44.000
对吧

15:44.000 --> 15:45.000
昨天真的明白

15:45.000 --> 15:46.000
什么是渲染呢

15:46.000 --> 15:47.000
那什么是渲染的话

15:47.000 --> 15:48.000
这个

15:48.000 --> 15:49.000
其实

15:49.000 --> 15:50.000
在独里面

15:50.000 --> 15:51.000
来去理解的

15:51.000 --> 15:52.000
对吧

15:52.000 --> 15:53.000
你还挺严谨

15:53.000 --> 15:54.000
我很严谨

15:54.000 --> 15:55.000
对吧

15:55.000 --> 15:56.000
今天从百度出身

15:56.000 --> 15:57.000
我还是比较相信的

15:57.000 --> 15:59.000
就是渲染

15:59.000 --> 16:00.000
什么意思

16:00.000 --> 16:01.000
就是在电脑绘图中

16:01.000 --> 16:02.000
是指

16:02.000 --> 16:03.000
用软件从模型

16:03.000 --> 16:05.000
生成图像的一个过程

16:05.000 --> 16:06.000
那就是

16:06.000 --> 16:07.000
如果你装修过的话

16:07.000 --> 16:09.000
装修一般分两个图纸

16:09.000 --> 16:10.000
第一个叫设定图

16:10.000 --> 16:11.000
第二个完全展示出

16:11.000 --> 16:12.000
那个样式图

16:12.000 --> 16:13.000
叫渲染图

16:13.000 --> 16:14.000
就把它渲染出来了

16:14.000 --> 16:15.000
实景化

16:15.000 --> 16:16.000
这个

16:16.000 --> 16:17.000
装修这个事

16:18.000 --> 16:19.000
感受非常多

16:22.000 --> 16:23.000
当然这个东西

16:23.000 --> 16:26.000
就是从这个方面来去讲解的话

16:26.000 --> 16:27.000
对于咱们

16:27.000 --> 16:28.000
其实听到这里的同学

16:28.000 --> 16:30.000
我觉得还是前端的

16:30.000 --> 16:32.000
一个刚刚入门的同学

16:32.000 --> 16:33.000
可能还未必能理解

16:33.000 --> 16:35.000
什么叫从模型生成图像

16:35.000 --> 16:36.000
对不对

16:36.000 --> 16:37.000
你可以这么来理解一下

16:37.000 --> 16:38.000
就比如说你要画画

16:38.000 --> 16:39.000
你要画一个山水画

16:39.000 --> 16:40.000
对吧

16:40.000 --> 16:41.000
就说是一个大师

16:41.000 --> 16:42.000
大师画之前的话

16:42.000 --> 16:43.000
那指定的是

16:43.000 --> 16:44.000
绣书

16:44.000 --> 16:45.000
绣书

16:45.000 --> 16:46.000
不局

16:46.000 --> 16:47.000
那大王里面不局

16:47.000 --> 16:48.000
我想我这是画了什么

16:48.000 --> 16:49.000
那是画了什么

16:50.000 --> 16:51.000
当然这个过程的话

16:51.000 --> 16:53.000
是你在你大王里面进行计算

16:53.000 --> 16:54.000
已经有模型了

16:54.000 --> 16:55.000
对吧

16:55.000 --> 16:57.000
那最后你拿笔画到指上

16:57.000 --> 16:58.000
画完以后的话

16:58.000 --> 16:59.000
最后一幅画出来了

16:59.000 --> 17:01.000
那整个的这样一个过程

17:01.000 --> 17:02.000
从脑海里面

17:02.000 --> 17:04.000
有这样的一个大局观

17:04.000 --> 17:06.000
到最后落到这个纸面上

17:06.000 --> 17:07.000
整体的过程

17:07.000 --> 17:08.000
我们刚才叫做渲染

17:08.000 --> 17:09.000
渲染的过程

17:09.000 --> 17:11.000
就是先有框架

17:11.000 --> 17:12.000
先有一个骨架

17:12.000 --> 17:13.000
这是画啥那是画啥

17:13.000 --> 17:14.000
然后把这个骨架

17:14.000 --> 17:15.000
真正落实到这个色彩上

17:15.000 --> 17:17.000
把它形象画出来的过程叫渲染

17:17.000 --> 17:18.000
对

17:18.000 --> 17:20.000
但你要看一些抖音这个视频的时候

17:20.000 --> 17:21.000
有的时候大师画那个东西

17:21.000 --> 17:22.000
我估计他自己也不知道是啥

17:22.000 --> 17:23.000
对吧

17:23.000 --> 17:24.000
比较抽象一点

17:24.000 --> 17:25.000
对吧

17:25.000 --> 17:26.000
旁边就好人挺多

17:26.000 --> 17:27.000
这边画那边好

17:28.000 --> 17:30.000
只要是大师的话

17:30.000 --> 17:31.000
就黑P作痛吧

17:31.000 --> 17:32.000
这都是艺术

17:32.000 --> 17:33.000
对吧

17:33.000 --> 17:34.000
这都是艺术

17:34.000 --> 17:36.000
那是说这个渲染

17:36.000 --> 17:37.000
没明白的长生

17:38.000 --> 17:39.000
这一刻

17:39.000 --> 17:40.000
这是

17:40.000 --> 17:41.000
很有深度

17:41.000 --> 17:42.000
这一刻

17:43.000 --> 17:44.000
那这个渲染的话

17:44.000 --> 17:45.000
咱们大概能理解是什么意思

17:45.000 --> 17:46.000
其实就是

17:47.000 --> 17:48.000
回归到我们的

17:48.000 --> 17:49.000
这个SMI和CSS中文的话

17:49.000 --> 17:50.000
其实无非他就是

17:51.000 --> 17:52.000
宣演情

17:52.000 --> 17:53.000
当然他最后给他

17:53.000 --> 17:54.000
宣传这样的一个

17:55.000 --> 17:57.000
最终的理想的样子

17:57.000 --> 17:58.000
最终的理想的样子

17:58.000 --> 18:00.000
他指定是有建模的一个过程

18:00.000 --> 18:02.000
把它在最后进行这样的一个计算

18:02.000 --> 18:03.000
对吧

18:03.000 --> 18:04.000
赶到合理的布局

18:04.000 --> 18:05.000
然后规划

18:05.000 --> 18:06.000
然后合理布局规划完之后

18:06.000 --> 18:07.000
最后一步

18:07.000 --> 18:08.000
要把这个东西按照它的规划

18:08.000 --> 18:10.000
一层一层的去

18:10.000 --> 18:11.000
描绘出来

18:11.000 --> 18:12.000
就叫一个渲染的过程

18:12.000 --> 18:13.000
其实这个东西

18:13.000 --> 18:14.000
大家应该也都能理解

18:14.000 --> 18:15.000
没什么现在的问题

18:15.000 --> 18:16.000
那具体的一个

18:16.000 --> 18:17.000
渲染的过程

18:17.000 --> 18:19.000
咱们可以之后再来说

18:19.000 --> 18:20.000
OK

18:20.000 --> 18:21.000
那我们知道什么是渲染的话

18:21.000 --> 18:22.000
当然我们再来说一下

18:22.000 --> 18:24.000
宣演情的职责

18:24.000 --> 18:25.000
就是干他渲染的事

18:25.000 --> 18:26.000
对吧

18:26.000 --> 18:27.000
那有时候宣演情

18:27.000 --> 18:29.000
其实隐情就是一个程序

18:29.000 --> 18:30.000
对吧

18:30.000 --> 18:31.000
那个程序他干的事

18:31.000 --> 18:32.000
又是负责来他渲染的

18:32.000 --> 18:33.000
是

18:33.000 --> 18:34.000
之前你们程老师

18:34.000 --> 18:35.000
这个异极动

18:35.000 --> 18:36.000
我自己还写了一个

18:36.000 --> 18:37.000
宣演情

18:37.000 --> 18:38.000
是

18:38.000 --> 18:40.000
就是觉得这个普通的

18:40.000 --> 18:41.000
宣演情他不太好

18:41.000 --> 18:42.000
对吧

18:42.000 --> 18:43.000
几眼就自己写了一个

18:43.000 --> 18:44.000
对对对

18:44.000 --> 18:45.000
宣演情挥之不了他

18:45.000 --> 18:46.000
那么露骨的事

18:46.000 --> 18:47.000
对对对

18:47.000 --> 18:48.000
不太合法

18:48.000 --> 18:49.000
对对对

18:50.000 --> 18:51.000
那个

18:51.000 --> 18:52.000
那宣演情

18:52.000 --> 18:53.000
这块咱知道以后的话

18:53.000 --> 18:54.000
那咱往下来

18:54.000 --> 18:55.000
对吧

18:55.000 --> 18:57.000
咱来探索一下其过程

18:57.000 --> 18:58.000
其过程

18:58.000 --> 18:59.000
那过程就是啥呢

18:59.000 --> 19:00.000
过程就是

19:00.000 --> 19:01.000
其实

19:01.000 --> 19:03.000
你有了SMRG

19:03.000 --> 19:04.000
代码以后

19:04.000 --> 19:05.000
你有了CSSG

19:05.000 --> 19:06.000
代码以后

19:06.000 --> 19:08.000
我要用这个宣演情

19:08.000 --> 19:09.000
把这些代码

19:09.000 --> 19:11.000
拿过来经常解析

19:11.000 --> 19:12.000
解析

19:12.000 --> 19:13.000
其实呢

19:13.000 --> 19:16.000
就是把它建立模型的一个过程

19:16.000 --> 19:17.000
不是说

19:17.000 --> 19:18.000
SMR标签

19:18.000 --> 19:19.000
拿过来对吧

19:19.000 --> 19:20.000
或者对应生成当不数

19:20.000 --> 19:21.000
当不数

19:21.000 --> 19:22.000
我相信同学

19:22.000 --> 19:23.000
看过程来的课

19:23.000 --> 19:24.000
一个一个接点

19:24.000 --> 19:25.000
一个接点连起来

19:25.000 --> 19:26.000
数捉上结构

19:26.000 --> 19:27.000
就当不数

19:27.000 --> 19:28.000
当不数

19:28.000 --> 19:29.000
那CSS呢

19:29.000 --> 19:30.000
生成CSS

19:30.000 --> 19:31.000
一样是数

19:31.000 --> 19:32.000
那这个CSS

19:32.000 --> 19:33.000
怎么能生成一个

19:33.000 --> 19:34.000
数形的一个结构呢

19:34.000 --> 19:35.000
其实

19:35.000 --> 19:36.000
它跟当不是比较像的

19:36.000 --> 19:37.000
因为你CSS

19:37.000 --> 19:38.000
最后都是

19:38.000 --> 19:39.000
对结上

19:39.000 --> 19:40.000
当不是数的话

19:40.000 --> 19:41.000
那你CSS

19:41.000 --> 19:42.000
肯定也得是个数

19:42.000 --> 19:43.000
方便解隔嘛这东西

19:43.000 --> 19:44.000
那这个

19:44.000 --> 19:45.000
这个数有了

19:45.000 --> 19:46.000
那个数也有以后的话

19:46.000 --> 19:47.000
那这两个数

19:47.000 --> 19:48.000
我们看到

19:48.000 --> 19:49.000
当不数上是没有样式的

19:49.000 --> 19:50.000
对吧

19:50.000 --> 19:51.000
CSS数

19:51.000 --> 19:52.000
它是没有结构的

19:52.000 --> 19:53.000
接合到一起

19:53.000 --> 19:54.000
BR一平

19:54.000 --> 19:56.000
OK 一个宣演数就出来了

19:56.000 --> 19:57.000
它俩得结合一下

19:57.000 --> 19:58.000
软的是水

19:58.000 --> 19:59.000
那结合一下的话

19:59.000 --> 20:00.000
我这个图片

20:00.000 --> 20:01.000
很生动的

20:01.000 --> 20:02.000
来展示一下

20:02.000 --> 20:03.000
这隔门

20:03.000 --> 20:04.000
当不数

20:04.000 --> 20:05.000
各个结构

20:05.000 --> 20:06.000
什么都有

20:06.000 --> 20:07.000
对不对

20:07.000 --> 20:08.000
比如说

20:08.000 --> 20:10.000
你可以联系CSS这个样式的数

20:10.000 --> 20:12.000
其实它是并没有这样的结构的

20:12.000 --> 20:13.000
只是按照这个结构

20:13.000 --> 20:14.000
来映射出这些样式

20:14.000 --> 20:15.000
对吧

20:15.000 --> 20:16.000
就它俩 BR一合

20:16.000 --> 20:17.000
合完以后的话

20:17.000 --> 20:18.000
收成宣演数

20:18.000 --> 20:19.000
那如果你这个样式数

20:19.000 --> 20:20.000
你会发现

20:20.000 --> 20:21.000
它有一个样式叫

20:21.000 --> 20:22.000
Display None

20:22.000 --> 20:23.000
对吧

20:23.000 --> 20:24.000
那你在对应合过去的时候

20:24.000 --> 20:25.000
你要知道这个死半

20:25.000 --> 20:26.000
样式是None

20:26.000 --> 20:27.000
它显示不了

20:27.000 --> 20:28.000
就给它干掉了

20:28.000 --> 20:29.000
对吧

20:29.000 --> 20:30.000
那宣演的数中就没有它了

20:30.000 --> 20:31.000
就没有它了

20:31.000 --> 20:32.000
而且一些结构化标签

20:32.000 --> 20:33.000
不显示的

20:33.000 --> 20:34.000
比如说

20:34.000 --> 20:35.000
HMR

20:35.000 --> 20:37.000
这一切都是GSI引擎

20:37.000 --> 20:38.000
提供的一个

20:38.000 --> 20:40.000
节约效能的一个机制

20:40.000 --> 20:42.000
GSI是GSI引擎吗

20:42.000 --> 20:43.000
是GSI引擎

20:43.000 --> 20:44.000
软点水

20:44.000 --> 20:45.000
就宣演引擎

20:45.000 --> 20:46.000
哦 宣演引擎

20:46.000 --> 20:47.000
和GSI引擎

20:47.000 --> 20:48.000
结合到一起的结构

20:48.000 --> 20:49.000
对对对

20:49.000 --> 20:50.000
那

20:50.000 --> 20:51.000
最后先来讲那个宣演数

20:51.000 --> 20:52.000
对吧

20:52.000 --> 20:53.000
宣演数以后的话

20:53.000 --> 20:54.000
那这个宣演数

20:54.000 --> 20:55.000
它干什么事呢

20:55.000 --> 20:56.000
OK

20:56.000 --> 20:57.000
我们宣演引擎

20:57.000 --> 20:59.000
要开始进行布局计算了

20:59.000 --> 21:00.000
因为它拿到这个东西以后的话

21:00.000 --> 21:01.000
它更好的知道

21:01.000 --> 21:03.000
哪儿应该有什么

21:03.000 --> 21:04.000
对吧

21:04.000 --> 21:05.000
它要做到什么样式

21:05.000 --> 21:06.000
一点一点

21:06.000 --> 21:07.000
开始在它脑盒里面

21:07.000 --> 21:08.000
形成这样的一个

21:08.000 --> 21:09.000
布局了

21:09.000 --> 21:10.000
对吧

21:10.000 --> 21:11.000
当布局有了以后的话

21:11.000 --> 21:12.000
好了

21:12.000 --> 21:14.000
才开始真正进行会智

21:14.000 --> 21:15.000
一点一点去往上去画

21:15.000 --> 21:16.000
对

21:16.000 --> 21:17.000
那比如说

21:17.000 --> 21:19.000
当HMR和CSS拿过来以后

21:19.000 --> 21:20.000
我们宣演引擎

21:20.000 --> 21:21.000
干了这样的一个事

21:21.000 --> 21:23.000
干了这样的一个事

21:23.000 --> 21:24.000
那好了

21:24.000 --> 21:25.000
讲了这么多

21:25.000 --> 21:26.000
那跟倒带

21:26.000 --> 21:27.000
没有什么关系呢

21:27.000 --> 21:28.000
对吧

21:28.000 --> 21:29.000
但

21:29.000 --> 21:30.000
具体什么关系的话

21:30.000 --> 21:32.000
这里面我要再来提个词

21:32.000 --> 21:33.000
叫做宣模式

21:33.000 --> 21:34.000
宣模式

21:34.000 --> 21:37.000
模式又是个很高大上个词吧

21:37.000 --> 21:39.000
那怎么来理解呢

21:39.000 --> 21:41.000
咱理解的话就是来

21:41.000 --> 21:42.000
怎么说

21:42.000 --> 21:44.000
用规则来去描述

21:44.000 --> 21:45.000
模式这个词吧

21:45.000 --> 21:47.000
就是宣模式你可以列成

21:47.000 --> 21:48.000
这个宣引擎

21:48.000 --> 21:49.000
对吧

21:49.000 --> 21:50.000
针对于这样一个宣染

21:50.000 --> 21:51.000
宣染数

21:51.000 --> 21:52.000
最后这样一个宣染的一个规则

21:52.000 --> 21:54.000
这个规则

21:54.000 --> 21:56.000
你可以列成是这样的一个模式

21:56.000 --> 21:57.000
那我们倒带

21:57.000 --> 21:58.000
讲它的目的是什么意思呢

21:58.000 --> 22:00.000
想通过这个倒带

22:00.000 --> 22:02.000
来控制宣引擎

22:02.000 --> 22:04.000
对一个页面的一个宣模式

22:04.000 --> 22:05.000
宣模式

22:06.000 --> 22:07.000
那当然呢

22:07.000 --> 22:08.000
宣模式的话

22:08.000 --> 22:09.000
这一块的话

22:09.000 --> 22:11.000
其实是有它具体的一个历史意义的

22:11.000 --> 22:12.000
这个历史意义

22:12.000 --> 22:13.000
我先来简单来说说

22:13.000 --> 22:14.000
简单来说说

22:14.000 --> 22:15.000
完终的

22:15.000 --> 22:16.000
我们再来说一下

22:16.000 --> 22:17.000
怎么来通过倒带

22:17.000 --> 22:19.000
来控制这样的一个宣模式

22:19.000 --> 22:20.000
宣模式

22:21.000 --> 22:22.000
那在多年以前

22:23.000 --> 22:24.000
有多以前的就是i6

22:24.000 --> 22:25.000
对吧

22:25.000 --> 22:26.000
诞生以前

22:26.000 --> 22:27.000
i6以前

22:27.000 --> 22:28.000
各个练习都处于一个

22:28.000 --> 22:30.000
各自比较封闭的发展中

22:31.000 --> 22:33.000
各自比较封闭这样的一个发展状态

22:33.000 --> 22:34.000
你做你的他我做我的

22:34.000 --> 22:35.000
对吧

22:35.000 --> 22:36.000
对 翻译过来就是

22:36.000 --> 22:37.000
同行之间相处的

22:37.000 --> 22:38.000
不是特别融洽

22:38.000 --> 22:39.000
对对对 没有大声统一

22:39.000 --> 22:40.000
对对对

22:40.000 --> 22:41.000
就是这个意思

22:41.000 --> 22:42.000
看不出来就是弄死你

22:42.000 --> 22:43.000
对对对

22:43.000 --> 22:45.000
有点像笑嘻嘻心里那个

22:45.000 --> 22:46.000
发面皮一样

22:46.000 --> 22:47.000
对对对

22:47.000 --> 22:48.000
但是这个意思

22:48.000 --> 22:50.000
那当各自做各自的

22:50.000 --> 22:51.000
那每个人都有

22:51.000 --> 22:52.000
每个人大致的这样的一个宣引擎

22:52.000 --> 22:53.000
对吧

22:53.000 --> 22:54.000
那我每个人

22:54.000 --> 22:55.000
或者说我每个浏览器

22:55.000 --> 22:56.000
对吧

22:56.000 --> 22:57.000
但每个宣引擎

22:57.000 --> 22:58.000
对这个页面

22:58.000 --> 22:59.000
CSS这个宣的规则

22:59.000 --> 23:00.000
它都是不一样的

23:00.000 --> 23:01.000
就比如说

23:01.000 --> 23:02.000
i6之前

23:02.000 --> 23:03.000
对吧

23:03.000 --> 23:04.000
我对核模型的一个

23:04.000 --> 23:06.000
这样的一个规则是啥呢

23:06.000 --> 23:07.000
当你设定一个外似的时候

23:07.000 --> 23:09.000
这个外似指定的

23:09.000 --> 23:10.000
并不只是

23:10.000 --> 23:12.000
content区的一个宽度

23:12.000 --> 23:14.000
一开始是这样的

23:14.000 --> 23:15.000
对

23:15.000 --> 23:17.000
它是content加pading

23:17.000 --> 23:18.000
再加上这个border

23:18.000 --> 23:19.000
是三个区的

23:19.000 --> 23:21.000
那是i6混杂模式的

23:21.000 --> 23:22.000
一个核模型

23:22.000 --> 23:23.000
对 就是i6以前

23:23.000 --> 23:24.000
i6以前

23:24.000 --> 23:25.000
对

23:25.000 --> 23:26.000
但这个核模型

23:26.000 --> 23:27.000
咱们在CSS3的时候

23:27.000 --> 23:28.000
还会去着重去加

23:28.000 --> 23:29.000
因为CSS3提供一个功能

23:29.000 --> 23:30.000
可以控制

23:30.000 --> 23:31.000
可以去咱们手动的

23:31.000 --> 23:32.000
可以把那种

23:32.000 --> 23:33.000
核模型给调出来

23:33.000 --> 23:34.000
可以控制

23:34.000 --> 23:36.000
就是你想用哪种核模型

23:36.000 --> 23:37.000
就用那种核模型

23:37.000 --> 23:38.000
那是后期咱们可以控制的

23:38.000 --> 23:39.000
但那种核模型的应用场景

23:39.000 --> 23:40.000
还是比较少的

23:40.000 --> 23:41.000
但是有应用

23:41.000 --> 23:42.000
是有应用的

23:42.000 --> 23:44.000
那要说除了这一块的话

23:44.000 --> 23:45.000
当然还有

23:45.000 --> 23:46.000
就比如说

23:46.000 --> 23:47.000
框极这样的一个标签

23:47.000 --> 23:49.000
在i6以前的这个浏览器中

23:49.000 --> 23:50.000
你给它设置

23:50.000 --> 23:52.000
比如说这个左右mage

23:52.000 --> 23:54.000
是这样一个auto的话

23:54.000 --> 23:55.000
它不会水平去中

23:55.000 --> 23:56.000
它不会水平

23:56.000 --> 23:59.000
那当然这是i6之前

23:59.000 --> 24:01.000
比如说是i系列浏览器

24:01.000 --> 24:04.000
它对页面的一个渲染的一个规则

24:04.000 --> 24:06.000
或者渲染的一个模式

24:06.000 --> 24:07.000
它是这样的

24:07.000 --> 24:09.000
但是i6以后的话

24:09.000 --> 24:10.000
你看这儿

24:10.000 --> 24:11.000
就随着web的发展

24:11.000 --> 24:13.000
兼容性的问题的解决

24:13.000 --> 24:14.000
越来越显得迫切

24:14.000 --> 24:16.000
随即各浏览器厂商

24:16.000 --> 24:18.000
发布了按照标准模式

24:18.000 --> 24:20.000
也有说军行各厂商

24:20.000 --> 24:21.000
制定的统一标准

24:21.000 --> 24:22.000
工作浏览器

24:22.000 --> 24:24.000
比如i6就是其中之一

24:24.000 --> 24:26.000
就是i6它是一个分界点

24:26.000 --> 24:27.000
i6的话

24:27.000 --> 24:29.000
它其实

24:29.000 --> 24:31.000
是按照这样的一个厂商规定

24:31.000 --> 24:32.000
去来去做的

24:32.000 --> 24:34.000
那我们其实知道了

24:34.000 --> 24:36.000
各浏览器在i6的时代的时候

24:36.000 --> 24:38.000
就建立这样的统一的标准

24:38.000 --> 24:40.000
那你说我们每个浏览器

24:40.000 --> 24:42.000
都应该按照这个标准

24:42.000 --> 24:44.000
来对这个页面进行解析

24:44.000 --> 24:45.000
这样的一个渲染

24:45.000 --> 24:47.000
那这个标准的话

24:47.000 --> 24:48.000
其实就在里面规定了

24:48.000 --> 24:50.000
比如说合模型的时候

24:50.000 --> 24:52.000
当你设置一个wise的时候

24:52.000 --> 24:53.000
它的宽度只是指定了

24:53.000 --> 24:54.000
content的区域

24:54.000 --> 24:55.000
不包括padding

24:55.000 --> 24:56.000
不包括border

24:56.000 --> 24:57.000
更不包括market

24:57.000 --> 24:58.000
那当然

24:58.000 --> 25:00.000
当你给一个快捷标准

25:00.000 --> 25:02.000
设置market左右是auto的时候

25:02.000 --> 25:03.000
它一定能使一个据中

25:03.000 --> 25:05.000
就是标准模式以后

25:05.000 --> 25:07.000
来进行这一套规则

25:07.000 --> 25:08.000
那很明显

25:08.000 --> 25:09.000
这个i6以前

25:09.000 --> 25:10.000
这套规则

25:10.000 --> 25:12.000
跟这个如今的标准的规则

25:12.000 --> 25:13.000
它是一样的

25:13.000 --> 25:14.000
那不一样以后的话

25:14.000 --> 25:16.000
但这边就出现了一个问题

25:16.000 --> 25:18.000
就是比如说

25:18.000 --> 25:19.000
我一年以前

25:19.000 --> 25:21.000
很多这样这样的一个公司

25:21.000 --> 25:23.000
编写的一个大型站点

25:23.000 --> 25:24.000
耗费了很多人的物理

25:24.000 --> 25:26.000
偷偷到那边去

25:26.000 --> 25:27.000
写出来一个

25:27.000 --> 25:30.000
我写出来很多个网页

25:30.000 --> 25:31.000
ok在IE345里面

25:31.000 --> 25:32.000
都可以很好的去跑

25:32.000 --> 25:33.000
对不对

25:33.000 --> 25:35.000
结果由于你的一句话

25:35.000 --> 25:36.000
对吧

25:36.000 --> 25:38.000
导致了这些网页

25:38.000 --> 25:39.000
好在这个新款的暖气中

25:39.000 --> 25:40.000
都不能用了

25:40.000 --> 25:42.000
那这就很尴尬了

25:42.000 --> 25:43.000
这就很尴尬了

25:43.000 --> 25:44.000
我变规则了

25:44.000 --> 25:45.000
规则变了

25:45.000 --> 25:46.000
因为你们也变了

25:47.000 --> 25:48.000
难道

25:48.000 --> 25:50.000
你真的要回去变一变吗

25:50.000 --> 25:51.000
重新再去开发

25:51.000 --> 25:53.000
这耗费的时间太多了

25:54.000 --> 25:55.000
我有一些时候你唯一的形式

25:55.000 --> 25:56.000
就是提着到

25:56.000 --> 25:58.000
看找找谁干的规则

25:58.000 --> 25:59.000
是弄死的

26:00.000 --> 26:01.000
那当然

26:01.000 --> 26:02.000
这个致敬规则的人

26:02.000 --> 26:03.000
他也不能这么干

26:03.000 --> 26:04.000
对吧

26:04.000 --> 26:06.000
毕竟要让你过度的一个过程

26:06.000 --> 26:07.000
对对对

26:07.000 --> 26:08.000
很有生存欲望

26:09.000 --> 26:10.000
活着不好吗

26:10.000 --> 26:11.000
对对对

26:11.000 --> 26:12.000
还是有求生欲望

26:13.000 --> 26:15.000
那他是有这个过度过程

26:15.000 --> 26:16.000
过度过程里面

26:16.000 --> 26:17.000
提到了什么

26:17.000 --> 26:18.000
提到了

26:18.000 --> 26:19.000
比如说

26:20.000 --> 26:21.000
像i6对吧

26:21.000 --> 26:22.000
说i6

26:22.000 --> 26:23.000
你这个浏览器

26:23.000 --> 26:24.000
你已经符合了我

26:24.000 --> 26:25.000
后说已经遵循了

26:25.000 --> 26:27.000
我这个标准模式的一个规则

26:27.000 --> 26:28.000
对吧

26:28.000 --> 26:29.000
但是

26:29.000 --> 26:31.000
如果你显示这个网页

26:31.000 --> 26:32.000
里面

26:32.000 --> 26:33.000
比如说他有个开关

26:33.000 --> 26:34.000
可以控制你一下

26:34.000 --> 26:36.000
就开关一控制以后的话

26:36.000 --> 26:39.000
你可以按照之前的那个渲染模式

26:39.000 --> 26:41.000
来去渲染这些网页

26:41.000 --> 26:43.000
那么管这种渲染模式

26:43.000 --> 26:45.000
叫做混杂模式

26:45.000 --> 26:47.000
也叫做怪异模式

26:47.000 --> 26:48.000
对

26:48.000 --> 26:49.000
那时候除了i6以外

26:49.000 --> 26:52.000
很多的那个时候的主流浏览器

26:52.000 --> 26:54.000
也都按照这样的一个规则来了

26:54.000 --> 26:55.000
对吧

26:55.000 --> 26:56.000
就是当你通过一个开关

26:56.000 --> 26:57.000
对吧

26:57.000 --> 26:58.000
来控制一下以后的话

26:58.000 --> 26:59.000
它可以从

26:59.000 --> 27:01.000
按标准模式的方式来渲染

27:01.000 --> 27:03.000
页面切换到按照这个怪异

27:03.000 --> 27:04.000
或者说按照混杂

27:04.000 --> 27:06.000
按模式的方式来渲染

27:06.000 --> 27:07.000
对

27:07.000 --> 27:09.000
我们其实叫做向前渐容

27:09.000 --> 27:10.000
向前渐容

27:10.000 --> 27:11.000
对 就是向以前的意思

27:11.000 --> 27:12.000
向以前

27:12.000 --> 27:13.000
对

27:13.000 --> 27:14.000
这个金缘机

27:14.000 --> 27:16.000
对 金缘机的术语它比较怪对吧

27:16.000 --> 27:19.000
比如说人类口中的异部和同步

27:19.000 --> 27:20.000
跟金缘机口中的异部同步

27:20.000 --> 27:21.000
它是不一样的

27:21.000 --> 27:22.000
它这个向前向后的话

27:22.000 --> 27:23.000
很多同学他可能

27:23.000 --> 27:24.000
向前渐容

27:24.000 --> 27:26.000
其实那个意思知道就行了

27:26.000 --> 27:28.000
要向前渐容

27:28.000 --> 27:29.000
要向以前的意思

27:29.000 --> 27:30.000
OK

27:30.000 --> 27:32.000
那这个当然了

27:32.000 --> 27:33.000
现在啊

27:33.000 --> 27:35.000
如今已经是2018年了

27:35.000 --> 27:36.000
对吧

27:36.000 --> 27:38.000
当然这个课也可能放到2019年

27:38.000 --> 27:40.000
可能放到2020年对吧

27:40.000 --> 27:42.000
我们为了咱们这个保证

27:42.000 --> 27:43.000
这个课实实的一个更新吧

27:43.000 --> 27:44.000
对吧

27:44.000 --> 27:45.000
我们说如今已经2025年了

27:45.000 --> 27:46.000
对吧

27:46.000 --> 27:47.000
2025年了

27:47.000 --> 27:48.000
就是

27:48.000 --> 27:50.000
到现在为止

27:50.000 --> 27:52.000
很少有公司

27:52.000 --> 27:54.000
再去渐容I6

27:54.000 --> 27:55.000
就I6以前了

27:55.000 --> 27:56.000
所以说

27:56.000 --> 27:57.000
你会发现现在出的一些

27:57.000 --> 27:58.000
主流浪漫器的话

27:58.000 --> 27:59.000
KRM对吧

27:59.000 --> 28:00.000
最新版本中

28:00.000 --> 28:02.000
已经没有什么怪异

28:02.000 --> 28:03.000
混杂模式了

28:03.000 --> 28:05.000
全部按标准模式来

28:05.000 --> 28:06.000
对

28:06.000 --> 28:07.000
全部怎么来

28:07.000 --> 28:08.000
就是说你再通过那个

28:08.000 --> 28:09.000
我们所说的开关

28:09.000 --> 28:10.000
来控制它的话

28:10.000 --> 28:11.000
也不好使了

28:11.000 --> 28:13.000
它依旧按照这种标准模式

28:13.000 --> 28:15.000
来渲染这样的一个页面

28:15.000 --> 28:16.000
这个渲染模式

28:16.000 --> 28:17.000
它的历史意义的话

28:17.000 --> 28:18.000
是在我看来

28:18.000 --> 28:19.000
到如今为止的话

28:19.000 --> 28:20.000
基本上

28:20.000 --> 28:22.000
已经算是被中介掉了

28:22.000 --> 28:24.000
因为大家都已经不用它了

28:24.000 --> 28:25.000
但我们作为一个

28:25.000 --> 28:26.000
计算机计人的一个素养

28:26.000 --> 28:27.000
作为前端这样一个素养的话

28:27.000 --> 28:29.000
我们还是来去

28:29.000 --> 28:30.000
理解理解理解

28:30.000 --> 28:31.000
这个渲染模式

28:31.000 --> 28:32.000
大致上什么意思

28:32.000 --> 28:33.000
但渲染模式

28:33.000 --> 28:34.000
我们说这么多以后的话

28:34.000 --> 28:36.000
我们来看一下

28:36.000 --> 28:38.000
那我们之前所说的

28:38.000 --> 28:39.000
开关里

28:39.000 --> 28:41.000
都好像来控制一个浏览器

28:41.000 --> 28:42.000
来显示页面的这样的一个

28:42.000 --> 28:44.000
渲染模式是什么呢

28:44.000 --> 28:45.000
那这个开关

28:45.000 --> 28:46.000
就是我们所说的

28:46.000 --> 28:47.000
Dock Type

28:47.000 --> 28:48.000
Dock Type

28:48.000 --> 28:49.000
那这个Dock Type

28:49.000 --> 28:50.000
你会发现

28:50.000 --> 28:52.000
它也有很多Bumper

28:52.000 --> 28:53.000
比如说

28:53.000 --> 28:55.000
最早的XHMR说Bumper

28:55.000 --> 28:56.000
4.0的时候对吧

28:56.000 --> 28:58.000
包括现在HRTM5

28:58.000 --> 28:59.000
规范的时候这个Bumper

28:59.000 --> 29:00.000
之前这些的话

29:00.000 --> 29:02.000
基本上都有用不上了

29:02.000 --> 29:03.000
这个东西

29:03.000 --> 29:05.000
你还是可以一期能看到的

29:05.000 --> 29:07.000
就是当我们在这里面说

29:07.000 --> 29:08.000
HTM5

29:09.000 --> 29:10.000
新的一个规范

29:10.000 --> 29:11.000
对

29:11.000 --> 29:12.000
HRTM5一说完以后的话

29:12.000 --> 29:13.000
好

29:13.000 --> 29:14.000
Tab一下

29:14.000 --> 29:15.000
说完以后它就出来了

29:15.000 --> 29:16.000
那这个东西

29:16.000 --> 29:17.000
它叫做Dock Type

29:17.000 --> 29:19.000
它定了一套

29:21.000 --> 29:23.000
它去进行这样的一个

29:23.000 --> 29:25.000
对这个渲染模式的一个控制

29:25.000 --> 29:26.000
一个控制

29:26.000 --> 29:28.000
那怎么来控制呢

29:28.000 --> 29:30.000
这个控制方法也很简单

29:30.000 --> 29:32.000
就是当你写它的话

29:32.000 --> 29:37.000
它就是让展示这个浏览器

29:37.000 --> 29:38.000
用标准模式的方式

29:38.000 --> 29:40.000
来对它进行渲染

29:40.000 --> 29:42.000
如果你写错了

29:42.000 --> 29:43.000
或者说你不写了

29:43.000 --> 29:46.000
就是按照怪异模式来渲染

29:46.000 --> 29:48.000
当然咱可以来看一下

29:48.000 --> 29:49.000
其实有个属性

29:49.000 --> 29:51.000
我们能来展示出来

29:51.000 --> 29:53.310
等会

29:55.310 --> 29:59.310
叫做Document.compat mode

29:59.310 --> 30:00.310
对有个属性

30:00.310 --> 30:01.310
你说这块的话

30:01.310 --> 30:02.310
我得打断你一下

30:02.310 --> 30:04.310
刚才那个向后兼容的事

30:04.310 --> 30:05.310
我说的向后兼容

30:05.310 --> 30:06.310
和你说的向前兼容

30:06.310 --> 30:07.310
是一回事

30:07.310 --> 30:10.310
但是标准说法是叫向后兼容

30:10.310 --> 30:12.310
向前兼容这个网页

30:12.310 --> 30:14.310
向后兼容这个浏览器

30:14.310 --> 30:16.310
你打这个康派的mode的时候

30:16.310 --> 30:18.310
它就有一个back mode

30:18.310 --> 30:20.310
它有一个back mode

30:20.310 --> 30:23.310
比如说你之前写的

30:23.310 --> 30:25.310
就是老版本要求的这个网页

30:25.310 --> 30:27.310
会在后面的浏览器里面

30:27.310 --> 30:28.310
正常的执行

30:28.310 --> 30:30.310
这叫向后兼容这个浏览器

30:30.310 --> 30:31.310
但是向前兼容这个网页

30:31.310 --> 30:33.310
是这么回事

30:33.310 --> 30:35.310
所以这一块我记得

30:35.310 --> 30:36.310
陈哥这也是讲过的

30:36.310 --> 30:37.310
对吧

30:37.310 --> 30:38.310
向后兼容

30:38.310 --> 30:39.310
这样的话

30:39.310 --> 30:40.310
正好就是把这个问题

30:40.310 --> 30:42.310
更好地给它解决出来了

30:42.310 --> 30:43.310
对吧

30:43.310 --> 30:44.310
其实都没有错

30:44.310 --> 30:46.310
再帮我分一下看一看

30:46.310 --> 30:47.310
看一看

30:47.310 --> 30:48.310
现在我点击右键

30:48.310 --> 30:50.310
open in default browser

30:50.310 --> 30:51.310
我们检查一下

30:51.310 --> 30:52.310
看一看

30:52.310 --> 30:54.310
console一下

30:54.310 --> 30:56.310
这是个csse

30:56.310 --> 30:57.310
对compat

30:57.310 --> 30:58.310
这证明

30:58.310 --> 30:59.310
当前这个浏览器

30:59.310 --> 31:01.310
是按照标准模式来去玩的

31:01.310 --> 31:02.310
对吧

31:02.310 --> 31:04.310
那如果说你把它

31:04.310 --> 31:05.310
写错了

31:05.310 --> 31:06.310
或者说不写了

31:06.310 --> 31:07.310
说不定是你再看一眼

31:07.310 --> 31:08.310
backcompat

31:08.310 --> 31:09.310
就是backcompat

31:09.310 --> 31:10.310
对吧

31:10.310 --> 31:11.310
有时候这一块的话

31:11.310 --> 31:12.310
对

31:12.310 --> 31:14.310
它就叫做混杂模式

31:14.310 --> 31:15.310
或者怪异模式

31:15.310 --> 31:16.310
对吧

31:16.310 --> 31:17.310
那当然

31:17.310 --> 31:18.310
确实是

31:18.310 --> 31:19.310
这个属性

31:19.310 --> 31:20.310
变成了混杂和怪异

31:20.310 --> 31:21.310
对吧

31:21.310 --> 31:22.310
那好了

31:22.310 --> 31:23.310
那咱们看一下

31:23.310 --> 31:24.310
是否真正

31:24.310 --> 31:26.310
能变成混杂和怪异

31:26.310 --> 31:27.310
如果你真正是的话

31:27.310 --> 31:28.310
那我们这个div

31:28.310 --> 31:30.310
如果给它一个宽高的话

31:30.310 --> 31:31.310
咱来看一眼

31:31.310 --> 31:33.310
那我设定这个宽度

31:33.310 --> 31:34.310
是不仅止的是

31:34.310 --> 31:35.310
它的这样的一个

31:35.310 --> 31:36.310
内有趣的宽度

31:36.310 --> 31:37.310
对吧

31:37.310 --> 31:38.310
还是加上拍顶

31:38.310 --> 31:39.310
和boudder对不对

31:39.310 --> 31:41.310
那这样我再给这个拍顶

31:41.310 --> 31:42.310
二式相锁

31:42.310 --> 31:43.310
这也好像过不去

31:44.310 --> 31:45.310
还有一个boudder

31:45.310 --> 31:46.310
二式相锁

31:46.310 --> 31:48.310
那你得在IE里面留在

31:48.310 --> 31:49.310
在IE的6

31:49.310 --> 31:50.310
60可以的

31:51.310 --> 31:52.310
咱们看一下

31:52.310 --> 31:53.310
等会儿实现

31:53.310 --> 31:54.310
在IE吗

31:54.310 --> 31:56.310
这边才没有下IE

31:56.310 --> 31:57.310
你可以回去自己试试吧

31:57.310 --> 31:58.310
没什么自带的吧

31:58.310 --> 31:59.310
应该

32:00.310 --> 32:01.310
没什么是不是

32:01.310 --> 32:02.310
没什么自带

32:02.310 --> 32:03.310
没什么自带

32:03.310 --> 32:04.310
应该有

32:04.310 --> 32:05.310
它是有IE

32:05.310 --> 32:07.310
但是IE10A

32:07.310 --> 32:08.310
A

32:08.310 --> 32:09.310
没有那个调节器是吧

32:09.310 --> 32:10.310
对

32:10.310 --> 32:11.310
简讨也很好

32:11.310 --> 32:12.310
回去改兴趣的话

32:12.310 --> 32:13.310
可以自己试一下

32:13.310 --> 32:14.310
但我估计你电脑也没有这个东西

32:14.310 --> 32:15.310
上IE6也挺惹

32:15.310 --> 32:16.310
那个界面你一瞅吧

32:16.310 --> 32:17.310
也不太好想

32:17.310 --> 32:18.310
特别复古

32:19.310 --> 32:20.310
那咱看一下

32:20.310 --> 32:21.310
虽然说你看起来

32:21.310 --> 32:22.310
这个怪异模式

32:22.310 --> 32:23.310
再来看一下

32:23.310 --> 32:24.310
锁定完它以后

32:24.310 --> 32:26.310
在DiOS里面

32:26.310 --> 32:27.310
我们来看

32:27.310 --> 32:28.310
其实还是给它

32:28.310 --> 32:29.310
设定内容趣事100了

32:29.310 --> 32:30.310
对吧

32:30.310 --> 32:31.310
拍顶是20

32:31.310 --> 32:32.310
对吧

32:32.310 --> 32:33.310
其实并没有真正

32:33.310 --> 32:35.310
变成我们所说的

32:35.310 --> 32:36.310
按照这种

32:36.310 --> 32:37.310
怪异模式

32:37.310 --> 32:38.310
或者混杂模式

32:38.310 --> 32:39.310
这样的合模型

32:39.310 --> 32:40.310
来进行这样的订宣

32:40.310 --> 32:41.310
因为现在

32:41.310 --> 32:42.310
气慢慢溜烂

32:42.310 --> 32:44.310
气已经不去支持它了

32:44.310 --> 32:45.310
也没有必要去支持它了

32:45.310 --> 32:47.310
就是它所遵循的

32:47.310 --> 32:48.310
怪异模式的版本

32:48.310 --> 32:49.310
跟之前那个版本

32:49.310 --> 32:51.310
还不太一样

32:51.310 --> 32:52.310
跟之前

32:52.310 --> 32:53.310
而且IE的和谷歌的

32:53.310 --> 32:54.310
和各方面的都不太一样

32:54.310 --> 32:56.310
其实Google这个怪异模式

32:56.310 --> 32:58.310
就是差异也并不是很大

32:58.310 --> 33:00.310
只有IE那个怪异模式

33:00.310 --> 33:01.310
的差异比较大

33:01.310 --> 33:02.310
其实

33:02.310 --> 33:03.310
它针对一些

33:03.310 --> 33:04.310
比如到我们的一些属性方法

33:04.310 --> 33:05.310
之前讲的时候

33:05.310 --> 33:06.310
还是说有点这方面的

33:06.310 --> 33:07.310
一个小的区别

33:07.310 --> 33:08.310
那区别并不是说

33:08.310 --> 33:10.310
特别明显那样的一个情况

33:10.310 --> 33:11.310
那时候给大家写了一个兼容

33:11.310 --> 33:12.310
然后就可以看一下

33:12.310 --> 33:13.310
那个东西

33:13.310 --> 33:14.310
但谷歌方面的怪异模式

33:14.310 --> 33:15.310
其实也没有什么

33:15.310 --> 33:16.310
特别好看的

33:16.310 --> 33:17.310
就知道有这回事

33:17.310 --> 33:18.310
就可以了

33:18.310 --> 33:19.310
现在应用它的这个概率

33:19.310 --> 33:20.310
和纪律特别小

33:20.310 --> 33:21.310
基本上用不着

33:21.310 --> 33:22.310
因为现在

33:22.310 --> 33:23.310
开启了怪异模式

33:23.310 --> 33:24.310
它所兼容的那个版本

33:24.310 --> 33:25.310
也就是回忆

33:25.310 --> 33:26.310
推到几个版本之前

33:26.310 --> 33:27.310
所兼容到那个时候

33:27.310 --> 33:28.310
那个时候

33:28.310 --> 33:29.310
太大区别

33:29.310 --> 33:30.310
没有太大区别

33:30.310 --> 33:31.310
那IEH的话

33:31.310 --> 33:32.310
如果真的有区别的话

33:32.310 --> 33:33.310
对

33:33.310 --> 33:34.310
如果真的有区别的话

33:34.310 --> 33:35.310
你也得是上网

33:35.310 --> 33:36.310
去百度或者说

33:36.310 --> 33:37.310
问你那些自身的同事

33:37.310 --> 33:38.310
之前有没有采过

33:38.310 --> 33:39.310
这方面的坑

33:39.310 --> 33:40.310
你自己去研究研究出来

33:40.310 --> 33:41.310
那个东西

33:41.310 --> 33:42.310
其实差别特别小

33:42.310 --> 33:43.310
而且这个差别

33:43.310 --> 33:45.310
差别又恰好是坑的概率

33:45.310 --> 33:47.310
那简直又微乎其位

33:47.310 --> 33:48.310
就知道咱们回事

33:48.310 --> 33:49.310
基本上就可以了

33:49.310 --> 33:50.310
其实咱们好像去年

33:50.310 --> 33:51.310
还前线在上

33:51.310 --> 33:52.310
淘宝就已经说了

33:52.310 --> 33:53.310
就不再兼容

33:53.310 --> 33:54.310
不再兼容

33:54.310 --> 33:55.310
不再兼容IE6了

33:55.310 --> 33:56.310
不再兼容IE8和IE9

33:56.310 --> 33:57.310
对

33:57.310 --> 33:58.310
已经差不多不兼容了

33:58.310 --> 33:59.310
你放心了

33:59.310 --> 34:00.310
那什么样的这个公司

34:00.310 --> 34:01.310
可能会出现

34:01.310 --> 34:03.310
让你兼容IE8和IE9呢

34:03.310 --> 34:04.310
基本上是那种

34:04.310 --> 34:05.310
突避的

34:05.310 --> 34:07.310
而且还是对企业的

34:07.310 --> 34:08.310
银行的

34:08.310 --> 34:09.310
银行的政务系统

34:09.310 --> 34:10.310
政务系统

34:10.310 --> 34:11.310
银行系统里面

34:11.310 --> 34:12.310
一般用IE6

34:12.310 --> 34:13.310
IE8的比较多

34:13.310 --> 34:15.310
因为它预价就是

34:15.310 --> 34:16.310
一开始预用的是XP

34:16.310 --> 34:17.310
XP是自带的

34:17.310 --> 34:19.310
就是预用的就是IE6

34:19.310 --> 34:20.310
高级点IE8

34:20.310 --> 34:21.310
对

34:21.310 --> 34:22.310
所以说

34:22.310 --> 34:23.310
咱们同学

34:23.310 --> 34:24.310
我也不建议咱们

34:24.310 --> 34:25.310
去量那个公司

34:25.310 --> 34:26.310
对吧

34:26.310 --> 34:27.310
现在的公司

34:27.310 --> 34:28.310
XP这个系统

34:28.310 --> 34:29.310
你看起来会

34:29.310 --> 34:30.310
非常怀旧

34:30.310 --> 34:31.310
就是你去了

34:31.310 --> 34:32.310
能给你个比较好的

34:32.310 --> 34:33.310
一个薪资的话

34:33.310 --> 34:34.310
但你做一年

34:34.310 --> 34:35.310
你发现以后的话

34:35.310 --> 34:37.310
你脱离这个时代了

34:37.310 --> 34:38.310
长毛了

34:38.310 --> 34:39.310
但是山顶洞的反转

34:39.310 --> 34:40.310
照照自己觉得不一样了

34:40.310 --> 34:41.310
就

34:41.310 --> 34:42.310
23S3对吧

34:42.310 --> 34:43.310
什么是没有意义

34:43.310 --> 34:44.310
你都不知道了

34:44.310 --> 34:45.310
对

34:45.310 --> 34:46.310
尤其你在北京工作的话

34:46.310 --> 34:47.310
你可能

34:47.310 --> 34:48.310
确确实实能变成

34:48.310 --> 34:49.310
那个北京人

34:49.310 --> 34:51.310
山顶洞那块

34:51.310 --> 34:53.310
山顶洞人

34:54.310 --> 34:55.310
所以说这一块的话

34:55.310 --> 34:56.310
咱们作为一个了解

34:56.310 --> 34:57.310
就是DalTab

34:57.310 --> 34:59.310
确实是可以

34:59.310 --> 35:01.310
去来修改这样的

35:01.310 --> 35:04.310
那个标准模式和怪异模式

35:04.310 --> 35:06.310
来进行这样的一个切换

35:06.310 --> 35:07.310
但咱没有不要

35:07.310 --> 35:08.310
给它进行这样的一个修改

35:08.310 --> 35:09.310
一律标准模式来

35:09.310 --> 35:10.310
就可以了

35:10.310 --> 35:11.310
就可以了

35:11.310 --> 35:12.310
这是作为一个历史

35:12.310 --> 35:13.310
咱来去说一说

35:13.310 --> 35:15.310
其实讲它的一个

35:15.310 --> 35:16.310
最根本的一个目的

35:16.310 --> 35:17.310
是来说一下

35:17.310 --> 35:19.310
这样的一个过程

35:19.310 --> 35:20.310
对吧

35:20.310 --> 35:21.310
刚才这块我得给你补充一下

35:21.310 --> 35:22.310
刚才这块咱俩产数

35:22.310 --> 35:24.310
好像不是特别清晰这块

35:24.310 --> 35:25.310
就是变成怪异模式

35:25.310 --> 35:26.310
就是上面这块没写拳

35:26.310 --> 35:27.310
给大家看一下上面这块

35:27.310 --> 35:28.310
没写拳

35:28.310 --> 35:30.310
它确实能够变成怪异模式

35:30.310 --> 35:32.310
只不过变成这个怪异模式

35:32.310 --> 35:33.310
它和现在这个区别

35:33.310 --> 35:34.310
并不是很大

35:34.310 --> 35:35.310
并不是很大

35:35.310 --> 35:36.310
而且谷歌浏览器

35:36.310 --> 35:38.310
它也变不成IE那种怪异模式

35:38.310 --> 35:40.310
所以说即使写上来宽高

35:40.310 --> 35:41.310
就和咱之前产数那种

35:41.310 --> 35:42.310
那样的一个合模型

35:42.310 --> 35:43.310
也没有什么太大的一个关系

35:43.310 --> 35:44.310
你也看不出来

35:44.310 --> 35:45.310
它会变成那样的合模型

35:45.310 --> 35:47.310
但你在老版本的IE上

35:47.310 --> 35:49.310
你启动这个怪异模式的话

35:49.310 --> 35:51.310
它可能能变成IE6的怪异模式

35:51.310 --> 35:52.310
就是IE6的怪异模式

35:52.310 --> 35:53.310
就是你拿IE6的话

35:53.310 --> 35:55.310
IE6是一个很好的一个分件点

35:55.310 --> 35:56.310
你拿IE6是

35:56.310 --> 35:57.310
拿IE6是的话你会发现

35:57.310 --> 35:59.310
这是写个不写和

35:59.310 --> 36:00.310
不写的差距是非常大的

36:00.310 --> 36:01.310
对 因为怪异模式

36:01.310 --> 36:02.310
它也分版本的

36:02.310 --> 36:03.310
比如IE6的怪异模式

36:03.310 --> 36:05.310
是特别特殊的一个版本

36:05.310 --> 36:07.310
好像IE7和IE8的怪异模式

36:07.310 --> 36:08.310
的标准沿用IE6的

36:08.310 --> 36:09.310
好像是这样

36:09.310 --> 36:11.310
就是用IE7IE8启动怪异模式的话

36:11.310 --> 36:13.310
它的标准和IE6也差不多

36:13.310 --> 36:14.310
也能启动那样的一个合模型

36:14.310 --> 36:16.310
但是再往后的版本就不好说了

36:16.310 --> 36:17.310
你可以亲自试一下

36:17.310 --> 36:20.310
其实我刚才说的它也是这样的

36:20.310 --> 36:22.310
就是这个东西写和不写的话

36:22.310 --> 36:23.310
是直接能控制它

36:23.310 --> 36:26.310
是否采用标准模式和怪异模式

36:26.310 --> 36:27.310
但怪异模式

36:27.310 --> 36:29.310
即使它采用完以后的话

36:29.310 --> 36:30.310
是否能真正的变成

36:30.310 --> 36:31.310
像我们说的那样

36:31.310 --> 36:32.310
这个东西

36:32.310 --> 36:33.310
还得看浏览器

36:33.310 --> 36:35.310
它是不一定的

36:35.310 --> 36:37.310
但是这个启动完怪异模式之后

36:37.310 --> 36:39.310
有一些道目方面的操作的方法

36:39.310 --> 36:40.310
在取值的时候

36:40.310 --> 36:41.310
确实有点差别

36:41.310 --> 36:42.310
这时间跟大家说过

36:42.310 --> 36:44.310
图形变化的时候

36:44.310 --> 36:46.310
在取一些值的时候

36:46.310 --> 36:47.310
在取一些宽高的值的时候

36:47.310 --> 36:48.310
之前给大家看

36:48.310 --> 36:49.310
奥斯亚的系列

36:49.310 --> 36:50.310
对 内容

36:50.310 --> 36:51.310
稍稍有点改变

36:51.310 --> 36:52.310
那时候给大家说过这事

36:52.310 --> 36:53.310
而且曾经被那时候

36:53.310 --> 36:54.310
讲这个属性的时候

36:54.310 --> 36:55.310
给大家提过一个

36:55.310 --> 36:56.310
compound mode这个事

36:56.310 --> 36:57.310
但其实这一块

36:57.310 --> 37:00.310
还真不想给大家讲那么全

37:00.310 --> 37:01.310
因为讲那么全以后

37:01.310 --> 37:02.310
没有必要

37:02.310 --> 37:03.310
169个全都蒙了

37:03.310 --> 37:05.310
又是这个溜软器版本

37:05.310 --> 37:06.310
又那个溜软器版本

37:06.310 --> 37:07.310
因为这个复杂

37:07.310 --> 37:09.310
这个东西也没有必要的技

37:09.310 --> 37:10.310
现在也用不上了

37:10.310 --> 37:12.310
感觉有关可以自己查一下

37:12.310 --> 37:13.310
这个东西

37:14.310 --> 37:16.310
对 所以说你基本上知道

37:16.310 --> 37:18.310
它能控制个怪异和混杂

37:18.310 --> 37:20.310
控制个怪异和标准模式

37:20.310 --> 37:21.310
就OK了

37:21.310 --> 37:22.310
而且你知道

37:22.310 --> 37:24.310
这个大致的渲染过程

37:24.310 --> 37:25.310
就已经非常好了

37:25.310 --> 37:27.310
我们基本上就是来讲相智

37:28.310 --> 37:29.310
那这一块的话

37:29.310 --> 37:30.310
咱们大概了解了

37:30.310 --> 37:32.310
这样一个渲染的过程

37:32.310 --> 37:33.310
也知道这个dow type

37:33.310 --> 37:34.310
什么意思以后的话

37:34.310 --> 37:35.310
咱们在后面

37:35.310 --> 37:36.310
这个CSS内容之后

37:36.310 --> 37:37.310
讲到性能的时候

37:37.310 --> 37:38.310
才会拿出来

37:38.310 --> 37:39.310
咱来去说一说

37:39.310 --> 37:40.310
咱来去说一说

37:40.310 --> 37:41.310
那这一块的话

37:41.310 --> 37:42.310
咱们基本上

37:42.310 --> 37:43.310
就已经高于段落了

37:43.310 --> 37:44.310
然后dow type的话

37:44.310 --> 37:46.310
咱知道大体什么意思

37:46.310 --> 37:47.310
你别瞅它蒙就行

37:47.310 --> 37:48.310
你知道它是能

37:48.310 --> 37:49.310
改变渲染模式的

37:49.310 --> 37:50.310
就可以了

37:50.310 --> 37:51.310
那接下来的话

37:52.310 --> 37:53.310
那接下来的话

37:53.310 --> 37:54.310
咱们可以再往下来说说

37:54.310 --> 37:55.310
对吧

37:55.310 --> 37:57.310
来察觉不露一些其他的点

37:57.310 --> 37:58.310
那其他点

37:58.310 --> 37:59.310
咱可以来看一看

37:59.310 --> 38:00.310
首先是另外一个标签

38:00.310 --> 38:01.310
再要是属性的特性

38:01.310 --> 38:02.310
再要是图片压杂

38:02.310 --> 38:03.310
和懒杂杂

38:03.310 --> 38:04.310
再要是一个mess

38:04.310 --> 38:05.310
转动应用

38:05.310 --> 38:06.310
再要稳道碎片

38:06.310 --> 38:07.310
对吧

38:07.310 --> 38:08.310
这边说的虚拟道

38:08.310 --> 38:09.310
全都是相互隔绝的这个指点

38:09.310 --> 38:10.310
没啥太大连性

38:10.310 --> 38:11.310
一点连性都没有

38:11.310 --> 38:13.310
但是确实是察觉不露的

38:13.310 --> 38:14.310
一个关键环节

38:14.310 --> 38:15.310
非常非常重要

38:15.310 --> 38:16.310
因为这东西

38:16.310 --> 38:17.310
咱们山雷堡这个标签

38:17.310 --> 38:18.310
咱们是没有讲过

38:18.310 --> 38:21.310
但确实还是比较常用的

38:21.310 --> 38:22.310
那接下来还有一些数组课

38:22.310 --> 38:23.310
是吧

38:23.310 --> 38:24.310
有 是我讲

38:24.310 --> 38:25.310
接下来世界数组课

38:25.310 --> 38:26.310
对 还有我

38:28.310 --> 38:29.310
不急

38:29.310 --> 38:30.310
OK 那咱来看一下

38:30.310 --> 38:31.310
这个标签

38:31.310 --> 38:33.310
什么时候会用得上的

38:33.310 --> 38:34.310
还是打百度

38:34.310 --> 38:35.310
我还是点登录

38:35.310 --> 38:36.310
登录完以后的话

38:36.310 --> 38:37.310
这个还挺常用的

38:37.310 --> 38:39.310
是在之前的这个

38:39.310 --> 38:40.310
现在也是

38:40.310 --> 38:41.310
也挺常用的

38:41.310 --> 38:42.310
基本你输入框

38:42.310 --> 38:43.310
旁边这个文字

38:43.310 --> 38:44.310
都是用Label

38:44.310 --> 38:45.310
你发现一个特点

38:45.310 --> 38:46.310
这个输入框

38:46.310 --> 38:48.310
你在点这个输入框的时候

38:48.310 --> 38:49.310
点那个输入框

38:49.310 --> 38:50.310
这个光标具体在哪块

38:50.310 --> 38:51.310
这很正常

38:51.310 --> 38:52.310
再正常不过了

38:52.310 --> 38:53.310
但是当你在点

38:53.310 --> 38:54.310
旁边这个文字的时候

38:54.310 --> 38:55.310
你会发现

38:55.310 --> 38:56.310
你点的旁边输入框

38:56.310 --> 38:57.310
那个文字的时候

38:57.310 --> 38:58.310
这个输入框里面

38:58.310 --> 39:01.310
依然去聚焦这样的一个光标

39:01.310 --> 39:02.310
依然聚焦

39:02.310 --> 39:03.310
你看点旁边那个文字

39:03.310 --> 39:04.310
你点拥护名

39:04.310 --> 39:05.310
手机号

39:05.310 --> 39:06.310
依然聚焦这个光标

39:06.310 --> 39:07.310
还可以看一眼

39:07.310 --> 39:08.310
这是怎么回事

39:08.310 --> 39:09.310
你点这个输入框

39:09.310 --> 39:11.310
我这个鼠标有一个on focus

39:11.310 --> 39:12.310
这很正常

39:12.310 --> 39:13.310
你点旁边这个文字

39:13.310 --> 39:14.310
我也on focus

39:14.310 --> 39:15.310
这东西肯定就有联系

39:15.310 --> 39:17.310
而且这个联系是不是那么复杂呢

39:17.310 --> 39:18.310
是不是需要这个js

39:18.310 --> 39:19.310
那么复杂的操作呢

39:19.310 --> 39:20.310
可以那么复杂的操作

39:20.310 --> 39:21.310
你可以那么复杂的操作

39:21.310 --> 39:23.310
但是咱们六案七

39:23.310 --> 39:24.310
给咱提供一个标签

39:24.310 --> 39:25.310
就是让咱避免了

39:25.310 --> 39:26.310
特别复杂的这个操作

39:26.310 --> 39:27.310
这点还挺人性化的

39:27.310 --> 39:28.310
这个东西

39:28.310 --> 39:29.310
这个标签

39:29.310 --> 39:30.310
这个标签就是一个

39:30.310 --> 39:31.310
我们说的Label

39:31.310 --> 39:32.310
Label

39:32.310 --> 39:34.310
OK 那咱可以来试试

39:34.310 --> 39:35.310
让你来试试

39:35.310 --> 39:37.310
就起到一个绑定化的作用

39:37.310 --> 39:39.310
OK 报设一下

39:39.310 --> 39:41.310
这让给咱来个

39:41.310 --> 39:42.310
诛试吧

39:42.310 --> 39:43.310
咱也不用它了

39:43.310 --> 39:44.310
好 这来个诛试

39:44.310 --> 39:45.310
就相当一把两个标签

39:45.310 --> 39:47.310
世界一体化了

39:48.310 --> 39:49.310
对 这个世界一体化

39:49.310 --> 39:50.310
非常非常重要

39:50.310 --> 39:51.310
咱可以一会来说一说

39:51.310 --> 39:52.310
说一说

39:52.310 --> 39:54.310
这是一个User Name

39:54.310 --> 39:55.310
下面一个input

39:55.310 --> 39:57.310
它本身是没联系的对吧

39:57.310 --> 39:58.310
它没联系的

39:58.310 --> 39:59.310
那这个input的话

39:59.310 --> 40:01.310
我给它来个ID

40:01.310 --> 40:03.310
就做一个demo

40:03.310 --> 40:04.310
对吗

40:04.310 --> 40:05.310
好 完了

40:05.310 --> 40:06.310
咱们来看一下

40:06.310 --> 40:07.310
你居然怎么让它俩产生联系

40:07.310 --> 40:08.310
对啊

40:08.310 --> 40:09.310
先看一下没联系啥样的

40:09.310 --> 40:10.310
咱们看一下

40:10.310 --> 40:11.310
现在我写完Label标签以后的话

40:11.310 --> 40:12.310
对吧

40:12.310 --> 40:13.310
它俩能产生联系否

40:13.310 --> 40:14.310
对吧

40:14.310 --> 40:15.310
能产生联系吗

40:15.310 --> 40:16.310
对吧

40:16.310 --> 40:17.310
来看一下

40:17.310 --> 40:18.310
大凡变成变到现在了

40:18.310 --> 40:19.310
你这笨响

40:19.310 --> 40:20.310
它也不会有联系

40:20.310 --> 40:21.310
因为你没写啥东西

40:21.310 --> 40:22.310
什么没写

40:22.310 --> 40:23.310
凭什么有联系

40:23.310 --> 40:24.310
对吧

40:24.310 --> 40:25.310
因为它俩按着标进

40:25.310 --> 40:26.310
对吧

40:26.310 --> 40:27.310
很大时间不可能

40:27.310 --> 40:28.310
对不对

40:28.310 --> 40:29.310
那你看好了

40:29.310 --> 40:30.310
我们在Label标签

40:30.310 --> 40:31.310
我生成以后

40:32.310 --> 40:33.310
为了谁

40:33.310 --> 40:34.310
为了谁

40:34.310 --> 40:35.310
为了谁

40:35.310 --> 40:36.310
为了谁

40:36.310 --> 40:37.310
为了谁 很重要

40:37.310 --> 40:38.310
对吧

40:38.310 --> 40:39.310
你这个Label是为了谁

40:39.310 --> 40:41.310
为了唯一的这个标签

40:41.310 --> 40:42.310
唯一的标签怎么来

40:42.310 --> 40:44.310
去标识呢

40:44.310 --> 40:45.310
用ID对不对

40:45.310 --> 40:46.310
就是给了ID对吧

40:46.310 --> 40:47.310
那放这一块的话

40:47.310 --> 40:48.310
好了

40:48.310 --> 40:49.310
写个demo

40:49.310 --> 40:51.310
那这里面我这个Label标签是为了

40:51.310 --> 40:52.310
为了它的

40:52.310 --> 40:53.310
为了它的

40:53.310 --> 40:54.310
对吧

40:54.310 --> 40:55.310
好 那咱保存一下看一下

40:55.310 --> 40:56.310
是不是

40:56.310 --> 40:57.310
刷新一下

40:57.310 --> 40:58.310
点击

40:58.310 --> 40:59.310
它确实聚焦了对不对

40:59.310 --> 41:00.310
好 现在呢

41:00.310 --> 41:01.310
我点u的name

41:01.310 --> 41:02.310
也可以聚焦了对对对

41:02.310 --> 41:03.310
对吧

41:03.310 --> 41:04.310
那这一块的话

41:04.310 --> 41:05.310
就是这个应用嘛

41:05.310 --> 41:06.310
就这么简单

41:06.310 --> 41:07.310
也可以把那个实践筹业

41:07.310 --> 41:09.310
把那个实践你点Label

41:09.310 --> 41:10.310
对 它也会去

41:10.310 --> 41:11.310
这个箱子去出发的

41:11.310 --> 41:12.310
因为咱可以试试

41:12.310 --> 41:14.310
要说这个应用的话

41:14.310 --> 41:15.310
就是表面的应用之一

41:15.310 --> 41:16.310
是拿这个fault

41:16.310 --> 41:17.310
fault这个demo id

41:17.310 --> 41:18.310
就可以了

41:18.310 --> 41:19.310
其实它俩不挨着

41:19.310 --> 41:20.310
也没问题

41:20.310 --> 41:21.310
不挨着没问题

41:21.310 --> 41:22.310
那这个

41:23.310 --> 41:25.310
实践也是有这样的关联性的

41:25.310 --> 41:26.310
那这个关联性的话

41:26.310 --> 41:27.310
咱可以拿出来去看一看

41:27.310 --> 41:28.310
看一看

41:28.310 --> 41:29.310
直接在上面写

41:29.310 --> 41:31.310
就安安什么什么就可以了

41:31.310 --> 41:33.310
好 这个很像是对吧

41:33.310 --> 41:34.310
那这个

41:34.310 --> 41:36.310
我怕给同学养成

41:36.310 --> 41:37.310
不好的习惯对吧

41:37.310 --> 41:38.310
上来就把所有的行为

41:38.310 --> 41:39.310
都写上这个行间

41:39.310 --> 41:40.310
这不太好

41:40.310 --> 41:41.310
那我来个

41:41.310 --> 41:43.310
O-L-E-B-R-Label

41:43.310 --> 41:45.310
通过document.getElement

41:45.310 --> 41:46.310
bytecagname对吧

41:46.310 --> 41:47.310
这是我写一个

41:48.310 --> 41:49.310
不是不应该选

41:49.310 --> 41:50.310
input吗

41:50.310 --> 41:51.310
而且我都选一下

41:51.310 --> 41:52.310
我都选一下

41:52.310 --> 41:54.310
我来个o-input

41:54.310 --> 41:59.350
等那个document.getElement

41:59.350 --> 42:01.350
我这是写个bytecagname

42:01.350 --> 42:03.350
好 来个demo

42:03.350 --> 42:04.350
那现在我给它俩

42:04.350 --> 42:05.350
都绑那个时间

42:05.350 --> 42:07.350
一个叫做O-L-E-B-R-Label

42:07.350 --> 42:08.350
等那个onclink

42:08.350 --> 42:12.580
放在写

42:13.580 --> 42:14.580
我这输出this

42:14.580 --> 42:15.580
输出this

42:15.580 --> 42:16.580
这输出this的话

42:16.580 --> 42:18.580
同学应该知道什么意思

42:18.580 --> 42:19.580
再来个o-input

42:19.580 --> 42:21.580
等那个onclink

42:21.580 --> 42:25.340
这手速还可以的

42:25.340 --> 42:26.340
跟成个差别

42:26.340 --> 42:27.340
一会儿换我达点

42:28.340 --> 42:29.340
可以比较比较

42:30.340 --> 42:31.340
这个键盘我不太熟悉

42:31.340 --> 42:32.340
要不然速度还能再快一倍

42:33.340 --> 42:34.340
保存一下

42:34.340 --> 42:35.340
看一眼

42:36.340 --> 42:38.340
就叫拉不出史来地球没有系列

42:38.340 --> 42:39.340
对吧

42:39.340 --> 42:40.340
装备不行

42:40.340 --> 42:41.340
装备不行

42:41.340 --> 42:42.340
少许您看一下

42:43.340 --> 42:44.340
检查一下

42:44.340 --> 42:45.340
console

42:45.340 --> 42:47.340
现在我点这个input的

42:47.340 --> 42:49.340
一定会相当出发这个时间

42:49.340 --> 42:50.340
对吧

42:50.340 --> 42:51.340
因为毕竟时间

42:51.340 --> 42:52.340
这个时间发在它身上

42:52.340 --> 42:53.340
对

42:53.340 --> 42:54.340
那么我点它

42:54.340 --> 42:55.340
你会发现

42:55.340 --> 42:57.340
它俩全干这样的事

42:57.340 --> 42:58.340
全都出发了

42:58.340 --> 42:59.340
因为我时间

42:59.340 --> 43:01.340
确实发生在Label的身上

43:01.340 --> 43:03.340
但是由于它俩有这样的关联

43:03.340 --> 43:04.340
关联关系

43:04.340 --> 43:06.340
所以说它也被出发了

43:06.340 --> 43:08.340
这个关联关系是单向的

43:08.340 --> 43:10.340
你点Labelinput被出发

43:10.340 --> 43:11.340
你点inputLabel不出发

43:11.340 --> 43:12.340
对

43:12.340 --> 43:14.340
这相当于什么意思

43:14.340 --> 43:15.340
一个组的

43:15.340 --> 43:16.340
一个组的

43:16.340 --> 43:17.340
一个奴才对吧

43:17.340 --> 43:18.340
一个奴才

43:18.340 --> 43:19.340
点一下

43:19.340 --> 43:20.340
点一下

43:20.340 --> 43:21.340
OK

43:21.340 --> 43:22.340
这样的话

43:22.340 --> 43:23.340
咱作为这样的一个

43:23.340 --> 43:24.340
实验上的一个重放点

43:24.340 --> 43:25.340
你理解

43:25.340 --> 43:26.340
理解

43:26.340 --> 43:28.340
那Label标签其实也没啥了

43:28.340 --> 43:29.340
基本上它有这么多

43:29.340 --> 43:30.340
有这么多

43:30.340 --> 43:31.340
那接下来的话

43:31.340 --> 43:32.340
咱们再看一个知识店

43:32.340 --> 43:34.340
今天知识店确实比较碎

43:34.340 --> 43:35.340
讲了下一个

43:35.340 --> 43:36.340
有点心情不让

43:36.340 --> 43:37.340
对吧

43:37.340 --> 43:38.340
没关系

43:39.340 --> 43:40.340
不是

43:40.340 --> 43:41.340
我比较擅长大讲

43:41.340 --> 43:43.340
你们听听就是习惯了

43:43.340 --> 43:44.340
来看一下

43:45.340 --> 43:46.340
接下来对吧

43:46.340 --> 43:47.340
就是属性和特性

43:47.340 --> 43:48.340
属性和特性

43:48.340 --> 43:49.340
属性和特性

43:49.340 --> 43:50.340
这个挺重要

43:50.340 --> 43:51.340
因为之前连的

43:51.340 --> 43:52.340
它连的上

43:52.340 --> 43:53.340
也能它连的上

43:53.340 --> 43:54.340
一会来连试试

43:55.340 --> 43:56.340
咱们看一下

43:56.340 --> 43:57.340
属性的特性

43:58.340 --> 44:00.340
咱们之前总提属性

44:00.340 --> 44:02.340
好像没有太提过特性的意思

44:02.340 --> 44:03.340
即使提特性

44:03.340 --> 44:04.340
大家也可能认为

44:04.340 --> 44:05.340
那就是属性

44:05.340 --> 44:07.340
其实也就是属性

44:07.340 --> 44:09.340
我上课的时候好像提过一点点

44:09.340 --> 44:11.340
但是我估计以大家这个记性

44:11.340 --> 44:12.340
贵人多忘事

44:12.340 --> 44:14.340
你应该是不记得了

44:14.340 --> 44:15.340
但是那个

44:15.340 --> 44:17.340
这个妃子可能就不一定了

44:17.340 --> 44:18.340
对

44:18.340 --> 44:19.340
贵人对吧

44:20.340 --> 44:21.340
再不记得你就是答应了

44:23.340 --> 44:24.340
OK那咱这样

44:24.340 --> 44:25.340
给它来个value

44:25.340 --> 44:27.340
value是一个a a

44:27.340 --> 44:28.340
那我这写个input

44:28.340 --> 44:29.340
input

44:29.340 --> 44:30.340
再来个id

44:30.340 --> 44:31.340
为了方便我们去获取

44:31.340 --> 44:32.340
来个id

44:32.340 --> 44:33.340
那个哈哈

44:33.340 --> 44:34.340
对吧

44:34.340 --> 44:35.340
demo

44:35.340 --> 44:36.340
我再来个属性

44:37.340 --> 44:38.340
date

44:38.340 --> 44:39.340
对这个属性咱好像

44:39.340 --> 44:40.340
之前没有去写过吧

44:40.340 --> 44:41.340
确实没有写

44:41.340 --> 44:42.340
是我自己编的一个属性

44:42.340 --> 44:43.340
自定义的

44:43.340 --> 44:44.340
就看起来挺正规

44:45.340 --> 44:47.340
其实它并不是这个

44:47.340 --> 44:48.340
就是怎么说

44:48.340 --> 44:49.340
原生代理的

44:49.340 --> 44:50.340
并不是原生

44:50.340 --> 44:51.340
就可以让它有的属性

44:51.340 --> 44:52.340
就是你写完之后

44:52.340 --> 44:53.340
没什么太大意

44:53.340 --> 44:54.340
你写没毛病

44:54.340 --> 44:55.340
但你写完之后

44:55.340 --> 44:56.340
它也不会作用上啥

44:56.340 --> 44:57.340
对

44:57.340 --> 44:58.340
那在这一块的话

44:58.340 --> 44:59.340
我们来好好说说

44:59.340 --> 45:00.340
属性和特性

45:00.340 --> 45:01.340
属性和特性

45:01.340 --> 45:02.340
即使在我看来

45:02.340 --> 45:04.340
特性其实是

45:04.340 --> 45:06.340
包含在属性之中的

45:06.340 --> 45:08.340
或说属性

45:08.340 --> 45:11.340
之中是包含特性的

45:11.340 --> 45:12.340
就属性

45:12.340 --> 45:14.340
它是一个更大的范围

45:14.340 --> 45:15.340
特性是

45:15.340 --> 45:17.340
一个大范围里面的小范围

45:17.340 --> 45:18.340
那如果说

45:18.340 --> 45:20.340
拿在身上去举例子的话

45:20.340 --> 45:21.340
那你邓哥吧

45:21.340 --> 45:22.340
那邓哥他还举例子

45:22.340 --> 45:23.340
比如说你邓哥

45:23.340 --> 45:25.340
天生就有耳朵

45:25.340 --> 45:26.340
有鼻子

45:26.340 --> 45:27.340
对吧

45:27.340 --> 45:28.340
有眉毛

45:28.340 --> 45:29.340
有嘴

45:29.340 --> 45:30.340
有脂肪肝

45:30.340 --> 45:31.340
有顺病

45:31.340 --> 45:33.340
天生就有这些东西

45:33.340 --> 45:34.340
没有钱的钱

45:34.340 --> 45:36.340
这是它的特性

45:36.340 --> 45:38.340
属性的

45:38.340 --> 45:39.340
说是后天

45:39.340 --> 45:40.340
加上觉得

45:40.340 --> 45:41.340
习得它而来的

45:41.340 --> 45:42.340
可以它没有的

45:42.340 --> 45:43.340
或者说是

45:43.340 --> 45:45.340
这个上帝在造人的时候

45:45.340 --> 45:46.340
没有规定

45:46.340 --> 45:47.340
你可以去修它的

45:47.340 --> 45:48.340
对吧

45:48.340 --> 45:49.340
那什么意思呢

45:49.340 --> 45:50.340
就比如说

45:50.340 --> 45:51.340
这个

45:51.340 --> 45:52.340
比如说

45:52.340 --> 45:54.340
咱拿西条反射来举例子

45:54.340 --> 45:56.340
你天生就有西条反射这个特性

45:56.340 --> 45:57.340
那小时候一捶

45:57.340 --> 45:58.340
对吧

45:58.340 --> 45:59.340
你弹

45:59.340 --> 46:00.340
那比如说别人骂你

46:00.340 --> 46:02.340
比如说你真不是个东西

46:02.340 --> 46:03.340
那当然

46:03.340 --> 46:04.340
你在不了解这个语言的时候

46:04.340 --> 46:06.340
没有学习过的时候

46:06.340 --> 46:07.340
你当然会对这个东西

46:07.340 --> 46:08.340
没有太多的一个反应

46:08.340 --> 46:09.340
对吧

46:09.340 --> 46:10.340
就比如说

46:10.340 --> 46:11.340
邓哥

46:11.340 --> 46:12.340
邓哥小的时候

46:12.340 --> 46:13.340
你怎么骂他

46:13.340 --> 46:14.340
他都没反应

46:14.340 --> 46:15.340
因为他没有学过

46:15.340 --> 46:16.340
学过这个东西

46:16.340 --> 46:17.340
语言

46:17.340 --> 46:18.340
并不够是后天学习的

46:18.340 --> 46:19.340
对吧

46:19.340 --> 46:21.340
但也算他自己的一种应激反应

46:21.340 --> 46:23.340
也算他的这个东西

46:23.340 --> 46:25.340
就比如说他天生带这个

46:25.340 --> 46:26.340
什么眼睛

46:26.340 --> 46:28.340
就手耳鼻喉这个东西

46:28.340 --> 46:29.340
他天生都带的

46:29.340 --> 46:30.340
这个是他天生就有的

46:30.340 --> 46:31.340
当然后天也是他自表的

46:31.340 --> 46:32.340
除非发生什么意外

46:32.340 --> 46:34.340
但确实没少发生

46:34.340 --> 46:36.340
就是一开始天生就是他的

46:36.340 --> 46:38.340
但后来随着他的成长

46:38.340 --> 46:39.340
随着他读书学习

46:39.340 --> 46:40.340
是这些东西

46:40.340 --> 46:41.340
对

46:41.340 --> 46:42.340
随着他读书学习

46:42.340 --> 46:43.340
成长挣钱什么的

46:43.340 --> 46:44.340
他又增加了很多属性

46:44.340 --> 46:45.340
比如说他有Marney

46:45.340 --> 46:46.340
比如说他有一个媳妇

46:46.340 --> 46:47.340
孩子什么的

46:47.340 --> 46:48.340
也都算他的这个属性

46:48.340 --> 46:49.340
对

46:49.340 --> 46:50.340
但是我们把这两者之间的

46:50.340 --> 46:51.340
一个关系

46:51.340 --> 46:53.340
就叫做什么呢

46:53.340 --> 46:54.340
比如说后天增加那些

46:54.340 --> 46:55.340
和他先天带的一些

46:55.340 --> 46:57.340
我们都可以管的叫做属性

46:57.340 --> 46:58.340
但是后天加那些呢

46:58.340 --> 46:59.340
就不要太久了

46:59.340 --> 47:00.340
我们单独可以拿出来

47:00.340 --> 47:02.340
又管的叫做特性

47:02.340 --> 47:03.340
是

47:03.340 --> 47:04.340
他先天带

47:04.340 --> 47:05.340
先天带的特性

47:05.340 --> 47:06.340
先天带的特性

47:06.340 --> 47:07.340
先天带的东西

47:07.340 --> 47:08.340
比如鼻子眼睛这个东西

47:08.340 --> 47:09.340
他就特性

47:09.340 --> 47:10.340
后天的东西

47:10.340 --> 47:11.340
对

47:11.340 --> 47:13.340
后天的东西

47:13.340 --> 47:14.340
对

47:14.340 --> 47:15.340
后天东西的话

47:15.340 --> 47:17.340
他就不是这样的一个特性

47:17.340 --> 47:18.340
就比如说

47:18.340 --> 47:19.340
还按照我刚刚看来说

47:19.340 --> 47:20.340
你是这么讲的

47:20.340 --> 47:21.340
包含关系

47:21.340 --> 47:22.340
对对对

47:22.340 --> 47:23.340
按你的来

47:23.340 --> 47:24.340
反正书都通归

47:24.340 --> 47:25.340
我和陈老师

47:25.340 --> 47:26.340
这个思路不太一样

47:26.340 --> 47:27.340
就是他那个

47:27.340 --> 47:28.340
你再重说一下

47:28.340 --> 47:29.340
再重说一下

47:29.340 --> 47:30.340
我再重说一下

47:30.340 --> 47:31.340
就是那个

47:31.340 --> 47:32.340
你邓哥实际上

47:32.340 --> 47:33.340
比如说眼睛鼻子

47:33.340 --> 47:34.340
这些先天就有

47:34.340 --> 47:35.340
他叫做特性

47:35.340 --> 47:36.340
像后天

47:36.340 --> 47:37.340
比如说努力

47:37.340 --> 47:38.340
他挣那些钱

47:38.340 --> 47:39.340
那把身外之物

47:39.340 --> 47:40.340
媳妇

47:40.340 --> 47:41.340
这个东西

47:41.340 --> 47:42.340
他是属性

47:42.340 --> 47:43.340
这些属性中

47:43.340 --> 47:44.340
就是你的这个鼻子

47:44.340 --> 47:45.340
耳朵

47:45.340 --> 47:46.340
眼睛算不算属性

47:46.340 --> 47:47.340
也算属性

47:47.340 --> 47:48.340
只不过由于他是先天

47:48.340 --> 47:49.340
就带有的

47:49.340 --> 47:50.340
所以说我们

47:50.340 --> 47:51.340
给他又来一个词

47:51.340 --> 47:52.340
叫做特性

47:52.340 --> 47:53.340
我们一提属性的话

47:53.340 --> 47:54.340
就是他所有的东西

47:54.340 --> 47:55.340
他都要属性

47:55.340 --> 47:57.340
只不过那些特殊的先天

47:57.340 --> 47:58.340
他带有的

47:58.340 --> 47:59.340
叫做特性

47:59.340 --> 48:00.340
OK

48:00.340 --> 48:01.340
OK

48:01.340 --> 48:02.340
那这一块的话

48:02.340 --> 48:03.340
算是解释明白了

48:03.340 --> 48:05.340
解释了很长时间

48:05.340 --> 48:07.340
之前反而我跟咱们

48:07.340 --> 48:08.340
老的学员的话

48:08.340 --> 48:09.340
我也讲过这一块

48:09.340 --> 48:10.340
我说

48:10.340 --> 48:11.340
很像那个

48:11.340 --> 48:12.340
西条反射

48:12.340 --> 48:14.340
确实是你这样的一个特性

48:14.340 --> 48:15.340
但比如说

48:15.340 --> 48:17.340
你生下来的时候

48:17.340 --> 48:18.340
别人骂你

48:18.340 --> 48:19.340
你这指定是没反应的

48:19.340 --> 48:21.340
但后天就比如说

48:21.340 --> 48:22.340
邓哥

48:22.340 --> 48:24.340
通过了很多很多事

48:24.340 --> 48:25.340
一个经历

48:25.340 --> 48:26.340
完了之后

48:26.340 --> 48:27.340
读了很多书以后

48:27.340 --> 48:28.340
知识故

48:28.340 --> 48:29.340
而不识故以后的话

48:29.340 --> 48:30.340
比如再MUFF一下

48:30.340 --> 48:31.340
现在你看看

48:31.340 --> 48:32.340
反正就不一样了

48:32.340 --> 48:33.340
等你马上跪下

48:34.340 --> 48:35.340
我都错了

48:37.340 --> 48:38.340
开玩笑

48:38.340 --> 48:39.340
娱乐

48:40.340 --> 48:41.340
OK

48:41.340 --> 48:42.340
那属性的特性的话

48:42.340 --> 48:43.340
我相信同学们

48:43.340 --> 48:44.340
应该是有一定的了解了

48:44.340 --> 48:45.340
那咱来看一下

48:46.340 --> 48:47.340
Type

48:47.340 --> 48:48.340
Value

48:48.340 --> 48:49.340
ID

48:49.340 --> 48:50.340
这些东西

48:50.340 --> 48:51.340
都是系统

48:51.340 --> 48:52.340
天生规定

48:52.340 --> 48:53.340
你硬碰的标签

48:53.340 --> 48:54.340
你可以有的

48:54.340 --> 48:55.340
对吧

48:55.340 --> 48:56.340
包括什么Class

48:56.340 --> 48:57.340
对不对

48:57.340 --> 48:58.340
这些东西

48:58.340 --> 48:59.340
我们都叫做特性

48:59.340 --> 49:01.340
但特性

49:01.340 --> 49:02.340
也是属性的一类

49:02.340 --> 49:03.340
也是属性的一类

49:03.340 --> 49:04.340
好了

49:04.340 --> 49:05.340
那再来

49:05.340 --> 49:07.340
那我说这个Date

49:07.340 --> 49:08.340
Date

49:08.340 --> 49:09.340
这都是后天夹的

49:09.340 --> 49:10.340
对不对

49:10.340 --> 49:11.340
那系统说没有说规定

49:11.340 --> 49:12.340
你可以有这个Date

49:12.340 --> 49:13.340
对吧

49:13.340 --> 49:14.340
那你后天夹的

49:14.340 --> 49:15.340
不如再来个CST

49:15.340 --> 49:16.340
你见过这玩意吗

49:16.340 --> 49:17.340
你没有见过对不对

49:17.340 --> 49:18.340
这是我的名字

49:18.340 --> 49:19.340
是S统

49:19.340 --> 49:20.340
好

49:20.340 --> 49:21.340
叫做

49:21.340 --> 49:22.340
再来个

49:22.340 --> 49:23.340
DOO

49:23.340 --> 49:24.340
好

49:24.340 --> 49:25.340
这些东西

49:25.340 --> 49:26.340
它是属性

49:26.340 --> 49:27.340
它是属性

49:27.340 --> 49:29.340
它不规就于特性

49:29.340 --> 49:31.720
属性

49:31.720 --> 49:32.720
那如果说是

49:32.720 --> 49:33.720
我们

49:33.720 --> 49:34.720
再来个图

49:34.720 --> 49:35.720
来进行这样的一个

49:35.720 --> 49:36.720
举例的话

49:38.720 --> 49:39.720
好

49:39.720 --> 49:40.720
我可以画一下

49:41.720 --> 49:42.720
这根本这么大

49:42.720 --> 49:43.720
对吧

49:43.720 --> 49:46.420
它叫做属性

49:46.420 --> 49:47.420
属性

49:47.420 --> 49:48.420
好了

49:48.420 --> 49:51.560
这边小圆

49:51.560 --> 49:53.560
它叫做特性

49:54.560 --> 49:55.560
特性里面都有什么

49:55.560 --> 49:56.560
比如说

49:56.560 --> 49:57.560
先前给你的Value

49:57.560 --> 49:58.560
对吧

49:58.560 --> 49:59.560
什么Tap

50:01.560 --> 50:02.560
ID

50:02.560 --> 50:04.560
这些都可以使这样的一个特性

50:04.560 --> 50:06.560
当然你后天夹的

50:06.560 --> 50:07.560
这些东西

50:07.560 --> 50:08.560
它叫不了特性

50:08.560 --> 50:10.560
它只能叫做属性

50:11.560 --> 50:12.560
它只能叫做属性

50:12.560 --> 50:13.560
这么看的话

50:13.560 --> 50:14.560
应该是

50:14.560 --> 50:15.560
不能理解了吧

50:15.560 --> 50:16.560
对吧

50:16.560 --> 50:17.560
OK

50:17.560 --> 50:18.560
那为什么要讲属性的特性

50:18.560 --> 50:19.560
铺垫这么多呢

50:19.560 --> 50:20.560
因为属性的特性

50:20.560 --> 50:21.560
它们

50:21.560 --> 50:23.560
有不同的这样的一个

50:23.560 --> 50:24.560
怎么说

50:24.560 --> 50:25.560
就是在这样的一个

50:25.560 --> 50:27.560
GS跟HML标签

50:27.560 --> 50:28.560
硬设之中的话

50:28.560 --> 50:30.560
有不同的这样的一个效果

50:30.560 --> 50:31.560
不同的效果

50:31.560 --> 50:32.560
那咱可以来看一下

50:32.560 --> 50:33.560
现在

50:33.560 --> 50:34.560
我握一个

50:34.560 --> 50:35.560
O input

50:35.560 --> 50:36.560
等于一个

50:36.560 --> 50:38.560
Document.gatch

50:38.560 --> 50:41.940
Element.by.d

50:41.940 --> 50:42.940
我还是在这

50:43.940 --> 50:44.940
我把这个

50:44.940 --> 50:45.940
O input拿到手以后的话

50:45.940 --> 50:46.940
咱看来看一下

50:46.940 --> 50:48.940
如果你通过

50:48.940 --> 50:50.940
点的方式

50:50.940 --> 50:52.940
来去

50:52.940 --> 50:54.940
获取

50:54.940 --> 50:55.940
它的特性的话

51:03.590 --> 51:04.590
咱来看一下

51:04.590 --> 51:05.590
我保存一次

51:05.590 --> 51:06.590
刷新

51:06.590 --> 51:08.590
是可以获取到的

51:08.590 --> 51:09.590
Demo对吧

51:09.590 --> 51:11.590
那来O input

51:11.590 --> 51:13.590
我再点一个Type

51:13.590 --> 51:14.590
可以获取到了

51:14.590 --> 51:15.590
因为这些

51:15.590 --> 51:17.590
都是特性

51:18.590 --> 51:19.590
特性

51:19.590 --> 51:21.590
只要你是特性的话

51:23.590 --> 51:24.590
好了

51:24.590 --> 51:26.590
那我们在这个GS中

51:26.590 --> 51:27.590
GS中

51:27.590 --> 51:28.590
所获取的这个道目

51:28.590 --> 51:29.590
对象

51:30.590 --> 51:32.590
它和

51:32.590 --> 51:33.590
Input

51:33.590 --> 51:34.590
标签

51:34.590 --> 51:36.590
HML中的Input标签

51:36.590 --> 51:38.590
身上的这些

51:38.590 --> 51:40.590
是E对应的

51:43.420 --> 51:45.420
或者说是形成一种

51:45.420 --> 51:46.420
硬式关系

51:46.420 --> 51:48.420
就是你变我也变

51:48.420 --> 51:50.420
我怎么改你就怎么改

51:50.420 --> 51:51.420
那咱看一下

51:51.420 --> 51:52.420
首先我获取的时候

51:52.420 --> 51:53.420
你有什么

51:53.420 --> 51:54.420
我获取

51:54.420 --> 51:55.420
当然自然还能

51:55.420 --> 51:56.420
获取到对吧

51:56.420 --> 51:57.420
那我给你改了

51:57.420 --> 51:58.420
O input

51:58.420 --> 51:59.420
咱来看一下

52:00.420 --> 52:01.420
点ID

52:01.420 --> 52:02.420
给它变成一个

52:03.420 --> 52:04.420
给它变成一个

52:04.420 --> 52:05.420
CCCC

52:05.420 --> 52:06.420
SSSS

52:06.420 --> 52:07.420
TTT对吧

52:07.420 --> 52:08.420
保存一下

52:08.420 --> 52:09.420
刷新词

52:10.420 --> 52:12.420
现在我们看Element

52:12.420 --> 52:14.420
这个标签

52:14.420 --> 52:15.420
ID

52:15.420 --> 52:16.420
是不是已经变成这样的纸了

52:16.420 --> 52:17.420
对吧

52:17.420 --> 52:18.420
有时候我通过

52:18.420 --> 52:19.420
我这个GS中的

52:19.420 --> 52:20.420
这个道目对象

52:20.420 --> 52:22.420
把你进行更干以后的话

52:22.420 --> 52:23.420
有一个是特性对吧

52:23.420 --> 52:24.420
有一个硬设

52:24.420 --> 52:25.420
这样的关系

52:25.420 --> 52:26.420
那你这个标签

52:26.420 --> 52:27.420
你也得变

52:27.420 --> 52:28.420
行间的改

52:28.420 --> 52:29.420
行间你也得变

52:29.420 --> 52:30.420
同样道理

52:30.420 --> 52:31.420
这个

52:31.420 --> 52:33.420
我就在这直接写了

52:33.420 --> 52:34.420
写吧

52:34.420 --> 52:35.420
在这看送一下

52:35.420 --> 52:36.420
我把这个

52:36.420 --> 52:37.420
Input拿过来

52:37.420 --> 52:38.420
我把你Type

52:39.420 --> 52:40.420
你也改一下

52:40.420 --> 52:41.420
是不是你标签上

52:41.420 --> 52:42.420
你也变

52:42.420 --> 52:43.420
对

52:43.420 --> 52:44.420
变成一个Password的

52:44.420 --> 52:45.420
你会发现

52:45.420 --> 52:46.420
这都变了对不对

52:46.420 --> 52:47.420
变成一个

52:47.420 --> 52:48.420
密码了

52:48.420 --> 52:49.420
密码了

52:49.420 --> 52:50.420
那当然

52:50.420 --> 52:51.420
你是特性对吧

52:51.420 --> 52:52.420
你自然而然

52:52.420 --> 52:53.420
能形成这种

52:53.420 --> 52:54.420
E的硬设关系

52:54.420 --> 52:55.420
那如果

52:55.420 --> 52:56.420
我们操作的

52:56.420 --> 52:57.420
不是特性

52:58.420 --> 52:59.420
而是属性

52:59.420 --> 53:00.420
再来看一下

53:00.420 --> 53:01.420
你标签上

53:01.420 --> 53:02.420
即使是有

53:02.420 --> 53:03.420
那个什么data

53:03.420 --> 53:04.420
还是什么set

53:04.420 --> 53:06.420
我设一下能不能取出来

53:06.420 --> 53:07.420
对我去获取的时候

53:07.420 --> 53:08.420
你会发现

53:08.420 --> 53:09.420
其实是

53:09.420 --> 53:10.420
获取不到

53:10.420 --> 53:12.420
因为一旦你不是特性

53:12.420 --> 53:13.420
你只是属性的话

53:13.420 --> 53:15.420
你就没有那么多

53:15.420 --> 53:16.420
这样的一个特例了

53:16.420 --> 53:17.420
对吧

53:17.420 --> 53:18.420
你就不会跟它

53:18.420 --> 53:19.420
形成E的一个硬设关系了

53:19.420 --> 53:20.420
你是你身上的

53:20.420 --> 53:21.420
我是我身上的

53:21.420 --> 53:22.420
对吧

53:22.420 --> 53:23.420
我这个Dom对象

53:23.420 --> 53:24.420
它是对象对吧

53:24.420 --> 53:25.420
这个对象身上

53:25.420 --> 53:26.420
确实没有data

53:26.420 --> 53:27.420
这个属性

53:27.420 --> 53:28.420
对吧

53:28.420 --> 53:29.420
那我去访问一个

53:29.420 --> 53:30.420
没有的属性

53:30.420 --> 53:31.420
它就是一个安迪范的

53:31.420 --> 53:32.420
对

53:32.420 --> 53:33.420
不会去保障策

53:33.420 --> 53:34.420
同样这个CST

53:34.420 --> 53:35.420
就自定义的

53:35.420 --> 53:36.420
都不会

53:36.420 --> 53:38.420
去直接硬设出来

53:38.420 --> 53:39.420
如果你想取的话

53:39.420 --> 53:40.420
你只能说

53:40.420 --> 53:41.420
Gate attribute的那种方式

53:41.420 --> 53:42.420
对

53:42.420 --> 53:43.420
一会咱们回来讲一下这块

53:43.420 --> 53:45.420
那在这的话

53:45.420 --> 53:46.420
咱们再来看一下

53:46.420 --> 53:48.420
既然取取不到对吧

53:48.420 --> 53:49.420
复制

53:49.420 --> 53:50.420
能复制到吗

53:50.420 --> 53:52.420
我改一个叫做

53:52.420 --> 53:53.420
多二对吧

53:53.420 --> 53:54.420
多二

53:54.420 --> 53:55.420
能复制到能复制

53:55.420 --> 53:56.420
但是这个复完的值

53:56.420 --> 53:57.420
它不会硬设到

53:57.420 --> 53:58.420
行间那个值去

53:58.420 --> 53:59.420
对

53:59.420 --> 54:00.420
它这就是

54:00.420 --> 54:02.420
不是特性的属性

54:02.420 --> 54:03.420
跟特性的区别

54:03.420 --> 54:04.420
对

54:04.420 --> 54:05.420
所以说你看好了

54:05.420 --> 54:06.420
这个它不是特性

54:06.420 --> 54:07.420
没有特例

54:07.420 --> 54:08.420
所以说

54:08.420 --> 54:09.420
它有的时候

54:09.420 --> 54:10.420
你获取不到它

54:10.420 --> 54:12.420
你给它加完以后

54:12.420 --> 54:13.420
加完以后

54:13.420 --> 54:14.420
你给一个对象

54:14.420 --> 54:15.420
上面去加上那个值

54:15.420 --> 54:16.420
那这个对象

54:16.420 --> 54:17.420
上面只有这个值

54:17.420 --> 54:18.420
只不过加完这个值

54:18.420 --> 54:19.420
不好意思

54:19.420 --> 54:20.420
因为你不是特性

54:20.420 --> 54:21.420
你也影响不了它

54:21.420 --> 54:22.420
对吧

54:22.420 --> 54:23.420
你还是你

54:23.420 --> 54:24.420
我还是我

54:24.420 --> 54:25.420
行间就是

54:25.420 --> 54:26.420
完全是隔离的

54:26.420 --> 54:27.420
行间就是行间的

54:27.420 --> 54:28.420
JS就是JS的

54:28.420 --> 54:29.420
它也没关系

54:29.420 --> 54:30.420
一点关系

54:30.420 --> 54:31.420
如果它是特性的话

54:31.420 --> 54:32.420
行间就是JS的

54:32.420 --> 54:33.420
JS就是行间的

54:33.420 --> 54:34.420
你也不用去单独

54:34.420 --> 54:35.420
去设置这样的一个特性

54:35.420 --> 54:36.420
它直接就可以取

54:36.420 --> 54:38.420
直接就可以往里面复制

54:38.420 --> 54:39.420
你也不用去

54:39.420 --> 54:40.420
去设置

54:40.420 --> 54:41.420
你也设置不了

54:41.420 --> 54:42.420
说这一块的话

54:45.420 --> 54:46.420
你说设不了

54:46.420 --> 54:47.420
它是这样的

54:47.420 --> 54:48.420
不是

54:48.420 --> 54:49.420
我的意思是

54:49.420 --> 54:50.420
你不用去创造这个东西

54:50.420 --> 54:51.420
你也创造不了

54:51.420 --> 54:52.420
它自带的

54:52.420 --> 54:53.420
没有必要创造它

54:53.420 --> 54:54.420
但你要更改的话

54:54.420 --> 54:55.420
肯定是能更改的

54:55.420 --> 54:56.420
这个东西

54:56.420 --> 54:58.420
其实它就是天生

54:58.420 --> 54:59.420
它有这个东西

54:59.420 --> 55:01.420
你没有必要去新创建一个

55:01.420 --> 55:02.420
OK

55:02.420 --> 55:03.420
那这一块的话

55:03.420 --> 55:04.420
就是咱们知道了

55:04.420 --> 55:05.420
这个特性的话

55:05.420 --> 55:06.420
能让它们形成

55:06.420 --> 55:07.420
一一的应设关系

55:07.420 --> 55:08.420
这样的一个属性的话

55:08.420 --> 55:09.420
它俩怎么样

55:09.420 --> 55:10.420
是没有这样的一个对应关系的

55:10.420 --> 55:11.420
没有这个对应关系

55:11.420 --> 55:12.420
完全隔离的

55:12.420 --> 55:14.420
那像陈哥之前好像提到一个东西

55:14.420 --> 55:16.420
叫做set attribute

55:16.420 --> 55:17.420
对吧

55:17.420 --> 55:18.420
和get attribute

55:18.420 --> 55:19.420
就好像之前咱们讲过

55:19.420 --> 55:20.420
对不对

55:20.420 --> 55:23.420
get a t t i beauty attribute

55:23.420 --> 55:25.420
那这是什么东西呢

55:25.420 --> 55:26.420
也就是说

55:26.420 --> 55:27.420
我们使用它的话

55:27.420 --> 55:28.420
其实可以做到一点

55:28.420 --> 55:31.420
就是我想在这个标材上

55:31.420 --> 55:34.420
去加上一个额外的属性

55:34.420 --> 55:35.420
在行业上

55:35.420 --> 55:36.420
对吧

55:36.420 --> 55:37.420
去加上一个属性

55:37.420 --> 55:38.420
不是特性

55:38.420 --> 55:39.420
那如果是特性的话

55:39.420 --> 55:40.420
你可以比如说

55:40.420 --> 55:41.420
o ampute

55:41.420 --> 55:42.420
对吧

55:42.420 --> 55:43.420
比如说它原来

55:43.420 --> 55:44.420
根本就没有外流

55:45.420 --> 55:46.420
对吧

55:46.420 --> 55:50.180
我能给它去加上一个

55:50.180 --> 55:52.180
外流直接这么写就可以

55:52.180 --> 55:54.180
刷新一次咱们看一下

55:54.180 --> 55:56.180
这是有实对不对

55:56.180 --> 55:57.180
这有实对吧

55:57.180 --> 55:58.180
这有实

55:58.180 --> 55:59.180
但是确实你加上以后的话

55:59.180 --> 56:00.180
这一块

56:00.180 --> 56:02.180
它不会出现那个

56:02.180 --> 56:03.180
它不会出那个行件

56:03.180 --> 56:04.180
对它不会出那个东西

56:04.180 --> 56:05.180
它确实上面是有了

56:05.180 --> 56:07.180
有有了

56:07.180 --> 56:08.180
那好了

56:08.180 --> 56:09.180
如果说是这样的情况下

56:09.180 --> 56:11.180
它是特性才能是这样

56:11.180 --> 56:12.180
但是如果说

56:12.180 --> 56:14.180
你想通过这种方式

56:14.180 --> 56:15.180
像在这我加上一个

56:15.180 --> 56:17.180
log这种属性行吗

56:17.180 --> 56:19.180
它一定是不可以的

56:19.180 --> 56:21.180
因为它不是特性对不对

56:21.180 --> 56:22.180
在这的话

56:22.180 --> 56:23.180
我o ampute的话

56:23.180 --> 56:24.180
我点log

56:24.180 --> 56:26.180
你加啥都不好使

56:26.180 --> 56:27.180
它都不会出现

56:28.180 --> 56:29.180
是吧

56:29.180 --> 56:30.180
它都不会出现

56:30.180 --> 56:31.180
那好了

56:31.180 --> 56:32.180
那如果说我又非得

56:32.180 --> 56:34.180
想让它这个上面

56:34.180 --> 56:35.180
去加上一个东西

56:35.180 --> 56:36.180
那怎么办

56:37.180 --> 56:38.180
用它就行

56:38.180 --> 56:40.180
有时候它是什么意思呢

56:40.180 --> 56:42.180
就是当你通过一个大目的线

56:42.180 --> 56:44.180
去调它的时候的话

56:44.180 --> 56:46.180
它就是在行件上

56:46.180 --> 56:47.180
去加上一个属性

56:47.180 --> 56:48.180
属性值

56:48.180 --> 56:49.180
那在这我们来看一下

56:49.180 --> 56:51.180
在行件上加这颗东西

56:51.180 --> 56:52.180
也包括系统

56:52.180 --> 56:53.180
就给咱们自带的一些

56:53.180 --> 56:56.180
已经有法定值的这样的一个特性

56:56.180 --> 56:57.180
你也可以

56:57.180 --> 56:58.180
也可以用这个方式加y6

56:58.180 --> 56:59.180
加id

56:59.180 --> 57:00.180
加什么都可以

57:00.180 --> 57:02.180
但是不过用JS加更简单一点

57:02.180 --> 57:03.180
你通过它的话

57:03.180 --> 57:04.180
加什么都可以

57:04.180 --> 57:05.180
对 加啥都行

57:05.180 --> 57:06.180
刷一次咱们看一下

57:06.180 --> 57:07.180
刷新是有了吧

57:07.180 --> 57:08.180
对吧

57:08.180 --> 57:09.180
那你获取的时候呢

57:09.180 --> 57:10.180
Gad

57:10.180 --> 57:11.180
对

57:11.180 --> 57:12.180
当然你自作聪明

57:12.180 --> 57:13.180
你说我都加上去了

57:13.180 --> 57:14.180
我落了一下行不行

57:14.180 --> 57:15.180
不行对不对

57:15.180 --> 57:16.180
怎么办

57:16.180 --> 57:17.180
还是得通过Gad

57:17.180 --> 57:18.180
Gad

57:18.180 --> 57:20.180
因为你确实加上去了

57:20.180 --> 57:21.180
但你加上这个东西

57:21.180 --> 57:22.180
它也不是特性

57:22.180 --> 57:23.180
没有一个是关系

57:23.180 --> 57:24.180
对 没有一个是关系

57:24.180 --> 57:25.180
来 获取一下

57:25.180 --> 57:26.180
这样是可以来获取的

57:26.180 --> 57:27.180
说它们是一对

57:27.180 --> 57:28.180
它们是一对

57:28.180 --> 57:29.180
那这一块的话

57:29.180 --> 57:31.180
其实当你学到JQ的时候

57:31.180 --> 57:33.180
是有两个这样的一个方法

57:33.180 --> 57:36.180
叫ATTR和PROP

57:36.180 --> 57:37.180
ATTR对吧

57:37.180 --> 57:38.180
还有这个PROP

57:38.180 --> 57:40.180
就是Gad啊这边

57:40.180 --> 57:41.180
Gad啊这边

57:41.180 --> 57:43.180
缩减版和属性直接复职

57:43.180 --> 57:44.180
和取职的缩减版

57:44.180 --> 57:45.180
对啊

57:45.180 --> 57:46.180
因为我们这课里面

57:46.180 --> 57:47.180
有这两个方法

57:47.180 --> 57:48.180
其实它底层的原理

57:48.180 --> 57:52.180
就是PROP是根据这个特性

57:52.180 --> 57:54.180
硬是关系来进行

57:54.180 --> 57:56.180
这样的实际操作的

57:56.180 --> 57:57.180
所以说你用PROP

57:57.180 --> 58:00.180
想去取出一个属性的职

58:00.180 --> 58:01.180
基本上是取不了的

58:01.180 --> 58:02.180
ATTR那里面的底层

58:02.180 --> 58:05.180
就是Gad ATTR

58:05.180 --> 58:06.180
你试了啥都可以试试

58:06.180 --> 58:07.180
或者啥都可以获取

58:07.180 --> 58:09.180
PROP就是正常的

58:09.180 --> 58:11.180
JS的这个对属性的操作

58:11.180 --> 58:12.180
对

58:12.180 --> 58:13.180
就点啥

58:13.180 --> 58:15.180
你要想复职就复职

58:15.180 --> 58:16.180
想取就取

58:16.180 --> 58:17.180
那是PROP正常的一个

58:17.180 --> 58:18.180
就是JS的一个基本操作

58:18.180 --> 58:20.180
只不过就把它塞到

58:20.180 --> 58:21.180
这个几块里面

58:21.180 --> 58:22.180
封装成了一个方法

58:22.180 --> 58:23.180
那几块在操作的时候

58:23.180 --> 58:24.180
更加方便一点而已

58:24.180 --> 58:26.180
就相当于点啥点啥

58:26.180 --> 58:27.180
相当于这个

58:27.180 --> 58:28.180
但这个倒好奇

58:28.180 --> 58:29.180
原码的时候呢

58:29.180 --> 58:31.180
咱可能会拿一些课程来进行

58:31.180 --> 58:33.180
这样一个生物的讲解

58:33.180 --> 58:34.180
OK那到这的话

58:34.180 --> 58:35.180
咱已经对这个属性特性

58:35.180 --> 58:37.180
有了这样一个具体的了解

58:37.180 --> 58:38.180
对吧

58:38.180 --> 58:39.180
由这个图对吧

58:39.180 --> 58:40.180
能明明白

58:40.180 --> 58:42.180
他们一个从属关系对吧

58:42.180 --> 58:43.180
玩完之后特性呢

58:43.180 --> 58:44.180
比如说

58:44.180 --> 58:46.180
它是可以跟这个箱的标切

58:46.180 --> 58:47.180
对吧

58:47.180 --> 58:48.180
形成这种

58:48.180 --> 58:51.180
一一硬设的关系

58:51.180 --> 58:53.180
画图的本领还是比较箱的

58:53.180 --> 58:54.180
对吧

58:54.180 --> 58:55.180
硬设的关系对吧

58:55.180 --> 58:56.180
但是呢

58:56.180 --> 58:57.180
属性

58:57.180 --> 58:59.180
如果是属性的情况下的话

58:59.180 --> 59:00.180
他们之间

59:00.180 --> 59:03.180
其实是并没有任何的关系的

59:03.180 --> 59:05.180
这块可以补充说明一下

59:05.180 --> 59:06.180
其实咱们日后

59:06.180 --> 59:07.180
包括讲几块

59:07.180 --> 59:08.180
也之后

59:08.180 --> 59:10.180
咱们基本上把所有的这样的一个属性

59:10.180 --> 59:12.180
包括特性都叫做属性

59:12.180 --> 59:13.180
也确实是属性里面

59:13.180 --> 59:15.180
包含了所有的一个东西

59:15.180 --> 59:16.180
从这个名称上

59:16.180 --> 59:17.180
只不过一部分

59:17.180 --> 59:19.180
不是特性的属性

59:19.180 --> 59:21.180
它就和行间的样式

59:21.180 --> 59:23.180
没有一个这样的硬设关系而已

59:23.180 --> 59:25.180
行间那些只是没有硬设关系

59:25.180 --> 59:27.180
就是不是特性的属性

59:27.180 --> 59:29.180
但以后咱们就不做这种区分了

59:29.180 --> 59:31.180
到用的时候你自个情处就完事了

59:31.180 --> 59:32.180
咱以后为了方便说

59:32.180 --> 59:33.180
就都叫属性了

59:33.180 --> 59:34.180
确实都可以叫属性

59:34.180 --> 59:35.180
一律就全叫属性

59:35.180 --> 59:37.180
只不过有些属性是有硬设的

59:37.180 --> 59:38.180
有些属性是没有硬设的

59:38.180 --> 59:39.180
是这样的一个关系

59:39.180 --> 59:42.180
咱把有硬设的叫做特性而已

59:42.180 --> 59:43.180
到这一块的话

59:43.180 --> 59:45.180
其实目的它就是

59:45.180 --> 59:47.180
以后碰到这块的话

59:47.180 --> 59:48.180
别发懵

59:48.180 --> 59:49.180
知道有这么一回事

59:49.180 --> 59:51.180
有部分属性是可以硬设的

59:51.180 --> 59:53.180
有部分属性是可以硬设的

59:53.180 --> 59:54.180
你可以帮到特性这个词

59:54.180 --> 59:55.180
也没什么太大关系

59:55.180 --> 59:56.180
反正

59:57.180 --> 59:58.180
ok那这样的话

59:58.180 --> 59:59.180
咱已经算是把属性

59:59.180 --> 01:00:01.180
特性已经加完了

01:00:01.180 --> 01:00:02.180
比较深入些了

01:00:02.180 --> 01:00:04.180
我觉得已经去问完了

01:00:04.180 --> 01:00:06.180
那接下来的话咱们再往下来看

01:00:06.180 --> 01:00:07.180
再来看的话

01:00:07.180 --> 01:00:08.180
再就是这个图片的

01:00:08.180 --> 01:00:09.180
预夹仔和懒家仔

01:00:09.180 --> 01:00:11.180
其实懒家仔和预夹仔的话

01:00:11.180 --> 01:00:15.180
这个就是一般都配合东西去使用

01:00:15.180 --> 01:00:16.180
配合东西使用

01:00:16.180 --> 01:00:17.180
那什么叫预夹仔呢

01:00:17.180 --> 01:00:19.180
其实懒家仔咱之前

01:00:19.180 --> 01:00:20.180
大概说了

01:00:20.180 --> 01:00:21.180
讲bomb的时候

01:00:21.180 --> 01:00:23.180
就是到那儿再加再

01:00:23.180 --> 01:00:24.180
对到那儿再加再

01:00:24.180 --> 01:00:26.180
就小女时候我先不用地方

01:00:26.180 --> 01:00:27.180
预夹仔什么

01:00:27.180 --> 01:00:28.180
还没到那儿我先加再

01:00:28.180 --> 01:00:30.180
还没到那儿我提前加再

01:00:30.180 --> 01:00:31.180
我打好提前量

01:00:31.180 --> 01:00:32.180
当你在注释在这的时候

01:00:32.180 --> 01:00:34.180
我先帮你偷偷的下来

01:00:34.180 --> 01:00:36.180
那当然前提是你这个恋爱器的性能

01:00:36.180 --> 01:00:37.180
足够充裕

01:00:37.180 --> 01:00:39.180
足够充裕

01:00:39.180 --> 01:00:41.180
什么时候可能说用这样的一个预夹仔呢

01:00:41.180 --> 01:00:44.180
就比如说我们在搜一个大图片的时候

01:00:44.180 --> 01:00:46.180
我看图片

01:00:46.180 --> 01:00:48.180
比如说大图片的时候

01:00:48.180 --> 01:00:49.180
我网速

01:00:49.180 --> 01:00:50.180
这是网速要快对吧

01:00:50.180 --> 01:00:51.180
咱摆状况节对吧

01:00:51.180 --> 01:00:53.180
如果网速不要慢的情况下的话

01:00:53.180 --> 01:00:54.180
大图的话

01:00:54.180 --> 01:00:57.180
它会一点一点一点一点一点一点出来对吧

01:00:57.180 --> 01:00:58.180
要知道这样的用底线

01:00:58.180 --> 01:00:59.180
它不太好

01:00:59.180 --> 01:01:01.180
你看这个图片一点一点出来对吧

01:01:01.180 --> 01:01:03.180
那现在的话咱们怎么做呢

01:01:03.180 --> 01:01:05.180
现在就是我们可以

01:01:05.180 --> 01:01:07.180
拿一个灰色的这样一个底

01:01:07.180 --> 01:01:09.180
作为这样一个区的一个填充

01:01:09.180 --> 01:01:10.180
模板对吧

01:01:10.180 --> 01:01:11.180
模板

01:01:11.180 --> 01:01:12.180
作为这样一个填充

01:01:12.180 --> 01:01:13.180
那我们在这呢

01:01:13.180 --> 01:01:14.180
偷偷的

01:01:14.180 --> 01:01:15.180
用这个图片

01:01:15.180 --> 01:01:17.180
这个src金网络请求

01:01:17.180 --> 01:01:19.180
把图片进行加载过来

01:01:19.180 --> 01:01:20.180
先下过来

01:01:20.180 --> 01:01:21.180
先下过来

01:01:21.180 --> 01:01:22.180
下过来以后的话

01:01:22.180 --> 01:01:23.180
等执政下也成功了

01:01:23.180 --> 01:01:25.180
再把图片再放上去

01:01:25.180 --> 01:01:26.180
然后一次现出现

01:01:26.180 --> 01:01:27.180
对对对

01:01:27.180 --> 01:01:28.180
这里就需要

01:01:28.180 --> 01:01:29.180
js的一些小操作

01:01:29.180 --> 01:01:30.180
咱们的目的就是

01:01:30.180 --> 01:01:32.180
不想让这个图片

01:01:32.180 --> 01:01:33.180
一行一行一行

01:01:33.180 --> 01:01:34.180
被下过来

01:01:34.180 --> 01:01:35.180
这样的话

01:01:35.180 --> 01:01:36.180
看起来效果特别不好

01:01:36.180 --> 01:01:37.180
所以说咱们用js

01:01:37.180 --> 01:01:38.180
想操作一个效果

01:01:38.180 --> 01:01:40.180
就是让这个图片呢

01:01:40.180 --> 01:01:41.180
还没下载过来的时候

01:01:41.180 --> 01:01:43.180
我们不想让这个图片展示出来

01:01:43.180 --> 01:01:45.180
等到判断这个图片

01:01:45.180 --> 01:01:46.180
确确实实

01:01:46.180 --> 01:01:47.180
所有的资源到我们手里了

01:01:47.180 --> 01:01:48.180
我们再操作js

01:01:48.180 --> 01:01:49.180
把这个图片

01:01:49.180 --> 01:01:50.180
放到填充里面

01:01:50.180 --> 01:01:51.180
让你直接看到

01:01:51.180 --> 01:01:52.180
一个完整的图片

01:01:52.180 --> 01:01:53.180
对 这就是

01:01:53.180 --> 01:01:55.180
预夹在这个原理

01:01:55.180 --> 01:01:56.180
那我们怎么来去

01:01:56.180 --> 01:01:57.180
给它进行编写呢

01:01:57.180 --> 01:01:59.180
首先我们可以这么来做

01:01:59.180 --> 01:02:01.180
在这我来个DIV

01:02:01.180 --> 01:02:02.180
来个DIV

01:02:02.180 --> 01:02:03.180
这个DIV都给了一个样式吧

01:02:03.180 --> 01:02:05.180
这个样式的话

01:02:06.180 --> 01:02:07.180
看一下

01:02:07.180 --> 01:02:08.180
wise

01:02:08.180 --> 01:02:10.180
DIV的wise大一点

01:02:10.180 --> 01:02:12.180
为了同学能看清

01:02:12.180 --> 01:02:13.180
400像素

01:02:13.180 --> 01:02:15.180
刚刚来个200像素

01:02:15.180 --> 01:02:16.180
给它来个包袋

01:02:16.180 --> 01:02:18.180
其实我查过那个反应

01:02:18.180 --> 01:02:19.180
真正独位子

01:02:20.180 --> 01:02:22.180
我这个发音

01:02:22.180 --> 01:02:23.180
不太标准

01:02:23.180 --> 01:02:25.180
怎么可以来学日语的

01:02:28.180 --> 01:02:29.180
皮尔看了标的

01:02:29.180 --> 01:02:30.180
我也一点

01:02:31.180 --> 01:02:32.180
Black

01:02:32.180 --> 01:02:33.180
Black一下

01:02:33.180 --> 01:02:34.180
好

01:02:34.180 --> 01:02:35.180
那咱看这个DIV

01:02:35.180 --> 01:02:36.180
有没有这样样式

01:02:36.180 --> 01:02:37.180
刷新一次

01:02:37.180 --> 01:02:40.130
OK

01:02:40.130 --> 01:02:41.130
这是有的 对吧

01:02:41.130 --> 01:02:42.130
有的

01:02:42.130 --> 01:02:43.130
那现在呢

01:02:43.130 --> 01:02:44.130
我要做一件事情

01:02:44.130 --> 01:02:45.130
是什么事呢

01:02:45.130 --> 01:02:46.130
是进行上图片的预夹在

01:02:46.130 --> 01:02:47.130
预夹在

01:02:47.130 --> 01:02:48.130
预夹在的话

01:02:48.130 --> 01:02:49.130
首先呢

01:02:49.130 --> 01:02:50.130
我可以这么来自我

01:02:51.130 --> 01:02:52.130
你可以通过

01:02:56.130 --> 01:02:57.130
这呢

01:02:57.130 --> 01:02:58.130
放一个图片

01:03:00.130 --> 01:03:01.130
但是呢

01:03:01.130 --> 01:03:02.130
你也可以

01:03:02.130 --> 01:03:03.130
你也可以这么做

01:03:03.130 --> 01:03:05.130
这个有一个构造函数

01:03:05.130 --> 01:03:06.130
专门就

01:03:07.130 --> 01:03:08.130
专门

01:03:08.130 --> 01:03:09.130
就是来

01:03:09.130 --> 01:03:11.130
提供创建这个

01:03:11.130 --> 01:03:12.130
OAMG对象的

01:03:12.130 --> 01:03:13.130
叫做

01:03:13.130 --> 01:03:14.130
IMG

01:03:14.130 --> 01:03:15.130
我New image一下

01:03:15.130 --> 01:03:17.130
其实最后你这么创建

01:03:17.130 --> 01:03:18.130
和这么创建

01:03:18.130 --> 01:03:19.130
它都是一个

01:03:19.130 --> 01:03:20.130
等不下

01:03:20.130 --> 01:03:21.130
那现在的话

01:03:21.130 --> 01:03:22.130
我可以这么来做

01:03:23.130 --> 01:03:25.130
OAMG.src

01:03:25.130 --> 01:03:26.130
我给它设置了一个

01:03:26.130 --> 01:03:27.130
src属性

01:03:27.130 --> 01:03:28.130
往上src属性

01:03:28.130 --> 01:03:30.130
是一个网上图片的地址

01:03:30.130 --> 01:03:31.130
就比如说是它

01:03:31.130 --> 01:03:33.950
复制图片地址

01:03:33.950 --> 01:03:34.950
拿过来

01:03:35.950 --> 01:03:36.950
好 放到这

01:03:36.950 --> 01:03:37.950
庆长

01:03:37.950 --> 01:03:38.950
庆长

01:03:38.950 --> 01:03:40.950
当GS代码执政执政到这以后的话

01:03:41.950 --> 01:03:43.950
它就开始去发送网络请求

01:03:43.950 --> 01:03:44.950
加起图片资料

01:03:45.950 --> 01:03:46.950
那我在这一块的话

01:03:46.950 --> 01:03:48.950
最好我提前的

01:03:49.950 --> 01:03:50.950
给它绑定一个实践

01:03:50.950 --> 01:03:51.950
绑定个实践

01:03:51.950 --> 01:03:52.950
好让我们知道

01:03:52.950 --> 01:03:53.950
它啥啥下载完

01:03:53.950 --> 01:03:54.950
对

01:03:54.950 --> 01:03:55.950
当它下载完以后的话

01:03:55.950 --> 01:03:56.950
它就会

01:03:56.950 --> 01:03:58.950
它就会立马出发这个东西

01:03:58.950 --> 01:03:59.950
出发这个实践

01:03:59.950 --> 01:04:00.950
你便用嘛 今天来操作

01:04:00.950 --> 01:04:01.950
对

01:04:01.950 --> 01:04:02.950
那出发完它的话

01:04:02.950 --> 01:04:03.950
其实就是相当于

01:04:03.950 --> 01:04:04.950
告诉我们

01:04:04.950 --> 01:04:05.950
这个人们已经加载完了

01:04:05.950 --> 01:04:06.950
加载完以后的话

01:04:06.950 --> 01:04:07.950
有什么用呢

01:04:07.950 --> 01:04:08.950
那就是

01:04:08.950 --> 01:04:09.950
当你把资源

01:04:09.950 --> 01:04:10.950
全部加载完以后的话

01:04:10.950 --> 01:04:12.950
我就可以直接

01:04:12.950 --> 01:04:13.950
拿上在目的了

01:04:13.950 --> 01:04:14.950
对

01:04:14.950 --> 01:04:15.950
往里添就完事了

01:04:15.950 --> 01:04:16.950
直接往里去添就可以了

01:04:16.950 --> 01:04:17.950
因为我直接把这个DIV

01:04:19.950 --> 01:04:20.950
Document的点

01:04:20.950 --> 01:04:21.950
那个ID吧

01:04:21.950 --> 01:04:22.950
给这个ID的话

01:04:22.950 --> 01:04:23.950
咱更好去获取

01:04:24.950 --> 01:04:25.950
like demo

01:04:26.950 --> 01:04:28.950
这来个demo

01:04:28.950 --> 01:04:29.950
我通过ID的方式

01:04:29.950 --> 01:04:31.950
直接就可以操作它

01:04:31.950 --> 01:04:32.950
对

01:04:32.950 --> 01:04:33.950
流感太跳了

01:04:33.950 --> 01:04:34.950
给它解释一下

01:04:35.950 --> 01:04:36.950
这个

01:04:36.950 --> 01:04:37.950
这样吧 我问一个

01:04:37.950 --> 01:04:38.950
ODIV

01:04:38.950 --> 01:04:39.950
ODIV等于一个

01:04:39.950 --> 01:04:40.950
Document

01:04:40.950 --> 01:04:42.950
DIV

01:04:42.950 --> 01:04:44.950
其实咱们有讲话操作

01:04:44.950 --> 01:04:45.950
这个DIV

01:04:45.950 --> 01:04:46.950
对

01:04:46.950 --> 01:04:47.950
其实这个被ID

01:04:47.950 --> 01:04:48.950
标注的这样的一个标签

01:04:48.950 --> 01:04:49.950
其实你不用选

01:04:49.950 --> 01:04:50.950
是吧

01:04:50.950 --> 01:04:51.950
它就是个变量

01:04:51.950 --> 01:04:52.950
你就可以直接拿

01:04:52.950 --> 01:04:53.950
咱们一般都不这么用

01:04:53.950 --> 01:04:54.950
一般不这么用

01:04:54.950 --> 01:04:55.950
太不正规了

01:04:55.950 --> 01:04:56.950
没钱也没后语

01:04:56.950 --> 01:04:57.950
当然还得找你

01:04:57.950 --> 01:04:58.950
一天跑去解购

01:04:58.950 --> 01:04:59.950
对

01:04:59.950 --> 01:05:00.950
它这儿懵

01:05:00.950 --> 01:05:01.950
有点懵

01:05:01.950 --> 01:05:02.950
特别不愿意维护

01:05:02.950 --> 01:05:03.950
是说

01:05:03.950 --> 01:05:04.950
正规就行吧

01:05:04.950 --> 01:05:05.950
OK吧

01:05:05.950 --> 01:05:06.950
在这呢

01:05:06.950 --> 01:05:07.950
我放这个this就行了

01:05:07.950 --> 01:05:08.950
因为这个this

01:05:08.950 --> 01:05:09.950
就是这个image

01:05:09.950 --> 01:05:10.950
是吧

01:05:10.950 --> 01:05:11.950
咱们看一下

01:05:11.950 --> 01:05:12.950
我发现

01:05:12.950 --> 01:05:13.950
在这

01:05:14.950 --> 01:05:15.950
好

01:05:15.950 --> 01:05:16.950
这个图片应该也稍微点大

01:05:16.950 --> 01:05:17.950
对吧

01:05:17.950 --> 01:05:18.950
对

01:05:18.950 --> 01:05:20.950
我让这个图片

01:05:20.950 --> 01:05:22.950
高度百分之百

01:05:25.950 --> 01:05:26.950
百分之百

01:05:26.950 --> 01:05:29.780
好

01:05:29.780 --> 01:05:30.780
保存一下

01:05:34.470 --> 01:05:35.470
等会

01:05:35.470 --> 01:05:36.470
检查一次

01:05:38.470 --> 01:05:41.040
刷新对吧

01:05:41.040 --> 01:05:42.040
clear

01:05:42.040 --> 01:05:43.040
保存

01:05:46.060 --> 01:05:47.060
轻轻轻一遍就行了

01:05:47.060 --> 01:05:48.060
刷新

01:05:48.060 --> 01:05:49.060
看一眼

01:05:49.060 --> 01:05:50.060
它是瞬间就能出来

01:05:50.060 --> 01:05:51.060
爽了一下对吧

01:05:51.060 --> 01:05:52.060
它是

01:05:52.060 --> 01:05:53.060
因为

01:05:53.060 --> 01:05:54.060
如果说你没有进行这样的

01:05:54.060 --> 01:05:56.060
预夹在情况下的话

01:05:56.060 --> 01:05:57.060
那么网速比较慢的时候的话

01:05:57.060 --> 01:05:58.060
这个图片一定会

01:05:58.060 --> 01:05:59.060
一点一点一遍出来

01:05:59.060 --> 01:06:00.060
对

01:06:00.060 --> 01:06:01.060
但这样效果不好对吧

01:06:01.060 --> 01:06:02.060
所以说怎么办呢

01:06:02.060 --> 01:06:03.060
我们通过这种方式

01:06:03.060 --> 01:06:04.060
来进行预夹在

01:06:04.060 --> 01:06:05.060
因为预夹在是什么意思

01:06:05.060 --> 01:06:07.060
就是我提前夹在

01:06:07.060 --> 01:06:09.060
跟谁来比较是提前呢

01:06:09.060 --> 01:06:10.060
跟这个diy要显示图片

01:06:10.060 --> 01:06:12.060
这样的一种时候

01:06:12.060 --> 01:06:13.060
来比较的话

01:06:13.060 --> 01:06:14.060
它是提前的

01:06:14.060 --> 01:06:15.060
然后在你图片

01:06:15.060 --> 01:06:16.060
显示之前

01:06:16.060 --> 01:06:17.060
先把你夹在过来

01:06:17.060 --> 01:06:18.060
这叫做预夹在

01:06:18.060 --> 01:06:19.060
对吧

01:06:19.060 --> 01:06:20.060
预夹在

01:06:20.060 --> 01:06:21.060
那兰家在

01:06:21.060 --> 01:06:22.060
我们知道是什么意思

01:06:22.060 --> 01:06:23.060
就比如说

01:06:23.060 --> 01:06:24.060
如果这个门

01:06:24.060 --> 01:06:25.060
它是在哪

01:06:25.060 --> 01:06:27.060
它是在这个很下面

01:06:27.060 --> 01:06:28.060
你看不到的地方

01:06:28.060 --> 01:06:29.060
我们滚动滑轮

01:06:29.060 --> 01:06:30.060
才能碰到它

01:06:30.060 --> 01:06:31.060
那这个时候的话

01:06:31.060 --> 01:06:33.060
我们是不是需要通过

01:06:33.060 --> 01:06:34.060
我们上节课

01:06:34.060 --> 01:06:36.060
所讲的这个兰家在的方式

01:06:36.060 --> 01:06:38.060
接到里面去

01:06:38.060 --> 01:06:39.060
那么滑动不断滑动

01:06:39.060 --> 01:06:40.060
OK

01:06:40.060 --> 01:06:42.060
滑动到它的时候

01:06:42.060 --> 01:06:44.060
我们再把这样的一个

01:06:44.060 --> 01:06:46.060
预夹在填到里面去

01:06:46.060 --> 01:06:47.060
所以说我们这个淘宝

01:06:47.060 --> 01:06:48.060
咱可以来看一下

01:06:48.060 --> 01:06:50.060
它其实就是一种

01:06:50.060 --> 01:06:52.060
兰家在配合预夹在

01:06:52.060 --> 01:06:53.060
我往下翻

01:06:53.060 --> 01:06:54.060
翻翻翻

01:06:54.060 --> 01:06:55.060
你会发现

01:06:55.060 --> 01:06:56.060
这个

01:06:56.060 --> 01:06:58.060
我们瞬间发生在这的时候的话

01:06:58.060 --> 01:07:00.060
它一开始是一个灰色的地方

01:07:00.060 --> 01:07:01.060
作为一个盟版层

01:07:01.060 --> 01:07:02.060
那当然

01:07:02.060 --> 01:07:03.060
最后这个图片

01:07:03.060 --> 01:07:04.060
是瞬间出来的

01:07:04.060 --> 01:07:05.060
没有一点点展示出来

01:07:05.060 --> 01:07:06.060
那不单单是因为

01:07:06.060 --> 01:07:08.060
网速的一个问题

01:07:08.060 --> 01:07:09.060
它因为是

01:07:09.060 --> 01:07:11.060
它是兰家在配合预夹在

01:07:11.060 --> 01:07:12.060
来完成的

01:07:12.060 --> 01:07:13.060
那这门

01:07:13.060 --> 01:07:15.060
我可以简单来写一下

01:07:16.060 --> 01:07:17.060
尾代码

01:07:17.060 --> 01:07:19.060
就是这个整个的逻辑代码

01:07:19.060 --> 01:07:20.060
那咱可以来看看

01:07:20.060 --> 01:07:21.060
来看看

01:07:21.060 --> 01:07:23.060
来稍微的还原一下

01:07:23.060 --> 01:07:24.060
整个这样的一个过程

01:07:24.060 --> 01:07:25.060
首先

01:07:25.060 --> 01:07:27.060
我需要把它

01:07:27.060 --> 01:07:29.060
给它一个决定定位

01:07:29.060 --> 01:07:30.060
Obs Loot

01:07:30.060 --> 01:07:32.060
再说来个Body

01:07:32.060 --> 01:07:33.060
BODY

01:07:33.060 --> 01:07:34.060
来个Body

01:07:34.060 --> 01:07:35.060
好在这

01:07:35.060 --> 01:07:36.060
来个Head

01:07:36.060 --> 01:07:38.060
是一个3000像素

01:07:38.060 --> 01:07:39.060
我保存一下

01:07:39.060 --> 01:07:41.060
往来这个top

01:07:41.060 --> 01:07:43.060
让它变成一个1500像素

01:07:43.060 --> 01:07:44.060
保存一次

01:07:44.060 --> 01:07:45.060
刷新一下

01:07:45.060 --> 01:07:46.060
来看一眼

01:07:46.060 --> 01:07:50.480
点击右键

01:07:50.480 --> 01:07:51.480
Open Default Browse

01:07:51.480 --> 01:07:52.480
对吧

01:07:52.480 --> 01:07:53.480
好

01:07:53.480 --> 01:07:54.480
往下翻

01:07:55.480 --> 01:07:56.480
插掉

01:07:56.480 --> 01:07:57.480
好

01:07:58.480 --> 01:07:59.480
是吧

01:07:59.480 --> 01:08:00.480
翻翻翻

01:08:01.480 --> 01:08:03.480
到这才出现对吧

01:08:03.480 --> 01:08:05.480
这是300

01:08:05.480 --> 01:08:06.480
这是3000像素

01:08:06.480 --> 01:08:07.480
少了一点

01:08:07.480 --> 01:08:08.480
再刷新一下

01:08:08.480 --> 01:08:09.480
看好了

01:08:09.480 --> 01:08:10.480
现在

01:08:10.480 --> 01:08:11.480
翻翻翻

01:08:11.480 --> 01:08:12.480
翻到这时候

01:08:12.480 --> 01:08:14.480
才能出现这个DIV对不对

01:08:14.480 --> 01:08:15.480
那兰家在我们之前

01:08:15.480 --> 01:08:17.480
在Bound里面讲是什么意思呢

01:08:17.480 --> 01:08:18.480
是我不断的来监控

01:08:18.480 --> 01:08:20.480
这个滑轮事件

01:08:20.480 --> 01:08:23.980
监控滑轮事件对吧

01:08:23.980 --> 01:08:24.980
滑轮事件

01:08:25.980 --> 01:08:26.980
好

01:08:26.980 --> 01:08:27.980
当

01:08:27.980 --> 01:08:28.980
对吧

01:08:28.980 --> 01:08:29.980
就是

01:08:29.980 --> 01:08:30.980
当我这个

01:08:30.980 --> 01:08:31.980
就是滑轮

01:08:31.980 --> 01:08:32.980
滑到那个区的时候

01:08:32.980 --> 01:08:33.980
当这个

01:08:33.980 --> 01:08:34.980
其实上

01:08:34.980 --> 01:08:35.980
上一步

01:08:35.980 --> 01:08:36.980
在进攻滑轮事件的时候

01:08:36.980 --> 01:08:38.980
我们需要不断的去干件事情

01:08:38.980 --> 01:08:40.980
就是不断的去判断

01:08:40.980 --> 01:08:43.980
当前DIV的位置

01:08:43.980 --> 01:08:44.980
对吧

01:08:44.980 --> 01:08:45.980
当前DIV位置

01:08:45.980 --> 01:08:46.980
那如果说

01:08:46.980 --> 01:08:48.980
到了那个零件点的话对吧

01:08:48.980 --> 01:08:49.980
我们怎么办呢

01:08:49.980 --> 01:08:51.980
我们采取

01:08:51.980 --> 01:08:52.980
先采取

01:08:52.980 --> 01:08:53.980
预

01:08:53.980 --> 01:08:54.980
加载

01:08:54.980 --> 01:08:55.980
这样的一个

01:08:56.980 --> 01:08:58.980
采取预加载这样的一个操作

01:08:58.980 --> 01:09:01.980
预加载加载完成这样的一个图片以后的话

01:09:01.980 --> 01:09:03.980
才开始怎么样

01:09:03.980 --> 01:09:09.820
把图片

01:09:09.820 --> 01:09:10.820
正式的

01:09:10.820 --> 01:09:11.820
添加

01:09:11.820 --> 01:09:12.820
到

01:09:12.820 --> 01:09:14.820
页面之中

01:09:14.820 --> 01:09:15.820
页面之中

01:09:15.820 --> 01:09:17.820
那所以说

01:09:17.820 --> 01:09:18.820
我们再来看一下

01:09:18.820 --> 01:09:19.820
监控滑轮事件对吧

01:09:19.820 --> 01:09:20.820
不断判断

01:09:20.820 --> 01:09:21.820
亲位置

01:09:21.820 --> 01:09:22.820
到他位置之后

01:09:22.820 --> 01:09:23.820
再进行

01:09:23.820 --> 01:09:24.820
图片的加载

01:09:24.820 --> 01:09:25.820
不管是什么加载

01:09:25.820 --> 01:09:26.820
OK

01:09:26.820 --> 01:09:27.820
单独来看

01:09:27.820 --> 01:09:28.820
这三步的过程

01:09:28.820 --> 01:09:30.820
它其实就是懒加载的一个原理

01:09:30.820 --> 01:09:31.820
对吧

01:09:31.820 --> 01:09:32.820
我们是按须

01:09:32.820 --> 01:09:33.820
预加载对吧

01:09:33.820 --> 01:09:34.820
到了那个地方

01:09:34.820 --> 01:09:35.820
才加载对吧

01:09:35.820 --> 01:09:37.820
但是到那个地方以后的话

01:09:37.820 --> 01:09:38.820
如果说我们不采用

01:09:38.820 --> 01:09:39.820
预加载的话

01:09:39.820 --> 01:09:40.820
这个图片

01:09:40.820 --> 01:09:41.820
还是他有可能

01:09:41.820 --> 01:09:42.820
一点一点出来

01:09:42.820 --> 01:09:43.820
怎么办呢

01:09:43.820 --> 01:09:44.820
为了追求比较好的用户体验

01:09:44.820 --> 01:09:45.820
我们再把预加载

01:09:45.820 --> 01:09:47.820
结合到里面来对吧

01:09:47.820 --> 01:09:48.820
OK

01:09:48.820 --> 01:09:50.820
先把图片加载成功以后

01:09:50.820 --> 01:09:52.820
再把东西放到里面去

01:09:52.820 --> 01:09:54.820
就说整个这样的一个懒加载

01:09:54.820 --> 01:09:56.820
再预加载这样的一个过程的

01:09:56.820 --> 01:09:58.820
既保证了良好的用户体验对吧

01:09:58.820 --> 01:10:00.820
又给你尽可能的节省

01:10:00.820 --> 01:10:02.820
这样的一个浏览器的一个资源

01:10:03.820 --> 01:10:05.820
所以说我们后期

01:10:05.820 --> 01:10:06.820
再进行这个项目

01:10:06.820 --> 01:10:07.820
开发的功能中的话

01:10:07.820 --> 01:10:08.820
我们往往会考虑到

01:10:08.820 --> 01:10:10.820
一些性能的一个问题

01:10:10.820 --> 01:10:11.820
性能就是

01:10:11.820 --> 01:10:13.820
很多这些小的细节

01:10:13.820 --> 01:10:14.820
积累到一起去

01:10:14.820 --> 01:10:16.820
才能把这个性能提高

01:10:16.820 --> 01:10:17.820
所以说在这一块的话

01:10:17.820 --> 01:10:19.820
我们希望同学

01:10:19.820 --> 01:10:21.820
如果以后碰到此需求的话

01:10:21.820 --> 01:10:23.820
你也尽量采用懒加载

01:10:23.820 --> 01:10:25.820
加上预加载这种方式

01:10:25.820 --> 01:10:26.820
来完成此的功能

01:10:26.820 --> 01:10:27.820
就比如说

01:10:27.820 --> 01:10:28.820
当你学到瀑布流的时候

01:10:28.820 --> 01:10:29.820
对吧

01:10:29.820 --> 01:10:30.820
我们进行图片的一个

01:10:30.820 --> 01:10:32.820
讲那个展示和布局的时候

01:10:32.820 --> 01:10:33.820
我希望你能把

01:10:33.820 --> 01:10:35.820
这两个思想直入到里面去

01:10:35.820 --> 01:10:36.820
当然瀑布流

01:10:36.820 --> 01:10:37.820
我是在这个网络的时候

01:10:37.820 --> 01:10:39.820
我们才会进行这样的一个讲解

01:10:39.820 --> 01:10:40.820
OK

01:10:40.820 --> 01:10:41.820
那到这一块的话

01:10:41.820 --> 01:10:42.820
咱应该把这个

01:10:42.820 --> 01:10:44.820
图片的一个预加载

01:10:44.820 --> 01:10:45.820
和懒加载这样的一个原理

01:10:45.820 --> 01:10:46.820
都搞定了

01:10:46.820 --> 01:10:48.820
我们在后面的课程中

01:10:48.820 --> 01:10:49.820
其实碰到它的话

01:10:49.820 --> 01:10:51.820
依旧会拿过来再来说一说

01:10:51.820 --> 01:10:52.820
其实这一块

01:10:53.820 --> 01:10:55.820
往往还会配上一些模式

01:10:55.820 --> 01:10:56.820
比如说带点模式

01:10:57.820 --> 01:10:59.820
这种方式来进行这样的一个

01:10:59.820 --> 01:11:00.820
应用

01:11:01.820 --> 01:11:03.820
咱们在这一块只是把一个

01:11:03.820 --> 01:11:04.820
最基本的一个原理

01:11:04.820 --> 01:11:05.820
跟你来说一说

01:11:05.820 --> 01:11:06.820
让你去理解理解

01:11:06.820 --> 01:11:07.820
理解理解

01:11:08.820 --> 01:11:10.820
那这个图片的懒加载和预加载

01:11:10.820 --> 01:11:11.820
搞定以后的话

01:11:11.820 --> 01:11:12.820
咱们还有几个点

01:11:12.820 --> 01:11:13.820
几个点

01:11:13.820 --> 01:11:14.820
稍稍休息一下

01:11:14.820 --> 01:11:15.820
咱可以稍稍休息休息吧

01:11:15.820 --> 01:11:16.820
稍稍休息几分钟

01:11:17.820 --> 01:11:18.820
那我们欢迎回来

01:11:18.820 --> 01:11:19.820
欢迎回来

01:11:19.820 --> 01:11:20.820
已经休息了

01:11:20.820 --> 01:11:21.820
已经挺长时间了

01:11:22.820 --> 01:11:23.820
我们接来的话

01:11:23.820 --> 01:11:24.820
开始我们后半的节课

01:11:24.820 --> 01:11:25.820
一个内容

01:11:26.820 --> 01:11:27.820
那接来的话

01:11:27.820 --> 01:11:28.820
那接来的话

01:11:28.820 --> 01:11:29.820
咱开始说

01:11:29.820 --> 01:11:30.820
说这个Mass Render

01:11:30.820 --> 01:11:31.820
这个应用

01:11:32.820 --> 01:11:33.820
这个Mass

01:11:33.820 --> 01:11:34.820
它是个对象

01:11:34.820 --> 01:11:35.820
对象上有很多

01:11:35.820 --> 01:11:36.820
很多种方法

01:11:36.820 --> 01:11:37.820
原来我们之前

01:11:37.820 --> 01:11:38.820
我应该有所提及

01:11:39.820 --> 01:11:40.820
它有很多方法

01:11:40.820 --> 01:11:41.820
就比如说什么

01:11:41.820 --> 01:11:42.820
开胃拼方

01:11:42.820 --> 01:11:43.820
SQRT方法

01:11:43.820 --> 01:11:44.820
对吧

01:11:44.820 --> 01:11:45.820
对

01:11:45.820 --> 01:11:46.820
就比如什么

01:11:46.820 --> 01:11:47.820
Mass Render

01:11:47.820 --> 01:11:48.820
向下去整

01:11:48.820 --> 01:11:49.820
Mass Render

01:11:49.820 --> 01:11:50.820
向上去整

01:11:51.820 --> 01:11:52.820
Mass Render

01:11:52.820 --> 01:11:54.820
是占了一个取CG数

01:11:54.820 --> 01:11:55.820
取CG数的占应应用

01:11:55.820 --> 01:11:56.820
那咱可以来看一下

01:11:56.820 --> 01:11:57.820
这个CG数

01:11:57.820 --> 01:11:58.820
是什么意思

01:11:59.820 --> 01:12:00.820
好

01:12:00.820 --> 01:12:01.820
首先MATH

01:12:01.820 --> 01:12:02.820
这个M是个对象

01:12:02.820 --> 01:12:03.820
对吧

01:12:03.820 --> 01:12:04.820
很明显是个对象

01:12:04.820 --> 01:12:05.820
有这么多方法

01:12:05.820 --> 01:12:06.820
对吧

01:12:06.820 --> 01:12:07.820
散

01:12:07.820 --> 01:12:08.820
坦近的

01:12:08.820 --> 01:12:09.820
坦近的

01:12:09.820 --> 01:12:10.820
和坦近的区别是啥

01:12:10.820 --> 01:12:11.820
你知道吗

01:12:12.820 --> 01:12:13.820
哪个在上

01:12:13.820 --> 01:12:14.820
在下的区别

01:12:14.820 --> 01:12:15.820
喜欢上边

01:12:15.820 --> 01:12:16.820
还喜欢下面的区别

01:12:17.820 --> 01:12:18.820
Mass

01:12:18.820 --> 01:12:19.820
理解得很深入

01:12:19.820 --> 01:12:20.820
对

01:12:21.820 --> 01:12:22.820
高好数学

01:12:22.820 --> 01:12:23.820
费数挺高

01:12:23.820 --> 01:12:25.820
130 40分吗

01:12:26.820 --> 01:12:27.820
Mass Render

01:12:27.820 --> 01:12:28.820
OK 现在呢

01:12:28.820 --> 01:12:29.820
我们来看一下

01:12:31.820 --> 01:12:32.820
我之前一次

01:12:32.820 --> 01:12:33.820
还执行第二次

01:12:33.820 --> 01:12:34.820
执行第三次

01:12:34.820 --> 01:12:35.820
执行第四次

01:12:35.820 --> 01:12:36.820
每一次这个数

01:12:36.820 --> 01:12:37.820
它都是不一样的

01:12:37.820 --> 01:12:38.820
对吧

01:12:38.820 --> 01:12:39.820
所以说这是个随机式王

01:12:39.820 --> 01:12:40.820
当然

01:12:40.820 --> 01:12:41.820
我们是

01:12:41.820 --> 01:12:42.820
不是我们

01:12:42.820 --> 01:12:44.820
都做了这样的一个测验

01:12:44.820 --> 01:12:45.820
最后其实

01:12:45.820 --> 01:12:47.820
进行这样的一个取样以后的话

01:12:47.820 --> 01:12:48.820
我们会发现

01:12:48.820 --> 01:12:50.820
其实最后这个Mass Render

01:12:50.820 --> 01:12:52.820
它所生成随机数的概率

01:12:52.820 --> 01:12:54.820
是平均来分布的

01:12:54.820 --> 01:12:55.820
那肯定的平均

01:12:55.820 --> 01:12:56.820
对 是平均分布的

01:12:56.820 --> 01:12:57.820
它不会是像那种

01:12:57.820 --> 01:12:58.820
正态曲线一样的

01:12:58.820 --> 01:12:59.820
对吧

01:12:59.820 --> 01:13:00.820
某个去多 某个去少

01:13:00.820 --> 01:13:01.820
它不会这样的

01:13:01.820 --> 01:13:02.820
是平均的

01:13:02.820 --> 01:13:03.820
还有人真无聊

01:13:03.820 --> 01:13:04.820
他把这个东西

01:13:04.820 --> 01:13:05.820
做个实验测了一下

01:13:05.820 --> 01:13:06.820
对 就是那一天

01:13:06.820 --> 01:13:07.820
花了可能花了

01:13:07.820 --> 01:13:08.820
一周的时间

01:13:08.820 --> 01:13:09.820
花一周的时间

01:13:09.820 --> 01:13:10.820
不用再测了

01:13:10.820 --> 01:13:11.820
不容易

01:13:12.820 --> 01:13:13.820
这个Mass Render

01:13:13.820 --> 01:13:14.820
ok

01:13:14.820 --> 01:13:15.820
那它所生成的

01:13:15.820 --> 01:13:17.820
这个数字的一个区间

01:13:17.820 --> 01:13:18.820
这边我都说一下

01:13:18.820 --> 01:13:21.820
这个区间是大学里面

01:13:21.820 --> 01:13:22.820
这样一个词号

01:13:22.820 --> 01:13:23.820
区间

01:13:23.820 --> 01:13:24.820
也就是说是范围

01:13:24.820 --> 01:13:26.820
这个范围是0到1的

01:13:26.820 --> 01:13:28.820
一个左臂右开区间

01:13:28.820 --> 01:13:29.820
射线

01:13:29.820 --> 01:13:30.820
对 什么叫左臂右开

01:13:30.820 --> 01:13:32.820
那就包括左门

01:13:32.820 --> 01:13:33.820
不包括右门

01:13:33.820 --> 01:13:34.820
因为说它这辈子

01:13:34.820 --> 01:13:35.820
都不可能是1

01:13:35.820 --> 01:13:36.820
但它可能是0

01:13:36.820 --> 01:13:37.820
它可能是0

01:13:37.820 --> 01:13:38.820
射线的

01:13:38.820 --> 01:13:39.820
ok

01:13:39.820 --> 01:13:40.820
那既然是这样的

01:13:40.820 --> 01:13:41.820
那我们来说一下

01:13:41.820 --> 01:13:43.820
其实它这个

01:13:43.820 --> 01:13:45.820
直接的一个产生的效果

01:13:45.820 --> 01:13:46.820
倒是很容易来理解

01:13:46.820 --> 01:13:47.820
对吧

01:13:47.820 --> 01:13:48.820
那怎么来应用呢

01:13:48.820 --> 01:13:49.820
应用

01:13:49.820 --> 01:13:52.820
其实我们在使用随机数的时候

01:13:52.820 --> 01:13:56.820
往往会有这样的一种场景

01:13:56.820 --> 01:13:58.820
就是我需要生成一个

01:13:58.820 --> 01:13:59.820
随机的一个范围

01:13:59.820 --> 01:14:00.820
这个数字

01:14:00.820 --> 01:14:02.820
是在某一个范围内

01:14:02.820 --> 01:14:04.820
它成长了随机的一个状态

01:14:04.820 --> 01:14:06.820
比如说我提一个要求

01:14:06.820 --> 01:14:07.820
就是我想让你生成

01:14:07.820 --> 01:14:09.820
12到36之间的

01:14:09.820 --> 01:14:10.820
一个随机数

01:14:10.820 --> 01:14:12.820
就是从12到36之间

01:14:12.820 --> 01:14:13.820
去生成这样的一个

01:14:13.820 --> 01:14:15.820
随随机的一个数字

01:14:15.820 --> 01:14:16.820
那这种情况下的话

01:14:16.820 --> 01:14:18.820
我们考虑要怎么来办

01:14:18.820 --> 01:14:20.820
那我们来看一下

01:14:20.820 --> 01:14:21.820
首先我们已经知道

01:14:21.820 --> 01:14:26.820
mas.random

01:14:26.820 --> 01:14:29.820
那它所生成的这个区间范围

01:14:29.820 --> 01:14:30.820
是0到1的左臂右开区间

01:14:30.820 --> 01:14:31.820
对吧

01:14:31.820 --> 01:14:32.820
好 OK

01:14:32.820 --> 01:14:33.820
按照我们数学的这种方式

01:14:33.820 --> 01:14:35.820
回一下我们初中的数学

01:14:35.820 --> 01:14:38.820
如果我让它乘以一个

01:14:38.820 --> 01:14:39.820
乘以什么呢

01:14:39.820 --> 01:14:43.820
乘以一个36-12

01:14:43.820 --> 01:14:44.820
是多少

01:14:44.820 --> 01:14:45.820
是24对吧

01:14:45.820 --> 01:14:46.820
乘以24

01:14:46.820 --> 01:14:48.820
那是不是要36-12呢

01:14:48.820 --> 01:14:49.820
我们不是想生成

01:14:49.820 --> 01:14:51.820
12到36之间的一个随机数吗

01:14:51.820 --> 01:14:52.820
对不对

01:14:52.820 --> 01:14:54.820
OK那12到36之间

01:14:54.820 --> 01:14:55.820
有多少个数呢

01:14:55.820 --> 01:14:56.820
有24个数对吧

01:14:56.820 --> 01:14:57.820
那比如说

01:14:57.820 --> 01:14:58.820
我们想生成随机数

01:14:58.820 --> 01:15:00.820
这样的一个大体的范围

01:15:00.820 --> 01:15:01.820
是24对吧

01:15:01.820 --> 01:15:02.820
那当然我们现在

01:15:02.820 --> 01:15:04.820
已经知道的mas.random

01:15:04.820 --> 01:15:05.820
可以生成0到1

01:15:05.820 --> 01:15:07.820
OK那我用这个24

01:15:07.820 --> 01:15:08.820
去乘以一个

01:15:09.820 --> 01:15:10.820
乘以什么呢

01:15:10.820 --> 01:15:13.820
这个0到1的一个左臂右开区间

01:15:13.820 --> 01:15:14.820
这个11是5

01:15:14.820 --> 01:15:15.820
可能这个数是B定的

01:15:15.820 --> 01:15:16.820
对吧

01:15:16.820 --> 01:15:17.820
它是B定的

01:15:17.820 --> 01:15:18.820
那乘完以后的话

01:15:18.820 --> 01:15:19.820
最后

01:15:19.820 --> 01:15:20.820
那这个范围是多少

01:15:20.820 --> 01:15:22.820
那是不是一定就是

01:15:22.820 --> 01:15:23.820
最左门的这个

01:15:23.820 --> 01:15:25.820
这样一个G小值对吧

01:15:25.820 --> 01:15:26.820
乘以这个24是0对吧

01:15:26.820 --> 01:15:27.820
0到24

01:15:27.820 --> 01:15:28.820
0到24之间对吧

01:15:28.820 --> 01:15:30.820
OK那我这么乘完以后的话

01:15:30.820 --> 01:15:31.820
保证了

01:15:31.820 --> 01:15:34.820
这个整体它的这样一个范围

01:15:34.820 --> 01:15:35.820
是0到24

01:15:36.820 --> 01:15:37.820
0到24

01:15:37.820 --> 01:15:38.820
那我们刚才说

01:15:38.820 --> 01:15:39.820
我想让它生成一个

01:15:39.820 --> 01:15:42.820
12到36之间的随机数

01:15:42.820 --> 01:15:43.820
那怎么办呢

01:15:43.820 --> 01:15:44.820
加一下就可以了

01:15:44.820 --> 01:15:45.820
对不对

01:15:45.820 --> 01:15:46.820
想象一下

01:15:46.820 --> 01:15:47.820
我们已经生成了

01:15:47.820 --> 01:15:48.820
这样的一个0到24的区间范围

01:15:48.820 --> 01:15:49.820
对不对

01:15:49.820 --> 01:15:51.820
那12到36就是这个24个数

01:15:51.820 --> 01:15:52.820
这样的一个差距

01:15:52.820 --> 01:15:53.820
那我让它左右

01:15:53.820 --> 01:15:54.820
全部都加上12的话

01:15:54.820 --> 01:15:55.820
对吧

01:15:55.820 --> 01:15:57.820
加上这样一个最小的一个底值

01:15:57.820 --> 01:15:58.820
对吧

01:15:58.820 --> 01:16:00.820
那最后就是12到36

01:16:00.820 --> 01:16:01.820
36

01:16:01.820 --> 01:16:03.820
那这个范围就生成了

01:16:03.820 --> 01:16:04.820
我们可以来试一下

01:16:04.820 --> 01:16:05.820
我们可以来试一下

01:16:05.820 --> 01:16:06.820
在这里呢

01:16:06.820 --> 01:16:10.820
我们通过12乘以Mass点Random

01:16:10.820 --> 01:16:11.820
好

01:16:12.820 --> 01:16:13.820
不 12

01:16:13.820 --> 01:16:14.820
是24吧

01:16:14.820 --> 01:16:15.820
24

01:16:15.820 --> 01:16:17.820
24完了之后呢

01:16:17.820 --> 01:16:18.820
12加上它们

01:16:18.820 --> 01:16:19.820
来看一下

01:16:19.820 --> 01:16:22.820
是不是它所生成的值的范围

01:16:22.820 --> 01:16:24.820
都落在这个区间范围内了

01:16:24.820 --> 01:16:26.820
没有一个是超出的

01:16:26.820 --> 01:16:28.820
那如果说你在面试工作中

01:16:28.820 --> 01:16:30.820
碰到这样一个需求的话

01:16:30.820 --> 01:16:31.820
你就可以用这样的思路

01:16:31.820 --> 01:16:33.820
去进行这样的一个检查

01:16:33.820 --> 01:16:35.820
其实就是一个0到1之间的

01:16:35.820 --> 01:16:37.820
左臂右开的一个区间

01:16:37.820 --> 01:16:38.820
咱们在此基础上

01:16:38.820 --> 01:16:40.820
进行一些数值的操作而已

01:16:40.820 --> 01:16:41.820
对

01:16:41.820 --> 01:16:42.820
还很简单

01:16:42.820 --> 01:16:43.820
给你一个功能基础

01:16:43.820 --> 01:16:44.820
具体怎么操作

01:16:44.820 --> 01:16:45.820
你想要什么样的范围

01:16:45.820 --> 01:16:46.820
那就是数学功底了

01:16:46.820 --> 01:16:48.820
你是成完之后再加上怎么招的

01:16:48.820 --> 01:16:49.820
反正这个数肯定会落到

01:16:49.820 --> 01:16:51.820
你设置的那个区间里面去

01:16:51.820 --> 01:16:52.820
就完事了

01:16:52.820 --> 01:16:53.820
对

01:16:53.820 --> 01:16:54.820
那这个Mass and random的话

01:16:54.820 --> 01:16:56.820
其实咱们在之前

01:16:56.820 --> 01:16:58.820
排序中外也用为四半应该

01:16:58.820 --> 01:17:00.820
就是我们做乱序的时候

01:17:00.820 --> 01:17:01.820
对吧

01:17:01.820 --> 01:17:02.820
来选中四级数

01:17:02.820 --> 01:17:04.820
打到我们这样的一个效果

01:17:04.820 --> 01:17:06.820
那当然那还有什么时候用四级数呢

01:17:06.820 --> 01:17:08.820
就比如说我们做的这些抽奖

01:17:08.820 --> 01:17:10.820
这样的一些应用

01:17:10.820 --> 01:17:12.820
那可能我们就搭转盘

01:17:12.820 --> 01:17:13.820
转盘夸一抽

01:17:13.820 --> 01:17:14.820
可能没有一等奖

01:17:14.820 --> 01:17:15.820
二等奖 三等奖

01:17:15.820 --> 01:17:16.820
对吧

01:17:16.820 --> 01:17:17.820
和些参与

01:17:17.820 --> 01:17:18.820
一二三等奖加些参与

01:17:18.820 --> 01:17:20.820
比如说正好构成了这样的一个

01:17:20.820 --> 01:17:21.820
整个这个语言

01:17:21.820 --> 01:17:23.820
每个分别站它90度

01:17:23.820 --> 01:17:24.820
对吧

01:17:24.820 --> 01:17:25.820
那我们看上去

01:17:25.820 --> 01:17:26.820
这个概率可能是一样的

01:17:26.820 --> 01:17:27.820
当然它里面

01:17:27.820 --> 01:17:29.820
实际里面这个程序

01:17:29.820 --> 01:17:31.820
肯定不会让它这样的概率是一样的

01:17:31.820 --> 01:17:32.820
否则不亏死了

01:17:32.820 --> 01:17:34.820
我之前在百度的时候

01:17:34.820 --> 01:17:37.820
我们上线百度翻引

01:17:37.820 --> 01:17:39.820
那个时候为了推广这个项目

01:17:39.820 --> 01:17:40.820
好了

01:17:40.820 --> 01:17:41.820
我们就是想了一个招

01:17:41.820 --> 01:17:44.820
这个招就是下载百度翻引

01:17:44.820 --> 01:17:46.820
首次下载即可抽奖

01:17:46.820 --> 01:17:47.820
获得

01:17:47.820 --> 01:17:50.820
比如说牵照流量什么的

01:17:50.820 --> 01:17:53.820
但是我们上线都比较急

01:17:53.820 --> 01:17:55.820
所以说抽奖真正的后台

01:17:55.820 --> 01:17:56.820
没有做完

01:17:56.820 --> 01:17:57.820
没有做完

01:17:57.820 --> 01:17:59.820
还要赶上那天上线怎么办呢

01:17:59.820 --> 01:18:01.820
我们这个前三组就做了一个假的

01:18:01.820 --> 01:18:02.820
这一定抽的吧

01:18:02.820 --> 01:18:04.820
你是不可能能抽到假的

01:18:04.820 --> 01:18:07.820
所以说很多这个大公司

01:18:07.820 --> 01:18:08.820
轮盘上看起来

01:18:08.820 --> 01:18:11.820
图像学生那个善景的面积都是一样的

01:18:11.820 --> 01:18:13.820
实际这个图像背后对应这个概率

01:18:13.820 --> 01:18:14.820
是很离奇的

01:18:14.820 --> 01:18:16.820
是很学术的

01:18:16.820 --> 01:18:17.820
是很学术的

01:18:17.820 --> 01:18:19.820
说这个大公司套菜是比较多的

01:18:19.820 --> 01:18:20.820
对

01:18:20.820 --> 01:18:22.820
领导时期之间的一个区间数

01:18:22.820 --> 01:18:25.820
领导9.9的概率都是你中不了

01:18:25.820 --> 01:18:27.820
那比如说你看咱可以来简单来写一下

01:18:27.820 --> 01:18:28.820
对吧

01:18:28.820 --> 01:18:29.820
为个NAM

01:18:29.820 --> 01:18:31.820
Messia Random

01:18:31.820 --> 01:18:33.820
我这称一个100

01:18:33.820 --> 01:18:35.820
这个范围不就是领导100之间吗

01:18:35.820 --> 01:18:36.820
对吧

01:18:36.820 --> 01:18:37.820
当我判断一下

01:18:37.820 --> 01:18:38.820
比如说你这个数不数字

01:18:38.820 --> 01:18:40.820
只有说是NAM

01:18:40.820 --> 01:18:43.820
小于等于1的时候

01:18:43.820 --> 01:18:45.820
那你才能获得这个1等奖

01:18:45.820 --> 01:18:48.820
那你这个获得1等奖的这个概率是多好了

01:18:48.820 --> 01:18:50.820
1%的对吧

01:18:50.820 --> 01:18:51.820
1等奖

01:18:51.820 --> 01:18:54.820
1等奖

01:18:54.820 --> 01:18:55.820
在这里面呢

01:18:55.820 --> 01:18:58.820
比如说你这个NAM

01:18:58.820 --> 01:19:01.820
小于等于2的时候

01:19:01.820 --> 01:19:02.820
好

01:19:02.820 --> 01:19:03.820
2等奖

01:19:03.820 --> 01:19:05.820
那你2等奖的概率也很低对吧

01:19:05.820 --> 01:19:07.820
也很低

01:19:07.820 --> 01:19:08.820
2等奖

01:19:08.820 --> 01:19:09.820
再来做判断

01:19:09.820 --> 01:19:11.820
比如说是小于1

01:19:11.820 --> 01:19:13.820
然后大于1小于3

01:19:13.820 --> 01:19:14.820
这是SF

01:19:14.820 --> 01:19:15.820
SF是吧

01:19:15.820 --> 01:19:16.820
SF

01:19:16.820 --> 01:19:19.820
完了就再来一个S

01:19:19.820 --> 01:19:20.820
S

01:19:20.820 --> 01:19:21.820
S

01:19:21.820 --> 01:19:23.820
其实这还是算是有良心了对吧

01:19:23.820 --> 01:19:24.820
没良心的话

01:19:24.820 --> 01:19:25.820
直接就是

01:19:25.820 --> 01:19:26.820
那另一

01:19:26.820 --> 01:19:28.820
直接随时我都不写了

01:19:28.820 --> 01:19:29.820
直接不可能会这样对吧

01:19:29.820 --> 01:19:30.820
我让你站完一下

01:19:30.820 --> 01:19:31.820
就OK了对吧

01:19:31.820 --> 01:19:32.820
站上就可以

01:19:32.820 --> 01:19:34.820
反正那个转的角度什么都是可以控制的

01:19:34.820 --> 01:19:35.820
对

01:19:35.820 --> 01:19:37.820
学了3S3以后你就会做了

01:19:37.820 --> 01:19:39.820
就知道怎么控制怎么骗人了就好

01:19:39.820 --> 01:19:40.820
来

01:19:40.820 --> 01:19:41.820
三能讲

01:19:41.820 --> 01:19:43.820
回座完之后可以给你爸试一下

01:19:43.820 --> 01:19:44.820
把我们公司开发一个这个东西

01:19:44.820 --> 01:19:45.820
你给随便抽

01:19:45.820 --> 01:19:46.820
抽奖

01:19:46.820 --> 01:19:47.820
随便抽

01:19:47.820 --> 01:19:48.820
你抽了之后我给你买车

01:19:48.820 --> 01:19:49.820
买车

01:19:50.820 --> 01:19:52.820
有概率抽

01:19:52.820 --> 01:19:54.820
有概率抽中一辆车对吧

01:19:54.820 --> 01:19:55.820
完了之后呢

01:19:55.820 --> 01:19:56.820
其实根本就不可能

01:19:56.820 --> 01:19:57.820
那再来看

01:19:57.820 --> 01:19:58.820
谢谢回顾

01:19:58.820 --> 01:19:59.820
拿这个养老了

01:20:00.820 --> 01:20:02.820
我们在里面再设置一个会员机制

01:20:02.820 --> 01:20:04.820
你还可以抽钱充奖的

01:20:05.820 --> 01:20:06.820
谢谢回顾

01:20:07.820 --> 01:20:08.820
回顾

01:20:08.820 --> 01:20:09.820
咱保存一下

01:20:09.820 --> 01:20:10.820
先咱来刷新新新

01:20:10.820 --> 01:20:11.820
看一下

01:20:11.820 --> 01:20:12.820
好 谢谢回顾

01:20:12.820 --> 01:20:13.820
谢谢回顾

01:20:13.820 --> 01:20:14.820
基本上都是小回顾对吧

01:20:14.820 --> 01:20:16.820
你也不可能抽中的

01:20:16.820 --> 01:20:17.820
那当然 哎呀

01:20:17.820 --> 01:20:18.820
把QA1打开了

01:20:19.820 --> 01:20:21.820
那也是Mask Random的话

01:20:21.820 --> 01:20:22.820
这个应用的话

01:20:22.820 --> 01:20:23.820
其实场景还是比较多的

01:20:23.820 --> 01:20:25.820
但当然你知道这个原理以后的话

01:20:25.820 --> 01:20:27.820
你碰到一些需要这个

01:20:27.820 --> 01:20:28.820
使用到它的场景的话

01:20:28.820 --> 01:20:30.820
你拿出来去给它进行这样的一个操作

01:20:30.820 --> 01:20:31.820
就OK

01:20:31.820 --> 01:20:32.820
本身没有那么难

01:20:32.820 --> 01:20:33.820
OK Mask Random

01:20:33.820 --> 01:20:35.820
这也是作为咱们前期的一个

01:20:35.820 --> 01:20:36.820
铺垫的一个小点

01:20:36.820 --> 01:20:37.820
那接下来

01:20:37.820 --> 01:20:39.820
接下来我们再往下来

01:20:39.820 --> 01:20:40.820
再往下来是什么呢

01:20:40.820 --> 01:20:41.820
就是这个

01:20:41.820 --> 01:20:42.820
文档碎片

01:20:42.820 --> 01:20:43.820
文档碎片

01:20:43.820 --> 01:20:45.820
这是个什么东西呢

01:20:45.820 --> 01:20:46.820
咱们看一下

01:20:47.820 --> 01:20:48.820
对

01:20:48.820 --> 01:20:49.820
其实

01:20:49.820 --> 01:20:50.820
文档碎片

01:20:50.820 --> 01:20:52.820
这是我们可以创建的一个东西

01:20:52.820 --> 01:20:54.820
比如OF一下

01:20:54.820 --> 01:20:55.820
OF

01:20:55.820 --> 01:20:59.260
等于一个Document

01:20:59.260 --> 01:21:00.260
小写的

01:21:00.260 --> 01:21:04.260
Document.create

01:21:05.260 --> 01:21:07.260
Document.fragment

01:21:07.260 --> 01:21:08.260
我通过它的话

01:21:08.260 --> 01:21:09.260
可以创建一个文档碎片

01:21:09.260 --> 01:21:10.260
这个文档碎片

01:21:10.260 --> 01:21:11.260
其实在我理解的话

01:21:11.260 --> 01:21:12.260
它就相当

01:21:12.260 --> 01:21:13.260
它就相当于一个容器

01:21:13.260 --> 01:21:15.260
或者说一个框一样

01:21:15.260 --> 01:21:16.260
它有什么用呢

01:21:16.260 --> 01:21:17.260
就比如说

01:21:17.260 --> 01:21:18.260
我们要做一件事情

01:21:18.260 --> 01:21:20.260
我们要在这个里面

01:21:21.260 --> 01:21:22.260
URI

01:21:22.260 --> 01:21:24.260
我在URI里面去创建

01:21:24.260 --> 01:21:29.490
一堆的LI

01:21:29.490 --> 01:21:31.490
一堆LI

01:21:31.490 --> 01:21:33.490
那创建一堆LI的话

01:21:33.490 --> 01:21:34.490
好了

01:21:34.490 --> 01:21:35.490
我们再回想一下

01:21:35.490 --> 01:21:36.490
我们刚开始课程中

01:21:36.490 --> 01:21:38.490
这样的一个讲解

01:21:38.490 --> 01:21:40.490
也是讲到这个训练过程的时候

01:21:40.490 --> 01:21:41.490
如果说

01:21:41.490 --> 01:21:42.490
我一个一个去往里面

01:21:42.490 --> 01:21:43.490
CRI的话

01:21:43.490 --> 01:21:44.490
LI一定会怎么样

01:21:44.490 --> 01:21:45.490
它一定会有

01:21:45.490 --> 01:21:47.490
它这样一个大小和尺寸

01:21:47.490 --> 01:21:48.490
它会显示到

01:21:48.490 --> 01:21:49.490
这个页面之中

01:21:49.490 --> 01:21:51.490
但每一次你添加的时候

01:21:51.490 --> 01:21:52.490
或说你每次在操作

01:21:52.490 --> 01:21:53.490
这个DOM的时候

01:21:53.490 --> 01:21:55.490
你是不是都得去

01:21:55.490 --> 01:21:56.490
经历一下

01:21:56.490 --> 01:21:58.490
这个渲染的一个整个过程

01:21:58.490 --> 01:21:59.490
对吧

01:21:59.490 --> 01:22:00.490
那如果是这种情况下的话

01:22:00.490 --> 01:22:01.490
其实

01:22:01.490 --> 01:22:03.490
我们连续触发10次

01:22:03.490 --> 01:22:04.490
这个这种渲染的

01:22:04.490 --> 01:22:06.490
整体的一个过程的话

01:22:06.490 --> 01:22:08.490
其实本质上是很好性能的

01:22:08.490 --> 01:22:09.490
当然

01:22:09.490 --> 01:22:10.490
我们其实后面有这样一个

01:22:10.490 --> 01:22:11.490
专业的词语

01:22:11.490 --> 01:22:12.490
叫做重汇和重排

01:22:12.490 --> 01:22:14.490
Reflow和Repent

01:22:14.490 --> 01:22:15.490
Repent

01:22:15.490 --> 01:22:16.490
那

01:22:16.490 --> 01:22:17.490
那如果说

01:22:17.490 --> 01:22:18.490
你一个一个添加

01:22:18.490 --> 01:22:19.490
能不能打到这个效果呢

01:22:19.490 --> 01:22:20.490
一定是可以的

01:22:20.490 --> 01:22:21.490
我们现在先不使用

01:22:21.490 --> 01:22:22.490
文档碎片

01:22:22.490 --> 01:22:23.490
先不用这样的一个容器

01:22:23.490 --> 01:22:24.490
我们来

01:22:24.490 --> 01:22:25.490
说我一个OL

01:22:25.490 --> 01:22:26.490
等于一个

01:22:26.490 --> 01:22:27.490
不是OL

01:22:27.490 --> 01:22:28.490
对,OL吧

01:22:28.490 --> 01:22:29.490
等于一个Document

01:22:29.490 --> 01:22:30.490
第二

01:22:30.490 --> 01:22:31.490
Gate,Element,Bad

01:22:31.490 --> 01:22:33.490
在这的话

01:22:33.490 --> 01:22:36.490
我来直接去写一下这个Rapper

01:22:36.490 --> 01:22:37.490
那我OL

01:22:37.490 --> 01:22:38.490
写个方讯环

01:22:38.490 --> 01:22:39.490
来个方讯环

01:22:39.490 --> 01:22:40.490
在这里

01:22:40.490 --> 01:22:41.490
我握一个i

01:22:41.490 --> 01:22:42.490
等于一个0

01:22:42.490 --> 01:22:44.490
完了我让i小一个10

01:22:44.490 --> 01:22:45.490
是吧,i加加

01:22:45.490 --> 01:22:46.490
在这的话

01:22:46.490 --> 01:22:47.490
我可以这么做

01:22:47.490 --> 01:22:48.490
我握一个NewRI

01:22:48.490 --> 01:22:49.490
对吧

01:22:49.490 --> 01:22:51.490
我去Document.createElement

01:22:51.490 --> 01:22:53.490
我要创建10个RI

01:22:53.490 --> 01:22:54.490
对吧

01:22:54.490 --> 01:22:55.490
在这的话

01:22:55.490 --> 01:22:56.490
我写RI

01:22:56.490 --> 01:22:57.490
每次都创建一个新的

01:22:57.490 --> 01:22:58.490
我用这个NewRI

01:22:58.490 --> 01:23:00.490
InnerTest里面

01:23:00.490 --> 01:23:02.490
相当于有这样的文本内容

01:23:02.490 --> 01:23:04.490
这放到速度串吧

01:23:04.490 --> 01:23:05.490
那最后

01:23:05.490 --> 01:23:08.490
我再通过一个OL.append child

01:23:08.490 --> 01:23:09.490
往这里面去

01:23:09.490 --> 01:23:13.380
加上这个NewRI

01:23:13.380 --> 01:23:15.380
好,咱保存一下

01:23:15.380 --> 01:23:16.380
保存一次

01:23:16.380 --> 01:23:17.380
咱看

01:23:20.970 --> 01:23:21.970
OK

01:23:21.970 --> 01:23:22.970
这个10个RI

01:23:22.970 --> 01:23:23.970
已经出来了

01:23:23.970 --> 01:23:24.970
对吧

01:23:24.970 --> 01:23:25.970
那我们这边

01:23:25.970 --> 01:23:27.970
还没有去办法

01:23:27.970 --> 01:23:28.970
我们还没有

01:23:28.970 --> 01:23:29.970
不是没有办法

01:23:29.970 --> 01:23:30.970
还没到那个时候

01:23:30.970 --> 01:23:32.970
我们其实是可以看一下

01:23:32.970 --> 01:23:34.970
它大致是花了多少时间

01:23:34.970 --> 01:23:36.970
去来干这样的一件事

01:23:36.970 --> 01:23:37.970
刷新一下

01:23:37.970 --> 01:23:39.970
其实这是有一个时间的

01:23:39.970 --> 01:23:40.970
比如说

01:23:40.970 --> 01:23:41.970
这个

01:23:41.970 --> 01:23:42.970
我来看看

01:23:43.970 --> 01:23:46.970
来找一下那样的一个

01:23:46.970 --> 01:23:52.710
看一下这个值

01:23:52.710 --> 01:24:04.410
省点长

01:24:04.410 --> 01:24:05.410
稍等一会

01:24:05.410 --> 01:24:06.410
稍等一会

01:24:07.410 --> 01:24:08.410
还得读完是吗

01:24:10.410 --> 01:24:11.410
没事,等会吧

01:24:12.410 --> 01:24:13.410
来回一回

01:24:13.410 --> 01:24:14.410
老大人这么多什么的

01:24:14.410 --> 01:24:16.410
最近有没有什么

01:24:16.410 --> 01:24:17.410
上面还得的事情

01:24:17.410 --> 01:24:19.410
没什么特殊新闻

01:24:19.410 --> 01:24:20.410
傻的

01:24:22.410 --> 01:24:24.410
最近应该临处也不太远了

01:24:24.410 --> 01:24:25.410
最近

01:24:25.410 --> 01:24:26.410
表面

01:24:27.410 --> 01:24:29.410
还比较风平浪静的

01:24:29.410 --> 01:24:31.410
就像暴风雨来临前的

01:24:32.410 --> 01:24:33.410
宁静说

01:24:33.410 --> 01:24:35.410
就好像在酝酿和策划这点

01:24:35.410 --> 01:24:36.410
什么事

01:24:36.410 --> 01:24:38.410
今晚准备去

01:24:38.410 --> 01:24:39.410
去刺烂刺烂

01:24:39.410 --> 01:24:41.410
对,每次来的时候都很平静

01:24:41.410 --> 01:24:42.410
每次问我没啥事吧

01:24:42.410 --> 01:24:44.410
倒漫然,没啥事

01:24:44.410 --> 01:24:45.410
没事啊

01:24:45.410 --> 01:24:46.410
我没有啥事

01:24:47.410 --> 01:24:48.410
我从来都没出过事的

01:24:50.410 --> 01:24:54.680
看其他的

01:25:03.890 --> 01:25:04.890
这个

01:25:04.890 --> 01:25:05.890
稍等一会

01:25:05.890 --> 01:25:06.890
听个人

01:25:06.890 --> 01:25:07.890
听个人

01:25:07.890 --> 01:25:08.890
咱这样吧

01:25:08.890 --> 01:25:10.890
就是已经卡了很长时间了

01:25:10.890 --> 01:25:11.890
咱先不管了

01:25:11.890 --> 01:25:13.890
其实我记得咱们这个

01:25:13.890 --> 01:25:15.890
原来的这样的一个

01:25:15.890 --> 01:25:17.890
控台里面是有个time line的

01:25:17.890 --> 01:25:18.890
但是这个乱性门还没有出现

01:25:18.890 --> 01:25:19.890
可能是进行这样的一个更新

01:25:19.890 --> 01:25:20.890
换代

01:25:20.890 --> 01:25:21.890
后面的话

01:25:21.890 --> 01:25:23.890
咱们会详细的把这样的一个

01:25:23.890 --> 01:25:24.890
这个

01:25:24.890 --> 01:25:25.890
不等了

01:25:25.890 --> 01:25:26.890
就在那三三中的话

01:25:26.890 --> 01:25:28.890
咱把这个东西详细的展示出来

01:25:28.890 --> 01:25:29.890
其实这里面的话

01:25:29.890 --> 01:25:30.890
你也能大概能看得出来

01:25:30.890 --> 01:25:32.890
它就有很多条线

01:25:32.890 --> 01:25:33.890
等会

01:25:34.890 --> 01:25:35.890
加强S

01:25:35.890 --> 01:25:36.890
刷新

01:25:37.890 --> 01:25:38.890
刷新一下

01:25:41.890 --> 01:25:42.890
这里面还没有对吧

01:25:42.890 --> 01:25:43.890
来看它吧

01:25:43.890 --> 01:25:44.890
看它

01:25:44.890 --> 01:25:45.890
拜渡

01:25:45.890 --> 01:25:46.890
那他问

01:25:46.890 --> 01:25:47.890
肯定发现了这边很多条线

01:25:47.890 --> 01:25:48.890
没什么颜色的线

01:25:48.890 --> 01:25:50.890
代表你整个网页里面

01:25:50.890 --> 01:25:52.890
其实不同的这样的一个

01:25:52.890 --> 01:25:54.890
比如说GIS的这样的一个

01:25:54.890 --> 01:25:55.890
执行时间

01:25:55.890 --> 01:25:56.890
包括这样的一个

01:25:56.890 --> 01:25:57.890
dump加载的时间

01:25:57.890 --> 01:25:58.890
等等

01:25:58.890 --> 01:25:59.890
它有这样的一个

01:25:59.890 --> 01:26:00.890
具体的时间的一个展示

01:26:00.890 --> 01:26:02.890
其实有这样一个饼

01:26:02.890 --> 01:26:03.890
咱们再来修吧

01:26:03.890 --> 01:26:04.890
那这一块的话

01:26:04.890 --> 01:26:05.890
你会发现一点

01:26:05.890 --> 01:26:06.890
就是我在不停地去操作

01:26:06.890 --> 01:26:07.890
这个dump的功能中的话

01:26:07.890 --> 01:26:09.890
它会有很多这样的一个

01:26:09.890 --> 01:26:11.890
就是性能的一个消耗

01:26:11.890 --> 01:26:13.890
当然这里面出现了一个

01:26:13.890 --> 01:26:16.890
就是理想中的这样的一个工具

01:26:16.890 --> 01:26:18.890
就是一个温档碎片

01:26:18.890 --> 01:26:20.890
它的出现的目的就是为了解决

01:26:20.890 --> 01:26:21.890
而你进行这样的一个

01:26:21.890 --> 01:26:22.890
频繁的dump操作

01:26:22.890 --> 01:26:23.890
从而导致的这样的

01:26:23.890 --> 01:26:25.890
性能消耗的问题

01:26:25.890 --> 01:26:27.890
因为你每次操作完以后的话

01:26:27.890 --> 01:26:29.890
它都会有这样的重汇和重排

01:26:29.890 --> 01:26:30.890
而重汇和重排

01:26:30.890 --> 01:26:31.890
是整个网页

01:26:31.890 --> 01:26:32.890
开发功能中的话

01:26:32.890 --> 01:26:34.890
最好实验的两个步骤

01:26:34.890 --> 01:26:36.890
当然除了GS的交别执行以外

01:26:36.890 --> 01:26:37.890
它是最好时间的

01:26:37.890 --> 01:26:38.890
所以说我们在

01:26:38.890 --> 01:26:39.890
后续的开发功能中的话

01:26:39.890 --> 01:26:40.890
你要考虑到性能的话

01:26:40.890 --> 01:26:41.890
我们就尽量避免

01:26:41.890 --> 01:26:43.890
这样的一个重汇和重排

01:26:43.890 --> 01:26:44.890
那在这咱怎么来办呢

01:26:44.890 --> 01:26:45.890
咱可以这么来做

01:26:45.890 --> 01:26:48.890
就是把它拿过来

01:26:48.890 --> 01:26:50.890
其实这个是在CIS3里面的内容

01:26:50.890 --> 01:26:51.890
我拿到这边来讲了

01:26:51.890 --> 01:26:53.890
来,OF一下

01:26:53.890 --> 01:26:54.890
咱看这

01:26:54.890 --> 01:26:56.890
我可以不用

01:26:56.890 --> 01:26:57.890
在每一行

01:26:57.890 --> 01:26:59.890
就是在每一次你创建完

01:26:59.890 --> 01:27:00.890
I以后的话

01:27:00.890 --> 01:27:01.890
我就直接把它

01:27:01.890 --> 01:27:02.890
OF

01:27:02.890 --> 01:27:04.890
我就直接把OUIL里面

01:27:04.890 --> 01:27:05.890
去添加新的LIR

01:27:05.890 --> 01:27:07.890
而是我每次你新创建完

01:27:07.890 --> 01:27:08.890
一个LIR以后的话

01:27:08.890 --> 01:27:09.890
我都把它先放到

01:27:09.890 --> 01:27:11.890
我这个容器里面

01:27:11.890 --> 01:27:12.890
当你都放到

01:27:12.890 --> 01:27:13.890
你那容器里面以后的话

01:27:13.890 --> 01:27:14.890
好了

01:27:14.890 --> 01:27:15.890
那你在这

01:27:15.890 --> 01:27:16.890
放循环

01:27:16.890 --> 01:27:17.890
结束以后

01:27:17.890 --> 01:27:18.890
你整个大容器里面

01:27:18.890 --> 01:27:19.890
装了10个这样的新的LRI

01:27:19.890 --> 01:27:20.890
对不对

01:27:20.890 --> 01:27:21.890
OK,那现在我把

01:27:21.890 --> 01:27:22.890
这个容器

01:27:22.890 --> 01:27:23.890
移并给它C到

01:27:23.890 --> 01:27:25.890
这样的OUIL之中

01:27:25.890 --> 01:27:26.890
咱来看一下

01:27:26.890 --> 01:27:28.890
最后也相当于

01:27:28.890 --> 01:27:29.890
把这个LRI

01:27:29.890 --> 01:27:31.890
全部放到里面去

01:27:31.890 --> 01:27:32.890
咱来看一下

01:27:32.890 --> 01:27:33.890
刷新一次

01:27:33.890 --> 01:27:34.890
刷新

01:27:34.890 --> 01:27:35.890
它我先不看了

01:27:35.890 --> 01:27:36.890
刷新

01:27:36.890 --> 01:27:37.890
OK

01:27:37.890 --> 01:27:38.890
这是没问题对吧

01:27:38.890 --> 01:27:40.890
还是依旧会有这几个值

01:27:40.890 --> 01:27:41.890
当然

01:27:41.890 --> 01:27:42.890
咱们都说这个

01:27:42.890 --> 01:27:43.890
要什么理想

01:27:43.890 --> 01:27:44.890
对吧,很封吧

01:27:44.890 --> 01:27:45.890
现实都很古怪

01:27:45.890 --> 01:27:46.890
对吧

01:27:46.890 --> 01:27:47.890
那么后面经过

01:27:47.890 --> 01:27:48.890
很多次实测

01:27:48.890 --> 01:27:49.890
它并没有怎么去

01:27:49.890 --> 01:27:51.890
提高这样的一个性能

01:27:51.890 --> 01:27:52.890
所以说

01:27:52.890 --> 01:27:53.890
我们后面

01:27:53.890 --> 01:27:55.890
就是它给咱们

01:27:55.890 --> 01:27:56.890
这样的一个文档

01:27:56.890 --> 01:27:58.890
随便的意图是好的

01:27:58.890 --> 01:27:59.890
但是

01:27:59.890 --> 01:28:00.890
确实没有解决

01:28:00.890 --> 01:28:01.890
我们想提高一下

01:28:01.890 --> 01:28:03.890
性能的这个目的

01:28:03.890 --> 01:28:04.890
所以说

01:28:04.890 --> 01:28:05.890
后来我们在学一些

01:28:05.890 --> 01:28:06.890
高级框上之中

01:28:06.890 --> 01:28:07.890
有些高级框架

01:28:07.890 --> 01:28:09.890
为了解决这样的一些

01:28:09.890 --> 01:28:10.890
性能问题

01:28:10.890 --> 01:28:11.890
从此出现了一些

01:28:11.890 --> 01:28:13.890
很牛逼的一个东西

01:28:13.890 --> 01:28:14.890
叫做讯档

01:28:14.890 --> 01:28:16.890
讯档

01:28:16.890 --> 01:28:17.890
这块

01:28:17.890 --> 01:28:18.890
如果说想讲的

01:28:18.890 --> 01:28:19.890
情况下的话

01:28:19.890 --> 01:28:21.890
大概能讲出好几解课去

01:28:21.890 --> 01:28:22.890
那咱们这块

01:28:22.890 --> 01:28:23.890
也是简单来提一提

01:28:23.890 --> 01:28:24.890
讯档

01:28:24.890 --> 01:28:25.890
比如说我们要连续

01:28:25.890 --> 01:28:27.890
十次来操作这个档

01:28:27.890 --> 01:28:28.890
好了

01:28:28.890 --> 01:28:29.890
不是我们要

01:28:29.890 --> 01:28:30.890
因为我们后面

01:28:30.890 --> 01:28:32.890
学到很多这样的一个项目中

01:28:32.890 --> 01:28:33.890
其实要做的是

01:28:33.890 --> 01:28:34.890
数据可视化

01:28:34.890 --> 01:28:35.890
我们需要通过一个

01:28:35.890 --> 01:28:36.890
数据的获取

01:28:36.890 --> 01:28:37.890
拿过来以后的话

01:28:37.890 --> 01:28:39.890
我们事先想好

01:28:39.890 --> 01:28:40.890
并且写完了

01:28:40.890 --> 01:28:42.890
就是根据这个数据

01:28:42.890 --> 01:28:45.890
来渲染档的这样一些方法

01:28:45.890 --> 01:28:46.890
那OK

01:28:46.890 --> 01:28:47.890
那这个数据传过来以后的话

01:28:47.890 --> 01:28:48.890
我们进行这样的一个数据

01:28:48.890 --> 01:28:49.890
展示

01:28:49.890 --> 01:28:51.890
生成各种各样的一些标签

01:28:51.890 --> 01:28:52.890
那如果说

01:28:52.890 --> 01:28:53.890
我们再进行

01:28:53.890 --> 01:28:54.890
操控中的话

01:28:54.890 --> 01:28:55.890
如果你连续的进行

01:28:55.890 --> 01:28:56.890
档目操作

01:28:56.890 --> 01:28:57.890
必然还会去

01:28:57.890 --> 01:28:59.890
爆发我们这样的一些问题

01:28:59.890 --> 01:29:00.890
就是它会不断的

01:29:00.890 --> 01:29:01.890
充汇充排

01:29:01.890 --> 01:29:02.890
充汇充排

01:29:02.890 --> 01:29:03.890
而且你在本身

01:29:03.890 --> 01:29:05.890
在本身操作档

01:29:05.890 --> 01:29:07.890
操作怎么来操作呢

01:29:07.890 --> 01:29:08.890
获取

01:29:08.890 --> 01:29:10.890
或者说修改

01:29:10.890 --> 01:29:12.890
这都是极其好性能

01:29:12.890 --> 01:29:13.890
咱们可以来打开来看一下

01:29:13.890 --> 01:29:14.890
现在我随便

01:29:14.890 --> 01:29:16.890
随便给你输出一个

01:29:16.890 --> 01:29:17.890
档目对象

01:29:17.890 --> 01:29:18.890
O,U,L

01:29:18.890 --> 01:29:19.890
你发现

01:29:19.890 --> 01:29:20.890
这个人们身上的方法

01:29:20.890 --> 01:29:22.890
那是有老多老多了

01:29:22.890 --> 01:29:24.890
他本身就极其好

01:29:24.890 --> 01:29:26.890
这样的一个内存

01:29:26.890 --> 01:29:28.890
而且你再去找一个

01:29:28.890 --> 01:29:29.890
比如说档目对象的时候

01:29:29.890 --> 01:29:31.890
你要从整个档目数中

01:29:31.890 --> 01:29:32.890
去定律到这一个的话

01:29:32.890 --> 01:29:33.890
他也是很好

01:29:33.890 --> 01:29:34.890
这样的一个计算能力的

01:29:34.890 --> 01:29:35.890
所以说

01:29:35.890 --> 01:29:37.890
虚拟档目就英文而生

01:29:37.890 --> 01:29:39.890
虚拟档目它干什么样的事呢

01:29:39.890 --> 01:29:41.890
就是我们在刚才

01:29:41.890 --> 01:29:42.890
在操作的时候

01:29:42.890 --> 01:29:43.890
基本上你都是通过

01:29:43.890 --> 01:29:45.890
你受传的档目对象

01:29:45.890 --> 01:29:48.890
直接的进行添加

01:29:48.890 --> 01:29:49.890
那我们如果说

01:29:49.890 --> 01:29:50.890
不想这么做怎么办呢

01:29:50.890 --> 01:29:52.890
我们给你的虚拟出来一层

01:29:52.890 --> 01:29:55.890
我们自己去在这里面

01:29:55.890 --> 01:29:58.890
比如说去定义一些寒树

01:29:58.890 --> 01:29:59.890
比如说我方式

01:29:59.890 --> 01:30:00.890
方式一个什么呢

01:30:00.890 --> 01:30:02.890
叫做一个杜一

01:30:02.890 --> 01:30:04.890
杜一Element

01:30:04.890 --> 01:30:06.890
我们来进行这样的一个

01:30:06.890 --> 01:30:07.890
方法的一些定义

01:30:07.890 --> 01:30:09.890
通过这样的构造寒树

01:30:09.890 --> 01:30:10.890
我让它形成

01:30:10.890 --> 01:30:11.890
彼此之间的一些

01:30:11.890 --> 01:30:13.890
树形的一个关系

01:30:13.890 --> 01:30:14.890
我们要知道

01:30:14.890 --> 01:30:15.890
这个东西

01:30:15.890 --> 01:30:17.890
并不是原生

01:30:17.890 --> 01:30:18.890
这个浏览器

01:30:18.890 --> 01:30:19.890
所提供我们的

01:30:19.890 --> 01:30:21.890
这个Element的构造寒树

01:30:21.890 --> 01:30:23.890
原生提供给我们的这个东西的话

01:30:23.890 --> 01:30:24.890
它是有它原生的

01:30:24.890 --> 01:30:26.890
这样一些关系的

01:30:26.890 --> 01:30:27.890
它没有这样的一些

01:30:27.890 --> 01:30:28.890
继承关系

01:30:28.890 --> 01:30:29.890
这只是我们自己写的

01:30:29.890 --> 01:30:30.890
我们在自己写的过程中的话

01:30:30.890 --> 01:30:31.890
我们可以说

01:30:31.890 --> 01:30:34.890
让它跟一些这样的一个

01:30:34.890 --> 01:30:35.890
够做

01:30:35.890 --> 01:30:37.890
让它跟一些构造寒树

01:30:37.890 --> 01:30:38.890
形成一些简单的

01:30:38.890 --> 01:30:40.890
一个继承关系

01:30:40.890 --> 01:30:41.890
我们在使用的时候

01:30:41.890 --> 01:30:42.890
并不是来

01:30:42.890 --> 01:30:44.890
向以前直接操作它们了

01:30:44.890 --> 01:30:46.890
而是直接操作它们

01:30:46.890 --> 01:30:47.890
它们也必须的

01:30:47.890 --> 01:30:49.890
根据原有的这样的一个道目

01:30:49.890 --> 01:30:50.890
形成这样的硬射关系

01:30:50.890 --> 01:30:52.890
来进行这样的一次的一个记录

01:30:52.890 --> 01:30:53.890
那记录完以后的话

01:30:53.890 --> 01:30:55.890
我们再进行后续操作

01:30:55.890 --> 01:30:56.890
就方便很多了

01:30:56.890 --> 01:30:58.890
不用我每一次都进行

01:30:58.890 --> 01:31:00.890
这个道目的一个直接操作

01:31:00.890 --> 01:31:02.890
而是来修改它们

01:31:02.890 --> 01:31:04.890
来修改我们虚拟出来的这一层

01:31:04.890 --> 01:31:05.890
当然就比如说

01:31:05.890 --> 01:31:07.890
我们在进行这个道目的

01:31:07.890 --> 01:31:08.890
一个增栓改查

01:31:08.890 --> 01:31:09.890
我们要添加一下

01:31:09.890 --> 01:31:10.890
我们想要这个用户界面

01:31:10.890 --> 01:31:11.890
发生一些变化的时候

01:31:11.890 --> 01:31:12.890
像以前我们可能说

01:31:12.890 --> 01:31:14.890
直接把所有的

01:31:14.890 --> 01:31:16.890
这样对应的一个

01:31:16.890 --> 01:31:17.890
道目对象

01:31:17.890 --> 01:31:20.890
直接拿出来进行山改修

01:31:20.890 --> 01:31:22.890
但现在我们它不这么做

01:31:22.890 --> 01:31:23.890
因为什么呢

01:31:23.890 --> 01:31:24.890
因为可能说

01:31:24.890 --> 01:31:25.890
你之前进行山改修的话

01:31:25.890 --> 01:31:28.890
很多次它都是没有必要的一个操作

01:31:28.890 --> 01:31:29.890
就我们后面

01:31:29.890 --> 01:31:30.890
讲到这样一个数组

01:31:30.890 --> 01:31:32.890
一个过滤组件以后的话

01:31:32.890 --> 01:31:33.890
比如说有一堆

01:31:33.890 --> 01:31:34.890
这样的一个好友列表

01:31:34.890 --> 01:31:35.890
有男的有女的

01:31:35.890 --> 01:31:36.890
我直接选

01:31:36.890 --> 01:31:37.890
我说只暂时男的

01:31:37.890 --> 01:31:38.890
OK女的全没了以后的话

01:31:38.890 --> 01:31:39.890
你要知道

01:31:39.890 --> 01:31:40.890
男的可能还保留在

01:31:40.890 --> 01:31:41.890
这个界面之中

01:31:41.890 --> 01:31:42.890
对吧

01:31:42.890 --> 01:31:43.890
那这个时候的话

01:31:43.890 --> 01:31:44.890
我们如果说

01:31:44.890 --> 01:31:45.890
按照原来用的方式

01:31:45.890 --> 01:31:46.890
进行这样的一个操作的话

01:31:46.890 --> 01:31:47.890
必然的话

01:31:47.890 --> 01:31:48.890
需要进行这样的一个

01:31:48.890 --> 01:31:49.890
重新的一个更改

01:31:49.890 --> 01:31:50.890
对吧

01:31:50.890 --> 01:31:51.890
让每一个这样的

01:31:51.890 --> 01:31:52.890
还有列表

01:31:52.890 --> 01:31:53.890
里面所丢的一个标签

01:31:53.890 --> 01:31:55.890
全部发生一个变化

01:31:55.890 --> 01:31:56.890
那如果说

01:31:56.890 --> 01:31:57.890
虚拟道目情况下的话

01:31:57.890 --> 01:31:58.890
我们怎么办呢

01:31:58.890 --> 01:32:00.890
有这个虚拟道目以后的话

01:32:00.890 --> 01:32:01.890
我们还可以通过一个东西

01:32:01.890 --> 01:32:02.890
叫做Deep算法

01:32:02.890 --> 01:32:03.890
来做一个前后

01:32:03.890 --> 01:32:04.890
状态的一个对比

01:32:04.890 --> 01:32:05.890
就在对比完以后的话

01:32:05.890 --> 01:32:07.890
我们真真真正的

01:32:07.890 --> 01:32:09.890
把那些需要

01:32:09.890 --> 01:32:10.890
进行改变

01:32:10.890 --> 01:32:12.890
需要进行这样的一个操作

01:32:12.890 --> 01:32:14.890
用道目拿出来

01:32:14.890 --> 01:32:16.890
对它进行一个操作

01:32:16.890 --> 01:32:17.890
节省那些真正

01:32:17.890 --> 01:32:18.890
就是节省那些

01:32:18.890 --> 01:32:19.890
没有必要的这样的一个

01:32:19.890 --> 01:32:20.890
操作的一个次数

01:32:20.890 --> 01:32:22.890
可能十个好友对吧

01:32:22.890 --> 01:32:23.890
如果说我们按照原来

01:32:23.890 --> 01:32:24.890
用的方法的话

01:32:24.890 --> 01:32:25.890
我们可能说

01:32:25.890 --> 01:32:27.890
需要连续操作道目十次对吧

01:32:27.890 --> 01:32:28.890
但由于我有迅道目

01:32:28.890 --> 01:32:29.890
配合这样的一个

01:32:29.890 --> 01:32:30.890
Deep算法以后的话

01:32:30.890 --> 01:32:32.890
作为一个前后状态的一个对比

01:32:32.890 --> 01:32:34.890
我可能只需要去修改

01:32:34.890 --> 01:32:36.890
45454545次了

01:32:36.890 --> 01:32:38.890
那这样的情况下的话

01:32:38.890 --> 01:32:39.890
能大大地去

01:32:39.890 --> 01:32:41.890
提高我们这样的一个性能

01:32:41.890 --> 01:32:42.890
当然这一块的知识点

01:32:42.890 --> 01:32:45.890
是一个很难的一个知识点

01:32:45.890 --> 01:32:46.890
它是一道我们后期的一个

01:32:46.890 --> 01:32:47.890
VUE

01:32:47.890 --> 01:32:48.890
或是主要的一个框架

01:32:48.890 --> 01:32:51.890
而且我们会在这个框架之中

01:32:51.890 --> 01:32:52.890
首司这些原码

01:32:52.890 --> 01:32:54.890
在首司原码之中的一个

01:32:54.890 --> 01:32:57.890
相对来说比较难的一个阶段

01:32:57.890 --> 01:32:58.890
来讲这一块

01:32:58.890 --> 01:32:59.890
我提前拿来说

01:32:59.890 --> 01:33:00.890
可能有同学就有点怕

01:33:00.890 --> 01:33:01.890
他有点懦

01:33:01.890 --> 01:33:02.890
没关系

01:33:02.890 --> 01:33:03.890
在这里面

01:33:03.890 --> 01:33:04.890
我们先打一个

01:33:04.890 --> 01:33:05.890
他提前这样

01:33:05.890 --> 01:33:06.890
先告诉你有这么个东西

01:33:06.890 --> 01:33:08.890
我们后期

01:33:08.890 --> 01:33:09.890
有这样的一个技术

01:33:09.890 --> 01:33:11.890
来解决你这个文档碎片

01:33:11.890 --> 01:33:13.890
不能够实际提升我们效率

01:33:13.890 --> 01:33:14.890
这样一种

01:33:14.890 --> 01:33:17.890
就是这样一种情况

01:33:17.890 --> 01:33:18.890
OK

01:33:18.890 --> 01:33:19.890
所以我们在往后

01:33:19.890 --> 01:33:20.890
进一般里面

01:33:20.890 --> 01:33:22.890
会讲这样的一个讯档

01:33:22.890 --> 01:33:23.890
当然呢

01:33:23.890 --> 01:33:24.890
如果说我们现在的

01:33:24.890 --> 01:33:25.890
如果说现在

01:33:25.890 --> 01:33:26.890
你想怎么说呢

01:33:26.890 --> 01:33:27.890
就是尽可能的

01:33:27.890 --> 01:33:28.890
来提高这样的一个

01:33:28.890 --> 01:33:30.890
它的一个性能的话

01:33:30.890 --> 01:33:31.890
你可以怎么做呢

01:33:31.890 --> 01:33:33.890
我们没有不要使用文档碎片

01:33:33.890 --> 01:33:34.890
其实我们可以使用

01:33:34.890 --> 01:33:35.890
刺不穿拼接

01:33:35.890 --> 01:33:37.890
这个东西就很简单了

01:33:37.890 --> 01:33:38.890
没有那么难

01:33:38.890 --> 01:33:39.890
而且呢

01:33:39.890 --> 01:33:40.890
后期我们讲这个

01:33:40.890 --> 01:33:41.890
受处处处的时候

01:33:41.890 --> 01:33:42.890
咱们也会经常来使用

01:33:42.890 --> 01:33:44.890
这样的一个字幕串的拼接

01:33:44.890 --> 01:33:45.890
比如说我问一个

01:33:45.890 --> 01:33:46.890
STR

01:33:47.890 --> 01:33:48.890
他等于空的字幕串

01:33:48.890 --> 01:33:49.890
等于空的字幕串

01:33:49.890 --> 01:33:50.890
那在这的话

01:33:50.890 --> 01:33:52.890
我不去创建这个道路

01:33:52.890 --> 01:33:53.890
因为创建道路的话

01:33:53.890 --> 01:33:55.890
本身就是一个很麻烦的过程

01:33:55.890 --> 01:33:57.890
我在这HTML

01:33:58.890 --> 01:33:59.890
STR

01:33:59.890 --> 01:34:01.890
往上他家都没啥的

01:34:01.890 --> 01:34:05.200
LID

01:34:05.200 --> 01:34:06.200
LID吧

01:34:06.200 --> 01:34:07.200
在这呢

01:34:10.980 --> 01:34:11.980
往上放里面

01:34:11.980 --> 01:34:12.980
放一个ID

01:34:13.980 --> 01:34:15.980
那经过这样一个拼接以后的话

01:34:15.980 --> 01:34:16.980
等他出来了

01:34:16.980 --> 01:34:17.980
HMLSTR

01:34:17.980 --> 01:34:19.980
已经是个10个Li

01:34:19.980 --> 01:34:21.980
拼成一写的一个大的组串了

01:34:21.980 --> 01:34:22.980
我只需要让这个

01:34:22.980 --> 01:34:24.980
OUL.InnerHML

01:34:24.980 --> 01:34:25.980
等于他的话

01:34:26.980 --> 01:34:28.980
最后也是能生成

01:34:28.980 --> 01:34:29.980
10个这样的Li

01:34:30.980 --> 01:34:31.980
相对来讲的话

01:34:32.980 --> 01:34:34.980
比你这个用文档碎片

01:34:34.980 --> 01:34:35.980
要更容易写

01:34:35.980 --> 01:34:36.980
这样也是可以的

01:34:36.980 --> 01:34:37.980
没问题

01:34:37.980 --> 01:34:38.980
当然

01:34:38.980 --> 01:34:40.980
这个东西跟那个讯到

01:34:40.980 --> 01:34:42.980
它的差距还是比较大的

01:34:43.980 --> 01:34:44.980
咱这一块的话

01:34:44.980 --> 01:34:46.980
就不太去讲讯到我们了

01:34:46.980 --> 01:34:47.980
讲完的话

01:34:47.980 --> 01:34:48.980
同学就完全就蒙尿了

01:34:48.980 --> 01:34:49.980
咱们只知道

01:34:49.980 --> 01:34:51.980
目前来讲的话

01:34:51.980 --> 01:34:52.980
这种方法的话

01:34:52.980 --> 01:34:53.980
也要比他

01:34:53.980 --> 01:34:55.980
要更能接受的效能

01:34:55.980 --> 01:34:56.980
就ok

01:34:56.980 --> 01:34:58.980
而且他也要比你直接去

01:34:58.980 --> 01:34:59.980
创建道路去往里面

01:34:59.980 --> 01:35:00.980
给盘了child

01:35:00.980 --> 01:35:01.980
要更好一点

01:35:01.980 --> 01:35:03.980
所以说推荐询

01:35:03.980 --> 01:35:05.980
这种方式推荐询

01:35:06.980 --> 01:35:08.980
到这块的话

01:35:08.980 --> 01:35:09.980
咱已经基本上

01:35:09.980 --> 01:35:10.980
把这个东西

01:35:10.980 --> 01:35:11.980
已经都搞定了

01:35:11.980 --> 01:35:12.980
文档碎片

01:35:12.980 --> 01:35:13.980
文档碎片

01:35:13.980 --> 01:35:14.980
那接下来的话

01:35:14.980 --> 01:35:16.980
咱们讲这两个东西

01:35:16.980 --> 01:35:18.980
就开始真正的一个收官了

01:35:18.980 --> 01:35:20.980
一个叫断点调试

01:35:20.980 --> 01:35:21.980
一个叫做一个封装

01:35:21.980 --> 01:35:22.980
bicast name

01:35:22.980 --> 01:35:23.980
其实封装bicast name

01:35:23.980 --> 01:35:24.980
这一块的话

01:35:24.980 --> 01:35:25.980
只是想大家

01:35:25.980 --> 01:35:26.980
比较简单

01:35:26.980 --> 01:35:27.980
只是想带大家来练一练

01:35:27.980 --> 01:35:28.980
练一练啥呢

01:35:28.980 --> 01:35:29.980
练一练

01:35:29.980 --> 01:35:31.980
这是我们一点

01:35:31.980 --> 01:35:32.980
这个证则

01:35:32.980 --> 01:35:33.980
和这个在留言上

01:35:33.980 --> 01:35:34.980
编写

01:35:34.980 --> 01:35:35.980
函数和签邮性的

01:35:35.980 --> 01:35:36.980
这样一些应用

01:35:36.980 --> 01:35:37.980
对直线直线

01:35:37.980 --> 01:35:38.980
一个总结提升

01:35:38.980 --> 01:35:39.980
总结用

01:35:39.980 --> 01:35:40.980
对

01:35:40.980 --> 01:35:41.980
那其实本没有必要

01:35:41.980 --> 01:35:42.980
去发生它的

01:35:42.980 --> 01:35:43.980
因为现在很多乱七

01:35:43.980 --> 01:35:44.980
已经支持了这个

01:35:44.980 --> 01:35:45.980
已经支持了

01:35:45.980 --> 01:35:46.980
bicast name

01:35:46.980 --> 01:35:48.980
一个guide admin的bicast name

01:35:48.980 --> 01:35:49.980
之前不说有一些

01:35:49.980 --> 01:35:51.980
流乱七不太支持了

01:35:51.980 --> 01:35:52.980
现在是大多数乱七

01:35:52.980 --> 01:35:54.980
基本上都支持这个功能了

01:35:54.980 --> 01:35:57.740
之前那个东西

01:35:57.740 --> 01:35:58.740
就那时候上课的时候

01:35:58.740 --> 01:35:59.740
我记得好像

01:35:59.740 --> 01:36:00.740
给大家也留过这样的

01:36:00.740 --> 01:36:01.740
一个作业

01:36:01.740 --> 01:36:02.740
如果去写一个

01:36:02.740 --> 01:36:04.740
兼容性的一个方法

01:36:04.740 --> 01:36:05.740
所以说呢

01:36:05.740 --> 01:36:06.740
咱今天就给他

01:36:06.740 --> 01:36:07.740
我记得我选择的时候

01:36:07.740 --> 01:36:08.740
好像没什么

01:36:08.740 --> 01:36:09.740
就讲到这个

01:36:09.740 --> 01:36:10.740
对吧

01:36:10.740 --> 01:36:11.740
我不太记得

01:36:11.740 --> 01:36:12.740
没事

01:36:12.740 --> 01:36:13.740
讲到可能说

01:36:13.740 --> 01:36:14.740
我咱想的可能不太一样

01:36:14.740 --> 01:36:15.740
对吧

01:36:15.740 --> 01:36:16.740
换一种store

01:36:16.740 --> 01:36:17.740
咱来去做一做

01:36:17.740 --> 01:36:18.740
对吧

01:36:18.740 --> 01:36:19.740
那首先

01:36:19.740 --> 01:36:20.740
我们要知道一件事情

01:36:20.740 --> 01:36:21.740
一旦适应到这样

01:36:21.740 --> 01:36:22.740
能够兼容的话

01:36:22.740 --> 01:36:23.740
对吧

01:36:23.740 --> 01:36:24.740
我们要考虑到一个问题

01:36:24.740 --> 01:36:25.740
首先

01:36:25.740 --> 01:36:27.740
我要建议的这个方法

01:36:27.740 --> 01:36:28.740
叫做gadge

01:36:28.740 --> 01:36:29.740
aliments

01:36:29.740 --> 01:36:30.740
我要兼容什么方法

01:36:30.740 --> 01:36:31.740
aliments

01:36:31.740 --> 01:36:32.740
bicast name

01:36:32.740 --> 01:36:33.740
那这个方法

01:36:33.740 --> 01:36:34.740
本身

01:36:34.740 --> 01:36:35.740
都是在谁的身上

01:36:35.740 --> 01:36:36.740
可以有的

01:36:36.740 --> 01:36:37.740
document的身上

01:36:37.740 --> 01:36:39.740
需要一个name

01:36:39.740 --> 01:36:40.740
bicast name

01:36:40.740 --> 01:36:41.740
OK

01:36:41.740 --> 01:36:45.180
是document的身上

01:36:45.180 --> 01:36:46.180
可以有的

01:36:46.180 --> 01:36:47.180
当然说他以外的话

01:36:47.180 --> 01:36:48.180
还有谁呢

01:36:48.180 --> 01:36:49.180
是他的原型上

01:36:49.180 --> 01:36:50.180
可以有的

01:36:50.180 --> 01:36:51.180
还有叫做aliment

01:36:51.180 --> 01:36:52.180
这个大家讲的

01:36:52.180 --> 01:36:53.180
是可以有的

01:36:53.180 --> 01:36:54.180
那既然他俩

01:36:54.180 --> 01:36:55.180
可以有的情况下的话

01:36:55.180 --> 01:36:56.180
那我们要做

01:36:56.180 --> 01:36:57.180
兼容的目的是

01:36:57.180 --> 01:36:58.180
是因为可能说

01:36:58.180 --> 01:36:59.180
你这个页面

01:36:59.180 --> 01:37:00.180
在一些老八卖人的

01:37:00.180 --> 01:37:01.180
i6i机下

01:37:01.180 --> 01:37:02.180
你会发现

01:37:02.180 --> 01:37:03.180
他不能用了对不对

01:37:03.180 --> 01:37:04.180
那他不能用的话

01:37:04.180 --> 01:37:05.180
那我希望他可以用的话

01:37:05.180 --> 01:37:06.180
我们要做这样的那个

01:37:06.180 --> 01:37:07.180
兼容

01:37:07.180 --> 01:37:08.180
那兼容的话

01:37:08.180 --> 01:37:10.180
也就是不只兼容在他的身上

01:37:10.180 --> 01:37:11.180
还有兼容在他的身上

01:37:11.180 --> 01:37:12.180
对不对

01:37:12.180 --> 01:37:13.180
说在这一块的话

01:37:13.180 --> 01:37:14.180
我们就进行一个判断

01:37:14.180 --> 01:37:15.180
判断上呢

01:37:15.180 --> 01:37:17.180
我们可以直接拿document的

01:37:17.180 --> 01:37:18.180
dl

01:37:18.180 --> 01:37:20.180
get aliments by class name

01:37:20.180 --> 01:37:22.180
我来看一下

01:37:22.180 --> 01:37:23.180
他有没有

01:37:23.180 --> 01:37:24.180
对吧

01:37:24.180 --> 01:37:25.180
如果他没有的话

01:37:25.180 --> 01:37:26.180
那这个身上也只能说

01:37:26.180 --> 01:37:27.180
他没有的

01:37:27.180 --> 01:37:28.180
如果document的

01:37:28.180 --> 01:37:29.180
使用不了的话

01:37:29.180 --> 01:37:30.180
这名document的

01:37:30.180 --> 01:37:31.180
原型上没有对吧

01:37:31.180 --> 01:37:32.180
那同样的话

01:37:32.180 --> 01:37:33.180
一套下来

01:37:33.180 --> 01:37:34.180
他是没有的

01:37:34.180 --> 01:37:35.180
那如果说

01:37:35.180 --> 01:37:36.180
你这是没有

01:37:36.180 --> 01:37:37.180
怎么办呢

01:37:37.180 --> 01:37:38.180
你这是没有的

01:37:38.180 --> 01:37:39.180
没有的

01:37:39.180 --> 01:37:40.180
你这是他没有的话

01:37:40.180 --> 01:37:41.180
他是又是个案理犯的

01:37:41.180 --> 01:37:43.180
案理犯的是个false对吧

01:37:43.180 --> 01:37:45.180
那这对于这个运算服务

01:37:45.180 --> 01:37:46.180
叫做位货对吧

01:37:46.180 --> 01:37:47.180
就往后走

01:37:47.180 --> 01:37:49.180
或者说可以把

01:37:49.180 --> 01:37:50.180
后面这个东西

01:37:50.180 --> 01:37:52.180
作为整个这样的一个

01:37:52.180 --> 01:37:54.180
最后的一个值

01:37:54.180 --> 01:37:56.180
那我这可以写一个函数

01:37:56.180 --> 01:37:57.180
同学可能蒙了

01:37:57.180 --> 01:37:59.180
在这我从来没写过函数对吧

01:37:59.180 --> 01:38:00.180
没关系

01:38:00.180 --> 01:38:01.180
我觉得我就在这写了

01:38:01.180 --> 01:38:02.180
第一次对吧

01:38:02.180 --> 01:38:03.180
第一次

01:38:03.180 --> 01:38:04.180
在写完以后的话

01:38:04.180 --> 01:38:05.180
咱是什么意思呢

01:38:05.180 --> 01:38:06.180
他就是这么个东西

01:38:06.180 --> 01:38:07.180
对吧

01:38:07.180 --> 01:38:10.180
那我让他作为什么

01:38:10.180 --> 01:38:12.180
作为document的

01:38:12.180 --> 01:38:13.180
第二

01:38:13.180 --> 01:38:14.180
或者说作为这个

01:38:14.180 --> 01:38:16.180
docmntdl

01:38:16.180 --> 01:38:17.180
project

01:38:17.180 --> 01:38:19.180
上面的getclassname

01:38:19.180 --> 01:38:20.180
作为他这样的一个值

01:38:20.180 --> 01:38:21.180
对

01:38:21.180 --> 01:38:22.180
当然我在这呢

01:38:22.180 --> 01:38:23.180
同样

01:38:23.180 --> 01:38:25.180
我一样是你这个

01:38:25.180 --> 01:38:26.180
nms

01:38:26.180 --> 01:38:27.180
第二

01:38:27.180 --> 01:38:28.180
project

01:38:28.180 --> 01:38:30.180
getclassname

01:38:30.180 --> 01:38:31.180
一个值

01:38:31.180 --> 01:38:32.180
这就厉害了

01:38:32.180 --> 01:38:33.180
对吧

01:38:33.180 --> 01:38:34.180
这样的话就是

01:38:34.180 --> 01:38:36.180
一句话就搞定对不对

01:38:36.180 --> 01:38:37.180
一句话就搞定

01:38:37.180 --> 01:38:38.180
搞定什么呢

01:38:38.180 --> 01:38:39.180
我来看一下

01:38:39.180 --> 01:38:42.180
我让他和他的get

01:38:42.180 --> 01:38:43.180
nms backclassname

01:38:43.180 --> 01:38:44.180
都等于谁呢

01:38:44.180 --> 01:38:45.180
等于看这

01:38:46.180 --> 01:38:48.180
如果你这革命

01:38:48.180 --> 01:38:49.180
有这个值对吧

01:38:49.180 --> 01:38:50.180
那我还让你俩等于

01:38:50.180 --> 01:38:51.180
你俩自己

01:38:51.180 --> 01:38:52.180
如果你没有怎么办

01:38:52.180 --> 01:38:53.180
就走后面

01:38:53.180 --> 01:38:54.180
给一个我自己

01:38:54.180 --> 01:38:56.180
新冯正好的函数

01:38:56.180 --> 01:38:57.180
那这样的话

01:38:57.180 --> 01:38:58.180
能做到这样一个

01:38:58.180 --> 01:38:59.180
兼容的一个目的

01:38:59.180 --> 01:39:00.180
做兼容的目的

01:39:00.180 --> 01:39:02.180
那做兼容的目的以后

01:39:02.180 --> 01:39:03.180
就需要把这个函数

01:39:03.180 --> 01:39:04.180
真正的给它

01:39:04.180 --> 01:39:05.180
封满出来

01:39:05.180 --> 01:39:06.180
给它实现出来

01:39:06.180 --> 01:39:07.180
它需要接受一个参数

01:39:07.180 --> 01:39:08.180
这个参数叫classname

01:39:10.180 --> 01:39:11.180
OK

01:39:11.180 --> 01:39:12.180
那我们把这个

01:39:12.180 --> 01:39:13.180
稍微缩小一点

01:39:13.180 --> 01:39:14.180
应该还能看得见

01:39:14.180 --> 01:39:16.180
那既然是这样的话

01:39:16.180 --> 01:39:17.180
我们接下来就是

01:39:17.180 --> 01:39:18.180
要把这个功能

01:39:18.180 --> 01:39:19.180
给它完善出来了

01:39:19.180 --> 01:39:20.180
已经知道了

01:39:20.180 --> 01:39:21.180
这里面传个参数

01:39:21.180 --> 01:39:22.180
是classname

01:39:22.180 --> 01:39:23.180
那外界的电容型

01:39:23.180 --> 01:39:24.180
是啥

01:39:24.180 --> 01:39:25.180
外界的电容型

01:39:25.180 --> 01:39:26.180
已经是要不然document的

01:39:26.180 --> 01:39:27.180
get

01:39:29.180 --> 01:39:30.180
nms backclassname

01:39:33.180 --> 01:39:34.180
要不然呢

01:39:34.180 --> 01:39:35.180
就是可能说

01:39:35.180 --> 01:39:37.180
某某某某一个dum

01:39:37.180 --> 01:39:38.180
可能说div

01:39:38.180 --> 01:39:39.180
所定的dum对象

01:39:39.180 --> 01:39:40.180
它点它

01:39:40.180 --> 01:39:41.180
在下面去找

01:39:42.180 --> 01:39:43.180
在它下面去找

01:39:43.180 --> 01:39:44.180
是吧

01:39:44.180 --> 01:39:45.180
OK

01:39:45.180 --> 01:39:46.180
那这一块的话

01:39:46.180 --> 01:39:47.180
我完成一个

01:39:47.180 --> 01:39:48.180
另外一个

01:39:48.180 --> 01:39:49.180
我希望给大家留着

01:39:49.180 --> 01:39:50.180
这样一个小作业

01:39:50.180 --> 01:39:51.180
行吧

01:39:51.180 --> 01:39:52.180
有小作业

01:39:52.180 --> 01:39:53.180
好

01:39:53.180 --> 01:39:54.180
那这样的话

01:39:54.180 --> 01:39:55.180
咱们来看

01:39:55.180 --> 01:39:56.180
比如说

01:39:56.180 --> 01:39:57.180
当你这种电容

01:39:57.180 --> 01:39:58.180
详斥以后的话

01:39:58.180 --> 01:40:00.180
我这写一个gammon的话

01:40:00.180 --> 01:40:01.180
应该把整个页面中

01:40:01.180 --> 01:40:03.180
所有就demo类名的

01:40:03.180 --> 01:40:04.180
这样一个标签

01:40:04.180 --> 01:40:05.180
全部回去出来

01:40:05.180 --> 01:40:06.180
你刚才都完成了

01:40:06.180 --> 01:40:07.180
你都写完节目

01:40:07.180 --> 01:40:08.180
我们都

01:40:08.180 --> 01:40:09.180
对

01:40:09.180 --> 01:40:10.180
那在这样的话

01:40:10.180 --> 01:40:11.180
好了

01:40:11.180 --> 01:40:12.180
我给你出一个

01:40:12.180 --> 01:40:13.180
比较难点的情况

01:40:14.180 --> 01:40:16.180
首先来个wrapper

01:40:16.180 --> 01:40:17.180
这来个div

01:40:17.180 --> 01:40:18.180
div里面

01:40:18.180 --> 01:40:19.180
比如说来个p标签

01:40:19.180 --> 01:40:20.180
p标签class

01:40:20.180 --> 01:40:21.180
我还不规范的写

01:40:21.180 --> 01:40:22.180
我这么写

01:40:22.180 --> 01:40:23.180
一对空格

01:40:23.180 --> 01:40:24.180
来个demo

01:40:24.180 --> 01:40:25.180
来个

01:40:25.180 --> 01:40:26.180
两空格boss

01:40:26.180 --> 01:40:27.180
来个tiv

01:40:27.180 --> 01:40:29.180
给它这么多类名

01:40:29.180 --> 01:40:30.180
这么多类名

01:40:30.180 --> 01:40:31.180
我再来个spun

01:40:31.180 --> 01:40:32.180
spun的话class

01:40:32.180 --> 01:40:33.180
比如说

01:40:33.180 --> 01:40:34.180
也有demo

01:40:34.180 --> 01:40:35.180
我要空格

01:40:35.180 --> 01:40:36.180
tiv

01:40:37.180 --> 01:40:38.180
空格

01:40:38.180 --> 01:40:40.180
在这再来个spun

01:40:40.180 --> 01:40:41.180
这spun

01:40:41.180 --> 01:40:42.180
class

01:40:43.180 --> 01:40:45.180
空格demo

01:40:45.180 --> 01:40:46.180
空格

01:40:46.180 --> 01:40:47.180
好了

01:40:47.180 --> 01:40:48.180
最后再来下面

01:40:48.180 --> 01:40:49.180
再来个p标签

01:40:49.180 --> 01:40:50.180
p标签

01:40:50.180 --> 01:40:51.180
class

01:40:51.180 --> 01:40:53.180
叫做空格boss

01:40:53.180 --> 01:40:54.180
空格

01:40:54.180 --> 01:40:55.180
我来个demo

01:40:55.180 --> 01:40:57.180
下面最后再来个spun

01:40:57.180 --> 01:40:58.180
这个情况

01:40:58.180 --> 01:40:59.180
就复杂一点

01:40:59.180 --> 01:41:00.180
无论怎么复杂的话

01:41:00.180 --> 01:41:02.180
其实还是一套

01:41:02.180 --> 01:41:03.180
还是一套

01:41:03.180 --> 01:41:05.180
可以去搞定得了的

01:41:05.180 --> 01:41:06.180
在这一块的话

01:41:06.180 --> 01:41:08.180
把它变成这个样子以后

01:41:08.180 --> 01:41:09.180
我们还让它

01:41:09.180 --> 01:41:10.180
能完成这个功能的话

01:41:10.180 --> 01:41:12.180
我们就得多考虑点点

01:41:12.180 --> 01:41:13.180
多考虑点点

01:41:13.180 --> 01:41:15.180
首先在这要做什么事呢

01:41:18.180 --> 01:41:20.180
你通过document的方式

01:41:20.180 --> 01:41:21.180
来获取

01:41:21.180 --> 01:41:23.180
根据类名来获取

01:41:23.180 --> 01:41:24.180
这样的标签的话

01:41:24.180 --> 01:41:26.180
首先我要做的一件事情

01:41:26.180 --> 01:41:27.180
你要知道

01:41:27.180 --> 01:41:28.180
你要知道

01:41:28.180 --> 01:41:29.180
你在document下面

01:41:29.180 --> 01:41:31.180
去找东西的话

01:41:31.180 --> 01:41:33.180
是不是所有的标签

01:41:33.180 --> 01:41:35.180
都可能成为你的一个目标

01:41:35.180 --> 01:41:36.180
对吧

01:41:36.180 --> 01:41:38.180
在这我要干的第一件事就是

01:41:38.180 --> 01:41:40.180
获取

01:41:40.180 --> 01:41:42.180
获取到document

01:41:42.180 --> 01:41:45.180
下面的所有标签

01:41:45.180 --> 01:41:46.180
是吧

01:41:46.180 --> 01:41:48.180
那首先这个des

01:41:48.180 --> 01:41:49.180
其实这个des

01:41:49.180 --> 01:41:50.180
由于是

01:41:50.180 --> 01:41:51.180
它来调用它的

01:41:51.180 --> 01:41:52.180
对吧

01:41:52.180 --> 01:41:53.180
我是这一回

01:41:53.180 --> 01:41:55.180
我是这种表现显示的话

01:41:55.180 --> 01:41:56.180
document来调用它的话

01:41:56.180 --> 01:41:57.180
des一定是document

01:41:57.180 --> 01:41:58.180
但如果说

01:41:58.180 --> 01:41:59.180
像我们刚刚说

01:41:59.180 --> 01:42:00.180
某个div来调用它的话

01:42:00.180 --> 01:42:02.180
这是des一定是某个div了

01:42:02.180 --> 01:42:03.180
对吧

01:42:03.180 --> 01:42:04.180
那这边我们就莫认是document

01:42:04.180 --> 01:42:05.180
行吧

01:42:05.180 --> 01:42:06.180
document

01:42:06.180 --> 01:42:08.180
因为那个其余的调

01:42:08.180 --> 01:42:09.180
就是比如说

01:42:09.180 --> 01:42:10.180
除了document以外的话

01:42:10.180 --> 01:42:12.180
其余的那种元素进行调用的话

01:42:12.180 --> 01:42:13.180
我想做的一个作业

01:42:13.180 --> 01:42:14.180
向大家去来写一写

01:42:14.180 --> 01:42:15.180
那OK

01:42:15.180 --> 01:42:17.180
首先我要通过

01:42:17.180 --> 01:42:19.180
通过这种方式

01:42:19.180 --> 01:42:20.180
来获取一下

01:42:20.180 --> 01:42:23.180
所有的document下面的一个标签

01:42:23.180 --> 01:42:25.180
我通过get elements by tiger name

01:42:25.180 --> 01:42:26.180
在这我写一个

01:42:26.180 --> 01:42:27.180
通配符

01:42:27.180 --> 01:42:28.180
对吧

01:42:28.180 --> 01:42:29.180
那就是所有的标签

01:42:29.180 --> 01:42:30.180
全部获取

01:42:30.180 --> 01:42:32.180
在这我握个别量名字

01:42:32.180 --> 01:42:34.180
叫aldomery

01:42:34.180 --> 01:42:35.180
这个名字

01:42:35.180 --> 01:42:37.180
应该就有这样的一定的含义

01:42:37.180 --> 01:42:38.180
与意性

01:42:38.180 --> 01:42:39.180
对

01:42:39.180 --> 01:42:40.180
要不然你容易可能写了

01:42:40.180 --> 01:42:41.180
多里厚的话

01:42:41.180 --> 01:42:42.180
你都忘了这什么意思了

01:42:44.180 --> 01:42:45.180
对

01:42:45.180 --> 01:42:46.180
因为你不到最后别量

01:42:46.180 --> 01:42:47.180
它代表什么

01:42:47.180 --> 01:42:48.180
好

01:42:48.180 --> 01:42:49.180
那你握完它以后的话

01:42:49.180 --> 01:42:50.180
咱们藏下来

01:42:50.180 --> 01:42:52.180
我要做的事情是

01:42:53.180 --> 01:42:54.180
我要把这个

01:42:54.180 --> 01:42:55.180
aldomery

01:42:55.180 --> 01:42:56.180
里面

01:42:56.180 --> 01:42:58.180
每一个dom的class name

01:42:58.180 --> 01:42:59.180
拿出来

01:42:59.180 --> 01:43:00.180
去拿出来

01:43:00.180 --> 01:43:01.180
那那

01:43:01.180 --> 01:43:02.180
如果说我这么做的情况下

01:43:02.180 --> 01:43:03.180
咱来看一眼

01:43:03.180 --> 01:43:04.180
首先我想通过

01:43:04.180 --> 01:43:05.180
todder file意识

01:43:05.180 --> 01:43:06.180
去来执行

01:43:06.180 --> 01:43:07.180
请问这可以吗

01:43:07.180 --> 01:43:08.180
不太会 file意识

01:43:08.180 --> 01:43:10.180
这个 file意识

01:43:10.180 --> 01:43:11.180
这个 file意识

01:43:11.180 --> 01:43:13.180
咱来先看一看

01:43:13.180 --> 01:43:14.180
这个 file意识的话

01:43:14.180 --> 01:43:15.180
同学是没有讲过

01:43:15.180 --> 01:43:16.180
对不对

01:43:16.180 --> 01:43:17.180
没有讲过的话

01:43:17.180 --> 01:43:18.180
OK

01:43:18.180 --> 01:43:19.180
没关系

01:43:19.180 --> 01:43:20.180
很好理解

01:43:20.180 --> 01:43:21.180
就是一个数组

01:43:21.180 --> 01:43:22.180
一个 array

01:43:23.180 --> 01:43:24.180
等于一个

01:43:24.180 --> 01:43:26.180
10,20,30,40

01:43:26.180 --> 01:43:27.180
对吧

01:43:27.180 --> 01:43:28.180
一回车

01:43:28.180 --> 01:43:29.180
这个下来数组

01:43:29.180 --> 01:43:30.180
让人讲的这个

01:43:30.180 --> 01:43:31.180
对

01:43:31.180 --> 01:43:32.180
下来数组

01:43:32.180 --> 01:43:33.180
咱们会讲这个东西

01:43:33.180 --> 01:43:35.180
其中就 file意识方法

01:43:35.180 --> 01:43:36.180
那这个

01:43:36.180 --> 01:43:37.180
file意识的方法

01:43:37.180 --> 01:43:38.180
其实是 already

01:43:38.180 --> 01:43:39.180
plot tab 上的那个方法

01:43:39.180 --> 01:43:40.180
这个方法的话

01:43:40.180 --> 01:43:41.180
其实就是拿对象实力

01:43:41.180 --> 01:43:42.180
可以来调用它的

01:43:42.180 --> 01:43:43.180
拿数组实力

01:43:43.180 --> 01:43:44.180
这个

01:43:44.180 --> 01:43:45.180
把它的数组里

01:43:45.180 --> 01:43:46.180
每个东西都便利出来

01:43:46.180 --> 01:43:47.180
简单的时候是这样的

01:43:47.180 --> 01:43:48.180
对

01:43:48.180 --> 01:43:49.180
那这里面

01:43:49.180 --> 01:43:50.180
咱来看一下

01:43:50.180 --> 01:43:51.180
我这里面

01:43:51.180 --> 01:43:52.180
传个函数

01:43:52.180 --> 01:43:53.180
函数里面

01:43:53.180 --> 01:43:54.180
可以传两个形参

01:43:54.180 --> 01:43:55.180
咱们最后来说出

01:43:55.180 --> 01:43:56.180
这个形参

01:43:56.180 --> 01:43:57.180
表现形的这是啥

01:43:57.180 --> 01:43:58.180
一回车

01:43:58.180 --> 01:43:59.180
是所有的这样的一个

01:43:59.180 --> 01:44:00.180
值对吧

01:44:00.180 --> 01:44:01.180
12,30,40

01:44:01.180 --> 01:44:02.180
那这边咱们

01:44:02.180 --> 01:44:03.180
既然没有学过的话

01:44:03.180 --> 01:44:04.180
那我就不用谈

01:44:04.180 --> 01:44:05.180
行吧

01:44:05.180 --> 01:44:06.180
不用谈

01:44:06.180 --> 01:44:07.180
不用谈

01:44:07.180 --> 01:44:08.180
咱们来

01:44:08.180 --> 01:44:09.180
放心玩

01:44:09.180 --> 01:44:10.180
一样的吧

01:44:10.180 --> 01:44:11.180
一样的

01:44:11.180 --> 01:44:12.180
麻烦点

01:44:12.180 --> 01:44:13.180
我为了一个 i

01:44:13.180 --> 01:44:14.180
等一个理论

01:44:14.180 --> 01:44:15.180
就把完了

01:44:15.180 --> 01:44:16.180
i 小于

01:44:16.180 --> 01:44:17.180
all done

01:44:17.180 --> 01:44:18.180
what the less

01:44:18.180 --> 01:44:19.180
一遍

01:44:19.180 --> 01:44:20.180
穿上了呢

01:44:20.180 --> 01:44:21.180
我要查看

01:44:21.180 --> 01:44:23.180
每一个dumb的class name

01:44:23.180 --> 01:44:26.010
class name对吧

01:44:26.010 --> 01:44:27.010
好

01:44:27.010 --> 01:44:29.010
我来去输出一下

01:44:29.010 --> 01:44:32.900
这个键盘的位置

01:44:32.900 --> 01:44:33.900
跟我那个

01:44:33.900 --> 01:44:34.900
平时使用的不太一样了

01:44:34.900 --> 01:44:35.900
总能错

01:44:35.900 --> 01:44:36.900
保存一下

01:44:36.900 --> 01:44:37.900
咱们看一眼

01:44:37.900 --> 01:44:38.900
刷新一次

01:44:38.900 --> 01:44:39.900
键差

01:44:39.900 --> 01:44:40.900
看看搜里面

01:44:40.900 --> 01:44:41.900
刷新

01:44:42.900 --> 01:44:43.900
什么都没出

01:44:43.900 --> 01:44:45.900
它调用demo对吧

01:44:45.900 --> 01:44:47.900
最后好像没有进到

01:44:47.900 --> 01:44:48.900
这个里面来

01:44:48.900 --> 01:44:49.900
没有进到这个里面来

01:44:49.900 --> 01:44:50.900
我保存一次

01:44:50.900 --> 01:44:51.900
咱们再来看

01:44:51.900 --> 01:44:52.900
刷新一下

01:44:53.900 --> 01:44:54.900
还没有报错对不对

01:44:54.900 --> 01:44:55.900
我看这边

01:44:55.900 --> 01:44:56.900
确实写了吗

01:45:00.940 --> 01:45:01.940
确实写了对吧

01:45:01.940 --> 01:45:02.940
我再来看一下

01:45:02.940 --> 01:45:03.940
这个console

01:45:03.940 --> 01:45:04.940
你们的document

01:45:04.940 --> 01:45:05.940
的点

01:45:05.940 --> 01:45:07.940
get element spec class name

01:45:07.940 --> 01:45:08.940
一回车

01:45:08.940 --> 01:45:10.940
这还是本地个代码对吧

01:45:10.940 --> 01:45:11.940
那当然了对吧

01:45:11.940 --> 01:45:12.940
因为它有这个东西

01:45:12.940 --> 01:45:13.940
对不对

01:45:13.940 --> 01:45:15.940
承诺把自己给玩了对吧

01:45:15.940 --> 01:45:16.940
假装它没有对吧

01:45:16.940 --> 01:45:17.940
假装它没有怎么办呢

01:45:17.940 --> 01:45:18.940
我先

01:45:18.940 --> 01:45:20.940
不写它行吗

01:45:20.940 --> 01:45:21.940
不写它

01:45:21.940 --> 01:45:22.940
我只要等于它

01:45:22.940 --> 01:45:23.940
对吧

01:45:23.940 --> 01:45:24.940
直接覆盖一下

01:45:24.940 --> 01:45:25.940
那再来看一下

01:45:25.940 --> 01:45:26.940
刷新一下

01:45:26.940 --> 01:45:28.940
15个indivine

01:45:28.940 --> 01:45:30.940
确实可以覆盖对吧

01:45:30.940 --> 01:45:31.940
可以覆盖以后的话

01:45:31.940 --> 01:45:33.940
那输出了15个indivine的

01:45:33.940 --> 01:45:35.940
那咱们这样吧

01:45:35.940 --> 01:45:36.940
咱们来把这个

01:45:36.940 --> 01:45:38.940
alldom array

01:45:38.940 --> 01:45:40.940
它里面所存的东西

01:45:41.940 --> 01:45:42.940
拿出来

01:45:42.940 --> 01:45:43.940
我这里面是不是写错了

01:45:43.940 --> 01:45:44.940
对吧

01:45:44.940 --> 01:45:45.940
这里面应该是

01:45:46.940 --> 01:45:47.940
中号 i 点它吧

01:45:47.940 --> 01:45:48.940
对吧

01:45:48.940 --> 01:45:49.940
因为咱看一下

01:45:49.940 --> 01:45:50.940
alldom array

01:45:50.940 --> 01:45:51.940
它是个数组对吧

01:45:51.940 --> 01:45:52.940
来的形式的话

01:45:52.940 --> 01:45:53.940
能把里面所存的这个

01:45:53.940 --> 01:45:55.940
DOM值全部获取出来

01:45:55.940 --> 01:45:56.940
那获取完以后的话

01:45:56.940 --> 01:45:57.940
我想看一下

01:45:57.940 --> 01:45:58.940
DOM的class name的话

01:45:58.940 --> 01:45:59.940
那直接点class name就OK了

01:45:59.940 --> 01:46:00.940
那我们再来一次

01:46:00.940 --> 01:46:01.940
来看一下

01:46:01.940 --> 01:46:02.940
刷新一下

01:46:03.940 --> 01:46:05.940
每个标权全出来对吧

01:46:05.940 --> 01:46:06.940
对吗

01:46:06.940 --> 01:46:07.940
对吗

01:46:07.940 --> 01:46:08.940
这样的一个类名

01:46:08.940 --> 01:46:09.940
它也出来了

01:46:09.940 --> 01:46:10.940
那类名是个字幕串

01:46:10.940 --> 01:46:11.940
对不对

01:46:11.940 --> 01:46:12.940
这个类名是个字幕串

01:46:12.940 --> 01:46:13.940
那全出来以后的话

01:46:13.940 --> 01:46:14.940
好了

01:46:14.940 --> 01:46:15.940
那有时候声明

01:46:15.940 --> 01:46:16.940
那有时候

01:46:16.940 --> 01:46:17.940
现在你有能力把

01:46:17.940 --> 01:46:18.940
所有的DOM

01:46:18.940 --> 01:46:19.940
全部都获取

01:46:19.940 --> 01:46:20.940
完了之后

01:46:20.940 --> 01:46:21.940
对吧

01:46:21.940 --> 01:46:22.940
那接下来

01:46:22.940 --> 01:46:23.940
你要做的事情是啥呢

01:46:23.940 --> 01:46:24.940
先想看一下

01:46:24.940 --> 01:46:25.940
你传入的这个类名

01:46:25.940 --> 01:46:28.940
它在这个所有的DOM之中对吧

01:46:28.940 --> 01:46:30.940
有哪一个DOM

01:46:30.940 --> 01:46:32.940
是存在这个类名的

01:46:32.940 --> 01:46:33.940
来做这样的一个比较

01:46:33.940 --> 01:46:34.940
如果有的话

01:46:34.940 --> 01:46:35.940
那那个DOM

01:46:35.940 --> 01:46:37.940
是我要去获取的吧

01:46:37.940 --> 01:46:38.940
对吧

01:46:38.940 --> 01:46:39.940
那有时候在这

01:46:39.940 --> 01:46:40.940
要

01:46:40.940 --> 01:46:41.940
work 叫lastdom

01:46:41.940 --> 01:46:43.940
lastdom array吧

01:46:43.940 --> 01:46:45.940
array

01:46:45.940 --> 01:46:46.940
那之后

01:46:46.940 --> 01:46:47.940
这个里面

01:46:47.940 --> 01:46:48.940
要存的

01:46:48.940 --> 01:46:49.940
我们的

01:46:49.940 --> 01:46:51.940
就是你所有的

01:46:51.940 --> 01:46:53.940
符合条件的

01:46:53.940 --> 01:46:54.940
DOM

01:46:54.940 --> 01:46:56.940
那怎么去往里面存呢

01:46:56.940 --> 01:46:57.940
咱一会说

01:46:57.940 --> 01:46:58.940
现在我们知道了

01:46:58.940 --> 01:46:59.940
在这个里面

01:46:59.940 --> 01:47:00.940
你去把

01:47:00.940 --> 01:47:02.940
你去通过这一种方式

01:47:02.940 --> 01:47:03.940
能把所有的这个标签

01:47:03.940 --> 01:47:04.940
对类名

01:47:04.940 --> 01:47:05.940
全部拿到手对吧

01:47:05.940 --> 01:47:07.940
但拿到手以后的话

01:47:07.940 --> 01:47:08.940
OK

01:47:08.940 --> 01:47:09.940
那我们用的怎么样呢

01:47:09.940 --> 01:47:10.940
对不对

01:47:10.940 --> 01:47:11.940
拿到手以后的话

01:47:11.940 --> 01:47:13.940
我们来看一下

01:47:13.940 --> 01:47:14.940
这个东西

01:47:14.940 --> 01:47:15.940
这东西都拿到手对吧

01:47:15.940 --> 01:47:16.940
拿到手的话

01:47:16.940 --> 01:47:17.940
我们是不是要

01:47:17.940 --> 01:47:18.940
把这个东西

01:47:18.940 --> 01:47:19.940
拿过来

01:47:19.940 --> 01:47:20.940
去跟这玩意去比较一下

01:47:20.940 --> 01:47:21.940
对

01:47:21.940 --> 01:47:22.940
看什么呢

01:47:22.940 --> 01:47:23.940
看一下

01:47:23.940 --> 01:47:24.940
你这里面

01:47:24.940 --> 01:47:25.940
是否怎么样

01:47:25.940 --> 01:47:27.940
是否具有

01:47:27.940 --> 01:47:28.940
这个质吧

01:47:28.940 --> 01:47:29.940
对吧

01:47:29.940 --> 01:47:30.940
那有东西可能会想

01:47:30.940 --> 01:47:31.940
那我直接

01:47:31.940 --> 01:47:33.940
拿这个index O

01:47:33.940 --> 01:47:34.940
一下不就行了

01:47:34.940 --> 01:47:35.940
index O

01:47:35.940 --> 01:47:36.940
如果说

01:47:36.940 --> 01:47:37.940
咱只要

01:47:37.940 --> 01:47:38.940
什么意思意思

01:47:38.940 --> 01:47:39.940
情况下的话

01:47:39.940 --> 01:47:40.940
就是

01:47:40.940 --> 01:47:41.940
看这个紫串

01:47:41.940 --> 01:47:42.940
是否存在这个

01:47:42.940 --> 01:47:43.940
附近串之中对吧

01:47:43.940 --> 01:47:44.940
如果有的情况下的话

01:47:44.940 --> 01:47:45.940
OK

01:47:45.940 --> 01:47:46.940
这个

01:47:46.940 --> 01:47:47.940
它里面所存的道目

01:47:47.940 --> 01:47:48.940
就是符合

01:47:48.940 --> 01:47:49.940
条件那个道目对吧

01:47:49.940 --> 01:47:50.940
对

01:47:50.940 --> 01:47:51.940
但这种情况可以吗

01:47:51.940 --> 01:47:52.940
可以是可以

01:47:52.940 --> 01:47:53.940
但是

01:47:53.940 --> 01:47:54.940
如果说把这里面

01:47:54.940 --> 01:47:55.940
稍微改一改

01:47:55.940 --> 01:47:56.940
比如说我这么写

01:47:56.940 --> 01:47:58.940
我就再来个四半

01:47:58.940 --> 01:47:59.940
好了

01:47:59.940 --> 01:48:01.940
来个class

01:48:01.940 --> 01:48:03.940
我写内名叫demo demo

01:48:03.940 --> 01:48:05.940
那我就不写了

01:48:05.940 --> 01:48:06.940
那当我这么写完以后的话

01:48:06.940 --> 01:48:07.940
是不是就出问题了

01:48:07.940 --> 01:48:08.940
因为啥呢

01:48:08.940 --> 01:48:09.940
因为我只想获取

01:48:09.940 --> 01:48:10.940
内名叫做啥

01:48:10.940 --> 01:48:11.940
叫做demo的

01:48:11.940 --> 01:48:12.940
对吧

01:48:12.940 --> 01:48:13.940
但是呢

01:48:13.940 --> 01:48:14.940
你这儿

01:48:14.940 --> 01:48:15.940
叫做demo demo

01:48:15.940 --> 01:48:16.940
你通过这种字幕串

01:48:16.940 --> 01:48:17.940
对吧

01:48:17.940 --> 01:48:18.940
去index.org

01:48:18.940 --> 01:48:19.940
那个demo的时候

01:48:19.940 --> 01:48:20.940
你会发现

01:48:20.940 --> 01:48:21.940
那个demo紫串

01:48:21.940 --> 01:48:22.940
确实存在这个之中

01:48:22.940 --> 01:48:23.940
但是不好意思

01:48:23.940 --> 01:48:24.940
怎么样

01:48:24.940 --> 01:48:25.940
这个不是我们想要的

01:48:25.940 --> 01:48:26.940
因为它这个demo

01:48:26.940 --> 01:48:28.940
我们想要独立的这个内名

01:48:28.940 --> 01:48:29.940
对吧

01:48:29.940 --> 01:48:30.940
这个内名就俩demo

01:48:30.940 --> 01:48:31.940
对

01:48:31.940 --> 01:48:32.940
说这里面需要一个

01:48:32.940 --> 01:48:33.940
政策的一个配合

01:48:33.940 --> 01:48:35.940
那怎么来做呢

01:48:35.940 --> 01:48:36.940
这么来做

01:48:36.940 --> 01:48:37.940
也很简单

01:48:37.940 --> 01:48:38.940
而且很简单

01:48:38.940 --> 01:48:39.940
首先你都能拿到

01:48:39.940 --> 01:48:40.940
它以后的话

01:48:40.940 --> 01:48:41.940
我要做这样的事情

01:48:41.940 --> 01:48:42.940
我要做这样的事情

01:48:42.940 --> 01:48:43.940
我要把所有的

01:48:43.940 --> 01:48:44.940
都规论规了

01:48:44.940 --> 01:48:45.940
都没有话

01:48:45.940 --> 01:48:46.940
规论规论就是

01:48:46.940 --> 01:48:47.940
数字数字

01:48:47.940 --> 01:48:48.940
整理整理

01:48:48.940 --> 01:48:51.940
一不小心就暴露了

01:48:51.940 --> 01:48:52.940
整理整理

01:48:52.940 --> 01:48:53.940
整理什么呢

01:48:53.940 --> 01:48:54.940
我首先把那些

01:48:54.940 --> 01:48:55.940
没有用的空格

01:48:55.940 --> 01:48:56.940
对的空格

01:48:56.940 --> 01:48:57.940
全部都干掉

01:48:57.940 --> 01:48:59.940
我在这里面写个函数

01:48:59.940 --> 01:49:00.940
这函数比如说

01:49:00.940 --> 01:49:01.940
就叫做一个

01:49:01.940 --> 01:49:04.940
叫做trim

01:49:04.940 --> 01:49:07.940
trim叫做space吧

01:49:07.940 --> 01:49:09.940
space

01:49:09.940 --> 01:49:10.940
好

01:49:10.940 --> 01:49:11.940
那在这它可以接受

01:49:11.940 --> 01:49:12.940
一个参数

01:49:12.940 --> 01:49:15.940
叫做一个strclass

01:49:15.940 --> 01:49:16.940
就这个参数以后的话

01:49:16.940 --> 01:49:17.940
它可以做一件事情

01:49:17.940 --> 01:49:18.940
它要做一件事情

01:49:18.940 --> 01:49:20.940
就是把这个字幕串

01:49:20.940 --> 01:49:21.940
比如说你这个字幕串

01:49:21.940 --> 01:49:22.940
现在是它

01:49:22.940 --> 01:49:23.940
ctrl c一下

01:49:23.940 --> 01:49:24.940
好

01:49:24.940 --> 01:49:25.940
把它去掉

01:49:25.940 --> 01:49:26.940
那这个字幕串是不是

01:49:26.940 --> 01:49:27.940
这有这么多空格

01:49:27.940 --> 01:49:28.940
这有这么多空格

01:49:28.940 --> 01:49:29.940
对吧

01:49:29.940 --> 01:49:30.940
这有空格

01:49:30.940 --> 01:49:31.940
这有空格对不对

01:49:31.940 --> 01:49:32.940
我把所有的空格

01:49:32.940 --> 01:49:33.940
甭管你是多少空格

01:49:33.940 --> 01:49:35.940
甭管你是连续多少空格

01:49:35.940 --> 01:49:38.940
都给我变成一个空格

01:49:38.940 --> 01:49:39.940
都变成一个空格

01:49:39.940 --> 01:49:40.940
那最后变完以后的话

01:49:40.940 --> 01:49:41.940
它是不是就是应该

01:49:41.940 --> 01:49:42.940
这只有一个空格

01:49:42.940 --> 01:49:43.940
这只有一个空格

01:49:43.940 --> 01:49:44.940
这只有一个空格

01:49:44.940 --> 01:49:45.940
这只有一个空格

01:49:45.940 --> 01:49:46.940
对吧

01:49:46.940 --> 01:49:49.940
那首先我应该就能力匹配

01:49:49.940 --> 01:49:50.940
这个连续的空格

01:49:50.940 --> 01:49:51.940
对吧

01:49:51.940 --> 01:49:52.940
那么来个ig

01:49:52.940 --> 01:49:53.940
那等于什么呢

01:49:53.940 --> 01:49:54.940
空格是GunS

01:49:54.940 --> 01:49:56.940
空格是GunS

01:49:56.940 --> 01:49:59.940
那匹配连续多空格的话

01:49:59.940 --> 01:50:00.940
当然连个空格

01:50:00.940 --> 01:50:01.940
你一定不要对不对

01:50:01.940 --> 01:50:02.940
我们匹配一到多空格的话

01:50:02.940 --> 01:50:03.940
一个加号

01:50:03.940 --> 01:50:04.940
对吧

01:50:04.940 --> 01:50:06.940
全举的这应该是个g

01:50:06.940 --> 01:50:08.940
那这个政则ok

01:50:08.940 --> 01:50:09.940
喜欢以后的话

01:50:09.940 --> 01:50:10.940
它是能匹配

01:50:10.940 --> 01:50:12.940
一到多个连续的空格

01:50:12.940 --> 01:50:13.940
那我可以这么做了

01:50:13.940 --> 01:50:14.940
我来str class

01:50:14.940 --> 01:50:15.940
str class

01:50:15.940 --> 01:50:17.940
我点replace一下

01:50:17.940 --> 01:50:18.940
替换

01:50:18.940 --> 01:50:19.940
替换啥呢

01:50:19.940 --> 01:50:20.940
把ig

01:50:21.940 --> 01:50:22.940
替换

01:50:22.940 --> 01:50:23.940
它匹配到的内容

01:50:23.940 --> 01:50:24.940
对吧

01:50:24.940 --> 01:50:25.940
它能看我这是拳举

01:50:25.940 --> 01:50:26.940
对吧

01:50:26.940 --> 01:50:27.940
它一定能匹配啥呢

01:50:27.940 --> 01:50:28.940
一定能匹配到

01:50:28.940 --> 01:50:29.940
这个

01:50:29.940 --> 01:50:31.940
这个连续的

01:50:31.940 --> 01:50:32.940
一到多空格

01:50:32.940 --> 01:50:33.940
那匹配完以后的话

01:50:33.940 --> 01:50:34.940
我全部用啥来换呢

01:50:34.940 --> 01:50:36.940
全部用一个空格去换

01:50:36.940 --> 01:50:37.940
对吧

01:50:37.940 --> 01:50:38.940
换以后的话

01:50:38.940 --> 01:50:40.940
ins最后会返回一个

01:50:40.940 --> 01:50:41.940
替换完的一个做串

01:50:41.940 --> 01:50:42.940
对不对

01:50:42.940 --> 01:50:44.940
我就握一个newstr class

01:50:45.940 --> 01:50:46.940
那我最后呢

01:50:46.940 --> 01:50:47.940
在这

01:50:47.940 --> 01:50:48.940
return一下

01:50:48.940 --> 01:50:50.940
newstr class

01:50:50.940 --> 01:50:51.940
这边对吧

01:50:51.940 --> 01:50:52.940
那这么写

01:50:52.940 --> 01:50:53.940
如果说你觉得

01:50:53.940 --> 01:50:54.940
比较长点的话

01:50:54.940 --> 01:50:55.940
你可以把它

01:50:55.940 --> 01:50:56.940
减化一下

01:50:56.940 --> 01:50:58.940
可以把它就稍微减化一下

01:50:58.940 --> 01:51:00.940
直接对吧

01:51:00.940 --> 01:51:01.940
return

01:51:01.940 --> 01:51:02.940
这也是可以的

01:51:02.940 --> 01:51:03.940
但是呢

01:51:03.940 --> 01:51:04.940
怕同学看不懂

01:51:04.940 --> 01:51:05.940
咱就这么来写吧

01:51:05.940 --> 01:51:06.940
保存

01:51:06.940 --> 01:51:07.940
那

01:51:07.940 --> 01:51:08.940
要说我每次拿到

01:51:08.940 --> 01:51:10.940
标签的class name以后的话

01:51:10.940 --> 01:51:11.940
我都干了这样的点事

01:51:11.940 --> 01:51:12.940
什么事呢

01:51:12.940 --> 01:51:14.940
我都通过这个trim

01:51:14.940 --> 01:51:16.940
space

01:51:16.940 --> 01:51:17.940
往里面

01:51:17.940 --> 01:51:18.940
闯上餐对吧

01:51:18.940 --> 01:51:19.940
支援一下

01:51:19.940 --> 01:51:20.940
往里面去闯那个餐对吧

01:51:20.940 --> 01:51:21.940
把这个字幕串

01:51:21.940 --> 01:51:22.940
放到里面对吧

01:51:22.940 --> 01:51:23.940
它一处理

01:51:23.940 --> 01:51:24.940
处理完以后的话

01:51:24.940 --> 01:51:25.940
OK

01:51:25.940 --> 01:51:27.940
我来一个叫做叫

01:51:27.940 --> 01:51:29.940
叫做一个last最终的

01:51:29.940 --> 01:51:32.940
一个str class

01:51:32.940 --> 01:51:33.940
咱来看一下

01:51:33.940 --> 01:51:34.940
这一回啊

01:51:34.940 --> 01:51:35.940
他们都是什么

01:51:35.940 --> 01:51:36.940
出一下

01:51:36.940 --> 01:51:38.940
我们只会指数出last

01:51:38.940 --> 01:51:39.940
str class

01:51:39.940 --> 01:51:41.940
我保存一次

01:51:41.940 --> 01:51:42.940
来

01:51:42.940 --> 01:51:43.940
再刷新一下

01:51:43.940 --> 01:51:44.940
看一眼

01:51:44.940 --> 01:51:45.940
OK

01:51:45.940 --> 01:51:46.940
现在是不是

01:51:46.940 --> 01:51:47.940
要归准很多了

01:51:47.940 --> 01:51:48.940
对吧

01:51:48.940 --> 01:51:49.940
都剃掉了

01:51:49.940 --> 01:51:50.940
该剃的全都剃掉了

01:51:50.940 --> 01:51:51.940
但是剃完以后

01:51:51.940 --> 01:51:52.940
你会发现一点

01:51:52.940 --> 01:51:53.940
我们只是把这个

01:51:53.940 --> 01:51:54.940
多个空格

01:51:54.940 --> 01:51:55.940
变成了一个空格

01:51:55.940 --> 01:51:57.940
那很有可能就变成这样了

01:51:57.940 --> 01:51:59.940
比如说把它拿过来

01:52:01.940 --> 01:52:03.940
把它整个全拿过来

01:52:03.940 --> 01:52:04.940
整个全拿过来

01:52:05.940 --> 01:52:06.940
它就很有可能

01:52:06.940 --> 01:52:08.940
都变成这样了

01:52:08.940 --> 01:52:10.940
它变成一个空格

01:52:10.940 --> 01:52:12.940
它变成一个空格

01:52:12.940 --> 01:52:14.940
它变成一个空格

01:52:15.940 --> 01:52:17.940
它也变成一个空格

01:52:17.940 --> 01:52:18.940
本来就一个空格

01:52:18.940 --> 01:52:19.940
一个空格

01:52:19.940 --> 01:52:21.940
这种球下还不能

01:52:21.940 --> 01:52:23.940
满足我的要求

01:52:23.940 --> 01:52:24.940
我希望它最开始

01:52:24.940 --> 01:52:25.940
和最末尾的空格

01:52:25.940 --> 01:52:26.940
也全没有

01:52:26.940 --> 01:52:27.940
这样的话

01:52:27.940 --> 01:52:28.940
才是我们

01:52:28.940 --> 01:52:29.940
正常写类名的

01:52:29.940 --> 01:52:31.940
一种方式对吧

01:52:31.940 --> 01:52:33.940
我们也更好地去操作它

01:52:33.940 --> 01:52:35.940
最后我再使用一个

01:52:35.940 --> 01:52:36.940
做串的方法

01:52:36.940 --> 01:52:37.940
做串的方法叫做

01:52:37.940 --> 01:52:38.940
trim方法

01:52:38.940 --> 01:52:39.940
trim方法

01:52:39.940 --> 01:52:40.940
直接去手尾空格

01:52:40.940 --> 01:52:41.940
风招好的

01:52:41.940 --> 01:52:42.940
对

01:52:42.940 --> 01:52:43.940
直接是一个风招好的

01:52:43.940 --> 01:52:44.940
去手尾空格的方法

01:52:44.940 --> 01:52:45.940
在这的话

01:52:45.940 --> 01:52:46.940
看你返回

01:52:46.940 --> 01:52:47.940
这个做串以后

01:52:47.940 --> 01:52:48.940
我要怎么样

01:52:48.940 --> 01:52:49.940
我要来个trim

01:52:49.940 --> 01:52:51.940
当然你也可以自己写

01:52:51.940 --> 01:52:52.940
自己写没问题

01:52:52.940 --> 01:52:53.940
如果你觉得自己本身

01:52:55.940 --> 01:52:56.940
稍微高超点

01:52:56.940 --> 01:52:57.940
也可以自己编辑

01:52:57.940 --> 01:52:58.940
没问题

01:52:58.940 --> 01:52:59.940
正直来是动的

01:52:59.940 --> 01:53:00.940
都一样

01:53:00.940 --> 01:53:01.940
咱们看一下吧

01:53:01.940 --> 01:53:02.940
刷新词

01:53:02.940 --> 01:53:03.940
这一回的话

01:53:03.940 --> 01:53:04.940
都是很规征的

01:53:04.940 --> 01:53:05.940
没有对的空格

01:53:05.940 --> 01:53:06.940
那接下来好了

01:53:06.940 --> 01:53:08.940
接下来咱要知道一点

01:53:08.940 --> 01:53:10.940
我在当前这个循环的时候

01:53:10.940 --> 01:53:13.940
这个是对应当前循环的

01:53:13.940 --> 01:53:15.940
这个当母对象

01:53:15.940 --> 01:53:17.940
这是他对应的类名

01:53:17.940 --> 01:53:18.940
那好了

01:53:18.940 --> 01:53:19.940
我想来看

01:53:19.940 --> 01:53:20.940
这个当母对象

01:53:20.940 --> 01:53:22.940
能不能留在这个数字中

01:53:22.940 --> 01:53:23.940
是不是要看一下

01:53:23.940 --> 01:53:24.940
他这个类名里面

01:53:24.940 --> 01:53:25.940
有没有他

01:53:25.940 --> 01:53:26.940
对吧

01:53:26.940 --> 01:53:28.940
说这块我还要这么做

01:53:28.940 --> 01:53:29.940
我再来个循环

01:53:31.940 --> 01:53:32.940
再来个循环

01:53:32.940 --> 01:53:34.940
循环干什么事呢

01:53:34.940 --> 01:53:35.940
我握一个j

01:53:35.940 --> 01:53:36.940
j等于一个0

01:53:36.940 --> 01:53:38.940
j小语

01:53:38.940 --> 01:53:39.940
小语下

01:53:39.940 --> 01:53:41.940
小语循环多少次呢

01:53:41.940 --> 01:53:42.940
因为我要知道

01:53:42.940 --> 01:53:44.940
我这个整个字幕刷里面

01:53:44.940 --> 01:53:45.940
它具备多少个类名

01:53:45.940 --> 01:53:46.940
我才能知道

01:53:46.940 --> 01:53:47.940
我要循环多少次

01:53:47.940 --> 01:53:48.940
因为我要拿

01:53:48.940 --> 01:53:50.940
这个里面的不同的类名

01:53:50.940 --> 01:53:52.940
一个一个跟你传来之来比较

01:53:52.940 --> 01:53:54.940
如果一旦能成

01:53:54.940 --> 01:53:55.940
一旦一旦是相等

01:53:55.940 --> 01:53:58.940
这个是我们要的这个当母对象

01:53:58.940 --> 01:53:59.940
那在这一块

01:53:59.940 --> 01:54:00.940
好了

01:54:00.940 --> 01:54:01.940
我怎么知道他里面

01:54:01.940 --> 01:54:02.940
有多少个类名的

01:54:02.940 --> 01:54:03.940
由于我前面

01:54:03.940 --> 01:54:04.940
已经都规整完了

01:54:04.940 --> 01:54:05.940
对不对

01:54:05.940 --> 01:54:06.940
类名和类名之间

01:54:06.940 --> 01:54:07.940
只是由空格来怎么样

01:54:07.940 --> 01:54:08.940
来区分的对吧

01:54:08.940 --> 01:54:10.940
那现在我可以这么来做了

01:54:10.940 --> 01:54:13.940
我为了叫做一个class array

01:54:13.940 --> 01:54:16.940
等于last str class

01:54:16.940 --> 01:54:17.940
desplit

01:54:17.940 --> 01:54:18.940
拆分一下

01:54:18.940 --> 01:54:20.940
以空格的方式来拆分

01:54:20.940 --> 01:54:21.940
拆分

01:54:21.940 --> 01:54:23.940
为了让大家更清楚一些

01:54:23.940 --> 01:54:25.940
我在执行这个循环之前

01:54:25.940 --> 01:54:26.940
我还是在这里

01:54:26.940 --> 01:54:28.940
来输出一下class array

01:54:28.940 --> 01:54:29.940
再保存一下

01:54:29.940 --> 01:54:31.940
把它注释一下

01:54:31.940 --> 01:54:32.940
再保存

01:54:32.940 --> 01:54:33.940
咱看class array

01:54:33.940 --> 01:54:34.940
第165行

01:54:34.940 --> 01:54:35.940
刷新一下

01:54:35.940 --> 01:54:37.940
165对吧

01:54:37.940 --> 01:54:39.940
有他的有他的有他有他

01:54:39.940 --> 01:54:40.940
有他对吧

01:54:40.940 --> 01:54:41.940
这么多

01:54:41.940 --> 01:54:42.940
你会发现的

01:54:42.940 --> 01:54:43.940
每个类名都变成了

01:54:43.940 --> 01:54:44.940
数字中的一个元素

01:54:44.940 --> 01:54:45.940
对吧

01:54:45.940 --> 01:54:46.940
在当前那行人手

01:54:46.940 --> 01:54:48.940
在当前那次的循环之中

01:54:48.940 --> 01:54:49.940
那比如说

01:54:49.940 --> 01:54:50.940
咱们在这次的循环之中的话

01:54:50.940 --> 01:54:52.940
这个类名里面有3个对吧

01:54:52.940 --> 01:54:53.940
我要看一下

01:54:53.940 --> 01:54:54.940
这个类名中的3个

01:54:54.940 --> 01:54:55.940
有没有

01:54:55.940 --> 01:54:56.940
有一个是跟他一样的

01:54:56.940 --> 01:54:57.940
如果有的话

01:54:57.940 --> 01:54:59.940
就留到这个之中

01:54:59.940 --> 01:55:00.940
那在这边

01:55:00.940 --> 01:55:01.940
我需要一个循环

01:55:01.940 --> 01:55:02.940
这个循环

01:55:02.940 --> 01:55:03.940
循环多少次

01:55:03.940 --> 01:55:05.940
是不是完全取决于class array

01:55:05.940 --> 01:55:06.940
里面有多少个值

01:55:06.940 --> 01:55:07.940
对吧

01:55:07.940 --> 01:55:08.940
当前这个道目类名

01:55:08.940 --> 01:55:09.940
到底有多少个

01:55:09.940 --> 01:55:10.940
对不对有多少个

01:55:10.940 --> 01:55:11.940
在这

01:55:11.940 --> 01:55:12.940
我来加一下

01:55:12.940 --> 01:55:13.940
那现在的话

01:55:13.940 --> 01:55:14.940
我们来看一下

01:55:14.940 --> 01:55:16.940
如果我再输出一下

01:55:16.940 --> 01:55:18.940
这个class array

01:55:18.940 --> 01:55:19.940
中号一个j

01:55:19.940 --> 01:55:21.940
这是一个j

01:55:22.940 --> 01:55:23.940
而不看它

01:55:23.940 --> 01:55:24.940
我注释掉一下

01:55:24.940 --> 01:55:26.940
现在来刷新一次

01:55:26.940 --> 01:55:27.940
好

01:55:27.940 --> 01:55:28.940
这个类名其实是

01:55:28.940 --> 01:55:29.940
一个一个输出来的

01:55:29.940 --> 01:55:30.940
一个一个输出来的

01:55:30.940 --> 01:55:31.940
那OK

01:55:31.940 --> 01:55:32.940
我只需要在这边

01:55:32.940 --> 01:55:33.940
做一个判断

01:55:33.940 --> 01:55:34.940
判断啥呢

01:55:34.940 --> 01:55:37.940
当前如果这个道目

01:55:37.940 --> 01:55:38.940
如果这个道目

01:55:38.940 --> 01:55:39.940
比如说是那个

01:55:39.940 --> 01:55:41.940
具备很多个类名的

01:55:41.940 --> 01:55:42.940
这个批标签

01:55:42.940 --> 01:55:44.940
批标签这么多对吧

01:55:44.940 --> 01:55:45.940
比如说他拿过来

01:55:45.940 --> 01:55:46.940
所以

01:55:46.940 --> 01:55:48.940
为了方便你看一下

01:55:48.940 --> 01:55:49.940
在这儿

01:55:49.940 --> 01:55:50.940
给你拿过来

01:55:50.940 --> 01:55:51.940
比如说是

01:55:51.940 --> 01:55:53.940
这一次的这样的一个道目

01:55:53.940 --> 01:55:54.940
是这个批标签

01:55:54.940 --> 01:55:55.940
好了

01:55:55.940 --> 01:55:56.940
这个类名

01:55:56.940 --> 01:55:58.940
我都规论完以后的话

01:55:58.940 --> 01:55:59.940
最后这个class array

01:55:59.940 --> 01:56:01.940
是不是就变成了一个数组

01:56:01.940 --> 01:56:02.940
里面有啥

01:56:02.940 --> 01:56:03.940
里面有demo

01:56:03.940 --> 01:56:05.940
里面有这个box

01:56:06.940 --> 01:56:08.940
里面有这样的一个active

01:56:11.820 --> 01:56:12.820
ACTVE

01:56:12.820 --> 01:56:13.820
对吧

01:56:13.820 --> 01:56:14.820
那我在这个循环里面

01:56:14.820 --> 01:56:15.820
其实就是在循环它

01:56:15.820 --> 01:56:16.820
对吧

01:56:16.820 --> 01:56:17.820
看一下这里面

01:56:17.820 --> 01:56:18.820
某个里面

01:56:18.820 --> 01:56:19.820
是不是有跟我传闻的相等

01:56:19.820 --> 01:56:20.820
那如果有一个相等的话

01:56:20.820 --> 01:56:21.820
后面都不用它再看了

01:56:21.820 --> 01:56:22.820
对吧

01:56:22.820 --> 01:56:23.820
就说在这里面

01:56:23.820 --> 01:56:24.820
我AV啥呢

01:56:24.820 --> 01:56:25.820
class array

01:56:25.820 --> 01:56:26.820
中号

01:56:26.820 --> 01:56:28.820
看你是否跟demo相等

01:56:28.820 --> 01:56:29.820
不

01:56:29.820 --> 01:56:30.820
看你是否跟你传进来

01:56:30.820 --> 01:56:31.820
这个里面

01:56:31.820 --> 01:56:32.820
相等对吧

01:56:32.820 --> 01:56:34.820
你传来的确确是个demo

01:56:34.820 --> 01:56:36.820
如果相等怎么办呢

01:56:36.820 --> 01:56:37.820
那证明

01:56:37.820 --> 01:56:39.820
你这个东西是我需要的

01:56:39.820 --> 01:56:40.820
那我last DOM array

01:56:40.820 --> 01:56:41.820
我push一下

01:56:41.820 --> 01:56:42.820
push谁呢

01:56:42.820 --> 01:56:43.820
push on DOM array

01:56:43.820 --> 01:56:44.820
中号一个i

01:56:45.820 --> 01:56:46.820
这应该是j

01:56:46.820 --> 01:56:47.820
抱歉

01:56:47.820 --> 01:56:48.820
这是j

01:56:48.820 --> 01:56:49.820
这里面喜欢是j

01:56:49.820 --> 01:56:50.820
那

01:56:50.820 --> 01:56:51.820
如果说当前

01:56:51.820 --> 01:56:53.820
这一次这个类名发现

01:56:53.820 --> 01:56:54.820
确实跟它相等了

01:56:54.820 --> 01:56:56.820
对应了这个dom

01:56:56.820 --> 01:56:57.820
对应了这一次

01:56:57.820 --> 01:56:59.820
这样喜欢用的dom

01:56:59.820 --> 01:57:00.820
应该把它称到

01:57:00.820 --> 01:57:02.820
last DOM array之中

01:57:02.820 --> 01:57:03.820
那当然存完以后的话

01:57:03.820 --> 01:57:04.820
后面就不用看了

01:57:04.820 --> 01:57:05.820
因为类名的话

01:57:05.820 --> 01:57:06.820
我们尽量写的是

01:57:06.820 --> 01:57:07.820
它不重复的

01:57:07.820 --> 01:57:08.820
所以说整个这个循环

01:57:08.820 --> 01:57:10.820
我们可以给它break掉

01:57:10.820 --> 01:57:11.820
break掉

01:57:11.820 --> 01:57:12.820
就没有必要看了

01:57:12.820 --> 01:57:14.820
那当说的喜欢全完事以后的话

01:57:14.820 --> 01:57:15.820
其实

01:57:15.820 --> 01:57:16.820
它最后的目的就是

01:57:16.820 --> 01:57:18.820
把每个

01:57:18.820 --> 01:57:19.820
这个标签的吧

01:57:19.820 --> 01:57:20.820
拿出来

01:57:20.820 --> 01:57:21.820
拿出来看一下

01:57:21.820 --> 01:57:22.820
它的类名中

01:57:22.820 --> 01:57:24.820
有没有跟你传说相等的

01:57:24.820 --> 01:57:25.820
如果有的话

01:57:25.820 --> 01:57:26.820
就把这个dom

01:57:26.820 --> 01:57:28.820
放到这个last DOM array之中

01:57:28.820 --> 01:57:30.820
最后放下完全完事以后的话

01:57:30.820 --> 01:57:31.820
那我们所要找到

01:57:31.820 --> 01:57:32.820
所有匹配的值

01:57:32.820 --> 01:57:34.820
全都OK了

01:57:34.820 --> 01:57:35.820
全搞定了

01:57:35.820 --> 01:57:37.820
我再返回这个last DOM array

01:57:37.820 --> 01:57:38.820
保存一下

01:57:38.820 --> 01:57:39.820
现在的话

01:57:39.820 --> 01:57:41.820
你完全就可以输出一下

01:57:41.820 --> 01:57:42.820
OK

01:57:42.820 --> 01:57:43.820
来任性的来玩玩

01:57:43.820 --> 01:57:44.820
对吧

01:57:44.820 --> 01:57:45.820
保存一次

01:57:45.820 --> 01:57:46.820
刷新

01:57:46.820 --> 01:57:47.820
来看

01:57:48.820 --> 01:57:49.820
所有叫demo的

01:57:49.820 --> 01:57:50.820
全出来了

01:57:50.820 --> 01:57:51.820
对吧

01:57:51.820 --> 01:57:52.820
demo的没有出来

01:57:52.820 --> 01:57:53.820
demo的没有出来

01:57:53.820 --> 01:57:54.820
那我再来玩一下

01:57:54.820 --> 01:57:58.820
我document.getElementSpecClassName

01:57:58.820 --> 01:57:59.820
这一门

01:57:59.820 --> 01:58:01.820
我叫所有的boss的

01:58:01.820 --> 01:58:02.820
一回车

01:58:03.820 --> 01:58:04.820
boss的全都出来了

01:58:04.820 --> 01:58:05.820
对吧

01:58:05.820 --> 01:58:06.820
然后

01:58:06.820 --> 01:58:07.820
IQ的话

01:58:07.820 --> 01:58:09.820
指定是ACTVE

01:58:09.820 --> 01:58:10.820
全都出来了

01:58:10.820 --> 01:58:12.820
wrapper的话就是wrapper

01:58:13.820 --> 01:58:14.820
那现在的话

01:58:14.820 --> 01:58:15.820
咱基本上

01:58:15.820 --> 01:58:17.820
已经完成了这样的一个

01:58:17.820 --> 01:58:19.820
getElementSpecClassName

01:58:19.820 --> 01:58:20.820
一个封装

01:58:20.820 --> 01:58:21.820
当然

01:58:21.820 --> 01:58:22.820
这只是在document上

01:58:22.820 --> 01:58:23.820
进行这样的封装

01:58:23.820 --> 01:58:24.820
如果说

01:58:24.820 --> 01:58:26.820
我们在外界

01:58:26.820 --> 01:58:27.820
用了啥呢

01:58:27.820 --> 01:58:28.820
比如说

01:58:30.820 --> 01:58:31.820
给这个div

01:58:31.820 --> 01:58:33.820
给这个div一个id

01:58:33.820 --> 01:58:35.820
它叫ow

01:58:35.820 --> 01:58:36.820
那我在这

01:58:36.820 --> 01:58:41.160
我一个ow

01:58:41.160 --> 01:58:43.160
等于一个document

01:58:43.160 --> 01:58:45.160
getElementSpecClassName

01:58:45.160 --> 01:58:46.160
byd

01:58:46.160 --> 01:58:47.160
byd

01:58:47.160 --> 01:58:49.160
这我写一个ow

01:58:49.160 --> 01:58:50.160
ow

01:58:50.160 --> 01:58:51.160
好

01:58:51.160 --> 01:58:52.160
放到这

01:58:52.160 --> 01:58:53.160
w

01:58:53.160 --> 01:58:54.160
想使用它的话

01:58:54.160 --> 01:58:55.160
现在

01:58:55.160 --> 01:58:56.160
能不能

01:58:56.160 --> 01:58:58.160
依旧很好的完成这个功能

01:58:59.160 --> 01:59:00.160
这个就不一定了

01:59:00.160 --> 01:59:01.160
因为啥呢

01:59:01.160 --> 01:59:02.160
因为ow

01:59:03.160 --> 01:59:04.160
它的话

01:59:04.160 --> 01:59:05.160
原生的这个方法

01:59:05.160 --> 01:59:06.160
是在ow下面

01:59:06.160 --> 01:59:07.160
去找

01:59:07.160 --> 01:59:08.160
所有类名是它的

01:59:08.160 --> 01:59:09.160
对不对

01:59:09.160 --> 01:59:10.160
那如果说

01:59:10.160 --> 01:59:13.160
按照我们这个操作来的话

01:59:14.160 --> 01:59:15.160
不论是这个方法

01:59:15.160 --> 01:59:16.160
还是这个方法

01:59:16.160 --> 01:59:17.160
对吧

01:59:17.160 --> 01:59:18.160
它都会走什么

01:59:18.160 --> 01:59:19.160
都会走这个同一个

01:59:19.160 --> 01:59:20.160
那我在通过

01:59:20.160 --> 01:59:22.160
它来调用它的时候的话

01:59:22.160 --> 01:59:23.160
你看这

01:59:23.160 --> 01:59:24.160
是不是依旧从document下面

01:59:24.160 --> 01:59:25.160
去找所有的资料

01:59:25.160 --> 01:59:26.160
然后匹配到所有的

01:59:27.160 --> 01:59:29.160
具备这个条件的一些

01:59:29.160 --> 01:59:30.160
document对象

01:59:30.160 --> 01:59:31.160
但是呢

01:59:31.160 --> 01:59:32.160
其实

01:59:32.160 --> 01:59:34.160
跟我们原来的本意是相反的

01:59:34.160 --> 01:59:36.160
我们是想让这个ow

01:59:36.160 --> 01:59:37.160
document下面

01:59:37.160 --> 01:59:38.160
换成document

01:59:38.160 --> 01:59:39.160
这边换成啥

01:59:39.160 --> 01:59:40.160
换成一个des

01:59:40.160 --> 01:59:41.160
就可以了对吧

01:59:41.160 --> 01:59:42.160
document

01:59:42.160 --> 01:59:44.160
是说留一个小的作业

01:59:44.160 --> 01:59:45.160
试一试

01:59:45.160 --> 01:59:46.160
很小的作业对不对

01:59:46.160 --> 01:59:48.160
其实还可以留一个作业

01:59:48.160 --> 01:59:50.160
这个我记忆中

01:59:50.160 --> 01:59:52.160
那个byclassname

01:59:52.160 --> 01:59:54.160
好像是可以选两个class

01:59:54.160 --> 01:59:55.160
放到一起的

01:59:56.160 --> 01:59:57.160
这么去写对吧

01:59:57.160 --> 01:59:58.160
对对对

01:59:58.160 --> 01:59:59.160
可以放两个class

01:59:59.160 --> 02:00:00.160
怎么来写的

02:00:00.160 --> 02:00:01.160
这个可以回去自己

02:00:01.160 --> 02:00:02.160
去尝试一下

02:00:02.160 --> 02:00:03.160
这可以回去自己试试

02:00:03.160 --> 02:00:04.160
它

02:00:04.160 --> 02:00:05.160
这个后面

02:00:05.160 --> 02:00:06.160
对

02:00:06.160 --> 02:00:07.160
你写这个空格上

02:00:07.160 --> 02:00:08.160
应该是没问题的对吧

02:00:08.160 --> 02:00:10.160
看在那个元素上

02:00:10.160 --> 02:00:11.160
有没有同时具备

02:00:11.160 --> 02:00:12.160
这两个class的元素

02:00:12.160 --> 02:00:13.160
然后选出来

02:00:13.160 --> 02:00:16.160
就是你怎么去操作

02:00:16.160 --> 02:00:17.160
怎么去操作

02:00:17.160 --> 02:00:18.160
原来你或许

02:00:18.160 --> 02:00:19.160
标签了这些

02:00:19.160 --> 02:00:20.160
打散

02:00:20.160 --> 02:00:21.160
对吧

02:00:21.160 --> 02:00:22.160
对

02:00:22.160 --> 02:00:23.160
你按照这个东西

02:00:23.160 --> 02:00:24.160
你把它打散

02:00:24.160 --> 02:00:25.160
再来去一个一句对应

02:00:25.160 --> 02:00:26.160
能不能匹配三个

02:00:26.160 --> 02:00:27.160
我就不知道了

02:00:27.160 --> 02:00:28.160
反正两个是可以的

02:00:28.160 --> 02:00:29.160
反正三个你想写的

02:00:29.160 --> 02:00:30.160
写的出来

02:00:30.160 --> 02:00:31.160
对你自己写的也能写出来

02:00:31.160 --> 02:00:32.160
但是原生的

02:00:32.160 --> 02:00:33.160
是否规定这样的

02:00:33.160 --> 02:00:34.160
我不太清楚

02:00:34.160 --> 02:00:35.160
咱可以写一个比原生

02:00:35.160 --> 02:00:36.160
更强大的

02:00:36.160 --> 02:00:37.160
对吧

02:00:37.160 --> 02:00:38.160
OK

02:00:38.160 --> 02:00:39.160
那这一块

02:00:39.160 --> 02:00:40.160
作为一个

02:00:40.160 --> 02:00:41.160
前面留的一个小作业

02:00:41.160 --> 02:00:42.160
咱们也算是

02:00:42.160 --> 02:00:43.160
都搞定了

02:00:43.160 --> 02:00:44.160
最后的一点

02:00:44.160 --> 02:00:45.160
咱花一小点时间

02:00:45.160 --> 02:00:46.160
把这个

02:00:46.160 --> 02:00:47.160
断点调试对吧

02:00:47.160 --> 02:00:48.160
简单来讲讲

02:00:48.160 --> 02:00:49.160
这也是比较浓重的一块

02:00:49.160 --> 02:00:50.160
对

02:00:50.160 --> 02:00:51.160
断点调试

02:00:51.160 --> 02:00:52.160
那断点调试的话

02:00:52.160 --> 02:00:54.160
其实我们在智商开发中的话

02:00:54.160 --> 02:00:55.160
会经常碰到一些错误

02:00:55.160 --> 02:00:56.160
对吧

02:00:56.160 --> 02:00:57.160
碰到错误的话

02:00:57.160 --> 02:00:58.160
我们前期是玩

02:00:58.160 --> 02:00:59.160
他完全靠猜对吧

02:00:59.160 --> 02:01:00.160
就想哎呀

02:01:00.160 --> 02:01:01.160
我到底是哪儿错了

02:01:01.160 --> 02:01:02.160
逻辑推理

02:01:02.160 --> 02:01:03.160
逻辑推理

02:01:03.160 --> 02:01:04.160
它也是这种最好的方式

02:01:04.160 --> 02:01:05.160
对对对

02:01:05.160 --> 02:01:06.160
等到你这个没逻辑以后的话

02:01:06.160 --> 02:01:07.160
你是不是在靠一些工具

02:01:07.160 --> 02:01:08.160
来辅助辅助你推理

02:01:08.160 --> 02:01:09.160
那在这个

02:01:09.160 --> 02:01:10.160
我们来看一下

02:01:10.160 --> 02:01:12.160
获取一个

02:01:12.160 --> 02:01:13.160
OW

02:01:13.160 --> 02:01:14.160
对吧

02:01:14.160 --> 02:01:17.470
document.gatch

02:01:17.470 --> 02:01:18.470
animus.vnd

02:01:18.470 --> 02:01:21.470
在这的话呢

02:01:21.470 --> 02:01:22.470
写一个

02:01:22.470 --> 02:01:24.470
就是OW

02:01:24.470 --> 02:01:25.470
我做了这样一个操作

02:01:25.470 --> 02:01:30.470
让OW.style.background

02:01:30.470 --> 02:01:32.470
是等于一个红色

02:01:32.470 --> 02:01:33.470
红色

02:01:33.470 --> 02:01:34.470
大家看一下

02:01:34.470 --> 02:01:38.260
包存一次

02:01:38.260 --> 02:01:40.260
由于这个DIV你们

02:01:40.260 --> 02:01:43.260
送内容都没有对吧

02:01:43.260 --> 02:01:44.260
写个1

02:01:44.260 --> 02:01:45.260
写个2

02:01:45.260 --> 02:01:47.260
写个3

02:01:47.260 --> 02:01:48.260
写个4

02:01:48.260 --> 02:01:49.260
写个5

02:01:49.260 --> 02:01:50.260
怎么定

02:01:50.260 --> 02:01:51.260
刷新项咱看一眼

02:01:51.260 --> 02:01:52.260
好

02:01:55.260 --> 02:01:57.630
OK

02:01:57.630 --> 02:01:58.630
包存一下

02:01:58.630 --> 02:02:03.100
好像有点小的问题

02:02:03.100 --> 02:02:04.100
没写OW吧

02:02:04.100 --> 02:02:06.600
我要看一下

02:02:06.600 --> 02:02:08.600
这里面有没有出文字

02:02:08.600 --> 02:02:10.600
连文字都没出吗

02:02:10.600 --> 02:02:13.040
文字都没出

02:02:13.040 --> 02:02:14.040
看一下

02:02:14.040 --> 02:02:16.480
DIV

02:02:16.480 --> 02:02:18.480
我知道那边啥了

02:02:20.480 --> 02:02:21.480
放在这呢

02:02:21.480 --> 02:02:23.480
给的样式了对吧

02:02:23.480 --> 02:02:24.480
所以说

02:02:24.480 --> 02:02:25.480
写东西的时候

02:02:25.480 --> 02:02:27.480
我们或者说自己在做测试的时候

02:02:27.480 --> 02:02:28.480
一定排除到一些

02:02:28.480 --> 02:02:30.480
其他的没有必要的一些

02:02:30.480 --> 02:02:31.480
影响因素

02:02:31.480 --> 02:02:32.480
把它出示一下

02:02:32.480 --> 02:02:34.480
好 再来看一下

02:02:34.480 --> 02:02:35.480
好 现在

02:02:35.480 --> 02:02:36.480
变成这样对吧

02:02:36.480 --> 02:02:38.480
但这是一个成功的代码

02:02:38.480 --> 02:02:39.480
如果它出错了怎么办呢

02:02:39.480 --> 02:02:40.480
我们是不是得调一调

02:02:40.480 --> 02:02:41.480
出错的话

02:02:41.480 --> 02:02:42.480
比如说我这么做

02:02:42.480 --> 02:02:43.480
我OW

02:02:43.480 --> 02:02:44.480
我比误对吧

02:02:44.480 --> 02:02:45.480
我写错了

02:02:45.480 --> 02:02:46.480
结果我发现的话

02:02:46.480 --> 02:02:48.480
A居然不好使

02:02:48.480 --> 02:02:49.480
不好使

02:02:49.480 --> 02:02:50.480
包容怎么办呢

02:02:50.480 --> 02:02:51.480
当然以前代码小的时候

02:02:51.480 --> 02:02:53.480
你可以一个对

02:02:53.480 --> 02:02:54.480
可以一个裁

02:02:54.480 --> 02:02:55.480
代码多的时候

02:02:55.480 --> 02:02:56.480
你是不是按照这个逻辑

02:02:56.480 --> 02:02:57.480
去还原的

02:02:57.480 --> 02:02:58.480
对吧

02:02:58.480 --> 02:02:59.480
那咱看一下

02:02:59.480 --> 02:03:01.480
首先当这个没有

02:03:01.480 --> 02:03:03.480
当这个页面效果

02:03:03.480 --> 02:03:05.480
没有达到我们想要的时候的话

02:03:05.480 --> 02:03:06.480
我们做的DN事情

02:03:06.480 --> 02:03:07.480
应该是把控制台打开

02:03:07.480 --> 02:03:09.480
来看一下console里面

02:03:09.480 --> 02:03:10.480
报道这个凑信息对吧

02:03:10.480 --> 02:03:11.480
这是凑信息

02:03:11.480 --> 02:03:12.480
类型凑对吧

02:03:12.480 --> 02:03:15.480
这是凑一个具体的信息

02:03:15.480 --> 02:03:16.480
当然这是一个

02:03:16.480 --> 02:03:17.480
爆凑的行数

02:03:17.480 --> 02:03:18.480
186行

02:03:18.480 --> 02:03:19.480
那也就说明

02:03:19.480 --> 02:03:20.480
这行错了

02:03:20.480 --> 02:03:21.480
一看就能看出来

02:03:21.480 --> 02:03:22.480
对 这行

02:03:22.480 --> 02:03:23.480
但是我说你看不出来的话

02:03:23.480 --> 02:03:24.480
假设你不认识

02:03:24.480 --> 02:03:25.480
对

02:03:25.480 --> 02:03:26.480
假设你不认识

02:03:26.480 --> 02:03:27.480
错了

02:03:27.480 --> 02:03:28.480
那怎么办呢

02:03:28.480 --> 02:03:29.480
这块的话

02:03:29.480 --> 02:03:31.480
我们可以采用两种方式

02:03:31.480 --> 02:03:33.480
一 手动打断点

02:03:33.480 --> 02:03:35.480
叫debug

02:03:35.480 --> 02:03:36.480
debug

02:03:36.480 --> 02:03:39.480
那咱保存下来看一眼

02:03:39.480 --> 02:03:40.480
断点什么意思

02:03:40.480 --> 02:03:42.480
就是程序在运行的时候

02:03:42.480 --> 02:03:43.480
一行一行运行

02:03:43.480 --> 02:03:44.480
但运行到断点的时候

02:03:44.480 --> 02:03:45.480
它会停止

02:03:45.480 --> 02:03:46.480
停止以后的话

02:03:46.480 --> 02:03:47.480
你可以在控制台

02:03:47.480 --> 02:03:48.480
方便你去

02:03:48.480 --> 02:03:49.480
一步一步去查看

02:03:49.480 --> 02:03:51.480
程序在运行的过程中

02:03:51.480 --> 02:03:52.480
每个边上

02:03:52.480 --> 02:03:53.480
它具体什么样一个值

02:03:53.480 --> 02:03:54.480
就是每一步是否

02:03:54.480 --> 02:03:55.480
按照你的预期区域执行

02:03:55.480 --> 02:03:57.480
到底在哪一步出现了问题

02:03:57.480 --> 02:03:58.480
对

02:03:58.480 --> 02:03:59.480
那咱来看一下

02:03:59.480 --> 02:04:00.480
刷新一次

02:04:00.480 --> 02:04:01.480
页面卡住对吧

02:04:01.480 --> 02:04:02.480
正好就卡到这了

02:04:02.480 --> 02:04:04.480
其实这个时候就相当于

02:04:04.480 --> 02:04:06.480
你在这打一个断点

02:04:06.480 --> 02:04:07.480
程序运行到这了

02:04:07.480 --> 02:04:08.480
相当于

02:04:08.480 --> 02:04:09.480
那接下来的话

02:04:09.480 --> 02:04:10.480
你会发现

02:04:10.480 --> 02:04:11.480
这有

02:04:11.480 --> 02:04:12.480
这个东西和这个东西

02:04:12.480 --> 02:04:13.480
它什么意思呢

02:04:13.480 --> 02:04:14.480
你点它一次的话

02:04:14.480 --> 02:04:16.480
就是如果你页面

02:04:16.480 --> 02:04:18.480
有另外一个断点的话

02:04:18.480 --> 02:04:20.480
它会从当前这个断点

02:04:20.480 --> 02:04:21.480
调到另外一个断点

02:04:21.480 --> 02:04:22.480
咱一会可以试试

02:04:22.480 --> 02:04:23.480
如果你页面中

02:04:23.480 --> 02:04:25.480
没有另外一个断点的话

02:04:25.480 --> 02:04:26.480
你点它的话

02:04:26.480 --> 02:04:27.480
可能直接就 over whore了

02:04:27.480 --> 02:04:28.480
对吧

02:04:28.480 --> 02:04:29.480
那我们可以不点它

02:04:29.480 --> 02:04:30.480
我们点它

02:04:30.480 --> 02:04:31.480
它什么意思呢

02:04:31.480 --> 02:04:33.480
它是 step over nice

02:04:33.480 --> 02:04:34.480
什么意思

02:04:34.480 --> 02:04:35.480
按照正常的执行顺序

02:04:35.480 --> 02:04:36.480
一步一步来执行对吧

02:04:36.480 --> 02:04:38.480
我们再来看一下执行

02:04:38.480 --> 02:04:39.480
执行完以后咱来看这

02:04:39.480 --> 02:04:40.480
现在一步一停

02:04:40.480 --> 02:04:41.480
一步一停是吧

02:04:41.480 --> 02:04:42.480
对 一步一停

02:04:42.480 --> 02:04:43.480
一步一停

02:04:43.480 --> 02:04:44.480
咱看这

02:04:45.480 --> 02:04:46.480
什么

02:04:46.480 --> 02:04:48.480
OW109

02:04:48.480 --> 02:04:49.480
你看

02:04:49.480 --> 02:04:50.480
这个东西

02:04:50.480 --> 02:04:51.480
刚好不能读对不对

02:04:51.480 --> 02:04:52.480
这个东西

02:04:52.480 --> 02:04:53.480
刚好不能读这个属性

02:04:53.480 --> 02:04:54.480
对吧

02:04:54.480 --> 02:04:55.480
好 这东西啥

02:04:55.480 --> 02:04:56.480
刚好是个難

02:04:56.480 --> 02:04:57.480
刚好是难

02:04:57.480 --> 02:04:58.480
咱们理想中

02:04:58.480 --> 02:04:59.480
它不是难

02:04:59.480 --> 02:05:00.480
它应该是那个down对下

02:05:00.480 --> 02:05:02.480
那就证明这里出了问题

02:05:02.480 --> 02:05:03.480
对吧

02:05:03.480 --> 02:05:05.480
那这里出了问题以后的话

02:05:05.480 --> 02:05:06.480
我们一般都会怎么办呢

02:05:06.480 --> 02:05:07.480
会沿着我们这个逻辑

02:05:07.480 --> 02:05:08.480
去往上照

02:05:08.480 --> 02:05:09.480
对吧

02:05:09.480 --> 02:05:10.480
那这个逻辑的上一层

02:05:10.480 --> 02:05:11.480
不就是这吗

02:05:11.480 --> 02:05:12.480
对吧

02:05:12.480 --> 02:05:13.480
它为什么是难呢

02:05:13.480 --> 02:05:14.480
那可能就是由于

02:05:14.480 --> 02:05:15.480
哎呀 你这里面

02:05:15.480 --> 02:05:16.480
你写错了

02:05:16.480 --> 02:05:17.480
你写错了

02:05:17.480 --> 02:05:18.480
好 变成一个d

02:05:18.480 --> 02:05:19.480
变成一个w

02:05:19.480 --> 02:05:21.480
这个问题就解决了

02:05:21.480 --> 02:05:24.300
刷新对吧

02:05:24.300 --> 02:05:25.300
它ok了

02:05:25.300 --> 02:05:27.300
但这是一种最基本的一个

02:05:27.300 --> 02:05:28.300
断点调试

02:05:28.300 --> 02:05:30.300
如果这个再稍微复杂一点点

02:05:30.300 --> 02:05:31.300
复杂一点点

02:05:31.300 --> 02:05:34.300
我们拿这个东西来举例子

02:05:34.300 --> 02:05:35.300
举例子

02:05:35.300 --> 02:05:36.300
比如说

02:05:36.300 --> 02:05:37.300
UL

02:05:37.300 --> 02:05:38.300
UL

02:05:38.300 --> 02:05:40.300
然后这给了个ind

02:05:40.300 --> 02:05:41.300
这个ind呢

02:05:41.300 --> 02:05:44.300
就要做一个rapper

02:05:44.300 --> 02:05:45.300
好

02:05:45.300 --> 02:05:47.300
那最后咱们再来这呢

02:05:47.300 --> 02:05:48.300
再来去试试

02:05:48.300 --> 02:05:49.300
我用一个

02:05:49.300 --> 02:05:50.300
UL

02:05:50.300 --> 02:05:52.300
等于一个document点

02:05:52.300 --> 02:05:54.300
gatch elements by id

02:05:54.300 --> 02:05:56.300
在这我来个rapper

02:05:56.300 --> 02:05:57.300
来个rapper

02:05:57.300 --> 02:05:59.300
那我这里写一个复讯环

02:05:59.300 --> 02:06:00.300
对吧 复讯环

02:06:00.300 --> 02:06:02.300
我用一个i等于一个0

02:06:02.300 --> 02:06:05.300
我要在这个ol里面放上10个li

02:06:05.300 --> 02:06:06.300
放上10个li

02:06:06.300 --> 02:06:07.300
好

02:06:07.300 --> 02:06:08.300
那这样吧

02:06:08.300 --> 02:06:09.300
这样

02:06:09.300 --> 02:06:11.300
我先在它里面

02:06:11.300 --> 02:06:12.300
先放10个li

02:06:12.300 --> 02:06:13.300
li

02:06:13.300 --> 02:06:15.300
li乘以10

02:06:15.300 --> 02:06:16.300
好了

02:06:16.300 --> 02:06:17.300
加上这个东西

02:06:17.300 --> 02:06:18.300
这东西什么意思呢

02:06:18.300 --> 02:06:20.300
就是一个快捷键的一种写法

02:06:20.300 --> 02:06:21.300
那写10个li

02:06:21.300 --> 02:06:24.300
并且10个li里面的内容是生讯

02:06:24.300 --> 02:06:26.300
从1到10这样一个文本

02:06:26.300 --> 02:06:28.300
太过一下以后就不变成这个样子了

02:06:28.300 --> 02:06:30.300
那我要做一件事是什么呢

02:06:30.300 --> 02:06:33.300
就把所有的这样的一个

02:06:33.300 --> 02:06:35.300
所有的li全部都获取

02:06:35.300 --> 02:06:36.300
获取完以后

02:06:36.300 --> 02:06:38.300
给他们去加上一些样式

02:06:38.300 --> 02:06:41.300
等于document

02:06:41.300 --> 02:06:43.300
这样不加样式吧

02:06:43.300 --> 02:06:45.300
来给他们修改他们原有的内容

02:06:45.300 --> 02:06:46.300
好

02:06:46.300 --> 02:06:47.300
这写个li

02:06:47.300 --> 02:06:48.300
li

02:06:48.300 --> 02:06:50.300
它先暂且不用

02:06:50.300 --> 02:06:51.300
那我问一个i

02:06:51.300 --> 02:06:54.300
i小于一个olre

02:06:54.300 --> 02:06:55.300
document

02:06:55.300 --> 02:06:56.300
document

02:06:56.300 --> 02:06:57.300
我i加加

02:06:57.300 --> 02:06:58.300
我做的事我再来说一遍

02:06:58.300 --> 02:07:00.300
我要把所有的li里面的文本

02:07:00.300 --> 02:07:03.300
比如说在的用户基础上全加上一个e

02:07:03.300 --> 02:07:04.300
那这时候我是不应该这么做

02:07:04.300 --> 02:07:06.300
ol

02:07:06.300 --> 02:07:08.300
比如说

02:07:08.300 --> 02:07:10.300
冲锋号

02:07:10.300 --> 02:07:11.300
i

02:07:11.300 --> 02:07:15.130
inner test

02:07:15.130 --> 02:07:17.130
等于什么olre

02:07:17.130 --> 02:07:18.130
i

02:07:18.130 --> 02:07:19.130
olre

02:07:19.130 --> 02:07:20.130
中号

02:07:20.130 --> 02:07:21.130
i

02:07:21.130 --> 02:07:23.130
inner test

02:07:23.130 --> 02:07:24.130
inner test

02:07:24.130 --> 02:07:26.130
把它press

02:07:26.130 --> 02:07:29.570
pr

02:07:30.570 --> 02:07:31.570
inner下

02:07:31.570 --> 02:07:32.570
press inner下

02:07:32.570 --> 02:07:34.570
把它转成一个真正的数字

02:07:34.570 --> 02:07:35.570
再加上一个e

02:07:35.570 --> 02:07:36.570
再复回去

02:07:36.570 --> 02:07:37.570
那咱来看一下

02:07:37.570 --> 02:07:38.570
究竟可不可以

02:07:38.570 --> 02:07:39.570
刷新字

02:07:39.570 --> 02:07:40.570
这确实每一步都加一了

02:07:40.570 --> 02:07:42.570
这是一个正确的写法

02:07:42.570 --> 02:07:44.570
那如果说你在某一步你写错了

02:07:44.570 --> 02:07:46.570
比如说这个地方你干脆

02:07:46.570 --> 02:07:47.570
就没有写上

02:07:48.570 --> 02:07:50.570
这个olre

02:07:50.570 --> 02:07:51.570
有reader less

02:07:51.570 --> 02:07:52.570
而自己写

02:07:52.570 --> 02:07:53.570
比如说你写了12

02:07:53.570 --> 02:07:54.570
你写了12

02:07:54.570 --> 02:07:56.570
或者说在这个地方

02:07:56.570 --> 02:07:58.570
干脆你就没这么写

02:07:58.570 --> 02:08:00.570
直接这么来了

02:08:00.570 --> 02:08:02.570
那指定都会报一些错误

02:08:02.570 --> 02:08:03.570
那可能有

02:08:03.570 --> 02:08:04.570
它由于你的一些手物

02:08:04.570 --> 02:08:06.570
或由于你思维上的一些混乱

02:08:06.570 --> 02:08:07.570
造成了错误

02:08:07.570 --> 02:08:08.570
那有错误以后的话

02:08:08.570 --> 02:08:10.570
那咱们是不是要去调这个错误

02:08:10.570 --> 02:08:12.570
刷新字来看一下

02:08:12.570 --> 02:08:13.570
这里面会报错吗

02:08:13.570 --> 02:08:14.570
你会发现会报

02:08:14.570 --> 02:08:15.570
会报错

02:08:15.570 --> 02:08:17.570
那这个错误的信息

02:08:17.570 --> 02:08:18.570
是啥呢

02:08:18.570 --> 02:08:19.570
在200号

02:08:19.570 --> 02:08:20.570
叫做类型错误

02:08:20.570 --> 02:08:22.570
不能读按理范的inner test

02:08:22.570 --> 02:08:23.570
这什么意思

02:08:23.570 --> 02:08:25.570
200号就是这

02:08:25.570 --> 02:08:26.570
就是它就是这

02:08:26.570 --> 02:08:28.570
那刚我不能读

02:08:28.570 --> 02:08:30.570
按理范的inner test

02:08:30.570 --> 02:08:32.570
那试证明

02:08:32.570 --> 02:08:33.570
我前面这一块

02:08:33.570 --> 02:08:34.570
它出问题了吗

02:08:34.570 --> 02:08:36.570
还说这好像出问题了吗

02:08:36.570 --> 02:08:37.570
那好了

02:08:37.570 --> 02:08:38.570
那接下来

02:08:38.570 --> 02:08:39.570
我们通过断点调试的方法

02:08:39.570 --> 02:08:41.570
来去看一看

02:08:41.570 --> 02:08:42.570
那

02:08:42.570 --> 02:08:43.570
我们可以这么做

02:08:43.570 --> 02:08:45.570
首先检查一下

02:08:45.570 --> 02:08:47.570
在sauce字

02:08:47.570 --> 02:08:49.570
而这里面会显示了

02:08:49.570 --> 02:08:51.570
我们整个的网页

02:08:51.570 --> 02:08:52.570
搜索资源

02:08:52.570 --> 02:08:53.570
搜索资源

02:08:53.570 --> 02:08:54.570
有文件

02:08:54.570 --> 02:08:55.570
和文件

02:08:55.570 --> 02:08:56.570
我点了它以后的话

02:08:56.570 --> 02:08:57.570
你发现了

02:08:57.570 --> 02:08:58.570
在这一块

02:08:58.570 --> 02:09:00.570
这一块

02:09:00.570 --> 02:09:02.570
在这块区域

02:09:02.570 --> 02:09:05.570
出现了我H&M那些资源

02:09:05.570 --> 02:09:06.570
发现字

02:09:06.570 --> 02:09:07.570
它就是红了

02:09:07.570 --> 02:09:08.570
它报了一个错误

02:09:08.570 --> 02:09:09.570
那怎么办

02:09:09.570 --> 02:09:10.570
我可以在这手动

02:09:10.570 --> 02:09:11.570
就不用得罢了

02:09:11.570 --> 02:09:12.570
单词

02:09:12.570 --> 02:09:13.570
单词了

02:09:13.570 --> 02:09:14.570
不用那语法了

02:09:14.570 --> 02:09:15.570
在这打一个断点

02:09:15.570 --> 02:09:16.570
在这我也打一个断点

02:09:16.570 --> 02:09:17.570
那咱们看一下

02:09:17.570 --> 02:09:19.570
我在刷新的手机发现

02:09:19.570 --> 02:09:21.570
程序先卡在第一个断点上了

02:09:21.570 --> 02:09:22.570
对吧

02:09:22.570 --> 02:09:23.570
在这我看一下

02:09:23.570 --> 02:09:24.570
这根本上

02:09:24.570 --> 02:09:25.570
你看

02:09:25.570 --> 02:09:26.570
这个LRI指的是没有错的

02:09:26.570 --> 02:09:27.570
对吧

02:09:27.570 --> 02:09:28.570
这也没有错

02:09:28.570 --> 02:09:29.570
LRI

02:09:29.570 --> 02:09:30.570
在这一行

02:09:30.570 --> 02:09:32.570
它还是一个按理方的

02:09:32.570 --> 02:09:33.570
对不对

02:09:33.570 --> 02:09:34.570
那没关系

02:09:34.570 --> 02:09:36.570
我们从这跳到下一个断点

02:09:36.570 --> 02:09:37.570
但你可以一步一步走

02:09:37.570 --> 02:09:38.570
我直接跳到下一个断点

02:09:38.570 --> 02:09:39.570
就直接看到在这

02:09:39.570 --> 02:09:41.570
第一次执行是什么样的指

02:09:41.570 --> 02:09:42.570
我跳过去以后的话

02:09:42.570 --> 02:09:43.570
你会发现

02:09:43.570 --> 02:09:44.570
由于这行执行完了

02:09:44.570 --> 02:09:45.570
那LRI

02:09:45.570 --> 02:09:46.570
应该是有指的吧

02:09:46.570 --> 02:09:47.570
对吧

02:09:47.570 --> 02:09:48.570
它有指咱看一下

02:09:48.570 --> 02:09:51.570
里面确实是0到90个指

02:09:51.570 --> 02:09:52.570
也没问题

02:09:52.570 --> 02:09:53.570
那没问题的话

02:09:53.570 --> 02:09:54.570
咱来看这

02:09:54.570 --> 02:09:55.570
咱看这的话

02:09:55.570 --> 02:09:57.570
由于到了这个断点以后的话

02:09:57.570 --> 02:10:00.570
你再这么按一下的话

02:10:00.570 --> 02:10:02.570
由于你看

02:10:02.570 --> 02:10:04.570
为什么还会挺到这呢

02:10:04.570 --> 02:10:05.570
因为这个放行还

02:10:05.570 --> 02:10:07.570
会执行14指

02:10:07.570 --> 02:10:08.570
那我们每次点按

02:10:08.570 --> 02:10:09.570
它的意思是

02:10:09.570 --> 02:10:10.570
从一个断点

02:10:10.570 --> 02:10:13.570
到下一次这样断点的位置上

02:10:13.570 --> 02:10:14.570
那由于我这个循环

02:10:14.570 --> 02:10:16.570
下一次还是会执行到这

02:10:16.570 --> 02:10:18.570
而且这有断点的话

02:10:18.570 --> 02:10:20.570
所以说它会持续的

02:10:20.570 --> 02:10:21.570
在这跳10次

02:10:21.570 --> 02:10:23.570
它会在这跳10次

02:10:23.570 --> 02:10:24.570
那现在我再点

02:10:24.570 --> 02:10:25.570
再点

02:10:25.570 --> 02:10:26.570
你会发现

02:10:26.570 --> 02:10:28.570
它这里面依旧是没问题的

02:10:28.570 --> 02:10:29.570
I是4

02:10:29.570 --> 02:10:30.570
是没问题的

02:10:30.570 --> 02:10:31.570
那我们再来

02:10:31.570 --> 02:10:32.570
再来

02:10:32.570 --> 02:10:33.570
我就不点它了

02:10:33.570 --> 02:10:34.570
我点下一步

02:10:34.570 --> 02:10:35.570
咱来看一下

02:10:35.570 --> 02:10:36.570
在这玩完之后

02:10:36.570 --> 02:10:37.570
这行执行完了

02:10:37.570 --> 02:10:38.570
下一步应该是那

02:10:38.570 --> 02:10:39.570
应该是

02:10:39.570 --> 02:10:41.570
回到判断里面去

02:10:41.570 --> 02:10:42.570
OK

02:10:42.570 --> 02:10:43.570
回到这加加

02:10:43.570 --> 02:10:44.570
加加完了之后

02:10:44.570 --> 02:10:46.570
再回到判断里面去

02:10:46.570 --> 02:10:48.570
4确实小于12

02:10:48.570 --> 02:10:49.570
5确实小于12

02:10:49.570 --> 02:10:50.570
那再来

02:10:50.570 --> 02:10:51.570
回到这

02:10:51.570 --> 02:10:52.570
OK 再来

02:10:52.570 --> 02:10:53.570
再来

02:10:53.570 --> 02:10:54.570
再来

02:10:54.570 --> 02:10:55.570
再来

02:10:55.570 --> 02:10:56.570
再来

02:10:56.570 --> 02:10:57.570
那咱看一下

02:10:57.570 --> 02:10:58.570
现在S几了

02:10:58.570 --> 02:10:59.570
S9

02:10:59.570 --> 02:11:00.570
那再来

02:11:00.570 --> 02:11:01.570
再来

02:11:01.570 --> 02:11:02.570
再来的话

02:11:02.570 --> 02:11:03.570
S几了

02:11:03.570 --> 02:11:04.570
S10

02:11:04.570 --> 02:11:05.570
当我们知道

02:11:05.570 --> 02:11:06.570
ORI号里面

02:11:06.570 --> 02:11:07.570
只有9个字

02:11:07.570 --> 02:11:08.570
这个0到9

02:11:08.570 --> 02:11:09.570
所以它丢点纸

02:11:09.570 --> 02:11:11.570
那你挨多到10了

02:11:11.570 --> 02:11:12.570
这边相当于

02:11:12.570 --> 02:11:13.570
已经是越界了对不对

02:11:13.570 --> 02:11:14.570
再来一下

02:11:14.570 --> 02:11:15.570
看一下

02:11:15.570 --> 02:11:16.570
就抱错了

02:11:16.570 --> 02:11:17.570
这么一个错误

02:11:17.570 --> 02:11:18.570
处在这

02:11:18.570 --> 02:11:19.570
说你这里面

02:11:19.570 --> 02:11:20.570
最多不能超过10

02:11:20.570 --> 02:11:21.570
那这我只能写10

02:11:21.570 --> 02:11:22.570
不能写12

02:11:22.570 --> 02:11:23.570
改完以后的话

02:11:23.570 --> 02:11:25.570
这边就没问题了

02:11:25.570 --> 02:11:26.570
对吧

02:11:26.570 --> 02:11:28.570
无论怎么跳跳跳跳

02:11:28.570 --> 02:11:29.570
一顿跳

02:11:29.570 --> 02:11:30.570
OK

02:11:30.570 --> 02:11:31.570
就行完了

02:11:31.570 --> 02:11:32.570
最后一下

02:11:32.570 --> 02:11:33.570
它就行完了

02:11:33.570 --> 02:11:34.570
那就是断点调这个准

02:11:34.570 --> 02:11:35.570
断点调

02:11:35.570 --> 02:11:36.570
是辅助于

02:11:36.570 --> 02:11:37.570
你在你有这样的一个

02:11:37.570 --> 02:11:38.570
基本的逻辑思维

02:11:38.570 --> 02:11:39.570
基础之上

02:11:39.570 --> 02:11:40.570
来进行这样的一个

02:11:40.570 --> 02:11:42.570
错误的一个调试

02:11:42.570 --> 02:11:43.570
在前端中的话

02:11:43.570 --> 02:11:45.570
也确实还算长远些

02:11:45.570 --> 02:11:47.570
这还算长远些

02:11:47.570 --> 02:11:48.570
但我们有的时候

02:11:48.570 --> 02:11:50.570
不通过得八个来调试

02:11:50.570 --> 02:11:51.570
会通过肯色点烙

02:11:51.570 --> 02:11:53.570
来输出一些纸

02:11:53.570 --> 02:11:54.570
来进来

02:11:54.570 --> 02:11:55.570
拍了一段下

02:11:55.570 --> 02:11:56.570
我在某个逻辑上

02:11:56.570 --> 02:11:57.570
在某个位置上

02:11:57.570 --> 02:11:59.570
是否出现了这样一个错误

02:11:59.570 --> 02:12:00.570
看这

02:12:00.570 --> 02:12:01.570
发现

02:12:01.570 --> 02:12:02.570
这是能输出纸

02:12:02.570 --> 02:12:03.570
确实是10个

02:12:03.570 --> 02:12:04.570
那这没问题

02:12:04.570 --> 02:12:05.570
把这来输出

02:12:05.570 --> 02:12:07.570
输出中号i

02:12:07.570 --> 02:12:10.140
i

02:12:10.140 --> 02:12:11.140
对吧

02:12:11.140 --> 02:12:12.140
好了

02:12:12.140 --> 02:12:13.140
在我错误的逻辑层在上面

02:12:13.140 --> 02:12:14.140
来进行一个输出

02:12:14.140 --> 02:12:15.140
刷新一下

02:12:15.140 --> 02:12:17.140
cancel

02:12:17.140 --> 02:12:18.140
我们不管它

02:12:18.140 --> 02:12:19.140
不管它

02:12:19.140 --> 02:12:20.140
来看看cancel

02:12:20.140 --> 02:12:21.140
因为发现

02:12:21.140 --> 02:12:22.140
一直到9都没问题

02:12:22.140 --> 02:12:23.140
对吧

02:12:23.140 --> 02:12:24.140
但是如果说

02:12:24.140 --> 02:12:25.140
这改成一个12的话

02:12:25.140 --> 02:12:26.140
你会发现1点

02:12:26.140 --> 02:12:28.140
它就会出问题了

02:12:28.140 --> 02:12:31.020
刷新

02:12:31.020 --> 02:12:32.020
取消

02:12:32.020 --> 02:12:33.020
取消断点

02:12:33.020 --> 02:12:34.020
cancel你会发现

02:12:34.020 --> 02:12:35.020
前面0到9都没问题

02:12:35.020 --> 02:12:36.020
但当10的话

02:12:36.020 --> 02:12:37.020
由于你没有了

02:12:37.020 --> 02:12:38.020
就出问题了

02:12:38.020 --> 02:12:39.020
说

02:12:39.020 --> 02:12:40.020
我们有的时候

02:12:40.020 --> 02:12:41.020
也可以靠它来进行

02:12:41.020 --> 02:12:43.020
这样一个错误的一个调试

02:12:43.020 --> 02:12:44.020
OK

02:12:44.020 --> 02:12:45.020
那整个

02:12:46.020 --> 02:12:47.020
jess说不完

02:12:47.020 --> 02:12:48.020
咱就

02:12:48.020 --> 02:12:50.020
告于断落了

02:12:50.020 --> 02:12:51.020
这也可作为

02:12:51.020 --> 02:12:52.020
前面的供应课的一些

02:12:52.020 --> 02:12:53.020
查学不漏

02:12:53.020 --> 02:12:54.020
希望同学呢

02:12:54.020 --> 02:12:55.020
也能花出一些时间

02:12:55.020 --> 02:12:56.020
认真正的把它

02:12:56.020 --> 02:12:57.020
听完

02:12:57.020 --> 02:12:58.020
把它去写一写

02:12:58.020 --> 02:12:59.020
说是这样的说法

02:12:59.020 --> 02:13:00.020
其实下节课还是在说

02:13:00.020 --> 02:13:02.020
还是在收养词

02:13:02.020 --> 02:13:03.020
对吧

02:13:03.020 --> 02:13:04.020
但那个也

02:13:04.020 --> 02:13:05.020
我觉得应该算是一种

02:13:05.020 --> 02:13:06.020
提升

02:13:07.020 --> 02:13:08.020
新的知识点

02:13:08.020 --> 02:13:09.020
OK

02:13:09.020 --> 02:13:10.020
那咱这样吧

02:13:10.020 --> 02:13:11.020
今天就

02:13:11.020 --> 02:13:12.020
先到这

02:13:12.020 --> 02:13:13.020
咱们下回见

02:13:13.020 --> 02:13:14.020
下回见了

