WEBVTT

00:00.000 --> 00:01.160
好 现在我们要做的事情

00:01.160 --> 00:02.480
要写的一个函数叫做一个

00:02.480 --> 00:04.680
combi filter function

00:04.680 --> 00:05.640
它有个功能

00:05.640 --> 00:08.520
就是无论你是穿两个这种过滤功能的函数

00:08.520 --> 00:10.400
还是穿三个 四个未来可能穿五六

00:10.400 --> 00:11.640
或七个 八个 九个 十个 对吧

00:11.640 --> 00:13.560
无论你穿哪些个

00:13.560 --> 00:15.040
无论你穿多少个

00:15.040 --> 00:17.040
你通过它的意志形

00:17.040 --> 00:18.840
它最后会返回一个函数

00:18.840 --> 00:20.680
那这个函数呢

00:20.680 --> 00:23.600
它是具备这些过滤功能函数

00:23.600 --> 00:25.320
这种集合的一个函数

00:25.320 --> 00:27.480
也就是说最后外界

00:27.480 --> 00:30.600
在任何一个事件处理函数中对吧

00:30.600 --> 00:32.360
你去调一下它

00:32.360 --> 00:35.400
你把这样一个状态往里面一传

00:35.400 --> 00:36.920
它怎么样 它香的

00:36.920 --> 00:39.520
就会把所有的这个功能去叠加来

00:39.520 --> 00:40.960
你这样一个过滤

00:40.960 --> 00:43.200
我们要达成这样一个效果

00:43.200 --> 00:44.640
然后写完这个combi filter

00:44.640 --> 00:46.160
方式这样一个功能

00:46.160 --> 00:48.200
那这是我们这个优化的第一个目的

00:48.200 --> 00:51.040
第一个目的

00:51.040 --> 00:55.480
其实很多同学都看了四遍他才懂的

00:55.480 --> 00:56.480
这只能是有录博的

00:56.480 --> 00:57.760
咱们直播一定是有录博的

00:57.760 --> 01:02.300
不要太着急

01:02.300 --> 01:04.100
开脑洞了 要开脑洞了

01:04.100 --> 01:05.900
继续冒 不要停 不要停

01:05.900 --> 01:07.820
你来 你来看一看

01:07.820 --> 01:10.020
那这块会稍微的比较复杂一点

01:10.020 --> 01:11.740
但是对你后续的编程

01:11.740 --> 01:12.980
一定是很有用的

01:12.980 --> 01:15.060
然后它简单的都你们一听就会了

01:15.060 --> 01:16.140
那还叫学习嘛

01:16.140 --> 01:17.340
你朋友就不要学习了

01:17.340 --> 01:21.500
如果说前期一听完你就会的吧

01:21.500 --> 01:24.380
OK 你会觉得这个东西它好入门

01:24.380 --> 01:26.300
但后期如果还是一听

01:26.300 --> 01:27.580
你就会的情况下的话

01:28.500 --> 01:30.340
部分你可以这样

01:30.340 --> 01:33.780
但是不是所有的东西它全要这样的

01:33.780 --> 01:34.980
因为所有东西你都是一听

01:34.980 --> 01:36.020
你觉得会以后的话

01:36.020 --> 01:36.700
那好了

01:36.700 --> 01:38.260
那你觉得还有这样的学习

01:38.260 --> 01:39.420
就可负这个意义吗

01:39.420 --> 01:41.620
我们讲的东西一定是

01:41.620 --> 01:43.500
在一些层面上你是能平等的

01:43.500 --> 01:44.780
再往一些层面上

01:44.780 --> 01:46.380
你是很难去接受的

01:46.380 --> 01:48.100
然后再拿一部分

01:48.100 --> 01:50.260
是你觉得在现阶段

01:50.260 --> 01:52.380
可能有点高不可翻的

01:52.380 --> 01:55.020
那其实我们正常学习的一个状态

01:55.020 --> 01:56.340
所以说也不用急

01:56.340 --> 01:57.180
这个地方我要是见

01:57.180 --> 01:59.340
也不要去多看很多遍

01:59.340 --> 01:59.860
对对你

01:59.860 --> 02:01.420
要是拿东西你又有点挑战

02:01.420 --> 02:02.740
有点挑战嘛 对吧

02:02.740 --> 02:03.900
这课听完以后你会了

02:03.900 --> 02:05.300
你回去什么都不干了

02:05.300 --> 02:06.340
那都没意思

02:06.340 --> 02:06.940
对吧

02:06.940 --> 02:07.620
看这儿了

02:07.620 --> 02:10.100
这个GS后面我现在在这儿来写一下

02:10.100 --> 02:11.220
叫做一个

02:11.220 --> 02:12.420
叫做一个combat

02:12.420 --> 02:13.700
后来叫做一个

02:13.700 --> 02:14.580
我叫这个last吧

02:14.580 --> 02:16.620
叫last filter

02:16.620 --> 02:17.900
叫GS

02:17.900 --> 02:19.620
后来说

02:19.620 --> 02:20.780
我先这样吧

02:20.780 --> 02:21.140
先这样

02:21.140 --> 02:22.980
我先在这儿来创立个围箭甲

02:22.980 --> 02:24.420
叫做一个filter

02:24.420 --> 02:26.660
F-i-l-t-r

02:26.660 --> 02:27.460
文件甲

02:27.460 --> 02:28.820
这文件甲里面

02:28.820 --> 02:30.140
我来写一个叫做一个

02:30.140 --> 02:33.220
叫last filter.gsm文件

02:33.220 --> 02:34.300
我再来干一件事情

02:34.300 --> 02:34.940
写了吗

02:34.940 --> 02:38.740
写com,combat

02:38.740 --> 02:40.380
combat代词合并力上

02:40.380 --> 02:41.940
combat filter

02:41.940 --> 02:43.180
方式

02:43.180 --> 02:45.620
来合并

02:45.620 --> 02:46.380
合并

02:46.380 --> 02:50.660
什么那个filter

02:50.660 --> 02:53.940
re

02:53.940 --> 02:55.100
by

02:55.100 --> 02:58.140
test和filter

02:58.140 --> 02:59.020
re

02:59.020 --> 02:59.860
by

02:59.860 --> 03:00.900
sets

03:00.900 --> 03:01.780
以及

03:01.780 --> 03:03.780
可能未来你会扩展的

03:03.780 --> 03:05.700
很多个不同的方法

03:05.700 --> 03:07.940
我们要进行这样的一个合并

03:07.940 --> 03:08.700
那怎么来合并呢

03:08.700 --> 03:08.900
对吧

03:08.900 --> 03:10.460
首先把这个方法给你写完一下

03:10.460 --> 03:11.580
叫做一个

03:11.580 --> 03:12.380
function

03:12.380 --> 03:12.780
对吧

03:12.780 --> 03:16.540
combat,filter,f-i-l-t-r

03:16.540 --> 03:17.260
那在这儿呢

03:17.260 --> 03:18.020
好了

03:18.020 --> 03:19.660
我希望它执行完以后

03:19.660 --> 03:20.580
会返回一个函数

03:20.580 --> 03:21.380
这个函数呢

03:21.380 --> 03:23.020
你在外界去使用

03:23.020 --> 03:24.020
放心使用就ok了

03:24.020 --> 03:24.540
对吧

03:24.540 --> 03:25.380
那这个函数可能说

03:25.380 --> 03:27.820
它也需要你去接收

03:27.820 --> 03:28.540
一个数据

03:28.540 --> 03:28.940
数据

03:28.940 --> 03:30.860
最后给你返回一个新的数组

03:30.860 --> 03:32.460
那我在执行它以后

03:32.460 --> 03:33.260
我再在这儿

03:33.260 --> 03:34.940
在执行combat,filter,f-i-l-t-r

03:34.940 --> 03:36.060
方式以后的话

03:36.060 --> 03:37.020
我要误会一个叫做

03:37.020 --> 03:39.340
last filter function

03:39.340 --> 03:40.140
也就是说

03:40.140 --> 03:41.820
我combat合并完函数

03:41.820 --> 03:42.940
返回一个新的函数

03:42.940 --> 03:43.900
这个函数要拿

03:43.900 --> 03:45.740
要拿到外面怎么样

03:45.740 --> 03:47.140
去光明正大去使用的

03:47.140 --> 03:47.740
也就是说

03:47.740 --> 03:48.860
我返回完以后的话

03:48.860 --> 03:50.020
我在这一块的话怎么样

03:50.020 --> 03:51.020
我就不要这么

03:51.020 --> 03:52.700
一个一个来去执行你了

03:52.700 --> 03:53.460
对吧

03:53.460 --> 03:55.260
我就不要像以前这种方法

03:55.260 --> 03:55.660
对吧

03:55.660 --> 03:57.300
一个使用完再来一个

03:57.300 --> 03:57.580
对吧

03:57.580 --> 03:59.180
如果说还有四五个的话

03:59.180 --> 03:59.980
就一二三四五

03:59.980 --> 04:00.860
就这么去排列

04:00.860 --> 04:01.660
太恶气了

04:01.660 --> 04:02.540
我要怎么办呢

04:02.540 --> 04:05.300
我要直接可以就这么干了

04:05.300 --> 04:06.340
给我直接

04:06.340 --> 04:08.020
在这儿就可以

04:08.020 --> 04:11.060
我就last filter function

04:11.060 --> 04:13.300
往里面一传传percent rate

04:13.300 --> 04:14.300
就可以搞定

04:14.300 --> 04:15.380
直接使用完以后

04:15.380 --> 04:17.540
把数据访上去就可以了

04:17.540 --> 04:18.660
然后前面

04:18.660 --> 04:19.900
前面它也是一样的

04:19.900 --> 04:20.540
它也是一样的

04:20.540 --> 04:22.060
就是我不要这么

04:22.980 --> 04:23.740
那怎么办呢

04:23.740 --> 04:25.660
直接它就直接

04:27.340 --> 04:28.900
last filter function

04:28.900 --> 04:29.380
对吧

04:29.380 --> 04:30.140
这传传

04:30.140 --> 04:33.060
这是传一个叫做一个percent rate

04:33.060 --> 04:33.780
就可以了

04:33.780 --> 04:34.700
我直接这么来写就可以了

04:34.700 --> 04:35.300
对吧

04:35.300 --> 04:37.140
那这个想法是很好

04:37.140 --> 04:37.500
对吧

04:37.500 --> 04:39.900
那你能写出这么好的一个东西

04:39.900 --> 04:40.860
那一定怎么样

04:40.860 --> 04:42.060
一定是你需要

04:42.060 --> 04:45.860
在某些地方写的一些复杂的功能

04:45.860 --> 04:48.340
才能在外界看的会更简洁一些

04:48.340 --> 04:48.780
对吧

04:48.780 --> 04:49.940
没有没有说那种

04:49.940 --> 04:51.780
直接就有个很简洁的方法

04:52.780 --> 04:53.860
很简洁的方法

04:53.860 --> 04:55.060
它都是通过

04:55.060 --> 04:57.060
你其他下面这样的一些功能

04:57.060 --> 04:58.260
下面一些复杂

04:58.260 --> 05:00.100
最后导出的这个结果

05:00.100 --> 05:02.220
让别人使用的是很简单的

05:02.220 --> 05:04.820
这一块也是我希望你具备的一点功能

05:04.820 --> 05:06.620
我希望你具备这些能力

05:06.620 --> 05:09.780
就是你能写出一些比较好的一个代码

05:09.780 --> 05:10.540
写完以后的话

05:10.540 --> 05:12.020
就供给别人去使用

05:12.020 --> 05:14.140
那这点就是需要你对一些

05:14.140 --> 05:15.700
这个基础的一些知识

05:15.700 --> 05:16.740
这个劳靠性

05:16.740 --> 05:17.820
包括一些思想

05:17.820 --> 05:18.140
对吧

05:18.140 --> 05:20.620
有这样的一个很扎实的一个功力

05:20.620 --> 05:21.180
那没关系

05:21.180 --> 05:22.980
你们才刚刚刚开始

05:22.980 --> 05:23.700
咱慢慢来

05:23.700 --> 05:24.580
咱慢慢来

05:25.860 --> 05:27.340
咱能看看这就是

05:27.340 --> 05:28.940
它写完以后我要合并

05:28.940 --> 05:29.700
合并是的话

05:29.700 --> 05:30.500
我都告诉他也行

05:30.500 --> 05:32.220
怎么来告诉呢

05:32.220 --> 05:33.780
当然你可以这么来传说传一个FILTER

05:33.780 --> 05:35.740
要合并它合并它

05:35.740 --> 05:37.660
但你这么来合并以后的话

05:37.660 --> 05:38.300
OK

05:38.300 --> 05:40.140
我在这里面

05:40.140 --> 05:43.140
比如说这里面去去接手的吧

05:43.140 --> 05:44.340
去接手的时候

05:44.340 --> 05:45.820
你这传几个

05:45.820 --> 05:46.740
其实其实怎么

05:46.740 --> 05:48.700
其实对于它来讲的话

05:48.700 --> 05:49.620
应该是它不定的

05:49.620 --> 05:50.740
因为我这门传了呀

05:50.740 --> 05:51.700
可能别人传三个

05:51.700 --> 05:52.820
传四个传五个合并

05:52.820 --> 05:53.900
它都不一定的吧

05:53.900 --> 05:57.180
就说你要是这么

05:57.180 --> 05:58.580
在这直接固定形态的话

05:58.580 --> 06:00.380
可能就它不太好

06:00.380 --> 06:01.140
那有一些人说

06:01.140 --> 06:02.220
那我用Iguments吧

06:02.220 --> 06:03.260
用它不用选择

06:03.260 --> 06:05.260
你有几个我就使用几个呗

06:05.260 --> 06:06.180
没问题

06:06.180 --> 06:08.780
但你这门如果说它记录了

06:08.780 --> 06:11.580
记录了所有的这些功能函数

06:11.580 --> 06:14.060
记录所有的一个功能函数的话

06:14.060 --> 06:15.780
那我再拿它去使用的时候

06:15.780 --> 06:17.260
你要知道每个功能函数

06:17.260 --> 06:18.100
在这个时候

06:18.100 --> 06:19.740
不仅是需要你传递什么

06:19.740 --> 06:23.820
不仅是需要你在外界传递这个数据的

06:23.820 --> 06:24.900
它还要怎么样

06:24.900 --> 06:26.980
它还要去

06:26.980 --> 06:29.620
因为你没这种看

06:29.620 --> 06:31.580
你这个Future Ribbed Test吧

06:31.580 --> 06:32.980
你没这种功能函数

06:32.980 --> 06:34.060
都应该堆用什么

06:34.060 --> 06:35.540
堆用一种状态

06:35.540 --> 06:37.300
都应该堆用一种状态 对吧

06:37.300 --> 06:39.300
所以说怎么办

06:39.300 --> 06:42.260
所以说你光这么传以后的话

06:42.260 --> 06:44.940
你在这你即使能拿到这个功能函数

06:44.940 --> 06:45.820
你也不知道

06:45.860 --> 06:48.140
要往里面传递什么样的一个状态

06:48.140 --> 06:49.100
那有些人说

06:49.100 --> 06:50.940
我拿到怎么还都不知道

06:50.940 --> 06:52.620
我就阿根本是比如说我零

06:52.620 --> 06:53.700
我拿到以后我就往里面

06:53.700 --> 06:54.740
比如说就传这个

06:54.740 --> 06:55.820
State of the Test

06:55.820 --> 06:56.980
不就行了吗

06:56.980 --> 06:57.460
对吧

06:57.460 --> 06:58.140
那好了

06:58.140 --> 06:59.780
那这你是知道的

06:59.780 --> 07:00.620
你是知道

07:00.620 --> 07:02.300
你是在骂头自己写的吧

07:02.300 --> 07:03.140
你是知道这个东西

07:03.140 --> 07:04.660
它对你是Test的

07:04.660 --> 07:05.660
但是你给别人用的时候

07:05.660 --> 07:06.820
别人他是不知道的

07:06.820 --> 07:08.420
难道别人得越多你原码

07:08.420 --> 07:10.100
修改你的原码皮后的话

07:10.100 --> 07:11.860
你才能让它继续使用吗

07:11.860 --> 07:14.260
这种方式不够通用化

07:14.260 --> 07:15.060
那怎么来做呢

07:15.060 --> 07:17.100
来看一下

07:17.100 --> 07:20.020
我这边直接用这种比较好的数据解构

07:20.020 --> 07:21.220
来给你去包裹一下

07:21.220 --> 07:22.460
不是 这是传一个对象

07:22.460 --> 07:23.540
它叫一个Test

07:23.540 --> 07:24.540
来往里面写

07:24.540 --> 07:27.260
这边来叫做一个Size

07:27.260 --> 07:28.660
往里面写

07:28.660 --> 07:30.700
那现在我传的这个对象

07:30.700 --> 07:32.020
这个对象怎么样

07:32.020 --> 07:34.820
把这个每个状态

07:34.820 --> 07:37.340
对那个功能函数的这个信息

07:37.340 --> 07:39.900
更全的都传进到里面去了

07:39.900 --> 07:41.060
你信息传到越全

07:41.060 --> 07:43.620
我在里面摄像的空间才会越大

07:43.620 --> 07:46.420
能够在这儿用个Config来接着

07:46.420 --> 07:47.220
来接着

07:47.220 --> 07:48.220
接的话好了

07:48.220 --> 07:50.140
我在这个地方使用Config的话

07:50.140 --> 07:51.060
它啥呀

07:51.060 --> 07:52.580
这是一种B-Ball的形式

07:52.580 --> 07:53.900
你反回这个函数

07:53.900 --> 07:57.500
这个函数是一个函数的内部函数

07:57.500 --> 07:59.500
所以说它就是一种B-Ball的

07:59.500 --> 08:01.780
但是说这个Config它是形成

08:01.780 --> 08:03.660
它在康卖这一次执行的

08:03.660 --> 08:05.220
你看好了 是这一次执行

08:05.220 --> 08:06.980
在康卖这一次执行的时候

08:06.980 --> 08:09.220
所创建的AOG中里面

08:09.220 --> 08:11.260
是有它Config的

08:11.260 --> 08:13.060
能够说康卖你不只执行一次

08:13.060 --> 08:15.180
你下次执行可能传个不一样的函数

08:15.180 --> 08:18.700
那这个康卖创建了另外一个AO

08:18.700 --> 08:19.700
那另外一个AO

08:19.700 --> 08:22.340
我们承认它Config执行它是不一样的值

08:22.340 --> 08:23.820
那这一次执行的时候

08:23.820 --> 08:26.020
所创造的AO里面的Config

08:26.020 --> 08:30.690
我拿过来 我for印一下

08:30.690 --> 08:33.490
我wore一个prob

08:33.490 --> 08:36.410
我来印 印上了印这个Config

08:36.410 --> 08:38.410
印个它Config

08:38.410 --> 08:39.930
那Config的话

08:39.930 --> 08:43.610
是能把你所有的属性都拿出来

08:43.730 --> 08:45.850
要说prob 第一圈是啥

08:45.850 --> 08:48.570
第一圈是自动创Test

08:48.570 --> 08:53.090
第二圈是自动创Ses

08:53.090 --> 08:54.050
懂吧

08:54.050 --> 08:55.570
那相样的Config

08:55.570 --> 08:57.530
So FIG

08:57.530 --> 08:58.650
我prob

08:58.650 --> 09:01.770
第一圈是我中文化prob是啥

09:01.770 --> 09:03.010
按照你这么来传的话

09:03.010 --> 09:09.770
一定是filter array by test

09:09.770 --> 09:11.770
第二圈就Config

09:11.770 --> 09:13.250
prob

09:13.250 --> 09:19.460
就是filter array by test

09:19.460 --> 09:20.140
那好了

09:20.140 --> 09:20.900
有了它以后

09:20.900 --> 09:22.380
你可以看我怎么玩

09:22.380 --> 09:24.500
我在这我wore一个叫做

09:24.500 --> 09:25.860
最后的数字

09:25.860 --> 09:27.740
最后的数字是它

09:27.740 --> 09:29.020
那我可以一开始的时候

09:29.020 --> 09:29.900
转第一圈的时候

09:29.900 --> 09:31.700
我就Config拿出来

09:31.700 --> 09:32.900
把你对应的这个

09:32.900 --> 09:34.900
把你对应的过滤方法拿出来

09:34.900 --> 09:36.020
拿出来之后怎么办

09:36.020 --> 09:36.900
要执行

09:36.900 --> 09:38.060
先来传刑

09:38.060 --> 09:39.260
传了last array

09:39.260 --> 09:40.340
传创

09:40.340 --> 09:42.140
传这个ditch

09:42.140 --> 09:44.420
那我这个last array

09:45.420 --> 09:47.660
所以ditch就是last array

09:47.660 --> 09:49.580
就是你外界传进来啥

09:49.580 --> 09:50.140
你看

09:50.140 --> 09:51.860
你最后再执行它的手

09:51.860 --> 09:53.220
再执行它的手

09:53.220 --> 09:54.300
你传的是啥

09:54.300 --> 09:55.860
你传的是个proc array

09:55.860 --> 09:57.780
传的是个proc array

09:57.780 --> 09:58.620
那也就是说

09:58.620 --> 09:59.780
对于它来讲的话

09:59.780 --> 10:00.780
就喊说一执行里

10:00.780 --> 10:02.140
这个ditch应该是proc array

10:02.140 --> 10:03.500
last array是proc array

10:03.500 --> 10:05.180
是那个元数组

10:05.180 --> 10:06.620
在这我先执行

10:06.620 --> 10:07.660
执行完以后

10:07.660 --> 10:09.980
我要传递对应的这个状态

10:09.980 --> 10:11.460
你第一圈是它

10:11.460 --> 10:13.060
那我对应的这个proc

10:13.260 --> 10:14.700
来进行这样

10:14.700 --> 10:17.060
来进行这样的过滤

10:17.060 --> 10:18.020
叫怎么来过滤

10:18.020 --> 10:20.260
这个地方的传

10:20.260 --> 10:21.260
这是state里面

10:21.260 --> 10:22.140
记录了那个什么

10:22.140 --> 10:23.380
记录了那个指 对吧

10:23.380 --> 10:25.140
但你不能直接

10:25.140 --> 10:26.260
sit there test

10:26.260 --> 10:28.100
因为你不知道这边是啥

10:28.100 --> 10:29.060
当你state里面

10:29.060 --> 10:29.820
你会发现

10:29.820 --> 10:31.100
你记录状态的时候

10:31.100 --> 10:33.420
跟你这里面传的这种

10:33.420 --> 10:35.380
这个状态的承认

10:35.380 --> 10:36.380
它是一模一样的 对吧

10:36.380 --> 10:37.980
这是涉及的巧妙的支出

10:37.980 --> 10:40.180
这里面有抽象的关联性 对吧

10:40.180 --> 10:41.260
那你在传的时候

10:41.260 --> 10:43.700
你已经告诉这个合并函数 对吧

10:43.700 --> 10:45.100
这种状态对应的是什么

10:45.100 --> 10:46.700
是这样的一个功能函数

10:46.700 --> 10:48.820
那我这个state里面这个状态

10:48.820 --> 10:50.940
我通过中号的proc

10:50.940 --> 10:52.260
相应的 对吧

10:52.260 --> 10:53.420
就能得到什么呢

10:53.420 --> 10:54.860
就能得到

10:54.860 --> 10:57.020
好了 我这里面

10:57.020 --> 11:00.460
test所记录的那些过滤文本

11:00.460 --> 11:01.260
那当然呢

11:01.260 --> 11:02.380
如果你是第二圈的时候

11:02.380 --> 11:03.780
这个proc已经不是test

11:03.780 --> 11:04.820
是sets的时候

11:04.820 --> 11:05.740
你也能进入什么

11:05.740 --> 11:08.140
你也能进入这个sets过滤文

11:08.140 --> 11:08.900
那在这的话

11:08.900 --> 11:11.060
看我这么一执行完以后

11:11.140 --> 11:13.700
我让这个last ring等于它

11:13.700 --> 11:14.540
那这个里面看

11:14.540 --> 11:16.980
跟reduce那个圆满的圆里就很像了

11:16.980 --> 11:18.220
像接力一样 对吧

11:18.220 --> 11:19.380
你过滤完了以后

11:19.380 --> 11:20.020
怎么办呢

11:20.020 --> 11:20.940
返回给它

11:20.940 --> 11:22.340
下一圈它再来过滤

11:22.340 --> 11:23.100
再返回它 对吧

11:23.100 --> 11:24.260
像接力一样

11:24.260 --> 11:25.820
最后循环完事了

11:25.820 --> 11:28.660
我返回一个这个叫last ring

11:28.660 --> 11:30.500
那整个这个合并就告一段落

11:30.500 --> 11:31.660
咱来看一下行不行

11:31.660 --> 11:33.300
我来看一下

11:33.300 --> 11:34.980
我也不知道行不行 对不对

11:34.980 --> 11:37.460
刷新一下来看一眼

11:37.460 --> 11:39.660
OK

11:39.660 --> 11:41.780
Mile 搞不好它报过错 对吧

11:41.780 --> 11:44.380
报错 咱看一下这个67行

11:44.380 --> 11:48.460
67行

11:48.460 --> 11:50.540
last filter function

11:50.540 --> 11:52.620
对 它刚好没有被定义

11:52.620 --> 11:53.540
为什么没有被定义呢

11:53.540 --> 11:57.100
因为我这个gs根本就没有被引入进来

11:57.100 --> 11:57.900
那我在这吧

11:57.900 --> 11:58.980
在它的上面

11:58.980 --> 12:00.380
我来引入一下 对吧

12:00.380 --> 12:01.620
不能是在上面

12:01.620 --> 12:03.380
是在下面 对吧

12:03.380 --> 12:08.220
去引入一下

12:08.220 --> 12:10.380
按住src

12:10.380 --> 12:11.500
怎么来引呢

12:11.500 --> 12:13.780
到当前文件下的src

12:14.100 --> 12:15.260
下面的一个filter

12:15.260 --> 12:18.580
下面的一个last filter.gs

12:18.580 --> 12:20.260
我保存一下 来看一下

12:20.260 --> 12:21.740
last filter.gs

12:21.740 --> 12:25.100
现在再刷新一次 来看一眼

12:25.100 --> 12:25.980
OK 对吧

12:25.980 --> 12:27.700
Mile,female

12:27.700 --> 12:28.660
这是没问题 对吧

12:28.660 --> 12:29.980
再来 先说Mile 对吧

12:29.980 --> 12:31.540
我来一个王

12:31.540 --> 12:32.860
再来一个female

12:32.860 --> 12:33.780
女 对吧

12:33.780 --> 12:36.100
好了 现在是不是怎么样

12:36.100 --> 12:38.180
能通过这个函数

12:38.180 --> 12:40.980
达成我们这样一个合并的效果

12:40.980 --> 12:42.020
但是说以后

12:42.020 --> 12:44.700
我不是说你再增加一个判断条件

12:44.700 --> 12:45.980
无非就是在这里面

12:45.980 --> 12:48.620
比如说在这个界面之后有个按钮

12:48.620 --> 12:51.020
选年龄 根据年龄来过滤 对吧

12:51.020 --> 12:52.860
那你就给这个年龄保留个实践

12:52.860 --> 12:55.220
实践一说话以后怎么办呢 对吧

12:55.220 --> 12:58.140
你去执行那个last filter方式就行

12:58.140 --> 12:59.180
但是前提是

12:59.180 --> 12:59.820
你得把什么

12:59.820 --> 13:02.660
你得把这样的一个filter array

13:02.660 --> 13:04.460
by age这东西写完 对吧

13:04.460 --> 13:05.380
写完以后的话

13:05.380 --> 13:07.100
你要在这传的时候

13:07.100 --> 13:10.100
你合并的时候要在这放的age

13:10.100 --> 13:14.940
filter array by age

13:14.940 --> 13:16.060
你要写完它 对吧

13:16.060 --> 13:16.740
你要写完它

13:16.740 --> 13:17.740
要说过滤功能还是

13:17.740 --> 13:20.060
我就往里面一传 才可以

13:20.060 --> 13:20.540
当然

13:20.540 --> 13:22.100
现在你没有加这个功能的话

13:22.100 --> 13:23.220
咱就不用写

13:23.220 --> 13:24.540
那我跟你留个小的思考

13:24.540 --> 13:25.900
你就是回应你自己加这个功能

13:25.900 --> 13:27.340
来看一看

13:27.340 --> 13:28.060
那这一块的话

13:28.060 --> 13:29.580
我可以把这个文件夹

13:29.580 --> 13:31.060
再给你来去变一变

13:31.060 --> 13:32.940
比如说在filter这个里面

13:32.940 --> 13:39.620
我就创建一个就是filter array by test

13:39.620 --> 13:43.380
我要把所有的过滤功能的

13:43.380 --> 13:45.580
这样我就把所有的这个过滤功能

13:45.580 --> 13:48.180
全部都抽成一个GS

13:48.180 --> 13:49.740
全部都抽出一个GS

13:49.740 --> 13:51.140
比如说以后

13:51.140 --> 13:53.340
可能是我们在增添一些新的功能的时候

13:53.340 --> 13:54.460
我们在洗髮上的话

13:54.460 --> 13:55.660
就会发生一些改变

13:55.660 --> 13:57.620
我们都在这里面

13:57.620 --> 13:59.620
去创建一个GS文件

13:59.620 --> 14:00.980
这样的好处上

14:00.980 --> 14:02.900
就是有个地方来统一地

14:02.900 --> 14:04.660
去写一个过滤功能

14:04.660 --> 14:07.980
最后在这个整个体系张写的时候

14:07.980 --> 14:08.820
我会再来说一下

14:08.820 --> 14:10.700
为什么这么写是好好的

14:10.700 --> 14:12.020
咱们现在这么来做

14:12.020 --> 14:14.380
我再给你先抽取出来

14:14.380 --> 14:15.620
把这个东西

14:15.620 --> 14:16.580
filter array by test

14:16.580 --> 14:19.820
给你抽到这个这边去

14:19.820 --> 14:23.100
你就在这儿好好的去带着就可以了

14:23.100 --> 14:25.860
把这个filter array by test

14:25.860 --> 14:28.820
给你抽到这里面来

14:28.820 --> 14:30.180
再和

14:30.180 --> 14:31.140
沾过来

14:31.140 --> 14:33.260
再这一沾

14:33.260 --> 14:35.020
那我在引入的时候的话

14:35.020 --> 14:36.380
我可以这么来黑印了

14:36.380 --> 14:37.660
这么来一

14:38.660 --> 14:40.420
在这儿来引

14:40.420 --> 14:42.740
但是前提是

14:42.740 --> 14:45.340
前面我得去引一下

14:45.340 --> 14:47.300
src.gs

14:47.300 --> 14:48.300
filter

14:48.300 --> 14:49.260
下面那个叫做

14:49.260 --> 14:51.580
filter array by

14:51.580 --> 14:53.940
src.gs

14:53.940 --> 14:55.220
通通道理

14:55.220 --> 14:56.740
再来filter array

14:56.740 --> 14:57.540
带什么

14:57.540 --> 14:59.420
带一个 by a test

14:59.420 --> 15:06.380
就是你这样的话

15:06.380 --> 15:07.620
就是你会把你这个带

15:07.620 --> 15:08.700
再把这个

15:08.700 --> 15:10.940
就是把你整个项目的文件夹

15:10.940 --> 15:12.980
这个文件的结构分得更清晰一些

15:12.980 --> 15:13.580
对吧

15:13.580 --> 15:15.660
那这个只有你这个东西分得更清晰

15:15.660 --> 15:17.980
你看如果说你不分得更清晰一些的话

15:17.980 --> 15:20.220
你要知道我们代码在优化的时候

15:20.220 --> 15:20.940
很大程度

15:20.940 --> 15:24.140
我们是在去降低它的一个复杂度

15:24.140 --> 15:24.740
是

15:24.740 --> 15:26.740
这样我们当看一大坨

15:26.740 --> 15:29.020
在代码的话要去优化它的话

15:29.020 --> 15:30.860
怎么来优化呢

15:30.860 --> 15:33.100
是降低复杂度

15:33.100 --> 15:34.980
那复杂度怎么再降低复杂度呢

15:34.980 --> 15:36.740
就把一个大块工程拆开

15:36.740 --> 15:38.100
拆开很多功能对吧

15:38.100 --> 15:39.380
很多功能拆完以后的话

15:39.380 --> 15:42.060
以后也会发现会增加了偶和度

15:42.060 --> 15:43.340
偶和就是它增加一些

15:43.340 --> 15:45.180
功能功能之间一些关联性

15:45.180 --> 15:48.140
那一般情况下我们也都是通过

15:48.140 --> 15:50.460
降低就利用偶和度

15:50.460 --> 15:52.100
来去降低这样的复杂度

15:52.100 --> 15:53.980
我们再利用一些原则来进一步

15:53.980 --> 15:54.540
来降低

15:54.540 --> 15:56.420
尽可能降低偶和度

15:56.420 --> 15:57.460
那我们不看代码

15:57.460 --> 15:58.540
我们来看这个项目结构

15:58.540 --> 15:59.540
你也是这样的对吧

15:59.540 --> 16:01.380
如果说你所有的功能全显在一块的话

16:01.380 --> 16:03.940
那自然而然这个单独一个文件的复杂度

16:03.940 --> 16:05.380
会变得非常高

16:05.380 --> 16:06.220
那怎么办呢

16:06.220 --> 16:07.380
我们可以去把它进行拆分

16:07.740 --> 16:09.540
拆分得更清晰一些

16:09.540 --> 16:11.420
某个文件家里面具体放什么样的一些

16:11.420 --> 16:13.740
稳健功能剧要显在那儿对吧

16:13.740 --> 16:15.340
就是降低整个项目

16:15.340 --> 16:16.140
从择摸解构上

16:16.140 --> 16:17.100
从这些稳健上

16:17.100 --> 16:19.140
就降低整个项目的复杂度了

16:19.140 --> 16:20.220
但是相应的

16:20.220 --> 16:23.700
你要是用一些偶和度来进行这样的一步

16:23.700 --> 16:25.180
那你在开发也好

16:25.180 --> 16:27.220
维护也好

16:27.220 --> 16:28.100
维护也好

16:28.100 --> 16:29.380
包括扩展也好的话

16:29.380 --> 16:31.380
效率会变得它更高一些

16:31.380 --> 16:32.740
否则你写什么东西

16:32.740 --> 16:33.860
你只要在这儿去写

16:33.860 --> 16:35.060
写多了你就蒙了

16:35.060 --> 16:36.260
你写多了你就蒙了

16:36.260 --> 16:37.300
那相应的来讲的话

16:37.300 --> 16:38.740
也就是它更安全一些

16:38.740 --> 16:39.940
但为什么要这么来引入

16:39.940 --> 16:40.900
就很简单

16:40.900 --> 16:41.580
你要知道一点

16:41.580 --> 16:42.940
在index.js里面

16:42.940 --> 16:44.340
你要用到last filter之大

16:44.340 --> 16:46.100
所以说在index.js的前面

16:46.100 --> 16:48.140
你要引入last filter

16:48.140 --> 16:48.700
对吧

16:48.700 --> 16:49.860
就是依赖关系

16:49.860 --> 16:52.260
你要知道index.js里面要使用它

16:52.260 --> 16:52.700
对不对

16:52.700 --> 16:53.580
所以你要在它

16:53.580 --> 16:55.140
你要先引它

16:55.140 --> 16:56.900
下面这里面才能去使用它

16:56.900 --> 17:01.340
那你在它再去启动的时候的话

17:01.340 --> 17:02.100
它需要用谁啊

17:02.100 --> 17:05.780
它需要用到它俩啊对不对

17:05.780 --> 17:07.700
所以说怎么样

17:07.700 --> 17:09.980
你要在它之前去引入它俩

17:09.980 --> 17:10.220
对吧

17:10.220 --> 17:11.420
这是一个顺利问题

17:11.420 --> 17:13.220
你要看一下这个文件

17:13.220 --> 17:14.660
它在引入的时候怎么样

17:14.660 --> 17:16.740
需要去依赖谁对吧

17:16.740 --> 17:18.100
是说你要把它依赖的东西

17:18.100 --> 17:20.380
放到下面去引入

17:20.380 --> 17:21.420
这是个比较

17:21.420 --> 17:22.140
这是个怎么

17:22.140 --> 17:24.140
这是个比较好想的一个逻辑

17:24.140 --> 17:25.460
就应该这么去来的对吧

17:25.460 --> 17:26.500
你要往下面去引入的话

17:26.500 --> 17:28.340
那指的是不行的

17:28.340 --> 17:29.540
OK

17:29.540 --> 17:32.860
那这一块的话

17:32.860 --> 17:33.860
咱们已经做到什么了

17:33.980 --> 17:36.460
已经做到它这个点了

17:36.460 --> 17:37.340
就是我们现在

17:37.340 --> 17:39.260
把combat标志方式写完了

17:39.260 --> 17:41.260
写完以后你会发现一点

17:41.260 --> 17:42.500
所有的这个函数啊

17:42.500 --> 17:43.340
所有的功能

17:43.340 --> 17:44.940
你只要往里面一放

17:44.940 --> 17:46.540
都给你倒出这样的功能

17:46.540 --> 17:48.340
那这个功能怎么办

17:48.340 --> 17:49.500
它一进行的时候

17:49.500 --> 17:51.300
你只要传一个元素就可以了

17:51.300 --> 17:53.460
它内幕就自己按照这个状态

17:53.460 --> 17:55.220
找到对方的功能函数

17:55.220 --> 17:57.500
来进行依次的一个过滤了

17:57.500 --> 17:59.580
那用它的话相当于它函省件了

17:59.580 --> 18:01.540
那整个这个图的这半部分

18:01.540 --> 18:02.660
你就不用看了

18:02.660 --> 18:03.660
那看其他部分

18:03.660 --> 18:04.940
其他部分

18:04.940 --> 18:06.100
散播市场你看这

18:06.100 --> 18:07.420
只有个vill层面

18:07.420 --> 18:08.020
这个vill什么

18:08.020 --> 18:09.300
就是这个vill你可以理解

18:09.300 --> 18:14.580
它就是你现在所看到的这块区域

18:14.580 --> 18:16.180
你看到这块区域

18:16.180 --> 18:17.380
就是这些东西对吧

18:17.380 --> 18:19.580
你看我画它也它也比较像

18:19.580 --> 18:20.140
vill对吧

18:20.140 --> 18:22.500
vill什么是试图层那本

18:22.500 --> 18:23.660
是试图层了

18:23.660 --> 18:24.780
你看这块区域

18:24.780 --> 18:25.900
这块区域不用设看了

18:25.900 --> 18:27.020
我给它进行这样

18:27.020 --> 18:28.820
这样的一个再精化一点

18:28.820 --> 18:30.540
是什么意思呢

18:30.540 --> 18:33.460
就是它上面可能会接受几个实践

18:33.460 --> 18:34.060
一个输实践

18:34.060 --> 18:35.260
一个点击实践

18:35.380 --> 18:36.700
我有一个对象

18:36.700 --> 18:40.380
来详细地去描述这些这个实践

18:40.380 --> 18:42.100
这个不是实践对象

18:42.100 --> 18:43.300
如果自己来写对象

18:43.300 --> 18:44.700
不是叫做一个action对象

18:44.700 --> 18:45.940
叫行为对象对吧

18:45.940 --> 18:48.620
这个对象来详细描述一下

18:48.620 --> 18:50.700
这个实践是什么类型的对吧

18:50.700 --> 18:51.340
反正之后呢

18:51.340 --> 18:52.780
像那些费加信息

18:52.780 --> 18:53.700
也要进入到里面去

18:53.700 --> 18:56.460
就比如说你输的东西是什么

18:56.460 --> 18:57.500
或者说你点击的时候

18:57.500 --> 18:59.380
你就点击信点它是什么

18:59.380 --> 19:01.380
那有它以后我要怎么做能靠了

19:01.380 --> 19:04.180
现在你会发现

19:04.180 --> 19:06.820
这个整个状态它还是暴露的

19:06.820 --> 19:08.540
它是暴露在全局的

19:08.540 --> 19:11.260
比如说它暴露在全局的话

19:11.260 --> 19:12.340
我们之前讲了什么

19:12.340 --> 19:14.060
我让你回去看那个传染数对吧

19:14.060 --> 19:15.900
你说为什么要用传染数呢对吧

19:15.900 --> 19:17.660
或者说之前成了它在讲的时候

19:17.660 --> 19:19.860
为什么尽量不要用这种全局的一个

19:19.860 --> 19:21.700
它变黑亮的对吧

19:21.700 --> 19:22.580
很大的程度上

19:22.580 --> 19:24.780
可能说因为这个全局乱对吧

19:24.780 --> 19:28.620
还有一点就是这个数据的一个安全问题

19:28.620 --> 19:30.780
如果这个数据暴露在全局以后的话

19:30.780 --> 19:31.660
谁都可以改

19:31.660 --> 19:33.740
或不小心成于它这种感情下的话

19:33.780 --> 19:35.140
没有什么安全可言的吧

19:35.140 --> 19:37.740
而且数据但多多了以后的话

19:37.740 --> 19:40.420
你也补太好进行这样一个统一化的一个管理

19:40.420 --> 19:43.980
所以说这一块我们先引入后面一个知识

19:43.980 --> 19:46.780
就是一个WES也好

19:46.780 --> 19:49.100
Redux也好里面都会有这样的一个

19:49.100 --> 19:51.500
管理对象的一个框架

19:51.500 --> 19:53.620
或者是这样一个它招待库

19:53.620 --> 19:58.540
叫做一个叫WES一个叫Tarret Douglas

19:58.540 --> 20:00.540
WES配合WES它来去使用

20:00.540 --> 20:01.900
Redux来配合这样的Ret

20:01.900 --> 20:03.060
去来去使用

20:03.060 --> 20:05.060
我们利用这样的一个思想

20:05.060 --> 20:05.980
解放的一个思想

20:05.980 --> 20:07.460
我们来做这样一件事情

20:07.460 --> 20:08.460
我要写个东西

20:08.460 --> 20:12.580
咱们来看一下叫做一个

20:12.580 --> 20:14.620
叫做一个Carid Star

20:14.620 --> 20:15.380
叫GS

20:15.380 --> 20:17.460
STORE叫GS

20:17.460 --> 20:19.500
好 我来先来看这个图吧

20:19.500 --> 20:24.460
就是这个在上面一旦发生一些行为

20:24.460 --> 20:26.340
对吧 我要这个东西来描述这个行为

20:26.340 --> 20:26.940
对吧

20:26.940 --> 20:29.140
我这个STAR可以接受这个行为

20:29.140 --> 20:30.140
那个描述

20:30.140 --> 20:31.540
完了接受完以后

20:31.540 --> 20:32.820
用谁来接受呢

20:32.820 --> 20:35.020
用他这个Dispatch来接受

20:35.020 --> 20:35.780
接受完以后的话

20:35.780 --> 20:38.540
他会在内部去分发这个行为

20:38.540 --> 20:41.340
就是有时候他来接受完这个行为以后的话

20:41.340 --> 20:43.420
他会跟着你这个行为的具体描述

20:43.420 --> 20:46.500
和信息来相的去改变这个状态

20:46.500 --> 20:48.220
而且状态也在改变以后的话

20:48.220 --> 20:49.860
OK 你会发现反应点

20:49.860 --> 20:50.900
我觉得STAR用一个功能

20:50.900 --> 20:51.900
叫做Subscriber

20:51.900 --> 20:53.300
叫定位的功能

20:53.300 --> 20:54.300
这定位是什么意思呢

20:54.300 --> 20:55.900
就是我们可以

20:55.900 --> 20:57.500
我们可以通过这个Subscriber

20:57.500 --> 21:00.220
来一开始来注册一个函数

21:00.220 --> 21:01.620
那这个函数就是我们叫做

21:01.620 --> 21:03.100
一个定位的函数

21:03.100 --> 21:05.100
当这个行为在它身上发生以后

21:05.100 --> 21:06.740
我们用它来描述行为

21:06.740 --> 21:08.060
用Dispatch来分发

21:08.060 --> 21:09.940
分发一旦改变完这个状态以后的话

21:09.940 --> 21:10.460
好了

21:10.460 --> 21:13.700
我们就让这个定位的函数来去执行

21:13.700 --> 21:15.620
那最后你会发现一点

21:15.620 --> 21:18.100
如果我们把这个

21:18.100 --> 21:20.260
如果我们把这样那个更新

21:20.260 --> 21:22.820
把这样那个更新的一个操作

21:22.820 --> 21:24.340
集合到一起去写了

21:24.340 --> 21:26.140
比如说载字 再来看一下

21:26.140 --> 21:27.780
index.gs

21:27.780 --> 21:29.100
我们把它

21:29.140 --> 21:30.100
比如说把它

21:30.100 --> 21:31.660
可能是S一下

21:31.660 --> 21:32.540
我写什么 我写什么啥

21:32.540 --> 21:36.660
我写这样就叫做一个update

21:36.660 --> 21:39.180
对 叫做update

21:39.180 --> 21:42.420
好 在这儿呢

21:42.420 --> 21:44.460
update啊 好

21:44.460 --> 21:45.300
update啊

21:45.300 --> 21:46.260
如果在这一起写 对吧

21:46.260 --> 21:48.500
写完以后的话 好

21:48.500 --> 21:50.220
比如说我就这么做

21:50.220 --> 21:51.300
只要这个事件触发

21:51.300 --> 21:52.380
我就经用它 对吧

21:52.380 --> 21:53.220
只要事件触发

21:53.220 --> 21:54.460
我就经用它

21:54.460 --> 21:56.780
我不经用它 我就经用它

21:56.780 --> 21:57.580
那比如说

21:57.580 --> 21:59.220
我把这两个功能都放到这边

21:59.220 --> 22:01.260
它来去执行

22:01.260 --> 22:03.140
那如果说我一个死到

22:03.140 --> 22:04.060
如果说我一个对象

22:04.060 --> 22:05.740
定位了这个函数以后的话

22:05.740 --> 22:06.580
那最后我再来描

22:06.580 --> 22:08.220
是整个情况是什么样子的

22:08.220 --> 22:10.020
一旦行为在它身上发生

22:10.020 --> 22:11.140
发生完以后

22:11.140 --> 22:13.180
OK 行为让它分发

22:13.180 --> 22:15.060
反正它去改变状态

22:15.060 --> 22:16.580
状态一旦变换以后的话

22:16.580 --> 22:17.460
OK 怎么样

22:17.460 --> 22:19.020
就像去调用之前

22:19.020 --> 22:20.980
定位过的那个update的函数

22:20.980 --> 22:22.420
那这个函数相当于是

22:22.420 --> 22:24.580
那个起到一个更新的作用 对吧

22:24.580 --> 22:25.380
它会怎么样

22:25.380 --> 22:26.780
它会在内部

22:26.780 --> 22:28.620
就要用这个last filter

22:28.620 --> 22:30.540
去根据你最新的状态

22:30.540 --> 22:33.860
来去过滤这个数据

22:33.860 --> 22:36.260
把它用软的这个方法来怎么样

22:36.260 --> 22:39.380
来去重新选择这样的一个页面

22:39.380 --> 22:41.700
这就达成这样的一个循环

22:41.700 --> 22:43.020
什么循环呢

22:43.020 --> 22:44.700
事件才是一发生 对吧

22:44.700 --> 22:46.980
有东西来描述这个行为

22:46.980 --> 22:49.140
它来去改变这样的一个状态

22:49.140 --> 22:50.420
状态一变了

22:50.420 --> 22:52.700
相当于去改变这样的一个设图

22:52.700 --> 22:54.820
那整个这样的一个程序

22:54.820 --> 22:57.060
它的建状性就变得非常高了

22:57.060 --> 22:58.860
它这样的可坏性就变得非常高了

22:58.860 --> 23:00.980
而且建状性才变得非常好

23:00.980 --> 23:02.860
咱当来可坏性来说就是

23:02.860 --> 23:04.740
如果想再增加一些新的功能

23:04.740 --> 23:06.660
根据年龄来过滤的话

23:06.660 --> 23:08.460
我只需在这个图这一块的吧

23:08.460 --> 23:11.020
加上一个过滤的功能函数

23:11.020 --> 23:13.700
我在那个filter的文件夹里面

23:13.700 --> 23:16.740
写一个过滤功能的函数

23:16.740 --> 23:17.780
写完以后的话好了

23:17.780 --> 23:19.380
那怎么样

23:19.380 --> 23:21.940
它就直接帮你去合并了 对吧

23:21.940 --> 23:24.060
那如果说

23:24.060 --> 23:27.700
但是这个过滤功能还都写完以后的话

23:27.700 --> 23:29.100
我想这个设图这对吧

23:29.100 --> 23:30.860
我在增加一些比如说道目对吧

23:30.860 --> 23:34.180
往来呢去用一些这个事件来绑定它

23:34.180 --> 23:35.500
完了绑定完之后呢

23:35.500 --> 23:36.780
事件一旦为出发的话

23:36.780 --> 23:37.940
我用一个行为对吧

23:37.940 --> 23:40.500
我不用一个action来描述这样的一个行为

23:40.500 --> 23:42.180
我直接把这个行为配给它以后的话

23:42.180 --> 23:45.660
它就帮我去跑通这个整个程序了

23:45.660 --> 23:46.860
那这一块的话

23:46.860 --> 23:48.780
你会发现未来你在去扩展的时候的话

23:48.780 --> 23:50.460
就变得很方便对吧

23:50.460 --> 23:51.700
那怎么个方便法的话

23:51.700 --> 23:54.340
我们先来写了你才能感知到

23:54.340 --> 23:55.860
那OK咱们再往下来

23:55.860 --> 23:57.980
我看这个人有点少对吧

23:57.980 --> 24:01.340
都都都讲懵了对不对

24:01.340 --> 24:01.860
没关系

24:01.860 --> 24:04.940
咱们先来再往下来看一看来看看

24:04.940 --> 24:06.900
我写这个crystal啊crystal

24:06.900 --> 24:08.140
然后crystal

24:08.140 --> 24:09.940
crystal咱们看一下

24:09.940 --> 24:10.900
我先问个star

24:10.900 --> 24:12.900
它必须是个权力下star

24:12.900 --> 24:15.220
等于一个crystal

24:15.220 --> 24:20.100
CR也提crystal

24:20.100 --> 24:21.060
那这个crystal呢

24:21.060 --> 24:22.340
把里面可以放什么呢

24:22.340 --> 24:24.020
这个crystal把里面可以放

24:24.020 --> 24:25.380
比如说放对象

24:25.380 --> 24:30.080
这个对象是一开始这个状态

24:30.080 --> 24:31.640
一开始就状态

24:31.640 --> 24:32.400
比如说我这么做

24:32.400 --> 24:32.960
我看好了

24:35.680 --> 24:39.630
是

24:39.630 --> 24:40.230
是吧

24:40.230 --> 24:41.150
僵持一下吧

24:41.150 --> 24:42.110
僵持一下

24:42.110 --> 24:42.270
好

24:42.270 --> 24:44.670
比如说我的crystal有个功能

24:44.670 --> 24:46.390
就是它能穿一个对象

24:46.390 --> 24:47.070
那看好了

24:47.070 --> 24:48.590
我怎么来写这个crystal

24:48.590 --> 24:49.790
是个关键

24:49.790 --> 24:52.670
这块CR也提

24:53.630 --> 24:55.630
其实我是

24:55.630 --> 24:57.030
其实我这里面是

24:57.030 --> 24:58.790
但你再写一个框架的圆码

24:58.790 --> 25:00.070
还有一个最基本的圆码

25:00.070 --> 25:01.190
是这块很难的

25:01.190 --> 25:03.470
然后一直之前我倒都没跟你说

25:03.470 --> 25:05.230
你这听听吧听听啊

25:05.230 --> 25:06.270
来看一下

25:06.270 --> 25:08.750
那在这儿啊crystal

25:08.750 --> 25:10.110
crystal不说它可以

25:10.110 --> 25:14.670
我这样要initial

25:14.670 --> 25:17.190
它可以接受你触触化的一个状态

25:17.190 --> 25:17.670
对吧

25:17.670 --> 25:19.310
那你可以穿也可以不穿

25:19.310 --> 25:20.310
那我在这写上一个

25:20.310 --> 25:22.550
叫做一个war state

25:22.550 --> 25:25.270
如果你这儿不穿的话

25:25.270 --> 25:26.350
它没有指对吧

25:26.350 --> 25:26.790
好了

25:26.790 --> 25:27.630
怎么办呢

25:27.630 --> 25:28.870
如果你不穿的话

25:28.870 --> 25:30.390
我就

25:30.390 --> 25:31.950
如果你穿的话我就使用你的

25:31.950 --> 25:32.990
如果你不穿的话呢

25:32.990 --> 25:35.790
我就把空对象去给它

25:35.790 --> 25:38.150
就是如果你穿你有指的话

25:38.150 --> 25:39.030
就把它给它

25:39.030 --> 25:39.590
一不穿呢

25:39.590 --> 25:40.630
我就给它

25:40.630 --> 25:41.110
好了

25:41.110 --> 25:43.510
然后crystal最后让它返回一个对象

25:43.510 --> 25:44.510
你看这个对象

25:44.510 --> 25:46.630
要它要有这个方法

25:46.630 --> 25:49.910
一个方法叫做gast state方法

25:49.910 --> 25:51.350
那这个方法的话呢

25:51.350 --> 25:51.910
好了

25:51.910 --> 25:52.950
它要根据

25:52.950 --> 25:53.950
它有个功能

25:53.950 --> 25:56.550
它要根据你所传过来的这个类型

25:56.550 --> 25:59.910
来相反回对象状态的那个值

25:59.910 --> 26:02.790
就比如说拿到这个stall对象

26:02.790 --> 26:04.190
拿到这个stall对象

26:04.190 --> 26:05.590
我点

26:05.590 --> 26:06.230
拿到这个stall对象

26:06.230 --> 26:06.830
我点什么

26:06.830 --> 26:07.350
点这样的

26:07.350 --> 26:07.750
不点

26:07.750 --> 26:09.750
点这个gast state

26:09.750 --> 26:11.790
往里面去放这样的一个test

26:11.790 --> 26:14.590
它应该去相反回出来啥

26:14.590 --> 26:16.270
相反回出来这个

26:16.270 --> 26:17.430
这里面state里面

26:17.430 --> 26:18.950
对象的test那个状态

26:18.950 --> 26:19.190
对吧

26:19.190 --> 26:20.630
因为它是记录这个状态的嘛

26:20.630 --> 26:21.070
对不对

26:21.670 --> 26:22.870
好

26:22.870 --> 26:23.790
那这怎么怎么做呢

26:23.790 --> 26:24.310
也很简单

26:24.310 --> 26:26.590
直接就返回一个叫stall

26:26.590 --> 26:28.590
中号tab就可以了

26:28.590 --> 26:29.310
通通道理

26:29.310 --> 26:30.510
再来一个叫做什么

26:30.510 --> 26:31.390
叫dispatch

26:31.390 --> 26:32.830
D-A-P-A-T-C-H

26:32.830 --> 26:34.630
dispatch

26:34.630 --> 26:35.350
好

26:35.350 --> 26:36.070
方式

26:36.070 --> 26:37.830
那它要接受一个

26:37.830 --> 26:39.750
它要接受一个action

26:39.750 --> 26:41.870
接受一个对世界的一个描述

26:41.870 --> 26:43.030
ac,tl,n

26:43.030 --> 26:43.870
ac,tl,n

26:43.870 --> 26:44.470
我先讲

26:44.470 --> 26:45.350
我先给你写完

26:45.350 --> 26:45.830
喜欢以后

26:45.830 --> 26:47.950
我再来说是怎么一回事的

26:47.950 --> 26:49.790
这个行为描述在外界

26:49.790 --> 26:50.550
应该怎么来使用的

26:50.550 --> 26:52.230
是这么来使用就stall

26:52.230 --> 26:53.350
dispatch

26:53.350 --> 26:53.790
对吧

26:53.790 --> 26:54.550
比如说

26:54.550 --> 26:56.950
它用来描述一下输的行为行吧

26:56.950 --> 26:57.150
好

26:57.150 --> 26:58.310
我这边放个对象

26:58.310 --> 26:59.350
这个类型

26:59.350 --> 27:01.470
比如叫做什么叫做这个input

27:01.470 --> 27:02.750
输

27:02.750 --> 27:03.590
完成的

27:03.590 --> 27:04.790
这个test

27:04.790 --> 27:05.470
啥呢

27:05.470 --> 27:06.510
这个test

27:06.510 --> 27:07.510
它是先用的

27:07.510 --> 27:08.550
和这个y6值吧

27:10.430 --> 27:11.070
这样吧

27:11.070 --> 27:12.070
比如这个类型

27:12.070 --> 27:13.070
是输的型的话

27:13.070 --> 27:14.350
我让它是test

27:15.350 --> 27:16.430
这个y6值呢

27:16.430 --> 27:18.190
我让它比如说是一个往

27:18.190 --> 27:18.390
好

27:18.390 --> 27:19.070
好了

27:19.070 --> 27:20.510
那在这里面

27:20.950 --> 27:21.830
action

27:21.830 --> 27:22.550
ac,tl

27:22.550 --> 27:24.710
我用它的一个tap

27:24.710 --> 27:25.630
最用的就是

27:25.630 --> 27:27.750
就是那个test

27:27.750 --> 27:28.190
对吧

27:28.190 --> 27:28.350
好

27:28.350 --> 27:30.390
那它的一个action

27:30.390 --> 27:31.150
点

27:31.150 --> 27:31.750
y6

27:31.750 --> 27:33.270
就是这个往

27:33.270 --> 27:34.390
那它有什么用呢

27:34.390 --> 27:36.830
比如说当你dispatch完了以后

27:36.830 --> 27:39.310
它要根据你这个传进来的这个行为

27:39.310 --> 27:39.790
对吧

27:39.790 --> 27:41.790
来去改变它这样的一个状

27:41.790 --> 27:43.110
改变这样的一个状态

27:43.110 --> 27:44.190
怎么来改变呢

27:44.190 --> 27:44.910
也很简单

27:44.910 --> 27:46.310
咱来看一下

27:46.310 --> 27:47.070
因为你这边

27:47.070 --> 27:48.990
信息已经很充足了

27:48.990 --> 27:50.590
其实我通过这个state

27:50.590 --> 27:51.790
它的中号什么的

27:51.790 --> 27:53.630
ac,tl,1

27:53.630 --> 27:55.390
点一个tap

27:55.390 --> 27:56.110
这是啥

27:56.110 --> 27:57.310
这是test的吧

27:57.310 --> 27:58.590
这字路上test的

27:58.590 --> 27:59.670
不如你这么来传的话

27:59.670 --> 28:00.670
它这个是test的

28:00.670 --> 28:01.910
那state中号task

28:01.910 --> 28:03.670
现在有state点task的

28:03.670 --> 28:04.270
我去改变

28:04.270 --> 28:05.790
也是state点task这个状态

28:05.790 --> 28:06.270
对吧

28:06.270 --> 28:06.990
那它状态啥呢

28:06.990 --> 28:09.150
是sn点y6

28:09.150 --> 28:09.990
这样的一个值

28:09.990 --> 28:11.350
那这就相当于怎么样

28:11.350 --> 28:12.630
把这个状态给改变了

28:12.630 --> 28:13.350
我们来看一下

28:13.350 --> 28:15.390
我们来看一下

28:15.390 --> 28:16.430
比如说我在这个

28:18.190 --> 28:18.790
我先不行

28:18.790 --> 28:20.030
我先在这来写一下

28:20.030 --> 28:22.310
这个crystal的一个引入

28:22.310 --> 28:23.110
在这

28:23.110 --> 28:24.990
通过这个sqrt标签

28:24.990 --> 28:28.110
src下面的

28:28.110 --> 28:29.030
这个gs

28:29.030 --> 28:29.590
对吧

28:29.590 --> 28:31.470
下面这样的一个cretestar

28:31.470 --> 28:32.550
cret

28:32.550 --> 28:34.430
s,t,1,g,s

28:34.430 --> 28:36.870
来看一下

28:36.870 --> 28:37.710
crystal

28:37.710 --> 28:37.870
好

28:37.870 --> 28:40.110
通过这

28:40.110 --> 28:40.550
好

28:40.550 --> 28:41.550
来

28:41.550 --> 28:43.350
看一下

28:43.350 --> 28:45.270
19好像报了个错对吧

28:45.270 --> 28:46.390
我这个crystal的

28:46.390 --> 28:48.230
19好像报了个错

28:48.230 --> 28:52.190
crystal的19好像

28:52.190 --> 28:52.750
这对吧

28:52.750 --> 28:54.110
这写错了

28:54.110 --> 28:54.630
没关系

28:54.630 --> 28:55.070
好像

28:55.070 --> 28:55.710
可撞s一下

28:55.710 --> 28:56.950
咱来看一下

28:56.950 --> 28:58.190
首先我刷新一下

28:58.190 --> 28:59.270
现在这个src

28:59.270 --> 29:00.150
它是个对象

29:00.150 --> 29:01.190
这上面有一些方法

29:01.190 --> 29:01.990
概谅词的方法

29:01.990 --> 29:02.510
对吧

29:02.510 --> 29:06.770
通过点get

29:06.770 --> 29:07.570
往里面传类型

29:07.570 --> 29:08.490
不是task的

29:08.490 --> 29:09.770
像这个直就

29:09.770 --> 29:10.570
是空对吧

29:10.570 --> 29:11.610
sas呢

29:11.610 --> 29:12.010
对吧

29:12.010 --> 29:12.890
是a对不对

29:12.890 --> 29:14.210
我想改变一个状态

29:14.210 --> 29:14.730
怎么办呢

29:14.730 --> 29:15.290
对吧

29:15.290 --> 29:16.170
我这么来对吧

29:16.170 --> 29:17.690
src.datespatch

29:17.690 --> 29:18.930
往里面传个行为

29:18.930 --> 29:19.970
告诉你要改变的

29:19.970 --> 29:21.010
这个类型

29:21.010 --> 29:21.730
不是

29:21.730 --> 29:22.690
我这个用这个对象

29:22.690 --> 29:24.130
来描述这个行为的时候

29:24.130 --> 29:25.490
当然也要跟这个对应的

29:25.490 --> 29:27.290
这个状态相关联

29:27.290 --> 29:28.050
那我这个

29:28.050 --> 29:29.810
比如说在描述数这个

29:29.810 --> 29:30.770
实现的时候的话

29:30.770 --> 29:32.930
我用task来描述

29:32.930 --> 29:33.930
那我把这个s

29:33.930 --> 29:35.570
这个东西来往里面传在时候的话

29:35.570 --> 29:36.970
我可以让这个src.datespatch

29:36.970 --> 29:38.450
跟这个task对应的task

29:38.450 --> 29:39.530
来相对去改变

29:39.530 --> 29:41.210
这个src.datespatch的状态

29:41.210 --> 29:42.650
那由于我这个逮换的小了

29:42.650 --> 29:43.530
所以说我一回车以后

29:43.530 --> 29:44.490
你会发现一点

29:44.490 --> 29:46.290
我在get

29:46.290 --> 29:47.250
task的时候呢

29:47.250 --> 29:48.730
这已经变成一个王了

29:48.730 --> 29:48.930
对吧

29:48.930 --> 29:50.050
已经它变成一个王了

29:50.050 --> 29:50.410
那好了

29:50.410 --> 29:51.290
那这有什么好处呢

29:51.290 --> 29:51.890
咱一会说

29:51.890 --> 29:53.610
现在我再给它再加一个功能

29:53.610 --> 29:54.610
叫做一个

29:55.450 --> 29:56.090
stop

29:56.090 --> 29:57.010
sub

29:57.610 --> 30:00.850
subscrib

30:00.850 --> 30:02.890
等于一个func function

30:05.290 --> 30:05.890
那在这的话

30:05.890 --> 30:06.170
好

30:06.170 --> 30:07.450
还要接受一个函数

30:07.450 --> 30:09.170
做一个函数func

30:09.170 --> 30:10.010
func

30:10.570 --> 30:11.690
怎么来接受呢

30:11.690 --> 30:12.290
看好在任务

30:12.290 --> 30:13.130
我有一个list

30:13.130 --> 30:14.170
这根本也是bbar

30:14.170 --> 30:14.610
对吧

30:14.610 --> 30:15.570
这个数组

30:15.570 --> 30:16.250
那我就

30:16.250 --> 30:17.290
只要你订阅的函数

30:17.290 --> 30:18.130
只要你订阅函数

30:18.130 --> 30:19.010
我就直接把你

30:19.010 --> 30:20.970
push一下push

30:20.970 --> 30:22.130
发一个function

30:22.130 --> 30:23.970
那我在这的话

30:23.970 --> 30:25.130
比如说我通过stop

30:25.130 --> 30:25.650
对吧

30:25.650 --> 30:27.050
第二subscrib

30:27.050 --> 30:28.330
比如说我订一个功能

30:28.330 --> 30:29.290
要function

30:29.290 --> 30:30.370
把你们传一个

30:30.370 --> 30:31.170
输出个0

30:31.170 --> 30:32.090
输出个0

30:32.090 --> 30:33.170
那好了

30:33.170 --> 30:34.210
那这有什么用呢

30:34.210 --> 30:35.730
就是当我通过

30:35.730 --> 30:36.530
好

30:36.530 --> 30:37.810
当我通过

30:37.810 --> 30:39.530
stop的dispatch的时候

30:39.530 --> 30:41.210
我怎么分发这个行为的时候

30:41.210 --> 30:42.210
我要让它这个

30:42.210 --> 30:44.010
地位的过得函数执行

30:44.010 --> 30:45.570
那我在这也得写什么呢

30:45.570 --> 30:46.330
也得写一下

30:46.330 --> 30:48.130
就是一旦你分发了完

30:48.130 --> 30:50.010
一旦它执行了

30:50.010 --> 30:51.770
改变完状态以后

30:51.770 --> 30:53.210
我要在这通过什么呢

30:53.210 --> 30:56.850
通过list.for each

30:56.850 --> 30:58.090
拿过来对吧

30:58.090 --> 31:00.690
去把你这个数组中所有的函数

31:00.690 --> 31:02.090
因为你订阅可能不提订阅一个

31:02.090 --> 31:02.690
对吧

31:02.690 --> 31:03.250
发出数组

31:03.250 --> 31:04.170
所有的函数

31:04.170 --> 31:06.570
全部拿过来执行

31:06.570 --> 31:07.330
这么写就可以了

31:07.330 --> 31:07.810
对吧

31:07.810 --> 31:08.850
拿过来去执行一下

31:08.850 --> 31:09.610
那咱们看一下

31:09.610 --> 31:11.290
现在我再上下一次

31:11.290 --> 31:12.810
在这

31:12.810 --> 31:14.770
比如说start

31:14.770 --> 31:15.970
start.gas data

31:15.970 --> 31:17.250
因为你经营一次对吧

31:17.250 --> 31:18.890
比如说我这儿常常太太死了

31:18.890 --> 31:19.650
因为你经营完一次

31:19.650 --> 31:20.810
它dispatch了

31:20.810 --> 31:22.610
就说它是亡

31:22.610 --> 31:23.210
它是亡

31:23.210 --> 31:24.490
那我再dispatch一下

31:24.490 --> 31:25.450
我这儿添一个

31:25.450 --> 31:28.050
我这是一个sense

31:28.050 --> 31:28.850
sense

31:28.850 --> 31:30.490
我这儿添一个m

31:30.490 --> 31:32.050
一会儿你会发现呢

31:32.050 --> 31:33.290
诶 先用的什么

31:33.290 --> 31:34.450
你定位的函数

31:34.450 --> 31:35.610
228好像对吧

31:35.610 --> 31:37.130
一也执行了

31:37.130 --> 31:37.730
一也执行了

31:37.730 --> 31:38.690
对吧 执行了

31:38.690 --> 31:39.770
那这样的话

31:39.770 --> 31:41.450
我们再来看这个start.gas data

31:41.450 --> 31:42.770
如果说你放上一个sense的话

31:42.770 --> 31:44.290
你会发现的是一个m

31:44.290 --> 31:45.850
状态也发生了一个变化

31:45.850 --> 31:47.170
那咱再看一下这个图

31:47.450 --> 31:48.850
它就区别了这个

31:48.850 --> 31:49.610
gas data

31:49.610 --> 31:51.090
dispatch的substituted功能

31:51.090 --> 31:51.770
比如说

31:51.770 --> 31:53.370
一旦事件在它身上发生

31:53.370 --> 31:54.930
用对象描述好这个行为

31:54.930 --> 31:57.370
我撇给这个start.dispatch以后的话

31:57.370 --> 31:59.250
后面一系列改变状态

31:59.250 --> 32:01.530
包括去执行对面功能的功能的话

32:01.530 --> 32:03.370
start这个对象全帮我做

32:03.370 --> 32:03.930
对吧

32:03.930 --> 32:06.690
那它能很好的帮我去管理这个状态

32:06.690 --> 32:09.410
以及状态改变之后的一系列的变化

32:09.410 --> 32:11.490
一系列这样的一个操作

32:11.490 --> 32:12.930
所以说呢

32:12.930 --> 32:14.530
我们在后续

32:14.530 --> 32:16.330
再去添加一些功能的时候的话

32:16.330 --> 32:18.970
我只需把这个标签对我们写上

32:18.970 --> 32:20.170
保定好事件对吧

32:20.170 --> 32:23.970
玩相的用这个一个对象来描述好它对吧

32:23.970 --> 32:24.330
好了

32:24.330 --> 32:25.810
把对那功能写完了

32:25.810 --> 32:26.330
写完以后的话

32:26.330 --> 32:26.770
OK

32:26.770 --> 32:29.930
我们在最外界全是使用的它

32:29.930 --> 32:31.970
一旦行为一旦出发以后的话

32:31.970 --> 32:32.970
用它来描述

32:32.970 --> 32:33.770
撇给它以后

32:33.770 --> 32:36.250
一圈就可以去执行了

32:36.250 --> 32:37.330
那咱们再来看一下

32:37.330 --> 32:39.650
咱们再来看

32:40.650 --> 32:42.050
添加功能不用改

32:42.050 --> 32:42.650
添加功能时候

32:42.650 --> 32:43.410
什么还要改

32:43.410 --> 32:44.010
它死死死

32:44.010 --> 32:44.890
到啊

32:44.890 --> 32:46.210
完全不用改了

32:46.210 --> 32:48.490
完全不用改

32:48.490 --> 32:50.650
就是你说的改

32:50.650 --> 32:52.210
可能说只能说是传递

32:52.210 --> 32:54.330
这个地方传递一下变

32:54.330 --> 32:55.650
区别是完全不用改的

32:55.650 --> 32:57.130
不信等我写完以后

32:57.130 --> 32:59.130
你回去你可以自己去试试啊同学

32:59.130 --> 32:59.850
那咱来看一下

32:59.850 --> 33:03.810
现在把这我先不要了

33:03.810 --> 33:04.330
我先不要了

33:04.330 --> 33:06.050
咱来咱来看一下

33:06.050 --> 33:07.650
死到的角落我已经全部

33:07.650 --> 33:11.170
我已经能创建成功了对不对

33:11.170 --> 33:12.370
那在这你靠了

33:12.370 --> 33:14.450
前面软的配置我写完了对不对

33:14.450 --> 33:15.250
我一开始的时候

33:15.250 --> 33:17.250
我update一下

33:17.250 --> 33:18.450
我在这吧

33:18.450 --> 33:20.250
我在这先

33:20.250 --> 33:21.730
他有

33:21.730 --> 33:23.130
我在这去修嘛

33:23.130 --> 33:24.250
可以说s一下

33:24.250 --> 33:26.530
在这去创建这个store

33:26.530 --> 33:27.490
一开始就创建完这个

33:27.490 --> 33:29.370
它死到

33:29.370 --> 33:33.170
然后我通过这个叫做update的对吧

33:33.170 --> 33:35.730
我自己先去执行一下

33:35.730 --> 33:36.450
当然呢

33:36.450 --> 33:37.690
我这个之前

33:37.690 --> 33:39.290
之前我还要去做一件事情

33:39.290 --> 33:40.690
我要通过这个store

33:40.690 --> 33:41.810
第二subscript

33:41.810 --> 33:43.370
来经常一个订阅

33:43.370 --> 33:44.970
把update放到里面去

33:44.970 --> 33:47.090
然后这块怎么来写

33:47.090 --> 33:47.850
能看好了

33:47.850 --> 33:49.210
怎么来写

33:49.210 --> 33:51.010
要说任何一个事件

33:51.010 --> 33:53.010
任何一个事件再被说话以后的话

33:53.010 --> 33:54.410
我不用这么去裸露的

33:54.410 --> 33:55.970
去改变权局辩量了

33:55.970 --> 34:01.420
我直接通过store

34:01.420 --> 34:02.900
第二dispatch对吧

34:02.900 --> 34:05.340
来去分发这样的一个行为

34:05.340 --> 34:06.100
我用这个对象

34:06.100 --> 34:06.860
我用这个对象

34:06.860 --> 34:08.500
来去描述这样的一个行为

34:08.500 --> 34:09.260
太好了吧

34:09.260 --> 34:10.060
改变个test

34:10.060 --> 34:12.340
这里改成一个value

34:12.340 --> 34:12.980
等于什么呢

34:12.980 --> 34:14.780
等于你这个真真正正

34:14.780 --> 34:15.740
输的文本

34:15.780 --> 34:17.020
要dispatch

34:18.180 --> 34:20.380
那这你都不用管了

34:20.380 --> 34:21.180
你这就行了

34:21.180 --> 34:23.420
你看你这一旦分发完

34:23.420 --> 34:24.900
这个行为以后的话

34:24.900 --> 34:26.340
它实际的状态自己就变了

34:26.340 --> 34:26.780
而且呢

34:26.780 --> 34:27.620
相当的这个权度

34:27.620 --> 34:28.780
他自己就去执行了

34:28.780 --> 34:29.340
对不对

34:29.340 --> 34:30.460
然后再来

34:30.460 --> 34:32.100
c一下

34:32.100 --> 34:32.900
比如这呢

34:32.900 --> 34:34.100
这你也不用这么来

34:34.100 --> 34:34.820
麻烦了对吧

34:34.820 --> 34:36.860
你就直接这么来做就行了

34:36.860 --> 34:38.620
这他叫做一个sys

34:38.620 --> 34:39.780
sys

34:39.780 --> 34:40.780
他呢

34:40.780 --> 34:43.060
叫做一个sys

34:43.060 --> 34:44.100
或者他就是

34:44.100 --> 34:45.620
他就是你所获取的

34:45.620 --> 34:46.740
按有这个指就可以了

34:46.740 --> 34:48.340
他就是他

34:48.340 --> 34:49.340
行吧

34:49.340 --> 34:49.940
OK

34:49.940 --> 34:50.460
就是这样

34:50.460 --> 34:52.900
通过这一句话就搞定了对吧

34:52.900 --> 34:54.100
那咱先看一下

34:54.100 --> 34:54.860
到底行不行

34:54.860 --> 34:55.100
行吧

34:55.100 --> 34:56.180
到底行不行

34:56.180 --> 34:57.700
我来刷新词来看一样

34:57.700 --> 34:58.540
刷新

34:58.540 --> 34:59.700
刚好包了我错的吧

35:00.300 --> 35:00.860
last filter

35:00.860 --> 35:01.780
第12行std的

35:01.780 --> 35:02.660
对你靠了

35:02.660 --> 35:03.860
我这改变完以后的话

35:03.860 --> 35:05.180
我觉得combat filter对吧

35:05.180 --> 35:05.660
相当的

35:05.660 --> 35:07.260
你也要灵活的去变动一下

35:07.260 --> 35:09.700
不能他不能都去使络机了

35:09.700 --> 35:11.260
因为你在这std

35:11.260 --> 35:12.860
全局这个std没了对吧

35:12.860 --> 35:14.340
他全次他没了标净

35:14.340 --> 35:15.620
你什么你有啥呢

35:15.620 --> 35:16.780
你有std

35:16.780 --> 35:17.380
std

35:17.380 --> 35:18.700
你有gas data

35:18.700 --> 35:18.900
对吧

35:18.900 --> 35:19.980
你有这个方法

35:19.980 --> 35:21.700
怎么这个方法在制程的时候呢

35:21.700 --> 35:23.540
你需要你去传递这个proper

35:23.540 --> 35:25.860
还逗用了去获取

35:25.860 --> 35:27.500
这个状态的一个值

35:27.500 --> 35:28.060
std

35:28.060 --> 35:29.820
因为咱们这个已经去显示过了

35:29.820 --> 35:30.300
对吧

35:30.300 --> 35:31.580
咱再来看一下上英词

35:32.780 --> 35:33.860
不说mail

35:33.860 --> 35:34.340
对吧

35:34.340 --> 35:34.700
OK

35:34.700 --> 35:35.540
男可以

35:35.540 --> 35:36.420
女可以对吧

35:36.420 --> 35:37.740
再来比如说来个流

35:39.180 --> 35:39.660
流

35:39.660 --> 35:40.660
问题对吧

35:40.660 --> 35:41.620
mail

35:41.620 --> 35:42.420
问题对不对

35:42.620 --> 35:43.220
飞

35:44.380 --> 35:45.700
那个飞

35:45.700 --> 35:46.300
有问题吧

35:46.300 --> 35:46.900
没问题啊

35:46.900 --> 35:47.460
好

35:47.460 --> 35:49.300
那有那那那头说

35:49.300 --> 35:50.220
看我这么喜欢以后的话

35:50.220 --> 35:51.260
是不是我在这下功能

35:51.260 --> 35:52.100
他需要改吗

35:52.100 --> 35:52.300
对吧

35:52.300 --> 35:53.100
其实完全不用

35:53.100 --> 35:54.900
比如说我们是做一个简单

35:54.900 --> 35:55.380
那个模拟

35:55.380 --> 35:56.980
后面功能我就不去写了

35:56.980 --> 35:57.900
如果在这

35:59.180 --> 36:00.580
说我再来什么

36:00.580 --> 36:01.020
再来再来

36:01.020 --> 36:02.820
叫做一个根据年龄过

36:02.820 --> 36:03.260
过年

36:03.260 --> 36:04.820
我给你年龙段来过了率

36:04.820 --> 36:05.260
对吧

36:05.260 --> 36:06.660
一堆这个

36:06.660 --> 36:07.860
一堆

36:07.860 --> 36:08.740
不是对吧

36:08.740 --> 36:09.500
都成一个三

36:09.500 --> 36:09.700
对吧

36:09.700 --> 36:11.980
三个年龙段我就不写全了

36:12.020 --> 36:12.180
好

36:12.180 --> 36:12.940
不是有对吧

36:12.940 --> 36:13.460
好

36:13.460 --> 36:15.180
有个下了

36:15.180 --> 36:15.660
空的吧

36:15.660 --> 36:16.100
好

36:16.100 --> 36:19.100
你只要怎么你只要给他绑那个实践

36:19.100 --> 36:20.140
就给他绑那个实践

36:20.140 --> 36:20.740
怎么绑呢

36:20.740 --> 36:22.340
比如说你在这

36:22.340 --> 36:23.300
比如说在前面

36:23.300 --> 36:23.820
在前面

36:25.340 --> 36:25.980
在前面

36:25.980 --> 36:28.620
比如说我去获取那个道路

36:28.620 --> 36:29.780
会你到吗

36:29.780 --> 36:30.780
获取完道路以后呢

36:30.780 --> 36:31.220
对吧

36:31.220 --> 36:32.860
还给他绑定比如说点击实践

36:35.900 --> 36:36.980
点击实践

36:36.980 --> 36:38.140
完之后呢

36:38.140 --> 36:39.380
你载你载这

36:39.380 --> 36:39.940
你要写什么

36:39.940 --> 36:41.700
你要写一个叫做一个

36:41.700 --> 36:43.700
Filter

36:43.700 --> 36:45.500
Filter

36:45.500 --> 36:46.580
Re

36:46.580 --> 36:47.180
By

36:47.180 --> 36:47.860
Ses

36:47.860 --> 36:48.340
by

36:48.340 --> 36:48.740
H

36:48.740 --> 36:49.700
by H

36:49.700 --> 36:50.540
by Gs

36:50.540 --> 36:51.820
公文的自己自己写对吧

36:51.820 --> 36:52.180
你不写

36:52.180 --> 36:53.940
没人帮你去写对吧

36:53.940 --> 36:55.300
那在那在这的话

36:55.300 --> 36:55.820
好

36:55.820 --> 36:56.300
哦

36:56.300 --> 36:56.900
比如说

36:56.900 --> 36:58.060
StarsDual

36:58.060 --> 36:58.140
的话

36:58.140 --> 36:59.820
你只需要再增加一条

36:59.820 --> 37:00.820
就是你创建

37:00.820 --> 37:02.060
你这个StarsDual喜欢以后的话

37:02.060 --> 37:02.820
比如说你在创建

37:02.820 --> 37:03.620
StarsDual的时候

37:03.620 --> 37:04.820
你只要增加一条

37:04.820 --> 37:05.980
比如说Edge

37:05.980 --> 37:06.820
你龙段

37:06.820 --> 37:08.660
比如说是0到18

37:08.660 --> 37:09.460
0到18

37:09.460 --> 37:09.940
好

37:09.940 --> 37:10.420
好了

37:10.420 --> 37:11.260
那接下来

37:11.260 --> 37:12.020
学校怎么怎么做

37:12.020 --> 37:15.180
只需要在这个Conveyor里面

37:15.180 --> 37:15.780
啊

37:15.780 --> 37:16.420
ok

37:16.420 --> 37:18.020
去传的时候呢

37:18.020 --> 37:18.860
在这一放

37:18.860 --> 37:19.860
叫做Edge

37:19.860 --> 37:20.460
然后里面放什么

37:20.460 --> 37:21.020
放叫

37:21.020 --> 37:23.300
Filter

37:23.300 --> 37:24.820
Re by H

37:24.820 --> 37:26.460
当前提条件

37:26.460 --> 37:27.740
你说在这去引入它呀

37:27.740 --> 37:28.580
对吧

37:28.580 --> 37:30.540
在这去引入

37:30.540 --> 37:36.700
这哥们

37:36.700 --> 37:37.100
对吧

37:37.100 --> 37:38.020
引入

37:38.020 --> 37:38.780
那我在这的话

37:38.780 --> 37:40.180
引入也引入完了对吧

37:40.180 --> 37:41.700
这个这个这个地方呢

37:41.700 --> 37:42.700
也把你传进去

37:42.700 --> 37:43.980
去合并了对吧

37:43.980 --> 37:45.340
那Crystal之前就小小了

37:45.340 --> 37:46.620
我什么都不用变啊

37:46.620 --> 37:47.220
那在这的话

37:47.220 --> 37:48.660
我只要在创建你的时候

37:48.660 --> 37:50.620
我增加这样的一个状态就ok了

37:50.620 --> 37:51.260
那接下来的话

37:51.260 --> 37:52.980
就是一段时间被触发

37:52.980 --> 37:54.020
我就死掉点

37:54.020 --> 37:55.020
Dispatch一下

37:55.020 --> 37:55.980
在这来描述

37:55.980 --> 37:56.820
比如说Tab什么

37:56.820 --> 37:59.380
Tab是一个Edge

37:59.380 --> 37:59.780
啊

37:59.780 --> 38:00.860
后面的Vial呢

38:00.860 --> 38:01.860
比如说你可以选

38:01.860 --> 38:02.820
你能断什么

38:02.820 --> 38:03.340
11

38:03.340 --> 38:05.780
0到18

38:05.780 --> 38:06.660
还说什么

38:06.660 --> 38:09.220
这个19到20对吧

38:09.220 --> 38:09.940
那其一地方

38:09.940 --> 38:10.700
你都不用改

38:10.700 --> 38:11.700
你都不用动

38:11.700 --> 38:12.300
啊

38:12.300 --> 38:14.380
比如说整个这个流程

38:14.380 --> 38:15.660
就算是跑通了

38:15.660 --> 38:16.100
好

38:16.100 --> 38:16.700
那这样的话

38:16.700 --> 38:19.180
就说你未来再去增加一些东西的时候啊

38:19.180 --> 38:20.100
你还可以这么做

38:20.100 --> 38:22.340
你还可以单独创建一个文件夹

38:22.340 --> 38:23.020
啊

38:23.020 --> 38:24.260
这个文件夹呢

38:24.260 --> 38:27.060
只去来往里面去放一些对象

38:27.060 --> 38:28.220
这个对象呢

38:28.220 --> 38:29.140
都是啥呢

38:29.140 --> 38:31.500
都是一些比如说这个action

38:31.500 --> 38:32.460
都是这些对象

38:32.460 --> 38:34.460
刚刚咱们就不用那么去写了

38:34.460 --> 38:35.500
你这么去写就可以了

38:35.500 --> 38:37.100
就是你直接

38:37.100 --> 38:39.140
只要把这些功能处理出来

38:39.140 --> 38:40.100
放到这个filter里面

38:40.100 --> 38:41.220
反正写这么写就可以了

38:41.220 --> 38:41.780
啊

38:41.780 --> 38:42.460
那就说

38:42.460 --> 38:45.460
你通过这个像那个设计的一个

38:45.460 --> 38:46.340
流程的话

38:46.340 --> 38:47.420
你再去增添一些

38:47.420 --> 38:49.140
其他的新功能的时候的话对吧

38:49.140 --> 38:50.540
你不用再去修改那些

38:50.540 --> 38:52.460
真真真正的核心代码

38:52.460 --> 38:52.820
而且呢

38:52.820 --> 38:54.300
你也不用担心对吧

38:54.300 --> 38:55.740
你新增添功能

38:55.740 --> 38:58.180
导致他把其他功能怎么样

38:58.180 --> 38:59.340
给弄坏了对吧

38:59.340 --> 39:00.300
或者或者或者说

39:00.300 --> 39:02.700
他不能很好的融闹这些

39:02.700 --> 39:03.700
他不能好好的去融闹

39:03.700 --> 39:05.580
这样的一个整整个的一个项目之中

39:05.580 --> 39:06.420
啊

39:06.420 --> 39:07.220
嗯

39:07.220 --> 39:07.820
嗯

39:07.820 --> 39:08.860
有点蒙是对了对吧

39:08.860 --> 39:08.980
啊

39:08.980 --> 39:10.100
如果说其他你他听懂了

39:10.100 --> 39:11.060
那我还怎么混呢

39:11.060 --> 39:11.660
对不对

39:11.660 --> 39:12.260
啊

39:12.260 --> 39:13.180
那

39:13.180 --> 39:14.020
这一块的话

39:14.020 --> 39:14.220
啊

39:14.220 --> 39:15.940
这一块的话

39:15.940 --> 39:17.220
是quiz 2的话

39:17.220 --> 39:17.380
啊

39:17.380 --> 39:18.020
他是

39:18.020 --> 39:19.100
British VVS

39:19.100 --> 39:20.100
把那些思想啊

39:20.100 --> 39:20.660
思想

39:20.660 --> 39:22.140
说这块我也没有说

39:22.140 --> 39:23.820
打算要求同学听完

39:23.820 --> 39:25.300
他的就能懂啊

39:25.300 --> 39:25.580
啊

39:25.580 --> 39:26.980
前三分之二的部分对吧

39:26.980 --> 39:28.260
你能把这东西写完的

39:28.260 --> 39:29.620
你能把东西写完就ok

39:29.620 --> 39:29.740
啊

39:29.740 --> 39:30.580
喜欢就ok

39:30.580 --> 39:31.980
那如果说啊

39:31.980 --> 39:33.620
你有能力强项的话对吧啊

39:33.620 --> 39:34.660
这个

39:34.660 --> 39:36.660
你把这个流把把这个流程

39:36.660 --> 39:37.780
通过我这些直播课

39:37.780 --> 39:38.580
都听懂的话对吧

39:38.580 --> 39:39.060
你回去自己

39:39.060 --> 39:40.300
尝尝自己写写对吧

39:40.300 --> 39:41.060
那如果说

39:41.060 --> 39:41.300
这个

39:41.300 --> 39:42.300
你居然觉得

39:42.300 --> 39:42.820
觉得这流程

39:42.820 --> 39:44.220
还是稍微点蒙的话对吧

39:44.220 --> 39:44.580
哎

39:44.580 --> 39:45.900
回去路博客我建议

39:45.900 --> 39:47.420
还是看两到三遍

39:47.420 --> 39:48.740
或者说一到两遍

39:48.740 --> 39:50.260
把流程全摸透以后的话

39:50.260 --> 39:50.820
ok

39:50.820 --> 39:53.060
之后你尝试自己去来些写写啊

39:53.060 --> 39:54.340
那这个东西啊

39:54.340 --> 39:57.660
并不是一个完全固定的一个定式啊

39:57.660 --> 39:58.900
那如果你有更好的方法

39:58.900 --> 40:00.220
如果你有更好的思路的话

40:00.220 --> 40:01.780
你完全要自己去尝试

40:01.780 --> 40:02.780
你去写写啊

40:02.780 --> 40:03.180
很多东西

40:03.180 --> 40:04.420
他的他都是

40:04.420 --> 40:05.420
我们去否定

40:05.420 --> 40:06.460
前的一些经验

40:06.460 --> 40:08.140
前的一些想法

40:08.140 --> 40:08.780
业务需求

40:08.780 --> 40:09.460
扩展

40:09.460 --> 40:10.620
变多了以后的话对吧

40:10.620 --> 40:12.980
我们用一些基础的实力和能力

40:12.980 --> 40:13.660
我们怎么样

40:13.660 --> 40:16.980
根据具体的情况来去改进来去变化啊

40:16.980 --> 40:17.900
这边啊

40:17.900 --> 40:19.620
有点小的设定模式的东西

40:19.620 --> 40:20.780
在于是这个订阅啊

40:20.780 --> 40:21.620
发布订阅啊

40:21.620 --> 40:22.180
但是呢

40:22.180 --> 40:23.940
也不是完全的设定模式啊

40:23.940 --> 40:26.300
也不用太去去在乎

40:26.300 --> 40:26.460
哎

40:26.460 --> 40:27.060
我还没学了

40:27.060 --> 40:27.340
对吧

40:27.340 --> 40:29.060
我就做不出来啊

40:29.060 --> 40:31.180
这个东西他没那么难啊

40:31.180 --> 40:33.740
对观察者还是有点关系的

40:33.740 --> 40:34.700
有一小点啊

40:34.700 --> 40:36.940
有一点啊

40:36.940 --> 40:38.300
今天还没到12点啊

40:38.300 --> 40:38.900
挺好

40:38.900 --> 40:39.780
11点多

40:39.780 --> 40:40.260
还挺稳的

40:40.260 --> 40:40.460
对吧

40:43.820 --> 40:44.580
咱们啊

40:44.580 --> 40:46.500
就是这一整块的话

40:46.500 --> 40:48.820
这个数据一块的内容就讲完了

40:48.820 --> 40:48.980
啊

40:48.980 --> 40:49.940
那后面的话

40:49.940 --> 40:51.380
可能是要讲这个

40:51.380 --> 40:52.700
他进修了啊

40:52.700 --> 40:52.860
啊

40:52.860 --> 40:55.460
那我希望讲进修那个钱啊

40:55.460 --> 40:56.500
当然讲进修的话

40:56.500 --> 40:57.540
就换老师了啊

40:57.540 --> 40:58.620
具体换谁的话

40:58.620 --> 40:59.220
这个

40:59.220 --> 41:00.540
呃

41:00.540 --> 41:02.380
好主要会给你们几十位手啊

41:02.380 --> 41:04.500
这个东西应该是

41:04.500 --> 41:05.420
我看应该是要

41:06.420 --> 41:06.820
而据实话

41:06.820 --> 41:07.860
我还是挣不到的吧

41:07.860 --> 41:09.020
到什么时候之前的话

41:09.020 --> 41:10.340
我继续去通知大家

41:10.340 --> 41:12.740
但我希望你在上那个课之前的话

41:12.740 --> 41:14.820
把我这个东西全部都搞定是吧

41:14.820 --> 41:15.900
全部都搞定

41:15.900 --> 41:16.060
啊

41:16.060 --> 41:17.860
一定要全部都搞定啊

41:17.860 --> 41:19.860
不要给自己增添一些负担对吧

41:19.860 --> 41:21.420
你说这个东西还没学完对吧

41:21.420 --> 41:23.020
你就又学下半个东西了啊

41:23.020 --> 41:23.900
有时间赚时间

41:23.900 --> 41:24.340
好好看看

41:24.340 --> 41:25.140
好好去学一学

41:25.140 --> 41:25.660
嗯

41:27.020 --> 41:29.940
OK

41:29.940 --> 41:30.180
啊

41:30.180 --> 41:31.020
那很说老实啊

41:31.020 --> 41:31.620
说老实

41:31.620 --> 41:32.340
哈哈

41:35.540 --> 41:35.900
呃

41:35.900 --> 41:37.100
同学这个

41:37.100 --> 41:38.060
还有什么问题吗

41:38.060 --> 41:38.860
啊

41:38.860 --> 41:39.540
如果说没问题的话

41:39.540 --> 41:40.660
咱们今天就是

41:40.660 --> 41:41.100
呃

41:41.100 --> 41:41.500
到这

41:41.500 --> 41:42.140
如果说你有问题

41:42.140 --> 41:43.380
还不知道怎么问的情况下的话

41:43.380 --> 41:44.660
你也到时候加个微信吧

41:44.660 --> 41:45.140
就撕了吧

41:45.140 --> 41:45.580
就可以

41:45.580 --> 41:46.180
啊

41:46.180 --> 41:46.660
呃

41:46.660 --> 41:46.940
呃

41:46.940 --> 41:47.180
呃

41:47.180 --> 41:47.740
呃

41:47.740 --> 41:53.140
嗯

41:53.140 --> 41:54.980
不过同学都一点蒙圈对吧

41:54.980 --> 41:56.020
不知道该怎么问对吧

41:56.020 --> 41:57.300
哈哈哈

41:57.300 --> 41:58.340
呃

41:58.340 --> 41:58.380
呃

41:58.380 --> 41:58.500
呃

41:58.500 --> 41:59.060
没关系啊

41:59.060 --> 42:01.820
我今天你还是回回去这个

42:01.820 --> 42:03.380
回去先想想啊

42:03.380 --> 42:05.980
自己先尝试解决一些问题啊

42:05.980 --> 42:06.980
然后呢

42:06.980 --> 42:07.900
再去

42:07.900 --> 42:09.700
我再去提些问处啊

42:09.700 --> 42:10.620
说今天怎么说呢

42:10.620 --> 42:11.660
我的建议是

42:11.660 --> 42:13.500
你现在有一问的话啊

42:13.500 --> 42:13.660
嗯

42:13.660 --> 42:14.980
你自己应该回去想想

42:14.980 --> 42:16.260
我应该踏回去想想

42:16.260 --> 42:17.660
我让你十三想不出来以后的话

42:17.660 --> 42:18.060
对吧

42:18.060 --> 42:18.380
ok

42:18.380 --> 42:19.540
你再过来去问通过

42:19.540 --> 42:19.980
啊

42:19.980 --> 42:21.700
否则就失去这个意义了

42:21.700 --> 42:21.980
啊

42:21.980 --> 42:22.980
假设�意义了

42:22.980 --> 42:23.620
啊

42:23.620 --> 42:24.180
多看两遍吧

42:24.180 --> 42:24.460
回去

42:24.460 --> 42:25.180
行吧

42:25.180 --> 42:27.620
嗯

42:27.620 --> 42:28.460
嘿嘿嘿

42:28.460 --> 42:29.780
嘿嘿嘿

42:29.780 --> 42:31.580
今天的内容就到这的

42:31.580 --> 42:32.020
对吧

42:32.020 --> 42:33.660
你个小夏克回去吃饭 dining

42:33.660 --> 42:34.140
输校同学

42:34.140 --> 42:35.500
对吧

42:35.500 --> 42:36.580
就可以不用学校了

42:36.580 --> 42:36.940
啊

42:38.580 --> 42:40.020
是的

42:41.580 --> 42:42.280
我是哪一个呢

42:42.280 --> 42:43.280
还是挺不错的

42:47.080 --> 42:48.880
两个小时四个三分钟好了

42:53.880 --> 42:54.480
行了

42:54.480 --> 42:55.680
那就他先这样吧

42:55.680 --> 42:56.480
同学

42:56.480 --> 42:58.080
那有问题的话可以到

42:58.080 --> 42:58.780
到时候再私聊

42:58.780 --> 42:59.180
对吧

42:59.180 --> 43:00.380
好嘞

43:00.380 --> 43:01.480
那拜拜了

43:02.480 --> 43:04.080
感谢同学

43:04.080 --> 43:04.880
感谢同学

43:04.880 --> 43:05.680
感谢同学

43:06.680 --> 43:07.080
好

43:07.080 --> 43:07.880
你们好贴心

43:09.180 --> 43:09.880
那拜拜了

43:09.880 --> 43:10.480
拜拜了

43:12.680 --> 43:13.480
我也休息休息

43:13.480 --> 43:13.980
休息休息

43:13.980 --> 43:14.380
有饿了

43:14.380 --> 43:14.880
吃点饭

43:16.080 --> 43:16.480
拜拜

