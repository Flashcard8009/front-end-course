WEBVTT

00:00.000 --> 00:05.720
ProValue是这样传递了一个初始指OBJ

00:05.720 --> 00:10.840
像SRN是对用的一个原宿index所言

00:10.840 --> 00:13.200
这个是送出本身

00:13.200 --> 00:14.920
第二次去执行的时候

00:14.920 --> 00:17.320
如果你新同学你会发现这边是安底范的

00:17.320 --> 00:18.800
第三次也是安底范的

00:18.800 --> 00:20.200
也是安底范的全购室

00:20.200 --> 00:21.720
这是什么意思

00:21.720 --> 00:24.560
我给你说这个函数

00:24.560 --> 00:29.880
它里面也需要你去发挥一个指导

00:30.320 --> 00:33.720
这次你返回的是什么

00:33.720 --> 00:35.120
你返回的是什么

00:35.120 --> 00:39.720
就决定了下一次函数在执行的时候

00:39.720 --> 00:41.160
第一个指是什么

00:41.160 --> 00:42.560
就很像什么呢

00:42.560 --> 00:44.560
很像这个四成一边接地一样

00:44.560 --> 00:46.360
这个接地棒

00:46.360 --> 00:47.800
第一棒比如说谁

00:47.800 --> 00:49.200
就是这个OBJ

00:49.200 --> 00:50.280
在执行的时候

00:50.280 --> 00:52.800
好 这个OBJ作为第一棒就交给他了

00:52.800 --> 00:53.400
OK

00:53.400 --> 00:54.720
不是这个棒

00:54.720 --> 00:57.200
这叫他

00:57.200 --> 00:59.520
他今晚相当于他跑完

00:59.520 --> 01:01.120
他自己的一个路程

01:01.120 --> 01:02.320
那最后他返回指

01:02.320 --> 01:05.320
就是他也把这个PR译为B

01:05.320 --> 01:06.520
反而是B

01:06.520 --> 01:06.960
好

01:06.960 --> 01:08.400
那你返回这个东西

01:08.400 --> 01:10.400
就相当于你交棒了

01:10.400 --> 01:11.160
你交棒交给谁

01:11.160 --> 01:13.320
谁可以交给第二次

01:13.320 --> 01:16.520
你执行函数的时候他了

01:16.520 --> 01:17.960
比如说你这个东西

01:17.960 --> 01:19.560
他作为这样一个棒

01:19.560 --> 01:19.840
好了

01:19.840 --> 01:20.880
怎么样

01:20.880 --> 01:23.360
通过以每次执行完

01:23.360 --> 01:26.200
返回这样一个pr value

01:26.200 --> 01:29.240
那一直一直的去往下交接

01:29.240 --> 01:30.080
交给谁呢

01:30.080 --> 01:36.330
去交给了下一次执行函数的第一个

01:36.330 --> 01:37.370
不在于看一下

01:37.370 --> 01:39.050
如果说我这么来显示的话

01:39.050 --> 01:41.570
那每一次执行的时候

01:41.570 --> 01:43.450
我都把这样一个结果

01:43.450 --> 01:45.330
把pr value返回出去

01:45.330 --> 01:48.090
作为下一次函数执行的时候的那个指了

01:48.090 --> 01:49.490
那是不是相当于这个棒

01:49.490 --> 01:51.690
永远一直在往下去传递

01:51.690 --> 01:53.050
来看一下

01:53.050 --> 01:53.650
好

01:53.650 --> 01:54.250
第一棒 对吧

01:54.250 --> 01:54.650
是引力什么

01:54.650 --> 01:55.650
b value是他 对吧

01:55.650 --> 01:56.810
这函数执行完以后呢

01:56.810 --> 01:58.450
又交给了第二个函数 对吧

01:58.450 --> 01:58.930
OK

01:58.930 --> 02:00.090
再说你这个第二函数

02:00.090 --> 02:01.210
在函数执行的时候的话

02:01.210 --> 02:02.970
你第一次也是他 对吧

02:02.970 --> 02:04.490
那这个第二函数执行完以后的话

02:04.490 --> 02:06.610
也把这个pr value返回出去了

02:06.610 --> 02:09.290
那这个pr value他也会作为第三次

02:09.290 --> 02:11.930
那个他也会作为这个函数

02:11.930 --> 02:14.770
第三次执行的时候那个指 对吧

02:14.770 --> 02:16.930
那这个第三次函数执行完以后

02:16.930 --> 02:20.170
他所发挥的指也是这个pr value 对吧

02:20.170 --> 02:22.090
那他作为第四次函数执行的时候

02:22.090 --> 02:23.050
就是第一个指 对吧

02:23.050 --> 02:24.730
那说一次一次去往下

02:24.730 --> 02:26.410
进行这样一个交接

02:26.410 --> 02:28.970
那最后对第二次执行完以后

02:28.970 --> 02:31.690
他所返回指贼呢

02:31.690 --> 02:33.290
来 说这个

02:33.290 --> 02:37.730
就是ITUN value

02:37.730 --> 02:39.970
那就是说是这个函数

02:39.970 --> 02:41.890
在函数完以后

02:41.890 --> 02:43.850
他所返回的指就是

02:43.850 --> 02:46.890
这个函数最后一次函数返回的那个指

02:46.890 --> 02:47.450
那是谁啊

02:47.450 --> 02:49.810
其实也就是一个pr value返回对吧

02:49.810 --> 02:50.850
咱们来看一下

02:50.850 --> 02:54.330
我去说说一下这个Ret value

02:54.330 --> 02:54.770
啊

02:54.770 --> 02:56.010
就像接力一样 对吧

02:56.010 --> 02:57.890
我觉得是用一个接力来描述的话

02:57.890 --> 02:59.530
应该还是很生动的

02:59.530 --> 03:00.210
我们不看他了

03:00.210 --> 03:01.010
我们不看他了

03:01.010 --> 03:02.650
我们做这样一个操作

03:02.650 --> 03:06.410
我说每次我都要这个pr value

03:06.410 --> 03:07.690
那第一次在函数的时候

03:07.690 --> 03:08.250
就他对吧

03:08.250 --> 03:08.770
是他对吧

03:08.770 --> 03:09.210
好了

03:09.210 --> 03:10.170
就是说是他的话

03:10.170 --> 03:12.210
他这边有H这个名

03:12.210 --> 03:13.330
还有H这个值

03:13.330 --> 03:14.330
我要这个值上呢

03:14.330 --> 03:16.730
是这个SUR value

03:16.730 --> 03:19.770
好像我让他加等他

03:19.770 --> 03:24.290
你说每次我都要用这个对象的H对吧

03:24.290 --> 03:28.050
等于他本身加上对应那一次这个元素里面

03:28.050 --> 03:30.970
这个H的这个值

03:30.970 --> 03:33.570
他说我现在要把这里面的H值

03:33.570 --> 03:34.970
强调一个盒里吧

03:34.970 --> 03:38.290
去付给他

03:38.290 --> 03:39.410
最后

03:39.410 --> 03:41.530
这第一次的时候执行他这样子

03:41.530 --> 03:44.690
那第二次他之前说呢

03:44.690 --> 03:46.730
因为你第一次还把他怎么样

03:46.730 --> 03:47.650
返回出去了

03:47.650 --> 03:48.890
那第二次的时候

03:48.890 --> 03:49.450
怎么样

03:49.450 --> 03:51.810
他还是上一个那个值对不对

03:51.810 --> 03:52.530
因为你看好了

03:52.530 --> 03:54.210
你这个对象是引用值对不对

03:54.210 --> 03:54.970
你引用值的话

03:54.970 --> 03:56.890
比如说你先把这个引用值PK他对吧

03:56.890 --> 03:57.050
好

03:57.050 --> 03:58.210
你操作完他以后的话

03:58.210 --> 03:59.690
再把他返回出去对吧

03:59.690 --> 04:00.370
返出去以后

04:00.370 --> 04:01.450
这个值作为什么

04:01.450 --> 04:04.090
作为作为第二次这个函数值的时候

04:04.090 --> 04:05.210
他这样的一个值

04:05.210 --> 04:08.330
那其实他们所存在是同一个引用值

04:08.330 --> 04:09.570
那你再去操作的时候呢

04:09.570 --> 04:10.890
其实也也是在不同的操作

04:10.890 --> 04:12.250
同一个引用用用值

04:12.250 --> 04:13.330
所以你返回这个引用值的时候

04:13.330 --> 04:14.170
咱们来看一下

04:14.170 --> 04:16.890
这个H是已经变成了

04:16.890 --> 04:17.970
误了我错误了

04:17.970 --> 04:18.810
四分行为被定义

04:18.810 --> 04:19.930
我打错了应该

04:19.930 --> 04:21.850
R1TU2N对吧

04:21.850 --> 04:23.610
TU2N我保存一下来开业

04:23.610 --> 04:25.170
放心

04:25.170 --> 04:25.650
回来是什么

04:25.650 --> 04:26.490
是一面散热的吧

04:26.490 --> 04:28.250
像你把这样的值给他求了一个盒

04:28.250 --> 04:29.770
给他求了一个盒

04:29.770 --> 04:31.370
那他有同学说

04:31.370 --> 04:33.730
你看这个基本的使用

04:33.730 --> 04:35.170
如果你懂了以后的话

04:35.170 --> 04:36.170
那以后同学说

04:36.170 --> 04:37.850
这个东西到底要怎么来用对不对

04:37.850 --> 04:40.530
好像这个前面那些需求

04:40.530 --> 04:41.650
感觉还能理解对吧

04:41.650 --> 04:43.490
因为跟单词有点像嘴异嘛

04:43.490 --> 04:45.090
一个叫什么固力嘛对吧

04:45.090 --> 04:45.970
一个叫Airsoft

04:45.970 --> 04:47.770
作为一些条件的判断嘛

04:47.770 --> 04:49.210
Map呢来做一些比如说

04:49.210 --> 04:49.770
降维后

04:49.770 --> 04:51.730
所以降一个一镜设嘛对不对

04:51.770 --> 04:54.170
划回一舍基本的一个变利嘛

04:54.170 --> 04:55.330
那这就Reduce了对吧

04:55.330 --> 04:57.290
这就Reduce了要怎么用呢

04:57.290 --> 04:57.970
Reduce怎么用的话

04:57.970 --> 04:59.610
这个地方就完全是评计链的了

04:59.610 --> 05:01.290
我给你来说一下

05:01.290 --> 05:02.050
有东西啊

05:02.050 --> 05:03.890
有东西他叫做

05:03.890 --> 05:06.170
有东西他叫做Cookie啊

05:06.170 --> 05:06.610
Cookie

05:06.610 --> 05:10.460
你看看Cookie是啥吗

05:10.460 --> 05:11.140
检查一下

05:11.140 --> 05:11.740
检查

05:11.740 --> 05:14.620
当你去登为一个正常的一个网页的时候

05:14.620 --> 05:15.700
他都会有Cookie啊

05:15.700 --> 05:17.380
我们看一下这个Application

05:17.380 --> 05:20.660
Cookie是一种小型的一个缓存文件

05:20.660 --> 05:21.540
是乱气

05:21.540 --> 05:22.980
用它来做这样的一个

05:22.980 --> 05:24.020
简单的一个缓存

05:24.020 --> 05:24.540
是吧

05:24.540 --> 05:25.980
当然做网程有很多种

05:25.980 --> 05:27.220
不是Local Storage

05:27.220 --> 05:29.060
有什么这个Sets Storage

05:29.060 --> 05:29.940
什么Industry B

05:29.940 --> 05:30.780
等等等等

05:30.780 --> 05:31.940
Cookie是其中一种

05:31.940 --> 05:34.340
它在这种网络请求

05:34.340 --> 05:37.340
网络这样一个通讯的

05:37.340 --> 05:40.260
这种这样的一种吸油中的话

05:40.260 --> 05:41.660
这个Cookie也会体验出

05:41.660 --> 05:43.820
它这样一个比较独特的一个实力

05:43.820 --> 05:44.900
独特这样的一个能力

05:44.900 --> 05:46.180
所以Cookie咱们放放

05:46.180 --> 05:47.180
后面咱们来去讲

05:47.180 --> 05:48.020
先不用急

05:48.020 --> 05:49.620
那我们也只要知道

05:49.620 --> 05:51.980
它其实是做一个这样的一个缓存

05:51.980 --> 05:53.460
来去实用的

05:53.460 --> 05:55.340
那我们想去取出

05:55.340 --> 05:57.980
从我带马来取出一个页面中的Cookie

05:57.980 --> 05:59.180
我们怎么来取呢

05:59.180 --> 06:01.220
我们来看一下

06:01.220 --> 06:03.740
我们就要取百度页面中的Cookie

06:03.740 --> 06:06.100
我可以通过Document来点Cookie

06:06.100 --> 06:06.780
来取

06:06.780 --> 06:07.460
取完你会发现

06:07.460 --> 06:08.860
它居然是个字幕创

06:08.860 --> 06:10.460
但是在这你去看的时候

06:10.460 --> 06:11.380
你会发发现

06:11.380 --> 06:14.740
其实这里面是图形化

06:14.740 --> 06:15.340
对

06:15.340 --> 06:17.220
应该算是图形化的吧

06:17.220 --> 06:18.580
去显示出来

06:18.580 --> 06:21.020
每个Cookie它对具体它是什么

06:21.020 --> 06:22.620
其实Cookie它最后这个值

06:22.620 --> 06:24.980
是Name和Value

06:24.980 --> 06:28.420
这种PValue一堆的这样一种形式

06:28.420 --> 06:30.500
确实你在通过操作Cookie

06:30.500 --> 06:32.220
你去存的时候的话

06:32.220 --> 06:34.140
它也是需要你存一个P

06:34.140 --> 06:34.780
存一个Value

06:34.780 --> 06:37.020
存一个属性值

06:37.020 --> 06:38.060
那你会发发现

06:38.060 --> 06:39.980
你在去获取Cookie的时候的话

06:39.980 --> 06:41.420
你通过这种方式来获取

06:41.420 --> 06:43.100
一获取你会发现

06:43.100 --> 06:44.420
它居然啥

06:44.420 --> 06:46.460
它居然是一个

06:46.460 --> 06:48.700
它居然是这样的一个做串

06:48.700 --> 06:50.260
那这种做串的话

06:50.260 --> 06:57.220
我要给它变成一个什么样的形式

06:57.220 --> 07:00.420
才能方便我根据属性的名字

07:00.420 --> 07:03.780
来相的去查找Cookie的属性值

07:03.780 --> 07:05.540
因为说一般后续的优秀

07:05.540 --> 07:07.340
它是这样的

07:07.340 --> 07:10.020
当你请求一个页面的时候

07:10.020 --> 07:12.420
一个页面基本上是

07:12.420 --> 07:14.900
它是从服务器里面给你反而甩了

07:14.900 --> 07:16.500
服务器那些在干嘛呢

07:16.500 --> 07:18.340
会指定你乱去去怎么样

07:18.340 --> 07:19.940
去设定一些Cookie

07:19.980 --> 07:21.540
乱去借到服务器这里面

07:21.540 --> 07:22.260
是有以后的话

07:22.260 --> 07:22.500
OK

07:22.500 --> 07:23.380
它会随性Cookie

07:23.380 --> 07:24.340
我们在前段

07:24.340 --> 07:25.860
需要去操作一些Cookie的时候的话

07:25.860 --> 07:26.500
我们要怎么样

07:26.500 --> 07:27.220
我们要通过这种方式

07:27.220 --> 07:28.260
它来去取

07:28.260 --> 07:29.460
取完这个方式

07:29.460 --> 07:30.500
它是做串

07:30.500 --> 07:31.300
去做串的话

07:31.300 --> 07:31.620
OK

07:31.620 --> 07:33.620
我们一般知道这个Cookie的名字了

07:33.620 --> 07:34.100
对吧

07:34.100 --> 07:35.220
我想根据名字来说

07:35.220 --> 07:36.820
都是这个指是什么

07:36.820 --> 07:39.620
但是你光是做串的话

07:39.620 --> 07:41.700
你怎么能很好的去通过你的名字

07:41.700 --> 07:42.900
来去得到这个指呢

07:42.900 --> 07:43.380
不行

07:43.380 --> 07:43.940
那怎么办呢

07:43.940 --> 07:45.780
我需要把这个做串给它变成了

07:45.780 --> 07:49.460
一种我容易操作的方式

07:49.460 --> 07:51.460
那什么叫做容易操作的方式呢

07:51.460 --> 07:52.820
你想象一下

07:52.820 --> 07:55.620
根据属性名来获取属性的名字吧

07:55.620 --> 07:57.220
如果说你这些东西

07:57.220 --> 07:58.500
变成一个对象的话

07:58.500 --> 07:59.780
那怕好了

07:59.780 --> 08:02.020
我说就可以根据你的属性名

08:02.020 --> 08:03.460
来变成使用值了

08:03.460 --> 08:05.700
就不用说看了

08:05.700 --> 08:07.860
我们Cookie是一对一对的

08:07.860 --> 08:08.900
但是你取出完以后

08:08.900 --> 08:10.500
你会发现的是一个做串的吧

08:10.500 --> 08:11.300
那这

08:11.300 --> 08:12.500
那根本是做串的话

08:12.500 --> 08:14.020
它怎么给它分配成一对

08:14.020 --> 08:14.580
它一对的呢

08:14.580 --> 08:16.020
你看这

08:16.020 --> 08:17.220
每一对你看

08:17.300 --> 08:20.180
每一对和每一对之间

08:20.180 --> 08:23.140
都是由这个分号空格来怎么样

08:23.140 --> 08:24.100
来拆分的

08:24.100 --> 08:24.580
对吧

08:24.580 --> 08:25.140
那说

08:25.140 --> 08:27.140
这是一对的Cookie

08:27.140 --> 08:28.580
这是另外一对的

08:28.580 --> 08:30.580
这是另外一对的

08:30.580 --> 08:31.060
对吧

08:31.060 --> 08:31.780
后面呢

08:31.780 --> 08:34.100
后面它又是一对的

08:34.100 --> 08:34.740
OK

08:34.740 --> 08:35.780
那这些Cookie

08:35.780 --> 08:38.100
那这些Cookie

08:38.100 --> 08:39.300
首先是用这个

08:39.300 --> 08:41.140
什么分号空格来分割的

08:41.140 --> 08:41.540
对吧

08:41.540 --> 08:42.100
分开完之后

08:42.100 --> 08:43.140
那这一对

08:43.140 --> 08:44.900
不是这一对Cookie的话

08:44.900 --> 08:46.660
属性名和属性值怎么办呢

08:46.740 --> 08:48.260
是由等号来分割的

08:48.260 --> 08:49.700
那说等号左面呢

08:49.700 --> 08:51.780
是属性的名

08:51.780 --> 08:53.940
等号右面是属性的值

08:53.940 --> 08:55.060
也就是说

08:55.060 --> 08:57.060
这其实就是一条Cookie

08:57.060 --> 08:57.860
这Cookie呢

08:57.860 --> 08:59.140
它是属性的名

08:59.140 --> 09:00.580
它是属性的值

09:00.580 --> 09:01.540
那我们想怎么办

09:01.540 --> 09:02.340
我们希望

09:02.340 --> 09:04.580
让这个字路串变成一个对象

09:04.580 --> 09:05.860
那这个对象呢

09:05.860 --> 09:06.500
什么样呢

09:06.500 --> 09:08.100
比如说属性的名

09:08.100 --> 09:09.860
号属性的值

09:09.860 --> 09:11.060
如果说

09:11.060 --> 09:13.220
所有的这个一对一对的属性

09:13.220 --> 09:14.420
全都变成这样的话

09:14.420 --> 09:16.100
全都变成这种它对象的话

09:16.180 --> 09:17.300
那我就可以怎么样

09:17.300 --> 09:18.980
根据这个对象

09:18.980 --> 09:20.500
中过一个Cookie

09:20.500 --> 09:21.860
Cookie

09:21.860 --> 09:23.860
Cookie

09:23.860 --> 09:25.700
跟这个对象来怎么样

09:25.700 --> 09:28.340
来去

09:28.340 --> 09:30.660
PSTM

09:30.660 --> 09:32.820
来去获取这样的一个属性的一个值了

09:32.820 --> 09:33.220
对吧

09:33.220 --> 09:34.340
因为你知道属性的名

09:34.340 --> 09:36.100
你要对应去获取这个属性的值

09:36.100 --> 09:36.740
也就是说

09:36.740 --> 09:38.340
模型可以通过一些的操作

09:38.340 --> 09:40.420
把字路串变成这样的一个对象的话

09:40.420 --> 09:43.300
就更方便我后续的一个操作

09:43.300 --> 09:44.340
就不仅是这样

09:44.340 --> 09:44.980
很多情况下

09:44.980 --> 09:45.940
比如说我们在进行

09:45.940 --> 09:47.060
比面试的时候

09:47.060 --> 09:48.980
都会去考一些

09:48.980 --> 09:50.900
这种数据的一些操作

09:50.900 --> 09:52.180
如果说你对这一块

09:52.180 --> 09:52.820
玩的灵活

09:52.820 --> 09:53.940
玩的熟练的话

09:53.940 --> 09:55.780
很有可能在面试中

09:55.780 --> 09:57.700
能占有很大的这样的一个优势

09:57.700 --> 09:59.140
之前就出过一个题例吧

09:59.140 --> 10:00.740
要你去拆分整个URL

10:00.740 --> 10:02.180
把URL怎么样

10:02.180 --> 10:03.060
你拆分了以后

10:03.060 --> 10:04.260
变成这样的一个对象

10:06.900 --> 10:09.060
但是这些东西都逃不了

10:09.060 --> 10:10.020
我们这些这个

10:10.020 --> 10:11.300
不算一些方法

10:11.300 --> 10:12.500
数据的方法

10:12.500 --> 10:13.380
那咱们现在

10:13.460 --> 10:14.740
就用这个Reduce

10:14.740 --> 10:16.340
来去完成我们这样的一些的

10:16.340 --> 10:17.780
这个需求

10:17.780 --> 10:18.980
这个需求的话

10:18.980 --> 10:20.500
我再来重复一遍

10:20.500 --> 10:21.300
再来重复一遍

10:21.300 --> 10:22.500
给你看一下

10:22.500 --> 10:23.380
你说是啥呢

10:23.380 --> 10:26.180
他说假如你已经得到了

10:26.180 --> 10:27.860
这样的一个Cookie

10:27.860 --> 10:30.420
就叫做一个Workkey

10:30.420 --> 10:31.540
这样对吧

10:31.540 --> 10:31.940
好

10:31.940 --> 10:33.940
那它是一个做串

10:33.940 --> 10:35.860
它是这样的做串

10:35.860 --> 10:36.820
那

10:36.820 --> 10:40.560
可以等会

10:40.560 --> 10:41.760
或者随便写一个

10:41.760 --> 10:43.120
好

10:43.120 --> 10:44.480
那你已经怎么样

10:44.480 --> 10:46.080
把这个做串可以获取到了

10:46.080 --> 10:46.320
对吧

10:46.320 --> 10:48.080
以外Cookie所获取到了

10:48.080 --> 10:49.120
但现在呢

10:49.120 --> 10:51.600
要根据这个Cookie的名字

10:51.600 --> 10:52.400
是吧

10:52.400 --> 10:52.960
对吧

10:52.960 --> 10:53.840
去得到这个

10:54.560 --> 10:56.080
Val的一个值

10:56.080 --> 10:56.960
那你

10:56.960 --> 10:58.400
怎么给你名字来得到

10:58.400 --> 10:59.360
这个万流值呢

10:59.360 --> 10:59.840
对吧

10:59.840 --> 11:00.800
怎么给你名字来得到

11:00.800 --> 11:02.160
这个万流值呢

11:02.160 --> 11:03.520
最方便的方法对吧

11:03.520 --> 11:04.800
最方便的方法就是

11:04.800 --> 11:06.800
你先把这个整个的做串

11:06.800 --> 11:08.000
给它变成一个对象

11:08.000 --> 11:10.160
一旦变成了这个对象以后的话

11:10.160 --> 11:11.520
那你后续可能说

11:11.520 --> 11:13.840
进行频繁的这个操作

11:13.920 --> 11:14.800
比如说通过

11:14.800 --> 11:17.200
这个各种Cookie的名来

11:17.200 --> 11:18.480
最后有这样一个值的话

11:18.480 --> 11:19.600
都很容易写了

11:19.600 --> 11:19.920
是吧

11:19.920 --> 11:21.120
那你一旦把它变成一个

11:21.120 --> 11:22.160
对象以后的话

11:22.160 --> 11:22.960
你再想

11:22.960 --> 11:24.720
或许任何一种Cookie

11:24.720 --> 11:25.760
对它对象的一个值的话

11:25.760 --> 11:26.880
都很轻松

11:26.880 --> 11:28.240
就说在这一块的话

11:28.240 --> 11:29.520
我就

11:29.520 --> 11:31.120
可以啊

11:31.120 --> 11:32.000
写个弹术

11:32.000 --> 11:33.600
这弹术就叫做

11:33.600 --> 11:35.360
Prose解析对吧

11:35.360 --> 11:36.880
解析

11:36.880 --> 11:38.080
Cookie

11:38.080 --> 11:38.800
做串

11:38.800 --> 11:39.280
是吧

11:39.280 --> 11:39.680
好

11:39.680 --> 11:40.960
那我希望弹了最后

11:40.960 --> 11:42.240
返回一个对象对吧

11:42.240 --> 11:43.600
那这个对象呢

11:44.240 --> 11:45.520
就是

11:45.520 --> 11:46.560
我们所说的

11:46.560 --> 11:48.640
把每一个什么Cookie的

11:48.640 --> 11:50.160
这个名和值

11:50.160 --> 11:52.560
拿过来变成对象的属性

11:52.560 --> 11:54.560
变成这个对象的属性的

11:54.560 --> 11:55.680
名和值

11:55.680 --> 11:56.400
OK

11:56.400 --> 11:57.360
那这一块的话

11:57.360 --> 11:58.880
我们就需要用用到

11:58.880 --> 11:59.520
我们所说的这个

11:59.520 --> 12:00.960
它Reduce怎么来用的话

12:00.960 --> 12:01.680
因为我来说

12:01.680 --> 12:02.800
因为我来说

12:02.800 --> 12:04.080
只是这个ProseCookie

12:04.080 --> 12:05.040
要接受一个参数

12:05.040 --> 12:05.840
就STR对吧

12:05.840 --> 12:06.800
接受做串

12:06.800 --> 12:08.240
那我在外界调用的时候的话

12:08.240 --> 12:09.120
直接怎么来调用呢

12:09.120 --> 12:11.120
通过ProseCookie

12:11.120 --> 12:12.000
ProseCookie

12:12.000 --> 12:12.800
它去调用

12:12.880 --> 12:16.400
往这来传这个CookieSTR

12:16.400 --> 12:17.440
那这种呢

12:17.440 --> 12:18.400
比如说它返回一个值呢

12:18.400 --> 12:19.040
是一个对象对吧

12:19.040 --> 12:20.960
我来输出这个值

12:20.960 --> 12:22.000
但是输出完以后的话

12:22.000 --> 12:22.400
好了

12:22.400 --> 12:24.480
它就是这样的那个

12:24.480 --> 12:25.760
你解析好这样的一个

12:25.760 --> 12:26.880
Cookie的一个对象

12:26.880 --> 12:27.280
对吧

12:27.280 --> 12:27.520
好

12:27.520 --> 12:28.800
那我可以说在这怎么来做

12:28.800 --> 12:29.760
首先第一步

12:29.760 --> 12:30.160
第一步

12:30.160 --> 12:31.760
我要把这桌上给它拆分

12:31.760 --> 12:33.680
怎么来拆分呢

12:33.680 --> 12:35.200
这成功关系没讲过吗

12:35.200 --> 12:37.360
用Split的方法来进行拆分

12:37.360 --> 12:39.840
那我从STR.split的

12:39.840 --> 12:40.560
通过什么

12:40.560 --> 12:42.400
通过这个分号通过的方式

12:42.480 --> 12:44.480
这个规则来进行照一个拆分的话

12:44.480 --> 12:45.840
我们来看一样

12:45.840 --> 12:47.520
我过给AR

12:47.520 --> 12:48.480
到一个

12:48.480 --> 12:49.440
好

12:49.440 --> 12:50.080
好

12:50.080 --> 12:51.440
再做一个

12:51.440 --> 12:52.800
Cookie

12:52.800 --> 12:53.360
AR

12:53.360 --> 12:53.600
好

12:53.600 --> 12:54.640
来进行照一个拆分

12:54.640 --> 12:55.520
我来看一下

12:55.520 --> 12:56.480
你拆分完了以后

12:56.480 --> 12:57.280
你这个Cookie

12:57.280 --> 12:58.400
AR它到底去啥了

12:58.400 --> 12:59.760
那么我再一次来看一样

12:59.760 --> 13:01.200
在这

13:01.200 --> 13:02.720
小心

13:02.720 --> 13:02.960
OK

13:02.960 --> 13:03.920
你可以发现

13:03.920 --> 13:05.360
第51毫

13:05.360 --> 13:05.920
这里吧

13:05.920 --> 13:07.440
第51毫这

13:07.440 --> 13:09.280
它是不是变成了一个数组对吧

13:09.280 --> 13:10.320
这数组你会发现

13:10.320 --> 13:11.200
是一对一对的

13:11.600 --> 13:13.360
这样的一个Cookie

13:13.360 --> 13:14.880
一对一对这样的Cookie

13:14.880 --> 13:16.640
一对里就这样的Cookie

13:16.640 --> 13:17.600
那么

13:17.600 --> 13:19.360
基本上我们未来去

13:19.360 --> 13:19.840
就怎么

13:19.840 --> 13:21.120
我们未来去减变

13:21.120 --> 13:23.680
我们这样的一些点一个操作

13:23.680 --> 13:25.360
我们不管这些东西更多复杂

13:25.360 --> 13:26.240
我先把这个比较

13:26.240 --> 13:28.080
麻烦一些情况给它去掉

13:28.720 --> 13:29.120
去掉

13:29.120 --> 13:29.600
去掉一下

13:33.570 --> 13:33.890
看一下

13:37.540 --> 13:39.060
这给它些去掉

13:39.060 --> 13:39.700
这样

13:39.700 --> 13:41.540
我把存心字上再来一下

13:41.540 --> 13:41.940
刷新

13:41.940 --> 13:42.420
好

13:42.420 --> 13:44.020
这样就是一对一对一对

13:44.020 --> 13:44.580
对吧

13:44.580 --> 13:45.060
一对一对

13:45.060 --> 13:46.340
那么每一对

13:46.340 --> 13:47.140
之后你会发现

13:47.140 --> 13:48.500
都是等号怎么样

13:48.500 --> 13:50.500
来进行这样的分割的准备

13:50.500 --> 13:51.380
拿那个数组以后

13:51.380 --> 13:52.180
比如说

13:52.180 --> 13:53.380
拿这个数组的话

13:53.380 --> 13:55.620
我再去把每个语言组

13:55.620 --> 13:57.860
再去把每个语言组拿出来

13:57.860 --> 14:00.980
通过通过等号的方式来拆分的话

14:00.980 --> 14:02.740
你还会得到一个新的数组

14:02.740 --> 14:04.820
这个新的数组有两个语言组

14:04.820 --> 14:05.540
第一个是它

14:05.540 --> 14:06.340
第二个是它

14:06.340 --> 14:06.900
对吧

14:06.900 --> 14:07.540
它是它

14:07.540 --> 14:07.860
是它

14:07.860 --> 14:08.020
好

14:08.020 --> 14:09.540
那第一个语言组的话

14:09.540 --> 14:11.780
我就可以让它变成一个对象的属性名

14:11.780 --> 14:12.340
把它电上去

14:12.340 --> 14:13.540
那个对象的属性值

14:13.540 --> 14:14.020
这样的话

14:14.020 --> 14:16.580
你就可以把所有的这样一个

14:16.580 --> 14:17.220
Cookie的吧

14:17.220 --> 14:20.340
全部给它变成对象的那种一些值吧

14:20.340 --> 14:21.220
那咱们来看一下

14:21.220 --> 14:22.260
我再来去这么去做

14:22.260 --> 14:23.460
比如说我随便拿一个东西去

14:23.460 --> 14:24.420
举例一下

14:24.420 --> 14:26.100
在这儿

14:26.100 --> 14:28.100
Cookie Array

14:28.100 --> 14:29.380
拿地理的东西吧

14:29.380 --> 14:31.380
通过Splay的方式

14:31.380 --> 14:32.580
再来去拆分

14:32.580 --> 14:33.140
拆分

14:33.140 --> 14:33.700
拆分一下

14:33.700 --> 14:34.900
不是说

14:34.900 --> 14:35.860
我再去输出一下吧

14:35.860 --> 14:36.820
直接输出你

14:36.820 --> 14:37.780
来看一下

14:37.780 --> 14:38.420
输出的是啥

14:38.420 --> 14:39.380
输出的是啥

14:39.380 --> 14:40.340
来看一下

14:40.340 --> 14:41.940
刷新

14:42.020 --> 14:42.660
你发现呢

14:42.660 --> 14:43.780
哎 谁啊

14:43.780 --> 14:44.660
是他

14:44.660 --> 14:45.940
是他

14:45.940 --> 14:46.500
第五是样的吧

14:46.500 --> 14:46.900
第五是样的

14:46.900 --> 14:47.300
你看这

14:47.300 --> 14:48.180
是不是他

14:48.180 --> 14:49.060
他怎么样

14:49.060 --> 14:49.700
就拆分出来吧

14:49.700 --> 14:50.180
对吧

14:50.180 --> 14:51.140
那这个东西

14:51.140 --> 14:52.820
它俩是一对Cookie对不对

14:52.820 --> 14:54.420
那这个东西可以作为

14:54.420 --> 14:56.020
这个Cookie的一个属性名字

14:56.020 --> 14:58.180
它可以准备这样一个属性值

14:58.180 --> 14:59.300
那有这样一个

14:59.300 --> 15:00.580
既然基本的一个思想

15:00.580 --> 15:01.460
那个储备以后

15:01.460 --> 15:02.740
我们可以这么来玩

15:02.740 --> 15:03.940
来看看

15:03.940 --> 15:04.660
首先

15:04.660 --> 15:05.380
我通过Splay的

15:05.380 --> 15:06.260
把它拆分一个输出

15:06.260 --> 15:07.300
拆分输出以后能看到了

15:07.300 --> 15:07.860
我这样

15:07.860 --> 15:09.060
通过Cookie Array

15:09.060 --> 15:09.940
I don't reduce

15:09.940 --> 15:11.540
Ie docee

15:11.620 --> 15:12.740
它将它有什么用呢

15:12.740 --> 15:13.380
很有用

15:13.380 --> 15:14.340
你看好了

15:14.340 --> 15:16.020
我们之前讲这个Reduce

15:16.020 --> 15:16.580
需要什么

15:16.580 --> 15:17.620
需要基于

15:17.620 --> 15:18.260
你看

15:18.260 --> 15:19.460
需要基于

15:19.460 --> 15:21.460
你所传的这个对象对吧

15:21.460 --> 15:21.940
不

15:21.940 --> 15:22.740
需要基于

15:22.740 --> 15:24.740
你所这个输出的一些值

15:24.740 --> 15:27.140
来去操作你这样的一个对象的

15:27.140 --> 15:27.700
那好了

15:27.700 --> 15:28.820
那首先

15:28.820 --> 15:30.340
我在调用它那时候的话

15:30.340 --> 15:31.860
我要传递一个函数

15:31.860 --> 15:33.140
这个函数里面

15:33.140 --> 15:34.100
有几个形材

15:34.100 --> 15:35.300
ProValue

15:36.820 --> 15:38.980
再来一个叫做SurValue

15:39.940 --> 15:42.500
再来一个叫做InnerS

15:42.500 --> 15:43.540
再来一个Selve

15:43.540 --> 15:44.340
那在这呢

15:44.340 --> 15:46.020
我再来一个叫做一个ObiG

15:46.020 --> 15:48.720
ObiG

15:48.720 --> 15:49.120
对吧

15:49.120 --> 15:49.680
好了

15:49.680 --> 15:51.120
那传递是什么意思呢

15:51.120 --> 15:52.160
比如说

15:52.160 --> 15:52.720
数

15:52.720 --> 15:54.480
这个函数每次在这个时候的话

15:54.480 --> 15:55.200
OK

15:55.200 --> 15:56.000
我都希望

15:56.000 --> 15:57.200
这个ProValue是这样

15:57.200 --> 15:59.600
是这样的一个ObiG

15:59.600 --> 16:00.080
对吧

16:00.080 --> 16:00.960
那我都需要

16:00.960 --> 16:02.000
让这个函数每次

16:02.000 --> 16:03.440
这一弯都反而一个ProValue

16:03.440 --> 16:04.720
就接地一样对不对

16:04.720 --> 16:05.680
每次执行

16:05.680 --> 16:06.240
怎么样

16:06.240 --> 16:07.360
都最后去

16:07.360 --> 16:09.360
都最后去访为它

16:09.360 --> 16:10.080
那有的时候

16:10.080 --> 16:12.160
这个函数的每一个ProValue

16:12.160 --> 16:13.760
其实都是它

16:13.760 --> 16:14.800
那为什么这么做呢

16:14.800 --> 16:17.040
就是我要

16:17.040 --> 16:18.480
让每次函数的时候

16:18.480 --> 16:20.080
对到这个SurValue

16:20.080 --> 16:23.280
对这个SurValue跟它

16:23.280 --> 16:24.080
怎么样

16:24.080 --> 16:26.560
去形成一些来的一个操作

16:26.560 --> 16:28.160
那你要知道这个SurValue是啥

16:28.160 --> 16:28.720
再看一下

16:28.720 --> 16:30.960
SurValue啥

16:30.960 --> 16:32.080
数数ProValue

16:32.080 --> 16:33.520
SurValue

16:33.520 --> 16:34.240
再来看一看

16:34.240 --> 16:35.600
咱俩先看一看

16:35.600 --> 16:36.560
它到底是啥

16:36.560 --> 16:38.160
刷新一次

16:38.160 --> 16:38.800
OK

16:38.800 --> 16:39.680
你也发现

16:39.760 --> 16:40.960
这个每次的ProValue

16:40.960 --> 16:41.520
怎么样

16:41.520 --> 16:42.560
都是那个对

16:42.560 --> 16:43.920
都是那个OBJ对象

16:43.920 --> 16:44.400
对不对

16:44.400 --> 16:45.840
那每次SurValue

16:45.840 --> 16:47.120
都是不同的啥

16:47.120 --> 16:48.240
那一对

16:48.240 --> 16:48.960
一对

16:48.960 --> 16:49.440
一对

16:49.440 --> 16:49.680
一对

16:49.680 --> 16:50.720
一个Cookie值对吧

16:50.720 --> 16:51.200
那如果说

16:51.200 --> 16:52.240
我能把这一对

16:52.240 --> 16:53.760
一对的这种Cookie值

16:53.760 --> 16:55.040
给它再插一下

16:55.040 --> 16:55.600
插一层什么

16:55.600 --> 16:56.320
插一层它

16:56.320 --> 16:57.040
它的话

16:57.040 --> 16:58.800
我让它作为它的一个属性

16:58.800 --> 17:00.160
它作为它的一个属性值对吧

17:00.160 --> 17:01.520
那整个循环下来以后的话

17:01.520 --> 17:02.640
这个对象

17:02.640 --> 17:04.400
就不用我们解析什么了

17:04.400 --> 17:06.240
那再来看行不行啊

17:06.240 --> 17:09.040
首先我做做SurValue

17:09.120 --> 17:10.000
splay的一下

17:10.000 --> 17:11.840
通过等号的方式来拆分

17:11.840 --> 17:12.240
拆分

17:12.240 --> 17:14.400
我让它这边这个数组

17:14.400 --> 17:15.120
数组

17:15.120 --> 17:16.880
它这个数组的第零位啥

17:16.880 --> 17:17.920
就是第零位

17:17.920 --> 17:19.840
就要作为这个PRE

17:19.840 --> 17:20.960
VLE

17:20.960 --> 17:23.600
它的一个属性值

17:23.600 --> 17:24.720
它有属性名

17:24.720 --> 17:26.080
它有属性名

17:26.080 --> 17:28.080
当时说ProValue中号它对吧

17:28.080 --> 17:28.560
OK

17:28.560 --> 17:30.000
所以我想给它

17:30.000 --> 17:31.360
这个属性名去放一个值

17:31.360 --> 17:32.160
对值啥呢

17:32.160 --> 17:34.160
是OBJ第一对吧

17:34.160 --> 17:35.360
只对你这样一个值

17:35.360 --> 17:36.640
比如说OBJ零是啥

17:36.640 --> 17:38.000
正对于第一圈它来讲

17:38.000 --> 17:40.080
的话就这个PSTM对吧

17:40.080 --> 17:41.200
那OVE呢

17:41.200 --> 17:42.720
是对于等号后面这个E5什么

17:42.720 --> 17:43.760
R6什么什么的

17:43.760 --> 17:44.800
现在咱来看

17:44.800 --> 17:45.520
我刷新一次

17:45.520 --> 17:46.960
你看整个过程是啥

17:48.640 --> 17:50.080
首先你看是它对不对

17:50.080 --> 17:51.840
第一圈一完生以后怎么样

17:51.840 --> 17:53.280
还有还有这个值了对吧

17:53.280 --> 17:54.240
第二圈一完生以后呢

17:54.240 --> 17:54.880
就好了

17:54.880 --> 17:55.600
还有它

17:55.600 --> 17:56.560
又它对不对

17:56.560 --> 17:58.080
一圈一圈一圈下以后

17:58.080 --> 17:58.800
你会发现

17:58.800 --> 17:59.760
最后这个对象

17:59.760 --> 18:01.200
你看第61行

18:01.200 --> 18:03.280
数数的这个对象

18:03.280 --> 18:04.880
就变成了啥

18:04.880 --> 18:05.440
它说法

18:05.440 --> 18:07.520
你看第61行是什么

18:07.600 --> 18:08.320
是这个

18:08.320 --> 18:09.840
整个这个

18:09.840 --> 18:10.880
PressedCookie对吧

18:10.880 --> 18:12.480
整个这个PressedCookie

18:12.480 --> 18:13.920
被解析完以后

18:13.920 --> 18:14.400
说法

18:14.400 --> 18:15.840
说法这个值对不对

18:15.840 --> 18:16.560
但我不做法

18:16.560 --> 18:17.600
我也喜欢它

18:17.600 --> 18:18.880
我做法也可以

18:18.880 --> 18:20.080
我就直接

18:20.080 --> 18:21.840
返回这个Cookie

18:21.840 --> 18:22.880
也就是

18:22.880 --> 18:24.240
比如说最后CookieRate

18:24.240 --> 18:25.200
第二RateDose

18:25.200 --> 18:26.160
执行完了以后

18:26.160 --> 18:28.160
它说返回的值

18:28.160 --> 18:28.880
是谁呀

18:28.880 --> 18:29.840
取决于最后一次

18:29.840 --> 18:30.560
寒数

18:30.560 --> 18:32.080
仅能的ProValue

18:32.080 --> 18:33.120
由于我这种形式

18:33.120 --> 18:34.400
你会发现

18:34.400 --> 18:36.480
我一开始传入到这个OBJ

18:36.960 --> 18:37.520
它不停的

18:37.520 --> 18:39.120
作为这样的一个接力棒对吧

18:39.120 --> 18:40.640
不停的传给下一个

18:40.640 --> 18:42.080
最后一个GIN以后的话

18:42.080 --> 18:43.760
其实还是这个OBJ对吧

18:43.760 --> 18:44.480
那有说相当于

18:44.480 --> 18:45.680
Reduce执行完以后的话

18:45.680 --> 18:47.840
其实返回那个值是谁呀

18:47.840 --> 18:48.880
就是这个OBJ

18:48.880 --> 18:50.640
那最后我通过

18:50.640 --> 18:52.000
Return返回

18:52.000 --> 18:53.680
你执行完后的一个结果

18:53.680 --> 18:55.760
实际上就是相当于PressedCookie

18:55.760 --> 18:57.520
STR再执行完以后

18:57.520 --> 18:58.480
返回的就是谁呀

18:58.480 --> 19:00.720
就是就是它呗

19:00.720 --> 19:01.520
是吧

19:01.520 --> 19:02.560
有说这个螺旋位

19:02.560 --> 19:03.920
它减换了一下

19:03.920 --> 19:05.200
它减换了再来看一看

19:05.280 --> 19:07.120
现在PressedCookieSTR

19:07.120 --> 19:07.840
执行完以后

19:07.840 --> 19:08.240
好

19:08.240 --> 19:09.440
所以返回的值是啥

19:10.560 --> 19:11.840
69号对吧

19:11.840 --> 19:13.120
看69号

19:13.120 --> 19:13.760
这样

19:13.760 --> 19:16.160
就是这样的一个对象

19:16.160 --> 19:17.440
就是这样的对象

19:17.440 --> 19:19.520
那如果这样的对象有什么好处呢

19:19.520 --> 19:21.440
我给它先给你注释一下

19:21.440 --> 19:24.000
然后这个对象的好处是这样的

19:24.000 --> 19:24.240
好

19:24.240 --> 19:26.000
我先给你卧了一个

19:26.640 --> 19:27.320
Pookie

19:27.320 --> 19:28.000
Pookie

19:29.520 --> 19:30.240
好

19:30.240 --> 19:31.680
然后这个对象的好处就是

19:32.320 --> 19:34.080
我可以通过这个名字

19:34.240 --> 19:35.760
我可以这个名字来去

19:35.760 --> 19:37.680
相的去互取道理这样的一个值了

19:37.680 --> 19:38.720
就说Cookie

19:39.280 --> 19:40.160
后面直接一颗车对吧

19:40.160 --> 19:40.960
它是个样子吧

19:40.960 --> 19:41.120
好

19:41.120 --> 19:43.200
我通过第二PressedCookie

19:44.080 --> 19:44.800
值怎么样

19:44.800 --> 19:45.120
对吧

19:45.120 --> 19:45.280
对

19:45.280 --> 19:46.080
成功了对吧

19:46.080 --> 19:48.240
由于我进行一些这样的一个讯号

19:48.240 --> 19:50.480
进行这样一个解析的一个操作的话

19:50.480 --> 19:52.400
我可以很轻松的

19:52.400 --> 19:54.560
互取到任何一个怎么样

19:54.560 --> 19:57.360
任何一个这样的一个Cookie值

19:57.360 --> 19:59.280
根据它的名字来会走它这样一个值

20:00.080 --> 20:00.320
OK

20:00.320 --> 20:02.080
那这是我们在这个

20:02.800 --> 20:04.240
后续开工中对吧

20:04.240 --> 20:05.680
把复杂的问题

20:05.680 --> 20:07.040
通过一些的工具

20:07.040 --> 20:08.080
通过一些的工工函数

20:08.080 --> 20:09.200
简单化了这些

20:09.200 --> 20:11.200
一些的也必要的一个操作

20:11.200 --> 20:13.360
那这种必要的操作你会发现

20:13.360 --> 20:15.920
它也接触这样的一个Reduce方法

20:15.920 --> 20:16.400
好

20:16.400 --> 20:17.760
说到现在的话

20:17.760 --> 20:18.560
到现在的话

20:18.560 --> 20:20.000
这个Reduce

20:20.000 --> 20:21.200
怎么来用对吧

20:21.200 --> 20:23.920
大概有什么大概有什么样的一个用处

20:23.920 --> 20:25.760
你应该有点印象了对吧

20:33.300 --> 20:34.420
操作开始没声音了

20:38.800 --> 20:40.560
这个Reduce

20:40.560 --> 20:41.680
是不是大概可以这么用的话

20:41.680 --> 20:44.240
应该是能感知到对吧

20:44.240 --> 20:45.840
还是有用的对不对

20:45.840 --> 20:46.240
对吧

20:46.240 --> 20:47.040
还是有用的吧

20:47.040 --> 20:48.080
OK

20:48.080 --> 20:50.240
那知道它大概怎么用的话

20:50.240 --> 20:52.640
但是咱们不要不要求你

20:52.640 --> 20:53.600
你喜欢这个以后的话

20:53.600 --> 20:55.120
你立马就会在各个业务中

20:55.120 --> 20:55.360
对吧

20:55.360 --> 20:55.760
行

20:55.760 --> 20:57.040
你用不上对吧

20:57.040 --> 20:58.080
这还是很猛的

20:58.080 --> 20:58.480
好

20:58.480 --> 21:00.000
现在领外它怎么用就可以了

21:00.000 --> 21:00.720
简单的

21:00.720 --> 21:01.680
我们先来看一下

21:01.680 --> 21:02.720
这个怎么来写

21:02.720 --> 21:03.680
是怎么来写

21:03.680 --> 21:04.480
对吧

21:04.480 --> 21:06.560
我就不用跟你说了

21:06.720 --> 21:07.280
你傻了

21:07.280 --> 21:08.560
Reduce Reduce

21:08.560 --> 21:10.480
它是Reduce

21:10.480 --> 21:11.680
相当于Reduce Left

21:11.680 --> 21:13.520
就说它在去变例的时候

21:13.520 --> 21:15.760
这个SR Value

21:15.760 --> 21:16.160
是什么

21:16.160 --> 21:19.200
是从B0变例到最后一个

21:19.200 --> 21:20.000
最后一个

21:20.000 --> 21:22.160
但Reduce Reduce

21:22.160 --> 21:24.720
没有Reduce Left

21:24.720 --> 21:25.920
Reduce就相当于

21:25.920 --> 21:28.160
你可以练成相当于是Reduce Left

21:28.160 --> 21:30.320
Reduce Reduce是什么意思

21:30.320 --> 21:32.160
你再去变成这个SR的手段

21:32.160 --> 21:33.200
这个SR这个指导

21:33.200 --> 21:35.760
实际上是从后往前来变例的

21:35.840 --> 21:36.800
咱们来看一下

21:36.800 --> 21:38.080
我刷新语词

21:38.080 --> 21:39.360
你能说

21:39.360 --> 21:40.560
如果是这个

21:40.560 --> 21:42.080
用Reduce的话

21:42.080 --> 21:43.600
的确只是PSTM对吧

21:43.600 --> 21:44.320
我再刷新一下

21:44.320 --> 21:47.980
咱们来看一下

21:47.980 --> 21:48.380
是

21:48.380 --> 21:49.100
我主持的

21:49.100 --> 21:49.980
我主持来看一下

21:49.980 --> 21:53.070
刷新语词

21:53.070 --> 21:57.120
对啊

21:57.120 --> 21:57.680
看一下

21:57.680 --> 21:58.160
好

21:58.160 --> 21:59.280
的确指就不是它对吧

21:59.280 --> 22:00.160
而最后一个是谁

22:00.160 --> 22:02.160
最后一个指是这个PSTM

22:03.120 --> 22:03.440
好

22:03.440 --> 22:06.000
这边会按单词来去排序

22:06.000 --> 22:07.760
按单词来去排序

22:07.760 --> 22:08.560
什么意思呢

22:08.560 --> 22:09.680
就是

22:09.680 --> 22:11.760
如果说你用Reduce Left的话

22:11.760 --> 22:12.640
那的确指是啥

22:12.640 --> 22:14.800
那的确指一定是什么

22:14.800 --> 22:16.640
一定是这个Cooking Red

22:16.640 --> 22:17.200
这样

22:17.200 --> 22:18.240
就是

22:18.240 --> 22:20.000
你用这个Reduce的话

22:20.000 --> 22:21.120
Reduce的话

22:21.120 --> 22:21.840
那这个

22:21.840 --> 22:23.840
第一个这个SR Value的话

22:23.840 --> 22:24.320
一定是啥

22:24.320 --> 22:25.280
一定是这个

22:25.280 --> 22:26.240
Cooking Red这样

22:26.240 --> 22:26.960
这样的一个

22:26.960 --> 22:28.080
地饼恶指

22:28.080 --> 22:29.040
第一一个指

22:29.040 --> 22:30.880
那所以它一定是饼对吧

22:30.880 --> 22:32.160
那如果说是

22:32.160 --> 22:34.320
你用Ret呢

22:34.320 --> 22:35.520
下方一句话

22:35.520 --> 22:36.240
它就一定啥

22:36.240 --> 22:37.760
它就一定不是地饼了对吧

22:37.760 --> 22:39.280
它一定不是它第一个呗

22:39.280 --> 22:40.560
一定是它最后一个

22:40.560 --> 22:41.200
咱这样

22:41.280 --> 22:42.480
来看一下是不是Inverse

22:42.480 --> 22:43.280
能不能动吗

22:43.280 --> 22:43.760
Inverse

22:43.760 --> 22:44.400
你看一下

22:44.400 --> 22:45.120
往我说一下

22:45.120 --> 22:45.760
射出

22:47.040 --> 22:47.680
你会发现

22:47.680 --> 22:49.040
这说是从最后有怎么样

22:49.040 --> 22:50.000
向前来的对吧

22:50.000 --> 22:51.760
从13一直到0对吧

22:51.760 --> 22:52.240
咱看一下

22:52.240 --> 22:53.840
如果说你不用这个

22:53.840 --> 22:54.480
啊

22:54.480 --> 22:55.680
用Reduce它对吧

22:55.680 --> 22:56.400
它就是

22:56.400 --> 22:57.520
按照一个正常的顺位对吧

22:57.520 --> 22:59.120
从0到它13

22:59.120 --> 22:59.680
就说

22:59.680 --> 23:01.200
你不用讲这个Reduce Left

23:01.200 --> 23:02.320
用Reduce就可以了对吧

23:02.320 --> 23:03.280
如果你需要

23:03.280 --> 23:04.000
呃

23:04.000 --> 23:05.360
相反方向去BnL的话

23:05.360 --> 23:06.800
你再把这个Rest还写一下

23:06.800 --> 23:07.360
你可以啊

23:08.240 --> 23:08.800
怎么这样

23:08.800 --> 23:10.560
怎么写一下这个Reduce圆码

23:10.560 --> 23:10.960
圆码

23:10.960 --> 23:11.760
怎么来写啊

23:11.760 --> 23:12.560
万一很难

23:12.560 --> 23:13.200
我觉得啊

23:13.200 --> 23:14.000
也不难

23:14.000 --> 23:14.480
也不难

23:14.480 --> 23:15.520
咱来看一下

23:15.520 --> 23:16.000
我在这

23:17.760 --> 23:18.320
啊

23:18.320 --> 23:19.040
还是呢

23:19.040 --> 23:19.840
Reduce

23:19.840 --> 23:20.640
Rest

23:20.640 --> 23:21.840
PLTRP

23:21.840 --> 23:22.640
Rest

23:22.640 --> 23:23.200
写什么

23:23.200 --> 23:23.760
写这样的一个

23:23.760 --> 23:24.720
叫Mariduce

23:24.720 --> 23:25.600
ITUC

23:25.600 --> 23:26.240
好

23:26.240 --> 23:27.040
Mariduce

23:27.040 --> 23:27.520
在这呢

23:27.520 --> 23:28.320
写个函数

23:28.320 --> 23:29.200
我说这个函数

23:29.200 --> 23:30.000
看一下

23:30.000 --> 23:30.960
这个函数呢

23:30.960 --> 23:32.160
也需要接受几个函数

23:32.160 --> 23:33.280
首先第一个是必有的

23:33.280 --> 23:33.920
第二个呢

23:33.920 --> 23:34.800
也是必有的

23:34.800 --> 23:35.600
Innation

23:35.600 --> 23:37.760
NITL

23:37.760 --> 23:38.960
InnationValue

23:38.960 --> 23:39.440
对吧

23:39.440 --> 23:40.800
L值都得有对吧

23:40.800 --> 23:41.280
好

23:41.280 --> 23:42.080
那一玩以后呢

23:43.680 --> 23:44.320
一玩以后呢

23:44.320 --> 23:44.480
好

23:44.480 --> 23:45.360
首先我在这啊

23:45.360 --> 23:47.200
也要做这样一个套座啊

23:47.200 --> 23:47.600
就是

23:49.360 --> 23:50.640
我得先去

23:50.640 --> 23:50.960
呃

23:53.280 --> 23:54.800
我得先去问一个

23:54.800 --> 23:56.400
问一个这样的一个Less

23:56.400 --> 23:56.800
啊

23:56.800 --> 23:57.760
看到一个DistanceLess

23:57.760 --> 23:58.640
因为喜欢Less

23:58.640 --> 23:59.760
也必然要喜欢这么多

23:59.760 --> 24:00.480
全是在

24:00.480 --> 24:01.520
再问一个这样的Dest

24:02.000 --> 24:02.240
啊

24:03.280 --> 24:04.160
这个Dest呢等于

24:04.160 --> 24:04.720
等于啥呢

24:04.720 --> 24:05.360
这个Dest的话

24:05.360 --> 24:07.120
比如等于一个Arrogance

24:07.120 --> 24:07.680
啊

24:07.680 --> 24:08.800
我都不说了

24:08.800 --> 24:09.680
是这个

24:09.760 --> 24:11.200
原生的Reduce

24:11.200 --> 24:12.240
是不提供的

24:12.240 --> 24:13.520
是不提供这个改变

24:13.520 --> 24:14.640
Dest这个能力的

24:14.640 --> 24:15.440
但我们写一个

24:15.440 --> 24:16.160
可以提供的呗

24:16.160 --> 24:16.880
对不对

24:16.880 --> 24:17.760
那我们就知道

24:17.760 --> 24:19.440
这个第一个值和第二个值的话

24:19.440 --> 24:21.360
一定是有它对这样一个

24:21.360 --> 24:21.600
呃

24:21.600 --> 24:22.560
什么寒兽和兽的话

24:22.560 --> 24:23.280
一个值对吧

24:23.280 --> 24:24.560
那我说第三个值是吧

24:24.560 --> 24:25.840
要说你要真正想改变

24:25.840 --> 24:27.680
这个寒兽之中的什么Dest的话

24:27.680 --> 24:29.280
它指引你传第三个值嘛

24:29.280 --> 24:30.240
第三个值已经在你传

24:30.240 --> 24:31.520
因为是在这传对不对

24:31.520 --> 24:32.880
那有说第三个实际

24:32.880 --> 24:33.920
材数的话

24:33.920 --> 24:34.560
好

24:34.560 --> 24:35.120
那好了

24:35.120 --> 24:36.160
那Arrogance这个应该

24:36.160 --> 24:36.960
应该是1了

24:36.960 --> 24:38.160
应该是2了对吧

24:38.240 --> 24:39.680
说如果你传的话就有你

24:39.680 --> 24:40.800
你传的话就有对吧

24:40.800 --> 24:41.520
好

24:41.520 --> 24:41.600
好

24:41.600 --> 24:42.080
再来

24:43.200 --> 24:43.840
那它什么呢

24:43.840 --> 24:45.040
那我还需要一个值

24:45.040 --> 24:45.600
这是什么

24:45.600 --> 24:47.280
这个值叫做一个NestValue

24:47.280 --> 24:47.840
它具体什么意思

24:47.840 --> 24:48.480
我来一会说

24:48.480 --> 24:49.600
我现在是个空

24:49.600 --> 24:51.040
我现在是个空啊

24:51.040 --> 24:52.320
现在我现在学过了

24:52.320 --> 24:54.400
希望它不会挨得有灵

24:54.400 --> 24:56.960
而挨了小鱼下

24:56.960 --> 24:59.200
小鱼上的小鱼一个Dest

24:59.200 --> 25:00.080
一个Lest

25:00.080 --> 25:00.560
好了

25:00.560 --> 25:01.200
再加

25:01.200 --> 25:01.920
再加

25:01.920 --> 25:02.320
好

25:02.320 --> 25:03.120
然后呢

25:03.120 --> 25:03.840
我怎么做呢

25:03.840 --> 25:05.440
我要去送个S来做

25:05.440 --> 25:07.360
我要去执行一下这个方式

25:07.680 --> 25:08.320
Apply

25:09.440 --> 25:10.640
还是一样的对吧

25:10.640 --> 25:11.440
跟之前是一样的

25:11.440 --> 25:13.200
就是我需要去改变它这样的一个Dest

25:13.200 --> 25:14.160
然后呢

25:14.160 --> 25:15.040
相应的

25:15.040 --> 25:16.080
这门值呢

25:16.080 --> 25:17.760
第一个ProValue

25:17.760 --> 25:18.560
我先不说

25:18.560 --> 25:19.520
从第二开始

25:19.520 --> 25:20.400
还有第二个什么呢

25:20.400 --> 25:21.120
就是这个Dest

25:21.120 --> 25:21.920
从后来

25:21.920 --> 25:22.640
第三个呢

25:22.640 --> 25:23.920
是第四个呢

25:23.920 --> 25:24.480
是这个

25:25.200 --> 25:25.680
Dest

25:26.320 --> 25:26.560
好

25:26.560 --> 25:27.760
是Dest

25:27.760 --> 25:29.440
那这个值场呢

25:29.440 --> 25:30.320
这是我们

25:30.320 --> 25:31.040
我们说的一件事

25:31.040 --> 25:32.240
应该是这个InnationValue

25:32.240 --> 25:34.160
应该是InnationValue

25:34.160 --> 25:35.440
那你要知道一点

25:35.600 --> 25:37.440
你在执行这个第一次的时候

25:37.440 --> 25:37.680
你看

25:37.680 --> 25:39.360
你在这个执行第一次的时候

25:39.360 --> 25:41.280
你让它是InnationValue的

25:41.280 --> 25:41.680
或者说

25:41.680 --> 25:42.240
干嘛

25:42.240 --> 25:44.080
你就还说在执行第一次的时候

25:44.080 --> 25:46.240
你让它是丢在InnationValue

25:46.240 --> 25:47.120
我是没问题的

25:47.120 --> 25:48.960
那你在执行第二次的时候呢

25:48.960 --> 25:49.840
它是谁

25:49.840 --> 25:52.320
就取决于你这个上一次执行的时候

25:52.320 --> 25:53.520
反回执行它是谁了

25:53.520 --> 25:55.520
你要说上一次执行的这个反回执

25:55.520 --> 25:56.960
要作为下一次执行的时候

25:56.960 --> 25:57.640
就第一个执

25:57.640 --> 25:58.000
对吧

25:58.000 --> 25:59.040
那这怎么办呢

25:59.040 --> 25:59.520
好

26:00.960 --> 26:01.520
他们怎么做啊

26:01.520 --> 26:02.000
好

26:02.000 --> 26:03.360
有些人好像在使Value

26:03.920 --> 26:05.200
InnationValue

26:06.400 --> 26:07.440
那我在这呢

26:07.440 --> 26:08.480
NestValue

26:08.480 --> 26:09.600
我放这

26:09.600 --> 26:11.600
现在至少我能保证

26:11.600 --> 26:14.000
这个函数在第一次执行的时候

26:14.000 --> 26:15.840
这四个参数是没问题的

26:15.840 --> 26:16.400
对吧

26:16.400 --> 26:18.640
它是传下来InnationValue

26:18.640 --> 26:20.800
它是对应了数的那个元素

26:20.800 --> 26:21.680
它是所以

26:21.680 --> 26:24.160
它是对了这样一个数组本身

26:24.160 --> 26:24.720
对吧

26:24.720 --> 26:26.160
数组本身

26:26.160 --> 26:27.840
那在第二次执行的时候呢

26:27.840 --> 26:31.120
我需要让这个位置是啥

26:31.120 --> 26:33.120
这上一次执行的那个结果

26:33.120 --> 26:33.600
对吧

26:33.600 --> 26:35.040
这时候可以怎么做呢

26:35.120 --> 26:35.840
很巧妙

26:35.840 --> 26:36.720
可能就C一下

26:36.720 --> 26:38.720
在这可能就给它等于一个时辈了

26:38.720 --> 26:39.120
好

26:39.120 --> 26:40.000
分明分开好了

26:40.800 --> 26:42.720
首先第一圈在执行的时候的话

26:42.720 --> 26:43.200
对吧

26:43.200 --> 26:43.520
好

26:43.520 --> 26:44.800
一个是执行等号

26:44.800 --> 26:45.520
右门了对吧

26:45.520 --> 26:46.480
然后右门了

26:46.480 --> 26:47.840
右门的先计算

26:47.840 --> 26:49.040
再去复识对不对

26:49.040 --> 26:50.400
右门在执行的时候的话好了

26:50.400 --> 26:51.520
这个NestValue

26:51.520 --> 26:53.680
就是你传下来InnationValue

26:53.680 --> 26:55.360
满足这四个值对吧

26:55.360 --> 26:57.280
满足这四个是没问题的

26:57.280 --> 26:57.680
好了

26:57.680 --> 26:59.360
那执行完以后的反回时

26:59.360 --> 27:01.120
我又给了NestValue

27:01.120 --> 27:01.680
对吧

27:01.680 --> 27:03.120
那你在第二圈的时候

27:03.120 --> 27:03.920
你会发现点呢

27:04.000 --> 27:05.360
它还是先执行这对吧

27:05.360 --> 27:06.400
那执行这的时候呢

27:07.120 --> 27:08.160
这是NestValue

27:08.160 --> 27:11.520
就已经变成了上一期还是进一步的结果了

27:11.520 --> 27:12.640
当你这么完操

27:12.640 --> 27:13.760
当你这么操完以后的话

27:13.760 --> 27:14.240
对吧

27:14.240 --> 27:16.240
正好能符合我们Reduce这种

27:16.240 --> 27:18.320
像接力棒这种操作

27:19.120 --> 27:20.080
那接下来呢

27:20.080 --> 27:21.040
当我做的这个新环

27:21.040 --> 27:21.680
确保这以后的话

27:21.680 --> 27:23.120
我直接委屈什么

27:23.120 --> 27:26.080
委屈这个NestValue就可以了

27:26.080 --> 27:26.640
对吧

27:26.640 --> 27:26.800
好

27:26.800 --> 27:27.440
最后

27:27.440 --> 27:28.800
因为这种进行完以后的话

27:28.800 --> 27:28.960
好

27:28.960 --> 27:31.920
它把最后一个反回时去给它对吧

27:31.920 --> 27:32.720
那我们说了

27:32.720 --> 27:33.360
Reduce

27:33.360 --> 27:34.320
这个反回时

27:34.320 --> 27:36.320
Reduce这个反回时是什么

27:36.320 --> 27:37.280
几个反回时

27:37.280 --> 27:38.720
它几个给我的是什么对吧

27:38.720 --> 27:39.520
那我这么一做

27:39.520 --> 27:40.880
这边做完以后咱们来看一下

27:40.880 --> 27:42.560
我再把它全部都解开

27:44.560 --> 27:45.280
解开以后的话

27:45.280 --> 27:45.840
我用它

27:45.840 --> 27:48.560
我这边Reduce就不用它了

27:48.560 --> 27:49.120
因为我自己的

27:49.120 --> 27:50.800
用MarioReduce再来看一下

27:50.800 --> 27:51.600
结果是不是一样了

27:51.600 --> 27:53.200
刷新一次来来看一看

27:53.200 --> 27:53.840
不知道我错的

27:53.840 --> 27:55.120
它没忘错的

27:55.120 --> 27:56.080
这我先试试一下

27:56.080 --> 27:57.520
它是我先试试一下

27:57.520 --> 27:59.040
我刷新一下咱们来看一看

27:59.040 --> 28:00.400
在这来个Cookie

28:01.360 --> 28:02.400
这你会发现

28:02.400 --> 28:03.200
OK怎么样

28:03.200 --> 28:04.480
依旧是可以去解开对吧

28:04.480 --> 28:06.480
你说我现在用我自己写的方法

28:06.480 --> 28:08.160
也可以去完成

28:08.160 --> 28:10.400
也可以很好地去完成这样的一个效果

28:10.400 --> 28:11.440
那最后问问

28:11.440 --> 28:12.160
这个Reduce

28:12.160 --> 28:13.920
Reduce它是怎么来写的对吧

28:13.920 --> 28:14.560
它很简单

28:14.560 --> 28:15.680
那你在循环的时候的话

28:15.680 --> 28:17.280
我让它从Dance开始

28:17.280 --> 28:18.000
从这来

28:18.000 --> 28:19.120
大家等于留着行吧

28:21.120 --> 28:22.160
那就是方向上

28:22.160 --> 28:23.440
一个便利的一个问题

28:23.440 --> 28:23.920
对不对

28:23.920 --> 28:25.040
它很简单对吧

28:25.040 --> 28:26.240
原码你会以后的话

28:26.240 --> 28:27.440
你想要去改的话

28:27.440 --> 28:28.240
改一个地方的话

28:28.240 --> 28:30.000
什么情况就发生变化

28:30.560 --> 28:31.040
咱们这样

28:31.040 --> 28:32.240
不要它从右向左

28:32.240 --> 28:33.360
还是从左向上右

28:33.360 --> 28:34.720
那就还来这一块咱们来写

28:36.240 --> 28:36.880
OK

28:36.880 --> 28:37.600
咱们去写对吧

28:39.760 --> 28:41.200
那这样的话

28:41.200 --> 28:43.200
这样的话就没问题了

28:43.200 --> 28:43.760
对吧

28:43.760 --> 28:44.400
就没问题了

28:44.400 --> 28:46.080
现在我们已经

28:46.080 --> 28:48.800
已经把ES3和ES5中

28:48.800 --> 28:49.920
所有的这些试试方法

28:49.920 --> 28:51.040
基本上已经全讲完了

28:51.040 --> 28:53.200
并且在这阶段的话

28:53.200 --> 28:54.960
我还让你去体验一下

28:54.960 --> 28:56.640
怎么把原码怎么来写

28:56.640 --> 28:58.160
我们后面再学JQ的时候

28:58.160 --> 28:59.520
有很多原码的课程

28:59.600 --> 29:00.320
你要去看看

29:00.320 --> 29:01.520
你要自己去写一写

29:01.520 --> 29:02.000
对吧

29:02.000 --> 29:03.200
因为很多方法的话

29:03.200 --> 29:04.960
因为这课里边

29:04.960 --> 29:06.000
还提供了一些方法

29:06.000 --> 29:07.280
叫ES3的方法

29:07.280 --> 29:09.280
就是可以让你去扩展

29:09.280 --> 29:11.360
一些这样的一个掏洞

29:11.360 --> 29:13.120
可以让你去扩展

29:13.120 --> 29:14.000
为什么呢

29:14.000 --> 29:15.760
因为即使是那么多人

29:15.760 --> 29:17.520
去开发了这样的JQ的库的话

29:17.520 --> 29:19.760
也没有办法覆盖所有的区学

29:19.760 --> 29:21.280
如果你有额外的特殊区学的话

29:21.280 --> 29:21.840
你要怎么办

29:21.840 --> 29:23.280
你要自己去写

29:23.280 --> 29:24.240
就是说这一块的话

29:25.840 --> 29:27.120
我们希望

29:27.120 --> 29:28.160
你在学习任何一个库

29:28.160 --> 29:29.120
从框架的时候

29:29.120 --> 29:31.200
都要去尝试去了解一下

29:31.200 --> 29:32.000
它原码是怎么回事

29:32.000 --> 29:32.240
对吧

29:32.240 --> 29:34.000
它思想是怎么回事

29:34.000 --> 29:36.400
咱们这个算是抛射引力

29:36.400 --> 29:36.800
对吧

29:36.800 --> 29:39.680
给你们先提前打个这样的一个机电

29:39.680 --> 29:41.360
那希望你们回去

29:41.360 --> 29:42.960
能把这些东西再看一遍

29:42.960 --> 29:44.640
并且自己全力于变

29:44.640 --> 29:46.880
我们下一个再写这个单缝的时候

29:46.880 --> 29:48.480
再写这个单缝的时候

29:48.480 --> 29:52.160
一定会把这些很重的方法

29:52.160 --> 29:53.760
再来去用一用

29:53.760 --> 29:55.280
今天听到这段

29:55.280 --> 29:56.720
也是给你们发发的

29:56.720 --> 29:57.760
一会下课的话

29:57.760 --> 29:59.040
我又把这个单缝的压缩

29:59.040 --> 30:00.640
压缩完之后的话

30:00.640 --> 30:03.440
PPT一并给这个销语

30:03.440 --> 30:04.320
销语还谁

30:04.320 --> 30:05.760
咱们这个助教的话

30:05.760 --> 30:07.360
那个谁有办法

30:07.360 --> 30:08.320
我给这个助教

30:08.320 --> 30:09.520
等完那个助教的话

30:09.520 --> 30:11.200
我让这个助教明天

30:11.200 --> 30:12.320
因为他这个迟一点

30:12.320 --> 30:14.080
他准备在休息了

30:14.080 --> 30:15.680
明天的话把这些资料的

30:15.680 --> 30:18.000
给他上传到这样的圈里面

30:18.000 --> 30:19.200
是吗

30:19.200 --> 30:19.920
其实是这样的

30:19.920 --> 30:20.880
我讲完以后的话

30:20.880 --> 30:22.160
你就可以去再表演它

30:22.160 --> 30:23.120
重判了

30:23.120 --> 30:24.880
而且重判的话是这样的

30:24.880 --> 30:26.880
是你一开始学的嘛

30:26.880 --> 30:27.840
去看的话

30:27.840 --> 30:29.680
它轻轻度是不高的

30:29.680 --> 30:30.880
你等一两天以后的话

30:30.880 --> 30:32.000
这个平台自动会长满

30:32.000 --> 30:34.160
长满完这个轻度又会变高了

30:34.160 --> 30:35.440
咱们以后的课

30:35.440 --> 30:37.680
不一定都是两三个小时了

30:37.680 --> 30:40.480
一般我讲的课可能会稍微比较长一点

30:40.480 --> 30:42.320
其他老师的课的话

30:42.320 --> 30:43.200
他可能不会这么长

30:43.200 --> 30:45.440
可能就一个小时

30:45.440 --> 30:46.480
我是希望尽可能把

30:46.480 --> 30:48.000
做的直式先教给你们

30:58.340 --> 30:59.140
没事

30:59.140 --> 31:03.140
希望应该用这样一个最快的实验吧

31:03.140 --> 31:04.500
尽可能多的时间

31:04.500 --> 31:05.460
压缩一下

31:05.460 --> 31:09.700
把一些金黄的都交给回来

31:09.700 --> 31:11.540
确实稍微点累

31:11.540 --> 31:12.740
但是我要他不挺的话

31:12.740 --> 31:14.420
我今天跟今天都讲到12点去了

31:18.900 --> 31:19.620
这样

31:19.620 --> 31:21.860
下一课我估计也会这么长时间

31:21.860 --> 31:23.220
下一课的话

31:23.220 --> 31:26.660
是比下一课比这课要意测多

31:26.660 --> 31:27.700
而且

31:27.700 --> 31:30.340
我还会先带你们写一个简单的

31:30.340 --> 31:32.100
再带你们去优化一下

31:32.100 --> 31:33.540
对我优化的时候

31:33.540 --> 31:38.020
还诱到了一些比较复杂的一些思想

31:38.020 --> 31:38.660
所以说

31:38.660 --> 31:42.420
下一课的后三十之一的部分会比较难

31:42.420 --> 31:43.700
会比较难

31:43.700 --> 31:45.220
我明天咱们也没事

31:45.220 --> 31:47.140
咱们下一课总的也会讲这个

31:47.140 --> 31:50.020
将近三个点

31:50.020 --> 31:51.460
所以说希望

31:51.460 --> 31:53.460
下一课来听课之前

31:53.460 --> 31:55.620
你要把这些咱们讲的方法

31:55.620 --> 31:57.140
再多列一遍

31:57.140 --> 31:58.740
而且

31:58.740 --> 32:00.900
一个DOM的操作

32:00.900 --> 32:01.700
事件

32:01.700 --> 32:03.140
你要都回去看看

32:03.140 --> 32:04.340
要力业透射

32:04.340 --> 32:06.340
我们下一课才能很好的

32:06.340 --> 32:07.540
按照正常的设计

32:07.540 --> 32:09.300
还是往下设计一下

32:09.300 --> 32:12.740
下一课的难度会比这一课要高一点点

32:12.740 --> 32:16.180
要说再高一点点

32:16.180 --> 32:16.900
对

32:16.900 --> 32:18.020
说说这段晚上

32:18.020 --> 32:18.180
对

32:18.180 --> 32:18.740
这段晚上

32:21.380 --> 32:21.940
谢谢同学

32:21.940 --> 32:22.420
谢谢同学

32:24.740 --> 32:25.380
谢谢同学们

32:26.340 --> 32:29.380
这就是第二节课吧

32:29.380 --> 32:31.300
今天把那第二节课

32:31.300 --> 32:32.740
是文成哥来这一集讲的

32:32.740 --> 32:34.340
这有所谓的象征

32:34.340 --> 32:35.380
这两个人

32:35.380 --> 32:36.340
他一起讲一课

32:36.340 --> 32:37.780
我们有个体验体验

32:37.780 --> 32:39.140
之前也没讲过这样的课

32:39.140 --> 32:40.260
今天就想一想

32:40.260 --> 32:42.100
这有可能没有他好玩吧

32:42.100 --> 32:42.500
对吧

32:42.500 --> 32:43.700
我俩就一块讲一讲

32:43.700 --> 32:47.380
今天的课程就过了

32:47.380 --> 32:47.780
对吧

32:47.780 --> 32:48.740
就结束了

32:48.740 --> 32:49.300
好了

32:49.300 --> 32:51.700
那就是有事同学对吧

32:51.700 --> 32:52.180
可能说

32:52.180 --> 32:53.380
这个你需要睡觉

32:53.380 --> 32:54.740
或者说是你还在公司

32:55.460 --> 32:56.740
或者说在家里面

32:56.740 --> 32:57.540
天课的话

32:57.540 --> 32:58.740
就赶紧回去

32:58.740 --> 32:59.700
赶回家对吧

32:59.700 --> 33:00.260
洗手洗手

33:00.260 --> 33:00.820
休息休息吧

33:05.380 --> 33:08.980
首先对说感谢老师

33:08.980 --> 33:09.940
新婚老师同学

33:09.940 --> 33:11.540
我也来说一句

33:11.540 --> 33:13.140
只是给感谢同学们

33:15.140 --> 33:16.020
谢谢同学的理解

33:16.020 --> 33:16.820
谢谢同学的理解

33:17.540 --> 33:17.620
好

33:17.620 --> 33:18.660
那这样吧

33:18.660 --> 33:20.020
咱今天先到这吧

33:20.020 --> 33:20.740
走吧

33:20.740 --> 33:21.380
今天先到这

33:21.780 --> 33:25.060
完了同学们

33:25.060 --> 33:25.540
完了

33:26.660 --> 33:27.300
拜拜

33:27.300 --> 33:27.860
拜拜

