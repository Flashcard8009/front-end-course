WEBVTT

00:00.690 --> 00:23.880
大家同学 能听到吗

00:23.880 --> 00:35.060
能吧 可以听到对吧

00:35.060 --> 00:38.060
好 咱们这个办点办吧

00:38.060 --> 00:41.060
开始正商课 现在才26对吧

00:41.060 --> 00:43.060
还得等等4分钟啊

00:43.060 --> 00:46.060
一般来讲 开班的第一节课

00:46.060 --> 00:48.060
我觉得是人在最多的时候

00:48.060 --> 00:51.060
上次是七期开班的时候

00:51.060 --> 00:53.060
可能打到将近八九十人

00:53.060 --> 00:55.060
我咱们八七人我觉得挺多的

00:55.060 --> 00:57.060
咱们就抽100了对吧

01:05.450 --> 01:07.450
这都让你听出来了

01:07.450 --> 01:17.030
有点立体环绕声音

01:20.030 --> 01:22.030
我觉得上课没有在路间上

01:22.030 --> 01:26.540
今天上课是在这个家里面上的

01:26.540 --> 01:28.540
很好

01:29.540 --> 01:31.540
我自己一个人在家上课

01:31.540 --> 01:38.690
心情非常好

01:41.690 --> 01:45.130
确实

01:46.130 --> 01:49.130
反正最近的这个

01:49.130 --> 01:52.130
也是这个小感冒特不断

01:52.130 --> 01:55.130
嗓音 嗓音可能有点

01:55.130 --> 01:57.130
啥样一些

01:58.130 --> 02:01.130
这么巧 今天在家里听课

02:01.130 --> 02:03.130
那太好了呢

02:03.130 --> 02:07.340
是哪位老师

02:07.340 --> 02:09.340
我估计很多同学可能刚看到

02:09.340 --> 02:10.340
程德的工艺课对吧

02:10.340 --> 02:12.340
后面很多内容还没开始看的

02:13.340 --> 02:21.740
我估计应该是还不认识我

02:21.740 --> 02:23.740
没事 我认识我也无所谓

02:23.740 --> 02:25.740
你去前面看这些课的话

02:25.740 --> 02:27.740
咱们接着把你们的前级课的话

02:27.740 --> 02:29.740
很多课都是我来讲的

02:29.740 --> 02:31.740
你不知道的JSM那些课是

02:31.740 --> 02:33.740
部分他也是我来讲的

02:33.740 --> 02:35.740
如果你不了解我的话

02:35.740 --> 02:37.740
等了日后吧

02:37.740 --> 02:39.740
日后随着你不知道去看课的话

02:39.740 --> 02:41.740
我觉得你把这个

02:42.740 --> 02:44.740
现在不了解也无所谓了

02:46.740 --> 02:47.740
那你要看过的话

02:47.740 --> 02:49.740
你应该还是知道我是谁的

02:49.740 --> 02:55.100
不是程德讲的

02:55.100 --> 02:56.100
前面见课是我的程德

02:56.100 --> 02:57.100
他一块讲的

03:00.100 --> 03:01.100
你是谁呀

03:04.100 --> 03:07.250
对 藏着你一块

03:10.690 --> 03:12.690
有的人认识 现在有的人不认识

03:12.690 --> 03:13.690
没关系

03:14.690 --> 03:15.690
上层打开

03:15.690 --> 03:16.690
都不用怕帅了你

03:19.690 --> 03:20.690
上层打开以后的话

03:20.690 --> 03:22.690
我估计应该就是

03:23.690 --> 03:25.690
我说的就是

03:25.690 --> 03:27.690
业内他有这样一句话

03:27.690 --> 03:28.690
老师讲课

03:28.690 --> 03:30.690
这个老师不能太帅

03:30.690 --> 03:31.690
如果他太帅的话

03:31.690 --> 03:33.690
就会剥夺形成太大的一个注意力

03:34.690 --> 03:36.690
咱们这个JSM毕竟是技术课

03:36.690 --> 03:38.690
咱回味到这样的一个代码之中

03:38.690 --> 03:40.690
我必找什么样子的话

03:40.690 --> 03:41.690
这个就算了

03:42.690 --> 03:43.690
如果你有兴趣的话

03:43.690 --> 03:45.690
你可以看看我这个微信的头像

03:45.690 --> 03:46.690
那个他就是我这样的样子

03:47.690 --> 03:50.450
那好巧

03:50.450 --> 03:52.450
感觉莫名还是有点关系的

03:54.450 --> 03:56.450
够开开没上班

03:56.450 --> 04:03.750
应该能听懂吗

04:03.750 --> 04:04.750
够开开

04:04.750 --> 04:05.750
你只上第一点的话

04:05.750 --> 04:07.750
我估计一口气就能听懂了

04:07.750 --> 04:08.750
那你这个

04:08.750 --> 04:09.750
比如说

04:09.750 --> 04:10.750
一些书组对吧

04:10.750 --> 04:12.750
这叫做书组扩展吗

04:12.750 --> 04:14.750
如果说你书组的方法的话

04:14.750 --> 04:15.750
之前听过的话

04:15.750 --> 04:16.750
你这一课

04:16.750 --> 04:17.750
接下来去跟人来听

04:17.750 --> 04:18.750
还原不是

04:18.750 --> 04:19.750
还是问题

04:21.750 --> 04:23.750
你要看到到目前的话

04:23.750 --> 04:24.750
这一课

04:24.750 --> 04:26.750
我估计你是完全能听懂的

04:28.750 --> 04:36.930
你用74了

04:38.930 --> 04:39.930
这样吧

04:39.930 --> 04:41.930
咱们再多等一分钟

04:41.930 --> 04:42.930
再多等一分钟

04:42.930 --> 04:43.930
那个

04:43.930 --> 04:44.930
我估计同学都是采点来了

04:44.930 --> 04:45.930
对吧

04:45.930 --> 04:46.930
咱们给他们换换的时间

04:46.930 --> 04:49.930
咱们这个8点32的时候

04:49.930 --> 04:50.930
8点32的时候

04:50.930 --> 04:51.930
咱们开始

04:51.930 --> 04:52.930
之后是三课

04:52.930 --> 04:54.930
当没看的话

04:54.930 --> 04:56.930
这些课你也是可以去听懂的

04:57.930 --> 05:02.330
咱们每一课

05:02.330 --> 05:03.330
咱们每期同学这个季度

05:03.330 --> 05:05.330
它都是不一样的

05:06.330 --> 05:07.330
所以说

05:07.330 --> 05:08.330
像曼同学

05:08.330 --> 05:09.330
就是抓点时间

05:09.330 --> 05:10.330
稍微去往前赶一赶

05:10.330 --> 05:12.330
我来看快乐同学的话

05:12.330 --> 05:14.330
这个也不要着急

05:14.330 --> 05:16.330
跟大家一起来听听

05:16.330 --> 05:17.330
把之前的一些课

05:17.330 --> 05:19.330
全部都夯实一下

05:19.330 --> 05:20.330
因为这个基础

05:20.330 --> 05:21.330
它还是很重要的

05:21.330 --> 05:28.030
乐学

05:28.030 --> 05:30.030
乐觉的难咋办

05:36.460 --> 05:37.460
学习这个过程的话

05:37.460 --> 05:38.460
就一定是不断的

05:38.460 --> 05:39.460
去攻击看难

05:40.460 --> 05:41.460
当你翻过一座一座

05:41.460 --> 05:42.460
这样大山以后

05:42.460 --> 05:43.460
你回头再看你之前

05:43.460 --> 05:45.460
就是所翻过的那些

05:45.460 --> 05:47.460
所谓的大山的话

05:47.460 --> 05:48.460
对吧

05:48.460 --> 05:49.460
你觉得

05:49.460 --> 05:50.460
其实也不如此

05:53.460 --> 05:55.460
学习生有这样的反复过程

05:55.460 --> 05:56.460
不是说是

05:56.460 --> 05:57.460
你这东西学完以后的话

05:57.460 --> 05:58.460
OK

05:58.460 --> 05:59.460
你就一定会能记得住

05:59.460 --> 06:00.460
一定会能用东西使用

06:00.460 --> 06:01.460
它不是这样的

06:01.460 --> 06:02.460
一定是

06:02.460 --> 06:03.460
你学完以后的话

06:03.460 --> 06:04.460
对它有大概的一个印象

06:04.460 --> 06:05.460
随着你再往后去学

06:05.460 --> 06:07.460
随着你再不断的去做一些东西

06:07.460 --> 06:08.460
做一些这样的需求

06:08.460 --> 06:10.460
你把你之前的知识储备

06:10.460 --> 06:12.460
你把你之前一些储备的知识

06:12.460 --> 06:13.460
拿过来尝试去应用

06:13.460 --> 06:14.460
或者说你其实你忘了

06:14.460 --> 06:15.460
对吧

06:15.460 --> 06:16.460
OK

06:16.460 --> 06:17.460
你通过你这样的一个

06:17.460 --> 06:18.460
通过你这样的一个之前

06:18.460 --> 06:19.460
对知识这样的一个了解

06:19.460 --> 06:20.460
你是搜索

06:20.460 --> 06:21.460
对吧

06:21.460 --> 06:23.460
你去把你这样的一个东西

06:23.460 --> 06:24.460
比如说

06:24.460 --> 06:25.460
通过这样的一个

06:25.460 --> 06:27.460
通过笔记的方式

06:27.460 --> 06:28.460
之前你记过

06:28.460 --> 06:29.460
或者说是你之前搜索过

06:29.460 --> 06:30.460
这样的一些

06:30.460 --> 06:31.460
写的一些文章

06:31.460 --> 06:32.460
对吧

06:32.460 --> 06:33.460
比如说你通过一些需求以后的话

06:33.460 --> 06:34.460
你忘了

06:34.460 --> 06:35.460
没关系怎么办了

06:35.460 --> 06:36.460
你回去搜

06:36.460 --> 06:38.460
所以你再去不断的去用的话

06:38.460 --> 06:39.460
你发挥过程多了以后

06:39.460 --> 06:41.460
你再来会对这个知识

06:41.460 --> 06:43.460
会有很强壮的记忆

06:44.460 --> 06:45.460
当你不断的

06:45.460 --> 06:46.460
这种过程

06:46.460 --> 06:47.460
重复多了以后的话

06:47.460 --> 06:48.460
你会发现

06:48.460 --> 06:50.460
你自己的实力

06:50.460 --> 06:51.460
它会不断的去往前

06:51.460 --> 06:52.460
去提高

06:55.460 --> 06:56.460
那个时候的话

06:56.460 --> 06:57.460
可能说你之前

06:57.460 --> 06:58.460
觉得很难的一些东西

06:58.460 --> 06:59.460
你放出来

06:59.460 --> 07:00.460
你再看它

07:00.460 --> 07:01.460
它就没有那么难了

07:01.460 --> 07:02.460
难和不难的话

07:02.460 --> 07:04.460
始终它都是一个相对的

07:04.460 --> 07:05.460
所以我一开始

07:05.460 --> 07:06.460
第一次过程中的话

07:06.460 --> 07:07.460
可能我学到一些

07:07.460 --> 07:08.460
什么综艺链

07:08.460 --> 07:09.460
圆形的时候

07:09.460 --> 07:10.460
我也觉得它很难

07:10.460 --> 07:11.460
因为那个时候

07:11.460 --> 07:12.460
就是一开始

07:12.460 --> 07:14.460
在接触编绸的时候的话

07:14.460 --> 07:15.460
可能就是

07:15.460 --> 07:17.460
会讲一些什么变量的吧

07:17.460 --> 07:18.460
会提高一些

07:18.460 --> 07:19.460
简单的这样的一些方法

07:19.460 --> 07:20.460
那个时候

07:20.460 --> 07:21.460
通过老师讲的话

07:21.460 --> 07:22.460
或者说通过这个书记

07:22.460 --> 07:23.460
看也好对吧

07:23.460 --> 07:24.460
基本上你简单的尝试

07:24.460 --> 07:25.460
你会去

07:25.460 --> 07:27.460
你会去把它整不透

07:27.460 --> 07:29.460
后来突然碰到

07:29.460 --> 07:30.460
这些所谓的

07:30.460 --> 07:32.460
一些新的东西的时候

07:32.460 --> 07:33.460
可能这个难度

07:33.460 --> 07:34.460
在这一块它斗增了一下

07:34.460 --> 07:35.460
但在然而然的话

07:35.460 --> 07:37.460
你学起来会很实力

07:37.460 --> 07:38.460
但是你翻过去以后的话

07:38.460 --> 07:39.460
以后都再看的话

07:39.460 --> 07:40.460
其实也不过如此

07:43.460 --> 07:44.460
所以说呢

07:44.460 --> 07:46.460
我们学任何知识的时候的话

07:46.460 --> 07:47.460
你首先你要

07:47.460 --> 07:49.460
摆脱掉这种恐惧感

07:49.460 --> 07:50.460
但是你要认识到

07:50.460 --> 07:52.460
这个东西我早晚会学会的

07:52.460 --> 07:53.460
它只是一个过程

07:53.460 --> 07:55.460
需要一个时间而已

07:55.460 --> 07:56.460
我多几次得把

07:56.460 --> 07:57.460
我翻完复复

07:57.460 --> 07:58.460
我多来几次的话

07:58.460 --> 07:59.460
这个东西指定会

07:59.460 --> 08:00.460
特别重要

08:00.460 --> 08:01.460
无所谓

08:01.460 --> 08:02.460
说是这个东西

08:02.460 --> 08:03.460
我学不会

08:03.460 --> 08:04.460
不至于咱们这东西

08:04.460 --> 08:06.460
不像说是搞特严

08:06.460 --> 08:07.460
让你去一讲

08:07.460 --> 08:08.460
跟到别人讲

08:08.460 --> 08:09.460
不让你去开拓

08:09.460 --> 08:10.460
一些什么的事

08:10.460 --> 08:11.460
别人把这个东西

08:11.460 --> 08:12.460
都积累好了

08:12.460 --> 08:15.460
把这样体系都睡完了

08:15.460 --> 08:16.460
通过这种方式

08:16.460 --> 08:17.460
交给你了

08:17.460 --> 08:18.460
你只要用心

08:18.460 --> 08:19.460
只要稍加练习的话

08:19.460 --> 08:21.460
完全是可以会了

08:21.460 --> 08:22.460
那在这样

08:22.460 --> 08:24.460
咱现在已经到34了

08:24.460 --> 08:25.460
咱开始正式上色

08:25.460 --> 08:26.460
可以吧

08:26.460 --> 08:27.460
现在有这样一个

08:27.460 --> 08:28.460
98个人

08:28.460 --> 08:29.460
将一来人

08:29.460 --> 08:30.460
我觉得也挺满意了

08:30.460 --> 08:31.460
开班的时候

08:31.460 --> 08:32.460
能来这么多人的话

08:32.460 --> 08:33.460
已经挺不错了

08:33.460 --> 08:34.460
好

08:34.460 --> 08:35.460
咱们今天

08:35.460 --> 08:36.460
今天我来说一下

08:36.460 --> 08:37.460
其实基本上说一下

08:37.460 --> 08:38.460
咱们讲什么

08:38.460 --> 08:39.460
咱们要讲这个

08:39.460 --> 08:40.460
数组的一个扩展

08:40.460 --> 08:41.460
这一课的名字

08:41.460 --> 08:42.460
这叫做数组扩展

08:42.460 --> 08:43.460
对吧

08:43.460 --> 08:44.460
说回来讲什么呢

08:44.460 --> 08:45.460
讲的是

08:45.460 --> 08:47.460
之前你诚哥讲数组中

08:47.460 --> 08:49.460
没有提到过一些方法

08:49.460 --> 08:51.460
而且把这些方法

08:51.460 --> 08:52.460
它的原码

08:52.460 --> 08:53.460
我们拿来

08:53.460 --> 08:54.460
去写写写

08:54.460 --> 08:55.460
比如说

08:55.460 --> 08:56.460
我们这一课的一个主要目的

08:56.460 --> 08:57.460
是对你们

08:57.460 --> 08:58.460
诚哥之前的工医课

08:58.460 --> 08:59.460
工医课的

08:59.460 --> 09:00.460
GIS数组部分

09:00.460 --> 09:01.460
进行一个补充

09:01.460 --> 09:02.460
诚哥讲一些方法

09:02.460 --> 09:04.460
是一些比较长的方法

09:04.460 --> 09:05.460
那我今天

09:05.460 --> 09:07.460
所讲的这些方法的话

09:07.460 --> 09:08.460
也是很常用的

09:08.460 --> 09:09.460
比如说在你今后

09:09.460 --> 09:11.460
今开发工中的话

09:11.460 --> 09:12.460
凡是受到一些

09:12.460 --> 09:14.460
数组的操作的话

09:14.460 --> 09:15.460
诚哥讲的方法

09:15.460 --> 09:16.460
和我讲的这些方法的话

09:16.460 --> 09:17.460
你可能都会

09:17.460 --> 09:18.460
批发的去试用

09:18.460 --> 09:19.460
就说

09:19.460 --> 09:20.460
我希望

09:20.460 --> 09:22.460
这一课你学完以后的话

09:22.460 --> 09:23.460
能把

09:23.460 --> 09:24.460
之前的一些数组

09:24.460 --> 09:27.460
你也拿过来

09:27.460 --> 09:28.460
你再去复习复习

09:28.460 --> 09:29.460
复习复习

09:29.460 --> 09:30.460
那其实之前

09:30.460 --> 09:32.460
我要强调一点的就是

09:32.460 --> 09:34.460
一些数组这些方法

09:34.460 --> 09:35.460
包括一些比如说

09:35.460 --> 09:37.460
数串的一些操作方法等等

09:37.460 --> 09:38.460
这些方法

09:38.460 --> 09:39.460
我希望你们能熟悉

09:39.460 --> 09:41.460
比起能灵活的去试用它

09:41.460 --> 09:42.460
怎么能灵活的使用呢

09:42.460 --> 09:43.460
它一定是

09:43.460 --> 09:44.460
后面会有一些

09:44.460 --> 09:45.460
比如说项目的吧

09:45.460 --> 09:47.460
或者说会有些这样的需求的吧

09:47.460 --> 09:48.460
我们去多练几遍

09:48.460 --> 09:49.460
可能会你会

09:49.460 --> 09:50.460
灵活的使用

09:50.460 --> 09:51.460
灵活使用的一个基础

09:51.460 --> 09:52.460
一个基础

09:52.460 --> 09:53.460
就是

09:53.460 --> 09:54.460
一些东西

09:54.460 --> 09:55.460
至少

09:55.460 --> 09:56.460
至少你要知道

09:56.460 --> 09:57.460
它怎么去调用

09:57.460 --> 09:58.460
它每个猜说是什么意思

09:58.460 --> 09:59.460
好了

09:59.460 --> 10:01.460
以后我们再碰到这样的需求以后的话

10:01.460 --> 10:02.460
才会拿过来

10:02.460 --> 10:03.460
对吧

10:03.460 --> 10:05.460
可以去灵活去试用它

10:05.460 --> 10:06.460
那

10:06.460 --> 10:07.460
那比如说

10:07.460 --> 10:08.460
学习之前的话

10:08.460 --> 10:09.460
我还手要强调这一点

10:09.460 --> 10:10.460
这些东西

10:10.460 --> 10:12.460
我希望你要熟悉

10:12.460 --> 10:13.460
熟悉

10:13.460 --> 10:14.460
那

10:14.460 --> 10:16.460
为什么要熟悉它们呢

10:16.460 --> 10:17.460
因为

10:17.460 --> 10:18.460
它有一点是很重要的

10:18.460 --> 10:19.460
就是我们在后面

10:19.460 --> 10:21.460
不断的开发工作的话

10:21.460 --> 10:22.460
你会发现

10:22.460 --> 10:24.460
我们经常做的一些

10:24.460 --> 10:26.460
这些数据可实化的一些操作

10:26.460 --> 10:27.460
那我们前段

10:27.460 --> 10:28.460
其实主要做的事情

10:28.460 --> 10:30.460
也就是数据可实化

10:30.460 --> 10:32.460
那数据可实化是什么意思呢

10:32.460 --> 10:33.460
您可以这么来理解一下

10:33.460 --> 10:34.460
也不是很难

10:34.460 --> 10:35.460
就是

10:35.460 --> 10:37.460
我们在经济开发一个项目的时候的话

10:37.460 --> 10:39.460
其实很多数据是后台来改你的

10:39.460 --> 10:40.460
有时候可能说

10:40.460 --> 10:41.460
你打开一个百度页面

10:41.460 --> 10:43.460
或者打开任何这样的页面的话

10:43.460 --> 10:44.460
你发现

10:44.460 --> 10:45.460
还有很多这样的一些

10:45.460 --> 10:46.460
比如说文字

10:46.460 --> 10:47.460
很多这样的一些图片

10:47.460 --> 10:48.460
对吧

10:48.460 --> 10:49.460
很多这样的一些信息

10:49.460 --> 10:50.460
这些东西

10:50.460 --> 10:51.460
比如说是后台

10:51.460 --> 10:53.460
去把这些数据传给你的

10:53.460 --> 10:54.460
那传给你以后的话

10:54.460 --> 10:55.460
我们要怎么做呢

10:55.460 --> 10:56.460
我们要

10:56.460 --> 10:57.460
我们要把这样的一个数据

10:57.460 --> 10:59.460
通过我们这些的操作

10:59.460 --> 11:00.460
给它展示出来

11:00.460 --> 11:01.460
那其实无非呢

11:01.460 --> 11:02.460
又是用

11:02.460 --> 11:03.460
比如说又是GS

11:03.460 --> 11:04.460
对吧

11:04.460 --> 11:05.460
来操作这些的数据

11:05.460 --> 11:07.460
给它添加一些标签

11:07.460 --> 11:08.460
比如说

11:08.460 --> 11:09.460
通过一些DOM的一个操作

11:09.460 --> 11:10.460
最后呢

11:10.460 --> 11:11.460
展示

11:11.460 --> 11:13.460
展示在用户的一个眼前

11:13.460 --> 11:14.460
用户的一个眼前

11:14.460 --> 11:15.460
那就是一个简单的

11:15.460 --> 11:17.460
这种数据可实化的思想

11:17.460 --> 11:18.460
那这个数据的话

11:18.460 --> 11:20.460
大概有很多种类型

11:20.460 --> 11:21.460
常见的话

11:21.460 --> 11:23.460
其实无非特别是这几种

11:23.460 --> 11:24.460
我可以给你看一下吗

11:24.460 --> 11:25.460
行吧

11:29.300 --> 11:30.300
稍微等一下

11:30.300 --> 11:31.300
新建一个桌面

11:33.300 --> 11:34.300
在这呢

11:38.870 --> 11:40.870
叫index.hml

11:40.870 --> 11:41.870
那这样吧

11:41.870 --> 11:42.870
我先把它呢

11:42.870 --> 11:43.870
先把这个东西

11:43.870 --> 11:44.870
给你看一下

11:44.870 --> 11:45.870
这个是我们大解课

11:45.870 --> 11:47.870
一样做的这样一个小demo

11:47.870 --> 11:49.870
这个demo

11:49.870 --> 11:50.870
具体是什么样的

11:50.870 --> 11:51.870
很靠

11:51.870 --> 11:52.870
具体它是这样的样子

11:52.870 --> 11:54.870
它叫做一个筛选的一个组件

11:54.870 --> 11:55.870
我给你看一下

11:55.870 --> 11:56.870
DOM在这

11:57.870 --> 11:58.870
比如说

11:58.870 --> 11:59.870
就这样

11:59.870 --> 12:02.870
当我先打开这样的一面的时候

12:02.870 --> 12:04.870
你会看到有这样的几个信息吧

12:04.870 --> 12:05.870
比如说叫什么

12:05.870 --> 12:06.870
网港流营

12:06.870 --> 12:08.870
网售营等等

12:08.870 --> 12:10.870
有这几个这样的一个人物

12:10.870 --> 12:11.870
这些东西

12:11.870 --> 12:14.870
比如在我们这样的一个代码

12:14.870 --> 12:15.870
什么码

12:15.870 --> 12:16.870
它一开始是什么呢

12:16.870 --> 12:17.870
我先给你看一下

12:17.870 --> 12:18.870
在这

12:21.760 --> 12:22.760
咱来看一下

12:22.760 --> 12:23.760
其实它一开始的时候

12:23.760 --> 12:25.760
就是这些数据

12:25.760 --> 12:26.760
就是这样一些数据

12:26.760 --> 12:27.760
这些数据

12:27.760 --> 12:28.760
咱来看一下

12:28.760 --> 12:30.760
都有什么

12:30.760 --> 12:31.760
一个数据中

12:31.760 --> 12:33.760
里面有很多个对象

12:33.760 --> 12:34.760
每个对象里面有很多个属性

12:34.760 --> 12:35.760
有NAME属性

12:35.760 --> 12:36.760
SRC属性

12:36.760 --> 12:37.760
有DS属性

12:37.760 --> 12:38.760
有SAS属性

12:39.760 --> 12:41.760
为什么有这么多属性呢

12:41.760 --> 12:42.760
我们来看一下

12:42.760 --> 12:43.760
在这的话

12:43.760 --> 12:44.760
因为你演练的时候

12:44.760 --> 12:46.760
是这么多条这样的一个信息

12:46.760 --> 12:47.760
每个信息

12:47.760 --> 12:49.760
它都是代表一个人物

12:49.760 --> 12:50.760
人物

12:50.760 --> 12:51.760
多个这样的信息

12:51.760 --> 12:52.760
来描述出来了

12:52.760 --> 12:53.760
有它的头像

12:53.760 --> 12:54.760
它的名字

12:54.760 --> 12:55.760
有它这样的一个什么

12:55.760 --> 12:56.760
有它这样的一个编签名

12:56.760 --> 12:57.760
编签名

12:57.760 --> 12:58.760
对吧

12:58.760 --> 12:59.760
那比如说

12:59.760 --> 13:01.760
单独来看这条信息的话

13:01.760 --> 13:02.760
它就是有很多条信息

13:02.760 --> 13:03.760
这样的一个集合

13:03.760 --> 13:04.760
OK

13:04.760 --> 13:05.760
我们按照你之前

13:05.760 --> 13:06.760
所教的一个知识

13:06.760 --> 13:07.760
我们来回忆一下

13:07.760 --> 13:09.760
什么样的一个数据类型

13:09.760 --> 13:11.760
是可以集合多种信息的

13:11.760 --> 13:12.760
无非

13:12.760 --> 13:13.760
其实也就是几种

13:14.760 --> 13:15.760
两种对吧

13:15.760 --> 13:16.760
要不然你是数组

13:16.760 --> 13:17.760
要不然你是对象

13:17.760 --> 13:18.760
因为对象

13:18.760 --> 13:19.760
可以有很多属性

13:19.760 --> 13:20.760
对吧

13:20.760 --> 13:22.760
现在可以有很多属性的话

13:22.760 --> 13:23.760
那有的时候

13:23.760 --> 13:24.760
它可以把很多的信息怎么样

13:24.760 --> 13:25.760
集合到这样一个对象之中

13:25.760 --> 13:27.760
比如说

13:27.760 --> 13:28.760
这每一条

13:28.760 --> 13:29.760
这每一条这样的一个

13:29.760 --> 13:31.760
这个人物的一个信息

13:31.760 --> 13:33.760
它都是由这个对象来怎么样

13:33.760 --> 13:35.760
来去描述的

13:35.760 --> 13:37.760
那这么多条对象的话

13:37.760 --> 13:39.760
我有的集合到这样的一个数组之中

13:39.760 --> 13:40.760
数组之中

13:40.760 --> 13:41.760
那有的时候

13:41.760 --> 13:43.760
所有的这个人物信息

13:43.760 --> 13:45.760
它在这样的一个数组之中

13:45.760 --> 13:47.760
那我们在真正做开发的时候

13:47.760 --> 13:48.760
很有可能

13:48.760 --> 13:49.760
这个数据

13:49.760 --> 13:50.760
或者说这样的一个数组

13:50.760 --> 13:53.760
又是后台传过来的这样的一个数据

13:53.760 --> 13:56.760
共给我们前段来进行这样的一个操作

13:56.760 --> 13:58.760
后台传过来的数据

13:58.760 --> 14:01.760
数组就是典型的这样的一种

14:01.760 --> 14:02.760
除了数据以外的话

14:02.760 --> 14:03.760
它也有可能是

14:03.760 --> 14:05.760
传递了一个这样的一个大的对象

14:05.760 --> 14:06.760
反正这个对象

14:06.760 --> 14:08.760
可能它也是作为你这样的一个

14:08.760 --> 14:11.760
数据这样的一个操作的一个基础

14:11.760 --> 14:12.760
当然除此以外的话

14:12.760 --> 14:13.760
还可能是一些租算

14:13.760 --> 14:14.760
都是很有可能的

14:14.760 --> 14:15.760
我们学到

14:15.760 --> 14:17.760
后面这样的一个后台操作的时候的话

14:17.760 --> 14:19.760
你会对这一块这样的一个认知

14:19.760 --> 14:20.760
会更加深刻一些

14:20.760 --> 14:21.760
那这一边你先记住

14:21.760 --> 14:22.760
你先不管那么多

14:22.760 --> 14:23.760
你先记住

14:23.760 --> 14:25.760
我们未来可能操作的一些

14:25.760 --> 14:27.760
我们未来可能进行这样的开发的时候

14:27.760 --> 14:29.760
就是再去操作这样的数据的时候

14:29.760 --> 14:31.760
它基本上很有可能是数据

14:31.760 --> 14:32.760
或者说对象

14:32.760 --> 14:33.760
或者是数据

14:33.760 --> 14:36.760
那如果是这样的一个前提下的话

14:36.760 --> 14:38.760
我们想把这些东西

14:38.760 --> 14:40.760
进行一个数据可视化的话

14:40.760 --> 14:41.760
那必然要怎么样

14:41.760 --> 14:44.760
要灵活地去操作这些数据

14:44.760 --> 14:46.760
那配合我们的一些dum操作

14:46.760 --> 14:47.760
把这些数据

14:47.760 --> 14:50.760
最后展示在用户的一个眼前

14:50.760 --> 14:52.760
那有人说

14:52.760 --> 14:55.760
我们要想做前端这样的一个数据可视化

14:55.760 --> 14:56.760
你必不可少的话

14:56.760 --> 14:58.760
需要具备几个技能

14:58.760 --> 14:59.760
首先你要会玩dum

14:59.760 --> 15:00.760
之后你要怎么样

15:00.760 --> 15:03.760
你要会灵活地去使用一些数组

15:03.760 --> 15:04.760
和对象的

15:04.760 --> 15:09.140
包括一些这么做出来的方法

15:09.140 --> 15:10.140
方法

15:10.140 --> 15:11.140
好

15:11.140 --> 15:12.140
那有时候我们这一刻

15:12.140 --> 15:15.140
它这样的一个目的就是让你

15:15.140 --> 15:17.140
对于这些方法

15:17.140 --> 15:19.140
有一个更深的一个认知

15:19.140 --> 15:20.140
好

15:20.140 --> 15:21.140
那当然呢

15:21.140 --> 15:23.140
我们之后

15:23.140 --> 15:24.140
这个项目你不用急

15:24.140 --> 15:26.140
我们第二节课就会带你去洗

15:29.140 --> 15:30.140
那有人说

15:30.140 --> 15:32.140
我们这节课

15:32.140 --> 15:34.140
学完以后的话

15:34.140 --> 15:37.140
就是让你对这个数据的方法

15:37.140 --> 15:39.140
认知会更加深刻一些

15:39.140 --> 15:41.140
那当然这个认知深刻

15:41.140 --> 15:42.140
一方面体验在对吧

15:42.140 --> 15:44.140
我们如何进展一个操作

15:44.140 --> 15:46.140
另一方面还有一点

15:46.140 --> 15:47.140
看点什么呢

15:47.140 --> 15:48.140
就是我们学习

15:48.140 --> 15:49.140
每个数据方法的时候

15:49.140 --> 15:50.140
我们都要怎么样

15:50.140 --> 15:52.140
我们都要去

15:52.140 --> 15:55.140
好几道

15:55.140 --> 15:58.140
原码这样的一个层次

15:58.140 --> 15:59.140
为什么这么说呢

15:59.140 --> 16:01.140
就这个每个数据方法

16:01.140 --> 16:03.140
实现起来并没有那么难

16:03.140 --> 16:06.140
那但是这个原码的思想的话

16:06.140 --> 16:07.140
在我看来是很重要的

16:07.140 --> 16:08.140
因什么

16:08.140 --> 16:10.140
因为一点我们在后面

16:10.140 --> 16:12.140
会学习很多的比如说

16:12.140 --> 16:13.140
库

16:13.140 --> 16:14.140
框架等等

16:14.140 --> 16:16.140
那这些库库框架

16:16.140 --> 16:17.140
首先是别人写的

16:17.140 --> 16:18.140
那别人写了以后

16:18.140 --> 16:20.140
供给你来去使用

16:20.140 --> 16:21.140
我们觉得

16:21.140 --> 16:23.140
我们利用别人的库和框架

16:23.140 --> 16:24.140
来开发的时候

16:24.140 --> 16:25.140
会很方便

16:25.140 --> 16:27.140
会大大去提高我们这样的一个效率

16:27.140 --> 16:29.140
但是任何框架

16:29.140 --> 16:31.140
不可能满足你所的一个需求

16:31.140 --> 16:32.140
就说我们还是需要

16:32.140 --> 16:34.140
用这样一个空手造轮子的

16:34.140 --> 16:35.140
这样一个能力

16:35.140 --> 16:36.140
比如说

16:36.140 --> 16:38.140
最后你无论你学习什么样的

16:38.140 --> 16:39.140
高级的库和框架

16:39.140 --> 16:41.140
你依然必须具备

16:41.140 --> 16:43.140
很强大这样的一个

16:43.140 --> 16:45.140
GS基础的一个能力

16:45.140 --> 16:46.140
那当你比如说

16:46.140 --> 16:47.140
用了这样一个

16:47.140 --> 16:49.140
很强大的一个基础能力以后的话

16:49.140 --> 16:51.140
比如说你再结合你这样的一些

16:51.140 --> 16:52.140
比如说

16:52.140 --> 16:53.140
底层的一些设计思想

16:53.140 --> 16:54.140
比如说再容易一些

16:54.140 --> 16:55.140
这样的一个模式

16:55.140 --> 16:57.140
模式上的思想

16:57.140 --> 16:59.140
那你可能就会具备

16:59.140 --> 17:01.140
能自己去写一些库

17:01.140 --> 17:03.140
或者说写一些功能模块

17:03.140 --> 17:05.140
或者说甚至是一个框架

17:05.140 --> 17:07.140
这样的一个本领

17:07.140 --> 17:08.140
那现在

17:08.140 --> 17:09.140
当你在公司

17:09.140 --> 17:10.140
能从事这一系列

17:10.140 --> 17:11.140
这样的一个事情以后的话

17:11.140 --> 17:12.140
那你的心字

17:12.140 --> 17:13.140
边缘

17:13.140 --> 17:15.140
跟那些普通的页面在

17:15.140 --> 17:17.140
这种开发工程师的话

17:17.140 --> 17:18.140
那一定是不一样的

17:18.140 --> 17:19.140
可能别人说一个月

17:19.140 --> 17:20.140
对吧

17:20.140 --> 17:21.140
辛苦这一万对吧

17:21.140 --> 17:22.140
但你可能说是

17:22.140 --> 17:23.140
每天花了时间

17:23.140 --> 17:24.140
还不是很多对吧

17:24.140 --> 17:26.140
你做一些比较高尚的一些工作

17:26.140 --> 17:28.140
头时间也不那么长

17:28.140 --> 17:29.140
但你的心字

17:29.140 --> 17:30.140
可能是它的好几倍

17:30.140 --> 17:31.140
说在这一块的话

17:31.140 --> 17:32.140
我希望

17:32.140 --> 17:33.140
你能有另外一个意识

17:33.140 --> 17:34.140
我们要学习

17:34.140 --> 17:35.140
任何一个库和框架

17:35.140 --> 17:36.140
我们都要怎么样

17:36.140 --> 17:37.140
去选用的

17:37.140 --> 17:38.140
去学习它的原码

17:38.140 --> 17:40.140
另外它这样的一个底层的思想

17:40.140 --> 17:41.140
对点它很重要

17:41.140 --> 17:42.140
它很重要

17:42.140 --> 17:43.140
OK

17:43.140 --> 17:44.140
OK

17:44.140 --> 17:46.140
那帮到这样的几个前提

17:46.140 --> 17:47.140
帮到这样的几个前提

17:47.140 --> 17:48.140
我们现在开始

17:48.140 --> 17:49.140
这种事来去讲

17:49.140 --> 17:50.140
这样的一个

17:50.140 --> 17:51.140
舒主扩展

17:51.140 --> 17:52.140
舒主扩展

17:52.140 --> 17:53.140
咱们可能讲的

17:53.140 --> 17:54.140
稍微啰嗦一点

17:54.140 --> 17:55.140
但是

17:55.140 --> 17:56.140
我觉得

17:56.140 --> 17:58.140
我觉得前面这样

17:58.140 --> 17:59.140
我觉得前面

17:59.140 --> 18:00.140
这样的一个铺垫的话

18:00.140 --> 18:01.140
是必须它介绍好的

18:01.140 --> 18:02.140
因为我希望

18:02.140 --> 18:04.140
在学这个舒服的时候的话

18:04.140 --> 18:06.140
它是你学习前端

18:06.140 --> 18:08.140
这样的一个翻水顶

18:08.140 --> 18:09.140
我希望我这一块吧

18:09.140 --> 18:11.140
可以说是你学前端

18:11.140 --> 18:12.140
这样的一个翻水顶

18:12.140 --> 18:14.140
我希望在未来

18:14.140 --> 18:15.140
你在学习任何

18:15.140 --> 18:16.140
一个东西的时候的话

18:16.140 --> 18:18.140
能百分之百的一个投入

18:18.140 --> 18:19.140
能求甚解

18:19.140 --> 18:20.140
而且

18:20.140 --> 18:22.140
不只是限于在使用

18:22.140 --> 18:23.140
这个层面上

18:23.140 --> 18:24.140
我还要聊一套

18:24.140 --> 18:26.140
具体怎么来去实现的

18:26.140 --> 18:27.140
并且我们要尝试

18:27.140 --> 18:29.140
自己去写一些东西

18:29.140 --> 18:30.140
对吧

18:30.140 --> 18:31.140
供给别来去使用

18:31.140 --> 18:32.140
好

18:32.140 --> 18:33.140
我再来看一下

18:33.140 --> 18:34.140
舒主扩展

18:34.140 --> 18:35.140
我们这一块

18:35.140 --> 18:36.140
要讲的一个第一个方法

18:36.140 --> 18:37.140
第一个方法

18:37.140 --> 18:39.140
叫做一个for-ish方法

18:39.140 --> 18:40.140
for-ish方法

18:40.140 --> 18:41.140
你看

18:41.140 --> 18:42.140
有for-ish

18:42.140 --> 18:43.140
有filter

18:43.140 --> 18:44.140
有map

18:44.140 --> 18:45.140
有re-sum

18:45.140 --> 18:46.140
有re-ramp

18:46.140 --> 18:47.140
我们从第一个开始来说

18:47.140 --> 18:48.140
叫for-ish

18:49.140 --> 18:50.140
这个单词

18:50.140 --> 18:51.140
你看到一个for

18:51.140 --> 18:52.140
for-ish

18:52.140 --> 18:53.140
有放循环

18:53.140 --> 18:54.140
对不对

18:54.140 --> 18:55.140
for-in对吧

18:55.140 --> 18:56.140
for-ish

18:56.140 --> 18:57.140
其实

18:57.140 --> 18:58.140
这个方法

18:58.140 --> 18:59.140
我们从这个字面上

18:59.140 --> 19:00.140
一次来猜的话

19:00.140 --> 19:01.140
它也应该

19:01.140 --> 19:02.140
是跟这种

19:02.140 --> 19:03.140
变利

19:03.140 --> 19:04.140
是相关的

19:04.140 --> 19:06.140
因为我们在学习

19:06.140 --> 19:07.140
一个新的

19:07.140 --> 19:08.140
我们在学习

19:08.140 --> 19:09.140
一些新的框架

19:09.140 --> 19:10.140
我们其实

19:11.140 --> 19:13.140
应该被一个猜的

19:13.140 --> 19:14.140
能力

19:14.140 --> 19:15.140
因为很多

19:15.140 --> 19:16.140
这些方法

19:16.140 --> 19:17.140
它的一个秘密

19:17.140 --> 19:18.140
跟它单词

19:18.140 --> 19:20.140
有直接这样的一个

19:20.140 --> 19:21.140
联系的

19:21.140 --> 19:22.140
比如说filter

19:22.140 --> 19:23.140
除了这个方法的话

19:23.140 --> 19:24.140
除了单词

19:24.140 --> 19:25.140
是过滤的意思

19:25.140 --> 19:26.140
当然

19:26.140 --> 19:27.140
这个方法

19:27.140 --> 19:28.140
如果放到数组之中的话

19:28.140 --> 19:29.140
我们猜测

19:29.140 --> 19:30.140
它也应该是什么

19:30.140 --> 19:31.140
应该是起到

19:31.140 --> 19:32.140
对数组中的元素

19:32.140 --> 19:33.140
有一定这样

19:33.140 --> 19:34.140
过滤的作用

19:34.140 --> 19:36.140
为什么要学会猜呢

19:36.140 --> 19:37.140
因为这样的话

19:37.140 --> 19:38.140
你学会很快

19:38.140 --> 19:39.140
因为你要知道

19:39.140 --> 19:40.140
当你把全班

19:40.140 --> 19:41.140
都学完以后的话

19:41.140 --> 19:42.140
可能说

19:42.140 --> 19:43.140
未来几年以后

19:43.140 --> 19:44.140
业内又出现了

19:44.140 --> 19:45.140
一个新的框架

19:45.140 --> 19:46.140
对吧

19:46.140 --> 19:47.140
框架里面有很多

19:47.140 --> 19:48.140
这样的一个API

19:48.140 --> 19:49.140
怎么办呢

19:49.140 --> 19:50.140
说一下一个月去学

19:50.140 --> 19:51.140
对吧

19:51.140 --> 19:52.140
那学徒工中的话

19:52.140 --> 19:53.140
难道你真的要去

19:53.140 --> 19:54.140
一个一个去

19:54.140 --> 19:55.140
旅一个一个去他们党吗

19:55.140 --> 19:56.140
难道你要把

19:56.140 --> 19:57.140
这种党中的

19:57.140 --> 19:59.140
每个API的名

19:59.140 --> 20:00.140
API的名字和作用

20:00.140 --> 20:01.140
都借来吗

20:01.140 --> 20:02.140
就是它不是这样的

20:02.140 --> 20:04.140
我们很多时候的话

20:04.140 --> 20:05.140
要快速去

20:05.140 --> 20:06.140
一个东西的话

20:06.140 --> 20:07.140
怎么办

20:07.140 --> 20:08.140
当你有一定记忆出

20:08.140 --> 20:09.140
以后的话

20:09.140 --> 20:10.140
你要去猜了

20:10.140 --> 20:11.140
对吧

20:11.140 --> 20:12.140
你猜你自己去试

20:12.140 --> 20:13.140
对吧

20:13.140 --> 20:14.140
你自己写

20:14.140 --> 20:15.140
对吧

20:15.140 --> 20:16.140
练两下以后的话

20:16.140 --> 20:17.140
你自然而然

20:17.140 --> 20:18.140
对它印象深刻

20:18.140 --> 20:19.140
而且还会提升到

20:19.140 --> 20:20.140
很大这样的一个

20:20.140 --> 20:21.140
数据时间

20:21.140 --> 20:22.140
比如说猜

20:22.140 --> 20:23.140
这个能力的话

20:23.140 --> 20:24.140
你要也要

20:24.140 --> 20:25.140
逐渐去培养

20:25.140 --> 20:26.140
好

20:26.140 --> 20:27.140
那咱这样

20:27.140 --> 20:28.140
咱先从福利市

20:28.140 --> 20:29.140
开始

20:29.140 --> 20:30.140
福利市开始

20:30.140 --> 20:31.140
我在这还是

20:31.140 --> 20:33.140
新建一个这个

20:33.140 --> 20:34.140
新建这样一个

20:34.140 --> 20:35.140
页面

20:35.140 --> 20:36.140
叫index.html

20:36.140 --> 20:37.140
在这是创建的

20:37.140 --> 20:38.140
我在这

20:38.140 --> 20:39.140
赶紧

20:39.140 --> 20:40.140
如果html

20:40.140 --> 20:41.140
1号5的方式

20:41.140 --> 20:42.140
它把这个结构

20:42.140 --> 20:43.140
给你创建出来

20:43.140 --> 20:44.140
结构给你创建出来

20:44.140 --> 20:45.140
那

20:46.140 --> 20:47.140
那在这呢

20:47.140 --> 20:49.140
我用这个内来的方式

20:49.140 --> 20:51.140
来去引入这个GS

20:51.140 --> 20:52.140
我做的第一件事情

20:52.140 --> 20:53.140
是这样的

20:53.140 --> 20:54.140
由于是数据

20:54.140 --> 20:55.140
这样的一些的一个方法

20:55.140 --> 20:56.140
对吧

20:56.140 --> 20:57.140
那我在这

20:57.140 --> 20:58.140
把这样的数据

20:58.140 --> 20:59.140
放到这边来

20:59.140 --> 21:00.140
因为这个数据

21:00.140 --> 21:01.140
它就是一个数据

21:01.140 --> 21:02.140
它接下来

21:02.140 --> 21:03.140
可能说

21:03.140 --> 21:04.140
我再去讲这些方法的时候

21:04.140 --> 21:05.140
都是结合这样的一个数据

21:05.140 --> 21:07.140
来进行一些的这个操作的

21:07.140 --> 21:08.140
ok

21:08.140 --> 21:09.140
好

21:09.140 --> 21:10.140
那从现在开始的话

21:10.140 --> 21:11.140
我要开始就是的

21:11.140 --> 21:12.140
就讲这个for each

21:12.140 --> 21:13.140
方法

21:13.140 --> 21:14.140
来讲这样的一个

21:14.140 --> 21:15.140
一些的数据

21:15.140 --> 21:16.140
方法

21:16.140 --> 21:17.140
那无论你前面

21:17.140 --> 21:18.140
是否有真正的

21:18.140 --> 21:19.140
是否有真正的理解

21:19.140 --> 21:21.140
我说话的一个本意

21:21.140 --> 21:22.140
从这开始

21:22.140 --> 21:23.140
你认真听

21:23.140 --> 21:24.140
我可以让你保证

21:24.140 --> 21:25.140
这一些的东西

21:25.140 --> 21:26.140
你什么都可以听懂的

21:26.140 --> 21:28.140
至少你是可以

21:28.140 --> 21:29.140
写完以后的话

21:29.140 --> 21:31.140
去应用它的

21:31.140 --> 21:32.140
好

21:32.140 --> 21:33.140
让大家看一下for each

21:33.140 --> 21:34.140
方法

21:34.140 --> 21:35.140
数据方法

21:35.140 --> 21:37.140
数据方法的话

21:37.140 --> 21:38.140
比如说

21:38.140 --> 21:39.140
这个方法

21:39.140 --> 21:40.140
一定是在那

21:40.140 --> 21:41.140
订在radar

21:41.140 --> 21:43.140
prouse

21:43.140 --> 21:44.140
订在这上的话

21:44.140 --> 21:45.140
那也有说

21:45.140 --> 21:48.140
我随便拿一个数据的实力

21:48.140 --> 21:49.140
就可以使用什么

21:49.140 --> 21:51.140
这个方法

21:51.140 --> 21:54.140
就可以使用这样的方法

21:54.140 --> 21:55.140
那这个方法

21:55.140 --> 21:56.140
for each方法

21:56.140 --> 21:57.140
它在使用的时候

21:57.140 --> 21:59.140
它也需要你传递一个参数

21:59.140 --> 22:01.140
这个参数是啥呢

22:01.140 --> 22:03.140
这个参数是一个函数

22:03.140 --> 22:04.140
要求你传递的时候

22:04.140 --> 22:06.140
这个参数是一个函数

22:06.140 --> 22:08.140
那什么意思呢

22:08.140 --> 22:09.140
比如说

22:09.140 --> 22:10.140
这个方法

22:10.140 --> 22:11.140
for each方法

22:11.140 --> 22:12.140
是定在radar

22:12.140 --> 22:13.140
prouse type上的

22:13.140 --> 22:14.140
那当然

22:14.140 --> 22:15.140
通过个ray

22:15.140 --> 22:16.140
所搞出的一个数组的话

22:16.140 --> 22:17.140
或者说

22:17.140 --> 22:18.140
只要你是数组的话

22:18.140 --> 22:19.140
你就一定怎么

22:19.140 --> 22:20.140
可以使用这个方法

22:20.140 --> 22:22.140
那你在使用这个方法的时候

22:22.140 --> 22:23.140
OK

22:23.140 --> 22:24.140
它这个方法

22:24.140 --> 22:25.140
也要求你怎么样

22:25.140 --> 22:26.140
传递一个参数

22:26.140 --> 22:27.140
比如说在这

22:27.140 --> 22:28.140
必须传递一个参数

22:28.140 --> 22:29.140
参数什么呢

22:29.140 --> 22:31.140
这个函数

22:31.140 --> 22:32.140
这个函数

22:32.140 --> 22:34.140
那这个函数

22:34.140 --> 22:35.140
它会怎么样呢

22:35.140 --> 22:38.140
它会被循环的去调用

22:38.140 --> 22:39.140
对于for each方法

22:39.140 --> 22:40.140
它的能力什么呢

22:40.140 --> 22:41.140
它的能力是这样的

22:41.140 --> 22:42.140
一旦数组调完

22:42.140 --> 22:43.140
这个方法以后的话

22:43.140 --> 22:44.140
OK

22:44.140 --> 22:45.140
你所传的这个参数

22:45.140 --> 22:46.140
函数

22:46.140 --> 22:48.140
会被循环的调用

22:48.140 --> 22:49.140
那调用多少次呢

22:49.140 --> 22:50.140
这个取决于

22:50.140 --> 22:51.140
你这个数组的

22:51.140 --> 22:53.140
语言数的个数

22:53.140 --> 22:55.140
语言数的个数

22:55.140 --> 22:56.140
比如说

22:56.140 --> 22:57.140
你这个数组

22:57.140 --> 22:58.140
语言数的几个呢

22:58.140 --> 22:59.140
有一个

22:59.140 --> 23:00.140
两个

23:00.140 --> 23:01.140
三个

23:01.140 --> 23:02.140
有五个

23:02.140 --> 23:03.140
有五个的话

23:03.140 --> 23:04.140
那我这个函数

23:04.140 --> 23:05.140
就会执行五次

23:05.140 --> 23:07.140
就会执行五次

23:07.140 --> 23:08.140
五次

23:08.140 --> 23:09.140
OK

23:09.140 --> 23:11.140
那每次在执行的时候呢

23:11.140 --> 23:13.140
其实你要知道

23:13.140 --> 23:15.140
是for each方法

23:15.140 --> 23:16.140
它内部啊

23:16.140 --> 23:18.140
去来调用函数的

23:18.140 --> 23:19.140
对吧

23:19.140 --> 23:20.140
它会根据这个数的

23:20.140 --> 23:21.140
语言数的个数

23:21.140 --> 23:22.140
来去不断的去调用它

23:22.140 --> 23:23.140
对吧

23:23.140 --> 23:24.140
调用多少次呢

23:24.140 --> 23:25.140
你扭五个

23:25.140 --> 23:26.140
就调扭五次

23:26.140 --> 23:27.140
每次在调用它的时候呢

23:27.140 --> 23:28.140
还会往里面

23:28.140 --> 23:30.140
去传递一些实际参数

23:30.140 --> 23:31.140
那是谁来传递的呢

23:31.140 --> 23:33.140
一定是这个方法

23:33.140 --> 23:34.140
它在调用它的时候

23:34.140 --> 23:35.140
来去传递的

23:35.140 --> 23:36.140
那比如说

23:36.140 --> 23:38.140
我们这个方法

23:38.140 --> 23:39.140
它会被执行很多次

23:39.140 --> 23:40.140
并且每一次呢

23:40.140 --> 23:42.140
会把里面传递一些参数

23:42.140 --> 23:43.140
对吧

23:43.140 --> 23:44.140
那OK

23:44.140 --> 23:45.140
我在这呢

23:45.140 --> 23:46.140
要声明一下

23:46.140 --> 23:47.140
声明一些嫌参

23:47.140 --> 23:48.140
为什么要声明一下呢

23:48.140 --> 23:49.140
比如说

23:49.140 --> 23:50.140
它被执行的时候

23:50.140 --> 23:51.140
会怎么样

23:51.140 --> 23:52.140
会传递一些

23:52.140 --> 23:53.140
实际参数给它

23:53.140 --> 23:54.140
对吧

23:54.140 --> 23:56.140
那我在

23:56.140 --> 23:57.140
声明你的时候

23:57.140 --> 23:58.140
怎么办呢

23:58.140 --> 23:59.140
我来怎么样

23:59.140 --> 24:00.140
我来一下

24:00.140 --> 24:02.140
可以接受几个行参

24:02.140 --> 24:03.140
几个呢

24:03.140 --> 24:04.140
是三个

24:04.140 --> 24:05.140
一个叫做

24:05.140 --> 24:06.140
ELE

24:06.140 --> 24:07.140
一个叫做index

24:07.140 --> 24:08.140
一个叫做self

24:08.140 --> 24:09.140
但是呢

24:09.140 --> 24:10.140
这个单词是什么

24:10.140 --> 24:11.140
无所谓

24:11.140 --> 24:12.140
单词是什么

24:12.140 --> 24:13.140
无所谓

24:13.140 --> 24:14.140
这个位置就很重要

24:14.140 --> 24:15.140
那个关系

24:15.140 --> 24:16.140
就比如说

24:16.140 --> 24:18.140
你写一个函数

24:18.140 --> 24:19.140
比如说

24:19.140 --> 24:20.140
方式

24:20.140 --> 24:21.140
它叫做一个

24:21.140 --> 24:22.140
deal

24:22.140 --> 24:23.140
它叫做deal

24:23.140 --> 24:24.140
这个deal

24:24.140 --> 24:25.140
说

24:25.140 --> 24:26.140
你给声明一下

24:26.140 --> 24:28.140
它有这几个参数

24:28.140 --> 24:29.140
index

24:29.140 --> 24:30.140
对吧

24:30.140 --> 24:31.140
那别人在这样

24:31.140 --> 24:32.140
它在时候

24:32.140 --> 24:33.140
比如说

24:33.140 --> 24:34.140
它往里面

24:34.140 --> 24:35.140
比如说

24:35.140 --> 24:36.140
去传

24:36.140 --> 24:37.140
传十

24:37.140 --> 24:38.140
比如说它去传个对象

24:38.140 --> 24:39.140
去传一个零

24:39.140 --> 24:41.140
传一个数组

24:41.140 --> 24:44.140
传个数组

24:44.140 --> 24:45.140
那比如说别人

24:45.140 --> 24:46.140
如果说

24:46.140 --> 24:47.140
掉它的话

24:47.140 --> 24:48.140
全是用这种形式

24:48.140 --> 24:49.140
来第二种的话

24:49.140 --> 24:50.140
比如说

24:50.140 --> 24:51.140
第一个传对象

24:51.140 --> 24:52.140
第二个传数字

24:52.140 --> 24:53.140
第三个传数组的话

24:53.140 --> 24:54.140
那我在声明

24:54.140 --> 24:55.140
这个函数的时候

24:55.140 --> 24:56.140
你这个地方

24:56.140 --> 24:57.140
叫什么行参

24:57.140 --> 24:58.140
为了

24:58.140 --> 24:59.140
完全取决于

24:59.140 --> 25:00.140
在实际调整的时候

25:00.140 --> 25:01.140
你传递的

25:01.140 --> 25:02.140
这样的一个词

25:02.140 --> 25:03.140
它到底是什么

25:03.140 --> 25:04.140
那为什么要突然

25:04.140 --> 25:06.140
插这一项话呢

25:06.140 --> 25:07.140
Hanson你看好了

25:07.140 --> 25:08.140
现在

25:08.140 --> 25:09.140
我在这

25:09.140 --> 25:10.140
我不写它

25:10.140 --> 25:11.140
我不写它

25:11.140 --> 25:13.140
而我写这个deal

25:13.140 --> 25:14.140
也是完全可以的

25:14.140 --> 25:15.140
因为我foil是在执行的时候

25:15.140 --> 25:17.140
是要求你在这怎么样

25:17.140 --> 25:18.140
传递一个

25:18.140 --> 25:20.140
实际的一个函数

25:20.140 --> 25:22.140
作为它的一个参数

25:22.140 --> 25:23.140
那最后

25:23.140 --> 25:24.140
它会使用多少次呢

25:24.140 --> 25:25.140
我们直接说了

25:25.140 --> 25:26.140
完全取决于什么

25:26.140 --> 25:28.140
取决于你这里面有多少个

25:28.140 --> 25:29.140
对吧

25:29.140 --> 25:30.140
那你在执行的时候的话

25:30.140 --> 25:31.140
OK

25:31.140 --> 25:32.140
那会把你们执行

25:32.140 --> 25:33.140
传递这样的实际参数

25:33.140 --> 25:35.140
那具体是什么呢

25:35.140 --> 25:36.140
我们来说一下

25:36.140 --> 25:39.140
这是foil是内部来决定的

25:39.140 --> 25:41.140
那有时候你在执行的时候的话

25:41.140 --> 25:42.140
会传什么呢

25:42.140 --> 25:43.140
会按照这个位置

25:43.140 --> 25:45.140
分别来对应的去传

25:45.140 --> 25:47.140
传这个数组中的元素

25:47.140 --> 25:48.140
和这个元素对应的

25:48.140 --> 25:49.140
所以

25:49.140 --> 25:51.140
以及这个数组的本身

25:51.140 --> 25:53.140
那换句话来讲的话

25:53.140 --> 25:54.140
比如说这个e

25:54.140 --> 25:55.140
它所对应的什么呢

25:55.140 --> 25:56.140
它所对应的

25:56.140 --> 25:59.140
应该是前面数组中的

25:59.140 --> 26:01.140
某个元素

26:01.140 --> 26:02.140
那这个index呢

26:02.140 --> 26:03.140
对应什么呢

26:03.140 --> 26:05.140
对应的是该元素对吧

26:05.140 --> 26:07.140
它在数组中那个所引

26:07.140 --> 26:09.140
从零开始对吧

26:09.140 --> 26:10.140
零一二

26:10.140 --> 26:11.140
那这个self呢

26:11.140 --> 26:12.140
什么呢

26:12.140 --> 26:14.140
self是这个数组

26:14.140 --> 26:16.140
就是这个数组的一个本身

26:16.140 --> 26:17.140
那这样

26:17.140 --> 26:18.140
可能光说这么多

26:18.140 --> 26:19.140
你不理解

26:19.140 --> 26:20.140
没关系

26:20.140 --> 26:21.140
我们来做一个这样一个测词

26:21.140 --> 26:22.140
来看一下

26:22.140 --> 26:23.140
输出一下

26:23.140 --> 26:24.140
ere

26:24.140 --> 26:25.140
index

26:25.140 --> 26:26.140
self

26:26.140 --> 26:28.140
再报词一下来看一眼

26:28.140 --> 26:29.140
好

26:29.140 --> 26:31.140
那我在这

26:31.140 --> 26:32.140
把它

26:32.140 --> 26:33.140
算了一下

26:33.140 --> 26:34.140
在这打开一次

26:34.140 --> 26:35.140
来看一下

26:35.140 --> 26:37.450
检查

26:37.450 --> 26:40.450
console

26:40.450 --> 26:42.450
因为发现

26:42.450 --> 26:43.450
这个函数呢

26:43.450 --> 26:44.450
第二期函对吧

26:44.450 --> 26:45.450
它会被执行多少次

26:45.450 --> 26:47.450
一 二 三 四 五次对吧

26:47.450 --> 26:49.450
要是我们的元素

26:49.450 --> 26:50.450
这个数组的元素

26:50.450 --> 26:51.450
一共有五个对不对

26:51.450 --> 26:52.450
一共有五个的话

26:52.450 --> 26:53.450
我在前面方式方法的时候

26:53.450 --> 26:54.450
我常常讲的一个函数

26:54.450 --> 26:55.450
那这个函数怎么样

26:55.450 --> 26:57.450
就会相应只有五次对吧

26:57.450 --> 26:58.450
那每次在执行的时候的话

26:58.450 --> 26:59.450
OK啊

26:59.450 --> 27:01.450
发意识汇报里面

27:01.450 --> 27:03.450
发意识去

27:03.450 --> 27:04.450
其实是它在里面

27:04.450 --> 27:05.450
就调到它对吧

27:05.450 --> 27:06.450
在调到它来说呢

27:06.450 --> 27:07.450
它会把一些实际参数

27:07.450 --> 27:08.450
传递给它

27:08.450 --> 27:10.450
那传递的实际参数是什么呢

27:10.450 --> 27:12.450
是每一次

27:12.450 --> 27:14.450
它所对的那个元素

27:14.450 --> 27:15.450
也就是该元素的那个

27:15.450 --> 27:16.450
所以

27:16.450 --> 27:17.450
还包括

27:17.450 --> 27:18.450
这个数组的一个本身

27:18.450 --> 27:19.450
就是你会发现

27:19.450 --> 27:21.450
这个27号

27:21.450 --> 27:22.450
或者说这个函数

27:23.450 --> 27:24.450
那也就是说

27:24.450 --> 27:25.450
27号会执行五次

27:25.450 --> 27:26.450
那每一次呢

27:26.450 --> 27:28.450
这里面对应的只是分别是啥呢

27:28.450 --> 27:29.450
分别是

27:29.450 --> 27:30.450
它对应了那一次

27:30.450 --> 27:32.450
那个元素

27:32.450 --> 27:33.450
以及它的所以

27:33.450 --> 27:36.450
以及这样那个数组的一个本身

27:36.450 --> 27:37.450
所以说

27:37.450 --> 27:38.450
它是执行第一次的时候

27:38.450 --> 27:39.450
那这个121是谁啊

27:39.450 --> 27:43.270
这个121就是它

27:43.270 --> 27:45.270
那在执行第二次的时候呢

27:45.270 --> 27:47.270
就是它呗

27:47.270 --> 27:48.270
是吧

27:48.270 --> 27:49.270
这个121

27:49.270 --> 27:50.270
就是它吧

27:50.270 --> 27:51.270
是吧

27:51.270 --> 27:52.270
相的

27:52.270 --> 27:53.270
就用第3次

27:53.270 --> 27:54.270
第5次的时候呢

27:54.270 --> 27:55.270
也说分别是它

27:55.270 --> 27:56.270
它

27:56.270 --> 27:57.270
对吧

27:57.270 --> 27:58.270
那当然呢

27:58.270 --> 27:59.270
你在执行第1次的时候的话

27:59.270 --> 28:00.270
你第1次一而一也是它

28:00.270 --> 28:01.270
对吧

28:01.270 --> 28:02.270
那你第2次呢

28:02.270 --> 28:03.270
是它所对应的

28:03.270 --> 28:04.270
所以

28:04.270 --> 28:05.270
就是那个0

28:05.270 --> 28:06.270
对吧

28:06.270 --> 28:07.270
在数组中也是0嘛

28:07.270 --> 28:08.270
那这个self

28:08.270 --> 28:09.270
相同的

28:09.270 --> 28:10.270
谁啊

28:10.270 --> 28:11.270
是这个数组的一个本身

28:11.270 --> 28:12.270
这时候呢

28:12.270 --> 28:13.270
按照这样的一个逻辑

28:13.270 --> 28:14.270
我们推一下

28:14.270 --> 28:15.270
再来看一下

28:15.270 --> 28:16.270
要说当你这个第有

28:16.270 --> 28:17.270
第1次在执行的时候

28:17.270 --> 28:18.270
OK

28:18.270 --> 28:19.270
你第1个参数

28:19.270 --> 28:20.270
你接收的

28:20.270 --> 28:21.270
是这个

28:21.270 --> 28:22.270
第1次对应的那个

28:22.270 --> 28:23.270
数组中那个元素

28:23.270 --> 28:24.270
就说它是第1个

28:24.270 --> 28:25.270
对吧

28:25.270 --> 28:26.270
就做枉杆

28:26.270 --> 28:27.270
来看一下

28:27.270 --> 28:28.270
是不它对吧

28:28.270 --> 28:29.270
叫枉杆

28:29.270 --> 28:30.270
枉杆在这个数组中呢

28:30.270 --> 28:31.270
所对应的那这样的一个

28:31.270 --> 28:33.270
所以是0

28:33.270 --> 28:34.270
对吧

28:34.270 --> 28:35.270
那好了

28:35.270 --> 28:36.270
那确实它这也是个0

28:36.270 --> 28:37.270
对吧

28:37.270 --> 28:38.270
那相用的呢

28:38.270 --> 28:39.270
最后一个

28:39.270 --> 28:40.270
最后那个self

28:40.270 --> 28:41.270
对吧

28:41.270 --> 28:42.270
它所对应的就是谁啊

28:42.270 --> 28:43.270
就是数组本身

28:43.270 --> 28:44.270
但有的说

28:44.270 --> 28:45.270
就是这个prosal ring

28:45.270 --> 28:46.270
这个prosal ring

28:46.270 --> 28:47.270
OK

28:47.270 --> 28:48.270
那

28:48.270 --> 28:49.270
比如说

28:49.270 --> 28:50.270
现在的话

28:50.270 --> 28:51.270
帮我这么喜欢以后的话

28:51.270 --> 28:52.270
这个forish

28:52.270 --> 28:53.270
可以帮我做到一点

28:53.270 --> 28:54.270
什么呢

28:54.270 --> 28:55.270
就是

28:55.270 --> 28:57.270
它可以啊

28:57.270 --> 28:59.270
它可以去

28:59.270 --> 29:00.270
循环的去down

29:00.270 --> 29:01.270
这里面的一个deal

29:01.270 --> 29:02.270
啊

29:02.270 --> 29:03.270
并且每次down的时候呢

29:03.270 --> 29:04.270
都会把

29:04.270 --> 29:05.270
这个元素

29:05.270 --> 29:06.270
以及枉杆元素的

29:06.270 --> 29:07.270
这样的一个

29:07.270 --> 29:08.270
所以

29:08.270 --> 29:09.270
所属本身

29:09.270 --> 29:10.270
当参数

29:10.270 --> 29:11.270
传递给它

29:11.270 --> 29:12.270
那换句话说就是

29:12.270 --> 29:13.270
我可以在这里面

29:13.270 --> 29:14.270
我可以在这个deal里面

29:14.270 --> 29:15.270
做

29:15.270 --> 29:16.270
做什么事呢

29:16.270 --> 29:17.270
就是

29:17.270 --> 29:19.270
去操作

29:19.270 --> 29:20.270
这个iel

29:20.270 --> 29:21.270
或者说是

29:21.270 --> 29:22.270
利用这个iel

29:22.270 --> 29:23.270
去

29:23.270 --> 29:24.270
去我们这样

29:24.270 --> 29:25.270
进行上那个数据的

29:25.270 --> 29:26.270
一个可视化

29:26.270 --> 29:27.270
比如说

29:27.270 --> 29:28.270
咱可以来看一下

29:28.270 --> 29:29.270
我在这呢

29:30.270 --> 29:31.270
写ul

29:31.270 --> 29:32.270
我里面呢

29:32.270 --> 29:34.270
放一堆li

29:35.270 --> 29:36.270
好

29:36.270 --> 29:37.270
那比如说

29:37.270 --> 29:38.270
我在这呢

29:38.270 --> 29:39.270
我问一个ol

29:39.270 --> 29:41.270
做一个document

29:41.270 --> 29:43.270
叫admence by tag name

29:43.270 --> 29:44.270
比如说

29:44.270 --> 29:45.270
写着ul

29:45.270 --> 29:46.270
好

29:46.270 --> 29:47.270
这来个综号零

29:47.270 --> 29:48.270
这样呢

29:48.270 --> 29:49.270
我再来

29:49.270 --> 29:50.270
过一个ol

29:50.270 --> 29:51.270
re

29:51.270 --> 29:52.270
re

29:52.270 --> 29:53.270
就ol

29:54.270 --> 29:55.270
叫re吧

29:55.270 --> 29:56.270
re

29:56.270 --> 29:57.270
然后它呢

29:57.270 --> 29:58.270
找一个ol

29:58.270 --> 29:59.270
点

29:59.270 --> 30:00.270
guide

30:00.270 --> 30:01.270
admence by tag name

30:02.270 --> 30:03.270
别太太没了

30:05.580 --> 30:06.580
还是从个document

30:07.580 --> 30:08.580
过它吧

30:08.580 --> 30:09.580
ol下面的

30:09.580 --> 30:10.580
admence by tag name

30:10.580 --> 30:11.580
还这么写吧

30:11.580 --> 30:12.580
对吧

30:12.580 --> 30:13.580
就是从

30:13.580 --> 30:14.580
在它下面去找这个

30:14.580 --> 30:15.580
什么

30:15.580 --> 30:16.580
去找这个li

30:16.580 --> 30:17.580
OK

30:17.580 --> 30:18.580
我们就来这么去写

30:18.580 --> 30:19.580
那你最后

30:19.580 --> 30:20.580
你所找出来的

30:20.580 --> 30:21.580
这个东西

30:21.580 --> 30:23.580
其实是一个类数组

30:23.580 --> 30:24.580
是一个类数组

30:24.580 --> 30:25.580
又不是一个

30:25.580 --> 30:26.580
真正的数组

30:26.580 --> 30:27.580
好了

30:27.580 --> 30:28.580
那我们可以怎么做呢

30:28.580 --> 30:29.580
好了

30:29.580 --> 30:30.580
我们拿它

30:30.580 --> 30:31.580
试一下

30:31.580 --> 30:32.580
比如说

30:32.580 --> 30:33.580
我们要进行

30:33.580 --> 30:34.580
数据可视化

30:34.580 --> 30:35.580
对吧

30:35.580 --> 30:36.580
我们要把

30:36.580 --> 30:37.580
所有的这个数组

30:37.580 --> 30:38.580
对吧

30:38.580 --> 30:39.580
每个对象的

30:39.580 --> 30:40.580
这个名字

30:40.580 --> 30:41.580
变到什么

30:41.580 --> 30:42.580
变到这个li之中

30:42.580 --> 30:43.580
那是不是我要怎么样

30:43.580 --> 30:44.580
我们要想的

30:44.580 --> 30:45.580
去辨历一下

30:45.580 --> 30:46.580
这个数组

30:46.580 --> 30:47.580
提供了方式方法

30:47.580 --> 30:48.580
这个方法的一个目的

30:48.580 --> 30:49.580
其实就是让我们

30:49.580 --> 30:50.580
怎么样去辨历它们

30:50.580 --> 30:51.580
或者说就是让我们

30:51.580 --> 30:52.580
更好的

30:52.580 --> 30:53.580
更灵活的

30:53.580 --> 30:55.580
能去操作什么

30:55.580 --> 30:56.580
能去操作

30:56.580 --> 30:57.580
数据的每个元素

30:57.580 --> 30:58.580
那我们现在

30:58.580 --> 30:59.580
操作的目的是什么呢

30:59.580 --> 31:00.580
是要把数据

31:00.580 --> 31:01.580
每个元素的名字

31:01.580 --> 31:03.580
全飞到这个li里面去

31:03.580 --> 31:04.580
我在这前面

31:04.580 --> 31:05.580
已经获取到了

31:05.580 --> 31:06.580
这个li

31:06.580 --> 31:08.580
获取到这个li了

31:08.580 --> 31:09.580
那接下来

31:09.580 --> 31:10.580
我在这

31:10.580 --> 31:11.580
processor,reader

31:11.580 --> 31:12.580
for意思对吧

31:12.580 --> 31:13.580
去执行

31:13.580 --> 31:14.580
接下来以后

31:14.580 --> 31:15.580
我传在这个deal

31:15.580 --> 31:16.580
由于我们也知道

31:16.580 --> 31:17.580
这个材料

31:17.580 --> 31:18.580
每次它是什么了

31:18.580 --> 31:19.580
那我可以这么做

31:19.580 --> 31:21.580
就拿到这个li

31:21.580 --> 31:23.580
好了我这写个index

31:23.580 --> 31:24.580
todder

31:24.580 --> 31:25.580
inertest

31:25.580 --> 31:28.580
用ere.name

31:28.580 --> 31:29.580
我保存一下

31:29.580 --> 31:30.580
ok 咱来看一眼

31:30.580 --> 31:32.580
shut it inside

31:32.580 --> 31:33.580
ok 大家说

31:33.580 --> 31:34.580
这个所有的名字怎么样

31:34.580 --> 31:37.580
全部都塞到了这个li之中

31:37.580 --> 31:38.580
li之中

31:38.580 --> 31:39.580
比如说

31:39.580 --> 31:41.580
这个for意思

31:41.580 --> 31:42.580
它的一个最基本的目的

31:42.580 --> 31:43.580
就是让你去怎么样

31:43.580 --> 31:44.580
让你去便利一下

31:44.580 --> 31:45.580
数据的每个语言数

31:45.580 --> 31:47.580
让你更好地去操作它

31:47.580 --> 31:48.580
当然

31:48.580 --> 31:49.580
它在经验时候的话

31:49.580 --> 31:51.580
是需要你传递这样的

31:51.580 --> 31:52.580
这个函数

31:52.580 --> 31:53.580
作为这样的一个参数的

31:53.580 --> 31:54.580
那要说

31:54.580 --> 31:55.580
实际上

31:55.580 --> 31:57.580
我们是在这个函数中

31:57.580 --> 31:59.580
去完成我们最后

31:59.580 --> 32:00.580
想完成的一个目的

32:00.580 --> 32:02.580
比如说

32:02.580 --> 32:04.580
这是我们for意思

32:04.580 --> 32:05.580
它整体的一个

32:05.580 --> 32:07.580
调用形式

32:07.580 --> 32:08.580
来说

32:08.580 --> 32:10.580
无论说我们在后续

32:10.580 --> 32:11.580
碰到一些业务需求

32:11.580 --> 32:12.580
是需要你去怎么样

32:12.580 --> 32:13.580
便利这个数组的

32:13.580 --> 32:14.580
对吧

32:14.580 --> 32:15.580
那你可以怎么办

32:15.580 --> 32:17.580
你就可以拿这个数据

32:17.580 --> 32:18.580
你就可以拿这个数据

32:18.580 --> 32:20.580
直接去调那个for意思方法

32:20.580 --> 32:21.580
当然

32:21.580 --> 32:22.580
那便利这个数据

32:22.580 --> 32:23.580
你便利它一定是有

32:23.580 --> 32:24.580
你这样的一个目的性的

32:24.580 --> 32:25.580
对吧

32:25.580 --> 32:26.580
你便利它一定是要

32:26.580 --> 32:27.580
把这个数据的某个语言

32:27.580 --> 32:28.580
每一个语言数

32:28.580 --> 32:29.580
可能进行一些的操作

32:29.580 --> 32:30.580
对吧

32:30.580 --> 32:31.580
好了

32:31.580 --> 32:32.580
那我们怎么办呢

32:32.580 --> 32:33.580
我们

32:33.580 --> 32:34.580
比如说

32:34.580 --> 32:35.580
我们可以在for意思

32:35.580 --> 32:36.580
在质询的时候

32:36.580 --> 32:37.580
往里面传递一个函数

32:37.580 --> 32:38.580
我们在这个函数中

32:38.580 --> 32:39.580
真正地去完成

32:39.580 --> 32:40.580
你的一个目的

32:40.580 --> 32:41.580
好

32:41.580 --> 32:42.580
那我们在for来

32:42.580 --> 32:43.580
再来去看一下

32:43.580 --> 32:44.580
就是再来做这个

32:44.580 --> 32:46.580
方法的一个简单的一个总结

32:47.580 --> 32:48.580
首先你看

32:48.580 --> 32:49.580
我们如果按照一个目的

32:49.580 --> 32:50.580
目的来去

32:50.580 --> 32:52.580
我们说如果按照一个目的

32:52.580 --> 32:53.580
来去做的话

32:53.580 --> 32:54.580
就是

32:54.580 --> 32:56.580
应该说有这样的一个标签

32:56.580 --> 32:57.580
好了

32:57.580 --> 32:58.580
那我们就有这样的数据

32:58.580 --> 32:59.580
我们先把这些数据

32:59.580 --> 33:00.580
怎么样

33:00.580 --> 33:01.580
把这些数据

33:01.580 --> 33:02.580
弄得

33:02.580 --> 33:03.580
每一个名字

33:03.580 --> 33:04.580
怎么样

33:04.580 --> 33:05.580
全部随到

33:05.580 --> 33:07.580
将里面去

33:07.580 --> 33:08.580
那如果说

33:08.580 --> 33:09.580
我想这么做的话

33:09.580 --> 33:10.580
这里面逃脱不了

33:10.580 --> 33:11.580
就是便利

33:11.580 --> 33:12.580
因为我说的是

33:12.580 --> 33:13.580
把数据中的每一个名字

33:13.580 --> 33:14.580
然后全部随到里面去

33:14.580 --> 33:15.580
对吧

33:15.580 --> 33:16.580
好了

33:16.580 --> 33:17.580
那随意到便利的话

33:17.580 --> 33:18.580
我们可以怎么样

33:18.580 --> 33:20.580
可以用放映尺

33:20.580 --> 33:21.580
当然有时候说

33:21.580 --> 33:22.580
我用放映尺行不行

33:22.580 --> 33:23.580
对吧

33:23.580 --> 33:24.580
用放映尺行没问题

33:24.580 --> 33:25.580
因为放映尺里面

33:25.580 --> 33:26.580
它也是基于

33:26.580 --> 33:27.580
放映尺来实现的

33:27.580 --> 33:28.580
一会我来实现

33:28.580 --> 33:29.580
它的时候

33:29.580 --> 33:30.580
你就知道了

33:30.580 --> 33:31.580
那数据中现成的

33:31.580 --> 33:32.580
来跟我们提供这个方法

33:32.580 --> 33:33.580
我们就可以拿来

33:33.580 --> 33:34.580
去现成去使用

33:34.580 --> 33:35.580
对不对

33:35.580 --> 33:36.580
别人给了

33:36.580 --> 33:37.580
那我们就来用

33:37.580 --> 33:38.580
对不对

33:38.580 --> 33:39.580
因为你用它

33:39.580 --> 33:40.580
你会觉得拿它

33:40.580 --> 33:41.580
去进行一些开发的话

33:41.580 --> 33:43.580
会更高效一点

33:43.580 --> 33:44.580
那时候

33:44.580 --> 33:45.580
我们的这个目的

33:45.580 --> 33:46.580
我们就知道了

33:46.580 --> 33:47.580
那我们直接拿放映尺

33:47.580 --> 33:49.580
就可以实现这个便利

33:49.580 --> 33:50.580
对吧

33:50.580 --> 33:52.580
在实现这个放映尺的时候

33:52.580 --> 33:53.580
OK

33:53.580 --> 33:54.580
我要传递一个寒宿

33:54.580 --> 33:55.580
那这个寒宿

33:55.580 --> 33:56.580
我们就要

33:56.580 --> 33:57.580
每个形成什么意思

33:57.580 --> 33:58.580
对吧

33:58.580 --> 33:59.580
那我在这样一个寒宿中

33:59.580 --> 34:01.580
真正达成

34:01.580 --> 34:03.580
我们想要做到的事情

34:03.580 --> 34:04.580
那整个这个放映尺

34:04.580 --> 34:05.580
怎么来使用

34:05.580 --> 34:07.580
就已经算是算是算完了

34:07.580 --> 34:08.580
之前

34:08.580 --> 34:10.580
可能我们在讲白课的时候

34:10.580 --> 34:12.580
也会讲一下这个放映尺

34:12.580 --> 34:13.580
怎么来用的对吧

34:13.580 --> 34:14.580
但是咱没有去讲

34:14.580 --> 34:16.580
具体来怎么来去实现的

34:16.580 --> 34:17.580
咱接下来的对吧

34:17.580 --> 34:18.580
我们来讲讲

34:18.580 --> 34:19.580
怎么来实现的

34:19.580 --> 34:21.580
来实现的

34:21.580 --> 34:23.580
怎么来实现的

34:23.580 --> 34:25.580
如果你听会以后的话

34:25.580 --> 34:27.580
你会对这个放映尺方法

34:27.580 --> 34:29.580
看得更深

34:29.580 --> 34:31.580
或者说是

34:31.580 --> 34:33.580
我直接告诉你这个方法

34:33.580 --> 34:34.580
怎么去用对吧

34:34.580 --> 34:35.580
说传这个寒宿

34:35.580 --> 34:36.580
比起这个寒宿里面

34:36.580 --> 34:37.580
是什么意思

34:37.580 --> 34:38.580
其实跟你说完以后的话

34:38.580 --> 34:39.580
你记起来

34:39.580 --> 34:40.580
但是如果

34:40.580 --> 34:42.580
你知道他怎么来实现的话

34:42.580 --> 34:43.580
好了

34:43.580 --> 34:45.580
我觉得你都不用记了

34:45.580 --> 34:47.580
因为你已经懂

34:47.580 --> 34:49.580
你已经懂他怎么来实现的

34:49.580 --> 34:50.580
其实你不记的话

34:50.580 --> 34:52.580
你也会自己去写

34:52.580 --> 34:53.580
但是你看

34:53.580 --> 34:55.580
如果说你已经找我

34:55.580 --> 34:56.580
怎么来写他的话

34:56.580 --> 34:57.580
那自然而然的话

34:57.580 --> 34:58.580
你在使用

34:58.580 --> 34:59.580
你在使用

34:59.580 --> 35:00.580
你完全是知道

35:00.580 --> 35:01.580
每个材料

35:01.580 --> 35:02.580
它是什么意思的

35:02.580 --> 35:03.580
你也不用完全的

35:03.580 --> 35:04.580
去记这个形子

35:04.580 --> 35:05.580
什么样的

35:05.580 --> 35:06.580
我们要做一件事情

35:06.580 --> 35:08.580
就是来看一下

35:08.580 --> 35:09.580
这个放映尺

35:09.580 --> 35:11.580
它具体是怎么来实现的

35:11.580 --> 35:12.580
实现的

35:14.580 --> 35:16.580
那这一块

35:16.580 --> 35:17.580
咱们来看一下

35:17.580 --> 35:20.580
按照我之前一开始所说的

35:20.580 --> 35:22.580
这个放映尺方法

35:22.580 --> 35:23.580
我们说它是定在

35:23.580 --> 35:24.580
OADPRODUCTIME上的

35:24.580 --> 35:25.580
那也要说

35:25.580 --> 35:27.580
咱来先看一下

35:27.580 --> 35:28.580
我们现在没有自己去

35:28.580 --> 35:30.580
实现放映尺方法

35:30.580 --> 35:31.580
我们来直接

35:31.580 --> 35:32.580
输出一下

35:32.580 --> 35:33.580
ARPRODUCTIME

35:33.580 --> 35:34.580
ARPRODUCTIME

35:34.580 --> 35:35.580
ARPRODUCTIME

35:35.580 --> 35:36.580
ARPRODUCTIME

35:36.580 --> 35:37.580
咱来看一下

35:37.580 --> 35:38.580
这里面

35:38.580 --> 35:39.580
到底有没有这个方法

35:39.580 --> 35:41.580
它F開头

35:41.580 --> 35:42.580
F开头

35:42.580 --> 35:43.580
是不是有这个方法

35:43.580 --> 35:45.580
确实是有这个方法的

35:45.580 --> 35:46.580
在这

35:46.580 --> 35:47.580
对吧

35:47.580 --> 35:48.580
这

35:48.580 --> 35:49.580
那我们再来看一下

35:49.580 --> 35:50.580
所谓ARPRODUCTIME

35:50.580 --> 35:51.580
Fall-ish

35:51.580 --> 35:52.580
OK 因为发现

35:52.580 --> 35:53.580
它确实是个本地代码

35:53.580 --> 35:54.580
对吧

35:54.580 --> 35:55.580
这个方法

35:55.580 --> 35:56.580
是人家的暖气

35:56.580 --> 35:57.580
人家这个DNS

35:57.580 --> 35:58.580
提供给你了

35:58.580 --> 35:59.580
你可以接下来

35:59.580 --> 36:00.580
去使用的

36:00.580 --> 36:01.580
接下来

36:01.580 --> 36:02.580
是我们自己写的

36:02.580 --> 36:03.580
这样的方法

36:03.580 --> 36:04.580
我们不用

36:04.580 --> 36:05.580
你

36:05.580 --> 36:06.580
提供给我们的

36:06.580 --> 36:07.580
而我自己去写

36:07.580 --> 36:08.580
而我自己去解决

36:08.580 --> 36:10.580
我叫做一个Fall-ish

36:10.580 --> 36:12.580
Fall-ish

36:12.580 --> 36:15.280
Fall-ish

36:15.280 --> 36:16.280
好

36:16.280 --> 36:17.280
看看好了

36:17.280 --> 36:18.280
现在

36:18.280 --> 36:19.280
我是要自己

36:19.280 --> 36:20.280
去实现

36:20.280 --> 36:21.280
跟Fall-ish

36:21.280 --> 36:22.280
这个方法

36:22.280 --> 36:23.280
相同的一个功能

36:23.280 --> 36:25.280
来去加强我们家的

36:25.280 --> 36:26.280
一个D

36:26.280 --> 36:27.280
来去加强我们家的D

36:27.280 --> 36:28.280
同时

36:28.280 --> 36:29.280
对吧

36:29.280 --> 36:31.280
让大家有一点

36:31.280 --> 36:32.280
就是

36:32.280 --> 36:33.280
对原码

36:33.280 --> 36:35.280
学习这样的一个意识

36:35.280 --> 36:36.280
好了

36:36.280 --> 36:37.280
那咱来看一下

36:37.280 --> 36:38.280
我怎么来自己

36:38.280 --> 36:40.280
去写一个Fall-ish

36:40.280 --> 36:42.280
怎么来自己写一个

36:42.280 --> 36:43.280
首先

36:43.280 --> 36:44.280
你先写一个的话

36:44.280 --> 36:45.280
对吧

36:45.280 --> 36:46.280
你自己心里

36:46.280 --> 36:47.280
一定要明白

36:47.280 --> 36:48.280
明白

36:48.280 --> 36:49.280
我这个方法

36:49.280 --> 36:50.280
不自容是什么

36:50.280 --> 36:51.280
对吧

36:51.280 --> 36:52.280
自容是什么

36:52.280 --> 36:53.280
在写这个方法来说

36:53.280 --> 36:54.280
需要传递

36:54.280 --> 36:56.280
什么参数

36:56.280 --> 36:57.280
这几年

36:57.280 --> 36:58.280
你明确以后的话

36:58.280 --> 36:59.280
你才知道

36:59.280 --> 37:00.280
接下来

37:00.280 --> 37:01.280
要怎么去写

37:01.280 --> 37:02.280
那首先

37:02.280 --> 37:03.280
我们这个Fall-ish

37:03.280 --> 37:05.280
它的目的是

37:05.280 --> 37:07.280
目的是

37:07.280 --> 37:09.280
数组实力

37:09.280 --> 37:12.040
实力

37:12.040 --> 37:14.040
可以调用

37:14.040 --> 37:15.040
这个方法

37:15.040 --> 37:19.400
OK

37:19.400 --> 37:21.400
那当你调用的时候

37:21.400 --> 37:23.400
它会怎么样呢

37:23.400 --> 37:25.400
它要

37:25.400 --> 37:29.540
达到

37:29.540 --> 37:31.540
循环

37:31.540 --> 37:32.540
便利的作用

37:32.540 --> 37:36.300
达到循环便利的作用

37:36.300 --> 37:37.300
对吧

37:37.300 --> 37:38.300
就是那目的对吧

37:38.300 --> 37:40.300
那当然它需要

37:40.300 --> 37:41.300
传怎么样

37:41.300 --> 37:42.300
传一些参数

37:42.300 --> 37:43.300
它参数什么呢

37:43.300 --> 37:44.300
参数呢

37:44.300 --> 37:48.190
就需要一个寒数

37:48.190 --> 37:49.190
寒数

37:49.190 --> 37:51.190
那这个寒数呢

37:55.190 --> 37:56.190
那寒数呢

37:56.190 --> 37:58.190
最后要怎么样

37:58.190 --> 38:00.190
最后要实现

38:00.190 --> 38:01.190
我们

38:01.190 --> 38:03.190
一系列

38:06.190 --> 38:07.190
功能

38:07.190 --> 38:08.190
什么功能呢

38:08.190 --> 38:09.190
就像我刚才说的

38:09.190 --> 38:11.190
就像我刚才所说的对吧

38:11.190 --> 38:12.190
你便利

38:12.190 --> 38:13.190
你便利怎么样

38:13.190 --> 38:14.190
是你另外一个目的

38:14.190 --> 38:15.190
你说你便利它的话

38:15.190 --> 38:16.190
你也是为了

38:16.190 --> 38:17.190
它要去做一件事情

38:17.190 --> 38:18.190
对吧

38:18.190 --> 38:19.190
我们数组的这个

38:19.190 --> 38:20.190
目的

38:20.190 --> 38:21.190
是为了怎么样

38:21.190 --> 38:22.190
为了要去便利

38:22.190 --> 38:23.190
这样的一个

38:23.190 --> 38:24.190
不过

38:24.190 --> 38:25.190
它我们这样的那个

38:25.190 --> 38:26.190
麦Fall-ish这样的一个

38:26.190 --> 38:27.190
方法对吧

38:27.190 --> 38:28.190
它的目的呢

38:28.190 --> 38:29.190
是要去便利整数

38:29.190 --> 38:30.190
整个每个元素

38:30.190 --> 38:31.190
那你便利完的时候

38:31.190 --> 38:32.190
你自己你要知道

38:32.190 --> 38:33.190
你也是有另外一个

38:33.190 --> 38:34.190
目的性的

38:34.190 --> 38:35.190
就比如说

38:35.190 --> 38:36.190
上面对吧

38:36.190 --> 38:37.190
我便利每个

38:37.190 --> 38:38.190
我便利这样的

38:38.190 --> 38:39.190
在这种对不对

38:39.190 --> 38:40.190
好了

38:40.190 --> 38:41.190
那你这样的一个

38:41.190 --> 38:42.190
物理最后时候来

38:42.190 --> 38:43.190
谁来去实现呢

38:43.190 --> 38:44.190
一定是用这个

38:44.190 --> 38:46.190
参数寒数来实现的

38:46.190 --> 38:49.190
那这个寒数

38:49.190 --> 38:50.190
这时候呢

38:50.190 --> 38:52.190
它

38:52.190 --> 38:53.190
我们知道

38:53.190 --> 38:54.190
它

38:54.190 --> 38:56.190
要在

38:56.190 --> 39:00.700
实现的时候

39:00.700 --> 39:01.700
也会

39:01.700 --> 39:03.700
接受

39:05.700 --> 39:06.700
参数

39:06.700 --> 39:07.700
比如说

39:07.700 --> 39:08.700
这个参数

39:08.700 --> 39:09.700
OK

39:09.700 --> 39:10.700
它是一个寒数

39:10.700 --> 39:11.700
那这个寒数

39:11.700 --> 39:12.700
会根据什么

39:12.700 --> 39:13.700
会根据你数捉中的

39:13.700 --> 39:14.700
元素的个数

39:14.700 --> 39:15.700
来实现

39:15.700 --> 39:16.700
这样的次数

39:16.700 --> 39:17.700
每次这个寒数

39:17.700 --> 39:18.700
在执行的时候

39:18.700 --> 39:19.700
OK

39:19.700 --> 39:20.700
也要接受一些

39:20.700 --> 39:21.700
参数

39:21.700 --> 39:22.700
那这个参数

39:22.700 --> 39:23.700
是啥

39:23.700 --> 39:24.700
比如说

39:24.700 --> 39:25.700
是L1

39:25.700 --> 39:26.700
对应那一次

39:26.700 --> 39:27.700
数捉中的什么

39:27.700 --> 39:28.700
数捉中的那些

39:28.700 --> 39:29.700
元素

39:29.700 --> 39:31.700
以及该元素

39:31.700 --> 39:33.700
在数捉中的一个

39:33.700 --> 39:34.700
锁印

39:35.700 --> 39:36.700
它什么呢

39:36.700 --> 39:37.700
它有的就是

39:37.700 --> 39:38.700
数组

39:39.700 --> 39:43.350
OK

39:43.350 --> 39:44.350
OK

39:44.350 --> 39:45.350
那咱来看一下

39:45.350 --> 39:46.350
在这

39:46.350 --> 39:47.350
有时候

39:47.350 --> 39:49.350
我们了解完目的以后

39:49.350 --> 39:50.350
我们也知道

39:50.350 --> 39:51.350
它要接受一个参数

39:51.350 --> 39:52.350
这个参数

39:52.350 --> 39:53.350
这个寒数

39:53.350 --> 39:54.350
来作为一个

39:54.350 --> 39:55.350
占领值以后

39:55.350 --> 39:56.350
那我们就可以

39:56.350 --> 39:57.350
去实现一下它了

39:57.350 --> 39:58.350
可以去实现一下它了

39:58.350 --> 39:59.350
那我们最后

39:59.350 --> 40:00.350
实现完以后的话

40:00.350 --> 40:01.350
其实我们也想怎么样

40:01.350 --> 40:02.350
我们想通过

40:02.350 --> 40:03.350
Person

40:03.350 --> 40:04.350
Array

40:04.350 --> 40:05.350
第二

40:05.350 --> 40:06.350
My4H

40:06.350 --> 40:07.350
对吧

40:07.350 --> 40:08.350
也能达到

40:08.350 --> 40:10.350
上述这样的效果

40:10.350 --> 40:11.350
那在这的话

40:11.350 --> 40:12.350
比如说

40:12.350 --> 40:13.350
我要写一个

40:13.350 --> 40:14.350
Function

40:14.350 --> 40:15.350
Deal

40:15.350 --> 40:16.350
有

40:16.350 --> 40:17.350
就说写一个

40:17.350 --> 40:18.350
ER1

40:19.350 --> 40:20.350
Index

40:20.350 --> 40:21.350
Self

40:21.350 --> 40:22.350
在这

40:22.350 --> 40:23.350
来输出一下

40:23.350 --> 40:24.350
ER1

40:24.350 --> 40:25.350
Index

40:25.350 --> 40:26.350
Self

40:26.350 --> 40:27.350
那时候

40:27.350 --> 40:28.350
我再通过

40:28.350 --> 40:29.350
这个数组

40:29.350 --> 40:30.350
对于My4H

40:30.350 --> 40:31.350
我让你们查查这个Deal

40:31.350 --> 40:32.350
它也会进行

40:32.350 --> 40:33.350
对用那个

40:33.350 --> 40:34.350
刺数

40:34.350 --> 40:35.350
并且每一次

40:35.350 --> 40:36.350
进行的时候

40:36.350 --> 40:37.350
有这样的一些值

40:37.350 --> 40:38.350
那接下来

40:38.350 --> 40:39.350
我要去实现一下它

40:39.350 --> 40:40.350
我要去实现一下它

40:40.350 --> 40:42.350
那我们刚才说

40:42.350 --> 40:44.350
重复去描述的那些东西

40:44.350 --> 40:45.350
那接下来

40:45.350 --> 40:46.350
我们来看一下

40:46.350 --> 40:47.350
如何来去实现

40:47.350 --> 40:48.350
首先这个好像是

40:48.350 --> 40:49.350
我们都知道

40:49.350 --> 40:50.350
它怎么样

40:50.350 --> 40:51.350
它是它对吧

40:51.350 --> 40:52.350
对于这次Deal的话

40:52.350 --> 40:53.350
对吧

40:53.350 --> 40:54.350
它是它

40:54.350 --> 40:55.350
它其实有多少次

40:55.350 --> 40:56.350
取决什么

40:56.350 --> 40:57.350
取决于

40:57.350 --> 40:58.350
你这个数组

40:58.350 --> 40:59.350
语言说的个数对吧

40:59.350 --> 41:00.350
那首先你要知道一点

41:00.350 --> 41:01.350
它的语言说的个数

41:01.350 --> 41:03.350
我们怎么来获取呢

41:03.350 --> 41:04.350
那这个数组

41:04.350 --> 41:05.350
这个方法

41:05.350 --> 41:06.350
OK

41:06.350 --> 41:07.350
那这个方法里面

41:07.350 --> 41:08.350
Deal

41:08.350 --> 41:09.350
我们知道是谁

41:09.350 --> 41:10.350
Deal

41:10.350 --> 41:11.350
一定就是啥

41:11.350 --> 41:16.070
就是Processory

41:16.070 --> 41:17.070
Processory

41:17.070 --> 41:19.070
一定它就是它

41:19.070 --> 41:20.070
那

41:20.070 --> 41:21.070
现在你是它的话

41:21.070 --> 41:22.070
我就可以怎么样

41:22.070 --> 41:23.070
它就会比Less

41:23.070 --> 41:24.070
Deal

41:24.070 --> 41:26.070
Less

41:26.070 --> 41:27.070
L

41:27.070 --> 41:28.070
E

41:28.070 --> 41:29.070
G

41:29.070 --> 41:30.070
D

41:30.070 --> 41:31.070
Deal Less

41:31.070 --> 41:32.070
对吧

41:32.070 --> 41:33.070
OK

41:33.070 --> 41:34.070
再往后来

41:34.070 --> 41:35.070
再往后来

41:35.070 --> 41:36.070
那我知道这个

41:36.070 --> 41:37.070
你有多少个以后的

41:37.070 --> 41:38.070
我要怎么样

41:38.070 --> 41:39.070
这时候

41:39.070 --> 41:40.070
去循环了

41:40.070 --> 41:41.070
循环

41:41.070 --> 41:42.070
去选择

41:42.070 --> 41:43.070
用这个寒树

41:43.070 --> 41:45.070
去选择那个特殊

41:45.070 --> 41:46.070
那现在要循环的话

41:46.070 --> 41:47.070
对吧

41:47.070 --> 41:48.070
它底层这样的一个代码

41:48.070 --> 41:49.070
一定

41:49.070 --> 41:50.070
底层这样的一个逻辑

41:50.070 --> 41:51.070
一定是逃不掉

41:51.070 --> 41:52.070
这种放循环的

41:52.070 --> 41:53.070
对吧

41:53.070 --> 41:54.070
然后在这里

41:54.070 --> 41:55.070
我也挨着点

41:55.070 --> 41:56.070
挨着点

41:56.070 --> 41:57.070
小的这个L1

41:57.070 --> 41:58.070
挨加加

41:58.070 --> 41:59.070
那这样的话

41:59.070 --> 42:00.070
就可以打造

42:00.070 --> 42:01.070
在这里面

42:01.070 --> 42:02.070
循环多少次呢

42:02.070 --> 42:03.070
循环你数组

42:03.070 --> 42:04.070
远速

42:04.070 --> 42:05.070
各数这些特殊

42:05.070 --> 42:06.070
那好了

42:06.070 --> 42:07.070
每一次循环

42:07.070 --> 42:08.070
有时候

42:08.070 --> 42:10.070
它会被循环的去执行

42:10.070 --> 42:11.070
它会被循环执行

42:12.070 --> 42:13.070
OK

42:13.070 --> 42:15.070
那在循环执行的时候

42:15.070 --> 42:17.070
那在循环执行的时候

42:17.070 --> 42:18.070
我要往里面

42:18.070 --> 42:19.070
是要传逸怎么样

42:19.070 --> 42:21.070
要传逸那些实际参数

42:21.070 --> 42:22.070
对吧

42:22.070 --> 42:23.070
因为我们知道

42:23.070 --> 42:24.070
最后这个寒树

42:24.070 --> 42:25.070
你看

42:25.070 --> 42:26.070
它最后这个寒树

42:26.070 --> 42:27.070
在执行的时候

42:27.070 --> 42:28.070
是不是

42:28.070 --> 42:29.070
ELE index

42:29.070 --> 42:30.070
三号里面

42:30.070 --> 42:31.070
都是有值的

42:31.070 --> 42:32.070
那这个值是怎么办呢

42:32.070 --> 42:33.070
是其实就是

42:33.070 --> 42:34.070
在第二层的时候

42:34.070 --> 42:35.070
来传递的

42:35.070 --> 42:36.070
怎么来传呢

42:36.070 --> 42:37.070
首先来传什么

42:37.070 --> 42:38.070
首先来传一下

42:38.070 --> 42:39.070
DIS

42:39.070 --> 42:40.070
中号

42:40.070 --> 42:41.070
到啥呢

42:41.070 --> 42:42.070
中号一个

42:43.070 --> 42:44.070
中号

42:44.070 --> 42:45.070
DIS中号

42:45.070 --> 42:46.070
一个i

42:46.070 --> 42:47.070
一个i

42:47.070 --> 42:49.070
DIS中号i是啥呢

42:49.070 --> 42:50.070
我说了第1个

42:50.070 --> 42:51.070
这个还说第1个这样的

42:51.070 --> 42:52.070
那个参数

42:52.070 --> 42:53.070
应该是

42:53.070 --> 42:54.070
应该是数组的那个元素

42:54.070 --> 42:55.070
对吧

42:55.070 --> 42:56.070
它在循环执行第1次的时候

42:56.070 --> 42:57.070
好了

42:57.070 --> 42:59.070
那这个参数

42:59.070 --> 43:00.070
它啥

43:00.070 --> 43:01.070
它就是数组的第1个

43:01.070 --> 43:02.070
它是数组的第1个

43:02.070 --> 43:03.070
因为它在循环执行第1次的时候

43:03.070 --> 43:04.070
这个i是啥

43:04.070 --> 43:05.070
i是别的

43:05.070 --> 43:06.070
这个DIS

43:06.070 --> 43:07.070
这个DIS就是percent rate

43:07.070 --> 43:08.070
对不对

43:08.070 --> 43:09.070
好了

43:09.070 --> 43:10.070
DIS中号i

43:10.070 --> 43:11.070
实际上就是percent rate

43:11.070 --> 43:12.070
中号0

43:12.070 --> 43:14.070
那有时候这个数组的第1个元素

43:14.070 --> 43:15.070
到都参数了

43:15.070 --> 43:16.070
常见面来了

43:16.070 --> 43:17.070
相应的第2个参数的

43:17.070 --> 43:19.070
是这个元素中的所引

43:19.070 --> 43:20.070
但后来呢

43:20.070 --> 43:21.070
是这个数组的本身

43:21.070 --> 43:22.070
对吧

43:22.070 --> 43:23.070
数组的本身

43:23.070 --> 43:24.070
你会发现

43:24.070 --> 43:25.070
当我去完成

43:25.070 --> 43:26.070
这一些代码以后的话

43:26.070 --> 43:27.070
其实呢

43:27.070 --> 43:28.070
它并没有那么难

43:28.070 --> 43:29.070
对吧

43:29.070 --> 43:30.070
比如说这个

43:30.070 --> 43:31.070
Fall一直真正的实现

43:31.070 --> 43:32.070
也就不过如此

43:32.070 --> 43:33.070
那咱来看一下

43:33.070 --> 43:34.070
咱来看一下

43:34.070 --> 43:35.070
现在啊

43:35.070 --> 43:36.070
我能不能

43:36.070 --> 43:37.070
我能不能通过

43:37.070 --> 43:38.070
这个percent rate

43:38.070 --> 43:39.070
DIS

43:39.070 --> 43:41.070
来达成我们之前

43:41.070 --> 43:42.070
对吧

43:42.070 --> 43:43.070
这种原生提供

43:43.070 --> 43:44.070
Fall一直这样的一个效果

43:44.070 --> 43:45.070
好

43:45.070 --> 43:46.070
咱们看一下

43:46.070 --> 43:47.070
咱来看一下

43:47.070 --> 43:48.070
咱们先看一下

43:48.070 --> 43:49.070
刷新次

43:49.070 --> 43:50.070
在这儿

43:50.070 --> 43:51.070
没发现

43:51.070 --> 43:52.070
58号

43:52.070 --> 43:53.070
确实怎么样

43:53.070 --> 43:54.070
确实是

43:54.070 --> 43:55.070
释出了对的元素

43:55.070 --> 43:56.070
所引

43:56.070 --> 43:57.070
以什么

43:57.070 --> 43:58.070
以这个数组本身

43:58.070 --> 43:59.070
对吧

43:59.070 --> 44:00.070
OK

44:00.070 --> 44:01.070
那这个效果

44:01.070 --> 44:02.070
其实是达到的

44:02.070 --> 44:03.070
那当然

44:03.070 --> 44:04.070
在这儿

44:04.070 --> 44:05.070
比如说ctrl c一下

44:05.070 --> 44:06.070
ctrl c一下

44:06.070 --> 44:07.070
把它拿过来

44:07.070 --> 44:08.070
上过来对吧

44:08.070 --> 44:09.070
好

44:09.070 --> 44:10.070
一保存一次

44:11.070 --> 44:12.070
如果说

44:12.070 --> 44:13.070
如果说

44:13.070 --> 44:15.070
我在这个函数中对吧

44:15.070 --> 44:16.070
对应的

44:16.070 --> 44:17.070
把元素的这个名字

44:17.070 --> 44:19.070
去付给这样的一个li

44:19.070 --> 44:20.070
对吧

44:20.070 --> 44:21.070
好那咱来看一下

44:21.070 --> 44:22.070
其实这里面

44:22.070 --> 44:23.070
最后也会有这样一个名字的

44:23.070 --> 44:24.070
那说我们通过

44:24.070 --> 44:25.070
我们

44:25.070 --> 44:26.070
我们通过

44:26.070 --> 44:27.070
这种

44:27.070 --> 44:28.070
就是

44:28.070 --> 44:30.070
原码的方式对吧

44:30.070 --> 44:31.070
把这个系统

44:31.070 --> 44:32.070
我们提供的

44:32.070 --> 44:33.070
forage

44:33.070 --> 44:34.070
给它实验出来了

44:34.070 --> 44:35.070
那这样的话

44:35.070 --> 44:36.070
你对它这样一个

44:36.070 --> 44:37.070
实用的印象

44:37.070 --> 44:38.070
我相信应该比我一开始

44:38.070 --> 44:40.070
要讲这个forage的时候

44:40.070 --> 44:41.070
我可能讲稍微一点

44:41.070 --> 44:42.070
那那

44:42.070 --> 44:43.070
其实还没有完

44:43.070 --> 44:44.070
还没有完

44:44.070 --> 44:45.070
因为这里面

44:45.070 --> 44:46.070
我没有提到一个点

44:46.070 --> 44:47.070
什么点呢

44:47.070 --> 44:48.070
要说这个

44:48.070 --> 44:49.070
要说这个forage

44:49.070 --> 44:51.070
它在执行的时候

44:51.070 --> 44:52.070
其实它还可以传的

44:52.070 --> 44:53.070
一个拆数

44:53.070 --> 44:54.070
那这个拆数

44:54.070 --> 44:55.070
可能说

44:55.070 --> 44:56.070
不是很

44:56.070 --> 44:57.070
不是特别的常用

44:57.070 --> 44:58.070
偶尔情况下

44:58.070 --> 44:59.070
它也会用用

44:59.070 --> 45:00.070
它说

45:00.070 --> 45:01.070
它可以传进

45:01.070 --> 45:02.070
第二个拆数

45:02.070 --> 45:03.070
这个大拆数

45:03.070 --> 45:04.070
是什么意思呢

45:04.070 --> 45:05.070
我给你来看一下

45:06.070 --> 45:07.070
那我在这

45:07.070 --> 45:08.070
比如说

45:08.070 --> 45:09.070
我给你握一下

45:09.070 --> 45:10.070
一个name

45:10.070 --> 45:11.070
sd

45:11.070 --> 45:12.070
是我的吧

45:12.070 --> 45:13.070
是我

45:13.070 --> 45:14.070
那我在这

45:14.070 --> 45:15.070
比如说

45:15.070 --> 45:16.070
把这个open接

45:16.070 --> 45:17.070
当拆数

45:17.070 --> 45:18.070
往里面一传

45:18.070 --> 45:19.070
好

45:19.070 --> 45:20.070
那这个第二拆数

45:20.070 --> 45:21.070
是什么意思呢

45:21.070 --> 45:22.070
我来再说明一下

45:22.070 --> 45:23.070
forage在执行的时候

45:23.070 --> 45:24.070
OK

45:24.070 --> 45:25.070
你传成这个拆数

45:25.070 --> 45:26.070
是寒数

45:26.070 --> 45:27.070
对吧

45:27.070 --> 45:28.070
这寒数

45:28.070 --> 45:29.070
那每一次执行的时候

45:29.070 --> 45:31.070
它这个形

45:31.070 --> 45:32.070
它这些形材

45:32.070 --> 45:33.070
都会对应

45:33.070 --> 45:34.070
它有一些值

45:34.070 --> 45:35.070
比如说这个数字

45:35.070 --> 45:36.070
对上的元素

45:36.070 --> 45:37.070
和这个元素

45:37.070 --> 45:38.070
跟它所以

45:38.070 --> 45:39.070
包括数字的本身

45:39.070 --> 45:40.070
对吧

45:40.070 --> 45:42.070
那除此之外的话

45:42.070 --> 45:43.070
要知道

45:43.070 --> 45:44.070
这个寒数

45:44.070 --> 45:46.070
它在执行过程中的话

45:46.070 --> 45:47.070
它的dace

45:47.070 --> 45:48.070
它这个dace

45:48.070 --> 45:49.070
是谁

45:49.070 --> 45:50.070
取决谁

45:50.070 --> 45:52.070
取决于你这个

45:52.070 --> 45:53.070
第二位

45:53.070 --> 45:54.070
所传的这个参数

45:54.070 --> 45:55.070
如果你第二位

45:55.070 --> 45:56.070
不传的话

45:56.070 --> 45:57.070
你先来看一下

45:57.070 --> 45:58.070
如果不传的话

45:58.070 --> 45:59.070
在这呢

45:59.070 --> 46:01.070
它就一定是一个window

46:01.070 --> 46:02.070
你看

46:02.070 --> 46:03.070
每一行怎么样

46:03.070 --> 46:04.070
都是window对吧

46:04.070 --> 46:06.070
三八行的每一行

46:06.070 --> 46:07.070
三八行的每一行

46:07.070 --> 46:08.070
输出的第四个字

46:08.070 --> 46:09.070
都是window对吧

46:09.070 --> 46:11.070
那如果说在这你传了

46:11.070 --> 46:13.070
你传了

46:13.070 --> 46:14.070
再来看一下

46:14.070 --> 46:15.070
它是谁了

46:15.070 --> 46:17.070
刷新英词

46:17.070 --> 46:18.070
OK

46:18.070 --> 46:19.070
怎么样

46:19.070 --> 46:20.070
全部都变成啥

46:20.070 --> 46:21.070
全部都变成

46:21.070 --> 46:23.070
你传递的那个对象了

46:23.070 --> 46:24.070
对吧

46:24.070 --> 46:25.070
全部都变成

46:25.070 --> 46:26.070
你传递这样的对象

46:26.070 --> 46:27.070
OK

46:27.070 --> 46:28.070
那好了

46:28.070 --> 46:29.070
那发于是

46:29.070 --> 46:30.070
这个原生中

46:30.070 --> 46:32.070
是具备能处理

46:32.070 --> 46:34.070
第二个参数的

46:34.070 --> 46:35.070
但是说

46:35.070 --> 46:36.070
我们在模拟的时候的话

46:36.070 --> 46:37.070
我们不能说

46:37.070 --> 46:38.070
是只是模拟它一半对吧

46:38.070 --> 46:39.070
这样显得咱们

46:39.070 --> 46:40.070
它很绝对不对

46:40.070 --> 46:42.070
那怎么办呢

46:42.070 --> 46:43.070
在这的话

46:43.070 --> 46:44.070
我们来看一下

46:44.070 --> 46:45.070
如何

46:45.070 --> 46:46.070
你能让我们

46:46.070 --> 46:47.070
这样的一个myf发于是

46:47.070 --> 46:48.070
可以接受什么

46:48.070 --> 46:50.070
可以接受第二个参数

46:50.070 --> 46:51.070
它的参数

46:51.070 --> 46:52.070
可以决定

46:52.070 --> 46:53.070
这个该函数

46:53.070 --> 46:54.070
每次执行的时候

46:54.070 --> 46:55.070
dace

46:55.070 --> 46:56.070
dame

46:56.070 --> 46:57.070
sd

46:57.070 --> 46:58.070
就是

46:58.070 --> 46:59.070
是

46:59.070 --> 47:00.070
octane

47:00.070 --> 47:01.070
有时候

47:01.070 --> 47:02.070
我希望让这个第二个参数

47:02.070 --> 47:03.070
决定一下

47:03.070 --> 47:04.070
我这函数

47:04.070 --> 47:05.070
每次执行的时候

47:05.070 --> 47:06.070
dace到底是谁

47:06.070 --> 47:07.070
对吧

47:07.070 --> 47:08.070
那怎么来做呢

47:08.070 --> 47:09.070
很简单对吧

47:09.070 --> 47:10.070
我们暂时

47:10.070 --> 47:11.070
把原码给解开一下

47:11.070 --> 47:12.070
对吧

47:12.070 --> 47:13.070
所以说

47:13.070 --> 47:14.070
这个函数

47:14.070 --> 47:16.070
每次执行的时候

47:16.070 --> 47:17.070
我要怎么样

47:17.070 --> 47:19.070
我要去控制一下

47:19.070 --> 47:21.070
它函数里面的dace是谁

47:21.070 --> 47:23.070
函数里面的dace是谁

47:23.070 --> 47:24.070
这样

47:24.070 --> 47:26.070
如果我不去

47:26.070 --> 47:28.070
但如果我不去

47:28.070 --> 47:30.070
做一些恶爱的操作的话

47:30.070 --> 47:31.070
这个函数在执行的时候

47:31.070 --> 47:32.070
是没有人去data的

47:32.070 --> 47:34.070
那没有人去data的话

47:34.070 --> 47:35.070
它里面dace

47:35.070 --> 47:36.070
自然是谁

47:36.070 --> 47:37.070
好

47:37.070 --> 47:38.070
那我们之前的基础

47:38.070 --> 47:39.070
一定是window

47:39.070 --> 47:40.070
好

47:40.070 --> 47:42.070
因为一个函数在执行的时候

47:42.070 --> 47:44.070
里面dace取决于什么

47:44.070 --> 47:45.070
取决于

47:45.070 --> 47:46.070
里面dace到底是谁

47:46.070 --> 47:47.070
对吧

47:47.070 --> 47:48.070
取决于

47:48.070 --> 47:49.070
是否有人data对吧

47:49.070 --> 47:50.070
是有人data

47:50.070 --> 47:51.070
如果说没人data的话

47:51.070 --> 47:52.070
那它里面

47:52.070 --> 47:53.070
它里面叫dace

47:53.070 --> 47:54.070
一定是window

47:54.070 --> 47:56.070
一定是window

47:57.070 --> 47:58.070
那它自然还是没有人

47:58.070 --> 47:59.070
去data对吧

47:59.070 --> 48:00.070
那怎么样

48:00.070 --> 48:01.070
它里面dace

48:01.070 --> 48:02.070
一定是window

48:02.070 --> 48:03.070
那我们希望让第二个

48:03.070 --> 48:04.070
参数来决定

48:04.070 --> 48:05.070
它里面dace是谁的

48:05.070 --> 48:06.070
我可以怎么做呢

48:06.070 --> 48:07.070
来同学

48:09.070 --> 48:10.070
想想对吧

48:10.070 --> 48:12.070
可以通过apply

48:12.070 --> 48:13.070
我说通过

48:13.070 --> 48:14.070
就是call

48:14.070 --> 48:15.070
对吧

48:15.070 --> 48:16.070
来去改变一下

48:16.070 --> 48:17.070
这个函数执行时候

48:17.070 --> 48:18.070
你们的dace指向

48:18.070 --> 48:19.070
对不对

48:19.070 --> 48:21.070
那怎么来改变呢

48:21.070 --> 48:22.070
再来看一下

48:22.070 --> 48:24.070
我func dr

48:24.070 --> 48:25.070
不说apply

48:25.070 --> 48:26.070
apply和call

48:26.070 --> 48:27.070
基本上工程是一样的

48:27.070 --> 48:28.070
对不对

48:28.070 --> 48:29.070
我通过apply

48:29.070 --> 48:30.070
来改变一下

48:30.070 --> 48:32.070
这个函数执行的时候

48:32.070 --> 48:33.070
对dace究竟

48:33.070 --> 48:34.070
究竟是谁

48:34.070 --> 48:36.070
那说谁可以来决定

48:36.070 --> 48:37.070
他们dace呢

48:37.070 --> 48:38.070
是apply里面的

48:38.070 --> 48:39.070
第一个参数对吧

48:39.070 --> 48:40.070
第一个参数

48:40.070 --> 48:41.070
你要天使

48:41.070 --> 48:42.070
好

48:42.070 --> 48:43.070
在这呢

48:44.070 --> 48:45.070
我看来wake

48:45.070 --> 48:46.070
wake arg

48:46.070 --> 48:49.070
或者说叫wake this

48:49.070 --> 48:50.070
它等于谁呢

48:50.070 --> 48:52.070
它等于

48:52.070 --> 48:54.070
它等于

48:54.070 --> 48:55.070
arguments

48:55.070 --> 48:56.070
gmts

48:56.070 --> 48:57.070
中号

48:57.070 --> 48:58.070
e

48:58.070 --> 48:59.070
一团可能蒙了

48:59.070 --> 49:00.070
这是什么意思

49:00.070 --> 49:02.070
arguments e

49:02.070 --> 49:03.070
arguments e是谁

49:03.070 --> 49:04.070
你看好了

49:04.070 --> 49:05.070
我这个my file

49:05.070 --> 49:06.070
是这个函数

49:06.070 --> 49:07.070
在执行的时候

49:07.070 --> 49:08.070
它的执行时候

49:08.070 --> 49:09.070
是不是就相当于

49:09.070 --> 49:10.070
它的执行对吧

49:10.070 --> 49:11.070
它在执行的时候

49:11.070 --> 49:12.070
你往里面传了

49:12.070 --> 49:13.070
实际参数

49:13.070 --> 49:14.070
你有可能

49:14.070 --> 49:15.070
只传

49:15.070 --> 49:16.070
你有可能

49:16.070 --> 49:17.070
两个全都传

49:17.070 --> 49:19.070
当这两个全都传的时候

49:20.070 --> 49:21.070
好了

49:21.070 --> 49:22.070
就是这样

49:22.070 --> 49:23.070
不管你传一个

49:23.070 --> 49:24.070
还是有两个两个

49:24.070 --> 49:26.070
我这个函数里面的这个arguments

49:26.070 --> 49:28.070
它叫做实际参数

49:28.070 --> 49:31.150
对吧

49:31.150 --> 49:32.150
它记录了

49:32.150 --> 49:34.150
这个函数在被调的时候

49:34.150 --> 49:36.150
你真正传的那个实际参数

49:36.150 --> 49:38.150
当然你有可能只传一个对吧

49:38.150 --> 49:40.150
也说只传一个的时候的话

49:40.150 --> 49:41.150
你不去考虑到

49:41.150 --> 49:42.150
我这个函数

49:42.150 --> 49:43.150
只能说你们的指向

49:43.150 --> 49:44.150
那说你考虑到的时候

49:44.150 --> 49:45.150
可能你会传两个

49:45.150 --> 49:46.150
好了

49:46.150 --> 49:47.150
那我在这

49:47.150 --> 49:48.150
我在这个my files

49:48.150 --> 49:49.150
再去

49:49.150 --> 49:50.150
再去执行的时候

49:50.150 --> 49:51.150
我在这个代码的时候

49:51.150 --> 49:52.150
我在这个代码的时候

49:52.150 --> 49:53.150
我先怎么样

49:53.150 --> 49:54.150
我先来去看一下

49:54.150 --> 49:55.150
你这个arguments

49:55.150 --> 49:56.150
一

49:56.150 --> 49:58.150
比如说你实际参数

49:58.150 --> 49:59.150
我说的第二个对吧

49:59.150 --> 50:00.150
有没有值

50:00.150 --> 50:01.150
对吧

50:01.150 --> 50:02.150
有没有值

50:02.150 --> 50:03.150
就是如果说

50:03.150 --> 50:04.150
如果说你不等于

50:04.150 --> 50:05.150
那么

50:05.150 --> 50:07.150
如果说你不等于

50:08.150 --> 50:09.150
安底范子

50:10.150 --> 50:11.150
三分之二

50:11.150 --> 50:13.150
如果你不等于

50:13.150 --> 50:14.150
如果你不等于的话

50:14.150 --> 50:15.150
怎么办呢

50:15.150 --> 50:16.150
这个你有值对吧

50:16.150 --> 50:17.150
你有值

50:17.150 --> 50:18.150
我要你这个this

50:18.150 --> 50:20.150
就是你传进来的值

50:20.150 --> 50:21.150
好了

50:21.150 --> 50:22.150
如果你没有值

50:22.150 --> 50:23.150
否则

50:23.150 --> 50:24.150
否则

50:26.150 --> 50:27.150
否则就是

50:27.150 --> 50:28.150
安底范子

50:29.150 --> 50:30.150
不好了

50:30.150 --> 50:31.150
那这边的this

50:31.150 --> 50:32.150
我现在同学已经猜到了

50:32.150 --> 50:33.150
一部分同学

50:33.150 --> 50:34.150
应该是已经猜到了

50:34.150 --> 50:35.150
这个this

50:35.150 --> 50:37.150
我要用它来控制函数

50:37.150 --> 50:38.150
这个时候

50:38.150 --> 50:39.150
他的this到底是谁

50:39.150 --> 50:41.150
用它来控制他们的this

50:41.150 --> 50:42.150
到底是谁

50:42.150 --> 50:43.150
这个时候

50:43.150 --> 50:44.150
这个时候

50:44.150 --> 50:45.150
这个时候

50:45.150 --> 50:47.150
用它来控制他们的this

50:47.150 --> 50:48.150
到底是谁

50:49.150 --> 50:50.150
那就说

50:50.150 --> 50:51.150
当你

50:51.150 --> 50:52.150
在执行它的时候

50:52.150 --> 50:53.150
你有传递

50:53.150 --> 50:55.150
第二个实际参数的时候的话

50:55.150 --> 50:56.150
好了我让这个this

50:56.150 --> 50:58.150
就是你传递的第二个实际参数

50:58.150 --> 50:59.150
如果你没传的话

50:59.150 --> 51:00.150
我就让它是

51:01.150 --> 51:03.150
那我这么说以后的话

51:03.150 --> 51:05.150
我在每次去执行这个函数的时候

51:05.150 --> 51:06.150
我和Prime有没有传递

51:06.150 --> 51:08.150
第一个参数都可以是这个this

51:08.150 --> 51:09.150
因为想的

51:09.150 --> 51:10.150
因为

51:10.150 --> 51:11.150
这个this

51:11.150 --> 51:12.150
在上面已经

51:12.150 --> 51:13.150
根据你是否传递

51:13.150 --> 51:14.150
第二个实际参数

51:14.150 --> 51:15.150
来

51:15.150 --> 51:16.150
来怎么样

51:16.150 --> 51:17.150
来去

51:17.150 --> 51:18.150
觉得他自己知

51:18.150 --> 51:19.150
他是谁了

51:19.150 --> 51:20.150
如果你没传的话

51:20.150 --> 51:21.150
他就是window

51:21.150 --> 51:22.150
你传的话

51:22.150 --> 51:23.150
就是你传的那个值

51:23.150 --> 51:24.150
那我在这个函数

51:24.150 --> 51:25.150
在执行的时候的话

51:25.150 --> 51:26.150
就可以通过他

51:26.150 --> 51:27.150
来控制他们的this

51:27.150 --> 51:28.150
到底是谁了

51:28.150 --> 51:30.150
好那接下来的话

51:30.150 --> 51:31.150
我要在这个

51:31.150 --> 51:32.150
第二个参数这

51:32.150 --> 51:33.150
来放个数组

51:33.150 --> 51:34.150
因为这个

51:34.150 --> 51:35.150
这个数组

51:35.150 --> 51:36.150
还是决定

51:36.150 --> 51:37.150
这个函数真正执行的时候

51:37.150 --> 51:38.150
你们传递

51:38.150 --> 51:39.150
传递的实际参数

51:39.150 --> 51:40.150
换句话说

51:40.150 --> 51:41.150
就

51:41.150 --> 51:42.150
就是他

51:42.150 --> 51:43.150
他的函数

51:43.150 --> 51:44.150
这几个参数

51:44.150 --> 51:45.150
实际上是由

51:45.150 --> 51:46.150
他怎么样

51:46.150 --> 51:47.150
来去提供的

51:47.150 --> 51:48.150
这一边的参数

51:48.150 --> 51:49.150
是指的是谁

51:49.150 --> 51:50.150
就是他来去

51:50.150 --> 51:52.150
这一边值是谁

51:52.150 --> 51:53.150
还是按照我们

51:53.150 --> 51:54.150
之前那个

51:54.150 --> 51:55.150
之前那个规定来

51:55.150 --> 51:56.150
那第一个值是啥

51:56.150 --> 51:58.150
是base

51:58.150 --> 51:59.150
i

51:59.150 --> 52:00.150
有时候这个数组

52:00.150 --> 52:02.150
是数组的元素

52:02.150 --> 52:03.150
第二个值

52:04.150 --> 52:05.150
是这个

52:05.150 --> 52:06.150
所引

52:06.150 --> 52:07.150
那第三个值是啥

52:07.150 --> 52:08.150
第三个值是

52:08.150 --> 52:09.150
数组本身

52:09.150 --> 52:10.150
数组本身

52:10.150 --> 52:11.150
对吧

52:11.150 --> 52:12.150
再看一下

52:12.150 --> 52:14.150
现在当我这么写完以后

52:14.150 --> 52:15.150
当我这么写完以后

52:15.150 --> 52:16.150
再刷新字

52:16.150 --> 52:18.530
好

52:18.530 --> 52:19.530
我忘了

52:19.530 --> 52:20.530
咱没有在这去输出

52:20.530 --> 52:21.530
咱没有在这去输出

52:21.530 --> 52:22.530
输出

52:22.530 --> 52:24.530
e,index,self

52:24.530 --> 52:25.530
包括这个base

52:25.530 --> 52:26.530
咱看

52:26.530 --> 52:27.530
到底是谁

52:27.530 --> 52:28.530
分别是谁

52:28.530 --> 52:29.530
刷新一下

52:29.530 --> 52:30.530
你发现

52:30.530 --> 52:31.530
OK

52:31.530 --> 52:32.530
元素

52:32.530 --> 52:33.530
看

52:33.530 --> 52:34.530
第一个值对的是元素

52:34.530 --> 52:35.530
没问题

52:35.530 --> 52:36.530
e,index

52:36.530 --> 52:37.530
对的是元素

52:37.530 --> 52:38.530
第二个值

52:38.530 --> 52:39.530
index

52:39.530 --> 52:40.530
对的是所引

52:40.530 --> 52:41.530
第三个值

52:41.530 --> 52:42.530
self对的是数组

52:42.530 --> 52:43.530
对吧

52:43.530 --> 52:44.530
输出本身

52:44.530 --> 52:45.530
第四个值能看好了

52:45.530 --> 52:46.530
我们输出是dase

52:46.530 --> 52:47.530
对吧

52:47.530 --> 52:48.530
这个dase

52:49.530 --> 52:51.530
这个dase是谁呢

52:51.530 --> 52:52.530
是不是就是

52:52.530 --> 52:55.530
我在执行发行意义的时候

52:55.530 --> 52:57.530
我传的第二个参数

52:57.530 --> 52:59.530
有时候我可以怎么样

52:59.530 --> 53:00.530
通过它来决定

53:00.530 --> 53:01.530
我含述这个时候

53:01.530 --> 53:03.530
你们的dase到底是谁了

53:03.530 --> 53:04.530
当然如果你不传的话

53:04.530 --> 53:06.530
咱们看一眼

53:06.530 --> 53:07.530
你不传的话

53:07.530 --> 53:08.530
传一次

53:08.530 --> 53:09.530
OK

53:09.530 --> 53:10.530
这是window

53:10.530 --> 53:12.530
这个参数就是window了

53:12.530 --> 53:13.530
dase就变成了

53:13.530 --> 53:15.530
这个dase就变成这样一个window了

53:15.530 --> 53:16.530
比如说

53:16.530 --> 53:18.530
我现在这么写

53:18.530 --> 53:19.530
这么写完以后的话

53:19.530 --> 53:21.530
它跟我们在使用这个for each

53:21.530 --> 53:23.530
系统跟我们提供的for each的时候

53:23.530 --> 53:25.530
它俩是一模一样的

53:25.530 --> 53:27.530
它们是一模一样的方法

53:27.530 --> 53:28.530
OK

53:31.530 --> 53:33.530
目前为止的话

53:33.530 --> 53:34.530
来同学

53:36.900 --> 53:38.900
稍微有点

53:38.900 --> 53:40.900
那现在

53:40.900 --> 53:42.900
这个my for each在使用的时候

53:42.900 --> 53:44.900
应该是没什么大问题

53:44.900 --> 53:46.900
现在

53:46.900 --> 53:47.900
现在我是教你

53:47.900 --> 53:49.900
来是教你怎么来写的

53:49.900 --> 53:50.900
如果你前面计数

53:50.900 --> 53:51.900
什么arguments

53:51.900 --> 53:52.900
dase都不明白

53:52.900 --> 53:53.900
瞧一下的话

53:53.900 --> 53:55.900
你拼起来一定会很困难的

53:55.900 --> 53:56.900
很难受

53:56.900 --> 53:57.900
在这一块的话

53:57.900 --> 53:58.900
我是问你会了

53:58.900 --> 54:00.900
我是问你会了

54:00.900 --> 54:01.900
如果你不会的话

54:01.900 --> 54:03.900
你回去去看一看

54:03.900 --> 54:05.900
因为到这一刻的话

54:05.900 --> 54:07.900
我们是假定

54:07.900 --> 54:09.900
你把之前的东西

54:09.900 --> 54:11.900
都已经掌握的

54:11.900 --> 54:13.900
我们之前掌握的知识

54:13.900 --> 54:15.900
我们继续往下去试吧

54:19.500 --> 54:21.500
原来讲课的时候

54:21.500 --> 54:23.500
老师是不看讨论的

54:23.500 --> 54:25.500
我会讲一段

54:25.500 --> 54:26.500
听了一段

54:26.500 --> 54:27.500
来去看看有没有人说的话

54:27.500 --> 54:29.500
你看我边讲

54:29.500 --> 54:30.500
再边去

54:30.500 --> 54:33.500
再边去看同学说的不一样的话

54:33.500 --> 54:35.500
这个东西就是没有办法

54:35.500 --> 54:39.260
很顺利比较完

54:39.260 --> 54:43.260
好了

54:43.260 --> 54:45.260
咱只用自己写的话

54:45.260 --> 54:46.260
还是需要点时间

54:46.260 --> 54:47.260
你多去磨一磨

54:47.260 --> 54:49.260
他多去磨一磨

54:49.260 --> 54:50.260
那咱这样

54:50.260 --> 54:51.260
麦克风是

54:51.260 --> 54:53.260
我想先稍微认长

54:53.260 --> 54:54.260
因为什么

54:54.260 --> 54:56.260
首先是因为你第一次

54:56.260 --> 54:58.260
来介绍这个

54:58.260 --> 54:59.260
编写

54:59.260 --> 55:00.260
其实我要用它

55:00.260 --> 55:02.260
来做后续的一些的铺垫

55:02.260 --> 55:03.260
因为Filter,Map

55:03.260 --> 55:05.260
Arrison,Reduce

55:05.260 --> 55:06.260
有没有那些

55:06.260 --> 55:07.260
基本的原理

55:07.260 --> 55:08.260
跟Filter

55:08.260 --> 55:09.260
它基本上是一样的

55:09.260 --> 55:10.260
你会

55:10.260 --> 55:11.260
Filter以后

55:11.260 --> 55:13.260
你再去看后面那些东西

55:13.260 --> 55:14.260
相当的比较简单很多

55:14.260 --> 55:16.260
就说咱这个Filter

55:16.260 --> 55:18.260
偏会稍微长了一点

55:18.260 --> 55:19.260
那咱这样

55:19.260 --> 55:20.260
咱接下来

55:20.260 --> 55:21.260
咱来讲Filter

55:21.260 --> 55:22.260
咱们Filter讲Map

55:22.260 --> 55:25.260
再往后来一次的教材来说

55:25.260 --> 55:27.260
Filter

55:27.260 --> 55:28.260
再来看下

55:28.260 --> 55:29.260
Filter

55:29.260 --> 55:30.260
Filter

55:30.260 --> 55:31.260
这个单词

55:31.260 --> 55:32.260
顾名思义

55:32.260 --> 55:33.260
叫做郭律的意思

55:33.260 --> 55:34.260
我们在第二节课上

55:34.260 --> 55:36.260
去讲这样的一个

55:36.260 --> 55:37.260
demo的时候的话

55:37.260 --> 55:38.260
也会偏让它使用到

55:38.260 --> 55:39.260
Filter的方法

55:39.260 --> 55:41.260
偏让它使用到Filter的方法

55:41.260 --> 55:42.260
这个方法的话

55:42.260 --> 55:43.260
我们先来看一下

55:43.260 --> 55:44.260
它到底该怎么用

55:44.260 --> 55:45.260
首先你也知道

55:45.260 --> 55:46.260
它一定有什么

55:46.260 --> 55:47.260
也是定义在

55:47.260 --> 55:48.260
PowerTab

55:48.260 --> 55:49.260
约智商的方法

55:49.260 --> 55:50.260
对吧

55:50.260 --> 55:51.260
感受太深的这个暗器

55:51.260 --> 55:52.260
或者是一个系统

55:52.260 --> 55:53.260
或者是一个家庭庭

55:53.260 --> 55:54.260
对吧

55:54.260 --> 55:55.260
它要提供我们的方法

55:55.260 --> 55:56.260
提供我们的方法

55:56.260 --> 55:57.260
那这个方法呢

55:57.260 --> 55:58.260
好了

55:58.260 --> 55:59.260
它要起到一个

55:59.260 --> 56:01.260
对数组估讳的作用

56:01.260 --> 56:03.260
过滤的作用

56:03.260 --> 56:04.260
好

56:04.260 --> 56:08.080
它对数组估讳的话

56:08.080 --> 56:09.080
其实你要知道一点

56:09.080 --> 56:11.080
就是这个过滤

56:11.080 --> 56:13.080
它能对数组进行过滤

56:13.080 --> 56:15.080
一定也说建立在

56:15.080 --> 56:17.080
它具备便利整个数

56:17.080 --> 56:19.080
这个能力直上的

56:19.080 --> 56:20.080
因为它没有说是

56:20.080 --> 56:21.080
如果说它

56:21.080 --> 56:23.080
如果说它没有便利

56:23.080 --> 56:24.080
这样的一个基本功能

56:24.080 --> 56:25.080
在内的话

56:25.080 --> 56:26.080
对吧

56:26.080 --> 56:27.080
你怎么能让它对吧

56:27.080 --> 56:28.080
对数终

56:28.080 --> 56:29.080
所有的元素进行过滤呢

56:29.080 --> 56:30.080
对不对

56:30.080 --> 56:31.080
所以说

56:31.080 --> 56:32.080
它也是基于什么

56:32.080 --> 56:33.080
是基于

56:33.080 --> 56:34.080
好 便利的

56:34.080 --> 56:36.080
基于便利的

56:36.080 --> 56:37.080
好

56:37.080 --> 56:38.080
那Fueler呢

56:38.080 --> 56:39.080
在执行的时候呢

56:39.080 --> 56:41.080
也需要传递餐

56:41.080 --> 56:43.080
这个餐寿跟方艺室是一样的

56:43.080 --> 56:44.080
是一样的

56:44.080 --> 56:45.080
怎么了

56:45.080 --> 56:46.080
是一个寒寿

56:46.080 --> 56:48.080
这个寒寿呢

56:48.080 --> 56:51.080
也要去定义它一个

56:51.080 --> 56:52.080
刑餐

56:52.080 --> 56:53.080
也要说

56:53.080 --> 56:55.080
这个寒寿会被执行多少次

56:55.080 --> 56:56.080
就是跟方艺室

56:56.080 --> 56:57.080
它也是一样的

56:57.080 --> 56:58.080
就是你输入多少个

56:58.080 --> 56:59.080
它就执行多少次

56:59.080 --> 57:01.080
那这个寒寿

57:02.080 --> 57:04.080
这个寒寿在执行的时候呢

57:04.080 --> 57:06.080
这个Fueler

57:06.080 --> 57:07.080
内部也会把你们传递

57:07.080 --> 57:08.080
实际参数

57:08.080 --> 57:09.080
实际参数呢

57:09.080 --> 57:10.080
也是一而一

57:11.080 --> 57:12.080
index

57:14.080 --> 57:15.080
这个三个刑餐呢

57:15.080 --> 57:17.080
分别是

57:17.080 --> 57:18.080
元素

57:18.080 --> 57:19.080
元素用的

57:19.080 --> 57:20.080
所以

57:20.080 --> 57:22.080
以这样的一个势度本身

57:22.080 --> 57:23.080
那这个刑餐

57:23.080 --> 57:24.080
这三个名字

57:24.080 --> 57:25.080
是我常用的

57:25.080 --> 57:26.080
三个名字

57:26.080 --> 57:27.080
如果说

57:27.080 --> 57:28.080
你不叫这三个名字

57:28.080 --> 57:29.080
你就按顺序

57:29.080 --> 57:30.080
来写

57:30.080 --> 57:31.080
ABC

57:31.080 --> 57:32.080
ABC

57:32.080 --> 57:33.080
其实

57:33.080 --> 57:34.080
也是一样的

57:34.080 --> 57:35.080
因为

57:35.080 --> 57:36.080
这个刑餐的名字

57:36.080 --> 57:38.080
不决定刑餐具体存在

57:38.080 --> 57:39.080
它是什么

57:39.080 --> 57:40.080
而谁来决定呢

57:40.080 --> 57:41.080
是当你调用

57:41.080 --> 57:43.080
这个韩式的手

57:43.080 --> 57:44.080
你传递实际参数

57:44.080 --> 57:45.080
它到底是什么

57:45.080 --> 57:46.080
这个刑餐

57:46.080 --> 57:47.080
才执行的

57:47.080 --> 57:48.080
它是什么

57:48.080 --> 57:49.080
所以说

57:49.080 --> 57:50.080
这边

57:50.080 --> 57:51.080
我写ER1和index和self

57:51.080 --> 57:52.080
完全是为了

57:52.080 --> 57:53.080
语异方来写

57:53.080 --> 57:54.080
你能让你看这个

57:54.080 --> 57:56.080
刑餐大体能知道

57:56.080 --> 57:57.080
每个刑餐是什么意思

57:57.080 --> 57:58.080
ER1

57:58.080 --> 57:59.080
ER2

57:59.080 --> 58:00.080
ER3

58:00.080 --> 58:01.080
ER4

58:01.080 --> 58:02.080
ER5

58:02.080 --> 58:03.080
ER6

58:03.080 --> 58:04.080
ER6

58:04.080 --> 58:05.080
ER7

58:05.080 --> 58:06.080
ER6

58:06.080 --> 58:07.080
ER9

58:07.080 --> 58:08.080
ER8

58:08.080 --> 58:09.080
ER9

58:09.080 --> 58:10.080
ER9

58:10.080 --> 58:11.080
ER9

58:11.080 --> 58:12.080
ER10

58:12.080 --> 58:13.080
ER6

58:13.080 --> 58:14.080
ER11

58:14.080 --> 58:15.080
ER12

58:15.080 --> 58:16.080
ER13

58:16.080 --> 58:17.080
ER14

58:17.080 --> 58:18.080
ER15

58:18.080 --> 58:19.080
ER16

58:19.080 --> 58:20.080
ER17

58:20.080 --> 58:21.080
ER18

58:21.080 --> 58:22.080
ER19

58:22.080 --> 58:23.080
ER20

58:23.080 --> 58:24.080
ER21

58:24.080 --> 58:25.080
ER22

58:25.080 --> 58:26.080
ER22

58:26.080 --> 58:27.080
ER22

58:27.080 --> 58:29.080
写deal对不对

58:29.080 --> 58:29.580
那么写

58:29.580 --> 58:30.280
后来之后呢

58:30.280 --> 58:35.280
index.sephal

58:35.280 --> 58:35.880
ok

58:35.880 --> 58:36.880
我把这样的deal

58:37.880 --> 58:38.280
好

58:38.280 --> 58:39.080
放到里面去

58:39.080 --> 58:39.580
对吧

58:39.580 --> 58:41.080
把他放到里面去

58:41.080 --> 58:42.480
那放到里面去的话

58:42.480 --> 58:43.280
比如说

58:43.280 --> 58:46.380
对面的eie和index.sephal的话

58:46.380 --> 58:46.580
对吧

58:46.580 --> 58:47.380
这个你实说的话

58:47.380 --> 58:48.180
也跟falsh

58:48.180 --> 58:49.180
他是一模一样的

58:49.180 --> 58:49.680
一模一样的

58:49.680 --> 58:50.680
你可以这么写啊

58:50.680 --> 58:52.080
你可以这么写啊

58:52.080 --> 58:53.480
但很多人呢

58:53.480 --> 58:53.980
对吧

58:53.980 --> 58:55.180
就是简变啊

58:55.180 --> 58:56.180
可能他不这么写

58:56.180 --> 58:56.480
对吧

58:56.480 --> 58:57.980
他怎么写呢

58:57.980 --> 59:00.380
他就在这里写给你们看

59:02.580 --> 59:03.280
写个

59:03.280 --> 59:03.680
eie

59:04.880 --> 59:06.280
index.sephal

59:06.280 --> 59:06.880
他就这么写

59:06.880 --> 59:07.680
这么写

59:07.680 --> 59:08.580
跟我刚才那么写

59:08.580 --> 59:09.580
其实一样的

59:09.580 --> 59:10.480
其实一样的

59:10.480 --> 59:12.980
你是不是都是让一个函数怎么样

59:12.980 --> 59:15.280
去变成了filter这样的一个

59:15.280 --> 59:16.680
实际的一个参数啊

59:16.680 --> 59:17.080
对吧

59:17.080 --> 59:18.380
你刚才那么写和笑那么写

59:18.380 --> 59:19.280
他还是一个意思啊

59:19.280 --> 59:20.280
是一个意思啊

59:20.280 --> 59:21.480
好

59:21.480 --> 59:22.280
可以说

59:22.280 --> 59:22.980
presso-ray啊

59:22.980 --> 59:24.280
这个基本的deal形式

59:24.280 --> 59:25.280
它是这样的啊

59:25.280 --> 59:28.580
但咱还没有完全给filter解释完

59:28.580 --> 59:29.580
那好了

59:29.580 --> 59:30.780
那

59:30.780 --> 59:32.480
这往下来说的话

59:32.480 --> 59:33.580
我们要知道一点

59:33.580 --> 59:35.080
filter啊

59:35.080 --> 59:35.980
执行完以后

59:35.980 --> 59:38.480
这个函数

59:38.480 --> 59:40.780
执行完以后啊

59:40.780 --> 59:42.580
它会

59:42.580 --> 59:44.080
返回

59:44.080 --> 59:46.480
一个新的数组啊

59:46.480 --> 59:48.680
比如说filter执行完

59:48.680 --> 59:49.980
filter执行完

59:49.980 --> 59:50.580
是filter

59:50.580 --> 59:51.180
它执行完

59:51.180 --> 59:52.480
是有返回值的

59:52.480 --> 59:53.580
这个返回值啥

59:53.580 --> 59:54.780
是一个新的数组

59:54.880 --> 59:57.280
那我可以这样在这握一个nu-ray

59:57.280 --> 59:58.580
nu-ray

59:58.580 --> 59:59.880
来等于它

59:59.880 --> 01:00:01.380
nu-ray等于它什么意思呢

01:00:01.380 --> 01:00:03.480
就是这个数组调filter

01:00:03.480 --> 01:00:04.780
filter啊

01:00:04.780 --> 01:00:05.980
这个函数执行完以后

01:00:05.980 --> 01:00:06.880
返回一个新的数组

01:00:06.880 --> 01:00:07.280
对吧

01:00:07.280 --> 01:00:08.780
我用nu-ray来存着

01:00:08.780 --> 01:00:08.980
对吧

01:00:08.980 --> 01:00:12.980
我可以在这输出这个nu-ray

01:00:12.980 --> 01:00:14.180
nu-ray

01:00:14.180 --> 01:00:15.180
好了

01:00:15.180 --> 01:00:16.180
我们知道了

01:00:16.180 --> 01:00:17.680
这个filter最后会返回一个新的数组

01:00:17.680 --> 01:00:18.180
对吧

01:00:18.180 --> 01:00:19.180
OK

01:00:19.180 --> 01:00:19.780
那

01:00:19.780 --> 01:00:20.880
当然呢

01:00:20.880 --> 01:00:21.780
除了这一外的话

01:00:21.780 --> 01:00:23.280
我们要再来看一下

01:00:23.280 --> 01:00:24.780
这个filter

01:00:24.780 --> 01:00:25.880
filter

01:00:25.880 --> 01:00:28.280
它其实是具备什么过滤的一个功能

01:00:28.280 --> 01:00:28.580
对吧

01:00:28.580 --> 01:00:30.180
那怎么来过滤呢

01:00:30.180 --> 01:00:31.380
那这一块

01:00:31.380 --> 01:00:34.980
就给你传递的这个函数有关系了

01:00:34.980 --> 01:00:35.880
因为这个函数呢

01:00:35.880 --> 01:00:37.880
会对应执行很多次对吧

01:00:37.880 --> 01:00:38.880
那每一次

01:00:38.880 --> 01:00:40.480
这个函数在执行的时候

01:00:40.480 --> 01:00:43.380
看这个参数函数在执行的时候

01:00:43.380 --> 01:00:45.480
它所返回这个

01:00:45.480 --> 01:00:46.380
是错

01:00:46.380 --> 01:00:47.680
还是false

01:00:47.680 --> 01:00:50.480
决定对应这次这个元素

01:00:50.480 --> 01:00:52.180
是否留在

01:00:52.180 --> 01:00:55.580
filter最后返回的新数之中

01:00:55.880 --> 01:00:56.580
有时候这个filter

01:00:56.580 --> 01:00:57.980
最后这个玩意会返回一个新数组

01:00:57.980 --> 01:00:58.480
对吧

01:00:58.480 --> 01:00:59.780
返回一个新数组

01:00:59.780 --> 01:01:00.880
那filter

01:01:00.880 --> 01:01:02.980
说执行完以后返回一个新数

01:01:02.980 --> 01:01:04.380
那在执行的过程中呢

01:01:04.380 --> 01:01:06.580
就会不停地去调这个函数

01:01:06.580 --> 01:01:08.180
那这个函数每次被调的时候呢

01:01:08.180 --> 01:01:09.580
都会对应传递这样的一个行

01:01:09.580 --> 01:01:11.680
都会对应传递这样的一个实际函数

01:01:11.680 --> 01:01:12.380
对吧

01:01:12.380 --> 01:01:13.480
传递以后的话

01:01:13.480 --> 01:01:13.680
OK

01:01:13.680 --> 01:01:15.180
它会根据这个函数

01:01:15.180 --> 01:01:17.180
最后返回的这个决定是错

01:01:17.180 --> 01:01:17.980
还是false

01:01:17.980 --> 01:01:20.180
决定对应你传的这个元素

01:01:20.180 --> 01:01:21.780
太保留在这个新数之中

01:01:21.780 --> 01:01:22.580
我这么讲

01:01:22.580 --> 01:01:23.480
应该能明白

01:01:23.480 --> 01:01:26.440
对吧

01:01:27.640 --> 01:01:28.540
什么应该更明白

01:01:28.540 --> 01:01:29.140
是吧

01:01:29.140 --> 01:01:30.140
咱们这个

01:01:30.140 --> 01:01:30.940
咱们要下课的话

01:01:30.940 --> 01:01:32.640
规则到11点吧

01:01:32.640 --> 01:01:33.740
可能

01:01:33.740 --> 01:01:34.440
明白了

01:01:34.440 --> 01:01:35.140
OK

01:01:36.440 --> 01:01:37.640
那个

01:01:37.640 --> 01:01:38.140
明白的话

01:01:38.140 --> 01:01:38.840
咱们这样

01:01:38.840 --> 01:01:39.340
怎么这样

01:01:39.340 --> 01:01:40.840
咱们现在再往下来讲

01:01:42.940 --> 01:01:43.840
看距离时间嘛

01:01:43.840 --> 01:01:44.140
对吧

01:01:44.140 --> 01:01:44.940
咱们这怎么说呢

01:01:44.940 --> 01:01:46.840
就先变想到今天下课了

01:01:46.840 --> 01:01:47.440
对吧

01:01:47.440 --> 01:01:49.040
我这个

01:01:49.040 --> 01:01:51.540
讲一课这个具体的一个时间嘛

01:01:51.540 --> 01:01:52.540
可能不太一定

01:01:52.540 --> 01:01:53.540
可能这个不太

01:01:53.540 --> 01:01:54.340
怎么办

01:01:54.340 --> 01:01:56.440
我们也可能会讲的时间会比较长

01:01:56.440 --> 01:01:58.640
我希望在一几块能把更多东西

01:01:58.640 --> 01:02:00.240
这个交给大家

01:02:00.240 --> 01:02:01.840
是把一系列的这些点

01:02:01.840 --> 01:02:02.340
交给大家

01:02:02.340 --> 01:02:02.940
因为他们之间

01:02:02.940 --> 01:02:04.340
毕竟是有一些太联关性了

01:02:07.340 --> 01:02:07.940
对

01:02:07.940 --> 01:02:09.740
跟这东西都会讲

01:02:09.740 --> 01:02:11.140
我讲完一两个以后的话

01:02:11.140 --> 01:02:12.340
后面就快了

01:02:12.340 --> 01:02:13.040
后面太

01:02:13.040 --> 01:02:14.040
太太太快了

01:02:16.340 --> 01:02:17.240
这你知道吗

01:02:17.240 --> 01:02:17.840
在你之前啊

01:02:17.840 --> 01:02:18.440
这样讲完啊

01:02:18.440 --> 01:02:19.340
我先来讲完

01:02:19.340 --> 01:02:20.040
能这样

01:02:20.040 --> 01:02:20.540
能这样

01:02:20.540 --> 01:02:21.340
再先来再往下说

01:02:21.340 --> 01:02:21.840
行吧

01:02:21.840 --> 01:02:22.540
再往下说

01:02:22.540 --> 01:02:23.440
好

01:02:23.440 --> 01:02:25.040
我再重新去描述一下

01:02:25.040 --> 01:02:26.640
比如说这个韩束金

01:02:26.640 --> 01:02:27.140
金完以后

01:02:27.140 --> 01:02:27.840
他说反复的这个

01:02:27.840 --> 01:02:28.540
只是除了voss

01:02:28.540 --> 01:02:30.040
决定这个元素怎么样

01:02:30.040 --> 01:02:32.240
最后是否会留在

01:02:32.240 --> 01:02:33.940
这个反复的新数字中

01:02:33.940 --> 01:02:35.040
那如果说我看到这个

01:02:35.040 --> 01:02:35.840
韩幕是处的话

01:02:35.840 --> 01:02:36.040
对吧

01:02:36.040 --> 01:02:36.540
你看

01:02:36.540 --> 01:02:37.640
我就载这个韩束

01:02:37.640 --> 01:02:38.740
我又不会再处对吧

01:02:38.740 --> 01:02:39.840
比如说这个韩束金

01:02:39.840 --> 01:02:40.740
voss对吧

01:02:40.740 --> 01:02:41.140
他都会

01:02:41.140 --> 01:02:42.540
他都会去反复处

01:02:42.540 --> 01:02:43.940
这边证明

01:02:43.940 --> 01:02:46.940
每个元素都会去留下来啊

01:02:46.940 --> 01:02:47.440
对吧

01:02:47.440 --> 01:02:48.340
那咱来看一下是不是

01:02:48.340 --> 01:02:49.840
我们看一下这个Newellry

01:02:49.840 --> 01:02:50.340
Newellry

01:02:50.340 --> 01:02:50.940
Newellry你看

01:02:50.940 --> 01:02:51.240
OK

01:02:51.240 --> 01:02:53.040
是不是每个元素都来了

01:02:53.040 --> 01:02:53.540
对吧

01:02:53.540 --> 01:02:54.740
那相应的

01:02:54.840 --> 01:02:56.040
如果这里贴voss呢

01:02:57.640 --> 01:02:58.340
保存一下

01:02:59.340 --> 01:02:59.840
赞金

01:03:00.040 --> 01:03:00.540
对吧

01:03:00.540 --> 01:03:01.740
其实一个都不留啊

01:03:01.740 --> 01:03:02.240
对吧

01:03:02.240 --> 01:03:03.940
但是说我可以通过控制

01:03:03.940 --> 01:03:06.240
你的反复只是除害voss来决定

01:03:06.240 --> 01:03:07.840
这个有时候是否存留

01:03:07.840 --> 01:03:08.240
对吧

01:03:08.240 --> 01:03:11.040
那这也是他过滤的

01:03:11.040 --> 01:03:14.240
这样的一个功能的一个体现

01:03:14.240 --> 01:03:16.040
有时候我们怎么能完成

01:03:16.040 --> 01:03:17.440
这样一个过滤功能的

01:03:17.440 --> 01:03:17.840
对吧

01:03:17.840 --> 01:03:18.740
实际上是由这个

01:03:18.740 --> 01:03:20.740
韩束金的反复值来怎么样

01:03:20.740 --> 01:03:22.340
来去实现这样的过滤

01:03:22.340 --> 01:03:23.540
来来去实现

01:03:23.540 --> 01:03:25.440
那时候他来决定

01:03:25.440 --> 01:03:27.740
你是否让谁去留

01:03:27.740 --> 01:03:28.440
去留

01:03:28.440 --> 01:03:29.240
那比如咱们这样

01:03:29.240 --> 01:03:30.340
咱们这样

01:03:30.340 --> 01:03:31.640
咱们可以这么来做

01:03:31.640 --> 01:03:32.440
比如说我在这

01:03:32.440 --> 01:03:33.140
好

01:03:33.140 --> 01:03:33.840
韩束

01:03:33.840 --> 01:03:35.040
我们会值很多次对吧

01:03:35.040 --> 01:03:35.240
好

01:03:35.240 --> 01:03:36.140
每次值的时候

01:03:36.140 --> 01:03:36.640
好

01:03:36.640 --> 01:03:37.840
这个EreindiceSelf

01:03:37.840 --> 01:03:39.240
我们都已经知道他是什么了对吧

01:03:39.240 --> 01:03:39.440
好了

01:03:39.440 --> 01:03:40.640
接下来我这么做

01:03:40.640 --> 01:03:41.540
要这么做

01:03:41.540 --> 01:03:42.740
我A什么样子下去吗

01:03:42.740 --> 01:03:43.440
我A什么样子上

01:03:43.440 --> 01:03:43.940
什么呢

01:03:43.940 --> 01:03:44.540
我看一下

01:03:44.540 --> 01:03:46.840
如果你这个Ere对象啊

01:03:46.840 --> 01:03:47.740
他的Size属性

01:03:47.740 --> 01:03:49.040
你看他有Size属性啊

01:03:49.040 --> 01:03:50.040
Size属性啊

01:03:50.040 --> 01:03:50.940
M male对吧

01:03:50.940 --> 01:03:52.040
代表的是男的

01:03:52.040 --> 01:03:52.640
F female

01:03:52.640 --> 01:03:53.440
代表是女的对吧

01:03:53.440 --> 01:03:56.440
比如说我想把Self的女的

01:03:56.440 --> 01:03:58.140
好像都过滤没对吧

01:03:58.140 --> 01:03:58.940
只留什么呢

01:03:58.940 --> 01:03:59.840
只留男的

01:03:59.840 --> 01:04:00.440
那怎么办呢

01:04:00.440 --> 01:04:00.740
对吧

01:04:00.740 --> 01:04:02.840
我给你看一下EreindiceSelf

01:04:02.840 --> 01:04:04.140
是否等于什么

01:04:04.140 --> 01:04:07.140
是否等于这个代母

01:04:07.140 --> 01:04:08.240
我说把女的怎么样

01:04:08.240 --> 01:04:08.940
全过滤没对吧

01:04:08.940 --> 01:04:10.540
把男的全留下啊

01:04:10.540 --> 01:04:11.440
那比如说

01:04:11.440 --> 01:04:12.740
分到这边来操作的话

01:04:12.740 --> 01:04:14.540
就是每次还是制整的时候对吧

01:04:14.540 --> 01:04:15.740
我都把对方的那个语言

01:04:15.740 --> 01:04:16.240
送拿过来

01:04:16.240 --> 01:04:17.140
我看一下

01:04:17.140 --> 01:04:18.640
哎你的Size是男是女对吧

01:04:18.640 --> 01:04:19.840
如果你是男怎么办呢

01:04:19.840 --> 01:04:21.140
我就随身处对吧

01:04:21.140 --> 01:04:21.440
好了

01:04:21.440 --> 01:04:23.340
你会被留在心事之中

01:04:23.340 --> 01:04:23.840
对吧

01:04:23.840 --> 01:04:25.140
那如果你不是男

01:04:25.140 --> 01:04:25.640
你是女的

01:04:25.640 --> 01:04:25.840
对吧

01:04:25.840 --> 01:04:26.940
我就return false

01:04:28.240 --> 01:04:29.640
是不是我这么做以后的话

01:04:29.640 --> 01:04:31.440
就咱来看一下Nurie

01:04:32.440 --> 01:04:33.940
里面就全是什么

01:04:33.940 --> 01:04:37.140
看男的男的对吧

01:04:37.340 --> 01:04:38.240
他也是一样的

01:04:39.440 --> 01:04:40.140
男的对吧

01:04:40.140 --> 01:04:40.940
都是男的对吧

01:04:40.940 --> 01:04:41.840
三个全男的

01:04:41.840 --> 01:04:42.640
相应的

01:04:42.640 --> 01:04:44.340
如果我这天F的对吧

01:04:44.340 --> 01:04:45.740
如果你是女的我留你

01:04:45.740 --> 01:04:46.240
你是男的

01:04:46.240 --> 01:04:46.840
我不留你呢

01:04:46.840 --> 01:04:47.640
消息一下

01:04:47.640 --> 01:04:48.640
在什么时候两个了

01:04:49.640 --> 01:04:49.840
好

01:04:49.840 --> 01:04:50.940
女的对吧

01:04:50.940 --> 01:04:51.940
女的王秀勇对吧

01:04:52.040 --> 01:04:53.540
我的名字他就是女的

01:04:55.340 --> 01:04:56.140
那比如说

01:04:56.140 --> 01:04:57.840
我可以通过对吧

01:04:57.840 --> 01:05:00.540
在函数中来进行一些的判断

01:05:01.340 --> 01:05:03.340
我们最后这样一个过滤的一个功能

01:05:03.340 --> 01:05:03.840
啊

01:05:03.840 --> 01:05:04.740
那我刚才这么写了

01:05:04.740 --> 01:05:06.540
其实在我台是比较麻烦的

01:05:06.540 --> 01:05:07.940
所以我可以直接这么来写啊

01:05:07.940 --> 01:05:08.940
就说最后你准备

01:05:08.940 --> 01:05:11.040
他那个指示来决定啊

01:05:11.040 --> 01:05:13.340
来决定他是否去留对吧

01:05:13.340 --> 01:05:14.040
那我准备啥呢

01:05:14.040 --> 01:05:16.440
我准备一样一点Size

01:05:17.140 --> 01:05:18.240
我等于M

01:05:18.940 --> 01:05:20.440
啊我这么写不就行吗

01:05:20.540 --> 01:05:21.540
啊这什么情况

01:05:21.540 --> 01:05:22.940
这是一个比较就算主要对吧

01:05:22.940 --> 01:05:25.040
他做比较完以后会返回出个False

01:05:25.040 --> 01:05:25.440
啊

01:05:25.440 --> 01:05:26.540
比如说我想做一些事情

01:05:26.540 --> 01:05:28.440
就是把所有的男的全留下来

01:05:28.440 --> 01:05:29.140
那是不是

01:05:29.140 --> 01:05:30.040
如果你是男的话

01:05:30.040 --> 01:05:31.240
我就希望你返回出了

01:05:31.240 --> 01:05:31.640
对吧

01:05:31.640 --> 01:05:32.840
那我就直接水腾

01:05:32.840 --> 01:05:33.840
一来一点Size

01:05:33.840 --> 01:05:35.040
都能M就可以了

01:05:35.040 --> 01:05:35.340
对吧

01:05:35.340 --> 01:05:36.140
如果你是男的话

01:05:36.140 --> 01:05:37.140
自然而然也是出了

01:05:37.140 --> 01:05:37.640
如果是女的

01:05:37.640 --> 01:05:38.840
那他自然而然是False

01:05:38.840 --> 01:05:39.840
你就他不留了

01:05:39.840 --> 01:05:40.240
对吧

01:05:40.240 --> 01:05:41.440
那我直接通过一句话

01:05:41.440 --> 01:05:42.440
先减写对吧

01:05:42.440 --> 01:05:44.240
不用False来判断

01:05:44.240 --> 01:05:45.040
减写

01:05:45.040 --> 01:05:48.740
就可以打手我们刚才所说的那个效果

01:05:48.740 --> 01:05:49.540
效果啊

01:05:49.540 --> 01:05:50.440
大家看一下

01:05:50.440 --> 01:05:51.540
我们在这啊

01:05:51.540 --> 01:05:52.240
哎你看

01:05:52.240 --> 01:05:53.340
我可以通过

01:05:53.340 --> 01:05:53.940
男

01:05:55.340 --> 01:05:55.840
对吧

01:05:56.740 --> 01:05:57.840
对我们再往

01:05:57.840 --> 01:05:59.040
我们我们我们最后

01:05:59.040 --> 01:06:00.440
要完成一个功能是吧

01:06:00.440 --> 01:06:02.340
就是你要通过男女怎么样

01:06:02.340 --> 01:06:03.840
来进行这样一些的过滤

01:06:03.840 --> 01:06:05.440
但这个功能我没有想啊

01:06:05.440 --> 01:06:07.240
我说通过男女对吧

01:06:07.240 --> 01:06:08.440
来进行性命的过滤

01:06:08.440 --> 01:06:09.540
包括比如说在这

01:06:09.540 --> 01:06:10.740
写上一些名字

01:06:10.740 --> 01:06:11.840
他写什么王

01:06:11.840 --> 01:06:13.040
对吧写个王啊

01:06:13.040 --> 01:06:14.640
我要把所有姓王怎么样

01:06:14.640 --> 01:06:15.540
全留下来的吧

01:06:15.540 --> 01:06:16.740
所有的不同姓王呢

01:06:16.740 --> 01:06:18.340
全顾虑眉啊

01:06:18.340 --> 01:06:19.340
那所以说

01:06:19.340 --> 01:06:21.340
你看最后我想完成这样一个

01:06:21.340 --> 01:06:22.140
功能的话

01:06:22.140 --> 01:06:23.940
实际上就是什么

01:06:23.940 --> 01:06:24.740
就是通过这个

01:06:24.740 --> 01:06:26.940
filter来对这一些的速度

01:06:26.940 --> 01:06:28.540
进行来回的一个过滤

01:06:28.540 --> 01:06:30.140
进行来回的过滤啊

01:06:30.140 --> 01:06:31.340
那这一块啊

01:06:31.340 --> 01:06:32.540
讲filter这一块的话

01:06:32.540 --> 01:06:34.040
我希望我希望你回去啊

01:06:34.040 --> 01:06:34.840
看什么

01:06:35.540 --> 01:06:36.640
除了把我这个

01:06:36.640 --> 01:06:37.540
今天借借课

01:06:37.540 --> 01:06:39.140
再重再重新复

01:06:39.140 --> 01:06:40.940
再重新去复习一点以外的话

01:06:40.940 --> 01:06:41.940
我希望你就看一下这个

01:06:41.940 --> 01:06:43.140
你不知道的 gs

01:06:43.140 --> 01:06:45.240
你不知道的 gs

01:06:45.240 --> 01:06:46.340
你不要 gs 没有借

01:06:46.340 --> 01:06:47.540
叫吃寒兽

01:06:47.540 --> 01:06:48.840
不要吃寒兽吃寒兽

01:06:48.840 --> 01:06:50.340
你把这个前半部分

01:06:50.340 --> 01:06:51.340
传输前半部分

01:06:51.340 --> 01:06:52.740
能完全看得懂的话

01:06:52.740 --> 01:06:53.540
就可以了

01:06:53.540 --> 01:06:54.740
就可以了

01:06:54.740 --> 01:06:56.140
你回去看看他

01:06:56.140 --> 01:06:57.940
什么叫什么叫什么叫吃寒兽

01:06:57.940 --> 01:06:58.940
就叫吃寒兽

01:06:58.940 --> 01:07:00.540
你集合的你去来看一看

01:07:00.540 --> 01:07:02.140
这是作为一个小作业

01:07:02.140 --> 01:07:02.540
对吧

01:07:02.540 --> 01:07:03.740
小了小了小了

01:07:03.740 --> 01:07:04.940
小了一个客人作业

01:07:04.940 --> 01:07:06.140
你回去你自己去看一看

01:07:07.140 --> 01:07:08.140
好

01:07:08.140 --> 01:07:08.740
那接下来呢

01:07:08.740 --> 01:07:09.640
我们要做一件事情啊

01:07:09.640 --> 01:07:10.440
我们要做一件事情

01:07:10.440 --> 01:07:11.040
这个filter

01:07:11.040 --> 01:07:11.840
我们在后来

01:07:11.840 --> 01:07:13.040
我们在这个第二节课中啊

01:07:13.040 --> 01:07:13.940
会平常就使用啊

01:07:13.940 --> 01:07:15.340
会平常就使用

01:07:15.340 --> 01:07:15.940
所以说呢

01:07:15.940 --> 01:07:18.740
我就不太去多讲大家的一个应用场景了

01:07:19.240 --> 01:07:20.940
那使用的这个频率是很显凡的

01:07:20.940 --> 01:07:21.740
我们接下来呢

01:07:21.740 --> 01:07:23.740
也会去进行这样的一些操作

01:07:23.740 --> 01:07:25.440
那我们啊

01:07:25.440 --> 01:07:26.240
现在呢

01:07:26.240 --> 01:07:28.740
开始来写一个自己的啊

01:07:28.740 --> 01:07:30.740
写个自己的这样的一个filter方法啊

01:07:30.740 --> 01:07:32.540
写个自己的一个filter方法

01:07:32.540 --> 01:07:33.040
那在这呢

01:07:33.040 --> 01:07:34.440
我给你注释掉了一下

01:07:34.440 --> 01:07:35.340
注释掉了一下

01:07:35.340 --> 01:07:36.640
好

01:07:36.640 --> 01:07:39.340
那自己写了这样的一个filter方法的话

01:07:39.340 --> 01:07:40.640
其实也没多难

01:07:40.640 --> 01:07:41.340
也没多难

01:07:41.340 --> 01:07:42.040
首先呢

01:07:42.040 --> 01:07:42.940
还是一样的

01:07:42.940 --> 01:07:44.140
然后在这个呃

01:07:44.140 --> 01:07:45.540
原形上去定一个方法

01:07:45.540 --> 01:07:46.740
叫Maple

01:07:46.740 --> 01:07:47.440
Maple的方法

01:07:47.440 --> 01:07:48.540
那这个方法呢

01:07:48.640 --> 01:07:50.140
让它等于一个函数啊

01:07:50.140 --> 01:07:50.740
等于函数

01:07:50.740 --> 01:07:51.340
比如说

01:07:51.340 --> 01:07:51.940
最后呢

01:07:51.940 --> 01:07:52.440
也是啊

01:07:52.440 --> 01:07:53.640
通过这个processor array

01:07:54.440 --> 01:07:55.540
processor dr

01:07:55.540 --> 01:07:56.340
processor array啊

01:07:56.940 --> 01:07:58.340
dr myfilter

01:07:58.640 --> 01:07:58.940
是行

01:07:58.940 --> 01:07:59.340
对吧

01:07:59.340 --> 01:08:00.740
往里面插一个函数

01:08:04.480 --> 01:08:04.780
啊

01:08:04.780 --> 01:08:05.380
插函数

01:08:05.680 --> 01:08:06.080
好

01:08:06.080 --> 01:08:06.980
再再写一个

01:08:06.980 --> 01:08:07.580
n1

01:08:07.580 --> 01:08:08.580
我的index

01:08:08.580 --> 01:08:09.380
myself

01:08:09.380 --> 01:08:10.180
self

01:08:10.180 --> 01:08:10.680
ok

01:08:11.480 --> 01:08:11.880
好

01:08:11.880 --> 01:08:13.080
就说我想通过

01:08:13.080 --> 01:08:13.980
我这个方法对吧

01:08:13.980 --> 01:08:15.180
我想通过自己写的方法对吧

01:08:15.180 --> 01:08:17.280
来达成我现在这样的一个需求啊

01:08:17.280 --> 01:08:18.180
过滤灵需求

01:08:18.180 --> 01:08:18.980
我可以这么来

01:08:18.980 --> 01:08:19.780
每次的对吧

01:08:19.780 --> 01:08:20.480
n1

01:08:20.480 --> 01:08:21.280
我的self

01:08:21.780 --> 01:08:22.180
啊

01:08:22.180 --> 01:08:22.680
什么女的

01:08:22.680 --> 01:08:23.080
对吧

01:08:23.080 --> 01:08:23.880
如果你是女的

01:08:23.880 --> 01:08:23.980
啊

01:08:23.980 --> 01:08:24.680
我才留你

01:08:24.680 --> 01:08:25.080
行吧

01:08:25.080 --> 01:08:25.680
那在这呢

01:08:25.680 --> 01:08:27.080
我再握一个nury

01:08:27.780 --> 01:08:28.180
啊

01:08:28.180 --> 01:08:28.680
好在这呢

01:08:28.680 --> 01:08:29.580
我来输出一个

01:08:32.490 --> 01:08:33.090
nury

01:08:33.590 --> 01:08:34.390
我保存一下

01:08:34.390 --> 01:08:34.990
ok

01:08:34.990 --> 01:08:35.590
那我们知道了

01:08:35.590 --> 01:08:36.690
这个manfilter啊

01:08:36.890 --> 01:08:37.290
他怎么样

01:08:37.290 --> 01:08:38.590
他要接受一个函数

01:08:38.690 --> 01:08:39.590
他接受个函数

01:08:39.590 --> 01:08:40.690
跟这个函数呢

01:08:40.690 --> 01:08:41.790
这个函数

01:08:41.990 --> 01:08:42.790
同样啊

01:08:42.890 --> 01:08:43.690
我还希望他

01:08:43.690 --> 01:08:44.990
我还希望这个manfilter

01:08:45.090 --> 01:08:46.590
也可以像我之前那样

01:08:46.590 --> 01:08:48.090
把比如说我握一个obj

01:08:48.090 --> 01:08:49.090
我等一个对象

01:08:49.090 --> 01:08:49.590
是吧

01:08:49.590 --> 01:08:50.490
那这个对象呢

01:08:50.490 --> 01:08:51.490
我说他是个name

01:08:52.290 --> 01:08:52.690
st

01:08:52.690 --> 01:08:53.090
对吧

01:08:53.590 --> 01:08:53.990
好

01:08:53.990 --> 01:08:54.890
那在这呢

01:08:56.190 --> 01:08:57.290
那个obj

01:08:57.390 --> 01:08:58.590
他可以决定

01:08:58.690 --> 01:08:59.790
我这个里面

01:08:59.790 --> 01:09:00.190
哎

01:09:00.190 --> 01:09:00.890
这个desk

01:09:00.890 --> 01:09:01.790
究竟是谁啊

01:09:01.790 --> 01:09:02.590
觉得对面desk

01:09:02.590 --> 01:09:03.990
究竟是谁啊

01:09:03.990 --> 01:09:04.790
究竟是谁

01:09:04.790 --> 01:09:05.390
那哎

01:09:05.390 --> 01:09:06.690
那这个系统啊

01:09:06.690 --> 01:09:07.590
跟我们提供这个man

01:09:07.590 --> 01:09:08.790
manfilter的方法啊

01:09:08.790 --> 01:09:09.690
是可以的

01:09:09.690 --> 01:09:10.190
你在这

01:09:10.190 --> 01:09:11.690
比如说你传的一个对象

01:09:11.690 --> 01:09:12.190
对吧

01:09:12.290 --> 01:09:12.990
那最后呢

01:09:12.990 --> 01:09:14.390
这里面的desk啊

01:09:14.390 --> 01:09:14.890
对吧

01:09:14.890 --> 01:09:15.590
最后呢

01:09:15.590 --> 01:09:17.490
这里面的一个函数们desk

01:09:17.490 --> 01:09:18.590
都是你所传的

01:09:18.590 --> 01:09:20.390
就这样采出这个对象啊

01:09:20.390 --> 01:09:21.790
跟那个方式是一样的

01:09:21.790 --> 01:09:22.490
一样的

01:09:22.490 --> 01:09:23.390
我就不再说了

01:09:23.390 --> 01:09:23.890
好

01:09:23.890 --> 01:09:24.890
但是说我希望

01:09:24.890 --> 01:09:25.890
我写的manfilter呢

01:09:25.890 --> 01:09:26.690
也具备这样的功能

01:09:26.690 --> 01:09:27.090
对吧

01:09:27.090 --> 01:09:28.190
你传的这个参数呢

01:09:28.190 --> 01:09:28.790
会决定对象

01:09:28.790 --> 01:09:29.190
对面desk

01:09:29.190 --> 01:09:30.190
究竟是谁

01:09:30.190 --> 01:09:30.390
好

01:09:30.390 --> 01:09:30.590
ok

01:09:30.590 --> 01:09:31.990
那接下来我可以怎么做呢

01:09:31.990 --> 01:09:32.490
好

01:09:32.790 --> 01:09:33.390
在这

01:09:34.390 --> 01:09:35.190
我们来写了

01:09:35.590 --> 01:09:35.990
呃

01:09:35.990 --> 01:09:38.790
首先我们要知道一点manfilter呢

01:09:38.790 --> 01:09:39.890
最后会返回一个什么

01:09:39.890 --> 01:09:40.790
返回一个新的函数

01:09:40.790 --> 01:09:40.990
对吧

01:09:40.990 --> 01:09:41.690
我在这比如说

01:09:41.690 --> 01:09:42.190
wake

01:09:42.390 --> 01:09:43.190
wake array吧

01:09:43.190 --> 01:09:43.990
wake array

01:09:43.990 --> 01:09:44.590
array

01:09:44.590 --> 01:09:45.390
这个数组

01:09:45.390 --> 01:09:45.890
数组

01:09:45.890 --> 01:09:46.590
那最后呢

01:09:46.590 --> 01:09:47.190
啊好

01:09:47.190 --> 01:09:48.490
会返回一个数组啊

01:09:48.490 --> 01:09:49.090
那manfilter

01:09:49.090 --> 01:09:50.890
我写完以后会返回一个数组啊

01:09:50.890 --> 01:09:51.390
那那

01:09:51.990 --> 01:09:53.090
我跟你我们之前啊

01:09:53.090 --> 01:09:54.490
对manfilter跟你理解

01:09:54.490 --> 01:09:54.990
对吧

01:09:54.990 --> 01:09:55.190
好了

01:09:55.190 --> 01:09:56.890
我们进行你现在后面那个操作

01:09:56.890 --> 01:09:57.290
首先呢

01:09:57.290 --> 01:09:58.090
我还是wake

01:09:58.290 --> 01:09:58.890
lens

01:09:58.890 --> 01:09:59.590
因为

01:09:59.590 --> 01:10:00.290
他这个吗

01:10:00.290 --> 01:10:00.790
对吧

01:10:00.790 --> 01:10:01.990
他写了多少遍呢

01:10:01.990 --> 01:10:03.090
啊取语我这个数组

01:10:03.090 --> 01:10:04.290
有多少个元素对吧

01:10:04.290 --> 01:10:05.190
当然我也怎么样

01:10:05.190 --> 01:10:05.890
wake this

01:10:05.890 --> 01:10:06.130
that

01:10:06.130 --> 01:10:06.790
lens

01:10:06.790 --> 01:10:07.090
啊

01:10:07.090 --> 01:10:07.990
就获取一下

01:10:07.990 --> 01:10:08.190
哎

01:10:08.190 --> 01:10:09.490
我这个元素到底有多少个啊

01:10:09.490 --> 01:10:09.690
对吧

01:10:09.690 --> 01:10:10.590
就你点我这个

01:10:10.590 --> 01:10:11.390
点我这个方法

01:10:11.390 --> 01:10:11.990
这个数组对吧

01:10:11.990 --> 01:10:13.790
元素到底有多少个啊

01:10:13.790 --> 01:10:14.890
不是说你有这么多个对吧

01:10:14.890 --> 01:10:14.990
好

01:10:14.990 --> 01:10:16.090
我跟你这么多个

01:10:16.090 --> 01:10:17.090
来相应用的

01:10:18.090 --> 01:10:18.890
啊

01:10:18.890 --> 01:10:19.390
啊

01:10:19.390 --> 01:10:20.090
去

01:10:20.090 --> 01:10:22.290
去玩这么多圈啊

01:10:22.290 --> 01:10:23.590
这么多圈啊

01:10:23.590 --> 01:10:24.990
那每一圈怎么办呢

01:10:24.990 --> 01:10:25.790
每一圈

01:10:25.790 --> 01:10:26.190
ok

01:10:26.190 --> 01:10:26.990
啊

01:10:26.990 --> 01:10:28.190
每一圈我都去去

01:10:28.190 --> 01:10:30.190
去去这个方法啊

01:10:30.190 --> 01:10:31.690
这个这个方法的时候

01:10:31.690 --> 01:10:32.090
要怎么样

01:10:32.090 --> 01:10:33.790
要改变这个gaze啊

01:10:33.790 --> 01:10:34.590
那改变呢

01:10:34.590 --> 01:10:35.390
还是wake

01:10:35.990 --> 01:10:36.590
this

01:10:36.590 --> 01:10:37.290
为啥呢

01:10:37.290 --> 01:10:38.090
有这个admins

01:10:38.090 --> 01:10:38.590
咱看啊

01:10:38.590 --> 01:10:39.590
现在我换走一下啊

01:10:39.590 --> 01:10:40.090
admins

01:10:40.090 --> 01:10:40.790
一对吧

01:10:40.790 --> 01:10:41.690
如果你有知道

01:10:41.690 --> 01:10:43.090
那我们之前写的三个算法是这样的

01:10:43.090 --> 01:10:44.090
如果你有知道的话

01:10:44.090 --> 01:10:44.590
就有你对吧

01:10:44.590 --> 01:10:46.290
如果你没知道就window对吧

01:10:46.290 --> 01:10:47.390
如果你有知道的话

01:10:47.390 --> 01:10:48.190
如果你传

01:10:48.190 --> 01:10:48.990
传递的这样一个

01:10:48.990 --> 01:10:50.590
第二个时机材质的话

01:10:50.590 --> 01:10:52.490
我就让这个gaze什么

01:10:52.490 --> 01:10:54.290
是你这个第二个时机材质

01:10:54.290 --> 01:10:54.890
如果你没有的话

01:10:54.890 --> 01:10:55.890
我要也是window

01:10:55.890 --> 01:10:57.590
那这块我可以不写三个算法

01:10:57.590 --> 01:10:58.290
说黑的东西

01:11:00.090 --> 01:11:00.690
这是什么意思啊

01:11:00.690 --> 01:11:01.390
对吧

01:11:01.390 --> 01:11:02.890
这是螺旋算法对吧啊

01:11:02.890 --> 01:11:05.190
那这个东西你会发现啊

01:11:05.190 --> 01:11:06.290
它是一针

01:11:06.290 --> 01:11:08.590
这是龙甲才是假的对不对啊

01:11:08.590 --> 01:11:10.390
那我们诚哥在讲这个

01:11:10.390 --> 01:11:11.390
工业课的时候的话

01:11:11.390 --> 01:11:13.490
就是他也在这讲了这一点

01:11:13.490 --> 01:11:14.990
你不行可以回去去复几复几啊

01:11:14.990 --> 01:11:17.690
我说如果墙的地方是真了对吧

01:11:17.690 --> 01:11:18.590
好了怎么办呢

01:11:18.590 --> 01:11:19.990
他就不会去人后门了

01:11:19.990 --> 01:11:20.890
他会把他怎么样

01:11:20.890 --> 01:11:22.890
直接抛也前面的

01:11:22.890 --> 01:11:24.990
他他会把他作为整个这样的一个

01:11:24.990 --> 01:11:25.990
鲁迹认识的一个

01:11:25.990 --> 01:11:27.890
最后的反回一个结果啊

01:11:27.890 --> 01:11:28.990
因为也就是说

01:11:28.990 --> 01:11:30.490
那我无论刚刚daze等于什么

01:11:30.490 --> 01:11:31.690
等于他以后的话好了

01:11:31.690 --> 01:11:32.390
他会首先看什么

01:11:32.390 --> 01:11:34.490
首先看他是否怎么样

01:11:34.490 --> 01:11:36.790
是否有值或是否是个处的吗啊

01:11:36.790 --> 01:11:38.190
或者说他进行类型

01:11:38.190 --> 01:11:38.890
转一转换以后

01:11:38.890 --> 01:11:39.590
他是否是个处

01:11:39.590 --> 01:11:40.890
如果是的话怎么办呢

01:11:40.890 --> 01:11:43.190
直接怎么样把他就配给他了啊

01:11:43.290 --> 01:11:44.390
那如果啊

01:11:44.390 --> 01:11:46.590
如果你不是说你是爱你吧

01:11:46.590 --> 01:11:46.890
对吧

01:11:46.890 --> 01:11:48.090
但你做一个类型转换以后

01:11:48.090 --> 01:11:48.990
就是 false 对吧

01:11:48.990 --> 01:11:49.890
好了

01:11:49.890 --> 01:11:51.790
他会把他直接配给他了

01:11:51.790 --> 01:11:52.490
那最后呢

01:11:52.490 --> 01:11:54.790
他也能达到那个三分之三的效果

01:11:54.790 --> 01:11:55.290
就是如果

01:11:55.290 --> 01:11:56.690
albums 一有值

01:11:56.690 --> 01:11:58.290
要把这个值给到daze

01:11:58.290 --> 01:11:58.890
我没有值呢

01:11:58.890 --> 01:11:59.790
把windows 给他

01:11:59.790 --> 01:12:00.190
是吧

01:12:00.190 --> 01:12:00.590
在这呢

01:12:00.590 --> 01:12:01.190
好了

01:12:01.190 --> 01:12:02.490
我再往下去写啊

01:12:02.490 --> 01:12:03.890
daze

01:12:03.890 --> 01:12:04.990
那后门了

01:12:04.990 --> 01:12:06.890
后门这个猜出传什么

01:12:06.890 --> 01:12:08.590
跟那个 voice 是一样的

01:12:08.590 --> 01:12:10.090
首先daze 一个 i

01:12:10.090 --> 01:12:10.890
对吧

01:12:10.890 --> 01:12:12.590
然后呢

01:12:12.590 --> 01:12:13.890
i

01:12:13.890 --> 01:12:14.390
然后呢

01:12:14.390 --> 01:12:16.690
yourself

01:12:16.690 --> 01:12:17.390
这个daze

01:12:17.390 --> 01:12:18.290
这个daze

01:12:18.290 --> 01:12:18.990
ok

01:12:18.990 --> 01:12:20.290
那你这么听完的话

01:12:20.290 --> 01:12:21.490
他好像跟那个 voice

01:12:21.490 --> 01:12:22.690
没有任何区别对吧

01:12:22.690 --> 01:12:24.390
那这个区别是啥呢

01:12:24.390 --> 01:12:24.590
好

01:12:24.590 --> 01:12:25.490
这个区别是

01:12:25.490 --> 01:12:27.090
我不仅仅要只有你对吧

01:12:27.090 --> 01:12:29.290
我还要根据你的一个返回结果

01:12:29.290 --> 01:12:29.590
好

01:12:29.590 --> 01:12:30.090
你看

01:12:30.090 --> 01:12:31.790
我 mad filter

01:12:31.790 --> 01:12:33.090
他不仅仅说是要你

01:12:33.090 --> 01:12:33.890
要你个孩

01:12:33.890 --> 01:12:35.590
是我去执行那么多次的吧

01:12:35.590 --> 01:12:37.090
他是基于BnB

01:12:37.090 --> 01:12:38.090
基础上的吧

01:12:38.090 --> 01:12:39.790
就增添了这样一个功能对吧

01:12:39.790 --> 01:12:41.490
他其实针对

01:12:41.490 --> 01:12:42.890
他其实针对这个方式

01:12:42.890 --> 01:12:44.490
是一个更高级的功能对吧

01:12:44.490 --> 01:12:45.490
但是说

01:12:45.490 --> 01:12:46.090
这样的话

01:12:46.090 --> 01:12:47.590
能让他实现一个变利的吧

01:12:47.590 --> 01:12:48.690
那变利以后的话

01:12:48.690 --> 01:12:48.890
ok

01:12:48.890 --> 01:12:49.390
我要根据吗

01:12:49.390 --> 01:12:51.090
我要根据你每个孩

01:12:51.090 --> 01:12:52.990
我给你每次这个函数

01:12:52.990 --> 01:12:54.390
进行的一个返回结果

01:12:54.390 --> 01:12:55.190
来决定啊

01:12:55.190 --> 01:12:56.590
他决定这个门的吧

01:12:56.590 --> 01:12:58.590
他决定对应的这次元素

01:12:58.590 --> 01:13:00.490
他是否要留在这个新数字中

01:13:00.490 --> 01:13:01.890
然后怎么来决定呢

01:13:01.890 --> 01:13:02.990
这块我可以用什么

01:13:02.990 --> 01:13:04.690
用三母运扇红吗

01:13:04.690 --> 01:13:06.290
对不对

01:13:06.290 --> 01:13:06.490
好

01:13:06.490 --> 01:13:07.390
就说

01:13:07.390 --> 01:13:08.090
如果

01:13:08.190 --> 01:13:09.890
如果你一个方式结果是个处啊

01:13:09.890 --> 01:13:10.890
这处怎么办呢

01:13:10.890 --> 01:13:11.290
这处的话

01:13:11.290 --> 01:13:13.990
我就瑞典护士一下啊

01:13:13.990 --> 01:13:14.490
不是啥呢

01:13:14.490 --> 01:13:14.890
不是

01:13:15.690 --> 01:13:16.290
对塞

01:13:17.390 --> 01:13:18.890
啊否则呢

01:13:18.890 --> 01:13:20.490
我什么都不干啊

01:13:20.490 --> 01:13:21.290
或者说对吧

01:13:21.290 --> 01:13:22.290
或者说你可以

01:13:22.290 --> 01:13:23.990
还是像我刚才那样

01:13:23.990 --> 01:13:24.490
对吧

01:13:24.490 --> 01:13:25.890
又像这个他

01:13:26.690 --> 01:13:27.090
啊

01:13:27.090 --> 01:13:27.590
这什么意思呢

01:13:27.590 --> 01:13:29.290
就是如果他是处

01:13:29.990 --> 01:13:30.090
啊

01:13:30.090 --> 01:13:31.390
不能他了

01:13:31.390 --> 01:13:32.290
不能他了

01:13:32.290 --> 01:13:32.790
对吧

01:13:32.790 --> 01:13:34.790
就是如果他是处

01:13:34.790 --> 01:13:35.290
啊

01:13:35.290 --> 01:13:36.590
只用后面的

01:13:36.590 --> 01:13:37.090
对吧

01:13:37.090 --> 01:13:38.590
如果是False呢

01:13:38.590 --> 01:13:39.490
就不成了

01:13:39.490 --> 01:13:39.690
是吧

01:13:39.690 --> 01:13:40.490
因为常看

01:13:40.490 --> 01:13:43.190
他他跟他的一个区别什么呢

01:13:43.190 --> 01:13:44.790
叫做一甲

01:13:44.790 --> 01:13:45.690
做个甲

01:13:45.690 --> 01:13:46.390
投入针

01:13:46.390 --> 01:13:47.090
采文针

01:13:47.090 --> 01:13:47.590
对吧

01:13:47.590 --> 01:13:49.190
要说如果前面是假的话

01:13:49.190 --> 01:13:50.090
那后面就不用看了

01:13:50.090 --> 01:13:51.390
后面就不行了

01:13:51.390 --> 01:13:51.890
对吧

01:13:51.890 --> 01:13:52.690
那如果呢

01:13:52.690 --> 01:13:53.490
前面是真呢

01:13:53.490 --> 01:13:54.790
后面一定会执行

01:13:54.790 --> 01:13:54.990
啊

01:13:54.990 --> 01:13:56.590
这都是小技巧

01:13:56.590 --> 01:13:58.190
为什么要想这些小技巧呢

01:13:58.190 --> 01:13:59.290
因为你会发现

01:13:59.290 --> 01:14:01.090
很多人在写框架写原码的时候的话

01:14:01.090 --> 01:14:02.690
他为了简化这个代码的话

01:14:02.690 --> 01:14:03.790
他就会这么写

01:14:03.790 --> 01:14:04.290
啊

01:14:04.290 --> 01:14:05.190
如果你不这么写

01:14:05.190 --> 01:14:06.190
如果说你没这么写

01:14:06.190 --> 01:14:07.490
我如果说你不了解的话

01:14:07.490 --> 01:14:08.390
你可能你就看不懂

01:14:08.390 --> 01:14:08.890
对吧

01:14:08.890 --> 01:14:09.790
比如说他什么意思

01:14:09.790 --> 01:14:11.090
我说你花很长时间才明白

01:14:11.090 --> 01:14:11.290
啊

01:14:11.290 --> 01:14:12.090
他说这个意思啊

01:14:12.090 --> 01:14:12.490
是吧

01:14:12.490 --> 01:14:13.290
那在这一块的话

01:14:13.290 --> 01:14:15.290
我就默默把这些东西全部都讲给你

01:14:15.290 --> 01:14:15.790
好

01:14:15.790 --> 01:14:17.790
那你先有这样的一个了解啊

01:14:17.790 --> 01:14:18.790
那如果说

01:14:18.790 --> 01:14:19.890
我就常为行了

01:14:19.890 --> 01:14:21.090
我就False来写行不行

01:14:21.090 --> 01:14:22.190
就是如果对吧

01:14:22.190 --> 01:14:22.990
你只用完

01:14:22.990 --> 01:14:24.390
我看你是出来放False吧

01:14:24.390 --> 01:14:26.490
如果你是处的话啊

01:14:26.490 --> 01:14:27.290
我猜怎么样

01:14:27.290 --> 01:14:28.790
我猜让你是

01:14:28.790 --> 01:14:30.490
他把你们一放

01:14:30.490 --> 01:14:30.890
是吧

01:14:30.890 --> 01:14:32.490
让这个元素

01:14:32.490 --> 01:14:35.090
留在这个新竖之中

01:14:35.190 --> 01:14:36.290
我这么写行不行呢

01:14:36.290 --> 01:14:37.490
也一样的对吧

01:14:37.490 --> 01:14:39.690
虾有很多种

01:14:39.690 --> 01:14:40.490
那你来看一下

01:14:40.490 --> 01:14:43.490
其实还是我们最后那种写法

01:14:43.490 --> 01:14:43.590
啊

01:14:43.590 --> 01:14:44.890
那再往那边吃最小

01:14:44.890 --> 01:14:45.890
啊

01:14:45.890 --> 01:14:46.090
好

01:14:46.090 --> 01:14:46.890
这么写

01:14:46.890 --> 01:14:50.690
还是最小了

01:14:50.690 --> 01:14:51.190
啊

01:14:51.190 --> 01:14:51.890
还是最小的

01:14:51.890 --> 01:14:52.790
咱来看一下

01:14:52.790 --> 01:14:55.390
现在能不能完成我所说的那个效果

01:14:55.390 --> 01:14:55.890
行吧

01:14:55.890 --> 01:14:56.090
啊

01:14:56.090 --> 01:14:57.390
来刷刷音色

01:14:57.390 --> 01:14:57.890
在这

01:14:59.790 --> 01:15:00.990
放心

01:15:00.990 --> 01:15:01.890
ok啊

01:15:01.890 --> 01:15:02.590
六十行

01:15:02.590 --> 01:15:03.890
六六六十行

01:15:03.890 --> 01:15:05.390
六十行啊

01:15:05.390 --> 01:15:06.090
呃

01:15:07.090 --> 01:15:07.790
哎

01:15:07.790 --> 01:15:08.490
六十行

01:15:08.490 --> 01:15:09.390
啊这是这是吧

01:15:09.390 --> 01:15:10.190
还是告诉我是什么

01:15:10.190 --> 01:15:11.290
告诉我是没有的对不对

01:15:11.290 --> 01:15:12.690
那我说现在可能说

01:15:12.690 --> 01:15:13.490
我这门

01:15:13.490 --> 01:15:15.290
应该是写得不太对的对不对

01:15:15.290 --> 01:15:15.390
啊

01:15:15.390 --> 01:15:16.890
没有打算我们这样的一个下午啊

01:15:16.890 --> 01:15:17.190
这样

01:15:17.190 --> 01:15:18.190
我这么写啊

01:15:18.190 --> 01:15:19.290
我先这么写行吧

01:15:19.290 --> 01:15:20.390
先这么写行不行

01:15:20.890 --> 01:15:21.890
写三遍算法是吧

01:15:21.890 --> 01:15:23.490
如果他的访位置是什么

01:15:23.490 --> 01:15:24.490
是臭的话对吧

01:15:24.490 --> 01:15:24.990
好了

01:15:24.990 --> 01:15:26.390
我把它贴在那里面去啊

01:15:26.390 --> 01:15:27.490
如果不不不

01:15:27.490 --> 01:15:28.290
如果不是呢

01:15:28.290 --> 01:15:28.990
怎么办呢

01:15:28.990 --> 01:15:29.690
否则

01:15:29.690 --> 01:15:30.490
我什么都不干

01:15:30.490 --> 01:15:31.390
什么办法你写

01:15:31.390 --> 01:15:32.390
这写的慢啊

01:15:32.390 --> 01:15:33.890
写的空作不串啊

01:15:33.890 --> 01:15:34.690
写什么零

01:15:34.690 --> 01:15:35.490
写啥都可以

01:15:35.490 --> 01:15:36.050
写个

01:15:36.290 --> 01:15:37.890
写啥是ok啊

01:15:38.090 --> 01:15:38.990
都在这不是说写个

01:15:38.990 --> 01:15:40.390
扣的扣的扣的字号子啊

01:15:40.390 --> 01:15:41.890
如果说你这不是一个

01:15:41.890 --> 01:15:42.990
错错错错的话

01:15:42.990 --> 01:15:44.090
我会是个 false

01:15:44.090 --> 01:15:44.990
那就怎么样

01:15:44.990 --> 01:15:45.990
就走啊走啊他

01:15:45.990 --> 01:15:47.290
走到他就下来什么他都没干没

01:15:47.290 --> 01:15:47.790
对不对

01:15:47.790 --> 01:15:48.690
我们再来看一下

01:15:48.690 --> 01:15:49.590
现在写行不行啊

01:15:50.590 --> 01:15:51.590
哎也是这样的吧

01:15:51.590 --> 01:15:53.390
这没有可能我们哪儿写的不太对了

01:15:53.590 --> 01:15:54.790
人家写他不太对了

01:15:55.790 --> 01:15:56.790
啊为什么他不对呢

01:15:56.790 --> 01:15:57.790
哈哈

01:16:00.190 --> 01:16:00.890
让我看一下

01:16:01.490 --> 01:16:02.090
首先

01:16:02.290 --> 01:16:03.490
他确实啊

01:16:03.590 --> 01:16:06.290
然后他打什么叫那个便利的一个

01:16:06.990 --> 01:16:07.490
结果

01:16:07.490 --> 01:16:07.990
吧

01:16:07.990 --> 01:16:09.690
身上也变成一个结果啊

01:16:09.890 --> 01:16:10.590
那

01:16:11.390 --> 01:16:12.290
咱们看一下啊

01:16:12.290 --> 01:16:13.090
咱们看一下这样

01:16:13.190 --> 01:16:14.190
咱们看一下他

01:16:16.060 --> 01:16:16.960
来看一下他

01:16:17.060 --> 01:16:18.560
那每次在职权的时候的话

01:16:18.560 --> 01:16:21.360
哎你是否有之间的去反为这样的说 false

01:16:21.360 --> 01:16:21.760
啊对吧

01:16:21.760 --> 01:16:22.760
啥意思来看

01:16:24.700 --> 01:16:25.500
60行

01:16:26.900 --> 01:16:28.700
呃660行

01:16:30.680 --> 01:16:31.680
my filter

01:16:33.280 --> 01:16:34.380
my filter

01:16:35.280 --> 01:16:35.980
nurie

01:16:36.080 --> 01:16:39.080
哎好像在掉他手根本就没有执行对不对

01:16:39.080 --> 01:16:40.080
来看一下因为啥

01:16:40.480 --> 01:16:41.180
purserate

01:16:41.780 --> 01:16:42.280
erate

01:16:42.580 --> 01:16:45.380
erate.prototip

01:16:45.580 --> 01:16:46.580
my filter

01:16:46.580 --> 01:16:46.980
啊

01:16:47.180 --> 01:16:48.180
purserate my filter

01:16:48.180 --> 01:16:49.280
那我来看一下行吧

01:16:49.380 --> 01:16:50.380
我来看一下你这个

01:16:50.680 --> 01:16:52.380
purserate

01:16:52.580 --> 01:16:53.280
erate

01:16:53.580 --> 01:16:54.980
.my filter

01:16:54.980 --> 01:16:56.080
有没有这个方法呀

01:16:56.780 --> 01:16:57.780
哎是有的对不对

01:16:57.880 --> 01:17:01.580
那有的话我在之前的时候应该是可以去

01:17:02.280 --> 01:17:04.180
啊应该是可以去去到你这对不对

01:17:04.180 --> 01:17:05.680
啊啊这有问题啊这有问题啊

01:17:05.780 --> 01:17:07.280
这哎不就等于lens对吧

01:17:08.980 --> 01:17:10.680
放了个小放了个小凑啊

01:17:10.980 --> 01:17:11.980
那我们再回到这啊

01:17:12.180 --> 01:17:13.680
回到这个智慧学法

01:17:14.680 --> 01:17:15.580
啊智慧学法

01:17:15.580 --> 01:17:16.580
这下应该是没问题的

01:17:16.580 --> 01:17:17.280
再看这啊

01:17:17.280 --> 01:17:18.880
哎一开始不能等一个lens对吧

01:17:18.880 --> 01:17:19.880
哎得lens的话

01:17:19.880 --> 01:17:21.280
这也虚幻一次都是一个不了了

01:17:21.280 --> 01:17:22.580
应该等一层应该等一个零

01:17:22.680 --> 01:17:23.680
应该去等一个零

01:17:23.680 --> 01:17:25.480
我现在再来看一样啥意思啊

01:17:25.980 --> 01:17:26.780
ok啊

01:17:26.880 --> 01:17:28.380
是不是还两个女的怎么样

01:17:28.480 --> 01:17:29.480
全部都归出来了

01:17:30.480 --> 01:17:31.280
是吧啊

01:17:31.380 --> 01:17:32.980
那如果在这啊

01:17:32.980 --> 01:17:35.580
在在这里面再去尝试去说说这个lens

01:17:35.580 --> 01:17:36.380
再看一下

01:17:36.480 --> 01:17:37.480
说这个lens啊

01:17:38.980 --> 01:17:41.780
就是我的所传的这个obj

01:17:41.980 --> 01:17:43.280
我把我摔下来看一眼

01:17:43.980 --> 01:17:44.480
放心

01:17:45.480 --> 01:17:46.280
哎是对吧

01:17:46.380 --> 01:17:46.980
确实啊

01:17:46.980 --> 01:17:47.780
这个lens什么

01:17:47.780 --> 01:17:50.580
就是你传入传进去的这样的一个obj对吧

01:17:50.580 --> 01:17:52.280
那我现在给你换成一个m行吗

01:17:52.280 --> 01:17:53.780
换成m我再来看一眼

01:17:53.980 --> 01:17:54.680
声音字

01:17:56.380 --> 01:17:57.180
哎怎么样

01:17:57.280 --> 01:17:58.480
现在是不是前面上啥了

01:17:58.680 --> 01:17:59.780
难的了吧对吧

01:17:59.880 --> 01:18:01.880
这三个人一手就难的对不对啊

01:18:01.980 --> 01:18:03.480
要说这个maffilter

01:18:03.480 --> 01:18:04.480
maffilter这个方法的话

01:18:04.480 --> 01:18:05.580
其实实现起来的话

01:18:05.580 --> 01:18:06.780
也不过都是讲那吗

01:18:06.780 --> 01:18:08.180
很简单啊

01:18:08.180 --> 01:18:09.380
那到现在的话

01:18:09.380 --> 01:18:11.280
现在东西应该是可以去理解的吧

01:18:11.280 --> 01:18:12.180
对吧有不理解的吗

01:18:12.180 --> 01:18:12.680
不一样

01:18:15.550 --> 01:18:16.550
有没有

01:18:19.900 --> 01:18:20.500
看完

01:18:25.680 --> 01:18:26.280
哎怎么了

01:18:26.280 --> 01:18:27.280
对呀啊

01:18:28.080 --> 01:18:29.480
什么打电话吗

01:18:29.480 --> 01:18:30.380
啊怎么那么拆

01:18:31.080 --> 01:18:32.280
有没有打电话的

01:18:32.280 --> 01:18:34.180
老师看不看不见

01:18:34.180 --> 01:18:34.780
看不见

01:18:34.780 --> 01:18:35.480
看不见

01:18:35.480 --> 01:18:36.280
好没事

01:18:36.280 --> 01:18:36.980
我先讲完之后

01:18:36.980 --> 01:18:37.580
我再看一下

01:18:37.580 --> 01:18:38.580
那有小问题啊

01:18:40.840 --> 01:18:41.640
说不定

01:18:42.640 --> 01:18:43.440
是这样的

01:18:43.440 --> 01:18:44.140
是这个

01:18:44.740 --> 01:18:45.940
maffilter方法里面啊

01:18:45.940 --> 01:18:47.640
maffilter所提问的方法

01:18:47.640 --> 01:18:48.740
这个方法

01:18:48.940 --> 01:18:50.940
这个方法是允许你传的

01:18:50.940 --> 01:18:52.040
第二个参数的

01:18:52.040 --> 01:18:53.940
这第二参数可以决定

01:18:53.940 --> 01:18:55.440
你这个函数你们在听说

01:18:55.440 --> 01:18:56.440
this到到底是谁

01:18:57.040 --> 01:18:59.340
啊是可以去决定的啊

01:18:59.340 --> 01:19:01.440
那说比如比如说你要这么做啊

01:19:01.640 --> 01:19:02.840
啊不是说为

01:19:02.840 --> 01:19:05.540
不是说是为啥一定要这么传啊

01:19:05.540 --> 01:19:08.440
是是这个filter这个方法里面啊

01:19:08.440 --> 01:19:10.740
那就允许你可以这么这么去传

01:19:10.740 --> 01:19:12.740
对吧你可以去传地电的参数

01:19:12.740 --> 01:19:14.840
你传地电的参数就会决定

01:19:14.840 --> 01:19:16.540
那我们这次到底到底是谁

01:19:16.540 --> 01:19:18.540
那他可能有什么样的一个方面呢

01:19:18.540 --> 01:19:19.640
就比如说

01:19:19.640 --> 01:19:22.340
我们再去别地或再去顾虑数组的时候啊

01:19:22.340 --> 01:19:23.140
可能怎么样

01:19:23.840 --> 01:19:26.040
可能要去比如比如说

01:19:26.240 --> 01:19:28.540
啊可能要去操作

01:19:29.440 --> 01:19:31.540
啊有可能要操作某个dome

01:19:31.540 --> 01:19:32.040
对吧

01:19:32.040 --> 01:19:33.040
操某个dome

01:19:33.540 --> 01:19:34.540
啊好了

01:19:34.540 --> 01:19:35.900
那这个dome怎么办呢

01:19:35.900 --> 01:19:38.200
我就可以我就可以把这个dome

01:19:38.200 --> 01:19:39.240
dome是地下里面

01:19:39.240 --> 01:19:40.240
往里面传的吧

01:19:40.240 --> 01:19:41.140
传完以后的话好了

01:19:41.140 --> 01:19:42.840
那你就可以在这个函数组

01:19:42.940 --> 01:19:44.140
直接拖dase

01:19:44.540 --> 01:19:45.540
来去操这个dome

01:19:45.540 --> 01:19:46.240
倒混吧

01:19:46.440 --> 01:19:47.340
就说这个dase

01:19:47.440 --> 01:19:48.540
来就操作就dome了

01:19:49.040 --> 01:19:49.440
那

01:19:49.940 --> 01:19:51.540
那我就说那我这个dome

01:19:51.840 --> 01:19:53.140
是全局的话对吧

01:19:53.240 --> 01:19:55.240
那我就在这直接写dome都行吗

01:19:55.240 --> 01:19:55.640
对吧

01:19:55.640 --> 01:19:58.240
还有必要说是filter用dase吗

01:19:58.740 --> 01:20:00.540
就是你要看这块圆满的话

01:20:00.540 --> 01:20:02.140
你要你要你要知道一点

01:20:02.340 --> 01:20:04.280
或者说你看过高清龙招

01:20:04.280 --> 01:20:05.140
Jobscore的话

01:20:05.140 --> 01:20:05.940
你应该知道一点

01:20:06.140 --> 01:20:09.540
作业链上去查询这样的一个值

01:20:09.740 --> 01:20:11.240
它是比较耗性能的

01:20:11.240 --> 01:20:12.340
要是我们为什么

01:20:12.440 --> 01:20:13.740
哎不要牛wase对吧

01:20:13.740 --> 01:20:15.840
因为wase能更改作业链对吧

01:20:15.840 --> 01:20:17.440
反正你作业链变得它更长

01:20:17.540 --> 01:20:19.140
这都是无论是更改作业链

01:20:19.140 --> 01:20:20.440
还要作业链变得它更长的话

01:20:20.440 --> 01:20:21.940
它都是比较耗性能的

01:20:21.940 --> 01:20:22.340
啊

01:20:22.640 --> 01:20:23.440
那所以说呢

01:20:24.240 --> 01:20:26.640
哎你发现在一个gq库里面了

01:20:26.740 --> 01:20:29.040
啊它会把一些经常会使用到的一些

01:20:29.040 --> 01:20:29.940
必然样的地方

01:20:29.940 --> 01:20:30.540
ok

01:20:30.540 --> 01:20:31.840
即使你是全局的

01:20:31.840 --> 01:20:33.740
它会给你传到局部去使用

01:20:33.740 --> 01:20:34.240
啊

01:20:34.240 --> 01:20:36.140
那我这个filter啊

01:20:36.140 --> 01:20:38.140
它确实跟你提供有这样的一个

01:20:38.440 --> 01:20:39.140
参数

01:20:39.140 --> 01:20:40.140
你就是可以传的

01:20:40.240 --> 01:20:41.840
你传递这个参数的话

01:20:41.840 --> 01:20:43.440
啊你传完以后

01:20:43.840 --> 01:20:46.740
啊他就会让你个dase发生改变

01:20:46.840 --> 01:20:47.240
对吧

01:20:47.240 --> 01:20:48.340
那你可以载着里面

01:20:48.340 --> 01:20:49.540
怎么直接

01:20:49.740 --> 01:20:51.740
直接去操作这个dase

01:20:52.340 --> 01:20:53.140
啊你就可以

01:20:53.540 --> 01:20:55.040
你就可以直接去操作这个dase

01:20:55.340 --> 01:20:58.440
你就可以直接去操作这个dase

01:20:58.440 --> 01:20:59.340
就相当于去

01:20:59.540 --> 01:21:01.140
去操作这样一个值啊

01:21:01.140 --> 01:21:01.740
而且呢

01:21:01.740 --> 01:21:03.340
你直接操作这个dase的话

01:21:03.340 --> 01:21:05.540
你直接在这个函数里面去操作的

01:21:05.640 --> 01:21:07.640
你想到你的dase就已经设这个值了

01:21:07.640 --> 01:21:08.740
你不用经过

01:21:08.740 --> 01:21:11.540
还多层向外去做这样的一个查询

01:21:11.640 --> 01:21:12.740
它性能相比

01:21:12.940 --> 01:21:14.540
比较高高高的啊

01:21:14.640 --> 01:21:16.440
而且你dase用习惯以后的话

01:21:16.440 --> 01:21:17.040
自然而然

01:21:18.240 --> 01:21:20.640
你会觉得它是更方便的对吧

01:21:20.640 --> 01:21:21.340
因为

01:21:24.940 --> 01:21:25.640
因为你知道

01:21:26.740 --> 01:21:27.540
这个dase

01:21:27.540 --> 01:21:29.740
直接就代表了一些的一个值对吧

01:21:29.740 --> 01:21:30.540
我们知道这个值

01:21:30.540 --> 01:21:31.940
它是什么情况下的话

01:21:31.940 --> 01:21:32.340
啊

01:21:32.340 --> 01:21:34.240
我直接在这个函数里面对吧

01:21:34.240 --> 01:21:34.840
ok

01:21:34.840 --> 01:21:36.140
在这样封闭综域中

01:21:36.140 --> 01:21:37.540
直接去操作一下它

01:21:37.740 --> 01:21:38.140
啊

01:21:38.140 --> 01:21:40.740
我们就可以打成一些这样的一个招呼啊

01:21:40.740 --> 01:21:41.740
比如说dase

01:21:41.740 --> 01:21:44.240
你未来可能都在使用习惯的时候的话

01:21:44.240 --> 01:21:44.540
啊

01:21:44.540 --> 01:21:46.640
你会不太喜欢用使用习惯的量

01:21:46.740 --> 01:21:48.340
这权力别量一旦多了以后的话

01:21:48.340 --> 01:21:49.140
它又会怎么样

01:21:49.140 --> 01:21:52.340
也会造成更大概率的一个权勇了

01:21:52.340 --> 01:21:52.740
对吧

01:21:52.740 --> 01:21:53.540
实际上的话

01:21:53.740 --> 01:21:54.140
啊

01:21:54.140 --> 01:21:56.040
我们为什么要去

01:21:56.340 --> 01:21:57.740
让它改变这个dase啊

01:21:57.740 --> 01:21:58.640
有很多点对吧

01:21:58.640 --> 01:21:59.540
因为它很方便

01:21:59.540 --> 01:22:00.640
第二就是人家

01:22:00.640 --> 01:22:02.140
我们在模仿人家

01:22:02.440 --> 01:22:04.140
系统的这个组织方法对吧

01:22:04.140 --> 01:22:06.040
那人家是允许你传的

01:22:06.040 --> 01:22:06.640
那当然的话

01:22:06.640 --> 01:22:08.840
我们也去传媒是吧

01:22:08.840 --> 01:22:09.140
啊

01:22:14.690 --> 01:22:15.590
同学啊

01:22:16.190 --> 01:22:18.390
你的老师没有那么神对吧

01:22:18.390 --> 01:22:21.690
咱们这个不是说是面对面进行这样的一个教学

01:22:21.690 --> 01:22:21.990
对吧

01:22:21.990 --> 01:22:22.790
你这面的面的话

01:22:22.790 --> 01:22:24.690
我也没有办法去看清每个同学

01:22:24.890 --> 01:22:25.990
去帮你一个反应啊

01:22:25.990 --> 01:22:26.290
啊

01:22:26.290 --> 01:22:26.790
我

01:22:27.490 --> 01:22:30.290
咱们是在这样那个线上进行一个教学的话

01:22:30.390 --> 01:22:31.290
当然同学说是

01:22:31.290 --> 01:22:32.490
我没有办法时刻刻呢

01:22:32.490 --> 01:22:33.490
去看大家一个团论

01:22:33.490 --> 01:22:33.890
对吧

01:22:33.890 --> 01:22:35.790
而且同学的评论会很多

01:22:35.790 --> 01:22:37.490
哪怕你一句他也句对吧

01:22:37.490 --> 01:22:38.590
你去他一句的话

01:22:38.590 --> 01:22:40.690
我不可能说是上课的时候

01:22:40.790 --> 01:22:43.490
会把你们所有的这个问题去都解决了

01:22:43.490 --> 01:22:43.990
那这样的话

01:22:43.990 --> 01:22:46.490
咱可能一天都讲完他一个课啊

01:22:46.490 --> 01:22:47.090
是说呢

01:22:47.190 --> 01:22:47.890
你先啊

01:22:47.890 --> 01:22:48.990
跟着我的节奏来

01:22:48.990 --> 01:22:50.490
先跟着我的节奏走

01:22:50.590 --> 01:22:51.490
哪怕你听不懂的话

01:22:51.490 --> 01:22:51.990
怎么办呢

01:22:51.990 --> 01:22:53.390
你课下问咱们打一老

01:22:53.490 --> 01:22:54.490
打一老师

01:22:54.690 --> 01:22:55.890
咱们周师开课以后的话

01:22:55.890 --> 01:22:56.890
咱们会有这样的一个周师

01:22:56.890 --> 01:22:57.890
得打一老师的

01:22:57.890 --> 01:22:58.090
对吧

01:22:58.090 --> 01:22:58.990
那不懂的话你问吗

01:22:59.090 --> 01:22:59.890
是不是啊

01:22:59.890 --> 01:23:00.890
是说啊

01:23:00.890 --> 01:23:02.290
同学在学工中说话啊

01:23:02.890 --> 01:23:05.390
首先要彼此遣救一下

01:23:05.490 --> 01:23:06.990
对吧啊彼此遣救一下啊

01:23:06.990 --> 01:23:07.790
除了遣救

01:23:08.290 --> 01:23:09.190
除了什么时候

01:23:09.290 --> 01:23:10.890
除了说是我遣救你们对吧

01:23:10.890 --> 01:23:12.190
还有就是同学之间啊

01:23:12.190 --> 01:23:13.690
也要彼此去去遣救一下

01:23:13.690 --> 01:23:15.390
因为每个人进度可能是不太一样的吧

01:23:15.390 --> 01:23:15.890
有的人理解了

01:23:15.890 --> 01:23:17.890
有的人他没理解对吧

01:23:17.890 --> 01:23:19.190
我可能偶尔去看这个评论区

01:23:19.190 --> 01:23:19.690
对吧

01:23:19.690 --> 01:23:21.990
反正中的会把会把一些我看到的

01:23:21.990 --> 01:23:22.390
对吧

01:23:22.490 --> 01:23:24.490
觉得觉得不是很耽误时间的一些

01:23:24.490 --> 01:23:26.190
问题或典型的一些问题

01:23:26.290 --> 01:23:27.790
拿出来去说一说

01:23:27.790 --> 01:23:28.590
我来去说一说

01:23:28.590 --> 01:23:29.090
好

01:23:29.190 --> 01:23:30.090
就是恶伯赖啊

01:23:30.090 --> 01:23:31.490
后面数数是啥

01:23:31.490 --> 01:23:33.290
恶伯赖后面数组是啥

01:23:33.290 --> 01:23:35.190
你这你应该是你回去自己看上去的

01:23:35.190 --> 01:23:35.590
啊

01:23:35.590 --> 01:23:37.290
我和工医科里面讲过

01:23:37.290 --> 01:23:38.890
恶伯赖和考尔区别啊

01:23:39.090 --> 01:23:40.890
那个后面那个数组

01:23:40.990 --> 01:23:43.090
就是决定前面那个

01:23:43.390 --> 01:23:44.490
函数在决定的时候

01:23:44.490 --> 01:23:46.190
他实际上到底他是什么啊

01:23:46.290 --> 01:23:47.290
那这不考呢

01:23:47.390 --> 01:23:48.690
考又不是什么

01:23:48.690 --> 01:23:50.290
考就不是处函数组了

01:23:50.290 --> 01:23:51.190
而是把这个

01:23:51.490 --> 01:23:54.690
GCH一个一个去零化的情况去放

01:23:54.890 --> 01:23:56.390
这个是前面的工医科内容

01:23:56.390 --> 01:23:57.690
你回去看一看啊

01:23:58.290 --> 01:23:58.790
来

01:24:01.490 --> 01:24:02.890
正式场上是这样的

01:24:02.890 --> 01:24:03.890
先上讲课

01:24:03.890 --> 01:24:05.490
毕竟是重口难调嘛

01:24:05.490 --> 01:24:05.990
对吧

01:24:06.090 --> 01:24:07.190
重口难调怎么办呢

01:24:07.390 --> 01:24:08.190
重口难调的话

01:24:08.190 --> 01:24:09.490
就得让同学嘛

01:24:09.490 --> 01:24:11.990
不但去适应一下老师的一个讲课思路

01:24:12.090 --> 01:24:12.390
啊

01:24:12.390 --> 01:24:14.690
像这样一个老师的讲课思路啊

01:24:15.890 --> 01:24:16.590
一个节奏的话

01:24:16.590 --> 01:24:16.990
对吧

01:24:16.990 --> 01:24:19.490
大家也彼此他都来去试一试啊

01:24:25.790 --> 01:24:27.590
如果说你对前面公开课的话

01:24:27.590 --> 01:24:29.590
你这个基础质都找得挺不错

01:24:30.090 --> 01:24:31.690
这也靠你吃饭就做人体的

01:24:33.690 --> 01:24:34.790
嗯来看一下

01:24:34.790 --> 01:24:35.890
对用靠也行啊

01:24:35.890 --> 01:24:36.390
靠也行

01:24:36.390 --> 01:24:37.990
靠的话你就不用手放了对吧

01:24:38.190 --> 01:24:39.890
嗯你就直接你撒了放就行呗

01:24:39.990 --> 01:24:41.690
对不对啊靠不来都没问题啊

01:24:41.690 --> 01:24:42.890
都没问题啊

01:24:47.610 --> 01:24:49.110
对刚才是讲

01:24:49.110 --> 01:24:51.210
讲一段时间突然卡了卡了吗

01:24:51.210 --> 01:24:53.110
我告诉同学说看不见

01:24:53.210 --> 01:24:54.210
那就是什么

01:24:56.730 --> 01:24:57.330
看啊

01:25:00.290 --> 01:25:01.090
看不见

01:25:06.140 --> 01:25:06.640
哈哈

01:25:08.640 --> 01:25:09.340
哎同学

01:25:09.340 --> 01:25:11.440
咱是这样的是每个讲之前的话

01:25:11.440 --> 01:25:13.840
我都会先提一下这个他干什么用的

01:25:13.940 --> 01:25:14.840
对吧啊

01:25:15.140 --> 01:25:15.940
你仔细听一听啊

01:25:15.940 --> 01:25:17.240
你仔细听一听叫数研同学吧

01:25:17.240 --> 01:25:18.340
你仔细听一听啊

01:25:18.340 --> 01:25:19.540
仔细听一听啊

01:25:19.540 --> 01:25:21.280
咱讲方一时和讲这样的一个

01:25:21.280 --> 01:25:22.740
Fuelter时候咱都说了对吧

01:25:22.740 --> 01:25:24.440
咱都说了他是干什么用的对吧

01:25:24.440 --> 01:25:25.940
Fuelter起来一个过滤作用

01:25:25.940 --> 01:25:28.140
对数字进行这样的一个过滤方一时吧

01:25:28.240 --> 01:25:29.540
叫这样的一个便利字

01:25:29.540 --> 01:25:30.540
对吧啊

01:25:35.520 --> 01:25:36.120
啊啊

01:25:36.220 --> 01:25:36.720
行啊

01:25:37.520 --> 01:25:41.060
好这样我们今天要上那个节奏来啊

01:25:41.060 --> 01:25:41.660
节奏来啊

01:25:41.660 --> 01:25:43.060
你们你们也要去适应了是吧

01:25:43.060 --> 01:25:44.320
之前是看路博客的

01:25:44.320 --> 01:25:44.800
啊

01:25:44.800 --> 01:25:45.860
像通常看直博客

01:25:45.860 --> 01:25:47.760
对吧这不这么多这么多人对吧

01:25:47.760 --> 01:25:49.460
咱们怎么可能说是把每个人讲

01:25:49.460 --> 01:25:51.860
每个问题全部都讲到呢

01:25:51.860 --> 01:25:52.300
对吧

01:25:52.300 --> 01:25:53.060
好这样吧

01:25:53.060 --> 01:25:54.000
咱们当务实际上去吧

01:25:54.000 --> 01:25:55.200
咱这样再往下来说啊

01:25:55.400 --> 01:25:56.160
你看map

01:25:56.160 --> 01:25:56.760
map

01:25:57.000 --> 01:25:58.000
map这个单词啊

01:25:58.000 --> 01:25:59.000
你要知道是什么意思啊

01:25:59.000 --> 01:26:00.260
大家有时候是地图啊对吧

01:26:00.260 --> 01:26:01.160
好地图哈

01:26:01.160 --> 01:26:02.060
那他有一个单词

01:26:02.060 --> 01:26:02.760
他有意思

01:26:02.960 --> 01:26:03.960
用设

01:26:04.160 --> 01:26:04.960
用设

01:26:06.860 --> 01:26:07.960
就说s对吧

01:26:08.160 --> 01:26:09.400
通过一些规则对吧

01:26:09.400 --> 01:26:10.460
变成了y对吧

01:26:10.660 --> 01:26:12.460
本身这就是我们印射关系嘛

01:26:12.460 --> 01:26:13.360
对吧

01:26:13.360 --> 01:26:15.760
但是s通过一种变化

01:26:15.760 --> 01:26:17.260
不认识到y对不对

01:26:17.260 --> 01:26:18.560
比如说怎么说是这样

01:26:18.560 --> 01:26:20.560
就是没有现在规则的吧

01:26:20.560 --> 01:26:21.760
这个规则可能说什么

01:26:21.760 --> 01:26:23.160
这是平方二对吧

01:26:23.160 --> 01:26:25.060
还有说是太平方二对吧

01:26:25.060 --> 01:26:25.460
好

01:26:25.460 --> 01:26:26.560
这个规则呢

01:26:26.560 --> 01:26:27.060
好

01:26:27.060 --> 01:26:27.360
ok

01:26:27.360 --> 01:26:28.360
他就是这样一种

01:26:28.360 --> 01:26:31.460
表表达了他们之间这种印射关系啊

01:26:31.460 --> 01:26:32.660
我们map这个单词呢

01:26:32.660 --> 01:26:33.960
也是印射的意思啊

01:26:33.960 --> 01:26:34.960
那我们map呢

01:26:34.960 --> 01:26:36.960
被他在述入方法

01:26:36.960 --> 01:26:37.860
最后会怎么样

01:26:37.860 --> 01:26:39.260
他他最后呢

01:26:39.360 --> 01:26:41.060
会体验出的一个效果是啥呢

01:26:41.260 --> 01:26:42.660
就是当我数组啊

01:26:42.660 --> 01:26:44.260
就像map以后的话

01:26:44.260 --> 01:26:47.060
我map里面设计一些规则啊

01:26:47.060 --> 01:26:48.860
那最后map会返回一个新的数组

01:26:48.860 --> 01:26:50.960
那这个新的数组中的每个元素

01:26:50.960 --> 01:26:53.460
都是按照这个规则来去变化啊

01:26:53.460 --> 01:26:54.160
你不用说

01:26:54.160 --> 01:26:54.460
不

01:26:54.460 --> 01:26:56.260
你不用说是这样就是

01:26:56.560 --> 01:26:57.160
呃

01:26:58.560 --> 01:27:00.060
哎这个数组啊

01:27:00.160 --> 01:27:01.160
有一群人对吧

01:27:01.160 --> 01:27:02.060
他有一群人

01:27:02.060 --> 01:27:03.060
有一群人啊

01:27:03.060 --> 01:27:03.960
这你会发现呢

01:27:03.960 --> 01:27:05.160
每个人啊

01:27:05.160 --> 01:27:05.960
比如说是

01:27:05.960 --> 01:27:07.660
一个使势中啊

01:27:07.760 --> 01:27:09.260
可能没有这个map里的吧

01:27:09.260 --> 01:27:11.160
前这个前一个数据啊

01:27:11.160 --> 01:27:12.760
我希望让他们每个人

01:27:12.760 --> 01:27:13.460
身上怎么样

01:27:13.460 --> 01:27:15.460
比如说都加上这个前这个数据

01:27:15.560 --> 01:27:16.060
或者说什么

01:27:16.060 --> 01:27:16.760
或者说这样

01:27:16.760 --> 01:27:17.860
他们每个人

01:27:17.860 --> 01:27:18.960
都有年龄这个数据

01:27:18.960 --> 01:27:21.160
比如说每个人年龄不懂的

01:27:21.160 --> 01:27:22.160
都是二十对吧

01:27:22.960 --> 01:27:23.760
啊不这样

01:27:23.960 --> 01:27:25.960
一个是二十不是一个是二三是二十五

01:27:25.960 --> 01:27:27.860
让他们的年龄特别是不一样的啊

01:27:28.060 --> 01:27:31.060
我想通过我这个map的一个操作啊

01:27:31.060 --> 01:27:34.060
让他们的年龄比如说全部都加十

01:27:34.260 --> 01:27:36.060
还比如说十年过去了对吧

01:27:36.660 --> 01:27:37.760
人家全部都加十

01:27:40.700 --> 01:27:41.700
全部都加十啊

01:27:41.700 --> 01:27:42.500
好那咱来看一看

01:27:42.500 --> 01:27:43.900
咱来咱来咱来看一看

01:27:43.900 --> 01:27:45.100
我要怎么做吧

01:27:45.100 --> 01:27:46.800
那如果你没有map情况下的话

01:27:46.800 --> 01:27:47.300
你一定是怎么样

01:27:47.300 --> 01:27:49.100
你一定是通过一个放学生法

01:27:49.100 --> 01:27:49.500
对吧

01:27:49.500 --> 01:27:50.700
把每个数

01:27:50.700 --> 01:27:52.600
把每个这样的一个元素拿出来

01:27:52.600 --> 01:27:53.400
把这个值怎么样

01:27:53.400 --> 01:27:54.200
就变大

01:27:54.200 --> 01:27:55.100
给它加十

01:27:55.100 --> 01:27:55.800
但是以后呢

01:27:55.800 --> 01:27:56.800
咱就放到新数据中

01:27:56.800 --> 01:27:57.900
再给它反回数据对不对

01:27:57.900 --> 01:27:58.300
啊

01:27:58.300 --> 01:27:59.000
那我刚才所说的

01:27:59.000 --> 01:28:00.900
其实是原码实现的一个逻辑

01:28:00.900 --> 01:28:01.300
啊

01:28:01.300 --> 01:28:02.700
那我们讲map的话就是

01:28:02.700 --> 01:28:03.400
哎呀我们

01:28:04.000 --> 01:28:06.100
就是人家已经给你写好了对吧

01:28:06.100 --> 01:28:07.200
我们可以直接拿去用对吧

01:28:07.200 --> 01:28:08.200
我们只需要知道

01:28:08.200 --> 01:28:09.800
它具体怎么它具体怎么来用的

01:28:09.800 --> 01:28:10.200
啊

01:28:10.200 --> 01:28:10.600
那首先呢

01:28:10.600 --> 01:28:11.600
我来试试一下啊

01:28:11.600 --> 01:28:12.700
这个map啊

01:28:12.700 --> 01:28:15.000
它也是定义在protap啊

01:28:15.000 --> 01:28:16.200
它也是定义在

01:28:17.600 --> 01:28:18.800
这个原型上的对吧

01:28:18.800 --> 01:28:20.000
那它起到的是一个这样一个

01:28:20.000 --> 01:28:21.400
硬设的一个作用

01:28:23.100 --> 01:28:23.600
好

01:28:23.600 --> 01:28:24.400
那说最后呢

01:28:25.800 --> 01:28:26.900
就这个map呢

01:28:26.900 --> 01:28:29.100
也会反回一个新的数据

01:28:29.100 --> 01:28:30.500
这个feature是比较像的吧

01:28:30.500 --> 01:28:31.600
新数据

01:28:32.000 --> 01:28:33.300
反而一个新数据

01:28:33.300 --> 01:28:33.800
那map呢

01:28:33.800 --> 01:28:34.800
也是要接受一个函数

01:28:34.800 --> 01:28:36.000
作为一个参数

01:28:36.000 --> 01:28:36.900
那并且呢

01:28:36.900 --> 01:28:38.300
这个函数参数呢

01:28:38.300 --> 01:28:40.300
也是有e,e,n,s

01:28:40.300 --> 01:28:41.300
tab

01:28:41.300 --> 01:28:41.700
对吧

01:28:41.700 --> 01:28:42.500
但这个map呢

01:28:42.500 --> 01:28:43.100
在写的时候呢

01:28:43.100 --> 01:28:45.000
你可以传递第二个参数

01:28:45.000 --> 01:28:46.100
第一个参数函数对吧

01:28:46.100 --> 01:28:46.900
第二个参数呢

01:28:46.900 --> 01:28:47.900
来决定呢

01:28:47.900 --> 01:28:49.300
这个第一个函数

01:28:49.300 --> 01:28:50.900
再写的时候你们对子谈的是谁

01:28:51.700 --> 01:28:52.100
啊

01:28:52.100 --> 01:28:52.700
ok

01:28:52.700 --> 01:28:53.100
那

01:28:55.520 --> 01:28:56.320
那最后呢

01:28:56.320 --> 01:28:57.920
这个啊

01:28:57.920 --> 01:28:59.120
硬设的规则的话

01:28:59.120 --> 01:28:59.920
其实用这个

01:29:00.320 --> 01:29:02.620
第一个参数函数来去决定的啊

01:29:02.620 --> 01:29:04.820
那有时候最后调的形式什么样子的

01:29:04.820 --> 01:29:05.220
我来

01:29:05.220 --> 01:29:05.820
我给你来写

01:29:05.820 --> 01:29:06.820
你来看一看啊

01:29:07.020 --> 01:29:08.120
我这样我先误了一个

01:29:08.120 --> 01:29:09.120
叫做person

01:29:09.720 --> 01:29:10.720
过一个new array

01:29:12.220 --> 01:29:12.720
啊

01:29:12.720 --> 01:29:13.220
new array

01:29:13.220 --> 01:29:14.120
那在这的话

01:29:14.120 --> 01:29:15.220
比如说通过这样那个

01:29:15.420 --> 01:29:15.720
呃

01:29:16.920 --> 01:29:17.720
通过这样的一个

01:29:18.320 --> 01:29:19.120
person array

01:29:19.120 --> 01:29:19.320
啊

01:29:19.320 --> 01:29:20.020
person array

01:29:20.020 --> 01:29:21.420
也有一个map方法对吧

01:29:21.420 --> 01:29:22.020
在这呢

01:29:22.220 --> 01:29:22.520
啊

01:29:22.520 --> 01:29:24.220
需要传递函数的一个参数对吧

01:29:24.220 --> 01:29:25.320
我我这一传

01:29:25.320 --> 01:29:26.120
我这一传啊

01:29:26.120 --> 01:29:26.620
好

01:29:26.620 --> 01:29:27.120
那

01:29:28.520 --> 01:29:30.020
当你去传参以后的话

01:29:30.020 --> 01:29:30.820
首先还是啊

01:29:30.820 --> 01:29:31.620
跟之前是一样的

01:29:31.620 --> 01:29:32.520
往里面传

01:29:32.520 --> 01:29:33.520
这三个值对吧

01:29:33.520 --> 01:29:35.220
e in that self

01:29:35.220 --> 01:29:35.520
好

01:29:35.520 --> 01:29:36.320
那在这呢

01:29:36.320 --> 01:29:36.520
好

01:29:36.520 --> 01:29:37.420
我们怎么样我们

01:29:37.620 --> 01:29:38.020
啊

01:29:38.020 --> 01:29:40.220
我们在这去写一下

01:29:40.220 --> 01:29:40.820
这些什么

01:29:40.820 --> 01:29:42.620
整个意思那个规则啊

01:29:42.620 --> 01:29:43.820
比如说我一个数字

01:29:43.820 --> 01:29:45.220
不要往map map方法对吧

01:29:45.220 --> 01:29:46.720
需要你基本上传递

01:29:46.820 --> 01:29:48.120
这样的一些参数

01:29:48.120 --> 01:29:48.420
比如说

01:29:48.420 --> 01:29:49.720
第二个参数你也可以传

01:29:49.720 --> 01:29:50.720
传一个对象

01:29:50.720 --> 01:29:51.520
传个传

01:29:51.520 --> 01:29:52.020
传

01:29:52.020 --> 01:29:52.520
传个对象

01:29:52.520 --> 01:29:53.620
这个这个对象呢

01:29:53.620 --> 01:29:54.820
来决定啊

01:29:54.820 --> 01:29:55.920
这个韩叔叔的dance

01:29:55.920 --> 01:29:56.820
他到底是谁对吧

01:29:56.820 --> 01:29:58.220
我在这边说我先问一个吧

01:29:58.220 --> 01:29:58.920
我对这

01:29:59.020 --> 01:30:01.320
我就握握一个叫做a对吧

01:30:01.320 --> 01:30:02.420
你写什么名都可以对吧

01:30:02.420 --> 01:30:03.220
我叫做一个

01:30:03.520 --> 01:30:04.420
刚dance对吧

01:30:04.420 --> 01:30:05.620
都可以啊

01:30:05.620 --> 01:30:07.720
我问这个纸这个纸叫谁对象啊

01:30:07.720 --> 01:30:08.720
这个对象

01:30:08.720 --> 01:30:09.620
那我在这呢

01:30:09.620 --> 01:30:10.020
啊

01:30:10.020 --> 01:30:10.920
传这样的一个

01:30:11.620 --> 01:30:12.320
OBJ

01:30:13.320 --> 01:30:13.720
啊

01:30:13.720 --> 01:30:14.720
那最后这个韩叔叔在写的时候

01:30:14.720 --> 01:30:15.620
那么dance谁啊

01:30:15.620 --> 01:30:16.520
这个dance呢

01:30:16.820 --> 01:30:18.020
都是这个OBJ外

01:30:18.020 --> 01:30:18.520
啊

01:30:18.520 --> 01:30:19.620
他也就比这样的功能了

01:30:19.620 --> 01:30:20.420
我再可以来看一下

01:30:20.420 --> 01:30:20.720
行吧

01:30:20.720 --> 01:30:22.320
咱们咱们先来看一下

01:30:22.320 --> 01:30:23.020
一二一

01:30:23.420 --> 01:30:23.820
啊

01:30:24.320 --> 01:30:25.720
nice和self

01:30:27.220 --> 01:30:27.520
self

01:30:27.520 --> 01:30:28.220
包括dance

01:30:28.220 --> 01:30:28.920
再来看一下啊

01:30:28.920 --> 01:30:29.620
实际一次

01:30:31.600 --> 01:30:32.200
在这

01:30:32.700 --> 01:30:33.200
啊

01:30:33.200 --> 01:30:34.400
因为第一个纸

01:30:34.400 --> 01:30:35.800
哎是给人送第二纸的时候

01:30:35.800 --> 01:30:37.300
这个所谓第三纸是数组

01:30:37.300 --> 01:30:38.100
第四个纸呢

01:30:38.100 --> 01:30:38.400
哎

01:30:38.400 --> 01:30:39.300
是这样的一个

01:30:39.300 --> 01:30:40.700
你传进来的这个对象

01:30:40.700 --> 01:30:41.200
对象对吧

01:30:41.200 --> 01:30:42.100
你这个这个外面什么东西

01:30:42.100 --> 01:30:43.000
也是空的对吧

01:30:43.000 --> 01:30:43.200
啊

01:30:43.200 --> 01:30:44.800
是个是个他这样的对象

01:30:44.800 --> 01:30:45.000
啊

01:30:45.000 --> 01:30:45.900
就是这个dance

01:30:45.900 --> 01:30:46.300
可以怎么样

01:30:46.300 --> 01:30:48.500
可以用这个第二材数来去决定啊

01:30:48.500 --> 01:30:49.000
那那

01:30:49.600 --> 01:30:50.800
那最后的这个纽尔瑞

01:30:50.800 --> 01:30:51.100
好

01:30:51.100 --> 01:30:52.400
是map直接完以后的吧

01:30:52.400 --> 01:30:52.600
好

01:30:52.600 --> 01:30:53.900
还会反回一个新的数组的吧

01:30:53.900 --> 01:30:54.700
新的数组

01:30:54.700 --> 01:30:56.100
来看纽尔瑞啊

01:30:56.100 --> 01:30:57.100
说这个纽尔瑞呢

01:30:57.100 --> 01:30:57.900
是一个什么

01:30:57.900 --> 01:30:58.700
是一个新的数组

01:30:58.700 --> 01:30:59.600
是map直接完后

01:30:59.600 --> 01:31:00.600
反回了一个新的数组

01:31:02.100 --> 01:31:02.900
那这个数组呢

01:31:02.900 --> 01:31:03.700
哎

01:31:03.700 --> 01:31:04.800
这个值是什么呢

01:31:04.800 --> 01:31:05.000
好

01:31:05.000 --> 01:31:05.600
咱稍息一下

01:31:05.600 --> 01:31:06.200
咱来看一下

01:31:06.200 --> 01:31:07.100
现在

01:31:07.100 --> 01:31:08.600
就发现是几个案底犯的

01:31:08.600 --> 01:31:09.000
对吧

01:31:09.000 --> 01:31:10.600
是案底犯什么值都没有啊

01:31:10.600 --> 01:31:11.400
第四个方式好了

01:31:11.400 --> 01:31:12.600
什么都没有啊

01:31:12.600 --> 01:31:13.500
那一面场就好了

01:31:13.500 --> 01:31:15.100
因为这个啊

01:31:15.100 --> 01:31:17.200
我先把它去掉一下啊

01:31:17.200 --> 01:31:18.600
这个方式啊

01:31:18.600 --> 01:31:18.800
哎

01:31:18.800 --> 01:31:20.400
跟filter也比较像啊

01:31:20.400 --> 01:31:21.600
那个filter的方式

01:31:21.600 --> 01:31:22.700
那反回值决定了

01:31:22.700 --> 01:31:24.800
这个该元素是否去流啊

01:31:24.800 --> 01:31:26.300
那我们这样的一个map比啊

01:31:26.300 --> 01:31:28.100
我们map是一个方式

01:31:28.100 --> 01:31:29.800
决定完的一个反回值啊

01:31:29.800 --> 01:31:31.600
决定了啊

01:31:31.600 --> 01:31:33.600
最后对应了那个新数组

01:31:33.600 --> 01:31:35.200
那个值它是什么

01:31:35.600 --> 01:31:36.400
比如说

01:31:36.400 --> 01:31:37.200
我在这可以这么来

01:31:37.200 --> 01:31:39.000
它写一二一点

01:31:39.000 --> 01:31:39.600
H

01:31:39.600 --> 01:31:41.000
比如说它的年代对吧

01:31:41.000 --> 01:31:42.700
那我要

01:31:42.700 --> 01:31:43.600
这个

01:31:43.600 --> 01:31:45.200
每次函数值决定的时候啊

01:31:45.200 --> 01:31:47.000
它这个里面所存这个元

01:31:47.000 --> 01:31:48.400
元素这个年龄

01:31:48.400 --> 01:31:51.200
我们再自己加上一个10

01:31:51.200 --> 01:31:51.800
好

01:31:51.800 --> 01:31:52.900
那最后就好了

01:31:52.900 --> 01:31:55.000
最后我认为它有这个一二一

01:31:55.700 --> 01:31:56.200
好

01:31:56.200 --> 01:31:57.300
当我这么喜欢以后的话

01:31:57.300 --> 01:31:57.700
OK了

01:31:57.700 --> 01:31:59.700
最后这个牛尾为你们啊

01:31:59.700 --> 01:32:00.900
它里面就会存什么

01:32:00.900 --> 01:32:02.200
它里面就会存

01:32:02.300 --> 01:32:04.000
每次函数值决定完

01:32:04.000 --> 01:32:05.600
这样的一个反回值

01:32:05.600 --> 01:32:05.900
好

01:32:05.900 --> 01:32:06.900
再来看一下

01:32:06.900 --> 01:32:07.280
刷

01:32:07.280 --> 01:32:08.900
刷因子啊

01:32:08.900 --> 01:32:09.400
你会发现到

01:32:09.400 --> 01:32:10.400
最后这个数组

01:32:10.400 --> 01:32:11.000
里面

01:32:11.000 --> 01:32:12.000
每一个对象

01:32:12.000 --> 01:32:13.100
这个年龄啊

01:32:13.100 --> 01:32:13.700
都怎么样

01:32:13.700 --> 01:32:14.900
都是在原有基础值上

01:32:14.900 --> 01:32:15.700
就加那个10

01:32:15.700 --> 01:32:17.900
看这是30 35对吧

01:32:17.900 --> 01:32:18.600
看这呢

01:32:18.600 --> 01:32:19.400
这是一个

01:32:20.500 --> 01:32:23.400
20 25 26 35对吧

01:32:23.400 --> 01:32:24.000
比如说

01:32:24.000 --> 01:32:26.600
这个map是一个硬设的一个作用

01:32:26.600 --> 01:32:27.600
它会反回一个新的数组

01:32:27.600 --> 01:32:28.500
那新的数组

01:32:28.500 --> 01:32:30.900
里面所存的这些值啊

01:32:30.900 --> 01:32:34.300
比如这个硬设这样的一个规则啊

01:32:34.300 --> 01:32:36.900
所导出的一个结果来去怎么样

01:32:36.900 --> 01:32:38.400
去决定的啊

01:32:38.400 --> 01:32:39.200
那换句话来讲啊

01:32:39.200 --> 01:32:40.800
用最通词话来讲就是

01:32:40.800 --> 01:32:41.800
这个函数呢

01:32:41.800 --> 01:32:43.200
会支撑很多次对吧

01:32:43.200 --> 01:32:43.700
那最后呢

01:32:43.700 --> 01:32:44.900
每一次函完

01:32:44.900 --> 01:32:47.000
你所反回的那个值

01:32:47.000 --> 01:32:48.900
所反回的那个值

01:32:48.900 --> 01:32:49.300
好

01:32:49.300 --> 01:32:51.500
就会作为数组

01:32:51.500 --> 01:32:54.000
就会作为这个新数组的它那个那个值

01:32:54.000 --> 01:32:54.900
那就是说我在这

01:32:54.900 --> 01:32:57.200
如果我先反回一个10

01:32:57.200 --> 01:32:57.400
好了

01:32:57.400 --> 01:32:58.700
我们最后咱看这个六二位啊

01:32:58.700 --> 01:33:00.500
来看一看

01:33:00.500 --> 01:33:01.500
就全部是10位

01:33:01.500 --> 01:33:02.000
是吧

01:33:02.000 --> 01:33:02.600
如果说呢

01:33:02.600 --> 01:33:05.100
寫20呢

01:33:05.100 --> 01:33:07.500
就是20倍是吧

01:33:07.500 --> 01:33:10.200
有时候这个map

01:33:10.200 --> 01:33:12.300
所存的这个函数这个猜数嘛

01:33:12.300 --> 01:33:13.900
最后反回那个值啊

01:33:13.900 --> 01:33:15.400
来决定这个新数组的那个值

01:33:15.400 --> 01:33:16.800
到底它是什么啊

01:33:16.800 --> 01:33:18.300
那我们再使用它来说的话

01:33:18.300 --> 01:33:19.200
那再来说

01:33:19.200 --> 01:33:21.700
我们要通过数组的方式的吧

01:33:21.700 --> 01:33:22.900
来去调用它

01:33:22.900 --> 01:33:23.500
那一定怎么样

01:33:23.500 --> 01:33:24.100
一定

01:33:24.100 --> 01:33:26.500
最后我们希望得到的新数组里面

01:33:26.500 --> 01:33:27.500
那些值

01:33:27.500 --> 01:33:28.700
它都是基于什么

01:33:28.700 --> 01:33:31.100
基于我数组的某个元素

01:33:31.100 --> 01:33:33.500
或者说这个某个元素里面

01:33:33.500 --> 01:33:35.100
是这样的一些值了

01:33:35.100 --> 01:33:36.100
啊

01:33:36.100 --> 01:33:37.400
以后它也说

01:33:37.400 --> 01:33:38.600
这个map形成一种

01:33:38.600 --> 01:33:39.600
因为说关系的话

01:33:39.600 --> 01:33:41.500
一定是有s才能够去怎么样

01:33:41.500 --> 01:33:43.000
这种到y的

01:33:43.000 --> 01:33:45.700
因为说我要利用原有的这样一些值

01:33:45.700 --> 01:33:46.000
对吧

01:33:46.000 --> 01:33:47.700
特别这样的一个基础操作

01:33:47.700 --> 01:33:49.400
加上我一些的一个规则

01:33:49.400 --> 01:33:51.300
就导出一个结果

01:33:51.300 --> 01:33:52.100
还发挥到什么

01:33:52.100 --> 01:33:53.900
那个新数组啊

01:33:53.900 --> 01:33:56.900
我们刚才所说就是让把这个

01:33:56.900 --> 01:33:58.900
对于对样中每个人的年龄

01:33:58.900 --> 01:33:59.100
对吧

01:33:59.100 --> 01:34:00.700
全加持发挥给取的

01:34:00.700 --> 01:34:02.200
都发挥出去对吧

01:34:02.200 --> 01:34:04.100
那比如说我还可以这么做呢

01:34:04.100 --> 01:34:06.500
我就想得到的数据叫做

01:34:06.500 --> 01:34:08.700
new array

01:34:08.700 --> 01:34:09.800
new name array

01:34:09.800 --> 01:34:10.000
好

01:34:10.000 --> 01:34:12.400
就是我就要得到一个新的数据

01:34:12.400 --> 01:34:13.400
这个新的数据是啥呢

01:34:13.400 --> 01:34:15.000
这个新的数据就是

01:34:15.000 --> 01:34:17.500
你这个数据中的每个人对象的名字

01:34:17.500 --> 01:34:18.400
这个字不算

01:34:18.400 --> 01:34:18.700
对吧

01:34:18.700 --> 01:34:19.600
那怎么办呢

01:34:19.600 --> 01:34:20.500
你看

01:34:20.500 --> 01:34:22.800
我有它作为我们所说的那个x对吧

01:34:22.800 --> 01:34:24.300
我们利用一个规则

01:34:24.300 --> 01:34:25.000
给它变成什么

01:34:25.000 --> 01:34:26.400
给它最后导出一个结果

01:34:26.400 --> 01:34:27.100
是一个y

01:34:27.100 --> 01:34:28.300
那这个规则是啥呢

01:34:28.300 --> 01:34:31.100
就是把每个语言诉讼的名字

01:34:31.100 --> 01:34:32.300
就去出来

01:34:32.300 --> 01:34:34.300
那我想通过这个processor array

01:34:34.300 --> 01:34:35.900
来调这个map的时候

01:34:35.900 --> 01:34:38.300
还是会执行很多次对吧

01:34:38.300 --> 01:34:39.040
执行原语言

01:34:39.040 --> 01:34:41.200
它一说多少个执行多少次

01:34:41.200 --> 01:34:42.200
那每次执行的时候

01:34:42.200 --> 01:34:43.000
我可以怎么办呢

01:34:43.000 --> 01:34:44.600
我就直接特认一下

01:34:44.600 --> 01:34:47.200
re的 name

01:34:47.200 --> 01:34:47.600
好了

01:34:47.600 --> 01:34:49.200
最后这个new name array

01:34:49.200 --> 01:34:51.200
就是这个new name array

01:34:51.200 --> 01:34:51.400
好

01:34:51.400 --> 01:34:52.600
咱来试试一下

01:34:52.600 --> 01:34:54.000
就说我得到一个新的数据

01:34:54.000 --> 01:34:56.300
新的数据是谁啊

01:34:56.300 --> 01:34:57.700
全是名字了

01:34:57.700 --> 01:34:58.000
对吧

01:34:58.000 --> 01:34:59.100
人说

01:34:59.100 --> 01:35:00.200
你可以透过它怎么样

01:35:00.200 --> 01:35:02.900
来进行一些的一个硬设操作

01:35:02.900 --> 01:35:04.500
那这个数据可能这个维度比较高

01:35:04.500 --> 01:35:04.900
对吧

01:35:04.900 --> 01:35:06.700
很多这个它很它很多个纸

01:35:06.700 --> 01:35:07.600
它可能说我们只需要

01:35:07.600 --> 01:35:09.200
要里面的区域一个对吧

01:35:09.200 --> 01:35:10.300
怎么办呢

01:35:10.300 --> 01:35:13.300
用map来做一个这种硬设就可以了

01:35:13.300 --> 01:35:16.200
这个使用的话是应该没问题啊

01:35:16.200 --> 01:35:17.800
不是

01:35:17.800 --> 01:35:23.330
都是没问题吧

01:35:23.330 --> 01:35:26.940
大同学

01:35:26.940 --> 01:35:27.240
不是

01:35:27.240 --> 01:35:28.340
现在数据它维度比较高

01:35:28.340 --> 01:35:31.240
但是我们只我们只要是操作

01:35:31.240 --> 01:35:33.540
它某它某它某它某个纸对吧

01:35:33.540 --> 01:35:34.240
它怎么办呢

01:35:34.240 --> 01:35:37.140
会这种硬设给它导出一些我们需要的纸

01:35:37.140 --> 01:35:39.340
我们操作它这些纸这不就行了吗

01:35:39.340 --> 01:35:39.840
是吧

01:35:39.840 --> 01:35:41.740
嗯

01:35:41.740 --> 01:35:42.740
跟你吧

01:35:42.740 --> 01:35:43.840
ok

01:35:43.840 --> 01:35:45.040
那没问题的话

01:35:45.040 --> 01:35:46.440
咱来看一下咱来看一下

01:35:46.440 --> 01:35:47.140
咱看一下这个东西

01:35:47.140 --> 01:35:47.940
我怎么来去使用啊

01:35:47.940 --> 01:35:48.740
怎么来去使用

01:35:48.740 --> 01:35:50.340
我怎么来去写它的原码啊

01:35:50.340 --> 01:35:51.240
原码

01:35:51.240 --> 01:35:53.240
来看一下

01:35:53.240 --> 01:35:54.540
今天讲的大部分方法啊

01:35:54.540 --> 01:35:55.940
今天讲的大部分方法

01:35:55.940 --> 01:35:57.740
咱们会放到咱们这个

01:35:57.840 --> 01:35:59.440
第二节课中去来去使用一下

01:35:59.440 --> 01:36:01.240
你别不用急啊

01:36:01.240 --> 01:36:03.140
说不定它不它两点课嘛

01:36:03.140 --> 01:36:03.640
对吧

01:36:03.640 --> 01:36:05.740
这一课主要两点啊

01:36:05.740 --> 01:36:07.440
先会基本的一个使用

01:36:07.440 --> 01:36:08.040
对吧

01:36:08.040 --> 01:36:09.640
知道每个参数是什么意思

01:36:09.640 --> 01:36:10.940
第二点的啊

01:36:10.940 --> 01:36:12.040
是你会原码

01:36:12.040 --> 01:36:13.240
就什么来写

01:36:13.240 --> 01:36:15.440
懂不懂啊

01:36:15.440 --> 01:36:16.640
距离距离怎么来它使用的话

01:36:16.640 --> 01:36:17.040
对吧

01:36:17.040 --> 01:36:18.040
我们第二课呢

01:36:18.040 --> 01:36:19.540
咱来去使用一下吧

01:36:19.540 --> 01:36:19.940
对吧

01:36:19.940 --> 01:36:20.640
那后面呢

01:36:20.640 --> 01:36:22.440
我们碰到一些一些新手的手动

01:36:22.440 --> 01:36:24.940
还会再拿来你去使用使用啊

01:36:24.940 --> 01:36:27.040
大家今天有一些方法的话

01:36:27.040 --> 01:36:28.240
就像那个Reduce啊

01:36:28.240 --> 01:36:29.640
我也会直接告诉你

01:36:29.640 --> 01:36:30.940
我们来去使用它

01:36:30.940 --> 01:36:31.440
但是呢

01:36:31.440 --> 01:36:32.340
得记住一点

01:36:32.340 --> 01:36:34.140
后面的一些知识啊

01:36:34.140 --> 01:36:35.040
咱咱来先来看一下

01:36:35.040 --> 01:36:36.940
这个Map怎么来使用啊

01:36:36.940 --> 01:36:39.040
怎么来去写它的原码啊

01:36:39.040 --> 01:36:40.140
首先还是Array

01:36:40.140 --> 01:36:40.540
这样

01:36:41.840 --> 01:36:42.740
就这样对吧

01:36:42.740 --> 01:36:44.040
有什么点Map

01:36:44.040 --> 01:36:44.940
写个Map

01:36:46.340 --> 01:36:47.140
有一个方式

01:36:49.140 --> 01:36:49.840
我在这吧

01:36:49.840 --> 01:36:50.540
我在这

01:36:50.540 --> 01:36:51.540
Ctrl C一下

01:36:51.540 --> 01:36:52.140
把它注册啊

01:36:52.140 --> 01:36:52.640
在这呢

01:36:52.640 --> 01:36:53.940
比如说Ctrl V一下

01:36:53.940 --> 01:36:54.540
为了快点的话

01:36:54.540 --> 01:36:55.740
我这直接就超一下嘛

01:36:55.740 --> 01:36:56.440
叫Map

01:36:57.640 --> 01:36:58.640
它要达成

01:36:58.640 --> 01:36:59.640
我实现了一个效果

01:36:59.640 --> 01:37:01.840
就是这个New Name

01:37:01.840 --> 01:37:02.440
Array

01:37:03.240 --> 01:37:03.440
好

01:37:03.440 --> 01:37:03.940
所以一下

01:37:08.450 --> 01:37:09.150
OK

01:37:09.150 --> 01:37:10.750
那在这咱来看一下

01:37:10.750 --> 01:37:11.350
咱来看一下

01:37:11.350 --> 01:37:12.350
我怎么来去实验它

01:37:12.350 --> 01:37:12.750
首先呢

01:37:12.750 --> 01:37:13.450
也是一样的

01:37:13.450 --> 01:37:15.150
这可能也是要接受一个函数

01:37:15.150 --> 01:37:15.750
做一个参数

01:37:15.750 --> 01:37:16.350
对不对

01:37:16.350 --> 01:37:16.750
在这呢

01:37:16.750 --> 01:37:18.350
比如说我一个叫做一个Less

01:37:18.350 --> 01:37:18.750
等于什么的

01:37:18.750 --> 01:37:19.550
一个Dance and Less

01:37:19.550 --> 01:37:20.150
对吧

01:37:20.150 --> 01:37:20.550
好

01:37:20.550 --> 01:37:21.050
那么在这呢

01:37:21.050 --> 01:37:22.150
来个循环啊

01:37:22.150 --> 01:37:22.750
因为这个函数

01:37:22.750 --> 01:37:23.750
只有多少次的区域

01:37:23.750 --> 01:37:24.150
怎么学

01:37:24.150 --> 01:37:25.550
你有多少个帳

01:37:25.550 --> 01:37:25.950
一个纸

01:37:25.950 --> 01:37:26.350
对吧

01:37:26.350 --> 01:37:27.350
我挨走一个零

01:37:27.350 --> 01:37:28.350
然后这个I

01:37:28.350 --> 01:37:29.250
小一个Less

01:37:29.250 --> 01:37:29.650
就好了

01:37:29.650 --> 01:37:30.250
I加加

01:37:31.950 --> 01:37:32.850
I加加

01:37:32.850 --> 01:37:33.350
好了

01:37:33.350 --> 01:37:34.750
那在每次实验的时候呢

01:37:34.750 --> 01:37:35.150
对吧

01:37:35.150 --> 01:37:37.550
我怎么让我要去凶给你的这样的一个

01:37:38.150 --> 01:37:38.750
Dance指向

01:37:38.750 --> 01:37:39.350
对不对

01:37:39.350 --> 01:37:39.550
好

01:37:39.550 --> 01:37:40.750
所以说用抗什么呢

01:37:40.750 --> 01:37:41.350
用抗可以啊

01:37:41.350 --> 01:37:41.950
没问题啊

01:37:41.950 --> 01:37:42.550
可以的

01:37:42.550 --> 01:37:43.950
因为它就用抗什么

01:37:43.950 --> 01:37:45.550
我现在我为了更Dance

01:37:45.550 --> 01:37:46.350
这个Dance呢

01:37:46.350 --> 01:37:46.750
有什么的

01:37:46.750 --> 01:37:47.550
一个Ignance

01:37:47.550 --> 01:37:48.250
这是添一个1

01:37:48.250 --> 01:37:48.950
完了呢

01:37:48.950 --> 01:37:50.250
或者是添一个Windows

01:37:50.250 --> 01:37:50.350
好

01:37:50.350 --> 01:37:51.550
就是这个Dance就是

01:37:51.550 --> 01:37:53.950
如果你传定这个第二个实际参数的话

01:37:53.950 --> 01:37:55.750
我觉得我让你个Dance是谁啊

01:37:55.750 --> 01:37:56.750
是你的第二个实际参数

01:37:56.750 --> 01:37:57.250
对吧

01:37:57.250 --> 01:37:58.250
如果你没传到

01:37:58.250 --> 01:37:59.050
Windows

01:37:59.050 --> 01:38:01.450
那我让这个GunDance来决定这个函数

01:38:01.450 --> 01:38:02.250
他在决定的时候

01:38:02.250 --> 01:38:02.650
Windows

01:38:02.650 --> 01:38:03.250
他在决定的时候

01:38:03.250 --> 01:38:04.450
这个Dance到底是谁

01:38:04.450 --> 01:38:05.450
后面说啥呢

01:38:05.450 --> 01:38:06.250
我们来调

01:38:06.250 --> 01:38:08.050
首先DanceI

01:38:08.050 --> 01:38:09.750
这个DanceI是啥呢

01:38:09.750 --> 01:38:11.450
是这一次的吧

01:38:11.450 --> 01:38:12.350
是这一圈啊

01:38:12.350 --> 01:38:13.550
那个元素啊

01:38:13.550 --> 01:38:15.250
就是这个数目中对应的那个元素

01:38:15.250 --> 01:38:16.950
比如说这个第一圈I是零的吧

01:38:16.950 --> 01:38:19.050
或者是把这个数目中第一个元素

01:38:19.050 --> 01:38:19.850
作为这个函数

01:38:19.850 --> 01:38:21.850
执行的这个第一个实际参数的吧

01:38:21.850 --> 01:38:22.750
那第二个啥呢

01:38:22.750 --> 01:38:23.250
这个也是对的

01:38:23.250 --> 01:38:24.550
所以第三个呢

01:38:24.550 --> 01:38:26.150
就是说本身嘛

01:38:26.150 --> 01:38:26.750
好

01:38:26.750 --> 01:38:29.350
那这个执行完的一个返回结果

01:38:29.350 --> 01:38:30.150
会怎么样呢

01:38:30.150 --> 01:38:30.750
我们就知道

01:38:30.750 --> 01:38:31.450
MineMap

01:38:31.450 --> 01:38:33.350
他也是会返回一个函数的

01:38:33.350 --> 01:38:33.750
是吧

01:38:33.750 --> 01:38:34.150
好了

01:38:34.150 --> 01:38:34.750
那在这里的时候

01:38:34.750 --> 01:38:36.550
我现在握一个

01:38:36.550 --> 01:38:37.150
握一个这样子

01:38:37.150 --> 01:38:37.950
握一个Array吧

01:38:37.950 --> 01:38:39.250
Array他的一个数字

01:38:39.250 --> 01:38:39.950
那最后呢

01:38:39.950 --> 01:38:43.570
放学法以后会返回一个数字

01:38:43.570 --> 01:38:45.870
返回一个数字

01:38:45.870 --> 01:38:46.270
好

01:38:46.270 --> 01:38:47.070
那在这的话呢

01:38:47.070 --> 01:38:48.670
我怎么办

01:38:48.670 --> 01:38:50.370
握Array点

01:38:50.370 --> 01:38:50.870
不是这样行吗

01:38:50.870 --> 01:38:51.370
对不对

01:38:51.370 --> 01:38:52.270
要说

01:38:52.270 --> 01:38:52.770
Failter

01:38:52.770 --> 01:38:53.870
会要根据你的返回时

01:38:53.870 --> 01:38:54.670
来判断一下

01:38:54.670 --> 01:38:56.170
我这不决定谁和谁留下不了

01:38:56.170 --> 01:38:56.670
对吧

01:38:56.670 --> 01:38:58.070
但MineMap不是这样的

01:38:58.070 --> 01:38:58.870
Map是

01:38:58.870 --> 01:39:00.570
我直接把这函数的返回值

01:39:00.570 --> 01:39:01.570
给他最高兴趣的时候

01:39:01.570 --> 01:39:02.970
给你返回自己

01:39:02.970 --> 01:39:04.670
那有时候最后MineMap

01:39:04.670 --> 01:39:05.670
我们已经怎么样

01:39:05.670 --> 01:39:06.570
已经搞定了

01:39:06.570 --> 01:39:07.170
他写完了

01:39:07.170 --> 01:39:07.370
谢谢

01:39:07.370 --> 01:39:08.270
没多难对不对

01:39:08.270 --> 01:39:08.670
来上下

01:39:08.670 --> 01:39:10.370
咱们来看一眼

01:39:10.370 --> 01:39:10.870
你看

01:39:10.870 --> 01:39:11.870
我是写的吧

01:39:11.870 --> 01:39:12.970
依旧是这样的一个值

01:39:12.970 --> 01:39:13.970
依旧是这样这样的一个值

01:39:13.970 --> 01:39:14.470
你看好了

01:39:14.470 --> 01:39:14.870
这

01:39:14.870 --> 01:39:16.770
对不对

01:39:16.770 --> 01:39:18.870
我现在使用的是我们的MineMap方法

01:39:18.870 --> 01:39:19.270
对吧

01:39:19.270 --> 01:39:19.770
而不是什么

01:39:19.770 --> 01:39:21.170
而不是我们的MineMap方法

01:39:21.170 --> 01:39:21.870
这是我们自己写的

01:39:21.870 --> 01:39:22.370
对吧

01:39:22.370 --> 01:39:23.370
那最后得出的值呢

01:39:23.370 --> 01:39:24.170
跟我们之间是一样的

01:39:24.170 --> 01:39:25.470
证明我们写的它是对的

01:39:25.470 --> 01:39:25.970
对不对

01:39:25.970 --> 01:39:26.970
为了再次分享一下

01:39:26.970 --> 01:39:27.970
你可以来看一下这个Dance

01:39:27.970 --> 01:39:30.770
是不是我们所需要那个Dance

01:39:30.770 --> 01:39:31.970
是不是OBJ

01:39:31.970 --> 01:39:33.270
是不是一个空位线

01:39:33.270 --> 01:39:37.390
来看一下

01:39:37.390 --> 01:39:37.990
是吧

01:39:37.990 --> 01:39:39.290
是不是这么问题

01:39:39.290 --> 01:39:40.590
这么问题吧

01:39:40.590 --> 01:39:41.890
好

01:39:41.890 --> 01:39:43.290
那

01:39:43.290 --> 01:39:43.790
那这样的话

01:39:43.790 --> 01:39:45.290
咱们已经知道这个MineMap

01:39:45.290 --> 01:39:46.390
是实现的了

01:39:46.390 --> 01:39:46.990
怎么

01:39:46.990 --> 01:39:48.390
怎么怎么怎么实现了

01:39:48.390 --> 01:39:49.490
那我们后面一些东西

01:39:49.490 --> 01:39:51.190
我们可以举一反三一下

01:39:51.190 --> 01:39:53.490
后面就可以举一来海参

01:39:53.490 --> 01:39:53.990
那

01:39:53.990 --> 01:39:56.790
呵呵呵呵

01:39:56.790 --> 01:39:57.190
看这样了

01:39:57.190 --> 01:39:59.990
看这样了

01:39:59.990 --> 01:40:00.990
这个

01:40:00.990 --> 01:40:02.390
比如说这个Ari和Sum

01:40:02.390 --> 01:40:03.990
Ari和Sum

01:40:03.990 --> 01:40:05.390
Ari和Sum的话

01:40:05.390 --> 01:40:06.390
什么意思呢

01:40:06.390 --> 01:40:09.990
这个Ari是每个Sum是一些对吧

01:40:09.990 --> 01:40:11.190
它俩起到的作用是什么

01:40:11.190 --> 01:40:12.590
就是一些数组

01:40:12.590 --> 01:40:14.290
比如说一些数组

01:40:14.290 --> 01:40:15.490
我们要进行这样的一个判断

01:40:15.490 --> 01:40:16.290
你就不用这样

01:40:16.290 --> 01:40:17.290
比如说给了一堆数据

01:40:17.290 --> 01:40:17.590
对吧

01:40:17.590 --> 01:40:18.490
完了之后呢

01:40:18.490 --> 01:40:20.090
比如说这堆数据

01:40:20.090 --> 01:40:21.990
我们需要

01:40:21.990 --> 01:40:22.890
不是我们需要这样

01:40:22.890 --> 01:40:24.690
我们需要说是这个

01:40:24.690 --> 01:40:25.490
每个数据

01:40:25.490 --> 01:40:26.490
数据中的

01:40:26.490 --> 01:40:29.790
这个数据中的每个元素都符合条件了

01:40:29.790 --> 01:40:31.290
集体在符合条件

01:40:31.290 --> 01:40:31.890
对吧

01:40:31.890 --> 01:40:32.290
那好了

01:40:32.290 --> 01:40:33.290
那这个时候怎么办

01:40:33.290 --> 01:40:34.290
我说ok数据

01:40:34.290 --> 01:40:34.990
Ari

01:40:34.990 --> 01:40:36.190
那如果说这个数据

01:40:36.190 --> 01:40:38.490
如果有一个符合条件的话

01:40:38.490 --> 01:40:40.290
就算是符合条件的话

01:40:40.290 --> 01:40:41.690
那么可以用Sum

01:40:41.690 --> 01:40:44.190
比如说这Ari和Sum它45的方法

01:40:44.190 --> 01:40:46.290
那最后会返回出False

01:40:46.290 --> 01:40:47.490
会返回出False

01:40:47.490 --> 01:40:48.690
那返回出False

01:40:48.690 --> 01:40:50.690
False这个条件它是一样的

01:40:50.690 --> 01:40:50.890
不是

01:40:50.890 --> 01:40:51.590
一堆人对吧

01:40:51.590 --> 01:40:52.290
有这一堆人

01:40:53.690 --> 01:40:54.490
一堆人

01:40:54.490 --> 01:40:55.690
比如说

01:40:55.690 --> 01:40:57.490
二十二十五二六三五四十

01:40:57.490 --> 01:40:57.890
对吧

01:40:57.890 --> 01:40:58.690
比如说这堆人

01:40:58.690 --> 01:40:59.590
比如说他要走

01:40:59.590 --> 01:41:01.190
要玩游行吗

01:41:01.190 --> 01:41:02.290
要走团去

01:41:02.290 --> 01:41:03.390
去里游行吗

01:41:03.390 --> 01:41:04.790
比如说ok一个团里面

01:41:04.790 --> 01:41:06.190
我们当当他动物

01:41:06.190 --> 01:41:07.190
他很多很多人

01:41:07.190 --> 01:41:07.590
对吧

01:41:07.590 --> 01:41:09.290
就一提交的时候好了

01:41:09.290 --> 01:41:10.390
我得让你符合我的需求

01:41:10.390 --> 01:41:10.590
对吧

01:41:10.590 --> 01:41:11.390
我的需求什么呢

01:41:11.390 --> 01:41:12.690
我的需求是未卖十八岁

01:41:12.690 --> 01:41:13.090
对吧

01:41:13.090 --> 01:41:14.590
你不能去参加

01:41:14.590 --> 01:41:15.390
这样的一个

01:41:15.390 --> 01:41:16.390
这样

01:41:16.390 --> 01:41:18.290
你不能去跟这样的一个同儿

01:41:18.290 --> 01:41:19.090
那怎么办呢

01:41:19.090 --> 01:41:20.290
那在这我可以用这个Ari

01:41:21.890 --> 01:41:23.290
我会用这个Ari

01:41:23.290 --> 01:41:25.690
Ari你必须所有的都满小件

01:41:25.690 --> 01:41:26.790
才可以对不对

01:41:26.790 --> 01:41:26.990
好了

01:41:26.990 --> 01:41:27.690
那咱来看一下

01:41:29.590 --> 01:41:30.290
怎么来去使用

01:41:30.290 --> 01:41:31.190
怎么来去使用

01:41:31.190 --> 01:41:31.990
首先呢

01:41:31.990 --> 01:41:32.590
这个人们呢

01:41:32.590 --> 01:41:35.590
也是这个arid.project.plototp

01:41:35.590 --> 01:41:36.390
什么方法

01:41:37.590 --> 01:41:38.590
这个方法呢

01:41:38.590 --> 01:41:39.690
他在执行

01:41:39.690 --> 01:41:41.690
这个方法在执行的时候啊

01:41:41.690 --> 01:41:42.390
你需要承你

01:41:42.390 --> 01:41:43.990
也是需要承那个材质

01:41:43.990 --> 01:41:45.190
这个材质是个函数

01:41:46.990 --> 01:41:47.690
函数

01:41:47.690 --> 01:41:49.190
这个目的ok来说

01:41:49.190 --> 01:41:49.990
这个目的是

01:41:50.090 --> 01:41:51.090
要去判断一下

01:41:52.090 --> 01:41:57.390
这个数组中的元素是否都符合条件

01:41:57.890 --> 01:41:58.290
好

01:41:58.290 --> 01:41:58.890
是吧

01:41:58.890 --> 01:41:59.590
如果都符合的话

01:41:59.590 --> 01:41:59.990
怎么样

01:41:59.990 --> 01:42:00.690
反而处

01:42:00.690 --> 01:42:01.290
不符合呢

01:42:01.290 --> 01:42:02.090
反而fals

01:42:02.090 --> 01:42:03.390
有一个符合就反而fals

01:42:03.390 --> 01:42:04.190
反而fals

01:42:04.190 --> 01:42:04.690
好

01:42:04.690 --> 01:42:05.490
那在执行的时候呢

01:42:05.490 --> 01:42:06.590
需要承的材数

01:42:06.590 --> 01:42:07.590
这个材数是函数

01:42:07.590 --> 01:42:08.590
函数还是一样的

01:42:08.590 --> 01:42:09.890
有AR1对吧

01:42:09.890 --> 01:42:10.490
有AR1

01:42:10.490 --> 01:42:11.290
AR1完了呢

01:42:11.290 --> 01:42:12.690
有这个index

01:42:13.690 --> 01:42:14.790
加上还有self

01:42:14.790 --> 01:42:14.990
是吧

01:42:14.990 --> 01:42:15.990
还有self

01:42:15.990 --> 01:42:16.190
好

01:42:16.190 --> 01:42:17.490
那这个函数呢

01:42:17.490 --> 01:42:18.590
就是

01:42:18.590 --> 01:42:19.290
他执行说你们

01:42:19.290 --> 01:42:20.390
这次是谁呢

01:42:20.390 --> 01:42:21.590
取决这个iWay

01:42:21.590 --> 01:42:22.590
他在执行的时候怎么样

01:42:24.190 --> 01:42:26.190
说是否传到你的第二个材数

01:42:26.190 --> 01:42:26.490
对吧

01:42:26.490 --> 01:42:27.290
第二个材数呢

01:42:27.290 --> 01:42:28.090
决定这个材数

01:42:28.090 --> 01:42:29.490
这次到底是谁

01:42:29.490 --> 01:42:30.190
好

01:42:30.190 --> 01:42:30.390
OK

01:42:30.390 --> 01:42:31.190
那咱们看一下

01:42:31.190 --> 01:42:32.590
我写一个

01:42:32.590 --> 01:42:33.790
我们把这个iWay给你写完

01:42:33.790 --> 01:42:34.490
写完以后的话

01:42:34.490 --> 01:42:35.290
这个sum

01:42:35.290 --> 01:42:35.690
sum

01:42:35.690 --> 01:42:36.790
我们来使用一下

01:42:36.790 --> 01:42:38.090
sum也不来写了

01:42:38.090 --> 01:42:38.690
作为一个小罪

01:42:38.690 --> 01:42:39.890
你自己来写写

01:42:39.890 --> 01:42:41.790
你们都拿来看一下

01:42:41.790 --> 01:42:42.690
现在看一下怎么来使用

01:42:42.690 --> 01:42:43.190
行吗

01:42:43.190 --> 01:42:45.390
比如说我先Person而为一下

01:42:45.390 --> 01:42:46.890
我点EVE2Y

01:42:46.890 --> 01:42:48.590
比如我们再去录数据的时候

01:42:48.590 --> 01:42:48.790
对吧

01:42:48.790 --> 01:42:49.290
好

01:42:49.290 --> 01:42:50.690
我们通过这个

01:42:50.690 --> 01:42:51.790
把数据接收一个数据

01:42:51.790 --> 01:42:52.190
对吧

01:42:52.190 --> 01:42:53.990
我们来看一下是否所有的数据

01:42:53.990 --> 01:42:55.890
是否这个数据都符合我们这样的需求

01:42:55.890 --> 01:42:57.490
我们比如说就假定一个场景吧

01:42:57.490 --> 01:42:58.090
对吧

01:42:58.090 --> 01:42:59.990
这个场景是

01:42:59.990 --> 01:43:01.990
必须所有人都满18岁的吧

01:43:01.990 --> 01:43:04.090
说这个数据之后才能去通过

01:43:04.090 --> 01:43:04.990
那怎么来办呢

01:43:04.990 --> 01:43:06.290
Person点Array的吧

01:43:06.290 --> 01:43:06.690
好

01:43:06.690 --> 01:43:07.590
我帮你们承担材数

01:43:07.590 --> 01:43:08.590
叫方神

01:43:08.590 --> 01:43:11.720
一而一

01:43:11.720 --> 01:43:12.420
Invance

01:43:12.420 --> 01:43:13.420
来Set

01:43:13.420 --> 01:43:13.920
那在这的话

01:43:13.920 --> 01:43:15.320
我可以来怎么做呢

01:43:15.320 --> 01:43:17.520
可以来直接去返回

01:43:17.520 --> 01:43:18.120
我说

01:43:18.120 --> 01:43:18.620
这样吧

01:43:18.620 --> 01:43:19.420
是

01:43:19.420 --> 01:43:20.120
如果

01:43:20.120 --> 01:43:22.620
如果一而一

01:43:22.620 --> 01:43:24.420
A是你大于20

01:43:24.420 --> 01:43:25.220
大于18

01:43:25.220 --> 01:43:26.420
大于18怎么样

01:43:26.420 --> 01:43:27.920
我再返回一个数

01:43:27.920 --> 01:43:28.820
那之后Array

01:43:28.820 --> 01:43:30.120
就Array函数

01:43:30.120 --> 01:43:31.720
Array函数进行完以后

01:43:31.720 --> 01:43:33.620
返回处还是返回处和

01:43:33.620 --> 01:43:34.820
还是False

01:43:34.820 --> 01:43:36.120
取决于是否

01:43:36.120 --> 01:43:38.020
这个函数

01:43:38.020 --> 01:43:41.020
它是否每次进行都是处

01:43:41.020 --> 01:43:42.920
如果说你每次进行都是处的话

01:43:42.920 --> 01:43:44.720
最后Array才会返回处

01:43:44.720 --> 01:43:46.120
如果你有一次是False

01:43:46.120 --> 01:43:47.320
就返回一个False

01:43:47.320 --> 01:43:48.020
所以说

01:43:48.120 --> 01:43:48.920
我这个函数

01:43:48.920 --> 01:43:50.920
也应该具备应的返回值

01:43:50.920 --> 01:43:51.420
所以说

01:43:51.420 --> 01:43:53.620
它的返回值应该不是处

01:43:53.620 --> 01:43:54.320
就是False

01:43:54.320 --> 01:43:55.320
那我在这的话

01:43:55.320 --> 01:43:55.820
好了

01:43:55.820 --> 01:43:58.620
来直接去通F来进行这样一个判断

01:43:58.620 --> 01:44:00.720
每次函数这个时候我都去判断

01:44:00.720 --> 01:44:02.120
你这个年龄说我大于18岁

01:44:02.120 --> 01:44:03.120
如果大于就返回处

01:44:03.120 --> 01:44:04.420
不大于呢

01:44:04.420 --> 01:44:06.420
AF就返回一个False

01:44:08.620 --> 01:44:11.220
那这样的话就是如果

01:44:11.220 --> 01:44:12.920
这个有一个元素

01:44:12.920 --> 01:44:14.520
它的年龄不大于18岁的话

01:44:14.520 --> 01:44:15.520
所以我返回一个False

01:44:15.520 --> 01:44:16.720
记得就是False

01:44:16.820 --> 01:44:18.320
如果全大于18岁了

01:44:18.320 --> 01:44:19.920
它就之后去返回一个处

01:44:19.920 --> 01:44:20.820
再来看一下

01:44:20.820 --> 01:44:21.820
我们有一个False

01:44:22.220 --> 01:44:23.220
有一个它

01:44:23.220 --> 01:44:24.120
现在呢

01:44:24.120 --> 01:44:25.620
我来说出一下这个False

01:44:28.220 --> 01:44:29.320
之后会返回一个处

01:44:29.320 --> 01:44:30.120
来看一看

01:44:30.120 --> 01:44:30.720
放心

01:44:31.620 --> 01:44:31.920
OK

01:44:31.920 --> 01:44:32.420
是个处

01:44:32.420 --> 01:44:33.120
因啥呢

01:44:33.120 --> 01:44:34.120
因为咱们来看一下

01:44:34.120 --> 01:44:35.620
咱们的所有的年龄

01:44:35.620 --> 01:44:36.820
全是大于18岁了

01:44:36.820 --> 01:44:37.420
对吧

01:44:37.420 --> 01:44:38.920
但是我说我这写一个10岁了

01:44:38.920 --> 01:44:39.120
对吧

01:44:39.120 --> 01:44:39.920
我说这

01:44:39.920 --> 01:44:40.520
这样

01:44:40.520 --> 01:44:42.120
这写个16岁了

01:44:42.120 --> 01:44:42.920
16岁了

01:44:42.920 --> 01:44:43.420
来看一下

01:44:43.420 --> 01:44:45.620
现在反而是False了

01:44:45.620 --> 01:44:45.820
对吧

01:44:45.820 --> 01:44:47.320
就有一个处了

01:44:47.320 --> 01:44:47.720
对吧

01:44:48.420 --> 01:44:50.220
我们就不能让它通过需求

01:44:50.220 --> 01:44:50.720
对不对

01:44:50.720 --> 01:44:51.820
我不能通需求以后的话

01:44:51.820 --> 01:44:52.520
后面要怎么做的话

01:44:52.520 --> 01:44:53.920
根据借不如我记得

01:44:53.920 --> 01:44:54.720
来谈论

01:44:54.720 --> 01:44:54.920
不是

01:44:54.920 --> 01:44:55.620
你说谈传传

01:44:55.620 --> 01:44:56.320
挺高一下

01:44:56.320 --> 01:44:57.120
那严实怎么样

01:44:57.120 --> 01:44:57.520
对吧

01:44:58.620 --> 01:44:59.920
但是业务他需求的事了

01:44:59.920 --> 01:45:00.720
好

01:45:00.720 --> 01:45:01.320
再来看一下

01:45:01.320 --> 01:45:01.920
现在

01:45:01.920 --> 01:45:02.920
如果说我在这呢

01:45:02.920 --> 01:45:04.120
也是传这个传说

01:45:04.120 --> 01:45:04.920
对象

01:45:06.120 --> 01:45:06.720
直接传对象

01:45:06.720 --> 01:45:07.120
对吧

01:45:07.120 --> 01:45:07.720
三四七

01:45:07.720 --> 01:45:08.220
是吧

01:45:08.220 --> 01:45:08.920
再来看一下

01:45:08.920 --> 01:45:09.720
这门这个DX

01:45:09.720 --> 01:45:10.920
是否可以被改变呢

01:45:12.960 --> 01:45:13.060
好

01:45:13.060 --> 01:45:13.460
所以算了

01:45:13.460 --> 01:45:14.160
来看一看

01:45:14.160 --> 01:45:14.760
放心

01:45:16.060 --> 01:45:16.860
怎么样是吧

01:45:16.860 --> 01:45:17.660
也可以被改变完

01:45:17.660 --> 01:45:18.060
对吧

01:45:18.060 --> 01:45:19.460
那为什么只行三次呢

01:45:19.460 --> 01:45:20.160
也很简单

01:45:20.160 --> 01:45:20.660
好

01:45:20.660 --> 01:45:22.560
因为没有必要执行那么多次

01:45:22.560 --> 01:45:23.160
等它碰到

01:45:23.160 --> 01:45:23.560
看

01:45:23.560 --> 01:45:24.560
让它执行

01:45:24.560 --> 01:45:26.860
当它一圈一圈在执行的时候

01:45:26.860 --> 01:45:28.160
当它一圈一圈在执行的时候

01:45:28.160 --> 01:45:29.360
只要碰到一次

01:45:29.360 --> 01:45:30.860
法律就是False的话

01:45:30.860 --> 01:45:32.260
后面就没有必要再执行了

01:45:32.260 --> 01:45:34.360
因为它是Edward像那个

01:45:34.360 --> 01:45:35.160
逻辑什么

01:45:35.160 --> 01:45:35.860
逻辑

01:45:35.860 --> 01:45:36.660
一样对吧

01:45:36.660 --> 01:45:37.260
一甲

01:45:37.260 --> 01:45:37.860
三个甲

01:45:37.860 --> 01:45:38.360
对吧

01:45:38.360 --> 01:45:38.960
到这

01:45:38.960 --> 01:45:40.960
能碰到出来是False了

01:45:40.960 --> 01:45:42.460
后面没有必要再去执行

01:45:42.460 --> 01:45:43.560
做不用工了

01:45:44.760 --> 01:45:45.060
OK

01:45:45.060 --> 01:45:46.960
那这是Edward的一个表现形式

01:45:46.960 --> 01:45:47.660
Edward的一个表现

01:45:47.660 --> 01:45:48.260
形式

01:45:48.260 --> 01:45:48.960
我相信

01:45:48.960 --> 01:45:50.160
这应该不是很难对吧

01:45:50.160 --> 01:45:51.260
不是很难

01:45:51.260 --> 01:45:52.360
那除了它想想

01:45:52.360 --> 01:45:53.260
那这个Edward

01:45:53.260 --> 01:45:54.560
是不是要去来写的话

01:45:54.560 --> 01:45:55.760
是也很简单

01:45:55.760 --> 01:45:56.160
对吧

01:46:00.070 --> 01:46:00.570
是这样的

01:46:00.570 --> 01:46:01.170
这个

01:46:01.170 --> 01:46:03.270
我今天所讲的这些方法的话

01:46:03.270 --> 01:46:05.070
还是ES5说的方法

01:46:05.070 --> 01:46:06.070
咱ES6之后

01:46:06.070 --> 01:46:08.370
还会去扣点一些新的一些数的方法

01:46:08.370 --> 01:46:09.770
咱们在ES6之后再来

01:46:09.770 --> 01:46:10.570
再来去讲

01:46:10.570 --> 01:46:11.370
先不要急

01:46:11.370 --> 01:46:12.270
先不要急

01:46:16.870 --> 01:46:18.070
你还为什么

01:46:18.170 --> 01:46:19.570
你要没分组的话

01:46:19.570 --> 01:46:20.270
到时候就这样

01:46:20.270 --> 01:46:21.670
会给你去分配一个组的

01:46:21.670 --> 01:46:22.870
你不用急

01:46:22.870 --> 01:46:23.970
可能是现在来的吧

01:46:24.970 --> 01:46:25.970
如果说你不是现在

01:46:25.970 --> 01:46:27.670
如果说你不是现在来的话

01:46:27.670 --> 01:46:28.770
你也考试是吧

01:46:28.770 --> 01:46:29.870
你还没有分分配组的话

01:46:29.870 --> 01:46:31.470
你给主要去聊一聊

01:46:31.470 --> 01:46:32.370
你跟他说一声

01:46:34.470 --> 01:46:35.270
给分配一下

01:46:35.270 --> 01:46:37.170
他们的雕像形式

01:46:37.170 --> 01:46:38.170
它们是比较像的

01:46:38.170 --> 01:46:38.770
实际上

01:46:38.770 --> 01:46:41.570
它们具体的用处是不一样的

01:46:41.570 --> 01:46:42.570
实际上是什么呢

01:46:42.570 --> 01:46:44.270
是这些东西

01:46:44.270 --> 01:46:45.770
我按照一定条件

01:46:45.770 --> 01:46:47.470
来顾虑出一些我需要的

01:46:48.670 --> 01:46:49.670
你就比如说

01:46:49.670 --> 01:46:50.570
这个你去58

01:46:50.570 --> 01:46:50.970
对吧

01:46:50.970 --> 01:46:52.370
你去58上去

01:46:52.370 --> 01:46:54.170
想去搜房子

01:46:54.170 --> 01:46:55.370
这个房子

01:46:55.370 --> 01:46:57.570
比如说你要去找两势一厅的

01:46:57.570 --> 01:47:00.770
完了一千五百到两千元之间的

01:47:00.770 --> 01:47:01.570
完了

01:47:01.570 --> 01:47:02.870
比如说是那种

01:47:02.870 --> 01:47:04.670
真的有那个半年付的

01:47:04.670 --> 01:47:05.170
是吧

01:47:05.170 --> 01:47:05.970
好了

01:47:05.970 --> 01:47:07.570
那如果是这样的情况下的话

01:47:07.570 --> 01:47:08.270
你用谁呀

01:47:08.270 --> 01:47:09.970
你当然是一定是

01:47:09.970 --> 01:47:11.570
拿filter来过绿了

01:47:13.170 --> 01:47:14.770
但是你会反映点

01:47:14.770 --> 01:47:16.370
filter, map, area, some

01:47:16.370 --> 01:47:17.370
包括redos也好

01:47:17.370 --> 01:47:19.070
他们都是要基于便利的

01:47:19.070 --> 01:47:20.070
你不便利的话

01:47:20.070 --> 01:47:20.670
你没有

01:47:20.670 --> 01:47:22.370
你不便利的话

01:47:22.370 --> 01:47:23.270
你没有怎么样

01:47:23.270 --> 01:47:24.570
你没有说是能完全

01:47:24.570 --> 01:47:26.870
这些点这样的一个高移动的

01:47:26.870 --> 01:47:29.070
发现实际实际上是相当于什么

01:47:29.070 --> 01:47:31.670
相当于filter, map, area, some

01:47:31.670 --> 01:47:34.570
给他们做出这样一个基础的一个铺垫

01:47:34.570 --> 01:47:35.770
filter, map, area

01:47:35.770 --> 01:47:37.570
这些东西是在它基本上

01:47:37.570 --> 01:47:38.270
加上了一点点

01:47:38.270 --> 01:47:39.570
额外的这样的一个不同的学习

01:47:39.570 --> 01:47:42.920
好

01:47:42.920 --> 01:47:43.120
好了

01:47:43.120 --> 01:47:44.020
报约卡

01:47:44.020 --> 01:47:44.720
再往那个

01:47:46.720 --> 01:47:48.820
咱下次讲数捉库展的时候的话

01:47:48.820 --> 01:47:52.520
我在这个公司下来去讲一讲

01:47:52.520 --> 01:47:55.220
今天是不是讲课还能听清楚

01:47:55.220 --> 01:47:55.620
对吧

01:47:55.620 --> 01:47:58.420
如果什么都听得到我说的

01:47:58.420 --> 01:48:02.340
它是什么吧

01:48:02.340 --> 01:48:03.440
可以吧

01:48:03.440 --> 01:48:05.740
就是稍微有点噪音这种的

01:48:05.740 --> 01:48:06.240
对吧

01:48:06.240 --> 01:48:08.240
大家从 here 先忍一忍吧

01:48:08.240 --> 01:48:09.140
先忍一忍

01:48:09.140 --> 01:48:09.840
反正之后呢

01:48:09.840 --> 01:48:10.640
下一课的话

01:48:10.640 --> 01:48:12.540
我去那个公司拿这个声卡

01:48:12.540 --> 01:48:13.640
我来去讲一讲

01:48:13.640 --> 01:48:14.040
对吧

01:48:17.640 --> 01:48:18.140
ok

01:48:18.140 --> 01:48:18.540
ok

01:48:18.540 --> 01:48:19.040
啊

01:48:21.440 --> 01:48:22.040
所以说呢

01:48:22.040 --> 01:48:23.440
你要回去啊

01:48:23.440 --> 01:48:24.940
去暂时来复习复议啊

01:48:24.940 --> 01:48:25.940
这一课我建议

01:48:25.940 --> 01:48:26.940
我建议你复习复议

01:48:26.940 --> 01:48:28.440
判断两面以上的

01:48:28.440 --> 01:48:29.240
行吧

01:48:29.240 --> 01:48:30.440
两面以上

01:48:30.440 --> 01:48:31.640
方许是它便利嘛

01:48:31.640 --> 01:48:31.940
对不对

01:48:31.940 --> 01:48:32.740
不是说

01:48:32.740 --> 01:48:33.340
好的

01:48:33.340 --> 01:48:34.040
我们下一课啊

01:48:34.040 --> 01:48:35.140
就会用用用到它

01:48:35.140 --> 01:48:35.740
就用到它

01:48:35.740 --> 01:48:37.140
就是我建议你下一课之前的话

01:48:37.140 --> 01:48:38.540
你再看看这个视频啊

01:48:38.540 --> 01:48:39.540
那下课我讲一个

01:48:39.540 --> 01:48:40.540
在断梦的时候的话

01:48:40.540 --> 01:48:41.840
咱就会把这些方法

01:48:41.840 --> 01:48:43.340
部分拿出来去用用

01:48:44.340 --> 01:48:45.040
啊

01:48:46.240 --> 01:48:47.740
车车的电脑是麦格啊

01:48:47.740 --> 01:48:48.140
哈哈

01:48:48.740 --> 01:48:50.540
我这是惠普的英文

01:48:51.240 --> 01:48:51.740
在一样

01:48:51.740 --> 01:48:52.540
还是麦格的声音

01:48:52.540 --> 01:48:53.340
它比较好一点

01:48:53.340 --> 01:48:53.840
啊

01:48:53.840 --> 01:48:54.740
这个承认不行

01:48:54.740 --> 01:48:55.340
嗯

01:48:55.340 --> 01:48:55.940
来看一下

01:48:55.940 --> 01:48:56.940
Irate怎么来实现啊

01:48:56.940 --> 01:48:57.840
Irate怎么来实现

01:48:59.240 --> 01:49:00.940
Irate要保持天命啊

01:49:00.940 --> 01:49:02.940
Irate要保持天命啊

01:49:03.540 --> 01:49:03.940
呃

01:49:03.940 --> 01:49:04.640
Irate要保持天命啊

01:49:04.640 --> 01:49:04.840
不是

01:49:04.840 --> 01:49:05.940
这里写的Mary

01:49:06.740 --> 01:49:07.240
一

01:49:07.640 --> 01:49:08.540
一为雅维

01:49:08.840 --> 01:49:09.640
一为

01:49:10.240 --> 01:49:10.540
一

01:49:10.540 --> 01:49:11.040
二为

01:49:11.040 --> 01:49:11.340
呃

01:49:11.340 --> 01:49:11.840
Merry

01:49:11.840 --> 01:49:12.340
啊

01:49:12.340 --> 01:49:13.140
它有一个函数

01:49:16.500 --> 01:49:17.000
啊

01:49:17.200 --> 01:49:18.000
Irate can't protect

01:49:18.000 --> 01:49:18.300
对吧

01:49:18.300 --> 01:49:19.400
来个Merry

01:49:19.400 --> 01:49:20.400
那在这里看一下

01:49:20.400 --> 01:49:22.200
在这里它也需要接受一个函数

01:49:22.200 --> 01:49:23.800
作为它这样的一个拆入的

01:49:24.300 --> 01:49:24.800
啊

01:49:24.800 --> 01:49:25.900
那头那号里啊

01:49:25.900 --> 01:49:26.600
它呢

01:49:26.600 --> 01:49:27.600
最后返回长

01:49:27.600 --> 01:49:28.900
不是一个西式组对吧

01:49:28.900 --> 01:49:29.540
而是一个处

01:49:29.540 --> 01:49:30.800
或者是一个False对吧

01:49:30.800 --> 01:49:32.700
就是说我先假定这个处屏吧

01:49:32.700 --> 01:49:32.900
啊

01:49:32.900 --> 01:49:34.300
先假定它是个处啊

01:49:34.300 --> 01:49:35.200
所以返回Flight

01:49:35.200 --> 01:49:35.400
啊

01:49:35.400 --> 01:49:36.500
那距离是不是处的话

01:49:36.500 --> 01:49:38.000
取于中间这些逻辑

01:49:38.000 --> 01:49:38.400
对吧

01:49:38.400 --> 01:49:40.000
有没有去改变它这样的一个值

01:49:40.100 --> 01:49:41.000
啊

01:49:41.000 --> 01:49:41.400
那

01:49:42.000 --> 01:49:43.200
比如说最后的调研形式

01:49:43.200 --> 01:49:44.000
应该什么样子呢

01:49:44.000 --> 01:49:45.000
哎 其实还是这样的对吧

01:49:45.000 --> 01:49:46.200
我给你可触C一下

01:49:46.200 --> 01:49:48.000
在这里给你可触微一下

01:49:48.000 --> 01:49:48.600
啊

01:49:48.600 --> 01:49:50.000
所以就是给你解开

01:49:50.000 --> 01:49:50.800
解开

01:49:50.800 --> 01:49:51.200
那这呢

01:49:51.200 --> 01:49:52.000
我不用Area

01:49:52.000 --> 01:49:52.900
用Merry

01:49:52.900 --> 01:49:54.000
Merry

01:49:55.200 --> 01:49:56.100
用Merry啊

01:49:56.100 --> 01:49:56.600
好

01:49:56.600 --> 01:49:57.600
用Merry的话

01:49:57.600 --> 01:49:58.400
咱来看一下

01:49:59.000 --> 01:49:59.700
那我在这

01:49:59.700 --> 01:50:00.300
啊

01:50:00.300 --> 01:50:02.100
那有时候使用的是这个方法对吧

01:50:02.100 --> 01:50:02.600
啊

01:50:02.600 --> 01:50:04.200
那我要做到我刚才所

01:50:04.200 --> 01:50:05.900
所完成的那些功能的话

01:50:05.900 --> 01:50:06.900
我可以怎么来做呢

01:50:06.900 --> 01:50:07.600
我在这

01:50:07.600 --> 01:50:08.200
好了

01:50:08.400 --> 01:50:08.900
啊

01:50:08.900 --> 01:50:09.800
首先你要怎么样

01:50:09.800 --> 01:50:10.500
你要尽可能的

01:50:10.500 --> 01:50:12.300
还是去变一下这个F1C

01:50:12.300 --> 01:50:12.800
对吧

01:50:12.800 --> 01:50:13.700
然后看一下

01:50:13.700 --> 01:50:15.100
这个F1C是否

01:50:15.300 --> 01:50:16.900
执行完全部都反而出对吧

01:50:16.900 --> 01:50:17.900
如果千万有说的话

01:50:17.900 --> 01:50:18.900
我这个Merry

01:50:18.900 --> 01:50:20.200
最后执行完才反而出

01:50:20.200 --> 01:50:21.800
如果说有一个反回False的话呢

01:50:21.800 --> 01:50:23.100
我就中止后面的一个

01:50:23.500 --> 01:50:23.900
执行

01:50:23.900 --> 01:50:24.300
对吧

01:50:24.300 --> 01:50:25.400
因为反回False可以啊

01:50:25.400 --> 01:50:26.100
所以在这的话

01:50:26.100 --> 01:50:27.200
我有问一个Line啊

01:50:27.200 --> 01:50:28.400
那等于一个Yes and Yes

01:50:28.700 --> 01:50:29.700
然后E&T也是

01:50:29.700 --> 01:50:30.300
在这的话

01:50:30.300 --> 01:50:31.300
通过一个False新环

01:50:31.400 --> 01:50:32.000
但是

01:50:32.800 --> 01:50:34.100
它是等于这个点啊

01:50:34.100 --> 01:50:35.100
就是像是这样

01:50:35.100 --> 01:50:36.700
我不知道它最后反回了

01:50:36.700 --> 01:50:37.700
受得还是False

01:50:37.700 --> 01:50:39.100
所以说我先假定它是一个

01:50:39.100 --> 01:50:39.700
是吧

01:50:39.700 --> 01:50:41.200
我不知道它要去用多少的圈呢

01:50:41.200 --> 01:50:42.100
我先让它怎么样

01:50:42.100 --> 01:50:43.800
执行最多的圈数

01:50:44.700 --> 01:50:45.100
对吧

01:50:45.100 --> 01:50:46.100
就是你在不知道

01:50:46.100 --> 01:50:47.100
先一下对吧

01:50:47.100 --> 01:50:48.300
你先假定一些事情

01:50:48.300 --> 01:50:49.700
或者说你先扣大些范围

01:50:49.700 --> 01:50:50.200
啊

01:50:50.200 --> 01:50:51.700
就是我们经常在编程中的

01:50:51.700 --> 01:50:52.800
使用一些色象

01:50:52.800 --> 01:50:53.300
啊

01:50:53.300 --> 01:50:54.200
那在这的话

01:50:54.200 --> 01:50:55.000
我们再往下来啊

01:50:55.000 --> 01:50:56.500
就是你在执行的时候啊

01:50:56.500 --> 01:50:57.200
我依旧怎么样

01:50:57.200 --> 01:50:58.600
依旧是F1C点Apply

01:50:58.600 --> 01:50:58.900
对吧

01:50:58.900 --> 01:50:59.800
APPLY

01:50:59.800 --> 01:51:00.400
啊

01:51:00.400 --> 01:51:01.900
这些我就不想再说了对吧

01:51:01.900 --> 01:51:03.300
有些说很多遍了对不对

01:51:03.300 --> 01:51:04.300
有些说他很多遍了

01:51:04.300 --> 01:51:06.000
我问了一个这个Yes啊

01:51:06.000 --> 01:51:06.800
有一个什么

01:51:06.800 --> 01:51:07.900
有一个Aguments

01:51:08.700 --> 01:51:09.300
一是吧

01:51:09.300 --> 01:51:10.300
我问一个Windows

01:51:12.980 --> 01:51:13.480
Windows

01:51:14.480 --> 01:51:15.280
好那在这的话

01:51:15.280 --> 01:51:15.880
我通过

01:51:17.080 --> 01:51:17.880
他来改变一下

01:51:17.880 --> 01:51:19.080
这个卡数学跟Dance

01:51:19.080 --> 01:51:20.680
然后在这

01:51:20.680 --> 01:51:21.380
比如说呢

01:51:21.380 --> 01:51:22.080
我写个

01:51:22.080 --> 01:51:22.880
Dance

01:51:22.880 --> 01:51:23.980
一个什么一个这样的一个

01:51:23.980 --> 01:51:25.180
i在这来个i

01:51:25.180 --> 01:51:26.380
就是来个this

01:51:26.380 --> 01:51:27.880
感觉去决定它这样的一个

01:51:27.880 --> 01:51:28.980
谁猜出谁啊

01:51:28.980 --> 01:51:29.780
那

01:51:29.780 --> 01:51:32.180
他返回只是出合False啊

01:51:32.180 --> 01:51:33.880
我怎么忘了去判断一下

01:51:33.880 --> 01:51:34.680
我们来讲

01:51:34.680 --> 01:51:35.680
就是如果

01:51:35.680 --> 01:51:37.880
就是如果你是一个False

01:51:38.780 --> 01:51:39.480
怎么办呢

01:51:40.080 --> 01:51:41.480
如果你是False的话OK

01:51:41.480 --> 01:51:42.780
但是我是碰到了

01:51:42.780 --> 01:51:43.780
一个疑似

01:51:43.780 --> 01:51:45.580
这个函数之间是False

01:51:45.580 --> 01:51:46.080
False对吧

01:51:46.080 --> 01:51:47.680
但有一个是False的话

01:51:47.680 --> 01:51:48.680
那我这个mei every

01:51:48.680 --> 01:51:49.680
最后就会怎么样

01:51:49.680 --> 01:51:51.180
应该返回这样的一个False

01:51:51.180 --> 01:51:51.580
是吧

01:51:51.580 --> 01:51:52.580
我要那终止掉

01:51:52.580 --> 01:51:53.880
你现在的一个他讯换呗

01:51:53.880 --> 01:51:54.980
就说我在这的话

01:51:54.980 --> 01:51:56.080
哎如果判定了

01:51:56.080 --> 01:51:57.180
你等于False的话

01:51:57.180 --> 01:51:58.580
我就让flag是False

01:51:58.880 --> 01:52:00.080
并且通过break怎么样

01:52:00.080 --> 01:52:02.080
终止后续一些的讯换啊

01:52:02.080 --> 01:52:02.880
然后返回去个值

01:52:02.880 --> 01:52:03.880
就是一个False

01:52:03.880 --> 01:52:05.180
啊那如果哈

01:52:05.180 --> 01:52:06.280
如果我这个所有的讯换

01:52:06.280 --> 01:52:07.280
全部都追上完了

01:52:07.280 --> 01:52:08.780
每一个函数全等于处

01:52:08.780 --> 01:52:10.780
你是不会进到False里面去的

01:52:10.780 --> 01:52:11.580
你flag怎么样

01:52:11.680 --> 01:52:13.880
就是你假定了一开始的处啊

01:52:13.880 --> 01:52:15.680
最后你反面的他也他也是个处

01:52:15.680 --> 01:52:16.680
怎么咱们看一下

01:52:16.980 --> 01:52:17.680
刷新色

01:52:18.980 --> 01:52:19.880
是不是一样的对吧

01:52:19.880 --> 01:52:20.980
一样的没问题吧

01:52:21.380 --> 01:52:22.780
啊这是一样的吧

01:52:23.980 --> 01:52:25.580
啊这个这个是一样的啊

01:52:26.180 --> 01:52:27.480
哈哈就说这个逻辑啊

01:52:27.480 --> 01:52:28.480
其实也很简单啊

01:52:28.480 --> 01:52:29.180
也没多难

01:52:29.180 --> 01:52:30.180
也没多难啊

01:52:30.380 --> 01:52:33.080
那那这个你有了这个mei every

01:52:33.080 --> 01:52:33.980
这样的技术以后的话

01:52:33.980 --> 01:52:35.280
你再来看sum的话对吧

01:52:35.280 --> 01:52:36.180
那只是

01:52:36.580 --> 01:52:37.480
so easy了对吧

01:52:37.480 --> 01:52:37.980
so easy

01:52:37.980 --> 01:52:39.680
一般我就不给你写了啊

01:52:39.680 --> 01:52:40.580
我先告诉你怎么来用

01:52:40.980 --> 01:52:42.280
怎么怎么怎么用

01:52:42.280 --> 01:52:42.880
反正说呢

01:52:42.880 --> 01:52:44.080
有马尔化作为一个小资源

01:52:44.080 --> 01:52:45.180
你不就自己来写沿上

01:52:45.380 --> 01:52:46.480
啊回去再来写沿上

01:52:46.480 --> 01:52:46.880
啊

01:52:47.080 --> 01:52:48.180
那么sum是什么意思呢

01:52:48.180 --> 01:52:48.880
sum就是

01:52:49.180 --> 01:52:49.780
呃

01:52:49.780 --> 01:52:52.080
他是一真则真同家裁为家

01:52:52.080 --> 01:52:52.480
对吧

01:52:52.480 --> 01:52:53.980
以后说比如说咱们这样

01:52:54.680 --> 01:52:55.480
啊咱们这样

01:52:55.780 --> 01:52:56.380
就是

01:52:58.080 --> 01:52:58.580
啊

01:52:58.780 --> 01:52:59.980
这样咱们这么做

01:53:00.380 --> 01:53:00.880
就是

01:53:01.180 --> 01:53:03.280
团队里必须有一个小人18岁的

01:53:03.280 --> 01:53:03.580
是吧

01:53:03.580 --> 01:53:05.180
说这些人里面必须有一个小人18

01:53:05.180 --> 01:53:05.880
18岁的

01:53:06.080 --> 01:53:07.480
如果有一个小人18岁

01:53:07.480 --> 01:53:08.080
怎么样

01:53:08.180 --> 01:53:09.380
就符合条件

01:53:09.480 --> 01:53:11.180
他说说我就用上了

01:53:11.480 --> 01:53:11.880
啊

01:53:12.780 --> 01:53:13.880
但如果说你多

01:53:14.180 --> 01:53:15.080
小人18岁的话

01:53:15.080 --> 01:53:16.580
自然你也符合条件对吧

01:53:16.580 --> 01:53:17.680
那我们这边什么呢

01:53:17.680 --> 01:53:19.880
是如果你有一个小人18岁

01:53:19.880 --> 01:53:20.580
就是真的

01:53:21.280 --> 01:53:21.580
啊

01:53:21.580 --> 01:53:23.180
除非你都大人18岁的话

01:53:23.180 --> 01:53:23.980
你才是家了

01:53:23.980 --> 01:53:25.880
我这个条件就变得很寬敞

01:53:25.980 --> 01:53:26.380
对吧

01:53:26.380 --> 01:53:27.380
那咱来看一下

01:53:27.380 --> 01:53:28.080
现在呢

01:53:28.280 --> 01:53:30.180
我们这么来这么来写啊

01:53:30.180 --> 01:53:32.480
我们有有一个人的年龄是16岁的吧

01:53:32.480 --> 01:53:33.880
小人1818岁

01:53:33.880 --> 01:53:35.580
那咱俩就是Flighter是啥呢

01:53:36.340 --> 01:53:37.620
就是Flighter他一定是个处

01:53:37.620 --> 01:53:38.380
咱来看一样

01:53:39.680 --> 01:53:40.680
你处对不对啊

01:53:40.680 --> 01:53:41.980
那如果说

01:53:41.980 --> 01:53:42.380
啊

01:53:42.380 --> 01:53:44.880
我这写什么小于16岁

01:53:44.880 --> 01:53:45.280
啊

01:53:45.380 --> 01:53:46.080
来看一下是吧

01:53:46.080 --> 01:53:47.380
只要有一个小人18岁的话

01:53:47.380 --> 01:53:48.480
我不就是处了对吧

01:53:48.480 --> 01:53:48.880
结果呢

01:53:48.880 --> 01:53:49.880
没有一个小人18岁

01:53:49.880 --> 01:53:50.580
然后才是啥

01:53:50.580 --> 01:53:51.480
就是False

01:53:51.780 --> 01:53:52.080
啊

01:53:52.080 --> 01:53:53.080
就这个sum的

01:53:53.080 --> 01:53:53.980
个儿位的话

01:53:53.980 --> 01:53:54.780
有点像什么呢

01:53:54.780 --> 01:53:56.380
有点像这个逻辑

01:53:56.880 --> 01:53:57.880
逻辑货

01:53:57.880 --> 01:53:58.280
对吧

01:53:58.280 --> 01:53:58.980
然后说

01:53:59.080 --> 01:53:59.580
一甲

01:53:59.580 --> 01:54:00.080
择甲

01:54:00.080 --> 01:54:00.980
同身才变真

01:54:00.980 --> 01:54:01.180
对吧

01:54:01.180 --> 01:54:03.080
这个是一真算真

01:54:03.080 --> 01:54:04.080
同甲才变真

01:54:04.080 --> 01:54:04.280
对吧

01:54:04.280 --> 01:54:05.180
说Evacum

01:54:05.180 --> 01:54:05.980
这个思想的话

01:54:05.980 --> 01:54:06.680
跟这个

01:54:07.280 --> 01:54:08.280
逻辑与和货

01:54:08.280 --> 01:54:09.180
是表象的

01:54:09.580 --> 01:54:10.380
那Evacum

01:54:10.380 --> 01:54:12.180
已经都帮你小于16岁

01:54:12.180 --> 01:54:13.180
sum的话

01:54:13.180 --> 01:54:13.880
你回去啊

01:54:13.880 --> 01:54:15.080
自己尝试一下

01:54:15.080 --> 01:54:16.680
先把我客户复习完以后的话

01:54:16.680 --> 01:54:17.380
你再怎么样

01:54:17.380 --> 01:54:18.080
你再去

01:54:18.880 --> 01:54:19.880
尝试去写一写

01:54:19.980 --> 01:54:20.680
去写一写

01:54:20.680 --> 01:54:21.380
啊

01:54:21.380 --> 01:54:22.180
有了我这个

01:54:22.180 --> 01:54:23.380
之前的一些技术的话

01:54:23.380 --> 01:54:24.380
你去来写它的话

01:54:24.380 --> 01:54:25.680
应该不成问题啊

01:54:25.680 --> 01:54:26.380
不成问题

01:54:27.180 --> 01:54:27.980
好啊

01:54:28.280 --> 01:54:29.380
那接下来的

01:54:29.380 --> 01:54:29.780
接下来的

01:54:29.780 --> 01:54:31.180
我来讲这个Reduce

01:54:31.180 --> 01:54:32.380
来讲这个特级Reduce

01:54:32.380 --> 01:54:32.980
啊

01:54:32.980 --> 01:54:34.880
那Reduce这一块啊

01:54:34.880 --> 01:54:36.380
Reduce和Reduce这样的

01:54:36.380 --> 01:54:38.880
其实Reduce就相当于Reduce Launch

01:54:38.880 --> 01:54:40.180
啊那Reduce Red

01:54:40.180 --> 01:54:41.180
是什么意思呢

01:54:41.480 --> 01:54:43.780
就是它的一个相反方向

01:54:43.780 --> 01:54:45.080
那Reduce Life

01:54:45.080 --> 01:54:47.080
就是相当于从左向右去变利

01:54:47.080 --> 01:54:48.780
把它进行一些来的操纵

01:54:48.780 --> 01:54:49.780
那Reduce Red

01:54:49.780 --> 01:54:51.280
是从右向左来变利

01:54:51.280 --> 01:54:51.880
所以说呢

01:54:51.880 --> 01:54:53.080
这个东西啊

01:54:53.080 --> 01:54:54.880
我讲一个Reduce就可以了

01:54:54.880 --> 01:54:55.880
把Reduce Red

01:54:55.880 --> 01:54:56.580
跟它是一模一样的

01:54:56.580 --> 01:54:57.480
是不是变了一个方向

01:54:57.480 --> 01:54:58.780
它是不一样的啊

01:54:59.080 --> 01:55:00.280
那它怎么来用的话

01:55:00.280 --> 01:55:01.880
一会我也可以给你写一个

01:55:01.880 --> 01:55:04.080
啊写个具体的一个案例

01:55:04.180 --> 01:55:05.880
啊具体这样的一个案例啊

01:55:05.880 --> 01:55:05.980
好

01:55:05.980 --> 01:55:07.980
咱们先看一下Reduce什么意思啊

01:55:08.980 --> 01:55:11.680
来看一下

01:55:12.480 --> 01:55:13.680
R1UZ1

01:55:13.680 --> 01:55:14.280
UZ

01:55:15.580 --> 01:55:16.880
这跟我有点像它接力一样

01:55:16.880 --> 01:55:18.380
有点像你接力啊

01:55:18.380 --> 01:55:19.680
那它呢

01:55:20.980 --> 01:55:23.080
它目的啥呢

01:55:23.080 --> 01:55:23.980
目的应该是这样的

01:55:23.980 --> 01:55:26.580
就是你需要传的一个初始值

01:55:26.580 --> 01:55:28.180
ITAL

01:55:28.680 --> 01:55:29.680
ITAL

01:55:29.780 --> 01:55:31.080
这个初始值呢

01:55:31.080 --> 01:55:34.780
啊要被进行以现在的操操作啊

01:55:34.780 --> 01:55:35.680
那好了

01:55:35.680 --> 01:55:37.280
那是基于谁的操作呢

01:55:37.280 --> 01:55:39.680
是基于这些数捉中语言素的

01:55:39.680 --> 01:55:40.980
啊数捉中的语言

01:55:40.980 --> 01:55:42.580
数捉中的一些语言素

01:55:42.580 --> 01:55:43.780
啊基于他们

01:55:43.780 --> 01:55:44.480
反正怎么呢

01:55:44.480 --> 01:55:45.780
去不断的去更改

01:55:45.780 --> 01:55:47.780
这样的initial manual

01:55:47.780 --> 01:55:48.780
啊initial manual

01:55:48.780 --> 01:55:49.580
咱们可以这样

01:55:49.580 --> 01:55:50.280
咱们可以这样

01:55:50.980 --> 01:55:51.580
呃

01:55:52.180 --> 01:55:53.580
我想去

01:55:54.280 --> 01:55:56.280
呃呃这样

01:55:56.280 --> 01:55:57.180
我们先来看一下

01:55:57.180 --> 01:55:57.980
它怎么来用的吧

01:55:57.980 --> 01:55:59.080
一个表演型是什么的吧

01:55:59.080 --> 01:56:00.380
啊我们最后再来去拿一个

01:56:00.380 --> 01:56:01.180
实习业务场

01:56:01.180 --> 01:56:02.480
我们我们

01:56:02.480 --> 01:56:03.380
哦就是

01:56:03.780 --> 01:56:04.680
帮我们出来去用用

01:56:04.680 --> 01:56:05.380
就是我们先来看一下

01:56:05.380 --> 01:56:05.980
它具体啊

01:56:05.980 --> 01:56:07.680
这个每个材料是什么意思

01:56:07.680 --> 01:56:08.180
行吧

01:56:08.180 --> 01:56:10.080
啊我们大概是表演型是什么样子的

01:56:10.080 --> 01:56:11.080
反正我们再讲

01:56:11.080 --> 01:56:12.180
你们给我尝一尝

01:56:12.180 --> 01:56:13.580
啊再看一下

01:56:13.580 --> 01:56:14.480
我通过prose啊

01:56:14.480 --> 01:56:15.080
prose

01:56:15.280 --> 01:56:16.580
我们要说它也是啊

01:56:16.580 --> 01:56:18.780
这些都是都是定在耳外点

01:56:18.780 --> 01:56:19.680
prouse type

01:56:19.680 --> 01:56:21.080
说这个数捉实例啊

01:56:21.080 --> 01:56:22.080
起码就可以去使用了

01:56:22.080 --> 01:56:23.280
pr,to,tip

01:56:23.880 --> 01:56:25.380
那换句话来讲讲话

01:56:25.380 --> 01:56:27.680
我今天讲的这些方方法啊

01:56:27.680 --> 01:56:28.480
好了比如说

01:56:29.280 --> 01:56:30.380
O,L,L,R,E

01:56:30.380 --> 01:56:31.280
它可以去使用吗

01:56:31.280 --> 01:56:33.180
比如说我这个O,L,L,R,E

01:56:33.180 --> 01:56:33.980
可以使用什么

01:56:33.980 --> 01:56:35.180
for each吗

01:56:35.680 --> 01:56:36.480
for filter吗

01:56:36.480 --> 01:56:37.380
可以去使用吗

01:56:37.380 --> 01:56:38.180
很明显

01:56:38.180 --> 01:56:39.180
是不可以去使用

01:56:39.180 --> 01:56:39.780
为啥

01:56:39.780 --> 01:56:41.180
因为这隔门

01:56:41.380 --> 01:56:42.880
反而就是一个类数组

01:56:43.180 --> 01:56:44.280
啊不是数组

01:56:44.280 --> 01:56:45.780
类数组是不一样的

01:56:45.780 --> 01:56:47.980
啊怎么把类数组变成数组呢

01:56:47.980 --> 01:56:49.080
也很简单对不对

01:56:49.080 --> 01:56:50.780
啊我可以从我slash一下对吧

01:56:50.780 --> 01:56:51.680
给它截一下

01:56:51.880 --> 01:56:52.380
啊

01:56:53.680 --> 01:56:55.180
我们下课再来去说

01:56:55.180 --> 01:56:55.580
起码

01:56:55.580 --> 01:56:56.780
啊下课再来去说

01:56:56.780 --> 01:56:58.180
如何把这个数组变成一个

01:56:58.180 --> 01:56:59.980
如何把这个类数组变成一个数组

01:56:59.980 --> 01:57:01.380
啊我们要知道一点

01:57:01.380 --> 01:57:02.180
经济的方法呢

01:57:02.180 --> 01:57:03.080
是数组可以使用的

01:57:03.080 --> 01:57:04.380
它类数它不能去使用的

01:57:04.380 --> 01:57:05.080
啊好

01:57:05.080 --> 01:57:06.380
我再来看这个reduce啊

01:57:06.380 --> 01:57:08.480
啊reduce也是它上面的方法

01:57:08.480 --> 01:57:09.980
把数组实际是可以使用的

01:57:09.980 --> 01:57:11.080
我通过present

01:57:11.680 --> 01:57:13.680
re点什么点这个reduce啊

01:57:13.680 --> 01:57:15.280
reduce在这执行啊

01:57:15.480 --> 01:57:16.980
啊我传递也是需要传递一个

01:57:16.980 --> 01:57:18.180
还是说一个参数

01:57:18.580 --> 01:57:21.080
那这个好像说做一个参数就不要了

01:57:21.080 --> 01:57:22.180
它里面有四个值

01:57:22.180 --> 01:57:23.080
它里面有四个值啊

01:57:23.380 --> 01:57:23.980
首先第一个时候呢

01:57:23.980 --> 01:57:25.580
我要叫做pray value

01:57:29.600 --> 01:57:30.700
第二个时候呢叫做一个

01:57:31.800 --> 01:57:33.400
sor value

01:57:34.400 --> 01:57:36.400
有时候它叫上一个值

01:57:36.400 --> 01:57:38.500
pray value是前一个的一个这样的一个前

01:57:38.500 --> 01:57:39.800
前这一词嘛对吧

01:57:39.800 --> 01:57:41.800
前一个值sor

01:57:41.800 --> 01:57:43.200
我可以叫做当前值的吧

01:57:43.200 --> 01:57:43.800
啊

01:57:43.800 --> 01:57:44.400
tarrant对吧

01:57:44.400 --> 01:57:45.400
当前值啊

01:57:45.400 --> 01:57:47.700
pray value代表前值

01:57:47.700 --> 01:57:49.300
它代表当前值

01:57:49.300 --> 01:57:50.200
其实它呢

01:57:50.200 --> 01:57:52.200
就跟那个我们之前那个le

01:57:52.200 --> 01:57:53.600
是一样的意思啊

01:57:53.600 --> 01:57:54.100
一样的意思

01:57:54.100 --> 01:57:54.700
后面呢

01:57:54.700 --> 01:57:56.300
index self

01:57:56.300 --> 01:57:56.700
啊

01:57:56.700 --> 01:57:58.800
就说它们三个的讯息

01:57:58.800 --> 01:57:59.700
其实对应的是啊

01:57:59.700 --> 01:58:01.300
其实对应的是

01:58:01.800 --> 01:58:02.500
le

01:58:02.500 --> 01:58:04.000
index和self

01:58:04.000 --> 01:58:04.500
啊

01:58:04.500 --> 01:58:05.300
那我可以问了

01:58:05.300 --> 01:58:06.900
那这个pray value是啥呀

01:58:06.900 --> 01:58:07.600
变极啊

01:58:07.600 --> 01:58:07.900
变极

01:58:07.900 --> 01:58:08.800
我们来看一下

01:58:08.800 --> 01:58:10.000
这个reduce啊

01:58:10.000 --> 01:58:11.500
也拥有第二个参数

01:58:11.500 --> 01:58:12.700
如果这个第二参数

01:58:12.700 --> 01:58:13.800
不是决定这个还是里面

01:58:13.800 --> 01:58:15.200
决定的disk它到底才是谁啊

01:58:15.900 --> 01:58:16.300
啊

01:58:16.300 --> 01:58:18.400
但它没有第三个参数

01:58:18.400 --> 01:58:19.100
如果你第三个参数

01:58:19.100 --> 01:58:20.600
你说能不能够决定

01:58:20.600 --> 01:58:22.600
它这个还是里面的disk它谁呢

01:58:22.600 --> 01:58:22.900
不等

01:58:22.900 --> 01:58:24.600
它不接受第三个参数

01:58:24.600 --> 01:58:26.600
那我们自己是可以写个maraduce

01:58:26.600 --> 01:58:28.000
让它结束第三个参数

01:58:28.000 --> 01:58:29.100
我们一会可以自己写

01:58:29.100 --> 01:58:29.900
啊

01:58:29.900 --> 01:58:30.400
那在这的话

01:58:30.400 --> 01:58:31.200
咱们来看一下

01:58:32.300 --> 01:58:33.000
啊

01:58:33.000 --> 01:58:33.800
比如说

01:58:33.800 --> 01:58:35.200
我这里面这个参数

01:58:35.200 --> 01:58:37.800
我给的叫做叫做initial bad value

01:58:37.800 --> 01:58:39.200
N-I-T-I-L

01:58:39.200 --> 01:58:40.700
是个处置化一个指的意思啊

01:58:40.700 --> 01:58:42.400
initial value

01:58:42.400 --> 01:58:42.800
啊

01:58:42.800 --> 01:58:43.900
那你不能这么说啊

01:58:43.900 --> 01:58:44.700
你这么说的话

01:58:44.700 --> 01:58:46.300
它为这个长远会不会过了

01:58:46.300 --> 01:58:47.800
它列成一个这样的一个变量

01:58:47.800 --> 01:58:48.300
它这个变量

01:58:48.300 --> 01:58:48.900
你今天没有声明

01:58:48.900 --> 01:58:49.800
它会爆醋啊

01:58:49.800 --> 01:58:50.800
比如我这样啊

01:58:50.800 --> 01:58:51.600
我的initial value

01:58:51.600 --> 01:58:52.600
只是代表啊

01:58:52.600 --> 01:58:53.500
是什么意思啊

01:58:53.500 --> 01:58:55.700
所以我往这传的是一个处置化的一个指

01:58:55.700 --> 01:58:56.700
比如我在这传一下

01:58:56.700 --> 01:58:57.600
我也都没接

01:58:57.600 --> 01:58:59.500
等 等 等 等一下啊

01:58:59.500 --> 01:59:00.400
好了我这写一个

01:59:01.400 --> 01:59:02.500
叫做一个比如说

01:59:02.500 --> 01:59:04.000
Az是一个0

01:59:04.000 --> 01:59:04.400
好了

01:59:04.400 --> 01:59:05.400
那我在这

01:59:05.400 --> 01:59:06.400
来一个国别节

01:59:07.800 --> 01:59:08.300
好

01:59:09.100 --> 01:59:09.700
好

01:59:09.700 --> 01:59:10.900
那比如说

01:59:10.900 --> 01:59:12.500
当我是掉到这个reduce的时候

01:59:12.500 --> 01:59:14.500
首先这个方向也会根据

01:59:14.500 --> 01:59:15.900
就是属于元素的个数

01:59:15.900 --> 01:59:17.500
只能相当次数啊

01:59:17.500 --> 01:59:19.100
那每次执行的时候呢

01:59:19.100 --> 01:59:19.500
啊

01:59:19.500 --> 01:59:20.700
这个四个值分明是啥呢

01:59:20.700 --> 01:59:21.100
对吧

01:59:21.100 --> 01:59:22.600
后面三个值很好说对吧

01:59:22.600 --> 01:59:23.500
就是数组

01:59:23.500 --> 01:59:25.000
就是那一次那个元素

01:59:25.000 --> 01:59:26.300
所以以及这样的一个

01:59:26.300 --> 01:59:27.000
自己啊

01:59:27.000 --> 01:59:28.400
自己这样的一个双组的值

01:59:28.400 --> 01:59:29.000
对吧

01:59:29.000 --> 01:59:29.800
那它是啥呢

01:59:29.800 --> 01:59:30.300
好了

01:59:30.300 --> 01:59:31.100
那咱看一下

01:59:31.200 --> 01:59:32.200
这个韩数啊

01:59:32.200 --> 01:59:33.800
它在执行第一次的时候

01:59:33.800 --> 01:59:34.200
啊

01:59:34.200 --> 01:59:35.700
这个prime value

01:59:35.700 --> 01:59:37.260
就是你在这放的这种

01:59:37.260 --> 01:59:37.900
初始值

01:59:37.900 --> 01:59:40.000
以那种value这种初始值

01:59:40.000 --> 01:59:40.400
比如说

01:59:40.400 --> 01:59:41.000
咱来看一下

01:59:41.000 --> 01:59:44.340
我在这说出一次

01:59:44.340 --> 01:59:45.040
pr1v

01:59:45.040 --> 01:59:45.640
啊

01:59:45.640 --> 01:59:47.140
pr1v vle

01:59:47.140 --> 01:59:48.040
a

01:59:48.040 --> 01:59:49.240
le

01:59:49.240 --> 01:59:49.640
好了

01:59:49.640 --> 01:59:51.640
s0vle

01:59:51.640 --> 01:59:52.440
index

01:59:52.440 --> 01:59:52.840
cf

01:59:52.840 --> 01:59:53.640
咱来看一下

01:59:53.640 --> 01:59:54.440
咱来看一下

01:59:54.440 --> 01:59:55.340
小心一次啊

01:59:55.340 --> 01:59:56.140
说出

01:59:56.140 --> 01:59:56.940
我们不看

01:59:56.940 --> 01:59:57.340
后面啊

01:59:57.340 --> 01:59:58.540
我们只看第一个啊

01:59:58.540 --> 01:59:59.640
大家看这啊

01:59:59.640 --> 02:00:00.240
没发现呢

02:00:00.240 --> 02:00:01.540
这个第一个

02:00:01.540 --> 02:00:02.640
第一次在只有这个

