WEBVTT

00:00.000 --> 00:06.000
哈喽啊 这一集我们来说一个H5的新年属性啊 叫做History

00:06.000 --> 00:15.000
啊History 嗯 替这个History有很多人就疑惑啊 其实有很多人都不太明白这个History真正的用在什么地方啊

00:16.000 --> 00:22.000
我们说一种场景啊 这个我喊History居然把Siri给喊出来了哈

00:22.000 --> 00:28.000
呃 我们说 要是有一个A页面啊 然后呢我给它跳转到B页面

00:30.000 --> 00:35.000
啊 跳转到B页面 再跳转到C页面啊 那你说我现在是在C页面是吧

00:35.000 --> 00:39.000
我还是按照返回 我返回到B页面 无可厚非 是吧

00:39.000 --> 00:43.000
比如说呢 我现在搜一个百度啊 我就在这搜一个History

00:43.000 --> 00:50.000
嗯 我在这搜一个History 嗯 你会发现它这块是有这个啊 翻页的是吧

00:50.000 --> 00:54.000
我1.2 那就到了第二页啊 1.3就到了第三页

00:54.000 --> 00:57.000
然后1.4呢 就到了第四页 是吧

00:57.000 --> 01:04.000
哎 那当我点这个返回的时候 回退

01:04.000 --> 01:08.000
啊 那它就会后退到第三页 再后退到第二页啊

01:08.000 --> 01:13.000
再点前进 它就会前进到第三页 再前进到第四页

01:13.000 --> 01:16.000
是吧 哎 一个这样的一个过程啊

01:16.000 --> 01:21.000
那你说要是每一页都是单独的页 单独的页嘛

01:21.000 --> 01:25.000
那我们其实也就顶多就是来承受一下网络的开销就可以了

01:25.000 --> 01:27.000
但是有的时候往往不是这样的

01:27.000 --> 01:32.000
我们现在经常是怎么样的 我们经常为了这个网页的性能啊

01:32.000 --> 01:34.000
为了网页的性能

01:34.000 --> 01:38.000
然后我们会做一些什么事呢 就是单页面操作

01:38.000 --> 01:40.000
单页面操作

01:40.000 --> 01:43.000
比如说有一些功能啊 我们尽量都在单页面完成

01:43.000 --> 01:45.000
比如说搜索啊 比如说搜索

01:45.000 --> 01:47.000
我举个例子啊 我举个例子

01:47.000 --> 01:51.000
我说写个input的框啊 写个input的框

01:51.000 --> 01:54.000
它还不能等于txt的

01:54.000 --> 01:57.000
我的id啊 叫search

01:57.000 --> 02:01.000
然后呢 我在旁边呢 建一个button

02:01.000 --> 02:05.000
button啊 解决了就搜索

02:05.000 --> 02:07.000
onclick

02:07.000 --> 02:11.000
等于一个search吧

02:11.000 --> 02:15.660
来 等于一个search

02:17.660 --> 02:22.480
那我们一个scrave的啊 我给它写在上面这会

02:23.480 --> 02:26.480
scrave的啊 我写个search方法

02:26.480 --> 02:30.480
我需要通过一些东西来搜索啊

02:30.480 --> 02:32.480
搜索什么呢

02:34.480 --> 02:37.480
搜索啊 把这个属性获取出来吧

02:37.480 --> 02:39.480
get element by id

02:39.480 --> 02:41.480
这个search

02:41.480 --> 02:46.260
的value

02:46.260 --> 02:49.260
那现在这个value就是我这个input的框里要搜索的东西是吧

02:49.260 --> 02:52.260
我们默认给出一些东西

02:52.260 --> 02:54.260
contact

02:54.260 --> 02:56.260
data

02:58.260 --> 03:01.260
我们默认的给出一些data

03:01.260 --> 03:04.260
这个data我希望它是一个数组

03:04.260 --> 03:07.260
我希望它是一个数组

03:07.260 --> 03:10.260
数组里面有一些名字

03:10.260 --> 03:12.260
名字比如说html

03:12.260 --> 03:17.920
再写一个对象 内姆

03:17.920 --> 03:19.920
css

03:19.920 --> 03:24.580
内姆

03:24.580 --> 03:28.850
gs

03:28.850 --> 03:31.850
然后内姆

03:31.850 --> 03:35.540
panda

03:35.540 --> 03:37.540
内姆

03:37.540 --> 03:39.540
瞪哥

03:39.540 --> 03:42.540
假设说就这五个吧 假设说就像这五个

03:42.540 --> 03:45.540
我们要搜索这个五个 在这五个里面搜索

03:45.540 --> 03:48.540
假设说它搜索了一个gs

03:48.540 --> 03:51.540
我们就给它展现这个 搜索了css 我就给它展现这个

03:51.540 --> 03:53.540
假设是这样的

03:53.540 --> 03:56.540
那我就要便利是吧 就要便利这个是吧

03:56.540 --> 03:59.860
便利这个

03:59.860 --> 04:02.860
便利这个循环 是吧 便利这个循环

04:02.860 --> 04:05.860
我希望什么呢

04:05.860 --> 04:08.860
我希望能够得到一个结果

04:08.860 --> 04:10.860
我希望能够得到一个结果

04:10.860 --> 04:12.860
or一个result

04:12.860 --> 04:15.860
等于这个data的filter

04:15.860 --> 04:19.860
这个filter里面传了一个

04:19.860 --> 04:23.860
传了一个这个东西是吧

04:23.860 --> 04:26.860
然后如果

04:26.860 --> 04:29.860
obj的 学过这个filter吧

04:29.860 --> 04:31.860
应该都学过这个filter 是吧 过滤 是吧

04:31.860 --> 04:33.860
obj的name

04:33.860 --> 04:35.860
这什么呢

04:35.860 --> 04:39.860
obj的name 这个index of

04:39.860 --> 04:42.860
index of这个value

04:42.860 --> 04:44.860
就是它存在它 存在它怎么样

04:44.860 --> 04:46.860
就是大于负一 是吧 它就会有个位置

04:46.860 --> 04:48.860
那我就return

04:48.860 --> 04:53.680
我就return这个

04:53.680 --> 04:57.680
return这个obj

04:57.680 --> 04:59.680
这样的话我这个result是不是就是个数组了

04:59.680 --> 05:01.680
是不是我这个result就是个数组了

05:01.680 --> 05:03.680
然后我再写个方法

05:03.680 --> 05:06.680
我要把查讯出来的内容

05:06.680 --> 05:08.680
渲染到这个div里去

05:08.680 --> 05:10.680
渲染出来到这个div里去

05:10.680 --> 05:12.680
我们这个要渲染的内容

05:12.680 --> 05:14.680
RenderData

05:14.680 --> 05:19.400
RenderData

05:19.400 --> 05:22.400
它会是一个数组 是吧 它会是一个数组

05:22.400 --> 05:24.400
那我为了一个内容

05:24.400 --> 05:27.400
context content

05:27.400 --> 05:29.400
这个空瘦

05:29.400 --> 05:30.400
这个空瘦

05:30.400 --> 05:32.400
然后我就往里面拼

05:33.400 --> 05:35.400
为了一个i等于0

05:35.400 --> 05:37.400
i小于

05:37.400 --> 05:41.100
i小于

05:41.100 --> 05:43.100
RenderData的lens

05:43.100 --> 05:45.100
然后i++

05:45.100 --> 05:48.100
然后我这个content

05:48.100 --> 05:50.100
加等于

05:50.100 --> 05:52.100
div

05:52.100 --> 05:54.100
加

05:54.100 --> 05:56.100
RenderData

05:56.100 --> 05:58.100
i的name

05:58.100 --> 06:02.240
加

06:02.240 --> 06:03.240
反省上div

06:03.240 --> 06:05.240
这样Render了之后

06:05.240 --> 06:07.240
我这个content的内容就是

06:07.240 --> 06:09.240
我搜索出来的结果了

06:09.240 --> 06:11.240
然后我再给它添进去 是吧

06:11.240 --> 06:14.240
DocumentGateElementByD

06:14.240 --> 06:16.240
这个my

06:16.240 --> 06:18.240
InnerHTML

06:18.240 --> 06:21.550
等于content

06:21.550 --> 06:24.550
那我在这个上面我查出来结果了之后

06:24.550 --> 06:25.550
就Render

06:25.550 --> 06:27.550
这个result就可以了 是吧

06:28.550 --> 06:30.550
这样我就简单的写完了这个

06:30.550 --> 06:31.550
印面

06:34.550 --> 06:36.550
比如说我搜一个pander

06:36.550 --> 06:39.550
他就把pander给我写在这里 是吧

06:39.550 --> 06:40.550
那我这个正常呢

06:40.550 --> 06:41.550
我要放在最后的时候

06:41.550 --> 06:43.550
我来一个sqrt

06:43.550 --> 06:50.840
RenderData

06:50.840 --> 06:52.840
正常是我有这些东西的

06:52.840 --> 06:55.840
然后我搜一个gs

06:55.840 --> 06:57.840
能搜出来gs 是吧

06:57.840 --> 07:00.840
然后我搜一个pander

07:00.840 --> 07:02.840
也能搜出来pander 是吧

07:03.840 --> 07:05.840
但是你发现

07:05.840 --> 07:07.840
我没有回退这个功能

07:07.840 --> 07:09.840
我没有回退这个功能

07:09.840 --> 07:11.840
我没有回退这个功能

07:11.840 --> 07:13.840
我想知道搜pander之前

07:13.840 --> 07:15.840
我搜的结果怎么办

07:15.840 --> 07:17.840
我搜我回不去

07:17.840 --> 07:19.840
我回不去

07:19.840 --> 07:20.840
我根本就回不去

07:20.840 --> 07:22.840
所以我们希望

07:22.840 --> 07:24.840
这种叫做什么呢

07:24.840 --> 07:26.840
这种叫做单页面应用

07:26.840 --> 07:28.840
我们进到一个页面里了之后

07:28.840 --> 07:29.840
我们跟页面进行交互

07:29.840 --> 07:31.840
这个页面会出现了很多个状态

07:31.840 --> 07:32.840
这个页面里

07:32.840 --> 07:34.840
它就会出现很多个状态

07:34.840 --> 07:36.840
所以我们就觉得

07:36.840 --> 07:38.840
这些页面的状态

07:38.840 --> 07:39.840
我们也应该记一下

07:39.840 --> 07:40.840
要么用户想查一下

07:40.840 --> 07:41.840
上一个状态

07:41.840 --> 07:42.840
我们都不知道

07:42.840 --> 07:44.840
上一个状态是啥 是吧

07:44.840 --> 07:45.840
它不像跳转页面

07:45.840 --> 07:46.840
它跳转页面

07:46.840 --> 07:48.840
我这个上一页

07:48.840 --> 07:49.840
我这个一退

07:49.840 --> 07:50.840
我就可以跳到上一个页面了

07:50.840 --> 07:51.840
但是我这里面

07:51.840 --> 07:53.840
也没有跳转页面 是吧

07:53.840 --> 07:55.840
都根本就没有新的页面的产生

07:55.840 --> 07:57.840
是我这个页面里的gs在操作

07:57.840 --> 08:00.840
所以我们希望

08:00.840 --> 08:04.840
我们希望在里面加入一些东西

08:04.840 --> 08:07.840
能够记录住我页面的每一个状态

08:07.840 --> 08:08.840
你说我里面

08:08.840 --> 08:11.840
每一个页面的状态是由谁来决定的

08:11.840 --> 08:14.840
是不是由搜索的内容来决定的

08:14.840 --> 08:17.840
是不是由搜索的内容来决定的

08:17.840 --> 08:19.840
由搜索的内容来决定的

08:19.840 --> 08:21.840
我是不是确定了一个搜索的内容

08:21.840 --> 08:24.840
我基本上就能确定页面的内容

08:24.840 --> 08:25.840
对吧

08:25.840 --> 08:27.840
我是不是确定了搜索的内容

08:27.840 --> 08:29.840
就能确定一个页面的内容

08:29.840 --> 08:32.840
这个时候我们就适合用History

08:32.840 --> 08:33.840
适合用History

08:33.840 --> 08:36.840
之前我大家也学过一些History的方法 是吧

08:36.840 --> 08:41.840
比如说History的Bike

08:41.840 --> 08:46.840
如果你们没有学明白的话

08:46.840 --> 08:48.840
再回去看一下之前的视频

08:48.840 --> 08:49.840
History的Bike的话

08:49.840 --> 08:51.840
它就会查之前的页面 是吧

08:51.840 --> 08:52.840
我再调一下

08:52.840 --> 08:53.840
它就会再返回一个

08:53.840 --> 08:55.840
就变到第一样

08:55.840 --> 08:59.840
然后还有History的Forward 是吧

08:59.840 --> 09:01.840
它就会到下一个页面

09:01.840 --> 09:02.840
就到第二页了

09:02.840 --> 09:03.840
再Forward

09:03.840 --> 09:04.840
就到第三页了

09:04.840 --> 09:05.840
再Forward

09:05.840 --> 09:07.840
就到第四页了

09:07.840 --> 09:08.840
是吧

09:08.840 --> 09:10.840
因为它一直有历史记录

09:10.840 --> 09:12.840
因为一直有历史记录

09:12.840 --> 09:13.840
所以我们也希望

09:13.840 --> 09:15.840
把我们的每一个查询状态

09:15.840 --> 09:17.840
插入到历史记录里

09:17.840 --> 09:19.840
我们把每一个查询状态

09:19.840 --> 09:21.840
也插入到历史记录里

09:21.840 --> 09:23.840
所以我们在哪儿插入呢

09:23.840 --> 09:25.840
我们在Render之后

09:25.840 --> 09:26.840
我们在Render之后

09:26.840 --> 09:28.840
给History增加一个状态

09:28.840 --> 09:29.840
怎么

09:29.840 --> 09:30.840
History是干啥

09:30.840 --> 09:31.840
像是个对战似的 是吧

09:31.840 --> 09:33.840
我们给它Push一个State

09:33.840 --> 09:35.840
Push一个State

09:35.840 --> 09:39.840
然后它会有三个参数

09:39.840 --> 09:42.840
第一个参数是一堆

09:42.840 --> 09:45.840
是你要揣入的状态

09:45.840 --> 09:47.840
是这个意

09:47.840 --> 09:50.840
标志着当前页面这种样式的状态

09:50.840 --> 09:51.840
你说它有什么来决定的

09:51.840 --> 09:53.840
它是由Panel来决定的 是吧

09:53.840 --> 09:54.840
它就由Panel来决定

09:54.840 --> 09:56.840
我们就可以把Panel来记录下来 是吧

09:56.840 --> 09:59.840
比如说Value

09:59.840 --> 10:01.840
Value我们设成什么

10:01.840 --> 10:04.840
设成Value 是吧

10:04.840 --> 10:07.840
比如说这个设设算个什么呢

10:07.840 --> 10:09.840
Input的Value

10:09.840 --> 10:10.840
Input的Value

10:10.840 --> 10:14.840
是我们现在拿到的Value

10:14.840 --> 10:16.840
第二个我们通常就设这个空

10:16.840 --> 10:18.840
因为第二个我们也不成用

10:18.840 --> 10:20.840
为什么说第二个通常设成空呢

10:20.840 --> 10:23.840
因为没有任何一个浏览器支持这个title

10:23.840 --> 10:25.840
第二个这段时间叫title

10:25.840 --> 10:26.840
因为没有浏览器支持

10:26.840 --> 10:29.840
所以我们就不管这个

10:29.840 --> 10:31.840
第三个呢

10:31.840 --> 10:35.840
就是我们既然能给它写到回退里面去

10:35.840 --> 10:36.840
那就要怎么样的

10:36.840 --> 10:38.840
我们就要给它一个URL

10:38.840 --> 10:40.840
我们就要给它定一个URL

10:40.840 --> 10:41.840
我们给它定一个URL

10:41.840 --> 10:43.840
给它定一个什么呢

10:43.840 --> 10:45.840
定一个锦号

10:45.840 --> 10:46.840
这个谋点

10:46.840 --> 10:47.840
给它一个谋点

10:47.840 --> 10:49.840
给它定一个锦号Value

10:49.840 --> 10:50.840
好吧

10:50.840 --> 10:52.840
这样的话我们就把一个状态给推进去

10:52.840 --> 10:55.840
我们就把一个状态给推进去

10:55.840 --> 10:56.840
看啊

10:56.840 --> 10:58.840
我这回在我把这一边关了

10:58.840 --> 11:02.410
我再来一下

11:02.410 --> 11:05.410
我搜一个GS

11:05.410 --> 11:06.410
看到了吗

11:06.410 --> 11:08.410
最后出来个锦号GS

11:08.410 --> 11:09.410
看到了吗

11:09.410 --> 11:11.410
我在倒退

11:11.410 --> 11:12.410
我在倒退

11:12.410 --> 11:14.410
我倒退了之后你会发现

11:14.410 --> 11:15.410
我倒退了之后发现

11:15.410 --> 11:17.410
没有内容

11:17.410 --> 11:19.410
我倒退了之后没有内容

11:19.410 --> 11:21.410
为什么

11:23.410 --> 11:25.410
因为你倒退了之后

11:25.410 --> 11:27.410
它也是一个事件

11:27.410 --> 11:29.410
你倒退了之后它也是一个事件

11:29.410 --> 11:31.410
它这个事件我就得执行

11:31.410 --> 11:32.410
是吧

11:32.410 --> 11:34.410
这个事件我怎么才能执行呢

11:34.410 --> 11:36.410
我怎么才能执行呢

11:40.410 --> 11:42.410
它会

11:42.410 --> 11:45.410
它会触发一个事件的产生

11:45.410 --> 11:47.410
它会触发一个事件的产生

11:47.410 --> 11:49.410
这个事件就叫做Windows

11:49.410 --> 11:50.410
我先给它添加

11:50.410 --> 11:52.410
AdEventLessness

11:52.410 --> 11:54.410
这要啥呢

11:54.410 --> 11:56.410
是叫PoPosDate

11:56.410 --> 12:00.550
拿出一个状态是吧

12:00.550 --> 12:02.550
拿出一个状态

12:02.550 --> 12:04.550
它会传进去一个E

12:04.550 --> 12:06.550
它会传进去一个E

12:06.550 --> 12:08.550
那我们先来看一下

12:08.550 --> 12:13.530
这个E是什么

12:13.530 --> 12:15.530
我们先来看一下这个E是什么

12:15.530 --> 12:16.530
我们先不着急

12:16.530 --> 12:18.530
先别着急

12:18.530 --> 12:20.530
我们搜一个GS

12:21.530 --> 12:22.530
我返回

12:22.530 --> 12:24.530
我把控制台打开

12:25.530 --> 12:26.530
我返回

12:26.530 --> 12:28.530
它会打出来一个PoPosDate

12:28.530 --> 12:29.530
是吧

12:29.530 --> 12:30.530
它这个是个事件是吧

12:30.530 --> 12:32.530
这个里面有一个状态

12:32.530 --> 12:34.530
这里面有一些值

12:34.530 --> 12:36.530
这里面有一些值

12:36.530 --> 12:38.530
这就是我们

12:40.530 --> 12:42.530
存进去的值

12:42.530 --> 12:45.530
这就是我们存进去的一些内容

12:45.530 --> 12:47.530
存进去的一些内容

12:47.530 --> 12:49.530
它其中有一个就是State

12:49.530 --> 12:51.530
它这个State里面是个空

12:51.530 --> 12:54.530
我看这个State里面为什么是个空

12:56.970 --> 12:59.970
正常的是它给我推进去了一个

13:05.900 --> 13:08.280
我看一下

13:08.280 --> 13:10.280
存一个GS

13:12.720 --> 13:14.720
这个时候我看一下History

13:14.720 --> 13:17.720
History的Lands一共有三个

13:18.720 --> 13:19.720
它这个

13:20.720 --> 13:22.720
Lands一共有长的有三个

13:22.720 --> 13:24.720
第一个是Y6是GS

13:24.720 --> 13:26.720
Y6是GS

13:27.720 --> 13:28.720
为什么我最开始

13:28.720 --> 13:29.720
我退不回去

13:29.720 --> 13:30.720
为什么我退不回去

13:30.720 --> 13:33.720
因为我没有任何时候去记录

13:33.720 --> 13:34.720
第一个状态是吧

13:34.720 --> 13:36.720
我并没有记录第一个状态

13:36.720 --> 13:37.720
我并没有记录第一个状态

13:37.720 --> 13:38.720
第一个状态的时候

13:38.720 --> 13:40.720
相当于Staters为空

13:40.720 --> 13:42.720
相当于Staters为空

13:43.720 --> 13:45.720
Staters为空就是什么都不查

13:45.720 --> 13:47.720
就相当于是什么都不查

13:47.720 --> 13:48.720
我看看

13:48.720 --> 13:49.720
我先这样

13:49.720 --> 13:50.720
我搜一个GS

13:50.720 --> 13:53.720
然后我再搜一个Panda

13:54.720 --> 13:56.720
这个时候

13:56.720 --> 13:57.720
你看我点一下回退

13:58.720 --> 13:59.720
点一下回退

13:59.720 --> 14:01.720
这个时候Staters是不是就有内容了

14:02.720 --> 14:03.720
是吧

14:03.720 --> 14:04.720
因为我最最开始的时候

14:04.720 --> 14:05.720
我并没有记录是吧

14:05.720 --> 14:06.720
我只有GS了之后

14:06.720 --> 14:08.720
我把GS存进去了

14:08.720 --> 14:09.720
然后Panda的时候

14:09.720 --> 14:10.720
我把Panda存进去了

14:10.720 --> 14:11.720
是吧

14:11.720 --> 14:12.720
然后我点Panda之后

14:12.720 --> 14:13.720
我点一个回退的话

14:13.720 --> 14:14.720
它回退到的是

14:15.720 --> 14:16.720
Y6是GS

14:16.720 --> 14:17.720
我点前进

14:17.720 --> 14:18.720
前进的话

14:18.720 --> 14:19.720
这个位置

14:20.720 --> 14:22.720
哪去了

14:22.720 --> 14:23.720
State

14:23.720 --> 14:24.720
是不是应该是Panda

14:24.720 --> 14:25.720
是吧

14:27.720 --> 14:28.720
所以说我要在这个里面

14:28.720 --> 14:30.720
根据不同的值

14:32.720 --> 14:33.720
根据不同的值

14:33.720 --> 14:35.720
把这个界面进行还原

14:38.720 --> 14:39.720
根据不同的值

14:39.720 --> 14:41.720
把这个界面进行还原

14:41.720 --> 14:43.720
首先我先还原这个

14:44.720 --> 14:45.720
营铺的块

14:47.720 --> 14:48.720
我先还原这个营铺的块

14:50.720 --> 14:51.720
是吧

14:51.720 --> 14:53.720
它的Y6等于E的State的Y6

14:54.720 --> 14:59.570
它的Y6等于E的State的Y6

15:00.570 --> 15:01.570
然后呢

15:02.570 --> 15:03.570
然后呢

15:03.570 --> 15:05.570
我在出发设施方法是吧

15:05.570 --> 15:09.070
然后我再出发一个设施方法

15:09.070 --> 15:10.070
就OK了是吧

15:12.070 --> 15:13.070
这样的话

15:13.070 --> 15:15.070
我们就回到了这个

15:15.070 --> 15:16.070
这个时代

15:16.070 --> 15:17.070
这个时候

15:17.070 --> 15:18.070
其实我们如果

15:18.070 --> 15:19.070
出发了设施方法的话

15:19.070 --> 15:20.070
这个黑色就又显去一个

15:20.070 --> 15:21.070
实际上我这块

15:21.070 --> 15:23.070
不应该出发设施

15:23.070 --> 15:24.070
我把这块应该粘一下

15:27.070 --> 15:28.070
让它

15:28.070 --> 15:29.070
把这块内容填满

15:29.070 --> 15:30.070
然后呢

15:30.070 --> 15:31.070
把这个渲染进去

15:31.070 --> 15:32.070
把内容填满

15:32.070 --> 15:33.070
然后让给它渲染进去

15:33.070 --> 15:34.070
把这个东西过滤出来

15:34.070 --> 15:35.070
然后渲染进去

15:35.070 --> 15:36.070
过滤出来渲染进去

15:36.070 --> 15:37.070
我们看一下

15:37.070 --> 15:38.070
会不会是这个效果

15:42.070 --> 15:43.070
我先搜一个GS

15:44.070 --> 15:45.070
我再搜一个Panda

15:46.070 --> 15:47.070
我点一下回退

15:48.070 --> 15:49.070
回退什么呢

15:49.070 --> 15:51.070
它说这个Y6 is no defined

15:51.070 --> 15:52.070
哪个Y6呢

16:00.120 --> 16:02.120
我没有定义这个Y6是吧

16:02.120 --> 16:08.220
然后再握一个Y6等于

16:10.220 --> 16:11.220
再把这个给取出来

16:13.730 --> 16:14.730
再把这个也取出来

16:16.730 --> 16:17.730
好了还是

16:17.730 --> 16:19.730
先搜一下GS

16:20.730 --> 16:22.730
再搜一下Panda

16:23.730 --> 16:24.730
然后点一下回退

16:26.730 --> 16:27.730
我点一下回退

16:28.730 --> 16:29.730
它为什么出现了这个呢

16:29.730 --> 16:30.730
它为什么给我

16:31.730 --> 16:32.730
打出来一个AntiFan的呢

16:32.730 --> 16:34.730
为什么会给我打出来一个AntiFan的

16:35.730 --> 16:36.730
看一下

16:36.730 --> 16:38.730
因为我这块是一个

16:39.730 --> 16:40.730
是一个啥了

16:41.730 --> 16:42.730
是一个啥了

16:42.730 --> 16:44.730
是一个空了是吧

16:44.730 --> 16:46.730
我看它存不存在是吧

16:46.730 --> 16:47.730
如果存在的话

16:47.730 --> 16:48.730
就是我给它返回一个

16:48.730 --> 16:51.730
E的State的Y6是吧

16:52.730 --> 16:53.730
如果不存在呢

16:53.730 --> 16:55.730
我给它返回一个空串

16:55.730 --> 16:56.730
我给它返回一个空串

16:57.730 --> 16:58.730
但是我这会应该是存在的

16:58.730 --> 16:59.730
我看一下

16:59.730 --> 17:03.770
我们再来看一下

17:05.770 --> 17:06.770
搜一下GS

17:07.770 --> 17:08.770
搜一下Panda

17:09.770 --> 17:10.770
点一下回退

17:11.770 --> 17:15.620
点一下回退

17:16.620 --> 17:21.210
点一下回退State

17:23.210 --> 17:25.210
我这不是State的Value

17:25.210 --> 17:26.210
是State的InputValue

17:27.210 --> 17:28.210
IPVA

17:29.210 --> 17:30.210
写错值了

17:33.840 --> 17:37.240
这样就对了

17:37.240 --> 17:38.240
这样就对了

17:40.240 --> 17:41.240
刷新

17:41.240 --> 17:42.240
搜GS

17:43.240 --> 17:44.240
搜Panda

17:45.240 --> 17:46.240
回退

17:46.240 --> 17:47.240
回退到GS了

17:47.240 --> 17:48.240
再回退

17:49.240 --> 17:50.240
我最开始没有

17:50.240 --> 17:51.240
最开始最开始的时候

17:51.240 --> 17:53.240
我没有给的黑State

17:53.240 --> 17:55.240
所以我回不到最最开始

17:55.240 --> 17:57.240
我只能这些状态之间

17:57.240 --> 17:58.240
来回的切换

17:58.240 --> 17:59.240
我只能这些状态之间

17:59.240 --> 18:00.240
来回的切换

18:00.240 --> 18:02.240
比如说我现在搜了GS

18:03.240 --> 18:04.240
我搜了Panda

18:05.240 --> 18:06.240
然后搜了CSS

18:07.240 --> 18:08.240
我可以回到Panda

18:08.240 --> 18:09.240
再回到GS

18:10.240 --> 18:11.240
这样的话

18:11.240 --> 18:12.240
我就把这个黑State

18:12.240 --> 18:13.240
插出了东西

18:16.240 --> 18:17.240
我就把这个黑State

18:17.240 --> 18:18.240
插出了东西

18:18.240 --> 18:20.240
它就可以来记录我的每一针

18:20.240 --> 18:22.240
记录我这个页面的每一次变化

18:24.240 --> 18:25.240
省的我这个

18:25.240 --> 18:26.240
想回退到上一个状态的时候

18:27.240 --> 18:28.240
有的时候我一点这个回退

18:28.240 --> 18:29.240
我的天

18:29.240 --> 18:31.240
不是回退到上个状态的

18:31.240 --> 18:33.240
是回退到我上一个页面了

18:33.240 --> 18:35.240
这样的话用户就会很不爽

18:35.240 --> 18:36.240
因为它刚才在页面上

18:36.240 --> 18:37.240
累计了很多的操作

18:38.240 --> 18:39.240
如果再切回这个页面的话

18:39.240 --> 18:40.240
它又要

18:40.240 --> 18:41.240
辛辛苦苦的

18:41.240 --> 18:42.240
做一遍

18:42.240 --> 18:43.240
所以我们可以用黑State

18:43.240 --> 18:45.240
把每一个状态给记录进去

18:45.240 --> 18:46.240
我们可以用黑State

18:46.240 --> 18:47.240
把每一个状态给记录进去

18:49.240 --> 18:50.240
这个就是我们这一节

18:50.240 --> 18:51.240
所说的黑State的内容

18:52.240 --> 18:53.240
我们这一集

18:53.240 --> 18:54.240
来补充一下

18:54.240 --> 18:55.240
上一集黑State

18:55.240 --> 18:57.240
剩余的一点内容

18:57.240 --> 18:58.240
补充一下内容

18:59.240 --> 19:01.240
我们除了POPState

19:01.240 --> 19:03.240
可以监听回退事件之外

19:03.240 --> 19:04.240
我们还有一个东西

19:04.240 --> 19:05.240
可以监听

19:06.240 --> 19:09.240
Window.eventListener

19:09.240 --> 19:10.240
这个叫事件

19:10.240 --> 19:12.240
叫上面的叫做HashChange

19:14.240 --> 19:15.240
HashChange

19:18.190 --> 19:19.190
我可以打印一下

19:19.190 --> 19:21.190
看solar.loge

19:23.950 --> 19:24.950
可以看一下

19:26.950 --> 19:27.950
我们到一个页面里

19:28.950 --> 19:29.950
检查

19:29.950 --> 19:30.950
把之前的页面关了

19:31.950 --> 19:32.950
搜一个html

19:35.950 --> 19:37.950
搜一个gs

19:37.950 --> 19:39.950
搜一个panda

19:41.950 --> 19:42.950
看好我点回退

19:43.950 --> 19:45.950
看我点一个回退

19:45.950 --> 19:46.950
会出现

19:47.950 --> 19:48.950
两个事件都触发了

19:48.950 --> 19:49.950
是吧

19:49.950 --> 19:50.950
两个事件都触发了

19:52.950 --> 19:53.950
那我问你

19:53.950 --> 19:54.950
有的东西就会说了

19:54.950 --> 19:56.950
这两个事件都触发了

19:56.950 --> 19:57.950
它俩有什么区别

19:57.950 --> 19:58.950
记住

19:58.950 --> 19:59.950
URL

19:59.950 --> 20:01.950
只要URL变了

20:01.950 --> 20:02.950
只要URL变了

20:02.950 --> 20:04.950
就会触发POPState

20:04.950 --> 20:06.950
只要URL变了

20:06.950 --> 20:08.950
就会触发POPState

20:08.950 --> 20:09.950
HashChange

20:10.950 --> 20:11.950
是什么情况变了

20:11.950 --> 20:12.950
是什么东西变了

20:12.950 --> 20:14.950
你看我因为我用毛点

20:14.950 --> 20:15.950
看什么

20:15.950 --> 20:16.950
因为我用毛点

20:17.950 --> 20:19.950
毛点变了

20:19.950 --> 20:20.950
毛点变了

20:20.950 --> 20:21.950
这个HashChange

20:21.950 --> 20:22.950
就会变

20:22.950 --> 20:23.950
毛点变了

20:23.950 --> 20:24.950
这个HashChange就会变

20:24.950 --> 20:26.950
看我们把这块毛点给它改了

20:27.950 --> 20:29.950
给它改成杆

20:29.950 --> 20:30.950
我们给它改成杆

20:30.950 --> 20:32.950
我们看一下这样的行不行

20:32.950 --> 20:33.950
我们看一下这样行不行

20:35.950 --> 20:36.950
我刷新

20:36.950 --> 20:38.950
清除缓存刷新

20:38.950 --> 20:40.950
我这回搜html

20:40.950 --> 20:42.950
我这回搜html

20:43.950 --> 20:44.950
出现第一个页面

20:44.950 --> 20:45.950
看到了路径变了

20:45.950 --> 20:46.950
看到了吗

20:46.950 --> 20:48.950
然后GS

20:48.950 --> 20:50.950
然后PAN

20:51.950 --> 20:52.950
看到了吗

20:52.950 --> 20:53.950
这回是路径变了

20:53.950 --> 20:55.950
这回我再按回退

20:55.950 --> 20:56.950
看到了吗

20:56.950 --> 20:58.950
我这回就只会

20:58.950 --> 20:59.950
触发哪个时间了

20:59.950 --> 21:00.950
POPState是吧

21:00.950 --> 21:02.950
我就只会触发POPState

21:02.950 --> 21:04.950
这个东西

21:04.950 --> 21:06.950
你说重不重要

21:06.950 --> 21:07.950
其实它也算重要

21:07.950 --> 21:08.950
你得记住

21:08.950 --> 21:09.950
你得记住

21:09.950 --> 21:11.950
就是HashChange

21:11.950 --> 21:13.950
HashChange变了

21:14.950 --> 21:15.950
变了

21:15.950 --> 21:17.950
才会触发

21:17.950 --> 21:18.950
说白了

21:18.950 --> 21:19.950
就是毛点变了

21:19.950 --> 21:20.950
才会触发

21:23.780 --> 21:24.780
而这个呢

21:24.780 --> 21:26.780
而这个POPState是

21:26.780 --> 21:28.780
只要URL变了

21:28.780 --> 21:30.780
就会触发

21:30.780 --> 21:31.780
只要URL变了

21:31.780 --> 21:32.780
就会触发

21:32.780 --> 21:33.780
所以哪个比较

21:33.780 --> 21:35.780
更应用的广泛一点

21:35.780 --> 21:37.780
POPState跟应用的广泛一点

21:37.780 --> 21:38.780
是吧

21:38.780 --> 21:40.780
但是这个不是完全没有用

21:40.780 --> 21:41.780
有的时候你这个页面里

21:41.780 --> 21:43.780
有的时候让它路径变化

21:43.780 --> 21:45.780
有的时候让它毛点变化

21:45.780 --> 21:47.780
有的时候路径变化

21:47.780 --> 21:48.780
有的时候毛点变化

21:48.780 --> 21:49.780
这个时候呢

21:49.780 --> 21:50.780
就是这两个东西

21:50.780 --> 21:51.780
就全都得用

21:51.780 --> 21:52.780
有的时候

21:52.780 --> 21:54.780
需要它俩都

21:54.780 --> 21:55.780
同时存在的时候

21:55.780 --> 21:56.780
这两种东西

21:56.780 --> 21:58.780
才会一起用

21:58.780 --> 21:59.780
我们通常的情况下

21:59.780 --> 22:00.780
尽量都是先

22:00.780 --> 22:02.780
只用上面这个

22:04.780 --> 22:05.780
能用POPState的解决

22:05.780 --> 22:07.780
就用POPState的解决

22:08.780 --> 22:09.780
但是下面这个

22:09.780 --> 22:10.780
也得知道

22:10.780 --> 22:12.780
因为它也很常用

22:12.780 --> 22:13.780
也经常

22:13.780 --> 22:14.780
不能说太常用

22:14.780 --> 22:16.780
也是会经常用得到

22:16.780 --> 22:18.780
经常用得到

22:18.780 --> 22:20.780
这就是HAS Change

22:21.780 --> 22:22.780
当我们毛点

22:22.780 --> 22:23.780
而且当我们毛点

22:23.780 --> 22:24.780
触发变化了之后

22:24.780 --> 22:25.780
记住

22:25.780 --> 22:26.780
是它俩都会触发

22:26.780 --> 22:28.780
它俩都会触发

22:28.780 --> 22:30.780
其实它俩也有一个先后顺序

22:30.780 --> 22:32.780
它俩也有一个先后顺序

22:32.780 --> 22:37.940
我还给它改回毛点

22:37.940 --> 22:45.800
还是给它改回毛点

22:46.800 --> 22:50.780
改回毛点

22:50.780 --> 22:51.780
HTML

22:52.780 --> 22:58.480
GS

22:59.480 --> 23:00.480
CSS

23:01.480 --> 23:02.480
我点回退

23:02.480 --> 23:03.480
我点回退

23:03.480 --> 23:04.480
我点回退

23:04.480 --> 23:05.480
你会发现

23:05.480 --> 23:06.480
这个是没有

23:07.480 --> 23:08.480
你会发现一个问题

23:09.480 --> 23:10.480
无论你这个玩意

23:10.480 --> 23:11.480
是写在上面

23:11.480 --> 23:12.480
还是写在下面

23:12.480 --> 23:13.480
它永远都是先触发谁

23:16.480 --> 23:18.480
永远都是先触发POPState

23:18.480 --> 23:20.480
永远都是先触发POPState

23:23.480 --> 23:24.480
这玩意

23:24.480 --> 23:25.480
实际上是浏览系数的算

23:26.480 --> 23:28.480
但是我们现在见的浏览系

23:28.480 --> 23:30.480
几乎都是先触发POPState

23:30.480 --> 23:31.480
都是先触发POPState

23:31.480 --> 23:33.480
知道一下先后顺序

23:33.480 --> 23:35.480
简单的了解一下

23:37.480 --> 23:38.480
好了

23:38.480 --> 23:39.480
这就是我们这一节说的内容

23:39.480 --> 23:42.480
记住了它的一个和它的区别

23:42.480 --> 23:44.480
主要是要记住它俩的区别

