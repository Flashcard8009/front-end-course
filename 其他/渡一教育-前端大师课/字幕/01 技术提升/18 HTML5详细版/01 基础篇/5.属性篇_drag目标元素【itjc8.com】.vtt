WEBVTT

00:00.430 --> 00:05.830
哈喽 大家好 上集咱们说到了哪儿呢

00:05.830 --> 00:10.830
我看看啊 上回书说到 咱们这个dragobo属性是吧

00:10.830 --> 00:14.830
被拖拽的物体的一个生命周期由三个部分组成

00:14.830 --> 00:19.030
那这一节课我们说目标区域 也就是目标元素

00:19.030 --> 00:23.830
我们也管它叫目标元素 目标元素

00:23.830 --> 00:30.230
咱们上集说了 这个拖拽物体肯定是拖拽了谁

00:30.230 --> 00:33.630
把它放到哪儿 是吧 要不然拖拽它有什么意义呢 是吧

00:33.630 --> 00:36.630
带着它去世界 就是溜一圈 然后再回去

00:36.630 --> 00:40.430
这样没有意义 是吧 所以说我们一定要有一个目标区域

00:42.430 --> 00:46.830
比如说把它 把一个水杯拿到我的桌子上来 是吧

00:46.830 --> 00:52.030
class B 这样写是不是 太难看了

00:52.030 --> 00:59.660
target 叫目标 我给它写一个啊 target

01:00.660 --> 01:04.660
先来个position absolute

01:04.660 --> 01:08.660
然后wise 200px

01:08.660 --> 01:11.660
patch 200px

01:11.660 --> 01:16.660
然后border 1px solid

01:16.660 --> 01:24.080
我先看看这个在哪儿了

01:24.080 --> 01:30.080
在这样的一个区域 我让它往右边走一走

01:31.080 --> 01:34.080
600px

01:34.080 --> 01:40.540
好 这样的一个区域

01:40.540 --> 01:43.540
这个target 我就管它叫目标区域

01:43.540 --> 01:49.540
我希望我拖拽这个小方块 最后能给它放进target里面来

01:49.540 --> 01:54.540
给它放进来 这样就坏了 是吧

01:54.540 --> 01:58.540
我把之前写的这些动作都给删掉了

01:58.540 --> 02:05.670
这些动作 什么拖拽了之后定在哪儿

02:05.670 --> 02:10.750
这些动作都先删掉

02:10.750 --> 02:13.750
这样的话我能拖拽 但是我根本就放不进去 是吧

02:13.750 --> 02:15.750
根本我就放不进去

02:15.750 --> 02:18.750
就是一个这样的

02:18.750 --> 02:21.750
好 目标区

02:21.750 --> 02:25.750
它是不是可以接受过来的元素 是吧

02:25.750 --> 02:29.750
比如说我这是个飞机场 有一下飞机过来了

02:29.750 --> 02:31.750
它想请求降落 是吧

02:31.750 --> 02:34.750
我得能知道有飞机来了

02:34.750 --> 02:37.750
我知道飞机已经到了我这个机场上空了

02:37.750 --> 02:40.750
然后我可以让它降落 是吧

02:40.750 --> 02:43.750
然后我也可以知道飞机 可能是路过我这儿的

02:43.750 --> 02:46.750
飞机来了 在我这上空它又飞走了 是吧

02:46.750 --> 02:49.750
是一个这样的一个逻辑

02:49.750 --> 02:51.750
那我们先来获取一下这个元素

02:51.750 --> 02:55.750
work o dragtarget

02:55.750 --> 03:00.750
目标 等于 document the get element by class name

03:00.750 --> 03:03.750
然后用target

03:03.750 --> 03:06.750
0

03:06.750 --> 03:09.750
这样的话我们就拿到了这个第一个元素 是吧

03:09.750 --> 03:11.750
这个目标区的元素

03:11.750 --> 03:15.750
然后我们给它增加一个实践

03:15.750 --> 03:18.750
这实践叫什么名呢

03:18.750 --> 03:23.580
叫 on drag inter

03:23.580 --> 03:25.580
顾名思义 是吧

03:25.580 --> 03:30.950
在拖拽进入的时候出发的实践

03:31.950 --> 03:34.950
console.log

03:34.950 --> 03:36.950
是不是顾名思义

03:36.950 --> 03:38.950
我只要拖拽进去的时候

03:38.950 --> 03:40.950
就会出发这个实践

03:40.950 --> 03:42.950
但是你看好 我拖拽

03:42.950 --> 03:44.950
拖拽 拖拽 拖拽

03:44.950 --> 03:46.950
出发了吗

03:46.950 --> 03:48.950
出发了吗

03:48.950 --> 03:50.950
没出发 是吧

03:50.950 --> 03:53.950
这样才出发 是吧

03:53.950 --> 03:56.950
记住啊

03:56.950 --> 03:59.950
这个 on drag inter

03:59.950 --> 04:02.950
不是

04:02.950 --> 04:05.950
不是元素

04:05.950 --> 04:07.950
图形

04:07.950 --> 04:09.950
进入

04:09.950 --> 04:12.950
就出发的

04:12.950 --> 04:15.950
而是拖拽的

04:15.950 --> 04:17.950
鼠标进入

04:17.950 --> 04:20.950
才出发的

04:20.950 --> 04:22.950
不是元素的图形

04:22.950 --> 04:23.950
进入就出发的

04:23.950 --> 04:25.950
你看好了 我点这个位置

04:25.950 --> 04:28.950
我这个元素图形已经进去了

04:28.950 --> 04:30.950
甚至我可以都说它就进去了一半了

04:30.950 --> 04:32.950
是吧 它都没出发

04:32.950 --> 04:34.950
但是我的鼠标只要一压线

04:34.950 --> 04:36.950
就出发了

04:36.950 --> 04:40.950
所以说有很多的

04:40.950 --> 04:42.950
比如说组件

04:42.950 --> 04:43.950
你拖拽的时候

04:43.950 --> 04:45.950
如果图形出发了

04:45.950 --> 04:47.950
图形一碰到上面

04:47.950 --> 04:48.950
它就出发了

04:48.950 --> 04:49.950
那是算出来的

04:49.950 --> 04:50.950
如果图形一碰到出发了

04:50.950 --> 04:51.950
那是算出来的

04:51.950 --> 04:52.950
怎么算出来的

04:52.950 --> 04:53.950
我这一点我就能知道

04:53.950 --> 04:55.950
我距离鼠标

04:55.950 --> 04:57.950
距离方块的左上角是多远

04:57.950 --> 05:00.950
然后我算一下整个方块的长

05:00.950 --> 05:04.950
然后靠计算来算出来

05:04.950 --> 05:05.950
所以说正常的拖拽

05:05.950 --> 05:07.950
这个是不算上去的

05:07.950 --> 05:08.950
正常的拖拽

05:08.950 --> 05:09.950
这个是不算上去的

05:09.950 --> 05:16.030
只有鼠标

05:16.030 --> 05:18.030
进入的那一刹那

05:18.030 --> 05:21.030
才算是inter实践

05:21.030 --> 05:23.030
这是inter实践

05:23.030 --> 05:25.030
下一个

05:25.030 --> 05:27.030
all drag

05:27.030 --> 05:29.030
它该的

05:29.030 --> 05:31.030
all drag over

05:31.030 --> 05:35.030
这个over和drag它就很像

05:35.030 --> 05:39.030
之前说过一个这个是吧

05:39.030 --> 05:43.340
all drag

05:43.340 --> 05:44.340
是吧

05:44.340 --> 05:46.340
在上年课说过一个all drag是吧

05:46.340 --> 05:52.230
这个all drag over和all drag很像

05:52.230 --> 05:55.230
它很像在哪呢

05:55.230 --> 05:58.230
它都是不停出发

05:58.230 --> 05:59.230
不停的出发

05:59.230 --> 06:02.230
你看我这块打印的

06:02.230 --> 06:05.230
好了我鼠标一旦进入

06:05.230 --> 06:07.230
我是不是些错了

06:13.340 --> 06:15.340
刚才没刷新界面

06:15.340 --> 06:16.340
看我这个拖拽

06:16.340 --> 06:18.340
我鼠标一进入

06:18.340 --> 06:20.340
拖拽还得有点远

06:20.340 --> 06:22.340
它就不停的出发

06:22.340 --> 06:24.340
这个drag事件是不是也是

06:24.340 --> 06:25.340
上面这个drag事件是

06:25.340 --> 06:26.340
你只要再移动

06:26.340 --> 06:27.340
它就不停的出发

06:27.340 --> 06:28.340
all drag over是

06:28.340 --> 06:30.340
你只要在区域上面移动

06:30.340 --> 06:31.340
它就不停的出发

06:31.340 --> 06:34.340
这个是all drag over事件

06:34.340 --> 06:37.340
我把这个打印就先去了

06:37.340 --> 06:38.340
再说一个

06:38.340 --> 06:43.350
叫all drag

06:43.350 --> 06:47.660
all drag live

06:47.660 --> 06:49.660
这个单词是不是都认识

06:49.660 --> 06:50.660
顾名思义是吧

06:50.660 --> 06:52.660
离开

06:52.660 --> 06:57.810
我进入的时候

06:57.810 --> 06:58.810
我没打印

06:58.810 --> 06:59.810
把那打印已经去掉了

06:59.810 --> 07:00.810
这是已经进入了

07:00.810 --> 07:01.810
是吧

07:01.810 --> 07:02.810
我在上面移动

07:02.810 --> 07:03.810
我一离开

07:03.810 --> 07:04.810
出发了一下事件

07:04.810 --> 07:05.810
我一离开

07:05.810 --> 07:06.810
出发了一下事件

07:06.810 --> 07:09.810
这个叫all drag live

07:09.810 --> 07:15.810
目标区域和被拖拽的元素

07:15.810 --> 07:17.810
其实拖拽事件上

07:17.810 --> 07:18.810
还有一个不同

07:18.810 --> 07:21.810
目标区域有四个事件

07:21.810 --> 07:23.810
目标区域有四个事件

07:23.810 --> 07:25.810
第四个事件

07:25.810 --> 07:26.810
稍微有点复杂

07:26.810 --> 07:27.810
叫做all

07:27.810 --> 07:29.810
什么

07:29.810 --> 07:30.810
是不是有学过的

07:30.810 --> 07:31.810
叫all drop是吧

07:31.810 --> 07:35.180
有的学的快乐同学

07:35.180 --> 07:37.180
可能都知道了

07:37.180 --> 07:38.180
all drop

07:38.180 --> 07:39.180
啥意思

07:39.180 --> 07:41.180
放下

07:41.180 --> 07:42.180
放下那个女孩

07:42.180 --> 07:43.180
让我来

07:43.180 --> 07:44.180
是吧

07:44.180 --> 07:45.180
这样拖拽

07:45.180 --> 07:46.180
进来了是吧

07:46.180 --> 07:47.180
我松手了

07:47.180 --> 07:48.180
看好了

07:48.180 --> 07:49.180
我松手

07:49.180 --> 07:51.180
一松手又回去了

07:51.180 --> 07:53.180
一松手又回去了

07:53.180 --> 07:54.180
看见了吗

07:54.180 --> 07:56.180
她并没有出发

07:56.180 --> 07:58.180
照铺事件

07:58.180 --> 08:02.180
她并没有出发照铺事件

08:02.180 --> 08:04.180
这个是为什么

08:04.180 --> 08:06.180
这个是为什么

08:06.180 --> 08:08.180
跟大家说

08:08.180 --> 08:10.180
所有的元素

08:10.180 --> 08:11.180
记住

08:11.180 --> 08:14.180
HTML里的所有的元素

08:14.180 --> 08:16.180
当拖拽结束的时候

08:16.180 --> 08:19.180
当拖拽结束的时候

08:19.180 --> 08:21.180
她的目标事件

08:21.180 --> 08:23.180
都是回到元素

08:23.180 --> 08:26.180
目标事件都是回到元素

08:26.180 --> 08:27.180
写一个

08:27.180 --> 08:31.180
所有的标签元素

08:31.180 --> 08:33.180
所有的标签元素

08:33.180 --> 08:37.180
当拖拽

08:37.180 --> 08:38.180
拖拽

08:38.180 --> 08:41.180
周期结束时

08:41.180 --> 08:45.500
默认事件

08:45.500 --> 08:48.500
是回到元素

08:48.500 --> 08:49.500
回到元素

08:49.500 --> 08:50.500
你这个照铺

08:50.500 --> 08:51.500
根本就不好使

08:51.500 --> 08:52.500
它连出发都不出发

08:52.500 --> 08:54.500
你看我在这打印一个

08:54.500 --> 09:01.970
这个是我这个

09:01.970 --> 09:03.970
按的事件是吧

09:03.970 --> 09:04.970
按的事件

09:04.970 --> 09:07.600
我一松手

09:07.600 --> 09:09.600
按的执行了

09:09.600 --> 09:11.600
但是它不会执行

09:11.600 --> 09:13.600
罩铺

09:13.600 --> 09:15.600
它执行的是什么呢

09:15.600 --> 09:17.600
它执行的是

09:17.600 --> 09:19.600
这个按的

09:19.600 --> 09:20.600
是吧

09:20.600 --> 09:22.600
然后它回到元素了

09:22.600 --> 09:23.600
回到元素了

09:23.600 --> 09:24.600
那有同学说

09:24.600 --> 09:25.600
那老师这个罩铺

09:25.600 --> 09:26.600
我们怎么用

09:26.600 --> 09:28.600
我们怎么用

09:28.600 --> 09:29.600
看好了

09:29.600 --> 09:30.600
一定要在 over 这块

09:30.600 --> 09:31.600
在 over 这块

09:31.600 --> 09:34.600
加一个默认阻止事件

09:34.600 --> 09:35.600
叫什么来

09:35.600 --> 09:37.600
a.prize

09:37.600 --> 09:39.600
default

09:39.600 --> 09:41.600
然后我们在这一里面

09:41.600 --> 09:43.600
在 job 这里面打印 job

09:43.600 --> 09:47.170
看好了

09:47.170 --> 09:49.170
我这个时候一松手

09:49.170 --> 09:51.170
job

09:51.170 --> 09:52.170
按

09:52.170 --> 09:53.170
发了吧

09:53.170 --> 09:56.170
这个时候它就执行了 job

09:56.170 --> 09:58.170
这个时候就执行了 job

09:58.170 --> 09:59.170
那有同学说

09:59.170 --> 10:00.170
老师

10:00.170 --> 10:02.170
为什么要在 on drag over 这块

10:02.170 --> 10:03.170
来调用

10:03.170 --> 10:05.170
为什么要在 on drag over 这块来调用

10:05.170 --> 10:07.170
记住

10:08.170 --> 10:10.170
事件

10:10.170 --> 10:12.170
有个干讲

10:12.170 --> 10:13.170
事件

10:14.170 --> 10:15.170
事件

10:15.170 --> 10:18.170
是由行为出发的

10:20.170 --> 10:21.170
这个没问题是吧

10:21.170 --> 10:23.170
一个事件的出发必然会

10:23.170 --> 10:24.170
因为这一个行为

10:24.170 --> 10:26.170
或者是一个动作

10:26.170 --> 10:27.170
一个动作会出发一个事件

10:27.170 --> 10:28.170
但是

10:28.170 --> 10:29.170
有个干讲

10:29.170 --> 10:30.170
但是

10:30.170 --> 10:32.170
一个行为

10:32.170 --> 10:34.170
可以不止

10:34.170 --> 10:37.170
出发一个事件

10:37.170 --> 10:39.170
一个行为可以

10:39.170 --> 10:40.170
不止出发一个事件

10:40.170 --> 10:42.170
比如说你那个鼠标一按一抬

10:42.170 --> 10:44.170
那一抬起来的事件

10:44.170 --> 10:45.170
那一抬起来

10:45.170 --> 10:47.170
只是一个行为

10:47.170 --> 10:48.170
是吧

10:48.170 --> 10:50.170
它可以出发 on click

10:50.170 --> 10:51.170
它也出发

10:51.170 --> 10:53.170
什么 more sub

10:53.170 --> 10:54.170
是吧

10:54.170 --> 10:55.170
鼠标抬起事件和点击事件

10:55.170 --> 10:56.170
其实都是一按一抬

10:56.170 --> 10:58.170
但是这抬起来的一个动作

10:58.170 --> 11:00.170
出发了两个事件

11:00.170 --> 11:02.170
实际上它可以出发到两个事件

11:03.170 --> 11:04.170
所以说

11:04.170 --> 11:06.170
当我们放下的这一个瞬间

11:06.170 --> 11:08.170
当我们放下的这一个瞬间

11:08.170 --> 11:10.170
它也是出发了两个事件

11:10.170 --> 11:12.170
一个是 on drag over

11:12.170 --> 11:14.170
一个是 on drop

11:14.170 --> 11:16.170
一个是 on drag over

11:16.170 --> 11:17.170
一个是 on drop

11:17.170 --> 11:19.170
但是我们默认的

11:19.170 --> 11:20.170
但是我们默认的

11:20.170 --> 11:22.170
on drag over的之后

11:22.170 --> 11:24.170
默认的事件是回到原处

11:24.170 --> 11:26.170
所以说

11:26.170 --> 11:28.170
在GS它在雕像对列里

11:28.170 --> 11:31.170
可能这是 on drag over

11:31.170 --> 11:33.170
这是 drag over

11:33.170 --> 11:35.170
然后它是一个

11:35.170 --> 11:37.170
e files的一个结构

11:37.170 --> 11:41.310
一种是

11:41.310 --> 11:43.310
回到原处

11:43.310 --> 11:46.620
另外一种是

11:46.620 --> 11:48.620
执行

11:48.620 --> 11:50.620
撞破事件

11:50.620 --> 11:52.620
但是它默认的

11:52.620 --> 11:55.620
永远都是回到原处

11:55.620 --> 11:57.620
回到原处

11:57.620 --> 11:59.620
这是它默认的

11:59.620 --> 12:01.620
那怎么能切换到这呢

12:01.620 --> 12:03.620
必须要让 on drag over

12:03.620 --> 12:05.620
结束了之后

12:05.620 --> 12:07.620
它在下一件事情

12:07.620 --> 12:09.620
阻止到它的默认的事件

12:09.620 --> 12:11.620
阻止到它的默认的事件

12:11.620 --> 12:13.620
把这个给阻止掉

12:13.620 --> 12:15.620
把这个阻止掉

12:15.620 --> 12:17.620
它就执行撞破事件

12:17.620 --> 12:19.620
它就执行撞破事件

12:19.620 --> 12:21.620
所以说

12:21.620 --> 12:23.620
一个行为是有多个

12:23.620 --> 12:25.620
是可以出发多个事件的

12:25.620 --> 12:26.620
记住

12:26.620 --> 12:27.620
而且

12:27.620 --> 12:29.620
你想要阻止回到原处的事件

12:29.620 --> 12:31.620
你必须得在 on drag over

12:31.620 --> 12:33.620
你在别的地方加不好使

12:33.620 --> 12:35.620
你在别的地方加不好使

12:35.620 --> 12:37.620
必须得在它上一个事件

12:37.620 --> 12:39.620
出发的事件上来加

12:39.620 --> 12:41.620
这个元素

12:41.620 --> 12:42.620
比如说

12:42.620 --> 12:43.620
举个例子

12:43.620 --> 12:45.620
这会咱多说一点

12:45.620 --> 12:47.620
实际上你们以后用不到

12:47.620 --> 12:49.620
A事件

12:49.620 --> 12:51.620
A事件出发完了之后

12:51.620 --> 12:53.620
会出发B事件

12:53.620 --> 12:55.620
B事件出发完了之后

12:55.620 --> 12:57.620
会出发C事件

12:57.620 --> 12:59.620
当你想阻止C事件的发生

12:59.620 --> 13:01.620
C是个默认事件

13:01.620 --> 13:03.620
A和B是你自定义的事件

13:03.620 --> 13:05.620
C是个默认事件

13:05.620 --> 13:07.620
当你想阻止C这个默认事件发生的时候

13:07.620 --> 13:09.620
你必须得在B上阻止

13:09.620 --> 13:11.620
必须得在这块进行阻止

13:11.620 --> 13:15.960
你在A上说阻止C

13:15.960 --> 13:17.960
不好使

13:17.960 --> 13:19.960
你在A上说阻止C

13:19.960 --> 13:21.960
这不好使

13:21.960 --> 13:23.960
你要是想阻止事件C

13:23.960 --> 13:25.960
就必须得在B上

13:25.960 --> 13:27.960
做这个事件的阻止

13:27.960 --> 13:29.960
咱们多说了一点

13:29.960 --> 13:31.960
你们在未来的几年内

13:31.960 --> 13:33.960
肯定都用不到

13:33.960 --> 13:35.960
咱就多说了一下事件的调用链

13:35.960 --> 13:37.960
这个其实它在底层里面

13:37.960 --> 13:39.960
叫做责任链模式

13:41.960 --> 13:43.960
等你们以后工作几年了之后

13:43.960 --> 13:45.960
涉及到底层的一些原理的时候

13:45.960 --> 13:47.960
可能会涉及到这块的一些东西

13:47.960 --> 13:49.960
大家现在就先了解就好

13:49.960 --> 13:51.960
你们就需要知道

13:51.960 --> 13:53.960
当你松开鼠标的那一瞬间

13:53.960 --> 13:55.960
它默认的事件是回到原处

13:55.960 --> 13:57.960
而不是执行照布事件

13:57.960 --> 13:59.960
你必须得阻止了默认事件

13:59.960 --> 14:01.960
你才能执行照布事件

14:01.960 --> 14:03.960
好

14:03.960 --> 14:05.960
这四个事件

14:05.960 --> 14:07.960
目标区域

14:07.960 --> 14:09.960
目标元素的

14:09.960 --> 14:11.960
四个基本的默认事件

14:11.960 --> 14:13.960
下一集

14:13.960 --> 14:15.960
我们来根据

14:15.960 --> 14:17.960
拖拽物体

14:17.960 --> 14:19.960
被拖拽的物体和目标区域

14:19.960 --> 14:21.960
咱们写一个小Demo

14:21.960 --> 14:23.960
咱们做一个练习

14:23.960 --> 14:25.960
我们下团课来具体的写一下这个练习

