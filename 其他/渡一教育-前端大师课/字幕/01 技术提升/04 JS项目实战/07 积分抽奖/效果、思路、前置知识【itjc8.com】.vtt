WEBVTT

00:00.560 --> 00:04.560
各位同学 大家好 我是本节课的竹江老师 韩刚

00:04.560 --> 00:08.060
那么在接下来的时间里 会有我跟大家一起完成一个

00:08.060 --> 00:13.060
通过JavaScript 以及CSS 实现的常见活动案例

00:13.060 --> 00:16.560
这个呢 就是咱们最后实现的一个效果

00:16.560 --> 00:21.060
它是一个常见的出现在我们前端推广活动专体界面

00:21.060 --> 00:25.560
是为了回馈在线用户制作的一个抽奖的小游戏

00:25.560 --> 00:30.060
这种小游戏一般是由客户端的用户直接进行操作

00:30.060 --> 00:35.060
比如说我们用户点击抽奖按钮之后 获取本次的一个抽奖结果

00:35.060 --> 00:39.560
前端呢 会根据当前抽奖结果的响应值

00:39.560 --> 00:44.560
然后呢 弹出一个对话框 显示本次抽奖获取到的对应奖项

00:44.560 --> 00:48.560
那我跟大家说一下 制作这种界面 在公司里面

00:48.560 --> 00:51.560
真实的一个实现流程是什么样的

00:51.560 --> 00:55.060
首先一般来说 当用户进入到这个抽奖界面

00:55.060 --> 00:57.560
我们是首先要获得用户的一个信息的

00:57.560 --> 01:00.560
根据用户的信息 获取用户当前积分

01:00.560 --> 01:03.560
或者是其他可抽奖的一个标识状态

01:03.560 --> 01:07.060
来生成一个前端需要渲染的可抽奖的一个次数

01:07.060 --> 01:11.560
也就是咱们现在所看到的还可以抽奖5次 这样一个显示

01:11.560 --> 01:13.560
如果在可抽奖范围之内呢

01:13.560 --> 01:16.060
我们是可以点击这个按钮进行抽奖游戏的

01:16.060 --> 01:20.060
但是如果当你的积分没有达到这个抽奖的标准的时候

01:20.060 --> 01:24.060
一般的呢 是由前端给用户一个状态提示

01:24.060 --> 01:27.060
比如说咱们看到的这个可抽奖数字

01:27.060 --> 01:30.060
那么呢 它有可能就是变成了这个0

01:30.060 --> 01:33.060
并且抽奖这个按钮它是接用的

01:33.060 --> 01:36.560
或者呢 是直接进入到这个游戏之后

01:36.560 --> 01:39.560
那么我们先判断用户可抽奖次数

01:39.560 --> 01:41.060
如果说没有抽奖次数

01:41.060 --> 01:44.060
我们直接跳转到其他界面

01:44.060 --> 01:47.560
如果说用户可以在抽奖的情况下

01:47.560 --> 01:49.560
也就是说它有权限进行抽奖

01:49.560 --> 01:52.560
那么是可以点击我们这个抽奖按钮的

01:52.560 --> 01:54.560
在点击这个抽奖按钮的同时呢

01:54.560 --> 01:58.060
我们一般会向后端的服务器发送了一个请求

01:58.060 --> 02:00.060
从这个请求的响应值里面

02:00.060 --> 02:02.060
其实我们已经知道了用户

02:02.060 --> 02:05.060
接下来在本轮抽奖过程当中

02:05.060 --> 02:07.060
你应该获取哪一个奖品

02:07.060 --> 02:08.060
因为只有这样

02:08.060 --> 02:13.060
我们前端才可以进行下一步的抽奖的这个行为的模拟

02:13.060 --> 02:14.060
怎么来做

02:14.060 --> 02:17.060
首先就是前端通过事件的形式

02:17.060 --> 02:19.060
触发这个点击按钮

02:19.060 --> 02:22.060
然后呢 并且我们创建一个定时器

02:22.060 --> 02:25.560
让界面产生一个抽奖的滚动效果

02:25.560 --> 02:27.560
比如说我们来测试一下

02:27.560 --> 02:29.560
OK 有一个滚动效果

02:29.560 --> 02:32.560
然后呢 在抽奖转动的同时啊

02:32.560 --> 02:34.560
就是刚才因为这个速度比较快啊

02:34.560 --> 02:36.560
它在它转动的同时

02:36.560 --> 02:39.560
我们来判断一下是否已经匹配了

02:39.560 --> 02:42.560
我们刚才向后端发送请求

02:42.560 --> 02:44.560
获取到的那个本轮抽

02:44.560 --> 02:46.560
可以获得的那个奖项

02:46.560 --> 02:47.560
如果匹配了

02:47.560 --> 02:49.560
我们就停止了这个定时器

02:49.560 --> 02:51.560
就像现在这种状态

02:51.560 --> 02:53.560
弹出这么一个弹窗

02:53.560 --> 02:56.560
显示当前获取的奖项信息

02:56.560 --> 02:59.560
当然了 其实我们早就知道这个奖品是什么了

02:59.560 --> 03:01.560
只不过是完成一次

03:01.560 --> 03:04.060
由点击运行定时器

03:04.060 --> 03:06.560
然后有一个抽奖状态的模拟

03:06.560 --> 03:10.560
最后显示住这个弹窗的这么一个过程而已

03:10.560 --> 03:13.060
当这个弹窗打开的时候

03:13.060 --> 03:16.060
我们一般的啊 就会看到这两种选择

03:16.060 --> 03:18.060
一个呢 是在继续抽奖

03:18.060 --> 03:19.060
那当然了啊

03:19.060 --> 03:22.060
这个再继续抽奖是必须

03:22.060 --> 03:25.060
你还有可以抽奖这个权限

03:25.060 --> 03:28.060
也就是说还有抽奖次数的前提下来进行的

03:28.060 --> 03:32.060
另一种呢 就是非常简单直接关闭这个弹窗

03:32.060 --> 03:34.060
选择退出这个页面

03:34.060 --> 03:36.060
或者访问其他的相关模块

03:36.060 --> 03:38.060
比如说咱们底下这个

03:38.060 --> 03:40.060
未来要展示的这些模块啊

03:40.060 --> 03:43.060
我们呢 会在用户关闭弹窗的时候

03:43.060 --> 03:46.560
重新回到这个初始化的一个抽奖状态

03:46.560 --> 03:50.560
并且呢 重新计算出这个还可以抽奖的一个次数

03:50.560 --> 03:53.560
那来展示给我们的用户看

03:53.560 --> 03:57.560
也就是说我们更新了一下用户的一个信息

03:57.560 --> 04:01.560
好了呢 这个呢 就是整个的我们一个

04:01.560 --> 04:05.560
在公司里面实现的流程啊 非常简单啊

04:05.560 --> 04:07.560
然后呢 我们现在啊

04:07.560 --> 04:09.560
来看一下整体的效果是什么

04:09.560 --> 04:10.560
首先我们刷新界面

04:10.560 --> 04:12.560
当我们点击开始抽奖

04:12.560 --> 04:13.560
就像我们刚才说的

04:13.560 --> 04:15.560
现在用户呢 是有抽奖的这个次数

04:15.560 --> 04:18.560
也就是说他有权限来进行抽奖

04:18.560 --> 04:21.560
然后呢 我们直接的就是点击这个按钮啊

04:21.560 --> 04:23.560
ok 点击按钮

04:23.560 --> 04:25.560
然后呢 他随机

04:25.560 --> 04:27.560
其实模拟出来感觉好像是随机

04:27.560 --> 04:29.560
但这不是随机 这已经定好了

04:29.560 --> 04:31.560
应该能获取哪个奖品

04:31.560 --> 04:32.560
然后呢 点击按钮

04:32.560 --> 04:34.560
来 我们做这两种选择

04:34.560 --> 04:35.560
比如说我们点击再来一次

04:35.560 --> 04:38.560
ok 那这样呢 就是可以继续在抽奖啊

04:38.560 --> 04:41.560
那如果说我点击这个关闭按钮呢

04:41.560 --> 04:44.560
ok 那就是已经再回到初始化

04:44.560 --> 04:47.560
然后你从外面 控制这个开始抽奖

04:47.560 --> 04:49.560
再来进行你的下一次的抽奖

04:49.560 --> 04:51.560
比如说我点击开始抽奖

04:51.560 --> 04:54.560
那当一直在抽奖 一直在抽奖

04:54.560 --> 04:57.560
这个抽奖完成之后是什么样的呢

04:57.560 --> 04:58.560
我们现在模拟一下

04:58.560 --> 05:00.560
因为还有一次嘛 对吧

05:00.560 --> 05:02.560
然后 注意看啊 ok

05:02.560 --> 05:04.560
现在呢 突然间你会发现

05:04.560 --> 05:06.560
抽完本轮之后

05:06.560 --> 05:07.560
我们的这个再来一次

05:07.560 --> 05:09.560
一般的是发生了改变了

05:09.560 --> 05:10.560
改变之后呢

05:10.560 --> 05:12.560
现在变成了确定按钮

05:12.560 --> 05:14.560
也就是说 你没有再来一次的机会了

05:14.560 --> 05:15.560
然后我们关闭

05:15.560 --> 05:18.560
或者是我们在这里点击开始抽奖

05:18.560 --> 05:20.560
这时候呢 已经没办法进行抽奖了

05:20.560 --> 05:23.560
其实它的抽奖次数已经用完了

05:23.560 --> 05:25.560
是不是非常简单

05:25.560 --> 05:26.560
那么对于我们来说啊

05:26.560 --> 05:29.560
同学们来说 完成这个冲奖按钮

05:29.560 --> 05:31.560
我们能学到哪些指示呢

05:31.560 --> 05:33.560
首先在这个按钮里面啊

05:33.560 --> 05:35.560
就是有一些道目元素的操作

05:35.560 --> 05:38.560
同学们之前 如果了解过

05:38.560 --> 05:40.560
道目绑定的一些相关方法

05:40.560 --> 05:43.560
之后 会发现道目的操作方法有很多

05:43.560 --> 05:45.560
如何巧妙的来使用

05:45.560 --> 05:46.560
那么在这个按钮里面啊

05:46.560 --> 05:48.560
大家就可以尝试

05:48.560 --> 05:51.560
跟着我一起来探索一下这个问题

05:51.560 --> 05:53.560
还有呢 我们在这里面

05:53.560 --> 05:56.560
可能会用一些新鲜的类似啊

05:56.560 --> 05:58.560
咱们出现的query selector

05:58.560 --> 06:01.560
这种形式来进行道目的一个操作

06:01.560 --> 06:04.560
第二呢 就是事件处理的一个办法

06:04.560 --> 06:06.560
我们怎么来合理的

06:06.560 --> 06:09.560
来把这个事件进行绑定

06:09.560 --> 06:11.560
同学们说啊 绑定事件非常方便

06:11.560 --> 06:14.560
最方便的就是我们写一个标签

06:14.560 --> 06:17.560
然后呢 行内属性直接就是可执行

06:17.560 --> 06:20.560
但是这种写法呢 就是把我们的样式

06:20.560 --> 06:22.560
跟这个逻辑这一块充分的啊

06:22.560 --> 06:24.560
没法做一个充分的分离

06:24.560 --> 06:27.560
那日后的维护是非常麻烦的

06:27.560 --> 06:28.560
所以说我们在这里面啊

06:28.560 --> 06:30.560
是规范的来进行一下

06:30.560 --> 06:31.560
这个事件的绑定

06:31.560 --> 06:33.560
以及事件函数的处理

06:33.560 --> 06:35.560
在这里都会有体现

06:35.560 --> 06:37.560
第三个呢 就是我们的js

06:37.560 --> 06:39.560
这些常用的语法

06:39.560 --> 06:41.560
以及一些语句的使用

06:41.560 --> 06:43.560
比如说我们知道的定时器

06:43.560 --> 06:45.560
获取随即数字这些方法

06:45.560 --> 06:47.560
在我们这个案例里面

06:47.560 --> 06:49.560
都是有使用到的啊

06:49.560 --> 06:50.560
那么 再来说一下啊

06:50.560 --> 06:52.560
就是我们完成这个案例

06:52.560 --> 06:54.560
都需要具备哪些知识呢

06:54.560 --> 06:55.560
非常的简单

06:55.560 --> 06:57.560
也就是我们之前学过的

06:57.560 --> 07:00.560
atml csjs

07:00.560 --> 07:03.560
这个前端常用的三件课

07:03.560 --> 07:05.560
只要是掌握一个前端基础的话

07:05.560 --> 07:06.560
这个效果我们

07:06.560 --> 07:09.560
大家是都可以实现的

07:09.560 --> 07:11.560
好的 那我再来说一下

07:11.560 --> 07:13.560
咱们马上要进行代码编写了

07:13.560 --> 07:14.560
那么代码编写

07:14.560 --> 07:16.560
我们的流程是什么样子呢

07:16.560 --> 07:17.560
首先啊

07:17.560 --> 07:18.560
我们以后呢

07:18.560 --> 07:21.560
会做一个简单的徐求分析

07:21.560 --> 07:22.560
其次呢

07:22.560 --> 07:23.560
是完成我们一个

07:23.560 --> 07:25.560
静态界面的一个排版

07:25.560 --> 07:27.560
再添加一些CSS的样式

07:27.560 --> 07:28.560
最后实现

07:28.560 --> 07:31.560
我们js的一个效果添加

07:31.560 --> 07:32.560
那这样呢

07:32.560 --> 07:33.560
我们就会基本完成

07:33.560 --> 07:34.560
整个案例的制作了

07:34.560 --> 07:35.560
那么下节课呢

07:35.560 --> 07:38.560
就开始我们一个代码部分的编写

07:38.560 --> 07:40.560
我们这节课先到这里

