WEBVTT

00:01.140 --> 00:03.780
各位同学 晚上好

00:03.780 --> 00:10.980
然后今天的话要给大家带来的是一个图片拖动验证的一个demo

00:10.980 --> 00:15.980
然后我们这些颗的话先来看一下这个效果

00:15.980 --> 00:20.340
然后以及就是我们做这个效果需要那些前置的知识

00:20.340 --> 00:24.180
我们先来看效果 效果的话其实比较简单

00:24.180 --> 00:26.740
这里的话其实像这个

00:26.740 --> 00:30.340
这个的话其实大家平时上网的时候都是遇到过的

00:30.500 --> 00:33.780
对不对 比如特别是在登录的时候啊 登录的时候

00:33.780 --> 00:36.900
然后接下来的话你输入了帐号密码点击登录

00:36.900 --> 00:42.740
他为了就是看你是否是这个人机啊 是否是真实的这个人在登录

00:42.740 --> 00:47.220
而不是机器他一般就会设置以前的话是那个验证码

00:47.220 --> 00:52.180
现在的话就是啊很多网站的话就是设置了一个像这样子的图片验证

00:52.180 --> 00:54.180
那你这边的话需要做的是什么呢

00:54.180 --> 00:58.980
你需要做的是按住这个滑块啊 从左到右这样子拖动对吧

00:59.060 --> 01:01.940
然后把这个滑块拖动到对应的位置

01:01.940 --> 01:05.140
然后接下来鼠标放开 是不是验证成功啊

01:05.140 --> 01:07.940
那如果的话你这边我重新刷新一下

01:08.980 --> 01:12.180
我这边的话如果没有把它拖动到正确的位置啊

01:12.180 --> 01:15.700
比如我现在拖动到这个位置 我鼠标就放开了

01:15.700 --> 01:18.820
啊 那他现在的话是不是就会回到初始的地方

01:18.820 --> 01:22.980
然后接下来这边的话就会告诉你验证失败啊

01:22.980 --> 01:26.340
所以我们这边的话就是使用这个原生的JS

01:26.660 --> 01:29.700
把这个图片拖动验证的这个效果

01:29.700 --> 01:31.700
我们把它做一下啊

01:31.700 --> 01:34.980
但是在做这个案例之前呢

01:34.980 --> 01:37.220
我们需要讲一些东西啊

01:37.220 --> 01:38.020
因为有些东西的话

01:38.020 --> 01:40.260
大家是之前没有接触过的啊

01:40.260 --> 01:44.180
所以说我们有一些前置知识要给大家介绍一下

01:44.180 --> 01:46.340
那我这边的话做了一个文档啊

01:46.340 --> 01:48.020
大家可以看一下呃

01:48.020 --> 01:49.780
这边的话有这么几个前置知识

01:49.780 --> 01:53.380
首先第一个就是h5新增的这个查询API

01:54.420 --> 01:56.100
啊以前的话大家用的都是什么呢

01:56.100 --> 01:59.860
都是用的是document.getElementByID

01:59.860 --> 02:05.460
document.get呃这个ElementByTargramByName啊

02:05.460 --> 02:06.500
那我们这边的话

02:06.500 --> 02:12.180
h5新增了两个这个查询API非常的方便啊

02:12.180 --> 02:15.620
然后还有就是就是我们这边的话会用的这个css精灵图

02:16.500 --> 02:18.420
说这边的话大致给大家介绍一下

02:18.420 --> 02:20.260
什么是css精灵图

02:20.260 --> 02:22.260
那还有就是css的过渡效果

02:22.980 --> 02:27.140
以及这个随机数的这个计算公式啊

02:27.140 --> 02:27.780
好那我们这边

02:27.780 --> 02:28.980
我们就一个一个来看

02:30.900 --> 02:32.820
啊那么我们首先的话来看第一个

02:33.620 --> 02:37.380
第一个的话html5新增的这个查询API啊

02:37.380 --> 02:40.020
这两个这两个的话非常好用啊

02:40.020 --> 02:42.260
一个是这个query selector

02:42.260 --> 02:44.900
一个是query selector all

02:44.900 --> 02:45.940
它是什么呢

02:45.940 --> 02:50.580
它就是支持你使用那个css的语法来查询啊

02:51.140 --> 02:54.420
大家知道我们的那个css里面是有很多选择器

02:54.980 --> 02:56.980
对不对啊ID选择器

02:56.980 --> 02:58.900
然后内选择器啊

02:58.900 --> 03:03.540
然后包括css3还会新增了很多各种各样的选择器

03:04.100 --> 03:06.340
然后使用这个选择器来查询的话

03:06.340 --> 03:08.020
就会非常的方便啊

03:08.020 --> 03:08.980
我给大家举个例子

03:09.540 --> 03:11.700
比如说我们这边回到我们这边啊

03:11.700 --> 03:12.660
我这边的话

03:12.660 --> 03:14.100
我先新开个窗口啊

03:16.190 --> 03:16.990
好新开一个

03:17.950 --> 03:19.870
新开然后我新建一个文件

03:22.660 --> 03:24.420
呃我就建在桌面上啊

03:24.420 --> 03:26.900
比如说index.html

03:28.660 --> 03:29.860
ok好

03:30.660 --> 03:32.100
然后我在这边

03:32.100 --> 03:32.820
我在这边的话

03:32.820 --> 03:35.620
我比如说写一个这个Uair

03:35.620 --> 03:38.580
Uair然后接下来给一个给个类吧

03:38.580 --> 03:39.620
比较taste的

03:39.620 --> 03:42.020
那下面有立立的话

03:42.020 --> 03:43.940
然后接下来画这边downer

03:45.540 --> 03:50.100
呃立成一个成一个5吧

03:50.100 --> 03:51.060
ok好

03:51.220 --> 03:51.860
然后现在的话

03:51.860 --> 03:54.100
我这边是不是就是有一个无需列表

03:54.900 --> 03:55.540
对吧

03:55.540 --> 03:56.340
好那现在的话

03:56.340 --> 03:58.260
我要选择这个Uair

03:58.260 --> 03:59.620
下面的立啊

03:59.620 --> 04:01.220
那我这边让我来写

04:01.220 --> 04:03.060
这边的话就是script

04:04.020 --> 04:05.300
然后在这个位置的话

04:05.300 --> 04:07.380
我就可以怎么怎么来呢

04:07.380 --> 04:07.860
以前的话

04:07.860 --> 04:11.140
你就只能用document.getElement

04:11.140 --> 04:12.740
byclassName

04:12.740 --> 04:14.900
然后选择到这个class

04:14.900 --> 04:16.340
那你现在的话就可以这样子

04:16.980 --> 04:19.860
document.query

04:20.660 --> 04:21.380
selector

04:22.660 --> 04:23.300
query

04:23.940 --> 04:26.420
然后selector

04:26.420 --> 04:28.260
啊然后接下来在这里面

04:28.260 --> 04:28.820
这里面的话

04:28.820 --> 04:31.780
你就可以传入这个选择器啊

04:31.780 --> 04:32.500
比如这边的话

04:32.500 --> 04:33.940
点taste

04:34.580 --> 04:35.300
下面的立

04:35.940 --> 04:38.100
看到没有啊就非常的方便

04:38.100 --> 04:38.740
啊那我们这边

04:38.740 --> 04:39.860
让我们来看一下

04:40.500 --> 04:43.060
哇一个这个立等于

04:43.060 --> 04:43.700
然后接下来

04:43.700 --> 04:44.660
我们这边的话

04:44.660 --> 04:46.340
把它打印出来看一下

04:46.340 --> 04:47.780
console.log立

04:48.820 --> 04:49.460
好保存

04:49.940 --> 04:50.580
保存了之后

04:50.580 --> 04:51.060
然后这样

04:51.060 --> 04:53.220
我们在这个浏览器里面

04:53.220 --> 04:54.260
啊我们过来看一眼

04:57.460 --> 04:58.660
呃好这边打开了

04:58.660 --> 04:59.940
哈打开之后

04:59.940 --> 05:01.940
然后我们这边过来看一下

05:04.100 --> 05:05.380
啊这里我把这个放大一点

05:07.300 --> 05:08.260
OK你看

05:08.260 --> 05:09.460
这边让是不是第一个立

05:10.020 --> 05:10.820
就选择中了

05:11.940 --> 05:12.420
看到没有

05:13.300 --> 05:14.660
第一个立就选择中了

05:14.660 --> 05:16.900
好当有的同学会觉得很奇怪啊

05:16.900 --> 05:18.900
你这边query selector

05:18.900 --> 05:20.740
点taste下面的立

05:20.740 --> 05:22.180
那下面的立不是应该是

05:22.180 --> 05:23.300
整个这一块吗

05:23.860 --> 05:26.260
怎么会只选择中一个呢

05:26.260 --> 05:27.700
啊他这样子是这样子的

05:27.700 --> 05:29.540
就是query selector的话

05:29.540 --> 05:32.980
他只会选择中第一个符合条件的

05:32.980 --> 05:34.260
啊笔记给他记一波

05:34.260 --> 05:39.860
哈就是query selector selector

05:42.340 --> 05:47.300
只会只会选择中

05:47.300 --> 05:50.420
就是第一个符合条件的

05:52.180 --> 05:53.780
啊那我如果比如说

05:53.780 --> 05:55.220
我有这么多个

05:55.220 --> 05:56.820
啊我这边是不是有五个立

05:56.820 --> 05:58.260
有五个立那我五个立

05:58.260 --> 05:59.860
我都想选择中怎么办了

05:59.860 --> 06:01.460
啊这边上你就可以使用query

06:02.100 --> 06:04.020
这个selector all

06:04.020 --> 06:04.900
啊比如说我们这边

06:05.620 --> 06:06.980
哇一个lease

06:07.860 --> 06:09.620
等于一个document

06:10.100 --> 06:11.140
点query

06:12.100 --> 06:13.060
query

06:14.100 --> 06:16.020
然后selector all

06:16.820 --> 06:19.300
看到没有后面就加了一个这个all

06:19.300 --> 06:22.020
然后点taste下面的立

06:22.020 --> 06:23.380
啊然后这样我们这边上

06:23.380 --> 06:24.180
我们来打印一下

06:24.820 --> 06:26.500
cancel.log

06:28.100 --> 06:28.980
这个lease

06:31.950 --> 06:32.350
lease

06:33.070 --> 06:35.230
ok好然后保存

06:35.230 --> 06:36.830
保存了回到这边刷新

06:37.550 --> 06:39.550
你可以看到第二次打印的时候

06:39.550 --> 06:41.950
你看是不是五个立都选择中了

06:42.590 --> 06:45.470
看到没有啊五个立就都选择中了

06:45.470 --> 06:46.430
啊这个的话就是啊

06:47.230 --> 06:50.750
嗯h5新增的这个啊query selector

06:50.750 --> 06:52.590
和query selector all

06:52.590 --> 06:54.110
你可以使用这个啊

06:54.190 --> 06:55.790
一旦不用这个的话也可以

06:56.510 --> 06:57.790
不用当然也可以啊

06:57.790 --> 06:59.630
你用以前的方式也行

06:59.630 --> 07:02.830
但是呢你用这种方式会更方便一些

07:02.830 --> 07:03.230
对吧

07:03.710 --> 07:05.790
好好这边的话

07:05.790 --> 07:06.350
复制一份

07:09.410 --> 07:11.570
然后我把这个注释改一下啊

07:11.570 --> 07:14.130
这边的话query selector all

07:14.130 --> 07:15.650
他是会选择中

07:17.090 --> 07:22.370
会选择中这个所有

07:23.330 --> 07:27.970
符合要求的这个元素对吧

07:27.970 --> 07:30.450
好我把这个的话把这个笔记啊

07:30.450 --> 07:31.410
我把它补充到

07:32.130 --> 07:33.810
补充到我们的这个markdown里面

07:34.610 --> 07:35.570
在这个位置

07:37.250 --> 07:39.410
ok好势力如下

07:41.570 --> 07:43.650
势力如下

07:46.460 --> 07:47.500
ok好

07:48.140 --> 07:48.860
然后回头的话

07:48.860 --> 07:51.180
我这边那就封装了两个函数啊

07:51.180 --> 07:52.620
这个的话你看得懂你就看

07:53.100 --> 07:53.900
你看不懂的话

07:53.900 --> 07:56.780
你就老老实实的这样子来获取也可以

07:56.780 --> 07:58.380
但我相信大家应该是看得懂的

07:58.940 --> 08:01.100
这边的话就是封装了两个函数而已

08:01.100 --> 08:02.300
啊这边的话

08:02.300 --> 08:04.300
这边一个叫做downer的函数

08:04.300 --> 08:05.020
然后你这边的话

08:05.020 --> 08:07.500
就是传你的这个选择器过来

08:07.500 --> 08:09.100
然后我这边是不是就调的是

08:09.100 --> 08:10.940
document.query selector

08:11.420 --> 08:12.540
啊然后这边的话

08:12.940 --> 08:13.740
downer downer

08:13.740 --> 08:15.020
我这边呢就是调的是

08:15.660 --> 08:16.940
query selector all

08:17.660 --> 08:18.460
对吧

08:18.460 --> 08:21.180
ok啊这是第一个前置知识

08:21.820 --> 08:23.180
啊你这边的话听了之后

08:23.180 --> 08:24.540
你可以把视频暂停一下

08:25.100 --> 08:25.980
暂停一下之后

08:25.980 --> 08:27.900
然后你自己试一试

08:28.780 --> 08:29.100
好

08:29.820 --> 08:32.140
然后接下来第二个前置知识

08:32.140 --> 08:33.820
第二个前置知识是什么呢

08:33.820 --> 08:35.340
就是这个精灵图

08:36.140 --> 08:39.340
啊这个css sprit

08:39.900 --> 08:42.540
这个sprit的话这个翻译很多

08:42.540 --> 08:44.940
有的翻译成css精灵图

08:44.940 --> 08:47.260
有的翻译成这个血币图

08:47.260 --> 08:50.780
然后也有叫这个css拼图技术

08:50.940 --> 08:51.900
为什么叫血币图

08:51.900 --> 08:52.780
有的人说

08:52.780 --> 08:53.660
为什么叫血币

08:53.660 --> 08:55.260
因为那个你喝的那个血币

08:55.980 --> 08:57.660
他的那个英文是不是就是sprit

08:58.300 --> 08:59.340
对不对啊

08:59.340 --> 09:01.500
所以有的人就把它叫做血币图

09:01.500 --> 09:03.180
那这个究竟是什么意思呢

09:03.180 --> 09:04.860
你看我这边写的有

09:04.860 --> 09:08.060
它是一种图像拼合技术

09:08.780 --> 09:09.980
啊那有的人会问什么

09:09.980 --> 09:11.740
叫做图像拼合技术

09:11.740 --> 09:13.020
啊其实很简单

09:13.020 --> 09:13.900
就什么意思呢

09:13.900 --> 09:15.500
它就是将小图标

09:16.300 --> 09:18.300
它其实主要是指小图标

09:18.300 --> 09:20.300
把小图标干嘛呢

09:20.300 --> 09:22.860
合并到一张图片上面

09:23.660 --> 09:25.500
啊全部合并到一张图片上面

09:25.500 --> 09:26.220
就像这个样子

09:27.100 --> 09:28.460
看到没有你看我这边有张图

09:29.100 --> 09:31.100
啊你看我这边是不是有很多的表情

09:31.660 --> 09:32.140
对不对

09:32.140 --> 09:35.180
我就把这些表情全部放在一张图片里面

09:35.660 --> 09:36.860
放在一张图片里面

09:36.860 --> 09:37.740
然后呢

09:37.740 --> 09:41.580
然后我们就利用css的背景定位

09:42.140 --> 09:45.180
啊来显示需要的这个图片的这个部分

09:45.820 --> 09:47.820
啊我们的那个css里面

09:47.820 --> 09:48.620
有一个属性

09:48.620 --> 09:50.940
叫做ban光的position

09:51.900 --> 09:53.980
通过这个ban光的position的话

09:53.980 --> 09:57.100
就可以就是定位这个背景图的这个位置

09:57.900 --> 10:00.140
好那这个技术有什么用呢

10:00.540 --> 10:02.380
啊这个技术的话有这么几个优点

10:02.380 --> 10:03.180
你看一下

10:03.180 --> 10:06.300
首先的话减少这个图片的这个字节

10:07.020 --> 10:08.780
啊然后第二个的话就是减少

10:08.780 --> 10:10.700
网页的http请求数

10:11.180 --> 10:13.020
啊这个的话可能有的同学不知道啊

10:13.420 --> 10:15.100
就是我们平时上网的时候

10:15.580 --> 10:16.700
网页里面是不是有图片

10:17.420 --> 10:20.540
啊然后你这个网页里面没有一张图片

10:20.940 --> 10:24.700
他就会重新去发一次请求去请求这张图片

10:25.340 --> 10:27.900
啊但也有的同学也听不懂在说什么

10:28.220 --> 10:29.900
啊总之你理解反正就这样子

10:30.460 --> 10:33.420
啊你上网的话那个网页可以更快的呈现出来

10:33.820 --> 10:35.260
你能够理解这个就可以了

10:35.580 --> 10:37.660
好吧那第三个就是什么

10:37.660 --> 10:39.980
第三个就是解决了网页设计师

10:40.460 --> 10:41.900
命名上的困扰啊

10:41.900 --> 10:44.300
因为以前的话你给每个要取名字对吧

10:44.300 --> 10:46.460
你要给这个图片取个名字

10:46.940 --> 10:48.460
你要给这个图片取个名字

10:48.700 --> 10:51.820
你要给这个图片取个名字那就很烦对吧

10:51.820 --> 10:55.660
那这这边的话我现在把它合并成这个一张图片了

10:55.660 --> 10:58.140
那我是不是只需要给这张图片取名字就可以了

10:58.860 --> 11:01.820
对吧啊然后还有就是更换这个

11:02.300 --> 11:06.060
风格方便啊这边反正列举了四个优点

11:06.460 --> 11:07.500
大致看一看

11:08.140 --> 11:10.060
然后他的这个语法是什么呢

11:10.060 --> 11:11.500
啊语法其实很简单

11:11.820 --> 11:14.940
这边使用的就是边光的position

11:15.580 --> 11:17.020
啊边光的position

11:17.020 --> 11:20.460
然后接下来第一个字是这个x是走

11:21.020 --> 11:21.980
x是走的坐标

11:22.540 --> 11:25.020
第二个字是y走的坐标

11:25.820 --> 11:27.340
啊然后接下来你就只需要

11:27.900 --> 11:29.820
这个调这两个值就可以了

11:30.460 --> 11:32.300
啊只需要调这两个值就可以了

11:32.300 --> 11:33.580
我这边取了个例子啊

11:34.300 --> 11:35.260
取了个例子

11:35.260 --> 11:36.940
比如说这个是我们的精灵图

11:37.820 --> 11:39.100
这个是我们的精灵图

11:39.100 --> 11:42.540
好然后接下来的话我这边的话有一个这个div看到没有

11:43.260 --> 11:44.700
我这边有个div

11:44.780 --> 11:45.660
有个div的话

11:45.660 --> 11:49.980
然后这样我就设置这个div的背景图为这张图片啊

11:49.980 --> 11:52.460
为这张图片那他是不是显示不完啊

11:53.420 --> 11:54.300
你仔细想一想

11:54.860 --> 11:56.700
他是不是显示不完对不对

11:56.700 --> 11:58.060
所以他就只能显示什么呢

11:58.060 --> 11:59.420
他就只能显示这个图

12:00.540 --> 12:03.660
啊就是你这边让你设置那个overflow height

12:04.220 --> 12:04.780
超出了

12:04.780 --> 12:06.380
然后不能就看不到啊

12:06.380 --> 12:08.700
其实他本来自然而然他也看不到啊

12:08.700 --> 12:09.740
他是看不到的

12:09.740 --> 12:11.740
那接下来你这个div本来就很小嘛

12:12.300 --> 12:13.580
对吧很小

12:13.660 --> 12:17.820
所以他这边的话就是只能显示这个这个笑脸

12:18.540 --> 12:20.700
然后回头的话我就可以通过设置什么呢

12:20.700 --> 12:23.580
我可以通过设置这个边光的position

12:24.140 --> 12:25.580
啊比如比如举个例子

12:25.580 --> 12:27.180
你看我这边呢

12:27.180 --> 12:31.740
我这个div他宽高都是60啊宽高都是60

12:31.740 --> 12:33.260
然后我这边设置什么呢

12:33.260 --> 12:36.620
设置边光的position-60

12:37.980 --> 12:38.780
看到没有

12:38.780 --> 12:39.420
-60

12:39.420 --> 12:40.860
啊这边应该加个p差啊

12:40.860 --> 12:42.060
应该加个p差

12:42.540 --> 12:43.660
-60

12:43.660 --> 12:45.020
啊我设置了这个之后

12:45.020 --> 12:45.980
然后接下来你看

12:45.980 --> 12:47.420
他现在就显示什么

12:47.420 --> 12:49.100
是不是显示第二个表情呢

12:50.140 --> 12:50.780
对不对

12:50.780 --> 12:53.180
你看他的背景图就往左边啊

12:53.180 --> 12:55.980
就往左边走了60个像素

12:55.980 --> 12:58.140
他就显示第二个表情了

12:58.140 --> 12:59.660
啊那依此类推

12:59.660 --> 13:01.500
你要显示就后面的表情的话

13:01.500 --> 13:05.740
你是不是就修改这边x軸和y軸的这个值就可以了

13:06.380 --> 13:07.820
比如我这边还取了个例子

13:08.860 --> 13:09.820
啊比如说

13:09.820 --> 13:11.580
如果想要显示下面的图形

13:11.580 --> 13:12.540
比我们要显示这个

13:14.140 --> 13:14.940
要显示这个

13:15.580 --> 13:17.900
那这个x轴的话就应该是多少

13:18.540 --> 13:21.820
x轴的话是不是就是应该是-120

13:22.460 --> 13:22.860
对不对

13:22.860 --> 13:23.180
为什么呢

13:23.180 --> 13:24.620
因为一个图形是60

13:24.620 --> 13:25.340
这个是60

13:25.900 --> 13:26.940
这个是60

13:26.940 --> 13:28.700
那接下来60加60就120

13:28.700 --> 13:30.380
是不是就是应该是-120

13:30.380 --> 13:30.700
对不对

13:30.700 --> 13:32.060
你要注意一下是-120

13:32.060 --> 13:33.180
-120的这个背景图

13:33.180 --> 13:34.940
他才往左边走啊

13:35.660 --> 13:36.620
-120

13:36.620 --> 13:38.380
那高的话是不是就是应该是

13:38.380 --> 13:40.220
高的话就是应该是-60

13:41.020 --> 13:41.420
对不对

13:41.820 --> 13:42.780
-60

13:42.780 --> 13:45.340
啊这个的话就是这个精灵图

13:45.980 --> 13:47.740
精灵图我们在哪会用到呢

13:47.740 --> 13:48.620
我们在这个位置

13:50.220 --> 13:52.700
在这边啊你看这边这个方块

13:53.580 --> 13:56.700
这个方块显示的是哪个位置

13:56.700 --> 13:59.020
是不是显示的是这个位置的图像

13:59.580 --> 14:00.460
对不对啊

14:00.460 --> 14:02.620
这个方块啊这个小方块

14:02.620 --> 14:05.660
其实背景图的话也是设置的这一块

14:07.100 --> 14:08.140
明白没有啊

14:08.140 --> 14:09.180
你看到这个小方块

14:09.180 --> 14:10.380
好像只有这个

14:10.380 --> 14:12.620
后面这个背景图的一块是吧

14:12.620 --> 14:14.300
你就不知道该怎么设置了

14:14.300 --> 14:16.140
其实这个小方块

14:16.140 --> 14:18.940
他的背景图也是这个背景图

14:19.660 --> 14:21.260
你设置为这个背景图之后

14:21.260 --> 14:22.460
然后接下来你通过那个

14:22.460 --> 14:24.140
边光的Position

14:24.140 --> 14:25.980
进行一个定位就可以了

14:27.100 --> 14:28.540
明白没有啊

14:28.540 --> 14:29.820
然后你这边他可以

14:29.820 --> 14:31.580
自己把视频暂停了

14:31.580 --> 14:33.820
也可以自己试一试啊

14:36.430 --> 14:37.550
接下来的话下一个

14:38.110 --> 14:40.590
下一个的话这个就用的非常多了

14:40.670 --> 14:43.310
这个的话是CSS过渡效果

14:44.030 --> 14:45.470
这个的话用的非常多

14:45.470 --> 14:48.030
这个也是CSS3新增的

14:48.590 --> 14:49.950
它是干嘛的呢

14:49.950 --> 14:51.310
你看我这边写的有

14:51.310 --> 14:53.950
它就是可以让我们在样式切换的时候

14:53.950 --> 14:54.990
更加的湿化

14:55.790 --> 14:57.230
不至于两个样式

14:57.230 --> 14:58.990
你切换的时候很生硬

14:59.550 --> 15:00.910
我这边快速写一个

15:00.910 --> 15:01.870
你可以感受一下

15:02.590 --> 15:03.790
比如说我这边的话

15:04.430 --> 15:06.350
我把这一块删了啊

15:06.350 --> 15:08.110
这里不需要用这个GS

15:08.670 --> 15:09.950
我这边让我写个D2V

15:10.750 --> 15:11.790
写个D2V之后

15:11.790 --> 15:12.590
然后接下来的话

15:12.590 --> 15:14.110
我这边的话Style

15:14.110 --> 15:15.790
然后我这边D2V

15:15.790 --> 15:17.630
我设置宽比如说100

15:18.270 --> 15:19.790
高100

15:19.790 --> 15:21.710
好然后接下来给个背景颜色

15:21.710 --> 15:23.550
Bangwon的Connor

15:23.550 --> 15:24.430
Red

15:24.430 --> 15:25.070
ok

15:25.070 --> 15:26.670
好然后接下来的话

15:26.670 --> 15:28.750
这边的话就应该有这么一个D2V了

15:29.710 --> 15:30.110
刷新

15:32.110 --> 15:32.590
哦这里

15:33.390 --> 15:33.790
100

15:34.910 --> 15:35.470
好刷新

15:36.190 --> 15:36.830
对吧

15:36.830 --> 15:37.870
好然后接下来的话

15:37.870 --> 15:39.150
我要设置一个效果

15:39.150 --> 15:40.110
什么效果呢

15:40.190 --> 15:41.630
这边的话D2V

15:41.630 --> 15:43.630
我要让它Harver的时候

15:43.630 --> 15:44.270
我干嘛呢

15:44.270 --> 15:46.110
我去改变它的高度

15:46.110 --> 15:47.790
我让它变成200

15:49.070 --> 15:49.950
然后接下来保存

15:50.590 --> 15:51.390
保存了之后

15:51.390 --> 15:53.310
然后接下来这边过来看一下

15:53.310 --> 15:55.470
当我鼠标移上去的时候

15:56.430 --> 15:57.390
是不是效果是有的

15:58.270 --> 15:58.990
对吧

15:58.990 --> 16:00.270
效果是有的

16:00.270 --> 16:01.550
但是你看现在的话

16:01.550 --> 16:03.070
它这个效果就很生硬

16:03.710 --> 16:04.670
我移上去之后

16:04.670 --> 16:07.070
它瞬间就变成了200

16:07.070 --> 16:07.950
那怎么办呢

16:07.950 --> 16:09.230
那这个时候我就可以给它

16:09.310 --> 16:10.590
设置一个过渡

16:10.590 --> 16:11.950
在这个D2V上面

16:11.950 --> 16:12.990
我设置一个

16:12.990 --> 16:14.590
叫做Trization

16:14.590 --> 16:16.030
你先来感受一下

16:16.030 --> 16:18.110
这个属性名叫做Trization

16:18.110 --> 16:18.830
那接下来这边的话

16:18.830 --> 16:19.390
给一个o

16:19.950 --> 16:21.230
代表所有的属性

16:21.230 --> 16:22.830
我都要应用这个过渡

16:22.830 --> 16:24.590
那接下来再给个时间

16:24.590 --> 16:25.070
时间的话

16:25.070 --> 16:26.190
我比如说给个一秒

16:26.830 --> 16:27.550
就ES

16:28.190 --> 16:28.510
保存

16:29.230 --> 16:30.030
保存了之后

16:30.030 --> 16:31.390
然后接下来这边刷新一下

16:31.390 --> 16:32.030
好注意

16:32.030 --> 16:33.310
我现在鼠标移上去

16:34.270 --> 16:35.070
看到没有

16:35.070 --> 16:36.510
它是不是就是会有一个

16:36.510 --> 16:38.350
缓慢的这个过渡效果

16:39.390 --> 16:40.910
你看这里就会有一个

16:40.910 --> 16:42.510
缓慢的过渡效果

16:42.510 --> 16:43.710
这个的话就是过渡

16:44.510 --> 16:45.150
你看

16:45.150 --> 16:46.670
是不是效果还是很明显

16:47.390 --> 16:47.630
好

16:47.630 --> 16:49.150
然后回到我们的这个笔记这里

16:50.190 --> 16:50.830
刚才的话

16:50.830 --> 16:52.510
其实你就快速的体验了一下

16:52.510 --> 16:53.630
这个Trization

16:54.190 --> 16:55.470
那这个Trization的话

16:55.470 --> 16:56.430
它具体的语法

16:56.430 --> 16:57.470
其实是这个样子的

16:58.110 --> 16:58.750
Poperty

16:59.310 --> 16:59.950
Duration

17:00.590 --> 17:01.950
Taming Function

17:01.950 --> 17:02.350
Delay

17:02.830 --> 17:04.270
分别代表什么意思呢

17:04.270 --> 17:05.550
首先这个Poperty

17:05.550 --> 17:06.350
Poperty就是

17:06.350 --> 17:08.670
你要应用的这个过渡效果

17:09.390 --> 17:11.870
哪些属性要应用这个过渡效果

17:12.750 --> 17:14.430
刚才我们填的是什么

17:14.430 --> 17:16.430
刚才我们填的是不是这个Or

17:16.990 --> 17:17.310
对吧

17:17.310 --> 17:18.910
Or代表所有的属性

17:18.910 --> 17:20.830
我都要应用这个过渡效果

17:20.830 --> 17:22.430
比如说我这边让我再来一个

17:22.430 --> 17:24.350
我让它变长的时候

17:24.350 --> 17:26.030
我再给把它的这个

17:26.590 --> 17:28.030
Banguang的Color

17:29.150 --> 17:30.590
Banguang的Color把它变一下

17:30.590 --> 17:31.390
变成这个Blue

17:32.350 --> 17:32.830
那么这

17:33.390 --> 17:35.390
就是这个属性的变化

17:35.390 --> 17:37.550
它就也会应用过渡效果

17:37.710 --> 17:38.910
我们保存一下

17:38.910 --> 17:39.790
我们过来看一下

17:40.510 --> 17:41.070
然后走

17:42.110 --> 17:42.910
看到没有

17:42.910 --> 17:45.710
你看它从红色到蓝色

17:45.710 --> 17:46.990
是不是也有一个过渡效果

17:47.790 --> 17:48.190
对不对

17:48.750 --> 17:49.470
好

17:49.470 --> 17:50.350
然后接下来

17:50.350 --> 17:51.870
这边的话Duration

17:51.870 --> 17:52.590
这个的话就是

17:53.230 --> 17:55.310
你在多长的时间里面

17:55.310 --> 17:56.430
完成这个过渡

17:56.430 --> 17:58.030
那我们刚才是不是设置的是

17:58.030 --> 17:58.510
一秒

17:59.230 --> 18:00.590
然后后面两个属性

18:00.590 --> 18:01.630
我们都没有设置

18:02.430 --> 18:03.630
一个的话就是指的是

18:03.630 --> 18:05.790
你这个过渡的这个效果

18:05.790 --> 18:07.230
你是平滑过渡

18:07.710 --> 18:10.270
还是这个就是比较先快后慢

18:10.270 --> 18:12.430
或者先慢后快

18:12.430 --> 18:14.030
这个它是可以设置的

18:14.030 --> 18:15.150
但是我这边的话

18:15.790 --> 18:17.070
大家的话就是

18:17.070 --> 18:18.510
在做这个demo的时候

18:18.510 --> 18:19.470
先不用设置

18:20.110 --> 18:21.150
这个的话后面

18:21.150 --> 18:24.270
大家正式学那个CSS3的时候

18:24.270 --> 18:26.270
老师会详细给大家介绍的

18:26.270 --> 18:28.750
我这边就不做过多的这个介绍

18:28.750 --> 18:30.750
我们这边的话就是最低程度的

18:31.310 --> 18:32.910
来学这些前置知识

18:34.270 --> 18:35.470
包括这个Delay

18:35.470 --> 18:37.230
Delay的话是就是延迟时间

18:38.510 --> 18:39.710
这个其实很简单

18:39.710 --> 18:40.990
我可以给大家看一下

18:40.990 --> 18:42.670
比如我后面再设一个时间

18:42.670 --> 18:44.430
比如我先过渡时间是不是一秒

18:44.430 --> 18:46.270
我再设置一个时间两秒

18:46.270 --> 18:48.990
那这个时间就是你的延迟时间

18:48.990 --> 18:50.510
也就是说两秒之后

18:50.510 --> 18:52.190
它才实现这个过渡

18:52.190 --> 18:53.950
比如我们这边我们过来看一下

18:53.950 --> 18:54.750
刷新

18:54.750 --> 18:56.190
好 鼠标一上去

18:56.190 --> 18:58.690
看了没有

18:58.690 --> 19:00.290
是不是两秒钟之后

19:00.290 --> 19:02.370
它是不是才实现这个效果

19:02.370 --> 19:03.650
然后鼠标一走

19:03.650 --> 19:06.910
对不对

19:06.910 --> 19:08.510
好

19:08.510 --> 19:10.830
然后这个就是关于这个过渡

19:10.990 --> 19:12.350
然后接下来这个按钮掩饰

19:12.350 --> 19:13.550
就是刚才那个按钮

19:14.110 --> 19:14.910
看了没有

19:14.910 --> 19:16.270
就是刚才那个按钮

19:16.270 --> 19:19.390
大家可以把那个视频暂停一下

19:19.390 --> 19:20.110
暂停一下

19:20.110 --> 19:20.910
然后接下来的话

19:20.910 --> 19:22.350
然后自己试一试

19:23.230 --> 19:25.790
我们那个哪个位置会用到这个呢

19:25.790 --> 19:26.590
我们这边的话

19:26.590 --> 19:28.030
这个位置会用到这个

19:28.030 --> 19:28.830
会用到这个过渡

19:28.830 --> 19:30.190
比如说你看我这边

19:30.190 --> 19:30.830
我这边的话

19:30.830 --> 19:31.950
我按住

19:31.950 --> 19:32.670
按住之后

19:32.670 --> 19:34.990
我不停的往右边拖动

19:34.990 --> 19:35.390
拖动

19:35.390 --> 19:36.990
然后现在是不是验证不同

19:36.990 --> 19:37.870
这个不成功

19:38.510 --> 19:39.310
不成功的话

19:39.470 --> 19:40.430
这样我这边的话

19:40.430 --> 19:42.270
我鼠标一放开

19:42.270 --> 19:42.830
你看

19:42.830 --> 19:46.030
它是不是会从这个位置

19:46.030 --> 19:47.470
滑动到这个位置

19:48.350 --> 19:48.830
对不对

19:48.830 --> 19:50.910
它怎么滑动过来的呢

19:50.910 --> 19:52.030
其实很简单

19:52.030 --> 19:54.510
就是改变这个方块

19:54.510 --> 19:55.790
它的一个Left值

19:56.590 --> 19:58.110
但是你如果直接

19:58.110 --> 19:59.550
改变它的Left值的话

19:59.550 --> 20:02.350
你给用户的感觉就是直接从这

20:02.350 --> 20:05.310
然后下一秒就直接变到这里来

20:05.310 --> 20:07.310
那我想让它有个滑动的效果

20:07.870 --> 20:09.870
那就是要使用这个过渡

20:10.830 --> 20:11.310
明白没有

20:12.270 --> 20:14.190
大家可以先试一下这个过渡

20:15.710 --> 20:17.230
然后最后一个

20:18.030 --> 20:18.910
最后一个这个

20:20.270 --> 20:21.230
前置知识

20:21.230 --> 20:21.950
这个是什么

20:21.950 --> 20:22.990
这个就是随机数

20:24.030 --> 20:24.510
随机数

20:25.150 --> 20:25.550
这个的话

20:25.550 --> 20:26.590
我们在哪会用到呢

20:26.590 --> 20:27.550
你看我这边

20:27.550 --> 20:28.510
我每次刷新

20:29.310 --> 20:30.750
是不是这个图片是不一样的

20:30.750 --> 20:31.070
对不对

20:31.070 --> 20:31.630
我再刷新

20:32.590 --> 20:32.910
刷新

20:33.550 --> 20:33.950
刷新

20:34.990 --> 20:35.390
看到没有

20:36.190 --> 20:36.910
刷新

20:37.070 --> 20:37.790
看到没有

20:37.790 --> 20:38.110
啊

20:38.110 --> 20:39.790
图片是不一样的

20:39.790 --> 20:41.390
也就是如果每一次夹载的话

20:41.390 --> 20:42.510
它这边是随机

20:43.070 --> 20:44.350
夹载了一张图片

20:44.910 --> 20:46.270
那这边上就会涉及到一个

20:47.150 --> 20:47.710
随机数

20:48.270 --> 20:49.150
那随机数的话

20:49.150 --> 20:50.670
这个怎么做呢

20:50.670 --> 20:51.310
很简单

20:51.310 --> 20:53.710
你就使用这个公式就可以了

20:53.710 --> 20:54.830
你看我这边有个公式

20:55.630 --> 20:56.670
Mass点Fro

20:57.390 --> 20:59.710
然后接下来Mass点Random

20:59.710 --> 21:01.470
成一个它的可能性数

21:02.270 --> 21:04.910
加上它的第一个可能值

21:04.910 --> 21:05.870
好这个什么意思

21:05.950 --> 21:06.830
我给你写一下

21:07.470 --> 21:08.030
例如

21:08.030 --> 21:09.550
我给你写两个例子你就明白了

21:10.430 --> 21:11.230
例如

21:11.230 --> 21:13.230
我们要求1到10

21:14.270 --> 21:16.110
之间的随机数

21:16.750 --> 21:17.710
好那接下来这边

21:18.270 --> 21:18.990
怎么写呢

21:18.990 --> 21:20.350
那你有套公式

21:20.350 --> 21:23.390
首先这边Mass点Fro

21:24.110 --> 21:24.910
对吧

21:24.910 --> 21:27.550
然后接下来的话Mass点Random

21:28.990 --> 21:30.110
掉这个方法

21:30.110 --> 21:31.710
然后成一个什么呢

21:31.710 --> 21:33.470
成一个你的可能性数

21:34.190 --> 21:35.470
你的可能性数的话

21:35.550 --> 21:36.190
1到10

21:36.750 --> 21:38.270
有多少种可能性

21:38.990 --> 21:39.950
是不是10种可能性

21:40.510 --> 21:41.150
对不对

21:41.150 --> 21:42.910
再加上第一个可能的值

21:43.310 --> 21:44.190
第一个可能值的话

21:44.190 --> 21:45.230
是不是应该是1

21:46.350 --> 21:46.670
对不对

21:47.310 --> 21:48.590
那这里的话就是

21:48.590 --> 21:50.110
你反正就是套这个公式

21:50.110 --> 21:52.030
你就可以求出任意

21:52.830 --> 21:55.390
两个这个范围之间的这个随机数

21:56.110 --> 21:56.670
那回头的话

21:56.670 --> 21:57.710
你那个图片

21:57.710 --> 22:00.590
我们就要生成这个随机的这个图片

22:01.230 --> 22:02.350
好

22:02.350 --> 22:04.270
这个就是我们整个这个

22:04.270 --> 22:05.470
前置的这个知识

22:06.030 --> 22:07.870
有了这些前置知识之后

22:07.870 --> 22:10.270
然后你在做这个案例的话

22:10.270 --> 22:12.350
就会让你更轻松一些

22:12.990 --> 22:14.110
更轻松一些

22:14.110 --> 22:14.750
这里的话

22:14.750 --> 22:16.510
大家就可以自己试一下

22:16.510 --> 22:18.190
把这个案例做一下

22:18.190 --> 22:20.270
我这边还有个图片切换

22:20.270 --> 22:21.470
比如你看我这边点击

22:22.110 --> 22:22.750
点击之后

22:22.750 --> 22:24.670
然后切换图片看到没有

22:24.670 --> 22:25.070
点击

22:25.630 --> 22:26.030
点击

22:26.670 --> 22:27.070
点击

22:27.710 --> 22:28.670
切换图片

22:28.670 --> 22:29.710
切换图片的同时

22:29.710 --> 22:30.430
你注意

22:30.430 --> 22:31.470
这个方块是不是

22:31.470 --> 22:32.670
它的位置也是随机的

22:33.550 --> 22:34.590
所以这个方块

22:34.590 --> 22:35.870
它的这个这个

22:35.870 --> 22:38.030
TOP值和LIFT值

22:38.590 --> 22:39.710
这也是要随机生成

22:40.350 --> 22:40.830
对不对

22:40.830 --> 22:41.950
要随机生成

22:41.950 --> 22:43.310
所以这边的话

22:43.310 --> 22:44.030
你需要注意

22:45.150 --> 22:45.550
好

22:45.550 --> 22:46.190
这里的话

22:46.190 --> 22:47.230
这个整个这个

22:48.350 --> 22:49.710
项目的这个演示

22:49.710 --> 22:51.310
这个效果的演示

22:51.310 --> 22:52.910
以及这个前置知识

22:52.910 --> 22:54.030
就讲完了

22:54.030 --> 22:54.190
好

22:54.190 --> 22:55.470
大家自己试一下吧

