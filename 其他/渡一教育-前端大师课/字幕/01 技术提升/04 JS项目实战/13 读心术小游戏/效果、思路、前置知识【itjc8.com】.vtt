WEBVTT

00:01.900 --> 00:06.220
我们这节课的话还是先把我们的这次这个案例

00:06.220 --> 00:09.300
我们这次这个案例是做的是一个独性数

00:09.300 --> 00:12.220
先把这个效果给大家看一下

00:12.220 --> 00:13.580
来到我们这边

00:13.580 --> 00:15.900
这边的话我已经把这个打开了

00:15.900 --> 00:17.420
这个是怎么玩的呢

00:17.420 --> 00:19.500
这个看上去有点复杂是吧

00:19.500 --> 00:21.500
看着有点复杂 其实很简单

00:21.500 --> 00:22.460
你看这边

00:22.460 --> 00:26.460
在心中任意选择一个两位数

00:26.460 --> 00:28.860
也就是说从10到99

00:28.860 --> 00:30.300
你自己选一个

00:30.540 --> 00:31.420
选一个之后

00:31.420 --> 00:33.020
然后接下来你不要说出来

00:33.020 --> 00:35.020
你反正选了之后你不要告诉我

00:35.020 --> 00:37.500
你自己想一个随便想一个

00:37.500 --> 00:38.460
想一个之后

00:38.460 --> 00:42.460
然后接下来你把这个两位数的个位和10位

00:42.460 --> 00:44.140
你把它加起来

00:44.140 --> 00:46.300
加起来是不是会得到一个值

00:46.300 --> 00:46.860
对不对

00:46.860 --> 00:47.900
得到这个值之后

00:47.900 --> 00:50.780
然后接下来你再用这个两位数去减去这个值

00:50.780 --> 00:52.700
是不是会得到一个新的数

00:52.700 --> 00:53.020
对不对

00:53.020 --> 00:53.820
我这边举个例子

00:53.820 --> 00:55.900
比如说你现在想的是71

00:55.900 --> 00:56.860
71的话

00:56.860 --> 00:58.460
你把个位和10位加起来

00:58.460 --> 01:00.060
是不是7加1等于8

01:00.140 --> 01:03.660
然后你用这个71去减去这个8

01:03.660 --> 01:04.460
会得到一个什么

01:04.460 --> 01:06.460
是不是会得到一个新的数字

01:06.460 --> 01:07.100
对不对

01:07.100 --> 01:08.620
得到一个新的数字之后

01:08.620 --> 01:11.020
然后接下来的话这个数字你就找

01:11.020 --> 01:11.820
这个数字的话

01:11.820 --> 01:14.780
这边是不是会对应一个图形

01:14.780 --> 01:15.340
对不对

01:15.340 --> 01:17.100
会对应一个这个图形

01:17.100 --> 01:20.780
我现在的话给你两秒钟时间

01:20.780 --> 01:22.700
你重新想一个吧

01:22.700 --> 01:24.060
你重新想一个

01:24.060 --> 01:24.380
好

01:24.380 --> 01:25.100
想一个之后

01:25.100 --> 01:26.940
然后接下来你按照我刚才说的步骤

01:26.940 --> 01:28.060
你来做

01:28.780 --> 01:29.580
做了之后

01:29.580 --> 01:31.260
然后接下来你去找了一个图形

01:31.980 --> 01:32.460
你去找

01:33.340 --> 01:33.820
找到没有

01:34.860 --> 01:35.740
应该差不多了

01:35.740 --> 01:36.780
应该找到了

01:36.780 --> 01:37.580
找到之后

01:37.580 --> 01:38.780
然后接下来看

01:38.780 --> 01:40.220
注意我这边点

01:40.940 --> 01:42.060
这边开始读你的新的

01:42.060 --> 01:42.940
你看

01:43.500 --> 01:44.700
是不是这个图形

01:45.980 --> 01:46.380
看到没有

01:46.940 --> 01:48.220
是不是就是这个图形

01:48.220 --> 01:49.340
我们可以再来玩一遍

01:50.140 --> 01:51.420
再来玩一遍

01:51.420 --> 01:52.460
是否再玩一次

01:52.460 --> 01:52.860
确定

01:53.980 --> 01:54.620
确定

01:54.620 --> 01:55.180
确定之后

01:55.180 --> 01:56.140
然后接下来

01:56.140 --> 01:56.940
你这边的话

01:57.020 --> 01:58.620
我再给你两秒钟时间

01:58.620 --> 01:59.980
你先随便想一个吧

02:00.700 --> 02:02.140
先随便想一个两位数

02:03.340 --> 02:04.060
然后接下来

02:04.060 --> 02:05.580
来做这个简法操作

02:06.860 --> 02:07.420
做了没有

02:08.700 --> 02:09.260
做了之后

02:09.260 --> 02:10.700
然后接下来找到这个

02:11.260 --> 02:13.340
得到的这个值所对应的这个图形

02:15.810 --> 02:16.610
找到图形没有

02:17.250 --> 02:18.450
找到这个图形之后

02:18.450 --> 02:19.490
然后接下来来了

02:19.490 --> 02:20.450
三

02:21.090 --> 02:21.730
二

02:21.730 --> 02:22.290
一

02:22.290 --> 02:22.690
走

02:24.690 --> 02:25.170
你看一下

02:25.810 --> 02:26.610
是不是这个图形

02:27.570 --> 02:28.450
是不是这个图形

02:29.490 --> 02:30.290
是不是很神奇

02:30.930 --> 02:32.210
至少我第一次玩的时候

02:32.210 --> 02:33.090
我觉得很神奇

02:33.730 --> 02:34.930
但是你真正真正知道

02:34.930 --> 02:35.810
它的原理之后

02:35.810 --> 02:36.290
你会觉得

02:37.010 --> 02:37.570
也就那样

02:38.130 --> 02:39.250
它这个什么原理呢

02:39.250 --> 02:41.010
它的原理其实很简单

02:41.970 --> 02:44.530
就是你的任意的这个两位数

02:45.650 --> 02:47.090
任意的这个两位数

02:47.090 --> 02:49.650
那接下来减去它的各位和实位

02:50.130 --> 02:51.810
那是不是会得到这个新的数

02:52.610 --> 02:53.170
对不对

02:53.170 --> 02:53.970
这个数的话

02:53.970 --> 02:54.930
一定是什么

02:55.090 --> 02:56.930
一定会是9的倍数

02:57.730 --> 02:59.570
它一定会是9的倍数

02:59.570 --> 03:01.090
说利用这个特性的话

03:01.090 --> 03:01.650
你就可以

03:02.210 --> 03:04.130
就可以做这个案例了

03:04.130 --> 03:05.090
这个独新数

03:05.090 --> 03:06.610
也就是你随便选哪个数

03:07.410 --> 03:08.290
随便选哪个数

03:08.290 --> 03:10.610
然后接下来你做了一顿这个操作之后

03:10.610 --> 03:11.970
你得到那个数

03:11.970 --> 03:12.770
它一定是什么

03:12.770 --> 03:14.050
一定是9的倍数

03:14.050 --> 03:16.450
所以我只需要把9的倍数的地方

03:16.450 --> 03:17.410
是把这个图案

03:18.770 --> 03:20.850
是不是给它这个弄成一样的就可以了

03:21.410 --> 03:21.810
对不对

03:21.810 --> 03:23.090
你看比较9981

03:23.570 --> 03:23.890
对不对

03:23.890 --> 03:25.010
大家这边90

03:25.650 --> 03:26.210
99

03:26.210 --> 03:27.250
从这开始

03:27.250 --> 03:28.850
98

03:29.410 --> 03:30.690
然后27

03:31.570 --> 03:32.050
看没有

03:32.610 --> 03:33.170
它的话

03:33.170 --> 03:34.610
其实原理就是这个样子的

03:35.170 --> 03:36.050
所以道理的话

03:36.050 --> 03:36.930
其实很简单

03:37.330 --> 03:37.970
但这个的话

03:37.970 --> 03:39.650
如果你不明白的话

03:39.650 --> 03:40.370
你玩这个的话

03:40.370 --> 03:41.890
你就会觉得很神奇

03:42.850 --> 03:43.970
你这边的话回头

03:43.970 --> 03:45.170
你把它做出来之后

03:45.170 --> 03:47.090
你可以就是找一些人

03:47.810 --> 03:48.930
他前提是他不知道

03:49.570 --> 03:51.330
那你可以在他面前让他玩一下

03:51.330 --> 03:52.690
他一定会觉得很神奇

03:53.890 --> 03:54.930
你玩的时候

03:54.930 --> 03:56.530
你还可以装模作样一下

03:56.530 --> 03:57.090
是吧

03:57.090 --> 03:58.530
我现在开始释法了呀

03:58.530 --> 03:59.250
之类的

03:59.250 --> 03:59.570
对不对

03:59.570 --> 04:00.530
巴拉巴拉

04:00.770 --> 04:01.090
OK

04:01.730 --> 04:01.890
好

04:01.890 --> 04:02.290
这个的话

04:02.290 --> 04:03.890
就是我们这个案例

04:04.370 --> 04:05.170
案例的效果

04:05.730 --> 04:06.610
独行说

04:06.610 --> 04:08.210
这个大家已经知道了

04:08.210 --> 04:08.930
对吧

04:08.930 --> 04:10.370
然后接下来老规矩

04:10.370 --> 04:11.490
在讲这个

04:12.450 --> 04:13.170
案例

04:13.170 --> 04:14.690
这个代码的之前

04:14.690 --> 04:17.090
我们这边的话先来讲这个前置的知识

04:17.730 --> 04:18.610
来到我们这个文档

04:19.730 --> 04:19.970
好

04:19.970 --> 04:20.770
我们这个文档的话

04:20.770 --> 04:21.250
然后接下来

04:21.250 --> 04:22.850
我们这边的话需要一些

04:22.850 --> 04:24.130
前置的知识

04:24.130 --> 04:25.890
需要什么前置的知识呢

04:25.890 --> 04:27.250
首先的话是一个

04:27.250 --> 04:30.130
HTML5新增的查询API

04:30.530 --> 04:33.410
QuerrySelector和QuerrySelectorO

04:34.290 --> 04:35.890
这两个API是什么呢

04:35.890 --> 04:36.850
这两个API的话

04:36.850 --> 04:37.970
其实就是

04:37.970 --> 04:39.970
它首先是H5新增的

04:39.970 --> 04:43.330
它可以让你使用这个CSS的

04:43.330 --> 04:43.810
语法

04:44.530 --> 04:47.330
就CSS选择去的这个语法

04:47.330 --> 04:49.010
来查找这个动物远说

04:50.530 --> 04:52.210
你想你以前在查找动物远说

04:52.210 --> 04:53.330
是不是很麻烦

04:53.330 --> 04:53.730
对不对

04:53.730 --> 04:56.690
通过这个document.getElementByID

04:56.690 --> 05:00.370
或者document.getElementByTogLim

05:00.370 --> 05:00.930
ByLim

05:01.650 --> 05:02.210
然后接下来

05:02.210 --> 05:04.210
还要就是一层一层去找

05:04.210 --> 05:06.210
first child, last child

05:06.210 --> 05:07.250
很麻烦

05:07.250 --> 05:08.050
那H5的话

05:08.050 --> 05:09.170
它就给你新增了

05:10.130 --> 05:10.850
这两个API

05:11.570 --> 05:13.170
它就非常的方便

05:13.170 --> 05:13.650
那我们这边

05:13.650 --> 05:14.370
让我们来看一下

05:16.450 --> 05:17.090
我这边的话

05:17.090 --> 05:20.130
我打开一个桌面上的这个

05:24.080 --> 05:24.720
在这里

05:24.800 --> 05:26.080
好,把这三楼重新写吧

05:27.280 --> 05:28.000
这边

05:28.000 --> 05:28.880
比如说我这边的话

05:28.880 --> 05:30.240
有一个这个UAL

05:30.240 --> 05:31.040
UAL的话

05:31.040 --> 05:32.080
然后下面我有个Li

05:33.840 --> 05:34.960
下面有这个Li

05:34.960 --> 05:35.600
Li的话

05:35.600 --> 05:36.800
然后接下来这边5

05:37.600 --> 05:38.480
这边是downer

05:39.440 --> 05:40.000
downer

05:40.000 --> 05:41.120
然后接下来成一个5

05:41.760 --> 05:42.400
OK

05:42.400 --> 05:43.680
我现在的话是不是生成了

05:43.680 --> 05:44.720
一个这样的结构

05:45.280 --> 05:46.320
好,然后接下来的话

05:46.320 --> 05:47.440
我这边的话script

05:48.240 --> 05:49.280
我这边的话

05:49.280 --> 05:50.960
哇,一个这个Li

05:51.600 --> 05:52.480
等于一个什么呢

05:52.480 --> 05:54.080
等于一个这个document

05:54.800 --> 05:57.280
点这个query selector

05:58.320 --> 06:00.000
query selector

06:00.000 --> 06:01.040
好,然后接下来的话

06:01.040 --> 06:01.360
这里

06:02.000 --> 06:02.400
这里的话

06:02.400 --> 06:03.280
你就可以传入什么呢

06:03.280 --> 06:06.160
你就可以传入这个sys的选择器了

06:06.160 --> 06:07.760
比如说我们这边是UAL

06:07.760 --> 06:08.480
下面的Li

06:09.200 --> 06:09.920
那接下来我们这边

06:09.920 --> 06:10.720
让我们来看一下

06:10.720 --> 06:12.640
能不能找到这个Li

06:12.640 --> 06:13.520
我们这边打印一下

06:14.080 --> 06:14.800
打印一下之后

06:14.800 --> 06:15.520
然后接下来我们这边

06:16.080 --> 06:16.960
在浏览器中

06:16.960 --> 06:17.920
把这个文件打开

06:18.960 --> 06:19.840
好,然后接下来

06:19.840 --> 06:20.720
我们这边我们来看一下

06:22.080 --> 06:22.640
你看这里

06:23.280 --> 06:23.680
你看

06:23.680 --> 06:25.440
是不是就成功的选择上了第一个Li

06:26.000 --> 06:26.720
看到没有

06:26.720 --> 06:27.920
第一个Li就成功

06:28.480 --> 06:29.600
选择上了

06:29.600 --> 06:30.480
但有了同学说

06:30.480 --> 06:31.440
我们这边的话

06:31.440 --> 06:33.600
UAL下面的Li不是有五个吗

06:33.600 --> 06:34.080
这个的话

06:34.080 --> 06:36.480
其实就是query selector的特点

06:37.120 --> 06:38.240
query selector的话

06:38.240 --> 06:38.720
它是什么呢

06:38.720 --> 06:40.400
它是只选择上

06:40.400 --> 06:41.600
匹配的第一个元素

06:42.400 --> 06:42.880
只会

06:44.560 --> 06:51.280
只会选择上匹配的第一个元素

06:52.000 --> 06:53.600
那我如果比如说

06:53.600 --> 06:54.560
我要选多个

06:54.560 --> 06:56.400
我选多个我怎么办呢

06:56.400 --> 06:57.760
好,这边上你可以用这个

06:57.760 --> 06:59.040
query selector O

06:59.680 --> 07:01.040
用这边1一个Li

07:01.760 --> 07:03.040
等于一个document

07:03.680 --> 07:06.560
点这个query selector O

07:07.440 --> 07:09.120
然后接下来这边上UAL

07:09.120 --> 07:09.760
下面的Li

07:11.200 --> 07:11.920
看到没有

07:11.920 --> 07:13.360
再加上我这边上我log

07:14.160 --> 07:15.360
log这个Li

07:16.240 --> 07:16.960
好,然后接下来

07:16.960 --> 07:18.000
我们这边让我们来看一下

07:18.000 --> 07:18.400
说心

07:19.040 --> 07:19.680
你看

07:19.680 --> 07:20.480
我这边的话

07:20.480 --> 07:22.480
第二次我是不是就是把五个Li

07:23.280 --> 07:24.480
是不是就都选择中了

07:25.040 --> 07:25.600
对不对

07:25.600 --> 07:27.120
说这里头就是

07:27.120 --> 07:30.240
如果是这个query selector O的话

07:32.190 --> 07:33.630
query selector O

07:33.630 --> 07:34.750
它会干嘛呢

07:34.750 --> 07:42.030
会选择中所有匹配的元素

07:43.390 --> 07:44.030
明白没有

07:44.030 --> 07:45.950
这个就是H5

07:45.950 --> 07:47.150
给我们新增的

07:47.150 --> 07:48.110
非常好用

07:48.110 --> 07:49.070
我现在的话

07:49.070 --> 07:50.030
选这个动物元素

07:50.030 --> 07:51.310
我全部都用这个了

07:51.470 --> 07:53.310
我基本不会用什么

07:53.310 --> 07:54.910
get element by id啊那些

07:56.030 --> 07:57.470
好,那既然我把这个的话

07:57.470 --> 07:59.070
放到你的这个笔记里面

08:01.330 --> 08:02.690
在笔记里面放一份

08:06.690 --> 08:06.930
OK

08:07.810 --> 08:09.570
这是第一个前置知识

08:09.570 --> 08:11.090
但你如果已经听了

08:11.090 --> 08:12.530
我另外两个课的话

08:12.530 --> 08:13.730
这个的话其实也讲不过了

08:14.210 --> 08:14.530
对吧

08:15.650 --> 08:16.290
那下一个

08:16.850 --> 08:18.930
下一个的话就是这个弹性盒子

08:19.650 --> 08:21.650
我们这边的话得用到这个弹性盒子

08:22.130 --> 08:23.810
这弹性盒子是什么呢

08:23.810 --> 08:25.490
弹性盒子你看我这边写的有

08:25.970 --> 08:27.810
它是在09年的时候

08:27.810 --> 08:30.690
算起来也十多年前了是吧

08:30.690 --> 08:34.050
然后w3c提出了一种新的方案

08:34.050 --> 08:34.770
叫做什么呢

08:34.770 --> 08:36.450
叫做flex布局

08:37.330 --> 08:38.690
那这个flex布局的话

08:38.690 --> 08:41.490
它就可以帮助我们轻松的完成

08:41.490 --> 08:43.730
这个页面上的各个布局

08:43.730 --> 08:45.730
我们这边让我们来看一下

08:45.730 --> 08:46.690
这什么意思

08:47.730 --> 08:49.010
它其实很简单

08:49.010 --> 08:50.690
回到我们的这个代码里面

08:50.690 --> 08:52.050
我把这就删掉了

08:52.930 --> 08:54.770
好,比如说我这边上有个div

08:55.650 --> 08:57.810
div.container

08:57.810 --> 08:59.490
那这个就是我的容器

08:59.490 --> 09:00.530
容器下面的话

09:00.530 --> 09:03.090
然后接下来又有多少个div呢

09:03.090 --> 09:04.530
又有比如说4个

09:05.570 --> 09:06.530
有4个div

09:07.090 --> 09:08.290
然后叫这边downer

09:09.970 --> 09:10.290
ok

09:10.850 --> 09:11.810
好,然后接下来的话

09:11.810 --> 09:12.290
我这边

09:12.930 --> 09:14.450
我设置一下这个样式

09:15.010 --> 09:18.050
这边的话点container

09:18.530 --> 09:20.530
我设置它宽是500

09:20.530 --> 09:22.050
高是500

09:22.050 --> 09:23.330
然后接下来的话

09:23.330 --> 09:24.050
outline

09:24.050 --> 09:25.330
outline没学过是吧

09:25.490 --> 09:26.370
我用这个border吧

09:27.090 --> 09:27.570
border

09:29.250 --> 09:31.970
border epx solid

09:32.610 --> 09:33.330
ok

09:33.330 --> 09:34.290
好,那接下来的话

09:34.290 --> 09:35.490
我设置一下

09:35.490 --> 09:37.650
点这个container

09:37.650 --> 09:38.850
下面的这个div

09:39.730 --> 09:41.010
我每一个给它什么呢

09:41.010 --> 09:42.530
给一个宽是100

09:43.090 --> 09:44.450
高是个100

09:44.450 --> 09:45.970
然后接下来给一个border

09:48.320 --> 09:51.920
给个border epx solid

09:51.920 --> 09:54.320
然后接下来我设置一下这个txt-online

09:54.320 --> 09:55.280
center

09:55.440 --> 09:56.560
那接下来这边

09:56.560 --> 09:58.480
fault-size

09:58.480 --> 10:00.400
给个比如说18px

10:00.400 --> 10:02.960
然后接下来再设置一下这个nighight

10:02.960 --> 10:05.520
也是100px

10:05.520 --> 10:06.560
ok

10:06.560 --> 10:08.080
好,那接下来我们这边我们来看一下

10:09.360 --> 10:10.400
回到这边

10:10.400 --> 10:12.160
这边的话你看现在的话是不是就是这样子的

10:13.200 --> 10:14.480
对不对,正常情况下的话

10:14.480 --> 10:15.520
我们这边的话

10:15.520 --> 10:18.320
外面是有一个大盒子

10:18.320 --> 10:19.360
大盒子里面

10:19.360 --> 10:20.880
然后第1个小盒子

10:20.880 --> 10:22.160
第2个小盒子

10:22.160 --> 10:23.200
然后第3个

10:23.200 --> 10:24.480
第4个

10:24.880 --> 10:26.320
那现在的话我要干嘛呢

10:26.320 --> 10:28.320
我要让这几个盒子

10:28.320 --> 10:30.640
垂直成一排

10:30.640 --> 10:32.160
垂直成一排

10:32.160 --> 10:34.480
那有同学说这个简单嘛

10:34.480 --> 10:36.560
这个我之前学过浮动

10:36.560 --> 10:38.320
我用浮动就可以了

10:38.320 --> 10:39.360
但是你要注意

10:39.360 --> 10:43.040
浮动的话它本来就不是用来布局的

10:43.040 --> 10:44.080
它是用来做什么呢

10:44.080 --> 10:46.240
它是用来做文字环绕的

10:46.240 --> 10:47.200
这个的话

10:47.200 --> 10:49.280
你们之前听那个诚哥的课

10:49.280 --> 10:50.880
诚哥应该是给你们讲过的

10:50.880 --> 10:53.360
它本身是用来做这个文字环绕的

10:53.440 --> 10:56.240
它本意就不是做这个布局

10:56.240 --> 10:57.120
所以我们这边的话

10:57.120 --> 10:59.680
想让它这个水平排成一行

10:59.680 --> 11:00.480
那怎么办呢

11:00.480 --> 11:01.040
那这边的话

11:01.040 --> 11:02.800
我可以设置它们的容器

11:02.800 --> 11:03.760
容器是谁

11:03.760 --> 11:06.480
容器是外面的这个DIV

11:06.480 --> 11:07.200
对不对

11:07.200 --> 11:08.240
外面的这个DIV

11:08.240 --> 11:09.280
我就可以设置什么呢

11:09.280 --> 11:12.800
我就可以设置它是个弹性盒子

11:12.800 --> 11:13.840
Display

11:13.840 --> 11:15.840
这个Flex

11:15.840 --> 11:17.360
当你设置了这个之后

11:17.360 --> 11:19.680
然后接下来你再一刷新

11:19.680 --> 11:20.480
你会发现

11:20.480 --> 11:22.800
诶,所有盒子是不是

11:22.800 --> 11:24.320
排成一行了

11:24.320 --> 11:24.960
对不对

11:24.960 --> 11:26.000
排成一行了

11:26.000 --> 11:27.040
那有的同学会说

11:27.040 --> 11:28.720
这个的话也没什么大不了

11:28.720 --> 11:30.560
虽然你说那个浮动

11:30.560 --> 11:31.280
Float

11:31.280 --> 11:32.320
它不是用做布局

11:32.320 --> 11:34.960
但是我这边写个Float Lift

11:34.960 --> 11:36.640
也可以达到相同的效果

11:36.640 --> 11:37.600
但是你注意

11:37.600 --> 11:39.760
我们这边那弹性盒子除了

11:39.760 --> 11:40.560
这个以外

11:40.560 --> 11:42.160
它其实还提供了什么呢

11:42.160 --> 11:44.240
它可以让你很方便的

11:44.240 --> 11:46.160
在水平方向

11:46.160 --> 11:48.720
和垂直方向来

11:48.720 --> 11:50.560
就是分配这几个盒子

11:50.560 --> 11:51.440
那什么意思

11:51.600 --> 11:52.720
回到我们的笔记

11:52.720 --> 11:54.240
首先的话第一步

11:54.240 --> 11:56.560
第一步你要生成弹性容器和

11:56.560 --> 11:57.840
弹性项目

11:57.840 --> 11:59.120
那谁是弹性容器

11:59.120 --> 12:01.920
就我们外成了这个大盒子

12:01.920 --> 12:04.000
这个我们称之为弹性容器

12:04.000 --> 12:05.920
这个的话就是弹性项目

12:05.920 --> 12:09.920
当你把外面的盒子设成DisplayFlex的时候

12:09.920 --> 12:11.360
它就是一个弹性容器了

12:11.360 --> 12:12.880
然后里面的一个一个小盒子

12:12.880 --> 12:14.720
它就是弹性项目

12:14.720 --> 12:15.760
好,完成了之后

12:15.760 --> 12:17.040
然后接下来

12:17.040 --> 12:20.000
更改方向这个你不用管它

12:20.000 --> 12:20.720
正常情况下

12:20.720 --> 12:22.720
你看它这边这个默认值就是这样子

12:22.720 --> 12:24.560
可不可以让它倒着

12:24.560 --> 12:25.600
你就设置什么呢

12:25.600 --> 12:27.120
Flex Direction

12:27.120 --> 12:29.440
然后Zo Rewards

12:29.440 --> 12:30.960
比我们这边我们来看一下嘛

12:30.960 --> 12:34.560
这边你可以设置这个Flex

12:34.560 --> 12:37.360
然后接下来这边Zo Rewards

12:37.360 --> 12:38.640
然后接下来你这边

12:38.640 --> 12:39.920
你看它是不是就倒着了

12:39.920 --> 12:40.480
对不对

12:40.480 --> 12:41.200
一二三四

12:41.200 --> 12:43.520
但这个不是它最好用的

12:43.520 --> 12:44.800
它最好用的是什么呢

12:44.800 --> 12:46.320
最好用的是这个

12:47.280 --> 12:50.560
这个justify content

12:50.560 --> 12:52.880
这个属性我真的是挨得不得了

12:52.880 --> 12:54.240
这个简直太好用了

12:54.240 --> 12:55.600
为什么呢你看这边

12:55.600 --> 12:56.960
使用这个属性

12:56.960 --> 13:01.120
它可以影响主轴的排列方式

13:01.120 --> 13:02.080
你看我们一般的话

13:02.080 --> 13:03.760
我们就是一行我们要干嘛

13:03.760 --> 13:04.800
我们是不是比如说

13:04.800 --> 13:07.280
我们有可能要平均分配这个盒子

13:07.280 --> 13:09.200
也有可能像这样子平均分配

13:09.200 --> 13:10.960
也有可能要居中

13:10.960 --> 13:11.440
对不对

13:11.440 --> 13:13.200
然后也有可能是像这样子

13:13.200 --> 13:15.520
每一份都是这个一样的

13:15.600 --> 13:19.280
那你通过这个属性justify content

13:19.280 --> 13:23.760
你就可以快速的把这个一行这个盒子

13:23.760 --> 13:25.520
你把它就是平均分配

13:25.520 --> 13:27.520
比如说我这边的话justify content

13:27.520 --> 13:30.400
我写一个这个space between

13:30.400 --> 13:32.560
然后加这边你看走

13:32.560 --> 13:33.360
看到没有

13:33.360 --> 13:36.800
你看它是不是快速的就是两端对切

13:36.800 --> 13:37.120
对不对

13:37.120 --> 13:38.800
它两端是没有这个

13:38.800 --> 13:41.280
这个这个什么间隙

13:41.280 --> 13:42.640
然后中间是有

13:42.640 --> 13:44.800
以前你要写这个好麻烦

13:44.960 --> 13:45.280
对不对

13:45.280 --> 13:46.800
你得去计算它的这个margin

13:46.800 --> 13:48.160
然后一点一点的

13:48.160 --> 13:49.920
是不是去这个挤啊

13:49.920 --> 13:50.240
对不对

13:50.240 --> 13:52.240
你看现在就非常的方便

13:52.240 --> 13:53.120
除了这个以外的话

13:53.120 --> 13:54.480
然后还有些其他的

13:54.480 --> 13:57.360
比如说space evenly

13:57.360 --> 13:58.400
space evenly的话

13:58.400 --> 13:58.960
它就是什么呢

13:58.960 --> 14:01.760
它就是每一边的这个间隙

14:01.760 --> 14:05.920
就这儿和这儿和这儿都是相等的

14:05.920 --> 14:06.720
看到没有

14:06.720 --> 14:09.600
它就提供了你在水平方向

14:09.600 --> 14:11.920
如何来进行排列

14:11.920 --> 14:13.680
相当的方便

14:13.680 --> 14:15.680
除此以外的话

14:15.680 --> 14:17.680
我还给大家介绍了一个

14:17.680 --> 14:18.160
什么呢

14:18.160 --> 14:21.040
就是这个彻軸上面排列

14:21.040 --> 14:23.040
彻軸的话它这边的话你看

14:23.040 --> 14:25.040
如果你是flex start

14:25.040 --> 14:27.040
它是这个样子的

14:27.040 --> 14:29.040
如果是flex end

14:29.040 --> 14:30.080
它是这样子的

14:30.080 --> 14:31.040
如果是stretch

14:31.040 --> 14:32.320
它就是拉伸

14:32.320 --> 14:33.920
它默认值就是这个

14:33.920 --> 14:34.640
stretch

14:34.640 --> 14:35.840
默认值就是这个

14:35.840 --> 14:36.800
但有的同学说

14:36.800 --> 14:38.560
你刚才排出来不是这个样子吗

14:38.560 --> 14:41.200
这个样子是因为我们给这个div设置了高度

14:41.280 --> 14:43.920
这个样子是因为我们给这个div设置了高度

14:43.920 --> 14:45.840
你如果不给这个div设置高度的话

14:45.840 --> 14:47.360
它就是这个样子的

14:47.360 --> 14:48.880
我们这边我们来看一下吧

14:48.880 --> 14:50.640
比方我这个下面的这个div

14:50.640 --> 14:51.840
我没有高度

14:51.840 --> 14:54.000
再加这边你看一下

14:54.000 --> 14:55.840
它是不是就是直接占满

14:55.840 --> 14:56.560
对不对

14:56.560 --> 14:57.920
直接占满

14:57.920 --> 14:59.360
但这些的话我们一般用不到

14:59.360 --> 15:00.400
我们一般用哪个呢

15:00.400 --> 15:02.480
我们一般用这个

15:02.480 --> 15:04.800
align items center

15:04.800 --> 15:06.960
比如说我这边

15:07.040 --> 15:08.400
我再设置一个

15:08.400 --> 15:11.280
align items center

15:11.280 --> 15:11.680
好

15:11.680 --> 15:12.880
然后接下来这边走

15:12.880 --> 15:13.760
你看

15:13.760 --> 15:17.360
我的盒子是不是就是垂直水平居中了

15:17.360 --> 15:18.240
看到没有

15:18.240 --> 15:19.840
以前你要写这个效果

15:19.840 --> 15:21.120
其实是很麻烦的

15:21.120 --> 15:22.960
你要去计算这个margin

15:22.960 --> 15:25.040
一会top50%

15:25.040 --> 15:27.040
你还得去减去它这个盒子

15:27.040 --> 15:29.600
它这个本身的高度的一半

15:29.600 --> 15:30.080
对不对

15:30.080 --> 15:30.880
好麻烦

15:30.880 --> 15:32.240
我现在使用弹性盒子

15:32.240 --> 15:34.160
一弹就出来了

15:34.160 --> 15:35.120
看到没有

15:35.280 --> 15:37.360
使用弹性盒子一弹就出来了

15:37.360 --> 15:38.160
你这边的话

15:38.160 --> 15:40.800
你可以把这个视频先暂停一下

15:40.800 --> 15:42.720
你先把这个部分

15:42.720 --> 15:43.440
这个部分

15:43.440 --> 15:45.280
你可以自己写一些

15:45.280 --> 15:46.640
但弹性盒子的话

15:46.640 --> 15:49.200
这个属性还很多

15:49.200 --> 15:50.320
我这边的话

15:50.320 --> 15:52.480
我们就是不一一讲完

15:52.480 --> 15:53.440
我们只讲什么呢

15:53.440 --> 15:54.880
只讲我们这边独行数

15:54.880 --> 15:56.320
我们会用到的

15:56.320 --> 15:56.880
不用到了

15:56.880 --> 15:58.720
我们就先放一放

15:58.720 --> 15:59.920
因为后面的话

15:59.920 --> 16:02.880
大家上那个css3的课程的时候

16:02.880 --> 16:04.880
老师会详细介绍的

16:04.880 --> 16:06.320
好吧

16:06.320 --> 16:09.040
好这是这个弹性盒子

16:09.040 --> 16:10.480
好大家下一个

16:10.480 --> 16:14.000
下一个的话是网格布局

16:14.000 --> 16:16.400
我们来看一下这个网格布局

16:16.400 --> 16:17.840
网格布局的话

16:17.840 --> 16:19.280
叫做Grid

16:19.280 --> 16:21.200
翻译成中文叫做网格

16:21.200 --> 16:23.200
它的话和flex布局

16:23.200 --> 16:24.720
flex布局

16:24.720 --> 16:26.480
就是我们前面说的弹性盒子

16:26.480 --> 16:27.200
对不对

16:27.200 --> 16:30.240
它有一定的相似性

16:30.240 --> 16:30.640
但是呢

16:30.640 --> 16:32.720
它最大区别是什么

16:32.720 --> 16:34.240
flex布局是这个

16:34.240 --> 16:35.440
轴线布局

16:35.440 --> 16:37.120
它针对的是一维的

16:37.120 --> 16:39.280
就比如说你看我这边是不是一行盒子

16:39.280 --> 16:39.680
对不对

16:39.680 --> 16:41.360
一行盒子怎么布局

16:41.360 --> 16:43.120
而这个网格布局的话

16:43.120 --> 16:43.840
它是什么呢

16:43.840 --> 16:45.600
它是将这个容器

16:45.600 --> 16:48.960
划分成行合列

16:48.960 --> 16:50.560
划分成行合列

16:50.560 --> 16:51.280
然后接下来的话

16:51.280 --> 16:52.960
我这边的话就直接

16:52.960 --> 16:53.920
行怎么布局

16:53.920 --> 16:54.880
列怎么布局

16:54.880 --> 16:56.800
我就都指定了

16:56.800 --> 16:57.600
看到没有

16:57.600 --> 16:59.040
所以你可以把这个干嘛呢

16:59.040 --> 17:02.000
你可以把这个看作是一个二维布局

17:02.000 --> 17:04.160
我们的这个flex是一维布局

17:04.320 --> 17:06.720
这个的话就是一个二维布局

17:06.720 --> 17:08.240
我们的这个grant的布局的话

17:08.240 --> 17:11.440
比flex要强大一些

17:11.440 --> 17:12.240
回头的话

17:12.240 --> 17:14.000
我们这边就会用到

17:14.000 --> 17:15.440
你看这边

17:15.440 --> 17:17.600
这边是不是会有很多的这个

17:17.600 --> 17:20.080
很多的这些一个一个的这个小的项目

17:20.080 --> 17:20.480
对不对

17:20.480 --> 17:21.360
那回头这个的话

17:21.360 --> 17:22.240
我就是使用什么呢

17:22.240 --> 17:24.320
使用这个grant的布局

17:24.320 --> 17:25.840
那么来看一下这个grant的布局

17:25.840 --> 17:28.240
我这边的话也是只交基础

17:28.240 --> 17:30.000
交到我们能够用就可以

17:30.000 --> 17:31.680
然后我们这边首先

17:31.680 --> 17:32.400
设置什么呢

17:32.400 --> 17:34.400
设置displaygrant

17:35.440 --> 17:37.440
这边就是我们的这个容器

17:37.440 --> 17:38.240
采用什么呢

17:38.240 --> 17:39.760
采用这个完格布局

17:40.320 --> 17:42.720
然后默认情况下所指定的容器元素

17:42.720 --> 17:44.400
是会计元素

17:44.400 --> 17:46.800
也可以通过display inlinegrant的

17:46.800 --> 17:47.600
设成行内

17:47.600 --> 17:48.720
这个你不用管它

17:48.720 --> 17:49.760
你反正的话就是先

17:50.320 --> 17:51.520
把这个设置上

17:51.520 --> 17:52.480
那我们来看一下这边

17:52.480 --> 17:54.320
这个html的这个代码

17:54.320 --> 17:54.800
首先的话

17:54.800 --> 17:55.760
这个是不是我的容器

17:57.200 --> 17:58.000
对不对

17:58.000 --> 17:59.680
我的容器大家这边有个wapper

17:59.680 --> 18:01.120
下面有这么多个div

18:01.920 --> 18:02.880
然后接下来的话

18:04.480 --> 18:06.480
这边的话我就设置什么呢

18:06.480 --> 18:08.080
我就设置它是一个

18:09.040 --> 18:09.840
网格布局

18:10.800 --> 18:12.240
设置它是个网格布局

18:12.240 --> 18:13.280
网格布局之后

18:13.280 --> 18:14.400
然后接下来的话

18:14.400 --> 18:15.440
有这两个属性

18:17.540 --> 18:18.340
看到没有

18:18.340 --> 18:19.620
有这两个属性

18:19.620 --> 18:21.140
这两个属性是干嘛的呢

18:21.140 --> 18:21.940
这两个属性

18:21.940 --> 18:23.940
一个是设置你网格的这个列

18:24.500 --> 18:27.380
一个是设置网格的这个行

18:28.180 --> 18:28.980
行可列

18:28.980 --> 18:29.380
这个的话

18:29.380 --> 18:31.220
我在下面其实是有解释的

18:32.100 --> 18:32.660
在下面

18:33.780 --> 18:34.260
就这边

18:34.820 --> 18:36.660
Grand Template Cromes

18:36.660 --> 18:39.380
定义每一列的列宽

18:40.100 --> 18:41.380
而这个的话定义什么呢

18:41.380 --> 18:43.060
这个的话定义每一行的

18:43.620 --> 18:44.180
行高

18:45.460 --> 18:46.020
看到没有

18:46.020 --> 18:47.140
让我可以通过什么呢

18:47.140 --> 18:48.420
我可以通过这种方式

18:48.420 --> 18:48.980
比如说这边

18:49.860 --> 18:51.700
Grand Template Cromes

18:51.700 --> 18:52.340
150

18:52.340 --> 18:52.980
150

18:52.980 --> 18:53.380
150

18:54.020 --> 18:55.140
说明的话这边有几列

18:55.860 --> 18:56.980
首先你想想有几列

18:56.980 --> 18:58.420
是不是应该是有三列

18:58.420 --> 18:59.060
每一列

19:00.020 --> 19:01.620
这个多宽

19:01.620 --> 19:02.340
是不是150

19:02.340 --> 19:03.060
对不对

19:03.060 --> 19:04.180
然后加这边Rose

19:04.180 --> 19:04.900
150

19:04.900 --> 19:05.540
150

19:05.540 --> 19:06.100
150

19:06.100 --> 19:06.660
150

19:06.660 --> 19:07.780
是不是有三行

19:07.780 --> 19:09.220
每一行高多少

19:09.220 --> 19:10.180
是不是高150

19:10.180 --> 19:11.060
对不对

19:11.060 --> 19:11.860
说回头的话

19:11.860 --> 19:12.500
你出来的话

19:12.500 --> 19:13.300
就是应该是

19:13.300 --> 19:14.100
这个样子的

19:15.060 --> 19:16.100
就应该是这样子的

19:16.100 --> 19:17.460
那回到我们这边

19:19.140 --> 19:20.100
回到我们这边

19:20.100 --> 19:20.820
我们这边的话

19:20.820 --> 19:21.860
现在想做一个效果

19:21.860 --> 19:22.580
什么效果呢

19:22.580 --> 19:23.380
比如说这边

19:23.940 --> 19:25.460
这边的话是这个第一个

19:25.940 --> 19:27.060
然后接下来这边

19:27.700 --> 19:28.660
是第二个

19:29.140 --> 19:30.420
一二站一排

19:30.420 --> 19:31.300
然后接下来的话

19:31.300 --> 19:31.860
这边

19:31.860 --> 19:32.820
这边是第三个

19:33.620 --> 19:35.460
这边是第四个

19:35.460 --> 19:36.660
三四站一排

19:36.660 --> 19:38.260
那我们这边怎么做呢

19:38.260 --> 19:39.620
你看这边

19:39.620 --> 19:41.300
这边的话我就设置

19:41.860 --> 19:42.660
这个就不要了

19:43.300 --> 19:44.340
这个的话我就设置

19:44.340 --> 19:45.700
它是Grid

19:46.420 --> 19:46.820
对吧

19:46.820 --> 19:47.460
Grid不拘

19:47.460 --> 19:48.580
然后下面的DV

19:48.580 --> 19:49.620
你就不要给宽高了

19:50.820 --> 19:52.020
这边不要给宽高

19:52.020 --> 19:53.300
然后接下来你这边

19:53.300 --> 19:54.260
这边的话你就设置

19:54.260 --> 19:54.900
这两个属性

19:55.700 --> 19:56.500
一个是这个

19:57.460 --> 19:59.940
这个GridTemplateCroms

19:59.940 --> 20:00.740
一个是Rose

20:01.460 --> 20:02.660
那接下来到我们这边

20:03.780 --> 20:04.820
格式化一下

20:04.820 --> 20:06.020
然后接下来我们这边的话

20:06.020 --> 20:06.980
我们就设置

20:06.980 --> 20:08.180
它是500是吧

20:08.180 --> 20:08.820
500的话

20:08.820 --> 20:09.700
我们这边的话就是

20:10.260 --> 20:10.900
250

20:12.020 --> 20:12.260
然后

20:12.820 --> 20:13.380
250

20:14.980 --> 20:15.460
对不对

20:15.460 --> 20:16.660
250的250

20:16.660 --> 20:17.700
那是不是就是两列

20:17.700 --> 20:18.660
每一列刚好

20:18.660 --> 20:19.140
250

20:19.620 --> 20:20.180
对不对

20:20.180 --> 20:21.460
然后接下来这边这个肉

20:21.460 --> 20:22.580
肉的话我就设置

20:22.580 --> 20:23.220
是几行呢

20:23.220 --> 20:24.020
两行

20:24.020 --> 20:25.380
每一行的话是200

20:26.900 --> 20:27.300
200

20:27.860 --> 20:28.180
好

20:28.180 --> 20:28.980
然后接下来我们这边

20:28.980 --> 20:29.940
我们来看一下

20:29.940 --> 20:30.340
刷新

20:31.060 --> 20:31.460
你看

20:32.100 --> 20:32.900
是不是就出来了

20:33.540 --> 20:35.140
一个网格布局就出来了

20:35.140 --> 20:35.620
看到没有

20:35.620 --> 20:37.220
这边的话是第一个盒子

20:38.020 --> 20:38.740
第二个盒子

20:39.460 --> 20:40.020
第三个

20:40.580 --> 20:41.140
第四个

20:42.100 --> 20:44.580
它其实就是一个二维的弹性盒子

20:45.780 --> 20:46.260
明白没有

20:46.820 --> 20:48.260
它就是二维的弹性盒子

20:49.300 --> 20:49.620
好

20:49.620 --> 20:51.620
然后接下来明白了这个之后

20:52.900 --> 20:54.660
然后这边也可以用百分比

20:55.060 --> 20:56.740
比如你这边可以用什么呢

20:56.740 --> 20:58.020
可以用这个百分比

20:58.020 --> 20:59.380
不用把这改一下吗

20:59.380 --> 21:00.580
我们这边那就是应该是

21:00.580 --> 21:01.540
说50%

21:02.820 --> 21:03.620
50%

21:04.820 --> 21:05.620
怎么样这个样子

21:06.180 --> 21:06.820
然后回头的话

21:06.820 --> 21:07.940
你这边看一下刷新

21:08.740 --> 21:09.380
这不变了

21:10.100 --> 21:10.420
对吧

21:11.060 --> 21:11.300
好

21:11.300 --> 21:12.980
大家还可以干嘛呢

21:12.980 --> 21:14.340
还可以就是这个样子

21:15.060 --> 21:16.180
使用这个repeat

21:18.020 --> 21:18.500
repeat

21:19.060 --> 21:20.180
repeat是什么呢

21:20.180 --> 21:21.940
就有的时候我们要重复

21:21.940 --> 21:24.100
重复书写同样的值很麻烦

21:24.820 --> 21:25.220
对不对

21:25.220 --> 21:27.220
特别是你的网格很多的时候

21:27.220 --> 21:28.180
比如我们刚才

21:28.180 --> 21:30.020
我们刚才的话是不是写的是这个

21:31.380 --> 21:31.860
250

21:33.220 --> 21:33.700
250

21:34.340 --> 21:35.380
我们是不是这样写的

21:35.380 --> 21:36.740
那如果我的网格很多

21:36.740 --> 21:38.180
比如每一列只有50

21:38.900 --> 21:39.860
每一列只有50

21:39.860 --> 21:41.940
那你这边是不是要写很多个50啊

21:41.940 --> 21:43.300
对比如我的列很多

21:43.300 --> 21:45.220
我这边是不是要写很多个50啊

21:45.220 --> 21:46.340
那就很麻烦

21:46.340 --> 21:47.460
那你就可以通过什么呢

21:47.460 --> 21:49.220
你就可以通过repeat

21:50.340 --> 21:51.220
通过这个函数

21:51.780 --> 21:52.820
这个函数的话

21:52.820 --> 21:53.860
然后接下来你看一下

21:54.580 --> 21:55.700
他接收两个参数

21:56.420 --> 21:57.940
第一个是他重复多少次

21:58.420 --> 22:00.420
第二个的话是每一次

22:00.420 --> 22:01.220
就每一列

22:01.700 --> 22:02.420
或者每一行

22:02.820 --> 22:03.940
他对应的值是多少

22:04.580 --> 22:05.380
那比如说刚才

22:05.780 --> 22:07.380
刚才的话我们就应该是重复多少次

22:07.940 --> 22:08.660
什么两次

22:09.460 --> 22:09.780
对吧

22:09.780 --> 22:11.300
然后这样每一列的话是吧

22:11.700 --> 22:12.420
250

22:12.820 --> 22:13.140
像书

22:14.020 --> 22:15.060
然后接下来回到这边

22:16.340 --> 22:17.300
这不仍然是一样的

22:18.100 --> 22:18.580
看到没有

22:19.140 --> 22:19.940
仍然是一样的

22:20.500 --> 22:22.260
这个的话就是网格布局

22:22.740 --> 22:24.180
一个最简单的应用

22:24.500 --> 22:26.020
我们就讲到这个度就可以了

22:26.580 --> 22:27.460
讲到这个度的话

22:27.460 --> 22:29.140
然后接下来你回头做这个就可以了

22:30.020 --> 22:30.420
做这个

22:30.420 --> 22:31.780
这个我就用了网格布局

22:32.260 --> 22:33.380
你看这边这边是不是

22:34.100 --> 22:34.740
第一列

22:35.380 --> 22:36.100
第二列

22:36.100 --> 22:36.900
第三列

22:36.900 --> 22:37.700
第四列

22:37.700 --> 22:38.260
第五列

22:38.740 --> 22:39.140
对不对

22:39.140 --> 22:39.700
要加行

22:40.420 --> 22:41.300
行有20行

22:41.780 --> 22:42.260
看到没有

22:42.260 --> 22:44.340
那这个用网格布局就很方便

22:46.180 --> 22:48.260
好你这边的话可以把这个视频占顶一下

22:48.900 --> 22:50.420
你去试一下

22:51.140 --> 22:51.460
对吧

22:51.460 --> 22:53.140
试一下这个网格布局

22:54.660 --> 22:55.060
好

22:55.060 --> 22:56.020
然后下一个

22:56.020 --> 22:56.660
下一个的话

22:56.660 --> 22:57.940
这边的话是介绍一个

22:57.940 --> 22:59.940
这个C13的这个过渡效果

23:00.660 --> 23:01.380
因为这个的话

23:01.380 --> 23:03.060
我们到时候写的话也会用到

23:03.620 --> 23:04.020
过渡

23:04.740 --> 23:05.540
过渡是什么呢

23:05.540 --> 23:06.580
你看这边我写的有

23:07.060 --> 23:10.980
过渡的话是让我们在样式切换时

23:10.980 --> 23:11.940
更加的什么呢

23:11.940 --> 23:13.140
更加的丝滑

23:13.860 --> 23:15.780
不至于就是两个样式之间

23:15.780 --> 23:17.220
你这个切换很生硬

23:17.780 --> 23:18.340
什么意思

23:18.740 --> 23:19.380
就这个意思

23:19.940 --> 23:20.660
比如说我这边

23:22.420 --> 23:23.540
我把这删了

23:24.740 --> 23:25.700
这样子我不删

23:25.700 --> 23:26.340
我把这个

23:27.220 --> 23:29.780
我把整个这个给你放到笔记里面

23:31.900 --> 23:33.420
我给你放到笔记放到哪

23:34.220 --> 23:34.860
放到这吧

23:35.420 --> 23:35.820
好吧

23:36.540 --> 23:37.020
具体

23:38.700 --> 23:39.820
具体势力

23:42.000 --> 23:42.560
势力

23:43.120 --> 23:43.600
有效

23:47.420 --> 23:47.740
OK

23:47.740 --> 23:48.540
我给你放到这里

23:50.060 --> 23:50.300
好

23:50.300 --> 23:51.100
我们来看这个过渡

23:51.660 --> 23:52.380
过渡的话

23:52.380 --> 23:54.780
就是让你的这个切换更加的丝滑

23:54.780 --> 23:55.900
我比如我举个例子

23:57.580 --> 23:59.340
我快速的让你这个感受一下

23:59.900 --> 24:01.260
比如我这边它有一个DIV

24:03.180 --> 24:03.660
DIV

24:04.460 --> 24:06.300
比如宽射100

24:06.860 --> 24:07.820
高射100

24:08.380 --> 24:09.660
给个背景颜色

24:09.660 --> 24:11.100
Bang on the corner

24:11.100 --> 24:11.420
Red

24:11.980 --> 24:12.220
OK

24:12.780 --> 24:14.300
那现在的话在我们这边

24:15.340 --> 24:16.780
所以就有这么一个DIV

24:17.340 --> 24:17.740
对不对

24:18.140 --> 24:19.660
然后接下来我给他设置一个什么呢

24:19.660 --> 24:21.260
我给他设置一个Hover效果

24:21.980 --> 24:23.100
DIV

24:23.100 --> 24:23.500
Hover

24:24.060 --> 24:24.780
我让他干嘛呢

24:24.780 --> 24:26.300
我让他的高变成300

24:27.500 --> 24:28.780
那接下来回到我们这边

24:29.020 --> 24:29.580
刷新

24:30.060 --> 24:31.580
那我现在拿鼠标一上去

24:32.060 --> 24:32.620
看到没有

24:32.860 --> 24:34.940
是不是就有一个Hover的时候

24:35.180 --> 24:36.220
高变成300

24:36.700 --> 24:37.020
对不对

24:37.020 --> 24:39.020
但是你现在这个变换的话太突然了

24:39.740 --> 24:40.540
太突然了

24:40.540 --> 24:41.340
那怎么办呢

24:41.580 --> 24:44.620
那我这边的话我可以给他设置一个Trization

24:45.180 --> 24:45.740
过渡

24:46.060 --> 24:47.180
大家这边

24:47.500 --> 24:49.260
代表所有属性

24:49.500 --> 24:50.540
都要应用这个过渡

24:51.100 --> 24:52.860
那接下来这边比较点5秒

24:53.100 --> 24:54.380
就是0.5秒

24:54.860 --> 24:56.300
那我们这边我们来看一下效果

24:56.700 --> 24:57.180
刷新

24:57.740 --> 24:58.380
好 走

24:59.020 --> 24:59.580
看到没有

25:00.060 --> 25:02.380
所以就会有一个比较丝滑的这个过渡效果

25:03.100 --> 25:05.820
你看这个这个效果是比刚才那个看着舒服多了

25:06.700 --> 25:07.340
对不对

25:07.580 --> 25:09.020
比刚才那个看着舒服多了

25:10.300 --> 25:11.260
然后除了这个以外的话

25:11.260 --> 25:14.140
我比如说我还可以变一下背景颜色

25:14.140 --> 25:15.420
比较Banglone的Conner

25:16.300 --> 25:17.180
不要给个Blue

25:17.900 --> 25:18.380
刷新

25:19.660 --> 25:20.220
你看

25:21.500 --> 25:22.860
是不是高和颜色

25:23.100 --> 25:24.380
是不是都应用了这个过渡

25:25.260 --> 25:25.660
对不对

25:26.380 --> 25:27.900
那我们这边我们来看一下这个过渡

25:28.700 --> 25:29.500
它的这个语法

25:29.900 --> 25:31.500
首先的话有一个Poverty

25:31.980 --> 25:34.460
Poverty就是你要过渡的这个属性

25:35.420 --> 25:36.060
是哪些

25:36.300 --> 25:37.660
你如果设置一个Or

25:38.060 --> 25:39.260
就代表所有的属性

25:39.740 --> 25:41.020
你都要应用这个过渡

25:42.060 --> 25:43.580
那第二个Duration

25:43.980 --> 25:46.860
这个就是你过渡他的这个完成时间

25:47.180 --> 25:49.180
你想在多少时间里面完成

25:49.660 --> 25:50.380
比我们刚才

25:50.780 --> 25:52.540
刚才我们是不是设的是点5

25:52.780 --> 25:53.180
对不对

25:53.180 --> 25:54.460
我现在把这个点去掉

25:54.700 --> 25:55.340
他就是多少

25:55.820 --> 25:56.620
这就是5秒

25:57.260 --> 25:58.540
然后这样我这边刷新一下

25:58.860 --> 25:59.260
你看

26:00.780 --> 26:02.060
这明显就慢很多

26:02.700 --> 26:03.100
对不对

26:03.580 --> 26:06.540
他会在5秒钟以内完成这个效果

26:06.940 --> 26:07.420
一开

26:08.460 --> 26:10.380
他也是在5秒钟以内

26:11.660 --> 26:12.060
看了没有

26:12.860 --> 26:13.980
好然后这边

26:14.860 --> 26:16.700
还有就是这个Timing Function

26:16.700 --> 26:17.420
这个是什么呢

26:17.420 --> 26:19.260
这个就是你过渡的这个函数

26:19.820 --> 26:21.980
就是你过渡的这个速度的曲线

26:22.460 --> 26:24.140
你比如说是平滑的过渡

26:24.300 --> 26:25.980
还是先快后慢

26:25.980 --> 26:27.500
还是先慢后快

26:28.380 --> 26:29.420
这个的话我们这边的话

26:29.420 --> 26:30.380
它是个可选的

26:30.860 --> 26:32.300
就前面两个你必须要给

26:33.340 --> 26:34.300
前面两个你要给

26:34.300 --> 26:35.660
后面这个是可选的

26:35.660 --> 26:36.940
那我们这个不管他

26:36.940 --> 26:39.340
后面正是学这个Trization的时候

26:39.340 --> 26:40.060
我们再来说

26:40.540 --> 26:41.420
那这个这个的话

26:41.420 --> 26:43.500
是就是你过渡的这个延迟时间

26:44.380 --> 26:46.620
就正常情况下是不是就是立即开始啊

26:47.180 --> 26:47.420
对吧

26:47.420 --> 26:49.020
我这边我可以稍微延迟一下

26:49.020 --> 26:51.020
比如过一个2秒钟以后

26:51.660 --> 26:52.300
再开始

26:52.540 --> 26:53.980
那你可以再设置一个时间

26:54.540 --> 26:55.260
比如说这边

26:56.540 --> 26:57.660
我这边设置个点5

26:58.220 --> 26:59.660
到现在我这边2秒后

27:00.380 --> 27:00.700
对吧

27:00.700 --> 27:01.900
我这边让我刷新

27:01.900 --> 27:02.940
然后鼠标一上去

27:04.940 --> 27:06.140
你看是不2秒钟之后

27:06.140 --> 27:08.060
它是不是才开始变化的

27:08.060 --> 27:08.940
好鼠标一开

27:11.170 --> 27:11.890
看秒

27:11.890 --> 27:12.770
是不是2秒以后

27:13.330 --> 27:13.730
对不对

27:14.370 --> 27:16.290
这个的话就是关于这个过渡

27:16.290 --> 27:17.330
好过渡的话这边

27:18.290 --> 27:19.570
我也给了一个例子

27:19.570 --> 27:21.010
这个例子其实就是

27:21.010 --> 27:22.210
刚才我写的那个例子

27:23.890 --> 27:24.290
在这里

27:25.250 --> 27:26.450
所以就是刚写的那个例子

27:27.010 --> 27:27.250
ok

27:28.050 --> 27:30.130
好这里的话你可以自己试一试

27:32.770 --> 27:33.570
好最后一个

27:34.130 --> 27:35.970
最后一个前置知识就是什么呢

27:35.970 --> 27:37.090
就是这个变形

27:38.530 --> 27:38.770
这个

27:39.330 --> 27:41.170
这个我们在做这个读新书的时候

27:41.170 --> 27:41.970
我们也会用到

27:42.530 --> 27:45.810
这个变形的话也是这个c3里面提供的

27:45.810 --> 27:47.410
这变形你去认证学的话

27:47.410 --> 27:49.010
它其实还是比较复杂

27:49.010 --> 27:51.330
我们这边仍然就是只讲我们会用到的

27:51.810 --> 27:52.770
它这个变形的话

27:52.770 --> 27:54.530
这边的话提供了这么几种变形

27:55.010 --> 27:56.290
比如说这边的话旋转

27:57.410 --> 27:57.890
rotate

27:58.770 --> 27:59.490
然后还有什么呢

27:59.490 --> 28:01.490
还有这个扭曲

28:02.290 --> 28:03.010
这个screw

28:03.650 --> 28:05.330
然后下这边scale

28:06.050 --> 28:07.010
变这个尺寸

28:07.570 --> 28:09.250
然后下这边这个是位移

28:10.130 --> 28:12.050
以及这个修改什么呢

28:12.050 --> 28:14.450
修改这个triceform它的这个原点

28:15.010 --> 28:16.130
那么一个一个来看

28:16.770 --> 28:17.810
首先是这个旋转

28:18.450 --> 28:20.210
旋转的话就是干嘛呢

28:20.210 --> 28:22.130
它就是你可以设置一个这个角度

28:23.490 --> 28:26.770
然后用来指定这个旋转的这个幅度

28:27.410 --> 28:28.850
比如说我们这边我们来举个例子

28:30.210 --> 28:31.010
比如说我们这边

28:31.890 --> 28:33.490
我们先把这个先删掉

28:34.130 --> 28:35.970
那现在的话这边是不是就是一个diy

28:36.610 --> 28:37.250
对不对

28:37.250 --> 28:39.330
然后我们这边让它hover的时候

28:40.130 --> 28:41.250
我们设置一个什么呢

28:41.250 --> 28:42.370
设置一个triceform

28:42.930 --> 28:43.570
你注意哈

28:43.570 --> 28:45.810
无论是旋转还是这个位移

28:45.810 --> 28:49.010
还是这个这个这个尺寸这个

28:49.010 --> 28:50.130
它都是什么呢

28:50.130 --> 28:51.650
都是这个triceform属性

28:53.090 --> 28:54.610
triceform属性完了之后

28:54.610 --> 28:55.970
然后接下来这边的话是这个

28:56.370 --> 28:56.850
rotate

28:57.570 --> 28:59.330
你要旋转多少度

28:59.890 --> 29:01.090
比我们要旋转多少度呢

29:01.090 --> 29:04.050
我们要旋转这个45度

29:04.050 --> 29:06.530
你就可以写个45第一季

29:07.010 --> 29:07.890
代表45度

29:08.450 --> 29:09.890
好那我们这边让我们来看一下

29:11.010 --> 29:11.410
刷新

29:11.970 --> 29:12.690
移上去

29:12.690 --> 29:13.090
你看

29:14.050 --> 29:15.570
这就有一个这个旋转的效果

29:16.370 --> 29:18.610
默认它这个中心点应该是哪个点

29:19.490 --> 29:20.770
中心点是不是应该是这个点

29:21.650 --> 29:22.130
对不对

29:22.130 --> 29:23.650
但你这个旋转的话好声音

29:24.210 --> 29:25.410
那你可以结合什么呢

29:25.410 --> 29:27.010
结合我们刚才讲的这个过度

29:28.050 --> 29:28.690
trization

29:29.730 --> 29:30.130
or

29:31.330 --> 29:32.450
然后点5秒

29:33.490 --> 29:34.210
然后加这边

29:34.770 --> 29:35.170
刷新

29:35.650 --> 29:35.970
看

29:37.090 --> 29:39.250
哎你看是不是就会有一个这个过度的效果

29:39.250 --> 29:39.890
对不对

29:39.890 --> 29:41.490
看上去就会舒服一些

29:42.050 --> 29:43.890
啊这个是rotate旋转

29:44.450 --> 29:45.570
啊这个很好理解

29:45.570 --> 29:47.650
而且我们这边的话也到时候就会用到

29:47.650 --> 29:48.850
用我这边重新刷新一下

29:49.410 --> 29:50.370
我这边让你看

29:50.530 --> 29:51.250
我点击

29:51.250 --> 29:52.370
你看这边是不是就在转

29:53.010 --> 29:53.650
对不对

29:53.650 --> 29:55.490
这个的话其实就是我们会用到什么呢

29:55.490 --> 29:56.850
会用到这个旋转

29:58.850 --> 29:59.890
然后还有几个

29:59.890 --> 30:01.410
还有几个就一起介绍了

30:02.130 --> 30:03.650
这个screw

30:03.650 --> 30:04.210
这个是什么呢

30:04.210 --> 30:06.050
这个是让元素清斜

30:06.850 --> 30:07.650
啊你可以

30:07.650 --> 30:08.610
他可以将一个

30:09.170 --> 30:10.930
对象以中心位置

30:11.650 --> 30:13.730
围绕这个x軸和y軸

30:14.370 --> 30:15.330
进行这个清斜

30:16.530 --> 30:17.570
比我们这边来看一下吧

30:18.050 --> 30:18.930
比我们你这边screw

30:19.490 --> 30:20.050
30度

30:20.850 --> 30:22.210
30度的话他这边就是什么

30:22.210 --> 30:22.930
是不是就是这个角

30:23.730 --> 30:24.210
看不看

30:24.210 --> 30:24.930
这个角

30:24.930 --> 30:26.770
这里的话会有一个这个30度

30:26.770 --> 30:27.490
其实就是这个角

30:28.530 --> 30:28.930
看不看

30:29.650 --> 30:31.410
他这个是screw x

30:32.130 --> 30:33.250
比我们这边我们来试一下

30:35.250 --> 30:36.850
比如我们这边的话是screw

30:38.770 --> 30:39.890
screw x

30:40.610 --> 30:41.730
比如说30

30:43.870 --> 30:45.790
好然后再这边我们来看一下刷新

30:47.310 --> 30:47.790
看不看

30:48.510 --> 30:50.990
是不是就会有一个这样子的这个效果

30:51.710 --> 30:51.950
啊

30:52.830 --> 30:54.030
这个就是清斜

30:54.030 --> 30:55.390
然后再这边是y

30:55.390 --> 30:56.910
y的话就是垂直轴

30:56.910 --> 30:58.030
你把这个改一下

30:58.590 --> 30:59.310
改成这个y

31:00.830 --> 31:02.670
改成y轴再加这边刷新

31:03.470 --> 31:03.790
走

31:04.750 --> 31:05.390
看不看

31:05.390 --> 31:07.390
他就是y轴的一个清斜

31:08.270 --> 31:08.990
那你这边的话

31:08.990 --> 31:11.150
如果是直接这个screw

31:11.150 --> 31:12.430
他是不是既有也可以是轴

31:12.430 --> 31:13.470
也有y轴

31:14.350 --> 31:14.750
对吧

31:14.750 --> 31:16.430
啊这个你可以自己试一下

31:17.950 --> 31:19.550
那下一个是这个说放

31:19.630 --> 31:20.990
说放是这个screw

31:21.710 --> 31:22.670
啊screw

31:22.670 --> 31:26.270
他这边的话可以在水平方向和垂直方向同时说放

31:26.270 --> 31:27.310
但我们一般来讲

31:27.310 --> 31:28.590
我们只设一个值

31:29.310 --> 31:29.950
一个值的话

31:29.950 --> 31:31.710
他就是水平和垂直轴

31:32.190 --> 31:33.150
什么都会进行说放

31:33.790 --> 31:34.510
对吧

31:34.510 --> 31:35.790
他默认值是多少呢

31:35.790 --> 31:36.830
默认值是1

31:37.630 --> 31:38.510
啊是1的话

31:38.510 --> 31:39.710
就是他的一倍大小

31:39.710 --> 31:41.150
一倍大小是不是和他一样大

31:41.710 --> 31:43.150
然后如果你大于1

31:43.790 --> 31:44.990
那他就是放大

31:45.470 --> 31:46.910
如果小于1

31:46.910 --> 31:47.630
他就是说小

31:48.270 --> 31:49.310
比如我们这边举个例子

31:50.270 --> 31:52.110
比如说我们这边的话是这个screw

31:54.190 --> 31:54.750
screw

31:54.750 --> 31:55.390
然而在这边呢

31:55.390 --> 31:56.110
我们传一个什么呢

31:56.110 --> 31:56.670
传一个2

31:57.550 --> 31:58.350
传一个2的话

31:58.350 --> 32:01.470
他这边的话是不是就是会是变成他的两倍大小

32:01.470 --> 32:02.350
比我们这边走

32:03.150 --> 32:03.790
看到没有

32:03.790 --> 32:04.110
好

32:04.110 --> 32:05.150
这边我把这个div

32:05.790 --> 32:07.790
稍微放到中间一点

32:07.790 --> 32:08.990
比较这边呢

32:08.990 --> 32:09.390
400

32:10.990 --> 32:11.230
走

32:12.430 --> 32:13.390
啊400太多了

32:14.030 --> 32:14.510
比如说

32:16.190 --> 32:16.750
280

32:18.860 --> 32:19.500
啊差不多

32:19.500 --> 32:20.140
好你看

32:21.020 --> 32:21.820
看到没有

32:21.820 --> 32:23.260
说就变成他的两倍大小

32:24.220 --> 32:25.260
也就是他的这个宽

32:26.700 --> 32:28.300
啊宽变成两倍

32:28.300 --> 32:29.900
就变成这么这么长

32:29.900 --> 32:31.020
啊他的高

32:31.020 --> 32:31.820
高的话本来是

32:32.540 --> 32:33.740
本来是这么高

32:33.740 --> 32:34.620
那变成两倍

32:34.620 --> 32:35.820
所以变成这么高

32:35.820 --> 32:36.460
对不对

32:36.460 --> 32:37.340
所以就变成这个样子

32:38.300 --> 32:39.820
默认的话是中心这个点

32:41.500 --> 32:43.500
而且如果你是小于1

32:43.500 --> 32:44.540
比如这个0.5

32:45.500 --> 32:46.300
他就是多少

32:46.300 --> 32:47.020
是不是就是一半

32:47.820 --> 32:48.140
对吧

32:48.140 --> 32:48.460
你看

32:49.100 --> 32:50.060
所以就变成他的一半

32:50.780 --> 32:52.140
这个就是scale

32:53.900 --> 32:55.740
那接下来还有一个这个translate

32:56.300 --> 32:58.700
translate的话就是他的这个位移

32:59.500 --> 33:00.060
啊位移

33:00.060 --> 33:00.940
你看这边

33:00.940 --> 33:03.340
translate x和y

33:03.340 --> 33:06.780
他就是使元素水平方向和垂直方向

33:06.780 --> 33:07.820
同时移动

33:08.700 --> 33:10.300
啊你如果只传一个值的话

33:10.300 --> 33:11.900
他就是水平方向移动

33:12.460 --> 33:13.500
啊大家你这边的话

33:13.500 --> 33:14.540
如果是translate

33:15.500 --> 33:18.460
啊他有一个translate x和translate y

33:18.460 --> 33:19.260
如果你这边是

33:19.260 --> 33:20.140
translate x

33:20.140 --> 33:20.700
我把他改一下

33:21.500 --> 33:22.460
这边x

33:22.460 --> 33:23.340
这边他有个y

33:24.940 --> 33:26.940
那这个的话就是水平方向移动

33:26.940 --> 33:28.860
这个的话就是垂直方向移动

33:28.860 --> 33:29.580
比我们这边的话

33:29.580 --> 33:30.140
我们来试一下

33:30.860 --> 33:31.820
比我们这边让我

33:33.340 --> 33:36.300
translate

33:36.940 --> 33:38.380
啊记得有个x

33:38.380 --> 33:39.260
然后接下来这边的话

33:39.260 --> 33:40.700
就是比如说我移动多少呢

33:40.700 --> 33:41.500
移动100

33:42.460 --> 33:43.180
100相说

33:43.900 --> 33:44.700
好放心

33:45.340 --> 33:45.660
走

33:46.460 --> 33:46.860
看到没有

33:47.900 --> 33:48.940
所以就有个这个效果

33:49.980 --> 33:50.380
看到没有

33:50.940 --> 33:52.460
这就有个水平移动的效果

33:53.020 --> 33:53.420
对不对

33:53.900 --> 33:56.700
啊好这是关于这个translate

33:57.100 --> 33:57.340
啊

33:57.820 --> 34:00.460
那最后一个最后一个是这个transform origin

34:00.940 --> 34:01.740
就默认情况

34:01.740 --> 34:02.540
像我们这边的话

34:02.540 --> 34:03.500
就是这个点

34:03.500 --> 34:04.460
取的是这个点

34:05.260 --> 34:07.020
是不是这个元素的这个中心点

34:07.660 --> 34:08.060
对不对

34:08.060 --> 34:09.020
你看这个旋转

34:09.020 --> 34:09.740
你就看得出来

34:09.740 --> 34:10.300
比如我们这边

34:10.300 --> 34:11.260
我们在旋转的时候

34:11.900 --> 34:12.300
比如说

34:13.180 --> 34:13.660
zo

34:16.620 --> 34:17.100
比如说这边

34:17.980 --> 34:18.540
zoate

34:19.660 --> 34:21.020
啊我们这边旋转多少呢

34:21.100 --> 34:22.300
旋转45度

34:24.580 --> 34:24.900
走

34:26.260 --> 34:26.660
你看

34:27.140 --> 34:27.700
看到没有

34:27.700 --> 34:28.580
默认是什么呢

34:28.580 --> 34:29.540
默认他这个点

34:29.540 --> 34:30.420
是不是应该是这个点

34:31.300 --> 34:31.780
对吧

34:31.780 --> 34:32.500
是这个点

34:32.500 --> 34:33.220
那这个点的话

34:33.220 --> 34:34.020
你是可以改的

34:34.740 --> 34:35.380
啊可以改的

34:35.380 --> 34:35.860
通过什么呢

34:35.860 --> 34:36.420
通过这个

34:37.140 --> 34:38.660
transform origin

34:39.140 --> 34:39.940
比我们来看一下嘛

34:40.980 --> 34:41.860
在没有这个

34:41.860 --> 34:43.940
重置transform origin下面

34:44.420 --> 34:45.380
啊它是以什么呢

34:46.020 --> 34:48.260
以元素自己中心位置

34:49.460 --> 34:50.500
进行这个变形

34:51.060 --> 34:51.620
那你这边

34:51.700 --> 34:53.940
你可以设置这个transform origin

34:54.580 --> 34:55.380
啊比如你这边的话

34:55.380 --> 34:56.500
可以用关键词

34:57.220 --> 34:58.180
也可以用什么呢

34:58.180 --> 34:59.380
也可以用百分比

34:59.940 --> 35:01.220
比我们这边我们来设置一下

35:02.580 --> 35:04.420
比较transform origin

35:06.450 --> 35:07.650
我设置成什么呢

35:07.650 --> 35:09.010
设置成零零

35:10.130 --> 35:11.090
零零的话

35:11.090 --> 35:12.050
我刷新一下

35:12.050 --> 35:13.250
零零的话就应该是哪个点

35:13.250 --> 35:14.050
是不是就应该这个点

35:14.610 --> 35:15.010
对不对

35:15.010 --> 35:15.970
让它接下来回头

35:15.970 --> 35:16.290
你看

35:17.090 --> 35:18.370
这明显和刚才不一样了

35:19.010 --> 35:19.650
看到没有

35:19.650 --> 35:21.090
你用我的中心点在这了

35:21.810 --> 35:22.130
啊

35:22.130 --> 35:24.050
这个就是transform origin

35:24.530 --> 35:25.410
设置它的这个

35:26.370 --> 35:26.770
原点

35:27.330 --> 35:27.570
ok

35:28.050 --> 35:28.770
好那这个的话

35:28.770 --> 35:29.730
就是我们整个这个

35:29.730 --> 35:31.410
独新数的这个前置知识

35:31.970 --> 35:33.090
但有的同学可能会觉得

35:33.090 --> 35:34.450
这个前置知识比较多

35:35.410 --> 35:36.050
比较多的话

35:36.050 --> 35:36.690
是因为比如说

35:36.690 --> 35:38.290
我在介绍这个变形的时候

35:38.930 --> 35:40.130
其实我们会用到什么呢

35:40.130 --> 35:41.170
我们会用到这个rotate

35:41.970 --> 35:42.770
主要用到rotate

35:42.770 --> 35:44.450
但是我就把后面的这几个

35:44.450 --> 35:45.570
一起给你介绍了

35:46.370 --> 35:46.690
对不对

35:47.330 --> 35:49.490
然后这个弹性盒子和这个网格布局

35:49.490 --> 35:50.850
其实主要是用到什么呢

35:50.930 --> 35:52.210
用到网格布局

35:52.610 --> 35:53.330
就是我这边的话

35:53.330 --> 35:55.010
提前给你讲了弹性盒子

35:55.010 --> 35:56.690
再给你讲这个网格布局

35:56.690 --> 35:57.810
你要好好理解一些

35:58.370 --> 35:58.610
啊

35:59.170 --> 35:59.890
好这个的话

35:59.890 --> 36:00.610
大家下来的话

36:00.610 --> 36:02.210
可以把这个文档看一看

36:02.210 --> 36:02.850
看了之后

36:02.850 --> 36:03.890
然后接下来的话

36:03.890 --> 36:05.970
可以尝试的来做一下这个

36:07.250 --> 36:07.970
来做一下这个

36:09.330 --> 36:11.490
这左边就是一个rotate

36:12.050 --> 36:13.170
右边的话就是一个

36:13.730 --> 36:14.450
网格布局

36:15.090 --> 36:15.410
好吧

36:15.890 --> 36:17.250
好这几颗先到这里

