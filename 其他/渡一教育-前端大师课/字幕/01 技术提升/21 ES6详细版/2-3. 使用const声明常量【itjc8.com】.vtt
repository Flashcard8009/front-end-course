WEBVTT

00:00.430 --> 00:06.430
在ES6里面 除了给你引入了net关键制之外

00:06.430 --> 00:10.930
同时又给大家一个新的关键制 叫做const

00:10.930 --> 00:16.430
这个它也是类似于net 它跟net的区别几乎是没有

00:16.430 --> 00:21.430
可以这样子说const和net的区别

00:23.430 --> 00:26.430
应该这样说const和net完全相同

00:26.430 --> 00:29.430
也就是你可以用const来声明辨量

00:29.430 --> 00:32.430
只有一个区别 什么区别呢

00:32.430 --> 00:38.430
仅在于用const声明的量

00:38.430 --> 00:42.430
是 应该说就是声明的辨量

00:42.430 --> 00:47.430
必须在声明时复制

00:47.430 --> 00:50.430
而且不可以更改

00:50.430 --> 00:53.430
而且不可以重新复制

00:53.430 --> 00:56.430
它就因此我们把它叫做场量

00:56.430 --> 00:59.430
场量是什么意思呢 就是一个不会变化的量

00:59.430 --> 01:03.430
比方说元州率 3.1415926

01:03.430 --> 01:04.430
它不会变化

01:04.430 --> 01:07.430
除了越地距离 越球到地球的距离

01:07.430 --> 01:10.430
这个东西不会变化 那么我们都可以用场量来声明

01:10.430 --> 01:13.430
实际上在我们的开发中

01:13.430 --> 01:17.430
实际上 在开发中

01:17.430 --> 01:23.430
应该尽量使用const来声明辨量

01:24.430 --> 01:28.430
以保证辨量的值

01:28.430 --> 01:32.430
不会随意创改

01:32.430 --> 01:35.430
这不是说为了安全

01:35.430 --> 01:38.430
是避免我们犯错 避免我们犯错

01:38.430 --> 01:41.430
什么意思呢 给大家看个例子吧

01:41.430 --> 01:45.430
先看例子 我们再来往下说

01:45.430 --> 01:50.430
script index.js

01:51.430 --> 01:53.430
这个是解释 举个例子

01:53.430 --> 01:55.430
它跟netz是完全一样的

01:55.430 --> 01:57.430
就是上节课的netz只是

01:57.430 --> 01:59.430
换到const里面完全相同

01:59.430 --> 02:01.430
什么不能在声明之前使用

02:01.430 --> 02:04.430
什么快捷作用域是完全一样的

02:04.430 --> 02:06.430
就一个区别 就是它不能改

02:06.430 --> 02:08.430
首先我们看第1个例子

02:08.430 --> 02:12.430
constA 如果说你不复制会怎么样

02:12.430 --> 02:14.430
你不复制会怎么样

02:14.430 --> 02:17.430
右键检查 你看 它报了一个错

02:18.430 --> 02:20.430
缺失 缺失什么呢

02:20.430 --> 02:23.430
initializer 就是初始化

02:23.430 --> 02:26.430
在一个常量的声明中缺失初始化

02:26.430 --> 02:27.430
就是我们刚才说的

02:27.430 --> 02:30.430
常量它必须要在声明时复制

02:30.430 --> 02:33.430
必须要在声明时对它进行初始化

02:33.430 --> 02:35.430
因为它的质疑开始要确定下来

02:35.430 --> 02:36.430
后面就不能改了

02:36.430 --> 02:38.430
所以说常量它一定是这样子写的

02:38.430 --> 02:40.430
声明的时候就必须要复制

02:40.430 --> 02:41.430
你看 是不是现在没错了

02:41.430 --> 02:44.430
当然你要输出的话也没有任何问题

02:44.430 --> 02:46.430
拿出来用的话没有任何问题

02:46.430 --> 02:49.430
另外 常量它是不可以重新复制的

02:49.430 --> 02:52.430
比方说你要重新给它复制 保存

02:52.430 --> 02:53.430
你看 是不是报错了

02:53.430 --> 02:56.430
它说assignment 就是assignment的什么意思

02:56.430 --> 02:58.430
就是复制 复制给什么呢

02:58.430 --> 03:00.430
一个constant

03:00.430 --> 03:02.430
constant就是常量的意思

03:02.430 --> 03:04.430
variable 常量

03:04.430 --> 03:06.430
把翻译成常量吧

03:06.430 --> 03:08.430
如果说你要字面翻译的话

03:08.430 --> 03:11.430
就是不可辩的辩量

03:11.430 --> 03:13.430
你看 在第二行就在这一行

03:13.430 --> 03:14.430
是不是出错了

03:14.430 --> 03:17.430
而且你给它复为相同的字也不行

03:17.430 --> 03:19.430
它就不允许这样的语法出现

03:19.430 --> 03:20.430
不允许这样的语法出现

03:20.430 --> 03:21.430
你看 还是报错了

03:21.430 --> 03:24.430
所以你不能复制 它不可以改变

03:24.430 --> 03:26.430
那么为什么说在实际的开发中

03:26.430 --> 03:29.430
应该尽量的使用它来声明辩量

03:29.430 --> 03:30.430
为什么呢

03:30.430 --> 03:34.430
因为我们后边有很多的框架

03:34.430 --> 03:37.430
很多的思想都在让你

03:37.430 --> 03:39.430
要设置一个东西的时候

03:39.430 --> 03:42.430
让它不可变 让它不可变的话

03:42.430 --> 03:43.430
所以说呢

03:43.430 --> 03:46.430
我们尽量使用const来声明辩量的话

03:46.430 --> 03:48.430
那么就可以保证这一点

03:48.430 --> 03:51.430
因此 其实我们在开发中

03:51.430 --> 03:55.430
很多时候声明的东西都是不可变化的

03:55.430 --> 03:59.320
比方说举个例子

03:59.320 --> 04:01.320
我们如果说用net来声明

04:01.320 --> 04:03.320
它能用挖就不说了

04:03.320 --> 04:05.320
用挖以后就不要再出现挖了

04:05.320 --> 04:07.320
比方说

04:07.320 --> 04:08.320
我们用net来声明

04:08.320 --> 04:10.320
那你想一想这个道理

04:10.320 --> 04:11.320
这个DIV会变化吗

04:11.320 --> 04:13.320
也会给它重新复制吗

04:14.320 --> 04:16.320
你会这样重新复制吗

04:16.320 --> 04:18.320
一般来说不会吧

04:18.320 --> 04:19.320
是不是不会啊

04:19.320 --> 04:20.320
那么这个时候呢

04:20.320 --> 04:22.320
你再使用const

04:22.320 --> 04:23.320
你直接使用const就行了

04:23.320 --> 04:25.320
就避免后边犯错

04:25.320 --> 04:26.320
你莫名其妙的

04:26.320 --> 04:27.320
我也不知道写到写的

04:27.320 --> 04:28.320
你就要重新复制了

04:28.320 --> 04:31.320
你写const是最容易避免犯错的

04:31.320 --> 04:32.320
就是很多变量

04:32.320 --> 04:34.320
其实我们开发中

04:36.320 --> 04:37.320
根据经验

04:37.320 --> 04:39.320
这里实际上是根据经验

04:39.320 --> 04:41.320
这原因如下

04:43.320 --> 04:46.320
为什么要尽量使用const来声明

04:46.320 --> 04:48.320
根据经验

04:48.320 --> 04:50.320
开发中

04:50.320 --> 04:53.320
开发中的很多

04:54.320 --> 04:56.320
变量

04:56.320 --> 04:57.320
都是

04:57.320 --> 04:59.320
都是不会更改

05:01.320 --> 05:03.320
也不

05:03.320 --> 05:07.320
也不应该更改的

05:07.320 --> 05:08.320
这是第一个原因

05:08.320 --> 05:09.320
很多变量都是这样子

05:09.320 --> 05:11.320
其实你直接回应一下

05:11.320 --> 05:12.320
很多变量都是这样子

05:12.320 --> 05:14.320
它不会不太会更改

05:14.320 --> 05:15.320
也是

05:15.320 --> 05:17.320
不应该更改的

05:17.320 --> 05:18.320
所以说我们尽量用常量复制

05:18.320 --> 05:20.320
就避免自己犯错

05:20.320 --> 05:22.320
那么如果说

05:22.320 --> 05:24.320
你遇到了需要更改的变量

05:24.320 --> 05:26.320
你再回过去好好思考一下

05:26.320 --> 05:28.320
这东西到底应不应该改

05:28.320 --> 05:30.320
如果你觉得它确实应该改

05:30.320 --> 05:31.320
OK

05:31.320 --> 05:32.320
那你把它变成net

05:32.320 --> 05:34.320
再把它变成net

05:34.320 --> 05:37.320
就是你尽量用const来声明

05:37.320 --> 05:39.320
避免犯错

05:39.320 --> 05:40.320
如果说你到时候报错了

05:40.320 --> 05:41.320
它说常量不可以改

05:41.320 --> 05:42.320
但是你这里改了

05:42.320 --> 05:43.320
你想一想这里能不能改

05:43.320 --> 05:44.320
该不改改

05:44.320 --> 05:45.320
你觉得应该改

05:45.320 --> 05:46.320
确实应该改

05:46.320 --> 05:48.320
好你再把它变成变量

05:48.320 --> 05:49.320
把它变成net

05:49.320 --> 05:50.320
应该的意思

05:50.320 --> 05:52.320
我们使用这种模式来做开发

05:52.320 --> 05:53.320
是最稳妥的

05:53.320 --> 05:54.320
是最不容易犯错的

05:54.320 --> 05:56.320
这也是我非常喜欢的一种开发方式

05:56.320 --> 05:57.320
拿到过后

05:57.320 --> 05:58.320
先定义变量的时候

05:58.320 --> 06:00.320
直接写个const

06:00.320 --> 06:02.320
这是关于这一块

06:02.320 --> 06:04.320
这里说大概做什么

06:04.320 --> 06:06.320
一般来说

06:07.320 --> 06:09.320
一般来说

06:09.320 --> 06:11.320
DIV变量

06:11.320 --> 06:13.320
是不会更改的

06:13.320 --> 06:15.320
好这是关于这个

06:15.320 --> 06:16.320
另外一个原因

06:16.320 --> 06:18.320
我这里就没法给大家写代码了

06:18.320 --> 06:20.320
就是后续的

06:20.320 --> 06:23.320
很多框架

06:23.320 --> 06:25.320
或者是

06:25.320 --> 06:27.320
第三方

06:27.320 --> 06:28.320
库

06:28.320 --> 06:29.320
第三方介石库

06:29.320 --> 06:30.320
都

06:32.320 --> 06:34.320
都对

06:34.320 --> 06:36.320
都要求

06:36.320 --> 06:38.320
不可变

06:38.320 --> 06:39.320
数据

06:39.320 --> 06:41.320
就数据不可变

06:41.320 --> 06:44.630
你给它说的数据是不能变化的

06:44.630 --> 06:45.630
包括里面

06:45.630 --> 06:46.630
后面学到的react

06:46.630 --> 06:47.630
都特别要求这一点

06:47.630 --> 06:48.630
包括什么

06:48.630 --> 06:49.630
对大实亚之类的

06:49.630 --> 06:50.630
就特别要求这一点

06:50.630 --> 06:52.630
那么它要求数据不可变

06:52.630 --> 06:53.630
所以说

06:53.630 --> 06:55.630
使用长量

06:55.630 --> 06:58.630
可以一定程度

06:58.630 --> 07:00.630
一定程度上

07:00.630 --> 07:02.630
保证这一点

07:02.630 --> 07:03.630
保证你避免

07:03.630 --> 07:05.630
你犯这个错误

07:05.630 --> 07:07.630
另外

07:07.630 --> 07:09.630
我们在使用长量的时候

07:09.630 --> 07:11.630
要注意一些细节

07:11.630 --> 07:13.630
注意的细节

07:13.630 --> 07:15.630
第一个

07:15.630 --> 07:17.630
长量

07:17.630 --> 07:19.630
不可变

07:19.630 --> 07:23.260
是指

07:23.260 --> 07:25.260
生命

07:25.260 --> 07:26.260
长

07:26.260 --> 07:28.260
生命的长量的

07:28.260 --> 07:30.260
内存空间

07:30.260 --> 07:31.260
不可变

07:31.260 --> 07:33.260
指的是这么一个玩意

07:33.260 --> 07:36.260
并不保证

07:36.260 --> 07:39.260
内存空间中

07:39.260 --> 07:41.260
地址指向的

07:41.260 --> 07:44.260
力其他空间

07:44.260 --> 07:45.260
不可变

07:45.260 --> 07:47.260
什么意思呢

07:47.260 --> 07:50.860
要看个例子

07:50.860 --> 07:51.860
我们生命一个对象

07:51.860 --> 07:53.860
obg

07:53.860 --> 07:55.860
我们先来一个简单的

07:55.860 --> 07:56.860
1

07:56.860 --> 07:58.860
等于2

07:58.860 --> 07:59.860
不能重新复制

07:59.860 --> 08:01.860
也就是不能重新复制的意思

08:01.860 --> 08:02.860
那么我们现在

08:02.860 --> 08:05.860
给他写一个PVT吧

08:05.860 --> 08:07.860
这一块相当于啥呢

08:07.860 --> 08:09.860
相当于是你在这里生命一块

08:09.860 --> 08:11.860
在快期作用域里面

08:11.860 --> 08:12.860
全球作用域里面

08:12.860 --> 08:13.860
生命了一块内存空间

08:13.860 --> 08:15.860
给他取名为A

08:15.860 --> 08:17.860
那么你把它设置为长量

08:17.860 --> 08:19.860
你把它设置为长量

08:19.860 --> 08:21.860
那么这个空间叫做A

08:21.860 --> 08:23.860
你把它设置为长量

08:23.860 --> 08:25.860
那么他就

08:25.860 --> 08:26.860
知道了

08:26.860 --> 08:27.860
这一块空间是长量

08:27.860 --> 08:28.860
是不能变化的

08:28.860 --> 08:29.860
是不能变化的

08:29.860 --> 08:31.860
那么你给它复制为一个E

08:31.860 --> 08:32.860
那么接下来

08:32.860 --> 08:34.860
你要给它重新复制

08:34.860 --> 08:36.860
是不是直接给内存空间复制

08:36.860 --> 08:37.860
给内存空间里面

08:37.860 --> 08:38.860
要重新放一个2

08:38.860 --> 08:39.860
或者是你打发里

08:39.860 --> 08:41.860
重新放一个E也不行

08:41.860 --> 08:43.860
你要更改这一块内存空间

08:43.860 --> 08:44.860
是不是它不允许

08:44.860 --> 08:45.860
对吧

08:45.860 --> 08:46.860
它不允许

08:46.860 --> 08:47.860
这种这个例子

08:47.860 --> 08:48.860
这个没什么好说的

08:48.860 --> 08:50.860
它一定是要抱错的

08:50.860 --> 08:53.860
那如果说它是一个对象呢

08:53.860 --> 08:55.860
比方说NAM

08:55.860 --> 08:57.860
等于

08:57.860 --> 09:00.860
顺便写一个

09:00.860 --> 09:02.860
比方说你是个对象

09:02.860 --> 09:04.860
那能不能这样子改呢

09:04.860 --> 09:06.860
能不能这样子改呢

09:06.860 --> 09:08.860
我们看一下吧

09:08.860 --> 09:09.860
它是个长量哦

09:09.860 --> 09:11.860
能不能改它里面的属向呢

09:11.860 --> 09:13.860
你会发现它是可以改的

09:13.860 --> 09:14.860
可以改的

09:14.860 --> 09:15.860
为什么可以改呢

09:15.860 --> 09:16.860
我们来画图

09:16.860 --> 09:18.860
A里面现在存的是啥

09:18.860 --> 09:19.860
存的是整个对象吗

09:19.860 --> 09:20.860
不是

09:20.860 --> 09:22.860
它存的是一个地址

09:22.860 --> 09:24.860
存的是一个地址

09:24.860 --> 09:26.860
这个地址是不是指向

09:26.860 --> 09:27.860
指向啥

09:27.860 --> 09:29.860
指向一块内存空间

09:29.860 --> 09:30.860
指向一块内存空间

09:30.860 --> 09:32.860
这个地址空间里面存的是什么呢

09:32.860 --> 09:34.860
存的是NAM

09:34.860 --> 09:35.860
为什么呢

09:35.860 --> 09:37.860
CAMMAN

09:37.860 --> 09:39.860
然后呢A级呢

09:39.860 --> 09:40.860
为什么呢

09:40.860 --> 09:41.860
123

09:41.860 --> 09:42.860
对吧

09:42.860 --> 09:43.860
存的是这个东西

09:43.860 --> 09:44.860
好那么现在的

09:44.860 --> 09:45.860
它只保证

09:45.860 --> 09:46.860
这一块内存空间是长量

09:46.860 --> 09:48.860
它并不保证这一块内存空间

09:48.860 --> 09:49.860
就它只保证

09:49.860 --> 09:50.860
A本身它是长量

09:50.860 --> 09:52.860
它里面存的东西是不能变的

09:52.860 --> 09:53.860
所以说呢

09:53.860 --> 09:55.860
你现在改的是啥

09:55.860 --> 09:56.860
通过这个A

09:56.860 --> 09:58.860
改的是另外一块内存空间的NAM

09:58.860 --> 10:00.860
这个A改的是它里面的属性

10:00.860 --> 10:02.860
是不是这样子是可以改的

10:02.860 --> 10:03.860
这样子是可以改的

10:03.860 --> 10:04.860
它只保证

10:04.860 --> 10:06.860
这一块区域是不可变的

10:06.860 --> 10:07.860
面对的是吗

10:07.860 --> 10:08.860
所以说它能保证啥

10:08.860 --> 10:10.860
它能保证你不要给A重新复制

10:10.860 --> 10:12.860
你给A重新复制

10:12.860 --> 10:14.860
那就不行

10:14.860 --> 10:15.860
ABC

10:15.860 --> 10:16.860
A级123

10:16.860 --> 10:17.860
你要这样的复制

10:17.860 --> 10:18.860
保存

10:18.860 --> 10:19.860
你看是不行

10:19.860 --> 10:20.860
对吧

10:20.860 --> 10:21.860
长量不可变

10:21.860 --> 10:22.860
它只能保证这个

10:22.860 --> 10:23.860
不能给A直接复制

10:23.860 --> 10:24.860
但是呢

10:24.860 --> 10:26.860
你要给N里面的东西重新改

10:26.860 --> 10:27.860
它是可以的

10:28.860 --> 10:29.860
不要意思吗

10:29.860 --> 10:31.860
那如果说你要

10:31.860 --> 10:33.860
把这里边东西变成不可变的话

10:33.860 --> 10:34.860
那你需要

10:34.860 --> 10:36.860
后边还需要学习一些第三方库

10:36.860 --> 10:37.860
才行

10:38.860 --> 10:40.860
目前原生的介石里边

10:40.860 --> 10:41.860
是不允许的

10:41.860 --> 10:43.860
是没法控制的

10:43.860 --> 10:45.860
其实后边我们学到一些东西

10:45.860 --> 10:46.860
也能控制

10:46.860 --> 10:48.860
能控制一部分

10:48.860 --> 10:49.860
如果说你要完整的去控制

10:49.860 --> 10:51.860
它里边东西是不可变的

10:51.860 --> 10:53.860
那么你还要学习一些第三方库

10:54.860 --> 10:56.860
这是关于长量这一块

10:56.860 --> 10:57.860
另外一个细节

10:57.860 --> 10:59.860
就是关于长量的命名

10:59.860 --> 11:01.860
长量的命名

11:01.860 --> 11:02.860
长量的命名

11:02.860 --> 11:04.860
有两种

11:04.860 --> 11:06.860
普通的长量

11:06.860 --> 11:08.860
什么叫普通的长量呢

11:08.860 --> 11:10.860
我们就先说这个吧

11:10.860 --> 11:12.860
特殊的长量

11:12.860 --> 11:13.860
什么叫特殊的长量

11:13.860 --> 11:14.860
就是说

11:14.860 --> 11:17.860
该长量

11:17.860 --> 11:20.860
从字面意义上

11:20.860 --> 11:23.860
一定是不可变的

11:23.860 --> 11:24.860
比如

11:24.860 --> 11:26.860
原州率

11:26.860 --> 11:28.860
越地距离

11:28.860 --> 11:31.860
越地距离

11:31.860 --> 11:34.860
一些或其他

11:34.860 --> 11:36.860
一些

11:36.860 --> 11:40.860
绝不可能变化的

11:40.860 --> 11:42.860
变化的配置

11:43.860 --> 11:44.860
比方说一些配置

11:44.860 --> 11:46.860
它绝不可能会变化

11:46.860 --> 11:47.860
比方说一个游戏

11:47.860 --> 11:48.860
一个游戏

11:48.860 --> 11:49.860
做一个游戏配置

11:49.860 --> 11:50.860
一个游戏的边板的宽高

11:50.860 --> 11:51.860
是定宽的

11:51.860 --> 11:53.860
定宽高为500

11:53.860 --> 11:55.860
就是从字面意义上来看

11:55.860 --> 11:56.860
它一定是不可变的

11:56.860 --> 11:57.860
就是说你不用

11:57.860 --> 11:59.860
特别去在意这个东西

11:59.860 --> 12:00.860
你看它的名字就知道

12:00.860 --> 12:01.860
它一定不可变

12:01.860 --> 12:04.860
那么这样的长量的

12:04.860 --> 12:07.860
通常

12:07.860 --> 12:09.860
该长量的名字

12:09.860 --> 12:12.860
长量的名称

12:12.860 --> 12:16.860
全部使用大写

12:16.860 --> 12:17.860
该长的名称

12:17.860 --> 12:18.860
全部使用大写

12:18.860 --> 12:19.860
比如说

12:19.860 --> 12:20.860
我举个例子

12:20.860 --> 12:21.860
这是一些约定俗成的

12:21.860 --> 12:22.860
一些规范吧

12:22.860 --> 12:23.860
应该说

12:23.860 --> 12:24.860
比方说我们写个原则律派

12:24.860 --> 12:26.860
全部大写

12:26.860 --> 12:27.860
全部大写

12:27.860 --> 12:28.860
对吧

12:28.860 --> 12:29.860
就这么个意思

12:29.860 --> 12:30.860
比方说

12:30.860 --> 12:31.860
再来一个

12:31.860 --> 12:32.860
就是

12:32.860 --> 12:33.860
月球

12:33.860 --> 12:35.860
地球

12:35.860 --> 12:36.860
地球

12:36.860 --> 12:37.860
地球

12:37.860 --> 12:38.860
地球

12:38.860 --> 12:39.860
地球

12:39.860 --> 12:40.860
地球

12:40.860 --> 12:41.860
地球

12:41.860 --> 12:42.860
地球

12:42.860 --> 12:43.860
地球

12:43.860 --> 12:44.860
地球

12:44.860 --> 12:47.490
地球

12:47.490 --> 12:48.490
地球

12:48.490 --> 12:49.490
地球

12:49.490 --> 12:50.490
地球

12:50.490 --> 12:51.490
地球

12:51.490 --> 12:52.490
地球

12:52.490 --> 12:53.490
地球

12:53.490 --> 12:54.490
地球

12:54.490 --> 12:55.490
地球

12:55.490 --> 12:56.490
地球

12:56.490 --> 12:57.490
地球

12:57.490 --> 12:58.490
地球

12:58.490 --> 12:59.490
地球

12:59.490 --> 13:00.490
地球

13:00.490 --> 13:01.490
地球

13:01.490 --> 13:02.490
地球

13:02.490 --> 13:03.490
地球

13:03.490 --> 13:04.490
地球

13:04.490 --> 13:05.490
地球

13:05.490 --> 13:06.490
地球

13:06.490 --> 13:07.490
地球

13:07.490 --> 13:08.490
地球

13:08.490 --> 13:09.490
地球

13:09.490 --> 13:10.490
地球

13:10.490 --> 13:11.490
地球

13:11.490 --> 13:12.490
地球

13:12.490 --> 13:13.490
地球

13:13.490 --> 13:14.490
地球

13:14.490 --> 13:15.490
地球

13:15.490 --> 13:16.490
地球

13:16.490 --> 13:17.490
地球

13:17.490 --> 13:18.490
地球

13:18.490 --> 13:19.490
地球

13:19.490 --> 13:20.490
地球

13:20.490 --> 13:21.490
地球

13:21.490 --> 13:22.490
地球

13:22.490 --> 13:23.490
地球

13:23.490 --> 13:24.490
地球

13:24.490 --> 13:25.490
地球

13:25.490 --> 13:26.490
地球

13:26.490 --> 13:27.490
地球

13:27.490 --> 13:28.490
地球

13:28.490 --> 13:29.490
地球

13:29.490 --> 13:30.490
地球

13:30.490 --> 13:31.490
地球

13:31.490 --> 13:32.490
地球

13:32.490 --> 13:33.490
地球

13:33.490 --> 13:34.490
地球

13:34.490 --> 13:35.490
地球

13:35.490 --> 13:36.490
地球

13:36.490 --> 13:37.490
地球

13:37.490 --> 13:38.490
地球

13:38.490 --> 13:39.490
地球

13:39.490 --> 13:40.490
地球

13:40.490 --> 13:41.490
地球

13:41.490 --> 13:42.490
地球

13:42.490 --> 13:43.490
地球

13:43.490 --> 13:44.490
地球

13:44.490 --> 13:45.490
地球

13:45.490 --> 13:46.490
地球

13:46.490 --> 13:47.490
地球

13:47.490 --> 13:48.490
地球

13:48.490 --> 13:49.490
地球

13:49.490 --> 13:50.490
地球

13:50.490 --> 13:51.490
地球

13:51.490 --> 13:53.290
其他就没啥了

13:53.290 --> 13:54.850
大家以后注意一下

13:54.850 --> 13:56.890
我们以后开发中肯定是不能用罢了

13:56.890 --> 13:57.890
肯定是不能用罢了

13:57.890 --> 14:00.290
然后在开发中尽量使用长量

14:00.290 --> 14:02.090
而不是用net

14:02.090 --> 14:05.490
还有一个 还有一个特别重要的

14:05.490 --> 14:10.890
在4循环中不能使用

14:10.890 --> 14:15.690
循环变量不可以使用长量

14:15.690 --> 14:17.690
这个东西好理解吧

14:17.690 --> 14:20.890
在4循环里面你能使用长量来循环吗

14:21.890 --> 14:23.490
你能使用长量吗

14:23.490 --> 14:25.090
在这里是一个i

14:25.090 --> 14:26.090
i等于0

14:26.090 --> 14:27.090
i小于10

14:27.090 --> 14:28.690
你能把这里变成长量吗

14:28.690 --> 14:29.690
是不是不能

14:29.690 --> 14:31.890
在这里是不能的

14:31.890 --> 14:32.290
为什么呢

14:32.290 --> 14:33.490
因为这个i会变动

14:33.490 --> 14:34.890
对不对

14:34.890 --> 14:35.690
这个i会变动

14:35.690 --> 14:36.290
对吧

14:36.290 --> 14:37.890
它是循环第一次倒是没问题

14:37.890 --> 14:38.890
第二次循环

14:38.890 --> 14:40.390
i加加的时候是不是要出问题

14:40.390 --> 14:41.890
因为你在改中这个长量

14:41.890 --> 14:42.390
对吧

14:42.390 --> 14:43.890
在4循环里面肯定要使用net

14:43.890 --> 14:45.890
这个没什么好说的

14:45.890 --> 14:48.490
但是你在4音循环里面可以没有

14:48.490 --> 14:50.690
你在4音循环里面是可以

14:51.090 --> 14:54.390
可以使用长量的

14:54.390 --> 14:56.390
在4音循环里面

14:56.390 --> 14:58.390
probobg

14:58.390 --> 15:00.390
你看呀

15:00.390 --> 15:02.390
在4音循环里面是不是可以使用长量

15:02.390 --> 15:03.390
没问题吧

15:03.390 --> 15:04.390
对不对

15:04.390 --> 15:05.390
因为4音循环里面

15:05.390 --> 15:07.390
这一个东西它不会变化

15:07.390 --> 15:09.390
它是綁定到作用域里面的

15:09.390 --> 15:11.390
每一次是一个新的变量

15:11.390 --> 15:12.390
每一次是一个新的

15:12.390 --> 15:14.390
所以说每一次循环的

15:14.390 --> 15:16.390
它这个变量是没有变的

15:16.390 --> 15:17.390
是没有变的

15:17.390 --> 15:18.390
应该意思吧

15:18.390 --> 15:20.390
主要是4循环里面一个i加加

15:20.390 --> 15:22.390
它有一个循环条件更改

15:22.390 --> 15:23.390
它会改动这个长量

15:23.390 --> 15:24.390
会导致这个问题

15:24.390 --> 15:26.390
但是在4音循环里面不会

15:26.390 --> 15:27.390
不会

15:27.390 --> 15:30.390
那么我们这里输出probob

15:30.390 --> 15:31.390
你看

15:31.390 --> 15:32.390
两个都可以输出

15:32.390 --> 15:33.390
对吧

15:33.390 --> 15:34.390
因为它也是有快捷重用域的

15:34.390 --> 15:35.390
每一个快捷重用域

15:35.390 --> 15:37.390
使用的是一个全新的长量

15:37.390 --> 15:39.390
所以之前的长量是没有改动的

15:40.390 --> 15:41.390
好吧

15:41.390 --> 15:42.390
这是关于这一块

15:42.390 --> 15:44.390
这些细节注意一下就完成了

15:44.390 --> 15:46.390
其实对我们写代码来说

15:46.390 --> 15:47.390
其实非常简单

15:47.390 --> 15:49.390
就是把你之前写的VAR

15:49.390 --> 15:50.390
改成Const

15:50.390 --> 15:52.390
如果说你觉得它要变

15:52.390 --> 15:53.390
那就改改成net

15:53.390 --> 15:57.390
这就是这一张我们要强热的东西

15:57.390 --> 15:59.390
就没了

15:59.390 --> 16:01.390
这是关于

16:01.390 --> 16:03.390
这一张快捷绑立的东西

16:03.390 --> 16:05.390
那就多了一个快捷上加文

16:05.390 --> 16:06.390
多了一个快捷

16:06.390 --> 16:07.390
不是快捷上加文

16:07.390 --> 16:08.390
快捷重用域

16:08.390 --> 16:09.390
多了这么一个东西

16:09.390 --> 16:11.390
多了这么一个东西之后

16:11.390 --> 16:13.390
我们写的变量也好

16:13.390 --> 16:14.390
长量也好

16:14.390 --> 16:15.390
在里边定义的

16:15.390 --> 16:16.390
外边不能用

16:16.390 --> 16:17.390
外边定义的里边可以用

16:17.390 --> 16:18.390
好吧

16:18.390 --> 16:19.390
好

16:19.390 --> 16:20.390
这是关于Const

