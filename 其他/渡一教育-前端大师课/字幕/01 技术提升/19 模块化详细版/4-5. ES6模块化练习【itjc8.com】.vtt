WEBVTT

00:00.560 --> 00:06.060
这些课咱们利用我们学过的ES6的知识来完成这么一个效果

00:06.060 --> 00:09.260
因为之前在Note端没法完成啥效果

00:09.260 --> 00:11.060
因为Note没有什么界面

00:11.060 --> 00:13.060
我们在页面上是有界面的

00:13.060 --> 00:15.060
我们就完成推箱子的小游戏

00:15.060 --> 00:22.060
按键盘上的光标键可以控制Pikachu来回跑

00:22.060 --> 00:26.060
把这个箱子推过去就赢了

00:26.060 --> 00:30.060
其实这个地图原本不是这个样子的

00:30.060 --> 00:32.060
现在动不了了

00:32.060 --> 00:34.060
我这里没有提示什么游戏结束

00:34.060 --> 00:37.060
我好像在控制台里边提示了一下游戏胜利的

00:37.060 --> 00:39.060
但是我没有去做界面

00:39.060 --> 00:41.060
大家有兴趣的话可以把界面也做成

00:41.060 --> 00:42.060
那么现在动不了了

00:42.060 --> 00:43.060
游戏已经结束了

00:43.060 --> 00:48.060
实际上这个游戏我小时候的游戏挺有意思的

00:48.060 --> 00:52.060
当然当时的关卡它是这个样子

00:52.060 --> 00:53.060
我给它画一下

00:53.060 --> 00:54.060
当它关卡是这个样子

00:54.060 --> 00:57.060
这里还有一堵墙

00:57.060 --> 00:58.060
我这关是过不去的

00:58.060 --> 00:59.060
到现在我都过不去

00:59.060 --> 01:01.060
我只能把它改简单了

01:01.060 --> 01:02.060
改简单了之后才能过去

01:02.060 --> 01:04.060
这一关蛮难的

01:04.060 --> 01:07.060
那么这就是这个游戏整个的玩法

01:07.060 --> 01:09.060
你看箱子推到了正确的位置上

01:09.060 --> 01:11.060
它就变成了一个就是绿色的箱子

01:11.060 --> 01:13.060
你看这个黄色的箱子表示

01:13.060 --> 01:15.060
这个箱子没有在正确的位置上

01:15.060 --> 01:17.060
那么这个绿色的框框表示箱子的正确位置

01:17.060 --> 01:18.060
不管你怎么推

01:18.060 --> 01:21.060
反正总是要把箱子推到正确的位置

01:21.060 --> 01:23.060
你看你把这个正确的箱子推开了过后

01:23.060 --> 01:25.060
还变成黄色了

01:25.060 --> 01:27.060
这就是咱们这么一个游戏

01:27.060 --> 01:31.060
其实这个游戏我在公开直播课里边

01:31.060 --> 01:33.060
包括我们的什么那个

01:33.060 --> 01:36.060
DEMON挑战赛里边也给大家做过的

01:36.060 --> 01:39.060
这个游戏我觉得一是有意思

01:39.060 --> 01:41.060
二是它是一个完整的游戏

01:41.060 --> 01:45.060
三它的复杂度既不简单也不那么复杂

01:45.060 --> 01:46.060
比较适中

01:46.060 --> 01:48.060
而且它做起来也挺有意思的

01:48.060 --> 01:49.060
所以说我最多还是选择了

01:49.060 --> 01:51.060
这个游戏来完成这个模块化的练习

01:51.060 --> 01:53.060
可能有些同学做过

01:53.060 --> 01:55.060
听过我的公开直播课做过

01:55.060 --> 01:57.060
但是没有用模块化做过

01:57.060 --> 02:00.060
那么这里可能我们用使用模块化来完成这个游戏

02:01.060 --> 02:04.060
首先我们还是跟之前一样来写页面

02:04.060 --> 02:06.060
这个的素材已经在这了

02:06.060 --> 02:09.060
有箱子的素材

02:09.060 --> 02:11.060
有绿色箱子的素材

02:11.060 --> 02:13.060
有玩家的素材

02:13.060 --> 02:15.060
有强的素材

02:15.060 --> 02:17.060
我们这里先建立一个页面

02:17.060 --> 02:19.060
把央视给它写一下

02:19.060 --> 02:20.060
听不听

02:20.060 --> 02:21.060
这个页面

02:21.060 --> 02:24.060
这个页面上有这么一个DIV

02:25.060 --> 02:27.060
给它一个内名

02:27.060 --> 02:28.060
Game

02:28.060 --> 02:29.060
游戏

02:29.060 --> 02:30.060
这么一个DIV

02:30.060 --> 02:31.060
好,来吧

02:31.060 --> 02:33.060
我们给它写上央视

02:33.060 --> 02:36.060
要不然我就直接把央视照搬过来算了

02:36.060 --> 02:38.060
照搬过来得了

02:38.060 --> 02:40.060
我的央视也不是重点

02:40.060 --> 02:44.060
直接把文件复制到这边来

02:44.060 --> 02:46.060
央视不是重点,无所谓的

02:46.060 --> 02:48.060
我再说一下

02:48.060 --> 02:50.060
说一下这里面我们写好的央视

02:50.060 --> 02:52.060
这里面央视有很多

02:52.060 --> 02:55.060
DIV在这,这个介绍去掉

02:55.060 --> 02:57.060
这个DIV里面就保存了

02:57.060 --> 02:58.060
游戏里面的所有元素

02:58.060 --> 03:00.060
我们来看一下这个DIV的样式

03:00.060 --> 03:02.060
我们给它写上,就ID嘛

03:02.060 --> 03:03.060
ID无所谓

03:03.060 --> 03:05.060
这个Game里面

03:05.060 --> 03:06.060
首先居中

03:06.060 --> 03:07.060
然后呢

03:07.060 --> 03:08.060
Playing Relative

03:08.060 --> 03:10.060
因为它里面有很多元素

03:10.060 --> 03:12.060
很多元素它都是

03:12.060 --> 03:14.060
都是绝对定位

03:14.060 --> 03:16.060
所以说把它变成相对定位

03:16.060 --> 03:17.060
那么这里面肯定要放很多

03:17.060 --> 03:18.060
绝对定位的元素

03:18.060 --> 03:20.060
那如果说我们边看边说

03:20.060 --> 03:24.060
如果说我往这里面放一些东西

03:24.060 --> 03:27.060
比方说我往这里面放一些东西

03:27.060 --> 03:28.060
放什么呢

03:28.060 --> 03:31.060
我往这里面放置一个墙

03:31.060 --> 03:33.060
放置一堵墙

03:33.060 --> 03:34.060
我该怎么来放呢

03:34.060 --> 03:36.060
我可以用这种方式

03:36.060 --> 03:37.060
这里面写上一个DIV

03:37.060 --> 03:39.060
给它一个内样式

03:39.060 --> 03:41.060
给它一个内样式握

03:41.060 --> 03:43.060
它就表示一堵墙

03:43.060 --> 03:44.060
你看

03:44.060 --> 03:46.060
还有一个内样式,Item

03:46.060 --> 03:48.060
给它两个内样式

03:48.060 --> 03:49.060
一个Item,一个握

03:49.060 --> 03:51.060
那么它就变成一堵墙

03:51.060 --> 03:53.060
Item内样式就该定一个宽高

03:53.060 --> 03:54.060
因为你可以发现

03:54.060 --> 03:56.060
这个游戏里面每一个块

03:56.060 --> 03:58.060
每一个块它都是有宽高的

03:58.060 --> 03:59.060
宽高都是固定的

03:59.060 --> 04:01.060
包括皮卡丘

04:01.060 --> 04:02.060
宽高都是固定的

04:02.060 --> 04:03.060
箱子也好

04:03.060 --> 04:05.060
这些东西全部都是固定的

04:05.060 --> 04:06.060
没问题吧

04:06.060 --> 04:08.060
所以说我写了个通用样式

04:08.060 --> 04:10.060
写了个通用样式Item

04:10.060 --> 04:12.060
来表示它的就是宽高

04:12.060 --> 04:13.060
把它变成绝对定位

04:13.060 --> 04:16.060
给它设置一下背景图的尺寸

04:16.060 --> 04:17.060
充满整个元素

04:17.060 --> 04:18.060
然后不同的那样式

04:18.060 --> 04:20.060
给它不同的背景图就完事了

04:20.060 --> 04:22.060
这个样式其实挺简单的

04:22.060 --> 04:23.060
Item

04:23.060 --> 04:24.060
保存

04:24.060 --> 04:26.060
你看,是不是就有一堵墙了

04:26.060 --> 04:27.060
对不对

04:27.060 --> 04:29.060
只不过这个DAV目前没有设置宽高

04:29.060 --> 04:31.060
这些东西都需要用GS来设置

04:31.060 --> 04:33.060
都需要用GS来设置宽高

04:33.060 --> 04:34.060
没问题吧

04:34.060 --> 04:35.060
OK

04:35.060 --> 04:37.060
那么这里我们把它变成一堵墙

04:37.060 --> 04:39.060
如果说你要把它变成一个箱子

04:39.060 --> 04:41.060
就可以使用这个内样式

04:41.060 --> 04:42.060
BOX

04:42.060 --> 04:44.060
那么这里边加个DAV

04:44.060 --> 04:45.060
它就变成箱子的

04:45.060 --> 04:48.060
因为它的位置需要用GS来控制

04:48.060 --> 04:50.060
用GS来控制它的重作标

04:50.060 --> 04:52.060
然后如果说你需要它是个玩家

04:52.060 --> 04:53.060
就是个皮卡丘

04:53.060 --> 04:54.060
那么把它变成Player

04:54.060 --> 04:56.060
特别简单

04:56.060 --> 04:58.060
如果说你需要

04:58.060 --> 05:00.060
使用一个正确的箱子

05:00.060 --> 05:03.060
把它变成Correct Box

05:03.060 --> 05:05.060
变得非常简单

05:05.060 --> 05:08.060
如果说你只是给它一个正确的位置

05:08.060 --> 05:09.060
Correct

05:09.060 --> 05:11.060
你看,变成一个预设的框框

05:11.060 --> 05:12.060
那么这个游戏里边

05:12.060 --> 05:14.060
所有东西是不是就可以搞定了

05:14.060 --> 05:16.060
这是关于这一款

05:16.060 --> 05:18.060
这个内样式你刚才能看到

05:18.060 --> 05:20.060
非常简单

05:20.060 --> 05:22.060
非常简单

05:22.060 --> 05:23.060
那么现在我们就是

05:23.060 --> 05:24.060
页面就已经做完了

05:24.060 --> 05:27.060
页面和央视的东西就做完了

05:27.060 --> 05:29.060
那么至于这个DAV里边

05:29.060 --> 05:31.060
到底有多少个箱子

05:31.060 --> 05:33.060
他们每一个箱子的位置

05:33.060 --> 05:35.060
已经有玩家在哪

05:35.060 --> 05:36.060
正确位置在哪

05:36.060 --> 05:38.060
就不是静态页面能考虑的事情了

05:38.060 --> 05:39.060
静态页面

05:39.060 --> 05:41.060
它只是把央视给你做出来

05:41.060 --> 05:42.060
那么这里边

05:42.060 --> 05:44.060
要有什么东西全是介石来控制

05:44.060 --> 05:46.060
那么接下来我们来写介石

05:46.060 --> 05:48.060
我们会使用模块画的方式来开发

05:48.060 --> 05:50.060
因此我这里肯定

05:50.060 --> 05:53.060
想都不用想一定会有一个模块文件

05:53.060 --> 05:55.060
一个入口文件

05:55.060 --> 05:57.060
我们在这里写上一个入口文件

05:57.060 --> 05:59.060
index.介石

05:59.060 --> 06:01.060
ok

06:01.060 --> 06:03.060
index.module

06:03.060 --> 06:05.060
index.介石

06:05.060 --> 06:06.060
当然这里边

06:06.060 --> 06:08.060
如果说项目更加复杂的话

06:08.060 --> 06:09.060
你还可以花分一些字幕录

06:09.060 --> 06:11.060
比方说游戏的元素之类的东西

06:11.060 --> 06:13.060
还来进行管理

06:13.060 --> 06:14.060
都无所谓

06:14.060 --> 06:16.060
总之我们入口文件的是index.介石

06:16.060 --> 06:17.060
没问题吧

06:17.060 --> 06:19.060
ok

06:19.060 --> 06:21.060
那么这个文件名的话

06:21.060 --> 06:22.060
文件假的名字的话随便

06:22.060 --> 06:24.060
比方说你用介石的文件名

06:24.060 --> 06:25.060
假的名字

06:25.060 --> 06:26.060
或者是用src

06:26.060 --> 06:28.060
我们后边经常看到

06:28.060 --> 06:29.060
src这个目录

06:29.060 --> 06:31.060
表示我们的原码文件

06:31.060 --> 06:32.060
都可以

06:32.060 --> 06:34.060
我们这里就使用module

06:34.060 --> 06:36.060
那么这个入口文件里边

06:36.060 --> 06:37.060
肯定不能把所有事情

06:37.060 --> 06:38.060
全部写到这里边

06:38.060 --> 06:39.060
我们现在学了模块画了

06:39.060 --> 06:41.060
尽量把不同的功能分开

06:41.060 --> 06:42.060
来吧

06:42.060 --> 06:43.060
没一点点的分析

06:44.060 --> 06:47.060
首先这里有一个问题就是

06:47.060 --> 06:50.060
我这个游戏里边有多少个箱子

06:52.060 --> 06:54.060
箱子的相对位置在哪

06:54.060 --> 06:57.060
有多少个强的位置

06:57.060 --> 06:58.060
玩家的位置

06:58.060 --> 07:00.060
正确方块的位置

07:00.060 --> 07:01.060
是不是这些东西

07:01.060 --> 07:02.060
都需要一个东西来记录

07:02.060 --> 07:03.060
对吧

07:03.060 --> 07:04.060
我们可以认为

07:04.060 --> 07:06.060
这个东西是一个地图

07:06.060 --> 07:08.060
我们可以认为

07:08.060 --> 07:10.060
这个东西是一个地图

07:10.060 --> 07:11.060
这个地图中记录了

07:11.060 --> 07:12.060
什么呢

07:12.060 --> 07:14.060
记录了所有东西的位置

07:14.060 --> 07:16.060
以及那个位置到底是强

07:16.060 --> 07:17.060
还是玩家

07:17.060 --> 07:18.060
还是箱子

07:18.060 --> 07:19.060
还是一个正确位置

07:19.060 --> 07:20.060
都需要东西来记录

07:20.060 --> 07:21.060
明白了意思吗

07:21.060 --> 07:22.060
所以说我们在这里

07:22.060 --> 07:23.060
很容易可以想到

07:23.060 --> 07:25.060
其中有一个模块是什么呢

07:25.060 --> 07:26.060
叫做map

07:26.060 --> 07:27.060
就地图

07:27.060 --> 07:28.060
这个地图里边

07:28.060 --> 07:29.060
什么都不管

07:29.060 --> 07:30.060
它只用于

07:30.060 --> 07:31.060
仅用于

07:31.060 --> 07:32.060
记录

07:32.060 --> 07:35.060
地图中的内容

07:35.060 --> 07:36.060
有哪些内容

07:36.060 --> 07:38.060
包括什么箱子

07:38.060 --> 07:40.060
还有什么玩家

07:40.060 --> 07:41.060
强

07:41.060 --> 07:42.060
还有空白

07:42.060 --> 07:43.060
还有空白

07:43.060 --> 07:44.060
什么叫空白

07:44.060 --> 07:45.060
这些地方就是空白

07:45.060 --> 07:47.060
一个个格子

07:47.060 --> 07:48.060
空白

07:48.060 --> 07:49.060
用于记录这些东西

07:49.060 --> 07:52.060
以及他们的相对位置

07:52.060 --> 07:53.060
那么我们怎么来记录

07:53.060 --> 07:54.060
这个地图呢

07:54.060 --> 07:55.060
怎么来记录

07:55.060 --> 07:57.060
这个地图里边的东西呢

07:57.060 --> 07:58.060
怎么来记录呢

07:58.060 --> 07:59.060
是不是我们可以

07:59.060 --> 08:02.060
选择使用一个二维数组

08:02.060 --> 08:04.060
因为我们可以看到

08:04.060 --> 08:05.060
这个地图呢

08:05.060 --> 08:07.060
它是由一行一行组成的

08:07.060 --> 08:09.060
每一行是不是有很多个格子

08:09.060 --> 08:10.060
每一行是个数组

08:10.060 --> 08:11.060
你看

08:11.060 --> 08:12.060
这一行

08:12.060 --> 08:13.060
这一行

08:13.060 --> 08:15.060
有很多行组成

08:15.060 --> 08:16.060
所以说整个是一个数组

08:16.060 --> 08:18.060
它是有很多行组成的

08:18.060 --> 08:20.060
而每一行又是一个数组

08:20.060 --> 08:22.060
那么是不是一个二维数组

08:22.060 --> 08:23.060
我们就可以用一个

08:23.060 --> 08:25.060
二维数组来表示

08:25.060 --> 08:26.060
因此我们这里

08:26.060 --> 08:27.060
写上一个变量

08:27.060 --> 08:29.060
地图map

08:29.060 --> 08:31.060
它可以用什么来表示呢

08:31.060 --> 08:32.060
用一个就是

08:32.060 --> 08:33.060
二维数组

08:34.060 --> 08:35.060
二维数组

08:37.060 --> 08:38.060
这是数组的

08:38.060 --> 08:40.060
这是第一行

08:42.060 --> 08:44.060
这个是第二行

08:45.060 --> 08:46.060
意思内推

08:46.060 --> 08:47.060
明白的意思吗

08:47.060 --> 08:49.060
它有多少行我们就写多少个东西

08:49.060 --> 08:50.060
没问题吧

08:50.060 --> 08:51.060
好

08:51.060 --> 08:52.060
那么这个就是

08:52.060 --> 08:54.060
我们的地图

08:54.060 --> 08:55.060
那么地图里边

08:55.060 --> 08:56.060
是不是有数据

08:57.060 --> 08:58.060
对

08:58.060 --> 08:59.060
是不是有数据

08:59.060 --> 09:00.060
那么这个数据呢

09:00.060 --> 09:01.060
我们来看一下

09:01.060 --> 09:02.060
那么这个数据呢

09:02.060 --> 09:04.060
每一行里边

09:04.060 --> 09:06.060
它到底是什么内容呢

09:06.060 --> 09:07.060
第一行里边有哪些内容呢

09:07.060 --> 09:09.060
我们可以用数字来表示

09:09.060 --> 09:10.060
比方说

09:10.060 --> 09:11.060
我们

09:11.060 --> 09:12.060
比方说

09:12.060 --> 09:13.060
我举个例子

09:14.060 --> 09:15.060
空白

09:15.060 --> 09:16.060
空白

09:16.060 --> 09:18.060
使用0来表示

09:18.060 --> 09:19.060
我之前做了一个记录的

09:19.060 --> 09:20.060
其实我这里

09:20.060 --> 09:21.060
已经把地图写好了

09:21.060 --> 09:22.060
不然我懒得写

09:22.060 --> 09:23.060
我把这个复制一下

09:24.060 --> 09:25.060
空白呢

09:25.060 --> 09:27.060
我用那个0来表示

09:27.060 --> 09:28.060
玩家呢

09:28.060 --> 09:29.060
用1来表示

09:29.060 --> 09:31.060
用3用箱子来表示

09:31.060 --> 09:33.060
那么我们把这个地图画出来的话

09:33.060 --> 09:34.060
我们就可以用

09:34.060 --> 09:35.060
把这个直接放过来

09:35.060 --> 09:36.060
画下来

09:36.060 --> 09:39.010
你看一下

09:39.010 --> 09:40.010
是不是画出一个地图了

09:40.010 --> 09:41.010
对不对

09:41.010 --> 09:42.010
这个是空白

09:42.010 --> 09:43.010
这里

09:43.010 --> 09:44.010
第一行的第一列

09:44.010 --> 09:45.010
是个空白

09:45.010 --> 09:46.010
你看一下吧

09:46.010 --> 09:47.010
第一行

09:47.010 --> 09:48.010
第一列

09:48.010 --> 09:49.010
是个空白

09:49.010 --> 09:50.010
第一行的第二列

09:50.010 --> 09:51.010
是空白

09:51.010 --> 09:52.010
第一行的第三列

09:52.010 --> 09:53.010
是强

09:53.010 --> 09:54.010
你看是不是可以画出来

09:54.010 --> 09:55.010
空白空白

09:55.010 --> 09:58.010
强强强强

09:58.010 --> 09:59.010
空白空白

09:59.010 --> 10:00.010
对吧

10:00.010 --> 10:01.010
这里是玩家

10:01.010 --> 10:02.010
这里是箱子

10:02.010 --> 10:03.010
对不对

10:03.010 --> 10:04.010
所以可以画出来

10:04.010 --> 10:05.010
我们就可以用这种方式

10:05.010 --> 10:07.010
是不是可以把地图就画出来了

10:08.010 --> 10:09.010
没问题吧

10:09.010 --> 10:10.010
当然了

10:10.010 --> 10:12.010
这个地图肯定也中途过程中

10:12.010 --> 10:13.010
游戏的过程中

10:13.010 --> 10:14.010
这里边的数据

10:14.010 --> 10:16.010
肯定会产生一些更改

10:16.010 --> 10:17.010
肯定会产生一些更改

10:17.010 --> 10:18.010
这个是毫无疑问的

10:18.010 --> 10:20.010
这是我们的地图

10:21.010 --> 10:22.010
好

10:22.010 --> 10:23.010
那么接下来

10:23.010 --> 10:24.010
我们来继续

10:24.010 --> 10:25.010
那么这个模块

10:25.010 --> 10:26.010
它是一个地图

10:26.010 --> 10:27.010
肯定要把这个地图导出

10:27.010 --> 10:28.010
对不对

10:28.010 --> 10:29.010
肯定要把这个地图导出

10:29.010 --> 10:31.010
那么我们把它导出

10:31.010 --> 10:32.010
export

10:32.010 --> 10:33.010
导出

10:33.010 --> 10:35.010
那么这里是用const

10:35.010 --> 10:37.010
我们尽量把它换成长量导出

10:37.010 --> 10:38.010
导出一个地图

10:38.010 --> 10:39.010
当然你可以使用默认导出

10:39.010 --> 10:40.010
其实无所谓

10:40.010 --> 10:41.010
无所谓

10:41.010 --> 10:43.010
这个地图是不是导出了

10:43.010 --> 10:44.010
好

10:44.010 --> 10:46.010
那么我们既然是一个地图模块

10:46.010 --> 10:47.010
那么这个地图里面

10:47.010 --> 10:48.010
包含了一些其他的信息

10:48.010 --> 10:51.010
是不是也得把它相应的导出

10:51.010 --> 10:52.010
还包含什么信息呢

10:52.010 --> 10:53.010
你看那个地图里面

10:53.010 --> 10:54.010
只记录了啥

10:54.010 --> 10:55.010
只记录了空白

10:55.010 --> 10:57.010
只记录了玩家

10:57.010 --> 10:58.010
只记录了墙

10:58.010 --> 10:59.010
只记录了箱子

10:59.010 --> 11:01.010
还有什么没有记录

11:01.010 --> 11:03.010
是不是正确位置

11:03.010 --> 11:05.010
正确位置在哪

11:05.010 --> 11:06.010
是不是没有记录

11:06.010 --> 11:08.010
那地图里面哪些是正确位置

11:08.010 --> 11:09.010
因为到时候正确位置

11:09.010 --> 11:11.010
我是要画个预设的框框的

11:11.010 --> 11:12.010
是没有记录

11:12.010 --> 11:15.010
那这里为什么没有记录正确位置呢

11:15.010 --> 11:18.010
为什么没有记录正确位置呢

11:18.010 --> 11:19.010
是因为正确位置

11:19.010 --> 11:21.010
我在这个地图里面

11:21.010 --> 11:22.010
确实不好记录

11:22.010 --> 11:24.010
为什么不好记录呢

11:24.010 --> 11:25.010
比方说

11:25.010 --> 11:28.010
你可以用一个诗来表示正确位置

11:28.010 --> 11:31.010
用一个诗来表示正确位置

11:31.010 --> 11:33.010
那什么意思呢

11:33.010 --> 11:35.010
就表示的是

11:35.010 --> 11:37.010
比方这个位置

11:37.010 --> 11:39.010
这个位置是不是一个正确位置

11:39.010 --> 11:42.010
我们现在是用空白来表示的

11:42.010 --> 11:44.010
就在这个箱子下边

11:44.010 --> 11:45.010
就这个位置

11:45.010 --> 11:46.010
本来是个正确位置

11:46.010 --> 11:48.010
我们是不是可以用诗来表示

11:48.010 --> 11:49.010
那问题来了

11:49.010 --> 11:52.010
那如果箱子处于正确位置上了

11:52.010 --> 11:54.010
因为这两个东西都可以重叠的

11:54.010 --> 11:56.010
箱子是不是可以处于正确位置上

11:56.010 --> 11:58.010
比方说这个箱子

11:58.010 --> 11:59.010
这个箱子

11:59.010 --> 12:00.010
那么你看这里

12:00.010 --> 12:02.010
这个箱子是不是可以处于正确位置

12:02.010 --> 12:04.010
那它到底写个3还是写4呢

12:04.010 --> 12:05.010
如果你写3

12:05.010 --> 12:07.010
你就从这个地图里面

12:07.010 --> 12:09.010
就看不出这个地方是正确位置的

12:09.010 --> 12:10.010
如果你写4

12:10.010 --> 12:12.010
你就看不出这个地方有箱子的

12:12.010 --> 12:14.010
是不是你还得写个5

12:14.010 --> 12:16.010
4表示空白的正确位置

12:16.010 --> 12:18.010
5表示箱子在空在正确位置上

12:18.010 --> 12:19.010
是不是就特别麻烦了

12:19.010 --> 12:20.010
对不对

12:20.010 --> 12:21.010
所以说因此

12:21.010 --> 12:24.010
我不在地图里面记录正确位置

12:24.010 --> 12:26.010
我不在地图里面记录正确位置

12:26.010 --> 12:27.010
你要听懂我的意思

12:27.010 --> 12:30.010
那么我怎么来记录正确位置呢

12:30.010 --> 12:32.010
我是用这种方式

12:32.010 --> 12:35.390
我是写了一个辩量

12:35.390 --> 12:36.390
写了一个辩量

12:36.390 --> 12:38.390
这个辩量里面的每一个

12:38.390 --> 12:39.390
这是个数组

12:39.390 --> 12:41.390
这个数组里面的每一个元素

12:41.390 --> 12:42.390
是一个属性

12:42.390 --> 12:44.390
是一个就是对象

12:44.390 --> 12:46.390
对象里面表示的是

12:46.390 --> 12:47.390
第几行

12:47.390 --> 12:49.390
第几列是一个正确位置

12:49.390 --> 12:51.390
当然行后列都是从零开始

12:51.390 --> 12:52.390
第几行

12:52.390 --> 12:54.390
第几列是一个正确位置

12:54.390 --> 12:55.390
那么这是一个正确位置

12:55.390 --> 12:57.390
这也是一个正确位置

12:57.390 --> 12:58.390
这也是一个正确位置

12:58.390 --> 13:00.390
那么把这些信息记录下来

13:00.390 --> 13:02.390
你在编写这个模块的时候

13:02.390 --> 13:04.390
你不用去考虑

13:04.390 --> 13:07.390
我怎么样改变地图里面的东西

13:07.390 --> 13:09.390
我怎么样让玩家从这儿跑到这儿

13:09.390 --> 13:10.390
我不用去考虑

13:10.390 --> 13:11.390
我只是把描述出来就完事了

13:11.390 --> 13:13.390
因为这只是地图模块

13:13.390 --> 13:14.390
编写模块的好

13:14.390 --> 13:16.390
模块号的好处就在于

13:16.390 --> 13:17.390
我写每一个模块的时候

13:17.390 --> 13:20.390
我只考虑这个模块里面的东西

13:20.390 --> 13:23.390
不用考虑跟这个模块无关的东西

13:23.390 --> 13:24.390
那么我把地图写下来

13:24.390 --> 13:26.390
把正确位置写下来

13:26.390 --> 13:28.390
是不是就已经足够描述整个的情况了

13:28.390 --> 13:30.390
是不是所有的情况都可以描述出来了

13:30.390 --> 13:31.390
对不对

13:31.390 --> 13:34.390
所有的情况是不是都可以描述出来了

13:34.390 --> 13:37.390
那么这里也同样地把导出

13:37.390 --> 13:38.390
Export

13:38.390 --> 13:41.390
那么这里Const

13:41.390 --> 13:43.390
同样地把导出

13:43.390 --> 13:44.390
没问题吧

13:44.390 --> 13:46.390
那么这个地图的模块就做完了

13:46.390 --> 13:47.390
我就导出了两个东西

13:47.390 --> 13:48.390
一个地图

13:48.390 --> 13:49.390
还有一个什么

13:49.390 --> 13:52.390
还有一个就是正确位置

13:52.390 --> 13:54.390
打个注射

13:54.390 --> 13:55.390
这是正确位置

13:55.390 --> 13:59.020
那么就写完了这个模块

13:59.020 --> 14:00.020
其他的模块要干嘛

14:00.020 --> 14:01.020
我随便你

14:01.020 --> 14:04.020
将来如果说我们地图有变化

14:04.020 --> 14:05.020
正确位置有变化

14:05.020 --> 14:07.020
我只需要改动这个模块就行了

14:07.020 --> 14:09.020
这个模块单看起来就非常非常简单了

14:09.020 --> 14:11.020
这就是模块号的好处

14:11.020 --> 14:13.020
每个模块就管一部分事情

14:13.020 --> 14:15.020
这是关于这一块

14:15.020 --> 14:17.020
那么另外一块

14:17.020 --> 14:19.020
我要这个地图里边

14:19.020 --> 14:21.020
它其实还有个信息

14:21.020 --> 14:22.020
大家比较容易忽略的

14:22.020 --> 14:24.020
就是这个地图有多宽

14:24.020 --> 14:26.020
多高呢

14:26.020 --> 14:28.020
是不是这个信息没有

14:28.020 --> 14:29.020
对吧

14:29.020 --> 14:31.020
当然你可以从这个数组里边

14:31.020 --> 14:32.020
可以取出

14:32.020 --> 14:33.020
但是毕竟不方便

14:33.020 --> 14:35.020
但是我最好就直接给你提供一个数据

14:35.020 --> 14:37.020
它到底多宽多高

14:37.020 --> 14:39.020
这个地图到底多宽多高

14:39.020 --> 14:40.020
那怎么来写呢

14:40.020 --> 14:42.020
我又可以导出

14:42.020 --> 14:44.020
直接导出两个就行了

14:44.020 --> 14:46.020
宽度

14:46.020 --> 14:47.020
宽度

14:47.020 --> 14:49.020
有多少呢

14:49.020 --> 14:50.020
这里呢

14:50.020 --> 14:52.020
我们可以直接用这个变量来取

14:52.020 --> 14:54.020
这个变量的它的宽度

14:54.020 --> 14:55.020
地图的宽度

14:55.020 --> 14:58.020
是不是它的每一个数组的长度

14:58.020 --> 15:00.020
就是每一行的长度

15:00.020 --> 15:01.020
我就取这个数

15:01.020 --> 15:03.020
取这个数组的第一行

15:03.020 --> 15:04.020
然后Diarrance

15:04.020 --> 15:06.020
是不是就可以取出来了

15:06.020 --> 15:08.020
又可以导出什么呢

15:08.020 --> 15:10.020
高度

15:10.020 --> 15:12.020
MapDiarrance

15:12.020 --> 15:13.020
高度是什么

15:13.020 --> 15:15.020
就是这个地图有多少行

15:15.020 --> 15:16.020
地图有几行

15:16.020 --> 15:17.020
是不是就多高

15:17.020 --> 15:18.020
对不对

15:18.020 --> 15:20.020
那么这个地图里边的宽高

15:20.020 --> 15:22.020
不是那个页面上的宽高

15:22.020 --> 15:24.020
不是一个页面上元素的宽高

15:24.020 --> 15:25.020
是每一

15:25.020 --> 15:26.020
地图都每一

15:26.020 --> 15:27.020
地图里边

15:27.020 --> 15:28.020
地图里边

15:28.020 --> 15:29.020
就地图有多少行

15:29.020 --> 15:30.020
多少列

15:30.020 --> 15:31.020
或者说不用宽高嘛

15:31.020 --> 15:33.020
用Rose

15:33.020 --> 15:35.020
这个是Cows

15:35.020 --> 15:37.020
CowLumber

15:37.020 --> 15:39.020
这个是RowLumber

15:39.020 --> 15:41.020
Cow表示列

15:41.020 --> 15:42.020
Row表示行

15:42.020 --> 15:45.020
这个是总列数

15:45.020 --> 15:49.330
这个表示总行数

15:49.330 --> 15:50.330
对吧

15:50.330 --> 15:51.330
用模块号的好处

15:51.330 --> 15:52.330
就在于每一个模块

15:52.330 --> 15:53.330
它就比较简单

15:53.330 --> 15:54.330
只是描述

15:54.330 --> 15:56.330
这个模块只是描述数据而已

15:56.330 --> 15:57.330
好

15:57.330 --> 15:58.330
那么这个模块就写完了

15:58.330 --> 16:00.330
关掉了

16:00.330 --> 16:01.330
好

16:01.330 --> 16:02.330
接下来我们来写下一个模块

16:02.330 --> 16:03.330
我这个地图

16:03.330 --> 16:05.330
我们只存在于数据里边

16:05.330 --> 16:06.330
对吧

16:06.330 --> 16:07.330
我总得显示吧

16:07.330 --> 16:08.330
我总得显示吧

16:08.330 --> 16:10.330
那么我们怎么来显示呢

16:10.330 --> 16:12.330
我们是不是还需要个模块来搞定

16:12.330 --> 16:13.330
我们还需要个模块

16:13.330 --> 16:15.330
把地图显示出来

16:15.330 --> 16:16.330
对不对

16:16.330 --> 16:17.330
是不是要把地图显示出来

16:17.330 --> 16:18.330
好

16:18.330 --> 16:19.330
来吧

16:19.330 --> 16:20.330
我们再新建一个模块

16:20.330 --> 16:22.330
这个模块叫做

16:22.330 --> 16:24.330
我们把它叫做UI模块

16:24.330 --> 16:25.330
UI模块

16:25.330 --> 16:27.330
用于将地图的显示

16:27.330 --> 16:30.330
用于将地图的显示到界面上

16:30.330 --> 16:33.330
这个模块打个主事

16:33.330 --> 16:34.330
该模块

16:34.330 --> 16:38.330
用于将地图显示到

16:38.330 --> 16:39.330
页面上

16:39.330 --> 16:41.330
那么这里肯定是不是要用到

16:41.330 --> 16:42.330
很多的元素

16:42.330 --> 16:43.330
对不对

16:43.330 --> 16:44.330
是不是要用到很多的元素

16:44.330 --> 16:45.330
包括这个什么容器

16:45.330 --> 16:46.330
DIV对不对

16:46.330 --> 16:47.330
那么我肯定可以

16:47.330 --> 16:49.330
也需要达到DIV

16:49.330 --> 16:51.330
DIV就是容器

16:51.330 --> 16:52.330
扛天了

16:52.330 --> 16:54.330
我们的容器

16:54.330 --> 16:55.330
等于什么呢

16:55.330 --> 16:56.330
Document

16:56.330 --> 16:58.330
GetElement by ID

16:58.330 --> 16:59.330
看一下

16:59.330 --> 17:00.330
我们的页面上不就是个game吗

17:00.330 --> 17:01.330
对不对

17:01.330 --> 17:02.330
达到

17:02.330 --> 17:04.330
而且你在写模块代码的时候

17:04.330 --> 17:06.330
你放心大胆的写

17:06.330 --> 17:07.330
这些选举编辖

17:07.330 --> 17:08.330
因为它不会污染的

17:08.330 --> 17:09.330
我们都知道

17:09.330 --> 17:11.330
这些东西全是对其他模块隐藏的

17:11.330 --> 17:12.330
它不会污染的

17:12.330 --> 17:13.330
方向让人写

17:13.330 --> 17:14.330
要写什么辅助

17:14.330 --> 17:15.330
还说随便写

17:15.330 --> 17:16.330
方向让人写

17:16.330 --> 17:17.330
它就不会造成什么污染的

17:17.330 --> 17:20.330
那么这是我们的容器

17:20.330 --> 17:21.330
我们要显示

17:21.330 --> 17:22.330
肯定要往容器里面加东西

17:22.330 --> 17:23.330
对不对

17:23.330 --> 17:24.330
来吧

17:24.330 --> 17:25.330
我们这里

17:25.330 --> 17:27.330
这个模块提供一个方法

17:27.330 --> 17:28.330
我们直接导出

17:28.330 --> 17:30.330
提供一个方法

17:31.330 --> 17:33.330
导出一个默认值

17:33.330 --> 17:35.330
就秀

17:35.330 --> 17:36.330
一个方法

17:36.330 --> 17:37.330
这个方法用于

17:38.330 --> 17:39.330
方形

17:40.330 --> 17:41.330
当然那个方法名字

17:41.330 --> 17:42.330
其实可以补用名字

17:42.330 --> 17:44.330
因为我们是用的是默认导出

17:44.330 --> 17:45.330
我这个模块

17:45.330 --> 17:46.330
我就打算导出一个函数

17:46.330 --> 17:48.330
该函数用于做什么

17:48.330 --> 17:50.330
大家注释

17:50.330 --> 17:52.330
该函数用于

17:52.330 --> 17:54.330
显示

17:54.330 --> 17:55.330
地图

17:55.330 --> 17:57.330
用于显示地图

17:57.330 --> 17:58.330
没问题吧

17:58.330 --> 17:59.330
这个函数

17:59.330 --> 18:00.330
它就专门用于

18:00.330 --> 18:02.330
显示地图就完事了

18:03.330 --> 18:04.330
咱们继续

18:04.330 --> 18:06.330
那么这个函数用于显示地图

18:06.330 --> 18:08.330
那么是不是把地图的导入进来

18:08.330 --> 18:09.330
对不对

18:09.330 --> 18:10.330
那么这个函数里面

18:10.330 --> 18:12.330
第一步

18:12.330 --> 18:14.330
我们可能要设置

18:14.330 --> 18:16.330
可能设置

18:16.330 --> 18:18.330
设置DIV的宽高

18:18.330 --> 18:20.330
可能要做这么一些事

18:20.330 --> 18:21.330
第二步

18:21.330 --> 18:22.330
可能要去

18:22.330 --> 18:25.330
显示地图中的内容

18:25.330 --> 18:26.330
对不对

18:26.330 --> 18:27.330
是不是要做这么两件事

18:27.330 --> 18:28.330
设置DIV的宽高

18:28.330 --> 18:29.330
显示地图的内容

18:29.330 --> 18:30.330
那么无论是

18:30.330 --> 18:31.330
第一件事还是第二件事

18:31.330 --> 18:32.330
是不是都要用到

18:32.330 --> 18:33.330
地图里面的信息

18:33.330 --> 18:34.330
对吧

18:34.330 --> 18:35.330
是不是要用到

18:35.330 --> 18:36.330
地图里面的信息

18:36.330 --> 18:37.330
那么我们直接把

18:37.330 --> 18:38.330
地图导入进来

18:38.330 --> 18:39.330
对吧

18:39.330 --> 18:40.330
用import

18:40.330 --> 18:41.330
导入什么

18:41.330 --> 18:42.330
导入地图里面的

18:42.330 --> 18:43.330
这些东西

18:43.330 --> 18:45.330
要用到哪个就导入哪个

18:45.330 --> 18:46.330
比方说我们要用到

18:46.330 --> 18:47.330
什么

18:47.330 --> 18:48.330
我们可能都会用到

18:48.330 --> 18:49.330
我们就用信号

18:49.330 --> 18:50.330
usmap

18:50.330 --> 18:51.330
from

18:51.330 --> 18:52.330
map.js

18:53.330 --> 18:54.330
是不是可以导入进来

18:54.330 --> 18:55.330
把地图里面的东西

18:55.330 --> 18:56.330
全部导入进来了

18:56.330 --> 18:57.330
那么这个map里面

18:57.330 --> 18:58.330
是不是可以保存了

18:58.330 --> 18:59.330
各种东西了

18:59.330 --> 19:00.330
cour number

19:00.330 --> 19:01.330
正确的位置

19:01.330 --> 19:02.330
还有地图本身

19:02.330 --> 19:03.330
对不对

19:03.330 --> 19:04.330
地图本身

19:05.330 --> 19:06.330
那么这里的名字

19:06.330 --> 19:07.330
这个看起来有点怪

19:07.330 --> 19:08.330
其实也不怪

19:08.330 --> 19:09.330
这个东西是一个

19:09.330 --> 19:10.330
整个对象

19:10.330 --> 19:11.330
它里面有一个属性map

19:11.330 --> 19:12.330
这个map表示的是

19:12.330 --> 19:13.330
地图里面的

19:13.330 --> 19:15.330
地图里面的二维数组

19:15.330 --> 19:16.330
表示这个东西

19:18.840 --> 19:19.840
那么这里

19:19.840 --> 19:20.840
换个名字

19:20.840 --> 19:21.840
content

19:21.840 --> 19:22.840
content

19:22.840 --> 19:24.840
那么这里就用content

19:24.840 --> 19:25.840
没问题吧

19:25.840 --> 19:26.840
就把地图里面的信息

19:26.840 --> 19:27.840
导入进来了

19:27.840 --> 19:28.840
好 第一步

19:28.840 --> 19:30.840
设置DIV的宽高

19:30.840 --> 19:31.840
这个是不是很简单

19:31.840 --> 19:32.840
来吧

19:32.840 --> 19:34.840
DIVcontainer

19:34.840 --> 19:36.840
style

19:36.840 --> 19:37.840
宽度等于多少

19:37.840 --> 19:38.840
宽度等于多少

19:40.840 --> 19:42.840
宽度是不是等于

19:42.840 --> 19:43.840
这里

19:43.840 --> 19:45.840
列的数量

19:45.840 --> 19:46.840
列的数量

19:46.840 --> 19:47.840
乘以每一列的宽度

19:47.840 --> 19:48.840
对吧

19:48.840 --> 19:49.840
每一列的宽度

19:49.840 --> 19:50.840
那么每一列的宽度

19:50.840 --> 19:51.840
是多少呢

19:51.840 --> 19:52.840
我看一下页面上

19:52.840 --> 19:53.840
每一列的宽度

19:53.840 --> 19:54.840
每一个小块

19:54.840 --> 19:55.840
是45

19:55.840 --> 19:56.840
那么我们这里可以

19:56.840 --> 19:57.840
记录一下

19:57.840 --> 19:58.840
因为我们这个模块里面

19:58.840 --> 19:59.840
要用于显示

19:59.840 --> 20:00.840
所以说我们到时候

20:00.840 --> 20:01.840
肯定要算一个东西

20:01.840 --> 20:02.840
就是每一个小块

20:02.840 --> 20:03.840
宽高

20:03.840 --> 20:05.840
Peace

20:05.840 --> 20:06.840
位置

20:06.840 --> 20:07.840
45

20:07.840 --> 20:09.840
这里大胆的写

20:09.840 --> 20:10.840
不会污染全球编辑

20:10.840 --> 20:11.840
大胆的写

20:11.840 --> 20:12.840
只是模块内部使用

20:12.840 --> 20:13.840
内部的东西

20:13.840 --> 20:14.840
内部为了实现

20:14.840 --> 20:15.840
这个模块

20:15.840 --> 20:16.840
需要用到的东西

20:16.840 --> 20:17.840
每一个小块

20:17.840 --> 20:21.840
每一个小块的宽度

20:21.840 --> 20:22.840
这里

20:22.840 --> 20:26.840
每一个小块的高度

20:26.840 --> 20:27.840
是不是可以搞定了

20:27.840 --> 20:28.840
那么它宽度

20:28.840 --> 20:29.840
整个容器的宽度

20:29.840 --> 20:30.840
等于什么呢

20:30.840 --> 20:32.840
一个小块的宽度

20:32.840 --> 20:34.840
乘以一行有多少个小块

20:34.840 --> 20:35.840
是不是就列数

20:35.840 --> 20:36.840
列数是不是在

20:36.840 --> 20:37.840
Map的信息里边

20:37.840 --> 20:38.840
有个什么CowLumber

20:38.840 --> 20:39.840
对吧

20:39.840 --> 20:40.840
是不是列数

20:40.840 --> 20:41.840
列的数量

20:41.840 --> 20:42.840
那么

20:42.840 --> 20:44.840
评界一下PX

20:45.840 --> 20:46.840
评界一下PX

20:47.840 --> 20:48.840
这里再来

20:49.840 --> 20:50.840
同样的道理

20:50.840 --> 20:51.840
高度

20:51.840 --> 20:53.840
等于每一个小块的高度

20:53.840 --> 20:55.840
乘以Map.RowLumber

20:56.840 --> 20:57.840
评界上PX

20:58.840 --> 21:00.840
那么至于这个模块里边

21:00.840 --> 21:01.840
这个两个东西老来的

21:01.840 --> 21:02.840
我不管了

21:02.840 --> 21:03.840
这是你模块里边的事情

21:03.840 --> 21:04.840
跟我没关系

21:04.840 --> 21:05.840
反正你提供给我了

21:05.840 --> 21:06.840
我就用

21:06.840 --> 21:07.840
好来试一下吧

21:07.840 --> 21:08.840
我们导出这个函数

21:08.840 --> 21:09.840
设置了DAV的宽高

21:09.840 --> 21:11.840
我们在入口函数里边

21:11.840 --> 21:12.840
导入什么呢

21:12.840 --> 21:13.840
导入我们的UI

21:14.840 --> 21:16.840
UI.js

21:16.840 --> 21:18.840
来试一下吧

21:18.840 --> 21:19.840
这个UI里边

21:19.840 --> 21:22.840
它就提供了一个默认的方法

21:22.840 --> 21:23.840
对吧

21:23.840 --> 21:24.840
导出的就是个默认的方法

21:24.840 --> 21:26.840
那么我们就用一个秀UI

21:26.840 --> 21:28.840
显示一个UI界面

21:28.840 --> 21:29.840
调用这个方法

21:29.840 --> 21:30.840
对吧

21:30.840 --> 21:31.840
好 保存

21:31.840 --> 21:32.840
看一下

21:32.840 --> 21:33.840
看一下这边

21:33.840 --> 21:34.840
点击检查

21:34.840 --> 21:35.840
看一下这个DAV是不是我们

21:35.840 --> 21:36.840
如我们所料

21:38.840 --> 21:39.840
好像不对

21:39.840 --> 21:40.840
好像不对

21:40.840 --> 21:41.840
这里报了个错

21:41.840 --> 21:42.840
它说什么呢

21:42.840 --> 21:46.150
它报了个错

21:47.150 --> 21:48.150
它说不能

21:53.150 --> 21:55.150
它说不能再

21:55.150 --> 21:56.150
对对对

21:56.150 --> 21:57.150
我看到问题了

21:57.150 --> 21:59.150
你没有把它变成当成模块

21:59.150 --> 22:00.150
它说的意思就是

22:00.150 --> 22:02.150
你不能在模块外边使用

22:02.150 --> 22:04.150
这个Import这个语句

22:04.150 --> 22:06.150
因为它没有把它当成模块

22:06.150 --> 22:08.150
我们这里少讲了一句

22:08.150 --> 22:09.150
Type module

22:10.150 --> 22:13.150
它又说Map is not Defend

22:13.150 --> 22:15.150
它说Map没有定义

22:16.150 --> 22:17.150
明白了

22:17.150 --> 22:18.150
它说在模块

22:18.150 --> 22:19.150
这个模块里边

22:19.150 --> 22:21.150
我们这里用的是Content

22:21.150 --> 22:23.150
那么这里要用相应的Content

22:25.590 --> 22:27.590
好 咱们来看一下这个DAV

22:27.590 --> 22:28.590
你看

22:28.590 --> 22:29.590
宽高是不是设置好了

22:29.590 --> 22:30.590
405

22:30.590 --> 22:31.590
高度

22:31.590 --> 22:32.590
540

22:32.590 --> 22:33.590
对不对

22:33.590 --> 22:34.590
宽高是不是设置好了

22:34.590 --> 22:35.590
就这么简单

22:35.590 --> 22:36.590
好 当然

22:36.590 --> 22:38.590
我们这里只是设置了DAV的宽高

22:38.590 --> 22:39.590
还没有设置啥

22:39.590 --> 22:41.590
还没有设置那个就是

22:41.590 --> 22:42.590
地图里边的内容

22:42.590 --> 22:43.590
地图里边的内容

22:43.590 --> 22:45.590
其实我觉得这里边单码太多了

22:45.590 --> 22:47.590
我不想在这里写

22:47.590 --> 22:48.590
我能不能换个地方写

22:48.590 --> 22:50.590
可以 我在这里换一个函数写

22:50.590 --> 22:53.590
比方说我把Set DAV Container

22:53.590 --> 22:55.590
写成一个函数

22:55.590 --> 23:00.540
这个函数用于设置DAV的宽高

23:00.540 --> 23:02.540
这是设置DAV的宽高

23:02.540 --> 23:04.540
你随便写 不要怕物占权具变量

23:04.540 --> 23:05.540
以前我们没办法

23:05.540 --> 23:06.540
把它写到这个函数内部

23:06.540 --> 23:07.540
作为指函数

23:07.540 --> 23:08.540
现在没必要了

23:08.540 --> 23:09.540
因为在模块里边

23:09.540 --> 23:10.540
是不会物占权具变量的

23:10.540 --> 23:12.540
那么这里写过来

23:12.540 --> 23:13.540
那么这样子

23:13.540 --> 23:15.540
这样子我们可以优雅的

23:15.540 --> 23:16.540
去组织每一个模块

23:16.540 --> 23:17.540
因为每一个模块

23:17.540 --> 23:19.540
它事情变得小了

23:19.540 --> 23:20.540
变得简单了

23:20.540 --> 23:21.540
我们可以优雅的组织

23:21.540 --> 23:23.540
那么显示地图里边的内容

23:23.540 --> 23:25.540
我们就Set Content

23:25.540 --> 23:26.540
Set Content

23:27.540 --> 23:28.540
设置

23:29.540 --> 23:33.540
设置地图中的内容

23:33.540 --> 23:35.540
根据地图

23:35.540 --> 23:38.540
根据地图在

23:38.540 --> 23:40.540
页面上

23:40.540 --> 23:43.540
设置相应的元素

23:43.540 --> 23:44.540
我们不用去考虑什么

23:44.540 --> 23:45.540
方法重明

23:45.540 --> 23:46.540
那些问题都不用考虑

23:46.540 --> 23:47.540
因为在模块化过后

23:47.540 --> 23:49.540
就不用考虑这些问题了

23:49.540 --> 23:50.540
那么这里

23:50.540 --> 23:51.540
我们就

23:51.540 --> 23:52.540
显示一面中的内容

23:52.540 --> 23:53.540
Set Content

23:53.540 --> 23:54.540
不就完了吗

23:54.540 --> 23:55.540
这些东西

23:55.540 --> 23:56.540
让内部去实现

23:56.540 --> 23:57.540
来吧

23:57.540 --> 23:58.540
这里来实现

23:58.540 --> 23:59.540
你看现在

23:59.540 --> 24:01.540
目前的效果肯定是一样的

24:01.540 --> 24:03.540
而且不会产生污染

24:03.540 --> 24:04.540
来吧

24:04.540 --> 24:05.540
我们实现这个

24:05.540 --> 24:06.540
设置页面上

24:06.540 --> 24:07.540
相应的元素内容

24:07.540 --> 24:09.540
那么首先让我们把它清空

24:10.540 --> 24:11.540
清空

24:13.540 --> 24:14.540
清空容器

24:14.540 --> 24:15.540
为什么要清空

24:15.540 --> 24:17.540
因为我们地图肯定会变化

24:17.540 --> 24:19.540
我们到时候玩这个游戏

24:19.540 --> 24:20.540
那么地图里边的内容

24:20.540 --> 24:21.540
是不是可以变化

24:21.540 --> 24:22.540
强大的一般不会变

24:22.540 --> 24:24.540
但是空白是不是会变化

24:24.540 --> 24:25.540
比方说我们走了一步

24:25.540 --> 24:27.540
本来这里是空白的

24:28.540 --> 24:29.540
我们走了一步

24:29.540 --> 24:31.540
走了一步是这里不是空白了

24:31.540 --> 24:32.540
这里变成空白了

24:32.540 --> 24:33.540
对不对

24:33.540 --> 24:34.540
是不是都有可能会变化

24:34.540 --> 24:35.540
都有可能会变化

24:35.540 --> 24:37.540
那么我们这里

24:37.540 --> 24:38.540
要考虑到这种情况

24:38.540 --> 24:40.540
就是我们地图会变化

24:40.540 --> 24:42.540
变化之后肯定会要重新

24:42.540 --> 24:43.540
运行这个函数

24:43.540 --> 24:44.540
那么我们肯定要把

24:44.540 --> 24:45.540
之前的内容清空

24:45.540 --> 24:46.540
清空容器

24:46.540 --> 24:47.540
in the HTML

24:47.540 --> 24:48.540
空白

24:48.540 --> 24:49.540
先把容器清空

24:49.540 --> 24:52.540
然后再一次加入一些元素

24:52.540 --> 24:54.540
将哪些元素

24:54.540 --> 24:55.540
那么地图上有哪些元素

24:55.540 --> 24:56.540
就加入哪些元素

24:56.540 --> 24:58.540
是不是要根据地图的内容来

24:58.540 --> 25:00.540
要根据地图的内容来

25:00.540 --> 25:01.540
好来吧

25:01.540 --> 25:02.540
我们这里是不是

25:02.540 --> 25:05.540
第二步要根据地图内容

25:05.540 --> 25:06.540
根据地图内容有什么意思

25:06.540 --> 25:08.540
就是便利地图内容

25:08.540 --> 25:10.540
设置元素

25:10.540 --> 25:11.540
来吧

25:11.540 --> 25:12.540
便利地图内容

25:12.540 --> 25:13.540
怎么便利

25:13.540 --> 25:14.540
怎么便利

25:14.540 --> 25:15.540
你学到ES6

25:16.540 --> 25:17.540
当然也可以用

25:17.540 --> 25:18.540
切闹的科学环

25:18.540 --> 25:19.540
都行

25:19.540 --> 25:20.540
我们用科学环

25:20.540 --> 25:21.540
首先它便利行

25:21.540 --> 25:23.540
我们用肉来表示行

25:23.540 --> 25:25.540
肉小于什么呢

25:25.540 --> 25:28.540
小于行的数量

25:28.540 --> 25:30.540
MAP里边有个ROM

25:31.540 --> 25:33.540
我们导入的MAP里边

25:33.540 --> 25:34.540
有个ROM

25:34.540 --> 25:35.540
什么行的数量

25:37.540 --> 25:39.540
肉

25:39.540 --> 25:40.540
这是我们的行

25:40.540 --> 25:42.540
然后列

25:43.540 --> 25:45.540
等于你

25:45.540 --> 25:46.540
列要小于什么呢

25:46.540 --> 25:49.540
小于这一行

25:50.540 --> 25:52.540
小于行列的数量

25:57.540 --> 25:59.540
那么这里是不是可以得到

25:59.540 --> 26:00.540
地多少行呢

26:00.540 --> 26:01.540
行就是列

26:01.540 --> 26:02.540
那就是卡奥

26:02.540 --> 26:04.540
这是个点型的二维数组循环

26:04.540 --> 26:05.540
要能看得懂

26:06.540 --> 26:07.540
那么这是行

26:07.540 --> 26:08.540
这是列

26:08.540 --> 26:09.540
行和列我们确定了

26:09.540 --> 26:11.540
我们是不是可以通过行和列

26:11.540 --> 26:14.540
能够得到当前的地图元素

26:14.540 --> 26:15.540
对吧

26:15.540 --> 26:16.540
怎么来得到

26:16.540 --> 26:17.540
二维数组

26:17.540 --> 26:18.540
要搞清楚

26:18.540 --> 26:19.540
这个阶段

26:19.540 --> 26:20.540
你应该能搞清楚

26:20.540 --> 26:21.540
二维数组这些操作

26:21.540 --> 26:22.540
什么便利循环这些东西

26:22.540 --> 26:23.540
应该非常清楚了

26:23.540 --> 26:25.540
那么MAP

26:25.540 --> 26:26.540
第二什么

26:26.540 --> 26:27.540
content

26:27.540 --> 26:29.540
是不是我们的地图内容

26:29.540 --> 26:30.540
对吧

26:30.540 --> 26:31.540
你看地图

26:31.540 --> 26:32.540
导出了是不是地图内容

26:32.540 --> 26:34.540
那么我们是拿到地图内容

26:34.540 --> 26:36.540
地图内容是个二维数组

26:36.540 --> 26:37.540
把行传进去

26:37.540 --> 26:39.540
那么是不是拿到那一行的数组

26:39.540 --> 26:40.540
比方说我们传了一个零

26:40.540 --> 26:42.540
是不是拿到这一行的数组

26:42.540 --> 26:43.540
那么我们继续传

26:43.540 --> 26:44.540
这是个数组

26:44.540 --> 26:45.540
继续传一个D

26:45.540 --> 26:46.540
是不是可以取出

26:46.540 --> 26:47.540
这个纸的

26:47.540 --> 26:48.540
对不对

26:50.540 --> 26:52.540
可以取出它的纸的

26:53.540 --> 26:55.540
这是取出

26:55.540 --> 26:58.540
地图相应位置的

26:58.540 --> 26:59.540
纸

26:59.540 --> 27:00.540
是不是可以取出来

27:00.540 --> 27:01.540
对不对

27:01.540 --> 27:02.540
好

27:02.540 --> 27:04.540
取出这个纸过后

27:04.540 --> 27:05.540
我们是不是要判断一下

27:05.540 --> 27:07.540
如果说这个纸是空白

27:07.540 --> 27:08.540
这个纸是空白

27:08.540 --> 27:10.540
我还加DIV

27:10.540 --> 27:11.540
还要加元素进去

27:11.540 --> 27:12.540
这不假了

27:12.540 --> 27:13.540
对吧

27:13.540 --> 27:14.540
我们只加有那种的

27:14.540 --> 27:15.540
空白就算了

27:15.540 --> 27:16.540
我们就判断一下

27:16.540 --> 27:18.540
如果VALUE

27:18.540 --> 27:19.540
等于级

27:19.540 --> 27:20.540
空白是啥

27:20.540 --> 27:21.540
空白

27:21.540 --> 27:23.540
空白是不是零

27:23.540 --> 27:24.540
对不对

27:24.540 --> 27:25.540
空白是不是零

27:25.540 --> 27:26.540
那么其实

27:26.540 --> 27:27.540
你这个地图里边

27:27.540 --> 27:28.540
还可以导入一些长量

27:28.540 --> 27:29.540
比方说表示空白是级

27:29.540 --> 27:30.540
因为我外面的

27:30.540 --> 27:32.540
模块外面我并不知道空白是零

27:32.540 --> 27:33.540
一是玩家

27:33.540 --> 27:34.540
二是想

27:34.540 --> 27:35.540
不一定知道

27:35.540 --> 27:37.540
当然我们现在是确实知道

27:37.540 --> 27:39.540
如果说你为了避免混乱的话

27:39.540 --> 27:40.540
你甚至可以

27:40.540 --> 27:42.540
导出一些长量

27:42.540 --> 27:43.540
导出一些长量

27:43.540 --> 27:44.540
空白是级

27:44.540 --> 27:45.540
玩家是级

27:45.540 --> 27:46.540
那么比方说

27:46.540 --> 27:47.540
我们导出一些

27:49.540 --> 27:50.540
导出一些长量

27:50.540 --> 27:51.540
Export

27:52.540 --> 27:53.540
Const

27:53.540 --> 27:54.540
Space

27:54.540 --> 27:55.540
零

27:55.540 --> 27:56.540
表示空白

27:56.540 --> 27:58.540
玩家

27:58.540 --> 27:59.540
Player

27:59.540 --> 28:00.540
表示1

28:02.540 --> 28:03.540
然后

28:04.540 --> 28:05.540
还有一个什么

28:05.540 --> 28:06.540
强

28:06.540 --> 28:08.540
表示2

28:08.540 --> 28:09.540
还有什么箱子

28:09.540 --> 28:10.540
Box

28:10.540 --> 28:11.540
表示3

28:11.540 --> 28:12.540
那么这些地方

28:12.540 --> 28:14.540
我们都可以用长量来代替

28:14.540 --> 28:15.540
都可以用长量来代替

28:15.540 --> 28:17.540
当然这是一种邪法

28:17.540 --> 28:18.540
一种邪法

28:18.540 --> 28:19.540
那么这边我们就可以不用

28:19.540 --> 28:20.540
不用硬边

28:20.540 --> 28:21.540
我们反正把

28:21.540 --> 28:23.540
直接写个字面量那种就是硬边

28:23.540 --> 28:24.540
硬边

28:24.540 --> 28:26.540
容易导致不太容易维护

28:26.540 --> 28:27.540
那么我们就可以使用

28:28.540 --> 28:29.540
Map里边的什么

28:31.540 --> 28:32.540
叫做Space

28:33.540 --> 28:34.540
如果是一个空白

28:35.540 --> 28:36.540
表示空白

28:36.540 --> 28:37.540
空白怎么办

28:37.540 --> 28:38.540
空白我啥都不做

28:38.540 --> 28:40.540
不做任何事情

28:40.540 --> 28:41.540
那么继续

28:41.540 --> 28:42.540
continue

28:43.540 --> 28:44.540
continue

28:44.540 --> 28:45.540
没问题吧

28:45.540 --> 28:46.540
这是空白的情况

28:46.540 --> 28:48.540
那如果不是空白又怎么办

28:48.540 --> 28:50.540
然后是箱子又怎么办

28:50.540 --> 28:51.540
是玩家又怎么办

28:51.540 --> 28:52.540
是不是要做很多判断

28:52.540 --> 28:55.540
那既然要做很多的判断的话

28:56.540 --> 28:58.540
既然要做很多的判断的话

28:58.540 --> 28:59.540
那我能不能这样子

29:00.540 --> 29:01.540
我直接把这一坨代码

29:01.540 --> 29:02.540
又放到一个函数里边去

29:02.540 --> 29:03.540
尽量的拆分

29:03.540 --> 29:05.540
让我们的代码更加容易维护

29:05.540 --> 29:06.540
以前不容易拆分

29:06.540 --> 29:08.540
是因为我总是怕

29:08.540 --> 29:09.540
污染权就原谅

29:09.540 --> 29:11.540
去整了太多的方法出来

29:11.540 --> 29:12.540
那么现在可以不用怕了

29:12.540 --> 29:14.540
大等的写就行了

29:14.540 --> 29:15.540
写一些辅助函数

29:15.540 --> 29:19.540
就是set one piece

29:20.540 --> 29:21.540
你给我一个行

29:21.540 --> 29:22.540
给我一个列

29:22.540 --> 29:23.540
OK 我来帮你设置

29:25.540 --> 29:30.540
根据行和列设置

29:31.540 --> 29:35.540
就是创建一个DIV

29:35.540 --> 29:37.540
加入到容器

29:37.540 --> 29:39.540
五分就是要做这么一件事

29:39.540 --> 29:40.540
这里不只要做这件事

29:40.540 --> 29:41.540
有一个行一个列

29:41.540 --> 29:42.540
我要创建一个DIV

29:42.540 --> 29:43.540
加入到容器里边

29:43.540 --> 29:44.540
那么我们就把

29:44.540 --> 29:45.540
把这些事情放到这

29:46.540 --> 29:47.540
放到这边

29:47.540 --> 29:48.540
那么这里

29:48.540 --> 29:50.540
我只需要去调用set one piece

29:51.540 --> 29:52.540
你看就尽量的拆分

29:54.540 --> 29:55.540
越细越好

29:56.540 --> 29:57.540
那这里是不是就完了

29:57.540 --> 29:58.540
这里就完了

29:58.540 --> 29:59.540
那么问题全部来了

30:00.540 --> 30:02.540
把花瓣围检

30:02.540 --> 30:03.540
那么这里

30:03.540 --> 30:06.540
得到取出地图相应位置的纸

30:06.540 --> 30:08.540
如果说是空白的话

30:08.540 --> 30:09.540
那是不是就整个函数结束

30:09.540 --> 30:10.540
对吧 整个函数结束

30:10.540 --> 30:11.540
啥都不做了

30:11.540 --> 30:12.540
空白我还做啥

30:13.540 --> 30:14.540
那么如果不是空白了

30:14.540 --> 30:15.540
一个个来

30:15.540 --> 30:17.540
不是空白的情况下

30:17.540 --> 30:19.540
是不是一定得创建DIV

30:20.540 --> 30:21.540
这个是跑不了的

30:21.540 --> 30:22.540
对不对

30:22.540 --> 30:23.540
所以一定得创建DIV

30:23.540 --> 30:24.540
管理是啥

30:24.540 --> 30:26.540
DIV肯定是跑不了的

30:26.540 --> 30:27.540
create element

30:27.540 --> 30:28.540
对吧

30:28.540 --> 30:29.540
所以一定得创建DIV

30:29.540 --> 30:30.540
并且这个DIV

30:30.540 --> 30:32.540
是不是一定有个那样式

30:32.540 --> 30:33.540
我不管你是啥

30:33.540 --> 30:35.540
但是一定有个那样式

30:35.540 --> 30:36.540
就是item

30:36.540 --> 30:37.540
对吧 这是个通用的样式

30:37.540 --> 30:38.540
我们之前看了过了

30:38.540 --> 30:40.540
无论是强盒子还是玩家

30:40.540 --> 30:42.540
是不是都有这个那样式

30:42.540 --> 30:45.540
OK 那么我给它加上class name

30:45.540 --> 30:46.540
都有什么item

30:46.540 --> 30:47.540
对不对

30:47.540 --> 30:48.540
那么最终呢

30:48.540 --> 30:49.540
是不是要把DIV加进去

30:49.540 --> 30:50.540
加到容器里面去

30:50.540 --> 30:51.540
container

30:51.540 --> 30:52.540
Append

30:52.540 --> 30:53.540
Channel

30:53.540 --> 30:55.540
就是中间不一样

30:55.540 --> 30:57.540
中间我们要经过各种判断

30:57.540 --> 30:58.540
要不要加其他的那样式

30:58.540 --> 30:59.540
要经过各种判断

30:59.540 --> 31:00.540
对不对

31:00.540 --> 31:01.540
没问题吧

31:01.540 --> 31:02.540
好 保存一下

31:02.540 --> 31:03.540
咱们来看一下这边

31:03.540 --> 31:04.540
那么现在呢

31:04.540 --> 31:06.540
至少可以看到这个DIV是不是加进去了

31:06.540 --> 31:07.540
对吧

31:07.540 --> 31:08.540
是不是DIV加进去了

31:08.540 --> 31:09.540
对不对

31:09.540 --> 31:10.540
没问题吧

31:11.540 --> 31:12.540
这是关于这一块

31:12.540 --> 31:13.540
DIV加进去了

31:13.540 --> 31:14.540
但是你会发现

31:14.540 --> 31:16.540
每个DIV的位置是重叠的

31:16.540 --> 31:17.540
看到没

31:17.540 --> 31:18.540
每个DIV的位置

31:18.540 --> 31:19.540
全都是一个位置

31:19.540 --> 31:20.540
你看页面上

31:20.540 --> 31:21.540
那是不是

31:21.540 --> 31:22.540
我们还要调整它的位置

31:22.540 --> 31:24.540
它的位置肯定是需要调整的

31:24.540 --> 31:26.540
肯定需要调整它的位置

31:26.540 --> 31:30.540
调整DIV的位置

31:30.540 --> 31:32.540
这个地方一定要调整

31:32.540 --> 31:33.540
对吧

31:33.540 --> 31:34.540
好

31:34.540 --> 31:36.540
那么DIV的位置具体在哪呢

31:36.540 --> 31:38.540
DIV的位置

31:38.540 --> 31:41.540
那么无论你是强也好

31:41.540 --> 31:43.540
还是

31:43.540 --> 31:44.540
我这样问吧

31:44.540 --> 31:47.540
DIV的位置跟那个

31:47.540 --> 31:49.540
你是啥有没有关系

31:49.540 --> 31:51.540
跟你是强

31:51.540 --> 31:53.540
还是玩家

31:53.540 --> 31:56.540
还是盒子有没有关系

31:56.540 --> 31:57.540
没关系

31:57.540 --> 31:59.540
它跟什么有关系

31:59.540 --> 32:00.540
跟你是第几行

32:00.540 --> 32:02.540
第几列有关系

32:02.540 --> 32:03.540
对吧

32:03.540 --> 32:05.540
所以你是第几行

32:05.540 --> 32:06.540
第几列有关系

32:06.540 --> 32:08.540
跟你到底是个啥

32:08.540 --> 32:09.540
没有关系

32:09.540 --> 32:10.540
没什么意思吗

32:10.540 --> 32:13.540
是不是有这么一个逻辑在里面

32:13.540 --> 32:14.540
好

32:14.540 --> 32:16.540
那么我们现在再看一下

32:16.540 --> 32:18.540
那么它的位置跟行和列

32:18.540 --> 32:20.540
是什么关系呢

32:20.540 --> 32:22.540
我们来研究研究吧

32:22.540 --> 32:24.540
比方说我们举个例子

32:24.540 --> 32:31.390
这个地方

32:31.390 --> 32:34.390
是第几行第几列

32:34.390 --> 32:35.390
第一行

32:35.390 --> 32:36.390
第三列

32:36.390 --> 32:37.390
对吧

32:37.390 --> 32:38.390
那么我们可以记住

32:38.390 --> 32:39.390
行是几呢

32:39.390 --> 32:40.390
行是零

32:40.390 --> 32:41.390
第一行吗

32:41.390 --> 32:42.390
列是几呢

32:42.390 --> 32:43.390
从零开始

32:43.390 --> 32:44.390
那么就是二

32:44.390 --> 32:46.390
那么它的位置

32:46.390 --> 32:48.390
它的Left的值多少

32:48.390 --> 32:49.390
Left的值

32:49.390 --> 32:52.390
Left的值是不是

32:52.390 --> 32:53.390
横坐标

32:53.390 --> 32:54.390
是不是这一段的值

32:54.390 --> 32:55.390
这一段的值

32:55.390 --> 32:57.390
是不是就是列的数量

32:57.390 --> 33:00.390
乘以每一段的宽度

33:00.390 --> 33:01.390
二乘以什么

33:01.390 --> 33:03.390
每一段的宽度

33:04.390 --> 33:06.390
TOP值得有多少

33:06.390 --> 33:08.390
是不是就是行的数量

33:08.390 --> 33:10.390
你上面就是零

33:10.390 --> 33:12.390
你上边行的数量

33:12.390 --> 33:14.390
第几行乘以高度

33:14.390 --> 33:15.390
是不是就这样子

33:15.390 --> 33:16.390
Left和TOP值

33:16.390 --> 33:17.390
是不是就确定下来了

33:17.390 --> 33:19.390
就这么简单

33:19.390 --> 33:20.390
没问题吧

33:20.390 --> 33:21.390
没有什么复杂的

33:21.390 --> 33:22.390
就这么简单

33:22.390 --> 33:24.390
比方说这个DV的位置

33:24.390 --> 33:26.390
那么它是第几列

33:26.390 --> 33:27.390
第三列

33:27.390 --> 33:28.390
列就是二

33:28.390 --> 33:29.390
那么它的Left的值

33:29.390 --> 33:30.390
肯定也是二乘以

33:30.390 --> 33:31.390
每一个的宽度

33:31.390 --> 33:32.390
它的TOP值

33:32.390 --> 33:34.390
TOP值是若是一

33:34.390 --> 33:35.390
它的若是一

33:35.390 --> 33:37.390
那么TOP值一定是一乘以高度

33:37.390 --> 33:38.390
就这个DV

33:38.390 --> 33:40.390
它的TOP值是不是这一部分

33:40.390 --> 33:42.390
这很容易就求出来了

33:42.390 --> 33:44.390
所以DV的位置是很好求的

33:44.390 --> 33:45.390
Style

33:45.390 --> 33:46.390
第二宽度

33:47.390 --> 33:48.390
Left

33:48.390 --> 33:50.390
Left等于什么呢

33:50.390 --> 33:52.390
等于列的

33:52.390 --> 33:53.390
第几列

33:53.390 --> 33:54.390
乘以什么呢

33:54.390 --> 33:56.390
我们之前写过一个变量

33:56.390 --> 33:57.390
写过一个变量

33:57.390 --> 33:58.390
叫PeaceWaste

33:58.390 --> 34:00.390
每一个小块的宽度

34:00.390 --> 34:02.390
乘以每一个小块的宽度

34:02.390 --> 34:03.390
拼接上

34:03.390 --> 34:04.390
Peace

34:04.390 --> 34:06.390
那么TOP值是

34:06.390 --> 34:08.390
第几行

34:08.390 --> 34:10.390
乘以每一个小块的高度

34:10.390 --> 34:11.390
Peace

34:12.390 --> 34:13.390
Height

34:13.390 --> 34:14.390
拼接Peace

34:14.390 --> 34:15.390
对吧

34:15.390 --> 34:16.390
为了让你们看得清楚

34:16.390 --> 34:18.390
我给每一个DV一个边框

34:18.390 --> 34:19.390
让你们看得清楚一点

34:19.390 --> 34:20.390
Style

34:20.390 --> 34:21.390
Border

34:21.390 --> 34:22.390
一个像素

34:22.390 --> 34:23.390
Solid

34:23.390 --> 34:24.390
你要说保存

34:24.390 --> 34:26.830
你看

34:26.830 --> 34:27.830
这就画出来了

34:27.830 --> 34:28.830
对不对

34:28.830 --> 34:29.830
画出来了

34:29.830 --> 34:30.830
只不过每一个地方

34:30.830 --> 34:31.830
我没有给他加其他那样式

34:31.830 --> 34:32.830
他还没有背景图

34:32.830 --> 34:33.830
对不对

34:33.830 --> 34:34.830
是不是画出来了

34:34.830 --> 34:35.830
没问题吧

34:36.830 --> 34:37.830
你看

34:37.830 --> 34:38.830
这个模块里面

34:38.830 --> 34:39.830
你不管写多少代码

34:39.830 --> 34:40.830
你不用担心了

34:40.830 --> 34:41.830
现在

34:41.830 --> 34:42.830
因为这些代码都不会

34:42.830 --> 34:43.830
暴露在外面的

34:43.830 --> 34:44.830
外面根本就用不了

34:44.830 --> 34:45.830
外面只能用这个

34:45.830 --> 34:46.830
只有把这个东西暴露出去了

34:46.830 --> 34:48.830
里边随便你砸写

34:48.830 --> 34:49.830
你写一弯行都没关系

34:49.830 --> 34:50.830
它都不会对外面

34:50.830 --> 34:51.830
产生任何印象

34:51.830 --> 34:53.830
所以你写模块画了之后

34:53.830 --> 34:54.830
你会有一个

34:54.830 --> 34:55.830
特别明显的感觉

34:55.830 --> 34:56.830
就是放心

34:56.830 --> 34:58.830
你这个模块写得

34:58.830 --> 34:59.830
代码再也会乱

34:59.830 --> 35:00.830
函数分得再多

35:00.830 --> 35:01.830
它乱

35:01.830 --> 35:02.830
它也是乱这一个模块

35:02.830 --> 35:03.830
它不会把这个东西

35:03.830 --> 35:04.830
扩大

35:04.830 --> 35:05.830
扩大到其他模块

35:05.830 --> 35:06.830
其他模块只会用到

35:06.830 --> 35:07.830
它讨出的东西

35:07.830 --> 35:09.830
你非常非常放心些的

35:09.830 --> 35:10.830
好

35:10.830 --> 35:11.830
那么这里位置调整好了

35:11.830 --> 35:12.830
那么接下来我们继续

35:12.830 --> 35:13.830
但是我们也不乱

35:13.830 --> 35:14.830
对吧

35:14.830 --> 35:15.830
这些函数都是我们为了

35:15.830 --> 35:17.830
让代码更加清晰

35:17.830 --> 35:19.830
把它抽离出来的函数

35:19.830 --> 35:21.830
调整了一个DIB的位置之后

35:21.830 --> 35:22.830
我们来

35:22.830 --> 35:23.830
接下来就是

35:23.830 --> 35:24.830
这个DIB它是不是

35:24.830 --> 35:25.830
还要加个那样式

35:25.830 --> 35:26.830
它到底要加啥

35:26.830 --> 35:29.830
加我还是加什么player

35:29.830 --> 35:30.830
还是加什么玩意

35:30.830 --> 35:31.830
我也不知道要加啥

35:31.830 --> 35:32.830
是不是有各种情况

35:32.830 --> 35:33.830
来吧

35:33.830 --> 35:34.830
我们来看一下有哪些情况

35:34.830 --> 35:36.830
第一种情况是什么呢

35:36.830 --> 35:38.830
玩家

35:38.830 --> 35:39.830
你是一个玩家

35:39.830 --> 35:41.830
我一个家啥

35:41.830 --> 35:43.830
在class list里边

35:43.830 --> 35:45.830
是不是要添加一个

35:45.830 --> 35:46.830
那样式里边

35:46.830 --> 35:47.830
是不是要添加一个player

35:47.830 --> 35:48.830
对吧

35:48.830 --> 35:49.830
你是玩家吗

35:49.830 --> 35:51.830
else if

35:51.830 --> 35:55.200
如果你是一个墙

35:55.200 --> 35:57.200
我是不是要添加一个class list

35:58.200 --> 35:59.200
添加一个什么

35:59.200 --> 36:00.200
对吧

36:00.200 --> 36:01.200
我们之前都看过那个那样式的

36:01.200 --> 36:02.200
墙

36:02.200 --> 36:03.200
对吧

36:03.200 --> 36:04.200
玩家

36:04.200 --> 36:05.200
好

36:05.200 --> 36:06.200
再来

36:06.200 --> 36:09.200
如果说你是一个箱子

36:09.200 --> 36:13.200
如果说你是一个箱子

36:13.200 --> 36:15.200
如果说你是一个箱子的话

36:15.200 --> 36:18.200
是不是有两种情况

36:18.200 --> 36:20.200
你的箱子在不在正确位置上

36:20.200 --> 36:22.200
你的箱子在正确位置上

36:22.200 --> 36:24.200
是一个那样式

36:24.200 --> 36:25.200
不在

36:25.200 --> 36:27.200
又是一个那样式

36:27.200 --> 36:29.200
所以说我这里是不是要判断

36:29.200 --> 36:31.200
如果你是一个箱子

36:31.200 --> 36:32.200
要判断

36:32.200 --> 36:34.200
在正确位置吗

36:34.200 --> 36:38.200
当前位置是正确

36:38.200 --> 36:42.200
正确位置吗

36:42.200 --> 36:44.200
如果是正确位置的话

36:44.200 --> 36:45.200
那么我干嘛

36:45.200 --> 36:48.200
dv是不是加上一个正确的箱子的位置

36:48.200 --> 36:49.200
正确的箱子

36:49.200 --> 36:52.200
correct box

36:52.200 --> 36:53.200
是不是这个

36:53.200 --> 36:55.200
如果说你不是正确位置

36:55.200 --> 36:56.200
不是正确位置的话

36:56.200 --> 36:58.200
那么怎么办呢

36:58.200 --> 37:00.200
不是正确位置的话

37:00.200 --> 37:02.200
那么只是一个correct

37:02.200 --> 37:04.200
不是正确位置的话

37:04.200 --> 37:06.200
只是一个box

37:06.200 --> 37:08.200
这里好像还少了一个问题

37:08.200 --> 37:10.200
还少了一个判断

37:10.200 --> 37:11.200
你是空白的情况下

37:11.200 --> 37:13.200
我们现在做的太简单粗暴了

37:13.200 --> 37:15.200
你是空白的情况下

37:15.200 --> 37:17.200
还有一种情况

37:17.200 --> 37:19.200
什么情况呢

37:19.200 --> 37:21.200
就是你如果说你是空白

37:21.200 --> 37:22.200
但是你是一个正确位置

37:22.200 --> 37:23.200
我是不是还得用个dv

37:23.200 --> 37:24.200
把你画出来

37:24.200 --> 37:25.200
比方说这样这里

37:25.200 --> 37:26.200
这里是不是空白

37:26.200 --> 37:27.200
肯定是空白

37:27.200 --> 37:28.200
那么这个空白

37:28.200 --> 37:29.200
它是一个正确位置

37:29.200 --> 37:30.200
那么是不是还得画出来

37:30.200 --> 37:32.200
因此这里空白的情况下

37:32.200 --> 37:34.200
不能立即结束

37:34.200 --> 37:36.200
我们先调整dv的位置

37:36.200 --> 37:38.200
先调整dv的位置

37:38.200 --> 37:41.200
那么调整完了位置过后

37:41.200 --> 37:43.200
我们在这里看一下

37:43.200 --> 37:44.200
再判断一下

37:44.200 --> 37:45.200
else

37:45.200 --> 37:47.200
如果不是玩家强

37:47.200 --> 37:49.200
箱子完了不就是空白了吗

37:49.200 --> 37:50.200
空白

37:50.200 --> 37:52.200
这是空白

37:52.200 --> 37:54.200
空白如果说

37:54.200 --> 37:57.200
当前位置是正确位置

37:57.200 --> 37:58.200
那么怎么办呢

37:58.200 --> 38:01.200
空白是不是还要加上一个东西

38:01.200 --> 38:02.200
加上一个什么呢

38:02.200 --> 38:04.200
加上一个这个

38:04.200 --> 38:05.200
correct

38:05.200 --> 38:06.200
对吧

38:06.200 --> 38:07.200
加上这么一个那样子

38:07.200 --> 38:08.200
如果当前空

38:08.200 --> 38:10.200
当前位置不是正确位置

38:10.200 --> 38:11.200
return

38:11.200 --> 38:12.200
结束了

38:12.200 --> 38:15.200
只是一个普通空白

38:15.200 --> 38:16.200
普通空白

38:16.200 --> 38:17.200
虽然说我们dv创建了

38:17.200 --> 38:19.200
但是我不把它加到容器里面了

38:19.200 --> 38:20.200
结束吧

38:20.200 --> 38:22.200
因为普通空白不加任何东西

38:22.200 --> 38:23.200
对吧

38:23.200 --> 38:24.200
没问题吧

38:24.200 --> 38:25.200
这个逻辑没问题吧

38:25.200 --> 38:26.200
你看着 再来理解一次

38:26.200 --> 38:28.200
得到这个位置的纸

38:28.200 --> 38:30.200
现在还没用这个纸

38:30.200 --> 38:31.200
得到这个位置的纸

38:31.200 --> 38:33.200
然后创建dv 设置dv的位置

38:33.200 --> 38:35.200
都是所有都要做的

38:35.200 --> 38:36.200
如果你是一个玩家

38:36.200 --> 38:37.200
我给你加上这个

38:37.200 --> 38:38.200
如果你是一个强

38:38.200 --> 38:39.200
我给你加上这个

38:39.200 --> 38:40.200
如果你是一个箱子

38:40.200 --> 38:41.200
看你是不是正确位置的箱子

38:41.200 --> 38:42.200
正确位置的箱子

38:42.200 --> 38:43.200
给你加这个

38:43.200 --> 38:44.200
不是正确位置的

38:44.200 --> 38:45.200
给你加这个

38:45.200 --> 38:46.200
那么如果你是个空白

38:46.200 --> 38:47.200
两个情况

38:47.200 --> 38:48.200
如果当前位置

38:48.200 --> 38:49.200
是一个正确位置的空白

38:49.200 --> 38:50.200
那么给你加上这个的样式

38:50.200 --> 38:51.200
否则的话

38:51.200 --> 38:52.200
只是一个普通空白

38:52.200 --> 38:53.200
给你返回用完手

38:53.200 --> 38:56.200
返回来就不会再往容器里边加了

38:56.200 --> 38:57.200
就形成了这么一个逻辑

38:57.200 --> 38:59.200
让逻辑里面随便去捋

38:59.200 --> 39:01.200
总之大概都会写成这种格式

39:01.200 --> 39:02.200
好 来吧

39:02.200 --> 39:03.200
如果你是玩家

39:03.200 --> 39:04.200
很简单

39:04.200 --> 39:05.200
Value等于解

39:05.200 --> 39:07.200
Map里面有一个Player

39:07.200 --> 39:08.200
你都不用去背着

39:08.200 --> 39:09.200
它那个数字的

39:09.200 --> 39:10.200
它有个长量

39:10.200 --> 39:12.200
这样子会变成记忆

39:12.200 --> 39:13.200
你只是一个玩家

39:13.200 --> 39:14.200
等于它

39:14.200 --> 39:16.200
如果你是一个强

39:16.200 --> 39:17.200
等于什么呢

39:17.200 --> 39:18.200
Map点

39:19.200 --> 39:20.200
对吧

39:20.200 --> 39:21.200
如果你是个箱子

39:21.200 --> 39:23.200
Value等于什么呢

39:23.200 --> 39:24.200
Map点

39:24.200 --> 39:25.200
Box

39:25.200 --> 39:26.200
对吧 你是个箱子

39:26.200 --> 39:27.200
那么问题在于

39:27.200 --> 39:30.200
箱子是不是正确位置呢

39:30.200 --> 39:32.200
当前位置是不是正确位置呢

39:32.200 --> 39:33.200
是不是我们还差一个东西

39:33.200 --> 39:35.200
要判断当前位置

39:35.200 --> 39:36.200
在判断之前

39:36.200 --> 39:37.200
还有差一个东西

39:37.200 --> 39:39.200
当前位置

39:39.200 --> 39:42.200
是否是正确

39:42.200 --> 39:44.200
正确位置

39:44.200 --> 39:45.200
当前位置

39:45.200 --> 39:46.200
是不是正确位置

39:46.200 --> 39:47.200
那么我们是不是可以

39:47.200 --> 39:49.200
杜韩束来帮我们判断

39:49.200 --> 39:51.200
ok 杜韩束

39:51.200 --> 39:53.200
is correct

39:53.200 --> 39:54.200
你给我一个行

39:54.200 --> 39:55.200
给我一个列

39:55.200 --> 39:56.200
我看一下这个行和列

39:56.200 --> 39:58.200
是不是正确位置

39:58.200 --> 40:01.200
判断该行

40:01.200 --> 40:02.200
该列

40:02.200 --> 40:05.200
是否是正确位置

40:05.200 --> 40:07.200
是不是正确位置

40:07.200 --> 40:09.200
来判断一下

40:09.200 --> 40:10.200
好 怎么来判断

40:10.200 --> 40:11.200
当这个行

40:11.200 --> 40:13.200
这一列是不是正确位置呢

40:13.200 --> 40:14.200
怎么来判断呢

40:14.200 --> 40:15.200
我们地图里面

40:15.200 --> 40:16.200
不是给你提供了

40:17.200 --> 40:18.200
你只要去看一下

40:18.200 --> 40:19.200
这个数组里面

40:19.200 --> 40:21.200
有没有一个对象

40:21.200 --> 40:22.200
它行呢

40:22.200 --> 40:24.200
等于我们这个行

40:24.200 --> 40:25.200
列呢

40:25.200 --> 40:27.200
等于我们这个列

40:27.200 --> 40:28.200
如果能找到这个对象

40:28.200 --> 40:30.200
是不是就可以判断出来了

40:30.200 --> 40:31.200
就是正确位置

40:31.200 --> 40:32.200
否则的话就不是

40:32.200 --> 40:34.200
这个判断就很简单

40:34.200 --> 40:35.200
是不是一个循环就搞定了

40:35.200 --> 40:36.200
循环啥

40:36.200 --> 40:37.200
当然

40:37.200 --> 40:38.200
如果说你学的ES6

40:38.200 --> 40:39.200
你都知道了

40:39.200 --> 40:40.200
一下就可以判断出来

40:40.200 --> 40:42.200
如果说你用ES5的话

40:42.200 --> 40:43.200
你就去循环

40:43.200 --> 40:44.200
0

40:44.200 --> 40:46.200
i小于什么呢

40:47.200 --> 40:48.200
correct

40:48.200 --> 40:50.200
就是map里面一个属性

40:50.200 --> 40:51.200
correct

40:51.200 --> 40:52.200
这个数组的length

40:53.200 --> 40:54.200
i加加

40:54.200 --> 40:55.200
所以循环这个数组

40:56.200 --> 40:57.200
对吧

40:57.200 --> 40:58.200
那么其中

40:58.200 --> 40:59.200
拿到当前的坐标

40:59.200 --> 41:01.200
正确位置的坐标

41:01.200 --> 41:03.200
拿到其中一个

41:03.200 --> 41:04.200
拿到

41:04.200 --> 41:06.200
其中一个

41:06.200 --> 41:09.200
正确位置的坐标

41:09.200 --> 41:10.200
拿到坐标过后

41:10.200 --> 41:11.200
我就判断

41:11.200 --> 41:12.200
这个坐标里面

41:12.200 --> 41:13.200
每一个是个对象

41:13.200 --> 41:15.200
坐标里面有含和列

41:15.200 --> 41:16.200
如果说这个坐标

41:16.200 --> 41:17.200
point

41:17.200 --> 41:18.200
row

41:18.200 --> 41:19.200
等于什么呢

41:19.200 --> 41:20.200
等于我们传计的个row

41:20.200 --> 41:21.200
并且

41:21.200 --> 41:22.200
它的列

41:22.200 --> 41:24.200
等于我们传计进来的这个列

41:24.200 --> 41:25.200
是不是就找到了

41:25.200 --> 41:26.200
找到就是正确位置

41:26.200 --> 41:27.200
返回去

41:27.200 --> 41:28.200
否则的话

41:28.200 --> 41:29.200
循环完了都没找到

41:29.200 --> 41:30.200
就返回force

41:30.200 --> 41:31.200
对吧

41:31.200 --> 41:32.200
这就是一个判断正确位置

41:32.200 --> 41:33.200
当然这是ES5的写法

41:33.200 --> 41:34.200
ES6的话

41:34.200 --> 41:35.200
那就很简单了

41:35.200 --> 41:36.200
非常简单了

41:36.200 --> 41:37.200
直接return

41:38.200 --> 41:39.200
然后

41:39.200 --> 41:40.200
map

41:40.200 --> 41:41.200
correct

41:41.200 --> 41:42.200
这是个数字

41:42.200 --> 41:44.200
里边我们用filter

41:44.200 --> 41:46.200
或者是用fand

41:46.200 --> 41:47.200
fand

41:47.200 --> 41:48.200
找什么呢

41:48.200 --> 41:50.200
找一下

41:50.200 --> 41:53.200
有没有一个坐标的行

41:53.200 --> 41:55.200
等于我们传递的行

41:55.200 --> 41:57.200
有没有一个坐标的列

41:57.200 --> 41:59.200
等于我们传递的列

41:59.200 --> 42:00.200
看一下有

42:00.200 --> 42:02.200
能不能找到这么一个对象

42:02.200 --> 42:04.200
如果说这个对象

42:04.200 --> 42:06.200
不等于undefend

42:06.200 --> 42:07.200
是不是就是找到了

42:07.200 --> 42:08.200
等于undefend就没找到

42:08.200 --> 42:10.200
一句话就写完了

42:11.200 --> 42:13.200
没问题

42:13.200 --> 42:15.200
当然这是ES6的写法

42:15.200 --> 42:17.200
我不知道看这个课程的

42:17.200 --> 42:18.200
你们到底有没有学过ES6

42:18.200 --> 42:19.200
OK

42:19.200 --> 42:20.200
总之我们把这个函数写好

42:20.200 --> 42:21.200
这个函数其实很好写

42:21.200 --> 42:23.200
其实就是一个查照

42:23.200 --> 42:24.200
问题

42:24.200 --> 42:26.200
那么我们这里得到一个变量

42:26.200 --> 42:28.200
iscorrect

42:29.200 --> 42:30.200
我们这里

42:31.200 --> 42:32.200
correct

42:32.200 --> 42:33.200
等于

42:33.200 --> 42:34.200
iscorrect

42:34.200 --> 42:35.200
把行传进去

42:35.200 --> 42:36.200
把列传进去

42:36.200 --> 42:37.200
判断一下

42:37.200 --> 42:38.200
这个行这个列

42:38.200 --> 42:39.200
是不是正确位置

42:39.200 --> 42:40.200
如果是正确位置

42:40.200 --> 42:41.200
加这个

42:41.200 --> 42:42.200
如果不是加这个

42:42.200 --> 42:43.200
那么这里也是

42:43.200 --> 42:44.200
如果是加这个

42:44.200 --> 42:45.200
如果不是

42:45.200 --> 42:46.200
结束

42:46.200 --> 42:47.200
这就写完了

42:47.200 --> 42:48.200
保存

42:49.200 --> 42:51.200
你看是不是就显示出来了

42:51.200 --> 42:53.200
根据地图那种时候就显示出来了

42:53.200 --> 42:55.200
特别特别简单

42:56.200 --> 42:57.200
没问题吧

42:58.200 --> 43:00.200
只要一雕用这个函数

43:00.200 --> 43:01.200
它就会

43:01.200 --> 43:03.200
根据地图显示一次

43:04.200 --> 43:06.200
那么这一块就显示这里

43:06.200 --> 43:07.200
一看是不是就做完了

43:08.200 --> 43:09.200
那么剩下就是文了

43:10.200 --> 43:12.200
那么文是不是又有一大堆规则

43:12.200 --> 43:13.200
又一大堆事情可以干

43:13.200 --> 43:14.200
对吧就剩下就是

43:14.200 --> 43:15.200
除了文还能干嘛呢

43:15.200 --> 43:16.200
是不是就剩下文了

43:16.200 --> 43:17.200
对不对

43:17.200 --> 43:18.200
好来吧

43:19.200 --> 43:21.200
我们这边又建一个模块

43:21.200 --> 43:22.200
叫做

43:22.200 --> 43:23.200
叫做啥呀

43:24.200 --> 43:25.200
叫做play

43:26.200 --> 43:27.200
文

43:27.200 --> 43:28.200
就剩下文了

43:29.200 --> 43:30.200
我开发程序

43:30.200 --> 43:31.200
我一般不会去

43:31.200 --> 43:32.200
先注册什么事件

43:33.200 --> 43:34.200
我先把这些功能写好

43:34.200 --> 43:35.200
写成一个个的函数

43:35.200 --> 43:36.200
它又是个模块的

43:36.200 --> 43:37.200
那我们文

43:37.200 --> 43:38.200
什么叫文呢

43:39.200 --> 43:40.200
文无非就是

43:40.200 --> 43:42.200
把这个地图改一下

43:42.200 --> 43:43.200
往右边跑

43:43.200 --> 43:44.200
你看一下

43:44.200 --> 43:46.200
这个皮卡丘往右边跑

43:46.200 --> 43:47.200
就是什么意思呢

43:47.200 --> 43:48.200
就是把地图里边

43:48.200 --> 43:49.200
这个1变成0

43:49.200 --> 43:51.200
这边右边变成1

43:51.200 --> 43:52.200
不就往右边跑了吗

43:52.200 --> 43:54.200
再重新显示一次地图

43:54.200 --> 43:55.200
不就完了吗

43:55.200 --> 43:56.200
你看现在

43:56.200 --> 43:57.200
我们保存一下

43:57.200 --> 43:58.200
你看是不是跑了右边

43:58.200 --> 44:00.200
就改一下地图就完事了

44:00.200 --> 44:01.200
是不是就是改地图

44:02.200 --> 44:03.200
你不是说

44:03.200 --> 44:04.200
导出东西不能改吗

44:04.200 --> 44:06.200
兄弟我没有给这个边量

44:06.200 --> 44:07.200
重新复制

44:07.200 --> 44:08.200
我改的是边量里边的那种

44:08.200 --> 44:09.200
就好一说

44:09.200 --> 44:10.200
改了对象里边的属向

44:10.200 --> 44:11.200
这个是允许的

44:11.200 --> 44:13.200
这个是不会造成什么问题的

44:14.200 --> 44:15.200
那么这里呢

44:16.200 --> 44:17.200
我们在这里

44:18.200 --> 44:19.200
play里面

44:19.200 --> 44:20.200
那么我们怎么玩呢

44:20.200 --> 44:21.200
其实就是改变地图

44:21.200 --> 44:22.200
怎么改变呢

44:22.200 --> 44:23.200
它改变的

44:23.200 --> 44:24.200
不是弯改变

44:24.200 --> 44:25.200
它又一定规则的

44:25.200 --> 44:26.200
那么我们可以看到

44:26.200 --> 44:27.200
这个文的时候呢

44:27.200 --> 44:28.200
无非就是

44:28.200 --> 44:29.200
你可以往

44:29.200 --> 44:30.200
控制的是什么

44:30.200 --> 44:31.200
控制的是不是箱子

44:31.200 --> 44:32.200
肯定不是

44:32.200 --> 44:33.200
控制的是玩家

44:33.200 --> 44:35.200
间接的控制的箱子

44:35.200 --> 44:37.200
因此玩家可以哪些操作

44:37.200 --> 44:38.200
是不是有上跑

44:38.200 --> 44:39.200
有右跑

44:39.200 --> 44:40.200
有左跑

44:40.200 --> 44:41.200
有下跑

44:41.200 --> 44:43.200
无非就是这么四个方向

44:43.200 --> 44:45.200
那么我们就提供这么一个函数

44:45.200 --> 44:47.200
就是玩家移动的函数

44:48.200 --> 44:54.770
方向叫做player

44:55.770 --> 44:57.770
你给我一个方向

44:57.770 --> 44:59.770
你给我一个方向

44:59.770 --> 45:01.770
这个方向的包含

45:01.770 --> 45:03.770
上下左右

45:03.770 --> 45:04.770
比方说吧

45:04.770 --> 45:06.770
这个方向的指示

45:08.770 --> 45:14.770
按照指定的方向

45:15.770 --> 45:17.770
让玩家移动一步

45:19.770 --> 45:20.770
让玩家移动一步

45:20.770 --> 45:21.770
那么方向包含哪些呢

45:21.770 --> 45:23.770
方向包含left

45:24.770 --> 45:25.770
right

45:25.770 --> 45:26.770
左右

45:26.770 --> 45:27.770
上

45:28.770 --> 45:29.770
下

45:30.770 --> 45:31.770
up

45:32.770 --> 45:34.770
包含这么几个方向

45:36.770 --> 45:38.770
那么这个地方怎么移动

45:40.770 --> 45:43.770
移动是不是要改变地图

45:43.770 --> 45:44.770
移动一定要改变地图

45:44.770 --> 45:46.770
那这里要不要一带地图

45:46.770 --> 45:47.770
那肯定要一带地图

45:47.770 --> 45:49.770
所以说地图毫无疑问

45:49.770 --> 45:50.770
导入引览

45:51.770 --> 45:52.770
来吧

45:52.770 --> 45:54.770
我们导入地图里面的内容

45:54.770 --> 45:59.770
content from map.js

45:59.770 --> 46:02.770
因为我这里好像只需要地图内容就行了

46:02.770 --> 46:03.770
只需要地图内容就行了

46:03.770 --> 46:05.770
我们找到地图

46:05.770 --> 46:07.770
把地图的内容导入进来

46:08.770 --> 46:09.770
这就是一带关系导出来了

46:09.770 --> 46:11.770
你看我们不管有多少个js

46:11.770 --> 46:13.770
不管有多少个复杂的一带关系

46:13.770 --> 46:15.770
我们只在乎这个模块要用到什么

46:15.770 --> 46:17.770
其他的不管了

46:17.770 --> 46:19.770
那么就跟以前不一样了

46:19.770 --> 46:20.770
以前我们要在一页面上

46:20.770 --> 46:21.770
一个个去引用js

46:21.770 --> 46:23.770
我们要去管理它的一带关系

46:23.770 --> 46:24.770
文件一多就非常头痛

46:24.770 --> 46:25.770
那么现在不用了

46:25.770 --> 46:26.770
现在我们只需要

46:26.770 --> 46:27.770
这个模块要用到啥

46:27.770 --> 46:29.770
这个是很清楚的

46:29.770 --> 46:32.770
那么把地图导入进来

46:32.770 --> 46:33.770
接下来我们来移动

46:33.770 --> 46:35.770
那么首先第一个问题就是

46:35.770 --> 46:37.770
能不能移动

46:37.770 --> 46:39.770
比如说现在我们要往左边移动

46:39.770 --> 46:41.770
那左边是强啊怎么能移动

46:41.770 --> 46:44.770
我们要往上边移动可以

46:44.770 --> 46:45.770
没问题

46:45.770 --> 46:46.770
我们要往下边移动可以

46:46.770 --> 46:47.770
没问题

46:47.770 --> 46:49.770
我们要往右边移动也可以

46:49.770 --> 46:51.770
是不是我们能不能移动

46:51.770 --> 46:55.770
取决于我们移动方向上的位置上

46:55.770 --> 46:57.770
是啥

46:57.770 --> 46:58.770
对不对

46:58.770 --> 47:00.770
是不是我们要取决于这个

47:00.770 --> 47:01.770
我们能不能移动

47:01.770 --> 47:02.770
比方说我们现在能不能

47:02.770 --> 47:04.770
朝左边移动呢

47:04.770 --> 47:05.770
我们取决于什么呢

47:05.770 --> 47:07.770
取决于左边这个方向上

47:07.770 --> 47:09.770
这个位置到底是个啥

47:09.770 --> 47:11.770
那是不是我们现在要

47:11.770 --> 47:14.770
得到玩家

47:14.770 --> 47:17.770
在某个方向上

47:17.770 --> 47:21.770
下一个位置的东西是啥

47:21.770 --> 47:23.770
是不是我们得到这个东西

47:23.770 --> 47:25.770
这个数据

47:25.770 --> 47:26.770
没问题吧

47:26.770 --> 47:28.770
我们要得到玩家

47:28.770 --> 47:30.770
在某个方向上

47:30.770 --> 47:33.770
下一个位置是啥

47:33.770 --> 47:35.770
这个数据是很关键的

47:35.770 --> 47:36.770
那么我们要得到这个数据

47:36.770 --> 47:38.770
我们才有能力来判断

47:38.770 --> 47:40.770
判定它能不能移动

47:40.770 --> 47:41.770
对不对

47:41.770 --> 47:42.770
所以说按照这样的规范的话

47:42.770 --> 47:43.770
规则的话

47:43.770 --> 47:45.770
我们要肯定要写个函数

47:45.770 --> 47:46.770
什么函数呢

47:46.770 --> 47:52.770
就是get next info

47:52.770 --> 47:54.770
或者再写详细点

47:54.770 --> 47:55.770
get player

47:55.770 --> 47:58.770
那个是info

47:58.770 --> 48:00.770
给我一个方向

48:00.770 --> 48:02.770
那么这是个辅助函数

48:02.770 --> 48:04.770
那么这个函数有什么用呢

48:04.770 --> 48:05.770
这个函数随便写

48:05.770 --> 48:06.770
不会污染权就这样了

48:06.770 --> 48:07.770
根本不用去考虑

48:07.770 --> 48:08.770
其他函数有没有同名函数

48:08.770 --> 48:09.770
完全不用考虑

48:09.770 --> 48:14.770
那么这里就是得到玩家

48:14.770 --> 48:18.770
在指定方向上

48:18.770 --> 48:21.770
上上下左右哪个方向上

48:21.770 --> 48:25.770
得下一个位置是啥

48:25.770 --> 48:27.770
下一个位置的信息

48:27.770 --> 48:28.770
信息里面就包括

48:28.770 --> 48:29.770
什么呢

48:29.770 --> 48:32.770
第几行

48:32.770 --> 48:34.770
第几列

48:34.770 --> 48:36.770
然后呢

48:36.770 --> 48:38.770
内容是啥

48:38.770 --> 48:39.770
内容是啥对吧

48:39.770 --> 48:41.770
我们就把这些信息全部拿到

48:41.770 --> 48:43.770
把这些信息全部拿到

48:43.770 --> 48:44.770
没问题吧

48:44.770 --> 48:45.770
得到

48:45.770 --> 48:47.770
或者不是玩家

48:47.770 --> 48:48.770
我们也不用玩家了

48:48.770 --> 48:50.770
一个传一个坐标

48:50.770 --> 48:52.770
行列

48:52.770 --> 48:53.770
一个传一个坐标

48:53.770 --> 48:55.770
我们把这些信息全部拿上

48:55.770 --> 48:56.770
就不是玩家了

48:56.770 --> 49:00.600
我们写的更加通用一点

49:00.600 --> 49:07.640
指定的行列

49:07.640 --> 49:09.640
指定的列

49:09.640 --> 49:12.640
得到某个位置

49:12.640 --> 49:14.640
在指定方向下一个位置的信息

49:14.640 --> 49:15.640
我举个例子

49:15.640 --> 49:17.640
有些人可能听不懂这点

49:17.640 --> 49:18.640
举个例子

49:18.640 --> 49:20.640
比方说

49:20.640 --> 49:21.640
我给他传

49:21.640 --> 49:22.640
这个方法

49:22.640 --> 49:23.640
我这样给他传的

49:23.640 --> 49:25.640
那个是info

49:25.640 --> 49:27.640
我这样给他传的

49:27.640 --> 49:29.640
我给他传一个

49:29.640 --> 49:30.640
三

49:30.640 --> 49:31.640
三

49:31.640 --> 49:33.640
neft

49:33.640 --> 49:35.640
啥意思呢

49:35.640 --> 49:37.640
我希望能够得到

49:37.640 --> 49:39.640
第四行

49:39.640 --> 49:40.640
第四列

49:40.640 --> 49:41.640
来数吧

49:41.640 --> 49:42.640
哪个位置

49:42.640 --> 49:44.640
第四行

49:44.640 --> 49:45.640
第四列

49:45.640 --> 49:46.640
是不是这个位置

49:47.640 --> 49:48.640
第四行

49:48.640 --> 49:49.640
第四列

49:49.640 --> 49:53.640
左边的信息

49:53.640 --> 49:55.640
所以要得到这个信息

49:55.640 --> 49:56.640
那么这个信息

49:56.640 --> 49:58.640
我希望你给我返回啥呢

49:58.640 --> 49:59.640
你给我返回一个对象

49:59.640 --> 50:00.640
这个对象里面

50:00.640 --> 50:01.640
你告诉我

50:01.640 --> 50:02.640
肉

50:02.640 --> 50:03.640
行是几呢

50:03.640 --> 50:05.640
行是3

50:05.640 --> 50:06.640
第四行

50:06.640 --> 50:07.640
列是几呢

50:07.640 --> 50:08.640
列是2

50:08.640 --> 50:09.640
第三列

50:09.640 --> 50:10.640
然后呢

50:10.640 --> 50:11.640
直是啥呢

50:11.640 --> 50:12.640
直是

50:12.640 --> 50:14.640
强是啥

50:14.640 --> 50:17.640
强好像是2

50:17.640 --> 50:18.640
我希望得到这么一个东西

50:18.640 --> 50:19.640
再来一次

50:19.640 --> 50:21.640
我给他传第3

50:21.640 --> 50:22.640
3就是第四行

50:22.640 --> 50:23.640
第四列

50:23.640 --> 50:26.640
左边的下一个是啥

50:26.640 --> 50:27.640
第四行

50:27.640 --> 50:28.640
第四列在这

50:28.640 --> 50:30.640
左边的下一个是不是在这

50:30.640 --> 50:31.640
对吧

50:31.640 --> 50:32.640
那么你给我返回这个信息

50:32.640 --> 50:34.640
是不是把信息描述完成了

50:34.640 --> 50:35.640
对吧

50:35.640 --> 50:38.640
我就希望得到这么一个东西

50:38.640 --> 50:39.640
不要这意思吧

50:39.640 --> 50:40.640
这就是这个函数要做的事情

50:40.640 --> 50:41.640
来吧

50:41.640 --> 50:43.640
这个函数怎么行呢

50:43.640 --> 50:44.640
判断没

50:44.640 --> 50:46.640
无非就是失动情况

50:46.640 --> 50:47.640
还能用啥呢

50:47.640 --> 50:48.640
一个信

50:48.640 --> 50:50.640
如果说你是left

50:50.640 --> 50:51.640
我给你返回吧

50:51.640 --> 50:53.640
返回啥呀

50:53.640 --> 50:55.640
我给你返回啥呀

50:55.640 --> 50:56.640
行是几

50:56.640 --> 50:57.640
我给你返回那个对象

50:57.640 --> 50:58.640
行是几

50:58.640 --> 50:59.640
往左边跑

50:59.640 --> 51:00.640
来吧

51:00.640 --> 51:01.640
往左边跑

51:01.640 --> 51:02.640
行变不变

51:02.640 --> 51:03.640
行是不不变

51:03.640 --> 51:04.640
列变不变

51:04.640 --> 51:05.640
列变不变

51:05.640 --> 51:06.640
列变不变

51:06.640 --> 51:07.640
列是不是

51:07.640 --> 51:08.640
卡尔解1

51:08.640 --> 51:10.640
Value值变不变

51:10.640 --> 51:12.640
这个位置的值是

51:12.640 --> 51:14.640
这个位置的值是啥

51:14.640 --> 51:15.640
这个位置的值是啥呀

51:15.640 --> 51:18.640
这个位置的值就一定是

51:18.640 --> 51:19.640
这一行

51:19.640 --> 51:20.640
这一列的值

51:20.640 --> 51:21.640
对吧

51:21.640 --> 51:22.640
那么肯定是content

51:22.640 --> 51:23.640
对吧

51:23.640 --> 51:24.640
row

51:24.640 --> 51:25.640
卡尔解1

51:25.640 --> 51:27.640
对不对

51:27.640 --> 51:28.640
左边是不搞定的

51:28.640 --> 51:29.640
就几个判断就完成了

51:29.640 --> 51:30.640
他只能说反说

51:30.640 --> 51:32.640
你不能说他负责

51:32.640 --> 51:35.640
direction

51:35.640 --> 51:36.640
direction

51:36.640 --> 51:38.640
如果说等于right

51:38.640 --> 51:41.640
往右边跑

51:41.640 --> 51:43.640
那么右边的话

51:43.640 --> 51:44.640
下一个位置是啥

51:44.640 --> 51:45.640
行不变

51:45.640 --> 51:46.640
行不变

51:46.640 --> 51:47.640
往右边行变啥

51:47.640 --> 51:48.640
列叽加1

51:48.640 --> 51:49.640
对吧

51:49.640 --> 51:50.640
这里加1

51:50.640 --> 51:51.640
只能说他反说

51:51.640 --> 51:52.640
不能说他负责

51:52.640 --> 51:53.640
就一个型

51:53.640 --> 51:54.640
如果说等于什么

51:54.640 --> 51:55.640
up

51:55.640 --> 51:57.640
往上跑

51:57.640 --> 51:59.640
上边

51:59.640 --> 52:00.640
上边

52:00.640 --> 52:01.640
列就不变了

52:01.640 --> 52:02.640
列就不变了

52:02.640 --> 52:03.640
行简易

52:03.640 --> 52:04.640
行简易

52:04.640 --> 52:05.640
row

52:05.640 --> 52:07.640
内容是

52:07.640 --> 52:08.640
content

52:08.640 --> 52:10.640
row-1

52:11.640 --> 52:13.640
cow

52:13.640 --> 52:15.640
l

52:15.640 --> 52:18.640
就是往下跑

52:18.640 --> 52:19.640
往下跑的话

52:19.640 --> 52:21.640
行加1

52:21.640 --> 52:22.640
我这里没有考虑

52:22.640 --> 52:23.640
超出的情况

52:23.640 --> 52:24.640
因为有强存在

52:24.640 --> 52:25.640
还不可能超出的

52:25.640 --> 52:26.640
OK

52:26.640 --> 52:27.640
是不是搞定了

52:27.640 --> 52:28.640
这个函数也搞定了

52:28.640 --> 52:29.640
对吧

52:29.640 --> 52:30.640
搞定了

52:30.640 --> 52:31.640
这个函数搞定了之后

52:31.640 --> 52:33.640
我们再回到这

52:33.640 --> 52:35.640
再回到这

52:35.640 --> 52:38.640
喝多水

52:38.640 --> 52:46.240
这要干嘛

52:46.240 --> 52:49.240
这里要按照指定的方向

52:49.240 --> 52:50.240
方向在这

52:50.240 --> 52:52.240
让玩家移动一步

52:52.240 --> 52:53.240
我们是不是要

52:53.240 --> 52:55.240
获取玩家下一个位置

52:55.240 --> 52:57.240
那么玩家在哪呢

52:57.240 --> 52:58.240
这我不知道玩家在哪

52:58.240 --> 52:59.240
对吧

52:59.240 --> 53:00.240
我咋知道玩家在哪呢

53:00.240 --> 53:01.240
玩家我们只知道是1

53:01.240 --> 53:02.240
对不对

53:02.240 --> 53:03.240
那么玩家具体在哪

53:03.240 --> 53:05.240
我是不是得循环

53:05.240 --> 53:07.240
是不是又得循环这个玩意儿

53:07.240 --> 53:08.240
对吧

53:08.240 --> 53:09.240
是不是得循环他

53:09.240 --> 53:10.240
没问题吧

53:10.240 --> 53:12.240
我得循环他

53:12.240 --> 53:14.240
这个去找玩家的位置

53:14.240 --> 53:16.240
那么这里又产生一个需求

53:16.240 --> 53:18.240
我要获取玩家的位置

53:18.240 --> 53:22.810
get player info

53:22.810 --> 53:26.810
这是得到玩家的位置

53:26.810 --> 53:30.810
或者是get player point

53:30.810 --> 53:32.810
得到玩家的位置

53:32.810 --> 53:33.810
那么这个函数咋很好写

53:33.810 --> 53:34.810
就循环他

53:34.810 --> 53:35.810
循环这个玩意儿就完了

53:35.810 --> 53:36.810
对不对

53:36.810 --> 53:37.810
他有几行几列

53:37.810 --> 53:38.810
我们把那个也导入进来

53:38.810 --> 53:39.810
行合列

53:39.810 --> 53:41.810
call number

53:41.810 --> 53:42.810
row number

53:42.810 --> 53:43.810
导入进来

53:43.810 --> 53:44.810
来吧

53:44.810 --> 53:45.810
循环

53:45.810 --> 53:46.810
for循环

53:46.810 --> 53:48.810
i等于0

53:48.810 --> 53:49.810
这肉

53:49.810 --> 53:51.810
我们用好的辩量名

53:51.810 --> 53:52.810
肉小于

53:52.810 --> 53:53.810
row number

53:53.810 --> 53:54.810
循环行

53:54.810 --> 53:56.810
row++

53:56.810 --> 53:57.810
然后呢又来

53:57.810 --> 53:58.810
call

53:58.810 --> 53:59.810
等于0

53:59.810 --> 54:00.810
call小于

54:00.810 --> 54:01.810
call number

54:01.810 --> 54:02.810
循环列

54:02.810 --> 54:04.810
call++

54:04.810 --> 54:05.810
好那么循环行

54:05.810 --> 54:06.810
循环列

54:06.810 --> 54:07.810
来吧

54:07.810 --> 54:08.810
判断一下

54:08.810 --> 54:11.810
如果说你这个地图里边

54:12.810 --> 54:15.810
这个行合列上等于了什么呢

54:15.810 --> 54:17.810
等于了玩家

54:17.810 --> 54:18.810
玩家那么玩家

54:18.810 --> 54:20.810
我们是不是之前写过长量

54:20.810 --> 54:21.810
player

54:21.810 --> 54:23.810
写过长量导出的

54:23.810 --> 54:24.810
发现导出多了

54:24.810 --> 54:26.810
就全部导出

54:26.810 --> 54:28.810
等于玩家

54:28.810 --> 54:29.810
算了

54:29.810 --> 54:30.810
我们全部导出

54:30.810 --> 54:31.810
全部导出得了

54:31.810 --> 54:32.810
全部导出得了

54:32.810 --> 54:33.810
跟那边一样

54:33.810 --> 54:35.810
smap免得太多了

54:35.810 --> 54:37.810
这里呢

54:37.810 --> 54:38.810
这里呢

54:38.810 --> 54:40.810
我们就要用到这个

54:40.810 --> 54:42.810
map.row number

54:42.810 --> 54:45.810
map.call number

54:45.810 --> 54:47.810
map.player

54:47.810 --> 54:50.810
那么这里是map.contents

54:50.810 --> 54:52.810
包括下面要改一改

54:52.810 --> 54:54.810
这里就是map.

54:54.810 --> 55:00.110
复制一下

55:00.110 --> 55:01.110
来吧

55:01.110 --> 55:02.110
继续

55:02.110 --> 55:04.110
得到玩家的位置

55:04.110 --> 55:05.110
得到玩家的位置呢

55:05.110 --> 55:07.110
我们来看一下

55:07.110 --> 55:09.110
那么如果说你这个位置

55:09.110 --> 55:10.110
地图的这个位置

55:10.110 --> 55:12.110
跟玩家是一样的

55:12.110 --> 55:13.110
是不是玩家位置找到了

55:13.110 --> 55:15.110
找到了玩家位置之后

55:15.110 --> 55:16.110
我们把玩家的位置返回

55:16.110 --> 55:18.110
那么位置有两个信息

55:18.110 --> 55:19.110
是不是都得返回

55:19.110 --> 55:20.110
row等于什么呢

55:20.110 --> 55:21.110
row

55:21.110 --> 55:22.110
当然你学过es6的话

55:22.110 --> 55:25.110
你可以直接这样子写了

55:25.110 --> 55:27.110
es6是非常非常基础的

55:27.110 --> 55:28.110
非常非常重要的

55:28.110 --> 55:29.110
大家一定要

55:29.110 --> 55:30.110
如果还没学的同学

55:30.110 --> 55:31.110
一定要赶快去学

55:31.110 --> 55:33.110
如果说你没有找到玩家

55:33.110 --> 55:34.110
当然不太可能

55:34.110 --> 55:36.110
如果说你真的没有找到玩家

55:36.110 --> 55:37.110
说明地图肯定有问题

55:37.110 --> 55:38.110
地图

55:38.110 --> 55:39.110
我们去报出

55:39.110 --> 55:41.110
地图上

55:41.110 --> 55:44.110
居然没有玩家

55:44.110 --> 55:45.110
好奇怪啊

55:45.110 --> 55:47.110
一个地图肯定有问题

55:47.110 --> 55:49.110
玩不了这个游戏

55:49.110 --> 55:50.110
当然这个不太可能

55:50.110 --> 55:52.110
我们也不用问这个情况

55:52.110 --> 55:53.110
那么有这个喊说存在

55:53.110 --> 55:55.110
是不是可以找到玩家的位置

55:55.110 --> 55:57.110
来我们来试一下

55:57.110 --> 55:59.110
playermove

55:59.110 --> 56:00.110
那么得到

56:00.110 --> 56:01.110
就找

56:01.110 --> 56:03.110
玩家移动

56:03.110 --> 56:05.110
我们肯定要找到玩家位置

56:05.110 --> 56:06.110
player

56:06.110 --> 56:08.550
player

56:08.550 --> 56:09.550
point

56:09.550 --> 56:10.550
找到玩家位置

56:10.550 --> 56:11.550
这个是毫无疑问的

56:11.550 --> 56:12.550
get

56:12.550 --> 56:13.550
player

56:13.550 --> 56:14.550
point

56:14.550 --> 56:16.550
是不是要找到玩家位置

56:16.550 --> 56:17.550
这个毫无疑问的

56:17.550 --> 56:19.550
得到玩家位置

56:19.550 --> 56:21.550
我们把玩家位置输出

56:21.550 --> 56:22.550
以后我们再测试一下

56:22.550 --> 56:23.550
这么准确

56:23.550 --> 56:26.550
然后我们还要得到玩家位置

56:26.550 --> 56:28.550
得到玩家

56:28.550 --> 56:31.550
下一个位置的信息

56:31.550 --> 56:33.550
是不是用刚才那个喊说

56:33.550 --> 56:34.550
get the next info

56:34.550 --> 56:36.550
好来吧

56:36.550 --> 56:38.550
得到玩家下一个位置的信息

56:38.550 --> 56:39.550
它要传几个参数

56:39.550 --> 56:40.550
一个是行和列

56:40.550 --> 56:41.550
行和列在哪

56:41.550 --> 56:42.550
是不是在这

56:42.550 --> 56:43.550
在玩家那个对象

56:43.550 --> 56:45.550
玩家位置的对象里边有行

56:45.550 --> 56:47.550
玩家对象里边有个列

56:47.550 --> 56:50.550
然后方向就是这个方向

56:50.550 --> 56:52.550
在这个方向上面

56:52.550 --> 56:53.550
玩家位置

56:53.550 --> 56:56.550
下一个位置是啥

56:56.550 --> 56:58.550
那么这里我们把设置为

56:58.550 --> 56:59.550
那个是info

56:59.550 --> 57:01.550
那个是info

57:01.550 --> 57:02.550
也输出

57:02.550 --> 57:03.550
那个是info

57:03.550 --> 57:04.550
也就是调用这个喊说

57:04.550 --> 57:06.550
我们先把这两个东西输出

57:06.550 --> 57:07.550
这个玩意肯定是

57:07.550 --> 57:09.550
我们这个模块要导出的东西

57:09.550 --> 57:11.550
我们这里把导出

57:11.550 --> 57:13.550
导出为啥呢

57:13.550 --> 57:14.550
为啥呢

57:14.550 --> 57:17.550
就这样导出

57:17.550 --> 57:18.550
好把导出

57:18.550 --> 57:20.550
然后我们在入口文件里边

57:20.550 --> 57:21.550
入口文件里边

57:21.550 --> 57:22.550
我们这样子来

57:22.550 --> 57:23.550
先显示吧

57:23.550 --> 57:24.550
先显示

57:24.550 --> 57:25.550
显示完了过后

57:25.550 --> 57:26.550
我们测试一下吧

57:26.550 --> 57:28.550
测试一下移动

57:28.550 --> 57:32.560
play from

57:32.560 --> 57:33.560
play

57:33.560 --> 57:36.560
这里一个player目

57:36.560 --> 57:37.560
好来吧

57:37.560 --> 57:39.560
玩家移动

57:39.560 --> 57:40.560
往哪边移动了

57:40.560 --> 57:42.560
往左边移动吧

57:42.560 --> 57:44.560
咱们来看一下这个信息

57:44.560 --> 57:46.560
信息对不对

57:46.560 --> 57:48.560
这里报错了是吧

57:48.560 --> 57:50.560
这里点儿些也是

57:50.560 --> 57:52.560
好你看一下

57:52.560 --> 57:55.560
玩家的位置是不是第二行第五列

57:55.560 --> 57:57.560
来处吧

57:57.560 --> 58:00.560
玩家的位置是不是第二行第五列

58:00.560 --> 58:02.560
第一个打出打印出来是玩家位置

58:02.560 --> 58:03.560
没问题吧

58:03.560 --> 58:05.560
第二行第五列

58:05.560 --> 58:08.560
好玩家左边那个位置

58:08.560 --> 58:10.560
是不是第二行第四列

58:10.560 --> 58:11.560
对吧

58:11.560 --> 58:12.560
肯定是吧

58:12.560 --> 58:13.560
对吧

58:13.560 --> 58:15.560
玩家左边的位置是不是零

58:15.560 --> 58:16.560
是不是空白

58:16.560 --> 58:17.560
对不对

58:17.560 --> 58:18.560
没问题吧

58:18.560 --> 58:20.560
我们就要得到这样的信息

58:20.560 --> 58:21.560
对不对

58:21.560 --> 58:22.560
没问题吧

58:22.560 --> 58:23.560
OK

58:23.560 --> 58:24.560
好

58:24.560 --> 58:25.560
那么我们把这个信息拿到了

58:25.560 --> 58:27.560
拿到这个信息过后

58:27.560 --> 58:29.560
首先要搞定的就是

58:29.560 --> 58:31.560
什么情况下

58:31.560 --> 58:33.560
不能移动

58:33.560 --> 58:37.520
啥情况下不能移动呢

58:37.520 --> 58:39.520
啥情况下不能移动

58:39.520 --> 58:41.520
第一种情况是一定不能移动的

58:41.520 --> 58:43.520
是什么

58:43.520 --> 58:44.520
是强

58:44.520 --> 58:46.520
你的下一个位置的Value值是强

58:46.520 --> 58:47.520
能动吗

58:47.520 --> 58:48.520
肯定不能动

58:48.520 --> 58:49.520
对不对

58:49.520 --> 58:50.520
好那么来

58:50.520 --> 58:53.520
玩家如果说下一个位置

58:53.520 --> 58:56.520
是强肯定是不能移动的

58:56.520 --> 58:57.520
那么怎么办

58:57.520 --> 58:59.520
就那个是info

58:59.520 --> 59:01.520
下一个位置是下一个位置的Value值

59:01.520 --> 59:02.520
对吧

59:02.520 --> 59:03.520
Value值

59:03.520 --> 59:04.520
如果等于到强

59:04.520 --> 59:06.520
Map里面一个窝

59:06.520 --> 59:07.520
它是强

59:07.520 --> 59:08.520
那么肯定不能移动

59:08.520 --> 59:09.520
我们这里输出

59:09.520 --> 59:11.520
不能移动

59:11.520 --> 59:13.520
对吧

59:13.520 --> 59:15.520
这种情况我们一定要考虑进去

59:15.520 --> 59:16.520
来吧

59:16.520 --> 59:17.520
我们测试一下

59:17.520 --> 59:18.520
测试一下

59:18.520 --> 59:19.520
这个Player

59:19.520 --> 59:20.520
这里呢

59:20.520 --> 59:21.520
告诉大家一个小技巧

59:21.520 --> 59:23.520
我们测试的是怎么办

59:23.520 --> 59:24.520
因为我们在控制台里边

59:24.520 --> 59:25.520
跟以前不一样了

59:25.520 --> 59:26.520
我们在这里边

59:26.520 --> 59:28.520
怎么能去调用这个什么Player步

59:28.520 --> 59:30.520
肯定是不调用不了的

59:30.520 --> 59:31.520
它说没有定义

59:31.520 --> 59:32.520
因为它现在的模块里边

59:32.520 --> 59:33.520
它没有暴露出来

59:33.520 --> 59:35.520
那如果说你在模块里边

59:35.520 --> 59:36.520
你希望暴露到Windows

59:36.520 --> 59:37.520
暴露到全距里边

59:37.520 --> 59:38.520
怎么办呢

59:38.520 --> 59:39.520
有一招很糟

59:39.520 --> 59:40.520
我告诉你

59:40.520 --> 59:41.520
什么很糟

59:41.520 --> 59:43.520
你可以用这种方式

59:43.520 --> 59:45.520
主要是测试的时候用

59:45.520 --> 59:48.520
平时都不要乱来

59:48.520 --> 59:49.520
是不是很糟

59:49.520 --> 59:50.520
就是特别简单

59:50.520 --> 59:51.520
你往Windows

59:51.520 --> 59:53.520
直接往权力的地方里边讲

59:53.520 --> 59:54.520
那么现在的可以了

59:54.520 --> 59:55.520
Player步

59:55.520 --> 59:57.520
那么我们往左边跑

59:57.520 --> 59:58.520
你看看

59:58.520 --> 59:59.520
没问题吧

59:59.520 --> 01:00:00.520
对吧

01:00:00.520 --> 01:00:01.520
没有输出不能移动

01:00:01.520 --> 01:00:02.520
再来

01:00:02.520 --> 01:00:03.520
我说我们在这个位置

01:00:03.520 --> 01:00:05.520
往上边跑

01:00:05.520 --> 01:00:06.520
所以不能移动

01:00:06.520 --> 01:00:07.520
上面是强啊

01:00:07.520 --> 01:00:08.520
怎么能移动呢

01:00:08.520 --> 01:00:09.520
对吧

01:00:09.520 --> 01:00:10.520
往右边跑

01:00:10.520 --> 01:00:12.520
没问题

01:00:12.520 --> 01:00:13.520
往下边跑

01:00:13.520 --> 01:00:15.520
这些都目前都还没有

01:00:15.520 --> 01:00:17.520
还没有具体做怎么跑

01:00:17.520 --> 01:00:18.520
但是能不能移动

01:00:18.520 --> 01:00:19.520
是不是可以判定的

01:00:19.520 --> 01:00:22.520
不能移动直接结束了

01:00:22.520 --> 01:00:23.520
这种情况是不能移动的

01:00:23.520 --> 01:00:25.520
不能移动直接结束

01:00:27.520 --> 01:00:30.520
那么下面是能移动

01:00:30.520 --> 01:00:31.520
好

01:00:31.520 --> 01:00:33.520
能移动的时候

01:00:33.520 --> 01:00:35.520
优分是不是又要分情况

01:00:35.520 --> 01:00:36.520
对吧

01:00:36.520 --> 01:00:37.520
是不是又要分情况

01:00:37.520 --> 01:00:40.520
如果你是空白

01:00:40.520 --> 01:00:42.520
如果你的下一个位置

01:00:42.520 --> 01:00:44.520
是空白

01:00:44.520 --> 01:00:45.520
Space

01:00:45.520 --> 01:00:49.150
空白

01:00:49.150 --> 01:00:51.150
下一个位置是空白

01:00:51.150 --> 01:00:54.150
这个是下一个位置

01:00:54.150 --> 01:00:55.150
是强

01:00:55.150 --> 01:00:57.150
肯定是不能移动的

01:00:57.150 --> 01:00:59.150
空白是不是一定能移动

01:00:59.150 --> 01:01:01.150
你的下一个位置是空白

01:01:01.150 --> 01:01:03.150
是不是一定能移动

01:01:03.150 --> 01:01:04.150
这还他说的呢

01:01:04.150 --> 01:01:06.150
肯定能移动

01:01:06.150 --> 01:01:07.150
你下一个位置是空白

01:01:07.150 --> 01:01:08.150
那你还不能移动

01:01:08.150 --> 01:01:09.150
对不对

01:01:09.150 --> 01:01:11.150
那么如果说你下一个位置

01:01:11.150 --> 01:01:12.150
是空白的情况下

01:01:12.150 --> 01:01:13.150
你能移动

01:01:13.150 --> 01:01:15.150
那么怎么移动的问题是

01:01:15.150 --> 01:01:17.150
什么叫做移动

01:01:17.150 --> 01:01:19.150
移动不就是

01:01:19.150 --> 01:01:20.150
把其中一个位置的值

01:01:20.150 --> 01:01:22.150
跟另外一个位置的值交换

01:01:23.150 --> 01:01:24.150
是不是就是移动

01:01:24.150 --> 01:01:25.150
什么叫移动

01:01:25.150 --> 01:01:27.150
它往这里移动

01:01:27.150 --> 01:01:28.150
是不是把它这个位置的值

01:01:28.150 --> 01:01:30.150
跟这个位置的值交换

01:01:30.150 --> 01:01:31.150
对吧

01:01:31.150 --> 01:01:32.150
不就是移动

01:01:32.150 --> 01:01:33.150
没问题吧

01:01:33.150 --> 01:01:35.150
没问题吧

01:01:35.150 --> 01:01:36.150
这就是移动

01:01:36.150 --> 01:01:38.150
所以说移动

01:01:38.150 --> 01:01:40.150
我们就写上一个函数

01:01:40.150 --> 01:01:42.150
其实就是一个签计交换

01:01:43.150 --> 01:01:45.150
你给我一个坐标1

01:01:45.150 --> 01:01:46.150
point1

01:01:46.150 --> 01:01:48.150
给我一个坐标2

01:01:48.150 --> 01:01:49.150
就行了

01:01:49.150 --> 01:01:50.150
剩下的事你别管了

01:01:50.150 --> 01:01:51.150
我来帮你搞定吧

01:01:51.150 --> 01:01:52.150
坐标1是一个对象

01:01:52.150 --> 01:01:53.150
里边有函合列

01:01:53.150 --> 01:01:54.150
坐标2是一个对象

01:01:54.150 --> 01:01:55.150
里边有函合列

01:01:55.150 --> 01:01:56.150
那么这里怎么移动

01:01:56.150 --> 01:01:58.150
我们就是一个签计

01:01:58.150 --> 01:02:00.150
交换

01:02:00.150 --> 01:02:01.150
交换什么

01:02:01.150 --> 01:02:02.150
坐标1是一个对象

01:02:02.150 --> 01:02:04.150
坐标1是什么呢

01:02:04.150 --> 01:02:05.150
行等于什么呢

01:02:05.150 --> 01:02:06.150
等于当前的一行

01:02:09.150 --> 01:02:11.150
坐标1是这样子

01:02:11.150 --> 01:02:14.150
坐标1就是玩家

01:02:14.150 --> 01:02:16.150
玩家的坐标

01:02:16.150 --> 01:02:17.150
玩家坐标

01:02:17.150 --> 01:02:18.150
它是个对象

01:02:18.150 --> 01:02:20.150
它要交换的时候下一个位置

01:02:20.150 --> 01:02:22.150
下一个位置里边也有函合列

01:02:22.150 --> 01:02:24.150
下一个位置里边也有函合列

01:02:25.150 --> 01:02:27.150
就把这两个位置交换

01:02:27.150 --> 01:02:29.150
那怎么交换呢

01:02:29.150 --> 01:02:32.150
就跟交换数组里边是一样的道理

01:02:32.150 --> 01:02:35.150
先把一个位置的东西存起来

01:02:35.150 --> 01:02:37.150
把map点

01:02:37.150 --> 01:02:38.150
content

01:02:38.150 --> 01:02:39.150
这里边什么

01:02:39.150 --> 01:02:41.150
point1.6

01:02:41.150 --> 01:02:44.150
然后point1.cow

01:02:44.150 --> 01:02:45.150
先存一个坐标

01:02:45.150 --> 01:02:47.150
存一个位置的值

01:02:47.150 --> 01:02:50.150
然后把这个位置的值的改一下

01:02:50.150 --> 01:02:51.150
改成什么呢

01:02:51.150 --> 01:02:53.150
改成另外一个位置的值

01:02:53.150 --> 01:02:55.150
point2

01:02:55.150 --> 01:02:56.150
跟数组里面交换是一样的

01:02:56.150 --> 01:02:58.150
只不过这里是二位数组

01:02:59.150 --> 01:03:04.150
然后再把这个位置的值

01:03:04.150 --> 01:03:06.150
改成之前的temp

01:03:06.150 --> 01:03:07.150
不就交换了吗

01:03:07.150 --> 01:03:09.150
下一个位置是空白

01:03:09.150 --> 01:03:11.150
怎么搞定的

01:03:11.150 --> 01:03:13.150
怎么搞定的

01:03:13.150 --> 01:03:15.150
那么能移动的话

01:03:15.150 --> 01:03:16.150
那么这样子

01:03:16.150 --> 01:03:18.150
我们移动了就返回去

01:03:18.150 --> 01:03:19.150
没有移动就返回force

01:03:19.150 --> 01:03:20.150
移动了就返回去

01:03:20.150 --> 01:03:22.150
没有移动就返回force

01:03:22.150 --> 01:03:23.150
好来吧

01:03:23.150 --> 01:03:24.150
我们来试一下

01:03:24.150 --> 01:03:25.150
那么这里移动了

01:03:25.150 --> 01:03:26.150
下一个位置是空白

01:03:26.150 --> 01:03:27.150
移动了

01:03:27.150 --> 01:03:29.150
返回去

01:03:29.150 --> 01:03:30.150
好那么这里呢

01:03:30.150 --> 01:03:32.150
我们来看一下

01:03:32.150 --> 01:03:34.150
playermove

01:03:34.150 --> 01:03:36.150
往右边移动

01:03:36.150 --> 01:03:37.150
是不是好像出了

01:03:37.150 --> 01:03:38.150
表示移动了

01:03:38.150 --> 01:03:39.150
那界面为什么没变呢

01:03:39.150 --> 01:03:41.150
是因为我没有重新调用

01:03:41.150 --> 01:03:43.150
没有重新调用这个修UI

01:03:43.150 --> 01:03:44.150
没有重新调用它

01:03:44.150 --> 01:03:46.150
那么我们也用同样的方式

01:03:46.150 --> 01:03:51.150
Windows修UI

01:03:51.150 --> 01:03:54.150
等于修UI

01:03:54.150 --> 01:03:55.150
好保存

01:03:55.150 --> 01:03:56.150
来吧

01:03:56.150 --> 01:03:57.150
往右边移动

01:03:57.150 --> 01:03:59.150
然后我们调用修UI

01:04:00.150 --> 01:04:02.150
试看你看

01:04:02.150 --> 01:04:03.150
界面是不是刷新了

01:04:03.150 --> 01:04:04.150
跑到这儿来了

01:04:04.150 --> 01:04:06.150
然后我们再往右边移动

01:04:06.150 --> 01:04:07.150
是force移动不了了

01:04:07.150 --> 01:04:09.150
然后我们再修UI有用吗

01:04:09.150 --> 01:04:10.150
它还是没动

01:04:10.150 --> 01:04:12.150
说明地图的内容没变

01:04:12.150 --> 01:04:14.150
地图的内容没变

01:04:15.150 --> 01:04:16.150
没问题吧

01:04:16.150 --> 01:04:17.150
这是空白的情况

01:04:17.150 --> 01:04:19.150
我们再往下一动

01:04:19.150 --> 01:04:20.150
再往下一动

01:04:22.150 --> 01:04:23.150
往下一动

01:04:23.150 --> 01:04:24.150
成功了

01:04:24.150 --> 01:04:25.150
成功了我们就修UI

01:04:25.150 --> 01:04:27.150
往下一动了

01:04:27.150 --> 01:04:28.150
对不对

01:04:28.150 --> 01:04:30.150
就特别简单

01:04:30.150 --> 01:04:31.150
特别简单

01:04:31.150 --> 01:04:32.150
好来吧

01:04:32.150 --> 01:04:33.150
我们继续

01:04:33.150 --> 01:04:34.150
然后我们现在

01:04:34.150 --> 01:04:36.150
还要考虑到一种情况就是

01:04:37.150 --> 01:04:38.150
空白我们搞定了

01:04:38.150 --> 01:04:39.150
还有一种情况就是什么呢

01:04:39.150 --> 01:04:41.150
箱子

01:04:41.150 --> 01:04:42.150
是不是箱子

01:04:42.150 --> 01:04:44.150
它下一个位置无非就是空白

01:04:44.150 --> 01:04:45.150
墙

01:04:45.150 --> 01:04:46.150
箱子还有啥

01:04:46.150 --> 01:04:47.150
还能有啥呢

01:04:47.150 --> 01:04:48.150
不可能有其他情况了

01:04:48.150 --> 01:04:50.150
下一个位置是箱子

01:04:50.150 --> 01:04:52.150
下一个位置是箱子

01:04:53.150 --> 01:04:54.150
箱子

01:04:54.150 --> 01:04:55.150
那这个时候怎么办

01:04:56.150 --> 01:04:57.150
能不能动

01:04:57.150 --> 01:04:59.910
你看

01:04:59.910 --> 01:05:00.910
我现在往右一动

01:05:00.910 --> 01:05:01.910
下面是箱子吗

01:05:01.910 --> 01:05:02.910
能不能动

01:05:02.910 --> 01:05:03.910
能动了

01:05:03.910 --> 01:05:05.910
我们现在继续往右面

01:05:05.910 --> 01:05:06.910
移动

01:05:06.910 --> 01:05:07.910
下一个位置还是箱子

01:05:07.910 --> 01:05:09.910
现在又不能动了

01:05:10.910 --> 01:05:12.910
那么下一个位置是箱子

01:05:12.910 --> 01:05:14.910
它能不能动取决于啥

01:05:15.910 --> 01:05:18.910
取决于箱子的下一个位置

01:05:18.910 --> 01:05:19.910
是啥

01:05:19.910 --> 01:05:20.910
对吧

01:05:20.910 --> 01:05:21.910
是不是这样子的

01:05:22.910 --> 01:05:25.910
取决于箱子的下一个位置

01:05:25.910 --> 01:05:27.910
如果箱子下一个位置是空白

01:05:27.910 --> 01:05:28.910
可以动

01:05:28.910 --> 01:05:30.910
如果箱子下一个位置

01:05:30.910 --> 01:05:31.910
不是空白

01:05:31.910 --> 01:05:32.910
就不能动

01:05:33.910 --> 01:05:34.910
对不对

01:05:34.910 --> 01:05:35.910
下一个位置箱子

01:05:35.910 --> 01:05:37.910
是不是要取决于箱子的下一个位置

01:05:37.910 --> 01:05:38.910
就是获取

01:05:41.910 --> 01:05:44.910
就是获取箱子的下一个位置

01:05:45.910 --> 01:05:46.910
对吧

01:05:46.910 --> 01:05:47.910
是不是我们这个

01:05:47.910 --> 01:05:48.910
还是又可以用到呢

01:05:48.910 --> 01:05:49.910
这个还说

01:05:49.910 --> 01:05:53.540
你把箱子的位置传进去

01:05:53.540 --> 01:05:55.540
箱子的位置是啥

01:05:55.540 --> 01:05:57.540
箱子的位置不就是玩家的下一个位置吗

01:05:57.540 --> 01:05:58.540
下一个位置是箱子吗

01:05:58.540 --> 01:05:59.540
箱子的位置就是下一个位置

01:05:59.540 --> 01:06:00.540
就是这个next的info

01:06:00.540 --> 01:06:01.540
就是这个玩意儿

01:06:05.540 --> 01:06:06.540
然后呢

01:06:06.540 --> 01:06:07.540
方向还是同一个方向

01:06:08.540 --> 01:06:10.540
可以获取箱子的下一个位置

01:06:10.540 --> 01:06:11.540
那么这能不能用

01:06:11.540 --> 01:06:13.540
next的info

01:06:13.540 --> 01:06:14.540
下一个位置

01:06:14.540 --> 01:06:16.540
箱子的下一个位置

01:06:16.540 --> 01:06:17.540
是不是就是下一个位置

01:06:17.540 --> 01:06:18.540
对吧

01:06:18.540 --> 01:06:20.540
如果说下一个位置

01:06:20.540 --> 01:06:22.540
就是箱子的下一个位置

01:06:22.540 --> 01:06:24.540
如果说是空白

01:06:24.540 --> 01:06:26.540
是不是可以动

01:06:26.540 --> 01:06:28.540
可以移动

01:06:28.540 --> 01:06:29.540
否则的话

01:06:29.540 --> 01:06:30.540
只要你不是空白

01:06:30.540 --> 01:06:31.540
箱子的下一个位置

01:06:31.540 --> 01:06:33.540
不是空白一定不能移动

01:06:33.540 --> 01:06:35.540
可以移动怎么移动

01:06:35.540 --> 01:06:37.540
那你看吧

01:06:37.540 --> 01:06:39.540
看地图

01:06:39.540 --> 01:06:40.540
比方说

01:06:40.540 --> 01:06:41.540
这里是您

01:06:41.540 --> 01:06:42.540
玩家在这

01:06:42.540 --> 01:06:44.540
他往右边推这个箱子

01:06:44.540 --> 01:06:45.540
怎么动

01:06:45.540 --> 01:06:48.540
是不是先把箱子跟这个子交换

01:06:48.540 --> 01:06:51.540
然后再把玩家跟这个子交换

01:06:51.540 --> 01:06:52.540
对吧

01:06:52.540 --> 01:06:53.540
交换两次

01:06:53.540 --> 01:06:55.540
那就好了呗

01:06:55.540 --> 01:06:56.540
一个是迁迹

01:06:56.540 --> 01:06:58.540
这是有函数的

01:06:58.540 --> 01:06:59.540
先把箱子

01:06:59.540 --> 01:07:00.540
nextinfo

01:07:00.540 --> 01:07:02.540
和箱子的下一个位置

01:07:02.540 --> 01:07:04.540
next的nextinfo交换

01:07:04.540 --> 01:07:05.540
然后呢

01:07:05.540 --> 01:07:06.540
再交换

01:07:06.540 --> 01:07:07.540
玩家

01:07:07.540 --> 01:07:09.540
playerpoint

01:07:09.540 --> 01:07:11.540
和下一个位置

01:07:11.540 --> 01:07:12.540
对吧

01:07:12.540 --> 01:07:14.540
无非就是做什么

01:07:14.540 --> 01:07:16.540
最后返回去

01:07:17.540 --> 01:07:19.540
那么箱子就搞定了

01:07:19.540 --> 01:07:20.540
好来试一下吧

01:07:20.540 --> 01:07:21.540
这边来

01:07:21.540 --> 01:07:22.540
好

01:07:22.540 --> 01:07:24.540
我们先往左边移动

01:07:24.540 --> 01:07:25.540
player

01:07:25.540 --> 01:07:26.540
五

01:07:27.540 --> 01:07:28.540
往左边

01:07:28.540 --> 01:07:29.540
next

01:07:30.540 --> 01:07:31.540
秀右按

01:07:32.540 --> 01:07:33.540
然后呢

01:07:33.540 --> 01:07:34.540
再往下边

01:07:34.540 --> 01:07:35.540
当

01:07:36.540 --> 01:07:37.540
秀右按

01:07:37.540 --> 01:07:38.540
然后呢

01:07:38.540 --> 01:07:39.540
再往右边

01:07:39.540 --> 01:07:40.540
right

01:07:40.540 --> 01:07:42.540
然后秀右按

01:07:42.540 --> 01:07:43.540
你看

01:07:43.540 --> 01:07:44.540
然后再往右边移动

01:07:44.540 --> 01:07:45.540
forced

01:07:45.540 --> 01:07:46.540
看移动不了

01:07:46.540 --> 01:07:47.540
对吧

01:07:47.540 --> 01:07:48.540
不就搞定了吗

01:07:49.540 --> 01:07:51.540
所以玩家移动就搞定了

01:07:51.540 --> 01:07:53.540
我们这个模块是写完了

01:07:53.540 --> 01:07:54.540
这个模块甭怪有多少代码

01:07:54.540 --> 01:07:55.540
都算内部代码

01:07:55.540 --> 01:07:56.540
它提供出来的

01:07:56.540 --> 01:07:58.540
暴露出来的就只有这个方法

01:07:58.540 --> 01:08:00.540
所以完了

01:08:00.540 --> 01:08:02.540
没问题吧

01:08:02.540 --> 01:08:03.540
ok

01:08:03.540 --> 01:08:04.540
那么这里呢

01:08:04.540 --> 01:08:05.540
我们甚至呢可以把这个地方呢

01:08:05.540 --> 01:08:06.540
写成一个

01:08:06.540 --> 01:08:07.540
导入一个默认字

01:08:07.540 --> 01:08:08.540
导出一个默认字

01:08:08.540 --> 01:08:09.540
无所谓

01:08:09.540 --> 01:08:10.540
看你自己

01:08:10.540 --> 01:08:11.540
好了

01:08:11.540 --> 01:08:12.540
那接下来

01:08:12.540 --> 01:08:13.540
我们是不是要注册时间了

01:08:13.540 --> 01:08:14.540
对吧

01:08:14.540 --> 01:08:15.540
注册时间

01:08:15.540 --> 01:08:16.540
就是完成整个游戏了

01:08:16.540 --> 01:08:17.540
注册一些时间

01:08:17.540 --> 01:08:18.540
来完成整个游戏

01:08:18.540 --> 01:08:19.540
来吧

01:08:19.540 --> 01:08:20.540
我们又建个模块

01:08:20.540 --> 01:08:21.540
倒是event

01:08:22.540 --> 01:08:23.540
event

01:08:23.540 --> 01:08:24.540
或者是game

01:08:25.540 --> 01:08:27.540
或者是我们在入口文件里面

01:08:27.540 --> 01:08:28.540
就把它当成game了

01:08:28.540 --> 01:08:29.540
都可以

01:08:29.540 --> 01:08:30.540
无所谓

01:08:30.540 --> 01:08:31.540
我们其实呢

01:08:31.540 --> 01:08:32.540
是这样子

01:08:32.540 --> 01:08:33.540
入口文件呢

01:08:33.540 --> 01:08:34.540
一般呢

01:08:34.540 --> 01:08:35.540
啥事不做

01:08:35.540 --> 01:08:36.540
就导入一个模块

01:08:36.540 --> 01:08:37.540
就完成了

01:08:37.540 --> 01:08:38.540
我们game里面

01:08:38.540 --> 01:08:39.540
就完成剩下的事情

01:08:39.540 --> 01:08:40.540
完成

01:08:42.540 --> 01:08:43.540
整个游戏

01:08:44.540 --> 01:08:45.540
一般入口文件

01:08:45.540 --> 01:08:47.540
它就负责组织模块的

01:08:47.540 --> 01:08:49.540
它主要来负责组织各种模块

01:08:49.540 --> 01:08:50.540
就是我们比方说

01:08:50.540 --> 01:08:51.540
有一些

01:08:51.540 --> 01:08:52.540
什么

01:08:52.540 --> 01:08:53.540
访问记录

01:08:53.540 --> 01:08:54.540
还有一些

01:08:55.540 --> 01:08:56.540
记录用户的习惯

01:08:56.540 --> 01:08:57.540
之类的

01:08:57.540 --> 01:08:59.540
它主要用来组织模块的

01:08:59.540 --> 01:09:00.540
它其实啥事不做

01:09:00.540 --> 01:09:01.540
比方说我们这个

01:09:01.540 --> 01:09:02.540
只是一个游戏

01:09:02.540 --> 01:09:03.540
只需要用到游戏模块

01:09:03.540 --> 01:09:05.540
游戏模块来整合其他模块

01:09:05.540 --> 01:09:06.540
那么我们这一个模块

01:09:06.540 --> 01:09:07.540
入口文件里面

01:09:07.540 --> 01:09:09.540
只需要导入游戏模块就行了

01:09:10.540 --> 01:09:11.540
game

01:09:11.540 --> 01:09:12.540
这些事

01:09:12.540 --> 01:09:13.540
它其实

01:09:13.540 --> 01:09:14.540
游戏模块也不会导出

01:09:14.540 --> 01:09:15.540
不导出什么东西

01:09:15.540 --> 01:09:16.540
它就是组成一些事件

01:09:16.540 --> 01:09:17.540
完成整个游戏

01:09:17.540 --> 01:09:18.540
完成了

01:09:18.540 --> 01:09:19.540
那组织什么事件呢

01:09:19.540 --> 01:09:20.540
无非就是

01:09:20.540 --> 01:09:21.540
Windows

01:09:21.540 --> 01:09:22.540
NK

01:09:23.540 --> 01:09:24.540
NK

01:09:25.540 --> 01:09:27.540
键盘按一下的事件

01:09:27.540 --> 01:09:28.540
我们来输出一下

01:09:29.540 --> 01:09:30.540
1.key

01:09:31.540 --> 01:09:32.540
那么你看一下

01:09:33.540 --> 01:09:34.540
上下

01:09:35.540 --> 01:09:36.540
是不是可以记录了

01:09:36.540 --> 01:09:37.540
对吧

01:09:37.540 --> 01:09:38.540
那么我们判断一下

01:09:39.540 --> 01:09:40.540
判断一下

01:09:41.540 --> 01:09:42.540
如果

01:09:42.540 --> 01:09:43.540
1.key

01:09:44.540 --> 01:09:45.540
等于了什么

01:09:45.540 --> 01:09:46.540
arrow up

01:09:48.540 --> 01:09:49.540
等于arrow up

01:09:49.540 --> 01:09:50.540
是不是往上移动

01:09:50.540 --> 01:09:51.540
对吧

01:09:51.540 --> 01:09:52.540
我们是不是要调用

01:09:52.540 --> 01:09:54.540
刚才我们的模块里面的方法

01:09:54.540 --> 01:09:55.540
import

01:09:56.540 --> 01:09:57.540
from

01:09:58.540 --> 01:09:59.540
play

01:09:59.540 --> 01:10:00.540
点解释

01:10:02.540 --> 01:10:03.540
这里有个playermove

01:10:03.540 --> 01:10:04.540
对吧

01:10:04.540 --> 01:10:05.540
有个方法

01:10:05.540 --> 01:10:06.540
那么我们就调用什么

01:10:06.540 --> 01:10:07.540
playermove up

01:10:07.540 --> 01:10:08.540
对吧

01:10:08.540 --> 01:10:09.540
往上移动

01:10:09.540 --> 01:10:10.540
如果说移动成功了

01:10:10.540 --> 01:10:11.540
当然我们要记录一下

01:10:11.540 --> 01:10:12.540
移动的结果

01:10:12.540 --> 01:10:13.540
移动的结果

01:10:13.540 --> 01:10:14.540
就是result

01:10:14.540 --> 01:10:15.540
等于force

01:10:16.540 --> 01:10:17.540
那么这里

01:10:18.540 --> 01:10:19.540
记录一下

01:10:19.540 --> 01:10:20.540
把移动的结果记录一下

01:10:21.540 --> 01:10:22.540
ok

01:10:22.540 --> 01:10:23.540
那么如果说你往上

01:10:23.540 --> 01:10:24.540
那么我就往上移动

01:10:25.540 --> 01:10:26.540
else

01:10:27.540 --> 01:10:28.540
else if

01:10:28.540 --> 01:10:30.540
如果说你按的键

01:10:30.540 --> 01:10:31.540
是arrow

01:10:32.540 --> 01:10:33.540
down

01:10:33.540 --> 01:10:34.540
这个就是

01:10:34.540 --> 01:10:35.540
判断就完成了

01:10:36.540 --> 01:10:37.540
等于playermove

01:10:37.540 --> 01:10:38.540
down

01:10:39.540 --> 01:10:40.540
直接复制吧

01:10:41.540 --> 01:10:42.540
一个 两个 三个

01:10:43.540 --> 01:10:44.540
如果说

01:10:44.540 --> 01:10:45.540
arrow

01:10:45.540 --> 01:10:46.540
left

01:10:48.540 --> 01:10:49.540
arrow

01:10:49.540 --> 01:10:50.540
right

01:10:50.540 --> 01:10:51.540
那么就是

01:10:51.540 --> 01:10:52.540
left

01:10:52.540 --> 01:10:53.540
这就是right

01:10:53.540 --> 01:10:54.540
往左移动

01:10:54.540 --> 01:10:55.540
往右移动

01:10:55.540 --> 01:10:56.540
那么最后

01:10:56.540 --> 01:10:57.540
不管你是怎么移动的

01:10:57.540 --> 01:10:58.540
最后我来判断一下

01:10:58.540 --> 01:11:00.540
如果说你移动成功了

01:11:00.540 --> 01:11:01.540
移动成功了干嘛

01:11:01.540 --> 01:11:02.540
我重新显示

01:11:02.540 --> 01:11:03.540
秀UI

01:11:03.540 --> 01:11:04.540
那么这里

01:11:04.540 --> 01:11:05.540
是不是要用到另外一个模块

01:11:06.540 --> 01:11:07.540
import

01:11:07.540 --> 01:11:08.540
导入

01:11:08.540 --> 01:11:10.540
导入UI里面的

01:11:10.540 --> 01:11:11.540
秀UI

01:11:11.540 --> 01:11:12.540
from

01:11:13.540 --> 01:11:14.540
UI.js

01:11:14.540 --> 01:11:15.540
一开始

01:11:15.540 --> 01:11:16.540
我们渲染一次

01:11:16.540 --> 01:11:18.540
一开始我们显示一次

01:11:18.540 --> 01:11:20.540
你按了键过后移动成功了

01:11:20.540 --> 01:11:21.540
我就又重新显示一次

01:11:21.540 --> 01:11:22.540
没有移动成功

01:11:22.540 --> 01:11:23.540
我就不用显示了

01:11:23.540 --> 01:11:24.540
好 来看一下吧

01:11:25.540 --> 01:11:26.540
按其他键没反应

01:11:26.540 --> 01:11:27.540
因为我们判断了

01:11:27.540 --> 01:11:28.540
往右边

01:11:28.540 --> 01:11:29.540
下

01:11:29.540 --> 01:11:30.540
这边可以移动

01:11:30.540 --> 01:11:31.540
这边移动

01:11:32.540 --> 01:11:33.540
这边

01:11:33.540 --> 01:11:34.540
这边

01:11:34.540 --> 01:11:35.540
可以移动了

01:11:35.540 --> 01:11:36.540
移动了

01:11:36.540 --> 01:11:38.540
我怎么把它变成地域模式了

01:11:38.540 --> 01:11:40.540
这个我是过不了关的

01:11:40.540 --> 01:11:41.540
这个模式

01:11:41.540 --> 01:11:42.540
我是过不了关的

01:11:42.540 --> 01:11:43.540
我重新把地图改一下

01:11:43.540 --> 01:11:45.540
你看现在改模块非常简单

01:11:45.540 --> 01:11:46.540
我们找到这个地图

01:11:46.540 --> 01:11:47.540
因为直改地图

01:11:47.540 --> 01:11:48.540
地图改一下

01:11:48.540 --> 01:11:51.540
把这个地方的墙往后移一点

01:11:51.540 --> 01:11:53.540
这个地方删掉

01:11:53.540 --> 01:11:55.920
我看一下

01:11:55.920 --> 01:11:57.920
这个地方要命了

01:11:58.920 --> 01:12:00.920
这个地方删掉

01:12:00.920 --> 01:12:02.920
把墙移动到这来

01:12:02.920 --> 01:12:04.920
这个地方改成0

01:12:05.920 --> 01:12:07.920
这个地方是墙

01:12:07.920 --> 01:12:10.920
然后这个墙往右边推一点

01:12:11.920 --> 01:12:13.920
不然我真的玩不过去

01:12:13.920 --> 01:12:14.920
这边是2

01:12:14.920 --> 01:12:15.920
这边是0

01:12:15.920 --> 01:12:17.920
这样子改成简单一点

01:12:17.920 --> 01:12:18.920
这样子就简单了

01:12:18.920 --> 01:12:20.920
怎么少了一块墙

01:12:21.920 --> 01:12:23.920
这里是

01:12:24.920 --> 01:12:26.920
这里还有一个墙

01:12:26.920 --> 01:12:27.920
好 来吧

01:12:29.920 --> 01:12:30.920
你看

01:12:30.920 --> 01:12:31.920
多好

01:12:32.920 --> 01:12:34.920
我玩家怎么跑出来了

01:12:34.920 --> 01:12:35.920
玩家在这

01:12:35.920 --> 01:12:36.920
这里是3

01:12:36.920 --> 01:12:37.920
这里是0

01:12:38.920 --> 01:12:39.920
以后要改对头

01:12:39.920 --> 01:12:40.920
你自己随便去改

01:12:41.920 --> 01:12:43.920
最后就是胜负判断了

01:12:43.920 --> 01:12:44.920
胜负判断了

01:12:47.420 --> 01:12:48.420
胜负判断了

01:12:49.420 --> 01:12:50.420
胜负判断了

01:12:50.420 --> 01:12:51.420
我们最好了就写了

01:12:51.420 --> 01:12:52.420
找一个模块写

01:12:52.420 --> 01:12:54.420
你觉得应该写到哪个模块

01:12:55.420 --> 01:12:56.420
没有什么正确与不正确

01:12:56.420 --> 01:12:58.420
只有好与不好

01:12:58.420 --> 01:12:59.420
哪个模块呢

01:12:59.420 --> 01:13:01.420
我觉得写到这个模块好一点

01:13:01.420 --> 01:13:03.420
这个模块是跟玩游戏相关的

01:13:03.420 --> 01:13:05.420
玩游戏相关的信息

01:13:05.420 --> 01:13:06.420
那么因为

01:13:06.420 --> 01:13:07.420
GAME这个模块

01:13:07.420 --> 01:13:09.420
它只是跟Windows 4GN相关的

01:13:09.420 --> 01:13:11.420
那么这个模块里边写得比较好

01:13:11.420 --> 01:13:13.420
这个是玩游戏的核心逻辑

01:13:13.420 --> 01:13:15.420
那么这里能再导出一个函数

01:13:15.420 --> 01:13:16.420
表示Eswin

01:13:16.420 --> 01:13:18.420
释放游戏胜利

01:13:19.420 --> 01:13:22.420
根据当前地图内容

01:13:23.420 --> 01:13:25.420
判断是否游戏胜利

01:13:25.420 --> 01:13:27.420
是否游戏胜利

01:13:27.420 --> 01:13:29.420
那么是否游戏胜利就表示什么呢

01:13:29.420 --> 01:13:31.420
表示的是

01:13:31.420 --> 01:13:33.420
所有的箱子

01:13:33.420 --> 01:13:36.420
都必须要在正确位置上

01:13:36.420 --> 01:13:38.420
换句话说

01:13:38.420 --> 01:13:41.420
正确位置上都应该有箱子

01:13:41.420 --> 01:13:42.420
是不是这个意思

01:13:42.420 --> 01:13:44.420
正确位置上都应该有箱子

01:13:44.420 --> 01:13:46.420
就表示游戏胜利了

01:13:46.420 --> 01:13:47.420
那么怎么办呢

01:13:47.420 --> 01:13:49.420
我就循环正确位置

01:13:49.420 --> 01:13:51.420
你不是有地图里边有一个东西

01:13:51.420 --> 01:13:52.420
是正确位置吗

01:13:52.420 --> 01:13:54.420
还小于什么

01:13:54.420 --> 01:13:56.420
Map Correct

01:13:56.420 --> 01:13:59.800
正确位置不是个数组吗

01:13:59.800 --> 01:14:00.800
正确位置

01:14:00.800 --> 01:14:01.800
你看Map里边

01:14:01.800 --> 01:14:03.800
正确位置是一个数组

01:14:03.800 --> 01:14:04.800
我就循环这个数组

01:14:04.800 --> 01:14:06.800
看是不是每一个正确位置上都有箱子

01:14:06.800 --> 01:14:14.170
是否每个正确位置都有箱子

01:14:16.170 --> 01:14:17.170
判断

01:14:17.170 --> 01:14:18.170
如果我发现了

01:14:18.170 --> 01:14:20.170
其中一个正确位置

01:14:20.170 --> 01:14:22.170
我们这里得到一个坐标

01:14:22.170 --> 01:14:27.170
坐标等于Map Correct

01:14:27.170 --> 01:14:28.170
坐标

01:14:28.170 --> 01:14:29.170
如果我发现

01:14:29.170 --> 01:14:32.170
其中一个正确位置上没有箱子

01:14:32.170 --> 01:14:33.170
那么你肯定不是

01:14:33.170 --> 01:14:34.170
肯定没有结束

01:14:34.170 --> 01:14:35.170
游戏肯定没有生意

01:14:35.170 --> 01:14:37.170
那么这里判断一下

01:14:37.170 --> 01:14:40.170
如果说我发现地图上

01:14:40.170 --> 01:14:41.170
地图上

01:14:41.170 --> 01:14:44.740
这个位置

01:14:44.740 --> 01:14:45.740
对吧

01:14:45.740 --> 01:14:46.740
这是正确位置吗

01:14:46.740 --> 01:14:47.740
在这个位置上

01:14:47.740 --> 01:14:48.740
地图上在这个位置上

01:14:48.740 --> 01:14:51.740
如果说发他没有箱子

01:14:51.740 --> 01:14:56.740
不等于Map.Box

01:14:56.740 --> 01:15:00.740
该正确位置上

01:15:00.740 --> 01:15:01.740
没有箱子

01:15:01.740 --> 01:15:02.740
没有箱子说明什么

01:15:02.740 --> 01:15:03.740
游戏有没有生理

01:15:03.740 --> 01:15:05.740
是没有生理

01:15:05.740 --> 01:15:06.740
如果判断完了过后

01:15:06.740 --> 01:15:07.740
都没有发现

01:15:07.740 --> 01:15:08.740
没有箱子

01:15:08.740 --> 01:15:09.740
那么自然游戏生理了

01:15:09.740 --> 01:15:11.740
非常出

01:15:11.740 --> 01:15:12.740
就还出去写完了

01:15:12.740 --> 01:15:14.740
那么这边游戏

01:15:14.740 --> 01:15:15.740
游戏这边来

01:15:15.740 --> 01:15:17.740
我们是不是再导入一个

01:15:17.740 --> 01:15:19.740
Ease Win

01:15:19.740 --> 01:15:22.440
Ease Win

01:15:22.440 --> 01:15:23.440
好

01:15:23.440 --> 01:15:24.440
每一次按键

01:15:24.440 --> 01:15:25.440
我们这里可以写个辩量

01:15:25.440 --> 01:15:26.440
可以写个辩量

01:15:26.440 --> 01:15:29.440
Ease Over

01:15:29.440 --> 01:15:31.440
是否是游戏结束

01:15:31.440 --> 01:15:32.440
我们在这里写个辩量

01:15:32.440 --> 01:15:34.440
判断一下

01:15:34.440 --> 01:15:36.440
Force If Over

01:15:36.440 --> 01:15:37.440
如果说已经结束了

01:15:37.440 --> 01:15:38.440
就什么

01:15:38.440 --> 01:15:40.440
按键的时候就什么都不要做了

01:15:40.440 --> 01:15:41.440
如果说

01:15:41.440 --> 01:15:42.440
因为这里就随便写

01:15:42.440 --> 01:15:44.440
不用怕武弹拳举

01:15:44.440 --> 01:15:46.440
因为这是这个模块里边的东西

01:15:46.440 --> 01:15:47.440
如果说游戏结束了

01:15:47.440 --> 01:15:49.440
就什么都不做了

01:15:49.440 --> 01:15:50.440
如果说游戏没有结束

01:15:50.440 --> 01:15:52.440
每一次移动成功过后

01:15:52.440 --> 01:15:53.440
显示了见面过后

01:15:53.440 --> 01:15:55.440
我还要判断游戏有没有结束

01:15:55.440 --> 01:15:58.440
如果Ease Win

01:15:58.440 --> 01:16:00.440
你看上面导入了这个函数的

01:16:00.440 --> 01:16:02.440
直接用就行了

01:16:02.440 --> 01:16:04.440
如果说游戏结束了

01:16:04.440 --> 01:16:08.440
我们输出游戏胜利

01:16:08.440 --> 01:16:09.440
游戏胜利

01:16:09.440 --> 01:16:10.440
我们把这个辩量

01:16:10.440 --> 01:16:13.440
Over改成去

01:16:13.440 --> 01:16:14.440
把这个辩量改成去

01:16:14.440 --> 01:16:15.440
那么下一次按键的时候

01:16:15.440 --> 01:16:17.440
它就不会有任何反应了

01:16:17.440 --> 01:16:18.440
来吧

01:16:18.440 --> 01:16:20.440
我们来试一下

01:16:20.440 --> 01:16:27.230
OK

01:16:27.230 --> 01:16:28.230
游戏上的

01:16:28.230 --> 01:16:30.230
你看在按键没反应

01:16:30.230 --> 01:16:34.230
这个效果可以有很多那种做法

01:16:34.230 --> 01:16:36.230
只不过模块画的做法

01:16:36.230 --> 01:16:37.230
可以大家体验一下

01:16:37.230 --> 01:16:39.230
通过那种模块画的做法

01:16:39.230 --> 01:16:40.230
你会发现

01:16:40.230 --> 01:16:42.230
至少整个工程的管理

01:16:42.230 --> 01:16:44.230
它的结构上变得非常清晰了

01:16:44.230 --> 01:16:45.230
每个模块管

01:16:45.230 --> 01:16:47.230
每个模块自己的事情

01:16:47.230 --> 01:16:48.230
每个模块可能要产生

01:16:48.230 --> 01:16:50.230
很多的辅助代码

01:16:50.230 --> 01:16:52.230
那么那些代码对其他模块而言

01:16:52.230 --> 01:16:53.230
毫无意义

01:16:53.230 --> 01:16:55.230
它只关心你导出的东西

01:16:55.230 --> 01:16:56.230
比方说对这个模块而言

01:16:56.230 --> 01:16:58.230
我觉得好神奇

01:16:58.230 --> 01:16:59.230
模块给我导出了一个方法

01:16:59.230 --> 01:17:00.230
它就可以移动了

01:17:00.230 --> 01:17:01.230
我管它怎么实现的

01:17:01.230 --> 01:17:02.230
它这个给我导出的方法

01:17:02.230 --> 01:17:04.230
我就可以判断是否是胜利

01:17:04.230 --> 01:17:06.230
这里导出一个函数

01:17:06.230 --> 01:17:07.230
我就可以显示一个界面

01:17:07.230 --> 01:17:08.230
我甭管它是怎么执行的

01:17:08.230 --> 01:17:09.230
我甚至这个模块

01:17:09.230 --> 01:17:10.230
我都不知道

01:17:10.230 --> 01:17:11.230
有map这个模块的存在

01:17:11.230 --> 01:17:12.230
我都不知道

01:17:12.230 --> 01:17:13.230
无所谓

01:17:13.230 --> 01:17:15.230
我就可以完成我这个模块了

01:17:15.230 --> 01:17:16.230
每一个模块之间

01:17:16.230 --> 01:17:17.230
相互作用

01:17:17.230 --> 01:17:18.230
相互关联

01:17:18.230 --> 01:17:19.230
相互影响

01:17:19.230 --> 01:17:21.230
那么完成整个功能

01:17:21.230 --> 01:17:23.230
这就是模块画

01:17:23.230 --> 01:17:24.230
而且每个关键

01:17:24.230 --> 01:17:25.230
是最舒服的是什么

01:17:25.230 --> 01:17:26.230
就是每一个模块

01:17:26.230 --> 01:17:27.230
它内部的实现了

01:17:27.230 --> 01:17:29.230
它不会对外面造成任何影响

01:17:29.230 --> 01:17:31.230
就这边我就写一千个函数

01:17:31.230 --> 01:17:33.230
都不会给外面造成任何影响

01:17:33.230 --> 01:17:34.230
我们只需要用它

01:17:34.230 --> 01:17:36.230
导出的那一部分就行了

01:17:36.230 --> 01:17:37.230
好

01:17:37.230 --> 01:17:39.230
就是这个练习

01:17:39.230 --> 01:17:40.230
这个练习说难不难

01:17:40.230 --> 01:17:42.230
说得简单也不简单

01:17:42.230 --> 01:17:43.230
不过通过这个练习

01:17:43.230 --> 01:17:45.230
因为我不能做太简单的例子

01:17:45.230 --> 01:17:46.230
太简单的例子

01:17:46.230 --> 01:17:47.230
你体会不到这个模块画

01:17:47.230 --> 01:17:48.230
它那种感觉

01:17:48.230 --> 01:17:50.230
稍微有一点点

01:17:50.230 --> 01:17:51.230
功能的例子

01:17:51.230 --> 01:17:52.230
大家可以先来去做一下

01:17:52.230 --> 01:17:53.230
通过模块画

01:17:53.230 --> 01:17:54.230
去体会一下

01:17:54.230 --> 01:17:55.230
OK

01:17:55.230 --> 01:17:56.230
那么咱们这门客

01:17:56.230 --> 01:17:57.230
到此结束了

01:17:57.230 --> 01:17:59.230
我们下一门客再见

