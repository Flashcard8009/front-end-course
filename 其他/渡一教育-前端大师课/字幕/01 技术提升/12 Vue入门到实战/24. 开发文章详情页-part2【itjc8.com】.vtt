WEBVTT

00:00.000 --> 00:01.000
来啊

00:01.600 --> 00:03.400
天气好冷啊

00:04.680 --> 00:07.880
这节课咱们就继续来

00:07.880 --> 00:10.280
进入这个文章详情页

00:10.280 --> 00:11.840
到文章详情页里面就可以发

00:12.160 --> 00:14.680
这个页面还没有那么简单

00:14.680 --> 00:17.120
需要花我们一点点精力和时间

00:17.120 --> 00:19.920
而且这个页面里面还会有些新知识

00:20.200 --> 00:21.960
一节课肯定讲不完

00:21.960 --> 00:23.480
分成好几个节课来讲

00:23.480 --> 00:25.040
不要小瞧这个页面啊

00:25.040 --> 00:27.560
这个页面其实整体来说还是蛮简单的

00:27.600 --> 00:29.960
就是把文章的数据拿出来

00:29.960 --> 00:31.200
展示出来就完事了

00:31.200 --> 00:31.600
对吧

00:31.600 --> 00:33.040
但是里边细节很多

00:33.040 --> 00:33.480
好

00:33.480 --> 00:34.240
来说吧

00:34.840 --> 00:37.000
首先可能有些同学有疑问

00:37.520 --> 00:39.560
就是我们的文章数据

00:39.760 --> 00:42.000
到底是怎么来的呢

00:42.160 --> 00:45.040
因为上节课不是模拟的一个数据吗

00:45.160 --> 00:46.160
回顾一下啊

00:46.680 --> 00:47.600
博客这里

00:48.000 --> 00:51.040
博客这里有一个文章详情

00:51.640 --> 00:52.920
在哪里呢

00:52.920 --> 00:53.680
在

00:53.920 --> 00:55.240
这边是评论的

00:55.240 --> 00:55.880
在这

00:56.840 --> 00:58.080
文章详情

00:58.080 --> 00:59.520
其他的没啥问题

00:59.520 --> 00:59.720
对吧

00:59.720 --> 01:01.440
其他的都是后台上传的数据

01:01.440 --> 01:02.600
关键是这个

01:03.240 --> 01:04.960
这个目录是怎么出来的

01:05.080 --> 01:05.360
对吧

01:05.360 --> 01:06.240
它是一个数组

01:06.440 --> 01:07.240
怎么来的

01:07.720 --> 01:08.960
然后呢

01:08.960 --> 01:11.120
有这么一个东西叫atema content

01:11.320 --> 01:12.760
就是我们的内容

01:12.760 --> 01:13.400
博客内容

01:13.400 --> 01:15.360
他为什么是代标签的呢

01:15.480 --> 01:15.760
对吧

01:15.760 --> 01:16.680
带了各种元素

01:16.680 --> 01:17.800
还有一些class样式

01:17.800 --> 01:19.120
那样式又哪来的

01:19.240 --> 01:19.880
对不对

01:19.880 --> 01:21.960
这么一些小的问题

01:21.960 --> 01:23.600
那么只能得给大家说一下

01:23.680 --> 01:24.480
因为这些问题

01:24.600 --> 01:26.800
其实你要把整个网站全部开发完

01:26.800 --> 01:27.680
那过后

01:27.880 --> 01:28.960
一才非常清楚

01:28.960 --> 01:30.200
那现在没有开发完

01:30.200 --> 01:30.360
对吧

01:30.360 --> 01:31.800
我们只是来

01:31.960 --> 01:33.960
做这个网站的前台页面

01:33.960 --> 01:35.360
就是给用户看的页面

01:35.640 --> 01:36.560
后台的管理页面

01:36.560 --> 01:37.640
我们都还没有动

01:38.240 --> 01:39.400
其实这个东西呢

01:39.400 --> 01:40.320
这个文章数据

01:40.320 --> 01:41.560
跟后台管理页面

01:41.560 --> 01:42.880
有很大的关系

01:42.880 --> 01:43.680
我把这个图呢

01:43.680 --> 01:44.680
这个可能看不清楚

01:45.680 --> 01:46.960
给大家放出来看一下

01:47.480 --> 01:48.320
就这么一个图

01:49.120 --> 01:50.480
你看是这么一个逻辑

01:51.240 --> 01:52.680
我们作为管理员

01:52.680 --> 01:54.560
将来会有一个后台页面

01:54.560 --> 01:56.600
只不过我们现在还没有开发

01:57.160 --> 01:58.120
这个后台页面

01:58.120 --> 01:59.080
它就其中有一个页面

01:59.080 --> 02:00.160
就是添加文章

02:00.160 --> 02:01.680
或者是编辑文章

02:02.200 --> 02:03.480
这个编辑文章的时候

02:03.480 --> 02:05.200
到时候就会有一个框框

02:05.200 --> 02:06.040
让我们写什么呢

02:06.040 --> 02:06.680
写markdown

02:08.280 --> 02:08.920
写markdown

02:08.920 --> 02:09.760
这么一种

02:09.760 --> 02:10.760
markdown都会写吧

02:10.760 --> 02:11.880
就这么一个格式

02:12.280 --> 02:13.640
写好markdown过后

02:13.640 --> 02:14.520
这个后台页面

02:14.520 --> 02:15.680
它有一部分功能

02:15.680 --> 02:17.240
这功能我们以后要做的

02:17.240 --> 02:19.760
就是把这个markdown转换成atmeal

02:20.280 --> 02:21.120
转换成这个东西

02:21.120 --> 02:22.200
有一些第三方库

02:22.280 --> 02:24.040
可以完成这样的事情

02:24.720 --> 02:25.760
而且有一些地方

02:25.760 --> 02:27.760
它会自动带以前的一样式

02:28.360 --> 02:29.480
转换成这种格式

02:29.480 --> 02:31.320
并且我们要自己写代码

02:32.200 --> 02:33.720
把它的目录提取出来

02:33.960 --> 02:35.640
形成一个toc数组

02:36.400 --> 02:37.000
明儿意思吧

02:37.000 --> 02:38.200
这是我们要自己要做的

02:38.480 --> 02:39.640
是不是有两部分数据

02:39.640 --> 02:40.760
一个是atmeal

02:40.760 --> 02:41.920
一个是markdown

02:41.920 --> 02:43.400
一个是toc一个数组

02:43.400 --> 02:44.680
那么把这三个数据

02:44.680 --> 02:46.280
一起提交给服务器

02:46.520 --> 02:47.840
服务器那边只负责

02:47.840 --> 02:48.760
把它记录下来

02:49.640 --> 02:50.440
好之后

02:50.440 --> 02:52.000
前台页面去访问的时候

02:52.160 --> 02:53.280
我要拿一篇文章

02:53.280 --> 02:55.280
它就把之前记录的文章的

02:55.280 --> 02:57.920
什么atmeal和toc这个数组

02:57.920 --> 02:59.000
以及它的atmeal

02:59.000 --> 03:00.400
atmeal就是这一部分

03:00.400 --> 03:01.920
是之前服务器记录的

03:02.280 --> 03:03.440
是后台上传的

03:03.440 --> 03:04.800
然后包括toc的这个数组

03:04.800 --> 03:06.080
就是我们目睹的数组

03:06.080 --> 03:06.960
扔给前台页面

03:06.960 --> 03:08.960
就是我们刚刚模拟的数据

03:08.960 --> 03:10.920
将来是从服务器获取的

03:11.320 --> 03:12.360
那么这个前台页面

03:12.360 --> 03:14.520
只负责把这东西显示出来就完事了

03:15.720 --> 03:16.920
就是这么一个过程

03:17.200 --> 03:18.000
明儿的意思吧

03:18.000 --> 03:19.640
所以说我们把这个逻辑

03:19.640 --> 03:20.800
你清楚一下

03:20.920 --> 03:23.760
避免有些同学可能提前有这些疑惑

03:23.760 --> 03:26.160
有一些同学心里边有一种完美主义

03:26.160 --> 03:27.160
跟我差不多

03:27.160 --> 03:28.600
有一点点疑惑就受不了

03:28.600 --> 03:29.520
今天教授睡不着

03:29.520 --> 03:30.840
所以说给大家说一下

03:31.840 --> 03:32.560
好那么接下来就是

03:32.560 --> 03:34.360
我们这个页面的组建逻辑了

03:34.360 --> 03:35.880
组建逻辑有三个组建

03:35.880 --> 03:36.400
这三个组建

03:36.400 --> 03:37.840
我们这一刻做不完

03:37.840 --> 03:38.960
只能做两个

03:40.160 --> 03:40.760
后边一个组建

03:40.760 --> 03:42.640
我们还要专单的来课程来说

03:42.640 --> 03:43.520
一个都来吧

03:43.520 --> 03:45.200
首先组建逻辑

03:45.200 --> 03:47.360
整个页面就是有这么一个地址

03:47.360 --> 03:48.480
我们访问这个地址

03:48.480 --> 03:49.840
我们是不是这个地址

03:49.840 --> 03:50.560
好像不是

03:51.000 --> 03:52.240
我们直接给id的

03:52.240 --> 03:53.200
那无所谓吧

03:53.200 --> 03:53.960
无论是什么地址

03:53.960 --> 03:55.520
它里边总归有id

03:56.160 --> 03:57.520
这个id是不是文章id

03:57.520 --> 03:59.000
那么我们要做的事情就是

03:59.000 --> 03:59.800
到了哪个组建

03:59.800 --> 04:01.080
到detail这个组建

04:01.080 --> 04:02.000
看呗到这

04:03.800 --> 04:04.640
到这个组建了

04:05.600 --> 04:07.160
这个组建是不是能够获取

04:07.160 --> 04:08.200
路由里边的信息

04:08.200 --> 04:09.280
这个id是不是能获取

04:10.880 --> 04:11.240
对不对

04:11.240 --> 04:11.760
怎么获取

04:12.520 --> 04:12.920
怎么获取

04:12.920 --> 04:13.360
讲过了

04:14.720 --> 04:15.200
是不是这样

04:16.960 --> 04:18.240
id是不是

04:18.400 --> 04:19.200
这个road

04:20.040 --> 04:20.680
harrows

04:20.680 --> 04:23.160
后边跟那个动态的路由的名字

04:23.160 --> 04:24.880
这个名字里取的是啥就是啥

04:24.880 --> 04:25.480
取决于啥

04:25.480 --> 04:26.080
取决于这边

04:27.080 --> 04:28.160
罗里巴说给大家说

04:28.160 --> 04:29.520
就希望大家搞清楚

04:30.680 --> 04:31.440
就这个地方

04:31.440 --> 04:32.280
你取的是id

04:32.280 --> 04:33.080
那么这里就是id

04:34.040 --> 04:34.880
非常简单

04:34.880 --> 04:36.360
你看看这边就不就出来了吗

04:36.360 --> 04:36.640
id

04:37.440 --> 04:37.720
对不对

04:37.720 --> 04:39.280
就是这个东西

04:39.280 --> 04:40.640
就把这个东西取出来

04:40.640 --> 04:44.280
取出来过后来远程来获取文章对象

04:44.280 --> 04:45.360
所以我阿迪克斯琴球

04:45.360 --> 04:45.600
对吧

04:45.600 --> 04:47.400
这个接口有一些好了

04:47.440 --> 04:48.880
文章对象拿到过后

04:48.880 --> 04:52.160
把这个对象作为属性传递给两个纸组件

04:52.160 --> 04:53.200
一个是block detail

04:53.200 --> 04:54.600
还没有写的组件

04:54.600 --> 04:56.160
这个组件就是根据一个文章对象

04:56.160 --> 04:57.960
显示文章的主题信息

04:57.960 --> 04:59.000
主题信息什么意思呢

04:59.000 --> 04:59.720
就是这个东西

04:59.720 --> 05:01.040
应该是主题信息

05:01.040 --> 05:01.840
写错了

05:01.840 --> 05:02.800
文章标题

05:02.800 --> 05:03.840
文章日期

05:03.840 --> 05:05.200
还有文章的证文

05:05.200 --> 05:06.040
就这么一部分

05:06.040 --> 05:07.400
有这个组件

05:07.400 --> 05:08.640
然后另外一个组件

05:08.640 --> 05:10.160
也要使用文章对象

05:10.160 --> 05:11.440
因为文章对象里边有什么呢

05:11.440 --> 05:12.240
有toc

05:12.240 --> 05:12.520
对吧

05:12.520 --> 05:13.440
是不是有目录

05:13.440 --> 05:16.160
目录是要全传递给这个组件

05:16.160 --> 05:16.520
对吧

05:16.560 --> 05:18.080
这边我们要使用这个目录

05:19.080 --> 05:19.560
好

05:19.560 --> 05:19.960
你看

05:19.960 --> 05:20.760
这个是一个组件

05:20.760 --> 05:22.000
这边是一个组件

05:22.000 --> 05:23.720
分别都要有一个属性

05:23.720 --> 05:26.240
要获取文章对象里边的关键信息

05:26.240 --> 05:27.000
传给它

05:27.000 --> 05:27.920
大家有时候还说了

05:27.920 --> 05:28.480
那为什么不

05:28.480 --> 05:29.360
这个文章对象

05:29.360 --> 05:31.840
不在这两个组件里边去获取呢

05:31.840 --> 05:33.000
为什么我要用属性

05:33.000 --> 05:33.960
在这个副组件

05:33.960 --> 05:35.280
detail里面获取文章对象

05:35.280 --> 05:36.240
传递过去

05:36.240 --> 05:38.440
也不像之前那个文章列表页

05:38.440 --> 05:38.880
对吧

05:38.880 --> 05:40.400
这组件里边去获取数据

05:40.400 --> 05:41.880
它不是路由信息有吗

05:41.880 --> 05:42.600
为什么不呢

05:44.400 --> 05:46.280
因为如果说这样子做的话

05:46.320 --> 05:48.840
你就可以获取两次文章数据

05:48.840 --> 05:50.880
所以多了一次阿迦克斯请求

05:50.880 --> 05:52.000
因为你在这个组件里边

05:52.000 --> 05:53.760
是不是要获取地址栏信息

05:53.760 --> 05:54.800
这个ID获取吧

05:54.800 --> 05:55.560
那ID打到过后

05:55.560 --> 05:58.080
是不是要从服务器拿文章对象

05:58.080 --> 05:59.000
所以可以要拿到

05:59.000 --> 05:59.360
对不对

05:59.360 --> 06:00.880
那么这个地方要获取一次

06:00.880 --> 06:03.000
那这里边说也要获取一次

06:03.000 --> 06:03.280
对吧

06:03.280 --> 06:04.320
要拿ID

06:04.320 --> 06:05.760
要远程获取文章数据

06:05.760 --> 06:07.840
说就重复了

06:07.840 --> 06:09.080
之前列表页没有这个问题

06:09.080 --> 06:10.440
那这里面就会产生这个问题

06:10.440 --> 06:12.120
所以以后开发的时候

06:12.120 --> 06:13.120
不要去背

06:13.120 --> 06:14.040
这些东西不要去背

06:14.040 --> 06:15.040
你说列表页怎么做

06:15.080 --> 06:16.040
我相信这么做

06:16.040 --> 06:17.520
具体情况

06:17.520 --> 06:18.480
具体分析

06:18.480 --> 06:20.360
总会有一种比较好的方式

06:20.360 --> 06:21.360
来解决这个问题

06:21.360 --> 06:22.800
所以说我在副组件里面

06:22.800 --> 06:23.840
获取一次文章对象

06:23.840 --> 06:26.320
作为属性给它传过去就OK了

06:26.320 --> 06:28.040
这两个组件是我们这些可以要做的

06:28.040 --> 06:30.880
然后下边还有个组件叫做博客评论

06:30.880 --> 06:32.000
博客评论在下边

06:33.120 --> 06:34.280
在下边这个组件

06:34.280 --> 06:36.240
这个组件我们需要花点时间来讲

06:36.240 --> 06:37.840
所以说现在这里可能不着急做

06:37.840 --> 06:39.240
就这一部分

06:39.240 --> 06:40.000
要有门光

06:40.000 --> 06:41.040
在这里可以添加评论

06:41.040 --> 06:41.960
对吧

06:41.960 --> 06:44.200
然后这边有一个列表

06:44.200 --> 06:45.200
对不对

06:45.200 --> 06:45.800
那么这个组件

06:45.800 --> 06:48.120
我们需要后边来进行开发

06:48.120 --> 06:49.360
好了

06:49.360 --> 06:51.000
这个组件不用管

06:51.000 --> 06:52.440
我们只看这两个组件

06:53.440 --> 06:54.800
首先让我们搞进detail

06:54.800 --> 06:56.360
detail做什么事呢

06:56.360 --> 06:57.800
是不是刚才说了

06:57.800 --> 06:59.040
要获取文章数据

06:59.040 --> 07:00.280
那又是远程获取数据了

07:00.280 --> 07:02.000
那肯定有加载中的效果呀

07:02.000 --> 07:04.800
那加载中的效果我们是不可以导入进来

07:04.800 --> 07:06.240
导入什么mixing

07:06.240 --> 07:08.960
叫做什么fetch data

07:08.960 --> 07:10.000
哎呦手好僵啊

07:10.000 --> 07:10.920
后来

07:10.920 --> 07:11.520
南方的冬天

07:11.520 --> 07:13.160
你们真的是想象不到的

07:13.320 --> 07:17.640
那个mixing是fetch data

07:17.640 --> 07:19.480
保住进来

07:19.480 --> 07:20.880
然后这边把mixing

07:20.880 --> 07:24.920
我现在好希望我的电脑可以发热了

07:24.920 --> 07:26.880
fetch data

07:26.880 --> 07:29.560
好不要忘了

07:29.560 --> 07:30.400
我之前又忘了

07:30.400 --> 07:30.880
差点忘了

07:30.880 --> 07:31.960
默认值

07:31.960 --> 07:33.160
默认值远程数据呢

07:33.160 --> 07:33.760
就是文章

07:33.760 --> 07:34.760
文章的远程数据

07:34.760 --> 07:37.480
我们看一下模拟数据

07:37.480 --> 07:38.480
不就是个对象吗

07:38.480 --> 07:38.960
对不对

07:38.960 --> 07:40.760
那么我们就是空对象

07:40.760 --> 07:42.080
默认就是一个空对象

07:42.640 --> 07:46.120
或者是默认是now也行

07:46.120 --> 07:46.920
空对象吧

07:46.920 --> 07:47.680
空对象也空对象

07:49.160 --> 07:49.480
好

07:49.480 --> 07:51.040
然后我们后来是now

07:51.040 --> 07:54.280
那表示没有数据

07:54.280 --> 07:54.840
好了

07:54.840 --> 07:56.760
我们要完成的远程获取数据的功能

07:56.760 --> 07:58.480
是不是要message啊

07:58.480 --> 07:59.320
写个方法

07:59.320 --> 07:59.880
什么方法呢

07:59.880 --> 08:02.640
就是一步的fetch data

08:02.640 --> 08:03.560
方法

08:03.560 --> 08:04.200
什么方法

08:04.200 --> 08:05.160
当然那获取方法的时候

08:05.160 --> 08:07.240
我们就需要导入API

08:07.240 --> 08:09.120
这些都是机械性的劳动

08:09.120 --> 08:11.040
没有什么技术含量的

08:11.080 --> 08:13.160
他为什么不提示我了呢

08:13.160 --> 08:14.760
我不是跟目录的吧

08:14.760 --> 08:16.400
这个玩意儿不是跟目录

08:16.400 --> 08:23.140
API那个

08:23.140 --> 08:24.220
搞什么

08:24.220 --> 08:25.180
blog

08:25.180 --> 08:25.460
好了

08:25.460 --> 08:27.100
那里面是不是有个getblog

08:27.100 --> 08:28.500
这么一个方法

08:28.500 --> 08:28.740
好

08:28.740 --> 08:30.900
那这里怎么写呢

08:30.900 --> 08:31.820
fetch data的时候

08:31.820 --> 08:32.900
直接return it

08:32.900 --> 08:34.060
Oh wait

08:34.060 --> 08:34.780
getblog

08:34.780 --> 08:35.860
ID传啥呀

08:35.860 --> 08:39.060
ID不就是传当前页面的road

08:39.060 --> 08:40.620
下边的是myparas

08:40.620 --> 08:41.740
下边的id

08:41.740 --> 08:42.980
看过去

08:42.980 --> 08:43.180
好

08:43.180 --> 08:44.260
那么这样子呢

08:44.300 --> 08:44.940
魔力数据

08:44.940 --> 08:46.220
会得到一个魔力数据

08:46.220 --> 08:46.700
对吧

08:47.940 --> 08:48.180
好

08:48.180 --> 08:49.580
那么先让我们看一下

08:49.580 --> 08:50.940
看一下

08:50.940 --> 08:52.660
咱们的组件数里边

08:52.660 --> 08:54.820
有没有这样的数据啊

08:54.820 --> 08:56.660
nails detail

08:56.660 --> 08:59.560
小心

08:59.560 --> 09:00.560
detail

09:00.560 --> 09:01.200
你看

09:01.200 --> 09:02.680
不就一直no dv force

09:02.680 --> 09:02.920
对吧

09:02.920 --> 09:03.720
加在完成了

09:03.720 --> 09:04.400
然后data

09:04.400 --> 09:05.160
是我们一个数据

09:05.160 --> 09:06.560
这些都是魔力数据了

09:07.840 --> 09:08.560
好了

09:08.560 --> 09:10.480
拿到这个数据之后呢

09:10.480 --> 09:11.640
我们要做的事情呢

09:11.640 --> 09:13.400
就是这个副组件要做的事情

09:13.400 --> 09:14.480
就是分为两栏嘛

09:14.520 --> 09:15.360
左边一个内奥

09:15.360 --> 09:16.480
就一个内奥的组件

09:16.480 --> 09:17.080
左边一栏

09:17.080 --> 09:17.680
右边一栏

09:17.680 --> 09:18.080
对吧

09:18.080 --> 09:19.040
所以说我们把个内奥

09:19.040 --> 09:20.240
再拿来用一下啊

09:20.240 --> 09:21.080
组件的好处的

09:21.080 --> 09:21.840
就再有可以重用

09:23.720 --> 09:25.080
components

09:25.080 --> 09:26.880
你看之前的重终组件写好过

09:26.880 --> 09:28.640
后边我们是没有怎么去增加的

09:28.640 --> 09:29.680
对吧

09:29.680 --> 09:31.440
后边开发就越来越快了

09:31.440 --> 09:32.520
所以说开发还是慢

09:32.520 --> 09:33.520
那还是慢的原因呢

09:33.520 --> 09:35.280
是要这样的想要对比

09:35.280 --> 09:37.480
如果说没有开发这些重复的组件的话

09:37.480 --> 09:38.320
那开发起来更慢

09:39.520 --> 09:39.640
好

09:39.640 --> 09:40.680
把个内奥是倒进来啊

09:40.680 --> 09:40.960
然后呢

09:40.960 --> 09:41.640
注册一下组件

09:41.640 --> 09:43.400
components

09:43.440 --> 09:43.960
内奥

09:46.280 --> 09:46.440
好

09:46.440 --> 09:46.920
那么这边呢

09:46.920 --> 09:48.240
我们就用这个内奥的组件了啊

09:49.800 --> 09:50.200
内奥

09:51.480 --> 09:52.880
内奥的组件

09:52.880 --> 09:54.160
组件的组区呢

09:54.160 --> 09:55.720
组区我们用一个DIV吧

09:55.720 --> 09:57.280
因为这个组区里面有两个地方

09:57.280 --> 09:58.120
有两个组件

09:58.120 --> 09:58.640
这两个组件

09:58.640 --> 10:00.280
这个组织还没有写

10:00.280 --> 10:02.040
就整个这个这一块是个组区

10:02.960 --> 10:03.400
好吧

10:03.400 --> 10:04.120
所以说这一块呢

10:04.120 --> 10:05.760
我们用一个DIV把包起来吧

10:06.920 --> 10:07.520
DIV

10:08.480 --> 10:09.240
妹

10:09.240 --> 10:10.480
扛田的组区

10:11.240 --> 10:13.000
另外一个呢

10:13.000 --> 10:13.880
就是

10:13.880 --> 10:14.960
templates

10:14.960 --> 10:16.040
要写什么类似的

10:16.040 --> 10:18.520
是它的右边的一部分

10:18.520 --> 10:19.440
right

10:19.440 --> 10:20.640
右边的一部分呢

10:20.640 --> 10:22.080
我们是一个

10:24.080 --> 10:25.320
是另外一个组件啊

10:25.320 --> 10:26.440
这两个组件我们都还没有写

10:26.440 --> 10:27.440
然后把它写上吧

10:28.440 --> 10:29.880
components里面再加两个啊

10:29.880 --> 10:32.000
一个是blog detail

10:32.000 --> 10:33.360
就是博客详情

10:33.360 --> 10:35.160
显示博客文标题内容的啊

10:35.160 --> 10:36.320
这个地方

10:37.200 --> 10:38.640
博客详情

10:41.000 --> 10:42.320
是一个blog detail的

10:43.320 --> 10:43.480
好

10:43.480 --> 10:46.080
另外一个组件的是toc

10:46.080 --> 10:47.240
blog toc

10:48.960 --> 10:54.160
没有blog toc

10:55.440 --> 10:56.560
还是大写的了啊

10:56.560 --> 10:57.640
这toc是说写啊

10:59.400 --> 11:00.920
表示目录的意思

11:00.920 --> 11:01.040
好

11:01.040 --> 11:01.560
那么这里边呢

11:01.560 --> 11:02.680
我们还要到有两个出家啊

11:02.680 --> 11:05.680
一个是blog detail

11:11.480 --> 11:12.200
blog

11:12.200 --> 11:12.760
哎呗

11:12.760 --> 11:13.880
当前目录下面的啊

11:15.760 --> 11:16.240
detail

11:17.440 --> 11:18.400
还有一个是呢

11:19.160 --> 11:19.640
toc

11:21.160 --> 11:24.660
blog toc

11:24.660 --> 11:25.940
这两个东西都注册一下

11:27.580 --> 11:28.020
toc

11:31.180 --> 11:31.460
好了

11:31.460 --> 11:31.860
那行了

11:31.860 --> 11:35.140
到这边我们先放一个blog detail

11:35.140 --> 11:36.540
后边还要放一个评论组件

11:36.540 --> 11:37.380
对吧

11:37.380 --> 11:37.780
detail

11:40.020 --> 11:40.420
下边呢

11:40.420 --> 11:41.860
再放一个blog toc

11:42.940 --> 11:44.340
blog toc

11:46.020 --> 11:46.820
好了

11:46.820 --> 11:47.340
写好了之后

11:47.340 --> 11:48.980
我们来看一下效果啊

11:48.980 --> 11:50.180
刷新

11:50.220 --> 11:51.700
你看不是左右分难了吗

11:51.700 --> 11:52.300
对不对

11:52.300 --> 11:52.420
哎

11:52.420 --> 11:55.420
那我们来稍微的设置一下它的样式

11:56.420 --> 11:56.740
好

11:56.740 --> 11:58.540
首先是这一部分啊

11:58.540 --> 11:59.860
这一部分made content了呢

11:59.860 --> 12:01.740
我们设置一下样式

12:01.740 --> 12:02.260
scoped

12:04.300 --> 12:07.020
像这个detail组件里面倒是样式不多

12:10.540 --> 12:11.340
made content了

12:13.420 --> 12:15.340
给它一个overflow吧

12:15.340 --> 12:17.100
overflow y

12:17.860 --> 12:18.220
out

12:20.980 --> 12:21.740
对不对

12:21.780 --> 12:22.900
screw

12:22.900 --> 12:25.780
一个滚动条

12:25.780 --> 12:26.860
那有滚动条

12:26.860 --> 12:27.300
然后呢

12:27.300 --> 12:29.180
整个这个区域呢

12:29.180 --> 12:30.340
整个这个区域呢

12:30.340 --> 12:34.140
我们高度还是要弄高一点啊

12:34.140 --> 12:35.420
这个区域的高度

12:37.460 --> 12:38.340
来吧

12:38.340 --> 12:40.380
我们给它一个min位置

12:40.380 --> 12:42.060
最小高度

12:42.060 --> 12:43.620
最小宽度

12:43.620 --> 12:43.900
对不对

12:43.900 --> 12:45.340
最小高度

12:45.340 --> 12:49.950
百分之百

12:49.950 --> 12:50.270
好了

12:50.270 --> 12:50.870
差不多了啊

12:50.870 --> 12:52.310
就组合高了

12:52.310 --> 12:53.790
那么右边的区域的宽度呢

12:53.790 --> 12:54.670
有这边来自己

12:54.670 --> 12:55.950
你来它来控制啊

12:55.990 --> 12:57.110
这个组件来控制

12:57.110 --> 12:58.190
因为我这边的宽度呢

12:58.190 --> 12:59.110
是自动的

12:59.110 --> 12:59.710
那行了

12:59.710 --> 13:01.750
那就没啥问题了

13:01.750 --> 13:03.110
这是个panning得了

13:03.110 --> 13:03.510
行吧

13:03.510 --> 13:05.070
这是个panning啊

13:05.070 --> 13:06.150
加上box sizing

13:06.150 --> 13:07.470
border box

13:07.470 --> 13:08.510
加上个panning

13:08.510 --> 13:11.910
panning为20个相处

13:11.910 --> 13:12.550
15个相处

13:12.550 --> 13:14.310
那你们自己订吧

13:14.310 --> 13:15.510
加上一个panning

13:15.510 --> 13:15.790
好了

13:15.790 --> 13:17.310
差不多有这么个意思了啊

13:17.310 --> 13:18.230
有这么个意思

13:18.230 --> 13:18.910
行了

13:18.910 --> 13:19.870
那么这个made content呢

13:19.870 --> 13:21.110
我们就差不多了

13:21.110 --> 13:21.670
就到这吧

13:23.070 --> 13:23.310
好

13:23.310 --> 13:24.270
首先一个个来啊

13:24.270 --> 13:24.910
首先呢

13:24.910 --> 13:26.390
是这个loading效果

13:26.390 --> 13:29.110
那么我们可以使用一个全局的指令

13:29.110 --> 13:30.310
vloading为什么

13:30.310 --> 13:30.830
isloading

13:30.830 --> 13:31.750
这个很简单

13:31.750 --> 13:32.870
对不对

13:32.870 --> 13:33.750
放心

13:33.750 --> 13:34.070
你看

13:34.070 --> 13:35.150
就一个isloading吗

13:35.150 --> 13:36.590
有loading效果

13:36.590 --> 13:37.550
来来啊

13:37.550 --> 13:38.790
一个loading效果

13:38.790 --> 13:40.150
没啥问题对吧

13:40.150 --> 13:42.750
我看一下这个尺寸好像有点点

13:42.750 --> 13:44.150
不太对呀

13:44.150 --> 13:45.990
没content了

13:45.990 --> 13:47.270
放心

13:47.270 --> 13:49.590
啊没有把它设置为相对定位

13:49.590 --> 13:50.990
pracing

13:50.990 --> 13:53.350
relative

13:53.390 --> 13:54.190
放弃

13:54.190 --> 13:55.270
也差不多了

13:55.270 --> 13:56.910
loading效果出来了

13:56.910 --> 13:57.110
好

13:57.110 --> 13:59.150
那么接下来就是做后边里边的组件了

13:59.150 --> 14:00.150
一个是blog detail

14:00.150 --> 14:00.870
每一个个来

14:00.870 --> 14:02.630
首先是这个组件

14:02.630 --> 14:03.750
这个组件我们刚才说了

14:03.750 --> 14:05.110
它肯定有一个属性

14:05.110 --> 14:09.510
这个属性要显示的是文章内容

14:09.510 --> 14:10.350
就是文章对象

14:10.350 --> 14:12.390
给我的文章对象

14:12.390 --> 14:14.110
blog

14:14.110 --> 14:15.830
什么内形呢

14:15.830 --> 14:19.190
内形是objects

14:19.190 --> 14:21.110
默认值的

14:21.110 --> 14:22.710
默认值没有默认值

14:22.710 --> 14:24.190
required

14:25.110 --> 14:26.390
必须要传递

14:26.390 --> 14:27.190
然后现在没有传递

14:27.190 --> 14:28.990
他是不是得报出

14:28.990 --> 14:30.870
报一个警告对吧

14:30.870 --> 14:32.510
我missing you required a problem

14:32.510 --> 14:33.150
blog

14:33.150 --> 14:34.990
好那么这边就干传递过去

14:34.990 --> 14:36.910
就把blog数据干传递过去

14:36.910 --> 14:38.030
blog数据为啥呀

14:38.030 --> 14:39.110
所以为data

14:39.110 --> 14:39.430
对不对

14:39.430 --> 14:40.990
为这个数据

14:40.990 --> 14:43.590
就是我们的这个

14:43.590 --> 14:44.630
组件里面那个数据

14:44.630 --> 14:45.870
远程过去的数据

14:45.870 --> 14:47.990
它是来自于mix

14:47.990 --> 14:49.030
来自于这里

14:49.030 --> 14:50.550
这里我们提供那个数据

14:50.550 --> 14:51.950
啊干传递过去

14:51.950 --> 14:52.670
啊传递过去

14:52.670 --> 14:53.870
在这边显示的时候

14:53.870 --> 14:54.670
要注意点啊

14:54.670 --> 14:56.350
就是说有可能那个博客

14:56.350 --> 14:57.190
他传递的是now

14:57.190 --> 14:57.390
对吧

14:57.390 --> 14:58.190
一开始是now

14:58.190 --> 14:59.110
对不对

14:59.110 --> 15:00.310
没有文章

15:00.310 --> 15:00.750
对吧

15:00.750 --> 15:01.830
没有文章的话

15:01.830 --> 15:02.830
那么这个组件呢

15:02.830 --> 15:04.310
我是不显示的啊

15:04.310 --> 15:04.830
是不显示

15:04.830 --> 15:06.750
那我这里就给他加上一个vif

15:06.750 --> 15:08.470
或者在这边加vif也可以

15:08.470 --> 15:10.350
比方说这里给个div

15:10.350 --> 15:12.990
div那就是一个blog detail

15:12.990 --> 15:13.790
所以你没规范

15:13.790 --> 15:14.470
抗天了

15:14.470 --> 15:16.870
那么这个给他加个vif

15:16.870 --> 15:17.870
什么情况要显示的

15:17.870 --> 15:19.430
只有有文章的时候才显示

15:19.430 --> 15:19.710
对吧

15:19.710 --> 15:21.350
所以说这个blog得有值

15:21.350 --> 15:22.590
有值的时候才显示

15:22.590 --> 15:23.190
没有值的话

15:23.190 --> 15:24.670
就这个组件啥都没有

15:24.670 --> 15:25.550
有没有这个组件有

15:25.550 --> 15:27.030
但是这个组件是通的

15:27.030 --> 15:28.310
啥都没有

15:28.310 --> 15:29.550
就这么个意思啊

15:29.550 --> 15:30.670
一写到vif写到这

15:30.670 --> 15:32.470
也可以都行

15:32.470 --> 15:33.030
好那行了

15:33.030 --> 15:34.470
那咱们看一下啊

15:34.470 --> 15:35.990
专业挺好的对不对

15:35.990 --> 15:36.350
这里

15:38.350 --> 15:39.390
他说

15:39.390 --> 15:40.670
希望是一个object

15:40.670 --> 15:41.790
但是给得到的是now

15:41.790 --> 15:42.590
那行吧

15:42.590 --> 15:43.550
他有一个约束对吧

15:46.510 --> 15:47.110
我们这里呢

15:47.110 --> 15:48.350
就给他传递

15:48.350 --> 15:49.430
在这里放了这

15:49.430 --> 15:50.630
放了这

15:50.630 --> 15:51.670
有对他的时候才显示

15:51.670 --> 15:52.230
没有对他的时候

15:52.230 --> 15:53.310
就不显示个组件

15:54.430 --> 15:55.230
好那行吧

15:55.230 --> 15:56.430
这边就不写了

15:56.430 --> 15:56.870
他刷新

15:58.950 --> 15:59.270
好了

15:59.270 --> 16:00.190
没啥问题对吧

16:00.190 --> 16:01.950
这个数据哪来的

16:01.950 --> 16:03.030
这个数据

16:03.030 --> 16:05.190
我之前打印的数据是吧

16:05.190 --> 16:05.750
之前没事

16:05.750 --> 16:06.390
那扔掉吧

16:06.390 --> 16:08.190
以后我们之后来再清除那些

16:08.190 --> 16:08.630
cars or whatever

16:08.630 --> 16:09.550
应该是在mock里面

16:10.710 --> 16:11.310
应该是在这

16:13.110 --> 16:15.510
这就是之前的

16:15.510 --> 16:16.550
之前的blogd

16:16.550 --> 16:19.860
是在里面

16:19.860 --> 16:21.260
还不是

16:21.260 --> 16:22.620
应该是里面

16:22.620 --> 16:23.100
还不是

16:23.100 --> 16:27.180
那就是之前的API里面

16:27.180 --> 16:28.540
之后再说

16:28.540 --> 16:29.220
之后再清除

16:29.220 --> 16:32.110
这难得弄了

16:32.110 --> 16:32.350
好

16:32.350 --> 16:32.710
然后呢

16:32.710 --> 16:34.070
现在我们看到这个组件

16:34.070 --> 16:36.070
我们要做什么事情的这个组件

16:36.070 --> 16:36.630
这个组件呢

16:36.630 --> 16:37.590
无非要做的事情

16:37.590 --> 16:40.190
就是把这个博客文章显示出来

16:40.190 --> 16:41.910
那么有哪些信息要显示呢

16:41.910 --> 16:42.830
首先有个H1

16:42.830 --> 16:43.270
对吧

16:43.270 --> 16:44.270
博客标题

16:44.270 --> 16:44.630
来吧

16:45.830 --> 16:47.310
H1显示博客标题

16:47.310 --> 16:48.750
所以这个组件非常简单

16:48.750 --> 16:50.550
就是blog.什么title

16:50.550 --> 16:52.310
就显示出来就完事了

16:52.310 --> 16:53.150
就显示出来了

16:53.150 --> 16:54.830
博客标题

16:54.830 --> 16:56.190
然后下边的是什么呢

16:56.230 --> 16:58.310
下边是一些附加信息

16:58.310 --> 17:00.790
我们用一个DIV把

17:00.790 --> 17:02.590
而塞的一些附加信息

17:02.590 --> 17:03.670
其实也可以用

17:03.670 --> 17:04.990
atm语异化标签

17:04.990 --> 17:06.110
而塞的也可以

17:06.110 --> 17:07.710
而塞的并不表示特别难

17:07.710 --> 17:09.710
还表示一些附加信息

17:09.710 --> 17:11.310
我们就用DIV吧

17:12.310 --> 17:13.430
因为这国内的话

17:13.430 --> 17:14.750
语异化它

17:14.750 --> 17:16.750
没有特别重视

17:18.470 --> 17:19.790
来写一些

17:19.790 --> 17:21.150
ESB元素

17:21.150 --> 17:21.950
日期

17:24.230 --> 17:25.430
来自于

17:25.470 --> 17:27.070
blog.

17:27.070 --> 17:29.150
这个日期是要转换成格式的

17:29.150 --> 17:29.950
导入

17:29.950 --> 17:30.950
导入之前的Utils

17:34.230 --> 17:35.750
Utils

17:35.750 --> 17:38.990
里边有一个format date

17:38.990 --> 17:40.350
把它写到方法里边

17:40.350 --> 17:41.710
let's search

17:41.710 --> 17:44.970
format date

17:44.970 --> 17:46.010
这边我们使用

17:47.090 --> 17:47.970
format date

17:49.050 --> 17:51.050
把它博客的创建日期放上

17:52.330 --> 17:52.730
扔掉

17:54.330 --> 17:55.010
看一下

17:55.010 --> 17:56.370
日期出来了

17:56.410 --> 18:00.900
然后是浏览量

18:00.900 --> 18:01.940
浏览

18:01.940 --> 18:03.500
那么这个就是

18:03.500 --> 18:04.500
得到的是blog

18:07.540 --> 18:08.900
叫做scan number

18:10.580 --> 18:11.940
下面这个是评论

18:13.220 --> 18:14.300
注意评论这一块

18:14.300 --> 18:15.900
评论它是个超链接

18:18.350 --> 18:19.350
评论是个超链接

18:19.350 --> 18:20.470
你看点评论

18:20.470 --> 18:20.670
是吧

18:20.670 --> 18:22.350
跳到下面的位置

18:22.350 --> 18:23.230
它是个超链接

18:23.230 --> 18:23.790
这个

18:23.790 --> 18:25.150
就是细节还是蛮多的

18:25.150 --> 18:26.150
我们给它一个超链接

18:26.150 --> 18:26.990
先暂时给它一个

18:26.990 --> 18:28.550
因为我们后面这一块

18:28.590 --> 18:30.470
跳转一面不同位置

18:30.470 --> 18:32.150
我们后面还要慢慢去处理

18:32.150 --> 18:32.710
先不着急

18:32.710 --> 18:33.350
先给它一个

18:33.350 --> 18:33.510
诶

18:33.510 --> 18:35.310
把样式给弄出来再说

18:35.310 --> 18:37.350
这边我们就写上一个

18:37.350 --> 18:38.310
scan

18:39.670 --> 18:40.390
comment

18:41.550 --> 18:42.950
就点了个超链接过后一干吧

18:42.950 --> 18:44.350
我们后面再说吧

18:44.350 --> 18:45.310
number

18:45.310 --> 18:46.270
评论又出来了

18:47.270 --> 18:48.390
评论

18:48.390 --> 18:49.350
接下来是分类

18:49.350 --> 18:50.870
分类其实也是个超链接

18:50.870 --> 18:51.590
点击分类过后

18:51.590 --> 18:53.110
它就跳到之前的分类页面

18:54.830 --> 18:55.910
分类页面

18:55.910 --> 18:56.830
就这一块

18:56.870 --> 18:57.550
那么分类呢

18:57.550 --> 18:59.190
我们也是一共超链接

19:01.780 --> 19:02.420
分类

19:02.420 --> 19:03.620
分类的读的是什么

19:03.620 --> 19:05.140
读的是博客的

19:05.740 --> 19:06.420
art

19:06.420 --> 19:06.860
诶

19:07.780 --> 19:09.420
chris gory

19:09.420 --> 19:09.860
nit

19:11.860 --> 19:12.260
分类

19:12.260 --> 19:12.860
啊

19:12.860 --> 19:13.140
对了

19:13.140 --> 19:13.740
都出来了

19:15.060 --> 19:15.100
诶

19:15.100 --> 19:15.740
哦

19:15.740 --> 19:17.580
Span里边包超链接啊

19:17.580 --> 19:21.150
怎么搞错了

19:21.150 --> 19:23.070
Span里边包一个超链接

19:23.070 --> 19:31.760
应该是这样子

19:31.760 --> 19:39.660
调整一下啊

19:39.660 --> 19:39.940
啊

19:39.940 --> 19:40.820
应该是这个样子啊

19:42.780 --> 19:43.500
你看一下这边

19:44.860 --> 19:45.540
哦分类

19:47.140 --> 19:47.660
刚才写的

19:47.660 --> 19:47.900
对了

19:47.900 --> 19:48.860
的呀

19:48.860 --> 19:55.230
就是超链接啊

19:55.230 --> 19:56.750
就是个超链接啊

19:56.750 --> 19:57.110
呃

19:57.110 --> 19:58.990
只不过这里没有一个分类名字

19:58.990 --> 20:02.280
OK

20:02.280 --> 20:02.560
好

20:02.560 --> 20:03.360
行了啊

20:03.360 --> 20:04.760
那么我们来设置一下样式

20:05.840 --> 20:07.120
sculpt

20:07.120 --> 20:07.920
no

20:07.920 --> 20:08.680
ness

20:08.680 --> 20:10.000
现在我们找到

20:10.000 --> 20:11.600
block detail

20:11.600 --> 20:12.560
下面的container

20:12.560 --> 20:13.480
下面的

20:13.480 --> 20:14.720
he

20:14.720 --> 20:15.280
啊

20:15.280 --> 20:16.200
标识不管它了

20:16.200 --> 20:20.220
那么我找到它里边的outside吧

20:20.220 --> 20:21.540
outside

20:21.540 --> 20:22.140
其实这里呢

20:22.140 --> 20:23.620
因为本身开启了sculpt

20:23.620 --> 20:25.300
所以说也没有必要去嵌套了

20:25.300 --> 20:26.060
嵌套了

20:26.060 --> 20:28.890
意义不大了

20:28.890 --> 20:29.770
outside呢

20:29.770 --> 20:32.170
我们给它写上一个

20:32.170 --> 20:35.320
呃

20:35.320 --> 20:36.040
字体大小

20:36.040 --> 20:36.720
downside

20:36.720 --> 20:38.360
12个相处

20:38.360 --> 20:39.400
字体颜色的话

20:39.400 --> 20:42.570
我们用灰色吧

20:42.570 --> 20:43.610
用灰色

20:43.610 --> 20:44.890
所以说你导入

20:44.890 --> 20:47.560
import

20:47.560 --> 20:51.090
import

20:51.090 --> 20:51.770
这个地址

20:51.770 --> 20:52.730
styles

20:52.730 --> 20:53.250
wow

20:53.250 --> 20:57.020
gowness

20:57.020 --> 20:58.780
color

20:58.780 --> 21:00.020
free

21:00.020 --> 21:01.500
灰色

21:01.500 --> 21:02.340
嗯 差不多

21:02.340 --> 21:04.260
然后把里边的什么span元数

21:04.260 --> 21:06.020
设置一下mortin left

21:06.020 --> 21:07.540
或者mortin right

21:07.540 --> 21:08.260
呃

21:08.260 --> 21:11.360
15个相处吧

21:11.360 --> 21:12.640
哎 有点意思了啊

21:12.640 --> 21:13.000
然后呢

21:13.000 --> 21:14.640
里边的a元数也是一样

21:14.640 --> 21:17.700
a元数

21:17.700 --> 21:18.300
哎 差不多了

21:18.300 --> 21:18.780
对吧

21:18.780 --> 21:19.180
差不多了

21:19.180 --> 21:21.540
那么这个信息基本信息就显示到这了

21:21.540 --> 21:21.700
好了

21:21.700 --> 21:23.740
那么接下来就是文章的内容了啊

21:23.740 --> 21:24.780
内容这一部分呢

21:24.780 --> 21:26.460
我们用一个div吧

21:26.460 --> 21:27.420
呃

21:27.420 --> 21:29.500
内容这一部分

21:29.500 --> 21:30.340
是不是可以显示到这

21:30.340 --> 21:31.300
那我们怎么显示呢

21:31.300 --> 21:33.060
我们给它显示一个block

21:33.060 --> 21:33.860
哎 挺没有

21:33.860 --> 21:34.420
container

21:34.420 --> 21:35.140
不是 这个属性

21:35.140 --> 21:36.300
这个属性里面是个内容

21:36.300 --> 21:36.700
好

21:36.700 --> 21:37.220
预保存

21:37.220 --> 21:37.460
你看

21:37.460 --> 21:38.660
还显示出来这么一个效果

21:39.980 --> 21:41.380
哈哈

21:41.380 --> 21:43.140
是我们想要的吗

21:43.140 --> 21:43.460
不是

21:43.460 --> 21:43.740
哎

21:43.740 --> 21:45.380
为什么不能滑

21:45.380 --> 21:45.940
不能滑动

21:45.940 --> 21:47.140
来 我看一下啊

21:47.140 --> 21:48.020
这个是什么回事

21:48.020 --> 21:49.860
不能滑动

21:49.860 --> 21:50.500
有这么多

21:50.500 --> 21:52.100
这么多内容

21:52.100 --> 21:52.500
呃

21:52.500 --> 21:58.040
这上面的block detail

21:58.040 --> 21:59.600
看一下这里啊

21:59.600 --> 22:01.120
上面这个

22:01.120 --> 22:03.480
make container

22:03.560 --> 22:06.400
make container

22:06.400 --> 22:07.880
overflow y

22:07.880 --> 22:09.320
oh height

22:09.320 --> 22:10.040
高度啊

22:10.040 --> 22:11.320
高度不能是最小高度啊

22:11.320 --> 22:12.680
得是固定高度

22:12.680 --> 22:14.000
因为它把高度称开了

22:14.000 --> 22:15.320
自然没有滚动条了

22:15.320 --> 22:17.640
所以说这里呢是高度百分之百

22:17.640 --> 22:18.920
这样子才会出来滚动条

22:18.920 --> 22:20.720
对不对

22:20.720 --> 22:23.000
OK

22:23.000 --> 22:24.400
现在它出来这个东西

22:24.400 --> 22:25.360
这是为什么呢

22:25.360 --> 22:27.800
这是5U里面的安全措施

22:27.800 --> 22:29.840
我这里说一下啊

22:29.840 --> 22:30.320
呃

22:30.320 --> 22:31.240
是什么意思呢

22:31.240 --> 22:33.240
就是说5U里边啊

22:33.240 --> 22:34.560
在模办内容部分

22:34.560 --> 22:37.080
不是可以用那个master大鬍子语法吗

22:37.080 --> 22:38.320
是不可以用大鬍子语法

22:38.320 --> 22:39.760
把内容读出来

22:39.760 --> 22:41.240
读出来的内容呢

22:41.240 --> 22:43.320
它一定是作为纯文本

22:43.320 --> 22:45.920
它不能作为元素的

22:45.920 --> 22:46.760
无论是什么元素

22:46.760 --> 22:48.040
比较H元素P元素

22:48.040 --> 22:49.200
都不能存在的

22:49.200 --> 22:51.360
它如果说有元素怎么办

22:51.360 --> 22:52.120
有元素的

22:52.120 --> 22:53.800
它会给你进行ATM编码

22:53.800 --> 22:54.200
所以说呢

22:54.200 --> 22:55.400
我们这里看到的

22:55.400 --> 22:57.520
本来我们写的是一些元素对吧

22:57.520 --> 22:58.720
我们看一下检查

22:58.720 --> 23:01.920
它可能变成什么东西了

23:01.960 --> 23:03.440
点击右键啊

23:03.440 --> 23:04.560
编辑为ATM

23:04.560 --> 23:06.720
它可能变成了全部编码过后的

23:06.720 --> 23:07.360
看到没

23:07.360 --> 23:08.600
这是为什么要这样做呢

23:08.600 --> 23:09.920
它是为了安全

23:09.920 --> 23:10.520
为什么说这

23:10.520 --> 23:11.440
这是为了安全的

23:11.440 --> 23:12.880
我这里简单说一下啊

23:12.880 --> 23:14.680
你们以后学到漏断课程的时候呢

23:14.680 --> 23:16.280
还会学到这个问题

23:16.280 --> 23:17.400
它只要叫做跨域

23:17.400 --> 23:19.160
跨散脚本攻击

23:19.160 --> 23:20.480
啥意思呢

23:20.480 --> 23:21.720
就是说这一部分内容啊

23:21.720 --> 23:22.480
它是动态的

23:22.480 --> 23:24.080
它来自于一个数据

23:24.080 --> 23:24.920
那么这个数据呢

23:24.920 --> 23:28.120
有可能又是用户提供的

23:28.120 --> 23:28.280
诶

23:28.280 --> 23:29.080
有些人说不是啊

23:29.080 --> 23:30.880
这个数据是我们模拟出来的

23:30.880 --> 23:31.960
那是现在嘛

23:31.960 --> 23:32.880
那将来呢

23:32.880 --> 23:33.080
诶

23:33.080 --> 23:35.240
有的人说将来是来自于服务器的

23:35.240 --> 23:38.360
那你想想服务器用哪来的

23:38.360 --> 23:40.240
是不是用户写的呀

23:40.240 --> 23:40.520
对吧

23:40.520 --> 23:42.200
使用我们网站的人写的

23:42.200 --> 23:42.960
但是这个用户呢

23:42.960 --> 23:44.440
可能是管理员

23:44.440 --> 23:44.960
但是呢

23:44.960 --> 23:47.240
也是存在安全隐患的

23:47.240 --> 23:49.080
是不是管理员写的东西啊

23:49.080 --> 23:50.240
这这一部分数据

23:50.240 --> 23:52.080
通过这些数据到服务器

23:52.080 --> 23:53.000
服务器再给我们

23:53.000 --> 23:54.240
最终的数据来源呢

23:54.240 --> 23:56.240
是来自于用户

23:56.240 --> 23:57.640
来源于用户的数据呢

23:57.640 --> 24:00.240
你就不知道用户会写啥

24:00.280 --> 24:01.440
那么这里边

24:01.440 --> 24:03.200
你看到的可能是一些

24:03.200 --> 24:03.600
诶

24:03.600 --> 24:04.640
普通的元素

24:04.640 --> 24:06.200
那万一他写的是一个这个东西呢

24:07.440 --> 24:08.480
他万一写的是这个玩意儿

24:09.480 --> 24:10.800
是不是可以把一些脚笨

24:10.800 --> 24:12.680
在这里去执行啊

24:12.680 --> 24:14.040
如果说你不加处理的话

24:14.040 --> 24:15.280
所以说为了安全起见啊

24:15.280 --> 24:16.600
我就简单说一下啊

24:16.600 --> 24:17.520
讲了你们学生逗的时候

24:17.520 --> 24:18.360
还会详细的学

24:18.360 --> 24:19.560
怎么去防御

24:19.560 --> 24:20.160
简单说一下

24:20.160 --> 24:21.320
为了安全呢

24:21.320 --> 24:23.280
他会把这部分内容的进行编码

24:24.680 --> 24:25.520
放到这个位置

24:25.520 --> 24:27.440
就说一说我们之前看到的这个

24:27.440 --> 24:28.640
大鬍子余法

24:28.680 --> 24:30.680
它里边东西都是安全内容

24:30.680 --> 24:31.680
就不管是

24:32.320 --> 24:33.520
你写的是不是安全内容

24:33.520 --> 24:34.760
但读出来一定是安全的

24:35.880 --> 24:37.920
但是现在就不符合我们的要求了

24:37.920 --> 24:38.880
我们的要求是什么呢

24:38.880 --> 24:40.000
我们要求这一部分

24:40.000 --> 24:42.480
就得显示原本的东西

24:42.480 --> 24:43.760
你不要够考虑安全行为级

24:43.760 --> 24:45.840
因为这个东西是管理员家的

24:45.840 --> 24:46.400
对吧

24:46.400 --> 24:48.280
是管理员听家的内容

24:48.280 --> 24:50.080
所以说是安全的

24:50.880 --> 24:51.480
再说呢

24:51.480 --> 24:52.160
你不显示

24:52.160 --> 24:53.400
你不要你这样子搞了

24:53.400 --> 24:55.720
我就没法显示正常内容了

24:55.720 --> 24:56.120
因此呢

24:56.120 --> 24:57.680
我想把这一部分内容呢

24:57.680 --> 25:01.600
作为它的InnerATMEL来显示

25:01.600 --> 25:02.640
那怎么办呢

25:02.640 --> 25:03.120
这个时候呢

25:03.120 --> 25:04.800
要使用一种特殊的方式

25:04.800 --> 25:07.520
叫做新的知识的VATMEL指令

25:08.360 --> 25:09.120
这个指令呢

25:10.520 --> 25:11.520
你把这个放进去

25:11.520 --> 25:12.720
就完事了

25:12.720 --> 25:13.680
这个指令啥意思

25:13.680 --> 25:14.480
你这样的设置过后

25:14.480 --> 25:17.560
就相当于是给这个DIV的InnerATMEL

25:17.560 --> 25:18.720
设置这个东西

25:18.720 --> 25:20.680
而且在这个使用了这个指令之后

25:20.680 --> 25:22.160
你里边再写啥

25:22.160 --> 25:23.800
已经没用了

25:23.800 --> 25:24.320
为啥呢

25:24.320 --> 25:25.160
你就想吧

25:25.160 --> 25:27.080
这个DIV里边InnerATMEL

25:27.080 --> 25:28.560
你设置为这个玩意

25:28.560 --> 25:30.120
你看这里边的东西还有用吗

25:30.120 --> 25:31.080
没用

25:31.080 --> 25:31.240
好

25:31.240 --> 25:31.920
保存你看一下

25:33.600 --> 25:33.880
哎

25:33.880 --> 25:35.320
现在你看

25:35.320 --> 25:37.280
是不是就已经出来了

25:37.280 --> 25:37.960
这个效果

25:37.960 --> 25:38.200
对吧

25:38.200 --> 25:39.880
这一部分是它的InnerATMEL

25:39.880 --> 25:40.800
而且我们这个内容呢

25:40.800 --> 25:41.440
是被覆盖掉了

25:43.200 --> 25:43.920
里边啊

25:43.920 --> 25:44.920
这是这一部分啊

25:44.920 --> 25:49.670
看一下下面怎么出现橫向滚动条了

25:49.670 --> 25:52.780
橫向滚动条怎么出

25:52.780 --> 25:53.540
呃

25:53.540 --> 25:57.280
比较加上一个属性

25:57.280 --> 25:58.400
宽度

25:58.400 --> 25:59.600
百分之百

25:59.600 --> 26:00.640
overflowx

26:02.120 --> 26:02.400
拍的

26:03.320 --> 26:06.120
隐藏

26:06.120 --> 26:06.320
好

26:06.320 --> 26:07.000
行了啊

26:07.000 --> 26:09.430
嗯

26:09.430 --> 26:10.030
哎

26:10.030 --> 26:10.550
那么

26:12.030 --> 26:12.550
说心意识

26:14.230 --> 26:15.030
什么的

26:15.030 --> 26:15.990
OK

26:15.990 --> 26:16.470
现在可以了

26:17.830 --> 26:18.030
好

26:18.030 --> 26:19.950
那现在我们就是这一部分的央视了

26:19.950 --> 26:21.030
这一部分是没有央视的

26:21.030 --> 26:22.670
用的都是浏览器的默认样式啊

26:22.670 --> 26:23.550
你看

26:23.550 --> 26:24.710
这里边是有列表的

26:26.030 --> 26:27.150
就是文章内容这一部分

26:27.150 --> 26:28.590
你看是不是有OLI

26:28.590 --> 26:28.750
对吧

26:28.750 --> 26:29.910
已经列表样式

26:29.910 --> 26:30.950
那么现在的一样式呢

26:30.950 --> 26:32.030
就是浏览器的默认样式

26:32.030 --> 26:34.110
当然说你觉得默认样式还OK

26:34.110 --> 26:34.990
那就ok

26:35.030 --> 26:36.910
那你觉得默认样式不好看

26:36.910 --> 26:38.790
你看那些代码都没有样式的

26:38.790 --> 26:40.390
那么还要去加样式

26:40.390 --> 26:41.550
这里呢我给他说一下啊

26:41.550 --> 26:42.710
这个不多个detail

26:42.710 --> 26:44.750
其他都没有什么难度

26:44.750 --> 26:45.510
就是这一块啊

26:45.510 --> 26:46.670
一个是VATM指令

26:46.670 --> 26:47.590
多了个支持的啊

26:47.590 --> 26:49.390
就是模板里面有指令

26:49.390 --> 26:50.350
指令又多了一个了

26:50.350 --> 26:53.560
叫做VATML

26:53.560 --> 26:54.360
把总结一下啊

26:55.560 --> 26:57.480
另外呢就是生成的文章内容了

26:57.480 --> 26:58.800
是不但样式的

26:58.800 --> 26:59.920
就是这一部分啊

26:59.920 --> 27:01.280
它不会有传样式过来

27:01.280 --> 27:03.560
它只能传一个原始的ATML

27:03.560 --> 27:04.240
那么样式呢

27:04.240 --> 27:05.520
你在潜探一面自己去

27:05.520 --> 27:06.360
自己去使用

27:06.360 --> 27:07.760
自己去找一个样式

27:07.760 --> 27:08.800
关于mockdown的

27:08.800 --> 27:10.920
因为这个这个ATML是mockdown生成的

27:10.920 --> 27:11.440
对吧

27:11.440 --> 27:12.840
关于mockdown生成的ATML

27:12.840 --> 27:13.680
有哪些样式呢

27:13.680 --> 27:14.280
多的很

27:14.280 --> 27:16.040
你摆出去收一收一大堆

27:16.040 --> 27:16.720
我这里呢

27:16.720 --> 27:18.800
就给他给大家把个样式提供好了

27:18.800 --> 27:20.040
在这儿

27:20.040 --> 27:21.560
有个mockdown css

27:21.560 --> 27:24.560
你把这个复制单体道理的style里边

27:24.560 --> 27:25.480
有人可能觉得是

27:25.480 --> 27:26.800
我自己定义一下

27:26.800 --> 27:27.760
你自己去定义吧

27:27.760 --> 27:28.120
你看吧

27:28.120 --> 27:29.640
他给你生成的ATML里边呢

27:29.640 --> 27:32.600
都是带了一些元素的

27:32.600 --> 27:32.800
对吧

27:32.800 --> 27:33.760
你把元素的样式呢

27:33.760 --> 27:35.760
去设置一下就完事了

27:35.760 --> 27:37.920
而且他这个整个容器

27:37.920 --> 27:41.120
整个容器他是给你给了你一个样式叫做

27:43.840 --> 27:45.840
没有给没有给任何样式啊

27:45.840 --> 27:48.080
那么你可以找到找到这个内样式下面的

27:48.080 --> 27:50.280
其他其他地方去设置样式

27:50.280 --> 27:50.400
好

27:50.400 --> 27:51.920
那我们看一下这边

27:51.920 --> 27:53.320
这边这个css里边

27:53.320 --> 27:55.840
我们把个粘贴过来啊

27:55.840 --> 27:57.360
他有一个复原素

27:57.360 --> 27:59.440
复原素都在mockdown body下边

27:59.440 --> 28:01.040
那么我们这里就简单了

28:01.040 --> 28:01.800
mockdown body呢

28:01.800 --> 28:05.790
我们就把这个东西作为mockdown body吧

28:05.790 --> 28:06.990
就把这个

28:06.990 --> 28:12.430
mockdown body

28:12.430 --> 28:13.110
这么个样式

28:13.110 --> 28:15.230
那么也就是他下面的所谓的内容呢

28:15.230 --> 28:17.430
都受这个样式的影响

28:17.430 --> 28:17.590
好

28:17.590 --> 28:18.910
我们加入进去啊

28:18.910 --> 28:21.710
然后既然我们只需要把这个样式引入

28:21.710 --> 28:25.080
在这个页面中引入

28:25.080 --> 28:26.560
styles

28:26.560 --> 28:27.560
mockdown

28:27.560 --> 28:29.000
叫css

28:29.000 --> 28:29.680
引入进来

28:29.680 --> 28:34.730
你看样式就有了

28:34.730 --> 28:36.930
小心

28:36.930 --> 28:38.410
你看样式是不是有了

28:38.410 --> 28:38.810
对吧

28:38.810 --> 28:40.930
样式也好看一些了

28:40.930 --> 28:42.810
这个整个容器呢

28:42.810 --> 28:44.130
你上下有点marking吧

28:44.130 --> 28:46.290
加上一个marking

28:46.290 --> 28:50.890
叫mockdown body

28:50.890 --> 28:52.450
收拾个marking

28:52.450 --> 28:56.210
上下来为1EA

28:56.210 --> 29:01.620
左右为0

29:01.620 --> 29:03.580
没效果

29:03.580 --> 29:04.980
mockdown

29:04.980 --> 29:05.260
哎呦

29:05.260 --> 29:08.480
怎么写出了这儿来了

29:08.480 --> 29:13.780
这边啊

29:13.780 --> 29:14.260
好

29:14.260 --> 29:15.300
上下有点距离啊

29:15.300 --> 29:17.140
或者是再多一点吧

29:17.140 --> 29:19.140
2EA

29:19.140 --> 29:20.460
好 差不多

29:20.460 --> 29:22.620
然后我们自在往下看啊

29:22.620 --> 29:23.860
这一部分的样式呢

29:23.860 --> 29:26.060
就是代码着色还没有

29:26.060 --> 29:27.700
它有个代码区域的一个背景

29:27.700 --> 29:28.580
一个单色的背景

29:28.580 --> 29:28.780
对吧

29:28.780 --> 29:29.260
但是呢

29:29.260 --> 29:30.420
没有代码着色

29:30.420 --> 29:31.220
代码着色呢

29:31.220 --> 29:33.020
这个样式里面就给你提供了啊

29:33.020 --> 29:36.020
你可以使用一个第三方库调的night

29:36.020 --> 29:36.700
就是高亮

29:36.700 --> 29:37.500
高亮显示

29:37.500 --> 29:41.620
它专门用来高亮显示一些

29:41.620 --> 29:42.540
代码位置的

29:42.540 --> 29:43.260
你看这一部分呢

29:43.260 --> 29:44.660
其实有很多的元素

29:44.660 --> 29:45.620
它生成了很多的元素

29:45.620 --> 29:48.020
你看有个pray元素里面有code的

29:48.180 --> 29:48.740
有个class

29:48.740 --> 29:49.780
nongrel以及js

29:49.780 --> 29:50.940
这些class都没有啊

29:50.940 --> 29:52.580
都没有这些那样式

29:52.580 --> 29:55.020
那么这个元素是谁生成出来的呢

29:55.020 --> 29:57.100
这些元素其实也是它生成出来的

29:57.100 --> 29:59.100
将来我们做后台页面的时候

29:59.100 --> 30:00.420
就会用到这个第三方库

30:00.420 --> 30:02.460
生成代码部分的要用到它

30:02.460 --> 30:05.420
来生成一些比较精细的元素

30:05.420 --> 30:07.380
不然的话它就整个一大块

30:07.380 --> 30:08.100
你看

30:08.100 --> 30:10.140
你看这些部分都全是生成元素了

30:10.140 --> 30:13.460
那么现在我们只需要用这个js里边的一些css

30:13.460 --> 30:16.220
那我这里面建议大家用这个github的css

30:16.260 --> 30:17.860
当然你可以根据自己喜欢

30:17.860 --> 30:19.300
看一下它这个style smooth

30:19.300 --> 30:20.700
它下面有很多的css

30:20.700 --> 30:21.780
那么首先我们安装

30:22.900 --> 30:23.340
停止

30:24.020 --> 30:27.660
安装一下这个highlight.js

30:29.260 --> 30:30.820
它到一边的js功能

30:30.820 --> 30:31.700
我们现在用不上

30:31.700 --> 30:33.900
将来我们做后台页面的时候还用得上

30:33.900 --> 30:34.980
现在用不上

30:34.980 --> 30:35.900
那么我们再启动

30:37.940 --> 30:39.220
我现在只会用到它

30:39.220 --> 30:40.020
诶

30:40.020 --> 30:42.580
我们只会用到它的一些css

30:42.580 --> 30:43.660
把这css导入进来

30:49.390 --> 30:49.950
到这边

30:51.350 --> 30:51.950
在这

30:51.950 --> 30:52.390
导入

30:53.270 --> 30:54.470
刚才导入的地方

30:54.470 --> 30:55.630
刚才这个detail里面

30:55.630 --> 30:56.710
这个地方导入错了

30:57.510 --> 30:58.630
这个应该在这里导入

30:59.950 --> 31:00.590
在这里导入

31:02.150 --> 31:02.430
好了

31:02.430 --> 31:03.190
保存

31:03.190 --> 31:04.270
再看

31:04.270 --> 31:07.470
小心

31:07.470 --> 31:08.790
你看代码位置

31:08.790 --> 31:10.590
是不是有代码着色了

31:10.590 --> 31:11.790
那么就差不多了

31:11.790 --> 31:12.550
这个页面

31:12.550 --> 31:14.590
文章内容部分是不是就显示出来了

31:14.590 --> 31:15.990
那么blog detail就做完了

31:16.950 --> 31:18.110
那么接下来下一个组件

31:18.110 --> 31:20.110
blogtoc就这个组件

31:21.150 --> 31:22.710
这个组件没有任何难度

31:22.710 --> 31:23.790
我们直接买就行了

31:24.950 --> 31:26.350
新鲜的文件就有了

31:26.350 --> 31:27.150
blogtoc

31:27.150 --> 31:30.150
其实这一部分跟我们之前做的blog category差不多

31:30.150 --> 31:30.870
对不对

31:30.870 --> 31:31.870
就在这边差不多

31:31.870 --> 31:33.150
而且样式都差不多

31:33.150 --> 31:34.310
我这一两个去提取了

31:34.310 --> 31:35.510
就把这个样式拿过来用吧

31:38.400 --> 31:38.960
toc

31:42.140 --> 31:43.100
叫做blog

31:44.340 --> 31:45.660
toc content

31:46.820 --> 31:48.140
这边还写个div

31:48.140 --> 31:49.340
divblog

31:49.340 --> 31:51.260
toc content

31:51.260 --> 31:52.860
宽度了也是三万个项书

31:52.860 --> 31:53.180
固定

31:54.700 --> 31:56.340
然后在周里边写啥的

31:56.380 --> 31:57.620
这里边我们用另外的图件

31:57.620 --> 31:58.700
就跟之前差不多

31:58.700 --> 32:02.120
我们把之前稍微复制一下吧

32:02.120 --> 32:02.960
开始复制这里

32:07.530 --> 32:07.970
导入

32:08.970 --> 32:10.290
导入这个write list

32:16.950 --> 32:17.550
write

32:20.460 --> 32:21.900
write list

32:23.220 --> 32:24.220
注册组件

32:24.660 --> 32:25.460
component

32:26.220 --> 32:27.460
write list

32:29.140 --> 32:29.740
好

32:29.740 --> 32:30.980
然后这边需要一些数据

32:30.980 --> 32:32.420
把这边的问题还多

32:32.420 --> 32:33.460
首先是一个probs

32:33.460 --> 32:34.700
它本身需要一个数据

32:34.700 --> 32:35.940
就这个图件需要一些数据

32:35.940 --> 32:36.420
什么数据呢

32:36.420 --> 32:38.220
就是文章的toc目录

32:38.220 --> 32:38.660
对吧

32:38.700 --> 32:40.380
所以toc你要给我

32:40.380 --> 32:41.300
内情是什么呢

32:41.300 --> 32:42.580
内情是一个array

32:44.900 --> 32:45.540
好

32:45.540 --> 32:47.460
那么这边我要传递给它

32:48.340 --> 32:49.260
detail里边

32:49.820 --> 32:52.180
我要把这个文章的目录

32:52.180 --> 32:53.540
toc传递给它

32:53.540 --> 32:55.860
就是data.toc

32:55.860 --> 32:56.660
有什么问题吧

32:56.660 --> 32:57.540
这是文章对象

32:57.540 --> 32:58.780
你把一个属性叫toc

32:58.780 --> 32:59.700
把一个数据传给它

32:59.700 --> 33:00.540
同样的道理

33:00.540 --> 33:02.380
如果说数据还没有出来的话

33:02.380 --> 33:03.860
我这里给它一个

33:05.140 --> 33:05.700
data

33:08.020 --> 33:10.180
data.toc

33:10.180 --> 33:12.300
如果说文章数据都还没有出来的话

33:12.300 --> 33:14.180
那么我就什么都没有传递

33:14.180 --> 33:16.020
它不显示这个图件

33:16.020 --> 33:17.980
其他的情况我就显示

33:17.980 --> 33:20.300
另外我这里给它一个dave吧

33:20.300 --> 33:22.340
这个dave就是

33:22.340 --> 33:23.900
runs content

33:25.180 --> 33:26.220
这个dave呢

33:26.220 --> 33:27.780
也要显示个加载动作效果

33:29.020 --> 33:32.060
v loading

33:32.060 --> 33:32.860
is loading

33:33.860 --> 33:36.060
把这个dave设置一下

33:40.250 --> 33:41.170
宽度就300吧

33:41.170 --> 33:41.890
300的相处

33:41.890 --> 33:42.850
宽度是100%

33:44.610 --> 33:45.290
overflow y

33:47.610 --> 33:48.050
screw

33:49.490 --> 33:50.810
boss sizing

33:50.810 --> 33:51.530
boss

33:52.610 --> 33:53.210
placing

33:53.210 --> 33:54.130
relative

33:54.130 --> 33:54.370
好了

33:54.370 --> 33:55.810
那这里边的blogtoc

33:55.810 --> 33:56.690
它就不需要宽度了

33:56.690 --> 33:58.410
宽度100%就OK了

33:58.410 --> 33:59.370
宽度100%

33:59.370 --> 33:59.930
OK

33:59.930 --> 34:00.770
overflow y

34:00.770 --> 34:01.890
这些都不一样了

34:01.890 --> 34:02.970
你外面有那个

34:04.090 --> 34:05.170
有那个

34:05.170 --> 34:05.730
轨动条

34:06.930 --> 34:08.050
其他的

34:08.050 --> 34:08.450
看一下

34:08.450 --> 34:09.050
pandy

34:10.370 --> 34:11.290
这些都没什么问题

34:12.690 --> 34:13.290
包装不了了

34:14.650 --> 34:15.330
没什么问题

34:15.330 --> 34:16.690
其实这些东西

34:16.690 --> 34:17.810
我都可以放到外面

34:17.810 --> 34:18.610
对吧

34:18.610 --> 34:21.660
都可以放到外面

34:21.660 --> 34:22.940
这些样式这些东西

34:22.940 --> 34:24.500
你不一定按照我的来

34:24.500 --> 34:25.340
你自己去调整

34:26.820 --> 34:27.820
放到外面来

34:27.820 --> 34:29.540
这里边其实就不需要上了

34:30.580 --> 34:31.180
不需要上了

34:31.180 --> 34:32.340
宽度本身就100%

34:32.340 --> 34:32.780
对吧

34:32.780 --> 34:33.060
OK

34:34.980 --> 34:35.500
好了

34:35.500 --> 34:36.740
我们看一下

34:36.740 --> 34:38.500
这样子就把toc传过来了

34:38.500 --> 34:44.420
这个东西先不要

34:44.420 --> 34:45.660
你看宽度就差不多了

34:45.660 --> 34:46.140
对吧

34:46.140 --> 34:47.060
文章分类

34:47.060 --> 34:48.020
这里不是文章分类

34:48.020 --> 34:50.870
是目录

34:50.870 --> 34:50.990
好

34:50.990 --> 34:52.350
那下面就显示目录

34:52.350 --> 34:53.270
什么数据传过来了

34:53.270 --> 34:54.630
他就把这个toc传过来了

34:54.630 --> 34:55.710
我们来看一下这个组件书

34:56.590 --> 34:58.950
有的时候做的搞不清楚的数据逻辑

34:58.950 --> 35:00.350
就把组件书拿出来好好看一下

35:01.750 --> 35:02.190
detail

35:02.190 --> 35:04.630
near out里边有个blogtoc

35:04.630 --> 35:06.790
你看是不是传了个toc数据过来

35:06.790 --> 35:08.470
那么我要把这个数据干嘛呢

35:08.470 --> 35:10.630
转换成一种他能

35:10.630 --> 35:12.630
这个组件能识别的格式

35:12.630 --> 35:13.310
交给他

35:13.310 --> 35:14.230
对不对

35:14.230 --> 35:15.430
那么这个组件人识别什么格式呢

35:15.430 --> 35:16.070
就是个nest

35:17.070 --> 35:19.070
就是有name属性

35:19.070 --> 35:20.430
有意思生那个属性

35:20.430 --> 35:21.390
所以有这些东西

35:21.390 --> 35:21.910
对吧

35:21.910 --> 35:23.550
那么我们现在给他的数据里面

35:23.550 --> 35:25.590
无非就是没有意思生那个属性

35:25.590 --> 35:26.230
是吧

35:26.230 --> 35:27.190
其他都是有的

35:27.190 --> 35:29.230
意思生那个属性是没有的

35:29.230 --> 35:29.790
好

35:29.790 --> 35:31.190
那么我们来处理一下吧

35:31.190 --> 35:36.840
这里边如果说我们原封不动的给他toc

35:36.840 --> 35:37.960
可不可以呢

35:37.960 --> 35:38.800
当然是可以的

35:38.800 --> 35:39.480
你看呀

35:39.480 --> 35:40.760
至于已经出来了

35:40.760 --> 35:42.760
原封中的给他toc

35:42.760 --> 35:44.600
只不过他没有选中效果

35:44.600 --> 35:46.160
他不知道哪一个选中

35:47.120 --> 35:49.240
那么关键是到底哪一个选中了

35:49.240 --> 35:51.440
这个还不是一个简单的问题

35:51.440 --> 35:53.080
他取决于啥呀

35:53.080 --> 35:54.720
他不仅取决于地址栏

35:54.720 --> 35:56.920
要说地址栏里边有该数

35:56.920 --> 35:58.120
该数里边

35:58.120 --> 35:58.760
嗯

35:58.760 --> 35:59.360
我们这样吧

35:59.360 --> 36:00.800
我们先暂时这样子

36:00.800 --> 36:01.120
然后呢

36:01.120 --> 36:02.600
他不是一个点击事件吗

36:02.600 --> 36:03.480
生那个属

36:03.480 --> 36:04.200
点击事件

36:04.200 --> 36:06.240
我们handle生那个属

36:06.240 --> 36:07.800
我们来处理下一个点击事件

36:07.800 --> 36:09.800
我们先看一下点击事件该怎么写

36:09.800 --> 36:10.800
看了点击事件过后呢

36:10.800 --> 36:11.320
你就知道了

36:11.320 --> 36:13.200
这个选中状态跟什么东西有关系

36:14.200 --> 36:17.200
那么他会给我们一个对象

36:17.200 --> 36:18.920
这是我们之前写的主线

36:18.920 --> 36:19.120
啊

36:19.120 --> 36:22.020
右键检查

36:22.020 --> 36:24.260
控材

36:24.260 --> 36:25.460
点了过后你看

36:25.460 --> 36:26.740
不得是一个对象吗

36:26.740 --> 36:28.300
anchor name

36:28.300 --> 36:30.420
点这个不得是个对象吗

36:30.420 --> 36:32.980
anchor sure name

36:32.980 --> 36:34.740
我们要做啥事啊

36:34.740 --> 36:36.900
我们只是要改变这个地址的

36:36.900 --> 36:38.020
南东的哈希

36:38.020 --> 36:38.820
对不对

36:38.820 --> 36:39.940
是不是只改弄哈希

36:39.940 --> 36:42.340
比方说你这个东西

36:42.340 --> 36:43.740
你是不是把哈希改为什么

36:44.180 --> 36:47.040
改为这个

36:47.040 --> 36:48.440
他是不是跳着来了

36:48.440 --> 36:49.200
为什么跳着来了

36:49.200 --> 36:50.360
因为我们的内容部分

36:50.360 --> 36:52.160
他对应这个哈希值

36:52.160 --> 36:53.960
看没id他为这个

36:53.960 --> 36:55.080
所以说我们这里要做的事情

36:55.080 --> 36:56.120
其实很简单

36:56.120 --> 36:58.640
就是location

36:58.640 --> 36:59.520
改动它的哈希

36:59.520 --> 37:00.480
哈希为什么呢

37:00.480 --> 37:03.960
哈希为item.anchor

37:05.760 --> 37:06.720
好保存

37:06.720 --> 37:08.040
你看一下啊

37:08.040 --> 37:11.300
点这个刷新

37:11.300 --> 37:13.180
点这个你看点这个

37:13.180 --> 37:14.660
所以可以跳转了

37:14.660 --> 37:15.980
跳转位置了

37:15.980 --> 37:18.980
那么现在谷歌为大家选中状态

37:18.980 --> 37:20.620
是什么了

37:20.620 --> 37:23.140
选中了是不是跟这个东西有关系

37:23.140 --> 37:24.940
跟哈希值有关系

37:24.940 --> 37:26.220
对吧

37:26.220 --> 37:27.140
但是啊

37:27.140 --> 37:29.100
还不仅仅跟他有关系

37:29.100 --> 37:32.180
你看这边

37:32.180 --> 37:33.500
哎哈希值为他

37:33.500 --> 37:34.660
他是不是选中了

37:34.660 --> 37:36.860
接下来我们往下翻

37:36.860 --> 37:38.100
哈希值变没

37:38.100 --> 37:40.300
没变吧

37:40.300 --> 37:41.060
你看这里

37:41.060 --> 37:42.420
这个选中的变没变

37:42.420 --> 37:46.480
是不是再变

37:46.480 --> 37:49.080
你看到这

37:49.120 --> 37:51.520
到这

37:51.520 --> 37:52.960
上翻

37:52.960 --> 37:54.720
所以选中状态再变

37:54.720 --> 37:56.000
但是哈希值没变

37:56.000 --> 37:56.840
所以选中状态呢

37:56.840 --> 37:58.560
还跟其他的东西有关系

37:58.560 --> 37:59.560
因此这个选中状态呢

37:59.560 --> 38:01.040
我们暂时

38:01.040 --> 38:03.240
还不知道该怎么处理

38:03.240 --> 38:04.320
我们后边再说

38:04.320 --> 38:07.000
这里呢还需要一些技巧

38:07.000 --> 38:08.240
我们后边再说

38:08.240 --> 38:10.280
因为目前这个问题在于什么呢

38:10.280 --> 38:13.120
因为这个滚动条不是这个组件的

38:13.120 --> 38:14.120
是另外一个组件的

38:14.120 --> 38:15.680
是他的兄弟组件

38:15.680 --> 38:16.680
也不是他的副组件

38:16.680 --> 38:17.320
也不是他的子录件

38:17.320 --> 38:18.280
是他的兄弟组件

38:18.480 --> 38:20.920
给他没有直接关系的组件

38:20.920 --> 38:22.480
那么这个时候

38:22.480 --> 38:24.000
你要这两个组件之间通信

38:24.000 --> 38:25.960
又不能光通过地址栏

38:25.960 --> 38:28.000
地址栏也没有变化呀

38:28.000 --> 38:28.280
对吧

38:28.280 --> 38:29.320
他只是滚动条变化了

38:29.320 --> 38:30.680
地址栏也没有变化

38:30.680 --> 38:32.360
那么这个时候通信的时候呢

38:32.360 --> 38:33.560
会遇到一些问题

38:33.560 --> 38:35.000
我们之后再说

38:35.000 --> 38:35.400
OK

38:35.400 --> 38:37.920
我们大概的呢就做成这个样子

38:37.920 --> 38:40.040
当然有很多的不是很完善的地方

38:40.040 --> 38:41.160
我们慢慢来

38:41.160 --> 38:42.120
当然我们如果说

38:42.120 --> 38:44.520
跳转的时候觉得跳转的太突兀了

38:44.520 --> 38:47.440
你可以给他设置一个滚动条的一块

38:47.480 --> 38:49.760
具有滚动条的是不是在这

38:49.760 --> 38:51.440
这个made content的具有滚动条

38:51.440 --> 38:51.880
对吧

38:51.880 --> 38:53.200
我们给他设置一个这个

38:53.200 --> 38:56.760
叫做scroll behavior smooth

38:56.760 --> 38:58.160
学过了对吧

38:58.160 --> 38:58.960
点击

38:58.960 --> 39:01.480
稍息一时啊

39:01.480 --> 39:02.320
点击

39:02.320 --> 39:04.560
你看是不跳过来了

39:04.560 --> 39:04.960
对吧

39:04.960 --> 39:06.280
当然你也可以复杂一点的话

39:06.280 --> 39:08.120
可以用GS来去控制这个滚动条

39:08.120 --> 39:10.960
那个就比较麻烦一点了

39:10.960 --> 39:11.280
好了

39:11.280 --> 39:13.360
这是这个页面

39:13.360 --> 39:14.120
还没做完

39:14.160 --> 39:18.400
倒是我们把这一部分比较简单的先给他搞定

39:18.400 --> 39:18.680
好

39:18.680 --> 39:20.400
这是这节课的内容

