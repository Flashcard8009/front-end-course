WEBVTT

00:00.110 --> 00:03.710
好 现在呢 我们又回到咱们这个项目

00:03.710 --> 00:05.910
有了前面两节课的知识呢

00:05.910 --> 00:10.110
我们现在可以把这个网站的全局设置搞定了

00:10.110 --> 00:12.310
在我们的接客文档里边

00:12.310 --> 00:14.110
这里有个全局设置

00:14.110 --> 00:17.910
就是我们网站里边什么标题啊

00:17.910 --> 00:19.910
我们该有的头像啊可以插不地址啊

00:19.910 --> 00:21.110
就是这些东西啊

00:21.110 --> 00:22.910
那么从逻辑上来说

00:22.910 --> 00:24.310
甭管你的组件

00:24.310 --> 00:26.710
目前哪些组件用到了这个全局设置

00:26.710 --> 00:28.110
这个全局设置本身

00:28.110 --> 00:30.710
就应该是一个全局共享的数据

00:30.710 --> 00:32.710
因为我也不清楚将来这个组件结构

00:32.710 --> 00:34.710
会不会突然有多了一个组件出来

00:34.710 --> 00:35.710
要用到一个全局设置

00:35.710 --> 00:36.110
对吧

00:36.110 --> 00:37.510
我们往往全局设置啊

00:37.510 --> 00:38.610
当前登录用户啊

00:38.610 --> 00:40.710
都是一些共享的数据

00:40.710 --> 00:41.110
所以说呢

00:41.110 --> 00:41.910
我这里呢

00:41.910 --> 00:45.810
打算用vix来保存这个全局设置

00:45.810 --> 00:49.110
这是我们要做的第一件事啊

00:49.110 --> 00:51.910
全我们的共享数据

00:51.910 --> 00:54.310
一个是全局设置

00:54.310 --> 00:55.410
全局设置这个API

00:55.410 --> 00:57.010
那我其实已经写好了在这

00:58.810 --> 01:00.010
这个东西没有什么技术含量

01:00.010 --> 01:00.710
我就直接写了

01:00.710 --> 01:01.910
按照一个接客稳当

01:01.910 --> 01:02.410
我这里呢

01:02.410 --> 01:04.610
就获取全局设置就完事了

01:04.610 --> 01:05.010
然后呢

01:05.010 --> 01:05.410
同样的

01:05.410 --> 01:06.710
我提供了一个默克数据

01:06.710 --> 01:09.010
因为我们目前没有服务器啊

01:09.010 --> 01:09.510
默克数据呢

01:09.510 --> 01:10.910
就默克了一些数据

01:10.910 --> 01:12.410
按照一个接客稳当的要求

01:12.410 --> 01:13.410
这里边有哪些数据

01:13.410 --> 01:15.410
我就模拟了一些

01:15.410 --> 01:16.610
当然你们可以在这里去

01:16.610 --> 01:17.610
感一下你的默克数据啊

01:17.610 --> 01:19.210
这些都无所谓

01:19.210 --> 01:19.810
然后我这边呢

01:19.810 --> 01:21.210
去测试一下啊

01:21.210 --> 01:22.010
这里

01:22.010 --> 01:22.810
导入给cd

01:22.810 --> 01:23.710
那就测试了一下

01:23.710 --> 01:25.010
然后我们的网站上的去看一下

01:26.010 --> 01:26.410
检查

01:27.210 --> 01:27.910
控制台里边

01:27.910 --> 01:29.510
你看多了一个奥特格什么

01:29.510 --> 01:31.510
这就是我们的获取的全局设置

01:31.510 --> 01:33.510
这API我们先打通

01:33.510 --> 01:35.910
这是我们第一个要共享的数据啊

01:35.910 --> 01:36.710
另外一个呢

01:36.710 --> 01:38.210
其实我观察了一下

01:38.210 --> 01:39.210
在首页这里

01:40.310 --> 01:41.610
首页这里像这个数据

01:42.810 --> 01:43.410
像这个

01:44.210 --> 01:45.210
首页的这个叫啥

01:45.210 --> 01:45.310
哎

01:45.310 --> 01:46.110
这个玩意

01:46.110 --> 01:47.510
叫首页标语

01:47.510 --> 01:48.310
这个标语呢

01:48.310 --> 01:49.510
他从逻辑上来讲呢

01:49.510 --> 01:50.910
还不算是共享数据

01:50.910 --> 01:52.210
他没有共享对吧

01:52.210 --> 01:53.410
就只有首页能用

01:53.810 --> 01:54.410
但是呢

01:54.410 --> 01:55.410
这个数据呢

01:56.410 --> 01:58.210
他变动的非常非常

01:59.010 --> 01:59.410
少

01:59.410 --> 02:01.210
他就是基本上不变动

02:01.210 --> 02:02.110
偶尔变一下

02:02.110 --> 02:03.210
这个首页标语

02:03.210 --> 02:03.810
所以说如果说

02:03.810 --> 02:04.810
每一次都从

02:04.810 --> 02:06.110
都带手回到首页的时候

02:06.110 --> 02:07.510
都重新去获取一下

02:07.510 --> 02:08.610
其实没有必要

02:08.610 --> 02:09.410
说这个数据呢

02:09.410 --> 02:09.910
我希望呢

02:09.910 --> 02:11.610
就也把它保存在仓库里边

02:11.610 --> 02:12.410
就有的时候呢

02:12.410 --> 02:13.810
仓库里边保存的数据呢

02:13.810 --> 02:14.610
也不一定是

02:14.610 --> 02:16.310
共享的

02:16.310 --> 02:17.910
有可能我们需要就是

02:17.910 --> 02:19.010
保存一份

02:19.010 --> 02:19.810
将来呢

02:19.810 --> 02:21.110
在网站

02:21.110 --> 02:22.410
不刷新的情况下的

02:22.510 --> 02:23.910
我们就不再重新去获取了

02:23.910 --> 02:24.510
这种数据

02:24.510 --> 02:25.810
那么就独此一份

02:25.810 --> 02:27.510
我们也可以把它保存到

02:27.510 --> 02:28.010
仓库里边

02:28.010 --> 02:29.510
当然也可以有别的手段

02:29.510 --> 02:30.710
那我把这个数据呢

02:30.710 --> 02:32.010
也保存到仓库里边

02:32.010 --> 02:33.310
就是我们的首页标语

02:35.930 --> 02:36.830
好

02:36.830 --> 02:37.930
那么做的话

02:37.930 --> 02:39.430
我们首先来搞定

02:39.430 --> 02:40.930
要不然搞定首页标语吧

02:40.930 --> 02:42.030
因为首先我们之前都做好了

02:42.030 --> 02:42.530
对吧

02:42.530 --> 02:42.830
好

02:42.830 --> 02:44.130
我们在这里呢

02:44.130 --> 02:44.730
安装好了

02:44.730 --> 02:45.330
已经安装好了

02:45.330 --> 02:46.030
这个vix

02:46.830 --> 02:47.730
已经安装好了啊

02:47.730 --> 02:48.230
在这

02:48.830 --> 02:49.930
我们直接弄就行了

02:49.930 --> 02:51.130
我们把这个注释掉

02:51.130 --> 02:52.230
这个测试呆嘛注释掉

02:53.230 --> 02:54.530
现在呢

02:54.530 --> 02:56.230
我们到这个工程里边

02:56.230 --> 02:57.630
去新建一个文件夹

02:57.630 --> 02:58.430
叫做Stone

02:59.630 --> 03:01.030
Stone里边我们提供一个

03:01.030 --> 03:02.130
index.js

03:02.130 --> 03:03.230
来导出一个仓库

03:04.730 --> 03:05.130
然后呢

03:05.130 --> 03:06.230
另外两个模块呢

03:06.230 --> 03:09.430
就是提供一个是全居设置

03:09.430 --> 03:10.530
以后我们要做的

03:13.110 --> 03:13.610
还有一个呢

03:13.610 --> 03:14.810
就是首页标语啊

03:14.810 --> 03:16.210
边那也是我们要做的

03:16.210 --> 03:18.310
就这么两个数据模块

03:18.310 --> 03:20.510
我们首先搞定index吧

03:21.010 --> 03:22.110
导入这个vix

03:23.110 --> 03:25.510
导入这个vix

03:28.110 --> 03:28.710
然后呢

03:28.710 --> 03:31.480
use vix

03:33.180 --> 03:33.680
接下来呢

03:33.680 --> 03:34.480
就是

03:35.780 --> 03:36.680
导出一个仓库

03:37.680 --> 03:39.180
export default

03:40.480 --> 03:42.280
留一个vix stone

03:43.080 --> 03:44.080
这里边写配置啊

03:44.080 --> 03:45.080
其实就是两个模块

03:45.080 --> 03:46.180
两个模块导进了

03:46.180 --> 03:47.780
一个是banner

03:51.360 --> 03:53.660
一个是那个setting

03:56.220 --> 03:57.720
这边把模块导进了啊

03:57.720 --> 03:59.920
modules banner

04:00.620 --> 04:01.120
setting

04:01.120 --> 04:01.520
然后呢

04:01.520 --> 04:02.520
把加上一个strict

04:03.320 --> 04:03.920
稍微去

04:04.920 --> 04:05.420
好了

04:05.820 --> 04:06.120
现在呢

04:06.120 --> 04:07.320
我们就来在

04:07.320 --> 04:09.320
Made.js里边去使用这个

04:10.520 --> 04:11.820
引入这个仓库了

04:11.820 --> 04:12.320
Stone

04:14.920 --> 04:15.920
把这Stone放到这

04:18.780 --> 04:19.280
行了

04:19.280 --> 04:21.280
然后我们在英面上去看一下啊

04:21.280 --> 04:22.480
至少现在这个vix呢

04:22.480 --> 04:23.480
就已经出来了

04:25.480 --> 04:25.880
在这

04:26.380 --> 04:26.480
好

04:26.480 --> 04:27.780
你看bass data是不是出来了

04:27.780 --> 04:28.380
一个banner

04:28.380 --> 04:29.080
一个setting

04:29.180 --> 04:30.580
目前是两个空的对象

04:30.580 --> 04:31.280
啥都没有

04:31.280 --> 04:32.780
现在我们来搞进这个banner吧

04:32.980 --> 04:33.680
这个banner呢

04:33.680 --> 04:35.380
我们之前

04:36.680 --> 04:37.980
这个接个稳当里面我看一下

04:38.380 --> 04:39.180
所谓标语

04:39.980 --> 04:41.180
就是一个数组对吧

04:41.280 --> 04:41.880
那行了

04:41.880 --> 04:42.880
那我们这个banner呢

04:42.880 --> 04:44.180
我们就直接导出吧

04:44.480 --> 04:45.480
export default

04:45.980 --> 04:47.580
导出一个对象setting的

04:48.080 --> 04:48.980
一个loading效果

04:48.980 --> 04:49.380
对吧

04:49.980 --> 04:50.980
默认为force

04:51.380 --> 04:51.680
然后呢

04:51.680 --> 04:52.580
有一个数据

04:52.580 --> 04:53.480
banner的数据

04:53.780 --> 04:55.080
banner数据我就用data吧

04:55.480 --> 04:56.180
命名空间

04:56.180 --> 04:57.080
下面的banner数据

04:57.080 --> 04:58.280
它默认是一个空数组

04:58.780 --> 04:59.180
接下来呢

04:59.180 --> 05:00.180
我们这里呢

05:00.180 --> 05:01.580
给它加上一个namestvest

05:03.280 --> 05:04.080
把稍微去

05:05.960 --> 05:06.360
对吧

05:07.160 --> 05:08.160
命名空间打开

05:08.560 --> 05:10.460
接下来我们该写上这个mortitions

05:11.860 --> 05:13.560
我们有哪些数据变化呢

05:13.560 --> 05:14.560
一个是set loading

05:15.860 --> 05:17.760
就是set payload

05:17.760 --> 05:19.060
这个东西没什么好说的了啊

05:19.060 --> 05:20.360
你们之前的代码写过的话

05:20.360 --> 05:21.760
这些东西都能理解了

05:22.160 --> 05:22.760
set

05:24.160 --> 05:24.760
loading

05:25.760 --> 05:27.160
稍微 payload

05:28.160 --> 05:29.160
对了

05:29.160 --> 05:30.160
这就哪里写错了

05:33.060 --> 05:33.460
哦

05:33.460 --> 05:35.260
这个地方我刚写上函数了

05:36.060 --> 05:37.060
然后呢

05:37.060 --> 05:38.060
一个是set data

05:38.860 --> 05:40.060
set payload

05:41.660 --> 05:44.060
set data

05:44.660 --> 05:45.260
payload

05:45.960 --> 05:46.260
好了

05:46.260 --> 05:47.560
然后写上x形式

05:47.560 --> 05:48.660
两个数据变化

05:48.660 --> 05:49.160
一个是data

05:49.160 --> 05:49.660
一个是data

05:49.660 --> 05:50.760
一个是登对loading的

05:51.060 --> 05:51.460
然后呢

05:51.460 --> 05:52.160
副作用操作呢

05:52.160 --> 05:53.260
其实就是

05:53.460 --> 05:54.260
获取 banner

05:54.260 --> 05:55.560
也没有什么其他副作用操作

05:55.560 --> 05:55.960
对吧

05:56.060 --> 05:57.360
fetch banner

05:59.360 --> 06:00.260
目前的上下文

06:00.760 --> 06:01.660
有没有参数了

06:01.660 --> 06:02.860
有没有额外的信息呢

06:02.860 --> 06:03.860
没有额外的信息啊

06:03.860 --> 06:05.060
直接获取完事了

06:05.060 --> 06:05.460
我们这里呢

06:05.460 --> 06:06.860
把它是一个异步函数啊

06:06.860 --> 06:07.960
因为它要去交往API

06:08.960 --> 06:09.460
导入

06:10.660 --> 06:12.760
from api

06:14.360 --> 06:14.860
banner

06:15.260 --> 06:16.760
banner里边好像我看一下啊

06:16.760 --> 06:17.860
之前的API里边

06:18.260 --> 06:18.960
有点忘了

06:19.560 --> 06:20.660
banner里边就一个函数

06:20.660 --> 06:21.660
走吧 get banners

06:23.060 --> 06:23.860
好我们这里的

06:24.660 --> 06:26.160
首先把这个楼顶设为去

06:27.160 --> 06:27.760
context

06:27.760 --> 06:28.360
command

06:29.960 --> 06:30.460
loading

06:31.160 --> 06:31.660
把设

06:32.860 --> 06:33.560
set楼顶

06:35.530 --> 06:36.330
把设为去

06:37.130 --> 06:37.730
然后呢

06:37.730 --> 06:39.130
再去等待啊

06:39.130 --> 06:40.130
拿去这个 banner

06:40.230 --> 06:41.130
get banners

06:41.930 --> 06:43.330
拿去服务器的响应结果

06:43.830 --> 06:44.830
拿到响应结果过后呢

06:44.830 --> 06:46.130
我再去设置

06:46.330 --> 06:46.630
set

06:46.830 --> 06:47.430
command

06:48.830 --> 06:49.630
set data

06:50.130 --> 06:51.630
把设为服务器的响应结果

06:51.830 --> 06:52.330
然后呢

06:52.330 --> 06:53.230
再去

06:53.530 --> 06:54.130
command

06:54.230 --> 06:55.230
把这个楼顶的

06:55.530 --> 06:56.230
set to force

06:57.830 --> 06:58.230
OK

06:58.530 --> 06:59.130
那么这里呢

06:59.130 --> 07:00.430
就把这个 banner的

07:00.430 --> 07:01.330
仓库写好了

07:01.430 --> 07:01.930
写好了过后呢

07:01.930 --> 07:02.530
我们再改

07:02.530 --> 07:04.130
回去那个页面啊

07:04.230 --> 07:05.930
到后面页面去改造一下

07:06.930 --> 07:07.430
在这

07:07.830 --> 07:08.630
之前呢

07:08.630 --> 07:09.430
我们在

07:10.930 --> 07:11.630
之前呢

07:11.730 --> 07:13.430
我们在这里用了这个mixin

07:13.430 --> 07:13.930
对不对

07:13.930 --> 07:14.430
那么现在呢

07:14.430 --> 07:15.730
就没有必要用mixin了啊

07:15.730 --> 07:17.130
因为我们的那个就是

07:17.930 --> 07:19.530
现在跑到仓库里面去了

07:19.530 --> 07:19.930
对吧

07:20.430 --> 07:21.330
不需要这个mixin了

07:21.330 --> 07:22.130
我们把这个去掉

07:23.130 --> 07:24.230
去掉啊

07:25.130 --> 07:25.730
呃

07:25.730 --> 07:27.130
我们这边呢

07:28.030 --> 07:28.530
这里呢

07:28.530 --> 07:29.930
有两个有两个数据

07:29.930 --> 07:30.930
一个是banner

07:31.130 --> 07:32.130
banner的数据

07:32.230 --> 07:32.930
在哪呢

07:32.930 --> 07:33.630
在这啊

07:33.630 --> 07:35.530
我们在模板里面用到的

07:35.630 --> 07:36.130
然后呢

07:36.130 --> 07:37.330
是一个noting效果

07:37.330 --> 07:37.630
对吧

07:37.630 --> 07:38.830
这里用了一直noting

07:38.930 --> 07:39.130
好

07:39.130 --> 07:39.730
我们这里呢

07:39.730 --> 07:41.030
在computed里边

07:41.030 --> 07:41.430
就

07:41.930 --> 07:43.030
从仓库里边去取

07:43.030 --> 07:44.130
这两个数据完事了

07:45.130 --> 07:45.330
好

07:45.330 --> 07:45.630
来吧

07:45.630 --> 07:46.330
来取一遍

07:46.530 --> 07:47.330
computed

07:49.530 --> 07:50.330
computed

07:52.130 --> 07:53.130
这里有是吧

07:54.130 --> 07:54.730
呃

07:54.730 --> 07:55.930
之前mixin里边

07:55.930 --> 07:57.130
这个东西已经不需要了

07:57.530 --> 07:58.730
这东西是不是不需要了

07:58.730 --> 08:00.830
知道我们这里不用去获取API数据了

08:01.830 --> 08:02.730
is banners

08:03.830 --> 08:04.730
不需要了啊

08:04.730 --> 08:06.130
在computed里边

08:06.130 --> 08:06.930
跑到去了

08:07.430 --> 08:08.330
在这啊

08:08.330 --> 08:10.030
我们可以使用map state

08:11.430 --> 08:13.330
导入vux

08:16.430 --> 08:17.630
map state

08:20.570 --> 08:21.170
在这里

08:21.170 --> 08:22.370
在哪呢

08:22.370 --> 08:22.870
在这

08:24.070 --> 08:24.870
map state

08:24.870 --> 08:26.570
命名空间那就是banner

08:27.470 --> 08:27.970
然后呢

08:27.970 --> 08:28.970
我要获取什么数据呢

08:28.970 --> 08:29.970
我两个数据都要要

08:29.970 --> 08:30.970
一个是node

08:31.770 --> 08:33.170
一个是那个

08:33.170 --> 08:33.770
data

08:34.170 --> 08:34.970
两个数据都要要

08:34.970 --> 08:37.570
知道我们直接从仓库里边拿这个两个数据完事了

08:37.570 --> 08:38.270
那么node

08:38.270 --> 08:39.570
我们在模板上去选择到这

08:41.070 --> 08:41.470
node

08:41.470 --> 08:42.170
就选择到这

08:42.770 --> 08:43.170
data

08:43.170 --> 08:43.770
就在这

08:43.970 --> 08:44.370
对吧

08:44.370 --> 08:44.970
那就完事了

08:44.970 --> 08:46.070
直接从仓库里边拿

08:46.670 --> 08:47.270
没问题吧

08:47.470 --> 08:48.270
好保存啊

08:48.270 --> 08:49.270
我们现在再看一下

08:49.870 --> 08:50.470
稍息

08:51.770 --> 08:52.770
现在他看不见了

08:52.770 --> 08:53.170
为什么呢

08:53.170 --> 08:54.570
因为这个状态里边

08:54.770 --> 08:55.870
目前这个node

08:55.870 --> 08:56.470
vforce

08:56.570 --> 08:57.770
data呢是一个空数据

08:58.370 --> 09:00.470
那么我们现在就需要去拿这个数据了

09:00.470 --> 09:00.970
对不对

09:01.570 --> 09:02.770
需要去拿这个数据

09:02.770 --> 09:04.470
拿这个数据怎么拿呢

09:05.070 --> 09:06.070
怎么拿什么

09:06.070 --> 09:07.270
什么时候去拿呢

09:07.670 --> 09:09.770
是不是在首页加载的时候啊

09:09.970 --> 09:10.970
就首页加载的时候

09:10.970 --> 09:11.970
我们就可以拿这个数据

09:11.970 --> 09:13.770
所以说我们这里去写一个规定的

09:16.770 --> 09:18.670
当我们这个首页加载的时候呢

09:18.670 --> 09:19.870
我们去触发这个什么

09:19.870 --> 09:20.770
触发这个x

09:21.870 --> 09:22.470
this

09:23.170 --> 09:23.770
store

09:24.570 --> 09:25.370
dispatch

09:26.270 --> 09:26.970
什么x呢

09:26.970 --> 09:28.070
就是banner

09:28.970 --> 09:30.770
fetch

09:31.170 --> 09:31.770
banner

09:32.370 --> 09:33.370
触发这个x

09:33.570 --> 09:35.070
那么他就会改变仓库数据

09:35.570 --> 09:36.470
好 刷新啊

09:36.770 --> 09:37.270
看看

09:38.770 --> 09:39.670
是不是出来了

09:39.770 --> 09:40.570
是不效果一样的

09:40.570 --> 09:42.070
只不过把数据放到仓库里边

09:42.070 --> 09:42.870
其他都一样

09:43.270 --> 09:44.570
那现在能够解决这个问题吗

09:44.570 --> 09:45.170
就是我们回到

09:45.170 --> 09:47.370
从文章又回到首页的时候

09:48.070 --> 09:49.570
你看他是不是还要重新去拿

09:49.570 --> 09:50.770
尽管之前那个数据在

09:50.770 --> 09:52.570
但是是不是还要重新去拿一次

09:52.770 --> 09:53.370
对不对

09:53.370 --> 09:54.170
那我们这里呢

09:54.170 --> 09:56.170
就在仓库里面统一处理一下啊

09:57.270 --> 09:58.770
因为我们现在放到仓库里边去了

09:58.870 --> 10:00.070
在仓库里面统一处理一下

10:00.070 --> 10:02.070
仓库里边让我们再加上一个属性

10:02.370 --> 10:03.270
叫做

10:05.270 --> 10:07.470
当前就是是否已经拿过了

10:07.970 --> 10:09.070
是否已经拿过了

10:09.070 --> 10:10.070
或者是我们就看一下

10:10.070 --> 10:12.170
这个data的数组是不是空的

10:12.170 --> 10:12.970
如果是空的的话

10:12.970 --> 10:13.670
我们就重新拿

10:13.670 --> 10:14.770
如果不是空的的话

10:14.770 --> 10:15.470
那我们就

10:15.970 --> 10:16.370
在哪

10:16.370 --> 10:18.270
就不需要拿了

10:18.270 --> 10:19.370
所以我们在fetch banner

10:19.370 --> 10:20.570
可以判断一下啊

10:20.570 --> 10:21.770
当前的状态

10:21.970 --> 10:24.070
如果说当前的stats

10:24.870 --> 10:26.170
状态里边的data

10:27.670 --> 10:28.270
nance

10:29.070 --> 10:29.770
有值

10:30.170 --> 10:31.270
那么我们就不需要拿了

10:31.370 --> 10:31.870
对他

10:33.270 --> 10:34.270
如果说没有值的话

10:34.270 --> 10:35.270
那么再重新去拿

10:35.970 --> 10:36.270
好吧

10:36.270 --> 10:37.270
我们这样子改了一下

10:37.270 --> 10:38.170
现在我们再刷新

10:38.370 --> 10:39.070
第一次的时候

10:39.070 --> 10:40.170
我们是不是拿了个数据

10:40.470 --> 10:40.970
然后呢

10:40.970 --> 10:41.570
到文章

10:41.570 --> 10:42.770
然后再回去的时候

10:42.870 --> 10:43.970
我们有没有回去过后

10:43.970 --> 10:45.670
是不是首页还是会触发那个

10:46.370 --> 10:46.870
x型

10:46.970 --> 10:47.470
但是呢

10:47.470 --> 10:48.170
x型里边

10:48.170 --> 10:49.870
他判断现在已经有数据了啊

10:49.970 --> 10:50.970
我就不需要再拿了

10:51.670 --> 10:52.370
点击首页

10:52.370 --> 10:53.570
你看是不是直接就回去了

10:53.870 --> 10:54.370
对吧

10:54.370 --> 10:56.670
这样子的就避免的重复去请求这个东西啊

10:56.670 --> 10:57.370
没有必要

10:57.770 --> 10:57.970
好

10:57.970 --> 10:58.470
这是边了

10:58.470 --> 10:59.370
我们把它搞定

11:00.570 --> 11:00.870
接下来

11:00.870 --> 11:02.570
那么再搞定那个全局设置啊

11:02.670 --> 11:03.470
也非常简单

11:04.770 --> 11:05.370
呃

11:05.770 --> 11:06.970
这肯定要用到API啊

11:06.970 --> 11:08.070
直接导入API吧

11:08.870 --> 11:09.370
说

11:11.170 --> 11:11.970
API

11:13.270 --> 11:13.870
setting

11:14.270 --> 11:15.470
这里边喊一个函数啊

11:15.470 --> 11:16.170
get setting

11:16.770 --> 11:18.570
一个去过去全局设置的函数

11:18.670 --> 11:20.870
然后导出一个仓库配置

11:21.670 --> 11:23.270
他的name space该开启

11:24.270 --> 11:25.070
space

11:25.870 --> 11:26.470
v2

11:26.970 --> 11:28.570
然后他的默认状态

11:28.570 --> 11:29.570
默认状态的话

11:29.570 --> 11:30.670
也有个loading吧

11:31.970 --> 11:33.170
是不是正在夹载中

11:34.670 --> 11:35.670
然后这里呢

11:35.670 --> 11:36.770
有一个data

11:38.370 --> 11:39.870
默认为一个

11:40.870 --> 11:41.770
默认为nav吧

11:42.370 --> 11:42.870
好吧

11:42.870 --> 11:43.970
我们把它默认为nav

11:45.870 --> 11:46.370
ok

11:47.070 --> 11:48.670
接下来我们写个multations

11:50.270 --> 11:52.370
multations

11:53.470 --> 11:54.170
呃

11:54.170 --> 11:55.170
一个sys loading

11:55.870 --> 11:56.970
把这些复制过来了

11:57.070 --> 11:57.870
都差不多

12:00.480 --> 12:01.380
然后action

12:02.580 --> 12:03.380
actions

12:03.780 --> 12:06.180
action 时候就就是有一个就是get setting

12:06.380 --> 12:07.280
就fetch

12:08.480 --> 12:09.180
fetch

12:09.480 --> 12:10.080
呃

12:10.880 --> 12:11.480
setting

12:11.680 --> 12:12.880
获取这个setting

12:13.780 --> 12:15.880
然后呢做法呢跟那个这边也差不多啊

12:15.880 --> 12:17.080
我就直接来了

12:22.220 --> 12:22.520
好

12:22.520 --> 12:24.020
然后这边呢

12:24.420 --> 12:27.420
先提交这个sys loading在get setting

12:27.420 --> 12:28.420
把这个改一下

12:28.420 --> 12:29.420
看一下还有什么呢

12:29.720 --> 12:30.520
set data

12:30.520 --> 12:31.320
好久没查了

12:31.520 --> 12:32.820
那么这个仓库就写完了

12:33.520 --> 12:34.020
这边

12:34.820 --> 12:36.920
那么这个action 什么时候触发呢

12:36.920 --> 12:37.620
在这边啊

12:37.620 --> 12:39.320
这个全局网站设置

12:39.320 --> 12:40.520
因为全局网站设置呢

12:40.520 --> 12:41.320
是可能会

12:41.320 --> 12:43.020
任何逐渐都可能会需要的

12:43.020 --> 12:44.120
那么像这种数据啊

12:44.120 --> 12:45.020
就一开始

12:45.220 --> 12:46.120
就需要加载出来

12:46.120 --> 12:47.400
这个东西要具体情况

12:47.400 --> 12:48.220
具体分析啊

12:48.220 --> 12:49.620
像这个全局网站数据呢

12:49.620 --> 12:51.120
一开始是比较加载出来

12:51.120 --> 12:52.420
所以说我们在媒点结实里面

12:52.420 --> 12:53.620
一开始就去触发一下

12:54.320 --> 12:55.320
一开始就触发

12:55.620 --> 12:56.320
stone

12:56.320 --> 12:57.120
dispatch

12:57.920 --> 12:58.920
触发那个

13:00.320 --> 13:00.920
setting

13:01.620 --> 13:02.120
fetch

13:03.320 --> 13:03.820
setting

13:04.620 --> 13:05.520
好保存啊

13:06.320 --> 13:07.120
现在我们来看一下

13:08.320 --> 13:08.820
views

13:12.370 --> 13:13.470
哎一开始怎么没触发

13:13.470 --> 13:14.070
刷新的时候

13:16.950 --> 13:18.450
哎没有触发是吧

13:20.250 --> 13:23.050
这里我触发了这个setting

13:23.250 --> 13:24.150
fetch setting

13:24.550 --> 13:26.450
这里没有没有看到呢

13:27.950 --> 13:28.750
没有观察到呢

13:28.750 --> 13:29.550
我看一下啊

13:31.460 --> 13:33.160
嗯这里是怎么回事

13:34.560 --> 13:35.260
有爆出

13:35.560 --> 13:37.260
他说context is not defined

13:38.160 --> 13:39.860
哦在setting里面啊

13:40.160 --> 13:41.060
他说context

13:41.060 --> 13:42.660
哦在这里没有写参数

13:43.260 --> 13:43.860
好刷新

13:44.960 --> 13:45.560
views

13:46.260 --> 13:48.160
你看setting里面是不是也设置好了

13:48.260 --> 13:48.760
setting

13:49.560 --> 13:51.060
啊setting里面就有数据了

13:51.860 --> 13:54.160
好那么我们接下来就是在我们网页

13:54.160 --> 13:55.760
就是看我们网页上哪些组件

13:55.760 --> 13:57.260
需要用到这个全局设置

13:57.460 --> 13:58.560
一个个来吧

13:59.360 --> 14:01.460
就这边这边这个区域啊慢慢来

14:01.560 --> 14:02.260
这边那个区域呢

14:02.260 --> 14:03.660
是我们以前写的一个组件

14:03.660 --> 14:05.760
在这里side side

14:06.060 --> 14:07.060
就是我们的这个

14:07.660 --> 14:08.560
网站的

14:09.160 --> 14:09.760
左边蓝

14:10.460 --> 14:12.960
那么这里边肯定要用到很多那个全局设置

14:12.960 --> 14:14.960
就是我们的网站标题对吧

14:15.060 --> 14:15.660
好一个个来吧

14:15.660 --> 14:16.960
我们这里呢computed

14:19.160 --> 14:20.960
拿到这个楼顶效果好像这里用不到

14:20.960 --> 14:21.760
啊用不到就算了

14:21.760 --> 14:23.260
我这里也不需要什么楼顶效果

14:23.860 --> 14:25.460
呃这里我们导入这个map state

14:27.760 --> 14:28.360
views

14:29.660 --> 14:30.360
map state

14:32.480 --> 14:33.680
好这里直接输入啊

14:34.280 --> 14:35.480
明明空间就是setting

14:36.580 --> 14:37.480
我要取什么数据呢

14:37.480 --> 14:38.680
取他的data数据就可以了

14:39.480 --> 14:39.980
来吧

14:39.980 --> 14:42.880
这里呢就是显示的是data.side

14:43.680 --> 14:45.680
title啊这个根据捷口闻到来

14:45.880 --> 14:48.280
这里显示的是全局设置

14:48.680 --> 14:49.880
这里显示side title啊

14:49.880 --> 14:51.680
个人统件的标题显示到这

14:51.880 --> 14:52.680
好保存啊

14:52.680 --> 14:53.280
咱们来看一下

14:54.480 --> 14:57.950
刷新啊是不是显示出来了

14:58.950 --> 15:00.450
呃然后呢

15:01.250 --> 15:02.450
ovata的地址啊

15:02.450 --> 15:03.250
头像地址

15:07.500 --> 15:08.900
这个地方改为data

15:08.900 --> 15:09.600
ovata

15:13.020 --> 15:14.320
啊变这个地址啊

15:15.320 --> 15:17.520
呃然后是这个地方

15:17.720 --> 15:18.320
备案号

15:18.920 --> 15:20.320
备案号是

15:20.320 --> 15:21.720
我看看这里ICP

15:22.920 --> 15:24.220
data icp

15:27.260 --> 15:28.560
好备案号出来了

15:29.060 --> 15:30.560
然后是这里边啊

15:30.560 --> 15:31.760
这里边还要去设置

15:32.860 --> 15:34.460
到这个menu里面

15:34.960 --> 15:36.260
哦menu不是啊

15:36.260 --> 15:38.160
contact里面联系方式

15:38.160 --> 15:40.760
联系方式里面有很多这个就是这些数据

15:40.860 --> 15:42.060
那么这些数据我们都要改

15:43.060 --> 15:44.560
之前是写的玩的

15:44.960 --> 15:45.760
computed

15:46.360 --> 15:48.160
也是一样map state

15:50.760 --> 15:51.360
state

15:52.860 --> 15:54.960
导入命名空间setting

15:56.870 --> 16:01.070
data啊来吧

16:02.070 --> 16:04.270
一个个来首先是这个

16:05.070 --> 16:06.370
这是我们的github

16:07.070 --> 16:08.270
github的名字

16:08.670 --> 16:09.870
哎github的名字呢

16:10.070 --> 16:10.970
哦github name

16:12.070 --> 16:15.270
写到这data叫github name

16:15.770 --> 16:16.270
写到这

16:16.770 --> 16:19.370
然后这个github的超链接啊

16:19.370 --> 16:20.770
超链接的话没写到这

16:21.070 --> 16:22.070
github在这

16:23.470 --> 16:24.870
超链接的链接地址

16:26.370 --> 16:27.770
data.github

16:28.770 --> 16:29.970
然后我们点击过后呢

16:29.970 --> 16:31.270
在新窗口打开吧

16:31.970 --> 16:32.470
plank

16:34.070 --> 16:35.970
这是github啊看一下吧

16:36.870 --> 16:37.470
点击

16:38.770 --> 16:41.170
打开个github地址

16:41.570 --> 16:43.070
然后下边这个邮箱

16:43.870 --> 16:45.370
邮箱的话

16:45.970 --> 16:47.070
mail在这

16:47.870 --> 16:49.670
所以邮箱呢我们绑定一个啊

16:52.540 --> 16:54.240
这个位置我们拼接个字不错

16:56.040 --> 16:57.340
data没有

16:58.240 --> 16:59.740
下边是个邮箱地址

16:59.840 --> 17:00.840
那就是data没有

17:01.840 --> 17:02.840
data没有

17:04.140 --> 17:05.240
好这是邮箱

17:05.640 --> 17:07.240
下边这个呢是qq

17:08.140 --> 17:08.840
看一下啊

17:09.840 --> 17:10.540
qq

17:11.240 --> 17:13.240
好这边我们直接显示啊

17:14.640 --> 17:15.740
data叫qq

17:16.240 --> 17:18.940
qq号呢是要更改这个地方

17:19.740 --> 17:20.740
啊更改这个地方

17:21.340 --> 17:21.740
是吧

17:22.240 --> 17:22.740
没问题

17:22.940 --> 17:23.640
更改这个地方

17:23.640 --> 17:25.440
然后我们这里就动态绑定

17:26.240 --> 17:27.340
哪个字不错拼接

17:29.830 --> 17:30.430
这个位置

17:30.830 --> 17:31.330
改为

17:32.530 --> 17:33.530
data.qq

17:35.030 --> 17:37.430
下边这个呢是qq的二维码

17:37.730 --> 17:39.130
qqqrcode

17:39.930 --> 17:40.830
二维码地址

17:44.790 --> 17:46.290
data.qq

17:46.990 --> 17:47.690
qrcode

17:47.890 --> 17:49.290
这终于没有什么技术含量的啊

17:49.290 --> 17:50.290
就直接写就行了

17:50.490 --> 17:52.090
微信啊微信

17:57.400 --> 17:58.200
data.

17:58.500 --> 17:59.000
微信

18:00.200 --> 18:01.900
然后微信的二维码地址

18:02.500 --> 18:03.700
微信qrcode

18:08.090 --> 18:08.690
data

18:09.190 --> 18:10.290
微信qrcode

18:10.590 --> 18:11.090
好了

18:11.690 --> 18:12.490
现在我们来看

18:12.890 --> 18:16.090
哎这些东西都是变成来自于服务器的数据了

18:16.090 --> 18:16.490
对吧

18:16.490 --> 18:18.490
只不过呢这些数据呢是我们模拟的

18:18.490 --> 18:20.490
当然我们只要把目可一删除

18:20.590 --> 18:21.490
服务器弄好

18:21.590 --> 18:22.890
基本上就是服务器的数据了

18:23.890 --> 18:25.090
好那么这边呢就是

18:25.090 --> 18:27.490
我们这些组件呢就用了去用了共享数据

18:27.690 --> 18:28.490
那还有什么呢

18:28.490 --> 18:30.090
其实我们观察一下共享数据里边啊

18:30.090 --> 18:30.990
还有一些东西呢

18:30.990 --> 18:32.890
我们需要去控制一下

18:33.890 --> 18:34.590
首先是这个

18:35.590 --> 18:36.990
这是我们的网站的

18:37.190 --> 18:37.890
这个图标

18:37.990 --> 18:39.090
就这个图标的地址

18:39.590 --> 18:39.990
对吧

18:40.090 --> 18:41.090
那么这个图标的地址呢

18:41.090 --> 18:42.490
我们需要去控制一下

18:42.490 --> 18:43.190
怎么控制呢

18:43.190 --> 18:44.190
其实我们就可以在这

18:44.790 --> 18:47.290
拿到这个数据过后在仓库里边啊

18:48.190 --> 18:49.890
不是一个副作用操作的地方吗

18:51.090 --> 18:51.490
stone

18:52.090 --> 18:52.890
微信在这

18:53.290 --> 18:54.890
拿到这个仓库数据过后

18:55.090 --> 18:55.690
是不是在这里呢

18:55.690 --> 18:56.790
就可以去设置了

18:57.190 --> 18:57.490
对吧

18:57.490 --> 18:59.790
就可以去设置我们这个fibricone

18:59.890 --> 19:00.990
我们这里判断一下吧

19:01.090 --> 19:06.490
如果说fibricone有值

19:10.450 --> 19:11.450
如果说它有值

19:11.650 --> 19:12.350
有值的话

19:12.350 --> 19:14.350
我们就去设置一下网站的这个地方

19:15.050 --> 19:15.950
那这个玩意怎么设置呢

19:15.950 --> 19:17.550
无分就是加一个link元素吗

19:18.150 --> 19:19.150
这个我好像忘了

19:19.250 --> 19:19.950
这个link元素

19:19.950 --> 19:21.650
我记得好像是short

19:22.250 --> 19:23.250
cut icon

19:23.550 --> 19:24.350
就这个东西

19:25.450 --> 19:26.250
就这个玩意

19:27.650 --> 19:28.250
加上就行了

19:28.250 --> 19:29.150
就是一个链接

19:29.150 --> 19:30.350
就把这个玩意加上就行了

19:33.030 --> 19:33.830
那怎么加呢

19:33.830 --> 19:34.830
首先我们判断

19:34.930 --> 19:36.430
判断页面上有没有这个东西

19:36.630 --> 19:38.130
如果说有的话我就不加了

19:38.230 --> 19:39.230
没有的话我就加

19:40.630 --> 19:41.130
好来吧

19:41.130 --> 19:41.830
我们判断一下吧

19:42.330 --> 19:43.130
这个东西怎么判断的

19:43.130 --> 19:44.730
个document query is negative

19:45.730 --> 19:47.330
看一下有没有这个元素啊

19:47.930 --> 19:48.630
找什么元素呢

19:48.630 --> 19:49.630
找link元素

19:49.630 --> 19:50.530
它的什么属性呢

19:50.530 --> 19:52.430
它的real属性为什么呢

19:52.830 --> 19:56.930
为一个short cut icon这个值

19:57.130 --> 19:58.430
看有没有这个元素啊

20:01.020 --> 20:01.520
link

20:01.720 --> 20:03.020
如果说有的话就结束了

20:03.020 --> 20:04.420
就之前加过了

20:05.120 --> 20:05.820
那就不加了

20:05.920 --> 20:06.720
如果说没有的话

20:06.720 --> 20:07.620
我就创建那个元素

20:07.620 --> 20:08.720
几个加上就完成了

20:08.920 --> 20:10.420
document create element

20:12.320 --> 20:12.820
link

20:13.920 --> 20:14.620
然后呢

20:14.620 --> 20:17.020
给它设置一下一些属性啊

20:17.020 --> 20:17.520
ref

20:17.720 --> 20:18.520
ref的值

20:20.940 --> 20:24.240
等于short cut icon

20:25.240 --> 20:26.640
然后给它设置一个

20:26.940 --> 20:27.740
图标类型嘛

20:27.840 --> 20:28.640
它只有一个类型

20:28.840 --> 20:29.240
type

20:30.440 --> 20:32.040
就是me类型

20:33.140 --> 20:35.240
images x icon

20:37.140 --> 20:38.540
接下来是一个链接地址

20:39.340 --> 20:39.740
ref

20:40.540 --> 20:41.240
链接地址呢

20:41.240 --> 20:42.640
就来自于这个服务器

20:42.640 --> 20:44.040
享用结果里边的

20:45.040 --> 20:45.640
5 icon

20:47.540 --> 20:47.740
ok

20:47.740 --> 20:48.740
然后把这个link加到

20:48.740 --> 20:49.840
header元素里面去

20:50.240 --> 20:50.940
怎么加呢

20:50.940 --> 20:52.440
就是document query is negative

20:53.340 --> 20:54.540
找到header元素

20:55.140 --> 20:56.540
然后呢有append channel

20:56.640 --> 20:57.540
加进去完成

21:00.820 --> 21:01.920
append channel

21:02.520 --> 21:03.920
link加进去完成

21:04.920 --> 21:05.120
好了

21:05.120 --> 21:07.220
反正这些都是副作用操作嘛

21:07.220 --> 21:08.320
就可以到x里面

21:08.820 --> 21:09.720
接下来我们再看一下啊

21:09.720 --> 21:10.220
刷新

21:12.900 --> 21:13.500
检查

21:14.000 --> 21:14.700
现在我们看一下

21:14.700 --> 21:15.900
哎这个爆错了

21:16.000 --> 21:16.700
他说什么呢

21:17.500 --> 21:20.400
connards read property ofata of now

21:21.500 --> 21:22.400
哦明白了啊

21:22.400 --> 21:24.100
这个问题还没有解决

21:24.800 --> 21:26.100
之前的这个组件里边

21:26.300 --> 21:27.200
这一小问题啊

21:27.200 --> 21:28.200
非常容易解决的

21:28.900 --> 21:30.100
嗯这个组件里边呢

21:30.100 --> 21:30.500
一开

21:30.500 --> 21:32.400
因为它需要一个加载过程嘛

21:32.800 --> 21:33.800
我们这个仓库数据呢

21:33.800 --> 21:34.900
一开始是now对吧

21:34.900 --> 21:35.700
data是now

21:35.800 --> 21:36.800
它是需要一个

21:37.000 --> 21:38.000
呃加载过程

21:38.300 --> 21:38.700
所以说呢

21:38.700 --> 21:39.300
我这里呢

21:39.300 --> 21:40.100
可以这样吧

21:40.100 --> 21:41.700
就这样子简单处理一下

21:41.900 --> 21:42.700
就是

21:43.500 --> 21:44.600
这个ovata啊

21:44.600 --> 21:46.300
他首先得有这个值

21:46.400 --> 21:47.300
没有这个值的话

21:47.300 --> 21:48.500
没有这个data的话

21:48.900 --> 21:50.400
那我就显示什么头像

21:50.400 --> 21:51.600
我就啥都不显示啊

21:51.600 --> 21:52.900
我这简单处理一下啊

21:52.900 --> 21:54.600
如果data没有值的话

21:55.200 --> 21:55.800
有值吗

21:55.800 --> 21:57.200
有值的话我才显示这个

21:58.300 --> 21:59.400
啊那没有值

21:59.400 --> 22:00.900
没有值的话

22:01.700 --> 22:03.800
呃有值我在显示这个

22:03.800 --> 22:05.400
那没有值的话他就纳了对吧

22:06.200 --> 22:06.800
好刷新

22:07.600 --> 22:08.200
ovata

22:09.400 --> 22:10.900
好那么这个问题解决了

22:10.900 --> 22:12.300
接下来就是这边的问题啊

22:12.300 --> 22:13.600
contact设里边的问题

22:14.700 --> 22:15.500
这边也是啊

22:15.500 --> 22:16.500
这个site title

22:16.700 --> 22:18.600
我有这个好多地方都要用到这个data

22:18.700 --> 22:20.300
啊那我刚去用vif刷的

22:20.800 --> 22:22.000
我用个vif刷的

22:23.880 --> 22:25.680
你看这两个东西要用的

22:25.680 --> 22:26.680
我们用一个template啊

22:26.680 --> 22:27.680
用vif刷的

22:31.670 --> 22:32.870
呃用个vif

22:33.470 --> 22:35.470
要这个他有值的时候才显示啊

22:35.470 --> 22:36.470
才显示这两个组件

22:36.970 --> 22:38.470
没有值的时候是不显示的

22:39.070 --> 22:42.170
好呃然后这个contact设也是一样啊

22:42.170 --> 22:42.670
vif

22:42.670 --> 22:43.670
得对他有值

22:47.190 --> 22:48.190
好这个没问题了

22:48.190 --> 22:49.190
现在这边也是啊

22:49.190 --> 22:50.090
得对他有值

22:54.940 --> 22:56.140
把这个问题解决了

22:57.440 --> 22:58.140
没问题吧

22:58.340 --> 22:59.840
哎刚才我们回到回到这啊

22:59.840 --> 23:01.740
刚才我们坐到哪呢

23:01.740 --> 23:02.440
坐到那个

23:02.940 --> 23:03.540
图标

23:03.540 --> 23:04.240
网站图标

23:04.240 --> 23:05.840
然后我们看一下位元素有没有生成

23:05.840 --> 23:07.540
我们在header里边

23:07.840 --> 23:09.540
看一下有没有生成那个

23:10.540 --> 23:11.540
哎生成了

23:12.340 --> 23:13.040
生成了

23:13.040 --> 23:13.940
哎那个

23:14.640 --> 23:16.140
rave值怎么没有呢

23:18.120 --> 23:18.920
我看一下

23:19.920 --> 23:21.720
这个值怎么没有呢

23:22.320 --> 23:23.720
real我写错误了

23:25.220 --> 23:25.920
real

23:28.090 --> 23:29.090
就那一题

23:30.190 --> 23:31.590
放心哎你看说出来了

23:31.590 --> 23:33.890
这图标好这个图标出来了

23:34.790 --> 23:36.690
然后还有什么问题呢

23:37.090 --> 23:39.390
还有一个就是网站标题的问题

23:39.390 --> 23:40.490
算了网站标题

23:40.490 --> 23:41.490
我们下节课再讲吧

23:41.490 --> 23:42.650
我们先把这个全局数据

23:42.650 --> 23:43.690
干弄几句才说

23:44.090 --> 23:45.290
好吧这个问题先解决

23:45.590 --> 23:46.990
ok这是这节课的内容

23:46.990 --> 23:47.890
没有什么新知识啊

23:47.890 --> 23:48.690
也非常简单

