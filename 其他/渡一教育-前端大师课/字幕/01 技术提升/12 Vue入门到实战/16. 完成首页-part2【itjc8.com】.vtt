WEBVTT

00:00.180 --> 00:02.480
咱们接着上节课弄

00:03.000 --> 00:05.560
我看一下我这个文件夹位置对不对

00:06.840 --> 00:10.680
这个文件夹位置在这

00:12.720 --> 00:18.620
上节课咱们把手液估摸着 之前想简单

00:20.140 --> 00:23.980
又做的时候没有那么多事 讲的时候怎么做这么多事

00:24.500 --> 00:29.100
要我把讲清楚的话 可能要上节课 这节课 还有这节课

00:29.620 --> 00:32.420
咱们把上节课没有解决的问题继续解决

00:32.680 --> 00:33.960
我们上节课呢

00:34.480 --> 00:35.240
做到这了

00:36.520 --> 00:39.340
还有什么问题呢 首先我把这个恢复到

00:40.100 --> 00:42.420
恢复到那个第1个页面

00:43.180 --> 00:44.460
把这个style折叠一下

00:46.000 --> 00:48.820
我还是建议大家 像这个东西你可以自己去尝试

00:49.320 --> 00:51.380
尝试成什么样子的再说

00:51.880 --> 00:53.160
自己去尝试做一下

00:54.960 --> 00:57.260
我也不知道为什么 它必须再重新刷新页面

00:58.240 --> 01:01.560
然后接下来我们还要做个啥事呢 还要用鼠标滚轮滚动

01:02.580 --> 01:05.920
滚轮它也能滚动 那么我得注册滚轮事件吧

01:06.680 --> 01:09.500
在哪里注册呢 我就给这个整个DIV注册

01:10.780 --> 01:13.080
来吧 给滚轮滚 滚轮滚动

01:14.360 --> 01:15.640
什么事件呢 叫Wheel

01:19.380 --> 01:22.460
这是鼠标滚轮事件 对吧 然后我们来查一下MDN是不是有这个事件

01:23.220 --> 01:24.200
万一我记错了呢

01:24.460 --> 01:24.960
Wheel

01:27.520 --> 01:29.580
Wheel事件啊 鼠标滚轮事件

01:30.100 --> 01:32.140
那么现在呢 我们来看一下啊

01:32.900 --> 01:36.500
它已经mouse wheel已经被吸用了啊 然后建议你呢

01:37.000 --> 01:38.800
用这个Wheel事件

01:39.300 --> 01:41.600
好 那么我们来看一下这个Wheel事件能不能做成成功啊

01:41.860 --> 01:42.900
Handle

01:43.400 --> 01:43.900
Wheel

01:46.960 --> 01:48.760
好 接下来我们来美色纸里边

01:49.520 --> 01:50.040
写上一个

01:50.280 --> 01:51.060
Handle Wheel

01:51.560 --> 01:52.320
输出一下

01:52.840 --> 01:53.360
123

01:54.120 --> 01:55.400
好 保存啊

01:55.600 --> 01:56.900
接下来我点击右键检查

01:57.660 --> 01:59.200
控制台 看一下 丑义

02:01.270 --> 02:02.030
好 滚轮

02:02.290 --> 02:03.570
所以注册成功啊

02:03.830 --> 02:05.110
对吧 这事件终于成功了

02:05.630 --> 02:06.890
但是这个事件呢

02:07.150 --> 02:07.930
我们

02:08.190 --> 02:12.530
你看我轻轻滚一下就这么多次触发 那么这并不是我想要的

02:12.790 --> 02:14.830
触发你肯定是避免不了要触发

02:15.090 --> 02:19.950
但是呢 我不是说每一次滚动了 我都要去切换这个页面 拉太夸张了

02:20.470 --> 02:21.750
我要干嘛呢 我要

02:22.010 --> 02:23.550
看一下滚动的幅度

02:24.830 --> 02:26.610
打印出这个事件议

02:27.710 --> 02:31.110
打印出这个事件议

02:31.370 --> 02:32.650
这是Wheel Invent

02:32.910 --> 02:34.690
滚动事件的事件对象

02:34.950 --> 02:36.750
然后我们来看一下什么呢 看一下这个

02:37.010 --> 02:38.790
叫Delta Y

02:39.310 --> 02:42.370
对不对 就是滚动的那个距离

02:42.630 --> 02:43.150
Delta Y

02:43.910 --> 02:44.430
你看

02:45.710 --> 02:46.470
滚动距离

02:46.730 --> 02:50.830
那么这个滚动距离到达一定程度的时候了 我再进行翻译

02:51.330 --> 02:51.850
没了意思吧

02:52.110 --> 02:54.150
好 那么我们这里判断一下

02:54.770 --> 02:56.670
如果说

02:56.930 --> 02:59.730
Delta Y

03:01.530 --> 03:02.810
输出一下Delta Y吧

03:03.830 --> 03:05.370
一点Delta

03:06.130 --> 03:07.930
Delta Y

03:15.380 --> 03:18.580
我们滚动多少呢 比方说我们滚动大于5的时候

03:18.840 --> 03:21.280
只有滚动距离大于5的时候呢 我们才翻译

03:22.040 --> 03:26.200
如果说往上滚动的话 那么就希望能于是往上翻译

03:26.640 --> 03:27.540
Delta Y

03:27.760 --> 03:29.280
小于副

03:30.560 --> 03:31.440
那么这个时候

03:32.480 --> 03:33.380
是不是上一个

03:33.880 --> 03:34.920
我们输出

03:35.680 --> 03:36.460
上一个

03:37.220 --> 03:39.520
是这样子啊 这两节课呢 我手指

03:40.040 --> 03:41.060
隔了一个口子

03:41.320 --> 03:43.360
有伤啊 所以说一个杂字啊

03:44.400 --> 03:45.400
理解一下吧

03:45.660 --> 03:46.960
我也得给你们读课

03:47.980 --> 03:49.000
大于5

03:50.680 --> 03:52.080
然后呢 这个是下一个

03:54.530 --> 03:56.070
我们先把一个弄出来说

03:56.830 --> 03:58.110
好 我们写成这么一个逻辑

03:58.570 --> 04:00.570
其他事情 其他的时候了我就啥都不做

04:01.290 --> 04:02.410
你知道吗 再来

04:03.890 --> 04:04.570
好 现在来

04:04.970 --> 04:05.570
下一个

04:06.250 --> 04:07.290
往上 上一个

04:07.690 --> 04:10.570
对吧 好像是没啥问题了 问题不就很明显吧

04:10.850 --> 04:13.570
他触发了太多次了啊 还是触发了太多次了

04:13.890 --> 04:15.970
那么比方说我这里要翻上一个的时候

04:16.250 --> 04:20.010
如果说正在翻的时候 正在滚动的时候

04:20.010 --> 04:21.770
我是不是不希望他翻动了

04:22.370 --> 04:24.890
对不对 正在滚动的时候我就不希望他翻动了

04:25.410 --> 04:26.890
那么这个时候又怎么办呢

04:27.110 --> 04:28.750
也咱们又需要一个新的数据

04:29.230 --> 04:31.630
叫做是否正在翻页中

04:32.110 --> 04:34.350
是否正在那个切换中

04:34.790 --> 04:36.670
我们比方说有这么一个

04:37.350 --> 04:38.430
属性吧 说一切

04:39.110 --> 04:39.630
说一切

04:41.070 --> 04:41.950
莫认为force

04:43.230 --> 04:45.150
我现在少一个指头啊 那是难受

04:46.030 --> 04:49.630
是否正在翻页中

04:50.350 --> 04:51.550
正在切换中

04:52.670 --> 04:53.630
比方说有这么一个属性

04:53.990 --> 04:55.190
一开始是force对吧

04:55.570 --> 04:59.250
那么如果说我这里要滚动到上一个的时候

04:59.650 --> 05:00.250
我干嘛呢

05:00.930 --> 05:03.530
我就把这个switching

05:04.650 --> 05:05.090
this

05:06.250 --> 05:07.810
switching

05:09.250 --> 05:11.130
对吧 我们就在这里switch

05:12.010 --> 05:12.930
正在翻页中

05:13.610 --> 05:15.490
那么如果说我这里判断一下

05:15.490 --> 05:16.850
thisSwitching

05:17.330 --> 05:18.370
把它设置为

05:18.810 --> 05:21.450
如果说等于有值的话

05:21.450 --> 05:22.410
就等于去的话

05:22.410 --> 05:23.810
那么我就没什么都不做

05:24.790 --> 05:26.830
你看一下 现在是不是要好多了

05:27.590 --> 05:28.070
刷新

05:30.050 --> 05:30.650
往下走

05:32.650 --> 05:33.770
一个都没输出了

05:34.610 --> 05:35.890
switching等于去

05:36.130 --> 05:37.330
然后delta y

05:39.380 --> 05:40.620
一开始为force

05:44.770 --> 05:45.770
那也不能

05:47.890 --> 05:49.290
那也不能啥都不输出吧

05:51.090 --> 05:52.850
我看一下啊 哪里出了问题

05:53.010 --> 05:54.370
如果说它为去的话

05:54.370 --> 05:55.450
我就return了

05:56.050 --> 05:57.450
明白了 明白了

05:57.690 --> 05:59.810
我这个时候还是要去到这里面啊

06:00.790 --> 06:01.270
这里面

06:03.120 --> 06:04.520
或者是我们这样子

06:05.080 --> 06:06.040
再判断一下

06:06.040 --> 06:07.560
如果说它正在翻页中

06:07.560 --> 06:09.960
或者是什么情况下也不做任何操作呢

06:09.960 --> 06:11.320
或者是delta y

06:11.880 --> 06:13.000
小于

06:13.240 --> 06:14.200
小于5

06:14.600 --> 06:15.600
小于等于5

06:15.840 --> 06:17.920
并且delta y

06:18.800 --> 06:20.040
大于等于副

06:20.360 --> 06:22.760
就是它在一个很小的滚动范围内

06:22.760 --> 06:24.600
或者是我现在正在滚动

06:24.600 --> 06:25.640
这两种情况下

06:25.640 --> 06:27.040
我都不能去做任何事情

06:27.760 --> 06:28.480
你要的意思吧

06:28.480 --> 06:29.920
我就这样子写

06:30.420 --> 06:33.540
那么剩下的是不是就一定要做事情了

06:33.860 --> 06:35.060
对了 剩下一定要做事情

06:35.060 --> 06:35.820
一定要做事情的话

06:35.820 --> 06:36.980
我就把这个switch

06:36.980 --> 06:38.820
设为去正在翻页中

06:39.460 --> 06:40.820
现在形成这么一个逻辑

06:42.340 --> 06:43.380
好 你看 下一个

06:43.380 --> 06:45.380
是不是指数出了一次

06:46.100 --> 06:47.260
上一个现在都不行了

06:47.260 --> 06:48.780
因为下一个它就正在翻页中了

06:49.140 --> 06:50.380
上一个 对吧

06:50.860 --> 06:52.660
好 咱们来

06:53.180 --> 06:55.300
如果说我们要翻动到上一个的话

06:55.300 --> 06:56.260
怎么来翻动呢

06:56.660 --> 06:58.100
所以index-1

06:58.120 --> 06:59.840
对吧 但index-1的最小为0

06:59.840 --> 07:00.360
最小为0

07:00.360 --> 07:03.200
所以说如果说thisindex

07:04.360 --> 07:06.440
大于0

07:06.440 --> 07:07.880
就小上面来吧

07:08.480 --> 07:09.920
它在往上翻

07:09.920 --> 07:10.920
并且

07:11.360 --> 07:12.720
目前不是第一个

07:12.720 --> 07:13.440
不是第一个的话

07:13.440 --> 07:15.520
我就把index-1

07:16.680 --> 07:17.760
这个设为0

07:19.200 --> 07:21.040
lcif 如果它大于5

07:21.520 --> 07:22.480
并且

07:22.480 --> 07:26.480
thisindex

07:26.700 --> 07:27.820
小于

07:29.140 --> 07:31.260
最大下标

07:31.260 --> 07:33.420
thisspanners.lcif

07:34.660 --> 07:36.020
那么这个就是时候

07:36.020 --> 07:37.220
我就把index

07:37.820 --> 07:39.580
不是等于0 简简

07:40.660 --> 07:41.580
这个是加加

07:44.340 --> 07:46.100
看一下能不能翻动了

07:47.940 --> 07:48.500
相信

07:50.440 --> 07:51.440
滚轮 下一个

07:51.440 --> 07:52.440
你看是不是翻动了

07:53.480 --> 07:55.320
好 然后我上一个

07:55.320 --> 07:56.480
上一个现在翻动不了了

07:56.480 --> 07:56.920
为什么呢

07:56.920 --> 07:58.880
因为我把它设为去过后

07:58.940 --> 08:00.220
就没有把它改为force

08:01.220 --> 08:02.780
那问题是什么时候改为force

08:03.420 --> 08:04.860
所以翻动完成之后

08:05.780 --> 08:07.780
翻动完成之后是不是要改为force

08:08.580 --> 08:10.500
那怎么来知道翻动完成之后

08:10.900 --> 08:12.500
是不是它过渡效果结束了

08:13.060 --> 08:15.060
这个uol的过渡效果结束了

08:15.060 --> 08:16.660
我就要把它改为force

08:16.660 --> 08:18.180
因此我要给这个uol

08:18.180 --> 08:19.100
注册一个事件

08:19.100 --> 08:20.860
就是过渡效果结束的事件

08:21.340 --> 08:22.700
那么过渡效果结束的事件

08:22.700 --> 08:23.260
是什么事件

08:23.260 --> 08:23.740
叫做

08:24.620 --> 08:25.980
transition

08:26.960 --> 08:27.720
end

08:27.720 --> 08:29.720
你看这些问题是一个一个解决的

08:29.720 --> 08:31.360
所以这个是过渡效果结束

08:31.360 --> 08:32.800
我们handle

08:34.800 --> 08:35.960
handle

08:35.960 --> 08:37.200
transition

08:37.200 --> 08:38.000
end

08:38.640 --> 08:40.480
我们运行这么一个函数

08:41.280 --> 08:41.960
来吧

08:43.560 --> 08:44.960
我们来输出一下

08:45.960 --> 08:48.360
过渡效果结束

08:49.160 --> 08:49.960
保存

08:49.960 --> 08:51.080
小心 又来

08:52.680 --> 08:53.480
翻动

08:53.480 --> 08:54.920
所以过渡效果结束了

08:55.020 --> 08:56.180
结束的时候

08:56.180 --> 08:57.140
我把this

08:57.780 --> 08:58.580
switch

08:59.740 --> 09:01.140
改为force

09:02.820 --> 09:03.820
明白了意思吧

09:03.820 --> 09:04.780
好 再来

09:07.500 --> 09:08.220
滚动

09:08.940 --> 09:09.580
滚动

09:09.580 --> 09:10.860
你看事件是不是可以滚动了

09:10.860 --> 09:13.060
上上 向上 向上 向下

09:13.060 --> 09:13.580
向下

09:14.260 --> 09:15.260
好 那么这个

09:18.460 --> 09:19.500
这有问题了

09:19.500 --> 09:20.140
有问题了

09:21.260 --> 09:22.620
因为我到了最后一个页面的时候

09:22.620 --> 09:23.460
再往下滚动

09:23.460 --> 09:24.060
我看一下

09:24.060 --> 09:25.300
就到了最后一个页面

09:25.300 --> 09:25.900
板块的时候

09:25.920 --> 09:26.760
我再往下滚动

09:26.760 --> 09:27.520
看出了什么问题

09:28.240 --> 09:29.800
我最后一个页面再往下滚动

09:29.800 --> 09:32.280
现在没有正在滚动中

09:32.280 --> 09:34.760
并且我滚动的距离也很远

09:35.760 --> 09:38.760
我只有明确的说要滚动的时候

09:38.760 --> 09:39.520
我再把它收回去

09:40.240 --> 09:42.040
其他的情况下都是没有滚动的

09:42.040 --> 09:43.520
这才是真正的滚动的时候

09:43.520 --> 09:44.080
对吧

09:44.080 --> 09:46.080
那么把这个位置更加准确一点

09:46.840 --> 09:47.640
那这样子的话

09:47.640 --> 09:49.400
我好像前面就没必要用它了

09:50.040 --> 09:51.320
没必要用它了

09:51.320 --> 09:52.760
下面已经有判断了

09:52.760 --> 09:53.080
OK

09:53.080 --> 09:54.960
那我还是形成这样子了

09:55.020 --> 09:56.580
就是这个是往上滚动

09:57.580 --> 09:58.180
往上

09:59.580 --> 10:01.180
往上滚动

10:02.180 --> 10:03.260
这个是往下滚动

10:05.100 --> 10:06.700
往下滚动

10:09.350 --> 10:09.750
好了

10:09.750 --> 10:10.670
那我们现在继续看

10:11.470 --> 10:12.310
这个问题很解决没

10:14.430 --> 10:15.030
滚动

10:15.030 --> 10:16.070
往下滚动不了了

10:16.070 --> 10:16.550
往上

10:16.550 --> 10:17.030
往上

10:17.510 --> 10:17.590
哎

10:17.590 --> 10:18.430
这个问题什么解决了

10:18.990 --> 10:19.150
好

10:19.150 --> 10:21.070
那么现在鼠标滚轮可以发现了

10:22.830 --> 10:24.350
还有什么问题呢

10:24.350 --> 10:26.030
其实还有一些小的问题

10:26.130 --> 10:28.170
这小的问题我们尽量把它完善一下

10:29.010 --> 10:30.450
就是说这个高度的问题

10:30.450 --> 10:31.850
这个容器高度的问题

10:32.410 --> 10:34.970
比方说我现在把那个调制控制台往下一扔

10:35.450 --> 10:37.050
高度是不变化了

10:37.610 --> 10:38.130
高度变化

10:38.130 --> 10:39.290
你看要不要出问题

10:39.290 --> 10:40.450
你还是不是就出问题了

10:41.210 --> 10:41.650
为什么呢

10:41.650 --> 10:44.290
因为它最终沿用的还是之前的高度

10:45.290 --> 10:46.810
所以沿用的还是之前的高度

10:47.330 --> 10:50.610
沿用的是之前一开始的组建加载的时候

10:50.610 --> 10:51.810
我是不是缺了一个高度

10:51.810 --> 10:55.210
组建加载完成的时候是不是缺了一个高度

10:55.510 --> 10:58.230
之后组建这个海朔是不是不再运行了

10:58.230 --> 11:00.310
我改变了浏览器窗口没用啊

11:00.310 --> 11:01.750
这个海朔已经不再运行了

11:01.750 --> 11:03.710
它高度还是用的是之前的高度

11:03.710 --> 11:08.670
所以说我这里希望监听我们浏览器的尺寸的变化

11:08.670 --> 11:10.390
当浏览器尺寸变化的时候

11:10.390 --> 11:11.990
我还要把重新设置一下

11:13.310 --> 11:15.910
尽管我们浏览器尺寸变化的情况比较少

11:15.910 --> 11:18.870
你看我之前那个效果里面其实没做这些事情

11:18.870 --> 11:20.510
但是我讲解的时候尽量把它完善

11:21.670 --> 11:24.190
那么我浏览器改变的效果在改变的时候

11:25.350 --> 11:26.470
我们也要做这些事情

11:27.830 --> 11:28.710
那怎么来做呢

11:28.710 --> 11:30.190
我说这要去注册

11:32.190 --> 11:33.470
是不是要给Windows注册时间啊

11:34.870 --> 11:35.670
什么时间呢

11:37.190 --> 11:39.550
但是我不建议大家用这种方式来注册时间

11:39.550 --> 11:39.990
为什么

11:40.990 --> 11:43.310
因为如果说利用这种方式来注册时间的话

11:43.910 --> 11:46.470
那别的组建如果说别的组建也用这种方式

11:46.470 --> 11:48.150
那是不是覆盖过来覆盖过去啊

11:48.790 --> 11:49.270
对不对

11:49.630 --> 11:51.910
那么我们最好用ADD Event Listener

11:51.910 --> 11:52.510
这样子的

11:53.270 --> 11:55.030
不会干扰别的组建

11:55.210 --> 11:57.010
万一别的组建也要用这个Windows

11:57.010 --> 11:58.050
Rexize时间了

11:58.450 --> 12:01.170
所以说你这里最好用ADD Event Listener

12:01.170 --> 12:02.570
这样的方式来注册时间

12:02.570 --> 12:04.050
叫做Rexize

12:05.650 --> 12:06.890
在这里是不是要注册时间

12:06.890 --> 12:09.690
而你注册的时间你要不要移除啊

12:09.690 --> 12:10.850
要不要移除这个时间

12:12.690 --> 12:14.450
能不移除啊肯定得移除啊

12:14.450 --> 12:15.930
将来我们不要切换页面

12:15.930 --> 12:17.010
切换到别的页面的时候

12:17.010 --> 12:17.810
切换到文章

12:17.810 --> 12:19.290
那么这个组建都消失了

12:19.290 --> 12:20.770
那还要建成这个时间干嘛呢

12:20.770 --> 12:21.850
没有任何意义了

12:21.850 --> 12:23.090
所以说你要移除

12:23.110 --> 12:25.350
移除的话是不要用生命中间函数Distort

12:26.630 --> 12:27.150
对不对

12:27.150 --> 12:29.430
那么这个时候要移除叫Window

12:29.430 --> 12:31.430
Removed Event Listener

12:31.430 --> 12:33.070
像这种啊

12:33.070 --> 12:33.870
在组建里边

12:33.870 --> 12:36.590
可以Window啊跟这种组建外面的东西注册时间

12:37.350 --> 12:39.150
一定要记得把移除掉

12:39.150 --> 12:40.430
那么既然要移除的话

12:40.430 --> 12:42.070
这个函数就不能用历米函数了

12:42.070 --> 12:43.790
是不是得用一个

12:43.790 --> 12:44.950
抽类一个函数出来

12:44.950 --> 12:47.190
那么我们可以抽类到Message里面啊

12:47.190 --> 12:48.470
写到一个Message函数里面

12:50.390 --> 12:52.310
我们把Message放进去啊

12:52.330 --> 12:54.010
这里给他写一个函数

12:54.010 --> 12:54.770
处理函数

12:54.770 --> 12:56.770
HandResize

12:57.570 --> 12:58.930
其实这个函数里面要处理

12:58.930 --> 12:59.770
确实很简单啊

12:59.770 --> 13:01.210
就把这句话重新运行一遍

13:02.850 --> 13:03.570
还能做啥嘛

13:03.570 --> 13:05.210
其他就不需要做啥了

13:05.210 --> 13:07.370
那么这里呢我就直接把这个复词给过来

13:07.370 --> 13:09.530
HandResize

13:10.170 --> 13:10.810
然后这边呢

13:10.810 --> 13:11.690
移除的时候呢

13:12.490 --> 13:13.450
就移除这个函数

13:14.690 --> 13:15.210
没问题吧

13:16.570 --> 13:16.890
好

13:17.530 --> 13:17.970
保存一下

13:17.970 --> 13:19.010
我们在这些输出啊

13:19.730 --> 13:20.170
Change

13:20.750 --> 13:21.870
好

13:21.870 --> 13:22.430
刷新

13:26.160 --> 13:27.040
往下往下

13:27.040 --> 13:27.760
现在没问题

13:27.760 --> 13:28.080
OK

13:28.080 --> 13:29.520
那么我们把这个调整一下位置

13:30.240 --> 13:30.640
你看

13:31.240 --> 13:32.720
是不是运行了这个签计事件了

13:33.640 --> 13:33.840
对吧

13:33.840 --> 13:34.960
运行签计事件过后了

13:34.960 --> 13:35.440
那么

13:35.440 --> 13:37.240
那么这里他就按照新的高度来了

13:37.240 --> 13:38.360
那么一切都是正常的

13:39.360 --> 13:41.280
我之前都没有处理过这个事情啊

13:41.280 --> 13:42.200
现在把它处理一下

13:44.260 --> 13:44.700
OK

13:44.700 --> 13:47.220
那么现在我们不要说切换到文章

13:47.220 --> 13:47.820
切换到文章

13:47.820 --> 13:49.460
我们再用Resize啊

13:49.460 --> 13:50.060
再改变

13:50.060 --> 13:50.980
看是不是没有运行的

13:50.980 --> 13:52.020
没有再重新运行的吧

13:52.540 --> 13:52.700
对吧

13:52.700 --> 13:53.980
因为事件已被移除掉了

13:54.740 --> 13:56.380
好就这个地方我处理一下啊

13:57.020 --> 13:57.300
好

13:57.300 --> 13:57.420
OK

13:57.420 --> 13:58.740
那我们现在的首页呢

13:59.300 --> 14:00.940
首页这个组件本身啊

14:01.660 --> 14:03.500
做的事情已经没多少了

14:03.500 --> 14:05.260
那么接下来我们要进入到里边的组件了

14:05.260 --> 14:05.940
就这个组件

14:06.780 --> 14:08.420
我们要在这个组件里面去做文章

14:08.860 --> 14:10.100
这个组件里面其实

14:10.100 --> 14:11.460
我们分析一下上几颗东西啊

14:12.380 --> 14:13.260
这个组件里边

14:14.060 --> 14:16.060
单个那个组件里边其实

14:16.300 --> 14:17.620
东西呢就这么两块

14:19.580 --> 14:20.500
把包包起打开

14:21.260 --> 14:22.420
然后这里复制一下啊

14:23.820 --> 14:24.500
单个

14:24.660 --> 14:25.860
单个那个组件里边

14:27.140 --> 14:28.660
那么这就是一张文波图

14:29.100 --> 14:31.100
一张文波图里边要显示一个什么呢

14:31.100 --> 14:33.100
要显示一个图片本身

14:33.580 --> 14:34.700
要显示一个图片

14:36.340 --> 14:37.020
除了图片

14:37.020 --> 14:37.620
诶图片

14:38.740 --> 14:39.740
除了图片之外呢

14:39.740 --> 14:40.700
还要显示一些什么呢

14:40.700 --> 14:42.780
还要显示一些还有两行文字

14:44.060 --> 14:45.540
因为我们班到里边是有文字啊

14:46.460 --> 14:47.660
一个是标题啊

14:47.660 --> 14:48.420
一个是标语

14:48.900 --> 14:50.100
看一下把我们之前的数据

14:50.580 --> 14:51.020
呃

14:51.020 --> 14:51.340
默克

14:54.590 --> 14:56.470
是一个一个标题一个描述啊

14:57.310 --> 14:57.550
好

14:57.550 --> 14:59.310
那么一个标题一个描述

15:03.200 --> 15:03.600
ok

15:03.600 --> 15:04.400
标题在这吧

15:04.800 --> 15:05.600
描述在这吧

15:06.280 --> 15:06.680
啊

15:06.680 --> 15:08.120
图片呢就覆盖整个区域

15:08.400 --> 15:08.920
对吧

15:08.920 --> 15:09.920
那么标题和描述呢

15:09.920 --> 15:10.560
可以看出啊

15:10.560 --> 15:11.720
他应该是一个什么呢

15:11.720 --> 15:12.840
应该是一个决定位

15:14.320 --> 15:15.680
咱们把这个结构写出来啊

15:17.320 --> 15:18.240
到这个组件里边去

15:18.240 --> 15:19.320
现在我们进入这个组件了啊

15:19.320 --> 15:21.200
你看如果说全部写到后面组件里边

15:21.200 --> 15:22.080
可不可以可以

15:22.080 --> 15:23.280
你看现在都有一百多行了

15:24.000 --> 15:24.960
快接近两万行了

15:24.960 --> 15:26.200
你再多了写

15:26.200 --> 15:27.560
以后不要就很难维护了

15:27.560 --> 15:28.560
就看不懂这个单码了

15:29.460 --> 15:30.300
试量啊

15:30.300 --> 15:31.860
组件在代码尽量试量

15:33.060 --> 15:34.100
这个div里边呢

15:34.100 --> 15:35.100
有一个图片

15:35.660 --> 15:36.780
这个图片实际上是什么呢

15:36.780 --> 15:38.460
实际上就是我们之前做了一个组件

15:38.460 --> 15:39.300
还记得吗

15:39.300 --> 15:40.100
我们之前做个组件

15:40.100 --> 15:40.540
忘了的话

15:40.540 --> 15:41.860
我们看一下组件文档

15:41.860 --> 15:43.100
之前一个emailloader

15:43.100 --> 15:43.340
对吧

15:43.340 --> 15:44.900
其实就是这么一个建议是图片

15:45.660 --> 15:45.860
好

15:45.860 --> 15:48.020
那么咱们就把这个组件导入进来

15:51.310 --> 15:52.390
我们这里用个div吧

15:53.590 --> 15:53.910
就是

15:53.910 --> 15:55.190
开

15:55.190 --> 15:55.750
落

15:55.750 --> 15:56.430
seal

15:56.430 --> 15:57.150
email

15:57.890 --> 16:00.150
然后这里边我们导入

16:00.150 --> 16:00.930
进行啊

16:00.930 --> 16:02.210
inport

16:02.210 --> 16:04.570
叫做emailloader

16:04.570 --> 16:06.330
from

16:06.330 --> 16:07.770
components

16:07.770 --> 16:09.490
emailloader

16:09.490 --> 16:10.330
注册一样

16:10.330 --> 16:12.050
components

16:12.050 --> 16:12.690
ie

16:12.690 --> 16:15.490
我这个时候

16:15.490 --> 16:15.770
好

16:15.770 --> 16:20.620
扔进去啊

16:20.620 --> 16:21.100
放进去

16:21.100 --> 16:22.620
然后这边呢

16:22.620 --> 16:24.420
我看一下

16:24.420 --> 16:25.540
有两个属性

16:25.540 --> 16:26.500
一个src

16:26.500 --> 16:28.220
一个pressholder

16:28.220 --> 16:29.140
好来吧

16:29.140 --> 16:31.020
给他一个src属性

16:31.020 --> 16:31.580
src

16:32.100 --> 16:33.220
src等于什么呢

16:33.220 --> 16:36.580
我们发现这个组件里边要显示的一些东西

16:36.580 --> 16:37.460
无论是文字啊

16:37.460 --> 16:38.860
还是图片链接

16:38.860 --> 16:39.420
这些东西呢

16:39.420 --> 16:41.180
是不是我都不知道啊

16:41.180 --> 16:42.420
需要副组件告诉我

16:42.420 --> 16:43.980
你副组件不是在循环渲染它吗

16:43.980 --> 16:45.260
你每个循环就是

16:45.260 --> 16:45.900
每循环意思

16:45.900 --> 16:47.180
就是生成一个banner嘛

16:47.180 --> 16:48.780
生成一个轮波图的一张

16:48.780 --> 16:49.300
对不对

16:49.300 --> 16:50.100
那么一张的数据

16:50.100 --> 16:50.940
全部全在这

16:50.940 --> 16:52.860
你不得把数据传给它嘛

16:52.860 --> 16:53.420
所以说我这里呢

16:53.420 --> 16:54.700
需要接受一个属箱

16:54.700 --> 16:55.980
啊

16:55.980 --> 16:57.100
标出一个属箱

16:57.100 --> 16:57.540
属箱的话

16:57.540 --> 16:59.220
我这里不做任何约束了

16:59.280 --> 17:01.400
因为它们的元老师的不严谨

17:02.960 --> 17:04.360
按严谨来说的话

17:04.360 --> 17:06.440
你属性不应该做约束吗

17:06.440 --> 17:08.560
为啥我这里不做约束了呢

17:08.560 --> 17:09.520
根本原因呢

17:10.880 --> 17:13.440
是因为这是一个不通用的组件

17:13.440 --> 17:14.800
它就被自己用

17:14.800 --> 17:16.560
那里约束到干嘛呢

17:16.560 --> 17:18.040
你能省一点就省一点啊

17:18.040 --> 17:19.640
所以说我跟同学们说

17:19.640 --> 17:21.800
越通用的东西越麻烦

17:21.800 --> 17:23.280
要考虑的东西越多

17:23.280 --> 17:24.920
越不通用的东西呢

17:24.920 --> 17:25.520
越无所谓

17:25.520 --> 17:27.760
很多地方的能充件就可以充件

17:27.780 --> 17:29.220
因为反正只有自己用

17:29.220 --> 17:30.500
主要是为了分割的

17:30.500 --> 17:32.060
本来它们两个是连在一起的

17:32.060 --> 17:33.180
功能是连在一起的

17:33.180 --> 17:33.700
对吧

17:33.700 --> 17:35.820
因此我这里就用这种简单的方式来写

17:37.900 --> 17:38.780
等一下我手机关一下

17:38.780 --> 17:39.420
有谁打电话

17:48.440 --> 17:48.640
好

17:48.640 --> 17:49.200
我们这里呢

17:49.200 --> 17:50.000
设置一个属性

17:50.000 --> 17:51.560
属性的名字呢

17:51.560 --> 17:53.280
就给它取一个班纳吧

17:54.000 --> 17:54.600
对吧

17:54.600 --> 17:55.800
或者是carousel吧

17:56.760 --> 17:57.600
carousel

17:58.920 --> 17:59.080
好

17:59.080 --> 17:59.600
那么这边呢

17:59.600 --> 18:01.320
我们有个属性需要传过去

18:01.320 --> 18:01.960
carousel

18:03.040 --> 18:03.520
为什么呢

18:03.520 --> 18:04.720
我有item

18:04.860 --> 18:05.780
把这个东西扔给他

18:05.780 --> 18:05.980
对吧

18:05.980 --> 18:07.300
我们的班纳数据扔给他

18:08.020 --> 18:08.460
好来吧

18:08.460 --> 18:09.700
那么这个src

18:10.780 --> 18:12.220
保存什么呢

18:12.220 --> 18:13.180
保存的就是

18:14.220 --> 18:15.620
属性carousel

18:15.620 --> 18:16.420
这是个对象啊

18:16.420 --> 18:17.780
对象就是那边传过来对象

18:17.780 --> 18:18.780
传过来对象哪来的

18:18.780 --> 18:19.700
来自于这个数组

18:19.700 --> 18:20.460
这个数组哪来的

18:20.460 --> 18:21.860
来自于远程寝球

18:21.860 --> 18:23.340
远程寝球这是模拟数据

18:23.340 --> 18:24.540
对吧

18:24.540 --> 18:26.180
那么这里src就是原图

18:26.180 --> 18:27.220
就是壁格Image

18:27.220 --> 18:27.620
大图

18:29.700 --> 18:29.940
对了

18:29.940 --> 18:31.300
一个Image

18:31.300 --> 18:33.500
那么它的Place Holder呢

18:33.560 --> 18:35.360
你看我们之前写的组件啊

18:35.360 --> 18:36.560
Place Holder这个数箱

18:38.440 --> 18:39.400
就是什么呢

18:39.400 --> 18:42.680
就是carousel.madeImage

18:44.360 --> 18:44.800
就这个

18:46.640 --> 18:47.000
就这个

18:47.000 --> 18:47.800
madeImage

18:48.480 --> 18:48.840
对吧

18:49.640 --> 18:49.880
好

18:49.880 --> 18:50.280
然后呢

18:50.280 --> 18:51.680
这还有一个区域啊

18:51.680 --> 18:53.000
这个区域呢

18:53.000 --> 18:53.960
一个是标题

18:53.960 --> 18:55.640
一个是描述

18:55.640 --> 18:56.320
一个是标题

18:56.320 --> 18:57.640
抬头

18:57.640 --> 18:58.920
这里面就直接填

19:00.080 --> 19:02.120
carousel.title

19:02.120 --> 19:03.120
还有一个是描述

19:03.180 --> 19:03.860
description

19:05.460 --> 19:06.820
carousel

19:06.820 --> 19:10.430
description

19:10.430 --> 19:10.790
好了

19:10.790 --> 19:12.430
我们这个组件结构呢

19:12.430 --> 19:13.790
就写好了

19:13.790 --> 19:14.630
你看

19:14.630 --> 19:14.990
刷新

19:18.960 --> 19:19.720
我的图片呢

19:21.320 --> 19:21.720
哎呀

19:21.720 --> 19:22.720
我的图片跑了去

19:32.070 --> 19:32.430
图片

19:32.430 --> 19:33.110
啊明白了

19:33.110 --> 19:33.870
明白了

19:33.870 --> 19:34.670
这个图片是

19:34.670 --> 19:35.950
我里边是色色攀高的啊

19:35.950 --> 19:36.910
就这里边

19:36.910 --> 19:38.030
这个这里边的东西

19:38.030 --> 19:38.630
这个玩意

19:38.630 --> 19:40.510
这个这个组件之前我们写过的

19:40.510 --> 19:41.930
它是充满复原书的

19:41.930 --> 19:43.530
但是复原书没有宽高

19:43.530 --> 19:44.130
看没

19:44.130 --> 19:45.330
是不是这个问题啊

19:45.330 --> 19:46.370
所以说我们这里呢

19:46.370 --> 19:47.730
把复原书的宽高色一下啊

19:47.730 --> 19:48.330
这个元素呢

19:48.330 --> 19:49.730
就是充满它的复原书

19:49.730 --> 19:51.050
你看它充满外层

19:51.050 --> 19:52.570
它又充满自己啊

19:52.570 --> 19:54.010
我们把这个东西写一下啊

19:54.010 --> 19:58.330
然后这两个是绝对定位啊

19:58.330 --> 20:00.010
宽度百分之百

20:00.010 --> 20:02.170
高度百分之百

20:02.170 --> 20:03.250
好保存

20:03.250 --> 20:05.090
你看这图片不出来了吗

20:05.090 --> 20:06.210
你看不能翻了吗

20:06.210 --> 20:06.530
对不对

20:06.530 --> 20:08.130
可以翻了吧

20:08.130 --> 20:09.130
那么现在这个图片呢

20:09.130 --> 20:10.410
怎么来移动鼠标

20:10.410 --> 20:11.530
然后动一下了

20:13.370 --> 20:14.570
现在这有个不着急

20:15.530 --> 20:17.530
那看不到这个图片

20:17.530 --> 20:19.170
它的那个渐进式的效果了

20:19.170 --> 20:20.050
因为这个图片啊

20:21.410 --> 20:23.930
我是放到那个我的马克档那个服务器上的

20:23.930 --> 20:24.730
那个服务器呢

20:24.730 --> 20:26.490
它所防御速度有点快啊

20:26.490 --> 20:26.890
所以说呢

20:26.890 --> 20:27.770
你看不见

20:27.770 --> 20:29.210
我们再再测试一下吧

20:29.210 --> 20:30.570
Blesswork

20:30.570 --> 20:32.570
这个disable的catch

20:32.570 --> 20:34.010
就是禁用缓存

20:34.010 --> 20:34.730
再打开

20:34.730 --> 20:39.080
再强制刷新一下

20:39.080 --> 20:40.640
倒是有这么一个效果太快了啊

20:40.640 --> 20:41.560
那么换一下吧

20:41.560 --> 20:42.640
换一个图片吧

20:42.640 --> 20:43.600
换成之前的图片

20:44.580 --> 20:45.700
换成这个啊

20:45.700 --> 20:46.780
原图地址是这个

20:46.780 --> 20:49.300
那么我们在模拟数据里边改一下啊

20:49.300 --> 20:49.900
改成这个

20:50.620 --> 20:51.340
原图地址

20:52.340 --> 20:53.780
这个图片这个数据很大

20:54.900 --> 20:55.340
然后呢

20:55.340 --> 20:56.620
这是play as holder

20:56.620 --> 20:57.780
反正都是测试数据嘛

20:57.780 --> 20:58.740
模拟数据测试

21:04.140 --> 21:04.700
大家啊

21:06.770 --> 21:08.770
你看现在是不是在站位

21:08.770 --> 21:09.170
然后呢

21:09.170 --> 21:09.970
渐进式图片

21:11.610 --> 21:12.010
出来

21:14.760 --> 21:15.520
渐进式图片

21:18.120 --> 21:19.360
老实出来啊

21:19.360 --> 21:20.160
需要这么久吗

21:21.160 --> 21:22.600
这么久有没有把我瞎了吗

21:22.600 --> 21:23.000
出来了

21:24.560 --> 21:25.680
是不是可以了

21:25.680 --> 21:25.880
哎

21:25.880 --> 21:26.400
那么现在呢

21:26.400 --> 21:28.040
我们要做的事情就是在这里

21:28.040 --> 21:30.200
把两行文字显示出来啊

21:30.200 --> 21:33.590
两行文字在这

21:33.590 --> 21:33.750
啊

21:33.750 --> 21:34.070
在这

21:35.470 --> 21:36.590
两行文字

21:37.670 --> 21:38.430
在这

21:38.430 --> 21:38.670
好了

21:38.670 --> 21:39.590
这两个号文字呢

21:39.590 --> 21:41.790
我们肯定要把它使用那个

21:41.790 --> 21:42.270
决定定位

21:43.470 --> 21:43.870
title

21:44.910 --> 21:46.630
这个是desk

21:46.630 --> 21:47.870
两个都是决定定位

21:47.870 --> 21:48.670
那么决定定位的话

21:48.670 --> 21:50.550
它复原说得相对定位吧

21:50.610 --> 21:51.050
placent

21:51.730 --> 21:52.290
relative

21:53.170 --> 21:53.290
好

21:53.290 --> 21:55.810
那么他们都是决定定位placent

21:55.810 --> 21:57.050
reabst note

21:57.770 --> 21:58.450
abst note

22:01.010 --> 22:01.850
找到位置吧

22:03.330 --> 22:04.970
然后首先呢

22:04.970 --> 22:06.210
他们是在

22:08.170 --> 22:10.650
垂直快要感觉垂直居中的样子啊

22:10.650 --> 22:12.250
我们这里没有对到一个效果来做

22:12.250 --> 22:13.050
我就按照

22:13.050 --> 22:15.050
有些个效果的有些地方做的不是很好啊

22:15.050 --> 22:16.250
我这里打算把改进一下

22:17.250 --> 22:18.530
我把它决定位

22:18.530 --> 22:19.690
然后垂直居中

22:19.750 --> 22:21.230
垂直居中的话

22:22.430 --> 22:23.230
50%

22:27.220 --> 22:28.460
neft的话

22:28.460 --> 22:31.100
就离左边离左边的话固定一个位置啊

22:31.100 --> 22:32.220
比方说30个相处

22:33.380 --> 22:34.820
文字颜色呢

22:34.820 --> 22:36.980
先大概设为白色吧

22:36.980 --> 22:39.900
设为白色

22:39.900 --> 22:41.180
看一下啊

22:41.180 --> 22:42.940
现在在这个位置全重叠的写的

22:42.940 --> 22:43.380
对吧

22:43.380 --> 22:44.660
重叠写的

22:44.660 --> 22:45.100
没关系啊

22:45.100 --> 22:46.180
我们一会再分开设置

22:48.500 --> 22:48.740
好

22:48.740 --> 22:49.540
一个来

22:49.540 --> 22:50.220
首先title

22:52.260 --> 22:53.380
title来分开设置啊

22:53.440 --> 22:54.640
transport

22:54.640 --> 22:56.360
它能往上一点吧

22:56.360 --> 22:57.960
就是top值

22:57.960 --> 23:02.350
我们这里用cow吧

23:02.350 --> 23:07.270
50%减去一个30个相处

23:12.300 --> 23:12.980
分开设置啊

23:12.980 --> 23:15.300
top值刚刚去分开设置的了

23:15.300 --> 23:18.460
title

23:18.460 --> 23:19.540
在这

23:19.540 --> 23:20.180
然后desk

23:21.940 --> 23:22.460
top值

23:24.700 --> 23:29.160
就50%吧

23:29.160 --> 23:30.000
差不多对吧

23:30.000 --> 23:31.440
差不多

23:31.440 --> 23:34.140
这里的40个相处再远一点

23:34.140 --> 23:34.340
好

23:34.340 --> 23:35.500
然后分开设置一下啊

23:35.500 --> 23:35.940
title呢

23:35.940 --> 23:37.500
我方size

23:37.500 --> 23:38.340
设作为2EM

23:40.620 --> 23:42.100
差不多有这个意思啊

23:42.100 --> 23:43.380
然后他们的lateral spacing呢

23:43.380 --> 23:45.180
我们要先去大一点啊

23:45.180 --> 23:45.740
三个相处

23:48.260 --> 23:49.940
有这个意思了

23:49.940 --> 23:52.860
然后这边的50%加一点吧

23:52.860 --> 23:55.840
lc

23:55.840 --> 23:56.880
50%

23:59.080 --> 24:01.440
加上一个20个相处

24:01.460 --> 24:02.500
就大概调一调

24:03.940 --> 24:04.340
嗯

24:04.340 --> 24:05.460
差不多有这个意思了

24:06.620 --> 24:07.220
好

24:07.220 --> 24:08.100
那么这两个呢

24:08.100 --> 24:08.780
这个文字呢

24:08.780 --> 24:10.340
下面的文字再稍微大一点啊

24:10.340 --> 24:11.820
方size

24:11.820 --> 24:12.980
1.1

24:12.980 --> 24:16.750
1.2EM

24:16.750 --> 24:17.550
OK

24:17.550 --> 24:17.670
好

24:17.670 --> 24:18.350
那么现在的文字

24:18.350 --> 24:20.990
我还要稍微的去修饰一下

24:20.990 --> 24:22.870
因为你这个背景图啊

24:22.870 --> 24:23.670
你这个图片

24:23.670 --> 24:24.390
这个图片呢

24:24.390 --> 24:26.070
它不一定就是一个深色的背景

24:26.070 --> 24:26.750
深色的图片

24:26.750 --> 24:29.070
那万一这个图片颜色比较浅了

24:29.070 --> 24:30.670
你这个文字就完全看不清楚了啊

24:30.670 --> 24:31.430
比方说desk呢

24:31.430 --> 24:32.190
它其实文本呢

24:32.190 --> 24:32.830
我还可以

24:32.890 --> 24:34.490
稍微把它调暗一点啊

24:34.490 --> 24:35.810
我们可以利用那个nesk

24:37.130 --> 24:37.570
nesk吧

24:37.570 --> 24:38.770
稍微调暗一点

24:38.770 --> 24:40.810
就是我写了什么nesk呢

24:40.810 --> 24:42.690
就是纳腾吧

24:42.690 --> 24:43.530
卡了

24:43.530 --> 24:44.450
文字颜色啊

24:44.450 --> 24:45.290
纳腾

24:45.290 --> 24:46.690
把那个灰色调亮

24:46.690 --> 24:47.850
稍微调亮一点啊

24:47.850 --> 24:48.810
纳腾

24:48.810 --> 24:50.770
灰色就是我们之前的gray

24:50.770 --> 24:51.850
调两个10%

24:54.130 --> 24:55.450
再稍微亮一点啊

24:55.450 --> 24:56.050
20%

24:57.210 --> 24:57.450
OK

24:58.530 --> 24:59.290
那么这个文字呢

24:59.290 --> 25:00.050
如果说背景颜色

25:00.050 --> 25:02.090
它比背景图片比较浅的话

25:02.110 --> 25:03.990
它就有可能就看不清楚了

25:03.990 --> 25:05.030
像那种深色背景呢

25:05.030 --> 25:06.390
还看得很清楚

25:06.390 --> 25:07.590
但是如果说浅色背景的话

25:07.590 --> 25:09.070
就有点看不清楚了

25:09.070 --> 25:10.110
那么看不清楚怎么办呢

25:10.110 --> 25:11.870
我们可以给文字做一个描边

25:11.870 --> 25:12.510
怎么描边呢

25:12.510 --> 25:15.190
其实就是利用我们的take a shot shadow

25:16.510 --> 25:17.550
可以利用take a shot shadow

25:19.510 --> 25:23.950
然后找到这个文字

25:23.950 --> 25:25.150
我们先不显示图片吧

25:26.470 --> 25:28.070
不显示这个玩意儿

25:28.070 --> 25:29.630
你就看得很清楚了

25:29.630 --> 25:31.510
倒是有这么一个背景

25:31.510 --> 25:32.310
背景我该去掉

25:33.290 --> 25:35.890
背景去掉

25:37.330 --> 25:38.010
你看

25:38.010 --> 25:39.930
你这个白色的文字根本就看不清楚

25:39.930 --> 25:40.490
那么怎么办呢

25:40.490 --> 25:41.730
该做个描边啊

25:41.730 --> 25:43.610
这个描边呢其实就是一个take a shot shadow

25:45.530 --> 25:46.650
一点点来描

25:46.650 --> 25:47.930
就是四个方向来描一描

25:49.530 --> 25:50.370
take a shot shadow

25:54.400 --> 25:55.960
第一个参数是

25:55.960 --> 25:57.280
前两个是靠右

25:58.160 --> 25:59.560
就横向一个是纵向

25:59.560 --> 26:01.600
一个是扩散范围对不对

26:01.600 --> 26:05.280
那么横向一开始向右一个向数

26:05.340 --> 26:06.140
纵向的0

26:06.900 --> 26:08.060
扩散了0

26:10.740 --> 26:11.940
颜色的RGB

26:13.540 --> 26:14.460
颜色就有黑色吧

26:15.740 --> 26:17.420
或者一个半透明的黑色也可以

26:18.420 --> 26:19.060
一点点

26:19.740 --> 26:20.020
0

26:21.700 --> 26:21.980
9

26:22.980 --> 26:23.460
看一下

26:24.100 --> 26:25.260
说向右一个描边了

26:26.220 --> 26:26.380
好

26:27.020 --> 26:27.540
继续啊

26:27.540 --> 26:29.420
我们要四个方向全部描一试

26:31.180 --> 26:31.860
这个有个描边

26:31.860 --> 26:32.420
再来

26:32.420 --> 26:34.900
纵横向的为负一

26:36.260 --> 26:36.980
纵向为0

26:37.620 --> 26:39.580
你看左边是不是一个秒边了

26:39.580 --> 26:39.980
对不对

26:39.980 --> 26:40.780
我们再来

26:42.900 --> 26:43.580
然后呢

26:43.580 --> 26:44.500
横向为0

26:44.500 --> 26:45.780
纵向了我一个向数

26:48.140 --> 26:49.380
下面是不是一个秒边了

26:49.380 --> 26:49.740
然后呢

26:49.740 --> 26:50.220
再来

26:50.220 --> 26:50.660
再来一个

26:54.770 --> 26:55.610
负一

26:55.610 --> 26:56.410
纵向为负一

26:57.690 --> 26:58.930
四个方向都有影影了

26:58.930 --> 27:00.090
是不是秒个边了

27:00.090 --> 27:01.290
就起这么一个作用啊

27:02.330 --> 27:02.570
好了

27:02.570 --> 27:03.410
这样子以秒边

27:03.410 --> 27:04.090
那个怎么样

27:04.090 --> 27:05.450
这个文字都能看得见的

27:05.450 --> 27:06.330
对吧

27:06.330 --> 27:07.570
怎么样都能看得见

27:07.570 --> 27:07.930
OK

27:07.930 --> 27:08.770
我再把这个加上啊

27:10.290 --> 27:11.610
现在明天看到这个文字

27:11.610 --> 27:13.850
看上去是不是就舒服一点

27:14.810 --> 27:15.210
OK

27:15.210 --> 27:16.650
那么我们接下来呢

27:16.650 --> 27:19.090
就是要对他做一些动画效果

27:20.530 --> 27:21.130
首先呢

27:21.130 --> 27:21.930
这个文字呢

27:21.930 --> 27:23.050
他有一个动画效果

27:23.050 --> 27:24.330
什么动画效果呢

27:24.330 --> 27:25.690
就是他的

27:25.690 --> 27:26.530
我希望呢

27:27.410 --> 27:28.970
他不要直接刷了一下

27:28.970 --> 27:29.610
就出现了

27:30.490 --> 27:31.370
出现的时候呢

27:31.370 --> 27:33.370
要从宽度为0

27:33.370 --> 27:35.810
逐渐变化到宽度为out

27:37.250 --> 27:38.930
我们现在要做这么一件事

27:38.930 --> 27:39.490
宽度

27:40.330 --> 27:41.610
从0

27:41.610 --> 27:44.170
变化到宽度为out

27:44.170 --> 27:44.930
那么这样子呢

27:44.930 --> 27:45.930
我在

27:45.930 --> 27:46.970
这个你看啊

27:46.970 --> 27:48.170
我们现在要做这么一个效果

27:48.170 --> 27:50.370
我给你先给他做个测试吧

27:50.370 --> 27:52.650
比方说我们先把这两个呢

27:53.930 --> 27:54.450
看一下吧

27:54.450 --> 27:55.810
就直接在这里测试

27:56.770 --> 27:58.770
我先首先把他设置为宽度为0

27:59.770 --> 28:01.690
宽度为他的文字就换行了啊

28:01.690 --> 28:02.090
所以说呢

28:02.090 --> 28:03.170
我还给他加上一个

28:03.170 --> 28:03.970
加上这两个属性

28:06.330 --> 28:08.330
加上一个wise space

28:09.310 --> 28:10.230
no wide

28:10.230 --> 28:11.350
不要换行

28:11.350 --> 28:11.670
然后呢

28:11.670 --> 28:14.990
overflow height

28:14.990 --> 28:15.990
看着啊

28:15.990 --> 28:16.470
我现在呢

28:16.470 --> 28:17.190
把宽度一开始

28:17.190 --> 28:17.830
加设为0

28:17.830 --> 28:19.350
是不是看不见了啊

28:19.350 --> 28:19.750
然后呢

28:19.750 --> 28:21.430
逐渐的给他增加宽度

28:21.430 --> 28:22.470
增加到多少呢

28:22.470 --> 28:23.190
增加到out

28:27.320 --> 28:28.120
太多了

28:29.120 --> 28:29.600
这样子

28:29.600 --> 28:30.040
你看

28:30.040 --> 28:31.600
文字是不是逐渐就显现出来了

28:36.350 --> 28:37.590
文字逐渐显现

28:37.590 --> 28:39.790
直到宽度变成out

28:39.790 --> 28:40.270
但是呢

28:40.270 --> 28:41.870
我们你们学过c3

28:41.870 --> 28:42.550
你们要知道

28:43.990 --> 28:46.590
宽度从0变化到out

28:47.590 --> 28:48.790
是不可能产生动画的

28:50.150 --> 28:51.190
不信咱们试一下吧

28:52.550 --> 28:53.270
我们这里呢

28:53.270 --> 28:55.390
给他加上一个trace

28:57.950 --> 28:59.430
无论是trace还是animation

28:59.430 --> 29:01.310
本质都是一样的

29:01.310 --> 29:03.990
比方说我们给他加上一个三秒钟

29:03.990 --> 29:05.190
三秒钟完成动画

29:05.190 --> 29:05.630
宽度呢

29:05.630 --> 29:06.710
从0变成out

29:06.710 --> 29:07.350
那么一开始呢

29:07.350 --> 29:08.030
给他设为0

29:09.790 --> 29:10.430
变成out

29:10.430 --> 29:11.190
你看啊

29:11.190 --> 29:12.230
一开始是0吧

29:12.230 --> 29:12.510
然后呢

29:12.510 --> 29:13.470
变成out

29:13.490 --> 29:14.690
有动画吗

29:14.690 --> 29:16.050
没有动画

29:16.050 --> 29:16.450
啊

29:16.450 --> 29:18.570
这是那个这个问题呢

29:18.570 --> 29:20.170
将来看能不能解决吧

29:20.170 --> 29:20.730
我哭泣了

29:20.730 --> 29:21.290
这个问题解决

29:21.290 --> 29:22.330
现在还是有点悬

29:22.330 --> 29:24.130
他可能要用别的方式来解决

29:24.130 --> 29:26.050
这跟他内部的计算方式有关

29:26.050 --> 29:27.130
跟c3的

29:27.130 --> 29:29.450
跟c3的计算属性有关系

29:29.450 --> 29:31.570
他必须要是个固定的字

29:31.570 --> 29:32.290
比方说啊

29:32.290 --> 29:36.140
像我们刚说300

29:36.140 --> 29:37.100
到0

29:37.100 --> 29:37.940
哎

29:37.940 --> 29:41.290
300不行吗

29:41.290 --> 29:42.730
300

29:42.730 --> 29:43.730
300的

29:43.730 --> 29:43.890
哦

29:43.890 --> 29:45.330
现在还是0啊

29:45.330 --> 29:46.170
你看

29:46.230 --> 29:47.550
从0到300

29:48.710 --> 29:50.150
300再变到0

29:50.150 --> 29:50.790
就可以了

29:50.790 --> 29:51.550
这样子

29:51.550 --> 29:51.910
但是呢

29:51.910 --> 29:52.750
这个固定的值呢

29:52.750 --> 29:54.190
其实又又有问题

29:54.190 --> 29:55.870
因为你并不知道他的宽度是多少

29:56.750 --> 29:57.670
对不对

29:57.670 --> 29:58.150
啊哈哈

29:58.150 --> 29:59.430
那这么这个问题呢

29:59.430 --> 30:00.950
还挺麻烦的啊

30:00.950 --> 30:01.790
遇到这种问题啊

30:01.790 --> 30:03.470
就是你不知道他的宽度是多少

30:03.470 --> 30:03.950
有的时候呢

30:03.950 --> 30:06.390
一个元素他不知道他的高度是多少

30:06.390 --> 30:06.550
哎

30:06.550 --> 30:08.470
我们像从从一个0

30:08.470 --> 30:10.110
从一个值变化到他的out

30:10.110 --> 30:11.670
值那怎么办呢

30:11.670 --> 30:11.830
哎

30:11.830 --> 30:12.990
我们可以这样子啊

30:14.470 --> 30:15.190
这个文字呢

30:15.210 --> 30:17.130
我们首先让他显示出来

30:17.130 --> 30:17.970
但是呢

30:17.970 --> 30:19.930
就是让他这个元素先存在

30:20.890 --> 30:22.170
不要这两个属性啊

30:22.170 --> 30:22.730
让这两

30:22.730 --> 30:24.010
这这一个元素先存在

30:24.010 --> 30:24.370
但是呢

30:24.370 --> 30:24.970
看不见

30:26.290 --> 30:27.730
怎么让他看不见呢

30:27.730 --> 30:29.370
是不是可以有很多种方式

30:29.370 --> 30:30.050
让他看不见

30:30.050 --> 30:31.770
是不是可以把他opacity设为0

30:33.810 --> 30:34.350
把他先

30:34.350 --> 30:35.730
过渡效果先去掉啊

30:35.730 --> 30:37.890
这个地方我们要用介石控制啊

30:37.890 --> 30:39.330
首先最开始的时候

30:39.330 --> 30:40.370
opacity为0

30:41.250 --> 30:41.410
啊

30:41.410 --> 30:42.210
我们来看一下

30:42.210 --> 30:44.410
我们把这里的opacity加上

30:44.430 --> 30:45.630
我开始提为0

30:45.630 --> 30:47.430
那么这样子的两个元素是不是看不见了

30:48.430 --> 30:49.110
两个元素看不见

30:49.110 --> 30:50.550
但是他宽度存不存在

30:50.550 --> 30:51.310
存在

30:51.310 --> 30:54.390
我们先用介石来获取他的自动宽度

30:54.390 --> 30:55.790
先获取出来

30:55.790 --> 30:57.590
那么这个能不能办到

30:57.590 --> 30:58.870
能不能办到啊

30:58.870 --> 31:00.630
肯定是可以办到的嘛

31:00.630 --> 31:02.190
那怎么办到呢

31:02.190 --> 31:03.190
看着啊

31:03.190 --> 31:04.590
我们可以这里呢

31:04.590 --> 31:06.550
给他加上一个raves

31:06.550 --> 31:06.870
rave

31:08.150 --> 31:08.870
取个值吧

31:08.870 --> 31:09.910
叫

31:09.910 --> 31:10.550
title吧

31:11.950 --> 31:12.310
这个呢

31:12.310 --> 31:12.750
rave

31:12.750 --> 31:13.750
叫this

31:13.810 --> 31:14.890
deskcripting

31:14.890 --> 31:15.050
好

31:15.050 --> 31:16.450
我们这里是不是要用mounted

31:16.450 --> 31:17.650
这个生命中心函数

31:18.530 --> 31:19.490
然后我们这里呢

31:19.490 --> 31:21.770
可以记录一下他的两个两个宽度啊

31:23.130 --> 31:23.610
这个问题呢

31:23.610 --> 31:24.570
其实在我的效果里边

31:24.570 --> 31:25.810
我并没有处理的啊

31:25.810 --> 31:28.690
我就直接从0变化到50%

31:28.690 --> 31:29.490
100啊

31:29.490 --> 31:30.930
就变得很宽

31:30.930 --> 31:32.770
实际上我们要做最好的效果的话

31:32.770 --> 31:34.130
我们这里要精确控制一下

31:35.330 --> 31:36.290
title width

31:37.290 --> 31:37.530
0

31:40.030 --> 31:40.510
title

31:41.390 --> 31:42.550
desk width

31:43.870 --> 31:44.710
一开始是0

31:46.110 --> 31:47.190
然后呢

31:47.190 --> 31:48.230
mounted的时候呢

31:48.230 --> 31:50.230
我把这两个设置一下啊

31:50.230 --> 31:51.510
this title width

31:51.510 --> 31:53.110
this ribs

31:53.110 --> 31:54.910
their title

31:54.910 --> 31:57.110
their client width

31:57.110 --> 32:01.110
then this disk width

32:01.110 --> 32:03.310
then use this ribs

32:03.310 --> 32:03.910
desk

32:05.110 --> 32:06.710
their client width

32:06.710 --> 32:07.430
那么这样子呢

32:07.430 --> 32:08.750
我们加载完成之后

32:08.750 --> 32:10.430
这两个元素他本身是显示的

32:10.430 --> 32:11.110
而是有的

32:11.110 --> 32:13.310
只不过Opacity为0

32:13.310 --> 32:14.830
透明看不见而已

32:14.970 --> 32:16.250
我再输出这两个属性

32:16.250 --> 32:17.250
这两个值啊

32:17.250 --> 32:21.240
看一下能不能正常的过渠到

32:21.240 --> 32:24.500
保存

32:24.500 --> 32:25.140
这打印出来了

32:26.740 --> 32:28.700
因为我们这里有三张轮波图

32:28.700 --> 32:29.500
就是打印了三次

32:29.500 --> 32:30.180
第一个

32:30.180 --> 32:31.740
140 266

32:32.940 --> 32:33.540
看一下

32:33.540 --> 32:35.220
140 266

32:35.220 --> 32:36.140
这个DIV

32:37.540 --> 32:37.980
所以

32:39.340 --> 32:39.860
140

32:39.860 --> 32:40.900
第一个宽度140

32:40.900 --> 32:43.100
第二个宽度是266

32:43.100 --> 32:44.020
266

32:44.020 --> 32:44.780
那这个小数点

32:44.780 --> 32:45.900
我就不用没管他的啊

32:47.180 --> 32:47.700
好

32:47.760 --> 32:50.240
那么这样子的获取到了两个

32:50.800 --> 32:52.520
宽度之后有什么用呢

32:52.520 --> 32:53.800
我们就把保存到这个数

32:53.800 --> 32:54.960
数据里面我们一会儿有用

32:56.640 --> 32:56.840
好

32:56.840 --> 32:58.680
接下来就是显示文字了

32:58.680 --> 32:59.600
显示文字的

32:59.600 --> 33:00.600
我们给他写个方法

33:00.600 --> 33:01.680
来显示这个文字

33:02.680 --> 33:03.160
秀

33:05.880 --> 33:06.400
味儿子吧

33:07.760 --> 33:08.480
显示文字

33:09.480 --> 33:11.000
一定要用这个方法就会显示文字

33:13.080 --> 33:14.760
调用该方法

33:15.800 --> 33:17.480
显示文字

33:17.540 --> 33:18.580
其实怎么显示呢

33:19.220 --> 33:21.620
无非就是有这么几个步骤啊

33:22.700 --> 33:23.460
首先呢

33:23.460 --> 33:26.020
把他的他的那个就是

33:26.020 --> 33:26.900
偶拍式体先

33:28.260 --> 33:29.700
把他的宽度先设为0

33:30.580 --> 33:32.420
偶拍式体再设为1

33:32.420 --> 33:33.300
是不是这样子呢

33:33.300 --> 33:34.140
他就能看见了

33:34.140 --> 33:35.860
但是那宽度为0

33:35.860 --> 33:37.380
就改变他的显示方式啊

33:37.380 --> 33:39.060
把他的偶拍式体设为0

33:39.060 --> 33:39.860
宽度为1

33:39.860 --> 33:40.300
而这里呢

33:40.300 --> 33:41.980
我们可以直接操作动物元素

33:41.980 --> 33:42.980
同学说

33:42.980 --> 33:43.700
老师啊

33:43.700 --> 33:45.220
那我们做不幼的时候

33:45.220 --> 33:47.300
不是说尽量不要直接操作动物元素

33:47.360 --> 33:49.200
根据数据来生成动物元素的状态

33:49.200 --> 33:51.200
是大部分时候是这样子

33:51.200 --> 33:52.200
但是有的时候呢

33:52.200 --> 33:54.120
也会发现用状态去控制动物元素了

33:54.760 --> 33:55.760
反而麻烦

33:55.760 --> 33:56.480
有的时候呢

33:56.480 --> 33:57.520
还不如直接控制

33:57.520 --> 33:58.880
反而简单一点啊

33:58.880 --> 33:59.920
比方说像这个地方

33:59.920 --> 34:01.840
我们可以直接控制动物元素

34:01.840 --> 34:02.880
因为有这个玩意儿嘛

34:02.880 --> 34:03.480
对吧

34:03.480 --> 34:04.160
所以说我们呢

34:04.160 --> 34:04.720
秀

34:04.720 --> 34:06.080
这里我们就调用他啊

34:08.080 --> 34:08.760
this

34:08.760 --> 34:09.280
秀

34:10.320 --> 34:10.760
word

34:12.200 --> 34:12.800
调用一下

34:12.800 --> 34:13.840
显示文字

34:13.840 --> 34:15.600
首先我们第一步要做什么呢

34:15.820 --> 34:16.820
我们找到

34:18.820 --> 34:19.300
title

34:22.900 --> 34:23.860
revs什么呢

34:23.860 --> 34:24.380
title

34:24.380 --> 34:25.540
一个个来

34:25.540 --> 34:26.380
把它的什么呢

34:26.380 --> 34:27.580
style

34:27.580 --> 34:29.220
opacity

34:29.220 --> 34:29.820
设为1

34:31.020 --> 34:32.100
是不是可以显示的

34:32.100 --> 34:32.660
你看啊

34:33.540 --> 34:34.020
这样子

34:34.020 --> 34:35.140
这个东西是不是可以显示的

34:35.140 --> 34:36.620
已经拿到宽度了啊

34:36.620 --> 34:37.500
宽度已经拿到了

34:37.500 --> 34:38.700
140

34:38.700 --> 34:40.220
已经可以显示的

34:40.220 --> 34:41.140
显示出来过后了

34:41.140 --> 34:41.420
但是呢

34:41.420 --> 34:43.980
我把同时把宽度给他设为0

34:43.980 --> 34:45.820
就改变上的显示方式

34:45.820 --> 34:46.220
title

34:46.220 --> 34:46.620
style

34:47.100 --> 34:47.940
with

34:47.940 --> 34:48.420
等于0

34:50.420 --> 34:51.540
好你看啊

34:51.540 --> 34:53.620
现在的他一开始的本来是

34:53.620 --> 34:54.620
本来是

34:54.620 --> 34:55.140
opacity

34:55.140 --> 34:57.500
是显示不出来是因为opacity为0

34:57.500 --> 34:58.980
但是呢现在把它看

34:58.980 --> 35:00.460
opacity变为1了

35:00.460 --> 35:01.420
可以显示了

35:01.420 --> 35:04.020
但是呢是由于宽度为0显示不了

35:04.020 --> 35:05.020
为什么要终成这样子的

35:05.020 --> 35:06.140
因为我们有一会变化

35:06.140 --> 35:07.460
变化的不是opacity

35:07.460 --> 35:08.580
变化的是宽度

35:08.580 --> 35:08.780
对吧

35:08.780 --> 35:11.100
所以说先让他显示出来

35:11.100 --> 35:13.100
显示出来了之后了

35:14.300 --> 35:15.220
接下来

35:15.220 --> 35:16.220
我们要做这么一件事

35:17.180 --> 35:18.900
显示出来到之后

35:18.900 --> 35:20.700
我们要把它的

35:22.780 --> 35:23.340
那个

35:23.340 --> 35:23.900
refs

35:25.180 --> 35:25.740
transition

35:27.900 --> 35:28.260
title

35:29.140 --> 35:31.100
是不是该加上一个transition

35:31.100 --> 35:31.660
transition

35:31.660 --> 35:32.620
给他加上一个

35:32.620 --> 35:33.940
比方说

35:33.940 --> 35:35.020
一秒钟吧

35:35.020 --> 35:38.100
一秒钟显示出来

35:38.100 --> 35:38.940
没问题吧

35:38.940 --> 35:40.100
好加上一秒

35:40.100 --> 35:41.900
有这么一个过度状态

35:41.900 --> 35:43.140
加上过度之后

35:43.140 --> 35:44.500
然后接下来了

35:44.500 --> 35:46.100
再把宽度给他设置为

35:47.100 --> 35:47.700
这个宽度

35:48.500 --> 35:50.580
那么我请问一下大家

35:50.580 --> 35:52.140
如果说我直接这样子写

35:55.570 --> 35:56.730
title位置

35:56.730 --> 35:57.090
行吗

35:58.250 --> 35:59.010
大家PX吧

36:00.690 --> 36:01.130
可以吗

36:02.570 --> 36:02.730
好

36:02.730 --> 36:03.450
我们试一下

36:03.450 --> 36:04.810
试一下就知道可不可以了

36:04.810 --> 36:05.530
看有没有动画吗

36:07.130 --> 36:08.090
所以还是没动画

36:08.090 --> 36:08.570
为什么呢

36:08.570 --> 36:09.730
因为我们知道

36:09.730 --> 36:11.650
这是基础基本功啊

36:11.650 --> 36:12.610
你这一句话

36:12.610 --> 36:14.930
跟这一句话都在设置宽度

36:14.930 --> 36:17.610
因为我们流量器的渲染是异步的

36:17.610 --> 36:17.770
对吧

36:17.770 --> 36:19.490
这里是直接操作动物元素啊

36:19.510 --> 36:21.790
跟我们传统的做法是一样的

36:21.790 --> 36:23.070
那么这里以后

36:23.070 --> 36:25.430
因为那个流量器的渲染是异步的

36:25.430 --> 36:26.990
他们说运行完了过后再渲染

36:26.990 --> 36:28.470
运行完了过后渲染有效果吗

36:28.470 --> 36:29.470
肯定是没有效果的

36:30.830 --> 36:31.430
对吧

36:31.430 --> 36:32.230
那么他渲染的时候

36:32.230 --> 36:33.550
他就直接按照这个来渲染了

36:33.550 --> 36:36.070
根本就不知道之前还设置过一次零

36:36.070 --> 36:36.630
所以说呢

36:36.630 --> 36:40.710
我们把这个初始状态设置好了之后

36:40.710 --> 36:44.110
我们需要在这里的强制让它渲染一次

36:44.110 --> 36:47.270
强制让这些东西都是纯粹的动物操作

36:47.290 --> 36:49.570
因为最传统的方式是一样的

36:50.570 --> 36:52.010
他跟无忧就没什么关系了

36:52.010 --> 36:54.050
只不过无忧在调用这个函数而已

36:54.050 --> 36:57.210
强制让流量器渲染一次

36:58.730 --> 36:59.730
那怎么让它渲染呢

36:59.730 --> 37:00.370
我们说过

37:00.370 --> 37:03.850
只要夺去动物元素的宽度啊

37:03.850 --> 37:05.170
高度啊

37:05.170 --> 37:06.450
还有什么呢

37:06.450 --> 37:07.650
还有什么位置啊

37:07.650 --> 37:10.250
都会导致它重新渲染

37:10.250 --> 37:11.410
这里都是重渲了

37:11.410 --> 37:11.930
Ref了

37:13.090 --> 37:13.570
好

37:13.570 --> 37:14.290
保存啊

37:14.290 --> 37:14.690
看一下

37:15.670 --> 37:18.220
刷新

37:18.220 --> 37:19.580
是不是可以了

37:19.580 --> 37:19.780
好

37:19.780 --> 37:20.060
那么

37:21.260 --> 37:22.860
这个标题如此

37:24.340 --> 37:25.460
表述是不是也一样

37:26.580 --> 37:27.260
描述

37:29.100 --> 37:29.980
也是一样

37:31.980 --> 37:32.580
好

37:32.580 --> 37:33.860
拿过来

37:33.860 --> 37:34.820
把这里变成什么了

37:34.820 --> 37:35.700
变成描述

37:35.700 --> 37:37.660
其实你还可以单独去抽离一个方法出来

37:38.860 --> 37:39.420
描述呢

37:39.420 --> 37:40.140
给它两秒钟

37:42.700 --> 37:42.860
好

37:42.860 --> 37:43.540
咱们来看一下吧

37:46.810 --> 37:49.810
咱们描述的宽度不是Title的位置

37:49.810 --> 37:50.610
Disk位置

37:54.450 --> 37:54.690
好

37:54.690 --> 37:55.970
那么就差不多了

37:55.970 --> 37:56.930
然后呢

37:56.930 --> 37:58.450
我们再继续优化一下啊

37:58.450 --> 37:59.970
因为我希望描述呢

38:00.770 --> 38:02.250
它延迟一秒

38:02.250 --> 38:04.250
就是等标题显示完了过后

38:04.250 --> 38:05.250
再显示描述

38:05.250 --> 38:08.050
那么我这里是不是可以延迟一秒就完成了

38:08.050 --> 38:08.650
保存

38:08.650 --> 38:12.130
再来

38:12.130 --> 38:12.810
对吧

38:12.810 --> 38:13.730
好像没啥问题了

38:13.730 --> 38:15.450
对不对

38:15.450 --> 38:16.970
但是好像没啥问题了

38:16.970 --> 38:17.650
但是实际上呢

38:17.650 --> 38:19.890
还是有一点美中不足的

38:19.910 --> 38:22.150
怎么了就是他的文字显示的太早了

38:22.150 --> 38:23.470
我希望他慢一点显示

38:23.470 --> 38:24.510
什么时候显示呢

38:24.510 --> 38:27.710
等这个图像夹仔完成之后再显示

38:27.710 --> 38:30.070
哎这个图像什么时候夹仔完成了

38:30.070 --> 38:31.670
我们之前不是写过那个组件吗

38:31.670 --> 38:32.790
因为你楼到这个组件

38:32.790 --> 38:34.510
他里面不有个事件都漏的吗

38:34.510 --> 38:34.950
对吧

38:34.950 --> 38:36.710
有漏的事件触发的时候呢

38:36.710 --> 38:38.430
我再去调这个函数

38:38.430 --> 38:39.390
你而言是吧

38:39.390 --> 38:39.950
所以说呢

38:39.950 --> 38:40.750
我这里呢

38:41.590 --> 38:42.310
这样子来写

38:43.190 --> 38:43.830
给他一个漏的

38:45.070 --> 38:46.710
当夹仔完成之后

38:46.730 --> 38:47.290
this

38:49.330 --> 38:51.010
叫做show words

38:51.010 --> 38:54.200
show words

38:54.200 --> 38:57.460
看一下吧

38:57.460 --> 38:58.420
夹仔有点慢啊

38:58.420 --> 39:00.340
这个图像

39:00.340 --> 39:01.700
图片夹仔挺慢的

39:02.780 --> 39:06.860
因为我之前一把缓存琴了

39:06.860 --> 39:14.100
怎么时候夹仔出来啊

39:14.100 --> 39:14.740
等一等吧

39:15.940 --> 39:17.100
等一等吧

39:17.100 --> 39:20.380
我这里先红不到了

39:20.380 --> 39:22.420
等这个图片夹仔完成

39:23.740 --> 39:25.660
其实我们要做的事情都差不多了

39:25.660 --> 39:29.350
都差不多了

39:29.410 --> 39:30.050
哎呦

39:30.050 --> 39:30.250
天呐

39:30.250 --> 39:30.810
太难等了

39:31.930 --> 39:39.700
图片太大了

39:39.700 --> 39:40.540
快点

39:40.540 --> 39:41.380
快点

39:41.380 --> 39:42.540
快点

39:42.540 --> 39:44.020
你们到时候还可以拖进度条

39:44.020 --> 39:49.390
我只能站在这里干等

39:49.390 --> 39:50.910
图片太大了吧

39:50.910 --> 39:51.470
这个图片

39:53.310 --> 39:54.790
稍微设置小一点吧

39:55.790 --> 39:56.830
1920

39:58.430 --> 39:59.870
1080

39:59.870 --> 40:03.840
1080

40:03.840 --> 40:15.520
保存

40:15.520 --> 40:17.040
我这个天啊

40:17.040 --> 40:18.640
这个啥图片

40:18.640 --> 40:19.000
这是

40:22.980 --> 40:23.500
换了

40:23.500 --> 40:23.860
算了

40:23.860 --> 40:24.180
算了

40:24.480 --> 40:25.680
难得等它了

40:25.680 --> 40:27.480
你们自己愿意能去等吧

40:27.480 --> 40:28.080
我这里换

40:28.080 --> 40:29.200
把这个换到第一张了

40:30.880 --> 40:31.280
你看

40:32.400 --> 40:33.840
这就挺好了

40:33.840 --> 40:34.400
再再刷新

40:37.900 --> 40:38.380
就挺好

40:39.420 --> 40:39.780
OK

40:39.780 --> 40:41.220
那么这就是咱们

40:41.940 --> 40:42.580
这个页面的效果

40:42.580 --> 40:43.420
这还没完啊

40:43.420 --> 40:45.340
下几颗还有一些东西

40:45.340 --> 40:46.740
但是现在我们可以看一下

40:46.740 --> 40:48.180
每张页面的实际上

40:48.180 --> 40:48.980
这个都还在夹仔

40:50.220 --> 40:52.100
这个文字其实一早就显示出来了

40:52.100 --> 40:54.820
只是在我们没有看到的情况下

40:54.840 --> 40:56.360
它已经完成了渲染了

40:56.360 --> 40:57.960
因为这三张图片是同时进行的

40:57.960 --> 40:58.720
对吧

40:58.720 --> 40:59.800
是同时进行的

40:59.800 --> 41:02.160
我并没有去做划到某一张的时候

41:02.160 --> 41:03.200
再去夹仔它

41:03.200 --> 41:04.400
并没有去做这个效果

41:04.400 --> 41:05.800
如果说你想做这个效果的话

41:05.800 --> 41:06.560
我告诉大家

41:06.560 --> 41:08.320
这个效果的比较复杂一点

41:08.320 --> 41:09.720
你可以去尝试一下

41:09.720 --> 41:11.080
可以去挑战一下

41:11.080 --> 41:11.960
但是呢

41:11.960 --> 41:13.520
做不出来是正常现象

41:13.520 --> 41:15.280
如果说你要划动过去再显示的话

41:15.280 --> 41:16.520
可以去想想你们什么办法

41:17.640 --> 41:17.960
OK

41:17.960 --> 41:19.640
那么我们

41:19.640 --> 41:20.880
这几颗就到这了

41:20.880 --> 41:21.560
我先坐到这

41:21.560 --> 41:21.920
下几颗

41:21.920 --> 41:22.960
我们把这个手液

41:22.960 --> 41:23.840
这一块全部做完

