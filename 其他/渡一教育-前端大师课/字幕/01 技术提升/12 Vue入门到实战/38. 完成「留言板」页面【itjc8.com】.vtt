WEBVTT

00:00.000 --> 00:03.580
来吧 咱们一鼓作气 把这个留言板给他做了

00:04.860 --> 00:10.500
你看吧 我没有骗你们吧 就是这个网站开发就这样子啊 前边慢 后面越来越快了

00:11.520 --> 00:14.340
现在我们来做这个留言板 在我们之前有很多

00:14.600 --> 00:18.700
组建 还有就是一些混合啊 一些东西的支持项

00:19.200 --> 00:22.520
做这个留言板就非常轻松了啊 我们按照那个

00:24.320 --> 00:27.900
咱们之前的那个接口文档 首先把这个API给他写了

00:28.160 --> 00:30.200
API我已经写好了 这些这些

00:30.720 --> 00:32.760
这些事情呢 我们就不去

00:33.020 --> 00:33.540
在课堂讲了

00:34.300 --> 00:38.400
两个API 一个是得到分业 分业来得到所有的

00:39.160 --> 00:41.460
消息 也就是留言板的消息

00:41.720 --> 00:44.800
另外一个呢 就是提交消息 提交一个留言板消息

00:45.060 --> 00:47.100
你给我一个对象 这个对象里面两个属性

00:47.880 --> 00:48.380
你看吧

00:49.400 --> 00:50.180
两个属性

00:50.680 --> 00:51.700
留言板

00:51.960 --> 00:52.220
提交

00:52.420 --> 00:54.220
一个那个内

00:54.480 --> 00:58.320
就是里程 一个是内容 其实跟那个评论差不多的对吧

00:59.080 --> 01:00.100
好 这是API啊

01:00.360 --> 01:01.900
然后是默克数据

01:02.920 --> 01:03.700
大概过一下吧

01:05.240 --> 01:06.500
留言板

01:06.760 --> 01:09.580
两个默克数据 一个是分业得到消息这一块

01:09.840 --> 01:12.660
分业的吧 一个是提交消息啊 提交留言板

01:12.920 --> 01:16.700
提交留言板的话 我们这里呢 就模拟的一个数据啊 给他返回

01:16.960 --> 01:20.080
随便一定是提交成功 我就给他返回这么一个东西

01:20.340 --> 01:21.620
ID

01:22.420 --> 01:26.260
名字 里程 内容 对吧 你提交了内容 但是这些都是模拟的啊

01:26.520 --> 01:27.800
然后就是提交时间

01:28.560 --> 01:30.880
然后这里呢 一个头像啊 随机生生成一个头像

01:31.400 --> 01:32.920
OK啊 这就是咱们的

01:33.180 --> 01:33.960
提交留言板

01:34.720 --> 01:37.020
好 下一个啊 下一个就是那个

01:37.780 --> 01:41.880
分业获取留言板 因此呢 我这里用个正的表达是 凡是以API message开头

01:42.140 --> 01:45.720
后边有可能有参数 有可能没有参数 那么我就给他模拟一个数据

01:45.980 --> 01:47.520
通过这个方法呢 返回一个数据

01:48.020 --> 01:51.100
这个方法呢 就是 因为我这里要获取到内面什么

01:51.360 --> 01:52.120
就是

01:52.480 --> 01:56.320
夜容量 我这里获取到夜容量 夜容量没有的话就去就取10

01:57.080 --> 01:58.880
总数呢 我就随便给了一个52啊

01:59.380 --> 02:02.720
然后呢 在这个随机生成一些数据啊 就这样子

02:04.000 --> 02:05.520
好 这是我们的模拟数据

02:05.780 --> 02:09.880
然后呢 这里没有仓库了啊 跟仓库没什么关系的 接下来我们到这个试图里边去

02:10.400 --> 02:12.200
试图里边呢 我们找到这个留言板

02:12.960 --> 02:15.000
这一块 给他写上这么一个DIV

02:16.800 --> 02:18.320
一个内容是啊 message

02:19.360 --> 02:20.120
container

02:20.640 --> 02:21.160
一个容器

02:21.620 --> 02:25.980
然后这里边是啥呢 这里边其实我们要用到一个组件 就是我们之前开发过

02:26.240 --> 02:27.000
的这个组件

02:28.280 --> 02:29.560
在这

02:30.580 --> 02:31.620
在这个message are real

02:31.860 --> 02:38.020
就这样的一个组件 把这个组件放进去是不是就完了 给他配置一些属性 带到一些事件处理一下 基本上就完了

02:38.260 --> 02:41.080
所以说呢 我们这里呢 要去用到这个组件

02:41.600 --> 02:43.640
message are real

02:45.420 --> 02:46.200
component

02:46.960 --> 02:48.000
message are real

02:48.500 --> 02:49.780
注册一下component

02:50.740 --> 02:51.540
message are real

02:51.940 --> 02:55.220
稍微的配置一下啊 这边呢 我们就直接使用这个组件就完备了

02:55.940 --> 03:02.980
好 其实现在呢 我们在页面上看啊 就已经能看到一点点效果了 我们现在把样式呢 稍微设置一下 首先是这个样式

03:03.420 --> 03:04.220
就要加一个scout

03:06.060 --> 03:07.540
就是这个message

03:08.780 --> 03:09.660
container

03:10.220 --> 03:15.220
这个地方呢 我们给他设置一个宽度百分之百吧 高度了也百分之百

03:15.660 --> 03:19.700
然后呢 他里边内容一出过后呢 我们会有一个滚动条overflow

03:20.780 --> 03:24.780
one out 也这么一个滚动条 那现在没有一出啊

03:25.940 --> 03:30.420
然后给他一个上下的panning吧 panning加上过后呢 我们肯定要加上个box size

03:31.100 --> 03:36.420
25左右的文宁 然后加上一个box size 因为高度就超出了

03:36.940 --> 03:37.460
border box

03:38.420 --> 03:45.140
好 行了 刷新看一下 上下个panning流出来了 然后这里边这个区呢 我要把它缩小一点 居中 那这个东西怎么弄呢 我就

03:45.220 --> 03:50.420
可以直接设置这个 按照我们的命名规范啊 这里边肯定有一个根源数 它的样式呢是message

03:50.700 --> 03:51.980
areal container

03:52.820 --> 03:54.020
这是我们命名规范的好书

03:55.060 --> 03:57.700
这里呢 我们给他给宽度吧 其他个项书 然后marty

03:58.420 --> 03:59.060
0 out

04:00.540 --> 04:02.740
好顺啊 这样子就缩小一点了啊

04:04.260 --> 04:10.580
好了 然后这里各有水 接下来就是这个这个里边的东西了 因为我们这里呢 肯定要设计到一个原层获取数据 对吧

04:10.860 --> 04:15.380
那么你不要肯定有楼顶啊 有我们的数据啊 对吧 对 我们是不是要用混合

04:16.140 --> 04:16.700
fetch data

04:18.540 --> 04:21.220
因为这里不在仓库里边啊 直接我们用混合来做

04:22.260 --> 04:29.460
这是一个数据量可能会比较大的 变成比较频繁的数据 所以放仓库呢 而且还有不是共享数据 所以放仓库也不太合适

04:30.060 --> 04:31.500
这里mixie 配置一下啊

04:32.860 --> 04:33.380
fetch data

04:36.440 --> 04:41.920
这里边我们给他一个默认值啊 数据的默认值不就两个属性吗 一个是toto 总数一共的评论数

04:42.160 --> 04:45.960
我们这里的总数就使用默认为0嘛 然后rose

04:47.080 --> 04:55.320
他目前业的数据 当前的数据呢 我就用一个轰速做吧 好了 把个fetch data写上啊 写到个fetch data之后呢 我们肯定要配置一下这个message

04:56.400 --> 04:59.920
因为这个混合要求了我们必须得有这么一个方法 他要调用的

05:00.600 --> 05:04.680
好 这个我们就需要返回一个api数据啊 当然我们要导入导入这个api

05:06.000 --> 05:06.280
导入

05:08.240 --> 05:09.360
message api

05:10.200 --> 05:10.440
from

05:11.800 --> 05:12.160
api

05:12.760 --> 05:13.160
message

05:13.920 --> 05:18.160
好 我们这里呢就直接调用这个message api里边的函数啊 get messages

05:20.200 --> 05:25.520
这里边要传两个参数一个是当前业一个是业容量 那么当前业业容量的数据呢 我们就配置一个data

05:28.320 --> 05:28.640
return

05:29.560 --> 05:32.800
配置为1 默认为1啊 limits为10

05:34.120 --> 05:38.040
这里我们就把res配传进去 this limits传进去 ok

05:39.040 --> 05:46.360
这样其实我们的数据其实这个组件里面就有了啊 我们可以看一下啊 点击右键检查5u里边 找到这个组件

05:50.360 --> 05:50.840
5u

05:51.640 --> 05:52.920
上那个 找到这个组件

05:54.160 --> 05:57.720
message arrear 你看 这个index啊 这里

05:58.880 --> 06:00.040
人 怎么没有呢

06:01.600 --> 06:05.040
我们的数据应该是要有的啊 这个数据为什么会没有呢

06:06.160 --> 06:06.720
index

06:07.480 --> 06:10.480
side side

06:11.120 --> 06:17.840
这边的啊 这是index 这个index就是我们的message啊 我想了去到这个index是message啊

06:19.120 --> 06:23.680
呃 它的数据没出来 怎么回事啊 我刷新一下啊 刷新看一下

06:25.720 --> 06:33.160
index ok 现在是不是有数据了 总数拿到了啊 数据有了 但是我们的界面还没有更新 那么我们这里呢 慢慢来 慢慢来弄吧

06:34.080 --> 06:39.240
首先呢 我们这个组件里面有哪些东西需要处理的 首先是一个title 立表的标题

06:40.520 --> 06:41.880
标题的话 我们就是一个留言版

06:43.480 --> 06:49.040
好 保存啊 这是什么留言版 刚刚制作出来了 然后是下一个数据subtitle

06:49.960 --> 06:55.680
副标题啊 副标题的话 按照我们之前的评论做法 这里也可以用类似的啊 给他一个字幕串

06:56.280 --> 06:57.640
两个 两个括号

06:58.520 --> 07:04.680
括号中间的传那个总数 留言版的总数 总数的话 我们就取这个data里面的头统

07:05.560 --> 07:17.960
就取这个数据 总数 好 保存啊 现在看一下 刷新一开始是0 然后远程加来数据加带完了过去变成52了 对吧 接下来呢 是这个loading效果 loading效果的话 这里有一个意思是loading

07:20.760 --> 07:25.720
那么取什么 取这个意思loading这个数据 好保存啊 咱们再来看一下刷新

07:26.440 --> 07:31.880
你看 这里是不是个loading效果 对吧 再刷新 这里loading效果出来了 然后是这里

07:33.080 --> 07:40.440
接下来是这 就是nest这个数据 给他一个数组 就是我们的数据数据的数据 就data.rose

07:41.480 --> 07:44.040
好 刷新 保存啊 现在我们来刷新看一下

07:45.880 --> 07:49.640
你看 这个数据是不是已经加来出来了 对吧 这一块就基本上

07:50.360 --> 07:58.440
呃 八九不理事了 接下来是提交啊 提交事件 这里边有个事件啊submit 提交 那么给他注册一个事件

07:59.240 --> 08:02.840
submit 提交 我们这里handle submit

08:04.280 --> 08:11.720
处理提交 那么这个提交事件呢 按照我们按照这个组件的约定 我们怎么弄呢 这个事件里边呢

08:12.360 --> 08:23.000
他会给你传一个数据对象 对吧 给你传一个数据对象进去 大哥 那么这个数据对象里边就记录了啊 我要提交什么数据 比方说这里那个数据呢 就是data吧

08:23.560 --> 08:29.160
我们这里输出一下data 看一下吧 其实你可以参照一下之前那个评论的带吗 都差不多的

08:29.800 --> 08:31.480
输入输入输入 提交

08:33.480 --> 08:36.200
来 我这个地方刷新一次啊

08:38.960 --> 08:40.800
提交 你看 得到个对象了

08:41.520 --> 08:46.880
leak net contents 那么这个玩意我们只需要去调用api message ap post

08:47.520 --> 08:52.400
message 把这个数据传进去就完成了啊 传进去过后呢 是不是有

08:53.360 --> 08:56.640
就是提交成功了嘛 提交成功过后呢 我们需要

08:57.600 --> 09:01.600
需要干嘛 我们这里需要的是 我对有点忘了

09:01.920 --> 09:08.800
得告诉 好像得告诉这个组建啊 我这里已经完成了 我们看一下这个组建吧

09:10.320 --> 09:12.480
当我们提交完成的时候对他缝

09:13.520 --> 09:16.320
这里边 当我们提交完成的时候

09:17.520 --> 09:20.240
他触发这个事件啊 然后呢一个回调函数 看没

09:20.800 --> 09:25.040
一个回调函数 这个回调函数呢 他会给我一个消息

09:26.240 --> 09:27.120
那么我这里呢

09:27.920 --> 09:31.920
提交过后啊 我这里首先调用这个回调函数啊

09:33.760 --> 09:37.120
调用这个回调函数 第二个函数啊 后半

09:38.640 --> 09:40.080
给他一个成功消息

09:40.880 --> 09:41.280
后半

09:43.040 --> 09:46.160
那么这个成功消息呢 我就给他写个成功消息啊 就是

09:47.120 --> 09:49.600
感谢您的留言

09:51.800 --> 09:53.480
好了 保存啊 我们再来看一下

09:54.440 --> 09:56.920
这里包错了 我看一下怎么错误

09:57.800 --> 09:58.440
还有什么呢

10:00.200 --> 10:01.560
multiple build field

10:02.440 --> 10:03.880
模块儿构建失败

10:05.970 --> 10:09.330
这里是一个callback吧 是一个回调函数啊

10:11.250 --> 10:13.010
第二个参数是一个回调函数

10:13.570 --> 10:16.050
参数的值呢 是一个成功消息

10:16.690 --> 10:20.290
那就没问题 哦 这里是await啊 我这里必须要把他写成和sync

10:20.770 --> 10:22.850
啊 这个错误其实没有我好啊

10:23.810 --> 10:25.970
好 a b 提交

10:27.990 --> 10:30.070
感谢您的留言 是吧 出来了

10:30.390 --> 10:35.830
好 那么这个这个调用回调之后呢 我们还需要把这个服务器返回的这个

10:36.470 --> 10:41.270
响应数据啊 这是这是一条留言数据对吧 那么我们把它加到当前的数组一边去

10:41.830 --> 10:44.070
data your rows onshort

10:46.980 --> 10:48.100
把这个数据加进去

10:48.980 --> 10:50.820
好 保存 现在再来看

10:51.780 --> 10:52.820
发现啊

10:54.100 --> 10:55.460
a b 提交

10:56.580 --> 10:59.860
你看这里是不是多了一条数据啊 当然个数据是假的啊 都是随机的数据

11:00.660 --> 11:05.620
好 那么这个提交的功能有了 那么接下来就是跟滚动条相关的啊 一个是to top

11:06.100 --> 11:10.020
回到顶部 一个是呢 这这边呢 一个加载更多啊 那么这个跟

11:10.660 --> 11:12.020
回到底部我们把这个加上啊

11:12.740 --> 11:14.740
scroll behavior smooth

11:15.060 --> 11:19.220
啊 你看这个玩意儿跟那个评论那一块是不是很相似的 我们直接把评论那一块带

11:19.540 --> 11:24.500
copy回来就行了 当然你也可以把它提取成一个混合啊 不过呢 就这两个出现也可以不用提

11:24.900 --> 11:26.980
看你自己啊 你可以把它提取出去

11:27.380 --> 11:29.620
那么这里边我们要去监控和

11:30.660 --> 11:34.980
取消监听和取消监听一个是一个事件总线的事件就没scroll

11:36.100 --> 11:37.220
我们去监听这个事件

11:40.070 --> 11:44.310
好 我们来监听一下啊 当然都跟滚动条相关的话 我们是不是要把这个东西

11:44.630 --> 11:46.150
加加个rave啊 用一个混合

11:46.790 --> 11:48.070
叫做message

11:48.630 --> 11:49.270
container

11:50.550 --> 11:51.670
我们加上一个混合

11:52.470 --> 11:52.950
import

11:53.430 --> 11:55.110
叫做messchroll

11:58.420 --> 11:58.900
messy

11:59.620 --> 12:00.260
messchroll

12:03.890 --> 12:06.850
啊 接下来呢 我们把这两个这两个生命周期函数给加上

12:08.370 --> 12:12.530
好 刚开始的时候 我们监听这个事件啊 监听事件总线这个事件 然后呢

12:13.330 --> 12:15.170
这个组件消费的时候呢 取消监听

12:15.570 --> 12:18.130
那么这里呢 我们会运行一个方法 叫做handle scroll

12:18.770 --> 12:20.210
处理这个滚动事件

12:21.170 --> 12:22.130
好 我们把方法加上

12:23.570 --> 12:26.450
这个滚动事件 处理滚动的时候呢 我看一下有没有这个动物元素

12:26.850 --> 12:31.410
它会传一个动物元素进来 对吧 到底是哪个动物元素在滚动 如果说没有动物元素或者是

12:31.650 --> 12:34.370
目前正在夹载中 那么就不需要夹载了

12:34.930 --> 12:39.970
否则的话 我就看一下啊 现在你在滚动 我看一下你这个滚动的位置是不是到了底了

12:40.450 --> 12:43.570
如果说在一个合理的范围内 那么我这里呢就夹载更多

12:43.890 --> 12:46.050
这里呢 我们需要提供一个夹载更多的方法

12:47.730 --> 12:48.290
靠近过来

12:49.250 --> 12:56.130
夹载更多 夹载更多怎么夹载呢 首先看一下有没有更多 对吧 比方说这些都夹载完了数据了

12:56.210 --> 13:01.090
所有的页面都夹载完了 就没有更多了 就不需要夹载了 那么有没有更多 我写的是一个计算属性

13:02.370 --> 13:04.690
好 我这里呢 计算属性再加上

13:06.450 --> 13:08.450
你看这些玩意呢 其实可以把它写成一个

13:08.770 --> 13:09.730
写成一个混合啊

13:11.490 --> 13:15.970
好 如果说没有没有更多了 我就不需要做任何事情 如果说有更多的话 我就把

