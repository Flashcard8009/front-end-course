WEBVTT

00:00.050 --> 00:03.850
好 咱们这一块呢来完成这么一个页面就是项目和效果

00:03.850 --> 00:11.250
这一块呢主要是在个人空间里面来集中展示你的以前做的一些小的一些demo啊

00:11.250 --> 00:15.450
比方说咱们公开直播课里面不是讲过很多很多demo对吧

00:15.450 --> 00:20.650
还包括你们入学过后一个什么GS收官不是也过很多很多的demo吗

00:20.650 --> 00:25.250
也小了小小游戏啊小的效果啊就可以在这里集中展示啊

00:25.250 --> 00:28.250
那么每一个效果呢其实也是一个单独的页面

00:28.650 --> 00:30.850
点击过后呢会挑战到那个页面去展示

00:31.650 --> 00:34.650
原来是吧 那么到将来呢你们学到服务器部署过后呢

00:34.650 --> 00:38.250
你们都可以把它部署上去啊 也可以把直接把它部署到github上面去

00:38.250 --> 00:41.650
非常非常简单啊 也是免费的 把部署上去过后呢

00:41.650 --> 00:45.350
这里提供一个url地址就ok了 那么我们来看一下我们的接口文档啊

00:45.350 --> 00:49.350
这个接口文档也很简单 就是项目呢我这里没有分页了啊

00:49.350 --> 00:55.350
为什么没分页 不是所有的这种数组的内情的数据都需要分页的

00:55.350 --> 00:59.150
要看那个数据量有多少 你像文章这一块你说不准对吧

00:59.150 --> 01:04.150
将来有可能无限增长 但是项目这一块呢它始终是有限的

01:04.150 --> 01:08.150
你哪怕这一辈子你做过的项目是不是很是极其有限的啊

01:08.150 --> 01:11.150
几十个上百克啊不得了了

01:11.150 --> 01:15.450
一般来说一年像大的项目的话一年做一个

01:15.450 --> 01:20.350
这已经很不错很不错了啊 他数据量是极其有限的

01:20.350 --> 01:24.050
因此这一块就不打算分页了 访问了请求地址请求这个地址

01:24.050 --> 01:26.550
然后呢得到所有的你做过的项目

01:26.550 --> 01:30.850
那么这些这些数据的维护啊需要将来我们后台页面去维护啊

01:30.850 --> 01:33.850
现在我们只需要模拟数据吧接收就ok了

01:33.850 --> 01:38.450
你看项目的id 项目的名称 项目的一个url地址访问地址

01:38.450 --> 01:41.550
点击过后呢可以到那个页面去看一下的这个项目

01:41.550 --> 01:47.550
这是github地址 然后呢这边是那个项目的描述

01:47.550 --> 01:50.250
这边是项目的说明图啊几个图

01:50.250 --> 01:52.950
这边是项目的排序啊排序的会这一块呢

01:52.950 --> 01:56.450
我们在前台页面呢是用不到的这个github地址呢

01:56.450 --> 02:01.850
好像我这里没有写是吧也没有写啊

02:01.850 --> 02:03.450
那如果说有github地址的话

02:03.450 --> 02:05.650
我应该在这里显示出来啊没有的话就算了

02:05.650 --> 02:09.250
那以后我在做样式的时候吧坐上吧我这里没坐

02:09.250 --> 02:12.150
好那么这里呢我又那个看一下我们目前的代码啊

02:12.150 --> 02:16.350
就把我就现在呢就把一些纯粹体的活的东西给大家写好了

02:16.350 --> 02:21.850
一个是API在这儿不讲了啊

02:21.850 --> 02:25.950
然后一个是mock project在这儿啊

02:25.950 --> 02:27.650
我就模拟了10到20个项目吗

02:27.650 --> 02:31.850
水积生成一些项目啊然后呢ID就生成一个全球唯一ID

02:31.850 --> 02:34.950
呃名字呢就是随便水积生成一个中文名字

02:34.950 --> 02:38.650
REL地址呢我这里就生成了一个空置物串啊

02:38.650 --> 02:41.350
github地址呢生成空置物串要不然模拟一下吧

02:41.350 --> 02:45.150
我看一下mock里边好我记得好像啊是可以模拟那个

02:45.250 --> 02:48.050
呃链接地址的啊我记得好像是可以模拟的

02:48.050 --> 02:51.650
然后这边呢是一个生成一个描述描述是一个数组啊

02:51.650 --> 02:55.550
是一个数组你看我这里样式上展示的时候都是一段一段的

02:55.550 --> 02:57.850
对不对啊所以它是一个数组

02:57.850 --> 03:00.950
那么每一行就是每一个自然断了就是每一个批元数

03:00.950 --> 03:04.150
数据里边每一个每一个数据就生成个批元数啊

03:04.150 --> 03:07.650
就描述然后这是他的生成一个水积的图片ok啊

03:09.450 --> 03:13.150
我这里呢看一下吧看一下我记得是以前我记得是有的啊

03:13.150 --> 03:14.150
生成一个link

03:15.350 --> 03:16.150
erjuice

03:16.150 --> 03:19.450
不是那个生成一个web

03:19.450 --> 03:21.150
啊对生成一个url啊

03:21.150 --> 03:22.950
那我就生水生成一个url吧

03:24.750 --> 03:29.390
url水生成一个那么github呢

03:29.390 --> 03:36.210
他有可能有啊有可能没有有可能有有可能没有

03:36.210 --> 03:38.510
其实这个url啊他也有可能有有可能没有

03:38.510 --> 03:40.310
比方以后在公司里边做的一些项目

03:40.310 --> 03:42.710
他可能是内网项目你访问不了的啊

03:42.710 --> 03:43.910
外网访问不了的

03:43.910 --> 03:45.710
所以他也有可能有有可能没有

03:45.710 --> 03:47.410
那我还是用一个数组吧

03:47.410 --> 03:48.910
就要么为一个字不串

03:48.910 --> 03:49.810
要么呢为null

03:50.910 --> 03:52.210
github也是啊

03:52.210 --> 03:53.410
要么呢为一个字不串

03:55.310 --> 03:57.110
Url地址要么呢为null

03:58.410 --> 03:59.610
我给他模拟一下啊

03:59.610 --> 04:01.410
这样子比较真实一点

04:01.410 --> 04:03.410
然后描述这里肯定要有

04:03.410 --> 04:05.610
书类图呢至少得有个书类图吗

04:05.610 --> 04:06.810
这个肯定要有

04:06.810 --> 04:09.410
ok 那么这就是我们模拟生成了一些数据

04:09.410 --> 04:12.010
加拿大我还是跟之前一样写了一个仓库

04:12.010 --> 04:14.010
因为像像这些是这些东西啊

04:15.110 --> 04:16.510
数据量比较小

04:18.310 --> 04:19.810
呃然后呢

04:19.810 --> 04:21.910
他的数据呢变动的有

04:21.910 --> 04:22.910
不怎么变动

04:22.910 --> 04:24.810
你看那个项目变化也

04:24.810 --> 04:26.410
可能几个月变化一次啊

04:26.410 --> 04:28.210
变化也不怎么会变化

04:28.210 --> 04:29.710
然后呢数据量有比较小

04:29.710 --> 04:30.510
像这些东西呢

04:30.510 --> 04:32.910
也可以把它缓存到仓库里边

04:32.910 --> 04:34.610
可以这样做的啊

04:34.610 --> 04:37.210
我在这里呢做法没什么好说的啊

04:37.210 --> 04:38.410
你自己看吧

04:38.410 --> 04:40.610
默认这个项目呢数组为空

04:40.610 --> 04:43.210
然后呢如果说有东西的话就返回

04:43.210 --> 04:44.610
表示之前夹载过了

04:44.610 --> 04:46.510
没有夹载过的话去夹载一下啊

04:46.510 --> 04:47.810
调用API去夹载一下

04:47.810 --> 04:49.210
就完事了

04:49.210 --> 04:49.410
好了

04:49.410 --> 04:51.310
那么我们再回到我们的试图里边

04:51.310 --> 04:52.510
就是我们的组件里边

04:52.510 --> 04:54.110
这个样式呢我已经写好了啊

04:54.110 --> 04:55.310
不用去管这个样式

04:55.310 --> 04:57.210
以后呢我们可能会改变一下样式

04:57.210 --> 04:59.110
那么每一个项目呢就生成一个A元数

05:00.210 --> 05:00.710
没问题吧

05:00.710 --> 05:02.010
所以我们这里要要做的事情呢

05:02.010 --> 05:03.310
其实挺简单的

05:04.410 --> 05:05.110
在脚本里边

05:11.390 --> 05:11.990
export

05:16.350 --> 05:17.150
export

05:17.150 --> 05:18.150
这个书写是咋的

05:18.150 --> 05:19.050
我都忘了

05:19.050 --> 05:21.150
导出一个组件

05:21.150 --> 05:21.850
这个组件里面呢

05:21.850 --> 05:23.650
我们还是要使用那个MapState吧

05:23.650 --> 05:25.150
computed

05:25.150 --> 05:27.150
使用那个MapState

05:27.150 --> 05:28.150
呃

05:28.150 --> 05:31.150
明明空间就是项目那个project

05:32.050 --> 05:32.950
我们要取的数据呢

05:32.950 --> 05:33.950
两个一个是loading

05:34.950 --> 05:36.150
一个是data

05:36.150 --> 05:37.550
两个人都取出来

05:37.550 --> 05:38.150
好loading呢

05:38.150 --> 05:43.310
我们这里就使用vloading

05:43.310 --> 05:44.510
loading

05:44.510 --> 05:45.310
好保存啊

05:46.310 --> 05:47.110
放心

05:48.310 --> 05:48.710
嗯

05:48.710 --> 05:49.510
没什么效果呢

05:49.510 --> 05:49.910
哦

05:49.910 --> 05:51.010
没有触发对吧

05:51.010 --> 05:51.910
我们在什么时候出发

05:51.910 --> 05:53.110
在credit的时候出发

05:54.110 --> 05:55.310
credit

05:55.310 --> 05:56.510
触发一下啊

05:56.510 --> 06:00.510
this storm dispatch project

06:01.510 --> 06:03.110
fage project

06:04.510 --> 06:04.910
好

06:04.910 --> 06:05.810
放心

06:05.810 --> 06:06.110
你看

06:06.110 --> 06:07.510
这都loading效果出来了

06:07.510 --> 06:08.610
然后把这个数据呢

06:08.610 --> 06:09.810
就是循环这个data

06:09.810 --> 06:11.610
在这里去生成这个A元数

06:11.610 --> 06:13.010
这里就不要用什么

06:13.010 --> 06:14.110
rotor link了啊

06:14.110 --> 06:15.710
就不要用那个路由那个链接了

06:15.710 --> 06:17.610
为什么它不是我们本网站的

06:17.610 --> 06:18.710
现在给到别的网站的

06:18.710 --> 06:20.510
还直接跳了就完事了

06:20.510 --> 06:21.810
v4

06:21.810 --> 06:23.410
item in data

06:23.410 --> 06:24.610
然后key

06:24.610 --> 06:25.110
keys呢

06:25.110 --> 06:26.210
我们就直接绑定什么

06:26.210 --> 06:27.210
还有id

06:27.210 --> 06:28.410
每一个项目的id

06:30.210 --> 06:30.410
好

06:30.410 --> 06:31.810
这个链接地址呢

06:31.810 --> 06:34.210
有可能有有可能没有

06:34.210 --> 06:34.710
对吧

06:34.710 --> 06:35.810
那没有的话

06:35.810 --> 06:37.210
我就不生成这个rave

06:38.010 --> 06:39.110
呃有的

06:39.110 --> 06:40.410
就是没有这个链接地址呢

06:40.410 --> 06:41.610
我就不生成rave

06:41.610 --> 06:43.310
有的话我就生成

06:43.410 --> 06:45.310
那么这个玩意怎么做呢

06:45.310 --> 06:46.710
嗯我想想啊

06:46.710 --> 06:47.310
我就这样吧

06:48.510 --> 06:49.810
该动态绑定一下啊

06:49.810 --> 06:51.710
如果说item有uil地址

06:51.710 --> 06:52.510
有没有呢

06:52.510 --> 06:53.410
如果说有的话

06:53.410 --> 06:54.310
那我就自然而然

06:54.310 --> 06:56.110
去读取这个uil地址

06:56.110 --> 06:57.510
那如果说没有的话

06:57.510 --> 06:58.010
没有的话

06:58.010 --> 06:59.210
我就给他一个这么一个吗

06:59.210 --> 07:00.510
java script

07:00.510 --> 07:01.310
呃无畏的零

07:02.310 --> 07:03.110
啥都不做啊

07:03.110 --> 07:04.610
就点击是一个

07:04.610 --> 07:05.810
是一个功能性链接啊

07:05.810 --> 07:07.310
点了过后啥都也不做

07:07.310 --> 07:08.010
没啥

07:08.010 --> 07:09.010
这是呃uil地址

07:09.010 --> 07:11.210
或者该谈出一个该项目

07:11.210 --> 07:13.010
呃无法通过外网访问

07:13.610 --> 07:15.210
或者该erlux一下也行

07:15.210 --> 07:16.210
啊不要说我们这些东西

07:16.210 --> 07:17.310
简单的erlux一下吧

07:17.810 --> 07:18.410
erlux

07:23.330 --> 07:24.730
该项目哎这里

07:25.130 --> 07:26.630
在我们的模板之后说了啊

07:29.700 --> 07:33.000
该项目无法通过呃

07:34.600 --> 07:36.300
外网外网访问

07:38.460 --> 07:40.660
或者说你做一些什么其他体式都可以

07:40.960 --> 07:41.960
啊你们自己运动

07:42.460 --> 07:43.960
我看一下我们现在这个数据

07:43.960 --> 07:45.160
里面肯定是有了啊

07:45.460 --> 07:46.460
循环真正渲染出来了

07:46.460 --> 07:47.860
我把下面的个a元数去掉

07:50.770 --> 07:51.970
下面这些a元数去掉啊

07:51.970 --> 07:53.070
就循环真成就完事了

07:53.470 --> 07:54.670
啊前面这边看一下

07:56.650 --> 07:59.050
呃目前呢这个项目的数据

07:59.050 --> 08:00.350
里是个是没问题的

08:00.450 --> 08:01.150
要看一下吧

08:01.150 --> 08:02.450
这边vux

08:04.320 --> 08:05.820
看一下哪个项目是

08:07.320 --> 08:08.520
没有url地址的

08:09.020 --> 08:10.320
啊第一个就是 now对吧

08:10.820 --> 08:12.220
来点击哎

08:12.620 --> 08:13.820
出了问题了点击

08:14.220 --> 08:16.520
点击出了问题了应该的应该的原因

08:16.520 --> 08:18.220
我看一下啊看一下生成的a元数

08:19.120 --> 08:20.020
a元数

08:20.520 --> 08:21.020
rave

08:21.020 --> 08:22.720
这rave有问题啊这rave

08:23.120 --> 08:24.720
我看一下我这里哪里写错了

08:25.020 --> 08:26.620
url地址有值吗

08:26.620 --> 08:28.620
有值的话就使用它的url地址

08:28.620 --> 08:30.720
没有值的话我就使用这个

08:31.220 --> 08:32.020
那没问题啊

08:32.020 --> 08:32.820
他第一个是没问题的

08:32.820 --> 08:34.020
我刷新试试一下

08:36.280 --> 08:38.380
看一下啊哪个项目是没有地址的

08:39.680 --> 08:40.480
第一个项目

08:41.380 --> 08:43.880
url那OK那么第一个项目

08:44.480 --> 08:45.880
点击右键检查

08:47.280 --> 08:49.980
第一个a元数ok没问题的啊点击

08:50.580 --> 08:51.980
呃那么现在是什么问题呢

08:51.980 --> 08:53.880
现在是因为他我这里使用了一个bank

08:54.880 --> 08:56.580
呃在新窗口中打开

08:56.580 --> 08:57.980
因为我们要跳转到别的网站吗

08:57.980 --> 08:59.280
跳转到别的网站那么一般

08:59.380 --> 09:00.780
不要关闭当前网站啊

09:00.780 --> 09:01.980
直接在新窗口打开

09:01.980 --> 09:03.480
那么这个时候是他影响到了

09:03.480 --> 09:05.380
所以说他呢也可以把弄成动态

09:05.880 --> 09:06.980
也很简单对吧

09:08.080 --> 09:08.880
判断一下吧

09:08.980 --> 09:10.480
有没有url地址啊

09:10.580 --> 09:11.980
如果说有url地址的话

09:11.980 --> 09:12.980
那我就是blank

09:13.380 --> 09:15.580
我就打在新窗口中打开

09:16.180 --> 09:17.980
如果说没有的话我就

09:18.180 --> 09:19.980
在当前窗口打开打self

09:21.180 --> 09:22.480
好刷新再来

09:24.380 --> 09:25.480
点击啊你看

09:25.880 --> 09:26.980
这个项目是没有地址的

09:27.380 --> 09:28.580
这个项目也没有地址

09:28.980 --> 09:29.780
这个项目有地址

09:29.780 --> 09:30.980
现在在新窗口打开了

09:31.380 --> 09:32.880
啊那个新窗口呢我没有

09:32.880 --> 09:34.580
这个链接地址是啥呀

09:34.580 --> 09:35.580
我这个链接地址

09:35.580 --> 09:36.780
他随即生成了啊

09:37.380 --> 09:38.880
随即下升成了个链接地址

09:39.180 --> 09:40.580
这个地址啊这个地址呢

09:41.080 --> 09:42.880
假的啊都是假的打开的

09:43.280 --> 09:44.280
啊就这么个意思

09:44.580 --> 09:46.780
好这是项目的a元数

09:46.780 --> 09:48.080
那么现在是说裂图啊

09:48.080 --> 09:49.180
说裂图肯定是有的

09:49.180 --> 09:50.880
所以说我们这里直接访命说裂图

09:50.980 --> 09:51.980
这个说裂图呢

09:52.080 --> 09:53.880
我们可以使用那个item

09:54.580 --> 09:55.580
点sump

09:55.980 --> 09:57.480
对对可以用这个说裂图

09:57.980 --> 09:58.480
刷新

09:59.780 --> 10:01.780
但是说裂图呢可能要加载一段时间啊

10:02.180 --> 10:04.380
那么我们之前是不是用过一个指令叫vdz

10:04.380 --> 10:05.680
对吧我们自己写过一个指令

10:05.680 --> 10:07.780
那么这里呢也其实也可以使用这个指令啊

10:08.080 --> 10:08.580
nz

10:11.750 --> 10:13.250
对吧可以使用这个指令

10:14.550 --> 10:15.850
你看下面是不是在跑

10:16.250 --> 10:16.650
对吧

10:17.050 --> 10:18.450
那么这个指令呢

10:18.450 --> 10:19.650
涉及到一个滚动条的问题

10:19.650 --> 10:21.050
滚动条问题我们最后解决啊

10:21.150 --> 10:23.650
然后接下来是下面的项目标题

10:23.650 --> 10:25.950
对标题呢我们直接读取项目的态度

10:26.350 --> 10:27.150
这个很简单

10:28.650 --> 10:29.450
项目标题

10:30.250 --> 10:30.750
是态度吗

10:30.750 --> 10:32.450
哦项目的名字啊

10:32.450 --> 10:33.250
这是名字

10:34.250 --> 10:35.150
项目的名字

10:35.650 --> 10:37.050
好接下来是项目的描述

10:37.050 --> 10:39.350
这个地方呢我们是不是可以用个千套的佛循环

10:40.850 --> 10:41.650
呃描述

10:42.650 --> 10:43.850
呃循环什么呢

10:43.850 --> 10:46.350
循环这个item.descripts

10:48.050 --> 10:48.750
是这个吧

10:49.850 --> 10:51.650
descripts没有s

10:51.850 --> 10:52.350
循环他

10:52.350 --> 10:53.750
然后呢不要忘记给key啊

10:54.350 --> 10:54.850
key的话

10:54.850 --> 10:57.150
因为这个key的话每个是一个字不错啊

10:57.150 --> 10:58.750
我就直接给他个

10:59.650 --> 11:00.450
i得了

11:01.950 --> 11:02.950
因为他没有id啊

11:02.950 --> 11:04.450
就给他i ok

11:04.950 --> 11:05.750
好每群换一次

11:05.750 --> 11:07.150
我们把这个描述扔这

11:07.350 --> 11:07.950
就完事了

11:10.600 --> 11:11.400
好看一下啊

11:12.400 --> 11:12.800
小心

11:15.070 --> 11:15.970
好在这了啊

11:16.370 --> 11:17.470
现在我们看一下这边

11:18.770 --> 11:19.370
切换出去

11:19.370 --> 11:21.070
你看切换就没有重新加载了吧

11:21.270 --> 11:22.770
没有重新加载对不对

11:23.370 --> 11:23.670
啊

11:24.570 --> 11:26.070
好这个关于我为什么要重新加载的

11:26.070 --> 11:28.670
他不是说他实际上我们控制的是

11:28.670 --> 11:31.170
不要让重新去获取那个阿迦克斯请求了

11:31.170 --> 11:33.070
但是这个网页里的重新链接一下

11:33.070 --> 11:33.770
这个没办法

11:35.070 --> 11:36.170
好就是这一块啊

11:36.970 --> 11:41.370
呃接下来呢就是这个项目有可能会有一个github地址

11:41.870 --> 11:43.170
有可能会有个github地址

11:43.170 --> 11:44.570
所以说这个github地址呢

11:44.570 --> 11:45.570
我们把放这吧

11:46.970 --> 11:47.670
github

11:48.170 --> 11:50.770
呃github地址

11:51.770 --> 11:54.270
就是我会走我们把它放哪呢

11:54.270 --> 11:55.570
放哪比较合适一点

11:55.570 --> 11:56.770
放到标题这要不然

11:57.270 --> 11:58.270
放标题这啊

11:58.270 --> 11:59.570
我用一个A元数吧

12:01.070 --> 12:03.470
就是github

12:03.470 --> 12:04.470
就写个github

12:05.770 --> 12:06.170
小心

12:07.980 --> 12:09.080
后边一个github他

12:09.180 --> 12:10.580
我把那个样式设置一下

12:10.580 --> 12:12.380
给他一个内样式

12:12.380 --> 12:13.080
class

12:13.180 --> 12:13.780
github

12:18.760 --> 12:19.660
随便找个地址

12:21.060 --> 12:24.260
呃然后呢给他写上什么内样式呢

12:25.260 --> 12:28.760
呃首先把自己大小设置一下啊

12:28.760 --> 12:30.960
十四个项目

12:34.080 --> 12:34.880
然后

12:36.580 --> 12:38.280
你给他个颜色颜色的话

12:38.280 --> 12:40.880
我们就倒入那个鱼绿色的颜色

12:40.880 --> 12:42.280
像这些都没有什么技术含量的

12:42.280 --> 12:43.880
都是一些体力我了

12:43.880 --> 12:46.880
你们自己去按照自己喜好搞定吧

12:48.280 --> 12:50.080
这里我们使用primary吧

12:54.800 --> 12:55.400
ok

12:55.900 --> 12:58.400
要不然我再给他一个什么样式

12:58.400 --> 12:59.200
你们自己搞定吧

12:59.200 --> 13:00.700
这个样式我就随便弄了

13:01.300 --> 13:02.300
我就随便弄了

13:02.900 --> 13:03.700
哦不对

13:03.700 --> 13:05.000
y一层有个A元数

13:05.000 --> 13:06.500
你曾占了一个A元数的话

13:06.500 --> 13:08.300
那么这个点击要出问题的

13:09.500 --> 13:10.100
啊

13:10.100 --> 13:11.700
这个github地址我怎么放呢

13:11.700 --> 13:12.500
我看一下

13:12.500 --> 13:14.300
要不然我外层不用A元数了

13:15.100 --> 13:16.200
外层用dv

13:17.700 --> 13:18.900
外层用dv

13:19.300 --> 13:22.100
然后你给这个图片单独去加A元数

13:22.800 --> 13:23.300
可以吧

13:25.100 --> 13:26.700
我给这个图片加A元数

13:28.910 --> 13:29.910
我把这个放过来

13:33.360 --> 13:33.760
放这

13:35.660 --> 13:36.660
然后呢

13:36.660 --> 13:37.460
这个图片

13:38.260 --> 13:38.860
我看一下

13:38.860 --> 13:40.360
目前的效果有没问题

13:42.570 --> 13:43.770
目前效果也没问题

13:43.770 --> 13:45.670
你看这个图片是有一个A元数的

13:46.870 --> 13:47.170
好

13:47.170 --> 13:48.570
然后给那个

13:51.450 --> 13:53.050
那既然图片是A元数的话

13:53.050 --> 13:54.850
那我就没有必要用A元数了

13:54.850 --> 13:56.150
就有些没有A元数

13:56.150 --> 13:57.050
有些有A元数

13:57.050 --> 13:59.150
因为有些能方文有些不能方文吧

13:59.150 --> 13:59.250
啊

13:59.250 --> 13:59.850
这东西我

14:00.050 --> 14:01.750
这小的西我真不想弄了

14:01.750 --> 14:02.550
你们自己去弄吧

14:02.550 --> 14:02.950
要不然

14:04.350 --> 14:04.650
啊

14:04.650 --> 14:05.450
我就先扔这吧

14:05.450 --> 14:06.150
就这样吧

14:06.150 --> 14:06.650
然后呢

14:06.650 --> 14:07.250
把这个A元

14:07.250 --> 14:07.850
A元数呢

14:07.850 --> 14:08.950
给这个H2

14:08.950 --> 14:10.850
然后这个东西单独提出来吧

14:10.850 --> 14:11.850
提出来的了啊

14:17.830 --> 14:19.230
这个github提到这

14:19.330 --> 14:21.030
我们在标题这里呢

14:21.030 --> 14:22.530
给它加上一个A元数

14:23.530 --> 14:24.530
也一样的啊

14:28.200 --> 14:28.800
一样的

14:29.500 --> 14:30.700
这是标题这一块

14:33.900 --> 14:35.100
标题是一个A元数

14:37.900 --> 14:38.500
点这个

14:38.800 --> 14:39.300
ok

14:40.000 --> 14:40.200
好

14:40.200 --> 14:42.100
这是下面一个github地址

14:42.300 --> 14:43.100
github地址呢

14:43.100 --> 14:44.300
我就扔下面吧

14:44.300 --> 14:45.800
我就直接扔在这

14:47.100 --> 14:47.600
点击

14:48.100 --> 14:48.400
好

14:48.400 --> 14:49.000
github地址呢

14:49.000 --> 14:50.600
我们给它个链接

14:51.000 --> 14:51.600
来自于哪呢

14:51.600 --> 14:53.200
来自于item的github

14:53.600 --> 14:55.000
当然一个潜力条件啊

14:55.100 --> 14:55.600
vive

14:55.900 --> 14:57.500
它得有这个github地址

14:57.600 --> 14:58.800
如果说没有的话就算了

14:59.900 --> 15:02.000
然后给它一个blank吧

15:02.200 --> 15:02.800
talk it

15:07.750 --> 15:07.950
好

15:07.950 --> 15:08.450
点击

15:09.350 --> 15:10.250
刷新式啊

15:12.050 --> 15:12.250
好

15:12.250 --> 15:13.550
这些都没有github地址

15:13.750 --> 15:14.550
这里有一个

15:14.650 --> 15:16.250
点击过后就可以打开了啊

15:17.650 --> 15:17.950
好

15:17.950 --> 15:18.750
那么现在呢

15:18.750 --> 15:19.450
这个项目呢

15:19.450 --> 15:20.450
就这样子了啊

15:20.750 --> 15:21.350
就这样子了

15:21.350 --> 15:22.650
但是央视了你们自己

15:22.650 --> 15:23.650
按照你们自己的喜好

15:23.650 --> 15:24.650
你们可以自己去弄

15:25.150 --> 15:26.650
接下来是有两个问题

15:26.650 --> 15:28.050
一个问题就是这个图片

15:28.050 --> 15:29.050
懒家态的问题

15:29.250 --> 15:30.250
因为这个图片懒家态的

15:30.250 --> 15:31.750
它取决于一个滚动条的

15:31.750 --> 15:32.750
一个事件总线

15:33.250 --> 15:33.850
对不对

15:34.050 --> 15:36.150
还有就是这个回到顶部的问题

15:36.150 --> 15:36.350
对吧

15:36.350 --> 15:37.350
这里是有滚动条的

15:37.350 --> 15:38.950
它又可能会需要滚到顶部

15:38.950 --> 15:39.850
那么这两个问题呢

15:39.850 --> 15:40.250
其实

15:40.850 --> 15:41.550
都是同一个问题

15:41.550 --> 15:42.250
就是这个主线呢

15:42.250 --> 15:43.350
是带有滚动条的

15:43.850 --> 15:45.750
我们需要去控制一下事件总线

15:45.850 --> 15:47.550
它可能要跟事件总线进行通信

15:47.650 --> 15:48.350
那怎么办呢

15:48.350 --> 15:50.050
我们之前不是写过一个mix

15:50.650 --> 15:52.050
直接用那个mix你不就完了吗

15:52.050 --> 15:52.250
是吧

15:52.250 --> 15:53.650
之前我们提取出去的

15:53.950 --> 15:54.450
对不对

15:54.450 --> 15:55.150
所以说我们这里呢

15:55.150 --> 15:56.350
要做的事情就是很简单

15:56.350 --> 15:57.650
导入这个mix你就完手了

15:58.150 --> 15:59.150
叫做mix crew

16:00.950 --> 16:01.350
from

16:03.050 --> 16:03.550
mixin

16:04.350 --> 16:04.950
mix crew

16:04.950 --> 16:06.750
这就是那个混合的好处

16:06.750 --> 16:06.950
对吧

16:06.950 --> 16:08.750
你这个图件就专心做自己的事情

16:08.850 --> 16:09.850
像这些通用的事情呢

16:09.850 --> 16:10.850
我都给你做完了

16:11.050 --> 16:12.050
这边mixins

16:14.050 --> 16:14.550
mix crew

16:14.550 --> 16:16.150
这里不要传入这个ref值

16:16.150 --> 16:17.550
就是哪个地方有滚动条

16:17.550 --> 16:18.950
我们在这里写个ref吧

16:19.350 --> 16:19.750
ref值呢

16:19.750 --> 16:21.450
这就是project这个程度

16:22.350 --> 16:22.750
containment

16:28.350 --> 16:30.250
或者我们这里用陀封命运法吧

16:30.650 --> 16:32.350
ref我们一般是用陀封命运法

16:32.550 --> 16:34.050
因为它毕竟会变成属性

16:36.160 --> 16:36.560
好了

16:36.960 --> 16:37.460
这样子呢

16:37.460 --> 16:38.560
刷新再来看

16:39.760 --> 16:40.860
现在由于这个滚动

16:40.860 --> 16:42.660
有事件总线通信了啊

16:42.760 --> 16:43.760
所以这边滑动的时候呢

16:43.760 --> 16:45.060
这边它知道去夹展

16:45.560 --> 16:46.260
都没问题了

16:46.560 --> 16:47.660
然后这个top也出来了

16:47.660 --> 16:48.060
对吧

16:48.160 --> 16:48.660
点击过后呢

16:48.660 --> 16:49.560
也能回到顶部

16:49.760 --> 16:50.260
回到顶部呢

16:50.260 --> 16:50.760
它没有动画

16:50.760 --> 16:51.260
没有动画的

16:51.260 --> 16:52.060
我该加上一个

16:52.760 --> 16:55.260
screw,have your smooth

16:56.160 --> 16:56.760
就完事了

16:57.460 --> 16:57.560
好

16:57.560 --> 16:58.160
往下滑

16:58.960 --> 16:59.660
回到顶部

16:59.960 --> 17:01.460
你看都挺好的

17:01.660 --> 17:02.060
对吧

17:03.660 --> 17:03.960
好了

17:03.960 --> 17:06.360
那么这就是我们的项目展示页

17:06.360 --> 17:07.160
也就做到这了

17:07.660 --> 17:09.060
这是这一个页面

