WEBVTT

00:00.430 --> 00:04.270
到现在为止呢 我们不仅开发出了首页

00:04.270 --> 00:06.830
还开发了不少的公共组建 对吧

00:06.830 --> 00:11.950
这些公共组建呢 对于后边一面的开发都会起到很好的作用

00:11.950 --> 00:13.750
可以减上我们的开发量

00:13.750 --> 00:16.050
那么接下来我们来开发这个文章页啊

00:16.050 --> 00:18.350
其实这个文章页一旦开发完成之后啊

00:18.350 --> 00:20.150
就这个板块一旦开发完成之后

00:20.150 --> 00:22.450
其实整个项目呢都已经快做的差不多了

00:22.450 --> 00:25.270
因为后边的大量的公共组建就产生了

00:25.270 --> 00:29.350
后边的我们开发后边的东西的时候呢就非常方便了

00:29.350 --> 00:31.910
文章页 我们来看一下文章页啊

00:31.910 --> 00:34.990
文章页呢 开发方式啊

00:34.990 --> 00:36.770
个人有个人的习惯

00:36.770 --> 00:40.350
有的人呢 习惯是直接就开始写

00:40.350 --> 00:43.430
哪里缺少什么组建 我再慢慢去加

00:43.430 --> 00:45.230
这是一种开发方式

00:45.230 --> 00:49.830
另外一种开发方式呢 就是我个人比较喜欢的开发方式呢 我不着急写

00:49.830 --> 00:51.110
我先看一下

00:51.110 --> 00:54.950
看一下我缺少什么样的组建 我先把这些组建补齐了再说

00:54.950 --> 00:56.990
首先有一个统筹的安排

00:56.990 --> 00:59.310
就看个人的开发习惯了啊

00:59.310 --> 01:02.630
来吧 我们来先观察一下这个文章页

01:02.630 --> 01:07.510
这个文章页呢 还缺少什么组建呢 你首先看到了我们这里一个左右分栏 对不对

01:07.510 --> 01:08.790
左右两栏嘛

01:08.790 --> 01:13.390
那么这个左右两栏呢 是个布局组建 我们已经有了 对吧 不用开发了

01:13.390 --> 01:17.230
然后左边呢 是一个列表 这个列表呢 是没有组建的

01:17.230 --> 01:20.030
对吧 这个是文章页特有的这么一种列表

01:20.030 --> 01:25.630
这种列表呢 没有组建 我到时候会进行开发 这个列表组建开发起来很简单啊 没有什么难度的

01:25.630 --> 01:30.830
然后下边呢 是有一个分业组建啊 这下边你们不一定看得清楚啊 我给他放小一点

01:32.870 --> 01:39.430
下边给你看 这个没有设置Motion Bottom 下面有一个分业组建啊 这个组建呢 我们其实也是有的

01:40.030 --> 01:46.150
有了吗 好像有了啊 有了 因此呢 这些组建的开发差不多了 现在关键是组右边这个组建

01:46.710 --> 01:53.670
右边这个组建呢 看上去呢 也挺简单的对不对 就是一个显示所有文章分类 这么一个组建一个列表的组建

01:54.390 --> 02:00.870
但是实际上呢 你仔细观察啊 这个组建呢 他有一定的通用性 因为你看我们进入这个文章的详情

02:01.790 --> 02:04.430
进去啊 就能文章的详情 你看这边

02:06.190 --> 02:12.390
样式是不是差不多呀 那我们看不清楚的话 我们就再复制一个链接吧

02:13.870 --> 02:22.180
我们到文章里边去啊 这文章 文章里边去 你看右边这个文章分类和

02:23.140 --> 02:27.580
这边那个目录 样式是不是差不多了 只不过它里边显示的文字不一样

02:28.140 --> 02:31.660
然后呢 它的成绩不一样 对吧 分类好像是没有成绩的

02:32.740 --> 02:38.500
当然 将来呢 我们也做一些功能的改造 有可能分页也有分类呢 也有成绩 都说不准的

02:38.980 --> 02:43.220
目录呢 是有成绩的 上面这个标题不一样 标题我们都放开啊 标题

02:43.860 --> 02:45.460
放一边 我就看这个列表

02:46.260 --> 02:49.540
这个列表呢 这两个东西呢 我打算把它做成一个组建

02:50.500 --> 02:58.500
就这个组建呢 它能显示一个列表 这个列表里边呢 有可能会有成绩啊 到底有多少个成绩呢 也说不准

02:59.700 --> 03:04.100
这一次里边是有一些开发技巧的 你没有这个技巧的 你还搞不定

03:05.220 --> 03:11.300
呃 然后呢 他有个选中效果 所以说我们初步来设计的话 这个组建呢 应该是这么一个东西

03:13.300 --> 03:19.380
我们到src目录下面去啊 那么我们放哪呢 这个组建 我们是放component呢 还是放这个5u里边呢

03:19.700 --> 03:25.140
那就看这个组建通不通用了 如果说这个组建是跨页面通用的 那就你肯定是要放component里边

03:25.700 --> 03:30.580
那如果说你这个组建呢 只是在文章这个板块里边使用的话 那么你可以放那个

03:31.380 --> 03:36.180
blog里边啊 看你自己 看你个人的情况 像我们之前后幕组建里边不是放了一个

03:36.820 --> 03:42.340
我们这个页面要用到的组建 对吧 好 那么我们仔细观察了一下 好像这个组建其他页面也没有

03:42.660 --> 03:44.660
那我就放到这里吧 放到blog里边

03:45.380 --> 03:50.980
blog里边呢 我们可以去新建个文件甲的component里边放一些关于博客的一个

03:51.860 --> 04:00.020
博客板块的一些特有的组建也可以呢 直接在这里新建文件 像我们之前的home这个文件甲里边 我们是不是直接在这里写了个组建啊

04:00.500 --> 04:09.780
对不对 因为home这个板块呢 他倒是没有什么太多的组建 那么像博客这一块呢 可能组建比较多啊 这是一个组建 你看这边是一个组建

04:10.180 --> 04:16.980
到时候呢 这边经区过后文章详情啊 文章详情里边这也得是个组建吧 然后下面

04:17.860 --> 04:25.140
下面还有评论也得是组建吧 所以他可能组建比较多啊 因此呢 我在blog里边新建个文件甲得了 根据这个东西没有什么

04:26.580 --> 04:31.860
特定的标准啊 看你们公司有没有特别的要求 没有特别要求的话 你们自己做主吧

04:32.900 --> 04:37.620
好 我们在这里来建一个component是文件甲 里边让我们新建一个文件啊 我们之后可能就搞定这个

04:38.180 --> 04:40.580
把这个打开吧 我们这些可能就搞定这个

04:41.780 --> 04:47.380
啊 就是列表组建 带有成绩列表的组建啊 我们这里新建个文件啊

04:48.580 --> 04:51.620
啊 带有成绩列表 也就是

04:53.700 --> 04:54.660
我怎么命名呢

04:56.820 --> 05:01.380
rightly是吧 右边的列表啊 自己命一个名字里 只要知道啥意思就行了啊

05:01.780 --> 05:07.540
我也不知道该找命名了 带有成绩的列表 那么这个列表呢 是有可能会有带有多个成绩的 对不对

05:08.260 --> 05:14.740
好 我们来写上啊 这里肯定要产生一个列表 那么这个列表呢 他首先要思考的是

05:16.260 --> 05:20.500
因为我们做一个组建吧 做个组建你肯定要思考的是他的属性有啥

05:21.460 --> 05:22.420
他有什么样的事件

05:23.700 --> 05:24.420
啊 他有

05:26.020 --> 05:28.020
属性事件 对吧 最重要的就是这两个

05:28.820 --> 05:35.540
那首先他有什么样的属性呢 就做好了一个组件 哎 我把它他做成的组件 你要给这个组件传递什么信息呢

05:36.420 --> 05:41.940
是不是传递一个列表啊 对不对 因此呢 他的属性呢 得有一个属性

05:44.260 --> 05:48.500
给他取个名字啊 这个属性的名字呢 就叫做list 你得给我传一个列表进来

05:48.980 --> 05:56.100
这个列表呢 他的类型呢 应该是什么呢 你看列表的类型应该是啥 列表的类型不应该是一个数组吗 对不对

05:56.580 --> 05:58.340
就是一个二位一个数组

05:59.380 --> 06:02.420
好 那么这个有没有点默认值呢 我给他一个默认值得了

06:03.380 --> 06:11.460
啊 默认值呢 就是一个空数组 那么 注意啊 像数组啊对象 默认值是数组 或者是默认值是对象呢 你得把它写成一个函数

06:11.780 --> 06:13.940
这个函数的反回结构呢 作为默认值

06:14.500 --> 06:18.420
OK 那么 反回的是一个数组 那么用一个空数组来作为默认值

06:18.900 --> 06:23.780
好 这是一个列表组件 他需要的 需要的什么呢 需要的那个

06:24.820 --> 06:25.220
属性

06:26.340 --> 06:31.940
那么这个数组里面每一项是个啥呢 我就统一规定一下吧 我在这里打个注释 统一规定一下

06:32.500 --> 06:37.140
这是一个列表的数组 每一项 每一项的值应该是一个对象

06:38.420 --> 06:44.740
这个对象里边呢 我至少要给我提供什么 至少其他属性我不管 但是你至少得给我提供他要显示啥 对吧

06:45.300 --> 06:46.500
呃 显示的名字

06:46.980 --> 06:47.460
念

06:48.340 --> 06:53.700
啊 念是啥意思呢 就显 这个显示出来 第一项显示的名字 第二项显示的名字

06:54.260 --> 06:55.780
对吧 你每个每个是个对象嘛

06:56.420 --> 06:58.820
哎 有可能呢 每一项下面还有指向

06:59.620 --> 07:02.580
对不对 是不是 还有可能有指向 那么指向的话

07:03.140 --> 07:04.820
你给我一个q准 传进来

07:05.620 --> 07:07.780
q准应该是什么类型呢 也应该是一个数组

07:08.340 --> 07:09.140
啊 这个数组里边

07:09.700 --> 07:13.460
如果说有的话啊 每一项呢 也应该是一个对象 对象里边也应该有念

07:15.540 --> 07:18.500
啊 如果说这一项里边还有指向的话 那么又是一个q准

07:19.140 --> 07:22.020
其实就是跟类似一个动物结构 对吧 一个动物数

07:22.420 --> 07:24.020
其实它不是动物数啊 就是一个

07:24.740 --> 07:25.060
呃

07:25.620 --> 07:26.420
数型的结构

07:27.140 --> 07:28.740
对吧 通过这种方式来给我传进来

07:29.620 --> 07:34.740
好 我们把数向约定好 约定好了过后 这里边有没有什么事件呢

07:34.740 --> 07:39.300
其实它是有事件的啊 什么事件呢 就是点击之后的事件

07:40.980 --> 07:42.820
没问题吧 说点击之后的事件啊

07:43.460 --> 07:47.380
点击之后 哎 我又要显 我要做什么事情

07:47.380 --> 07:51.060
你看这里点击 跟我们在文章列表那一块进行点击

07:51.060 --> 07:53.620
它肯定做的事情是不一样的 点击这

07:55.140 --> 07:58.100
和我们点击这 做的事情是不是不一样的

07:58.100 --> 08:01.540
那具体做什么事情呢 我这个组件呢 肯定是搞不定了啊

08:02.340 --> 08:05.220
不知道要做什么事情 那么我就把事件抛出去

08:05.780 --> 08:08.660
让副组件来进行处理

08:09.060 --> 08:11.700
那么这个事件呢 我们到时候约定一个名字吧 比方说

08:12.580 --> 08:18.500
选中了啊 是那个是缺据啊 选中向变化 那么这个东西呢 我们把约定一下

08:20.420 --> 08:23.300
好 呃 然后这是这一块啊

08:24.020 --> 08:28.660
然后呢 还有没有呢 就是还有一个东西 就是目前它选中的是哪一项

08:29.620 --> 08:33.620
目前哪一项是被选中的 那么目前哪一项是被选中的 我怎么呢

08:33.940 --> 08:38.020
知道哪一项应该是个选中状态的 不然我不知道选中状态的话 我就不知道

08:38.260 --> 08:40.020
这一块要不要给它变一个样式

08:40.340 --> 08:45.700
所以说呢 有没有选中的 我还是在这个数据里面啊 数据里面来给它加一个属性 叫做easy active

08:46.100 --> 08:47.220
或者easy select

08:48.820 --> 08:51.860
把它设为q 那就表示这一项是选中的

08:52.340 --> 08:56.340
啊 如果说它是为forced的话 那么这一项就没有选中 那包括它的指向也是一样

08:57.220 --> 08:58.020
也是那个

09:00.600 --> 09:04.200
明白的意思吧啊 就是说现在呢 我们要求 我们约定

09:04.760 --> 09:08.760
那么属性的是必须要要的 这个属性呢 表示的是显示的名字

09:09.160 --> 09:12.120
这个是必须要要的 另外呢 是否选中呢

09:12.840 --> 09:16.840
可以有可以没有 没有的话我就不选中 有的话他设为q的话就表示选中

09:18.600 --> 09:20.840
q准呢可以没有没有的话他就没有指向

09:21.320 --> 09:23.720
啊 如果说有的话他就有指向

09:24.200 --> 09:25.480
对吧 就是这么一个东西

09:26.200 --> 09:30.600
那么现在呢 我们把这个组件写得差不多了啊 我们把在模板里面 先随便瞎写一个吧

09:33.690 --> 09:37.370
呃 带有成绩的列表

09:38.890 --> 09:39.690
列表

09:40.410 --> 09:43.450
好 我们把这个组件呢 用到哪呢 用到手页里面去啊

09:44.170 --> 09:48.330
呃 就用到哪呢 我们在这里直接在这里测试一下得了

09:49.770 --> 09:50.090
test

09:50.650 --> 09:51.290
w

09:51.930 --> 09:52.330
test

09:53.130 --> 09:56.730
或者这样吧 right list test

09:58.090 --> 09:59.770
啊 在这里去测试一下这个组件

10:00.330 --> 10:02.410
好 当然呢 我们还需要去加一个缴奔啊

10:06.310 --> 10:08.230
呃 right list

10:09.510 --> 10:11.190
测试的时候呢 就在这里去找了

10:13.880 --> 10:15.160
src里面的

10:16.200 --> 10:16.920
vues

10:17.560 --> 10:18.200
下边的

10:19.000 --> 10:19.480
blog

10:20.360 --> 10:21.000
下边的

10:21.880 --> 10:23.480
components

10:24.440 --> 10:25.320
下边的

10:25.880 --> 10:27.320
right list

10:28.040 --> 10:28.440
test

10:28.840 --> 10:29.240
vues

10:30.120 --> 10:32.840
好 那么我们在这里呢 去写一个测试

10:35.080 --> 10:35.720
导入

10:36.360 --> 10:37.320
right list的组件

10:38.040 --> 10:39.000
right list

10:39.240 --> 10:39.640
组件

10:40.520 --> 10:41.000
导入它

10:42.520 --> 10:44.840
呃 然后呢 我们注册一下components

10:45.560 --> 10:46.200
right list

10:47.560 --> 10:52.920
好了 那我们在这里呢 去使用这个组件啊 right list

10:53.640 --> 10:56.200
好 到咱们把运营出来啊

10:57.240 --> 10:59.320
嗯 我们这一块呢 就直接

11:02.330 --> 11:03.050
直接这样吧

11:04.570 --> 11:05.530
把这个停掉了

11:06.650 --> 11:08.330
npm run test

11:08.970 --> 11:10.010
right list

11:17.980 --> 11:20.380
好 看一下 来 带成绩的列表都出来了

11:20.940 --> 11:23.260
好 那么接下来呢 我们来写这一块的样式

11:25.100 --> 11:28.220
好 这一块有什么样的样式呢 它肯定是一个列表

11:28.220 --> 11:30.460
那么这个列表呢 自然而然它应该是一个

11:30.860 --> 11:34.060
员书上来讲啊 应该是一个u l l i

11:34.700 --> 11:35.100
对不对

11:35.660 --> 11:37.580
一个u l uh l i

11:37.580 --> 11:39.100
那么 l i有几个呢

11:39.100 --> 11:42.540
l i有几个是不是取决于这个nest呀

11:42.540 --> 11:43.740
所以取决于它呀

11:43.740 --> 11:45.820
install l i是不是要循环

11:45.820 --> 11:49.980
循环这个数组来每一个数组那边每一箱呢

11:49.980 --> 11:51.660
就生成一个l i元素

11:51.660 --> 11:53.340
所以说呢 这个l i也挺简单的

11:54.700 --> 11:55.260
循环

11:55.260 --> 11:56.220
奉循环

11:56.220 --> 11:58.860
呃 循环这个in

11:59.340 --> 12:01.260
数组 nest

12:01.260 --> 12:01.740
循环它

12:02.540 --> 12:04.460
没循环意思 生成一个l i

12:04.460 --> 12:05.980
l i里边写啥呢

12:05.980 --> 12:08.620
是不是就是这个元素的名字

12:08.620 --> 12:10.060
对吧 这一箱的名字

12:10.060 --> 12:11.100
显示出来就完事了

12:11.820 --> 12:13.580
另外呢 它有没有可能选中呢

12:13.580 --> 12:14.620
如果说有可能选

12:14.620 --> 12:16.620
选中的话 给它带一个特殊的样式

12:16.620 --> 12:17.580
比方说给它

12:17.580 --> 12:20.220
啊 这边我给它写个总体的样式吧

12:20.220 --> 12:20.940
right

12:22.300 --> 12:22.700
nest

12:25.180 --> 12:26.460
好 那么这里边的l i呢

12:26.460 --> 12:27.660
有一个样式

12:27.740 --> 12:28.780
就是class

12:29.900 --> 12:30.140
为

12:31.500 --> 12:32.700
要不要为active

12:32.700 --> 12:34.620
就是select或者叫做

12:34.620 --> 12:36.380
它的样式要不要为select

12:37.340 --> 12:39.100
是否选中的是legative

12:39.100 --> 12:40.700
或者是active你们自己去归定

12:42.060 --> 12:43.420
那如果说它选中了

12:43.420 --> 12:44.460
它自然会有这个样式

12:44.460 --> 12:45.340
没有选中就没有

12:45.340 --> 12:46.140
所以说呢 我们这里呢

12:46.140 --> 12:46.860
给它个对象吧

12:47.580 --> 12:48.380
这么学过的啊

12:49.020 --> 12:49.500
active

12:50.060 --> 12:51.660
是不是有active这个那样式呢

12:51.660 --> 12:53.500
取决于 item is

12:53.500 --> 12:53.900
select

12:54.460 --> 12:55.500
这个属性为true

12:55.500 --> 12:56.540
那么就有这个样式

12:56.540 --> 12:57.740
vforce呢就没有

12:57.740 --> 12:59.340
这就就学好了呀

12:59.340 --> 13:00.140
我们来看一下吧

13:01.260 --> 13:01.580
这边

13:02.300 --> 13:02.620
小心

13:03.340 --> 13:03.660
这里

13:04.380 --> 13:04.780
怎么了

13:07.880 --> 13:09.720
它说编译错误

13:14.040 --> 13:15.320
它需要一个keyz

13:15.320 --> 13:17.160
这个没有没有给keyz

13:17.160 --> 13:18.200
那么给它个keyz变

13:19.080 --> 13:20.360
keyz的话

13:22.440 --> 13:24.440
哎呦这个keyz我给啥呀

13:24.440 --> 13:26.440
我给我给这个需要的了

13:27.080 --> 13:28.280
因为它这里的数据呢

13:28.280 --> 13:29.320
也不太会变化

13:29.320 --> 13:31.560
不太会增加会就或减少

13:31.640 --> 13:32.600
动态增加会减少

13:32.600 --> 13:33.560
我就给它一个

13:34.840 --> 13:35.720
哎呀 怎么了

13:37.000 --> 13:37.480
好了

13:38.680 --> 13:39.560
现在啥都看不见

13:39.560 --> 13:41.240
因为我们属性这一块呢

13:41.240 --> 13:42.520
没有给它传递任何东西

13:42.520 --> 13:42.760
对吧

13:42.760 --> 13:43.960
那我给它一个数据呗

13:43.960 --> 13:45.000
我给它传递一个数据

13:46.280 --> 13:47.640
呃 随便传递一个吧

13:51.400 --> 13:52.360
next吧

13:52.360 --> 13:53.320
这是一个数组

13:53.320 --> 13:54.920
这个数组里边有个对象啊

13:54.920 --> 13:55.320
name

13:57.780 --> 13:58.340
a

13:59.300 --> 13:59.860
is

13:59.860 --> 14:00.580
select

14:01.940 --> 14:02.660
v

14:03.220 --> 14:03.540
force

14:05.540 --> 14:06.820
随便写一下啊

14:06.820 --> 14:07.380
abc

14:09.910 --> 14:10.550
d

14:10.550 --> 14:11.030
有四个

14:12.950 --> 14:13.750
那么这个为q

14:15.270 --> 14:17.030
好了那么我们把这个列设传进去

14:17.030 --> 14:17.510
测试一下

14:18.710 --> 14:19.030
next

14:19.830 --> 14:20.630
好 保存啊

14:21.430 --> 14:23.430
那你看这里abcd是不是出来了

14:23.430 --> 14:25.030
我们先不着急写样式啊

14:25.030 --> 14:26.550
那么我们来看一下这个元素的

14:27.350 --> 14:28.070
选动状态

14:28.070 --> 14:29.910
你看这第三个是不是有个active

14:29.910 --> 14:30.790
对吧 选动状态

14:31.510 --> 14:32.070
没问题吧

14:33.350 --> 14:34.230
好了那么这一块呢

14:34.310 --> 14:35.670
其实看上去很简单对不对

14:35.670 --> 14:36.470
但是实际上呢

14:36.470 --> 14:38.230
这里还有一个很深层次的问题

14:38.230 --> 14:39.670
就是这个东西怎么办

14:40.710 --> 14:41.590
那如果说啊

14:41.590 --> 14:42.790
我给它传递的数据

14:42.790 --> 14:43.590
第六个二项呢

14:43.590 --> 14:45.110
它有一些指向

14:45.110 --> 14:46.550
它说第三项有些指向嘛

14:46.550 --> 14:48.550
我们给它写一个q

14:49.110 --> 14:50.790
有些指对象

14:50.790 --> 14:51.830
它又是一个数组

14:51.830 --> 14:52.950
这个数组里边呢

14:52.950 --> 14:54.150
我们又给它传递

14:54.150 --> 14:54.630
name

14:55.590 --> 14:56.390
select

14:57.350 --> 14:58.230
is

14:58.710 --> 14:59.590
v

15:03.030 --> 15:03.830
select

15:04.230 --> 15:04.870
select

15:05.430 --> 15:05.990
select

15:06.950 --> 15:07.590
你看

15:07.590 --> 15:08.550
这个se这一项呢

15:08.550 --> 15:09.590
它还有一些指向

15:09.590 --> 15:10.550
也不仅如此

15:10.550 --> 15:11.190
select2呢

15:11.190 --> 15:12.150
可能还有指向

15:12.150 --> 15:12.950
那么select2呢

15:12.950 --> 15:14.150
我们给它写个q

15:14.790 --> 15:15.590
又是一个数组

15:15.590 --> 15:17.190
它这个千套到底有多深

15:17.190 --> 15:18.070
我也不知道

15:18.070 --> 15:18.790
因为这个数据呢

15:18.790 --> 15:20.310
到时候是来自于幅度端的

15:20.310 --> 15:21.270
幅度端的千套有多深

15:21.270 --> 15:22.470
这个目录到底有多深

15:22.470 --> 15:23.350
我也不知道

15:23.350 --> 15:24.470
select2-1

15:25.350 --> 15:26.470
一人是negance

15:26.470 --> 15:27.190
of course

15:27.510 --> 15:28.310
就例子啊

15:28.950 --> 15:31.030
那么剩下的就没有q了

15:33.430 --> 15:34.230
2

15:34.230 --> 15:35.030
3

15:35.030 --> 15:35.830
4

15:35.830 --> 15:36.550
好

15:36.710 --> 15:38.150
比方说我们是这么一种结构

15:38.150 --> 15:40.070
哪里看我们的界面能显示出来吗

15:40.070 --> 15:41.030
是不是显示不出来

15:41.030 --> 15:42.070
因为我们这个主线

15:42.070 --> 15:43.110
它只循环了什么

15:43.110 --> 15:43.750
只循环了

15:44.630 --> 15:45.030
next

15:45.670 --> 15:46.950
那么那时候每个对象里边

15:46.950 --> 15:47.910
还有没有q准

15:47.910 --> 15:49.030
是不是说不准啊

15:49.030 --> 15:49.910
那这个怎么办

15:50.630 --> 15:51.110
这个问题

15:51.670 --> 15:52.710
就显得比较严重了

15:52.710 --> 15:53.510
这个东西怎么办

15:54.710 --> 15:55.910
那咋办了这个玩意儿

15:57.270 --> 15:59.270
哎 我有时候在这里判断一下

15:59.270 --> 16:00.310
它有没有q准

16:00.310 --> 16:00.870
有q准的话

16:00.870 --> 16:03.430
我在这里进进一步千套循环

16:03.430 --> 16:05.270
在这里可以继续千套循环吧

16:05.270 --> 16:06.310
可不可以的可以

16:06.390 --> 16:08.230
但是你只能千套两层啊

16:08.230 --> 16:09.430
就外面一层循环吧

16:09.430 --> 16:11.030
你别再写一个千套的循环

16:11.030 --> 16:12.790
你就这里再写个一尾哦

16:12.790 --> 16:14.150
那样子都是一样的

16:15.190 --> 16:15.750
天哪

16:16.390 --> 16:18.710
然后在里边再写一个千套的li循环

16:19.190 --> 16:20.550
可不可以的到时也可以

16:20.950 --> 16:22.470
但是你这样子一来的话

16:22.470 --> 16:23.670
那这个li里边

16:23.670 --> 16:25.110
它又可能又有q准了

16:26.150 --> 16:27.590
你又是不是又要千套

16:27.590 --> 16:29.270
到底有千套几层你不知道

16:30.150 --> 16:31.350
根本原因在哪呢

16:31.350 --> 16:32.630
代码写不出来的

16:32.630 --> 16:33.670
根本原因在哪呢

16:33.670 --> 16:34.870
根本原因在于

16:34.950 --> 16:37.030
我们在无忧里边写模板

16:37.030 --> 16:39.590
无忧里边的模板是静态的

16:40.870 --> 16:41.830
什么叫静态的

16:42.390 --> 16:44.070
就是它千套多少层

16:44.070 --> 16:46.470
就是它元素的结构是静态的

16:47.030 --> 16:48.630
到底是什么样的元素结构

16:49.590 --> 16:50.710
它是静态的

16:50.710 --> 16:52.550
它并不是动态的生成的元素结构

16:53.270 --> 16:55.750
这个问题呢在react里面到时不存在

16:56.390 --> 16:57.590
因为react呢

16:57.590 --> 16:59.270
你到时候学到就知道了啊

16:59.270 --> 17:01.190
它的做法呢它又不是静态模板

17:01.190 --> 17:03.030
因为无忧的模板是静态的

17:03.030 --> 17:04.310
所以说我们这个东西写不出来

17:05.350 --> 17:06.550
那这里又怎么办呢

17:06.550 --> 17:07.750
有两种方案

17:07.750 --> 17:09.430
第一种方案呢不显模板了

17:09.430 --> 17:10.710
我们使用Render寒书

17:11.270 --> 17:13.190
在Render寒书里动态生成微漏的

17:13.910 --> 17:14.790
可不可以的可以

17:15.430 --> 17:17.750
那么这个那个玩意呢写下就比较恶心了

17:17.750 --> 17:18.870
复杂一点了

17:18.870 --> 17:20.150
还有一种做法呢

17:20.150 --> 17:21.830
我们在模板里边进行定规

17:23.190 --> 17:24.230
怎么定规呢

17:24.230 --> 17:25.510
也就是我这一块

17:26.550 --> 17:28.630
其实我这个地方要显示啥呀

17:28.630 --> 17:30.150
其实是不是就是要显示

17:30.470 --> 17:31.910
当前组件

17:31.910 --> 17:34.230
就把当前组件再显示一次

17:34.230 --> 17:36.070
我把item的qtune

17:36.070 --> 17:38.470
qtune不也是一个列表吗

17:38.470 --> 17:40.710
你看这个qtune它不也是个列表吗

17:40.710 --> 17:41.590
它的规格

17:41.590 --> 17:44.070
跟我们这个列室规格是不是一样的

17:44.070 --> 17:45.750
它qtune也是一个列表

17:45.750 --> 17:47.670
我把这个qtune的传到

17:47.670 --> 17:48.870
就再用一次当前组件

17:48.870 --> 17:50.630
在自己的组件里边用自己

17:51.430 --> 17:53.270
把这个qtune给它传进去

17:53.830 --> 17:55.110
是不是就可以了

17:55.110 --> 17:56.470
就在组件里边定规

17:56.470 --> 17:57.750
那么怎么来的

17:58.070 --> 17:59.590
就在组件里边定规

17:59.590 --> 18:00.550
那么怎么来定规呢

18:00.550 --> 18:02.550
首先遇到第一个问题就出现了

18:02.550 --> 18:04.310
也就是唯一的问题就出现了

18:04.310 --> 18:05.830
我这个组件名字叫啥

18:06.790 --> 18:08.150
我这个组件的名字叫啥

18:08.150 --> 18:09.270
我都不知道这里写啥

18:10.070 --> 18:10.790
那有同学说

18:10.790 --> 18:12.390
我就写Ryzen列室了

18:12.390 --> 18:13.190
那是不行的

18:13.190 --> 18:14.470
它不认识这个组件的

18:14.470 --> 18:15.670
比较容易这样的写呗

18:15.670 --> 18:17.110
我们把个列室绑定

18:17.110 --> 18:18.310
绑定为什么呢

18:18.310 --> 18:19.990
绑定为item的qtune

18:19.990 --> 18:20.630
那你看吧

18:22.470 --> 18:22.870
刷新

18:23.910 --> 18:24.870
它这里直接爆错了

18:24.870 --> 18:27.030
它都不认识这个组件

18:27.110 --> 18:28.470
这个元素是啥

18:29.030 --> 18:29.430
为什么

18:29.430 --> 18:30.310
因为这里没有注册

18:30.310 --> 18:30.550
对吧

18:30.550 --> 18:31.670
没有注册这个组件

18:31.670 --> 18:32.710
那这里怎么注册呢

18:32.710 --> 18:34.310
不可能把自己导入进来注册

18:35.590 --> 18:36.710
是不是又很麻烦了

18:36.710 --> 18:37.430
那怎么办呢

18:37.430 --> 18:38.470
像这种情况了

18:39.350 --> 18:41.430
我们就可以用这种方式

18:41.430 --> 18:42.870
给这个组件的一个名字

18:44.070 --> 18:46.470
这个名字平时不给的话也没关系

18:46.470 --> 18:48.390
因为平时我们都是用注册组件的方式

18:48.390 --> 18:48.710
对吧

18:48.710 --> 18:50.070
就给它在注册组件的时候

18:50.070 --> 18:51.030
就该取了名字

18:51.030 --> 18:51.510
你看

18:51.510 --> 18:53.590
在注册组件的时候就该取了名字

18:53.590 --> 18:54.950
但是像这种地方

18:54.950 --> 18:56.550
没有办法注册自己

18:57.110 --> 18:58.230
没办法注册组件

18:58.230 --> 18:59.350
那怎么来取名字呢

18:59.350 --> 19:00.310
名字我们

19:00.310 --> 19:01.750
那么我们要取名字的话

19:01.750 --> 19:02.950
就可以使用Name属性

19:03.590 --> 19:06.150
就是当组件的名字缺失的时候

19:06.150 --> 19:07.510
它就会用这个名字

19:07.510 --> 19:08.390
作为组件名字

19:08.950 --> 19:09.110
好

19:09.110 --> 19:10.390
那么我们这里该写个名字

19:10.390 --> 19:11.430
就叫做right list

19:13.030 --> 19:13.270
好

19:13.270 --> 19:14.470
那现在它就能识别了

19:15.030 --> 19:16.150
你看就已经出来了

19:17.270 --> 19:17.750
是吧

19:17.750 --> 19:18.470
我就说这个

19:18.470 --> 19:20.950
这一块新知识也就这么一个东西

19:20.950 --> 19:23.350
在组件内部进行自我低规

19:24.470 --> 19:25.510
就完事了

19:25.590 --> 19:26.390
那么现在接下来

19:26.390 --> 19:27.110
我就要做的事情

19:27.110 --> 19:29.430
无非就是把样式给它设置一下

19:30.150 --> 19:30.390
好

19:30.390 --> 19:30.790
来吧

19:30.790 --> 19:31.430
设置样式

19:33.670 --> 19:34.310
我们在这里

19:34.310 --> 19:35.190
Style

19:35.190 --> 19:35.670
Sculpt

19:43.420 --> 19:44.860
样式的话

19:44.860 --> 19:46.780
我们首先把这个UO

19:46.780 --> 19:48.220
UO有没有去掉

19:49.740 --> 19:51.100
有没有那个重置

19:51.100 --> 19:52.300
好像没用重置

19:52.300 --> 19:52.940
没用重置

19:52.940 --> 19:53.580
不用重置的

19:54.220 --> 19:55.660
那么我们就把这个UO

19:55.660 --> 19:57.420
首先NestStyle

19:57.420 --> 19:57.980
设为Nut

19:59.180 --> 20:00.140
不要有NestStyle

20:02.890 --> 20:03.530
没效果呢

20:06.620 --> 20:07.100
OK

20:07.100 --> 20:07.980
NestStyle没了

20:09.100 --> 20:09.420
然后呢

20:09.420 --> 20:10.460
我们再看一下这个UO

20:13.350 --> 20:15.110
它有个Pending对吧

20:15.110 --> 20:16.630
UO里面是有个Pending的

20:19.700 --> 20:21.060
每个UO下面

20:21.060 --> 20:21.460
我看一下

20:23.460 --> 20:24.180
剩下就是

20:28.460 --> 20:29.020
找一找

20:29.020 --> 20:29.420
不着急

20:30.380 --> 20:31.580
它有一个Pending

20:31.580 --> 20:32.540
这个Pending呢

20:33.660 --> 20:34.300
我想一想

20:36.460 --> 20:37.580
这个Pending

20:37.660 --> 20:39.420
我不要的话好像也不行

20:39.420 --> 20:40.940
那我看一下这边的样式

20:40.940 --> 20:42.140
我看一下这边的样式

20:42.140 --> 20:42.780
是怎么弄的

20:43.660 --> 20:45.740
这个样式就不用过于去纠结了

20:46.700 --> 20:47.660
弄出来就得了

20:48.780 --> 20:49.260
啊

20:49.260 --> 20:50.140
我用的是DIV

20:52.730 --> 20:53.610
我用的是DIV

20:57.820 --> 20:58.300
找一找

21:04.500 --> 21:05.620
MultiNeft

21:07.990 --> 21:10.390
我这里就直接用这个Pending吧

21:10.390 --> 21:11.750
我直接用这个Pending得了

21:14.010 --> 21:14.410
Pending

21:17.740 --> 21:19.500
或者就用Pending把设为0吧

21:20.380 --> 21:20.700
然后呢

21:20.700 --> 21:21.500
MultiNeft

21:22.220 --> 21:23.020
再设为1

21:23.820 --> 21:24.300
1

21:26.330 --> 21:26.890
好看一下

21:27.930 --> 21:28.650
差不多了

21:28.650 --> 21:29.130
差不多了

21:29.770 --> 21:30.810
有这么个意思了

21:30.810 --> 21:31.210
然后呢

21:31.210 --> 21:31.930
我再设置一下

21:33.050 --> 21:34.170
每一个Li的高度

21:34.890 --> 21:35.770
每个Li的高度

21:35.770 --> 21:36.330
我设置一下

21:37.530 --> 21:38.010
UO

21:38.010 --> 21:38.490
不是

21:38.490 --> 21:39.210
不能用UO

21:39.610 --> 21:41.290
应该用Retrace List 扛天上

21:48.040 --> 21:48.280
好

21:48.280 --> 21:49.240
这样子

21:49.240 --> 21:50.040
我第一个

21:50.040 --> 21:51.000
我第一个就是

21:51.720 --> 21:53.320
我第一个UO

21:53.320 --> 21:54.280
就最外层的UO

21:54.280 --> 21:55.480
它是没有Margin的

21:55.480 --> 21:56.520
没有Margin的

21:56.520 --> 21:58.120
它下面的Ret List

21:58.920 --> 21:59.480
扛天上

21:59.480 --> 22:00.120
才有Margin

22:00.680 --> 22:01.640
MarginNeft

22:02.200 --> 22:02.680
1

22:03.000 --> 22:03.480
1

22:03.880 --> 22:04.760
这样子好一点

22:05.400 --> 22:06.440
这样子好一点

22:06.840 --> 22:08.280
最外层的是没有Margin的

22:08.280 --> 22:09.320
它下面的这个

22:09.320 --> 22:10.520
这个东西是用Margin的

22:11.960 --> 22:12.600
是用Margin的

22:12.600 --> 22:13.000
OK

22:13.000 --> 22:13.160
OK

22:13.160 --> 22:14.120
那么这样子好一点

22:14.120 --> 22:15.160
然后里边的Li呢

22:15.160 --> 22:16.360
我给它设置一个高度

22:16.360 --> 22:16.680
我看一下

22:16.680 --> 22:17.560
这边的高度是多少

22:21.580 --> 22:22.220
Li

22:23.420 --> 22:25.020
高度为40

22:25.660 --> 22:25.900
好

22:25.900 --> 22:26.540
那么我找到它

22:26.540 --> 22:27.580
你下面的Li

22:27.580 --> 22:29.260
高度40个相输

22:29.260 --> 22:30.380
南亚城的自然点

22:30.380 --> 22:31.820
而它也是40个相输

22:33.020 --> 22:33.820
好

22:33.820 --> 22:34.460
看一下这边

22:35.820 --> 22:36.620
嗯

22:36.620 --> 22:37.660
出现了问题了

22:37.660 --> 22:38.620
刷新一下

22:39.660 --> 22:40.700
出现了问题了

22:44.700 --> 22:46.620
像这种Li是不行的

22:46.620 --> 22:48.060
那我该是个Ming Heiz吧

22:50.140 --> 22:50.940
Ming Heiz

22:50.940 --> 22:52.060
不能直接固定

22:53.180 --> 22:53.980
最小高度

22:54.540 --> 22:54.940
OK

22:54.940 --> 22:55.420
差不多了

22:56.060 --> 22:56.460
然后呢

22:56.460 --> 22:57.900
是一个选中的样式

22:57.900 --> 22:58.540
当然Li呢

22:58.540 --> 22:59.340
有这个样式

22:59.340 --> 23:00.460
就Active

23:00.460 --> 23:01.260
有这个样式的时候

23:01.260 --> 23:02.300
是个选中效果

23:02.780 --> 23:03.660
选中效果呢

23:03.660 --> 23:04.060
我看一下

23:04.060 --> 23:05.180
好像是有个字体加出

23:06.140 --> 23:07.740
就这个

23:07.740 --> 23:08.540
复制一下吧

23:08.540 --> 23:09.900
Color呢

23:09.900 --> 23:11.100
Color我给它改一下

23:11.100 --> 23:13.020
Color之前有没有这个颜色

23:13.020 --> 23:15.260
到Styles里面去看一下

23:15.260 --> 23:18.100
有

23:18.100 --> 23:19.220
这个我们这个颜色

23:19.220 --> 23:20.740
我们这里倒进来

23:20.740 --> 23:22.740
Import

23:22.740 --> 23:26.760
倒入Styles

23:26.760 --> 23:28.360
Var.ness

23:28.360 --> 23:31.160
Color呢就直接使用

23:31.160 --> 23:33.700
好

23:33.700 --> 23:34.180
保存

23:34.180 --> 23:37.420
好

23:37.420 --> 23:38.140
还有问题啊

23:38.140 --> 23:39.980
这个Active呢

23:39.980 --> 23:41.420
是我把它放到哪呢

23:41.420 --> 23:42.780
我把它放到这个

23:42.780 --> 23:44.300
Li上面去了

23:44.300 --> 23:45.020
你看啊

23:45.020 --> 23:47.100
这个Active我把它放到Li上面去了

23:47.100 --> 23:48.140
放到Li上面去了

23:48.140 --> 23:49.660
就导致了Li下面的所有

23:49.660 --> 23:51.660
所有东西都全部被选中了

23:51.660 --> 23:53.980
都是一些小的细节问题

23:53.980 --> 23:55.500
其实我只要选中它就行了

23:55.500 --> 23:55.820
对吧

23:55.820 --> 23:57.020
所以说刚才这样吧

23:57.020 --> 23:58.060
我把上面这个文本呢

23:58.060 --> 24:01.290
用一个Spam元素包一下

24:01.290 --> 24:02.730
用这个Spam元素包一下

24:02.730 --> 24:04.170
那么我把Active的样式呢

24:04.170 --> 24:08.100
加到这个Spam元素上面去

24:08.100 --> 24:08.660
OK

24:08.660 --> 24:09.940
那么这个Active呢

24:09.940 --> 24:12.100
我就不用这个End of好了

24:12.100 --> 24:12.340
好

24:12.340 --> 24:13.300
保存

24:13.300 --> 24:14.100
OK

24:14.260 --> 24:15.060
搞定了对吧

24:15.060 --> 24:16.340
然后鼠标样式

24:16.340 --> 24:17.220
这个Li上面呢

24:17.220 --> 24:19.220
我给它放一个鼠标样式

24:19.220 --> 24:21.300
Cursor pointer

24:21.300 --> 24:22.260
你看

24:22.260 --> 24:22.980
Li

24:22.980 --> 24:24.980
鼠标样式是不是也有了

24:24.980 --> 24:25.940
对吧

24:25.940 --> 24:28.340
那现在就差不多了

24:28.340 --> 24:29.540
这个列表就做出来了

24:29.540 --> 24:30.900
那么现在最后一件事呢

24:30.900 --> 24:31.940
就是事件

24:31.940 --> 24:34.660
当我点击这个Li的时候

24:34.660 --> 24:35.140
好呗

24:35.140 --> 24:37.140
当我点击这个Spam元素的时候

24:37.140 --> 24:38.500
我要触发一个事件

24:38.500 --> 24:38.900
因此呢

24:38.900 --> 24:40.500
我给它收拾个点击事件

24:40.500 --> 24:41.860
Click

24:41.860 --> 24:42.900
当点击的时候呢

24:42.980 --> 24:44.420
我们要Handle

24:44.420 --> 24:45.220
Click

24:45.220 --> 24:46.820
触发点击事件

24:46.820 --> 24:48.580
那么我们再来处理一下

24:48.580 --> 24:50.820
Message

24:50.820 --> 24:52.500
Handle

24:52.500 --> 24:54.820
Click

24:54.820 --> 24:55.780
点击的时候呢

24:55.780 --> 24:57.300
我要干嘛呢

24:57.300 --> 24:59.140
我是不是要把当前的

24:59.140 --> 25:02.020
点了哪个元素扔给副级组件

25:02.020 --> 25:03.060
让它去处理

25:03.060 --> 25:04.500
我要告诉它点了哪个元素

25:04.500 --> 25:04.900
对吧

25:04.900 --> 25:06.340
点了哪个对象

25:06.340 --> 25:07.460
那么我们这里是不是要把

25:07.460 --> 25:09.460
当前的对象传进来

25:09.460 --> 25:10.580
点了哪个对象

25:10.580 --> 25:11.780
那么这里边我怎么处理的

25:11.780 --> 25:12.580
我处理不了

25:12.740 --> 25:13.780
我要扔给副级处理

25:13.780 --> 25:15.380
是不是我们这里抛出事件

25:15.380 --> 25:16.260
Message

25:16.260 --> 25:17.300
抛出事件

25:17.300 --> 25:18.100
这个事件呢

25:18.820 --> 25:19.620
不要取个名字

25:19.620 --> 25:22.020
叫做Snext

25:25.380 --> 25:26.820
当我们选中的一个

25:26.820 --> 25:27.940
选中的时候

25:27.940 --> 25:30.420
那么它触发了这个事件

25:30.420 --> 25:32.340
然后有没有数据呢

25:32.340 --> 25:34.020
数据把这个Item扔出去

25:36.730 --> 25:37.370
就把人对象

25:37.370 --> 25:38.170
你点了哪个对象

25:38.170 --> 25:38.970
把对象扔出去

25:39.610 --> 25:39.850
好

25:39.850 --> 25:40.810
那么有了这个事件过后

25:40.810 --> 25:41.770
我们在这边看一下

25:42.410 --> 25:42.890
我们这里呢

25:42.890 --> 25:44.010
就可以给它注册一个事件

25:45.370 --> 25:47.690
Snext

25:47.690 --> 25:49.530
当我们选中的时候

25:49.530 --> 25:50.810
它触发这个事件

25:50.810 --> 25:53.850
我们叫HandleSnext

25:53.850 --> 25:56.730
Message

25:56.730 --> 25:59.450
HandleSnext

25:59.450 --> 26:01.290
它会传一个数据过来

26:01.290 --> 26:02.250
我们输出这个Item

26:03.450 --> 26:03.690
好

26:03.690 --> 26:04.090
保存啊

26:04.090 --> 26:04.650
我们来看一下

26:04.650 --> 26:05.610
有没有这个效果

26:07.130 --> 26:07.610
点击

26:08.890 --> 26:09.450
你看

26:09.450 --> 26:11.210
是不是把这个数据传出来了

26:11.210 --> 26:12.810
你点的是这个东西

26:12.810 --> 26:13.770
点击

26:14.490 --> 26:14.890
点它

26:15.610 --> 26:16.090
点它

26:16.090 --> 26:16.490
点它

26:17.610 --> 26:18.730
这点为什么要传出

26:18.730 --> 26:19.690
哦明白了

26:20.570 --> 26:20.970
现在呢

26:20.970 --> 26:22.330
我们还有一个事情要做

26:22.330 --> 26:23.290
就当我们自己来

26:23.290 --> 26:24.970
自己里边的地规的时候

26:24.970 --> 26:26.330
是不是使用了自己的组件

26:26.330 --> 26:27.450
这个组件是不是也有

26:28.730 --> 26:29.770
也有东西要处理啊

26:30.330 --> 26:31.530
是不是也有事件要处理

26:31.530 --> 26:32.810
就我们自己写的组件吧

26:32.810 --> 26:33.770
它也有事件要处理

26:33.770 --> 26:34.170
因此呢

26:34.170 --> 26:34.890
它的事件呢

26:34.890 --> 26:35.210
是那个

26:35.770 --> 26:37.050
就是我们自己写的这个组件

26:37.050 --> 26:37.530
地规嘛

26:38.170 --> 26:39.050
给它传的数据进去

26:39.050 --> 26:40.250
它有个事件要跑出来

26:40.250 --> 26:42.010
就是它里边点了过后

26:42.010 --> 26:42.810
它又是不是一个事件

26:42.890 --> 26:43.610
是那个在跑出来

26:43.610 --> 26:44.570
是我们刚才自己写的

26:44.570 --> 26:44.890
对吧

26:46.730 --> 26:48.170
它有事件跑出来的时候呢

26:48.170 --> 26:49.210
我们这里要怎么处理呢

26:49.210 --> 26:50.570
我们还是把回到这个地方

26:50.570 --> 26:51.690
让它来进行处理

26:52.410 --> 26:52.890
handle

26:54.570 --> 26:55.210
可以

26:55.210 --> 26:55.690
那么

26:55.690 --> 26:56.890
我这些其实也处理不了

26:56.890 --> 26:57.770
我继续往上跑

26:58.250 --> 26:58.730
对吧

26:58.730 --> 26:59.770
自己地规自己

26:59.770 --> 27:01.450
在自己里边使用了自己的组件

27:01.450 --> 27:02.330
它会有事件

27:02.330 --> 27:03.610
那么这个事件扔出来的时候

27:03.610 --> 27:04.330
我处理不了

27:04.330 --> 27:04.650
还是

27:05.210 --> 27:06.250
把它继续往上跑

27:07.290 --> 27:07.530
好

27:07.530 --> 27:07.930
保存

27:09.530 --> 27:10.250
你看

27:10.250 --> 27:11.530
这些我们点了过后就知道

27:11.530 --> 27:12.410
我点到啥了

27:12.490 --> 27:12.890
对吧

27:14.490 --> 27:15.930
这样子我就知道点了啥了

27:20.250 --> 27:21.370
是不是知道了

27:21.370 --> 27:21.690
OK

27:21.690 --> 27:24.650
那么这个组件就做好了

27:24.650 --> 27:26.010
放在这我们之后会有用

27:26.730 --> 27:26.970
OK

27:26.970 --> 27:29.370
这是关于这个地规组件的做法

