WEBVTT

00:00.110 --> 00:03.110
这节课我们继续学习

00:03.110 --> 00:05.110
那在上节课咱们说了一下

00:05.110 --> 00:07.110
几块儿当中的插件

00:07.110 --> 00:09.110
然后介绍了一下这个插件

00:09.110 --> 00:11.110
给大家的一些网站

00:11.110 --> 00:13.110
你们可以下去看一下

00:13.110 --> 00:15.110
然后在最后我们是拿了一个 full page

00:15.110 --> 00:17.110
这个插件

00:17.110 --> 00:19.110
演示了一下它的一些使用方式

00:19.110 --> 00:21.110
通过上节课我想

00:21.110 --> 00:23.110
各位小伙伴心里头已经知道

00:23.110 --> 00:25.110
这个插件它的一个魅力了吧

00:25.110 --> 00:27.110
用起来是不是贼爽66的

00:27.110 --> 00:29.110
好 没有玩这个插件

00:29.110 --> 00:31.110
我们这节课来继续来

00:31.110 --> 00:33.110
学习这个插件

00:33.110 --> 00:35.110
那这节课我们要说的是什么呢

00:35.110 --> 00:37.110
我们要说自定义的插件

00:37.110 --> 00:40.110
也就是说咱自己去写一个插件

00:40.110 --> 00:42.110
那在上节课咱们看到那个

00:42.110 --> 00:44.110
网站当中是不是有非常多

00:44.110 --> 00:46.110
非常多的一些插件

00:46.110 --> 00:48.110
那些东西都是由其他的一些小伙伴

00:48.110 --> 00:50.110
他们写的

00:50.110 --> 00:51.110
写完之后丢到上面

00:51.110 --> 00:52.110
我们去用

00:52.110 --> 00:53.110
还有那个官方网站

00:53.110 --> 00:55.110
是不是也是有非常之多

00:55.110 --> 00:57.110
那你看他们都能写

00:57.110 --> 00:58.110
能否写呢

00:58.110 --> 00:59.110
那必须可以写

00:59.110 --> 01:01.110
所以这节课咱们的重点

01:01.110 --> 01:04.110
就是说教大家怎么去写这个插件

01:04.110 --> 01:06.110
那这样的话是不是就很happy

01:06.110 --> 01:07.110
你想想

01:07.110 --> 01:09.110
比如说我们在项目当中

01:09.110 --> 01:10.110
我们写的项目当中

01:10.110 --> 01:11.110
可能有某一些功能

01:11.110 --> 01:13.110
它的使用频率是非常之高的

01:13.110 --> 01:15.110
那这个时候我们就可以

01:15.110 --> 01:18.110
把这个功能给它写成一个插件

01:18.110 --> 01:19.110
那在用的地方

01:19.110 --> 01:21.110
我们就像上节课咱们说的

01:21.110 --> 01:23.110
那个full page这个插件一样

01:23.110 --> 01:25.110
咱引入相应的一些文件

01:25.110 --> 01:27.110
完了之后在这直接一个方法

01:27.110 --> 01:28.110
调完之后

01:28.110 --> 01:30.110
里头C一些必要的一些参数

01:30.110 --> 01:32.110
这个功能是不是就出现了

01:32.110 --> 01:34.110
用起来绝对是66的

01:34.110 --> 01:35.110
对吧

01:35.110 --> 01:36.110
那这样的话

01:36.110 --> 01:38.110
它能够提高我们的工作效率

01:38.110 --> 01:39.110
重复的东西

01:39.110 --> 01:41.110
你就不用重复去写了

01:41.110 --> 01:43.110
然后还有另外一个

01:43.110 --> 01:45.110
满足一下你的特色心理

01:45.110 --> 01:46.110
是不是

01:46.110 --> 01:48.110
比如说你遇到了一个

01:48.110 --> 01:49.110
非常好看的一个功能

01:49.110 --> 01:50.110
或者说好看的一个效果

01:50.110 --> 01:52.110
你就可以把它写成一个插件

01:52.110 --> 01:53.110
然后丢到网上

01:53.110 --> 01:55.110
给其他的一些小伙伴

01:55.110 --> 01:56.110
给他们去用

01:56.110 --> 01:58.110
满足一下自己的心理

01:58.110 --> 01:59.110
行吧

01:59.110 --> 02:01.110
那这个就是咱们这节课的一个内容

02:01.110 --> 02:02.110
那好

02:02.110 --> 02:04.110
那我们要去说一下

02:04.110 --> 02:06.110
这个插件该如何去写呢

02:06.110 --> 02:08.110
其实这个插件

02:08.110 --> 02:10.110
Gquery已经给咱们提供了

02:10.110 --> 02:12.110
定义插件的方法

02:12.110 --> 02:13.110
那这个方法是什么

02:13.110 --> 02:14.110
总共有两个

02:14.110 --> 02:16.110
在这我就去写一下

02:18.110 --> 02:19.110
哪两个方法

02:19.110 --> 02:20.110
来

02:20.110 --> 02:21.110
第一个

02:22.110 --> 02:23.110
这个方法是什么呢

02:23.110 --> 02:26.130
是

02:26.130 --> 02:28.130
Gquery对象

02:29.130 --> 02:31.130
Gquery对象

02:31.130 --> 02:33.130
对象本身

02:33.130 --> 02:37.400
扩展方法

02:37.400 --> 02:39.400
给Gquery对象本身扩展方法

02:39.400 --> 02:40.400
然后

02:40.400 --> 02:41.400
第二个是什么呢

02:41.400 --> 02:44.900
是这个

02:44.900 --> 02:45.900
给

02:45.900 --> 02:47.900
Gquery

02:47.900 --> 02:49.900
道母对象

02:49.900 --> 02:53.860
扩展方法

02:53.860 --> 02:54.860
其实说白了

02:54.860 --> 02:55.860
这个插件是啥呢

02:55.860 --> 02:57.860
就是在这个对象身上

02:57.860 --> 02:59.860
我们去扩展出来一个方法

02:59.860 --> 03:01.860
这个呢就是插件

03:01.860 --> 03:02.860
你想想你看

03:02.860 --> 03:03.860
我们在上节课使用

03:03.860 --> 03:05.860
那你去使用的话

03:05.860 --> 03:06.860
那这个东西我问你是啥

03:06.860 --> 03:08.860
他不就是一个道母对象吗

03:08.860 --> 03:09.860
然后呢这个道母对象

03:09.860 --> 03:10.860
那你看这个是啥

03:10.860 --> 03:11.860
他不就是一个函数吗

03:11.860 --> 03:13.860
函数不就是一个方法吗

03:13.860 --> 03:14.860
你看扩号

03:14.860 --> 03:15.860
我们去调这个方法就行了

03:15.860 --> 03:17.860
给他传参是不就行了

03:17.860 --> 03:18.860
说白了

03:18.860 --> 03:20.860
他其实就是一个函数

03:20.860 --> 03:21.860
就是一个函数

03:21.860 --> 03:23.860
那至于这个函数呢

03:23.860 --> 03:26.860
他所属有两个地方

03:26.860 --> 03:27.860
第一个呢就是

03:27.860 --> 03:29.860
Gquery对象本身

03:29.860 --> 03:30.860
扩展一个方法

03:30.860 --> 03:31.860
其实就是扩展一个函数

03:31.860 --> 03:32.860
然后呢

03:32.860 --> 03:33.860
第二个呢就是

03:33.860 --> 03:34.860
Gquery道母对象

03:34.860 --> 03:35.860
道母对象就是

03:35.860 --> 03:36.860
我们从页面当中

03:36.860 --> 03:38.860
获取到的那些道母元素

03:38.860 --> 03:39.860
你知道吗

03:39.860 --> 03:40.860
那这两个是不一样的

03:40.860 --> 03:41.860
明白吧

03:41.860 --> 03:42.860
好

03:42.860 --> 03:43.860
第一个我们再去使用的时候呢

03:43.860 --> 03:44.860
可能就是一个

03:44.860 --> 03:45.860
道老夫

03:45.860 --> 03:46.860
因为他是什么

03:46.860 --> 03:48.860
他是我们Gquery本身身上的

03:48.860 --> 03:50.860
Gquery对象本身的一个

03:50.860 --> 03:51.860
比如说我们扩展了一个ABC

03:51.860 --> 03:52.860
是不是

03:52.860 --> 03:53.860
那好

03:53.860 --> 03:54.860
他使用就是这么去使用

03:54.860 --> 03:55.860
这个第二个呢

03:55.860 --> 03:56.860
就是道母身上去扩展

03:56.860 --> 03:58.860
那我就需要先获取一下

03:58.860 --> 04:00.860
比如说获取到一个box

04:00.860 --> 04:02.860
那拿这个box呢

04:02.860 --> 04:03.860
再调ABC

04:03.860 --> 04:04.860
是这样

04:04.860 --> 04:06.860
你看他们的区别啊

04:06.860 --> 04:07.860
是不是

04:07.860 --> 04:08.860
就是在用的时候呢

04:08.860 --> 04:09.860
是不一样的

04:09.860 --> 04:10.860
那好

04:10.860 --> 04:11.860
我们这两个方法呢

04:11.860 --> 04:12.860
先跟大家那去解释一下

04:12.860 --> 04:14.860
咱们先来演示一下

04:14.860 --> 04:15.860
第一个方法呢

04:15.860 --> 04:16.860
就是给Gquery对象

04:16.860 --> 04:17.860
本身去扩展方法

04:17.860 --> 04:18.860
那怎么去扩展呢

04:18.860 --> 04:19.860
其实这个呢

04:19.860 --> 04:20.860
Gquery已经帮咱们

04:20.860 --> 04:22.860
去定义了一个方法

04:22.860 --> 04:23.860
这个方法呢

04:23.860 --> 04:24.860
来给对象

04:24.860 --> 04:25.860
给本身的对象呢

04:25.860 --> 04:27.860
去扩展一个方法

04:27.860 --> 04:28.860
这个方法叫啥呢

04:28.860 --> 04:29.860
叫Extend

04:29.860 --> 04:32.860
来一个道路符点

04:32.860 --> 04:33.860
就是这个方法

04:33.860 --> 04:35.860
我们调一下这个方法啊

04:35.860 --> 04:36.860
好

04:36.860 --> 04:37.860
这个方法调完之后呢

04:37.860 --> 04:38.860
接下来在里头

04:38.860 --> 04:39.860
他接收一个对象

04:39.860 --> 04:40.860
作为一个参数

04:40.860 --> 04:41.860
你想啊

04:41.860 --> 04:42.860
你看

04:42.860 --> 04:43.860
我要给我的

04:43.860 --> 04:44.860
本身这个对象

04:44.860 --> 04:45.860
扩展什么方法呢

04:45.860 --> 04:46.860
在这呢

04:46.860 --> 04:47.860
就是一个k跟value的形式

04:47.860 --> 04:48.860
扩展多少

04:48.860 --> 04:49.860
你写多少

04:49.860 --> 04:50.860
非常的好用啊

04:50.860 --> 04:51.860
比如说

04:51.860 --> 04:52.860
扩展一个LG这个方法

04:52.860 --> 04:53.860
这个方法

04:53.860 --> 04:54.860
肯定是在我们的Gquery本身

04:54.860 --> 04:55.860
是没有的LG啊

04:55.860 --> 04:56.860
那来

04:56.860 --> 04:57.860
咱写一个faction

04:57.860 --> 05:00.170
他呢

05:00.170 --> 05:01.170
接收一个参数

05:01.170 --> 05:02.170
比如说是一个value啊

05:02.170 --> 05:03.170
然后呢

05:03.170 --> 05:04.170
简简单单

05:04.170 --> 05:05.170
我们在这呢

05:05.170 --> 05:06.170
就是一个conclog

05:06.170 --> 05:07.170
就是把这个conclog

05:07.170 --> 05:08.170
这个方法呢

05:08.170 --> 05:09.170
简单给他封装一下

05:09.170 --> 05:10.170
然后log什么呢

05:10.170 --> 05:11.170
log你丢给我什么

05:11.170 --> 05:12.170
你传什么

05:12.170 --> 05:13.170
我log什么

05:13.170 --> 05:14.170
行

05:14.170 --> 05:15.170
这样的话就完事了

05:15.170 --> 05:16.170
你看

05:16.170 --> 05:17.170
是不是超级的简单啊

05:17.170 --> 05:18.170
那怎么去使用呢

05:18.170 --> 05:20.170
我们就直接拿上一个道路符

05:20.170 --> 05:21.170
道路符

05:21.170 --> 05:22.170
然后那调什么呢

05:22.170 --> 05:23.170
调LG

05:23.170 --> 05:24.170
那我们传上一个什么呢

05:24.170 --> 05:25.170
开门

05:25.170 --> 05:26.170
那我们来看一下啊

05:26.170 --> 05:27.170
打开一面

05:27.170 --> 05:28.170
来 控制台

05:28.170 --> 05:29.170
看到没有

05:29.170 --> 05:30.170
控制台当中呢

05:30.170 --> 05:31.170
是不是给咱们

05:31.170 --> 05:32.170
已经打印出这个开门了

05:32.170 --> 05:33.170
神奇吗

05:33.170 --> 05:34.170
就这么神奇啊

05:34.170 --> 05:35.170
你看这么去写的话

05:35.170 --> 05:36.170
这个方法呢

05:36.170 --> 05:37.170
他就最终会

05:37.170 --> 05:38.170
在谁身上啊

05:38.170 --> 05:40.170
在我们的这个道路符身上

05:40.170 --> 05:42.170
也就是几块本身身上

05:42.170 --> 05:43.170
本身对象

05:43.170 --> 05:44.170
他身上的这个方法

05:44.170 --> 05:46.170
那就是使用这个呢

05:46.170 --> 05:47.170
去进行一个扩展啊

05:47.170 --> 05:49.170
用起来是非常的方便的

05:49.170 --> 05:50.170
简单的啊

05:50.170 --> 05:51.170
好

05:51.170 --> 05:52.170
这是第一个

05:52.170 --> 05:53.170
那接下来

05:53.170 --> 05:54.170
第二个呢

05:54.170 --> 05:55.170
第二个呢

05:55.170 --> 05:56.170
就是给我们的道路对象呢

05:56.170 --> 05:57.170
身上呢

05:57.170 --> 05:58.170
去扩展这个方法

05:58.170 --> 05:59.170
那这个呢

05:59.170 --> 06:00.170
我在这呢

06:00.170 --> 06:01.170
写上一个道路对象

06:01.170 --> 06:02.170
H1这个标签

06:02.170 --> 06:03.170
比如说

06:03.170 --> 06:04.170
给上名字

06:04.170 --> 06:05.170
陈学辉

06:05.170 --> 06:06.170
好

06:06.170 --> 06:07.170
来先看一下啊

06:07.170 --> 06:08.170
刷新一下

06:08.170 --> 06:09.170
这是不是有一个

06:09.170 --> 06:10.170
陈学辉

06:10.170 --> 06:11.170
三个字是吧

06:11.170 --> 06:13.170
那怎么给这个道路对象身上

06:13.170 --> 06:14.170
去扩展这个方法呢

06:14.170 --> 06:15.170
他也是使用

06:15.170 --> 06:16.170
道路符

06:16.170 --> 06:17.170
点

06:17.170 --> 06:18.170
只不过这儿

06:18.170 --> 06:19.170
加了一个fn

06:19.170 --> 06:20.170
然后呢

06:20.170 --> 06:21.170
再点

06:21.170 --> 06:22.170
就是这个方法

06:22.170 --> 06:23.170
明白吧

06:23.170 --> 06:24.170
然后这里头呢

06:24.170 --> 06:25.170
与法跟上面是

06:25.170 --> 06:26.170
也是一模一样的

06:26.170 --> 06:27.170
就是一个对象

06:27.170 --> 06:29.170
那我们扩展一个方法吧

06:29.170 --> 06:30.170
比如说啊

06:30.170 --> 06:31.170
我扩展一个

06:31.170 --> 06:32.170
称之color

06:32.170 --> 06:33.170
这个方法

06:33.170 --> 06:34.170
然后写一下

06:34.170 --> 06:35.170
好

06:35.170 --> 06:36.170
这个时候呢

06:36.170 --> 06:37.170
有一个问题啊

06:37.170 --> 06:38.170
什么问题啊

06:38.170 --> 06:39.170
就是我们这个方法呢

06:39.170 --> 06:40.170
它是扩展

06:40.170 --> 06:41.170
这个道路对象的

06:41.170 --> 06:42.170
那我们在这儿

06:42.170 --> 06:43.170
如何能够

06:43.170 --> 06:44.170
取到这个道路对象呢

06:44.170 --> 06:45.170
这是一个问题

06:45.170 --> 06:46.170
你比如说啊

06:46.170 --> 06:47.170
这是一个H1

06:47.170 --> 06:48.170
好

06:48.170 --> 06:49.170
他用这个方法

06:49.170 --> 06:50.170
那他在去用的时候呢

06:50.170 --> 06:51.170
这样去用

06:51.170 --> 06:52.170
我道路符

06:52.170 --> 06:53.170
先拿到

06:53.170 --> 06:54.170
H1这个标签

06:54.170 --> 06:55.170
是不是

06:55.170 --> 06:56.170
然后呢

06:56.170 --> 06:57.170
我调调什么呢

06:57.170 --> 06:58.170
称之color

06:58.170 --> 06:59.170
跟上面是一模一样的

06:59.170 --> 07:00.170
我调这个方法

07:00.170 --> 07:01.170
好

07:01.170 --> 07:02.170
那有的时候呢

07:02.170 --> 07:03.170
还是这样

07:03.170 --> 07:04.170
页面当中呢

07:04.170 --> 07:05.170
比如说有一个div

07:05.170 --> 07:06.170
是不是啊

07:06.170 --> 07:08.170
我也要让他去调这个

07:08.170 --> 07:10.170
调这个称之color

07:10.170 --> 07:11.170
那这个时候呢

07:11.170 --> 07:12.170
我们怎么能够拿到

07:12.170 --> 07:13.170
H1

07:13.170 --> 07:15.170
能够拿到这个div呢

07:15.170 --> 07:16.170
咱这里头

07:16.170 --> 07:17.170
肯定不能这么去干

07:17.170 --> 07:18.170
是不是啊

07:18.170 --> 07:19.170
这样去干的话

07:19.170 --> 07:20.170
那怎么办

07:20.170 --> 07:21.170
这里头有一个东西

07:21.170 --> 07:22.170
叫什么呢

07:22.170 --> 07:25.310
叫道路服务一个Z

07:25.310 --> 07:26.310
其实啊

07:26.310 --> 07:27.310
是什么呢

07:27.310 --> 07:28.310
就是我们面向对象

07:28.310 --> 07:29.310
原生GS当中的

07:29.310 --> 07:30.310
面向对象

07:30.310 --> 07:31.310
我们的实力

07:31.310 --> 07:32.310
实力呢

07:32.310 --> 07:33.310
在我们的这个

07:33.310 --> 07:34.310
构造寒兽当中呢

07:34.310 --> 07:35.310
指的不就是那个Z对象吗

07:35.310 --> 07:36.310
是不是啊

07:36.310 --> 07:37.310
好在这呢

07:37.310 --> 07:38.310
也是一样的

07:38.310 --> 07:39.310
那这个Z呢

07:39.310 --> 07:40.310
指向的是谁

07:40.310 --> 07:41.310
其实就是他

07:41.310 --> 07:42.310
就是他们

07:42.310 --> 07:43.310
那么

07:43.310 --> 07:44.310
然后这个时候呢

07:44.310 --> 07:45.310
干嘛

07:45.310 --> 07:46.310
我的这个方法

07:46.310 --> 07:47.310
你就随意去

07:47.310 --> 07:48.310
去写了

07:48.310 --> 07:49.310
你能获取到这个

07:49.310 --> 07:50.310
道路对象之后呢

07:50.310 --> 07:51.310
明白吧

07:51.310 --> 07:52.310
那Change Color这个呢

07:52.310 --> 07:53.310
我们改一下颜色

07:53.310 --> 07:54.310
那就是CSS

07:54.310 --> 07:55.310
是不是

07:55.310 --> 07:56.310
然后CSS呢

07:56.310 --> 07:57.310
Color

07:57.310 --> 07:58.310
改成什么呢

07:58.310 --> 07:59.310
改成一个Right

08:00.310 --> 08:01.310
把这个删掉

08:01.310 --> 08:02.310
啊

08:02.310 --> 08:03.310
删掉之后呢

08:03.310 --> 08:04.310
我们再来看啊

08:04.310 --> 08:05.310
这本身是一个红色

08:05.310 --> 08:06.310
当我刷新

08:06.310 --> 08:07.310
他是不是就变成了一个

08:07.310 --> 08:08.310
不是

08:08.310 --> 08:09.310
本身是一个黑色

08:09.310 --> 08:10.310
现在是不是就变成了

08:10.310 --> 08:11.310
一个红色的

08:11.310 --> 08:12.310
那你看这个方法呢

08:12.310 --> 08:13.310
是不是

08:13.310 --> 08:14.310
我就能够使用了

08:14.310 --> 08:15.310
正常使用了啊

08:15.310 --> 08:16.310
非常的简单

08:17.310 --> 08:18.310
就是一个

08:18.310 --> 08:20.310
点FN 点X10的

08:20.310 --> 08:21.310
好 继续吧

08:21.310 --> 08:22.310
那这个方法

08:22.310 --> 08:23.310
我在这标一下吧

08:25.310 --> 08:27.880
这个

08:27.880 --> 08:30.770
指向

08:30.770 --> 08:31.770
指向

08:31.770 --> 08:32.770
是

08:32.770 --> 08:33.770
用的

08:33.770 --> 08:34.770
道路

08:35.770 --> 08:38.140
对象

08:38.140 --> 08:39.140
行啊

08:39.140 --> 08:40.140
好

08:40.140 --> 08:41.140
然后呢

08:41.140 --> 08:42.140
再来

08:42.140 --> 08:43.140
就是关于给这个道路

08:43.140 --> 08:44.140
扩展方法呢

08:44.140 --> 08:45.140
还有另外一种写法

08:45.140 --> 08:46.140
这种写法呢

08:46.140 --> 08:47.140
是这样的

08:47.140 --> 08:48.140
一个道路服务

08:48.140 --> 08:49.140
然后呢

08:49.140 --> 08:50.140
一个点

08:50.140 --> 08:51.140
什么的

08:51.140 --> 08:52.140
FN点

08:52.140 --> 08:53.140
有一个Faction

08:53.140 --> 08:54.140
它还可以这么去玩

08:55.140 --> 08:56.140
那么这么去写啊

08:56.140 --> 08:57.140
这么去写的话

08:57.140 --> 08:58.140
也是一样的

08:58.140 --> 08:59.140
这个里头呢

08:59.140 --> 09:00.140
我们的这个道路服务

09:00.140 --> 09:01.140
然后呢获取到的

09:01.140 --> 09:02.140
哎

09:02.140 --> 09:03.140
道路服务

09:03.140 --> 09:04.140
取到的这个对象呢

09:04.140 --> 09:05.140
指向的

09:05.140 --> 09:06.140
还是你使用的那个

09:06.140 --> 09:07.140
道路对象

09:07.140 --> 09:08.140
然后呢

09:08.140 --> 09:09.140
再来上一个CSS

09:09.140 --> 09:10.140
比如说

09:10.140 --> 09:11.140
FountSize

09:11.140 --> 09:12.140
这个呢

09:12.140 --> 09:13.140
也要变一下

09:13.140 --> 09:14.140
变成50

09:14.140 --> 09:15.140
变成50

09:15.140 --> 09:16.140
就OK了

09:16.140 --> 09:17.140
好

09:17.140 --> 09:18.140
然后再来

09:18.140 --> 09:19.140
这个里头

09:19.140 --> 09:20.140
要注意啊

09:20.140 --> 09:21.140
注意什么呢

09:21.140 --> 09:22.140
就是

09:22.140 --> 09:23.140
我在这

09:23.140 --> 09:24.140
要Return一下

09:25.140 --> 09:26.140
Return一下什么呢

09:26.140 --> 09:27.140
Return一下

09:27.140 --> 09:28.140
这个ZS

09:29.140 --> 09:32.030
为什么要ReturnZS呢

09:32.030 --> 09:34.030
是因为我需要

09:34.030 --> 09:35.030
满足我们

09:35.030 --> 09:36.030
Gquery它的一个特点

09:36.030 --> 09:37.030
链式调用

09:37.030 --> 09:39.030
如果说你不Return的话

09:39.030 --> 09:40.030
那你这个方法

09:40.030 --> 09:41.030
调完之后呢

09:41.030 --> 09:42.030
这个值是啥

09:42.030 --> 09:43.030
安迪范的

09:43.030 --> 09:44.030
安迪范的

09:44.030 --> 09:45.030
然后呢

09:45.030 --> 09:46.030
你能再去调

09:46.030 --> 09:47.030
什么呢

09:47.030 --> 09:48.030
撑值Size吗

09:48.030 --> 09:49.030
不能吧

09:49.030 --> 09:50.030
我想用链式调用的话

09:50.030 --> 09:51.030
你就只能这么去干了

09:51.030 --> 09:52.030
来

09:52.030 --> 09:53.030
看一下啊

09:53.030 --> 09:54.030
来刷新一下

09:54.030 --> 09:55.030
变大了吗

09:55.030 --> 09:56.030
必然变大了

09:56.030 --> 09:57.030
那如果说你没有这个Return

09:57.030 --> 09:58.030
那我们再来看

09:58.030 --> 09:59.030
刷新不好意思

09:59.030 --> 10:00.030
抱错了

10:00.030 --> 10:01.030
看到没有

10:01.030 --> 10:02.030
他说我不能去使用

10:02.030 --> 10:03.030
这个撑值Size

10:03.030 --> 10:04.030
这个方法

10:04.030 --> 10:06.030
是因为现在安迪范的身上

10:06.030 --> 10:08.030
压根就没有这个撑值Size

10:08.030 --> 10:10.030
我们只能够让他Return出

10:10.030 --> 10:11.030
我们的那个对象

10:11.030 --> 10:12.030
这也是一样的

10:12.030 --> 10:13.030
每一个方法

10:13.030 --> 10:14.030
你想让满足

10:14.030 --> 10:15.030
我们的链式调用的

10:15.030 --> 10:16.030
一个特征的话

10:16.030 --> 10:17.030
你就需要在这个方法的

10:17.030 --> 10:18.030
最后呢

10:18.030 --> 10:19.030
Return一下

10:19.030 --> 10:20.030
这个ZS对象

10:20.030 --> 10:21.030
就行了

10:21.030 --> 10:22.030
你看啊

10:22.030 --> 10:23.030
首先先变颜色

10:23.030 --> 10:24.030
然后呢

10:24.030 --> 10:25.030
再变什么呢

10:25.030 --> 10:26.030
字体的大小

10:26.030 --> 10:27.030
好吧

10:27.030 --> 10:28.030
这个呢

10:28.030 --> 10:29.030
就OK了

10:29.030 --> 10:30.030
这个呢

10:30.030 --> 10:31.030
是在给我们的

10:31.030 --> 10:32.030
对象呢

10:32.030 --> 10:35.030
身上去扩展这个方法

10:35.030 --> 10:36.030
行

10:36.030 --> 10:37.030
那这样的话

10:37.030 --> 10:38.030
我们现在已经知道

10:38.030 --> 10:39.030
这个扩展方法了

10:39.030 --> 10:40.030
那接下来呢

10:40.030 --> 10:41.030
咱们要回到正题

10:41.030 --> 10:43.030
怎么去写一个插件

10:43.030 --> 10:44.030
怎么去写呢

10:44.030 --> 10:45.030
那其实就是

10:45.030 --> 10:48.030
用这两个方法去扩展

10:48.030 --> 10:49.030
懂吗

10:49.030 --> 10:50.030
你看我们扩展完之后呢

10:50.030 --> 10:51.030
他称之color

10:51.030 --> 10:52.030
是不是跟我们这儿呢

10:52.030 --> 10:53.030
是一模一样呀

10:53.030 --> 10:54.030
啊

10:54.030 --> 10:55.030
绝对是一模一样的

10:55.030 --> 10:56.030
啊

10:56.030 --> 10:57.030
只不过就是说啊

10:57.030 --> 10:58.030
我们的这个插件呢

10:58.030 --> 10:59.030
一般啊

10:59.030 --> 11:00.030
这个插件呢

11:00.030 --> 11:01.030
都会给谁扩展

11:01.030 --> 11:02.030
给到我们对象身上

11:02.030 --> 11:03.030
去扩展方法

11:03.030 --> 11:04.030
而并不是说

11:04.030 --> 11:06.030
给我们的这个啊

11:06.030 --> 11:07.030
几块儿的对象

11:07.030 --> 11:08.030
本身去扩展这个方法

11:08.030 --> 11:09.030
明白吧

11:09.030 --> 11:10.030
我们再去使用的时候呢

11:10.030 --> 11:11.030
是你看是

11:11.030 --> 11:12.030
这种形式

11:12.030 --> 11:13.030
这种形式呢

11:13.030 --> 11:14.030
他就是给我们的

11:14.030 --> 11:15.030
到我们对象身上

11:15.030 --> 11:16.030
去扩展一个方法

11:16.030 --> 11:17.030
明白吧

11:17.030 --> 11:18.030
好

11:18.030 --> 11:19.030
然后呢

11:19.030 --> 11:20.030
像这么一个啊

11:20.030 --> 11:21.030
插件

11:21.030 --> 11:22.030
看一下该具体

11:22.030 --> 11:23.030
该如何去写啊

11:23.030 --> 11:25.030
那写这个插件呢

11:25.030 --> 11:26.030
我要写一个

11:26.030 --> 11:28.980
这个

11:28.980 --> 11:29.980
封装一个这个

11:29.980 --> 11:30.980
拖拽

11:30.980 --> 11:31.980
拖拽的啊

11:31.980 --> 11:32.980
插件

11:32.980 --> 11:33.980
拖拽

11:33.980 --> 11:34.980
知道吗

11:34.980 --> 11:35.980
嗯点击一个元素之后呢

11:35.980 --> 11:36.980
让他在页面当中呢

11:36.980 --> 11:37.980
他会跟着你的鼠标

11:37.980 --> 11:38.980
一直在走啊

11:38.980 --> 11:39.980
这个呢

11:39.980 --> 11:40.980
应该在我们的

11:40.980 --> 11:41.980
原生GS当中呢

11:41.980 --> 11:42.980
是有讲过的啊

11:42.980 --> 11:43.980
我们呢

11:43.980 --> 11:44.980
就拿这个功能

11:44.980 --> 11:45.980
咱们去给他

11:45.980 --> 11:46.980
封装成一个插件

11:46.980 --> 11:47.980
看看该如何去用

11:47.980 --> 11:48.980
好不好

11:48.980 --> 11:49.980
那这个插件呢

11:49.980 --> 11:50.980
有上一个DIV

11:50.980 --> 11:51.980
这个DIV呢

11:51.980 --> 11:52.980
给上一个ID

11:52.980 --> 11:53.980
叫box

11:53.980 --> 11:54.980
给他身上呢

11:54.980 --> 11:56.980
去添加一些样式box

11:56.980 --> 11:57.980
嗯比如说

11:57.980 --> 11:58.980
他的一个宽是200像素

11:58.980 --> 11:59.980
然后呢

11:59.980 --> 12:01.980
高呢是一个200像素

12:01.980 --> 12:02.980
然后以及

12:02.980 --> 12:03.980
他的一个background

12:03.980 --> 12:04.980
那是一个绿色

12:04.980 --> 12:05.980
ok

12:05.980 --> 12:06.980
我们看一下啊

12:06.980 --> 12:07.980
来刷新

12:07.980 --> 12:08.980
好吧

12:08.980 --> 12:09.980
这个块啊

12:09.980 --> 12:10.980
这个绿色的块呢

12:10.980 --> 12:11.980
就有了

12:11.980 --> 12:12.980
有了之后呢

12:12.980 --> 12:13.980
接下来我就去扩展一个方法

12:13.980 --> 12:14.980
然后呢

12:14.980 --> 12:15.980
对他进行一个拖拽

12:15.980 --> 12:16.980
好不好

12:16.980 --> 12:17.980
那这个方法呢

12:17.980 --> 12:18.980
是这样了

12:18.980 --> 12:20.980
方法是不是

12:20.980 --> 12:21.980
点点什么呢

12:21.980 --> 12:22.980
就是这两个方法

12:22.980 --> 12:23.980
你用哪个都行啊

12:23.980 --> 12:24.980
啊

12:24.980 --> 12:25.980
我们可以上一个

12:25.980 --> 12:26.980
iPhone点啊

12:26.980 --> 12:27.980
jackable

12:27.980 --> 12:28.980
jackable

12:28.980 --> 12:30.980
A-G-A-B-L-E

12:30.980 --> 12:31.980
jackable

12:31.980 --> 12:32.980
jackable啊

12:32.980 --> 12:33.980
好

12:33.980 --> 12:34.980
等于等于什么呢

12:34.980 --> 12:37.360
等于一个fax

12:37.360 --> 12:38.360
我用这种方法

12:38.360 --> 12:39.360
好不好

12:39.360 --> 12:40.360
第二种这种方法啊

12:40.360 --> 12:41.360
那这样的话

12:41.360 --> 12:42.360
我就拖展了一个方法

12:42.360 --> 12:43.360
是不是

12:43.360 --> 12:44.360
那拖展完这个方法之后呢

12:44.360 --> 12:45.360
接下来我如何去用呢

12:45.360 --> 12:46.360
就是这样去用的

12:46.360 --> 12:47.360
首先

12:47.360 --> 12:49.360
先去取到我们的这个box

12:49.360 --> 12:50.360
取到这个box之后呢

12:50.360 --> 12:51.360
jackable

12:52.360 --> 12:53.360
调这个方法

12:53.360 --> 12:54.360
好

12:54.360 --> 12:55.360
然后这个方法当中呢

12:55.360 --> 12:56.360
他需要去接收一个参数

12:56.360 --> 12:57.360
我就扩展一个参数

12:57.360 --> 12:58.360
好不好

12:58.360 --> 12:59.360
这个参数呢

12:59.360 --> 13:00.360
是什么呢

13:00.360 --> 13:01.360
是limit

13:01.360 --> 13:03.360
等上一个处

13:04.360 --> 13:05.360
啥意思啊

13:05.360 --> 13:06.360
这个拖转呢

13:06.360 --> 13:08.360
他能够限制范围

13:08.360 --> 13:09.360
那就是

13:09.360 --> 13:10.360
是否要限制范围的话

13:10.360 --> 13:12.360
我就使用这个参数

13:12.360 --> 13:13.360
好吧

13:13.360 --> 13:14.360
行

13:14.360 --> 13:16.360
那我们就来简简单单写这么一个插件啊

13:16.360 --> 13:17.360
那这里头呢

13:17.360 --> 13:18.360
你既然有参数了

13:18.360 --> 13:19.360
你在这儿

13:19.360 --> 13:21.360
肯定是需要去接收的

13:22.360 --> 13:23.360
obstance

13:23.360 --> 13:24.360
obstance呢

13:24.360 --> 13:25.360
在这儿呢

13:25.360 --> 13:26.360
我们首先要处理的是啥

13:26.360 --> 13:27.360
处理的就是这个obstance

13:27.360 --> 13:28.360
那这个obstance呢

13:28.360 --> 13:29.360
有一个特征

13:29.360 --> 13:30.360
是啥呢

13:30.360 --> 13:31.360
就是说他有可能他不写

13:32.360 --> 13:33.360
你就像我们这儿啊

13:33.360 --> 13:34.360
就快点插件

13:34.360 --> 13:35.360
他里头的这些参数

13:35.360 --> 13:36.360
我们在第一次的时候呢

13:36.360 --> 13:37.360
是不是没有写

13:38.360 --> 13:39.360
这个full配着

13:39.360 --> 13:40.360
没有写之后呢

13:40.360 --> 13:41.360
效果有没有出现

13:41.360 --> 13:42.360
绝对是出现的

13:42.360 --> 13:43.360
懂吗

13:43.360 --> 13:44.360
但是这个地方你一定要处理

13:44.360 --> 13:45.360
那不处理的话

13:45.360 --> 13:47.360
那他就会抱错了

13:47.360 --> 13:48.360
你这儿

13:48.360 --> 13:49.360
你看啊

13:49.360 --> 13:50.360
这个假设说用户

13:50.360 --> 13:51.360
现在他没有传

13:51.360 --> 13:52.360
没有传

13:52.360 --> 13:53.360
然后呢

13:53.360 --> 13:54.360
这个limit这个参数呢

13:54.360 --> 13:55.360
我们在这里头

13:55.360 --> 13:56.360
你去用了

13:56.360 --> 13:57.360
用了之后呢

13:57.360 --> 13:58.360
会抱错吗

13:58.360 --> 13:59.360
必然会抱错

13:59.360 --> 14:00.360
所以说呢

14:00.360 --> 14:01.360
在这儿第一步就是啥

14:01.360 --> 14:02.360
我们先来说一下

14:02.360 --> 14:03.360
这个obstance

14:03.360 --> 14:04.360
处理一下他

14:04.360 --> 14:05.360
obstance呢

14:05.360 --> 14:06.360
怎么去处理呢

14:06.360 --> 14:07.360
他等于

14:07.360 --> 14:08.360
等于这个

14:08.360 --> 14:09.360
或者一个空对象

14:10.360 --> 14:11.360
其实这个方式呢

14:11.360 --> 14:12.360
大家应该都懂

14:12.360 --> 14:13.360
是吧

14:13.360 --> 14:14.360
我们在原生起S面向

14:14.360 --> 14:15.360
对象那一块了

14:15.360 --> 14:16.360
封装那个组件的时候

14:16.360 --> 14:17.360
好

14:17.360 --> 14:18.360
那这句话比较啥意思啊

14:18.360 --> 14:19.360
用户如果传的话

14:19.360 --> 14:20.360
那ok

14:20.360 --> 14:22.360
他返回的就是obstance

14:22.360 --> 14:23.360
如果用户没有反

14:23.360 --> 14:24.360
没有没有传

14:24.360 --> 14:25.360
那ok

14:25.360 --> 14:26.360
他返回的就是一个空对象

14:26.360 --> 14:27.360
就是利用了

14:27.360 --> 14:29.360
我们的这个逻辑运算服务

14:29.360 --> 14:30.360
那么好

14:30.360 --> 14:31.360
行

14:31.360 --> 14:32.360
然后呢

14:32.360 --> 14:33.360
继续啊

14:33.360 --> 14:34.360
这样的话就保证他不会出错

14:34.360 --> 14:35.360
然后呢

14:35.360 --> 14:36.360
第二个呢

14:36.360 --> 14:37.360
还有一个问题

14:37.360 --> 14:38.360
什么问题呢

14:38.360 --> 14:39.360
你看啊

14:39.360 --> 14:40.360
我们在上节课说这个full page

14:40.360 --> 14:41.360
他的这个参数

14:41.360 --> 14:42.360
我们来这儿看啊

14:42.360 --> 14:43.360
他的这个参数呢

14:43.360 --> 14:44.360
是超级多的

14:44.360 --> 14:45.360
你看有这么多

14:45.360 --> 14:46.360
我们在这呢

14:46.360 --> 14:48.360
才仅仅写了一二三四五

14:48.360 --> 14:49.360
五个

14:49.360 --> 14:50.360
那剩下那些插件

14:50.360 --> 14:53.360
不剩下这些参数没有写啊

14:53.360 --> 14:54.360
那他会不会报错呢

14:54.360 --> 14:56.360
他肯定会报错呀

14:56.360 --> 14:57.360
你比如说啊

14:57.360 --> 14:58.360
假设

14:58.360 --> 14:59.360
当然咱们在这仅仅只有一个

14:59.360 --> 15:00.360
只有一个了

15:00.360 --> 15:03.360
就是那个limit

15:03.360 --> 15:05.360
这个东西

15:05.360 --> 15:06.360
就一个是吧

15:06.360 --> 15:07.360
那

15:07.360 --> 15:08.360
嗯

15:08.360 --> 15:09.360
只有一个的话

15:09.360 --> 15:10.360
他不会存在这个问题

15:10.360 --> 15:11.360
那如果说这个参数要多的话

15:11.360 --> 15:12.360
就会存在这个问题

15:12.360 --> 15:13.360
假设说

15:13.360 --> 15:14.360
这里头有一个abc

15:14.360 --> 15:15.360
是不是啊

15:15.360 --> 15:16.360
那好

15:16.360 --> 15:17.360
那现在这个abc用户压根就没有传

15:17.360 --> 15:18.360
没有传

15:18.360 --> 15:19.360
但是呢

15:19.360 --> 15:20.360
我在这呢

15:20.360 --> 15:22.360
要去用这个options.abc

15:22.360 --> 15:23.360
那没有传的话

15:23.360 --> 15:24.360
是不是安定的呀

15:24.360 --> 15:25.360
对吧

15:25.360 --> 15:26.360
所以说呢

15:26.360 --> 15:28.360
这个地方咱也简单的去处理一下

15:28.360 --> 15:29.360
怎么去处理呢

15:29.360 --> 15:32.360
就是options.limit

15:32.360 --> 15:33.360
这个东西呢

15:33.360 --> 15:34.360
他等于什么呢

15:34.360 --> 15:37.360
options.limit

15:37.360 --> 15:38.360
或者啊

15:38.360 --> 15:39.360
或者什么呢

15:39.360 --> 15:40.360
或者一个false

15:40.360 --> 15:41.360
就行了

15:41.360 --> 15:43.360
因为这个参数呢

15:43.360 --> 15:44.360
就是一个true跟false

15:44.360 --> 15:45.360
所以说啊

15:45.360 --> 15:46.360
如果说用户没有传的话

15:46.360 --> 15:48.360
我让他的值就是一个false

15:48.360 --> 15:49.360
动吗

15:49.360 --> 15:50.360
好

15:50.360 --> 15:51.360
这个呢

15:51.360 --> 15:53.360
就是我们处理了一下这个参数啊

15:53.360 --> 15:55.360
好处理完这个参数之后呢

15:55.360 --> 15:56.360
那接下来

15:56.360 --> 15:57.360
我们要做的第一件事情呢

15:57.360 --> 16:07.920
去修改修改修改修改什么呢

16:07.920 --> 16:09.920
修改这个元素

16:09.920 --> 16:10.920
动物元素吧

16:10.920 --> 16:14.920
动物元素的样式

16:14.920 --> 16:15.920
为啥呢

16:15.920 --> 16:17.920
因为我们的拖拽拖拽

16:17.920 --> 16:18.920
他走的时候呢

16:18.920 --> 16:20.920
是需要去改他的life的值跟top的值

16:20.920 --> 16:22.920
所以他需要用到定位知道吗

16:22.920 --> 16:23.920
但是呢

16:23.920 --> 16:24.920
我们在这儿为了简单

16:24.920 --> 16:26.920
就是为了用户简单

16:26.920 --> 16:27.920
你知道吗

16:27.920 --> 16:29.920
用户呢你简简单单就给我一个

16:29.920 --> 16:31.920
给我一个div就行了

16:31.920 --> 16:32.920
然后呢

16:32.920 --> 16:33.920
这个样式当然宽高这些

16:33.920 --> 16:34.920
你就自己传

16:34.920 --> 16:35.920
传完之后呢

16:35.920 --> 16:37.920
我就把你变成一个定位

16:37.920 --> 16:38.920
那么所以说呢

16:38.920 --> 16:39.920
在这呢

16:39.920 --> 16:40.920
我们要用到这个

16:40.920 --> 16:43.920
给这个元素修改成一个定位

16:43.920 --> 16:45.920
那怎么去修改呢

16:45.920 --> 16:46.920
修改元素

16:46.920 --> 16:47.920
现在啊

16:47.920 --> 16:48.920
是不是

16:48.920 --> 16:51.810
dolof

16:51.810 --> 16:52.810
this

16:52.810 --> 16:56.400
dolof

16:56.400 --> 16:57.400
this

16:57.400 --> 16:58.400
好这个呢

16:58.400 --> 16:59.400
是不是刚才咱们已经说了

16:59.400 --> 17:01.400
this就指向我们使用的

17:01.400 --> 17:02.400
那个到我们对象

17:02.400 --> 17:03.400
那现在是不是指向他呀

17:03.400 --> 17:05.400
好指向他之后呢

17:05.400 --> 17:06.400
设置他的样式

17:06.400 --> 17:07.400
那是不是非常的简单啊

17:07.400 --> 17:08.400
set set

17:08.400 --> 17:12.930
来precision

17:12.930 --> 17:14.930
s o l u t absolute

17:14.930 --> 17:15.930
是吧

17:15.930 --> 17:16.930
绝对定位

17:16.930 --> 17:17.930
然后呢

17:17.930 --> 17:18.930
默认值left

17:18.930 --> 17:19.930
给上一个0

17:19.930 --> 17:21.930
然后再来就是一个top

17:21.930 --> 17:22.930
也给上一个0

17:22.930 --> 17:23.930
都为0

17:23.930 --> 17:24.930
然后还有另外一个呢

17:24.930 --> 17:26.930
就是鼠标的手的形状

17:26.930 --> 17:28.930
cursor

17:28.930 --> 17:29.930
这个值呢

17:29.930 --> 17:30.930
给上一个move就行了

17:30.930 --> 17:31.930
给完之后呢

17:31.930 --> 17:32.930
我们这

17:32.930 --> 17:33.930
是不是已经调了

17:33.930 --> 17:34.930
调了之后呢

17:34.930 --> 17:35.930
其实我们能够直接看到效果的

17:35.930 --> 17:36.930
来这刷新走着

17:36.930 --> 17:37.930
看到没

17:37.930 --> 17:39.930
他是不是已经变成一个定位了

17:39.930 --> 17:41.930
跑到最上边去了

17:41.930 --> 17:42.930
然后鼠标放上去

17:42.930 --> 17:44.930
是不是就是一个move的一个状态啊

17:44.930 --> 17:45.930
好行

17:45.930 --> 17:46.930
那第一步呢

17:46.930 --> 17:47.930
就算是已经妥了

17:47.930 --> 17:48.930
其实这个插件呢

17:48.930 --> 17:50.930
封装起来也是非常简单的

17:50.930 --> 17:51.930
我们仅仅是借助了

17:51.930 --> 17:53.930
方法把我们的这些功能呢

17:53.930 --> 17:54.930
丢到这个方法之内

17:54.930 --> 17:55.930
就ok了

17:55.930 --> 17:56.930
知道吧

17:56.930 --> 17:57.930
所以其实没什么可说的

17:57.930 --> 17:58.930
仅仅就是一个方法

17:58.930 --> 17:59.930
里头呢

17:59.930 --> 18:01.930
就是你实现这个功能的本身了

18:01.930 --> 18:02.930
但是呢

18:02.930 --> 18:04.930
就是要记住这个参数

18:04.930 --> 18:05.930
跟z 对象这两个

18:05.930 --> 18:07.930
特别要注意一下

18:07.930 --> 18:08.930
好吧

18:08.930 --> 18:09.930
剩下的就是

18:09.930 --> 18:10.930
我们要说一下

18:10.930 --> 18:11.930
这个拖拽的本身了啊

18:11.930 --> 18:13.930
那这个拖拽的本身呢

18:13.930 --> 18:15.930
他呢需要用到试剑是不是

18:15.930 --> 18:16.930
那就是一个到了福

18:16.930 --> 18:17.930
那这个试剑呢

18:17.930 --> 18:19.930
是在他按下的时候

18:19.930 --> 18:20.930
谁啊

18:20.930 --> 18:21.930
一个z

18:21.930 --> 18:22.930
按下的时候呢

18:22.930 --> 18:23.930
就是一个moss

18:23.930 --> 18:25.930
当这个方法

18:25.930 --> 18:27.930
我们掉一下这个函数

18:27.930 --> 18:28.930
然后按下的时候呢

18:28.930 --> 18:29.930
肯定是需要

18:29.930 --> 18:30.930
用到试剑对象

18:30.930 --> 18:31.930
那就是一微了啊

18:31.930 --> 18:32.930
在按下的时候呢

18:32.930 --> 18:34.930
其实我们要做的事情是啥呢

18:34.930 --> 18:35.930
去记录一下

18:35.930 --> 18:37.930
按下的那个点

18:37.930 --> 18:39.930
就是鼠标跟我们的这个方块

18:39.930 --> 18:40.930
左边

18:40.930 --> 18:42.930
他之间的这个距离

18:42.930 --> 18:43.930
知道这个距离之后呢

18:43.930 --> 18:45.930
在一拖动的时候呢

18:45.930 --> 18:46.930
你看鼠标走了多远

18:46.930 --> 18:47.930
减去这个距离

18:47.930 --> 18:49.930
是不是就是鼠标走了多远啊

18:49.930 --> 18:50.930
好来这个距离呢

18:50.930 --> 18:51.930
怎么去算呢

18:51.930 --> 18:52.930
我们生命一个变量

18:52.930 --> 18:55.930
总共有两个this x

18:55.930 --> 18:57.930
this x

18:57.930 --> 18:58.930
等于什么呢

18:58.930 --> 18:59.930
就是x中呢

18:59.930 --> 19:01.930
按下的时候那个点

19:01.930 --> 19:02.930
跟谁啊

19:02.930 --> 19:03.930
跟我们的左边

19:03.930 --> 19:04.930
我们呢

19:04.930 --> 19:05.930
这个盒子的左边

19:05.930 --> 19:06.930
这条边之间的一个距离

19:06.930 --> 19:07.930
这个距离呢

19:07.930 --> 19:08.930
怎么去算呢

19:08.930 --> 19:09.930
就是

19:09.930 --> 19:10.930
按下那个距离

19:10.930 --> 19:11.930
ev的ev的什么呢

19:11.930 --> 19:12.930
page

19:12.930 --> 19:13.930
pagex

19:13.930 --> 19:14.930
还记不记

19:14.930 --> 19:15.930
我们试剑对象

19:15.930 --> 19:16.930
讲试剑的那个地方

19:16.930 --> 19:17.930
说过

19:17.930 --> 19:18.930
这块当中呢

19:19.930 --> 19:20.930
拿这个东西呢

19:20.930 --> 19:21.930
我去剪去

19:21.930 --> 19:22.930
剪去什么呢

19:22.930 --> 19:23.930
剪去什么呢

19:23.930 --> 19:24.930
怎么算

19:24.930 --> 19:25.930
这个按下这个点

19:25.930 --> 19:26.930
跟左边

19:26.930 --> 19:27.930
这条边的一个距离啊

19:27.930 --> 19:28.930
是不是按下这个点

19:28.930 --> 19:29.930
离左边的一个距离

19:29.930 --> 19:30.930
剪去

19:30.930 --> 19:31.930
这条边离左边的

19:31.930 --> 19:32.930
一个距离

19:32.930 --> 19:33.930
假设说盒子在这

19:33.930 --> 19:34.930
那这条边离左边的

19:34.930 --> 19:35.930
一个距离

19:35.930 --> 19:36.930
怎么去算呢

19:36.930 --> 19:37.930
那条边

19:37.930 --> 19:38.930
那条边啊

19:38.930 --> 19:39.930
是不是this对象

19:39.930 --> 19:40.930
他的那条life

19:40.930 --> 19:42.930
那是不是offside

19:44.930 --> 19:46.930
这个方法

19:46.930 --> 19:47.930
这个方法

19:47.930 --> 19:48.930
哎

19:48.930 --> 19:50.930
他有一个life

19:50.930 --> 19:51.930
这个属性

19:51.930 --> 19:52.930
我们讲到那时候

19:52.930 --> 19:53.930
说过啊

19:53.930 --> 19:55.930
这个方法是不是用来取

19:55.930 --> 19:57.930
他离有定位那个元素

19:57.930 --> 19:58.930
他的一个距离啊

19:58.930 --> 19:59.930
好

19:59.930 --> 20:00.930
来然后呢

20:00.930 --> 20:01.930
这外是不是改一下

20:01.930 --> 20:02.930
这是外

20:02.930 --> 20:03.930
这也要改一下

20:04.930 --> 20:05.930
这是外

20:05.930 --> 20:06.930
然后这呢

20:06.930 --> 20:07.930
要改成一个top

20:07.930 --> 20:08.930
是不是就行了

20:09.930 --> 20:10.930
好

20:10.930 --> 20:11.930
这是记录了

20:11.930 --> 20:12.930
两个点

20:12.930 --> 20:13.930
这两个点

20:13.930 --> 20:14.930
就是一个距离

20:14.930 --> 20:15.930
什么距离呢

20:15.930 --> 20:16.930
就是我按下这个盒子的时候呢

20:16.930 --> 20:17.930
我的按下的这个点

20:17.930 --> 20:19.930
跟我们盒子的左边

20:19.930 --> 20:20.930
以及跟上边

20:20.930 --> 20:21.930
他的一个距离

20:21.930 --> 20:22.930
有了这个距离之后呢

20:22.930 --> 20:24.930
那接下来就开始移动了

20:24.930 --> 20:25.930
那注意啊

20:25.930 --> 20:26.930
这个时候要移动

20:26.930 --> 20:27.930
是谁移动啊

20:27.930 --> 20:28.930
啊

20:28.930 --> 20:29.930
我们为了这个

20:29.930 --> 20:30.930
严谨

20:30.930 --> 20:31.930
所以说这个拖拽呢

20:31.930 --> 20:32.930
移动是document

20:32.930 --> 20:34.930
在我们的可视区之内移动啊

20:34.930 --> 20:35.930
移动

20:35.930 --> 20:36.930
那就是document

20:36.930 --> 20:37.930
他点moss

20:37.930 --> 20:38.930
move

20:38.930 --> 20:39.930
这个方法啊

20:39.930 --> 20:40.930
我们要调一下

20:40.930 --> 20:41.930
这个方法

20:41.930 --> 20:42.930
传上一个餐

20:42.930 --> 20:43.930
在移动的时候呢

20:43.930 --> 20:44.930
肯定是需要用到

20:44.930 --> 20:45.930
时间对象的

20:45.930 --> 20:47.930
需要去知道他移动的一个位置

20:47.930 --> 20:48.930
是不是好

20:48.930 --> 20:49.930
然后呢

20:49.930 --> 20:50.930
这块我们就能够求出来

20:50.930 --> 20:52.930
现在盒子要走到哪了

20:52.930 --> 20:53.930
盒子要走到哪

20:53.930 --> 20:54.930
总共有两个

20:54.930 --> 20:55.930
一个left

20:55.930 --> 20:56.930
一个top

20:56.930 --> 20:58.930
我们就给上l跟t来表示他

20:58.930 --> 21:00.930
然后这个值等于什么呢

21:00.930 --> 21:02.930
盒子走动的那个距离怎么去走呢

21:02.930 --> 21:03.930
就是

21:03.930 --> 21:05.930
现在我鼠标移动的一个距离

21:05.930 --> 21:06.930
配置x

21:06.930 --> 21:07.930
然后呢

21:07.930 --> 21:08.930
这个距离呢干嘛

21:08.930 --> 21:09.930
我简去刚才

21:09.930 --> 21:10.930
现在呢

21:10.930 --> 21:11.930
你按下鼠标点

21:11.930 --> 21:14.930
跟我们边的那个距离

21:14.930 --> 21:16.930
来你看比如说

21:16.930 --> 21:17.930
按下在这了

21:17.930 --> 21:18.930
然后呢挪到这了

21:18.930 --> 21:19.930
挪到这是不是说

21:19.930 --> 21:21.930
他原来这个距离

21:21.930 --> 21:22.930
我们鼠标挪到这了

21:22.930 --> 21:24.930
是不是你看啊

21:24.930 --> 21:26.930
那这当然我这画不了画啊

21:26.930 --> 21:28.930
画不了图啊挪到这了

21:28.930 --> 21:29.930
是不是说我现在呢

21:29.930 --> 21:30.930
按下这个点

21:30.930 --> 21:32.930
假设说我按下的是中心点

21:32.930 --> 21:33.930
那是不是说按下中心点

21:33.930 --> 21:35.930
然后呢我鼠标挪到这呢

21:35.930 --> 21:36.930
是不是方块的中心点

21:36.930 --> 21:38.930
应该是在我鼠标的这个地方

21:38.930 --> 21:40.930
方块的中心点这个位置啊

21:40.930 --> 21:41.930
那怎么算啊

21:41.930 --> 21:43.930
是不是说鼠标这个点

21:43.930 --> 21:44.930
然后呢离左边的一个距离

21:44.930 --> 21:45.930
简去什么呢

21:45.930 --> 21:46.930
鼠标看

21:46.930 --> 21:47.930
刚刚开始

21:47.930 --> 21:48.930
按下的时候呢

21:48.930 --> 21:49.930
离我啊

21:49.930 --> 21:51.930
和字左边的这个距离

21:51.930 --> 21:52.930
能理解吧

21:52.930 --> 21:54.930
好这个拖拽啊

21:54.930 --> 21:56.930
拖拽

21:56.930 --> 21:58.930
算咱简单画一张图吧

21:58.930 --> 22:01.930
怕有一些同学忘掉啊

22:01.930 --> 22:05.430
来你看啊

22:05.430 --> 22:06.430
这个是吧

22:06.430 --> 22:08.430
然后假设说我按的时候呢

22:08.430 --> 22:11.430
鼠标是在这按住了

22:11.430 --> 22:13.430
换一个颜色

22:13.430 --> 22:14.430
用一个语言吧

22:14.430 --> 22:16.430
假设说按的时候呢是在这是吧

22:16.430 --> 22:18.430
然后呢接下来我挪到哪了

22:18.430 --> 22:20.430
挪到

22:20.430 --> 22:22.430
挪到了这个地方了啊

22:22.430 --> 22:23.430
横着平行吧

22:23.430 --> 22:25.430
要不然咱就不增加难度了

22:25.430 --> 22:26.430
挪到这了

22:26.430 --> 22:27.430
挪到这之后呢

22:27.430 --> 22:28.430
是不是说你有鼠标在这呢

22:28.430 --> 22:30.430
你不能说挪到这之后呢

22:30.430 --> 22:32.430
鼠标跟我们的位置

22:32.430 --> 22:33.430
它鼠标点在哪里呢

22:33.430 --> 22:35.430
在我们的盒子的左边

22:35.430 --> 22:36.430
这就不对了

22:36.430 --> 22:38.430
是不是那这段距离怎么去求呢

22:38.430 --> 22:41.430
其实是不是又求的就是这段距离啊

22:41.430 --> 22:42.430
换一个颜色

22:44.870 --> 22:46.870
求的不就是这段距离

22:46.870 --> 22:47.870
对吧

22:47.870 --> 22:48.870
这段距离啊

22:48.870 --> 22:49.870
但这段距离呢

22:49.870 --> 22:50.870
有一个特征就是

22:50.870 --> 22:51.870
我们的鼠标点

22:51.870 --> 22:52.870
跟我们盒子之间呢

22:52.870 --> 22:53.870
它是有一段距离的

22:53.870 --> 22:55.870
那这段距离怎么去求呢

22:55.870 --> 22:57.870
就是在按下的时候呢

22:57.870 --> 22:58.870
我们是这么去求的

22:58.870 --> 22:59.870
然后按下这个点

22:59.870 --> 23:01.870
它是不是离左边的距离

23:01.870 --> 23:02.870
然后以及呢

23:02.870 --> 23:03.870
我们盒子这个点

23:03.870 --> 23:04.870
离左边的一个距离

23:04.870 --> 23:05.870
算出来的是什么

23:05.870 --> 23:07.870
算出来的是这个距离

23:07.870 --> 23:08.870
对吧

23:08.870 --> 23:10.870
也就是点跟它之间的一个距离

23:10.870 --> 23:11.870
其实在这呢

23:11.870 --> 23:12.870
算出来的是

23:12.870 --> 23:13.870
是不是这个距离啊

23:13.870 --> 23:14.870
就是这个距离啊

23:14.870 --> 23:15.870
好

23:15.870 --> 23:16.870
算出来这个距离了

23:16.870 --> 23:17.870
算出来这个距离之后呢

23:17.870 --> 23:18.870
现在从这儿

23:18.870 --> 23:19.870
托动到这儿了

23:19.870 --> 23:20.870
那怎么去算这个距离呢

23:20.870 --> 23:21.870
那我们就可以拿

23:21.870 --> 23:22.870
拿什么呢

23:22.870 --> 23:23.870
拿这个这个显啊

23:23.870 --> 23:24.870
来上一个

23:24.870 --> 23:25.870
蓝色的吧

23:25.870 --> 23:26.870
好

23:26.870 --> 23:27.870
拿这个点

23:27.870 --> 23:28.870
现在呢

23:28.870 --> 23:29.870
它离哪呢

23:29.870 --> 23:30.870
离可视区

23:30.870 --> 23:32.870
可以左边的一个距离

23:32.870 --> 23:33.870
减去什么呢

23:33.870 --> 23:35.870
减去我们这段距离

23:35.870 --> 23:36.870
减去的是啥

23:36.870 --> 23:37.870
减去的就是

23:37.870 --> 23:39.870
现在刚才你的这段距离

23:39.870 --> 23:40.870
那是不是就是

23:40.870 --> 23:41.870
这条边离

23:41.870 --> 23:43.870
这儿的这个距离啊

23:43.870 --> 23:44.870
好

23:44.870 --> 23:45.870
这个呢就是一个拖拽啊

23:45.870 --> 23:46.870
行简简简单单说了一下啊

23:46.870 --> 23:47.870
所以说呢

23:47.870 --> 23:48.870
你看moss over的时候呢

23:48.870 --> 23:49.870
就是moss move的时候呢

23:49.870 --> 23:50.870
就是拿鼠标的点

23:50.870 --> 23:51.870
减去刚才咱们计算的

23:51.870 --> 23:53.870
这个差值就OK了啊

23:53.870 --> 23:54.870
来继续啊

23:54.870 --> 23:55.870
这是l

23:55.870 --> 23:57.870
那同样道理t也是一样的

23:57.870 --> 24:00.380
ev的配置

24:00.380 --> 24:01.380
配置什么

24:01.380 --> 24:02.380
配置y

24:02.380 --> 24:04.380
再减去this y

24:04.380 --> 24:05.380
好

24:05.380 --> 24:06.380
这样的话

24:06.380 --> 24:07.380
其实这两个距离呢

24:07.380 --> 24:10.380
就是我们拖拽的这么一个距离了啊

24:10.380 --> 24:11.380
那这两个距离有了之后呢

24:11.380 --> 24:12.380
接下来就给他复职呗

24:12.380 --> 24:13.380
复谁啊

24:13.380 --> 24:14.380
复给我们的这个box

24:14.380 --> 24:15.380
其实这个box在这儿呢

24:15.380 --> 24:16.380
我们怎么给啊

24:16.380 --> 24:18.380
很多同学可能直接就上手

24:18.380 --> 24:19.380
就是一个z

24:19.380 --> 24:20.380
啊注意啊在这儿呢

24:20.380 --> 24:21.380
你可千万不要用这个z

24:21.380 --> 24:22.380
为什么

24:22.380 --> 24:23.380
因为这个z对象呢

24:23.380 --> 24:24.380
在这儿呢

24:24.380 --> 24:25.380
他并不是

24:25.380 --> 24:27.380
并不是这里的这个z对象了

24:27.380 --> 24:28.380
并不是这个地方的z对象了

24:28.380 --> 24:29.380
而是谁啊

24:29.380 --> 24:30.380
而是document

24:30.380 --> 24:31.380
因为你看

24:31.380 --> 24:33.380
函数作用域已经不一样了

24:33.380 --> 24:34.380
懂吗

24:34.380 --> 24:35.380
你在这儿想要用到

24:35.380 --> 24:36.380
这个z对象的话

24:36.380 --> 24:37.380
怎么办

24:37.380 --> 24:38.380
我们可以在这生命一个大的z

24:38.380 --> 24:39.380
等于什么呢

24:39.380 --> 24:40.380
等于这个document

24:40.380 --> 24:41.380
这个z

24:42.380 --> 24:43.380
我在这儿呢

24:43.380 --> 24:44.380
这个document

24:44.380 --> 24:45.380
绝对是指向什么呢

24:45.380 --> 24:46.380
指向现在这个box

24:46.380 --> 24:47.380
所以说

24:47.380 --> 24:48.380
我在这儿存一下

24:48.380 --> 24:49.380
存完之后呢

24:49.380 --> 24:50.380
在这儿用这个大的z

24:50.380 --> 24:51.380
然后呢

24:51.380 --> 24:52.380
设置他的位置信息

24:52.380 --> 24:53.380
那不就是设置样是吗

24:53.380 --> 24:54.380
syss

24:54.380 --> 24:56.380
啊然后lived呢

24:56.380 --> 24:57.380
他的值就是一个l

24:57.380 --> 24:59.380
然后top的值就是一个t

25:00.380 --> 25:01.380
好

25:01.380 --> 25:02.380
给完之后呢

25:02.380 --> 25:03.380
咱们再来看一下

25:03.380 --> 25:04.380
其实现在已经有效果了

25:04.380 --> 25:05.380
打开一面

25:05.380 --> 25:06.380
在这儿刷新

25:06.380 --> 25:07.380
来走

25:07.380 --> 25:08.380
你看他是不是

25:08.380 --> 25:09.380
我再走了

25:09.380 --> 25:10.380
但是呢

25:10.380 --> 25:11.380
现在你看我鼠标松开了

25:11.380 --> 25:12.380
注意啊

25:12.380 --> 25:13.380
我现在已经松开了

25:13.380 --> 25:14.380
你们看不到

25:14.380 --> 25:15.380
是不是我告诉你们

25:15.380 --> 25:16.380
已经松开了

25:16.380 --> 25:17.380
但是呢

25:17.380 --> 25:18.380
现在他依然是跟着我鼠标走的

25:18.380 --> 25:19.380
是因为我们现在

25:19.380 --> 25:21.380
还缺了另外一个事件

25:21.380 --> 25:22.380
那个事件呢

25:22.380 --> 25:23.380
咱需要去处理一下

25:23.380 --> 25:24.380
什么事件呢

25:24.380 --> 25:26.380
鼠标抬起的那个事件啊

25:26.380 --> 25:27.380
那抬起

25:27.380 --> 25:28.380
谁抬起呢

25:28.380 --> 25:29.380
其实就是我们的document

25:29.380 --> 25:30.380
他呢

25:30.380 --> 25:31.380
抬起

25:31.380 --> 25:33.380
抬起mosup

25:33.380 --> 25:34.380
是吧

25:34.380 --> 25:35.380
好

25:35.380 --> 25:36.380
这个事件

25:36.380 --> 25:37.380
当这个事件发生的时候

25:37.380 --> 25:39.380
我们要把事件处理函数

25:39.380 --> 25:40.380
给他干掉

25:40.380 --> 25:42.380
事件处理函数干掉的话

25:42.380 --> 25:44.380
是不是就说解除事件呀

25:44.380 --> 25:46.380
怎么解除事件呢

25:46.380 --> 25:47.380
到了福

25:47.380 --> 25:49.380
这时候可以用这次

25:49.380 --> 25:51.380
点off吧

25:51.380 --> 25:53.380
回顾一下事件那张

25:53.380 --> 25:54.380
咱讲的啊

25:54.380 --> 25:55.380
完之后呢

25:55.380 --> 25:56.380
再来看刷新一下啊

25:56.380 --> 25:57.380
来走

25:57.380 --> 25:58.380
抬起来

25:58.380 --> 25:59.380
这时候呢

25:59.380 --> 26:00.380
你看很听话

26:00.380 --> 26:01.380
再按一下再走

26:01.380 --> 26:02.380
按一下再走

26:02.380 --> 26:03.380
然后当然这个地方

26:03.380 --> 26:04.380
他可能会有一个

26:04.380 --> 26:05.380
有一个小的一个bug

26:05.380 --> 26:06.380
就是

26:06.380 --> 26:07.380
他会出发

26:07.380 --> 26:08.380
我们的这个事件的

26:08.380 --> 26:09.380
默认行为

26:09.380 --> 26:10.380
我们在这呢

26:10.380 --> 26:11.380
给上一个recent false

26:11.380 --> 26:12.380
就行了

26:12.380 --> 26:13.380
有的时候呢

26:13.380 --> 26:14.380
比如说你拖拽一个文字啊

26:14.380 --> 26:15.380
还有拖拽一个图片

26:15.380 --> 26:16.380
这个时候呢

26:16.380 --> 26:17.380
你可能拖住他到时候呢

26:17.380 --> 26:18.380
可能就会有问题啊

26:18.380 --> 26:19.380
有问题啊

26:19.380 --> 26:20.380
行吧

26:20.380 --> 26:21.380
那这个咱们就

26:21.380 --> 26:22.380
就这样

26:22.380 --> 26:23.380
就处理一下

26:23.380 --> 26:24.380
然后其实这个地方呢

26:24.380 --> 26:26.380
我们还有一个mos

26:26.380 --> 26:28.380
他的事件

26:28.380 --> 26:29.380
事件

26:29.380 --> 26:30.380
啊吧

26:30.380 --> 26:31.380
错了

26:31.380 --> 26:32.380
这个这个事件

26:32.380 --> 26:33.380
most

26:33.380 --> 26:34.380
当这个事件去

26:34.380 --> 26:35.380
还有这个mos

26:35.380 --> 26:36.380
嗯

26:36.380 --> 26:37.380
我们在这

26:37.380 --> 26:38.380
off

26:38.380 --> 26:39.380
对着对着

26:39.380 --> 26:40.380
好吧

26:40.380 --> 26:41.380
我想错了

26:41.380 --> 26:42.380
就是这样啊

26:42.380 --> 26:43.380
我记着

26:43.380 --> 26:44.380
还有一个就是

26:44.380 --> 26:46.380
属这个盒子本身的事件

26:46.380 --> 26:47.380
盒子本身好像没有事件

26:47.380 --> 26:48.380
没有事件

26:48.380 --> 26:49.380
那算了吧

26:49.380 --> 26:50.380
那是计差了

26:50.380 --> 26:51.380
计差了

26:51.380 --> 26:53.820
行吧

26:53.820 --> 26:54.820
来这样的话就ok啊

26:54.820 --> 26:55.820
可以

26:55.820 --> 26:56.820
可以

26:56.820 --> 26:57.820
然后呢

26:57.820 --> 26:58.820
接下来

26:58.820 --> 26:59.820
咱们再做

26:59.820 --> 27:00.820
还有另外一个功能

27:00.820 --> 27:01.820
什么功能呢

27:01.820 --> 27:02.820
我们的这个方法

27:02.820 --> 27:03.820
我们的这个参数呢

27:03.820 --> 27:04.820
现在是没有用上

27:04.820 --> 27:05.820
对吧

27:05.820 --> 27:06.820
这个参数呢

27:06.820 --> 27:12.940
如何能够用得上呢

27:12.940 --> 27:13.940
好啊没有问题

27:13.940 --> 27:14.940
看错了啊

27:14.940 --> 27:15.940
好来吧

27:15.940 --> 27:16.940
咱说这个参数啊

27:16.940 --> 27:17.940
那这个参数呢

27:17.940 --> 27:18.940
是啊你看

27:18.940 --> 27:20.940
我在这限制范围

27:20.940 --> 27:23.320
对不对

27:23.320 --> 27:26.340
哎

27:26.340 --> 27:28.970
mos

27:28.970 --> 27:36.030
感觉是稍微有那么一点问题

27:36.030 --> 27:40.240
mos稍稍等一下啊

27:40.240 --> 27:42.240
对这个

27:42.240 --> 27:44.240
元素身上是有一个事件的

27:44.240 --> 27:45.240
没有记错

27:45.240 --> 27:46.240
那就是这个z

27:46.240 --> 27:49.240
那这个z啊

27:49.240 --> 27:50.240
off

27:50.240 --> 27:51.240
再来看一下啊

27:51.240 --> 27:52.240
刷新一下

27:52.240 --> 28:03.260
哎没有没有没有

28:03.260 --> 28:04.260
好吧

28:04.260 --> 28:11.600
好像是有一个问题啊

28:11.600 --> 28:12.600
行吧这个问题呢

28:12.600 --> 28:14.600
哎是是有一点问题

28:14.600 --> 28:15.600
就是在我第四

28:15.600 --> 28:16.600
第二次拖的时候呢

28:16.600 --> 28:18.600
他是没有

28:18.600 --> 28:19.600
我鼠标已经抬起来了

28:19.600 --> 28:20.600
抬起来之后呢

28:20.600 --> 28:21.600
他仍然是跟着我走的

28:21.600 --> 28:24.600
mos up

28:24.600 --> 28:25.600
好这个问题呢

28:25.600 --> 28:27.600
算咱不耽误时间了啊

28:27.600 --> 28:28.600
不耽误时间

28:28.600 --> 28:29.600
然后呢这个一会呢

28:29.600 --> 28:30.600
我把它处理完之后呢

28:30.600 --> 28:32.600
我写上注释给大家就行了

28:32.600 --> 28:33.600
好吧

28:33.600 --> 28:34.600
时间时间很宝贵啊

28:34.600 --> 28:35.600
咱们先来说吧

28:35.600 --> 28:37.600
啊我们先来说这个参数啊

28:37.600 --> 28:38.600
这个参数

28:38.600 --> 28:39.600
那这个参数是这样的

28:39.600 --> 28:40.600
就是

28:40.600 --> 28:42.600
我们要给上一个处的话

28:42.600 --> 28:43.600
那他就是一个限制范围的

28:43.600 --> 28:45.600
这么一个拖拽了

28:45.600 --> 28:47.600
限制范围的这么一个拖拽

28:47.600 --> 28:50.600
嗯算了咱们先不考虑那个了

28:50.600 --> 28:52.600
限制范围的这么一个拖拽

28:52.600 --> 28:53.600
那怎么去给他一个

28:53.600 --> 28:54.600
限制范围的一个拖拽呢

28:54.600 --> 28:56.600
其实我们需要去处理这个l

28:56.600 --> 28:57.600
跟t啊

28:57.600 --> 28:58.600
那关键是

28:58.600 --> 28:59.600
这块呢

28:59.600 --> 29:01.600
我们该如何去处理呢

29:01.600 --> 29:03.600
如何去处理啊

29:03.600 --> 29:05.600
我们可以在这呢

29:05.600 --> 29:07.600
给上一个条件

29:07.600 --> 29:08.600
if

29:08.600 --> 29:09.600
if什么呢

29:09.600 --> 29:11.600
如果说现在用户传了这个餐

29:11.600 --> 29:12.600
那是不是说

29:12.600 --> 29:14.600
options应该去看一下

29:14.600 --> 29:15.600
limit

29:15.600 --> 29:17.600
如果说条件成立

29:17.600 --> 29:19.600
就证明现在用户传了一个处

29:19.600 --> 29:21.600
处的话就需要去限制范围了

29:21.600 --> 29:24.600
在这标一下啊

29:24.600 --> 29:25.600
如果

29:25.600 --> 29:29.600
如果用户传了啊

29:29.600 --> 29:30.600
limit

29:30.600 --> 29:31.600
为处

29:35.130 --> 29:37.130
这个参数

29:37.130 --> 29:40.130
就要处理

29:40.130 --> 29:42.130
拖拽的范围了

29:42.130 --> 29:43.130
好

29:43.130 --> 29:44.130
那所以说呢

29:44.130 --> 29:45.130
我们所有的功能应该在

29:45.130 --> 29:47.130
这个条件成立的时候

29:47.130 --> 29:48.130
我们才去做啊

29:48.130 --> 29:49.130
那这个里头呢

29:49.130 --> 29:50.130
我们如何去限制范围呢

29:50.130 --> 29:51.130
就是一个

29:51.130 --> 29:52.130
还是一个条件判断

29:52.130 --> 29:54.130
那左边就是l

29:54.130 --> 29:56.130
比如说他小于0的时候呢

29:56.130 --> 29:59.130
我让他l等上一个0

29:59.130 --> 30:00.130
等上一个0

30:00.130 --> 30:01.130
那啥意思呢

30:01.130 --> 30:02.130
你看啊

30:02.130 --> 30:03.130
左边我在这拖

30:03.130 --> 30:04.130
是不是

30:04.130 --> 30:05.130
这个时候呢

30:05.130 --> 30:06.130
你看出不去了吧

30:06.130 --> 30:07.130
出不去了

30:07.130 --> 30:08.130
然后呢

30:08.130 --> 30:09.130
右边呢

30:09.130 --> 30:10.130
左边就是l

30:10.130 --> 30:11.130
他小于0

30:11.130 --> 30:12.130
那我就让他等上一个0

30:12.130 --> 30:13.130
就行了

30:13.130 --> 30:14.130
那右边呢

30:14.130 --> 30:17.270
右边lc

30:17.270 --> 30:18.270
lc的

30:18.270 --> 30:21.270
右边他什么时候能出去啊

30:21.270 --> 30:25.270
这个很难受啊

30:25.270 --> 30:26.270
我看一下

30:26.270 --> 30:34.260
off这个方法

30:34.260 --> 30:35.260
来

30:35.260 --> 30:38.570
我记得是没有问题的

30:38.570 --> 30:39.570
果然是有问题啊

30:39.570 --> 30:40.570
这个呢

30:40.570 --> 30:41.570
应该是

30:42.570 --> 30:43.570
在

30:43.570 --> 30:44.570
mossup

30:45.570 --> 30:53.000
moss

30:54.000 --> 30:55.000
move

30:56.000 --> 30:57.000
应该是不需要这么去写的

30:57.000 --> 30:59.000
mossup

31:00.000 --> 31:01.000
再来

31:01.000 --> 31:02.000
再试一下啊

31:02.000 --> 31:03.000
刷新一下

31:05.500 --> 31:06.500
刷新

31:06.500 --> 31:07.500
走

31:07.500 --> 31:08.500
走

31:08.500 --> 31:09.500
还是一样的

31:09.500 --> 31:10.500
算了算了

31:10.500 --> 31:11.500
咱咱不耽误时间

31:11.500 --> 31:12.500
一会我再去调吧

31:12.500 --> 31:23.580
再来再来

31:23.580 --> 31:24.580
最后试一下

31:24.580 --> 31:30.610
托转

31:30.610 --> 31:31.610
来

31:31.610 --> 31:32.610
走

31:32.610 --> 31:33.610
走

31:33.610 --> 31:34.610
走

31:34.610 --> 31:35.610
这次对了

31:35.610 --> 31:36.610
这次对了

31:36.610 --> 31:39.610
他是应该是放在这个方法之内啊

31:39.610 --> 31:40.610
说呢

31:41.610 --> 31:42.610
再来看啊

31:42.610 --> 31:43.610
刷新

31:43.610 --> 31:44.610
走

31:44.610 --> 31:45.610
可以了

31:45.610 --> 31:46.610
可以了

31:46.610 --> 31:47.610
没有问题啊

31:48.610 --> 31:49.610
然后

31:49.610 --> 31:51.610
那这个return false呢

31:51.610 --> 31:52.610
我们应该是放在

31:53.610 --> 31:54.610
放在这个下边

32:04.060 --> 32:05.060
可以了

32:05.060 --> 32:06.060
可以了

32:06.060 --> 32:07.060
好

32:07.060 --> 32:08.060
继续啊

32:08.060 --> 32:10.060
应该是放在这个mossup

32:10.060 --> 32:11.060
下的时候呢

32:11.060 --> 32:12.060
我们再抬起他啊

32:12.060 --> 32:13.060
好

32:13.060 --> 32:14.060
然后呢

32:14.060 --> 32:15.060
这个位置弄错了

32:15.060 --> 32:16.060
然后再来就是说

32:16.060 --> 32:17.060
你看啊

32:17.060 --> 32:18.060
这个是左

32:18.060 --> 32:19.060
左边的范围

32:19.060 --> 32:20.060
我们现在已经限制了

32:20.060 --> 32:21.060
限制了啊

32:21.060 --> 32:22.060
那你看啊

32:22.060 --> 32:23.060
接下来

32:23.060 --> 32:24.060
右边右边的范围

32:24.060 --> 32:25.060
那右边的范围

32:25.060 --> 32:26.060
他应该是到这儿

32:26.060 --> 32:27.060
是不是就不能够出去了

32:27.060 --> 32:28.060
那到这儿

32:28.060 --> 32:29.060
是不是说

32:29.060 --> 32:30.060
也就是这个东西呢

32:30.060 --> 32:31.060
他能够移动的

32:31.060 --> 32:32.060
一个最大的范围

32:32.060 --> 32:33.060
是不是从左边

32:33.060 --> 32:34.060
现在啊目前

32:34.060 --> 32:35.060
从左边到哪里呢

32:35.060 --> 32:37.060
到他的左边的这条边

32:37.060 --> 32:38.060
这是他能够移动的

32:38.060 --> 32:39.060
最大范围

32:39.060 --> 32:40.060
是不是就要出去了

32:41.060 --> 32:42.060
是不是右侧就要出去了

32:42.060 --> 32:43.060
所以说呢

32:43.060 --> 32:44.060
我们就可以把它

32:44.060 --> 32:45.060
限制到这个范围之内

32:45.060 --> 32:46.060
那这个范围

32:46.060 --> 32:47.060
这个范围怎么去求呢

32:47.060 --> 32:48.060
不就是可视区的一个宽

32:48.060 --> 32:50.060
简去我盒子的一个

32:50.060 --> 32:51.060
一个宽吗

32:51.060 --> 32:52.060
就是他的一个

32:52.060 --> 32:53.060
最大的一个活动范围

32:53.060 --> 32:54.060
所以说呢

32:54.060 --> 32:55.060
在这一

32:55.060 --> 32:56.060
if else 的时候呢

32:56.060 --> 32:57.060
else if 的时候呢

32:57.060 --> 32:58.060
我们要判断右边

32:58.060 --> 32:59.060
那就是

32:59.060 --> 33:00.060
如果说

33:00.060 --> 33:01.060
说什么呢

33:01.060 --> 33:02.060
如果说l 这个值

33:02.060 --> 33:03.060
是吧

33:03.060 --> 33:04.060
他这个值

33:04.060 --> 33:05.060
已经超过了

33:05.060 --> 33:06.060
要超过什么呢

33:06.060 --> 33:07.060
超过

33:07.060 --> 33:08.060
我现在一个到了

33:08.060 --> 33:09.060
我要取到可视区

33:09.060 --> 33:11.060
那就是document

33:11.060 --> 33:12.060
他的一个宽

33:12.060 --> 33:13.060
是不是inner width

33:13.060 --> 33:14.060
这个呢

33:14.060 --> 33:15.060
就是我们前面所讲的吧

33:15.060 --> 33:16.060
然后他的宽干嘛

33:16.060 --> 33:18.060
简去我盒子的一个宽

33:18.060 --> 33:19.060
盒子的宽的话

33:19.060 --> 33:20.060
在这呢

33:20.060 --> 33:22.060
是不是一个大的z呀

33:22.060 --> 33:23.060
他的

33:23.060 --> 33:26.060
什么inner width

33:27.060 --> 33:28.060
当然如果

33:28.060 --> 33:29.060
这个地方

33:29.060 --> 33:30.060
我们应该给上一个outer width

33:30.060 --> 33:32.060
如果说人家有边框的话

33:32.060 --> 33:33.060
你应该把这个

33:33.060 --> 33:34.060
这个值给算上

33:34.060 --> 33:35.060
outer width

33:35.060 --> 33:36.060
好吧

33:36.060 --> 33:37.060
行

33:37.060 --> 33:38.060
这个宽

33:38.060 --> 33:40.060
就是我可视区的一个宽

33:40.060 --> 33:42.060
简去我盒子本身的一个宽

33:42.060 --> 33:44.060
剩余的白色的这个区间呢

33:44.060 --> 33:46.060
就是他能够活动的最大范围

33:46.060 --> 33:47.060
但凡他超过这个范围

33:47.060 --> 33:48.060
他就出去了

33:48.060 --> 33:49.060
出积的话

33:49.060 --> 33:50.060
怎么办

33:50.060 --> 33:51.060
我就让他的值

33:51.060 --> 33:52.060
等于这个值

33:52.060 --> 33:53.060
等于

33:53.060 --> 33:55.060
那他就出不去了嘛

33:55.060 --> 33:56.060
再来看

33:56.060 --> 33:57.060
来刷新一下

33:57.060 --> 33:58.060
左边出不去

33:58.060 --> 33:59.060
右边

33:59.060 --> 34:00.060
你看是不是出不去

34:00.060 --> 34:01.060
左右都出不去

34:01.060 --> 34:02.060
那同样的道理

34:02.060 --> 34:03.060
上下呢

34:03.060 --> 34:04.060
是不是一样的道理

34:04.060 --> 34:05.060
我们就复制一下吧

34:06.060 --> 34:08.060
那就是上下的话

34:08.060 --> 34:09.060
我们要处理的是t

34:09.060 --> 34:10.060
如说t小于0

34:10.060 --> 34:12.060
是不是让t等于0

34:12.060 --> 34:15.060
然后如说t大于这个inner

34:15.060 --> 34:16.060
什么hate

34:17.060 --> 34:18.060
然后呢

34:18.060 --> 34:19.060
这呢

34:19.060 --> 34:21.060
嗨嗨嗨嗨

34:21.060 --> 34:22.060
这错了

34:22.060 --> 34:23.060
这应该是wiz

34:24.060 --> 34:25.060
那这个地方

34:25.060 --> 34:26.060
刚好是对的

34:26.060 --> 34:28.060
然后这个hate

34:28.060 --> 34:29.060
我再检查一遍

34:29.060 --> 34:30.060
宽简宽嘛

34:30.060 --> 34:31.060
宽简宽

34:31.060 --> 34:32.060
高简高

34:32.060 --> 34:33.060
高简高

34:33.060 --> 34:34.060
然后这呢

34:34.060 --> 34:35.060
改成一个t

34:36.060 --> 34:37.060
就行了

34:37.060 --> 34:38.060
好

34:38.060 --> 34:39.060
再来看一下

34:39.060 --> 34:40.060
来刷新一下

34:40.060 --> 34:41.060
上下

34:41.060 --> 34:42.060
上边出不去

34:42.060 --> 34:43.060
下边也下不来

34:43.060 --> 34:44.060
好

34:44.060 --> 34:45.060
那这样的话

34:45.060 --> 34:46.060
你看

34:46.060 --> 34:47.060
他是不是被我献死

34:47.060 --> 34:48.060
在这个范围之内了

34:48.060 --> 34:49.060
ok

34:49.060 --> 34:50.060
然后呢

34:50.060 --> 34:51.060
继续

34:51.060 --> 34:52.060
那这样的话

34:52.060 --> 34:53.060
你看我

34:53.060 --> 34:54.060
用户传了这个参数

34:54.060 --> 34:55.060
他的职位

34:55.060 --> 34:56.060
出的时候呢

34:56.060 --> 34:57.060
我们是限制了一个范围

34:57.060 --> 34:58.060
那假设说

34:58.060 --> 35:00.060
用户他没有传这个职

35:00.060 --> 35:01.060
或者说

35:01.060 --> 35:02.060
他传了一个false

35:02.060 --> 35:03.060
那这个false

35:03.060 --> 35:04.060
是不是能出去

35:04.060 --> 35:05.060
四个方向

35:05.060 --> 35:06.060
你都能出去

35:06.060 --> 35:07.060
都能出去

35:07.060 --> 35:08.060
看不见了吧

35:08.060 --> 35:09.060
好

35:09.060 --> 35:10.060
看不见了

35:10.060 --> 35:11.060
然后假设说

35:11.060 --> 35:12.060
我们现在在没有给

35:12.060 --> 35:13.060
参数也没有给

35:13.060 --> 35:14.060
刷新一下

35:14.060 --> 35:15.060
能不能拖拽

35:15.060 --> 35:16.060
绝对是可以拖拽的

35:16.060 --> 35:17.060
ok吧

35:17.060 --> 35:18.060
你看

35:18.060 --> 35:19.060
这样的话

35:19.060 --> 35:20.060
就可以了

35:20.060 --> 35:21.060
我们给上一个出吧

35:22.060 --> 35:23.060
好

35:23.060 --> 35:24.060
这样的话

35:24.060 --> 35:25.060
你看

35:25.060 --> 35:26.060
我们的这个

35:26.060 --> 35:27.060
组件

35:27.060 --> 35:28.060
我们的这个插件

35:28.060 --> 35:29.060
拖拽的这个插件

35:29.060 --> 35:30.060
就已经ok了

35:30.060 --> 35:31.060
你在这呢

35:31.060 --> 35:32.060
有一个div叫box

35:32.060 --> 35:33.060
这个div

35:33.060 --> 35:34.060
这个div呢

35:34.060 --> 35:35.060
比如说

35:35.060 --> 35:36.060
我叫上一个zog

35:36.060 --> 35:37.060
然后这个zog

35:37.060 --> 35:39.570
跟他一样

35:39.570 --> 35:40.570
跟他一样

35:40.570 --> 35:41.570
只不过呢

35:41.570 --> 35:43.940
这个zog

35:43.940 --> 35:44.940
他的颜色不一样

35:45.940 --> 35:47.940
他是一个sky

35:47.940 --> 35:48.940
不

35:48.940 --> 35:49.940
是个天蓝色

35:49.940 --> 35:50.940
我们再来看

35:50.940 --> 35:51.940
来刷新一下

35:51.940 --> 35:52.940
好

35:52.940 --> 35:53.940
这个时候

35:53.940 --> 35:54.940
假设说

35:54.940 --> 35:55.940
他也想要拖拽

35:55.940 --> 35:56.940
怎么办

35:56.940 --> 35:57.940
怎么办

35:57.940 --> 35:58.940
我们在这

35:58.940 --> 35:59.940
再去调一下

35:59.940 --> 36:00.940
不就行了吗

36:00.940 --> 36:01.940
这个呢

36:01.940 --> 36:02.940
是你box的拖拽

36:03.940 --> 36:04.940
我的

36:05.940 --> 36:06.940
zog

36:06.940 --> 36:07.940
他的一个拖拽

36:07.940 --> 36:08.940
然后这个拖拽

36:08.940 --> 36:10.940
我不需要让他限制范围了

36:10.940 --> 36:11.940
随便撒花

36:11.940 --> 36:12.940
就行了

36:12.940 --> 36:13.940
来刷新一下

36:13.940 --> 36:14.940
你看

36:14.940 --> 36:15.940
他走

36:15.940 --> 36:16.940
他也走

36:16.940 --> 36:18.940
他是不是没有范围限制

36:18.940 --> 36:20.940
然后他是有范围限制的

36:20.940 --> 36:21.940
这样的话

36:21.940 --> 36:22.940
你看看

36:22.940 --> 36:23.940
一个拖拽

36:23.940 --> 36:24.940
是不是搞定所有

36:24.940 --> 36:25.940
你就不用

36:25.940 --> 36:26.940
给他写一个

36:26.940 --> 36:27.940
再给他写一个

36:27.940 --> 36:28.940
太麻烦了

36:28.940 --> 36:29.940
这个就是拖拽

36:29.940 --> 36:30.940
我们给的一个

36:30.940 --> 36:31.940
插件

36:31.940 --> 36:32.940
这样的话

36:32.940 --> 36:33.940
我们的插件这块

36:33.940 --> 36:35.940
就算是已经完成了

36:35.940 --> 36:36.940
自定义插件

36:36.940 --> 36:37.940
就算是已经可以了

36:37.940 --> 36:39.940
其实就是一个方法

36:39.940 --> 36:40.940
看到吗

36:40.940 --> 36:41.940
是不是很简单

36:41.940 --> 36:42.940
这里头

36:42.940 --> 36:45.940
还是我们功能的主体部分

36:45.940 --> 36:46.940
你只需要

36:46.940 --> 36:47.940
把它放到这个方法

36:47.940 --> 36:48.940
当中就可以了

36:48.940 --> 36:49.940
所以说

36:49.940 --> 36:50.940
封装一个插件

36:50.940 --> 36:52.940
其实是非常的简单的

36:52.940 --> 36:53.940
在Gquery当中

36:53.940 --> 36:54.940
因为人家把这个方法

36:54.940 --> 36:55.940
给咱们封装的好

36:55.940 --> 36:56.940
知道吗

36:56.940 --> 36:57.940
所以说咱用起来

36:57.940 --> 36:58.940
就特别的简单

36:58.940 --> 36:59.940
好

36:59.940 --> 37:00.940
这样的话

37:00.940 --> 37:01.940
Gquery这块的

37:01.940 --> 37:03.940
所有的API

37:03.940 --> 37:04.940
大体的一些API

37:04.940 --> 37:05.940
就算是已经说完了

37:05.940 --> 37:07.940
咱们简单的去回顾一下

37:07.940 --> 37:08.940
好不好

37:08.940 --> 37:09.940
这个里头就是

37:09.940 --> 37:10.940
我们在左边这个部分

37:10.940 --> 37:12.940
所看到的这些API

37:12.940 --> 37:13.940
基本上都已经讲完了

37:13.940 --> 37:15.940
然后当然会有一些遗漏的

37:15.940 --> 37:17.940
它还不止有这些

37:17.940 --> 37:18.940
它还会有一些

37:18.940 --> 37:20.940
其他的一些方法

37:20.940 --> 37:21.940
那那些方法

37:21.940 --> 37:23.940
其实我并没有去讲

37:23.940 --> 37:25.940
比如说数据操作等等

37:25.940 --> 37:26.940
你看它有data

37:26.940 --> 37:27.940
这个方法

37:27.940 --> 37:28.940
这些我没有去说

37:28.940 --> 37:29.940
没有去说的话

37:29.940 --> 37:30.940
没有关系

37:30.940 --> 37:32.940
咱们学会了看文档

37:32.940 --> 37:33.940
到时候你们自己去点击

37:33.940 --> 37:34.940
进去之后

37:34.940 --> 37:35.940
你看这里头

37:35.940 --> 37:37.940
其实它说的也是挺明白的

37:37.940 --> 37:38.940
而且你看

37:38.940 --> 37:39.940
它还有例子

37:39.940 --> 37:40.940
我们拿这个例子

37:40.940 --> 37:42.940
你可以去试一下

37:42.940 --> 37:43.940
就行了

37:43.940 --> 37:44.940
这些方法其实也是

37:44.940 --> 37:45.940
都是非常的简单的

37:45.940 --> 37:47.940
学会看文档

37:47.940 --> 37:48.940
受人以于

37:48.940 --> 37:50.940
不如受之以于

37:50.940 --> 37:51.940
三点水

37:51.940 --> 37:53.940
前面是没有三点水的

37:53.940 --> 37:54.940
一个动词

37:54.940 --> 37:55.940
一个名词

37:55.940 --> 37:56.940
你们应该都知道

37:56.940 --> 37:57.940
什么意思

37:57.940 --> 37:58.940
是不是

37:58.940 --> 38:00.940
那剩下的这些东西

38:00.940 --> 38:01.940
就是

38:01.940 --> 38:02.940
如果以后

38:02.940 --> 38:03.940
你见到

38:03.940 --> 38:04.940
没有没有

38:04.940 --> 38:06.940
没有听过的一个方法的话

38:06.940 --> 38:07.940
你可以在这去搜索

38:07.940 --> 38:08.940
搜索完之后

38:08.940 --> 38:09.940
它所对应的一些

38:09.940 --> 38:10.940
API的说明

38:10.940 --> 38:11.940
都会出来的

38:11.940 --> 38:12.940
行吧

38:12.940 --> 38:13.940
好那这样的话

38:13.940 --> 38:14.940
我们的Gquery

38:14.940 --> 38:15.940
这块API的这些

38:15.940 --> 38:16.940
课程所有的内容

38:16.940 --> 38:17.940
我们就算是

38:17.940 --> 38:18.940
已经说完了

