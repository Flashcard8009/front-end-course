WEBVTT

00:00.430 --> 00:02.830
moment.js的第四节课

00:02.830 --> 00:05.230
这节课咱们主要去讲解一下

00:05.230 --> 00:08.430
这个查询里边的所有的这些方法

00:08.430 --> 00:11.630
好 那这个查询 什么意思呢

00:11.630 --> 00:14.630
查询其实就是用来查某一个时间点

00:14.630 --> 00:16.030
是否满足条件

00:16.030 --> 00:19.630
换句话说 其实就是用来做判断的

00:19.630 --> 00:22.030
moment.js给咱们提供了

00:22.030 --> 00:24.230
很多很多的一些判断的一些方法

00:24.230 --> 00:26.830
那这些方法其实它主要是用来

00:26.830 --> 00:29.630
辅助于我们去完成一些其他的一些功能

00:29.830 --> 00:32.430
就好比我们原生的.js当中的这些

00:32.430 --> 00:34.230
f条件判断 是不是

00:34.230 --> 00:37.230
比如说判断某一个条件满足的情况下

00:37.230 --> 00:39.230
执行一段代码 是吧

00:39.230 --> 00:40.930
那只有当你满足的时候

00:40.930 --> 00:42.830
这个代码才能够执行

00:42.830 --> 00:44.630
所以就是用来做判断的

00:44.630 --> 00:46.530
然后这个查询当中所提供了

00:46.530 --> 00:48.930
很多很多的一些判断的方法

00:48.930 --> 00:50.230
我们举几个例子

00:50.230 --> 00:53.530
比如说我可以拿上拿到一个时间点

00:53.530 --> 00:55.430
然后我去拿这个时间点

00:55.430 --> 00:58.230
跟另外一个时间点进行一个做对比

00:58.230 --> 01:00.230
那我就可以判断出

01:00.230 --> 01:02.630
我可以去查询到这个时间点是否

01:02.630 --> 01:05.030
在另外一个时间点之前

01:05.030 --> 01:08.030
以及我也可以查出这个时间点是否

01:08.030 --> 01:10.230
在另外一个时间点之后

01:10.230 --> 01:13.230
甚至我还可以查出某一个时间点

01:13.230 --> 01:17.230
是否在两个时间点的之间

01:17.230 --> 01:19.230
这些其实像这个功能

01:19.230 --> 01:22.130
我们去做那些联动的一些日历

01:22.130 --> 01:25.130
比如说我左边一个框选一个日历

01:25.130 --> 01:27.930
另外右边又有一个框

01:27.930 --> 01:29.230
再选一个日历是不是

01:29.230 --> 01:32.430
然后它俩是不是形成了两个时间节点

01:32.430 --> 01:33.630
然后在这个中间

01:33.630 --> 01:36.430
你就可以去通过某一个方法去判断

01:36.430 --> 01:39.230
它是否满足了

01:39.230 --> 01:40.730
甚至它还提供了

01:40.730 --> 01:42.930
我是否可以去判断今年

01:42.930 --> 01:44.630
是否为润年

01:44.630 --> 01:47.330
这些方法都是非常的丰富的

01:47.330 --> 01:47.630
行吧

01:47.630 --> 01:49.430
那我们接下来就挨个

01:49.430 --> 01:52.430
把这里头的方法跟大家讲解一遍

01:52.430 --> 01:53.430
那依次来说

01:53.430 --> 01:55.530
首先就是S before

01:55.530 --> 01:58.830
那其实这是我们新开的这么一个页面

01:58.830 --> 02:00.930
这是今天的这个文件

02:00.930 --> 02:03.530
其实就是我们通过这个方法的名字

02:03.530 --> 02:06.130
就能够知道它到底是用来做什么

02:06.130 --> 02:10.230
S是不是就来表示是或说不是

02:10.230 --> 02:11.130
是不是

02:11.130 --> 02:14.530
其实那不就是满足或说不满足

02:14.530 --> 02:16.130
那就是不而知了

02:16.130 --> 02:17.230
True跟False

02:17.230 --> 02:17.930
然后befall

02:17.930 --> 02:18.730
befall啥意思

02:18.730 --> 02:19.630
之前

02:19.630 --> 02:21.630
所以这个方法就是用来判断

02:21.630 --> 02:22.830
一个时间的节点

02:22.830 --> 02:25.430
是否在另外一个时间节点的之前

02:25.730 --> 02:27.530
我们直接Consologue

02:27.530 --> 02:30.130
在这首先我先来上一个时间节点

02:32.170 --> 02:34.070
m1 nt

02:34.070 --> 02:35.070
moment

02:35.070 --> 02:36.070
先来上一个时间

02:36.070 --> 02:37.370
那这个时间是

02:37.370 --> 02:41.270
2010-10-2020

02:41.270 --> 02:42.770
这是一个时间节点是吧

02:42.770 --> 02:44.670
然后这个时间节点身上

02:44.670 --> 02:47.570
就就具备了这个S before

02:49.270 --> 02:49.670
算了

02:49.670 --> 02:50.470
扶植一下吧

02:50.470 --> 02:53.570
S before的这么一个方法好

02:53.570 --> 02:55.370
然后这个方法目前来说

02:55.470 --> 02:56.970
它是可以接收参数的

02:56.970 --> 02:59.070
但是我现在并没有给参数

02:59.070 --> 02:59.870
我们先来看

02:59.870 --> 03:01.570
没有给参数的情况

03:01.570 --> 03:02.670
它代表什么意思

03:03.470 --> 03:04.870
这个结果我们打开页面

03:05.970 --> 03:08.370
控制台结果是一个True

03:08.370 --> 03:08.870
看到吗

03:08.870 --> 03:09.470
好

03:09.570 --> 03:11.970
那就证明现在它的判断成功了

03:11.970 --> 03:13.370
那就说明什么

03:13.370 --> 03:15.070
说明我的这个时间点

03:15.070 --> 03:16.870
跟另外一个时间点相比的话

03:16.870 --> 03:18.270
它肯定在之前

03:18.770 --> 03:21.470
那问题是另外一个时间点在哪

03:21.470 --> 03:24.170
我们并没有给另外一个时间点

03:24.170 --> 03:24.970
看到了吧

03:25.070 --> 03:25.470
那好

03:25.470 --> 03:28.470
那其实就是参数现在是一个空

03:28.470 --> 03:30.470
就是默认没有给参数

03:30.470 --> 03:32.470
那它的时间点是谁啊

03:32.470 --> 03:34.770
我们现在的这个时间点

03:34.770 --> 03:36.270
其实也就是说

03:36.270 --> 03:38.470
拿这个时间点跟现在

03:38.470 --> 03:41.270
当前的这个时间点进行一个对比

03:41.270 --> 03:42.970
那现在的这个时间点

03:42.970 --> 03:44.270
我们就不用看几点了

03:44.270 --> 03:47.270
它的日期是2020年4月21日

03:47.270 --> 03:47.970
那你想想

03:47.970 --> 03:51.270
2010年跟我们的2020年去比的话

03:51.270 --> 03:52.870
它必然在前边啊

03:52.870 --> 03:54.870
后边的这些就不用看了

03:54.870 --> 03:56.870
所以它的结果必然是一个处

03:58.470 --> 04:00.170
那它是可以去传参的

04:00.170 --> 04:01.170
我们来看一下啊

04:01.170 --> 04:03.470
比方说在这个地方我传上一个参

04:03.470 --> 04:05.170
那这个参数是什么呢

04:05.170 --> 04:08.570
那2010-10-21

04:08.570 --> 04:09.070
好

04:09.070 --> 04:10.770
它其实也就是一个

04:10.770 --> 04:14.170
符合我们ISO8601那个标准的一个时间

04:14.170 --> 04:14.770
知道吧

04:14.770 --> 04:15.170
好

04:15.170 --> 04:15.870
然后这样的话

04:15.870 --> 04:17.170
你看它就有时间了

04:17.170 --> 04:18.270
有时间之后呢

04:18.270 --> 04:19.970
那就会拿这个时间点

04:19.970 --> 04:21.870
跟这个时间点进行一个对比

04:21.870 --> 04:24.170
看一下它是否在它之前

04:24.170 --> 04:25.070
很明显吧

04:25.070 --> 04:27.570
我这呢是前面的年月都一样

04:27.570 --> 04:29.570
那我对比的就是日期了

04:29.570 --> 04:31.870
20号在不在21号之前

04:31.870 --> 04:32.770
必然在

04:32.770 --> 04:33.770
那结果呢

04:33.770 --> 04:34.970
肯定是一个处

04:34.970 --> 04:36.170
刷新

04:36.170 --> 04:37.170
那假设说

04:37.170 --> 04:38.070
我把这个值呢

04:38.070 --> 04:39.570
改成一个19

04:39.570 --> 04:41.370
那20在19之前嘛

04:41.370 --> 04:42.770
那肯定不在了

04:42.770 --> 04:43.370
不在的话

04:43.370 --> 04:44.070
这个方法呢

04:44.070 --> 04:45.270
它的结果是什么呢

04:45.270 --> 04:45.970
来刷新

04:45.970 --> 04:47.070
就是一个 false

04:47.070 --> 04:48.170
很简单吧

04:48.170 --> 04:49.470
就是一个不二十啊

04:50.770 --> 04:52.170
这个呢就是判断

04:52.170 --> 04:52.870
一个时间点

04:52.870 --> 04:55.470
是否在另外一个时间点之前啊

04:55.470 --> 04:56.470
那这个方法呢

04:56.470 --> 04:57.870
它还没有完啊

04:57.870 --> 05:00.270
它还可以继续接收参数

05:00.270 --> 05:02.170
接收第三个参数啊

05:02.170 --> 05:03.070
第二个参数吧

05:03.070 --> 05:04.470
加上这个是三个啊

05:04.470 --> 05:05.770
第二个参数是什么呢

05:05.770 --> 05:07.970
就是现在咱们判断的这么一个

05:07.970 --> 05:09.370
时间的一个单位啊

05:09.370 --> 05:10.570
我给上一个year

05:10.570 --> 05:11.870
那表示意思呢

05:11.870 --> 05:12.570
就是哎

05:12.570 --> 05:15.570
其他的这个这个月份跟这个天啊

05:15.570 --> 05:16.370
你不用管了

05:16.370 --> 05:17.870
你只需要去判断啊

05:17.870 --> 05:19.070
这两个年份

05:19.070 --> 05:20.670
现在是否一样

05:20.670 --> 05:21.370
啊

05:21.370 --> 05:22.470
这个年份是否在

05:22.470 --> 05:23.470
这个年份之前啊

05:23.470 --> 05:24.370
不是一样啊

05:24.370 --> 05:25.570
来刷新一下啊

05:26.670 --> 05:28.370
哎哎啊啊

05:28.370 --> 05:29.370
这个参数给错了

05:29.370 --> 05:30.570
应该给到这个地方啊

05:30.570 --> 05:31.070
再来看啊

05:31.070 --> 05:32.670
刷新好结果呢

05:32.670 --> 05:33.770
是一个 false

05:33.770 --> 05:34.470
那为什么呢

05:34.470 --> 05:35.470
因为它俩相等

05:35.470 --> 05:37.970
那你说2010在2010之前吗

05:37.970 --> 05:38.770
肯定不在

05:38.770 --> 05:40.170
结果就是一个 false

05:40.170 --> 05:41.170
那假设说

05:41.170 --> 05:43.570
我在这改成一个2009

05:44.270 --> 05:45.070
在吗

05:45.070 --> 05:46.170
必然在刷新

05:46.170 --> 05:46.670
结果呢

05:46.670 --> 05:47.370
就是一个处

05:48.370 --> 05:49.370
就这么简单

05:49.370 --> 05:50.470
我们是可以给上一个

05:50.470 --> 05:51.670
对比的一个单位的啊

05:51.670 --> 05:52.670
当然这个单位呢

05:52.670 --> 05:54.670
指的是时间单位啊

05:54.670 --> 05:55.870
那这个时间单位呢

05:55.870 --> 05:56.570
其实有很多

05:56.570 --> 05:57.270
你看到吗

05:57.270 --> 05:57.970
年月日

05:57.970 --> 05:58.370
然后呢

05:58.370 --> 05:59.070
周是不是啊

05:59.070 --> 05:59.470
然后呢

05:59.470 --> 06:01.370
十分秒什么的都有

06:01.370 --> 06:02.770
这个你们自己下去呢

06:02.770 --> 06:04.270
测试一下就行了啊

06:04.270 --> 06:05.070
我在这呢

06:05.070 --> 06:06.170
就不再去说了

06:07.370 --> 06:09.070
那继续往下啊

06:09.070 --> 06:09.370
对了

06:09.370 --> 06:10.370
还有还有另外一个

06:10.370 --> 06:11.470
我需要去说一下啊

06:11.470 --> 06:12.870
就是这个时间单位

06:12.870 --> 06:13.970
为mouse的时候

06:13.970 --> 06:16.070
它是有一个小的一个问题啊

06:16.070 --> 06:16.970
mouse

06:16.970 --> 06:17.870
那这个mouse呢

06:17.870 --> 06:19.470
现在我现在这个时间呢

06:19.470 --> 06:22.070
2010-1020

06:22.070 --> 06:22.670
然后呢

06:22.670 --> 06:27.070
在后边2010-12-31

06:28.470 --> 06:29.170
31啊

06:29.170 --> 06:29.670
好

06:29.670 --> 06:31.770
咱来对比这两个时间啊

06:31.770 --> 06:33.470
那这两个时间呢

06:33.470 --> 06:34.270
这个呢是

06:34.270 --> 06:35.270
我这个没有改

06:35.270 --> 06:38.170
2008啊

06:38.170 --> 06:39.870
随便改08

06:39.870 --> 06:40.770
2008

06:40.770 --> 06:41.270
现在呢

06:41.270 --> 06:41.870
咱们都知道

06:41.870 --> 06:42.970
这个时间日期

06:42.970 --> 06:44.670
肯定是在这个日期之后

06:44.670 --> 06:45.170
是不是啊

06:45.170 --> 06:45.870
那好

06:45.870 --> 06:46.770
但是

06:46.770 --> 06:48.370
这个地方显示的月份

06:48.370 --> 06:49.170
它是10月

06:49.170 --> 06:50.870
这个呢是12月

06:50.870 --> 06:53.070
那10月在12月之前吗

06:53.070 --> 06:54.370
肯定是在

06:54.370 --> 06:55.970
那所以这个结果是什么呢

06:55.970 --> 06:57.070
大家要想想

06:57.070 --> 06:57.870
这个结果

06:57.870 --> 06:58.970
我们直接看答案

07:00.670 --> 07:01.870
刷新结果呢

07:01.870 --> 07:02.470
是一个 false

07:03.570 --> 07:04.670
为什么是一个 false呢

07:04.670 --> 07:06.270
在这去强调一下啊

07:06.270 --> 07:07.870
这是一个小的一个坑啊

07:07.870 --> 07:09.570
你可不要简简单单的认为

07:09.570 --> 07:11.870
现在我们判断的时间的单位呢

07:11.870 --> 07:12.670
是一个mouse

07:12.670 --> 07:13.570
就是一个月

07:13.570 --> 07:16.070
那你就直接拿10跟12去比

07:16.070 --> 07:16.270
哎

07:16.270 --> 07:17.370
10在12前面

07:17.370 --> 07:18.970
结果返回一个处啊

07:18.970 --> 07:20.670
不是这么想当然的

07:20.670 --> 07:22.070
就这么去认为啊

07:22.070 --> 07:23.470
他需要判断的是

07:23.470 --> 07:25.270
你给的单位是月

07:25.270 --> 07:28.070
那他需要判断是年跟月

07:28.070 --> 07:30.070
也就是2010年的10月

07:30.070 --> 07:32.870
跟2008年的这个12月

07:32.870 --> 07:34.070
这么去对比

07:34.070 --> 07:34.670
理解了吧

07:34.670 --> 07:35.870
所以这个是一个

07:35.870 --> 07:36.870
小的一个坑啊

07:36.870 --> 07:37.470
在这呢

07:37.470 --> 07:38.870
强调一点说一下啊

07:38.870 --> 07:39.270
嗯

07:41.410 --> 07:41.710
好

07:41.710 --> 07:42.310
那行吧

07:42.310 --> 07:44.010
那这个关于这个s before呢

07:44.010 --> 07:44.510
这个方法呢

07:44.510 --> 07:45.810
我们就过了啊

07:45.810 --> 07:47.110
继续往下说

07:47.110 --> 07:47.510
然后呢

07:47.510 --> 07:49.610
就是这个s same这个方法

07:49.610 --> 07:50.610
那这个方法呢

07:50.610 --> 07:51.510
其实也简单啊

07:51.510 --> 07:52.810
就是我们通过这个单词

07:52.810 --> 07:53.510
是不是知道

07:53.510 --> 07:55.610
他是用来判断两个时间点呢

07:55.610 --> 07:56.910
是否相同啊

07:56.910 --> 07:58.610
这个很简单啊

07:58.610 --> 07:59.210
直接来

08:00.610 --> 08:01.410
moment

08:01.410 --> 08:01.810
这呢

08:01.810 --> 08:03.210
咱给上一个时间

08:03.210 --> 08:05.610
2010-10-20

08:05.610 --> 08:06.710
哎简单啊

08:06.710 --> 08:08.210
点s same

08:09.610 --> 08:10.010
然后呢

08:10.010 --> 08:10.910
先给上一个啊

08:10.910 --> 08:12.210
我们先不给

08:12.210 --> 08:12.910
不给参数

08:12.910 --> 08:14.210
就是一个默认的啊

08:14.210 --> 08:15.810
默认来刷新一下

08:15.810 --> 08:17.010
肯定是一个 false

08:17.010 --> 08:17.710
这个呢走的

08:17.710 --> 08:18.910
还是我们当前的

08:18.910 --> 08:20.310
这么一个时间点啊

08:20.310 --> 08:20.510
行

08:20.510 --> 08:20.910
然后呢

08:20.910 --> 08:21.810
再来就是他里头

08:21.810 --> 08:23.210
我也传参传

08:23.210 --> 08:25.710
2010-10-20

08:25.710 --> 08:26.310
这时候呢

08:26.310 --> 08:27.210
两个一样嘛

08:27.210 --> 08:28.410
一样来刷新啊

08:28.410 --> 08:28.910
结果呢

08:28.910 --> 08:29.710
就是一个处

08:30.510 --> 08:30.910
好

08:30.910 --> 08:31.510
再来

08:31.510 --> 08:31.810
他呢

08:31.810 --> 08:33.110
也是可以去传参的

08:33.110 --> 08:33.610
比如说

08:33.610 --> 08:35.010
我们现在给上一个e

08:35.010 --> 08:35.610
就是一个

08:35.610 --> 08:36.510
传了一个年

08:36.510 --> 08:38.210
那对比的时间单位呢

08:38.210 --> 08:39.210
就是一个年

08:39.210 --> 08:40.110
那只需要去对比

08:40.110 --> 08:41.310
这两个年就行了

08:41.310 --> 08:42.410
那现在这两个年

08:42.410 --> 08:43.510
年一样吗

08:43.510 --> 08:44.210
啊一样的啊

08:44.210 --> 08:44.810
那如果说

08:44.810 --> 08:46.110
这改成一个12月

08:46.210 --> 08:47.410
再来看刷新一下

08:47.410 --> 08:49.010
他仍然是一个处啊

08:49.010 --> 08:50.610
不受影响

08:50.610 --> 08:51.910
一定要注意第二个参数

08:51.910 --> 08:53.210
他的一个作用

08:53.210 --> 08:55.410
弄清楚这个东西啊

08:55.410 --> 08:55.810
好

08:55.810 --> 08:56.610
sm啊

08:56.610 --> 08:57.310
剩下的

08:57.310 --> 08:58.010
跟上面呢

08:58.010 --> 08:58.710
就差不多了

08:58.710 --> 08:59.110
一样的

08:59.110 --> 09:00.310
我就不再去耽误时间

09:00.310 --> 09:01.410
演示了啊

09:01.410 --> 09:02.410
往下走

09:03.610 --> 09:04.310
往下走呢

09:04.310 --> 09:05.510
是s after

09:05.510 --> 09:06.910
那这个s after呢

09:06.910 --> 09:07.410
理解了

09:07.410 --> 09:08.610
这个s before之后呢

09:08.610 --> 09:09.210
这个东西呢

09:09.210 --> 09:10.110
就是跟他

09:10.110 --> 09:11.610
刚好是相反的啊

09:11.610 --> 09:13.310
我们就直接拿过来

09:13.310 --> 09:15.410
来给一个after

09:17.110 --> 09:18.910
给上一个日期

09:18.910 --> 09:20.410
给上一个日期

09:21.710 --> 09:24.410
2010年10月20号

09:24.410 --> 09:28.210
在这个11月的19号之后吗

09:28.210 --> 09:28.910
结果呢

09:30.510 --> 09:31.810
刷新结果呢

09:31.810 --> 09:32.910
是一个false

09:32.910 --> 09:35.210
2010年10月20号

09:35.210 --> 09:37.310
在11月的前面

09:37.310 --> 09:39.510
那这如果说改成一个09

09:39.510 --> 09:40.710
那这个时候再来看

09:40.710 --> 09:41.710
刷新结果呢

09:41.710 --> 09:42.710
是不是就是一个处啊

09:42.710 --> 09:44.710
那就是2010年的10月

09:44.710 --> 09:46.510
这肯定是在2010年

09:46.510 --> 09:48.010
9月份之后啊

09:48.010 --> 09:48.310
这个呢

09:48.310 --> 09:49.810
就是s after

09:49.810 --> 09:50.910
他的语法

09:50.910 --> 09:52.310
跟上面的s before呢

09:52.310 --> 09:53.610
是一模一样的

09:53.610 --> 09:54.410
其余的

09:54.410 --> 09:56.910
我就不再去演示了啊

09:56.910 --> 09:58.710
那再继续往下啊

09:58.710 --> 10:01.110
这个s same or before

10:02.910 --> 10:04.410
看到这个or了

10:04.410 --> 10:04.810
or呢

10:04.810 --> 10:05.410
啥意思啊

10:05.410 --> 10:06.110
或者的意思

10:06.110 --> 10:06.610
所以说呢

10:06.610 --> 10:07.710
其实这个判断呢

10:07.710 --> 10:09.110
他有两层意思

10:09.110 --> 10:09.510
一个呢

10:09.510 --> 10:10.910
就是是否相等

10:10.910 --> 10:11.810
然后另外一层呢

10:11.810 --> 10:13.210
是否在我之前

10:13.210 --> 10:14.610
在另外一个点之前

10:15.610 --> 10:18.350
理解吧

10:18.350 --> 10:19.550
其实就跟那个啥

10:20.750 --> 10:22.050
这个标讲

10:22.050 --> 10:23.550
小鱼等于

10:23.550 --> 10:25.150
你看小鱼是不是

10:25.150 --> 10:25.850
小鱼的话

10:25.850 --> 10:26.750
是不是在左边

10:26.750 --> 10:27.350
在左边的话

10:27.350 --> 10:29.750
就在某一个时间点的之前

10:29.750 --> 10:30.550
等于的话

10:30.550 --> 10:31.750
是不是就是same的意思

10:31.750 --> 10:32.950
他俩相等啊

10:34.150 --> 10:34.950
moment

10:34.950 --> 10:36.750
我们来写一个

10:36.750 --> 10:37.150
这儿呢

10:37.150 --> 10:38.750
方法改一下

10:38.750 --> 10:40.150
10月20

10:40.150 --> 10:40.550
然后呢

10:40.550 --> 10:42.350
在这个2010年

10:42.350 --> 10:43.950
10月这个

10:44.250 --> 10:46.150
2121

10:46.150 --> 10:46.650
好

10:46.650 --> 10:47.250
这个时候呢

10:47.250 --> 10:49.050
我们先来看这个时间点啊

10:49.050 --> 10:50.450
10月20号再不在

10:50.450 --> 10:52.050
10月21号之前

10:52.050 --> 10:53.050
肯定是在

10:53.050 --> 10:53.850
那这个结果呢

10:53.850 --> 10:55.250
他必然是一个处了

10:55.250 --> 10:57.650
杀心是一个处没毛病

10:58.650 --> 11:00.150
然后另外一个

11:00.150 --> 11:00.650
这个时候呢

11:00.650 --> 11:01.750
你看我把时间呢

11:01.750 --> 11:02.450
给他改了

11:02.450 --> 11:03.550
改成这个零

11:03.550 --> 11:04.350
这时候

11:04.350 --> 11:06.450
2010月20号

11:06.450 --> 11:07.350
这两个时间点呢

11:07.350 --> 11:08.450
是一模一样的

11:08.450 --> 11:09.350
杀心走

11:09.350 --> 11:09.850
结果呢

11:09.850 --> 11:11.150
是不是也是一个处啊

11:11.150 --> 11:11.450
好

11:11.450 --> 11:12.050
这这个呢

11:12.050 --> 11:12.550
是小鱼

11:12.550 --> 11:13.650
这个是等于是吧

11:13.650 --> 11:15.750
那现在我让他变成一个大鱼

11:15.750 --> 11:16.050
哎

11:16.050 --> 11:18.250
不能应该是改这啊

11:18.250 --> 11:19.450
11月20号

11:19.450 --> 11:20.550
杀心结果呢

11:20.550 --> 11:22.250
变成一个 false

11:22.250 --> 11:24.150
所以他就是一个小鱼等于

11:25.950 --> 11:28.550
as same or before啊

11:28.550 --> 11:29.150
好

11:29.150 --> 11:31.450
那跟他还有另外一个对应的一个方法

11:31.450 --> 11:32.050
这个方法呢

11:32.050 --> 11:32.750
叫什么呢

11:32.750 --> 11:34.850
as same or after

11:34.850 --> 11:38.260
我把这个复制一下

11:38.260 --> 11:39.660
理解了这个之后呢

11:39.660 --> 11:41.360
这个就是套一下就行了

11:41.360 --> 11:42.460
那他是小鱼等于

11:42.460 --> 11:43.260
这个是什么呢

11:43.260 --> 11:44.460
是不是大鱼等于啊

11:44.960 --> 11:45.560
对吧

11:47.360 --> 11:48.260
第一个呢是

11:49.360 --> 11:50.860
我这呢改成11月

11:51.460 --> 11:52.760
11月他大鱼

11:52.760 --> 11:53.160
然后呢

11:53.160 --> 11:54.460
这是相等

11:54.460 --> 11:56.060
这是改成一个10月

11:56.060 --> 11:58.460
他是不是小鱼前边小鱼后边

11:58.960 --> 12:02.360
前边小鱼10月19

12:05.200 --> 12:06.300
那所以这个结果呢

12:06.300 --> 12:07.000
会变吗

12:07.000 --> 12:09.200
看一下啊来杀心走着

12:09.200 --> 12:10.300
是不是哎

12:10.300 --> 12:11.200
这个变了

12:11.200 --> 12:13.400
10啊这这没改啊

12:14.700 --> 12:16.400
再来杀心结果啊

12:16.600 --> 12:18.200
是不是跟上面是一样的啊

12:18.200 --> 12:20.800
这个呢就是as same or after

12:20.800 --> 12:21.800
检查一个时间呢

12:21.800 --> 12:23.800
是否在另外一个时间之后

12:23.800 --> 12:26.800
或者或者预值相等啊

12:27.100 --> 12:27.300
好

12:27.300 --> 12:28.100
继续吧

12:28.100 --> 12:29.300
来往下走呢

12:29.300 --> 12:30.900
就是这个as be torn了

12:30.900 --> 12:31.400
那这个呢

12:31.400 --> 12:32.500
其实也是简单啊

12:32.500 --> 12:34.000
就是来检测一下

12:34.000 --> 12:38.300
这个时间是否在两个时间点之间啊

12:38.400 --> 12:39.200
来这个方法呢

12:39.200 --> 12:40.400
其实挺挺有意思啊

12:40.400 --> 12:41.200
我们看一下

12:41.200 --> 12:42.400
console.log

12:44.770 --> 12:45.470
log啊

12:45.970 --> 12:46.770
moment

12:47.670 --> 12:49.170
给上一个时间点

12:49.170 --> 12:50.570
2010杠

12:50.570 --> 12:53.970
然后呢10杠2010杠20

12:53.970 --> 12:54.770
这个时间点

12:54.770 --> 12:57.270
然后呢点点as be torn

12:57.370 --> 12:58.070
be torn啊

12:58.070 --> 12:59.170
好注意了啊

12:59.170 --> 13:00.270
这个时候要注意啊

13:00.370 --> 13:02.270
我们要检测一个时间点

13:02.270 --> 13:05.270
是否在两个时间点之间

13:05.270 --> 13:06.070
那所以啊

13:06.070 --> 13:07.070
你就需要去

13:07.170 --> 13:08.070
这个参数当中呢

13:08.070 --> 13:09.870
就要给两个时间点了

13:10.470 --> 13:11.870
那第一个时间点

13:11.970 --> 13:15.070
来先给2010杠10杠19

13:15.470 --> 13:16.270
比他小

13:16.470 --> 13:16.770
是吧

13:16.770 --> 13:17.370
比他小

13:17.370 --> 13:17.770
然后呢

13:17.770 --> 13:19.570
第二个时间点

13:20.470 --> 13:20.970
啊

13:21.470 --> 13:22.870
2010杠

13:22.870 --> 13:23.470
啊

13:23.470 --> 13:25.170
10杠25

13:25.370 --> 13:26.270
比他大

13:26.370 --> 13:26.970
这个时候呢

13:26.970 --> 13:28.370
我们通通过肉眼

13:28.370 --> 13:29.470
你能否判断啊

13:29.470 --> 13:30.570
这个条件满足吗

13:30.670 --> 13:31.970
肯定是满足的啊

13:31.970 --> 13:32.870
10月20号

13:32.870 --> 13:34.270
是不是在10月19号

13:34.470 --> 13:36.170
跟25号之间啊

13:36.170 --> 13:37.070
那这个结果呢

13:37.070 --> 13:38.570
我们刷新得出的结果呢

13:38.570 --> 13:39.970
就是一个处看到了吗

13:39.970 --> 13:40.370
嗯

13:41.770 --> 13:43.070
满足条件啊

13:43.170 --> 13:44.470
还有另外一个东西呢

13:44.470 --> 13:46.070
就是就是啊

13:46.070 --> 13:47.470
在我们的这个moment

13:47.470 --> 13:48.170
这个里头呢

13:48.170 --> 13:50.170
其实他还可以传上一个参数

13:50.170 --> 13:50.770
这个参数呢

13:50.770 --> 13:51.170
叫什么呢

13:51.170 --> 13:52.170
叫Andy Fonda

13:52.170 --> 13:52.770
这个东西呢

13:52.770 --> 13:54.970
我们之前是没有讲的啊

13:56.270 --> 13:56.470
啊

13:56.470 --> 13:56.970
知道吗

13:56.970 --> 13:57.470
在这呢

13:57.470 --> 13:58.170
咱提一嘴啊

13:58.170 --> 13:59.570
这个东西知道就行了

13:59.570 --> 14:01.670
那如果说传上一个Andy Fonda呢

14:01.670 --> 14:02.970
表示的意思是啥

14:03.070 --> 14:04.170
这个时间点

14:04.170 --> 14:05.970
取得就是我们当前的

14:05.970 --> 14:06.970
这个时间点

14:07.270 --> 14:08.370
那这个10月

14:08.370 --> 14:09.670
这个时间的一个区间呢

14:09.670 --> 14:11.670
就是2010年10月19号

14:11.670 --> 14:14.970
到今天2020年4月21日

14:15.170 --> 14:17.370
那这个20号在中间吗

14:17.970 --> 14:18.870
在中间吗

14:18.870 --> 14:20.070
他必然在中间

14:20.070 --> 14:21.770
我这个时间比他很大

14:21.770 --> 14:22.670
比他还大

14:22.670 --> 14:23.870
你说他在中间吗

14:23.870 --> 14:24.870
他都在中间了

14:24.870 --> 14:26.070
他必然在中间

14:26.070 --> 14:26.870
懂了吧

14:26.870 --> 14:27.370
ok啊

14:27.370 --> 14:28.170
继续啊

14:28.170 --> 14:28.570
继续

14:28.570 --> 14:29.170
然后呢

14:29.170 --> 14:30.670
他也是可以去接收

14:30.670 --> 14:32.270
第三个参数的啊

14:32.270 --> 14:32.570
来

14:32.570 --> 14:32.870
这呢

14:32.870 --> 14:33.770
咱换一下

14:33.770 --> 14:34.870
2012

14:34.870 --> 14:35.570
然后呢

14:35.570 --> 14:35.770
啊

14:35.770 --> 14:36.370
刚01

14:36.370 --> 14:37.170
刚01

14:37.770 --> 14:38.670
01啊

14:38.670 --> 14:39.570
好啊

14:39.570 --> 14:40.370
2010

14:40.370 --> 14:40.670
这个呢

14:40.670 --> 14:41.570
没有没有变

14:41.570 --> 14:42.070
这个变了

14:42.070 --> 14:42.370
然后呢

14:42.370 --> 14:43.470
第二个参数是什么呢

14:43.470 --> 14:44.070
是1

14:46.910 --> 14:47.910
那第二个参数

14:47.910 --> 14:48.210
不是

14:48.210 --> 14:49.310
应该是准确来讲

14:49.310 --> 14:50.710
是第三个参数了啊

14:50.710 --> 14:51.810
那第三个参数呢

14:51.810 --> 14:53.310
其实跟我们上边的

14:53.310 --> 14:54.410
第二个参数

14:54.410 --> 14:55.210
是一样的

14:56.310 --> 14:57.810
就是表示要对比的

14:57.810 --> 14:58.610
一个单位

14:58.610 --> 14:59.210
知道吗

14:59.210 --> 14:59.710
那好

14:59.710 --> 15:01.510
现在他所对比的是什么呢

15:01.510 --> 15:02.810
其实就是一个年份了

15:02.810 --> 15:05.510
2010年是否在这个区间

15:05.510 --> 15:05.910
跟不

15:05.910 --> 15:06.710
这个起点

15:06.710 --> 15:08.210
跟这个终点之间

15:08.710 --> 15:09.310
在吗

15:10.210 --> 15:11.210
2010年

15:11.210 --> 15:12.010
在不在啊

15:12.010 --> 15:12.710
在不在啊

15:12.710 --> 15:13.410
查询一下

15:14.210 --> 15:15.010
矛盾了吗

15:15.010 --> 15:15.310
好

15:15.310 --> 15:16.610
他肯定是不在的

15:16.610 --> 15:17.410
为什么呢

15:17.410 --> 15:19.610
2010年怎么能够在

15:19.610 --> 15:20.610
2010年

15:20.610 --> 15:22.810
跟2012年之间呢

15:22.810 --> 15:23.810
他只能够在

15:23.810 --> 15:24.810
20比

15:24.810 --> 15:26.510
比2010小

15:26.510 --> 15:27.510
200

15:27.510 --> 15:28.910
2009

15:28.910 --> 15:30.110
这个在吗

15:30.110 --> 15:31.110
来刷新

15:31.110 --> 15:32.410
这个就在了

15:32.410 --> 15:33.210
懂了吧

15:33.210 --> 15:34.110
他俩

15:34.110 --> 15:35.110
这个值一样

15:35.110 --> 15:37.110
他肯定是不在这个区间的啊

15:38.310 --> 15:38.810
行

15:38.810 --> 15:40.310
这个一定要记住了啊

15:40.310 --> 15:41.610
我们在这给他换吧

15:41.610 --> 15:43.010
就换成2009

15:45.940 --> 15:46.940
那继续往下啊

15:46.940 --> 15:47.840
这个sbit呢

15:47.840 --> 15:49.640
他跟别的方法不太一样

15:49.640 --> 15:50.740
他还提供了

15:50.740 --> 15:51.140
你看

15:51.140 --> 15:53.340
总共提供了四个参数啊

15:53.340 --> 15:53.940
四个参数

15:53.940 --> 15:54.340
然后呢

15:54.340 --> 15:55.240
这四个参数呢

15:55.240 --> 15:56.440
就是最后一个参数

15:56.440 --> 15:57.740
我们需要去说一下

15:57.740 --> 15:58.040
这个呢

15:58.040 --> 15:58.440
是啥

15:58.440 --> 16:00.040
就是一个包容性

16:00.040 --> 16:00.740
知道吗

16:00.740 --> 16:01.240
好

16:01.240 --> 16:02.340
然后呢

16:02.340 --> 16:04.040
这个参数为难呢

16:04.040 --> 16:05.040
表示什么意思呢

16:05.040 --> 16:06.440
其实就是走一个默认

16:06.440 --> 16:07.340
默认的话

16:07.340 --> 16:08.540
其实他们对比的是啥

16:08.540 --> 16:09.640
就是还是我们

16:09.640 --> 16:10.540
以上来所说的

16:10.540 --> 16:11.540
就是把他们的时间

16:11.540 --> 16:13.240
转成一个啊

16:13.240 --> 16:14.240
这个好像忘说了

16:14.240 --> 16:14.840
是吧

16:14.940 --> 16:16.740
我们回回顾一下

16:16.740 --> 16:17.940
突然给忘了

16:17.940 --> 16:18.940
那你看啊

16:18.940 --> 16:20.040
b4是不是

16:20.040 --> 16:21.540
他判断这个时间点

16:21.540 --> 16:23.440
是否在这个时间点之前

16:23.440 --> 16:24.740
怎么去判断呢

16:24.740 --> 16:25.840
他可并不是说

16:25.840 --> 16:27.040
这个自付串一个一个

16:27.040 --> 16:28.340
掰出来对比一下啊

16:28.340 --> 16:29.140
他并不是啊

16:29.140 --> 16:31.240
我们的iAlso8601

16:31.240 --> 16:32.040
他的一个格式

16:32.040 --> 16:33.140
是不是非常之多啊

16:33.140 --> 16:34.540
中间还有一个w了

16:34.540 --> 16:35.640
那你怎么掰啊

16:35.640 --> 16:36.840
没法掰

16:36.840 --> 16:37.640
知道吗

16:37.640 --> 16:39.340
那他怎么去对比呢

16:39.340 --> 16:40.640
他其实是把这个时间呢

16:40.640 --> 16:42.640
给他转成一个时间戳

16:42.640 --> 16:44.740
时间戳也就是那个好秒数

16:44.840 --> 16:46.540
转成那个好秒数之后呢

16:46.540 --> 16:47.740
再进行一个对比

16:47.740 --> 16:49.440
这样的话是不是就是数字

16:49.440 --> 16:50.840
跟数字进行一个对比

16:50.840 --> 16:52.440
这个就简单了吧

16:52.440 --> 16:53.440
理解了吧

16:53.440 --> 16:55.140
那这个也是一样的啊

16:55.140 --> 16:57.440
他们也会转成一个时间戳啊

16:57.440 --> 16:58.340
然后呢在这呢

16:58.340 --> 17:00.140
就会大家能够看到啊

17:00.140 --> 17:01.140
像这种写法

17:01.140 --> 17:03.140
来我把它复制一下放到这啊

17:03.140 --> 17:04.040
那这种写法呢

17:04.040 --> 17:05.340
就是这有一个难

17:05.340 --> 17:06.140
这有一个难呢

17:06.140 --> 17:07.640
其实你看我们在这呢

17:07.640 --> 17:09.740
给的不就是一个时间的一个单位啊

17:09.740 --> 17:10.240
这个时候呢

17:10.240 --> 17:11.040
他对比的是啥

17:11.040 --> 17:11.940
是年份

17:11.940 --> 17:12.940
那给一个难呢

17:12.940 --> 17:14.240
其实走的就是一个默认

17:14.240 --> 17:16.040
对比的还是整个时间点

17:16.040 --> 17:17.640
把他们转成一个时间戳

17:17.640 --> 17:19.140
或者说转成一个好秒数

17:19.140 --> 17:20.540
对比他们的一个好秒数

17:20.540 --> 17:21.340
理解了吧

17:21.340 --> 17:22.140
这个一二呢

17:22.140 --> 17:24.040
仅仅是把这个年份给他转成了

17:24.040 --> 17:25.040
一个时间戳

17:25.040 --> 17:25.540
懂吧

17:25.540 --> 17:26.040
好

17:28.240 --> 17:28.840
行吧

17:28.840 --> 17:29.640
那然后呢

17:29.640 --> 17:30.840
接下来咱着重说一下

17:30.840 --> 17:31.840
最后一个参数啊

17:31.840 --> 17:33.040
第四个参数

17:33.040 --> 17:34.740
那第四个参数呢

17:34.740 --> 17:35.840
好像这个东西的

17:35.840 --> 17:37.240
看上去很诡异啊

17:37.240 --> 17:37.840
其实

17:38.240 --> 17:39.740
我在第一眼看上去的时候呢

17:39.740 --> 17:40.940
也是很诡异的

17:40.940 --> 17:42.140
一个扩耗啊

17:42.140 --> 17:43.140
两两个扩耗

17:43.140 --> 17:43.840
一个小扩耗

17:43.840 --> 17:45.040
一个中扩耗

17:45.040 --> 17:46.140
那这两个扩耗呢

17:46.140 --> 17:48.240
他们分别代表的意义是不一样的啊

17:48.240 --> 17:49.040
来你看

17:49.040 --> 17:51.140
中扩耗代表的是包含

17:51.140 --> 17:54.040
那这个小扩耗代表的是排除啊

17:54.040 --> 17:55.340
那这个参数叫什么呢

17:55.340 --> 17:57.540
人家管他叫包容性参数啊

17:57.540 --> 17:57.840
来

17:58.740 --> 18:00.140
什么意思呢

18:00.140 --> 18:02.140
小扩耗表示排除

18:02.140 --> 18:04.240
你看扩耗总共有两半

18:04.240 --> 18:05.940
那这一半对应的是什么呢

18:05.940 --> 18:07.640
是起点的这个值

18:07.640 --> 18:08.040
然后呢

18:08.040 --> 18:09.340
这一半对应的是什么呢

18:09.340 --> 18:11.240
是终点的这个值啊

18:11.240 --> 18:12.040
那我们现在呢

18:12.040 --> 18:13.040
两个小扩耗

18:13.040 --> 18:14.940
就表示现在这个区间

18:14.940 --> 18:15.640
知道吗

18:15.640 --> 18:17.840
把起点排除掉

18:17.840 --> 18:22.200
以及把终点排除掉

18:22.200 --> 18:24.100
这就是排除的意思

18:24.100 --> 18:24.500
所以说呢

18:24.500 --> 18:25.000
你看啊

18:25.000 --> 18:26.800
2016年10月30号

18:26.800 --> 18:27.900
在这个区间吗

18:27.900 --> 18:29.900
如果说不排除他俩的话

18:29.900 --> 18:31.600
在不在这个区间在

18:31.600 --> 18:32.500
但是现在

18:32.500 --> 18:34.000
把他俩都排除掉了

18:34.000 --> 18:35.100
还在这个区间吗

18:35.100 --> 18:36.000
肯定不在

18:36.000 --> 18:36.900
那这个结果呢

18:36.900 --> 18:38.100
他必然是一个什么呢

18:38.100 --> 18:42.590
false false啊

18:42.590 --> 18:43.990
我们在这看一下啊

18:43.990 --> 18:44.890
杀心结果呢

18:44.890 --> 18:46.290
就是一个 false 是吧

18:46.290 --> 18:48.290
剩下的我就不在这去写了

18:48.290 --> 18:49.990
我们直接在他的这个

18:49.990 --> 18:50.890
文档当中呢

18:50.890 --> 18:52.290
跟大家解释一下啊

18:52.290 --> 18:53.590
来第二个

18:53.590 --> 18:54.290
第二个呢

18:54.290 --> 18:54.890
中扩耗

18:54.890 --> 18:55.790
中扩耗表示呢

18:55.790 --> 18:56.590
是包含

18:56.590 --> 18:57.190
所以说呢

18:57.190 --> 18:59.590
就是我的这个起点的这个时间点

18:59.590 --> 19:00.590
是包含的

19:00.590 --> 19:01.790
也就是你这个时间呢

19:01.790 --> 19:03.490
是要跟我进行对比的

19:03.490 --> 19:04.090
懂吗

19:04.090 --> 19:04.590
然后呢

19:04.590 --> 19:05.290
第二个呢

19:05.290 --> 19:07.690
就是排除掉小扩耗嘛

19:07.690 --> 19:10.490
排除掉就是终点的这个时间排除掉

19:10.490 --> 19:12.990
其实也就说这个时间呢啊

19:12.990 --> 19:13.990
只有一个起点

19:13.990 --> 19:15.290
没有一个终点

19:15.290 --> 19:15.990
那你看啊

19:15.990 --> 19:16.690
起点呢

19:16.690 --> 19:19.590
跟我们的这个要对比的时间是相等的

19:19.590 --> 19:21.190
他现在是包扩的

19:21.190 --> 19:21.690
所以说呢

19:21.690 --> 19:22.590
这两个相等

19:22.590 --> 19:23.990
那这个条件

19:23.990 --> 19:25.290
是不是就满足了啊

19:25.290 --> 19:26.090
满足之后呢

19:26.090 --> 19:26.490
结果呢

19:26.490 --> 19:29.200
就是一个处了

19:29.200 --> 19:30.200
这样去解释的话

19:30.200 --> 19:31.900
是不是就理解了

19:31.900 --> 19:33.500
然后再来两个扩耗呢

19:33.500 --> 19:34.200
都是排除掉

19:34.200 --> 19:34.800
所以说呢

19:34.800 --> 19:35.500
这个时间点

19:35.500 --> 19:36.400
这个时间点呢

19:36.400 --> 19:37.300
就排除掉了

19:37.300 --> 19:38.300
那这个时间点呢

19:38.300 --> 19:38.700
很明显

19:38.700 --> 19:40.400
他是这个终点的时间点

19:40.400 --> 19:40.800
所以说呢

19:40.800 --> 19:42.500
一排除掉没有没有的话

19:42.500 --> 19:43.700
就是一个 false

19:43.700 --> 19:44.500
然后这块呢

19:44.500 --> 19:46.400
就是把起点排除掉啊

19:46.400 --> 19:47.500
1月1号排除掉

19:47.500 --> 19:49.300
但是终点终点的值

19:49.300 --> 19:50.600
跟这个值是一样的

19:50.600 --> 19:52.500
他终点是包括的

19:52.500 --> 19:53.200
没有排除掉

19:53.200 --> 19:53.600
所以说呢

19:53.600 --> 19:55.100
结果就是一个处

19:55.100 --> 19:56.000
然后这个呢

19:56.000 --> 19:57.800
两个都包括啊

19:57.800 --> 19:59.400
你看两个都包括的话

19:59.400 --> 20:00.900
他甭管对比哪个

20:00.900 --> 20:03.100
都是在这个区间范围之内

20:03.100 --> 20:03.800
结果呢

20:03.800 --> 20:04.900
就是一个处

20:04.900 --> 20:05.200
这个呢

20:05.200 --> 20:06.000
就是这个

20:06.000 --> 20:07.600
我们的这个包容性啊

20:07.600 --> 20:08.600
一个中扩耗

20:08.600 --> 20:10.000
给你一个小扩耗

20:10.000 --> 20:13.200
他各自所代表的这个一个意义啊

20:13.200 --> 20:13.700
行吧

20:13.700 --> 20:14.100
然后呢

20:14.100 --> 20:14.400
这个呢

20:14.400 --> 20:15.300
咱们就过了啊

20:15.300 --> 20:16.300
那往下说啊

20:16.400 --> 20:17.000
往下说

20:17.000 --> 20:17.800
这个东西呢

20:17.800 --> 20:19.100
就是下令时

20:19.100 --> 20:20.100
下令时这个东西呢

20:20.100 --> 20:21.300
其实对咱们来说呢

20:21.300 --> 20:22.900
用用意义不大啊

20:22.900 --> 20:23.500
下令时

20:23.500 --> 20:24.800
大家可以去搜一下

20:24.800 --> 20:25.100
这个呢

20:25.100 --> 20:26.500
其实是人为干预的

20:26.500 --> 20:27.600
这么一个时间啊

20:27.600 --> 20:28.400
因为夏天呢

20:28.400 --> 20:30.100
这个时间是不是比较长

20:30.100 --> 20:30.500
所以说呢

20:30.500 --> 20:33.900
就是为了能够让大家啊

20:33.900 --> 20:35.300
节约时间

20:35.300 --> 20:36.200
那就是下令时

20:36.200 --> 20:39.500
其实是把时间给他调快一个小时啊

20:39.500 --> 20:39.800
这个呢

20:39.800 --> 20:41.400
就叫一个下令时啊

20:41.400 --> 20:42.800
有兴趣的同学呢

20:42.800 --> 20:44.400
可以去搜一下

20:44.400 --> 20:45.800
来往下啊

20:45.800 --> 20:47.200
s s s s

20:47.200 --> 20:48.400
这个 s h

20:48.400 --> 20:49.300
这个这个这个

20:49.300 --> 20:49.700
哎

20:49.700 --> 20:50.700
这个方法啊

20:50.700 --> 20:52.000
这个方法来说一下

20:52.000 --> 20:52.700
这个方法呢

20:52.700 --> 20:54.300
他是用来检测现在

20:54.300 --> 20:55.700
这个你给的这个年份

20:55.700 --> 20:57.700
到底是不是一个润年啊

20:59.500 --> 21:00.700
这就简单了啊

21:01.400 --> 21:02.000
moment

21:02.000 --> 21:02.500
现在呢

21:02.500 --> 21:04.500
我们先拿这个默认的一个时间

21:04.500 --> 21:05.600
去看一下啊

21:05.600 --> 21:06.400
目前来说

21:06.400 --> 21:07.400
默认的一个时间呢

21:07.400 --> 21:08.000
现在呢

21:08.000 --> 21:09.800
今年是2020年

21:09.800 --> 21:12.000
那2020年是不是润年呢

21:12.000 --> 21:13.100
我们看这个结果啊

21:13.100 --> 21:14.100
来刷新一下啊

21:14.100 --> 21:14.500
结果呢

21:14.500 --> 21:15.300
是一个处

21:15.300 --> 21:16.300
就表示今年呢

21:16.300 --> 21:17.400
就是一个润年啊

21:17.400 --> 21:18.300
你们很有幸啊

21:18.300 --> 21:19.600
今年就是一个润年

21:20.000 --> 21:20.800
来这个润年

21:20.800 --> 21:21.800
咱解释一下啊

21:21.800 --> 21:22.300
润年呢

21:22.300 --> 21:24.200
其实是4的倍数

21:24.200 --> 21:25.900
能够被4整除

21:25.900 --> 21:26.600
以及呢

21:26.600 --> 21:27.100
呃

21:27.100 --> 21:29.200
他不能够被100整除

21:29.200 --> 21:29.600
这个呢

21:29.600 --> 21:31.000
就叫一个润年啊

21:31.000 --> 21:31.800
那这个润年呢

21:31.800 --> 21:32.900
还有很多一下

21:32.900 --> 21:34.800
很多一些其他的一些东西啊

21:34.800 --> 21:36.900
好像还有一个什么的世纪润年啊

21:36.900 --> 21:37.700
这些东西

21:37.700 --> 21:38.000
行

21:38.000 --> 21:38.800
这这个呢

21:38.800 --> 21:39.800
我在这

21:39.800 --> 21:40.700
咱们就不再去说

21:40.700 --> 21:42.900
你们可以有兴趣下去了解一下啊

21:42.900 --> 21:43.500
自己

21:43.500 --> 21:44.500
去了解一下啊

21:44.500 --> 21:45.800
那2020年

21:45.800 --> 21:47.100
能否被4整除呢

21:47.100 --> 21:48.100
必然可以

21:48.100 --> 21:48.900
是不是啊

21:48.900 --> 21:49.500
所以啊

21:49.500 --> 21:50.100
他又

21:50.100 --> 21:50.600
而且呢

21:50.600 --> 21:52.600
他同时不是100的倍数

21:52.600 --> 21:53.400
那所以说呢

21:53.400 --> 21:53.900
今年呢

21:53.900 --> 21:55.200
就是一个润年

21:56.300 --> 21:57.100
那润年

21:57.100 --> 21:58.100
今年润的是

21:58.100 --> 21:58.800
哪个月呢

21:58.800 --> 22:00.400
润的是4月份啊

22:00.400 --> 22:01.100
所以说呢

22:01.100 --> 22:02.700
生在这个啊

22:02.700 --> 22:03.300
因

22:03.300 --> 22:04.400
这个是按

22:04.400 --> 22:06.100
因利去算的啊

22:06.100 --> 22:06.600
能力

22:06.600 --> 22:07.000
能力

22:07.000 --> 22:07.500
你知道吧

22:07.500 --> 22:08.000
好

22:08.000 --> 22:08.900
能力的4月份

22:08.900 --> 22:10.100
如果说你们的

22:10.100 --> 22:11.700
生日是在这个月份的话

22:11.700 --> 22:12.600
那恭喜你们

22:12.600 --> 22:13.400
你们今年

22:13.400 --> 22:15.500
就可以去过上两个生日啊

22:15.500 --> 22:16.000
好

22:16.200 --> 22:16.800
好

22:17.800 --> 22:18.800
得出的一个结果呢

22:18.800 --> 22:19.500
就是一个处啊

22:19.500 --> 22:20.000
那

22:20.000 --> 22:20.200
哎

22:20.200 --> 22:21.000
我们再来看一下

22:21.000 --> 22:21.300
比如说

22:21.300 --> 22:23.500
我现在传上一个2019

22:23.500 --> 22:25.000
这个年份是2019年

22:25.000 --> 22:26.200
2019年很

22:26.200 --> 22:26.700
很明显

22:26.700 --> 22:28.000
他绝对不是一个润年

22:28.000 --> 22:29.200
那他的一个结果呢

22:29.200 --> 22:30.200
来看一下刷新

22:30.200 --> 22:31.000
就是一个 false

22:32.000 --> 22:32.900
很灵的啊

22:32.900 --> 22:34.000
这个很灵的啊

22:34.600 --> 22:35.000
好

22:35.500 --> 22:37.500
这是关于这个润年啊

22:37.500 --> 22:38.800
润年说完之后呢

22:38.800 --> 22:39.900
继续往下啊

22:39.900 --> 22:40.500
再来呢

22:40.500 --> 22:42.400
就是一个 s moment

22:42.500 --> 22:43.800
那这个s moment呢

22:43.800 --> 22:45.200
他其实是用来检测

22:45.200 --> 22:47.100
现在你给的这个参数呢

22:47.100 --> 22:49.000
是否为一个moment的

22:49.000 --> 22:50.300
这么一个对象啊

22:50.300 --> 22:51.500
这个呢主要是用来

22:51.600 --> 22:52.100
比如说

22:53.100 --> 22:54.300
我们啊

22:54.300 --> 22:55.900
有的时候可能你需要去用到这个

22:55.900 --> 22:56.900
原生的一个data

22:56.900 --> 22:57.300
是吧

22:57.300 --> 22:57.900
有的时候呢

22:57.900 --> 23:00.100
你可能去用的就是这个moment

23:00.100 --> 23:02.100
来moment啊点

23:02.100 --> 23:03.800
但是注意这个方法啊

23:03.800 --> 23:05.500
他是没有这个前綴的

23:05.500 --> 23:07.400
不是没有这个扩耗的

23:07.400 --> 23:09.400
没有这个扩耗的不是前綴啊

23:09.400 --> 23:11.400
然后我们把这个参数啊

23:11.400 --> 23:11.900
丢一个啊

23:11.900 --> 23:12.600
现在呢

23:12.600 --> 23:14.600
就是假设说我什么都不给

23:15.100 --> 23:16.800
那就是没有参数呗

23:17.200 --> 23:18.000
来再来看

23:18.000 --> 23:18.800
没有参数的话

23:18.800 --> 23:19.600
他的一个结果呢

23:19.600 --> 23:20.600
就是一个 false

23:20.600 --> 23:22.400
因为你压根就没有给人家东西

23:22.400 --> 23:24.000
他咋去判断呢

23:24.000 --> 23:24.400
好

23:24.400 --> 23:26.100
在这我们给上一个new data

23:27.100 --> 23:27.900
那这个结果呢

23:27.900 --> 23:29.100
来看一下结果呢

23:29.100 --> 23:30.000
就是一个 false

23:30.400 --> 23:30.600
好

23:30.600 --> 23:31.300
再来

23:31.300 --> 23:33.200
这我给上一个moment

23:35.300 --> 23:35.700
哎

23:35.700 --> 23:36.300
这时

23:36.300 --> 23:37.000
你看啊

23:37.000 --> 23:38.800
传的就是一个moment的对象了

23:38.800 --> 23:40.200
结果是不是就是一个出啊

23:41.600 --> 23:42.500
很简单吧

23:42.500 --> 23:43.700
用来检测现在呢

23:43.700 --> 23:44.700
你传的餐

23:44.700 --> 23:46.800
是否是moment对象

23:47.400 --> 23:48.200
再往下呢

23:48.200 --> 23:49.300
estate啊

23:49.300 --> 23:50.600
跟他是一样的

23:50.600 --> 23:51.100
这个东西呢

23:51.100 --> 23:52.500
他是用来检测现在

23:52.500 --> 23:53.500
你传的餐呢

23:53.500 --> 23:55.800
是否是一个data对象啊

23:55.800 --> 23:57.400
你看他俩相呼应啊

23:58.200 --> 23:58.900
estate

24:00.880 --> 24:02.380
来看一下结果

24:02.480 --> 24:04.680
在这刷新一下啊

24:04.680 --> 24:05.980
false to false

24:07.080 --> 24:07.580
false

24:11.990 --> 24:12.690
就第二个

24:12.690 --> 24:14.490
我们传入的是一个new data

24:14.490 --> 24:16.990
原生了一个new data的一个实力啊

24:17.090 --> 24:17.690
那所以说呢

24:17.690 --> 24:19.090
他呢就检测到了

24:19.090 --> 24:20.390
剩下的都不对

24:20.390 --> 24:20.790
所以说呢

24:20.790 --> 24:22.590
都剩剩下的都是一个 false

24:23.090 --> 24:23.490
好

24:23.490 --> 24:24.090
这样的话

24:24.090 --> 24:26.690
那我们就把这个查询相应的

24:26.690 --> 24:27.590
这些方法呢

24:27.590 --> 24:29.090
都跟大家介绍完毕了

24:29.090 --> 24:29.890
那这节课呢

24:29.890 --> 24:31.090
咱们就说到这里

