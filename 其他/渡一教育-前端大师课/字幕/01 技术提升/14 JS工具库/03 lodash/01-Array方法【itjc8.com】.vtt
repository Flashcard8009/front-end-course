WEBVTT

00:00.620 --> 00:02.620
Hi 各位同学大家好

00:02.620 --> 00:04.060
欢迎来到独一教育

00:04.060 --> 00:06.060
我是讲师陈学辉

00:06.060 --> 00:06.940
那接下来呢

00:06.940 --> 00:08.540
咱们要学习的一套课程呢

00:08.540 --> 00:10.540
是loaddash的这套课程

00:10.540 --> 00:11.740
loaddash呢

00:11.740 --> 00:12.940
咱们要介绍一下

00:12.940 --> 00:14.540
它呢是一个扩展了

00:14.540 --> 00:18.140
JawScript内置对象方法的一个工具库

00:18.140 --> 00:18.940
注意啊

00:18.940 --> 00:20.380
它是一个工具库

00:20.380 --> 00:21.580
然后它呢

00:21.580 --> 00:24.140
对于我们呃这个内置对象

00:24.140 --> 00:26.940
像orea number of string objects

00:26.940 --> 00:28.380
faction mess等等

00:28.380 --> 00:29.740
这些内置对象呢

00:29.740 --> 00:31.900
进行了很丰富的一些扩展

00:31.900 --> 00:33.900
然后给他们又添加了

00:33.900 --> 00:37.100
以及重置了很多很多的一些方法

00:37.100 --> 00:38.140
这些方法呢

00:38.140 --> 00:40.940
它能够帮助咱们快速的去解决一些

00:40.940 --> 00:43.100
重复的复杂的一些问题

00:43.100 --> 00:43.500
所以啊

00:43.500 --> 00:45.260
它就是一个工具库

00:45.260 --> 00:48.220
就是用来帮助我们进行一个工作的

00:48.220 --> 00:48.860
目前呢

00:48.860 --> 00:51.340
大家所看到的这个loaddash.com

00:51.340 --> 00:51.740
这个呢

00:51.740 --> 00:54.060
是它的一个官方的网站

00:54.060 --> 00:56.540
然后这个官方的网站当中呢

00:56.540 --> 00:56.620
啊

00:56.620 --> 00:58.860
你看这个有这个github

00:59.180 --> 01:00.780
你们都可以去看一下啊

01:00.780 --> 01:01.340
以及呢

01:01.340 --> 01:03.180
相应的一些安装下载

01:03.180 --> 01:04.060
download的下载

01:04.060 --> 01:04.860
这是安装

01:04.860 --> 01:05.260
这个呢

01:05.260 --> 01:06.620
咱们就不再去说了啊

01:06.620 --> 01:07.500
然后另外一个

01:07.500 --> 01:09.020
这还有另外一个网站

01:09.020 --> 01:10.140
那这个网站呢

01:10.140 --> 01:11.420
是我找的

01:11.420 --> 01:12.300
那这个网站呢

01:12.300 --> 01:14.460
是咱们国内的一些小伙伴啊

01:14.460 --> 01:15.500
给翻译的啊

01:15.500 --> 01:16.300
因为

01:16.300 --> 01:17.820
估计大家跟我一样

01:17.820 --> 01:18.700
是不是看

01:18.700 --> 01:20.700
看这个英文有一些费劲啊

01:20.700 --> 01:21.100
随说呢

01:21.100 --> 01:23.420
就是找了一些这个中文的网站啊

01:23.420 --> 01:23.980
这样的话

01:23.980 --> 01:25.660
我们从这个中文的网站当中呢

01:25.660 --> 01:27.580
还能够去学习一下这个

01:27.580 --> 01:28.780
API啊

01:28.780 --> 01:30.140
那然后再来介绍一下

01:30.140 --> 01:31.260
他的一个历史啊

01:31.260 --> 01:32.380
就是一开始呢

01:32.380 --> 01:33.180
这个loads呢

01:33.180 --> 01:34.860
他其实跟另外一个酷啊

01:34.860 --> 01:35.340
这个

01:35.340 --> 01:36.300
他俩是一样的

01:36.300 --> 01:38.220
叫andsgo.js

01:38.220 --> 01:39.580
他们其实是一卷

01:39.580 --> 01:40.220
知道吧

01:40.220 --> 01:41.260
其实这个loads呢

01:41.260 --> 01:43.820
只是andsgo.js的一个分支

01:43.820 --> 01:44.620
然后之后呢

01:44.620 --> 01:45.500
就是

01:45.500 --> 01:46.060
这个东西呢

01:46.060 --> 01:47.020
发发展了

01:47.020 --> 01:47.580
是吧

01:47.580 --> 01:48.700
发展就是

01:48.700 --> 01:49.980
变得越来越成功了

01:49.980 --> 01:50.300
然后呢

01:50.300 --> 01:52.620
就取得了更大的一些成果

01:52.620 --> 01:53.180
嗯

01:53.180 --> 01:54.140
这个loads呢

01:54.140 --> 01:57.340
他的性能上远远超过了这个andsgo

01:57.340 --> 01:57.820
所以说呢

01:57.820 --> 01:58.300
就是

01:58.300 --> 01:59.900
后来他就独立了啊

01:59.900 --> 02:00.700
然后到现在

02:00.700 --> 02:02.540
其实很多很多的一些公司啊

02:02.540 --> 02:04.860
他们所使用的一些模块啊等等

02:04.860 --> 02:05.500
这些呢

02:05.500 --> 02:06.460
他们都放弃了

02:06.460 --> 02:07.980
这个原有的这个andsgo

02:07.980 --> 02:08.620
后来呢

02:08.620 --> 02:09.020
转

02:09.020 --> 02:12.060
转头到这个loads这个怀抱当中了

02:12.060 --> 02:12.540
所以说呢

02:12.540 --> 02:13.420
我们这个课程呢

02:13.420 --> 02:15.740
要去讲解一下这个loads啊

02:15.740 --> 02:16.780
那这个loads呢

02:16.780 --> 02:18.540
像这个gequery是一样的啊

02:19.660 --> 02:20.940
那我们的gequery呢

02:20.940 --> 02:23.500
他们是封装了一个全局的对象

02:23.500 --> 02:24.460
而这个loads呢

02:24.460 --> 02:27.260
他也是封装了一个全局的对象

02:27.260 --> 02:28.220
然后啊

02:28.220 --> 02:29.260
我们的gequery当中呢

02:29.260 --> 02:31.180
这个全局的对象是一个刀烙服

02:31.180 --> 02:31.660
是吧

02:31.660 --> 02:32.860
而loads当中呢

02:32.860 --> 02:35.420
这个全局对象就是一个下滑线

02:36.540 --> 02:37.740
就是这么一个东西啊

02:37.740 --> 02:39.340
不要看到这个东西

02:39.340 --> 02:40.220
这啥意思啊

02:40.220 --> 02:40.860
是吧

02:40.860 --> 02:42.540
咱在这解释一下啊

02:42.540 --> 02:42.780
好

02:42.780 --> 02:44.540
然后我们再来看这个文档啊

02:44.540 --> 02:45.820
API的这个文档

02:45.820 --> 02:47.020
然后这个文档当中呢

02:47.020 --> 02:47.980
能够显示出来

02:47.980 --> 02:48.700
这个loads呢

02:48.700 --> 02:50.460
他其实是封装了

02:50.460 --> 02:52.540
总共有13个类

02:52.540 --> 02:54.060
那这个13个类当中呢

02:54.060 --> 02:55.100
有咱们熟悉的

02:55.180 --> 02:56.700
像这个arria data

02:56.700 --> 02:58.300
faction等等这些东西

02:58.300 --> 02:59.740
是不是就是我们的

02:59.740 --> 03:00.460
ges

03:00.460 --> 03:02.940
他的原生的内置对象啊

03:02.940 --> 03:04.540
那他对于这些对象呢

03:04.540 --> 03:06.460
进行了一些扩展以及封装

03:06.460 --> 03:07.340
然后另外呢

03:07.340 --> 03:08.860
他还有一些自己的

03:08.860 --> 03:10.220
像这个collection啊

03:10.220 --> 03:10.620
然后呢

03:10.620 --> 03:12.060
这个什么呢seq啊

03:12.060 --> 03:12.780
等等这些

03:12.780 --> 03:15.100
就是他自己所封装的一些对象了

03:16.780 --> 03:18.300
那我们课程的内容呢

03:18.300 --> 03:20.220
就是说把这些对象呢

03:20.220 --> 03:20.860
跟大家呢

03:20.860 --> 03:21.660
去讲解一下

03:21.660 --> 03:23.340
他里头的一些方法

03:23.340 --> 03:24.220
那由于这个

03:24.220 --> 03:25.260
我们点开看一下啊

03:25.260 --> 03:27.020
你想这个arria对象当中呢

03:27.020 --> 03:27.740
这些方法

03:27.740 --> 03:29.900
以及其他的一些对象当中方法

03:29.900 --> 03:31.100
非常之多

03:31.100 --> 03:32.060
我们的课程呢

03:32.060 --> 03:34.620
是有这个时间的时间限制的

03:34.620 --> 03:35.020
所以说呢

03:35.020 --> 03:37.180
没有办法全部的详细的

03:37.180 --> 03:38.620
跟大家去讲完

03:38.620 --> 03:40.140
那我们这个课程呢

03:40.140 --> 03:42.060
是挑了一些常用的

03:42.060 --> 03:42.860
以及呢

03:42.860 --> 03:45.180
具有代表性的一些方法

03:45.180 --> 03:46.060
还有对象

03:46.060 --> 03:46.700
这些对象呢

03:46.700 --> 03:47.980
咱们也不会全部的去说

03:49.420 --> 03:50.460
挑出来一些呢

03:50.460 --> 03:52.140
作为我们的课程的内容

03:52.140 --> 03:53.900
剩下的这些东西呢

03:53.900 --> 03:55.500
你们听完这个课之后呢

03:55.500 --> 03:58.140
就会学会自己去查这个API的文档

03:58.140 --> 03:59.020
然后以及呢

03:59.020 --> 04:00.620
这个每一个方法

04:00.620 --> 04:01.180
后边你看

04:01.180 --> 04:02.940
他都有跟着一个例子

04:02.940 --> 04:04.460
我们其实从这个例子当中呢

04:04.460 --> 04:05.900
就能够看出来这个方法

04:05.900 --> 04:07.100
到底是

04:07.100 --> 04:08.700
具有什么样的作用

04:08.700 --> 04:09.100
懂吧

04:09.100 --> 04:09.580
所以啊

04:09.580 --> 04:10.620
我们还是那句话啊

04:10.620 --> 04:13.100
就是学要学一致用

04:13.100 --> 04:15.100
那么我们要学那个鱼

04:15.100 --> 04:16.060
三点水的鱼

04:16.060 --> 04:17.340
学的是方法

04:17.340 --> 04:20.300
而不是学没有三点水的那个鱼

04:20.300 --> 04:21.340
名词的那个鱼

04:21.340 --> 04:21.660
好吧

04:22.620 --> 04:24.220
那我们这节课呢

04:24.220 --> 04:24.860
就先来说

04:24.860 --> 04:25.340
第一个

04:25.340 --> 04:27.580
就是而瑞对象身上的这些方法

04:27.580 --> 04:29.340
那他身上的这些方法呢

04:29.340 --> 04:30.860
确实非常之多啊

04:30.860 --> 04:31.580
所以这节课呢

04:31.580 --> 04:33.020
咱们要花一些时间来

04:33.020 --> 04:33.740
嗯

04:33.740 --> 04:34.460
我们在这呢

04:34.460 --> 04:35.820
打开这个vscode的

04:35.820 --> 04:37.340
嘿嘿嘿

04:37.340 --> 04:37.980
什么情况啊

04:39.420 --> 04:42.140
然后我已经新建了这么一个啊

04:42.140 --> 04:43.020
文件啊

04:43.020 --> 04:43.980
而瑞的方法呢

04:43.980 --> 04:45.580
咱们就会放到这里啊

04:45.580 --> 04:45.980
然后呢

04:45.980 --> 04:47.500
另外说去说一下

04:47.500 --> 04:49.100
就是关于这个loads呢

04:49.100 --> 04:50.780
他就是跟几块是一样的

04:50.860 --> 04:51.980
你需要去download的一下

04:51.980 --> 04:53.820
或者说人家有cdn

04:53.820 --> 04:56.140
那么你去通过cdn去链接一下

04:56.140 --> 04:56.940
也ok啊

04:56.940 --> 04:57.580
我在这呢

04:57.580 --> 04:59.740
就已经提前已经download下来了

04:59.740 --> 05:00.780
然后这个文件呢

05:00.780 --> 05:02.140
是放在这个gs当中

05:02.140 --> 05:02.540
到时候呢

05:02.540 --> 05:03.740
我会发给大家

05:03.740 --> 05:05.020
你不想去下载的话

05:05.020 --> 05:06.860
你就用我这个就ok了

05:06.860 --> 05:07.580
好吧

05:07.580 --> 05:08.140
行来

05:08.140 --> 05:09.260
继续咱们说一下

05:09.260 --> 05:11.020
这个真正的一些方法啊

05:11.020 --> 05:12.140
那而瑞当中呢

05:12.140 --> 05:12.940
第一个方法呢

05:12.940 --> 05:13.740
就是这个

05:13.740 --> 05:14.460
嗯在这呢

05:14.460 --> 05:15.500
还有另外一点

05:15.500 --> 05:16.860
需要跟大家说一下

05:16.860 --> 05:18.060
由于时间的关系呢

05:18.060 --> 05:19.500
就是我们的文件当中呢

05:19.500 --> 05:21.100
不会有详细的注释

05:21.100 --> 05:21.580
但是呢

05:21.580 --> 05:22.540
你们放心啊

05:22.540 --> 05:24.380
我们我会在课后呢

05:24.380 --> 05:25.900
发给大家的这个文件

05:25.900 --> 05:27.100
是带有很详细

05:27.100 --> 05:28.780
很详细的一些注释的

05:28.780 --> 05:29.500
每一个方法

05:29.500 --> 05:30.860
他所代表的一些作用

05:30.860 --> 05:31.900
跟哪个方法相似

05:31.900 --> 05:33.580
我都会标的很清楚啊

05:33.580 --> 05:35.020
到时候你们拿到那个文件呢

05:35.020 --> 05:37.020
就可以做一个api的文档

05:37.020 --> 05:37.820
去参考了

05:39.580 --> 05:40.060
好

05:40.060 --> 05:40.860
第一个方法

05:40.860 --> 05:41.500
track

05:41.500 --> 05:42.380
那这个方法呢

05:42.380 --> 05:43.500
他是用来干嘛

05:43.500 --> 05:44.780
把我们的数组呢

05:44.780 --> 05:47.260
拆分成一个二位的一个数组

05:47.260 --> 05:47.660
然后呢

05:47.660 --> 05:48.860
他接收两个参数

05:48.940 --> 05:49.260
第一个呢

05:49.260 --> 05:50.860
就是你要拆分的这个数组

05:50.860 --> 05:51.580
第二个参数呢

05:51.580 --> 05:52.860
就是一个size

05:52.860 --> 05:53.660
那这个size呢

05:53.660 --> 05:55.100
其实就是一个什么呢

05:55.100 --> 05:56.700
我们要拆分成之后呢

05:56.700 --> 05:57.420
二位数组

05:57.420 --> 05:58.540
他的一个lens

05:58.540 --> 05:59.340
那在这呢

05:59.340 --> 06:00.620
大家看到这种写法

06:00.620 --> 06:02.620
其实就是一个可选的一个参数

06:02.620 --> 06:03.340
等于一呢

06:03.340 --> 06:03.980
其实也就是说

06:03.980 --> 06:05.580
他就是一个默认的值

06:05.580 --> 06:06.140
这个值呢

06:06.140 --> 06:07.020
就是一个一

06:07.020 --> 06:07.580
懂吧

06:07.580 --> 06:08.700
来我们看一下啊

06:10.460 --> 06:11.340
我直接呢

06:11.340 --> 06:12.460
convlog

06:12.460 --> 06:13.500
convlog之后呢

06:13.500 --> 06:14.140
啊

06:14.140 --> 06:15.340
下滑线一个点

06:16.620 --> 06:17.660
调这个方法

06:17.660 --> 06:18.140
注意啊

06:18.140 --> 06:19.100
这是他的一个预法

06:19.100 --> 06:19.740
好吧

06:19.740 --> 06:21.260
接收的第一个参数呢

06:21.260 --> 06:21.900
是一个数组

06:21.900 --> 06:22.140
是吧

06:22.140 --> 06:22.780
这个数组呢

06:22.780 --> 06:23.820
我就复制一下

06:23.820 --> 06:24.620
然后放到这

06:24.620 --> 06:25.500
第二个参数呢

06:25.500 --> 06:26.540
就是一个数字了

06:26.540 --> 06:27.180
这个数字呢

06:27.180 --> 06:29.020
就决定现在你要拆分的

06:29.020 --> 06:30.220
这个lens

06:30.220 --> 06:31.660
好打开页面

06:31.660 --> 06:32.220
控制台

06:33.420 --> 06:34.700
再来刷新一下

06:34.700 --> 06:35.340
看到没

06:35.340 --> 06:35.740
现在呢

06:35.740 --> 06:36.220
是不是说

06:36.220 --> 06:37.260
二位数组当中呢

06:37.260 --> 06:38.380
总共有两个

06:38.380 --> 06:39.020
re

06:39.020 --> 06:39.420
一个呢

06:39.420 --> 06:40.140
是ab

06:40.140 --> 06:40.460
然后呢

06:40.460 --> 06:41.660
另外一个是什么呢

06:41.660 --> 06:42.860
是cd啊

06:42.860 --> 06:43.260
在这呢

06:43.260 --> 06:44.300
我我我把这个呢

06:44.300 --> 06:45.100
给他复制一下

06:45.980 --> 06:46.300
这个呢

06:46.300 --> 06:47.660
就是第一个方法

06:47.660 --> 06:49.580
他就是用来拆分这个数组的

06:49.580 --> 06:50.300
你给三

06:50.300 --> 06:51.660
他就把这

06:51.660 --> 06:52.780
他就把这三个呢

06:52.780 --> 06:53.420
放在一起

06:56.700 --> 06:56.940
好

06:56.940 --> 06:58.060
然后呢

06:58.060 --> 06:58.620
继续啊

07:01.040 --> 07:01.360
来

07:01.360 --> 07:02.240
第二个方法

07:03.120 --> 07:04.400
是这个compact

07:04.400 --> 07:05.040
这个方法啊

07:07.410 --> 07:08.370
这个方法呢

07:08.370 --> 07:08.690
他呢

07:08.690 --> 07:09.730
是用来过滤

07:09.730 --> 07:10.210
过滤掉

07:10.210 --> 07:11.570
我们原来数组当中的

07:11.570 --> 07:13.490
这些非真的数据啊

07:13.490 --> 07:14.530
这个非真的数据

07:14.530 --> 07:15.010
要注意

07:15.010 --> 07:16.130
他其实是需要进行

07:16.130 --> 07:17.490
一个转换的

07:17.490 --> 07:18.530
compact

07:18.530 --> 07:19.810
比如说官方网站

07:19.810 --> 07:20.290
在这呢

07:20.370 --> 07:21.170
给了一些东西

07:21.170 --> 07:21.490
是不是

07:21.490 --> 07:22.050
这几个

07:22.050 --> 07:23.250
我们把它复制过来

07:23.250 --> 07:23.570
然后呢

07:23.570 --> 07:24.130
以及我

07:24.130 --> 07:25.250
我在这个里头呢

07:25.250 --> 07:27.090
在添加上一些啊

07:27.090 --> 07:28.450
像非真的一些数据

07:28.450 --> 07:29.970
其实就是转布耳直是吧

07:29.970 --> 07:30.450
比如说这个

07:30.450 --> 07:31.090
那

07:31.090 --> 07:31.490
然后呢

07:31.490 --> 07:32.610
n a n

07:32.610 --> 07:33.330
然后呢

07:33.330 --> 07:34.370
安地班的

07:34.370 --> 07:35.250
等等这些东西

07:35.250 --> 07:35.970
那我们来看一下

07:35.970 --> 07:37.810
他的最终的一个结果

07:37.810 --> 07:39.010
打印出来的一个值呢

07:39.010 --> 07:40.450
是123

07:40.450 --> 07:41.010
就表示啊

07:41.010 --> 07:41.570
现在呢

07:41.570 --> 07:43.010
他其实是把

07:43.010 --> 07:44.450
这个零 false

07:44.450 --> 07:45.490
以及这个空啊

07:45.490 --> 07:46.130
难啊

07:46.130 --> 07:46.850
这个n a n

07:46.850 --> 07:47.650
把他们几个呢

07:47.650 --> 07:48.770
全部干掉了

07:48.770 --> 07:49.970
因为他们转布耳直

07:49.970 --> 07:51.010
结果就是一个false

07:51.010 --> 07:51.650
所以说呢

07:51.650 --> 07:52.610
这个compact

07:52.610 --> 07:54.210
就是做这个作用啊

07:54.210 --> 07:54.530
好

07:54.530 --> 07:54.930
然后呢

07:54.930 --> 07:55.250
继续

07:56.370 --> 07:56.930
往下呢

07:56.930 --> 07:57.970
就是一个concat

07:57.970 --> 07:58.770
这个方法

07:58.770 --> 07:59.650
这个方法呢

07:59.650 --> 08:00.610
在我们的原生

08:00.610 --> 08:01.410
re那个对象

08:01.410 --> 08:02.130
内置对象

08:02.130 --> 08:03.090
re身上呢

08:03.090 --> 08:03.970
是有这个方法的

08:03.970 --> 08:05.330
跟他是一模一样的

08:05.330 --> 08:05.810
所以说呢

08:05.810 --> 08:06.530
这个方法

08:06.530 --> 08:08.210
我们就不再去说了啊

08:08.210 --> 08:08.930
然后往下

08:08.930 --> 08:09.730
我们要去说一下

08:09.730 --> 08:11.330
这个这个difference

08:11.330 --> 08:11.890
这个方法

08:14.300 --> 08:15.500
那这个方法呢

08:15.500 --> 08:17.420
他其实是用来干嘛的

08:17.420 --> 08:17.980
这个方法

08:17.980 --> 08:19.420
他其实是用来把

08:19.420 --> 08:21.020
我们数组当中的

08:21.020 --> 08:21.980
一些数据呢

08:21.980 --> 08:22.780
把它干掉

08:22.780 --> 08:24.140
那怎么去干掉呢

08:24.140 --> 08:25.420
他接受两个参数

08:25.420 --> 08:25.900
第一个呢

08:25.900 --> 08:27.180
就是你要干掉的

08:27.180 --> 08:27.900
那个数组

08:27.900 --> 08:28.300
然后呢

08:28.300 --> 08:28.780
第二个

08:28.780 --> 08:29.260
就是说

08:29.260 --> 08:29.980
你要这个

08:29.980 --> 08:31.260
干掉哪些数据

08:31.260 --> 08:31.980
也就是

08:31.980 --> 08:34.060
他会在这个数组当中呢

08:34.060 --> 08:36.300
把第二个数组当中的数据呢

08:36.300 --> 08:37.500
全部给他干掉

08:38.220 --> 08:38.620
这个呢

08:38.620 --> 08:40.220
就是他的一个方法了

08:40.220 --> 08:40.940
我们试一下啊

08:44.850 --> 08:46.210
点我直接复制了啊

08:46.210 --> 08:46.770
difference

08:47.810 --> 08:48.770
接受两个参数

08:48.770 --> 08:49.250
第一个

08:49.250 --> 08:51.010
你要干掉的那个方法

08:51.010 --> 08:51.650
比如说1

08:51.650 --> 08:52.130
3

08:52.130 --> 08:52.450
1

08:52.450 --> 08:52.690
1

08:52.690 --> 08:53.330
3吧

08:53.330 --> 08:53.810
3

08:53.810 --> 08:54.370
然后呢

08:54.370 --> 08:55.330
579

08:55.330 --> 08:56.370
我们给上一个单数

08:56.370 --> 08:56.770
是吧

08:56.770 --> 08:57.250
然后呢

08:57.250 --> 08:58.210
第二个里头呢

08:58.210 --> 08:59.650
给上一个3跟7

09:01.010 --> 09:01.490
好

09:01.490 --> 09:01.970
这样的话

09:01.970 --> 09:02.850
其实也就是说

09:02.850 --> 09:04.050
在这个数组当中呢

09:04.050 --> 09:05.730
把这个3和7干掉

09:05.730 --> 09:07.010
那剩下的是不是就是

09:07.010 --> 09:08.530
159啊

09:08.530 --> 09:09.810
来看一下打印的结果

09:09.810 --> 09:10.450
刷新一下

09:10.450 --> 09:11.490
就是一个159啊

09:13.170 --> 09:13.730
很简单吧

09:13.730 --> 09:14.610
这些方法

09:14.610 --> 09:15.250
这些方法呢

09:15.250 --> 09:17.090
其实大家看一下就知道

09:17.090 --> 09:17.890
difference

09:17.890 --> 09:18.770
好

09:18.770 --> 09:19.890
往下接着来

09:19.890 --> 09:20.930
difference

09:21.010 --> 09:21.890
那跟它类似的

09:21.890 --> 09:23.250
有一个difference by

09:23.250 --> 09:23.570
然后呢

09:23.570 --> 09:25.410
以及还有一个difference with

09:25.410 --> 09:25.970
也就是

09:25.970 --> 09:27.970
它后边添加了一个by

09:27.970 --> 09:29.970
以及添加了一个with

09:29.970 --> 09:30.370
好

09:30.370 --> 09:31.570
这两个东西呢

09:31.570 --> 09:32.210
我们在这呢

09:32.210 --> 09:33.730
要着重的去说一下

09:33.730 --> 09:34.370
往后

09:34.370 --> 09:35.730
很多很多的一些方法呢

09:35.730 --> 09:37.170
都会附属两个方法

09:37.170 --> 09:39.090
就是这个后边加上一个by

09:39.090 --> 09:40.610
以及加上一个with

09:40.610 --> 09:41.730
很多很多啊

09:41.730 --> 09:42.690
那我们在这呢

09:42.690 --> 09:44.850
就是咱们把在这

09:44.850 --> 09:46.530
咱解释一下这个by跟with

09:46.530 --> 09:47.410
它的一个意义

09:47.410 --> 09:47.970
然后呢

09:47.970 --> 09:48.610
在后边

09:48.610 --> 09:49.890
如果说再遇到之后呢

09:49.890 --> 09:50.530
咱们就过了

09:50.530 --> 09:51.490
就不再去说了

09:51.490 --> 09:53.090
他们所代表的一个意思呢

09:53.090 --> 09:54.530
都是一模一样的

09:54.530 --> 09:55.170
好不好

09:55.170 --> 09:56.130
来说一下啊

09:56.130 --> 09:58.370
先说一下这个difference by

09:58.370 --> 09:59.170
这个方法

09:59.170 --> 10:00.210
那这个方法呢

10:00.210 --> 10:02.690
它其实跟我们上边的那个difference

10:02.690 --> 10:03.490
那个方法

10:03.490 --> 10:04.690
是一模一样的

10:04.690 --> 10:06.290
只不过就是这个方法呢

10:06.290 --> 10:08.450
它能够再接受一个参数

10:08.450 --> 10:10.130
再接受一个什么参数呢

10:10.130 --> 10:10.850
这个参数呢

10:10.850 --> 10:12.210
是一个atree

10:12.210 --> 10:12.850
是一个什么呢

10:12.850 --> 10:14.530
是一个迭代器啊

10:14.530 --> 10:15.170
迭代器呢

10:15.170 --> 10:16.210
其实啊

10:16.210 --> 10:17.410
我们的es6当中呢

10:17.410 --> 10:18.850
有这么一个的概念啊

10:18.850 --> 10:19.490
迭代器

10:19.570 --> 10:20.290
那迭代器

10:20.290 --> 10:21.570
它的一个作用是啥呢

10:21.570 --> 10:22.290
就是说

10:22.290 --> 10:23.330
这个第三个

10:23.330 --> 10:24.210
是一个迭代器

10:24.210 --> 10:25.410
那这个迭代器呢

10:25.410 --> 10:28.050
会把我们这里头的每一个数据呢

10:28.050 --> 10:29.730
都进行一个便利

10:30.610 --> 10:31.570
然后呢便利

10:31.570 --> 10:32.290
便利之后呢

10:32.290 --> 10:32.610
干嘛

10:32.610 --> 10:33.250
要处理

10:33.250 --> 10:34.050
怎么去处理呢

10:34.050 --> 10:35.810
就是由它来决定的

10:35.810 --> 10:37.250
比如说官方网站

10:37.250 --> 10:37.650
在这呢

10:37.650 --> 10:38.530
给出的一个东西

10:38.530 --> 10:40.050
那就是一个mass.flow

10:40.050 --> 10:40.850
那什么意思呢

10:42.050 --> 10:42.770
就是说啊

10:42.770 --> 10:43.170
现在

10:43.170 --> 10:44.690
比如说我们把这个复制过来吧

10:44.690 --> 10:45.250
在这呢

10:45.250 --> 10:46.930
直接concel.log

10:48.130 --> 10:48.850
log它啊

10:48.930 --> 10:49.250
好

10:49.250 --> 10:50.450
在这儿解释一下

10:50.450 --> 10:51.650
那第三个参数呢

10:51.650 --> 10:52.290
就是一个

10:52.290 --> 10:53.010
迭代器了

10:53.010 --> 10:53.410
注意啊

10:53.410 --> 10:54.210
它是一个by

10:54.210 --> 10:54.770
是吧

10:54.770 --> 10:55.730
然后呢

10:55.730 --> 10:56.850
这个迭代器呢

10:56.850 --> 10:58.050
它是一个mass.flow

10:58.050 --> 10:58.930
mass.flow呢

10:58.930 --> 10:59.570
咱们都知道

10:59.570 --> 11:00.770
是我们数组当中的

11:01.890 --> 11:03.490
是我们的数学当中的一个

11:03.490 --> 11:04.530
向下取整的

11:04.530 --> 11:05.490
这么一个方法

11:05.490 --> 11:06.690
那意思就是说啊

11:06.690 --> 11:07.890
把所有的数据呢

11:07.890 --> 11:08.930
都会迭代一下

11:08.930 --> 11:09.330
干嘛

11:09.330 --> 11:10.130
然后呢

11:10.130 --> 11:12.050
全部的向下取整

11:12.050 --> 11:12.370
然后呢

11:12.370 --> 11:13.250
向下取整

11:13.250 --> 11:14.290
完了之后呢

11:14.290 --> 11:15.170
再去干嘛

11:15.170 --> 11:16.370
做这个difference

11:16.370 --> 11:17.170
它的事情

11:17.170 --> 11:18.450
它的事情是什么呢

11:18.450 --> 11:19.730
在这个数组当中呢

11:19.730 --> 11:21.010
把这个数据呢

11:21.010 --> 11:22.050
给它干掉

11:22.050 --> 11:23.810
那它的一个结果是啥呢

11:23.810 --> 11:24.850
我们先来说啊

11:24.850 --> 11:27.970
向下取整就变成了一个321了

11:27.970 --> 11:28.450
是吧

11:28.450 --> 11:28.770
这个呢

11:28.770 --> 11:30.050
是不是4跟2啊

11:31.650 --> 11:32.210
是不是

11:32.210 --> 11:33.170
然后这样的话

11:33.170 --> 11:33.810
你看啊

11:33.810 --> 11:34.450
它就能够

11:35.330 --> 11:36.210
查一下啊

11:36.210 --> 11:37.410
这里头是321

11:37.410 --> 11:38.610
这里头4跟2

11:38.610 --> 11:40.050
那那是不是这里头

11:40.050 --> 11:40.930
只有一个2跟

11:40.930 --> 11:41.890
它是相似的

11:41.890 --> 11:42.290
所以说呢

11:42.290 --> 11:44.210
就会把这个2给它干掉

11:44.210 --> 11:45.570
返回一个结果是啥呢

11:45.570 --> 11:46.850
是这个数组当中呢

11:46.930 --> 11:48.290
把第二个数据呢

11:48.290 --> 11:50.290
给它去掉就行了

11:50.290 --> 11:51.330
结果当中

11:51.330 --> 11:51.730
你看啊

11:51.730 --> 11:52.770
人家还是原来的数据

11:52.770 --> 11:53.410
你可不要说

11:53.410 --> 11:54.130
把人家

11:54.130 --> 11:55.730
这个小数点给人看掉了

11:55.730 --> 11:56.530
不是这样了

11:56.530 --> 11:58.130
那我们看一下打印的结果啊

11:58.130 --> 11:58.930
刷新一下

11:58.930 --> 11:59.890
是不是3.1

11:59.890 --> 12:00.610
1.3啊

12:00.610 --> 12:01.970
那明白这个意思了吧

12:01.970 --> 12:02.450
好

12:02.450 --> 12:02.690
它

12:03.490 --> 12:05.170
把这个小数点干掉是2

12:05.170 --> 12:05.970
它干掉之后呢

12:05.970 --> 12:06.450
也是2

12:06.450 --> 12:07.010
那所以说呢

12:07.010 --> 12:08.050
把这个数据呢

12:08.050 --> 12:08.770
给它去掉

12:08.770 --> 12:09.170
这个呢

12:09.170 --> 12:10.930
就是difference by

12:10.930 --> 12:12.290
它的一个意义啊

12:12.290 --> 12:12.530
好

12:12.530 --> 12:12.930
然后呢

12:12.930 --> 12:14.130
接下来咱们再来说这个

12:14.130 --> 12:15.490
difference with

12:16.450 --> 12:18.050
那这个difference with呢

12:18.050 --> 12:19.170
也是跟这个by呢

12:19.170 --> 12:20.130
是类似的

12:21.410 --> 12:22.210
只不过呢

12:22.210 --> 12:23.090
这个with呢

12:23.090 --> 12:24.290
它也是接收了一个

12:24.290 --> 12:25.170
第三个参数

12:25.170 --> 12:25.730
但是呢

12:25.730 --> 12:27.090
这个第三个参数呢

12:27.090 --> 12:28.850
它并不是一个迭代器

12:28.850 --> 12:29.410
是一个什么呢

12:29.410 --> 12:31.010
是一个比较器

12:31.010 --> 12:32.210
比较器的意思呢

12:32.210 --> 12:32.850
就是说

12:32.850 --> 12:34.610
我会把所有的数据呢

12:34.610 --> 12:36.450
都跟我进行一个对比

12:37.250 --> 12:38.370
都进行一个对比

12:38.370 --> 12:39.330
那我们把这个

12:39.330 --> 12:41.010
还是官方的这个拿过来

12:41.010 --> 12:42.130
咱演示一下啊

12:44.300 --> 12:44.780
这呢

12:44.780 --> 12:46.140
console.log

12:48.780 --> 12:49.100
来

12:49.100 --> 12:49.820
那什么意思呢

12:49.820 --> 12:50.700
你看第三个

12:50.700 --> 12:51.420
第一个参数呢

12:51.420 --> 12:52.060
就是上边

12:52.060 --> 12:52.380
这个呢

12:52.380 --> 12:52.860
有点长

12:52.860 --> 12:53.340
所以说呢

12:53.340 --> 12:54.060
生命了一个

12:54.060 --> 12:55.100
生命了一个变量

12:55.100 --> 12:55.580
然后呢

12:55.580 --> 12:56.460
第二个参数

12:56.460 --> 12:57.180
第二个参数呢

12:57.180 --> 12:58.300
是也是这么一个

12:58.300 --> 12:59.500
一种形式啊

12:59.500 --> 13:00.540
第三个参数呢

13:00.540 --> 13:01.100
是这个

13:01.100 --> 13:01.980
这个方法呢

13:01.980 --> 13:03.820
它也是我们的这个

13:03.820 --> 13:04.620
low-dash当中的

13:04.620 --> 13:05.500
一个方法

13:05.500 --> 13:06.140
这个方法

13:06.140 --> 13:07.100
它是用来干嘛

13:07.100 --> 13:08.140
它是用来比较

13:08.140 --> 13:08.860
两个数据

13:08.860 --> 13:10.140
是否相等的

13:10.140 --> 13:10.700
所以说呢

13:10.700 --> 13:11.020
就是

13:11.020 --> 13:11.820
它调用了

13:11.820 --> 13:12.780
第三个参数

13:12.860 --> 13:13.980
是一个比较器

13:13.980 --> 13:15.900
那刚好这个比较器的作用

13:15.900 --> 13:17.180
就是用来比较

13:17.180 --> 13:18.700
它俩是否相等

13:18.700 --> 13:19.260
那好

13:19.260 --> 13:20.140
那我们来看一下

13:20.140 --> 13:21.340
就是拿这个数据呢

13:21.340 --> 13:22.380
跟我们这个数据呢

13:22.380 --> 13:23.260
进行一个比

13:23.260 --> 13:23.900
相等吗

13:23.900 --> 13:24.940
其实是相等的

13:24.940 --> 13:25.660
所以说呢

13:25.660 --> 13:28.220
那就会把它干掉了

13:28.220 --> 13:28.620
然后呢

13:28.620 --> 13:29.980
这个跟它去比的话

13:29.980 --> 13:30.540
相等吗

13:30.540 --> 13:31.100
不相等

13:31.100 --> 13:31.740
所以说呢

13:31.740 --> 13:32.940
它留下来

13:32.940 --> 13:34.540
那其实这个最终

13:34.540 --> 13:35.820
返回出来的一个结果呢

13:35.820 --> 13:36.380
是什么呢

13:36.380 --> 13:37.100
是这个

13:37.100 --> 13:37.980
我们来看一下啊

13:37.980 --> 13:38.380
来走

13:39.420 --> 13:40.220
点开

13:40.220 --> 13:40.780
是不是

13:40.780 --> 13:42.140
二和一啊

13:42.140 --> 13:42.860
x

13:42.860 --> 13:43.340
y

13:43.340 --> 13:43.900
y

13:43.900 --> 13:44.300
对吧

13:44.300 --> 13:44.620
这个呢

13:44.620 --> 13:45.100
就是

13:45.100 --> 13:45.660
vase

13:45.660 --> 13:46.620
它的一个作用啊

13:46.620 --> 13:47.340
当然在这呢

13:47.340 --> 13:48.700
人家给的是一个比较

13:48.700 --> 13:49.420
那有的时候呢

13:49.420 --> 13:50.300
还可能比如说

13:50.300 --> 13:51.100
我要检测一下

13:51.100 --> 13:53.020
它的值是否大于它

13:53.020 --> 13:54.060
也是ok的

13:54.060 --> 13:55.100
那其实就是比嘛

13:55.980 --> 13:56.700
怎么比

13:56.700 --> 13:58.860
由这个方法来决定

13:58.860 --> 13:59.260
好吧

13:59.260 --> 13:59.820
这个呢

13:59.820 --> 14:01.260
difference by

14:01.260 --> 14:03.100
跟difference with

14:03.100 --> 14:04.140
它两个的意义呢

14:04.140 --> 14:05.340
咱们就说完了啊

14:06.620 --> 14:08.380
那再次强调一点吧

14:08.380 --> 14:08.940
这个by

14:08.940 --> 14:10.460
跟vase的这两种形式呢

14:10.460 --> 14:11.820
我们后面会频繁的

14:12.620 --> 14:13.660
他们的意思呢

14:13.660 --> 14:14.380
都是一样的

14:14.380 --> 14:15.580
再往后咱见到

14:15.580 --> 14:16.620
就不再去说了

14:16.620 --> 14:17.260
好不好

14:17.260 --> 14:17.660
来

14:17.660 --> 14:18.700
继续往下啊

14:18.700 --> 14:19.260
往下呢

14:19.260 --> 14:20.060
咱们要去说一下

14:20.060 --> 14:21.020
这个jope

14:21.020 --> 14:21.980
那这个jope呢

14:21.980 --> 14:23.100
它是什么意思呢

14:23.100 --> 14:23.500
就是

14:23.500 --> 14:24.060
它是

14:24.060 --> 14:25.100
其实用来是

14:25.100 --> 14:26.460
把我们数组当中的

14:26.460 --> 14:27.260
某些数据呢

14:27.260 --> 14:28.620
给它删掉的啊

14:28.620 --> 14:30.460
那它删掉的是啥呢

14:30.460 --> 14:30.940
就是

14:30.940 --> 14:31.580
它

14:31.580 --> 14:33.020
其实就是切掉吧

14:33.020 --> 14:35.180
把数组的前n位

14:35.180 --> 14:36.300
给它切掉

14:36.300 --> 14:40.270
jope

14:40.270 --> 14:43.060
log

14:43.060 --> 14:43.860
好

14:43.860 --> 14:44.660
这个里头呢

14:44.660 --> 14:46.100
我们放上一个数组啊

14:46.180 --> 14:47.300
放上这么一个数组

14:47.300 --> 14:47.780
a

14:47.780 --> 14:48.180
然后呢

14:48.180 --> 14:48.900
b

14:48.900 --> 14:49.700
然后c

14:49.700 --> 14:50.420
都好往了啊

14:52.340 --> 14:53.540
然后再来一个d

14:53.540 --> 14:54.660
再来一个e

14:54.660 --> 14:55.860
abcde

14:55.860 --> 14:57.060
总共五个数据

14:57.060 --> 14:57.540
是不是

14:57.540 --> 14:58.020
然后呢

14:58.020 --> 14:59.060
这是第一个参数

14:59.060 --> 15:00.740
就是你要去掉的那个数组

15:00.740 --> 15:01.620
原数组

15:01.620 --> 15:02.580
第二个参数呢

15:02.580 --> 15:03.780
就是一个数字了

15:03.780 --> 15:04.740
我们给上一个二

15:04.740 --> 15:05.460
就表示啊

15:05.460 --> 15:06.180
现在呢

15:06.180 --> 15:07.860
它会把这个数组当中的

15:07.860 --> 15:09.700
前两位数给它干掉

15:09.700 --> 15:10.580
剩下谁啊

15:10.580 --> 15:11.700
cde

15:11.700 --> 15:12.900
那我们看一下这个结果

15:12.900 --> 15:13.380
对不对啊

15:15.870 --> 15:16.590
cde

15:16.590 --> 15:16.910
来

15:16.910 --> 15:17.710
打印出的结果

15:17.710 --> 15:18.430
刷新一下

15:18.430 --> 15:19.630
就是一个cde

15:19.630 --> 15:20.270
这个东西呢

15:20.270 --> 15:21.230
超级简单

15:21.230 --> 15:21.790
你知道吗

15:21.790 --> 15:22.270
好

15:22.270 --> 15:22.830
jope

15:22.830 --> 15:24.110
它的一个作用啊

15:24.110 --> 15:24.430
好

15:24.430 --> 15:26.270
跟着jope有另外一个东西

15:26.270 --> 15:27.870
叫jope right

15:27.870 --> 15:29.070
那这个jope right呢

15:29.070 --> 15:29.870
其实这个

15:29.870 --> 15:30.430
这个

15:30.430 --> 15:32.510
我们往后也会经常的见得到

15:32.510 --> 15:33.950
它其实就是一个方向

15:33.950 --> 15:35.070
那方向就表示啊

15:35.070 --> 15:35.790
你看默认

15:35.790 --> 15:37.790
是不是把前两个干掉啊

15:37.790 --> 15:38.350
那如果说

15:38.350 --> 15:40.110
你要用这个jope right

15:40.110 --> 15:40.910
right的话

15:40.910 --> 15:42.270
那它干掉的是啥

15:42.270 --> 15:43.230
是后两位

15:43.230 --> 15:44.990
也就是abc留下来了

15:44.990 --> 15:46.750
把d跟e给它干掉了

15:46.750 --> 15:47.470
懂吗

15:47.470 --> 15:49.150
啊就是这么一个意思啊

15:49.150 --> 15:50.670
那这个这个right呢

15:50.670 --> 15:52.590
我们后边也会见到很多

15:52.590 --> 15:54.030
再见到的话

15:54.030 --> 15:55.470
我们就不再去说了啊

15:55.470 --> 15:56.670
jope right

15:56.670 --> 15:57.630
然后啊

15:57.630 --> 15:58.430
接下来呢

15:58.430 --> 15:59.870
就是jope will

15:59.870 --> 16:01.070
right will

16:01.070 --> 16:02.190
它加了一个well

16:02.190 --> 16:03.790
以及这有一个right will

16:03.790 --> 16:05.070
是不是看到right了啊

16:05.070 --> 16:05.470
然后呢

16:05.470 --> 16:06.670
这呢是一个well

16:06.670 --> 16:07.550
jope well

16:07.550 --> 16:08.110
这两个呢

16:08.110 --> 16:08.910
是什么意思呢

16:09.950 --> 16:10.590
这两个呢

16:10.590 --> 16:11.070
是这样的

16:11.070 --> 16:12.430
它其实是返回的

16:12.430 --> 16:14.670
就是从起点开始

16:14.670 --> 16:16.190
到第二个方法

16:16.270 --> 16:17.630
它接收第二个方法

16:17.630 --> 16:18.510
然后这个方法

16:18.510 --> 16:21.150
如果说返回的是一个假的数据

16:21.150 --> 16:21.630
然后呢

16:21.630 --> 16:22.910
就把它干掉

16:22.910 --> 16:24.430
这个跟谁一样啊

16:24.430 --> 16:25.870
跟我们的这个

16:25.870 --> 16:27.950
right对象身上有一个filter

16:28.830 --> 16:29.870
filter那个方法

16:29.870 --> 16:30.670
是一样的

16:30.670 --> 16:32.590
它其实是过滤的

16:32.590 --> 16:33.630
明白啥意思吗

16:33.630 --> 16:34.110
你看啊

16:34.110 --> 16:35.230
我们举一个例子啊

16:35.230 --> 16:35.830
嗯

16:35.830 --> 16:37.870
举这个jope这个well

16:37.870 --> 16:38.350
这个啊

16:38.350 --> 16:38.990
说一下啊

16:38.990 --> 16:39.470
你看

16:39.470 --> 16:40.030
它这呢

16:40.030 --> 16:40.590
有一个例子

16:40.590 --> 16:42.990
是不是return了一个o点active啊

16:42.990 --> 16:43.870
那这个o呢

16:43.870 --> 16:44.670
表示啥意思呢

16:44.670 --> 16:45.950
就说把所有的数据呢

16:45.950 --> 16:47.390
它其实也是一个迭代器

16:47.390 --> 16:48.910
就是把每一条数据呢

16:48.910 --> 16:50.590
都会传进来

16:50.590 --> 16:51.390
传进来之后呢

16:51.390 --> 16:51.790
你看

16:51.790 --> 16:52.750
o点active

16:52.750 --> 16:54.750
是不是每个都有一个active

16:54.750 --> 16:55.150
然后呢

16:55.150 --> 16:56.270
它取了一个反

16:56.270 --> 16:56.990
取了一个反

16:56.990 --> 16:57.470
第一个呢

16:57.470 --> 16:58.670
是不是变成一个处了

16:58.670 --> 17:00.270
第二个也变为一个处了

17:00.270 --> 17:00.670
然后呢

17:00.670 --> 17:02.590
第三个是不是变成一个false了

17:02.590 --> 17:02.990
好

17:02.990 --> 17:04.270
那记住它的一句话

17:04.270 --> 17:04.910
就说

17:04.910 --> 17:07.310
从起时点开始

17:07.310 --> 17:08.670
到到什么呢

17:08.670 --> 17:10.430
到这个方法

17:10.430 --> 17:13.230
返回的数据是一个假

17:13.230 --> 17:14.590
返回的是一个假的话

17:14.590 --> 17:16.590
是不是这条数据啊

17:16.590 --> 17:19.550
那就把假之前的这个数据呢

17:19.550 --> 17:20.510
统统干掉

17:20.510 --> 17:21.390
那最终呢

17:21.390 --> 17:22.110
这个结果呢

17:22.110 --> 17:24.350
就是仅仅剩这一条数据

17:25.630 --> 17:26.030
这个呢

17:26.030 --> 17:27.150
就是它的一个意思

17:27.150 --> 17:28.350
那right的意思呢

17:28.350 --> 17:28.830
是不是

17:28.830 --> 17:30.110
倒着循环啊

17:30.110 --> 17:30.670
倒着走

17:30.670 --> 17:30.990
这个呢

17:30.990 --> 17:32.030
是从上往下

17:32.030 --> 17:32.350
这个呢

17:32.350 --> 17:33.470
是从下往上

17:33.470 --> 17:34.590
或者说从左到右

17:34.590 --> 17:35.630
从右往左

17:35.630 --> 17:36.510
一个意思啊

17:36.510 --> 17:38.350
好招�well跟招�

17:38.350 --> 17:39.390
right wheel呢

17:39.390 --> 17:39.790
这个呢

17:39.790 --> 17:41.070
咱们就不再去说了啊

17:42.590 --> 17:42.990
好

17:42.990 --> 17:44.030
那继续往下

17:44.590 --> 17:45.310
往下呢

17:45.310 --> 17:47.310
咱们先去说那个啊

17:47.310 --> 17:48.590
先去说一个参

17:48.590 --> 17:49.150
一个方法

17:49.150 --> 17:49.630
叫take

17:50.430 --> 17:51.550
take这个方法

17:51.550 --> 17:52.750
那take这个方法呢

17:52.750 --> 17:54.590
他其实跟这个招铺这个方法

17:54.590 --> 17:55.630
是相反的

17:55.630 --> 17:56.030
走吧

17:56.030 --> 17:56.430
所以说呢

17:56.430 --> 17:57.790
我先去说他啊

17:57.790 --> 17:58.350
来take

18:02.580 --> 18:04.020
那这个take这个方法呢

18:04.020 --> 18:06.020
刚好是跟我们的这个啊

18:06.020 --> 18:07.700
招铺这个方法是相反的

18:07.700 --> 18:08.420
招铺呢

18:08.420 --> 18:10.100
他是删掉前恩位

18:10.100 --> 18:10.660
是不是啊

18:10.660 --> 18:11.620
而这个take呢

18:11.620 --> 18:12.580
他刚刚好

18:12.580 --> 18:13.380
是干嘛是

18:14.260 --> 18:15.700
提取前恩位

18:17.460 --> 18:18.820
来我们给上一个二

18:18.820 --> 18:19.940
看一下这个结果啊

18:19.940 --> 18:21.060
来刷新一下

18:21.060 --> 18:22.180
跟这个东西

18:22.180 --> 18:22.420
哎

18:22.420 --> 18:23.940
这个东西招铺

18:23.940 --> 18:24.260
哦

18:24.260 --> 18:24.900
这take

18:26.100 --> 18:27.380
我说为啥一样的啊

18:27.380 --> 18:28.500
再来看刷新一下

18:28.500 --> 18:28.980
有没有

18:28.980 --> 18:31.140
是不是刚刚好跟他是相反的

18:31.140 --> 18:31.540
他呢

18:31.540 --> 18:33.780
是把前边的a跟b呢

18:33.780 --> 18:34.900
给他删掉了

18:34.900 --> 18:35.540
而这个呢

18:35.540 --> 18:36.740
是把a跟b呢

18:36.740 --> 18:37.940
给他提取出来

18:37.940 --> 18:38.260
这样呢

18:38.260 --> 18:40.580
就是take他的一个作用啊

18:40.580 --> 18:40.900
好

18:40.900 --> 18:41.860
那take呢

18:41.860 --> 18:42.980
他也有相应的

18:42.980 --> 18:44.260
你看take right

18:44.260 --> 18:45.620
以及呢take right well

18:45.620 --> 18:47.940
以及呢take well

18:47.940 --> 18:48.980
那跟

18:48.980 --> 18:50.820
招铺是一模一样的

18:50.820 --> 18:51.700
我们在这呢

18:51.700 --> 18:53.460
就不再去说了啊

18:53.460 --> 18:53.780
好

18:53.780 --> 18:54.820
继续往下

18:54.820 --> 18:55.380
往下呢

18:55.380 --> 18:57.140
咱们再来说这个啊

18:57.140 --> 18:57.860
招铺well

18:57.860 --> 18:59.220
咱们接着上边去说

18:59.220 --> 19:00.420
说到这个field了

19:00.420 --> 19:01.220
那这个field呢

19:01.220 --> 19:01.700
是什么呢

19:01.700 --> 19:02.980
填充数组

19:02.980 --> 19:03.660
原生的

19:03.660 --> 19:05.380
而瑞对象身上也有一个field

19:05.380 --> 19:07.140
跟他是一模一样的啊

19:07.140 --> 19:09.140
然后就是founding index

19:09.140 --> 19:10.100
founding index呢

19:10.100 --> 19:10.820
也是一样的

19:10.820 --> 19:12.260
我们原生而瑞对象身上

19:12.260 --> 19:13.620
有这个方法

19:13.620 --> 19:13.940
他呢

19:13.940 --> 19:15.220
其实就是用来查什么呢

19:15.220 --> 19:17.300
查这个满足条件的那个数据

19:17.300 --> 19:18.900
所对应的一个损影值了

19:18.900 --> 19:19.220
好

19:19.220 --> 19:19.540
然后呢

19:19.540 --> 19:21.220
在这有一个last index

19:21.220 --> 19:23.380
那这个last index呢

19:23.380 --> 19:25.300
跟我们的这个founding index呢

19:25.300 --> 19:27.140
他刚刚是相反的

19:27.140 --> 19:27.540
他呢

19:27.540 --> 19:28.740
是从前往后找

19:28.740 --> 19:29.140
这个呢

19:29.140 --> 19:30.900
是从后往前找

19:32.180 --> 19:32.660
好

19:32.660 --> 19:33.300
再往下啊

19:33.300 --> 19:33.860
这些呢

19:33.860 --> 19:34.980
咱们就不说了啊

19:34.980 --> 19:36.580
那这个first这个东西呢

19:36.580 --> 19:37.780
我们放到这再去说

19:37.780 --> 19:38.340
先来说

19:38.340 --> 19:39.620
说一下这个flatten

19:39.620 --> 19:40.580
flatten

19:40.580 --> 19:41.300
flatten

19:41.300 --> 19:42.260
那这个flatten呢

19:42.260 --> 19:43.300
他是用来干嘛

19:43.300 --> 19:44.260
他是用来

19:44.340 --> 19:46.420
减少我们数组当中的

19:46.420 --> 19:47.540
浅套深度

19:52.690 --> 19:53.730
浅套深度

19:58.910 --> 19:59.390
他呢

19:59.390 --> 20:00.830
是用来减少

20:00.830 --> 20:02.830
减少一级浅套

20:02.830 --> 20:02.990
啊

20:02.990 --> 20:04.670
我们的数组浅套的深度

20:04.670 --> 20:06.670
跟我们的原生而瑞身上

20:06.670 --> 20:07.550
有一个flatten

20:07.550 --> 20:08.350
这个方法呢

20:08.350 --> 20:09.310
是相似的

20:09.310 --> 20:09.790
但是呢

20:09.790 --> 20:10.750
这个flatten呢

20:10.750 --> 20:12.430
他有好几种的形式

20:12.430 --> 20:13.390
那这个flatten呢

20:13.390 --> 20:15.070
他也是有好几种的形式

20:15.070 --> 20:15.630
我们在这呢

20:15.630 --> 20:16.590
去说一下啊

20:16.590 --> 20:18.670
来掉一下这个方法啊

20:18.670 --> 20:19.230
第一个呢

20:19.230 --> 20:20.110
接收一个参数

20:20.110 --> 20:20.670
这个参数呢

20:20.670 --> 20:21.710
就是一个数组

20:21.710 --> 20:22.670
然后给上一个a

20:22.670 --> 20:23.070
然后呢

20:23.070 --> 20:24.350
再浅套一级别

20:24.350 --> 20:25.230
这是b

20:25.230 --> 20:25.710
b呢

20:25.710 --> 20:27.150
再浅套一个级别

20:27.150 --> 20:28.590
再浅套一个级别

20:28.590 --> 20:29.390
是c

20:29.390 --> 20:31.150
c也要再浅套一个级别

20:31.150 --> 20:32.030
是d

20:33.150 --> 20:33.630
好

20:33.630 --> 20:35.710
浅套到这就够了啊

20:35.710 --> 20:36.270
你看

20:36.270 --> 20:37.790
总共浅套了

20:37.790 --> 20:39.150
一二三四

20:39.150 --> 20:40.590
总共有四层

20:40.590 --> 20:40.910
这个呢

20:40.910 --> 20:42.270
挺复杂这么一个数组

20:42.270 --> 20:42.830
是不是

20:42.830 --> 20:43.230
好

20:43.230 --> 20:44.510
那当我们直接去掉

20:44.510 --> 20:45.390
这个方法的时候

20:45.390 --> 20:45.950
我们看一下

20:45.950 --> 20:47.070
打印的一个结果啊

20:47.070 --> 20:48.430
刷新走着啊

20:48.430 --> 20:49.390
ab

20:49.390 --> 20:50.430
瑞一个二

20:50.430 --> 20:51.390
那这个时候呢

20:51.390 --> 20:51.870
注意啊

20:51.870 --> 20:52.430
有c

20:52.430 --> 20:52.830
是不是

20:52.830 --> 20:53.470
有d

20:53.470 --> 20:54.590
那其实b

20:54.590 --> 20:55.950
是不是不浅套了啊

20:55.950 --> 20:56.670
而我们在这

20:56.670 --> 20:57.070
这个b

20:57.070 --> 20:58.190
是不是也浅套了

20:58.190 --> 20:59.230
他其实相当于说

20:59.230 --> 21:00.510
把这个中扩号呢

21:00.510 --> 21:01.550
给他干掉了

21:01.550 --> 21:02.750
是不是就减少了

21:02.750 --> 21:03.710
一层浅套啊

21:04.830 --> 21:05.470
好

21:05.470 --> 21:05.870
这个呢

21:05.870 --> 21:06.910
就是他的一个作用

21:07.790 --> 21:08.510
然后呢

21:08.510 --> 21:09.790
以及这个方法呢

21:09.790 --> 21:11.950
还有几种表现的形式

21:11.950 --> 21:12.510
来

21:12.510 --> 21:12.910
这个

21:12.910 --> 21:13.310
第一个呢

21:13.310 --> 21:14.430
就是一个deep

21:15.870 --> 21:16.590
那deep呢

21:16.590 --> 21:16.990
这个呢

21:16.990 --> 21:17.550
我们看到

21:17.550 --> 21:17.950
deep

21:17.950 --> 21:19.470
其实就是一个深度

21:19.470 --> 21:20.110
深度的话

21:20.110 --> 21:21.550
其实就是往里头扎呗

21:22.030 --> 21:23.470
一个猛子扎到水里头啊

21:23.470 --> 21:24.430
他其实就说

21:24.430 --> 21:25.710
我们的数组呢

21:26.350 --> 21:27.070
这个方法

21:27.070 --> 21:28.510
他可以进行一个地规

21:28.510 --> 21:29.150
地规是不是

21:29.150 --> 21:30.590
一层一层往里头浅啊

21:30.590 --> 21:31.150
好

21:31.150 --> 21:31.950
地规的话

21:31.950 --> 21:32.350
然后呢

21:32.350 --> 21:35.230
其实他就能够把所有浅套的这个

21:35.790 --> 21:36.670
这个啊

21:36.670 --> 21:38.430
层给他全部的干掉

21:38.430 --> 21:39.550
你看变成了一个

21:39.550 --> 21:41.310
最终仅仅只有一层

21:42.270 --> 21:43.630
那这个方法啊

21:43.630 --> 21:44.430
他相当于

21:44.430 --> 21:46.110
我们原生方法当中的

21:46.110 --> 21:47.150
那个flight

21:47.150 --> 21:47.630
然后呢

21:47.630 --> 21:48.270
这个方法

21:48.270 --> 21:50.030
相当于我们原生当中的

21:50.030 --> 21:50.830
那个flight

21:50.910 --> 21:52.030
传了一个餐

21:52.030 --> 21:52.750
那个餐呢

21:52.750 --> 21:53.310
是啥

21:53.310 --> 21:54.190
infinity

21:54.190 --> 21:55.870
就是无限大的一个意思

21:56.750 --> 21:57.470
无穷大

21:58.430 --> 21:59.150
懂吗

21:59.150 --> 21:59.550
好

21:59.550 --> 22:00.510
这是deep

22:00.510 --> 22:00.910
对吧

22:00.910 --> 22:01.310
然后呢

22:01.310 --> 22:02.750
还有还有一个方法

22:04.270 --> 22:05.150
这个方法

22:05.150 --> 22:05.950
这个方法呢

22:05.950 --> 22:06.510
不

22:06.510 --> 22:06.830
这个

22:06.830 --> 22:07.550
这个

22:07.550 --> 22:07.950
这个

22:07.950 --> 22:08.670
debs

22:08.670 --> 22:09.550
这个方法

22:09.550 --> 22:10.430
那这个方法呢

22:10.430 --> 22:12.190
跟上边其实是类似的

22:12.190 --> 22:12.670
对吧

22:12.670 --> 22:13.310
但是呢

22:13.310 --> 22:15.150
他是接收两个参数

22:15.150 --> 22:15.310
啊

22:15.310 --> 22:15.790
第一个呢

22:15.790 --> 22:16.670
就是你要

22:16.670 --> 22:18.350
减少浅套的那个数组

22:18.350 --> 22:18.830
第二个呢

22:18.830 --> 22:19.310
就是

22:19.310 --> 22:21.150
你要减少浅套的

22:21.150 --> 22:22.030
层数

22:22.030 --> 22:22.510
那么

22:22.510 --> 22:24.030
或者说减少n层

22:24.030 --> 22:24.750
我们在这呢

22:24.750 --> 22:26.430
就能给他传了啊

22:26.430 --> 22:26.670
来

22:26.670 --> 22:27.630
比如说我们

22:27.630 --> 22:28.590
传一个二

22:28.590 --> 22:29.630
传一个二的话

22:29.630 --> 22:30.830
就表示现在呢

22:30.830 --> 22:33.230
要减少两层的浅套

22:33.230 --> 22:33.950
那再来看

22:33.950 --> 22:34.750
我们刷新一下

22:34.750 --> 22:35.310
走着

22:35.310 --> 22:36.510
谈出的一个结果

22:40.050 --> 22:41.250
来刷新走着啊

22:41.250 --> 22:41.730
你看

22:41.730 --> 22:43.170
是不是减少了两层

22:43.170 --> 22:43.970
总共有四层

22:43.970 --> 22:45.010
现在剩两层

22:45.010 --> 22:46.290
剩两层是不是abc

22:46.290 --> 22:47.010
以及呢

22:47.010 --> 22:47.890
第有一个

22:47.890 --> 22:49.250
剩下了就没有了

22:49.250 --> 22:49.650
这个呢

22:49.650 --> 22:50.770
就是用来减少

22:50.770 --> 22:53.090
我们浅套的一个层数啊

22:54.610 --> 22:55.250
好

22:55.250 --> 22:55.970
继续往下

22:57.330 --> 22:58.210
往下

22:58.210 --> 22:58.610
然后

22:59.970 --> 23:00.290
这个

23:00.290 --> 23:01.010
我们说完了

23:01.010 --> 23:01.650
说完之后呢

23:01.650 --> 23:03.090
就是这个from pass

23:03.090 --> 23:03.730
这个

23:03.730 --> 23:04.610
这个方法

23:04.610 --> 23:05.330
他是用来干嘛

23:06.370 --> 23:07.170
这个方法

23:07.170 --> 23:09.970
他是将我们的数组转换成一个对象

23:10.770 --> 23:11.730
他这个方法呢

23:11.730 --> 23:13.490
跟我们的这个object身上

23:13.490 --> 23:15.250
有一个from interest

23:15.250 --> 23:16.610
那个方法是一样的

23:16.610 --> 23:17.090
你们呢

23:17.090 --> 23:19.330
去了解一下那个方法就够了啊

23:19.330 --> 23:19.570
好

23:19.650 --> 23:20.050
然后呢

23:20.050 --> 23:20.530
往下

23:20.530 --> 23:22.370
我们去说一下这个hide

23:22.370 --> 23:23.410
那这个hide呢

23:23.410 --> 23:24.770
在这儿有一个first

23:24.770 --> 23:25.970
他的这种写法呢

23:25.970 --> 23:27.090
其实是啥意思啊

23:27.090 --> 23:28.850
就是first跟hide

23:28.850 --> 23:30.530
这两个是一个方法

23:30.530 --> 23:32.210
只不过说名字不一样

23:32.210 --> 23:33.650
你用哪个都可以

23:34.370 --> 23:35.330
那这个方法

23:35.330 --> 23:36.450
他是干嘛呢

23:36.450 --> 23:38.530
他是用来去取我们数组

23:38.530 --> 23:40.050
当中的第一位数据

23:41.250 --> 23:43.090
你看第一位数据

23:43.090 --> 23:44.370
那么其实啊

23:44.370 --> 23:45.090
就相当于说

23:45.090 --> 23:46.690
我们的下标为0呗

23:46.690 --> 23:47.410
就是这个数组

23:47.410 --> 23:48.930
我们给一个下标为0

23:48.930 --> 23:49.490
取到呢

23:49.490 --> 23:50.530
那个数据

23:50.530 --> 23:51.810
就是first

23:51.810 --> 23:53.090
以及hide

23:53.090 --> 23:54.690
那跟他还有一个对应的

23:54.690 --> 23:55.650
有一个last

23:55.650 --> 23:56.770
那这个last呢

23:56.770 --> 23:58.610
是不是取最后一位啊

23:58.610 --> 23:59.570
那就相当于

23:59.570 --> 24:01.010
我们使用原生的方法

24:01.010 --> 24:02.370
给上一个下标

24:02.370 --> 24:04.290
这个下标为愣死简衣

24:05.330 --> 24:06.530
一模一样

24:06.530 --> 24:07.250
好吧

24:07.250 --> 24:08.690
来hide last啊

24:08.690 --> 24:10.370
然后呢index of

24:10.370 --> 24:11.730
那index of这个呢

24:11.730 --> 24:13.490
是用来查找数据的

24:13.490 --> 24:13.970
是吧

24:13.970 --> 24:14.850
这个方法呢

24:14.850 --> 24:16.530
在我们的re对象身上呢

24:16.530 --> 24:17.570
也是有的啊

24:17.570 --> 24:19.570
他返回我们数据所对应了

24:19.570 --> 24:20.610
你查到那个数据

24:20.610 --> 24:22.130
所对应的一个索引值

24:22.130 --> 24:22.770
然后呢

24:22.770 --> 24:23.890
仅跟着后边呢

24:23.890 --> 24:26.050
是一个lastindex of

24:26.050 --> 24:27.090
那这个方法呢

24:27.090 --> 24:28.130
在我们的原生

24:28.130 --> 24:28.930
re身上呢

24:28.930 --> 24:29.490
也是有

24:29.490 --> 24:31.490
他就是从右边开始找

24:31.490 --> 24:32.050
好

24:32.050 --> 24:32.930
再往下这个呢

24:32.930 --> 24:34.050
咱们先不说啊

24:34.050 --> 24:35.890
我们说一下这个intel

24:35.890 --> 24:36.450
这个方法

24:40.910 --> 24:41.630
哪去了呢

24:42.670 --> 24:43.150
在这呢

24:44.430 --> 24:44.910
好

24:44.910 --> 24:45.870
这个方法啊

24:45.870 --> 24:47.070
那这个方法

24:47.070 --> 24:48.830
他是用来干嘛啊

24:48.830 --> 24:49.950
他是用来

24:49.950 --> 24:50.670
取

24:50.670 --> 24:51.870
这个数组当中呢

24:51.870 --> 24:53.710
除了最后一位数据

24:53.710 --> 24:55.310
剩下的所有的数据

24:55.310 --> 24:56.030
那你看啊

24:56.030 --> 24:58.030
这有一个官方的例子

24:58.030 --> 25:00.190
就是除了最后一位三

25:00.190 --> 25:01.950
剩下的全部的渠道

25:01.950 --> 25:02.510
然后呢

25:02.510 --> 25:03.710
其实也就相当于说

25:03.710 --> 25:04.990
把最后一位数据呢

25:04.990 --> 25:06.190
给他删掉

25:06.190 --> 25:06.910
那给

25:06.910 --> 25:08.590
最后一位数据删掉的话

25:08.590 --> 25:10.350
就相当于我们原生

25:10.350 --> 25:11.550
re对象身上的

25:11.550 --> 25:12.750
哪个方法呀

25:12.750 --> 25:14.190
pop那个方法

25:14.190 --> 25:14.910
那个方法呢

25:14.910 --> 25:16.590
就是把最后一位数据呢

25:16.590 --> 25:17.310
给他删掉

25:18.110 --> 25:18.590
好

25:18.670 --> 25:19.310
跟他

25:19.310 --> 25:20.750
有一个相对应的

25:20.750 --> 25:21.710
叫tel

25:21.710 --> 25:22.510
tel这个方法

25:23.230 --> 25:23.950
是这

25:23.950 --> 25:26.030
那这个tel这个方法相反

25:26.030 --> 25:27.310
他取的是啥呢

25:27.310 --> 25:28.910
就是除去第一位

25:28.910 --> 25:29.470
剩下的

25:29.470 --> 25:30.510
我全部的渠道

25:31.390 --> 25:32.430
那这个方法呢

25:32.430 --> 25:34.270
跟我们原生re对象身上

25:34.270 --> 25:35.470
哪个方法类似呢

25:35.470 --> 25:36.190
shift

25:36.190 --> 25:36.830
shift呢

25:36.830 --> 25:37.630
其实就是说

25:37.630 --> 25:39.150
把第零位数据呢

25:39.150 --> 25:40.110
给他干掉

25:40.110 --> 25:40.430
他呢

25:40.430 --> 25:42.190
跟我们的intel那个方法

25:42.190 --> 25:43.870
刚好是相反的

25:43.870 --> 25:44.670
跟这个方法

25:44.670 --> 25:45.550
是相反的

25:45.550 --> 25:46.110
好吧

25:46.110 --> 25:46.350
嗯

25:47.550 --> 25:47.950
行

25:47.950 --> 25:48.430
然后呢

25:48.430 --> 25:49.630
接着再往下说

25:49.630 --> 25:50.590
说这个方法

25:50.590 --> 25:51.550
那这个方法

25:51.550 --> 25:52.590
他是用来干嘛呢

25:52.590 --> 25:53.710
他是用来去取

25:53.710 --> 25:56.590
我们数组当中的交集的部分啊

25:56.590 --> 25:57.070
交集

25:57.070 --> 25:57.470
知道吧

25:57.470 --> 25:59.310
这是数学当中的这个概念啊

26:00.910 --> 26:01.150
来

26:01.150 --> 26:01.870
我们给上

26:01.870 --> 26:03.710
他里头可以传任意一个参数

26:03.710 --> 26:04.190
知道吗

26:04.190 --> 26:04.750
erase

26:04.750 --> 26:05.550
你看到没有

26:05.550 --> 26:06.190
erase

26:06.190 --> 26:07.070
就是说这里头呢

26:07.070 --> 26:09.390
你可以传任意的数据啊

26:09.390 --> 26:10.750
比如说我们传上一个

26:10.750 --> 26:11.710
这个是a

26:11.710 --> 26:12.030
然后呢

26:12.030 --> 26:12.830
这是一个b

26:12.830 --> 26:13.870
这是第一个数据

26:13.870 --> 26:14.270
然后呢

26:14.270 --> 26:15.230
第二个数据呢

26:15.230 --> 26:16.190
这是a

26:16.190 --> 26:16.670
错了啊

26:17.950 --> 26:18.670
第二个数据呢

26:18.670 --> 26:19.790
这是一个b

26:19.790 --> 26:20.510
然后呢

26:20.510 --> 26:20.990
接着呢

26:20.990 --> 26:21.630
是一个c

26:21.630 --> 26:22.990
这是第二个数据

26:22.990 --> 26:24.030
第三个数据呢

26:24.030 --> 26:24.990
再来上一个e

26:25.710 --> 26:27.150
跟上一个b

26:27.150 --> 26:27.390
好

26:27.950 --> 26:28.750
三个数组

26:29.470 --> 26:30.910
我们放到这个方法当中

26:30.910 --> 26:31.630
那我问一下

26:31.630 --> 26:33.630
他们三个交集是啥

26:33.630 --> 26:34.590
是不是这个b啊

26:35.230 --> 26:35.790
交集呢

26:35.790 --> 26:36.750
指的就是说

26:36.750 --> 26:38.350
他们相同的那个部分吧

26:38.350 --> 26:39.150
那这个方法呢

26:39.150 --> 26:41.150
就会把这个交集给他干掉

26:41.150 --> 26:41.950
干掉之后呢

26:41.950 --> 26:42.670
剩啥

26:42.670 --> 26:42.990
剩

26:43.470 --> 26:44.990
ac

26:44.990 --> 26:46.190
e

26:46.190 --> 26:46.910
剩这三个

26:46.990 --> 26:48.270
来看一下打印的结果

26:48.270 --> 26:49.070
刷新一下

26:49.070 --> 26:49.550
哎

26:49.550 --> 26:50.030
嗨

26:50.030 --> 26:50.670
不是啊

26:50.670 --> 26:52.590
这是人家取到这个什么呢

26:52.590 --> 26:53.150
交集啊

26:53.150 --> 26:54.750
不是把交集给他干掉啊

26:56.110 --> 26:56.510
好

26:56.510 --> 26:58.270
这是取交集啊

26:58.270 --> 26:58.990
取交集

26:58.990 --> 26:59.390
然后呢

26:59.390 --> 27:01.150
这个取交集的这个方法呢

27:01.150 --> 27:01.710
你看到没有

27:01.710 --> 27:03.230
它是不是有一个b的形式

27:03.230 --> 27:04.590
还有一还有一个什么呢

27:04.590 --> 27:05.630
wiss的形式

27:05.630 --> 27:06.830
那这个b的形式呢

27:06.830 --> 27:08.510
你看我们又一次见到了

27:08.510 --> 27:09.150
就是说

27:09.150 --> 27:11.070
他接收一个便利器

27:11.070 --> 27:11.950
所有的数据呢

27:11.950 --> 27:13.470
都会进行这个

27:13.470 --> 27:14.750
都会让这个便利器

27:14.750 --> 27:15.790
进行一个处理

27:15.790 --> 27:16.110
然后呢

27:16.110 --> 27:16.750
这个wiss呢

27:16.830 --> 27:18.190
他接收的是一个什么呢

27:18.190 --> 27:18.990
比较器

27:18.990 --> 27:19.710
所有的数据呢

27:19.710 --> 27:21.230
都会通过这个第三个

27:21.230 --> 27:22.110
比较的方式呢

27:22.110 --> 27:23.550
进行一个比较

27:23.550 --> 27:24.110
好吧

27:24.110 --> 27:25.070
所有的啊

27:25.070 --> 27:26.750
你看这个b跟wiss呢

27:26.750 --> 27:28.430
基本上都是一模一样的啊

27:28.430 --> 27:28.670
嗯

27:29.790 --> 27:30.910
那往下说啊

27:30.910 --> 27:31.950
这个join这个呢

27:31.950 --> 27:32.830
咱先不说

27:32.830 --> 27:35.070
我们先说一下这个方法

27:35.070 --> 27:36.350
有一个这个

27:36.350 --> 27:37.070
这个方法

27:37.070 --> 27:38.030
因为这个方法呢

27:38.030 --> 27:39.470
跟我们的这个方法呢

27:39.470 --> 27:40.510
是相对的

27:40.510 --> 27:40.990
它呢

27:40.990 --> 27:43.150
是取取我们数据的

27:43.150 --> 27:44.750
数组当中的这个交集

27:44.750 --> 27:45.230
是不是

27:47.470 --> 27:48.110
什么呢

27:48.110 --> 27:49.390
叫并集

27:49.390 --> 27:50.670
交集跟并集

27:50.670 --> 27:51.310
知道吧

27:51.310 --> 27:51.950
这个方法呢

27:51.950 --> 27:53.870
就是用来取并集

27:55.390 --> 27:56.590
那这个并集呢

27:56.590 --> 27:57.150
啥意思啊

27:57.870 --> 27:58.350
好

27:58.350 --> 27:58.750
这个并

27:59.470 --> 28:00.670
这个并集的意思呢

28:00.670 --> 28:02.030
就是说把数据呢

28:02.030 --> 28:03.470
全部的合并起来

28:03.470 --> 28:04.190
然后呢

28:04.190 --> 28:05.710
去掉重复的

28:05.710 --> 28:06.590
比如说第一个

28:06.590 --> 28:07.230
是一个二

28:07.230 --> 28:07.790
第二个呢

28:07.790 --> 28:08.990
是一个一和二

28:08.990 --> 28:10.510
那这个结果是啥

28:10.510 --> 28:11.630
把他俩合并起来

28:11.630 --> 28:13.310
把重复的去掉

28:13.310 --> 28:15.070
我们看打印出的一个结果啊

28:15.070 --> 28:15.950
是不是就是一个

28:16.030 --> 28:16.830
二跟一啊

28:17.870 --> 28:18.830
二跟一啊

28:18.830 --> 28:19.390
也就是

28:19.390 --> 28:19.950
这个二呢

28:19.950 --> 28:21.310
是不是就跟他重复了

28:21.310 --> 28:21.710
那ok

28:21.710 --> 28:22.510
把它干掉

28:22.510 --> 28:23.870
剩一个就ok了

28:23.870 --> 28:24.190
这个呢

28:24.190 --> 28:25.390
就是并集

28:26.350 --> 28:27.390
那这个并集呢

28:27.390 --> 28:28.670
也是有两个

28:28.670 --> 28:29.150
什么

28:29.150 --> 28:30.510
一个by的形式

28:30.510 --> 28:32.510
还有一个with的形式

28:32.510 --> 28:33.070
这呢

28:33.070 --> 28:34.510
我们就不再去重复的

28:34.510 --> 28:34.990
说了

28:34.990 --> 28:35.630
好不好

28:35.630 --> 28:36.030
然后呢

28:36.030 --> 28:36.910
再来

28:36.910 --> 28:38.590
就是刚才咱们说这个交集呢

28:38.590 --> 28:40.590
它是去取到这个交集

28:40.590 --> 28:41.070
是不是

28:41.070 --> 28:42.350
这是取取

28:42.350 --> 28:43.390
刚才说错了

28:43.390 --> 28:44.190
说还

28:44.190 --> 28:44.910
还还

28:44.910 --> 28:45.870
还以为它是

28:45.870 --> 28:46.510
它是什么呢

28:46.510 --> 28:47.630
它是把删掉

28:47.630 --> 28:48.190
是不是

28:48.190 --> 28:49.390
删掉交集部分呢

28:49.390 --> 28:51.310
其实是通过这个方法

28:51.310 --> 28:52.910
xor这个方法

28:53.790 --> 28:54.590
这个方法呢

28:54.590 --> 28:55.870
它是用来删掉

28:55.870 --> 28:57.230
我们的这个交集的啊

28:58.430 --> 28:59.710
那就把这个呢

28:59.710 --> 29:00.910
复制过来

29:00.910 --> 29:02.110
哎不是不是这个

29:02.110 --> 29:02.910
是这个啊

29:03.550 --> 29:04.110
是这个

29:05.310 --> 29:05.710
这呢

29:05.710 --> 29:06.910
方法换一下

29:06.910 --> 29:07.550
换完之后呢

29:07.550 --> 29:08.350
我们来看一下

29:08.350 --> 29:09.630
这个xor

29:09.630 --> 29:10.510
刷新一下

29:10.510 --> 29:12.350
是不是得出的一个结果呢

29:12.350 --> 29:13.070
是什么呢

29:13.070 --> 29:14.190
Ace啊

29:14.190 --> 29:15.710
它是不是把交集的部分呢

29:15.710 --> 29:16.590
给它干掉了

29:16.590 --> 29:16.990
这个呢

29:16.990 --> 29:18.350
是把交集的部分呢

29:18.350 --> 29:19.390
给提取出来

29:19.390 --> 29:19.710
这个呢

29:19.710 --> 29:21.630
是干掉交集的部分啊

29:21.630 --> 29:22.990
那这个xor

29:22.990 --> 29:23.790
同样的道理

29:23.790 --> 29:24.750
它会有一个

29:24.750 --> 29:25.870
BI的形式

29:25.870 --> 29:28.510
还有一集Waste的这个形式

29:28.510 --> 29:28.910
好

29:28.910 --> 29:30.190
那关于交集并集

29:30.190 --> 29:30.590
这块呢

29:30.590 --> 29:31.630
就算说完了

29:31.630 --> 29:32.190
说完之后呢

29:32.190 --> 29:33.870
继续咱们回到上边啊

29:33.870 --> 29:34.590
回到上边

29:34.590 --> 29:35.630
刚才咱们说到

29:35.630 --> 29:36.030
哪里呢

29:36.030 --> 29:36.590
说到这了

29:36.590 --> 29:37.150
是不是

29:37.150 --> 29:37.550
然后呢

29:37.550 --> 29:38.510
这个join

29:38.510 --> 29:39.470
那这个join呢

29:39.470 --> 29:40.350
就是它呢

29:40.350 --> 29:41.950
是把数组转成一个奏算

29:41.950 --> 29:42.590
这个方法呢

29:42.590 --> 29:43.390
我们原生的

29:43.390 --> 29:44.670
Rate对象也有

29:44.670 --> 29:45.550
所以在这呢

29:45.550 --> 29:46.990
就不再去说了啊

29:46.990 --> 29:47.710
不再去说

29:47.710 --> 29:49.230
往下这些都已经说过了

29:49.230 --> 29:51.150
说一下这个nth

29:51.150 --> 29:51.710
nice

29:51.710 --> 29:52.590
那这个东西呢

29:52.590 --> 29:53.150
是啥呢

29:53.150 --> 29:54.270
它是用来去取

29:54.270 --> 29:55.390
我们数组当中的

29:55.390 --> 29:56.590
某一个数据的

29:57.710 --> 29:58.830
某一个数据啊

29:58.830 --> 30:00.110
那这个某一个数据呢

30:00.110 --> 30:00.910
就是

30:00.910 --> 30:02.190
它其实就是

30:02.190 --> 30:03.550
跟我们那个通过下标

30:03.550 --> 30:04.590
去取某一个数据

30:04.590 --> 30:05.870
是一模一样的

30:05.870 --> 30:06.430
只不过呢

30:06.430 --> 30:07.550
就是说这个下标呢

30:07.550 --> 30:09.950
它其实是可以为一个复数的啊

30:09.950 --> 30:10.670
在这呢

30:10.670 --> 30:12.350
咱先把这个复制一下

30:14.780 --> 30:15.180
标一下

30:15.900 --> 30:16.620
然后

30:16.620 --> 30:19.020
把它的这个复制一下

30:19.020 --> 30:19.740
放到这

30:19.740 --> 30:20.700
然后我们console log

30:25.550 --> 30:26.510
log啊

30:26.510 --> 30:27.470
这个方法

30:27.470 --> 30:28.190
把这个方法

30:28.990 --> 30:29.550
复制一下

30:30.750 --> 30:31.230
放到这

30:32.350 --> 30:32.830
删除

30:32.830 --> 30:33.310
OK

30:33.310 --> 30:33.790
放到这

30:34.510 --> 30:34.830
行

30:34.830 --> 30:35.390
可以啊

30:35.390 --> 30:36.270
那你看啊

30:36.270 --> 30:36.910
这个Rate呢

30:36.910 --> 30:37.310
就是说

30:37.310 --> 30:38.110
我们要去处理的

30:38.110 --> 30:38.990
这么一个数组

30:38.990 --> 30:39.390
然后呢

30:39.390 --> 30:40.350
现在给上一个1

30:40.350 --> 30:41.710
那它取到的就是

30:41.710 --> 30:42.910
第一位数据

30:42.910 --> 30:43.550
你知道吧

30:43.550 --> 30:44.430
那我们看一下

30:44.430 --> 30:45.630
打印出的一个结果

30:45.630 --> 30:46.510
刷新一下

30:46.510 --> 30:47.150
这个结果呢

30:47.150 --> 30:47.630
是啥

30:47.630 --> 30:48.430
是一个B

30:48.430 --> 30:48.830
是吧

30:48.830 --> 30:49.550
放到这

30:49.550 --> 30:50.030
那就是

30:50.030 --> 30:50.430
你看

30:50.430 --> 30:51.950
其实就是这个下标嘛

30:51.950 --> 30:52.670
这是第一

30:52.670 --> 30:53.470
这是第零位

30:53.470 --> 30:54.270
它是第一位

30:54.270 --> 30:54.670
是吧

30:54.670 --> 30:55.070
好

30:55.070 --> 30:55.390
来

30:55.390 --> 30:55.710
这个

30:56.270 --> 30:56.510
这样

30:57.230 --> 30:58.190
咱这么来

30:58.190 --> 30:58.910
稍等

30:58.910 --> 30:59.870
我把这个格式呢

30:59.870 --> 31:00.510
调整一下啊

31:04.800 --> 31:05.120
好

31:05.120 --> 31:05.760
这是B

31:05.760 --> 31:06.240
是吧

31:06.240 --> 31:07.680
那还有同样的一个道理

31:07.680 --> 31:09.760
我们这是可以给上一个复数的

31:09.760 --> 31:10.320
你比如说

31:10.320 --> 31:11.120
给上一个复二

31:11.120 --> 31:12.000
那不要什么意思呢

31:12.000 --> 31:12.880
来刷新一下

31:12.880 --> 31:13.600
它有结果

31:13.600 --> 31:14.560
这个结果是啥

31:14.560 --> 31:15.440
是一个C

31:15.440 --> 31:16.000
啥意思啊

31:16.000 --> 31:16.480
就是

31:16.480 --> 31:17.200
复数呢

31:17.200 --> 31:18.080
倒着来

31:18.080 --> 31:18.560
但是

31:18.560 --> 31:20.080
复数没有复零啊

31:20.080 --> 31:21.280
就是直接就是复一

31:22.000 --> 31:22.720
复二

31:22.720 --> 31:23.920
你看复二对应的

31:23.920 --> 31:24.720
是不是C

31:24.720 --> 31:25.760
那这个B的话

31:25.760 --> 31:26.640
对应的是啥

31:26.640 --> 31:27.440
复三嘛

31:27.440 --> 31:28.240
来看一下

31:28.240 --> 31:28.640
刷新

31:28.640 --> 31:29.200
是不是

31:29.200 --> 31:30.160
复三

31:30.160 --> 31:30.560
好

31:30.560 --> 31:31.040
这样的话

31:31.040 --> 31:32.160
我们就取到

31:32.160 --> 31:33.440
相应的一个数据了

31:33.440 --> 31:33.760
这个呢

31:33.760 --> 31:35.840
其实就是通过下标去取

31:35.840 --> 31:37.680
取这个某一个数据啊

31:37.680 --> 31:39.200
它的这个方法的一个意义

31:41.040 --> 31:41.360
好

31:41.360 --> 31:41.920
再往下

31:42.640 --> 31:43.280
再往下呢

31:43.280 --> 31:45.360
接下来咱们要说的是这个破

31:45.360 --> 31:45.840
这个啊

31:45.840 --> 31:46.160
你看

31:46.160 --> 31:47.120
它有好几个

31:47.120 --> 31:47.680
是不是

31:47.680 --> 31:48.640
那这个破呢

31:48.640 --> 31:49.840
它是用来干嘛呢

31:49.920 --> 31:51.920
它是用来删除数组当中的

31:51.920 --> 31:52.880
某些数据的

31:53.520 --> 31:54.480
那这个方法

31:54.480 --> 31:54.880
你看啊

31:55.840 --> 31:56.480
我们在这

31:56.480 --> 31:57.040
你看

31:57.040 --> 31:57.840
它第一个呢

31:57.840 --> 31:58.480
就是一个破

31:58.480 --> 31:58.960
是不是

31:58.960 --> 32:00.080
传了一个二跟三

32:00.080 --> 32:00.640
那就表示

32:00.640 --> 32:01.760
把这个数组当中的

32:01.760 --> 32:03.200
这个二跟三给它删掉

32:03.200 --> 32:04.000
其实这个方法呢

32:04.000 --> 32:05.120
跟我们后边那个

32:05.120 --> 32:06.400
通过remove这个方法

32:06.400 --> 32:07.360
就能够实现啊

32:07.360 --> 32:08.480
咱简单的去说一下

32:08.480 --> 32:09.600
就不再去写了

32:09.600 --> 32:10.000
好

32:10.000 --> 32:11.520
那把二跟三删掉

32:11.520 --> 32:13.040
是不是一剩剩下

32:13.040 --> 32:13.280
是吗

32:13.280 --> 32:14.240
剩下一了

32:14.240 --> 32:15.440
然后这个O的话

32:15.440 --> 32:16.000
啥意思呢

32:16.000 --> 32:17.200
就是它第二个参数

32:17.200 --> 32:18.080
是一个数组

32:18.080 --> 32:18.960
这两个方法

32:19.040 --> 32:19.920
是不是跟我们

32:20.640 --> 32:21.920
函数当中的那个

32:21.920 --> 32:22.560
call

32:22.560 --> 32:24.240
以及play那个方法

32:24.240 --> 32:25.520
有点类似呀

32:25.520 --> 32:25.920
他们的

32:26.480 --> 32:27.120
函数所

32:27.120 --> 32:28.160
传的一个参数

32:28.160 --> 32:28.800
你看

32:28.800 --> 32:29.200
这个呢

32:29.200 --> 32:30.080
是一个数组

32:30.080 --> 32:30.560
对吧

32:30.560 --> 32:31.920
应该是一模一样的啊

32:31.920 --> 32:32.320
然后呢

32:32.320 --> 32:32.720
接下来

32:32.720 --> 32:34.320
它就有一个by的这个方法

32:34.320 --> 32:35.440
以及还有一个什么呢

32:35.440 --> 32:36.960
waste的这个方法

32:36.960 --> 32:37.280
是吧

32:37.280 --> 32:39.200
都有这个方法啊

32:39.200 --> 32:39.760
最关键

32:39.760 --> 32:40.400
还有它

32:40.400 --> 32:42.240
还有一个ight的这个方法

32:42.240 --> 32:43.760
那这个ight这个方法呢

32:43.760 --> 32:44.480
就是前面

32:44.480 --> 32:45.200
我们是传的

32:45.200 --> 32:46.640
就是实际的数据

32:46.640 --> 32:47.680
那数据与对比

32:47.680 --> 32:48.720
把数据删掉

32:48.720 --> 32:49.760
那这个ight的方法

32:49.760 --> 32:50.560
传的是啥

32:50.560 --> 32:51.520
是一个锁印值

32:51.520 --> 32:53.200
它会把这个锁对应的

32:53.200 --> 32:54.560
一个锁印值的数据呢

32:54.560 --> 32:55.440
给它干掉

32:55.440 --> 32:57.600
你看这个10干掉了吧

32:57.600 --> 32:58.160
是不是啊

32:58.160 --> 32:58.560
然后呢

32:58.560 --> 32:58.880
这个呢

32:58.880 --> 32:59.680
是啊

32:59.680 --> 33:01.040
3是20

33:01.040 --> 33:01.920
把20干掉

33:01.920 --> 33:04.560
剩剩下的就是5跟15了啊

33:04.560 --> 33:04.800
好

33:05.920 --> 33:06.640
然后下边

33:06.640 --> 33:07.440
我们也要说一下

33:07.440 --> 33:08.960
这个remove这个方法啊

33:08.960 --> 33:10.720
就是por的那些功能呢

33:10.720 --> 33:11.840
通过这个remove呢

33:11.840 --> 33:12.560
也是一样

33:12.560 --> 33:14.080
可以去实现的啊

33:14.080 --> 33:14.880
实现的

33:14.880 --> 33:15.840
那实现的话

33:15.840 --> 33:17.920
来咱们就直接在这写吧

33:17.920 --> 33:18.400
remove

33:18.800 --> 33:19.920
这个remove呢

33:19.920 --> 33:21.440
它能够实现是由于啊

33:21.440 --> 33:23.280
它接收了一个参数

33:23.280 --> 33:24.640
这个参数是啥呢

33:24.640 --> 33:25.280
这个参数呢

33:25.280 --> 33:26.000
是一个

33:26.000 --> 33:26.480
呃

33:26.480 --> 33:27.440
其实就类似于

33:27.440 --> 33:29.120
迭代器的那种形式啊

33:29.120 --> 33:32.240
我们给上一个abcde啊

33:32.240 --> 33:35.920
这个abcde啊

33:35.920 --> 33:36.640
在这呢

33:36.640 --> 33:37.440
ar啊

33:37.440 --> 33:38.880
等于这个值

33:38.880 --> 33:39.280
然后呢

33:39.280 --> 33:42.720
接下来直接点remove

33:42.720 --> 33:43.840
然后第一个参数呢

33:43.840 --> 33:44.320
是啥

33:44.320 --> 33:44.880
ar啊

33:44.880 --> 33:46.560
就是你要处理的那个数组

33:46.560 --> 33:47.360
第二个参数呢

33:47.360 --> 33:48.240
是一个faction

33:48.240 --> 33:49.120
那这个faction呢

33:49.200 --> 33:50.400
它接收三个参数

33:50.400 --> 33:50.800
第一个呢

33:50.800 --> 33:51.200
是什么呢

33:51.200 --> 33:51.760
是value

33:51.760 --> 33:52.880
就是你要传进去的

33:52.880 --> 33:53.920
每一个数据

33:53.920 --> 33:54.560
然后第二个呢

33:54.560 --> 33:55.280
就是index

33:55.280 --> 33:55.920
每一个数据

33:55.920 --> 33:57.360
所对应的一个所有影子

33:57.360 --> 33:58.880
第三个就是ar

33:58.880 --> 33:59.520
就是ar呢

33:59.520 --> 34:00.880
对应的其实就是这个

34:00.880 --> 34:01.920
数组本身

34:01.920 --> 34:03.920
那你看到的这种形式

34:03.920 --> 34:05.360
有没有四层相识呢

34:05.360 --> 34:06.080
是不是跟我们呢

34:06.080 --> 34:06.960
这个啊

34:08.160 --> 34:09.360
ar身上的那个

34:10.400 --> 34:11.680
那个那个叫什么呢

34:11.680 --> 34:12.800
叫for each

34:12.800 --> 34:14.720
以及my filter

34:14.720 --> 34:15.440
他们

34:15.440 --> 34:16.720
第二个参数

34:16.720 --> 34:17.840
是不是这种形式啊

34:18.560 --> 34:19.040
好

34:19.040 --> 34:20.720
它其实云法也一样啊

34:20.720 --> 34:21.280
这里头呢

34:21.280 --> 34:22.080
我们直接return

34:22.080 --> 34:22.720
return什么呢

34:22.720 --> 34:24.240
return一个index

34:25.840 --> 34:26.560
达于ar

34:27.200 --> 34:28.000
那什么意思啊

34:29.120 --> 34:29.600
就是说

34:29.600 --> 34:30.720
现在我要过滤

34:30.720 --> 34:31.600
就是删除

34:31.600 --> 34:32.720
我要把所有影子

34:32.720 --> 34:34.240
超过2的这些数据呢

34:34.240 --> 34:35.120
就是他们三

34:35.120 --> 34:36.240
全部的干掉

34:36.240 --> 34:37.040
干掉完之后呢

34:37.040 --> 34:38.160
我们再来看一下

34:38.160 --> 34:39.280
它呢跟

34:39.280 --> 34:39.920
跟我们

34:39.920 --> 34:40.880
还有另外一个方法

34:40.880 --> 34:41.840
有一些区别啊

34:41.840 --> 34:42.800
来先来说一下

34:42.800 --> 34:43.280
刷新

34:43.280 --> 34:45.120
看一下得出的一个结果呢

34:45.120 --> 34:46.080
是一个abc

34:46.080 --> 34:46.720
知道吧

34:46.720 --> 34:47.600
那其实也就说

34:47.920 --> 34:48.720
它改变了

34:48.720 --> 34:50.240
我们原数组

34:50.240 --> 34:50.960
那现在呢

34:50.960 --> 34:52.240
它干掉的是啥

34:52.240 --> 34:53.120
干掉的就是

34:53.120 --> 34:54.240
原数组当中呢

34:54.240 --> 34:55.440
这个第根异

34:55.440 --> 34:55.840
是不是

34:55.840 --> 34:57.440
这是012

34:57.440 --> 34:58.720
2人家没有等于啊

34:58.720 --> 34:59.120
所以说呢

34:59.120 --> 35:00.240
是不是第根异

35:00.240 --> 35:01.360
它的尺寸呢

35:01.360 --> 35:02.000
要大

35:02.000 --> 35:02.560
大于2

35:02.560 --> 35:03.440
不是尺寸啊

35:03.440 --> 35:04.400
是那个缩影值

35:04.400 --> 35:05.280
要大于2

35:05.280 --> 35:07.120
就把他们给干掉了

35:07.120 --> 35:08.320
那其实这个方法呢

35:08.320 --> 35:08.800
里头呢

35:08.800 --> 35:10.160
你就可以任意的

35:10.160 --> 35:10.960
进行一个数据

35:10.960 --> 35:12.000
逻辑的一个处理了

35:12.000 --> 35:12.560
是不是

35:12.560 --> 35:13.920
非常之多啊

35:13.920 --> 35:14.400
好吧

35:14.400 --> 35:15.600
这是remove啊

35:15.600 --> 35:16.000
然后呢

35:16.000 --> 35:16.400
接着呢

35:16.400 --> 35:16.640
再来

35:16.640 --> 35:17.200
我们说一下

35:17.200 --> 35:18.240
这个vizout

35:18.240 --> 35:19.040
vizout

35:19.040 --> 35:20.080
vizout

35:20.080 --> 35:20.720
vizout呢

35:20.720 --> 35:21.760
跟它是类似的

35:22.880 --> 35:23.680
vizout

35:23.680 --> 35:25.040
那这个vizout呢

35:25.040 --> 35:26.000
它也是根据

35:26.000 --> 35:27.280
我们给的一个参数呢

35:27.280 --> 35:28.400
把原数组当中的

35:28.400 --> 35:29.200
这个数据呢

35:29.200 --> 35:30.160
给它删掉

35:30.160 --> 35:30.480
它呢

35:30.480 --> 35:32.080
其实跟我们的这个remove呢

35:32.080 --> 35:32.640
是一样的

35:32.640 --> 35:33.920
但是唯一的一个区别呢

35:33.920 --> 35:34.720
就在于

35:34.720 --> 35:36.240
原数组有没有变

35:36.240 --> 35:36.800
知道吧

35:36.800 --> 35:37.040
好

35:37.040 --> 35:38.000
我们复制一下

35:42.180 --> 35:42.580
这样吧

35:43.460 --> 35:43.700
来

35:43.700 --> 35:44.420
直接复制啊

35:47.650 --> 35:48.370
复制这个

35:48.370 --> 35:49.650
vizout

35:49.650 --> 35:50.210
vizout

35:51.330 --> 35:52.050
然后这个尺呢

35:52.050 --> 35:53.010
我们改成它

35:53.010 --> 35:53.810
改成它之后呢

35:53.810 --> 35:54.690
我们再来看这个

35:54.690 --> 35:56.610
ARR来刷新走一下

35:56.610 --> 35:57.250
看到没有

35:57.250 --> 35:57.730
现在呢

35:57.730 --> 35:59.490
这个值是不是就没有变啊

35:59.490 --> 36:00.370
没有变

36:00.370 --> 36:00.850
没有变

36:00.850 --> 36:01.330
然后呢

36:01.330 --> 36:01.810
接着呢

36:01.810 --> 36:03.010
我们在这啊

36:03.010 --> 36:03.890
嗯

36:03.890 --> 36:07.010
我们应该concel log

36:07.010 --> 36:08.930
这样咱咱不用这个方法了

36:08.930 --> 36:09.970
不用这个方法

36:09.970 --> 36:10.450
我们这样

36:12.670 --> 36:13.550
直接concel log

36:14.430 --> 36:15.870
concel log在这呢

36:15.870 --> 36:18.110
vizout

36:18.110 --> 36:19.070
我们去调

36:19.070 --> 36:20.030
调这个方法

36:20.030 --> 36:20.830
然后呢

36:20.830 --> 36:21.710
第一个ARR

36:21.710 --> 36:22.190
第二个呢

36:22.190 --> 36:23.070
我们传

36:23.070 --> 36:23.630
直接传

36:23.630 --> 36:24.590
你要删除谁

36:24.590 --> 36:25.070
是不是

36:25.070 --> 36:25.950
删除一个b

36:25.950 --> 36:26.430
然后呢

36:26.430 --> 36:28.510
再来删除一个c

36:29.390 --> 36:30.190
删除一个c

36:30.190 --> 36:30.350
啊

36:32.030 --> 36:32.830
删除完之后呢

36:32.830 --> 36:33.870
我们把ARR呢

36:33.870 --> 36:35.150
也也给它打印出来

36:35.150 --> 36:35.710
再来看啊

36:35.710 --> 36:36.670
刷新一下

36:36.670 --> 36:37.630
那上边呢

36:37.630 --> 36:39.630
显示的是删除的那个值

36:39.630 --> 36:40.430
然后下边呢

36:40.430 --> 36:40.910
就是说

36:40.910 --> 36:41.790
我们现在这个

36:41.790 --> 36:42.750
原数组

36:42.750 --> 36:43.310
是不是

36:43.310 --> 36:44.110
原数组

36:44.110 --> 36:44.590
你看

36:44.590 --> 36:45.310
原数组呢

36:45.310 --> 36:47.150
现在是不是压根就没有变啊

36:47.150 --> 36:48.430
而我们的这个a

36:48.430 --> 36:49.790
这个remove删除的

36:49.790 --> 36:50.590
你看原数组

36:50.590 --> 36:51.470
是不是已经变了呀

36:52.030 --> 36:52.430
这个呢

36:52.430 --> 36:54.030
就是它俩的一个区别啊

36:54.030 --> 36:54.510
vizout

36:57.660 --> 36:58.460
继续往下说

36:59.500 --> 37:00.140
往下说

37:00.140 --> 37:00.860
往下说

37:00.860 --> 37:01.420
然后呢

37:01.420 --> 37:03.180
咱们接下来要该说的是

37:04.060 --> 37:05.260
说的是这个啊

37:05.260 --> 37:06.300
刚才说了remove

37:06.300 --> 37:06.620
然后呢

37:06.620 --> 37:07.740
说一下reverse

37:07.740 --> 37:08.380
reverse呢

37:08.380 --> 37:09.820
就是颠倒数组

37:09.820 --> 37:11.740
原生的array身上也有

37:11.740 --> 37:12.140
然后呢

37:12.140 --> 37:13.100
以及slice呢

37:13.100 --> 37:13.900
删除

37:13.900 --> 37:14.940
结取数组

37:14.940 --> 37:16.220
原生的array身上呢

37:16.220 --> 37:16.860
也会有

37:16.860 --> 37:17.340
是吧

37:17.340 --> 37:17.820
然后呢

37:17.820 --> 37:19.340
从这开始到这

37:19.340 --> 37:19.900
这几个呢

37:19.900 --> 37:20.780
是关于排序的

37:20.780 --> 37:21.340
这个排序

37:21.340 --> 37:22.460
并不是大家所想的

37:22.460 --> 37:23.340
那个排序啊

37:23.420 --> 37:25.100
它其实是要往里头去

37:25.100 --> 37:26.300
插入一些数据

37:26.300 --> 37:27.420
进行一个排序

37:27.420 --> 37:28.060
所以说呢

37:28.060 --> 37:28.700
意义不大啊

37:28.700 --> 37:29.180
我们

37:29.180 --> 37:30.780
我们基本上用不到

37:30.780 --> 37:31.180
然后

37:31.180 --> 37:32.700
往下我们说这个啊

37:32.700 --> 37:33.340
这几个呢

37:33.340 --> 37:34.060
已经说过了

37:34.060 --> 37:34.460
说它

37:34.460 --> 37:34.940
说它

37:34.940 --> 37:35.740
它是啥呢

37:35.740 --> 37:37.820
它是用来去重的

37:37.820 --> 37:38.700
哎这个东西呢就

37:39.500 --> 37:40.060
数组

37:40.060 --> 37:40.780
是不是经常

37:41.500 --> 37:42.860
说到这个去重呀

37:46.050 --> 37:46.930
去重啊

37:46.930 --> 37:47.250
好

37:47.250 --> 37:47.970
这个方法啊

37:49.250 --> 37:50.610
那就直接concelog

37:53.710 --> 37:54.430
去重

37:54.430 --> 37:56.190
去我去掉一下

37:56.190 --> 37:57.310
这个方法

37:57.390 --> 37:58.350
然后这个里头呢

37:58.350 --> 37:58.590
比如说

37:58.590 --> 37:59.790
我们给上一个数组

37:59.790 --> 38:00.510
这个数组呢

38:00.510 --> 38:01.470
是一二

38:01.470 --> 38:01.870
然后呢

38:01.870 --> 38:02.670
二一

38:02.670 --> 38:03.950
二一

38:03.950 --> 38:05.150
然后看一下这个结果

38:05.950 --> 38:06.670
来

38:06.670 --> 38:07.630
打印出的结果呢

38:07.630 --> 38:08.190
是不是

38:08.190 --> 38:09.150
一跟二啊

38:09.150 --> 38:09.550
这个呢

38:09.550 --> 38:11.470
就是数组去重

38:11.470 --> 38:12.590
很简单吧

38:12.590 --> 38:12.830
啊

38:12.830 --> 38:14.030
不再去说了啊

38:14.030 --> 38:14.270
好

38:14.270 --> 38:15.630
接下来咱们说

38:15.630 --> 38:16.830
最后的部分了

38:16.830 --> 38:17.550
最后部分呢

38:17.550 --> 38:18.270
就是这个什么呢

38:18.270 --> 38:19.070
ZIP了

38:19.070 --> 38:21.070
以及这个安ZIP了啊

38:21.070 --> 38:22.830
我们先来说这个ZIP

38:22.830 --> 38:23.870
那这个ZIP呢

38:23.870 --> 38:25.390
感觉像是打包的意思

38:25.390 --> 38:26.430
是不是啊

38:26.430 --> 38:27.630
其实并不是啊

38:27.630 --> 38:28.430
这个ZIP

38:28.430 --> 38:29.310
它的一个意思

38:29.310 --> 38:29.710
是啥

38:29.710 --> 38:32.030
就是把我们数组当中

38:32.030 --> 38:33.710
所影直相同的数据呢

38:33.710 --> 38:34.990
给它放到一起

38:34.990 --> 38:35.950
组成一个新的

38:35.950 --> 38:37.230
二维的数组

38:37.230 --> 38:37.470
来

38:38.510 --> 38:40.030
直接去掉ZIP

38:41.230 --> 38:42.030
然后这个里头呢

38:42.030 --> 38:43.150
我们要传了啊

38:43.150 --> 38:43.950
传什么呢

38:43.950 --> 38:45.310
传上几个数组

38:45.310 --> 38:46.270
这几个数组呢

38:46.270 --> 38:47.790
咱们写一下啊

38:47.790 --> 38:48.270
嗯

38:48.270 --> 38:48.750
第一个呢

38:48.750 --> 38:49.550
是小

38:50.510 --> 38:51.150
小明

38:51.150 --> 38:51.310
哎

38:53.390 --> 38:54.430
小明

38:54.430 --> 38:54.750
好

38:54.750 --> 38:55.070
这是

38:55.710 --> 38:56.190
第一个

38:56.350 --> 38:56.670
是吧

38:57.550 --> 38:58.430
然后第二个呢

38:58.430 --> 38:59.870
是小红

39:02.940 --> 39:03.660
好

39:03.660 --> 39:04.620
然后第三个

39:05.420 --> 39:05.980
第三个呢

39:05.980 --> 39:06.780
是小刚

39:08.140 --> 39:08.220
哎

39:08.220 --> 39:09.100
这三个人

39:09.100 --> 39:09.580
是吧

39:09.580 --> 39:10.860
是不是长期霸占

39:10.860 --> 39:13.420
我们作文当中的主人翁呀

39:13.420 --> 39:14.220
上学的时候呢

39:14.220 --> 39:15.180
经常写作文

39:15.180 --> 39:16.620
他们仨经常出现啊

39:17.420 --> 39:18.780
这是第一个

39:18.780 --> 39:19.260
然后呢

39:19.260 --> 39:19.980
第二个呢

39:19.980 --> 39:20.460
是什么呢

39:20.460 --> 39:21.020
第二个

39:21.020 --> 39:22.140
再来一个数据

39:22.140 --> 39:23.820
就是用逗号隔开啊

39:23.820 --> 39:24.860
然后这个数据呢

39:24.860 --> 39:26.300
是性别

39:26.860 --> 39:27.660
这是难

39:29.180 --> 39:30.220
这是女

39:32.480 --> 39:33.280
然后呢

39:33.280 --> 39:34.560
再来上一个

39:34.560 --> 39:35.040
难

39:36.320 --> 39:36.640
ok

39:37.360 --> 39:38.400
然后第三个

39:38.400 --> 39:39.360
是他们的年龄

39:39.360 --> 39:41.120
十二十三

39:41.120 --> 39:42.160
十三十四

39:43.120 --> 39:43.360
哎

39:44.000 --> 39:45.280
他们仨称之为什么呢

39:45.840 --> 39:47.280
黄金不败铁三角

39:47.920 --> 39:49.120
来刷新一下啊

39:49.120 --> 39:50.480
看一下这个结果

39:50.480 --> 39:51.840
然后这个结果呢

39:51.840 --> 39:52.400
是这个啊

39:52.400 --> 39:53.440
我先把它标一下啊

39:53.440 --> 39:53.920
放到这

39:55.040 --> 39:56.000
它其实是这个

39:56.000 --> 39:56.880
我不能复制过来

39:56.880 --> 39:57.600
一会呢

39:57.600 --> 39:59.040
后边还需要去用到它

40:00.640 --> 40:01.680
然后这个

40:04.860 --> 40:05.020
哎

40:05.020 --> 40:05.980
我做了什么

40:05.980 --> 40:06.380
刚才

40:10.100 --> 40:12.020
好像是删掉了一个

40:12.020 --> 40:12.740
是吧

40:12.740 --> 40:13.060
好

40:13.060 --> 40:13.300
这样

40:14.340 --> 40:15.060
来啊

40:15.060 --> 40:15.700
就这样

40:15.700 --> 40:16.100
好

40:16.100 --> 40:17.380
然后我们解释一下啊

40:17.380 --> 40:18.260
这是啥意思呢

40:18.260 --> 40:18.900
就是

40:18.900 --> 40:20.900
它其实是把我们数组当中

40:20.900 --> 40:22.340
所有植相同的数据呢

40:22.340 --> 40:23.540
都给它凑在了一起

40:23.540 --> 40:25.060
你看小明

40:25.060 --> 40:26.020
然后我们看啊

40:26.020 --> 40:28.260
小明男12岁

40:28.260 --> 40:31.140
是不是小明男12岁啊

40:31.140 --> 40:32.020
他们的所有植

40:32.020 --> 40:32.980
是不是都是零啊

40:32.980 --> 40:34.820
那小红女13

40:35.300 --> 40:37.140
小红女13

40:37.140 --> 40:38.580
所以你这都是一

40:38.580 --> 40:40.420
小刚男14

40:40.420 --> 40:42.260
所以你这是不是都是二呀

40:42.260 --> 40:42.660
这个呢

40:42.660 --> 40:43.700
就是它的一个作用

40:43.700 --> 40:44.100
Z

40:44.740 --> 40:45.380
ZIP

40:45.380 --> 40:46.500
它的一个作用啊

40:46.500 --> 40:46.740
好

40:46.740 --> 40:47.140
然后呢

40:47.140 --> 40:49.060
再来就是跟它啊

40:49.060 --> 40:50.260
所那个啥的

40:50.260 --> 40:51.220
所类似的啊

40:51.220 --> 40:54.020
ZIP有一个object这个方法

40:55.780 --> 40:56.740
那这个方法呢

40:56.740 --> 40:57.780
跟它是一样的

40:57.780 --> 40:58.740
只不过就说

40:58.740 --> 41:00.740
人家返回的结果不一样

41:00.740 --> 41:02.260
它返回的是一个数组

41:02.260 --> 41:02.900
然后呢

41:02.900 --> 41:03.620
人家这个

41:03.620 --> 41:04.660
ZIP object

41:04.660 --> 41:05.380
返回的是啥

41:05.380 --> 41:06.740
返回的是一个对象

41:06.740 --> 41:07.780
但是这个对象呢

41:07.780 --> 41:09.140
它是有一个问题

41:09.140 --> 41:10.580
需要去说一下的啊

41:10.580 --> 41:11.460
什么问题呢

41:11.460 --> 41:12.580
就是这个对象

41:12.580 --> 41:13.700
你看小明男

41:13.700 --> 41:14.420
小红女

41:14.420 --> 41:15.300
小刚男

41:15.300 --> 41:16.500
没有数字了

41:16.500 --> 41:18.100
数字是不是被解掉了

41:18.100 --> 41:18.820
为什么呢

41:18.820 --> 41:20.420
因为对象的形式

41:20.420 --> 41:21.140
K跟VALUE

41:21.140 --> 41:22.180
只有两个数据

41:22.180 --> 41:23.060
你你这个

41:23.060 --> 41:23.540
第三个

41:23.540 --> 41:24.660
你应该怎么加

41:24.660 --> 41:25.460
没法而加

41:25.460 --> 41:26.020
所以说呢

41:26.020 --> 41:26.340
这个呢

41:26.340 --> 41:28.100
就是它的一个不同的一个地方啊

41:28.100 --> 41:28.740
好

41:28.740 --> 41:29.140
然后呢

41:29.140 --> 41:30.820
再跟着还有另外一个方法

41:30.820 --> 41:32.420
这个ZIP object

41:32.420 --> 41:34.580
这个其实也就是便利了

41:34.740 --> 41:36.180
它这个这个东西呢

41:36.180 --> 41:37.300
有一些严格啊

41:37.300 --> 41:38.020
有一些严格

41:38.020 --> 41:38.900
我们是用不到的

41:38.900 --> 41:39.300
所以说呢

41:39.300 --> 41:40.900
我在这不耽误时间

41:40.900 --> 41:41.700
不再去说了

41:41.700 --> 41:42.260
好不好

41:42.260 --> 41:42.660
然后呢

41:42.660 --> 41:42.980
接下来

41:42.980 --> 41:43.780
咱们去说一下

41:43.780 --> 41:45.780
这个ZIP的位置

41:45.780 --> 41:46.660
那这个位置呢

41:46.660 --> 41:48.180
虽然说我们看到了这个位置

41:48.180 --> 41:48.660
是不是

41:48.660 --> 41:49.380
但这个位置呢

41:49.380 --> 41:51.540
跟之前稍有一些不同

41:51.540 --> 41:53.060
不同的地方是什么呢

41:54.260 --> 41:56.340
其实大致的原理是一样的啊

41:56.340 --> 41:58.020
他们也是把每一个数据呢

41:58.020 --> 41:59.300
都进行了一个便利

41:59.300 --> 42:00.020
知道吗

42:00.020 --> 42:00.420
便利

42:00.420 --> 42:00.820
然后呢

42:00.820 --> 42:02.420
关键说这个方法当中呢

42:02.420 --> 42:03.300
它return了

42:03.300 --> 42:04.100
return之后呢

42:04.100 --> 42:05.940
它是a加b加c

42:05.940 --> 42:07.220
那这个是啥意思啊

42:07.220 --> 42:09.220
就是拿1加10

42:09.220 --> 42:10.740
再加上100

42:10.740 --> 42:12.580
也就是他们的所有影相同

42:12.580 --> 42:13.940
全部把他们加起来

42:13.940 --> 42:14.980
1加1011

42:14.980 --> 42:15.700
11加100

42:15.700 --> 42:16.340
1111

42:16.340 --> 42:16.820
所以说呢

42:16.820 --> 42:17.940
这里头第一个数据呢

42:17.940 --> 42:19.700
就是一个1111

42:19.700 --> 42:20.020
然后呢

42:20.020 --> 42:20.500
第二个呢

42:20.500 --> 42:21.300
就是说啊

42:21.300 --> 42:23.220
2加20加

42:23.220 --> 42:24.420
多少加300

42:24.420 --> 42:25.380
不是加这个200

42:25.380 --> 42:26.660
得出的一个结果呢

42:26.660 --> 42:27.780
就是一个200

42:27.780 --> 42:29.380
那如果说有第三个数据

42:29.380 --> 42:30.340
也就是数组当中

42:30.340 --> 42:31.380
有第三个数据的话

42:31.380 --> 42:32.580
他们还会一次的

42:32.580 --> 42:34.020
在这进行一个累加

42:34.100 --> 42:35.380
这个就是跟之前

42:35.380 --> 42:37.140
不一样的一个地方了

42:37.140 --> 42:37.700
好吧

42:37.700 --> 42:39.380
这是zip waste

42:39.380 --> 42:39.780
然后呢

42:39.780 --> 42:40.660
接下来我们说一下

42:40.660 --> 42:42.500
最后nzip

42:42.500 --> 42:43.940
那这个nzip呢

42:43.940 --> 42:44.580
刚刚好

42:44.580 --> 42:46.180
就是它的相反的

42:47.300 --> 42:48.420
这个方法

42:48.420 --> 42:49.220
跟这个方法呢

42:49.220 --> 42:50.260
是刚刚好

42:50.260 --> 42:51.300
是相反的

42:51.300 --> 42:52.980
也就是这个nzip呢

42:52.980 --> 42:53.700
就是说

42:53.700 --> 42:56.100
把这个zip解析出来的

42:56.100 --> 42:57.060
这个结果呢

42:57.060 --> 42:58.500
再给它还原成

42:58.500 --> 42:59.540
还原成什么呢

42:59.540 --> 43:01.540
还原成原来

43:01.540 --> 43:02.660
那我们看一下

43:02.740 --> 43:03.060
这个呢

43:03.060 --> 43:04.900
是不是解析之后的一个结果

43:04.900 --> 43:06.020
那还原成啥呢

43:06.020 --> 43:07.140
其实还原成的

43:07.140 --> 43:08.100
就是这个德性

43:09.460 --> 43:09.700
来

43:09.700 --> 43:10.340
我们看一下

43:10.340 --> 43:11.540
这个是对不对啊

43:12.980 --> 43:14.180
来走着

43:14.180 --> 43:14.900
刷新一下

43:14.900 --> 43:16.420
你看是不是三个数组

43:16.420 --> 43:17.460
点开之后呢

43:17.460 --> 43:18.020
点开

43:19.060 --> 43:20.740
小鸣男12岁

43:20.740 --> 43:22.500
啊zip

43:22.500 --> 43:23.780
nzip

43:23.780 --> 43:25.140
再来刷新一下啊

43:25.140 --> 43:25.860
来点开

43:26.500 --> 43:28.740
小鸣小红小刚

43:28.740 --> 43:30.740
是不是小鸣小红小刚

43:30.740 --> 43:31.300
然后呢

43:31.300 --> 43:32.260
男女男

43:32.260 --> 43:32.980
男女男

43:32.980 --> 43:34.500
是2314

43:34.500 --> 43:36.260
是不是像我所说的那样

43:36.260 --> 43:37.220
它就是一个

43:37.220 --> 43:39.700
刚好就是这个方法的反作用啊

43:41.300 --> 43:43.140
那跟它有一个

43:43.140 --> 43:45.060
方法叫nzip

43:45.060 --> 43:45.860
什么呢

43:45.860 --> 43:46.500
vis

43:46.500 --> 43:47.060
这个方法

43:47.060 --> 43:47.940
那这个vis呢

43:47.940 --> 43:50.580
就是跟刚才我们的这个zipvis

43:50.580 --> 43:51.620
是一模一样的

43:51.620 --> 43:52.500
它的一个意思

43:52.500 --> 43:54.180
我就不再去解释了

43:54.180 --> 43:54.660
好

43:54.660 --> 43:55.060
那行

43:55.060 --> 43:55.620
那这样的话

43:55.620 --> 43:56.740
我们的第一节课呢

43:56.740 --> 43:57.860
咱们就说到这里

