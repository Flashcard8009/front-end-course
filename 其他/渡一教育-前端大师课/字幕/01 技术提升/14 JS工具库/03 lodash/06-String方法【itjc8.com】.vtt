WEBVTT

00:00.990 --> 00:02.550
来 我们继续往下说

00:02.550 --> 00:03.790
那咱们这节课呢

00:03.790 --> 00:05.910
要说的是一个stream这个对象

00:05.910 --> 00:06.590
然后呢

00:06.590 --> 00:07.070
这个呢

00:07.070 --> 00:09.790
算是我们的这个楼dash当中的最后一课了

00:09.790 --> 00:13.070
那其他的这些对象当中的一些属性跟方法啊

00:13.070 --> 00:15.910
就是你们可以自己去学习一下啊

00:15.910 --> 00:17.550
就是不是特别的重要的

00:17.550 --> 00:18.630
而且有一些方法呢

00:18.630 --> 00:20.830
可能是用的真是特别的窄啊

00:20.830 --> 00:23.710
可能是非常非常就是雕钻的那种需求呢

00:23.710 --> 00:25.310
才能够使用那个方法

00:25.310 --> 00:25.710
所以说呢

00:25.710 --> 00:27.670
咱就不浪费那个时间了啊

00:27.670 --> 00:28.870
那我们这节课呢

00:28.870 --> 00:31.070
把这个stream说一下就够了啊

00:31.070 --> 00:32.070
那这个stream呢

00:32.070 --> 00:33.750
是用来处理自付串的

00:33.750 --> 00:34.070
是吧

00:34.070 --> 00:34.350
它呢

00:34.350 --> 00:37.630
是我们的这个gs当中的一个内置对象啊

00:37.630 --> 00:38.070
然后呢

00:38.070 --> 00:39.590
这里头的很多的一些方法

00:39.590 --> 00:41.790
就是是有些是他已有的

00:41.790 --> 00:43.590
人家对他进行了一些改良

00:43.590 --> 00:44.310
另外一些呢

00:44.310 --> 00:45.750
就是他增加的

00:45.750 --> 00:46.990
我们就挨个来说

00:46.990 --> 00:48.510
那先来看第一个方法

00:48.510 --> 00:49.590
那第一个方法呢

00:49.590 --> 00:49.910
他呢

00:49.910 --> 00:50.910
是用来干嘛呢

00:50.910 --> 00:52.950
就是用来转这个自付串的

00:52.950 --> 01:01.330
哎好这个方法啊

01:01.330 --> 01:02.250
那这个方法呢

01:02.250 --> 01:04.890
它是用来就是把我们的自付串转为一种

01:04.890 --> 01:06.570
脱风的这种格式啊

01:06.570 --> 01:08.850
就是其实我们再去

01:08.850 --> 01:10.770
写学习这个前端的时候呢

01:10.770 --> 01:12.530
应该知道就是在我们

01:12.530 --> 01:13.130
呃

01:13.130 --> 01:14.290
这以后编程当中呢

01:14.290 --> 01:17.250
就是要养成一个非常良好的一个书写习惯

01:17.250 --> 01:17.650
这样的话

01:17.650 --> 01:19.090
其实我们的代码可读性

01:19.090 --> 01:20.490
是不是非常之高呀

01:20.490 --> 01:21.530
那这个就是

01:21.530 --> 01:22.850
比如说我们变量吧

01:22.850 --> 01:24.170
我们声明一个变量

01:24.170 --> 01:25.530
其实有很多的一些形式

01:25.530 --> 01:26.050
是不是

01:26.050 --> 01:28.410
你不要说通篇都用abc cba

01:28.410 --> 01:28.730
是不是

01:28.730 --> 01:29.450
这乱七八糟的

01:29.450 --> 01:30.690
到时候谁也看不懂啊

01:30.730 --> 01:33.130
你需要找一个自己的一个方式啊

01:33.130 --> 01:34.130
那其实目前呢

01:34.130 --> 01:35.970
有两种比较流行的一个方式

01:35.970 --> 01:36.370
一种呢

01:36.370 --> 01:37.570
就是一个脱风式的

01:37.570 --> 01:38.010
那这个呢

01:38.010 --> 01:39.970
其实是我一直在用的

01:39.970 --> 01:40.570
知道吧

01:40.570 --> 01:42.250
我一直在用的这种脱风式的

01:42.250 --> 01:43.290
就比如说

01:43.290 --> 01:45.250
这个开问陈ch en

01:46.730 --> 01:47.490
那你看

01:47.490 --> 01:48.130
脱风式呢

01:48.130 --> 01:49.730
就是说第二个单词呢

01:49.730 --> 01:51.410
他的一个手字符要大写

01:51.410 --> 01:51.730
这个呢

01:51.730 --> 01:52.770
就是一个脱风的

01:52.770 --> 01:53.090
然后呢

01:53.090 --> 01:54.170
还有另外一种呢

01:54.170 --> 01:54.570
是什么呢

01:54.570 --> 01:55.090
就是这个呢

01:55.090 --> 01:55.930
是小写的

01:55.930 --> 01:57.770
你加上一个下滑线

01:57.770 --> 01:58.370
这种

01:58.370 --> 01:58.810
明白吧

01:58.810 --> 01:59.770
这两种啊

01:59.770 --> 02:00.690
那这个啊

02:00.690 --> 02:01.730
第一个方法呢

02:01.730 --> 02:03.770
他其实就是用来转换的啊

02:03.770 --> 02:05.130
我们去调一下这个方法

02:05.130 --> 02:08.260
康斯洛哥这个

02:08.260 --> 02:09.020
来这里头呢

02:09.020 --> 02:11.220
我给上这么一个东西啊

02:11.220 --> 02:11.820
这么一个东西

02:11.820 --> 02:12.140
然后呢

02:12.140 --> 02:12.780
打开一面

02:12.780 --> 02:13.780
我们来看一下啊

02:13.780 --> 02:14.420
好

02:14.420 --> 02:15.380
然后可以看到啊

02:15.380 --> 02:17.380
现在他是不是就把我的这种形式

02:17.380 --> 02:19.460
给我转成一个脱风的形式了

02:19.460 --> 02:21.380
然后也就是说把这个下滑线

02:21.380 --> 02:21.700
然后呢

02:21.700 --> 02:23.180
跟着的这个C是吧

02:23.180 --> 02:23.980
下滑线干掉

02:23.980 --> 02:24.300
然后呢

02:24.300 --> 02:25.980
把C变大好

02:25.980 --> 02:26.860
这样他可以转

02:26.860 --> 02:27.580
然后另外呢

02:27.580 --> 02:29.180
他还有这个转法啊

02:29.180 --> 02:30.340
这个转法也是ok的

02:31.540 --> 02:32.100
什么转法呢

02:32.100 --> 02:33.140
就是来

02:36.540 --> 02:37.220
这个中间呢

02:37.220 --> 02:38.100
我们试一个什么呢

02:38.100 --> 02:39.540
是一个空格

02:39.540 --> 02:40.780
你看是一个空格

02:40.780 --> 02:41.580
给空格之后呢

02:41.580 --> 02:41.940
再来看

02:41.940 --> 02:42.580
刷新一下

02:42.580 --> 02:45.220
他仍然也可以帮咱们去转

02:45.220 --> 02:45.940
明白吧

02:45.940 --> 02:46.260
这个呢

02:46.260 --> 02:48.500
就是转脱风的这种形式啊

02:48.500 --> 02:48.820
好

02:48.820 --> 02:50.260
这是第一个方法啊

02:50.260 --> 02:50.620
然后呢

02:50.620 --> 02:52.580
接下来第二个方法

02:52.580 --> 02:53.660
那第二个方法呢

02:53.660 --> 02:55.860
就是把手自扶的字母呢

02:55.860 --> 02:57.620
给我们变成一个大写

02:59.340 --> 03:00.580
就是这个方法

03:00.580 --> 03:01.140
所以就是

03:01.140 --> 03:02.180
这个stream当中呢

03:02.180 --> 03:02.780
这些方法呢

03:02.780 --> 03:04.100
其实就是非常的简单

03:04.100 --> 03:05.660
咱看一下就知道了

03:05.660 --> 03:07.700
一个点掉一下这个方法

03:07.700 --> 03:08.700
手自扶

03:08.700 --> 03:10.860
比如说我们就给上这么一个开文

03:12.220 --> 03:12.660
好

03:12.660 --> 03:13.420
给完之后呢

03:13.420 --> 03:14.780
咱们来看这个结果

03:14.780 --> 03:16.100
我们在这刷新走着

03:16.100 --> 03:18.420
你看这个手自扶是不是一个k啊

03:18.420 --> 03:19.300
那现在呢

03:19.300 --> 03:19.940
这个k呢

03:19.940 --> 03:21.740
是不是就变大了啊

03:21.740 --> 03:22.020
他呢

03:22.020 --> 03:23.060
变成了一个大写

03:24.140 --> 03:25.900
这是第二个方法

03:25.900 --> 03:26.260
然后呢

03:26.260 --> 03:26.780
接下来呢

03:26.780 --> 03:27.940
第三个方法

03:29.180 --> 03:30.020
来往下啊

03:30.020 --> 03:30.820
第三个方法

03:30.820 --> 03:31.180
这个呢

03:31.900 --> 03:33.660
这个没啥用啊

03:33.660 --> 03:34.500
咱不用说它啊

03:34.500 --> 03:34.900
然后呢

03:34.900 --> 03:37.260
第三个是这个这个方法

03:37.260 --> 03:38.020
这个方法呢

03:38.020 --> 03:38.860
它是用来什么呢

03:38.860 --> 03:39.700
它是用来干

03:39.700 --> 03:43.100
它是用来检查我们结尾的这个自扶的

03:43.100 --> 03:43.860
也就是说啊

03:43.860 --> 03:46.460
现在我要检查我的这个结尾这个自扶呢

03:46.460 --> 03:49.340
到底是不是我这原自扶串当中的

03:50.860 --> 03:51.420
cancelogue

03:53.620 --> 03:54.180
log

03:54.180 --> 03:55.700
掉一下这个方法啊

03:55.700 --> 03:56.220
比如说啊

03:56.220 --> 03:57.340
现在咱有一个自扶串

03:57.340 --> 03:58.740
这个自扶串叫abc

03:58.740 --> 03:59.180
是不是啊

03:59.180 --> 03:59.620
那ok

03:59.620 --> 04:00.060
接下来

04:00.060 --> 04:00.860
第二个参数呢

04:00.860 --> 04:02.420
就说我要给上一个自扶串

04:02.420 --> 04:03.820
这个自扶串的是c

04:03.820 --> 04:05.220
那现在我就问一下啊

04:05.220 --> 04:05.980
用这个方法

04:05.980 --> 04:06.980
咱就去检测一下

04:06.980 --> 04:07.820
现在这个c呢

04:07.820 --> 04:09.300
到底是不是属于

04:09.300 --> 04:10.740
我第一个参数自扶串的

04:10.740 --> 04:12.260
一个最后的一个自扶

04:12.260 --> 04:13.460
再来看刷新一下

04:13.460 --> 04:14.220
它的结果呢

04:14.220 --> 04:14.820
就是一个处

04:14.820 --> 04:15.260
是吧

04:15.260 --> 04:15.620
好

04:15.620 --> 04:16.300
就是一个处

04:16.300 --> 04:17.060
然后如果说

04:17.060 --> 04:18.300
你再给上一个a呢

04:18.300 --> 04:19.300
再来看刷新

04:19.300 --> 04:20.300
那这个结果呢

04:20.300 --> 04:21.300
就是一个false了

04:21.300 --> 04:22.340
它检测不到了

04:22.340 --> 04:22.980
所以说啊

04:22.980 --> 04:25.140
它就弹出了一个false的一个结果

04:25.140 --> 04:25.460
这个呢

04:25.460 --> 04:27.620
就是answith这个方法

04:27.620 --> 04:29.100
它的一个作用啊

04:29.100 --> 04:29.820
再往下

04:31.220 --> 04:31.940
再往下呢

04:31.940 --> 04:33.860
这个escape这个方法

04:33.860 --> 04:34.740
那这个方法呢

04:34.740 --> 04:36.500
其实它也是有一些常用啊

04:36.500 --> 04:37.580
就是这个方法

04:37.580 --> 04:39.860
它主要是用来进行一个转移的

04:39.860 --> 04:40.860
那转什么呢

04:40.860 --> 04:43.060
就是把一些特殊的自扶呢

04:43.060 --> 04:45.260
给它转移成真正的这个

04:45.260 --> 04:48.300
html的实体的这么一个自扶啊

04:48.300 --> 04:48.980
啥意思啊

04:48.980 --> 04:50.660
其实我们看一眼就知道了啊

04:50.660 --> 04:51.580
concelogue

04:51.580 --> 04:53.020
就有的时候我们再去写

04:53.020 --> 04:54.060
在html当中呢

04:54.060 --> 04:55.300
写写一些标签

04:55.300 --> 04:56.220
这个标签呢

04:56.220 --> 04:56.900
呃

04:56.900 --> 04:57.980
它有的时候呢

04:57.980 --> 04:59.900
我们想要让它变成一个真正的标签

04:59.900 --> 05:00.380
有的时候呢

05:00.380 --> 05:01.500
我们不想要让它变成

05:01.500 --> 05:02.500
一个真正的标签

05:02.500 --> 05:03.500
那怎么办呢

05:03.500 --> 05:04.580
考一下自己

05:04.580 --> 05:04.940
好不好

05:04.940 --> 05:06.020
知道怎么办吗

05:06.020 --> 05:06.460
来

05:06.460 --> 05:07.980
我们调一下这个方法

05:09.260 --> 05:10.540
不要掉一下这个方法

05:10.540 --> 05:11.460
然后这个方法呢

05:11.460 --> 05:12.540
我们接收一个参数

05:12.540 --> 05:14.060
然后比如说这个开本是不是

05:14.060 --> 05:14.660
好

05:14.660 --> 05:16.060
但是这个里头呢

05:16.060 --> 05:17.100
这个i跟v呢

05:17.100 --> 05:18.420
我加了一个间扩号

05:18.420 --> 05:19.460
那这个间扩号呢

05:19.460 --> 05:20.940
在我们的这个html当中呢

05:20.940 --> 05:23.340
是不是一个标签的一个语法呀

05:23.340 --> 05:23.660
好

05:23.660 --> 05:24.060
然后呢

05:24.060 --> 05:24.380
这个呢

05:24.380 --> 05:25.100
我们来看一下

05:25.100 --> 05:26.900
弹出的一个结果刷新走着

05:26.900 --> 05:28.260
它是变成了这种

05:28.260 --> 05:28.940
这种东西呢

05:28.940 --> 05:29.340
叫什么呢

05:29.340 --> 05:30.100
叫html

05:30.100 --> 05:31.860
它的一个实体字符

05:31.860 --> 05:32.580
其实有的时候呢

05:32.580 --> 05:33.660
就是我们要写

05:33.660 --> 05:34.900
写一个标签的时候呢

05:34.900 --> 05:36.220
我们就可以用这个

05:36.220 --> 05:38.100
去代替某一个标签

05:38.100 --> 05:40.020
其实在在我们的这个

05:40.020 --> 05:40.460
啊

05:40.460 --> 05:41.740
我们的字符串当中呢

05:41.740 --> 05:42.740
其实每一个字符呢

05:42.740 --> 05:43.540
都会有

05:43.540 --> 05:44.340
都会有啊

05:44.340 --> 05:44.740
好

05:44.740 --> 05:46.060
它就变成了这个样子

05:47.860 --> 05:48.260
这个呢

05:48.260 --> 05:49.980
就叫实体字符

05:49.980 --> 05:51.180
呃

05:51.180 --> 05:55.900
那可以把真正的标签转成实体字符

05:55.900 --> 05:58.340
也可以把实体字符呢

05:58.380 --> 06:01.420
转成一个真正的一个html的

06:01.420 --> 06:02.460
那个标签

06:02.460 --> 06:03.180
这个方法呢

06:03.180 --> 06:04.140
叫安

06:04.140 --> 06:05.460
escape

06:05.460 --> 06:06.180
在哪里呢

06:06.180 --> 06:12.090
在这呢

06:12.090 --> 06:13.010
嘿嘿嘿

06:13.010 --> 06:13.370
哎

06:13.370 --> 06:14.090
在这呢啊

06:14.090 --> 06:14.410
好

06:14.410 --> 06:15.770
在这跟它呢

06:15.770 --> 06:17.810
是刚刚相反

06:17.810 --> 06:20.050
我们放到这

06:20.050 --> 06:20.570
安

06:20.570 --> 06:21.210
escape

06:22.610 --> 06:23.130
console

06:25.130 --> 06:26.170
调一下这个方法

06:26.170 --> 06:26.570
然后呢

06:26.570 --> 06:27.330
咱们把什么

06:27.330 --> 06:28.450
把这个结果呢

06:28.450 --> 06:30.090
给它丢进来

06:30.090 --> 06:30.850
放到哪里呢

06:30.850 --> 06:31.930
放到这个地方

06:31.930 --> 06:32.570
来

06:32.570 --> 06:32.970
这样的话

06:32.970 --> 06:33.650
我们看一下

06:33.650 --> 06:35.530
它给给我们谈出来的

06:35.530 --> 06:36.610
是不是这个样子啊

06:36.610 --> 06:37.490
打印出来的啊

06:37.490 --> 06:38.210
来在这呢

06:38.210 --> 06:40.050
我刷新走这

06:40.050 --> 06:40.410
哎

06:40.410 --> 06:41.650
看看是不是一样的

06:41.650 --> 06:43.610
刚刚是跟它是相反的

06:43.610 --> 06:44.850
所以这两个方法呢

06:44.850 --> 06:46.170
你就可以互相的

06:46.170 --> 06:47.610
进行一个转换了啊

06:47.610 --> 06:47.850
安

06:47.850 --> 06:48.490
escape

06:48.490 --> 06:48.770
嗯

06:49.970 --> 06:50.170
好

06:50.170 --> 06:50.650
然后呢

06:50.650 --> 06:51.450
再来

06:51.450 --> 06:55.580
再来这个方法啊

06:55.580 --> 06:56.140
嗯

06:56.140 --> 06:57.260
我们说到了

06:57.260 --> 06:57.980
这啊

06:57.980 --> 06:58.540
这

06:58.540 --> 06:59.620
那这个方法

06:59.620 --> 07:00.740
它是干嘛用的

07:00.740 --> 07:01.020
嗯

07:01.020 --> 07:01.620
这个方法呢

07:01.620 --> 07:03.820
它其实是把字符转转成一种

07:03.820 --> 07:06.580
加横杠的这么一种形式啊

07:06.580 --> 07:09.040
来

07:09.040 --> 07:16.180
console.log

07:16.180 --> 07:17.820
加横杠的这个形式

07:17.820 --> 07:18.300
比如说

07:18.300 --> 07:19.420
这个ka

07:19.420 --> 07:20.100
我们中间呢

07:20.100 --> 07:21.060
加上一个空格

07:21.060 --> 07:21.620
好吧

07:21.620 --> 07:22.700
然后

07:22.700 --> 07:23.100
来

07:23.100 --> 07:23.580
这个时候呢

07:23.580 --> 07:26.540
你看三个字符用空格分开了

07:26.540 --> 07:27.260
分开之后呢

07:27.260 --> 07:27.700
接下来

07:27.700 --> 07:28.460
我们再来看啊

07:28.460 --> 07:29.020
刷新你看

07:29.020 --> 07:29.900
它的一个结果

07:29.900 --> 07:32.540
会变成了加横杠的这种形式

07:32.540 --> 07:34.220
那其实你就可以啊

07:34.220 --> 07:36.700
把我们平时写的转成这种

07:36.700 --> 07:38.180
你想要这种命名

07:38.180 --> 07:39.940
你就可以通过这个方法呢

07:39.940 --> 07:41.740
去进行一个转换啊

07:41.740 --> 07:44.460
加横杠

07:44.460 --> 07:44.860
好

07:44.860 --> 07:45.300
然后呢

07:45.300 --> 07:46.860
再往下

07:46.860 --> 07:47.820
再往下跟着呢

07:47.820 --> 07:49.380
就是这个law case

07:49.380 --> 07:50.180
law case呢

07:50.180 --> 07:50.540
这个呢

07:50.540 --> 07:52.420
我们的原生这个stream身上呢

07:52.420 --> 07:53.220
是有的

07:53.220 --> 07:53.780
然后呢

07:53.780 --> 07:55.380
这个方法还有一个

07:55.380 --> 07:57.220
tu tu tu什么的

07:57.220 --> 07:58.340
tu lower

07:58.340 --> 07:59.180
a tu lower

07:59.180 --> 07:59.540
在哪

07:59.540 --> 08:00.020
在这

08:00.020 --> 08:00.660
看到吗

08:00.660 --> 08:01.700
这两个方法呢

08:01.700 --> 08:02.820
其实都是一样的

08:03.820 --> 08:04.940
他们是用来

08:04.940 --> 08:07.020
把我们的字符串转成一个

08:07.020 --> 08:08.580
小写的一个字符串

08:08.580 --> 08:08.940
好

08:08.940 --> 08:10.020
这个呢

08:10.020 --> 08:10.780
转小写

08:10.780 --> 08:11.860
那跟他对应的

08:11.860 --> 08:13.100
是不是tu upper

08:13.100 --> 08:14.940
以及我们上边的这个

08:14.940 --> 08:15.980
oper case

08:17.580 --> 08:18.700
oper case

08:18.700 --> 08:19.660
oper case

08:19.660 --> 08:20.180
在这呢

08:20.180 --> 08:21.220
你看他们

08:21.220 --> 08:22.220
他俩是一样的

08:22.220 --> 08:23.180
这俩是干嘛

08:23.180 --> 08:24.700
是转大写的

08:25.580 --> 08:26.100
这个呢

08:26.100 --> 08:28.060
在我们的原生的方法当中呢

08:28.060 --> 08:29.580
是都有的啊

08:29.580 --> 08:30.140
好

08:30.140 --> 08:31.140
然后呢

08:31.140 --> 08:32.500
再来就是这个派的

08:32.500 --> 08:33.020
派的

08:33.660 --> 08:34.340
派的

08:34.340 --> 08:35.620
那这个派的呢

08:35.620 --> 08:36.940
他是用来干嘛

08:36.940 --> 08:38.340
填充字符串

08:38.340 --> 08:38.700
然后呢

08:38.700 --> 08:39.700
这个填充字符串

08:39.740 --> 08:41.180
你可以让他指定

08:41.180 --> 08:41.820
这个字符串

08:41.820 --> 08:43.980
填充到一定的长度啊

08:45.060 --> 08:50.020
派的

08:50.020 --> 08:50.300
好

08:50.300 --> 08:50.820
比如说啊

08:50.820 --> 08:52.220
现在有一个abc

08:52.220 --> 08:52.780
这个字符串

08:52.780 --> 08:53.020
是不是

08:53.020 --> 08:54.340
我嫌他有点短

08:54.340 --> 08:54.820
怎么办

08:54.820 --> 08:56.220
我想要让他填充

08:56.220 --> 08:56.580
那OK

08:56.580 --> 08:58.420
我我让他填充到哪一位呢

08:58.420 --> 09:00.180
比如说我填充八位

09:00.180 --> 09:01.940
也就是现在他的lens呢

09:01.940 --> 09:04.700
最终要填充到八个

09:04.700 --> 09:06.140
那填充什么呢

09:06.140 --> 09:06.940
由你决定

09:06.940 --> 09:07.820
第三个参数

09:07.820 --> 09:09.020
我们给成一个横杠

09:09.020 --> 09:11.140
那他就会填充这个横杠

09:11.140 --> 09:12.460
咱们来看一下这个结果

09:12.500 --> 09:13.740
会是什么样子的啊

09:13.740 --> 09:14.300
这个呢

09:14.300 --> 09:15.260
挺神奇的啊

09:15.260 --> 09:15.980
刷新一下

09:15.980 --> 09:16.540
看到没

09:16.540 --> 09:17.220
现在呢

09:17.220 --> 09:18.780
在我们的这个abc

09:18.780 --> 09:19.500
前后呢

09:19.500 --> 09:20.940
各自加横杠了

09:20.940 --> 09:21.860
加横杠啊

09:21.860 --> 09:23.660
然后加了总共有几个呢

09:23.660 --> 09:25.700
一二三四五

09:25.700 --> 09:26.700
总共有五个

09:26.700 --> 09:27.660
那本身呢

09:27.660 --> 09:28.500
是不是有三位啊

09:28.500 --> 09:28.940
所以说呢

09:28.940 --> 09:29.500
五加三

09:29.500 --> 09:31.380
是不是变成了一个八呀

09:31.380 --> 09:32.340
那这块呢

09:32.340 --> 09:34.220
你就可以随意的去添加了

09:34.220 --> 09:34.620
哈

09:34.620 --> 09:36.700
这是填充字符串

09:36.700 --> 09:38.700
到指定的长度啊

09:38.700 --> 09:39.100
他呢

09:39.100 --> 09:41.420
在前后都会去添加啊

09:41.420 --> 09:42.100
好

09:42.140 --> 09:42.580
然后呢

09:42.580 --> 09:45.220
跟他有类似的这么一个方法啊

09:45.220 --> 09:45.820
这个方法呢

09:45.820 --> 09:48.020
叫拍的N的

09:48.020 --> 09:49.620
那这个拍的N的呢

09:49.620 --> 09:50.340
顾名思义

09:50.340 --> 09:51.820
是不是在后边去填

09:51.820 --> 09:52.660
是吧

09:52.660 --> 09:53.940
console.log

09:53.940 --> 09:54.620
log什么呢

09:54.620 --> 09:55.940
log这个方法啊

09:59.620 --> 10:00.180
abc

10:02.180 --> 10:02.380
好

10:02.380 --> 10:03.580
然后呢

10:03.580 --> 10:05.540
我们在这给上一个

10:05.540 --> 10:06.980
比如说一个八是不是

10:06.980 --> 10:09.300
然后后边跟上一个横杠

10:10.300 --> 10:13.060
这加上一个结束的分号啊

10:13.060 --> 10:13.580
再来看啊

10:13.580 --> 10:14.020
刷新

10:14.020 --> 10:14.740
看一下啊

10:14.740 --> 10:15.180
有没有

10:15.180 --> 10:15.660
现在呢

10:15.660 --> 10:17.940
是不是在后边去添了

10:17.940 --> 10:18.420
好

10:18.420 --> 10:20.500
那既然能在后边去添

10:20.500 --> 10:21.820
那肯定有一个方法

10:21.820 --> 10:22.820
它是在什么呢

10:22.820 --> 10:24.140
在前边去添

10:24.140 --> 10:25.540
哎有这个方法吗

10:25.540 --> 10:26.460
必须有

10:26.460 --> 10:28.860
你看拍的star

10:28.860 --> 10:30.180
来这个方法啊

10:30.180 --> 10:30.500
这个呢

10:30.500 --> 10:32.300
就是在前边去添

10:32.300 --> 10:32.940
添完之后呢

10:32.940 --> 10:33.900
我们再来看啊

10:33.900 --> 10:34.580
来刷新一下

10:34.580 --> 10:38.740
你看是不是前边加了五个横杠啊

10:38.740 --> 10:39.780
这个呢就是用来

10:39.780 --> 10:40.900
填充自幅串

10:40.900 --> 10:42.900
到指定的一个长度啊

10:44.100 --> 10:45.620
然后继续往下说

10:45.620 --> 10:46.580
接下来的这个

10:46.580 --> 10:47.380
parsint

10:47.380 --> 10:48.020
这个方法呢

10:48.020 --> 10:48.820
它是用来

10:48.820 --> 10:49.140
干嘛

10:49.140 --> 10:50.260
在自幅串当中呢

10:50.260 --> 10:51.220
咱们去转

10:51.220 --> 10:51.900
转什么呢

10:51.900 --> 10:53.140
转成一个数字

10:53.140 --> 10:53.500
这个呢

10:53.500 --> 10:54.180
是不是跟我们的

10:54.180 --> 10:55.500
window身上的那个

10:55.500 --> 10:56.740
parsint那个方法

10:56.740 --> 10:57.620
是一样的啊

10:57.620 --> 10:59.300
就是把我们的自幅串呢

10:59.300 --> 11:00.900
转成一个数字的

11:00.900 --> 11:02.260
这么一个类型啊

11:02.260 --> 11:02.820
好

11:03.460 --> 11:05.420
往下就是一个repeat

11:05.420 --> 11:07.300
那这个repeat呢

11:07.300 --> 11:09.060
它是用来做重复的

11:09.060 --> 11:12.620
没有复制过来

11:12.620 --> 11:17.770
repeat

11:17.770 --> 11:19.370
来调一下这个方法啊

11:19.370 --> 11:20.370
那这个repeat呢

11:20.370 --> 11:21.490
我们该如何去用呢

11:21.490 --> 11:22.690
是这样的

11:22.690 --> 11:23.250
比如说啊

11:23.250 --> 11:23.810
这儿有一个

11:23.810 --> 11:24.330
第一个

11:24.330 --> 11:24.970
第一个参数呢

11:24.970 --> 11:25.770
就是一个自幅串

11:25.770 --> 11:26.210
是不是

11:26.210 --> 11:26.650
接下来

11:26.650 --> 11:27.890
我需要让他重复

11:27.890 --> 11:29.650
那第二个参数就是什么呢

11:29.650 --> 11:31.370
你要重复的一个次数

11:31.370 --> 11:31.690
这个呢

11:31.690 --> 11:32.690
倒是非常的简单啊

11:32.690 --> 11:33.890
比如说给上一个二

11:33.890 --> 11:35.610
那也就是表示现在呢

11:35.610 --> 11:37.250
他会把我的这个自幅串呢

11:37.250 --> 11:38.530
给我重复两次

11:38.530 --> 11:39.610
来刷新看一下

11:39.610 --> 11:41.370
是不是重复了两次

11:41.370 --> 11:42.530
后边根击

11:42.570 --> 11:43.690
那这个自幅串呢

11:43.690 --> 11:46.170
他就能够重复几次

11:46.170 --> 11:46.450
好

11:46.450 --> 11:47.730
这是repeat

11:47.730 --> 11:48.050
然后呢

11:48.050 --> 11:49.290
继续往下啊

11:49.290 --> 11:51.930
再来就是一个replace这个方法

11:51.930 --> 11:53.650
那这个replace这个方法

11:53.650 --> 11:56.370
它是用来替换自幅串的啊

11:56.370 --> 11:56.650
嗯

11:57.770 --> 12:00.450
concelogue

12:00.450 --> 12:01.650
replace

12:01.650 --> 12:02.970
那第一个参数呢

12:02.970 --> 12:04.250
就是你要替换的

12:04.250 --> 12:05.170
开门是不是

12:05.170 --> 12:05.490
然后呢

12:05.490 --> 12:06.730
第二个参数

12:06.730 --> 12:07.050
好

12:07.050 --> 12:08.330
这个时候呢

12:08.330 --> 12:10.890
我要从这个自幅串当中呢

12:10.890 --> 12:12.210
去找找什么呢

12:12.210 --> 12:13.890
找一个咱想要替换的

12:13.890 --> 12:15.010
比如说von

12:15.010 --> 12:15.770
接下来呢

12:15.770 --> 12:17.930
我要把它替换成

12:17.930 --> 12:19.330
比如说三个星

12:19.330 --> 12:20.010
三个星

12:20.010 --> 12:20.690
那这个时候呢

12:20.690 --> 12:22.090
咱们来看啊

12:22.090 --> 12:23.050
刷新走着

12:23.050 --> 12:23.930
结果有没有出来

12:23.930 --> 12:24.690
kai

12:24.690 --> 12:25.050
然后呢

12:25.050 --> 12:25.610
三个星

12:25.610 --> 12:26.570
他其实这个呢

12:26.570 --> 12:28.210
你就可以把我们的密码

12:28.210 --> 12:30.170
比如说一些敏感的一些东西呢

12:30.170 --> 12:32.290
你就可以给他替换成这个东西了

12:32.290 --> 12:32.850
页面当中

12:32.850 --> 12:33.450
比如说啊

12:33.450 --> 12:33.850
嗯

12:33.850 --> 12:34.970
有一些词是不是

12:34.970 --> 12:35.890
咱们都懂的

12:35.890 --> 12:38.490
有一些词咱们是不能够出现的

12:38.490 --> 12:40.170
比如说暴力的这种

12:40.170 --> 12:40.650
是不是啊

12:40.650 --> 12:41.370
这些词语呢

12:41.370 --> 12:42.530
是不能够出现的

12:42.530 --> 12:43.690
那你就可以完全

12:43.690 --> 12:45.570
就可以把它替换成一个星号

12:45.570 --> 12:47.090
也就是把它和谐掉啊

12:47.090 --> 12:47.370
好

12:47.370 --> 12:47.690
这个呢

12:47.690 --> 12:48.890
就是一个replace啊

12:48.890 --> 12:49.250
他呢

12:49.250 --> 12:49.890
三个参数

12:49.890 --> 12:51.250
跟之前不太一样啊

12:51.250 --> 12:51.530
这个呢

12:51.530 --> 12:53.370
就是你要找这个字符串当中

12:53.370 --> 12:54.290
某一个部分

12:54.290 --> 12:54.650
然后呢

12:54.650 --> 12:56.650
把它替换成什么样子

12:56.650 --> 12:56.970
这个呢

12:56.970 --> 12:58.450
就是一个replace

12:58.450 --> 12:58.770
好

12:58.770 --> 12:59.090
然后呢

12:59.090 --> 13:00.290
继续再来

13:00.290 --> 13:02.650
还有一个转换字符串的一个方法啊

13:02.650 --> 13:04.330
来是这个方法啊

13:04.330 --> 13:05.210
那这个方法呢

13:05.210 --> 13:06.770
他其实是把字符串了

13:06.770 --> 13:08.010
给他转成这种

13:08.010 --> 13:09.650
下滑线的这种形式

13:09.650 --> 13:11.570
就是我们的那种命名方式啊

13:12.530 --> 13:13.010
log

13:14.850 --> 13:15.810
好

13:15.810 --> 13:16.290
比如说啊

13:16.290 --> 13:18.090
现在kai

13:18.090 --> 13:18.930
有三个字符

13:18.930 --> 13:19.370
是吧

13:19.370 --> 13:19.930
然后呢

13:19.930 --> 13:20.330
接下来

13:20.330 --> 13:21.970
我去调调一下这个方法

13:21.970 --> 13:23.050
那这个kai呢

13:23.050 --> 13:24.170
他会变成什么样子呢

13:24.170 --> 13:25.050
来走着

13:25.050 --> 13:25.650
变成什么啊

13:25.650 --> 13:26.410
变成这个样子

13:28.050 --> 13:31.250
是不是给我们去添加了这个下滑线呀

13:31.250 --> 13:31.570
这个呢

13:31.570 --> 13:34.250
就是用来转换他的一个书写方式啊

13:35.850 --> 13:37.050
再往下

13:37.050 --> 13:37.770
往下呢

13:37.770 --> 13:38.770
就是一个split

13:38.770 --> 13:39.970
那这个split呢

13:39.970 --> 13:42.010
他跟我们的这个stream身上

13:42.010 --> 13:44.570
原生对象身上的那个split是一样的

13:44.570 --> 13:45.970
就是把这个什么的

13:45.970 --> 13:47.050
把我们的字符串呢

13:47.050 --> 13:49.250
给他分割成一个数组屋

13:49.250 --> 13:49.970
好

13:49.970 --> 13:50.370
然后呢

13:50.370 --> 13:51.730
接下来再来

13:51.730 --> 13:52.250
再来

13:52.250 --> 13:53.610
还有另外一种方式

13:53.610 --> 13:55.930
是这种start case

13:55.930 --> 13:56.410
嗯

13:56.410 --> 13:57.210
start case啊

13:57.210 --> 13:57.850
就是他

13:57.850 --> 13:58.170
他呢

13:58.170 --> 13:58.850
也是用来

13:58.850 --> 14:00.050
给我们转换一下

14:00.050 --> 14:01.210
书写的方式啊

14:02.730 --> 14:06.560
点log

14:06.560 --> 14:07.280
好

14:07.280 --> 14:08.080
来看一下啊

14:08.080 --> 14:09.720
我们去调一下这个方法啊

14:09.720 --> 14:10.240
这里头呢

14:10.240 --> 14:11.280
咱先传传

14:11.280 --> 14:14.520
比如说开分槓CNN

14:14.520 --> 14:15.240
然后你看啊

14:15.240 --> 14:17.760
他能够给我转换成什么样子

14:17.760 --> 14:18.560
刷新一下

14:18.560 --> 14:20.000
变成了一个空格

14:20.000 --> 14:22.760
以及我后边那个字符

14:22.760 --> 14:24.160
是不是给我加了一个

14:24.160 --> 14:25.760
变成了一个大写啊

14:25.760 --> 14:27.640
然后以及这种形式呢

14:27.640 --> 14:28.680
也ok

14:28.680 --> 14:29.960
再来看刷新

14:29.960 --> 14:30.960
是不是啊

14:30.960 --> 14:32.560
结果一样吧

14:32.560 --> 14:33.400
结果一样啊

14:33.400 --> 14:33.920
然后呢

14:33.920 --> 14:34.480
再来

14:34.480 --> 14:35.480
还有就是什么呢

14:35.480 --> 14:39.750
还有这个下滑线是吧

14:39.750 --> 14:41.310
再来刷新走着

14:41.310 --> 14:43.750
有没有跟那个是一模一样的

14:44.990 --> 14:46.990
就是转成一个空格

14:46.990 --> 14:47.390
然后呢

14:47.390 --> 14:48.630
空格后边的那个

14:48.630 --> 14:49.830
第一个字符呢

14:49.830 --> 14:51.230
变成一个大写

14:51.230 --> 14:51.550
这个呢

14:51.550 --> 14:53.230
就是把字符串

14:53.230 --> 14:55.670
他变成另外一种书写方式啊

14:55.670 --> 14:56.150
可以看到

14:56.150 --> 14:56.670
其实啊

14:56.670 --> 14:57.310
他这里头

14:57.310 --> 14:58.790
封装了很多很多的一些方法

14:58.790 --> 15:02.110
就是对于我们的书写方式的一种变换啊

15:02.110 --> 15:02.910
很多到时候呢

15:02.910 --> 15:06.270
大家你可以去总结一下啊

15:06.270 --> 15:07.550
那继续往下说吧

15:07.550 --> 15:08.030
然后呢

15:08.030 --> 15:10.270
再来咱们说一个模板啊

15:10.270 --> 15:11.070
模板

15:11.070 --> 15:14.560
time plate

15:14.560 --> 15:15.440
这个time plate

15:15.440 --> 15:16.720
这个模板呢

15:16.720 --> 15:17.600
就是这个东西呢

15:17.600 --> 15:20.240
在之前早些年是非常的流行了啊

15:20.240 --> 15:20.960
但是现在呢

15:20.960 --> 15:24.080
其实他的这个应用的场景

15:24.080 --> 15:25.520
现在已经没落了

15:25.520 --> 15:26.400
这个模板自不串

15:26.400 --> 15:26.880
知道吗

15:26.880 --> 15:27.600
这啥意思呢

15:27.600 --> 15:28.000
就是说啊

15:28.000 --> 15:28.480
其实啊

15:28.480 --> 15:29.600
在早些年

15:29.600 --> 15:31.760
我们的那个前后端

15:31.760 --> 15:32.760
嗯

15:32.760 --> 15:34.160
还没有分家

15:34.160 --> 15:34.680
以及呢

15:34.680 --> 15:35.640
后来分家

15:35.640 --> 15:36.080
到后来

15:36.080 --> 15:38.160
其实我们也在用这个模板

15:38.160 --> 15:38.800
然后呢

15:38.800 --> 15:41.840
就是我们会按照这个模板的语法来去写

15:41.920 --> 15:42.960
写完之后呢

15:42.960 --> 15:43.680
丢给后端

15:43.680 --> 15:44.720
后端那边呢

15:44.720 --> 15:46.080
他解析一下

15:46.080 --> 15:46.400
然后呢

15:46.400 --> 15:48.960
就变成一个动态的一个网页了

15:48.960 --> 15:49.280
这个呢

15:49.280 --> 15:50.000
就是啊

15:50.000 --> 15:51.120
模板编译啊

15:51.120 --> 15:52.080
模模板编译

15:52.080 --> 15:53.760
在早些年是非常流行

15:53.760 --> 15:54.320
但现在呢

15:54.320 --> 15:55.680
其实已经没落了

15:55.680 --> 15:56.960
然后这个模板编译呢

15:56.960 --> 15:58.320
他里头倒是啊

15:58.320 --> 15:59.280
这种写法呢

15:59.280 --> 16:00.400
倒是很多啊

16:00.400 --> 16:00.880
很多呢

16:00.880 --> 16:01.280
然后呢

16:01.280 --> 16:01.680
在这呢

16:01.680 --> 16:03.040
我就不再去详细的

16:03.040 --> 16:04.800
介绍每一种写法了

16:04.800 --> 16:06.720
我们就直接把它拿过来

16:06.720 --> 16:07.360
拿来之后呢

16:07.360 --> 16:09.600
我就简简单的去讲一下啊

16:09.600 --> 16:11.360
他这个到底是什么意思啊

16:11.360 --> 16:12.560
像这种一个简阔号

16:12.560 --> 16:14.560
一个百分号跟上一个等号

16:14.560 --> 16:15.360
这种东西呢

16:15.360 --> 16:16.960
就是一个模板语法

16:16.960 --> 16:17.440
知道吧

16:17.440 --> 16:19.280
但是这个关于这个模板呢

16:19.280 --> 16:20.320
其实有很多种

16:20.320 --> 16:21.600
他们的语法是不一样的

16:21.600 --> 16:22.240
但是最终

16:22.240 --> 16:23.840
他们的一个功能是一样的

16:23.840 --> 16:26.320
最终都会被解析成一个真真正正的

16:26.320 --> 16:29.360
一个动态的html的这么一个页面啊

16:29.360 --> 16:29.760
好

16:29.760 --> 16:30.240
这些呢

16:30.240 --> 16:31.440
其实都不重要

16:31.440 --> 16:32.080
是不是啊

16:32.080 --> 16:32.800
他什么模法

16:32.800 --> 16:33.520
我们

16:33.520 --> 16:34.240
他什么模

16:34.240 --> 16:35.520
这个模板的语法

16:35.520 --> 16:37.440
我们就按他们的来就行了啊

16:37.440 --> 16:38.000
然后呢

16:38.000 --> 16:38.480
接下来

16:38.480 --> 16:39.040
你看啊

16:39.040 --> 16:39.920
这个楼代使呢

16:39.920 --> 16:41.040
他其实是封装了

16:41.040 --> 16:43.280
我们一个编译的这么一个功能啊

16:43.280 --> 16:45.760
那目前在这看到的这个user

16:45.760 --> 16:46.560
这个user呢

16:46.560 --> 16:47.120
是啥

16:47.120 --> 16:48.320
就是一个站位服务

16:49.200 --> 16:49.840
然后呢

16:49.840 --> 16:50.320
这个方法

16:50.320 --> 16:52.240
我们通过这个template去调

16:52.240 --> 16:52.800
调完之后呢

16:52.800 --> 16:53.600
他有一个结果

16:53.600 --> 16:55.040
把这个结果存起来

16:55.040 --> 16:55.760
存起来之后呢

16:55.760 --> 16:57.200
他其实是返回了一个方法

16:58.400 --> 16:59.440
然后这个方法呢

16:59.440 --> 17:00.480
我们直接去调

17:00.480 --> 17:01.200
接下来

17:01.200 --> 17:02.080
这个方法当中呢

17:02.080 --> 17:03.920
咱需要去给上一个参数

17:03.920 --> 17:04.800
那这个参数呢

17:04.800 --> 17:06.000
就是一个对象了

17:06.000 --> 17:06.960
这个对象当中呢

17:06.960 --> 17:07.360
你看啊

17:07.360 --> 17:08.160
这个user呢

17:08.160 --> 17:09.200
作为一个k啊

17:09.200 --> 17:10.480
他俩是一对应了

17:10.480 --> 17:10.880
然后呢

17:10.880 --> 17:12.080
接下来这个user后边

17:12.080 --> 17:13.440
是不是跟了一个value值啊

17:13.440 --> 17:14.080
那最终呢

17:14.080 --> 17:15.360
这个value值呢

17:15.360 --> 17:16.880
就会去替代这个

17:16.880 --> 17:17.520
什么呢

17:17.520 --> 17:18.720
替代这个user

17:19.440 --> 17:20.160
明白吧

17:20.160 --> 17:20.800
然后呢

17:20.800 --> 17:21.520
你看啊

17:21.520 --> 17:22.560
咱把这个内容呢

17:22.560 --> 17:23.360
给他console出来

17:27.740 --> 17:29.340
我们来看一下这个结果

17:30.460 --> 17:30.940
在这

17:31.740 --> 17:32.620
来刷新一下

17:33.260 --> 17:33.900
看见没有

17:33.900 --> 17:34.460
Hello

17:34.460 --> 17:35.260
Fright

17:35.260 --> 17:35.660
看到吗

17:36.220 --> 17:36.940
所以你看

17:36.940 --> 17:37.820
这一坨

17:37.820 --> 17:40.220
就最终会被解析成一个真正的

17:40.220 --> 17:41.340
一个数据了

17:41.340 --> 17:41.660
这个呢

17:41.660 --> 17:42.620
其实就是说

17:42.620 --> 17:43.340
模板自负串

17:43.340 --> 17:43.740
你知道吗

17:44.220 --> 17:44.780
他呢

17:44.780 --> 17:46.060
需要跟我们的后端

17:46.060 --> 17:47.100
进行一个配合

17:47.820 --> 17:49.340
你需要去拿到这个数据

17:49.340 --> 17:50.140
然后呢

17:50.140 --> 17:51.260
只不过就是

17:51.260 --> 17:52.700
人家已经

17:52.700 --> 17:53.500
这个loaddash呢

17:53.500 --> 17:54.700
帮咱们去封装了

17:54.700 --> 17:55.900
如果说你用其他的

17:55.900 --> 17:56.540
你还需要去

17:56.540 --> 17:58.460
引入他相应的一些文件啊

17:58.460 --> 17:59.020
好吧

17:59.020 --> 17:59.340
这个呢

17:59.340 --> 18:00.700
就是关于这个time plate

18:00.700 --> 18:02.300
咱简单的去说一下啊

18:02.300 --> 18:02.700
然后呢

18:02.700 --> 18:03.420
继续往下吧

18:05.020 --> 18:05.820
再往下呢

18:05.820 --> 18:07.020
就是这个tooler

18:07.020 --> 18:08.140
咱们已经说过了

18:08.140 --> 18:09.260
toolerpr也说过

18:09.260 --> 18:09.820
然后呢

18:09.820 --> 18:10.300
trim

18:10.300 --> 18:10.780
是不是

18:10.780 --> 18:11.340
这个trim呢

18:11.340 --> 18:12.460
其实我们的原生呢

18:12.460 --> 18:13.020
这个

18:13.020 --> 18:14.220
trim那个方法

18:14.220 --> 18:15.340
也都有

18:15.340 --> 18:15.740
它呢

18:15.740 --> 18:17.180
是用来去除这个

18:17.180 --> 18:18.380
守尾空格的

18:18.380 --> 18:18.700
然后呢

18:18.700 --> 18:19.260
只不过就是

18:19.260 --> 18:20.220
它多了一个

18:20.220 --> 18:21.180
额外的一个功能

18:21.180 --> 18:21.820
什么功能呢

18:21.820 --> 18:22.300
你看啊

18:22.300 --> 18:22.620
来

18:23.180 --> 18:23.580
trim

18:25.020 --> 18:25.420
第一个

18:25.420 --> 18:26.380
你要去除的

18:26.380 --> 18:26.940
一个东西

18:26.940 --> 18:27.420
是不是

18:27.420 --> 18:28.300
我现在

18:28.300 --> 18:29.660
后边不是一个空格

18:29.660 --> 18:31.180
空格那个咱不用演示了

18:31.180 --> 18:31.660
那个呢

18:31.660 --> 18:32.300
大家都懂

18:32.300 --> 18:33.500
原生的方法

18:33.500 --> 18:34.940
你们学过之后呢

18:34.940 --> 18:35.900
就应该知道

18:35.900 --> 18:36.300
然后呢

18:36.300 --> 18:36.780
这个

18:36.780 --> 18:37.740
后边这个东西呢

18:37.740 --> 18:38.620
就是你看

18:38.620 --> 18:40.460
我不光可以去除空格

18:40.460 --> 18:41.420
我还可以去除

18:41.420 --> 18:42.140
诸如此类的

18:42.860 --> 18:43.340
然后呢

18:43.340 --> 18:45.260
把第二个参数呢

18:45.260 --> 18:45.740
丢进来

18:46.860 --> 18:47.500
丢进来

18:47.500 --> 18:49.100
跟后边的这个东西

18:49.100 --> 18:49.660
是一样

18:49.660 --> 18:50.380
就ok了

18:50.380 --> 18:52.540
他就能够帮咱们去去掉了

18:53.100 --> 18:53.340
来

18:53.340 --> 18:53.900
我们看一下

18:53.900 --> 18:54.460
结果

18:54.460 --> 18:55.500
在这走着

18:58.220 --> 18:58.780
conso呢

18:58.780 --> 19:01.260
今天要给我整死了

19:01.260 --> 19:01.500
好

19:01.500 --> 19:01.900
你看

19:01.900 --> 19:02.380
开吻

19:02.380 --> 19:03.420
是不是就出来了

19:03.420 --> 19:04.780
它后边的那个横杠

19:04.780 --> 19:05.500
是不是就没有了

19:06.780 --> 19:07.900
那跟这个trim

19:07.900 --> 19:08.700
相对应的

19:08.700 --> 19:09.660
有几个方法

19:10.220 --> 19:10.860
trim

19:10.860 --> 19:11.260
n的

19:11.420 --> 19:11.740
这个呢

19:11.740 --> 19:13.260
只是仅仅去处理

19:13.260 --> 19:14.860
最后的这个空格

19:14.860 --> 19:15.420
然后呢

19:15.420 --> 19:17.020
这个trims大的

19:17.020 --> 19:18.620
它仅仅是处理

19:18.620 --> 19:19.420
啊

19:19.420 --> 19:20.060
头

19:20.060 --> 19:20.940
就就这个

19:20.940 --> 19:23.660
我们的开始的地方的那个空格

19:23.660 --> 19:23.740
啊

19:23.740 --> 19:24.220
不

19:24.220 --> 19:25.020
还不是空格

19:25.020 --> 19:26.140
就是制服吧

19:26.140 --> 19:27.340
处理这个制服

19:27.340 --> 19:27.900
trim

19:27.900 --> 19:28.300
好吧

19:30.460 --> 19:30.700
好

19:30.700 --> 19:31.100
然后呢

19:31.100 --> 19:32.220
继续往下啊

19:32.220 --> 19:32.540
啊

19:32.540 --> 19:33.340
往下呢

19:33.340 --> 19:34.860
还有这么一个方法啊

19:34.860 --> 19:35.980
那这个方法呢

19:35.980 --> 19:36.940
它是用来干嘛

19:36.940 --> 19:39.340
是用来添加一个省略号

19:39.340 --> 19:39.580
哎

19:39.580 --> 19:40.140
这个东西呢

19:40.140 --> 19:41.740
倒是非常的实用啊

19:41.740 --> 19:42.300
你想啊

19:42.300 --> 19:43.420
就是像我们的

19:43.420 --> 19:43.820
呃

19:43.820 --> 19:44.860
在布局的时候呢

19:44.860 --> 19:45.820
有有的时候呢

19:45.820 --> 19:46.380
比如说

19:46.380 --> 19:48.300
我们的这个图文列表啊

19:48.300 --> 19:49.020
一个图片

19:49.020 --> 19:50.220
下面一段文字

19:50.220 --> 19:50.620
是吧

19:50.620 --> 19:51.660
那这个时候呢

19:51.660 --> 19:52.780
它的位置非常之小

19:52.780 --> 19:53.500
那这个文字呢

19:53.500 --> 19:55.820
我们是通过后端去求过来的

19:55.820 --> 19:56.620
求过来之后呢

19:56.620 --> 19:57.660
这个就是图

19:57.660 --> 19:58.540
就是这个文章

19:58.540 --> 19:59.500
它的一个标题

19:59.500 --> 20:01.820
那这个标题往往会会很长

20:02.460 --> 20:04.060
那你显示不了

20:04.060 --> 20:04.940
怎么办啊

20:04.940 --> 20:06.780
加上三个省略号

20:06.780 --> 20:07.660
就是三个点

20:08.620 --> 20:10.540
那那个加法呢

20:10.540 --> 20:11.980
其实那个那个方法呢

20:11.980 --> 20:13.180
就是在之前啊

20:13.180 --> 20:15.180
就是包括现在CSS3可以了

20:15.180 --> 20:16.700
在之前没有CSS3的时候呢

20:16.700 --> 20:18.700
那个很难处理的

20:18.700 --> 20:19.340
真的啊

20:19.340 --> 20:21.340
我们都要通过GS去处理了

20:21.340 --> 20:23.500
所以特别的麻烦啊

20:23.500 --> 20:23.980
好

20:23.980 --> 20:25.180
那现在Lowdash呢

20:25.180 --> 20:26.460
它提供了这么一个方法

20:26.460 --> 20:27.660
咱们来演示一下啊

20:27.660 --> 20:28.940
直接console.log

20:30.540 --> 20:31.980
一个下滑线一个点

20:31.980 --> 20:32.300
然后呢

20:34.610 --> 20:36.290
点掉一下这个方法

20:36.290 --> 20:36.610
然后呢

20:36.610 --> 20:37.410
这个方法当中呢

20:37.410 --> 20:38.690
我们给上一句话

20:38.770 --> 20:39.090
嗨

20:40.130 --> 20:40.770
嗨什么的

20:40.770 --> 20:41.650
嗨这个Kevin

20:42.610 --> 20:43.890
你好 Kevin 是不是啊

20:43.890 --> 20:44.210
然后

20:47.410 --> 20:51.250
和 are you feeling today

20:52.850 --> 20:54.450
how are you feeling today

20:54.450 --> 20:55.890
are 缺了一个

20:57.570 --> 20:59.090
今天感觉怎么样

20:59.090 --> 20:59.490
是不是啊

21:00.610 --> 21:05.090
I am feeling great

21:06.610 --> 21:08.290
感觉棒棒的啊

21:08.370 --> 21:09.090
不要不要的

21:10.210 --> 21:10.370
好

21:11.090 --> 21:12.530
来这么这么一个

21:12.530 --> 21:13.090
一个啊

21:13.090 --> 21:13.730
那现在呢

21:13.730 --> 21:14.610
就是丢了一句话

21:14.610 --> 21:15.250
是不是

21:15.250 --> 21:16.290
丢了一句话之后呢

21:16.290 --> 21:18.290
他其实就能够帮咱们去解析了

21:18.290 --> 21:19.570
他有一个默认的一个值

21:19.570 --> 21:20.130
知道吗

21:20.130 --> 21:20.850
来走着

21:20.850 --> 21:21.730
我们来看一下

21:21.730 --> 21:22.370
有没有

21:22.370 --> 21:23.170
Hi Kevin

21:23.170 --> 21:24.130
how are you feeling

21:24.130 --> 21:24.450
啊

21:24.450 --> 21:26.450
这个Ling就没有了

21:26.450 --> 21:27.490
你看他就

21:27.490 --> 21:29.890
到这个L这就给咱们去截断了

21:31.090 --> 21:31.970
这是一个默认的

21:32.610 --> 21:33.250
默认的

21:33.250 --> 21:34.850
那其实我们是可以去控制的

21:34.850 --> 21:36.450
你想在哪里去截断

21:36.450 --> 21:37.570
都是ok的

21:37.650 --> 21:38.530
那怎么去控制呢

21:38.530 --> 21:39.810
就是第二个参数

21:39.810 --> 21:40.530
第二个参数呢

21:40.530 --> 21:41.490
是一个对象

21:41.490 --> 21:43.010
然后这个对象当中呢

21:43.010 --> 21:44.850
比如说我们可以给上一个lens

21:46.690 --> 21:47.250
那lens呢

21:47.250 --> 21:47.890
不要啥意思啊

21:47.890 --> 21:49.250
就说他的一个长度

21:49.250 --> 21:50.050
那这个长度呢

21:50.050 --> 21:50.770
我们给上一个值

21:50.770 --> 21:51.730
就是一个10

21:51.730 --> 21:53.010
那来看一下

21:53.010 --> 21:54.610
10给完刷新走着

21:54.610 --> 21:55.090
这个时候呢

21:55.090 --> 21:55.650
你看啊

21:55.650 --> 21:56.610
他其实啊

21:56.610 --> 21:57.090
1

21:57.090 --> 21:57.570
2

21:57.570 --> 21:58.210
3

21:58.210 --> 21:58.850
4

21:58.850 --> 21:59.410
5

21:59.410 --> 21:59.970
6

21:59.970 --> 22:00.610
7

22:00.610 --> 22:01.330
a

22:01.330 --> 22:01.810
a

22:03.650 --> 22:04.210
7

22:04.210 --> 22:06.450
他怎么到7这给我截断了呢

22:07.570 --> 22:08.210
好吧

22:08.210 --> 22:09.410
来刷新一下

22:09.410 --> 22:10.450
再来看一下

22:10.450 --> 22:10.930
1

22:10.930 --> 22:11.410
2

22:11.410 --> 22:12.050
3

22:12.050 --> 22:12.610
4

22:12.610 --> 22:13.090
5

22:13.090 --> 22:13.650
6

22:13.650 --> 22:14.050
7

22:14.050 --> 22:14.770
8

22:14.770 --> 22:15.250
是这样的

22:16.130 --> 22:17.970
总共留10位

22:17.970 --> 22:19.410
总共留10个字符

22:20.370 --> 22:21.170
看到吧

22:21.170 --> 22:21.730
然后呢

22:21.730 --> 22:22.770
这前面是7

22:22.770 --> 22:23.090
然后呢

22:23.090 --> 22:24.370
后边加上这三个点

22:24.370 --> 22:25.170
总共是10

22:25.170 --> 22:26.050
是这个意思啊

22:26.050 --> 22:26.450
lens啊

22:27.730 --> 22:29.090
然后还有

22:29.090 --> 22:29.810
另外一个呢

22:29.810 --> 22:30.850
是这个啊

22:30.850 --> 22:31.570
这个东西

22:31.570 --> 22:32.130
这个东西呢

22:32.130 --> 22:34.450
其实我们是可以给上一个政则

22:35.250 --> 22:35.890
那吧

22:35.890 --> 22:36.450
政则

22:36.450 --> 22:37.010
比如说啊

22:37.010 --> 22:38.210
来政则放了里头

22:38.210 --> 22:39.570
就是一个感叹号

22:39.570 --> 22:40.930
那这个感叹号表示

22:40.930 --> 22:43.490
就是你要去匹配这个感叹号

22:43.490 --> 22:45.730
那匹配到感叹号之后呢

22:45.730 --> 22:48.130
感叹号后边的所有的内容呢

22:48.130 --> 22:49.570
全部省略

22:49.570 --> 22:50.610
看一下效果啊

22:50.610 --> 22:51.330
走刷新

22:53.570 --> 22:55.330
把这个干掉啊

22:55.330 --> 22:56.850
再来刷新走

22:56.850 --> 22:57.330
这个时候呢

22:57.330 --> 22:57.810
你看啊

22:57.810 --> 22:58.610
跟前面比

22:58.610 --> 22:59.170
是不是

22:59.170 --> 23:00.850
匹配到这个感叹号了

23:00.850 --> 23:02.050
感叹号

23:02.050 --> 23:03.650
以及感叹后后边

23:03.650 --> 23:05.650
所有的全部截断

23:05.730 --> 23:06.210
点点点

23:07.490 --> 23:07.810
这个呢

23:07.810 --> 23:08.530
就是这个参数

23:08.530 --> 23:09.730
它的一个作用

23:09.730 --> 23:10.370
好吧

23:10.370 --> 23:12.050
那这个这个方法啊

23:12.050 --> 23:13.570
省略号的这个方法啊

23:13.570 --> 23:14.050
然后呢

23:14.050 --> 23:15.010
往下走

23:15.010 --> 23:15.810
往下走呢

23:15.810 --> 23:18.210
还有还有最后一个方法啊

23:18.210 --> 23:19.410
最后一个方法呢

23:19.410 --> 23:21.010
是这个verse

23:21.010 --> 23:21.490
这个东西

23:24.050 --> 23:24.610
verse

23:24.610 --> 23:25.650
那这个verse呢

23:25.650 --> 23:26.050
它呢

23:26.050 --> 23:28.130
是把自服串的单词呢

23:28.130 --> 23:29.810
给咱们去拆分成

23:29.810 --> 23:30.530
一个什么呢

23:30.530 --> 23:31.010
数组

23:35.520 --> 23:35.920
console

23:36.480 --> 23:37.280
console console

23:38.960 --> 23:39.760
verse

23:39.760 --> 23:41.360
然后我们要传上一个参

23:41.360 --> 23:41.760
是吧

23:41.760 --> 23:42.480
比如说开分

23:43.200 --> 23:43.440
成

23:44.640 --> 23:45.040
好

23:45.040 --> 23:46.560
然后我们看这个结果

23:46.560 --> 23:48.080
它能够把开分跟成

23:48.080 --> 23:48.800
两个单词呢

23:48.800 --> 23:50.960
放在一个数组当中

23:50.960 --> 23:51.360
这个呢

23:51.360 --> 23:52.400
就是它的一个作用

23:52.400 --> 23:52.720
verse

23:53.520 --> 23:53.920
行吧

23:53.920 --> 23:55.200
那这样的话就是

23:55.200 --> 23:56.160
verse说完之后呢

23:56.160 --> 23:57.200
我们的这个stream

23:57.200 --> 23:58.400
这个方法呢

23:58.400 --> 23:59.200
这个对象当中呢

23:59.200 --> 24:00.000
这些方法呢

24:00.000 --> 24:01.840
咱们就算是已经说完了

24:01.840 --> 24:03.040
那说完了

24:03.040 --> 24:03.920
还有剩下的

24:03.920 --> 24:05.680
还有一些其他的一些东西啊

24:05.680 --> 24:06.960
那其他的一些东西呢

24:06.960 --> 24:07.440
这个呢

24:07.440 --> 24:09.360
就只能靠你们自己去

24:09.360 --> 24:10.320
学习了啊

24:10.320 --> 24:11.280
其实也是

24:11.280 --> 24:12.400
你们可以啊

24:12.400 --> 24:14.160
就看一下它的这个API

24:14.160 --> 24:14.720
看完之后呢

24:14.720 --> 24:15.440
他的一个说明

24:15.440 --> 24:15.920
完了之后呢

24:15.920 --> 24:16.560
你去看一下

24:16.560 --> 24:17.760
他的这个这个什么呢

24:17.760 --> 24:18.320
例子

24:18.320 --> 24:20.640
就能够揣测出个啊

24:20.640 --> 24:21.200
七八成

24:21.840 --> 24:23.040
如果说有一些方法

24:23.040 --> 24:24.320
你实在是不知道的话

24:25.040 --> 24:26.320
你可以去搜一下

24:26.320 --> 24:27.760
其实网络当中呢

24:27.760 --> 24:29.360
这些资源还是有的

24:29.360 --> 24:30.160
有的人

24:30.160 --> 24:32.000
会帮你去解决这个问题

24:32.000 --> 24:32.400
好不好

24:32.400 --> 24:34.640
我们要学会主动学习的

24:34.640 --> 24:35.600
这个方式

24:35.600 --> 24:36.160
行吧

24:36.160 --> 24:37.920
那我们的这个loads的课呢

24:37.920 --> 24:39.120
咱们就说到这里

24:39.360 --> 24:40.000
各位同学

24:40.000 --> 24:40.400
再见

