WEBVTT

00:00.560 --> 00:03.960
嗨 各位同学 大家好 我是陈学辉

00:03.960 --> 00:06.960
接下来的课程是由我来讲的

00:06.960 --> 00:10.560
在前面我们学习了网络基础的课程

00:10.560 --> 00:13.560
大家了解了网络的来龙去脉

00:13.560 --> 00:16.560
学习到了很多网络相关的一些概念

00:16.560 --> 00:22.560
比如说 现在咱们已经对域名、IP、网络模型、HTP协议

00:22.560 --> 00:26.560
网络请求、AJAX、JetsonP等等这些知识点

00:26.560 --> 00:28.560
现在已经是了如指掌了

00:28.560 --> 00:31.560
那我们接下来要学习的这个内容

00:31.560 --> 00:33.560
其实跟这些是息息相关的

00:33.560 --> 00:36.560
它也是属于我们网络当中的部分

00:36.560 --> 00:39.560
其实是对于网络方面的补充的内容

00:39.560 --> 00:42.560
同时也是非常非常重要的

00:42.560 --> 00:44.560
这个就是本地化存储

00:44.560 --> 00:48.560
那本地化存储它的方式有很多

00:48.560 --> 00:53.560
其实前面我们讲过一种在网络的课里边学到了

00:53.560 --> 00:54.560
叫什么 叫Cookie

00:54.560 --> 00:57.560
但是只是简单的讲了一下

00:57.560 --> 01:00.560
而我们在这节课就要深入的去探讨一下

01:00.560 --> 01:04.560
并且要讲一下代码层面的具体操作

01:04.560 --> 01:07.560
那我们就从Cookie来说起

01:07.560 --> 01:09.560
我在这儿给上一个script标签

01:09.560 --> 01:11.560
写上一些注释

01:11.560 --> 01:13.560
Cookie

01:13.560 --> 01:15.560
先写一下Cookie

01:15.560 --> 01:18.560
这个东西大家现在已经算是非常的熟悉了

01:18.560 --> 01:21.560
那我们在前面的网络课里边说过

01:21.560 --> 01:22.560
这个Cookie是什么

01:22.560 --> 01:26.560
是浏览器里边存储数据的东西

01:26.560 --> 01:29.560
那这个是对它的一个大概的定论

01:29.560 --> 01:33.560
那我们现在先不着急去讨论它的具体的定义

01:33.560 --> 01:35.560
我们先来思考一个问题

01:35.560 --> 01:36.560
拿这个问题

01:36.560 --> 01:38.560
我去讲述一下Cookie的重要性

01:38.560 --> 01:40.560
以及它的运行机制

01:40.560 --> 01:42.560
那这个问题是什么

01:42.560 --> 01:45.560
就是为什么有Cookie

01:45.560 --> 01:48.940
为什么有Cookie呢

01:48.940 --> 01:49.940
我们想想这个问题

01:49.940 --> 01:51.940
听过前面的课了

01:51.940 --> 01:53.940
同学都会想

01:53.940 --> 01:54.940
那我之前知道

01:54.940 --> 01:57.940
是不是因为它能够长期存储数据

01:57.940 --> 02:00.940
因为我们在前面的网络课里边讲过

02:00.940 --> 02:01.940
它跟变量的一个区别

02:01.940 --> 02:04.940
就是说它能够长期的存储数据

02:04.940 --> 02:06.940
是吧

02:06.940 --> 02:07.940
那没有错

02:07.940 --> 02:09.940
但是我要接着去问

02:09.940 --> 02:16.340
为什么我们需要长期存储数据呢

02:16.340 --> 02:17.340
为什么呢

02:17.340 --> 02:19.340
因为外部应用程序

02:19.340 --> 02:20.340
大家已经知道

02:20.340 --> 02:24.340
它是使用HTTP协议进行数据的传输的

02:24.340 --> 02:27.340
那这个HTTP协议

02:27.340 --> 02:29.340
我们在前面听过

02:29.340 --> 02:30.340
它有一个词叫什么

02:30.340 --> 02:32.340
叫上下文

02:32.340 --> 02:34.340
上下文无关

02:34.340 --> 02:40.080
无关

02:40.080 --> 02:42.080
上下文无关协议

02:42.080 --> 02:45.080
这是在网络的课里边这么去叫它的

02:45.080 --> 02:47.080
但是在这我给它换一下

02:47.080 --> 02:48.080
换成什么呢

02:48.080 --> 02:51.080
换成是一个无状态的协议

02:51.080 --> 02:54.080
那这个词就会更短一些

02:54.080 --> 02:57.080
然后理解起来就非常的容易

02:57.080 --> 03:01.080
那在这就是我要解释一下这个无状态

03:01.080 --> 03:03.080
那其实跟上下文无关

03:03.080 --> 03:04.080
它们指的是同一回事

03:04.080 --> 03:06.080
但是咱们再解释一下

03:06.080 --> 03:09.080
因为它跟这个QQ是有很大的关系的

03:09.080 --> 03:11.080
那这个无状态指的是什么呢

03:11.080 --> 03:13.080
在同一个链接当中

03:13.080 --> 03:16.080
两个执行成功的请求之间

03:16.080 --> 03:17.080
是没有关系的

03:17.080 --> 03:19.080
我们都知道一个地址

03:19.080 --> 03:21.080
咱可以进行多次的请求

03:21.080 --> 03:24.080
但是你多次的请求地址相同

03:24.080 --> 03:27.080
但是不同的请求之间

03:27.080 --> 03:29.080
他们是没有半毛钱的关系了

03:29.080 --> 03:31.080
那这就会有问题啊

03:31.080 --> 03:32.080
什么问题呢

03:32.080 --> 03:35.080
就是用户没有办法在同一个网站中

03:35.080 --> 03:37.080
进行连接的一个交互

03:37.080 --> 03:39.080
咱举一个实际的例子吧

03:39.080 --> 03:42.080
比如说在电商型的网站当中

03:42.080 --> 03:45.080
我们的用户在某一个页面

03:45.080 --> 03:47.080
咱去逛商场

03:47.080 --> 03:49.080
是不是在这个网站当中去逛

03:49.080 --> 03:50.080
逛完之后

03:50.080 --> 03:52.080
它就需要去购买东西

03:52.080 --> 03:53.080
然后它进行对比

03:53.080 --> 03:56.080
先把这个东西添加到哪里呢

03:56.080 --> 03:57.080
购物车

03:57.080 --> 04:00.080
这个时候它有去买别的商品

04:00.080 --> 04:01.080
买别的商品的时候

04:01.080 --> 04:03.080
它肯定需要去新开页面了

04:03.080 --> 04:04.080
这个时候注意

04:04.080 --> 04:06.080
它是两个不同的页面

04:06.080 --> 04:08.080
两个不同的页面当中

04:08.080 --> 04:10.080
人家都添加了这个商品

04:10.080 --> 04:12.080
添到哪儿购物车了

04:13.080 --> 04:14.080
那好

04:14.080 --> 04:15.080
添到购物车

04:15.080 --> 04:17.080
这个功能是不是一样的

04:17.080 --> 04:18.080
功能一样的话

04:18.080 --> 04:19.080
他们请求的地址

04:19.080 --> 04:21.080
绝对是必须是一样的

04:21.080 --> 04:22.080
请求的地址一样

04:22.080 --> 04:24.080
但是请求的次数

04:24.080 --> 04:27.080
或者说请求的我们的页面不一样

04:28.080 --> 04:30.080
也就是说它是多次的请求

04:30.080 --> 04:32.080
那这个多次的请求

04:32.080 --> 04:34.080
他们之间是没有任何的关系的

04:34.080 --> 04:37.080
那浏览器也就无法知道用户

04:37.080 --> 04:39.080
最终是选择了哪些商品

04:39.080 --> 04:41.080
放到了购物车当中

04:42.080 --> 04:45.080
这个就叫无状态

04:46.080 --> 04:48.080
那它的原因是什么呢

04:49.080 --> 04:52.080
其实是客户端发送了一次请求

04:52.080 --> 04:54.080
然后服务端去接收到这个请求之后

04:54.080 --> 04:56.080
处理了并且返回了

04:56.080 --> 04:58.080
客户端收到返回之后

04:58.080 --> 05:00.080
也就是说他拿到这个结果了

05:00.080 --> 05:02.080
之后这个请求就断开了

05:05.080 --> 05:06.080
断开了之后

05:06.080 --> 05:08.080
两次之间

05:08.080 --> 05:10.080
你能找到任何的关系吗

05:10.080 --> 05:11.080
是不能的

05:11.080 --> 05:14.580
还记不记我们之前在网络课里边

05:14.580 --> 05:16.580
说了一个登陆的那个例子

05:16.580 --> 05:18.580
那如果说按照这种逻辑来讲的话

05:18.580 --> 05:20.580
登陆的那个例子

05:20.580 --> 05:21.580
它其实就不成立

05:21.580 --> 05:23.580
那它会是什么样子呢

05:23.580 --> 05:25.580
我们在一个页面当中输入了账号信息

05:25.580 --> 05:26.580
然后点击了登陆

05:26.580 --> 05:28.580
是不是就OK了呀

05:28.580 --> 05:31.580
但是当我们一刷新页面之后

05:31.580 --> 05:33.580
你的登陆状态

05:33.580 --> 05:35.580
它就不存在了

05:35.580 --> 05:37.580
还是一个为登陆的状态

05:37.580 --> 05:41.580
因为http是一个无状态的协议

05:43.580 --> 05:45.580
所以你获取到账号信息的

05:45.580 --> 05:47.580
这个请求发送之后

05:47.580 --> 05:48.580
你拿到了

05:48.580 --> 05:49.580
拿到之后

05:49.580 --> 05:50.580
怎么样

05:50.580 --> 05:51.580
它就断开了

05:51.580 --> 05:52.580
那这个账号的信息

05:52.580 --> 05:55.580
仅仅是当你发送请求之后

05:55.580 --> 05:56.580
请求成功之后

05:56.580 --> 05:58.580
它能够取得到

05:58.580 --> 05:59.580
是不是之后

05:59.580 --> 06:01.580
就跟我没有关系了

06:01.580 --> 06:03.580
那你就不敢动

06:03.580 --> 06:04.580
一动的话

06:04.580 --> 06:06.580
你的登陆状态就没有了

06:06.580 --> 06:07.580
就好比

06:07.580 --> 06:08.580
我现在

06:08.580 --> 06:10.580
我想给你打电话聊天

06:10.580 --> 06:14.580
那我就只能够保持这个通话

06:14.580 --> 06:15.580
不能够断

06:15.580 --> 06:16.580
那断了之后

06:16.580 --> 06:18.580
我就不能够跟你聊天了

06:18.580 --> 06:21.900
理解这个意思吧

06:21.900 --> 06:23.900
那你要想

06:23.900 --> 06:25.900
再变成一个登陆的状态怎么办

06:25.900 --> 06:27.900
你再发送一次请求

06:27.900 --> 06:28.900
多次的请求之间

06:28.900 --> 06:29.900
没有任何的关系

06:29.900 --> 06:31.900
而且你请求发送之后

06:31.900 --> 06:33.900
页面千万不要刷新

06:33.900 --> 06:34.900
一刷新完了

06:34.900 --> 06:35.900
它就是一个无状态了

06:35.900 --> 06:37.900
而实际的情况

06:37.900 --> 06:38.900
它并非如此

06:38.900 --> 06:40.900
你不管刷新多少次

06:40.900 --> 06:42.900
即使你把你的刷新的按钮

06:42.900 --> 06:43.900
给它点坏了

06:43.900 --> 06:45.900
那它显示的人就是一个

06:45.900 --> 06:46.900
登陆的状态

06:46.900 --> 06:47.900
这是为什么

06:47.900 --> 06:49.900
这是因为我们请求

06:49.900 --> 06:50.900
被关联了起来

06:50.900 --> 06:52.900
就打破了这个什么的

06:52.900 --> 06:53.900
无状态

06:53.900 --> 06:57.460
那随着这个外部技术的

06:57.460 --> 06:58.460
一个不断的发展

06:58.460 --> 06:59.460
越来越多的功能

06:59.460 --> 07:00.460
跟业务的场景

07:00.460 --> 07:02.460
它需要我们这样

07:02.460 --> 07:03.460
才能够实现它

07:03.460 --> 07:05.460
那如何能够做到

07:05.460 --> 07:07.460
就是借助的Cookie

07:07.460 --> 07:08.460
这个东西

07:08.460 --> 07:10.460
你说它重不重要

07:10.460 --> 07:11.460
非常的重要

07:12.460 --> 07:14.460
那它的一个具体的做法

07:14.460 --> 07:15.460
是怎样的呢

07:15.460 --> 07:17.460
就是当我们的服务器

07:17.460 --> 07:19.460
我这有一张图片

07:19.460 --> 07:21.460
打开它Cookie的一个原理

07:21.460 --> 07:23.460
你看

07:23.460 --> 07:24.460
我们浏览器

07:24.460 --> 07:25.460
是不是在这

07:25.460 --> 07:26.460
咱第一次发请求

07:26.460 --> 07:27.460
发给谁

07:27.460 --> 07:28.460
发给这个服务器

07:28.460 --> 07:29.460
好

07:29.460 --> 07:30.460
服务器

07:30.460 --> 07:32.460
现在它接收到这个请求了

07:32.460 --> 07:34.460
那接收到请求之后

07:34.460 --> 07:36.460
它在响应头里边

07:36.460 --> 07:38.460
会有一个设置

07:38.460 --> 07:39.460
这个设置叫什么

07:39.460 --> 07:43.460
叫SiteGunCookie

07:44.460 --> 07:46.460
它有这么一个选项

07:46.460 --> 07:47.460
填上去了

07:47.460 --> 07:48.460
然后填上去之后

07:48.460 --> 07:49.460
接下来

07:49.460 --> 07:50.460
它就要返回数据

07:50.460 --> 07:51.460
返回数据了

07:51.460 --> 07:52.460
你看看

07:52.460 --> 07:53.460
携带Cookie

07:53.460 --> 07:54.460
就给谁

07:54.460 --> 07:55.460
给浏览器了

07:55.460 --> 07:56.460
那浏览器

07:56.460 --> 07:57.460
它接收到之后

07:57.460 --> 07:59.460
就会把

07:59.460 --> 08:01.460
这你所带来的Cookie

08:01.460 --> 08:03.460
给我保存下来

08:03.460 --> 08:04.460
那保存下来之后

08:04.460 --> 08:05.460
接下来

08:05.460 --> 08:06.460
第二次请求

08:06.460 --> 08:07.460
它就能够

08:07.460 --> 08:08.460
把浏览器当中

08:08.460 --> 08:09.460
保存的Cookie

08:09.460 --> 08:11.460
在携带上

08:11.460 --> 08:12.460
携带之后

08:12.460 --> 08:13.460
发给谁

08:13.460 --> 08:15.460
发给我们的服务器

08:16.460 --> 08:17.460
然后浏览器

08:17.460 --> 08:18.460
它接收到之后

08:18.460 --> 08:19.460
它能够把Cookie

08:19.460 --> 08:20.460
进行一些解析

08:20.460 --> 08:21.460
是不是

08:21.460 --> 08:22.460
解析完了之后

08:22.460 --> 08:23.460
它一一验证

08:23.460 --> 08:24.460
确认过眼神

08:24.460 --> 08:25.460
是登陆过的人

08:25.460 --> 08:26.460
那好吧

08:26.460 --> 08:27.460
你这次的绘画

08:27.460 --> 08:28.460
跟上一次

08:28.460 --> 08:29.460
就属于同一次了

08:29.460 --> 08:30.460
这样的话

08:30.460 --> 08:31.460
是不是就关联起来了

08:31.460 --> 08:32.460
其实

08:32.460 --> 08:33.460
这个Cookie

08:33.460 --> 08:34.460
就是用来关联什么

08:34.460 --> 08:35.460
关联

08:35.460 --> 08:36.460
多次

08:36.460 --> 08:37.460
同样一个请求之间的

08:37.460 --> 08:38.460
一个联系

08:39.460 --> 08:40.460
那在这

08:40.460 --> 08:41.460
我们需要去注意的是什么

08:41.460 --> 08:43.460
就是SiteCookie

08:43.460 --> 08:44.460
这个东西

08:44.460 --> 08:45.460
它是由浏览器

08:45.460 --> 08:47.460
浮览器来设置的

08:49.460 --> 08:51.460
浮览器

08:51.460 --> 08:52.460
浮览器

08:52.460 --> 08:53.460
设置

08:53.460 --> 08:54.460
好

08:54.460 --> 08:55.460
我们前端

08:55.460 --> 08:57.460
你是没有办法去设置的

08:57.460 --> 08:58.460
好

08:58.460 --> 08:59.460
然后那第二个

08:59.460 --> 09:01.460
就是还有一个保存Cookie

09:01.460 --> 09:02.460
刚才我们已经说过

09:02.460 --> 09:03.460
是不是

09:03.460 --> 09:04.460
浏览器会把这个Cookie

09:04.460 --> 09:06.460
给它保存下来

09:06.460 --> 09:07.460
那这个步骤

09:07.460 --> 09:08.460
是浏览器做的

09:08.460 --> 09:09.460
知道吗

09:09.460 --> 09:10.460
我们前端

09:10.460 --> 09:11.460
没有办法去操作

09:11.460 --> 09:12.460
那这个步骤

09:12.460 --> 09:13.460
浏览器自动的

09:13.460 --> 09:14.460
去存储

09:14.460 --> 09:15.460
好

09:15.460 --> 09:16.460
然后还有另外一个

09:16.460 --> 09:17.460
就是我们的

09:17.460 --> 09:18.460
第二次http

09:18.460 --> 09:19.460
请求的时候

09:19.460 --> 09:21.460
它是不是会携带这个Cookie

09:22.460 --> 09:24.460
那这个携带的Cookie

09:24.460 --> 09:26.460
它是由http

09:26.460 --> 09:27.460
协议规定的

09:27.460 --> 09:29.460
我们前面的网络客里面

09:29.460 --> 09:30.460
有讲过

09:30.460 --> 09:31.460
这个知识点

09:31.460 --> 09:32.460
一定要串起来

09:32.460 --> 09:33.460
好不好

09:33.460 --> 09:34.460
那这个特点

09:34.460 --> 09:36.460
我们要说一下

09:36.460 --> 09:38.460
它其实是有很严重的问题

09:38.460 --> 09:39.460
什么很严重的问题

09:39.460 --> 09:40.460
就是我们的

09:40.460 --> 09:42.460
每次的http的请求

09:42.460 --> 09:44.460
它都会把这个Cookie

09:44.460 --> 09:46.460
给它携带过来

09:46.460 --> 09:47.460
那带过来之后

09:47.460 --> 09:50.460
是不是又重新发到这个服务器了

09:50.460 --> 09:51.460
那好

09:51.460 --> 09:53.460
那如果说有一些数据

09:53.460 --> 09:56.460
并不是每个请求都需要的

09:56.460 --> 09:57.460
有很多很多的

09:57.460 --> 09:58.460
比如说我们存出了

09:58.460 --> 09:59.460
很多的一些Cookie

09:59.460 --> 10:00.460
那这个Cookie

10:00.460 --> 10:01.460
在这次请求当中

10:01.460 --> 10:03.460
我不需要让它再发给

10:03.460 --> 10:04.460
我们的服务器

10:04.460 --> 10:05.460
它不是关于这个

10:05.460 --> 10:06.460
登陆的状态

10:06.460 --> 10:07.460
我就不需要发了

10:07.460 --> 10:09.460
但是不好意思

10:09.460 --> 10:11.460
人家可不管

10:11.460 --> 10:14.460
你在本页面在这个域名当中

10:14.460 --> 10:15.460
去设置了这些Cookie

10:15.460 --> 10:18.460
它都会在任意的请求当中

10:18.460 --> 10:19.460
都会给它携带

10:19.460 --> 10:20.460
携带之后

10:20.460 --> 10:23.460
统一的发给我们的服务器

10:23.460 --> 10:25.460
那这样的话

10:25.460 --> 10:27.460
就是它就会增加了

10:27.460 --> 10:29.460
网络的开销了

10:29.460 --> 10:31.460
所以Cookie

10:31.460 --> 10:33.460
它你再去使用的话

10:33.460 --> 10:34.460
要慎重

10:34.460 --> 10:36.460
对于每次的请求

10:36.460 --> 10:37.460
要携带的信息

10:37.460 --> 10:39.460
用Cookie存储的话

10:39.460 --> 10:40.460
你一定要存储

10:40.460 --> 10:42.460
就是相应的

10:42.460 --> 10:43.460
能够对口味的

10:43.460 --> 10:44.460
比如说

10:44.460 --> 10:46.460
就是像登陆状态

10:46.460 --> 10:48.460
这些东西你可以去存

10:48.460 --> 10:49.460
其他的一些数据

10:49.460 --> 10:51.460
你就不适合用Cookie去存了

10:51.460 --> 10:52.460
因为这些数据

10:52.460 --> 10:53.460
跟我们的后端

10:53.460 --> 10:54.460
跟我们的服务端

10:54.460 --> 10:55.460
是没有关系的

10:55.460 --> 10:58.460
但是每次都要带过去

10:58.460 --> 10:59.460
在以前Cookie

10:59.460 --> 11:01.460
它是被滥用了

11:01.460 --> 11:02.460
当成了什么

11:02.460 --> 11:04.460
当成了存储的工具

11:04.460 --> 11:05.460
其实也是没有办法

11:05.460 --> 11:06.460
因为之前

11:06.460 --> 11:08.460
没有别的存储办法

11:08.460 --> 11:09.460
你让我怎么办

11:09.460 --> 11:13.460
Cookie是唯一的一种存储的手段

11:13.460 --> 11:14.460
所以那个时候

11:14.460 --> 11:17.460
什么数据都用Cookie去存

11:17.460 --> 11:18.460
这些数据

11:18.460 --> 11:20.460
即使它不需要去带过去

11:20.460 --> 11:22.460
它也是同样存下来了

11:22.460 --> 11:25.460
这个其实就是对Cookie的一个滥用

11:25.460 --> 11:27.460
但是现在其实已经有

11:27.460 --> 11:29.460
别的本地化存储方案了

11:29.460 --> 11:31.460
这个咱们后边的课程

11:31.460 --> 11:33.460
会详细的去说

11:33.460 --> 11:34.460
好

11:34.460 --> 11:35.460
然后一会

11:35.460 --> 11:36.460
咱们再说完

11:36.460 --> 11:37.460
下面的这些东西

11:37.460 --> 11:39.460
我会用实际的代码去演示一下

11:39.460 --> 11:42.460
它能够把所有你存储的Cookie

11:42.460 --> 11:44.460
都给你带到服务器端

11:44.460 --> 11:45.460
行吧

11:45.460 --> 11:47.460
然后我们再回到这个页面

11:47.460 --> 11:49.460
那下面干嘛呢

11:49.460 --> 11:50.460
我们说了一堆

11:50.460 --> 11:53.460
然后下面我通过百度的账号

11:53.460 --> 11:55.460
咱们亲自的去看一下Cookie

11:55.460 --> 11:57.460
它的一个运行机制

11:57.460 --> 11:59.460
然后我们前面说过

11:59.460 --> 12:00.460
Cookie是说

12:00.460 --> 12:02.460
是在同一个域名下

12:02.460 --> 12:03.460
是吧

12:03.460 --> 12:04.460
一个页面当中你登录了

12:04.460 --> 12:06.460
在其他的页面当中

12:06.460 --> 12:09.460
是都能够显示成登录的状态

12:09.460 --> 12:11.460
那在这咱们演示一下

12:11.460 --> 12:12.460
演示什么呢

12:12.460 --> 12:14.460
我不光可以在一个域名下

12:14.460 --> 12:16.460
我可以在多个域名下

12:16.460 --> 12:17.460
但是注意

12:17.460 --> 12:18.460
这个多个的域名

12:18.460 --> 12:19.460
他们是有关系的

12:19.460 --> 12:20.460
什么意思呢

12:20.460 --> 12:24.460
就是在这我打开一个网站

12:24.460 --> 12:25.460
百度

12:25.460 --> 12:26.460
好

12:26.460 --> 12:29.460
现在我在百度的页面当中

12:29.460 --> 12:31.460
进行一个登录

12:31.460 --> 12:32.460
好

12:32.460 --> 12:33.460
登录注意

12:33.460 --> 12:34.460
在这点击登录

12:34.460 --> 12:35.460
让我的拥护名

12:40.610 --> 12:41.610
点击登录

12:42.610 --> 12:43.610
登录了

12:43.610 --> 12:44.610
登录成功了

12:44.610 --> 12:45.610
登录成功之后

12:45.610 --> 12:46.610
现在你看在这

12:46.610 --> 12:48.610
是不是就显示我当前的账号的信息了

12:48.610 --> 12:49.610
好

12:49.610 --> 12:50.610
这个时候注意

12:50.610 --> 12:53.610
我想要说的是什么

12:53.610 --> 12:54.610
我们在百度的

12:54.610 --> 12:56.610
这个域下面登录了

12:56.610 --> 12:58.610
我们同时在知道

12:58.610 --> 12:59.610
百度之道

12:59.610 --> 13:00.610
你会看到

13:00.610 --> 13:02.610
这仍然是一个登录的状态

13:02.610 --> 13:03.610
甚至

13:03.610 --> 13:04.610
百科

13:04.610 --> 13:06.610
甚至经验

13:07.610 --> 13:08.610
来

13:08.610 --> 13:09.610
你看一下

13:09.610 --> 13:10.610
是不是都会有

13:10.610 --> 13:12.610
你的这些账号的信息

13:12.610 --> 13:14.610
你看我在哪里呢

13:14.610 --> 13:16.610
在百度的这个域以下登了

13:16.610 --> 13:17.610
但是在知道

13:17.610 --> 13:18.610
百科

13:18.610 --> 13:19.610
经验

13:19.610 --> 13:21.610
这些里头都能够联想

13:21.610 --> 13:23.610
应该算是关联到

13:23.610 --> 13:26.610
就是它都是一个登录的一个状态

13:26.610 --> 13:27.610
咱们一会去说一下

13:27.610 --> 13:28.610
这是为什么

13:28.610 --> 13:29.610
这是怎么去实现的

13:29.610 --> 13:30.610
好不好

13:30.610 --> 13:31.610
那行

13:31.610 --> 13:32.610
我们先来看一下

13:32.610 --> 13:33.610
看一下我们的控制台

13:33.610 --> 13:34.610
来说一下

13:34.610 --> 13:36.610
就是当我们这个

13:36.610 --> 13:37.610
你登录之后

13:37.610 --> 13:38.610
登录之后

13:38.610 --> 13:39.610
然后呢

13:39.610 --> 13:40.610
刚才咱们不是说那个

13:40.610 --> 13:41.610
couquet

13:41.610 --> 13:42.610
他是怎么一个流程

13:42.610 --> 13:43.610
是不是跟服务器

13:43.610 --> 13:45.610
客户端之间怎么去联系的

13:45.610 --> 13:47.610
来咱们验证一下

13:47.610 --> 13:49.610
首先就是我登录了

13:49.610 --> 13:50.610
发送了一个请求

13:50.610 --> 13:51.610
那这个请求

13:51.610 --> 13:52.610
服务端收到之后

13:52.610 --> 13:54.610
他会给咱们的客户端

13:54.610 --> 13:56.610
也就是我们的浏览器

13:56.610 --> 13:57.610
带上这个couquet

13:57.610 --> 13:58.610
然后这个couquet

13:58.610 --> 14:00.610
就存储到了我们的本地了

14:00.610 --> 14:01.610
存储到哪里呢

14:01.610 --> 14:03.610
就是我们以谷歌浏览器为例

14:03.610 --> 14:05.610
通过这个控制台是能够看到的

14:05.610 --> 14:06.610
在哪里呢

14:06.610 --> 14:08.610
在这个application当中点开它

14:08.610 --> 14:09.610
然后呢

14:09.610 --> 14:10.610
这有一个storage

14:10.610 --> 14:11.610
然后呢

14:11.610 --> 14:12.610
这有一个couquet

14:12.610 --> 14:13.610
点开箭头

14:13.610 --> 14:14.610
下边呢

14:14.610 --> 14:15.610
就会有一个域名

14:15.610 --> 14:16.610
这个域名呢

14:16.610 --> 14:17.610
就叫什么的3w点

14:17.610 --> 14:18.610
百度点com

14:19.610 --> 14:22.610
那我百度的页面当中

14:22.610 --> 14:23.610
百度的这个域名下

14:23.610 --> 14:24.610
所有的couquet呢

14:24.610 --> 14:26.610
都是存储到了这个里边

14:26.610 --> 14:27.610
那这个里头呢

14:27.610 --> 14:28.610
你会看到

14:28.610 --> 14:29.610
其实挺多的

14:29.610 --> 14:30.610
是不是这么多啊

14:30.610 --> 14:31.610
然后呢

14:31.610 --> 14:32.610
其中第一个呢

14:32.610 --> 14:34.610
是百度ID

14:34.610 --> 14:36.610
这个百度ID呢

14:36.610 --> 14:37.610
它存储的

14:37.610 --> 14:39.610
就是你的用户的信息

14:39.610 --> 14:41.610
就是你刚才登录之后的

14:41.610 --> 14:43.610
那些用户的一些信息

14:44.610 --> 14:45.610
然后呢

14:45.610 --> 14:46.610
这是name

14:46.610 --> 14:47.610
这是value

14:47.610 --> 14:48.610
那也就是说

14:48.610 --> 14:49.610
你的用户的信息呢

14:49.610 --> 14:50.610
其实它的值是这个

14:50.610 --> 14:52.610
可能有同学会想

14:52.610 --> 14:53.610
这个东西不对啊

14:53.610 --> 14:54.610
我的账户

14:54.610 --> 14:55.610
是不是Kevin啊

14:55.610 --> 14:56.610
那这个里头呢

14:56.610 --> 14:57.610
压根就没有啊

14:57.610 --> 14:58.610
Kevin

14:59.610 --> 15:00.610
这是威傻呢

15:02.610 --> 15:03.610
其实

15:03.610 --> 15:04.610
这个

15:04.610 --> 15:05.610
我们在网络的课里边呢

15:05.610 --> 15:07.610
已经有讲过啊

15:07.610 --> 15:08.610
那这个value呢

15:08.610 --> 15:10.610
它其实是被加密的啊

15:10.610 --> 15:12.610
你可不能千万天真地

15:12.610 --> 15:13.610
认为你的账号

15:13.610 --> 15:15.610
还有你的密码是多少

15:15.610 --> 15:16.610
人家在这呢

15:16.610 --> 15:17.610
就能给你存下来

15:17.610 --> 15:18.610
就是多少

15:18.610 --> 15:19.610
元风不动的给你存起来

15:19.610 --> 15:20.610
可不是

15:20.610 --> 15:21.610
那样的话就太不安全了

15:21.610 --> 15:22.610
我们在前面

15:22.610 --> 15:23.610
网络课里边讲过

15:23.610 --> 15:24.610
它会进行一个加密

15:24.610 --> 15:26.610
那这种加密的算法呢

15:26.610 --> 15:27.610
其实只有人家

15:27.610 --> 15:29.610
这些的服务器能够解密

15:29.610 --> 15:30.610
所以啊

15:30.610 --> 15:31.610
还有就是并且

15:31.610 --> 15:33.610
就是每次你登陆的这个值呢

15:33.610 --> 15:34.610
他们都是不一样的

15:35.610 --> 15:38.610
所以你可大可不必担心

15:38.610 --> 15:39.610
明白吧

15:39.610 --> 15:40.610
好

15:40.610 --> 15:41.610
然后呢再来看啊

15:41.610 --> 15:42.610
那这个枯可以当中呢

15:42.610 --> 15:43.610
有一个自断

15:43.610 --> 15:44.610
自断叫什么呢

15:44.610 --> 15:45.610
叫刀闷

15:45.610 --> 15:46.610
刀闷这个自断啊

15:46.610 --> 15:47.610
来我们

15:47.610 --> 15:48.610
我们看一下

15:48.610 --> 15:49.610
这个百度

15:49.610 --> 15:50.610
id的这个刀闷呢

15:50.610 --> 15:51.610
它的值

15:51.610 --> 15:52.610
你看我放到放到这之后呢

15:52.610 --> 15:53.610
你会看到它的值

15:53.610 --> 15:54.610
是一个点百度

15:54.610 --> 15:55.610
点com

15:55.610 --> 15:56.610
看到吗

15:56.610 --> 15:57.610
那这个就表示什么啊

15:57.610 --> 15:58.610
cook

15:58.610 --> 16:00.610
对于哪个域是有效的

16:01.610 --> 16:03.610
它的值是一个百度点com

16:03.610 --> 16:05.610
指的是一个一级的域名

16:05.610 --> 16:06.610
那这个存储呢

16:06.610 --> 16:08.610
它会对于百度的

16:08.610 --> 16:10.610
二级域名都有效

16:10.610 --> 16:12.610
所以我们看到

16:12.610 --> 16:13.610
在之道呀

16:13.610 --> 16:14.610
百科呀

16:14.610 --> 16:15.610
经验等等这些啊

16:15.610 --> 16:16.610
页面当中呢

16:16.610 --> 16:17.610
我们仍然是

16:17.610 --> 16:18.610
一个登陆的状态

16:18.610 --> 16:21.610
就是由于我们的登陆信息呢

16:21.610 --> 16:22.610
有一个刀闷

16:22.610 --> 16:24.610
这条属性由他来决定的啊

16:25.610 --> 16:26.610
好

16:26.610 --> 16:27.610
然后呢

16:27.610 --> 16:28.610
其实还缺了一步

16:28.610 --> 16:29.610
缺了缺了什么呢

16:29.610 --> 16:30.610
缺了这个啊

16:30.610 --> 16:31.610
我们现在这个cook

16:31.610 --> 16:33.610
呢是不是存下来了

16:33.610 --> 16:34.610
存下来之后呢

16:34.610 --> 16:36.610
在其他的这些域当中呢

16:36.610 --> 16:38.610
啊你发起网络请求

16:38.610 --> 16:40.610
比如说啊咱们随意啊来这儿

16:40.610 --> 16:41.610
来上一个网络的请求

16:41.610 --> 16:42.610
然后我们看一下

16:42.610 --> 16:43.610
network当中

16:43.610 --> 16:44.610
是不是有很多的请求

16:44.610 --> 16:45.610
然后呢这个请求

16:45.610 --> 16:47.610
咱们看一下这个地址啊

16:47.610 --> 16:49.610
network当中呢

16:49.610 --> 16:51.610
这个x hr

16:51.610 --> 16:52.610
指的是什么呢

16:52.610 --> 16:53.610
x

16:53.610 --> 16:55.610
x ml http

16:55.610 --> 16:56.610
request

16:56.610 --> 16:57.610
就是那个hx

16:57.610 --> 16:59.610
他的核心内容

16:59.610 --> 17:00.610
好然后呢在这呢

17:00.610 --> 17:01.610
咱随意找一个

17:01.610 --> 17:02.610
请求的一个地址啊

17:02.610 --> 17:03.610
那这个里边呢

17:03.610 --> 17:04.610
有一个request headers

17:04.610 --> 17:05.610
这个呢是什么呢

17:05.610 --> 17:07.610
就是我们请求的那个

17:07.610 --> 17:08.610
投信息

17:08.610 --> 17:09.610
那这个投信息呢

17:09.610 --> 17:10.610
这儿有一个cook

17:10.610 --> 17:11.610
我们看一下啊

17:11.610 --> 17:12.610
cook

17:12.610 --> 17:13.610
然后呢这个cook当中呢

17:13.610 --> 17:15.610
你会发现有一个百度id

17:15.610 --> 17:17.610
那这个结果的值

17:17.610 --> 17:19.610
就跟我们在这儿的这个值

17:19.610 --> 17:21.610
是一模一样的

17:22.610 --> 17:24.610
这个就是我们的

17:24.610 --> 17:26.610
每一次网络请求呢

17:26.610 --> 17:27.610
就会把cook

17:27.610 --> 17:29.610
给他带过去

17:29.610 --> 17:31.610
理解吗

17:31.610 --> 17:32.610
嗯

17:32.610 --> 17:33.610
那当我们的后端

17:33.610 --> 17:35.610
去收到这个请求之后呢

17:35.610 --> 17:37.610
他能够把这个cook

17:37.610 --> 17:38.610
给他解析了

17:38.610 --> 17:39.610
解析之后呢

17:39.610 --> 17:40.610
发现了这儿

17:40.610 --> 17:42.610
有一个百度的id是这个

17:42.610 --> 17:43.610
哎那他就知道

17:43.610 --> 17:45.610
哎这次的请求

17:45.610 --> 17:46.610
跟上次的请求呢

17:46.610 --> 17:49.610
是同一个用户

17:50.610 --> 17:52.610
那他就能够显示

17:52.610 --> 17:54.610
用户的登录信息了

17:54.610 --> 17:56.610
你登录只需要登录一次

17:56.610 --> 17:57.610
就妥了

17:58.610 --> 17:59.610
好吧

17:59.610 --> 18:00.610
那这样的话

18:00.610 --> 18:02.610
我们就通过这个问题

18:02.610 --> 18:03.610
为什么有cook

18:03.610 --> 18:04.610
这个问题呢

18:04.610 --> 18:05.610
咱们介绍了一下

18:05.610 --> 18:06.610
cook的必要性

18:06.610 --> 18:08.610
以及cook的运行机制

18:08.610 --> 18:09.610
然后呢接下来

18:09.610 --> 18:10.610
咱们再来说一下

18:10.610 --> 18:11.610
cook的一些

18:11.610 --> 18:13.610
其他的一些知识点啊

18:13.610 --> 18:14.610
来第一个啊

18:14.610 --> 18:15.610
我我写一下

18:15.610 --> 18:17.610
第一个呢就是cook

18:17.610 --> 18:18.610
cook呢

18:18.610 --> 18:20.610
他怎么不可跨域

18:20.610 --> 18:23.920
不可跨域啊

18:23.920 --> 18:24.920
那不可跨域

18:24.920 --> 18:25.920
指的就是

18:25.920 --> 18:27.920
他其实是有域名限制的啊

18:27.920 --> 18:28.920
我们的百度

18:28.920 --> 18:30.920
只能够在百度的域名下

18:30.920 --> 18:31.920
去存储cook

18:31.920 --> 18:32.920
淘宝呢

18:32.920 --> 18:34.920
只能在淘宝的域名下存储

18:34.920 --> 18:35.920
这个cook

18:35.920 --> 18:36.920
不同的域名之间呢

18:36.920 --> 18:38.920
是不能够互相访问的

18:38.920 --> 18:39.920
但是一种情况

18:39.920 --> 18:41.920
就是刚才咱们所说的

18:41.920 --> 18:42.920
子域名跟主域名

18:42.920 --> 18:43.920
或者说啊

18:43.920 --> 18:44.920
这个一级域名

18:44.920 --> 18:45.920
跟二级域名

18:45.920 --> 18:46.920
我们可以通过

18:46.920 --> 18:47.920
这个设置

18:47.920 --> 18:48.920
这条属性呢

18:48.920 --> 18:50.920
能够让他们互相的进行访问

18:50.920 --> 18:51.920
这个呢

18:51.920 --> 18:53.920
就是刚才咱们已经说过了啊

18:53.920 --> 18:56.920
仅仅存在于主域名跟

18:56.920 --> 18:57.920
一级域名

18:57.920 --> 18:58.920
二级域名吧

18:58.920 --> 18:59.920
仅仅存在于这个里头啊

18:59.920 --> 19:00.920
好

19:00.920 --> 19:01.920
这是第一个

19:01.920 --> 19:02.920
他是不可跨域的

19:02.920 --> 19:03.920
第二个呢

19:03.920 --> 19:04.920
就是cook

19:04.920 --> 19:05.920
的

19:05.920 --> 19:10.920
cook存储在浏览器里面啊

19:10.920 --> 19:11.920
那这个呢

19:11.920 --> 19:13.920
存储在浏览器指的是什么

19:13.920 --> 19:15.920
他其实就是浏览器啊

19:15.920 --> 19:17.920
咱们的cook存到了

19:17.920 --> 19:18.920
这个浏览器呢

19:18.920 --> 19:19.920
安装的目录当中

19:19.920 --> 19:21.920
有一个文件夹存到了那个里面啊

19:21.920 --> 19:22.920
那所以说啊

19:22.920 --> 19:24.920
在同样一个浏览器当中呢

19:24.920 --> 19:26.920
我们同一个域名下的不同页面

19:26.920 --> 19:28.920
都能够互相的进行访问

19:28.920 --> 19:30.920
访问到这些cook

19:30.920 --> 19:31.920
但是不同的浏览器

19:31.920 --> 19:32.920
同一个域名下

19:32.920 --> 19:34.920
他是没有办法访问的

19:34.920 --> 19:36.920
因为我们浏览器存储的

19:36.920 --> 19:37.920
这个cook

19:37.920 --> 19:40.920
他的位置是不一样的

19:40.920 --> 19:42.920
仅限于同一个浏览器

19:42.920 --> 19:43.920
好吧

19:43.920 --> 19:44.920
来这是第二个啊

19:44.920 --> 19:45.920
第三个

19:45.920 --> 19:47.920
cook有数量

19:47.920 --> 19:50.920
与这个什么大小的限制

19:52.920 --> 19:53.920
那这个大小呢

19:53.920 --> 19:54.920
在这呢

19:54.920 --> 19:55.920
说一下啊

19:55.920 --> 19:57.920
大小跟那个数量啊

19:57.920 --> 19:58.920
那这些限制呢

19:58.920 --> 19:59.920
就是不同的浏览器呢

19:59.920 --> 20:00.920
他们是不一样的

20:00.920 --> 20:01.920
我在这呢

20:01.920 --> 20:03.920
就说一个大概啊

20:03.920 --> 20:05.920
一个大概的一个值

20:05.920 --> 20:07.920
第一个就是数量

20:07.920 --> 20:08.920
数量呢

20:08.920 --> 20:11.920
再再50个左右

20:11.920 --> 20:12.920
这是数量

20:12.920 --> 20:13.920
然后呢

20:13.920 --> 20:21.660
大小在4kb左右

20:21.660 --> 20:22.660
所以说呢

20:22.660 --> 20:23.660
这个cook呢

20:23.660 --> 20:24.660
是非常小的

20:24.660 --> 20:26.660
你存不了太多的东西

20:26.660 --> 20:27.660
那这个时候呢

20:27.660 --> 20:28.660
有同学会想

20:28.660 --> 20:30.660
那如果说我超过怎么办

20:30.660 --> 20:31.660
那超过了浏览器呢

20:31.660 --> 20:33.660
他就要删了

20:33.660 --> 20:34.660
但是各个浏览器呢

20:34.660 --> 20:35.660
他们的删除策略

20:35.660 --> 20:37.660
也是不一样的

20:37.660 --> 20:38.660
有的是删

20:38.660 --> 20:39.660
这个时间最久的

20:39.660 --> 20:40.660
最老的

20:40.660 --> 20:42.660
有的是随机进行删除

20:42.660 --> 20:43.660
每一个浏览器呢

20:43.660 --> 20:45.660
他们是不一样的

20:45.660 --> 20:47.660
这是第三个啊

20:47.660 --> 20:49.660
然后呢第四个

20:49.660 --> 20:51.660
然后cook

20:51.660 --> 20:56.660
的存储时间非常灵活

20:56.660 --> 20:57.660
你可以让

20:57.660 --> 20:58.660
这个cook呢

20:58.660 --> 20:59.660
在页面关闭之后呢

20:59.660 --> 21:00.660
就删除

21:00.660 --> 21:02.660
也可以让他长期的存储

21:02.660 --> 21:04.660
比如说我要让他存存

21:04.660 --> 21:05.660
三年

21:05.660 --> 21:06.660
可以吗必须可以

21:06.660 --> 21:07.660
非常的灵活

21:07.660 --> 21:08.660
一会呢

21:08.660 --> 21:09.660
咱们去设置一下

21:09.660 --> 21:12.660
然后第五个就是cook

21:12.660 --> 21:14.660
不光

21:14.660 --> 21:17.660
可以服务器设置

21:17.660 --> 21:18.660
前端

21:18.660 --> 21:20.660
或者说客户端吧

21:20.660 --> 21:22.660
也可以设置啊

21:22.660 --> 21:23.660
我们在刚才啊

21:23.660 --> 21:25.660
就是讲那个cook

21:25.660 --> 21:26.660
他的一个运行机制

21:26.660 --> 21:27.660
是不是说过

21:27.660 --> 21:29.660
当咱们发送一个请求之后呢

21:29.660 --> 21:30.660
那服务端后端

21:30.660 --> 21:31.660
后端那边想用

21:31.660 --> 21:32.660
想用之后呢

21:32.660 --> 21:33.660
他会设置一个sidecook

21:33.660 --> 21:34.660
是不是

21:34.660 --> 21:35.660
完之后呢

21:35.660 --> 21:36.660
把这个cook

21:36.660 --> 21:37.660
就返回给咱们的前端了

21:37.660 --> 21:38.660
然后呢

21:38.660 --> 21:39.660
注意啊

21:39.660 --> 21:40.660
这个设置

21:40.660 --> 21:41.660
刚才一直在说

21:41.660 --> 21:42.660
这个sidecook

21:42.660 --> 21:43.660
是不是服务器

21:43.660 --> 21:45.660
前端是没有办法去设置的

21:45.660 --> 21:46.660
也就是说

21:46.660 --> 21:47.660
刚才我们的这个

21:47.660 --> 21:48.660
百度id啊

21:48.660 --> 21:49.660
这个cook

21:49.660 --> 21:51.660
他其实是由后端去设置的

21:51.660 --> 21:52.660
我们前端呢

21:52.660 --> 21:53.660
仅仅是浏览器

21:53.660 --> 21:54.660
给他存下来了

21:54.660 --> 21:55.660
那是不是就说

21:55.660 --> 21:56.660
这个cook

21:56.660 --> 21:58.660
只能是后端去设置啊

21:58.660 --> 21:59.660
其实并不是

21:59.660 --> 22:00.660
我们前端

22:00.660 --> 22:01.660
当然也是可以去

22:01.660 --> 22:03.660
设置这个cook了

22:03.660 --> 22:04.660
理解吧

22:04.660 --> 22:06.660
那关于这个后端去设置

22:06.660 --> 22:07.660
怎么去设置呢

22:07.660 --> 22:08.660
这个呢

22:08.660 --> 22:09.660
不属于我们讨论的一个范畴啊

22:09.660 --> 22:10.660
那咱们接下来

22:10.660 --> 22:12.660
就要详细的去说一下

22:12.660 --> 22:13.660
我们的客户端

22:13.660 --> 22:15.660
该如何去设置这个cook

22:15.660 --> 22:17.660
那其实客户端

22:17.660 --> 22:18.660
其实也就是指的

22:18.660 --> 22:19.660
我们前端了啊

22:19.660 --> 22:20.660
那我们的前端呢

22:20.660 --> 22:21.660
去设置这个cook

22:21.660 --> 22:22.660
或者说

22:22.660 --> 22:24.660
我们前端去操作cook

22:24.660 --> 22:26.660
是通过一个方法

22:26.660 --> 22:27.660
这个方法呢

22:27.660 --> 22:28.660
叫什么呢

22:28.660 --> 22:29.660
叫我写到这吧

22:29.660 --> 22:32.660
document.cook

22:33.660 --> 22:34.660
其实啊

22:34.660 --> 22:35.660
就是他把这个cook

22:35.660 --> 22:36.660
给了谁

22:36.660 --> 22:37.660
给了document

22:37.660 --> 22:38.660
这个对象

22:38.660 --> 22:39.660
那这个属性呢

22:39.660 --> 22:40.660
这个属性

22:40.660 --> 22:41.660
是一个可读

22:41.660 --> 22:42.660
可写的一个属性

22:42.660 --> 22:45.660
我们既可以拿他去获取

22:45.660 --> 22:47.660
也可以拿他去设置

22:47.660 --> 22:48.660
非常的灵活

22:48.660 --> 22:50.660
就是通过一条属性啊

22:50.660 --> 22:51.660
那他的值

22:51.660 --> 22:53.660
当去设置cook的时候呢

22:53.660 --> 22:54.660
他的值呢

22:54.660 --> 22:55.660
是一个啊

22:55.660 --> 22:57.660
什么建值队的

22:57.660 --> 22:58.660
这种自幅串

22:58.660 --> 22:59.660
建值队知道吧

22:59.660 --> 23:00.660
就是我们的

23:00.660 --> 23:02.660
这个对象当中的

23:02.660 --> 23:03.660
可以value吗

23:03.660 --> 23:04.660
建值队啊

23:04.660 --> 23:05.660
在这呢

23:05.660 --> 23:06.660
咱们要如果说

23:06.660 --> 23:07.660
去设置cook的话

23:07.660 --> 23:08.660
那这个自幅串啊

23:08.660 --> 23:09.660
虽然说

23:09.660 --> 23:10.660
是实实在在的

23:10.660 --> 23:11.660
这个属性跟对象

23:11.660 --> 23:12.660
但是

23:12.660 --> 23:13.660
他的形式

23:13.660 --> 23:14.660
就是建值队的

23:14.660 --> 23:15.660
这种形式

23:17.660 --> 23:19.660
还有

23:19.660 --> 23:20.660
需要注意的是

23:20.660 --> 23:21.660
cook呢

23:21.660 --> 23:22.660
每次只能设置一个

23:22.660 --> 23:23.660
行

23:23.660 --> 23:24.660
然后呢

23:24.660 --> 23:25.660
接下来呢

23:25.660 --> 23:26.660
咱们就要录一下

23:26.660 --> 23:27.660
这个代码了啊

23:27.660 --> 23:28.660
给大家设置一下

23:28.660 --> 23:29.660
document.cook

23:30.660 --> 23:31.660
等于什么呢

23:31.660 --> 23:32.660
比如说啊

23:32.660 --> 23:33.660
等于一个name

23:33.660 --> 23:34.660
建值队啊

23:34.660 --> 23:35.660
但是这个建值队

23:35.660 --> 23:36.660
中间呢

23:36.660 --> 23:37.660
是通过等号啊

23:37.660 --> 23:38.660
不是冒号

23:38.660 --> 23:39.660
这个name呢

23:39.660 --> 23:40.660
等于什么呢

23:40.660 --> 23:41.660
等于一个开门

23:41.660 --> 23:42.660
就行了啊

23:42.660 --> 23:43.660
这个呢

23:43.660 --> 23:44.660
我就设置了一个cook了啊

23:44.660 --> 23:46.660
设置完这个cook之后呢

23:46.660 --> 23:47.660
我们打开页面啊

23:47.660 --> 23:48.660
迫不及待

23:48.660 --> 23:49.660
然后呢

23:49.660 --> 23:50.660
把控台调开

23:50.660 --> 23:51.660
调开

23:51.660 --> 23:52.660
刚才你说了啊

23:52.660 --> 23:53.660
cook放在哪里了

23:53.660 --> 23:54.660
application当中

23:54.660 --> 23:55.660
然后呢

23:55.660 --> 23:56.660
我们点开

23:56.660 --> 23:57.660
点开

23:57.660 --> 23:58.660
啥也没有

23:58.660 --> 23:59.660
空空如意

24:00.660 --> 24:01.660
不对呀

24:01.660 --> 24:02.660
你刚才说不是

24:02.660 --> 24:03.660
他就能够存到这吗

24:03.660 --> 24:04.660
那现在咋回事呢

24:04.660 --> 24:05.660
在这呢

24:05.660 --> 24:06.660
要去说一下啊

24:06.660 --> 24:07.660
来

24:07.660 --> 24:08.660
为什么呢

24:08.660 --> 24:10.660
因为我们前辈的课

24:10.660 --> 24:11.660
大家一定不要忘了啊

24:11.660 --> 24:13.660
在前辈的网络课里边

24:13.660 --> 24:15.660
我们说过说过一个

24:15.660 --> 24:16.660
呃

24:16.660 --> 24:17.660
什么呀

24:17.660 --> 24:19.660
页面的正确打开方式

24:19.660 --> 24:21.660
有讲过那个课啊

24:21.660 --> 24:23.660
然后我们讲这个页面

24:23.660 --> 24:24.660
正确打开的方式

24:24.660 --> 24:25.660
说过

24:25.660 --> 24:26.660
那cook呢

24:26.660 --> 24:28.660
他其实是基于http

24:28.660 --> 24:29.660
协议下

24:29.660 --> 24:30.660
才能够生效的

24:30.660 --> 24:31.660
所以啊

24:31.660 --> 24:33.660
你想要使用这个cook的话

24:33.660 --> 24:36.660
那你的协议必须是http的协议

24:37.660 --> 24:38.660
但是你发现

24:38.660 --> 24:39.660
你的这个页面

24:39.660 --> 24:40.660
他的一个协议是什么

24:40.660 --> 24:41.660
其实是一个field协议

24:41.660 --> 24:43.660
我们从这就能够看得到

24:43.660 --> 24:45.660
field一个协议

24:45.660 --> 24:46.660
那这个field协议的话

24:46.660 --> 24:47.660
不好意思

24:47.660 --> 24:49.660
cook他是没有办法工作的

24:49.660 --> 24:50.660
那怎么

24:50.660 --> 24:53.660
我们就应该通过http协议的方式

24:53.660 --> 24:54.660
去打开他

24:54.660 --> 24:55.660
打开的方式呢

24:55.660 --> 24:56.660
在网络的课

24:56.660 --> 24:57.660
是不是也讲过

24:57.660 --> 24:59.660
我使用的是vesco的

24:59.660 --> 25:00.660
我安装了一个插件

25:00.660 --> 25:01.660
是不是

25:01.660 --> 25:04.660
来点击open with live server

25:04.660 --> 25:05.660
这样的话

25:05.660 --> 25:06.660
这个时候呢

25:06.660 --> 25:07.660
http这

25:07.660 --> 25:09.660
这咋不给我显示出来了

25:09.660 --> 25:10.660
行吧

25:10.660 --> 25:11.660
现在呢

25:11.660 --> 25:13.660
其实就是一个http的一个协议了啊

25:13.660 --> 25:14.660
然后这样的话

25:14.660 --> 25:15.660
我在打开控制台

25:15.660 --> 25:17.660
打开application

25:17.660 --> 25:19.660
然后再点

25:19.660 --> 25:20.660
点开

25:20.660 --> 25:21.660
这个时候呢

25:21.660 --> 25:22.660
你有没有发现

25:22.660 --> 25:24.660
这是一个http的一个协议啊

25:24.660 --> 25:25.660
然后呢

25:25.660 --> 25:26.660
这个有一个地址

25:26.660 --> 25:27.660
看到没有

25:27.660 --> 25:29.660
那我们从这呢

25:29.660 --> 25:30.660
是不是就能够发现

25:30.660 --> 25:31.660
这里头已经存储了

25:31.660 --> 25:32.660
很多的一些东西了

25:32.660 --> 25:33.660
好

25:33.660 --> 25:35.660
有没有四层相识呢

25:35.660 --> 25:36.660
对不对

25:36.660 --> 25:37.660
好

25:37.660 --> 25:39.660
就是刚才咱们所存储的啊

25:39.660 --> 25:40.660
那这个啊

25:40.660 --> 25:41.660
cookie就已经看到了

25:41.660 --> 25:42.660
它的值呢

25:42.660 --> 25:44.660
是一个value

25:44.660 --> 25:45.660
好

25:45.660 --> 25:46.660
然后呢

25:46.660 --> 25:47.660
接着呢

25:47.660 --> 25:48.660
再来

25:48.660 --> 25:49.660
我们再来上一条

25:49.660 --> 25:50.660
来上一条啊

25:50.660 --> 25:51.660
就是

25:51.660 --> 25:52.660
我们给上一个这个啊

25:52.660 --> 25:53.660
一个分号

25:53.660 --> 25:54.660
加上一个空格

25:54.660 --> 25:55.660
h

25:55.660 --> 25:56.660
等于多少18

25:56.660 --> 25:57.660
然后在这呢

25:57.660 --> 25:58.660
我要去说一下

25:58.660 --> 25:59.660
刚才咱们提了

25:59.660 --> 26:00.660
就是

26:00.660 --> 26:01.660
每个cookie呢

26:01.660 --> 26:02.660
只能设置一次

26:02.660 --> 26:03.660
也就是我们的

26:03.660 --> 26:04.660
cookie

26:04.660 --> 26:05.660
那这样的话

26:05.660 --> 26:06.660
按道理是不是

26:06.660 --> 26:07.660
我想要设置了

26:07.660 --> 26:08.660
两个cookie

26:08.660 --> 26:09.660
那我们来看一下

26:09.660 --> 26:10.660
对不对啊

26:10.660 --> 26:11.660
来刷新一下啊

26:11.660 --> 26:12.660
其实不用刷新

26:12.660 --> 26:13.660
人家有热更新啊

26:13.660 --> 26:14.660
那这个地方

26:14.660 --> 26:15.660
你会看到

26:15.660 --> 26:16.660
他压根就没有那个H

26:16.660 --> 26:18.660
其实我们这么去设置呢

26:18.660 --> 26:19.660
是错误的

26:19.660 --> 26:20.660
理解吧

26:20.660 --> 26:21.660
好

26:21.660 --> 26:22.660
所以一定要记住啊

26:22.660 --> 26:23.660
cookie呢

26:23.660 --> 26:24.660
我们document.cookie呢

26:24.660 --> 26:26.660
只能设置一次cookie啊

26:26.660 --> 26:27.660
好

26:27.660 --> 26:28.660
然后呢

26:28.660 --> 26:29.660
接下来呢

26:29.660 --> 26:30.660
咱们要去说一下

26:30.660 --> 26:31.660
说一下这个cookie身上

26:31.660 --> 26:32.660
很多的属性啊

26:33.660 --> 26:35.660
cookie的属性

26:37.660 --> 26:38.660
来啊

26:38.660 --> 26:39.660
这里头非常多啊

26:39.660 --> 26:40.660
我就挨个来说啊

26:40.660 --> 26:41.660
首先呢

26:41.660 --> 26:42.660
第一个呢就是name

26:42.660 --> 26:43.660
name啊

26:43.660 --> 26:44.660
那这个name呢

26:44.660 --> 26:45.660
是什么呢

26:45.660 --> 26:48.660
是cookie的名字

26:49.660 --> 26:51.660
的名字

26:51.660 --> 26:52.660
好

26:52.660 --> 26:53.660
这是第一个

26:53.660 --> 26:54.660
然后呢

26:54.660 --> 26:55.660
接下来呢

26:55.660 --> 26:56.660
就是第二个

26:56.660 --> 26:57.660
第二个啊

26:57.660 --> 26:58.660
这呢

26:58.660 --> 26:59.660
弄开啊

26:59.660 --> 27:00.660
第二是value

27:00.660 --> 27:02.660
cookie的值

27:02.660 --> 27:05.940
好

27:05.940 --> 27:06.940
然后呢

27:06.940 --> 27:07.940
这个名字呢

27:07.940 --> 27:09.940
它具有一个特征唯一性

27:10.940 --> 27:11.940
就是啊

27:11.940 --> 27:12.940
什么意思啊

27:12.940 --> 27:13.940
你在这设置了一个开门

27:13.940 --> 27:14.940
不是

27:14.940 --> 27:16.940
这个name等于一个开门

27:16.940 --> 27:17.940
是不是

27:17.940 --> 27:18.940
然后呢

27:18.940 --> 27:19.940
你在这呢

27:19.940 --> 27:20.940
又给上一个开门2

27:20.940 --> 27:21.940
那这个时候呢

27:21.940 --> 27:22.940
注意啊

27:22.940 --> 27:23.940
他其实是会覆盖掉啊

27:23.940 --> 27:24.940
当然咱们

27:24.940 --> 27:25.940
这条没有生效啊

27:25.940 --> 27:26.940
会覆盖掉

27:26.940 --> 27:27.940
也就是这样

27:27.940 --> 27:28.940
这样的话

27:28.940 --> 27:29.940
就是一个名字的唯一性

27:29.940 --> 27:30.940
我们去获取去设置

27:30.940 --> 27:31.940
去更新

27:31.940 --> 27:32.940
好

27:32.940 --> 27:33.940
记住

27:33.940 --> 27:34.940
它的一个唯一性啊

27:34.940 --> 27:35.940
然后这个value呢

27:35.940 --> 27:36.940
就是cookie他的一个值

27:36.940 --> 27:37.940
那cookie的这个值呢

27:37.940 --> 27:39.940
其实都是自幅串

27:39.940 --> 27:41.940
第三个

27:41.940 --> 27:42.940
刀闷

27:42.940 --> 27:45.630
M

27:45.630 --> 27:46.630
I

27:46.630 --> 27:47.630
A

27:47.630 --> 27:48.630
有了

27:48.630 --> 27:49.630
刀闷

27:49.630 --> 27:50.630
刀闷呢

27:50.630 --> 27:51.630
有没有说过啊

27:51.630 --> 27:52.630
刚才

27:52.630 --> 27:53.630
咱们已经提到过这个刀闷了

27:53.630 --> 27:54.630
然后呢

27:54.630 --> 27:55.630
它是用来干嘛呢

27:55.630 --> 27:56.630
设置

27:56.630 --> 27:57.630
cookie

27:57.630 --> 27:58.630
属于

27:58.630 --> 27:59.630
属于什么呢

27:59.630 --> 28:01.630
属于哪个域名下

28:01.630 --> 28:02.630
哪个域吧

28:02.630 --> 28:05.940
是有效的

28:05.940 --> 28:06.940
不能说属于吧

28:06.940 --> 28:08.940
在哪个域下

28:08.940 --> 28:10.940
是有效的啊

28:10.940 --> 28:11.940
那这条属性呢

28:11.940 --> 28:12.940
其实啊

28:12.940 --> 28:14.940
咱们主要用它去设置

28:14.940 --> 28:15.940
刚才已经说过就是

28:15.940 --> 28:17.940
这个一级域名跟二级域名

28:17.940 --> 28:18.940
是不是啊

28:18.940 --> 28:19.940
他们之间呢

28:19.940 --> 28:22.940
能够互相的进行一个访问啊

28:22.940 --> 28:23.940
一会呢

28:23.940 --> 28:24.940
咱们去

28:24.940 --> 28:25.940
演示一下啊

28:25.940 --> 28:26.940
再来上一个属性

28:26.940 --> 28:27.940
再去演示啊

28:27.940 --> 28:28.940
第四个属性

28:28.940 --> 28:29.940
是什么呢

28:29.940 --> 28:30.940
是pass

28:30.940 --> 28:31.940
这个pass呢

28:31.940 --> 28:32.940
啥意思啊

28:32.940 --> 28:33.940
这个pass呢

28:33.940 --> 28:34.940
大家应该熟悉吧

28:34.940 --> 28:35.940
应该有见过

28:35.940 --> 28:36.940
啊

28:36.940 --> 28:37.940
它指的是

28:37.940 --> 28:40.940
cookie的路径

28:40.940 --> 28:42.940
cookie的路径啊

28:42.940 --> 28:43.940
好

28:43.940 --> 28:44.940
这个默认啊

28:44.940 --> 28:45.940
啊

28:45.940 --> 28:46.940
刚才已经说

28:46.940 --> 28:47.940
这个刀闷啊

28:47.940 --> 28:48.940
刚才没有说这个默认啊

28:48.940 --> 28:49.940
刀闷

28:49.940 --> 28:50.940
它的一个默认的

28:50.940 --> 28:51.940
一个域名是啥

28:51.940 --> 28:52.940
就是你当前

28:52.940 --> 28:53.940
你的页面

28:53.940 --> 28:55.940
所打打开的那个域名

28:55.940 --> 28:56.940
我现在打开的域名

28:56.940 --> 28:57.940
是不是这个127啊

28:57.940 --> 28:58.940
所以说呢

28:58.940 --> 28:59.940
我如果说不给的话

28:59.940 --> 29:00.940
默认情况下

29:00.940 --> 29:01.940
这个刀闷的值

29:01.940 --> 29:02.940
多少

29:02.940 --> 29:03.940
然后呢

29:03.940 --> 29:04.940
pass

29:04.940 --> 29:05.940
pass呢

29:05.940 --> 29:06.940
是用来设置这个cookie

29:06.940 --> 29:10.940
它能够有效使用的一个路径啊

29:10.940 --> 29:11.940
那这个路径呢

29:11.940 --> 29:12.940
它默认是什么呢

29:12.940 --> 29:13.940
就是我们当前文件

29:13.940 --> 29:15.940
所打开的这个路径啊

29:15.940 --> 29:16.940
那这两个东西

29:16.940 --> 29:17.940
注意啊

29:17.940 --> 29:18.940
咱总结一下啊

29:18.940 --> 29:19.940
就是刀闷

29:19.940 --> 29:20.940
用来设置这个域名

29:20.940 --> 29:21.940
然后呢

29:21.940 --> 29:22.940
cookie

29:22.940 --> 29:23.940
pass

29:23.940 --> 29:24.940
用来设置什么呢

29:24.940 --> 29:25.940
路径

29:25.940 --> 29:26.940
那这两个东西呢

29:26.940 --> 29:28.940
一般情下都会结合的去使用

29:28.940 --> 29:29.940
那它俩呢

29:29.940 --> 29:30.940
其实是给这个cookie呢

29:30.940 --> 29:32.940
设置了一个限制条件

29:32.940 --> 29:34.940
我们只能够在规定的

29:34.940 --> 29:35.940
这个unl

29:35.940 --> 29:37.940
去使用这个cookie

29:37.940 --> 29:38.940
理解吧

29:38.940 --> 29:39.940
那咱们来试一下啊

29:39.940 --> 29:40.940
演示一下啊

29:40.940 --> 29:41.940
这里呢

29:41.940 --> 29:42.940
标一下啊

29:42.940 --> 29:43.940
cookie

29:43.940 --> 29:44.940
属性

29:44.940 --> 29:45.940
好

29:45.940 --> 29:46.940
然后呢

29:46.940 --> 29:48.940
document.cookie

29:48.940 --> 29:50.940
让它的值呢

29:50.940 --> 29:52.940
我们给上一个color

29:52.940 --> 29:54.940
然后color的值呢

29:54.940 --> 29:55.940
对应的是一个ride

29:55.940 --> 29:56.940
OK

29:56.940 --> 29:57.940
完事啊

29:57.940 --> 29:58.940
这是一条

29:58.940 --> 29:59.940
然后呢

29:59.940 --> 30:00.940
属性

30:00.940 --> 30:01.940
接下来

30:01.940 --> 30:02.940
第二个属性呢

30:02.940 --> 30:03.940
我要给上一个刀闷

30:03.940 --> 30:04.940
就是这个东西啊

30:04.940 --> 30:05.940
刀闷

30:05.940 --> 30:06.940
然后呢

30:06.940 --> 30:07.940
让刀闷的值

30:07.940 --> 30:08.940
等于什么呢

30:08.940 --> 30:09.940
等于就是

30:09.940 --> 30:10.940
我的lap server

30:10.940 --> 30:11.940
所打开的这个地址啊

30:11.940 --> 30:14.940
是127.0.0.1啊

30:14.940 --> 30:15.940
这个呢

30:15.940 --> 30:16.940
就是lap server

30:16.940 --> 30:18.940
所打开的这个地址啊

30:18.940 --> 30:19.940
好

30:19.940 --> 30:20.940
后边再跟跟什么呢

30:20.940 --> 30:21.940
跟pass

30:21.940 --> 30:22.940
那这个pass呢

30:22.940 --> 30:23.940
给上一个路径

30:23.940 --> 30:24.940
这个路径

30:24.940 --> 30:25.940
斜杠

30:25.940 --> 30:26.940
docs

30:26.940 --> 30:27.940
那这个值

30:27.940 --> 30:28.940
注意啦

30:28.940 --> 30:30.940
当然我们现在目录当中呢

30:30.940 --> 30:31.940
压根没有这个值

30:31.940 --> 30:32.940
你到时候可以填啊

30:32.940 --> 30:34.940
随意去填都行啊

30:34.940 --> 30:35.940
好那这样的话

30:35.940 --> 30:37.940
我们又设置了一个cookie

30:37.940 --> 30:38.940
设置完这个cookie之后呢

30:38.940 --> 30:39.940
我打开浏览器

30:39.940 --> 30:40.940
在这呢

30:40.940 --> 30:41.940
咱先刷新一下啊

30:41.940 --> 30:42.940
看一下

30:42.940 --> 30:43.940
然后你会看到这个里头

30:43.940 --> 30:45.940
有有这个color吗

30:45.940 --> 30:46.940
这个cookie

30:46.940 --> 30:47.940
有没有

30:47.940 --> 30:48.940
没有吧

30:48.940 --> 30:49.940
好

30:49.940 --> 30:50.940
然后呢

30:50.940 --> 30:51.940
注意啊

30:51.940 --> 30:52.940
我把这个地址呢

30:52.940 --> 30:53.940
给它改一下

30:53.940 --> 30:55.940
docs

30:55.940 --> 30:56.940
走这

30:56.940 --> 30:57.940
然后到这呢

30:57.940 --> 30:58.940
大家看啊

30:58.940 --> 30:59.940
你看啊

30:59.940 --> 31:00.940
这个目录绝对是没有的

31:00.940 --> 31:01.940
现在他抱错了

31:01.940 --> 31:02.940
没有关系啊

31:02.940 --> 31:03.940
咱们主要去看那个cookie

31:03.940 --> 31:05.940
你会发现在这个目录当中呢

31:05.940 --> 31:06.940
你看到吗

31:06.940 --> 31:07.940
这个color呢

31:07.940 --> 31:08.940
现在我是不是就

31:08.940 --> 31:09.940
设置成功了呀

31:09.940 --> 31:10.940
这个color呢

31:10.940 --> 31:12.940
现在他就存到了我

31:12.940 --> 31:14.940
当前的这个目录下

31:14.940 --> 31:15.940
以及呢

31:15.940 --> 31:16.940
是什么呢

31:16.940 --> 31:18.940
是我的这个127.0.1的

31:18.940 --> 31:19.940
这个域下面

31:20.940 --> 31:21.940
好

31:21.940 --> 31:22.940
那如果说

31:22.940 --> 31:23.940
我把这个地址呢

31:23.940 --> 31:24.940
改了

31:24.940 --> 31:25.940
比如说啊

31:25.940 --> 31:26.940
我把这个s干掉

31:26.940 --> 31:27.940
让你会看到

31:27.940 --> 31:28.940
这里头有没有没有

31:28.940 --> 31:29.940
这个时候呢

31:29.940 --> 31:30.940
为啥

31:30.940 --> 31:31.940
因为你的域名

31:31.940 --> 31:32.940
现在呢是正确的

31:32.940 --> 31:33.940
但是你的路径啊

31:33.940 --> 31:34.940
不正确了

31:34.940 --> 31:35.940
所以说呢

31:35.940 --> 31:36.940
这个cookie呢

31:36.940 --> 31:37.940
他就看不到了

31:37.940 --> 31:38.940
所以啊

31:38.940 --> 31:39.940
这个past的属性啊

31:39.940 --> 31:40.940
这个past的属性

31:40.940 --> 31:41.940
他呢

31:41.940 --> 31:42.940
限制了什么呢

31:42.940 --> 31:44.940
限制cookie的一个存储的路径

31:44.940 --> 31:46.940
只能够在规定的

31:46.940 --> 31:47.940
下边呢

31:47.940 --> 31:48.940
去使用这个cookie

31:48.940 --> 31:49.940
好

31:49.940 --> 31:50.940
那到这的话

31:50.940 --> 31:51.940
我们的这个刀妹啊

31:51.940 --> 31:52.940
还有这个past呢

31:52.940 --> 31:53.940
就算是

31:53.940 --> 31:54.940
讲完了

31:54.940 --> 31:55.940
那咱就过了

31:55.940 --> 31:56.940
过了之后呢

31:56.940 --> 31:57.940
继续往下啊

31:57.940 --> 31:58.940
咱们再来说啊

31:58.940 --> 31:59.940
还有第五个属性

32:00.940 --> 32:01.940
第五个属性呢

32:01.940 --> 32:02.940
叫什么呢

32:02.940 --> 32:03.940
叫express

32:04.940 --> 32:05.940
哎

32:05.940 --> 32:06.940
那这条属性呢

32:06.940 --> 32:08.940
他代表什么意义呢

32:08.940 --> 32:10.940
就是他决定的是

32:10.940 --> 32:11.940
cookie的

32:11.940 --> 32:12.940
去了一个

32:12.940 --> 32:14.940
cookie的过期

32:14.940 --> 32:15.940
过期时间

32:15.940 --> 32:19.260
过期时间啊

32:19.260 --> 32:21.260
我们在一上来

32:21.260 --> 32:22.260
有说过啊

32:22.260 --> 32:23.260
这个cookie

32:23.260 --> 32:24.260
他的一个时间呢

32:24.260 --> 32:26.260
是非常非常灵活的

32:26.260 --> 32:28.260
可以让他在浏览器关闭的时候呢

32:28.260 --> 32:29.260
就删除

32:29.260 --> 32:30.260
也可以给上一个

32:30.260 --> 32:31.260
删除的一个时间点

32:31.260 --> 32:33.260
那如何去设置呢

32:33.260 --> 32:35.260
就是通过这个express

32:35.260 --> 32:36.260
这条属性啊

32:36.260 --> 32:37.260
那这条属性呢

32:37.260 --> 32:39.260
他其实是一个可选的

32:39.260 --> 32:40.260
你看像我们之前

32:40.260 --> 32:41.260
你看这些

32:41.260 --> 32:42.260
里边呢

32:42.260 --> 32:44.260
是不是都没有去给这个express啊

32:44.260 --> 32:46.260
如果说你不给的话

32:46.260 --> 32:47.260
那其实就是

32:47.260 --> 32:48.260
默认的情况

32:48.260 --> 32:49.260
默认情况呀

32:49.260 --> 32:50.260
我的这条cookie呢

32:50.260 --> 32:51.260
他会怎么样

32:51.260 --> 32:53.260
他会在浏览器关闭的时候呢

32:53.260 --> 32:55.260
就删除掉了

32:55.260 --> 32:56.260
就是他叫做什么呢

32:56.260 --> 32:57.260
叫做

32:57.260 --> 32:59.260
汇化期的cookie

32:59.260 --> 33:00.260
那这个汇化期的cookie呢

33:00.260 --> 33:01.260
其实我们在空台当中呢

33:01.260 --> 33:03.260
也是能够看得到的啊

33:03.260 --> 33:04.260
来

33:04.260 --> 33:06.260
再回到我们原来的这个页面啊

33:06.260 --> 33:07.260
好

33:07.260 --> 33:08.260
那这个页面当中呢

33:08.260 --> 33:09.260
你会看到

33:09.260 --> 33:11.260
这是不是有一个express呀

33:11.260 --> 33:12.260
这个呢

33:12.260 --> 33:13.260
cookie的一条属性

33:13.260 --> 33:14.260
那express呢

33:14.260 --> 33:15.260
他有一个值叫什么呢

33:15.260 --> 33:16.260
叫session

33:16.260 --> 33:17.260
那你看啊

33:17.260 --> 33:18.260
我们的name

33:18.260 --> 33:19.260
那这呢

33:19.260 --> 33:20.260
你有没有去设置啊

33:20.260 --> 33:21.260
设置这个过期的时间

33:21.260 --> 33:22.260
没有

33:26.260 --> 33:28.260
或者说汇化级别的一个cookie啊

33:30.260 --> 33:31.260
好

33:31.260 --> 33:33.260
那当我们的express

33:33.260 --> 33:35.260
他的一个值是session的时候呢

33:35.260 --> 33:36.260
表示这个浏览器呢

33:36.260 --> 33:37.260
一关闭

33:37.260 --> 33:38.260
你的这个cookie呢

33:38.260 --> 33:39.260
就被删除了

33:39.260 --> 33:41.260
他的生命周期呢

33:41.260 --> 33:42.260
也就到头了啊

33:42.260 --> 33:43.260
然后呢

33:43.260 --> 33:44.260
接下来咱们来说一下

33:44.260 --> 33:46.260
这个express呢

33:46.260 --> 33:47.260
他复制

33:47.260 --> 33:48.260
是不是

33:48.260 --> 33:49.260
他复制

33:49.260 --> 33:50.260
他复制的时候呢

33:50.260 --> 33:51.260
他的值是什么

33:51.260 --> 33:53.260
他的值是一个日期

33:53.260 --> 33:54.260
同时呢

33:54.260 --> 33:55.260
他对于这个日期的格式呢

33:55.260 --> 33:57.260
他是有要求的

33:57.260 --> 33:58.260
这个日期的格式呢

33:58.260 --> 33:59.260
必须为

33:59.260 --> 34:00.260
为什么呢

34:00.260 --> 34:01.260
gmt啊好

34:01.260 --> 34:02.260
gmt

34:02.260 --> 34:03.260
这个东西呢

34:03.260 --> 34:04.260
可能大家

34:04.260 --> 34:05.260
头一次见

34:05.260 --> 34:06.260
其实并不是头一次见

34:06.260 --> 34:08.260
你肯定是见过的

34:08.260 --> 34:09.260
但是呢

34:09.260 --> 34:11.260
就是估计你没有在意啊

34:12.260 --> 34:13.260
我接下来呢

34:13.260 --> 34:15.260
解释一下这个gmt啊

34:15.260 --> 34:16.260
那这个gmt呢

34:16.260 --> 34:17.260
是啥

34:17.260 --> 34:18.260
他其实是一个

34:18.260 --> 34:19.260
日期的一个格式

34:19.260 --> 34:20.260
叫什么呢

34:20.260 --> 34:22.260
叫隔离泥制标准时间

34:22.260 --> 34:23.260
这个隔离泥制呢

34:23.260 --> 34:24.260
大家都知道吧

34:24.260 --> 34:25.260
他是在英国伦敦啊

34:25.260 --> 34:26.260
这么一个地方啊

34:26.260 --> 34:28.260
我们世界的时趋呢

34:28.260 --> 34:30.260
就是以他进行划分的

34:30.260 --> 34:31.260
一个时趋呢

34:31.260 --> 34:32.260
他的一个范围就是

34:32.260 --> 34:33.260
我们看地球仪

34:33.260 --> 34:35.260
是不是有精度伪度啊

34:35.260 --> 34:36.260
当然这个时趋呢

34:36.260 --> 34:37.260
跟伪度没有关系啊

34:37.260 --> 34:38.260
他跟精度有关系

34:38.260 --> 34:39.260
一个时趋呢

34:39.260 --> 34:41.260
就划分为15个精度

34:41.260 --> 34:42.260
全球呢

34:42.260 --> 34:44.260
总共分为24个时趋

34:44.260 --> 34:47.260
东西半球各占12个时趋

34:47.260 --> 34:48.260
每个时趋呢

34:48.260 --> 34:50.260
像差一个小时

34:50.260 --> 34:51.260
最多呢

34:51.260 --> 34:53.260
我差一天啊

34:53.260 --> 34:55.260
那我们的中国

34:55.260 --> 34:58.260
以北京市所在的地区

34:58.260 --> 34:59.260
为标准

34:59.260 --> 35:01.260
那北京市所在的地区

35:01.260 --> 35:02.260
为什么呢

35:02.260 --> 35:03.260
为东巴区

35:03.260 --> 35:04.260
平时经常会听到

35:04.260 --> 35:05.260
北京时间

35:05.260 --> 35:06.260
北京时间

35:06.260 --> 35:07.260
指的就是什么呢

35:07.260 --> 35:09.260
就是东巴区啊

35:09.260 --> 35:10.260
其实因为我们

35:10.260 --> 35:11.260
中国的地图

35:11.260 --> 35:12.260
是不是横向啊

35:12.260 --> 35:13.260
东西横跨

35:13.260 --> 35:14.260
是非常之大呀

35:14.260 --> 35:15.260
其实

35:15.260 --> 35:17.260
就是我们在东边跟在西边

35:17.260 --> 35:18.260
其实你们的时间啊

35:18.260 --> 35:20.260
已经差得很远了

35:20.260 --> 35:21.260
好

35:21.260 --> 35:22.260
那

35:22.260 --> 35:23.260
时间上

35:23.260 --> 35:24.260
还有另外一个格式

35:24.260 --> 35:25.260
叫什么呢

35:25.260 --> 35:26.260
叫UTC

35:26.260 --> 35:27.260
UTC

35:27.260 --> 35:28.260
那UTC啊

35:28.260 --> 35:29.260
这个也是一个

35:29.260 --> 35:32.260
日期的这么一个格式啊

35:32.260 --> 35:33.260
然后呢

35:33.260 --> 35:34.260
在这呢

35:34.260 --> 35:35.260
跟大家简单的去说了一下

35:35.260 --> 35:38.260
我们要用的是一个gmt

35:38.260 --> 35:40.260
在这做一个预告

35:40.260 --> 35:41.260
就是关于这个时间

35:41.260 --> 35:43.260
我们后边有一个课

35:43.260 --> 35:44.260
这个课呢

35:44.260 --> 35:45.260
也是我录的

35:45.260 --> 35:46.260
moment.js

35:46.260 --> 35:47.260
在那个课里头呢

35:47.260 --> 35:48.260
我们是

35:48.260 --> 35:49.260
它是一个库

35:49.260 --> 35:51.260
在专门去设置这个日期的啊

35:51.260 --> 35:52.260
然后呢

35:52.260 --> 35:53.260
在那个库当中呢

35:53.260 --> 35:55.260
我们会详细的去讲解一下

35:55.260 --> 35:56.260
关于日期身上呢

35:56.260 --> 35:58.260
相应的一些知识点

35:58.260 --> 35:59.260
比如说这个gmt啊

35:59.260 --> 36:00.260
是啥UTC啊

36:00.260 --> 36:01.260
到底是啥

36:01.260 --> 36:02.260
是吧

36:02.260 --> 36:03.260
在那个课里头呢

36:03.260 --> 36:04.260
有详细的介绍

36:04.260 --> 36:05.260
到时候呢

36:05.260 --> 36:06.260
大家你们学到后边

36:06.260 --> 36:07.260
就看到了

36:07.260 --> 36:08.260
好不好

36:08.260 --> 36:09.260
然后呢

36:09.260 --> 36:10.260
咱们来说一下

36:10.260 --> 36:11.260
就是这个gmt

36:11.260 --> 36:12.260
其实大家是

36:12.260 --> 36:13.260
平常都能够见得到的啊

36:13.260 --> 36:14.260
multi

36:14.260 --> 36:15.260
这个东西呢

36:15.260 --> 36:16.260
是经常用嘛

36:16.260 --> 36:17.260
好

36:17.260 --> 36:18.260
打开啊

36:18.260 --> 36:19.260
这是不是有一个gmt啊

36:19.260 --> 36:20.260
那这个结果呢

36:20.260 --> 36:22.260
就是我当前的这么一个日期

36:22.260 --> 36:23.260
你会看到

36:23.260 --> 36:24.260
这是不是有一个gmt啊

36:24.260 --> 36:25.260
好

36:25.260 --> 36:26.260
它呢

36:26.260 --> 36:27.260
其实就是说

36:27.260 --> 36:28.260
new data

36:28.260 --> 36:29.260
返回的一个日期的格式呢

36:29.260 --> 36:30.260
就是一个gmt的一个格式

36:30.260 --> 36:31.260
换句话说

36:31.260 --> 36:32.260
我们的express呢

36:32.260 --> 36:34.260
你去设置的时候呢

36:34.260 --> 36:35.260
用new data

36:35.260 --> 36:36.260
new data

36:36.260 --> 36:37.260
就ok了

36:37.260 --> 36:38.260
然后这个里边呢

36:38.260 --> 36:40.260
有一个加零八零零

36:40.260 --> 36:41.260
这啥

36:41.260 --> 36:42.260
这个呢

36:42.260 --> 36:43.260
其实就是一个

36:43.260 --> 36:44.260
我们当前的一个时趋啊

36:44.260 --> 36:45.260
就是我所在的一个时趋啊

36:45.260 --> 36:46.260
你看这个

36:46.260 --> 36:47.260
这个加呢

36:47.260 --> 36:49.260
其实是正负的一个意思啊

36:49.260 --> 36:51.260
我们刚才已经说过啊

36:51.260 --> 36:54.260
分为这个西时趋跟东时趋

36:54.260 --> 36:56.260
那往西边走的话

36:56.260 --> 36:58.260
它是用负来表示

36:58.260 --> 36:59.260
往东边走呢

36:59.260 --> 37:00.260
用这个正来表示啊

37:00.260 --> 37:02.260
目前我们北京所在的一个时趋呢

37:02.260 --> 37:03.260
就是东八趋

37:03.260 --> 37:04.260
所以说呢

37:04.260 --> 37:06.260
就是一个正零八零零

37:06.260 --> 37:07.260
这个呢

37:07.260 --> 37:08.260
就是一个当前的时趋啊

37:08.260 --> 37:09.260
关于这些东西呢

37:09.260 --> 37:10.260
提一下

37:10.260 --> 37:11.260
后边呢

37:11.260 --> 37:13.260
到时候有详细的去介绍啊

37:13.260 --> 37:14.260
来

37:14.260 --> 37:15.260
然后呢

37:15.260 --> 37:17.260
咱们就实际的拿代码的

37:17.260 --> 37:18.260
跟大家呢

37:18.260 --> 37:19.260
去演示一下啊

37:19.260 --> 37:20.260
我呢

37:20.260 --> 37:21.260
再来上设置一个cookie啊

37:21.260 --> 37:22.260
cookie

37:22.260 --> 37:23.260
然后呢

37:23.260 --> 37:24.260
它的值等于什么呢

37:24.260 --> 37:25.260
我们给上一个margin吧

37:25.260 --> 37:26.260
然后呢

37:26.260 --> 37:27.260
这个margin呢

37:27.260 --> 37:28.260
多少呢

37:28.260 --> 37:29.260
给上一个20

37:29.260 --> 37:30.260
ok吧

37:30.260 --> 37:32.260
这是一个简单的这么一个cookie

37:32.260 --> 37:33.260
是不是啊

37:33.260 --> 37:34.260
我们先把这个margin存下来

37:34.260 --> 37:35.260
咱来看一下

37:35.260 --> 37:36.260
night

37:36.260 --> 37:38.260
在这个application啊

37:38.260 --> 37:39.260
刚才那个保存了一下

37:39.260 --> 37:40.260
算了

37:40.260 --> 37:41.260
我们重新来吧

37:41.260 --> 37:42.260
这里头呢

37:42.260 --> 37:43.260
有一个什么空啊

37:43.260 --> 37:44.260
好

37:44.260 --> 37:45.260
你看到了吗

37:45.260 --> 37:46.260
这个margin呢

37:46.260 --> 37:47.260
是不是就有了

37:47.260 --> 37:48.260
我们先把它存下来

37:48.260 --> 37:49.260
存下来之后呢

37:49.260 --> 37:50.260
那接下来

37:50.260 --> 37:52.260
我对它进行一个日期的一个设置啊

37:52.260 --> 37:54.260
设置的是什么呢

37:54.260 --> 37:56.260
设置的就是这个express

37:56.260 --> 37:57.260
那怎么去设置的呢

37:57.260 --> 37:58.260
来

37:58.260 --> 37:59.260
在这啊

37:59.260 --> 38:00.260
express

38:00.260 --> 38:01.260
后边跟等号

38:01.260 --> 38:02.260
那这个值

38:02.260 --> 38:03.260
我们说过

38:03.260 --> 38:05.260
它是一个cookie过期的一个时间

38:05.260 --> 38:06.260
这个时间呢

38:06.260 --> 38:08.260
我们用一个newdate

38:08.260 --> 38:09.260
来表示啊

38:09.260 --> 38:10.260
然后呢

38:10.260 --> 38:11.260
这个newdate

38:11.260 --> 38:12.260
我们是可以给它进行一个复制的

38:12.260 --> 38:13.260
比如说

38:13.260 --> 38:14.260
一个2008

38:14.260 --> 38:15.260
然后呢

38:15.260 --> 38:16.260
11

38:16.260 --> 38:17.260
11啊

38:17.260 --> 38:18.260
11

38:18.260 --> 38:19.260
这啥意思啊

38:19.260 --> 38:20.260
这个呢

38:20.260 --> 38:22.260
其实是我们实力化了一个日期对象

38:22.260 --> 38:23.260
它的时间呢

38:23.260 --> 38:25.260
是2008年

38:25.260 --> 38:27.260
1月1号吗

38:27.260 --> 38:28.260
这里千万不要认为

38:28.260 --> 38:29.260
它是1月1号

38:29.260 --> 38:30.260
它是2月1号

38:30.260 --> 38:32.260
因为我们的月份是从零开始的

38:32.260 --> 38:34.260
所以这你给的1表示的是

38:34.260 --> 38:35.260
2月份啊

38:35.260 --> 38:36.260
好

38:36.260 --> 38:38.260
那也就是我现在express的

38:38.260 --> 38:39.260
一个日期呢

38:39.260 --> 38:40.260
是2008年

38:40.260 --> 38:41.260
2008年

38:41.260 --> 38:42.260
这一天呢

38:42.260 --> 38:43.260
是吧

38:43.260 --> 38:44.260
所以啊

38:44.260 --> 38:45.260
这个日期呢

38:45.260 --> 38:46.260
是一个过去的日期

38:46.260 --> 38:47.260
给完之后呢

38:47.260 --> 38:48.260
我们保存大家来看一下

38:48.260 --> 38:49.260
哎

38:49.260 --> 38:50.260
你会看到这个margin

38:50.260 --> 38:51.260
是不是就没了

38:51.260 --> 38:52.260
刚才是不是还在呢

38:52.260 --> 38:53.260
现在就没了

38:53.260 --> 38:54.260
你刷新

38:54.260 --> 38:55.260
没了

38:55.260 --> 38:56.260
为啥呢

38:56.260 --> 38:57.260
是因为你的express的时间

38:57.260 --> 38:58.260
已经过去了

38:58.260 --> 38:59.260
过去了之后呢

38:59.260 --> 39:00.260
怎么办呢

39:00.260 --> 39:01.260
哎

39:01.260 --> 39:02.260
这个cookie

39:02.260 --> 39:03.260
它的生命周期呢

39:03.260 --> 39:04.260
就完了

39:04.260 --> 39:05.260
game over了

39:05.260 --> 39:06.260
所以啊

39:06.260 --> 39:07.260
我们就看不到了

39:07.260 --> 39:08.260
就没有了

39:08.260 --> 39:09.260
理解吧

39:09.260 --> 39:10.260
那这个地方

39:10.260 --> 39:11.260
就是一个

39:11.260 --> 39:12.260
未来的一个时间

39:12.260 --> 39:13.260
比如说2108年

39:13.260 --> 39:14.260
这个肯定没有到

39:14.260 --> 39:15.260
是吧

39:15.260 --> 39:16.260
那我们在这呢

39:16.260 --> 39:17.260
再来啊

39:17.260 --> 39:18.260
不用刷新了

39:18.260 --> 39:19.260
它是要更新

39:19.260 --> 39:20.260
你看到吗

39:20.260 --> 39:21.260
这个margin呢

39:21.260 --> 39:22.260
是不是就有了

39:22.260 --> 39:23.260
而且啊

39:23.260 --> 39:24.260
在我的express这

39:24.260 --> 39:25.260
你看到吗

39:25.260 --> 39:26.260
202108

39:26.260 --> 39:27.260
202-01

39:27.260 --> 39:28.260
ok吧

39:28.260 --> 39:29.260
以及呢

39:29.260 --> 39:30.260
就是我们express呢

39:30.260 --> 39:31.260
你可以不给

39:31.260 --> 39:32.260
不给呢

39:32.260 --> 39:33.260
其实就说

39:33.260 --> 39:34.260
也是啊

39:34.260 --> 39:35.260
即时的

39:35.260 --> 39:36.260
绘画区别的

39:36.260 --> 39:37.260
好

39:37.260 --> 39:38.260
这个呢

39:38.260 --> 39:39.260
就是express

39:39.260 --> 39:40.260
然后呢

39:40.260 --> 39:41.260
最后需要去说一下

39:41.260 --> 39:42.260
说什么呢

39:42.260 --> 39:43.260
就是它的一个值

39:43.260 --> 39:44.260
new data这个日期呢

39:44.260 --> 39:45.260
它取的是哪里呢

39:45.260 --> 39:47.260
取的是你本机

39:47.260 --> 39:49.260
也就是你的客户端的一个日期

39:49.260 --> 39:50.260
也就是你的电脑

39:50.260 --> 39:51.260
右下角

39:51.260 --> 39:52.260
那个日期时间

39:52.260 --> 39:54.260
你的电脑的时间

39:54.260 --> 39:55.260
要改变的话

39:55.260 --> 39:57.260
那这个值绝对会跟着变啊

39:57.260 --> 39:58.260
所以说呢

39:58.260 --> 39:59.260
它是一个客户端的一个

39:59.260 --> 40:02.260
取的是客户端的一个时间啊

40:02.260 --> 40:03.260
好吧

40:03.260 --> 40:04.260
那express呢

40:04.260 --> 40:05.260
咱们就过了

40:05.260 --> 40:06.260
继续往下啊

40:06.260 --> 40:07.260
第六个

40:07.260 --> 40:08.260
第六个

40:08.260 --> 40:09.260
第六个呢

40:09.260 --> 40:10.260
是什么呢

40:10.260 --> 40:11.260
是max edge

40:11.260 --> 40:12.260
这个东西呢

40:12.260 --> 40:13.260
这个属性呢

40:13.260 --> 40:15.260
它其实跟我们的第五条

40:15.260 --> 40:16.260
express呢

40:16.260 --> 40:17.260
很像啊

40:17.260 --> 40:18.260
它是什么呢

40:18.260 --> 40:19.260
cookie

40:19.260 --> 40:20.260
cookie什么呢

40:20.260 --> 40:22.260
cookie的有效期

40:24.260 --> 40:26.260
有效期跟过期

40:26.260 --> 40:28.260
这俩怎么去理解呢

40:28.260 --> 40:29.260
其实他们

40:29.260 --> 40:31.260
作用其实都是一样的啊

40:31.260 --> 40:33.260
那它max edge呢

40:33.260 --> 40:34.260
跟一个express呢

40:34.260 --> 40:36.260
他们具有同样的作用

40:36.260 --> 40:39.260
它都是用来去设置cookie的生命周期

40:39.260 --> 40:40.260
但是呢

40:40.260 --> 40:42.260
他们其实是有区别的啊

40:42.260 --> 40:43.260
都有哪些区别呢

40:43.260 --> 40:44.260
来说一下

40:44.260 --> 40:46.260
第一个呢就是说express

40:46.260 --> 40:47.260
这个

40:47.260 --> 40:48.260
这个属性呢

40:48.260 --> 40:51.260
它是http1.0版本当中的内容

40:51.260 --> 40:53.260
而这个max edge呢

40:53.260 --> 40:55.260
是http1.1版本当中的内容

40:55.260 --> 40:57.260
他们两个的诞生时间

40:57.260 --> 40:59.260
是不一样的

40:59.260 --> 41:00.260
express

41:00.260 --> 41:02.260
它的值是一个什么

41:02.260 --> 41:03.260
时间点

41:03.260 --> 41:05.260
具体到某年某月某日

41:05.260 --> 41:06.260
都是ok的

41:06.260 --> 41:08.260
它是一个具体的一个时间点

41:08.260 --> 41:10.260
而这个max edge呢

41:10.260 --> 41:11.260
它的值是什么呢

41:11.260 --> 41:15.260
它的值是一个秒为单位的时间段

41:16.260 --> 41:17.260
什么意思啊

41:17.260 --> 41:18.260
就是max edge

41:18.260 --> 41:20.260
比如说你给它一个值300

41:20.260 --> 41:22.260
那它表示的就是300秒

41:22.260 --> 41:23.260
就这意思

41:23.260 --> 41:24.260
理解了吧

41:24.260 --> 41:25.260
好

41:25.260 --> 41:26.260
所以说呢

41:26.260 --> 41:28.260
它俩的值是不一样的

41:28.260 --> 41:29.260
然后呢

41:29.260 --> 41:30.260
他们的意思

41:30.260 --> 41:31.260
就是说这个属性

41:31.260 --> 41:32.260
它本身的一个意思呢

41:32.260 --> 41:33.260
也不同

41:33.260 --> 41:34.260
express呢

41:34.260 --> 41:35.260
用来设置一个什么呢

41:35.260 --> 41:37.260
过期的一个时间点

41:37.260 --> 41:38.260
你的cookie到了这个时间点

41:38.260 --> 41:40.260
它就会被删掉了

41:40.260 --> 41:41.260
而这个max edge呢

41:41.260 --> 41:43.260
它是用来设置什么呢

41:43.260 --> 41:45.260
cookie能够存活的时间

41:45.260 --> 41:46.260
啊

41:46.260 --> 41:47.260
其实换句话说

41:47.260 --> 41:48.260
就说

41:48.260 --> 41:49.260
我设置了一个两分钟

41:49.260 --> 41:50.260
那ok啊

41:50.260 --> 41:51.260
这个cookie呢

41:51.260 --> 41:53.260
当两分钟一到

41:53.260 --> 41:55.260
它也就挂了

41:55.260 --> 41:56.260
这个呢

41:56.260 --> 41:58.260
就是他们第三个区别

41:58.260 --> 41:59.260
能理解吗

41:59.260 --> 42:00.260
他们两个

42:00.260 --> 42:01.260
所代表的一个意义呢

42:01.260 --> 42:02.260
就是

42:02.260 --> 42:03.260
他们的功能

42:03.260 --> 42:04.260
其实是一样的

42:04.260 --> 42:05.260
或者说

42:05.260 --> 42:06.260
作用是一样的

42:06.260 --> 42:08.260
但是本身是有一些区别的

42:08.260 --> 42:09.260
那好

42:09.260 --> 42:10.260
咱们接下来啊

42:10.260 --> 42:11.260
来说一下啊

42:11.260 --> 42:12.260
这个max edge呢

42:12.260 --> 42:13.260
它总共有三种值

42:13.260 --> 42:14.260
第一种呢

42:14.260 --> 42:15.260
就是一个-1

42:15.260 --> 42:16.260
这个-1呢

42:16.260 --> 42:17.260
表示什么意思啊

42:17.260 --> 42:18.260
就是一个零时的一个cookie

42:18.260 --> 42:19.260
它呢

42:19.260 --> 42:20.260
不会生成

42:20.260 --> 42:21.260
不会生成啊

42:21.260 --> 42:22.260
然后呢

42:22.260 --> 42:23.260
第二个呢

42:23.260 --> 42:24.260
就是一个零

42:24.260 --> 42:25.260
零的时候呢

42:25.260 --> 42:26.260
表示啥意思啊

42:26.260 --> 42:27.260
表示有效期

42:27.260 --> 42:29.260
已经到了这个cookie呢

42:29.260 --> 42:30.260
它的时间

42:30.260 --> 42:31.260
已经够了啊

42:31.260 --> 42:32.260
马上就要挂了

42:32.260 --> 42:33.260
就说你看

42:33.260 --> 42:34.260
它的值

42:34.260 --> 42:35.260
本身就是一个

42:35.260 --> 42:36.260
一秒位单位的

42:36.260 --> 42:37.260
一个时间段嘛

42:37.260 --> 42:38.260
你给上10秒

42:38.260 --> 42:39.260
那它就开始倒计10嘛

42:39.260 --> 42:41.260
19,8,7,6,5,4,3,2,1

42:41.260 --> 42:42.260
然后玩之后呢

42:42.260 --> 42:43.260
时间一过

42:43.260 --> 42:44.260
10秒一过

42:44.260 --> 42:45.260
它就挂了

42:45.260 --> 42:46.260
一倒计时

42:46.260 --> 42:47.260
倒到零了

42:47.260 --> 42:48.260
就挂了

42:48.260 --> 42:49.260
然后接下来

42:49.260 --> 42:50.260
第三个呢

42:50.260 --> 42:51.260
就是我们可能

42:51.260 --> 42:52.260
平时常见最多的

42:52.260 --> 42:53.260
就是一个

42:53.260 --> 42:54.260
正数

42:54.260 --> 42:55.260
正数是啥

42:55.260 --> 42:56.260
正数呢

42:56.260 --> 42:57.260
其实就表示

42:57.260 --> 42:58.260
现在你的

42:58.260 --> 42:59.260
能存活的一个

42:59.260 --> 43:00.260
多少秒数

43:01.260 --> 43:02.260
好

43:02.260 --> 43:03.260
然后呢

43:03.260 --> 43:04.260
接下来

43:04.260 --> 43:05.260
我们呢

43:05.260 --> 43:06.260
演示一下

43:06.260 --> 43:07.260
演示一下啊

43:07.260 --> 43:08.260
在这个下边

43:08.260 --> 43:12.260
来document.cookie

43:12.260 --> 43:13.260
然后呢

43:13.260 --> 43:14.260
我们再给上一个

43:14.260 --> 43:15.260
比如说

43:15.260 --> 43:16.260
pading嘛

43:16.260 --> 43:17.260
这个pading呢

43:17.260 --> 43:19.260
等于一个30

43:19.260 --> 43:21.260
后边跟maxh

43:21.260 --> 43:22.260
那这个maxh呢

43:22.260 --> 43:23.260
比如说

43:23.260 --> 43:24.260
我给上一个1

43:24.260 --> 43:25.260
给上一个1表示啥意思啊

43:25.260 --> 43:26.260
表示

43:26.260 --> 43:27.260
这条cookie

43:27.260 --> 43:29.260
它只能够存活一秒钟

43:29.260 --> 43:30.260
它创建开始

43:30.260 --> 43:31.260
倒数1

43:31.260 --> 43:32.260
然后呢

43:32.260 --> 43:33.260
它就没了

43:33.260 --> 43:34.260
来

43:34.260 --> 43:35.260
再来看一下啊

43:35.260 --> 43:36.260
我重新刷新啊

43:36.260 --> 43:37.260
其实你在这瞬间

43:37.260 --> 43:38.260
能够看见

43:38.260 --> 43:42.230
刷新

43:42.230 --> 43:43.230
可以

43:43.230 --> 43:44.230
没有呢

43:44.230 --> 43:45.230
max

43:45.230 --> 43:47.230
应该是能够

43:47.230 --> 43:48.230
这儿错了

43:48.230 --> 43:50.230
是能够看到的啊

43:50.230 --> 43:51.230
刷新一下

43:51.230 --> 43:52.230
再来看

43:52.230 --> 43:53.230
有没有

43:53.230 --> 43:54.230
pading

43:54.230 --> 43:55.230
你看

43:55.230 --> 43:56.230
刷新

43:56.230 --> 43:57.230
看这儿

43:57.230 --> 43:58.230
是不是

43:58.230 --> 43:59.230
然后马上就没了

43:59.230 --> 44:00.230
时间到了

44:00.230 --> 44:01.230
一秒钟

44:01.230 --> 44:02.230
ok啊

44:02.230 --> 44:03.230
然后呢

44:03.230 --> 44:04.230
继续

44:04.230 --> 44:05.230
我把这个时间

44:05.230 --> 44:06.230
给它设置的长一些

44:06.230 --> 44:07.230
比如说

44:07.230 --> 44:08.230
我把它设置成一个5

44:08.230 --> 44:09.230
设置成一个5之后呢

44:09.230 --> 44:10.230
再来看啊

44:10.230 --> 44:11.230
你看

44:11.230 --> 44:12.230
这儿有没有

44:12.230 --> 44:13.230
有pading吧

44:13.230 --> 44:14.230
然后呢

44:14.230 --> 44:15.230
可能大家还在等

44:15.230 --> 44:16.230
还在数

44:16.230 --> 44:17.230
5

44:17.230 --> 44:18.230
4

44:18.230 --> 44:19.230
3

44:19.230 --> 44:20.230
2

44:20.230 --> 44:21.230
1

44:21.230 --> 44:22.230
0

44:22.230 --> 44:23.230
为啥

44:23.230 --> 44:24.230
还在呢

44:24.230 --> 44:25.230
不好意思啊

44:25.230 --> 44:26.230
让你失望了

44:26.230 --> 44:27.230
那刚才那个呢

44:27.230 --> 44:28.230
是时间短

44:28.230 --> 44:29.230
就是控制台

44:29.230 --> 44:30.230
它一闪而过

44:30.230 --> 44:31.230
它呢

44:31.230 --> 44:32.230
对于这个东西呢

44:32.230 --> 44:33.230
在这儿显示

44:33.230 --> 44:34.230
它不会删掉它

44:34.230 --> 44:35.230
但是

44:35.230 --> 44:36.230
你看

44:36.230 --> 44:37.230
它确实是没了

44:37.230 --> 44:38.230
我们切换一下

44:38.230 --> 44:39.230
不管你从哪里进来

44:39.230 --> 44:40.230
进来之后呢

44:40.230 --> 44:41.230
这块呢

44:41.230 --> 44:42.230
就更新了

44:42.230 --> 44:43.230
一更新

44:43.230 --> 44:44.230
是不是就没了

44:44.230 --> 44:45.230
所以说呢

44:45.230 --> 44:46.230
对于功能上

44:46.230 --> 44:47.230
什么有任何的影响的

44:47.230 --> 44:48.230
只是

44:48.230 --> 44:49.230
控制台

44:49.230 --> 44:50.230
这个平台

44:50.230 --> 44:51.230
给咱们展示的时候呢

44:51.230 --> 44:53.230
可能稍微有些问题啊

44:53.230 --> 44:54.230
行啊

44:54.230 --> 44:55.230
然后呢

44:55.230 --> 44:56.230
那从这儿呢

44:56.230 --> 44:57.230
其实大家能够

44:57.230 --> 44:58.230
体会出这个max edge

44:58.230 --> 44:59.230
跟express

44:59.230 --> 45:00.230
它的一个区别了吧

45:00.230 --> 45:01.230
这个东西呢

45:01.230 --> 45:02.230
就是一个时间点

45:02.230 --> 45:03.230
到了这个节点

45:03.230 --> 45:04.230
然后呢

45:04.230 --> 45:05.230
就挂了

45:05.230 --> 45:06.230
这是啥

45:06.230 --> 45:07.230
就是它生命

45:07.230 --> 45:08.230
现在还剩多少秒

45:08.230 --> 45:09.230
就这个意思啊

45:09.230 --> 45:10.230
那其实

45:10.230 --> 45:11.230
我们可以啊

45:11.230 --> 45:12.230
用另外一种方式呢

45:12.230 --> 45:13.230
给大家呢

45:13.230 --> 45:14.230
去演示一下

45:14.230 --> 45:15.230
用什么呢

45:15.230 --> 45:16.230
用定时器啊

45:16.230 --> 45:17.230
在这儿呢

45:17.230 --> 45:18.230
开启一个定时器

45:18.230 --> 45:19.230
side time out

45:19.230 --> 45:20.230
然后呢

45:20.230 --> 45:21.230
方身

45:22.230 --> 45:23.230
这个时间呢

45:23.230 --> 45:24.230
先给上一个4000

45:24.230 --> 45:27.230
就是表示4000毫秒

45:27.230 --> 45:28.230
那就是4秒钟之后呢

45:28.230 --> 45:29.230
我们console一下

45:29.230 --> 45:30.230
console一下

45:30.230 --> 45:31.230
什么呢

45:31.230 --> 45:33.230
document.cookie

45:33.230 --> 45:35.540
你看啊

45:35.540 --> 45:36.540
我们在前面有说过啊

45:36.540 --> 45:37.540
这个cookie呢

45:37.540 --> 45:38.540
它呢

45:38.540 --> 45:39.540
其实是一个可读

45:39.540 --> 45:40.540
可写的这么一个属性

45:40.540 --> 45:41.540
但是呢

45:41.540 --> 45:42.540
在之前咱们一直都是

45:42.540 --> 45:43.540
对这个cookie呢

45:43.540 --> 45:44.540
进行写

45:44.540 --> 45:45.540
我们并没有读

45:45.540 --> 45:46.540
在这呢

45:46.540 --> 45:47.540
咱们就看一下

45:47.540 --> 45:48.540
它能不能读得到

45:48.540 --> 45:49.540
好不好

45:49.540 --> 45:50.540
来4秒钟之后呢

45:50.540 --> 45:51.540
就把我的cookie呢

45:51.540 --> 45:52.540
给它打印出来

45:52.540 --> 45:53.540
来刷新一下啊

45:53.540 --> 45:55.540
在我们的这个console这儿

45:55.540 --> 45:56.540
等一下啊

45:56.540 --> 45:57.540
哎

45:57.540 --> 45:58.540
你看到吗

45:58.540 --> 45:59.540
内幕

45:59.540 --> 46:00.540
margin还有一个

46:00.540 --> 46:01.540
拍顶

46:01.540 --> 46:02.540
现在呢

46:02.540 --> 46:03.540
这个cookie呢

46:03.540 --> 46:04.540
是不是就打印出来了

46:04.540 --> 46:05.540
打印出来之后呢

46:05.540 --> 46:06.540
继续再来

46:06.540 --> 46:07.540
哎没有完

46:07.540 --> 46:08.540
再来给一个

46:08.540 --> 46:09.540
多久呢

46:09.540 --> 46:10.540
5秒钟

46:10.540 --> 46:11.540
5秒钟

46:11.540 --> 46:12.540
再来看看

46:12.540 --> 46:13.540
大家看一下

46:13.540 --> 46:14.540
看一下4秒钟打印的

46:14.540 --> 46:15.540
跟5秒钟打印的

46:15.540 --> 46:16.540
有区别吗

46:16.540 --> 46:17.540
有区别吗

46:17.540 --> 46:18.540
有吧

46:18.540 --> 46:19.540
什么没了

46:19.540 --> 46:20.540
拍顶没了

46:20.540 --> 46:21.540
为啥呢

46:21.540 --> 46:22.540
因为我在这

46:22.540 --> 46:23.540
拍顶设置的一个

46:23.540 --> 46:24.540
生命周期呢

46:24.540 --> 46:25.540
就是让它存活5秒钟

46:25.540 --> 46:26.540
那5秒钟之后呢

46:26.540 --> 46:27.540
你去打印的时候呢

46:27.540 --> 46:28.540
是没的

46:28.540 --> 46:29.540
但是呢

46:29.540 --> 46:30.540
在4秒钟的时候呢

46:30.540 --> 46:31.540
你看有没有

46:31.540 --> 46:32.540
有吧

46:32.540 --> 46:33.540
ok啊

46:33.540 --> 46:34.540
好

46:34.540 --> 46:35.540
行啊那继续往下啊

46:35.540 --> 46:36.540
那cookie呢

46:36.540 --> 46:38.540
它还有另外3条属性啊

46:38.540 --> 46:39.540
那这3条属性呢

46:39.540 --> 46:40.540
有一个共同的

46:40.540 --> 46:41.540
一个特装是啥呢

46:41.540 --> 46:42.540
就是说

46:42.540 --> 46:44.540
对于我们前端来说呢

46:44.540 --> 46:45.540
你只能去看

46:45.540 --> 46:47.540
你是没有办法去操作的

46:47.540 --> 46:48.540
无能为力啊

46:48.540 --> 46:49.540
那我就一堆

46:49.540 --> 46:50.540
跟大家呢

46:50.540 --> 46:51.540
去说一下啊

46:51.540 --> 46:52.540
http

46:52.540 --> 46:53.540
http

46:53.540 --> 46:55.540
httponline

46:55.540 --> 46:56.540
ok啊

46:56.540 --> 46:57.540
这条属性

46:57.540 --> 46:58.540
这条属性呢

46:58.540 --> 46:59.540
来标一下

46:59.540 --> 47:00.540
它什么作用啊

47:00.540 --> 47:01.540
有这个

47:01.540 --> 47:02.540
这个什么的

47:02.540 --> 47:04.540
有有这个标记的

47:04.540 --> 47:05.540
cookie

47:05.540 --> 47:06.540
然后呢

47:06.540 --> 47:08.540
前端无法

47:08.540 --> 47:09.540
过去

47:09.540 --> 47:10.540
啊

47:10.540 --> 47:11.540
我们通过这个

47:11.540 --> 47:12.540
document.cookie呢

47:12.540 --> 47:13.540
你是拿不到的

47:13.540 --> 47:15.540
它只能后端去操作

47:15.540 --> 47:16.540
啊

47:16.540 --> 47:17.540
我们只能够看得见

47:17.540 --> 47:18.540
你眼巴巴的

47:18.540 --> 47:19.540
看到它

47:19.540 --> 47:20.540
你是没有办法的

47:20.540 --> 47:21.540
好啊

47:21.540 --> 47:22.540
第八个啊

47:22.540 --> 47:24.540
secure

47:24.540 --> 47:28.520
哎

47:28.520 --> 47:29.520
secure

47:29.520 --> 47:30.520
然后呢

47:30.520 --> 47:31.520
这个呢是什么呢

47:31.520 --> 47:32.520
这个呢是设置

47:32.520 --> 47:34.520
后边来一下

47:34.520 --> 47:37.520
设置设置这个cookie

47:37.520 --> 47:40.520
只能通过

47:40.520 --> 47:42.520
通过什么呢

47:42.520 --> 47:44.520
https

47:44.520 --> 47:45.520
协议

47:45.520 --> 47:46.520
然后呢

47:46.520 --> 47:47.520
传输

47:47.520 --> 47:49.520
我们正常的这个cookie呢

47:49.520 --> 47:50.520
你看

47:50.520 --> 47:52.520
我们在这给的这个地址啊

47:52.520 --> 47:53.520
这个地址

47:53.520 --> 47:54.520
虽然说我们在这看不到啊

47:54.520 --> 47:55.520
但是呢

47:55.520 --> 47:56.520
它是个啥

47:56.520 --> 47:58.520
这个https的一个协议

47:58.520 --> 47:59.520
啊

47:59.520 --> 48:00.520
如果说你的cookie呢

48:00.520 --> 48:02.520
设置了这条属性

48:02.520 --> 48:04.520
那设置完这条属性之后呢

48:04.520 --> 48:05.520
这个cookie呢

48:05.520 --> 48:07.520
它只能够在https的

48:07.520 --> 48:08.520
这个协议当中呢

48:08.520 --> 48:09.520
去传输啊

48:09.520 --> 48:10.520
它其实主要是为了干嘛

48:10.520 --> 48:12.520
主要是为了安全啊

48:12.520 --> 48:14.520
我们前面有说过这个https

48:14.520 --> 48:15.520
跟https

48:15.520 --> 48:16.520
两个协议呢

48:16.520 --> 48:17.520
是不一样的

48:17.520 --> 48:18.520
加了一个s呢

48:18.520 --> 48:20.520
其实它更安全了

48:20.520 --> 48:21.520
同时呢就说

48:21.520 --> 48:22.520
我们没有办法

48:22.520 --> 48:23.520
因为这个东西呢

48:23.520 --> 48:24.520
要证书

48:24.520 --> 48:25.520
所以啊

48:25.520 --> 48:26.520
没有办法跟大家呢

48:26.520 --> 48:27.520
去操作啊

48:27.520 --> 48:29.520
好大家知道就行了啊

48:29.520 --> 48:30.520
来最后一个

48:30.520 --> 48:32.520
最后一个第九个

48:32.520 --> 48:33.520
第九个呢

48:33.520 --> 48:35.520
是samesite

48:35.520 --> 48:39.600
samesite

48:39.600 --> 48:40.600
这个是啥啊

48:40.600 --> 48:41.600
这条属性呢

48:41.600 --> 48:43.600
它所代表的是什么呢

48:43.600 --> 48:45.600
就是设置这个cookie

48:45.600 --> 48:47.600
cookie呢

48:47.600 --> 48:49.600
在跨域

48:49.600 --> 48:53.360
跨域请求的时候

48:53.360 --> 48:54.360
干嘛呢

48:54.360 --> 48:57.360
不能被发送

48:57.360 --> 48:58.360
啥意思啊

48:58.360 --> 48:59.360
我们前面有说过

48:59.360 --> 49:00.360
这个cookie呢

49:00.360 --> 49:01.360
当咱们去发送

49:01.360 --> 49:02.360
一个网络请求的时候呢

49:02.360 --> 49:04.360
它其实会被

49:04.360 --> 49:06.360
烧带着发给服务系

49:06.360 --> 49:08.360
如果说你的cookie当中呢

49:08.360 --> 49:10.360
去设置了这条属性之后呢

49:10.360 --> 49:12.360
就是在跨域请求

49:12.360 --> 49:14.360
就是你说我现在去请求

49:14.360 --> 49:16.360
百度身上里头的这个

49:16.360 --> 49:17.360
数据

49:17.360 --> 49:18.360
然后假设说

49:18.360 --> 49:19.360
能跨域

49:19.360 --> 49:20.360
我这边能

49:20.360 --> 49:21.360
人家那边允许跨域了

49:21.360 --> 49:22.360
啊是吧

49:22.360 --> 49:23.360
我是不是就能够

49:23.360 --> 49:24.360
取到这个数据了

49:24.360 --> 49:25.360
但是如果说你

49:25.360 --> 49:26.360
你带了这个

49:26.360 --> 49:28.360
你的cookie有这个设置的话

49:28.360 --> 49:29.360
你在去请求的时候呢

49:29.360 --> 49:31.360
其实你不会把

49:31.360 --> 49:32.360
百度的那个cookie呢

49:32.360 --> 49:33.360
给我带过来

49:33.360 --> 49:35.360
这个呢是为了干嘛呢

49:35.360 --> 49:36.360
就是为了避免

49:36.360 --> 49:37.360
当这个跨域请求的时候呢

49:37.360 --> 49:39.360
可能会出现一些

49:39.360 --> 49:40.360
比如说这个网络攻击啊

49:40.360 --> 49:41.360
伪造的一些

49:41.360 --> 49:43.360
黑客等等乱七八糟

49:43.360 --> 49:44.360
这样的话不安全

49:44.360 --> 49:45.360
咱们都知道

49:45.360 --> 49:46.360
这个cookie存储的是啥

49:46.360 --> 49:47.360
用户名啊密码

49:47.360 --> 49:48.360
这些东西呢

49:48.360 --> 49:49.360
都是比较敏感的一些信息

49:49.360 --> 49:50.360
是不是啊

49:50.360 --> 49:51.360
好那如果说

49:51.360 --> 49:53.360
我可能做对外的一些

49:53.360 --> 49:54.360
API的一些接口

49:54.360 --> 49:55.360
是不是啊

49:55.360 --> 49:56.360
我可能就设置一下

49:56.360 --> 49:57.360
这个东西

49:57.360 --> 49:58.360
这样的话就保证了

49:58.360 --> 50:00.360
用户的一些账号的安全

50:00.360 --> 50:02.360
好那这条属性呢

50:02.360 --> 50:03.360
它其实是比较新的

50:03.360 --> 50:04.360
这么一条属性啊

50:04.360 --> 50:07.360
嗯好那这样的话

50:07.360 --> 50:08.360
最后三条属性呢

50:08.360 --> 50:09.360
我们在这呢

50:09.360 --> 50:10.360
只能通过嘴

50:10.360 --> 50:11.360
跟你去讲一下了

50:11.360 --> 50:13.360
不过啊咱是可以看到的

50:13.360 --> 50:14.360
我们是

50:14.360 --> 50:15.360
虽然说没有办法去操作

50:15.360 --> 50:17.360
但是呢咱是可以看到的啊

50:17.360 --> 50:19.360
好那到这的话

50:19.360 --> 50:20.360
以上就是

50:20.360 --> 50:22.360
cookie身上的所有属性

50:22.360 --> 50:24.360
我们算是一一都给大家

50:24.360 --> 50:25.360
那接下来呢

50:25.360 --> 50:27.360
咱们就花一些时间啊

50:27.360 --> 50:28.360
对了啊

50:28.360 --> 50:30.360
先看一下他们三好不好

50:30.360 --> 50:31.360
他们三呢

50:31.360 --> 50:32.360
我们在哪里呢

50:32.360 --> 50:33.360
在这个百度啊

50:33.360 --> 50:35.360
百度打开这个控制台

50:35.360 --> 50:36.360
application

50:36.360 --> 50:37.360
然后呢

50:37.360 --> 50:39.360
我们找到这里头的cookie啊

50:39.360 --> 50:40.360
这里头呢

50:40.360 --> 50:43.360
有一个有一个有一个

50:43.360 --> 50:44.360
这个来这个啊

50:44.360 --> 50:45.360
你看啊

50:45.360 --> 50:46.360
我们通过控制台

50:46.360 --> 50:47.360
是能够看得到的

50:47.360 --> 50:48.360
你看

50:48.360 --> 50:50.360
这是不是有一个http onlay啊

50:50.360 --> 50:52.360
他是不是就打了一个对沟呀

50:52.360 --> 50:53.360
那打了一个对沟

50:53.360 --> 50:54.360
就表示啊

50:54.360 --> 50:55.360
这条cookie呢

50:55.360 --> 50:56.360
把这条cookie呢

50:56.360 --> 50:58.360
我们前端你是没有办法去获取的

50:58.360 --> 51:01.360
人家的权限是只留给了后端

51:01.360 --> 51:02.360
我们前端呢

51:02.360 --> 51:04.360
仅仅看一下就行了啊

51:04.360 --> 51:05.360
然后再往后啊

51:05.360 --> 51:06.360
secure这个东西

51:06.360 --> 51:07.360
然后呢

51:07.360 --> 51:08.360
这个东西呢

51:08.360 --> 51:09.360
当他一设置的时候呢

51:09.360 --> 51:10.360
就是说啊

51:10.360 --> 51:13.360
这个cookie他只能够在https

51:13.360 --> 51:14.360
这个协议下呢

51:14.360 --> 51:15.360
进行一个传输

51:15.360 --> 51:16.360
那我们来看一下

51:16.360 --> 51:18.360
百度是不是https呢

51:18.360 --> 51:19.360
来其实他试的

51:19.360 --> 51:20.360
你看到吗

51:20.360 --> 51:22.360
这是不是https呀

51:22.360 --> 51:25.360
人呢是比较安全的啊

51:25.360 --> 51:26.360
ok啊

51:26.360 --> 51:27.360
然后呢

51:27.360 --> 51:28.360
再往下呢

51:28.360 --> 51:30.360
是这个啊same sight啊

51:30.360 --> 51:31.360
这条属性

51:31.360 --> 51:32.360
这条属性呢

51:32.360 --> 51:33.360
他给了一个难

51:33.360 --> 51:34.360
给了一个难就表示啊

51:34.360 --> 51:37.360
那这个cookie

51:37.360 --> 51:40.360
当发生这种跨域请求的时候呢

51:40.360 --> 51:42.360
他是不会被传输的

51:42.360 --> 51:45.360
反正一切就是为了安全

51:45.360 --> 51:46.360
好

51:46.360 --> 51:47.360
咱们看了一下啊

51:47.360 --> 51:48.360
然后呢

51:48.360 --> 51:49.360
接下来啊

51:49.360 --> 51:50.360
接下来最后一部分了

51:50.360 --> 51:51.360
就是咱们要兑现一下

51:51.360 --> 51:52.360
就是我们在一开始时候

51:52.360 --> 51:54.360
所说的一个啊

51:54.360 --> 51:55.360
承诺啊

51:55.360 --> 51:56.360
就是我们会在最后

51:56.360 --> 51:57.360
演示一下什么呢

51:57.360 --> 51:59.360
cookie在网络请求的时候呢

51:59.360 --> 52:02.360
他是会被带到福气那里

52:02.360 --> 52:03.360
来吧

52:03.360 --> 52:04.360
那这呢

52:04.360 --> 52:05.360
我就去写一个简单的

52:05.360 --> 52:07.360
一个请求的一个接口啊

52:07.360 --> 52:08.360
这么一个功能

52:08.360 --> 52:09.360
在页面当中呢

52:09.360 --> 52:10.360
给上一个八层

52:10.360 --> 52:15.080
八层给他一个id

52:15.080 --> 52:17.080
比如说b天啊

52:17.080 --> 52:19.080
这个呢是发送请求

52:19.080 --> 52:20.080
给上文字啊

52:20.080 --> 52:21.080
然后呢发送请求呢

52:21.080 --> 52:23.080
我们需要去用到这个ax

52:23.080 --> 52:24.080
就拿到之前咱们

52:24.080 --> 52:26.080
网络课里边所讲的

52:26.080 --> 52:27.080
我在这呢有

52:27.080 --> 52:28.080
已经把它拿过来了啊

52:28.080 --> 52:29.080
在src呢

52:29.080 --> 52:30.080
这有一个gs

52:30.080 --> 52:32.080
下边有一个ax.js

52:32.080 --> 52:33.080
这个文件呢

52:33.080 --> 52:35.080
就是之前网络课当中

52:35.080 --> 52:36.080
啊写的那个文件

52:36.080 --> 52:37.080
直接拿过来了啊

52:37.080 --> 52:38.080
咱们用一下好不好

52:38.080 --> 52:39.080
然后呢

52:39.080 --> 52:40.080
还有另外一个呢

52:40.080 --> 52:41.080
在这呢

52:41.080 --> 52:42.080
再要去说一下

52:42.080 --> 52:43.080
这个gs当中呢

52:43.080 --> 52:44.080
有一个date.js啊

52:44.080 --> 52:45.080
好

52:45.080 --> 52:46.080
你看啊

52:46.080 --> 52:47.080
我要发送一个请求

52:47.080 --> 52:48.080
是不是啊

52:48.080 --> 52:49.080
发一个请求

52:49.080 --> 52:50.080
那发个请求

52:50.080 --> 52:51.080
我要请求那个数据呢

52:51.080 --> 52:52.080
请求的是这个

52:52.080 --> 52:53.080
这个呢

52:53.080 --> 52:54.080
是我本地的一个文件啊

52:54.080 --> 52:55.080
这个文件当中呢

52:55.080 --> 52:57.080
存储的就是那些数据

52:57.080 --> 52:58.080
数据哪来的呢

52:58.080 --> 52:59.080
这个呢

52:59.080 --> 53:00.080
大家应该都知道

53:00.080 --> 53:02.080
我们有一个这个开放者平台

53:02.080 --> 53:03.080
然后里边呢

53:03.080 --> 53:04.080
有一个项目

53:04.080 --> 53:05.080
大家都做过

53:05.080 --> 53:06.080
是不是迭代的那个

53:06.080 --> 53:07.080
学生信息管理系统

53:07.080 --> 53:08.080
这个数据呢

53:08.080 --> 53:09.080
就是从那个

53:09.080 --> 53:10.080
获取所有信息

53:10.080 --> 53:11.080
那个接口当中呢

53:11.080 --> 53:12.080
我去复制了一下

53:12.080 --> 53:13.080
两条数据啊

53:13.080 --> 53:15.080
咱们有这个数据之后呢

53:15.080 --> 53:16.080
就能够去请求了

53:16.080 --> 53:17.080
好不好

53:17.080 --> 53:18.080
行啊

53:18.080 --> 53:19.080
那这个有了

53:19.080 --> 53:20.080
有了之后呢

53:20.080 --> 53:21.080
接下来我就在下边

53:21.080 --> 53:22.080
在下边呢

53:22.080 --> 53:23.080
我们生命的变量

53:23.080 --> 53:24.080
b天

53:24.080 --> 53:25.080
获取一下他

53:25.080 --> 53:26.080
document

53:26.080 --> 53:27.080
ok

53:29.080 --> 53:31.900
哎呀

53:31.900 --> 53:34.660
哎呀

53:34.660 --> 53:35.660
这个document

53:35.660 --> 53:36.660
大不出来了

53:36.660 --> 53:37.660
来

53:37.660 --> 53:39.660
cu ment

53:39.660 --> 53:40.660
document

53:40.660 --> 53:41.660
点

53:41.660 --> 53:42.660
query

53:42.660 --> 53:43.660
slide

53:43.660 --> 53:45.660
去取到这个b天

53:45.660 --> 53:46.660
警号b天

53:47.660 --> 53:48.660
取到之后呢

53:48.660 --> 53:49.660
给他的身上呢

53:49.660 --> 53:50.660
添加一个

53:50.660 --> 53:51.660
点击的事件

53:51.660 --> 53:52.660
是吧

53:52.660 --> 53:53.660
onclick

53:53.660 --> 53:54.660
ok啊

53:54.660 --> 53:55.660
在点击的时候呢

53:55.660 --> 53:57.660
我们去发送一个请求啊

53:57.660 --> 53:58.660
那这个请求呢

53:58.660 --> 53:59.660
如何去发送呢

53:59.660 --> 54:00.660
就是啊

54:00.660 --> 54:01.660
我们的ajax

54:01.660 --> 54:02.660
给咱们封装了

54:02.660 --> 54:04.660
是不是一个方法

54:04.660 --> 54:05.660
然后呢

54:05.660 --> 54:06.660
这个方法

54:06.660 --> 54:07.660
接受两个参数

54:07.660 --> 54:08.660
两个参数

54:08.660 --> 54:09.660
第一个呢

54:09.660 --> 54:10.660
就是url

54:10.660 --> 54:11.660
url呢

54:11.660 --> 54:12.660
是gs

54:12.660 --> 54:14.660
下边的data.json

54:15.660 --> 54:16.660
这个文件

54:16.660 --> 54:17.660
然后呢

54:17.660 --> 54:18.660
第二个方法呢

54:18.660 --> 54:20.660
就是成功之后的一个回掉函数

54:20.660 --> 54:21.660
这呢

54:21.660 --> 54:22.660
给上一个参数

54:22.660 --> 54:23.660
然后呢

54:23.660 --> 54:25.660
我们先来console一下这个data

54:25.660 --> 54:27.660
看一下他能否发送成功啊

54:28.660 --> 54:30.660
在这个页面啊

54:30.660 --> 54:31.660
有一个啊

54:31.660 --> 54:32.660
注意啊

54:32.660 --> 54:33.660
你看点击

54:33.660 --> 54:34.660
点击之后呢

54:34.660 --> 54:35.660
你看啊

54:35.660 --> 54:36.660
他请求已经回来了

54:36.660 --> 54:37.660
给我们打印出内容了

54:37.660 --> 54:38.660
查询成功

54:38.660 --> 54:39.660
那ok了

54:39.660 --> 54:40.660
我们的data呢

54:40.660 --> 54:41.660
其实在这啊

54:41.660 --> 54:42.660
这个呢

54:42.660 --> 54:43.660
无所谓啊

54:43.660 --> 54:44.660
咱主要是

54:44.660 --> 54:46.660
他的这个请求发送成功了

54:46.660 --> 54:47.660
发送成功之后呢

54:47.660 --> 54:48.660
那接下来

54:48.660 --> 54:49.660
我们

54:49.660 --> 54:51.660
就要看一下这个控制台了啊

54:51.660 --> 54:52.660
在这呢

54:52.660 --> 54:54.660
现在还没有当我再去点击

54:54.660 --> 54:55.660
有了啊

54:55.660 --> 54:56.660
你看啊

54:56.660 --> 54:57.660
点开点开

54:57.660 --> 54:58.660
这个呢

54:58.660 --> 54:59.660
就是咱们请求的一个文件

54:59.660 --> 55:00.660
是不是啊

55:00.660 --> 55:01.660
那在这个文件

55:01.660 --> 55:02.660
我们通过这个控制台

55:02.660 --> 55:04.660
往上边走一下

55:04.660 --> 55:05.660
控制台当中

55:05.660 --> 55:06.660
我们去查看什么的

55:06.660 --> 55:09.660
查看requestor headers

55:09.660 --> 55:10.660
这个呢

55:10.660 --> 55:11.660
是啥

55:11.660 --> 55:12.660
请求头

55:12.660 --> 55:13.660
那请求头

55:13.660 --> 55:14.660
这个里头呢

55:14.660 --> 55:15.660
咱们来看一下

55:15.660 --> 55:16.660
这一些参数

55:16.660 --> 55:17.660
是不是说请求头

55:17.660 --> 55:18.660
什么叫请求头

55:18.660 --> 55:19.660
是请求的时候呢

55:19.660 --> 55:20.660
这个东西呢

55:20.660 --> 55:21.660
从这边

55:21.660 --> 55:22.660
所有的这些参数

55:22.660 --> 55:23.660
那我们就来看

55:23.660 --> 55:25.660
这里头会发现一个叫什么呢

55:25.660 --> 55:26.660
叫cookie

55:26.660 --> 55:27.660
那这个cookie是什么呢

55:27.660 --> 55:28.660
其实就是当前

55:28.660 --> 55:29.660
我们的这个域

55:29.660 --> 55:31.660
下面的所有的这些cookie

55:31.660 --> 55:32.660
哎

55:32.660 --> 55:33.660
看到吧

55:33.660 --> 55:34.660
这里有这个字段

55:34.660 --> 55:35.660
就证明

55:35.660 --> 55:36.660
现在呢

55:36.660 --> 55:37.660
cookie呢

55:37.660 --> 55:39.660
他会随着我们的请求

55:39.660 --> 55:40.660
发到

55:40.660 --> 55:43.170
服务器那边

55:43.170 --> 55:44.170
那

55:44.170 --> 55:45.170
确定了吧

55:45.170 --> 55:46.170
cookie会每次

55:46.170 --> 55:47.170
请求的时候呢

55:47.170 --> 55:48.170
都会带过去

55:48.170 --> 55:49.170
你心里头

55:49.170 --> 55:50.170
一定要有数了啊

55:50.170 --> 55:51.170
然后呢

55:51.170 --> 55:52.170
不要乱去用这个cookie了

55:52.170 --> 55:53.170
好吧

55:53.170 --> 55:54.170
那行吧

55:54.170 --> 55:55.170
那到这呢

55:55.170 --> 55:56.170
就是关于这个cookie的

55:56.170 --> 55:57.170
这节课呢

55:57.170 --> 55:58.170
我们就说到这里

