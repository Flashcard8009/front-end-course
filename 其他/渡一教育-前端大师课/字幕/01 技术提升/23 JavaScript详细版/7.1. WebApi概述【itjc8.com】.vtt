WEBVTT

00:00.000 --> 00:16.890
从这一章开始,咱们就进入浏览器的学习了

00:16.890 --> 00:22.890
我们前边这六章是学习的acoma scripts标准

00:22.890 --> 00:29.890
学习的是acoma scripts标准

00:29.890 --> 00:34.890
这里面它包含的这些语法规则,它是通用的

00:34.890 --> 00:37.890
它不仅可以在浏览器环境里边使用

00:37.890 --> 00:39.890
也可以在其他的环境里边使用

00:39.890 --> 00:42.890
比方说以后我们学习到手机端

00:42.890 --> 00:45.890
或者是学习到服务器环境

00:45.890 --> 00:47.890
或者是学习到桌面应用程序

00:47.890 --> 00:49.890
都可以使用这些标准

00:49.890 --> 00:52.890
前面六章实际上是非常非常重要的

00:52.890 --> 00:53.890
它是通用的

00:53.890 --> 00:55.890
我们之前说过GS

00:55.890 --> 00:59.890
现在严格来说应该叫做ES

00:59.890 --> 01:02.890
这个语言它是一个通用语言

01:02.890 --> 01:03.890
一个前端通用语言

01:04.890 --> 01:07.890
它可以在将来可能会在任何设备上

01:07.890 --> 01:09.890
都能使用这套语言

01:09.890 --> 01:11.890
那么我们前面六章学习完了之后

01:11.890 --> 01:14.890
我们的语法规则就不会再有新的了

01:14.890 --> 01:17.890
我想想,应该不会再有新的了

01:17.890 --> 01:18.890
除非我没有想到

01:18.890 --> 01:19.890
我想漏了,没关系

01:19.890 --> 01:21.890
反正我是视频教程,讲漏了的话

01:21.890 --> 01:23.890
我可以把补充进去

01:23.890 --> 01:25.890
那么后边我们学习啥呢

01:25.890 --> 01:28.890
主要是学习浏览器环境

01:28.890 --> 01:31.890
实际上前面六章

01:31.890 --> 01:34.890
有没有把语法规则讲完了

01:34.890 --> 01:35.890
语法规则是讲完了

01:35.890 --> 01:37.890
但是有一些细节

01:37.890 --> 01:39.890
底层的原理部分还没有讲

01:39.890 --> 01:41.890
这个拿到了我们

01:41.890 --> 01:43.890
后边把浏览器讲完了之后

01:43.890 --> 01:45.890
后边我们来进行补充

01:45.890 --> 01:48.890
因为进阶部分它的学习起来比较枯燥

01:48.890 --> 01:50.890
而且时间比较长

01:50.890 --> 01:52.890
所以说我们先把最核心的讲完

01:52.890 --> 01:54.890
把语法规则核心讲完

01:54.890 --> 01:56.890
然后我们直接学习浏览器环境

01:56.890 --> 01:58.890
然后就可以做一些效果出来了

01:59.890 --> 02:00.890
那么从这一张开始

02:00.890 --> 02:02.890
咱们就开始进入浏览器速度

02:02.890 --> 02:04.890
环境里边的知识来进行学习

02:04.890 --> 02:06.890
浏览器速度环境里边

02:06.890 --> 02:08.890
它跟我们的

02:08.890 --> 02:11.890
也是标准语言里边的东西呢

02:11.890 --> 02:13.890
差不多

02:13.890 --> 02:15.890
我们上一张学习的是标准库

02:15.890 --> 02:17.890
标准库是什么

02:17.890 --> 02:18.890
标准库是

02:18.890 --> 02:20.890
Echema

02:20.890 --> 02:22.890
Scripps官方

02:22.890 --> 02:24.890
它给你发布的一个标准

02:24.890 --> 02:25.890
就是这个语言里边

02:25.890 --> 02:27.890
应该有哪一些常用的

02:27.890 --> 02:29.890
对象和函数

02:29.890 --> 02:31.890
EchemaScripps中的

02:31.890 --> 02:33.890
对象和函数

02:33.890 --> 02:35.890
当然包括构造函数

02:35.890 --> 02:36.890
对吧

02:36.890 --> 02:38.890
构造函数里边又有静态方法

02:38.890 --> 02:39.890
又有实力方法

02:39.890 --> 02:40.890
又有静态属性

02:40.890 --> 02:41.890
也有实力属性

02:41.890 --> 02:43.890
这些都是标准库里边给你提供的

02:43.890 --> 02:44.890
也就是说以后呢

02:44.890 --> 02:46.890
遇到任何环境都可以用

02:46.890 --> 02:47.890
那么我们接下来几张呢

02:47.890 --> 02:48.890
学习的是

02:48.890 --> 02:50.890
浏览器速度环境

02:50.890 --> 02:53.890
浏览器速度环境

02:53.890 --> 02:55.890
就是浏览器速度环境里边

02:55.890 --> 02:57.890
它也会给你提供一些对象

02:57.890 --> 02:59.890
也会给你提供一些函数

02:59.890 --> 03:00.890
来供你使用

03:00.890 --> 03:02.890
我们这几张呢

03:02.890 --> 03:04.890
学习的就是浏览器速度环境

03:04.890 --> 03:06.890
看一下它给你提供了哪些对象

03:06.890 --> 03:08.890
它给你提供了哪些函数

03:08.890 --> 03:09.890
明白这个意思吧

03:09.890 --> 03:11.890
好,我们把这个浏览器

03:11.890 --> 03:12.890
速度环境呢

03:12.890 --> 03:14.890
也叫做web API

03:14.890 --> 03:16.890
也叫做web API

03:16.890 --> 03:17.890
API什么意思

03:17.890 --> 03:18.890
我解释过的

03:18.890 --> 03:20.890
叫做运用程序

03:20.890 --> 03:22.890
编程接口

03:22.890 --> 03:23.890
就是它给你提供了一些东西

03:23.890 --> 03:24.890
你怎么去使用它

03:24.890 --> 03:26.890
它里边包含了哪些知识

03:26.890 --> 03:27.890
这就是API

03:27.890 --> 03:28.890
web是什么

03:28.890 --> 03:30.890
web就是互联网

03:30.890 --> 03:32.890
我们把浏览器速度环境里边

03:32.890 --> 03:36.890
给你提供的对象和函数

03:36.890 --> 03:38.890
把统称为web API

03:38.890 --> 03:42.890
就是浏览器速度环境中的

03:42.890 --> 03:44.890
对象和函数

03:44.890 --> 03:46.890
所以这一节课

03:46.890 --> 03:47.890
咱们这一节课呢

03:47.890 --> 03:48.890
我们先来简单的介绍一下

03:48.890 --> 03:50.890
关于这个web API

03:50.890 --> 03:51.890
有的人可能会觉得

03:51.890 --> 03:54.890
我们这一块web API的学习

03:54.890 --> 03:57.890
它是不是跟我们标准库一样

03:57.890 --> 03:58.890
一个对象

03:58.890 --> 03:59.890
看一个对象怎么使用

03:59.890 --> 04:00.890
里边有哪些函数

04:00.890 --> 04:01.890
差不多

04:01.890 --> 04:04.890
但是又有点区别

04:04.890 --> 04:06.890
因为这个web API

04:06.890 --> 04:09.890
它一个特点就是

04:09.890 --> 04:11.890
知识重度

04:11.890 --> 04:12.890
知识繁杂

04:12.890 --> 04:13.890
非常非常多

04:13.890 --> 04:15.890
应该这样子说吧

04:15.890 --> 04:16.890
粗略估计

04:16.890 --> 04:18.890
我粗略估计了一下

04:18.890 --> 04:20.890
web API里边给你提供的

04:20.890 --> 04:21.890
函数

04:21.890 --> 04:22.890
对象

04:22.890 --> 04:24.890
这些调用的这些东西

04:24.890 --> 04:26.890
要比标准库的

04:26.890 --> 04:27.890
可能要多个多少呢

04:27.890 --> 04:29.890
可能是标准库的10倍

04:29.890 --> 04:31.890
知识非常非常多

04:31.890 --> 04:32.890
那我们需不需要

04:32.890 --> 04:33.890
把这些知识讲完呢

04:33.890 --> 04:34.890
不需要

04:34.890 --> 04:35.890
不需要

04:35.890 --> 04:37.890
我可以这样给大家说吧

04:37.890 --> 04:39.890
我接触介石

04:39.890 --> 04:41.890
10年了吧

04:41.890 --> 04:42.890
我到目前为止

04:42.890 --> 04:44.890
都没有把介石里边的所有

04:44.890 --> 04:47.890
接口全部接触完

04:47.890 --> 04:48.890
太多了

04:48.890 --> 04:49.890
真的是太多了

04:49.890 --> 04:51.890
而且有些接口

04:51.890 --> 04:53.890
它平时真的非常少用到

04:53.890 --> 04:55.890
几乎是不用的

04:55.890 --> 04:56.890
我们没有必要把

04:56.890 --> 04:58.890
每一个接口给你

04:58.890 --> 04:59.890
详细的讲出来

04:59.890 --> 05:00.890
没有必要

05:00.890 --> 05:01.890
因为这样子讲

05:01.890 --> 05:03.890
一是你觉得学习枯燥

05:03.890 --> 05:05.890
二你觉得就是这样子

05:05.890 --> 05:07.890
你会花费很多很多的时间

05:07.890 --> 05:09.890
那就不是一两个月

05:09.890 --> 05:10.890
能搞定的事情了

05:10.890 --> 05:11.890
大家按年算了

05:11.890 --> 05:13.890
可能你要学几年

05:13.890 --> 05:14.890
你才能够把

05:14.890 --> 05:15.890
这里面的接口

05:15.890 --> 05:16.890
全部学习完

05:16.890 --> 05:17.890
我肯定能讲完

05:17.890 --> 05:19.890
我按照官方标准来讲

05:19.890 --> 05:20.890
他怎么说我就怎么讲

05:20.890 --> 05:21.890
我把它梳理一下

05:21.890 --> 05:23.890
没有翻译成中文的

05:23.890 --> 05:24.890
把它翻译一下

05:24.890 --> 05:25.890
那就给它讲出来了

05:25.890 --> 05:26.890
但是这样子讲

05:26.890 --> 05:27.890
其实并不好

05:27.890 --> 05:29.890
我们就讲它最核心的

05:29.890 --> 05:31.890
平时我们要经常用到的

05:31.890 --> 05:32.890
那万一你们以后

05:32.890 --> 05:34.890
在工作中遇到了

05:34.890 --> 05:36.890
我没有讲到的API怎么办

05:36.890 --> 05:37.890
查

05:37.890 --> 05:38.890
我后面会告诉你

05:38.890 --> 05:39.890
大家如何去查

05:39.890 --> 05:40.890
所以说

05:40.890 --> 05:41.890
我们没有必要把它讲完

05:41.890 --> 05:43.890
就讲最核心的知识就行了

05:43.890 --> 05:45.890
这是它第一个特点

05:45.890 --> 05:46.890
而且第二个特点

05:46.890 --> 05:51.260
它是成体系的知识

05:51.260 --> 05:52.260
就说这一块知识

05:52.260 --> 05:55.260
我们还不能按照标准库那一块

05:55.260 --> 05:56.260
第一个对象

05:56.260 --> 05:57.260
它里面有哪些函数

05:57.260 --> 05:59.260
第二个对象有哪些函数

05:59.260 --> 06:00.260
还不能按照这样来讲

06:00.260 --> 06:02.260
因为它里面的知识是成体系的

06:02.260 --> 06:04.260
就有点类似于啥呢

06:04.260 --> 06:06.260
类似于DAT

06:06.260 --> 06:08.260
DAT构造器

06:08.260 --> 06:10.260
我们当时讲DAT的时候

06:10.260 --> 06:11.260
是不是讲了一些知识

06:11.260 --> 06:12.260
对吧

06:12.260 --> 06:13.260
你要学习DAT对象

06:13.260 --> 06:15.260
你是不是得学习啥

06:15.260 --> 06:18.260
你得学习UTC

06:18.260 --> 06:20.260
什么叫格林维治

06:20.260 --> 06:21.260
标准史

06:21.260 --> 06:23.260
什么叫时趋

06:23.260 --> 06:24.260
什么叫时间戳

06:24.260 --> 06:26.260
这些基础知识你得学习

06:26.260 --> 06:27.260
学习了之后

06:27.260 --> 06:29.260
你才能理解对象

06:29.260 --> 06:30.260
就好比说

06:30.260 --> 06:31.260
郑哲表拉斯这一块

06:31.260 --> 06:32.260
你首先得理解

06:32.260 --> 06:34.260
郑哲表拉斯的规则是什么

06:34.260 --> 06:36.260
那理解了规则之后

06:36.260 --> 06:37.260
你再来说

06:37.260 --> 06:39.260
郑哲表拉斯在介石里面

06:39.260 --> 06:40.260
有什么样的对象

06:40.260 --> 06:42.260
对象里面有什么样的函数

06:42.260 --> 06:43.260
明白这个意思吧

06:43.260 --> 06:45.260
你得学习一些基础知识

06:45.260 --> 06:47.260
那么我们这里的webappin

06:47.260 --> 06:48.260
也是这样子

06:48.260 --> 06:50.260
它里面的知识是成体系的

06:50.260 --> 06:52.260
就是说你要学习这些对象

06:52.260 --> 06:54.260
你必须要掌握一些逻辑

06:54.260 --> 06:56.260
就是逻辑上的知识

06:56.260 --> 06:58.260
一些不知道的概念你得掌握

06:58.260 --> 06:59.260
有了这些概念之后

06:59.260 --> 07:01.260
你才能去学习这些知识

07:01.260 --> 07:02.260
那么这些概念是

07:02.260 --> 07:04.260
穿插到我们具体的对象里面

07:04.260 --> 07:05.260
都学习的

07:05.260 --> 07:06.260
就是我们学习

07:06.260 --> 07:07.260
它给你提供了对象

07:07.260 --> 07:08.260
那么我们会穿插

07:08.260 --> 07:09.260
这些概念进行学习

07:09.260 --> 07:11.260
说这里的知识是成体系的

07:11.260 --> 07:13.260
因此我们讲webappin

07:13.260 --> 07:15.260
重点是讲的是

07:15.260 --> 07:17.260
它成体系的知识

07:17.260 --> 07:19.260
而不是

07:19.260 --> 07:20.260
重点不是说

07:20.260 --> 07:21.260
一个对象里面有哪些方法

07:21.260 --> 07:22.260
哪些方法可以使用

07:22.260 --> 07:23.260
这些还不是重点

07:23.260 --> 07:25.260
重点是讲它成体系的知识

07:25.260 --> 07:27.260
讲它这些概念

07:27.260 --> 07:28.260
你理解到这些概念之后

07:28.260 --> 07:30.260
哪怕你忘了

07:30.260 --> 07:32.260
它里面的函数名字叫啥

07:32.260 --> 07:34.260
那个函数的有哪些参数

07:34.260 --> 07:36.260
这些都是小事

07:36.260 --> 07:37.260
都是杂

07:37.260 --> 07:39.260
你一查

07:39.260 --> 07:41.260
我给大家的笔记

07:41.260 --> 07:42.260
或者一查

07:42.260 --> 07:43.260
MDN文档

07:43.260 --> 07:45.260
或者是百度一下

07:45.260 --> 07:46.260
你都能获得

07:46.260 --> 07:47.260
这些是小问题

07:47.260 --> 07:48.260
但是你一定要理解

07:48.260 --> 07:50.260
它成体系的知识

07:50.260 --> 07:51.260
因此我们重心在这

07:51.260 --> 07:52.260
重心在这

07:52.260 --> 07:56.260
另外webappin的学习过程中

07:56.260 --> 07:59.260
涉及到程序思维

07:59.260 --> 08:01.260
不知道大家有没有听过

08:01.260 --> 08:03.260
都医的公开直播课

08:03.260 --> 08:04.260
没有听的话

08:04.260 --> 08:07.260
我建议大家关注一下

08:07.260 --> 08:09.260
独医的公开直播课

08:09.260 --> 08:11.260
每一次的公开直播课里面

08:11.260 --> 08:13.260
我们都会去讲一些效果

08:13.260 --> 08:15.260
各种各样丰富的效果

08:15.260 --> 08:16.260
在流量期中

08:16.260 --> 08:18.260
制作一些丰富的效果

08:18.260 --> 08:20.260
用的知识就是这么一些知识

08:20.260 --> 08:22.260
就是我这门课

08:22.260 --> 08:24.260
所讲的这些知识

08:24.260 --> 08:25.260
那么这些知识

08:25.260 --> 08:27.260
你怎么去把它应用出来

08:27.260 --> 08:28.260
就是我讲了那么多

08:28.260 --> 08:29.260
你怎么把它做成效果

08:29.260 --> 08:31.260
这是每一个

08:31.260 --> 08:33.260
开发的初学者

08:33.260 --> 08:35.260
最困难的事情

08:35.260 --> 08:37.260
很多人都反映

08:37.260 --> 08:38.260
应该你学了前面几张

08:38.260 --> 08:39.260
应该都有这种感觉

08:39.260 --> 08:40.260
对吧

08:40.260 --> 08:41.260
我听都能听懂

08:41.260 --> 08:43.260
但是我自己就是写不出来

08:43.260 --> 08:44.260
怎么办

08:44.260 --> 08:45.260
没办法

08:45.260 --> 08:46.260
没有接近

08:46.260 --> 08:47.260
唸唸

08:47.260 --> 08:49.260
没有任何办法

08:49.260 --> 08:51.260
这一课到了webappin这里

08:51.260 --> 08:52.260
要做在流量期

08:52.260 --> 08:54.260
实现各种各样丰富的效果

08:54.260 --> 08:55.260
我告诉大家

08:55.260 --> 08:57.260
我这一课讲完了

08:57.260 --> 08:58.260
就这门课

08:58.260 --> 09:00.260
流量期webappin这一课讲完了

09:00.260 --> 09:01.260
不是这一张

09:01.260 --> 09:03.260
这一张要分成几个章节

09:03.260 --> 09:06.260
这流量期appin这一课讲完了之后

09:06.260 --> 09:08.260
基本上页面上的所有效果

09:08.260 --> 09:10.260
几乎说所有效果

09:10.260 --> 09:12.260
都能实现了

09:12.260 --> 09:14.260
但是可能还有一些CSS3的知识

09:14.260 --> 09:15.260
CSS3的知识

09:15.260 --> 09:17.260
还有专门的课

09:17.260 --> 09:19.260
后面还有专门的课

09:19.260 --> 09:20.260
但是绝大部分

09:20.260 --> 09:21.260
哪怕没有CSS3

09:21.260 --> 09:23.260
绝大部分的效果

09:23.260 --> 09:25.260
都能实现了

09:25.260 --> 09:27.260
那么我们怎么用这些知识去实现

09:27.260 --> 09:29.260
这是大家前期的

09:29.260 --> 09:31.260
比较弱的环节

09:31.260 --> 09:32.260
那怎么办

09:32.260 --> 09:33.260
练习我的作业

09:33.260 --> 09:34.260
多看我的作业讲解

09:34.260 --> 09:36.260
多看我们的公开直播课

09:36.260 --> 09:38.260
来锻炼这样的程序思维

09:38.260 --> 09:40.260
什么叫程序思维

09:40.260 --> 09:42.260
就是把你的知识

09:42.260 --> 09:43.260
转换成应用

09:43.260 --> 09:44.260
中间缺一个环节

09:44.260 --> 09:46.260
这个环节就是程序思维

09:46.260 --> 09:48.260
就是知识

09:48.260 --> 09:50.260
加上程序思维

09:50.260 --> 09:51.260
等于应用

09:51.260 --> 09:53.260
就整整把应用做出来

09:53.260 --> 09:55.260
知识我一定会给大家讲到

09:55.260 --> 09:57.260
程序思维我会不断的灌输

09:57.260 --> 09:59.260
但是程序思维是学不到的

09:59.260 --> 10:01.260
它只能靠练出来

10:01.260 --> 10:03.260
你学不到

10:03.260 --> 10:04.260
只能靠练

10:04.260 --> 10:06.260
因此我会给大家准备很多的案例

10:06.260 --> 10:08.260
时间合适的时候

10:08.260 --> 10:09.260
我一定会准备很多的案例

10:09.260 --> 10:11.260
然后并且要进行讲解

10:11.260 --> 10:12.260
来灌输这样的程序思维

10:12.260 --> 10:14.260
同时要配合大家练习

10:14.260 --> 10:16.260
慢慢的把这样的程序思维

10:16.260 --> 10:17.260
锻炼起来

10:17.260 --> 10:19.260
这是第三个 第三个特点

10:19.260 --> 10:21.260
第四个我要说一下

10:21.260 --> 10:23.260
就是关于兼容性

10:23.260 --> 10:25.260
就是咱们讲这一个环节的时候

10:25.260 --> 10:27.260
web API

10:27.260 --> 10:29.260
讲浏览器环境的时候

10:29.260 --> 10:32.260
会遇到很多很多的兼容性问题

10:32.260 --> 10:34.260
这些兼容性问题是什么意思呢

10:34.260 --> 10:36.260
就是在不同的浏览器里边

10:36.260 --> 10:38.260
或者是同一个浏览器的

10:38.260 --> 10:40.260
不同版本里边

10:40.260 --> 10:42.260
你会发现

10:42.260 --> 10:44.260
有些方法在这个版本里边也能用

10:44.260 --> 10:46.260
有些方法另外一个版本能用

10:46.260 --> 10:48.260
就会发现这么一个现象

10:48.260 --> 10:50.260
就很烦很烦 超级烦

10:50.260 --> 10:52.260
其实现在大家还好一点

10:52.260 --> 10:54.260
我想到我以前工作的时候

10:54.260 --> 10:57.260
刚毕业的时候 在10年左右

10:58.260 --> 11:00.260
那个时候

11:00.260 --> 11:02.260
写程序基本上要花一半的时间

11:02.260 --> 11:04.260
来解决兼容性问题

11:04.260 --> 11:06.260
可能还不止

11:06.260 --> 11:08.260
就写全端程序

11:08.260 --> 11:10.260
当然那个时候我是做后端的

11:10.260 --> 11:12.260
我能理解前端的痛苦

11:12.260 --> 11:14.260
那么到了现在的话

11:14.260 --> 11:16.260
前端就是

11:16.260 --> 11:18.260
兼容性问题已经好了很多很多了

11:18.260 --> 11:20.260
但是有没有 仍然有

11:20.260 --> 11:22.260
有很多的历史遗留问题

11:22.260 --> 11:25.260
那么就会导致这些兼容性很烦的问题

11:25.260 --> 11:27.260
那么我们学的时候怎么来

11:27.260 --> 11:29.260
看待这个问题呢

11:29.260 --> 11:31.260
就是了解

11:31.260 --> 11:33.260
了解

11:33.260 --> 11:35.260
不记忆

11:35.260 --> 11:37.260
了解就行了

11:37.260 --> 11:39.260
了解是比方这个函数

11:39.260 --> 11:41.260
我说到了时候我会告诉你

11:41.260 --> 11:43.260
这个函数它有些兼容性问题

11:43.260 --> 11:45.260
在什么流量器里面能用

11:45.260 --> 11:46.260
什么流量器不能用

11:46.260 --> 11:47.260
那怎么来处理

11:47.260 --> 11:48.260
了解一下就行了

11:48.260 --> 11:50.260
不要去做强制性的记忆

11:50.260 --> 11:52.260
没有什么意义

11:52.260 --> 11:54.260
因为你们以后

11:54.260 --> 11:56.260
真正的开发过程中

11:56.260 --> 11:58.260
不太会使用

11:58.260 --> 12:00.260
原声的解释来进行开发

12:00.260 --> 12:02.260
什么叫原声解释

12:02.260 --> 12:04.260
原声解释

12:04.260 --> 12:06.260
这个这样写的

12:06.260 --> 12:07.260
原声解释

12:07.260 --> 12:09.260
就是用纯解释语言

12:09.260 --> 12:11.260
就是我们学习的这门课

12:11.260 --> 12:12.260
语言来书写代码

12:12.260 --> 12:13.260
不太会用

12:13.260 --> 12:15.260
因为后边我们会学习一些框架

12:15.260 --> 12:17.260
一些别人给你提供的

12:17.260 --> 12:19.260
第三方库

12:19.260 --> 12:20.260
解释库

12:20.260 --> 12:22.260
比方说我们后面会学习的是

12:23.260 --> 12:25.260
应该有很多人也听说过

12:25.260 --> 12:28.260
那么他这个就是第三方的一个库

12:28.260 --> 12:30.260
他给你写好了很多的函数了

12:30.260 --> 12:32.260
这些函数已经把兼容性问题

12:32.260 --> 12:33.260
给你搞定了

12:33.260 --> 12:35.260
你直接去用就行了

12:35.260 --> 12:37.260
已经我们后边学习了很多框架

12:37.260 --> 12:40.260
或者是脚手架等等

12:40.260 --> 12:43.260
它这些东西都会帮助你解决

12:43.260 --> 12:45.260
兼容性问题

12:45.260 --> 12:47.260
都会帮助你解决

12:47.260 --> 12:48.260
所以说我们没

12:48.260 --> 12:51.260
又必要为了兼容性花太多的时间

12:51.260 --> 12:52.260
花太多的时间

12:52.260 --> 12:55.260
因为我们这一部分最重要的是

12:55.260 --> 12:58.260
学习它里面成体系的知识

12:58.260 --> 13:00.260
第二学习它的程序思维

13:00.260 --> 13:02.260
应该说这个东西是最重要的

13:02.260 --> 13:05.260
所以说我们只要知道怎么来写代码

13:05.260 --> 13:08.260
哪怕你写出来代码不兼容都无所谓

13:08.260 --> 13:10.260
因为后边有一些框架

13:10.260 --> 13:13.260
有一些库可以帮你解决这些问题

13:13.260 --> 13:15.260
可能你在面试之前

13:15.260 --> 13:16.260
你要稍微复习一下

13:16.260 --> 13:18.260
关于兼容性的知识可能会面试到

13:18.260 --> 13:21.260
但是对你开发具体的做开发

13:21.260 --> 13:22.260
没有什么影响

13:22.260 --> 13:23.260
几乎是没有影响

13:23.260 --> 13:27.260
因此兼容性这一块了解不记忆

13:27.260 --> 13:28.260
你看这里是吧

13:28.260 --> 13:30.260
也说我们在讲的时候

13:30.260 --> 13:32.260
也会稍微的弱化兼容性

13:32.260 --> 13:35.260
不然的话要讲兼容性这一块太多了

13:35.260 --> 13:37.260
超级超级多

13:37.260 --> 13:40.260
所以说这一块给大家先说明一下

13:40.260 --> 13:43.260
这是关于web API里边的这些特点

13:43.260 --> 13:45.260
然后下边

13:45.260 --> 13:49.260
咱们的web API是一套的对象和函数

13:49.260 --> 13:52.260
这里边它分为两个部分

13:52.260 --> 13:55.260
web API它也分为两个部分

13:55.260 --> 13:57.260
因为它太多了

13:57.260 --> 13:59.260
以前只有一个部分

13:59.260 --> 14:01.260
我们把它叫做BOOM

14:01.260 --> 14:02.260
BOOM是什么意思呢

14:02.260 --> 14:03.260
有点像炸弹对吧

14:03.260 --> 14:04.260
BOOM对吧

14:04.260 --> 14:06.260
炸弹是这样的写的

14:06.260 --> 14:08.260
炸弹爆炸的声音

14:08.260 --> 14:09.260
BOOM

14:09.260 --> 14:10.260
BOOM是什么意思呢

14:10.260 --> 14:13.260
叫browser

14:13.260 --> 14:15.260
浏览器

14:15.260 --> 14:18.260
对象model

14:18.260 --> 14:22.260
叫做浏览器对象模型

14:22.260 --> 14:24.260
以前在最早的时候

14:24.260 --> 14:25.260
只有这么一块东西

14:25.260 --> 14:27.260
所以说它当时没有叫做BOOM

14:27.260 --> 14:29.260
它就叫做web API

14:29.260 --> 14:32.260
然后后来发现浏览器对象模型里边

14:32.260 --> 14:34.260
它还出现了一大块的知识

14:34.260 --> 14:35.260
超级大的一块知识

14:35.260 --> 14:38.260
于是它也把它分离出去了

14:38.260 --> 14:39.260
把它分离出去了

14:39.260 --> 14:42.260
成为另外一套模型

14:42.260 --> 14:45.260
叫做documents

14:45.260 --> 14:47.260
objects

14:47.260 --> 14:48.260
model

14:48.260 --> 14:51.260
叫做文档对象模型

14:51.260 --> 14:52.260
好

14:52.260 --> 14:53.260
我再解释一下

14:53.260 --> 14:55.260
这两个东西分别是什么玩意儿

14:55.260 --> 14:56.260
一个是BOOM

14:56.260 --> 14:57.260
BOOM里面

14:57.260 --> 14:59.260
它给你提供的很多的对象

14:59.260 --> 15:01.260
很多的API

15:01.260 --> 15:03.260
它来做什么事情呢

15:03.260 --> 15:06.260
它是用于控制浏览器本身的

15:06.260 --> 15:08.260
控制浏览器本身

15:08.260 --> 15:09.260
比方说

15:09.260 --> 15:11.260
我要得到当前的

15:11.260 --> 15:13.260
网易的地址

15:13.260 --> 15:14.260
比方说

15:16.260 --> 15:17.260
看一下

15:17.260 --> 15:18.260
如果我要得到这个地址

15:18.260 --> 15:20.260
你看这是不是浏览器的东西

15:20.260 --> 15:21.260
浏览器的东西

15:21.260 --> 15:22.260
所以说

15:22.260 --> 15:24.260
那么这个要使用BOOM里面的API

15:24.260 --> 15:26.260
比方说我们之前用ERRAT

15:26.260 --> 15:27.260
对吧

15:27.260 --> 15:28.260
我们还用ERRAT

15:28.260 --> 15:29.260
对吧

15:29.260 --> 15:30.260
弹出一个东西

15:30.260 --> 15:31.260
这也是BOOM里面的

15:31.260 --> 15:34.260
比方说我们要弹出一个新窗口

15:34.260 --> 15:36.260
像广告那样弹出一个窗口

15:36.260 --> 15:38.260
或者是打开一个新的页面

15:38.260 --> 15:41.260
这些都是属于操控浏览器的行为

15:41.260 --> 15:43.260
比方说我要得到浏览器

15:43.260 --> 15:45.260
浏览器这个窗口的尺寸

15:45.260 --> 15:46.260
窗口的位置

15:46.260 --> 15:48.260
这些都是属于跟浏览器

15:48.260 --> 15:50.260
本身相关的行为

15:50.260 --> 15:52.260
来控制浏览器的

15:52.260 --> 15:54.260
那么都属于BOOM的翻筹

15:54.260 --> 15:55.260
好吧

15:55.260 --> 15:56.260
这是关于这一会

15:56.260 --> 15:58.260
那么什么是DOOM呢

15:58.260 --> 16:00.260
所以这是缩写

16:00.260 --> 16:01.260
所以说都要大写

16:01.260 --> 16:02.260
DOOM呢

16:02.260 --> 16:03.260
它指的是

16:03.260 --> 16:04.260
文档

16:04.260 --> 16:06.260
就是能控制

16:07.260 --> 16:08.260
应该说

16:08.260 --> 16:10.260
ATM文档

16:10.260 --> 16:12.260
控制的是ATM文档

16:12.260 --> 16:14.260
就是我们的网页里边的元素

16:14.260 --> 16:15.260
就这些东西

16:15.260 --> 16:16.260
我这样子看

16:16.260 --> 16:17.260
不太好

16:17.260 --> 16:18.260
这样子看

16:18.260 --> 16:20.260
这里边不是有很多元素吗

16:20.260 --> 16:21.260
控制这些元素

16:21.260 --> 16:23.260
甚至控制这些注释

16:23.260 --> 16:24.260
甚至控制这个玩意

16:24.260 --> 16:25.260
啥都可以控制

16:25.260 --> 16:27.260
就控制整个ATM文档

16:27.260 --> 16:29.260
它是控制页面里边的东西

16:29.260 --> 16:30.260
浏览器呢

16:30.260 --> 16:32.260
是控制整个浏览器

16:32.260 --> 16:33.260
这个软件

16:33.260 --> 16:34.260
这个应用程序的能力

16:34.260 --> 16:35.260
DOOM呢

16:35.260 --> 16:37.260
是控制整个ATM文档的能力

16:37.260 --> 16:38.260
那你说

16:38.260 --> 16:39.260
我们主要学习的是哪一块

16:39.260 --> 16:41.260
你觉得我们主要学习的是哪一块

16:41.260 --> 16:43.260
是不是主要学习的一定是DOOM

16:43.260 --> 16:45.260
控制的是页面中的东西

16:45.260 --> 16:46.260
控制这个元素

16:46.260 --> 16:48.260
以后要产生一个新的元素

16:48.260 --> 16:50.260
以后要改变一个元素的样式

16:50.260 --> 16:53.260
以后把这个元素移动到另外一个元素里边

16:53.260 --> 16:55.260
我们主要是学习了这么一些东西

16:55.260 --> 16:56.260
控制的是ATM文档

16:56.260 --> 16:58.260
因此我们重点是学习了DOOM

16:58.260 --> 16:59.260
讲的顺序呢

16:59.260 --> 17:00.260
你看我们这一张

17:00.260 --> 17:01.260
DOOM核心

17:01.260 --> 17:02.260
讲的顺序

17:02.260 --> 17:03.260
讲的顺序

17:03.260 --> 17:05.260
也讲的是DOOM

17:05.260 --> 17:06.260
我刚开始不是说

17:06.260 --> 17:07.260
应该大写吧

17:07.260 --> 17:09.260
应该大写

17:14.260 --> 17:16.260
我这里不解释了

17:16.260 --> 17:17.260
我之前小学了

17:17.260 --> 17:18.260
现在要改成大型的

17:18.260 --> 17:19.260
不太容易

17:19.260 --> 17:20.260
当然可以改不太容易

17:20.260 --> 17:21.260
算了 我就这样吧

17:21.260 --> 17:22.260
就这样吧

17:22.260 --> 17:24.260
因为我用了geek的

17:24.260 --> 17:26.260
你以后会学习

17:26.260 --> 17:29.260
geek它不区分大小型

17:29.260 --> 17:31.260
我们重点是学习DOOM

17:31.260 --> 17:34.260
DOOM这一块的学习东西太多了

17:34.260 --> 17:36.260
极多 多得吓死人

17:36.260 --> 17:39.260
我们检查最重要的最核心的学习

17:39.260 --> 17:40.260
我们这一张

17:40.260 --> 17:42.260
学习DOOM的最核心部分

17:42.260 --> 17:43.260
然后下一张再下一张

17:43.260 --> 17:45.260
可能都会接着讲DOOM

17:45.260 --> 17:47.260
都会接着讲

17:47.260 --> 17:48.260
这是关于DOOM

17:48.260 --> 17:50.260
我们学习了这一块

17:50.260 --> 17:52.260
然后这一套东西

17:52.260 --> 17:55.260
到底是谁规定的呢

17:55.260 --> 17:57.260
市面上有这么多浏览器

17:57.260 --> 17:58.260
有什么谷歌的浏览器

17:58.260 --> 18:00.260
安逸浏览器 火火的浏览器

18:00.260 --> 18:03.260
当然QQ360那些就不说了

18:03.260 --> 18:04.260
这就不说了

18:04.260 --> 18:06.260
因为它没有自己的内核

18:06.260 --> 18:08.260
IE 火火谷 谷歌

18:08.260 --> 18:10.260
还有什么就是Safari

18:10.260 --> 18:12.260
Safari Opera

18:12.260 --> 18:13.260
像这些都是主流的

18:13.260 --> 18:15.260
有自己内核的浏览器

18:15.260 --> 18:17.260
那么这些有这么多浏览器

18:17.260 --> 18:18.260
不同的浏览器呢

18:18.260 --> 18:20.260
它可能又有差异

18:20.260 --> 18:22.260
那么就需要一个标准组织

18:22.260 --> 18:24.260
来规定他们的语言标

18:24.260 --> 18:25.260
就是接口标准

18:25.260 --> 18:27.260
我到底给你提供哪些对象

18:27.260 --> 18:28.260
对象的名字叫啥

18:28.260 --> 18:29.260
里边有哪些方法

18:29.260 --> 18:31.260
有哪些属性

18:31.260 --> 18:32.260
那么这些方法和属性

18:32.260 --> 18:33.260
它的名字是啥

18:33.260 --> 18:34.260
又有什么样的含义

18:34.260 --> 18:35.260
方法有哪些参数

18:35.260 --> 18:37.260
就都需要进行约定

18:37.260 --> 18:38.260
这样子才能保证

18:38.260 --> 18:40.260
在不同一套程序

18:40.260 --> 18:41.260
在不同的浏览器里面

18:41.260 --> 18:43.260
能够顺利运行

18:43.260 --> 18:45.260
那么谁来制定这个标准呢

18:45.260 --> 18:46.260
这一套标准

18:46.260 --> 18:49.260
是由W3C来制定的

18:49.260 --> 18:51.260
Web API

18:51.260 --> 18:53.260
API

18:53.260 --> 18:56.260
有W3C

18:56.260 --> 18:57.260
当然我们查

18:57.260 --> 18:59.260
本档的时候一般查MDN

18:59.260 --> 19:01.260
W3C制定

19:01.260 --> 19:03.260
大家这个地方要注意

19:03.260 --> 19:05.260
介石语言

19:05.260 --> 19:07.260
这个语言本身

19:07.260 --> 19:08.260
语法啊

19:08.260 --> 19:09.260
科学语法啊

19:09.260 --> 19:10.260
义父判断啊

19:10.260 --> 19:11.260
这些语法

19:11.260 --> 19:13.260
变量提升啊

19:13.260 --> 19:14.260
这些玩意

19:14.260 --> 19:17.260
它是有什么规定的

19:17.260 --> 19:20.260
是由Akma script 规定的

19:20.260 --> 19:23.260
就是我们介石本身的

19:23.260 --> 19:24.260
是由谁规定的

19:24.260 --> 19:26.260
是由Akma script

19:27.260 --> 19:28.260
当然有的时候呢

19:28.260 --> 19:29.260
又把介石呢

19:29.260 --> 19:30.260
想象成为

19:30.260 --> 19:32.260
就是在浏览器环境里面

19:32.260 --> 19:33.260
执行的语言啊

19:33.260 --> 19:34.260
那我们严格来说

19:34.260 --> 19:35.260
是ES嘛

19:35.260 --> 19:38.260
ES是由Akma script 规定的

19:41.260 --> 19:42.260
Web API呢

19:42.260 --> 19:44.260
它是由W3C制定的

19:44.260 --> 19:46.260
这个地方搞清楚啊

19:46.260 --> 19:47.260
Akma script 这个组织

19:47.260 --> 19:48.260
它并没有说什么浏览器

19:48.260 --> 19:50.260
跟浏览器没什么关系

19:50.260 --> 19:51.260
它是一个通用语言

19:51.260 --> 19:53.260
到了浏览器环境里边

19:53.260 --> 19:54.260
浏览器环境里面

19:54.260 --> 19:55.260
给提供哪些东西

19:55.260 --> 19:58.260
是由这个组织制定的

19:58.260 --> 20:00.260
叫做万维网联盟

20:00.260 --> 20:01.260
你们学的那个

20:01.260 --> 20:02.260
Akma和CS

20:02.260 --> 20:03.260
应该知道的吧

20:03.260 --> 20:05.260
万维网联盟

20:05.260 --> 20:10.260
万维网联盟

20:10.260 --> 20:13.260
由它来制定的

20:13.260 --> 20:15.260
好 这里了解一下

20:15.260 --> 20:17.260
那么接下来我要说啥呢

20:17.260 --> 20:19.260
接下来我主要说一下这个洞

20:19.260 --> 20:20.260
这个洞

20:20.260 --> 20:21.260
就是了解一下这些常识

20:21.260 --> 20:22.260
咱们在地解课

20:22.260 --> 20:24.260
把这些常识先了解一下

20:24.260 --> 20:25.260
关于这个洞

20:25.260 --> 20:31.300
这个洞也是历经坎克

20:31.300 --> 20:33.300
就是洞母这一套规范

20:33.300 --> 20:35.300
它历经了很多的坎克

20:35.300 --> 20:37.300
那么形成现在这个样子

20:37.300 --> 20:39.300
洞母一共历经了

20:39.300 --> 20:41.300
五个阶段

20:41.300 --> 20:43.300
分别是洞母林

20:43.300 --> 20:44.300
现在洞母林

20:44.300 --> 20:45.300
它并没有官方的说法

20:45.300 --> 20:46.300
叫做洞母林

20:46.300 --> 20:49.300
是我们现在的一种历史性的说法

20:49.300 --> 20:51.300
洞母林这个规范

20:51.300 --> 20:53.300
它是出现在很早的时候

20:53.300 --> 20:55.300
我自己的我这门课

20:55.300 --> 20:56.300
这门课 地解课就讲了

20:56.300 --> 20:58.300
什么浏览器大战 对吧

20:58.300 --> 21:00.300
当时是谁 两个谁

21:00.300 --> 21:01.300
两个小伙子 对吧

21:01.300 --> 21:02.300
一个是微软

21:02.300 --> 21:05.300
一个是微软的哀音浏览器

21:05.300 --> 21:07.300
和什么王锦浏览器

21:07.300 --> 21:09.300
他们之间的市场竞争

21:09.300 --> 21:10.300
好 那个时候

21:10.300 --> 21:12.300
官方都还没有出现标准

21:12.300 --> 21:13.300
因为我当时讲了

21:13.300 --> 21:14.300
后边的时候

21:14.300 --> 21:15.300
王锦浏览器

21:15.300 --> 21:16.300
才把这个介石

21:16.300 --> 21:17.300
作为一套标准

21:17.300 --> 21:19.300
提交给欧洲计算机

21:19.300 --> 21:21.300
制造商协会

21:21.300 --> 21:23.300
后来才提交的

21:23.300 --> 21:25.300
说一开始并没有提交

21:25.300 --> 21:27.300
于是一开始就各搞各的

21:27.300 --> 21:29.300
到底用什么样的

21:29.300 --> 21:30.300
提供什么样的对象

21:30.300 --> 21:31.300
提供什么样的

21:31.300 --> 21:33.300
就是API来访问

21:33.300 --> 21:35.300
这个浏览器里边的东西

21:35.300 --> 21:36.300
来控制ATM稳当

21:36.300 --> 21:37.300
控制浏览器本身

21:37.300 --> 21:39.300
那个时候就比较混乱

21:39.300 --> 21:40.300
就都比较混乱

21:40.300 --> 21:41.300
微软一套

21:41.300 --> 21:43.300
王锦浏览器一套

21:43.300 --> 21:45.300
当然他们也有相通的东西

21:45.300 --> 21:46.300
你抄抄我 我抄抄你

21:46.300 --> 21:48.300
也有很多相通的东西

21:48.300 --> 21:50.300
但是差异非常非常大

21:50.300 --> 21:53.300
这个时代叫做多姆林时代

21:53.300 --> 21:55.300
不是一个没有标准的时代

21:55.300 --> 21:56.300
混乱的时代

21:56.300 --> 21:58.300
然后后来1998年

21:58.300 --> 21:59.300
我们当时讲那个说过的

21:59.300 --> 22:00.300
1998年

22:00.300 --> 22:03.300
官方出了标准之后

22:03.300 --> 22:08.300
W30发布了多姆1标准

22:08.300 --> 22:11.300
于是另外一个时代了

22:11.300 --> 22:14.300
就第一个开启了标准时代

22:14.300 --> 22:16.300
就是说我们多姆里边的规范

22:16.300 --> 22:18.300
他的对象有哪些

22:18.300 --> 22:20.300
从此以后

22:20.300 --> 22:22.300
由官方标准来指定了

22:22.300 --> 22:24.300
W30来指定

22:24.300 --> 22:26.300
但是当时微软

22:26.300 --> 22:28.300
没有太在意

22:28.300 --> 22:29.300
说真的他没有太在意

22:29.300 --> 22:30.300
这导致了很多

22:30.300 --> 22:32.300
为什么程序源的世界里边

22:32.300 --> 22:34.300
非常非常痛恨

22:34.300 --> 22:35.300
IE浏览器呢

22:35.300 --> 22:37.300
因为IE浏览器他不遵守标准

22:37.300 --> 22:39.300
他以前蛮遵守标准的

22:39.300 --> 22:42.300
IE3还是IE4

22:42.300 --> 22:43.300
好像IE4

22:43.300 --> 22:45.300
IE4获得巨大的成功

22:45.300 --> 22:47.300
打败了王锦浏览器

22:47.300 --> 22:49.300
有很多原因

22:49.300 --> 22:50.300
其中一个重要原因就是

22:50.300 --> 22:52.300
IE4这个浏览器

22:52.300 --> 22:54.300
他遵守标准

22:54.300 --> 22:58.300
但是后来IE就不遵守标准了

22:58.300 --> 23:01.300
因为当时他的市场占有率太高了

23:01.300 --> 23:04.300
高的时候好像占到了99%

23:04.300 --> 23:06.300
我运营行中

23:06.300 --> 23:07.300
他市场占有率最高的时候

23:07.300 --> 23:08.300
占到99%

23:08.300 --> 23:10.300
这个多恐怖

23:10.300 --> 23:12.300
基本上连汤都不剩了

23:12.300 --> 23:14.300
占有率这么高

23:14.300 --> 23:16.300
于是他觉得我就是标准

23:16.300 --> 23:17.300
我干嘛要遵守你的呢

23:17.300 --> 23:20.300
而且他本来以前在浏览器大战的时候

23:20.300 --> 23:22.300
就遗留了很多的代码问题

23:22.300 --> 23:25.300
他又把整个浏览器团队又解散了

23:25.300 --> 23:27.300
只剩下那么一点点人了

23:27.300 --> 23:28.300
有点点维护的人

23:28.300 --> 23:30.300
那么那些人他一懒得去改这些代码

23:30.300 --> 23:32.300
也改起来也牢糊

23:32.300 --> 23:34.300
因为以前代码有很多很多的问题

23:34.300 --> 23:36.300
写的很仓促嘛

23:36.300 --> 23:37.300
他又不想改了

23:37.300 --> 23:38.300
也不想去遵守标准

23:38.300 --> 23:40.300
因此在IE浏览器里边

23:40.300 --> 23:41.300
你会发现

23:41.300 --> 23:43.300
特别是舊版本的IE

23:43.300 --> 23:46.300
出现了很多跟标准相违背的地方

23:46.300 --> 23:49.300
标准这样子说他偏偏那样做

23:49.300 --> 23:51.300
什么时候才发生变化呢

23:51.300 --> 23:53.300
到了第二次浏览器大战

23:53.300 --> 23:56.300
就是火湖谷歌浏览器崛起的时候

23:56.300 --> 23:57.300
IE发现危险了

23:57.300 --> 24:00.300
他又把之前解散的团队又招回来

24:00.300 --> 24:01.300
之前解散过后

24:01.300 --> 24:03.300
有很多还是没有辞职

24:03.300 --> 24:05.300
不是说直接解雇

24:05.300 --> 24:07.300
是把它转移到了另外的部门

24:07.300 --> 24:09.300
又从另外的部门的招聘回来

24:09.300 --> 24:10.300
又把它转回来

24:10.300 --> 24:11.300
重新来开发

24:11.300 --> 24:12.300
这帮人

24:12.300 --> 24:14.300
很多年都没有去搞过浏览器开发了

24:14.300 --> 24:16.300
然后又回来开发浏览器

24:16.300 --> 24:18.300
面对之前那么复杂的代码

24:18.300 --> 24:19.300
面对之前

24:19.300 --> 24:20.300
不要说别的了

24:20.300 --> 24:21.300
你就看

24:21.300 --> 24:24.300
你学的段时间程序

24:24.300 --> 24:25.300
你毕业的时候

24:25.300 --> 24:27.300
你再看一下之前写的代码

24:27.300 --> 24:28.300
你看的脑袋桶

24:28.300 --> 24:30.300
脑瓜垃圾桶

24:30.300 --> 24:32.300
那么当时那些人也是一样的

24:32.300 --> 24:33.300
面对之前

24:33.300 --> 24:34.300
以前写的那些代码

24:34.300 --> 24:35.300
看着头痛

24:35.300 --> 24:36.300
不好改

24:36.300 --> 24:39.300
但是也只有强硬着头皮

24:39.300 --> 24:40.300
去改

24:40.300 --> 24:42.300
因为有威胁了对吧

24:42.300 --> 24:43.300
市场有威胁了

24:43.300 --> 24:45.300
于是到i19之后

24:45.300 --> 24:47.300
后边我们学习的时候会看到

24:47.300 --> 24:50.300
很多都是i19之后

24:50.300 --> 24:51.300
它满足了这个标准

24:51.300 --> 24:52.300
它可以用这个函数了

24:52.300 --> 24:55.300
i19之前或者是i18、i17、i16

24:55.300 --> 24:58.300
会出各种各样的问题

24:58.300 --> 25:00.300
再说一下

25:00.300 --> 25:03.300
DOM一开始就开始进入了标准时代

25:03.300 --> 25:05.300
然后精灵了DOM2

25:05.300 --> 25:06.300
精灵了DOM3

25:06.300 --> 25:08.300
精灵了DOM4

25:08.300 --> 25:09.300
目前是DOM4了

25:09.300 --> 25:11.300
DOM4是在2015年

25:11.300 --> 25:13.300
2015年发布的

25:13.300 --> 25:15.300
2015年是一个特别光明的连分

25:15.300 --> 25:17.300
它发布了就是DOM4

25:17.300 --> 25:21.300
而且发布了ES6

25:23.300 --> 25:24.300
DOM4呢

25:24.300 --> 25:26.300
我们接触的比较少

25:26.300 --> 25:29.300
但是确实是2015年发布的

25:29.300 --> 25:31.300
好 特地说一下

25:31.300 --> 25:33.300
这是关于DOM的一些时代

25:33.300 --> 25:35.300
我们以后会说到这么一个东西

25:35.300 --> 25:36.300
比方说我到时候

25:36.300 --> 25:38.300
特别是讲事件的时候

25:38.300 --> 25:39.300
会告诉大家

25:39.300 --> 25:41.300
有些事件是在DOM0里面

25:41.300 --> 25:43.300
有些事件是在DOM2里面

25:43.300 --> 25:45.300
会跟大家说一下

25:45.300 --> 25:48.300
好吧 这是关于DOM了解一下就行了

25:48.300 --> 25:50.300
这DOM的时代发展

25:50.300 --> 25:53.300
然后DOM是什么东西呢

25:53.300 --> 25:54.300
好 我们来解释一下

25:54.300 --> 25:59.510
DOM是什么

25:59.510 --> 26:02.510
它的核心干理念

26:02.510 --> 26:05.510
DOM的核心理念

26:05.510 --> 26:12.510
是将一个ATM或XML文档

26:12.510 --> 26:14.510
应该接触过这个词吧

26:14.510 --> 26:15.510
如果你看了我的

26:15.510 --> 26:18.510
ATM和事业式的教程的话

26:18.510 --> 26:19.510
应该接触过这个词

26:19.510 --> 26:20.510
简单解释一下

26:20.510 --> 26:23.510
咱们写的这个ATM页面

26:23.510 --> 26:26.510
就类似于一个XML文档

26:26.510 --> 26:28.510
XML是一种文档格式

26:28.510 --> 26:29.510
就是我们写文档

26:29.510 --> 26:30.510
你看我们这个写的

26:30.510 --> 26:31.510
是MAC档 对吧

26:31.510 --> 26:32.510
是一种格式吧

26:32.510 --> 26:33.510
我们写O2的

26:33.510 --> 26:34.510
是不是一种格式

26:34.510 --> 26:35.510
对吧

26:35.510 --> 26:37.510
XML也是一种文档格式

26:37.510 --> 26:38.510
这种格式呢

26:38.510 --> 26:41.510
它是边于计算机和人

26:41.510 --> 26:43.510
理解我们的文档内容

26:43.510 --> 26:46.950
比方说

26:46.950 --> 26:47.950
看一下

26:47.950 --> 26:49.950
这是我们的ATM格式对吧

26:49.950 --> 26:50.950
然后给大家写一下

26:50.950 --> 26:51.950
XML格式

26:51.950 --> 26:54.950
这是ATM

26:54.950 --> 26:55.950
我们给大家写一下

26:55.950 --> 26:58.950
XML格式

26:58.950 --> 26:59.950
这种格式

26:59.950 --> 27:00.950
看着

27:00.950 --> 27:01.950
XML格式

27:01.950 --> 27:02.950
比方说一个学生

27:02.950 --> 27:04.950
我们可以这样子写

27:04.950 --> 27:05.950
U2

27:05.950 --> 27:06.950
这就是一个用户

27:06.950 --> 27:10.780
所以很类似于ATM

27:10.780 --> 27:11.780
对吧

27:11.780 --> 27:13.780
好像这是个元素

27:13.780 --> 27:14.780
XML呢

27:14.780 --> 27:16.780
它也是这种解法

27:16.780 --> 27:17.780
而且它也是一样

27:17.780 --> 27:19.780
必须有一个根元素

27:19.780 --> 27:20.780
根元素是什么

27:20.780 --> 27:21.780
无所谓

27:21.780 --> 27:22.780
无所谓

27:22.780 --> 27:23.780
但是XML里边

27:23.780 --> 27:24.780
它一个区别就在于

27:24.780 --> 27:25.780
它没有强制要求

27:25.780 --> 27:26.780
你的元

27:26.780 --> 27:28.780
你这个元素是什么

27:28.780 --> 27:29.780
XML里边

27:29.780 --> 27:30.780
它不叫元素

27:30.780 --> 27:31.780
叫节点

27:31.780 --> 27:32.780
它不叫元素

27:32.780 --> 27:34.780
叫节点

27:36.780 --> 27:37.780
看它的注释

27:37.780 --> 27:38.780
都跟ATM一样

27:38.780 --> 27:40.780
它叫做节点

27:40.780 --> 27:42.780
它不叫做元素

27:42.780 --> 27:43.780
好吧

27:43.780 --> 27:44.780
好

27:44.780 --> 27:45.780
然后我们来看一下

27:45.780 --> 27:46.780
U2里边

27:46.780 --> 27:47.780
比方说

27:47.780 --> 27:49.780
我们要写个用户的姓名

27:49.780 --> 27:50.780
内

27:50.780 --> 27:52.780
写个用户姓名

27:52.780 --> 27:53.780
内

27:53.780 --> 27:54.780
用户的姓名的那一种

27:54.780 --> 27:55.780
什么名字呢

27:55.780 --> 27:56.780
比方说

27:56.780 --> 27:58.780
成歌

27:58.780 --> 28:00.780
然后用户的年龄

28:01.780 --> 28:03.780
比方说成歌很年轻

28:03.780 --> 28:04.780
对吧

28:04.780 --> 28:05.780
然后用户的姓别

28:05.780 --> 28:06.780
精导

28:06.780 --> 28:07.780
你看是这样子来写的

28:07.780 --> 28:08.780
这样子来写的

28:08.780 --> 28:09.780
这就是

28:09.780 --> 28:11.780
XML格式

28:11.780 --> 28:14.150
你看这个意思吧

28:14.150 --> 28:17.150
这些里边还可以写一些属性

28:17.150 --> 28:18.150
还可以写一些属性

28:18.150 --> 28:20.150
跟ATM是一样的

28:20.150 --> 28:21.150
格式差不多

28:21.150 --> 28:22.150
看上去

28:22.150 --> 28:23.150
好像是

28:23.150 --> 28:24.150
XML格式

28:24.150 --> 28:25.150
跟ATM是一样的

28:25.150 --> 28:26.150
其实不太一样

28:26.150 --> 28:27.150
是有区别的

28:27.150 --> 28:28.150
比方说

28:28.150 --> 28:29.150
XML里边

28:29.150 --> 28:30.150
它可以写什么

28:30.150 --> 28:31.150
1米级元素

28:31.150 --> 28:32.150
对吧

28:32.150 --> 28:33.150
你看你这个元素

28:33.150 --> 28:34.150
这个元素

28:34.150 --> 28:36.150
是不是没有结束标记

28:36.150 --> 28:37.150
对吧

28:37.150 --> 28:38.150
它没有结束标记

28:38.150 --> 28:39.150
但是在XML里边

28:39.150 --> 28:40.150
是不行的

28:40.150 --> 28:42.150
是一定不行的

28:42.150 --> 28:44.150
你要写某一个东西

28:44.150 --> 28:46.150
你要写某个东西的话

28:46.150 --> 28:48.150
必须要有结束标记

28:48.150 --> 28:49.150
比方说

28:49.150 --> 28:50.150
你要写这个东西

28:50.150 --> 28:51.150
可以写

28:51.150 --> 28:52.150
但是你必须要有结束标记

28:52.150 --> 28:53.150
你得这样子写

28:53.150 --> 28:54.150
或者是

28:54.150 --> 28:55.150
你这样子写

28:55.150 --> 28:56.150
加一个写杠

28:56.150 --> 28:57.150
你看

28:57.150 --> 28:58.150
字结束

28:58.150 --> 28:59.150
也可以

29:00.150 --> 29:01.150
所以说

29:01.150 --> 29:02.150
这一块

29:02.150 --> 29:03.150
它跟ATM还是有区别的

29:03.150 --> 29:04.150
还是有区别的

29:04.150 --> 29:05.150
大家注意一下

29:05.150 --> 29:06.150
而且我们之前

29:06.150 --> 29:08.150
我给大家说的课程里边

29:08.150 --> 29:09.150
我说过

29:09.150 --> 29:10.150
在ATM5的标准里边

29:10.150 --> 29:12.150
甚至可以不写这个玩意

29:12.150 --> 29:13.150
甚至可以不写

29:13.150 --> 29:14.150
甚至可以不写黑的

29:14.150 --> 29:16.150
甚至可以不写玻璃

29:16.150 --> 29:17.150
可以的

29:17.150 --> 29:18.150
这些都是符合标准的

29:18.150 --> 29:20.150
都是符合标准的

29:20.150 --> 29:22.150
只是不符合习惯而已

29:22.150 --> 29:23.150
但是在XML里边

29:23.150 --> 29:24.150
是绝对不行的

29:24.150 --> 29:26.150
它的标准更加严格

29:26.150 --> 29:27.150
明白这个意思吧

29:27.150 --> 29:28.150
大概了解一下

29:28.150 --> 29:29.150
大概了解一下

29:31.150 --> 29:33.150
那么也就多么的核心理念

29:33.150 --> 29:34.150
是将一个ATM

29:34.150 --> 29:35.150
或者是XML文档

29:35.150 --> 29:36.150
就两种格式文档

29:36.150 --> 29:37.150
它都支持

29:37.150 --> 29:39.150
当然我们肯定接触的是ATM

29:39.150 --> 29:41.150
跟XML没什么关系

29:41.150 --> 29:42.150
它的核心理念

29:42.150 --> 29:44.150
是把这么一个文档

29:45.150 --> 29:48.150
用对象模型表示

29:49.150 --> 29:50.150
用对象模型表示

29:50.150 --> 29:52.150
因为我们学的是GS

29:52.150 --> 29:54.150
GS里边肯定是一个

29:54.150 --> 29:55.150
一个一个的对象

29:55.150 --> 29:57.150
包括函数都是对象

29:57.150 --> 29:59.150
操作的一定是一个个的对象

29:59.150 --> 30:00.150
那么我们到时候

30:00.150 --> 30:01.150
怎么来操作这个文档呢

30:01.150 --> 30:02.150
这里面这么多内容

30:02.150 --> 30:03.150
怎么来操作呢

30:03.150 --> 30:05.150
它是把它看作是对象

30:06.150 --> 30:07.150
你看这个玩意儿

30:07.150 --> 30:08.150
对象

30:08.150 --> 30:10.150
这里一个注释

30:10.150 --> 30:12.150
注释对象

30:12.150 --> 30:13.150
这里一个元素

30:13.150 --> 30:14.150
元素就是一个对象

30:14.150 --> 30:16.150
这里一个一密集图片

30:16.150 --> 30:17.150
图片也是对象

30:17.150 --> 30:18.150
所有的东西

30:18.150 --> 30:20.150
你看这里对象

30:20.150 --> 30:21.150
连这个属性都是对象

30:21.150 --> 30:22.150
都是对象

30:22.150 --> 30:23.150
全是对象

30:23.150 --> 30:24.150
然后把这些对象

30:24.150 --> 30:26.150
形成一种结构

30:26.150 --> 30:27.150
形成一种结构联系起来

30:27.150 --> 30:29.150
这就是多姆文档

30:30.150 --> 30:31.150
然后我们再来说一下

30:31.150 --> 30:32.150
多姆文

30:32.150 --> 30:34.150
多姆这个东西

30:34.150 --> 30:35.150
它表示就是说

30:35.150 --> 30:36.150
我们整个页面里边

30:36.150 --> 30:37.150
到处是对象

30:37.150 --> 30:39.150
我们把它称之为多姆对象

30:39.150 --> 30:41.150
每个对象

30:41.150 --> 30:43.150
称之为

30:43.150 --> 30:45.150
多姆对象

30:45.150 --> 30:46.150
称之为多姆对象

30:46.150 --> 30:47.150
有的生了

30:47.150 --> 30:48.150
我就写快了

30:48.150 --> 30:49.150
可能没有大写

30:49.150 --> 30:50.150
但是严格来说

30:50.150 --> 30:51.150
是应该大写的

30:51.150 --> 30:52.150
大家就是

30:52.150 --> 30:53.150
理解一下

30:53.150 --> 30:54.150
心里面知道就行了

30:55.150 --> 30:56.150
称之为多姆对象

30:56.150 --> 30:58.150
那么多姆对象里边

30:58.150 --> 30:59.150
有哪些东西呢

30:59.150 --> 31:01.150
叫多姆对象

31:01.150 --> 31:04.150
又称之为

31:04.150 --> 31:05.150
又称之为

31:05.150 --> 31:06.150
结点

31:06.150 --> 31:07.150
漏的

31:07.150 --> 31:09.150
这是沿用的是

31:09.150 --> 31:10.150
XML里面的概念

31:10.150 --> 31:11.150
XML

31:11.150 --> 31:12.150
就是这个

31:12.150 --> 31:13.150
每次读这个词

31:13.150 --> 31:14.150
真的不好读

31:14.150 --> 31:15.150
再读一下

31:15.150 --> 31:16.150
XML

31:16.150 --> 31:17.150
XML

31:17.150 --> 31:18.150
XML

31:18.150 --> 31:19.150
XML

31:19.150 --> 31:20.150
XML

31:21.150 --> 31:23.150
它是沿用了

31:23.150 --> 31:24.150
XML里面的概念

31:24.150 --> 31:25.150
就漏的

31:25.150 --> 31:26.150
表示结点

31:26.150 --> 31:27.150
多姆对象里边

31:27.150 --> 31:28.150
我们把这些多姆对象

31:28.150 --> 31:29.150
通常称为多姆对象

31:29.150 --> 31:31.150
也称为多姆结点

31:31.150 --> 31:32.150
好

31:32.150 --> 31:33.150
结点有哪些呢

31:33.150 --> 31:34.150
我们来看一下

31:34.150 --> 31:36.150
结点的类型

31:36.150 --> 31:37.150
我们先了解一下

31:37.150 --> 31:38.150
就是文有我们

31:38.150 --> 31:39.150
后边的学习

31:39.150 --> 31:40.150
扫心障碍

31:40.150 --> 31:41.150
有哪些结点呢

31:41.150 --> 31:42.150
第一个结点

31:42.150 --> 31:43.150
就是这个结点

31:43.150 --> 31:44.150
这是个结点

31:44.150 --> 31:46.150
这里面所有东西都是结点

31:46.150 --> 31:48.150
所有的东西都是结点

31:49.150 --> 31:51.150
这个叫做文档注释结点

31:51.150 --> 31:53.150
文档类型结点

31:53.150 --> 31:56.150
叫做document type

31:56.150 --> 31:58.150
这是一种结点类型

31:58.150 --> 31:59.150
叫做文档类型

31:59.150 --> 32:00.150
当然这个东西

32:00.150 --> 32:01.150
跟我们没啥关系

32:01.150 --> 32:02.150
没啥关系

32:02.150 --> 32:03.150
了解就行了

32:03.150 --> 32:05.150
文档类型结点

32:05.150 --> 32:06.150
还有一个结点

32:06.150 --> 32:08.150
叫做document

32:09.150 --> 32:11.150
叫做文档结点

32:11.150 --> 32:12.150
什么叫文档结点呢

32:12.150 --> 32:15.150
它表示整个文档

32:15.150 --> 32:17.150
表示是整个文档

32:17.150 --> 32:18.150
可以想象成

32:18.150 --> 32:19.150
有一个元素

32:19.150 --> 32:21.150
把整个全部包起来

32:21.150 --> 32:22.150
有一个东西

32:22.150 --> 32:23.150
把整个全部包起来

32:23.150 --> 32:24.150
当然你是看不见的

32:24.150 --> 32:25.150
你可以这样子想象

32:25.150 --> 32:26.150
有一个元素

32:26.150 --> 32:27.150
把整个包起来

32:27.150 --> 32:28.150
那么这个东西

32:28.150 --> 32:29.150
不是etimal

32:29.150 --> 32:30.150
不是etimal

32:30.150 --> 32:31.150
是整个文档

32:31.150 --> 32:32.150
整个文档

32:32.150 --> 32:34.150
那么整个包起来的东西

32:34.150 --> 32:35.150
把它叫做文档结点

32:35.150 --> 32:36.150
我们后边学习的时候

32:36.150 --> 32:37.150
就会看到了

32:37.150 --> 32:38.150
先有这么个印象

32:38.150 --> 32:40.150
了解结点的类型

32:40.150 --> 32:42.150
然后还有啥呢

32:42.150 --> 32:45.150
还有就是注释结点

32:45.150 --> 32:46.150
叫comment

32:48.850 --> 32:50.850
这里应该是两个頁面吧

32:50.850 --> 32:52.850
这个结点表示什么意思呢

32:52.850 --> 32:55.850
它表示的是注释结点

32:55.850 --> 32:56.850
注释结点

32:56.850 --> 32:57.850
就比方说

32:57.850 --> 32:58.850
我们页面上向这个地方

32:58.850 --> 33:00.850
就是个注释结点

33:00.850 --> 33:01.850
没有这个意思吧

33:01.850 --> 33:02.850
ok

33:02.850 --> 33:03.850
咱们再看

33:03.850 --> 33:04.850
还有哪些呢

33:04.850 --> 33:05.850
animate

33:05.850 --> 33:08.850
这个应该是我们学习的重点

33:08.850 --> 33:10.850
我们主要学习的

33:10.850 --> 33:11.850
就是这个结点

33:11.850 --> 33:12.850
这个结点

33:12.850 --> 33:13.850
这个结点

33:13.850 --> 33:15.850
它叫做元素结点

33:16.850 --> 33:17.850
你想一下吧

33:17.850 --> 33:18.850
想象一下吧

33:18.850 --> 33:19.850
我们页面上是不是

33:19.850 --> 33:20.850
这个东西非常非常多

33:20.850 --> 33:21.850
到处都是元素

33:21.850 --> 33:22.850
这是元素吗

33:22.850 --> 33:23.850
这是元素

33:23.850 --> 33:24.850
这是元素

33:24.850 --> 33:25.850
元素

33:25.850 --> 33:26.850
元素

33:26.850 --> 33:28.850
这些全是元素结点

33:28.850 --> 33:30.850
那么如果遇到元素的话

33:30.850 --> 33:32.850
它的结点类型就是元素结点

33:32.850 --> 33:33.850
好

33:33.850 --> 33:34.850
再来

33:34.850 --> 33:35.850
text

33:35.850 --> 33:38.850
这个表示文本结点

33:38.850 --> 33:40.850
在我们的网页中文档里边

33:40.850 --> 33:41.850
文本

33:41.850 --> 33:42.850
它也是结点

33:42.850 --> 33:43.850
像这个地方

33:43.850 --> 33:44.850
结点

33:44.850 --> 33:45.850
这里写个批元素

33:45.850 --> 33:46.850
批元素里边

33:46.850 --> 33:47.850
比方说写个nory

33:47.850 --> 33:49.850
这个也是文本结点

33:49.850 --> 33:50.850
没有这个意思吧

33:50.850 --> 33:52.850
哪怕你什么都不写

33:52.850 --> 33:53.850
你给这个回车

33:53.850 --> 33:55.850
这个地方也是文本结点

33:55.850 --> 33:57.850
也是文本结点

33:57.850 --> 33:58.850
就这么个意思

33:58.850 --> 33:59.850
咱们再看

33:59.850 --> 34:00.850
再看

34:00.850 --> 34:02.850
achribute

34:03.850 --> 34:04.850
achribute

34:04.850 --> 34:06.850
这个应该是这样的写吧

34:06.850 --> 34:07.850
text

34:07.850 --> 34:08.850
achribute

34:08.850 --> 34:10.850
achribute表示属性

34:10.850 --> 34:11.850
属性结点

34:11.850 --> 34:12.850
这个单词叫特征

34:12.850 --> 34:13.850
特征

34:13.850 --> 34:14.850
也叫属性的意思

34:14.850 --> 34:16.850
属性结点

34:16.850 --> 34:17.850
属性结点是什么呢

34:17.850 --> 34:18.850
比方说这个

34:18.850 --> 34:19.850
是不是属性

34:19.850 --> 34:20.850
没问题吧

34:20.850 --> 34:21.850
属性

34:21.850 --> 34:22.850
这个地方属性

34:22.850 --> 34:24.850
你看这个Meta元素结点里边

34:24.850 --> 34:26.850
包含了两个属性结点

34:26.850 --> 34:28.850
两个属性结点

34:28.850 --> 34:29.850
没有这个意思吧

34:29.850 --> 34:31.850
咱们三两个吧

34:31.850 --> 34:33.850
这就是属性结点

34:33.850 --> 34:34.850
这是

34:34.850 --> 34:35.850
这是什么

34:35.850 --> 34:36.850
这是文本结点

34:36.850 --> 34:38.850
这是元素结点

34:38.850 --> 34:39.850
看没

34:39.850 --> 34:41.850
就是我们在ES里边

34:41.850 --> 34:43.850
web API

34:43.850 --> 34:45.850
它把我们的整个网页

34:45.850 --> 34:47.850
分成了很多很多的结点

34:47.850 --> 34:48.850
不同的结点

34:48.850 --> 34:49.850
也不同的类型

34:49.850 --> 34:50.850
就这么个意思

34:50.850 --> 34:51.850
好

34:51.850 --> 34:52.850
然后其实还有一个

34:52.850 --> 34:53.850
还有一个

34:53.850 --> 34:54.850
123456

34:54.850 --> 34:55.850
107个

34:55.850 --> 34:57.850
还有一个叫做document

34:57.850 --> 34:59.850
fragment

34:59.850 --> 35:00.850
fragment

35:00.850 --> 35:02.850
叫做文档片段

35:02.850 --> 35:04.850
文档片段结点

35:04.850 --> 35:05.850
文档片段结点

35:05.850 --> 35:06.850
我们现在看不到

35:06.850 --> 35:07.850
现在看不到

35:07.850 --> 35:08.850
之后

35:08.850 --> 35:09.850
我们再做一些操作的时候

35:09.850 --> 35:10.850
有可能会看到

35:10.850 --> 35:11.850
我到时候会给大家说

35:11.850 --> 35:13.850
那么现在先别管

35:13.850 --> 35:14.850
先别管

35:14.850 --> 35:16.850
于是我们的atm里边

35:16.850 --> 35:17.850
一共就这么一些结点

35:17.850 --> 35:19.850
一共这么7个

35:19.850 --> 35:20.850
没问题吧

35:20.850 --> 35:21.850
这个能力界吧

35:21.850 --> 35:22.850
好

35:22.850 --> 35:24.850
那么咱们再看下一个概念

35:24.850 --> 35:26.850
叫做document

35:26.850 --> 35:28.850
document是什么意思呢

35:28.850 --> 35:29.850
指的是

35:29.850 --> 35:31.850
我们的整个文档

35:31.850 --> 35:33.850
是有很多很多的结点组成的

35:33.850 --> 35:34.850
那么这些结点之间

35:34.850 --> 35:35.850
是有关系的

35:35.850 --> 35:36.850
你看到没

35:36.850 --> 35:37.850
比方说

35:37.850 --> 35:38.850
咱们整个这个

35:38.850 --> 35:39.850
是什么结点

35:39.850 --> 35:40.850
什么结点

35:40.850 --> 35:41.850
是document的结点

35:41.850 --> 35:42.850
文档结点

35:42.850 --> 35:43.850
表示整个文档

35:43.850 --> 35:45.850
把整个文档包含起来

35:45.850 --> 35:46.850
那么整个文档里边

35:46.850 --> 35:48.850
它是不是包含了

35:48.850 --> 35:49.850
一个指结点

35:49.850 --> 35:50.850
就跟指元素一样

35:50.850 --> 35:51.850
一个指结点什么

35:51.850 --> 35:52.850
就是文档

35:52.850 --> 35:54.850
说文档类型结点

35:54.850 --> 35:56.850
然后有一个元素结点

35:56.850 --> 35:57.850
看没有

35:57.850 --> 35:58.850
atm结点

35:58.850 --> 35:59.850
元素结点里面

35:59.850 --> 36:00.850
又包含了属性结点

36:00.850 --> 36:01.850
看没有

36:01.850 --> 36:03.850
又包含了两个指元素结点

36:03.850 --> 36:05.850
就形成了一颗

36:05.850 --> 36:06.850
一个塑状的结构

36:06.850 --> 36:07.850
这里有一张图

36:07.850 --> 36:08.850
我给大家画出来了

36:09.850 --> 36:10.850
看一下这张图

36:10.850 --> 36:11.850
拖进来

36:11.850 --> 36:13.850
看一下动物树

36:13.850 --> 36:15.850
就看这个网页

36:15.850 --> 36:16.850
你看一下这个网页

36:16.850 --> 36:17.850
多硬的就是个动物树

36:17.850 --> 36:19.850
整个这个结点

36:19.850 --> 36:20.850
整个这个树的根

36:20.850 --> 36:22.850
它是个导轴的树

36:22.850 --> 36:23.850
这个树是导起来的

36:23.850 --> 36:24.850
根在上面

36:24.850 --> 36:25.850
整个文档的根

36:25.850 --> 36:26.850
是document

36:26.850 --> 36:27.850
是这个结点

36:27.850 --> 36:28.850
这个结点里面

36:28.850 --> 36:30.850
包含两个document type

36:30.850 --> 36:31.850
就这个结点

36:31.850 --> 36:32.850
然后呢

36:32.850 --> 36:33.850
以及这个

36:33.850 --> 36:35.850
一个元素结点

36:35.850 --> 36:37.850
atm

36:37.850 --> 36:38.850
对吧

36:38.850 --> 36:39.850
这个atm是元素结点

36:39.850 --> 36:40.850
大家注意看

36:40.850 --> 36:41.850
我这里写的名字

36:41.850 --> 36:42.850
写的是什么呢

36:42.850 --> 36:45.850
写的是一个大写的atm

36:45.850 --> 36:46.850
这意味着

36:46.850 --> 36:47.850
我们后边在编程的时候

36:47.850 --> 36:48.850
很有可能

36:48.850 --> 36:50.850
它的结点名称是大写的

36:50.850 --> 36:51.850
我们这里先放到这

36:51.850 --> 36:52.850
以后就看到了

36:52.850 --> 36:53.850
好

36:53.850 --> 36:54.850
然后这个atm结点里面

36:54.850 --> 36:55.850
又包含了一个属性结点

36:55.850 --> 36:56.850
看没

36:56.850 --> 36:57.850
一个属性结点

36:57.850 --> 36:59.850
它的结点类型是atm

36:59.850 --> 37:00.850
属性结点

37:00.850 --> 37:01.850
哪个属性呢

37:01.850 --> 37:02.850
这个属性

37:02.850 --> 37:04.850
n

37:04.850 --> 37:05.850
然后这个atm里面

37:05.850 --> 37:06.850
又包含了两个元素结点

37:06.850 --> 37:07.850
一个是head

37:07.850 --> 37:08.850
一个是body

37:08.850 --> 37:09.850
他们都是元素结点

37:09.850 --> 37:10.850
head结点里面

37:10.850 --> 37:11.850
包含了一个属性

37:11.850 --> 37:12.850
属性结点

37:12.850 --> 37:13.850
叫charsit

37:13.850 --> 37:15.850
utf-8

37:15.850 --> 37:17.850
meta里面包含了个charsit

37:17.850 --> 37:19.850
utf-8

37:19.850 --> 37:20.850
然后呢

37:20.850 --> 37:22.850
又包含了一个head里面

37:22.850 --> 37:23.850
我这里写错了

37:23.850 --> 37:24.850
是吧

37:24.850 --> 37:25.850
我这里写错了

37:25.850 --> 37:26.850
我先来把改一下

37:26.850 --> 37:27.850
这里写错了

37:27.850 --> 37:28.850
应该是什么

37:28.850 --> 37:30.850
应该是meta结点里面包含的

37:30.850 --> 37:31.850
对吧

37:31.850 --> 37:32.850
应该是meta结点里面包含的

37:32.850 --> 37:33.850
我这里写错了

37:33.850 --> 37:34.850
是meta结点里面包含的

37:34.850 --> 37:35.850
charsit

37:35.850 --> 37:36.850
我先下来把改一下

37:36.850 --> 37:38.850
然后包含了title结点

37:38.850 --> 37:40.850
也是元素结点

37:40.850 --> 37:42.850
title结点里面又包含了文本结点

37:42.850 --> 37:43.850
表体

37:43.850 --> 37:44.850
text文本结点

37:44.850 --> 37:45.850
这里

37:45.850 --> 37:46.850
包含了文本结点表体

37:46.850 --> 37:48.850
然后这边body元素结点

37:48.850 --> 37:50.850
包含了注释comment

37:50.850 --> 37:52.850
包含了注释

37:52.850 --> 37:53.850
又包含了什么呢

37:53.850 --> 37:54.850
ediments

37:54.850 --> 37:55.850
元素结点p

37:55.850 --> 37:57.850
p里面又包含了文本结点

37:57.850 --> 37:58.850
nory

37:58.850 --> 37:59.850
看没

37:59.850 --> 38:01.850
整个结构就这么出来了

38:01.850 --> 38:02.850
大家以后

38:02.850 --> 38:04.850
在操作整个网页的时候

38:04.850 --> 38:05.850
心中始

38:05.850 --> 38:07.850
始终要有这么一张图

38:07.850 --> 38:09.850
就是它的结构关系是什么样子

38:09.850 --> 38:11.850
那么边于我们后边

38:11.850 --> 38:13.850
无论是获取元素也好

38:13.850 --> 38:14.850
去操作某个元素也好

38:14.850 --> 38:15.850
心里边有个数

38:15.850 --> 38:16.850
你看这意思吧

38:16.850 --> 38:17.850
好

38:17.850 --> 38:19.850
这就是它的结点数

38:19.850 --> 38:20.850
ok

38:20.850 --> 38:21.850
那行了

38:21.850 --> 38:22.850
行了

38:22.850 --> 38:23.850
那么结点数是什么意思呢

38:23.850 --> 38:24.850
就是

38:24.850 --> 38:25.850
不同的结点

38:25.850 --> 38:26.850
就是文当中

38:26.850 --> 38:28.850
不同的结点

38:28.850 --> 38:30.850
形成的

38:30.850 --> 38:33.850
形成的数形结构

38:33.850 --> 38:34.850
数形结构

38:34.850 --> 38:37.850
整个数里边一定有个根

38:37.850 --> 38:38.850
根是谁

38:38.850 --> 38:39.850
根就是document

38:39.850 --> 38:41.850
是这个结点类型

38:41.850 --> 38:43.850
我们后边就会讲这个东西

38:43.850 --> 38:44.850
好

38:44.850 --> 38:45.850
然后我们这里

38:45.850 --> 38:46.850
把这个数讲完了

38:46.850 --> 38:48.850
我们本节后就结束了

38:48.850 --> 38:49.850
本节后最核心的

38:49.850 --> 38:51.850
认识这里的结点类型

38:51.850 --> 38:53.850
以及结点数

38:53.850 --> 38:54.850
认识这个概念

38:54.850 --> 38:55.850
前面的作为了解

38:55.850 --> 38:56.850
好吧

38:56.850 --> 38:57.850
好

38:57.850 --> 38:58.850
准备好了这些知识之后

38:58.850 --> 39:00.850
我们后边在学习的时候

39:00.850 --> 39:01.850
就很轻松了

39:01.850 --> 39:03.850
就可以按照这样的知识

39:03.850 --> 39:04.850
结构来进行学习了

39:04.850 --> 39:05.850
好吧

39:05.850 --> 39:06.850
这是第一节课

39:06.850 --> 39:07.850
做概述

