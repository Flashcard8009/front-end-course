WEBVTT

00:00.000 --> 00:14.860
好 就剩下后续的事件了

00:15.580 --> 00:20.340
后续的事件了 很多了解一下就行了 有些还是蛮有用的

00:20.940 --> 00:26.540
好 这个一个onload before onload的 它什么意思呢 一个说吧 before

00:27.220 --> 00:31.660
onload的呢 它是这个事件呢 它是温度的事件啊 温度的事件

00:32.340 --> 00:37.380
然后呢 它是什么时候运行的 它是在关闭窗口时运行

00:38.180 --> 00:44.580
关闭窗口时运行 这个事件呢 可以啊 它理论上啊

00:45.460 --> 00:48.660
可以允许主 主旨

00:49.700 --> 00:57.460
关闭窗口 在这里呢 我们可以主旨关闭窗口 但是呢 有些浏览器 比方说谷哥浏览器是无效的

00:57.780 --> 01:01.220
因为他认为呢 你这样子呢 容易造成欺诈行为

01:01.620 --> 01:07.220
就是比方说啊 以前呢 我们在浏览一些网页的时候呢 你关闭一个窗口的时候 他给你提示一个

01:07.220 --> 01:12.820
你真的要关闭吗 或者说你现在网页上真的正在运行重要内容 对吧 他可能给你提示一些歧视的语言

01:13.220 --> 01:18.900
欺骗的语言 让你不要关闭这个窗口 所以后来呢 就是谷哥浏览器以前还支持

01:19.620 --> 01:25.700
新版本的谷哥浏览器呢 他已经不再支持了啊 不再支持阻止关闭窗口了 但是事件呢还是会出发

01:26.100 --> 01:31.140
会出发这个事件 但是这个事件呢 由于他关闭的时候是瞬间关闭的 所以说你看不到什么效果

01:31.860 --> 01:39.140
那么这个事件里边可以做哪些事呢 一般来说啊 就是我们后边 以后啊 以后其他课程里边 你学习到什么阿加克斯

01:39.540 --> 01:48.260
就是发送一些网络请求的时候呢 你可以在这个事件里边发送一个网络请求 告诉服务器 我这个窗口已经关闭了啊 是这么一些东西啊

01:48.660 --> 01:51.780
包括这个onload的呢 也是啊 onload的呢 也是温度的事件

01:52.740 --> 01:54.900
他也是关闭窗口时

01:55.860 --> 01:59.860
运行啊 这两个事件运行的时间顺序呢 是先运行他

02:00.500 --> 02:03.300
先运行before onload的 然后再运行onload的

02:04.500 --> 02:10.100
区别在哪呢 一个是执行顺序 另外一个呢 是在上边这个世界里边可以阻止窗口关闭

02:10.500 --> 02:14.100
下边这个世界里边呢 是阻止不了的啊 但是谷哥浏览器就看不到

02:14.660 --> 02:19.060
啊 举个例子吧 比方说我们只能用爱因浏览器来测试啊 爱因浏览器还行还可以

02:20.020 --> 02:21.700
啊 这里看一下

02:23.220 --> 02:26.420
比方说吧 就不用没有没有任何东西啊 直接依面上注册时间

02:26.980 --> 02:29.460
window before啊 before

02:30.340 --> 02:35.220
应该是on before onload对吧 当关闭窗口的时候

02:36.660 --> 02:41.220
运行的时间 那么这个事件怎么来阻止关闭呢 很简单 你只要返回一个制服串就行了

02:41.620 --> 02:44.980
你只需要返回一个制服串啊 你确啊

02:45.700 --> 02:57.140
我们的网页啊 就是网站啊啊 该网页啊 该网页正在运行重要那种啊

02:57.700 --> 03:04.660
关闭网页可能会损坏你的计算机是否真的

03:05.540 --> 03:06.180
啊 真的

03:07.060 --> 03:13.220
哎 真的要关闭啊 就是问他一句话啊 应该返回一个制服串 你只要返回一个制服串的话

03:13.300 --> 03:15.300
他就会识别到这个内容 咱们来看一下吧

03:16.420 --> 03:25.390
啊 运行出来啊 看一下啊 这个网页呢 在这里面无效啊 在这里面无效 你关闭的时候呢 他不会甩你的啊

03:25.710 --> 03:30.990
不会甩下不会甩你的 然后在i留言里面 里边呢 是可以看到效果的啊 i留言去咱们看一下啊

03:31.870 --> 03:35.090
i好 看一下i留言

03:36.370 --> 03:37.250
哇 这都是卡

03:38.210 --> 03:38.370
啊

03:39.730 --> 03:41.890
啊 就这个网页啊 然后呢 现在我们关闭他

03:42.690 --> 03:49.730
你看他说你要确定你离开这个网页吗 现在看这个网页的消息就在正在提示你啊 这个网页呢 正在运行重要内容

03:50.290 --> 03:56.130
等等等等 就是反得到你提示这个话啊 当然你可以点击离开实验啊 就可以把关闭了

03:57.090 --> 03:59.810
啊 这就是这么一个东西啊 就是before unload

04:00.210 --> 04:07.810
还有一个呢 是onload 啊 unload 时间 我就不掩饰了啊 因为你看不到什么东西 就是关闭关闭的时候呢 他会运行一下这个时间 当你看不到任何效果

04:08.450 --> 04:11.090
好吧 了解一下啊 这两个时间 平时不是不怎么用的

04:11.650 --> 04:13.570
好 下面这个时间 就是

04:15.090 --> 04:24.290
就是窗口 窗口发生滚动时 发生滚动时运行的时间 就是滚动条

04:24.850 --> 04:31.570
窗口不是有滚动条吗 对吧 窗口发生滚动的时候运行的时间 注意啊 这个时间呢 他不仅可以写到温度上面

04:32.050 --> 04:36.930
也可以写到元素上面 元素上面的时间呢 他也会触发 咱们来举个例子

04:37.490 --> 04:41.090
啊 这个时间还蛮用用的啊 比方说啊 比方说

04:42.610 --> 04:45.090
我们这里呢 写这么一个

04:47.460 --> 04:53.380
写这么一些内容啊 写这么一些内容 一个P元素 里边的1000个文字啊 这样子呢 网页就会有滚动条

04:53.860 --> 04:59.380
看呗 网页就会有滚动条 对吧 看呗啊 有滚动条吧 我们把放小一点啊 右边来 大家可能看不见

05:00.500 --> 05:04.180
稍微放小一点啊 你看右边是为滚动条 对吧 有滚动条

05:04.580 --> 05:10.180
好 那么当我们滚动这个滚动条的时候呢 它就会运行这个时间啊 非常非常简单 好 咱们来看一下啊

05:11.300 --> 05:14.260
温度啊 是吧啊screw

05:15.780 --> 05:20.260
当发生滚动的时候运行的时间啊 输出啊滚动了

05:25.470 --> 05:33.870
好 保存啊 这里让我们把运行出来 已经运行了出来啊 点击右键啊screw 好 写下来我们滚动滚动条 看着啊

05:34.270 --> 05:39.950
你看 是不是时间触发了啊 这个滚动条的触发频率呢 跟我们那个鼠标移动的频率呢

05:40.670 --> 05:47.070
类似 它也是根据系统配置啊 根据流量系的版本来自行决定的 你不能决定它的滚动

05:47.630 --> 05:53.070
就是触发频率啊 你是你是决定不了的它的触发频率啊 比方说我们瞬间拿下去 你看只触发了七次

05:53.390 --> 05:57.630
但是我们慢慢慢慢弄出去啊 它会触发很多次啊 它触发的频率呢 是

05:58.750 --> 06:02.350
是有个限制的好吧 这是滚动条啊 滚动条滚动时间

06:03.070 --> 06:06.670
好 那么这里说到了滚动条呢 这里再说一下这个东西啊

06:07.310 --> 06:12.910
就是说 我们的元素里边呢 他也能发生滚动滚动时间啊 也能发生滚动时间

06:13.230 --> 06:20.670
不仅是窗口 因为我们的滚动条呢 不仅是在流量器窗口这里对吧 还有可能是在元素里边 我们以前学事业事实的时候说过对吧

06:20.990 --> 06:25.630
学事业事实的时候说过它的也可能在元素里边发生滚动 好 咱们来看一下啊

06:27.920 --> 06:31.200
嗯 我们比方说给这个p元素呢 设置一个样式

06:32.080 --> 06:36.480
宽度呢 比方说宽度为100个像素 我这里写的是什么啊

06:37.920 --> 06:44.480
style啊 宽度100个像素 然后呢 高度100个像素 好 然后呢 设置一个overflow

06:45.360 --> 06:49.920
overflow scroll啊 滚动吗啊 滚动或者是overflow

06:50.480 --> 06:54.560
out to啊 out to 就是它自动出现滚动条 好 保存啊 保存

06:55.120 --> 07:01.760
那你看这个元素 它是不是出现滚动条了 对吧 出现滚动条了 好 那么这个元素呢 它也能触发这个时间啊

07:01.920 --> 07:04.400
我们给这个元素 你看 整个窗口是没有滚动条的

07:04.720 --> 07:10.720
所以这个 整个窗口呢 一个 现在给它注册事件呢 没意义啊 没意义 因为现在整个窗口是没有滚动条的

07:11.280 --> 07:16.480
啊 只有这个元素滚动条 所以说呢 我们这里呢 可以给元素呢 注册滚动时间

07:17.440 --> 07:23.360
啊 这个 document query is negative 找到这个p元素 然后呢 给它注册 on scroll

07:24.080 --> 07:28.400
啊 你看 是不是也有这个时间啊 对吧 好 输出啥 输出啊

07:30.430 --> 07:37.070
p元素滚动啊 保存看一下啊 那你看 是不是也触发这个时间 对吧

07:38.190 --> 07:40.670
好 接下来我要说的东西 就是关于

07:41.470 --> 07:45.470
我现在到底滚动了多少这个问题啊 到底滚动了多少

07:46.030 --> 07:49.310
那么滚动了多少呢 我们可以通过两个属性来控制

07:49.710 --> 07:52.750
一个呢 是scroll top 一个呢 是scroll left

07:54.590 --> 08:00.910
通过scroll top和scroll left

08:01.790 --> 08:07.870
可以获取和设置滚动距离 可以设置滚动距离

08:08.110 --> 08:11.870
那么这个scroll top和scroll left 他们到底设置的是哪一个部分呢

08:12.190 --> 08:15.310
好 这里呢 有张图啊 有这里有四张图 我们也都会讲到的啊

08:15.950 --> 08:22.270
关于尺寸这里都会讲到的啊 我们这里放到根木路下面吧 好 看一下第四张图

08:24.030 --> 08:26.830
我们这里的p元素呢 就相当于是这个区域

08:28.270 --> 08:30.510
咱们的p元素啊 就相当于是这个区域

08:31.390 --> 08:35.150
而我们的实际内容呢 可能比较多啊 还会超过这个区域 对吧

08:35.390 --> 08:38.990
那么超过这个区域呢 是不是可以发生滚动 对吧 这里就出现了滚动条啊

08:39.310 --> 08:43.950
这里出现横向滚动条就可以滚动 好滚动之后呢 我们只能看见这个区域

08:44.270 --> 08:48.990
那么之前的区域就比方说啊 咱们滚动的时候 上面的区域是不是被隐藏了 你看这个文字

08:49.150 --> 08:54.670
它们跑到上面去了 你滚动的时候是不是被隐藏了 看不见了 对吧 看不见了 那么你可以想象成为

08:55.230 --> 09:01.470
是这个区域 对吧 这个区域就是scroll top 就是滚动高度 好 这个区域呢 就是啥

09:01.950 --> 09:08.430
是不是滚动的啊 就是left 是对吧 滚动的宽度 对吧 滚动高度和滚动宽度

09:09.150 --> 09:11.150
这是scroll left 这是scroll top

09:11.950 --> 09:14.110
就这两个曲子啊 看这个图一下就看明白了

09:14.670 --> 09:20.030
因此呢 我们可以在世界里边啊 当然不一定在这个世界 总之呢 我们可以通过这个元素的

09:20.430 --> 09:24.590
多么元素的这个属性啊 来获取到它的滚动高度和滚动

09:25.630 --> 09:28.190
滚动宽度 thisscroll top

09:28.830 --> 09:35.470
和thisscroll left 来能够获取到这两个数值啊 它两个是数字 看一下啊

09:36.190 --> 09:42.430
你看一下 滚动高度 你看38 76啊 你看 这里就是上标隐藏部分的

09:43.230 --> 09:48.830
高度啊 注意啊 有些同学可能会误解它是这个高度啊 跟这个东西没关系啊 跟这个东西没关系

09:48.990 --> 09:53.390
这东西是按比例来算的 跟它没关系 它指的是上标那一部分隐藏的

09:53.870 --> 09:57.070
高度啊 你看 隐藏多少 隐藏到一万多个相处了 对吧

09:58.190 --> 10:00.990
没问题吧 好 那么这边呢 也是一样啊 你看

10:01.870 --> 10:06.030
横下的滚动条也是一样 看没 也是一样的啊 就是第二个数字

10:06.910 --> 10:09.150
好 这两个东西呢 不仅可以

10:09.870 --> 10:12.910
不仅可以怎么样了 不仅可以获取 还可以设置

10:13.390 --> 10:15.790
还可以设置 比方说在下边加一个按钮

10:18.270 --> 10:26.350
div 下面有个div 加个按钮啊 回到顶部啊 回到顶部按钮 那么我们怎么办呢 我们可以把它回到顶部啊

10:27.310 --> 10:30.670
document query selector button

10:31.550 --> 10:34.510
好 这里呢 给它注册点击事件 unclick

10:35.470 --> 10:43.390
点击的时候 我要让啥呢 我要让这个p元素啊 我要让那个p元素呢 回到顶部 它的滚动条位置回到顶部

10:43.390 --> 10:44.670
就说这个东西可以控制的

10:45.550 --> 10:50.190
怎么控制的 无非就是给它复辞就完成了 比方说顶部啊 回到顶部

10:50.510 --> 10:54.990
是不是跟内容的顶边 跟这个元素的顶边重合 对吧 那么scrub top 为多少

10:55.550 --> 11:00.830
是不是为你呢 是不是回到顶部了scrub left 为多少 是不是为你呢 就回到左边了 对吧 好

11:01.870 --> 11:07.230
设置一下scrub top 等于呢 等于你啊scrub left

11:08.990 --> 11:11.630
等于你啊 好就完成了 你看这就是回到顶部

11:12.270 --> 11:19.310
保存看一下效果啊 那么我们这里滚动滚动啊 滚动完了 这边右边也滚动啊 滚动完了 点击回到顶部 你看

11:20.030 --> 11:25.790
就回到这了 对吧 并且呢 回到顶部不仅如此 他还会触发这个scrub事件 对吧 还会触发这个事件

11:26.430 --> 11:28.110
啊 有这么个意思啊 这么个意思

11:28.990 --> 11:34.590
这是关于滚动事件 以及滚动条高度和滚动条left 怎么来算 怎么来算

11:35.230 --> 11:41.630
那如果你要获得的是整个网页的滚动高度和滚动scrub left 那又怎么来算呢

11:42.590 --> 11:47.790
我们来看一下啊 如果来获得整个网页的滚动高度和滚动宽度

11:48.510 --> 11:53.470
啊 看着啊 我们之前的是整个网页对吧 现在是整个网页了 那整个网页怎么来获取呢

11:53.950 --> 12:00.110
这里呢 有兼容性问题啊 有兼容性问题 他用两种获取方式 比方说滚动高度吧 比方说滚动高度

12:00.510 --> 12:04.430
滚动高度的话 我们要这样子获取啊 不是用window来获取而是用document

12:05.390 --> 12:13.390
document 哎不对 document 的什么 document element 是不是根元数 对吧 获得根元数的scrub

12:14.110 --> 12:17.150
好 还有一种方式呢 是获得body元数的scrub

12:18.270 --> 12:20.830
啊 就这两个字啊 这两个字 我们来看一下啊

12:22.190 --> 12:29.790
啊 你看一下我们目前的就是第一个 第一个字是正确的 第二个字的是0对吧 那么有些流量性的 这个说不准啊 这个说不好

12:30.190 --> 12:33.710
有些流量性的就哪怕是同一个流量性的不同版本 它的解释都不一样

12:34.270 --> 12:36.910
有一些流量性的它是得到的是body的scrub

12:37.390 --> 12:39.870
有些流量性的得到的是document的scrub

12:40.430 --> 12:45.310
啊 看情况的 所以说一个是有值的一个就是0啊 一个是有值一个就是0

12:45.790 --> 12:47.550
所以说我们平时呢 来获取这个

12:48.190 --> 12:49.390
就是整个网页的

12:50.030 --> 12:52.750
滚动高度 我们怎么办呢 我们一般是把这两个相加

12:53.630 --> 13:00.750
啊 它一个是一定是0 一个一定是0 一个呢 一定是有值的 所以说我们把两个相加得到它的滚动高度

13:01.470 --> 13:04.910
啊 没问题吧啊 我们通常用这种方式来做啊 通常用这种方式来做

13:05.870 --> 13:07.150
是一样的 对吧 一样的

13:08.110 --> 13:10.910
好 这是关于获取整个网页的滚动高度

13:11.950 --> 13:12.990
好 OK啊

13:13.550 --> 13:15.230
好 这部分这部分那种

13:16.510 --> 13:17.310
好 这scrub

13:18.030 --> 13:18.910
好 下面这个

13:20.110 --> 13:20.750
resize

13:21.550 --> 13:24.350
这个是什么意思呢 这是窗口尺寸

13:26.590 --> 13:31.790
窗口尺寸发生改变时运行的事件

13:32.590 --> 13:35.870
窗口尺寸发生改变的时候运行的事件 它是window里边的事件

13:36.110 --> 13:37.230
好 咱们来看一下这个例子

13:38.350 --> 13:41.230
啊 做完了把这些讲完了之后呢 咱们有练习的啊

13:45.090 --> 13:48.850
比方说吧 这里啥都不用写啊 啥都不用写 窗口尺寸吧 对吧

13:49.170 --> 13:50.690
窗口尺寸 所以不用写啥

13:51.250 --> 13:54.930
啊window 然后呢 这里呃 主要注册resize事件

13:55.570 --> 13:56.530
啊resize事件

13:56.850 --> 14:00.290
好 然后呢 我们获得这个窗口的尺寸啊 不用获得窗口尺寸了啊

14:00.290 --> 14:03.650
咱们就输出尺寸改变了啊 改变了

14:04.210 --> 14:05.810
保存啊 看一下啊

14:06.450 --> 14:06.850
呃

14:07.730 --> 14:08.290
TESLA4

14:09.890 --> 14:13.570
好 为什么一开始有运行的这个事件呢 不是一开始运行是因为我把这个

14:14.290 --> 14:18.450
把这个f12 把这个 把这个窗口弹出来了 把这个窗口弹出来了 你看

14:19.010 --> 14:21.730
这个窗口弹出来了 导致了这边四口的

14:22.290 --> 14:26.850
尺寸发生的变化 对吧 其实它这个监听的是啥呢 监听的就是四口尺寸

14:27.170 --> 14:28.130
啊 这里记彼啊

14:29.650 --> 14:32.930
监听的是四口尺寸

14:34.290 --> 14:35.650
四口尺寸 就是这个区域

14:36.210 --> 14:41.730
可以看见网页的这个区域 这个区域尺寸一旦变化 那么它就会运行这个事件

14:42.050 --> 14:45.890
包括我方大说小 你看 我给网页方大说小 它也会导致这个发生变化

14:46.290 --> 14:50.370
总之 四口尺寸发生的变化 它就会改变这个行为啊 就是触发这个事件

14:50.530 --> 14:54.130
比方我们最大化 你看 是不是事件触发了 对吧 事件触发了

14:54.850 --> 15:01.250
最小化 为什么触发了两次呢 本来是只触发一次的啊 本来 但是我这个由于有这个f12啊

15:01.810 --> 15:05.330
这个窗口呢 它也会跟着变 那这个窗口跟着变 又会导致这边发生变化

15:05.650 --> 15:08.370
所以说呢 它会触发两次啊 如果你把它去掉啊

15:09.090 --> 15:10.610
我们再重新刷新嘛 刷新

15:11.410 --> 15:13.010
好 这里最大

15:13.810 --> 15:18.050
好 但是我如果把这个东西打开的话 你又会看到两个啊 又会看到两个

15:18.290 --> 15:22.210
其实它只有一个的 把它打开过后又看到一个 对吧 打开这个窗口过后又看到一个

15:22.450 --> 15:23.570
它本来只触发一次

15:24.610 --> 15:25.570
好 这是resize

15:25.890 --> 15:30.850
好 那么这里就关于窗口以及什么元素的尺寸呢 我这里就顺便讲了啊

15:31.090 --> 15:36.850
关于窗口和元素的尺寸 这里不用去费太多口舌 你直接看图一看就明白

15:37.810 --> 15:38.370
看着啊

15:39.410 --> 15:40.610
这个图片一看就明白了

15:41.410 --> 15:45.010
你看着 我们这里有这么多尺寸 首先看屏幕尺寸

15:45.730 --> 15:50.450
屏幕尺寸的话通过什么来获取呢 这是bomb里面的知识啊 我们还没有讲 不过呢

15:50.450 --> 15:53.170
我们去直接学习了 这个也不复杂啊 也没有什么复杂的

15:53.570 --> 15:59.730
就是这些关于元素啊 网页啊 四口啊这宽高啊 我们可以通过这里 这里来获取

16:00.770 --> 16:01.890
好 这里呢 我们看到

16:02.850 --> 16:07.730
整个屏幕的高度 我们怎么来获取呢 window.screen.height

16:07.730 --> 16:12.290
screen是个对象啊 表示屏幕对象啊 它里面有个height属向

16:12.290 --> 16:16.290
表示的是整个屏幕的高度 虽然对我们来说好像没啥用对吧

16:16.290 --> 16:22.690
有的时候呢 可能会有用 你要得到用户的屏幕多大啊 可能你要给它显示不同的东西

16:22.690 --> 16:24.690
screen height

16:25.890 --> 16:29.490
得到屏幕高度 我这个屏幕高度就864

16:29.890 --> 16:35.090
就864个高度啊 注意啊 这是屏幕高度啊 你看我这里窗口无论怎么变化

16:35.810 --> 16:41.490
窗口无论怎么变化 我们再输出这个 是不是一样的 对吧 是指的是屏幕高度啊 屏幕高度

16:42.210 --> 16:47.890
好 然后呢 它的对应的位置呢 就是什么屏幕宽度 屏幕宽度 1536

16:50.260 --> 16:56.180
好 其实呢 本来呢 我的屏幕呢 是1920x1080

16:57.140 --> 17:02.500
本来是这个宽高的 但是呢 我以为把屏幕放大了 所以说它的像素质呢 会相应的减少

17:03.940 --> 17:11.060
如果 如果屏幕里没有放大的话 没有把屏幕放大的话 那么你看到了应该是你的分辨率啊 跟你的分辨率是一样的

17:11.940 --> 17:16.900
好 这是第一个啊 第一个尺寸 好 第二个尺寸呢 是关于浏览器窗口的

17:17.460 --> 17:19.700
叫window outer width

17:20.420 --> 17:22.260
window outer width

17:22.900 --> 17:25.940
以及呢什么window outer height

17:26.820 --> 17:31.540
表示窗口的外尺寸 outer表示外边的吧

17:32.020 --> 17:39.220
外尺寸 什么叫外尺寸呢 就是有些浏览器它包含一些边框 对吧 有些浏览器包含一些边框 谷歌浏览器没有一个边框啊

17:39.780 --> 17:41.380
好像有 看得很细

17:42.500 --> 17:47.540
可以认为谷歌浏览器没有 因为它的边框是一个 边框阴影是发光的东西 它不占尺寸的啊

17:47.780 --> 17:54.820
有些浏览器呢 后会有个边框 对吧 它是包含边框在内的 那么有些浏览器呢 它还有就是 还有上面这个东西 对吧 上面这个什么收

17:55.300 --> 18:03.620
就是输签篮 还有上面这个菜单 对吧 对吧 这些东西呢 它也算在内啊 就是整个这个区 你看这个箭头就知道了啊 就明白了

18:04.020 --> 18:08.980
啊 比方说啊 我们这来获取浏览器的window outer height

18:09.300 --> 18:10.820
得到浏览器外边的高度

18:11.620 --> 18:16.660
window outer width得到浏览器内部的高度啊 内部的高度

18:18.180 --> 18:22.340
ok啊 这两个尺寸 好再往里边呢 就是浏览器

18:23.380 --> 18:28.100
窗口尺寸的啊 就是窗口尺寸啊 窗口尺寸的 我们来看一下啊

18:28.820 --> 18:33.380
窗口尺寸的我们可以得到window点inner width啊 inner width

18:34.180 --> 18:43.220
window点inner width 它是要包含滚动条的啊 它是要包含滚动条的啊 包含滚动条的 那么这个尺寸的得到了就是啥 得到了就是啊

18:44.180 --> 18:50.260
窗口的内尺寸啊 窗口的内尺寸 它是包含滚动条的啊window点inner width

18:50.900 --> 18:55.780
好 比方说啊 这里我们得到window点inner width

18:56.740 --> 19:01.140
啊 多少啊 634 对吧 634 好 咱们把滚动条加上

19:02.260 --> 19:08.980
啊 比方说 咱们把滚动条加上 窗口不变啊 窗口不变 滚动条加上 因为我们蚊子多一点 滚动条就出来了

19:11.330 --> 19:18.530
啊 刚才是多少 634 对吧 634 那现在是不是还是634 所以它包含了滚动条的宽度啊

19:19.330 --> 19:23.010
包含了滚动条的宽度啊 现在刚才是634嘛 那么现在再看一下啊

19:23.970 --> 19:31.250
634 对吧 是不变的啊 这是inner width 啊 inner height 了一样的啊一样的 你看图就明白了啊 你直接看图

19:32.610 --> 19:37.730
inner height 在这包含了下边的滚动条 如果下面有的话啊 它包含下面滚动条

19:38.130 --> 19:44.930
好 然后是这一部分 叫做client width 啊 叫和client height

19:45.810 --> 19:51.410
这两个东西指的是啥呢 指的是四口 这包含滚动条啊 四口的宽高

19:51.970 --> 20:00.290
指的是四口宽高 这个东西很有用的啊 很有用的 它怎么来获取呢 通过根源书来获取啊 得到四口宽高 好 咱们看一下

20:01.250 --> 20:08.450
啊window client document document element client width

20:09.330 --> 20:13.170
啊634对吧 634好 如果出现滚动条了

20:14.610 --> 20:16.690
啊 这里呢 我们把滚动条一加出来

20:18.450 --> 20:19.970
好 如果出现滚动条了 看一下

20:20.850 --> 20:25.730
所以617它不包含滚动条了 对吧 然后再看一下高度client height 高度

20:26.450 --> 20:29.890
是不是546 它不包含下面的距离啊 你怎么拖动都无所谓的

20:30.930 --> 20:36.370
啊546啊 指的是这一部分距离 就是四口的宽高 所以说这里一个非常重要的点

20:36.850 --> 20:40.930
如何来获取一个四口的宽高 那么我们可以通过这两个书像

20:41.970 --> 20:44.530
这两个尺寸client width和client height

20:45.090 --> 20:51.810
你要这意思吧 这两个属性非常非常重要啊 好 这是第一部分的尺寸 好 第二部分的尺寸呢 咱们看这个图

20:53.970 --> 20:59.730
就是除了atm元素之外啊 那么我们再再来看一下啊 刚才因为文字比较多嘛 如果没有文字呢

21:00.210 --> 21:06.450
如果一个文字都没有了 它的高度呢 看一下它的高度 是不是一样的对吧 546 是不是一样的

21:06.770 --> 21:10.850
没有任何区别啊 因为花获取的是四口的宽高啊 四口没有变化

21:11.490 --> 21:16.770
啊 除非立马放大了啊 放大过后呢 你再获取那是不是变了 对吧 它获取的是四口的宽高

21:17.970 --> 21:18.970
好 然后再看啊

21:19.930 --> 21:26.650
呃 尺寸2 尺寸2就是某个元素的client width和client height

21:27.210 --> 21:30.970
并且呢 还有一个尺寸就是office width和office height

21:31.770 --> 21:32.890
那这两个有啥区别呢

21:33.450 --> 21:42.570
client width和client height你看一下 它是不包含边框 它包含那边距 对吧 它包含那边距包含内容 包含那边距包含内容

21:42.890 --> 21:45.370
但是呢 它不包含宽高

21:45.930 --> 21:48.810
明白的意思吧 它不包含边框和滚动条

21:49.530 --> 21:56.490
而外面这个office width和office height呢 它是包含边框和滚动条的 就这个区别

21:56.650 --> 22:00.170
就这个区别 一看那个图就明白了 对吧 还有颜色吗 需要颜色吗

22:00.890 --> 22:06.090
我觉得不需要了吧 不需要了吧 比方说一个DIV 对吧 一个DIV 它如果有滚动条 有边框 有pending

22:06.330 --> 22:11.370
那么client width它得到的是哪一部分 office width得到的是哪一部分 那一看就明白了

22:12.330 --> 22:15.610
好 这是第二个尺寸啊 第二个尺寸 好 第三个尺寸呢

22:17.050 --> 22:24.330
啊 就是官员score tight啊score width 就是它实际内容的宽高啊 实际内容的宽高

22:24.890 --> 22:31.050
好 比方说啊 我们刚才解释了client width uh client和office height对吧 那么再看一下

22:31.210 --> 22:39.450
主要是做对比啊 主要是对做对比 比方这个元素呢 它里边内容很多 它要出现滚动条 对吧 内容很多 它要通过滚动条来滚动它里边内容

22:39.690 --> 22:43.210
那么我想得到这个元素内部 它所有内容就包含

22:43.770 --> 22:50.010
这些外面的内容在在内的所有的宽高了 我们可以得到 可以通过score width和score height来得到

22:50.330 --> 22:53.690
比方说我们刚才不是写了一个网页吗 嗯 这个

22:54.490 --> 22:57.610
test2对吧 test2 我好像也把删了啊

22:58.410 --> 23:01.130
哎 删了吗 哦 这里啊 就这个网页嘛

23:02.490 --> 23:04.490
好 看一下啊

23:11.160 --> 23:16.040
好 检查啊 你看这个p元素很小 对吧 很小 但是呢 我们可以获取这个p元素的什么

23:16.680 --> 23:18.920
获取它的client width

23:20.200 --> 23:24.440
不包含滚动条的宽度 你看我们给这个p元素设计宽度多少 是不是100

23:24.760 --> 23:29.560
但是加上滚动条它就没有100了 对吧 不包含滚动条的宽度

23:30.360 --> 23:36.040
好 那么同样的道理啊 同样的道理client height呢 是不包含滚动条的高度

23:36.520 --> 23:40.440
那如果我们获取的是offset width

23:41.800 --> 23:47.560
就是包含滚动条 包含边框 包含它所有能看得见的东西 在页面上能看得见的东西

23:48.120 --> 23:50.920
它的宽度 好 然后offset height

23:51.400 --> 23:53.400
它所有能看得见的东西的高度

23:54.040 --> 23:58.920
不要这意思吧 好 但是呢我们可以用这个什么score height

23:59.400 --> 24:04.940
表示我不管你有没有滚动条 它里边实际内容

24:05.500 --> 24:11.020
算出来的高度 哪怕有些东西看不见 现在没滚动到这个位置 对吧 实际内容的高度

24:11.660 --> 24:14.300
好 然后呢可以通过score top

24:16.460 --> 24:19.340
score什么high width

24:19.900 --> 24:24.780
宽度来得到它实际的包含滚动条之后的宽度 对吧 可以通过这两个获取

24:25.260 --> 24:28.860
那么通过这两个获取呢 我们就可以啊来实现一些效果

24:29.260 --> 24:34.700
比方说我们要回到底部 对吧 回到底部 那么怎么来回到底部呢 回到这 回到这

24:35.100 --> 24:38.300
我们到这 我们要让点一下 比方说一个按钮啊

24:38.700 --> 24:42.300
有一个按钮 点一下过后呢 可以让滚动条到那个到那个位置

24:43.340 --> 24:47.580
照最下边 最右边的位置 回到啊 到底部

24:48.460 --> 24:51.260
啊 到底部 好 这里呢 我们给它一个

24:52.380 --> 24:53.580
啊 这样子吧 get

24:54.300 --> 24:58.300
啊 tag name 我这里就简单写一下啊 tag name button

24:58.460 --> 25:02.940
啊 取第一个 第一个按钮啊 到顶部 好 第二个按钮呢 是到底部

25:03.500 --> 25:10.620
啊 下表为一啊 到底部 好 到底部怎么办呢 有一种非常直接出报的办法 你把这个纸设得非常非常大

25:11.340 --> 25:17.340
啊 当设置这么大是无销的 对吧 是无销的 他只能取到最大纸 那么把lef成了也设得非常非常大

25:18.380 --> 25:22.140
好 看一下啊 看一下 我们这样子来处理 到底部 你看是不是到这边了

25:22.620 --> 25:24.860
但他取不到这么大的纸啊 取不到这么大的纸

25:25.580 --> 25:30.460
好 那么但是如果万一啊 万一他真的就这么多了 又超过这么多这么办了

25:30.940 --> 25:36.300
当然不太可能啊 但是可以这样做啊 但是不太好 因为写起来很快 我们最好是设置为什么呢

25:36.780 --> 25:47.260
设置为他的scroll height 对吧 设置为这个纸 设置为这个纸 这里面呢 设置为什么scroll weight 对吧 设置为这个纸

25:48.140 --> 25:56.220
好 来看一下吧 这是滚动scroll left scroll top 那如果我把它设置为 把这个滚动高度设置为什么scroll height 是不是整个这一块高度了

25:56.620 --> 26:03.740
scroll height 是不是整个这个高度 那是不是超出了他的有效范围了 他一定超出他的有效范围了 对吧 他最多的有效范围应该大概在这

26:04.700 --> 26:11.580
scroll top的最大值应大概在这 对吧 下面要给你元素留点空间吧 对吧 还有一个元素的空间呢 对不对 应该大概在这

26:12.140 --> 26:17.740
但是我们无所谓 我们就给他设置scroll topscroll height 给他设置整个这个高度 他超出这个纸

26:18.140 --> 26:22.700
那么他自然是滚动到最最最最下边了 我们可以这样子来处理啊

26:23.660 --> 26:29.340
看着 哎 直接点就行了啊 你看 顶部 底部 顶部 底部

26:30.620 --> 26:35.500
好 这是关于这个尺寸这一块啊 这些当途已经能够解决你所有问题了

26:36.700 --> 26:37.340
好 下面

26:38.860 --> 26:39.740
contact menu

26:40.620 --> 26:49.020
contact menu 就是这个是指的是什么呢 contact menu 我说要解释那个数语啊 指的是可选菜单啊 就是要上下文菜单

26:49.580 --> 26:57.100
这个上下文菜单又是啥意思呢 就是点击右键出来的菜单 就是点击右键出现的菜单 就是contact menu

26:57.660 --> 27:05.180
他可以给元素做这个事件 也可以给温豆注册事件啊 都想都想 好 那么这个事件呢 可以阻止默认行为 阻止到之后呢

27:06.780 --> 27:10.620
你就看不见右键菜单了啊 就是右键菜单

27:12.060 --> 27:13.740
右键菜单事件

27:14.700 --> 27:22.300
右键菜单事件 有些同学说 那不直接注册右键就完事了嘛 但是右键菜单它不一定是点鼠标右键出来的

27:22.700 --> 27:29.820
它不一定的 不一定的 可能还会通过一些键盘 但是我不知道快捷键是啥啊 但是肯定是可以通过快捷键来把它打出来的

27:30.380 --> 27:35.980
就是我们的电脑实际上是可以完全抛弃鼠标 纯用键盘来做的 只是有的时候呢 不是很方便而已

27:36.700 --> 27:38.300
好 咱们来看一下啊这个事件

27:40.890 --> 27:43.290
呃 我们这里呢 比方说有一个P元数

27:44.250 --> 27:54.330
还有DIV吗 啊DIVDIV元数啊 给大家试试一下样式啊DIV啊 一个宽度了300个像素啊 高度了300个像素啊 背景颜色了

27:55.930 --> 27:57.130
Badground啊

27:57.130 --> 27:59.690
Badground啊 微粉红色吧 Pink

28:02.630 --> 28:12.550
好 接下来我们来看一下啊 好 这是一个DIV 好 我现在希望呢 在这个DIV上面点右键的时候呢

28:12.550 --> 28:20.150
它出现一个不一样的右键菜单啊 来这里点右键的时候 那怎么办呢 我就给找到这个DIV啊 找到这个DIV document

28:21.350 --> 28:22.470
query selector

28:23.110 --> 28:26.950
DIV 找到它 然后给它注冊什么呢 on contact 什么运用

28:27.750 --> 28:29.750
当在DIV上面点击

28:31.270 --> 28:33.830
点击这个右键的时候 有出现右键菜单的时候

28:35.350 --> 28:36.230
我阻止

28:37.590 --> 28:38.070
prevent

28:39.510 --> 28:40.790
阻止它的默认行为

28:41.670 --> 28:42.470
好 看一下啊

28:43.190 --> 28:43.990
点击右键 你看

28:45.110 --> 28:47.830
我录屏的应该可以 你们应该可以看到我点到右键了

28:48.310 --> 28:53.990
点了右键 你看 有没有出现这个菜单没有 对吧 但是外面就可以啊 外面可以 在这里可以阻止默认行为了

28:54.550 --> 28:55.190
原来的意思吧

28:56.310 --> 29:01.910
那如果你是给温斗注册时间的话 那整个窗口里边所有的右键菜单全部都出不来了

29:02.150 --> 29:06.310
都出不来了 但是一般我们不会这样做啊 一般不太会这样做 除非做一些

29:06.950 --> 29:09.830
网页游戏的时候呢 可能你把右键给它隐藏掉

29:10.230 --> 29:14.790
右键你要做一些别的事 对吧 比方说人物移动啊之类的东西 那么你要把菜单给它隐藏掉

29:15.190 --> 29:17.670
好 那这里看 是不是在这里边就出不来了

29:17.990 --> 29:21.910
好 出不来过后呢 我们怎么来做自己的菜单呢 看着啊 这里

29:24.470 --> 29:25.910
做作业还蛮多的对不对

29:27.030 --> 29:28.470
怎么来做一个自己的菜单呢

29:29.350 --> 29:32.070
算了 这个留作业啊 这个留作业 你们自己去想

29:32.470 --> 29:35.670
原理就是你自己做一个DIV啊 自己做一个DIV

29:36.710 --> 29:41.750
然后呢 点击的时候把显示出来 把显示到鼠标位置啊 在鼠标位置显示出来

29:42.150 --> 29:46.150
你自己去搞定啊 自己去搞定 好 这个留作业啊 第一个作业

29:48.570 --> 29:49.290
第一个作业啊

29:51.770 --> 29:58.340
一呃右键菜单 啊 第一个作业就是实现一个

30:06.710 --> 30:09.350
啊 这一颗作业还蛮多的 呃 实现一个

30:10.070 --> 30:15.910
呃 制定义的右键菜单啊 交给你们去做啊 我后面讲

30:17.190 --> 30:21.110
好 这是关于右键菜单 好 下边这个post

30:21.910 --> 30:23.590
什么 粘贴事件

30:24.470 --> 30:25.430
粘贴事件

30:26.230 --> 30:27.910
下边这个copy

30:29.190 --> 30:30.710
复制事件

30:31.430 --> 30:36.070
复制事件 就是你在康处加c 或者是点击右键复制的时候

30:36.470 --> 30:38.310
粘贴的时候 它会触发这些事件

30:38.710 --> 30:39.590
所以触发这些事件

30:40.470 --> 30:44.150
好 那么看一下这个事件啊 这个两个事件都可以阻止默认行为

30:44.390 --> 30:47.430
所以说 我们首先说啊 这两个事件都可以阻止默认行为

30:49.110 --> 30:53.110
好 看着啊 咱们呢比方说 这里边有个input元素啊

30:53.590 --> 30:59.050
一个input元素 或者是text arrear嘛 text arrear

31:00.570 --> 31:03.530
啊 然后呢 我们给这个text arrear 注册一个

31:04.410 --> 31:07.530
复制事件 就是有的时候呢 我们网易上的东西呢 它不允许

31:07.770 --> 31:09.610
不允许用复用户来复制

31:09.930 --> 31:11.610
或者呢 不允许用复来粘贴

31:12.490 --> 31:13.610
query is negative

31:14.410 --> 31:17.770
text arrear 找到 给它注册什么

31:18.010 --> 31:19.210
arm post

31:20.170 --> 31:23.370
post 这个就该怎么读啊 past has a post

31:23.690 --> 31:29.530
post吧 应该是 past or paste

31:30.010 --> 31:31.690
paste 粘贴 粘贴

31:32.650 --> 31:36.010
paste 这个事件我用的比较少啊 用的确实比较少一点

31:36.570 --> 31:38.650
可以阻止默认行为的啊 比方说啊

31:38.810 --> 31:41.130
edir prevent default

31:41.690 --> 31:46.090
啊 阻止默认行为 咱们来看一下啊 这样阻止默认行为过后呢 我还能粘贴吗

31:47.130 --> 31:50.650
好 看着 我们在这里呢 随便写些东西吧 他随便写些东西

31:50.730 --> 31:51.850
啊 就这个吧 复制

31:52.090 --> 31:54.650
康书家C或者是有右键啊 复制

31:54.970 --> 31:58.970
这边呢 点击右键 粘贴 你看有效啊 没效果对吧

31:59.210 --> 32:03.690
不能粘贴 比方说有些网站里边 他让你打题啊 打题的时候

32:04.170 --> 32:06.090
房子里复制粘贴过来 他不让你复制粘贴

32:06.410 --> 32:08.410
啊 不让你复制粘贴 你怎么让都粘贴不了

32:08.970 --> 32:12.250
啊 怎么样都粘贴不了 但是呢 如果会一点技术的话

32:13.610 --> 32:18.410
还是可以搞定 看着 检查 我只是在限制页面嘛

32:19.690 --> 32:20.410
小cash

32:21.370 --> 32:21.770
粘贴

32:24.630 --> 32:28.630
就粘贴的嘛 对不对 我们学过有懂技术的还怕这个吗

32:28.870 --> 32:36.310
他说呢 如果你不懂技术的话啊 只在这里写的话啊 你是只能自己写啊 不能复制粘贴的啊 复制粘贴 粘贴不了

32:37.030 --> 32:37.350
好

32:38.070 --> 32:45.590
还有一种的是防制复制的 防制复制的事件 叫做copy copy知道不对吧 为什么叫concule加c呢 因为它是

32:46.710 --> 32:46.870
c

32:47.510 --> 32:47.750
copy

32:48.390 --> 32:53.830
好 这里呢 也可以组织默认行为 好 组织默认行为 那我们看一下啊 我们复制这里边的内容

32:54.310 --> 32:54.550
复制

32:55.350 --> 33:00.150
concule加c复制粘贴过来 能粘贴过来吗 粘贴不过来 看没有 点击右键复制

33:00.630 --> 33:06.630
看一下能复能粘贴吗 说粘贴不过来啊 他不允许的复制啊 这是组织他们的默认行为

33:07.510 --> 33:11.350
好了 有了这个知识过后 我们再回过头来看之前的键盘事件 做一个

33:12.630 --> 33:17.750
数字文本框子的时候 是不是可以搞定的 不让它粘贴不就完了吗

33:18.310 --> 33:25.270
对不对 就这么简单啊 那里阻止不了它粘贴 那里不让它粘贴就完事了 对吧 给这个input设置了个什么

33:25.590 --> 33:27.670
粘贴事件 不让它粘贴就完事了

33:28.230 --> 33:29.670
好 这是关于这一块啊

33:30.470 --> 33:31.110
关于这一块

33:32.070 --> 33:39.750
哦 这里还有一个啊 还有一个就是cut cut是剪切 剪切事件 我们知道复制和剪切的区别吧 对吧

33:40.870 --> 33:41.910
懂吗 懂这个区别吗

33:43.030 --> 33:43.990
这叫剪切

33:44.870 --> 33:52.150
console加x 这叫剪切 或者是点击右键剪切 对吧 剪切过了再来复制 再来粘贴嘛 对不对

33:53.190 --> 33:57.750
一个剪切事件啊 剪切事件是一样的啊 是一样的 也可以组织他的默认行为

33:58.710 --> 34:03.750
好 我再说一下 在这三个事件里边 它们的事件对象呢 还有可以操作的

34:05.190 --> 34:05.670
看一下啊

34:07.190 --> 34:09.830
这个事件对象呢 是可以操作的 比方说吧

34:12.390 --> 34:13.190
比方说这个

34:14.230 --> 34:20.390
paste啊 paste这个事件 好 这个事件呢 我们可以这样子来处理 就是你粘贴可以粘贴

34:20.870 --> 34:27.590
粘贴的时候呢 就是我们前面加几个字啊 来源于别的网页啊 来源于别的网页 这个很有意思啊

34:27.990 --> 34:32.230
那这个东西怎么来玩呢 他是这里边啊 这个事件参数里边呢 给你提供了一个

34:32.870 --> 34:39.510
属性叫做clip clipboard啊 这个了解就行了啊 了解就行了 因为我们用的很少 clipboard

34:39.990 --> 34:47.430
表示剪切版剪切版对象 这里有兼重性问题啊 所以说 如果你要考虑兼重性的话 我们一般是这样子写

34:47.910 --> 34:52.950
wind clipboard 一般是这样子写 他有这么一个对象啊

34:53.430 --> 34:57.590
当然呢 如果我们现在也不太多 不太过分去考虑这个东西 对吧

34:58.230 --> 35:04.150
后面还有一个 clipboard data 我忘了这个必是大写是小写的 data

35:05.430 --> 35:12.550
我试一下吧 试一下就知道了 打印出来 打印出来 clipboard data 保存啊 看一下

35:13.270 --> 35:19.830
咱们呢 在这里边去粘贴的 粘贴的时候啊 粘贴的时候 这里粘贴

35:20.550 --> 35:24.150
好 你看 是不是打印出来了 打印出来了

35:25.270 --> 35:34.710
clipboard data 打印出来了 他是这么一个对象啊 一个对象 好 这个对象里边呢 他可以存有很多东西啊 存有很多东西

35:35.430 --> 35:39.270
我们呢 可以通过这个对象里边的某一些方法呢来获得他

35:40.070 --> 35:44.950
来获得他就是剪切版里边啊 剪切版里边的数据

35:45.590 --> 35:50.550
好 怎么来获取呢 他里边有个方法叫做get data get data得到数据

35:51.350 --> 35:56.710
然后这里边有个参数就是数据的格式 因为我们知道 复制的话 可以复制图片 可以复制文件

35:57.190 --> 36:03.510
也可以复制一个字不错对吧 复制一个文本 那么我们要得到了剪切版里边 他包含了很多东西 有可能是文件

36:03.910 --> 36:09.510
有可能是图片 有可能是普通文本 那么你要得到的数据是剪切版里边的哪一种内形的数据

36:09.990 --> 36:12.470
这里的内形呢 是一个MIME

36:13.030 --> 36:17.510
MIME内形 我以前在讲ATM和CSS的时候说过这个内形对吧

36:17.830 --> 36:22.710
它指的是什么呢 指的是互联网传输的一个标准格式的字不错来表示一个内形

36:23.110 --> 36:26.790
好 比方说一个普通的文本的话 它的标准格式字不错是这个

36:27.350 --> 36:27.990
Texplan

36:28.870 --> 36:29.750
一个纯文本

36:30.390 --> 36:35.110
纯文本的格式的数据 好 那么这句话什么意思呢 从剪切版里边

36:35.750 --> 36:39.430
我们复制的也好 剪切也好 都是把数据放到了剪切版

36:40.230 --> 36:41.830
这个剪切版是一块内存空间

36:42.710 --> 36:47.430
我们从这个内存空间里边得到它 得到这个文本数据

36:48.230 --> 36:52.070
它只有一种文本数据 对吧 好 这里比方说啊 我们这里

36:52.870 --> 36:58.230
粘贴 你看 我们的文本数据是不是这个 对吧 因为我们之前复制的是这个吧 我们比方复制它

36:59.190 --> 37:02.230
康书加C复制它 然后呢 我们这里右键

37:03.030 --> 37:08.070
粘贴 你看 这不得到文本数据了 对吧 好 那么我们要做个事情就是

37:08.630 --> 37:11.910
得到这个文本数据之后 得到这个文本数据之后

37:12.470 --> 37:18.950
Data 我们把这个数据改一下 改成啥呢 在它前边给它拼借个字不错 来自于

37:22.470 --> 37:26.630
来自于粘贴 来自于粘贴 在拼借上一个东西 我可以改

37:27.190 --> 37:31.270
改了过后你只是改了字不错 它并不会影响结果 那怎么办呢

37:31.430 --> 37:33.270
我还可以把数据给它设置回去

37:34.230 --> 37:38.550
一个剪切板 你可以想象一个就是一块内存空间 或者是就是一个白板

37:39.350 --> 37:44.870
你每一次复制也好 剪切也好 都是把数据放到这个剪切板 这个白板上面

37:45.350 --> 37:50.310
你可以从这个白板上面去拿到这个数据 这个白板上面可以有图片 可以有文件 也可以有

37:50.790 --> 37:54.390
普通格式的文本 我们这里拿的是什么 拿的是普通格式的文本

37:54.870 --> 37:57.910
对吧 好 那么我们拿到这个文本 然后呢

37:58.870 --> 38:04.230
给它做一些更改 更改之后呢 再把这个文本重新粘到这个剪切板上面 重新给它覆盖掉

38:04.550 --> 38:09.830
那怎么来覆盖呢 可以通过它的set data 设置数据 设置数据

38:10.550 --> 38:13.750
好 设置数据的话 那么有两个参数 第一个参数是数据内销

38:15.190 --> 38:18.390
是一个普通文本 好 第二参数呢 是数据的值 就是data

38:19.350 --> 38:21.990
但是遗憾的是呢 一个代码里随便写

38:22.950 --> 38:26.790
它没有效果 它不能没有效果 为什么没有效果呢 因为

38:27.350 --> 38:33.750
浏览器呢 它要考虑到用户的安全和用户体验 就是有的时候 它认为这个是不安全的

38:34.070 --> 38:41.750
你随意的让你去修改剪切板的话 会导致呢 用户可能复制的是这个东西 一个粘贴的是另外一个东西 用户可能没注意

38:42.710 --> 38:44.230
可能会导致一些不安全的问题

38:44.950 --> 38:49.670
没啥意思吧 比方说啊 你在网页上聊天 网页上也可以聊天嘛 对吧

38:50.230 --> 38:54.710
你想给别人发力的 就是让你别人给你赚点钱 让你的父母给你赚点钱

38:55.270 --> 38:57.190
啊 赚钱的时候呢 你要告诉他的什么

38:57.750 --> 39:02.390
卡号对不对 你剪复制卡号 然后粘贴过去呢 是另外一个卡号 你没有注意

39:03.190 --> 39:06.390
那么是不是造成安全问题 所以说现在的浏览器呢 基本上

39:07.110 --> 39:10.630
这些东西不允许你操作 不允许你操作 以前是可以的

39:11.030 --> 39:16.790
以前在 特别是IE的时候 IE打管这些 但是现在IE也不行了 现在IE也不行了

39:17.190 --> 39:20.470
以前的IE就版本的时候呢 他是允许你这样做的 但是现在不行了

39:21.190 --> 39:24.470
但是我们可以 还有还有一个东西啊 还有一个东西可以轻空剪切板

39:25.270 --> 39:30.790
可以轻空剪切板 就是clear data啊 聊一下就行了 轻空剪切板

39:31.270 --> 39:36.150
这是数据内容 对吧 轻空剪切板 聊一下就行了 这里呢

39:36.950 --> 39:42.150
我们学习这一块知识的 可以做啥呢 还是说我们之前的数字文门框嘛 对吧

39:42.630 --> 39:45.110
我们可以让它粘贴 但是呢 只能粘贴数字

39:45.830 --> 39:50.310
哎 这个打算咋做了 可以粘贴 但是只能粘贴数字 我们可以这样子写 看着啊

39:53.380 --> 39:56.420
你可以粘贴没问题 但是呢 我只允许你粘贴数字

39:57.220 --> 40:01.380
好 我们这个地方呢 就可以使用一个什么 政则表达是来判定 对吧

40:01.780 --> 40:06.820
可以使用一个政则表达是来判定 你可以粘贴没问题 但是你一定要粘贴数字

40:07.380 --> 40:14.100
好 那么我们来看 从剪切板里面得到你的文本 对吧 从剪切板里面得到文本 是吧

40:14.100 --> 40:20.180
Clip,board,data,getdata,tagsplay

40:21.220 --> 40:27.460
从剪切板里面得到文本 好 当然要判断一下啊 如果这个文本有东西啊 如果有文本的话

40:27.940 --> 40:32.980
好 如果有文本的文本的话 我们来判断一下这个文本 是不是纯数字 是不是纯数字

40:33.540 --> 40:38.500
怎么来判断 是不是纯数字呢 怎么来判断 是不是纯数字呢 是不是政则表达是 对吧 政则表达是

40:39.140 --> 40:41.620
纯数字嘛 对不对 写杠地啥

40:42.580 --> 40:48.500
一个或多个 对吧 这才是要纯数字 对不对 好 允许你粘贴啊 但是前提条件呢

40:49.140 --> 40:50.660
test一下啊 看一下这个文本

40:51.380 --> 40:57.220
是不是一个纯数字 如果你有文本 并且是一个纯数字的话 ok 允许你粘贴啊 允许你粘贴

40:58.020 --> 41:02.260
好 否则的话 就反过来 如果你没有文本

41:03.220 --> 41:10.340
或者是你不是一个纯数字 你不是一个纯数字 那么这种情况下是不允许粘贴的

41:11.060 --> 41:16.980
prevent default 对吧 就不允许你粘贴 那么这个数字文本框就搞就非常完善了

41:17.380 --> 41:26.260
看一下啊 我们自己随便写不进去啊 写数字也可以 那么我们给它复制一个abc啊 就随便复制一个东西 好 粘贴过来 你粘贴不了 粘贴不了

41:26.580 --> 41:32.500
但是如果你是一个123 是一个数字呢 可以粘贴 看没有 就非常非常的完善了

41:33.700 --> 41:34.980
好 这是官员这么一块

41:36.580 --> 41:44.020
这一张用的都不多啊 用的都不多 ok啊 这是就是我们补充了所有的时间了 那就真的没啥时间了啊

41:44.820 --> 41:50.660
可能有遗漏啊 但是呢 就算有遗漏 那也是百分之零点几的机对会遇到

41:51.380 --> 41:55.780
反正我能想到绝大部分能够 我们要用的时间都全部讲完了啊 全部讲完了

41:57.140 --> 41:58.900
好 ok啊 那么这几课了作业

41:59.860 --> 42:07.540
作业 第一个作业已经说了对吧 右下台单好 我把视频剪剪一下啊 然后把这个作业全部给写到这

42:10.300 --> 42:13.100
好 我这里就加了一道题啊 就是关于许愿墙

42:13.980 --> 42:20.140
啊 这道题呢 已经做好了啊 你不用去看里边代码啊 不用去看里边代码 我们直接运行出来看效果就行了

42:22.620 --> 42:30.780
好 说小一点啊 放心 好 这里就许愿墙啊 就是一些小的贴纸啊 贴纸放到这儿

42:30.940 --> 42:37.660
他们的位置是随机的 颜色呢也是随机的啊 也是随机的 文字呢 就随便写了一些啊 随便写了一些文字

42:38.020 --> 42:44.300
然后呢 我们可以在下边的稳定框里边输入一些文字啊 输一些文字 一回车啊 就随机产生一个小贴纸放到这儿

42:45.020 --> 42:49.900
然后呢 这里随便输入一些文字 一回车放到这儿 没问题吧

42:51.180 --> 42:57.740
好 然后呢 我这里有个额外的要求 我这个是公开可直播课讲的 因为我当时呢 讲的时候呢

42:58.220 --> 43:03.180
很多同学呢 我不能确定他们有没有学 就是有没有就是这些基本功

43:03.660 --> 43:10.380
所以说呢 我这里呢 就没有讲那些拖动啊 因为当时时间也不太够了 但是我视频课程里面时间是随便的

43:10.700 --> 43:15.340
因此呢 我这里没有讲拖动 因此呢 我这里要求啊 要把拖动加上

43:16.060 --> 43:20.620
拖动功能要加上啊 说一下啊 在这里 打个注字啊 我在这里

43:21.580 --> 43:25.020
就是说明 在这里写个吧 说明

43:27.700 --> 43:29.860
一 要添加拖动功能

43:30.660 --> 43:36.420
添加拖动功能 就是我们鼠标放上去过后呢 要能够拖动它 要能够去拖动这些

43:36.900 --> 43:42.900
这些玩意儿 好 这是第一个啊 添加拖动功能 啊 并且呢 要求啊 不能拖动

43:43.860 --> 43:48.100
出边界 不能拖动到页面外

43:48.900 --> 43:54.340
啊 不能不能跑出边界啊 我们整个页面这个区域就这么大 你们能跑出边界

43:55.060 --> 44:01.060
好 这是第一个功能啊 第二个功能 第二个功能呢 是如果页面尺寸变化

44:03.100 --> 44:05.980
如果它尺寸变化了 那么啊

44:07.580 --> 44:09.820
贴纸啊 贴纸的位置

44:10.620 --> 44:13.980
会发生相应的变化

44:14.540 --> 44:20.540
始终保证贴纸可见 始终保证要贴纸的可以看见

44:21.100 --> 44:25.660
就比方说这个页面尺寸发生的变化 对吧 发生了没有 我这里没有处理啊 我这里是没有处理的

44:25.980 --> 44:29.740
那么这些贴纸呢 它也会跟着我左边跑 跟着我左边跑

44:30.220 --> 44:32.220
明白这个意思吧 总之呢

44:33.100 --> 44:35.980
要保证 要保证啥呢 就是说

44:36.860 --> 44:39.900
贴纸的始终要是可见的 好好想一想啊

44:40.540 --> 44:42.540
不简单哦 光做这个东西

44:43.100 --> 44:45.820
一两个小时得要 我估计得要一两个小时

44:46.300 --> 44:51.420
是吧 这个东西做完了过程呢 也就差不多了啊 因为我们这第九节课它学习的

44:51.660 --> 44:55.660
这些事件啊 这些知识里边 其实最重要的是这些尺寸

44:56.220 --> 44:58.620
而我们这个许愿墙就会用到这些尺寸的问题

44:59.100 --> 45:02.060
包括怎么窗口尺寸发生改变的时间也会用到

45:02.700 --> 45:06.540
好吧 好 搞定这些这个功能啊 去好好试一下

45:07.260 --> 45:09.260
这是第九节课的东西

45:09.740 --> 45:15.180
呃 后边如果还有什么我没有讲到的啊 我再进行补充 好吧 下节课我来讲这个作业

