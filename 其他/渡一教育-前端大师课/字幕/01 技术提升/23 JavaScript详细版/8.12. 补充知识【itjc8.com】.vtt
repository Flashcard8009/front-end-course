WEBVTT

00:00.000 --> 00:16.160
来补充一些知识 因为我又想到了一些东西

00:16.420 --> 00:19.500
其实这些知识用的不多 就第一个部分

00:19.740 --> 00:24.100
就是关于元素位置 因为我们之前讲了什么鼠标位置

00:24.360 --> 00:28.440
还有什么元素的尺寸 但是还没有讲元素位置

00:28.700 --> 00:31.780
元素位置这一块它有的时候会用到

00:32.040 --> 00:36.140
后边什么事件模拟啊 什么其他的补充啊 这些东西就用到少一点了

00:36.140 --> 00:38.940
咱们想到了就提一下吧 反正视频教程

00:39.140 --> 00:42.260
我们补充知识这一块呢 我们就可以无限的扩展它

00:43.040 --> 00:46.620
好 第一部分呢 元素位置 首先我介绍一个属性啊

00:46.880 --> 00:49.700
这个属性是每个元素都有的 每个动物元素都有的

00:49.960 --> 00:55.060
它叫做offset parent 这个属性干嘛的呢 它是用于得到啊 获取

00:56.600 --> 00:58.400
获取某个元素

00:59.160 --> 01:01.980
第一个丢位的

01:02.740 --> 01:03.780
祖先元素

01:04.280 --> 01:05.820
祖先元素

01:06.840 --> 01:08.380
如果没有

01:08.580 --> 01:09.860
则得到

01:10.380 --> 01:10.900
Body

01:11.140 --> 01:12.180
得到Body

01:12.680 --> 01:13.700
好 举个例子啊

01:14.980 --> 01:16.260
比方说TES-1

01:17.540 --> 01:20.620
我们这里边呢 我们写上这么一个

01:20.880 --> 01:23.180
元素啊 给它一个box1

01:23.940 --> 01:25.220
dvbox2

01:25.740 --> 01:27.020
dvbox3

01:27.780 --> 01:29.580
OK啊 写这么三个dv

01:29.840 --> 01:32.140
然后呢分别给它们写一些内样式

01:32.660 --> 01:33.420
box1

01:34.180 --> 01:37.780
好 给它设置上一个宽度宽度300个箱数嘛

01:37.980 --> 01:39.780
高度了300个箱数

01:40.040 --> 01:44.140
好 然后呢 一个背景颜色啊 背景颜色为

01:46.210 --> 01:47.250
啊

01:48.010 --> 01:48.650
bbb

01:49.410 --> 01:50.730
好 box2

01:51.250 --> 01:53.890
宽度了为300个箱数

01:54.150 --> 01:56.190
然后呢 高度了为300个箱数

01:56.450 --> 01:58.750
然后呢 背景颜色啊

01:59.010 --> 02:01.570
宽度高度200嘛啊 200

02:01.830 --> 02:03.690
背景颜色的话为

02:04.130 --> 02:04.890
呃

02:05.150 --> 02:05.930
888

02:06.690 --> 02:08.730
好吧 稍微 稍微声音一点啊

02:09.130 --> 02:10.930
编写编看嘛啊 编写编看

02:12.680 --> 02:13.560
好 看一下啊

02:14.080 --> 02:15.480
好 这是这两个元素了啊

02:16.840 --> 02:19.120
然后呢 给第一个元素呢 设置一个marking

02:19.320 --> 02:21.120
啊marking 100个箱数

02:21.600 --> 02:23.600
啊 你上边你下边100个箱数

02:23.840 --> 02:25.960
好 给第二个元素呢 也设置个marking

02:26.200 --> 02:27.600
啊marking 100个箱数

02:28.880 --> 02:31.760
OK 呃 上边的marking合并了 对吧

02:31.880 --> 02:33.760
marking合并了 那这样子吧

02:33.760 --> 02:36.160
我把第一个元素呢 ovheater 让它不要合并

02:36.280 --> 02:37.760
对吧 把它变成bfc

02:38.320 --> 02:39.480
OK 变成这个样子啊

02:40.000 --> 02:41.440
好 这是box1

02:42.120 --> 02:42.720
box

02:42.840 --> 02:44.080
啊 不写了啊 不写

02:44.440 --> 02:45.280
好 box3

02:46.800 --> 02:49.120
3的话 那么就是宽高100

02:49.400 --> 02:50.440
marking 100

02:50.680 --> 02:52.720
bfc 为333

02:54.320 --> 02:57.280
好 然后呢 这里给它一个overflow item

02:57.360 --> 02:58.680
避免它的外边绝合并

02:59.120 --> 03:00.320
overflow item

03:01.680 --> 03:03.240
好了 写了这么三个盒子啊

03:03.760 --> 03:07.040
接下来呢 我们来得到一下 这三个盒子的就是DIV

03:08.600 --> 03:09.240
script

03:09.640 --> 03:10.560
好 DIV1

03:11.080 --> 03:13.480
DIV1 document query selector

03:14.600 --> 03:15.760
query selector

03:16.600 --> 03:18.720
啊 第二 box1

03:19.840 --> 03:22.120
啊 负责啊 两个三个

03:22.920 --> 03:25.600
二三啊 这个是二

03:26.080 --> 03:26.760
这个是三

03:27.760 --> 03:29.040
OK啊 写好了啊

03:29.280 --> 03:31.800
那么这里咱们来看一下啊 首先看DIV3

03:32.360 --> 03:36.040
DIV3里边有个属性叫做offset parent

03:36.640 --> 03:37.800
好 看一下得到的是啥

03:38.600 --> 03:39.080
body

03:39.760 --> 03:40.760
为什么得到是body呢

03:41.280 --> 03:43.520
它跟那个绝对定位是一样的啊

03:44.040 --> 03:47.720
你就把它当成是绝对定位元素的 尽管它不是啊 尽管它不是

03:48.040 --> 03:50.400
那它找的方式呢 是跟绝对定位是一样的

03:50.600 --> 03:54.280
它找啥呢 它一直往复元素去找 找祖先元素嘛 对吧

03:54.720 --> 03:57.920
往复元素找 看一下这个复元素是不是定位元素呢

03:57.920 --> 04:00.080
不是 继续往上找 看它是不是定位元素呢

04:00.080 --> 04:01.400
不是 继续往上找

04:01.680 --> 04:02.600
好 直到找到body

04:02.800 --> 04:05.160
对吧 它找不到定位元素了 它只 那么就是body

04:05.640 --> 04:07.240
是这么个意思啊 这是parent

04:07.560 --> 04:08.360
offset parent

04:09.200 --> 04:13.480
那么比方说DIV2offset parent

04:14.120 --> 04:15.040
还是body 对吧

04:15.640 --> 04:19.200
好 那么如果我这里把box2设置为了

04:19.480 --> 04:21.840
或者说把box1设置为了

04:22.200 --> 04:23.200
play-in-relative

04:24.080 --> 04:25.600
那么现在我们再看 再看

04:26.600 --> 04:29.160
那么DIV2

04:29.560 --> 04:31.920
应该说DIV3

04:33.000 --> 04:34.560
the offset parent

04:34.840 --> 04:35.520
得到的是啥呢

04:36.240 --> 04:37.760
所以DIV1 对不对

04:37.760 --> 04:42.200
DIV2offset parent得到的是啥呢

04:42.440 --> 04:44.200
得到的是也是DIV1

04:44.440 --> 04:47.480
好DIV1offset parent得到的是啥呢

04:48.480 --> 04:50.000
所以得到的是body 对吧

04:50.400 --> 04:52.480
就这么个意思啊 就这么个意思

04:53.000 --> 04:55.040
好 然后这东西本来是没啥用的啊

04:55.040 --> 04:56.000
本身是没啥用的

04:56.080 --> 04:58.160
它可能要配合后边两个东西 才有用

04:59.280 --> 05:02.680
然后我再说一下 body的 parent

05:02.680 --> 05:05.440
如果要获取body offset parent的话

05:06.240 --> 05:08.800
为now 它只是now

05:09.440 --> 05:11.040
这么个意思啊 这么个意思

05:11.520 --> 05:13.840
好 那么我们来看一下 document body

05:13.840 --> 05:16.480
the offset parent得到的是啥呢

05:16.480 --> 05:17.160
得到的是now

05:18.120 --> 05:18.680
没问题吧

05:19.080 --> 05:22.120
好 接下来我们来看另外两个属性

05:22.520 --> 05:24.680
这下面这两两个属性 跟上面这个有关系

05:25.200 --> 05:26.960
offset left offset top

05:27.280 --> 05:29.440
指的是位置 元素的位置

05:30.080 --> 05:31.800
这个位置是相对于谁的呢

05:32.680 --> 05:34.400
一个snaps 当然是左边的位置 对吧

05:34.440 --> 05:36.160
横坐标 一个top 中坐标

05:36.160 --> 05:37.840
它关键是相对于谁

05:38.400 --> 05:40.320
相对于谁的坐标呢

05:40.320 --> 05:45.760
相对于该元素的offset parent的坐标

05:45.760 --> 05:46.960
它相对于是这个坐标

05:47.200 --> 05:49.200
所以说你以后 你理解这个东西

05:49.200 --> 05:50.320
你才能理解这个东西

05:50.320 --> 05:51.480
它相对于是这个坐标

05:52.040 --> 05:53.000
那么比方说啊

05:53.160 --> 05:54.480
我们目前这个场景下边

05:54.480 --> 05:56.160
div1 你看一下啊

05:56.520 --> 05:57.480
div1呢

05:57.920 --> 05:59.480
它是一个relative 对吧

05:59.480 --> 06:00.680
定位的元素 对吧

06:00.840 --> 06:03.120
div1 好 那么我们比方说

06:03.200 --> 06:04.880
来获取div3的

06:05.440 --> 06:07.160
div2的 就这个

06:08.000 --> 06:08.680
就这个 对吧

06:08.680 --> 06:09.280
div2

06:09.640 --> 06:13.120
div2的offset left

06:13.760 --> 06:15.520
位置 我们之前是尺寸嘛

06:15.520 --> 06:16.240
现在是位置

06:16.720 --> 06:18.080
好 这段位置等于多少呢

06:18.680 --> 06:19.360
是不等于100

06:19.680 --> 06:20.560
那么相当于是

06:20.960 --> 06:23.680
以它offset parent的左边的距离

06:23.680 --> 06:25.160
是这段距离 是100

06:26.040 --> 06:26.920
好 那么同样的

06:26.920 --> 06:28.760
offset top 当然也是100

06:29.040 --> 06:31.320
指的是 以它offset parent

06:32.040 --> 06:33.480
这一段距离 100

06:34.640 --> 06:38.280
好 那么如果是div3的offset left

06:38.560 --> 06:39.160
得到的是什么

06:39.160 --> 06:40.840
200 它就是这样的距离

06:40.840 --> 06:43.920
offset parent到它本身之间的左边的距离

06:44.360 --> 06:45.080
明白这个意思吗

06:45.360 --> 06:46.920
这是offset left

06:46.920 --> 06:47.840
offset top

06:48.480 --> 06:51.920
那如果是div1的offset left

06:51.920 --> 06:52.440
多少呢

06:53.360 --> 06:55.640
它指的是108

06:56.400 --> 06:57.040
为什么呢

06:57.160 --> 06:57.760
因为这里呢

06:57.760 --> 06:58.600
它有一个特殊点

06:58.720 --> 06:59.280
有一个特殊点

06:59.280 --> 07:00.000
我要说一下

07:00.040 --> 07:00.880
就是body

07:01.640 --> 07:02.200
body呢

07:02.200 --> 07:03.200
它是有margin的

07:03.200 --> 07:03.480
对吧

07:03.480 --> 07:05.160
它有浪清默认样式里边

07:05.160 --> 07:06.800
body body是有个margin的

07:06.800 --> 07:08.680
那么为什么要算上body的margin呢

07:08.680 --> 07:09.840
这里是一个特殊点

07:10.360 --> 07:12.120
就是在计算body的时候

07:12.640 --> 07:14.040
是要包含外边距离的

07:14.240 --> 07:15.120
这里我说一下

07:16.120 --> 07:19.880
如果offset parent是body

07:20.840 --> 07:26.280
则要则将其当作是整个网页

07:26.760 --> 07:28.120
当作是整个网页的距离

07:28.120 --> 07:28.760
就不是什么

07:29.400 --> 07:30.720
因为body它有些特殊

07:30.720 --> 07:32.800
我们之前在我之前的课程

07:32.800 --> 07:35.480
叫atmr和css的课程里边

07:35.480 --> 07:37.960
我讲到body的背景图的时候

07:37.960 --> 07:39.200
和背景颜色的时候都说过

07:39.200 --> 07:39.560
对吧

07:40.160 --> 07:42.000
body的它这个元素它有些特殊

07:42.800 --> 07:45.280
如果你的offset parent是body的话

07:45.280 --> 07:46.880
那么它当作是整个网页

07:47.080 --> 07:48.200
它是要考虑body的

07:48.400 --> 07:49.600
它是要考虑margin的

07:49.960 --> 07:51.640
就是说你就把它当成整个网页就完事了

07:51.960 --> 07:53.200
当成整个网页就完事了

07:53.360 --> 07:54.960
因为body它默认情况下

07:54.960 --> 07:56.800
margin它有8个像素

07:56.800 --> 07:57.240
看没

07:57.480 --> 07:58.560
浪清的默认样式里边

07:58.600 --> 07:59.560
它有8个像素

07:59.560 --> 08:02.680
所以加起来dive的offset

08:04.120 --> 08:05.920
dive的offset left

08:05.920 --> 08:07.240
它本来是100个像素

08:07.240 --> 08:07.520
对吧

08:07.560 --> 08:09.560
但加上margin的就是108个像素了

08:09.800 --> 08:10.520
什么回事

08:10.920 --> 08:11.880
把它当成整个网页

08:11.880 --> 08:13.520
一把当成整个网页算就行了

08:13.760 --> 08:14.200
对吧

08:15.000 --> 08:16.360
如果有横向滚动条

08:16.480 --> 08:17.440
也要考虑在这

08:17.880 --> 08:20.440
你不能光说没有滚动条的时候

08:20.440 --> 08:21.440
那如果有滚动条的话

08:21.440 --> 08:22.120
也要考虑在这

08:22.120 --> 08:26.240
比方说bog11的宽度是3千

08:27.120 --> 08:27.840
你看

08:27.840 --> 08:28.760
出现了横向滚动条了

08:28.760 --> 08:29.200
对吧

08:29.400 --> 08:30.280
横向滚动条

08:30.480 --> 08:31.880
不能用这个

08:32.080 --> 08:32.720
用margin

08:33.120 --> 08:35.120
用margin的话

08:35.120 --> 08:36.040
margin left

08:36.880 --> 08:38.400
left为3千

08:39.400 --> 08:40.280
看一下

08:40.320 --> 08:41.520
它出现了横向滚动条

08:41.520 --> 08:42.000
对吧

08:42.120 --> 08:44.200
那么现在来我们看一下offset left

08:44.200 --> 08:44.400
对吧

08:44.400 --> 08:45.240
3千零8

08:45.720 --> 08:46.400
没问题吧

08:46.600 --> 08:48.040
它是考虑的是整个网页

08:48.320 --> 08:49.080
整个网页

08:50.600 --> 08:52.360
这是关于这两个属性

08:52.600 --> 08:53.440
关于这两个属性

08:53.640 --> 08:55.000
根据这两个属性

08:55.080 --> 08:57.920
我们就可以写出一些代码

08:58.760 --> 09:01.120
来得到某一个元素

09:01.680 --> 09:03.520
来得到某一个元素

09:03.520 --> 09:06.200
它相对于整个网页的距离

09:06.640 --> 09:08.040
你给它任何一个元素

09:08.600 --> 09:11.440
它可以得到整个网页的距离

09:11.480 --> 09:13.000
相对于整个网页的距离

09:13.480 --> 09:13.720
好

09:13.720 --> 09:14.720
这里我们来写一下

09:15.080 --> 09:16.080
就相当于是鼠标的那种

09:16.080 --> 09:16.600
page x

09:16.600 --> 09:17.280
page y

09:17.280 --> 09:17.760
对吧

09:18.200 --> 09:19.600
比方说我们这里有一个函数

09:20.160 --> 09:20.800
函数

09:21.080 --> 09:21.760
方向滚动条

09:21.880 --> 09:23.760
get page pressing

09:24.640 --> 09:26.400
相对于整个网页的位置

09:26.840 --> 09:29.200
就是相对于整个网页的左边和上边的位置

09:29.720 --> 09:30.440
懂我这个意思吧

09:31.280 --> 09:31.480
好

09:31.480 --> 09:33.680
那么这里我这个函数该怎么写呢

09:34.400 --> 09:35.360
这个函数咋写了

09:35.800 --> 09:36.800
你给我一个动物对象

09:37.000 --> 09:38.040
给我任何一个元素

09:38.040 --> 09:39.120
我能得到这个元素

09:39.280 --> 09:42.120
相对于左边和相对于上边的距离

09:42.280 --> 09:44.000
就相对于整个网页的上边

09:44.000 --> 09:45.600
和整个网页的左边的距离

09:45.600 --> 09:46.320
是这么个意思

09:47.640 --> 09:48.920
那这个怎么写呢

09:49.520 --> 09:50.120
咋写了

09:50.720 --> 09:52.480
那么这个地方你可以这样子写

09:53.480 --> 09:56.200
首先来得到它自身的

09:56.200 --> 09:56.760
offices

09:56.760 --> 09:57.680
它要相加对吧

09:57.680 --> 09:58.760
比方说像这个场景

09:58.760 --> 10:00.080
它是不是要一段一段相加

10:00.080 --> 10:01.600
比方说这个元素

10:02.000 --> 10:03.560
这个元素它的offices left

10:03.560 --> 10:04.160
等于啥

10:04.720 --> 10:05.520
是不等于这个

10:05.680 --> 10:06.160
对吧

10:06.520 --> 10:06.920
不对

10:07.080 --> 10:07.960
这一段对不对

10:08.320 --> 10:09.080
得到这一段

10:09.240 --> 10:10.640
然后再加上啥

10:10.640 --> 10:12.440
加上它的offices parent

10:12.440 --> 10:12.800
对吧

10:12.800 --> 10:14.480
再加上它的offices parent

10:14.480 --> 10:15.440
这一段对不对

10:16.520 --> 10:17.560
一直要相加

10:17.720 --> 10:19.640
那是不是只加两次了也不对

10:19.640 --> 10:21.440
那如果这一部分它也是

10:21.880 --> 10:22.760
相对定位了

10:23.280 --> 10:25.040
是不是那就是这一段

10:25.560 --> 10:27.560
加上它offices parent的

10:28.000 --> 10:28.680
这一段

10:28.920 --> 10:30.800
再加上它的offices parent的

10:31.040 --> 10:32.000
这一段对吧

10:32.280 --> 10:33.120
所以它要一直相加

10:33.120 --> 10:34.280
这里肯定要用循环

10:34.720 --> 10:36.560
我们首先来得到

10:36.560 --> 10:38.880
它自身的offices left

10:39.320 --> 10:40.440
和offices top

10:40.720 --> 10:41.520
我们这里得到

10:41.760 --> 10:42.160
left

10:42.840 --> 10:43.680
等于offices left

10:43.920 --> 10:44.680
先得到它的

10:44.920 --> 10:45.880
然后再得到top

10:46.520 --> 10:48.000
dome的offices top

10:49.440 --> 10:50.320
得到这两段

10:50.800 --> 10:51.880
然后再得到它

10:51.880 --> 10:52.640
复原数的

10:52.640 --> 10:54.080
就是offices parent的

10:54.360 --> 10:55.760
left和top对吧

10:56.120 --> 10:56.760
我们这里

10:57.160 --> 10:59.160
再把这个 parent

10:59.160 --> 10:59.840
等于什么呢

10:59.960 --> 11:01.600
等于dome的offices

11:01.600 --> 11:02.760
不能直接用parent

11:03.960 --> 11:05.120
因为我们这个位置

11:05.120 --> 11:07.520
是根据offices parent来算的

11:08.640 --> 11:10.040
得到它的offices parent

11:10.040 --> 11:11.000
得到它的复原数

11:11.240 --> 11:13.320
就是复原数的中的定位元素

11:13.480 --> 11:15.320
数线元素中的定位元素

11:16.200 --> 11:17.320
那么YL循环

11:17.320 --> 11:19.440
如果它的复原数有值

11:20.000 --> 11:21.200
如果有没有值的话就算了

11:21.200 --> 11:21.520
对吧

11:21.520 --> 11:22.680
没有值的话就算了

11:22.880 --> 11:23.360
没有值的话

11:23.360 --> 11:24.360
那么本身比方说

11:24.360 --> 11:25.040
body没有值

11:25.040 --> 11:25.360
对吧

11:25.360 --> 11:26.680
它的offices parent没有值

11:26.680 --> 11:27.360
那么就是这个了

11:27.360 --> 11:27.720
就没了

11:27.720 --> 11:27.960
对吧

11:27.960 --> 11:28.440
就没了

11:28.920 --> 11:29.040
好

11:29.040 --> 11:30.280
那么如果有值

11:30.800 --> 11:31.640
如果有值的话

11:31.640 --> 11:32.360
你是要算

11:32.480 --> 11:32.840
对不对

11:32.840 --> 11:33.440
是不是要算

11:33.920 --> 11:34.080
好

11:34.080 --> 11:34.520
算

11:34.640 --> 11:35.640
那么我们来算

11:35.760 --> 11:36.760
首先我们left

11:36.760 --> 11:37.720
是不是要加上

11:37.760 --> 11:38.440
加上啥

11:38.760 --> 11:40.960
它parent的offices left

11:40.960 --> 11:41.400
对吧

11:41.520 --> 11:42.440
加上这一部分

11:43.520 --> 11:45.120
top了是不是也要加上

11:45.360 --> 11:46.560
加上parent

11:46.720 --> 11:47.920
offices left

11:47.920 --> 11:48.520
top

11:48.960 --> 11:49.800
加上这一部分

11:50.280 --> 11:51.240
然后再怎么样了

11:51.240 --> 11:52.800
是不是把parent要重新复制

11:52.800 --> 11:56.600
复制为parent的offices parent

11:56.800 --> 11:58.120
然后再看它的

11:58.960 --> 12:00.120
就是offices parent

12:00.120 --> 12:01.000
如果它有值的话

12:01.000 --> 12:01.800
又继续加

12:02.040 --> 12:02.840
意思是哪一家

12:02.840 --> 12:04.320
最终加到没有为止

12:04.480 --> 12:05.640
最后加到没有为止

12:05.640 --> 12:06.640
最后来返回

12:06.640 --> 12:07.200
nev

12:07.200 --> 12:07.840
返回

12:09.000 --> 12:10.040
x left

12:10.480 --> 12:11.800
y top

12:12.880 --> 12:14.000
我们就写这么一个函数

12:14.560 --> 12:14.680
好

12:14.680 --> 12:15.400
咱们试一下吧

12:15.840 --> 12:17.400
我干嘛把光彩删掉了

12:17.560 --> 12:18.240
不用删

12:18.760 --> 12:19.320
这三个

12:19.560 --> 12:20.120
复制过来

12:21.800 --> 12:23.440
那么我们把div2

12:23.720 --> 12:25.400
也变成定位元素

12:25.920 --> 12:26.720
也变成定位元素

12:26.720 --> 12:27.400
咱们来看一下

12:27.400 --> 12:28.520
能不能得到正确的结果

12:29.400 --> 12:30.280
咱们来看一下

12:30.280 --> 12:31.800
就在理论界里面看

12:34.250 --> 12:34.890
检查

12:35.610 --> 12:37.290
这个位置有的时候还蛮应用的

12:37.770 --> 12:39.850
比方说我们这里得到了什么

12:40.370 --> 12:42.130
get page

12:42.130 --> 12:42.690
pression

12:42.850 --> 12:44.370
把div3传进去

12:44.730 --> 12:45.690
你看一下得到的是啥

12:45.690 --> 12:47.370
308 300对吧

12:47.490 --> 12:48.290
是不是308

12:48.290 --> 12:49.610
相对于整个页面的

12:50.290 --> 12:51.530
左边的距离308

12:52.170 --> 12:53.410
300是相对于

12:53.530 --> 12:54.890
整个页面上边的距离

12:55.090 --> 12:55.610
300

12:56.810 --> 12:58.730
上面的距离不应该是308吗

12:58.730 --> 12:59.530
我看一下

13:00.210 --> 13:01.770
上面的距离应该是308才对

13:02.490 --> 13:03.330
body

13:03.330 --> 13:04.330
他外边具合并了

13:04.490 --> 13:05.410
外边具合并了

13:05.850 --> 13:06.770
那就不用管了

13:07.010 --> 13:08.850
外边具跟这个玩意合并了

13:09.170 --> 13:10.290
body跟外边具跟他

13:10.290 --> 13:12.410
他内部的指援数合并了

13:12.410 --> 13:15.570
所以说他的Y坐标是300

13:16.090 --> 13:16.570
无所谓吧

13:16.570 --> 13:17.090
无所谓

13:17.930 --> 13:18.650
div2

13:19.850 --> 13:20.490
200

13:20.610 --> 13:21.130
对吧

13:21.130 --> 13:21.450
200

13:21.450 --> 13:23.330
那就是208成200

13:23.330 --> 13:24.770
那么就是这一部分

13:25.250 --> 13:26.250
这部分是刚好200

13:26.250 --> 13:26.570
对吧

13:26.570 --> 13:27.290
刚好200

13:27.690 --> 13:29.610
那么就可以得到他的顶边的距离了

13:30.490 --> 13:31.610
这个有的时候还蛮用的

13:31.610 --> 13:32.650
有的时候蛮用的

13:33.770 --> 13:34.010
好

13:34.010 --> 13:36.570
这是这一部分得到的位置

13:37.170 --> 13:38.410
还有一个是这个东西

13:38.410 --> 13:39.130
这个方法

13:39.610 --> 13:41.650
这个方法可以获得一个对象

13:42.850 --> 13:43.690
该方法

13:45.930 --> 13:46.810
该方法

13:47.770 --> 13:50.690
该方法得到一个对象

13:50.970 --> 13:51.770
得到一个对象

13:52.130 --> 13:53.410
该对象的

13:53.810 --> 13:56.570
该对象记录了该元素

13:56.570 --> 13:58.330
就通过元素去调用的方法

13:58.330 --> 13:59.410
也不是直接调用的

13:59.530 --> 14:01.330
通过元素去调用这个方法

14:01.330 --> 14:02.330
能够得到一个对象

14:02.330 --> 14:04.170
这个对象会记录这个元素

14:04.530 --> 14:07.290
相对于四口的距离

14:08.010 --> 14:09.170
相对的是四口

14:09.410 --> 14:10.450
那么我们之前说

14:10.970 --> 14:12.370
相对这个

14:12.370 --> 14:12.970
相对那个

14:12.970 --> 14:14.090
都没有说相对四口

14:14.090 --> 14:14.370
对吧

14:14.370 --> 14:15.930
我们之前说的是相对于什么

14:16.090 --> 14:16.770
offset

14:17.370 --> 14:19.170
但是我没有说相对四口

14:19.170 --> 14:20.450
相对四口的距离

14:21.090 --> 14:23.050
就甭管这个元素千套了多深

14:23.050 --> 14:24.010
它在什么位置

14:24.010 --> 14:25.770
它始终是相对四口的距离

14:26.530 --> 14:27.370
我们看一下这个方法

14:28.370 --> 14:30.130
比方说我们再接个网页

14:31.330 --> 14:31.850
又来吧

14:31.850 --> 14:32.490
又来

14:32.770 --> 14:33.730
我们可以通过

14:35.250 --> 14:37.610
div3的

14:38.050 --> 14:38.610
rigged

14:39.250 --> 14:42.250
通过div3 get bounding

14:43.010 --> 14:43.970
client rigged

14:44.490 --> 14:46.050
反正你看到这个client

14:46.130 --> 14:47.250
都跟四口有关系

14:47.250 --> 14:48.410
跟显示有关系

14:49.410 --> 14:50.170
client是什么意思

14:50.170 --> 14:50.850
表示的是

14:51.450 --> 14:53.010
表示的是就是客户端

14:53.010 --> 14:53.250
对吧

14:53.250 --> 14:54.650
我们的网页就是个客户端

14:58.370 --> 14:59.410
咱们看一下这个对象

14:59.410 --> 15:00.530
div3 rigged

15:00.770 --> 15:02.210
它里边记录了很多信息

15:02.450 --> 15:02.930
rigged

15:04.770 --> 15:05.370
没有呢

15:05.570 --> 15:06.090
没运行

15:08.250 --> 15:09.530
它里边记录了很多信息

15:10.530 --> 15:12.250
但是在这里边信息了我们关键点了

15:12.250 --> 15:14.010
其他信息我们都可以通过别的渠道得到

15:14.010 --> 15:15.490
主要是关于四口的距离

15:16.130 --> 15:17.210
关于四口的距离

15:17.610 --> 15:18.370
你看neft

15:18.370 --> 15:19.490
这个x y是别名

15:19.610 --> 15:20.890
跟neft rigged是一样的

15:21.610 --> 15:24.210
那么neft和top就表示的是

15:24.210 --> 15:25.570
它相对于四口的距离

15:25.570 --> 15:26.650
你看是不是直接算出来了

15:26.930 --> 15:29.250
但是注意刚才那个情况跟这个不一样

15:29.330 --> 15:30.410
这是相对于四口

15:30.530 --> 15:32.290
刚才那个是相对于网页的

15:32.530 --> 15:33.810
如果没有滚动条的话

15:33.810 --> 15:34.610
那是一样的

15:34.610 --> 15:35.690
如果出现滚动条的话

15:35.690 --> 15:36.410
那就不一样了

15:37.290 --> 15:37.730
比方说

15:38.530 --> 15:40.130
比方说我们把这个东西复制过来

15:41.210 --> 15:41.690
复制过来

15:45.540 --> 15:46.620
比方说我们这里

15:47.100 --> 15:48.140
给它加上一个滚动条

15:49.900 --> 15:51.620
marginneft

15:51.900 --> 15:52.980
为3000

15:53.900 --> 15:54.900
margintop

15:55.100 --> 15:55.780
为3000

15:56.940 --> 15:57.500
保存

15:57.660 --> 15:58.500
现在出现滚动条了

15:58.500 --> 15:58.860
对吧

15:59.020 --> 15:59.700
滚动条了

16:00.620 --> 16:01.340
出现滚动条了

16:01.460 --> 16:04.620
那么现在我们来看div3 rigged

16:06.660 --> 16:06.940
不对

16:09.740 --> 16:10.660
我这个地方

16:10.780 --> 16:11.780
我这个边量

16:12.260 --> 16:13.380
就代码运行的时候

16:13.460 --> 16:15.540
这个边量得到的是最开始的时候

16:15.900 --> 16:16.660
最开始的时候

16:16.900 --> 16:17.620
我不能这样子

16:17.740 --> 16:18.700
我再重新过去

16:18.780 --> 16:19.660
得重新获取

16:20.260 --> 16:20.820
再来

16:20.940 --> 16:22.180
我再重新获取一次

16:22.500 --> 16:25.780
div3 get bounding

16:25.940 --> 16:26.700
client rigged

16:26.780 --> 16:27.740
看着

16:27.940 --> 16:28.740
它的弄是啥

16:28.940 --> 16:30.540
你看是不是相对于四口的距离

16:30.780 --> 16:31.220
对吧

16:31.340 --> 16:31.980
left

16:32.140 --> 16:32.940
它就是这段距离

16:32.940 --> 16:33.860
453

16:34.140 --> 16:35.180
它是包含小数的

16:35.780 --> 16:36.340
left

16:36.700 --> 16:37.540
这里div3

16:37.740 --> 16:38.540
453

16:38.820 --> 16:39.140
看不看

16:39.140 --> 16:40.060
是这段距离

16:41.820 --> 16:43.140
top是这段距离

16:44.340 --> 16:45.860
它始终是相对于四口的

16:45.980 --> 16:46.660
你看这个意思吧

16:47.140 --> 16:49.140
那么我们就跟我们刚才的就不太一样了

16:49.140 --> 16:51.260
刚才我们自己写的函数叫PagePration

16:51.260 --> 16:51.620
对吧

16:51.660 --> 16:52.780
div3传进去

16:52.900 --> 16:55.580
那么这个东西得到的是相对于整个页面的距离

16:55.780 --> 16:56.420
有意思吗

16:56.540 --> 16:57.900
上面还有隐藏了很多了

16:57.900 --> 16:58.180
对吧

16:58.180 --> 16:59.700
一面还隐藏了很大一部分

16:59.900 --> 17:01.820
那么这里是得到整个页面的距离

17:01.940 --> 17:03.060
是这么回事

17:03.980 --> 17:04.900
能力在这里是吧

17:05.220 --> 17:05.860
没问题吧

17:06.500 --> 17:07.020
好

17:07.220 --> 17:09.380
那么这一块我们看一下

17:10.540 --> 17:11.180
还有啥说的

17:11.180 --> 17:13.620
还有就是right和button

17:14.220 --> 17:15.020
right和button

17:15.060 --> 17:17.460
这个xy跟这个left和top是一样的

17:18.020 --> 17:20.220
关键是个right和button

17:20.380 --> 17:21.940
right和button是什么意思呢

17:22.500 --> 17:23.820
我们给大家看张图吧

17:24.940 --> 17:26.860
就这个看一下

17:27.060 --> 17:28.260
就看官方文档的图

17:29.820 --> 17:30.580
把它复制下来

17:30.580 --> 17:31.860
放到我们的笔记里边

17:33.740 --> 17:34.780
就看官方文档的图

17:36.220 --> 17:36.820
就这个图

17:37.060 --> 17:38.780
你看left相对于是哪段

17:38.900 --> 17:40.460
相对于是四口的这一段

17:40.460 --> 17:40.900
看不看

17:41.380 --> 17:41.900
left

17:42.620 --> 17:44.300
right它是这一段

17:44.940 --> 17:46.180
right是这一段

17:46.220 --> 17:47.180
它不是说这一段

17:47.340 --> 17:48.220
它不是这一段了

17:48.340 --> 17:50.780
它是从左不要到它右边缘

17:50.940 --> 17:51.780
right是这一段

17:52.300 --> 17:53.660
那么top值呢

17:54.020 --> 17:54.460
这一段

17:54.820 --> 17:55.660
button值呢

17:56.500 --> 17:56.980
这一段

17:57.580 --> 17:58.220
不要这意思吧

17:58.980 --> 18:00.980
我们一般就用left和top就够了

18:01.060 --> 18:01.620
就够了

18:03.060 --> 18:04.820
这是这一块知识

18:05.100 --> 18:07.020
那么学习这一块知识有什么意义呢

18:07.140 --> 18:08.100
给大家做个效果

18:09.540 --> 18:10.940
这一课也没有什么作业了

18:11.260 --> 18:12.660
补充知识这一块没什么作业了

18:12.660 --> 18:14.220
但是有个效果大家要知道

18:14.340 --> 18:15.860
就是吸附效果

18:17.980 --> 18:18.460
这个效果呢

18:18.460 --> 18:19.700
大家下来要把完成一遍

18:19.860 --> 18:21.060
这是一个课堂练习

18:21.500 --> 18:22.140
很重要的

18:22.580 --> 18:25.620
你们出去现在基本上很多网站都有这个效果

18:26.140 --> 18:26.940
你们要去做一遍

18:27.140 --> 18:27.820
去练习一遍

18:29.940 --> 18:31.020
我们这里的一个DIV

18:32.140 --> 18:34.740
比方说这个页面它有很多的内容

18:34.740 --> 18:35.100
对吧

18:35.460 --> 18:36.620
它有很多的内容

18:36.620 --> 18:38.860
然后我们这里写个Norway1000

18:39.020 --> 18:39.620
1万个

18:40.020 --> 18:40.860
它内容很多

18:41.500 --> 18:43.540
然后下边再有一个DIV

18:44.020 --> 18:45.220
这个DIV呢

18:45.300 --> 18:47.780
我们把它放到哪呢

18:47.780 --> 18:49.020
它是一个U符冻的

18:51.420 --> 18:52.100
我们想一下

18:52.100 --> 18:52.580
想一下

18:52.580 --> 18:53.180
这样子吧

18:53.380 --> 18:53.900
这样子

18:54.740 --> 18:56.740
这个是第一个DIV左符冻

18:57.660 --> 18:58.900
第一个DIV左符冻

18:58.900 --> 18:59.500
class

19:00.100 --> 19:00.700
nab

19:00.700 --> 19:01.380
左符冻

19:01.540 --> 19:03.140
第二DIV右符冻

19:03.340 --> 19:03.860
right

19:04.820 --> 19:05.500
这个没问题吧

19:05.980 --> 19:06.580
咱们来写一下

19:07.780 --> 19:09.100
稍微的写一下样子

19:09.100 --> 19:10.300
我们主要是说功能

19:10.780 --> 19:11.940
左符冻的这里呢

19:11.940 --> 19:12.580
float

19:13.100 --> 19:13.620
nab

19:14.380 --> 19:15.780
然后呢

19:16.260 --> 19:17.660
我们给它个宽度

19:17.660 --> 19:20.660
宽度的话70%

19:21.100 --> 19:22.060
70%

19:22.860 --> 19:23.420
然后呢

19:23.420 --> 19:24.220
给它个边框

19:24.420 --> 19:24.900
border

19:25.140 --> 19:25.700
一个像素

19:25.700 --> 19:26.260
solid

19:26.380 --> 19:27.020
一个边框

19:27.380 --> 19:28.260
这里边有些内容

19:28.820 --> 19:29.500
内容比较多

19:30.940 --> 19:31.100
好

19:31.100 --> 19:31.620
看一下吧

19:32.580 --> 19:33.700
我们要做一个效果出来

19:34.180 --> 19:34.340
好

19:34.340 --> 19:35.140
这是左符冻的

19:36.340 --> 19:36.540
好

19:36.540 --> 19:37.580
然后右符冻的呢

19:39.980 --> 19:40.660
右符冻的呢

19:40.660 --> 19:41.860
我们这里写个样式

19:41.860 --> 19:42.420
right

19:42.980 --> 19:43.540
float

19:44.500 --> 19:45.220
right

19:45.940 --> 19:46.540
然后呢

19:46.540 --> 19:48.460
宽度了25%

19:49.340 --> 19:49.780
border

19:50.580 --> 19:51.220
一个像素

19:51.220 --> 19:51.700
solid

19:52.900 --> 19:53.660
这是右符冻的

19:53.660 --> 19:54.540
右符冻里边没东西

19:54.540 --> 19:54.940
对吧

19:54.940 --> 19:55.340
好

19:55.340 --> 19:56.060
右符冻里边呢

19:56.060 --> 19:57.100
有一些DIV

19:57.100 --> 19:57.980
有些P元素

19:58.340 --> 19:58.940
P元素

19:59.540 --> 20:00.340
我们随便写一下

20:00.340 --> 20:01.140
就下写一些

20:02.460 --> 20:02.900
三派

20:04.540 --> 20:05.420
有些P元素

20:05.780 --> 20:05.980
好

20:05.980 --> 20:06.740
P元素下面呢

20:06.740 --> 20:07.540
有一个DIV

20:07.940 --> 20:09.100
关键是下面这个DIV

20:11.180 --> 20:12.140
这个DIV呢

20:12.180 --> 20:13.860
我们就把它给它取个名字

20:13.860 --> 20:14.380
叫container

20:14.860 --> 20:15.340
container

20:16.020 --> 20:16.780
这个DIV呢

20:16.780 --> 20:17.740
我们给它一个

20:18.260 --> 20:19.020
里边啥都不写

20:19.020 --> 20:20.220
主要是给它一个样式

20:20.220 --> 20:21.380
你看着见就行了

20:21.380 --> 20:22.700
因为我们主要说功能

20:23.980 --> 20:25.780
container的宽度了100%

20:26.140 --> 20:27.180
宽度100%

20:27.180 --> 20:29.260
高度是300个像素

20:29.820 --> 20:31.020
一个背景颜色

20:31.020 --> 20:31.460
pink

20:31.460 --> 20:31.820
红色

20:33.660 --> 20:34.060
好

20:34.060 --> 20:35.500
接下来我说一下我要干嘛

20:36.420 --> 20:37.220
这个DIV

20:37.220 --> 20:38.820
这个DIV呢

20:38.820 --> 20:39.820
文字还不够

20:39.820 --> 20:40.380
还不够

20:40.380 --> 20:41.060
我还要多一点

20:41.940 --> 20:43.020
劳润一万个像

20:43.020 --> 20:44.100
一万个文字

20:44.100 --> 20:44.900
一万个单词

20:46.500 --> 20:47.860
接下来我要做这么一件事

20:47.860 --> 20:48.540
做这么一件事

20:48.540 --> 20:49.380
吸附效果

20:49.380 --> 20:50.060
什么呢

20:50.060 --> 20:51.860
这个页面一开始正常的

20:51.860 --> 20:53.100
接下来往滚动调

20:53.100 --> 20:53.740
往下面拉

20:53.740 --> 20:54.420
对吧

20:54.420 --> 20:55.780
搭动这个滚动调

20:55.780 --> 20:56.100
好

20:56.100 --> 20:57.220
滚动的时候

20:57.220 --> 20:59.420
当这个红色的这一块

20:59.420 --> 21:00.900
当它这个块

21:00.900 --> 21:02.020
到达这个页面

21:02.020 --> 21:03.620
丝口的顶边的时候

21:03.620 --> 21:05.300
当它到了这个顶边的时候

21:05.300 --> 21:06.460
它吸附在这了

21:06.460 --> 21:07.980
它不再往上滚动了

21:07.980 --> 21:09.260
你滚动调继续往下滚动

21:09.260 --> 21:10.500
它始终保持在这个位置

21:10.580 --> 21:11.380
明了这个意思吧

21:11.380 --> 21:13.060
它始终保持在这个位置

21:13.060 --> 21:14.820
它不再跟着滚动了

21:14.820 --> 21:15.820
我叫做这个效果

21:15.820 --> 21:17.500
这个效果是很常见的效果

21:17.500 --> 21:18.980
然后往上拉的时候

21:18.980 --> 21:19.980
它又返回回去

21:19.980 --> 21:22.380
又变成正常的情况

21:22.380 --> 21:24.020
明了这个意思吗

21:24.020 --> 21:24.740
好

21:24.740 --> 21:26.340
那么怎么来做呢

21:26.340 --> 21:27.700
怎么来做呢

21:27.700 --> 21:29.900
就是说我怎么样

21:29.900 --> 21:32.860
怎么样来就是设置它的这个位置

21:32.860 --> 21:34.980
始终放在这一块

21:34.980 --> 21:36.180
大家可以想一想

21:36.180 --> 21:37.300
始终放在这一块

21:37.300 --> 21:38.540
首先第一个问题是

21:38.540 --> 21:40.100
我什么时候做这件事

21:40.100 --> 21:42.660
我先不是说把它放在这一块玩事

21:42.660 --> 21:43.980
我先不说这个东西

21:43.980 --> 21:45.740
我先说一下我怎么来

21:45.740 --> 21:47.980
什么时候去做这件事

21:47.980 --> 21:49.500
关键是这一点

21:49.500 --> 21:53.540
啥时候来做这件事

21:53.540 --> 21:55.620
什么时候来做这件事了

21:55.620 --> 21:58.900
什么时候呢

21:58.900 --> 22:00.460
是不是它的似口

22:00.460 --> 22:01.860
得到它的似口的

22:01.860 --> 22:03.260
相对于似口的高度

22:03.260 --> 22:03.820
对吧

22:03.820 --> 22:05.060
相对于似口的高度

22:05.060 --> 22:06.460
只看这个高度

22:06.460 --> 22:07.300
如果一个高度

22:07.300 --> 22:08.860
小于等于0的时候

22:08.860 --> 22:09.780
我要做这件事

22:09.820 --> 22:10.620
对吧

22:10.620 --> 22:10.940
好

22:10.940 --> 22:11.980
来

22:11.980 --> 22:13.940
这个没有那么简单的

22:13.940 --> 22:14.660
我们就在这写吧

22:14.660 --> 22:16.180
介绍

22:16.180 --> 22:18.220
但是你要考虑清楚

22:18.220 --> 22:21.140
这一块逻辑还是有些逻辑在里面

22:21.140 --> 22:21.300
好

22:21.300 --> 22:22.820
我们首先获得这个DIV

22:22.820 --> 22:25.020
拿到这个DIV

22:25.020 --> 22:26.420
Documents

22:26.420 --> 22:27.020
Curry

22:27.020 --> 22:28.540
Snegator

22:28.540 --> 22:30.580
我给大家开辟一个

22:30.580 --> 22:33.300
就是思维的方向

22:33.300 --> 22:34.220
什么时候做呢

22:34.220 --> 22:35.380
是不是

22:35.380 --> 22:36.180
当我们

22:36.180 --> 22:37.780
当它这个似口

22:37.780 --> 22:39.180
跟似口的高度

22:39.220 --> 22:40.260
小于等于0的时候

22:40.260 --> 22:41.220
我们要做这件事了

22:41.220 --> 22:42.180
对吧

22:42.180 --> 22:42.420
好

22:42.420 --> 22:44.580
那么现在呢

22:44.580 --> 22:46.780
现在呢

22:46.780 --> 22:48.300
做这么一个处理

22:48.300 --> 22:49.540
就是说

22:49.540 --> 22:51.420
我什么时候来判断

22:51.420 --> 22:52.580
它的似口高度

22:52.580 --> 22:54.900
什么时候呢

22:54.900 --> 22:55.540
就是滚动

22:55.540 --> 22:57.180
滚动调的时候

22:57.180 --> 22:57.460
对吧

22:57.460 --> 22:58.660
给Windows注册

22:58.660 --> 22:59.500
什么事件

22:59.500 --> 23:00.580
on

23:00.580 --> 23:01.580
scroll

23:01.580 --> 23:02.420
事件

23:02.420 --> 23:03.460
当我们滚动

23:03.460 --> 23:05.900
Windows就是滚动调的时候

23:05.900 --> 23:06.980
干嘛呢

23:06.980 --> 23:08.180
我要干嘛呢

23:08.220 --> 23:09.500
我是不是得到

23:09.500 --> 23:11.500
得到就是这个DIV

23:11.500 --> 23:13.900
它的什么offset

23:13.900 --> 23:18.340
这个DIV的get bounding client rigs

23:18.340 --> 23:19.140
这样吧

23:19.140 --> 23:22.220
把它保存到辩量里边

23:22.220 --> 23:23.940
得到这个举行

23:23.940 --> 23:24.700
这个bunding

23:24.700 --> 23:28.340
就是绑定的client客户端的举行区域

23:28.340 --> 23:29.300
就是那个位置

23:29.300 --> 23:29.700
坐标

23:29.700 --> 23:31.100
尺寸这些东西

23:31.100 --> 23:31.260
好

23:31.260 --> 23:31.900
咱们呢

23:31.900 --> 23:33.180
得到这个举行的什么呢

23:33.180 --> 23:35.500
得到它的就是top

23:35.500 --> 23:35.900
对吧

23:35.900 --> 23:37.620
相对于似口的高度

23:37.740 --> 23:39.580
咱们来看一下

23:39.580 --> 23:41.300
当我们滚动的时候

23:41.300 --> 23:43.980
检查

23:43.980 --> 23:45.060
当我们滚动调的时候

23:45.060 --> 23:46.380
你看现在高度很高

23:46.380 --> 23:46.660
对吧

23:46.660 --> 23:47.460
很高

23:47.460 --> 23:48.260
你看

23:48.260 --> 23:49.140
是不是变成复数了

23:49.140 --> 23:50.540
有个点时间点就变成复数了

23:50.540 --> 23:51.020
对吧

23:51.020 --> 23:51.620
变成复数了

23:51.620 --> 23:52.500
或者是零了

23:52.500 --> 23:53.260
对不对

23:53.260 --> 23:55.620
那么这一块我们就这样子来处理

23:55.620 --> 23:57.060
什么时候来处理呢

23:57.060 --> 24:00.580
rigs的top等于小于零

24:00.580 --> 24:02.780
或者是小于等于零的时候

24:02.780 --> 24:04.380
是不是来处理这个问题

24:04.380 --> 24:04.660
对吧

24:04.660 --> 24:05.620
来处理这个问题

24:05.620 --> 24:05.940
好

24:05.940 --> 24:07.980
怎么处理这个问题呢

24:08.020 --> 24:09.580
咋说这个问题呢

24:09.580 --> 24:11.500
处理起来很简单

24:11.500 --> 24:13.180
非常非常简单

24:13.180 --> 24:13.460
好

24:13.460 --> 24:15.260
怎么来处理呢

24:15.260 --> 24:16.500
看着啊

24:16.500 --> 24:18.740
我要做这么一件事就完事了

24:18.740 --> 24:18.940
好

24:18.940 --> 24:19.500
什么事了

24:21.500 --> 24:22.820
设置把它的

24:22.820 --> 24:24.620
把它的一开始它是什么位置

24:24.620 --> 24:26.380
它是一个常规流对吧

24:26.380 --> 24:27.660
那你要始终放的这个位置

24:27.660 --> 24:29.100
是不是不能是常规流了

24:29.100 --> 24:29.660
对吧

24:29.660 --> 24:31.140
是不是不能是常规流了

24:31.140 --> 24:31.940
OK啊

24:31.940 --> 24:33.500
那它就不能是常规流了

24:33.500 --> 24:35.500
那么不能是常规流怎么办了

24:35.540 --> 24:38.140
是不是设置它为什么固定定位

24:38.140 --> 24:39.020
对不对

24:39.020 --> 24:40.940
设置它为固定定位

24:40.940 --> 24:41.540
好

24:41.540 --> 24:42.380
设置吧

24:42.380 --> 24:43.740
那我们设置它的style

24:43.740 --> 24:44.860
什么pression

24:44.860 --> 24:45.580
为什么呢

24:45.580 --> 24:47.340
fixed固定定位

24:47.340 --> 24:50.260
相对于一相对于四口的固定定位

24:50.260 --> 24:51.100
那么这个时候呢

24:51.100 --> 24:52.580
它要涉及到一个问题

24:52.580 --> 24:54.460
一个是它的宽高

24:54.460 --> 24:56.220
它的宽高

24:56.220 --> 24:58.100
好宽高你不能变化对吧

24:58.100 --> 24:59.140
因为固定定位过后呢

24:59.140 --> 25:01.420
它宽度可能变成自动宽度了对吧

25:01.420 --> 25:02.220
而且宽度了

25:02.220 --> 25:03.220
它的央视里边

25:03.220 --> 25:04.100
之前设置的是什么

25:04.100 --> 25:04.740
百分之百

25:04.740 --> 25:06.100
那现在是相对于整个

25:06.100 --> 25:07.580
整个尺寸的百分之百

25:07.580 --> 25:08.660
你把它作为固定定位过后

25:08.660 --> 25:09.660
就充满整个屏幕了

25:09.660 --> 25:10.460
那不行

25:10.460 --> 25:12.940
所以说我得把它之前的宽高拿到

25:12.940 --> 25:15.860
并且把它之前的相对于四口的拿到

25:15.860 --> 25:17.100
之前相对于四口已经拿到了

25:17.100 --> 25:17.300
对吧

25:17.300 --> 25:18.340
已经拿到了

25:18.340 --> 25:19.380
那么我们设置

25:19.380 --> 25:20.540
先说它的位置

25:20.540 --> 25:21.620
它的位置等于什么呢

25:21.620 --> 25:22.580
top等于什么

25:22.580 --> 25:24.620
rigs的top

25:24.620 --> 25:26.740
它的left等于什么

25:26.740 --> 25:28.100
你左边的距离等于什么

25:28.100 --> 25:30.020
rigs的left对吧

25:30.020 --> 25:32.900
跟之前的top和left是一样的

25:32.940 --> 25:33.580
然后呢

25:33.580 --> 25:35.100
关键是它的尺寸

25:35.100 --> 25:35.780
尺寸是不是

25:35.780 --> 25:37.500
我得把之前的尺寸拿到

25:37.500 --> 25:38.020
对吧

25:38.020 --> 25:39.620
得把之前的尺寸拿到

25:39.620 --> 25:41.860
那么之前的尺寸是不是

25:41.860 --> 25:43.180
什么宽度

25:43.180 --> 25:45.020
宽度之前的尺寸对于多少

25:45.020 --> 25:46.140
这里要凭结这个

25:46.140 --> 25:47.180
凭结px

25:48.460 --> 25:50.500
之前的尺寸是多少

25:50.500 --> 25:52.300
之前的尺寸

25:52.300 --> 25:53.500
直接来吧

25:53.500 --> 25:55.540
就是client位置

25:55.540 --> 25:56.340
我一会再说

25:56.340 --> 25:58.180
如果是考虑边框

25:58.180 --> 25:59.180
考虑panning的话

25:59.180 --> 25:59.980
肯定要处理一下

25:59.980 --> 26:01.460
更加复杂一点

26:01.460 --> 26:04.740
style height height rigs

26:04.740 --> 26:06.540
client height

26:06.540 --> 26:08.820
凭结上px

26:08.820 --> 26:10.020
宽高一摄子

26:10.020 --> 26:11.340
这个位置一摄子

26:11.340 --> 26:12.460
是不是就完了

26:12.460 --> 26:12.660
对吧

26:12.660 --> 26:13.020
就完了

26:14.140 --> 26:15.300
咱们再来看一下

26:15.300 --> 26:17.020
再来看一下

26:17.020 --> 26:17.420
保存

26:19.300 --> 26:20.140
这里重新刷新

26:20.140 --> 26:21.260
重新刷新

26:21.260 --> 26:21.540
看着

26:23.180 --> 26:24.500
是不是固定在这了

26:24.500 --> 26:24.900
再来

26:24.900 --> 26:27.670
再来

26:27.670 --> 26:28.390
是固定在这了

26:29.590 --> 26:30.190
没问题了吧

26:31.550 --> 26:32.670
没问题了

26:32.710 --> 26:33.750
宽度变多了

26:34.750 --> 26:35.710
宽度变多了

26:35.710 --> 26:36.710
我看一下

26:36.710 --> 26:37.870
宽度怎么回事

26:40.870 --> 26:41.670
宽度

26:41.670 --> 26:43.510
宽度设置无效的

26:43.510 --> 26:44.310
它的宽度

26:44.310 --> 26:45.510
我刚设置的宽度的

26:45.510 --> 26:47.830
但是没有设置成功

26:47.830 --> 26:48.870
这里写错了

26:48.870 --> 26:50.670
应该是div的client位置

26:50.670 --> 26:52.430
div的client height

26:52.430 --> 26:53.310
这里写错了

26:55.950 --> 26:56.470
这个地方

26:56.470 --> 26:56.990
我们看一下

26:56.990 --> 26:58.670
哪个地方还设置有问题

26:58.670 --> 27:00.070
top只设置有问题

27:00.070 --> 27:01.150
top只设置有问题

27:01.150 --> 27:02.350
top只就是0

27:02.550 --> 27:03.150
他不择

27:03.150 --> 27:04.590
因为我滑动太快的话

27:04.590 --> 27:06.150
他如果一下就小于0了

27:06.150 --> 27:07.030
一下就小于0了

27:07.030 --> 27:08.590
过后我就刚设置成复数了

27:08.590 --> 27:10.430
所以说我这里直接把它设置成0

27:10.430 --> 27:11.430
直接设置成0

27:11.430 --> 27:12.430
0就不用给单位了

27:13.990 --> 27:14.510
看一下

27:14.510 --> 27:17.090
再来

27:17.090 --> 27:17.530
宽度

27:17.530 --> 27:18.210
看一下宽度的

27:18.210 --> 27:19.090
对不对

27:19.090 --> 27:20.810
宽度591个相处多了

27:22.330 --> 27:23.890
宽度还是多了

27:23.890 --> 27:27.610
宽度591个相处

27:27.610 --> 27:28.370
那肯定多了

27:28.370 --> 27:29.570
肯定多了

27:29.570 --> 27:30.410
咱们来看一下宽度

27:30.410 --> 27:32.050
这里出了什么问题

27:32.050 --> 27:32.650
宽度

27:32.650 --> 27:34.450
我们这里要获取client位置

27:34.450 --> 27:35.610
我们把打印出来

27:35.610 --> 27:36.210
打印出来

27:36.210 --> 27:38.850
这个client console.log

27:42.850 --> 27:44.450
打印出来宽度

27:44.450 --> 27:46.290
宽度只有158

27:46.290 --> 27:47.730
宽度只有158的话

27:47.730 --> 27:49.090
为什么它这里变成了

27:49.090 --> 27:50.250
变成这么多宽度

27:50.250 --> 27:51.290
再来看一下

27:51.290 --> 27:51.650
刷新

27:53.410 --> 27:54.090
这里刷新

27:55.250 --> 27:55.810
我们这里

27:56.650 --> 27:57.290
158

27:57.290 --> 27:58.730
158没问题

27:58.730 --> 28:00.210
我看一下这个元素

28:00.210 --> 28:00.770
这个元素

28:05.790 --> 28:06.190
看一下

28:06.190 --> 28:10.750
container

28:10.750 --> 28:11.910
这里宽度646

28:11.910 --> 28:12.510
明白了

28:12.510 --> 28:13.630
明白了

28:13.630 --> 28:15.470
我这个宽度要最开始获取到

28:15.470 --> 28:17.950
因为我这里已经把它变成固定定位了

28:17.950 --> 28:19.390
所以它宽度要重新计算了

28:19.390 --> 28:19.750
对吧

28:19.750 --> 28:21.190
它的宽度要重新计算了

28:21.190 --> 28:23.390
所以我这个宽度要一开始就获取到

28:23.390 --> 28:25.750
其实这里边它已经包含了它的宽度了

28:25.750 --> 28:27.550
这个rigs里边

28:27.550 --> 28:28.550
这个变量rigs里边

28:28.550 --> 28:30.030
它已经包含了它的宽度了

28:30.030 --> 28:31.510
就是这个container

28:31.510 --> 28:34.750
就是这个div get bounding client rigs

28:34.750 --> 28:36.390
这里边它已经包含了它的宽度

28:36.390 --> 28:37.350
这里边有这个信息

28:37.350 --> 28:39.390
就宽度464

28:39.390 --> 28:41.190
那么按照之前的宽度来

28:41.190 --> 28:44.310
所以我们用这个宽度

28:44.310 --> 28:46.510
用这个hight 高度

28:47.630 --> 28:49.470
我们用这个保存

28:49.470 --> 28:52.150
那或者是你刚才记录到上面也行

28:52.150 --> 28:54.030
再来看一下

28:56.660 --> 28:57.620
你看

28:57.620 --> 28:58.780
现在就正常了

28:58.780 --> 28:59.380
对吧

28:59.380 --> 29:01.060
有一些正常了

29:01.060 --> 29:02.020
这是个吸附效果

29:03.140 --> 29:04.220
你看

29:04.220 --> 29:05.140
没问题吧

29:05.140 --> 29:05.780
好

29:05.780 --> 29:07.260
关键是现在怎么解除

29:07.300 --> 29:08.700
怎么把它解除掉

29:09.500 --> 29:10.500
怎么解除了

29:11.740 --> 29:13.740
这个有点麻烦

29:13.740 --> 29:14.380
有点麻烦

29:14.380 --> 29:14.980
这个怎么解除

29:14.980 --> 29:15.420
这个

29:16.060 --> 29:16.820
怎么解除

29:17.540 --> 29:17.820
好

29:17.820 --> 29:19.740
解除的话可以这样子

29:19.740 --> 29:21.300
你吸附的时候

29:22.220 --> 29:23.820
你吸附的时候

29:23.820 --> 29:25.700
那么我们来确定一下

29:25.700 --> 29:27.580
你滚动条滚动到哪个位置

29:27.580 --> 29:28.460
它会吸附

29:29.180 --> 29:29.940
就这里

29:29.940 --> 29:31.260
滚动条滚动到一个位置的时候

29:31.260 --> 29:31.980
它会吸附吗

29:31.980 --> 29:33.420
会产生这个吸附效果

29:33.420 --> 29:35.500
那么我们就记录一下

29:35.500 --> 29:38.320
记录一下

29:38.360 --> 29:41.360
记录滚动条的位置

29:41.360 --> 29:42.640
记录滚动条的位置

29:42.640 --> 29:44.240
你滚动到哪个位置的时候

29:44.240 --> 29:46.200
我要我把你吸附掉了

29:46.200 --> 29:48.000
把你吸附起来了

29:48.000 --> 29:48.160
好

29:48.160 --> 29:49.560
那么这个记录滚动条的位置

29:49.560 --> 29:51.240
我们可以用两个全球变量

29:51.240 --> 29:52.760
就是就一个变量

29:52.760 --> 29:53.320
就是top

29:53.320 --> 29:53.720
对吧

29:53.720 --> 29:54.000
top

29:54.000 --> 29:56.840
因为我们只关心这个滚动条的top

29:56.840 --> 29:58.240
scroll

29:58.240 --> 29:58.960
top

30:00.680 --> 30:02.360
一开始是0

30:02.360 --> 30:03.800
那么这里的记录滚动条的位置

30:03.800 --> 30:04.520
怎么记录呢

30:04.520 --> 30:05.840
就把这个复职呗

30:05.840 --> 30:06.240
对吧

30:06.240 --> 30:07.040
scroll top

30:07.040 --> 30:07.960
复职为多少

30:08.000 --> 30:09.880
复职为当前滚动条的位置

30:09.880 --> 30:11.240
那么当前滚动条的位置

30:11.240 --> 30:12.600
你可以用document

30:12.600 --> 30:13.880
document element

30:13.880 --> 30:14.680
scroll top

30:14.680 --> 30:14.960
对吧

30:14.960 --> 30:16.480
可以用这个

30:16.480 --> 30:17.680
也可以

30:17.680 --> 30:18.760
我们说兼容的话

30:18.760 --> 30:19.640
就可以加上什么

30:19.640 --> 30:20.800
body的scroll top

30:20.800 --> 30:21.280
对吧

30:21.280 --> 30:22.360
也可以用我们这一课

30:22.360 --> 30:23.960
后边要学习的就是

30:23.960 --> 30:26.400
其实就是补充一下

30:26.400 --> 30:28.200
scroll y

30:28.200 --> 30:30.000
window的scroll y也行

30:30.000 --> 30:31.200
他们都是一个意思

30:31.200 --> 30:32.120
都是一个意思

30:32.120 --> 30:32.960
那么我们记录一下

30:32.960 --> 30:34.040
window

30:34.040 --> 30:36.000
scroll y

30:36.000 --> 30:37.920
就是把之前滚动到哪个位置的时候

30:38.080 --> 30:40.360
它出现了这个现象

30:40.360 --> 30:42.440
那么一会滚回去的时候

30:42.440 --> 30:44.160
滚动条滚回去的时候

30:44.160 --> 30:45.680
是不是把它变回去完事了

30:45.680 --> 30:46.520
对不对

30:46.520 --> 30:47.960
一会滚动条的高度

30:47.960 --> 30:50.160
小于这个高度的时候

30:50.160 --> 30:51.000
滚动条往下滚动

30:51.000 --> 30:52.320
滚动条的高度越来越多

30:52.320 --> 30:53.160
越来越多

30:53.160 --> 30:55.200
那么一会滚动条滚回去的时候

30:55.200 --> 30:57.440
它小于了这个高度

30:57.440 --> 30:59.480
那么我把它变回去就行了

30:59.480 --> 31:00.640
对吧

31:00.640 --> 31:01.960
没问题吧

31:01.960 --> 31:02.680
OK

31:02.680 --> 31:04.040
那么这里记录滚动条的位置

31:04.040 --> 31:06.480
但是你要考虑到一个问题

31:06.560 --> 31:09.480
它可能滚动的非常非常快

31:09.480 --> 31:11.240
可能滚动的非常非常快

31:11.240 --> 31:12.640
导致的top了一下子

31:12.640 --> 31:14.720
比方说从100

31:14.720 --> 31:18.520
它的top只从100变成了负的1000

31:18.520 --> 31:20.160
那怎么办呢

31:20.160 --> 31:21.880
那怎么办

31:21.880 --> 31:24.280
你是不是还要加上那个以前

31:24.280 --> 31:25.400
你这个滚动条的位置

31:25.400 --> 31:25.960
不是

31:25.960 --> 31:28.400
你这个滚动条的位置是不是要减去那个以前

31:28.400 --> 31:28.840
对不对

31:28.840 --> 31:30.160
要减去那个以前

31:30.160 --> 31:31.920
因此了这里还要加上什么

31:31.920 --> 31:34.000
rex top

31:34.000 --> 31:34.880
你看这个意思吧

31:34.880 --> 31:36.040
我画张图

31:36.080 --> 31:38.480
这个不画图可能又理解不了了

31:38.480 --> 31:41.240
就是说我这里有一个

31:41.240 --> 31:42.320
这是我们的

31:42.320 --> 31:43.120
我们的页面

31:43.120 --> 31:44.400
颗是窗口

31:44.400 --> 31:45.560
四口

31:45.560 --> 31:48.120
然后背景就是外边

31:48.120 --> 31:49.280
这是我们的内容

31:49.280 --> 31:50.320
外面这个是内容

31:50.320 --> 31:51.680
中间这个框框的是页面

31:51.680 --> 31:52.560
是我们的页面

31:52.560 --> 31:54.680
内容很多很多很多

31:54.680 --> 31:56.640
我们再把这样子画一下

31:56.640 --> 31:57.600
这样子画

31:57.600 --> 31:58.960
这是我们的四口

31:58.960 --> 32:00.560
这是我们的页面

32:00.560 --> 32:02.000
因为内容很多很多

32:02.000 --> 32:03.560
然后要发生滚动

32:03.560 --> 32:03.880
好

32:03.880 --> 32:05.520
那么现在比方说

32:05.520 --> 32:07.000
比方说我们滚动的

32:07.000 --> 32:09.120
由于我们滚动的可能很快

32:09.120 --> 32:10.120
导致了什么呢

32:10.120 --> 32:12.760
导致了一下子突然间

32:12.760 --> 32:15.760
就把这个DIV滚动到这了

32:15.760 --> 32:16.080
对吧

32:16.080 --> 32:17.880
滚动到这了

32:17.880 --> 32:18.520
没问题吧

32:18.520 --> 32:19.960
滚动到这儿

32:19.960 --> 32:20.240
好

32:20.240 --> 32:21.000
那么一下子呢

32:21.000 --> 32:22.720
我瞬间把它设置为0

32:22.720 --> 32:23.920
然后来把它放到这个位置

32:23.920 --> 32:24.160
对吧

32:24.160 --> 32:25.040
把它固定定位

32:25.040 --> 32:25.920
把top设为0

32:25.920 --> 32:27.600
就把它把它放到这个位置

32:27.600 --> 32:29.880
但是它一下子泡到这来了

32:29.880 --> 32:31.040
那么你现在如果

32:31.040 --> 32:33.160
你仅仅考虑滚动条高度的话

32:33.160 --> 32:34.800
你考虑的是这一段

32:34.800 --> 32:35.400
对不对

32:35.440 --> 32:36.720
你考虑到滚动条高度的话

32:36.720 --> 32:38.320
只要考虑的是这一段

32:38.320 --> 32:39.960
因为我们得到滚动条高度嘛

32:39.960 --> 32:41.480
这个时候得到滚动条高度的话

32:41.480 --> 32:43.000
得到的是

32:43.000 --> 32:44.800
得到的是这一段对不对

32:44.800 --> 32:45.720
这一段

32:45.720 --> 32:45.920
好

32:45.920 --> 32:47.960
那你是不是还要加上这个复数

32:47.960 --> 32:48.680
对吧

32:48.680 --> 32:50.160
加上那个复的top值

32:50.160 --> 32:51.240
对不对

32:51.240 --> 32:52.680
是不是还要减去这一段

32:52.680 --> 32:53.600
对吧

32:53.600 --> 32:54.480
还要减

32:54.480 --> 32:55.560
还要减去这一段

32:55.560 --> 32:57.160
我们要的是这一段对不对

32:57.160 --> 32:58.400
我们要的是这一段距离

32:58.400 --> 32:59.640
那么一会滚动的时候

32:59.640 --> 33:00.720
滚动到这个距离的时候

33:00.720 --> 33:02.120
我再把它还原

33:02.120 --> 33:03.240
没问题吧

33:03.240 --> 33:04.800
我要的是这一段距离

33:04.840 --> 33:06.360
所以说我还要加上它的top值

33:06.360 --> 33:07.960
top值是复数嘛

33:07.960 --> 33:09.680
我就把加上就完事了

33:09.680 --> 33:11.000
因此我把记录下来

33:11.000 --> 33:12.160
记录下来

33:12.160 --> 33:13.960
那么一会我们之后

33:13.960 --> 33:17.360
之后再来进行滚动的时候

33:17.360 --> 33:19.120
再来进行滚动的时候

33:19.120 --> 33:20.360
就是判断一下

33:20.360 --> 33:22.320
如果你后边的滚动条距离

33:23.400 --> 33:24.160
window

33:24.160 --> 33:28.640
什么scroll y

33:28.640 --> 33:31.320
如果小鱼了

33:31.320 --> 33:32.760
如果小鱼了啥

33:32.800 --> 33:35.000
小鱼了scroll top

33:36.440 --> 33:37.760
是不是还原

33:37.760 --> 33:39.640
对不对

33:39.640 --> 33:41.760
比方说你之后一滚动到这儿来了

33:41.760 --> 33:43.200
我们本来只有这段距离

33:43.200 --> 33:43.680
对吧

33:43.680 --> 33:44.560
你往上滚动

33:44.560 --> 33:46.880
那么现在滚动到这儿来了

33:46.880 --> 33:49.080
是不是你到scroll top比它小了

33:49.080 --> 33:50.960
比它小的时候

33:50.960 --> 33:52.520
你把它还原

33:52.520 --> 33:54.400
怎么还原的

33:54.400 --> 33:55.720
咋还原的

33:55.720 --> 33:57.080
就把这些属性全部区域了

33:57.080 --> 33:57.800
你不就完事了吗

33:57.800 --> 33:58.320
对吧

33:58.320 --> 33:59.720
你可以用这种方式

33:59.720 --> 34:00.360
div

34:00.360 --> 34:00.960
什么

34:00.960 --> 34:01.880
set

34:02.000 --> 34:03.320
I去比有词

34:03.320 --> 34:04.440
用这种方式

34:04.440 --> 34:06.320
set I去比有词

34:06.320 --> 34:07.360
直接设置什么

34:07.360 --> 34:08.040
style

34:08.040 --> 34:08.920
直接设置style

34:08.920 --> 34:10.280
把它设置为控制不串

34:10.280 --> 34:11.600
设置这个属性为控制不串

34:13.000 --> 34:16.160
保存看一下

34:16.160 --> 34:16.560
滚动

34:16.560 --> 34:17.360
你看吸附了

34:19.440 --> 34:20.320
这个没效果吗

34:21.360 --> 34:21.760
我看一下

34:21.760 --> 34:22.920
这个有没有运行

34:22.920 --> 34:23.320
我看一下

34:27.210 --> 34:27.890
window

34:27.890 --> 34:34.190
地儿scroll y

34:34.190 --> 34:35.030
没有运行

34:35.030 --> 34:35.670
没有运行

34:35.670 --> 34:36.670
这个有点问题

34:36.670 --> 34:37.910
那我这里看一下

34:37.950 --> 34:38.950
这里记录了是啥

34:40.470 --> 34:41.190
记录了是啥

34:41.190 --> 34:43.950
scroll top

34:43.950 --> 34:46.150
可能这里记录的是有问题的

34:46.150 --> 34:47.230
看一下

34:47.230 --> 34:47.990
看记录了是啥

34:49.470 --> 34:50.390
记录的是

34:50.390 --> 34:51.150
哦

34:51.150 --> 34:52.150
它不断的记录了

34:52.150 --> 34:53.310
它不断的记录了

34:53.310 --> 34:54.310
所以说我们这里的

34:54.310 --> 34:54.910
这样子

34:54.910 --> 34:55.630
小于0

34:55.630 --> 34:56.310
不要等于0

34:56.310 --> 34:57.030
因为等于0的话

34:57.030 --> 34:58.430
它会不断的触发

34:58.430 --> 34:58.670
对吧

34:58.670 --> 35:00.070
因为它后面设置的

35:00.070 --> 35:01.190
设置成固定定位过后

35:01.190 --> 35:02.030
它一直是0

35:02.030 --> 35:02.270
对吧

35:02.270 --> 35:02.790
一直是0

35:02.790 --> 35:03.950
它会不断的触发

35:03.950 --> 35:04.390
这个时间

35:04.390 --> 35:05.710
它会不断的被记录

35:05.710 --> 35:06.550
被记录

35:06.550 --> 35:07.830
我们把它这样子

35:07.870 --> 35:08.910
这样子就行了

35:10.670 --> 35:11.190
小心看一下

35:12.270 --> 35:12.750
你看

35:12.750 --> 35:13.470
没问题了吧

35:13.470 --> 35:14.510
记录了一次

35:14.510 --> 35:16.150
那么我们往上滚动的时候

35:16.150 --> 35:16.910
只要比它小的时候

35:16.910 --> 35:18.150
它是不是又还原了

35:18.150 --> 35:18.350
对吧

35:18.350 --> 35:19.270
又还原了

35:19.270 --> 35:20.030
你看

35:20.030 --> 35:21.510
又还原了

35:21.510 --> 35:23.830
这就是实现这么一个基本的思路

35:23.830 --> 35:25.950
但是这里边要考虑的问题肯定很多

35:25.950 --> 35:27.110
不同的意愿不同的情况

35:27.110 --> 35:28.550
你还要充分的去考虑

35:28.550 --> 35:29.710
比方说它有panning

35:29.710 --> 35:30.590
有border

35:30.590 --> 35:32.190
那么你这里设置宽度

35:32.190 --> 35:33.590
高度是不是要考虑在内

35:33.590 --> 35:34.190
对不对

35:34.190 --> 35:34.950
要考虑在内的

35:35.950 --> 35:38.670
当然你可以直接给它设置一个啥

35:38.670 --> 35:41.470
简单粗暴一点给它设置个box sizing

35:41.470 --> 35:43.430
把它设置为border box

35:43.430 --> 35:44.510
把它设置为这个

35:44.510 --> 35:45.630
那么这样子不会有问题了

35:47.150 --> 35:48.230
总真的要考虑一下

35:49.070 --> 35:49.430
ok

35:49.430 --> 35:50.550
这就是一个吸附效果

35:50.550 --> 35:51.270
吸附效果

35:53.850 --> 35:55.050
这是这么一个例子

35:55.050 --> 35:56.890
下去代码其实不多

35:56.890 --> 35:58.810
但是你要充分理解

35:58.810 --> 35:59.850
下去把它完成

35:59.850 --> 36:00.810
你做一个练习

36:01.690 --> 36:01.890
好

36:01.890 --> 36:02.770
下面这个

36:02.770 --> 36:04.130
这个就顺了解就行了

36:04.130 --> 36:05.650
事件模拟

36:05.690 --> 36:06.650
事件模拟是什么意思

36:06.650 --> 36:07.570
就是有的时候

36:08.090 --> 36:10.050
我们的事件发生文件事件的时候

36:10.050 --> 36:11.490
都是靠用户去点击

36:11.490 --> 36:11.650
对吧

36:11.650 --> 36:12.810
靠用户去操作

36:12.810 --> 36:13.850
很多时候

36:13.850 --> 36:15.530
实际上不用等用户操作

36:15.530 --> 36:17.210
我们用ges

36:17.210 --> 36:19.050
也可以模拟一个事件

36:19.050 --> 36:20.090
最常见的事件模拟

36:20.090 --> 36:21.930
就是click和submix

36:21.930 --> 36:22.730
submix是什么

36:22.730 --> 36:23.810
form表单提交

36:23.810 --> 36:24.330
对吧

36:24.330 --> 36:26.570
click表示的是点击

36:26.570 --> 36:27.610
被点击了

36:27.610 --> 36:28.250
举个例子吧

36:29.290 --> 36:29.850
特色4

36:33.300 --> 36:34.860
比方说我们这里一个form表单

36:34.860 --> 36:35.780
我都在写一下

36:35.780 --> 36:36.420
都在写一下

36:36.420 --> 36:37.140
还有一个行当围

36:38.300 --> 36:39.460
提交到淘宝

36:41.830 --> 36:42.070
好

36:42.070 --> 36:45.070
form表单里面有一个按钮

36:45.070 --> 36:45.870
有一个按钮

36:45.870 --> 36:46.790
也不用按钮了

36:46.790 --> 36:47.910
也不用按钮了

36:47.910 --> 36:48.750
就一个DIV

36:48.750 --> 36:49.710
就一个DIV

36:51.350 --> 36:51.590
好

36:51.590 --> 36:53.750
然后DIV我给他设置个内样

36:53.750 --> 36:54.510
不用内样式了

36:54.510 --> 36:55.350
直接在这里设置

36:55.350 --> 36:56.110
尽量简单一点

36:57.630 --> 36:59.350
因为我们关注的是功能

36:59.350 --> 37:01.110
像这些什么样式的一些

37:01.110 --> 37:01.550
无所谓

37:02.790 --> 37:03.190
看一下

37:04.630 --> 37:06.310
我希望点击这个DIV

37:06.310 --> 37:08.750
他能够出发form表单提交

37:08.750 --> 37:09.470
他咋出发

37:09.510 --> 37:10.430
他是不是

37:10.430 --> 37:11.950
默认情况下肯定是不能出发的

37:11.950 --> 37:12.390
对吧

37:12.390 --> 37:14.350
但是我们可以用GS来版导

37:14.350 --> 37:14.790
比方说

37:16.110 --> 37:18.030
我们现在点击DIV

37:18.550 --> 37:19.150
DIV

37:21.190 --> 37:22.150
找到这个DIV

37:22.150 --> 37:22.750
Document

37:22.750 --> 37:23.230
Curves

37:23.230 --> 37:23.550
Negator

37:24.430 --> 37:25.310
找到这个DIV

37:25.310 --> 37:25.830
好

37:25.830 --> 37:26.190
然后

37:27.390 --> 37:28.750
给他注册点击事件

37:29.350 --> 37:30.670
DIV click

37:30.670 --> 37:31.310
unclick

37:31.310 --> 37:32.550
点击事件

37:32.550 --> 37:34.110
他点击的时候干嘛呢

37:34.110 --> 37:36.990
我去把这个form表单提交

37:36.990 --> 37:38.390
我手动提交

37:38.390 --> 37:39.190
不用他

37:39.230 --> 37:40.150
不用用户来操作

37:40.150 --> 37:41.790
我自己用介绍来给你提交

37:41.790 --> 37:42.910
那怎么提交呢

37:42.910 --> 37:43.550
很简单

37:43.550 --> 37:44.510
你得到这个form对象

37:45.910 --> 37:46.750
Curves

37:46.750 --> 37:47.550
得到这个form对象

37:50.170 --> 37:50.410
好

37:50.410 --> 37:51.370
然后调用他的什么

37:51.370 --> 37:51.970
莎布米斯

37:51.970 --> 37:52.250
完了

37:53.850 --> 37:54.930
执行他这个函数

37:54.930 --> 37:58.170
就相当于是执行了他这个事件

37:58.170 --> 37:59.690
相当于是触发了他这个事件

37:59.690 --> 38:01.050
触发提交事件

38:01.050 --> 38:02.730
就手动触发提交事件

38:02.730 --> 38:03.370
保存看一下

38:05.050 --> 38:05.930
这里我们点击他

38:05.930 --> 38:07.330
你看是不是还是提交了

38:07.330 --> 38:07.770
对吧

38:07.770 --> 38:08.730
提交了表单了

38:08.730 --> 38:10.010
点击DIV也可以提交

38:10.730 --> 38:11.370
看呗

38:11.370 --> 38:12.690
就是可以手动触发的

38:12.690 --> 38:13.570
可以手动触发的

38:14.570 --> 38:14.810
好

38:14.810 --> 38:16.090
比方说比方说

38:17.690 --> 38:19.530
再来有两个按钮

38:19.530 --> 38:20.650
一个是按钮1

38:21.610 --> 38:24.290
Btn1按钮1

38:24.290 --> 38:25.370
一个是按钮2

38:27.210 --> 38:27.850
Btn2

38:29.290 --> 38:29.570
好

38:29.570 --> 38:31.050
现在我们要得到这两个按钮

38:32.330 --> 38:34.810
我就直接用Btn1 Btn2简单一点

38:34.810 --> 38:35.570
Btn1

38:35.570 --> 38:37.050
我们给他注册一个unclick事件

38:38.050 --> 38:41.850
然后我们我们这里用erlats

38:41.850 --> 38:42.890
erlats

38:42.890 --> 38:45.530
按钮1被点击了

38:45.530 --> 38:46.810
或者用cancel

38:46.810 --> 38:48.410
一直用的是cancel

38:48.410 --> 38:49.210
cancel log

38:49.210 --> 38:50.210
按钮1被点击了

38:50.210 --> 38:51.370
这个很简单

38:51.370 --> 38:51.890
咱们来看一下

38:53.610 --> 38:54.410
点击按钮1

38:55.250 --> 38:55.970
点击按钮1

38:55.970 --> 38:57.970
你看就触发事件了

38:57.970 --> 38:58.210
好

38:58.210 --> 39:00.890
接下来我们要做这么一件事

39:00.890 --> 39:03.050
我们给按钮2注册点击事件

39:04.930 --> 39:06.210
按钮2点击的时候

39:06.570 --> 39:09.170
我不仅要触发自己的东西

39:10.490 --> 39:12.570
按钮2被点击了

39:12.570 --> 39:14.530
我不仅要触发自己的东西

39:14.530 --> 39:17.370
我还要模拟去点一下按钮1

39:17.890 --> 39:18.650
按钮1被点击

39:18.650 --> 39:19.370
按钮2被点击

39:19.370 --> 39:19.930
对吧

39:19.930 --> 39:21.970
我现在还要模拟按钮1被点击

39:21.970 --> 39:22.890
那怎么模拟呢

39:24.330 --> 39:24.930
很简单

39:24.930 --> 39:25.770
Btn1

39:26.530 --> 39:27.210
click

39:27.210 --> 39:27.690
完了

39:28.290 --> 39:28.690
完了

39:29.810 --> 39:31.530
相当于是这个用代码的形式

39:31.530 --> 39:33.010
给他点了一下这个按钮

39:33.010 --> 39:34.530
用户没有操作

39:34.530 --> 39:35.810
用户只简单按钮2

39:35.850 --> 39:36.770
但是按钮2呢

39:36.770 --> 39:39.050
它模拟了一个用户按钮1点击

39:40.050 --> 39:40.530
看一下

39:41.330 --> 39:42.930
按钮1的事件也被触发了

39:43.650 --> 39:45.530
就相当于是按钮1被点了一下一样

39:46.450 --> 39:47.250
就这么回事

39:47.250 --> 39:48.130
很简单

39:49.010 --> 39:51.370
但是不是所有的事件都能用这种方式

39:51.810 --> 39:53.450
这里我指数列出来两个click

39:53.450 --> 39:54.250
submit

39:55.010 --> 39:56.690
那么其他事件咋办呢

39:56.690 --> 39:58.330
其他事件得用这种方式

39:58.330 --> 39:59.250
dispatch

39:59.250 --> 40:00.010
event

40:00.010 --> 40:01.090
得用这种方式

40:01.570 --> 40:03.010
比方说再来个例子

40:03.530 --> 40:04.250
再来个例子

40:06.690 --> 40:07.290
再来个按钮

40:07.770 --> 40:08.450
按钮3

40:08.450 --> 40:11.890
Btn3

40:12.090 --> 40:13.610
鼠标移入

40:14.090 --> 40:15.570
移入按钮1

40:15.570 --> 40:16.930
这种情况用的很少

40:17.170 --> 40:18.130
了解就行了

40:18.370 --> 40:19.690
知道有这么个东西

40:19.810 --> 40:21.730
关键是你得知道有这么个东西

40:21.850 --> 40:23.490
不要以后遇到类似的问题

40:24.010 --> 40:25.650
你不知道有这个东西就麻烦了

40:26.970 --> 40:28.090
移出按钮1

40:31.090 --> 40:33.570
我用这两个按钮来模拟鼠标移入按钮1

40:33.570 --> 40:34.930
和鼠标移出按钮1

40:34.930 --> 40:36.370
那么我们这里先给按钮1

40:36.530 --> 40:38.170
注册鼠标移入移出事件

40:38.970 --> 40:39.970
按mouse

40:41.370 --> 40:41.970
inter

40:43.170 --> 40:44.490
当鼠标移入的时候

40:44.490 --> 40:45.930
把它的背景颜色改了

40:45.930 --> 40:46.690
background

40:47.770 --> 40:48.890
background

40:49.010 --> 40:49.810
等于啥呢

40:49.810 --> 40:50.970
等于红色

40:51.210 --> 40:51.810
红色

40:51.810 --> 40:52.530
然后呢

40:53.530 --> 40:54.970
他自己的颜色

40:56.410 --> 40:57.570
他自己的颜色

40:57.570 --> 40:58.450
改成

40:59.010 --> 41:00.410
改成白色

41:01.970 --> 41:03.450
鼠标移出的时候

41:03.850 --> 41:05.290
鼠标移出的时候

41:05.290 --> 41:06.090
mouse

41:07.090 --> 41:08.410
鼠标移出的时候

41:08.410 --> 41:09.450
改一下

41:09.450 --> 41:10.730
又把背景颜色了

41:10.730 --> 41:11.650
改成

41:11.650 --> 41:12.970
initial

41:14.570 --> 41:15.570
变成初始值

41:15.570 --> 41:17.130
颜色了也变成初始值

41:17.130 --> 41:17.810
initial

41:18.090 --> 41:19.010
看一下

41:20.730 --> 41:21.210
对吧

41:21.210 --> 41:21.970
没问题吧

41:22.610 --> 41:24.050
初始就变成白色了

41:24.450 --> 41:25.570
把它变成了白色了

41:25.570 --> 41:26.290
无所谓吧

41:26.290 --> 41:27.610
就是这么一个效果

41:27.970 --> 41:29.290
然后我们这里来模拟

41:29.290 --> 41:31.250
看怎么来模拟这个东西

41:31.250 --> 41:32.410
Btn3

41:33.250 --> 41:34.050
Btn3

41:34.050 --> 41:35.850
就是模拟鼠标移入

41:35.890 --> 41:36.930
按钮1的效果

41:37.450 --> 41:38.010
好

41:38.010 --> 41:39.130
怎么来模拟呢

41:39.610 --> 41:40.570
咱来模拟呢

41:40.570 --> 41:42.570
我们可以这种方式

41:43.970 --> 41:45.010
鼠标

41:46.050 --> 41:47.210
鼠标事件是啥

41:47.210 --> 41:48.130
我们之前讲过

41:48.130 --> 41:49.330
是一个构造函数

41:49.330 --> 41:50.690
叫做mouse event

41:50.690 --> 41:51.170
对吧

41:51.170 --> 41:53.770
我们只需要去创建这个构造函数就行了

41:53.770 --> 41:55.450
创建一个鼠标事件

41:55.730 --> 41:57.250
创建一个鼠标事件

41:57.850 --> 41:58.570
event

41:59.250 --> 42:00.850
创建这么一个鼠标事件

42:01.170 --> 42:01.850
nu

42:01.850 --> 42:03.290
一个mouse event

42:03.450 --> 42:03.690
好

42:03.690 --> 42:05.330
这个事件里面有两个参数

42:05.490 --> 42:06.770
第一个参数写啥呢

42:07.290 --> 42:09.130
第一个参数写的是事件内容

42:09.130 --> 42:11.370
因为鼠标事件也有很多鼠标事件

42:11.570 --> 42:12.970
点击鼠标移入

42:12.970 --> 42:14.730
鼠标按下有很多的事件

42:14.730 --> 42:15.810
那么这些啥呢

42:15.810 --> 42:16.610
mouse

42:16.970 --> 42:17.530
enter

42:17.810 --> 42:18.690
鼠标移入

42:19.290 --> 42:20.250
第二个参数是啥呢

42:20.250 --> 42:20.930
是配置

42:21.530 --> 42:23.010
配置个事件里面的一些信息

42:23.010 --> 42:24.290
比方说鼠标的位置

42:25.130 --> 42:26.570
什么鼠标的相对

42:26.570 --> 42:27.450
那些乱七八糟的位置

42:27.450 --> 42:27.730
对吧

42:27.730 --> 42:28.650
事件适逢冒泡

42:28.650 --> 42:28.810
对吧

42:28.810 --> 42:29.610
这些都可以配置

42:29.610 --> 42:31.770
比方巴博士件适逢冒泡

42:31.770 --> 42:32.410
不能冒泡

42:32.410 --> 42:32.850
对吧

42:32.970 --> 42:33.890
这东西都可以配置的

42:33.890 --> 42:34.770
都可以配置的

42:35.490 --> 42:36.530
其实扭烂期他做的

42:36.530 --> 42:37.810
就是用这种方式来做的

42:37.810 --> 42:39.530
他就是用这种方式来做的事件

42:40.450 --> 42:41.770
产生一个事件对象

42:41.770 --> 42:42.490
然后呢

42:42.490 --> 42:43.330
调用什么呢

42:43.330 --> 42:44.530
调用我们这里说的

42:44.530 --> 42:45.810
dispatch event

42:46.650 --> 42:49.250
我们给按钮1去分发这个事件

42:49.530 --> 42:50.610
dispatch event

42:51.450 --> 42:52.250
分发这个事件

42:52.250 --> 42:53.650
把这个事件对象传进去

42:54.610 --> 42:55.570
看一下

42:55.570 --> 42:56.130
这个事件

42:57.410 --> 42:57.970
移入

42:58.290 --> 42:59.170
你看是不是

42:59.410 --> 43:00.530
就当成鼠标移入了

43:00.530 --> 43:00.810
对吧

43:00.810 --> 43:02.370
就相当于是鼠标移入了

43:03.050 --> 43:03.890
移入看没有

43:04.490 --> 43:06.130
我们给按摩利事件

43:06.290 --> 43:06.530
好

43:06.530 --> 43:07.570
那么移出呢

43:07.810 --> 43:08.450
移出呢

43:08.450 --> 43:10.490
btn4是一样的

43:10.770 --> 43:11.650
mouse

43:12.610 --> 43:13.570
leave

43:14.650 --> 43:16.170
创建成这么一个事件对象

43:16.170 --> 43:18.410
当然这里的事件对象里面什么东西都可以写

43:18.410 --> 43:19.010
什么事件

43:19.010 --> 43:21.690
我们从事件对象里面不是可以得到很多数据吗

43:21.690 --> 43:22.210
对不对

43:22.210 --> 43:23.490
这些数据都可以配置在这

43:23.730 --> 43:24.810
都可以自行配置

43:24.810 --> 43:25.610
自行摩利

43:25.850 --> 43:26.050
好

43:26.050 --> 43:27.330
那么dispatch event

43:29.690 --> 43:30.370
好看一下

43:30.570 --> 43:31.090
移入

43:31.090 --> 43:31.570
移出

43:31.610 --> 43:32.290
移入移出

43:32.290 --> 43:32.890
移出移出

43:32.890 --> 43:33.410
看没有

43:33.810 --> 43:34.850
就是摩利事件

43:34.850 --> 43:35.810
了解下来就行了

43:35.810 --> 43:37.170
我们也没有什么相关作用

43:38.370 --> 43:38.610
好

43:38.610 --> 43:39.010
下一个

43:40.130 --> 43:41.170
关于其他的补充

43:41.850 --> 43:43.770
这一个就是scrollx

43:44.490 --> 43:46.210
page x offset

43:46.450 --> 43:47.570
scrolly

43:47.650 --> 43:49.210
page y offset

43:50.650 --> 43:51.810
他们几个东西呢

43:51.810 --> 43:53.410
就这两个是一样的

43:53.570 --> 43:54.850
这两个是一样的

43:54.930 --> 43:56.290
它相当于

43:57.250 --> 44:00.130
根元素的scroll top

44:00.930 --> 44:02.050
是一样的

44:02.530 --> 44:02.770
好

44:02.770 --> 44:03.770
然后呢

44:04.690 --> 44:05.210
这个东西

44:05.210 --> 44:06.130
这一对呢

44:06.130 --> 44:07.850
就相当于是根元素的

44:09.250 --> 44:11.210
就是用起来可能要方便一些

44:11.210 --> 44:13.530
用起来方便一些其他没啥作用

44:13.930 --> 44:14.650
scroll

44:15.010 --> 44:15.970
上面是left

44:15.970 --> 44:17.410
相当于是scroll left

44:17.650 --> 44:18.050
对吧

44:19.010 --> 44:20.010
这个很简单

44:20.130 --> 44:21.010
都是两个别名

44:21.010 --> 44:21.890
就几个别名

44:21.890 --> 44:22.410
你可以用

44:22.570 --> 44:23.210
你可以用

44:24.370 --> 44:24.570
好

44:24.570 --> 44:25.210
下面这个

44:25.210 --> 44:26.410
下面这个我说一下

44:26.570 --> 44:27.250
用的不多

44:27.250 --> 44:28.450
我们了解一下就行了

44:28.450 --> 44:30.090
知道有些这些东西存在就行了

44:30.570 --> 44:32.090
因为我讲的东西

44:32.090 --> 44:32.650
我就是

44:32.650 --> 44:34.330
我前边能够记得清楚

44:34.330 --> 44:35.450
我讲的东西的话

44:35.490 --> 44:37.410
那么说明这些东西是比较重要的

44:37.450 --> 44:38.930
我不太记得清楚的话

44:38.930 --> 44:40.610
说明这些东西平时用的很少

44:41.170 --> 44:41.450
好

44:41.450 --> 44:42.650
这几个这两个东西呢

44:42.650 --> 44:43.730
都是来设置滚

44:43.730 --> 44:45.530
这两个东西是设置滚动条的

44:45.570 --> 44:47.690
我们之前说设置滚动条可以设置啥

44:47.730 --> 44:49.330
是不是可以设置scroll top

44:49.330 --> 44:51.010
和scroll left

44:51.010 --> 44:51.610
对吧

44:51.650 --> 44:53.170
也可以通过它来设置

44:53.250 --> 44:54.330
这是一个函数

44:55.530 --> 44:55.770
好

44:55.770 --> 44:56.410
那么这里呢

44:56.410 --> 44:57.890
这两个函数还是有点区别的

44:58.010 --> 44:59.210
咱们了解一下就行了

44:59.410 --> 45:00.050
这个函数呢

45:00.050 --> 45:00.890
它是设置

45:01.410 --> 45:02.410
设置的是啥

45:02.490 --> 45:04.850
设置滚动条位置

45:05.450 --> 45:05.690
好

45:05.690 --> 45:06.690
比方说几个例子

45:08.730 --> 45:09.410
这吧

45:09.610 --> 45:10.170
那就是

45:10.170 --> 45:11.690
看一下哪个哪个地方

45:11.690 --> 45:12.730
它有滚动条

45:13.930 --> 45:14.490
这个

45:16.650 --> 45:17.770
主要看滚动条

45:17.890 --> 45:19.010
主要看滚动条

45:19.570 --> 45:19.890
好

45:19.890 --> 45:21.130
咱们比方说

45:21.130 --> 45:22.330
比方说温斗

45:23.090 --> 45:25.330
这两个方法是所有多么对象都可以用

45:25.330 --> 45:26.090
温斗也可以用

45:26.090 --> 45:27.250
因为温斗它有滚动条

45:27.250 --> 45:27.930
对吧

45:28.610 --> 45:29.210
你能看到

45:29.210 --> 45:30.410
能不能看到下面的滚动条

45:31.210 --> 45:32.010
怕你们看不到

45:32.570 --> 45:33.650
注意看下面的滚动条

45:34.170 --> 45:35.170
好scroll

45:35.810 --> 45:36.170
2

45:36.170 --> 45:38.090
当然它还有什么scroll x

45:38.090 --> 45:38.730
scroll y

45:38.730 --> 45:41.610
那就是设置很单独的设置横的和重的

45:41.610 --> 45:42.090
对吧

45:42.090 --> 45:43.850
scroll 2是设置两个

45:44.050 --> 45:44.730
两个函数

45:44.730 --> 45:45.330
一个是x

45:45.330 --> 45:45.850
一个是y

45:45.850 --> 45:46.130
对吧

45:46.130 --> 45:46.810
单独设

45:46.810 --> 45:48.090
就是直接设置就行了

45:48.890 --> 45:49.130
好

45:49.130 --> 45:49.450
然后呢

45:49.450 --> 45:50.090
这里边写啥

45:50.090 --> 45:51.250
那比方说写一百

45:51.450 --> 45:51.930
一百

45:52.610 --> 45:53.050
好

45:53.610 --> 45:54.010
回车

45:54.010 --> 45:54.650
你看一下

45:54.770 --> 45:56.730
那滚动条的高度是不是把它变成一百

45:56.730 --> 45:57.370
成一百

45:57.370 --> 45:57.890
对不对

45:58.010 --> 45:59.490
然后比方说是一千吗

45:59.490 --> 46:00.250
成一千

46:00.810 --> 46:00.970
好

46:00.970 --> 46:02.450
你看滚动条的位置是不是变了

46:02.770 --> 46:03.010
对吧

46:03.010 --> 46:03.850
可以手动设置

46:03.850 --> 46:04.730
第一个参数是x

46:04.730 --> 46:05.690
第二个参数是y

46:05.690 --> 46:06.370
就这么简单

46:07.010 --> 46:09.090
scroll 2

46:10.010 --> 46:10.130
好

46:10.130 --> 46:10.970
那么可以单独设置

46:10.970 --> 46:11.210
对吧

46:11.210 --> 46:12.290
还可以单独设置

46:12.290 --> 46:14.970
就是scroll x

46:15.290 --> 46:16.250
设置为多少呢

46:17.250 --> 46:17.490
对了

46:18.010 --> 46:18.890
scroll x

46:19.290 --> 46:20.490
单独设置 x 方向

46:20.490 --> 46:21.810
比方说设置为三千

46:24.210 --> 46:25.410
所以一生到此风格性

46:26.530 --> 46:27.130
不对吗

46:27.130 --> 46:27.850
scroll

46:28.130 --> 46:28.650
window

46:28.890 --> 46:29.850
scroll x

46:29.850 --> 46:31.210
scroll x 是属性

46:31.210 --> 46:31.770
是属性

46:31.770 --> 46:32.570
我在想啥呢

46:33.010 --> 46:33.410
我的天

46:33.410 --> 46:34.210
我在想啥呢

46:34.210 --> 46:35.570
是我们之前说的属性

46:35.570 --> 46:36.450
scroll x

46:36.450 --> 46:37.570
就把它想成函数了

46:38.570 --> 46:39.810
那直接使用scroll 2

46:39.810 --> 46:40.210
对吧

46:41.050 --> 46:41.290
好

46:41.290 --> 46:41.650
下一个

46:42.090 --> 46:43.850
下一个是window scroll top

46:43.850 --> 46:44.770
scroll by

46:45.810 --> 46:47.050
这个东西也是一样

46:47.050 --> 46:47.810
两个数字

46:47.810 --> 46:48.330
一个是x

46:48.330 --> 46:49.010
一个是y

46:49.010 --> 46:50.370
它有什么样的区别呢

46:50.370 --> 46:54.010
它是在指的是在原来的基础上增加多少

46:54.250 --> 46:55.250
可以写复数

46:55.250 --> 46:56.170
复数就减少

46:56.730 --> 46:57.890
比方说增加一千

46:58.890 --> 47:01.290
它不是把它设置为一千乘一千

47:01.290 --> 47:02.930
而是在原来基础上增加一千

47:02.930 --> 47:03.610
比方再运行

47:03.610 --> 47:04.690
你看再增加一千

47:05.690 --> 47:06.970
那么那些复的呢

47:06.970 --> 47:07.770
可以写复的

47:08.370 --> 47:09.130
复的一千

47:09.530 --> 47:10.570
注意看滚动条位置

47:10.570 --> 47:11.090
复的

47:12.010 --> 47:12.530
再来

47:12.530 --> 47:13.050
复的

47:13.050 --> 47:13.530
再来

47:13.530 --> 47:13.930
复的

47:14.930 --> 47:16.130
它指的是偏营量

47:16.770 --> 47:17.650
那么上面这个呢

47:17.650 --> 47:19.370
指的是绝对绝对值

47:20.010 --> 47:20.850
什么个意思

47:21.970 --> 47:22.450
好了

47:22.450 --> 47:23.810
那就是这一块

47:23.810 --> 47:25.330
下一个是resize to

47:25.330 --> 47:26.770
和resize by

47:26.970 --> 47:29.090
这个是设置窗口尺寸的

47:29.090 --> 47:29.490
但是呢

47:29.490 --> 47:30.930
这个东西我掩饰不了

47:30.930 --> 47:31.890
我只能说

47:32.330 --> 47:33.210
我先说吧

47:33.570 --> 47:34.050
这个东西呢

47:34.050 --> 47:35.250
跟resize to

47:35.250 --> 47:37.690
是直接把窗口尺寸设置为一个指

47:37.690 --> 47:38.610
它传两个参数

47:38.930 --> 47:41.970
一个是窗口的宽度

47:41.970 --> 47:43.130
一个是窗口的高度

47:43.130 --> 47:44.010
resize by

47:44.010 --> 47:44.890
传两个参数

47:44.890 --> 47:46.610
它是在之前的宽高上

47:46.610 --> 47:48.450
增加会减少一些指

47:48.450 --> 47:49.770
跟这个东西类似

47:49.770 --> 47:51.850
只不过它是设置的是尺寸

47:51.850 --> 47:53.490
为什么这个东西掩饰不了呢

47:53.490 --> 47:57.650
因为我们要能够设置的窗口的尺寸

47:57.650 --> 47:59.050
只能是啥呢

47:59.050 --> 48:01.490
只能是我们自己新建的窗口

48:01.490 --> 48:03.290
就通过代码创建的窗口

48:03.290 --> 48:06.370
那么如何来通过代码来打开一个窗口呢

48:06.370 --> 48:07.570
我们后边会学习

48:07.570 --> 48:08.570
后边会学习

48:08.570 --> 48:09.730
现在还没有学习

48:10.050 --> 48:11.850
只有通过代码打开的窗口里

48:11.850 --> 48:12.690
才能用这种方式

48:13.130 --> 48:15.570
如果你是用拥护打开的窗口

48:16.010 --> 48:17.090
你是不能控制的

48:17.090 --> 48:18.490
它是有权限要求的

48:19.290 --> 48:20.930
拥护你比方说

48:21.050 --> 48:23.970
那既然是如果可以做这种事情的话

48:23.970 --> 48:25.570
那拥护的浏览器就别玩了

48:25.570 --> 48:27.210
浏览器一会变成这个

48:27.210 --> 48:29.130
也会变成另外一个样子

48:29.130 --> 48:30.370
就浏览器的尺寸

48:30.370 --> 48:32.210
可以被既野斯代码所控制

48:32.210 --> 48:33.170
很恐怖的

48:33.170 --> 48:35.610
你访问一些网站比方说一二亿网站

48:35.610 --> 48:36.490
它把浏览器

48:36.490 --> 48:38.290
你打开过后浏览器可以放到最小

48:38.730 --> 48:40.410
而且它不允许你放大

48:40.410 --> 48:42.050
你放大过后它给它注册时间

48:42.050 --> 48:43.610
注册resize时间

48:43.610 --> 48:45.130
你放大过后它又把它缩小

48:45.130 --> 48:46.090
你根本就看不了

48:46.090 --> 48:47.210
用不了这个浏览器了

48:47.210 --> 48:49.450
它可能会有人捣乱

48:49.490 --> 48:50.690
所以说它不允许你这样做

48:52.370 --> 48:55.090
因此你这现在用两个函数是无效的

48:55.890 --> 48:58.370
但是以后我们学习了GS过后

48:58.370 --> 49:00.130
就是bomb那一部分之后

49:00.130 --> 49:03.570
我们可以用GS来弹出一个窗口

49:03.570 --> 49:06.290
用GS代码弹出的窗口它是可以控制的

49:06.730 --> 49:08.090
那个东西是可以控制的

49:08.610 --> 49:09.330
先了解一下

49:10.570 --> 49:11.650
就补充这么一些东西

49:11.650 --> 49:12.930
其实最重要的是这一部分

49:12.930 --> 49:14.650
元素位置其他都没啥了

49:14.650 --> 49:16.170
下来把这个吸附效果做一下

49:16.170 --> 49:18.010
这是也是一个蛮常见的效果

49:18.610 --> 49:19.290
好吧

49:19.290 --> 49:19.810
OK

49:19.810 --> 49:21.370
这是关于这一块的补充之事

49:21.370 --> 49:22.730
以后我想到的东西过后了

49:22.730 --> 49:23.730
再往里边加吧

