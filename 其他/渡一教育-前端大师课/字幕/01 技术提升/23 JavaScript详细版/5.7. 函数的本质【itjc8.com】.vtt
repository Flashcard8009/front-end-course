WEBVTT

00:00.000 --> 00:15.330
这节课咱们来探讨函数的本质

00:16.350 --> 00:21.470
其实在咱们第四节课的时候啊就第五章第四节课的时候

00:21.730 --> 00:26.090
我们讲那个函数表达是啊大家回忆一下啊不知道大家还有没有印象

00:26.590 --> 00:30.430
我们当时呢是在 ppt 里面画这个什么内存图对吧

00:30.690 --> 00:36.830
那画那个内存图的时候你没有感觉啊这个函数啊它跟对象是不是差不多

00:37.230 --> 00:41.190
对吧 它是引用内容啊 边量里边呢它也存的是地质

00:41.450 --> 00:44.250
你会感觉这个函数啊跟这个对象是差不多的

00:44.510 --> 00:48.870
实际上啊实际上函数的本质

00:49.370 --> 00:50.650
就是对象

00:51.170 --> 00:52.450
它就是一个对象

00:52.950 --> 00:57.570
所以说我们之前画内存图也好还有给什么复制也好

00:57.830 --> 01:02.690
这些各种各样的乱七八糟的特点呢都表现出来函数非常类似于一个对象

01:02.950 --> 01:04.470
函数其实它就是对象

01:05.450 --> 01:10.050
然后呢大家再回忆一下啊回忆一下咱们上几课讲的构造函数啊

01:10.310 --> 01:12.870
有些教程里边呢把这个构造函数

01:13.130 --> 01:14.410
叫做构造器啊

01:14.930 --> 01:15.690
就是说一下吧

01:16.210 --> 01:18.250
就是某些教程中

01:19.010 --> 01:19.530
将

01:20.030 --> 01:21.070
构造函数

01:21.570 --> 01:22.350
称之为

01:23.110 --> 01:27.450
构造器啊不要以后呢你看到别的教程你不知道构造器什么意思啊

01:27.710 --> 01:28.490
其实就是构造函数

01:29.770 --> 01:32.070
好我们当时上几课说了这么一个东西

01:32.830 --> 01:34.370
所有的对象

01:35.190 --> 01:35.950
都是

01:36.470 --> 01:37.110
通过

01:37.370 --> 01:38.430
关键字

01:38.690 --> 01:39.550
溜出来的

01:40.310 --> 01:44.910
也就是说一个对象的它产生对吧它一定是通过这种方式

01:45.430 --> 01:47.050
构造函数啊

01:47.310 --> 01:51.310
通过这种方式来产生的对象啊通过这种方式产生的对象

01:51.570 --> 01:52.590
我们当时还说了

01:52.850 --> 01:56.690
如果你的代码里边写了这么个东西啊如果你的代码里边

01:57.210 --> 01:57.970
比方说啊

01:58.230 --> 02:00.410
也代码里边写了这么个东西啊

02:00.670 --> 02:01.810
那这些东西啊

02:02.170 --> 02:05.930
啊这些东西是个对象对吧这个对象那么这个玩意儿呢

02:06.370 --> 02:09.410
这个玩意儿是啥呢这个玩意儿实际上是一个语法堂

02:09.690 --> 02:13.650
它的真实的写法啊真实的特征了它是这样子的

02:14.290 --> 02:18.650
啊就是前面这个啊比方说保保穿遍量里面吧啊保穿遍量里面

02:19.170 --> 02:21.850
它真实的写法呢是这样子的new object

02:22.730 --> 02:28.890
啊创建一个对象然后呢objx2obj y34

02:29.250 --> 02:30.890
这才是它真实的写法

02:31.290 --> 02:35.570
上面的这种写法呢只是为了方便我们书写啊做了一个语法堂

02:36.290 --> 02:41.090
同样的道理呢啊一个数组啊一个数组我们这样子写的对吧这样子写的

02:41.410 --> 02:46.130
那么它等效于下边这种写法啊new一个array对吧4

02:46.970 --> 02:52.850
然后呢它第一个位置呢是34啊第二个位置呢是new啊不写了啊

02:53.210 --> 02:55.330
它等效于下边这种写法

02:56.010 --> 03:00.050
所以说平时呢我们用数组也好用一个对象字面量也好

03:00.410 --> 03:03.010
其实它真实的写法是下边这种写法

03:03.690 --> 03:11.130
可以看出呢我们所有的对象啊都是通过new关键字啊创建出来的对象啊

03:11.130 --> 03:12.850
顺便说一句啊如果

03:13.850 --> 03:18.010
如果你的构造函数里边没有参数啊如果你不需要传参数

03:18.010 --> 03:21.370
那么你可以这样子写啊可以减一些啊把小过号去掉

03:21.850 --> 03:23.970
但是呢我不建议大家去掉啊

03:24.250 --> 03:28.890
因为你加上小过号呢就从代码的格式上呢就更加明显可以看出

03:29.170 --> 03:30.890
这里呢是一个构造函数的调用

03:31.690 --> 03:36.290
好了好我们上一课说了所有的对象都是new出来的

03:36.850 --> 03:41.250
哎这一课呢我们一开始就提到了函数呢本质就是对象

03:42.290 --> 03:43.130
来逻辑题

03:44.050 --> 03:49.890
那么问大家一个问题啊函数是不是通过new关键字创建的

03:50.930 --> 03:51.970
啊这是个逻辑问题

03:52.970 --> 03:56.370
所以一定是啊因为函数就是对象吧

03:56.770 --> 04:00.050
而所有的对象都是通过关键字溜出来的

04:00.570 --> 04:03.770
好咱们来看一下函数它本质是什么东西

04:04.770 --> 04:13.740
看一下啊咱们这里呢比方说啊写这么一个函数啊方形上求和

04:14.540 --> 04:18.340
啊一个参数a一个参数b然后返回a加b

04:19.140 --> 04:22.140
好这是个求和吗对吧没问题吧好我们输出啊

04:22.540 --> 04:28.340
输出求和对3加5求和啊看一下得到的结果是什么一个非常简单的函数

04:29.240 --> 04:40.720
看一下啊啊这里f12看看过来啊刷新好看一下就得到结果了啊这个没什么好说的

04:41.320 --> 04:47.920
好接下来我换一种协防啊我换一种协防好换什么协防呢我用这种方式来写看着啊

04:48.920 --> 04:56.120
这种协防了就类似于啊应该只能不能说完全相同啊是类似于你可以把想象成

04:56.720 --> 05:04.720
下面这种协防啊上上是什么呢它是一个函数函数本质上就是个对象好这个对象呢

05:05.220 --> 05:11.120
6后面写构造函数的吧后面写的是构造函数你通过哪个构造函数创建对象

05:11.520 --> 05:17.020
因为我们上年后讲的构造函数我们知道函数呢它是可以作为构造函数来创建对象的

05:17.520 --> 05:24.020
那么所有的对象呢其实本质上都是通过构造函数产生的而函数本身也是对象

05:24.420 --> 05:29.820
那么这个函数呢他也要通过一个构造函数产生出来那么这个构造函数是谁呢

05:30.720 --> 05:34.120
大写的f方式这就是他的构造函数

05:35.020 --> 05:43.020
好这个构造函数里面有哪些参数呢他钱他也无他应该说是有无限个参数啊应该说有无限个参数

05:44.020 --> 05:48.420
比方说啊上边这个求和对吧上面这个求和呢我们就可以这样子去

05:49.420 --> 05:54.920
第一个参数a 第二个参数b 函数体呢是returna加b

05:56.120 --> 06:06.220
好你看这个函数创建完成了注意哦这个sum他是一个函数我们来看一下我们把它当成函数来调用看行不行啊能不能得到这个结果吧

06:06.920 --> 06:12.220
保存啊看一下所以还是可以没问题吧好接下来我们再看啊再看

06:12.720 --> 06:20.120
我们这里呢输出type of上啊type of上看一下得到什么结果保存看一下

06:21.120 --> 06:28.820
得到的是一个方形说明了他认为这个sum是一个方形但是方形的他就是一个对象你看这个对象是通过6

06:29.320 --> 06:37.120
创建了对吧通过6创建的6构造函数的名字叫做方形这个构造函数呢是既然是已经给你写好了你不用你自己写啊

06:37.820 --> 06:46.020
我们因此呢我们这里可以得到一个结论当然我们平时写函数不要这样子写啊不要这样子写啊这种是函数表达是啊得到了结果呢

06:46.720 --> 06:52.920
一是不懂一月读二呢他没有提升啊等等等等有各种各样的问题啊大家平时写单码了不要这样子写

06:53.320 --> 07:00.720
但是呢我们要理解这个函数的本质就是通过一个构造函数创建的因此呢我们这里记一笔啊

07:01.720 --> 07:17.920
所有的函数所有的函数都是通过6方形创建的啊所有的函数都是通过6方形创建的再再一次说明了函数的本质就是这个对象

07:18.620 --> 07:24.420
哎说到这的话就有一颗问题了那这个方个形他是不是函数呢

07:25.120 --> 07:34.120
这个方个形他是构造函数嘛他肯定是函数对吧那方个形呢他也应该是对象的对吧函数的本质就是对象嘛那方个形是怎么来的呢

07:34.820 --> 07:40.820
你可以这样理解啊这就变成了一个先有机还是先有单的问题你可以这样理解

07:41.620 --> 07:50.020
咱们的浏览器呢有一个介石的执行环境对吧一个介石执行引擎啊我们刚之前在应该在这门口的第一页可以说了

07:50.420 --> 07:58.420
什么crown浏览器的一个v8引擎对吧介就是浏览器里边有介石执行引擎这个引擎启动的时候

07:58.920 --> 08:06.620
他就已经把这个方形给做好了直接放到内存里边啊供你使用所以说这个方个形呢

08:07.820 --> 08:14.720
不是用我们介石里边的东西来创建的啊他是一开始这个执行引擎启动的时候就给你

08:15.320 --> 08:19.520
写好了啊直接放到内存里边你看这个意思吧啊没问题吧

08:20.420 --> 08:26.220
所以说呢我们可以看到啊我们这个介石环境里边一定有的东西就是这个方式

08:26.720 --> 08:33.920
可以通过他来创建函数也就是说我们这个创世纪之初啊创世纪之初这个介石启动的时候

08:34.320 --> 08:38.720
有个什么呢啊你想啊咱们介石里边是不是一开始就有一个方式

08:39.620 --> 08:43.420
好他是不是能产生各种各样的函数对吧产生函数

08:43.820 --> 08:49.220
因为通过去六一个方个形就能产生各种各样的函数啊咱们这样子显得是一个余法堂

08:49.620 --> 08:52.020
实际上真实的效果是这样的效果

08:52.720 --> 08:53.320
没有这个意思吧

08:54.420 --> 08:54.620
好

08:55.720 --> 09:02.120
我们可以通过六一个方个形呢来产生各种各样的函数而产生的函数之后你看啊我们的

09:02.220 --> 09:02.720
OBGX

09:03.520 --> 09:08.220
我们之前看都看过了对吧OBGX 是吧我们的对象你看他是不是函数对吧

09:08.620 --> 09:12.520
Type array是不是函数对吧是函数吧没问题吧

09:13.120 --> 09:16.120
好我们可以看到这些东西都是函数这些函数哪来的

09:16.420 --> 09:20.120
都是通过这个方个形构造函数创建的啊这个是一开始就有的

09:20.920 --> 09:27.620
好他能产生各种各样的函数好咱们写的函数是不是又可以产生对象对吧产生普通对象

09:27.920 --> 09:32.620
其实函数本身也是对象我们把它叫做函数对象吧啊叫做函数对象

09:33.120 --> 09:38.720
好有了函数之后你看有了array这个函数有了object这个函数已经了我们上节课

09:39.320 --> 09:44.120
啊之前写的什么英雄怪兽这个函数对吧我们有了这些函数之后

09:44.920 --> 09:52.920
是不是就可以创建各种普通对象了对吧各种普通对象了啊就可以产生产生普通对象

09:54.720 --> 09:59.920
啊就是我们之前学的啊一个普通对象明白他的意思吗啊对吧好

10:00.120 --> 10:06.720
也就是说我们整个程序里程序里边理论上啊只要有一个方个形是不是整个程序就可以做出来了啊

10:06.920 --> 10:12.920
这个语言里边各种各样的东西都可以做出来了啊咱们再来说个例子啊一定要把这个理解好 test 2比方说啊

10:13.920 --> 10:14.920
我们写个写个

10:16.720 --> 10:24.520
好写一个就是代码比方说这里有一个user啊user这是个构造函数对吧一共传一个first lane

10:27.320 --> 10:28.120
和拉舍内

10:29.120 --> 10:29.720
嗯

10:30.320 --> 10:37.120
拉舍内好然后呢我们就可以在这里边创就相当于把它当成构造函数啊创建这么一个用户

10:37.320 --> 10:40.720
this first name first name and this last name

10:41.320 --> 10:46.320
复作为那是内好这个加一个吧 this is for the for the 等于呢

10:47.820 --> 10:52.720
this first name 拼接上空格再拼接上 this last name

10:53.720 --> 10:58.720
好有一个用户的构造函数好咱们来创建一个用户啊创建一个用户

11:00.220 --> 11:04.220
concept log啊输出一个新用户啊随便吧啊比方说

11:07.410 --> 11:13.510
好这样写完了咱们来分析一下这个程序啊都没有什么好运行的啊这个运行没有什么好运行的我们来看一下结果

11:15.410 --> 11:20.810
得到一个用户了啊一个用户对象好主要是我们来分析一下这个程序这个程序是怎么来的

11:21.810 --> 11:22.810
好看一下啊

11:24.110 --> 11:30.610
这是一个函数没问题吧他是个函数他是个构造函数嘛这个构造函数怎么来的是不是方形产生的

11:31.310 --> 11:39.710
没问题吧所有的函数都是通过六一个方形产生的因此呢这个方形的通过这个方形产生的优热这个函数对吧

11:40.110 --> 11:44.810
这是个函数啊函数他其实也是对象他也是一个对象好再看啊

11:45.510 --> 11:53.410
然后呢我们用去通过这个函数因为任何函数呢都可以把它当成构造函数好我们去六一个这个函数得到什么

11:53.810 --> 11:56.810
所以得到一个用户对象了啊得到一个用户对象

11:57.810 --> 12:01.110
原来这意思啊啊这个他们的结构啊我们通过方形

12:02.010 --> 12:06.610
创建一个函数又通过这个函数来创建一个普通对象

12:08.210 --> 12:14.410
好那我现在问大家一个问题啊不知道大家有没有绕云啊我这样子说看对不对啊这句话说的对不对

12:15.610 --> 12:20.410
所有呃呃就是六一个方形产生的对象一定是函数

12:22.010 --> 12:22.410
对不对

12:23.810 --> 12:30.810
对没问题对吧我们之前讲过的通过方形创建的对象啊六一个方形创建的对象就是函数

12:31.110 --> 12:36.710
函数的特点是什么函数其实他就是对象没有什么特别的只不过呢这个函数的对象呢

12:37.310 --> 12:44.910
创建他的构造函数呢比较特殊他是个这个方形其他的普通对象你看是我们自己写的函数可以创建一个普通对象

12:45.410 --> 12:50.810
可以通过六一个objects也可以创建一个普通对象六一个二位也是一个普通对象啊

12:51.110 --> 12:59.210
他是数主吗啊也是个普通对象但是如果你去六一个方形创建的对象呢他就是函数啊没有什么其他特别的

12:59.810 --> 13:02.410
而六一个函数创建的呢就是一个普通对象

13:03.010 --> 13:09.510
应该对是吧好一定要把理清楚啊理清楚好我们首先认识到函数的本质他就是一个对象

13:10.410 --> 13:16.310
也因为如此啊也因为如此函数的本质是由于是对象那对象里边是不是有各种属性啊对吧

13:17.310 --> 13:22.110
由于函数本身就是对象

13:23.110 --> 13:32.110
因此函数中啊可以拥有各种属性啊可以拥有各种属性没有任何问题

13:33.110 --> 13:36.710
比方说举个例子好看一下啊这么个例子

13:38.110 --> 13:41.410
这个由是一个函数吧没问题吧是一个函数吧

13:42.310 --> 13:49.610
好这个由这里边这个函数里边我能不能给他加属性能不能加属性啊 abc 随便写吧123

13:50.410 --> 14:00.110
能不能这样写呢没问题这个函数本身就是一个对象因此对象里边能不能有属性啊可以有属性啊可以有属性

14:00.410 --> 14:07.210
我们这里输出啊输出个优点123看一下啊 abc 啊看一下这个属性能不能加进去了

14:08.110 --> 14:15.310
看一下啊看看到没肯定是没问题的你可以把它当成一个普通就像使用就行了因为他本质上就是对象

14:15.910 --> 14:20.310
啊当然了他有他的特殊性他可以他可以调用对吧他可以用这种怎么

14:20.910 --> 14:25.910
他可以用优点的这种方式来调用对吧也可以通过构造函数6优点来调用

14:26.310 --> 14:34.910
但是他本质上呢就是一个对象啊你可以再加各种各样的属性啊比方说海太家比方说优热点特斯他又是个函数可不可以

14:35.710 --> 14:41.110
跟对象是一样的啊跟对象是一样的没有任何问题啊没有任何问题

14:41.610 --> 14:49.610
说这样子写也可以啊也可以啊可以调用优热点特斯看优热本身是函数那本身是函数他也是对象吗

14:49.910 --> 14:55.310
他也是对象里边他是不是可以有属性属性可不可以是函数当然可以没有任何问题

14:55.510 --> 14:55.810
看没

14:56.910 --> 15:01.310
哎这有点像啥呢这个地方啊他有点像我们的这个Lumber

15:02.310 --> 15:05.510
啊我们看这里我们就在这吧啊看一下啊

15:06.910 --> 15:14.310
嗯这个东西Lumber啊Lumber好Lumber这个是什么玩意呢我们先看一下个Lumber是什么玩意

15:14.910 --> 15:24.110
Type啊有些同学呢有印象如果你看了我之前的扩展课程里边的你会就对这个东西呢有印象啊你看一下我们首先输出他啊

15:24.510 --> 15:32.710
TypeLumber看是啥是方形对吧他是来自于哪呢他是来自于温斗对象的啊温斗对象里边有个Lumber啊有个Lumber

15:33.410 --> 15:39.310
看没啊他是个函数看没他是个函数啊我们用Type得到他呢他是一个函数

15:39.710 --> 15:47.610
但是个函数里边你会发现他还有属性啊他还有属性啊Lumber表示什么意思啊数字啊数字他还有属性怎么属性啊

15:48.110 --> 15:51.710
比方说啊意思NAN你看是不是属性啊

15:52.410 --> 15:59.910
意思NAN见过没是见过的我们以前用这个函数来判断一个数是不是NAN

16:00.610 --> 16:06.010
他其实在哪里面呢他其实在Lumber里边他是Lumber的一个属性看没

16:06.710 --> 16:12.710
所以说这个Lumber本身是函数同时这个函数里边呢他由于他是对象他里边也可以加各种样的属性

16:12.910 --> 16:18.210
其中一个属性就是意思NAN表示判断一个数字是不是NAN

16:18.810 --> 16:23.810
好比方说我用意思NAN来判断判断一个什么NAN

16:24.410 --> 16:28.010
判断一个NAN看一下是不是2对吧得到2

16:29.010 --> 16:36.010
这说明了啥呢说明了个Lumber里面有个属性意思NAN他是一个函数啊这Lumber里面还有很多属性你看了没

16:36.410 --> 16:44.010
他还有很多属性啊什么啊意思意思Failurity对吧是不是有限的你看这个属性是一个函数

16:44.510 --> 16:49.810
这个Lumber本身是函数他他里边有各种属性比方说啊NAN你看

16:51.010 --> 16:59.310
这个NAN得到的结果就是NAN其实我们之前用的意思NAN意思Failurity和NAN啊这些东西是来自于哪了

16:59.910 --> 17:06.310
是来自于Lumber里面的那为什么可以直接使用了啊是因为浏览器呢他为了让你用的方便啊

17:06.710 --> 17:10.110
因为我们知道温斗对象里边的东西呢是可以直接用的对吧

17:10.310 --> 17:16.510
所以他为了让你用的方便他把它放到了温斗里边所以说温斗里边啊他也有什么意思NAN你看看

17:16.710 --> 17:22.710
我们用的是这个实际上这两个是一样的啊是一样的啊温斗对象里边也有什么意思Failurity对吧

17:23.310 --> 17:26.110
是一样的啊他为了让你用的方便他把它放到温斗里边

17:26.510 --> 17:30.510
实际上我们真实的用的用的就是NANBAR里边东西啊用的是这里边东西

17:30.910 --> 17:34.910
明白这个意思啊我们从从从这里可以看出啊NANBAR

17:35.710 --> 17:43.510
他是一个函数啊他里边他同时也是个对象因为函数本质就是对象所以说他拥有很多很多的属性啊很多的属性

17:43.910 --> 17:49.910
包括了我当当时在扩展课程里面讲的讲过的这个NANBAR是吗最大值的啊能够使用的最大值啊

17:50.310 --> 17:57.110
max safe integer和NANBAR能够使用的是最大的就是那个小数啊上面是整数

17:57.510 --> 18:05.110
下面是小数最大的小数这是10的多少次方啊10的308次方啊1点几乘以10的308次方

18:05.910 --> 18:11.310
这些呢都属于NANBAR这个对象的属性啊同时的NANBAR本身是一个函数

18:11.610 --> 18:14.610
也就是说那个NANBAR还能不能当函数使用可不可以

18:15.210 --> 18:20.710
能不能当函数使用当然可以啊比方说把它啊一个字不串啊123

18:21.710 --> 18:29.910
看一下啊通过这个函数他可以把一个其他的类型的东西变成一个数字啊可以把其他类型变成数字

18:30.210 --> 18:35.810
我们之前说啊在进行运算的时候有的时候呢需要把其他类型的转换成数字对吧

18:36.110 --> 18:40.810
转换成数字那么这个转换是怎么转换的呢就是通过这个函数转换的啊

18:40.910 --> 18:45.510
就是通过这个NANBAR这个函数转换的啊比方说这个函数可以转啊比方说啊

18:46.610 --> 18:53.610
一个空字母串你看是不是转换的粘啊一个布尔丘是不是转换在一你看到没看到没啊

18:54.010 --> 18:58.810
这是一个函数可以直接使用哎那他可以直接使用能不能

18:59.810 --> 19:04.410
把它当成勾造函数使用了可以你看他手字母是不大写的对吧

19:04.810 --> 19:10.710
手字母是不大写的大写的对吧啊因此呢他实际上也可以当成勾造函数来使用

19:11.010 --> 19:20.410
6一个NANBAR6一个NANBAR0啊0表示创建一个对象啊对象的对象里边数字为0

19:21.610 --> 19:27.810
好这个地方我要讲一个东西了这个东西呢叫做包装内啊包装内

19:29.610 --> 19:33.210
好咱们来记记彼啊包装内

19:34.210 --> 19:46.210
好什么意思呢就是借使为了增强原始内想内形的功能啊为了增强原始内想哪些原始内想布尔

19:47.210 --> 19:57.210
制幅创数字对吧亨蒂范那些就不说了啊亨蒂范很闹就不说了主要是制幅创数字和布尔为了增强这些原始内想的功能了

19:58.210 --> 20:07.210
为每一个为布尔啊不说每一个吧为布尔制不错和数字啊NANBAR分别

20:08.610 --> 20:18.210
窗分别创建了一个创建了一个勾造函数啊勾造函数的名字就是以第一个名字就是布林

20:19.210 --> 20:28.610
第二个名字是军第三个名字NANBAR啊就我刚才看到的这三个都是勾造函数咱们再来看一下啊这三个都是勾造函数你看Type

20:29.610 --> 20:37.810
布林你看方形TypeStream大写的s方形TypeNumber

20:39.310 --> 20:46.010
方形你看三个勾造函数这三个勾造函数用来用来做什么了他为了增强原始内想的功能

20:46.410 --> 20:56.910
因为原始内想啊他不是对象对吧他不是对象因此呢他里边你要去得到他的属性能得到吗没有属性一个数字有啥属性呢一个字幕创都是原始内想

20:57.210 --> 21:05.610
他原始的值他没有属性一个布尔有啥属性了没有啊但是呢有的时候呢我们可能需要对一些数字呢做一些操作啊

21:06.110 --> 21:10.410
可能不太方便我们可以希望呢把它当成对象来使用因此呢

21:11.110 --> 21:20.210
解释他为这三个东西呢分别创建了一个勾造函数啊我们知道用勾造函数创建的是什么创建的是对象就不是原始内想了啊就不是原始内想了

21:20.910 --> 21:24.610
那么这些勾造函数有什么意义呢他是这样子他有这么一个规则

21:26.110 --> 21:33.910
如果啊如果对原始内想啊应该这样说啊如果与法上

21:34.910 --> 21:42.110
将原始内想啊内想当做对象使用时

21:43.610 --> 21:49.710
浏览器啊浏览器啊解释会自动啊自动在该位置

21:51.510 --> 21:52.510
该位置

21:53.710 --> 22:04.540
创建啊利用啊利用勾造对应的勾造函数创建对象啊来访问

22:05.640 --> 22:11.040
访问原始内想的属性应该这样说啊将原始内想

22:11.740 --> 22:15.940
如果在与法上将原始内想当成对象使用时啊一般一般是

22:16.640 --> 22:22.140
一般是在读取属性时啊读取或者说在使用属性时

22:22.940 --> 22:26.440
好这句话有点抽象啊不知道什么意思因为我把笔记记好

22:26.840 --> 22:30.240
我把笔记记好之后呢大家以后呢回过的时候才好看

22:30.540 --> 22:35.640
这就现在呢我们来举个例子啊举个例子你就明白了好比方说

22:37.140 --> 22:39.540
这里呢有一个变量啊比方说我们这里有个变量

22:40.940 --> 22:47.840
变量是123啊a等于123好有个变量这个变量啥类型啊

22:49.040 --> 22:54.640
他不是对象吧对吧他不是对象吧他什么类型了什么类型是不是那个

22:55.440 --> 23:00.340
数字内象对吧他是个数字内象ok接下来呢我们看一下

23:00.640 --> 23:03.140
如果我把他当成对象来使用

23:04.240 --> 23:10.040
找方法啊找方法比方说我这里呢使用这个方法啊使用这个方法啊

23:10.040 --> 23:14.640
我们知道这个属性呢一个函数作为属性的话他就是方法啊to fix

23:15.240 --> 23:19.440
表示什么意思呢表示的是保留小数点后面多少位啊我们这样子写吧

23:19.840 --> 23:28.040
这样子写啊重新给f子3.1415926啊我要保留小数点后面两位好我可以这样子写

23:28.440 --> 23:30.840
to fix啊这里写个2

23:31.540 --> 23:36.740
你看得到了结果是一个制服串啊这个函数运行的结果是一个制服串保留了两位小数

23:37.140 --> 23:43.140
这个解释起来倒是挺好解释的关键是你看这个语法很怪非常的怪

23:44.140 --> 23:47.040
他为什么很怪呢你看这里

23:47.840 --> 23:50.840
a这里他是一个原始内象

23:51.740 --> 23:58.640
原始内象里面会有属性吗不可能的只有对象里面才有属性还说是对象ok他里里面有属性

23:59.540 --> 24:05.940
那个对象本身是对象对吧他里面有属性他是原始内象数字制服串和布尔

24:06.340 --> 24:09.740
这些里边他不是对象因此他哪来的属性呢

24:10.540 --> 24:15.540
就是这里的规则如果在语法上你把原始内象当成对象在使用

24:16.240 --> 24:22.740
这个时候怎么办呢介石会自动在这个位置利用构造函数创建一个对象

24:23.840 --> 24:28.840
来访问原始内象的属性好什么意思啊说的还是很抽象你看这里啊

24:29.480 --> 24:34.560
他是个原始内象你把它当成对象在使用ok介石他就会这样来做

24:35.560 --> 24:40.260
你不是原始内象吗你不是想使用他的属性吗对不起原始内象没有属性但是

24:41.260 --> 24:47.860
介石为每一个原始内象做了一个构造函数通过这个构造函数创建的对象是不是有属性了

24:48.260 --> 24:52.760
对吧这个构造函数里面他写了很多代码给这个对应的对象了加了很多的属性

24:53.160 --> 25:00.660
好比方说啊这里是number对吧这里是数字好于是呢介石他这样子写了写个代码代码啊new number

25:01.360 --> 25:02.260
是不是创建对象了

25:03.260 --> 25:13.160
把这个A放进去原始内象A放进去说创建对象了ok创建好了对象你看获起来啊整个这个是不是对象对吧是个对象好

25:13.860 --> 25:21.960
对象里边是不是可以可以有函数了没问题吧对象里边总归可以有函数了所以说对象里边2fx是不是可以了对吧

25:22.660 --> 25:28.660
可以了没问题了啊实际上上边这个代码等效于下边这个代码

25:29.260 --> 25:37.360
临时的创建一个对象他不是把A变成对象啊A的A的内情是没变的啊A的内情是没变的啊你看一下type 5A

25:38.060 --> 25:46.960
他还是个number啊他的内情是没变的他是把A放进去啊来创建一个对象啊创造一个对象这个对象里边他就给你提供了啊

25:47.460 --> 25:56.060
这个对象里边就给你提供了就是这些常见的一些操作啊比方说数字呢啊保留到几位小数啊就提供了这么一些操作

25:57.060 --> 26:03.860
明白这个意思吧啊好那么大家再来回答一下这么一个问题啊看一下有没有错理理解

26:04.760 --> 26:22.960
这是A1啊或者叫N16一个number 123啊然后呢N26啊就是123好现在请问N1和N2是否相等啊N1和N2我不写了啊后边

26:23.760 --> 26:27.060
是否相等了N1和N2

26:28.560 --> 26:32.960
是否相等了有同学相等他都是123咱们来看一下啊

26:34.160 --> 26:38.560
应该说严格相等啊应该应该说严格相等是不是严格相等了

26:39.360 --> 26:44.960
不是严格相等啊不是严格相等因为他们的内情都不一样你看一下啊

26:45.660 --> 26:51.260
刚才用的是两个等号是可以的啊两个等号是可以的但是严格相等是不行的

26:51.760 --> 26:54.360
好为什么呢因为你看一下这里

26:55.260 --> 27:10.860
N1什么类型啊 object 它是个对象而N2呢啊N2是一个数字两个类型都不一样对吧那谈什么严格相等的谈不了严格相等啊我们以后说相等都指的是严格相等啊

27:12.060 --> 27:15.460
否则的话我会说普通相等啊普通比较相等

27:16.460 --> 27:20.060
这里呢两个类型都不一样所以说他一定不是严格相等的

27:20.260 --> 27:23.860
明白这个意思吧他这个东西是对象对象里面可以有数项啊

27:24.460 --> 27:31.060
而这个原式内象里面啥都没有就是一个字啊他为什么要做这个对象出来是为了以后呢我们用起来方便

27:31.260 --> 27:35.460
比方说我们要用一个原式内象的数项他会自动给你转成对象啊

27:35.660 --> 27:41.260
自动在那个位置呢临时给你临时给你创建一个对象啊然后呢让你去调用一个函数

27:42.260 --> 27:49.060
明白这个意思吧好除了数字之外的制服串也是同样的问题啊也是同样的啊制服串我们看一下啊

27:50.660 --> 27:53.060
制服串比方说啊s

27:54.860 --> 27:59.460
看一下type of s 制服串吧好然后呢s 2

28:00.660 --> 28:03.260
六一个十击啊六一个十击

28:04.260 --> 28:08.460
看一下type of s2你看啊不几个字

28:09.060 --> 28:17.340
看没这是一个对象了好来比较的时候s是不等于s2呢啊不相等因为内形都不一样一个是制服串一个是对象

28:18.180 --> 28:26.980
明白这个意思吧啊这也是个包装内同样的布尔也是一样啊布尔也是一样只不过呢这些构造函数啊这些构造函数他里边具体

28:27.700 --> 28:35.940
给力了哪些东西啊给力了哪些东西我们在下一张节讲标准库的时候再详细说我们先认识这么一个特点啊

28:36.300 --> 28:45.260
就是当我们去使用他的时候了把当成对象的使用的时候他会自动在这个位置呢给你临时转换成对象啊然后你去让你使用他里边的数项

28:46.780 --> 28:51.100
好像这三个构造函数呢我们把它叫做包装内为什么叫做包装内呢

28:51.980 --> 29:00.780
内这个概念呢我说一下啊关于内这个概念那这个概念呢在加把语言里边语言里边啊经常出现的什么后端一些面向对象的语言里边是

29:01.420 --> 29:09.900
经常出现的但是在节词里边呢出现的比较少因为节词里边的内呢你可以认为他就是构造函数啊

29:10.820 --> 29:11.620
在节词中

29:12.460 --> 29:17.860
那仅仅是在节词中是这样子啊如果你以后需要学加把语言的话又不一样了在节词中

29:18.540 --> 29:23.100
啊可以认为内就是构造函数啊

29:23.980 --> 29:31.700
那什么叫包装内包装内就是包装就是包装构造函数啊用来把一个原式内想包装成为一个对象的啊

29:31.820 --> 29:39.660
把它包装成为一个对象的来起起到一个什么作用呢我们就可以像像使用对象的样子去使用一个原式内想的属性了

29:39.980 --> 29:45.780
当我们去使用原式内想的属性的时候啊当我们去使用一个原式内想的属性的时候

29:46.780 --> 29:50.860
比方说s你看s支付到长度9

29:51.580 --> 29:56.820
凭什么能够取到他属性9支付出是一个原式内想他哪有这个属性根本就没有他怎么来的呢

29:57.060 --> 30:03.780
他实际上他发现你在取他的属性的时候他做了这么一个操作6一个实均s传进去啊第二内是

30:04.460 --> 30:07.140
临时创建一个对象来使用他的属性

30:07.580 --> 30:10.820
另外这意思吧他并不会改变这个对这个s的

30:11.500 --> 30:15.300
任何东西他是临时创建一个对象然后去调用对象的属性

30:16.020 --> 30:22.060
这就是包装内的好处我们可以当成原式内想当成对象的样子去使用原式内想的属性

30:23.180 --> 30:25.540
好吧这是关于包装内啊帮助包装内

30:26.620 --> 30:33.540
好那么我们之后呢还有之前还说到知识就讲完了啊这里来说说两个数语啊说两个数语

30:34.420 --> 30:42.220
就是有的时候了我们的属相啊属相也好方法也好方法其实又是属性对吧只不过他是一个函数嘛

30:42.660 --> 30:49.020
好方法了有的时候呢我们在对象上去使用的有的时候呢是在

30:49.740 --> 30:54.460
那个内里边也是构造函数里边去使用的啊有这么两种情况

30:55.300 --> 30:59.500
你看哈比方说啊比方说咱们有一个s

31:00.380 --> 31:01.900
n 六一个number

31:03.620 --> 31:10.540
二看没啊一个n n里边不是一个to fix什么对吧 to fix的啊我们这里写个换一换一个吧

31:11.540 --> 31:13.420
3.1415926

31:15.380 --> 31:18.300
看着啊这个n呢他有个函数to fix

31:19.020 --> 31:26.940
取两个小数对吧好这个函数是在哪里调用的是在对象上边啊就是普通对象上边使用的

31:28.220 --> 31:36.420
使用的属性像这种属性或者方法呢我们把它叫做成员方法啊有的叫做实力有的时候一把叫做实力方法

31:37.340 --> 31:44.860
好这里个说法啊以后呢我说到某个方法是成员方法或者叫做实力方法那么意味着啥呢

31:45.060 --> 31:51.060
意味着他是通过一个函数创建的一个对象通过一个对象去使用的这叫做成员方法

31:52.140 --> 31:54.980
成员方法或者叫做实力方法

31:56.700 --> 32:03.820
实力是什么意思就是通过一个对一个构造函数创建的对象啊创建的对象叫做实力

32:04.740 --> 32:13.820
实力方法通过一个实力啊比较到这里这个n就是一个实力什么的实力呢我们可以这样子说n是这个男本构造函数的对象

32:14.180 --> 32:22.260
也可以称之为n是这个男本构造函数的实力啊实力它这是一种教法啊以后说到你要知道什么意思

32:22.780 --> 32:28.300
那么这个方法呢这个方法或者说这个属性它是通过这个对象来调用的

32:28.420 --> 32:36.340
所以说这个方法呢我们把它叫做成员方法或者叫做实力方法啊有的时候当然也也把它叫做属性啊属性也是一样的

32:37.180 --> 32:42.900
成员属性实力属性成员方法实力方法都是一个意思啊表示

32:44.060 --> 32:45.740
表示该属性

32:47.540 --> 32:49.820
该属性是通过

32:51.620 --> 32:54.980
构造函数创建的对象

32:55.980 --> 32:59.100
调用的啊你应该通过它的对象来调用

32:59.900 --> 33:10.580
这是个成员属性和实力属性以后我说到这个词你一定要知道什么意思啊咱们到下一张就要到处说这个词了啊以后要说成员属性实力属性以后呢要说另外一个词叫做

33:11.140 --> 33:12.380
静态属性

33:14.020 --> 33:15.460
或者叫做内属性

33:16.580 --> 33:17.100
内属性

33:17.820 --> 33:23.260
或者叫做内方法我们以后说到内属性内方法是什么意思呢表示该属性

33:24.260 --> 33:27.660
啊是通过构造

33:29.460 --> 33:31.460
构造函数本身

33:32.180 --> 33:32.700
调用的

33:33.660 --> 33:38.340
因为构造函数本身它也是个对象它里边也可以有方法也可以有属性

33:38.580 --> 33:48.260
因此呢像这种直接通过构造函数本身调用的属性呢叫做静态属性或者叫静态方法或者叫内属性内方法好看着啊看着

33:48.980 --> 33:49.700
啊比方说

33:50.500 --> 34:02.500
这个实均里边啊实均里边啊还有这么一些东西啊有这么一些东西啊有这么一些东西啊比方说吧我们这里还是用Lumber吧啊还是Lumber意思NAN

34:03.060 --> 34:05.540
好这是个函数吗对吧这是个方法吧

34:06.460 --> 34:08.900
这个方法是通过构造函数调用的还是通过

34:09.980 --> 34:11.900
这个构造函数的对象调用的

34:12.900 --> 34:20.060
那种你或者说你告诉我这个意思NAN它是成员方法还是静态方法

34:21.260 --> 34:23.060
或者叫做内方法它应该是哪一种

34:24.260 --> 34:29.780
是不是静态方法它通过构造它是放到构造函数里边的啊放到构造函数里边的

34:29.980 --> 34:30.500
因此呢

34:31.060 --> 34:37.300
它这个方法呢叫做静态方法也叫做内方法以后呢我说啊以后我要为什么要讲这个东西啊

34:37.500 --> 34:41.300
就是以后呢我讲的到那个标准库的时候我说啊我介绍

34:41.740 --> 34:46.820
哎这里有个构造函数它有哪些内方法有哪些静态数项

34:47.340 --> 34:52.700
你要说你要知道我说的是啥意思这些数项是在怎么去调用的怎么去使用的你要知道

34:53.180 --> 35:00.460
啊我说这个构造函数有哪些成员数项啊有哪些成员数项你要知道我说的是什么意思啊

35:00.980 --> 35:05.340
你现在得把这个搞清楚连这个概念都不知道你根本就不知道我以后说的是什么意思

35:05.740 --> 35:10.860
它其实并不难啊就是看这个这个数项呢或者说这个方法是怎么调用的

35:11.220 --> 35:18.380
那比方说我这里创建一个n六一个男本啊六一个男本随便写吧 那这个n里边有没有意思呢

35:19.620 --> 35:30.180
n里边就没有了啊看一下意思n a n n里边就没有了原来的意思啊啊因为它是个静态方法静态成员啊或者要静态数项

35:30.740 --> 35:36.500
内属性内成员内方法说的都是一个意思啊他就必须要通过构造函数来调用

35:38.020 --> 35:46.180
好像这种n里边有啥呢有2fx对吧有2fx还有一些东西啊海鲜丹去把到东西啊那么像这些呢我们

35:47.620 --> 35:52.020
像这些这些方法呢都叫做成员方法啊成员方法

35:53.060 --> 35:56.660
好一定要搞清楚啊一个是静态的一个是实力的

35:57.620 --> 36:05.620
好这是关于包装内择一块好韩数的本质我们就讲完了啊韩数的本质呢我就希望大家能认识到韩数呢他本身就是一个对象

36:05.940 --> 36:12.660
这个既然他是对象啊那么他里边是肯定是可以存存放任何东西的他可以给他加属性啊可以给他加

36:13.300 --> 36:22.500
方法到这个对象里边啊只不过呢他是一个特殊的对象他是通过六方个性来创建的他本身呢可以当成韩数来调用啊其他都没什么区别

36:23.460 --> 36:23.940
好吧

36:24.980 --> 36:37.380
ok啊咱们这一张到此结束了啊第五张韩数到此结束了但是韩数的事事情呢是远远没有结束的我们以后在境界部分还会回过头来深入的去探讨韩数

36:37.780 --> 36:44.980
不过目前呢到此为止了啊以后呢我们因为目前我们的支持呢就是已经足够让我们去

36:45.860 --> 36:49.140
实现网页里边的很多效果了所以说我们目前到此为止

36:49.540 --> 36:57.460
之后呢我们再来进行来补充好吧好韩数完了这个章节完了过后呢有些朋友就迫不及待的想去学习什么做页面了对吧

36:57.860 --> 37:05.620
还不着急啊还杀最后一块支持就是标准库标准库是什么呢咱们下一张再讲吧那块很简单啊很简单

37:05.940 --> 37:15.060
真的哪个地方已经结束了如果你能把第五张学习完啊觉得前面都没有什么问题了作业人也能做完那么恭喜你一把最难的关卡已经过了

37:15.060 --> 37:20.020
后边就会逐渐的越来越简单越来越简单好吧好这是第五张啊韩数

