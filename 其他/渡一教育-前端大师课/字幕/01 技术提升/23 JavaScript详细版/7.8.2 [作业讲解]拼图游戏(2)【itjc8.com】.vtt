WEBVTT

00:00.000 --> 00:16.290
好 这里呢 我们可以用这种方式来进行处理

00:16.290 --> 00:20.330
看着 我给大家提供一个试录 什么方式呢 就这种方式

00:21.850 --> 00:25.490
就有 我们现在不是一个数组吗 对吧 数组里面是不是记录了对象 对吧

00:25.490 --> 00:32.570
对象有什么left 对吧 left 比方说年top 年对吧对象的一个字 其他属性不管了

00:33.770 --> 00:38.050
我们主要是控制这两个属性 对吧 第二个是什么left

00:38.650 --> 00:44.850
166top 年 对吧 比方说嘛 就这么一些啊 后边我被写了

00:45.810 --> 00:49.330
再写一个嘛 再写一个 这个是再来啊

00:50.250 --> 00:57.330
332 比方说top 年啊 下面这个第四个就不写了啊 后面 这咱们的数组 我怎么来

00:57.930 --> 01:01.690
改变这个东西的 我改变的不是数组顺序 我改变的是这个东西

01:02.330 --> 01:08.570
它的位置要改变 明白这个意思吧 我要改变这个东西 那怎么来改变呢 给大家提供一种思路

01:09.290 --> 01:12.330
就是我循环这个数组 把数组的第一项拿出来

01:13.570 --> 01:18.490
然后随机产生一个数组的下标 就是从这个数组中随机取一个

01:19.050 --> 01:23.090
把这数组的比方随机取到这个 把这两项的

01:24.090 --> 01:25.290
left top只交换

01:26.290 --> 01:28.130
明白这个意思吧 把这两项的交换

01:28.970 --> 01:35.770
然后再循环到数组的第二项 然后再随机取一个 再随机取一个 比方说取到第一个 又把这一个交换

01:37.370 --> 01:43.050
明白这个意思吧 我们用这种思路来做 所以我们的思路是什么呢 我们的思路是

01:44.090 --> 01:48.890
4循环 循环啥 循环数组 对吧 循环数组

01:49.610 --> 01:55.490
i等于你i小于什么blogs 调链式 循环这个数组 i加加

01:56.650 --> 02:03.730
然后这里干嘛呢 随机产生一个下标 随机产生一个下标 干嘛呢 然后呢

02:04.410 --> 02:08.330
将当数组的当前项 第二步将数组

02:09.530 --> 02:09.690
将

02:10.770 --> 02:13.970
数组的当前项 有当前的id i项

02:14.690 --> 02:18.410
与随机向就随机产生下标类向

02:19.810 --> 02:22.890
交换left和top值 对吧

02:24.450 --> 02:27.370
这样子的结果是不是就随机了 这就完了

02:28.330 --> 02:34.050
好 随机产生一个下标啊 那么随机是不是要得到一个随机数 对吧 我们那我们又需要个函数来处理

02:34.570 --> 02:36.650
正常的 你看我写到多少 多少行 100多行

02:37.330 --> 02:39.290
天呐 100多行小k生的

02:40.010 --> 02:46.010
1000行一个中型项目啊 不要说中型项目一个小型项目啊 不要说小项目了一个微型项目

02:46.410 --> 02:52.810
1000行是起步价 追涨一千行 这才100行东西大打打打 大胆的写不要怕

02:53.410 --> 03:00.810
啊 该钱咸头就去写函数啊gats ride down对吧得到一个随机数给我个最小只给我一个最大只 我来帮你产生一个随机数

03:00.810 --> 03:30.810
书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书书�

03:30.810 --> 03:33.250
打什么36做19

03:33.550 --> 03:35.330
我来说

03:36.770 --> 03:47.830
学习拿到书书书书书书书书书书书书书书书书书书书书书书书先生

03:48.170 --> 03:50.450
书书在孩子里面

03:53.490 --> 03:55.710
书书书 Nigel

03:58.150 --> 03:59.130
Y

03:59.130 --> 04:01.010
是不是最大值

04:01.010 --> 04:02.090
就最大值嘛

04:02.090 --> 04:02.490
对不对

04:02.490 --> 04:03.770
最大值

04:03.770 --> 04:04.330
好

04:04.330 --> 04:05.530
然后这个数据下标出来了

04:05.530 --> 04:06.850
然后交换这两项了

04:06.850 --> 04:07.970
Left和Top

04:07.970 --> 04:08.170
好

04:08.170 --> 04:09.410
先交换Left

04:09.410 --> 04:11.330
交换Left

04:11.330 --> 04:11.530
好

04:11.530 --> 04:12.730
交换Left

04:12.730 --> 04:13.850
一个来嘛

04:13.850 --> 04:17.770
一交换Left

04:17.770 --> 04:20.650
交换变量跟交换属性是一样的

04:20.650 --> 04:21.730
定一个变量什么

04:21.730 --> 04:22.650
等于啥

04:22.650 --> 04:25.730
等于第一个就是Blox

04:25.730 --> 04:27.410
当前向的什么Left

04:27.410 --> 04:28.530
把保存下来

04:28.570 --> 04:32.130
然后把当前向的Left

04:32.130 --> 04:33.490
变成啥

04:33.490 --> 04:35.130
把当前向的Left变成啥

04:35.130 --> 04:39.330
变成目标向index的Left

04:39.330 --> 04:39.970
对吧

04:39.970 --> 04:44.210
然后把目标向的index的Left

04:44.210 --> 04:46.290
等于啥

04:46.290 --> 04:47.130
等于啥呢

04:47.130 --> 04:51.290
等于那个

04:51.290 --> 04:52.250
Temple点

04:52.250 --> 04:53.050
就等于Temple

04:53.050 --> 04:53.770
对吧

04:53.770 --> 04:54.730
交换Left

04:54.730 --> 04:54.890
好

04:54.890 --> 04:56.090
那么交换

04:56.090 --> 04:57.890
交换Top是不一样的

04:57.890 --> 04:59.290
一样的

04:59.290 --> 05:00.330
把这个复制一下

05:00.330 --> 05:02.050
一样的

05:02.050 --> 05:04.370
那么交换Top等于Top

05:04.370 --> 05:06.050
当然这里就没有必要写话了

05:06.050 --> 05:07.890
不需要重新定义了

05:07.890 --> 05:08.730
Top值

05:08.730 --> 05:08.890
好

05:08.890 --> 05:11.050
那么这里把改成Top就完事了

05:11.050 --> 05:13.450
改成Top就完事了

05:13.450 --> 05:14.450
交换Left是Top

05:14.450 --> 05:15.330
这就是洗牌

05:15.330 --> 05:17.050
这就是洗牌了

05:17.050 --> 05:17.210
好

05:17.210 --> 05:18.130
保存看一下

05:18.130 --> 05:20.290
看一下有没有效果了

05:20.290 --> 05:21.530
没有效果

05:21.530 --> 05:22.450
为啥没有效果了

05:22.450 --> 05:23.530
咱们把它打印出来

05:23.530 --> 05:24.810
打印出来看一下

05:24.810 --> 05:25.610
洗完牌过后

05:25.650 --> 05:28.130
把这个数组打印出来看一下

05:28.130 --> 05:30.210
看一下个数组里面的数据对不对

05:30.210 --> 05:31.290
就是我们来测试一下

05:31.290 --> 05:32.650
边测试边做

05:32.650 --> 05:34.330
看一下这个数据对不对呢

05:34.330 --> 05:35.090
这个数据呢

05:35.090 --> 05:36.530
你会发现

05:36.530 --> 05:38.410
Left值0

05:38.410 --> 05:39.770
Top值是不是变了

05:39.770 --> 05:41.130
第一个Top值变了

05:41.130 --> 05:42.530
第二个Top值

05:42.530 --> 05:43.850
Left值00

05:43.850 --> 05:44.410
变了

05:44.410 --> 05:45.370
第三个Top值

05:45.370 --> 05:46.130
Left值

05:46.130 --> 05:47.370
第三个是

05:47.370 --> 05:48.770
Left值

05:48.770 --> 05:50.130
在这

05:50.130 --> 05:51.450
Left值33

05:51.450 --> 05:52.130
Top 33

05:52.130 --> 05:53.290
本来Top应该是0的

05:53.290 --> 05:54.410
第三个一看

05:54.410 --> 05:55.210
看阴影部分

05:55.210 --> 05:55.890
页面上

05:55.890 --> 05:56.650
本来应该是

05:56.650 --> 05:57.050
这了

05:57.050 --> 05:57.410
对吧

05:57.410 --> 05:58.170
Top应该是0的

05:58.170 --> 05:58.890
是不是变了

05:58.890 --> 05:59.290
对吧

05:59.290 --> 06:00.730
它是会变化的

06:00.730 --> 06:02.730
这Left Top再刷新看一下

06:02.730 --> 06:04.690
看一下

06:04.690 --> 06:05.570
是不是变了

06:05.570 --> 06:06.250
对吧

06:06.250 --> 06:07.410
数据是没问题的

06:07.410 --> 06:08.090
是变了

06:08.090 --> 06:10.410
但是它没有在页面上反映出来

06:10.410 --> 06:11.730
为啥没有反映出来了

06:11.730 --> 06:13.050
是不是没有刷新

06:13.050 --> 06:13.250
对吧

06:13.250 --> 06:15.050
没有设置动物元素的东西

06:15.050 --> 06:16.570
那我们之前是不是给每一个

06:16.570 --> 06:18.170
Block对象里面写了个函数

06:18.170 --> 06:18.450
对吧

06:18.450 --> 06:18.890
秀

06:18.890 --> 06:20.970
你看我当时为什么要写这个函数

06:20.970 --> 06:21.890
明白了吧

06:21.890 --> 06:23.090
我只要一调这个函数

06:23.090 --> 06:24.290
是不是就重新根据Left

06:24.290 --> 06:26.610
只要Top只重新设置作标了

06:26.610 --> 06:27.410
没问题吧

06:27.410 --> 06:31.010
所以我们这里直接去调用它的秀就完事了

06:31.010 --> 06:33.610
重新显示

06:33.610 --> 06:34.810
当然也可以在最后

06:34.810 --> 06:37.290
你把交换把数据全部搞定之后

06:37.290 --> 06:40.890
在最后重新显示Block拨一起

06:40.890 --> 06:44.570
在这里循环重新显示

06:44.570 --> 06:46.970
拿到每一个小方块调它的秀

06:46.970 --> 06:48.210
重新显示

06:48.210 --> 06:49.090
保存

06:49.090 --> 06:51.250
你看是不是打乱了

06:51.290 --> 06:53.530
你看每次是不是不一样了

06:53.530 --> 06:53.810
对吧

06:53.810 --> 06:54.770
没问题吧

06:54.770 --> 06:57.690
把个console揉揉去了

06:57.690 --> 06:58.890
所以变化了

06:58.890 --> 06:59.770
每次变化了

06:59.770 --> 07:00.770
但是你会发现一个问题

07:00.770 --> 07:02.130
空白也跟着变化了

07:02.130 --> 07:02.570
对吧

07:02.570 --> 07:04.650
我不希望空白变化

07:04.650 --> 07:06.530
那怎么办了

07:06.530 --> 07:11.170
那里循环的时候就忽略掉最后一箱

07:11.170 --> 07:13.010
产生随机下标的时候

07:13.010 --> 07:14.810
也忽略掉最后一箱

07:14.810 --> 07:16.410
把最后一箱忽略掉不就完了吗

07:16.410 --> 07:17.610
不跟最后一箱交换

07:17.610 --> 07:19.530
循环的时候也不循环最后一箱

07:19.570 --> 07:21.690
那最后一箱是不是就空出来了

07:21.690 --> 07:22.610
最后一箱就没动了

07:22.610 --> 07:23.770
对吧

07:23.770 --> 07:25.490
说这个没问题了吧

07:25.490 --> 07:26.850
没问题了吧

07:26.850 --> 07:27.610
OK

07:27.610 --> 07:28.210
那就没问题了

07:28.210 --> 07:30.210
他就没问题了

07:30.210 --> 07:30.370
好

07:30.370 --> 07:32.250
就是洗牌

07:32.250 --> 07:33.690
就完了对吧

07:33.690 --> 07:35.090
初始化是不是完了

07:35.090 --> 07:35.330
对吧

07:35.330 --> 07:37.690
初始化就小方块就完事了

07:37.690 --> 07:37.890
好

07:37.890 --> 07:39.970
那么接下来是点击事件

07:39.970 --> 07:42.890
点击它的时候要做一些事

07:42.890 --> 07:44.890
点击它的时候要做一些事

07:44.890 --> 07:46.250
做什么事呢

07:46.250 --> 07:46.490
好

07:46.490 --> 07:47.770
这个点击事件写到哪了

07:47.770 --> 07:49.050
我们可以专门来写个函数

07:49.090 --> 07:50.050
注册点击事件

07:52.170 --> 07:53.730
比方说这里

07:53.730 --> 07:55.170
第三步

07:55.170 --> 07:57.290
注册点击事件

07:58.930 --> 07:59.890
那么专门来写个函数

08:01.170 --> 08:04.810
RigEvent注册点击事件

08:05.810 --> 08:06.970
给谁注册呢

08:06.970 --> 08:07.850
给这里边

08:07.850 --> 08:09.210
这个数组里边

08:09.210 --> 08:12.210
给这个数组里边每一个小方块注册点击事件

08:12.210 --> 08:13.690
注册点击事件

08:13.690 --> 08:14.370
好

08:14.370 --> 08:15.410
那么我们来写吧

08:15.410 --> 08:19.700
这里函数RigEvent

08:19.740 --> 08:23.260
这是处理点击事件

08:23.260 --> 08:25.380
因此我们这里循环啥

08:25.380 --> 08:26.580
当然我们也可以直接在这里

08:26.580 --> 08:27.620
这里写了

08:27.620 --> 08:29.500
就是把这个循环Blogs拿到

08:31.820 --> 08:33.700
Blogs拿到

08:33.700 --> 08:35.300
for一起循环吧

08:35.300 --> 08:36.500
循环啥

08:36.500 --> 08:38.300
循环这个每一个小方块

08:38.300 --> 08:39.060
每一个小方块B

08:40.180 --> 08:40.820
干嘛呢

08:40.820 --> 08:42.980
给它注册点击事件

08:42.980 --> 08:43.900
注册点击事件

08:44.980 --> 08:46.500
点击的时候要干嘛

08:46.500 --> 08:47.700
要干嘛

08:47.700 --> 08:48.620
你觉得点击的时候

08:48.660 --> 08:49.700
点击的是啥

08:49.700 --> 08:50.540
有些朋友说移动

08:50.540 --> 08:53.860
移动的是表面看着的现象

08:53.860 --> 08:56.100
点击的时候是在干嘛

08:56.100 --> 08:56.740
是在干嘛呢

08:58.140 --> 09:01.100
点击的时候实际上在做啥

09:01.100 --> 09:02.500
把这个小方块

09:03.580 --> 09:07.180
跟我看不见的方块的坐标位置发生变

09:07.180 --> 09:08.020
发生交换

09:09.180 --> 09:10.580
是这个意思吧

09:10.580 --> 09:11.660
点这个方块

09:11.660 --> 09:13.340
就把这个方块

09:13.340 --> 09:14.340
跟那个啥

09:14.340 --> 09:17.260
跟这个数组里边不是有个看不见的小方块吗

09:17.260 --> 09:18.180
对吧

09:18.220 --> 09:19.540
看不见的这个小方块

09:19.540 --> 09:20.940
它的坐标位置

09:20.940 --> 09:22.460
给它交换掉

09:22.460 --> 09:23.620
就完事了

09:23.620 --> 09:24.900
然后再重新显示

09:24.900 --> 09:25.700
这不完了

09:25.700 --> 09:27.940
就是实际上是交换

09:27.940 --> 09:32.660
当前方块和谁

09:32.660 --> 09:38.500
和谁看不见的方块的坐标位置

09:38.500 --> 09:40.540
交换这两个方块的坐标位置是没完了

09:41.820 --> 09:41.900
好

09:41.900 --> 09:43.060
那么首先要得

09:43.060 --> 09:44.060
当前方块就是这个B

09:44.060 --> 09:44.340
对吧

09:44.340 --> 09:44.780
就是个B

09:44.780 --> 09:46.500
也可以用Z是不行

09:46.500 --> 09:47.500
Z是动物对象

09:47.540 --> 09:48.500
要用这个B

09:49.020 --> 09:49.580
要用这个B

09:49.580 --> 09:50.300
B点什么

09:50.300 --> 09:51.020
B点动

09:51.020 --> 09:51.860
B点动

09:51.860 --> 09:53.060
点onclick

09:53.060 --> 09:54.740
这动物对象的点击事件

09:55.380 --> 09:56.620
我们先输出一个东西

09:56.620 --> 09:58.300
看点击事件有没有成功注册

09:58.300 --> 09:59.540
看一下有没有成功注册

09:59.540 --> 10:01.780
没想到写了半天都没有把事件注册成功

10:02.380 --> 10:03.140
看一下

10:04.140 --> 10:04.900
点击

10:04.900 --> 10:05.300
OK

10:05.300 --> 10:06.020
没问题

10:06.020 --> 10:06.820
没问题

10:07.540 --> 10:08.660
那么点击的时候

10:08.660 --> 10:10.380
我要交换这个B和谁

10:10.380 --> 10:12.060
和看不见的这个方块

10:12.060 --> 10:12.300
好

10:12.300 --> 10:14.140
我们首先得到看不见的方块

10:15.020 --> 10:17.140
叫做invisible

10:17.980 --> 10:18.740
visible

10:18.740 --> 10:20.020
block

10:20.020 --> 10:21.020
这是看不见的方块

10:21.020 --> 10:22.060
怎么得到呢

10:22.060 --> 10:22.980
从数组里边

10:22.980 --> 10:24.300
是不是用数组的函数

10:24.300 --> 10:26.180
一个函数叫Find还记得吗

10:26.180 --> 10:27.420
Find这个函数

10:27.420 --> 10:30.140
查找一个满足条件的对象

10:30.140 --> 10:30.700
在数

10:30.700 --> 10:33.540
在数组里边去查找一个满足条件的数组元素

10:33.540 --> 10:34.940
来吧

10:35.700 --> 10:39.500
从数组里边去查找满足条件的数组元素

10:39.500 --> 10:40.620
好找

10:40.620 --> 10:41.380
找到谁

10:41.380 --> 10:42.900
找到这个看不见的方块了

10:42.900 --> 10:43.500
对不对

10:43.500 --> 10:46.380
当时也这里可以一开始又把它写好

10:46.500 --> 10:48.340
一开始又写好

10:48.340 --> 10:50.300
看不见的方块

10:50.300 --> 10:52.580
找到看不见的方块

10:52.580 --> 10:53.820
一开始把对象找好

10:54.940 --> 10:55.820
条件是什么呢

10:55.820 --> 10:56.660
条件是

10:57.940 --> 10:58.580
条件是什么

10:58.580 --> 11:00.420
be the style

11:00.420 --> 11:01.220
the display

11:01.220 --> 11:01.420
对吧

11:01.420 --> 11:03.140
我们得到它的类年样式表里边的

11:03.140 --> 11:04.780
Display属性等于啥

11:04.780 --> 11:06.340
是不是等于浪

11:06.340 --> 11:08.260
满足这个条件的是不是看不见的

11:08.260 --> 11:08.500
对吧

11:08.500 --> 11:09.860
我们之前设置过的

11:09.860 --> 11:12.300
满足这个条件的是不是去看不见的

11:12.300 --> 11:13.220
找到这个方块

11:13.220 --> 11:13.620
对吧

11:13.620 --> 11:14.340
be点动

11:15.300 --> 11:17.020
所以它有个属性动

11:17.020 --> 11:18.540
动是它的一个属性

11:18.540 --> 11:19.420
这是它的对象

11:20.420 --> 11:21.540
整个是它的对象

11:21.540 --> 11:22.740
它的一个属性叫动

11:23.260 --> 11:24.100
动不对象

11:24.740 --> 11:27.780
当然那里也可以直接把这个easy variable

11:27.780 --> 11:29.020
把它作为它的一个属性

11:29.020 --> 11:29.980
这样子更加方便

11:29.980 --> 11:30.220
对吧

11:30.220 --> 11:31.460
判断起来更加方便

11:31.460 --> 11:32.340
easy variable

11:32.340 --> 11:33.220
把它做一个属性

11:33.220 --> 11:34.220
适逢可见

11:34.980 --> 11:35.940
把它做一个属性

11:35.940 --> 11:37.140
放到它属性里边

11:37.140 --> 11:38.260
放到它属性里边过后

11:38.260 --> 11:38.900
这里

11:39.460 --> 11:40.420
直接判断是

11:40.420 --> 11:41.020
直接判断

11:41.020 --> 11:42.820
be点easy variable

11:43.700 --> 11:44.460
适逢可见

11:44.460 --> 11:45.660
我要找到的是

11:45.660 --> 11:46.740
找到的是不可见的

11:48.020 --> 11:48.820
这个翻的这个函数

11:48.820 --> 11:50.260
找到第一个满足条件的

11:51.140 --> 11:51.820
那一定有

11:51.820 --> 11:52.500
不用去判断

11:52.500 --> 11:53.380
它也没有的情况

11:53.380 --> 11:54.100
不用判断

11:54.100 --> 11:56.060
因为我们这里的整个程序逻辑

11:56.460 --> 11:57.380
在整个程序逻辑下

11:57.380 --> 11:57.980
它一定有

11:58.380 --> 11:58.900
一定有

12:00.380 --> 12:00.940
找到这个方块

12:00.940 --> 12:01.820
是不是两个交换

12:01.820 --> 12:02.140
对吧

12:02.140 --> 12:03.100
又是两个交换

12:03.100 --> 12:03.540
对吧

12:03.540 --> 12:04.260
又是两个交换

12:04.260 --> 12:04.500
好

12:04.500 --> 12:06.380
那么之前是不是写过两个交换的

12:06.740 --> 12:08.180
这里是不是写过两个交换的

12:08.180 --> 12:08.580
好

12:08.580 --> 12:10.700
那是不是我们又可以做一个函数

12:10.700 --> 12:12.100
写个函数来专门来交换

12:12.100 --> 12:13.420
两个方块的

12:13.420 --> 12:14.220
neft top

12:14.220 --> 12:14.420
对吧

12:14.420 --> 12:15.140
exchange

12:16.660 --> 12:18.460
方块b1 b2

12:18.460 --> 12:18.860
对吧

12:18.860 --> 12:20.060
交换两个方块的

12:20.060 --> 12:20.820
neft top

12:22.460 --> 12:25.340
交换两个方块的

12:25.340 --> 12:27.180
neft和top

12:27.180 --> 12:28.460
我专门来写个函数来搞定

12:28.460 --> 12:29.420
你发现重复代码

12:29.420 --> 12:30.780
你尽量把它

12:30.780 --> 12:31.780
尽量把它用

12:31.780 --> 12:33.020
用一个函数来搞定

12:33.020 --> 12:33.380
不然的话

12:33.380 --> 12:34.260
不要不要尽量

12:34.260 --> 12:35.580
不要出现重复代码

12:35.580 --> 12:36.940
这是b1

12:36.940 --> 12:37.300
b1

12:40.340 --> 12:40.820
对

12:40.940 --> 12:41.980
就只用b

12:41.980 --> 12:44.540
b1到neft

12:44.540 --> 12:45.860
b1的neft

12:45.860 --> 12:47.900
等于b2的neft

12:47.900 --> 12:49.660
b2的neft

12:49.660 --> 12:51.380
这个b2的

12:51.380 --> 12:52.660
这是b2的neft

12:52.660 --> 12:53.700
等于temp

12:53.700 --> 12:55.340
这就是neft交换

12:55.340 --> 12:56.980
交换top是一样的

12:56.980 --> 12:57.740
把这个复制一下

12:59.740 --> 13:03.790
这是b1的top

13:03.790 --> 13:04.550
b2的top

13:05.870 --> 13:06.830
交换

13:06.830 --> 13:07.310
交换吧

13:08.870 --> 13:09.510
这是temp

13:10.470 --> 13:12.230
甚至你可以

13:12.230 --> 13:13.750
甚至你可以怎么样了

13:13.750 --> 13:16.390
甚至你可以在这里就直接b1秀

13:17.390 --> 13:18.390
b2秀

13:18.390 --> 13:19.870
就把一对象传过来传过去

13:19.870 --> 13:21.070
反正都用的是同一个对象

13:21.070 --> 13:21.990
传的就是地址

13:21.990 --> 13:22.750
对吧

13:22.750 --> 13:24.190
那在这里就可以重新显示

13:24.190 --> 13:24.390
对吧

13:24.390 --> 13:25.630
在这里可以重新显示

13:25.630 --> 13:27.190
那这里我就不设置了

13:27.190 --> 13:28.230
不设置了

13:28.230 --> 13:28.390
好

13:28.390 --> 13:28.870
那这里呢

13:28.870 --> 13:30.630
我就不用在这里写了

13:30.630 --> 13:32.350
直接调用函数一个是千级

13:32.350 --> 13:32.990
b1是啥

13:32.990 --> 13:35.110
b2是啥

13:35.110 --> 13:36.310
b2是啥

13:36.310 --> 13:37.030
index

13:37.030 --> 13:37.430
对吧

13:37.430 --> 13:38.190
产生的数据下标

13:38.190 --> 13:39.230
就是我们之前的代码

13:39.270 --> 13:40.430
稍微修改一下

13:40.430 --> 13:41.390
就之前没有想到

13:41.390 --> 13:42.910
没想到这里会有重复代码

13:42.910 --> 13:44.190
那想到过后了就可以

13:44.190 --> 13:45.110
把它提成一个函数

13:45.110 --> 13:45.710
exchange

13:47.150 --> 13:47.470
好了

13:47.470 --> 13:48.230
到这边来

13:48.230 --> 13:49.670
是不是交换就很简单了

13:49.670 --> 13:50.150
交换啥

13:50.150 --> 13:51.510
交换这个b和啥

13:51.510 --> 13:52.750
和这个

13:52.750 --> 13:53.110
来吧

13:53.110 --> 13:53.590
交换呗

13:54.670 --> 13:55.390
exchange

13:56.790 --> 13:57.230
blocks

13:58.270 --> 13:58.790
什么

13:58.790 --> 14:00.830
invisible block

14:00.830 --> 14:02.670
要不要交换这个b

14:02.670 --> 14:03.510
b

14:03.510 --> 14:04.550
点击这个

14:04.550 --> 14:05.310
点击的是他吗

14:05.310 --> 14:05.510
对吧

14:05.510 --> 14:06.150
点击的是他

14:06.150 --> 14:08.030
交换他和他

14:08.070 --> 14:08.750
保存看一下

14:10.270 --> 14:10.590
你看一下

14:10.590 --> 14:11.350
是不是可以移动了

14:12.670 --> 14:13.750
是不是可以移动了

14:14.630 --> 14:15.630
但是现在还有一个问题

14:15.630 --> 14:16.350
啥问题呢

14:18.070 --> 14:19.110
啥问题呢

14:19.110 --> 14:20.030
你没有判断

14:20.030 --> 14:21.230
他们两个

14:21.230 --> 14:24.310
一看现在比方说我点他

14:24.310 --> 14:25.110
点他的时候

14:25.110 --> 14:25.830
他也可以到这来

14:25.830 --> 14:26.510
因为交换

14:26.510 --> 14:26.830
对吧

14:26.830 --> 14:28.470
两个交换是不是可以

14:28.470 --> 14:28.750
对吧

14:28.750 --> 14:29.990
没问题吧

14:29.990 --> 14:30.870
是可以交换的

14:30.870 --> 14:32.150
这样也可以交换的

14:32.150 --> 14:33.710
就是有个前提条件

14:33.710 --> 14:35.390
有些情况是不能交换的

14:35.390 --> 14:36.630
就点击的时候

14:36.630 --> 14:37.990
有些情况是不能交换的

14:38.150 --> 14:39.430
所以你要判断啥呢

14:39.430 --> 14:41.950
你要判断这个玩意儿

14:41.950 --> 14:43.430
这个空白这个玩意儿

14:43.430 --> 14:44.350
跟这个玩意儿

14:44.350 --> 14:46.510
是不是相邻的

14:46.510 --> 14:48.150
他们是不是相邻的

14:48.150 --> 14:49.990
要判断这个东西

14:49.990 --> 14:51.750
什么叫相邻

14:51.750 --> 14:52.910
啥叫相邻

14:54.110 --> 14:54.910
啥叫相邻呢

14:56.150 --> 14:57.470
能不能理出这个规律

14:58.590 --> 14:59.390
啥叫相邻呢

15:00.430 --> 15:01.470
相邻是这样子

15:03.630 --> 15:05.470
相邻是啥意思呢

15:05.470 --> 15:06.510
比方说

15:06.510 --> 15:07.710
我举个例子

15:07.750 --> 15:09.190
比方的空白位置在这

15:11.110 --> 15:11.670
空白

15:13.900 --> 15:14.940
空白位置

15:14.940 --> 15:16.380
它的内部者值是多少

15:16.380 --> 15:17.380
现在是零对吧

15:17.380 --> 15:18.540
现在是零

15:18.540 --> 15:19.580
它的top值是多少

15:19.580 --> 15:20.700
是零对吧

15:21.980 --> 15:23.020
跟这个位置的

15:23.020 --> 15:23.820
这个小方块

15:23.820 --> 15:24.660
它相不相邻呢

15:24.660 --> 15:26.140
看一下这个小方块的位置

15:26.140 --> 15:27.420
这个小方块的位置

15:27.420 --> 15:28.420
这个b1

15:28.420 --> 15:29.660
它的小方块的位置呢

15:29.660 --> 15:31.260
内部者是多少呢

15:31.260 --> 15:33.340
是一个宽度对吧

15:33.340 --> 15:34.300
宽度用w嘛

15:34.300 --> 15:35.380
一个宽度

15:35.380 --> 15:36.260
top值呢

15:36.260 --> 15:37.260
多少呢

15:37.260 --> 15:38.900
top值为多少

15:38.940 --> 15:40.860
top值是不是为多少呢

15:41.620 --> 15:42.460
为零对吧

15:42.460 --> 15:43.460
为零

15:43.460 --> 15:44.460
然后b2

15:44.460 --> 15:45.460
b2是这一块

15:45.460 --> 15:46.460
这一块

15:46.460 --> 15:47.700
比方说这一块

15:47.700 --> 15:49.620
这一块的内部者值是它

15:49.620 --> 15:50.900
内部者值是多少

15:50.900 --> 15:52.580
是不是零

15:52.580 --> 15:53.900
top值那是多少

15:53.900 --> 15:55.460
top值是不是一个h

15:55.460 --> 15:55.780
对吧

15:55.780 --> 15:56.260
一个h

15:57.380 --> 15:57.900
没问题吧

15:58.940 --> 16:00.380
这个没问题吧

16:00.380 --> 16:01.540
一个h

16:01.540 --> 16:02.660
b3

16:02.660 --> 16:04.260
b3比方说是这

16:04.260 --> 16:04.860
是这

16:04.860 --> 16:06.660
那么它肯定是跟b1 b2是相邻的

16:06.660 --> 16:06.980
对吧

16:06.980 --> 16:08.740
看得出来

16:08.780 --> 16:10.380
b1 b2是相邻的

16:10.380 --> 16:11.820
是相邻的

16:11.820 --> 16:12.220
好

16:12.220 --> 16:13.260
那么b3

16:13.260 --> 16:14.220
b3是啥

16:14.220 --> 16:15.100
b3是内部者

16:15.100 --> 16:15.780
为多少

16:15.780 --> 16:17.580
为一个w

16:17.580 --> 16:18.420
一个w

16:18.420 --> 16:20.660
top为一个h

16:20.660 --> 16:23.260
跟b3不相扭

16:23.260 --> 16:25.660
跟b3不相扭

16:25.660 --> 16:28.980
那么它的相邻的条件是啥

16:28.980 --> 16:30.340
你觉得应该是啥

16:30.340 --> 16:31.460
相邻的条件

16:32.660 --> 16:33.860
是啥呢

16:33.860 --> 16:35.540
相邻的条件呢

16:35.540 --> 16:38.020
它是不是一定有一个相等的

16:38.020 --> 16:38.700
top

16:38.820 --> 16:40.180
要么top相等

16:40.180 --> 16:41.260
要么left相等

16:41.260 --> 16:42.660
要么它在同一行

16:42.660 --> 16:43.540
要么它在同一列

16:43.540 --> 16:44.180
对不对

16:44.180 --> 16:45.180
它一定在同一行

16:45.180 --> 16:46.900
或者是同一列

16:46.900 --> 16:47.900
它一定是在同一行

16:47.900 --> 16:48.980
或者是同一列

16:48.980 --> 16:50.300
如果在同一行的话

16:50.300 --> 16:51.180
你看

16:51.180 --> 16:51.740
这是同一行

16:51.740 --> 16:53.020
对吧

16:53.020 --> 16:54.780
如果在同一行的话

16:54.780 --> 16:56.020
有个特点

16:56.020 --> 16:57.340
什么特点了

16:57.340 --> 16:58.780
啥特点了

16:58.780 --> 17:00.660
如果在同一行的话

17:00.660 --> 17:06.780
那么他们的left相间的绝对值

17:06.780 --> 17:08.060
他们left相间

17:08.060 --> 17:09.940
同一行就不说了

17:09.940 --> 17:12.780
他们left相间的绝对值

17:12.780 --> 17:14.700
应该等于啥

17:14.700 --> 17:17.180
是不是应该等于一个宽度

17:17.180 --> 17:20.740
刚好left相差一个宽度

17:20.740 --> 17:22.740
没问题吧

17:22.740 --> 17:24.820
这个应该没问题吧

17:24.820 --> 17:26.100
left相间

17:26.100 --> 17:29.380
他们刚好相差一个宽度

17:29.380 --> 17:31.340
一个宽度

17:31.340 --> 17:33.060
这个应该没问题吧

17:33.060 --> 17:33.420
好

17:33.420 --> 17:34.580
然后呢

17:34.580 --> 17:37.340
于是我们就可以这样来处理

17:37.380 --> 17:39.460
看着

17:39.460 --> 17:41.020
注册事件点击的时候

17:41.020 --> 17:43.460
要判断

17:43.460 --> 17:47.260
是否可以交换

17:47.260 --> 17:47.980
是否可以交换

17:47.980 --> 17:49.100
判断一下

17:49.100 --> 17:51.100
那么主要是判断是不是相邻的

17:51.100 --> 17:52.460
是不是相邻的

17:52.460 --> 17:52.740
好

17:52.740 --> 17:54.660
如果什么样相邻

17:54.660 --> 17:56.860
两个条件

17:56.860 --> 17:57.820
同一行的情况

17:57.820 --> 17:58.900
同一列的情况

17:58.900 --> 18:00.540
同一行

18:00.540 --> 18:04.700
或者是同一列

18:04.700 --> 18:06.260
首先看同一行的情况

18:06.300 --> 18:09.520
换个行

18:09.520 --> 18:10.680
同一行的情况

18:10.680 --> 18:11.560
指导是什么

18:11.560 --> 18:13.640
指导是他们的行是一样

18:13.640 --> 18:14.440
他们行是一样的

18:14.440 --> 18:16.160
就是他们top只是一样的

18:16.160 --> 18:17.360
b点什么top

18:17.360 --> 18:18.760
等于什么

18:18.760 --> 18:20.040
等于invisible block

18:20.040 --> 18:20.840
就是他在消

18:20.840 --> 18:22.800
看不见的方块的top

18:22.800 --> 18:23.680
这两个是相等的

18:23.680 --> 18:24.520
他们在同一行

18:24.520 --> 18:25.120
对吧

18:25.120 --> 18:25.680
好

18:25.680 --> 18:26.200
然后呢

18:26.200 --> 18:27.400
并且什么呢

18:27.400 --> 18:29.040
并且他们两个

18:29.040 --> 18:32.520
中横坐标相简的绝对值

18:32.520 --> 18:33.440
去绝对值吗

18:33.440 --> 18:34.000
ABS

18:34.000 --> 18:36.000
ABS绝对值

18:36.000 --> 18:41.480
就是他们横坐标相简invisible block

18:41.480 --> 18:43.440
横坐标相简的绝对值

18:43.440 --> 18:45.760
应该等于啥呢

18:45.760 --> 18:47.520
等于啥

18:47.520 --> 18:48.920
等于啥呢

18:48.920 --> 18:52.160
是不是等于那个啥

18:52.160 --> 18:53.680
等于一个宽度

18:53.680 --> 18:55.200
刚好等于一个宽度

18:55.200 --> 18:56.400
一个宽度是啥

18:56.400 --> 18:58.160
是不是game config里边的

18:58.160 --> 18:59.840
peace width

18:59.840 --> 19:01.800
一个小库的宽度

19:01.800 --> 19:04.480
这两个相等是不是同一行

19:04.520 --> 19:05.800
刚好间隔一个

19:05.800 --> 19:06.040
对吧

19:06.040 --> 19:07.120
刚好ide的

19:07.120 --> 19:08.400
间隔一个宽度

19:08.400 --> 19:09.840
但是大家要知道

19:09.840 --> 19:11.960
小数的计算是不精确的

19:11.960 --> 19:13.520
还有可能会产生小数

19:13.520 --> 19:16.160
在进行小数的比较的相等的时候

19:16.160 --> 19:17.280
你要小心

19:17.280 --> 19:20.440
因为它可能计算不精确

19:20.440 --> 19:24.000
因此我们最好把它转换成整数比较

19:24.000 --> 19:25.440
小数计算由于不精确

19:25.440 --> 19:26.840
因为我们再次

19:26.840 --> 19:27.720
差别误差

19:27.720 --> 19:28.600
不可能一个相数

19:28.600 --> 19:31.040
一个相数已经很小了

19:31.040 --> 19:32.080
这算的都是相数

19:32.080 --> 19:34.360
所以说我们最好把它转换成整数比较

19:34.400 --> 19:37.200
因此为了方便我们比较

19:37.200 --> 19:39.160
我这里专门来写个函数

19:39.160 --> 19:40.600
专门来写个函数

19:40.600 --> 19:42.680
来比较两个数字

19:44.400 --> 19:46.200
然后我们专门写个函数

19:46.200 --> 19:46.960
也是一括

19:48.320 --> 19:50.360
两个数字是不是相等

19:50.360 --> 19:52.840
就是n1和n2

19:52.840 --> 19:54.200
他们两个数字是不相等

19:54.200 --> 19:55.200
我判断的是啥

19:55.200 --> 19:57.080
判断的是把它转换成整数过后

19:57.080 --> 19:59.480
posed int n1

19:59.480 --> 20:01.600
转换成整数过后

20:01.640 --> 20:06.320
然后是不是等于posed int n2

20:06.320 --> 20:08.160
转换成整数过后这两个是不相等

20:08.160 --> 20:09.680
判断的是这两个东西

20:09.680 --> 20:10.560
好吧

20:10.560 --> 20:11.640
为了避免

20:11.640 --> 20:13.520
这是避免

20:13.520 --> 20:14.200
为了避免啥

20:14.200 --> 20:15.480
避免就是两个小数

20:15.480 --> 20:17.240
它计算出来的结果不精确

20:17.240 --> 20:18.800
造成的问题

20:18.800 --> 20:19.200
好

20:19.200 --> 20:20.720
那么这里我们怎么办

20:20.720 --> 20:21.440
就把这两个数字

20:21.440 --> 20:22.040
这是一个数字

20:22.040 --> 20:22.240
对吧

20:22.240 --> 20:23.040
这是另外一个数字

20:23.040 --> 20:24.200
那么我们调用函数

20:24.200 --> 20:25.040
也是一括

20:26.120 --> 20:26.880
也是一括

20:27.760 --> 20:28.560
调用函数

20:28.560 --> 20:29.960
这是第一个数字

20:30.000 --> 20:31.480
我看一下这两个数字是不是一样的

20:32.680 --> 20:33.400
这是第二个数字

20:34.520 --> 20:35.240
对吧

20:35.240 --> 20:36.680
看一下这两个数字是不一样的

20:37.880 --> 20:38.760
那么如果一样的话

20:38.760 --> 20:40.840
是不是同一行是相邻的

20:40.840 --> 20:41.000
好

20:41.000 --> 20:43.240
同一店是不是一样的行业

20:43.240 --> 20:43.760
比着什么

20:43.760 --> 20:46.280
neft值横坐标一样

20:46.280 --> 20:47.520
invisible block

20:47.520 --> 20:48.880
neft值相同

20:48.880 --> 20:49.440
并且呢

20:49.440 --> 20:50.520
什么样了

20:50.520 --> 20:50.960
并且呢

20:50.960 --> 20:54.280
它的中坐标相隔了一个距离

20:54.280 --> 20:55.800
中坐标什么

20:55.800 --> 20:57.480
tough值相减

20:58.720 --> 20:59.800
刚好等于什么

20:59.840 --> 21:01.240
一个小阔的高度

21:01.840 --> 21:02.240
高度

21:03.120 --> 21:05.800
你看这两个情况满足任何一个同一行同一业

21:05.800 --> 21:07.200
它都是相邻的情况

21:07.760 --> 21:08.840
都是相邻的情况

21:08.840 --> 21:10.000
好条件就出来了

21:10.000 --> 21:11.720
那么只有相邻的情况

21:11.720 --> 21:12.840
我们才需要交换

21:12.840 --> 21:14.520
不相邻的情况是不需要交换的

21:15.640 --> 21:18.160
把这个交换的代码写到判断里边

21:19.240 --> 21:20.120
保存看一下

21:20.640 --> 21:21.200
现在看一下

21:22.120 --> 21:22.520
点这个

21:22.520 --> 21:23.200
你看能不能交换

21:23.200 --> 21:23.720
不能交换

21:23.720 --> 21:24.040
点这个

21:24.040 --> 21:24.800
你看是不是可交换

21:24.800 --> 21:25.440
点这个不能

21:25.440 --> 21:26.240
点这个是不是可以

21:26.240 --> 21:27.080
点这个可以

21:27.080 --> 21:27.800
点这个可以

21:27.800 --> 21:28.440
这个可以

21:28.440 --> 21:29.000
这个可以

21:29.000 --> 21:29.480
这个不能

21:29.920 --> 21:30.720
看没

21:30.720 --> 21:31.280
这搞定了

21:33.000 --> 21:33.560
没问题了吧

21:35.000 --> 21:35.240
好

21:35.240 --> 21:35.800
最后

21:36.920 --> 21:38.920
最后胜负判断

21:40.480 --> 21:42.480
每一次交换完成过后

21:42.480 --> 21:44.520
看一下游戏是否结束

21:44.520 --> 21:46.480
游戏结束判定

21:47.440 --> 21:48.440
游戏结束判定

21:49.840 --> 21:51.000
那么专门来写个函数

21:51.000 --> 21:51.960
专门来写个函数

21:51.960 --> 21:52.400
意思问

21:54.240 --> 21:54.720
意思问

21:54.720 --> 21:55.400
最后一步了

21:56.120 --> 21:59.320
游戏是否结束

21:59.320 --> 21:59.800
意思问

22:02.120 --> 22:02.400
好

22:02.400 --> 22:04.800
怎么来判定游戏是否结束了

22:04.800 --> 22:06.560
游戏是否结束判定

22:06.560 --> 22:07.920
游戏结束判定

22:09.160 --> 22:11.240
怎么来判定游戏是否结束了

22:12.000 --> 22:13.720
游戏结束有一个特点

22:14.040 --> 22:17.080
就是所有的方块一定在正确的位置上

22:17.560 --> 22:17.960
对吧

22:17.960 --> 22:19.640
每个方块是不是有一个正确的位置

22:19.800 --> 22:20.920
我们之前写过了

22:21.160 --> 22:23.960
每一个方块都有一个正确的位置

22:24.040 --> 22:24.960
就是这个

22:24.960 --> 22:25.600
什么

22:26.280 --> 22:26.840
在哪

22:27.280 --> 22:28.040
这个就是

22:28.040 --> 22:28.840
create left

22:28.840 --> 22:29.720
create top

22:29.720 --> 22:30.200
对吧

22:30.520 --> 22:32.040
都有一个正确的横做红路标

22:32.520 --> 22:34.040
每一个方块都在正确的位置上

22:34.040 --> 22:34.640
就是每一个方块

22:34.640 --> 22:36.600
它的left的值跟这两个值是一样的

22:36.600 --> 22:36.880
对吧

22:36.880 --> 22:37.680
是一样的

22:37.680 --> 22:39.160
那么像这种情况下

22:39.640 --> 22:42.840
他们就是正确的位置

22:43.120 --> 22:43.320
好

22:43.320 --> 22:45.080
我在方块里边专门来写个函数

22:45.280 --> 22:46.600
写个简单的函数来判断一下

22:46.880 --> 22:48.400
判断一下某一个方块

22:48.400 --> 22:50.000
就当前这个方块是不是正确的

22:50.440 --> 22:51.040
correct

22:51.040 --> 22:51.760
一直correct

22:52.160 --> 22:53.120
写这么一个函数

22:53.800 --> 22:55.560
这个函数反而会很简单

22:55.560 --> 22:57.000
就是this the left

22:57.080 --> 23:00.480
是不是等于this the correct left

23:00.480 --> 23:02.160
并且this the top

23:02.160 --> 23:05.080
是不是等于this the correct top

23:06.800 --> 23:07.600
看是不是相等

23:07.960 --> 23:09.480
当然也可以利用什么

23:09.480 --> 23:10.440
利用上面这个

23:10.440 --> 23:12.360
就如果你怕就是什么

23:13.080 --> 23:14.040
以防万一

23:14.040 --> 23:15.920
我就用那个一字一课

23:16.160 --> 23:17.480
把转换整数比较

23:18.200 --> 23:19.080
this left

23:19.080 --> 23:21.360
和什么this the correct left

23:21.720 --> 23:21.920
好

23:21.920 --> 23:23.520
这边也转换整数比较

23:24.600 --> 23:26.880
这就是为什么我要把这个函数写到外面来

23:27.400 --> 23:29.400
我当时想到有可能会这里

23:29.400 --> 23:30.080
有可能会用

23:31.360 --> 23:33.160
this correct top

23:35.800 --> 23:37.680
判断当前这个方块

23:38.360 --> 23:40.600
判断当前方块

23:40.840 --> 23:44.520
是否在正确的位置上

23:46.240 --> 23:46.480
好

23:46.480 --> 23:47.600
那么到下面来

23:47.600 --> 23:48.760
游戏结束判定

23:49.000 --> 23:49.320
是啥

23:49.320 --> 23:50.520
是不是个查照问题的

23:50.840 --> 23:53.080
看一下是不是所有的方块

23:53.320 --> 23:54.880
都在正确的位置上

23:54.880 --> 23:55.720
是不是就完了

23:56.080 --> 23:56.720
对不对

23:57.000 --> 23:57.840
然后怎么判断了

23:57.840 --> 23:58.680
这个贼简单

23:58.680 --> 23:59.640
贼简单

23:59.640 --> 24:00.920
不知道是不是数组

24:00.920 --> 24:01.120
对吧

24:01.120 --> 24:01.720
所有的方块

24:01.720 --> 24:02.400
对吧

24:02.400 --> 24:03.680
找到啥

24:03.880 --> 24:04.920
找到

24:05.320 --> 24:06.440
就是filter

24:06.760 --> 24:07.280
筛选

24:08.080 --> 24:08.680
找到啥

24:08.680 --> 24:11.240
找到那些不在正确位置的他们方块

24:11.880 --> 24:12.880
给他取个名字

24:13.200 --> 24:14.560
叫做incorrect

24:14.800 --> 24:15.640
incorrect

24:15.640 --> 24:16.800
就是错负的方块

24:17.320 --> 24:18.200
或者是wrong

24:19.120 --> 24:19.760
wrongs

24:21.550 --> 24:22.270
错负的方块

24:22.270 --> 24:23.190
哪些双方是错负的

24:23.710 --> 24:24.230
返回什么

24:24.230 --> 24:25.950
返回这个方块

24:25.950 --> 24:27.430
不在正确的位置上

24:27.470 --> 24:28.470
incorrect

24:28.750 --> 24:30.270
这些写法就很多了

24:30.830 --> 24:32.150
他不在正确位置上

24:32.150 --> 24:34.270
那么看一下这样的方块有多少

24:34.270 --> 24:36.910
如果这样的方块的数量为0

24:37.350 --> 24:38.430
数量为0

24:40.030 --> 24:40.830
是不是

24:41.070 --> 24:42.510
就全方块都在正确位置上了

24:42.510 --> 24:42.790
对吧

24:42.790 --> 24:43.990
没有错误的方块了

24:44.110 --> 24:46.070
所有的方块都在正确的位置上

24:46.310 --> 24:47.470
比方说打个注释

24:47.470 --> 24:48.310
我们来看一下

24:48.470 --> 24:49.150
有多少

24:49.270 --> 24:50.630
看一下这个错误的方块有多少

24:50.630 --> 24:51.790
每次移动的时候

24:51.790 --> 24:53.150
看一下一个错误的方块有多少

24:53.550 --> 24:54.350
concel log

24:55.110 --> 24:57.310
就是个wrongs.nance

24:58.150 --> 24:59.150
保存看一下

24:59.830 --> 25:00.470
点击

25:00.630 --> 25:01.190
不能动

25:01.190 --> 25:01.910
点击9

25:02.030 --> 25:04.030
还有9个方块都不在正确的位置上

25:04.030 --> 25:04.710
9

25:04.710 --> 25:05.670
把这个移动过去

25:05.670 --> 25:06.470
看是不是8了

25:06.470 --> 25:07.510
他在正确的位置上

25:07.510 --> 25:08.590
其他的都不在

25:09.190 --> 25:09.750
看没

25:09.750 --> 25:11.430
我们可以通过这个东西来处理

25:11.430 --> 25:12.470
这个东西来处理

25:12.750 --> 25:14.350
如果nance等于0

25:14.350 --> 25:15.750
是不是一切都正确了

25:16.030 --> 25:17.590
所有都正确了

25:17.830 --> 25:18.830
怎么办

25:19.230 --> 25:19.750
怎么办

25:19.750 --> 25:20.910
我们可以用个东西

25:20.910 --> 25:22.270
用个什么东西

25:22.270 --> 25:24.390
现在来表示一下

25:25.390 --> 25:27.750
比方说

25:27.950 --> 25:29.350
比方说我们怎么样了

25:29.350 --> 25:31.750
把这些小方块的边框

25:31.750 --> 25:33.350
这个摆设的边框都给它去掉

25:33.590 --> 25:34.630
都给它去掉

25:35.830 --> 25:37.910
去掉游戏结束

25:37.910 --> 25:38.790
结束

25:38.950 --> 25:41.350
去掉所有边框

25:41.670 --> 25:42.230
边框

25:42.230 --> 25:42.990
全部去掉

25:43.470 --> 25:44.630
那么就是blogs

25:44.630 --> 25:46.510
循环 for each

25:47.070 --> 25:47.710
循环

25:48.030 --> 25:49.310
循环每一个方块

25:49.430 --> 25:51.230
把这个方块里面的动物元素

25:51.230 --> 25:51.670
style

25:51.670 --> 25:52.470
什么border

25:52.470 --> 25:53.830
给它重新设置为什么

25:54.550 --> 25:55.630
把边框去掉

25:55.630 --> 25:56.550
游戏结束了

25:56.550 --> 25:57.870
把它变成一张整图

25:58.590 --> 25:59.750
看一下

26:00.550 --> 26:02.150
但是我怎么移动

26:04.310 --> 26:05.630
我写这个游戏还行

26:05.630 --> 26:07.150
你要怎么把它捉出来

26:08.230 --> 26:09.670
要不然我把它拼出来

26:09.670 --> 26:11.510
有点困难

26:11.510 --> 26:12.510
那这样子

26:13.110 --> 26:15.070
为了方便

26:15.070 --> 26:17.270
我这里把这个注射掉

26:17.470 --> 26:18.470
我不判断了

26:18.470 --> 26:19.390
不判断了

26:19.630 --> 26:20.470
我先测试

26:20.470 --> 26:21.470
主要是测试

26:22.150 --> 26:23.990
把这个带码复制一下

26:27.940 --> 26:28.900
复制完

26:37.620 --> 26:39.340
这里多了

26:39.900 --> 26:40.260
好

26:40.260 --> 26:41.340
我就直接交换

26:41.340 --> 26:41.980
不判断了

26:41.980 --> 26:42.460
不判断

26:42.460 --> 26:43.060
先直接交换

26:43.060 --> 26:44.060
测试一下

26:44.660 --> 26:45.500
看一下

26:46.420 --> 26:47.820
这样子有拼起来就简单多了

26:47.820 --> 26:48.500
这个在这

26:49.020 --> 26:49.700
这个在这

26:50.300 --> 26:51.100
这个在这

26:53.060 --> 26:54.820
这个在这

26:54.820 --> 26:55.380
要不对

26:55.620 --> 26:56.260
这个在这

26:56.700 --> 26:56.900
好

26:56.900 --> 26:57.500
这个在这

26:58.540 --> 26:59.020
这个在这

26:59.020 --> 26:59.620
这个在这

26:59.820 --> 27:00.020
好

27:00.020 --> 27:00.420
你看

27:00.620 --> 27:01.380
变成一档整图了

27:01.380 --> 27:01.780
对吧

27:01.780 --> 27:02.380
整图了

27:02.900 --> 27:05.380
甚至我们也可以把最后一个方块都显示出来

27:05.380 --> 27:07.300
最后一个方块都显示出来

27:07.300 --> 27:07.660
好

27:07.660 --> 27:07.860
来

27:07.860 --> 27:08.300
再来一次

27:08.820 --> 27:10.380
把最后一个方块也显示出来

27:10.700 --> 27:11.380
is win

27:11.860 --> 27:12.620
然后呢

27:12.620 --> 27:13.820
我们把最后一个方块

27:15.340 --> 27:16.180
逼点动

27:16.780 --> 27:17.420
style

27:17.420 --> 27:18.180
display

27:18.180 --> 27:19.220
把设为block

27:19.820 --> 27:21.180
所有的方块全部显示出来

27:22.020 --> 27:22.620
保存

27:23.500 --> 27:24.580
按照再来一次

27:25.180 --> 27:25.580
动

27:27.340 --> 27:27.740
这里

27:27.740 --> 27:28.140
不对

27:28.140 --> 27:28.540
在这

27:29.220 --> 27:29.820
这个在这

27:30.820 --> 27:31.380
这个在这

27:32.660 --> 27:33.220
这个在这

27:35.100 --> 27:35.660
这个在这

27:36.820 --> 27:37.420
这个在这

27:38.740 --> 27:39.420
游戏结束了

27:39.620 --> 27:40.380
游戏结束了

27:41.180 --> 27:41.380
好

27:41.380 --> 27:42.860
游戏结束过后就不能点击了

27:42.860 --> 27:44.220
你看现在还能点击

27:44.220 --> 27:44.660
对吧

27:44.780 --> 27:46.540
由于现在把空白方块显示出来了

27:46.540 --> 27:47.700
所以点击变成这个样子了

27:48.420 --> 27:49.980
结束过后就不能点击了

27:49.980 --> 27:51.060
就不能点击了

27:51.060 --> 27:52.180
所以说这里怎么办

27:53.060 --> 27:55.100
游戏结束过后怎么还不能点击了

27:55.100 --> 27:56.100
我们用这种方式

27:56.100 --> 27:57.140
用这种方式

27:57.340 --> 27:58.860
我们用一个全局的变量

27:58.940 --> 28:00.260
或者在game config里边

28:00.300 --> 28:01.300
用一个全局的变量

28:01.300 --> 28:02.820
就是表示游戏适逢结束

28:02.820 --> 28:03.620
is over

28:04.060 --> 28:04.580
forced

28:04.780 --> 28:06.020
默认是没有结束

28:06.140 --> 28:07.500
游戏是否结束

28:08.420 --> 28:09.380
默认是forced

28:09.380 --> 28:10.660
表示没有结束

28:10.860 --> 28:11.620
没有结束

28:11.780 --> 28:13.500
游戏结束的时候干嘛呢

28:13.500 --> 28:15.100
把game config里边的

28:15.220 --> 28:16.020
is over

28:16.380 --> 28:17.020
is over

28:17.020 --> 28:17.820
设置为什么

28:17.820 --> 28:18.420
设置为

28:18.420 --> 28:18.860
q

28:18.860 --> 28:19.900
表示游戏结束了

28:20.140 --> 28:21.780
游戏结束过后就不能点击了

28:21.780 --> 28:22.820
就不能点击了

28:22.820 --> 28:24.380
所以我们在事件这里的

28:24.900 --> 28:25.980
在事件这里的

28:26.140 --> 28:27.340
当我们点击的时候

28:27.340 --> 28:28.900
我要判断游戏适逢结束

28:29.020 --> 28:29.820
game config

28:29.860 --> 28:30.700
is over

28:30.860 --> 28:32.380
如果游戏结束了

28:32.460 --> 28:33.100
已经结束了

28:33.100 --> 28:34.460
我们直接结束这个函数

28:34.460 --> 28:35.620
就不做任何处理

28:36.060 --> 28:36.860
没了意思吧

28:37.460 --> 28:38.700
保存看一下

28:39.500 --> 28:40.260
再来

28:41.420 --> 28:42.020
在这

28:42.020 --> 28:42.300
不对

28:42.300 --> 28:42.820
在这

28:42.820 --> 28:43.420
在这

28:44.140 --> 28:44.820
这个在这

28:45.940 --> 28:46.620
这个在这

28:47.100 --> 28:47.820
这个在这

28:48.260 --> 28:48.820
这个在这

28:48.820 --> 28:49.420
这个在这

28:49.620 --> 28:50.460
游戏结束了

28:50.900 --> 28:51.420
点击

28:51.420 --> 28:51.980
没用了

28:51.980 --> 28:52.620
没用了

28:53.700 --> 28:54.020
好

28:54.020 --> 28:54.980
这个游戏写完了

28:55.420 --> 28:56.300
把这个注射掉

28:59.980 --> 29:00.740
这个注射掉

29:01.180 --> 29:02.260
游戏写完了

29:02.380 --> 29:02.980
写完了

29:04.180 --> 29:04.380
好

29:04.380 --> 29:05.780
那么现在的游戏是可以配置的

29:05.780 --> 29:06.580
比方以后

29:07.580 --> 29:08.780
我们要换成

29:08.980 --> 29:09.980
八行八列

29:10.380 --> 29:11.260
八行八列

29:11.500 --> 29:12.660
只需要改两个数字

29:12.860 --> 29:13.780
保存你看一下

29:14.180 --> 29:15.300
就变成八行八列了

29:15.980 --> 29:16.940
变成八行八列了

29:17.660 --> 29:19.180
所有的功能一切正常

29:19.500 --> 29:20.180
一切正常

29:20.340 --> 29:21.180
什么都不用改

29:21.180 --> 29:22.220
什么都不用改

29:22.220 --> 29:22.860
慢慢就评变

29:22.860 --> 29:23.620
难得变高了

29:23.620 --> 29:24.020
对吧

29:24.380 --> 29:25.660
如果我们要换一张图片

29:25.660 --> 29:26.660
比方说要换一张图片

29:26.660 --> 29:27.820
网上随便找一张图片

29:27.980 --> 29:28.980
随便找一张图片

29:29.620 --> 29:30.540
比方说

29:31.380 --> 29:31.820
美女

29:34.180 --> 29:34.620
好

29:34.620 --> 29:35.140
就这张图片

29:36.980 --> 29:37.620
右键

29:37.620 --> 29:39.260
咱们图片定存为

29:39.900 --> 29:40.660
比方说

29:41.140 --> 29:43.260
换一个1.jpg

29:43.260 --> 29:44.660
1.jpg

29:45.260 --> 29:45.660
好

29:45.660 --> 29:46.580
换这张图片

29:46.820 --> 29:47.460
比方说

29:47.940 --> 29:48.660
拖进来

29:49.220 --> 29:50.860
这个会不会清拳

29:51.540 --> 29:52.420
只是测试用一下

29:52.420 --> 29:54.180
我不会发下来的这个图片

29:54.500 --> 29:55.140
怕清拳

29:56.340 --> 29:56.580
好

29:56.580 --> 29:57.580
那这里我们改一下

29:57.580 --> 29:57.820
咋了

29:57.820 --> 29:59.620
改一下这个图片的尺寸

29:59.620 --> 29:59.900
对吧

29:59.900 --> 30:01.180
我们看一下这个图片的尺寸

30:01.660 --> 30:03.780
尺寸是1024624

30:03.780 --> 30:04.900
那么改一下

30:04.900 --> 30:06.300
1024

30:06.740 --> 30:08.500
高度的624

30:08.500 --> 30:09.820
航数就

30:10.620 --> 30:11.580
8×8

30:11.940 --> 30:12.940
随便随便

30:13.260 --> 30:13.540
好

30:13.540 --> 30:16.060
然后图片路径是1.jpg

30:16.060 --> 30:17.260
1.jpg

30:17.460 --> 30:17.620
好

30:17.620 --> 30:18.140
就改完了

30:18.140 --> 30:19.620
我们只需要改配置就完事了

30:19.620 --> 30:22.020
因为其他东西全是根据配置来生存出来的

30:22.140 --> 30:22.860
保存看一下

30:23.540 --> 30:24.340
保存看一下

30:25.260 --> 30:25.780
你看

30:26.180 --> 30:27.820
这个也搞定了

30:27.820 --> 30:28.420
对吧

30:28.580 --> 30:29.220
都可以搞定

30:29.220 --> 30:30.780
但是这个图片做拼图不太好

30:30.820 --> 30:33.100
因为有些地方是看不出来

30:33.100 --> 30:34.220
看不出来有啥区别的

30:34.220 --> 30:35.980
所以说这个东西做拼图不太好

30:36.500 --> 30:38.060
你可以随意换图片

30:38.060 --> 30:39.900
我就通过这个例子说明这个道理

30:40.420 --> 30:41.580
可以随意更改的

30:41.580 --> 30:41.820
好

30:41.820 --> 30:42.420
把图片删了

30:45.260 --> 30:45.820
好了

30:46.380 --> 30:47.660
就讲这么一些吧

30:47.780 --> 30:48.660
就讲这么一些

30:49.940 --> 30:50.620
你看都可以

30:50.620 --> 30:51.260
都可以

30:52.740 --> 30:53.100
好了

30:53.100 --> 30:55.180
这就是咱们这个效果

30:55.180 --> 30:56.340
这个效果里边还有一个

30:56.340 --> 30:57.740
就是如果你要做动画的话

30:57.740 --> 30:59.020
我就顺便说一下

30:59.140 --> 30:59.900
不是我们的

30:59.900 --> 31:01.860
就是不是我们学过的知识

31:01.860 --> 31:02.620
但是很简单

31:02.620 --> 31:03.420
我就顺便说一下

31:03.420 --> 31:04.100
都做到这来了

31:04.100 --> 31:04.660
对吧

31:04.660 --> 31:05.420
哪都来了

31:05.420 --> 31:06.060
对不对

31:06.060 --> 31:06.300
好

31:06.300 --> 31:07.300
咱们来顺便说一下

31:07.300 --> 31:08.260
怎么来做动画

31:08.260 --> 31:09.940
就一加一句话就行了

31:09.940 --> 31:11.020
Z storm style

31:11.020 --> 31:12.220
给它试试个那样式

31:12.220 --> 31:13.300
这个不是那样式

31:13.300 --> 31:14.620
这个试试个样式

31:14.620 --> 31:16.260
在CSS3里边有个样式

31:16.260 --> 31:17.060
叫transition

31:17.060 --> 31:18.100
表示过渡

31:18.100 --> 31:19.020
这里面写什么呢

31:19.020 --> 31:20.060
是写时间

31:20.060 --> 31:21.460
0.5秒钟

31:21.460 --> 31:22.620
0.5秒钟

31:22.620 --> 31:23.580
表示什么意思呢

31:23.580 --> 31:24.460
表示

31:25.180 --> 31:26.660
CSS属性

31:26.820 --> 31:28.140
变化的时候

31:28.140 --> 31:29.340
变化的时候

31:29.340 --> 31:32.020
在0.5秒钟

31:32.020 --> 31:33.700
内完成

31:33.700 --> 31:34.740
它不是瞬间完成

31:34.740 --> 31:37.020
是在0.5秒钟之内完成

31:37.020 --> 31:37.140
好

31:37.140 --> 31:38.100
你看一下

31:38.100 --> 31:39.020
就动画了

31:39.020 --> 31:40.140
非常非常简单

31:40.140 --> 31:41.540
就加动画很简单

31:41.540 --> 31:42.540
了解一下就行了

31:42.540 --> 31:43.660
这种了解一下就行了

31:45.140 --> 31:47.180
CSS3很强大的

31:47.180 --> 31:48.900
诚哥有专门的一套课程

31:48.900 --> 31:51.100
讲CSS3讲的非常非常深

31:51.100 --> 31:53.100
大家可以去学习一下

31:53.100 --> 31:53.340
好吧

31:53.340 --> 31:54.220
这就是这么一个效果

31:54.220 --> 31:56.380
这也是咱们在目前的学习中

31:56.420 --> 31:57.700
接触的第一个

31:57.700 --> 31:59.220
比较复杂的效果

31:59.220 --> 32:00.100
那么通过这个效果

32:00.100 --> 32:02.860
大家不仅是可以熟悉我们的

32:02.860 --> 32:03.660
讲的知识

32:03.660 --> 32:04.780
什么设置样式

32:04.780 --> 32:06.260
创建元素这些东西

32:06.260 --> 32:06.980
更重要的是

32:06.980 --> 32:10.460
我们能够理解一个完整的程序

32:10.460 --> 32:12.260
是怎么一步一步做出来的

32:12.260 --> 32:12.860
就是做的时候

32:12.860 --> 32:13.900
大家千万不要着急

32:13.900 --> 32:15.180
你看接近两半行呆

32:15.180 --> 32:16.260
对吧

32:16.260 --> 32:17.260
虽然只有两半行呆

32:17.260 --> 32:19.140
看上去其实也不多

32:19.140 --> 32:20.060
但是呢

32:20.060 --> 32:20.620
你做的时候

32:20.620 --> 32:21.740
如果一旦着急了

32:21.740 --> 32:23.060
老想到你瞬间把它写完

32:23.060 --> 32:25.220
那是几乎不太可能的

32:25.220 --> 32:26.940
而且你最后会垂头上气

32:26.940 --> 32:29.260
就会没有任何一点成就感

32:29.260 --> 32:30.380
你要做的这个东西的时候

32:30.380 --> 32:32.300
最好是把它分细

32:32.300 --> 32:33.860
分成一个一个的小功能

32:33.860 --> 32:34.740
我要实现这个功能

32:34.740 --> 32:35.420
我把它拆分

32:35.420 --> 32:36.100
拆分开

32:36.100 --> 32:38.140
然后一部分一部分来做

32:38.140 --> 32:38.940
那么这个能力

32:38.940 --> 32:40.820
大家一开始也不太会具有

32:40.820 --> 32:43.060
也不是每个同学都能具备这个能力

32:43.060 --> 32:44.940
这个需要大量的练习

32:44.940 --> 32:47.180
和大量的看别人讲

32:47.180 --> 32:48.460
看到听老师的剧

32:48.460 --> 32:49.460
去听老师的讲解

32:49.460 --> 32:51.100
所以说咱们杜仪学院的

32:51.100 --> 32:51.820
公开直播课

32:51.820 --> 32:53.260
我们经常会讲一些

32:53.260 --> 32:54.540
各种有意识的效果

32:54.540 --> 32:55.740
有些是开发中

32:55.740 --> 32:57.380
以后里面在公司里面常用的

32:57.380 --> 32:58.540
有些是

32:58.540 --> 32:59.700
就是一些好玩的效果

32:59.700 --> 33:00.460
但是不管是什么

33:00.460 --> 33:02.860
都是为了锻炼大家的程序思维

33:02.860 --> 33:04.220
这东西是很重要的

33:04.220 --> 33:05.580
所以说有了程序思维过后

33:05.580 --> 33:07.580
你遇到任何教功能都不会怕了

33:07.580 --> 33:09.660
怎么来训练程序思维

33:09.660 --> 33:10.620
只有多练习

33:10.620 --> 33:12.180
多想多看

33:12.180 --> 33:13.940
特别是多去练

33:13.940 --> 33:14.700
好吧

33:14.700 --> 33:16.500
OK 这是关于这个效果

33:16.500 --> 33:18.380
OK 咱们本张就结束了

