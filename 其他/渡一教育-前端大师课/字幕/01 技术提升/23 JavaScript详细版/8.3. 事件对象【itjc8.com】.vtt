WEBVTT

00:00.000 --> 00:16.210
这些课呢 怎么来说一下 关于这个事件对象

00:17.170 --> 00:24.650
事件对象呢 它肯定是一个对象啊 肯定是一个对象 它是什么对象呢 它是指的是发生了某一件事之后

00:25.690 --> 00:30.530
呃 这件事发生了之后呢 这件事的相关的一些信息 比方说啊

00:31.450 --> 00:36.810
你用鼠标点了一下对吧 这一面上点了一下 好点了一下你鼠标点的位置

00:37.610 --> 00:44.330
鼠标点的地方在哪 点的是哪一个元素 它最底层的元素是啥 对吧 这些相关的信息

00:45.130 --> 00:50.970
在浏览器里边呢 它是把它封装到一个对象里边去了 然后把这个对象的提供给你

00:51.410 --> 00:55.930
让你在事件的处理程序里边呢 可以使用这个对象啊 这就是事件对象

00:56.490 --> 01:01.250
所以说我们这里啊 大家先大概解释一下啊 以后写代码的时候你就知道什么意思了

01:01.810 --> 01:06.890
事件对象的指的是 啊 封装了中 它里边啊 封装了

01:08.050 --> 01:10.930
事件的相关信息啊

01:12.090 --> 01:20.770
不同的事件呢 它封装的信息呢不太一样 比方说啊 你按键盘的时间 跟你点鼠标的时间 那肯定不太一样的

01:21.170 --> 01:25.530
按键盘的时间呢 它一定会记录什么 你按的是哪一个键 对吧

01:26.410 --> 01:33.210
啊 你按键的时候呢 有没有按住一些功能键 比方说按住ctrl键或者是按住shift键

01:33.570 --> 01:37.850
对吧 这些相关的信息呢 它会记录下来 把它放到对象里边 然后提供给你使用

01:38.570 --> 01:47.370
有的时候呢 你要知道 你按的不要说啊 我们我做一个游戏的时候 你要知道 你按的是光标上的时候呢 我们一个小人就往上边移动

01:47.370 --> 01:52.490
对吧 按光标左的时候呢 就往左边移动 像等等等等啊 像这些呢 就是

01:52.890 --> 02:02.090
把这些信息呢 都是封装到了事件对象里边 那如果你点的是鼠标的话 他要记录你 你点的是鼠标的左键 点的还是鼠标的右键 还是

02:02.650 --> 02:06.330
你点的鼠标的中键 对吧 中键 那个滚轮也是可以点击的啊

02:06.890 --> 02:14.170
嗯 包括你点的鼠标 鼠标的位置在哪 这些都是相关的信息 他把它记录下来 放到对象里边提供给你使用

02:14.490 --> 02:23.370
那这节课呢 我们学习啥了 由于目前啊 咱们学习的事件只有一个 对吧 事件内容只有一个 就是click

02:23.850 --> 02:35.050
有点击事件 所以说呢 目前呢 学习不了太多的相关信息 我们后边呢 讲到具体的事件内容的时候 不用键盘事件啊 鼠标事件啊 怎么页面事件啊等等等等啊

02:35.490 --> 02:42.050
讲到具体的事件内容的时候呢 我们还会再具体的说不同的事件里边 它的事件对象里面提供了哪些东西

02:42.970 --> 02:48.170
那么这节课呢 我们了解事件对象 是要了解它的一些通用的属性啊 通用的成员

02:49.010 --> 02:56.010
就是说 无论你是键盘还是鼠标还是什么玩意的事件 他们都有这些成员啊 所以说我们了解这么些东西

02:56.570 --> 03:04.490
好 第一部分啊 首先说一下 怎么来获取一个事件对象啊 发生了一件事 我怎么来获取这个这件事的一些相关的信息

03:05.010 --> 03:09.290
好 怎么来获取事件对象呢 这里边呢 有两种方式

03:09.610 --> 03:16.250
一种是呢 i1的方式呢 一种是现代浏览器的方式 当然我们平时用的话就一定是用现代浏览器的方式 对吧

03:17.210 --> 03:26.170
第一种方式的是通过事件处理 通过事件处理呈函数的

03:27.330 --> 03:30.930
参数获取 什么意思 给大家看一下啊

03:32.370 --> 03:33.370
test 1

03:34.370 --> 03:39.610
啊 这里呢 我们写个页面啊 就随便写啊 随便写 有一个按钮啊 点击

03:40.570 --> 03:46.410
然后下边呢 写给他注册个事件 我们要获取事件的对象嘛 对吧 那肯定要注册事件

03:46.970 --> 03:53.170
对不对啊 DTN document query selector来获取这个按钮 button

03:54.250 --> 04:01.850
好 然后呢 给他注册点击事件onclick 当然也可以用上几课我们学习的什么add 英文成立上都一样啊 都一样 onclick

04:02.570 --> 04:07.210
啊 方式 就是add 英文成立上的那种方式呢

04:08.970 --> 04:15.770
他适用于什么呢 适用于就是你要有多个处理程序 对同一个事件有多个处理程序 你可以适用这种方式啊

04:16.490 --> 04:23.370
这种方式呢 他就适用于就是他写的比较简洁 他适用于什么 就是你只有一个事情啊 只有一个事情要做

04:23.650 --> 04:29.730
那么可以用这种方式 并且呢 你是在冒泡阶段做的 对吧 我们之前说过啊 在目标阶段或者是冒泡阶段做的

04:30.370 --> 04:38.370
刚刚之前那个add 英文成立上的 那么他可以是在补货阶段来完成的啊 就是看你自己啊 看你自己如果用不到那么

04:38.930 --> 04:47.770
丰富的功能的话 你可以就使用这种 当然也要看公司要求啊 就有的是公司要求里边 公司有些要有些公司他会要求的必须要使用多么二

04:48.050 --> 04:50.210
这种事件组成方式啊 就看具体情况

04:51.050 --> 04:57.450
好 这里面呢 怎么来获取事件的对象 非常简单 就是第一个参数啊

04:57.970 --> 05:01.450
parameter 第一个参数 它的第一个参数就是

05:02.410 --> 05:04.690
事件对象啊 就是事件对象

05:05.810 --> 05:12.250
或者给他取个名字叫events obj 啊events obj 其实我们通常取名字就取的是啥 就取的是一个e

05:12.650 --> 05:17.170
就取的是一个e 意表示events 对吧 events的手字母 好 印象出来啊

05:18.290 --> 05:23.450
看一下我们把这个事件对象打印出来 那么这个参数是谁传给你的呢 肯定不是你自己传给的

05:23.490 --> 05:29.570
你看 我们这个页面中没有调用这个函数吧 没有调用过吧 我们的页面中没有这样调用过吧

05:30.170 --> 05:33.930
调用函数是不是这样的调用 对吧 传递事件吧 对吧 事件传进去

05:35.010 --> 05:40.330
就是参数传进去 没有这样调用过的吧 那么是谁调用的呢 是浏览器自动调用的

05:40.570 --> 05:44.010
当我们点击的时候会自动调用这个函数 并且把参数传给你

05:45.170 --> 05:47.970
不管你要不要这个参数 他都会传给你 保存看一下啊

05:48.850 --> 05:53.010
呃 f 手打开啊 这边来看 点击你看

05:53.970 --> 06:01.810
是不是得到一个事件对象了 他对象的类型呢 是叫做mouse event mouse 什么意思 鼠标对吧  mouse 一个单词就是老鼠

06:02.330 --> 06:11.810
events 表示事件 对吧 mouse event 表示鼠标 鼠标事件 鼠标事件里面有很多很多的相关信息啊 有很多的相关信息提供给你

06:12.770 --> 06:19.770
好吧 这是关于如何来获取事件对象的第一种方式 使用参数 好 这种参数这种方式呢

06:20.210 --> 06:23.090
也可以用在哪呢 也可以用在这 给大家看一下啊

06:24.530 --> 06:28.050
我们之前不是说过dom0吗 对吧 dom0里边还可以这样子写 对不对

06:29.050 --> 06:35.890
这里边也可以使用参数啊 也可以使用参数 我们之前说过啊 unclick 呢 就是你如果你写成属性的话啊

06:36.210 --> 06:40.930
它里边本身就是一个函数环境 你可以把认为你这里边的代码就是写到函数里边的

06:41.250 --> 06:45.810
它那个函数呢 本身就自带了一个参数 你看不见而已啊 它的参数名字叫做events

06:46.450 --> 06:49.970
events 就是事件的意思 对吧 事件对象啊 保存看一下啊

06:50.690 --> 06:57.250
咱们点击 你看 是不是仍然可以得到 对吧 但这种写法不就不要写了啊 你不要用这种写法了啊 不要用这种写法啊

06:58.130 --> 07:03.090
所以想了解一下就行了 好 这是第一种方式啊 通过参数来获取事件对象

07:03.810 --> 07:09.810
第二种方式呢 是一些老版本的i 牛郎期 老版本的i牛郎期呢 他有自己的方式啊 就是

07:10.690 --> 07:15.330
旧版本 i8 级i8以下的i1牛郎期

07:16.290 --> 07:21.410
可以通过什么 通过src 通过window.events获取

07:23.330 --> 07:31.250
通过这个获取 通过window.events来获取 也就是它的事件对象在哪呢 在window的全局属性event里边

07:31.650 --> 07:35.410
当发生一件事的时候呢 他会把这个属性给他复职 然后你就可以获取了

07:36.450 --> 07:38.690
所以说呢 如果在i1牛郎期里边啊

07:39.810 --> 07:46.690
在i1牛郎期里边 我们这里要怎么来得到呢 就是window.events啊 这样子来得到 保存啊

07:48.610 --> 07:53.170
这样子呢 看谷歌的那些都支持啊 谷歌的那些他两者都支持 明白这个意思吧

07:53.970 --> 07:54.850
window.events

07:56.370 --> 08:01.010
因此呢 我们这里就有一种写法 就是能够更加兼容的写法

08:01.330 --> 08:07.730
什么写法呢 就是我要得到这个事件参数嘛 对吧 就是得到这个事件对象啊 事件对象

08:08.050 --> 08:15.090
那么比方说这个参数有可能没有值 对吧 比方说一些旧的i1牛郎期里边 他有可能没有值 所以说呢 我们这样子来写

08:15.570 --> 08:17.490
意义了两个或者

08:18.930 --> 08:19.330
event

08:20.050 --> 08:22.690
event或者就是window.event都行

08:23.410 --> 08:23.970
点event

08:24.690 --> 08:28.850
我们通常呢会这样子来写呆嘛 但是呢 我这里说了啊 之前说过的

08:29.250 --> 08:30.850
兼容性这一块东西呢

08:32.210 --> 08:40.450
我们目前呢 不作为终点考虑 因为将来呢 又会有第三方的库或者是一些插件 可以帮我们解决这些问题啊

08:40.690 --> 08:48.530
所以说呢 这一块你了解就行了 这叫什么意思呢 我们之前是不是说过的啊 如果他有值 是不是就直接把他负责给他

08:48.530 --> 08:49.970
对吧 就相当于啥都没动 对不对

08:50.610 --> 08:53.890
如果他有值的话 就不需要做后面的判定了 因为他是或者

08:54.130 --> 08:58.370
只要有一个有值就行了 一个为真就行了 如果他没有值 他就判定为假

08:58.690 --> 08:59.170
于是呢

08:59.810 --> 09:01.170
就把这个表达是的结果

09:01.570 --> 09:05.090
负责给他 两个 两个值总得有一个值 对吧 总得有一个值

09:05.330 --> 09:10.210
所以说 如果他没有值 就得到他的结果啊 这是一家 这是一种更加兼容的写法

09:10.530 --> 09:16.450
在以前的代码里边经常看到这种写法 但是现在呢 我肯定不会这样子写 我不太会这样子写

09:16.850 --> 09:22.130
因为到了后边 特别是到你们学到前端 学到后期的时候啊 有很多的就是

09:22.450 --> 09:25.330
能搞定兼容性的一些工具啊 能帮你处理这些问题

09:26.610 --> 09:28.130
好吧 这是关于这一块啊

09:29.090 --> 09:33.570
呃 获取事件对象 好 这一部分很简单啊 就怎么来得到这个事件对象

09:33.890 --> 09:39.810
然后接下来是重点 接下来我们说一下是事件对象里边 有哪些通用的成员

09:40.530 --> 09:46.290
就是不管我们后边学了哪些事件 什么书标啊 键盘啊 各种各样的事件 不管学了哪些事件

09:46.850 --> 09:53.250
那么他都有的成员都可以通过事件对象里边的属性得到啊 一个个说 首先是第一个 target

09:53.890 --> 09:58.370
这个表示什么意思呢 表示的是事件目标 也叫做事件员

09:59.170 --> 10:05.490
事件员 我们之前解释过这个概念的吧 叫做事件员的 target 什么意思 就是目标啊 我们这里也称之为事件员

10:06.770 --> 10:12.850
这个事件员什么意思呢 就是指的是最里程那个啊 就是在目标阶段触发的元素

10:13.410 --> 10:19.410
啊 我们再来看一下这个图啊 这个图已经在脑海里边啊 在目标阶段发生了事件的元素

10:19.890 --> 10:26.290
啊 就是 target 我们可以通过这个属性来获取 好 比方说举个例子啊 就这个地方啊 就这个地方

10:26.690 --> 10:32.530
好 比方说外面有一个div 外面有一个div 我们这里呢有个button

10:33.650 --> 10:39.730
好 当我们点击这个button的时候 我们这里输出啊 输出console log一点 target

10:40.930 --> 10:47.170
看一下啊 保存 点击 你看得到是不是这个按钮对吧 就是这个按钮对不对 没问题吧

10:47.810 --> 10:51.810
好 然后接下来我们再来看啊 我说如果我给这个div 注册时间

10:52.930 --> 10:55.650
啊 注册了不是button 而是这个div

10:57.810 --> 11:04.370
div 我们点击按钮的时候 div 会不会出发这个click 时间 会不会出发 所以也会出发 没问题吧 肯定会出发

11:04.770 --> 11:09.730
啊 因为他有什么事件冒泡嘛 对吧 一层一层往上冒啊 默认情况下是冒泡

11:10.290 --> 11:17.410
啊 那么这里呢 我给他一个颜色啊 div 一个背景颜色啊 nice blue

11:19.410 --> 11:21.810
好 看着啊 我点击按钮

11:22.770 --> 11:28.690
你看一下 我输出的时候还是button 明明我给div 注册的时间 但是我输出了还是button

11:29.010 --> 11:35.810
所以说他得到的是啥呢 一定要清楚啊 他得到的是事件原对象 就是处于目标阶段

11:36.450 --> 11:41.170
甭管你给谁 上面给谁注册的时间 他得到了一定是目标阶段

11:42.050 --> 11:44.370
注册的 就是得到的元素

11:45.890 --> 11:53.250
好 然后呢 比方说啊 咱们再点这个背景颜色区域 他点的不是按钮 点按钮肯定得到button 对吧 点的是背景颜色这个区域

11:53.810 --> 11:55.730
那得到什么 得到就是div

11:56.370 --> 12:01.250
看到没 他始终得到了是你最理成那个目标阶段得到的元素

12:01.970 --> 12:07.970
这个东西就很有用了 超级超级有用 因为这个玩意可以实现一个啥呢 可以实现一个

12:08.450 --> 12:10.690
事件委托啊 等一下啊 我这个东西还没讲

12:11.090 --> 12:16.210
这个src element是一种兼容性的写法 就是9版本的i流量器呢 他支持的是这个

12:16.690 --> 12:22.610
支持的是这个 所以说这一块呢 我们通常呢 又会这样子写啊 又会这样子写啊 就是

12:24.050 --> 12:30.850
src 就是事件原等于啥呢 1点target 有可能i丢到i流量器他不支持对吧 我们再写上一个什么

12:31.570 --> 12:33.650
1点src element

12:34.610 --> 12:40.770
就是两个取一个嘛啊 如果这个东西不存在的话 那么就取这个东西啊 如果这个东西存在的话就取这个东西

12:41.330 --> 12:46.210
最后呢 我们用这个src来得到 这个src来得到这个事件原

12:46.850 --> 12:50.850
啊 这是兼容性的写法啊 了解一下就行了 我后边写代码的时候肯定不会这样子写

12:51.730 --> 12:58.210
好 那么这接下来呢 我们要主要说一个很核心很重要的一个事就叫做事件委托

12:58.450 --> 13:08.530
什么叫做事件委托呢 指的是我们页面上的可能有很多很多的元素啊 特别是一个div里边 他可能有各种各样的按钮

13:09.570 --> 13:15.570
那么我们与其给每一个按钮去注册事件不如给整个div注册事件

13:16.370 --> 13:19.090
然后通过什么 通过这个1点target

13:19.890 --> 13:25.730
通过这个事件原 就是事件目标来判断你到底是哪一个按钮被点击了

13:26.450 --> 13:34.210
明白这意思吧 就是事件委托啊 通过给负元素啊 或者是祖先元素啊 祖先吗

13:35.570 --> 13:43.250
因为他有事件爆炮 祖先元素始终能够收获到他里边的事件 通过给祖先元素注册事件

13:45.090 --> 13:49.410
在事件处理程序中 在事件处理

13:50.210 --> 13:52.930
事件处理程序中 然后

13:53.890 --> 14:02.670
判断事件原进行不同的处理 这就是事件委托

14:03.550 --> 14:11.470
那么这样子呢 可以减少很多的事件注册 比方说啊 一个div里边 假设啊 一个div里边有这么一些按钮

14:12.830 --> 14:14.990
比方说啊 巴特

14:16.750 --> 14:17.790
成义100

14:18.670 --> 14:22.990
100个按钮 然后里边的文本呢 都不一样啊 都不一样 随便写个文本

14:23.310 --> 14:27.950
100个按钮 那与其呢 我去得到所有的按钮 然后去循环他

14:28.510 --> 14:33.230
然后注册事件 这种效率反而更低 对吧 你要得到 你要得到下面的所有按钮

14:33.550 --> 14:37.870
是不是要影响一次效率 对吧 要做一件事 然后呢 你要去循环是不是又得

14:38.430 --> 14:43.230
经过一段代码 对吧 然后每一次循环要注册事件 是不是也得经过段代码

14:43.630 --> 14:45.790
他这样子的效率反而更低啊

14:46.590 --> 14:51.710
我们就可以怎么样呢 直接给这个div注册事件给他的负元素 或者是给body注册事件

14:52.670 --> 14:56.350
我给一个区域 整体去注册事件 然后在事件里边

14:57.070 --> 15:02.510
通过这个一点target来得到具体的事件目标是谁

15:03.150 --> 15:09.070
看一下啊 你看点不同的按钮 我可以通过一点target来得到不同的事件目标

15:09.310 --> 15:12.430
然后呢 根据不同的事件目标来做不同的处理

15:12.830 --> 15:15.710
看没 是吧 我就可以这样子来处理

15:16.270 --> 15:20.350
好 比方说吧 比方说我们做一个非常非常简单的例子

15:21.150 --> 15:28.510
看着啊 做一个非常简单的例子 我们这里下面有一些

15:29.870 --> 15:35.390
批元素 有些批元素 每个批元素下面有一段文本有一个按钮

15:36.430 --> 15:39.710
批元素乘以10个 每个批元素下面有一个

15:40.990 --> 15:43.390
十半元素 十半元素下面的一段文字

15:44.270 --> 15:45.630
好吧 四个男子嘛

15:46.270 --> 15:48.270
然后呢 除了十半元素之外呢 还有一个按钮

15:49.070 --> 15:52.750
还有一个按钮 按钮下面有一段文字嘛 三处

15:53.470 --> 15:53.870
三处

15:55.710 --> 15:58.590
好 得到这么一个批元素啊 我们看一下 运行说看一下啊

16:03.100 --> 16:06.540
好 我们现在干嘛呢 我现在要点击这个按钮

16:07.100 --> 16:11.500
三处整个这个批元素 点击这个按钮 三处整个批元素

16:11.900 --> 16:13.660
好 你看一下怎么做呢 我们可以

16:14.300 --> 16:15.660
可以用以前的做法干嘛呢

16:16.860 --> 16:21.420
以前的做法的话 我们是不是得找到找到啥

16:22.220 --> 16:25.500
就是找到这里面所谓的按钮注册点击事件 对吧

16:25.820 --> 16:30.380
现在不用了 我们直接统一给DIV注册事件 统一给DIV注册事件

16:30.940 --> 16:33.580
他点击的时候 因为他会时间爆炮嘛

16:33.900 --> 16:36.380
所以点按钮他也会相当于点击到他 对吧

16:36.700 --> 16:39.900
所以说呢 统一给DIV注册事件 你看点按钮的时候 是不是得到按钮

16:39.900 --> 16:44.300
对吧 得到按钮 点这个批元素的时候 等点这个十半的时候 是不是得到十半

16:44.540 --> 16:47.580
对吧 点这个地方 是不是得到批元素 对不对

16:48.140 --> 16:50.540
点这个地方的是得到自己DIV 对吧

16:50.860 --> 16:57.020
所以说这个就是 我把里程的这些元素 它的事件 委托给副元素

16:57.340 --> 16:59.100
或者叫做主线元素来处理

17:00.540 --> 17:02.860
好 那么这里怎么处理呢 我要点按钮删除

17:03.100 --> 17:06.620
好 你看着啊 我就可以通过这样的判断 首先你是不是一个按钮

17:07.180 --> 17:11.340
一点 package 看一下你的目标啊 就是事件目标

17:12.620 --> 17:15.260
看一下它的什么 tag name 所以讲过了

17:16.140 --> 17:23.580
讲过吗 讲过没有 动物核心这里 动物节点的操作 它的常见属性

17:24.620 --> 17:28.300
应该讲过吧 tag name 如果没讲过 没关系啊 这个很简单

17:28.540 --> 17:33.420
如果没讲过的话 我这里说一下 tag name 这个属性得到的是元素的名称

17:34.460 --> 17:39.180
得到的是元素名称 之前我们说说过 load name 对吧 tag name 也是一样

17:39.580 --> 17:44.380
好 看一下啊 我们输出 你看得到是button 对吧 这里得到的是span元素 对吧

17:44.460 --> 17:48.220
p元素 得到的是元素名称 那是不是可以通过元素名称来判断

17:49.180 --> 17:54.140
如果一点 target 点 tag name 等于啥

17:54.620 --> 17:59.740
所以button 如果你点的是按钮啊 因为这这里边很所有的指线数

18:00.060 --> 18:05.900
它的指线元素 它点击过后都会冒泡到dav 所以说呢 我们这里判断一下啊

18:06.220 --> 18:09.900
如果你是一个button 是个按钮 那么我们干嘛 是不是要做删除

18:10.460 --> 18:11.580
对不对 要做删除

18:12.620 --> 18:21.580
好 看一下啊 点击 是不是要做删除 点击要做删除 那点这些呢 你看现在是不是没了 因为它有没有出发事件 有 但是呢 我没有做任何处理

18:22.300 --> 18:24.300
没有这意思啊 这就是事件委托

18:24.780 --> 18:32.620
你看 然后呢 我们怎么来做删除呢 就很简单了 我们能够 他点的是按钮嘛 对吧 我们就得到这个按钮 得到这个按钮 他是不是按钮

18:33.260 --> 18:38.540
没问题吧 他 tag name 是按钮 他肯定是按钮吧 这是事件目标 然后找到这个事件目标的是吧

18:39.260 --> 18:51.180
是吧 是perit load 或者perit element 对吧 找到负元素 然后干嘛了 自杀呗 自杀 保存 看一下啊

18:52.300 --> 19:03.500
你看 这样子做删除是不是舒服的多 而且恐怖的地方在哪了 在哪了 看着啊 我现在呢 给他动态的加一个p元素 我这里复制啊 粘贴

19:04.220 --> 19:10.700
哎 怎么跑到里边去了啊 对 我比较说啊 第一个复制 要粘贴到这个dav里边 粘贴一个

19:11.580 --> 19:17.980
啊 现在多了一个了啊 这一行是多出来的 你看 动态的加了一个点三组仍然有效 因为我用的是事件委托

19:19.020 --> 19:23.820
那如果你用的是之前的那种方式就麻烦了 你每次加的元素 你动态加的元素

19:24.620 --> 19:31.820
你是不是要得重新注册时间 因为你之前是给这个按钮元素本身注册时间 那你新加的元素他是没有

19:32.300 --> 19:38.140
注册时间的 对吧 他是没有注册时间的 所以说呢 你新加的元素你在自动手动的去注册时间

19:38.860 --> 19:39.340
因此呢

19:40.300 --> 19:45.500
更加麻烦一些啊 像这种事件委托的话会轻松很多 因此呢 我以后呢 就是我

19:46.060 --> 19:50.620
我都个人习惯啊 通常使用事件委托会在什么时候呢 会在这种时候

19:51.340 --> 19:51.660
通常

19:53.940 --> 19:55.140
事件啊

19:56.100 --> 20:01.300
事件委托 就是把指元素的东西委托给复元素来处理啊 事件委托

20:01.860 --> 20:02.420
用于

20:03.620 --> 20:06.740
动态生成元素的区域

20:07.700 --> 20:10.260
就是也有这个 这个区内的元素啊

20:10.740 --> 20:18.020
这些元素他可能是动态的 他一会儿呢 消失一会儿呢 又新加 比较上面一个文闷框点添加过后添加一个元素进来

20:18.100 --> 20:23.060
对吧 他有可能又消失有添加 那么新加的元素他是之前是没有事件的 对不对

20:23.300 --> 20:26.420
那我们可以用事件委托给歪成的div注册时间

20:26.740 --> 20:29.460
那甭管里边的元素有哪些 他总会出发这个事件

20:29.940 --> 20:31.780
对吧 通常使用于这种场景

20:32.820 --> 20:40.660
好吧 但是事件委托呢 也不是说就完全取代了之前的事件处理方式 也不是啊 也不是

20:41.380 --> 20:48.100
事件委托呢 有的时候呢 变得会反而会变得不好办 就是你要看具体情况 就比方说啊 比方说这个

20:48.580 --> 20:50.020
我们这里的匹元素是这样子写的

20:51.620 --> 20:53.220
比方说咱们匹元素是这样子写的

20:53.780 --> 20:59.380
匹元素有10个里边的有一些span

20:59.620 --> 21:02.180
span还是一些文本

21:02.420 --> 21:04.740
有些文本 然后呢 再看一下这个

21:05.380 --> 21:06.260
再加一个button

21:07.300 --> 21:08.820
button下面呢 有一个什么

21:11.460 --> 21:12.420
有一个

21:13.460 --> 21:14.100
我想想啊

21:14.660 --> 21:19.380
有一个span元素 又有一个span元素 讲什么button下面是不是可以有这个东西 对吧

21:19.780 --> 21:23.380
又有一个span元素 span元素下面呢 有一个三处

21:26.420 --> 21:29.460
它形成这么一种结构了 看着button里边有一个span

21:30.100 --> 21:33.140
好 那么这个时候呢 就有点尴尬了 就有点尴尬了

21:33.460 --> 21:38.340
比方说啊 那里现在点这个span数也可以三处 点这个button数也可以三处

21:38.740 --> 21:42.500
对吧 他有可能写成这种结构的 有可能的 甚至这里面还有图片

21:42.980 --> 21:45.540
有一个span 有一个图片 有个字体图标 有个i元素

21:46.020 --> 21:50.980
都有可能啊 都有可能 所以说这里边可能结构比较复杂 你点它的时候呢

21:51.300 --> 21:55.700
能三 点它的时候呢 也能三 是不是你这里要判断一大堆 对不对

21:55.940 --> 21:59.540
而且要判断什么 还判断这个span 是不是button的指元素

21:59.620 --> 22:02.660
因为它有可能是点了这个span 咱们把它输出看一下吧

22:03.140 --> 22:04.420
那现在的情况就比较多了

22:04.980 --> 22:09.220
console log 他不是说就是事件委托呢 你要看情况啊 要看情况

22:09.540 --> 22:12.900
具体情况 具体分析 他不是说他提供给你这些方式啊 不是说

22:13.700 --> 22:17.540
你只需要使用一种方式就完事了 具体情况 具体分析的

22:19.540 --> 22:22.020
好 不要点它 是p元素 对吧 那点它

22:22.740 --> 22:26.340
八成元素 点它 十倍元素 点它也是十倍元素 你怎么区分的 对吧

22:26.900 --> 22:31.140
所以你得判断 各种判断 对不对 就是有的时候呢 你在事件委托里边

22:31.140 --> 22:37.700
如果你觉得判断起来比较复杂啊 比较复杂的话 那么你可以考虑不用事件委托 就是你要灵活处理啊

22:38.420 --> 22:48.020
好 这是这个玩意儿 关于事件目标 他通常用于是做事件委托的 那么说到这儿呢 我就顺便再说一下另外的

22:48.900 --> 22:53.140
另外一个主形 我现在列出来了 就这个属性 那么说下一个属性

22:53.700 --> 22:57.700
有点类似 但不是一样的 不是一样的 叫做current target

22:58.020 --> 23:05.780
他表示什么意思呢 表示当前 当前目标 他不是事件目标啊 就怎么区分呢 当前目标是什么意思呢

23:06.740 --> 23:12.420
绑定事件的元素 他获取到的是绑定事件的元素

23:14.020 --> 23:23.540
等效于啥 等效于Zis 我们说在Zis里边获取的是啥 Zis里边获取的就是绑定事件的元素 所以这里呢 等效于Zis

23:24.020 --> 23:30.660
咱们看一下啊 刚才我们看到一点tockets 得到的是啥 得到的是事件目标 对吧 咱们再来输出Zis

23:31.540 --> 23:37.700
看一下Zis是啥 我之前说过 Zis表示的是事件元 但是当时呢

23:38.580 --> 23:47.540
我只能这样子解释 当时说的 因为没有学那个事件委托嘛 也没有学这些数语呢 所以说我解释起来不是很方便

23:47.780 --> 23:53.540
那现在可以解释到 他不是事件元 Zis指的是什么 Zis指的是事件绑定的元素

23:54.420 --> 23:55.780
事件绑定的元素

23:56.740 --> 24:06.180
则是这么个元素 就是你哪个元素在绑定事件 啊 当然这里啊 我用的是动铃的方式来注册事件 动铃二的方式完全一样 包括什么事件参数这些完全一样

24:07.300 --> 24:14.580
啊 那么你看 Zis他始终是DV啊 始终是DV 甭管你点的是啥 你看 点的是span 这是事件目标 这是事件元

24:15.460 --> 24:19.780
事件元 不是 这是事件 当前目标 就是绑定的

24:20.500 --> 24:24.980
绑定事件的元素 绑定事件的元素 Zis始终是指向这

24:25.700 --> 24:27.140
那么这个Zis呢 跟那个

24:28.180 --> 24:31.140
跟啥呢 跟那个东西是一样的

24:32.340 --> 24:34.500
跟这个什么Eder current

24:35.380 --> 24:43.380
corrent target 是一样的 他也指的是这个意思 指的是绑定事件的元素 看着啊 你要是一样的

24:44.100 --> 24:46.340
什么两个一样的 甚至呢你可以这样子写

24:47.620 --> 24:49.380
看两个是不是相等的

24:50.180 --> 24:53.140
两个对象吧 对象相等什么啥 所以他的地址都一样

24:53.940 --> 24:58.980
保存 看一下 这是q 对吧 啊 q 对不对 q

24:59.700 --> 25:04.020
好 所以说这两个呢 是可以通用的啊 是可以通用的 在事件里边 Zis指向的是

25:04.580 --> 25:10.260
啊 这里记彼啊 等下语程 不用记了啊 这里都说清楚了 指向的是绑定事件的元素

25:10.580 --> 25:14.980
而不是最理成那个事件目标 事件目标只能通过

25:15.300 --> 25:20.660
Eder target来获取 兼容性的做法呢 是用src给你们成来获取

25:21.620 --> 25:26.740
好吧 这是我们本节课 非常非常核心的两个属性啊 target

25:26.980 --> 25:31.940
和corrent target 下来了我们这些课呢 之后呢 有个作业啊 需要用到这个容器

25:32.740 --> 25:38.340
好 下一个啊 type 这个属性呢 了解就行了啊 了解就行了 他是得到一个字幕串啊 一个字幕串

25:38.980 --> 25:40.900
得到事件的内容

25:42.260 --> 25:48.180
他也是通用的 在下这里边可以得到事件的内容 比方说啊

25:48.900 --> 25:50.180
这里 我们console

25:51.460 --> 25:53.620
log 1点什么 type

25:54.660 --> 25:55.940
看一下这个1点 type 是啥

25:56.820 --> 26:01.460
保存啊 点击 啥click 对吧 点击事件啊 点击事件

26:02.020 --> 26:08.580
这就是这个玩意啊 就这个玩意 他指的是事件内容啊 指的是事件内容 那这个东西有啥用呢 我不知道他事件内容是啥吗

26:09.060 --> 26:12.660
有的时候有点用 有的时候有点用 有的时候呢 你可能会这样子

26:13.380 --> 26:14.500
就是你写一个函数

26:15.460 --> 26:21.700
这个函数呢 是一个通用的事件处理程序 就是他可以处理各种各种事件 但就是在某一个场景下边

26:22.180 --> 26:22.660
handle

26:23.300 --> 26:24.660
他可能会处理各种事件

26:25.380 --> 26:28.820
我们的onclick呢 使用的是这个事件 对吧

26:29.460 --> 26:33.300
然后呢 还给他有其他的事件 对不对 还有其他事件 什么 on mouse down

26:34.740 --> 26:35.540
on mouse down

26:36.340 --> 26:42.820
他也使用 我们后边会说啊 这个表示鼠标按下 按下的事件 他给onclick呢 有点相似 但是有些区别

26:43.380 --> 26:43.940
啊 这里呢

26:45.140 --> 26:51.140
我们输出这个一点 type啊 都用的是同一个处理函数 看没 这两个不同的事件 用的是同一个处理函数

26:51.380 --> 26:55.300
那么这个处理函数里边是不是要区分不同的事件 对吧 要区分不同的事件

26:56.660 --> 26:57.140
看一下啊

26:59.140 --> 27:02.100
点击 他有 他既出发了mouse down 也出发了click

27:02.580 --> 27:04.660
点击 他既出发了mouse down 也出发了click

27:05.380 --> 27:10.820
对吧 那么倒是你要区分啊 也要进行区分啊 那么现在安住不动 是不是只出发了mouse down

27:10.980 --> 27:13.060
对吧 那台协过后了 出发click

27:13.380 --> 27:18.740
没有这个意思吧 你之前要进行区分啊 进行区分一下click 是点下台协嘛 对不对

27:19.940 --> 27:28.770
啊 这是关于这个type啊 写回去吧 来写回去 了解就行了啊 这个东西不是重点

27:29.970 --> 27:35.330
好 下一个啊 下一个重点又来了啊 叫做prevents default

27:36.130 --> 27:40.690
这是什么意思呢 他的兼容写法return value啊 我们一会说兼容写法 兼容写法

27:40.850 --> 27:43.890
就I流浪器 I8和I8版闷一下的流浪器 真的很烦

27:44.690 --> 27:48.850
好 这指指的是什么呢 是阻止默认行为

27:50.770 --> 27:53.490
阻止流浪器 默认行为

27:55.410 --> 27:57.410
好 什么意思呢 看一个例子

28:01.330 --> 28:07.010
嗯 这里边DIV去掉了 这里边呢就一个A元数啊 有个A元数

28:07.970 --> 28:10.290
来 看着啊

28:13.580 --> 28:17.740
这个A元数我现在代码都不写 一行界是代码都不写

28:18.540 --> 28:21.980
这个A元数它是个超链接 对不对

28:22.620 --> 28:25.580
那我们点了这个A元数会不会跳转页面 会不会啊

28:26.140 --> 28:30.300
所以以前A元数世界上的知识它一定会跳转页面 对吧 它一定会跳转页面

28:30.780 --> 28:32.780
但是你可以想 你可以这样子想象啊

28:33.580 --> 28:36.780
这个A元数呢 是不是有个点击事件 对吧 点击

28:37.500 --> 28:41.500
点击过后我啥都没做 我没有写任何的界式代码 它为什么会跳转页面呢

28:41.820 --> 28:44.140
是因为浏览器呢 它有默认行为

28:44.460 --> 28:50.140
针对某些元素呢 点了之后呢 或者是做了一些操作之后 浏览器会自动的去做一些事

28:50.780 --> 28:52.780
像这个A元数就是一个点形的例子

28:53.100 --> 28:55.660
点击A元数 浏览器会自动的跳转页面

28:56.380 --> 29:00.460
有的 这就会导致一个问题 就是我可能呢 给A元数注册事件 对吧

29:00.860 --> 29:04.780
给这个A元数注册一个点击事件 有没有可能 A元数怎么能注册点击事件

29:05.180 --> 29:06.700
啥元数都可以注册点击事件

29:07.180 --> 29:08.380
这些事件都是通用的

29:09.580 --> 29:11.820
A元数 那么现在我用这个动门嘛

29:12.380 --> 29:16.540
add even 成lisner 注册点击事件 对吧 点击事件

29:17.020 --> 29:22.380
好 点击事件的时候 是不是能得到一个处理函数 对吧 函数里边有个事件对象 对不对

29:22.860 --> 29:25.900
好 点击事件之后我干嘛了 我就输出这么一个东西

29:26.940 --> 29:27.820
被点击了

29:29.420 --> 29:34.220
好 咱们来看一下啊 来看一下能输出吗 能不能输出

29:34.780 --> 29:36.300
注意看啊 它的速度很快

29:36.940 --> 29:40.460
注意看这里 注意看这里 不要看这边 我马上点了啊 点击

29:41.500 --> 29:46.860
有没有输出刚才 所以有输出 对不对 现在到百度了啊 刚才有输出 再来看一次啊

29:48.300 --> 29:51.180
点击 所以有一个输出 输出完了过后

29:51.820 --> 29:55.900
于是呢 运行的浏览器的默认行为 对吧 默认行为是挑转页面

29:56.620 --> 30:01.820
它先运行我们的unclick 点击事件 然后呢 再运行浏览器的默认行为 默认行为就是

30:02.140 --> 30:02.860
挑转页面

30:03.500 --> 30:07.660
但是我们希望的市场呢 很多时候我们要注册点击事件的时候 都不希望

30:08.060 --> 30:11.100
它有这些默认行为 这些默认行为搞得我们很烦很愁畅

30:11.660 --> 30:19.340
那咋办呢 我们希望的介绍来处理 那咋办呢 我们就需要阻止默认行为 这是一个非常常见的一个需求

30:20.060 --> 30:23.020
怎么来阻止默认行为呢 就通过事件对象

30:23.740 --> 30:25.740
这是一个函数 这是个函数

30:26.460 --> 30:30.220
这个东西 这是个函数 方法

30:31.420 --> 30:35.260
它不是属性 好 那么就通过这个方法来进行阻止

30:35.820 --> 30:41.260
好 看着怎么来阻止 非常简单 我们只需要给它加上一点prevent default

30:42.140 --> 30:47.020
完 阻止浏览器的默认行为

30:47.900 --> 30:52.140
浏览器是用默认行为的 点击页面说它会跳转页面 那么我们这样子阻止了之后

30:52.860 --> 30:56.220
你看一下 点击过后 还会跳转吗 它不会跳转了

30:56.860 --> 31:01.420
完全有介石来控制的 看没 它就不会跳转了 这是阻止浏览器的默认行为

31:02.380 --> 31:07.660
好 除了这个A元数之外 还有其他什么情况有默认行为了 看着啊 有个表达

31:09.020 --> 31:13.660
啊 有个表达啊 表达呢 比方说action啊 这表达的提交地址

31:14.220 --> 31:17.580
提到百度嘛 提到淘宝嘛 提到淘宝

31:18.300 --> 31:21.180
啊 然后呢 我们这里呢 写上一个

31:22.540 --> 31:24.140
文门框啊 文门框

31:24.780 --> 31:30.620
name account 账号嘛 啊 账号 行了 啊 行了 下面呢 主要是一个按钮

31:30.940 --> 31:36.060
button提交 好 保存看一下啊 点这个按钮的时候

31:37.020 --> 31:41.660
它也有默认行为 它是个提交按钮 在奉我们表单里面的提交按钮 点击过后你看

31:41.740 --> 31:45.260
就跳到淘宝里面去了 然后把我们的数据发送过去了 看到没

31:46.060 --> 31:51.020
把我们的这里写的数据发送到淘宝的浮浮器了 但是淘宝浮浮器不会甩我们啊 不会甩我们

31:51.740 --> 31:54.140
好看没 它就是一个默认行为 好吧

31:55.420 --> 32:00.780
好 然后呢 我们再看啊 那如何来阻止呢 我们就可以这样的方式啊 得到一个按钮 对吧 鼻涕

32:02.460 --> 32:06.940
所以说我们在GS里面写按钮了 你要么就写个普通按钮啊 普通按钮它就没有默认行为

32:07.180 --> 32:11.500
因为按钮我们之前说过啊 按钮默认是什么 type 为什么 杀本没词

32:11.980 --> 32:14.300
对吧 我在讲item and cc 说过

32:14.540 --> 32:19.180
那如果你把type 设为什么 button 一个普通按钮 它会不会提交了 它就不会提交了

32:19.900 --> 32:24.380
这个事情不会提交了 它就没有默认行为了 对吧 这里写上啊 写上button

32:25.340 --> 32:29.900
啊 获得按钮啊 按钮了我们这样子来写btn onclick

32:30.780 --> 32:36.780
onclick 就是动民的银和动民2都是一样的啊 一样的 那么阻止它的默认行为

32:37.340 --> 32:39.660
啊 阻止它的默认行为 1.prevent default

32:40.220 --> 32:43.020
好 看一下啊 阻止这个按钮的默认行为 保存

32:43.980 --> 32:46.140
点提交 你看一下 现在还会提交吗

32:46.940 --> 32:49.180
哎 我这里把改了啊 杀本没词

32:49.900 --> 32:53.020
好 现在还会提交吗 是不是不会提交了 对吧 它不会提交了

32:53.500 --> 32:55.660
这就是阻止默认行为 是不是很简单 对不对

32:56.780 --> 33:02.460
好 这里要说一下啊 在IE流量器IE8和IE8版本以下的流量器里边 它是不支持这个玩意的

33:02.620 --> 33:05.500
它有自己的一套 它自己的一套是啥呢 叫return mining

33:05.740 --> 33:08.300
啊 这是现在官方标准明确说了 不要用这个玩意

33:08.620 --> 33:10.300
啊 就尽量不要用这个玩意

33:10.780 --> 33:13.900
就是 这是非标准的做法啊

33:14.380 --> 33:17.580
以后呢 会将会就是 因为现在说要兼容一些流量器嘛

33:18.060 --> 33:20.940
以后呢 将会 随时可能会抛弃它

33:21.260 --> 33:22.540
所以说 尽量不要用这个玩意啊

33:22.940 --> 33:26.220
那么这是return value 就是IE流量器是怎么设置呢

33:26.220 --> 33:27.260
IE流量器是这样子写的

33:27.980 --> 33:28.620
IE

33:29.900 --> 33:30.300
Eater

33:30.620 --> 33:32.860
啊 就是return value

33:33.660 --> 33:35.900
啊 value 把它设为force 它是个属性

33:36.380 --> 33:39.500
它默认是q 表示返回的结果 返回的结果为force

33:39.500 --> 33:40.860
它就表示组织默认行为了

33:41.660 --> 33:42.540
明白的意思吧

33:42.700 --> 33:46.140
以后呢 你们组织默认行为了 尽量都使用这种标准的方式

33:46.940 --> 33:50.540
好 这个呢 我还是要说一下啊 关于DOM0的时候

33:50.940 --> 33:52.140
DOM0的时候

33:53.260 --> 33:55.420
它还有额外的方式在组织默认行为

33:55.740 --> 33:58.940
DOM0的额外方式

33:59.660 --> 34:02.060
DOM0的方式 这次讲的是DOM2啊

34:02.220 --> 34:03.420
DOM0的方式呢

34:03.900 --> 34:12.620
就是在事件处理程序中返回force

34:13.740 --> 34:16.540
注意哦 我这里说的是返回的是force

34:16.780 --> 34:20.460
返回的不是说判定为force 必须是布尔类型force

34:20.860 --> 34:22.140
必须是布尔类型force

34:22.620 --> 34:25.100
好 比方说啊 咱们还在这里面吧

34:25.420 --> 34:25.980
我们这样子写

34:26.700 --> 34:27.020
好

34:27.340 --> 34:29.260
DOM0啊 这个东西才是DOM0对吧

34:29.500 --> 34:30.540
这个玩意是不是DOM0

34:30.620 --> 34:33.980
是DOM2 里面你只能使用这种方式

34:34.220 --> 34:35.260
只能使用这种方式

34:35.500 --> 34:36.460
这才是DOM0

34:36.780 --> 34:39.020
DOM0那边你可以使用returnforce

34:39.820 --> 34:40.540
返回force

34:41.100 --> 34:41.660
看一下啊

34:42.060 --> 34:43.900
是不是仍然可以阻止 对吧 仍然可以阻止

34:44.460 --> 34:44.780
好

34:45.420 --> 34:46.620
如果你返回的是什么

34:46.940 --> 34:49.820
比方说不返回 不返回的话就返回的是nd犯对吧

34:49.980 --> 34:51.180
nd犯都阻止不了哦

34:51.420 --> 34:52.380
是阻止不了的 你看

34:52.780 --> 34:53.500
它能跳转的

34:53.900 --> 34:55.580
阻止不了的 必须要返回force

34:56.380 --> 34:57.340
好 这这种情况

34:57.580 --> 34:59.580
那有的时候呢 我们甚至可以在这里写

35:00.300 --> 35:02.940
有的时候我仅仅就是想让它阻止默认行为

35:02.940 --> 35:05.580
怎么办呢 我就直接在这里写unclick

35:06.060 --> 35:08.060
returnforce 对吧

35:08.380 --> 35:09.820
这里可不可以 可以啊

35:10.060 --> 35:11.660
这里本来就是一个函数的环境

35:12.140 --> 35:13.900
这个代码本身就在一个函数的环境中

35:14.380 --> 35:16.540
你可以想象成它自动给你写了一个处理函数

35:16.780 --> 35:18.220
然后你这里面就写函数里面代码

35:18.460 --> 35:19.420
你返回force就完事了

35:19.820 --> 35:20.380
保存看一下

35:21.020 --> 35:23.660
是不是还是提交不了啊 也可以啊 也可以

35:24.300 --> 35:24.940
明白这个意思吧

35:26.140 --> 35:28.380
好 这是关于这一块啊 细节我说一下

35:30.300 --> 35:31.820
好 这是多米林的方式啊

35:31.820 --> 35:32.860
我但是我建议大家了

35:32.860 --> 35:34.620
以后都是用标准的做法 做法

35:34.620 --> 35:35.740
用prevents default

35:37.020 --> 35:39.740
好 然后再说一个细节啊 就是A元数

35:40.700 --> 35:41.740
针对A元数

35:43.900 --> 35:47.020
可以设置为功能性链接

35:49.660 --> 35:51.740
解决 解决跳转问题

35:53.970 --> 35:56.290
这也是以前常见的做法啊

35:56.290 --> 35:57.730
包括现在很多公司里边

35:57.730 --> 35:59.250
你还可能看得到这样的代码

35:59.730 --> 36:01.570
就是什么意思呢 比方说这个A元数

36:01.810 --> 36:03.810
这个A元数我没有去组织摸准行为

36:03.810 --> 36:05.170
比方说我没有组织摸准行为

36:05.170 --> 36:06.370
它是不是会跳转 对吧

36:06.370 --> 36:07.170
它会跳转吗

36:07.570 --> 36:09.650
你看着啊 点击A元数它会跳转嘛 对吧

36:09.650 --> 36:12.290
虽然我们的介石事件运行了 它仍然会跳转

36:12.690 --> 36:14.210
好 我们可以这样子来处理

36:14.210 --> 36:15.810
就在A元数里边呢

36:15.970 --> 36:17.810
这个不是Ref这个属性吗 对吧

36:17.970 --> 36:20.610
属性我们之前在我那个atmoscc的课程中

36:20.610 --> 36:22.610
包括诚恶的课程里面都说到这个问题 对吧

36:23.010 --> 36:25.170
Ref这个属性里面是不是可以写这个javascript

36:25.170 --> 36:25.650
对吧

36:26.210 --> 36:29.090
叫做功能性链接 我不是一个正常的链接

36:29.090 --> 36:30.610
我是一个功能性链接

36:30.610 --> 36:32.850
javascript是冒号 后边写啥

36:32.850 --> 36:34.290
后边写的就是jastime

36:34.290 --> 36:35.810
你可以在这里去调用函数

36:35.810 --> 36:37.330
可以在这里做任何事情

36:37.330 --> 36:38.530
当然你可以啥都不做

36:38.930 --> 36:40.530
啥都不做 直接一个分号结束

36:41.410 --> 36:43.810
什么代码都没有 一个空的 空白的支付串

36:44.450 --> 36:45.330
好 看一下啊

36:45.650 --> 36:48.610
那点击过后 是不是它不会跳转了 对吧

36:49.330 --> 36:51.810
它根本就不是一个正常的超链接了 对吧

36:51.810 --> 36:52.690
它就不会跳转了

36:53.170 --> 36:53.890
你看这意思吧

36:54.850 --> 36:56.450
有的时候呢 你还可以看到

36:56.450 --> 36:57.650
就是这里各种写法

36:57.650 --> 36:58.290
各种写法

36:58.290 --> 37:00.130
那最简单就是直接这样子写 对吧

37:00.130 --> 37:01.650
但是有的时候呢 看个人习惯

37:02.130 --> 37:03.970
有的时候我们要读是一个A元数

37:03.970 --> 37:06.450
想用A元数 但是要同时要读是它跳转

37:06.450 --> 37:08.210
那么我们还可以写上什么

37:08.210 --> 37:08.770
voy的

37:09.810 --> 37:11.010
有的时候写上voy的什么

37:11.010 --> 37:11.810
voy等0

37:11.810 --> 37:12.610
voy等0

37:13.090 --> 37:13.730
啥意思呢

37:14.130 --> 37:14.850
它指的是

37:15.330 --> 37:16.450
voy的是不讲过的

37:16.450 --> 37:18.210
这是一个什么运算符

37:18.210 --> 37:19.730
它是把后边这个表达式

37:20.050 --> 37:21.570
后边可以写多个表达式

37:21.730 --> 37:23.890
挨在这儿算 算完了之后返回 安迪范

37:24.210 --> 37:25.410
它这个东西返回 安迪范

37:25.890 --> 37:29.010
就是看个人 这个代码没有任何意义

37:29.010 --> 37:29.890
没有任何意义

37:29.890 --> 37:30.850
就纯粹写一个

37:31.090 --> 37:32.290
纯粹写个代码在这儿

37:32.290 --> 37:33.170
没有任何意义

37:33.170 --> 37:34.690
你还可能会看得到这种写法

37:34.690 --> 37:36.770
把它当成函数的格式来使用 对吧

37:36.770 --> 37:37.650
都是讲过的

37:38.610 --> 37:40.050
就是个人习惯的问题

37:40.050 --> 37:41.250
其实你啥都不用写

37:41.250 --> 37:43.330
你就直接写一个分号结束就完事了

37:43.810 --> 37:44.930
空白表是就完事了

37:46.130 --> 37:49.170
这也是你们以后可能会监到了写法

37:49.170 --> 37:50.130
我都提供给你们

37:51.090 --> 37:53.970
然后这是阻止默认行为

37:53.970 --> 37:56.690
后边我们讲到一些东西的时候

37:56.690 --> 37:57.810
还会用到这个东西

37:58.210 --> 37:59.170
这东西很重要的

37:59.970 --> 38:00.530
下一个

38:02.130 --> 38:02.930
这个东西叫啥呢

38:02.930 --> 38:03.730
这是一个函数

38:03.970 --> 38:04.690
这是个方法

38:06.450 --> 38:09.410
它可以用于停止冒泡

38:10.130 --> 38:10.930
它做什么呢

38:10.930 --> 38:17.660
它做的是阻止事件冒泡

38:18.460 --> 38:21.180
就是你把你调用事件对象里边的

38:21.340 --> 38:22.700
这个函数这个方法

38:23.020 --> 38:23.740
它会怎么样呢

38:23.740 --> 38:26.780
它会让这个事件到此结束

38:26.780 --> 38:27.660
到此为止

38:27.660 --> 38:28.860
不要再往上冒了

38:28.860 --> 38:29.740
有这么个意思

38:30.460 --> 38:31.660
比方说咱们来看个例子

38:34.540 --> 38:37.900
我们给这个button来注册一个点击事件

38:37.900 --> 38:39.820
给这个button来注册一个点击事件

38:41.740 --> 38:43.180
然后我们通过这个事件参数

38:43.180 --> 38:46.540
e stop propagation

38:46.540 --> 38:47.980
propagation这单词比较长

38:48.460 --> 38:49.260
指的是

38:49.260 --> 38:51.580
这个单词的意思就是冒泡的意思

38:51.580 --> 38:54.380
阻止停止事件冒泡

38:54.380 --> 38:55.660
停止冒泡

38:56.700 --> 38:58.220
写了这么一个东西之后呢

38:58.220 --> 39:00.780
咱们再给这个foam元素注册一个事件

39:00.780 --> 39:02.060
给foam元素注册事件

39:03.340 --> 39:03.900
document

39:05.500 --> 39:05.900
foam

39:05.900 --> 39:08.220
前面我怎么把一个btn删了

39:09.340 --> 39:12.060
btn document query is negative

39:12.060 --> 39:13.340
button

39:13.340 --> 39:14.620
然后foam

39:15.500 --> 39:17.660
document query is negative

39:18.700 --> 39:19.180
foam

39:19.740 --> 39:20.540
好看着

39:21.820 --> 39:23.100
foam onclick

39:23.900 --> 39:25.260
当foam点击的时候

39:27.020 --> 39:28.860
输出foam

39:30.460 --> 39:31.980
看一下有没有输出这个foam

39:31.980 --> 39:32.460
看一下

39:34.140 --> 39:34.780
运行出来

39:37.420 --> 39:37.820
检查

39:38.860 --> 39:40.540
我们把这个按钮变成一个普通按钮

39:40.540 --> 39:42.060
把它变成一个普通按钮

39:42.540 --> 39:44.060
以后方便我们测试

39:44.060 --> 39:45.820
变成一个普通按钮就不要Return Force了

39:46.380 --> 39:46.940
好看一下

39:47.820 --> 39:48.460
点击过后

39:49.020 --> 39:49.660
有没有输出

39:49.660 --> 39:50.460
是不是没有输出

39:50.460 --> 39:50.780
对吧

39:50.780 --> 39:51.500
没有输出

39:51.500 --> 39:53.420
说明了这个事件被阻止了

39:53.420 --> 39:54.940
它目前事件跑到哪了

39:54.940 --> 39:56.460
跑到这个阶段就结束了

39:56.460 --> 39:57.900
到事件目标阶段就结束了

39:57.900 --> 40:00.220
因为我们在目标阶段阻止了冒泡

40:00.220 --> 40:02.140
那如果你不是在目标阶段阻止的

40:02.140 --> 40:03.580
你是在这个阶段阻止的呢

40:03.580 --> 40:04.140
也一样

40:04.140 --> 40:06.060
不要在这个div阻止的也一样

40:06.060 --> 40:07.420
那么它会冒泡到div

40:07.420 --> 40:08.460
但是div阻止了冒泡

40:08.460 --> 40:10.220
它就不会继续往上冒了

40:10.220 --> 40:11.020
是这么个意思

40:12.140 --> 40:12.620
咱们呢

40:13.180 --> 40:13.660
这里呢

40:14.060 --> 40:16.060
就有可能会出面试题

40:16.380 --> 40:17.420
如果你没有这句话的话

40:17.420 --> 40:18.060
那可能就

40:18.060 --> 40:20.220
那肯定是要出现这个forum的

40:21.660 --> 40:22.060
这里呢

40:22.060 --> 40:23.740
是会出现面试题的

40:23.740 --> 40:24.700
怎么出现面试题呢

40:24.700 --> 40:25.420
它这样子问你

40:26.300 --> 40:27.740
当然你只要理解原因过后

40:27.740 --> 40:28.860
就非常非常简单了

40:28.860 --> 40:29.660
这div1

40:30.780 --> 40:31.660
div2

40:32.700 --> 40:35.580
这div3

40:36.380 --> 40:37.260
这里面一个按钮

40:38.460 --> 40:38.860
点击

40:40.380 --> 40:41.500
它问你啥呢

40:41.500 --> 40:42.140
它问你

40:42.140 --> 40:43.180
我给这个按钮呢

40:43.180 --> 40:44.380
注册点击事件

40:45.100 --> 40:46.940
然后我给这个div2呢

40:46.940 --> 40:47.660
注册点击

40:48.380 --> 40:49.180
点击事件

40:49.740 --> 40:50.380
div2

40:51.820 --> 40:52.780
get the element

40:53.580 --> 40:54.220
by id

40:55.020 --> 40:55.740
div2

40:56.460 --> 40:57.100
然后呢

40:57.100 --> 40:58.700
前面还要获取到div1

40:58.700 --> 41:00.940
div1

41:01.580 --> 41:02.940
来看一下这道题吧

41:02.940 --> 41:04.620
这里还要获取到div3

41:06.140 --> 41:07.260
div3

41:07.260 --> 41:08.460
然后还要获取到按钮

41:09.020 --> 41:09.900
还要获取到按钮

41:11.180 --> 41:11.660
鼻田

41:12.220 --> 41:13.500
然后呢

41:13.500 --> 41:14.700
这里得到什么

41:14.700 --> 41:15.100
button

41:15.980 --> 41:16.540
button

41:16.540 --> 41:17.340
快为此这个头

41:19.680 --> 41:19.920
好

41:19.920 --> 41:20.320
接下来呢

41:20.320 --> 41:22.160
我们给这些东西全部注册事件

41:22.800 --> 41:24.960
div1的unclick

41:24.960 --> 41:26.080
这个事件

41:26.080 --> 41:26.960
复制

41:26.960 --> 41:28.880
复制为div2的unclick

41:28.880 --> 41:29.680
能不能这样子写

41:30.640 --> 41:31.440
能不能这样子写

41:33.280 --> 41:33.920
unclick

41:34.640 --> 41:35.680
复制为一个方形

41:36.800 --> 41:37.600
方形e

41:39.920 --> 41:40.400
这样吧

41:42.560 --> 41:43.120
div2

41:43.440 --> 41:44.320
把div2取掉

41:44.880 --> 41:45.680
只div1

41:45.680 --> 41:46.400
div3

41:46.400 --> 41:47.120
和btn

41:47.120 --> 41:47.680
是不是一样的

41:47.680 --> 41:47.920
对吧

41:48.720 --> 41:49.520
div1

41:49.520 --> 41:50.400
div3

41:51.040 --> 41:51.520
btn

41:51.520 --> 41:52.160
都是一样的

41:52.160 --> 41:52.480
对不对

41:52.480 --> 41:53.520
都是一样的

41:53.520 --> 41:54.080
好

41:54.080 --> 41:54.720
那咱们呢

41:54.720 --> 41:55.200
这里呢

41:55.200 --> 41:55.920
可不可以这样子写

41:55.920 --> 41:56.400
首先

41:56.400 --> 41:57.280
是不是可以这样子写

41:57.760 --> 41:58.400
表达式嘛

41:58.400 --> 41:58.640
对吧

41:58.640 --> 41:59.440
我们以前说过

41:59.440 --> 42:00.080
复制嘛

42:00.080 --> 42:00.400
对吧

42:00.400 --> 42:00.800
复制

42:00.800 --> 42:01.520
这个表达式的

42:01.520 --> 42:02.560
是什么

42:02.560 --> 42:03.520
就是这个复制的

42:03.520 --> 42:04.320
就是e

42:04.320 --> 42:05.840
又把e复制给它

42:05.840 --> 42:07.360
然后整个这个表达式呢

42:07.360 --> 42:08.720
整个表达式又是个复制

42:08.720 --> 42:09.360
表达式

42:09.360 --> 42:10.640
又把这个表达式的结果

42:10.640 --> 42:11.440
又复制给它

42:11.440 --> 42:12.000
对吧

42:12.080 --> 42:12.960
是可以这样子写的

42:13.840 --> 42:14.320
然后呢

42:14.320 --> 42:15.040
我们这里呢

42:15.600 --> 42:17.280
它这里还有这个东西

42:17.280 --> 42:18.240
还有一个致力因属性

42:19.600 --> 42:20.400
或者是这样子

42:22.240 --> 42:23.120
这用p元素

42:24.240 --> 42:24.800
p元素

42:26.240 --> 42:27.280
这用span元素

42:28.080 --> 42:28.720
随便嘛

42:28.720 --> 42:29.040
随便

42:30.080 --> 42:30.240
好

42:30.240 --> 42:31.360
我们这里输出啥呢

42:31.360 --> 42:32.720
输出它的名字

42:33.200 --> 42:33.600
输出它的

42:34.400 --> 42:35.040
元素名

42:35.760 --> 42:36.320
e点

42:36.320 --> 42:37.040
什么

42:37.040 --> 42:37.520
e点

42:38.160 --> 42:38.880
target

42:38.880 --> 42:39.440
而不来

42:40.000 --> 42:40.560
e点

42:40.560 --> 42:41.200
corrent

42:42.080 --> 42:42.720
target

42:43.200 --> 42:43.760
corrent

42:43.760 --> 42:44.320
target

42:44.320 --> 42:45.360
或者使用z

42:45.360 --> 42:46.320
z也可以

42:46.320 --> 42:46.880
z

42:47.760 --> 42:49.520
输出它的元素名字

42:50.160 --> 42:50.400
好

42:50.400 --> 42:51.360
那么这里肯定有冒泡

42:51.360 --> 42:51.680
对吧

42:51.680 --> 42:52.640
点击按钮的时候

42:52.640 --> 42:53.840
它会继续往上冒

42:53.840 --> 42:55.200
所以说这里都注册的时间

42:55.200 --> 42:56.080
那么我们来看一下

42:56.800 --> 42:57.920
这里都注册的时间

42:58.880 --> 42:59.680
就是到面词题

43:02.050 --> 43:03.330
点击过后你看是不是输出了

43:03.330 --> 43:04.130
button span

43:04.130 --> 43:04.930
div对吧

43:05.410 --> 43:06.130
button输出了

43:06.130 --> 43:06.770
span输出了

43:06.770 --> 43:07.650
div输出了

43:07.650 --> 43:08.690
这个还没注册时间

43:08.690 --> 43:09.890
还没有注册时间

43:09.890 --> 43:10.850
你看是不是都输出了

43:11.250 --> 43:12.290
好有冒泡

43:12.290 --> 43:12.850
那么现在呢

43:12.930 --> 43:14.050
我再给什么

43:14.050 --> 43:14.770
div2

43:14.770 --> 43:15.730
就是个评言书

43:15.730 --> 43:16.290
评言书

43:16.290 --> 43:18.850
这个名字没有命名的很好

43:18.850 --> 43:19.730
无所谓吧

43:19.730 --> 43:21.090
懂这个意思就行了

43:21.090 --> 43:21.970
给它注册时间

43:22.850 --> 43:25.090
然后它来阻止世界冒泡

43:25.090 --> 43:25.570
stop

43:26.770 --> 43:28.050
properation

43:31.180 --> 43:31.660
问题

43:32.460 --> 43:34.940
现在我们在点击按钮的时候输出啥

43:34.940 --> 43:35.260
来

43:35.260 --> 43:36.140
你告诉我输出啥

43:37.900 --> 43:39.820
点击按钮的时候会输出啥呢

43:40.940 --> 43:41.900
会输出啥呢

43:41.900 --> 43:44.060
我们在这一个阶段阻止了冒泡

43:44.060 --> 43:45.900
它不会继续往上冒了

43:45.900 --> 43:46.540
所以说呢

43:46.540 --> 43:48.380
但是这个地方是不是还会触发

43:48.380 --> 43:49.500
会输出button

43:49.500 --> 43:50.860
这个地方是不是还会触发

43:50.860 --> 43:53.180
输出span对不对

43:53.180 --> 43:54.620
输出button和span

43:54.620 --> 43:55.100
看没有

43:55.740 --> 43:56.860
到了这里

43:56.860 --> 43:57.900
到了P元素这里

43:58.460 --> 43:59.580
我们把P元素这里的

43:59.580 --> 44:00.540
它实际上会不会运行

44:00.540 --> 44:01.420
它会运行

44:01.420 --> 44:03.100
那么在这里的阻止冒泡

44:03.100 --> 44:05.340
就是它不会继续往上冒了

44:05.340 --> 44:07.180
那如果这里我还要输出P的话

44:08.140 --> 44:09.020
还要输出这个P

44:09.820 --> 44:10.140
那么

44:11.660 --> 44:12.780
这个时候它输出啥呢

44:12.860 --> 44:13.740
是不是button

44:13.740 --> 44:14.140
span

44:14.540 --> 44:15.260
P对吧

44:15.260 --> 44:16.380
它会运行事件

44:16.380 --> 44:17.020
只不过呢

44:17.020 --> 44:18.140
在事件里边

44:18.140 --> 44:20.140
它阻止的事件继续往上冒

44:20.780 --> 44:21.740
所以说现在点击

44:21.740 --> 44:22.060
你看

44:22.540 --> 44:23.100
没问题吧

44:23.980 --> 44:26.300
只要你理解它的就是规则过后了

44:26.300 --> 44:27.020
就很简单了

44:27.900 --> 44:29.660
这是阻止事件冒泡

44:31.180 --> 44:31.500
好

44:31.500 --> 44:32.060
然后呢

44:32.060 --> 44:32.540
最后一个

44:33.100 --> 44:34.380
这个东西也是很常用的

44:34.380 --> 44:35.340
这两东西都很常用

44:35.900 --> 44:35.980
好

44:35.980 --> 44:36.460
最后呢

44:36.460 --> 44:37.180
了解一下

44:37.180 --> 44:37.980
不太常用

44:37.980 --> 44:38.700
它是得到

44:39.900 --> 44:40.300
得到

44:41.100 --> 44:44.620
事件所处的阶段

44:44.620 --> 44:45.660
我们之前说过

44:45.660 --> 44:46.780
事件流的

44:46.780 --> 44:48.620
事件流里边不是有三个阶段吗

44:48.620 --> 44:49.340
事件补货

44:49.340 --> 44:50.060
事件冒泡

44:50.060 --> 44:50.300
对吧

44:50.300 --> 44:51.340
还有个事件目标

44:51.340 --> 44:52.380
有三个阶段

44:52.380 --> 44:53.420
那么它这个

44:53.420 --> 44:54.060
这个属性呢

44:54.060 --> 44:55.020
是能够获取到

44:55.660 --> 44:57.180
你目前注释这个事件

44:57.580 --> 44:58.780
它发生在什么阶段

44:59.500 --> 45:00.540
它是一个数字

45:00.540 --> 45:02.380
一表示补货阶段

45:02.380 --> 45:04.220
二表示事件目标

45:04.220 --> 45:04.460
三

45:05.260 --> 45:06.300
表示事件冒泡

45:07.420 --> 45:08.940
它一表示事件补货

45:09.900 --> 45:10.700
补货

45:10.700 --> 45:12.780
二表示事件目标

45:13.580 --> 45:14.060
三呢

45:14.060 --> 45:16.380
表示事件冒泡

45:16.380 --> 45:18.700
它可以得到处于哪个阶段

45:18.700 --> 45:19.660
比方说

45:19.660 --> 45:20.620
比方说咱们再来

45:21.580 --> 45:22.300
还是这个吧

45:22.300 --> 45:22.780
还是这个

45:24.460 --> 45:25.660
给这个DIV

45:27.500 --> 45:28.220
DIV

45:28.220 --> 45:29.260
把它换回来

45:29.260 --> 45:29.980
名字有点怪

45:30.540 --> 45:30.940
DIV

45:31.500 --> 45:32.060
把它换回来

45:33.020 --> 45:33.500
好

45:33.500 --> 45:35.420
然后这里得到这些东西对吧

45:35.420 --> 45:35.660
好

45:35.660 --> 45:36.140
接下来呢

45:36.140 --> 45:36.940
我们这样再处理

45:37.580 --> 45:39.660
我们只看这个DIV1嘛

45:39.660 --> 45:40.620
只看这个DIV1

45:41.180 --> 45:42.860
DIV2和DIV3就不看了

45:43.980 --> 45:45.260
只看这个DIV1和button

45:45.820 --> 45:45.980
好

45:45.980 --> 45:49.580
我们给DIV1注册addimension了

45:49.580 --> 45:50.540
注册事件

45:50.540 --> 45:51.260
click事件

45:51.980 --> 45:52.460
然后呢

45:52.460 --> 45:53.580
事件处理函数

45:53.580 --> 45:53.820
1

45:55.580 --> 45:55.740
好

45:55.740 --> 45:56.220
然后呢

45:56.220 --> 45:56.940
写上一个q

45:56.940 --> 45:58.860
表示在补货阶段运行的事件

45:58.860 --> 45:59.020
好

45:59.020 --> 46:00.380
我们这里输出啥呢

46:00.380 --> 46:00.780
输出

46:02.060 --> 46:02.620
1点

46:03.260 --> 46:04.940
event face

46:05.740 --> 46:06.460
face什么意思

46:06.460 --> 46:07.580
表示阶段

46:07.580 --> 46:08.060
阶段

46:08.780 --> 46:09.020
好

46:09.020 --> 46:09.580
然后再来

46:11.780 --> 46:11.860
好

46:11.860 --> 46:12.340
第二个呢

46:12.340 --> 46:14.180
我就不是在补货阶段运行的

46:14.180 --> 46:16.180
是在mallpall阶段运行

46:16.180 --> 46:17.460
这是event face

46:17.460 --> 46:19.220
然后再给btn注册事件

46:19.220 --> 46:19.700
btn

46:19.700 --> 46:21.540
我们这里直接用unclick吧

46:21.540 --> 46:22.980
前面为什么要用这个呢

46:22.980 --> 46:24.820
因为前面我要在补货阶段过去

46:24.820 --> 46:25.620
所以我用了这个

46:26.980 --> 46:27.060
好

46:27.060 --> 46:27.940
这里输出

46:29.540 --> 46:30.260
输出

46:30.260 --> 46:30.900
好

46:30.900 --> 46:31.780
它会输出啥呢

46:32.900 --> 46:33.700
先运行的是它

46:33.700 --> 46:34.020
对吧

46:34.020 --> 46:34.740
先运行的是它

46:34.740 --> 46:35.780
在补货阶段运行的

46:35.860 --> 46:36.980
会输出1

46:36.980 --> 46:38.260
再运行的目标阶段

46:38.260 --> 46:40.020
目标阶段输出2

46:40.020 --> 46:41.700
再运行这个冒泡阶段

46:41.700 --> 46:42.900
输出的是3

46:43.700 --> 46:44.900
所以说输出的是

46:46.340 --> 46:46.740
运行

46:49.420 --> 46:50.540
输出的是123

46:52.220 --> 46:52.780
这个很简单

46:53.660 --> 46:54.940
有可能将来会有一些用

46:55.580 --> 46:56.140
好了

46:56.140 --> 46:57.180
就讲完了

46:57.180 --> 47:00.300
事件对象的通用的成员就这么一些了

47:00.300 --> 47:01.260
重要的是哪些

47:01.260 --> 47:02.380
我说一下重要的

47:02.380 --> 47:03.500
target很重要

47:04.060 --> 47:05.740
current target很重要

47:05.740 --> 47:06.460
这个东西别它用

47:07.180 --> 47:08.460
prevent default

47:08.460 --> 47:10.060
主持默认行为很重要

47:10.060 --> 47:10.540
冒泡

47:10.540 --> 47:11.660
主持冒泡很重要

47:12.300 --> 47:13.500
后边这个

47:13.500 --> 47:14.220
这个呢

47:14.220 --> 47:15.580
和这个呢

47:15.580 --> 47:16.460
了解一下就行了

47:17.340 --> 47:18.060
然后是作业

47:19.340 --> 47:20.300
作业

47:20.300 --> 47:20.940
这里呢

47:20.940 --> 47:23.020
我把这个视频剪辑一下吧

47:23.020 --> 47:23.580
剪辑一下

47:23.580 --> 47:24.540
然后把作业放这

47:25.500 --> 47:27.020
我来说一下这个作业

47:27.020 --> 47:28.220
作业一共有四道题

47:28.220 --> 47:30.140
地道题是一个动态列表

47:30.140 --> 47:30.620
啥意思呢

47:30.620 --> 47:31.500
一看就明白了

47:32.140 --> 47:33.260
运行出来一看就明白了

47:34.220 --> 47:37.180
作业这个动态列表呢

47:37.180 --> 47:37.740
就是这里

47:37.740 --> 47:39.900
写些东西点添加

47:39.900 --> 47:41.340
加到列表向的末尾

47:41.340 --> 47:43.260
然后这里的点删除

47:43.260 --> 47:44.140
就可以删除

47:44.140 --> 47:46.140
之前咱们是分开说的

47:46.140 --> 47:46.460
对吧

47:46.460 --> 47:47.580
那么现在把它一起做

47:47.580 --> 47:49.180
就删除了添加一起做

47:49.180 --> 47:50.540
这里的点了添加过程了

47:50.540 --> 47:51.340
添加到末尾

47:51.340 --> 47:51.820
对吧

47:51.820 --> 47:52.700
添加到末尾

47:52.700 --> 47:53.980
然后末尾还是一个按钮

47:53.980 --> 47:55.180
每一项都有个按钮

47:55.180 --> 47:56.860
点了过程了也可以删除

47:56.860 --> 47:58.060
地道题

47:58.060 --> 47:59.260
央视丑了一点

47:59.260 --> 48:00.460
但是你可以把美画一下

48:01.420 --> 48:03.180
第二个是一个更换图片

48:05.100 --> 48:06.460
你不要去看我的代码

48:06.460 --> 48:07.820
我只是给你提供一些效果

48:08.620 --> 48:10.380
这个图片在这里面

48:10.380 --> 48:11.500
这个1米几里面

48:11.500 --> 48:12.780
不要去看这里面的代码

48:12.780 --> 48:13.580
不要去看

48:13.580 --> 48:14.780
我只是给你提供效果

48:15.580 --> 48:17.260
这里一共有四张图片

48:17.260 --> 48:19.500
你点了过会换到其中某一张

48:19.500 --> 48:20.860
但是我这里有个要求

48:21.340 --> 48:23.340
就是你是不清楚

48:23.340 --> 48:25.180
它到底有几张图片的

48:25.180 --> 48:26.700
就是你最好是这样子

48:27.580 --> 48:28.620
有四张图片对吧

48:28.780 --> 48:30.220
你把这个四个图片录进了

48:30.220 --> 48:31.260
放到一个数组里边

48:31.900 --> 48:33.820
将来如果要做第五张图片

48:33.820 --> 48:35.740
你只需要改数组就完事了

48:35.740 --> 48:36.460
就比方说

48:38.140 --> 48:39.260
有这么一个数组

48:39.260 --> 48:41.100
这个数组里边是个字不算数组

48:41.100 --> 48:41.980
每一项是个字不算

48:43.340 --> 48:45.180
这数组里边存了一些图片录进

48:45.180 --> 48:45.500
对吧

48:45.500 --> 48:46.460
一点阶批计

48:46.460 --> 48:47.180
就比方说

48:47.660 --> 48:48.540
2点阶批计

48:49.020 --> 48:50.140
比方说数组这个样子

48:50.540 --> 48:51.900
数组是这个样子的时候

48:51.900 --> 48:52.860
它就两张图片

48:52.860 --> 48:53.500
两个按钮

48:53.980 --> 48:54.620
你看这个是吧

48:55.820 --> 48:56.700
也就是说这些按钮

48:56.700 --> 48:58.060
是要用GS来生成的

48:58.700 --> 49:01.020
如果是

49:01.020 --> 49:02.060
这数组有两项的话

49:02.060 --> 49:02.780
就两个按钮

49:03.260 --> 49:03.820
你看这个是吧

49:04.540 --> 49:06.540
那如果我以后要改成五张图片

49:06.540 --> 49:08.220
我只需要去改数组就行了

49:08.220 --> 49:09.820
不需要去动任何其他地方

49:09.820 --> 49:10.780
只要把数组一改

49:10.780 --> 49:11.580
全部跟着改了

49:12.620 --> 49:13.420
这是我的要求

49:14.300 --> 49:15.500
你不用去看这个代码

49:15.500 --> 49:16.860
你把它完成就行了

49:17.580 --> 49:18.860
也不要去想什么

49:18.860 --> 49:19.900
也不要去想

49:19.900 --> 49:21.100
我这几颗学到哪些东西

49:21.100 --> 49:22.700
是不是一定要把这几颗的东西用起来

49:22.700 --> 49:23.740
不要去想这些问题

49:23.740 --> 49:24.700
你把它完成

49:24.700 --> 49:26.380
按照我的要求完成就行了

49:26.380 --> 49:27.900
然后你再来听我的讲解

49:28.620 --> 49:29.820
看我是怎么去思考的

49:30.860 --> 49:32.140
因为它做法有很多

49:32.140 --> 49:33.020
有非常非常多

49:33.500 --> 49:33.980
下一道题

49:35.260 --> 49:37.500
下一道题是下面这个布局

49:37.500 --> 49:38.380
不用去布局

49:38.380 --> 49:39.340
因为下面是图片

49:39.340 --> 49:40.300
这有四个图片

49:41.180 --> 49:41.660
四个图片

49:42.540 --> 49:43.980
好这里点击可以切换

49:43.980 --> 49:44.300
看呗

49:44.860 --> 49:46.140
点击是可以切换的

49:46.140 --> 49:47.340
把这个完成

49:47.340 --> 49:47.820
图片

49:47.820 --> 49:49.260
你能用的就是只有图片

49:49.260 --> 49:50.460
不要去复制我的页面

49:50.460 --> 49:51.100
没有意义的

49:51.980 --> 49:53.020
没有意义的

49:53.740 --> 49:54.940
也不要去看它里边的代码

49:58.110 --> 49:59.470
这代码实际上不是我写的

49:59.550 --> 50:00.030
不是我写的

50:00.030 --> 50:01.070
我只是给你提供效果

50:01.390 --> 50:02.910
我到时候会重新自己写一遍

50:03.710 --> 50:04.910
好这手风琴效果

50:05.310 --> 50:07.150
手风琴效果是一个非常常见的效果

50:07.150 --> 50:08.270
虽然做的比较丑一点

50:08.590 --> 50:10.270
虽然丑是丑了一点

50:10.590 --> 50:13.070
但是可以看手风琴

50:13.630 --> 50:14.350
这里有要求

50:14.830 --> 50:15.630
要求是啥呢

50:16.350 --> 50:17.150
这里的菜单

50:18.590 --> 50:25.230
菜单是通过解释对象生成的

50:26.350 --> 50:27.870
菜单是从我对解释对象生成的

50:27.950 --> 50:29.630
比方说我们写个解释对象

50:29.630 --> 50:32.190
menu里边比方提供了菜单

50:33.070 --> 50:33.710
第一个菜单

50:34.590 --> 50:37.230
就是首先item

50:37.550 --> 50:39.470
比方说我们写出这么一个结构

50:40.350 --> 50:41.630
一个item表示一个菜单项

50:41.630 --> 50:41.950
对吧

50:41.950 --> 50:42.590
一个菜单项

50:42.590 --> 50:44.350
比方说item里边有哪些属性了

50:44.910 --> 50:46.350
一个item里边有什么name

50:46.590 --> 50:47.470
菜单的名称

50:47.470 --> 50:47.950
对吧

50:47.950 --> 50:49.310
名称是什么

50:49.310 --> 50:50.030
菜单1

50:50.590 --> 50:51.150
对不对

50:51.150 --> 50:51.870
菜单1

50:52.430 --> 50:54.990
然后有什么charging

50:54.990 --> 50:55.790
就指菜单

50:56.190 --> 50:57.150
指菜单有哪些呢

50:57.230 --> 50:57.870
是一个数组

50:57.870 --> 50:58.430
对不对

50:58.430 --> 51:00.910
就是你要把这些菜单做成一个解释对象

51:01.550 --> 51:03.070
数组里边有哪些呢

51:03.390 --> 51:05.390
每个数组里边是一个对象

51:05.390 --> 51:07.390
name菜单2

51:07.790 --> 51:09.790
菜单3品1

51:09.790 --> 51:10.750
3品1

51:10.750 --> 51:11.390
懂得意思吧

51:12.350 --> 51:12.990
3品1

51:13.470 --> 51:14.430
就没有指菜单了

51:14.430 --> 51:14.910
dou号

51:15.470 --> 51:16.110
然后呢

51:16.110 --> 51:16.670
这个name

51:18.190 --> 51:20.830
叫做3品2

51:21.550 --> 51:22.270
你要这意思吗

51:23.230 --> 51:24.510
要写出这么一种结构

51:24.990 --> 51:26.350
要写出这么一种结构

51:26.510 --> 51:27.470
或者说整个菜单呢

51:27.470 --> 51:28.350
我们这样子说吧

51:29.070 --> 51:29.790
我来这里写吧

51:30.030 --> 51:30.750
我来这里写

51:31.230 --> 51:31.950
首封令效果呢

51:31.950 --> 51:32.590
比方说

51:33.470 --> 51:35.470
你参考这样的对象结构来做

51:35.470 --> 51:37.070
也就这里面全是动态生成的

51:37.070 --> 51:38.030
你不要看这个代码

51:38.030 --> 51:38.750
不要去看这个

51:39.150 --> 51:40.350
全是动态生成的

51:41.150 --> 51:42.670
是根据对象动态生成的

51:42.670 --> 51:43.550
比方说menu

51:45.470 --> 51:46.910
你要看着这个来

51:46.910 --> 51:48.270
menu直接来数组吧

51:48.270 --> 51:49.070
直接来数组

51:49.470 --> 51:49.630
好

51:49.630 --> 51:51.390
数组里面每一个菜单的就是个对象

51:51.390 --> 51:53.070
第一个菜单它的name是

51:53.550 --> 51:54.350
菜单1

51:54.750 --> 51:55.390
菜单1

51:55.630 --> 51:56.670
它的敲准呢

51:57.070 --> 51:57.710
敲准

51:57.710 --> 51:58.830
又是一个数组

51:58.830 --> 51:59.950
又是一个数组

51:59.950 --> 52:01.790
这个数组里面那么就直接支付出来吧

52:01.790 --> 52:03.070
3品1

52:04.830 --> 52:05.390
3品

52:08.110 --> 52:08.590
复制

52:08.590 --> 52:09.310
复制一下

52:10.590 --> 52:11.310
3品1

52:11.310 --> 52:11.950
3品2

52:11.950 --> 52:12.590
3品3

52:12.590 --> 52:13.230
3品4

52:14.030 --> 52:14.270
2

52:15.950 --> 52:16.270
3

52:17.150 --> 52:18.590
这样子结构要简单一点

52:18.830 --> 52:19.630
将近一点难度

52:20.830 --> 52:20.990
好

52:20.990 --> 52:21.950
这是第一个菜单看

52:22.430 --> 52:23.630
第一个菜单就是一个对象

52:23.630 --> 52:23.950
看没

52:24.350 --> 52:24.590
好

52:24.670 --> 52:25.390
第二个菜单

52:26.350 --> 52:27.310
也是个对象

52:27.310 --> 52:27.950
菜单2

52:29.950 --> 52:30.510
菜单2

52:31.550 --> 52:32.430
然后菜单3

52:33.310 --> 52:34.270
是这么个意思

52:34.670 --> 52:35.470
是这么个意思

52:37.470 --> 52:38.190
你要做的就是

52:38.830 --> 52:40.190
页面上啥都没有

52:40.190 --> 52:41.630
我只是给你看效果而已

52:41.630 --> 52:42.670
啥都没有页面啥

52:43.150 --> 52:45.950
你根据这个东西来生成页面上所有东西

52:45.950 --> 52:47.230
并且完成事件

52:48.270 --> 52:49.710
而且要达到一个要求就是

52:49.710 --> 52:51.550
我今后只要一改这个数组

52:51.550 --> 52:52.110
只要一改

52:52.510 --> 52:53.630
那么全部跟着改了

52:54.830 --> 52:55.550
便于配置

52:56.190 --> 52:56.910
懂我意思吧

52:57.390 --> 52:59.230
一切都是根据这个数组来生成出来的

52:59.950 --> 53:00.750
好下去完成

53:00.750 --> 53:02.030
咱们下节课来讲这个作业

