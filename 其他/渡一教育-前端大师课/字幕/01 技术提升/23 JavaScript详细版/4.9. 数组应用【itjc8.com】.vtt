WEBVTT

00:00.000 --> 00:15.710
这节课呢 咱们来讲一讲 关于这个宿主的应用

00:16.190 --> 00:21.870
讲完之后呢 我们来做一些作业啊 留了一些作业 作业呢一东西有八道题啊

00:22.270 --> 00:26.590
其实这一课讲的东西呢 没有什么新东西啊 没有什么新东西 主要是呢

00:27.310 --> 00:30.750
呃 给大家开个头 房子呢 大家没有失路啊

00:31.390 --> 00:36.910
呃 首先呢 我说一下这个宿主 关于宿主的一种面试体啊 他有可能会出这么一种面试体

00:37.870 --> 00:43.490
看一下啊 呃 这宿主里边呢 比方说啊 有这么一个宿主

00:44.130 --> 00:48.050
ar1 然后呢 随便给他写一些数字啊 随便给他写一些数字

00:48.770 --> 00:55.170
好 然后宿主里边呢 我们可以这样子啊 把这个宿主呢 给他复制为ar2

00:55.810 --> 00:57.090
给他复制为ar2

00:58.290 --> 01:03.810
好 复制过后呢 我们改变ar2的值 改变成什么呢 改变成为啊

01:04.770 --> 01:05.970
ar2的

01:06.690 --> 01:08.770
第一项啊 第一项 给他改成5

01:09.250 --> 01:15.010
然后呢 输出什么呢 输出ar1的第一项 然后输出ar2的第一项

01:16.210 --> 01:20.930
他可能会问你这个会输出什么结果啊 会可能会出这么一种面试体

01:22.530 --> 01:23.010
面试体

01:23.890 --> 01:28.450
其他考察的是什么呢 考察的是你对宿主本质的理解

01:29.410 --> 01:33.970
嗯 宿主呢 我们之前说过 宿主的本质是啥 宿主的本质

01:34.610 --> 01:39.250
是一个对象 对象是什么呢 对象是引用类型

01:40.130 --> 01:44.930
引用类型 于是呢 对象里面存的是什么呢 存的是地址

01:44.930 --> 01:50.210
这个ar1里面存的是地址 他指向这个宿主啊 宿主本来就是对象 对吧

01:50.690 --> 01:52.530
他里面有些属性 我们都看过的

01:53.250 --> 01:56.610
这里面存的是地址啊 ar1中

01:57.970 --> 02:05.090
ar1中存放的是地址 存放的是地址 然后呢 ar2里面呢

02:05.490 --> 02:12.130
你把ar1负责给ar2 把e负责给2 那么2里面是不是存放的也是地址啊

02:13.330 --> 02:15.730
宿主里面存放的都是地址啊 他是对象

02:16.530 --> 02:22.690
存放的是地址 所以说呢 ar1呢和ar2 他们都是地址 他指向同一块内存空间

02:23.490 --> 02:30.610
啊 指向同一块内存 这个内存里面啊 属性0等于3 属性1等于5 属性2等于7啊 这么一个对象

02:31.410 --> 02:35.810
所以说呢 当我们去改变啊 ar2的属性0的时候

02:36.370 --> 02:41.570
改变ar1是不是也跟着变了 对吧 因为他们指向同一个对象啊 指向的是同一个对象

02:42.050 --> 02:47.170
所以说呢 这一块呢 输出结果是什么了 输出结果就是两个5 就是两个5 看一下吧

02:50.370 --> 02:59.330
输出结果两个5 没问题吧 好 这是这道面试题啊 大家注意一下 宿主里边 他存放的是地址啊 存放的是地址

03:00.290 --> 03:02.610
好 然后呢 我们来看一下啊 另外一个

03:03.890 --> 03:06.530
哎 哎 这里顺便说一下啊 顺便说一下

03:07.250 --> 03:14.370
他如果面试题问你啊 问你如何复制一个输主啊 如何复制一个输主

03:15.570 --> 03:23.250
复制 有的时候呢 把它叫做克农啊 克农 克农是什么意思呢 克农指的是产生一个全新的对象

03:23.730 --> 03:31.570
克农指的是产生一个全新的对象啊 对象里边的东西呢 跟他一样 跟之前的对象一样 这叫克农

03:32.370 --> 03:39.730
他不再是之前的对象了 好 那么如何复制克农呢 要AR1 比方说啊 一个输主就还是个输主吧

03:41.490 --> 03:51.330
这么一个输主 然后呢 我要把它克农到AR2 你这样子复制行不行 这样子复制不叫克农啊 还是同一个对象 他们还是同一个对象 他不叫克农

03:52.050 --> 04:05.090
那么怎么来克农呢 我们可以利用slice函数啊slice函数 那么这里边呢 我们就可以啥都不写啊 可以啥都不写 或者是写个0也行啊 什么都不写就什么都不写吧

04:06.130 --> 04:13.650
就什么意思呢 因为这个函数我们之前讲过对吧 讲过的他是把原来的输主呢 把原来的输主怎么样了

04:14.290 --> 04:18.690
结取一段产生一个新的输主返回

04:19.890 --> 04:24.530
所以说这个函数呢 它会返回一个新的对象啊 会返回一个新的对象

04:25.090 --> 04:32.210
因此我们通过这个这个函数呢 就可以利用这个函数啊 把原来的输主呢复制一份新的输主

04:33.090 --> 04:40.610
传给这个辩量AR2 这里边是可以不写东西的啊 不写东西就对整个输主进行简洁啊 对整个输主进行

04:41.330 --> 04:48.290
就是给它减一节 我们之前说过减一节的吧 比方1 3什么意思呢 从下标1开始

04:49.090 --> 04:55.170
减到下标3 对吧 减到下标312 那么他取不到下标3啊 就是12 就这一部分

04:55.810 --> 04:59.810
如果不写第二个产数呢 就是从1这个位置呢 减到末尾 对吧 减到末尾

05:00.690 --> 05:06.290
好 如果你写0的话 是什么 就是把从0这个位置减到末尾 是不是克隆啊 对吧 产生一个新的输主

05:07.090 --> 05:16.610
也可以不写啊 不写的话 就是整个输主啊 把整个输主产生一个新的输主传给AR2 那么AR1和AR2呢 他们就不再是同一个输主了啊 就不再是了

05:17.170 --> 05:22.050
这个函数呢 并且啊 并且呢 这个函数它不会改变原输主的 对原输主没有任何影响

05:22.770 --> 05:28.610
好 所以说呢 这样子一来了 我们来输出啊 看一下AR1是不是等于AR2呢

05:29.330 --> 05:33.570
我们知道对象之间的比较比较的是什么了 比较的是地址 对吧 看一下是不是相等呢

05:34.530 --> 05:43.490
f12 force 你看 不相等了 不相等了 那前边的呢 前边的我们来看一下啊 前边的呢 我们再输出

05:46.130 --> 05:48.130
再输出AR1是不是等于AR2

05:49.250 --> 05:55.730
保存看一下前边的 前面的就是去 对吧 前面的就是去 表示的是两个地址是一样的 是同一个东西

05:56.210 --> 06:02.290
而下面的就不同的东西了 所以说 这样子一来呢 我们改变AR2的时候呢 他就不会影响到AR1

06:03.250 --> 06:07.330
比方说感成5 那么他不会影响到AR1 我们把这个复制过来

06:09.790 --> 06:15.150
好 看一下啊 看一下啊 你看他不会影响到第一个 不会影响到第一个数组

06:16.510 --> 06:20.030
好 这是关于这个啊 这个问题 好下一个啊 下一个

06:20.670 --> 06:27.710
下一个呢 主要是今天的作业里边东西有点多啊 东西有点多 所以说我给大家起个头啊 不然的话大家可能下不了手

06:28.670 --> 06:32.990
比方说 做个例子吧 做个例子 有一个数组啊 对数组求和

06:33.630 --> 06:39.150
对数组求和 求和的问题呢 我们之前是做过的 对吧 那么现在呢 是把数字呢放到数组里边了

06:39.390 --> 06:44.910
是把数字放到数组里边了 比方说一个数组 随便写些数字啊 随便写些数字

06:46.670 --> 06:52.350
好 那么对这个数组呢 求和啊 进行求和 好 求和的话我们可以这样子来写

06:52.590 --> 06:56.910
啊 i等于0 这样这样这样这样这样

06:58.590 --> 07:09.710
第一个变量上 对吧 我们之前做过的啊 来记录和 记录累计累计的结果 好 然后循环数组啊 这个循环啊 你可以用 for in 循环也可以用 for for 循环啊 都行

07:11.070 --> 07:11.790
都练一下吧

07:13.390 --> 07:14.990
好 循环这个数组

07:15.710 --> 07:25.710
循环过后呢 一次拿出数组的每一项啊 一次拿出数的每一项 把数组的这一项而不是i了啊 以前我们是把i加进去 现在不是i了 还是下标

07:26.110 --> 07:31.310
我们要加的不是下标 是这个数组的其中一项 我们可以利用这个这个表达式

07:32.430 --> 07:38.510
取出数组的这个属性 也叫取出这个下标的值 把数的这一项取出来 然后呢 给他加到

07:38.990 --> 07:44.110
这个上里边啊 这样子就求和了啊 数出啊 上

07:45.150 --> 07:46.670
看一下啊 这是数组求和

07:47.630 --> 07:50.750
对数组里边的每一项进行求和啊 172

07:52.270 --> 08:00.750
好了啊 这是关于啊 就是这个数组求和啊 数组求和 想到这的话 我想到一道 想到一道面试题啊

08:01.390 --> 08:07.870
想到一道面试题 好 然后呢 我们这里啊 这里 我们该加一 加一道题啊 加一道题

08:08.590 --> 08:14.500
就在这加吧 第八题 下面是第九题 加一道题啊

08:16.020 --> 08:20.100
这道题呢 是这样说的 他说有一个数组啊 有一个数组

08:21.380 --> 08:25.860
数组里边呢 存放了一些数字 存放了一些数字

08:26.740 --> 08:31.540
现在让你找出 找出出线频率

08:32.340 --> 08:37.940
最高的数字 找出出线频率最高的数字 要找出这么个东西

08:38.900 --> 08:43.860
好 这道题啊 这道题很有难度啊 很有难度 我把放到最后道题吧 把做最后道题

08:48.220 --> 08:51.020
以后到时候你好好想一想啊 好想想怎么去做

08:52.220 --> 08:55.980
好 然后我们再回到这来啊 这对数组求和啊 对数组求和

08:56.700 --> 09:01.100
呃 然后呢 我再介绍一个东西啊 再介绍的东西呢 是关于二维数组

09:01.820 --> 09:02.780
啊 二维数组

09:05.420 --> 09:09.260
呃 二维数组是什么意思呢 二维数组它其实也是一个

09:10.220 --> 09:15.180
很普通的数组啊 一个很普通的数组 它指的是数组中啊 数组中

09:15.900 --> 09:16.940
的每一项

09:17.900 --> 09:25.180
是一个数组啊 它指的是这么个意思 因为数组里边可以存放任何东西啊 咱们数组里边 我们之前说过啊

09:25.180 --> 09:29.260
它不是说只能存数字啊 只是我们这里做的练习里边呢 很多都是数字

09:29.500 --> 09:31.900
但它不是只能存数字 它能不能存字无串里边

09:32.460 --> 09:35.260
能不能存字无串 可以能不能存一个对象

09:35.820 --> 09:38.460
可以啊 这里可以存一个对象

09:38.940 --> 09:45.420
好 那对象里面可以丢任何东西 对吧 对象里面还可以一个数组啊 它可以存任何东西啊 可以存任何东西

09:46.220 --> 09:49.820
好 然后呢 这里边既然能存对象 那能不能再存一个数组了

09:50.380 --> 09:55.260
能不能再存一个数组了 可以没有任何问题 好 那么这个怎么理解

09:55.660 --> 10:00.220
这是一个数组 这个数组第一项是字无串 第二项是字无串 第三项是一个数组

10:01.020 --> 10:05.420
啊 就这么理解 它里面可以存任何东西啊 那么二维数组是什么呢

10:05.740 --> 10:10.380
二维数组指的是数组的每一项呢 又是一个数组 就比方说啊 比方说这样子

10:12.740 --> 10:17.140
第一个 这是数组的第一项 这是数组的第二项 这是数组的第三项

10:18.980 --> 10:24.020
随便写啊 随便写好 格式画一下啊 那你看 这就是一个二维数组

10:24.260 --> 10:30.580
你看这个数组 整个是一个数组 数组有几项呢 有三项 第一项 第二项 第三项

10:31.540 --> 10:36.420
对吧 有三项 好 那么这就是一个二维数组啊 这就是个二维数组

10:36.820 --> 10:39.780
好 那么比方说啊 比方说我们现在要做一些操作啊

10:40.580 --> 10:48.660
输出二维数组的每一项啊 每一项啊 有的时候呢 我们也可以认为这个二维数组呢 是三乘一三的二维数组

10:49.380 --> 10:56.660
这是一个三乘一三的二维数组 三乘一三的二维数组 什么意思呢

10:56.980 --> 11:04.980
就是指这个数组呢 有三项啊 有三项啊 你可以认为是行对吧 第一行 第二行 第三行啊 第三行

11:05.380 --> 11:09.380
你可以认识行啊 这是数组的三行 对吧 其实就是三项啊

11:10.340 --> 11:18.260
每一项里边呢 又是个数组 每一个数组呢 它又是三项啊 又是三个元数 那么这就是三乘一三的二维数组啊 三乘三的二维数组

11:18.900 --> 11:26.180
好吧 好 这是啊 输出数组 二维数组的每一项啊 输出二维数组的每一项 那怎么输出呢

11:26.820 --> 11:36.260
怎么输出呢 我们可以用循环啊 循环 循环 i 等于0 i小于什么 ar- i++啊

11:37.380 --> 11:45.460
这些东西都写了啊 这些代码啊 多写 好 得到数组的每一项啊 比方说sub ar

11:46.020 --> 11:49.300
定个辩量 得到数组的这一项 好 大家看一下啊

11:50.100 --> 11:51.540
数组的第1项

11:52.340 --> 11:57.620
它是不是还是个数组 比方说i等于0 等于0那时候是不是取出这个玩意儿 这个玩意儿是不是还是数组

11:57.860 --> 12:01.780
i等于1取出这个玩意儿 是不是还是数组 i等于2取出这个玩意儿还是数组

12:02.500 --> 12:04.420
所以说这个东西呢 它还是一个数组

12:04.900 --> 12:08.180
所以说我们要输出这个数组怎么输出呢 我们是不是又要循环它

12:08.580 --> 12:12.580
对吧 又要循环它啊 就用j啊 换一个辩量名

12:13.540 --> 12:18.420
j-sub ar-nance

12:18.420 --> 12:22.740
这个sub表示什么意思呢 表示指的意思啊 指数组

12:23.860 --> 12:27.300
好 这样子呢 我们就循环这个数组啊 现在我们就循环这个数组

12:27.620 --> 12:30.740
循环这个数组 去输出它数组的每一项 好 我们输出

12:31.300 --> 12:34.420
输出sub ar-j

12:36.100 --> 12:39.620
同样的方式啊 你可以不看外面的循环 不看外面的循环

12:39.620 --> 12:42.180
我们要输出什么 我们要输出的数组是这个

12:43.300 --> 12:47.700
输出 这个数组的每一项 那你输出就完事了 对吧 输出就完事了 好 看一下啊

12:50.240 --> 12:52.320
没有什么特别的啊 真的没有什么特别的

12:53.440 --> 12:59.090
关闭其他的标签页啊 这里没输出对吧 没输出

13:00.210 --> 13:02.690
保存啊 保存看一下 怎么会没有输出

13:04.210 --> 13:06.370
好 没有输出 我们来调一下啊 到底是怎么回事

13:07.170 --> 13:10.210
首先呢 这里我写了一个循环啊 循环

13:10.770 --> 13:15.730
然后这里我们在这啊 在这在这打印一个东西 看一下有没有打印出来

13:16.210 --> 13:22.130
有没有打印 保存看一下 没有打印 对吧 没有打印 说明这个代码没有运行啊

13:22.130 --> 13:25.890
这个代码没有运行 然后呢 我们到上面看一下这个循环里边有没有打印

13:26.450 --> 13:28.130
随便打印一个东西啊 看他有没有出来

13:30.210 --> 13:34.050
保存啊 好 也没有打印 是没有刷新吗

13:34.930 --> 13:38.130
啊 也没有任何打印啊 那么我们把写到这外面了

13:38.690 --> 13:43.090
不要告诉我这外面都没有打印啊 保存 好 这外面打印了 说明啥呢

13:43.490 --> 13:45.970
说明了这个循环他没有进

13:46.850 --> 13:52.050
他没有进这个循环啊 没有进这个循环 好 我咱们来看一下啊 他为什么没有进这个循环

13:52.050 --> 13:58.610
那我们就输出啥 输出这个 ARDialins ARDialins 我发现了啊 发现问题了

13:59.650 --> 14:04.210
三 没问题 这个认识的曲子没问题 是这里我写错了啊 单词写错了

14:05.250 --> 14:07.330
这里目前的是 Undefend 对吧 Undefend

14:08.690 --> 14:12.050
好 再来看啊 保存 你看是不是打印出来了

14:12.850 --> 14:15.730
就把数组的每一项就打印出来了 用这种方式

14:16.530 --> 14:19.650
啊 当然了你也可以用这种方式啊 也可以用这种方式 就是

14:20.210 --> 14:26.530
不写这个辩量啊 不写这个辩量 那么我们得到了数组是什么呢 我要便利的数组啊 要便利的是这个数组

14:26.770 --> 14:29.730
好 你把这个数组扔过来就完事了 对吧 扔过来就完事了

14:30.290 --> 14:34.370
啊 不要看这个代码就看晕了啊 是什么意思 取这个对象的这个属性

14:34.610 --> 14:38.370
好 这个属性取出来了又是个对象 又取这个对象的这个属性

14:38.850 --> 14:39.570
就这么个意思

14:41.730 --> 14:49.090
又写完了啊 就输出数组的每一项 那如果换一下啊 稍微变换一下 对二维数组求和了 是不是一样的对吧

14:50.690 --> 14:51.890
对二维数组求和

14:52.850 --> 14:53.490
复制一下吧

14:54.610 --> 15:02.480
这一块把注射掉 好 对对对对什么呢 对二维数组啊 二维数组

15:03.840 --> 15:05.520
二维数组求和

15:06.480 --> 15:12.800
好 是不是一样的 定一个变量上 然后呢 下面便利整个二维数组啊 便利整个二维数组

15:12.800 --> 15:17.520
当然三维数组四维数组是不一样的 三维数组是什么意思啊 三维数组是二维数组里边

15:17.520 --> 15:22.720
它还是一个数组啊 让这种遇到的就比较少了啊 我们最多的话就遇到二维数组

15:22.880 --> 15:29.040
其实一样的啊 都是一样的 好 那么这里呢求和就不是输出了啊 就是上加上什么了

15:29.360 --> 15:31.760
数组的di项啊 di项它

15:32.640 --> 15:36.800
数组的di项是一个数组 对吧 那么这个数组里边再取借这一项

15:37.200 --> 15:40.640
就是把数组的每一项一式拿到 最后呢 我们输出这个求和的结果

15:42.560 --> 15:43.680
好 保存啊 保存

15:45.200 --> 15:50.560
好 你看一下 没问题吧 就是二维数组求和 二维数组求和

15:51.200 --> 15:56.320
然后上一节课呢 上一节课其实还有点的东西 就是数组里边的一些

15:56.400 --> 16:00.880
操作啊 我还没有讲到啊 没有讲到 这里再补充一下啊 稍微的补充一下

16:03.550 --> 16:05.710
好 这里说一下啊 关于这个操作

16:08.080 --> 16:14.560
呃 第一个啊 第一个是关于将数组啊 将数组的每一项

16:15.680 --> 16:22.480
进行制服串拼接啊 这什么意思呢 什么意思呢 比方说啊 有个数组 有个数组

16:24.080 --> 16:29.120
就随便写吧啊 随便写个数组 我要输出什么结果呢 我要在控制台里边输出

16:29.280 --> 16:37.360
输出啥 输出这个玩意 对吧 要输出这个玩意 好 那么要输出他的话啊 要输出他的话 怎么来输出呢

16:38.080 --> 16:43.040
好 我们可以这样子写写循环 对吧 我们可以用循环来 循环来输出

16:44.240 --> 16:48.160
i 小于ar 点ns 啊 哎家家

16:49.440 --> 16:54.000
啊 只关于第一个啊 呃 输出这个数组啊 输出这个数组的每一项

16:54.560 --> 16:57.360
然后呢 输出的时候我们怎么输出呢 我们就直接输出

16:59.440 --> 17:08.320
我直接拼接制服串对吧 因为每次输出就换行了 我们希望的是不要换行啊 不要换行 所以说我们拼接一下制服串啊 制服串拼接啊 拼接制服串

17:08.720 --> 17:14.400
好 每一次呢 我拼接一个制服串 拼接啥呢 就把这个数组这一项拼接进来啊 拼接进来

17:15.360 --> 17:18.080
好 最后呢 我们输出这个制服串 看一下啊 看一下

17:19.520 --> 17:24.880
保存 能看懂吧 把数组的每一项拿出来 然后拼接到这个制服串里边

17:25.360 --> 17:27.760
好 最后输出这个制服串啊 因为他只能输出一行

17:28.720 --> 17:37.200
啊 你看 是不是把每一项拿出来输出了 拼接起来了 好 中间要加个兜号 那么怎么来拼接兜号呢 是不是再拼接一个 对吧 再拼接一个兜号

17:37.680 --> 17:41.440
再拼接个兜号啊 拼接完数组每一项过后再拼接个兜号

17:42.080 --> 17:44.560
保存 看一下啊 你看 是不是拼接了

17:45.200 --> 17:48.960
但是有个问题是啥呢 有个问题是后边这个兜号 你怎么去掉了

17:49.520 --> 17:55.120
后边这个兜号怎么去掉啊 你可以判断一下 如果是最后一个了 你就不要再拼接兜号了

17:55.200 --> 18:02.080
如果不是最后一个拼接兜号 所以说我们这里判断一下啊 判断什么呢 如何来判断他是不是最后一个呢

18:03.040 --> 18:07.440
就判断这个i 就判断这个i下标 下标小于

18:09.040 --> 18:16.400
最大下标 那是-1是不是最大下标 对吧 这是最大下标 他不是最大下标 就是不是最后一个

18:16.640 --> 18:18.640
不是最后一个的时候呢 我们再拼接兜号

18:19.280 --> 18:22.400
啊 有这样子写 保存 你看是被拼接出来了

18:23.200 --> 18:29.600
但是这样子写呢 哎呀 比较麻烦 他比较麻烦 你要写个循环 还要一个字幕上语拼接 比较麻烦

18:30.000 --> 18:37.760
我们希望的最简单的方式是什么呢 最简单的方式是利用书主的一个函数啊 他一个成员 就是书主里边一个

18:38.240 --> 18:42.240
函数叫join 这里边写上什么呢 分割符

18:42.720 --> 18:43.200
分割符

18:44.880 --> 18:45.680
join 分割符

18:46.720 --> 18:52.320
好 那么这个分割 我们来写一下啊 这个分割符的作用就是把书主的每一项分割开

18:52.480 --> 18:58.560
然后拼成一个字幕串 他就能实现类似的这个效果啊 你可以把它想象成想象成为等同的效果

18:58.960 --> 19:02.400
好 定一个辩量 str 数组 arjoin

19:03.440 --> 19:05.600
把这个数组的每一项拿出来啊

19:06.240 --> 19:13.200
每一项拿出来 然后呢 用都有号进行分割来拼接一个字幕串 说这个函数返回的是什么呢 该函数啊该函数

19:14.440 --> 19:19.120
返回一个字幕串啊 返回一个字幕串 你看 我们一句话就写完了

19:19.840 --> 19:22.000
好 看一下啊 你看 效果是一样的 对吧

19:22.400 --> 19:23.680
一样的啊 这就是

19:25.600 --> 19:27.440
这就是那个把数组

19:28.640 --> 19:35.360
进行连接 数的每一项用一个字 字幕串进行连接 但是个字幕串可以试任何东西啊 可以试任何东西 比方说顿号

19:36.240 --> 19:38.880
顿号 保存 你看一下 它变成了顿号了

19:39.600 --> 19:46.560
啊 比方说一个分号啊 它就变成了分号了 就你详细什么什么啊 无所谓的 如果你啥都不写的话 那个字幕串就是

19:47.040 --> 19:50.800
中间就没有任何分割啊 这个每一项里面就没有任何分割

19:51.360 --> 19:57.120
啊 很简单啊 非常非常简单啊 这是关于这个桌影啊 桌影啊 所以它这个函数啊

19:58.320 --> 20:03.700
然后还有一个点要补充的事啊 还有一个点要补充 就是关于这个

20:04.740 --> 20:05.060
啊

20:06.820 --> 20:08.020
一个数组啊 一个数组

20:08.980 --> 20:10.500
三 随便啊

20:11.140 --> 20:16.660
然后呢 现在呢 我希望 有可能会希望在它的末尾啊 在这个数组的末尾

20:17.220 --> 20:20.340
再去拼接一个数组啊 再去拼接一个数组

20:20.820 --> 20:23.060
AR2啊 AR2 比方说

20:24.180 --> 20:26.260
ABC 一个字幕串数组 BCD

20:27.060 --> 20:33.700
好 我希望把这个数组的东西呢 拼接到这个数组里边啊 拼接到这个数组里边 那怎么办呢

20:34.020 --> 20:36.020
好 数组里边有这么一个东西

20:38.500 --> 20:40.020
数组啊 第二

20:40.580 --> 20:44.260
concrete啊 concrete 表示连接啊 连接

20:44.740 --> 20:48.020
然后连接这里边的传了一个另外一个数组啊

20:48.500 --> 20:51.860
应该说这样说啊 数组一啊 数组二

20:52.260 --> 20:52.820
数组二

20:53.460 --> 20:54.340
什么意思呢

20:54.980 --> 20:57.940
那么这个表达是啊 该表达是作用是

20:58.580 --> 21:00.020
将数组二

21:00.900 --> 21:03.460
拼接到数组一

21:05.060 --> 21:09.700
的末尾啊 把数组二的那的元素啊 的所有元素

21:10.820 --> 21:12.420
拼接到数组一的末尾

21:12.980 --> 21:16.020
然后呢 产生一个新数组

21:16.580 --> 21:18.740
返回啊 他返回的是一个新数组

21:19.300 --> 21:21.540
呃 该函数啊 就是该表达是

21:22.340 --> 21:24.260
不会对元素组

21:25.140 --> 21:27.540
造成任何影响啊

21:27.780 --> 21:29.780
它不会对原来的东西造成任何影响

21:29.780 --> 21:31.220
就元素组呢 它不会变化

21:31.220 --> 21:32.580
它会产生一个新的数组

21:32.900 --> 21:35.860
好 ar1 concrete ar2

21:37.460 --> 21:39.780
好 这样子以来 ar1变不变

21:39.780 --> 21:42.100
它不变 ar2它也不变

21:42.100 --> 21:43.540
它会产生一个新数组

21:43.540 --> 21:45.460
你需要接收啊 你需要接收

21:45.860 --> 21:47.540
6而对啊 需要接收

21:47.940 --> 21:49.700
好 我们来输出这个新的数组

21:50.420 --> 21:52.420
就连接之后的新数组

21:52.420 --> 21:53.940
咱们来看一下啊 运行

21:55.940 --> 21:57.860
好 看一下 刷新

21:58.740 --> 22:00.500
你看新数组后边是不是得到了

22:00.500 --> 22:01.780
两个数的东西了

22:01.780 --> 22:02.660
第一个数组

22:02.660 --> 22:04.420
然后再你拼接上第二个数组

22:04.420 --> 22:05.780
你看 它就变成六箱了

22:06.820 --> 22:08.740
好 当然了 如果你希望

22:10.100 --> 22:11.780
要改变这个 ar1

22:11.780 --> 22:14.260
把 ar1变成拼接到这两个

22:14.260 --> 22:15.060
那还不简单吗

22:15.060 --> 22:17.140
你把这个 ar1重新复制就完成了呗

22:17.540 --> 22:18.900
你重新复制就完成了

22:19.940 --> 22:20.980
这个很简单

22:20.980 --> 22:23.540
这个表达是它本身不会改变 ar1的

22:23.540 --> 22:25.460
但是你可以把产生的新数组

22:25.460 --> 22:27.060
重新复制给 ar1

22:27.860 --> 22:28.820
保存看一下

22:29.700 --> 22:30.900
是不是一样的 对吧

22:30.900 --> 22:31.300
一样的

22:31.940 --> 22:34.580
这是关于康凯茨

22:35.780 --> 22:36.660
其他都没啥了

22:36.660 --> 22:37.300
其他没啥了

22:37.300 --> 22:38.180
这要一颗了

22:38.180 --> 22:39.300
主要是给大家起个头

22:39.300 --> 22:40.020
起个头

22:40.020 --> 22:41.460
然后你做作业的时候

22:41.460 --> 22:42.740
要有那么一点点失路

22:43.220 --> 22:44.500
好了 那就是作业了呗

22:44.500 --> 22:45.620
一共九道题

22:45.620 --> 22:46.740
一共就九道题

22:48.180 --> 22:49.220
下去把它完成

22:49.300 --> 22:50.180
把它完成

22:50.180 --> 22:52.100
好吧 我下节课来讲这题

