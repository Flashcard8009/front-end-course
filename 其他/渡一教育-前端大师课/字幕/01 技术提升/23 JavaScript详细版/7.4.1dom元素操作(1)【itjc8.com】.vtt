WEBVTT

00:00.000 --> 00:15.420
这节课的内容会比较多

00:15.420 --> 00:19.220
比较多 我可能会把它分成两节课来讲

00:19.220 --> 00:24.620
就是章节上我会用一个一节课的章节

00:24.620 --> 00:27.420
但是我视频可能会分成两节

00:27.420 --> 00:28.820
因为它东西比较多

00:28.820 --> 00:32.220
这节课也是本章最核心的内容

00:32.220 --> 00:33.220
就多么核心

00:33.220 --> 00:36.620
这个章节里边最核心的内容也就是这节课

00:37.220 --> 00:38.820
这节课我们讲什么呢

00:38.820 --> 00:41.220
就是我们拿去到了多么对象之后

00:41.220 --> 00:45.020
特别是我们拿到了一个元素之后

00:45.020 --> 00:48.520
我们可以对这个元素做哪些操作

00:48.520 --> 00:51.220
我们主要是学习这么一块东西

00:51.220 --> 00:53.220
这里边我们学习了之后

00:53.220 --> 00:55.620
本节课会有大量的作业

00:55.620 --> 00:56.920
供大家练习

00:56.920 --> 00:59.920
练习这些作业不仅能够做出丰富的效果

00:59.920 --> 01:02.220
而且还可以通过这些练习

01:02.220 --> 01:05.320
熟悉咱们这一个这节课的API

01:05.320 --> 01:06.120
时间比较长

01:06.120 --> 01:08.220
大家有点耐心

01:08.220 --> 01:08.520
好

01:08.520 --> 01:09.420
咱们一个个看

01:09.420 --> 01:11.520
首先第一部分

01:11.520 --> 01:14.820
初始元素事件

01:14.820 --> 01:16.620
实际上元素的事件

01:16.620 --> 01:18.920
我是打算专门哪一个章节来讲

01:18.920 --> 01:22.420
第八章我们就专门来讲元素的事件

01:22.420 --> 01:24.620
但是这里为什么还是要提一下

01:24.620 --> 01:25.520
因为不提的话

01:25.520 --> 01:27.120
我们就做不出来效果

01:27.120 --> 01:30.120
所以说我们还是要大概的讲一下元素的事件

01:30.120 --> 01:32.420
什么叫做事件呢

01:32.520 --> 01:34.120
指的是发生一件事

01:34.120 --> 01:35.420
发生一件事

01:35.420 --> 01:38.320
这件事往往是

01:38.320 --> 01:39.720
由拥护发生的

01:39.720 --> 01:41.320
比方说拥护做了一个操作

01:41.320 --> 01:43.320
拥护把鼠标移动到某个位置

01:43.320 --> 01:45.220
或者是拥护点击了一下

01:45.220 --> 01:47.520
或者是拥护的敲了一下键盘

01:47.520 --> 01:49.420
这都是发生了一件事

01:49.420 --> 01:50.520
发生了一件事

01:50.520 --> 01:52.920
就是某个元素

01:52.920 --> 01:54.020
什么叫元素事件

01:54.020 --> 01:57.620
就是某个元素发生了一件事

01:57.620 --> 01:59.320
那么这里事很多

01:59.320 --> 02:00.520
有非常非常多的事

02:00.520 --> 02:02.820
那么这里就是咱们这些课

02:02.820 --> 02:04.720
由于它不是专门来学习事件

02:04.720 --> 02:06.620
我们下一张它专门来讲事件

02:06.620 --> 02:09.220
所以说这一个我们先大概的认识一下

02:09.220 --> 02:10.820
我们这里就认识一件事

02:10.820 --> 02:13.820
就是被点击

02:13.820 --> 02:14.920
就是个元素

02:14.920 --> 02:16.420
它被点击了

02:16.420 --> 02:17.820
被点击

02:17.820 --> 02:18.720
被点击这个事

02:18.720 --> 02:20.920
我们把它叫做click

02:20.920 --> 02:22.320
click就是点击的意思

02:22.320 --> 02:24.020
你点击在一下鼠标左键

02:24.020 --> 02:26.620
点了一下就是被点击

02:26.620 --> 02:27.920
它只有鼠标左键

02:27.920 --> 02:29.720
只是鼠标左键

02:29.720 --> 02:30.220
好吧

02:30.220 --> 02:31.920
这是关于元素发生一件事

02:31.920 --> 02:33.320
叫做事件

02:33.320 --> 02:33.920
好

02:33.920 --> 02:34.620
那么事件里边

02:34.620 --> 02:38.420
还有一个东西叫做事件注册

02:38.420 --> 02:40.620
或者叫做注册事件

02:40.620 --> 02:42.720
注册事件

02:42.720 --> 02:44.820
也叫做

02:44.820 --> 02:45.720
你跟他这样说

02:45.720 --> 02:48.520
叫做事件处理程序

02:48.520 --> 02:49.920
事件处理程序

02:49.920 --> 02:50.720
什么意思呢

02:50.720 --> 02:54.920
指的是发生了一件事过后

02:54.920 --> 02:58.720
发生了一件事过后

02:58.720 --> 03:02.520
应该做什么事情

03:02.520 --> 03:04.020
这就是事件处理程序

03:04.020 --> 03:05.420
它是一个函数

03:05.420 --> 03:07.920
它是一个函数

03:07.920 --> 03:09.220
它表示

03:09.220 --> 03:10.720
有一件事情发生了之后

03:10.720 --> 03:12.620
我应该去做什么事情

03:12.620 --> 03:15.020
这叫事件处理程序

03:15.020 --> 03:16.220
比方说

03:16.220 --> 03:17.620
这里click是事件

03:17.620 --> 03:18.020
对吧

03:18.020 --> 03:19.120
被点击了

03:19.120 --> 03:21.420
被点击是事件

03:21.420 --> 03:23.120
被点击之后做什么事

03:23.120 --> 03:24.920
去运行什么函数

03:24.920 --> 03:26.920
这叫做事件处理程序

03:26.920 --> 03:28.820
这是这两个数语

03:28.820 --> 03:31.520
然后还有一个数语叫做注册事件

03:31.520 --> 03:33.920
什么叫注册事件呢

03:33.920 --> 03:41.220
就是将事件处理程序

03:41.220 --> 03:47.020
就是与某个事件关联

03:47.020 --> 03:49.120
这叫做注册事件

03:49.120 --> 03:50.520
什么叫注册事件

03:50.520 --> 03:51.920
比方说我有一个函数

03:51.920 --> 03:53.820
这个函数是事件处理程序

03:53.820 --> 03:55.920
但是函数可能很多事件都会运行

03:55.920 --> 03:56.420
对吧

03:56.520 --> 03:57.620
比方说

03:57.620 --> 03:58.720
鼠标移动的时候

03:58.720 --> 04:00.020
它会运行这个事件

04:00.020 --> 04:01.520
运行函数

04:01.520 --> 04:03.320
或者说鼠标点击的时候

04:03.320 --> 04:04.720
会运行这个函数

04:04.720 --> 04:07.220
这叫做事件处理程序

04:07.220 --> 04:09.520
什么鼠标点击和鼠标移动

04:09.520 --> 04:11.020
这些是事件

04:11.020 --> 04:12.320
什么叫注册事件呢

04:12.320 --> 04:14.820
指的是把这个函数

04:14.820 --> 04:17.220
跟某一个事件关联起来

04:17.220 --> 04:18.620
就叫做注册事件

04:18.620 --> 04:19.920
咱们直接说代码

04:19.920 --> 04:20.520
说代码的话

04:20.520 --> 04:21.920
更加容易理解

04:21.920 --> 04:25.410
比方说

04:25.410 --> 04:26.810
这里有个页面

04:26.910 --> 04:28.410
这是上面有个按钮

04:28.410 --> 04:29.710
有个按钮

04:29.710 --> 04:31.210
给它个ID

04:31.210 --> 04:32.610
Btn

04:32.610 --> 04:34.510
里边写个点击

04:34.510 --> 04:36.210
点我

04:36.210 --> 04:38.810
接下来我们来看一下

04:38.810 --> 04:40.910
接下来我们需要注册事件

04:40.910 --> 04:42.010
什么叫注册事件

04:42.010 --> 04:44.810
就是找到这个按钮

04:44.810 --> 04:46.210
它里边不是有很多事件吗

04:46.210 --> 04:46.910
鼠标移动

04:46.910 --> 04:49.910
鼠标点击都是事件

04:49.910 --> 04:51.910
点击之后做什么事情

04:51.910 --> 04:53.910
我把它安装到某一个事件上面

04:53.910 --> 04:55.710
看一下我们怎么写

04:55.810 --> 04:56.710
解释了半天

04:56.710 --> 04:58.210
我们还不如把代码写一遍

04:58.210 --> 04:58.710
CurvesLect

04:58.710 --> 05:00.110
或者是GetElement

05:00.110 --> 05:01.610
by ID

05:01.610 --> 05:02.910
Btn

05:02.910 --> 05:04.610
得到这个按钮

05:04.610 --> 05:07.110
按钮它里边有一个属相

05:07.110 --> 05:07.810
有一个属相

05:07.810 --> 05:10.410
这是动物节点

05:10.410 --> 05:12.210
远处的动物节点里边

05:12.210 --> 05:13.610
它有很多的属相

05:13.610 --> 05:14.810
其中有一些属相

05:14.810 --> 05:16.110
其中有一些属相

05:16.110 --> 05:17.910
是跟事件相关的

05:17.910 --> 05:19.610
跟事件相关的属相

05:19.610 --> 05:21.510
它有一个特点

05:21.510 --> 05:23.910
是以on开头

05:23.910 --> 05:24.710
on是什么

05:24.710 --> 05:26.810
当什么什么发生的时候

05:26.810 --> 05:28.610
当什么什么发生的时候

05:28.610 --> 05:29.710
你看这里

05:29.710 --> 05:31.310
是不是有很多很多的事件

05:31.310 --> 05:32.110
所以说我们到时候会

05:32.110 --> 05:34.310
专门用一个章节来讲解事件

05:34.310 --> 05:36.110
专门来讲解

05:36.110 --> 05:38.410
这里有个click

05:38.410 --> 05:39.410
这什么事件

05:39.410 --> 05:42.810
这个事件表示的是点击

05:42.810 --> 05:43.910
它是个属相

05:43.910 --> 05:45.310
它就是一个普普通通的属相

05:45.310 --> 05:47.110
不要它把它想象得太复杂

05:47.110 --> 05:49.010
它就是一个普通的属相

05:49.010 --> 05:50.510
只不过这个属相

05:50.510 --> 05:51.810
它要复直

05:51.810 --> 05:52.710
复直的话

05:52.710 --> 05:55.710
复直的是一个函数

05:55.710 --> 05:58.310
那把它一个函数给一个东西复直

05:58.310 --> 05:59.810
是不是可以写匿名函数

05:59.810 --> 06:00.210
对吧

06:00.210 --> 06:01.310
叫做函数表达式

06:01.310 --> 06:02.310
对不对

06:02.310 --> 06:04.210
把一个函数复直给它

06:04.210 --> 06:05.610
这个东西就叫做事件

06:05.610 --> 06:08.010
叫做注册事件

06:08.010 --> 06:10.010
你看再看一下注册事件的概念

06:10.010 --> 06:11.410
将事件处理程序

06:11.410 --> 06:12.510
哪个是事件处理程序

06:12.510 --> 06:13.610
这个玩意儿对吧

06:13.610 --> 06:16.910
发生某件稍后要做什么事件处理程序

06:16.910 --> 06:19.410
与某个事件关联

06:19.410 --> 06:21.410
你看与某个事件

06:21.510 --> 06:23.810
click事件进行关联

06:23.810 --> 06:24.610
完了

06:24.610 --> 06:25.610
这就是注册事件

06:25.610 --> 06:26.610
就这么简单

06:26.610 --> 06:28.710
比如说咱们输出console log

06:28.710 --> 06:30.210
随便输出

06:30.210 --> 06:32.410
输出123

06:32.410 --> 06:33.810
或者这样子

06:33.810 --> 06:35.210
我前面定一个变量

06:35.210 --> 06:37.410
code0

06:37.410 --> 06:39.210
code0

06:39.210 --> 06:40.310
定一个变量

06:40.310 --> 06:42.610
然后每次输出这个变量的值

06:42.610 --> 06:43.610
输出它的值

06:43.610 --> 06:46.110
然后再把它加加加1

06:46.110 --> 06:48.410
或者是我们直接输出code加加

06:48.410 --> 06:50.410
也行

06:50.410 --> 06:51.510
没问题吧

06:51.510 --> 06:56.560
好 咱们看一下

06:56.560 --> 06:58.460
好 看一下

06:58.460 --> 06:59.960
刷新 点击

06:59.960 --> 07:01.760
你看是不是你再点击1

07:01.760 --> 07:03.060
点击 点击 点击 点击

07:03.060 --> 07:04.060
看没

07:04.060 --> 07:04.960
就这么简单

07:04.960 --> 07:05.860
就这么简单

07:05.860 --> 07:07.960
这个函数它不是立即执行的

07:07.960 --> 07:11.060
它要等到某件事情发生之后才会执行

07:11.060 --> 07:12.260
什么事情呢

07:12.260 --> 07:13.760
click

07:13.760 --> 07:16.560
等到这个事情发生之后才会执行

07:16.560 --> 07:17.960
这些都是一些特殊的属性

07:17.960 --> 07:19.360
你跟它复制过后

07:19.360 --> 07:21.260
浏览器知道怎么来处理

07:21.260 --> 07:23.660
它知道去监听这些事件

07:23.660 --> 07:25.160
就等到这个事 什么要监听

07:25.160 --> 07:26.960
就好像一个观察者一直看

07:26.960 --> 07:29.360
有没有点过呀 有没有点过呀 有没有点过

07:29.360 --> 07:31.060
好 你点了它 它马上就发现了

07:31.060 --> 07:32.660
马上就去运行这个函数

07:32.660 --> 07:33.660
是这么回事

07:33.660 --> 07:35.360
所以说函数不是立即执行的

07:35.360 --> 07:36.560
它是要等到

07:36.560 --> 07:37.260
等到什么时候呢

07:37.260 --> 07:38.960
等到发生某件事的时候执行

07:38.960 --> 07:41.360
这个函数我们也不需要自己去调用

07:41.360 --> 07:43.560
不需要自己去调用这些函数

07:43.560 --> 07:44.560
它会自动

07:44.560 --> 07:45.460
当发生这件事的时候

07:45.460 --> 07:46.560
它会自动执行

07:46.560 --> 07:48.060
自动进行执行

07:48.060 --> 07:49.060
这就是时间

07:49.060 --> 07:50.060
就这么简单

07:50.060 --> 07:51.560
其他没啥了

07:51.560 --> 07:53.560
好吧

07:53.660 --> 07:55.860
这是关于事件这一块

07:55.860 --> 07:57.060
简单的说一下

07:57.060 --> 07:58.660
我们后边会详细想

07:58.660 --> 08:00.660
好 接下来看下面

08:00.660 --> 08:03.160
下面是浙节课的核心内容了

08:03.160 --> 08:04.260
第一部分

08:04.260 --> 08:08.260
获取和设置元素的属性

08:08.260 --> 08:10.760
好 这里我们首先要搞清楚

08:10.760 --> 08:13.860
元素的属性分为两大类

08:13.860 --> 08:18.860
第一类是可实别属性

08:18.860 --> 08:21.560
另一类叫做自定义属性

08:21.560 --> 08:23.460
我们分成两部分来讲

08:23.460 --> 08:25.760
好 什么叫做可实别属性呢

08:25.760 --> 08:30.360
就是正常的atm属性

08:30.360 --> 08:32.360
比方说 举个例子

08:32.360 --> 08:34.560
看一下这里

08:34.560 --> 08:37.540
属性

08:37.540 --> 08:39.740
我们比方说有个input元素

08:39.740 --> 08:41.540
它的value是不是正常的属性

08:41.540 --> 08:42.840
对吧 是正常的属性吧

08:42.840 --> 08:44.340
对不对 没问题吧

08:44.340 --> 08:44.940
好

08:44.940 --> 08:46.640
然后有个div元素

08:46.640 --> 08:47.840
div它

08:47.840 --> 08:49.440
这个value它是不是正常属性

08:49.440 --> 08:51.040
是不是不是正常属性呢

08:51.040 --> 08:52.840
div上面哪有这个属性呢

08:52.840 --> 08:54.040
这个属性没有任何意义

08:54.040 --> 08:55.440
对吧 没有任何意义

08:55.440 --> 08:57.440
好 这叫做可实别属性

08:57.440 --> 08:59.440
这叫做正常

08:59.440 --> 09:01.440
这叫做可实别属性

09:01.440 --> 09:02.440
正常的属性

09:02.440 --> 09:03.340
这个也是 对吧

09:03.340 --> 09:03.940
也是

09:03.940 --> 09:05.840
那么这个属性它就不是正常的了

09:05.840 --> 09:07.940
它没有这个东西

09:07.940 --> 09:09.240
这叫做自定义属性

09:09.240 --> 09:10.940
就是它没有的你该写上了

09:10.940 --> 09:13.540
它叫做自定义属性

09:13.540 --> 09:15.440
好 我们分成两部分来讲

09:15.440 --> 09:17.940
首先是可实别属性

09:17.940 --> 09:21.640
可实别属性如何来获取和设置呢

09:21.640 --> 09:22.740
当然我们上一课讲了

09:22.740 --> 09:23.840
什么 h 比如说对吧

09:23.840 --> 09:25.640
可以可以没问题用那个

09:25.640 --> 09:26.840
但是我们一般不用那个

09:26.840 --> 09:27.940
所以说就不扯了

09:27.940 --> 09:29.740
我们就是说一下常见的

09:29.740 --> 09:32.240
第一种方式是注意常见的

09:32.240 --> 09:36.340
直接是元素多么对象

09:36.340 --> 09:39.040
第二属性名完了

09:39.040 --> 09:39.940
没了

09:39.940 --> 09:41.740
你看一下 看着

09:41.740 --> 09:44.840
我们这里属性 script

09:44.840 --> 09:46.340
比方说下面一个按钮

09:46.340 --> 09:48.040
下面一个按钮

09:48.040 --> 09:51.540
给它的 ID

09:51.540 --> 09:55.140
ptn get txt

09:55.140 --> 09:57.540
获取文本框内容

09:57.540 --> 09:59.540
获取文本框内容

09:59.540 --> 10:01.640
那咱们给这个按钮注册试验

10:01.640 --> 10:03.540
这里我们使用 document

10:03.540 --> 10:05.740
get element by ID

10:05.740 --> 10:08.440
得到这个 get txt

10:08.440 --> 10:09.540
得到这个按钮

10:09.540 --> 10:11.240
点击按钮的时候干嘛呢

10:11.240 --> 10:15.440
点击按钮的时候获取文本框的文本

10:15.440 --> 10:18.840
把这个文本框的 value 只获取到

10:18.840 --> 10:19.940
就做这么一件事

10:19.940 --> 10:21.040
非常简单

10:21.040 --> 10:23.340
得到这个按钮

10:23.340 --> 10:25.840
当然你可以不用变量

10:25.840 --> 10:26.840
因为用了变量之后

10:26.840 --> 10:28.440
你还是要这样子写

10:28.440 --> 10:29.340
unclick

10:29.340 --> 10:31.340
当它点击的时候干嘛

10:31.340 --> 10:32.640
对吧 我们之前说过

10:32.640 --> 10:34.240
你完全可以不这样子写

10:34.240 --> 10:35.840
能不能把这个表达式放过来

10:35.840 --> 10:36.840
看一下

10:36.840 --> 10:37.940
能不能把这个表达式放过来

10:37.940 --> 10:39.640
当然可以 有什么区别呢

10:39.640 --> 10:40.440
有啥区别吗

10:40.440 --> 10:42.240
没啥区别对吧

10:42.240 --> 10:43.940
点击这个按钮的时候干嘛呢

10:43.940 --> 10:45.640
注意是点击按钮

10:45.640 --> 10:48.040
点击按钮的时候干嘛呢

10:48.040 --> 10:50.640
我要获取文本框的值

10:50.640 --> 10:53.640
获取文本框的值

10:53.640 --> 10:54.640
怎么来获取呢

10:54.640 --> 10:56.040
文本框的值是不是就是 value

10:56.040 --> 10:57.640
对吧 就是 value

10:57.640 --> 11:00.240
那么我们这里得到文本框

11:00.240 --> 11:02.040
input

11:02.040 --> 11:03.640
documents

11:03.640 --> 11:05.640
query selector

11:05.640 --> 11:08.640
用 css 选择器来选中这个文本框

11:08.640 --> 11:10.040
不要说我们精确选中吧

11:10.040 --> 11:10.940
选中文本框

11:10.940 --> 11:13.540
然后的数向 type 等于啥

11:13.540 --> 11:15.240
等于 text 对吧

11:15.240 --> 11:16.740
这是不是 css 的选择器

11:16.740 --> 11:17.840
没问题吧

11:17.840 --> 11:19.540
总之你把选中就完成了

11:19.640 --> 11:21.140
你得到这个多母元素

11:21.140 --> 11:22.740
然后我们直接输出啥

11:22.740 --> 11:25.940
输出这个多母元素的 value 数向

11:25.940 --> 11:27.040
你看

11:27.040 --> 11:28.340
直接来就是了

11:28.340 --> 11:29.640
直接来就是了

11:29.640 --> 11:31.240
这就是可识别的数向

11:31.240 --> 11:32.340
只要你可识别的数向

11:32.340 --> 11:33.440
你就可以直接来

11:33.440 --> 11:34.540
直接用就行了

11:34.540 --> 11:35.840
保存咱们看一下

11:35.840 --> 11:39.120
运行

11:39.120 --> 11:40.420
看着

11:41.420 --> 11:42.920
这里刷新

11:45.920 --> 11:47.320
放过来吧

11:47.320 --> 11:49.320
点击 你看是不是获取到了

11:49.320 --> 11:49.720
对吧

11:49.720 --> 11:50.720
我们这里可以改

11:50.720 --> 11:52.420
文本框里边的东西可以改的

11:52.420 --> 11:54.020
改了之后点击

11:54.020 --> 11:54.920
可以获取到了

11:54.920 --> 11:56.120
没问题吧

11:56.120 --> 11:57.320
然后再看

11:57.320 --> 11:58.520
就可以获取到了

11:58.520 --> 11:59.520
就这么简单

11:59.520 --> 12:00.520
就这么简单

12:00.520 --> 12:02.620
这就是获取文本框的内容

12:02.620 --> 12:04.920
value 属性是可以识别的

12:04.920 --> 12:07.620
那比方说我还要获取 dave 的 value

12:07.620 --> 12:09.220
来看一下能不能获取

12:09.220 --> 12:12.920
得到这个 dave document

12:12.920 --> 12:16.620
curry is negative dave

12:16.620 --> 12:18.920
然后我们继续输出

12:18.920 --> 12:19.520
这里

12:19.520 --> 12:22.020
咱们继续输出 dave 的 value

12:22.120 --> 12:23.120
看一下能不能获取

12:23.120 --> 12:24.720
保存

12:24.720 --> 12:25.420
获取

12:25.420 --> 12:26.220
你是不是 undefined

12:26.220 --> 12:26.720
对吧

12:26.720 --> 12:27.520
undefined

12:27.520 --> 12:29.220
因为它不是一个正常的属性

12:29.220 --> 12:30.620
它是不能识别的属性

12:30.620 --> 12:32.020
那比方说 name

12:32.020 --> 12:33.020
获取 dave 的 name

12:33.020 --> 12:33.820
能不能获取呢

12:33.820 --> 12:34.320
看一下

12:34.320 --> 12:35.420
你看一下 dave 的 name

12:35.420 --> 12:36.520
是不是正常属性

12:36.520 --> 12:37.520
也不是正常属性

12:37.520 --> 12:37.820
对吧

12:37.820 --> 12:39.120
它也不是正常的属性

12:39.120 --> 12:40.220
哪有 name 的属性

12:40.220 --> 12:40.820
dave

12:40.820 --> 12:42.620
你们没有任何老师告诉你

12:42.620 --> 12:44.220
写一篇 cc 的时候

12:44.220 --> 12:45.720
dave 他有 name 属性

12:45.720 --> 12:46.220
对吧

12:46.220 --> 12:47.220
没有人告诉你

12:47.220 --> 12:48.820
所以说他是一个

12:48.820 --> 12:50.120
不正常的属性

12:50.120 --> 12:51.420
因此他获取不了

12:51.420 --> 12:52.420
就这么简单

12:52.420 --> 12:54.120
就这么简单

12:54.120 --> 12:56.220
这就是获取一个

12:56.220 --> 12:57.920
获取一个属性

12:57.920 --> 13:00.420
直接点属性名就行了

13:00.420 --> 13:02.020
能不能设置值呢

13:02.020 --> 13:02.820
设置属性

13:02.820 --> 13:03.420
当然可以

13:03.420 --> 13:04.120
它是一个属性

13:04.120 --> 13:05.320
你可以给它复制

13:05.320 --> 13:06.520
好 看着

13:06.520 --> 13:11.620
button id 为 btn set

13:11.620 --> 13:16.220
set btn set tst

13:16.220 --> 13:23.420
这是设置文本框的文本框内容

13:23.420 --> 13:25.520
设置文本框内容

13:25.520 --> 13:27.120
接下来我们来看一下

13:27.120 --> 13:28.620
给这个东西注册事件

13:28.620 --> 13:31.420
document get elements by id

13:31.420 --> 13:34.020
button set tst

13:34.020 --> 13:36.020
unclick

13:36.020 --> 13:38.020
当我们点击这个按钮的时候

13:38.020 --> 13:39.320
点击这个按钮的时候

13:39.320 --> 13:40.220
怎么样呢

13:40.220 --> 13:41.820
我去找到这个 input

13:41.820 --> 13:43.820
干脆我就把这个 input 直接放外面来

13:43.820 --> 13:44.820
直接放外面来

13:44.820 --> 13:45.220
对吧

13:46.220 --> 13:49.420
函数里边可以用外面的东西

13:49.420 --> 13:51.020
然后这里我们就找到这个 input

13:51.020 --> 13:53.020
给它 value 负责就完事了

13:53.020 --> 13:54.320
就负责就完事了

13:54.320 --> 13:55.520
比方说负责为空之物的时候

13:55.520 --> 13:56.220
它就轻空

13:56.220 --> 13:59.120
看着点击

13:59.120 --> 14:00.220
是不是轻空了

14:00.220 --> 14:01.020
对吧

14:01.020 --> 14:04.920
然后负责比方说请输入文本

14:04.920 --> 14:05.920
比方说举个例子

14:05.920 --> 14:07.520
随便下举例子

14:07.520 --> 14:08.720
点击你看

14:08.720 --> 14:10.120
这就完事了

14:10.120 --> 14:14.120
获取设置获取点击

14:14.120 --> 14:14.920
看没有

14:14.920 --> 14:15.720
对吧

14:15.720 --> 14:18.720
这就是给这个属性负责

14:18.720 --> 14:20.220
给属性负责

14:20.220 --> 14:22.120
一样的都非常非常简单

14:22.120 --> 14:24.120
这也是推荐的方式

14:24.120 --> 14:25.620
推荐

14:25.620 --> 14:28.320
推荐用这种方式来进行正常的

14:28.320 --> 14:29.920
etc 属性操作

14:29.920 --> 14:31.120
好 咱们再看

14:31.120 --> 14:32.520
再来个例子

14:32.520 --> 14:34.220
比方说

14:34.220 --> 14:36.320
怎么样呢

14:36.320 --> 14:38.620
看着我们这里比方有个图片

14:38.620 --> 14:43.810
图片哈斯奇

14:43.810 --> 14:46.210
这里我下载两张哈斯奇的图片

14:46.210 --> 14:47.210
这一张

14:47.210 --> 14:48.810
令成为

14:48.810 --> 14:50.110
这是1

14:50.110 --> 14:51.510
1

14:51.510 --> 14:52.510
这一张

14:52.510 --> 14:54.110
令成为

14:54.110 --> 14:56.010
这是2

14:56.010 --> 14:56.810
这是2

14:56.810 --> 14:57.610
两张图片嘛

14:57.610 --> 14:57.910
对吧

14:57.910 --> 14:58.810
两张图片

14:58.810 --> 14:59.510
OK

14:59.510 --> 15:01.410
我把这两张图片扔过来

15:01.410 --> 15:03.210
扔到我们的这里边来

15:03.210 --> 15:04.510
做一下测试

15:04.510 --> 15:06.710
这里边有一个图片元素

15:06.710 --> 15:08.110
有个图片元素

15:08.110 --> 15:08.310
好

15:08.310 --> 15:10.810
图片元素的默认是1.jpg

15:10.810 --> 15:11.910
1.jpg

15:11.910 --> 15:13.810
接下来我们这样子写

15:13.810 --> 15:15.310
给这个图片一些样式

15:15.310 --> 15:17.710
这个图片的宽度

15:17.710 --> 15:18.910
150个像素

15:18.910 --> 15:20.610
高度了150个像素

15:20.610 --> 15:21.710
然后了一个边框

15:21.710 --> 15:22.610
border

15:22.610 --> 15:23.710
一个两个像素

15:23.710 --> 15:24.910
solid

15:24.910 --> 15:25.410
然后呢

15:25.410 --> 15:26.710
我们之前学过的

15:26.710 --> 15:27.110
objects

15:27.110 --> 15:27.810
feeds

15:27.810 --> 15:28.410
什么

15:28.410 --> 15:29.810
content

15:29.810 --> 15:30.910
content

15:30.910 --> 15:32.710
如果不太清楚的话

15:32.710 --> 15:33.710
你看效果就行了

15:33.710 --> 15:35.210
看效果

15:35.210 --> 15:37.110
因为这是HCSS知识

15:37.110 --> 15:39.410
我的课程里面有讲解

15:39.410 --> 15:40.410
看没有

15:40.410 --> 15:41.210
这是第二张图片

15:41.210 --> 15:42.410
那看第二张图片吧

15:42.410 --> 15:43.010
看第二张图片

15:43.010 --> 15:44.410
你看得很明白了

15:44.410 --> 15:45.210
第二张图片

15:45.410 --> 15:46.810
content是什么意思

15:46.810 --> 15:47.610
保证这个图片

15:47.610 --> 15:50.410
已经在这个图片的元素内部

15:50.410 --> 15:52.410
整个要包含在图片元素内部

15:52.410 --> 15:55.410
并且不能失去它的比例

15:55.410 --> 15:57.410
它的比例不能失真

15:57.410 --> 15:58.610
就这样子

15:58.610 --> 15:59.510
就写完了

15:59.510 --> 16:01.610
这是第一开始是1.jpg

16:01.610 --> 16:02.710
现在我要干嘛呢

16:02.710 --> 16:04.510
我就把它变成快合

16:04.510 --> 16:05.710
换个行

16:05.710 --> 16:07.010
block

16:07.010 --> 16:08.410
把它变成快合

16:08.410 --> 16:08.710
好

16:08.710 --> 16:10.810
下边让我再写个按钮

16:10.810 --> 16:11.810
或者不写按钮

16:11.810 --> 16:12.810
就点击图片

16:12.810 --> 16:14.610
点击图片

16:14.610 --> 16:16.210
点击图片

16:16.210 --> 16:18.010
切换

16:18.010 --> 16:18.710
进行切换

16:18.710 --> 16:20.210
进行图片的切换

16:20.210 --> 16:21.110
这个很简单

16:21.110 --> 16:22.210
没有那么复杂

16:22.210 --> 16:23.210
简单的不得了

16:23.210 --> 16:24.310
怎么做呢

16:24.310 --> 16:25.210
选中图片

16:25.210 --> 16:25.510
对不对

16:25.510 --> 16:27.210
图片能不能点击

16:27.210 --> 16:28.110
图片能不能点击

16:28.110 --> 16:29.610
有些同学说图片不能点击

16:29.610 --> 16:30.810
那我就点了

16:30.810 --> 16:31.210
我就点了

16:31.210 --> 16:32.010
怎么样了

16:32.010 --> 16:34.010
他能把我怎么样了

16:34.010 --> 16:34.810
可以点击

16:34.810 --> 16:35.910
任何东西都可以点击

16:35.910 --> 16:37.110
都有这些事件的

16:37.110 --> 16:39.710
不是说只有按钮才能点击

16:39.710 --> 16:41.310
这里我们来看

16:41.310 --> 16:42.210
找到这个图片

16:42.310 --> 16:45.310
query selector

16:45.310 --> 16:47.610
query selector

16:47.610 --> 16:49.310
找到这个图片

16:49.310 --> 16:51.410
然后给他注册点击事件

16:51.410 --> 16:53.410
方形

16:53.410 --> 16:55.610
点击图片的时候干嘛呢

16:55.610 --> 16:56.810
点击图片的时候干嘛

16:56.810 --> 16:58.810
是不是把这个图片的src属性

16:58.810 --> 17:00.810
重新复制就完事了

17:00.810 --> 17:01.710
对吧

17:01.710 --> 17:02.910
重新复制就完事了

17:02.910 --> 17:04.410
我们定一个变量吧

17:04.410 --> 17:05.410
一开始

17:05.410 --> 17:07.110
比方说这个I等1

17:07.110 --> 17:09.310
是第一张图片

17:09.310 --> 17:14.260
它这个变量表示的是第几张图片

17:14.260 --> 17:15.460
第几张图片

17:15.460 --> 17:16.360
它一共有两张

17:16.360 --> 17:17.060
1和2

17:17.060 --> 17:18.560
对不对

17:18.560 --> 17:21.360
每一次点击干嘛呢

17:21.360 --> 17:24.960
每一次点击I加加加1

17:24.960 --> 17:25.160
对吧

17:25.160 --> 17:27.160
一开始是1变成2

17:27.160 --> 17:27.860
好

17:27.860 --> 17:29.560
如果他加到了3

17:29.560 --> 17:31.460
如果I等于3

17:31.460 --> 17:33.460
又把I重新复制为1

17:33.460 --> 17:34.060
对吧

17:34.060 --> 17:35.560
那就是1,2,1,2,1,2

17:35.560 --> 17:36.260
对吧

17:36.260 --> 17:36.660
1

17:36.660 --> 17:38.460
然后变成2

17:38.460 --> 17:40.460
2变成3的时候又变成了1

17:40.460 --> 17:40.860
对吧

17:40.860 --> 17:41.860
就是1,2,1,2

17:41.860 --> 17:42.660
这样就写完

17:42.660 --> 17:43.460
完事了

17:43.460 --> 17:44.660
然后怎么样呢

17:44.660 --> 17:45.960
给这个图片

17:45.960 --> 17:48.160
我把这个图片得到

17:48.160 --> 17:49.060
这样子写吧

17:49.060 --> 17:50.060
img

17:50.060 --> 17:51.860
得到这个图片

17:51.860 --> 17:52.360
好

17:52.360 --> 17:54.260
我们这个给这个图片注册事件嘛

17:54.260 --> 17:54.860
对不对

17:54.860 --> 17:55.060
好

17:55.060 --> 17:56.060
然后这里呢

17:56.060 --> 17:56.860
我怎么样呢

17:56.860 --> 17:59.860
我可以给这个图片设置它的src属性

17:59.860 --> 18:01.160
你看图片是正常的属性

18:01.160 --> 18:02.260
是不是src

18:02.260 --> 18:02.560
对吧

18:02.560 --> 18:03.460
没问题吧

18:03.460 --> 18:03.660
好

18:03.660 --> 18:05.260
然后干设置为什么呢

18:05.260 --> 18:06.360
设置为啥

18:06.360 --> 18:09.360
I拼接上.jpg

18:09.360 --> 18:10.860
是不是就完事了

18:10.860 --> 18:12.560
把src重新干复制

18:12.560 --> 18:13.360
是不是就完事了

18:13.460 --> 18:14.860
就这么简单

18:14.860 --> 18:16.060
保存看一下

18:16.060 --> 18:17.460
点击点击点击

18:17.460 --> 18:18.460
是可以切换了

18:18.460 --> 18:19.460
切换图片了

18:19.460 --> 18:21.760
你看以前用atmos css能做到吗

18:21.760 --> 18:22.460
做不到对吧

18:22.460 --> 18:24.360
用js可以轻松地做到

18:24.360 --> 18:24.960
看没有

18:24.960 --> 18:25.860
因为js呢

18:25.860 --> 18:26.960
可以先听事件

18:26.960 --> 18:28.360
并且呢

18:28.360 --> 18:30.760
可以处理这些属性

18:30.760 --> 18:32.360
这就是关于地点

18:32.360 --> 18:33.160
就是

18:33.160 --> 18:34.360
对象点属性名

18:34.360 --> 18:36.160
就可以直接用就完事了

18:36.160 --> 18:37.460
只不过用这个地方的时候

18:37.460 --> 18:38.660
大家注意一下

18:38.660 --> 18:40.560
有个小细节注意一下

18:40.560 --> 18:41.260
要注意什么呢

18:41.260 --> 18:42.660
有几个细节

18:43.660 --> 18:44.960
哪些细节呢

18:44.960 --> 18:46.160
就第一个

18:46.160 --> 18:47.660
就是

18:47.660 --> 18:49.560
正常的属相

18:49.560 --> 18:51.060
正常的属相

18:51.060 --> 18:52.760
即使

18:52.760 --> 18:53.960
即使

18:53.960 --> 18:56.660
这啥呀

18:56.660 --> 18:57.660
即使

18:57.660 --> 18:59.460
我靠 还有这个东西

19:00.460 --> 19:01.460
是这样子的

19:01.460 --> 19:04.360
即使没有复制

19:04.360 --> 19:05.660
没有复制

19:05.660 --> 19:07.860
也有默认值

19:07.860 --> 19:09.960
它也有默认值的

19:09.960 --> 19:10.560
正常的属性

19:10.560 --> 19:11.660
即使你没有复制

19:11.660 --> 19:12.660
它也有默认值

19:12.660 --> 19:13.960
就比方说

19:13.960 --> 19:15.160
比方说

19:15.160 --> 19:17.260
我们这里的这个文本框

19:17.260 --> 19:18.760
它没有给它写这个属相

19:18.760 --> 19:19.960
没有写这个属相

19:19.960 --> 19:20.960
它也有

19:20.960 --> 19:21.760
这个属性也有

19:21.760 --> 19:22.560
不是说没有

19:22.560 --> 19:23.460
它也有

19:23.460 --> 19:25.560
保存看一下

19:25.560 --> 19:27.460
咱们来获取这个文本框的值

19:27.460 --> 19:28.260
它的默认值

19:28.260 --> 19:29.260
你没有写它的默认值

19:29.260 --> 19:30.260
是不是就是空置五串

19:30.260 --> 19:30.560
对吧

19:30.560 --> 19:31.560
就是空置五串

19:31.560 --> 19:32.360
点击

19:32.360 --> 19:33.960
你看得到的就是空置五串

19:33.960 --> 19:34.460
空置五串

19:34.460 --> 19:35.760
你看不见而已

19:35.760 --> 19:36.660
看不见而已

19:36.660 --> 19:38.560
它得到的实际上是空置五串

19:38.560 --> 19:39.360
比方说我们这里

19:39.360 --> 19:40.460
用Type

19:40.460 --> 19:41.560
Type看一下吧

19:42.460 --> 19:43.660
Input

19:43.660 --> 19:45.160
Input.value

19:45.160 --> 19:46.660
看一下

19:46.660 --> 19:47.160
点击

19:47.160 --> 19:48.160
你看是不是实际

19:48.160 --> 19:49.560
没有内容

19:49.560 --> 19:49.760
对吧

19:49.760 --> 19:50.860
只是个字幕上没有内容

19:50.860 --> 19:51.960
它可以获取的

19:51.960 --> 19:53.660
它是可以获取的

19:53.660 --> 19:55.960
这是第一点要注意

19:55.960 --> 19:56.660
比方说

19:56.660 --> 19:57.460
咱们再来

19:57.460 --> 19:58.460
这个Type

19:58.460 --> 20:00.460
我们再来一个

20:01.460 --> 20:02.860
Input

20:02.860 --> 20:05.160
Type为checkbox

20:05.160 --> 20:06.160
为checkbox

20:06.160 --> 20:06.860
咱们来看一下

20:06.860 --> 20:08.360
没有给它设置value属性吗

20:08.360 --> 20:09.860
没有设置吗

20:09.860 --> 20:10.960
咱们来看一下

20:12.160 --> 20:13.160
Documents

20:14.960 --> 20:15.560
就这个玩意

20:15.560 --> 20:16.460
就这个玩意

20:16.460 --> 20:17.460
好 看着

20:17.460 --> 20:19.560
Documents

20:19.560 --> 20:22.060
Curves Nectar

20:22.060 --> 20:22.660
找到什么

20:22.660 --> 20:23.560
Input

20:23.560 --> 20:26.760
Type等于checkbox

20:26.760 --> 20:28.860
找到这个东西

20:28.860 --> 20:30.560
我把它放在变量里边吧

20:30.560 --> 20:32.360
把它放在变量里边

20:32.360 --> 20:36.880
这里用个变量获取一下

20:36.880 --> 20:38.180
Input

20:38.180 --> 20:39.980
获取一下

20:39.980 --> 20:41.680
好

20:41.680 --> 20:42.380
看着

20:42.380 --> 20:43.980
看这个Documents

20:43.980 --> 20:45.980
我没有给它设置选中那个属性

20:45.980 --> 20:49.380
没有给它设置 check

20:49.380 --> 20:51.580
没有给它设置这个属性

20:51.580 --> 20:53.180
我们来看一下

20:53.180 --> 20:54.680
Input

20:54.680 --> 20:55.780
check

20:55.780 --> 20:56.480
看一下

20:56.480 --> 20:57.180
有没有这个属性

20:57.180 --> 20:58.080
是不是有

20:58.080 --> 20:59.580
它得到的结构是布尔

20:59.580 --> 21:00.180
是个布尔

21:00.180 --> 21:01.380
Force

21:01.380 --> 21:02.880
如果选中了

21:02.880 --> 21:04.080
再来看这个属性

21:04.080 --> 21:05.780
是不是true

21:05.780 --> 21:08.380
这个跟我们ATM寫法是不是不一样

21:08.380 --> 21:09.980
我们ATM里面怎么写的

21:09.980 --> 21:11.080
是不是这样子写的

21:11.080 --> 21:12.080
布尔属性

21:12.080 --> 21:13.080
你可以这样子写

21:13.080 --> 21:13.980
也可以这样子写

21:13.980 --> 21:15.480
对吧

21:15.480 --> 21:16.280
也可以这样子写

21:16.280 --> 21:18.880
这种属性叫做布尔属性

21:18.880 --> 21:20.480
就是它要么就不写

21:20.480 --> 21:22.480
要写的话就只能这样子写

21:22.480 --> 21:24.980
属性的值跟属性的名字是一样的

21:24.980 --> 21:27.180
也可以省略掉属性的值

21:27.180 --> 21:28.280
这种写法也可以

21:28.280 --> 21:30.080
这种属性叫做布尔属性

21:30.080 --> 21:32.380
布尔属性它有个特点

21:32.380 --> 21:34.480
布尔属性

21:34.480 --> 21:40.080
在Dom对象中得到的是布尔

21:40.080 --> 21:40.980
得到的是布尔值

21:40.980 --> 21:42.580
它不是说得到的是切尔属性

21:42.580 --> 21:43.680
得到的是布尔值

21:43.680 --> 21:44.980
它这么回事

21:44.980 --> 21:46.080
我们要这一次

21:46.080 --> 21:47.080
OK 你看

21:47.080 --> 21:48.380
通过这种方式来获取

21:48.380 --> 21:49.480
它也可以获取的

21:49.480 --> 21:51.780
不是说不能获取

21:51.780 --> 21:53.080
再看

21:53.080 --> 21:55.280
咱们再写一个下达例表

21:55.280 --> 21:56.780
下达例表

21:56.780 --> 21:58.880
是那个词

21:58.880 --> 22:00.580
下达例表这些东西都不要了

22:00.580 --> 22:00.980
不要了

22:00.980 --> 22:01.980
就一个下达例表

22:01.980 --> 22:03.780
下达例表里面我们随便写一些

22:03.780 --> 22:04.680
随便写一些

22:04.680 --> 22:05.280
不行

22:05.280 --> 22:06.980
程式

22:06.980 --> 22:09.080
程式成都

22:09.080 --> 22:10.880
这里我们写成都

22:11.080 --> 22:12.280
不行

22:12.280 --> 22:13.880
然后写上白六

22:13.880 --> 22:15.880
写上北京

22:15.880 --> 22:17.180
北京

22:17.180 --> 22:19.780
北京

22:19.780 --> 22:21.280
北京

22:21.280 --> 22:21.980
再写上

22:21.980 --> 22:23.080
不行

22:23.080 --> 22:26.080
然后这里写上一个哈尔滨

22:27.580 --> 22:29.080
哈尔滨

22:29.080 --> 22:30.280
就这么一个

22:30.280 --> 22:31.380
就这么一个东西

22:31.380 --> 22:32.880
咱们来看一下

22:32.880 --> 22:33.880
有下达例表了

22:33.880 --> 22:34.980
有下达例表了

22:34.980 --> 22:36.080
咱们来看一下

22:36.080 --> 22:36.880
得到下达例表

22:36.880 --> 22:38.280
sell documents

22:38.280 --> 22:39.580
query

22:39.580 --> 22:40.580
query是那个条

22:40.680 --> 22:42.080
我都写习惯了

22:42.080 --> 22:43.280
就直接用这个

22:43.280 --> 22:45.080
是那个词

22:45.080 --> 22:47.280
得到这么一个玩意

22:47.280 --> 22:48.880
得到它

22:48.880 --> 22:49.980
然后呢

22:49.980 --> 22:50.380
然后呢

22:50.380 --> 22:53.580
我们得到它当前选中的值

22:53.580 --> 22:54.380
这个下达例表

22:54.380 --> 22:55.480
当前选中的值

22:55.480 --> 22:55.880
value

22:55.880 --> 22:57.280
你看是不是程多

22:57.280 --> 22:58.080
没问题吧

22:58.080 --> 22:59.280
我有没有给这里写

22:59.280 --> 22:59.980
value属性

22:59.980 --> 23:00.880
没有吧

23:00.880 --> 23:02.580
那么通过这个是那个词的value

23:02.580 --> 23:05.280
它就可以得到目前选中的值

23:05.280 --> 23:06.580
看到没

23:06.580 --> 23:06.880
好

23:06.880 --> 23:07.880
能不能设置

23:07.880 --> 23:09.080
当然可以设置

23:09.080 --> 23:09.680
设置成什么

23:09.780 --> 23:10.980
比方说设置成北京

23:10.980 --> 23:12.180
注意

23:12.180 --> 23:13.380
你设置的东西

23:13.380 --> 23:14.780
一定要是跟值对应的

23:14.780 --> 23:16.180
跟这个value对应的

23:16.180 --> 23:18.580
以前你们学习itema和setset的时候

23:18.580 --> 23:20.480
你可能不清楚这个value有什么用

23:20.480 --> 23:20.880
对吧

23:20.880 --> 23:22.280
那现在是不是有用了

23:22.280 --> 23:23.480
用介石来操作的时候

23:23.480 --> 23:24.980
操作的是这个value值

23:24.980 --> 23:25.780
看没

23:25.780 --> 23:26.880
操作的是这个value值

23:26.880 --> 23:27.380
你看

23:27.380 --> 23:28.880
所以变成北京了

23:28.880 --> 23:31.380
比方说变成哈尔滨

23:31.380 --> 23:33.380
哈尔滨

23:33.380 --> 23:34.680
我写错了吧

23:34.680 --> 23:36.380
这里没有这个g

23:36.380 --> 23:36.880
哈尔滨

23:36.880 --> 23:38.080
所以变了

23:38.080 --> 23:38.780
没问题吧

23:38.880 --> 23:40.080
然后再选中北京

23:40.080 --> 23:40.880
然后再看

23:40.880 --> 23:42.180
再看

23:42.180 --> 23:44.780
这个sale.value是不是变成北京了

23:44.780 --> 23:45.780
你看

23:45.780 --> 23:46.680
是不是可以获取的

23:46.680 --> 23:47.980
也可以获取也可以设置

23:47.980 --> 23:48.780
对吧

23:48.780 --> 23:51.680
那如果我要得到北京这两个字怎么办呢

23:51.680 --> 23:53.480
得到北京这两个字看着啊

23:53.480 --> 23:54.380
看着

23:54.380 --> 23:56.880
我们用这个sale来得到

23:56.880 --> 23:59.990
它里边的option式

23:59.990 --> 24:01.390
用这个下达列表

24:01.390 --> 24:04.190
什么query selector

24:04.190 --> 24:06.190
selector什么

24:06.190 --> 24:08.290
得到什么用选择器吗

24:08.290 --> 24:09.790
选中什么option

24:09.890 --> 24:11.890
选中它下面的option元素

24:11.890 --> 24:13.890
并且这个option元素

24:13.890 --> 24:16.490
还必须要是什么selected

24:16.490 --> 24:17.890
selected

24:17.890 --> 24:19.490
必须要被选中的

24:19.490 --> 24:21.690
就是被选中的那个option

24:21.690 --> 24:22.890
这是CSS选择器

24:22.890 --> 24:23.690
这个没什么好说的

24:23.690 --> 24:24.290
对吧

24:24.290 --> 24:25.290
CSS选择器

24:25.290 --> 24:28.490
得到obts

24:28.490 --> 24:31.190
我写错了是吧

24:31.190 --> 24:31.490
哦

24:31.490 --> 24:32.990
这里不能这样子说

24:32.990 --> 24:33.990
不能这样子说

24:33.990 --> 24:35.490
不能这样子说

24:35.490 --> 24:37.290
这种选择器是不行的

24:37.290 --> 24:38.190
没有这个选择器

24:38.190 --> 24:39.190
没有这个选择器

24:39.290 --> 24:40.390
我们只能选中

24:40.390 --> 24:42.390
得到所有的option

24:42.390 --> 24:44.390
得到所有的option

24:44.390 --> 24:46.290
那么这个option里边是不是

24:46.290 --> 24:47.390
有三项

24:47.390 --> 24:48.790
三个都是option元素

24:48.790 --> 24:50.390
都是元素节点

24:50.390 --> 24:51.290
那么哪个被选中

24:51.290 --> 24:52.190
是不是第二个被选中

24:52.190 --> 24:52.690
对吧

24:52.690 --> 24:53.890
当然你可以循环

24:53.890 --> 24:55.590
循环判断哪个被选中

24:55.590 --> 24:56.590
我这里难得循环了

24:56.590 --> 24:57.690
我就直接得到第二个

24:57.690 --> 24:58.590
你看一下

24:58.590 --> 25:00.690
下表我一这个selected

25:00.690 --> 25:01.890
看一下这个数项

25:01.890 --> 25:03.190
是不是被选中了

25:03.190 --> 25:04.190
这一项被选中了

25:04.190 --> 25:04.690
对吧

25:04.690 --> 25:06.490
我们可以得到这一项的什么

25:06.490 --> 25:07.290
得到内容

25:07.290 --> 25:07.790
对不对

25:07.790 --> 25:10.090
什么first child

25:10.090 --> 25:12.790
内容的load value

25:12.790 --> 25:14.290
对吧

25:14.290 --> 25:15.890
北京

25:15.890 --> 25:17.390
我们可以循环它

25:17.390 --> 25:20.490
判断一下哪一个被选中

25:20.490 --> 25:22.490
判断一下哪个被选中

25:22.490 --> 25:23.990
好吧

25:23.990 --> 25:25.590
这是关于这一块

25:25.590 --> 25:27.290
就是属性

25:27.290 --> 25:28.490
你可以正常获取一项事了

25:28.490 --> 25:29.690
哪怕你没有设置

25:29.690 --> 25:31.290
都可以正常获取

25:31.290 --> 25:33.290
另外还要注意一点就是

25:33.290 --> 25:34.690
某些

25:34.690 --> 25:36.290
特别是表单元素

25:36.290 --> 25:37.490
表单元素

25:37.490 --> 25:41.790
可以获取到不存在的属性

25:41.790 --> 25:44.290
可以获取到某些不存在的属性

25:44.290 --> 25:45.390
就是有些表单元素

25:45.390 --> 25:46.290
比方说

25:46.290 --> 25:47.690
比方说这个selected

25:47.690 --> 25:48.490
这个selected

25:48.490 --> 25:50.490
你本来在这里写value是没用的

25:50.490 --> 25:51.690
你看它都没有提示

25:51.690 --> 25:52.290
对吧

25:52.290 --> 25:53.390
它这里写value是没用的

25:53.390 --> 25:55.190
你看在这边写value就可以

25:55.190 --> 25:56.590
但是这边写value就没用

25:56.590 --> 25:57.090
这个value

25:57.090 --> 25:58.790
它本来是它不存在的属性

25:58.790 --> 26:00.690
但是为了方便我们得到

26:00.690 --> 26:02.490
目前选中的值

26:02.490 --> 26:04.990
它也给你设置了这个value属性

26:04.990 --> 26:06.190
也给你设置了

26:06.190 --> 26:08.690
我们刚才看到了value是可以得到的

26:08.690 --> 26:08.990
对吧

26:08.990 --> 26:09.990
是可以得到的

26:09.990 --> 26:11.090
尽管它没有这个属性

26:11.090 --> 26:13.490
但是由于它比较特殊

26:13.490 --> 26:14.090
可以通过它

26:14.090 --> 26:16.090
可以直接获取到你选中的值

26:16.090 --> 26:18.290
因此它也给你设置了这个属性

26:18.290 --> 26:19.790
某些特别是表单元素

26:19.790 --> 26:20.890
有这么种情况

26:20.890 --> 26:25.490
再比方说多航文闷框

26:25.490 --> 26:27.090
Texa Aurea

26:27.090 --> 26:28.090
这是个多航文闷框

26:28.090 --> 26:28.790
对吧

26:28.790 --> 26:28.990
好

26:28.990 --> 26:30.790
咱们来看一下

26:30.790 --> 26:31.890
下面有多航文闷框

26:31.890 --> 26:32.490
能看见吗

26:32.490 --> 26:33.890
就这个玩意

26:33.890 --> 26:34.090
好

26:34.090 --> 26:35.490
咱们来看一下

26:35.590 --> 26:39.190
txt document query is negative

26:39.190 --> 26:41.990
text Aurea

26:41.990 --> 26:43.390
或许多航文闷框

26:43.390 --> 26:46.090
多航文闷框里边有没有value

26:46.090 --> 26:47.990
它没有value这个属性

26:47.990 --> 26:50.190
多航文闷框里边是没有value这个属性

26:50.190 --> 26:50.790
你看见没

26:50.790 --> 26:51.690
没有智能提示

26:51.690 --> 26:53.090
它没有这个属性

26:53.090 --> 26:54.290
它的文本是写到哪了

26:54.290 --> 26:55.190
是写到这里边的

26:55.190 --> 26:56.090
看见没

26:56.090 --> 26:57.590
它的文本是写到这里边的

26:57.590 --> 27:00.090
它并没有这个属性

27:00.090 --> 27:00.890
并没有这个属性

27:00.890 --> 27:02.790
把它复制一下

27:02.790 --> 27:03.390
复制一下

27:03.390 --> 27:03.990
这里保存

27:03.990 --> 27:04.790
我先拿一次

27:04.890 --> 27:05.490
你看

27:05.490 --> 27:06.890
这个文闷框

27:06.890 --> 27:07.890
它并没有这个属像

27:07.890 --> 27:11.290
但是我们仍然可以通过value来获取它

27:11.290 --> 27:12.290
value

27:12.290 --> 27:12.890
你看

27:12.890 --> 27:13.990
所以仍然可以获取

27:13.990 --> 27:15.790
因为这样子获取很方便

27:15.790 --> 27:17.090
就这么个意思

27:17.090 --> 27:18.190
明白这个意思吧

27:18.190 --> 27:19.890
就这么个意思

27:19.890 --> 27:21.190
ok

27:21.190 --> 27:24.090
这是关于这个属性的获取

27:24.090 --> 27:24.890
还有一种情况

27:24.890 --> 27:27.090
就是某些属像

27:27.090 --> 27:30.690
与标志服冲突

27:30.690 --> 27:32.490
与标志服冲突

27:32.490 --> 27:38.190
此时需要更换属性名

27:38.190 --> 27:39.290
属性的名字要更换

27:39.290 --> 27:40.090
这个没办法

27:40.090 --> 27:41.590
这是没办法的事情

27:41.590 --> 27:42.790
比方说

27:42.790 --> 27:45.090
我们还不是有一个这个玩意吗

27:45.090 --> 27:46.890
这个boss

27:46.890 --> 27:48.290
不是有一个label吗

27:48.290 --> 27:49.190
对不对

27:49.190 --> 27:51.290
label元素它不是一个for属性吗

27:51.290 --> 27:51.690
对吧

27:51.690 --> 27:52.290
for

27:52.290 --> 27:53.290
for啥呢

27:53.290 --> 27:54.790
for给它个id

27:54.790 --> 27:56.990
给它个id就是cb

27:56.990 --> 27:57.790
jendle

27:57.790 --> 27:59.390
都是个性别

27:59.390 --> 28:00.190
jendle

28:00.190 --> 28:01.790
我们把写前面来吧

28:01.790 --> 28:02.790
写前面来

28:02.790 --> 28:03.890
label for

28:03.890 --> 28:07.090
for cbjendle

28:07.090 --> 28:09.090
然后这里写个蓝

28:09.090 --> 28:10.090
这是我们以前做过的

28:10.090 --> 28:10.490
对吧

28:10.490 --> 28:11.490
以前做过的

28:11.490 --> 28:12.090
你看

28:12.090 --> 28:13.690
这样子我们就可以点击这个蓝

28:13.690 --> 28:14.790
你看也可以选中了

28:14.790 --> 28:15.690
看没

28:15.690 --> 28:17.490
把它拖过来一点

28:17.490 --> 28:18.690
点击这个蓝也可以选中了

28:18.690 --> 28:19.690
看没

28:19.690 --> 28:20.890
这是label

28:20.890 --> 28:23.890
那么比方说我要获取这个for属性

28:23.890 --> 28:25.590
这个for属性怎么获取呢

28:25.590 --> 28:26.090
看着

28:29.090 --> 28:30.990
就是得到label

28:30.990 --> 28:31.690
对吧

28:31.790 --> 28:32.790
document

28:32.790 --> 28:34.590
query snaggater

28:34.590 --> 28:35.590
label

28:35.590 --> 28:36.590
得到它

28:37.390 --> 28:38.390
label得到了

28:38.390 --> 28:39.490
好得到它的for属性

28:39.490 --> 28:39.990
for

28:39.990 --> 28:40.990
你看能获取吗

28:40.990 --> 28:41.690
获取不了

28:41.690 --> 28:42.790
因为这个for

28:42.790 --> 28:43.790
它这个标志符

28:43.790 --> 28:45.190
它这个名字有点问题

28:45.190 --> 28:47.090
因为跟关键字重复了

28:47.090 --> 28:47.990
对吧

28:47.990 --> 28:49.590
跟我们这个for循环的关键字

28:49.590 --> 28:50.690
是不是重复了

28:50.690 --> 28:51.590
对不对

28:51.590 --> 28:52.990
有些属性名字

28:52.990 --> 28:54.690
它跟关键字重复了

28:54.690 --> 28:56.390
并且它有可能是保留字

28:56.390 --> 28:58.990
就是将来可能会用到的关键字

28:58.990 --> 29:00.390
它可能是保留字

29:00.490 --> 29:01.990
就是你不能用这种名字

29:01.990 --> 29:02.490
那怎么办

29:02.490 --> 29:04.690
它把这个名字稍微改了一下

29:04.690 --> 29:06.090
比方说这个for属性不多

29:06.090 --> 29:06.990
这种属性不多

29:06.990 --> 29:08.490
我们就看两个就行了

29:08.490 --> 29:09.390
什么

29:09.390 --> 29:10.190
比方改成什么

29:10.190 --> 29:12.190
改成了atm4

29:12.190 --> 29:13.690
改成了这个

29:13.690 --> 29:14.590
看呗

29:14.590 --> 29:15.890
是不是可以获取了

29:15.890 --> 29:17.290
可以获取这个属性了

29:17.290 --> 29:18.290
没问题吧

29:18.290 --> 29:19.690
没问题

29:19.690 --> 29:20.990
这是这种情况

29:20.990 --> 29:23.990
那还有比方说有些是类样式

29:23.990 --> 29:25.390
你加了一个class

29:25.390 --> 29:26.390
比方说

29:26.390 --> 29:27.390
这个是那个车板

29:27.390 --> 29:29.590
加了一个class

29:29.690 --> 29:30.590
ss

29:30.590 --> 29:32.290
比方说有这个class

29:32.290 --> 29:33.190
咱们来看一下

29:33.190 --> 29:34.690
class它是个保留字

29:34.690 --> 29:36.490
它也会出现这个问题

29:36.490 --> 29:37.690
sale

29:37.690 --> 29:38.590
document

29:38.590 --> 29:40.690
query is negative

29:40.690 --> 29:42.090
is negative

29:42.090 --> 29:42.790
得到

29:42.790 --> 29:43.490
sale

29:43.490 --> 29:44.390
我们调class

29:44.390 --> 29:45.390
能调出来吗

29:45.390 --> 29:45.990
调不出来

29:45.990 --> 29:46.590
对吧

29:46.590 --> 29:47.690
它应该是用什么

29:47.690 --> 29:49.090
class name

29:49.090 --> 29:50.590
它把它改了一下

29:50.590 --> 29:51.990
改了一下class name

29:51.990 --> 29:52.690
能不能改呢

29:52.690 --> 29:53.890
这个东西肯定可以改

29:53.890 --> 29:55.090
这些属性都可以改的

29:55.090 --> 29:56.090
都可以改的

29:56.090 --> 29:57.490
然后改了之后你看一下

29:57.490 --> 29:59.290
看一下元素

29:59.390 --> 30:00.890
这个下达列表

30:00.890 --> 30:02.490
你看class改了

30:02.490 --> 30:02.790
对不对

30:02.790 --> 30:03.890
内样式改了

30:03.890 --> 30:06.590
有的时候我们可以切换内样式

30:06.590 --> 30:09.690
可以切换内样式来达到一些效果

30:09.690 --> 30:11.090
没问题吧

30:11.090 --> 30:11.790
OK

30:11.790 --> 30:15.990
这是关于这里

30:15.990 --> 30:18.490
这是属性

30:18.490 --> 30:19.290
第一种方式

30:19.290 --> 30:20.890
使用对象调属性名

30:20.890 --> 30:22.190
就完事了

30:22.190 --> 30:22.390
好

30:22.390 --> 30:24.190
这里我说一下第二种方式

30:24.190 --> 30:27.490
第二种方式是通用方式

30:27.490 --> 30:29.090
通用方式

30:29.190 --> 30:30.090
也就是通用方式

30:30.090 --> 30:32.090
它可以在字定义属性里面也可以用

30:32.090 --> 30:33.590
也可以用

30:33.590 --> 30:33.790
好

30:33.790 --> 30:34.490
咱们来看一下

30:34.490 --> 30:35.290
通用方式

30:35.290 --> 30:37.090
我把它写在上面来吧

30:37.090 --> 30:37.890
写在上面来

30:37.890 --> 30:39.690
通用方式

30:39.690 --> 30:42.190
这种获取方式是什么呢

30:42.190 --> 30:47.190
这种获取方式是使用getitribute

30:47.190 --> 30:48.590
itribute什么意思

30:48.590 --> 30:49.690
属性对吧

30:49.690 --> 30:50.690
属性的方

30:50.690 --> 30:52.190
属性的意思

30:52.190 --> 30:57.490
getitribute得到属性和setitribute

30:57.590 --> 30:58.790
设置属性

30:58.790 --> 30:59.590
完了

30:59.590 --> 31:00.390
没了

31:00.390 --> 31:00.590
好

31:00.590 --> 31:02.590
咱们来看一下

31:02.590 --> 31:03.190
用这种方式

31:03.190 --> 31:07.190
这是通用的获取属性和设置属性的方式

31:07.190 --> 31:09.190
咱们来看一下

31:09.190 --> 31:13.190
比方说这个复选框

31:13.190 --> 31:14.190
不说复选框了

31:14.190 --> 31:15.190
说这个文闷框

31:15.190 --> 31:16.190
文闷框

31:16.190 --> 31:16.990
咱们来看一下

31:16.990 --> 31:18.590
这个input这个文闷框

31:18.590 --> 31:18.990
看没

31:18.990 --> 31:19.590
就这个文闷框

31:19.590 --> 31:21.190
我们之前有这个变量

31:21.190 --> 31:21.790
文闷框

31:21.790 --> 31:23.290
我们现在使用另外一种方式

31:23.290 --> 31:24.390
getitribute

31:24.390 --> 31:25.190
不推荐

31:25.190 --> 31:26.990
不推荐

31:27.090 --> 31:27.790
给他设置

31:27.790 --> 31:28.790
给他得到value

31:28.790 --> 31:30.690
看一下能得到吗

31:30.690 --> 31:31.890
他是辣

31:31.890 --> 31:32.690
得不到

31:32.690 --> 31:34.290
他没有这个属性值

31:34.290 --> 31:35.090
奇怪了

31:35.090 --> 31:36.490
我不是有这个属性吗

31:36.490 --> 31:37.690
但是注意

31:37.690 --> 31:39.290
这种方式得到了属性

31:39.290 --> 31:41.490
必须要你要手动输写到这

31:41.490 --> 31:42.190
才行

31:42.190 --> 31:43.290
你没有手动输写

31:43.290 --> 31:44.390
他得到了

31:44.390 --> 31:44.890
保存

31:44.890 --> 31:46.090
现在再看一下

31:46.090 --> 31:50.090
input get attribute value

31:50.090 --> 31:50.690
看一下

31:50.690 --> 31:52.090
你看现在是不是能得到了

31:52.090 --> 31:52.690
能得到了吧

31:52.690 --> 31:53.190
对吧

31:53.190 --> 31:54.090
然后我们再写

31:54.090 --> 31:54.590
改一下

31:54.590 --> 31:55.490
改一下他的value值

31:55.490 --> 31:55.990
改了之后

31:55.990 --> 31:56.890
我们来看一下

31:56.890 --> 31:58.090
得到了还是之前的

31:58.090 --> 31:59.390
看到没

31:59.390 --> 32:00.090
没问题吧

32:00.090 --> 32:01.990
得到了还是之前的

32:01.990 --> 32:04.790
这就是这个 attribute

32:04.790 --> 32:06.690
他指的是什么

32:06.690 --> 32:10.790
他指的是你原始写到他的值

32:10.790 --> 32:11.990
那能不能改

32:11.990 --> 32:13.390
可以改

32:13.390 --> 32:14.790
可以改

32:14.790 --> 32:17.290
set attribute

32:17.290 --> 32:18.990
比方说

32:18.990 --> 32:20.290
set attribute

32:20.290 --> 32:21.690
这里是得到白六的属性值

32:21.690 --> 32:22.190
对吧

32:22.190 --> 32:23.090
那么设置的时候

32:23.090 --> 32:24.490
你要写两个参数

32:24.490 --> 32:26.090
一个是属性的名

32:26.090 --> 32:27.490
一个是属性的值

32:27.490 --> 32:29.690
123

32:29.690 --> 32:30.390
可不可以改

32:30.390 --> 32:31.190
可以改

32:31.190 --> 32:32.190
但是改了过后

32:32.190 --> 32:34.590
他并没有影响这个文明框的效果

32:34.590 --> 32:35.290
他改没改了

32:35.290 --> 32:36.190
他确实改了

32:36.190 --> 32:37.790
他确实改了

32:37.790 --> 32:38.590
看一下

32:38.590 --> 32:39.890
你看这个value值123

32:39.890 --> 32:42.490
但他不会影响到文明框的效果

32:42.490 --> 32:42.890
所以说

32:42.890 --> 32:45.390
这种方式不推荐大家使用

32:45.390 --> 32:46.190
他只能

32:46.190 --> 32:47.390
一般我们用他的时候

32:47.390 --> 32:48.990
一般是用自定习属性

32:48.990 --> 32:50.390
用到自定习属性这一块

32:50.390 --> 32:51.690
一般不推荐大家使用

32:51.690 --> 32:53.290
他的报道是原始值

32:53.290 --> 32:54.790
他并没有任何功能的

32:54.790 --> 32:56.990
他没有跟他们之间产生任何功能

32:56.990 --> 32:57.890
你看这意思吧

32:57.890 --> 32:58.990
比如说图片

32:58.990 --> 32:59.590
图片这一块

32:59.590 --> 33:01.490
咱们来看图片

33:01.490 --> 33:03.990
图片set attribute

33:03.990 --> 33:05.390
把它设置为src

33:05.390 --> 33:06.190
设置为什么

33:06.190 --> 33:07.690
2.jpg

33:07.690 --> 33:08.790
看一下图片能不能改

33:08.790 --> 33:10.090
图片他又可以改

33:10.090 --> 33:10.990
所以这里的情况

33:10.990 --> 33:12.590
他比较复比较复杂

33:12.590 --> 33:14.390
而且他情况比较多

33:14.390 --> 33:15.990
我们没有必要去记这些情况

33:15.990 --> 33:16.990
没有必要去记

33:16.990 --> 33:17.790
你就知道

33:17.790 --> 33:19.390
不要用这种方式就行了

33:19.390 --> 33:20.590
如果是正常的属性

33:20.590 --> 33:22.190
你不要用这种方式

33:22.190 --> 33:23.490
自定习属性当然可以

33:23.490 --> 33:26.190
但是正常的属性不要用这种方式

33:26.190 --> 33:27.190
你看这意思吧

33:27.190 --> 33:27.390
好

33:27.390 --> 33:28.890
咱们再看

33:28.890 --> 33:31.290
这个复选框

33:31.290 --> 33:32.390
复选框这里

33:32.390 --> 33:33.790
他不是有一个这个东西吗

33:33.790 --> 33:34.490
叫做check

33:34.490 --> 33:35.590
对吧

33:35.590 --> 33:35.990
check

33:35.990 --> 33:37.790
这个属性

33:37.790 --> 33:38.790
好看着

33:38.790 --> 33:39.990
这个属性

33:39.990 --> 33:40.190
好

33:40.190 --> 33:40.690
现在选中了

33:40.690 --> 33:40.990
对吧

33:40.990 --> 33:43.890
我们可以用这个复选框

33:43.890 --> 33:45.790
得到这个cb

33:45.790 --> 33:46.290
document

33:46.290 --> 33:46.690
create

33:46.690 --> 33:47.990
negature

33:47.990 --> 33:49.090
checkbox

33:51.090 --> 33:51.590
type

33:51.590 --> 33:54.790
等于checkbox

33:54.790 --> 33:55.790
选择器

33:55.790 --> 33:56.790
得到这个

33:56.790 --> 34:00.490
然后得到get attribute

34:00.490 --> 34:01.490
属性的名字叫啥呢

34:01.490 --> 34:03.890
属性的名字叫做checked

34:03.890 --> 34:05.090
checked

34:05.090 --> 34:06.090
好看来能不能得到

34:06.090 --> 34:06.890
他得到的是这个东西

34:06.890 --> 34:08.290
他得到的不是布尔

34:08.290 --> 34:10.190
他得到的是原式的东西

34:10.190 --> 34:10.690
看没

34:10.690 --> 34:11.890
原式的东西

34:11.890 --> 34:13.190
这里的情况比较多

34:13.190 --> 34:15.390
大家不用去使进硬背这些东西

34:15.390 --> 34:16.990
不用去使进硬背

34:16.990 --> 34:19.590
我们平时用那个

34:19.590 --> 34:21.290
用可识别的属性的时候

34:21.290 --> 34:22.990
直接对象叫属性名

34:22.990 --> 34:24.190
不要用这种方式

34:24.190 --> 34:25.790
就完事了

34:25.790 --> 34:27.990
这是这一块可识别的属性

34:27.990 --> 34:29.890
那么再看自定义属性

34:29.890 --> 34:31.890
自定义属性可能有些同学不知道什么用

34:31.890 --> 34:33.790
就跟当时你们不太清楚

34:33.790 --> 34:35.190
value有什么用一样

34:35.190 --> 34:36.990
你根本就不太清楚value有什么用

34:36.990 --> 34:37.990
那么现在呢

34:37.990 --> 34:38.990
你也不太清楚

34:38.990 --> 34:40.690
为什么要有自定义属性

34:40.690 --> 34:42.490
他又没有什么效果显示出来

34:42.490 --> 34:43.690
为什么需要他

34:43.690 --> 34:45.990
我们后边做一些练习的事就明白了

34:45.990 --> 34:47.590
他可以给我们的开发了

34:47.590 --> 34:49.090
带来一些方便

34:49.090 --> 34:51.190
我们来看一下自定义属性

34:51.590 --> 34:53.190
比方说我给这个DIV

34:53.190 --> 34:55.490
我随便写个DIV吧

34:55.490 --> 35:00.390
这个DIV里边写上这个ABC等于123

35:00.390 --> 35:03.290
BCD等于234

35:03.290 --> 35:04.190
写上这么一些属性

35:04.190 --> 35:05.090
这个属性存不存在

35:05.090 --> 35:05.990
肯定不存在

35:05.990 --> 35:06.290
对吧

35:06.290 --> 35:07.290
肯定不存在

35:07.290 --> 35:08.790
那么我们能不能获取它呢

35:08.790 --> 35:09.790
可以获取

35:09.790 --> 35:10.990
仍然是可以获取的

35:10.990 --> 35:14.990
看着得到DIV documents

35:14.990 --> 35:19.290
这个时候第一种方式就不适用了

35:19.290 --> 35:21.290
第一种方式什么ABC就不适用了

35:21.290 --> 35:21.690
对吧

35:21.690 --> 35:22.590
不能用了

35:22.590 --> 35:23.390
应该用什么呢

35:23.390 --> 35:25.890
应该用之前的写的通用方式

35:25.890 --> 35:29.390
Gate attribute属性名ABC

35:29.390 --> 35:31.190
看一二三

35:31.190 --> 35:33.590
然后属性名DCD

35:33.590 --> 35:34.190
234

35:34.190 --> 35:35.890
看一看用这种方式又合适了

35:35.890 --> 35:37.090
就好使了

35:37.090 --> 35:37.690
能不能设置

35:37.690 --> 35:38.590
当然可以设置

35:38.590 --> 35:41.290
set attributeABC

35:41.290 --> 35:44.990
把它设置为789

35:44.990 --> 35:46.490
好看一下设置

35:46.490 --> 35:49.190
设置完了过后这个DIV看一下

35:49.190 --> 35:50.990
看是不是变成789了

35:50.990 --> 35:52.190
没问题吧

35:52.190 --> 35:52.990
可以用自定

35:52.990 --> 35:54.090
用于自定属性

35:54.090 --> 35:54.790
很快

35:54.790 --> 35:56.090
咱们很快说不准

35:56.090 --> 35:57.390
我现在还没有想好作业

35:57.390 --> 35:58.590
以后我会想

35:58.590 --> 35:59.690
说不准

35:59.690 --> 36:01.490
以后我们作业里边

36:01.490 --> 36:04.290
就是极大几率就会用到这个东西

36:04.290 --> 36:05.490
当然你可以不用不用的话

36:05.490 --> 36:06.690
你会造成很多的麻烦

36:06.690 --> 36:09.490
你用它的话就会发现很轻松了

36:09.490 --> 36:10.590
好吧

36:10.590 --> 36:11.890
那么这里我再说一点

36:11.890 --> 36:12.990
关于自定属性

36:12.990 --> 36:14.290
因为我在讲公开课的时候

36:14.290 --> 36:16.190
发现很多同学都不知道

36:16.190 --> 36:16.890
这里我说一点

36:16.890 --> 36:18.390
因为这个是新标准

36:18.390 --> 36:19.590
新标准的

36:19.590 --> 36:21.390
之前的课程里边是没有的

36:21.390 --> 36:23.490
现在很多的那些都能识别的

36:23.490 --> 36:24.790
可以大量的使用

36:24.790 --> 36:25.990
关于这个属性

36:25.990 --> 36:29.190
自定属性这一块

36:29.190 --> 36:32.790
现在ATM-5建议

36:32.790 --> 36:33.590
建议什么

36:33.590 --> 36:34.590
它没有强制要求

36:34.590 --> 36:37.690
它建议自定义属性

36:37.690 --> 36:45.190
使用Data-Hungang作为前綴

36:45.190 --> 36:47.090
用Data-Hungang作为前綴

36:47.090 --> 36:47.790
什么意思呢

36:47.790 --> 36:48.990
就是你这个是自定义属性

36:48.990 --> 36:50.990
前面加上一个Data-Hungang

36:50.990 --> 36:53.290
这里加上一个Data-Hungang

36:53.290 --> 36:54.590
它建议你这样子写

36:54.590 --> 36:56.190
这样子写

36:56.190 --> 36:57.590
仪式非常好阅读

36:57.590 --> 36:57.790
对吧

36:57.790 --> 36:58.590
非常好阅读

36:58.590 --> 37:00.590
一看这个东西就知道是自定义属性

37:00.590 --> 37:02.190
第二它会带来一些方便

37:02.190 --> 37:03.090
我们等一下来看

37:03.090 --> 37:04.290
它是有什么样的方便

37:04.290 --> 37:06.590
我们现在来看一下怎么来获取

37:06.590 --> 37:08.390
好获取的方式是一样的

37:08.390 --> 37:10.890
比方说这个DIV对吧

37:10.890 --> 37:13.390
DIV就这个玩意

37:13.390 --> 37:13.590
好

37:13.590 --> 37:16.890
然后DIV get attribute

37:16.990 --> 37:18.890
我们怎么写Data-Hungang

37:18.890 --> 37:19.690
是吧

37:19.690 --> 37:21.790
Hungang-ABC

37:21.790 --> 37:22.490
对不对

37:22.490 --> 37:23.390
这可以获取

37:23.390 --> 37:24.590
没问题吧

37:24.590 --> 37:25.690
可以获取的

37:25.690 --> 37:27.390
一样的

37:27.390 --> 37:29.590
但是如果你这样子写了之后

37:29.590 --> 37:34.090
它还给你提供了一种非常方便的获取方式

37:34.090 --> 37:37.890
如果遵从ATM-5建议你遵从

37:37.890 --> 37:38.890
不用建议你遵从

37:38.890 --> 37:40.390
就必须给我遵从

37:40.390 --> 37:44.190
遵从ATM-5自定义属性规范

37:44.190 --> 37:45.990
如果遵从规范的话

37:45.990 --> 37:50.190
可以使用这种语法来获取属性

37:50.190 --> 37:52.890
Dom对象

37:52.890 --> 37:54.990
Data-set

37:54.990 --> 37:59.390
第二属性名

37:59.390 --> 38:02.190
可以使用这种方式控制属性

38:02.190 --> 38:02.890
什么要控制

38:02.890 --> 38:05.990
就是可以获取也可以设置

38:05.990 --> 38:07.790
咱们来看一下

38:07.790 --> 38:10.190
也就是说我们现在要获取ABC属性

38:10.190 --> 38:12.090
可以这样子获取

38:12.090 --> 38:14.890
DIV拿到

38:14.990 --> 38:17.390
然后DIV.Data-set

38:17.390 --> 38:18.490
Data什么意思

38:18.490 --> 38:20.590
Data数据

38:20.590 --> 38:22.090
你看我们这里加个Data前序

38:22.090 --> 38:23.490
Data就是数据的意思

38:23.490 --> 38:25.790
数据ABC

38:25.790 --> 38:27.290
ABC是我们的属性名

38:27.290 --> 38:29.290
BCD是我们的属性名

38:29.290 --> 38:31.490
Data-Hungang表示数据

38:31.490 --> 38:32.390
Data-set

38:32.390 --> 38:33.090
set什么意思

38:33.090 --> 38:34.090
一个集合

38:34.090 --> 38:35.590
就是有很多数据

38:35.590 --> 38:36.790
这里面可以得到它

38:36.790 --> 38:38.890
这里面可以得到一个对象

38:38.890 --> 38:39.890
看到没

38:39.890 --> 38:41.290
得到的是一个对象

38:41.290 --> 38:42.990
对象里面有两个属性

38:42.990 --> 38:46.090
ABC123 BCD234

38:46.090 --> 38:47.290
懂了吗

38:47.290 --> 38:47.990
懂了吗

38:47.990 --> 38:49.290
这是个对象

38:49.290 --> 38:51.990
拿来边取ABC属性名

38:51.990 --> 38:52.790
ABC

38:52.790 --> 38:53.090
看没有

38:53.090 --> 38:55.390
我们写的字定属性跑照来了

38:55.390 --> 38:56.990
这样的获取是不是更加方便

38:56.990 --> 38:57.390
对吧

38:57.390 --> 38:59.190
更加方便了

38:59.190 --> 38:59.890
没问题吧

38:59.890 --> 39:02.290
那复制怎么复制

39:02.290 --> 39:06.990
ABC复制为678

39:06.990 --> 39:08.190
你看复制完了

39:08.190 --> 39:09.590
看一下这边

39:09.590 --> 39:11.690
是不是变成678了

39:11.790 --> 39:13.790
以后要使用字定义属性

39:13.790 --> 39:16.590
尽量使用这种方式

39:16.590 --> 39:18.390
我希望我这个课讲了之后

39:18.390 --> 39:20.790
我之后再讲公开课的时候

39:20.790 --> 39:22.690
就不用每次都去说这个问题了

39:22.690 --> 39:25.090
每次说有的时候我真的很想用这个玩意

39:25.090 --> 39:27.190
但是每次我都要讲一遍特别麻烦

39:27.190 --> 39:28.590
所以我这里就直接讲了

39:28.590 --> 39:30.490
字定义属性

39:30.490 --> 39:31.190
好吧

39:31.190 --> 39:35.390
这是关于获取和设置元素的属性

39:35.390 --> 39:36.890
这一块的知识

39:36.890 --> 39:37.790
通过这些的知识

39:37.790 --> 39:39.390
我们就可以获取元素的属性

39:39.390 --> 39:41.790
同时设置元素的属性了

39:41.790 --> 39:42.290
好吧

39:42.290 --> 39:42.690
想想

39:42.690 --> 39:44.690
还有什么要没讲的

39:44.690 --> 39:45.690
没有了

39:45.690 --> 39:47.590
应该讲完了

39:47.590 --> 39:47.690
好

39:47.690 --> 39:49.190
这一块

39:49.190 --> 39:49.390
好

39:49.390 --> 39:51.690
下一块

39:51.690 --> 39:52.990
下一块

39:52.990 --> 39:56.190
获取和设置元素的内容

39:56.190 --> 39:57.590
这里很简单

39:57.590 --> 39:59.790
就设置到三个属性

39:59.790 --> 40:02.890
一个是Inner Atm

40:02.890 --> 40:03.390
这是什么

40:03.390 --> 40:08.490
这是获取和设置元素的

40:08.490 --> 40:11.390
内部Atm文本

40:11.390 --> 40:12.390
啥意思

40:12.390 --> 40:14.590
看着

40:14.590 --> 40:18.980
内容

40:18.980 --> 40:22.780
这里我们写个页面

40:22.780 --> 40:23.980
这里有DIV

40:23.980 --> 40:25.180
有DIV

40:25.180 --> 40:26.580
DIV里边啥都没有

40:26.580 --> 40:27.680
啥都没有

40:27.680 --> 40:29.180
我给它写个样式

40:29.180 --> 40:30.280
写个样式

40:30.280 --> 40:30.480
好

40:30.480 --> 40:31.380
找到这个DIV

40:31.380 --> 40:32.680
给它设置个宽度

40:32.680 --> 40:34.180
给它跟那个样式

40:34.180 --> 40:34.880
cars

40:34.880 --> 40:36.680
DIV1

40:36.680 --> 40:40.280
DIV1

40:40.380 --> 40:42.780
宽度300个像素

40:42.780 --> 40:44.180
高度300个像素

40:44.180 --> 40:45.180
写个边框

40:45.180 --> 40:46.080
order

40:46.080 --> 40:46.680
两个像素

40:46.680 --> 40:48.580
solid

40:48.580 --> 40:48.680
好

40:48.680 --> 40:49.980
咱们来看一下

40:49.980 --> 40:50.180
好

40:50.180 --> 40:52.180
接下来我们来获取这个DIV

40:52.180 --> 40:53.780
DIV1

40:53.780 --> 40:54.580
document

40:54.580 --> 40:55.280
carry

40:55.280 --> 40:55.980
select

40:55.980 --> 40:58.080
这些要用的滚刮烂手

40:58.080 --> 40:59.180
天后要用

40:59.180 --> 41:00.080
DIV1

41:00.080 --> 41:00.780
拿到了

41:00.780 --> 41:02.780
咱们来试验一下

41:02.780 --> 41:04.080
我

41:04.080 --> 41:06.480
把这一面放大的

41:06.480 --> 41:06.680
好

41:06.680 --> 41:07.980
看着

41:07.980 --> 41:09.980
我现在我要给这个DIV1

41:10.080 --> 41:11.180
里边加东西

41:11.180 --> 41:12.880
往这里边塞东西

41:12.880 --> 41:14.380
怎么塞呢

41:14.380 --> 41:15.880
我们以前的是不是

41:15.880 --> 41:16.580
要

41:16.580 --> 41:17.880
比方说要得到它的

41:17.880 --> 41:19.980
比方说要得到它的文本

41:19.980 --> 41:21.280
abc

41:21.280 --> 41:22.580
我们以前的咋做

41:22.580 --> 41:23.580
以前怎么做的

41:23.580 --> 41:24.980
DIV1

41:24.980 --> 41:26.080
然后呢

41:26.080 --> 41:27.180
干嘛呢

41:27.180 --> 41:29.680
first child

41:29.680 --> 41:30.080
对吧

41:30.080 --> 41:31.980
然后load value

41:31.980 --> 41:32.780
麻不麻烦

41:32.780 --> 41:34.180
麻烦的要事

41:34.180 --> 41:35.480
能不能不要这么麻烦

41:35.480 --> 41:37.080
可以看着

41:37.080 --> 41:39.880
DIV1 inner item

41:40.480 --> 41:41.580
你看是不是拿到了

41:41.580 --> 41:42.980
它内部的文本全部拿到了

41:42.980 --> 41:43.580
所以说

41:43.580 --> 41:45.680
我们刚才之前学习的那种做法

41:45.680 --> 41:47.280
实际上平时根本就不会用

41:47.280 --> 41:48.880
根本就不会用

41:48.880 --> 41:50.580
我们直接用的是这种方式

41:50.580 --> 41:51.280
拿到了

41:51.280 --> 41:52.980
那如果这里边有元素

41:52.980 --> 41:53.680
比方说

41:53.680 --> 41:55.580
有一些元素

41:55.580 --> 41:57.580
还有一个图片

41:57.580 --> 41:58.680
有这些元素

41:58.680 --> 41:59.680
比方说

41:59.680 --> 42:00.880
再看

42:00.880 --> 42:02.880
我要拿到这个DIV1

42:02.880 --> 42:05.180
DIV1 inner item

42:05.180 --> 42:06.980
你看拿到的是啥

42:06.980 --> 42:09.380
是不是拿到了它内部的所有东西

42:09.580 --> 42:12.080
包括这些标签元素全部拿到了

42:12.080 --> 42:12.580
对吧

42:12.580 --> 42:13.780
全部拿到了

42:13.780 --> 42:14.780
是一个字不串

42:14.780 --> 42:16.180
得到一个字不串

42:16.180 --> 42:16.380
好

42:16.380 --> 42:17.680
能不能设置

42:17.680 --> 42:19.080
可以设置

42:19.080 --> 42:20.380
Inner item

42:20.380 --> 42:21.280
设置

42:21.280 --> 42:22.580
比方说设置为啥

42:22.580 --> 42:23.880
设置为123

42:23.880 --> 42:24.480
你看一下

42:24.480 --> 42:25.580
是不是变了

42:25.580 --> 42:26.880
这个DIV的内容又变了

42:26.880 --> 42:27.680
你看DIV里面

42:27.680 --> 42:28.680
现在只有一个123

42:28.680 --> 42:29.880
看到没

42:29.880 --> 42:30.880
没问题吧

42:30.880 --> 42:32.580
能不能往里面加元素

42:32.580 --> 42:34.280
可以

42:34.280 --> 42:35.580
加元素

42:35.580 --> 42:36.080
比方说

42:36.080 --> 42:39.080
加一个

42:39.080 --> 42:41.580
失败元素

42:41.580 --> 42:42.780
不仅可以加元素

42:42.780 --> 42:45.580
还可以加央视

42:45.580 --> 42:46.380
往这里边

42:46.380 --> 42:48.080
失败元素一个央视 style

42:48.080 --> 42:48.380
对吧

42:48.380 --> 42:51.280
我这里用这种写法

42:51.280 --> 42:52.980
用这种模板字不串

42:52.980 --> 42:53.880
这样子方便一点

42:53.880 --> 42:55.980
这里写双一号就不用转移了

42:55.980 --> 42:56.780
Color

42:56.780 --> 42:57.380
红色

42:57.380 --> 42:57.680
你看

42:57.680 --> 43:00.180
随便你加啥都可以

43:00.180 --> 43:01.580
随便写吧

43:01.580 --> 43:02.580
回车

43:02.580 --> 43:04.380
你看是不是加了一个红色的失败

43:04.480 --> 43:04.880
没有

43:04.880 --> 43:06.480
这里面可以加任何东西

43:06.480 --> 43:08.880
加任何东西都可以

43:08.880 --> 43:09.680
没问题吧

43:09.680 --> 43:11.680
这是Inner etymal

43:11.680 --> 43:14.380
它是加etymal的文本

43:14.380 --> 43:15.480
另外一个

43:15.480 --> 43:18.380
Inner text

43:18.380 --> 43:24.880
它是获取和设置元素内部的存文本

43:24.880 --> 43:27.780
获取和设置的是元素内部的存文本

43:27.780 --> 43:30.380
它是不能包含什么etymal元素的

43:30.380 --> 43:31.980
咱们来看一下

43:31.980 --> 43:33.580
比方说现在这种情况

43:33.580 --> 43:35.380
DIV里面是不是有个P元素

43:35.380 --> 43:35.780
对吧

43:35.780 --> 43:36.880
有个E密集元素

43:36.880 --> 43:37.480
对吧

43:37.480 --> 43:38.680
那么现在我们来看一下

43:38.680 --> 43:41.980
DIV1的Inner text

43:41.980 --> 43:42.980
得到的是什么

43:42.980 --> 43:44.680
得到的是纯文本

43:44.680 --> 43:45.180
看没

43:45.180 --> 43:47.380
得到的是纯文本部分

43:47.380 --> 43:48.780
它不包含什么

43:48.780 --> 43:49.780
不包含这里

43:49.780 --> 43:52.180
不包含这里什么

43:52.180 --> 43:53.780
它连这个东西都不包含

43:53.780 --> 43:54.980
不包含这一块

43:54.980 --> 43:55.980
这一块不包含

43:55.980 --> 43:57.380
这一块也不包含

43:57.380 --> 43:57.980
看百度不包含

43:57.980 --> 43:58.880
这一块不包含

43:58.880 --> 44:01.380
得到的是元素内部的存文本

44:01.380 --> 44:02.580
得到的是这么个东西

44:02.580 --> 44:05.380
元素内部的存文本

44:05.380 --> 44:06.980
能不能设置呢

44:06.980 --> 44:08.080
可以设置

44:08.080 --> 44:09.180
你看E密集元素就没了

44:09.180 --> 44:09.580
对吧

44:09.580 --> 44:10.980
E密集就直接忽略了

44:10.980 --> 44:14.080
得到的是元素内部的存文本

44:14.080 --> 44:14.980
那么可以不可以设置

44:14.980 --> 44:16.180
可以设置

44:16.180 --> 44:16.780
可以设置

44:16.780 --> 44:17.780
可以设置为123

44:17.780 --> 44:19.080
你看一下设置过后

44:19.080 --> 44:20.380
它变成这个样子了

44:20.380 --> 44:21.280
看没

44:21.280 --> 44:21.780
变这个样子

44:21.780 --> 44:22.780
它只能设置存文

44:22.780 --> 44:24.580
那如果你一定要给它设置元素

44:24.580 --> 44:25.580
在这里边

44:25.580 --> 44:26.380
比方说

44:26.380 --> 44:30.080
你要在这里边先设置一个P元素

44:30.080 --> 44:31.780
看着

44:31.780 --> 44:33.980
设置过后你看它变成啥了

44:33.980 --> 44:36.280
变成了实体编码了

44:36.280 --> 44:38.880
它变成了实体编码

44:38.880 --> 44:41.080
这里看不见

44:41.080 --> 44:42.180
看不见这个东西

44:42.180 --> 44:43.380
我们这样子

44:43.380 --> 44:44.780
Edits

44:44.780 --> 44:45.780
你看

44:45.780 --> 44:46.780
这样子看得很清楚了

44:46.780 --> 44:48.580
对吧

44:48.580 --> 44:49.580
就是实体编码

44:49.580 --> 44:50.380
看到没

44:50.380 --> 44:51.380
你设置元素的时候

44:51.380 --> 44:53.080
它根本就不会把它当成元素

44:53.080 --> 44:54.680
而是把它当成一个实体编码

44:54.680 --> 44:55.580
就是存文本

44:55.580 --> 44:57.280
总之是存文本

44:57.280 --> 44:58.980
没有这个意思吧

44:58.980 --> 44:59.880
这就是这一块

44:59.880 --> 45:01.780
Inner Text

45:01.780 --> 45:02.180
好

45:02.180 --> 45:02.980
这里我说一下

45:02.980 --> 45:03.880
Inner Text

45:03.880 --> 45:04.980
它有兼容性问题

45:04.980 --> 45:06.580
就是一些老版本的IE乱七

45:06.580 --> 45:07.780
它不兼容

45:07.780 --> 45:08.380
IE7

45:08.380 --> 45:08.780
IE6

45:08.780 --> 45:10.680
它都不兼容

45:10.680 --> 45:11.380
那么

45:11.380 --> 45:12.580
以前还有一些舊版本的

45:12.580 --> 45:13.380
火火流暗器

45:13.380 --> 45:14.580
它也不兼容

45:14.580 --> 45:16.980
这里我顺便说一下

45:16.980 --> 45:19.180
那么这里不用去太过在意

45:19.180 --> 45:20.980
因为我说我这个兼容性问题

45:20.980 --> 45:22.580
我不会骗你的

45:22.580 --> 45:23.780
你现在这个阶段

45:23.780 --> 45:25.280
你就好好去

45:25.280 --> 45:26.880
你在谷歌的暗器能用

45:26.880 --> 45:28.780
就行

45:28.880 --> 45:30.980
因为以后你们会用一些酷

45:30.980 --> 45:31.880
第三方的酷

45:31.880 --> 45:34.380
它能给你搞定兼容性问题

45:34.380 --> 45:35.680
你现在就是背得再好

45:35.680 --> 45:37.380
以后的开发过程中

45:37.380 --> 45:37.980
用着那些酷

45:37.980 --> 45:38.580
用着用着

45:38.580 --> 45:40.480
你兼容性问题忘了意感恶性

45:40.480 --> 45:42.080
基本上是忘完了

45:42.080 --> 45:43.480
没关系

45:43.480 --> 45:45.080
不会影响你开发的

45:45.080 --> 45:45.880
它有兼容性问题

45:45.880 --> 45:46.180
有没有

45:46.180 --> 45:46.580
有

45:46.580 --> 45:48.980
我给你提一下就行了

45:48.980 --> 45:50.580
另外我再说一点

45:50.580 --> 45:52.680
就关于兼容性的话

45:52.680 --> 45:55.180
你要关注的是什么兼容性的问题

45:55.180 --> 45:57.580
你要关注的是

45:57.580 --> 46:00.180
有一些功能是缺失的

46:00.180 --> 46:02.680
这种兼容性问题你要关注

46:02.680 --> 46:04.480
因为这个东西是解决不了的

46:04.480 --> 46:08.980
比方说在一些老版本的 IE 浏览器里边

46:08.980 --> 46:10.780
它是不能用

46:10.780 --> 46:12.380
比方说用定位的

46:12.380 --> 46:13.980
浏览器定位

46:13.980 --> 46:14.780
就定位

46:14.780 --> 46:15.780
或许当前的位置

46:15.780 --> 46:16.880
比方说你要

46:16.880 --> 46:17.680
一张地图

46:17.680 --> 46:18.180
对吧

46:18.180 --> 46:19.580
地图里边要或许当前的位置

46:19.580 --> 46:20.480
对不对

46:20.480 --> 46:21.680
我们这门课不会讲

46:21.680 --> 46:22.380
这门课不会讲

46:22.380 --> 46:24.080
以后你会学习

46:24.080 --> 46:24.880
那定位的时候

46:24.880 --> 46:26.380
它是一些新的 API

46:26.380 --> 46:28.480
所以说老版本的浏览器它不兼容

46:28.480 --> 46:30.480
那么这种是功能缺失

46:30.480 --> 46:32.680
功能缺失是解决不了的

46:32.680 --> 46:33.580
解决不了的

46:33.580 --> 46:35.480
只能换技术来解决

46:35.480 --> 46:36.980
比方说我就不能用介式了

46:36.980 --> 46:38.380
我得用 Flash

46:38.380 --> 46:39.680
得换技术来解决

46:39.680 --> 46:41.480
比方说一些老版本的浏览器里边

46:41.480 --> 46:42.580
它不支持什么

46:42.580 --> 46:43.980
不支持播放器

46:43.980 --> 46:45.780
你们之前学 ATEM 和 CSS 知道播放器

46:45.780 --> 46:46.080
对吧

46:46.080 --> 46:46.780
Video

46:46.780 --> 46:47.880
Video 远说它不支持

46:47.880 --> 46:48.480
那怎么办

46:48.480 --> 46:49.980
只能换成 Flash

46:49.980 --> 46:51.480
迁入一个 Flash

46:51.480 --> 46:53.180
你看有一些直播网站里边

46:53.180 --> 46:54.380
或者是一些视频网站里边

46:54.380 --> 46:55.480
它都有两种方案

46:55.580 --> 46:57.880
一种是使用 ATEM 5 的 Video 元素

46:57.880 --> 46:59.480
一种是使用 Flash

46:59.480 --> 47:00.780
两种都可以

47:00.780 --> 47:01.780
你看这里是吧

47:01.780 --> 47:03.980
如果你要关注的是这种功能的缺失

47:03.980 --> 47:05.280
整个功能它没有

47:05.280 --> 47:07.080
它没有这个功能

47:07.080 --> 47:08.180
像这种

47:08.180 --> 47:09.180
像什么呢

47:09.180 --> 47:10.180
就是像那种

47:10.180 --> 47:11.480
功能都是一样的

47:11.480 --> 47:13.080
只不过它协法不一样

47:13.080 --> 47:16.280
这种无所谓

47:16.280 --> 47:17.880
因为后边有很多第三方库

47:17.880 --> 47:18.980
都可以帮你解决

47:18.980 --> 47:20.380
你要关注的是功能缺失

47:20.380 --> 47:21.280
咱们这个课里面

47:21.280 --> 47:23.780
基本上不会遇到什么功能缺失的问题

47:23.780 --> 47:25.680
如果遇到了我会告诉你

47:25.680 --> 47:26.380
好不好

47:26.380 --> 47:27.980
功能缺失我是一定记得住的

47:27.980 --> 47:28.780
但是呢

47:28.780 --> 47:30.080
像那种

47:30.080 --> 47:31.480
协法不一样

47:31.480 --> 47:32.580
我告诉你我真的记不住

47:32.580 --> 47:33.580
我真的记不住

47:33.580 --> 47:34.880
我当然可以查

47:34.880 --> 47:35.380
我查了过

47:35.380 --> 47:36.280
能不能给你讲出来

47:36.280 --> 47:37.180
可以给你讲出来

47:37.180 --> 47:39.680
但是我不希望分散你的注意力

47:39.680 --> 47:42.080
你注意力应该关注到功能上面

47:42.080 --> 47:43.280
就是我要去实现个功能

47:43.280 --> 47:44.280
我该怎么去写代码

47:44.280 --> 47:45.980
这种程序思维逻辑上面

47:45.980 --> 47:46.980
这才是核心

47:46.980 --> 47:48.580
因为后边的

47:48.580 --> 47:51.280
后边学的东西都要用到这种程序思维

47:51.280 --> 47:52.880
可能后边写的代码

47:52.880 --> 47:53.980
你现在学校这门课

47:53.980 --> 47:55.180
你不要学到很多介石代码

47:55.180 --> 47:56.480
以后都会变化

47:56.480 --> 47:58.080
但是思维是不变的

47:58.080 --> 48:00.680
思维是注意核心最重要的东西

48:00.680 --> 48:02.280
而不是这些代码本身

48:02.280 --> 48:03.080
原来这个意思吧

48:03.080 --> 48:05.380
这给大家显示一下

48:05.380 --> 48:06.480
还有一种

48:06.480 --> 48:07.880
就是刚才说到兼容性问题

48:07.880 --> 48:08.580
对吧

48:08.580 --> 48:09.580
那么有些火火的那些

48:09.580 --> 48:10.780
他可能支持另外一个东西

48:10.780 --> 48:14.180
叫做text content

48:14.180 --> 48:21.880
这个也是获取和设置元素内部的纯温本

48:21.980 --> 48:23.380
这个也是一样的

48:23.380 --> 48:23.780
一样的

48:23.780 --> 48:25.080
咱们来看一下

48:25.080 --> 48:27.380
这个dive text content

48:27.380 --> 48:28.180
你看

48:28.180 --> 48:28.980
得到是不是一样的

48:28.980 --> 48:29.480
对吧

48:29.480 --> 48:31.080
但是你看到区别没

48:31.080 --> 48:33.080
看一下看到区别没

48:33.080 --> 48:34.780
in the text

48:34.780 --> 48:35.580
看区别没

48:35.580 --> 48:36.480
区别是啥

48:36.480 --> 48:39.080
他把这些换行是不是全部给你算上了

48:39.080 --> 48:40.680
这些元素之间的换行

48:40.680 --> 48:42.380
他也当成纹本了

48:42.380 --> 48:44.080
就是他考虑的换文更加多一点

48:44.080 --> 48:45.080
他还有没有区别呢

48:45.080 --> 48:45.980
还有区别

48:45.980 --> 48:47.480
还有区别

48:47.480 --> 48:51.050
这样子我记一笔吧

48:54.450 --> 48:57.750
内部所有的纹本

48:57.750 --> 48:59.450
所有的纹本

48:59.450 --> 49:01.750
这个只得到是元素内容

49:01.750 --> 49:06.950
仅得到元素内容部分的纹本

49:06.950 --> 49:08.550
再举个例子

49:08.550 --> 49:10.750
比方说区元素我这里换了行

49:10.750 --> 49:12.050
区元素我这里换了行

49:12.050 --> 49:14.250
你看着

49:14.250 --> 49:15.150
in the text

49:15.150 --> 49:17.050
所以换行也没有

49:17.050 --> 49:18.450
他会把换行这些东西

49:18.450 --> 49:20.950
就是元素与元素之间的这些东西给你去掉

49:20.950 --> 49:21.650
就是这些

49:22.450 --> 49:25.750
就是影响你观察的东西给你去掉

49:25.750 --> 49:26.450
他得到的是什么

49:26.450 --> 49:27.150
应该这样说

49:27.150 --> 49:29.750
他得到的是显示出来的这些端纹本

49:29.750 --> 49:32.650
得到的是显示出来的纹本

49:32.650 --> 49:37.770
内部显示出来的纹本

49:37.770 --> 49:43.560
这个得到的是内部元代码中的纹本

49:43.560 --> 49:44.560
这是他们的区别

49:44.560 --> 49:45.360
text content

49:45.360 --> 49:46.460
in the text

49:46.460 --> 49:47.360
一个是可见的

49:47.360 --> 49:48.560
可以看得见的纹本

49:48.560 --> 49:51.460
一个是在元代码里边的纹本

49:51.460 --> 49:53.160
他们区别还在什么地方呢

49:53.160 --> 49:53.860
就是这个地方

49:53.860 --> 49:54.860
大家再看一下

49:54.960 --> 49:56.360
再写个P元素

49:56.360 --> 49:57.660
这个P元素

49:57.660 --> 49:59.260
display knob

49:59.260 --> 50:00.260
隐藏

50:00.260 --> 50:01.860
隐藏这个P元素

50:01.860 --> 50:03.060
写一些内容

50:03.060 --> 50:03.660
看一下

50:03.660 --> 50:05.060
两种方式是有区别的

50:06.760 --> 50:07.460
text content

50:07.460 --> 50:09.060
你看是不是全得到了

50:09.060 --> 50:10.360
哪怕你这个P元素隐藏了

50:10.360 --> 50:11.460
我也能得到

50:11.460 --> 50:12.860
也能得到里边的纹本

50:12.860 --> 50:14.560
但是如果你使用的是

50:14.560 --> 50:16.560
div 1.in the text

50:16.560 --> 50:17.560
你看能得到吗

50:17.560 --> 50:18.260
看不见对吧

50:18.260 --> 50:20.560
他得到的是显示出来的东西

50:20.560 --> 50:21.560
这是他们区别

50:21.560 --> 50:22.360
不用太在意

50:22.360 --> 50:24.160
因为平时我们用这个东西用的不多

50:24.160 --> 50:27.160
一般用in the item

50:27.160 --> 50:28.160
如果要得到纹本的时候

50:28.160 --> 50:30.060
你考虑一下要得到的是哪一种

50:30.060 --> 50:30.960
是看得见的

50:30.960 --> 50:33.060
还是元代码里边的

50:33.060 --> 50:35.860
比方说还有一种情况

50:35.860 --> 50:37.460
就是这里写style

50:37.460 --> 50:38.360
这里写style元素

50:38.360 --> 50:38.960
可不可以

50:38.960 --> 50:40.260
当然可以

50:40.260 --> 50:41.360
凭什么不可以

50:41.360 --> 50:42.360
当然可以

50:42.360 --> 50:45.160
div1比方说color

50:45.160 --> 50:47.260
blue 蓝色

50:47.260 --> 50:49.260
这里写样式

50:49.260 --> 50:50.460
那么咱们再来看

50:50.460 --> 50:52.160
in the text

50:52.160 --> 50:53.360
能得到样式里边代码吗

50:53.360 --> 50:54.060
得不到

50:54.060 --> 50:55.660
因为样式里边的内容

50:55.660 --> 50:58.560
就这里边的内容是看不见的

50:58.560 --> 51:00.360
你不能在页面上看到这一段内容

51:00.360 --> 51:00.660
对吧

51:00.660 --> 51:01.160
看不见

51:01.160 --> 51:02.860
看不见还是不会获取

51:02.860 --> 51:04.160
如果你使用text content

51:04.160 --> 51:05.660
你看是不是可以获取

51:05.660 --> 51:06.160
对吧

51:06.160 --> 51:07.760
可以获取

51:07.760 --> 51:09.060
说到这

51:09.060 --> 51:10.360
我想起的一件事

51:10.360 --> 51:12.860
我想起的一件事特别特别有意思

51:12.860 --> 51:14.460
我给大家说一下

51:14.460 --> 51:17.960
一点额外的话

51:17.960 --> 51:22.060
想起了一件事

51:22.060 --> 51:24.460
说有一天

51:24.460 --> 51:25.860
瞎逛

51:25.860 --> 51:27.560
逛着逛着 逛着无聊

51:27.560 --> 51:29.260
我发现了

51:29.260 --> 51:30.960
发现了有一个人

51:30.960 --> 51:32.960
他用这种方式非常巧妙

51:32.960 --> 51:33.960
我以前都没想到

51:33.960 --> 51:35.260
没都没想到

51:35.260 --> 51:36.460
可以这么玩

51:36.460 --> 51:37.960
当然肯定是可以这么玩的

51:37.960 --> 51:39.260
没想到

51:39.260 --> 51:39.760
什么东西

51:39.760 --> 51:42.460
我给大家看一下

51:42.460 --> 51:46.560
这里有个div content

51:46.560 --> 51:48.760
这里边有一个

51:49.760 --> 51:50.160
li

51:50.160 --> 51:50.860
就随便写

51:50.860 --> 51:52.260
随便瞎写

51:52.260 --> 51:55.160
里边有个a元数

51:55.160 --> 51:56.860
就随便瞎写

51:56.860 --> 51:59.060
然后我们运行出来看一下

51:59.060 --> 52:02.160
给大家讲一点额外知识

52:02.160 --> 52:03.660
然后下面有个style

52:03.660 --> 52:04.860
写到body里面

52:04.860 --> 52:06.660
一个style

52:06.660 --> 52:08.260
style我们这里面

52:08.260 --> 52:09.460
给他加一些样式

52:09.460 --> 52:11.360
container 下面的

52:11.360 --> 52:12.960
container 给他设置为

52:12.960 --> 52:14.260
color 红色

52:14.260 --> 52:16.360
把文字变成红色

52:16.360 --> 52:17.460
a元数没变

52:17.460 --> 52:18.360
a元数没变

52:18.360 --> 52:19.560
因为a元数

52:19.560 --> 52:22.060
它目前用的是什么

52:22.060 --> 52:23.760
浏览器默认样式

52:23.760 --> 52:25.560
把颜色变一下

52:25.560 --> 52:26.860
继承副元数

52:26.860 --> 52:28.360
继承副级的样式

52:28.360 --> 52:30.760
这些东西我都在我的课程里面讲完了

52:30.760 --> 52:32.160
没啥好说的

52:32.160 --> 52:33.460
看一下

52:33.460 --> 52:34.760
接下来我要干个啥事了

52:34.760 --> 52:35.560
都想不到

52:35.560 --> 52:38.160
他现在的检查

52:38.160 --> 52:39.160
给他看一下

52:39.160 --> 52:39.960
我可心愤了

52:39.960 --> 52:41.260
现在

52:41.260 --> 52:42.160
现在这个style

52:42.160 --> 52:44.460
他为什么没显示到a面上

52:44.460 --> 52:44.960
这个style

52:44.960 --> 52:46.460
他为什么没显示到a面上

52:46.460 --> 52:47.560
是因为style

52:47.560 --> 52:48.960
他浏览器有个默认样式

52:48.960 --> 52:49.260
看到没

52:49.260 --> 52:50.560
下面

52:50.560 --> 52:52.460
浏览器有一个默认样式

52:52.460 --> 52:53.060
这个style

52:53.060 --> 52:54.660
他display long的

52:54.660 --> 52:56.360
他看不见

52:56.360 --> 53:00.160
但是我们就可以这样子过来看着

53:00.160 --> 53:01.160
我给这个style

53:01.160 --> 53:02.060
加个样式

53:02.060 --> 53:03.160
这个玩意它是元数

53:03.160 --> 53:04.160
它可以加样式的

53:04.160 --> 53:05.860
它可以加样式的

53:05.860 --> 53:07.660
display block

53:07.660 --> 53:10.260
我把它的内容显示到a面上

53:10.260 --> 53:11.960
我把这个style的内容显示到a面上

53:11.960 --> 53:13.060
想不到吧

53:13.060 --> 53:14.360
你看没

53:14.360 --> 53:16.460
把它显示到a面上

53:16.460 --> 53:18.860
不仅如此

53:18.860 --> 53:19.660
我还要干嘛呢

53:19.660 --> 53:20.860
我还给它设置一些样式

53:20.860 --> 53:22.660
比方说

53:22.660 --> 53:23.860
给它设置什么

53:23.860 --> 53:26.060
给它设置什么wide space

53:26.060 --> 53:27.460
pre

53:27.460 --> 53:29.260
这个我在课程里面就讲过的

53:29.260 --> 53:30.360
表示

53:30.360 --> 53:31.360
把这样子设置过后了

53:31.360 --> 53:32.960
它里边的原代码格式

53:32.960 --> 53:34.660
就跟一面上显示的格式是一样的

53:34.660 --> 53:35.360
看到没

53:35.360 --> 53:37.460
显示到这种格式了

53:37.460 --> 53:39.060
就有点类似于pre元数

53:39.060 --> 53:42.260
就有点类似于pre元数

53:42.260 --> 53:44.860
然后再做一件事

53:44.860 --> 53:46.660
所有的元数里面都有个属性

53:46.660 --> 53:49.860
叫做content editable

53:49.860 --> 53:50.660
这什么意思呢

53:50.660 --> 53:53.460
表示这个元数的内容是可以编辑的

53:53.460 --> 53:56.860
这个元数的内容是可以编辑的

53:56.860 --> 53:58.360
神奇的事情发生了

53:58.360 --> 54:04.800
看着这里可以编辑的

54:04.800 --> 54:05.500
看到没

54:05.500 --> 54:07.300
有意思吧这个玩意

54:07.300 --> 54:08.500
好了

54:08.500 --> 54:09.900
给大家分享一下这个东西

54:09.900 --> 54:11.800
我觉得挺有意思的

54:11.800 --> 54:13.400
这是关于

54:13.400 --> 54:15.200
获取和设置

54:15.200 --> 54:17.700
元数的内容

54:17.700 --> 54:19.500
下面这个

54:19.500 --> 54:21.900
元数结构重够

54:21.900 --> 54:22.300
重够

54:22.300 --> 54:24.600
我们也可以把它叫做重组

54:24.600 --> 54:26.800
就是重新调整元数结构

54:26.800 --> 54:27.700
比方说一个元数

54:27.700 --> 54:28.900
以前在DIVD一边

54:28.900 --> 54:30.900
你把它放到另外一边

54:30.900 --> 54:33.300
就是重新调整元数结构

54:33.300 --> 54:35.200
这一块我们平时用的也很多

54:35.200 --> 54:37.300
就是我们这一节课讲的东西

54:37.300 --> 54:39.300
用的都很多

54:39.300 --> 54:39.900
算了

54:39.900 --> 54:41.700
这一课讲了很多了

54:41.700 --> 54:42.900
咱们休息一会

54:42.900 --> 54:44.700
我把它分成两节课来讲

