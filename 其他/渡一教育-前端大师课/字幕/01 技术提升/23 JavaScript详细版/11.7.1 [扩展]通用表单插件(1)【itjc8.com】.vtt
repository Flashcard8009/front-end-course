WEBVTT

00:00.000 --> 00:14.820
好 这节课呢 我们来讲一讲表单插件

00:15.840 --> 00:18.400
这节课呢 选听啊 选听

00:19.160 --> 00:21.480
因为这节课 我说实话

00:22.240 --> 00:23.520
不是太像讲这节课

00:24.040 --> 00:26.080
没办法自己挖的坑得填上

00:26.340 --> 00:30.180
因为我之前在公开直播课的时候说过啊 我打算在那个

00:30.940 --> 00:37.080
我们的教程里边加入这么一个表单验证 因为我在公开直播课里边讲了一个表单验证插件

00:37.240 --> 00:39.120
但是那个通用性不是很好

00:39.640 --> 00:43.220
我们之前也给大家说过啊 就是个插件这个东西呢

00:43.480 --> 00:46.560
它分为两种 就是我们做一个功能吧

00:46.800 --> 00:48.340
它分为两种

00:48.600 --> 00:49.360
三种级别

00:50.140 --> 00:51.920
哪三种级别呢 一个是

00:52.440 --> 00:53.980
就是页面级别

00:55.260 --> 00:58.580
就是我们只是在这个页面使用 其他那一面就不用了

00:58.840 --> 01:02.940
那么这种做法是最简单的 你只需要考虑这一个页面就行了

01:03.200 --> 01:04.480
很多东西都可以写实

01:04.680 --> 01:07.500
就是你可以假设 你可以做出很多假设

01:07.760 --> 01:11.860
就是你这个页面就是这么一个结构 你的内名呢也是这么一种很内名

01:12.120 --> 01:13.400
所以说你可以做出很多假设

01:13.660 --> 01:14.420
因此呢

01:14.680 --> 01:15.700
你写淡了的时候呢

01:16.200 --> 01:17.480
就很多地方就可以写实

01:17.740 --> 01:18.260
所以说

01:18.520 --> 01:20.300
写下来的就非常的轻松

01:22.100 --> 01:24.400
你比方说前面的我们这些案例里边啊

01:24.660 --> 01:26.960
凡是借实了直接写到

01:27.460 --> 01:28.240
直接写到这里的

01:28.760 --> 01:30.040
它都是页面级别的

01:30.300 --> 01:31.320
只考虑

01:31.580 --> 01:32.340
这一个页面

01:33.140 --> 01:35.220
比方说这个购物车它直接写到这里的

01:35.480 --> 01:35.880
对吧

01:36.140 --> 01:37.160
只考虑这一个页面

01:37.420 --> 01:40.220
这样的代码的话是写下来最轻松的

01:41.000 --> 01:42.540
也是我最喜欢讲的

01:43.300 --> 01:44.060
第二个

01:44.320 --> 01:45.860
第二个是粘点级别

01:46.620 --> 01:49.700
粘点级别的就是说我这里写的借实呢

01:49.960 --> 01:51.740
要在这个粘点里面通用

01:52.000 --> 01:55.580
就是我们做一个网站嘛 一个网站肯定有很多很多的页面

01:55.840 --> 01:58.400
那么所有的页面都可以使用这个借实

01:58.660 --> 02:00.200
那你要考虑的东西就很多了

02:00.460 --> 02:02.240
不过粘点级别的东西呢

02:02.380 --> 02:04.340
我们这里有没有写过粘点级别的

02:05.100 --> 02:07.280
图片铺不留

02:08.040 --> 02:11.120
图片铺不留这个是个通用插件还不是

02:11.380 --> 02:12.520
好像没有啊没有

02:12.780 --> 02:15.100
这是一个比较中庸的一个级别

02:15.360 --> 02:17.660
就是说我有的时候呢写一些功能

02:17.660 --> 02:18.940
我们这个粘点里边呢

02:19.180 --> 02:21.480
可能会出多个页面中都会用到这个功能

02:21.740 --> 02:24.180
那么我们就可以写一个通用的结实

02:24.780 --> 02:25.840
它的难度呢

02:26.100 --> 02:27.120
它会有提升

02:27.380 --> 02:28.920
肯定比页面级别有提升

02:29.180 --> 02:30.580
但是呢也不会太高

02:30.880 --> 02:31.380
因为

02:32.020 --> 02:35.140
粘点因为一个粘点的话它有一些东西呢是

02:35.400 --> 02:36.360
规则是固定的

02:36.620 --> 02:40.520
比方说内的名字对吧你每个页面要使用比方说同一块功能

02:41.280 --> 02:42.560
你不同的页面都要使用

02:42.820 --> 02:44.860
那么这个功能呢它长的样子都差不多

02:44.860 --> 02:46.660
所以它的内名呢往往是一样的

02:46.920 --> 02:49.480
因此呢你也可以做很多很多的假设

02:49.740 --> 02:52.500
而且呢毕竟是自己的网站自己的网站了可以

02:52.760 --> 02:55.360
你就是你就是前段工程师啊兄弟

02:55.620 --> 02:59.160
所以说你自己的atema和css也是你写的对不对啊

02:59.160 --> 03:00.240
当然也有可能是别人写的

03:00.280 --> 03:02.020
但是你们是始终是一个团队的

03:02.120 --> 03:03.940
你们团队呢可以相互约定好

03:04.020 --> 03:05.580
就是可以做出很多假设

03:05.680 --> 03:08.080
因此呢很多东西也可以写实啊

03:08.080 --> 03:10.020
所以说只要东西写实的话

03:10.380 --> 03:11.380
难度就降低了

03:12.720 --> 03:14.380
最可怕的级别是什么呢

03:14.520 --> 03:15.680
就是插线级别

03:16.580 --> 03:19.680
啊插线级别任何一个小的功能

03:20.280 --> 03:21.780
到了插线级别

03:22.040 --> 03:24.080
都会变得非常非常不简单

03:24.920 --> 03:26.220
插线级别是什么呢

03:26.380 --> 03:29.080
说是所有的网站全部通用

03:29.520 --> 03:31.120
就是我写的一个插件出来

03:31.480 --> 03:34.060
不仅仅是我这个网站这个占点可以用

03:34.260 --> 03:36.820
以后呢公司里边开发其他占点也可以用

03:37.520 --> 03:38.820
更可怕的是什么了

03:39.020 --> 03:42.280
更可怕的是有些插件的他做到已经装到产品了

03:43.680 --> 03:45.180
那么我们再说一个级别嘛

03:45.180 --> 03:46.820
啊插线级别呢就是

03:47.020 --> 03:49.280
一个公司里边所有占占点全部通用

03:50.020 --> 03:53.080
那么到了另外一个插件其实也叫做插件啊

03:53.220 --> 03:55.020
啊叫做产品级别

03:55.220 --> 03:57.420
他其实也是插件级别的一种

03:58.320 --> 04:00.060
啊到了这个级别更可怕了

04:00.620 --> 04:02.320
我不仅是这个公司可以用

04:02.460 --> 04:04.960
这个世界上全世界的所有公司全部可以用

04:05.060 --> 04:06.160
就是产品级别了

04:07.560 --> 04:10.720
所以说越到后边了就是你要写的越通用的话

04:11.120 --> 04:12.060
就越困难

04:12.260 --> 04:14.960
因为你就假设的情况就很少了啊

04:15.120 --> 04:18.120
你不能保证他以后的页面他一定是这样的结构

04:18.120 --> 04:19.820
他的内名一定是这样的内名

04:19.860 --> 04:22.060
他有各种各样的情况你都要考虑

04:22.520 --> 04:24.260
所以说代码量就直接飙升

04:25.200 --> 04:26.760
之前呢我写过一个

04:27.260 --> 04:28.160
表单插件

04:28.400 --> 04:31.800
但是呢我当时在公开直播课的时候讲的是占点级别的

04:31.900 --> 04:33.360
我还是做了不少的假设

04:34.100 --> 04:35.060
那么这里呢

04:35.300 --> 04:38.160
我们要写一个插件级别

04:38.360 --> 04:39.360
产品级别

04:39.760 --> 04:42.600
我这里时间肯定不够了啊时间肯定不够了

04:42.760 --> 04:45.060
因此呢我们讲到插件级别够了

04:45.560 --> 04:48.760
啊能够在一个公司里边所有的网站通用

04:48.800 --> 04:51.160
都可以了啊都都可以使用这个插件

04:51.220 --> 04:54.100
并且呢尽量的考虑啊尽量的考虑

04:54.200 --> 04:56.000
在自己力所能及的范围之内

04:56.300 --> 04:58.200
来考虑更多的占点

04:58.200 --> 05:01.100
就是以后的各种各样的情况都把它尽量的考虑进去

05:01.560 --> 05:04.600
因为要做产品级别的话他的思维会非常的细

05:04.600 --> 05:05.800
他既要灵活

05:05.900 --> 05:07.500
又要好用

05:07.600 --> 05:09.400
你光灵活功能很强大

05:09.400 --> 05:11.500
但是你不好用用起来太麻烦

05:11.600 --> 05:13.300
也没有没有人会使用你

05:13.700 --> 05:15.600
尽量的好用啊

05:15.800 --> 05:18.400
而且呢还要保证功能足够的灵活

05:18.800 --> 05:20.000
就很困难了吧

05:20.840 --> 05:23.600
好我们这里呢写这么一个插件级别的

05:24.200 --> 05:25.500
这个表单验证插件

05:25.700 --> 05:29.000
表单验证呢如果你写一个页面级别表的验证

05:29.000 --> 05:29.900
这一简单

05:30.400 --> 05:31.800
相当相当的简单

05:32.000 --> 05:34.300
我马上就可以给你写一个啊当然不会写完啊

05:34.300 --> 05:35.800
马上就给你写个比方说吧

05:36.100 --> 05:37.900
就这么个页面啊这个页面要验证

05:37.900 --> 05:39.900
看嘛要验证各种各样的情况对不对

05:39.900 --> 05:42.400
提交的时候要验证你输的时候也要验证

05:42.600 --> 05:44.100
输的时候也要验证

05:44.400 --> 05:44.900
你看

05:45.500 --> 05:46.800
输的时候也要验证

05:48.300 --> 05:50.200
好那么这里呢比方说要验证啊

05:50.200 --> 05:52.100
其实很简单我们来先看一下这个页面

05:52.800 --> 05:53.500
看一下这个页面

05:53.600 --> 05:56.000
这个页面其实就是做一个测试的啊

05:56.100 --> 05:58.000
测试一下这个插件该怎么去用

05:58.500 --> 06:01.100
因为我这个到时候要写的插件是通用的

06:01.300 --> 06:02.500
所以说就随便测试一下

06:02.600 --> 06:03.900
这个页面已经写好了啊

06:04.000 --> 06:05.400
CSS已经写好了

06:05.500 --> 06:08.900
咱们呢来水来就是大概看一下啊

06:08.900 --> 06:10.200
大概看一下这个页面

06:10.200 --> 06:12.100
它是怎么样的一种结构

06:12.600 --> 06:14.200
先认识一下这个测试页面啊

06:14.400 --> 06:15.800
认识这个测试页面呢有

06:16.100 --> 06:19.000
助于帮助我们理解一个表单验证

06:19.000 --> 06:20.100
他到底要干什么事

06:21.000 --> 06:22.400
他要考虑哪些东西

06:23.600 --> 06:24.900
这就是我们的一个表单

06:25.500 --> 06:27.500
在表单里边呢一看这个form对吧

06:27.600 --> 06:29.600
这个form元素就是个表单啊

06:29.600 --> 06:31.000
这个form元素好

06:31.000 --> 06:32.700
form元素里边呢有很多的表单项

06:32.700 --> 06:34.200
你看这个form item

06:34.300 --> 06:36.200
一个div一个form item

06:36.200 --> 06:38.200
就是一个啥就是一个表单项

06:38.200 --> 06:39.900
看呗啊就是个表单项

06:40.200 --> 06:41.900
先把那个你写一个表单嘛

06:41.900 --> 06:43.900
以后你在网我做网站的时候

06:43.900 --> 06:44.700
你要写个表单

06:44.700 --> 06:47.300
那你肯定得把ACS写好吧

06:47.500 --> 06:48.700
啊这个是一定的对吧

06:48.800 --> 06:50.900
那写出来大概就是这么种结构啊

06:51.000 --> 06:52.700
一个一个的表单项看来啊

06:52.700 --> 06:54.500
一个表单项就是一个div

06:55.500 --> 06:56.000
好了

06:56.100 --> 06:57.400
那我们这里呢

06:57.500 --> 06:59.400
比方说这个div里边有哪些东西呢

06:59.400 --> 07:01.000
比方说这个确诊密码啊

07:01.000 --> 07:03.000
看一下确诊密码这个密码这个div

07:03.100 --> 07:04.600
这个div里边有哪些东西呢

07:04.600 --> 07:05.200
有一个

07:05.900 --> 07:07.200
就上边这一块啊

07:07.200 --> 07:08.300
上边这一块div

07:08.400 --> 07:10.700
这一块div里面包括包括的是啥呢

07:10.700 --> 07:12.400
一个是提示文字啊

07:12.400 --> 07:14.400
当然有些网站的他的表单里边

07:14.400 --> 07:15.400
可能没有提示文字

07:15.400 --> 07:16.600
那都无所谓啊

07:16.600 --> 07:18.000
那都无所谓啊

07:18.100 --> 07:19.000
这是一样是吗

07:19.100 --> 07:21.400
啊他左副动的啊左副动的啊

07:21.400 --> 07:23.500
一个就是一个提示文字而已啊

07:24.100 --> 07:25.600
好右边一个div看呗

07:25.700 --> 07:26.700
右边一个div

07:26.900 --> 07:27.900
他是有一个什么呢

07:27.900 --> 07:30.100
他是一个就是文门框啊

07:30.200 --> 07:31.100
里边就是个文门框

07:31.100 --> 07:32.600
当然他不可能不一定

07:33.100 --> 07:34.500
不是一定是文门框

07:34.600 --> 07:35.700
有可能是下大列表

07:35.800 --> 07:36.800
有可能是多选框

07:36.800 --> 07:38.600
还有可能是乱七八糟的玩意

07:38.600 --> 07:39.700
你也不知道啥玩意啊

07:40.200 --> 07:40.800
啊总之呢

07:40.800 --> 07:41.900
他里边有些内容啊

07:41.900 --> 07:42.900
我们把这个东西呢

07:42.900 --> 07:44.800
叫做表单内容啊

07:44.800 --> 07:46.900
这个表单项的表单内容

07:46.900 --> 07:47.800
他可能是文门框

07:47.800 --> 07:48.800
可能是别的东西

07:49.900 --> 07:51.000
好然后呢

07:51.000 --> 07:51.700
我们这里

07:51.700 --> 07:52.200
下面呢

07:52.200 --> 07:53.500
下面是个错误消息

07:53.500 --> 07:54.100
错误消息呢

07:54.100 --> 07:55.500
一开始是没有显示的

07:55.900 --> 07:56.900
往往会怎么显示呢

07:56.900 --> 07:57.800
往往会这样子

07:57.900 --> 08:00.000
就是说我们这个相识里边也已经写好了啊

08:00.000 --> 08:00.900
已经写好了

08:01.000 --> 08:02.500
当我给这个div

08:02.500 --> 08:04.200
给整个这个表单项看这啊

08:04.700 --> 08:07.000
给整个这个表单项加一个内样式

08:07.100 --> 08:10.000
比方说我们这里我写的内样式还是 error

08:10.200 --> 08:11.200
加这么一个内样式

08:11.200 --> 08:11.700
你看

08:11.700 --> 08:13.600
这个表单整个表单项就全部变了

08:13.600 --> 08:14.900
样式全部变完了

08:15.400 --> 08:17.800
我们往往用atm和css写表单

08:17.800 --> 08:19.200
往往都是这么写的

08:19.300 --> 08:20.500
啊往往都是这么写的

08:20.900 --> 08:22.300
就是加一个内样式呢

08:22.300 --> 08:23.400
他就全部变完了

08:24.200 --> 08:24.700
好吧

08:25.500 --> 08:26.100
没问题吧

08:26.400 --> 08:26.900
ok啊

08:26.900 --> 08:29.400
我让我们这里就加上加上这么个内样式

08:29.500 --> 08:32.200
加上内样式你看这里边错误消息也显示出来了

08:32.200 --> 08:32.600
对吧

08:32.600 --> 08:34.800
这个内这个atm和css是很好写吧

08:34.800 --> 08:35.700
对不对啊

08:35.700 --> 08:37.100
利用内选择器嘛

08:37.300 --> 08:40.400
选中还是error下面的什么这个错误消息

08:40.500 --> 08:42.100
把它显示出来就完事了

08:42.200 --> 08:45.300
然后呢把这些边框啊什么文字颜色啊全部变一下

08:45.400 --> 08:45.800
对吧

08:45.800 --> 08:47.400
我们就可以通因为统一的样式

08:47.500 --> 08:49.800
来表示这里有错误啊有错误

08:50.800 --> 08:52.800
啊这就是大概的我们的表单结构啊

08:52.800 --> 08:55.300
当然下面有两一个按钮啊按的就不错了啊

08:55.300 --> 08:57.000
按钮跟我们没啥关系

08:58.000 --> 09:00.800
好那么我们现在如果只写页面几倍的话

09:00.800 --> 09:02.500
这个表单验证贼号写

09:03.100 --> 09:04.800
贼号写比方说账号

09:06.000 --> 09:07.300
账号这个稳笨框

09:07.500 --> 09:09.700
这个稳笨框了哎这个这个表单里边

09:10.300 --> 09:11.400
这些稳笨框啊

09:11.500 --> 09:13.500
他的呃都有一个name属性

09:13.500 --> 09:14.900
看没都有个name属性

09:15.000 --> 09:16.200
name属性表什么意思呢

09:16.200 --> 09:17.500
表示这个表单的

09:18.200 --> 09:20.300
到时候这个表单数据要发送到服务器

09:20.300 --> 09:20.800
对不对

09:21.000 --> 09:24.000
那么这个服务器他的属性名字是什么啊

09:24.000 --> 09:26.400
比方说吧比方说我这里随便写一个啊

09:26.500 --> 09:29.500
随便写一个啊密码啊密码123456

09:29.500 --> 09:30.400
123456

09:31.200 --> 09:32.500
一随便写啊

09:34.480 --> 09:37.880
啊提交提交啊你看地址南啊

09:37.980 --> 09:39.680
你现在还没有结束服务器的知识

09:39.680 --> 09:41.180
但是你可以大概看一下啊

09:41.380 --> 09:42.780
这个地址南那个温号后边呢

09:42.780 --> 09:44.380
有这么一串支付串啊

09:44.380 --> 09:47.180
你看这个我们刚才填的数据是不是发送过去了

09:47.580 --> 09:49.080
啊通过地址南发送过去了

09:49.080 --> 09:50.780
那前边这个东西对应到什么呢

09:50.880 --> 09:52.680
前边这个东西就对应到name属性

09:52.780 --> 09:53.680
比方说账号这里

09:53.880 --> 09:55.080
账号文闷框的数据

09:55.080 --> 09:56.880
他就用这种格式发送出去啊

09:56.880 --> 09:58.880
locking id对应name属性的值

09:59.080 --> 10:01.280
然后呢这里是文闷框的值啊

10:01.280 --> 10:02.480
他这样子一对应出去

10:02.580 --> 10:04.480
那么服务器那边要获取账号的时候

10:04.480 --> 10:05.780
就通过这个东西来获取

10:06.080 --> 10:07.180
啊是这么个意思啊

10:07.780 --> 10:08.680
就这个name属性呢

10:08.680 --> 10:10.980
他是表达里边的一个特殊属性

10:11.180 --> 10:11.980
是需要的

10:12.580 --> 10:12.980
好吧

10:13.080 --> 10:15.280
那我们现在如果写一个一页面级别的话

10:15.280 --> 10:16.080
就这一简单

10:16.180 --> 10:17.680
比方说我们就可以直接在这里写接识

10:17.680 --> 10:19.280
或者是建一个接识文件豆箱

10:19.480 --> 10:20.680
我们就随便写一个吧啊

10:20.780 --> 10:21.580
随便写一个

10:21.680 --> 10:22.480
那咋写呢

10:22.580 --> 10:23.280
比方说啊

10:23.480 --> 10:24.580
我们这里呢给

10:25.280 --> 10:26.180
这里的name属性

10:26.180 --> 10:26.980
we're knocking id吗

10:26.980 --> 10:27.680
对不对啊

10:27.680 --> 10:31.580
我们找到这个txt document query selector啊

10:31.780 --> 10:32.980
这个什么啊

10:32.980 --> 10:35.480
item下面的啊就是那个

10:36.380 --> 10:37.280
有一个

10:37.980 --> 10:39.080
属性选择器对吧

10:39.080 --> 10:40.580
用这些的属性选择器

10:40.580 --> 10:42.080
等于什么login id啊

10:42.080 --> 10:43.580
是不是找到这个文门框

10:43.580 --> 10:44.880
给文门框做的什么事件

10:44.880 --> 10:46.080
unimposed事件

10:46.180 --> 10:47.980
当我们输入的时候进行验证

10:47.980 --> 10:48.380
对吧

10:48.380 --> 10:49.280
进行验证

10:49.280 --> 10:50.380
好验证啥呢

10:50.380 --> 10:52.380
验证他当前文门框的纸

10:52.380 --> 10:53.280
比方说啊

10:53.280 --> 10:54.080
如果

10:54.280 --> 10:54.980
this

10:55.380 --> 10:55.980
value

10:56.880 --> 10:57.880
没有纸啊

10:57.880 --> 10:59.380
如果没有纸是不是验证错误

10:59.380 --> 10:59.880
对不对

10:59.880 --> 11:00.980
验证错误怎么办

11:01.080 --> 11:02.980
是把这个错误消息拿到对不对

11:02.980 --> 11:04.380
拿到这个错误消息的DIV

11:04.380 --> 11:05.980
给他个id啊

11:05.980 --> 11:06.880
然后给他设置

11:06.880 --> 11:07.780
我就不写了啊

11:07.780 --> 11:08.880
设置个内文本

11:08.880 --> 11:09.380
然后呢

11:09.380 --> 11:11.180
给这个DIV加上一个highest error

11:11.180 --> 11:11.780
这个样式

11:11.780 --> 11:12.480
是不是就完了

11:12.480 --> 11:13.080
对不对

11:13.080 --> 11:13.380
然后呢

11:13.380 --> 11:14.680
继续判断来验证

11:14.680 --> 11:16.080
其实就是一个体力活了

11:16.680 --> 11:18.380
就纯粹是一个体力活了啊

11:18.480 --> 11:20.680
那么没有其他的什么啊

11:20.680 --> 11:21.780
什么特别的地方了

11:22.680 --> 11:23.480
没有意思吧

11:23.480 --> 11:23.680
好

11:23.680 --> 11:25.380
所以说如果你写个页面级别的话

11:25.380 --> 11:26.780
那其实就是很好写

11:27.380 --> 11:28.780
但是如果你一旦写到

11:28.880 --> 11:30.480
插件级别就不一样了

11:30.580 --> 11:31.780
很多地方都不一样

11:32.780 --> 11:33.280
好

11:33.380 --> 11:34.580
那么为了写这个插件了

11:34.580 --> 11:35.380
我们这里呢

11:35.580 --> 11:37.180
首先在这个plunging里边

11:37.380 --> 11:38.280
建立一个插件

11:38.780 --> 11:39.680
新建个文件

11:39.780 --> 11:42.180
我们希望他能尽量的所有网站通用

11:42.680 --> 11:44.280
form validator

11:44.980 --> 11:45.780
validator

11:46.180 --> 11:48.480
表示表达验证插件

11:48.780 --> 11:49.880
表达验证插件

11:51.780 --> 11:52.680
同样的道理啊

11:52.780 --> 11:53.280
咱们呢

11:53.280 --> 11:54.280
也把这个插件了

11:54.280 --> 11:54.880
这个东西啊

11:54.880 --> 11:56.280
甭管你写的是个函数啊

11:56.280 --> 11:56.880
还是构造函数

11:56.880 --> 11:58.180
还是什么玩意儿啊

11:58.380 --> 11:59.880
我们把它装到哪呢

11:59.880 --> 12:01.080
装到那个就是

12:01.380 --> 12:01.880
一个

12:04.080 --> 12:04.780
装到这里边

12:04.980 --> 12:05.980
因为跟表达相关嘛

12:05.980 --> 12:07.580
那表达相关肯定是页面嘛

12:07.580 --> 12:09.180
所以页面肯定有一个拳击对象

12:09.180 --> 12:09.780
window

12:10.680 --> 12:11.080
啊好

12:11.280 --> 12:11.580
然后呢

12:11.580 --> 12:13.180
我们给window里边加上一个

12:13.180 --> 12:14.780
买plunging里边加上一个

12:16.280 --> 12:16.880
呃

12:17.580 --> 12:18.180
form

12:18.580 --> 12:19.780
加上构造函数嘛

12:19.780 --> 12:20.180
form

12:20.980 --> 12:21.780
validator

12:22.180 --> 12:23.280
form validator

12:23.580 --> 12:24.780
这是个构造函数

12:25.580 --> 12:26.380
构造函数

12:28.480 --> 12:30.080
表达验证的

12:30.280 --> 12:31.080
构造函数

12:31.180 --> 12:33.080
也就是说通过构造函数呢

12:33.080 --> 12:34.380
可以创建一个

12:34.980 --> 12:36.280
可以创建一个表达

12:36.280 --> 12:37.880
不表达验证对象

12:38.680 --> 12:41.180
通过该构造函数

12:41.880 --> 12:45.780
创建一个表达验证对象

12:46.780 --> 12:47.780
创建这么一个东西

12:48.980 --> 12:49.280
好

12:49.280 --> 12:50.780
我们先把这个东西写出来

12:51.080 --> 12:52.680
接下来这个问题还不着急

12:52.680 --> 12:53.680
写在里边呆嘛

12:54.280 --> 12:55.480
问题很多

12:56.180 --> 12:57.880
首先的问题是什么了

12:57.980 --> 12:58.980
这里边的问题

12:59.180 --> 13:01.380
是我要往这个构造函数里边传

13:01.380 --> 13:02.380
传哪些东西

13:02.380 --> 13:03.680
应该传哪些东西

13:03.780 --> 13:05.480
就是应该告诉他哪些东西

13:06.180 --> 13:08.280
你要弄明白应该告诉他哪些东西

13:08.280 --> 13:10.080
你首先要明白我们要干嘛

13:10.380 --> 13:12.480
我们要做出一个什么样的东西出来

13:12.780 --> 13:13.780
绝对不简单啊

13:13.780 --> 13:14.580
表达验证

13:14.580 --> 13:17.080
你如果要做成插件绝对不简单的

13:17.980 --> 13:18.380
好

13:18.480 --> 13:19.380
那么这里呢

13:20.180 --> 13:21.280
我要去

13:21.580 --> 13:23.280
就是我要做这个表达插件

13:23.780 --> 13:26.080
那么我要考虑到哪些东西

13:27.080 --> 13:28.780
就是我要考虑到哪些情况

13:30.180 --> 13:31.280
就是我们做这个插件

13:31.280 --> 13:32.380
他要既要好用

13:32.480 --> 13:34.180
二呢又要功能强大

13:34.480 --> 13:36.080
那么我们应该考虑到哪些东西

13:37.380 --> 13:39.480
比方第一个点我们比方说一个个说吧

13:39.780 --> 13:40.680
我们先不着急写代码

13:40.680 --> 13:41.580
先来分析一下

13:43.180 --> 13:44.380
第一个点呢就是说

13:45.080 --> 13:47.180
我们可以通过这个插件

13:48.580 --> 13:50.580
可以通过插件

13:51.580 --> 13:52.480
配置什么了

13:52.580 --> 13:54.980
配置错误的内名

13:55.480 --> 13:57.280
对吧错误的内名是不是可以配置

13:58.080 --> 13:58.980
错误的内名

13:59.680 --> 14:01.380
比方说我们这里的内名是啥

14:01.480 --> 14:02.380
是还是 error

14:02.880 --> 14:03.680
错误的内名

14:03.880 --> 14:04.680
是还是 error

14:04.680 --> 14:06.680
但是这个名字呢有可能会变化对吧

14:06.880 --> 14:08.580
有可能别的网站还不是这个名字的

14:08.580 --> 14:09.080
对不对

14:09.380 --> 14:10.680
它是有这种可能的

14:10.880 --> 14:13.180
因此呢我们要能够配置这个错误的内名

14:14.180 --> 14:15.280
如果不配置

14:15.580 --> 14:17.280
那么这里的全部把分析出来啊

14:17.780 --> 14:18.980
分析出来过后再写

14:19.680 --> 14:20.680
如果不配置

14:20.680 --> 14:22.380
所以说我之前是真的

14:23.180 --> 14:24.380
不太想讲讲这一刻

14:24.380 --> 14:24.980
不是说

14:25.380 --> 14:27.580
他很难我不想讲是他不好讲

14:27.580 --> 14:28.580
是真的不好讲

14:28.580 --> 14:29.880
因为他东西太多了

14:30.480 --> 14:32.080
如果没有配置

14:32.980 --> 14:34.180
使用默认内名

14:34.680 --> 14:35.780
使用默认内名

14:36.380 --> 14:37.680
打击说内名有默认的

14:38.280 --> 14:38.980
默认内名

14:38.980 --> 14:39.980
比方说默认内名呢

14:39.980 --> 14:40.680
我们给他

14:41.380 --> 14:43.680
一个内名叫做field error

14:44.180 --> 14:44.880
field error

14:44.880 --> 14:46.380
这个表单field的什么意思

14:46.380 --> 14:47.580
field是自断的意思

14:47.680 --> 14:48.580
这个一个箱呢

14:48.580 --> 14:49.780
就表示一个表单自断

14:49.980 --> 14:51.480
一行就表示一个表单自断

14:52.280 --> 14:53.880
表示一个自断的错误

14:54.580 --> 14:54.980
好吧

14:54.980 --> 14:57.080
我们给他规定一个默认内名

14:58.180 --> 14:59.280
好那么这个问题是

14:59.380 --> 15:00.680
我们就先说这个内名啊

15:00.780 --> 15:01.680
如果有错误的话

15:01.680 --> 15:02.380
这个内名

15:02.480 --> 15:03.880
内名应该加到哪呢

15:04.080 --> 15:04.980
应该加到哪呢

15:04.980 --> 15:06.180
那可不一定啊

15:06.480 --> 15:07.380
那可不一定

15:07.380 --> 15:08.480
他不知道加到哪

15:08.780 --> 15:09.680
不知道加到哪

15:10.280 --> 15:10.980
所以说呢

15:11.180 --> 15:11.880
这个内名呢

15:11.880 --> 15:12.580
我这里

15:13.380 --> 15:14.780
先做出地种假设

15:15.380 --> 15:15.980
假设

15:16.080 --> 15:16.880
就是规定

15:17.080 --> 15:17.680
约定

15:18.080 --> 15:18.880
就约定好

15:18.880 --> 15:20.280
你要使用我这个插件

15:20.280 --> 15:22.280
那么你自己必须要做一个牺牲

15:22.280 --> 15:23.180
为什么要做这个约定呢

15:23.180 --> 15:24.580
为什么因为约定了

15:25.080 --> 15:26.180
其实这个东西又好

15:26.180 --> 15:26.880
又不好

15:27.880 --> 15:29.180
好的地方在于什么呢

15:29.280 --> 15:32.080
好的地方就在于我们的插件就变得好写了

15:32.480 --> 15:33.880
而且呢使用起来了

15:33.880 --> 15:35.080
也比较简单了

15:35.580 --> 15:37.480
但是不好的地方在于什么呢

15:37.680 --> 15:39.580
不好的地方在于他不够灵活

15:40.180 --> 15:40.480
啊

15:40.480 --> 15:41.780
所以说这个东西

15:42.280 --> 15:43.080
在特别些

15:43.080 --> 15:44.980
特别是在写一些公共的插件

15:45.080 --> 15:46.480
或者是一些底层的框架

15:46.480 --> 15:48.180
或者是一些公共的模块的时候

15:49.380 --> 15:50.580
要不要用约定

15:50.980 --> 15:52.280
有多少的约定

15:52.580 --> 15:54.480
都是要反复衡量的一个事

15:54.780 --> 15:55.280
啊

15:55.780 --> 15:57.580
包括做一个价格的也是

15:57.580 --> 15:58.680
价格的时候也是

15:58.780 --> 15:59.880
设计一个价格的时候

16:00.180 --> 16:01.480
要不要做出一些约定呢

16:01.480 --> 16:04.180
约定这个工程里面必须要有哪些文件夹

16:04.180 --> 16:05.580
每个文件夹里面有哪些东西

16:05.580 --> 16:06.680
要不要做出这种约定

16:06.680 --> 16:08.680
一约定他肯定要限制灵活性

16:08.880 --> 16:09.480
但是呢

16:09.780 --> 16:11.780
做起来了协调起来就很方便了

16:12.380 --> 16:12.880
啊

16:12.880 --> 16:14.180
当会牺牲一些东西

16:14.180 --> 16:15.880
又会带来一些好处

16:16.980 --> 16:18.180
啊因此呢我们这里呢

16:18.180 --> 16:19.380
就直接给他约定吧

16:19.380 --> 16:21.180
但到底要不要约定这个东西

16:21.880 --> 16:22.980
你们现在呢

16:22.980 --> 16:24.480
刚刚开始学程去啊

16:24.480 --> 16:25.280
你就不用去考虑了

16:25.280 --> 16:26.080
我帮你考虑啊

16:26.080 --> 16:26.880
我帮你考虑

16:26.980 --> 16:28.580
我现在就是约定

16:28.880 --> 16:29.680
约定什么呢

16:29.880 --> 16:30.480
约定

16:31.380 --> 16:32.880
呃内名啊

16:33.180 --> 16:34.180
错误内名

16:35.180 --> 16:37.880
应该加到啊加到哪呢

16:37.880 --> 16:38.880
就是我固定了啊

16:38.880 --> 16:40.680
我这里一旦约定就是固定了

16:41.380 --> 16:42.680
应该加到什么

16:42.780 --> 16:45.280
加到这个表单项的容器中

16:45.280 --> 16:47.280
应该加到表单项容器中

16:47.780 --> 16:48.680
表单域

16:48.980 --> 16:51.280
我们有的时候也说说说成表单域啊

16:51.780 --> 16:52.880
或者叫做表单制断

16:52.880 --> 16:53.680
就是这一项

16:54.280 --> 16:55.780
啊我们先把个名次说好啊

16:55.780 --> 16:57.080
这一项就是个表单域

16:57.380 --> 16:59.380
也就也就也叫做表单制断

16:59.980 --> 17:02.080
应该加到表单域的啊

17:02.280 --> 17:04.380
容器中啊容器中

17:05.280 --> 17:07.080
那么现在又出现一个问题

17:07.280 --> 17:09.680
什么叫做表单域的容器

17:10.280 --> 17:11.780
有人说就这个div

17:11.780 --> 17:13.980
你知道在这个情况下是这个div

17:14.080 --> 17:15.780
那别的网站是哪个div呢

17:15.780 --> 17:16.580
你咋知道了

17:16.580 --> 17:17.880
他不一定是个内名啊

17:18.080 --> 17:19.580
鬼才知道他是哪个div

17:20.180 --> 17:21.580
所以说我们现在要定义一个

17:21.580 --> 17:24.680
什么叫做表单容器啊

17:24.680 --> 17:25.280
什么叫做

17:25.280 --> 17:26.380
他一定是一个容器啊

17:26.380 --> 17:27.380
一定是个元素

17:27.580 --> 17:29.580
我们现在可以分析出一定是一个元素

17:29.580 --> 17:31.580
把他里边的东西全部包起来对吧

17:31.680 --> 17:33.180
把这一项的东西全部包起来

17:33.180 --> 17:34.380
这就是个表单容器

17:35.280 --> 17:37.880
好那么什么叫做表单容器呢

17:38.280 --> 17:39.480
好我们这里进行约定

17:39.480 --> 17:40.580
好又来约定了啊

17:41.080 --> 17:43.580
你没有完全没有约定的话也挺恐怖的

17:43.580 --> 17:45.580
用起来非常非常难用这个表的

17:45.680 --> 17:48.280
他用起来不舒服啊不舒服

17:49.120 --> 17:50.280
好那么又来约定

17:50.880 --> 17:53.380
什么叫做表单域容器啊我们这里

17:53.580 --> 17:54.180
换一个啊

17:55.180 --> 17:55.680
决定

17:56.780 --> 17:58.380
表单域容器

17:59.280 --> 18:03.580
是一个具有自定义属性啊

18:04.080 --> 18:05.280
什么是自定义属性的

18:05.280 --> 18:06.880
我们之前学过自定义属性对吧

18:06.980 --> 18:08.580
自定义属性就是以delta开头的

18:08.580 --> 18:10.380
当然你可以可不可以不用delta开头

18:10.380 --> 18:11.080
当然可以

18:11.180 --> 18:13.480
不过w3c呢现在要求你啊

18:13.680 --> 18:14.580
不说要求吧

18:15.080 --> 18:16.380
强烈推荐你

18:16.380 --> 18:18.580
是用delta横杠开头的东西呢

18:18.580 --> 18:19.480
作为自定义属性

18:19.480 --> 18:20.680
那么你根据他的要求来

18:21.180 --> 18:23.080
好那么什么叫做表单域域容器呢

18:23.180 --> 18:24.380
是一个具有自定义属性

18:24.380 --> 18:25.580
什么属性啊

18:26.280 --> 18:28.080
给他取个名字啊约定一个名字

18:28.480 --> 18:29.080
field

18:29.780 --> 18:31.380
field container

18:31.780 --> 18:32.780
field container

18:33.880 --> 18:34.380
好

18:35.880 --> 18:36.580
啊

18:37.480 --> 18:38.180
看一下啊

18:38.380 --> 18:40.280
这样吧这样吧就delta field

18:41.180 --> 18:43.680
具有这个自定义属性的元素

18:44.880 --> 18:47.080
具有这个自定义属性的元素就是

18:47.380 --> 18:50.380
表表单域容器啊注意表单域容器

18:50.380 --> 18:52.480
也也叫做表单制断容器

18:52.580 --> 18:53.980
就是把整个字段包起来

18:54.680 --> 18:56.580
那么不仅要有这个属性

18:56.580 --> 18:57.980
而且这个属性要有值

18:58.480 --> 18:59.980
该属性的值

19:00.580 --> 19:02.180
该属性的值

19:02.680 --> 19:04.980
必须等于

19:05.380 --> 19:06.180
表单

19:07.280 --> 19:10.180
制断名啊必须要等于表单制断名

19:11.580 --> 19:13.680
为什么我要罗里巴说的说这些

19:13.780 --> 19:15.380
一个是因为我现在是视频教程

19:15.380 --> 19:16.380
我可以敞开来讲

19:16.680 --> 19:18.580
第二个呢我不解释这清楚这些东西

19:18.580 --> 19:21.880
因为很多同学对表单这一块是很模糊的

19:22.080 --> 19:24.080
所以说给他必须给大家解释清楚

19:25.280 --> 19:27.280
必须等于表单制断名是什么意思呢

19:27.280 --> 19:28.880
这个玩意就是制断名

19:29.280 --> 19:30.580
就是到时候你要把

19:30.880 --> 19:33.680
你要发送到服务器的啊这个名称啊

19:33.680 --> 19:35.680
你要发送到服务器的就我们刚才看到的

19:35.680 --> 19:36.980
地址男在这里对吧

19:36.980 --> 19:38.380
就这个东西啊

19:38.380 --> 19:40.080
要发送到服务器的这个东西

19:40.080 --> 19:43.080
当然你也有可能你不会发送到服务器啊

19:43.080 --> 19:44.080
鬼子道理要干嘛

19:44.080 --> 19:44.680
对不对

19:44.880 --> 19:47.180
你也有可能你不会发送到服务器

19:47.180 --> 19:49.080
总之呢你会有这么一个东西啊

19:49.080 --> 19:50.080
会有这么一个东西

19:50.480 --> 19:51.480
叫做表单

19:51.880 --> 19:53.280
表单制断名

19:53.680 --> 19:55.680
好那么也就是说我们这里啊

19:55.680 --> 19:57.480
这个容器里面我们应该写咋写

19:57.480 --> 19:59.280
说data啊横杠

19:59.280 --> 20:01.580
啥啊field的对吧

20:01.580 --> 20:02.580
这里应该等于啥

20:02.580 --> 20:04.480
就等于locking id对不对

20:04.480 --> 20:06.080
这个名字是不是要跟这里的对应

20:06.180 --> 20:06.680
对不对

20:06.680 --> 20:08.680
要跟这里的表单相对的名字

20:08.780 --> 20:10.580
要对应啊要对应

20:11.280 --> 20:11.980
你看这里是吧

20:12.980 --> 20:13.780
好没问题吧

20:14.480 --> 20:15.480
好ok啊

20:16.880 --> 20:17.680
好这是这一块

20:19.590 --> 20:20.790
好然后啊

20:21.190 --> 20:21.790
然后

20:22.390 --> 20:24.190
我们再来看啊再来看

20:24.890 --> 20:27.190
不过有没有可能在这里没有写内密属性的

20:27.190 --> 20:28.190
他是有可能的

20:28.290 --> 20:29.590
他是有可能的

20:29.990 --> 20:31.490
你要考虑到各种情况

20:31.490 --> 20:32.390
因为有的时候呢

20:32.390 --> 20:33.290
我写一个表单

20:33.290 --> 20:35.390
我可能不会把这个数据发送到服务器

20:35.390 --> 20:37.690
我可能接下来做些做一些其他的事情

20:37.690 --> 20:38.790
鬼子道理要干嘛

20:38.890 --> 20:40.290
对不对根本就不知道你要干嘛

20:40.690 --> 20:42.590
所以说呢我们这里的不能

20:42.590 --> 20:44.790
你不能这个东西最好不要假设了

20:45.090 --> 20:47.090
啊不要假设他有有这个内密属性

20:47.090 --> 20:48.590
不要去做这个假设啊

20:48.590 --> 20:50.090
好吧不要去做这个假设

20:50.990 --> 20:53.190
好那么如果你没有这个假设的话

20:53.790 --> 20:55.190
那我到时候要验证

20:55.390 --> 20:57.790
我鬼子道我我现在只知道一个容器对吧

20:57.790 --> 20:58.890
容器我现在知道了

20:58.890 --> 21:00.390
你一会肯定要告诉我啊

21:00.390 --> 21:01.890
会通过一个字定属性告诉

21:02.390 --> 21:03.790
那么容器我知道了

21:03.990 --> 21:05.290
但是现在我还有一个问题

21:05.590 --> 21:07.590
我咋啊从这个容器里边

21:07.990 --> 21:09.190
找我要验什么东西

21:09.190 --> 21:10.290
我要验证谁呢

21:10.290 --> 21:10.790
关键是

21:11.290 --> 21:12.690
关键是我要验证谁呢

21:12.690 --> 21:14.290
我就不知道我要验证谁了

21:14.490 --> 21:15.190
明白的意思吧

21:16.190 --> 21:19.090
那就要说那就找呗找你的里边有闻闷

21:19.290 --> 21:20.590
那里边没有闻闷

21:20.590 --> 21:21.390
他是向那些表了

21:21.390 --> 21:22.490
那就找向那些表呗

21:22.590 --> 21:24.090
那没有向那些表是有多行闻闷

21:24.090 --> 21:25.090
txtal real呢

21:25.390 --> 21:26.590
你找txtal real呗

21:26.890 --> 21:27.990
那如果他不是一个

21:28.190 --> 21:29.890
txtal real而是个div呢

21:30.290 --> 21:31.590
div能不能编辑

21:31.790 --> 21:33.390
div是可以编辑的哦兄弟

21:33.890 --> 21:35.690
加上一个addy content

21:35.990 --> 21:37.190
啊什么addy turbo

21:37.290 --> 21:38.490
他是可以编辑的哦

21:38.890 --> 21:39.690
加上这个东西

21:40.090 --> 21:41.590
那么这个div是可以编辑的哦

21:41.790 --> 21:42.590
啊你看一下吧

21:42.890 --> 21:44.690
啊这个div一看是不是可以编辑

21:44.990 --> 21:46.990
对吧那你鬼子他里边是啥呢

21:47.090 --> 21:48.390
你根本就不知道他里边是啥

21:48.890 --> 21:50.390
所以说我现在一个问题就是

21:50.490 --> 21:52.790
我怎么从这个容器里边去找到

21:53.390 --> 21:55.290
我要验证的是哪一个东西

21:55.590 --> 21:56.790
我现在能够确定的是

21:56.890 --> 21:57.990
我要验证的东西

21:57.990 --> 21:59.390
他一定在这个容器里边

21:59.390 --> 22:01.190
对吧一定在这个容器里边

22:01.290 --> 22:03.590
但是我不知道我要验证哪一个玩意

22:03.790 --> 22:04.790
他哪一个东西

22:05.490 --> 22:06.290
明白这个意思吧

22:06.490 --> 22:07.790
啊我这个东西我不知道

22:07.990 --> 22:09.490
不知道我要验证啥

22:10.490 --> 22:11.990
好那么这个时候呢

22:12.290 --> 22:12.990
这个时候

22:14.190 --> 22:15.190
好又来约定了

22:16.190 --> 22:16.790
啊约定

22:17.690 --> 22:18.090
啊

22:19.390 --> 22:21.590
呃要验证的

22:22.090 --> 22:23.690
表单欲啊

22:23.690 --> 22:25.090
要验证的表单欲

22:25.090 --> 22:26.090
也就是表单制断

22:27.590 --> 22:28.890
啊现在不是容器了啊

22:29.590 --> 22:31.390
啊应该具有

22:32.190 --> 22:33.490
一个自定义属性

22:33.890 --> 22:35.990
自定义属性啊

22:36.390 --> 22:37.190
什么属性呢

22:37.490 --> 22:39.890
属性的名字就叫做data field

22:40.290 --> 22:41.290
啊data field

22:41.490 --> 22:43.790
就这个属性啊该属性

22:44.690 --> 22:46.790
没有值啊该属性

22:46.790 --> 22:47.890
要不要换一个吧

22:47.890 --> 22:50.890
换一个名字免得跟这个上上上面重复了啊

22:51.390 --> 22:52.590
啊data

22:52.790 --> 22:54.490
要上面重新约定格要然

22:54.790 --> 22:55.690
container啊

22:55.690 --> 22:57.490
像说加加个container吧啊

22:57.490 --> 22:58.790
这表示这个容器啊

22:58.790 --> 22:59.890
那么加上这个属性

22:59.890 --> 23:02.990
就表示我要验证的制断啊

23:02.990 --> 23:03.990
我要验证的制断

23:04.990 --> 23:07.890
好那么该属性没有值啊

23:07.890 --> 23:08.790
你不需要有值

23:09.190 --> 23:11.090
不用复制你该比凹击一下就行了

23:11.090 --> 23:12.390
比方说这里啊

23:12.390 --> 23:14.190
我们刚才这里login id对吧

23:14.190 --> 23:15.790
login id好那么这里呢

23:15.890 --> 23:17.390
我要验证这个容器里边啥呢

23:17.390 --> 23:18.590
要验证啥啥玩意儿呢

23:18.590 --> 23:19.490
好给他加上一个啊

23:19.490 --> 23:22.490
这个应该用什么field的container表示一个容器

23:23.090 --> 23:25.090
好好这里我们使用field

23:26.190 --> 23:27.390
我要验证这么一个东西

23:28.390 --> 23:29.590
没了这个意思吧啊

23:29.590 --> 23:30.790
我要验证这么一个东西

23:32.090 --> 23:34.990
好那么我做这么做出这么一个约定啊

23:35.090 --> 23:36.490
你只要写了这个东西

23:36.890 --> 23:38.490
哪怕你这里写了很多个

23:38.690 --> 23:40.190
哪怕你这里写了很多个

23:40.290 --> 23:42.790
ok我都要对你进行验证啊

23:42.790 --> 23:43.890
都要对你进行验证

23:44.690 --> 23:45.790
只要你写了

23:45.890 --> 23:47.090
我就会对你进行验证

23:47.490 --> 23:49.090
注意哦这里有可能有多个哦

23:49.990 --> 23:50.790
有可能有多个哦

23:50.790 --> 23:52.890
比方说多选狂是不是有多个

23:53.790 --> 23:56.590
啊你的爱号啊爱号什么啊

23:56.590 --> 23:58.290
爱号是啊

23:58.890 --> 24:02.490
那个啊有哪些足球音乐电影对吧

24:02.490 --> 24:04.390
是不是有多个多个表单语

24:04.690 --> 24:07.290
对不对一起验证都要验证哦

24:07.790 --> 24:08.890
不说只验证一个

24:09.590 --> 24:11.190
只要标记了这个东西

24:11.290 --> 24:14.090
我就要验证我你没有标记我就不验证

24:14.890 --> 24:16.090
啊是这么个意思啊

24:16.190 --> 24:18.090
只要你标记了我就验证

24:18.190 --> 24:20.690
只要你没有标记我就不验证

24:20.990 --> 24:21.990
啊我就不验证

24:23.090 --> 24:23.590
ok

24:24.990 --> 24:27.090
好这是这个啊就这个

24:27.990 --> 24:29.090
好这data field

24:29.790 --> 24:31.390
啊我们又约定了一个东西啊

24:31.590 --> 24:33.690
我们去看啊现在我都还没有开始写大

24:33.690 --> 24:35.590
你只知道这个玩意有多么不得了了

24:35.590 --> 24:36.190
这个东西

24:36.390 --> 24:37.490
所以说这个啊

24:37.890 --> 24:39.390
选择性观看啊

24:39.390 --> 24:40.490
我一节可肯定讲不完

24:40.490 --> 24:41.790
我肯定要分成几节可来讲

24:42.890 --> 24:44.690
一旦是要通用肯定不简单啊

24:45.690 --> 24:46.890
好那么现在呢

24:47.090 --> 24:48.290
我们现在就约定了这个东西

24:48.290 --> 24:49.090
我们继续来想

24:49.190 --> 24:50.590
还有什么东西要约定的

24:51.190 --> 24:52.490
还有什么东西要约定的

24:52.890 --> 24:54.090
好我们又来约定

24:55.190 --> 24:57.290
那需要约需要约定一些东西

24:58.490 --> 25:00.690
就是多的时候得有约定不要约定的话

25:00.690 --> 25:02.690
你都不知道怎么去使用对不对

25:02.690 --> 25:04.690
那你说你这东西不约定你怎么办

25:04.690 --> 25:05.690
你告诉我你怎么办

25:05.690 --> 25:08.090
那你只能用让用户把对象传给你

25:08.090 --> 25:10.090
你要验了对象那用户用起来是不是

25:10.090 --> 25:11.890
就是你如果不约定的话

25:11.890 --> 25:14.890
那你只能让用户把你要验证的文本框

25:14.890 --> 25:17.690
啊下达列表啊这些东西作为动物对象传给你

25:18.090 --> 25:19.390
那用户要传好的东西

25:19.490 --> 25:20.590
所以传一大堆东西

25:21.090 --> 25:22.590
用户用起来用这个插件

25:22.690 --> 25:25.890
就没有起到减少工作量的效果

25:26.090 --> 25:27.190
就没有起到这个效果

25:27.690 --> 25:28.790
因为我们要做的通用的啊

25:28.790 --> 25:29.890
以后都可以用它

25:30.190 --> 25:33.090
所以最重要的还是要减少工作量提高

25:33.190 --> 25:34.290
提高开发效率

25:35.890 --> 25:36.990
好继续来约定啊

25:37.790 --> 25:39.090
现在又有个问题了啊

25:39.790 --> 25:40.690
又有个问题了

25:41.090 --> 25:42.390
就是问题是啥呢

25:42.590 --> 25:44.190
问题就是说啊

25:45.190 --> 25:46.590
那么现在这个东西啊

25:47.290 --> 25:49.090
我现在知道我要验证啥了

25:49.090 --> 25:49.990
验证谁了

25:49.990 --> 25:51.290
比方说我要验证他对吧

25:51.590 --> 25:52.390
我要验证他

25:52.890 --> 25:55.890
但是我不知道的是我要验证他的哪个属性

25:56.490 --> 25:58.090
啊通常来说是验证什么

25:58.090 --> 25:59.990
验证文本框的Value属性对吧

25:59.990 --> 26:01.290
包括Texa Arrayer

26:01.390 --> 26:03.490
多环文本框他也是Value属性

26:03.890 --> 26:05.390
比方说还有什么

26:05.490 --> 26:07.590
下达列表也是验证Value属性

26:07.990 --> 26:09.090
但是有没有其他情况呢

26:09.090 --> 26:10.290
如果验证一张图片呢

26:10.490 --> 26:11.990
如果这里写的是个图片

26:11.990 --> 26:13.190
有没有可能是一张图片

26:13.390 --> 26:15.090
上传图片你们以后会学习

26:15.490 --> 26:16.290
上传图片

26:16.890 --> 26:19.390
这个图片验证啥验证他的src属性

26:19.990 --> 26:21.490
来吧又咋又咋办啊

26:21.890 --> 26:23.790
啊比方说有的时候呢

26:23.790 --> 26:25.090
我有这里是个多选框

26:25.490 --> 26:26.190
多选框

26:26.290 --> 26:28.890
这多选框呢我他必须要勾选比方说

26:29.090 --> 26:32.190
B就是我同意啥啥什么什么的协议对吧

26:32.190 --> 26:33.190
网站上都有对不对

26:33.290 --> 26:34.390
你必须要勾选

26:34.990 --> 26:35.790
那验证的是啥

26:35.790 --> 26:37.190
验证的就不是他的Value了

26:37.190 --> 26:38.690
验证他是否选中

26:39.590 --> 26:41.790
验证的是他是否选中

26:41.990 --> 26:43.190
是这么个意思的啊

26:43.790 --> 26:45.190
那又咋办了对不对

26:45.590 --> 26:46.690
那就麻烦了对不对

26:47.190 --> 26:48.090
好所以说了

26:48.690 --> 26:50.590
所以说了我们这里还得约定

26:50.990 --> 26:51.790
约定什么呢

26:52.490 --> 26:52.990
约定

26:53.790 --> 26:55.790
要验证的属

26:55.990 --> 26:57.790
验证的就是啊

26:58.290 --> 27:00.490
属性啊属性

27:00.890 --> 27:03.290
使用制定义属性

27:04.390 --> 27:04.990
data

27:05.690 --> 27:06.590
field

27:07.590 --> 27:08.290
prob

27:08.290 --> 27:11.290
prob表示property的缩写表示属性的意思

27:11.390 --> 27:13.890
就是我要验证这个表单欲的哪个属性

27:14.390 --> 27:16.290
我鬼知道我要验证哪个属性了

27:16.290 --> 27:17.590
我不知道啊我不知道

27:17.690 --> 27:19.690
所以说我这里要规定啊

27:19.890 --> 27:22.790
我要验证这个表单欲的哪个属性

27:23.490 --> 27:24.890
要验证的属性

27:25.090 --> 27:26.090
使用制定义属性

27:26.090 --> 27:27.190
这个东西指定

27:28.690 --> 27:29.290
你看吧

27:29.790 --> 27:31.090
越来越多了啊

27:31.090 --> 27:32.190
如果没有指定啊

27:32.190 --> 27:33.290
如果没有指定

27:33.290 --> 27:35.290
你看前面两个我说必须要指定的啊

27:35.290 --> 27:36.090
必须要指定的

27:36.190 --> 27:38.190
那么这个领导就是可以有默认值

27:38.290 --> 27:39.390
如果没有指定

27:39.990 --> 27:40.590
验证

27:41.090 --> 27:41.990
value属性

27:42.590 --> 27:43.390
value属性

27:43.690 --> 27:44.790
你看是不是有默认值了

27:45.890 --> 27:47.190
好我们通过这里啊

27:47.990 --> 27:49.890
就这啊就这好

27:49.890 --> 27:51.090
然后呢我们比方说

27:51.090 --> 27:52.690
刚才我们写了data field对吧

27:52.990 --> 27:54.490
啊我们要我们要验证他

27:54.690 --> 27:55.490
验证了哪个属性呢

27:55.490 --> 27:56.390
我们要通过什么

27:56.590 --> 27:58.590
data field

27:58.990 --> 27:59.490
prob

27:59.990 --> 28:00.490
prob

28:00.890 --> 28:01.590
验证的是什么

28:01.590 --> 28:02.390
value属性

28:02.590 --> 28:02.890
对吧

28:02.890 --> 28:03.990
如果你是个图片的话

28:03.990 --> 28:05.090
那么我这样子写

28:05.290 --> 28:05.990
图片的话

28:06.090 --> 28:07.690
那么我们这里写data field

28:07.990 --> 28:08.390
啊

28:08.790 --> 28:10.190
不用给字啊不用给字

28:10.290 --> 28:11.090
data field

28:11.690 --> 28:12.290
prob

28:12.590 --> 28:13.690
验证的属性是怎么了

28:13.690 --> 28:14.990
验证属性是src

28:15.690 --> 28:16.190
看没

28:16.790 --> 28:18.890
这些都要都要给告诉他的

28:18.990 --> 28:19.990
告诉他怎么办呢

28:19.990 --> 28:20.890
他只能拆

28:20.990 --> 28:22.290
但是他可以拆一个对吧

28:22.290 --> 28:23.390
拆是什么拆

28:23.390 --> 28:24.990
你大部分都是value属性吗

28:25.090 --> 28:26.090
验证的都是value

28:26.990 --> 28:27.490
对不对

28:28.690 --> 28:29.890
好又来啊又来

28:30.490 --> 28:31.390
还没完

28:31.790 --> 28:32.290
约定

28:34.590 --> 28:36.090
那么我现在要验

28:36.090 --> 28:37.190
一会要验证

28:37.390 --> 28:38.190
验证的话

28:38.190 --> 28:39.290
他还有一个问题就是

28:39.390 --> 28:41.590
什么情况下触发验证

28:42.390 --> 28:43.090
你看一下

28:43.590 --> 28:44.190
这里呢

28:44.690 --> 28:45.790
不在这这边

28:45.890 --> 28:46.490
这边是

28:47.790 --> 28:49.190
我监听的事件啊

28:49.190 --> 28:49.790
就这里

28:49.890 --> 28:50.790
你看是不是

28:51.090 --> 28:52.290
input事件对吧

28:53.090 --> 28:54.690
在input事件里面进行验证

28:54.690 --> 28:55.490
对不对啊

28:55.490 --> 28:57.290
在input事件里面进行验证

28:57.490 --> 28:57.890
啊

28:57.990 --> 28:59.690
我是用这种方式来处理的

28:59.890 --> 29:01.190
但是有没有可能他不

29:01.190 --> 29:02.090
有的时候呢

29:02.090 --> 29:03.890
我不希望验证的这么频繁

29:03.890 --> 29:05.490
我是希望你离开这个闷闷

29:05.490 --> 29:06.490
框之后进行验证

29:06.490 --> 29:07.390
有没有这种可能的

29:07.690 --> 29:08.890
当然有这种可能啊

29:09.490 --> 29:10.290
有这种可能的

29:11.090 --> 29:11.890
所以说呢

29:11.890 --> 29:13.390
我们这里还要考虑到

29:13.890 --> 29:16.790
验证事件也需要配置啊

29:16.790 --> 29:18.790
也需要配置验证事件

29:19.490 --> 29:20.590
好于是呢

29:20.590 --> 29:21.690
我们需要约定

29:22.490 --> 29:24.590
啊就是要监听的啊

29:24.590 --> 29:25.990
要监听的事件

29:26.690 --> 29:27.790
要监听的事件

29:28.090 --> 29:30.390
使用制定义属性啊

29:30.390 --> 29:31.590
使用制定义属性什么呢

29:32.490 --> 29:33.790
data field

29:34.290 --> 29:34.990
lesson

29:36.390 --> 29:36.890
指定

29:38.190 --> 29:38.690
指定

29:39.390 --> 29:40.490
通过这个东西来指定

29:40.490 --> 29:42.790
指定我要监听的事件

29:44.490 --> 29:45.690
我要监听的事件

29:46.590 --> 29:50.590
指定啊要监听的事件

29:51.690 --> 29:52.590
监听的事件

29:55.790 --> 29:57.090
好那么比方说这边啊

29:57.090 --> 29:58.390
比这边我们要监听

29:58.390 --> 29:59.190
如果我要给他写

29:59.190 --> 30:00.490
当然可以默认值啊

30:00.490 --> 30:01.690
这个东西可以有默认值

30:01.890 --> 30:02.590
如果

30:03.590 --> 30:05.590
如果没有指定

30:06.890 --> 30:07.790
通过这个例子啊

30:07.790 --> 30:09.390
其实不管你到后边

30:09.390 --> 30:10.490
能不能自己把做出来

30:10.490 --> 30:11.990
做出来这个东西还是很难做的

30:11.990 --> 30:12.990
这个不做要求

30:13.190 --> 30:14.390
你听一听就行了啊

30:14.690 --> 30:15.690
当然你能自己做出来

30:15.690 --> 30:17.390
当然非常非常不错啊

30:17.390 --> 30:18.790
你去花花这个功夫

30:18.790 --> 30:20.190
告诉你一定是值得的

30:20.490 --> 30:21.890
我建议大家可以去做一遍啊

30:21.890 --> 30:22.990
尝试着去做一下

30:22.990 --> 30:23.790
听完了之后

30:24.390 --> 30:26.490
那哪怕我就是我把这个分析完了过后

30:26.490 --> 30:27.690
我还没有写单

30:27.690 --> 30:29.190
你可以尝试去去做一下

30:29.990 --> 30:31.790
好如果没有指定的话

30:31.890 --> 30:33.390
那么使用默认值

30:33.990 --> 30:34.690
默认值

30:35.490 --> 30:36.190
你们以后呢

30:36.190 --> 30:37.590
也会接触一些第三方的

30:37.590 --> 30:39.990
就是别人写好的表达验证插件

30:40.090 --> 30:42.590
你可以体会到做这个东西是真不简单

30:43.790 --> 30:44.790
不光是做起来不简单

30:44.790 --> 30:45.990
你用起来都不简单

30:46.090 --> 30:47.390
你看这么多这么多东西

30:47.390 --> 30:48.390
要保证灵活

30:48.390 --> 30:49.490
你是不是要全的告诉他

30:49.790 --> 30:50.790
这也通过这个例子呢

30:50.790 --> 30:51.590
也告诉大家

30:51.690 --> 30:53.490
当你要做出一个通融东西的时候

30:54.090 --> 30:54.990
分析这个步骤

30:54.990 --> 30:56.090
一定是少不了的

30:57.390 --> 30:58.590
除非我们之前做了一些什么

30:58.590 --> 30:59.390
图片谱不留啊

30:59.390 --> 31:00.690
这些都很简单对吧

31:00.690 --> 31:01.490
都很简单

31:01.590 --> 31:03.290
但是要做一个功能强大的东西

31:03.490 --> 31:04.290
分析这个步骤

31:04.290 --> 31:05.590
一定是跑不了的

31:05.690 --> 31:06.390
还要部门之间

31:06.390 --> 31:07.390
同时间要讨论

31:08.690 --> 31:10.390
特别是做一个产品级的东西

31:11.190 --> 31:11.890
你要做大量的

31:11.890 --> 31:13.390
还要做大量的市场调研

31:13.690 --> 31:15.290
调查市场上有哪些情况

31:15.290 --> 31:16.690
各种各样情况综合起来

31:18.290 --> 31:20.190
这里如果没有没有就是指定的话

31:20.190 --> 31:21.090
使用默认值

31:21.090 --> 31:21.590
默认值

31:21.590 --> 31:23.790
比方说就是劝极

31:24.790 --> 31:25.890
默认值劝极事件

31:26.690 --> 31:28.390
就是我们监听劝极事件

31:28.590 --> 31:29.690
当然你可不可以指定

31:29.690 --> 31:30.490
可以指定

31:30.790 --> 31:31.490
可以指定

31:31.490 --> 31:33.590
比方说我不希望你监听劝极事件

31:33.690 --> 31:34.990
我希望你监听的是啥呢

31:35.090 --> 31:36.890
监听的就是delta field

31:38.190 --> 31:38.790
lesson

31:40.590 --> 31:41.190
lesson

31:42.090 --> 31:43.290
使用监听啥呢

31:43.290 --> 31:43.790
监听

31:44.190 --> 31:44.990
input事件

31:45.690 --> 31:46.590
监听这个事件

31:46.990 --> 31:47.790
如果我不写的话

31:47.790 --> 31:49.090
它监听的是劝极事件

31:49.390 --> 31:50.090
on change

31:51.090 --> 31:51.490
好吧

31:51.490 --> 31:52.590
为什么要监听on change

31:52.590 --> 31:53.490
因为它通用

31:53.490 --> 31:54.690
你看那个

31:55.290 --> 31:56.890
下达列表是不是也有这个事件

31:56.990 --> 31:58.390
多选框是不是也有这个事件

31:58.390 --> 31:58.890
对不对

32:00.090 --> 32:00.290
好

32:00.290 --> 32:00.790
就是这一块

32:01.490 --> 32:02.690
关于监听哪个事件

32:03.590 --> 32:04.590
还没完哦

32:04.590 --> 32:05.690
还都还没完

32:05.990 --> 32:06.690
还没完

32:07.590 --> 32:08.490
还有什么呢

32:08.790 --> 32:10.090
就是还要约定

32:11.690 --> 32:12.290
还要约定

32:12.290 --> 32:13.190
约定啥呢

32:13.990 --> 32:15.090
约定就是

32:17.090 --> 32:17.990
在事件中

32:17.990 --> 32:18.890
我们监听到事件

32:18.890 --> 32:19.290
对吧

32:19.290 --> 32:20.190
监听到事件

32:20.490 --> 32:21.090
然后呢

32:21.290 --> 32:22.690
监听到这个事件之后

32:23.190 --> 32:24.690
你这个地方改变了

32:24.990 --> 32:26.090
要触发

32:27.090 --> 32:28.890
触发哪些

32:29.490 --> 32:30.290
表单

32:30.290 --> 32:32.690
当然要触发自己的表单预的验证

32:32.690 --> 32:34.290
要触发哪些表单预的

32:34.690 --> 32:35.690
相关验证

32:36.890 --> 32:38.790
要触发哪些表单预的相关验证

32:38.990 --> 32:39.890
这是啥意思呢

32:39.890 --> 32:40.190
这个

32:40.690 --> 32:41.890
比方说我举个例子

32:42.690 --> 32:43.590
这里的账号呢

32:43.590 --> 32:45.490
你看我这里监听事件过后

32:45.490 --> 32:46.590
他触发的是谁的验证

32:46.590 --> 32:47.690
触发的是账号的验证

32:47.690 --> 32:47.990
对吧

32:47.990 --> 32:48.990
这个是毫无疑问的

32:48.990 --> 32:50.590
他一定会触发自己的验证

32:51.190 --> 32:52.790
一定会触发自己的验证

32:54.790 --> 32:55.390
然后呢

32:55.390 --> 32:56.990
除了触发自己的验证的时候

32:56.990 --> 32:58.090
有没有可能

32:58.090 --> 32:58.990
我在这里写东西

32:58.990 --> 33:00.390
要触发别的验证了

33:00.690 --> 33:01.790
是有可能的

33:02.490 --> 33:04.190
你看我这个页面就没有考虑这个情况

33:04.190 --> 33:04.990
就没有考虑这个情况

33:04.990 --> 33:06.390
看着他会有问题

33:06.690 --> 33:08.390
比方说我密码这里

33:08.890 --> 33:10.790
写的是123 123

33:10.790 --> 33:12.090
我这里写的123 123

33:12.090 --> 33:12.290
对吧

33:12.290 --> 33:12.990
确认密码

33:13.290 --> 33:14.990
他这里显示的是两次密码不一致

33:14.990 --> 33:15.790
因为是不是不一致

33:15.790 --> 33:16.790
肯定是不一致嘛

33:16.790 --> 33:18.190
跟这个密码都没写

33:18.190 --> 33:18.890
这个密码写了

33:19.490 --> 33:20.290
两个123

33:20.290 --> 33:21.090
那肯定不一致

33:21.690 --> 33:23.090
那么我们现在在写密码

33:23.090 --> 33:25.490
我也写成123 123

33:25.490 --> 33:26.390
你看一下

33:26.390 --> 33:28.390
这个他只触发了自己的验证

33:28.390 --> 33:29.490
自己没问题了

33:29.490 --> 33:29.990
但是呢

33:29.990 --> 33:30.990
你看这里写的

33:30.990 --> 33:33.090
是不是跟其他地方有可能会有关联

33:33.090 --> 33:33.590
对吧

33:33.590 --> 33:34.790
有可能会有关联

33:34.790 --> 33:36.390
也就是说我希望这里触发的

33:36.390 --> 33:38.290
这里的在进行验证的时候

33:38.890 --> 33:40.690
在这个地方在进行验证的时候

33:40.690 --> 33:42.090
不但要触发自己

33:42.090 --> 33:43.690
还要触发别人的验证

33:44.690 --> 33:45.890
是不是改变他的时候

33:45.990 --> 33:47.290
他的验证也要同时变

33:47.290 --> 33:47.990
对不对

33:48.590 --> 33:49.490
明白这个意思吧

33:50.290 --> 33:52.290
默认情况下只处理自己

33:52.590 --> 33:53.890
默认情况下

33:54.490 --> 33:57.490
只处理自身

33:57.990 --> 33:58.990
自身的验证

33:59.290 --> 34:00.290
只处理自己

34:00.690 --> 34:02.090
那么有没有别的情况呢

34:02.190 --> 34:03.390
别的情况的话

34:03.390 --> 34:05.090
就不但要处理自身的验证

34:05.090 --> 34:05.890
还要处理谁

34:05.890 --> 34:07.990
还要处理别的人的验证

34:07.990 --> 34:08.990
那么怎么来配置呢

34:08.990 --> 34:11.090
就通过这个东西来配置

34:11.190 --> 34:12.290
再写个自定属性

34:13.290 --> 34:15.790
可以通过

34:16.890 --> 34:17.590
这个东西

34:17.590 --> 34:18.290
Data field

34:18.290 --> 34:18.790
什么

34:20.290 --> 34:20.990
Trigger

34:21.190 --> 34:21.790
Trigger

34:22.190 --> 34:22.690
触发

34:22.690 --> 34:24.290
Trigger是表示触发的意思

34:24.690 --> 34:25.390
触发

34:26.490 --> 34:27.190
设置

34:28.090 --> 34:29.190
要验证的

34:29.690 --> 34:31.290
其他表达于

34:32.690 --> 34:34.090
多个名称之间

34:34.490 --> 34:35.490
名称之间

34:35.890 --> 34:38.090
使用英文

34:38.390 --> 34:39.090
兜号

34:39.490 --> 34:40.190
兜号

34:40.390 --> 34:40.890
分隔

34:41.890 --> 34:42.890
不简单

34:42.890 --> 34:43.890
真的不简单

34:45.890 --> 34:46.890
中间

34:49.090 --> 34:53.890
中间不能有空格

34:53.890 --> 34:55.290
中间不能有空格

34:56.290 --> 34:57.490
这里先约定

34:57.490 --> 34:58.990
比方说

34:58.990 --> 34:59.690
我们这里

35:00.090 --> 35:00.690
比方说密码

35:00.690 --> 35:01.490
我们再来写一次

35:01.490 --> 35:03.690
密码这里是不是要写个Data field

35:03.690 --> 35:04.590
container

35:04.590 --> 35:05.090
对不对

35:05.090 --> 35:06.890
这是password的密码

35:07.290 --> 35:09.490
这里是不是要写一个Data field

35:09.490 --> 35:10.090
对不对

35:10.090 --> 35:11.090
Data field

35:11.090 --> 35:11.990
是不是要写

35:11.990 --> 35:12.490
对不对

35:12.490 --> 35:13.090
要写吧

35:14.790 --> 35:15.490
然后

35:15.490 --> 35:16.090
还有什么

35:16.590 --> 35:17.390
还有就是

35:17.390 --> 35:18.390
我们这里要写什么

35:18.390 --> 35:19.490
Data field

35:19.490 --> 35:20.690
就是nessener

35:20.690 --> 35:21.490
对不对

35:21.490 --> 35:22.290
验证的属性

35:22.290 --> 35:23.290
属性默认就是Value

35:23.290 --> 35:23.890
对吧

35:23.890 --> 35:24.690
默认就是Value

35:24.690 --> 35:25.690
Value可以不写了

35:25.690 --> 35:26.290
nessener

35:26.290 --> 35:27.690
如果你要把它变成Inputer

35:27.690 --> 35:28.190
事件的话

35:28.190 --> 35:29.390
你是不是要写个Input

35:29.390 --> 35:29.990
对吧

35:30.290 --> 35:31.490
我们要监听的是Inputer

35:31.490 --> 35:31.990
事件

35:32.990 --> 35:33.490
然后

35:35.490 --> 35:36.690
还要写什么

35:36.690 --> 35:37.690
我们密码输的时候

35:37.690 --> 35:39.090
是不是要触发别人的密码

35:39.090 --> 35:39.490
对不对

35:39.490 --> 35:40.290
别的验证

35:40.290 --> 35:41.490
我们这里还要输出

35:41.490 --> 35:44.290
还要输入Data field

35:44.290 --> 35:45.490
field

35:45.490 --> 35:46.090
很正常

35:46.090 --> 35:47.190
有说这么难用吗

35:47.190 --> 35:48.090
那你说你不这样用

35:48.090 --> 35:48.990
怎么办

35:48.990 --> 35:51.290
以后里面会学习一个表达验证插件

35:51.290 --> 35:52.790
你会发现就这么用的

35:52.790 --> 35:54.490
它不一定是自定义属性

35:54.490 --> 35:55.990
不一定是自定义的属性

35:55.990 --> 35:56.890
有可能是别的

35:56.890 --> 35:58.790
有可能是要通过对象来传递

35:58.790 --> 35:59.790
但是就得给

35:59.790 --> 36:00.790
你不给怎么办了

36:01.890 --> 36:02.690
但是这些不给

36:02.690 --> 36:03.490
这个东西可以不给

36:03.490 --> 36:04.790
不给的话使用默认值

36:04.790 --> 36:06.190
欠据对吧

36:06.190 --> 36:06.890
那么这里

36:06.890 --> 36:07.690
Data field

36:07.690 --> 36:08.190
还有什么

36:08.190 --> 36:09.390
还有什么trigger

36:10.190 --> 36:10.990
trigger

36:10.990 --> 36:12.490
要触发哪些表达欲的验证

36:12.490 --> 36:13.090
比如说

36:13.090 --> 36:14.090
我不但要触发自己

36:14.090 --> 36:14.890
还要触发谁

36:14.890 --> 36:17.190
password again

36:17.190 --> 36:18.690
下面这个表达欲

36:18.690 --> 36:19.490
就是我要触发

36:19.490 --> 36:20.790
还要触发这个表达欲

36:20.790 --> 36:21.990
Data field container

36:21.990 --> 36:23.190
要跟这边对应

36:23.190 --> 36:25.290
要跟这里的东西对应

36:25.290 --> 36:26.790
不是跟Lame属性对应

36:26.790 --> 36:28.390
是跟这里的东西对应

36:28.390 --> 36:31.090
就是password again

36:31.090 --> 36:31.990
我要触发这个

36:31.990 --> 36:32.790
那如果我要触发

36:32.790 --> 36:34.290
还要触发账号的验证呢

36:34.290 --> 36:35.290
那假设嘛

36:35.290 --> 36:36.390
我还要触发账号的验证

36:36.390 --> 36:37.690
那我是不是给Dot号

36:37.690 --> 36:38.490
给Dot号啥

36:38.590 --> 36:40.790
就是账号罗屏ID

36:40.790 --> 36:42.290
我还要触发这里的验证

36:42.290 --> 36:44.190
我就这样子写

36:44.190 --> 36:45.890
没有这些是吧

36:45.890 --> 36:50.100
这是触发谁的验证

36:50.100 --> 36:51.100
好

36:51.100 --> 36:52.600
这东西

36:52.600 --> 36:53.900
想想啊

36:53.900 --> 36:55.100
写完了吗

36:55.100 --> 36:56.200
都还没完

36:56.200 --> 36:57.000
还没完

36:57.000 --> 36:59.400
还要约定

36:59.400 --> 37:00.400
还要约定

37:00.400 --> 37:01.500
约定什么了

37:01.500 --> 37:03.300
那如果验证错误了

37:03.300 --> 37:04.900
我要把错误消息放到哪

37:04.900 --> 37:06.500
关键是

37:06.500 --> 37:07.900
我要把错误消息放到哪

37:07.900 --> 37:09.100
是放到这对不对

37:09.100 --> 37:11.800
那我鬼知道你这里的内饼是error

37:11.800 --> 37:13.000
他有可能不是error

37:13.000 --> 37:14.700
他有可能是别的玩意

37:14.700 --> 37:15.300
那怎么办

37:15.300 --> 37:16.800
是不是又来制定属性

37:16.800 --> 37:17.500
对吧

37:17.500 --> 37:18.500
约定

37:20.400 --> 37:22.400
通过

37:22.400 --> 37:26.300
就是制定义属性

37:26.300 --> 37:29.700
data field error

37:29.700 --> 37:30.700
你看我这些制定属性

37:30.700 --> 37:32.400
全是data field开头的

37:32.400 --> 37:34.000
field error

37:34.000 --> 37:35.000
表示

37:35.000 --> 37:39.600
就是错误消息的

37:39.600 --> 37:41.300
错误消息的元素

37:41.300 --> 37:43.000
哪个元素是错误消息

37:43.000 --> 37:45.500
我到时候才能找到这个错误消息

37:45.500 --> 37:46.300
才能干嘛呢

37:46.300 --> 37:47.700
才能给他设置文本

37:47.700 --> 37:49.800
有什么样的错误消息

37:49.800 --> 37:52.700
那表示这个错误消息的元素

37:52.700 --> 37:54.200
如果不写

37:54.200 --> 37:56.100
如果不写

37:56.100 --> 37:57.900
则寻找

37:57.900 --> 37:59.100
寻找

37:59.100 --> 38:00.600
那一样是

38:00.600 --> 38:02.000
error

38:02.000 --> 38:02.500
约定嘛

38:02.500 --> 38:03.400
这都是约定

38:03.400 --> 38:04.300
你可不可以不写

38:04.300 --> 38:05.000
不写可以

38:05.000 --> 38:06.900
我就使用那样是error

38:06.900 --> 38:08.600
那如果你不是那样是error的话

38:08.600 --> 38:09.200
那对不起

38:09.200 --> 38:10.600
我就找不到

38:10.600 --> 38:11.600
我就找不到

38:11.600 --> 38:12.100
找不到的话

38:12.100 --> 38:14.900
我自然就没法去设置什么文本的东西

38:14.900 --> 38:15.700
错误消息文本

38:15.700 --> 38:17.100
我就设置不了

38:17.100 --> 38:18.500
不要这意思

38:18.500 --> 38:20.100
我们先把这个约定好

38:20.100 --> 38:21.100
当然你要

38:21.100 --> 38:22.000
如果比方的话

38:22.000 --> 38:22.900
这里不是error

38:22.900 --> 38:23.900
那么你就是

38:23.900 --> 38:25.300
你就是什么

38:25.300 --> 38:26.700
就是这个

38:26.700 --> 38:29.100
这里叫设置field error

38:29.100 --> 38:32.300
标记一下

38:32.300 --> 38:32.700
好

38:32.700 --> 38:34.100
那我们再来过一下

38:34.100 --> 38:34.800
来过一下

38:34.800 --> 38:36.100
哪些是必填的

38:36.100 --> 38:37.400
你看看哪些是必填的

38:37.400 --> 38:38.700
这个东西是不是必填的

38:38.700 --> 38:39.100
对不对

38:39.100 --> 38:40.300
必填

38:40.300 --> 38:41.300
这个东西是必需要填的

38:41.300 --> 38:42.600
他没有默认词

38:42.600 --> 38:43.600
我鬼知道你的表单

38:43.600 --> 38:44.400
因为你的名字叫啥了

38:44.400 --> 38:45.500
我都知道了

38:45.500 --> 38:46.200
对不对

38:46.200 --> 38:46.400
好

38:46.400 --> 38:47.600
这个东西是不是必填的

38:47.600 --> 38:49.100
这个东西要必填

38:49.100 --> 38:50.600
这个东西你不规定的话

38:50.600 --> 38:51.500
我怎么知道你这里

38:51.500 --> 38:52.800
我要找什么东西了

38:52.800 --> 38:54.500
我要找这个容器里边

38:54.500 --> 38:55.700
哪个东西来进行验证

38:55.700 --> 38:57.200
我就找不到

38:57.200 --> 38:59.100
其他的都有默认词

38:59.100 --> 39:00.200
其他都可以不填

39:00.200 --> 39:01.600
所以说

39:01.600 --> 39:02.800
用户的操作复杂

39:02.800 --> 39:03.900
其实也不复杂

39:03.900 --> 39:04.700
如果很多地方

39:04.700 --> 39:05.900
他不需要配置

39:05.900 --> 39:06.500
不需要告诉他

39:06.500 --> 39:08.400
我直接使用这两个就完事了

39:08.400 --> 39:10.000
就是我只要写一个这个

39:10.000 --> 39:11.500
只要再写个这个就没了

39:11.500 --> 39:11.800
对吧

39:11.800 --> 39:12.900
其他我都不用写了

39:12.900 --> 39:13.300
对不对

39:13.300 --> 39:15.100
像这些地方我都不用写了

39:15.100 --> 39:15.700
明白

39:15.700 --> 39:16.600
明白这个意思吧

39:16.600 --> 39:18.200
只有他的功能

39:18.200 --> 39:19.200
他的默认的功能

39:19.200 --> 39:20.300
达不到要求的时候

39:20.300 --> 39:20.900
我才去写

39:20.900 --> 39:21.200
你看

39:21.200 --> 39:22.100
这样子就非常

39:22.100 --> 39:23.100
寂寧和

39:23.100 --> 39:24.200
用起来又简单

39:24.200 --> 39:26.300
你看这些东西我都可以不写

39:26.300 --> 39:27.800
都可以不写

39:27.800 --> 39:28.800
不写

39:28.800 --> 39:29.500
这里

39:31.700 --> 39:33.400
我只写这个和这个

39:33.400 --> 39:34.800
那是不是就变得很简单了

39:34.800 --> 39:35.300
对不对

39:35.300 --> 39:36.300
用起来也不复杂

39:36.300 --> 39:38.200
但是我们功能写的时候

39:38.200 --> 39:40.100
一定要考虑到这些

39:40.100 --> 39:44.460
你看我全用制定属性来进行约定

39:44.460 --> 39:45.260
好

39:45.260 --> 39:47.360
然后完了吗

39:47.360 --> 39:48.060
完了吗

39:48.060 --> 39:49.460
还没完

39:49.460 --> 39:50.660
还没完

39:50.660 --> 39:53.560
我们这里要创建一个表单验证对象

39:53.560 --> 39:55.260
要创立一个表单验证对象的话

39:55.260 --> 39:57.560
你是不是得把表单告诉我

39:57.560 --> 39:58.760
连表单都不告诉我

39:58.760 --> 40:00.160
我在哪里去找的验证

40:00.160 --> 40:02.160
我在哪个区域里边去找

40:02.160 --> 40:03.060
找东西呢

40:03.060 --> 40:04.060
是不是找不到

40:04.060 --> 40:04.660
对吧

40:04.660 --> 40:06.460
那页面上有一个复杂的页面里边

40:06.460 --> 40:07.660
有可能很多很多的表单

40:07.660 --> 40:08.460
比方搜索框

40:08.460 --> 40:10.460
一个我闷框就是个表单

40:10.460 --> 40:12.460
有可能是一个驻车页面也可以登渡

40:12.460 --> 40:12.860
对吧

40:12.860 --> 40:14.560
它有可能不同的区域

40:14.560 --> 40:15.460
它都有表单

40:15.460 --> 40:17.560
那我验证哪个表单了

40:17.560 --> 40:18.960
表单里面它的名字

40:18.960 --> 40:19.960
它的这个名字

40:19.960 --> 40:22.360
表单域的名字有可能会重明

40:22.360 --> 40:22.860
是不是

40:22.860 --> 40:24.060
都会造成问题

40:24.060 --> 40:26.860
所以说你得把表单的动物元素给给它

40:28.160 --> 40:28.360
好

40:28.360 --> 40:29.960
这里

40:29.960 --> 40:31.760
然后我现在开始研究了

40:31.860 --> 40:33.660
前面是自定义属性的约定

40:36.060 --> 40:38.360
自定义属性的

40:38.360 --> 40:39.060
应该这样子吧

40:39.960 --> 40:42.860
自定义属性的约定

40:42.860 --> 40:43.060
好

40:43.060 --> 40:44.960
下面是构造函数

40:44.960 --> 40:46.860
那就不是约定了就传参了

40:46.860 --> 40:48.960
构造函数的参数

40:48.960 --> 40:51.060
现在先来看这个

40:51.060 --> 40:51.360
第一个

40:52.360 --> 40:54.160
构造函数的参数里边

40:54.160 --> 40:55.360
你要给它啥呢

40:55.360 --> 40:56.160
你要给它啥

40:56.160 --> 40:58.360
是不是要给个表单的动物对象

40:58.360 --> 40:59.760
表单的动物对象

41:01.960 --> 41:03.060
主要的表单动物对象

41:03.060 --> 41:04.260
它不一定是form

41:04.260 --> 41:05.560
有时候它说它一定是form

41:05.560 --> 41:06.660
form元素不一定

41:06.660 --> 41:08.360
它有可能就是一个DIV

41:08.360 --> 41:09.760
但它一定有个元素把它包起来

41:09.760 --> 41:10.860
这是肯定的

41:10.860 --> 41:12.660
它有可能只是个DIV而已

41:12.660 --> 41:13.760
只有一个DIV

41:13.760 --> 41:14.160
有没有可能

41:14.160 --> 41:15.360
当然有可能

41:15.360 --> 41:16.960
当然有可能

41:16.960 --> 41:18.760
这个东西我不需要提交到服务器

41:18.760 --> 41:20.860
或者是我需要提交

41:20.860 --> 41:23.560
但是我不是用form的表单的方式来提交

41:23.560 --> 41:25.060
你们以后会学阿加克斯

41:25.060 --> 41:26.760
我是用介石的方式来控制的

41:27.760 --> 41:28.860
所以说

41:28.860 --> 41:30.260
它不一定是动

41:30.260 --> 41:31.060
所以说注意

41:31.060 --> 41:32.060
我这特别注意

41:32.060 --> 41:33.860
特别注意

41:33.860 --> 41:37.660
一个表单动物对象

41:37.660 --> 41:42.660
不一定是form元素

41:42.660 --> 41:43.860
如果你把它当成form元素

41:43.860 --> 41:44.760
给它注册什么

41:44.760 --> 41:45.760
on sab每次时间

41:45.760 --> 41:47.360
那你完蛋了

41:47.360 --> 41:48.660
它不一定是form元素

41:48.660 --> 41:51.260
所以不一定要把它当成form元素

41:51.260 --> 41:52.260
这是构造函数的参数

41:53.660 --> 41:54.160
好

41:54.160 --> 41:55.360
然后还有什么东西要告诉他呢

41:55.360 --> 41:56.160
告诉他的表单

41:56.160 --> 41:58.160
那么这前面的东西都可以通过约定来找

41:58.160 --> 41:58.860
对吧

41:58.860 --> 42:00.360
还要告诉他什么呢

42:00.360 --> 42:01.260
还告诉他啥

42:01.260 --> 42:01.960
我们再想一想

42:02.960 --> 42:03.760
还告诉他啥呢

42:05.760 --> 42:06.560
告诉他啥呢

42:06.560 --> 42:08.160
还要告诉他什么

42:08.160 --> 42:09.560
验证规则

42:09.560 --> 42:11.160
这是最重要的

42:11.160 --> 42:12.160
他咋验证啊

42:12.160 --> 42:14.660
不然他就是告诉他

42:14.660 --> 42:20.460
每个表单预的验证规则

42:21.660 --> 42:22.360
每个表单预

42:22.360 --> 42:23.760
他都有自己的验证规则

42:23.760 --> 42:24.360
对吧

42:24.360 --> 42:26.560
都有自己的验证规则

42:26.560 --> 42:26.860
好

42:26.860 --> 42:28.760
那么接下来我们来详细来说

42:29.760 --> 42:30.760
表单

42:31.760 --> 42:33.560
每个每个表单预的验证规则

42:36.560 --> 42:37.060
这个点

42:37.060 --> 42:38.360
这一个点呢

42:38.360 --> 42:39.260
这个规则呢

42:39.260 --> 42:42.060
我们把他把这个每一个所有表单预

42:42.060 --> 42:43.160
应该这样说啊

42:43.160 --> 42:44.160
你既然要验证嘛

42:44.160 --> 42:44.560
对吧

42:44.560 --> 42:45.360
你肯定有规则

42:45.360 --> 42:46.660
那如果你没有规则的话

42:46.660 --> 42:47.560
你不需要验证了

42:47.560 --> 42:47.860
对吧

42:47.860 --> 42:48.960
你不需要验证怎么办

42:48.960 --> 42:50.160
你不需要验证很简单

42:50.160 --> 42:51.860
你就比方说下面这两项啊

42:51.860 --> 42:52.660
手机号

42:52.660 --> 42:52.960
对吧

42:52.960 --> 42:54.560
手机号这一项不需要验证

42:54.560 --> 42:55.160
不需要验证

42:55.160 --> 42:56.060
你不要学家

42:56.060 --> 42:57.260
这个玩意就完事了

42:57.360 --> 42:58.860
你不加他他就不会验证

42:58.860 --> 42:59.860
就不会验证了

43:01.460 --> 43:01.860
然后呢

43:01.860 --> 43:03.560
你给规则的时候也不要给他规则

43:05.060 --> 43:05.460
好

43:05.460 --> 43:06.860
所有表单预的验证规则

43:06.860 --> 43:08.060
我们把这个东西叫做

43:09.160 --> 43:09.860
就是

43:10.860 --> 43:12.560
给他给他个定书语吧

43:12.560 --> 43:14.860
自己按一个数语叫做所有规则

43:15.260 --> 43:16.160
所有规则

43:17.660 --> 43:18.460
所有规则

43:19.060 --> 43:20.560
所有规则是一个对象

43:22.860 --> 43:23.760
我们把这样子吧

43:23.760 --> 43:25.160
把它叫做表单规则

43:26.360 --> 43:26.860
这里

43:27.660 --> 43:28.660
称之为

43:29.360 --> 43:30.260
表单规则

43:30.460 --> 43:30.660
好

43:30.660 --> 43:31.860
我们后边说到表单规则

43:31.860 --> 43:33.860
就知道是所有的规则啊

43:33.860 --> 43:36.260
这个表单里面所有的规则叫做表单规则

43:36.460 --> 43:36.860
好

43:37.060 --> 43:39.260
表单规则是一个对象

43:39.860 --> 43:40.660
是一个对象

43:40.660 --> 43:41.760
我们这里先规定好

43:41.860 --> 43:43.060
表单规则是一个对象

43:43.560 --> 43:44.860
对象中的

43:45.360 --> 43:45.860
这样吧

43:46.060 --> 43:49.460
对象中的每一个属性名

43:50.660 --> 43:54.460
对应表单的表单的什么

43:54.660 --> 43:56.260
表单的就是

43:56.860 --> 43:58.560
自断迷

43:59.260 --> 44:00.060
啥意思呢

44:00.360 --> 44:01.060
比方说

44:01.260 --> 44:02.860
到时候我们要调用这个构造函

44:02.860 --> 44:04.260
说我们要给他传一个对象

44:04.260 --> 44:05.260
一个什么对象呢

44:05.260 --> 44:06.260
就是一个

44:07.560 --> 44:08.760
血码可引用进来吗

44:09.360 --> 44:09.960
普朗迹

44:10.460 --> 44:11.160
就是

44:11.460 --> 44:12.360
4500里在头

44:12.760 --> 44:14.860
也同时已经感到浑身参斗了

44:14.860 --> 44:15.460
对吧

44:16.260 --> 44:17.160
就是不简单

44:17.160 --> 44:18.060
做插件就是不简单

44:18.060 --> 44:18.960
所以说你这几课

44:18.960 --> 44:20.160
如果你实在停不下去了

44:20.160 --> 44:21.160
实在感到恐怖了

44:21.260 --> 44:21.760
你走

44:21.860 --> 44:23.260
我非常非常能够理解你

44:23.260 --> 44:24.560
非常非常能够理解你

44:25.060 --> 44:26.760
这一课是我为了填坑

44:26.760 --> 44:28.260
我为此之前为什么去挖这个坑

44:28.260 --> 44:29.060
那我的田了

44:31.560 --> 44:32.160
如果

44:32.260 --> 44:34.460
假设我们这里要写个规则

44:34.460 --> 44:35.160
就是

44:35.360 --> 44:36.260
form入

44:36.560 --> 44:37.260
form入

44:37.660 --> 44:38.760
有这么一个规则对象

44:38.960 --> 44:40.160
叫做表单规则

44:40.160 --> 44:40.960
它是个对象

44:41.260 --> 44:42.860
这个对象里边有哪些属性呢

44:42.860 --> 44:44.060
它是这样子规定的

44:44.560 --> 44:46.760
你的属性的名字一定要对应到这

44:47.060 --> 44:47.860
一定要对应到这

44:47.960 --> 44:49.460
比方说我要给他写规则

44:49.460 --> 44:50.660
就是login id

44:51.560 --> 44:53.060
给他写什么规则

44:54.960 --> 44:55.960
password

44:56.860 --> 44:57.460
规则

44:57.860 --> 44:58.560
然后

44:58.560 --> 45:00.860
password again

45:01.460 --> 45:02.060
again

45:02.260 --> 45:02.960
是不是规则

45:03.660 --> 45:04.660
我们是这样子来配置的

45:04.660 --> 45:05.060
对吧

45:05.260 --> 45:07.360
用这样的配置给他配置为一个对象

45:07.660 --> 45:08.860
给他配置为一个对象

45:09.260 --> 45:10.260
这个对象的属性名

45:10.260 --> 45:11.860
它一定要对应到这个制断名

45:11.960 --> 45:12.860
不然对应不上

45:12.960 --> 45:14.060
闹到时候我这个规则

45:14.160 --> 45:14.860
没有验证通过

45:14.860 --> 45:15.960
我到哪里去找这个

45:15.960 --> 45:17.060
对应的动物元素呢

45:17.060 --> 45:17.660
找不到

45:18.160 --> 45:19.060
是这么个意思

45:19.060 --> 45:19.860
所以说我这里

45:19.860 --> 45:20.960
用这个属性名

45:20.960 --> 45:22.360
对应到你的制断名

45:23.360 --> 45:24.360
像公开直播课

45:24.360 --> 45:25.760
我就没法这样这么细了

45:26.560 --> 45:28.060
这里我可以慢慢的把它讲清楚

45:28.560 --> 45:29.760
每一个属性名

45:29.760 --> 45:31.060
对应表达的制断名

45:31.660 --> 45:31.960
好

45:31.960 --> 45:33.460
属性值是怎么了

45:34.160 --> 45:36.360
属性值表示

45:36.760 --> 45:37.960
规则数组

45:38.360 --> 45:40.460
他这里为什么是规则数组

45:40.760 --> 45:41.960
你说这个地方是一个数组

45:42.560 --> 45:43.560
为什么是数组

45:43.660 --> 45:45.360
因为每一个表达制断

45:45.560 --> 45:46.960
他有多个规则

45:47.160 --> 45:48.660
他有可能会有多个规则

45:49.260 --> 45:50.160
比方说这里

45:50.460 --> 45:51.760
张浩看了看着

45:52.260 --> 45:53.260
第一个规则是啥

45:53.260 --> 45:54.160
第一个规则是

45:54.860 --> 45:55.860
请输入张浩

45:56.260 --> 45:57.160
这是第一个规则

45:57.560 --> 45:58.560
第二个规则是啥

45:58.560 --> 45:59.360
第二个规则是

45:59.360 --> 46:00.060
我看一下吧

46:01.760 --> 46:02.460
第二个规则

46:03.060 --> 46:04.860
张浩必须是六到十二位的制服

46:04.860 --> 46:05.760
是不是第二个规则

46:05.960 --> 46:06.460
对不对

46:06.960 --> 46:08.360
他是有一个表单

46:08.360 --> 46:09.960
像他可能有多个规则

46:09.960 --> 46:11.660
有可能一个两个三个十个

46:11.660 --> 46:11.960
对不对

46:11.960 --> 46:12.760
都有可能的

46:13.060 --> 46:13.860
都有可能的

46:15.460 --> 46:16.460
那么这里的于是

46:16.460 --> 46:17.960
对的规则应该是个数组

46:18.460 --> 46:19.460
应该是一个数组

46:20.460 --> 46:21.260
这里也是

46:21.260 --> 46:22.260
应该是一个数组

46:23.460 --> 46:23.760
好

46:23.760 --> 46:25.260
数组里边是啥呢

46:25.660 --> 46:26.660
数组里边是啥呢

46:26.660 --> 46:28.260
就是一个一个的规则了

46:28.660 --> 46:29.660
一个一个的规则

46:30.260 --> 46:32.160
属性值表示规则数组

46:32.760 --> 46:34.860
多个规则

46:35.160 --> 46:38.260
就是该插件

46:38.560 --> 46:40.160
该插件验证时

46:40.860 --> 46:44.260
会根据数组的顺序

46:44.560 --> 46:47.960
数组中提供的规则顺序

46:48.360 --> 46:49.360
进行验证

46:49.560 --> 46:49.960
对吧

46:50.360 --> 46:53.560
你按照我会按照数组里边提供的规则顺序进行验证

46:54.060 --> 46:55.160
然后这里有一句话

46:55.160 --> 46:58.060
所有验证都是同步的

46:58.360 --> 46:59.760
好这里的我特别说明

47:01.260 --> 47:02.760
一页什么叫同步的啊

47:02.760 --> 47:04.060
就是第一个验证验证完了

47:04.060 --> 47:04.860
去验证第二个

47:04.860 --> 47:05.760
第二个验证验证完了

47:05.760 --> 47:06.660
去验证第三个

47:07.460 --> 47:09.160
是是这样子验证的啊

47:09.160 --> 47:10.060
都是同步的

47:10.460 --> 47:12.460
为什么我特别说明一下这个点呢

47:12.560 --> 47:13.960
因为你们以后了

47:14.260 --> 47:16.260
你们以后会学习异步

47:17.260 --> 47:18.460
当然我们现在学习的异步了

47:18.460 --> 47:18.660
对吧

47:18.760 --> 47:19.260
学习的异步

47:19.260 --> 47:20.660
只是我们现在的场景呢

47:20.760 --> 47:21.660
异步在验证这里呢

47:21.660 --> 47:22.860
没有发挥作用而已

47:22.960 --> 47:23.860
因为你们以后呢

47:23.860 --> 47:25.060
会学习阿迦克斯

47:25.160 --> 47:26.860
阿迦克斯会进行远程请求

47:26.860 --> 47:27.660
就是比方说啊

47:27.760 --> 47:29.360
我拿到一个用户书的账号

47:29.360 --> 47:30.360
我要看一下这个账号

47:30.360 --> 47:31.760
是不是已经被注册过了

47:31.960 --> 47:33.360
是不是要远程请求服务器

47:33.460 --> 47:34.960
从服务器去判断一下

47:35.060 --> 47:35.960
服务器那边告诉我

47:35.960 --> 47:36.960
哎这个账号可以用

47:36.960 --> 47:37.660
那就可以用

47:37.660 --> 47:38.260
他服务器告诉我

47:38.260 --> 47:39.060
这个账号不能用

47:39.060 --> 47:39.660
那就不能用

47:39.660 --> 47:40.660
这就是异步的

47:41.260 --> 47:43.260
他要等一段时间才能知道结果

47:43.820 --> 47:45.660
那这种情况下更复杂的用户

47:46.360 --> 47:47.260
你们要封掉

47:47.460 --> 47:48.260
所以说呢

47:48.260 --> 47:48.860
我们

47:49.460 --> 47:51.560
点到极值啊点到极值

47:51.560 --> 47:52.160
你们以后呢

47:52.160 --> 47:53.560
工地更加深厚的时候呢

47:53.560 --> 47:54.160
我们再去

47:54.160 --> 47:55.460
你们再再去可以

47:55.460 --> 47:56.260
完善这个

47:56.460 --> 47:57.860
验证验证这个

47:58.060 --> 47:58.660
框架

47:59.260 --> 48:00.160
其中不叫验证查证

48:00.160 --> 48:02.060
这都都叫做验证框架了

48:02.360 --> 48:03.860
可以去完善他啊

48:04.060 --> 48:05.360
然后把它做成异步的

48:05.560 --> 48:07.160
它是需要使用毁掉韩束

48:07.160 --> 48:08.960
或者是使用es6里边的

48:09.260 --> 48:09.960
promise

48:09.960 --> 48:11.860
或者是es7里边的async

48:11.860 --> 48:12.960
而位置关键制

48:13.860 --> 48:15.160
当然你现在都没结束这一样

48:15.260 --> 48:16.560
我就现在就按同步来来

48:16.760 --> 48:18.360
就变得更简单的很多

48:18.360 --> 48:20.560
就这里复杂度一下子降低的很多了

48:21.060 --> 48:22.160
不然的话更复杂

48:23.760 --> 48:24.960
所谓的验证规则都同步的

48:25.060 --> 48:26.960
并且并且

48:27.160 --> 48:29.760
如果一个验证失败

48:31.060 --> 48:33.960
不会进行后续规则的验证

48:34.460 --> 48:35.960
比方说我这里提供了两个规则

48:36.260 --> 48:37.060
两个规则

48:37.060 --> 48:38.160
第一个是非空规则

48:38.160 --> 48:38.760
第二个是

48:38.960 --> 48:40.460
账号必须是6到12位

48:41.060 --> 48:41.260
好

48:41.260 --> 48:42.260
那么这两个规则

48:42.360 --> 48:43.660
如果第一个验证失败了

48:43.860 --> 48:45.060
第二个就不会验证了

48:45.760 --> 48:47.560
我们这里全是说明的

48:47.560 --> 48:48.460
当然这个东西

48:48.960 --> 48:50.460
你要把它做得更加的营化的话

48:50.460 --> 48:52.760
你还可以把这个点进行配置

48:53.060 --> 48:55.160
就是要不要验证所有的规则

48:55.560 --> 48:56.660
要不要验证所有的规则

48:56.860 --> 48:58.760
你都可以进行控制

48:59.460 --> 48:59.660
好吧

48:59.660 --> 49:01.460
我们这里就规定只验证一个

49:01.660 --> 49:02.660
不进行后续验证了

49:02.660 --> 49:03.460
如果一个失败

49:03.560 --> 49:04.860
他就不进行后续验证了

49:05.560 --> 49:06.060
好吧

49:06.660 --> 49:06.860
好

49:06.860 --> 49:07.860
那么接下来讨论

49:08.460 --> 49:10.460
那么每一个规则是啥东西呢

49:10.960 --> 49:12.260
每个规则到底是个啥呢

49:12.460 --> 49:12.860
好

49:13.360 --> 49:14.160
现在再来讨论

49:14.560 --> 49:18.060
每一个规则是一个对象

49:18.860 --> 49:20.460
每一个具体规则是一个对象

49:22.630 --> 49:22.830
好

49:22.830 --> 49:24.130
这个对象比较重要

49:24.130 --> 49:25.430
这是规则有两个规则

49:25.430 --> 49:27.030
第一个规则就是个对象

49:28.430 --> 49:29.430
第二规则是一个对象

49:29.430 --> 49:30.330
也是一个对象

49:31.130 --> 49:31.830
两个规则

49:32.230 --> 49:33.730
对象里边说又有属性

49:34.030 --> 49:34.530
又有属性

49:34.530 --> 49:35.330
为什么要用对象

49:35.330 --> 49:36.630
因为它里边有属性

49:36.930 --> 49:37.730
有属性

49:37.730 --> 49:39.630
它提供的不是一个信息

49:39.630 --> 49:40.730
如果提供一个信息的话

49:40.730 --> 49:41.930
我们就可以用数字

49:41.930 --> 49:42.730
字幕刷来搞定了

49:42.730 --> 49:43.030
对吧

49:43.130 --> 49:44.130
但是实际上不是的

49:44.230 --> 49:45.830
它里边要提供更多的信息

49:46.230 --> 49:46.930
什么信息呢

49:48.230 --> 49:49.230
该对象中

49:49.930 --> 49:51.030
该对象中

49:52.730 --> 49:55.130
包含两个属性

49:55.630 --> 49:56.530
两个属性

49:57.430 --> 49:58.530
哪两个属性呢

49:58.830 --> 49:59.830
哪两个属性呢

50:00.830 --> 50:01.730
第一个属性

50:02.530 --> 50:03.630
第一个属性是什么

50:03.930 --> 50:05.730
叫做入我属性

50:06.530 --> 50:07.330
表示

50:08.330 --> 50:09.830
表示规则

50:10.130 --> 50:11.030
具体的规则

50:11.230 --> 50:12.030
具体的规则

50:12.030 --> 50:12.830
规则是啥

50:13.130 --> 50:14.530
第二个属性表示的是

50:15.130 --> 50:16.530
表示的是

50:19.530 --> 50:20.230
message

50:20.730 --> 50:21.230
属性

50:21.830 --> 50:23.430
表示错误消息

50:23.830 --> 50:24.930
表示错误消息

50:25.430 --> 50:26.230
比方说

50:26.230 --> 50:27.430
比方说举个例子

50:27.630 --> 50:28.330
举个例子

50:28.330 --> 50:29.730
我这里就有两个属性

50:29.730 --> 50:30.830
第一个属性就是入

50:31.030 --> 50:32.030
它的规则是啥呢

50:32.030 --> 50:33.030
规则是必填

50:33.330 --> 50:34.430
必填就是required的

50:34.430 --> 50:35.030
比方说

50:35.030 --> 50:35.930
比方说

50:35.930 --> 50:36.830
我随便写一个

50:36.930 --> 50:38.230
然后message是啥呢

50:38.230 --> 50:39.930
就是如果你没有填写

50:39.930 --> 50:40.930
如果验证失败

50:41.930 --> 50:43.030
如果验证失败的话

50:43.030 --> 50:43.930
这里填写的是

50:43.930 --> 50:45.230
请书写

50:46.430 --> 50:48.930
请填写账号

50:50.030 --> 50:51.130
这是验证失败

50:51.530 --> 50:52.330
不要在意是吧

50:53.130 --> 50:54.730
一个是规则本身

50:54.730 --> 50:57.330
一个是规则没有通过的情况下

50:57.330 --> 50:58.530
它的错误消息

50:59.130 --> 50:59.330
好

50:59.330 --> 51:00.830
现在我们来讨论这个入我属性

51:00.830 --> 51:02.130
message属性没啥好说的

51:02.130 --> 51:03.130
它是一个制服串

51:03.430 --> 51:04.530
这是一个制服串

51:04.530 --> 51:05.430
没啥好说的

51:05.630 --> 51:05.930
好

51:05.930 --> 51:07.330
观点看这个入我属性

51:07.430 --> 51:08.730
我们怎么来提供规则

51:08.730 --> 51:09.330
又来了

51:10.130 --> 51:12.030
如果属性有三种曲子

51:12.830 --> 51:14.330
一种是预设值

51:15.130 --> 51:15.930
预设值

51:16.030 --> 51:16.730
什么叫预设值

51:16.730 --> 51:18.130
就像css属性里边

51:18.230 --> 51:19.030
卡了那样子

51:19.030 --> 51:20.330
卡了有什么ray的

51:20.330 --> 51:22.430
一个单词来表示一个预设值

51:22.730 --> 51:23.630
预设值到目前

51:23.630 --> 51:24.730
我们只提供一个

51:25.130 --> 51:26.030
只提供一个

51:26.130 --> 51:28.230
什么就是required

51:28.830 --> 51:29.730
只提供这一个

51:30.530 --> 51:31.730
但是你要考虑到

51:31.730 --> 51:34.130
将来我们可能有更多的预设值

51:34.330 --> 51:35.330
required表示

51:35.930 --> 51:36.930
预设值有哪些呢

51:36.930 --> 51:38.030
我们这里再来

51:38.130 --> 51:39.630
预设值有required

51:40.630 --> 51:42.030
表示的是b填

51:43.330 --> 51:44.030
再来一个

51:44.030 --> 51:44.830
再来一个

51:45.830 --> 51:47.930
没有表示的是

51:48.630 --> 51:50.330
没有表示的是邮箱

51:51.130 --> 51:52.130
表示是邮箱

51:52.230 --> 51:53.230
还有就是什么

51:53.930 --> 51:54.630
再来一个

51:54.730 --> 51:55.430
再来一个

51:56.130 --> 51:56.630
啥了

51:57.830 --> 52:00.230
b填邮箱

52:00.230 --> 52:01.330
再来一个啥了

52:02.430 --> 52:03.230
刚才都讲到

52:03.230 --> 52:03.830
number

52:04.330 --> 52:04.830
number

52:05.130 --> 52:05.630
数字

52:06.030 --> 52:06.530
数字

52:06.730 --> 52:07.730
必须是数字

52:07.930 --> 52:09.330
我们给它三个预设值

52:09.330 --> 52:10.130
比方说这里

52:10.530 --> 52:12.130
required表示这里是b填的

52:12.130 --> 52:12.730
那么没有了

52:12.730 --> 52:14.630
表示你必须要是邮箱

52:14.830 --> 52:15.930
必须要是一个邮箱

52:16.130 --> 52:17.030
然后这里

52:17.130 --> 52:18.030
比方说这里

52:18.030 --> 52:19.830
我们再写一个number

52:20.330 --> 52:21.730
表示它必须是一个数字

52:22.130 --> 52:23.030
必须是一个数字

52:23.530 --> 52:24.330
是这么个意思

52:25.730 --> 52:27.530
这是关于预设值

52:27.830 --> 52:29.130
那么你要考虑到

52:29.330 --> 52:30.230
必须考虑到

52:30.330 --> 52:31.530
就是将来

52:31.930 --> 52:32.630
可能

52:33.730 --> 52:35.730
插件升级以后

52:36.530 --> 52:39.330
会有更多的预设值

52:39.530 --> 52:41.030
所以你要考虑到这一点

52:41.930 --> 52:42.530
你还在意是吧

52:42.730 --> 52:42.930
好

52:42.930 --> 52:43.930
第一个预设值

52:44.330 --> 52:45.430
第二个是什么

52:45.530 --> 52:46.130
挣折

52:46.830 --> 52:47.730
就是个弱属性

52:47.730 --> 52:49.030
还可以写个挣折表达式

52:49.130 --> 52:49.730
比方说

52:50.330 --> 52:51.230
我们这里的弱

52:51.230 --> 52:52.130
它可以这样子写

52:52.830 --> 52:53.930
写个挣折表达式对象

52:55.030 --> 52:56.230
开始结束

52:56.330 --> 52:57.130
开始结束

52:57.330 --> 52:59.030
它里边必须有什么呢

52:59.430 --> 53:00.830
必须是6到12个字符吗

53:00.830 --> 53:01.730
我们写个第二

53:01.730 --> 53:03.130
任意字符6到12个

53:03.630 --> 53:04.330
我可以写个挣

53:04.330 --> 53:05.430
挣折表达式对象

53:05.530 --> 53:06.930
那么如果验证没有通过的话

53:06.930 --> 53:07.730
那么我们就写

53:08.530 --> 53:09.330
就是

53:11.830 --> 53:12.530
账号

53:13.030 --> 53:15.430
必须是6到12位

53:16.130 --> 53:16.630
字符

53:16.630 --> 53:18.530
你们以后接触其他的验证框架

53:18.530 --> 53:19.330
基本上都是这么

53:19.830 --> 53:20.630
基本上

53:20.630 --> 53:21.230
它的

53:21.730 --> 53:23.330
思路都是这样的思路

53:24.830 --> 53:25.230
好

53:25.230 --> 53:25.630
然后呢

53:25.630 --> 53:26.330
这是挣折

53:27.130 --> 53:28.030
还有别的吗

53:28.830 --> 53:30.030
除了预设值和挣折

53:30.030 --> 53:31.530
就能解决所有的问题了吗

53:31.730 --> 53:32.730
就能解决了吗

53:32.730 --> 53:33.830
真的能解决了吗

53:33.830 --> 53:35.030
要好好考虑清楚

53:35.430 --> 53:36.630
还不能解决

53:37.230 --> 53:38.230
比方说啊

53:38.330 --> 53:38.830
以后呢

53:38.830 --> 53:39.830
我们这个账号

53:39.830 --> 53:41.730
比方说这个确认密码又没法解决

53:42.430 --> 53:43.730
比方说这里密码怎么办

53:44.030 --> 53:44.630
密码

53:44.730 --> 53:45.630
我这里填写密码

53:45.630 --> 53:47.030
是不是要跟另外一个比较

53:47.030 --> 53:47.930
我打比较了

53:47.930 --> 53:48.430
告诉我

53:48.430 --> 53:49.430
我怎么用一个挣折表达式

53:49.430 --> 53:50.730
跟另外一个东西比较了

53:50.830 --> 53:51.730
那肯定没法比较

53:51.730 --> 53:52.230
对不对

53:52.630 --> 53:54.030
预设值里面又没有提供

53:54.030 --> 53:54.530
有些同学说

53:54.530 --> 53:55.630
加一个预设值

53:56.230 --> 53:57.230
那以后你要想到

53:57.230 --> 53:58.930
这个情况是很多的

53:59.030 --> 53:59.430
以后呢

53:59.430 --> 54:00.530
比方说我要验证账号

54:00.530 --> 54:01.630
是不是唯一的

54:02.430 --> 54:04.630
是不是要向服务器发送请求

54:05.530 --> 54:07.530
要去跟服务器之间进行交互

54:07.530 --> 54:09.230
那这个东西预设值咋写了

54:09.430 --> 54:11.530
他咋知道你跟哪个服务器进行交互了

54:11.530 --> 54:12.230
交互了

54:12.930 --> 54:13.630
没法写

54:14.230 --> 54:17.130
所以说我们还要提供一个最灵活最灵活的

54:17.130 --> 54:19.530
就是我不仅要你用起来简单

54:19.530 --> 54:21.230
不然你加一个required就表示避田了

54:21.230 --> 54:21.630
对吧

54:21.930 --> 54:23.030
你用起来很简单

54:23.030 --> 54:24.230
我还要干嘛呢

54:25.330 --> 54:26.730
我还要啊

54:27.330 --> 54:29.030
还要设置一个就是

54:29.330 --> 54:30.930
最灵活的方式

54:31.130 --> 54:33.730
就是如果这个属性还可以是一个函数

54:34.230 --> 54:35.730
是一个验证函数

54:36.530 --> 54:39.030
这个如果这个属性还必还可以是个验证函数

54:39.030 --> 54:41.630
比方说到时候重新输入密码这一块

54:41.630 --> 54:43.430
他可以是有一个预设值

54:43.830 --> 54:44.830
有一个预设值

54:44.930 --> 54:47.030
就是请填写

54:47.230 --> 54:48.730
请填写确证密码

54:49.930 --> 54:50.630
这是确证密码

54:50.630 --> 54:51.030
对吧

54:51.230 --> 54:51.430
好

54:51.430 --> 54:52.730
那么他还可以写什么

54:52.730 --> 54:53.630
还可以写个验证规则

54:53.630 --> 54:55.030
这个规则的这个如果呢

54:55.030 --> 54:56.330
是一个函数

54:57.430 --> 54:58.130
是一个函数

54:58.130 --> 54:59.930
用一个函数来验证

54:59.930 --> 55:02.630
因为我确实不知道你要到底要搞啥了

55:03.130 --> 55:05.430
你又郑者表达是没法满足力

55:05.630 --> 55:07.030
预设值没法满足力

55:07.030 --> 55:08.830
那么还有其他的乱七八糟的规则

55:08.830 --> 55:10.630
我就确实不知道你要干嘛了

55:10.630 --> 55:11.330
因此呢

55:11.330 --> 55:13.230
我你可以给我传一个函数

55:13.230 --> 55:14.730
用函数来进行验证

55:15.030 --> 55:15.530
好

55:15.530 --> 55:16.630
这是验证函数

55:16.630 --> 55:17.930
这个函数我说一下格式

55:18.830 --> 55:19.530
函数

55:20.830 --> 55:22.530
函数具有两个参数

55:22.930 --> 55:23.830
两个参数

55:25.930 --> 55:27.430
函数具有两个参数

55:29.630 --> 55:30.630
哪两个参数呢

55:31.630 --> 55:32.730
参数一

55:33.230 --> 55:33.930
参数一呢

55:33.930 --> 55:34.930
就是叫做

55:34.930 --> 55:35.730
我要取个名字吗

55:35.730 --> 55:36.330
叫做

55:36.730 --> 55:37.930
Value

55:37.930 --> 55:38.530
Value

55:39.130 --> 55:44.030
表示当前表单域的值

55:44.830 --> 55:46.030
当前表单域的值

55:46.830 --> 55:47.930
也就是说说啥呢

55:47.930 --> 55:48.630
我们这里

55:48.930 --> 55:49.830
把他配置到哪的

55:49.830 --> 55:51.230
配置到password的game里边的

55:51.230 --> 55:51.630
对吧

55:51.630 --> 55:52.730
那么第一个value

55:53.230 --> 55:54.830
他会到时候我会传给他

55:54.830 --> 55:55.730
我会传给你

55:55.730 --> 55:56.330
你带帮我验

55:56.330 --> 55:57.530
我把这个值传给你

55:57.630 --> 55:58.630
把这个password的game

55:58.630 --> 55:59.930
就确证密码的值传给你

55:59.930 --> 56:00.830
你再验证一下

56:01.130 --> 56:02.430
你自己写函数验证

56:02.430 --> 56:04.030
我自己确实验证不了了

56:04.030 --> 56:05.530
你来写函数验证

56:06.530 --> 56:07.330
这是第一个

56:07.730 --> 56:07.930
好

56:07.930 --> 56:08.930
第二个参数呢

56:09.030 --> 56:09.930
你要要用具

56:09.930 --> 56:11.230
这些参数你要用就用

56:11.230 --> 56:11.930
不用就拉倒

56:11.930 --> 56:12.930
反正我会传给你

56:13.130 --> 56:13.630
第二参数呢

56:13.630 --> 56:14.530
是formdata

56:15.130 --> 56:17.230
表示整个表单数据

56:18.130 --> 56:19.030
表单数据

56:20.630 --> 56:22.230
我会把整个的表单数据

56:22.530 --> 56:24.230
做成一个对象一起传给你

56:24.730 --> 56:26.830
会把整个表单数据做成一个对象

56:26.830 --> 56:27.730
一起传给你

56:28.130 --> 56:28.830
比较这个是吧

56:29.530 --> 56:31.730
我把整个表单对象一起传给你

56:31.730 --> 56:34.230
那么你可以作为第二个参数来接受formdata

56:34.330 --> 56:35.430
你拿到这两个数据过后

56:35.430 --> 56:37.030
我就把这些信息全部告诉你的

56:37.530 --> 56:39.230
都已经把这些信息全部告诉你的

56:39.330 --> 56:40.130
告诉你之后呢

56:40.130 --> 56:41.130
你自己去验证

56:41.230 --> 56:42.030
自己去验证

56:42.130 --> 56:43.630
你达到比方说password的更

56:43.730 --> 56:45.130
那么确证密码你要怎么验证

56:45.130 --> 56:46.130
你可以这样验证

56:46.130 --> 56:47.730
value是不是等于

56:49.130 --> 56:50.330
formdata呢

56:50.430 --> 56:51.630
是不是等于formdata里边的

56:51.630 --> 56:53.030
比方说formdata是怎么写的

56:53.030 --> 56:54.630
这formdata应该是这样的格式

56:54.830 --> 56:55.630
在这里

56:55.630 --> 56:56.930
在这里应该是这样的格式

56:57.830 --> 56:59.030
login id

56:59.730 --> 57:00.530
等于

57:01.130 --> 57:02.030
这个是个字不错

57:03.030 --> 57:04.330
然后password等于

57:05.330 --> 57:06.730
应该是这么一种对象格式

57:07.130 --> 57:08.830
那么我就把自己的当前这个值

57:08.930 --> 57:09.830
去跟什么比呢

57:09.930 --> 57:11.730
formdata里边的什么

57:11.830 --> 57:14.330
就是password来进行对比

57:15.130 --> 57:15.930
如果相等

57:16.230 --> 57:17.830
好 相等的话怎么样

57:17.830 --> 57:19.030
它要返回

57:19.130 --> 57:21.030
如果不相等的话又怎么样

57:21.030 --> 57:21.930
也得返回

57:22.030 --> 57:23.030
我们这里有要求

57:23.330 --> 57:24.030
有要求

57:24.230 --> 57:26.130
函数的返回值

57:26.730 --> 57:28.930
函数如果验证通过

57:29.230 --> 57:30.930
如果验证通过

57:31.730 --> 57:33.630
返回去

57:34.030 --> 57:34.830
返回去

57:37.160 --> 57:39.060
否则返回什么

57:39.260 --> 57:40.760
返回就是

57:43.160 --> 57:44.460
那个错误消息

57:46.860 --> 57:48.360
有了验证函数过后

57:48.360 --> 57:49.960
就不需要message属性了

57:50.760 --> 57:52.960
使用验证函数后

57:53.860 --> 57:55.860
message属性无效

57:56.160 --> 57:57.860
这个属性就没有效果了

57:57.860 --> 58:00.160
因为我是用返回的方式来给错误消息

58:00.160 --> 58:01.460
为什么我要用这种方式

58:01.460 --> 58:02.660
而不再用message属性了

58:02.760 --> 58:04.660
因为你既然在写自定义

58:04.960 --> 58:05.760
自定义函数

58:05.760 --> 58:06.360
说明说

58:06.360 --> 58:09.460
说明了你这里的情况是比较复杂和灵活的

58:09.860 --> 58:10.860
那么有可能你这里

58:10.860 --> 58:12.260
要根据不同的情况

58:12.260 --> 58:13.560
得到不同的错误消息

58:13.560 --> 58:14.260
有没有可能

58:14.460 --> 58:15.360
根据不同的情况

58:15.360 --> 58:16.460
得到不同的错误消息

58:16.460 --> 58:17.460
是有可能的

58:17.660 --> 58:18.260
所以说呢

58:18.260 --> 58:20.160
我这里让你返回错误消息

58:20.160 --> 58:21.660
而不再是用message属性

58:21.660 --> 58:21.960
看

58:21.960 --> 58:23.360
这都是有考虑的

58:24.360 --> 58:25.160
好吧

58:25.160 --> 58:26.160
这是规则对象

58:26.560 --> 58:27.360
规则对象

58:27.860 --> 58:28.260
ok

58:28.260 --> 58:29.460
我们目前就想到这么多了

58:31.930 --> 58:32.430
吓人吗

58:32.430 --> 58:33.830
我现在都还没开始写单了

58:34.030 --> 58:35.030
我仅仅是想

58:35.530 --> 58:37.430
我们现在仅仅是在分析

58:37.430 --> 58:38.530
分析需求

58:38.530 --> 58:40.430
我们要做成一个什么样的样子

58:40.630 --> 58:42.030
做成一个什么样子样子

58:42.030 --> 58:43.330
就包含了这么多东西了

58:44.530 --> 58:44.930
还没

58:45.330 --> 58:46.430
就包含了这么多东西了

58:47.730 --> 58:49.630
完美都还没有完

58:49.930 --> 58:51.230
都还没有完

58:51.530 --> 58:52.530
还有就是构造函数

58:52.530 --> 58:54.530
他会建立一个对象对吧

58:54.630 --> 58:55.830
他会建立一个对象

58:55.830 --> 58:56.830
我们看一下

58:57.430 --> 58:58.230
通过

58:58.630 --> 58:59.530
构造

58:59.930 --> 59:01.130
构造函数

59:01.330 --> 59:02.630
创建的对象

59:02.630 --> 59:05.330
里边有哪些东西可以共我们使用

59:06.030 --> 59:07.330
可以共我们使用

59:08.330 --> 59:09.030
第一个

59:09.330 --> 59:10.130
哪些东西呢

59:10.830 --> 59:11.630
创建的对象

59:12.130 --> 59:12.730
自动的

59:14.730 --> 59:15.430
会对

59:16.330 --> 59:17.130
表单

59:17.730 --> 59:18.530
相应

59:19.130 --> 59:19.930
会根据

59:20.430 --> 59:22.630
会根据相应的配置

59:23.630 --> 59:26.930
对表单进行自动验证

59:27.630 --> 59:28.230
这是自动的

59:28.230 --> 59:28.830
你不需要管

59:28.830 --> 59:29.830
你不需要做任何处理

59:29.830 --> 59:30.830
他就会自动完成

59:31.330 --> 59:31.830
第二

59:32.430 --> 59:32.930
第二

59:35.230 --> 59:36.930
提供一个方法

59:36.930 --> 59:38.330
提供一个validate

59:39.030 --> 59:40.230
提供validate方法

59:41.230 --> 59:42.230
该方法

59:43.030 --> 59:43.830
接收

59:44.630 --> 59:45.930
接收就是

59:48.800 --> 59:49.700
这样吧

59:50.000 --> 59:50.700
这个方法呢

59:50.700 --> 59:51.400
无参

59:51.600 --> 59:53.100
如果是无参的情况下

59:53.200 --> 59:54.000
验证

59:55.000 --> 59:56.000
整个表单

59:56.300 --> 59:57.500
验证整个表单

59:58.800 --> 59:59.900
就是有参

01:00:00.600 --> 01:00:02.200
有参有参的情况下

01:00:02.400 --> 01:00:03.300
通过那个方法

01:00:03.700 --> 01:00:04.800
有参的情况下

01:00:06.400 --> 01:00:07.800
如果是有参的话

01:00:07.800 --> 01:00:08.400
那么

01:00:08.600 --> 01:00:11.700
他验证指定的表单域

01:00:12.100 --> 01:00:13.300
你想验的哪个地方

01:00:13.300 --> 01:00:14.000
就验的哪个地方

01:00:14.000 --> 01:00:14.800
通过调用这个方法

01:00:14.800 --> 01:00:15.900
validate的时候就可以完成

01:00:17.000 --> 01:00:18.000
并且该方法

01:00:18.600 --> 01:00:19.300
并且

01:00:20.100 --> 01:00:21.100
该方法

01:00:21.600 --> 01:00:23.500
返回验证结果

01:00:23.600 --> 01:00:24.600
验证结果是一个对象

01:00:24.900 --> 01:00:25.500
是个对象

01:00:25.500 --> 01:00:27.000
就包含了哪些是错误的

01:00:27.000 --> 01:00:27.300
对吧

01:00:27.300 --> 01:00:28.100
哪些是错误的

01:00:28.100 --> 01:00:29.000
他为什么会错误

01:00:29.000 --> 01:00:29.900
错误消息是啥

01:00:29.900 --> 01:00:30.900
把这个验证对象

01:00:30.900 --> 01:00:32.500
验证的结果可以给你返回

01:00:32.700 --> 01:00:33.900
因为将来别别人

01:00:33.900 --> 01:00:35.200
用这个插件的人

01:00:35.200 --> 01:00:35.900
有可能会

01:00:36.100 --> 01:00:37.300
会需要这个东西

01:00:37.500 --> 01:00:38.700
因为他不想让你

01:00:38.700 --> 01:00:39.500
全部让你自动

01:00:39.500 --> 01:00:40.900
他有可能有些别的地方

01:00:40.900 --> 01:00:41.900
他要自行处理

01:00:42.000 --> 01:00:43.400
所以说你要给他一个方法

01:00:43.400 --> 01:00:44.800
让他来进行自行验证

01:00:45.300 --> 01:00:46.600
他想验证谁就验证谁

01:00:47.200 --> 01:00:47.700
好吧

01:00:48.700 --> 01:00:48.900
好

01:00:48.900 --> 01:00:49.400
这是第一个

01:00:49.400 --> 01:00:50.200
就是这个啊

01:00:51.100 --> 01:00:51.600
好

01:00:52.300 --> 01:00:52.900
第三个

01:00:53.700 --> 01:00:54.300
第三个

01:00:55.500 --> 01:00:56.300
好提供

01:00:57.300 --> 01:00:58.100
提供什么呢

01:00:59.800 --> 01:01:01.600
提供就是

01:01:02.300 --> 01:01:04.900
get form data 方法

01:01:05.500 --> 01:01:07.300
提供get form data 方法

01:01:08.100 --> 01:01:09.100
该方法

01:01:09.800 --> 01:01:10.800
返回

01:01:11.300 --> 01:01:12.100
表单

01:01:12.500 --> 01:01:14.700
就整个表单对象

01:01:15.100 --> 01:01:16.200
就是我们刚才说了这

01:01:16.500 --> 01:01:17.300
就这个东西

01:01:17.300 --> 01:01:18.300
整个表单对象

01:01:19.100 --> 01:01:19.200
好

01:01:19.200 --> 01:01:20.000
目前我们就提供

01:01:20.000 --> 01:01:21.000
你这两个方法够了

01:01:21.200 --> 01:01:21.800
将来于是

01:01:21.900 --> 01:01:23.500
我们写成这种结构之后呢

01:01:23.700 --> 01:01:24.800
写成了这种结构之后

01:01:24.800 --> 01:01:26.100
我们将来还可以就是

01:01:26.400 --> 01:01:27.500
扩展更多的东西

01:01:27.900 --> 01:01:28.800
实际上我们写的过程中

01:01:28.800 --> 01:01:30.800
其实也也会加很多方法了啊

01:01:30.800 --> 01:01:32.700
只是我们希望用户用的

01:01:32.700 --> 01:01:34.100
也就是这两个方法够了

01:01:35.400 --> 01:01:35.800
好了

01:01:36.900 --> 01:01:38.200
我们的需求分析完了

01:01:38.400 --> 01:01:39.000
结束了

01:01:39.400 --> 01:01:39.800
来吧

01:01:40.400 --> 01:01:41.700
你们可以尝试的做一下

01:01:41.900 --> 01:01:43.600
这就是我们要做的事情

01:01:44.200 --> 01:01:45.200
你现在哪怕做不出来

01:01:45.200 --> 01:01:46.700
你可以尝试的去想一想

01:01:46.700 --> 01:01:47.100
想一想

01:01:47.100 --> 01:01:48.700
我们应该用什么样的思路来做

01:01:49.200 --> 01:01:50.200
但是那你至少

01:01:50.300 --> 01:01:51.900
必须要把这个需求

01:01:51.900 --> 01:01:53.400
我们要做啥要搞清楚

01:01:53.500 --> 01:01:54.800
我们怎么去使用它

01:01:55.600 --> 01:01:57.700
你以为你以为表单插件

01:01:58.100 --> 01:01:59.100
写下就完事了

01:01:59.400 --> 01:02:00.100
我告诉你们

01:02:00.100 --> 01:02:03.300
你们以后要学使用表单插件

01:02:05.430 --> 01:02:08.930
学习使用表单插件

01:02:09.230 --> 01:02:10.230
表单验证插件

01:02:10.230 --> 01:02:11.930
你们以后要学习的

01:02:13.230 --> 01:02:14.530
你又知道这个玩意

01:02:14.630 --> 01:02:15.630
又多恐怖了

01:02:15.930 --> 01:02:17.930
你连他使用他的方式

01:02:17.930 --> 01:02:19.930
你专门要拿课程来学习

01:02:20.130 --> 01:02:21.630
当然不是一个整个课程啊

01:02:21.630 --> 01:02:23.830
可能就两节课三节课

01:02:23.830 --> 01:02:24.830
可能要几个小时

01:02:24.830 --> 01:02:27.730
你才能你才能初步的都学不完啊

01:02:27.830 --> 01:02:29.130
只能初步的学习他的功能

01:02:29.130 --> 01:02:30.330
因为他做了一些

01:02:30.530 --> 01:02:31.430
第三方的表单插件

01:02:31.430 --> 01:02:32.530
他做的是产品级的

01:02:32.530 --> 01:02:33.630
非常非常强大功能

01:02:33.630 --> 01:02:34.630
而且很灵活

01:02:34.830 --> 01:02:36.130
而且用起来也很简单

01:02:36.230 --> 01:02:38.230
但是你要用他所有的功能的话

01:02:38.230 --> 01:02:39.430
你要知道他怎么去配置

01:02:40.230 --> 01:02:41.130
你都要学的

01:02:41.130 --> 01:02:42.130
你使用都要学的

01:02:42.130 --> 01:02:43.730
还不要说你自己去开发了

01:02:44.630 --> 01:02:45.030
好吧

01:02:45.030 --> 01:02:46.930
我们先用一节课的时间啊

01:02:46.930 --> 01:02:48.630
先把这个需求分析清楚

01:02:48.630 --> 01:02:49.630
我们下节课开始

01:02:49.630 --> 01:02:51.130
再来开始来写这个东西

01:02:51.630 --> 01:02:53.630
字幕by索兰娅

