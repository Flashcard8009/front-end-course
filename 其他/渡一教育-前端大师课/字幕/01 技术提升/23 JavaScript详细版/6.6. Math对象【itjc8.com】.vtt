WEBVTT

00:00.000 --> 00:16.180
这节课我们讲Mess对象

00:16.180 --> 00:19.680
它不是一个寒树 它不是再一个构造寒树 它是个对象

00:19.680 --> 00:25.680
这个对象我们以前接触过 什么呢 就是Mess 第二Ratom

00:25.680 --> 00:28.680
对吧 得到一个0到1之间的水阶数

00:28.680 --> 00:30.680
我们是以前是接触过的

00:30.680 --> 00:42.680
这个对象里面它提供了一系列与数学相关的成员供你使用

00:42.680 --> 00:48.680
这个既然它是对象 那就不存在什么静态成员和非静态成员了

00:48.680 --> 00:51.680
你也不可能去溜一个Mess 对不对 不可能去溜一个Mess

00:51.680 --> 00:54.680
因为它是一个对象 它不是寒树 你不能去溜它

00:54.680 --> 01:03.000
我们看一下这个Mess 把这个页面运行出来 看一下

01:03.000 --> 01:08.560
就是说我们在页面上你不能去通过溜一个Mess

01:08.560 --> 01:11.560
因为它不是构造寒树 它是一个对象

01:11.560 --> 01:14.560
Mess 你看一下 它不是一个constructor

01:14.560 --> 01:17.560
它不是一个构造寒树 它是一个对象

01:17.560 --> 01:20.560
你看Type of Mess 得到的是个对象

01:20.560 --> 01:23.560
OK 那么我们就来学习这个对象里面

01:23.560 --> 01:26.560
它提供了哪些东西 咱们还是一样找到这个白度

01:27.560 --> 01:33.560
MDMess 搜索一下 就第一个 进去看一下

01:33.560 --> 01:37.560
这里笔记打好 成员 它里面有哪些

01:37.560 --> 01:39.560
好 第一个就是我们学习过的Ridon 对吧

01:39.560 --> 01:45.560
Ridon 表示产生一个0到1之间的水积数

01:45.560 --> 01:47.560
这个已经学过了

01:47.560 --> 01:50.560
它这里面有些数学的 跟数学紧密相关的

01:50.560 --> 01:53.560
比方说求什么对数啊 求底数啊

01:53.560 --> 01:54.560
这些我们就不说了

01:54.560 --> 01:58.560
因为我们之前说过 咱们学编程就用到小学数学

01:58.560 --> 02:00.560
稍微复杂一点 我们都不去设计了

02:00.560 --> 02:02.560
因为我们毕竟用不到

02:02.560 --> 02:03.560
咱们咱们看一下

02:03.560 --> 02:06.560
这里面什么欧拉长数 什么自然对数

02:06.560 --> 02:08.560
这些我们就不看了

02:08.560 --> 02:11.560
它有这么一个属性 叫做π 是得到圆周率

02:11.560 --> 02:13.560
得到圆周率 咱们来看一下这个属性

02:13.560 --> 02:16.560
π 它是个属性 这个是个方法

02:16.560 --> 02:20.560
它是得到圆周率

02:20.560 --> 02:23.560
你看它的命名 有些属性的名字

02:23.560 --> 02:26.560
它是用了一个全部大写的名称

02:26.560 --> 02:29.560
看到没 这个属性的名称全部大写

02:29.560 --> 02:32.560
其实这个命名规范也是在

02:32.560 --> 02:35.560
也是我们经常用的命名规范

02:35.560 --> 02:40.560
就是如果你设置一个属性或者是辨量

02:40.560 --> 02:43.560
它的值永远不会变化

02:43.560 --> 02:44.560
它不可能变化的

02:44.560 --> 02:47.560
比方说 月球到地球的距离

02:47.560 --> 02:48.560
是不是永远不会变化

02:48.560 --> 02:51.560
重力加速度 地球上的重力加速度

02:51.560 --> 02:52.560
是不是不会变化

02:52.560 --> 02:55.560
比方说 圆周率是不是不会变化

02:55.560 --> 02:57.560
像这些不会变化的东西

02:57.560 --> 03:00.560
所有的字母全部大写

03:00.560 --> 03:04.560
我们通常用长量 把它说成是长量

03:04.560 --> 03:06.560
什么叫长量

03:06.560 --> 03:09.560
长量指的是 永远无法

03:09.560 --> 03:12.560
永远不会变化的数据

03:12.560 --> 03:14.560
就是长量

03:15.560 --> 03:19.560
长量一般命名

03:19.560 --> 03:24.560
命名是所有字母大写

03:24.560 --> 03:25.560
所有字母大写

03:25.560 --> 03:27.560
它就没有什么妥封命名法

03:27.560 --> 03:29.560
全部字母大写就完成了

03:29.560 --> 03:31.560
如果是多个单词的话

03:31.560 --> 03:32.560
如果是多个单词的话

03:32.560 --> 03:34.560
用下滑线分割

03:34.560 --> 03:37.560
如果有多个单词

03:37.560 --> 03:40.560
用下滑线分割

03:40.560 --> 03:43.560
这就是长量的命名方式

03:43.560 --> 03:45.560
看一下 这个派

03:45.560 --> 03:46.560
这个派我们看一下

03:46.560 --> 03:48.560
Mess.Pi

03:48.560 --> 03:51.560
看一下 它就这样子

03:51.560 --> 03:53.560
好 咱们继续看 继续看

03:53.560 --> 03:55.560
看下面的方法

03:55.560 --> 03:56.560
方法里面有些方法

03:56.560 --> 03:57.560
我们可能会用到

03:57.560 --> 03:59.560
特别是在做一些

03:59.560 --> 04:01.560
跟图像相关的效果的时候

04:01.560 --> 04:02.560
可能会用到这些计算

04:02.560 --> 04:04.560
一个是求绝对值ABS

04:04.560 --> 04:07.560
它的全称叫做absolute

04:07.560 --> 04:09.560
对一个数字求绝对值

04:09.560 --> 04:10.560
这个很简单

04:10.560 --> 04:11.560
咱们来看一下

04:11.560 --> 04:12.560
方法

04:12.560 --> 04:14.560
它是指的是求绝对值

04:14.560 --> 04:18.070
复数变成正数

04:18.070 --> 04:19.070
0的就是0

04:19.070 --> 04:21.070
Mess.ABS

04:21.070 --> 04:23.070
比方说给它写个复数

04:23.070 --> 04:25.070
看一下 得到的结果就变成正数了

04:25.070 --> 04:27.070
就绝对值 非常非常简单

04:27.070 --> 04:29.070
下一个

04:29.070 --> 04:31.070
什么反正选

04:31.070 --> 04:32.070
什么反逾选

04:32.070 --> 04:33.070
反正切

04:33.070 --> 04:34.070
这些我们就不说了

04:34.070 --> 04:36.070
什么立方跟这些不说了

04:36.070 --> 04:38.070
什么逾选 正选

04:38.070 --> 04:39.070
我们就不说了

04:39.070 --> 04:41.070
我们看一下这个

04:41.070 --> 04:42.070
floor

04:42.070 --> 04:43.070
得到的是什么呢

04:43.070 --> 04:45.070
得到的就是

04:45.070 --> 04:46.070
向下取整

04:46.070 --> 04:48.070
我们之前提到过这么个东西

04:48.070 --> 04:49.070
叫floor

04:49.070 --> 04:50.070
方法

04:50.070 --> 04:52.070
指的是对一个数

04:52.070 --> 04:54.070
向下取整

04:54.070 --> 04:55.070
这个是我们经常用的

04:55.070 --> 04:57.070
特别是产生水系数的一块

04:57.070 --> 05:00.070
得到的是一个向下取整的整数

05:00.070 --> 05:01.070
咱们来看一下

05:01.070 --> 05:04.070
比方说这里Mess.floor

05:04.070 --> 05:06.070
我们这里写个复3.1

05:06.070 --> 05:08.070
得到的结果是什么呢

05:08.070 --> 05:09.070
复4

05:09.070 --> 05:11.070
它跟PoseInt就不太一样了

05:11.070 --> 05:13.070
PoseInt是直接

05:13.070 --> 05:15.070
直接忽略掉小数点

05:15.070 --> 05:16.070
后面的东西

05:16.070 --> 05:17.070
直接忽略

05:17.070 --> 05:19.070
所以怎么跟它不太一样

05:19.070 --> 05:21.070
这里在复数的范畴里面

05:21.070 --> 05:22.070
它跟它是有区别的

05:22.070 --> 05:24.070
如果两个都是正数的话

05:24.070 --> 05:26.070
这两个没有区别

05:26.070 --> 05:28.070
如果其中一个是

05:28.070 --> 05:30.070
其中一个是

05:30.070 --> 05:31.070
都是复数的话

05:31.070 --> 05:32.070
那么它们是有区别的

05:32.070 --> 05:34.070
它是向下取整

05:34.070 --> 05:36.070
就是找到小于3.1的

05:36.070 --> 05:38.070
第一个整数

05:38.070 --> 05:39.070
只是这么个意思

05:39.070 --> 05:40.070
向下取整

05:40.070 --> 05:42.070
对应的有一个向上取整

05:42.070 --> 05:45.070
叫Seal

05:45.070 --> 05:48.070
对一个数向上取整

05:48.070 --> 05:50.070
就是找到大于

05:50.070 --> 05:52.070
大于这个数的第一个整数

05:52.070 --> 05:54.070
Floor表示什么意思呢

05:54.070 --> 05:55.070
很形象

05:55.070 --> 05:57.070
Floor表示地板

05:57.070 --> 06:00.070
Seal表示天花板

06:00.070 --> 06:02.070
表示天花板

06:02.070 --> 06:03.070
咱们来看一下

06:03.070 --> 06:06.070
Mess.seal

06:06.070 --> 06:08.070
复的3.1

06:08.070 --> 06:10.070
得到的就是3

06:10.070 --> 06:13.070
3.1得到的就是4

06:13.070 --> 06:15.070
找到大于它的

06:15.070 --> 06:17.070
第一个整数

06:17.070 --> 06:19.070
你在心中想象一个数軸

06:19.070 --> 06:21.070
然后中间点是0

06:21.070 --> 06:22.070
左边是复数

06:22.070 --> 06:23.070
右边是正数

06:23.070 --> 06:24.070
你想象这个数軸

06:24.070 --> 06:25.070
那么你就明白了

06:25.070 --> 06:27.070
明白这个意思了

06:27.070 --> 06:29.070
看一下还有什么呢

06:29.070 --> 06:31.070
Max.min

06:31.070 --> 06:32.070
Max.min

06:32.070 --> 06:33.070
这个是产生

06:33.070 --> 06:34.070
得到一个最大数

06:34.070 --> 06:35.070
和得到一个最小数

06:35.070 --> 06:37.070
你看它的参数是这种邪法

06:37.070 --> 06:38.070
它是指的是

06:38.070 --> 06:40.070
可以没有参数

06:40.070 --> 06:41.070
也可以有一个参数

06:41.070 --> 06:42.070
也可以有两个参数

06:42.070 --> 06:44.070
它是可选的参数

06:44.070 --> 06:46.070
最小数这里也是一样

06:46.070 --> 06:47.070
咱们来看一下

06:47.070 --> 06:48.070
这两个

06:48.070 --> 06:50.070
一个是Max.min

06:50.070 --> 06:54.070
得到一组数字的最大值

06:54.070 --> 06:55.070
最大值

06:55.070 --> 06:56.070
另一方法

06:56.070 --> 07:00.070
得到一组数字的最小值

07:00.070 --> 07:02.070
取最大取最小

07:02.070 --> 07:03.070
咱们来看一下

07:03.070 --> 07:05.070
比方说我们这里

07:05.070 --> 07:06.070
写上一个Max

07:06.070 --> 07:07.070
第二

07:07.070 --> 07:08.070
Max

07:08.070 --> 07:10.070
如果你不给参数

07:10.070 --> 07:12.070
如果你不给参数

07:12.070 --> 07:13.070
那么它的最大值

07:13.070 --> 07:15.070
是复无穷

07:15.070 --> 07:17.070
这是它自己的约定

07:17.070 --> 07:20.440
如果Max

07:20.440 --> 07:22.440
无参

07:22.440 --> 07:24.440
就在这里写吧

07:24.440 --> 07:26.440
如果无参

07:26.440 --> 07:28.440
得到复无穷

07:28.440 --> 07:31.440
复的Infinity

07:31.440 --> 07:32.440
下面这个

07:32.440 --> 07:34.440
如果无参

07:34.440 --> 07:35.440
取最小的时候

07:35.440 --> 07:37.440
如果无参得到复无穷

07:37.440 --> 07:39.440
Infinity

07:39.440 --> 07:41.440
这是两个特殊的情况

07:41.440 --> 07:42.440
不太可能会遇到

07:42.440 --> 07:43.440
因为我们平时

07:43.440 --> 07:44.440
用这两个函数

07:44.440 --> 07:45.440
它一定要传参的

07:45.440 --> 07:46.440
一定要传参

07:46.440 --> 07:48.440
Max.min

07:48.440 --> 07:49.440
如果不传参

07:49.440 --> 07:51.440
就得到复无穷

07:51.440 --> 07:52.440
那么传参

07:52.440 --> 07:53.440
就是符合逻辑的

07:53.440 --> 07:54.440
Max

07:54.440 --> 07:56.440
比方说取这些数字中的最大值

07:56.440 --> 07:58.440
取它的最大值

07:58.440 --> 07:59.440
少写一个

07:59.440 --> 08:00.440
少写一个

08:00.440 --> 08:01.440
最大值

08:01.440 --> 08:02.440
得到结果了

08:02.440 --> 08:03.440
就这么简单

08:03.440 --> 08:04.440
像你写的数据

08:04.440 --> 08:05.440
顺序是啥

08:05.440 --> 08:06.440
总之你写的进去了

08:06.440 --> 08:08.440
它得到的就是最大值

08:08.440 --> 08:09.440
原来这个意思吧

08:09.440 --> 08:11.440
这是关于Max

08:11.440 --> 08:13.440
min也是一样的

08:13.440 --> 08:15.440
严实一下吧

08:15.440 --> 08:17.440
这里把它换成min

08:17.440 --> 08:19.440
得到最小值

08:19.440 --> 08:20.440
就这么简单

08:20.440 --> 08:21.440
非常简单简单

08:21.440 --> 08:23.440
最大值最小值

08:23.440 --> 08:24.440
下面这个

08:24.440 --> 08:26.440
求某一个数的多少次方

08:26.440 --> 08:27.440
多少次min

08:27.440 --> 08:28.440
这是个密函数

08:28.440 --> 08:29.440
po

08:29.440 --> 08:30.440
对吧

08:30.440 --> 08:31.440
你们学数学的时候

08:31.440 --> 08:33.440
这个单词po的po方法

08:33.440 --> 08:37.440
求一个数字的min

08:39.440 --> 08:40.440
min次方

08:41.440 --> 08:42.440
比方说

08:42.440 --> 08:44.440
我们这里可以写上

08:44.440 --> 08:46.440
Max.po

08:46.440 --> 08:47.440
2.3次方

08:47.440 --> 08:48.440
是不是的8

08:48.440 --> 08:49.440
就这么简单

08:49.440 --> 08:50.440
就这么简单

08:50.440 --> 08:52.440
这是关于po

08:52.440 --> 08:53.440
其实我们现在

08:53.440 --> 08:54.440
有了运算

08:54.440 --> 08:55.440
有两个新号运算符

08:55.440 --> 08:57.440
过后了更加方便

08:57.440 --> 08:58.440
写下来更加方便

08:58.440 --> 09:00.440
以前是没有运算符的

09:00.440 --> 09:02.440
以前我们要取多少次方

09:02.440 --> 09:03.440
我们是要使用这个函数

09:03.440 --> 09:04.440
po

09:04.440 --> 09:05.440
OK

09:05.440 --> 09:06.440
是关于这个函数

09:06.440 --> 09:07.440
好

09:07.440 --> 09:08.440
right now我们说过的

09:08.440 --> 09:09.440
right now我们说过的

09:09.440 --> 09:11.440
这没什么好说的

09:11.440 --> 09:12.440
什么叫做

09:12.440 --> 09:13.440
违以随机数

09:13.440 --> 09:15.440
实际上我们产生的随机数

09:15.440 --> 09:17.440
都不是真正的随机数

09:17.440 --> 09:18.440
这个世界上

09:18.440 --> 09:19.440
不存在真正的随机

09:19.440 --> 09:20.440
你知道吗

09:20.440 --> 09:21.440
不存在真正的随机

09:21.440 --> 09:23.440
你要去细化它的话

09:23.440 --> 09:24.440
它一定有规律的

09:24.440 --> 09:25.440
它不存在随机的

09:25.440 --> 09:26.440
所以说

09:26.440 --> 09:27.440
我们计算机里面

09:27.440 --> 09:28.440
产生的随机数

09:28.440 --> 09:29.440
都是违以随机数

09:29.440 --> 09:30.440
什么叫违以随机数

09:30.440 --> 09:32.440
就感觉上好像是随机的

09:32.440 --> 09:35.440
就是你人不太容易拆出它的结果

09:35.440 --> 09:37.440
不太容易去

09:37.440 --> 09:38.440
计算它的结果

09:38.440 --> 09:40.440
只不过它结果是有规律的

09:40.440 --> 09:41.440
它什么规律呢

09:41.440 --> 09:43.440
它是根据你的电脑的时间戳

09:43.440 --> 09:45.440
就当前的时间

09:45.440 --> 09:46.440
还要根据什么呢

09:46.440 --> 09:47.440
根据有可能还会根据你的

09:47.440 --> 09:49.440
电脑的网卡编号

09:49.440 --> 09:51.440
网卡的唯一编号

09:51.440 --> 09:54.440
以行的加上一些随机的数列

09:54.440 --> 09:56.440
然后产生的随机数

09:56.440 --> 09:57.440
它是有规律的

09:57.440 --> 09:58.440
是有规律的

09:58.440 --> 10:00.440
不是说完全随机的

10:00.440 --> 10:02.440
这是这个

10:02.440 --> 10:04.440
下面这个wrong的

10:04.440 --> 10:05.440
wrong的

10:05.440 --> 10:08.440
返回一个四舌五入后的整数

10:08.440 --> 10:10.440
得到一个四舌五入后的整数

10:10.440 --> 10:11.440
看一下这个函数

10:11.440 --> 10:12.440
我们进去看一下

10:12.440 --> 10:13.440
这个有的时候

10:13.440 --> 10:15.440
我们要得到一个四舌五入的东西

10:15.440 --> 10:16.440
我们就可以用wrong的

10:16.440 --> 10:17.440
一个wrong的

10:17.440 --> 10:19.440
咱们来看一下这个函数

10:19.440 --> 10:20.440
比方说

10:20.440 --> 10:23.440
mas.wrong的

10:23.440 --> 10:25.440
我们比方说这里写上3.5

10:25.440 --> 10:26.440
得到的是什么

10:26.440 --> 10:27.440
得到的是4

10:27.440 --> 10:28.440
就这么简单

10:28.440 --> 10:30.440
比方说我们这里写的是

10:30.440 --> 10:32.440
0.8

10:32.440 --> 10:33.440
得到的就是1

10:33.440 --> 10:34.440
四舌五入

10:34.440 --> 10:35.440
0.4得到的就是0

10:35.440 --> 10:39.440
得到一个四舌五入之后的整数

10:39.440 --> 10:41.440
得到的一定是整数

10:41.440 --> 10:42.440
这里只要注意的是

10:42.440 --> 10:44.440
就是它的复数的处理行为

10:44.440 --> 10:45.440
大家要注意一下

10:45.440 --> 10:46.440
比方说这里

10:46.440 --> 10:48.440
mas.wrong的

10:48.440 --> 10:49.440
我给它写个复数

10:49.440 --> 10:50.440
看一下

10:50.440 --> 10:51.440
复的1.5

10:51.440 --> 10:52.440
你可能会认为

10:52.440 --> 10:53.440
近1

10:53.440 --> 10:54.440
复2

10:54.440 --> 10:55.440
不对

10:55.440 --> 10:56.440
为什么呢

10:56.440 --> 10:57.440
什么叫近1

10:57.440 --> 10:58.440
往前近1

10:58.440 --> 10:59.440
近1是

10:59.440 --> 11:00.440
就是四舌五入

11:00.440 --> 11:02.440
五入的时候是怎么入的

11:02.440 --> 11:03.440
它是这样子的

11:03.440 --> 11:06.440
它是取它真无穷方向上

11:06.440 --> 11:08.440
就是沿着这个数轴

11:08.440 --> 11:10.440
从左到右这个数轴

11:10.440 --> 11:12.440
在真无穷方向上

11:12.440 --> 11:15.440
找到第1个整数

11:15.440 --> 11:16.440
就大于它的整数

11:16.440 --> 11:17.440
说完了

11:17.440 --> 11:18.440
就大于它的整数

11:18.440 --> 11:19.440
比方说

11:19.440 --> 11:20.440
真数好理解

11:20.440 --> 11:21.440
真数的1.5的话

11:21.440 --> 11:22.440
找到大于它的整数

11:22.440 --> 11:23.440
对吧

11:23.440 --> 11:24.440
就是2

11:24.440 --> 11:25.440
复的1.5

11:25.440 --> 11:27.440
大于它的整数就是1

11:27.440 --> 11:28.440
对不对

11:28.440 --> 11:30.440
复的1.4

11:30.440 --> 11:31.440
复的1.4

11:31.440 --> 11:32.440
还是复1

11:32.440 --> 11:33.440
就是把

11:33.440 --> 11:34.440
什么叫舍去

11:34.440 --> 11:35.440
舍去的话

11:35.440 --> 11:36.440
就是把小数点

11:36.440 --> 11:38.440
后面就不要了

11:38.440 --> 11:39.440
小数点后面就不要了

11:39.440 --> 11:40.440
是这么个意思

11:40.440 --> 11:41.440
所以说这一块

11:41.440 --> 11:42.440
这一块就是

11:42.440 --> 11:43.440
四舌五入这一块

11:43.440 --> 11:44.440
特别是复数这里

11:44.440 --> 11:45.440
要注意一下

11:45.440 --> 11:47.440
复数这里要注意一下

11:47.440 --> 11:48.440
这是关于

11:48.440 --> 11:49.440
wrong的

11:49.440 --> 11:50.440
wrong的这个函数

11:50.440 --> 11:52.440
咱们继续往下看

11:52.440 --> 11:53.440
还有什么

11:53.440 --> 11:54.440
没了

11:54.440 --> 11:55.440
没了

11:55.440 --> 11:56.440
卖是非常非常简单

11:56.440 --> 11:57.440
我们平时常用的

11:57.440 --> 11:58.440
就这么一些了

11:58.440 --> 11:59.440
就这么一些

11:59.440 --> 12:00.440
OK

12:00.440 --> 12:01.440
作业的话

12:01.440 --> 12:03.440
这里目前也没啥作业

12:03.440 --> 12:04.440
没啥作业

12:04.440 --> 12:05.440
了解一下这些方法

12:05.440 --> 12:06.440
有这么个印象就行了

12:06.440 --> 12:07.440
记一下

12:07.440 --> 12:08.440
wrong的方法

12:10.440 --> 12:11.440
得到一个

12:11.440 --> 12:15.440
四舌五入的整数

12:15.440 --> 12:16.440
好

12:16.440 --> 12:17.440
现在就没了

12:17.440 --> 12:18.440
这是卖对象

