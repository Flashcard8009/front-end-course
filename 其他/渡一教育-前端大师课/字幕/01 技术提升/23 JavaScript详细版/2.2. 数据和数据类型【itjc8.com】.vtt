WEBVTT

00:00.000 --> 00:16.930
OK 这些课呢 咱们了解一下介石里边的数据和数据内容

00:17.810 --> 00:22.850
这两个概念呢 可以说是编程里边的最重要最重要的概念了

00:23.410 --> 00:27.970
因为我们的程序实际上是什么呢 实际上的程序的运行过程

00:28.530 --> 00:34.450
就是在处理数据的过程 把数据从一个地方保存到另外一个地方

00:34.930 --> 00:40.530
然后呢 把这块数据呢 跟另外一块数据呢 又进行运算啊 算了过后呢 得到一个新的数据

00:40.850 --> 00:45.010
又把这个新的数据保存起来啊 把一些数据呢 拿出来分析

00:46.130 --> 00:53.170
有的时候呢 又把一些数据拿出来输出怎么样怎么样啊 其实程序的运行过程就是数据的处理过程

00:53.890 --> 00:59.570
那么数据是什么意思呢 数据啊 这个概念它不是数字啊 跟数字是两码算

01:00.050 --> 01:01.890
数字呢 只是数据的一种

01:02.770 --> 01:07.250
数据是什么意思呢 表示有用的信息啊 它是一个很犯的概念

01:08.450 --> 01:09.330
有用的信息

01:10.690 --> 01:17.490
其实世界上任何东西呢 你都把它可以看成数据比方说一台电脑对吧 一台电脑就是个信息的集合体

01:17.970 --> 01:25.810
怎么电脑的尺寸啊 型号啊 价格啊 身材厂商啊 这些是吧 都是信息啊 这些都是数据

01:26.370 --> 01:33.490
比方说我们现实生活中一个人对吧 身高年龄体重啊 性别啊 性名 里称等等等等身份人号

01:33.810 --> 01:42.930
这些看全是信息 这些都是有用的信息 都是数据啊 比方说一首歌对吧 歌的名字啊 是谁唱的 作曲是谁 作词是谁

01:43.810 --> 01:46.610
哪一年发布的等等这些信息啊 都是数据

01:47.650 --> 01:49.730
好 那么什么叫做数据类型呢

01:50.130 --> 01:57.010
数据类型就是数据的分类啊 数据的分类 好 首先要搞清楚为什么要给数据分类

01:58.050 --> 02:00.210
因为其实咱们现实生活中都是一样啊

02:01.410 --> 02:13.170
我们人是数据对吧 你是数据 我也是数据 那么我们会有一些共同的特征啊 把这些东西呢 规个内过后呢 我们再去现实世界里边去研究这些东西的时候呢

02:13.650 --> 02:17.250
就可以有一个统一的规范啊 比方说吧 比方说

02:18.210 --> 02:22.850
数字啊 1是不是数据 当然是数据 2是不是数据 当然也是数据

02:23.570 --> 02:31.810
好 我们发现了 他们有些共同的特征 就是什么特征呢 都能够进行啊 数学的运算 加建成储备啊 求予数呗

02:32.130 --> 02:36.210
这些都是数学的运算 对吧 数字呢 都可以进行数学的运算

02:36.690 --> 02:43.010
好 我们就可以认为 这些能够参与数学运算的类型呢 都把它叫做数字 把这些1235678

02:43.330 --> 02:52.850
加上复数 增整数 复整数 连 然后加上小数 一起把它归一个类 归一个类 归个类啊 就叫做数字类型 你看这个意思吧

02:53.970 --> 02:58.530
我们数据呢 他可以分类的 不同类型的数据呢 他有不同的特点

02:59.250 --> 03:03.730
就这么一个意思 好 这是关于这么两个概念啊 一个是数据呢 一个是数据类型

03:04.770 --> 03:11.970
好 接下来我们这一节可能研究的是啥呢 研究的就是介石中的数据和数据类型

03:12.930 --> 03:21.810
介石中的数据类型 我们对数据进行的分类啊 不同类型的数据呢 他有什么样的特点 有什么样的书写方式

03:22.130 --> 03:28.530
我就研究这个东西 在介石里边他的数据类型呢 分为两种啊 分为两种

03:29.330 --> 03:35.730
介石中的 关了干嘛 数据类型啊 分为两种 三级表写了啊 一个是呢

03:36.290 --> 03:40.930
原式纸 原式纸类型 一个呢 是

03:41.890 --> 03:48.290
引用纸类型啊 或者叫引用类型 原式类型和引用类型 把它分成两大类啊

03:48.770 --> 03:55.890
两大类里边呢 再分细又会分成很多啊 我们一个个说啊 慢慢来不着急啊 咱们学东西呢 一块一块学

03:56.930 --> 04:03.010
先把地级打牢 好 首先是原式类型 什么叫原式类型的 原式类型

04:03.970 --> 04:07.970
指 指的是什么呢 指不可再细分的类型

04:08.850 --> 04:13.730
细分的类型 就是他已经是最小的类型单元了啊 没法再细分了

04:14.450 --> 04:20.290
有哪些原式类型呢 啊 有哪些原式类型呢 在介石里边提供了这么一些原式类型

04:21.010 --> 04:23.410
第一个啊 数字类型

04:24.210 --> 04:27.730
他单词呢 叫做number 啊 叫number 数字类型

04:28.450 --> 04:30.450
好 第二个类型呢 是制符创类型

04:31.250 --> 04:33.570
啊 叫做呢 stream 啊 stream

04:34.450 --> 04:36.210
好 第三个类型呢 叫做啊

04:37.250 --> 04:39.170
布尔类型啊 布尔类型

04:39.810 --> 04:41.970
他单词呢 叫做不利啊 不利

04:43.490 --> 04:48.930
不利啊 第四种呢 是number 类型啊 啊 地贩类型啊 啊 地贩类型

04:49.970 --> 04:52.690
啊 第四种呢 是number 类型 我们一个个说啊 一个个说

04:54.130 --> 04:56.610
好 首先是数字类型 我们首先呢

04:57.170 --> 04:59.330
了解这些类型的书写方式啊

04:59.730 --> 05:03.330
不同的类型呢 它的书写方式是不一样的 这些课呢 我们主要是了解

05:04.050 --> 05:06.370
介石里边类型的书写方式啊

05:07.010 --> 05:13.650
了解或者是啊 学习介石中不同数据类型的

05:14.210 --> 05:17.010
书写方式 怎么来书写这个类型的数据

05:17.490 --> 05:20.130
比方说是一个数字类型 数字类型包含什么呢

05:20.690 --> 05:25.970
小数 整数啊 包括正整数 负整数 对吧 包括0 对不对

05:26.770 --> 05:33.330
这些都是数字 数字类型在书写的时候啊 在书写的时候 就是直接书写

05:34.770 --> 05:41.570
直接书写即可 非常非常简单啊 咱们来举个例子啊 比方说啊 咱们的一个页面啊 TESTIE

05:43.570 --> 05:45.890
啊 这里呢 写个对接代码啊 接代码

05:47.330 --> 05:53.090
啊 我们这里只是接来cancel log 输出一个数据啊 这里边填的是啥 填的是数据对吧

05:54.050 --> 05:57.490
比方说我们要输出一个数字的数据 该怎么写呢

05:58.770 --> 06:03.810
直接写就完事了啊 直接写就完事了 比方说我们输出一个2 输出的是啥呢 输出的就是2

06:04.210 --> 06:09.090
就是一个数字啊 就是个数字 非常非常简单啊 非常简单 运行看一下啊

06:10.530 --> 06:13.410
啊 运行看一下 检查 诶 右键检查

06:14.690 --> 06:21.090
控制台啊 把这些 点这个就清空啊 把控制台清空 点击一下就清空啊 清空我们重新刷新一下

06:21.650 --> 06:26.290
啊 2 对吧 输出了一个这个数字 非常非常简单啊 非常简单

06:26.850 --> 06:30.450
好 其实呢 在这里啊 其实我们在控制台里边也可以直接写代码

06:31.090 --> 06:36.450
也可以直接写代码来进行输出啊 比方说啊 咱们直接写个2 直接写个2

06:36.770 --> 06:41.650
它就得到一个结果啊 得到一个结构就叫做2 对吧 我们写的2 得到结果是什么呢 就是2

06:42.050 --> 06:46.290
啊 我们当然也可以写cancel log啊 输出一个2 也行啊 也行

06:46.610 --> 06:50.610
它会产生两个结果 一个是2 就是这个这个东西运行的结果

06:51.010 --> 06:59.090
就输出了一个2 那么下面一个undefine的什么意思呢 表示整句话的结果啊 表示整个语句的结果 当然最后一个语 不用管啊 目前不用管

07:00.050 --> 07:05.730
这个在控制台里边可以直接输写代码的那种模式呢 叫做什么呢 叫做rape模式

07:06.370 --> 07:12.930
表示实时的输入输出模式啊 我们后边再说啊 因为后边还没有讲 现在还没有讲表达式

07:13.170 --> 07:18.610
所以说你不理解为什么会出现这个东西啊 那么我们现在先暂时不管 先暂时就在程序里边输出

07:19.090 --> 07:23.170
啊 输出了就这么简单啊 数字内形直接输写

07:23.890 --> 07:31.410
但是呢 这里有个细节啊 有个扩展知识啊 这扩展知识能了解一下啊 我没有把它做成扩展课程 因为大家都需要了解一下啊

07:32.130 --> 07:34.370
了解啊 了解的知识

07:35.810 --> 07:36.770
什么呢 就是说

07:38.050 --> 07:44.210
数字内形啊 如果前面加前序啊 可以加上前序

07:45.170 --> 07:52.770
来表示不同的净质啊 表示不同的净质 如果你直接输写的话 不写任何前序

07:53.170 --> 07:55.090
表示什么意思呢 表示的就是

07:55.730 --> 07:59.090
啊 实净质 逢实净一 对吧 13456789

07:59.730 --> 08:02.530
加上0嘛 10个数字啊 12356789

08:02.770 --> 08:04.610
然后到了10就要前进一位了

08:05.010 --> 08:10.130
好 比方说啊 这里可以写复数吗 可以写复数 对吧 可以写复数啊 也是一样的

08:10.610 --> 08:11.970
好 比方说我们这里呢

08:12.530 --> 08:13.170
前序

08:14.130 --> 08:15.490
加上一个0

08:16.370 --> 08:17.570
用0来表示前序

08:18.210 --> 08:19.650
什么意思呢 表示

08:20.050 --> 08:20.770
8净质

08:21.250 --> 08:25.730
8净质我们用的很少啊 有的时候呢 有一点点用 然后我们肯定用不到啊 肯定用不到

08:26.210 --> 08:29.890
我们写前端开发者的一些这些净质啊 我们一般来说都不会用到了

08:30.210 --> 08:32.450
就是逢8净1啊 逢8净1

08:32.930 --> 08:34.930
那么比方说啊 我们这里输出的是什么呢

08:35.330 --> 08:36.370
输出的是0

08:37.410 --> 08:39.170
10啊 010

08:39.890 --> 08:40.450
是什么呢

08:41.410 --> 08:43.250
你觉得是多少 你觉得是多少

08:44.210 --> 08:45.890
啊 我们来看一下结果呗

08:47.170 --> 08:52.610
得到的结果是8看到没得到的结果是8啊 为什么是8呢 因为前面写了个0

08:52.770 --> 08:54.850
表示后边的数字呢 是一个8净质

08:55.250 --> 08:57.250
好 8净质逢8净1对吧

08:57.810 --> 09:00.850
到了8才净1 那么10是不是8对不对

09:01.330 --> 09:03.490
啊 一看8净质啊 123567

09:03.890 --> 09:05.810
表示7对不对 表示10净质的7

09:06.210 --> 09:07.410
然后到了8净1

09:07.650 --> 09:08.610
那8就是10

09:08.850 --> 09:12.210
所以说10净质里面8就表示在8净质里面就表示10

09:13.970 --> 09:17.570
好 这是前面写个0啊 表示8净质 了解就行了

09:17.810 --> 09:21.730
有这么个印象啊 就GS里面可以这样表示

09:22.370 --> 09:27.410
然后0x呢 前面加上0x前追了表示16净质

09:27.890 --> 09:28.530
16净质

09:29.170 --> 09:29.970
好 比方说啊

09:30.850 --> 09:32.930
咱们写一个0x10

09:33.490 --> 09:35.970
你一个x10 好看一下是多少呢

09:36.370 --> 09:39.330
这就16了 保存啊 你看16了

09:40.130 --> 09:42.850
好 15怎么表示呢 15的话

09:43.730 --> 09:50.050
f啊 1235678910对吧 还只有一位哦 在16净质里面都还没有净位哦

09:50.690 --> 09:52.450
10 实就用什么表示 用a

09:52.930 --> 09:59.010
然后是11b 12c 13 d 14e 15f

09:59.970 --> 10:02.770
好 然后呢 到16才净一位 才变成了10

10:03.090 --> 10:04.210
对吧 才变成了10

10:04.930 --> 10:06.450
那么这个东西呢 就表示的是15

10:06.690 --> 10:09.810
看没 这是前面加上0x

10:10.530 --> 10:14.210
然后再加上 如果加上个0b呢 还表示的是2净质

10:14.770 --> 10:17.090
表示的是2净质 当然输出过后啊

10:17.490 --> 10:20.130
输出过后都是一个10净质的数字

10:20.530 --> 10:22.450
输出过后都是一个10净质的数字

10:23.170 --> 10:25.010
好 比方说啊 这里呢 输出

10:25.650 --> 10:26.690
我们加上一个0b

10:27.490 --> 10:27.890
10

10:28.530 --> 10:30.050
0b10 是多少呢

10:30.530 --> 10:32.050
保存 是不是2 对不对

10:32.530 --> 10:34.450
你看 就是2啊 就是2

10:34.770 --> 10:37.250
这些我们用的很少很少啊 几乎是不用的

10:37.490 --> 10:39.090
了解就行了啊 了解就行了

10:39.410 --> 10:42.130
总之数字内形吧 非常简单 直接输写就完事了

10:42.530 --> 10:45.490
不要加上那些八道东西啊 千万不要在前面够再加什么双一号啊

10:45.730 --> 10:47.010
这些东西不要去加啊

10:47.410 --> 10:48.530
好 这就是啊

10:49.490 --> 10:52.050
这就是那个数字的表示方式啊

10:53.010 --> 10:54.850
好 第二种 制服创类型

10:55.250 --> 10:58.610
制服创类型在那个介石里面 如何来输写呢

10:58.770 --> 10:59.890
如何输写一个制服创呢

11:00.130 --> 11:03.650
有三种输写方式

11:04.210 --> 11:07.330
第一种方式呢 是单一号

11:07.890 --> 11:10.290
单一号 第二种方式呢 是双一号

11:10.850 --> 11:14.610
第三种方式呢 是这个符号叫啥符号啊

11:14.770 --> 11:16.370
我真的不知道这个符号叫啥符号

11:17.010 --> 11:19.170
单一号 我给写出来了 双一号

11:19.650 --> 11:21.810
单一号就是一个 双一号

11:22.370 --> 11:25.410
还有这个符号叫什么 我真的是不知道这个符号该怎么写啊

11:25.410 --> 11:26.050
就这个符号

11:26.610 --> 11:29.650
在键盘上的哪个位置呢 键盘上的ESC

11:29.810 --> 11:32.130
就是第一个键 第一个键 下边的一个

11:32.770 --> 11:33.330
就是这个符号

11:33.890 --> 11:35.330
注意是英文的啊 英文的

11:35.810 --> 11:36.370
这个符号

11:36.850 --> 11:38.690
这三种符号都可以表示制服创

11:39.010 --> 11:40.290
他们有没有区别呢

11:41.170 --> 11:42.370
现在来看的话没啥区别

11:42.770 --> 11:43.330
没啥区别

11:44.290 --> 11:46.690
可能这个东西呢 就单一号跟双一号

11:46.690 --> 11:47.650
你可以认为都没啥区别

11:48.050 --> 11:48.610
没啥区别

11:49.010 --> 11:49.810
就这个玩意儿

11:50.050 --> 11:52.850
就这个玩意儿呢 跟前面两个呢 有一点点区别

11:53.410 --> 11:56.050
实际上这种写法啊 这种写法是后面出来的

11:56.450 --> 11:58.290
实际上我这个课程里面都不应该设计的

11:58.450 --> 11:59.410
都不应该设计的

11:59.890 --> 12:02.450
不过我们加入进去吧 因为这个东西蛮有用的

12:02.930 --> 12:04.210
好 咱们来写一下吧

12:05.250 --> 12:06.050
TES2

12:09.010 --> 12:10.050
这里呢 比方说啊

12:11.650 --> 12:13.570
我们输出一个制服创

12:14.130 --> 12:16.690
Hello World

12:17.170 --> 12:18.450
对吧 输出一个制服创

12:18.690 --> 12:20.610
然后再来输出一个双一号的啊

12:20.610 --> 12:22.450
你看 一定要是成对出现的啊

12:22.850 --> 12:25.010
前边一个 后边一个啊

12:25.250 --> 12:26.370
一定要是成对出现的

12:26.530 --> 12:28.770
你能不能去掉这个单一号 能不能去掉

12:29.410 --> 12:30.450
肯定不行哦

12:31.010 --> 12:32.690
制服创什么 表示什么意思

12:33.090 --> 12:34.450
我这边写是制服创 对吧

12:34.850 --> 12:41.970
OK 制服创啊 表示的是啊 一长串啊 文本啊 一长串文本

12:42.370 --> 12:46.450
那么什么叫一长串 就0个或多个文本啊

12:46.450 --> 12:49.250
0个或多个文本 都表示制服创啊

12:49.650 --> 12:50.530
就是一串制服

12:51.090 --> 12:54.050
好 那么这里呢 我们可以用前后两个单一号

12:54.210 --> 12:56.770
里边呢 写制服创啊 周里边就可以写中文了

12:57.010 --> 12:59.090
周里边可以写任何的中文符号啊

12:59.570 --> 13:02.370
什么中文的空格啊 中文的文字都可以写了啊

13:02.850 --> 13:04.530
制服创外边是不能有这些东西的

13:04.530 --> 13:06.930
但是制服创里边可以有 制服创里边写啥就是啥

13:06.930 --> 13:08.290
制服吗 文字嘛

13:08.770 --> 13:12.050
比方说一篇文章 一个表体 这些都是制服创 对吧

13:12.850 --> 13:15.570
那么这里面呢 双一号也可以啊 也可以

13:15.570 --> 13:16.290
Hello world

13:17.490 --> 13:21.250
啊 还有一种呢 就是啊 我们把它叫做模板制服创啊

13:21.730 --> 13:23.170
第三种写法呢 叫做

13:24.930 --> 13:26.690
叫做模板制服创

13:26.930 --> 13:28.930
我们之后呢 会发现这个东西呢 很有用

13:29.330 --> 13:30.370
啊 现在呢 都差不多

13:31.010 --> 13:32.530
然后呢 两个这个东西啊

13:33.010 --> 13:34.210
Hello world

13:34.610 --> 13:35.490
啊 Hello world

13:36.050 --> 13:37.570
好 看一下呗 报纯

13:37.970 --> 13:41.490
这三种输出都可以啊 都是制服创的正确表达 表达方式

13:42.290 --> 13:43.410
啊 看一下啊

13:45.570 --> 13:46.770
啊 重新把下面这个

13:47.410 --> 13:48.370
关了啊 重新创新

13:48.610 --> 13:49.090
好 你看

13:50.130 --> 13:51.650
是不是正常的 对吧 没问题吧

13:52.130 --> 13:52.770
啊 Hello world

13:53.410 --> 13:55.570
三种写法都可以 但是你要注意啊

13:56.050 --> 13:58.530
你用的单一号一定要有开始有结束

13:58.610 --> 14:01.890
你千万不要后面够省掉了啊 那就不行了啊 不行了

14:02.210 --> 14:04.850
一定要有开始有结束啊 有开始有结束

14:05.250 --> 14:07.730
那么制服创呢 写在中间啊 写到他中间

14:08.130 --> 14:11.170
千万要注意 如果你写的是单一号 后边也得写单一号

14:11.570 --> 14:13.890
前面写的是双一号 后边也得写双一号

14:14.210 --> 14:16.770
前面写的是这个模板制服创 后边也得写

14:17.730 --> 14:19.650
把它叫做飘吧 把它叫做飘

14:20.450 --> 14:22.210
我也不知道该教啥玩意儿了这个玩意儿

14:23.410 --> 14:24.610
飘啊 叫做飘

14:25.330 --> 14:28.850
好 那么已经用这个符号了 后边也得用这个符号

14:29.650 --> 14:33.330
有没有区别呢 单一号和双一号 目前我们看是没什么区别的

14:33.570 --> 14:34.850
但这个符号呢 有点区别

14:35.090 --> 14:37.650
这个符号呢 可以在制服创中间呢 换行

14:37.970 --> 14:40.610
可以在制服创中里面换行 这样子写是可以的

14:40.610 --> 14:43.250
比方换了两行对吧 好 保存一下啊

14:43.810 --> 14:46.370
过来看 输出 你看 这边是不是也跟着换行了

14:46.610 --> 14:48.690
对吧 也跟着换行了 没问题吧

14:48.930 --> 14:51.490
好 那么你这里能不能换行了 双一号和单一号里边了

14:51.490 --> 14:53.810
能不能换行 换行又爆错了 看到没

14:54.770 --> 14:56.770
你是不能换行的啊 这里是不能换行的

14:57.090 --> 14:59.250
单一号和双一号里边是不能换行的

14:59.410 --> 15:02.610
但是这个符号里边可以啊 你可以换行 随意的换行就行

15:04.610 --> 15:06.530
就这么点区别啊 其他都没啥

15:07.010 --> 15:09.410
好 这是模板制服创啊 模板制服创

15:10.850 --> 15:14.850
好 这是关于这个制服创 好 制服创里面呢 我要多说一点啊

15:15.330 --> 15:17.090
关于制服创里面 我要多说一点

15:18.050 --> 15:20.450
就是在制服创中

15:21.330 --> 15:26.290
在制服创中 如何表示一个特殊制服

15:26.610 --> 15:29.090
什么叫特殊制服 举个例子

15:32.130 --> 15:36.050
这个制服创里边比方说 我除了要输出这个东西之外

15:36.450 --> 15:38.530
我还要输出一个单一号 咋办

15:39.330 --> 15:42.690
我要写个单一号 我能直接在这里写个单一号吗

15:43.490 --> 15:46.530
能吗 肯定不行 为什么不行呢

15:47.250 --> 15:50.450
因为单一号它有特殊含义

15:51.170 --> 15:55.170
什么特殊含义呢 你这里使用的是单一号表示制服创开始对吧

15:55.170 --> 15:58.370
单一号表示制服创结束 于是在这个制服创里边呢

15:58.530 --> 16:00.930
单一号表示啥意思 表示的是

16:01.570 --> 16:04.530
我这里面单一号表示制服创的开始或结束

16:05.010 --> 16:06.930
你看一下这个程序 它为什么爆错了

16:06.930 --> 16:09.010
因为它理解不了了 它都不知道干嘛了

16:09.970 --> 16:10.930
制服创开始

16:12.050 --> 16:15.410
东西啊 hello 制服创结束了 它认为这个是结束

16:16.050 --> 16:17.250
那后面这一坨是啥呢

16:18.530 --> 16:21.730
它扣老婆扣了半天 都不知道啥意思了

16:22.850 --> 16:24.050
扣老婆知道什么意思了

16:24.850 --> 16:27.170
就想了半天 都不知道啥意思了

16:29.090 --> 16:30.530
然后呢 它就爆错了

16:30.530 --> 16:31.490
它就爆错了

16:31.490 --> 16:33.730
所以说这个制服创里面有这个特殊制服

16:33.730 --> 16:35.330
但是这里面写双一号就没问题

16:35.890 --> 16:36.930
写双一号就没问题

16:36.930 --> 16:40.050
因为说它知道这个制服创是以单一号开头的

16:40.050 --> 16:42.050
那么只能以单一号结束

16:42.050 --> 16:43.970
所以说双一号没有任何特殊含义

16:44.050 --> 16:47.010
你看这样子 我写的双一号 ok 一切 ok

16:47.650 --> 16:48.290
比方说啊

16:50.130 --> 16:50.690
比方说

16:51.730 --> 16:52.850
两个双一号加上

16:53.490 --> 16:55.650
你看双一号正确输出了 对吧

16:55.650 --> 16:56.370
没有任何问题

16:57.330 --> 16:59.010
好 那么先在这里边

16:59.010 --> 16:59.810
这里边

17:00.770 --> 17:03.170
我如果一定要输出单一号咋办呢

17:03.730 --> 17:05.170
一定要输出单一号咋办呢

17:06.210 --> 17:08.370
比方说这里 我一定要用单一号来输出

17:08.370 --> 17:09.090
怎么办呢

17:09.090 --> 17:10.850
有的人说很聪明啊

17:10.850 --> 17:13.490
把前后两个改成双一号不就完了嘛 对不对

17:13.570 --> 17:14.450
当然可以

17:14.450 --> 17:16.130
这里我要介绍另外一种方式

17:16.850 --> 17:17.810
叫做转翼

17:21.090 --> 17:21.810
可以使用

17:23.570 --> 17:24.370
转翼斧

17:25.810 --> 17:26.370
转翼斧

17:27.010 --> 17:28.450
什么叫转翼斧呢

17:28.450 --> 17:30.050
转翼斧是一个鞋杠

17:30.050 --> 17:31.730
一个右鞋杠 反鞋杠

17:32.930 --> 17:33.970
键盘找一找

17:33.970 --> 17:35.890
是在回车间的上边

17:35.890 --> 17:36.450
对不对

17:36.450 --> 17:37.810
有一个转翼斧啊

17:37.810 --> 17:39.010
这个叫做右鞋杠

17:39.010 --> 17:40.210
那么右鞋杠呢

17:40.210 --> 17:42.850
它表示的是对一个东西进行转翼

17:42.930 --> 17:44.050
我再先写

17:44.050 --> 17:45.330
写出来过后再解释

17:45.330 --> 17:46.450
比方说这里我写个鞋杠

17:47.970 --> 17:48.770
这里写个鞋杠

17:48.770 --> 17:50.370
你看在VSCode里边

17:50.370 --> 17:51.650
它又把颜色给你变了

17:51.650 --> 17:52.290
看到没

17:52.290 --> 17:53.490
把颜色给你变了

17:54.290 --> 17:56.210
这个单一号本来的意思是咋呢

17:56.690 --> 17:59.330
本来的意思表示制服出来的开始

17:59.330 --> 18:00.850
和制服出来的结束对吧

18:00.850 --> 18:01.810
它本来是这个意思

18:02.370 --> 18:04.770
但是前边给它加上了一个鞋杠

18:05.650 --> 18:06.770
把它看成一个整体

18:07.490 --> 18:09.570
鞋杠单一号把它看成个整体

18:10.290 --> 18:13.570
表示的是把这个单一号的意思变一下

18:13.570 --> 18:14.450
变成什么呢

18:14.450 --> 18:17.570
变成一个普通的单一号制服

18:18.290 --> 18:19.490
就表示这个意思

18:19.490 --> 18:21.010
所以说在制服圈里边呢

18:21.010 --> 18:25.250
用一个鞋杠单一号表示一个普通单一号

18:25.250 --> 18:25.890
明白这个意思吧

18:26.610 --> 18:27.170
保存看一下

18:27.890 --> 18:29.330
你看单一号是不是输出了

18:29.330 --> 18:29.970
对吧

18:29.970 --> 18:33.250
用一个鞋杠单一号表示一个普通的单一号

18:33.250 --> 18:33.970
鞋杠有没有

18:33.970 --> 18:34.530
鞋杠没有

18:35.570 --> 18:36.370
好比方说这里

18:36.370 --> 18:38.450
我们要输出双一号是不一样的

18:38.530 --> 18:39.650
鞋杠双一号

18:40.690 --> 18:43.650
鞋杠双一号表示一个普通的双一号

18:44.370 --> 18:45.330
明白这个意思吧

18:45.330 --> 18:45.970
保存看一下

18:46.610 --> 18:47.970
你看双一号是不是没问题了

18:48.850 --> 18:50.530
好那么再比方说

18:50.530 --> 18:51.730
再比方说我们再来

18:53.410 --> 18:55.490
我们要在这个制服圈里边

18:56.530 --> 18:58.690
要输出一个鞋杠有咋办了

18:58.690 --> 19:00.130
你直接这样子写行吗

19:01.330 --> 19:01.890
不行

19:01.890 --> 19:02.450
为啥不行

19:03.170 --> 19:05.250
因为鞋杠有特殊含义

19:05.250 --> 19:07.010
鞋杠它本身也有特殊含义

19:07.970 --> 19:09.330
它表示的是转译对吧

19:09.330 --> 19:11.090
对后边这个制服进行转译

19:11.090 --> 19:12.290
那么它怎么能理解的呢

19:12.290 --> 19:13.330
现在代码怎么理解的

19:13.330 --> 19:13.890
我告诉大家

19:14.530 --> 19:16.530
它告诉你现在代码它是这样理解的

19:16.530 --> 19:17.650
有一个Hello

19:17.650 --> 19:19.090
我输出制服说开始对吧

19:19.090 --> 19:20.370
制服说开始

19:20.370 --> 19:21.970
然后有一个Hello

19:21.970 --> 19:23.890
然后再输出一个空格

19:23.890 --> 19:25.810
再输出一个普通的双一号

19:25.810 --> 19:27.250
你看它把它当成一个整体了

19:27.970 --> 19:29.410
输出一个普通的双一号

19:29.410 --> 19:30.850
再输出一个扩号

19:30.850 --> 19:31.890
再输出一个分号

19:33.010 --> 19:33.810
后面没东西了

19:34.530 --> 19:35.250
与法错误

19:35.650 --> 19:36.370
与法错误

19:37.250 --> 19:37.970
那怎么办呢

19:38.450 --> 19:42.290
我们应该用两个鞋杠来表示一个鞋杠

19:42.930 --> 19:44.850
对鞋杠本身进行转译

19:44.850 --> 19:46.450
来表示一个普通的鞋杠制服

19:47.010 --> 19:48.770
用两个鞋杠表示一个鞋杠

19:48.770 --> 19:49.250
能理解吧

19:50.210 --> 19:50.850
应该没问题吧

19:50.850 --> 19:51.490
这个很简单

19:52.370 --> 19:53.490
就是有些特殊制服

19:53.490 --> 19:54.930
我们要用鞋杠进行转译

19:55.650 --> 19:56.770
好除此之外

19:56.770 --> 19:58.050
鞋杠还有很多的用处

19:58.690 --> 20:01.810
比方说我们这里写一个Hello World

20:02.370 --> 20:03.970
好我们刚才不是不能换行吗

20:03.970 --> 20:04.530
这里对吧

20:04.930 --> 20:05.490
换行了

20:05.570 --> 20:07.970
我们可以使用一个特殊的符号

20:07.970 --> 20:08.690
鞋杠N

20:09.970 --> 20:10.690
给我打个注释

20:11.410 --> 20:13.810
鞋杠N表示换了行服

20:14.690 --> 20:15.330
换了行服

20:15.890 --> 20:16.530
保存看一下

20:17.970 --> 20:18.530
你看一下

20:18.530 --> 20:19.410
是不是换行了这里

20:20.290 --> 20:21.970
你看Hello World换行了

20:22.690 --> 20:24.210
用鞋杠N来进行换行

20:24.210 --> 20:24.850
没问题的

20:25.090 --> 20:25.570
没问题的

20:25.970 --> 20:27.170
在控制台里边进行换行

20:28.050 --> 20:29.730
再比方说

20:31.410 --> 20:31.730
这里

20:32.530 --> 20:33.250
鞋杠T

20:33.650 --> 20:34.050
Hello

20:34.770 --> 20:35.490
鞋杠T

20:36.210 --> 20:37.410
Hello World

20:38.690 --> 20:40.450
好保存看一下

20:40.450 --> 20:42.210
这个鞋杠T表示什么意思呢

20:42.210 --> 20:43.410
鞋杠T表示

20:43.810 --> 20:44.770
字表服

20:46.210 --> 20:47.570
字表服相当于是啥呢

20:47.570 --> 20:50.050
相当于是按了键盘的Type键

20:50.050 --> 20:50.850
Type键

20:50.850 --> 20:51.650
缩进一个

20:51.970 --> 20:52.690
缩进一个

20:53.170 --> 20:53.650
你看

20:54.130 --> 20:55.010
就缩进了

20:55.010 --> 20:57.090
字表服通常用语可以对齐

20:57.090 --> 20:58.370
可以用来对齐

20:58.930 --> 20:59.570
比方说

20:59.570 --> 21:00.130
比方说

21:00.130 --> 21:01.330
我们这里还可以继续写

21:01.330 --> 21:02.050
鞋杠N

21:02.370 --> 21:03.170
鞋杠N

21:03.170 --> 21:04.130
换行对吧

21:04.130 --> 21:05.810
先输出一个字表服

21:06.530 --> 21:07.650
这个对应到哪呢

21:07.650 --> 21:08.850
对应到这

21:08.850 --> 21:10.130
对应到这一个区域

21:10.130 --> 21:10.770
前面这个区域

21:10.770 --> 21:11.170
你看

21:11.170 --> 21:11.890
一个空白

21:11.890 --> 21:12.370
字表服

21:13.170 --> 21:14.770
然后再输出Hello

21:14.770 --> 21:16.130
再输出一个字表服

21:16.130 --> 21:17.410
再输出一个字表服

21:18.130 --> 21:18.770
就这一部分

21:19.810 --> 21:21.490
然后对应到一个World

21:21.490 --> 21:22.210
World

21:22.210 --> 21:23.330
再输出一个

21:23.330 --> 21:23.970
鞋杠N

21:23.970 --> 21:24.690
换行

21:24.690 --> 21:25.730
换行过后了

21:25.730 --> 21:27.330
再输出一个字表服

21:27.330 --> 21:28.930
我们可以用这样子来拼

21:28.930 --> 21:29.890
字表服

21:29.890 --> 21:31.650
再输出一个ABC

21:31.730 --> 21:33.650
再输出一个字表服BCD

21:35.010 --> 21:35.650
看一下

21:36.770 --> 21:38.370
这里ABCD吧

21:39.490 --> 21:39.970
也是

21:40.450 --> 21:41.010
你看

21:41.010 --> 21:41.970
这样子对齐了

21:41.970 --> 21:42.610
对齐了

21:42.610 --> 21:44.610
由于刚才那个为什么没对齐了

21:44.610 --> 21:46.290
就是我前面文字写少了

21:46.290 --> 21:47.250
为什么没对齐了

21:47.650 --> 21:48.450
这样子没对齐的

21:48.450 --> 21:49.970
因为是前边

21:49.970 --> 21:51.970
它其实这个位置有一个字表服的

21:51.970 --> 21:52.930
但是你看这个文字

21:52.930 --> 21:53.890
上面这个文字

21:53.890 --> 21:55.730
它超过了一个字表服的宽度了

21:55.970 --> 21:57.730
所以它占用了两个格子了

21:57.730 --> 21:58.530
字表是什么意思

21:58.530 --> 21:59.890
就是个表格里面的格子

22:00.370 --> 22:01.890
就是格子

22:01.890 --> 22:03.570
那么这个文字太多了

22:03.570 --> 22:04.610
跨越了两个格子

22:04.610 --> 22:05.330
所以说

22:05.330 --> 22:06.930
相当于是它占用了两格

22:06.930 --> 22:08.130
这个只占用了一格

22:08.130 --> 22:09.570
所以说它不一定是对齐的

22:09.570 --> 22:10.450
不一定是对齐的

22:11.170 --> 22:12.050
就是有的时候

22:12.050 --> 22:12.690
文字

22:12.690 --> 22:13.490
它内容大小

22:13.490 --> 22:15.250
内容的数量都差不多的话

22:15.250 --> 22:17.250
我们可以用这种方式来进行对齐

22:17.250 --> 22:19.650
比方说这里写1 2 3 4

22:20.210 --> 22:21.090
你看

22:21.090 --> 22:22.610
我们可以用这种方式来对齐

22:22.610 --> 22:24.530
当然这个对齐没啥意义

22:24.530 --> 22:25.330
没有啥意义

22:25.330 --> 22:26.930
只是在控制台里面看一下

22:26.930 --> 22:28.290
了解一下就行了

22:28.290 --> 22:29.170
了解一下

22:29.250 --> 22:30.370
有这么一些

22:30.370 --> 22:31.330
有这么一些就是

22:32.610 --> 22:33.730
转一幅就完事了

22:36.370 --> 22:38.290
这是关于支付错的意义

22:38.290 --> 22:38.930
支付错的意义

22:38.930 --> 22:40.530
该如何书写得得清楚

22:40.530 --> 22:41.810
这三种书写方式都可以

22:41.810 --> 22:42.370
都可以

22:44.850 --> 22:46.130
哦这里我再说一下

22:46.130 --> 22:47.330
如果在这里边的话

22:47.970 --> 22:48.930
在这里边的话

22:49.810 --> 22:51.650
你什么什么这些

22:51.650 --> 22:52.850
双引号啊

22:52.850 --> 22:54.610
单引号可以直接写的

22:54.610 --> 22:55.730
这里边什么单引号

22:55.730 --> 22:57.010
双引号就可以直接写了

22:57.730 --> 23:00.290
双引号单引号

23:00.290 --> 23:01.250
包括这里

23:01.250 --> 23:02.290
双引号

23:02.290 --> 23:03.090
直接写了

23:03.090 --> 23:04.290
因为它的支付算开始

23:04.290 --> 23:06.290
是以这个东西开始的

23:06.290 --> 23:07.090
如果要换行的话

23:07.090 --> 23:07.970
直接换行就完事了

23:07.970 --> 23:08.850
所以说这里面

23:08.850 --> 23:09.650
如果写起来的话

23:09.650 --> 23:11.170
写起来方便很多

23:11.170 --> 23:11.970
但是如果这里面

23:11.970 --> 23:13.490
你要写这个东西的话

23:13.490 --> 23:14.690
是不是要转移了

23:14.690 --> 23:16.290
这个东西就要转移了

23:16.290 --> 23:17.490
就是特殊制服呢

23:17.490 --> 23:18.370
在不同的

23:18.370 --> 23:19.650
支付算格式里面呢

23:19.650 --> 23:20.610
特殊制服呢

23:20.610 --> 23:21.650
可能不太一样

23:21.650 --> 23:22.290
有可能不太一样

23:24.050 --> 23:25.170
能理解吧

23:25.170 --> 23:25.730
非常简单

23:26.610 --> 23:29.490
这是关于制服创该如何输写

23:29.490 --> 23:30.050
好 下一个

23:31.090 --> 23:32.610
他怎么自动变了

23:32.610 --> 23:33.570
下一个布尔内行

23:35.010 --> 23:35.890
布尔内行呢

23:35.890 --> 23:41.970
它用于表达真或假

23:45.170 --> 23:46.210
两种状态

23:47.330 --> 23:48.770
它只能表示真或者是假

23:50.450 --> 23:50.930
比方说

23:51.890 --> 23:54.130
你成年了吗

23:54.130 --> 23:55.410
成年了没有成年

23:55.410 --> 23:56.610
两种状态对吧

23:56.610 --> 23:57.330
真或假

23:58.610 --> 24:00.210
你是难的吗

24:01.330 --> 24:02.210
是和不是

24:02.210 --> 24:03.090
是不是两种状态

24:03.090 --> 24:03.810
真或假

24:05.010 --> 24:05.570
比方说

24:06.610 --> 24:08.130
你的存款到期了吗

24:08.850 --> 24:09.490
到期了

24:09.490 --> 24:10.130
没到期

24:10.130 --> 24:11.090
两种状态

24:11.090 --> 24:12.690
咱们现实世界里边

24:12.690 --> 24:13.890
其实有很多这种状态

24:14.370 --> 24:14.930
这种状态呢

24:14.930 --> 24:16.850
我们可以用布尔内行来的表达

24:16.850 --> 24:18.370
布尔内行有很多很多的用法

24:18.370 --> 24:20.530
后面我们会深入的去讲

24:20.530 --> 24:22.130
现在我们先了解它怎么去写

24:22.770 --> 24:24.770
如何来输写一个布尔内行的数据

24:25.570 --> 24:26.530
我们现在了解的是

24:27.090 --> 24:27.970
注意我们讲的是啥

24:28.530 --> 24:29.010
讲的是

24:30.210 --> 24:33.810
这些不同数据内行的数据的数学方式

24:34.450 --> 24:35.010
注意啊

24:35.010 --> 24:36.370
我们输写的是数据

24:36.370 --> 24:37.730
我这里输写的不是内行

24:37.730 --> 24:38.930
不要告诉我这里输写的是

24:39.890 --> 24:41.170
输写的是一个制服串

24:41.170 --> 24:41.810
应该是

24:41.810 --> 24:42.770
确切的来说

24:42.770 --> 24:43.330
应该叫做

24:43.330 --> 24:45.010
输写的是一个制服串的数据

24:45.730 --> 24:46.930
输写的是数据

24:46.930 --> 24:47.730
具体的东西

24:48.610 --> 24:49.090
只不过呢

24:49.090 --> 24:49.970
它属于

24:49.970 --> 24:51.090
它的分类上

24:51.090 --> 24:52.290
属于制服串

24:52.290 --> 24:53.970
像这里我书写的是一个数字

24:53.970 --> 24:54.690
对吧

24:54.770 --> 24:55.490
那么它的

24:55.490 --> 24:56.610
它是数据

24:56.610 --> 24:59.410
它的分类上是属于数字的内行

24:59.410 --> 25:00.450
明白这个意思啊

25:00.450 --> 25:01.970
10是数字

25:01.970 --> 25:02.450
是数据

25:04.610 --> 25:06.130
number是内行

25:06.130 --> 25:07.010
number是内行

25:07.810 --> 25:09.090
刚才讲的数字和制服串

25:09.970 --> 25:11.250
然后再看布尔内行

25:11.250 --> 25:12.210
这种内行的数据

25:12.210 --> 25:13.810
又怎么输写呢

25:13.810 --> 25:14.930
它只有两种写法

25:14.930 --> 25:16.210
因为它只有两种状态对吧

25:17.010 --> 25:17.250
q

25:18.930 --> 25:19.170
q

25:20.050 --> 25:21.410
用这个数据呢

25:21.410 --> 25:23.170
这是数据啊表示真

25:24.130 --> 25:26.770
force表示假

25:27.890 --> 25:29.010
q表示真

25:29.010 --> 25:30.210
force表示假

25:30.210 --> 25:30.610
ok

25:30.610 --> 25:31.170
咱们来看一下

25:32.050 --> 25:33.010
这个没啥好看的

25:33.010 --> 25:33.650
非常简单

25:35.820 --> 25:36.300
比方说

25:37.180 --> 25:37.580
写那么

25:41.140 --> 25:41.540
然后呢

25:41.540 --> 25:42.900
再写上一个console log

25:42.900 --> 25:43.380
直接输出

25:43.860 --> 25:44.500
直接输出

25:45.540 --> 25:45.780
q

25:46.980 --> 25:48.260
再写一个console log

25:48.900 --> 25:49.300
force

25:50.580 --> 25:51.300
运行出来

25:52.740 --> 25:54.420
非常非常简单

25:54.420 --> 25:55.220
但是虽然简单

25:55.220 --> 25:56.180
但是非常重要

25:56.260 --> 25:57.220
这姿势非常重要

25:57.220 --> 25:57.780
再刷新词

25:59.060 --> 26:00.420
q和force

26:01.540 --> 26:02.340
就这两个

26:02.340 --> 26:03.460
没有别的写法了

26:03.460 --> 26:04.660
没有别的写法了

26:04.660 --> 26:05.620
你这样子写

26:05.620 --> 26:06.500
表示什么意思呢

26:06.500 --> 26:07.860
表示你这里写的数据

26:07.860 --> 26:08.500
是什么内行

26:09.060 --> 26:10.020
表示这里的数据

26:10.020 --> 26:10.980
是布尔内行

26:11.540 --> 26:12.500
是布尔内行

26:12.500 --> 26:13.700
那么也叫做布林

26:13.700 --> 26:14.500
布林

26:14.500 --> 26:16.020
梁统读法都可以

26:16.020 --> 26:16.820
布尔布林

26:16.820 --> 26:17.620
都是一样的意思

26:18.500 --> 26:19.700
表示真或者是假

26:20.900 --> 26:21.300
好

26:21.300 --> 26:22.420
下边这个两个内行

26:22.980 --> 26:24.020
这两个内行呢

26:24.820 --> 26:25.620
我还要说吧

26:26.580 --> 26:27.460
安迪凡内行

26:28.100 --> 26:28.740
表示

26:29.620 --> 26:30.500
未定义

26:30.900 --> 26:31.540
未定义

26:31.860 --> 26:32.820
就是没有定义

26:33.540 --> 26:34.260
不存在

26:34.580 --> 26:35.220
不存在

26:35.620 --> 26:36.340
都是安迪凡

26:36.900 --> 26:37.940
他表示这个东西

26:37.940 --> 26:38.500
不存在

26:38.500 --> 26:39.140
没有定义

26:39.620 --> 26:41.780
他的数据书写方式只有一种

26:43.220 --> 26:46.660
只有一种数据书写

26:47.460 --> 26:48.420
书写方式

26:48.740 --> 26:49.700
什么书写方式呢

26:50.420 --> 26:50.980
叫做

26:51.700 --> 26:52.420
安迪凡的

26:53.300 --> 26:54.020
安什么意思

26:54.020 --> 26:56.260
就是取反的意思对吧

26:56.260 --> 26:57.460
defend的什么意思

26:57.460 --> 26:58.180
就是定义

26:58.180 --> 26:58.900
定义

26:59.140 --> 27:00.580
没有定义的

27:00.740 --> 27:02.260
他只有这样的书写方式

27:02.260 --> 27:03.620
你其他的方式书写

27:04.020 --> 27:04.500
都不对

27:04.500 --> 27:05.060
都不对

27:05.060 --> 27:06.020
只能这样子书写

27:06.260 --> 27:08.100
如果你要用一个数据来表达

27:08.100 --> 27:08.900
他没有定义

27:08.900 --> 27:10.420
就可以直接使用这个单词

27:10.580 --> 27:11.300
安迪凡的

27:11.780 --> 27:12.020
好

27:12.020 --> 27:12.660
咱们来看一下

27:13.860 --> 27:14.260
是

27:15.780 --> 27:17.140
这里把右手关闭了

27:17.540 --> 27:18.100
好看一下

27:18.980 --> 27:19.700
script

27:21.220 --> 27:21.860
好 这里

27:22.580 --> 27:24.100
呃

27:24.740 --> 27:25.700
console log

27:25.940 --> 27:26.180
好

27:26.180 --> 27:28.660
比如说我们要输出一个undefend的数据

27:28.660 --> 27:29.940
就直接写就完事了

27:29.940 --> 27:31.780
前面千万不要加双引号啊

27:31.940 --> 27:34.180
如果你在前边加上两个双引号

27:34.180 --> 27:34.900
它什么类型

27:35.780 --> 27:36.900
它什么类型的数据

27:37.700 --> 27:39.700
是不是表示的是制服串数据的

27:39.780 --> 27:41.380
它表示制服串类型了啊

27:41.700 --> 27:43.060
表示的是制服串类型

27:43.300 --> 27:43.700
好

27:43.940 --> 27:44.820
什么都不要加啊

27:44.820 --> 27:45.700
什么都不要加

27:45.700 --> 27:47.140
保存看一下控制台

27:48.100 --> 27:48.900
右键运行

27:49.620 --> 27:50.340
看一下控制台

27:51.300 --> 27:52.100
f12

27:53.140 --> 27:53.540
啊

27:53.540 --> 27:54.660
它输出就是这么个东西

27:54.660 --> 27:56.260
并且是一灰色显示的

27:56.420 --> 27:57.380
一灰色显示的

27:57.380 --> 27:58.500
它输出就是undefend

27:59.300 --> 27:59.780
好吧

28:00.020 --> 28:01.380
这个类型很特殊啊

28:01.380 --> 28:02.020
很特殊

28:02.020 --> 28:04.340
我们后边呢会讲到啊

28:04.340 --> 28:05.380
什么情况下

28:05.380 --> 28:06.900
我们会用到这个类型啊

28:06.900 --> 28:07.620
这个数据

28:07.620 --> 28:08.420
总之你现在

28:08.660 --> 28:10.260
我们这几个课不要去想太多

28:10.260 --> 28:10.820
不要去想

28:10.820 --> 28:11.860
哎我怎么用啊

28:11.860 --> 28:13.220
我怎么去做一个销我出来啊

28:13.220 --> 28:14.420
我怎么去做轮波图啊

28:15.460 --> 28:16.260
我的天啊

28:16.260 --> 28:17.700
还找得很啊找得很

28:17.700 --> 28:19.060
我们现在在打地基

28:19.060 --> 28:19.940
在学说话

28:20.420 --> 28:21.060
你先把

28:21.700 --> 28:22.820
跟学中文一样

28:22.820 --> 28:23.700
先把拼音啊

28:23.700 --> 28:25.780
不偏旁部手这些认识清楚啊

28:25.780 --> 28:27.620
我们在后边再说去做功能

28:27.620 --> 28:29.140
还找得很啊

28:29.140 --> 28:30.580
我们先把这些基础打牢啊

28:30.580 --> 28:32.020
现在我们这一刻只需要知道

28:32.660 --> 28:33.780
有哪些类型

28:33.780 --> 28:35.940
没种类型的该怎么去书写啊

28:35.940 --> 28:37.140
没种类型该怎么去书写

28:37.700 --> 28:38.700
好下边这个

28:38.700 --> 28:39.460
闹类型了

28:40.100 --> 28:41.060
它表示的是

28:41.860 --> 28:42.580
表示空

28:43.460 --> 28:45.060
不存在啊不存在

28:45.060 --> 28:45.380
好

28:45.940 --> 28:48.900
这个类型就跟这个undefend类型就非常非常的像

28:49.860 --> 28:50.980
实际上呢我告诉大家

28:50.980 --> 28:52.420
之前咱们讲那个

28:52.420 --> 28:53.860
好像讲第1节课的时候啊

28:54.740 --> 28:56.580
第1节课还是第2节课的时候

28:56.580 --> 28:58.500
就讲过这个介式语言啊

28:59.140 --> 29:02.420
它是用10天时间开发的语言

29:02.420 --> 29:04.660
它里边有很多的问题当时

29:05.220 --> 29:07.140
有很多问题的引流至今

29:07.140 --> 29:08.900
那么这里就是它引流至今的问题

29:09.700 --> 29:12.580
实际上呢根本就不需要这个闹类型

29:12.580 --> 29:13.620
根本就不需要

29:13.620 --> 29:14.980
只需要undefend就够了

29:15.620 --> 29:17.300
闹类型实际上是没有什么用的

29:18.180 --> 29:22.260
当年这个Brandon H在设计这个介式语言的时候呢

29:22.260 --> 29:25.860
他本来一开始呢是不想去参考加把任何东西的

29:25.860 --> 29:27.940
因为他那个人呢他不喜欢面向对象

29:28.580 --> 29:30.340
也不喜欢加把的那种变成方式

29:30.900 --> 29:34.740
所以说呢他没有一开始不考虑加加把的任何东西

29:34.740 --> 29:36.820
后来呢是公司要求他啊

29:36.820 --> 29:39.780
我们要去称这个热点必须要把加把的这些东西加上

29:40.340 --> 29:41.700
于是呢他后来才敢攻

29:42.180 --> 29:44.340
才去加了一些面向对象的东西

29:44.340 --> 29:46.900
而这个now这个东西这个东西是哪来的呢

29:46.980 --> 29:48.180
就是哪次有面向对象

29:48.180 --> 29:50.340
他当时做的其实也挺心烦的了

29:50.900 --> 29:52.340
也心不甘情不愿的

29:52.340 --> 29:53.380
非常抗拒的

29:53.380 --> 29:55.060
然后把这个东西再加上了

29:55.060 --> 29:56.500
于是呢也没有考虑太多

29:56.500 --> 29:58.660
就直接把面向对象的个now直接弄过来了

29:59.140 --> 30:01.380
实际上呢有undefend这个类型过后呢

30:01.380 --> 30:02.820
其实是不需要now的

30:02.820 --> 30:03.860
不需要now的

30:03.860 --> 30:05.860
后面我们会看到这个now类型呢

30:05.860 --> 30:08.100
他跟这个面向对象跟对象是相关的

30:08.100 --> 30:09.460
跟对象是相关的

30:09.460 --> 30:10.340
我们以后再说吧

30:10.740 --> 30:11.220
好吧

30:11.220 --> 30:12.740
这是关于这个now类型

30:12.740 --> 30:14.420
now类型他也表示空

30:14.420 --> 30:15.540
那我们要怎么理解呢

30:15.540 --> 30:16.500
本来就不好理解

30:16.820 --> 30:18.100
这一块就不好理解

30:18.100 --> 30:19.620
我建议大家了以后

30:19.620 --> 30:21.620
你要表示一个东西不存在

30:21.620 --> 30:23.060
表示它为空的时候

30:23.060 --> 30:24.500
直接使用undefend

30:24.500 --> 30:25.620
直接使用undefend

30:25.620 --> 30:26.900
不要去使用now

30:26.900 --> 30:28.500
但是呢不可排除的是

30:28.500 --> 30:31.700
以前有些已经写好的GS

30:31.700 --> 30:33.300
就是我们以后要用到

30:33.300 --> 30:34.420
以前别人写的GS

30:34.420 --> 30:37.300
它可能里边使用到了now

30:37.300 --> 30:39.060
你了解一下这个内容就行了

30:39.060 --> 30:40.180
如果你一定要理解的话

30:40.180 --> 30:40.980
可以这样子想啊

30:42.180 --> 30:44.260
就好比是你去赞座

30:44.260 --> 30:44.660
对吧

30:44.740 --> 30:46.900
你们读大学是不是经常要赞座

30:46.900 --> 30:47.860
给我赞个座

30:47.860 --> 30:49.140
图书馆也好啊

30:49.140 --> 30:49.700
教室也好

30:50.900 --> 30:52.740
那么如果这个位置没人

30:52.740 --> 30:54.100
那你可以理解为undefend

30:55.460 --> 30:56.340
就是没有被占

30:56.340 --> 30:57.940
那么可以理解为undefend

30:57.940 --> 30:58.420
没东西

30:59.220 --> 31:00.820
如果那个位置被占了

31:00.820 --> 31:02.260
但是人还没来

31:02.260 --> 31:03.460
只是被占用了

31:03.460 --> 31:05.620
你可以放了一本书

31:05.620 --> 31:06.820
就放了一个纸条

31:06.820 --> 31:08.260
或者是放了一个水果

31:08.260 --> 31:09.220
一个苹果放在上面

31:09.220 --> 31:10.100
都是占座了对吧

31:11.060 --> 31:11.780
那么这个时候呢

31:11.780 --> 31:12.980
你可以认为它是now

31:13.940 --> 31:15.140
可以这样子去想

31:15.140 --> 31:16.100
可以这样去想

31:16.100 --> 31:17.700
其实它们两个的意思都差不多的

31:19.060 --> 31:20.100
now这种内想呢

31:20.100 --> 31:23.060
它也只有一种数据

31:23.060 --> 31:24.420
书写方式

31:24.420 --> 31:25.140
那么就是now

31:25.700 --> 31:26.180
就是now

31:27.140 --> 31:29.380
OK 这是关于now这个内想

31:29.380 --> 31:30.020
now这个内想

31:30.820 --> 31:32.100
now这个内想还比较特殊

31:32.100 --> 31:33.060
我以后再说一下

31:33.620 --> 31:35.940
这是一些以前介石

31:35.940 --> 31:37.380
它遗留的一些问题

31:38.100 --> 31:38.740
好吧

31:38.740 --> 31:39.220
OK

31:39.220 --> 31:40.500
那么现在就知道了

31:40.500 --> 31:42.580
这五种基本内想

31:42.740 --> 31:43.540
它的书写方式

31:43.540 --> 31:44.660
now内想我们演示一下吧

31:45.140 --> 31:45.860
没啥好演示的

31:45.860 --> 31:47.300
就直接now一个now

31:48.020 --> 31:49.300
就直接书写就完成了

31:49.300 --> 31:50.660
前面千万不要加上什么

31:51.300 --> 31:52.340
单一号 双一号

31:52.340 --> 31:53.140
不要去加这些东西

31:53.860 --> 31:54.180
包穿

31:55.140 --> 31:56.180
就是now

31:56.180 --> 31:57.300
就是now

31:57.300 --> 31:58.580
表示空

32:00.340 --> 32:01.540
那么这里我们就学习了

32:01.540 --> 32:02.660
五种基本内想

32:03.300 --> 32:04.820
也叫做原始内想

32:04.820 --> 32:05.380
有的时候呢

32:05.380 --> 32:06.580
也称之为基本内想

32:07.620 --> 32:08.740
基本内想什么意思呢

32:08.740 --> 32:10.100
就是它不可能再细分了

32:10.100 --> 32:11.940
你能不能把数字再进行细分

32:12.020 --> 32:13.220
细分成别的内形了

32:13.220 --> 32:14.500
小内形了没有了

32:14.500 --> 32:15.780
不能再细分了

32:15.780 --> 32:16.820
字幕说就是个字幕说

32:16.820 --> 32:17.860
它没法再细分了

32:19.220 --> 32:20.100
布尔也是一样

32:20.100 --> 32:20.500
正何讲

32:20.500 --> 32:21.620
它没法再细分了

32:21.620 --> 32:23.620
它不能再细分成别的内形了

32:23.620 --> 32:24.740
这些都是基本内想

32:25.620 --> 32:25.860
好

32:25.860 --> 32:27.060
基本内想这里面呢

32:27.060 --> 32:28.340
我要讲一个东西啊

32:28.340 --> 32:30.260
就在讲应用层面的一个东西

32:30.740 --> 32:31.380
一个个说吧

32:32.260 --> 32:32.660
首先呢

32:32.660 --> 32:33.700
就是要区分

32:35.060 --> 32:37.300
某些长数字

32:38.020 --> 32:41.860
数字和字符串

32:41.860 --> 32:44.100
这是初学者经常犯的错误

32:44.100 --> 32:45.220
经常犯的错误

32:45.220 --> 32:46.020
什么意思呢

32:46.020 --> 32:46.820
我举个例子啊

32:47.700 --> 32:50.260
比方说手机号是数字还是字符串

32:51.780 --> 32:53.700
手机号是数字还是字符串

32:54.260 --> 32:58.740
手机号是数字还是字符串

32:58.740 --> 33:00.980
你认为它应该用什么内形

33:00.980 --> 33:02.340
表达比较合适呢

33:02.340 --> 33:04.180
我们首先要选择一个合适的内形

33:04.820 --> 33:06.500
用什么内形表达合适呢

33:07.300 --> 33:07.940
比方说啊

33:07.940 --> 33:11.380
某个人的手机号是13812341234

33:12.340 --> 33:13.860
那么这是数字内形的表达方式

33:13.860 --> 33:14.420
对吧

33:14.420 --> 33:14.900
好

33:14.900 --> 33:16.100
另外一种表达方式呢

33:16.100 --> 33:17.940
是用字符串的表达方式

33:17.940 --> 33:20.100
13812341234

33:21.220 --> 33:22.500
两种都可以对不对

33:22.500 --> 33:23.380
两种都可以

33:23.380 --> 33:24.900
但是用什么方式更好呢

33:26.180 --> 33:27.780
一定是用字符串

33:27.780 --> 33:28.740
为什么呢

33:28.740 --> 33:28.980
好

33:28.980 --> 33:30.420
这里的一个技巧给大家说一下

33:32.100 --> 33:32.660
一个技巧

33:33.220 --> 33:38.260
就是如果按照数字的方式

33:39.140 --> 33:39.540
阅读

33:40.420 --> 33:42.900
则使用数字内形

33:44.020 --> 33:47.060
否则使用字符串内形

33:47.060 --> 33:47.540
什么意思

33:48.900 --> 33:50.260
你读这个数字的时候

33:50.260 --> 33:51.780
你是把它按照数字来读吗

33:52.340 --> 33:52.980
你会怎么读

33:53.540 --> 33:56.660
你会读成13812341234对吧

33:56.660 --> 33:58.100
这是正常人的读法

33:58.100 --> 33:59.620
我给两个不正常的啊

33:59.620 --> 34:00.580
不正常的读法呢

34:00.740 --> 34:01.540
就应该读作

34:02.980 --> 34:04.500
138亿

34:04.500 --> 34:05.780
比方说为你手机号多少

34:05.780 --> 34:10.980
我的手机号是138亿12341234

34:12.180 --> 34:14.500
这才是数字的读法

34:15.380 --> 34:17.060
那你手机号是这样读吗

34:17.060 --> 34:18.500
肯定不是这样读啊

34:18.500 --> 34:20.100
所以说手机号什么内形

34:20.100 --> 34:22.740
手机号应该是字符串内形

34:23.780 --> 34:26.420
因为它的读的方式是字符串的方式

34:26.420 --> 34:27.300
是不是很简单

34:27.300 --> 34:28.980
你又通过这种方式来判断

34:29.140 --> 34:30.820
就非常容易轻松的判断出

34:30.820 --> 34:31.780
它应该是什么内形了

34:32.500 --> 34:33.940
它应该是一个字符串内形

34:33.940 --> 34:36.660
所以说你用字符串来表达是最合适的

34:36.660 --> 34:39.220
尽管我们现在好像两种方式都可以

34:39.220 --> 34:40.260
但是以后不一样

34:41.540 --> 34:44.580
以后我们要进行各种印算的时候就不一样了

34:44.580 --> 34:46.580
所以说你一定要用合适的内形来表达

34:48.180 --> 34:50.580
这就是手机这一块

34:51.140 --> 34:51.700
那再问你

34:53.540 --> 34:54.500
身份证号

34:55.300 --> 34:56.100
身份证

34:56.820 --> 35:01.060
是数字还是字符串呢

35:01.780 --> 35:02.420
是啥呢

35:03.060 --> 35:03.700
身份证号

35:04.260 --> 35:05.380
是不是还是字符串

35:05.380 --> 35:07.620
你读身份证不是按照数字那样来读吧

35:07.620 --> 35:08.740
是不是还是字符串

35:08.740 --> 35:09.220
好

35:09.220 --> 35:09.620
又来

35:10.980 --> 35:14.180
学号是数字还是字符串呢

35:14.980 --> 35:15.780
这字符串呢

35:17.220 --> 35:18.260
是不是还是字符串

35:18.260 --> 35:18.580
对吧

35:19.140 --> 35:19.860
读学号嘛

35:19.860 --> 35:20.660
对不对

35:20.660 --> 35:21.940
比方说你什么

35:22.900 --> 35:24.980
2015

35:24.980 --> 35:26.180
0507

35:26.180 --> 35:27.300
你多少多少多少

35:27.300 --> 35:27.700
对吧

35:27.700 --> 35:29.780
你是按照字符串的方式来读

35:29.780 --> 35:31.620
不是多少千多少万多少亿

35:31.620 --> 35:32.980
不是用这种方式来读吧

35:32.980 --> 35:35.140
所以说学号它还是字符串

35:35.140 --> 35:36.180
那么再看

35:36.180 --> 35:39.220
年龄是数字还是字符串呢

35:39.780 --> 35:40.820
年龄

35:40.820 --> 35:42.180
前面三个都是字符串

35:43.540 --> 35:44.020
年龄

35:46.770 --> 35:47.810
年龄是数字的

35:47.810 --> 35:48.210
对不对

35:48.210 --> 35:49.330
数字的比方说

35:49.330 --> 35:50.290
你18岁

35:50.290 --> 35:52.290
你不会说成你18岁吧

35:53.010 --> 35:54.290
这种说法也很怪对不对

35:54.290 --> 35:55.890
它是按照数字来读的

35:55.890 --> 35:56.770
是不是很简单

35:56.770 --> 35:59.170
通过这种方式就可以轻松的判断出

35:59.170 --> 36:00.130
轻松的判断出

36:00.130 --> 36:01.170
你应该是数字

36:01.170 --> 36:01.810
还是字符串

36:01.810 --> 36:03.090
为什么我要讲这个问题

36:03.970 --> 36:05.250
为什么要讲这个问题

36:05.250 --> 36:06.050
因为以前呢

36:06.050 --> 36:07.010
我教一些同学的时候

36:07.010 --> 36:08.290
发现有些同学就是

36:08.290 --> 36:09.570
老是就犯了的错误

36:09.570 --> 36:10.370
什么学号

36:10.370 --> 36:11.890
全部用数字给我表示

36:11.890 --> 36:12.610
什么手机号

36:12.610 --> 36:13.730
用数字类型表示

36:13.730 --> 36:15.170
会导致到后边

36:15.170 --> 36:15.890
在运算的时候

36:15.890 --> 36:16.610
在判断的时候

36:16.610 --> 36:18.050
各种问题出现

36:18.050 --> 36:19.010
包括什么密码

36:19.010 --> 36:19.650
有的时候呢

36:19.650 --> 36:22.050
我们有些网站驻车的时候

36:22.130 --> 36:23.810
密码它只能输入数字

36:23.810 --> 36:25.010
特别是一些交易密码

36:25.010 --> 36:25.410
对吧

36:25.410 --> 36:26.690
它只能输入数字

36:26.690 --> 36:27.570
就好像是这个密码

36:27.570 --> 36:29.090
是数字类型一样

36:29.090 --> 36:31.490
比方说密码是123456

36:31.490 --> 36:32.450
你会怎么读

36:32.450 --> 36:34.370
你会读123456

36:34.370 --> 36:35.170
你不会读成

36:36.290 --> 36:37.810
我脑袋要钻一下

36:37.810 --> 36:40.290
123456吧

36:40.290 --> 36:41.330
不会这样去读吧

36:41.330 --> 36:42.530
所以密码它也能以

36:42.530 --> 36:43.970
只能是字符串

36:43.970 --> 36:44.930
你把这个规律

36:44.930 --> 36:46.530
规律记住就完事了

36:46.530 --> 36:48.370
就不会犯这样的错误了

36:48.370 --> 36:50.130
这关于区分数字和字符串

36:50.210 --> 36:51.330
这个字词了解一下

36:52.850 --> 36:53.650
其他就没啥了

36:53.650 --> 36:55.090
其他就没啥了

36:55.090 --> 36:57.170
这是关于原始内形

36:57.170 --> 36:58.290
原始内形

36:58.290 --> 36:58.530
好

36:58.530 --> 36:59.730
接下来我们来看另外一种内形

36:59.730 --> 37:00.690
叫做引用内形

37:02.850 --> 37:03.410
引用内形

37:04.610 --> 37:05.890
引用内形有两种

37:06.850 --> 37:07.490
引用内形

37:08.450 --> 37:09.890
有两种

37:11.650 --> 37:15.970
一种叫做对象

37:16.610 --> 37:17.570
一种叫做对象

37:17.570 --> 37:18.690
一种叫做函数

37:18.690 --> 37:20.050
函数我们后边在讲

37:20.050 --> 37:21.890
函数现在你肯定不知道什么意思

37:21.890 --> 37:22.850
我们后边在讲

37:24.130 --> 37:25.170
后续章节

37:25.970 --> 37:26.770
专门讲解

37:27.570 --> 37:28.290
现在别管

37:28.290 --> 37:29.010
现在别管

37:29.010 --> 37:29.890
我们现在就看对象

37:30.450 --> 37:31.490
这对象啥意思呢

37:32.210 --> 37:33.890
有些同学该是想入菲菲了对吧

37:35.570 --> 37:36.450
不是你想的那样

37:36.930 --> 37:38.370
这个对象叫做opject

37:39.490 --> 37:40.130
opject

37:41.090 --> 37:42.050
opject是什么意思

37:42.690 --> 37:43.570
opject是什么意思

37:44.210 --> 37:46.130
如果你要准确的翻译过来就好

37:47.090 --> 37:50.370
如果用苏面语翻译出来的话

37:50.370 --> 37:51.490
就叫做事物

37:52.770 --> 37:54.050
如果用口语翻译的话

37:54.050 --> 37:54.850
就要做东西

37:55.410 --> 37:55.890
玩药

37:57.010 --> 37:58.210
就是opject

37:58.610 --> 37:59.890
我也不知道为什么要最重要

37:59.890 --> 38:00.850
把它翻译成对象

38:00.850 --> 38:02.050
我觉得也挺奇怪的

38:02.370 --> 38:03.490
其实最好是

38:03.970 --> 38:05.250
最好理解的就变成事物

38:05.250 --> 38:06.130
对吧事物就是

38:06.450 --> 38:07.090
很好理解

38:08.210 --> 38:09.170
那你看一下这个概念

38:09.170 --> 38:09.970
是不是很大呀

38:10.370 --> 38:11.170
这非常非常大

38:12.850 --> 38:14.290
这个世间万事万物

38:14.290 --> 38:15.010
我们都可以认为

38:15.010 --> 38:15.650
它是事物

38:16.210 --> 38:16.850
看得见的

38:16.850 --> 38:17.570
看不见的

38:17.570 --> 38:18.210
抽象的

38:18.210 --> 38:19.010
聚象的

38:19.010 --> 38:20.050
这些都是事物

38:20.050 --> 38:20.610
都是东西

38:20.610 --> 38:21.330
都是玩药

38:21.330 --> 38:22.450
这个玩药对吧

38:22.930 --> 38:23.970
我们都可以这样认为

38:23.970 --> 38:25.250
它是一个对象

38:25.650 --> 38:27.490
所以它概念是非常非常大的

38:28.050 --> 38:29.650
它为什么会出来这么一个东西呢

38:30.130 --> 38:30.850
大家想一想

38:31.330 --> 38:33.250
咱们程序是来做什么呢

38:33.250 --> 38:36.210
是来解决先时世界里边的问题的

38:36.850 --> 38:39.490
是用于解决先时世界里边问题的

38:39.490 --> 38:43.730
但是先时世界里边数据真的是太复杂了

38:44.610 --> 38:45.570
你想一想呗

38:45.650 --> 38:46.530
我都不敢想啊

38:46.530 --> 38:48.530
先时世界里边有这么多数据

38:48.530 --> 38:50.530
它们有这么多数据的分类方式

38:51.410 --> 38:52.930
有这么多数据分类方式

38:52.930 --> 38:54.530
那程序里面要怎么来表达

38:54.530 --> 38:55.970
这么多数据的分类方式呢

38:56.690 --> 38:58.370
如果把每一种数据的分类方式

38:58.370 --> 38:58.930
都做出来的话

38:58.930 --> 38:59.490
我告诉你

38:59.970 --> 39:00.930
这个Brandon H

39:01.330 --> 39:03.890
这个街市代码的支付

39:04.770 --> 39:07.250
可能到现在都还没有把这个街市语言写完

39:07.810 --> 39:10.770
因为无数种数据的区分方式

39:10.770 --> 39:12.530
而且不断的去冒出一些新概念

39:12.930 --> 39:14.130
世界不断的发展

39:14.210 --> 39:15.730
不断的去冒出一些新的东西

39:15.730 --> 39:17.330
又要去添加新的数据类型

39:17.890 --> 39:19.250
所以说它用什么方式呢

39:19.250 --> 39:20.850
用一种非常巧妙的方式

39:20.850 --> 39:22.210
所有语言都是这样的文的

39:23.170 --> 39:25.090
就是先定几个基本的一型

39:25.970 --> 39:26.530
数字

39:26.770 --> 39:27.330
字不错

39:27.650 --> 39:28.050
布尔

39:28.610 --> 39:29.090
untypad

39:29.090 --> 39:29.410
nau

39:30.050 --> 39:31.410
先定几个基本的一型

39:31.410 --> 39:35.090
就好必是我们传统中国的文化里边

39:35.090 --> 39:36.130
金木水火土

39:36.130 --> 39:36.450
对吧

39:36.450 --> 39:37.170
基本元素

39:38.050 --> 39:40.690
可以认为其他的事件的其他所有东西

39:41.170 --> 39:43.490
都可以通过这种基本元素来组合

39:44.050 --> 39:45.250
形成一个新的东西

39:46.450 --> 39:47.410
所以说对象呢

39:47.410 --> 39:48.690
如果你要去理解它的话

39:50.130 --> 39:51.810
要理解对象是什么东西的话

39:51.810 --> 39:52.450
你可以认为

39:53.170 --> 39:53.730
可以认为

39:54.450 --> 40:01.010
对象是由多个基本的一型组合而成

40:02.130 --> 40:04.130
有多个基本的一型组合而成

40:05.410 --> 40:06.210
这就是对象

40:07.330 --> 40:07.890
好

40:07.890 --> 40:09.490
对象如何来书写

40:09.490 --> 40:10.930
我们这些可以仔细研究

40:10.930 --> 40:12.050
对象如何来书写

40:12.850 --> 40:15.250
书写对象的格式

40:15.810 --> 40:16.370
格式

40:17.810 --> 40:19.250
建个例子

40:19.250 --> 40:20.850
TES6点一天没有

40:21.570 --> 40:22.850
直接例子里边说

40:23.730 --> 40:24.850
如何来书写一个对象

40:27.520 --> 40:28.080
关闭其他

40:29.200 --> 40:29.600
这里呢

40:29.600 --> 40:30.480
我们比方说

40:30.480 --> 40:31.600
script元素

40:34.400 --> 40:35.120
这里面呢

40:35.120 --> 40:36.240
我们书写上

40:36.240 --> 40:37.440
书写上一个对象

40:37.440 --> 40:38.240
console log

40:38.240 --> 40:39.280
输出是什么呢

40:39.280 --> 40:40.560
输出是一个对象

40:40.560 --> 40:42.400
对象一定要一个大扩号

40:43.040 --> 40:43.760
两个大扩号

40:44.560 --> 40:46.000
大扩号就是花扩号

40:46.000 --> 40:47.120
左边开始

40:47.120 --> 40:47.920
右边来结束

40:48.880 --> 40:50.400
左边表示对象开始

40:50.400 --> 40:51.120
对象结束

40:51.760 --> 40:52.640
有点像知不错的

40:52.640 --> 40:53.360
开始和结束

40:54.240 --> 40:55.840
那么如果你直接这样子写了呢

40:55.840 --> 40:57.840
表示一个什么都没有的对象

40:57.840 --> 40:58.480
有没有对象

40:58.480 --> 40:59.040
有对象

40:59.040 --> 41:00.400
就是有个玩意儿

41:00.400 --> 41:01.680
这是个玩意儿里边有啥呢

41:01.680 --> 41:02.160
啥都没有

41:02.720 --> 41:03.280
啥都没有

41:03.840 --> 41:04.480
你看一下

41:04.480 --> 41:05.280
得到的结果

41:05.280 --> 41:06.240
我们看一下得到的结果

41:09.500 --> 41:10.140
你会发现

41:10.140 --> 41:10.940
他得到的是什么呢

41:10.940 --> 41:11.900
得到的是这个玩意儿

41:11.900 --> 41:12.700
得到的是这个玩意儿

41:13.420 --> 41:13.740
对吧

41:13.740 --> 41:14.220
啥都没有

41:14.300 --> 41:14.700
空的

41:16.540 --> 41:17.500
接下来我们来看一下

41:17.500 --> 41:18.620
这里边可以写东西的

41:19.340 --> 41:20.300
把展开回车

41:20.300 --> 41:21.580
我们通常为了好看

41:21.580 --> 41:22.620
为了好看

41:22.620 --> 41:24.380
可以换行来进行书写

41:24.380 --> 41:25.660
可不可以换行一条语句

41:25.660 --> 41:26.620
当然可以换行

41:26.620 --> 41:28.140
你只要以分号结束就完成了

41:29.180 --> 41:32.220
整个对象里边可以写的东西可多了

41:32.940 --> 41:34.700
那么对象里面到底有哪些东西

41:34.700 --> 41:35.900
你自己去订

41:35.900 --> 41:36.780
你自己来订

41:36.780 --> 41:37.500
我不给你订

41:37.500 --> 41:38.540
你自己来订

41:38.540 --> 41:39.020
比方说

41:40.860 --> 41:41.580
可以这样子写

41:42.140 --> 41:45.660
对象里边是一个一个的属性名和属性值

41:45.660 --> 41:48.780
就有点类似于CSS里边的代码

41:48.780 --> 41:50.700
CSS不是有属性名属性值吗

41:50.700 --> 41:51.180
对吧

41:51.180 --> 41:52.140
这里面差不多

41:52.140 --> 41:53.180
差不多

41:53.180 --> 41:53.820
比方说

41:56.380 --> 41:58.060
拥护的新名

41:59.260 --> 41:59.980
这是新名

41:59.980 --> 42:01.340
这是属性的名字

42:01.340 --> 42:02.140
属性的名字

42:02.140 --> 42:02.780
冒号

42:02.780 --> 42:04.700
后边写上什么属性的值

42:04.700 --> 42:04.940
好

42:04.940 --> 42:06.300
新名是什么类型

42:06.300 --> 42:06.860
先想一下

42:08.060 --> 42:09.260
新名是什么类型

42:09.260 --> 42:10.780
它是不是基本类型

42:11.660 --> 42:13.500
新名是不是基本类型里边的东西

42:13.500 --> 42:15.180
就是原始类型里边的东西

42:15.180 --> 42:15.820
好好想一想

42:17.100 --> 42:17.420
是不是

42:18.140 --> 42:18.780
肯定是吗

42:18.780 --> 42:19.420
对吧

42:19.420 --> 42:20.140
那是什么类型

42:20.140 --> 42:20.860
是不是制服串

42:21.500 --> 42:22.460
新名是一个文本

42:22.460 --> 42:23.740
是一个制服串

42:23.740 --> 42:24.220
OK

42:24.220 --> 42:24.620
好

42:24.620 --> 42:25.260
新名呢

42:25.260 --> 42:26.380
我给大家加上一个制服串

42:26.380 --> 42:26.700
你看

42:27.900 --> 42:28.940
后边书写的是数据

42:30.140 --> 42:31.340
后边书写的是数据

42:31.340 --> 42:34.540
那么你选择一个合适的数据类型给它

42:34.540 --> 42:36.300
那么我们选择一个制服串

42:36.300 --> 42:37.660
新名表示

42:37.660 --> 42:38.460
比方说我们成哥

42:38.460 --> 42:38.700
对吧

42:39.580 --> 42:39.900
基层

42:42.180 --> 42:42.660
都是新名

42:43.620 --> 42:45.700
成哥在视频里面不老是拿

42:45.700 --> 42:46.420
拿什么

42:46.420 --> 42:47.700
拿登革来举例子吧

42:47.700 --> 42:49.380
我的视频里面就拿成哥来举例子

42:50.340 --> 42:50.660
好

42:50.660 --> 42:51.940
接下来那么再来一个

42:51.940 --> 42:52.580
再来一个

42:53.140 --> 42:53.860
逗号分隔

42:53.860 --> 42:54.980
用英文逗号分隔

42:55.540 --> 42:55.620
好

42:55.620 --> 42:56.100
这一个了

42:56.100 --> 42:57.380
我们先看一下一个吧

42:57.380 --> 42:58.100
保存看一下

42:58.740 --> 42:59.380
保存看一下

42:59.380 --> 42:59.700
你看

43:00.580 --> 43:01.220
得到了就是

43:01.860 --> 43:03.540
一个数据的综合体

43:04.260 --> 43:05.220
它里边是由

43:05.220 --> 43:06.580
就像金木水火土有很多

43:06.580 --> 43:07.700
很多元素组成

43:07.700 --> 43:09.220
有一个制服串组成

43:09.220 --> 43:10.260
这个制服串了

43:10.260 --> 43:11.140
还给它取了个名字

43:11.140 --> 43:11.620
叫做Name

43:12.340 --> 43:14.660
表示的是拥股姓名

43:14.660 --> 43:15.460
你看

43:15.460 --> 43:16.740
我们可以展开

43:16.740 --> 43:17.540
展开可以看到

43:17.540 --> 43:19.300
Name为基层

43:19.300 --> 43:19.940
对吧

43:19.940 --> 43:21.860
就用这种方式来表示数据

43:21.860 --> 43:22.500
好

43:22.500 --> 43:23.140
我们接着

43:23.140 --> 43:24.420
但是我们虽然只有一个

43:24.420 --> 43:26.500
但是这里面是可以写很多很多个的

43:26.500 --> 43:27.540
比方说

43:27.540 --> 43:29.940
我们可以表示成哥的里称

43:29.940 --> 43:30.340
对吧

43:30.340 --> 43:31.220
成哥的里称

43:31.220 --> 43:32.340
Name

43:32.340 --> 43:34.340
你该取个名字吧

43:34.340 --> 43:35.300
这个名字是随便取的

43:35.300 --> 43:35.940
随便取的

43:35.940 --> 43:37.380
表示你称

43:37.380 --> 43:38.180
你称

43:38.180 --> 43:38.660
冒号

43:38.660 --> 43:39.540
要什么

43:39.540 --> 43:40.340
成哥

43:40.580 --> 43:41.060
成哥

43:42.180 --> 43:42.500
对吧

43:43.380 --> 43:43.700
好

43:43.700 --> 43:44.420
保存

43:44.420 --> 43:45.620
怎么再保存

43:45.620 --> 43:47.220
于是到这里边数的两个数据了

43:47.940 --> 43:48.660
你看

43:48.660 --> 43:49.860
这边就两个数据了

43:49.860 --> 43:51.780
他们共同组成了一个大的数据

43:52.420 --> 43:53.300
对象是干嘛的

43:53.300 --> 43:55.220
就是来组合这些小的数据

43:55.220 --> 43:57.460
就是把一基本数据组合起来

43:57.460 --> 43:58.260
成为大的数据

43:59.060 --> 43:59.220
好

43:59.220 --> 43:59.860
比方说

43:59.860 --> 44:00.420
比方说

44:01.380 --> 44:02.340
成哥的年龄

44:02.340 --> 44:02.820
对吧

44:02.820 --> 44:03.620
成哥比较年轻

44:03.620 --> 44:04.180
对不对

44:04.180 --> 44:05.380
成哥富一岁

44:05.380 --> 44:05.620
OK

44:06.340 --> 44:06.900
保存

44:06.900 --> 44:07.380
我们来看一下

44:09.380 --> 44:09.940
好

44:10.020 --> 44:10.900
年龄富一

44:10.900 --> 44:11.460
对不对

44:11.460 --> 44:11.620
好

44:11.620 --> 44:12.500
你看

44:12.500 --> 44:13.380
整个对象

44:13.380 --> 44:14.420
整个是对象

44:14.420 --> 44:15.300
整个就是对象

44:15.300 --> 44:16.100
整个就是一个东西

44:16.100 --> 44:16.660
一个玩意儿

44:17.460 --> 44:18.900
那么对象里边

44:18.900 --> 44:20.660
它有三个数据组成

44:20.660 --> 44:21.300
一个字不错

44:21.780 --> 44:22.580
一个字不错

44:22.580 --> 44:23.460
和一个数字

44:23.460 --> 44:23.860
对不对

44:24.740 --> 44:26.020
比方说成哥的年龄

44:26.020 --> 44:27.220
甚至还可以是二净之的

44:27.220 --> 44:27.700
对吧

44:27.700 --> 44:29.380
这可以是二净之的

44:29.380 --> 44:30.260
零币

44:30.260 --> 44:31.060
1010

44:31.060 --> 44:31.860
1010

44:31.860 --> 44:32.420
10

44:32.420 --> 44:33.220
10

44:33.220 --> 44:33.780
保存

44:35.060 --> 44:35.380
看一下

44:35.380 --> 44:36.180
成哥的年龄对吧

44:37.140 --> 44:37.540
千岁

44:37.540 --> 44:38.340
千岁

44:38.340 --> 44:38.980
对吧

44:40.660 --> 44:40.820
好

44:40.820 --> 44:42.100
这是这个数据

44:42.660 --> 44:43.700
那么里边还可以说

44:43.700 --> 44:44.580
可以写很多

44:45.060 --> 44:46.180
是不是可以写很多

44:46.180 --> 44:46.660
比方说

44:47.780 --> 44:49.700
成哥的性别

44:49.700 --> 44:50.180
尖刀

44:50.900 --> 44:51.540
性别的话

44:51.540 --> 44:53.060
可以用这个单词

44:53.060 --> 44:54.820
尖刀也可以用这个sex

44:54.820 --> 44:55.300
都可以

44:55.780 --> 44:56.260
sex

44:56.260 --> 44:57.060
都可以

44:57.060 --> 44:57.940
看个人习惯吧

44:58.820 --> 44:59.700
尖刀

44:59.700 --> 45:00.580
表示性别

45:00.580 --> 45:01.220
性别的话

45:01.220 --> 45:01.700
我们这里

45:02.500 --> 45:02.980
比方说

45:03.380 --> 45:04.660
可以用一个布尔来表示

45:05.460 --> 45:06.340
用什么

45:06.340 --> 45:06.820
什么表示

45:06.820 --> 45:08.020
处表示

45:08.980 --> 45:10.980
因为性别只有两种状态

45:10.980 --> 45:11.620
要么男

45:11.620 --> 45:12.180
要么女

45:12.180 --> 45:12.660
对不对

45:12.660 --> 45:12.900
好

45:12.900 --> 45:13.540
我们可以用

45:13.540 --> 45:14.500
表示男

45:14.500 --> 45:16.340
用fors表示女

45:16.820 --> 45:18.020
用fors表示女

45:18.020 --> 45:18.580
可以

45:18.580 --> 45:19.140
当然可以

45:19.140 --> 45:19.540
没问题

45:20.100 --> 45:21.860
当然也可以用制服刷来表示

45:21.860 --> 45:23.380
用制服刷来表示男或者是女

45:24.180 --> 45:25.780
比方说成哥这里对吧

45:25.780 --> 45:26.340
想了一想

45:26.340 --> 45:26.660
嗯

45:26.660 --> 45:28.500
成哥好像确实是男的对吧

45:28.500 --> 45:28.660
好

45:28.660 --> 45:29.140
我们就用

45:29.140 --> 45:30.260
来表示

45:30.820 --> 45:32.100
表示成哥的性别

45:32.740 --> 45:33.220
保存一下

45:35.220 --> 45:35.860
你看

45:35.860 --> 45:36.820
尖刀是不是出来了

45:37.700 --> 45:38.500
这就是对象

45:38.500 --> 45:38.900
看到没

45:39.380 --> 45:41.380
一个对象就是个数据的综合题

45:41.380 --> 45:42.980
它里边可以存出很多东西

45:43.860 --> 45:45.540
可以有各种各样的数据

45:45.540 --> 45:46.180
这些数据呢

45:46.180 --> 45:47.380
都是基本的一行组成的

45:47.860 --> 45:48.820
基本的一行组成的

45:49.940 --> 45:50.660
好

45:50.660 --> 45:52.740
除了有基本的一行组成之外呢

45:52.740 --> 45:54.340
还能不能有别的呢

45:54.340 --> 45:54.900
还可以

45:55.860 --> 45:56.740
再来一个数据

45:58.100 --> 45:58.820
成哥的

45:59.380 --> 46:00.420
家庭地址

46:01.220 --> 46:01.780
各位团伙

46:01.780 --> 46:03.140
小伙伴准备好了

46:03.140 --> 46:04.420
成哥的家庭地址

46:04.420 --> 46:04.980
而最实

46:05.940 --> 46:06.580
好

46:06.580 --> 46:07.460
第一只呢

46:07.460 --> 46:08.340
按理说

46:08.340 --> 46:09.700
是可以是一个什么

46:09.700 --> 46:10.500
可以是一个啥

46:10.900 --> 46:11.860
可以是一个

46:12.820 --> 46:13.620
制补创对吧

46:13.620 --> 46:14.500
可以是个制补创

46:14.500 --> 46:14.900
但是呢

46:14.900 --> 46:15.460
第一只呢

46:15.460 --> 46:15.940
也可以

46:16.820 --> 46:18.020
它有几个部分组成

46:18.740 --> 46:19.060
什么

46:19.540 --> 46:20.020
国家

46:20.740 --> 46:21.300
省份

46:21.940 --> 46:22.580
城市

46:22.900 --> 46:23.220
对吧

46:23.620 --> 46:25.300
国家省份城市

46:25.700 --> 46:26.180
然后呢

46:26.900 --> 46:27.300
区

46:27.700 --> 46:28.180
然后呢

46:28.180 --> 46:28.820
是什么

46:29.460 --> 46:30.820
还有什么街道号

46:30.820 --> 46:31.300
还有是

46:32.020 --> 46:32.420
几栋

46:32.420 --> 46:32.820
几单元

46:32.820 --> 46:34.100
哪个小区门派号对吧

46:34.260 --> 46:35.940
它可以有很多部分组成

46:36.500 --> 46:36.980
OK

46:36.980 --> 46:38.100
那么第一只这一块呢

46:38.100 --> 46:39.460
可以用制补创来表示

46:40.580 --> 46:42.660
是不是也可以用对象来表示

46:43.460 --> 46:43.780
对吧

46:44.340 --> 46:44.900
你看

46:44.900 --> 46:46.100
它可以成结构的

46:46.100 --> 46:46.740
你看到没有

46:46.740 --> 46:48.260
整个是一个数据的综合体

46:48.660 --> 46:49.700
这个数据综合体面

46:49.700 --> 46:50.980
融合了很多的数据

46:52.020 --> 46:53.140
融合了很多的数据

46:53.140 --> 46:54.740
有很多的数据内心在这里边

46:55.540 --> 46:56.820
他跟年龄我随便写一下

46:57.460 --> 46:58.020
没有这么大

46:58.020 --> 46:58.660
没有这么夸张

46:58.660 --> 47:00.260
成哥定多1008岁吧

47:01.300 --> 47:02.020
那么这里的

47:02.020 --> 47:02.660
第一只呢

47:03.380 --> 47:04.020
这个数据呢

47:04.020 --> 47:05.060
它又可以是个对象

47:05.860 --> 47:06.980
又可以是个对象

47:06.980 --> 47:09.140
就是这里面可以签讨很多的层次的

47:09.140 --> 47:10.660
可以签讨很多层次的

47:11.380 --> 47:13.220
那么这个对象里边是又可以写的

47:13.220 --> 47:14.340
地址的国家

47:14.340 --> 47:14.820
country

47:15.860 --> 47:16.580
什么呢

47:16.580 --> 47:17.540
中国对吧

47:17.540 --> 47:19.140
中国中华人民共和国

47:19.140 --> 47:20.500
然后地址的省份

47:20.500 --> 47:21.140
provincy

47:24.660 --> 47:25.620
哈尔滨是哪个省的

47:26.580 --> 47:27.540
哈尔滨是哪个省的

47:27.540 --> 47:28.100
兄弟们

47:28.900 --> 47:29.860
你们说我也听不见

47:30.260 --> 47:30.820
哈尔滨

47:31.780 --> 47:33.060
我那个田啊

47:33.620 --> 47:34.980
我的地理是黑龙江

47:34.980 --> 47:35.940
地理真的是差

47:37.460 --> 47:38.100
黑龙江

47:39.860 --> 47:40.500
黑龙江

47:41.300 --> 47:42.500
然后城市

47:42.500 --> 47:42.980
City

47:43.940 --> 47:44.900
哈尔滨

47:44.900 --> 47:45.940
哈尔滨

47:47.940 --> 47:48.740
你看

47:48.740 --> 47:49.700
你看这个东西

47:49.700 --> 47:51.300
是不是可以有对象组成

47:51.300 --> 47:51.700
对吧

47:51.700 --> 47:52.900
也可以是个对象

47:52.900 --> 47:54.900
它这个对象里边是不是又可以包含

47:54.900 --> 47:56.100
其他的东西了

47:56.100 --> 47:58.100
因为对象是可以不断的这样签讨

47:58.100 --> 48:00.100
签讨一个很深的结构

48:00.100 --> 48:01.380
很深的结构

48:01.380 --> 48:03.380
都是可以无限签讨下去

48:04.260 --> 48:05.060
比方说

48:05.060 --> 48:07.060
还有具体的柱子对吧

48:07.060 --> 48:07.700
具体的柱子

48:07.700 --> 48:09.220
addr

48:09.940 --> 48:10.500
具体的

48:10.500 --> 48:11.220
我的detail

48:12.660 --> 48:13.060
detail

48:15.060 --> 48:16.580
那我就随便写了

48:16.580 --> 48:17.540
那我就随便写了

48:18.180 --> 48:18.660
就是那

48:19.780 --> 48:20.420
那尬的

48:22.660 --> 48:24.770
尬的街

48:27.410 --> 48:27.810
11号

48:30.130 --> 48:30.530
好

48:30.530 --> 48:30.850
保存

48:31.570 --> 48:32.050
你看一下

48:32.050 --> 48:33.490
我们看一下这个对象结构

48:33.490 --> 48:34.610
放小一点

48:34.610 --> 48:35.970
整个是一个数据

48:35.970 --> 48:37.810
主要整个是一个数据

48:37.810 --> 48:38.690
但这个数据里边

48:38.690 --> 48:40.530
它就是有很多东西组成的

48:40.530 --> 48:41.410
你看

48:41.410 --> 48:43.010
有这些东西组成

48:43.010 --> 48:44.210
你看这个地址

48:44.210 --> 48:44.690
地址呢

48:44.690 --> 48:45.810
它又是一套东西组成

48:45.810 --> 48:46.930
它又是一个对象

48:46.930 --> 48:47.810
又展开

48:47.810 --> 48:48.450
看没

48:48.450 --> 48:49.090
又是个对象

48:49.970 --> 48:50.930
明白了吧

48:50.930 --> 48:51.810
明白吧

48:51.810 --> 48:53.730
这就是对象这个类型

48:54.370 --> 48:55.330
对象这个类型

48:57.570 --> 48:58.130
这结构呢

48:58.130 --> 48:59.170
可能稍微有点复杂的

48:59.170 --> 49:00.130
就是这一块了

49:00.210 --> 49:01.970
整理执行理解也不复杂

49:01.970 --> 49:03.490
我们这一块学习的是啥呢

49:03.490 --> 49:06.050
学习的是对象如何书写

49:06.050 --> 49:06.850
如何书写

49:06.850 --> 49:07.650
你看就这样书写

49:09.650 --> 49:09.890
好

49:09.890 --> 49:10.290
比方说

49:11.250 --> 49:11.890
比方说

49:11.890 --> 49:12.770
我们再来一个

49:12.770 --> 49:13.970
再来个属性

49:13.970 --> 49:14.530
girlfriend

49:15.490 --> 49:16.530
girlfriend

49:17.810 --> 49:18.130
friend

49:18.930 --> 49:20.050
这个属性的名字

49:20.050 --> 49:20.930
大家好好命名

49:21.890 --> 49:22.690
你不要写中文

49:22.690 --> 49:23.810
千万不要写中文

49:23.810 --> 49:24.850
用英文字母

49:24.850 --> 49:25.810
用英文字母

49:26.850 --> 49:27.410
最好了

49:27.410 --> 49:28.450
大小写的这样

49:28.450 --> 49:29.250
我们后边说到

49:29.330 --> 49:30.690
标志符的时候再说吧

49:30.690 --> 49:32.130
后边说标志符的时候再说

49:32.130 --> 49:33.250
我们现在先不管

49:33.250 --> 49:35.090
就把它命名命好一点

49:35.090 --> 49:35.330
好

49:35.330 --> 49:36.130
girlfriend

49:36.130 --> 49:36.770
我写对没有

49:37.810 --> 49:38.290
没有

49:38.930 --> 49:39.490
写对了的

49:40.450 --> 49:41.410
比方女朋友

49:41.410 --> 49:41.890
对吧

49:41.890 --> 49:42.930
登革的女朋友

49:42.930 --> 49:44.050
她对外宣称的是

49:44.050 --> 49:44.850
自己没有女朋友

49:44.850 --> 49:45.490
对不对

49:45.490 --> 49:45.650
好

49:45.650 --> 49:46.930
我们就按照她来吧

49:46.930 --> 49:48.290
就假设我们相信她

49:48.290 --> 49:49.090
没有女朋友

49:49.090 --> 49:49.730
那么OK

49:51.090 --> 49:52.450
那么这个女朋友这里呢

49:52.450 --> 49:53.890
我们是不是可以写空

49:53.890 --> 49:54.530
对不对

49:54.530 --> 49:54.770
好

49:54.770 --> 49:55.330
空这里呢

49:55.330 --> 49:56.450
我们可以写undefend的

49:57.090 --> 49:58.450
或者是写啥了

49:58.530 --> 49:59.650
或者是写啥了

49:59.650 --> 50:00.770
或者是写nau

50:00.770 --> 50:01.410
对不对

50:01.410 --> 50:02.850
写nau是不是都可以

50:02.850 --> 50:03.250
对不对

50:03.250 --> 50:03.650
都可以

50:04.690 --> 50:05.970
我们这里写undefend的吧

50:05.970 --> 50:06.610
undefend

50:07.970 --> 50:09.010
注意看格式

50:09.010 --> 50:10.690
要知道怎么去书写对象格式

50:11.730 --> 50:12.450
保存一下

50:12.450 --> 50:13.330
咱们来看一下这里

50:14.130 --> 50:15.490
girlfriend的数据也有了

50:16.130 --> 50:17.090
这就是对象

50:17.090 --> 50:19.170
它可以组合很多基本内形

50:19.170 --> 50:21.170
甚至可以在组合里面加对象内形

50:21.170 --> 50:23.010
再进行更深层次的浅套

50:23.010 --> 50:24.610
那么来表达一个

50:24.610 --> 50:26.770
信息非常非常丰富的内形

50:26.770 --> 50:27.890
那么你想一想

50:27.970 --> 50:29.330
有了对象这个东西

50:29.330 --> 50:31.330
是不是理论上我们就可以表达

50:31.330 --> 50:32.850
整个世界的所有东西了

50:33.570 --> 50:34.450
对吧

50:34.450 --> 50:37.170
整个世界的所有东西都可以表达了

50:37.170 --> 50:37.730
对不对

50:37.730 --> 50:37.890
好

50:37.890 --> 50:39.010
咱们再来一个

50:39.010 --> 50:41.250
我们这就可能主要练习的是对象

50:41.250 --> 50:43.010
你知道对象怎么表达了过后呢

50:43.010 --> 50:43.650
你就知道了

50:44.770 --> 50:46.450
你就知道了就是咱们

50:47.650 --> 50:49.490
很多基本内想该如何表达

50:50.290 --> 50:51.410
比方说我们这里直接输出

50:53.010 --> 50:54.450
比方说我这个电脑

50:54.450 --> 50:55.570
我这个电脑

50:55.570 --> 50:56.610
买把输出

50:56.610 --> 50:57.570
输出我的电脑

50:57.650 --> 50:58.690
我的电脑肯定是个对象

50:58.690 --> 50:59.570
它不能是制服串吧

50:59.570 --> 51:00.850
我的电脑不能是一个制服串吧

51:01.410 --> 51:02.690
也不能是一个什么

51:02.690 --> 51:03.730
杜尔吧

51:03.730 --> 51:05.250
也不能是一个就是数字吧

51:05.890 --> 51:07.090
它只能是一个对象

51:07.090 --> 51:08.450
它只能是一个对象

51:08.450 --> 51:08.770
好

51:08.770 --> 51:10.850
我们把那个电脑的型号

51:10.850 --> 51:11.570
型号

51:12.610 --> 51:12.930
哎呀

51:12.930 --> 51:13.970
我天呐型号

51:13.970 --> 51:15.010
型号的单词咋写

51:16.770 --> 51:17.650
翻译

51:17.650 --> 51:18.050
翻译一下

51:19.650 --> 51:19.890
来

51:19.890 --> 51:20.450
王秘书

51:20.450 --> 51:21.650
给我翻译一下

51:21.650 --> 51:22.450
型号的单词

51:23.410 --> 51:23.810
型号

51:26.180 --> 51:26.740
mode

51:27.860 --> 51:28.740
说完了吧

51:28.740 --> 51:29.940
Type吧

51:29.940 --> 51:31.460
Type都稍微好一点

51:31.460 --> 51:31.860
内型

51:33.700 --> 51:34.820
内型的话是什么

51:34.820 --> 51:35.540
一个制服串

51:35.540 --> 51:36.260
笔记本

51:36.660 --> 51:37.140
笔记本

51:38.100 --> 51:38.820
好

51:38.820 --> 51:39.700
然后是

51:42.500 --> 51:43.620
连份

51:43.620 --> 51:44.500
连份

51:44.500 --> 51:47.380
就是出厂的连份

51:48.180 --> 51:48.900
product

51:50.900 --> 51:51.220
year

51:52.100 --> 51:53.380
出厂的连份

51:53.380 --> 51:54.500
好出厂的连份

51:54.500 --> 51:54.980
这里呢

51:55.940 --> 51:57.060
这里有点特殊

51:57.060 --> 51:57.860
虽然连份

51:57.860 --> 51:58.580
按理说

51:58.740 --> 51:59.940
按理说

51:59.940 --> 52:00.580
是一个

52:01.380 --> 52:01.940
制服串

52:01.940 --> 52:03.700
因为它读的是比方说2000年

52:03.700 --> 52:04.340
读的是

52:04.340 --> 52:05.860
读的是2000年

52:05.860 --> 52:06.340
对吧

52:06.340 --> 52:06.900
但是呢

52:06.900 --> 52:08.660
我们也可以读成2000

52:08.660 --> 52:08.980
对不对

52:08.980 --> 52:09.940
也可以读成2000

52:11.140 --> 52:12.420
比方说1998年

52:12.420 --> 52:13.620
就是1998年

52:14.340 --> 52:15.940
其实也可以这样读的啊

52:15.940 --> 52:16.820
连份这一块呢

52:16.820 --> 52:18.580
我们习惯上的还是使用数字

52:18.580 --> 52:19.860
这一块比较特殊啊

52:19.860 --> 52:21.140
这一块比较特殊

52:21.140 --> 52:21.620
连份呢

52:21.620 --> 52:23.780
我这个笔记本的连份是19

52:23.780 --> 52:25.620
2018年

52:25.620 --> 52:26.420
2018年

52:26.740 --> 52:28.660
生产厂上呢

52:28.660 --> 52:29.380
就是

52:29.380 --> 52:29.700
就是

52:29.700 --> 52:30.500
corporation

52:32.260 --> 52:33.140
corporation

52:33.140 --> 52:33.940
corporation 咋写的

52:34.740 --> 52:35.220
公司

52:35.220 --> 52:35.700
我好

52:35.700 --> 52:36.660
我连公司都写不来了

52:36.660 --> 52:37.220
我的天呐

52:38.580 --> 52:39.220
company

52:40.500 --> 52:41.540
corporation好一点吧

52:42.580 --> 52:43.220
corporation

52:45.490 --> 52:45.730
好

52:45.730 --> 52:46.370
corporation

52:47.410 --> 52:48.370
公司呢

52:48.370 --> 52:49.650
是小米

52:50.290 --> 52:50.690
小米

52:51.570 --> 52:51.890
好

52:51.890 --> 52:52.610
然后呢

52:52.610 --> 52:53.970
笔记本的就是

52:53.970 --> 52:54.850
CPU呢

52:55.570 --> 52:56.290
CPU呢

52:58.690 --> 52:59.970
然后它也是个对象

52:59.970 --> 53:01.250
CPU也是个对象

53:01.250 --> 53:02.210
这个CPU呢

53:02.210 --> 53:03.090
赫兹啊

53:03.090 --> 53:04.370
赫兹是

53:05.010 --> 53:05.730
我又忘了啊

53:05.730 --> 53:06.850
我也不知道我多少赫兹

53:07.650 --> 53:08.130
我看一下

53:08.930 --> 53:09.970
CPU是

53:12.530 --> 53:14.450
2G赫兹啊

53:14.450 --> 53:16.450
2G赫兹

53:16.450 --> 53:18.210
这是CPU

53:18.210 --> 53:18.930
然后呢

53:18.930 --> 53:20.290
CPU还有啥呢

53:20.290 --> 53:21.010
还有就是

53:21.650 --> 53:23.970
CPU的处理器的内行是intel

53:23.970 --> 53:24.770
对吧

53:24.770 --> 53:25.810
内行是intel

53:25.810 --> 53:27.010
就是这个意思啊

53:27.090 --> 53:28.530
你听了我的意思就行了啊

53:28.530 --> 53:29.490
我就讲了半天

53:29.490 --> 53:30.770
听了我这个意思就行了啊

53:31.330 --> 53:32.050
那么现在呢

53:32.050 --> 53:34.130
就是是否一停产啊

53:35.730 --> 53:39.010
is stop sale

53:39.810 --> 53:41.890
是否停滞销售了这个笔记本啊

53:41.890 --> 53:42.610
是否停滞销售

53:42.610 --> 53:43.730
那么那么这里应该填啥

53:44.290 --> 53:47.250
是否停滞销售

53:48.450 --> 53:50.530
就这个笔记本是不是停产了

53:50.530 --> 53:52.210
那么这里是应该填什么内行

53:53.170 --> 53:54.690
是否应该填什么内行

53:54.690 --> 53:55.490
是布尔

53:55.490 --> 53:56.450
ok嘛

53:56.450 --> 53:57.250
force啊

53:57.250 --> 53:58.930
正在还在还在销售中

53:58.930 --> 53:59.730
还在生产

53:59.730 --> 54:00.210
你看

54:00.210 --> 54:02.530
我们就用对象的方式来描述了一个

54:03.410 --> 54:04.690
描述了一个信息

54:04.690 --> 54:06.130
描述了一个笔记本的信息

54:06.850 --> 54:08.130
你把这个东西学会了

54:08.930 --> 54:09.810
你就会发现

54:09.810 --> 54:10.450
这个世界上

54:11.090 --> 54:12.370
几乎所有的事情

54:12.930 --> 54:14.450
都可以在程序里面反映了

54:14.450 --> 54:15.730
你看是不是很巧妙

54:15.730 --> 54:17.890
程序里面不需要给你做那么多内行

54:17.890 --> 54:18.850
做几个基本内行

54:18.850 --> 54:20.690
然后让你用对象来进行组合

54:20.690 --> 54:21.970
就可以表达任何东西了

54:23.170 --> 54:23.650
好

54:23.730 --> 54:24.850
这是关于对象

54:24.850 --> 54:25.650
对象这一块

54:27.090 --> 54:28.450
那么这里我们就讲了

54:28.450 --> 54:30.050
GS里边的数据内行

54:30.050 --> 54:31.330
数据内行又哪些

54:32.050 --> 54:32.930
再回归一下

54:32.930 --> 54:35.090
很重要很核心的知识

54:35.090 --> 54:35.810
一个是数字

54:35.810 --> 54:36.770
直接书写就完事了

54:37.330 --> 54:38.210
一个是字幕创造器

54:38.210 --> 54:39.090
加上单一号

54:39.090 --> 54:40.290
双一号或者是这个漂

54:41.010 --> 54:42.130
布尔内行的直接书写

54:42.130 --> 54:43.650
true或者是force

54:43.650 --> 54:45.570
on define内行的直接书写on define

54:45.570 --> 54:46.930
它只有这种表示方式

54:46.930 --> 54:48.530
nau内行的平时不怎么用

54:49.010 --> 54:49.970
那么直接书写nau

54:51.170 --> 54:51.410
好

54:51.970 --> 54:52.770
就关于这一块

54:53.330 --> 54:53.570
好

54:53.570 --> 54:53.890
接下来

54:53.890 --> 54:54.930
那我们来看一下那个

54:57.490 --> 54:58.050
折起来

54:59.490 --> 55:03.810
GS里边打印数据的内行

55:05.010 --> 55:06.450
就是你现在有一个数据

55:06.450 --> 55:08.370
我要知道它是一个什么内行

55:08.370 --> 55:09.810
把内行打印出来

55:10.290 --> 55:11.730
打印数据的内行

55:11.730 --> 55:12.450
该怎么来打印

55:13.650 --> 55:15.090
打印的方式很简单

55:15.650 --> 55:16.530
在数据

55:19.100 --> 55:20.220
应该说不是打印吧

55:20.220 --> 55:22.060
应该说得到数据的内行

55:22.060 --> 55:23.020
在数据前

55:23.820 --> 55:25.580
加上Type

55:26.220 --> 55:27.820
加上Type就完事了

55:27.820 --> 55:28.460
非常简单

55:28.460 --> 55:29.260
咱们来看一个例子

55:30.140 --> 55:31.020
test 7

55:33.980 --> 55:34.460
test 8

55:35.900 --> 55:36.700
比方说一个页面

55:37.260 --> 55:38.540
这个页面我们这里

55:38.540 --> 55:39.100
script

55:40.860 --> 55:41.500
这里呢

55:41.500 --> 55:43.260
我们输出啥呢

55:43.820 --> 55:45.900
输出的不是一个数字

55:45.900 --> 55:47.180
我要输出这个东西

55:47.180 --> 55:48.380
这个我写的这个数据

55:48.380 --> 55:49.740
它是一个什么内行的

55:50.300 --> 55:52.620
我想得到它是一个什么内行的数据

55:53.020 --> 55:54.620
好在这个数据前边

55:55.580 --> 55:56.620
加上一个Type

55:57.020 --> 55:57.660
就这么简单

55:58.780 --> 56:00.460
在这个数据前边加上个Type

56:00.780 --> 56:03.260
就表示得到这个数据的内行

56:03.260 --> 56:04.060
后面写数据

56:04.460 --> 56:06.540
写数据得到这个数据的内行

56:06.540 --> 56:08.140
把这个内行的直接输出

56:08.140 --> 56:09.260
直接输出

56:09.260 --> 56:09.900
看一下结果

56:10.460 --> 56:11.020
看一下结果

56:13.580 --> 56:14.380
这里要运行出来

56:16.220 --> 56:16.780
f12

56:17.420 --> 56:18.060
所以刷新一次

56:18.620 --> 56:20.380
好你看打印出来是什么

56:20.380 --> 56:21.180
是不是number

56:21.180 --> 56:21.820
对不对

56:21.820 --> 56:22.220
number

56:22.700 --> 56:23.180
对吧

56:23.180 --> 56:24.380
它是数字内行吧

56:24.380 --> 56:25.020
对不对

56:25.020 --> 56:26.620
好咱们再来看一下

56:26.620 --> 56:27.420
再来看一下

56:28.060 --> 56:29.900
我们如果在这个12前面

56:29.900 --> 56:30.540
加上一个双硬

56:31.340 --> 56:32.780
保存打印出来是啥呢

56:33.660 --> 56:34.300
看一下

56:34.300 --> 56:35.180
是不是stream

56:35.180 --> 56:35.740
对不对

56:35.740 --> 56:36.540
stream

56:36.540 --> 56:37.500
表示制不错的一行

56:38.060 --> 56:38.540
好

56:38.540 --> 56:40.060
然后咱们再看一下

56:40.060 --> 56:41.020
这里我们写个q

56:41.580 --> 56:42.540
打印出来是啥呢

56:43.420 --> 56:44.540
打印出来是不独立

56:44.540 --> 56:45.100
对吧

56:45.100 --> 56:45.980
我们之前说过

56:45.980 --> 56:46.780
布尔内行

56:46.780 --> 56:47.980
它的内行是独立

56:47.980 --> 56:50.620
得到这个数据的内行名称

56:50.620 --> 56:51.260
这个Type

56:52.300 --> 56:53.580
它可以起这么个作用

56:53.580 --> 56:55.420
得到这个数据的内行名称

56:55.420 --> 56:55.820
好

56:55.820 --> 56:56.860
比方说在这里

56:56.860 --> 56:58.860
我们再写一个undefend

56:58.860 --> 56:59.580
undefend

56:59.580 --> 57:00.540
保存看一下

57:01.260 --> 57:01.820
是吧

57:01.820 --> 57:02.700
得到内行

57:02.700 --> 57:03.820
内行是undefend

57:03.820 --> 57:04.780
undefend

57:05.340 --> 57:05.580
好

57:05.580 --> 57:06.860
接下来我们再看一下

57:06.860 --> 57:07.580
再看一下

57:08.380 --> 57:09.020
nau呢

57:10.220 --> 57:10.860
看一下nau

57:11.660 --> 57:12.060
保存

57:13.660 --> 57:14.780
得到的是objects

57:15.500 --> 57:16.380
objects是啥

57:17.020 --> 57:18.060
之前说了

57:18.060 --> 57:18.860
objects是啥

57:19.580 --> 57:20.220
是不是对象

57:20.780 --> 57:21.420
对不对

57:21.420 --> 57:21.900
对象

57:22.380 --> 57:23.660
那么这是什么回事呢

57:24.060 --> 57:25.260
这就是因为

57:25.260 --> 57:26.540
就是因为这个nau

57:26.540 --> 57:27.260
我们之前说过

57:28.380 --> 57:29.580
就是branded-h

57:31.740 --> 57:33.660
它在开发这个介式程序

57:33.660 --> 57:35.020
介式这个语言的时候呢

57:35.580 --> 57:37.740
它是直接把这个nau是哪来的呢

57:37.740 --> 57:39.340
是面向对象语言里面的东西

57:39.340 --> 57:40.380
它直接扔过来了

57:40.380 --> 57:41.900
所以说它把这个nau

57:41.900 --> 57:43.100
归到对象这一块了

57:43.820 --> 57:45.500
因此这一块就有其意了

57:45.500 --> 57:46.300
就有其意了

57:46.860 --> 57:47.740
在不同的

57:48.700 --> 57:49.980
就是一些教程里面

57:49.980 --> 57:51.660
把nau归到什么

57:51.740 --> 57:52.860
归到对象的类型

57:53.500 --> 57:54.460
有些书籍呢

57:54.460 --> 57:56.140
nau又是成为单独的类型

57:56.860 --> 57:57.420
但是呢

57:57.420 --> 57:58.380
我们这里呢

57:58.380 --> 57:59.500
讲的讲法

57:59.500 --> 58:00.620
其实不用去纠结

58:00.620 --> 58:01.420
不用去纠结

58:01.980 --> 58:02.540
因为这里呢

58:02.540 --> 58:03.500
本身就是一个缺陷

58:03.500 --> 58:04.140
有个问题

58:04.140 --> 58:05.260
本身就有问题的

58:05.260 --> 58:06.060
这个nau的类型

58:06.060 --> 58:07.580
本来就不应该存在的

58:07.580 --> 58:08.700
因为有了NG犯的

58:08.700 --> 58:09.580
nau就重复了

58:09.980 --> 58:11.340
那么我们这里不用去纠结

58:11.340 --> 58:11.820
我们这里呢

58:11.820 --> 58:12.540
就把它归到

58:13.740 --> 58:14.780
特殊的一个类型

58:14.780 --> 58:15.820
nau类型

58:15.820 --> 58:16.300
只不过呢

58:16.300 --> 58:17.020
你得到了

58:17.020 --> 58:18.780
用Typev这个运算符呢

58:20.060 --> 58:21.580
用Typev这个东西

58:21.580 --> 58:23.180
来得到这个nau的类型的时候

58:23.180 --> 58:24.300
得到的是Object车

58:24.300 --> 58:25.340
你可以认为它是个bug

58:26.140 --> 58:27.340
可以认为它是个bug

58:27.340 --> 58:28.140
虽然它是不是bug

58:28.140 --> 58:28.940
它就是bug

58:28.940 --> 58:30.140
它就是bug

58:30.140 --> 58:31.740
nau本来就应该是一个单独的类型

58:33.340 --> 58:34.860
我们这里不用去太过纠结

58:34.860 --> 58:35.900
只需要你知道

58:35.900 --> 58:36.860
你一定要知道

58:36.860 --> 58:38.220
但是这一点一定要知道

58:38.220 --> 58:40.220
在介石里面得到了nau的类型呢

58:40.220 --> 58:41.340
是Object车

58:41.340 --> 58:42.460
因为这个nau的这个东西呢

58:42.460 --> 58:43.340
本来就是来自于

58:43.340 --> 58:44.860
面向对象里面的东西

58:44.860 --> 58:45.340
表示空

58:45.340 --> 58:45.900
没有

58:45.900 --> 58:46.300
没有

58:48.220 --> 58:49.500
nau是Object车

58:49.500 --> 58:50.860
它并不会得到nau的类型

58:52.060 --> 58:53.020
那么再来

58:53.020 --> 58:54.540
再来Consolog

58:54.540 --> 58:56.220
我们这里

58:56.220 --> 58:57.340
把一个对象拿过来

58:57.340 --> 58:58.780
一个对象拿过来

58:58.780 --> 59:00.140
这里我们把整个对象拿过来

59:01.900 --> 59:03.900
看一下对象是什么类型

59:03.900 --> 59:05.340
Typev这里一个对象

59:05.340 --> 59:06.220
放一个对象

59:06.220 --> 59:08.620
看一下对象整个对象是什么类型

59:08.620 --> 59:10.220
看一下它又答应出什么结果

59:12.060 --> 59:13.180
你看是不是也是Object车

59:14.060 --> 59:15.980
总之我们可以通过这个Typev

59:15.980 --> 59:17.260
来得到一个对象的类型

59:17.980 --> 59:19.100
这里我们记一笔

59:19.100 --> 59:20.220
主要是说一下那个nau

59:21.740 --> 59:23.660
js的bug

59:24.300 --> 59:25.820
但是现在都不叫bug了

59:25.820 --> 59:27.100
我们现在说js的bug

59:27.100 --> 59:28.380
应该说什么特征

59:29.340 --> 59:30.620
因为它也不打算修复了

59:30.620 --> 59:31.580
所以说它就不叫bug了

59:32.460 --> 59:33.100
Typev

59:34.140 --> 59:34.540
nau

59:35.660 --> 59:37.980
得到的是Object车

59:37.980 --> 59:39.260
得到的是Object车

59:39.260 --> 59:40.700
不用去管

59:40.700 --> 59:42.060
这里不用去生纠

59:42.060 --> 59:43.180
但是你一定要知道

59:43.180 --> 59:44.940
Typevnau得到的是Object车

59:44.940 --> 59:45.580
至于nau

59:45.580 --> 59:47.100
它应该归到的Object车

59:47.100 --> 59:48.860
还是应该独立成为类型

59:49.420 --> 59:50.140
是有争议的

59:50.140 --> 59:51.020
但是没有什么意义

59:51.100 --> 59:52.540
争议这个东西没有什么意义

59:52.540 --> 59:53.420
没有什么意义

59:53.420 --> 59:54.620
但是你要知道

59:54.620 --> 59:57.180
Typevnau得到的是Object车

59:57.180 --> 59:57.660
就行了

59:58.460 --> 59:59.340
说明确了吧

59:59.340 --> 01:00:01.740
因为这里本来就是js设计上的缺陷

01:00:02.940 --> 01:00:05.900
得到Typev这个东西

01:00:05.900 --> 01:00:07.420
它可以得到数据的类型

01:00:08.460 --> 01:00:09.740
OK 咱们这一句话就讲完了

01:00:10.620 --> 01:00:11.660
这句话最重要的是什么呢

01:00:12.540 --> 01:00:15.420
但你认识的这个js里边有哪些类型

01:00:16.380 --> 01:00:18.060
现在就剩下一个类型没学习了

01:00:18.060 --> 01:00:19.100
对吧 就是韩束

01:00:19.100 --> 01:00:20.540
韩束后续将军装扁来讲

01:00:20.620 --> 01:00:21.100
现在别管

01:00:22.460 --> 01:00:23.500
现在就剩下这个没学习了

01:00:23.500 --> 01:00:25.660
其他类型我们都知道如何来进行书写了

01:00:26.300 --> 01:00:27.980
我们在我们这节课里边

01:00:27.980 --> 01:00:30.140
一会发现我们这里都是书写的数据

01:00:30.140 --> 01:00:30.700
对吧

01:00:30.700 --> 01:00:33.260
我们的数据不管是什么类型

01:00:33.260 --> 01:00:34.700
数字类型也好

01:00:34.700 --> 01:00:36.380
制服创类型也好

01:00:36.380 --> 01:00:37.340
布尔类型也好

01:00:37.340 --> 01:00:38.780
undefinenau也好

01:00:38.780 --> 01:00:41.260
还有就是对象类型也好

01:00:41.260 --> 01:00:43.100
都是直接书写的数据

01:00:43.740 --> 01:00:46.380
这里有一个数语大家记一下

01:00:49.040 --> 01:00:49.360
就是

01:00:52.880 --> 01:00:53.440
字面量

01:00:54.800 --> 01:00:55.280
字面量

01:00:56.480 --> 01:00:57.680
什么叫字面量呢

01:01:00.560 --> 01:01:03.760
直接书写的具体的数据

01:01:04.800 --> 01:01:06.080
叫做字面量

01:01:06.800 --> 01:01:08.000
叫做字面量

01:01:08.000 --> 01:01:08.800
很重要的概念

01:01:08.800 --> 01:01:11.440
我们后面会反复的提到这个字面量

01:01:11.440 --> 01:01:12.080
字面量

01:01:12.080 --> 01:01:14.000
那么以后我到时候说字面量的时候

01:01:14.000 --> 01:01:14.960
你要知道是什么意思

01:01:15.840 --> 01:01:16.320
比方说

01:01:17.600 --> 01:01:19.440
我这个地方是直接书写的数字吧

01:01:20.400 --> 01:01:22.400
我把它叫做数字字面量

01:01:23.760 --> 01:01:26.080
这个地方我们是直接书写的制服创吧

01:01:26.800 --> 01:01:28.720
我把它叫做制服创字面量

01:01:29.360 --> 01:01:31.280
这个地方直接书写的布尔吧

01:01:31.280 --> 01:01:32.320
布尔字面量

01:01:32.800 --> 01:01:34.000
这个地方书写的undefine

01:01:34.000 --> 01:01:35.840
这个东西没什么好说的

01:01:35.840 --> 01:01:36.880
它只能是字面量

01:01:36.880 --> 01:01:37.600
还能是啥呢

01:01:37.600 --> 01:01:38.960
不一定的

01:01:38.960 --> 01:01:40.240
它有可能不是字面量

01:01:40.240 --> 01:01:42.320
但是字面量的书写的只有一种方式

01:01:42.320 --> 01:01:44.000
就是undefinenau和lau

01:01:44.720 --> 01:01:46.880
这就是undefine的字面量和lau字面量

01:01:47.600 --> 01:01:48.720
那么这里呢

01:01:48.720 --> 01:01:49.840
制服创字面量

01:01:49.840 --> 01:01:50.320
对吧

01:01:50.320 --> 01:01:51.040
这里呢

01:01:51.040 --> 01:01:52.400
对象字面量

01:01:53.120 --> 01:01:54.560
对象字面量

01:01:54.560 --> 01:01:55.520
这种书写方式呢

01:01:55.520 --> 01:01:57.040
叫做对象字面量

01:01:57.040 --> 01:01:59.440
这也是对象字面量

01:02:00.400 --> 01:02:02.640
这里也是对象字面量

01:02:03.360 --> 01:02:04.640
这是一种说法

01:02:04.640 --> 01:02:05.440
这种说法呢

01:02:05.440 --> 01:02:06.400
以后我说到了

01:02:06.400 --> 01:02:07.440
也要知道是什么意思

01:02:07.920 --> 01:02:09.360
那也就是告诉我们什么呢

01:02:10.080 --> 01:02:10.960
数据呢

01:02:10.960 --> 01:02:12.480
它不一定是字面量

01:02:12.480 --> 01:02:14.320
它还可能是别的东西

01:02:14.320 --> 01:02:16.160
那还有可能是什么别的东西呢

01:02:16.240 --> 01:02:18.160
我们后边学习了你就知道了

01:02:18.160 --> 01:02:19.280
现在你不知道没关系

01:02:19.280 --> 01:02:20.560
但是我们这几课呢

01:02:20.560 --> 01:02:21.520
学习的是啥

01:02:21.520 --> 01:02:23.120
学习的是不同的数据

01:02:24.960 --> 01:02:26.080
本节课

01:02:26.080 --> 01:02:27.200
学习的是

01:02:28.560 --> 01:02:29.360
不同的

01:02:29.920 --> 01:02:31.600
不同类型的数据

01:02:32.400 --> 01:02:35.360
的字面量表示法

01:02:36.000 --> 01:02:38.320
它的字面量该怎么来写

01:02:38.320 --> 01:02:39.920
制服创加双引号对吧

01:02:39.920 --> 01:02:40.960
书写了直接书写

01:02:40.960 --> 01:02:42.480
这些都是字面量表示法

01:02:42.480 --> 01:02:43.200
你要知道该怎么写

01:02:44.240 --> 01:02:44.480
好

01:02:44.480 --> 01:02:45.280
接下来作业

01:02:45.760 --> 01:02:46.800
这个作业不讲简

01:02:46.800 --> 01:02:47.680
这个作业很简单

01:02:49.280 --> 01:02:49.360
好

01:02:49.360 --> 01:02:50.080
作业做什么呢

01:02:52.800 --> 01:02:57.200
将自己作为一个对象

01:02:57.920 --> 01:02:59.520
就是你把你自己做一个对象

01:02:59.520 --> 01:03:00.400
你有姓名吧

01:03:00.400 --> 01:03:01.680
你有年龄身高体重

01:03:01.680 --> 01:03:02.800
各种各样的信息吧

01:03:02.800 --> 01:03:03.520
对吧

01:03:03.520 --> 01:03:04.560
你的父亲母亲

01:03:04.560 --> 01:03:04.800
对吧

01:03:05.760 --> 01:03:06.480
你的同学

01:03:07.040 --> 01:03:07.680
你喜欢的人

01:03:07.680 --> 01:03:08.480
你安定了对象

01:03:08.480 --> 01:03:08.800
对吧

01:03:09.360 --> 01:03:09.840
这些东西

01:03:10.320 --> 01:03:12.320
都是你的整个对象里边的信息

01:03:13.280 --> 01:03:15.440
把将自己作为一个对象

01:03:16.560 --> 01:03:17.200
书写

01:03:17.760 --> 01:03:18.480
合适的

01:03:19.520 --> 01:03:20.320
对象内容

01:03:20.800 --> 01:03:21.600
什么叫对象内容

01:03:21.600 --> 01:03:22.400
就这里边的东西

01:03:23.600 --> 01:03:24.320
就这里边的东西

01:03:24.320 --> 01:03:25.200
就对象内容

01:03:25.200 --> 01:03:25.520
好

01:03:25.520 --> 01:03:26.400
咱们这里说一下

01:03:27.200 --> 01:03:27.760
到时候

01:03:27.760 --> 01:03:29.200
刚才还忘了再介绍一个东西

01:03:29.680 --> 01:03:30.720
对象里这一块

01:03:30.720 --> 01:03:32.000
我补充一下

01:03:32.560 --> 01:03:34.480
对象这一块还忘了介绍一个东西

01:03:35.040 --> 01:03:36.080
就是对象里边

01:03:36.560 --> 01:03:37.840
有个东西叫做属性

01:03:39.600 --> 01:03:40.560
叫做属性

01:03:41.520 --> 01:03:42.320
属性是什么呢

01:03:43.840 --> 01:03:45.120
属性就是对象这些东西

01:03:45.520 --> 01:03:47.280
就像CSS属性一样对吧

01:03:47.280 --> 01:03:48.720
属性名和属性值

01:03:48.720 --> 01:03:50.000
属性名和属性值

01:03:51.120 --> 01:03:52.320
属性表示什么意思呢

01:03:52.320 --> 01:03:53.680
表示对象的

01:03:54.480 --> 01:03:56.480
对象的成员

01:03:57.360 --> 01:03:57.840
成员

01:03:59.280 --> 01:03:59.920
就这些东西

01:04:00.480 --> 01:04:01.840
这些东西都是对象的成员

01:04:01.840 --> 01:04:03.200
一个就是对象的成员

01:04:03.200 --> 01:04:04.400
这个就是对象的成员

01:04:04.400 --> 01:04:05.200
三个成员

01:04:05.200 --> 01:04:05.840
四个成员

01:04:06.560 --> 01:04:07.440
五个成员

01:04:07.440 --> 01:04:08.880
而这个第五个成员里边呢

01:04:08.880 --> 01:04:09.760
它又是个对象

01:04:09.840 --> 01:04:10.960
它里边也有成员

01:04:10.960 --> 01:04:11.600
第一个成员

01:04:11.600 --> 01:04:12.080
第二个成员

01:04:12.080 --> 01:04:12.560
第三个

01:04:12.560 --> 01:04:13.120
第四个

01:04:13.120 --> 01:04:13.680
对吧

01:04:13.680 --> 01:04:14.480
能明白了

01:04:14.480 --> 01:04:16.080
这是对象的成员

01:04:16.080 --> 01:04:17.280
属性就表示这个意思

01:04:17.280 --> 01:04:18.880
那么我们以后就会这样子说

01:04:18.880 --> 01:04:20.880
得到这个对象的Name属性

01:04:20.880 --> 01:04:22.880
得到这个对象的Name属性

01:04:22.880 --> 01:04:24.800
得到这个对象的A级属性

01:04:24.800 --> 01:04:25.840
要知道我什么意思

01:04:26.800 --> 01:04:27.920
这是属性的名

01:04:27.920 --> 01:04:29.280
这是属性的值

01:04:29.280 --> 01:04:29.840
值是什么

01:04:29.840 --> 01:04:30.800
值就是数据

01:04:30.800 --> 01:04:32.960
就值就是保存的数据

01:04:32.960 --> 01:04:34.160
名称的是找数据的

01:04:34.160 --> 01:04:35.280
用于来找数据的

01:04:36.560 --> 01:04:37.040
这就是

01:04:38.000 --> 01:04:40.320
数写合适的对象属性

01:04:41.600 --> 01:04:42.960
当然有可能这些属性

01:04:42.960 --> 01:04:43.760
又是个对象

01:04:43.760 --> 01:04:44.960
你自己去构建

01:04:44.960 --> 01:04:47.600
然后输出该对象

01:04:48.560 --> 01:04:49.520
输出该对象

01:04:50.800 --> 01:04:51.520
就是说

01:04:51.520 --> 01:04:52.960
作业很简单

01:04:53.680 --> 01:04:54.960
我这里不是写的成歌吗

01:04:54.960 --> 01:04:55.360
对吧

01:04:55.360 --> 01:04:56.960
你们把它换成你自己

01:04:56.960 --> 01:04:58.160
换成你自己

01:04:58.160 --> 01:04:59.600
写一个合适的对象出来

01:04:59.600 --> 01:05:01.120
当然你可以写更多的信息

01:05:01.120 --> 01:05:02.160
越多越好

01:05:02.160 --> 01:05:04.240
练习一下对象该如何输写

01:05:04.240 --> 01:05:06.000
因为你在练习对象的时候

01:05:06.160 --> 01:05:07.840
你实际上就练习到啥了

01:05:07.840 --> 01:05:10.640
就练习了这些基本的写法了

01:05:10.640 --> 01:05:11.680
就这些写法了

01:05:11.680 --> 01:05:13.040
这都支不错

01:05:13.040 --> 01:05:15.520
什么数字

01:05:15.520 --> 01:05:16.560
布尔

01:05:16.560 --> 01:05:17.120
安迪凡

01:05:17.120 --> 01:05:18.640
这些都可以练习到了

01:05:18.640 --> 01:05:19.920
去练习一下

01:05:19.920 --> 01:05:20.720
一定要练习

01:05:20.720 --> 01:05:21.600
一定要练习

01:05:21.600 --> 01:05:22.960
练习完过后看一下

01:05:22.960 --> 01:05:24.880
浏览器里边运行的结果

01:05:24.880 --> 01:05:25.680
好吧

01:05:25.680 --> 01:05:26.240
好

01:05:26.240 --> 01:05:27.440
这是我们这节课的知识

01:05:27.440 --> 01:05:28.320
非常重要

01:05:28.320 --> 01:05:29.840
这节课一定要学懂了之后

01:05:29.840 --> 01:05:30.640
采访后边看

01:05:30.640 --> 01:05:31.280
好吧

01:05:31.280 --> 01:05:32.880
这是数据和数据内想

