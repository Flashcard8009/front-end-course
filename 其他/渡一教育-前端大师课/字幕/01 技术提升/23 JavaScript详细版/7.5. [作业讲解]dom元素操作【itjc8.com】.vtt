WEBVTT

00:00.000 --> 00:15.210
来讲一讲这套题

00:15.210 --> 00:17.810
这一题其实虽然说

00:17.810 --> 00:18.810
你学到后边的话

00:18.810 --> 00:21.310
再回过头来看的话就非常简单

00:21.310 --> 00:22.210
但是一开始的话

00:22.210 --> 00:24.210
可能还是有点难度的

00:24.210 --> 00:25.010
咱们来一下吧

00:25.010 --> 00:25.810
来做一下

00:25.810 --> 00:27.410
都是很有代表性的题

00:27.410 --> 00:28.210
首先第一题

00:28.210 --> 00:29.010
这个网页

00:29.010 --> 00:30.810
删除列表

00:30.810 --> 00:32.210
第一题有坑

00:32.210 --> 00:34.410
有坑我好好讲一下

00:34.410 --> 00:35.810
首先是清空按钮

00:35.810 --> 00:37.410
清空按钮这个很简单

00:37.410 --> 00:39.310
我不好意思讲这个网页

00:39.510 --> 00:40.310
看一下吧

00:40.310 --> 00:42.510
给他一个ID

00:42.510 --> 00:44.410
btnclear

00:44.410 --> 00:45.810
btn就写为前綴

00:45.810 --> 00:47.910
表示这是一个按钮

00:47.910 --> 00:49.610
然后我们来获取这个按钮

00:49.610 --> 00:51.310
注册他的点击事件

00:51.310 --> 00:52.710
点击过后把它清空

00:52.710 --> 00:53.610
对吧

00:56.110 --> 00:57.510
我现在是手残了吗

00:57.510 --> 00:59.910
为什么老是按错键

00:59.910 --> 01:01.310
btnclear

01:01.310 --> 01:02.510
然后给他复制

01:02.510 --> 01:05.510
document getElementByID

01:05.510 --> 01:07.610
通过ID来获取这个按钮

01:07.610 --> 01:09.110
得到

01:09.210 --> 01:10.910
然后有了按钮之后

01:10.910 --> 01:12.110
一会我们要清空啥

01:12.110 --> 01:13.210
是不是要清空这个玩意

01:13.210 --> 01:14.210
这个eol对吧

01:14.210 --> 01:14.810
好

01:14.810 --> 01:16.310
我们把eol获取到

01:16.310 --> 01:20.310
document querysmegator list

01:21.910 --> 01:23.610
把eol获取到

01:23.610 --> 01:24.610
拿到了eol

01:24.610 --> 01:26.110
拿到了btn

01:26.110 --> 01:27.110
都是对象

01:27.110 --> 01:27.310
好

01:27.310 --> 01:28.810
接下来给谁注册事件

01:28.810 --> 01:30.610
给谁注册事件

01:30.610 --> 01:31.810
这也是初学者

01:31.810 --> 01:34.310
特别老火的地方

01:34.310 --> 01:35.810
我们要清空eol

01:35.810 --> 01:37.610
好像是要给eol注册事件

01:37.610 --> 01:38.510
但是你要想想

01:38.510 --> 01:41.010
什么叫事件发生了一件事

01:41.010 --> 01:42.210
什么叫发生一件事

01:42.210 --> 01:43.510
我要点这个按钮

01:43.510 --> 01:44.410
才清空

01:44.410 --> 01:46.410
所以事情发生在这个按钮身上

01:46.410 --> 01:47.010
对吧

01:47.010 --> 01:49.010
所以说是给按钮注册事件

01:49.010 --> 01:50.310
给clear注册事件

01:50.310 --> 01:53.610
unclick注册点击事件

01:53.610 --> 01:55.510
点击它的时候干嘛呢

01:55.510 --> 01:57.110
就在这个函数里边写干嘛

01:57.110 --> 01:58.710
到底发生了这件事情

01:58.710 --> 01:59.710
过后要干嘛

01:59.710 --> 02:00.710
干嘛呢

02:00.710 --> 02:02.610
把这个eol eol atml

02:02.610 --> 02:04.310
等于空之浮串

02:04.310 --> 02:05.710
是不是就清空了

02:05.710 --> 02:06.510
这不就清空了吗

02:06.510 --> 02:07.710
还要干嘛呢

02:07.810 --> 02:09.710
里边的东西

02:09.710 --> 02:10.310
内容嘛

02:10.310 --> 02:11.110
eol的内容

02:11.110 --> 02:12.110
稍微控制不出来

02:12.110 --> 02:12.610
能想到吗

02:12.610 --> 02:13.410
大家

02:13.410 --> 02:14.210
如果你想到的话

02:14.210 --> 02:15.510
这一句话就写完了

02:15.510 --> 02:16.810
看一下清空

02:16.810 --> 02:18.110
是不是就完了

02:18.110 --> 02:18.910
则于简单

02:18.910 --> 02:20.510
则于简单

02:20.510 --> 02:21.110
刷新

02:21.110 --> 02:22.610
这是清空

02:22.610 --> 02:22.810
好

02:22.810 --> 02:25.110
关键是里边这个东西不好办

02:25.110 --> 02:26.110
里边这些按钮

02:26.110 --> 02:27.510
删除

02:27.510 --> 02:28.710
那么点删除的时候

02:28.710 --> 02:29.410
要做件事

02:29.410 --> 02:29.910
对吧

02:29.910 --> 02:31.010
那么首先第一个问题

02:31.010 --> 02:32.710
要注册事件

02:32.710 --> 02:34.810
有些同学在这里去写id

02:34.810 --> 02:36.810
一个id btn1 btn2

02:36.810 --> 02:37.410
行不行

02:37.510 --> 02:38.710
当然可以

02:38.710 --> 02:40.310
但是你想要这个麻不麻烦

02:40.310 --> 02:41.510
我现在写的是实相

02:41.510 --> 02:43.510
我没给你写100项

02:43.510 --> 02:45.610
其实我该给你写100项的

02:45.610 --> 02:47.410
我该给你写1000项

02:47.410 --> 02:49.710
又直接抛弃这种想法了

02:49.710 --> 02:50.510
那肯定不行的

02:50.510 --> 02:50.710
对吧

02:50.710 --> 02:51.610
肯定不行的

02:51.610 --> 02:52.610
那怎么办呢

02:52.610 --> 02:55.110
我们可以这样子来做

02:55.110 --> 02:56.310
通过这个得到什么

02:56.310 --> 02:59.810
得到这个eol下面的所有按钮

02:59.810 --> 03:02.410
然后给他循环注册

03:02.410 --> 03:03.310
点击事件

03:03.310 --> 03:04.610
可不可以

03:04.610 --> 03:05.310
怎么不可以呢

03:05.310 --> 03:06.510
当然可以

03:06.510 --> 03:11.610
得到eol下的所有按钮

03:11.610 --> 03:12.210
好

03:12.210 --> 03:14.410
那么怎么来得到eol下面

03:14.410 --> 03:15.610
query snaggertr

03:15.610 --> 03:16.410
哦

03:16.410 --> 03:17.210
对吧

03:17.210 --> 03:17.810
得到什么

03:17.810 --> 03:19.110
得到所有的按钮

03:19.110 --> 03:19.510
btn

03:22.010 --> 03:22.910
得到是吧

03:22.910 --> 03:24.210
这样子是不是得到一个伪术组

03:24.210 --> 03:25.310
得到所有的按钮了

03:25.310 --> 03:26.310
然后干嘛呢

03:26.310 --> 03:28.410
循环注册

03:28.410 --> 03:30.110
循环注册

03:30.110 --> 03:31.510
点击事件

03:31.510 --> 03:33.210
循环注册点击事件

03:33.210 --> 03:34.010
好

03:34.010 --> 03:35.010
复讯环

03:35.010 --> 03:36.610
i等于0

03:36.610 --> 03:39.010
i小于什么

03:39.010 --> 03:40.310
btn

03:40.310 --> 03:41.110
n

03:41.110 --> 03:41.910
i加加

03:41.910 --> 03:42.010
好

03:42.010 --> 03:43.310
这里有很多坑

03:43.310 --> 03:44.610
而且有不同的解决办法

03:44.610 --> 03:46.110
我还在说

03:46.110 --> 03:46.410
好

03:46.410 --> 03:47.010
接下来呢

03:47.010 --> 03:48.110
得到当前这个按钮

03:48.110 --> 03:48.410
对吧

03:48.410 --> 03:49.410
得到当前这个按钮

03:49.410 --> 03:50.310
b

03:50.310 --> 03:51.210
btn

03:51.210 --> 03:53.010
i

03:53.010 --> 03:55.510
得到当前按钮

03:55.510 --> 03:55.810
好

03:55.810 --> 03:57.010
是不是每一循环一次

03:57.010 --> 03:59.010
给这个按钮注册点击事件

03:59.010 --> 04:01.010
onclick

04:01.010 --> 04:03.010
方形

04:03.010 --> 04:03.510
console

04:03.510 --> 04:04.510
log

04:04.510 --> 04:05.310
abc

04:05.310 --> 04:07.610
咱们点击的时候给他打印个abc

04:07.610 --> 04:09.510
看一下能不能打印出来

04:09.510 --> 04:11.010
保存看一下

04:11.010 --> 04:12.610
右键检查

04:12.610 --> 04:15.010
console

04:15.010 --> 04:15.610
点按钮

04:15.610 --> 04:17.610
你看abc是不是全部能打印出来

04:17.610 --> 04:18.610
好像是没啥问题了

04:18.610 --> 04:19.110
对吧

04:19.110 --> 04:20.110
没啥问题了

04:20.110 --> 04:23.410
那么接下来问题在哪呢

04:23.410 --> 04:24.910
我要删除的是啥

04:24.910 --> 04:27.910
删除的是这个按钮

04:27.910 --> 04:29.710
就是这个按钮

04:29.710 --> 04:31.810
所在的li

04:31.810 --> 04:33.310
关键是这个

04:33.310 --> 04:34.410
那么你想一想

04:34.410 --> 04:35.910
当我点击的时候

04:35.910 --> 04:38.210
如果我能够获取到

04:38.210 --> 04:40.510
你点那个按钮对象

04:40.510 --> 04:42.310
你点击那个按钮对象

04:42.310 --> 04:43.810
是不是我们可以通过

04:43.810 --> 04:45.310
按钮对象怎么样

04:45.310 --> 04:47.710
按钮对象就是

04:47.710 --> 04:49.910
通过按钮对象

04:49.910 --> 04:51.210
你点了哪个按钮

04:51.210 --> 04:52.410
按钮对象的是什么

04:52.410 --> 04:53.810
parent

04:53.810 --> 04:54.410
elements

04:54.410 --> 04:54.710
对吧

04:54.710 --> 04:55.610
或者是parent

04:55.610 --> 04:56.510
load的都行

04:56.510 --> 04:57.710
对吧

04:57.710 --> 04:59.110
找到他的复原数

04:59.110 --> 04:59.910
是不是把remove掉

04:59.910 --> 05:01.410
就完事了

05:01.410 --> 05:02.810
就完事了

05:02.810 --> 05:03.810
还干嘛呢

05:03.810 --> 05:04.510
没啥事了

05:04.510 --> 05:04.810
对吧

05:04.810 --> 05:06.110
很简单的

05:06.110 --> 05:08.310
那么关键的问题在于这个

05:08.310 --> 05:10.110
关键问题是在这

05:10.110 --> 05:11.010
你要怎么来得到

05:11.010 --> 05:12.810
当前你点的哪个按钮对象

05:12.810 --> 05:13.610
上一课的莫伟

05:13.610 --> 05:14.210
等我说过

05:14.210 --> 05:15.810
你可以使用z

05:15.810 --> 05:17.910
来表示你注册的事件员

05:17.910 --> 05:19.210
就是你点的哪个按钮

05:19.210 --> 05:20.710
你注册的哪个事件

05:20.710 --> 05:22.010
给哪个对象注册的事件

05:22.010 --> 05:23.310
事件发生过后

05:23.310 --> 05:25.610
z就指向了是哪个对象

05:25.610 --> 05:26.310
比方说

05:26.310 --> 05:28.710
比方说

05:28.710 --> 05:29.810
我们得到z

05:29.810 --> 05:30.810
得到z

05:30.810 --> 05:31.710
输出z

05:31.710 --> 05:33.610
点parent load

05:33.610 --> 05:34.710
输出一下

05:34.710 --> 05:36.210
看一下吧

05:36.210 --> 05:37.010
点第一个按钮

05:37.010 --> 05:38.210
你看得到的li

05:38.210 --> 05:39.310
是不是项目1

05:39.310 --> 05:40.610
点第二个按钮得到的li

05:40.610 --> 05:41.510
是不是项目2

05:41.510 --> 05:42.110
对吧

05:42.110 --> 05:43.510
你看z是不是正确的

05:43.510 --> 05:45.510
z表示点这个按钮

05:45.510 --> 05:47.010
z有指向这个按钮

05:47.010 --> 05:47.610
点这个按钮

05:47.610 --> 05:48.710
z有指向这个按钮

05:48.710 --> 05:49.610
就这么简单

05:49.610 --> 05:50.810
就这么简单

05:50.810 --> 05:50.910
好

05:50.910 --> 05:52.210
那么是不是就完了

05:52.210 --> 05:52.410
对吧

05:52.410 --> 05:54.110
你只要把这个一项就完了

05:54.110 --> 05:55.510
parent load

05:55.510 --> 05:58.810
remove就完了

05:58.810 --> 05:59.110
好

05:59.110 --> 05:59.610
点击

05:59.610 --> 06:00.710
你看是不是就完了

06:01.610 --> 06:03.410
没问题吧

06:03.410 --> 06:04.910
其实这个代码很简单

06:04.910 --> 06:06.110
关键是这里

06:06.110 --> 06:07.910
有同学会写成这个b

06:09.810 --> 06:11.010
叫出问题

06:11.010 --> 06:11.310
对

06:11.310 --> 06:12.510
就要出问题

06:12.510 --> 06:12.710
好

06:12.710 --> 06:14.410
保存看一下会出什么问题

06:14.410 --> 06:15.510
我说小一点

06:15.510 --> 06:17.010
说小一点

06:17.010 --> 06:19.510
点第一个大家注意看

06:19.510 --> 06:20.610
点第一个删除了吗

06:20.610 --> 06:21.910
没有删除

06:21.910 --> 06:22.910
看没有

06:22.910 --> 06:23.910
没有删除

06:23.910 --> 06:24.910
好像被删除不了了

06:24.910 --> 06:26.610
而且很奇怪的是点第一个

06:26.610 --> 06:28.110
最后一个删除了

06:28.110 --> 06:28.410
看没有

06:28.410 --> 06:29.510
最后一个删除了

06:29.510 --> 06:31.110
而且点后面就不行了

06:31.110 --> 06:32.410
这是怎么回事

06:32.410 --> 06:33.410
这是怎么回事

06:33.410 --> 06:35.010
我要解释一下

06:35.010 --> 06:36.510
如果你这里写b不行

06:36.510 --> 06:37.510
为什么不行

06:37.510 --> 06:39.810
因为有变量提升

06:39.810 --> 06:41.410
这是我们以前说过的

06:41.410 --> 06:43.510
你这句代码相当于是啥呢

06:43.510 --> 06:46.110
相当于是把这个变量提升到哪了

06:46.110 --> 06:47.710
提升到上面来了

06:47.710 --> 06:48.910
提升到这了

06:48.910 --> 06:49.810
提升到最顶部

06:49.810 --> 06:50.010
对吧

06:50.010 --> 06:51.110
我们以前说过的

06:51.110 --> 06:52.310
提升到最顶部

06:52.310 --> 06:54.410
那你这里相当于是给b负值

06:54.410 --> 06:55.210
看没

06:55.210 --> 06:56.510
相当于给b负值

06:56.510 --> 06:57.410
也就是说

06:57.410 --> 06:58.810
b的变量

06:58.810 --> 07:01.710
b这个变量是不断的被改变的

07:01.710 --> 07:02.910
它循环的时势

07:02.910 --> 07:06.510
那么它说不断的改变了时势

07:06.510 --> 07:07.010
没问题吧

07:07.010 --> 07:08.410
这个能理解吧

07:08.410 --> 07:08.710
好

07:08.710 --> 07:10.810
那么再想一想

07:10.810 --> 07:12.610
当我们去点击的时候

07:12.610 --> 07:14.510
当我们点这个东西的时候

07:14.510 --> 07:16.610
循环是不是早就结束了

07:16.610 --> 07:17.910
这个循环预刑的太快了

07:17.910 --> 07:19.910
可能一毫秒都不到就结束了

07:19.910 --> 07:21.410
循环早就结束了

07:21.410 --> 07:23.910
它不会说把这个要等到你点了过后

07:23.910 --> 07:24.310
才结束

07:24.310 --> 07:25.310
不会的

07:25.310 --> 07:27.310
那这样子的话页面会卡住

07:27.410 --> 07:28.710
页面会卡住的

07:28.710 --> 07:29.710
页面没有卡住

07:29.710 --> 07:31.210
说明这个循环早就结束了

07:31.210 --> 07:33.010
我们在循环下面输出一句话吧

07:33.010 --> 07:34.910
输出一个123看一下吧

07:34.910 --> 07:36.310
输出一个123

07:36.310 --> 07:37.110
保存

07:37.110 --> 07:38.610
你看一下123是不是已经输出了

07:38.610 --> 07:39.210
说明什么

07:39.210 --> 07:41.410
说明循环早就结束了

07:41.410 --> 07:42.610
那你点的时候

07:42.610 --> 07:43.610
那个变量b

07:43.610 --> 07:44.910
是不是记录的循环

07:44.910 --> 07:46.610
最后一次循环

07:46.610 --> 07:47.810
它负值的b

07:47.810 --> 07:49.110
对吧

07:49.110 --> 07:49.810
你这个变量b

07:49.810 --> 07:51.110
是不是记录的最后一次循环

07:51.110 --> 07:51.810
负值的b

07:51.810 --> 07:52.810
当你点击的时候

07:52.810 --> 07:53.810
运行这个函数

07:53.810 --> 07:55.310
这个函数的运用的b

07:55.310 --> 07:58.010
它是之前最后一次循环负值的b

07:59.310 --> 08:00.610
能理解吧

08:00.610 --> 08:02.010
我们这里是比方输出吧

08:02.010 --> 08:03.110
输出一下

08:03.110 --> 08:03.810
输出这个b

08:05.010 --> 08:08.310
它始终记录的是最后一次的b

08:08.310 --> 08:09.010
点击这个

08:09.010 --> 08:10.210
你看得到的是什么

08:10.210 --> 08:11.910
这样子看不出来

08:11.910 --> 08:12.210
看不出来

08:12.210 --> 08:13.410
我们看一下parent load

08:15.610 --> 08:16.710
点击一下

08:16.710 --> 08:18.310
你看得到的是ls最后一个

08:18.310 --> 08:19.110
看到没

08:19.110 --> 08:20.710
得到的这个按钮是最后一个

08:20.710 --> 08:23.010
所以说ls是最后一个

08:23.010 --> 08:24.710
因此你点随便点哪个

08:24.710 --> 08:28.010
它用的是b这个变量的始终是最后一个

08:28.010 --> 08:30.610
因此你点了过和删除是最后一个

08:30.610 --> 08:32.210
点了过和删除是最后一个

08:32.210 --> 08:33.410
那栽点为什么不行的

08:33.410 --> 08:34.810
因为最后一个已经没删了

08:34.810 --> 08:36.810
一栽点它再删已经没用了

08:36.810 --> 08:38.210
它反复删除它始终

08:38.210 --> 08:39.410
因为它可以反复删除

08:39.410 --> 08:40.910
但是已经没有效果了

08:40.910 --> 08:42.010
对吧

08:42.010 --> 08:44.610
所以说这就是问题所在

08:44.610 --> 08:47.210
那么如果一定要解决这样的问题

08:47.210 --> 08:48.810
比方说一定要解决

08:48.810 --> 08:49.610
我不能使用类似

08:49.610 --> 08:51.310
我就要解决这个问题

08:51.310 --> 08:52.710
那该怎么办

08:52.810 --> 08:55.110
不是说不开玩笑的这个地方

08:55.110 --> 08:56.610
这个地方很重要的

08:56.610 --> 08:59.410
你不是说我能用类似解决就完事了

08:59.410 --> 09:01.610
那以后用这个变量i同样要出问题

09:01.610 --> 09:02.710
用这个变量i

09:02.710 --> 09:03.410
看着啊

09:03.410 --> 09:04.910
用这个变量i同样要出问题

09:04.910 --> 09:06.010
因为i也有提升

09:06.010 --> 09:07.710
i会提升到这对吧

09:07.710 --> 09:08.710
i会提升到这

09:08.710 --> 09:11.910
那么这里就纯粹是给同一个变量不断的复职

09:11.910 --> 09:12.910
那等你点的时候

09:12.910 --> 09:14.310
i一定是最后一次曲子

09:14.310 --> 09:16.210
最后一次曲子就是出了循环

09:16.210 --> 09:17.710
出了循环的曲子

09:17.710 --> 09:20.010
你看一下i是不是全是实

09:20.010 --> 09:20.610
对吧

09:20.610 --> 09:21.710
全是实

09:21.810 --> 09:23.210
这些问题一直存在的

09:23.210 --> 09:25.010
你必须要知道怎么解决

09:25.010 --> 09:26.610
那如果

09:26.610 --> 09:28.210
我现在把它写回来

09:28.210 --> 09:28.710
你要知道

09:28.710 --> 09:30.810
为什么会发生这样的问题

09:30.810 --> 09:31.910
那么现在怎么办呢

09:31.910 --> 09:34.710
问题是怎么办呢

09:34.710 --> 09:36.810
看着你可以这样做

09:36.810 --> 09:39.410
我这里写一个函数

09:39.410 --> 09:40.910
我一步步来解释

09:40.910 --> 09:42.210
我写一个函数

09:42.210 --> 09:44.710
这个函数叫做名字叫做Rig

09:44.710 --> 09:45.610
表示注册

09:45.610 --> 09:47.110
注册时间

09:47.110 --> 09:48.210
Rig event

09:48.210 --> 09:49.810
event表示时间的意思

09:49.810 --> 09:51.310
注册点击时间

09:51.310 --> 09:53.210
你给我传一个啥了

09:53.210 --> 09:56.310
传一个按钮进来

09:56.310 --> 09:58.310
传一个按钮进来

09:58.310 --> 10:01.010
好就完了

10:01.010 --> 10:05.810
然后我在这里边给你注册时间

10:05.810 --> 10:07.010
在这里边给你注册时间

10:07.010 --> 10:10.210
console btn

10:10.210 --> 10:13.310
然后再打印出btn的parent load

10:13.310 --> 10:14.310
看一下

10:14.310 --> 10:16.210
然后我这里就不注册了

10:16.210 --> 10:17.810
这里不注册了

10:17.810 --> 10:20.310
然后变成用这个函数来帮你注册

10:20.410 --> 10:22.010
我们这里调用函数

10:22.010 --> 10:23.310
把b传进去

10:23.310 --> 10:24.310
b是个按钮

10:24.310 --> 10:25.310
传进去

10:25.310 --> 10:27.710
看一下这样的一传递

10:27.710 --> 10:29.910
是不是把b当前的值

10:29.910 --> 10:31.910
就保留到这个参数里面去了

10:31.910 --> 10:34.910
循环十四就调用十四这个函数

10:34.910 --> 10:36.110
每次调用函数

10:36.110 --> 10:38.610
是不是把当前b的地址

10:38.610 --> 10:39.910
因为我们是对象

10:39.910 --> 10:43.010
把地址传到这了

10:43.010 --> 10:44.610
于是btn里面是不是记录了

10:44.610 --> 10:46.810
当前的b的地址

10:46.810 --> 10:48.610
后续是不是没问题了

10:48.610 --> 10:50.310
后续就没有问题了

10:50.310 --> 10:52.110
哪怕后边我把b变了

10:52.110 --> 10:53.510
但是它的地址没变

10:53.510 --> 10:54.810
我们之前回忆一下

10:54.810 --> 10:56.110
之前

10:56.110 --> 10:57.710
来吧

10:57.710 --> 10:59.310
这个b指向的是什么

10:59.310 --> 11:01.710
比方说第四循环

11:01.710 --> 11:03.910
指向的是第1个按钮

11:03.910 --> 11:05.610
这样子一调用函数

11:05.610 --> 11:06.410
rig event

11:06.410 --> 11:08.310
是不是把b的这个东西

11:08.310 --> 11:09.710
又复制给了btn

11:09.710 --> 11:11.810
于是btn

11:11.810 --> 11:13.910
它也指向第1个按钮

11:13.910 --> 11:15.510
一会儿b的值变了

11:15.510 --> 11:17.110
b又指向了第2个按钮

11:17.310 --> 11:18.910
第2个按钮

11:18.910 --> 11:21.010
但是btn之前的btn

11:21.010 --> 11:23.010
是不是指向的还是第1个按钮

11:23.010 --> 11:23.910
没问题吧

11:23.910 --> 11:27.010
它就把引用保留下来了

11:27.010 --> 11:29.110
那第2次循环又调用函数

11:29.110 --> 11:30.510
又重新调用函数

11:30.510 --> 11:31.510
那不是说重新调用过

11:31.510 --> 11:32.410
又把btn改了

11:32.410 --> 11:33.210
不会的

11:33.210 --> 11:34.510
它是另外一个btn了

11:34.510 --> 11:35.810
因为每一个函数

11:35.810 --> 11:37.310
它的空间都是不一样的

11:37.310 --> 11:39.310
每一次执行空间都是不一样的

11:39.310 --> 11:40.610
那种空间都不一样

11:40.610 --> 11:42.210
所以说第2次执行的时候

11:42.210 --> 11:43.910
btn又是另外一个函

11:43.910 --> 11:45.310
另外一次执行的btn了

11:45.310 --> 11:47.010
它不是之前那一次

11:47.610 --> 11:49.410
总之每次调用函数

11:49.410 --> 11:51.210
都把b的引用传过去了

11:51.210 --> 11:53.510
然后让btn保留了b的引用

11:53.510 --> 11:56.010
我们把它叫做固定变量值

12:00.540 --> 12:02.440
这样子就把引用保留下来了

12:02.440 --> 12:04.540
那么这里输出btn就没问题了

12:04.540 --> 12:06.140
你看用函数来解决

12:06.140 --> 12:06.940
点击这个

12:06.940 --> 12:09.540
你看第1个项目1

12:09.540 --> 12:12.840
点击这个项目3

12:14.140 --> 12:16.040
那么类似的方式是不是i也可以

12:16.040 --> 12:17.240
可以把i传进来

12:17.240 --> 12:18.940
将来如果可能会用到i的话

12:18.940 --> 12:20.240
是不是可以把i传进来

12:20.240 --> 12:21.640
这边也没问题

12:21.640 --> 12:22.440
对不对

12:22.440 --> 12:24.640
可以用类似的方式来解决

12:24.640 --> 12:25.140
不要去背

12:25.140 --> 12:26.040
千万不要去背

12:26.040 --> 12:26.840
但是你要知道

12:26.840 --> 12:28.240
为什么会选择问题

12:28.240 --> 12:29.740
那么为什么这样子可以解决

12:29.740 --> 12:31.540
这都是关键点

12:31.540 --> 12:33.240
以后我们还会学习进阶

12:33.240 --> 12:36.040
进阶部分我们会学习执行上下文

12:36.040 --> 12:37.140
学到执行上下文过后

12:37.140 --> 12:38.140
你就更加清楚了

12:38.140 --> 12:39.040
这一块为什么可以

12:40.740 --> 12:41.140
好

12:41.140 --> 12:42.240
那这样子写可以

12:42.240 --> 12:44.040
大家看接下来我们来看一下

12:44.040 --> 12:45.140
以后在公司里边

12:45.140 --> 12:46.540
你们可能会见到的邪法

12:47.540 --> 12:49.540
你们可能会见到这种邪法

12:49.540 --> 12:51.340
既然它的本质是一个函数

12:51.340 --> 12:53.040
函数可以解决这样的问题

12:53.040 --> 12:55.140
那我能不能在这里写个函数表达式

12:57.140 --> 12:58.140
扩起来对吧

12:58.140 --> 12:59.240
扩起来就是函数表达式

13:00.440 --> 13:01.140
btn

13:01.940 --> 13:03.140
然后把这个东西写进来

13:04.740 --> 13:06.240
可不可以写个函数表达式呢

13:06.240 --> 13:08.140
然后立即执行这个函数

13:08.140 --> 13:08.740
写个函数

13:08.740 --> 13:09.840
然后立即执行它

13:09.840 --> 13:11.340
把这个b传进去

13:11.340 --> 13:12.140
以前是不是说过的

13:12.140 --> 13:14.340
这叫做立即执行函数

13:14.340 --> 13:15.340
写一个函数在这

13:15.440 --> 13:16.840
马上去调用这个函数

13:16.840 --> 13:18.740
跟刚才那种本质是不是一样的

13:18.740 --> 13:20.640
写个函数调用函数

13:20.640 --> 13:23.040
看看写个函数调用函数

13:23.040 --> 13:23.240
好

13:23.240 --> 13:25.640
那么这里也是写个函数

13:25.640 --> 13:27.040
马上去调用它

13:27.040 --> 13:27.640
把b传进去

13:27.640 --> 13:29.040
当然这个小过号也可以写进来

13:30.440 --> 13:31.640
写进来把b传进去

13:31.640 --> 13:32.340
可不可以

13:32.340 --> 13:33.440
当然可以

13:33.440 --> 13:34.840
这样子也没问题

13:34.840 --> 13:35.840
而且这样子呢

13:35.840 --> 13:38.340
是以后你们在公司里边经常看到的邪法

13:38.340 --> 13:40.040
当然以后学到es6的过后

13:40.040 --> 13:42.340
es6里边还有一种办法可以解决

13:42.340 --> 13:44.240
但是你这种办法你一定要知道

13:44.340 --> 13:45.740
这很重要的

13:45.740 --> 13:46.940
看一下现在也可以解决

13:48.940 --> 13:51.040
因为现在这里边用的btn

13:51.040 --> 13:52.740
已经是被固定了的

13:52.740 --> 13:54.740
你看b里边指向这个对象

13:54.740 --> 13:55.940
然后把这个b的引用

13:55.940 --> 13:57.740
传进作为参数传递

13:57.740 --> 13:59.140
传递给这个btn

13:59.140 --> 14:01.240
btn里边它就指向这个引用了

14:01.240 --> 14:02.840
那么后来b变了

14:02.840 --> 14:03.640
跟它没关系

14:03.640 --> 14:04.840
它也没有变

14:04.840 --> 14:05.740
所以它固定下来了

14:06.940 --> 14:08.040
明白这个意思吧

14:08.040 --> 14:08.240
好

14:08.240 --> 14:09.140
那这里的参数

14:09.140 --> 14:10.240
实际上我们有的时候

14:10.240 --> 14:12.040
习惯上写成一样的

14:12.040 --> 14:13.440
习惯上写成一样的

14:13.440 --> 14:14.540
可不可以可以

14:14.540 --> 14:15.740
因为我们之前说过

14:15.740 --> 14:17.040
函数里边的参数

14:17.040 --> 14:18.440
什么变量参数

14:18.440 --> 14:19.840
如果跟外层相同

14:19.840 --> 14:21.440
那么使用的是里边的

14:21.440 --> 14:22.740
没有使用外边的

14:22.740 --> 14:23.540
是不是一样的

14:23.540 --> 14:25.540
把这个b传递给这个b

14:25.540 --> 14:26.540
实际上是一样的

14:27.440 --> 14:28.540
看一下

14:28.540 --> 14:29.440
仍然相同

14:29.440 --> 14:30.040
仍然可以

14:31.140 --> 14:31.340
好了

14:31.340 --> 14:32.940
这样子是不是可以解决了

14:32.940 --> 14:33.340
对吧

14:33.340 --> 14:34.840
这样子可以解决了

14:34.840 --> 14:35.640
那么这样子干嘛

14:35.640 --> 14:36.140
干嘛呢

14:36.140 --> 14:37.040
这里边

14:37.040 --> 14:37.740
干嘛呢

14:37.740 --> 14:38.740
b变

14:39.740 --> 14:40.340
来呗

14:40.340 --> 14:41.940
b变什么

14:42.040 --> 14:43.140
parent load

14:43.540 --> 14:44.040
remove

14:45.040 --> 14:46.040
你看是不是可以解决了

14:47.740 --> 14:48.640
解决这个问题了

14:49.540 --> 14:51.540
这是另外一种做法

14:51.540 --> 14:52.340
另外一种做法

14:52.340 --> 14:53.240
都得学会

14:53.240 --> 14:54.540
都得学会

14:55.440 --> 14:56.240
这是一种

14:57.340 --> 14:57.940
然后了

14:57.940 --> 14:59.540
下面这个b点

14:59.540 --> 15:01.240
什么unclick

15:01.740 --> 15:02.340
function

15:02.340 --> 15:03.740
用z也可以

15:04.340 --> 15:05.540
这个常议下可以用z

15:05.540 --> 15:06.340
但是有些常议下

15:06.340 --> 15:07.240
可能用不了z

15:07.240 --> 15:08.240
可能就用不了z

15:08.240 --> 15:08.940
但是所以说

15:08.940 --> 15:10.540
你上面这种做法也得学会

15:12.040 --> 15:12.640
点击看一下

15:12.640 --> 15:13.340
z也可以

15:14.140 --> 15:15.140
还有没有做法的

15:15.140 --> 15:15.840
还有

15:15.840 --> 15:16.540
看着啊

15:16.540 --> 15:18.340
还有做法很多

15:19.540 --> 15:21.940
看着我现在把它变成一个真的数组

15:22.640 --> 15:24.440
array from details

15:24.540 --> 15:25.340
真数组

15:25.440 --> 15:27.140
真数组里边是不是有一个什么

15:27.340 --> 15:27.940
for each

15:27.940 --> 15:28.340
对吧

15:28.740 --> 15:29.940
用这种方式来循环

15:29.940 --> 15:31.440
那这里边是不是写的函数

15:31.940 --> 15:32.240
哎

15:32.240 --> 15:33.640
那是不是一样的结果了

15:34.540 --> 15:35.440
他把每一个

15:35.540 --> 15:37.340
把每一个按钮给我传进来

15:37.340 --> 15:37.640
对吧

15:37.640 --> 15:38.640
每一个按钮传进来

15:38.640 --> 15:40.140
那你这里已经写的函数了

15:40.140 --> 15:41.240
是不是函数里边

15:41.340 --> 15:43.040
就已经固定了这个b的值了

15:43.140 --> 15:43.640
对吧

15:43.640 --> 15:45.240
他不存在重新复制对不对

15:45.240 --> 15:46.840
每这里每一个函数调用

15:46.840 --> 15:48.040
他都是固定了这个b的值

15:48.040 --> 15:49.140
那直接写就完成了

15:49.440 --> 15:50.440
啊直接写就完成了

15:50.440 --> 15:51.540
这里是不是也可以

15:51.840 --> 15:52.940
也行啊

15:52.940 --> 15:54.440
用这种方式呢就没有那么多

15:55.040 --> 15:55.940
乱七八糟的东西了

15:55.940 --> 15:57.540
就可以用这种方式直接来

15:57.840 --> 15:57.940
啊

15:57.940 --> 15:59.640
因为这里边已经写的是函数了

15:59.840 --> 16:00.440
他会

16:00.540 --> 16:02.940
他这个函数会帮你来调用这个函数

16:02.940 --> 16:03.840
他会把这个b

16:03.940 --> 16:05.440
就是batton给你传进来

16:05.840 --> 16:07.340
数组的每一项给你传进来

16:07.440 --> 16:08.840
那么我们这个函数里边

16:08.840 --> 16:10.240
这就是其中一个按钮

16:10.340 --> 16:10.740
对吧

16:10.840 --> 16:11.940
给他复制

16:12.140 --> 16:13.540
啊给他注册事件没问题

16:13.740 --> 16:14.940
这样子也可以

16:15.440 --> 16:15.840
看没有

16:16.140 --> 16:17.240
用法很多啊

16:17.340 --> 16:18.440
这是地道题

16:19.140 --> 16:20.540
哎这三种做法都要挥哦

16:20.640 --> 16:21.640
都得挥

16:22.040 --> 16:22.740
都得挥

16:23.340 --> 16:24.440
好好想想啊

16:25.040 --> 16:26.240
这地道题以后呢

16:26.440 --> 16:28.440
你至 哪怕你至少目前啊

16:28.440 --> 16:30.040
我对对你的要求就是不是

16:30.340 --> 16:31.340
对你的要求就是

16:31.740 --> 16:33.440
不要求你彻底理解这一块

16:33.440 --> 16:35.240
因为我们现在还没有讲执行上下文

16:35.340 --> 16:37.040
你还不太可能彻底的

16:37.440 --> 16:38.940
非常非常清晰的理解

16:39.140 --> 16:41.040
但是呢你至少有这么个概念

16:41.340 --> 16:42.640
为什么会造成这样的问题

16:42.640 --> 16:43.240
你得知道

16:43.740 --> 16:44.440
为什么这样

16:44.640 --> 16:45.940
为什么用函数过后呢

16:45.940 --> 16:47.440
传的参数就可以固定下来

16:47.840 --> 16:48.840
通过函数你知道

16:48.840 --> 16:49.640
至少要知道

16:49.740 --> 16:51.640
通过函数可以固定这个值

16:51.840 --> 16:53.040
固定那个参数的值

16:53.640 --> 16:54.940
以后呢我们讲了执行上下文

16:54.940 --> 16:55.940
你就非常清楚了

16:56.640 --> 16:57.540
好这地道题啊

16:57.540 --> 16:58.940
第二道题图片切换器

17:00.240 --> 17:00.840
看一下啊

17:01.540 --> 17:02.640
这个题很简单啊

17:02.840 --> 17:04.240
目前呢显示的是啥

17:04.240 --> 17:05.740
显示的是第一张图片对吧

17:05.840 --> 17:06.740
点击上一张

17:07.140 --> 17:07.940
把它变成什么

17:07.940 --> 17:08.940
表态变成5

17:08.940 --> 17:09.540
对不对

17:09.540 --> 17:10.540
点击下一张

17:10.740 --> 17:11.740
把它变成2

17:13.140 --> 17:13.640
就是这样子

17:13.640 --> 17:14.740
就是这么个意思啊

17:15.540 --> 17:17.040
好那么现在呢我定一个变量

17:17.240 --> 17:18.140
这个变量呢表示

17:18.140 --> 17:19.540
当前是第几张图片

17:20.040 --> 17:21.440
当前的是第一张

17:21.440 --> 17:21.840
对吧

17:21.840 --> 17:22.540
定个变量

17:23.040 --> 17:23.840
好这里呢

17:24.540 --> 17:26.340
我们一会点安留的时候怎么样了

17:26.340 --> 17:27.840
我们的总体制度是

17:27.940 --> 17:29.440
点安留的时候是改

17:29.440 --> 17:30.540
去改这个变量

17:30.740 --> 17:31.740
去改这个变量

17:31.840 --> 17:33.740
把变量的值改成正确的值

17:33.740 --> 17:34.540
然后呢

17:34.540 --> 17:37.140
再把这个变量负值给这个src

17:37.740 --> 17:38.740
这是我们的总体的思路

17:38.740 --> 17:39.740
给你这两个按钮一个

17:40.140 --> 17:41.240
两个id

17:41.440 --> 17:42.640
一个是btn next

17:43.240 --> 17:44.340
一个是btn prev

17:44.740 --> 17:45.840
上一个下一个

17:46.240 --> 17:48.440
prev就是previus

17:48.440 --> 17:48.840
对吧

17:49.140 --> 17:49.940
之前的那个

17:50.240 --> 17:51.140
给这个img now

17:51.140 --> 17:52.640
一个id img

17:53.640 --> 17:54.540
好了来吧

17:55.140 --> 17:56.640
img等于document

17:56.840 --> 17:58.840
get element by id img

17:59.240 --> 18:00.040
然后呢

18:00.240 --> 18:01.040
用逗号嘛

18:02.340 --> 18:03.340
btn prev

18:03.740 --> 18:04.540
等于document

18:04.540 --> 18:05.840
get element by id

18:06.040 --> 18:07.440
btn prev

18:07.640 --> 18:08.640
这些代码呢

18:08.640 --> 18:09.840
要用的滚瓜烂手

18:11.240 --> 18:11.840
document

18:12.040 --> 18:13.440
get element by id

18:13.640 --> 18:14.540
btn next

18:15.240 --> 18:15.640
好

18:15.940 --> 18:16.840
三个变量定好

18:17.040 --> 18:17.940
接下来注册事件

18:17.940 --> 18:18.840
给谁注册事件

18:18.840 --> 18:20.040
给图片还是给按钮

18:21.040 --> 18:22.040
给图片还是给按钮

18:22.140 --> 18:23.240
是给按钮注册事件

18:23.440 --> 18:25.140
因为我们是点安留发生某一件事

18:25.140 --> 18:25.540
对吧

18:26.040 --> 18:27.240
当然图片能不能点击

18:27.240 --> 18:28.040
可以点击

18:28.040 --> 18:29.940
只是我们现在目前这个需求下边

18:30.140 --> 18:31.640
是点安留发生某件事

18:31.940 --> 18:33.440
好当点击前一张

18:33.440 --> 18:35.640
前一个按钮的时候干嘛了

18:36.440 --> 18:37.140
干嘛呢

18:37.140 --> 18:38.240
是不是i减减

18:38.240 --> 18:38.640
对不对

18:38.640 --> 18:39.640
i减减

18:39.840 --> 18:40.440
上营长吗

18:40.440 --> 18:41.240
i减减

18:41.540 --> 18:43.640
如果i减了之后等于了多少

18:43.940 --> 18:45.440
等于了0

18:46.140 --> 18:46.540
干嘛

18:46.540 --> 18:47.840
是不是把它复制为5

18:48.140 --> 18:48.640
对不对

18:48.740 --> 18:49.440
复制为5

18:50.040 --> 18:50.240
好

18:50.240 --> 18:51.240
然后接下来干嘛呢

18:51.240 --> 18:53.540
是不是根据i重新设置这个e密集

18:53.640 --> 18:54.040
对吧

18:54.240 --> 18:55.840
根据i重新设置e密集

18:55.840 --> 18:57.340
设置e密集的src

18:57.340 --> 18:58.040
为什么呢

18:58.340 --> 18:58.940
为

18:59.940 --> 19:00.840
模板之不错嘛

19:01.340 --> 19:01.940
为什么呢

19:02.040 --> 19:03.440
为这个e密集文件讲下面

19:03.440 --> 19:04.540
就把这个数字变了

19:05.140 --> 19:06.240
把这个数字变了

19:06.240 --> 19:07.340
就这个数字变成啥

19:07.440 --> 19:08.040
变成i

19:09.340 --> 19:09.940
没问题吧

19:10.340 --> 19:10.540
好

19:10.540 --> 19:11.640
保存看一下啊

19:12.040 --> 19:13.640
上一张上一张是不是上一张

19:13.640 --> 19:14.340
是不是可以变了

19:14.540 --> 19:14.940
对吧

19:14.940 --> 19:15.540
没问题吧

19:16.440 --> 19:16.640
好

19:16.640 --> 19:17.540
然后看下一张啊

19:17.540 --> 19:18.640
下一张是不是一样的

19:20.040 --> 19:20.340
好

19:20.340 --> 19:21.840
btn next

19:22.040 --> 19:22.740
一样的对吧

19:22.740 --> 19:23.340
一样的

19:24.140 --> 19:24.340
好

19:24.340 --> 19:25.240
然后这里呢

19:25.240 --> 19:26.740
onclick i++

19:28.640 --> 19:29.440
i++

19:30.340 --> 19:30.740
然后呢

19:30.740 --> 19:32.640
i如果等于几张

19:32.840 --> 19:33.440
等于6

19:33.440 --> 19:33.740
对吧

19:33.740 --> 19:34.740
不存在6的对吧

19:34.740 --> 19:35.440
不存在6

19:35.440 --> 19:36.640
就把if只为0

19:37.240 --> 19:37.440
好

19:37.440 --> 19:37.940
保存

19:38.340 --> 19:39.140
看一下啊

19:39.340 --> 19:40.140
是不是一样的

19:40.540 --> 19:41.140
上一张

19:41.140 --> 19:41.740
下一张

19:42.040 --> 19:42.340
哎

19:42.340 --> 19:43.440
下一张有出问题了

19:43.940 --> 19:44.540
出问题了

19:44.840 --> 19:45.540
i++

19:45.540 --> 19:46.140
我看一下

19:46.540 --> 19:47.540
i++

19:49.640 --> 19:50.240
呃

19:51.540 --> 19:52.640
加加过后

19:53.240 --> 19:54.440
如果等于6

19:54.640 --> 19:54.940
啊

19:54.940 --> 19:56.540
就把i设置为0

19:56.840 --> 19:57.840
设置为0

19:57.940 --> 19:58.740
哎没问题啊

19:58.940 --> 19:59.540
好这里

19:59.740 --> 19:59.940
好

19:59.940 --> 20:00.740
现在调错了啊

20:00.740 --> 20:01.440
要调错了

20:01.540 --> 20:03.540
那么是点下一个的时候出了问题

20:03.740 --> 20:03.840
好

20:03.840 --> 20:04.540
怎么办呢

20:04.640 --> 20:06.440
我就把这个i输出看那个i

20:07.140 --> 20:07.740
明白了

20:07.940 --> 20:08.540
不用输出了

20:08.540 --> 20:09.140
看到了

20:09.540 --> 20:10.940
如果如果还没看到的话

20:10.940 --> 20:12.840
你就输出看那个i的值这么准确

20:13.140 --> 20:14.140
i应该等于1

20:14.140 --> 20:14.440
对吧

20:14.440 --> 20:15.140
等于1

20:15.440 --> 20:16.540
最小的是1嘛

20:17.040 --> 20:17.440
好

20:17.440 --> 20:18.140
也下一张

20:18.340 --> 20:19.740
上一张上一张下一张

20:19.940 --> 20:20.740
上一张下一张

20:21.340 --> 20:21.740
没问题了

20:21.740 --> 20:22.140
对吧

20:22.140 --> 20:22.740
没问题了

20:23.740 --> 20:24.340
这是

20:24.540 --> 20:25.640
图片切换器

20:25.840 --> 20:26.740
这个很简单

20:26.940 --> 20:28.640
下一个库存变根器

20:29.540 --> 20:30.340
这一块呢

20:31.340 --> 20:33.840
你们可能有各种样的做法出来

20:34.140 --> 20:34.640
但是呢

20:34.640 --> 20:36.340
我这里介绍我的做法

20:37.140 --> 20:37.840
好这里呢

20:37.840 --> 20:38.540
我们看一下

20:38.540 --> 20:39.540
我们要改变的是啥

20:39.540 --> 20:41.040
改变的是这个span远处

20:41.040 --> 20:41.440
对吧

20:41.640 --> 20:42.440
好给他一个id

20:42.440 --> 20:43.240
span number

20:43.740 --> 20:44.640
给他个id

20:44.940 --> 20:46.140
然后接下来干嘛呢

20:47.240 --> 20:49.540
当我们点击按钮的时候

20:50.140 --> 20:52.040
当我们点击按钮的时候

20:52.440 --> 20:52.840
好

20:52.840 --> 20:55.640
要去改变这个span里边的东西

20:55.740 --> 20:58.040
就是根据这个span里边的数字

20:58.240 --> 20:59.140
来进行变化

20:59.440 --> 21:01.240
比方说我们点比方说这个span里边

21:01.240 --> 21:02.240
目前是100

21:02.440 --> 21:03.740
比方说目前是100

21:04.240 --> 21:06.040
好你点加10干嘛呢

21:06.440 --> 21:07.340
做什么事情呢

21:07.640 --> 21:10.440
是不是把这个span里边的100得到

21:10.540 --> 21:12.140
然后再加上一个10

21:12.840 --> 21:13.440
没问题吧

21:13.840 --> 21:15.340
再加上一个10呗

21:16.240 --> 21:16.940
就这样做呗

21:18.940 --> 21:21.440
好那么现在有些同学可能会这样子写

21:21.540 --> 21:23.140
给自己按钮了分别写个id

21:23.140 --> 21:24.540
然后分别去写事件

21:24.540 --> 21:25.640
你不觉得麻烦吗

21:25.840 --> 21:26.940
是不是觉得很麻烦

21:27.940 --> 21:29.740
那我现在还没给你加1万加10万

21:29.740 --> 21:30.840
加500加800

21:31.040 --> 21:31.940
那你怎么办了

21:32.340 --> 21:33.740
你是不是到处去注射事件

21:34.040 --> 21:35.440
好我们这里可以这样子

21:35.440 --> 21:36.740
这样子来处理看着

21:37.340 --> 21:38.940
用一种很巧妙的处理办法

21:39.140 --> 21:40.640
document query

21:41.440 --> 21:42.540
query selector

21:43.540 --> 21:45.040
得到所有的按钮

21:46.640 --> 21:47.940
是不是循环注射事件

21:48.240 --> 21:49.740
统一来注射事件

21:49.940 --> 21:51.840
他们的行为都差不多

21:51.840 --> 21:52.840
都差不多

21:53.040 --> 21:54.140
把这个span得到

21:54.140 --> 21:55.340
span元素得得到

21:55.640 --> 21:58.140
document gets element by id

21:58.440 --> 21:59.440
span number

22:00.440 --> 22:01.440
把span元素得到

22:01.440 --> 22:02.240
把按钮得到

22:02.240 --> 22:03.440
接下来是不是循环了

22:03.540 --> 22:05.540
循环注射事件完事了

22:06.240 --> 22:06.940
霍循环

22:06.940 --> 22:08.640
当然这个是不是又来了

22:08.640 --> 22:09.940
又是之前刚才讲的问题

22:09.940 --> 22:10.340
对吧

22:10.640 --> 22:11.840
btns

22:12.640 --> 22:14.040
你现在知道怎么解决就行了

22:16.740 --> 22:17.540
循环按钮

22:17.540 --> 22:18.940
每循环一次干嘛呢

22:19.440 --> 22:20.240
得到一个按钮

22:20.440 --> 22:21.440
得到一个按钮

22:21.640 --> 22:23.440
然后呢给他注射点击事件

22:23.840 --> 22:24.740
点击事件

22:26.240 --> 22:27.140
这代码没问题吧

22:27.540 --> 22:28.740
循环注射事件

22:29.240 --> 22:30.940
好点击的时候要干嘛呢

22:30.940 --> 22:31.740
点击的时候

22:31.840 --> 22:34.140
我要改变这个span元素的纸

22:34.540 --> 22:36.340
拿到这个span元素目前的纸

22:37.140 --> 22:38.140
目前可能是0

22:38.140 --> 22:39.740
可能是多少无数不知道

22:39.740 --> 22:40.140
对吧

22:40.140 --> 22:41.940
因为他按钮会改变他里边的纸

22:41.940 --> 22:42.940
所以说你每次

22:43.540 --> 22:44.440
点的时候呢

22:44.640 --> 22:46.340
你不要说老是从0加10

22:46.340 --> 22:48.240
0加10点这个东西永远是10

22:48.440 --> 22:48.840
对不对

22:48.840 --> 22:50.640
你要重新拿到他里边的东西

22:50.940 --> 22:52.140
重新拿到他里边的东西

22:52.340 --> 22:52.940
怎么拿呢

22:52.940 --> 22:54.340
我们之前是不是说过的

22:54.540 --> 22:55.340
inner ATML

22:55.340 --> 22:56.740
或者是什么inner

22:57.040 --> 22:58.340
text都行

22:58.640 --> 23:00.040
都能拿到他里边的这个

23:00.140 --> 23:00.740
这个文本

23:00.740 --> 23:01.540
但是你要注意

23:01.640 --> 23:02.340
这个是什么

23:02.340 --> 23:03.440
是字幅串

23:03.840 --> 23:05.240
这个玩意是一个字幅串

23:05.240 --> 23:06.640
你是不知道进行转换

23:07.040 --> 23:07.840
post 硬册

23:07.840 --> 23:09.440
你看把之前的姿势用起来

23:09.740 --> 23:10.940
转换成数字

23:10.940 --> 23:11.940
转换成整数

23:12.740 --> 23:14.440
这是目前的number

23:14.940 --> 23:15.440
点的时候

23:15.440 --> 23:16.940
我们先得到目前的number

23:17.040 --> 23:18.040
然后干嘛呢

23:18.640 --> 23:22.740
加或减某个数

23:24.340 --> 23:25.740
加或减某个数

23:26.740 --> 23:27.840
或者说我们说

23:27.840 --> 23:29.340
就是加某个数

23:29.640 --> 23:30.640
加某个数

23:30.840 --> 23:31.540
加哪个数呢

23:31.540 --> 23:32.440
有可能是加正数

23:32.440 --> 23:33.440
有可能是加负数

23:33.440 --> 23:34.140
这个没问题吧

23:34.440 --> 23:35.440
点这个就是加1

23:35.640 --> 23:36.840
点这个就是加负一

23:36.940 --> 23:37.440
对不对

23:38.040 --> 23:40.640
关键是这个某个数是啥数呢

23:40.640 --> 23:41.340
你不知道

23:42.540 --> 23:43.440
有人说判断

23:43.640 --> 23:44.440
判断这个i

23:45.440 --> 23:46.240
判断这个i

23:46.340 --> 23:47.440
得到的是哪个数

23:47.540 --> 23:49.140
先不说在这个世界里边

23:49.140 --> 23:50.140
i 会有问题

23:50.140 --> 23:50.940
我们刚才说了

23:50.940 --> 23:51.840
i 会有问题

23:51.940 --> 23:52.840
先不说这些事情

23:52.840 --> 23:53.840
当然这个问题可以解决

23:53.840 --> 23:54.140
对吧

23:54.140 --> 23:55.140
我们用这个是什么

23:55.140 --> 23:56.240
利息执行函数

23:56.340 --> 23:57.840
或者是用for一起转

23:57.940 --> 23:59.240
或者是用什么

23:59.340 --> 24:00.940
用z这里不行

24:00.940 --> 24:02.940
关于这个i是不能用z

24:03.340 --> 24:04.840
那总之可以解决

24:05.040 --> 24:06.440
但是也不行啊

24:07.240 --> 24:08.540
你这样要写好多判断

24:08.840 --> 24:09.440
第一个

24:09.540 --> 24:10.240
第二个怎么样

24:10.240 --> 24:10.840
第三个怎么样

24:10.840 --> 24:11.740
是不是要写家堆

24:11.940 --> 24:14.140
看着神奇的事情来了

24:14.840 --> 24:16.740
我们不是学过自定义属性吗

24:19.200 --> 24:20.000
delta sets

24:21.000 --> 24:21.700
delta sets

24:21.900 --> 24:23.200
我就把这个信息记住到

24:23.200 --> 24:25.400
记住到这个元素里边去

24:26.200 --> 24:26.900
他是啥

24:27.300 --> 24:28.700
他加上负1000

24:28.800 --> 24:30.000
他加上负100

24:30.200 --> 24:31.300
他加上负10

24:31.700 --> 24:32.500
他加上啥

24:32.600 --> 24:33.500
加上负1

24:34.500 --> 24:35.200
好 这边

24:36.400 --> 24:37.300
delta sets

24:38.500 --> 24:39.500
怎么delta sets呢

24:40.000 --> 24:43.100
应该是delta plus

24:43.400 --> 24:44.200
就是相加的

24:44.200 --> 24:45.000
相加的结果

24:45.000 --> 24:46.200
就是你自己命个名字

24:46.200 --> 24:47.200
前面钱罪不变

24:47.200 --> 24:48.300
后面自己命个名字

24:48.600 --> 24:50.300
好 这个是加1对吧

24:50.500 --> 24:51.600
这个是加10

24:51.800 --> 24:52.700
这个是加100

24:52.700 --> 24:53.600
这个是加1000

24:54.000 --> 24:55.200
这里把名字改一下

24:55.500 --> 24:57.100
改成delta plus

24:58.000 --> 24:58.500
相加

24:59.500 --> 25:00.600
你看一下

25:00.600 --> 25:01.900
如果我这样子写了

25:02.000 --> 25:03.900
那么现在我是不是可以把

25:04.000 --> 25:06.100
你点到哪个按钮

25:06.100 --> 25:08.700
我就可以把按钮的属性取出来

25:09.100 --> 25:09.800
没问题吧

25:10.600 --> 25:11.200
得到什么

25:11.200 --> 25:12.300
得到当前

25:12.800 --> 25:13.900
这个事件元

25:13.900 --> 25:15.100
就是个事件对象

25:16.000 --> 25:16.900
就是这个对象

25:17.200 --> 25:18.600
就是注册这个事件的对象

25:18.600 --> 25:20.000
因为现在我们还没有具体讲事件

25:20.000 --> 25:21.400
所以说很多数以后不好说

25:21.800 --> 25:22.400
这里呢

25:22.500 --> 25:23.100
可以得到什么

25:23.100 --> 25:25.000
delta sets plus

25:25.800 --> 25:27.600
所以可以得到这个自定义属性的值

25:28.300 --> 25:29.200
保存看一下

25:30.400 --> 25:31.200
看一下控制台

25:32.100 --> 25:33.100
有些朋友应该就知道

25:33.100 --> 25:34.900
应该知道我要干嘛了对吧

25:37.100 --> 25:37.800
没输出呢

25:38.600 --> 25:39.800
点击过后没输出呢

25:39.800 --> 25:40.500
我看一下

25:40.700 --> 25:42.800
delta sets plus

25:45.030 --> 25:46.230
刷新看一下

25:46.930 --> 25:47.730
好 没有输出

25:47.730 --> 25:48.530
没有输出

25:48.530 --> 25:49.530
那么接下来我们来看一下

25:49.530 --> 25:50.630
到底是哪里出了问题

25:50.830 --> 25:51.730
哪里出了问题

25:51.830 --> 25:53.830
我们这里首先看这个循环有没有进

25:54.930 --> 25:56.130
看这个循环有没有进

25:57.030 --> 25:58.230
因为如果循环都没进的话

25:58.230 --> 25:59.830
那更加谈不上注册时间了对吧

26:01.130 --> 26:02.030
好 循环没有进

26:02.030 --> 26:02.530
看没有

26:02.530 --> 26:03.430
循环没有输出

26:03.530 --> 26:04.330
说明啥呢

26:04.330 --> 26:05.830
说明这个btn是有问题

26:05.830 --> 26:06.830
我们又来打印btn

26:06.830 --> 26:08.030
我已经知道问题在哪了

26:08.030 --> 26:08.830
但是我告诉大家

26:08.830 --> 26:09.930
怎么来调这个问题

26:10.230 --> 26:12.230
保存看一下输出的btn

26:12.230 --> 26:13.830
当然也可以用断点调试对吧

26:13.830 --> 26:14.930
也可以用断点调试

26:15.530 --> 26:16.630
你看btn是啥

26:16.730 --> 26:17.630
btn是不是这个玩意

26:17.630 --> 26:19.430
好 咱们再用断点调试一次

26:19.730 --> 26:20.530
用断点调试一次

26:20.530 --> 26:21.830
看这到底是怎么回事

26:22.130 --> 26:23.430
现在不用那个concernogue了

26:23.430 --> 26:24.130
有点no对吧

26:24.130 --> 26:24.830
我之前说过

26:24.930 --> 26:26.030
好 咱们用断点调试

26:26.030 --> 26:27.030
找到这个sources

26:28.230 --> 26:29.330
好 找到这里

26:30.030 --> 26:32.130
我们不是有这里的代码吗

26:32.430 --> 26:32.930
ok

26:33.530 --> 26:34.830
随便找个地方打个断点

26:35.230 --> 26:36.130
再刷新一次

26:36.130 --> 26:36.730
刷新一次

26:36.730 --> 26:37.730
你看运行要断点了

26:38.030 --> 26:40.830
咱们看一下这个btn.nance

26:41.630 --> 26:42.530
undefend

26:43.030 --> 26:44.130
为什么是undefend

26:44.130 --> 26:45.530
咱们来看一下btn

26:45.830 --> 26:46.930
btn是个啥呢

26:47.330 --> 26:48.130
这个啥呢

26:48.830 --> 26:50.230
这里如果你看不出来

26:50.230 --> 26:51.530
如果你看不出来的话

26:51.530 --> 26:53.030
但是你可以至少知道

26:53.030 --> 26:54.830
btn.nance是undefend

26:54.830 --> 26:56.530
说明它没有这个认识属性

26:56.530 --> 26:57.530
是不是在提醒你的

26:57.730 --> 26:59.430
这个btn.nance它不是一个数组

26:59.930 --> 27:01.430
如果你还看不出来的话

27:01.630 --> 27:02.430
这里我们结束

27:02.630 --> 27:03.430
还看不出来的话

27:03.430 --> 27:04.930
在控制台里边找到这个btn

27:04.930 --> 27:06.230
看一下它是个啥

27:06.630 --> 27:07.430
它是个button

27:07.630 --> 27:08.730
得到了单个对象

27:08.730 --> 27:10.130
看没得到的是单个对象

27:10.130 --> 27:11.130
那你下去明白了

27:11.430 --> 27:12.630
因为我这里应该用all

27:12.630 --> 27:13.030
对吧

27:13.230 --> 27:14.530
得到所有的按钮

27:15.430 --> 27:16.030
保存

27:16.430 --> 27:17.230
现在再看一下

27:17.730 --> 27:18.830
点击

27:18.830 --> 27:20.430
你看点不同的按钮

27:21.230 --> 27:22.030
点不同的按钮

27:22.030 --> 27:22.930
是不是得到不同的

27:23.130 --> 27:24.230
要相加的数字

27:24.230 --> 27:24.630
对吧

27:24.630 --> 27:25.930
要相加的数字就得到了

27:26.330 --> 27:27.030
没问题吧

27:27.430 --> 27:27.830
好

27:27.830 --> 27:29.330
然后把这个数字干嘛

27:29.630 --> 27:31.030
把这个数字是不是转换成

27:32.230 --> 27:33.630
整数posed int

27:34.030 --> 27:35.030
转换成整数

27:35.530 --> 27:35.730
好

27:35.730 --> 27:36.530
接下来要干嘛

27:38.030 --> 27:39.230
注意中的数字

27:39.930 --> 27:40.930
最终的数字是啥

27:40.930 --> 27:42.330
是之前的数字

27:42.530 --> 27:43.630
加上这个plus

27:43.630 --> 27:44.030
对吧

27:44.330 --> 27:45.530
这个plus可能是负数

27:45.530 --> 27:46.330
可能是正数

27:46.330 --> 27:47.330
加上它就完事了

27:47.430 --> 27:49.030
加上负数就相当于是相解

27:49.730 --> 27:51.030
这是最终的

27:51.030 --> 27:51.930
最终的数字

27:52.430 --> 27:52.630
好

27:52.630 --> 27:54.130
这个最终的数字算出来了

27:54.330 --> 27:54.730
好

27:54.730 --> 27:55.230
咱们来看一下

27:55.230 --> 27:56.530
concernog result

27:57.430 --> 27:57.930
保存

27:59.030 --> 28:00.030
减100是不是负100

28:00.030 --> 28:01.130
减10是不是负10

28:01.130 --> 28:02.330
加10是不是值

28:02.330 --> 28:03.830
加100是不是100

28:03.830 --> 28:04.030
好

28:04.030 --> 28:05.230
咱们再改一下这个span

28:05.230 --> 28:06.930
span里面比方说一开始是10

28:07.930 --> 28:09.230
这个加是不是11

28:09.230 --> 28:10.630
这个加是不是20

28:10.630 --> 28:11.130
对吧

28:11.430 --> 28:12.030
没问题吧

28:12.530 --> 28:13.530
那接下来要干嘛

28:14.030 --> 28:14.730
接下来干嘛

28:15.030 --> 28:16.830
它有可能是负数相加出来

28:16.830 --> 28:17.830
但是最小是0

28:17.830 --> 28:18.830
所以说判断一下

28:18.830 --> 28:20.430
如果result小于0

28:20.530 --> 28:21.430
它如果是负数的话

28:21.430 --> 28:22.530
把它负数为0

28:22.730 --> 28:23.430
所以完事了

28:23.930 --> 28:25.630
这样可以保证它最小为0

28:26.130 --> 28:26.330
好

28:26.330 --> 28:27.630
接下来最后一步

28:27.730 --> 28:29.030
把它负责给谁

28:29.030 --> 28:30.130
负责给span

28:30.230 --> 28:31.830
又给它负责回去

28:32.130 --> 28:33.130
in the 80秒

28:33.830 --> 28:34.430
results

28:34.430 --> 28:36.030
把这个数字给它负责回去

28:36.730 --> 28:36.930
好

28:36.930 --> 28:37.830
保存看一下吧

28:39.960 --> 28:40.860
是不是可以相加了

28:41.260 --> 28:41.760
加

28:41.860 --> 28:42.360
减

28:42.860 --> 28:43.360
减10

28:43.360 --> 28:43.860
减10

28:44.160 --> 28:44.860
减到0

28:45.160 --> 28:45.760
加100

28:45.960 --> 28:46.660
加1000

28:46.960 --> 28:47.660
减1000

28:47.860 --> 28:48.560
是不是可以了

28:49.660 --> 28:50.360
没问题了吧

28:51.060 --> 28:51.960
这到底

28:52.160 --> 28:54.160
这种方式可能大家不太容易想到

28:54.260 --> 28:56.460
但是我慢慢给大家提供这种思路

28:56.460 --> 28:57.860
这种思路肯定是最好的

28:57.860 --> 28:59.060
又容易阅读

28:59.060 --> 28:59.860
又没有什么判断

28:59.860 --> 29:00.860
你看有啥判断了

29:00.860 --> 29:01.760
基本上没啥判断

29:01.760 --> 29:02.860
都是统一处理的

29:04.160 --> 29:04.360
好

29:04.360 --> 29:05.460
接下来再看下一道题

29:05.460 --> 29:06.360
添加列表

29:08.060 --> 29:09.060
好好下去消化

29:09.060 --> 29:10.560
虽然我做的时间不多

29:10.560 --> 29:11.060
但是

29:11.260 --> 29:13.360
这个题列表可以想象的空间很大

29:13.660 --> 29:14.760
好好下去消化一下

29:15.160 --> 29:16.160
点击添加

29:16.360 --> 29:17.360
不能添加空的文本

29:17.360 --> 29:17.660
对吧

29:17.660 --> 29:18.560
不能添加空的文本

29:18.560 --> 29:19.660
点击添加的时候

29:19.660 --> 29:20.960
我把这个东西添加进去

29:21.160 --> 29:21.960
添加到后边

29:22.060 --> 29:23.360
咱们先不考虑这个东西

29:23.460 --> 29:24.660
先不考虑他

29:24.960 --> 29:25.660
不考虑他

29:25.960 --> 29:26.160
好

29:26.160 --> 29:27.160
接下来我来看一下

29:27.460 --> 29:28.460
是不是给他注册事件

29:28.660 --> 29:29.960
给这个按钮注册事件

29:30.160 --> 29:31.360
btnadd

29:31.960 --> 29:32.860
给他个id

29:34.560 --> 29:34.760
好

29:34.760 --> 29:35.360
然后呢

29:35.360 --> 29:36.260
咱们来获取

29:36.460 --> 29:37.860
vabtnadd

29:38.860 --> 29:39.560
document

29:39.760 --> 29:40.260
get

29:40.760 --> 29:41.260
animate

29:41.260 --> 29:41.860
id

29:42.360 --> 29:43.560
btnadd

29:43.760 --> 29:44.260
得到

29:45.060 --> 29:45.560
注册事件

29:45.560 --> 29:45.960
对吧

29:46.160 --> 29:46.860
btnadd

29:46.860 --> 29:47.360
怎么样

29:47.560 --> 29:48.360
onclick

29:48.560 --> 29:50.060
点击的时候干嘛

29:50.060 --> 29:50.260
对吧

29:50.260 --> 29:51.060
我们先测试一下

29:51.060 --> 29:51.560
这个数件

29:51.560 --> 29:53.660
有没有正确的注册出来

29:53.860 --> 29:55.360
像我们这个console log

29:55.760 --> 29:58.060
其实就是为了来帮我们做一些测试调试的

29:59.360 --> 29:59.760
看一下

29:59.760 --> 30:01.160
有没有这个console log发生

30:02.260 --> 30:02.660
点击

30:03.360 --> 30:04.260
事件注册进去了

30:04.260 --> 30:04.660
看没

30:04.660 --> 30:05.660
没点击一次

30:06.160 --> 30:07.360
他就运行了一次事件

30:07.860 --> 30:08.060
好

30:08.060 --> 30:09.960
接下来事件里面要干嘛了

30:10.160 --> 30:10.660
要干嘛

30:10.660 --> 30:11.960
我们来理下这个流程

30:12.660 --> 30:13.460
要干嘛了

30:15.060 --> 30:17.060
我要往这里边加一项

30:17.360 --> 30:18.760
是不是要创建一个啥

30:18.760 --> 30:20.160
创建一个li

30:20.260 --> 30:20.860
对不对

30:21.360 --> 30:22.060
没问题吧

30:22.160 --> 30:23.060
这个没问题吧

30:23.360 --> 30:24.860
要创建一个li

30:24.960 --> 30:27.160
每一次点击到创建一个新的li

30:27.760 --> 30:29.560
每一次点击到创建一个新的li

30:29.660 --> 30:30.360
有些同学呢

30:30.360 --> 30:31.360
我看到一个错误

30:31.460 --> 30:32.760
把这个东西写到外边

30:32.860 --> 30:33.460
行不行

30:34.060 --> 30:35.360
那就不是每一次点击创建了

30:35.360 --> 30:37.060
就是一开始又创建好了

30:37.560 --> 30:38.160
你在这里边

30:38.160 --> 30:38.960
你在这里边

30:39.060 --> 30:40.960
无非去改变他的属性值而已

30:41.260 --> 30:42.460
改变他各种属性而已

30:42.460 --> 30:43.760
还是同一个li

30:43.860 --> 30:46.960
我们现在要求的是每一次点击创建新的li

30:47.560 --> 30:49.260
通过这个代码创建一个新的li

30:49.760 --> 30:49.960
好

30:49.960 --> 30:50.660
这个li

30:50.660 --> 30:51.860
我把加到哪里去了

30:51.860 --> 30:53.160
是不加到ul里边去

30:53.560 --> 30:54.860
我们这里获取ul

30:55.260 --> 30:57.860
ul是什么document query selector

30:58.560 --> 30:59.560
什么deal list

31:00.560 --> 31:01.860
那样是选择器吗

31:02.260 --> 31:05.260
把这个ul append child

31:05.860 --> 31:06.460
有些同学说

31:06.460 --> 31:07.760
为什么这个东西写外面呢

31:07.760 --> 31:08.960
这东西能不能写里边

31:09.560 --> 31:10.860
可以可以

31:10.960 --> 31:11.860
但是没必要

31:12.060 --> 31:13.260
因为这样就意味着

31:14.460 --> 31:16.060
你每一次点击

31:16.160 --> 31:17.860
流量器都要去查找一下页面

31:17.960 --> 31:19.860
它查到是需要时间的

31:20.060 --> 31:21.560
你甭认为他一下就出来了

31:21.560 --> 31:22.760
他需要时间的

31:22.860 --> 31:23.960
页面上有这么多元素

31:23.960 --> 31:24.960
他挨在那里去看

31:24.960 --> 31:26.860
哪个元素是满足你的要求

31:27.160 --> 31:28.260
他需要时间的

31:28.360 --> 31:30.060
但是我们无论是点多少次

31:30.060 --> 31:31.360
这个ul是不是固定的

31:31.660 --> 31:31.960
对吧

31:31.960 --> 31:33.660
所以说我没有必要在点击世界里面

31:33.660 --> 31:34.260
去得到

31:34.260 --> 31:35.960
而在外边去得到

31:36.060 --> 31:36.360
这样子呢

31:36.360 --> 31:37.660
每一次点击用的都是同一个

31:37.660 --> 31:39.860
就没有必要去重复的去获取

31:40.260 --> 31:42.160
没有必要重复的去获取这个东西了

31:42.260 --> 31:43.460
获取一次就行了

31:43.760 --> 31:44.860
这些细节大家注意

31:44.860 --> 31:45.660
好

31:45.660 --> 31:47.360
那么ul里边append child

31:47.360 --> 31:47.660
对吧

31:47.660 --> 31:49.160
把这个li加进去完成了

31:50.060 --> 31:50.860
保存看一下

31:51.660 --> 31:53.060
点击你看是不是多了个点了

31:53.060 --> 31:53.960
点击多了个点

31:54.160 --> 31:55.260
那么现在还差个啥

31:55.460 --> 31:56.160
差个啥

31:56.360 --> 31:58.460
什么差了一个就是li里边的内文本

31:58.460 --> 31:58.960
对吧

31:59.060 --> 32:00.360
他里边的内文本

32:00.760 --> 32:01.660
他里边有什么东西

32:01.660 --> 32:02.560
无非就是啥

32:02.660 --> 32:03.660
无非就是给他的什么

32:03.660 --> 32:04.960
in the HTML复制呗

32:04.960 --> 32:06.160
in the text复制吗

32:06.660 --> 32:07.660
复制为啥呀

32:08.660 --> 32:09.360
复制为啥

32:09.660 --> 32:11.260
是复制这个文本框的

32:11.660 --> 32:12.660
文本对吧

32:12.860 --> 32:14.460
复制为这个文本框的文本

32:14.460 --> 32:15.760
所以说我们要得到文本框

32:16.460 --> 32:18.360
imp document

32:19.360 --> 32:20.560
就query us that that吧

32:20.760 --> 32:22.660
因为整个网页只有一个input

32:23.060 --> 32:23.660
拿到

32:24.160 --> 32:25.860
拿到这个文本框的什么

32:26.860 --> 32:28.460
input value

32:28.960 --> 32:30.660
把文本框的文本拿出来

32:30.660 --> 32:32.760
给他的内文本复制就完成了

32:32.860 --> 32:33.860
保存看一下

32:34.060 --> 32:34.760
加一个

32:34.860 --> 32:35.660
加了一个

32:35.760 --> 32:36.360
加一个

32:36.360 --> 32:36.960
加一个

32:37.460 --> 32:37.660
好

32:37.660 --> 32:39.460
现在比方说打个比方

32:40.160 --> 32:41.360
现在拿比方说

32:41.360 --> 32:42.860
我每一次添加之后

32:42.960 --> 32:44.460
我要把这个文本框清空

32:45.060 --> 32:45.760
怎么办

32:46.660 --> 32:47.860
那还不简单吗

32:48.360 --> 32:50.060
value等于空制服串

32:50.460 --> 32:51.260
是不是清空了

32:51.460 --> 32:51.660
对吧

32:51.660 --> 32:53.060
重新给他复制就完成了

32:53.360 --> 32:54.060
再看啊

32:55.160 --> 32:55.960
是不是清空了

32:56.260 --> 32:56.560
对吧

32:56.560 --> 32:57.260
清空了

32:58.560 --> 32:58.760
好

32:58.760 --> 33:00.060
接着还有一个问题

33:00.460 --> 33:03.260
就是如果你没有填东西

33:03.260 --> 33:04.260
像这种没有填东西

33:04.260 --> 33:05.560
我是不允许你添加的

33:06.060 --> 33:07.360
那么这个东西怎么办呢

33:07.860 --> 33:08.760
这个东西咋办呢

33:08.960 --> 33:09.260
好

33:09.360 --> 33:10.860
比方说你判断一下就完成了

33:10.860 --> 33:11.160
对吧

33:11.160 --> 33:12.160
点击的时候干嘛

33:12.160 --> 33:12.860
判断

33:13.460 --> 33:15.160
如果你这个文本框的

33:15.260 --> 33:15.860
值

33:16.360 --> 33:16.660
干嘛

33:16.660 --> 33:17.260
这是个制服串

33:17.260 --> 33:17.760
对不对

33:17.760 --> 33:19.060
制服串是不是有一个圈

33:19.760 --> 33:20.960
去掉守卫空白

33:21.860 --> 33:22.660
忽略掉空格

33:22.660 --> 33:23.760
你可能写了几个空格

33:23.760 --> 33:24.660
这样子也不行

33:24.660 --> 33:26.460
就是看你的具体的要求

33:26.960 --> 33:28.660
如果去掉空格之后

33:29.460 --> 33:30.560
等于空制服串

33:31.160 --> 33:32.060
等于空制服串

33:32.060 --> 33:33.260
或者是这样子

33:33.260 --> 33:35.460
因为空制服串还判定的结果就是啊

33:35.460 --> 33:36.260
就是force

33:37.460 --> 33:39.460
如果去掉了守卫空格之后

33:39.460 --> 33:40.360
你都还没有纸

33:40.360 --> 33:41.360
没有任何东西

33:41.460 --> 33:42.360
那怎么办呢

33:42.760 --> 33:44.060
是不是我们可以用 alert 嘛

33:44.060 --> 33:44.360
对吧

33:44.360 --> 33:46.960
alert 请输入内容

33:47.860 --> 33:49.460
然后整个函数结束

33:50.360 --> 33:51.260
整个函数结束

33:51.260 --> 33:52.760
return 它结束的是哪个函数

33:52.760 --> 33:53.560
是这个函数

33:53.660 --> 33:54.760
这个函数不要再运行了

33:54.760 --> 33:55.260
结束

33:56.260 --> 33:56.460
是吧

33:56.460 --> 33:57.560
判断一下就完事了

33:58.360 --> 33:58.860
点击

33:59.160 --> 33:59.960
请输入内容

34:00.160 --> 34:00.660
对吧

34:01.960 --> 34:04.060
或者是我们再提示有好一点

34:04.060 --> 34:06.260
实际上我们真实项目里边不太会用这个东西

34:06.260 --> 34:07.660
这个东西太丑了

34:07.660 --> 34:08.260
太丑了

34:08.560 --> 34:09.860
我们可以怎么用呢

34:10.260 --> 34:11.160
我们这里呢

34:11.260 --> 34:12.060
比方说

34:12.460 --> 34:13.360
这个p元数

34:13.360 --> 34:13.960
p元数

34:13.960 --> 34:14.860
我给他写个样式

34:15.860 --> 34:16.560
p元数

34:16.760 --> 34:18.960
一个 error 有这个样式

34:18.960 --> 34:20.360
有这么一个样式

34:21.860 --> 34:22.460
看着啊

34:22.460 --> 34:24.360
我给他写上 color red

34:26.260 --> 34:27.260
接下来我干嘛了

34:28.260 --> 34:29.660
我如果是空的话

34:29.660 --> 34:32.360
我就给这个p元数添加上这个样式

34:32.660 --> 34:33.760
给他加上这个样式

34:34.560 --> 34:36.060
给这个p元数加上这个样式

34:36.560 --> 34:38.560
如果不为空的话就没有这个样式

34:39.560 --> 34:41.560
也就是说我这里还要获得p元数

34:42.260 --> 34:45.460
bocument query selector p元数

34:46.160 --> 34:47.360
如果为空的话

34:47.360 --> 34:49.360
没有东西就是错误的情况下

34:49.360 --> 34:49.960
干嘛呢

34:50.060 --> 34:51.260
给这个p的class name

34:51.960 --> 34:52.760
设置为啥

34:52.960 --> 34:53.960
设置为 error

34:54.960 --> 34:56.060
给他设置个内样式

34:56.560 --> 34:58.260
你看我们之前是不是说过可以设置吧

34:58.460 --> 34:58.960
能不能设置

34:58.960 --> 34:59.860
当然可以设置

34:59.860 --> 35:00.760
但是你不能这样子写

35:00.860 --> 35:01.560
你不能这样子写

35:01.560 --> 35:02.160
因为class呢

35:02.160 --> 35:04.260
它是个不是一个合法的标志符

35:04.260 --> 35:05.960
所以说它有所变化

35:05.960 --> 35:07.360
这个属性的名字有所变化

35:07.560 --> 35:08.260
class name

35:08.960 --> 35:10.260
设置为 error error

35:10.860 --> 35:11.760
好 咱们看一下

35:13.160 --> 35:13.960
说没问题了

35:14.260 --> 35:14.560
对吧

35:14.560 --> 35:15.260
没问题了吧

35:15.660 --> 35:16.660
你看就变成红色了

35:16.660 --> 35:17.560
在提示你

35:18.060 --> 35:18.260
好

35:18.260 --> 35:20.360
如果你写的东西的话

35:20.360 --> 35:22.160
你写的东西得点添加过后了

35:22.360 --> 35:24.060
那么把class name

35:24.060 --> 35:24.860
给他去掉

35:25.160 --> 35:26.760
就是如果是正常的情况下

35:26.760 --> 35:28.260
我把class name给他去掉

35:28.660 --> 35:29.460
好 看着啊

35:30.860 --> 35:31.960
点不能点

35:32.360 --> 35:33.160
红色的对吧

35:33.160 --> 35:34.260
好 咱们接着写

35:34.260 --> 35:34.860
点添加

35:34.860 --> 35:35.860
你现在OK了

35:36.460 --> 35:37.060
点添加

35:37.060 --> 35:38.360
再点又是红色的了

35:39.460 --> 35:39.960
有些人说

35:39.960 --> 35:41.860
那能不能我这里写的时候

35:41.860 --> 35:43.860
一写的东西它就变成正常的了

35:43.860 --> 35:44.760
现在还做不到

35:44.860 --> 35:46.160
我们以后讲了事件过后

35:46.160 --> 35:47.360
你才知道怎么来处理

35:48.260 --> 35:48.560
好

35:49.160 --> 35:50.060
这回搞定了啊

35:50.560 --> 35:51.660
这是添加列表

35:52.160 --> 35:53.260
下面这个穿梭框

35:54.860 --> 35:55.360
好

35:56.560 --> 35:57.960
诚哥的现在旅游对吧

35:58.360 --> 35:59.460
蜜蜜花华

36:00.060 --> 36:00.660
蠢蠢

36:01.260 --> 36:02.260
营用红红

36:02.860 --> 36:03.960
这是诚哥的前旅游

36:03.960 --> 36:04.360
坤坤

36:04.360 --> 36:05.660
我不接受律师函

36:05.860 --> 36:06.760
我没有说是谁

36:06.960 --> 36:07.860
他名字要坤坤

36:08.260 --> 36:08.560
好

36:08.560 --> 36:10.160
然后呢这里呢干嘛呢

36:10.360 --> 36:12.760
我们比方说选中这两个点这个

36:12.760 --> 36:13.360
他过去

36:13.760 --> 36:14.460
这两个过去

36:14.560 --> 36:15.760
他变成前旅游了

36:16.560 --> 36:18.160
然后点这个又和好了

36:18.160 --> 36:19.160
又又过来

36:19.260 --> 36:19.860
又过来

36:20.360 --> 36:20.960
原来的意思

36:21.060 --> 36:22.260
我们就要做这么一个效果

36:22.560 --> 36:23.260
就是个按钮

36:23.260 --> 36:24.760
所以说给这四个按钮注册事件

36:24.760 --> 36:24.960
呗

36:27.560 --> 36:28.360
注册事件啊

36:28.560 --> 36:29.960
这里有两个是那个车

36:29.960 --> 36:30.360
对吧

36:30.360 --> 36:31.260
一个是那个车

36:31.460 --> 36:32.260
sale 1

36:32.460 --> 36:33.260
另外一个是那个车

36:33.260 --> 36:33.960
sale 2

36:34.560 --> 36:34.760
好

36:34.760 --> 36:35.960
中间有很多按钮

36:36.060 --> 36:36.260
好

36:36.260 --> 36:37.360
给这些按钮注册事件

36:37.360 --> 36:37.960
第一个

36:38.760 --> 36:39.460
btN

36:41.360 --> 36:42.060
to right

36:42.260 --> 36:42.760
to right

36:42.760 --> 36:43.560
跑右边去

36:45.460 --> 36:47.060
第二个id

36:47.660 --> 36:48.160
啊

36:48.160 --> 36:48.860
btN

36:49.460 --> 36:50.560
to right

36:51.160 --> 36:51.960
跑右边去

36:51.960 --> 36:52.860
o加个o

36:52.860 --> 36:54.360
表示所有跑右边去

36:55.460 --> 36:55.660
好

36:55.660 --> 36:56.160
这个

36:56.960 --> 36:58.260
btN to left

36:58.860 --> 36:59.060
啊

36:59.060 --> 36:59.760
to left

37:01.460 --> 37:02.660
选中的啊

37:02.660 --> 37:03.460
选中的

37:04.060 --> 37:05.060
跑左边去

37:06.060 --> 37:06.560
好吧

37:07.060 --> 37:07.760
然后呢

37:07.860 --> 37:08.460
这里

37:09.960 --> 37:10.660
btN

37:10.860 --> 37:11.060
啊

37:11.060 --> 37:11.760
这干嘛呢

37:12.060 --> 37:13.760
to left

37:13.960 --> 37:14.360
哦

37:15.060 --> 37:15.760
什么四个按钮

37:15.760 --> 37:16.160
对吧

37:16.360 --> 37:16.560
好

37:16.560 --> 37:18.460
咱们首先先别管这么多

37:18.560 --> 37:19.760
先把这四个按钮

37:20.160 --> 37:20.360
啊

37:20.360 --> 37:21.360
给他注册事件啊

37:21.360 --> 37:21.860
拿到

37:22.460 --> 37:22.960
button

37:22.960 --> 37:23.760
btN left

37:24.260 --> 37:24.860
都有什么

37:24.860 --> 37:25.460
document

37:25.760 --> 37:26.260
query

37:26.260 --> 37:26.760
啊

37:26.760 --> 37:28.160
get elements by id

37:28.360 --> 37:29.560
啊id是什么呢

37:29.660 --> 37:30.760
btN left

37:31.360 --> 37:31.760
要不要

37:31.760 --> 37:32.460
to left

37:32.960 --> 37:33.160
啊

37:33.160 --> 37:33.760
to left

37:33.960 --> 37:35.060
跑左边去的按钮

37:35.460 --> 37:35.660
啊

37:35.660 --> 37:36.160
豆耗

37:36.360 --> 37:36.760
啊

37:36.860 --> 37:37.460
挨子篮

37:37.960 --> 37:38.560
一个

37:38.860 --> 37:39.260
两个

37:39.260 --> 37:39.660
三个

37:39.660 --> 37:39.860
四个

37:39.860 --> 37:40.660
一共四个嘛

37:41.260 --> 37:41.560
好

37:41.560 --> 37:42.260
btN

37:44.260 --> 37:44.660
right

37:44.760 --> 37:45.860
跑右边去的按钮

37:46.060 --> 37:46.760
to right

37:48.660 --> 37:48.860
好

37:48.860 --> 37:49.660
btN

37:49.960 --> 37:50.460
什么

37:51.260 --> 37:51.760
neft

37:51.860 --> 37:52.260
o

37:52.860 --> 37:54.260
所有的都跑左边去

37:54.360 --> 37:54.660
好

37:54.660 --> 37:55.260
neft

37:55.560 --> 37:55.960
o

37:56.860 --> 37:57.460
to left

37:57.460 --> 37:57.860
o

37:58.260 --> 37:58.460
好

37:58.460 --> 37:58.960
然后呢

37:59.060 --> 37:59.960
btN right

37:59.960 --> 38:00.360
o

38:01.560 --> 38:02.560
把命名写好啊

38:02.560 --> 38:03.260
不然你写的写的

38:03.260 --> 38:04.660
不知道自己在写啥了

38:04.860 --> 38:05.260
好

38:05.260 --> 38:05.860
to right

38:05.860 --> 38:06.260
o

38:06.360 --> 38:06.560
好

38:06.560 --> 38:07.360
咱再测试一下啊

38:07.360 --> 38:08.760
这几个有没有正确获取

38:09.060 --> 38:09.560
好

38:10.560 --> 38:11.160
啊

38:11.160 --> 38:12.060
btN left

38:12.460 --> 38:13.060
unclick

38:13.060 --> 38:14.160
注册点击时间嘛

38:14.760 --> 38:15.060
啊

38:15.060 --> 38:16.060
注册点击时间

38:17.760 --> 38:18.260
左

38:20.340 --> 38:21.540
btN right

38:22.140 --> 38:22.640
unclick

38:22.640 --> 38:24.240
就是有的时候跑不了啊

38:24.240 --> 38:25.740
有些体力活力是跑不了的

38:25.940 --> 38:26.640
这些东西

38:26.840 --> 38:27.540
反复写吧

38:27.540 --> 38:28.840
反复写多练习一下啊

38:29.240 --> 38:30.140
加深印象

38:30.440 --> 38:31.140
那我都写了

38:31.140 --> 38:31.740
写的快吐了

38:31.740 --> 38:32.440
像这些代码

38:32.940 --> 38:33.440
neft

38:33.440 --> 38:33.940
o

38:34.240 --> 38:34.940
unclick

38:37.340 --> 38:37.740
然后呢

38:37.740 --> 38:38.340
这是

38:39.540 --> 38:40.640
全部左啊

38:40.640 --> 38:41.440
全部左

38:41.540 --> 38:42.040
看一下

38:42.040 --> 38:43.340
最后先测试一下啊

38:43.340 --> 38:43.840
先测试一下

38:43.840 --> 38:45.240
这些事件有没有正常注册

38:45.440 --> 38:45.940
right

38:45.940 --> 38:46.340
o

38:46.640 --> 38:47.340
unclick

38:47.940 --> 38:48.540
啊等于

38:49.240 --> 38:49.940
全部右

38:51.440 --> 38:51.940
console

38:51.940 --> 38:52.440
log

38:52.940 --> 38:53.640
全部右

38:53.640 --> 38:54.440
现在没问题吧

38:54.640 --> 38:55.640
这个都很简单啊

38:57.240 --> 38:58.240
保存看一下啊

38:59.540 --> 39:00.040
检查

39:01.940 --> 39:02.540
嗯

39:02.640 --> 39:03.340
控制台啊

39:03.540 --> 39:05.240
点这个右没问题

39:05.540 --> 39:06.240
全部右

39:06.640 --> 39:07.140
左

39:07.540 --> 39:08.040
全部左

39:08.040 --> 39:08.940
ok 没问题啊

39:08.940 --> 39:09.540
事件

39:10.040 --> 39:10.940
正常注册了

39:11.740 --> 39:12.640
好我们一个个来啊

39:12.640 --> 39:14.040
首先是第一个吧

39:14.140 --> 39:14.740
第一个

39:15.440 --> 39:17.040
点击往往左边好

39:17.440 --> 39:18.740
什么叫往左边跑

39:18.740 --> 39:20.940
是把你左边选中的

39:22.140 --> 39:24.040
哦是把你右边选中的

39:24.340 --> 39:26.040
右边选中的就这个按钮啊

39:26.240 --> 39:26.940
这个按钮

39:27.940 --> 39:30.240
右边选中的放到左边来

39:31.140 --> 39:32.440
是不是这里要分两步

39:32.640 --> 39:35.340
第一步我要获取到右边选中的

39:35.940 --> 39:36.440
对吧

39:36.640 --> 39:38.340
我要获取到右边选中的

39:38.740 --> 39:40.140
然后呢把它放到哪呢

39:40.140 --> 39:41.440
把它加到左边去

39:42.040 --> 39:43.040
好首先第一步

39:43.140 --> 39:44.840
我要获取到右边选中的

39:45.240 --> 39:47.740
获取右边选中的

39:47.940 --> 39:49.740
我们无非就是两个是那个什么

39:49.740 --> 39:50.140
对吧

39:50.240 --> 39:51.040
获取一下啊

39:51.040 --> 39:51.940
两个是那个车

39:52.440 --> 39:53.140
sale 1啊

39:53.140 --> 39:53.840
sale left

39:53.940 --> 39:54.740
左边的那个

39:56.040 --> 39:57.540
quarex那个车啊

39:58.240 --> 39:59.340
啊不是给这个ad

39:59.440 --> 40:00.040
把id

40:00.140 --> 40:01.240
因为他有id的

40:02.240 --> 40:03.940
左边那个下拉列表是sale 1

40:05.540 --> 40:06.240
sale 1

40:07.140 --> 40:08.840
好右边那个下拉列表呢是

40:08.840 --> 40:09.640
右边那个

40:10.240 --> 40:10.840
document

40:10.840 --> 40:12.040
get element by id

40:12.040 --> 40:13.240
啊右边那个是sale 2

40:13.240 --> 40:14.240
把先把它获取到

40:14.240 --> 40:14.940
肯定要用的

40:14.940 --> 40:15.940
对吧肯定要用的

40:16.340 --> 40:18.040
好首先获取到

40:18.640 --> 40:20.740
什么右边那一块

40:20.740 --> 40:22.240
他选中的啊

40:22.240 --> 40:23.240
他选中的

40:23.840 --> 40:24.640
这个元素

40:25.140 --> 40:26.040
啊选中的是啥

40:26.040 --> 40:26.840
选中的是不是

40:26.840 --> 40:27.440
obsync

40:27.440 --> 40:27.940
对吧

40:28.040 --> 40:28.840
是obsync吧

40:29.540 --> 40:30.240
是这个吧

40:30.240 --> 40:30.940
没问题吧

40:31.540 --> 40:31.840
好

40:31.840 --> 40:32.940
接下来我们来看一下啊

40:32.940 --> 40:34.740
一会呢左边也可能选中对吧

40:34.740 --> 40:35.740
左边也可能选中

40:36.040 --> 40:37.240
那既然我们一会呢

40:37.240 --> 40:38.640
要得到左边选中的

40:38.640 --> 40:40.640
一会呢又要得到右边选中的

40:40.940 --> 40:42.340
那我是不是可以写个函数

40:43.540 --> 40:45.340
方可行啊写个函数

40:45.940 --> 40:46.640
get

40:47.440 --> 40:48.440
selected

40:48.540 --> 40:50.540
得到选中的obsync

40:51.740 --> 40:52.840
你给我一个啥呢

40:52.840 --> 40:54.040
给我一个selected

40:54.340 --> 40:54.740
啊

40:56.140 --> 40:58.440
大家注释啊得到某个

40:59.640 --> 41:00.440
selected

41:00.840 --> 41:02.240
元素内部

41:03.240 --> 41:04.740
被选中的

41:05.240 --> 41:05.940
obsync

41:06.140 --> 41:06.740
数组

41:07.140 --> 41:09.040
我把它放到一个数组里边给你返回

41:09.640 --> 41:10.240
可以吗

41:11.240 --> 41:11.840
可不可以

41:11.840 --> 41:12.640
当然可以啊

41:13.040 --> 41:14.040
为什么不可以呢

41:14.640 --> 41:15.640
好怎么来做呢

41:15.940 --> 41:16.640
怎么来做

41:16.640 --> 41:17.840
是不是定一个数组

41:17.840 --> 41:19.640
对吧opts啊定一个数组

41:20.040 --> 41:20.840
然后干嘛

41:20.940 --> 41:22.540
然后得到这里边

41:22.940 --> 41:24.440
你这个下拉列表里边

41:24.440 --> 41:26.040
是不是所有的obsync

41:26.840 --> 41:27.240
啊

41:27.540 --> 41:29.040
得到他所谓的obsync

41:29.240 --> 41:30.740
啊是不是可以通过撬卷

41:30.740 --> 41:31.240
对吧

41:31.340 --> 41:33.240
撬卷来得到他所谓的obsync

41:33.640 --> 41:34.240
没问题吧

41:34.340 --> 41:35.540
当然也可以通过什么

41:36.040 --> 41:36.740
query

41:36.940 --> 41:38.940
selected都行啊都行哦

41:39.240 --> 41:40.040
啊哦

41:40.440 --> 41:40.940
都行

41:40.940 --> 41:42.440
那么我们这里就用撬卷吧

41:43.640 --> 41:44.740
好直接来循环了

41:45.040 --> 41:47.240
循环i等于0 i小于啥

41:47.440 --> 41:48.940
sell的撬卷

41:49.240 --> 41:50.840
但是不能用撬的漏子啊

41:50.940 --> 41:51.640
千万不能用这个

41:51.640 --> 41:53.140
因为它还包含文本节点

41:53.140 --> 41:54.040
要用撬卷

41:54.040 --> 41:55.140
它包含指节点

41:55.140 --> 41:56.540
直接来它只能是obsync

41:56.840 --> 41:57.340
对吧

41:57.740 --> 41:58.640
i加加

41:58.840 --> 41:59.540
循环这个

41:59.540 --> 42:00.540
这是不是个查照问题

42:00.540 --> 42:01.840
你看基础很重要

42:01.940 --> 42:03.740
你想基础部分这些东西学会了

42:04.640 --> 42:06.340
那这里还有啥说的呢

42:06.540 --> 42:07.240
还有啥说的呢

42:07.240 --> 42:07.840
没啥说的了

42:07.840 --> 42:09.240
真的真的就没啥说的了

42:09.840 --> 42:10.940
好然后干嘛呢

42:11.940 --> 42:13.040
循环这个撬卷

42:13.340 --> 42:14.840
每一循环一次判断一下

42:14.840 --> 42:15.340
对吧

42:15.540 --> 42:17.740
判断一下这个当前这个obsync

42:18.740 --> 42:20.240
啊他的撬卷

42:20.840 --> 42:22.040
撬卷的obsync

42:22.440 --> 42:22.840
啊

42:23.440 --> 42:25.040
他的指源数指源数是啥

42:25.040 --> 42:26.440
指源数是不是一坨

42:27.040 --> 42:28.240
一坨这个obsync

42:28.240 --> 42:28.740
对吧

42:29.640 --> 42:30.240
没问题吧

42:30.240 --> 42:31.740
指源数世界一坨obsync

42:32.240 --> 42:32.740
对吧

42:33.240 --> 42:34.240
好这个是个数主

42:34.340 --> 42:35.740
得到他当前这个obsync

42:35.740 --> 42:36.840
看一下这个obsync

42:36.940 --> 42:37.940
是不是selected

42:37.940 --> 42:38.840
是不是选中的

42:39.940 --> 42:40.840
是不是选中的

42:40.840 --> 42:42.140
我们之前上课的时候说过

42:42.140 --> 42:42.640
对吧

42:42.840 --> 42:44.040
看一下啊不要写长了

42:44.040 --> 42:44.840
又看不懂了

42:44.840 --> 42:45.640
这是你的下拉丁吧

42:45.640 --> 42:46.540
这是参数啊

42:46.540 --> 42:47.540
到时候我们怎么用呢

42:47.640 --> 42:48.440
比方说点

42:48.640 --> 42:49.840
点靠左的时候

42:49.840 --> 42:51.240
是不是要得到右边选中的

42:51.340 --> 42:52.340
得到右边选中怎么用

42:52.340 --> 42:52.940
就是get

42:53.140 --> 42:53.540
set

42:53.540 --> 42:53.940
selects

42:53.940 --> 42:54.540
obsync是

42:54.540 --> 42:55.840
我就把右边那个给他

42:56.140 --> 42:56.940
set right

42:57.440 --> 42:58.540
把右边那个给他

42:58.740 --> 43:00.640
那么他帮我来找右边那个下拉丁表里边

43:00.640 --> 43:01.640
哪些被选中了

43:02.140 --> 43:03.140
哪些被选中

43:03.440 --> 43:05.240
好找找找找循环找

43:05.340 --> 43:07.640
那么每次循环得到一个啊

43:07.640 --> 43:08.540
得到下拉丁表

43:08.640 --> 43:09.640
当前下拉丁表

43:09.640 --> 43:11.340
他所有的指源数中

43:11.840 --> 43:13.240
当前这个指源数

43:13.340 --> 43:14.340
啊他数主嘛

43:14.640 --> 43:16.440
啊如果这个元素被选中了

43:16.440 --> 43:16.840
怎么样呢

43:16.840 --> 43:18.240
把它加到这个数主里边去

43:18.640 --> 43:19.240
push

43:19.340 --> 43:20.040
加进去

43:20.240 --> 43:21.240
selects

43:21.340 --> 43:22.440
哎说加进去

43:23.140 --> 43:24.540
好最后把这个数主返回

43:25.140 --> 43:26.040
opts

43:26.940 --> 43:27.640
是不是完了

43:28.340 --> 43:29.040
完了吧

43:29.940 --> 43:31.040
好咱们来看一下啊

43:31.040 --> 43:32.240
来测试一下这个函数

43:32.640 --> 43:33.840
首先看看一下左边了

43:33.840 --> 43:35.140
能不能得到左边选中的啊

43:35.140 --> 43:36.140
就是这三个嘛

43:36.340 --> 43:37.740
看一下能不能得到左边选中的

43:38.040 --> 43:39.240
调用这个函数get

43:39.440 --> 43:40.240
因为他是全剧的嘛

43:40.240 --> 43:41.640
可以调用啊

43:42.240 --> 43:43.140
select

43:43.240 --> 43:44.240
把left传进去

43:44.740 --> 43:46.040
看一下能不能得到

43:47.340 --> 43:48.040
能得到吗

43:48.240 --> 43:48.940
是不是空的

43:49.240 --> 43:49.940
那怎么回事了

43:49.940 --> 43:50.940
是不是又要测试了

43:51.240 --> 43:52.240
又要来测试了

43:52.240 --> 43:53.440
到底为什么是空的

43:53.440 --> 43:54.940
好我们来看一下这个循环

43:55.140 --> 43:55.840
哦明白了

43:55.840 --> 43:56.540
看到了啊

43:57.140 --> 43:57.840
这里没写nence

43:57.840 --> 43:58.940
对吧没写nence

43:59.540 --> 44:00.440
好再看啊

44:02.040 --> 44:03.140
好还是空的啊

44:03.440 --> 44:04.040
没关系啊

44:04.040 --> 44:05.140
没关系空就空嘛

44:05.140 --> 44:05.840
啪啥呢

44:06.040 --> 44:07.440
好咱们再来看啊

44:07.440 --> 44:08.440
为什么是空的

44:08.540 --> 44:09.940
看一下有没有进循环了

44:09.940 --> 44:10.940
首先来测试一下啊

44:10.940 --> 44:12.140
我们就用断点调试

44:12.640 --> 44:13.540
用断点调试

44:15.140 --> 44:16.140
好到这边来啊

44:18.460 --> 44:18.960
这里

44:19.660 --> 44:21.460
好这里我们运行一次

44:22.060 --> 44:23.560
好看一下这个sale

44:23.660 --> 44:24.660
sale没问题啊

44:24.660 --> 44:25.960
有这么五个alp型

44:26.160 --> 44:27.960
好最后来我们按f10啊

44:27.960 --> 44:28.960
IZI的调试

44:29.360 --> 44:30.860
好nence5没问题

44:31.160 --> 44:31.860
好得到

44:32.760 --> 44:33.660
当前这个

44:34.260 --> 44:35.160
啊当前这个

44:35.560 --> 44:36.060
啊

44:36.460 --> 44:37.460
有没有被选中啊

44:37.460 --> 44:38.260
有没有被选中

44:38.260 --> 44:39.260
没有被选中对吧

44:39.260 --> 44:40.560
好我们这里直接结束啊

44:40.560 --> 44:41.860
我们重新选选中几个

44:41.960 --> 44:42.860
啊选中三个

44:43.060 --> 44:43.860
重新来运行

44:44.860 --> 44:46.460
哦刚才没有选中明白了

44:46.560 --> 44:47.560
那现在已经得到了对吧

44:47.560 --> 44:48.460
现在已经得到了

44:48.660 --> 44:50.460
啊当前我没有刚才刷新的页面

44:50.460 --> 44:51.160
我没有选中

44:51.160 --> 44:52.360
你看是不是得到三个了

44:52.360 --> 44:53.160
再来看啊

44:54.160 --> 44:55.060
得到三个了对吧

44:55.160 --> 44:56.360
那我现在直选中一个

44:56.960 --> 44:57.860
是不是得到一个了

44:57.960 --> 44:59.560
好再看右边啊右边

44:59.960 --> 45:00.760
调那个韩束

45:00.760 --> 45:02.760
传入这个sell write啊

45:03.460 --> 45:04.060
是不是得到一个

45:04.060 --> 45:05.260
右边目前只有一个吗

45:05.560 --> 45:06.260
选中了一个

45:06.760 --> 45:08.860
好我们就可以得到他选中的opin

45:08.960 --> 45:09.760
他一个数组

45:10.260 --> 45:11.160
好得到啊

45:11.260 --> 45:12.560
opin的数组得到了

45:13.160 --> 45:14.660
好得到数组过后干嘛了

45:15.960 --> 45:18.160
循环将该数组

45:18.960 --> 45:20.360
啊添加到

45:21.060 --> 45:21.760
添加到哪

45:22.160 --> 45:24.060
添加到是不是添加到左边的

45:24.860 --> 45:26.060
左边的什么

45:26.360 --> 45:27.860
就是啊

45:28.660 --> 45:29.560
是那个射中

45:30.060 --> 45:30.460
对吧

45:30.860 --> 45:32.660
把这个数组添加到左边的那个射中

45:32.860 --> 45:33.560
就完事了

45:34.860 --> 45:35.260
好吧

45:35.260 --> 45:36.060
像刚才这里呢

45:36.060 --> 45:37.260
我再顺便说一下啊

45:37.260 --> 45:38.360
有没有别的写法

45:39.460 --> 45:40.660
看着我可以这样子写

45:43.280 --> 45:43.780
敲准

45:43.780 --> 45:44.980
这不是个为数组吗

45:46.280 --> 45:46.780
for

45:47.280 --> 45:48.380
转换成真数组

45:49.080 --> 45:49.880
然后用什么

45:50.280 --> 45:50.880
用什么

45:51.280 --> 45:51.980
filter

45:52.380 --> 45:53.980
filter篩选

45:54.480 --> 45:55.280
篩选啥

45:55.680 --> 45:57.480
篩选那些被选中的

45:57.480 --> 45:59.280
只要那些被选中的就行了

45:59.380 --> 46:01.080
条件是items那个题的

46:01.580 --> 46:02.880
只要那些被选中就行了

46:03.080 --> 46:04.080
语趟结束了

46:04.380 --> 46:05.280
一句话写完

46:05.880 --> 46:07.180
啊可不可以当然可以

46:07.580 --> 46:08.780
当然可以

46:10.080 --> 46:11.080
啊当然可以

46:11.580 --> 46:12.080
好总之呢

46:12.080 --> 46:13.680
我们得到这个选中的数组了啊

46:14.780 --> 46:15.480
好看一下吧

46:16.880 --> 46:17.480
好看一下

46:19.080 --> 46:19.880
是不是还是可以

46:21.080 --> 46:22.280
好得到选中的数组了

46:22.280 --> 46:23.280
然后呢干嘛呢

46:23.480 --> 46:25.280
循环把这个数组里边

46:25.480 --> 46:27.280
这个数组里面不是包含了包含了很多

46:27.880 --> 46:29.080
把这些opening加到

46:29.080 --> 46:31.080
加到左边对吧

46:31.380 --> 46:31.980
那以后呢

46:31.980 --> 46:33.280
还是不是还要加到右边对吧

46:33.280 --> 46:34.280
以后点另外一个按钮的时候

46:34.280 --> 46:35.080
加到右边

46:35.080 --> 46:36.680
ok那是不是我又可以写个函数

46:37.080 --> 46:39.680
通过函数来方便我们来处理一些重复的

46:40.080 --> 46:41.380
减少一些重复的劳动

46:42.480 --> 46:43.180
append

46:43.680 --> 46:44.480
添加到

46:44.780 --> 46:46.280
append to 添加到谁呢

46:46.380 --> 46:47.980
添加到某一个生那个

46:49.380 --> 46:50.080
生那个车动

46:50.380 --> 46:51.380
好你给我什么呢

46:51.480 --> 46:52.580
给我一个数组

46:53.680 --> 46:54.080
sale

46:55.280 --> 46:56.680
第一个参数表示的是

46:57.180 --> 46:57.880
opening是

46:58.780 --> 46:59.780
表示的是什么意思呢

46:59.880 --> 47:00.780
表示的是

47:02.880 --> 47:04.880
就是要添加的

47:05.280 --> 47:06.780
opening数组

47:07.380 --> 47:08.380
是不是可以之前拿到了

47:08.780 --> 47:10.180
好第二个参数表示什么意思呢

47:11.380 --> 47:12.580
要添加

47:13.380 --> 47:13.880
到

47:14.380 --> 47:16.080
添加到的

47:16.480 --> 47:17.680
生那个车元素

47:18.180 --> 47:19.580
生那个车元素动物对象

47:19.880 --> 47:21.480
好整个函数的意思是

47:22.380 --> 47:22.880
将

47:23.280 --> 47:23.980
opening

47:24.480 --> 47:27.280
数组中的东西

47:27.780 --> 47:30.080
东西添加到哪了

47:30.380 --> 47:32.180
指定的生那个车

47:32.580 --> 47:32.980
中

47:34.780 --> 47:35.180
讲到不行

47:35.180 --> 47:36.780
数组中的所谓东西添加到的这里边

47:37.580 --> 47:38.180
好来呗

47:38.680 --> 47:39.180
来呗

47:39.480 --> 47:40.780
好那是不是就循环

47:40.880 --> 47:42.780
对吧循环 i 等于0

47:42.780 --> 47:44.380
i 小于 obts

47:44.680 --> 47:45.280
nance

47:45.680 --> 47:46.280
nance

47:46.580 --> 47:47.480
i加加

47:47.680 --> 47:48.680
对吧 i加加

47:49.280 --> 47:49.680
好

47:50.680 --> 47:51.880
然后呢干嘛呢

47:51.980 --> 47:53.980
每次循环把数组这一项拿到

47:54.680 --> 47:55.280
拿到

47:55.280 --> 47:57.280
然后把这一个opening添加到哪了

47:57.380 --> 47:58.180
所以添加到

47:58.480 --> 47:59.180
生那个车元

47:59.380 --> 47:59.680
对吧

47:59.680 --> 48:01.280
append child

48:01.580 --> 48:02.380
添到这里边

48:03.180 --> 48:06.080
当然如果你为了避免不断的添加

48:06.180 --> 48:06.880
可能会

48:07.180 --> 48:08.380
导致页面重绘

48:08.380 --> 48:09.180
会影响效率

48:09.180 --> 48:10.480
也是不可以见我浪片断

48:10.580 --> 48:10.980
对吧

48:11.080 --> 48:12.080
可以见我浪片断

48:12.380 --> 48:12.880
frag

48:13.280 --> 48:14.180
这些都可以啊

48:14.180 --> 48:14.780
都可以

48:14.980 --> 48:15.580
document

48:15.580 --> 48:16.080
就可以

48:16.180 --> 48:17.380
你可以自由的操作

48:17.480 --> 48:18.580
document fragment

48:18.780 --> 48:19.180
好

48:19.180 --> 48:19.980
那么我们这里呢

48:19.980 --> 48:21.680
先把它添加到frag里边

48:21.880 --> 48:23.280
好 最后呢把这个frag呢

48:23.280 --> 48:24.280
添加到sale里边

48:24.480 --> 48:25.780
append child

48:26.480 --> 48:27.880
添加到这个sale里边

48:28.280 --> 48:28.680
对吧

48:28.780 --> 48:29.480
添加到这个

48:30.280 --> 48:30.980
对 sale里边

48:30.980 --> 48:32.280
把这个片断添加进去

48:33.180 --> 48:33.780
没问题吧

48:34.280 --> 48:35.180
好看一下啊

48:35.880 --> 48:36.880
就循环添加呗

48:37.080 --> 48:38.180
循环添加就完事了

48:39.180 --> 48:39.580
好吧

48:39.580 --> 48:40.880
那这边我该写啥了

48:41.080 --> 48:41.680
该写啥

48:42.380 --> 48:42.880
该写啥

48:42.880 --> 48:44.780
append child

48:44.980 --> 48:45.980
append child

48:46.980 --> 48:47.880
然后

48:48.280 --> 48:49.580
append to select

48:50.080 --> 48:50.980
第一个参数填啥

48:51.180 --> 48:51.780
是不是填

48:52.280 --> 48:52.880
optis

48:53.680 --> 48:54.180
第一个参数呢

48:54.180 --> 48:54.780
填什么

48:54.980 --> 48:55.480
sale

48:57.480 --> 48:57.980
naped

48:58.580 --> 48:59.580
把右边添加到左边

48:59.580 --> 48:59.980
对吧

49:00.080 --> 49:01.480
得到右边选中的

49:01.580 --> 49:02.780
然后把选中的这些东西

49:02.780 --> 49:03.480
添加到左边

49:03.480 --> 49:04.880
你看个代码是不是非常好阅读

49:04.880 --> 49:06.180
有了函数帮助之后

49:06.280 --> 49:07.180
非常好阅读了

49:07.380 --> 49:08.480
保存看一下啊

49:08.680 --> 49:09.780
右边到左边

49:09.780 --> 49:10.780
你看是不是过来了

49:11.380 --> 49:11.980
好过来过来

49:11.980 --> 49:13.580
如果你要取消选动

49:13.980 --> 49:14.980
他目前还是选中状态

49:14.980 --> 49:15.580
因为他的

49:15.680 --> 49:16.880
他的属性并没有变

49:16.880 --> 49:18.480
他的snake的属性并没有变

49:18.580 --> 49:19.480
如果过来之后

49:19.480 --> 49:21.080
要取消选中怎么办呢

49:21.480 --> 49:22.580
要取消选中的话

49:22.580 --> 49:23.380
那么这里

49:23.980 --> 49:25.180
是不是添加之前

49:25.180 --> 49:26.680
你可以先把它干嘛

49:27.380 --> 49:28.180
先把它干嘛

49:28.480 --> 49:30.680
是不是重新设置一下的选中状态

49:30.880 --> 49:31.680
snake的

49:31.880 --> 49:32.880
把它设置为force

49:32.980 --> 49:33.380
对吧

49:34.480 --> 49:35.280
设置属性嘛

49:35.280 --> 49:36.180
把设置为force

49:36.180 --> 49:37.280
保存再看一次啊

49:37.380 --> 49:38.480
选中加过来

49:38.480 --> 49:39.280
是不是没有选中了

49:40.180 --> 49:40.380
好了

49:40.380 --> 49:40.980
现在没有了

49:40.980 --> 49:41.480
啊没有了

49:41.480 --> 49:42.380
现在点了没用了

49:42.580 --> 49:43.380
没有选中了

49:44.280 --> 49:44.480
好了

49:44.480 --> 49:45.180
接下来

49:46.180 --> 49:47.680
从右边到左边可以

49:48.580 --> 49:49.880
那从左边到右边了

49:50.480 --> 49:51.180
是不一样的

49:51.280 --> 49:52.280
把这里换成sell

49:52.280 --> 49:52.680
lapt

49:52.680 --> 49:54.080
你看有了函数帮忙过后

49:54.680 --> 49:56.280
整个程序变得非常简单了

49:56.680 --> 49:57.980
虽然我们这里的作业

49:57.980 --> 49:59.080
就这么一些但是你

49:59.080 --> 50:00.880
这里面可以探讨的东西真的很多

50:00.880 --> 50:01.980
你好好回忆一下

50:01.980 --> 50:02.880
你是怎么想的

50:02.880 --> 50:03.780
你是怎么写代码的

50:03.780 --> 50:05.080
再看一下我是怎么写代码的

50:05.080 --> 50:05.880
对比一下

50:05.880 --> 50:06.880
然后好好想一想

50:07.780 --> 50:08.580
你写代码的时候

50:08.580 --> 50:09.880
有哪些不足的地方

50:09.880 --> 50:11.180
或者说我写代码的时候

50:11.180 --> 50:12.580
有哪些不足的地方都可以想

50:12.880 --> 50:14.080
你只要想的越多

50:14.080 --> 50:15.380
你肯定理解的越深刻

50:16.080 --> 50:17.480
去多去试验

50:17.980 --> 50:18.480
好这里

50:19.080 --> 50:19.780
选中三个

50:20.480 --> 50:20.980
过去

50:22.280 --> 50:22.780
过来

50:23.180 --> 50:23.680
两个

50:23.980 --> 50:24.380
过来

50:24.880 --> 50:25.380
你看

50:25.880 --> 50:26.480
就过来了

50:26.980 --> 50:27.480
没问题吧

50:28.280 --> 50:28.680
过来

50:30.080 --> 50:30.480
过来

50:31.180 --> 50:31.580
过来

50:32.180 --> 50:32.380
好

50:32.380 --> 50:33.980
接下来全部过去全部过来

50:35.880 --> 50:36.680
还用我说吗

50:37.780 --> 50:38.780
还需要第一步吗

50:38.780 --> 50:39.780
这不需要第一步了

50:40.380 --> 50:41.380
不需要第一步了

50:41.780 --> 50:42.280
直接来

50:42.780 --> 50:44.780
全部跑到左边去

50:45.480 --> 50:46.280
selllapt

50:47.280 --> 50:48.680
把谁全跑到左边去

50:48.980 --> 50:50.080
把右边的

50:50.780 --> 50:51.380
撬准

50:52.080 --> 50:52.480
对吧

50:52.880 --> 50:54.280
右边的撬准全跑到

50:54.280 --> 50:55.980
右边的指援数全跑到左边去

50:56.480 --> 50:57.380
好另外一个呢

50:57.380 --> 50:57.980
反正呢

50:58.580 --> 50:59.580
全跑到右边去

50:59.680 --> 51:00.780
就是把左边的

51:01.380 --> 51:01.980
撬准

51:02.180 --> 51:03.380
全跑到右边去

51:03.480 --> 51:04.280
selllapt

51:06.080 --> 51:07.080
传一个数组进去吗

51:07.080 --> 51:07.480
对吧

51:07.480 --> 51:09.280
他又没有要求你必须是真数组

51:09.280 --> 51:10.080
他没有要求

51:10.480 --> 51:11.080
他没有要求

51:11.080 --> 51:11.780
如果有要求的话

51:11.780 --> 51:12.580
你要转换一下

51:13.380 --> 51:13.880
保存

51:17.280 --> 51:17.680
哎

51:18.180 --> 51:18.680
等一下啊

51:19.080 --> 51:19.780
这里有问题

51:20.180 --> 51:20.880
这里有问题

51:21.380 --> 51:21.680
好

51:21.680 --> 51:23.180
我们看一下这里的问题是什么

51:23.380 --> 51:23.580
好

51:23.580 --> 51:24.680
看一下这里问题是什么

51:25.580 --> 51:26.680
那么这里要测试了啊

51:26.680 --> 51:27.180
要测试

51:27.180 --> 51:28.380
打点哪里的问题呢

51:28.780 --> 51:30.880
这个这个地方目前没发现问题啊

51:31.280 --> 51:32.580
点右边的问题

51:32.880 --> 51:33.780
点右边的问题

51:33.780 --> 51:35.280
看一下为什么没有全部过去

51:35.280 --> 51:35.680
好

51:35.880 --> 51:37.080
顺便讲一讲错误调试

51:37.080 --> 51:37.980
看什么来调

51:38.280 --> 51:39.580
这里我们可以用断点调试

51:42.180 --> 51:42.780
用断点调试

51:42.780 --> 51:43.560
当然也可以用什么

51:43.560 --> 51:44.680
console loader来输出

51:45.280 --> 51:45.480
好

51:45.480 --> 51:46.580
现在我们哪里出了问题呢

51:46.580 --> 51:47.480
就点右边了

51:47.480 --> 51:47.880
是吧

51:47.980 --> 51:49.580
点右边的时候全部到右

51:50.280 --> 51:51.980
全部到右出了问题

51:52.280 --> 51:52.480
好

51:52.480 --> 51:53.280
这里打个断点

51:53.980 --> 51:55.480
看一下点全部到右

51:55.880 --> 51:56.780
是不是运行到这了

51:57.180 --> 51:57.280
好

51:57.280 --> 51:58.880
我们来看一下啊左边的切要准

51:58.980 --> 52:00.680
是不是5个没问题吧

52:01.080 --> 52:01.780
是5个吗

52:02.080 --> 52:02.480
啊

52:02.480 --> 52:03.280
看一下一面吧

52:03.680 --> 52:04.380
是5个吗

52:04.580 --> 52:05.280
没问题啊

52:05.480 --> 52:06.080
是5个

52:06.880 --> 52:07.480
再看一下吧

52:07.480 --> 52:08.080
1 3 4 5

52:08.280 --> 52:08.680
好

52:08.680 --> 52:10.280
那么这里的切要准是没问题的

52:10.280 --> 52:10.980
sale write 呢

52:10.980 --> 52:11.780
这个肯定没问题

52:11.780 --> 52:12.180
对吧

52:12.180 --> 52:13.280
sale write 没问题

52:13.280 --> 52:13.880
他里边

52:14.480 --> 52:15.580
有什么有opening

52:15.780 --> 52:15.980
好

52:15.980 --> 52:17.280
接下来按f11

52:17.380 --> 52:19.080
f11进入就不进

52:19.280 --> 52:19.880
点这个

52:20.280 --> 52:21.480
进入这个函数的执行

52:21.480 --> 52:22.980
这个函数执行一定出了问题

52:23.280 --> 52:24.580
进入这个函数的执行

52:24.980 --> 52:25.280
好

52:25.280 --> 52:26.280
得到一个文档片段

52:26.480 --> 52:27.580
得到一个文档片段

52:28.280 --> 52:28.980
片段得到了

52:29.180 --> 52:29.780
这个没啥

52:30.080 --> 52:31.280
然后循环啥呢

52:31.380 --> 52:32.480
循环这个数组的长度

52:32.480 --> 52:33.180
是不是5个

52:33.480 --> 52:33.780
对吧

52:33.780 --> 52:34.580
5个长度

52:34.880 --> 52:35.180
好

52:35.180 --> 52:35.780
然后呢

52:36.680 --> 52:37.180
循环

52:37.180 --> 52:37.980
循环

52:38.180 --> 52:39.180
这个东西呢是

52:39.480 --> 52:40.380
就是sale2

52:40.380 --> 52:41.180
就右边这个

52:41.180 --> 52:41.680
你看

52:41.880 --> 52:42.280
指着这

52:42.280 --> 52:42.880
你看右边

52:42.880 --> 52:43.880
这个一面有阴影

52:43.880 --> 52:44.480
还没有

52:45.080 --> 52:46.080
指着他没问题

52:46.280 --> 52:46.680
好

52:46.680 --> 52:47.380
循环

52:47.380 --> 52:48.380
循环两次

52:48.780 --> 52:49.280
好

52:49.480 --> 52:50.180
循环

52:50.180 --> 52:51.180
循环三次

52:51.380 --> 52:51.480
好

52:51.480 --> 52:52.280
再循环

52:52.480 --> 52:52.780
哎

52:52.780 --> 52:53.580
出了问题了

52:54.280 --> 52:55.180
再循环出了问题了

52:55.180 --> 52:56.580
哎等于三刀子就出问题了

52:57.480 --> 52:58.180
啊不行是

52:59.280 --> 53:00.680
啊明白了明白了

53:01.280 --> 53:02.280
明白哪里出问题了

53:02.680 --> 53:03.180
明白了

53:04.480 --> 53:05.980
因为这个切绝了

53:06.480 --> 53:07.880
他是实实的

53:08.780 --> 53:10.180
他是实实更新的

53:11.180 --> 53:11.880
我们这里呢

53:11.880 --> 53:13.680
把它加到文档片段之后

53:13.980 --> 53:15.480
我们这里把它加到文档片段之后

53:15.480 --> 53:16.680
相当于是减少了

53:16.680 --> 53:18.180
这个这个数组的长度

53:18.480 --> 53:19.180
啊几个例子

53:19.880 --> 53:20.880
啊这里有坑哦

53:21.080 --> 53:21.680
这里有坑

53:22.980 --> 53:24.080
好这里的切绝

53:24.080 --> 53:25.180
他是实实更新的

53:25.180 --> 53:26.680
比方切绝里边有五项

53:26.680 --> 53:27.080
对吧

53:27.280 --> 53:30.080
一二三四五五项

53:30.080 --> 53:30.580
不行

53:31.080 --> 53:31.780
这是切绝

53:32.280 --> 53:33.880
好当我们在循环的时候

53:33.880 --> 53:34.780
怎么循环的呢

53:35.080 --> 53:36.280
当我在循环的时候

53:36.680 --> 53:37.680
是我们这样子

53:37.680 --> 53:38.780
是这样子循环的

53:39.180 --> 53:39.980
就是

53:40.980 --> 53:42.780
循环这个切绝

53:42.780 --> 53:44.680
因为他是传着切绝过来

53:44.680 --> 53:46.180
对吧传的是切绝过来

53:46.380 --> 53:48.180
因此在循环他的时候呢

53:48.780 --> 53:51.080
一旦把它加到另外一个东西里边去了

53:51.080 --> 53:52.380
你看把它加到这个frag

53:52.380 --> 53:53.380
frag里面去了

53:53.580 --> 53:54.780
加到另外一个去了

53:55.180 --> 53:56.480
加一个的时候

53:56.480 --> 53:57.780
他长度就会减1

53:57.980 --> 53:59.580
加一个长度就会减1

53:59.580 --> 54:00.980
好你加了三个的时候

54:00.980 --> 54:02.380
他长度是不是变成二了

54:02.880 --> 54:03.580
变成二的时候

54:03.580 --> 54:04.980
是不是不满着这个循环条件了

54:05.780 --> 54:06.380
没问题吧

54:06.680 --> 54:08.180
他就不满着这个循环条件了

54:08.380 --> 54:09.180
所以说这里呢

54:09.280 --> 54:11.280
他只加了三个就停止循环了

54:12.580 --> 54:14.780
因为他这个不断的在更新变化

54:14.780 --> 54:15.480
不断的更新

54:15.480 --> 54:17.280
我们希望的是不要变化

54:17.380 --> 54:19.380
加第二个家里的

54:19.380 --> 54:20.980
你不要把这个数组变化

54:21.080 --> 54:21.880
那怎么办呢

54:23.980 --> 54:25.180
重新复制

54:26.280 --> 54:27.580
把它转换成真数组

54:28.580 --> 54:29.380
重新复制

54:30.880 --> 54:32.480
那么之前的子就没了

54:32.480 --> 54:33.480
之前的就是

54:33.580 --> 54:35.280
就是之前的引用就没了

54:35.280 --> 54:37.580
把这个参数重新指向一个新数组

54:37.780 --> 54:39.180
这个数组肯定是正常的

54:39.180 --> 54:40.380
数组还没有这个功能

54:40.780 --> 54:42.180
只不过这个窍准有这个问题

54:42.380 --> 54:44.280
好你知道知道问题的原因

54:44.280 --> 54:45.380
你就知道怎么解决了

54:45.880 --> 54:47.080
好保存看一下啊

54:47.780 --> 54:48.880
而现在就没问题了啊

54:48.980 --> 54:49.780
现在没问题了

54:50.080 --> 54:51.380
好全部过去啊

54:51.380 --> 54:53.480
全部过来过去过来啊

54:53.480 --> 54:54.780
选中几个过去

54:55.180 --> 54:56.080
没问题了对吧

54:58.840 --> 55:00.340
过去昆昆又回来了

55:01.840 --> 55:03.240
好好去理解啊

55:03.440 --> 55:04.940
这些好东西好好去理解

55:04.940 --> 55:07.140
你们有这个视频可以反复的看

55:07.240 --> 55:08.040
有这些

55:08.740 --> 55:10.140
代码也可以反复的看

55:10.140 --> 55:12.140
一定要理解清楚了再往后看

55:12.440 --> 55:13.640
前边没有理解清楚

55:13.640 --> 55:14.440
后边一定出问题

55:14.440 --> 55:14.840
就像

55:15.240 --> 55:17.540
这里前边的什么对象里面搞清楚

55:17.540 --> 55:18.140
什么事件

55:18.140 --> 55:18.900
就是什么

55:19.040 --> 55:20.040
函数里面搞清楚

55:20.040 --> 55:20.740
你学这儿

55:20.740 --> 55:21.940
而且肯定非常牢火

55:22.240 --> 55:24.940
很多同学觉得多么对象这里很难

55:25.640 --> 55:26.940
它难的不是多么对象

55:26.940 --> 55:28.140
多么对象一直有难度都没有

55:28.240 --> 55:29.140
真的没难度

55:29.640 --> 55:31.140
是因为难的是前边

55:31.240 --> 55:32.540
前边里没有学懂

55:32.940 --> 55:34.640
你看这些东西看的很牢火

55:35.140 --> 55:35.740
明白了意思吧

55:35.840 --> 55:36.840
好好去看一下啊

55:36.840 --> 55:37.640
好好去练一下

55:38.640 --> 55:39.440
好了啊

55:39.640 --> 55:40.940
这是作业的讲解啊

