WEBVTT

00:00.240 --> 00:03.520
好 剩下的事情就比较轻松愉快了

00:03.520 --> 00:06.520
我希望大家这节课甚至都可以不用听

00:06.520 --> 00:08.120
你自己尝试把它完成

00:08.120 --> 00:10.720
然后再来听一听我是怎么去做的

00:10.720 --> 00:12.360
就剩一个删除了 对吧

00:12.360 --> 00:15.320
删除了这里有几个地方需要删除

00:15.320 --> 00:20.640
一个是这里 修盖

00:20.640 --> 00:26.040
修盖完了之后 如果说你全部把文本删完了

00:26.040 --> 00:29.240
这个时候你按回车 实际上我要把它删除掉了

00:29.280 --> 00:30.880
这个功能我是没有做的

00:30.880 --> 00:35.080
所以说我这里当时在修改这里 我还把它改进一下

00:36.240 --> 00:37.480
Use Edit

00:37.480 --> 00:40.240
你看现在是很好定位到我们要修改的地方

00:40.240 --> 00:42.480
所有关于修改的地方全部在这了

00:43.000 --> 00:46.880
那么跟之前比起来是分散到各种配置里面去找

00:46.880 --> 00:48.240
那是不是要方便的多

00:48.240 --> 00:51.240
现在我们把这个地方修改一下

00:51.240 --> 00:54.720
就是在哪里呢

00:54.720 --> 00:55.880
Done Edit

00:55.880 --> 00:58.640
Done Edit就是完成修改的时候

00:58.880 --> 01:00.320
我还是要做一些处理的

01:01.080 --> 01:02.640
还做什么处理呢

01:02.640 --> 01:04.000
Done Edit

01:04.000 --> 01:06.880
我最好也还是要把这个Tutu给我

01:06.880 --> 01:09.200
因为我还有些小的事情要处理

01:09.200 --> 01:10.880
跟那个Tutu相关的

01:10.880 --> 01:12.920
我这里把稍微改进一下

01:12.920 --> 01:14.360
Done Edit

01:14.360 --> 01:15.720
Tutu 传过来

01:15.720 --> 01:17.720
Tutu 传过来

01:17.720 --> 01:21.200
好 那么这边还有什么事情要做呢

01:21.200 --> 01:23.680
首先Tutu的title

01:23.680 --> 01:26.840
我们要去掉它的守卫空白

01:27.520 --> 01:29.800
Tutu 点title

01:29.800 --> 01:33.400
去把目前的title先拿到吧

01:33.400 --> 01:34.920
先用个边量拿到

01:34.920 --> 01:36.240
title

01:38.080 --> 01:41.800
那么如果说title有值去掉守卫空白之后

01:41.800 --> 01:43.720
有值那么我们重新复制

01:43.720 --> 01:46.320
给Tutu点title重新复制

01:47.800 --> 01:50.120
那么这样子你至少这个问题解决了

01:50.120 --> 01:53.240
空白 回车

01:54.240 --> 01:58.320
去掉守卫空白之后为什么变这样子

01:59.920 --> 02:01.040
这又生气了

02:01.040 --> 02:02.360
哦 这里

02:02.360 --> 02:04.240
不对 这里 这位title

02:04.240 --> 02:07.420
好 再来啊 这边

02:07.420 --> 02:09.780
回车 你看是不是守卫空白是没有的

02:09.780 --> 02:11.460
把这个小的细节改一下

02:11.460 --> 02:13.460
然后呢

02:13.460 --> 02:15.140
如果说对title没有值

02:15.140 --> 02:16.420
是不是我们要做删除

02:16.420 --> 02:17.780
我要把这一项删掉

02:17.780 --> 02:20.260
那怎么删掉呢

02:20.260 --> 02:23.180
其实我们就在这个列表中

02:23.380 --> 02:24.540
在这个列表中

02:25.980 --> 02:28.140
去找一下splice

02:29.900 --> 02:30.980
找一下 找一下什么呢

02:30.980 --> 02:31.700
找一当然

02:33.700 --> 02:35.140
你可以用下标啊

02:35.140 --> 02:36.780
我这里传辆是对象的吧

02:36.780 --> 02:38.300
那我就用这种方式啊

02:39.300 --> 02:40.340
这个点value

02:41.540 --> 02:43.620
看到Ref叫点value啊

02:43.620 --> 02:46.980
然后TutuStrip点value

02:46.980 --> 02:50.670
indexo 是吧

02:50.670 --> 02:51.550
Tutu 看进去

02:51.550 --> 02:52.790
对吧 这样子我们可以通过

02:52.830 --> 02:54.790
他这个表达是在找他的下标

02:54.790 --> 02:55.590
删除哪个下标

02:55.590 --> 02:56.910
删除这个下标

02:56.910 --> 02:58.310
这个下标删除几个呢

02:58.310 --> 02:59.390
删除一个

02:59.390 --> 03:01.350
这样子我就把删除掉了

03:01.350 --> 03:03.390
好 接下来我们再试一下啊

03:03.390 --> 03:04.470
先写上文字

03:06.270 --> 03:08.350
好 然后我们不要把文字删除掉

03:08.350 --> 03:10.550
回车 是不是这项就没了

03:10.550 --> 03:11.110
对吧

03:11.110 --> 03:12.430
我们把这个东西先完成

03:13.790 --> 03:15.270
好 那么这里其实有意

03:15.270 --> 03:16.190
修改的时候呢

03:16.190 --> 03:17.710
其实它里面附带了一个删除功能

03:18.910 --> 03:19.710
好 接下来

03:19.710 --> 03:21.470
我们还有其他地方要删除啊

03:21.470 --> 03:22.630
还有点这个要删除啊

03:22.670 --> 03:23.310
对吧

03:23.310 --> 03:25.070
还有点这个东西也要删除啊

03:25.070 --> 03:25.750
那怎么办呢

03:25.750 --> 03:28.590
我们又去单独看一个专门来控制删除的

03:28.590 --> 03:31.190
UseRemoveTutu

03:31.190 --> 03:32.190
要解释

03:32.190 --> 03:33.350
一样的道理啊

03:33.350 --> 03:33.710
导出

03:34.870 --> 03:35.670
方形

03:35.670 --> 03:37.430
UseRemoveTutu

03:39.230 --> 03:39.790
还是一样

03:39.790 --> 03:41.350
你给我传一个TutuStrip进来

03:42.750 --> 03:46.790
那我这里就不去做那个模板了

03:46.790 --> 03:47.670
先不着急做模板了

03:47.670 --> 03:48.830
我们就直接来吧

03:48.830 --> 03:50.230
其实这里没有什么Ref要导入

03:51.230 --> 03:53.390
其实我这里就要提供两个方法

03:54.390 --> 03:55.190
一个方法呢

03:55.190 --> 03:58.270
是Remove5万

03:58.270 --> 03:59.390
删除一个

04:00.390 --> 04:02.070
就是一个Remove5方法

04:02.070 --> 04:03.030
你给我一个Tutu

04:03.030 --> 04:03.990
我要把它删掉

04:03.990 --> 04:04.670
那么这句话呢

04:04.670 --> 04:06.190
其实跟这边是不是一样的

04:07.270 --> 04:07.870
是不是一样的

04:09.110 --> 04:10.950
就把这个Tutu删掉就行了

04:10.950 --> 04:12.470
当然你觉得这个单码有重复

04:12.470 --> 04:12.670
OK

04:12.670 --> 04:14.990
你可以单独的再把这个函数提到玩了

04:14.990 --> 04:16.270
提到这个Utl里面去

04:16.270 --> 04:17.830
这一调你就完成了

04:17.830 --> 04:18.430
非常简单

04:20.630 --> 04:21.630
然后呢

04:21.630 --> 04:23.630
还有一个还要提供的方法就是

04:23.630 --> 04:28.310
删除掉所有完成的RemoveCompleted

04:28.310 --> 04:29.710
Completed

04:29.710 --> 04:32.030
删除所有完成的人物

04:33.750 --> 04:34.390
不需要参数

04:35.350 --> 04:36.030
那怎么玩呢

04:36.030 --> 04:36.710
这个东西

04:36.710 --> 04:38.710
我们是不是直接非常简单的一个方式

04:38.710 --> 04:39.830
直接给他重新复制

04:39.830 --> 04:40.710
直接玩一双了

04:40.710 --> 04:42.670
我们的列表不就是这个玩意吗

04:42.670 --> 04:44.030
总列表不就是这个玩意吗

04:44.030 --> 04:45.430
给总列表重新复制

04:46.230 --> 04:46.430
好

04:46.430 --> 04:47.990
那么重新复制为什么呢

04:47.990 --> 04:48.590
总列表

04:50.270 --> 04:51.270
ValueFilter

04:52.750 --> 04:53.990
找到那些未完成的

04:56.630 --> 04:58.790
找到那些Completed

04:58.790 --> 05:00.270
没有完成的任务

05:00.270 --> 05:01.070
给他重新复制

05:01.070 --> 05:03.230
那是不是就把完成的全部去了

05:03.230 --> 05:05.190
因为这个数据是想用式的

05:05.190 --> 05:06.470
所以这个东西一改

05:06.470 --> 05:08.830
跟他相关的东西全部就变完了

05:08.830 --> 05:10.230
包括我们之前的计算属性

05:10.230 --> 05:11.270
一样的东西全部变完了

05:11.270 --> 05:13.710
不过这些东西不需要你在这里关心

05:13.710 --> 05:15.230
我们有了CompletedAPI过后了

05:15.230 --> 05:18.350
我们有了更加细腻度的划分

05:18.350 --> 05:20.030
有了细腻度的划分之后呢

05:20.030 --> 05:21.670
我们这一块只关心自己的事情

05:21.670 --> 05:22.870
我改就完事了

05:22.870 --> 05:23.790
改了之后呢

05:23.790 --> 05:26.270
其他地方给他相关的国款不着

05:26.270 --> 05:27.510
然后见面给他相关的

05:27.510 --> 05:28.990
他自然会刷新

05:28.990 --> 05:30.310
我们还有就是

05:31.510 --> 05:33.790
local storage里边他也会自动更新

05:33.790 --> 05:35.310
因为我们之前有watch

05:35.310 --> 05:35.870
对吧

05:35.870 --> 05:37.430
所以我们这里返回

05:37.430 --> 05:38.390
就这么两个方法

05:38.390 --> 05:40.030
removeCompleted

05:41.910 --> 05:42.550
好了

05:42.550 --> 05:43.350
导出过后了

05:43.350 --> 05:44.990
这边一样

05:44.990 --> 05:48.820
导入

05:48.820 --> 05:52.500
useremove to do

05:52.500 --> 05:52.860
好

05:52.900 --> 05:54.180
那么这边导入

05:54.180 --> 05:56.740
useremove to do

05:56.740 --> 05:57.860
to do is rev

05:57.860 --> 05:58.540
翻进去

05:59.940 --> 06:00.220
好

06:00.220 --> 06:01.860
那么剩下的事情就是注册事件了

06:03.180 --> 06:04.180
首先这里一个按钮

06:04.180 --> 06:05.580
按钮一个是点击时间

06:05.580 --> 06:06.260
click

06:06.260 --> 06:06.900
点击的时候

06:06.900 --> 06:07.620
我们要干嘛呢

06:07.620 --> 06:08.700
remove

06:08.700 --> 06:09.740
到to do 翻进去

06:10.380 --> 06:11.100
对不对

06:11.100 --> 06:12.740
还有一个就是clear

06:12.740 --> 06:13.900
clear completed

06:13.900 --> 06:14.940
这里个按钮

06:14.940 --> 06:16.060
点击的时候呢

06:16.060 --> 06:19.380
我要remove completed

06:19.380 --> 06:19.700
对吧

06:20.860 --> 06:21.100
好

06:21.100 --> 06:21.380
行了

06:21.380 --> 06:22.420
咱们来看一下吧

06:22.420 --> 06:24.460
首先我们点这个,就上完了

06:24.720 --> 06:25.760
加一些

06:27.280 --> 06:28.560
加一些,然后点这个

06:29.080 --> 06:29.840
是不是可以删除掉

06:32.400 --> 06:34.700
好,其实现在就剩下最后一件事了

06:35.220 --> 06:35.980
什么事呢

06:36.240 --> 06:40.080
就是当没有任何任务的时候,其实这些东西是不会显示的

06:40.600 --> 06:41.880
包括这个Footer

06:42.640 --> 06:43.680
包括这个Footer

06:43.920 --> 06:46.740
还有包括这个Sexion,上面这个Sexion是不会显示的

06:46.740 --> 06:49.300
那么这件事情很简单,我们这里写上一个V秀

06:51.880 --> 06:53.420
ToodlesRave

06:54.580 --> 06:55.520
Diarrnance

06:57.060 --> 06:59.100
大于零的时候我才显示

06:59.620 --> 07:00.900
下面这个是一样的

07:03.550 --> 07:04.050
对吧

07:04.310 --> 07:05.090
写上就完了

07:06.110 --> 07:07.130
好,看一下吧

07:09.990 --> 07:10.750
你看

07:11.010 --> 07:11.770
现在是不是可以了

07:12.290 --> 07:12.790
对不对

07:13.050 --> 07:15.370
一开始是,如果说你没有任务的话

07:16.390 --> 07:17.150
是不会显示的

07:17.930 --> 07:19.970
那么整个效果就全部做完了

07:21.250 --> 07:23.290
其实大家现在最后我们对比一下

07:23.550 --> 07:27.650
这种方式它的可维护性可阅读性都要高很多的

07:28.110 --> 07:30.410
比方说我这里修改出问题了,我就单看修改

07:30.670 --> 07:31.950
跟其他地方没关系

07:32.210 --> 07:36.830
有什么关系呢,我就单看修改这里的所有东西,所有东西全部在里面,高度聚合

07:37.590 --> 07:39.390
你看一下这个代码,最终形成的代码

07:39.630 --> 07:40.670
叫高度聚合

07:41.430 --> 07:43.730
然后如果说我们看一下以前的

07:43.990 --> 07:46.030
OPPING API的方式,你看一下吧

07:47.830 --> 07:50.390
你这东西不要说提取了,提取都不好提取

07:50.910 --> 07:53.970
我要改修改的功能,你看一下,分散到各处

07:54.490 --> 07:56.790
修改,这一块是跟修改相关的

07:57.510 --> 07:58.530
然后呢

07:59.050 --> 07:59.810
然后

08:00.070 --> 08:01.350
还要到处去找

08:02.110 --> 08:06.210
这个东西跟修改相关的,这个东西跟修改相关的,这个东西跟修改相关的

08:06.470 --> 08:07.250
是不是很麻烦

08:07.750 --> 08:09.550
对吧,而且特别特别难以维护

08:09.810 --> 08:13.650
这个组建越复杂,这个completion API的效果就越明显

08:14.410 --> 08:17.230
所以我们入门阶段的给大家举这么个例子啊

08:17.490 --> 08:19.770
大家跟着做完过后自然会有所体会

08:20.030 --> 08:21.830
将来遇到复杂组建的时候

08:22.350 --> 08:26.690
至少有个方向了,我们可以利用completion API把各方面的事情的高度聚合

08:26.990 --> 08:28.010
提取出去

08:28.270 --> 08:31.870
不管你提不提出去,至少呢,你至少待会儿是写到一块去了

08:32.130 --> 08:33.410
他说维护起来就非常方便

08:34.170 --> 08:37.130
当然呢,五右三还有很多很多的变化

08:37.490 --> 08:40.810
这些变化呢,我们在下一个阶段呢,慢慢去详细的聊

08:41.330 --> 08:44.650
好吧,那么这个阶段呢,我们就到这了啊,大家把这个效果完成

