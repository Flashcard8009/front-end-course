WEBVTT

00:00.880 --> 00:02.400
Hi 各位同学

00:02.400 --> 00:04.560
这节课咱们要学习的是

00:04.560 --> 00:06.600
data site这个组件

00:06.600 --> 00:08.560
那咱们先停一下来看一下

00:08.560 --> 00:11.880
我们已经从title一下学到这个地方了

00:11.880 --> 00:14.960
是不是已经学了很多内容了

00:14.960 --> 00:16.840
希望各位同学能够再接再厉

00:16.840 --> 00:17.200
好吧

00:17.200 --> 00:20.080
我们的site option即将就要学完了

00:20.080 --> 00:22.160
你看后边的内容已经不多了

00:22.160 --> 00:22.840
好

00:22.840 --> 00:24.680
来回到data site身上

00:27.080 --> 00:28.240
data site这个组件

00:28.240 --> 00:29.800
首先我要去说一下

00:29.800 --> 00:32.080
它的内容稍微有些难

00:32.080 --> 00:33.160
稍微有些难理解

00:33.160 --> 00:33.640
各位同学

00:33.640 --> 00:35.720
心里头一定要提前有一个准备

00:35.720 --> 00:36.520
好不好

00:36.520 --> 00:39.240
到时候你就多看两边就够了

00:39.240 --> 00:40.480
来解释一下

00:40.480 --> 00:41.440
data site

00:41.440 --> 00:43.640
那data site这个东西到底是啥呢

00:43.640 --> 00:45.560
就是官方给出的一个解释

00:45.560 --> 00:46.040
是什么呢

00:46.040 --> 00:47.320
是一个数据集

00:47.320 --> 00:48.360
这是它的一个概念

00:49.680 --> 00:51.960
那这个概念大家看到之后

00:51.960 --> 00:53.760
是不是也是很蒙蔽啊

00:53.760 --> 00:55.600
就感觉他又是不再说人话

00:55.600 --> 00:56.240
是不是

00:56.240 --> 00:59.000
那咱就用大白话给他去解释一下

00:59.000 --> 00:59.680
好不好

00:59.680 --> 00:59.960
来

00:59.960 --> 01:02.000
咱们从这个词身上去看

01:02.000 --> 01:02.640
是不是数据

01:02.640 --> 01:03.120
啊

01:03.120 --> 01:04.520
那所以说这个东西

01:04.520 --> 01:06.680
他肯定跟数据是有关系的

01:06.680 --> 01:07.640
有关系的

01:07.640 --> 01:08.840
那我们就想一想

01:08.840 --> 01:11.960
就是咱们在学这个data site之前

01:11.960 --> 01:13.080
这个数据

01:13.080 --> 01:15.560
咱们的数据是放在哪里呢

01:15.560 --> 01:16.440
放在哪里

01:16.440 --> 01:19.040
是不是放在series.data当中啊

01:19.040 --> 01:20.560
这个里头存储的就是

01:20.560 --> 01:22.720
这个图表所对应的这个数据

01:22.720 --> 01:23.320
明白吧

01:24.600 --> 01:25.720
那这个数据呢

01:25.720 --> 01:27.280
现在又来了一个数据集

01:27.280 --> 01:27.800
是不是

01:27.800 --> 01:28.440
好

01:28.440 --> 01:29.000
其实啊

01:29.000 --> 01:29.760
这个数据集

01:29.760 --> 01:30.760
data site呢

01:30.760 --> 01:31.400
说白了

01:31.400 --> 01:35.840
他就是抢了这个series.data人家的工作

01:35.840 --> 01:36.800
而且呢

01:36.800 --> 01:38.840
这个活抢的比较漂亮

01:38.840 --> 01:40.120
那么为啥呢

01:40.120 --> 01:41.680
因为这个data site呢

01:41.680 --> 01:44.040
他要比这个series.data啊

01:44.040 --> 01:45.520
功能要丰富

01:45.520 --> 01:46.320
然后呢

01:46.320 --> 01:47.200
操作起来

01:47.200 --> 01:48.800
还很灵活

01:48.800 --> 01:49.440
所以啊

01:49.440 --> 01:49.960
这个东西呢

01:49.960 --> 01:52.560
就是值得我们去推推荐啊

01:52.560 --> 01:53.400
推荐的

01:53.400 --> 01:54.040
好吧

01:54.040 --> 01:55.360
那这个data site呢

01:55.360 --> 01:55.960
它呢

01:55.960 --> 01:58.520
是从124开始才支持的

01:58.520 --> 01:59.880
在之前的版本呢

01:59.880 --> 02:01.240
它是不支持的

02:01.240 --> 02:01.920
不支持的

02:01.920 --> 02:02.400
好不好

02:03.520 --> 02:05.760
然后关于这个data site呢

02:05.760 --> 02:08.040
官方给出了一个文档叫教程

02:08.040 --> 02:09.120
我们点开之后呢

02:09.120 --> 02:10.200
看一下这个里头呢

02:10.200 --> 02:12.200
是介绍了一下data site

02:12.200 --> 02:13.680
他该如何去使用

02:13.680 --> 02:15.400
那这个教程呢

02:15.400 --> 02:16.320
可能大家看起来

02:16.320 --> 02:18.080
就稍微有一些费劲了啊

02:18.080 --> 02:20.160
他我我所说的这个难度呢

02:20.160 --> 02:21.160
可能就是在这

02:21.160 --> 02:21.720
好不好

02:21.720 --> 02:22.160
但是呢

02:22.160 --> 02:23.400
就是通过今天这节课呢

02:23.400 --> 02:25.120
大家也是能够理解的啊

02:25.120 --> 02:25.400
好

02:25.400 --> 02:27.520
我们来回到这个data site

02:27.520 --> 02:28.320
来说一下啊

02:29.320 --> 02:30.200
来

02:30.200 --> 02:31.400
那我们要讲一下

02:31.400 --> 02:32.120
这个数据了

02:32.120 --> 02:32.760
是不是

02:32.760 --> 02:32.840
啊

02:32.840 --> 02:33.920
那你说这个

02:33.920 --> 02:34.280
呃

02:34.280 --> 02:35.200
data site呢

02:35.200 --> 02:37.560
他要比这个serious.date要好

02:37.560 --> 02:38.440
好在哪里

02:38.440 --> 02:38.760
是不是

02:38.760 --> 02:40.000
咱们先解释一下

02:40.000 --> 02:41.120
先解释一下

02:41.120 --> 02:41.960
那在之前呢

02:41.960 --> 02:42.720
咱们所用的

02:42.720 --> 02:44.000
一直所用的就是

02:44.000 --> 02:46.520
把数据要放在serious.date当中

02:46.520 --> 02:48.600
然后那放到这个里边呢

02:48.600 --> 02:49.720
他有什么特点呢

02:49.720 --> 02:50.840
他有什么特点呢

02:50.840 --> 02:52.000
就是他有缺点

02:52.000 --> 02:53.240
也有优点啊

02:53.240 --> 02:53.680
在这呢

02:53.680 --> 02:55.000
让人家给咱们总结了

02:56.200 --> 02:56.720
首先啊

02:56.720 --> 02:57.680
先说一下优点

02:57.680 --> 02:58.160
优点呢

02:58.160 --> 02:58.680
就是说

02:58.680 --> 02:59.280
简单

02:59.840 --> 03:00.160
哎

03:00.160 --> 03:01.480
就是简单

03:01.480 --> 03:02.160
很直观

03:02.160 --> 03:03.360
数据直接放到这

03:03.360 --> 03:04.000
很直观

03:04.000 --> 03:04.360
然后呢

03:04.360 --> 03:05.280
我们理解起来

03:05.280 --> 03:07.200
也是非常的容易的

03:07.200 --> 03:08.040
非常容易的

03:08.040 --> 03:09.080
然后对于一些

03:09.080 --> 03:12.160
比如说有特殊P号的一些图形啊

03:12.160 --> 03:13.080
这这种图形

03:13.080 --> 03:15.080
他可能对于这个数据要求

03:15.080 --> 03:16.640
是需要有一个定制化的

03:16.640 --> 03:17.400
这么一个操作

03:17.400 --> 03:17.840
是不是

03:17.840 --> 03:18.440
那ok

03:18.440 --> 03:19.320
我们在这呢

03:19.320 --> 03:20.400
能够满足你

03:20.400 --> 03:21.200
因为这个东西呢

03:21.200 --> 03:21.760
其实说白

03:21.760 --> 03:23.360
就是我们手动放上去的

03:23.360 --> 03:24.120
你想怎么放

03:24.120 --> 03:24.960
就怎么放

03:24.960 --> 03:25.400
是吧

03:25.400 --> 03:26.200
他就是简单

03:26.200 --> 03:27.280
非常的简单啊

03:27.280 --> 03:27.640
好

03:28.920 --> 03:29.800
那这个呢

03:29.800 --> 03:31.080
就是他的一个优点

03:31.080 --> 03:32.120
那缺点呢

03:32.120 --> 03:33.280
缺点就是说

03:33.280 --> 03:34.720
我们要为了

03:34.720 --> 03:36.440
匹配这种数据的格式

03:36.440 --> 03:38.960
咱需要去进行一个数据的处理

03:38.960 --> 03:39.480
呃

03:39.480 --> 03:40.360
其实

03:40.360 --> 03:41.960
大家应该心里头都明白

03:41.960 --> 03:43.440
其实我们学到这个地步

03:43.440 --> 03:45.240
每一个组件当中呢

03:45.240 --> 03:46.480
其实我们都需要去

03:46.480 --> 03:46.880
呃

03:46.880 --> 03:49.120
大部分都需要去写上那么一个方法

03:49.120 --> 03:49.760
是不是啊

03:49.760 --> 03:50.640
然后这个方法呢

03:50.640 --> 03:51.080
是干嘛

03:51.080 --> 03:52.720
就是用来处理这个数据的

03:52.760 --> 03:53.640
然后把这个数据呢

03:53.640 --> 03:55.400
处理成一个匹配的格式

03:55.400 --> 03:55.960
最后呢

03:55.960 --> 03:56.720
再丢给谁

03:56.720 --> 03:57.800
丢给这个data

03:57.800 --> 03:58.280
是不是啊

03:58.280 --> 03:59.000
好啊

03:59.000 --> 04:00.120
好多的数据呢

04:00.120 --> 04:01.520
都是通过这种形式呢

04:01.520 --> 04:02.160
去处理了

04:03.280 --> 04:03.880
那这个呢

04:03.880 --> 04:05.200
就是他的一个缺点

04:05.200 --> 04:06.240
就是一个缺点

04:06.240 --> 04:07.680
那这两话

04:07.680 --> 04:08.720
他有什么缺点呢

04:08.720 --> 04:10.240
就是这一点

04:10.240 --> 04:11.360
感觉也不算缺点

04:11.360 --> 04:11.680
好

04:11.680 --> 04:13.040
其实他是一个缺点

04:13.040 --> 04:15.200
相对于我们的data site来说呢

04:15.200 --> 04:17.680
就是他的扩展性就不强了

04:17.680 --> 04:20.000
也就是说他的针对性非常的强

04:20.000 --> 04:21.720
那可能我们的数据结构呢

04:21.720 --> 04:23.360
针对他处理成这样

04:23.360 --> 04:25.000
其他的系列

04:25.000 --> 04:28.120
如果说他跟你的这个结构不一样的话

04:28.120 --> 04:28.800
不好意思

04:28.800 --> 04:30.480
你是使用不了的

04:30.480 --> 04:31.600
使用不了的

04:31.600 --> 04:33.280
而我们这个data site呢

04:33.280 --> 04:35.360
他是有这个功能的

04:35.360 --> 04:37.440
别的也可以使用

04:37.440 --> 04:38.640
所以相比来说呢

04:38.640 --> 04:40.920
那你看他的优势是不是就非常的强啊

04:40.920 --> 04:41.520
非常的强

04:41.520 --> 04:42.200
是不是啊

04:42.200 --> 04:42.800
好

04:42.800 --> 04:43.320
呃

04:43.320 --> 04:43.880
那这个呢

04:43.880 --> 04:45.480
是关于这个serious.date

04:45.480 --> 04:46.800
那我们接下来说一下

04:46.800 --> 04:47.720
这个data site

04:48.960 --> 04:50.680
那用了这个data site之后呢

04:50.680 --> 04:51.680
就是这个数据啊

04:51.680 --> 04:52.200
首先啊

04:52.200 --> 04:53.400
就是他的呃

04:53.400 --> 04:54.680
语法跟这个东西呢

04:54.680 --> 04:55.920
是不一样的

04:55.920 --> 04:56.760
他的语法呢

04:56.760 --> 04:57.560
data site呢

04:57.560 --> 04:58.280
是一个组件

04:58.280 --> 04:58.880
组件的话

04:58.880 --> 04:59.720
跟serious

04:59.720 --> 05:01.160
他们是同一个级别的

05:01.160 --> 05:03.240
都是一个全局性的这么一个组件

05:03.240 --> 05:04.680
那他的放的位置呢

05:04.680 --> 05:06.040
跟他也是同步的

05:06.040 --> 05:06.560
是不是

05:06.560 --> 05:06.800
呃

05:06.800 --> 05:07.440
换句话说

05:07.440 --> 05:08.400
我们的数据呢

05:08.400 --> 05:10.360
由这个地方挪到了哪里呢

05:10.360 --> 05:11.440
挪到了这个地方

05:12.520 --> 05:13.200
那这样的话

05:13.200 --> 05:16.880
其实数据就单独进行拎出来了

05:16.880 --> 05:17.680
那对于数据呢

05:17.680 --> 05:19.320
就是一个单独的一个操作了

05:19.320 --> 05:19.960
你知道吗

05:19.960 --> 05:20.960
就跟这个里边呢

05:20.960 --> 05:22.320
就不再混在一起了

05:22.320 --> 05:23.600
这是一个

05:23.600 --> 05:24.400
然后另外一个呢

05:24.400 --> 05:24.880
就说

05:25.880 --> 05:27.120
那这个数据呢

05:27.120 --> 05:28.960
我们通过data site

05:28.960 --> 05:30.120
去管理之后呢

05:30.120 --> 05:30.640
就是

05:30.640 --> 05:31.360
呃

05:31.360 --> 05:32.880
对于这个数据的格式呢

05:32.880 --> 05:34.000
其实呃

05:34.000 --> 05:35.400
提升了很多

05:35.400 --> 05:36.280
提升了很多

05:36.280 --> 05:37.080
我们在这呢

05:37.080 --> 05:37.680
是不是

05:37.680 --> 05:39.440
他只能去放数组

05:39.440 --> 05:41.040
或说对象之类的

05:41.040 --> 05:42.200
你放完之后呢

05:42.200 --> 05:43.120
在其他的地方

05:43.120 --> 05:43.880
其实是

05:43.880 --> 05:44.160
哎

05:44.160 --> 05:44.720
应该

05:44.720 --> 05:46.440
应该说是不能用的

05:46.440 --> 05:47.280
但是如果说

05:47.280 --> 05:48.880
我们使用了data site之后呢

05:48.880 --> 05:50.920
你其实不用考虑什么呢

05:51.000 --> 05:52.280
他的数据格式

05:52.280 --> 05:52.600
比如说

05:52.600 --> 05:53.920
他要求的是一为数座

05:53.920 --> 05:55.000
还是二为数座

05:55.000 --> 05:56.520
我们用了data site之后呢

05:56.520 --> 05:57.120
你不用管

05:57.120 --> 05:57.640
不用管

05:57.640 --> 05:57.800
哎

05:57.800 --> 05:58.480
你想怎么放

05:58.480 --> 05:59.280
怎么放

05:59.280 --> 06:00.680
把数据通通的放到这

06:00.680 --> 06:01.440
就ok了

06:01.440 --> 06:02.280
然后呢

06:02.280 --> 06:03.680
这个解析的时候呢

06:03.680 --> 06:05.000
他会自动的把

06:05.000 --> 06:06.280
这个格式给你解析成

06:06.280 --> 06:07.240
你想要的

06:07.240 --> 06:08.480
非常的灵活

06:08.480 --> 06:09.200
懂吧

06:09.200 --> 06:09.480
好

06:09.480 --> 06:11.080
这是另外一个

06:11.080 --> 06:11.480
然后呢

06:11.480 --> 06:12.400
还有还有一个

06:12.400 --> 06:13.240
还有一个是什么呢

06:13.240 --> 06:14.440
就是这个数据呢

06:14.440 --> 06:16.080
他灵活的另外一个地方

06:16.080 --> 06:16.640
是哪里呢

06:16.640 --> 06:17.880
就是你看啊

06:17.880 --> 06:18.880
我们的助状图

06:18.880 --> 06:19.240
对不对

06:19.240 --> 06:20.000
这个这个地方

06:20.000 --> 06:20.760
就是一个助状图

06:20.760 --> 06:21.640
助状图的话

06:21.640 --> 06:23.320
那现在你放的所有的数据呢

06:23.320 --> 06:24.840
其实是不是都被解析成

06:24.840 --> 06:25.400
助状图

06:25.400 --> 06:26.240
他助状图

06:26.240 --> 06:27.120
他的一个大小

06:27.120 --> 06:27.480
好

06:27.480 --> 06:28.440
他比较单一

06:28.440 --> 06:28.920
是不是

06:28.920 --> 06:29.280
那好

06:29.280 --> 06:30.160
我们再来看

06:30.160 --> 06:32.280
比如说这个气泡图

06:32.280 --> 06:34.000
我们之前用的三点图气泡图

06:34.000 --> 06:34.520
对不对

06:34.520 --> 06:35.480
那气泡图呢

06:35.480 --> 06:36.360
他的数据格式

06:36.360 --> 06:38.280
是不是就是一个二为数组的啊

06:38.280 --> 06:39.480
这种数据格式

06:39.480 --> 06:40.120
然后呢

06:40.120 --> 06:41.320
我们之前说过啊

06:41.320 --> 06:42.960
这个维度的这么一个概念

06:42.960 --> 06:43.360
一会呢

06:43.360 --> 06:44.600
我们还要去提

06:44.600 --> 06:45.720
那这个里头呢

06:45.720 --> 06:47.080
是不是说气泡图当中呢

06:47.080 --> 06:48.240
至少有啊

06:48.240 --> 06:48.880
三个维度

06:48.880 --> 06:49.240
一个呢

06:49.240 --> 06:49.720
是x

06:49.880 --> 06:50.480
他的位置

06:50.480 --> 06:51.520
外周的一个位置

06:51.520 --> 06:52.440
还有一个是什么呢

06:52.440 --> 06:54.400
远点大小的这么一个位置

06:54.400 --> 06:54.880
是不是

06:55.880 --> 06:56.320
这个呢

06:56.320 --> 06:57.880
是我们必须要给的

06:57.880 --> 06:58.320
对吧

06:58.320 --> 06:58.720
好

06:58.720 --> 07:00.640
那有了这个datesite之后呢

07:00.640 --> 07:03.560
其实我们就灵活到哪个地步了

07:03.560 --> 07:03.720
啊

07:03.720 --> 07:05.280
比如说这个系列啊

07:05.280 --> 07:06.480
或者说这个维度吧

07:06.480 --> 07:08.400
我让他解析成什么

07:08.400 --> 07:10.440
解析成气泡他的一个大小

07:10.440 --> 07:11.080
然后呢

07:11.080 --> 07:12.680
这个维度

07:12.680 --> 07:14.320
我让他解析成这个气泡

07:14.320 --> 07:15.520
他的外周

07:15.520 --> 07:18.600
那当然你也可以让他解析成气泡的大小

07:18.600 --> 07:20.960
让他解析成外周

07:20.960 --> 07:22.320
所以就很随意了

07:22.320 --> 07:24.440
对于那些就是图形比较复杂

07:24.440 --> 07:26.560
他们身上的属性比较多的这种

07:26.560 --> 07:26.760
哎

07:26.760 --> 07:27.480
用这个东西呢

07:27.480 --> 07:28.320
真是happy的

07:28.320 --> 07:29.720
不要不要的了

07:29.720 --> 07:30.120
好吧

07:30.120 --> 07:30.440
这个呢

07:30.440 --> 07:31.680
就是他的一个特点啊

07:31.680 --> 07:32.280
datesite

07:32.280 --> 07:33.360
他的一些优点

07:34.480 --> 07:34.920
ok

07:34.920 --> 07:35.880
那接下来呢

07:35.880 --> 07:36.920
咱们就来试一下

07:36.920 --> 07:37.240
好吧

07:37.240 --> 07:38.200
咱们说了这么多

07:38.200 --> 07:39.080
是不是说了这么多

07:39.080 --> 07:40.320
咱们写下代码

07:40.320 --> 07:41.400
来试一下啊

07:41.400 --> 07:43.600
那来到我的这个页面啊

07:43.600 --> 07:45.680
这个页面已经新建完成了

07:45.680 --> 07:46.360
然后在这呢

07:46.360 --> 07:46.840
是这样的

07:47.840 --> 07:49.520
这个datesite呢

07:49.520 --> 07:51.160
我需要去对比一下

07:51.160 --> 07:53.480
就是我首先先写上一个什么的

07:53.480 --> 07:55.400
先写上一个我们之前的

07:55.400 --> 07:55.640
啊

07:55.640 --> 07:58.600
就写官方网站给出的这么一个诸状图

07:58.600 --> 07:59.200
好不好

07:59.200 --> 08:00.240
然后他的数据呢

08:00.240 --> 08:02.200
还是用传统的方式通过这个

08:02.200 --> 08:04.880
series.data去给他存储

08:04.880 --> 08:06.720
来看一下该如何去写啊

08:06.720 --> 08:06.920
啊

08:06.920 --> 08:11.290
Legend

08:11.290 --> 08:12.490
基础的一些配置啊

08:12.490 --> 08:13.490
这是图粒

08:13.490 --> 08:13.810
是不是

08:13.810 --> 08:15.370
然后twiretip

08:16.970 --> 08:17.410
这个呢

08:17.410 --> 08:18.650
我们都不需要给啊

08:18.690 --> 08:19.530
然后接着呢

08:19.530 --> 08:21.650
就是extrax

08:21.650 --> 08:24.860
exus

08:24.860 --> 08:26.500
那这个extra当中呢

08:26.500 --> 08:27.900
我们放的内容呢

08:27.900 --> 08:29.340
是这样的data

08:29.340 --> 08:29.620
它呢

08:29.620 --> 08:30.580
是一个类目轴

08:30.580 --> 08:31.380
类目轴的话

08:31.380 --> 08:32.180
然后在这儿啊

08:32.180 --> 08:34.940
我们就是拿官方的官方网站

08:34.940 --> 08:36.060
给出的那么一个例子

08:36.060 --> 08:37.180
但是跟他不一样

08:37.180 --> 08:38.540
我们给上一个内容

08:38.540 --> 08:39.100
是类

08:39.100 --> 08:40.340
类目轴的名称叫

08:41.860 --> 08:42.900
iPhone4

08:44.500 --> 08:48.180
然后他总共有四五六七

08:48.180 --> 08:49.100
总共有四个啊

08:49.100 --> 08:50.500
那我就复制一下

08:50.540 --> 08:51.180
一个

08:51.180 --> 08:51.580
两个

08:51.580 --> 08:52.020
三个

08:52.020 --> 08:53.460
四个

08:53.460 --> 08:54.420
把这儿改一下

08:54.420 --> 08:55.220
这是五

08:55.220 --> 08:56.460
这是六

08:56.460 --> 08:57.420
这是七

08:58.580 --> 08:58.980
这个呢

08:58.980 --> 09:00.500
是x轴当中呢

09:00.500 --> 09:02.500
要显示的一个类目啊

09:02.500 --> 09:04.500
那x轴就算完事了

09:04.500 --> 09:05.220
完事之后呢

09:05.220 --> 09:06.660
就是外轴

09:06.660 --> 09:09.860
外轴身上什么东西也没有

09:11.580 --> 09:12.020
然后呢

09:12.020 --> 09:16.860
直接来写这个serious

09:16.860 --> 09:17.780
serious

09:17.780 --> 09:18.220
好

09:18.220 --> 09:19.060
serious

09:19.060 --> 09:19.980
serious当中呢

09:19.980 --> 09:21.700
就是放的就是系列了啊

09:21.700 --> 09:22.660
然后每一个系列呢

09:22.660 --> 09:23.460
都是一个对象

09:23.460 --> 09:24.780
然后放上内

09:24.780 --> 09:25.540
内门的话

09:25.540 --> 09:25.980
在这儿呢

09:25.980 --> 09:27.900
首先给上一个2014

09:28.900 --> 09:30.300
这是一个系列的数据

09:30.300 --> 09:31.820
然后它的类型type呢

09:31.820 --> 09:33.140
就是一个br

09:33.140 --> 09:34.500
就是一个注壮图

09:34.500 --> 09:34.900
是吧

09:34.900 --> 09:35.780
注壮图

09:35.780 --> 09:37.500
然后它有data

09:37.500 --> 09:38.500
那这个data呢

09:38.500 --> 09:41.420
就是我用官方网站给出的这个内容

09:41.420 --> 09:41.900
好不好

09:41.900 --> 09:43.060
咱就直接复制了啊

09:43.060 --> 09:44.100
别耽误时间了啊

09:44.100 --> 09:44.340
来

09:44.340 --> 09:45.540
这是一个啊

09:45.540 --> 09:45.740
来

09:45.740 --> 09:46.260
再来

09:47.780 --> 09:48.340
两个

09:49.700 --> 09:50.300
三个

09:51.420 --> 09:51.940
四个

09:51.940 --> 09:52.620
总共有四个啊

09:53.460 --> 09:53.620
啊

09:53.620 --> 09:54.100
不

09:54.100 --> 09:55.180
我们要三个就够了

09:56.300 --> 09:57.300
2014

09:57.300 --> 09:58.700
2015

09:58.700 --> 09:59.900
2016

09:59.900 --> 10:00.580
2016

10:00.580 --> 10:02.140
然后把这个数据呢

10:02.140 --> 10:08.100
对应一下

10:08.100 --> 10:10.960
复制一下啊

10:10.960 --> 10:11.640
放到这儿

10:11.640 --> 10:11.920
ok

10:11.920 --> 10:12.560
可以了啊

10:12.560 --> 10:13.320
打开一面

10:13.320 --> 10:14.320
看一下啊

10:14.320 --> 10:14.960
那现在呢

10:14.960 --> 10:16.720
这个注壮图是不是就出来了

10:16.720 --> 10:18.320
这个图就有了啊

10:18.320 --> 10:19.320
这是一个最简单

10:19.320 --> 10:20.800
最基本的这么一个操作

10:20.800 --> 10:21.360
是不是

10:21.360 --> 10:22.120
那我们的数据

10:22.120 --> 10:24.400
是不是放在serious.data当中

10:24.400 --> 10:26.120
然后每一个系列当中呢

10:26.120 --> 10:28.360
你需要单独的给它来上这么一个数据

10:28.400 --> 10:28.840
是吧

10:28.840 --> 10:29.160
好

10:29.160 --> 10:30.120
没有毛病啊

10:30.120 --> 10:31.160
然后接下来呢

10:31.160 --> 10:31.800
接下来

10:31.800 --> 10:33.440
我们就需要去写一个什么呢

10:33.440 --> 10:34.080
data site

10:35.160 --> 10:36.040
data site

10:36.040 --> 10:37.760
然后data site的话

10:37.760 --> 10:38.960
这个东西

10:38.960 --> 10:40.960
我需要把它注尸掉

10:40.960 --> 10:41.480
注尸

10:41.480 --> 10:42.760
注尸这个啊

10:42.760 --> 10:44.640
我只需要注尸它俩就行了

10:44.640 --> 10:46.360
然后上面的那些留着啊

10:46.360 --> 10:47.280
上面的那些留着

10:48.360 --> 10:51.880
把x轴跟这个serious data给它注尸了

10:51.880 --> 10:52.640
就行了啊

10:52.640 --> 10:53.440
然后接下来

10:53.440 --> 10:54.120
接下来呢

10:54.120 --> 10:54.960
怎么去做呢

10:54.960 --> 10:55.200
来

10:55.200 --> 10:56.040
首先啊

10:56.040 --> 10:57.600
把这个复制一下

10:57.600 --> 11:00.440
如果说当我去使用data site之后呢

11:00.440 --> 11:02.000
它的结构都要变了

11:02.000 --> 11:03.120
大家一定要注意啊

11:03.120 --> 11:03.960
怎么去变呢

11:03.960 --> 11:04.480
首先啊

11:04.480 --> 11:05.560
这个x轴当中呢

11:05.560 --> 11:07.560
你不需要给数据了

11:07.560 --> 11:08.560
不需要给数据了

11:08.560 --> 11:10.080
只需要给上一个type

11:10.080 --> 11:10.920
这个type呢

11:10.920 --> 11:11.400
是什么呢

11:11.400 --> 11:15.980
就是一个lame轴

11:15.980 --> 11:16.940
category

11:16.940 --> 11:17.580
lame轴

11:17.580 --> 11:18.620
给完这个东西呢

11:18.620 --> 11:19.540
就ok了

11:19.540 --> 11:20.260
ok了

11:20.260 --> 11:21.900
然后这个serious当中呢

11:21.900 --> 11:23.580
你也不需要这么复杂了

11:23.580 --> 11:24.580
把这个删掉

11:24.580 --> 11:25.220
删掉

11:25.220 --> 11:25.700
然后呢

11:25.700 --> 11:26.340
删掉

11:26.340 --> 11:27.260
删掉

11:27.260 --> 11:27.940
删掉

11:27.940 --> 11:28.540
删掉

11:28.540 --> 11:29.540
就留上一个什么呢

11:29.540 --> 11:31.140
就留一个type

11:31.140 --> 11:32.140
就留一个type

11:32.140 --> 11:33.060
就ok了

11:33.060 --> 11:34.180
这个就够了

11:34.180 --> 11:34.780
你看到

11:34.780 --> 11:35.460
所有的数据

11:35.460 --> 11:36.500
是不是从他们身上

11:36.500 --> 11:38.100
全部都剔除掉了

11:38.100 --> 11:38.940
剔除掉了啊

11:38.940 --> 11:39.420
ok

11:39.420 --> 11:40.260
接下来

11:40.260 --> 11:41.980
就到了我们data site出厂了

11:43.420 --> 11:43.900
对不对

11:43.900 --> 11:44.260
好

11:44.260 --> 11:44.780
你数据

11:44.780 --> 11:45.940
上面数据数据

11:45.940 --> 11:46.420
现在呢

11:46.420 --> 11:48.180
要交给我来管理了

11:48.180 --> 11:49.020
我来管理了

11:49.020 --> 11:49.620
好

11:49.620 --> 11:50.620
data site

11:50.620 --> 11:52.180
那这个data site当中呢

11:52.180 --> 11:53.340
我们先来看一下

11:53.340 --> 11:54.460
data site当中呢

11:54.460 --> 11:56.340
它的page参数非常的少

11:56.340 --> 11:57.300
你看总共

11:57.300 --> 11:58.740
这加上这个id呢

11:58.740 --> 11:59.740
1234

11:59.740 --> 12:00.740
总共有四个

12:00.740 --> 12:01.540
配置参数

12:01.540 --> 12:02.460
但是理解起来

12:02.460 --> 12:04.140
确实是有些难度的啊

12:04.140 --> 12:04.660
好

12:04.660 --> 12:05.540
总共有四个

12:05.540 --> 12:06.020
然后呢

12:06.020 --> 12:06.540
这里头呢

12:06.540 --> 12:07.500
有一个这么一个东西

12:07.500 --> 12:08.300
source

12:09.140 --> 12:09.900
这个东西呢

12:09.900 --> 12:10.500
是啥

12:10.500 --> 12:10.860
它呢

12:10.860 --> 12:12.020
就是原始数据

12:12.020 --> 12:13.940
也就是说我们所有的数据呢

12:13.940 --> 12:15.780
其实都是要放到这个里头的

12:15.780 --> 12:16.820
都放到这个里头的

12:16.820 --> 12:17.420
明白吧

12:17.420 --> 12:17.980
source

12:17.980 --> 12:18.340
来

12:18.340 --> 12:18.980
把它拿过来

12:18.980 --> 12:19.860
放到这个地方

12:19.860 --> 12:20.580
然后

12:20.580 --> 12:22.020
大家一定要注意啊

12:22.020 --> 12:23.780
数据要放在这个里边

12:23.780 --> 12:24.220
是不是

12:24.220 --> 12:25.260
然后这个source呢

12:25.260 --> 12:27.620
它其实有三种书写的方式

12:27.620 --> 12:28.020
一会呢

12:28.020 --> 12:29.420
咱们去挨个掩饰啊

12:29.420 --> 12:30.460
我们先来说

12:30.460 --> 12:31.300
第一个

12:31.300 --> 12:33.220
就是咱们用的最多的一种

12:34.220 --> 12:34.620
它呢

12:34.620 --> 12:35.300
是一个数组

12:36.100 --> 12:37.780
然后这个数组当中呢

12:37.780 --> 12:38.860
我们把所有的数据呢

12:38.860 --> 12:39.660
都放进去

12:39.660 --> 12:40.700
然后数组当中呢

12:40.700 --> 12:41.860
就是一个数组

12:41.860 --> 12:43.100
就是一个二维的数组

12:43.100 --> 12:43.860
你知道吗

12:43.860 --> 12:44.420
里头呢

12:44.420 --> 12:45.540
有几条数据呢

12:45.540 --> 12:46.820
你就来几个中复号

12:46.820 --> 12:48.420
就是一个二维的数组

12:48.420 --> 12:49.900
然后这个里头呢

12:49.900 --> 12:50.540
第一行

12:50.540 --> 12:50.940
来

12:50.940 --> 12:55.060
我先来写

12:55.060 --> 12:56.100
productor

12:56.100 --> 12:58.700
APRODUCT

12:58.700 --> 12:59.780
CT就行了啊

12:59.780 --> 13:00.940
不要这个Or

13:00.940 --> 13:01.700
productor

13:03.260 --> 13:04.380
然后

13:04.380 --> 13:05.660
后边跟

13:05.660 --> 13:06.740
2014

13:08.100 --> 13:09.780
2015

13:10.780 --> 13:12.380
2016

13:12.380 --> 13:13.180
我写完之后呢

13:13.180 --> 13:14.180
会跟大家去解释

13:14.180 --> 13:15.060
productor

13:15.060 --> 13:15.540
2014

13:15.540 --> 13:16.100
2015

13:16.100 --> 13:16.700
2016

13:16.700 --> 13:17.140
OK

13:17.140 --> 13:18.340
那他就完事了

13:18.340 --> 13:18.780
完事了

13:18.780 --> 13:19.140
之后呢

13:19.140 --> 13:19.460
这呢

13:19.460 --> 13:20.340
是iPhone

13:20.980 --> 13:22.220
iPhone4

13:22.220 --> 13:22.980
iPhone4呢

13:22.980 --> 13:23.580
后边跟的

13:23.580 --> 13:24.900
就是一堆的数字

13:24.900 --> 13:26.420
那这个数字呢

13:26.420 --> 13:28.580
我需要从这里头去复制

13:28.580 --> 13:29.300
这样吧

13:29.940 --> 13:31.860
我不再去复制了

13:31.860 --> 13:32.180
好吧

13:32.180 --> 13:33.900
我就拿这个官方网站

13:33.900 --> 13:35.300
给出的这个值

13:35.300 --> 13:36.540
他这个地方有

13:36.540 --> 13:37.380
这个地方有

13:37.380 --> 13:39.060
那我就把它复制过来

13:39.060 --> 13:39.860
复制过来呢

13:39.860 --> 13:40.260
在这呢

13:40.260 --> 13:41.380
我就改一下

13:41.380 --> 13:42.180
改一下

13:42.180 --> 13:43.220
稍等一下

13:43.220 --> 13:44.500
这个iPhone4

13:46.020 --> 13:47.300
iPhone4

13:47.300 --> 13:47.780
然后呢

13:49.060 --> 13:49.500
这个呢

13:49.500 --> 13:51.260
是iPhone5

13:53.220 --> 13:56.880
iPhone6

13:56.880 --> 13:57.760
iPhone7

13:58.800 --> 13:59.560
可以了

13:59.560 --> 14:00.160
可以了

14:00.160 --> 14:00.880
好

14:00.920 --> 14:01.720
现在呢

14:02.720 --> 14:03.760
完事了

14:03.760 --> 14:04.320
完事了

14:04.320 --> 14:05.600
现在就完事了

14:05.600 --> 14:06.680
我们先来看效果

14:06.680 --> 14:07.320
行不行

14:07.320 --> 14:08.000
那现在呢

14:08.000 --> 14:08.960
就是这种形式呢

14:08.960 --> 14:09.720
我们来看一下

14:09.720 --> 14:10.800
图有没有

14:10.800 --> 14:11.840
来刷新一下

14:11.840 --> 14:13.000
图是不是就有

14:13.000 --> 14:14.840
但是这个数字好像明显

14:14.840 --> 14:16.040
比刚才要矮一些了

14:16.040 --> 14:16.440
是吧

14:16.440 --> 14:17.520
那这是由于什么呢

14:17.520 --> 14:18.480
由于这个数据

14:18.480 --> 14:19.480
它的值变了

14:19.480 --> 14:21.520
跟上面的数据的值不一样

14:21.520 --> 14:22.440
这个没有关系

14:22.440 --> 14:22.920
好不好

14:22.920 --> 14:24.600
咱主要去看现在

14:24.600 --> 14:26.960
他这套流程已经跑通了

14:26.960 --> 14:27.560
就OK了

14:27.560 --> 14:28.240
好

14:28.240 --> 14:29.280
然后接下来呢

14:29.280 --> 14:30.720
咱们就要去花一些时间

14:30.720 --> 14:31.920
来解释一下

14:31.920 --> 14:32.760
这个src

14:33.880 --> 14:34.560
那说一下

14:34.560 --> 14:36.800
这个src当中的这个数据格式

14:36.800 --> 14:37.960
那这种形式呢

14:37.960 --> 14:40.200
其实就是我们datesite

14:40.200 --> 14:42.240
如果说你使用datesite的话

14:42.240 --> 14:43.200
怎么去管理数据呢

14:43.200 --> 14:43.920
就这么去写

14:43.920 --> 14:44.760
就ok了

14:44.760 --> 14:46.120
这么去ok了

14:46.120 --> 14:47.440
然后这个excess呢

14:47.440 --> 14:47.920
里边呢

14:47.920 --> 14:48.480
你看看

14:48.480 --> 14:49.640
他不需要有data

14:49.640 --> 14:50.760
以及series当中的

14:50.760 --> 14:52.360
也不需要有data

14:53.280 --> 14:54.840
所有的data在哪里呢

14:54.840 --> 14:56.400
都在这个地方

14:56.400 --> 14:59.200
然后解释一下这种

14:59.200 --> 15:00.680
这种书写的格式吧

15:01.680 --> 15:02.760
大家注意听

15:02.760 --> 15:03.880
这个地方很重要

15:03.880 --> 15:04.600
来

15:04.600 --> 15:06.600
首先我们先来看第一行

15:06.600 --> 15:08.120
那第一行是什么

15:08.120 --> 15:10.040
是维度名称

15:10.040 --> 15:11.800
是不是又听到这个维度了

15:11.800 --> 15:12.600
维度这个词

15:12.600 --> 15:13.320
是不是

15:13.320 --> 15:14.120
这个维度呢

15:14.120 --> 15:15.480
我们在这还要详细的

15:15.480 --> 15:16.840
再去解释一下

15:16.840 --> 15:17.320
好

15:17.320 --> 15:18.360
维度名称

15:18.360 --> 15:19.320
那现在呢

15:19.320 --> 15:20.800
总共有四个维度

15:20.800 --> 15:21.280
1

15:21.280 --> 15:21.640
2

15:21.640 --> 15:22.040
3

15:22.040 --> 15:22.520
4

15:22.520 --> 15:23.480
四个维度

15:23.480 --> 15:25.920
他们所对应的维度的名称叫什么呢

15:25.920 --> 15:26.600
project

15:26.600 --> 15:27.160
2014

15:27.160 --> 15:27.680
2015

15:27.680 --> 15:28.760
2016

15:28.760 --> 15:30.120
注意了

15:30.200 --> 15:30.680
第一个呢

15:30.680 --> 15:31.960
就是一个第一行

15:31.960 --> 15:33.720
就是维度的名称

15:33.720 --> 15:34.320
好吧

15:34.320 --> 15:34.840
然后呢

15:34.840 --> 15:35.480
接下来

15:35.480 --> 15:37.240
第二行开始

15:37.240 --> 15:38.160
第二行开始

15:38.160 --> 15:40.240
才是真正的数据了

15:40.240 --> 15:41.280
真正的数据了

15:41.280 --> 15:42.080
明白吧

15:42.080 --> 15:43.400
然后呢

15:43.400 --> 15:45.720
我们在这要去解释一下

15:45.720 --> 15:48.080
这个维度这个概念

15:48.080 --> 15:48.920
其实这个东西呢

15:48.920 --> 15:50.800
我们在之前有详细的说过

15:50.800 --> 15:51.240
是吧

15:51.240 --> 15:51.800
那在这呢

15:51.800 --> 15:54.000
我们还是需要再次的去解释一下

15:54.000 --> 15:54.680
因为这个东西呢

15:54.680 --> 15:56.400
确实非常的重要啊

15:56.400 --> 15:56.920
好

15:56.920 --> 15:58.280
那咱们学到这

15:58.280 --> 16:00.480
其实大家应该都明白

16:00.480 --> 16:01.000
是不是

16:01.000 --> 16:04.800
我们基本上这个所使用到的一些数据

16:04.800 --> 16:05.520
这些图表

16:05.520 --> 16:07.240
到至少到目前来说呢

16:07.240 --> 16:08.440
这些图表一般情况下

16:08.440 --> 16:11.080
是不是都是一个二维的这么一个数组啊

16:11.080 --> 16:12.800
当然这个注壮图是不是

16:12.800 --> 16:13.920
它就是一个一维的

16:13.920 --> 16:14.240
是吧

16:14.240 --> 16:14.840
好

16:14.840 --> 16:18.240
那一般情况下都是一个二维的这么一个数据

16:18.240 --> 16:18.800
是吧

16:18.800 --> 16:20.480
然后二维的数据的时候呢

16:20.480 --> 16:22.560
我们在之前解释这个维度的时候呢

16:22.560 --> 16:24.000
是不是说把数据呢

16:24.000 --> 16:26.000
全部的叠在一起

16:26.000 --> 16:26.760
叠在一起

16:26.760 --> 16:27.280
是不是

16:27.280 --> 16:27.680
好

16:27.720 --> 16:28.480
叠在一起

16:28.480 --> 16:29.880
然后之后呢

16:29.880 --> 16:30.680
这个里头

16:30.680 --> 16:32.960
我们是不是说一列就是一个维度啊

16:32.960 --> 16:34.000
95.8

16:34.000 --> 16:34.880
然后改一下吧

16:36.680 --> 16:37.680
那这个列

16:37.680 --> 16:40.040
这一列是不是就是一个维度啊

16:40.040 --> 16:41.520
就是一个维度啊

16:41.520 --> 16:41.960
然后呢

16:41.960 --> 16:43.680
这一列也是一个维度

16:43.680 --> 16:44.560
也是一个维度

16:44.560 --> 16:45.040
好

16:45.040 --> 16:46.880
也就是说在之前咱们理解的

16:46.880 --> 16:49.360
就是每一列它就是一个维度

16:49.360 --> 16:50.160
那同样的

16:50.160 --> 16:51.200
在我们的这个地方

16:51.200 --> 16:52.880
它也是同样适用的

16:52.880 --> 16:54.040
也就是说在这呢

16:54.040 --> 16:55.760
它也是一个维度

16:55.760 --> 16:57.080
这个也是维度

16:57.080 --> 16:58.520
这个呢也是一个维度

16:58.520 --> 16:59.880
这个呢也是一个维度

16:59.880 --> 17:03.000
也也就是说还是以列为单位啊

17:03.000 --> 17:03.720
是一个维度

17:03.720 --> 17:04.960
当然这个东西呢

17:04.960 --> 17:06.040
它是一个默认的

17:06.040 --> 17:07.600
它是可以修改的啊

17:07.600 --> 17:09.480
可是它是可以修改的啊

17:09.480 --> 17:10.280
然后呢

17:10.280 --> 17:11.320
以列

17:11.320 --> 17:12.800
每一列作为一个维度的话

17:12.800 --> 17:13.160
然后呢

17:13.160 --> 17:15.480
打头的这个打头的这个东西呢

17:15.480 --> 17:15.960
叫什么呢

17:15.960 --> 17:17.560
叫维度的名称

17:17.560 --> 17:18.760
叫维度的名称

17:18.760 --> 17:19.320
然后呢

17:19.320 --> 17:21.720
从第二个开始往下

17:21.720 --> 17:24.720
才是这一个维度所对应的数据

17:24.720 --> 17:25.720
所对应的数据

17:25.720 --> 17:26.480
我们举一个例子啊

17:26.520 --> 17:27.720
比如说producer

17:27.720 --> 17:28.080
好

17:28.080 --> 17:28.720
这一列

17:28.720 --> 17:29.160
是不是

17:29.160 --> 17:29.920
那这一列呢

17:29.920 --> 17:30.760
它是一个维度

17:30.760 --> 17:32.080
是一个维度的数据

17:32.080 --> 17:32.800
然后呢

17:32.800 --> 17:33.960
第一个producer呢

17:33.960 --> 17:34.400
是什么呢

17:34.400 --> 17:35.480
是这个维度

17:35.480 --> 17:36.880
它的对应的名称

17:36.880 --> 17:38.680
然后接下来从第二行开始

17:38.680 --> 17:40.080
iPhone4 567

17:40.080 --> 17:40.880
这几个呢

17:40.880 --> 17:41.520
是什么呢

17:41.520 --> 17:45.040
是这个维度对应的具体的数据

17:45.040 --> 17:45.960
明白吧

17:45.960 --> 17:47.680
然后

17:47.680 --> 17:49.200
这个维度的名称

17:49.200 --> 17:50.160
这个维度的名称

17:50.160 --> 17:51.760
然后这是2014对应的数据

17:51.760 --> 17:52.000
是不是

17:52.000 --> 17:52.840
2015对应了

17:52.840 --> 17:54.760
2016对应的数据啊

17:54.760 --> 17:56.000
维度的名称呢

17:56.000 --> 17:59.280
它会被解析成系列的名称

17:59.280 --> 18:00.320
系列的名称

18:00.320 --> 18:02.640
但是它是从第二个开始

18:02.640 --> 18:03.360
也就是第一个

18:03.360 --> 18:04.400
它不解析

18:04.400 --> 18:05.800
从第二个开始

18:05.800 --> 18:06.600
那换句话说啊

18:06.600 --> 18:08.000
这个20142015

18:08.000 --> 18:10.480
2016这三个年份最终呢

18:10.480 --> 18:11.840
被解析成什么呢

18:11.840 --> 18:13.480
解析成系列了

18:13.480 --> 18:14.200
看到没有

18:14.200 --> 18:14.560
是吧

18:14.560 --> 18:15.600
20142015

18:15.600 --> 18:16.440
2016

18:18.320 --> 18:18.840
ok

18:18.840 --> 18:20.360
然后接下来再来

18:20.360 --> 18:23.000
那第一列第一列注意了

18:23.000 --> 18:23.680
第一列

18:23.680 --> 18:24.600
第一列呢

18:24.600 --> 18:28.240
会被解析成X轴的内幕名称

18:28.240 --> 18:30.360
当然也是不包括第一个的

18:30.360 --> 18:31.360
第一列

18:31.360 --> 18:31.920
看到吗

18:31.920 --> 18:32.680
也换句话说

18:32.680 --> 18:36.960
iPhone4567被解析成X轴当中的内幕

18:36.960 --> 18:37.800
你看iPhone4

18:37.800 --> 18:38.280
iPhone5

18:38.280 --> 18:38.920
iPhone5

18:38.920 --> 18:39.640
iPhone6

18:39.640 --> 18:40.480
iPhone7

18:40.480 --> 18:42.400
在这就能够看到了吧

18:42.400 --> 18:43.280
可以了吧

18:43.280 --> 18:45.160
这个一定要搞清楚了啊

18:45.160 --> 18:46.040
搞清楚了

18:46.040 --> 18:48.840
然后接着再来啊

18:48.840 --> 18:49.640
再来

18:49.640 --> 18:50.920
那第一行

18:50.920 --> 18:52.000
我们刚才说过

18:52.000 --> 18:53.480
它默认是一个什么呢

18:53.520 --> 18:55.280
就是每一个系列

18:55.280 --> 18:56.040
不是每一个系列

18:56.040 --> 18:58.280
每一个维度对应的一个名称

18:58.280 --> 18:58.920
是不是

18:58.920 --> 18:59.440
那好

18:59.440 --> 19:03.960
那第一行是否是维度名

19:03.960 --> 19:05.880
也是可以设置的

19:05.880 --> 19:07.120
也是可以设置的

19:07.120 --> 19:08.640
通过什么设置呢

19:08.640 --> 19:11.480
通过date site当中的一条属性

19:11.480 --> 19:13.080
这条属性的名字叫什么呢

19:13.080 --> 19:15.720
叫src header

19:15.720 --> 19:15.960
这个

19:17.080 --> 19:17.560
好

19:17.560 --> 19:20.680
然后我把这条属性拿过来丢到这

19:20.680 --> 19:22.160
它有两个值

19:22.200 --> 19:23.360
要么为处

19:23.360 --> 19:24.640
要么为false

19:24.640 --> 19:25.320
要么为处

19:25.320 --> 19:26.400
要么为false

19:26.400 --> 19:26.960
知道吗

19:28.160 --> 19:31.160
然后当它的值为处的时候

19:31.160 --> 19:33.000
它其实默认就是一个处

19:33.000 --> 19:33.800
默认就是一个处

19:33.800 --> 19:34.320
我们来看

19:34.320 --> 19:35.080
刷新一下

19:35.080 --> 19:36.880
是没有任何的变化的

19:36.880 --> 19:38.080
没有任何的变化的

19:38.080 --> 19:38.840
维度的名

19:38.840 --> 19:40.360
你看还是这些年份

19:40.360 --> 19:40.760
是吧

19:40.760 --> 19:41.560
好

19:41.560 --> 19:44.640
那当它的值为处的话

19:44.640 --> 19:45.560
表示的意思

19:45.560 --> 19:49.800
就是第一行会被解析成维度名

19:49.800 --> 19:53.720
然后数据其实是从第二行开始的

19:53.720 --> 19:55.240
从第二行开始的

19:55.240 --> 19:55.880
好吧

19:55.880 --> 19:58.040
那如果说它的值为false的话

19:58.040 --> 19:59.200
我们来看一下

19:59.200 --> 19:59.920
刷新

19:59.920 --> 20:02.400
这个表其实已经有变化了

20:02.400 --> 20:03.880
而且变化很大

20:05.400 --> 20:06.000
是不是

20:06.000 --> 20:06.400
好

20:06.400 --> 20:07.080
你看

20:07.080 --> 20:08.360
那我们注意

20:08.360 --> 20:10.880
这个地方已经没有图立了

20:10.880 --> 20:11.440
是吧

20:11.440 --> 20:12.240
没有图立了

20:12.240 --> 20:14.040
然后再来就是这个地方

20:14.040 --> 20:14.960
x轴当中

20:14.960 --> 20:16.840
现在好像增加了一条数据

20:16.840 --> 20:17.520
productor

20:18.720 --> 20:19.040
你看

20:19.080 --> 20:20.840
这个刚才的4到7

20:20.840 --> 20:22.240
这是我们刚才有的

20:22.240 --> 20:24.880
现在在它的前面增加了一个productor

20:24.880 --> 20:26.920
那其实原因就在这

20:26.920 --> 20:28.360
那Sorcerer's Heider

20:28.360 --> 20:30.200
它的值为false的时候

20:30.200 --> 20:32.680
就说明现在第一行

20:32.680 --> 20:35.440
它不被解析成维度名了

20:35.440 --> 20:38.400
它被解析成正常的数据了

20:38.400 --> 20:39.200
换句话说

20:39.200 --> 20:40.960
我们从这开始

20:40.960 --> 20:43.000
这一坨都是数据

20:43.000 --> 20:44.120
都是数据

20:44.120 --> 20:44.880
明白吗

20:44.880 --> 20:46.360
那都是数据的话

20:46.360 --> 20:47.160
那第一列

20:47.160 --> 20:49.000
它还是被解析成什么的

20:49.000 --> 20:50.600
x轴当中的肋骨质

20:50.600 --> 20:51.480
那你看到没有

20:51.480 --> 20:53.440
productor是不是必然会出现

20:53.440 --> 20:54.560
然后后边跟的

20:54.560 --> 20:57.480
就是它所对应的三个柱子的数据

20:57.480 --> 20:59.200
2014 1516

20:59.200 --> 20:59.960
那这个数据

20:59.960 --> 21:00.640
我们来看一下

21:00.640 --> 21:01.360
是不是已经

21:01.360 --> 21:04.000
现在这个柱子已经干到这个2000那个位置了

21:04.000 --> 21:04.640
是不是

21:04.640 --> 21:06.280
2014 1516

21:06.280 --> 21:07.040
明白了吧

21:07.040 --> 21:09.840
而他们的值是40多

21:09.840 --> 21:11.080
不超过100

21:11.080 --> 21:13.000
随手就非常的矮

21:13.000 --> 21:13.720
好

21:13.720 --> 21:15.680
这个就是Sorcerer's Heider

21:15.680 --> 21:16.640
它的一个作用

21:16.680 --> 21:17.520
它的一个作用

21:19.120 --> 21:19.760
那最后

21:20.120 --> 21:21.480
咱们来说一下

21:21.480 --> 21:22.640
这个维度

21:22.640 --> 21:23.040
对不对

21:23.040 --> 21:24.440
我们现在刚才不是说

21:24.440 --> 21:26.120
这个维度是一列一列的

21:26.120 --> 21:26.960
就是一个维度

21:26.960 --> 21:27.840
那这个东西

21:27.960 --> 21:29.880
其实它是可以改的

21:29.880 --> 21:31.480
我们刚才已经说过

21:31.480 --> 21:32.760
然后我想说的是

21:32.760 --> 21:37.720
我们也可以把一行作为一个维度

21:37.720 --> 21:40.120
那如果说把一行作为一个维度的话

21:40.120 --> 21:43.720
那刚才咱们说的那些解析的关系

21:43.720 --> 21:45.160
他们就变了

21:45.160 --> 21:45.920
他们就变了

21:45.960 --> 21:46.440
好不好

21:46.440 --> 21:47.840
这个东西咱们一会

21:48.080 --> 21:48.960
后边再去说

21:48.960 --> 21:50.080
后边再去说

21:50.080 --> 21:51.360
然后在这说到这

21:51.360 --> 21:52.640
咱先停下来

21:52.640 --> 21:54.240
做一个简单的总结

21:54.240 --> 21:54.640
好不好

21:54.640 --> 21:55.600
总结一下

21:55.600 --> 21:56.320
总结一下

21:56.320 --> 21:59.280
就是每一列是一个维度

21:59.280 --> 22:00.440
这个列

22:00.440 --> 22:00.840
是吧

22:00.840 --> 22:02.120
它就是一个维度

22:02.120 --> 22:02.840
它是一个维度

22:03.040 --> 22:03.920
一列

22:03.920 --> 22:04.920
就是一个维度

22:04.920 --> 22:07.400
然后每一列的第一个

22:07.400 --> 22:08.120
是什么

22:08.120 --> 22:09.560
维度名

22:09.560 --> 22:10.360
维度名

22:10.360 --> 22:12.480
那这个维度名是Product

22:12.480 --> 22:13.920
这个维度名是2014

22:13.920 --> 22:14.280
是吧

22:14.280 --> 22:15.240
依此雷推

22:15.360 --> 22:16.840
然后这个维度名

22:16.840 --> 22:19.840
最终会被解析成系列名

22:20.640 --> 22:21.480
我把它还原

22:21.480 --> 22:22.120
还原成处

22:26.150 --> 22:27.150
再来看刷新

22:27.750 --> 22:30.710
维度名被解析成了系列名

22:30.710 --> 22:31.390
好吧

22:31.390 --> 22:32.430
然后接下来

22:32.430 --> 22:33.310
第一列

22:33.310 --> 22:33.870
第一列

22:33.870 --> 22:35.710
也就是这个第一列

22:35.710 --> 22:37.590
第一列被解析成

22:37.590 --> 22:40.230
X轴当中的内幕名称

22:40.230 --> 22:41.110
内幕名称

22:41.110 --> 22:42.110
在他们解析的时候

22:42.270 --> 22:43.750
都不包括第一个

22:43.750 --> 22:44.950
都不包括第一个

22:44.950 --> 22:45.470
好

22:45.470 --> 22:47.070
那关于这个维度这块

22:47.070 --> 22:48.150
以及Source

22:48.150 --> 22:49.470
它对应的一些数据结构

22:50.270 --> 22:52.030
我们就解释到这里了

22:52.030 --> 22:52.910
解释到这里了

22:52.910 --> 22:53.590
好不好

22:53.590 --> 22:54.390
然后

22:55.230 --> 22:56.470
那解释完之后

22:56.590 --> 22:57.150
接下来

22:57.150 --> 22:58.030
我们再来说一下

22:58.030 --> 22:59.870
这个维度名这个东西

22:59.870 --> 23:00.990
那这个维度名

23:00.990 --> 23:04.110
它其实也是可以单独的去定义的

23:04.110 --> 23:05.310
可以单独的去定义

23:05.310 --> 23:05.950
通过什么

23:05.950 --> 23:07.510
通过这条属性

23:07.510 --> 23:08.110
通过什么

23:08.110 --> 23:08.790
通过这个

23:08.790 --> 23:09.750
顶面审

23:09.750 --> 23:10.710
顶面审

23:11.350 --> 23:11.950
来

23:11.950 --> 23:12.790
复制一下

23:12.790 --> 23:13.870
把它拿过来

23:13.870 --> 23:14.430
拿过来

23:14.430 --> 23:16.070
然后我们放到哪里

23:16.070 --> 23:16.710
放到这

23:17.590 --> 23:18.430
放到这

23:18.430 --> 23:19.350
你刚才不是说

23:19.350 --> 23:19.870
这个东西

23:19.870 --> 23:21.950
它的第一行被解析成了一个维度名

23:21.950 --> 23:22.310
是不是

23:22.310 --> 23:22.870
那现在

23:22.870 --> 23:23.270
ok

23:23.270 --> 23:25.310
这个东西可以单独的去定义

23:25.310 --> 23:26.470
单独的去定义

23:26.470 --> 23:27.310
那怎么去定义

23:27.310 --> 23:29.230
直接在这个里边去定义就行了

23:29.230 --> 23:30.830
那我把它复制过来

23:30.830 --> 23:31.350
复制过来

23:31.350 --> 23:32.150
放到这

23:32.150 --> 23:34.550
这个里头放的就是维度的名称

23:34.550 --> 23:35.790
那么维度的名称

23:35.790 --> 23:37.230
然后在这要注意了

23:37.230 --> 23:39.190
当你去使用Dimension

23:39.190 --> 23:40.590
这个东西去定义什么

23:40.590 --> 23:41.630
维度名称的时候

23:41.630 --> 23:42.430
那ok

23:42.430 --> 23:44.230
它就不会再去

23:44.230 --> 23:47.830
这个sworth的第一行当中去取了

23:47.830 --> 23:48.550
明白吧

23:48.550 --> 23:49.990
也就是你在这定义之后

23:49.990 --> 23:51.390
这个地方就失效了

23:51.390 --> 23:52.790
那我们来验证一下

23:52.790 --> 23:54.670
现在是没有任何的区别的

23:54.670 --> 23:55.750
没有任何的区别

23:55.750 --> 23:58.030
然后我在这给它改一下

23:58.030 --> 23:58.510
比如说

23:58.510 --> 23:59.670
这改成一个年

23:59.670 --> 24:00.590
2015年

24:00.590 --> 24:01.950
这个也是年

24:01.950 --> 24:03.470
这个也是年

24:03.470 --> 24:04.030
也是年

24:04.030 --> 24:04.550
ok

24:04.550 --> 24:05.190
完了之后

24:05.270 --> 24:05.990
我们来看

24:05.990 --> 24:07.390
你不是说维度的名称

24:07.390 --> 24:09.590
最终会被解析成系列名吗

24:09.590 --> 24:10.390
那来看一下

24:10.430 --> 24:11.590
他们会不会变

24:11.590 --> 24:12.630
刷新走

24:12.630 --> 24:13.790
有没有

24:13.790 --> 24:14.830
2014年

24:14.830 --> 24:16.670
后边是不是都加了一个年

24:16.670 --> 24:18.710
是不是已经解析成功了

24:18.710 --> 24:19.550
解析成功了

24:19.550 --> 24:20.110
好吧

24:20.710 --> 24:21.430
Dimension

24:23.070 --> 24:23.830
然后再来

24:23.830 --> 24:24.870
就是这个里头

24:25.030 --> 24:26.670
我们去放的这些数据

24:26.830 --> 24:28.670
它可以是自付串

24:28.670 --> 24:29.510
也可以是什么

24:29.510 --> 24:31.270
也可以是一个对象

24:31.270 --> 24:32.190
是对象的话

24:32.190 --> 24:34.670
你看就不换行了吧

24:34.670 --> 24:36.350
它里头接收几个参数

24:36.350 --> 24:37.230
name

24:37.230 --> 24:38.270
name是啥

24:38.270 --> 24:39.310
就是这个名字

24:39.350 --> 24:40.670
然后还有一个Type

24:41.190 --> 24:41.990
Type是什么

24:41.990 --> 24:43.510
Type是一个数据

24:43.510 --> 24:44.110
它的一个

24:44.110 --> 24:46.350
这个是维度

24:46.350 --> 24:47.630
它对应的一个类型

24:47.630 --> 24:50.190
这个Type的Number

24:52.540 --> 24:53.700
我们给上一个Number

24:53.700 --> 24:54.140
好

24:54.140 --> 24:54.860
给完之后

24:54.860 --> 24:55.660
我们先来看

24:55.660 --> 24:57.620
它其实是没有任何的变化的

24:57.740 --> 24:58.380
刷新一下

24:58.380 --> 24:59.180
没有任何的变化

24:59.180 --> 24:59.700
对不对

24:59.700 --> 25:01.180
然后这个地方

25:01.260 --> 25:02.980
就是我变成对象之后

25:03.180 --> 25:03.580
你看

25:03.580 --> 25:04.100
Name

25:04.100 --> 25:05.100
然后以及Type

25:05.100 --> 25:05.540
是不是

25:05.540 --> 25:06.660
那关于这个Type

25:06.900 --> 25:07.660
我们来看

25:07.660 --> 25:09.020
人家这有解释

25:10.020 --> 25:10.860
有解释

25:14.260 --> 25:15.420
在这个地方

25:15.420 --> 25:16.420
在这个地方

25:16.420 --> 25:17.500
然后Type

25:17.500 --> 25:19.820
它是可以取以下的这些值

25:19.860 --> 25:21.260
然后这些Type

25:21.300 --> 25:22.220
其实就是说

25:22.740 --> 25:24.420
我们大多数的情况下

25:24.420 --> 25:25.740
是不需要去设置的

25:25.740 --> 25:27.020
维度它的一个类型

25:27.020 --> 25:28.860
因为它会自动的去判断

25:28.860 --> 25:30.060
自动的去判断

25:30.060 --> 25:31.060
可能有的时候

25:31.100 --> 25:32.740
比如说数据为空

25:32.780 --> 25:35.140
你可能需要去指定一下

25:35.180 --> 25:35.860
懂吗

25:35.860 --> 25:36.780
然后这个Number

25:36.780 --> 25:37.580
以及它们的

25:37.580 --> 25:39.020
几种类型在这

25:39.620 --> 25:40.820
标了很清楚

25:41.660 --> 25:42.620
大家有兴趣的

25:42.620 --> 25:43.660
你们去看一下

25:43.660 --> 25:44.180
就行了

25:44.180 --> 25:44.740
好不好

25:44.740 --> 25:46.540
这咱就不再去解释了

25:46.540 --> 25:47.780
因为大多数情况下

25:47.780 --> 25:49.420
我们并不需要去设置它

25:49.420 --> 25:49.980
好不好

25:49.980 --> 25:50.460
好

25:50.740 --> 25:52.180
这个就是关于Type

25:52.380 --> 25:53.220
关于这个Type

25:54.580 --> 25:55.860
然后接下来

25:55.860 --> 25:56.540
我们再来

25:56.660 --> 25:57.580
接下来再来

25:58.820 --> 26:00.580
这一块我们说完了

26:00.580 --> 26:02.220
最后咱们要说的是什么

26:02.860 --> 26:03.740
回过头

26:03.740 --> 26:05.460
我们在移上来的时候说过

26:05.500 --> 26:06.740
它的数据方式

26:06.740 --> 26:07.860
总共有三种

26:08.180 --> 26:09.860
这个只是其中的一种

26:09.860 --> 26:10.380
来

26:10.380 --> 26:10.860
接下来

26:10.860 --> 26:11.940
咱们把那两种

26:11.980 --> 26:14.020
跟大家去解释一下

26:14.500 --> 26:15.300
解释一下

26:15.300 --> 26:16.140
这个Source

26:16.140 --> 26:17.380
这个Source里边

26:18.180 --> 26:20.180
现在是一种数组的形式

26:20.180 --> 26:20.580
是吧

26:20.580 --> 26:22.140
那我可以干嘛

26:22.140 --> 26:23.740
可以变成一个对象的形式

26:23.740 --> 26:24.900
那这个对象的形式

26:24.900 --> 26:25.380
是这样的

26:25.380 --> 26:25.780
就是

26:26.300 --> 26:27.660
首先Product

26:27.780 --> 26:28.980
那这个Product

26:28.980 --> 26:30.180
对应的值是什么

26:30.180 --> 26:31.980
是iPhone4

26:31.980 --> 26:32.580
iPhone4

26:33.100 --> 26:34.540
然后接着就是

26:34.660 --> 26:35.180
什么的

26:35.180 --> 26:36.780
后边跟2014

26:36.780 --> 26:39.020
那这个把2014作为一个k

26:39.020 --> 26:40.060
把它作为一个k

26:40.140 --> 26:43.260
然后它的值就是这个43.3

26:43.260 --> 26:44.180
所以3.3

26:44.180 --> 26:46.860
然后后边再跟2015

26:46.860 --> 26:48.060
2015

26:48.060 --> 26:50.380
2015跟它是一样的

26:50.380 --> 26:51.220
它作为一个k

26:51.220 --> 26:52.460
后边跟它的值

26:52.460 --> 26:54.100
然后2016

26:54.740 --> 26:55.700
2016

26:57.300 --> 26:58.100
它作为k

26:58.100 --> 27:00.980
后边跟它对应的值93.7

27:00.980 --> 27:01.420
好

27:01.420 --> 27:03.060
这个就是一条数据

27:03.060 --> 27:03.740
明白吗

27:03.740 --> 27:04.940
那这种格式

27:04.940 --> 27:06.980
就是它的第二种书写格式

27:06.980 --> 27:08.260
它的第二种书写格式

27:08.260 --> 27:09.900
我们给它画一下

27:10.420 --> 27:10.980
可以看出来

27:10.980 --> 27:12.220
就是Product

27:12.220 --> 27:14.420
现在其实你的数据

27:14.420 --> 27:15.140
总共有几条

27:15.140 --> 27:15.660
你就复制

27:15.660 --> 27:18.460
然后比如说现在变成了一个iPhone5

27:18.460 --> 27:19.100
iPhone5

27:19.100 --> 27:23.660
然后它对应的2014年的销售数

27:23.660 --> 27:25.660
数据是83.6

27:25.660 --> 27:26.300
这个

27:26.300 --> 27:27.340
然后接下来

27:27.340 --> 27:28.900
73.4

27:30.580 --> 27:32.180
然后55.1

27:32.180 --> 27:33.300
55.1

27:33.300 --> 27:33.900
看到没有

27:33.900 --> 27:35.780
就是格式就是这个样子

27:36.220 --> 27:39.180
这个就是一个对象的这么一种形式

27:39.180 --> 27:40.260
Product

27:40.300 --> 27:41.300
这个k对应的

27:41.300 --> 27:43.540
就是我们现在给出的类母

27:43.540 --> 27:45.740
就是x轴当中的一个类母

27:46.260 --> 27:48.140
然后把每一个数据

27:48.140 --> 27:48.740
你看

27:48.740 --> 27:51.900
是不是把这个年份做一个k

27:52.580 --> 27:54.660
然后后边跟它的一个值

27:54.660 --> 27:55.780
其实这种数据

27:55.780 --> 27:57.700
它最终还是一个数字被解析

27:57.700 --> 27:58.660
2014的数据

27:58.860 --> 28:00.060
其实就是这个

28:00.340 --> 28:00.900
理

28:00.900 --> 28:03.140
然后2015的就是这个理

28:03.140 --> 28:03.740
看到没有

28:03.740 --> 28:05.220
格式不一样

28:05.220 --> 28:07.140
但最终解析是一样的

28:07.340 --> 28:08.220
然后接下来

28:08.220 --> 28:10.060
我就把剩下的内容

28:10.220 --> 28:11.260
给它写上去

28:11.260 --> 28:11.940
写完之后

28:11.940 --> 28:12.860
我们要看一下

28:12.860 --> 28:13.500
好不好

28:13.500 --> 28:14.340
iPhone 5

28:14.340 --> 28:14.780
iPhone 6

28:14.780 --> 28:15.340
iPhone 7

28:15.340 --> 28:16.980
iPhone 6

28:18.540 --> 28:19.300
iPhone 6

28:19.300 --> 28:20.700
这个可能需要一些时间

28:20.700 --> 28:21.660
大家看到这的话

28:21.660 --> 28:22.540
你们可以快进

28:22.540 --> 28:23.620
快进

28:27.510 --> 28:28.910
65.2

28:31.550 --> 28:32.950
82.5

28:36.310 --> 28:37.790
39.1

28:37.790 --> 28:38.750
我就这么去复制

28:39.750 --> 28:41.070
53.9

28:43.460 --> 28:44.540
72.4

28:46.460 --> 28:47.420
iPhone 7

28:48.420 --> 28:48.860
ok

28:48.860 --> 28:49.380
可以

28:49.500 --> 28:51.380
那我把它注射了

28:51.380 --> 28:53.020
其实你注不注射都一样

28:53.020 --> 28:55.060
因为后边会把上面给它覆盖了

28:55.500 --> 28:56.780
那我们来看一下

28:56.780 --> 28:57.380
有没有错

28:57.380 --> 28:58.500
来刷新一下

28:58.780 --> 28:59.180
这个时候

28:59.180 --> 29:00.500
其实是有问题的

29:01.460 --> 29:02.260
有问题的

29:02.260 --> 29:04.700
就是这个注装图没有了

29:04.700 --> 29:05.540
这是因为什么

29:05.540 --> 29:07.300
因为我们的这块

29:07.300 --> 29:08.700
我们Dimensions

29:08.700 --> 29:10.420
它里头的这个值

29:10.420 --> 29:12.460
也就是我们2014年

29:12.460 --> 29:13.420
跟这个对不上了

29:13.420 --> 29:14.340
它多了一个年

29:14.340 --> 29:15.020
看到没有

29:15.580 --> 29:16.300
把它删掉

29:16.540 --> 29:17.380
把它删掉

29:20.060 --> 29:20.580
来

29:20.740 --> 29:22.620
维度的名称一定切记

29:22.620 --> 29:23.700
一定要对应

29:23.700 --> 29:24.180
对好

29:24.180 --> 29:25.100
一一对应才行

29:25.100 --> 29:26.220
它的数据才有了

29:26.220 --> 29:26.740
看到没有

29:26.740 --> 29:27.820
数据ok了吧

29:27.820 --> 29:28.260
好

29:28.260 --> 29:29.700
这个就是第二种

29:29.700 --> 29:30.420
第二种

29:30.420 --> 29:32.300
然后接着还有第三种

29:37.660 --> 29:38.980
第三种

29:38.980 --> 29:39.700
是一个对象

29:39.700 --> 29:40.420
它的值

29:43.420 --> 29:44.380
是一个对象

29:45.180 --> 29:46.700
第三种是这样的

29:46.700 --> 29:47.980
就是首先

29:48.140 --> 29:49.020
Producter

29:49.820 --> 29:50.660
必须要有

29:50.660 --> 29:51.300
这是一个对象

29:51.300 --> 29:51.780
一定要注意

29:52.300 --> 29:53.900
它里头都是k跟value的

29:53.900 --> 29:55.700
也就是把所有的数据

29:55.700 --> 29:58.100
都作为某一个k的一个value值

29:58.500 --> 29:59.860
它就是一个数组了

30:00.180 --> 30:01.060
这个数组当中

30:01.340 --> 30:03.420
我们就可以去放这个iPhone4

30:03.420 --> 30:03.900
是吧

30:03.900 --> 30:04.900
iPhone5

30:04.900 --> 30:05.460
iPhone6

30:05.460 --> 30:06.380
iPhone7

30:06.700 --> 30:07.500
改一下

30:08.020 --> 30:08.740
这是5

30:08.740 --> 30:09.700
这是6

30:09.700 --> 30:10.580
这是7

30:10.940 --> 30:11.580
好

30:12.100 --> 30:13.180
这个就是

30:13.500 --> 30:14.500
D条数据

30:15.020 --> 30:15.860
D条数据

30:15.860 --> 30:16.540
完了之后

30:16.660 --> 30:18.260
接下来它会把什么

30:18.260 --> 30:21.580
还是把这些年份作为一个k

30:21.580 --> 30:23.780
也就是我们的维度的名称

30:23.780 --> 30:25.220
维度的名称作为一个k

30:25.260 --> 30:26.260
然后它的值

30:26.260 --> 30:27.660
那就是这个

30:27.660 --> 30:28.860
就是2014

30:28.860 --> 30:31.660
它会把所有2014的这几个数据

30:31.900 --> 30:32.740
这几个数据

30:32.740 --> 30:33.580
全部拿过来

30:33.580 --> 30:34.260
放到这

30:34.740 --> 30:35.220
好

30:36.180 --> 30:38.300
改稍微改一下

30:43.820 --> 30:44.140
好

30:44.140 --> 30:47.140
这个就是2014年

30:47.820 --> 30:49.180
iPhone4 5 6 7

30:49.180 --> 30:51.540
所对应的一个销售数据

30:51.540 --> 30:52.260
看到没有

30:52.260 --> 30:53.660
然后剩下的

30:53.660 --> 30:54.700
是不是大家都懂

30:54.700 --> 30:55.940
2015

30:56.860 --> 30:58.140
2016是吧

30:58.140 --> 30:59.260
2015

30:59.260 --> 31:00.180
2016

31:01.260 --> 31:02.740
2015的值

31:03.020 --> 31:04.100
我们改一下

31:05.140 --> 31:06.460
这如果说

31:06.460 --> 31:07.940
看到这也可以快进

31:34.140 --> 31:34.460
好

31:34.460 --> 31:35.660
隔世画一下

31:35.660 --> 31:36.220
那ok

31:36.220 --> 31:37.860
现在就添完了

31:37.860 --> 31:38.420
添完之后

31:38.420 --> 31:40.300
来看一下这个效果

31:40.300 --> 31:41.260
刷新一下

31:41.500 --> 31:42.420
也是ok的

31:42.420 --> 31:43.460
没有任何的问题

31:43.460 --> 31:44.820
你可以

31:44.820 --> 31:45.780
如果说你不信的话

31:45.780 --> 31:47.060
你把它全部删掉

31:47.060 --> 31:48.260
把这个删掉

31:48.580 --> 31:49.940
删掉之后再来看

31:51.460 --> 31:53.260
删掉之后有问题了

31:53.500 --> 31:54.260
这

31:55.260 --> 31:56.540
不能这么删

31:59.620 --> 32:00.380
刷新

32:00.380 --> 32:01.100
可以吧

32:01.100 --> 32:02.260
数据是没有问题的

32:02.260 --> 32:03.060
没有问题的

32:03.060 --> 32:03.340
算了

32:03.340 --> 32:04.060
咱就不删了

32:04.260 --> 32:05.060
不删了

32:05.620 --> 32:06.500
留着它

32:07.660 --> 32:08.420
行了

32:08.420 --> 32:09.900
那我把这个删掉了

32:09.900 --> 32:10.460
行了

32:10.460 --> 32:11.300
那这样的话

32:11.300 --> 32:12.980
source它的三个

32:13.140 --> 32:13.940
书写方式

32:14.260 --> 32:15.820
咱们就算是已经说完了

32:15.820 --> 32:16.340
说完了

32:16.340 --> 32:16.940
好不好

32:16.980 --> 32:17.540
然后

32:17.540 --> 32:18.700
那其实我们这节课

32:18.740 --> 32:19.660
就先说到这

32:19.820 --> 32:21.340
然后大家思考一个问题

32:21.340 --> 32:21.900
是不是

32:21.900 --> 32:23.620
上面咱们是使用了

32:23.620 --> 32:24.540
这个date site

32:24.540 --> 32:25.260
这个东西

32:25.380 --> 32:27.300
然后用它去存储了一下

32:27.300 --> 32:28.140
这个数据

32:29.020 --> 32:29.900
但是这个东西

32:30.020 --> 32:31.100
如果说单纯的

32:31.100 --> 32:32.540
跟我们的这个注壮图

32:32.540 --> 32:33.220
去比的话

32:33.220 --> 32:34.820
跟这个去比的话

32:34.980 --> 32:37.020
是不是感觉他要麻烦一些

32:37.740 --> 32:39.820
是不是把事情搞得有点复杂

32:40.060 --> 32:40.980
而且理解起来

32:40.980 --> 32:42.300
可能稍微有些费劲

32:42.300 --> 32:42.940
是不是

32:42.940 --> 32:43.580
好

32:43.980 --> 32:45.580
如果说咱这么去写的话

32:45.580 --> 32:46.940
确实很麻烦

32:47.420 --> 32:48.140
这样的话

32:48.140 --> 32:50.020
并没有发挥date site

32:50.020 --> 32:51.660
它的一个核心的作用

32:51.660 --> 32:52.100
是吧

32:52.100 --> 32:53.820
那它的一些核心的功能是什么

32:54.220 --> 32:55.700
我们放到下一节课

32:55.700 --> 32:56.820
跟大家去讲

32:57.020 --> 32:59.140
这节课我们就说到这里

