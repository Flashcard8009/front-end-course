WEBVTT

00:00.370 --> 00:02.370
继续上节课的内容

00:02.370 --> 00:06.370
在上节课呢咱们说了说到这个axis tag

00:06.370 --> 00:09.370
也就是坐标轴刻度相关的设置是吧

00:09.370 --> 00:11.370
那这节课咱们继续往下说

00:11.370 --> 00:15.370
来先来说这个坐标轴刻度标签的相关设置

00:15.370 --> 00:18.370
在这呢先标一下啊

00:18.370 --> 00:19.370
诶错了

00:19.370 --> 00:23.370
坐标轴刻度标签的相关设置

00:23.370 --> 00:26.370
好坐标轴刻度标签

00:26.370 --> 00:29.370
然后呢在这需要去额外的跟大家说一下

00:29.370 --> 00:33.370
往后呢你会见到很多这个标签标签

00:33.370 --> 00:35.370
文本标签等等这些

00:35.370 --> 00:36.370
那他们指的是什么呢

00:36.370 --> 00:38.370
其实指的就是这些文字

00:38.370 --> 00:40.370
文本也好文本标签也好

00:40.370 --> 00:42.370
有的时候甚至直接叫标签

00:42.370 --> 00:45.370
指的都是这个文字好不好

00:45.370 --> 00:47.370
以后呢你会经常见得到啊

00:47.370 --> 00:50.370
那好那接下来咱们就来看一下这个axis

00:50.370 --> 00:52.370
label当中呢都有哪些设置

00:52.370 --> 00:54.370
那其实啊说到这个文本

00:54.370 --> 00:57.370
那其实大部分都是样式

00:57.370 --> 01:00.370
是不是啊你看这里头有很多很多的东西呢

01:00.370 --> 01:04.370
咱们都见过都是他相关的一些样式的设置啊

01:04.370 --> 01:06.370
那好我们就挨个来说吧

01:06.370 --> 01:08.370
那首先呢就是这个show

01:08.370 --> 01:11.370
show的话是否显示这个文本是不是

01:11.370 --> 01:14.370
默认情况一样为处是吧

01:14.370 --> 01:16.370
那在这呢我给上一个false

01:16.370 --> 01:18.370
我们先来看一下啊来刷新一下

01:18.370 --> 01:20.370
是不是就没有了没有内容了啊

01:20.370 --> 01:22.370
好继续然后呢再来

01:22.370 --> 01:23.370
intv

01:23.370 --> 01:26.370
那intv呢这个东西呢跟什么

01:26.370 --> 01:29.370
让它再显示为处啊跟我们上节课所讲的

01:29.370 --> 01:32.370
这个标签当中的刻度啊这个刻度

01:32.370 --> 01:34.370
当中的这个什么的intv是一样的

01:34.370 --> 01:37.370
也就是默认情况下它是所有的都显示

01:37.370 --> 01:40.370
那现在呢我要让他隔一个显示一个

01:40.370 --> 01:42.370
刷新一下看到没有这个是不是就不显示了

01:42.370 --> 01:44.370
他显示这个就不显示他显示

01:44.370 --> 01:47.370
隔一个显示一个隔两个的话

01:47.370 --> 01:49.370
那你就给上2就行了好吧

01:49.370 --> 01:52.370
那这呢我就在还原成0啊

01:52.370 --> 01:54.370
然后再来insight

01:54.370 --> 01:57.370
insight呢是不是标签的刻度

01:57.370 --> 01:59.370
不是刻度啊那老说刻度啊

01:59.370 --> 02:02.370
文本的标签现在呢在哪里显示啊

02:02.370 --> 02:05.370
在里面显示就不在外面显示了刷新

02:05.370 --> 02:08.370
跟上节课所讲的这个刻度

02:08.370 --> 02:11.370
它是一模一样的意思啊一模一样的

02:11.370 --> 02:13.370
我给他还原成一个false

02:13.370 --> 02:14.370
ok继续rotate

02:14.370 --> 02:16.370
rotate呢是什么呢就是

02:16.370 --> 02:18.370
刻度标签现在呢

02:18.370 --> 02:20.370
它旋转的一个角度啊

02:20.370 --> 02:22.370
旋转的一个角度

02:23.370 --> 02:25.370
我给他一个45

02:26.370 --> 02:27.370
来

02:27.370 --> 02:28.370
刷新一下

02:29.370 --> 02:30.370
旋转了吧

02:30.370 --> 02:33.370
那这种情况呢其实也是很常很常见的

02:33.370 --> 02:35.370
就是有的时候呢可能我们的类目轴

02:35.370 --> 02:37.370
当中的这个内内容

02:37.370 --> 02:39.370
或者说这个名字啊非常的多

02:39.370 --> 02:40.370
你要横着这么去放的话

02:40.370 --> 02:41.370
可能放不下

02:41.370 --> 02:42.370
那怎么办

02:42.370 --> 02:44.370
我们让他竖着放或者说写着放

02:44.370 --> 02:46.370
这样节省空间嘛是吧

02:46.370 --> 02:47.370
好rotate啊

02:47.370 --> 02:48.370
然后这个modge

02:48.370 --> 02:49.370
modge的话就是说

02:49.370 --> 02:51.370
刻度标签跟轴线之间

02:51.370 --> 02:52.370
它的一个兼具

02:52.370 --> 02:54.370
那默认情况是一个8是不是

02:54.370 --> 02:55.370
那我给上一个8

02:55.370 --> 02:57.370
现在我们先刷新一下

02:57.370 --> 02:58.370
看看对不对啊刷新一下

02:58.370 --> 03:00.370
好它没有变化是不是

03:00.370 --> 03:01.370
那就证明证据了啊

03:01.370 --> 03:03.370
那先在接着我给它的值

03:03.370 --> 03:04.370
变成一个18

03:04.370 --> 03:06.370
18之后呢我再刷新来

03:06.370 --> 03:07.370
走

03:07.370 --> 03:08.370
看到很明显吗

03:08.370 --> 03:10.370
他们是不是往下走了

03:10.370 --> 03:11.370
往下走了啊好

03:11.370 --> 03:12.370
这个呢就是轴线

03:12.370 --> 03:14.370
跟这个文字之间的一个距离啊

03:14.370 --> 03:16.370
好然后呢接着呢就是这个formite

03:16.370 --> 03:18.370
formite这个东西呢其实

03:18.370 --> 03:20.370
我们有见过是吧

03:20.370 --> 03:21.370
在之前

03:21.370 --> 03:23.370
已经已经讲过

03:23.370 --> 03:24.370
讲过啊

03:24.370 --> 03:25.370
然后这个formite呢

03:25.370 --> 03:26.370
它呢是用来格式化

03:26.370 --> 03:28.370
这些刻度标签的啊

03:28.370 --> 03:29.370
格式化它的

03:29.370 --> 03:31.370
也就是说有的时候呢

03:31.370 --> 03:32.370
我们在讲那个legend

03:32.370 --> 03:33.370
的时候说过是吧

03:33.370 --> 03:34.370
有的时候呢

03:34.370 --> 03:35.370
我们要设置

03:35.370 --> 03:36.370
要统一的去设置啊

03:36.370 --> 03:38.370
那你要挨个去改的话

03:38.370 --> 03:39.370
太费劲了

03:39.370 --> 03:41.370
那通过他就能够统一的去

03:41.370 --> 03:42.370
进行一个格式化了

03:42.370 --> 03:43.370
他有两个值

03:43.370 --> 03:44.370
一个呢是stream

03:44.370 --> 03:45.370
还是还有另外一个呢

03:45.370 --> 03:46.370
就是一个faction

03:46.370 --> 03:47.370
跟之前是一模一样的

03:48.370 --> 03:49.370
为stream的话

03:49.370 --> 03:50.370
那这里头放的是什么呢

03:50.370 --> 03:51.370
速算的一个模板

03:51.370 --> 03:52.370
然后注意啊

03:52.370 --> 03:53.370
这个地方有没有发现

03:53.370 --> 03:54.370
其实这呢

03:54.370 --> 03:56.370
大库号当中的这个

03:56.370 --> 03:57.370
值已经变了

03:57.370 --> 03:58.370
跟我们这个legend的当中呢

03:58.370 --> 03:59.370
原来是一个name

03:59.370 --> 04:01.370
现在是不是就变成了一个value了

04:01.370 --> 04:02.370
那这个value呢

04:02.370 --> 04:03.370
表示的是什么意思啊

04:03.370 --> 04:05.370
代表的就是这个

04:05.370 --> 04:06.370
一个一个一个的文本

04:06.370 --> 04:07.370
看到吧

04:07.370 --> 04:08.370
好那比如说

04:08.370 --> 04:10.370
现在我通过他

04:10.370 --> 04:12.370
咱们在后边再加上一个好

04:12.370 --> 04:13.370
加上一个好

04:13.370 --> 04:15.370
来看一下

04:15.370 --> 04:16.370
来刷新

04:16.370 --> 04:18.370
衬衫好

04:18.370 --> 04:19.370
羊毛衫好

04:19.370 --> 04:20.370
学坊衫好

04:20.370 --> 04:21.370
是吧

04:21.370 --> 04:22.370
都好啊

04:22.370 --> 04:23.370
大家好

04:23.370 --> 04:24.370
才是真的好

04:24.370 --> 04:25.370
来

04:25.370 --> 04:26.370
那这是第一种形式啊

04:26.370 --> 04:27.370
第二种形式

04:27.370 --> 04:28.370
第二种形式呢

04:28.370 --> 04:29.370
就是faction了

04:29.370 --> 04:30.370
faction这个东西呢

04:30.370 --> 04:31.370
稍微灵活一点

04:31.370 --> 04:33.370
你可以设置的

04:33.370 --> 04:34.370
就是随心所欲

04:34.370 --> 04:35.370
faction

04:35.370 --> 04:37.870
这个faction当中呢

04:37.870 --> 04:38.870
跟之前不太一样

04:38.870 --> 04:39.870
他呢

04:39.870 --> 04:40.870
需要去接收

04:40.870 --> 04:41.870
两个参数

04:41.870 --> 04:42.870
一个呢是value

04:42.870 --> 04:43.870
另外呢

04:43.870 --> 04:44.870
一个是index

04:44.870 --> 04:45.870
那这个value呢

04:45.870 --> 04:46.870
跟这个地方呢

04:46.870 --> 04:47.870
是一样的

04:47.870 --> 04:48.870
然后这个index呢

04:48.870 --> 04:49.870
指的是什么呢

04:49.870 --> 04:50.870
指的就是所引职

04:50.870 --> 04:51.870
知道吗

04:51.870 --> 04:52.870
但是就是

04:52.870 --> 04:54.870
这个地方

04:54.870 --> 04:55.870
我不知道什么情况

04:55.870 --> 04:56.870
他有一个bug

04:56.870 --> 04:57.870
好像value

04:57.870 --> 04:58.870
一个index

04:58.870 --> 04:59.870
我们来看一下

04:59.870 --> 05:01.870
算不算bug

05:01.870 --> 05:02.870
刷新一下

05:02.870 --> 05:03.870
好看到没有

05:03.870 --> 05:04.870
现在呢

05:04.870 --> 05:05.870
其实啊就是前面的

05:05.870 --> 05:06.870
就是这个value

05:06.870 --> 05:07.870
后边跟的

05:07.870 --> 05:08.870
是什么

05:08.870 --> 05:09.870
就是这个所引职

05:09.870 --> 05:10.870
但是呢

05:10.870 --> 05:11.870
最后这个东西呢

05:11.870 --> 05:12.870
他弹出了两次

05:12.870 --> 05:13.870
弹出了两次

05:13.870 --> 05:14.870
因为他这呢

05:14.870 --> 05:15.870
没有说明

05:15.870 --> 05:16.870
所以说呢

05:16.870 --> 05:17.870
我也不知道是啥意思

05:17.870 --> 05:18.870
是人家故意设置的

05:18.870 --> 05:19.870
还是说

05:19.870 --> 05:20.870
呃

05:20.870 --> 05:21.870
手一抖

05:21.870 --> 05:22.870
多写了一个

05:22.870 --> 05:23.870
是吧

05:23.870 --> 05:24.870
这个不好说

05:24.870 --> 05:25.870
不好说

05:25.870 --> 05:26.870
然后大家知道

05:26.870 --> 05:27.870
有这么一个问题

05:27.870 --> 05:28.870
就行了

05:28.870 --> 05:29.870
好吧

05:29.870 --> 05:30.870
那在这呢

05:30.870 --> 05:31.870
就是如果说

05:31.870 --> 05:32.870
你要用到这个所引的话

05:32.870 --> 05:33.870
虽然说

05:33.870 --> 05:34.870
他是多了一个

05:34.870 --> 05:35.870
但是这个所引职

05:35.870 --> 05:36.870
有没有发现

05:36.870 --> 05:37.870
是没有变的

05:37.870 --> 05:38.870
还是一个5

05:38.870 --> 05:39.870
看到吗

05:39.870 --> 05:40.870
不影响啊

05:40.870 --> 05:41.870
那我们如果说

05:41.870 --> 05:42.870
需要用到所引职的话

05:42.870 --> 05:43.870
那你就这么去写faction

05:43.870 --> 05:44.870
就行了

05:44.870 --> 05:45.870
Return什么的

05:45.870 --> 05:46.870
就是比如说这个Value呢

05:46.870 --> 05:47.870
我加上一个

05:47.870 --> 05:51.080
好

05:51.080 --> 05:52.080
然后再来看一下啊

05:52.080 --> 05:53.080
走

05:53.080 --> 05:54.080
刷新一下

05:54.080 --> 05:55.080
跟刚才是一模一样的

05:55.080 --> 05:56.080
一模一样的

05:56.080 --> 05:57.080
好吧

05:57.080 --> 05:58.080
for might

05:58.080 --> 05:59.080
for might

05:59.080 --> 06:00.080
格式化

06:00.080 --> 06:01.080
然后这两个东西呢

06:01.080 --> 06:02.080
简单说一下啊

06:02.080 --> 06:03.080
这两个

06:03.080 --> 06:04.080
这两个啥意思呢

06:04.080 --> 06:05.080
就是是否显示

06:05.080 --> 06:06.080
最小tick的label

06:06.080 --> 06:07.080
也就是说啊

06:07.080 --> 06:08.080
最小tick

06:08.080 --> 06:09.080
指的就是

06:09.080 --> 06:10.080
我们最小刻度

06:10.080 --> 06:11.080
最小刻度

06:11.080 --> 06:12.080
你看比如说

06:12.080 --> 06:13.080
是0是吧

06:13.080 --> 06:14.080
好

06:14.080 --> 06:15.080
这个当然对于

06:15.080 --> 06:16.080
这个什么轴啊

06:16.080 --> 06:17.080
那么轴来说呢

06:17.080 --> 06:19.080
你必须要这个里头的内容非常的多

06:19.080 --> 06:20.080
然后呢

06:20.080 --> 06:21.080
让他们能叠起来

06:21.080 --> 06:22.080
看到吧

06:22.080 --> 06:24.080
就是如果标签重叠

06:24.080 --> 06:25.080
然后呢

06:25.080 --> 06:26.080
他就不会显示了

06:26.080 --> 06:27.080
又重叠

06:27.080 --> 06:28.080
他就不显示了

06:28.080 --> 06:29.080
就是最后一个

06:29.080 --> 06:30.080
跟

06:30.080 --> 06:32.080
第0个跟最后一个

06:32.080 --> 06:33.080
到时候如果说标签多的话

06:33.080 --> 06:34.080
他们就不显示了

06:34.080 --> 06:35.080
好不好

06:35.080 --> 06:36.080
就通过这个去设置啊

06:36.080 --> 06:37.080
啊

06:37.080 --> 06:38.080
没有太大的意义

06:38.080 --> 06:39.080
所以说呢

06:39.080 --> 06:40.080
咱就不耽误时间了啊

06:40.080 --> 06:41.080
继续往下看

06:41.080 --> 06:42.080
然后呢

06:42.080 --> 06:43.080
从这开始

06:43.080 --> 06:45.080
往下所有的内容

06:45.080 --> 06:46.080
说过呀

06:46.080 --> 06:47.080
这卡了呢

06:47.080 --> 06:48.080
是用来设置

06:48.080 --> 06:49.080
标签文本

06:49.080 --> 06:50.080
它的一个颜色啊

06:50.080 --> 06:52.080
咱给一个乐乐啊

06:52.080 --> 06:54.080
给上一个green

06:54.080 --> 06:55.080
绿色

06:55.080 --> 06:56.080
错了

06:57.080 --> 06:58.080
在这刷新一下

06:58.080 --> 06:59.080
看到没有

06:59.080 --> 07:00.080
变成了一个绿色了吧

07:00.080 --> 07:02.080
好变成了一个绿色啊

07:02.080 --> 07:03.080
剩下的这些东西呢

07:03.080 --> 07:05.080
我就不再去强调了

07:05.080 --> 07:06.080
好不好

07:06.080 --> 07:07.080
咱们之前有说过啊

07:07.080 --> 07:08.080
那接着呢

07:08.080 --> 07:09.080
再来那这块

07:09.080 --> 07:11.080
标签相应的一些东西

07:11.080 --> 07:12.080
说完了

07:12.080 --> 07:13.080
说完了之后呢

07:13.080 --> 07:16.080
标签在gray的区域当中的分隔线

07:16.080 --> 07:18.080
或者说咱们直接简单一点

07:18.080 --> 07:20.080
分隔线相应的一些设置

07:20.080 --> 07:24.610
分隔线的

07:24.610 --> 07:25.610
设置

07:25.610 --> 07:26.610
好

07:26.610 --> 07:27.610
这个分隔线的设置呢

07:27.610 --> 07:28.610
其实

07:28.610 --> 07:29.610
用到过

07:29.610 --> 07:30.610
对不对

07:30.610 --> 07:31.610
用到过啊

07:31.610 --> 07:32.610
好

07:32.610 --> 07:34.610
它呢就是一个split line

07:34.610 --> 07:37.560
split line

07:37.560 --> 07:38.560
首先啊

07:38.560 --> 07:39.560
就是默认情况下

07:39.560 --> 07:40.560
这个东西呢

07:40.560 --> 07:41.560
它是一个

07:41.560 --> 07:42.560
是否显示一个分隔线

07:42.560 --> 07:43.560
是否显示

07:43.560 --> 07:45.560
我们的这个轴啊

07:45.560 --> 07:46.560
一定要注意

07:46.560 --> 07:47.560
类木轴它默认

07:47.560 --> 07:48.560
它是不显示分隔线的

07:48.560 --> 07:49.560
有没有发现啊

07:49.560 --> 07:51.560
其实在最少的时候

07:51.560 --> 07:52.560
好没有了没有了算了

07:52.560 --> 07:54.560
那我们就直接从这看吧

07:54.560 --> 07:55.560
你有没有发现

07:55.560 --> 07:56.560
只有 y 轴有分隔线

07:56.560 --> 07:57.560
那这个类木轴

07:57.560 --> 07:58.560
x 轴呢

07:58.560 --> 07:59.560
它是没有分隔线的

07:59.560 --> 08:00.560
看到没有

08:00.560 --> 08:02.560
那那在这呢

08:02.560 --> 08:04.560
咱们就是这个类木轴呢

08:04.560 --> 08:07.640
来

08:07.640 --> 08:08.640
是

08:08.640 --> 08:09.640
给它一个处

08:09.640 --> 08:11.640
再来看一下啊

08:11.640 --> 08:12.640
然后刷新

08:12.640 --> 08:13.640
刷新

08:13.640 --> 08:14.640
这个时候呢

08:14.640 --> 08:15.640
你有没有发现这个类木轴

08:15.640 --> 08:16.640
它才出现了

08:16.640 --> 08:17.640
看到了吧

08:17.640 --> 08:18.640
一个分隔线才出来

08:18.640 --> 08:19.640
出来之后呢

08:19.640 --> 08:20.640
跟这个外轴呢

08:20.640 --> 08:21.640
是不是形成了

08:21.640 --> 08:22.640
一个网格的这种形式啊

08:22.640 --> 08:23.640
好

08:23.640 --> 08:24.640
默认情况下啊

08:24.640 --> 08:25.640
当然它这个为处

08:25.640 --> 08:26.640
默认指的是谁啊

08:26.640 --> 08:27.640
指的是这个

08:27.640 --> 08:28.640
我们的数值轴

08:28.640 --> 08:29.640
好不好

08:29.640 --> 08:30.640
然后这个 int

08:30.640 --> 08:32.640
是不是还是一个意思啊

08:32.640 --> 08:34.640
都能明白是不是 int

08:34.640 --> 08:35.640
那就是隔一个

08:35.640 --> 08:36.640
显示一个

08:36.640 --> 08:37.640
给上一个1

08:37.640 --> 08:38.640
隔一个显示一个

08:38.640 --> 08:39.640
给上一个1

08:39.640 --> 08:40.640
来刷新一下

08:40.640 --> 08:41.640
隔一个显示一个

08:41.640 --> 08:42.640
但是这个地方呢

08:42.640 --> 08:43.640
其实它是有问题的

08:43.640 --> 08:44.640
然后这个问题呢

08:44.640 --> 08:45.640
我也不知道咋回事

08:45.640 --> 08:46.640
我也懒得去找

08:46.640 --> 08:47.640
看到没有

08:47.640 --> 08:48.640
它这是不是

08:48.640 --> 08:49.640
它不对啊

08:49.640 --> 08:50.640
然后这个呢

08:50.640 --> 08:51.640
是隔了一个

08:51.640 --> 08:52.640
但是这个轴呢

08:52.640 --> 08:54.640
它怎么显示到这个地方了

08:54.640 --> 08:55.640
显示到这个地方

08:55.640 --> 08:56.640
它其实也就是

08:56.640 --> 08:57.640
跟什么

08:57.640 --> 08:58.640
跟原来

08:58.640 --> 08:59.640
我要这么去给的话

08:59.640 --> 09:00.640
那这个轴线呢

09:00.640 --> 09:01.640
它对应的

09:01.640 --> 09:02.640
就不是这个什么呢

09:02.640 --> 09:03.640
我们的这个

09:03.640 --> 09:04.640
啊

09:04.640 --> 09:05.640
刻度这个线啊

09:05.640 --> 09:06.640
它对应的是

09:06.640 --> 09:07.640
现在我们每个数据

09:07.640 --> 09:08.640
它的中心了

09:08.640 --> 09:10.640
每个数据的中心

09:10.640 --> 09:11.640
但是啊

09:11.640 --> 09:12.640
它隔一个

09:12.640 --> 09:13.640
其实好像说的是

09:13.640 --> 09:14.640
什么

09:14.640 --> 09:15.640
隔这个

09:15.640 --> 09:17.640
也不知道是隔一个内幕

09:17.640 --> 09:18.640
反正很奇怪

09:18.640 --> 09:19.640
你感觉你看

09:19.640 --> 09:20.640
这个中间隔这么宽

09:20.640 --> 09:22.640
这个中间隔这么短

09:22.640 --> 09:23.640
到底啥意思

09:23.640 --> 09:24.640
我也不知道

09:24.640 --> 09:25.640
我也懒得去弄了

09:25.640 --> 09:26.640
人家也没给说明

09:26.640 --> 09:27.640
是吧

09:27.640 --> 09:28.640
行啊

09:28.640 --> 09:29.640
来咱们再往下说

09:29.640 --> 09:30.640
这个东西呢

09:30.640 --> 09:31.640
其实用的也不多啊

09:31.640 --> 09:32.640
然后呢

09:32.640 --> 09:33.640
就是这个lansdl

09:33.640 --> 09:34.640
lansdl呢

09:34.640 --> 09:35.640
就是用来设置这个

09:35.640 --> 09:36.640
分隔线

09:36.640 --> 09:37.640
它相应的一些样式

09:37.640 --> 09:38.640
那这个里头

09:38.640 --> 09:39.640
也是一些通用的

09:39.640 --> 09:40.640
比如说

09:40.640 --> 09:41.640
我们的color

09:41.640 --> 09:44.140
给上一个00

09:44.140 --> 09:45.140
给上一个00

09:45.140 --> 09:46.140
它就变成了一个

09:46.140 --> 09:47.140
不是黑色

09:47.140 --> 09:48.140
它默认是一个灰色

09:48.140 --> 09:49.140
是不是

09:49.140 --> 09:50.140
来刷新一下

09:50.140 --> 09:51.140
变黑了吧

09:51.140 --> 09:52.140
好

09:52.140 --> 09:53.140
这个呢

09:53.140 --> 09:54.140
就是关于这个lansdl

09:54.140 --> 09:55.140
这里头有很多

09:55.140 --> 09:56.140
好不好

09:56.140 --> 09:57.140
还有这个type

09:57.140 --> 09:58.140
type这一块呢

09:58.140 --> 09:59.140
咱们已经说过了

09:59.140 --> 10:00.140
是吧

10:00.140 --> 10:01.140
上一节课

10:01.140 --> 10:02.140
咱们说这个

10:02.140 --> 10:03.140
什么tick的时候呢

10:03.140 --> 10:04.140
说过了

10:04.140 --> 10:05.140
说过了

10:05.140 --> 10:06.140
咱们就不再去强调了

10:06.140 --> 10:07.140
那关于这个splitlans

10:07.140 --> 10:08.140
它相应的一些东西

10:08.140 --> 10:09.140
就过了

10:09.140 --> 10:10.140
好不好

10:10.140 --> 10:11.140
接下来呢

10:11.140 --> 10:12.140
就是split

10:12.140 --> 10:13.140
这个东西呢

10:13.140 --> 10:14.140
跟它类似

10:14.140 --> 10:15.140
跟它类似

10:15.140 --> 10:16.140
这个呢

10:16.140 --> 10:17.140
是分隔线

10:17.140 --> 10:18.140
然后这个东西

10:18.140 --> 10:19.140
是什么呢

10:19.140 --> 10:20.140
分隔区域

10:20.140 --> 10:21.140
分隔区域

10:21.140 --> 10:22.140
其实这些东西

10:22.140 --> 10:23.140
对于我们来说

10:23.140 --> 10:24.140
没有太大的意义

10:24.140 --> 10:25.140
而且呢

10:25.140 --> 10:26.140
这个分隔区域

10:26.140 --> 10:27.140
它同样具有一个毛病

10:27.140 --> 10:28.140
跟上面是一模一样的

10:28.140 --> 10:29.140
是一模一样的

10:29.140 --> 10:30.140
然后

10:30.140 --> 10:31.140
我先写一下吧

10:31.140 --> 10:33.140
分隔区域

10:33.140 --> 10:35.140
的设置

10:35.140 --> 10:36.140
来

10:36.140 --> 10:37.140
intel

10:37.140 --> 10:38.140
这个东西

10:38.140 --> 10:39.140
咱们就

10:39.140 --> 10:42.970
我给它写出来

10:42.970 --> 10:43.970
其实

10:43.970 --> 10:44.970
意思都是一样的

10:44.970 --> 10:45.970
来刷新一下

10:45.970 --> 10:46.970
分隔区域

10:46.970 --> 10:47.970
你有没有发现

10:47.970 --> 10:48.970
这个分隔区域

10:48.970 --> 10:49.970
其实也是很

10:49.970 --> 10:50.970
很奇怪的

10:50.970 --> 10:51.970
你看

10:51.970 --> 10:52.970
这个中间隔了一个

10:52.970 --> 10:53.970
是吧

10:53.970 --> 10:54.970
那这呢

10:54.970 --> 10:55.970
它就不隔了

10:55.970 --> 10:56.970
到底啥意思

10:56.970 --> 10:57.970
我也不懂

10:57.970 --> 10:58.970
也不知道人家

10:58.970 --> 10:59.970
故意这么去设置的

10:59.970 --> 11:00.970
也也不知道是咋回事的

11:00.970 --> 11:01.970
好不好

11:01.970 --> 11:02.970
那这个分隔区域呢

11:02.970 --> 11:03.970
你自己下去琢磨一下

11:03.970 --> 11:04.970
行吧

11:04.970 --> 11:06.970
然后这个arrest

11:06.970 --> 11:07.970
就是表示啥意思

11:07.970 --> 11:08.970
就是现在给它

11:08.970 --> 11:09.970
这个区域呢

11:09.970 --> 11:10.970
去设置相应的

11:10.970 --> 11:11.970
一些样式

11:11.970 --> 11:12.970
这里头的样式

11:12.970 --> 11:13.970
跟上面也是一样的

11:13.970 --> 11:14.970
咱不耽误时间

11:14.970 --> 11:15.970
说了

11:15.970 --> 11:16.970
好不好

11:16.970 --> 11:17.970
然后继续往下

11:17.970 --> 11:18.970
继续往下

11:18.970 --> 11:19.970
就是data

11:19.970 --> 11:21.970
这个data

11:21.970 --> 11:23.970
要简单的去说一下

11:23.970 --> 11:24.970
这个data

11:24.970 --> 11:25.970
其实就是

11:25.970 --> 11:27.970
跟我们的内母轴

11:27.970 --> 11:28.970
当中的data

11:28.970 --> 11:29.970
是一样的

11:29.970 --> 11:32.970
还记不记内母轴当中

11:32.970 --> 11:33.970
内母轴当中

11:33.970 --> 11:34.970
其实我们是可以

11:34.970 --> 11:35.970
拿出data

11:35.970 --> 11:37.970
进行一个单独的设置

11:37.970 --> 11:38.970
我看一下

11:38.970 --> 11:39.970
内母轴当中

11:39.970 --> 11:40.970
在哪里呢

11:41.970 --> 11:42.970
是不是

11:42.970 --> 11:43.970
在这看到没有

11:43.970 --> 11:44.970
那这个

11:44.970 --> 11:46.970
其实也是一个意思

11:46.970 --> 11:47.970
也是一个意思

11:47.970 --> 11:48.970
就是

11:48.970 --> 11:50.970
不是内母轴

11:50.970 --> 11:52.970
是雷震的图粒

11:52.970 --> 11:53.970
说错了

11:53.970 --> 11:55.970
是图粒当中的data

11:55.970 --> 11:57.970
跟它的设置是一样的

11:57.970 --> 11:58.970
好不好

11:58.970 --> 11:59.970
在这咱们来看一下

11:59.970 --> 12:01.970
因为提前已经写好了

12:01.970 --> 12:02.970
那我就拿这个东西

12:02.970 --> 12:03.970
来

12:03.970 --> 12:04.970
演示一下

12:04.970 --> 12:05.970
它就是一个什么

12:05.970 --> 12:06.970
就是一个对象

12:06.970 --> 12:08.970
然后我看一下这里头

12:08.970 --> 12:09.970
首先是不是说

12:09.970 --> 12:10.970
这个value

12:10.970 --> 12:17.820
咱们要给

12:17.820 --> 12:19.820
刚才的是什么

12:20.820 --> 12:21.820
waz

12:21.820 --> 12:23.820
好像是一个waz

12:23.820 --> 12:24.820
好不好

12:24.820 --> 12:25.820
waz2

12:26.820 --> 12:27.820
value对吧

12:27.820 --> 12:28.820
给上之后

12:28.820 --> 12:29.820
再来刷新一下

12:29.820 --> 12:30.820
这个waz2

12:30.820 --> 12:31.820
有没有变

12:31.820 --> 12:32.820
没有变化

12:32.820 --> 12:33.820
是吧

12:33.820 --> 12:34.820
然后呢

12:34.820 --> 12:35.820
接下来就是

12:35.820 --> 12:36.820
它相应的一些样式了

12:36.820 --> 12:37.820
这个样式

12:37.820 --> 12:38.820
是不是放在text us掉

12:38.820 --> 12:39.820
text us掉

12:39.820 --> 12:40.820
这个东西

12:40.820 --> 12:41.820
是不是之前有见到过

12:41.820 --> 12:42.820
对不对

12:42.820 --> 12:43.820
之前有见到过吧

12:43.820 --> 12:44.820
来

12:45.820 --> 12:47.820
我们给上

12:47.820 --> 12:48.820
简单写

12:48.820 --> 12:49.820
写几个吧

12:49.820 --> 12:50.820
比如说

12:51.820 --> 12:54.460
给上一个20

12:54.460 --> 12:55.460
看一下

12:55.460 --> 12:56.460
看它的字

12:56.460 --> 12:57.460
会不会变大

12:57.460 --> 12:58.460
来在这呢

12:58.460 --> 12:59.460
刷新

12:59.460 --> 13:00.460
你没发现

13:00.460 --> 13:01.460
太大了

13:01.460 --> 13:02.460
已经超出去了

13:02.460 --> 13:03.460
给上一个16

13:03.460 --> 13:05.830
刷新一下

13:05.830 --> 13:06.830
好

13:06.830 --> 13:07.830
16很明显

13:07.830 --> 13:08.830
比他们已经大很多了

13:08.830 --> 13:09.830
对不对

13:09.830 --> 13:10.830
好

13:10.830 --> 13:11.830
那这个text us掉

13:11.830 --> 13:12.830
这里头所有的东西

13:12.830 --> 13:13.830
是不是也都讲过

13:13.830 --> 13:14.830
咱们在这呢

13:14.830 --> 13:15.830
是不是

13:15.830 --> 13:16.830
还是不再去说了吧

13:16.830 --> 13:17.830
不去说了

13:17.830 --> 13:18.830
好嘞

13:18.830 --> 13:19.830
那这样的话

13:19.830 --> 13:20.830
就是这个东西

13:20.830 --> 13:21.830
咱们就已经说完了

13:21.830 --> 13:22.830
说完了

13:23.830 --> 13:24.830
text us掉

13:24.830 --> 13:25.830
那data说完之后

13:25.830 --> 13:27.830
还有指示器

13:27.830 --> 13:28.830
鼠标的指示器

13:28.830 --> 13:29.830
access point

13:31.830 --> 13:32.830
access point

13:32.830 --> 13:33.830
这个东西是什么呢

13:33.830 --> 13:34.830
是一个鼠标的指示器

13:34.830 --> 13:36.830
鼠标的指示器

13:36.830 --> 13:37.830
这个东西

13:37.830 --> 13:39.830
其实刚才咱们有见到过

13:39.830 --> 13:40.830
在这看到没有

13:40.830 --> 13:41.830
access point

13:41.830 --> 13:42.830
它也是一个全局的

13:42.830 --> 13:43.830
就好比

13:43.830 --> 13:44.830
这个tor tip

13:44.830 --> 13:45.830
tor tip

13:45.830 --> 13:46.830
我们再去讲

13:46.830 --> 13:47.830
greed身上

13:47.830 --> 13:48.830
是不是有一个tor tip

13:48.830 --> 13:49.830
这个东西

13:49.830 --> 13:50.830
它也是一个全局的

13:50.830 --> 13:51.830
也是一个全局

13:51.830 --> 13:52.830
当然可以在某一个

13:52.830 --> 13:53.830
组件当中

13:53.830 --> 13:54.830
去设置

13:54.830 --> 13:56.830
然后access point

13:56.830 --> 13:57.830
也是一样的

13:57.830 --> 13:59.830
它也是一个全局的一个组件

13:59.830 --> 14:00.830
看到没有

14:00.830 --> 14:01.830
在这呢

14:01.830 --> 14:02.830
它同样也可以

14:02.830 --> 14:03.830
在某些组件当中

14:03.830 --> 14:04.830
去设置

14:04.830 --> 14:05.830
那这咱们

14:05.830 --> 14:06.830
就不再去说了

14:06.830 --> 14:07.830
到时候咱们单独的

14:07.830 --> 14:08.830
拿出来

14:08.830 --> 14:09.830
一节课

14:09.830 --> 14:10.830
去专门讲它

14:10.830 --> 14:11.830
好不好

14:11.830 --> 14:12.830
那这个鼠标的指示器

14:12.830 --> 14:13.830
就是你看

14:13.830 --> 14:14.830
鼠标放上去之后

14:14.830 --> 14:15.830
是不是有一个线

14:15.830 --> 14:16.830
就证明现在

14:16.830 --> 14:17.830
这条线

14:17.830 --> 14:18.830
就为了大家

14:18.830 --> 14:19.830
方便的去看

14:19.830 --> 14:21.830
它指向了哪个数据

14:21.830 --> 14:22.830
哪个轴上

14:22.830 --> 14:23.830
坐标轴当中的哪个东西

14:23.830 --> 14:24.830
看到没有

14:24.830 --> 14:25.830
横向的

14:25.830 --> 14:26.830
纵向的都会有

14:26.830 --> 14:27.830
都会有

14:27.830 --> 14:28.830
是吧

14:28.830 --> 14:29.830
好这个东西

14:29.830 --> 14:30.830
咱们就不再去说了

14:30.830 --> 14:32.830
那不再去说的话

14:32.830 --> 14:33.830
access

14:33.830 --> 14:34.830
我看一下

14:36.830 --> 14:37.830
这个关掉

14:37.830 --> 14:39.830
这个不再去说

14:39.830 --> 14:40.830
那它俩是不是也说过

14:40.830 --> 14:41.830
z level

14:41.830 --> 14:42.830
有一个z

14:42.830 --> 14:43.830
是不是

14:43.830 --> 14:44.830
它相当于z index

14:44.830 --> 14:45.830
对吧

14:45.830 --> 14:46.830
好

14:46.830 --> 14:47.830
这个咱们就不去说了

14:47.830 --> 14:48.830
这样的话

14:48.830 --> 14:49.830
我们的

14:49.830 --> 14:50.830
坐标轴当中

14:50.830 --> 14:51.830
相应的一些东西

14:51.830 --> 14:52.830
就算是说完了

14:52.830 --> 14:53.830
但是还缺了一个

14:53.830 --> 14:54.830
就是

14:54.830 --> 14:55.830
我们在一上来

14:55.830 --> 14:56.830
老给大家去说的

14:56.830 --> 14:57.830
就是

14:57.830 --> 14:58.830
你比如说

14:58.830 --> 14:59.830
Grid index

14:59.830 --> 15:00.830
是不是

15:00.830 --> 15:01.830
它

15:01.830 --> 15:02.830
是不是说

15:02.830 --> 15:03.830
只有在

15:03.830 --> 15:04.830
多个

15:04.830 --> 15:05.830
坐标轴

15:05.830 --> 15:06.830
坐标系当中

15:06.830 --> 15:07.830
才有效是吧

15:07.830 --> 15:08.830
那现在

15:08.830 --> 15:09.830
多个坐标轴

15:09.830 --> 15:10.830
怎么弄出来是吧

15:10.830 --> 15:11.830
就跟大家去说一下

15:11.830 --> 15:12.830
行不行

15:12.830 --> 15:13.830
那这个access

15:13.830 --> 15:14.830
这个东西

15:14.830 --> 15:15.830
我需要

15:15.830 --> 15:16.830
把它给注释掉

15:16.830 --> 15:17.830
注释掉

15:17.830 --> 15:18.830
那

15:18.830 --> 15:23.260
到这

15:23.260 --> 15:26.890
注释掉

15:26.890 --> 15:27.890
同时

15:27.890 --> 15:34.340
这个也要注释掉

15:34.340 --> 15:35.340
好

15:35.340 --> 15:36.340
这个注释掉

15:36.340 --> 15:37.340
然后在这

15:37.340 --> 15:38.340
我就重新的去写

15:38.340 --> 15:39.340
重新的去写

15:39.340 --> 15:40.340
知道吗

15:41.340 --> 15:42.340
这个时候

15:42.340 --> 15:43.340
它的值就不是

15:43.340 --> 15:44.340
一个对象了

15:44.340 --> 15:45.340
因为你需要出现

15:45.340 --> 15:46.340
多条轴

15:46.340 --> 15:47.340
对不对

15:47.340 --> 15:48.340
你就不能是一个对象

15:48.340 --> 15:49.340
试试

15:49.340 --> 15:50.340
数组

15:50.340 --> 15:51.340
在这个数组当中

15:51.340 --> 15:52.340
每一个

15:52.340 --> 15:53.340
都是对象

15:53.340 --> 15:54.340
都是对象

15:54.340 --> 15:55.340
好不好

15:55.340 --> 15:56.340
然后我把这个

15:56.340 --> 15:57.340
data

15:57.340 --> 15:58.340
拿过来

15:58.340 --> 15:59.340
咱们用内幕轴

15:59.340 --> 16:00.340
去演示

16:01.340 --> 16:02.340
哪去了

16:02.340 --> 16:03.340
在这拿

16:03.340 --> 16:10.510
data

16:10.510 --> 16:11.510
稍微改一下

16:11.510 --> 16:15.490
这个

16:15.490 --> 16:16.490
删掉

16:25.260 --> 16:27.700
多了

16:27.700 --> 16:28.700
不对

16:28.700 --> 16:29.700
这个是数组

16:29.700 --> 16:30.700
好

16:30.700 --> 16:31.700
这是一个data

16:31.700 --> 16:32.700
对不对

16:32.700 --> 16:34.700
我们先来看一下

16:34.700 --> 16:36.700
刷新一下

16:36.700 --> 16:37.700
有没有

16:37.700 --> 16:38.700
默认情况下

16:38.700 --> 16:39.700
是不是说

16:39.700 --> 16:40.700
它是在最下边的

16:40.700 --> 16:41.700
接着

16:41.700 --> 16:42.700
再来

16:42.700 --> 16:43.700
再来一条

16:43.700 --> 16:46.140
现在

16:46.140 --> 16:47.140
这个东西

16:47.140 --> 16:48.140
叫上1

16:48.140 --> 16:49.140
然后1

16:49.140 --> 16:50.140
然后1

16:50.140 --> 16:51.140
1

16:51.140 --> 16:52.140
1

16:52.140 --> 16:53.140
1

16:53.140 --> 16:54.140
OK

16:54.140 --> 16:55.140
再来看

16:55.140 --> 16:56.140
刷新

16:56.140 --> 16:57.140
看到没有

16:57.140 --> 16:59.140
1是按照从上往下的

16:59.140 --> 17:00.140
顺序

17:00.140 --> 17:01.140
它是第一先出来

17:01.140 --> 17:02.140
它先出来

17:02.140 --> 17:03.140
默认是不是

17:03.140 --> 17:04.140
在最下边显示

17:04.140 --> 17:05.140
然后第二条

17:05.140 --> 17:06.140
轴

17:06.140 --> 17:07.140
是不是在上边显示

17:07.140 --> 17:08.140
然后接下来

17:08.140 --> 17:09.140
我们再来

17:09.140 --> 17:10.140
比如说

17:10.140 --> 17:11.140
我再给它改了

17:11.140 --> 17:12.140
在这

17:12.140 --> 17:13.140
咱不叫1了

17:13.140 --> 17:15.140
我把1

17:15.140 --> 17:18.840
全部的给它删掉

17:18.840 --> 17:19.840
全部的删掉

17:19.840 --> 17:22.980
删掉之后

17:22.980 --> 17:23.980
再来

17:23.980 --> 17:24.980
刷新

17:24.980 --> 17:25.980
好

17:25.980 --> 17:26.980
这个时候出来了没有

17:26.980 --> 17:27.980
其实出来了

17:27.980 --> 17:28.980
看到吗

17:28.980 --> 17:29.980
这是第一条轴

17:29.980 --> 17:30.980
从上往下的

17:30.980 --> 17:31.980
然后1

17:31.980 --> 17:32.980
在哪

17:32.980 --> 17:33.980
其实是档上了

17:33.980 --> 17:34.980
怎么办

17:34.980 --> 17:35.980
2

17:35.980 --> 17:36.980
咱让它挪一下位置

17:36.980 --> 17:37.980
挪一下位置

17:37.980 --> 17:38.980
怎么挪

17:38.980 --> 17:39.980
怎么挪

17:39.980 --> 17:40.980
是不是

17:40.980 --> 17:41.980
off

17:41.980 --> 17:42.980
side

17:42.980 --> 17:43.980
好

17:43.980 --> 17:44.980
给多少的

17:44.980 --> 17:45.980
付100

17:45.980 --> 17:46.980
给完之后

17:46.980 --> 17:47.980
再来看

17:47.980 --> 17:48.980
刷新

17:48.980 --> 17:50.980
是不是从上边就下来了

17:50.980 --> 17:51.980
从上边就下来了

17:51.980 --> 17:52.980
看到没有

17:52.980 --> 17:53.980
这次是不是就出现了

17:53.980 --> 17:54.980
三条轴

17:54.980 --> 17:55.980
三条轴

17:55.980 --> 17:56.980
好

17:56.980 --> 17:57.980
这样的话

17:57.980 --> 17:58.980
我们的offside

17:58.980 --> 17:59.980
这个值就有了

17:59.980 --> 18:01.980
然后Grid Index

18:01.980 --> 18:02.980
这个东西

18:02.980 --> 18:03.980
由于咱们没有这个什么

18:03.980 --> 18:04.980
没有多的作标系

18:04.980 --> 18:05.980
所以说

18:05.980 --> 18:06.980
就不再去演示它了

18:06.980 --> 18:07.980
这个东西

18:07.980 --> 18:08.980
会用得到

18:08.980 --> 18:09.980
其实咱们已经看过了

18:09.980 --> 18:10.980
是不是

18:10.980 --> 18:11.980
这个东西肯定是用得到了

18:11.980 --> 18:12.980
行

18:12.980 --> 18:13.980
这样的话

18:13.980 --> 18:15.980
我们就算是已经把作标轴

18:15.980 --> 18:17.980
它相应的一些样式

18:17.980 --> 18:19.980
它相应的一些配置说完了

18:19.980 --> 18:20.980
外轴

18:20.980 --> 18:21.980
我就不再去说了

18:21.980 --> 18:23.980
它里头的这些配置

18:23.980 --> 18:25.980
跟x轴的配置

18:25.980 --> 18:26.980
是一模一样的

18:26.980 --> 18:27.980
是一模一样的

18:27.980 --> 18:28.980
好不好

18:28.980 --> 18:29.980
然后这些东西

18:29.980 --> 18:31.980
我们就算是说完了

18:31.980 --> 18:32.980
好

18:32.980 --> 18:34.980
这节课咱们就说到这

