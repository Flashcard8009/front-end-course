WEBVTT

00:00.620 --> 00:04.520
好 这一刻我们就把这个页面给它做了

00:04.520 --> 00:07.300
那么聊天机械呢 就完成了

00:07.300 --> 00:12.220
这个页面呢 首当其冲的就有这么一个需求

00:12.220 --> 00:15.900
什么需求呢 就是这个页面你是不能直接访问的

00:15.900 --> 00:20.860
不是说不能直接访问 是你没有登录是不能访问的

00:20.860 --> 00:25.380
为啥呢 咱们来看一下我们的效果

00:25.380 --> 00:29.580
这个页面为什么没有登录就不能访问

00:29.740 --> 00:31.820
是因为这个页面呢 我们先登录啊

00:31.820 --> 00:36.980
它里边很多功能都必须要登录之后

00:36.980 --> 00:40.220
比方说我这里要获取聊天的历史记录 对吧

00:40.220 --> 00:42.620
你看这 这里聊天的历史记录

00:42.620 --> 00:45.140
你都没有登录 我知道你是谁啊

00:45.140 --> 00:47.620
我怎么去拿这个历史记录 对吧

00:47.620 --> 00:50.580
就拿不到 你看我们之前那个接口

00:50.580 --> 00:55.620
之前写的那个接口里边有个History

00:55.620 --> 00:58.260
就是这个 这个接口还记得吗

00:58.260 --> 01:00.620
没有登录 它是不是给你报一个错误 对吧

01:00.620 --> 01:03.140
它说未登录 或者登录已过期

01:03.140 --> 01:05.900
它可以报个错误 它拿不到数据的

01:05.900 --> 01:08.100
然后呢 包括你要发出聊天消息

01:08.100 --> 01:11.780
我都不知道你是谁 你怎么发聊天消息

01:11.780 --> 01:13.900
谁在跟机器人聊天 都不知道

01:13.900 --> 01:17.100
而且呢 这里要显示当前登录的用户的

01:17.100 --> 01:21.340
你称和账号信息 你看这个没登录的话

01:21.340 --> 01:24.300
怎么显示 说从上所述

01:24.300 --> 01:26.260
这个页面是必须要登录的

01:26.260 --> 01:29.300
如果说你没有登录啊 比方说我们刚才没有登录

01:29.300 --> 01:32.220
直接进这个页面 它会提示你

01:32.220 --> 01:35.220
你为登录 请先登录 点确订过后谈回去

01:35.220 --> 01:39.580
谈到登录页面 好 那我们来首先实现这个功能

01:39.580 --> 01:42.100
我们找到这个index的it面

01:42.100 --> 01:45.180
然后呢 在这里边去引入一个引入介式

01:45.180 --> 01:48.540
要引入哪些呢 首先是那个common介式

01:48.540 --> 01:53.740
然后要引入那个API的介式

01:53.740 --> 01:57.660
这个介式不引入了 这个玩意是做表单验证的

01:57.700 --> 02:01.220
这个页面好像有什么表单验证 不引入了

02:01.220 --> 02:06.260
然后呢 再去新建一个介式啊 就是index的介式

02:06.260 --> 02:11.100
在这个页面去引入它

02:11.100 --> 02:13.100
好 我们主要写的介式就在这里面

02:13.100 --> 02:18.810
index的介式 在这里边去写 分个屏吧

02:18.810 --> 02:23.810
好 那么首先呢 我们要解决第一个问题就是

02:23.810 --> 02:27.210
验证是否有登录

02:27.210 --> 02:33.170
如果没有登录 飘转到登录页

02:33.170 --> 02:40.370
如果有登录 获取到登录的用户信息

02:40.370 --> 02:43.210
就谁登录的 为什么要获取到用户信息呢

02:43.210 --> 02:48.650
是因为这个地方啊 他要显示用户的里程和账号

02:48.650 --> 02:53.130
好 同学们可以暂停视频 想一想 咋做

02:53.130 --> 02:54.570
我怎么知道他有没有登录

02:54.570 --> 02:58.210
我看一下同学们有什么样的想法

02:58.210 --> 03:04.570
好了 那这里呢 我先说两种同学们在教学的过程中啊

03:04.570 --> 03:08.170
同学们可能会出现的两种错误的想法

03:08.170 --> 03:15.530
第一种想法呢 就是在登录页 谁在登录 登录页登录的吗

03:15.530 --> 03:20.410
登录页我登录完成之后啊 还记得吗 登录页的介式

03:20.410 --> 03:22.290
我这里的是不是登录成功了

03:22.290 --> 03:25.130
我写一个全局辩量好不好

03:25.130 --> 03:27.330
或者是挂在到温斗上面的全局辩量

03:27.330 --> 03:31.970
比如说温斗里边有一个Ease Login 把它设为去

03:31.970 --> 03:36.890
那么到了那个首页的时候 他登录成功了吗

03:36.890 --> 03:39.090
在首页的时候是不是可以判断那个辩量

03:39.090 --> 03:44.570
到底是不是登录成功了 对吧 通过他来进行判断

03:44.570 --> 03:48.370
那么这种模式行不行的 肯定是不行的

03:48.370 --> 03:50.250
主要的原因有二

03:50.250 --> 03:54.010
第一个原因就是 你虽然设了字的

03:54.050 --> 03:58.050
在这里可能会去加一个全局辩量 去给他设置一下

03:58.050 --> 04:00.530
登录成功 登录成功了

04:00.530 --> 04:03.410
但是你挑转 这一块是挑转页面

04:03.410 --> 04:06.690
相当于是 这个代码相当于是点击了某一个A元素

04:06.690 --> 04:09.490
然后A元素的链接地只是这个

04:09.490 --> 04:16.420
你挑转页面之后啊 相当于就在刷新页面

04:16.420 --> 04:21.260
你登录过来是不是页面要去刷新 全部刷新了

04:21.260 --> 04:25.740
那么一刷新页面的话 就会导致之前的

04:25.740 --> 04:29.260
所有的纪念式执行 全是无效的 全部重新来

04:29.260 --> 04:37.800
你还记得我们之前那个网络通信这一块吗 对吧

04:37.800 --> 04:40.480
那么相当于是整个流程重新来的一遍

04:40.480 --> 04:44.360
抛弃之前的一天秒稳当 抛弃之前的纪念式执行

04:44.360 --> 04:48.560
全部重新请求 请求首页 就是聊天那个页面

04:48.560 --> 04:51.760
拿到一天秒然后再去请求CSS 请求图片

04:51.760 --> 04:53.760
然后请求CSS 执行CSS

04:53.760 --> 04:56.760
跟之前那个页面就没有什么关系了

04:56.760 --> 04:58.760
所以你之前的遍想早就丢失了

04:58.760 --> 05:01.760
因为它这个东西它是挑转

05:01.760 --> 05:04.760
阿迦克斯不会 阿迦克斯它只是

05:04.760 --> 05:07.760
还是在同一个页面去发送型球 阿迦克斯是在这里嘛

05:07.760 --> 05:11.760
在同一个页面 执行到某个介石的时候发送型球

05:11.760 --> 05:14.760
它并不会中断这个页面的一天秒

05:14.760 --> 05:17.760
它不会全部重新 它不会像第一步的样子

05:17.760 --> 05:20.760
抛弃掉旧的文档 说说阿迦克斯是不会刷新的

05:20.760 --> 05:22.760
那么这个玩意会导致刷新

05:22.760 --> 05:25.760
会导致刷新页面就会导致 之前的介石

05:25.760 --> 05:28.760
保存的东西全部无效了 全部重新来

05:28.760 --> 05:31.760
说这个地方肯定是不行的 这是原因一

05:31.760 --> 05:34.760
原因二呢 就算你能够想到办法把它保存了

05:34.760 --> 05:39.200
比如有些人说我把它保存到Local Storage里面行不行

05:39.200 --> 05:42.200
就算你能够想到办法 那如果说它不登录

05:42.200 --> 05:45.200
那就没有保存Local Storage嘛 对吧

05:45.200 --> 05:48.200
但是别人可以直接进这个页面

05:48.200 --> 05:51.200
可以在UIL地址里面不进登录

05:51.200 --> 05:54.200
也直接输入这个地址 对吧

05:54.200 --> 05:56.200
是不是可以直接进这个页面 而且呢

05:56.200 --> 05:58.200
Local Storage是不是可以改的

05:58.200 --> 06:03.600
Local Storage能不能改 那可以改呀

06:03.600 --> 06:06.600
包括这个 比方说你要加一个Ease Locking

06:06.600 --> 06:08.600
那我都去加呗

06:09.600 --> 06:13.600
Ease Locking 把它作为初步就进去了

06:13.600 --> 06:15.600
就遭过的登录了 对吧

06:15.600 --> 06:17.600
所以说这个Local Storage也不行

06:19.600 --> 06:21.600
那么第二种方式呢

06:21.600 --> 06:23.600
可能有些同学会想到

06:23.600 --> 06:26.600
我判断一下Local Storage里面有没有这个Token

06:26.600 --> 06:29.600
而有的话就登录了

06:29.600 --> 06:33.600
为什么呢 因为我们之前写到这个API里边

06:34.600 --> 06:37.600
登录的时候不是要调登录方法吗

06:37.600 --> 06:39.600
登录方法登录成功之后啊

06:39.600 --> 06:41.600
它会把这个Token保存到Local Storage里面

06:41.600 --> 06:43.600
那只要Local Storage里面有这个Token

06:43.600 --> 06:46.600
那是不是也表示登录成功了 对吧

06:46.600 --> 06:48.600
如果说你有这样的想法的话

06:48.600 --> 06:51.600
说明有那么一点接近了啊

06:51.600 --> 06:54.600
但是光这样做还是不行

06:54.600 --> 06:56.600
为什么呢 就算没有这个Token

06:57.600 --> 06:59.600
没有这个Token 我能不能加一个

07:00.600 --> 07:02.600
我自己能不能伪造一个

07:02.600 --> 07:04.600
随便写一些吧 对吧

07:04.600 --> 07:06.600
反正你也不会验证这个Token

07:06.600 --> 07:09.600
到底是不是正确的 你验证不了

07:09.600 --> 07:11.600
这个必须要服务起验证

07:11.600 --> 07:13.600
你的客户端是验证不了的

07:13.600 --> 07:15.600
你也不是说他写得对不对

07:15.600 --> 07:17.600
发现有 登成功了

07:17.600 --> 07:20.600
都行 那这里正确的做法是什么呢

07:20.600 --> 07:22.600
其实非常简单

07:22.600 --> 07:25.600
正确的做法就是去雕用APL里面

07:25.600 --> 07:28.600
这个函数 这个函数就写这么一个作用

07:28.600 --> 07:31.600
这个函数要做什么 请求这个地址

07:31.600 --> 07:33.600
把Token带过去

07:33.600 --> 07:34.600
当然如果说没有的话

07:34.600 --> 07:35.600
那肯定他想一个结果

07:35.600 --> 07:37.600
就告诉你没有得路

07:37.600 --> 07:38.600
Token带过去

07:38.600 --> 07:40.600
只要你这个Token是有效的

07:40.600 --> 07:43.600
在有效期之内 而且是有Token的

07:43.600 --> 07:45.600
它就会给你一个用户对象

07:45.600 --> 07:47.600
如果说是没有的

07:47.600 --> 07:50.600
那就得到了一个错误

07:50.600 --> 07:51.600
比方让我们试一试吧

07:51.600 --> 07:55.600
我们第二个用APL里面的PRO API

07:55.600 --> 07:57.600
里面的PRO FILE函数

07:57.600 --> 08:00.600
没有函数 它就会自动把Token带过去

08:00.600 --> 08:02.600
那么这个函数是一步的 对吧

08:02.600 --> 08:03.600
那么我们要等待它

08:03.600 --> 08:04.600
当然了

08:04.600 --> 08:05.600
我们这一切呢

08:05.600 --> 08:06.600
可以把它写到一个

08:06.600 --> 08:08.600
一步的立即执行函数里面去

08:08.600 --> 08:13.770
这是个立即执行函数 对吧

08:13.770 --> 08:14.770
那为什么要写一步的呢

08:14.770 --> 08:16.770
因为这里边要用await

08:16.770 --> 08:19.770
我们这一步首先来验证是否登录

08:19.770 --> 08:25.640
拿到这个什么

08:25.640 --> 08:27.640
拿到一个响应结果

08:27.640 --> 08:29.640
我们来输出一下这个响应结果

08:31.640 --> 08:32.640
保存

08:32.640 --> 08:33.640
然后看一下吧

08:33.640 --> 08:34.640
这边

08:34.640 --> 08:35.640
它告诉你 哎

08:35.640 --> 08:36.640
为登录和登录一过期

08:36.640 --> 08:38.640
就你看到这个扣的是40

08:38.640 --> 08:40.640
或者扣的有值

08:40.640 --> 08:43.640
那么就说明没有登录

08:43.640 --> 08:44.640
好

08:44.640 --> 08:46.640
那如果说扣的

08:46.640 --> 08:47.640
我们现在去登录一下

08:47.640 --> 08:48.640
试一下

08:48.640 --> 08:56.500
那现在得到了就是

08:56.500 --> 08:58.500
所以就有值了

08:58.500 --> 08:59.500
就用户对象

08:59.500 --> 09:00.500
对吧 扣的等于0

09:00.500 --> 09:01.500
那现在就简单了

09:01.500 --> 09:04.500
我就判断一下

09:04.500 --> 09:05.500
扣的

09:05.500 --> 09:10.500
是不是等于0

09:10.500 --> 09:12.500
那么如果说是等于0的话

09:12.500 --> 09:14.500
说明它登录成功的

09:14.500 --> 09:19.500
就是目前是登录的状态

09:19.500 --> 09:20.500
那登录的状态怎么办呢

09:20.500 --> 09:23.500
我就把它保存到U字里面去

09:23.500 --> 09:27.830
我就把它保存到U字

09:27.830 --> 09:28.830
就这样写

09:28.830 --> 09:29.830
就在这里写吧

09:29.830 --> 09:31.830
用一个U字RISP

09:31.830 --> 09:32.830
Data

09:32.830 --> 09:33.830
Data这个属性里面

09:33.830 --> 09:34.830
是不是有U字

09:34.830 --> 09:36.830
把它保存进去

09:36.830 --> 09:37.830
好

09:37.830 --> 09:40.830
L是表示目前是没有登录的

09:40.830 --> 09:41.830
没有登录怎么办呢

09:41.830 --> 09:43.830
那我给它一个提示

09:43.830 --> 09:48.720
为登录

09:48.720 --> 09:51.720
或登录一过期

09:51.720 --> 09:52.720
就是你超过了

09:52.720 --> 09:53.720
好像我们的Token

09:53.720 --> 09:55.720
只有7000时间

09:55.720 --> 09:56.720
那你需要重新登录

09:56.720 --> 09:59.720
然后重新给它挑转到登录页

09:59.720 --> 10:06.720
然后Return

10:06.720 --> 10:07.720
为什么要Return

10:07.720 --> 10:09.720
表示个立即直线还处结束

10:09.720 --> 10:10.720
不要再实现了

10:10.720 --> 10:12.720
后面单码就不要再实现了

10:12.720 --> 10:13.720
就这么意思

10:13.720 --> 10:14.720
这个逻辑有通了

10:14.720 --> 10:15.720
如果说你登中了

10:15.720 --> 10:17.720
那么我在这里得到一个用户的

10:17.720 --> 10:19.720
接下来做一些后续的事情

10:19.720 --> 10:20.720
然后你没有登录的话

10:20.720 --> 10:21.720
我就挑转到登录页

10:21.720 --> 10:22.720
好

10:22.720 --> 10:23.720
咱们来先一下试一下

10:23.720 --> 10:25.720
我们这里先输出的

10:25.720 --> 10:26.720
看一下这个逻辑

10:26.720 --> 10:28.720
能不能走通

10:28.720 --> 10:29.720
你看登录成功了

10:29.720 --> 10:31.720
如果说登录装盖的时候

10:31.720 --> 10:32.720
能拿到的有点对象

10:32.720 --> 10:33.720
对吧

10:33.720 --> 10:36.720
那我们现在把登录去掉

10:40.720 --> 10:41.720
删掉

10:41.720 --> 10:42.720
好

10:42.720 --> 10:43.720
我们现在在刷新这个页面

10:43.720 --> 10:45.720
为登录和登录一过期

10:45.720 --> 10:46.720
重新登录

10:46.720 --> 10:47.720
挑回到登录页

10:47.720 --> 10:49.720
这个逻辑有这个通了

10:50.720 --> 10:51.720
登录进去

10:51.720 --> 10:53.720
就拿到这个用户对象

10:53.720 --> 10:55.720
你直接访问这个地址

10:55.720 --> 10:56.720
刷新

10:56.720 --> 10:58.720
也能拿到这个用户对象

10:58.720 --> 10:59.720
好吧

10:59.720 --> 11:00.720
但是代码结构

11:00.720 --> 11:01.720
我们再稍微的改一改

11:01.720 --> 11:02.720
因为不然的话

11:02.720 --> 11:03.720
很多代码都要写到

11:03.720 --> 11:05.720
这个衣服判断里面去了

11:05.720 --> 11:07.720
因为我要用这个留了对象

11:07.720 --> 11:09.720
这里呢

11:09.720 --> 11:10.720
先简单处理一下

11:10.720 --> 11:12.720
就是我们可以这样

11:12.720 --> 11:13.720
因为我发现

11:13.720 --> 11:15.720
它不管有没有登录

11:15.720 --> 11:16.720
它都有一个数据

11:16.720 --> 11:18.720
就是data

11:19.720 --> 11:20.720
对吧

11:20.720 --> 11:22.720
如果说它登录成功了

11:22.720 --> 11:24.720
那么它这个就是用户对象

11:24.720 --> 11:26.720
如果它没有登录的话

11:26.720 --> 11:28.720
也就是一个nau

11:28.720 --> 11:29.720
对不对

11:29.720 --> 11:30.720
所以我就直接把它保存到

11:30.720 --> 11:31.720
U字里面去了

11:31.720 --> 11:32.720
那么通过判断一个U字

11:32.720 --> 11:33.720
是不是nau

11:33.720 --> 11:35.720
来确定它到底有没有登录成

11:35.720 --> 11:36.720
有没有登录过

11:36.720 --> 11:37.720
所以我这里判断的就是

11:37.720 --> 11:42.720
如果没有U字

11:42.720 --> 11:43.720
说明什么

11:43.720 --> 11:44.720
说明不是登录的

11:44.720 --> 11:45.720
没有登录

11:45.720 --> 11:47.720
那么这里这样子

11:47.720 --> 11:49.720
所以把它改一下结构

11:49.720 --> 11:51.720
那就OK了

11:51.720 --> 11:53.720
那么代码到了第十行

11:53.720 --> 11:54.720
就后续代码

11:54.720 --> 11:55.720
如果说

11:55.720 --> 11:56.720
所以再把能够执行

11:56.720 --> 11:58.720
那么这些一定是登录状态

11:58.720 --> 12:01.720
下面的代码环境

12:01.720 --> 12:03.720
一定是登录状态

12:03.720 --> 12:04.720
为什么呢

12:04.720 --> 12:05.720
如果说不是登录状态

12:05.720 --> 12:06.720
它就已经结束了

12:06.720 --> 12:07.720
这个函数

12:07.720 --> 12:08.720
已经挑转过后就结束了

12:08.720 --> 12:09.720
对吧

12:09.720 --> 12:10.720
说下面代码环境

12:10.720 --> 12:11.720
一定是登录状态

12:11.720 --> 12:12.720
好 那我们来写

12:12.720 --> 12:13.720
后边怎么写

12:13.720 --> 12:15.720
后边我们首先要做的

12:15.720 --> 12:16.720
第一件事

12:16.720 --> 12:19.720
就是做哪件事都无所谓的

12:19.720 --> 12:20.720
我们这里

12:20.720 --> 12:21.720
把这个地方做了吧

12:21.720 --> 12:22.720
先把这个地方

12:22.720 --> 12:24.720
就这个地方要显示

12:24.720 --> 12:29.670
这个地方要显示账号和你称

12:29.670 --> 12:30.670
要显示账号和你称

12:30.670 --> 12:31.670
对吧

12:31.670 --> 12:33.670
那么看一下是哪个地方呢

12:33.670 --> 12:35.670
是

12:35.670 --> 12:37.670
在哪个地方呢

12:37.670 --> 12:38.670
走一下

12:38.670 --> 12:39.670
Oscite

12:39.670 --> 12:42.670
这一个Nickname和LockedID

12:42.670 --> 12:43.670
这里边可能会用到

12:43.670 --> 12:44.670
很多的多名元素

12:44.670 --> 12:45.670
首先把一多名元素

12:45.670 --> 12:48.670
全部过去一下

12:48.670 --> 12:49.670
放到一个对象里面

12:49.670 --> 12:50.670
Dorms

12:50.670 --> 12:54.670
首先是这个Nickname

12:54.670 --> 12:59.670
Nickname

12:59.670 --> 13:04.160
这样子

13:04.160 --> 13:05.160
划分一下吧

13:05.160 --> 13:06.160
Oscite

13:06.160 --> 13:09.540
就是这边

13:09.540 --> 13:10.540
侧边篮

13:10.540 --> 13:11.540
侧边篮这一块

13:11.540 --> 13:12.540
侧边篮这一块有两个元素

13:12.540 --> 13:13.540
我们需要关注

13:13.540 --> 13:15.540
一个是Nickname

13:15.540 --> 13:17.540
有一个

13:17.540 --> 13:18.540
Documents

13:18.540 --> 13:19.540
可以认识哪个条

13:19.540 --> 13:22.540
ID为Nickname

13:22.540 --> 13:25.540
然后是LockedID

13:25.540 --> 13:28.540
为LockedID

13:29.540 --> 13:33.540
就这种方式

13:33.540 --> 13:35.540
首先是

13:35.540 --> 13:37.540
我们要做的第一件事

13:37.540 --> 13:38.540
就是

13:38.540 --> 13:41.540
设置用户信息

13:41.540 --> 13:43.540
写到页面上去

13:43.540 --> 13:45.540
我这里写个函数吧

13:45.540 --> 13:47.540
这次有点阴风

13:47.540 --> 13:48.540
那么你不需要给我传传数

13:48.540 --> 13:49.540
为什么呢

13:49.540 --> 13:50.540
因为我自己可以拿到

13:50.540 --> 13:51.540
这个用户信息

13:51.540 --> 13:52.540
我这里的代码很简单

13:52.540 --> 13:54.540
就是Oscite

13:54.540 --> 13:55.540
找到这个多名元素

13:55.540 --> 13:56.540
它里边的

13:56.540 --> 13:58.540
给它设置Inner

13:58.540 --> 13:59.540
注意

13:59.540 --> 14:01.540
特别注意

14:01.540 --> 14:05.540
这里一定要使用Inner

14:05.540 --> 14:06.540
Text

14:06.540 --> 14:09.540
不能使用ATMEL

14:09.540 --> 14:11.540
我一会儿说原因

14:11.540 --> 14:12.540
这里会有一个

14:12.540 --> 14:13.540
如果说使用Inner

14:13.540 --> 14:14.540
ATMEL的话

14:14.540 --> 14:15.540
会有一个安全隐患

14:15.540 --> 14:16.540
好

14:16.540 --> 14:17.540
我们把它复制为

14:17.540 --> 14:18.540
User.nickname

14:18.540 --> 14:19.540
然后呢

14:19.540 --> 14:22.540
它的LockedID

14:22.540 --> 14:24.540
InnerText

14:24.540 --> 14:25.540
User.nickname

14:25.540 --> 14:27.540
LockedID

14:27.540 --> 14:28.540
好

14:28.540 --> 14:29.540
这个还是写完了

14:29.540 --> 14:30.540
这个还非常简单

14:30.540 --> 14:32.540
那么我就先调用

14:32.540 --> 14:34.540
这个SetsUserInfo吧

14:34.540 --> 14:35.540
来设置一下

14:35.540 --> 14:37.540
用户的当前的信息

14:37.540 --> 14:38.540
保存

14:38.540 --> 14:40.540
这里报错了

14:40.540 --> 14:42.540
老人

14:42.540 --> 14:44.540
他说SetsProperty

14:44.540 --> 14:46.540
是Undefend

14:46.540 --> 14:48.540
点击这个进去

14:48.540 --> 14:50.540
二十三行

14:50.540 --> 14:55.680
他这个User.nickname

14:55.680 --> 14:57.680
LockedID

14:57.680 --> 15:03.250
User

15:03.250 --> 15:05.250
他说这个LockedID

15:05.250 --> 15:07.250
是Undefend的吗

15:07.250 --> 15:08.250
我看一下

15:08.250 --> 15:16.510
不对

15:16.510 --> 15:17.510
他说了还不是

15:17.510 --> 15:18.510
不是一个User的问题

15:18.510 --> 15:19.510
他说的是

15:19.510 --> 15:20.510
这个玩意是Undefend的

15:20.510 --> 15:22.510
LockedID是Undefend的

15:22.510 --> 15:23.510
其实这个很简单

15:23.510 --> 15:24.510
你打个断点就知道

15:24.510 --> 15:25.510
好

15:25.510 --> 15:26.510
再刷新

15:30.510 --> 15:32.510
为什么没有运

15:32.510 --> 15:34.510
运行的断点

15:34.510 --> 15:38.980
刷新

15:38.980 --> 15:44.140
就创了过来了

15:44.140 --> 15:46.140
SetsProperty

15:46.140 --> 15:51.380
这个问题是

15:51.380 --> 15:53.380
他为什么不运行的断点

15:53.380 --> 16:04.110
运行的断点了

16:04.110 --> 16:06.110
然后进入寒数

16:06.110 --> 16:08.110
点进去

16:08.110 --> 16:09.110
然后到下一步

16:09.110 --> 16:10.110
他说某一个东西是NOW

16:10.110 --> 16:12.110
这个玩意是Undefend的

16:12.110 --> 16:14.110
LockedID是Undefend的

16:14.110 --> 16:16.110
他为什么是Undefend的呢

16:16.110 --> 16:17.110
说明没有过渠道

16:17.110 --> 16:19.110
LockedID

16:19.110 --> 16:20.110
然后呢

16:20.110 --> 16:23.510
我们看一下是

16:23.510 --> 16:31.180
稍微把它放小一点

16:31.180 --> 16:33.180
Oside下边

16:33.180 --> 16:34.180
ID

16:34.180 --> 16:36.180
LockedID

16:36.180 --> 16:43.100
对不对

16:43.100 --> 16:46.100
他获取不到这个P元数

16:46.100 --> 16:48.100
那我们在控制台里面再试一试

16:48.100 --> 16:51.100
他说这个P元数

16:51.100 --> 16:52.100
获取不到

16:52.100 --> 16:53.100
获取出来是Undefend的

16:53.100 --> 16:56.100
那我们再试一试吧

16:56.100 --> 17:00.100
LockedID

17:00.100 --> 17:04.310
获取到了

17:04.310 --> 17:06.310
写错了

17:06.310 --> 17:09.310
这里也写错了

17:09.310 --> 17:11.940
好了

17:11.940 --> 17:13.940
保存

17:13.940 --> 17:15.940
想不到就两行代码

17:15.940 --> 17:17.940
两行代码全会写错

17:17.940 --> 17:18.940
就出现了对吧

17:18.940 --> 17:21.940
里程和账号

17:21.940 --> 17:22.940
我这里说一下

17:22.940 --> 17:24.940
为什么这里要跟他说

17:24.940 --> 17:25.940
要用InnerTex

17:25.940 --> 17:27.940
不能用Inner

17:27.940 --> 17:28.940
还天没

17:29.940 --> 17:31.940
包括下面也是一样

17:31.940 --> 17:32.940
为什么呢

17:32.940 --> 17:33.940
好像都是一样的

17:33.940 --> 17:35.940
有什么区别呢

17:35.940 --> 17:38.940
看着我马上给你们看区别

17:38.940 --> 17:42.940
接下来我重新注册一个账号

17:42.940 --> 17:43.940
这个账号

17:43.940 --> 17:45.940
我写的是里程

17:45.940 --> 17:46.940
是吧

17:46.940 --> 17:48.940
那两个都写吧

17:48.940 --> 17:50.940
里程的账号

17:50.940 --> 17:51.940
我这样的写

17:51.940 --> 18:01.210
我的账号是这样子的

18:01.210 --> 18:07.350
我的里程是这样的

18:07.350 --> 18:15.760
我的密码随便写一个

18:15.760 --> 18:36.420
点注册

18:36.420 --> 18:39.420
他说我的账号太长了

18:39.420 --> 18:41.420
写的太长了

18:42.420 --> 18:44.420
我把这个写到里程里面

18:44.420 --> 18:49.760
不知道里程有没有这个限制

18:49.760 --> 18:55.250
账号就写这个

18:55.250 --> 18:57.250
里程也太长了

19:04.390 --> 19:06.390
还是里程太长了

19:06.390 --> 19:09.390
我那边服务器有制服限制

19:09.390 --> 19:10.390
制服数量限制

19:10.390 --> 19:12.390
制服限制对这个东西

19:12.390 --> 19:15.390
限制还是不是多好

19:16.390 --> 19:18.390
不是很好

19:21.390 --> 19:22.390
我想一想

19:22.390 --> 19:27.240
那我这样吧

19:27.240 --> 19:28.240
我去掉结尾

19:28.240 --> 19:29.240
就这样

19:29.240 --> 19:33.260
好 注册成功

19:33.260 --> 19:34.260
那么登入账号的时候

19:34.260 --> 19:44.740
我就这样登入

19:44.740 --> 19:46.740
进去

19:46.740 --> 19:48.740
你首先看到这里

19:48.740 --> 19:50.740
是不是显示至少混乱了

19:50.740 --> 19:52.740
其实如果说我服务器那边

19:52.740 --> 19:54.740
没有对长度进行限制的话

19:54.740 --> 19:56.740
当然这个玩意是不能光靠

19:56.740 --> 19:57.740
长度进行限制的

19:57.740 --> 19:59.740
肯定是不保险的

19:59.740 --> 20:01.740
那么这里就显示了个

20:01.740 --> 20:03.740
H1元素 你看到没

20:03.740 --> 20:04.740
这就是使用

20:04.740 --> 20:07.740
包括下边之前有个你称

20:07.740 --> 20:09.740
你看是不是显示了一个这个

20:09.740 --> 20:10.740
对吧

20:10.740 --> 20:11.740
至于我后来

20:11.740 --> 20:12.740
我当时

20:12.740 --> 20:13.740
这次李万熙给你补通了

20:13.740 --> 20:14.740
结束标记

20:14.740 --> 20:16.740
当时我没有写结束标记

20:16.740 --> 20:18.740
所以会导致就出现这个问题

20:18.740 --> 20:21.740
同学们在任何时候

20:21.740 --> 20:22.740
再做前端也好

20:22.740 --> 20:24.740
后边你们却能露得结实

20:24.740 --> 20:26.740
去写一些简单的后端程序也好

20:26.740 --> 20:29.740
任何时候是不能信任

20:29.740 --> 20:31.740
用户的

20:31.740 --> 20:33.740
给你提交的内容的

20:33.740 --> 20:35.740
是完全不能信任的

20:35.740 --> 20:37.740
它跟你提交一些稀奇不怪的东西

20:37.740 --> 20:39.740
一些网易的标记

20:39.740 --> 20:41.740
甚至你们以后学了搜口

20:41.740 --> 20:43.740
还给你提交一些搜口语句

20:43.740 --> 20:45.740
那么这些东西都是要做注入攻击

20:45.740 --> 20:47.740
你不能去信任它

20:47.740 --> 20:49.740
那怎么办呢

20:49.740 --> 20:51.740
你提交的是什么

20:51.740 --> 20:52.740
我要显示的时候

20:52.740 --> 20:54.740
就直接显示的是纯文本

20:54.740 --> 20:58.740
而不能把它当成ATM的一部分来显示

20:58.740 --> 21:00.740
那么这里应该使用什么

21:00.740 --> 21:01.740
InnerTest

21:01.740 --> 21:03.740
因为你使用InnerTest之后

21:03.740 --> 21:05.740
再看

21:05.740 --> 21:07.740
它就正常了

21:07.740 --> 21:09.740
它就变成纯文本了

21:09.740 --> 21:11.740
你写的是啥我就显示啥

21:11.740 --> 21:12.740
你看

21:12.740 --> 21:14.740
其实你在这里点击

21:14.740 --> 21:15.740
有的右键

21:15.740 --> 21:17.740
ATM

21:17.740 --> 21:19.740
你就会看到它把这些标记

21:19.740 --> 21:21.740
全部给你进行编码之后的

21:21.740 --> 21:23.740
那么这就不是一个ATM的一部分了

21:23.740 --> 21:25.740
它就是个纯文本的

21:25.740 --> 21:27.740
你写的是啥我显示啥

21:27.740 --> 21:28.740
还有一种做法就是

21:28.740 --> 21:29.740
你提交到服务器的时候

21:29.740 --> 21:31.740
服务器在那边检测到

21:31.740 --> 21:32.740
你提交的信息里边

21:32.740 --> 21:33.740
包含标记

21:33.740 --> 21:35.740
包含一些我不希望看到的东西

21:35.740 --> 21:37.740
服务器直接给你删掉

21:37.740 --> 21:39.740
或者直接给你提示错误

21:39.740 --> 21:41.740
这也是一种办法

21:41.740 --> 21:43.740
另外就是将我们这种做法

21:43.740 --> 21:45.740
服务器那边不管

21:45.740 --> 21:46.740
不管你提交的是啥

21:46.740 --> 21:47.740
但是你显示的时候

21:47.740 --> 21:50.740
你不能要做一个处理

21:50.740 --> 21:52.740
懂了意思吧

21:52.740 --> 21:54.740
所以这一块一定要用ATM

21:54.740 --> 21:55.740
包括这里

21:55.740 --> 21:56.740
你聊天的一些信息

21:56.740 --> 21:58.740
全部都得用ATM

21:58.740 --> 21:59.740
Inner Text

21:59.740 --> 22:01.740
不能用Inner ATM

22:01.740 --> 22:03.740
这是关于这一块

22:03.740 --> 22:05.740
我这里还是换回

22:05.740 --> 22:14.230
之前那个账号

22:15.230 --> 22:17.230
好 那么这一块做完了

22:17.230 --> 22:19.230
那接下来做这个时间

22:19.230 --> 22:21.230
这是注销世界

22:21.230 --> 22:23.230
这个时间很简单

22:23.230 --> 22:26.610
我们先把简单做了

22:26.610 --> 22:28.610
注销世界

22:28.610 --> 22:30.610
这是设计到一个动物元素

22:30.610 --> 22:32.610
动物元素就是这个按钮

22:32.610 --> 22:34.610
这个按钮是啥呀

22:34.610 --> 22:36.610
是DIV Close

22:36.610 --> 22:38.610
找到这个

22:38.610 --> 22:45.570
OK

22:45.570 --> 22:47.570
那么给它注销世界

22:47.570 --> 22:49.570
Domus Close

22:49.570 --> 22:51.570
点击之后

22:53.570 --> 22:55.570
点击之后干嘛呢

22:55.570 --> 22:58.570
首先调用API里面的Login Out

22:58.570 --> 23:00.570
这个Login Out起来作用还记得吗

23:00.570 --> 23:02.570
就是把那个Token E3

23:02.570 --> 23:04.570
Token E3就完事了

23:04.570 --> 23:05.570
好 咱们之后

23:05.570 --> 23:08.570
我们再给它调转页面

23:08.570 --> 23:12.580
调转到登录页

23:12.580 --> 23:13.580
它就完事了

23:13.580 --> 23:14.580
它就注销

23:14.580 --> 23:15.580
非常简单

23:15.580 --> 23:16.580
试一下 点击

23:16.580 --> 23:18.580
对吧 就完事了

23:18.580 --> 23:22.600
好 你现在再进去就进不去了

23:22.600 --> 23:24.600
你看 微登录 登录页过期

23:24.600 --> 23:25.600
重新登录

23:25.600 --> 23:31.500
好 这个完了

23:31.500 --> 23:32.500
那么接下来就是

23:32.500 --> 23:34.500
获取这个历史记录

23:36.500 --> 23:37.500
就在这 这里呢

23:37.500 --> 23:38.500
我写的是静态页面

23:38.500 --> 23:41.500
已经给你写好了两个消息了

23:41.500 --> 23:43.500
一个消息呢 是我发的

23:43.500 --> 23:45.500
一个DIV 是我发的

23:45.500 --> 23:48.500
然后呢 是我的头像

23:48.500 --> 23:50.500
ERVATA

23:50.500 --> 23:51.500
这头像是固定的

23:51.500 --> 23:53.500
就是我的头像是固定的

23:53.500 --> 23:54.500
然后呢 这是消息的内容

23:54.500 --> 23:56.500
这是消息的时间

23:56.500 --> 23:58.500
发送的消息的时间

23:58.500 --> 24:00.500
然后呢 这是机器人给我回的消息

24:00.500 --> 24:01.500
机器人发的消息呢

24:01.500 --> 24:02.500
它的ERVATA

24:02.500 --> 24:04.500
就是它的头像固定的

24:04.500 --> 24:05.500
是这个

24:05.500 --> 24:07.500
然后呢 这是它的消息的内容

24:07.500 --> 24:08.500
这是它的消息的时间

24:08.500 --> 24:09.500
对吧

24:09.500 --> 24:10.500
那我这里呢 为了方便

24:10.500 --> 24:11.500
我后面的操作

24:11.500 --> 24:13.500
我先写上这么一个函数

24:14.500 --> 24:15.500
写上这么一个函数

24:15.500 --> 24:18.500
就是天加一条消息

24:18.500 --> 24:20.500
叫做AED

24:22.500 --> 24:24.500
天加一条消息

24:24.500 --> 24:26.500
叫做Chart

24:27.500 --> 24:29.500
天加一条

24:29.500 --> 24:30.500
那么这个函数的作用呢

24:30.500 --> 24:31.500
是把消息

24:31.500 --> 24:33.500
你给我一个消息对象

24:33.500 --> 24:39.130
根据消息对象

24:39.130 --> 24:43.130
然后呢 将其天加到

24:43.130 --> 24:44.130
页面中

24:44.130 --> 24:45.130
那么天降到哪呢

24:45.130 --> 24:48.130
天降到这个DIV里面去

24:48.130 --> 24:49.130
所以呢 我们这里

24:49.130 --> 24:50.130
获取到这个DIV吧

24:50.130 --> 24:52.130
Chart

24:52.130 --> 24:53.130
contain

24:53.130 --> 25:01.150
好 容器 获取到了

25:01.150 --> 25:02.150
那么你要给我的是什么呢

25:02.150 --> 25:05.150
给我的是一个消息的对象

25:05.150 --> 25:06.150
那么这个消息的对象

25:06.150 --> 25:07.150
哪来的呢

25:07.150 --> 25:08.150
我们在

25:08.150 --> 25:10.150
是通过的API

25:10.150 --> 25:11.150
里面不是有一个

25:11.150 --> 25:13.150
叫做Get History吗

25:13.150 --> 25:14.150
对吧

25:14.150 --> 25:15.150
这里面不是有消息对象吗

25:15.150 --> 25:17.150
我来看一下有消息对象

25:17.150 --> 25:22.920
你看这个消息对象

25:22.920 --> 25:23.920
每个是不是有消息对象

25:23.920 --> 25:25.920
有什么 有这么几个属性

25:25.920 --> 25:26.920
对吧

25:26.920 --> 25:27.920
是不是这么几个属性

25:27.920 --> 25:28.920
ID呢

25:28.920 --> 25:29.920
我倒是不是很care

25:29.920 --> 25:31.920
我主要是看这几个属性

25:31.920 --> 25:32.920
所以说你至少给我对象的时候

25:32.920 --> 25:34.920
要给我这么几个属性

25:35.920 --> 25:43.260
要有这么几个属性

25:43.260 --> 25:44.260
好

25:44.260 --> 25:45.260
这里传入这个对象

25:45.260 --> 25:47.260
叫Chart Info

25:48.260 --> 25:49.260
那么接下来

25:49.260 --> 25:50.260
我来根据这个对象

25:50.260 --> 25:52.260
来创建一条消息

25:52.260 --> 25:54.260
我们这里可以去

25:54.260 --> 25:56.260
一会可以在这里试一试吧

25:56.260 --> 25:57.260
ADChart

25:57.260 --> 25:58.260
比方说我要创

25:58.260 --> 26:00.260
我给他一个对象

26:00.260 --> 26:02.260
对象里面就这么四个属性

26:02.260 --> 26:03.260
来吧

26:03.260 --> 26:04.260
你来根据这四个属性

26:04.260 --> 26:05.260
来创建一条消息

26:05.260 --> 26:08.580
把它加到一面上去

26:08.580 --> 26:09.580
好 那么怎么写呢

26:09.580 --> 26:11.580
首先我们肯定要创建一个DIV

26:11.580 --> 26:12.580
对吧

26:12.580 --> 26:13.580
所以说我们这里

26:13.580 --> 26:14.580
通过这个符号

26:14.580 --> 26:16.580
之前有个comment里面有

26:16.580 --> 26:17.580
创建一个元素

26:17.580 --> 26:19.580
看下我记得试写的

26:19.580 --> 26:23.210
这个create element

26:23.210 --> 26:25.210
好 创建一个元素

26:25.210 --> 26:26.210
DIV

26:28.780 --> 26:30.780
这个DIV的内样式是

26:30.780 --> 26:33.780
class class list

26:33.780 --> 26:34.780
add

26:34.780 --> 26:36.780
先加一个内样式ChartItem

26:36.780 --> 26:38.780
这是必须有的

26:38.780 --> 26:39.780
固定的

26:39.780 --> 26:40.780
现在关键是

26:40.780 --> 26:41.780
有没有这个内样式

26:41.780 --> 26:43.780
就是不是我发的消息

26:43.780 --> 26:45.780
你看我发的消息

26:45.780 --> 26:46.780
它在这边

26:46.780 --> 26:49.780
然后有些不太一样的样式

26:49.780 --> 26:50.780
对吧

26:50.780 --> 26:51.780
所以说我们要首先

26:51.780 --> 26:52.780
去看是不是我发的消息

26:52.780 --> 26:53.780
那怎么来看

26:53.780 --> 26:54.780
是不是我发的消息呢

26:54.780 --> 26:57.780
就看Front是消息的发送者

26:57.780 --> 27:00.780
是谁发给谁的

27:00.780 --> 27:03.780
如果说Front为有值

27:03.780 --> 27:04.780
表示说

27:04.780 --> 27:06.780
这个消息是人发给机器人的

27:06.780 --> 27:08.780
NOW表示机器人

27:08.780 --> 27:10.780
如果说Front是NOW的话

27:10.780 --> 27:12.780
那就表示是机器人发的

27:12.780 --> 27:13.780
对吧

27:13.780 --> 27:14.780
所以说我要判断

27:14.780 --> 27:16.780
这个消息是人发的

27:16.780 --> 27:17.780
非常简单

27:17.780 --> 27:18.780
我就看一下

27:18.780 --> 27:20.780
你这个Front是不是等于

27:20.780 --> 27:21.780
是不是有值

27:21.780 --> 27:22.780
对吧

27:22.780 --> 27:23.780
所以我们判断一下

27:23.780 --> 27:25.780
如果说ChartInfo里面的

27:25.780 --> 27:27.780
Front有值

27:27.780 --> 27:29.780
那么就是人发给机器人的

27:29.780 --> 27:30.780
那么这个时候

27:30.780 --> 27:32.780
我们就把它写上

27:32.780 --> 27:33.780
添加一个

27:33.780 --> 27:36.920
me

27:36.920 --> 27:38.920
而是我发的

27:38.920 --> 27:40.920
懂这意思吗

27:40.920 --> 27:41.920
好

27:41.920 --> 27:42.920
内样式搞定了

27:42.920 --> 27:44.920
然后里面还有三个元素

27:44.920 --> 27:46.920
首先是一个Image元素

27:46.920 --> 27:47.920
来创建一个

27:47.920 --> 27:51.620
Image元素

27:53.620 --> 27:54.620
Image元素

27:54.620 --> 27:56.620
它有一个内样式

27:56.620 --> 28:03.620
为Chart而发套

28:04.620 --> 28:06.620
它有一个SRC地址

28:06.620 --> 28:07.620
好

28:07.620 --> 28:08.620
SRC地址呢

28:08.620 --> 28:10.620
又有争议了

28:11.620 --> 28:13.620
它地址又有争议了

28:13.620 --> 28:15.620
它地址取决于啥

28:15.620 --> 28:17.620
取决于是我发的

28:17.620 --> 28:19.620
那么就

28:19.620 --> 28:20.620
是这个地址

28:20.620 --> 28:21.620
是机器人发的就是这个地址

28:21.620 --> 28:22.620
所以说我们这里

28:22.620 --> 28:23.620
判断一下

28:23.620 --> 28:25.620
ChartInfoFront

28:25.620 --> 28:26.620
是人发的吗

28:26.620 --> 28:27.620
是人发的的话

28:27.620 --> 28:28.620
就是这个地址

28:28.620 --> 28:30.620
否则的话就是

