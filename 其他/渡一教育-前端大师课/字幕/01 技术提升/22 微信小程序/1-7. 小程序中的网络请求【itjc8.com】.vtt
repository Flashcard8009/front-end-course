WEBVTT

00:00.000 --> 00:05.760
OK 上节课的话 我们讲了这个路由对吧 讲了路由之后

00:05.760 --> 00:10.680
然后就是页面之间的这个跳转 你就没问题了 啊 理论上来讲的话

00:10.680 --> 00:15.280
你现在一个这个本地的这个小程序啊 你就可以做了啊 一个简单的小程序

00:15.720 --> 00:21.640
但是呢 我们知道就是我们这个在做小程序的时候 往往这个数据啊 数据他不是写死的

00:22.080 --> 00:27.160
数据的话应该是什么呢 就是和服务器通信 然后服务器是返回给我们的

00:27.840 --> 00:35.880
对不对 啊 说实话我们这一节课 我们就来看一下小程序中的这个网络请求啊 对应的是这个官网的这一块

00:36.800 --> 00:48.000
就这边4点4 发起https网络请求啊 我们还是老规矩啊 这边带着大家把这个官方文档看一下 然后重点的话 寄到这个笔记里面

00:49.880 --> 00:56.040
小程序常常需要就是往服务器传递数据 或者从服务器拿取这个信息

00:56.480 --> 01:06.720
啊 我们一般在和服务器进行通信的时候啊 不是说单方面的只能服务器啊 这个发数据给我们 我们也可以干嘛呢 我们也可以提交数据给服务器

01:07.400 --> 01:14.520
对不对 最这个最典型的就是登录注册的时候啊 你无论是登录还是注册 你是不是都是要把你本地

01:14.880 --> 01:20.640
用户所就是在那个表单里面所输入的这个信息是发送给服务器 对不对

01:21.600 --> 01:27.720
好 然后在小程序里面的话 使用了什么呢 使用了wx的request这个API

01:28.880 --> 01:35.720
这边呢 就涉及到这个API的这个使用了啊 你让他这边 他这个文档啊 他这边就分为这么几块啊 首先这边有这个指南

01:36.440 --> 01:45.080
框架 然后架这边 主键和API 你看我们上节课的这个路由 它也算是什么 是不是 也在这个API这个分内里面

01:46.080 --> 01:53.680
对不对 我们上节课讲了这个路由 它也在这个API这个分内里面啊 然后主键 主键的话 像我们使用的 比如说 我们现在使用的这个

01:54.200 --> 02:01.440
像vue啊 然后还有就是这个text啊 这些就是一个一个的这个主键啊 用在那个wxmail里面的

02:03.040 --> 02:03.800
好 回到这边

02:05.160 --> 02:13.080
好 我们使用wxrequest这个API啊 然后为了叙述方便 他这边假设他的这个域名叫做test.com

02:13.920 --> 02:21.040
好 我们来看一下 他这边的话wx这个wx.request啊 他这边的话给了一个势力代码

02:21.640 --> 02:30.920
他这边的话 接收一个什么 接收一个配置对象 对不对 这是一个配置对象 那既然是配置对象的话 里面就有一项一项的这个配置项目

02:31.320 --> 02:36.120
我们来看看有哪些 首先的话 ur 啊 这边你要请求的这个地址

02:36.600 --> 02:45.400
然后接下来的话 这边是这个sixsense 这个是什么呢 这个是就是啊 你请求成功之后的这个回调 你看这个东西眼熟吧 各位

02:46.680 --> 02:52.040
眼熟吧 这个是不是就是和我们那个接query里面的这个啊 甲课师

02:52.840 --> 03:00.440
是不是基本上如初一则呀 对不对 但前提是你学过这个接query啊 你如果没学过接query的话 你估计有点陌生

03:00.680 --> 03:05.400
但但凡你学过这个接query的话 你可以发现这个是吧 就和接query里面的那个downer点

03:05.640 --> 03:10.680
啊甲课师那个方法 基本上就如初一则 对不对 基本就一样的啊

03:11.400 --> 03:16.360
好 我们这边看一下 他这边有的这个参数啊 有这么一些啊 有url

03:16.760 --> 03:21.320
data 啊header message 都是一些常见的啊 这个是你请求的地址

03:21.800 --> 03:27.080
这个是你的这个参数啊 然后这边你可以设置这个请求头 这是你请求的这个方法

03:27.560 --> 03:32.520
对不对啊 这个是data type 这是关于这个回包的时候啊 回包的时候 然后加

03:33.000 --> 03:41.000
如果设为这个接审 他就默认会对数据做一次接审解析 但他默认值 你看他 这边有个默认值 默认值就是接审啊

03:42.280 --> 03:47.800
好 让6sense 6sense是这个收到这个服务器啊 就成功的时候的回调

03:48.360 --> 03:55.160
fail fail是失败的时候的回调啊complete是这个结束之后 就我不管成功还是失败 我都会回调

03:55.560 --> 04:00.840
ok 好 然后把这个的话 我们截个图 把这个截个图

04:02.440 --> 04:11.030
然后放到我们的笔记里面 ok 好 然后我们这边稍微记一下啊 在小程序中

04:12.390 --> 04:18.870
使用什么 使用wx.request这个方法

04:20.550 --> 04:25.430
这个方法来发送网络请求

04:26.390 --> 04:27.990
对不对啊 整个

04:30.070 --> 04:34.870
整个请求的这个方式和什么呢 和这个接query

04:35.590 --> 04:39.190
里面的这个downer.ajakos

04:41.190 --> 04:42.070
ajakos

04:43.430 --> 04:47.350
方法是啊 非常相似的

04:48.550 --> 04:52.550
对不对 所以你如果学过这个接query 用过里面的这个downer.ajakos

04:52.950 --> 04:57.430
那你一下子就上手了啊 但你如果没有学过这个接query 那这个的话也不难

04:58.070 --> 05:04.870
对不对 这个有什么难的吗 就这边的话传入一个配置对象 配置对象里面就是有这些这个配置项目对不对

05:05.750 --> 05:12.890
好 在这个就这个方法中 在这个方法中

05:13.610 --> 05:19.130
接收一个配置对象啊 然后该配置对象

05:19.930 --> 05:22.010
该配置对象中

05:22.970 --> 05:25.450
接收的配置项目就能够

05:26.650 --> 05:30.730
能够配置的项目如下表

05:32.650 --> 05:38.810
ok 把这个稍微缩放一下 缩到58%

05:39.530 --> 05:46.970
哎 缩救了 缩救了 就这样吧 好 这边啊 你注意一下就只有u12是必填的

05:47.530 --> 05:51.050
怎么样 u12 这个是必填的 其他都是什么 其他都是选填

05:51.610 --> 05:54.650
其他都选填 他里面的话应该是有些默认值的 ok

05:55.370 --> 05:58.250
好 这是首先第一点 好 那继续往后面看

05:59.610 --> 06:03.770
好 关于这个服务器接口啊 这边对了 这个是个重点

06:04.250 --> 06:10.170
啊 这个是重点 就这边的话这个 urn参数啊 是当前发起请求的服务器接口的地址

06:10.410 --> 06:17.290
他说的就是这个就这个啊 就就他在这边视力了这里啊 这里的话就是你请求的这个服务器的地址

06:18.250 --> 06:27.450
好 那这个数主环境要求recreate发起的网络请求必须是https协议请求

06:27.770 --> 06:32.650
注意这个话重点啊 这个话重点必须是https

06:33.210 --> 06:39.130
好 笔记里面记一笔啊 这边关于服务器接口

06:43.260 --> 06:49.500
首先要求必须是https接口

06:50.220 --> 06:55.660
啊 你如果是这个https的话 他这个是不行的啊 他这边是为了这个安全 ok

06:56.620 --> 07:03.260
好 因此开发者服务器必须提供什么呢 必须提供https服务的这个接口啊

07:03.740 --> 07:10.300
然后同时你看他这边还有第二点 这个是低刚才那个https是第一个要求啊 第二个要求

07:10.620 --> 07:13.100
同时为了保证这个小程序

07:13.580 --> 07:19.100
不乱用任意域名的这个服务 你还需要什么呢 你还需要把你请求的域名

07:19.500 --> 07:23.260
在这个小程序管理平台进行配置

07:25.020 --> 07:27.180
那这是第一点 第二点

07:27.980 --> 07:35.260
好 这边说一下啊 就是有关服务器接口的配置

07:36.060 --> 07:39.340
需要满足以下

07:40.460 --> 07:47.180
两点啊 以下两点 首先第一个https接口 第二点是什么呢 就是域名

07:48.140 --> 07:49.740
啊 就是https

07:50.700 --> 07:57.420
s接口对应的这个域名还必须要在

07:58.540 --> 08:03.740
啊 要在什么呢 要在他这边所说的小程序管理平台进行配置

08:06.230 --> 08:09.830
ok 那这个具体在哪里呢 啊 这边呢 我就需要你重新

08:10.310 --> 08:12.870
在这边的话 打开你的这个

08:13.670 --> 08:17.350
这叫什么呢 微信公众平台 是吧 这个我第一节课介绍过了

08:17.830 --> 08:19.830
微信公众平台

08:21.510 --> 08:25.750
啊 点进去 点进去之后 然后加这边少一下码

08:26.630 --> 08:35.820
稍等 少一少 稍等啊 我这边在扫码

08:38.300 --> 08:42.780
好 我这边扫码成功了 扫码成功之后进去进去之后

08:43.500 --> 08:49.580
我记得是在我看一下 我记得是在开发的地方 开发管理

08:50.540 --> 08:57.260
开发管理 然后这边是运维 然后开发设置

08:57.260 --> 08:58.540
我看一下 是不是开发设置

08:59.100 --> 09:02.540
啊 对啊 就是在开发设置里面 还是在这里

09:02.540 --> 09:07.100
ok 还是这儿啊 就是你这边的这个开发开发管理

09:07.100 --> 09:10.540
然后开发设置啊 在这个开发

09:12.140 --> 09:16.300
开发 然后这个开发管理

09:16.860 --> 09:19.020
开发管理

09:19.900 --> 09:24.300
然后这边开发管理过了是开发设置

09:25.100 --> 09:27.980
开发设置啊 然后下面

09:29.100 --> 09:33.180
有一个有一个什么呢 有一个这个服务器域名

09:34.540 --> 09:36.940
有一个服务器域名啊

09:37.500 --> 09:43.260
然后在这个位置 在这个位置进行配置

09:44.220 --> 09:47.100
ok 我给大家截个图啊 就在这个地方

09:49.960 --> 09:53.240
好 截个图 这边服务器域名

09:54.440 --> 09:56.760
你看我这边呢 是不是就配置了一些 对不对

09:56.760 --> 10:00.120
它主要就配置这个 这边这个request

10:00.760 --> 10:03.480
合法域名 你看我这边就配置了一些

10:03.480 --> 10:05.640
ok 可配置数量200个

10:07.320 --> 10:09.560
好 放到笔记里面

10:12.300 --> 10:13.180
好 说放一下

10:15.640 --> 10:19.080
ok 你这边你就点什么呢 就点这个修改

10:19.640 --> 10:20.760
点修改 你进来

10:21.480 --> 10:24.760
进来了之后他需要这个身份验证 然后他又需要你扫码

10:24.760 --> 10:26.920
你注意他这边的话 就是平凡的需要扫码

10:28.120 --> 10:30.920
只要你修改了一个 就是他这边后台的这个配置

10:30.920 --> 10:34.760
他就需要你扫码 扫码进来 你看这边的话就可以进行配置

10:35.640 --> 10:37.400
那加这边 你看这个是第一个

10:37.800 --> 10:41.240
然后加这边是第二个 你就往里面添加就可以了

10:41.400 --> 10:47.720
ok 我这边就不配置了 我把它关了

10:48.840 --> 10:52.120
ok 总之就是在这个地方配置 大家知道了吧

10:53.240 --> 10:57.160
好 然后接下来的话有个问题 就是我如果是开发环境怎么办

10:59.160 --> 11:02.520
我如果是开发环境

11:03.880 --> 11:05.160
对不对 怎么办

11:06.760 --> 11:11.800
因为我开发环境的话 我这边很可能涉及到就是我的这个服务器接口这些

11:11.800 --> 11:16.360
我还没有去搞这个就是 htps 还没有去弄这些

11:16.920 --> 11:19.960
那这个怎么办呢 他这个的话也给你提供了一个方法

11:21.080 --> 11:24.840
在这边 我们来看一下 一般在开发阶段时

11:25.400 --> 11:31.000
我们的这个开发阶段的服务器接口还没有部署到现网的这个域名下面

11:31.560 --> 11:36.120
对不对 然后考虑到这一点 为了方便大家进行这个开发

11:36.600 --> 11:41.480
然后接下来他这边可以干嘛呢 他可以允许你使用这个任意域名

11:41.880 --> 11:43.960
但是呢 他这边的话我看

11:44.920 --> 11:53.320
这边应该是写的有使用任意域名 然后只需要把那个打上钩就可以了 我看他他没写吗

11:54.440 --> 11:57.480
稍等啊 我看一下 我记得他写了的呀

11:59.660 --> 12:05.020
嗯 好像真的真的没写啊 真的没写啊 我看一下这边

12:05.820 --> 12:09.340
啊 确实没有啊 确实没有啊 是不是在这 我看一下

12:09.900 --> 12:12.860
是不是在这 这有个3 我看我能不能点过去

12:13.980 --> 12:17.500
呃 还是这个是吧

12:18.780 --> 12:21.980
是不是在是不是在最下面我看一下 3是不是在最下面

12:24.380 --> 12:27.020
呃 这里 3

12:29.020 --> 12:36.700
也不是这个也不是这个 ok 行啊 他这边没写没写的话 然后我说一下哈 就这种开发阶段然后怎么办呢

12:37.020 --> 12:41.180
他这边让他考虑到这一点之后 他给你提供了就是在微信小程序这边

12:42.140 --> 12:43.420
这边有个详情

12:44.220 --> 12:49.820
看到没有 详情你把它打开 打开之后 然后接下来这边有一个本地的设置

12:50.460 --> 12:52.940
啊 本地的设置 然后接下来这边有一个这个

12:53.580 --> 13:00.220
不教验合法域名啊 然后以及什么的 以及这个啊 这些这些啊 然后以及这个http

13:00.620 --> 13:04.220
s的这个证书 ok 你把这个打开就可以了啊

13:04.860 --> 13:07.820
打开之后他小程序会自动的编译一次 这个你不用管他

13:08.220 --> 13:11.180
因为你修改了配置嘛 对吧 这个也很好理解

13:12.380 --> 13:15.420
好 这边这边的话 你是点这个详情

13:16.700 --> 13:22.700
先点详情 然后点本地设置 然后接下来把这个打上钩

13:24.220 --> 13:27.100
ok 我们在笔记里面记一遍啊

13:29.020 --> 13:30.860
在开发环境下

13:31.580 --> 13:34.380
因为就是这个域名

13:35.100 --> 13:39.580
就是他那句话怎么说的来着啊 我先把这个图粘过来啊

13:40.700 --> 13:42.700
先把图粘过来啊 缩放一下

13:44.060 --> 13:49.900
啊 回到他这边啊 因为就是这个开发阶段的服务器啊 对 就这句话拿过来

13:50.460 --> 13:55.340
啊 因为这个开发阶段的这个服务器接口啊 还没有部署到现网的域名下

13:56.060 --> 14:03.180
所以我们可以选择不教验 对不对 不教

14:04.380 --> 14:06.380
不教对

14:07.100 --> 14:12.060
教验应该有啊 这不教验什么 不教验这个http

14:13.180 --> 14:20.540
https这个证书啊 具体的方式如

14:21.340 --> 14:23.340
下图所示

14:24.300 --> 14:32.540
ok啊 这边的话详情啊 本地设置让大家把这个勾上就搞定了好吧啊 这是关于这个服务器这边

14:33.980 --> 14:39.900
好 然后接下来话咱们继续往下啊 接下来的话他就是关于就是请求参数了

14:41.180 --> 14:44.620
请求参数 请求参数的话一般来讲的话我们就两个

14:45.340 --> 14:47.900
一个是get一个是post

14:48.540 --> 14:54.620
对不对啊get的话有两种方式get的话你这边你比如说要向服务器带数据的话你这边

14:55.980 --> 15:02.060
是不是通过就是把这个数据拼接在这个 ur 后面是不可以通过这种方式啊 对不对

15:02.300 --> 15:05.100
还可以干嘛呢 还可以这个就是通过这个data

15:05.740 --> 15:10.860
通过data啊 哪种方式要好一些呢 一般来讲的话推荐使用这种方式

15:11.500 --> 15:17.580
data为什么呢 我们来看一下啊 就两种实现方式啊 表现几乎是一样的

15:17.980 --> 15:23.580
但是你要留意就是url的长度是有限的 就如果你选择把你的数据拼接在这个

15:24.060 --> 15:29.820
url后面 那这个url它本身长度是有限的啊 最大长度的话它是1024

15:30.460 --> 15:34.380
而且你这个参数的值它还会做一次这个url in code

15:35.260 --> 15:40.860
对不对啊 所以说你这边的话一般是什么呢 一般就是建议使用这个data参数

15:41.900 --> 15:45.180
你如果是采用这个post的话post必须是这个data

15:45.740 --> 15:51.660
对不对 作为了统一的话一般我们就选择这个使用data啊 我们在笔记里面记一下

15:52.700 --> 15:55.020
刚才那个是关于服务器接口

15:56.780 --> 16:04.120
我们这个弄个标题吧 弄个标题啊 这边关于向服务器传三

16:05.160 --> 16:06.200
稍等啊 卡住了

16:08.360 --> 16:09.000
卡住了

16:09.960 --> 16:13.320
那向服务器传递

16:15.850 --> 16:17.450
传递参数

16:17.930 --> 16:21.770
ok 好 这边的话就是一般来讲

16:22.410 --> 16:23.610
呃 用的比较多的

16:24.410 --> 16:28.330
用的比较多的有这个git

16:29.050 --> 16:30.410
和post

16:31.210 --> 16:31.610
请求

16:32.250 --> 16:34.090
好 那接下来关于这个git

16:34.970 --> 16:37.290
git的话你可以放在什么呢 可以

16:38.170 --> 16:46.650
放在这个url后面对不对 也可以放在哪里也可以放在data

16:47.690 --> 16:48.490
配置箱里面

16:49.770 --> 16:55.130
啊 配置项目里面 所以它data是一个配置项目 你看在这边对不对

16:55.130 --> 17:00.090
那这边是一个配置项目啊 支持的类型是object或者是street

17:00.090 --> 17:02.970
但我们一般的话用这个对象要多一些对不对

17:03.530 --> 17:05.210
好 然后如果是这个post

17:06.170 --> 17:08.570
如果是post post的话是不是就是只能

17:09.850 --> 17:13.370
只能放在这个data里面

17:14.650 --> 17:18.730
对不对 加上你这个 你如果是放在url后面的话这个长度

17:19.610 --> 17:20.810
长度有限制

17:21.770 --> 17:25.770
就url啊 url长度有限制

17:26.410 --> 17:32.570
并且还会做一次什么呢 做一次这个url的这个incode

17:33.530 --> 17:35.370
对不对 大家做一次这个转码

17:35.370 --> 17:37.690
说这边的话 终上所述

17:38.970 --> 17:46.410
终上所述建议就把什么呢 就把数据放在哪里放在data里面

17:47.450 --> 17:50.010
对吧 你就放在data里面就可以了啊

17:50.010 --> 17:53.370
这是关于这个像服务器传递这个数据

17:54.410 --> 17:59.610
好 然后这边其他就没什么了 其他都是大家学过的这个知识啊

17:59.610 --> 18:01.370
都是大家学过的知识

18:01.850 --> 18:04.010
ok 然后关于这个回报

18:04.890 --> 18:06.090
这边是收到回报

18:10.100 --> 18:12.340
收到回报啊 收到回报的话

18:12.340 --> 18:18.580
然后有一个这个sec sense这个回调啊 就就这边最上面这里

18:19.380 --> 18:22.100
这边是不是有个这个sec sense啊 对不对

18:22.100 --> 18:25.300
这个的话就是收到你服务器请求的时候

18:25.300 --> 18:27.700
他的会触发的这个回调函数啊

18:27.700 --> 18:29.140
在这边拿到这个响应

18:30.100 --> 18:32.660
是收到响应啊 收到响应

18:32.660 --> 18:35.060
就收到服务器的这个响应的时候啊

18:35.060 --> 18:36.980
这边的话拿到这个响应信息

18:36.980 --> 18:40.660
ok 这响应信息里面的话大致有什么呢 大致有这么一些

18:42.020 --> 18:44.500
有这个服务器给你返回的数据

18:44.500 --> 18:45.860
还有什么呢 还有这个状态码

18:46.500 --> 18:48.900
还有什么呢 还有就是你的这个响应头

18:49.380 --> 18:51.700
ok 好 注意 就是无论

18:52.580 --> 18:56.740
就是你这边的话只要成功收到这个服务器的返回

18:56.740 --> 18:58.660
都会什么呢 都会进入到

18:59.140 --> 19:02.260
sec sense的这个回调啊 这个也非常好理解

19:02.260 --> 19:04.980
只要服务器给你返回了这个信息对不对

19:04.980 --> 19:08.020
我不管这个信息是就是正儿八经的就是

19:08.020 --> 19:10.340
比如说你注册成功了给你返回成功的信息

19:10.340 --> 19:13.460
还是说比如说你那边服务器那边验证没有通过

19:13.460 --> 19:17.460
然后服务器给你返回的是就是比如说你这边注册失败的这个信息

19:17.460 --> 19:19.860
啊 只要你反正服务器给你返回的信息

19:19.860 --> 19:22.660
那都会进入到sec sense的回调

19:22.660 --> 19:24.340
ok 这边记一笔啊

19:25.060 --> 19:34.260
只要收到了收到了服务器返回的这个信息

19:34.260 --> 19:37.860
都会什么呢 都会进入到

19:37.860 --> 19:41.700
sec sense的回调喊出

19:41.700 --> 19:44.100
ok 都会进去啊

19:44.100 --> 19:50.740
然后然后我们在我们在在什么呢

19:50.820 --> 19:57.700
在在这个就是sec sense回调中回调喊出中

19:57.700 --> 20:00.740
回调喊出中根据什么呢

20:00.740 --> 20:10.260
根据服务器返回的内容来做这个下一步操作

20:10.260 --> 20:12.980
ok 这是关于这个回报

20:12.980 --> 20:17.300
好 然后接下来的话我们这边我们来举一些具体的例子

20:17.460 --> 20:22.420
好 接下来我们来看一个具体的例子

20:24.100 --> 20:26.740
ok 好 回到我们的这个代码里面

20:28.020 --> 20:29.460
代码这边的话我这里

20:30.980 --> 20:32.580
这里的话我新增加一个

20:34.500 --> 20:38.660
新增加一个 比如说我这边的话我们来到app点接手

20:40.420 --> 20:43.700
啊 这边就在app点接手 是吧 好 我们这边新增一个

20:43.700 --> 20:46.740
新增一个什么呢 新增一个比如说叫做page

20:49.560 --> 20:55.080
page是下面的比如说注册register下面的register

20:57.080 --> 21:03.560
ok 好 然后接下来我们把它放在第一个register放在第一个

21:04.920 --> 21:10.760
啊 保存 保存了之后然后下面下面还得增加 是吧

21:10.760 --> 21:12.040
好 把下面也增加一下

21:14.740 --> 21:16.660
这边的话是register

21:17.620 --> 21:19.060
register

21:20.580 --> 21:21.860
然后register

21:21.860 --> 21:23.540
好 我们增加了一个新的table

21:23.540 --> 21:25.300
这个叫做什么呢 这个叫做注册

21:26.340 --> 21:26.900
好 保存

21:27.940 --> 21:33.060
保存之后然后接下来这边注册 是吧 这里 一开始的话就是这个注册的这个页面

21:34.020 --> 21:38.020
好 然后接下来我们在这个注册的页面里面 我们这边的话写两个

21:38.660 --> 21:39.540
就写一点东西

21:40.340 --> 21:41.300
来到这个注册

21:43.500 --> 21:44.220
来到这边

21:45.340 --> 21:48.460
好 我们这边的话view

21:50.730 --> 21:53.770
首先一个view里面 然后这边一个text

21:54.330 --> 21:56.090
这边比如说是账号

21:56.810 --> 21:58.490
那下面的话是一个input

21:59.850 --> 22:01.210
input输入框

22:02.410 --> 22:05.530
ok 好 然后接下来这边给它一个class

22:06.410 --> 22:07.930
class等于一个

22:08.810 --> 22:12.330
啊 你注意啊 这个input的话也是这边主键有 我才用的啊

22:13.290 --> 22:15.850
啊 你这边不要混淆了 就是这边它这个表单主键

22:16.410 --> 22:17.690
它这边有这个input

22:18.170 --> 22:19.130
所以我才能够使用

22:19.770 --> 22:23.050
这个第一节课就给大家讲过的 这个和html是不一样的

22:23.690 --> 22:24.090
对不对

22:25.130 --> 22:29.130
所以有的同学可能就看到我用input 可能 这个不是这个动物里面的吗

22:29.130 --> 22:32.570
它这边它已经做了这个封装了 它封装了一个input主键

22:33.850 --> 22:38.010
好 这边class class的话给它一个比如说叫做locking input

22:40.170 --> 22:41.770
locking input

22:42.970 --> 22:47.290
好 这边是账号 然后接下来的话这边是密码

22:51.100 --> 22:54.540
密码 这边的话是它的type是password

22:55.820 --> 22:58.060
ok 这边叫做比如说pass

22:59.020 --> 23:02.540
就叫做locking input 我们这边只是做一个样式而已

23:03.020 --> 23:05.900
ok 或者叫做这个input

23:07.420 --> 23:10.220
input这个就叫input

23:13.020 --> 23:15.820
ok 好 然后接下来我们这边来看一下

23:17.100 --> 23:17.580
保存

23:18.540 --> 23:21.900
现在是这样子的 对不对 这边一个账号 这个一个密码

23:21.900 --> 23:25.340
也感觉好像这个input好像没有 那实际有没有呢

23:25.340 --> 23:28.220
实际上是有的 你看 这边再闪 大家注意看

23:28.220 --> 23:29.820
这边 这边是不是再闪

23:30.460 --> 23:34.220
对不对 实际上是有的 所以说我们这边的话去设一下

23:34.220 --> 23:39.180
它的这个样式 这边的话点input

23:40.140 --> 23:42.700
这边的话我们给它一个border

23:44.140 --> 23:48.220
border erpx solid 保存

23:48.860 --> 23:51.340
好 现在这个框框是不出来了 对不对

23:51.340 --> 23:55.740
我们甚至还可以给它一个什么呢 给它一个text indent

23:55.740 --> 23:59.660
对吧 给一个比如说srpx 保存

24:01.260 --> 24:03.580
保存 这个好像没用吗

24:04.700 --> 24:05.820
the text indent

24:07.420 --> 24:08.540
好像没效果 是吧

24:09.420 --> 24:11.900
ok 这个下来我看一下 这边它好像没效果

24:12.780 --> 24:15.500
好 那我们就先给border吧 给border

24:15.500 --> 24:17.900
好 这边的话是不是可以输入东西 对不对

24:18.780 --> 24:21.580
好 输入东西之后 然后接下来我们要做什么呢

24:21.580 --> 24:24.860
接下来的话我们要让就是用户输入的这个东西

24:24.860 --> 24:28.220
输入完了之后 然后下可以发送到这个服务器

24:28.780 --> 24:30.460
好 我们这边来两个这个button

24:32.220 --> 24:33.820
这边第一个button是发送

24:35.820 --> 24:37.580
发送get请求

24:39.260 --> 24:40.220
再来一个button

24:42.060 --> 24:43.500
这个呢 是发送

24:46.250 --> 24:48.010
发送post的请求

24:49.930 --> 24:53.610
ok 保存一下 两个button是不是出来了对不对

24:54.330 --> 24:56.410
出来之后 然后下这边的话把那个

24:57.050 --> 24:59.370
这个一会来绑实践吧 一会来绑实践

24:59.850 --> 25:04.490
好 然后接下来的话 我们这边 这边用户比如用户在这里输入

25:07.780 --> 25:10.340
比如用户在这里输入 对不对

25:10.420 --> 25:15.620
输入了之后 然后接下来它这边点击 点击了我们这边是不是要获取这里的这个内容

25:16.340 --> 25:21.140
对不对 好 那我这边的话我就要做一个什么呢 我叫做一个双向的绑定

25:21.780 --> 25:25.060
那如何做这个双向的绑定呢 好 你这边可以这个样子

25:25.620 --> 25:28.980
比如我们先来到register 点js里面

25:29.460 --> 25:33.140
在这里面的话 我们设置两个数据 一个叫做logging id

25:36.570 --> 25:37.690
logging id

25:38.570 --> 25:40.010
对应的是一个控制圈

25:40.730 --> 25:44.010
然后接下来的话是什么呢 接下来是password

25:44.810 --> 25:45.850
对应的是一个控制圈

25:46.410 --> 25:53.690
ok 好 然后加这个和什么呢 和你这边的这个表单做一个双向绑定

25:54.570 --> 25:58.250
啊 如何做双向绑定呢 这边你可以通过这个model

25:59.450 --> 26:03.850
这个实际上是属于这个表单组件里面的这个知识啊 我这边直接就用了

26:03.850 --> 26:08.490
这个大家应该也看得懂啊 这边model 然后value等于一个

26:11.130 --> 26:14.490
这边logging id

26:15.050 --> 26:19.370
这个的话就是和view啊 很相似的一个这个双向绑定

26:19.770 --> 26:24.410
对吧 就相当于那个vigamodel一样 你这边的话用户用户什么回头在这输入值啊

26:24.410 --> 26:28.170
输入这个值之后 然后接下来他和这个logging id做了双向绑定

26:28.170 --> 26:31.210
那回头这个值就会自动的填充到这里

26:32.170 --> 26:34.330
对不对啊 这边的话下面也一样

26:35.050 --> 26:37.850
下面也一样啊 这边这个model

26:38.650 --> 26:41.690
冒号value等于一个

26:45.110 --> 26:46.150
这边是password

26:48.310 --> 26:49.750
对吧啊 保存一下

26:51.910 --> 26:53.030
我们重新编一下

26:55.030 --> 27:00.630
好 然后接下来的话这边 你看好 注意他这边的话出现了一个这个

27:01.670 --> 27:05.670
出现了一个这个 do not handle handle in this component

27:06.230 --> 27:08.870
啊 请保证什么呢 保证你有一个handler

27:09.350 --> 27:14.150
这个的话其实应该算是他小程序里面的一个bug啊 这个我昨天晚上查了的

27:14.950 --> 27:17.830
在这边啊 在这边这个社区这边 这个是

27:18.950 --> 27:23.030
你看一下这边啊 官网上使用这个双向绑定对不对

27:23.430 --> 27:28.470
啊 使用双向绑定之后 人家这边的话会出现这么一个这个问题啊 这边呢他有两个答案

27:29.190 --> 27:34.230
就是什么呢 这个的话他应该是个bug 你需要什么呢 需要添加一个这个bund input

27:34.710 --> 27:39.510
对应一个什么呢 对应一个这个方法 他bund input是什么 bund input是在这边

27:41.270 --> 27:43.990
你看一下啊 这边input 这边这个input的组件

27:45.750 --> 27:52.390
然后他这边的话可以绑定看到没有 绑的input这个是什么呢 这个是键盘输入时

27:52.790 --> 27:57.590
或内容改变时触发这个事件啊 然后这样你后面的话写上对应的这个

27:58.630 --> 28:00.310
时间处理函数就可以了

28:01.270 --> 28:04.230
ok 他这边呢就是需要写上这个啊

28:05.510 --> 28:11.510
这边不管是input还是这个txt area啊 只要加了这个 你都需要加什么呢 都需要加这个bund input

28:12.070 --> 28:18.310
可以是一个没用的空函数啊 但是需要定一下 这个的话应该是小程序官方的一个这个bug

28:18.790 --> 28:25.270
啊 但是不知道他解决没有啊 你看这个人这个人是2022年的还是比较新的这个帖子啊

28:26.230 --> 28:26.470
ok

28:27.990 --> 28:34.390
好 说到这边的话不是我们代码的问题啊 我先先声明就你这边输入的时候 你这边输入的时候 这边谈这个

28:34.390 --> 28:39.190
他不是我们代码的问题啊 但你如果觉得看了烦的话 你这边可以加一个bund input

28:40.230 --> 28:42.950
比如说我这边绑定input

28:45.350 --> 28:49.830
对不对啊 绑的input 再加你这边绑定一个 比较叫做logging end

28:50.790 --> 28:53.030
比较叫做logging这个handler

28:53.910 --> 29:01.670
啊logging handler好 然后接下来的话在这边 这边的话你就得添加一个logging handler

29:03.750 --> 29:06.630
对吧好 然后接下来这边 这边让我们bund

29:07.990 --> 29:13.270
bund input等于一个比如说pass handler

29:15.110 --> 29:15.990
pass handler

29:17.430 --> 29:21.990
好 然后接下来在这边添加一个pass handler

29:23.270 --> 29:27.110
ok 好 保存 保存之后 然后重新编译一下

29:28.870 --> 29:34.470
啊 把这儿清空 清空之后 然后加我们这边来填写 你啊 是没问题了 对不对

29:34.870 --> 29:42.870
ok 好 然后接下来的话 我们这里回到这边 这边的话回通 我们要点什么 我们是不是要点这个发送get请求

29:43.270 --> 29:45.110
好 那我们这边呢 我们就来bund

29:46.310 --> 29:51.030
bund type等于一个什么呢 等于一个比如说这个叫做send

29:51.510 --> 29:53.030
send get

29:55.350 --> 29:59.430
好啊 这个大写吧 send get好 然后加这边

30:00.390 --> 30:01.190
bund type

30:02.950 --> 30:05.030
等于一个什么呢 等于一个send post

30:06.310 --> 30:08.790
好 那回头的话你在这边的话是不是叫添加这两个方法

30:09.670 --> 30:12.630
对不对啊 回到这边 send get

30:14.230 --> 30:17.430
这个啊 我们写一下注射 这个是向服务器

30:17.990 --> 30:23.590
向服务器发送get请求

30:26.020 --> 30:30.420
好 然后下面一个send post

30:34.490 --> 30:35.290
向服务器

30:38.380 --> 30:42.780
向服务器发送这个post请求

30:43.980 --> 30:48.860
ok 好 然后这边这边的话你就得用什么 是不是就用他的那个API

30:50.300 --> 30:52.860
对不对 好 那我们这边呢 就是wx

30:54.380 --> 30:57.100
wx.request

30:58.300 --> 31:01.420
好 然后加这边发请求 这请求请求到哪呢

31:01.740 --> 31:05.340
好 我这边的话我写了一个这个就简单写了个服务器啊

31:05.740 --> 31:09.260
就快速搭了一个这个服务器 用那个express搭的

31:09.740 --> 31:11.420
这我不知道大家会不会express啊

31:11.980 --> 31:14.700
这是涉及到这个load里面的那个这个内容了

31:15.100 --> 31:19.740
但你不会也无所谓啊 不会也无所谓 你到时候拿到我的这个圆码

31:20.220 --> 31:23.660
拿到我的这个圆码之后 然后加这个load module我肯定是会删掉的

31:24.220 --> 31:27.500
你到时候这边的话 你首先第一步你就是npm

31:28.540 --> 31:32.460
先安装这个load module啊 为什么我要把这个load module删掉

31:32.780 --> 31:37.980
因为它不同的这个操作系统 它的这个包啊 它里面它是不能通用的

31:38.460 --> 31:40.540
ok 这个在笔记里面记一下啊

31:41.980 --> 31:43.180
在笔记里面记一下

31:43.500 --> 31:46.300
到时候

31:48.300 --> 31:55.500
到时候 大家会拿到一个名为这个server

31:56.460 --> 31:59.100
server的这个服务器代码

31:59.740 --> 32:02.860
ok 我到时候会放到那个就是客棠代码里面啊

32:03.340 --> 32:04.540
然后大家拿到后

32:05.820 --> 32:07.420
拿到后首先

32:08.380 --> 32:11.580
使用什么呢 使用这个npm i

32:12.380 --> 32:14.140
安装什么呢 安装依赖

32:15.100 --> 32:19.660
安装这个依赖包 安装之后安装完成后

32:20.220 --> 32:23.980
然后使用什么呢 使用npm start

32:24.620 --> 32:26.940
启动这个服务器

32:28.140 --> 32:28.540
即可

32:29.580 --> 32:32.620
ok 启动这个服务器即可啊 然后该服务器

32:33.420 --> 32:34.620
该服务器

32:35.340 --> 32:41.340
服务器默认监听什么呢 监听这个三千端口

32:42.780 --> 32:46.940
啊 三千端口 然后我这边呢就随便写了两个啊 随便写了两个

32:47.580 --> 32:51.420
在这个入词里面 在这边啊 随便写了两个

32:51.420 --> 32:55.820
一个是这个get get呢 就是一个鞋杠 一个是鞋杠abc

32:55.820 --> 32:58.540
啊 这个话就是poster 一个get一个poster

32:59.660 --> 33:00.620
该服务器

33:01.580 --> 33:04.380
该服务器提供两个

33:05.020 --> 33:07.340
接口 对吧 一个是什么呢

33:08.300 --> 33:12.140
一个就是这个鞋杠啊 这个这是一个get请求

33:14.220 --> 33:18.380
这是一个get请求啊 然后加这边鞋杠abc

33:19.500 --> 33:22.460
啊 这是一个这个poster请求

33:24.060 --> 33:31.740
ok 好 然后这个get请求get请求的话 这边就是接收你的这个参数啊 通过这个req query

33:31.820 --> 33:37.260
这个是获取服 获取客户端传递过来的get参数

33:38.140 --> 33:39.900
获取这个客户端

33:41.340 --> 33:42.940
传递过来

33:44.300 --> 33:48.140
传递过来的这个get

33:49.340 --> 33:51.980
请求的这个参数

33:53.900 --> 33:58.940
ok 这边这边req.body 这个是获取这个客户端

33:59.900 --> 34:05.500
传递过来的这个poster请求的这个参数

34:06.300 --> 34:11.340
ok 好 然后加这边这边的话 然后如果get请求 我这边给你返回了一个这个接审啊

34:11.340 --> 34:16.940
纳姆张三 a 几十八 如果是poster请求 我这边给你返回了这个李四二十

34:18.860 --> 34:23.100
员get请求 然后服务器端服务器端

34:24.220 --> 34:27.980
会返回返回什么呢 返回这边这个纳姆

34:28.700 --> 34:33.740
对应的是张三 然后a几对应的是

34:35.180 --> 34:40.060
对应的是十八啊 然而如果是这个poster请求 服务器

34:41.260 --> 34:44.140
端会返回返回的是这个

34:46.570 --> 34:47.610
啊 返回的是这个

34:48.570 --> 34:48.970
李四

34:50.170 --> 34:54.170
啊 好 那我们现在的话 我们就把这个服务器用把它起起来

34:54.650 --> 34:56.570
好吧 我们这边把它起起来

34:57.130 --> 34:57.930
npm

34:58.890 --> 34:59.530
start

35:01.210 --> 35:06.250
啊 你看到它现在是这个样子的 这个样子的话就说明是啊 启动成功了啊 这边截个图

35:08.860 --> 35:14.060
啊 或者我这样子 我这边的话给大家一个那个 给大家一个那个提示啊

35:15.020 --> 35:16.860
写到写到这边

35:18.060 --> 35:19.740
unlisting啊 这边

35:21.340 --> 35:23.580
打印一句话console.log

35:25.500 --> 35:26.700
console.log

35:28.140 --> 35:29.020
服务器

35:29.900 --> 35:31.420
已经启动

35:34.340 --> 35:36.660
啊 把这个服务器重启一下

35:39.590 --> 35:44.310
啊 你到时候能看到这句话啊 看到这句话就说明这个服务器已经启动成功了

35:46.550 --> 35:46.870
啊

35:47.830 --> 35:48.310
当你

35:52.200 --> 35:54.760
当你安装了这个依赖包

35:55.880 --> 35:59.080
依赖包使用这个npm

35:59.640 --> 36:00.440
这个start

36:01.000 --> 36:02.840
启动服务器

36:03.400 --> 36:05.000
后啊 然后看到

36:05.880 --> 36:07.720
下面的这个画面

36:08.680 --> 36:10.520
说明这个服务器

36:11.800 --> 36:13.720
已经启动成功

36:16.470 --> 36:17.190
启动成功

36:17.750 --> 36:19.110
啊 就看到这个啊

36:20.710 --> 36:21.030
ok

36:21.670 --> 36:27.350
啊 这是关于这个服务器啊 那我们服务器现在是不是就准备好了 对不对啊 因为我们这边的话 我们是

36:28.070 --> 36:28.790
选了这个的

36:29.350 --> 36:33.670
对不对 选了不教研的啊 所以说我现在的话 我本地随便搭一个服务器 这个是ok的

36:34.150 --> 36:37.830
ok 好 那接下来回到这里 这里的话那这边就是啊

36:38.630 --> 36:39.510
呃http

36:40.230 --> 36:41.110
http

36:42.390 --> 36:42.710
然后

36:43.510 --> 36:44.550
呃localhost

36:45.990 --> 36:46.950
然后升迁

36:48.070 --> 36:53.030
对不对啊 我要带这个data data的话我就在在这里面来带对吧 我不

36:53.270 --> 36:57.990
就是我这个get请求我不要拼接在这后面啊 我这边通过这个data配置项目来带

36:58.550 --> 37:00.390
啊 这边呢 一个login id

37:01.670 --> 37:03.430
好然后login id就应该取谁

37:03.910 --> 37:08.630
是不是应该是取他呀 因为他和谁 他和他是不双向绑定了的

37:09.270 --> 37:13.190
对不对 你用户在这边输入的内容就会干嘛 就会改变他的字

37:13.750 --> 37:18.550
对不对 双向绑定了的 好说这边呢 我就呃z.data

37:19.190 --> 37:20.950
点login id

37:22.230 --> 37:24.950
对不对 好 然后加这边这个password

37:26.790 --> 37:28.150
z.data

37:28.790 --> 37:29.990
点password

37:30.950 --> 37:33.910
ok 这个是我向服务器带的这个数据

37:34.390 --> 37:37.510
好 然后回头回头的话 这边的话这个sixense

37:39.190 --> 37:42.150
sixense啊 这个是不是就是应该是服务器

37:42.870 --> 37:44.310
跟我返回这个数据

37:45.030 --> 37:49.350
对不对啊 我这边e好 这边我就打印一下哈console.log

37:50.710 --> 37:51.910
console.log

37:53.030 --> 37:53.910
这个e

37:55.270 --> 37:56.710
ok好 我们这边保存

37:57.750 --> 37:59.270
保存这边怎么爆错了

38:00.870 --> 38:05.430
I'm ready 啊 这边忘记写动好了啊 保存

38:06.870 --> 38:07.990
啊 重新编一下吧

38:09.670 --> 38:17.430
ok好 来我们这边 我们这边的话来写一个啊 比如说卸节密码123456

38:17.830 --> 38:19.510
好 点击这个get请求

38:20.230 --> 38:23.030
好 你可以看到这边的话 是不是服务器已经给我们返回东西了

38:23.430 --> 38:27.830
对不对 我们把它展开一下 服务器 你看服务器这边是不是返回的是张三

38:28.150 --> 38:33.590
A级18 对不对 我们来看看服务器那边有没有收到这边 我们输了账号密码

38:34.790 --> 38:39.510
回到这边 收到了没有 收到了吧 对不对 我这边它通过这个

38:40.550 --> 38:46.070
在哪里啊 我这边它通过这个req.query 是不是拿到了你这边这个get请求

38:46.470 --> 38:47.910
跟我传递的这个数据

38:49.030 --> 38:54.550
对不对啊 那这边的话 我们的这个小程序端和服务器端是不是就跑通了

38:55.270 --> 39:02.470
对不对 就通了 好来 我们这边 我们再来看一下这个post的请求 那post的请求的话 那这边上我就直接复制过来了

39:03.990 --> 39:11.350
复制过来 然后把什么改一下 是把那个方法改一下对不对啊 这边呢 是message

39:11.910 --> 39:14.070
message的对应是一个post

39:16.070 --> 39:20.550
post 然后加这边其他的都不变啊 其他都不变啊 保存

39:20.870 --> 39:24.710
保存了之后 然后加这边 看一下

39:26.390 --> 39:30.870
哦 这边这个要变 这个是什么 你看他现在报的是什么 是不是404

39:31.430 --> 39:36.470
为什么会是404 因为你请求的是这个 请求的是这个路由 请求的是这个路由呢 但是呢

39:36.710 --> 39:39.590
你这边又是什么呢 又是这个post 我们这边

39:40.230 --> 39:45.590
这边post了 他是不是abc啊 对不对啊 所以你这边这里还要得改一下 这边是

39:46.550 --> 39:48.470
斜杠abc啊 保存

39:49.830 --> 39:53.270
好 那你这个服务器服务器的话 估计得重启一下啊 你这边把它停掉

39:54.070 --> 40:00.950
停掉之后的重新npm on start 重新把它启动一下啊 这边这边保存了 重新编一下吧

40:02.790 --> 40:05.830
好 这边发送post的请求 搞定没有

40:06.550 --> 40:08.150
搞定了吧 好 把它展开

40:09.110 --> 40:17.430
这边说服务器给我们返回到这个李瑟 对不对 李瑟啊 年零二十啊 这边刚还写错了啊 这边是年零二十

40:19.030 --> 40:27.110
ok 好 这么就拿到了 对不对 那我们整个这个get请求和post的请求 我们就都跑通了

40:27.270 --> 40:32.390
啊 你看服务器这边 服务器这边的话也是拿到了的 对不对 通过req保底啊

40:33.670 --> 40:37.510
这边怎么直没拿到 哦 因为没有输入啊 因为没有输入 我们重新输入一下

40:38.150 --> 40:39.430
我们这边输入节卸

40:40.310 --> 40:48.470
然后654321啊 发送post的请求啊 这边服务器给我们回包了 对不对 让我们看一下服务器那边

40:48.950 --> 40:53.270
服务器的服务器那边是不是拿到了 对不对 节卸654321 ok

40:54.310 --> 40:58.550
啊 这是关于这个 就是如何发送请求 其实也非常简单

40:59.350 --> 41:02.630
对不对 也非常简单啊 我们把这个在笔记里面做一下

41:05.880 --> 41:07.400
啊 然后接下来

41:08.280 --> 41:19.880
接下来在小程序端 小程序端 通过什么呢 通过wx.request

41:20.840 --> 41:29.420
进行 进行请求的发送啊 然后代码片段如下

41:33.190 --> 41:36.310
代码片段如下

41:39.140 --> 41:43.060
ok 我这个我就不弄完整的代码了啊 完整的代码到时候我会发给你们的

41:43.860 --> 41:45.460
ok 这边那就看一下

41:47.140 --> 41:53.860
ok 算了 这格式就不调了啊 不在这调了啊 这边呢 这个是get请求 这边是post的请求

41:54.580 --> 42:02.100
对吧 好 这是关于这个发送请求啊 好 然后接下来的话 这边还有一个 这个是使用技巧

42:02.980 --> 42:07.780
使用技巧的话 一般就是这边 他有两个 一个是设置超时时间

42:08.500 --> 42:14.260
他这边的话默认的这个时间是60秒 那我们一般我们不需要这么长

42:14.660 --> 42:17.060
说你可以在什么呢 你可以在app.json里面

42:17.700 --> 42:19.700
你可以配置这个network

42:20.180 --> 42:21.220
这个timeout

42:21.780 --> 42:29.220
这个app.json我们之前是不是讲过的 对不对 app.json我们之前讲了这些配置箱

42:30.260 --> 42:34.980
app.json 我们之前讲了这些配置箱 就是这个配级

42:35.380 --> 42:43.060
然后这个ntreepgpass 然后window 然后tablebar 对不对 但是我们说了这个app.json 他的这个配置箱很多

42:43.620 --> 42:49.300
对不对 我们后面的话就是用到一个就讲一个 那你看他这边是不是就给你来了一个新的

42:49.700 --> 42:53.300
叫做network timeout 这个就是什么呢 这个就是你的超时时间

42:54.020 --> 42:55.060
啊 超时时间

42:55.860 --> 43:00.100
好 然后还有什么呢 还有就是请求前后的这个状态处理

43:00.740 --> 43:04.260
就一般的话 你这个发送请求的话 是不是就是你要给用户一个反馈

43:04.740 --> 43:07.940
对不对 比如说你赚圈圈啊什么的也好 你得有一个反馈

43:08.500 --> 43:12.900
啊 那这样子的话用户就知道什么了 知道你这边是在和服务器是不进行通信

43:13.620 --> 43:19.700
对不对 而说他这边他有一个什么呢 他这边的话有一个叫做微信点修楼顶

43:20.980 --> 43:24.980
啊 这个微信点修楼顶 他就会出现一个什么呢 出现一个等待框

43:25.460 --> 43:27.460
啊 那对应的是什么呢 对应的是这个

43:28.020 --> 43:29.140
啊 hide loading

43:29.780 --> 43:33.940
hide loading 这个就是会干嘛呢 这个的话就会把你的这个等待框

43:34.340 --> 43:38.660
给这个消失啊 就隐藏你的这个赚圈圈的那个框框

43:39.060 --> 43:43.460
ok 啊 然后如果出错 出错的话 这边的话会有一个这个修 toast

43:44.100 --> 43:47.700
啊 这边呢 你就可以写一个 就是比如说啊 系统错误

43:48.100 --> 43:50.340
好 那我们这边把这个例子看一下啊

43:50.900 --> 43:53.620
他这个叫做使用技巧 我们在笔记里面记一下

43:56.440 --> 43:57.320
使用技巧

44:00.440 --> 44:01.160
使用

44:02.040 --> 44:03.800
技巧啊 一般来讲

44:04.840 --> 44:06.520
一般来讲在

44:07.080 --> 44:07.800
发送

44:08.440 --> 44:09.880
请求的时候

44:10.440 --> 44:11.080
有两点

44:12.120 --> 44:12.920
有两点

44:14.680 --> 44:16.920
啊 两点可以优化

44:17.720 --> 44:20.600
哪两点呢 之前第一个是发送

44:21.240 --> 44:28.120
请求的 就是和服务器通信啊 和服务器通信的这个过程中

44:30.120 --> 44:33.160
需要显示一个什么 是不是loading

44:33.880 --> 44:35.400
对对loading这个框

44:36.840 --> 44:42.840
loading框啊 表示你现在正在和服务器进行通信啊 这个用户知道对你不能什么反应都没有

44:43.160 --> 44:48.680
对不对 虽然你那边你背后在做处理 但用户不知道啊对不对 用户以为他点了 然后没反应啊

44:49.160 --> 44:52.120
这是之前第一个啊 第二个就什么呢啊 如果

44:53.560 --> 44:59.800
如果就是处理啊 失败 对不对 比如你这个请求失败了 需要什么呢

45:00.440 --> 45:01.720
需要显示

45:03.880 --> 45:05.080
显 显示

45:05.880 --> 45:07.080
一个提示

45:08.440 --> 45:14.120
对不对 需要显示一个提示 而关于这两点分别怎么做呢 如果要显示这个loading

45:14.200 --> 45:16.520
他这边的话给你提供了什么呢 提供了这个

45:17.800 --> 45:20.200
提供了这个API啊 他也是个API啊

45:22.200 --> 45:26.760
他也是个API啊 就这个 这个是什么呢 这个就是显示

45:28.680 --> 45:30.840
显示loading框

45:31.800 --> 45:35.800
loading框啊 然后还有一个wx.hide

45:37.560 --> 45:43.910
hide loading啊 这个是什么呢 这个就是隐藏

45:44.790 --> 45:46.390
隐藏loading框

45:48.950 --> 45:50.550
隐藏loading框

45:51.030 --> 45:54.710
ok啊 然后如果是处理失败 需要显示一个提示

45:54.950 --> 45:58.070
他这边给你提供了一个API叫做什么呢 叫做这个shortost

45:59.830 --> 46:02.950
wx.shortost

46:05.210 --> 46:09.930
shortost提供了这个API 他里面接受一个什么呢 接受一个这个对象

46:10.170 --> 46:13.290
啊 这个对象里面呢 有一个这个title啊 表示这个系统错误

46:13.770 --> 46:19.290
对不对啊 你这边呢 可以就是写一个系统错误 但他这边呢 应该还有一些这个其他的配置箱

46:19.530 --> 46:22.650
这个就需要你自己去查了 我们到这边来查一下

46:24.330 --> 46:25.290
到API这边

46:26.970 --> 46:31.930
API这边 然后啊 这边搜索吧 直接搜索shortost在这里

46:32.890 --> 46:36.730
你看他这边有title 那还有什么 这边还有这个icon

46:37.450 --> 46:45.850
对不对 有icon啊 有image 有这个duration 就是你这边的这个时间 他默认是一点五秒啊 看到没有啊 有这些啊

46:46.330 --> 46:49.770
好 来我们这边让我们来写个实例 我们来演示一下

46:51.850 --> 46:54.970
好 我们这边怎么演示呢 我们这边的话这个样子

46:55.690 --> 46:56.730
回到我们这里

46:57.370 --> 47:00.970
比如说我们这边的话 就是了我们呢 这个get请求

47:01.930 --> 47:08.330
拿get请求来实例 比如说我现在的话 我点击之后 点击之后是不是应该是这个把这个框框显示出来

47:08.890 --> 47:13.290
对不对wx点这个show loading

47:14.970 --> 47:16.730
show loading啊 他这边有这么多

47:17.530 --> 47:19.130
wx点show loading

47:20.250 --> 47:23.610
好 我们这边的话就 我们这边什么都不要

47:24.410 --> 47:30.010
他这边应该是支持就是我这边什么都不要的 你这边的话你去看一下

47:31.050 --> 47:33.770
来 我们来看一下 他这边应该是支持的

47:35.690 --> 47:37.290
show loading

47:39.770 --> 47:40.890
show loading啊

47:43.210 --> 47:43.850
show loading

47:44.890 --> 47:53.050
啊 有个title 有个title是 我看show loading 有个title title是必须要那个的 但是他这边都没有啊

47:55.130 --> 47:57.930
show loading 我看一下啊 他这边都没有传

47:58.650 --> 48:02.090
是不是啊 但是他这边这个文档说的这个title是必须的

48:03.370 --> 48:06.170
他这个object是不是必须要传

48:07.290 --> 48:12.090
show loading啊 因为一般就是这个啊 这边 这把拿过来

48:12.570 --> 48:12.970
复制

48:14.330 --> 48:22.980
然后回到这边 回到这边啊 这边比如说请求中啊 就就要加载中吧

48:24.020 --> 48:28.900
好 然后接下来的话 这边完了之后你需要干嘛 完了之后是不是需要这个hide

48:29.700 --> 48:32.740
对不对wx.hide

48:33.700 --> 48:34.500
hide loading

48:36.580 --> 48:40.100
hide loading 这边不需要这个回掉了 我就这样子

48:40.820 --> 48:46.900
ok啊 保存一下 保存了之后 然后下我们这边我们来看一下 用发送get请求

48:47.380 --> 48:52.100
你看 是不是有 对不对 有只不过那个就是太快了 我们这样子

48:52.820 --> 48:56.500
这样子 你这边的话啊 同学们注意 你这边的话把这个注释掉

48:57.220 --> 49:00.660
这个就是代表向这个客户端返回这个响应

49:02.660 --> 49:07.940
向客户端返回响应

49:08.420 --> 49:10.420
ok 包括这个下面这个也是

49:11.860 --> 49:14.100
下面这边 而也是点胜的啊

49:14.740 --> 49:17.460
返回响应 那你这边就干嘛了 你这边就把它注释掉

49:18.180 --> 49:23.140
注释掉的话 那你这个服务器是不是就一直没有向这个客户端返回响应 对不对

49:23.460 --> 49:25.380
然后保存之后一定要重启啊 注意

49:27.060 --> 49:32.340
这边修改了服务器一定要重启啊 这边重启服务器 重启了之后 然后这样我们这边来看一下

49:32.980 --> 49:36.180
看效果啊 走 出出来了

49:37.300 --> 49:42.980
对不对啊 这边加载中啊 一直加载中 ok 除非什么呢 除非这个服务器给你返回

49:43.780 --> 49:48.180
返回了这个响应 返回了响应 它进到这里 进到这里它是不是就把它取消掉了

49:49.140 --> 49:50.180
对不对 ok

49:51.140 --> 49:56.020
好 然后接下来的话 这边这边还可以设置一个什么呢 我们刚才这个笔记里面

49:56.420 --> 50:02.500
一个是修loading 一个是highloading 还有一个是什么 是不是这个处理失败啊 还有个就是延时

50:03.460 --> 50:10.020
啊 这边是三个点 三个点 三个点可以优化啊 这边设置

50:11.140 --> 50:13.700
延时时间 就超时时间

50:15.220 --> 50:20.100
超时时间啊 这个在哪里设置呢 在这个ap

50:20.660 --> 50:25.860
点接圣中 设置什么 设置那个network

50:27.700 --> 50:31.940
network 它叫什么名字来着 我看一下

50:32.820 --> 50:37.460
network 超时时间啊 叫做network timeout

50:39.460 --> 50:42.740
叫做这个 network timeout啊

50:45.100 --> 50:50.460
啊 比如说我们这边让我们去设置一下啊 我们来到app点接圣这边

50:51.020 --> 50:57.020
啊 我们就就在这设置吧 找个地方啊 这边network timeout

50:58.220 --> 51:02.380
啊 我觉得这个设置的时间就可以了 我们设置一个比如说三秒钟

51:03.900 --> 51:08.060
这边是什么 是个必须是个制服串吗 我看一下 看一下文档

51:09.020 --> 51:11.820
啊 它这边是啊 必须是对象 对象的request

51:12.220 --> 51:14.380
啊 把这个这个啊 算了 我们这边去洗吧

51:15.180 --> 51:16.380
啊 这边的话是

51:17.100 --> 51:19.820
是个对象 对象里面然后有一个request

51:20.220 --> 51:23.260
这边我们设置三秒 对吧 保存一下

51:24.620 --> 51:30.300
啊 保存了之后 然后你看这边 嗯 这边然后接下来我们需要设置一个什么呢 设置一个失败

51:31.020 --> 51:34.380
啊 就是你这边的话 这边是6th sense

51:35.020 --> 51:39.900
对不对啊 然后将我们这边再来设置一个什么呢 再来设置一个这个失败的时候

51:40.460 --> 51:44.060
因为你现在呢 超时了 你服务器什么都没返回吗 对不对

51:44.540 --> 51:46.060
我现在的话 我这个服务器

51:46.700 --> 51:51.020
我这边什么都不会给你返回 什么都不会返回的话 让我这边又设置了什么呢

51:51.420 --> 51:57.420
我这边是不是也又设置了这个超时时间了 对不对 那过了三秒之后呢 我就认为这只请求是失败的了

51:57.980 --> 52:00.140
啊 那接下来他就会进什么呢 他就会进这个

52:02.060 --> 52:04.540
ok 他就会进这个飞呦

52:05.260 --> 52:10.940
好 在这个飞呦里面飞呦里面 然后将我们要做什么啊 我们这边仍然是首先先要把这个关了

52:11.660 --> 52:16.540
关了之后 然后接下来咱们这边呢 需要wx点这个修 toast

52:19.180 --> 52:22.220
对不对 修 toast啊 然后加这边呢 就是失败

52:24.220 --> 52:29.420
请求失败 对不对啊 这边呢 再加一个什么呢 再加一个icon

52:31.020 --> 52:34.380
icon他这边有些什么呀 来看一下

52:35.660 --> 52:38.220
这边修 toast

52:40.810 --> 52:48.470
修 toast 啊 这边有arrow 是吧 失败的啊 我们就用这个arrow

52:49.350 --> 52:49.830
复制

52:51.590 --> 52:55.510
好 我们这边就用arrow 这个应该是个支付串 是吧啊 保存

52:56.790 --> 53:01.110
啊 重新编印一下啊 这边来 走 夹在中

53:03.270 --> 53:10.230
好 三秒后看 是不是请求失败 对不对 ok 啊 这个这个的话 是不是用户的这个体验 是不是就要好一些

53:10.790 --> 53:17.030
对不对 好 注意啊 就是你这边在发送请求的时候 一般就会有这样的这种优化的这个细节

53:17.670 --> 53:19.830
ok 就会有优化的细节啊

53:21.750 --> 53:25.590
好 这是关于使用技巧 其他的话就没什么了

53:26.470 --> 53:31.830
其他的话就没什么了啊 这边是什么 处理前后的这个状态啊 他这边还加了一个这个

53:32.150 --> 53:36.630
hazclick 他这个hazclick就是什么呢 就是为了防止就是点击多次

53:37.350 --> 53:41.990
啊 这个我们也是可以做的 就因为有 有的人他比如说他这边发这个请求 他不停的点

53:42.630 --> 53:45.910
对不对啊 说他这边做了做了一个什么呢 他这边加了一个锁

53:46.630 --> 53:50.310
啊 这个就是简单的这个js啊 简单js这边加个锁啊

53:50.710 --> 53:54.630
这边首先你这边一开始是false 对吧 false 进来把它设置成处

53:54.950 --> 54:02.470
这成处之后的下次你在点的时候 这边是不是他直接就追判了对不对 那什么时候重新返程false呢 就是你这次请求完了之后

54:03.430 --> 54:07.190
就这边啊 他这边写了一个这个complete complete还记得是什么吧

54:07.590 --> 54:11.830
是无论是成功还是这个失败 是不是都会进这个complete

54:12.310 --> 54:16.630
对不对 那比如说像我们这边 我们这边的话 其实这边这个代码我们就可以这样子

54:17.030 --> 54:19.110
我们这边不是都有这个hide loading吗

54:19.750 --> 54:23.750
对不对啊 让我这个hide loading我就可以写在哪里 是不是写到这个complete

54:24.390 --> 54:30.230
里面 对不对 因为他这个是无论成功还是失败都会进来的 所以我这边就写到complete里面

54:30.790 --> 54:41.210
对不对啊 我就这样子来写啊 保存啊 这边来看一下啊 是不是ok的 对吧

54:42.650 --> 54:48.730
好 然后其他就没什么了啊 剩下的话是排查异常的这个方法啊 这边比如说你这边

54:49.290 --> 54:56.170
这个服务器无法收到请求啊 或者无法发起这个请求 那既然你排查啊 首先排查网络对吧

54:56.730 --> 55:01.530
然后排查这个版本啊 大家这边排查这个https证书是否有效

55:02.090 --> 55:09.050
这边一个一个排查 ok 好 这个就是关于整个小程序中啊 如何就是和服务器

55:09.450 --> 55:15.770
进行这个通信啊 下来还是老规矩啊 还是老规矩 把这个这篇文档通读

55:17.450 --> 55:18.810
每节课我给你提醒一次

55:20.010 --> 55:24.970
好 本节课结束后本节课结束之后

55:25.690 --> 55:28.970
请通读官方

55:30.010 --> 55:36.650
文档对应的对应的这个部分啊 把这个部分把它通读

55:37.290 --> 55:42.810
ok 好 这就是关于这个小程序中的这个网络请求 回头的话我会把这个服务器

55:43.530 --> 55:47.850
还有就是这堂课的这个课堂代码一起发给大家 大家下来再看一看

55:48.490 --> 55:51.290
好吧 这几个就到这里啊 再见

