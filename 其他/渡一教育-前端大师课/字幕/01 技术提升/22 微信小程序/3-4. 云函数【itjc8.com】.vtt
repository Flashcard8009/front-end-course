WEBVTT

00:00.000 --> 00:03.580
OK 这节课咱们来看一下云寒树

00:03.840 --> 00:05.120
什么是云寒树

00:05.380 --> 00:08.460
之前在第一节课的时候实际上已经给大家介绍过了

00:09.220 --> 00:13.580
所谓云寒树的话它就是一段运行在云端的代码

00:14.080 --> 00:16.120
比如说你有一段代码

00:16.380 --> 00:17.920
一般来讲就是一个寒树

00:18.180 --> 00:20.740
它比较消耗时间

00:21.000 --> 00:24.060
那么这个的话你就可以把它放到云端去执行

00:24.320 --> 00:29.700
放到云端执行之后让云端执行完之后把这个结果给你返回来就可以了

00:30.000 --> 00:32.560
所以这边的话你在这个编写云寒树的时候

00:32.820 --> 00:34.860
你首先在你本地编写

00:35.120 --> 00:37.420
编写了之后你需要干嘛呢你需要把它上传

00:37.680 --> 00:38.960
上传到云端

00:39.220 --> 00:40.500
进行一个部署

00:41.000 --> 00:45.360
部署完了之后然后接下来的话后面你要使用的时候就调用云寒树

00:45.880 --> 00:46.380
就可以了

00:46.640 --> 00:48.440
所以这边我们接下笔记

00:49.960 --> 00:52.280
所谓云寒树

00:53.300 --> 00:55.340
就是什么呢就是一段

00:56.120 --> 00:59.700
代码在什么呢在云端执行

00:59.900 --> 01:02.720
对吧执行完毕后

01:02.980 --> 01:04.780
将这个结果

01:05.540 --> 01:09.640
将执行的结果返回

01:09.900 --> 01:11.180
给本地

01:11.940 --> 01:12.440
OK

01:12.960 --> 01:14.760
一般的话就是你这个

01:15.020 --> 01:18.600
这个寒树啊或者这段代码一般比较消耗

01:19.100 --> 01:22.440
这个性能那么一般的话我们就可以把它上传到这个云端来执行

01:22.700 --> 01:24.740
因为毕竟呢他这个云端服务器

01:25.000 --> 01:27.560
他的各方面条件啊什么的啊都要好一些

01:27.820 --> 01:28.320
OK

01:28.780 --> 01:31.860
那这边在使用云寒树的时候一般分为两个部署

01:32.620 --> 01:39.020
在使用云寒树的时候啊分为两个部署

01:40.060 --> 01:42.620
哪两个部署呢首先第一个就是本地

01:43.900 --> 01:44.660
编写

01:46.180 --> 01:46.960
编写

01:47.980 --> 01:51.300
云寒树啊然后接下来上传到云端

01:52.340 --> 01:53.360
上传到

01:54.380 --> 01:54.900
云端

01:55.160 --> 01:57.980
好然后接下来就是什么呢然后本地

01:58.380 --> 02:00.620
调用这个云端的寒树

02:02.220 --> 02:07.180
对吧你首先现在云端就是现在本地写写了之后你把它上传到这个云端

02:07.460 --> 02:09.220
啊就像你上传这个

02:09.540 --> 02:13.100
啊数据啊上传这个图片一样啊把上传到云端

02:13.380 --> 02:21.300
那回头的话你在本地啊遇到一些逻辑的时候啊比如你这边需要使用到这个寒树的时候你就干嘛呢你就直接调用云端的这个寒树

02:21.820 --> 02:24.700
啊大家这个寒树的话他就会在云端执行

02:25.140 --> 02:27.660
执行完了之后他把这个结果给你返回来

02:28.240 --> 02:33.000
ok啊这是关于这个云寒树好来我们这边来看一下哈还是来写个demo

02:34.440 --> 02:40.800
好这边的话这个云寒树啊我们之前的话这边云数据库和云存储啊我们这边都是简单写了个例子对吧

02:41.000 --> 02:48.000
这个是云数据库这个是云存储啊这几块咱们就来看这个云寒树啊我们还是来写个demo啊

02:48.920 --> 02:52.800
好这边写个什么demo呢我们这边就做两个数的这个计算

02:53.380 --> 02:58.140
ok好这边的话就是啊然后直接把这个拿过来吧

02:58.940 --> 03:00.340
好吧啊这这个

03:01.900 --> 03:08.900
整个这个结构他没有什么我这把拿过来把这个关了啊大家看一下啊这个结构整个这边哇

03:08.980 --> 03:12.300
cell group这个的话是在全局里面引入了的

03:13.060 --> 03:21.300
在这边啊这个cell group啊cell啊这些主线的话都是在app.cs里面引入了的啊说我们这边直接用

03:21.840 --> 03:27.520
好然后接下来这边这边是两个数做计算那既然这边呢就是让用户输入这个第一个数

03:27.840 --> 03:35.080
然后第二个数那回头的话这边有四个按钮分别负责这个加减乘除啊那最后的话你把这个结果

03:35.520 --> 03:38.120
返还给我ok好来我们保存一下

03:40.190 --> 03:45.920
保存一下呃重新编一下吧cloed file

03:46.900 --> 03:47.420
哎

03:48.860 --> 03:56.420
我看一下我们这边是写错了是吧啊写错了啊我们写到这边来了啊这边是上传

03:56.660 --> 03:59.180
然后我们应该是在这里在这边啊

04:00.380 --> 04:05.580
ok啊保存啊保存啊这边是云存储啊这边云含数啊

04:06.260 --> 04:11.780
好然后接下来这边就是你输入啊不用输入一个12然后24

04:12.320 --> 04:17.280
好然后回头你这边你是做这个加还是减还是成还是除啊你做什么

04:19.200 --> 04:23.520
啊这边呢我把样式稍微调一下哈我这边直接把这个样子我把它拿过来

04:24.360 --> 04:25.200
呃放到这边

04:27.420 --> 04:33.540
用这边啊这边呢给这个btncontainer就下面这个啊稍微设置了一下样式把它稍微调整一下

04:34.420 --> 04:39.420
ok啊这样子啊这边呢就是用户输入数啊不用我这边输入两个数第一个数

04:39.600 --> 04:44.880
第二个数好然后加这边的话然后来做你的这个计算啊加还是减还是成还是除

04:45.240 --> 04:51.200
然后回头的话这边就计算啊显示这个计算结果啊这个计算结果显示在哪里呢显示在这里

04:51.760 --> 04:56.440
这里有个result啊但现在呢这边是空的对不对什么都看不到啊

04:57.000 --> 05:00.840
好然后接下来回到我们这边这个接视啊分个屏

05:02.520 --> 05:04.400
分个屏啊这边这个接视

05:05.360 --> 05:08.280
接视的话我们这边还是先把这些多余的先把它干掉啊

05:08.740 --> 05:09.340
这些不需要

05:11.790 --> 05:12.910
好包括这些

05:14.510 --> 05:15.470
这些先把它干掉

05:16.510 --> 05:24.150
ok好然后接下来这边这个datadata我们来看一下这边的话首先有那么一那么二对吧好这边的话我们那么一

05:27.110 --> 05:27.670
那么一

05:28.710 --> 05:31.030
啊这是第一个数然后那么二

05:32.150 --> 05:36.030
ok 第二个数好那还有个是什么还有一个是result

05:36.590 --> 05:38.950
啊这边result这个是就是计算结果

05:39.930 --> 05:50.010
对吧好然后接下来的话我们这边给这个这四个按钮啊这四个按钮绑定了什么呢绑定了一个点击事件

05:50.290 --> 05:51.290
clc

05:53.880 --> 05:58.920
clc啊那你这边点击的时候他这边就会出发这个点击事件

05:59.280 --> 06:03.520
出发这个点击事件之后然后接下来这边你看每一个按钮上面有个什么

06:03.940 --> 06:14.500
是不是有个data id啊对不对我这边是可以拿得到的啊我们这边cancel点log我们这样子我们把这个整个数啊以及这个就是要做什么计算

06:14.700 --> 06:15.420
把他打印出来

06:16.140 --> 06:16.540
data

06:17.820 --> 06:20.220
点那么一就是第一个数

06:21.060 --> 06:21.340
然后

06:22.420 --> 06:28.900
第二个数啊以及什么呢以及这边我们要拿到这个就是他要做什么运算啊这边的话就是

06:31.370 --> 06:38.090
通过什么来拿呢通过这个事件对象对吧比如我这边有个事件对象啊我这边就是事件对象

06:38.890 --> 06:40.850
上面的这个target

06:41.570 --> 06:43.090
点data set

06:43.730 --> 06:48.690
点id啊就拿到这个id ok好来我们这边保存一下

06:49.810 --> 06:55.490
保存了大家这边来看一下啊比如说这边是12这边是23让我们做减

06:56.270 --> 06:56.750
辣到没有

06:57.190 --> 07:06.710
辣到吧我们做成对不对啊做这个除 ok好让我们这边的这三个参数啊回头的话我们就要干嘛呢我们就要传递到我们的这个云端

07:07.110 --> 07:12.710
我们这边计算的话我们不在本地计算啊假设这个是一个非常耗时的这个操作啊

07:12.950 --> 07:15.830
那我们这边就干嘛呢我们就在云端进行这个计算

07:16.430 --> 07:21.190
那在云端计算的话让我们说了这边分成这个两个步骤首先的话是编写

07:22.050 --> 07:28.690
云含数对不对上传到云端啊让我们首先的话第一个步骤啊好来我们这边我们来看一下

07:29.730 --> 07:35.530
首先的话你需要上传到云端我看他这边有没有说什么

07:37.170 --> 07:41.130
啊他这边呢就是直接给你举例啊好来我们这边呢我们就直接在这写吧

07:41.890 --> 07:42.770
在这里来写

07:43.550 --> 07:46.270
首先的话我们在这边

07:47.150 --> 07:52.990
在这个project.comfig.json这边啊这边呢我们来添加一个配置

07:54.470 --> 07:54.670
在

07:56.430 --> 07:56.950
在这下面

07:58.150 --> 08:01.750
ok 我们添加一个配置 什么配置呢 这边那就是你的这个

08:02.790 --> 08:03.150
cloud

08:04.710 --> 08:06.990
cloud 然后这个function

08:08.110 --> 08:09.910
function root 这什么意思啊

08:10.490 --> 08:16.370
是不是cloud 云 然后function 含数 是不是你的这个目录对不对啊这个目录我们就在哪里呢

08:16.450 --> 08:19.450
就在根目录下 比如说我们一会儿我们会新建一个

08:20.290 --> 08:20.890
functions

08:21.730 --> 08:25.250
ok 这个是我的根目录 我们在笔记里面记录一下啊

08:27.330 --> 08:32.370
首先是上传 上传云含数

08:34.490 --> 08:35.090
上传

08:36.530 --> 08:37.010
云含数

08:39.520 --> 08:45.560
呃 首先第一步我们在哪里在这个project

08:46.680 --> 08:51.480
project.config.json里面

08:53.280 --> 08:57.120
里面配置云含数的目录

08:58.640 --> 09:00.400
对吧啊 比如说像这里

09:02.360 --> 09:02.760
不要这边

09:06.640 --> 09:08.480
好 在上面的代码中

09:09.440 --> 09:11.360
在上面的代码中

09:11.800 --> 09:13.480
我们指定

09:14.600 --> 09:19.120
这个云含数在哪里呢 在这个根目录

09:20.320 --> 09:22.160
下的这个functions

09:23.320 --> 09:24.480
目录下面

09:25.480 --> 09:27.240
对不对 这是首先第一步啊

09:27.840 --> 09:33.360
好 然后完事了之后 然后接下来第二步 第二步的话 你在这边你就创建一个functions

09:36.470 --> 09:37.070
functions

09:37.750 --> 09:41.310
啊 你这边就和什么呢 就和这边是对应者的 对不对

09:41.990 --> 09:42.870
好 我们这边挤个图吧

09:44.470 --> 09:46.470
functions 啊 写对了的 ok

09:48.310 --> 09:49.110
我们这边挤个图

09:50.430 --> 09:56.550
好 你这边首先这边配置指定度进 然后加这边呢 我们在这个根目录下面创建一个

09:57.710 --> 09:59.270
好 我们这边一个箭头 把它指过来

10:02.820 --> 10:07.490
好 放到笔记里面 ok

10:08.370 --> 10:11.050
好 创建完了之后 然后接下来下一步

10:12.450 --> 10:17.770
下一步我们来看一下啊 下一步这边的话 我记得这边有个右键 右键然后这边

10:18.970 --> 10:21.130
呃 稍等啊 我想一想

10:23.090 --> 10:27.530
好 这边接下来的话 我们在这边创建一个目录啊 比如说你这边这个

10:28.090 --> 10:33.050
云寒树啊 比如我们是要做计算 对吧啊 比如我们给他取个名字叫做ca nrc

10:33.410 --> 10:38.770
做计算 那现在的话创建了一个这个空的目录啊 空的目录 然后接下来你这边右键

10:39.370 --> 10:40.770
右键的话他这边

10:41.890 --> 10:46.330
他这边我记得这边有个初始话 怎么没有了呢

10:47.150 --> 10:48.990
啊 重新编一下呢

10:49.950 --> 10:53.390
啊 可以了 可以了 ok 啊 重新编一下 ok 了

10:53.870 --> 10:59.430
好 人家这边你看 这边图标都变了 对你看 当前环境cloud1 cloud1是什么

10:59.790 --> 11:01.030
cloud1就是我们这边

11:02.150 --> 11:07.230
我们这边这个干了啊 这边我们的环境id是cloud1 后面有个id号

11:07.670 --> 11:08.670
对不对 ok

11:09.510 --> 11:14.470
好 然后我们刚才的话新建了一个文件家啊 叫做ca lc 好 然后加这边的话右键

11:15.010 --> 11:17.250
右键的话 我们这边可以新建

11:18.370 --> 11:22.930
我看一下啊 这边我们就直接新建一个文件啊 新建一个这个

11:24.210 --> 11:26.370
这边的话应该是可以新建一个

11:28.450 --> 11:38.220
呃 让我想一想啊 我们这边就新建一个文件啊 这个文件的话叫做index.js

11:39.100 --> 11:44.660
ok 我们在这个index.js里面我们就来封装我们的这个云寒树啊 在

11:45.400 --> 11:50.360
该文件中来封装云寒树

11:51.560 --> 11:56.400
逻辑 ok 好 这边这边的话 我们首先const

11:57.000 --> 12:02.260
一个cloud cloud等于一个require

12:04.020 --> 12:06.180
这边他首先需要你引入这个微信

12:06.940 --> 12:07.940
然后server

12:08.660 --> 12:09.580
然后sdk

12:11.700 --> 12:15.500
啊 首先引入这个sdk 然后加这边进行一个初识化

12:16.420 --> 12:25.620
cloud.init 调印的方法 进行初识化 初识化的话 这边传一个配置对象 这个配置对象里面env

12:26.460 --> 12:28.620
啊 对应的是你的这个cloud

12:30.020 --> 12:32.860
cloud.然后接下来这边

12:34.460 --> 12:35.500
呃 我想想啊

12:37.420 --> 12:40.700
我们这边应该就不用初识化了啊 我看看他们的例子呢

12:41.680 --> 12:49.200
他这边的话require啊微信server sdk 啊 这边这个微信server sdk 提供这些方法

12:49.840 --> 12:57.440
然后他这边直接干嘛 这是exports.main 是不是导出一个main的这个方法 对不对 ok 好 那我们就这一步就不要啊

12:58.000 --> 13:00.240
好 我们这边就是exports

13:02.040 --> 13:03.720
exports.main

13:04.640 --> 13:08.760
等于一个sync 你注意你这边的话云寒树它一定是一步的

13:09.540 --> 13:13.580
所以你在调用的时候也一定要注意啊 这边我们在笔记里面记录一下

13:15.140 --> 13:15.380
注意

13:16.980 --> 13:20.680
注意在在

13:26.880 --> 13:27.040
哎

13:27.960 --> 13:30.840
在啊 在这个编写

13:31.960 --> 13:35.520
编写和调用这个云寒树的时候

13:37.360 --> 13:39.240
一定要注意

13:40.480 --> 13:40.880
注意

13:42.800 --> 13:44.640
一定要注意 这是一个

13:46.200 --> 13:51.920
这是一个什么一步的过程 肯定是一步的嘛 对不对 你远程调用的嘛

13:52.640 --> 13:57.120
ok啊 所以你看我们这边在编写的时候 这边是一个sync啊

13:57.640 --> 14:00.480
sync这里面 这里面他有两个参数 我们这边来看一下

14:01.360 --> 14:03.240
两个参数 一个是event

14:04.160 --> 14:06.440
这个有点类似于世界对象 一个是他的这个

14:07.280 --> 14:14.240
context 上下文对象 那你这边通过这个context的话 你这边可以拿到一些东西

14:16.400 --> 14:20.800
我们看一下他的这个文档 他这个文档应该针对这个context应该是有说明的

14:22.160 --> 14:25.520
嗯 看一下他后面啊 这边云寒树指引章节

14:27.440 --> 14:31.360
云寒树 然后这边 第一个云寒树

14:32.680 --> 14:38.040
他应该是针对这个context 有说明 我看一下啊 这边context

14:39.040 --> 14:45.040
啊 这边云寒树传入的参数有两个 一个是event对象啊 一个是context对象

14:45.460 --> 14:48.980
那event指的是什么呢 指的是触发云寒树的这个世界

14:49.940 --> 14:57.300
当这个小程序端调用云寒树的时候 event就是小程序端调用云寒树是传入的这个参数

14:57.700 --> 15:02.180
那也就是说回头我们在调用这个云寒树的时候 我们要向向这个云寒树传参

15:02.820 --> 15:06.700
对不对 那传参的话 这边就通过这个event来这个获取的

15:08.300 --> 15:15.020
好 然后这个context的对象啊 包含什么呢 包含此处调用的这个调用信息和这个运行状态

15:15.580 --> 15:20.220
啊 然后可以用它来了解服务运行的这个情况 ok

15:20.860 --> 15:28.260
好 那这边呢 举了个最简单的例子 这边这个event通过event点Aevent点B啊 拿到什么呢 拿到这个传递的这个参数

15:29.340 --> 15:33.340
好 那我们这边呢 也是一样的 我们这边呢 接收什么呢 接收event

15:34.220 --> 15:39.980
ok context我们不需要啊context不需要好 然后接下来在这边 这边呢 我们net

15:40.840 --> 15:47.160
net一个result等于一个0 好 然后接下来我们要做什么事情呢 接下来我们根据

15:48.200 --> 15:54.960
传递过来的这个参数 做什么呢 做不同的计算

15:56.920 --> 16:03.320
ok 回头的话会传递哪些参数过来呢 回头会传 传递 呃 首先的话 这边有个那么一

16:04.520 --> 16:07.880
对不对 你的第一个数 然后接下来会有个什么呢 会有个那么二

16:08.820 --> 16:11.660
你的第二个数 然后接下来还会有个什么呢 还会有个tug

16:12.100 --> 16:19.780
tug就是你要做什么计算啊 这边tug对呢 就是比如加对吧 解成除对呢 就是这些

16:20.300 --> 16:24.300
好 那接下来我们这边要做的事情就非常简单 我们这边switch

16:25.020 --> 16:26.820
对不对 看你的这个tug

16:27.780 --> 16:30.580
根据你不同的tug 如果你是比较加

16:31.780 --> 16:35.900
啊 那我们做这个加相关的操作 case 如果你是解

16:36.720 --> 16:38.920
我们做解相关的

16:39.920 --> 16:45.640
啊 case 这边如果是成对吧 the case

16:46.720 --> 16:47.560
这边是除

16:49.480 --> 16:57.040
少了个冒号 ok 好在这边这边的话 你这个result

16:57.920 --> 16:59.120
他就应该等于什么

17:00.240 --> 17:02.520
他是不是就是应该是等于我怎么拿到这个那么一

17:03.000 --> 17:07.320
你看他他这这个官方的例子 他通过什么 是不是通过这个e 问他这个对象

17:08.100 --> 17:13.220
对不对 大家这边点A点B来拿到啊 所以我们这边呢 就是通过ewent

17:14.500 --> 17:21.300
点那么一啊 拿到这个成熟啊 这边你最后再把它转一下 漂漂啊 把它转成这个数字

17:21.980 --> 17:23.620
加上一个漂漂

17:24.380 --> 17:25.220
这个ewent

17:26.300 --> 17:27.460
点 number

17:28.540 --> 17:31.420
对不对好 计算完之后 人家这边break

17:32.460 --> 17:33.900
好 下面的话同理

17:34.880 --> 17:37.600
啊 下面的同理 这边就应该是

17:39.320 --> 17:41.160
这边就是应该是成

17:42.200 --> 17:44.440
啊 那这边这边就是应该是

17:45.280 --> 17:45.520
除

17:46.720 --> 17:55.760
对吧 好 这边呢 计算计算完了之后 然后接下来的话啊 这个switch完了完了之后 然后接下来我们干嘛 这边是不是应该是返回

17:56.920 --> 18:03.240
对不对 我们看他怎么返回的 他这边返回的是一个对象对象里面 这边就有这个上母上母对应的值

18:03.820 --> 18:09.580
啊 那我们这边呢 就返回一个这个对象 对象里面就有什么呢 对象里面就有一个这个

18:10.220 --> 18:10.620
result

18:12.100 --> 18:13.460
啊 比如说我们这边有一个这个

18:14.420 --> 18:15.420
caarc

18:16.380 --> 18:19.580
result对应的是什么呢 对应的是这个result

18:20.540 --> 18:24.780
ok 这计算结果啊 对应的是这个result 就你最终计算的这个结果

18:25.580 --> 18:27.860
好 那我们这个云函数的话 我们就写完了

18:28.660 --> 18:30.620
ok 就写完了啊 保存一下

18:31.360 --> 18:37.480
好 写完了之后 然后接下来我们这边右键右键的话 应该是在这个文件家上面啊 右键

18:38.080 --> 18:48.240
右键的话 这边你就可以这个上传并部署啊 然后接下来的话 这边云这个云端安装依赖啊 也可以就直接在这边安装依赖啊 你如果这里面有依赖

18:48.920 --> 18:51.240
对吧 你可以联通这个依赖一起上传 ok

18:51.880 --> 18:59.240
好 我们这边就直接选这个上传并部署啊 有依赖的话 你在云端安装 ok 我们这边进行个上传

19:01.240 --> 19:05.640
好 上传之后 然后接下来这边啊 这边应该是上传成功了啊 看一下详情

19:07.000 --> 19:08.200
啊 这边是还在上传

19:10.040 --> 19:15.380
啊 稍微等一下 我看看下这边呢 这边

19:17.380 --> 19:18.500
创建并部署

19:19.620 --> 19:22.740
啊 等下创建啊 创建完了 然后加我们这边来看一下呢

19:24.180 --> 19:27.060
我们到这边云函数啊 这边是不是有了

19:28.040 --> 19:33.560
对不对 这边已经有了啊 这边下午两点三十一分啊 ok 这上传成功了 对不对

19:33.960 --> 19:40.200
好 上传成功了之后 然后接下来我们这边我们来看一下 接下来的话 你这边的话 实际上就是可以这个进行调用了

19:40.600 --> 19:43.800
啊 我们这边一步一步 我先把它记一下啊 先把这儿记一下

19:45.360 --> 19:46.240
再比这边记一下

19:47.880 --> 19:52.960
嗯 这边我们刚才是记到哪了 在方形式啊 方形式 然后接下来

19:55.820 --> 20:00.660
接下来在这个方形式 下面创建

20:02.460 --> 20:06.460
对应的云函数目录 例如

20:08.540 --> 20:09.340
啊 例如我们这边

20:10.460 --> 20:14.910
c a l c 对吧

20:17.670 --> 20:21.990
啊 创建这个 然后在这里面创建什么了 创建对应的这个接手文件

20:24.500 --> 20:25.540
啊 稍等啊 卡住了

20:27.840 --> 20:30.080
好 之后在

20:31.200 --> 20:41.080
在这个在在这个c a l c 目录中创建对应的这个解释文件啊 书写

20:42.120 --> 20:45.680
云函数这个对应的这个逻辑

20:47.040 --> 20:53.400
对吧 ok 这边几个图吧 就这边这样子

20:54.800 --> 20:56.040
这样子啊 几个图

20:57.020 --> 20:58.180
啊 把这个展开

21:00.140 --> 21:07.220
啊 这样子 ok 啊 我们这边呢 是这个index.js

21:07.780 --> 21:13.690
啊 人家这边这边 呃 然后接下来这边这边是我的逻辑

21:15.250 --> 21:16.090
这边是我的逻辑

21:17.730 --> 21:20.930
对吧 我这边一个箭头 把他指过来

21:23.490 --> 21:29.760
好 放到笔记里面 ok 啊 把他稍微说放一下

21:30.740 --> 21:31.860
好 之后

21:33.060 --> 21:40.180
嗯 现在现在我们的这个云函数就已经什么 说编写完毕了

21:41.220 --> 21:48.620
编写完毕了 对吧啊 你注意这边的话 你在编写的时候 这个你的这个main 他是一个异补函数 这个在刚才是G了的

21:48.900 --> 21:50.500
啊 这个我们把这儿放放到这来算了

21:52.140 --> 21:52.340
好

21:53.740 --> 21:54.860
放到这儿 放到这里来

21:56.460 --> 21:59.700
啊 注意他这边无论是你编写还是这个调用啊

21:59.780 --> 22:03.860
他都是一个异补的过程 啊 还有就是关于这个参数啊 参数的话文档里面有

22:04.740 --> 22:06.140
对吧 直接把拿过来吧

22:07.140 --> 22:10.780
文档里面有啊 你更多的是应该是去参照这个文档

22:11.780 --> 22:17.220
知道吧 更多的是参照他是官方的文档 他这边有两个参数一个是英文策 一个是context

22:17.700 --> 22:20.140
好 我们这边通过英文策干嘛 就通过英文策

22:20.780 --> 22:24.540
获取到就是你在调用这个云函数的时候他的这个参数

22:25.420 --> 22:28.580
对吧啊 好 现在我们这个云函数编写完毕了

22:29.080 --> 22:29.760
编写完毕后

22:31.440 --> 22:32.560
编写完

22:34.280 --> 22:41.680
完毕后我们需要什么呢 上传这个云函数 到什么 到云端

22:42.720 --> 22:45.040
对吧 那这个的话也很简单 这个的话你在这边

22:45.840 --> 22:51.280
在这边你右键 注意是在文件夹上面啊 文件夹上面这边右键 右键的话这边有个上传

22:53.900 --> 22:55.180
手把手教训 是吧

22:56.180 --> 22:59.820
这边这边你可以选择这个上传并必不属所有文件

23:00.820 --> 23:05.460
那你如果比如说你这边本地有依赖的话 他就会连这个依赖一起上传到云端

23:05.900 --> 23:10.540
你也可以干嘛呢 你也可以就是选择指上传文件不上传这个楼的模仿式

23:10.820 --> 23:14.900
而家他的那个依赖的话在什么呢 在云端安装啊 这个都可以啊

23:17.140 --> 23:23.060
好 我们这边放到这里 说放了一下

23:24.860 --> 23:32.420
ok 这是关于整个这个云函数编写和上传 编写和上传完了之后 然后加我们进入到第二步

23:33.160 --> 23:37.000
我们这边刚才是第一步上传是吧 好的第二步 第二步是本地调用

23:39.800 --> 23:43.920
本地调用啊 我们来看一下本地调用如何来进行调用

23:44.520 --> 23:50.480
本地调用的话 你看他这边的话就是通过什么通过微信点cloud点call function

23:51.040 --> 23:54.280
来进行调用 看到没有 我们把这个直接拿过来啊

23:58.840 --> 23:59.320
在本地

24:00.760 --> 24:04.480
在本地通过什么呢 通过微信

24:05.400 --> 24:06.600
点cloud

24:08.040 --> 24:10.520
cloud 点这个call function

24:12.600 --> 24:16.640
来进行这个云函数的这个调用

24:17.520 --> 24:19.280
ok 啊 这边有这么几个

24:20.440 --> 24:23.600
一个是你的内幕啊 然后一个是你传的参数delta

24:24.200 --> 24:30.080
对不对 这个a和b 很哪就对上了 大家看一下 你这边这个delta a和b看哪就对上了

24:30.480 --> 24:34.800
和他上面举的例子 这边这个e went 点a e went 点b 是不是就对上了

24:35.460 --> 24:42.660
对吧啊就对上了啊sixsense sixsense就是什么 就是你的这个结果啊 就是你这边这个云端执行完了之后

24:42.660 --> 24:47.180
返回了这个结果啊 整体来讲的话实际上也很简单 对不对 ok

24:48.780 --> 24:54.940
哦 说起来刚才还少结了个图 就你这边上传成功之后啊 上传成功之后你是可以在控制台看到的

24:57.070 --> 25:01.270
上传云函数成功之后

25:02.390 --> 25:04.990
可以在控制面板

25:06.950 --> 25:11.030
控制面板的什么呢 这个云函数

25:12.550 --> 25:17.390
这个这个叫什么 面板中 面板中啊 看到

25:18.390 --> 25:22.350
刚才所上传的这个云函数

25:23.950 --> 25:28.630
对吧 我们这边刚才算这个上传的c a l c 你在这边的话是可以看到的

25:29.710 --> 25:35.900
这个也给大家一个图啊 这个就应该记录得很详细了啊 ok

25:36.720 --> 25:44.240
啊 这边云函数 那叫这边c a l c 对吧 刚才上传的啊 并且这边已经是部署好了 对吧

25:47.630 --> 25:54.070
啊 这个是这个 好 然后接下来的话 咱们就开始调用吧啊 调用的话 这边就是这个啊 就直接

25:55.030 --> 26:01.470
这边微信点cloud call function就可以了 行 那接下来我们回到哪里呢 回到我们这边

26:03.510 --> 26:03.990
回到

26:04.810 --> 26:09.970
这边cloud func 点接手 这边 这边是什么时候

26:11.010 --> 26:18.610
是不是你这边点击按钮的时候 对吧 理论上来讲你点击按钮的时候 这边就该干嘛 是不是就调用云函数啊 对不对啊 此时

26:20.130 --> 26:25.730
此时 接下来嘛 接下来我们就来调用

26:27.730 --> 26:32.810
调用云函数啊 通过什么呢 微信点cloud

26:34.550 --> 26:44.330
cloud 点这个call function 对不对 通过这个方法啊 这个方法呢 然后接受一个配置对象 配置对象里面 然后我们来看一下有哪些东西啊

26:45.810 --> 26:52.370
嗯 把这个几个图吧 把这个几个图啊 把它订在这里

26:53.570 --> 26:58.250
啊 回来 我们这边来看一下 首先的话 第一个是什么 第一个是你的name

26:58.970 --> 27:03.090
对不对 我们的name name叫什么 我们的name叫做c a l c

27:03.590 --> 27:09.470
对不对 我们的名字叫这个啊 c l c 好 第二个 第二个那是你的这个data

27:10.790 --> 27:15.310
data的话 它这边那是ab啊 我们这边是什么 你看一下我们这边云端的这个函数

27:15.950 --> 27:21.950
来看一下 我们这边那是那么一那么二对不对 还有这个tug啊 所以我们这边就是那么一

27:22.550 --> 27:25.830
那么一通过什么 是不是通过这边z点data那么一

27:26.670 --> 27:31.990
拿到对不对啊 那么二通过什么呢 通过这边z点data

27:32.570 --> 27:33.090
点

27:34.210 --> 27:37.130
那么二 拿到 还有个什么 是不是还有个tug

27:37.890 --> 27:39.450
tug通过什么 是不是通过这个

27:41.010 --> 27:48.130
是不是来拿到 对不对啊 然后回头的话 你在这个云端函数的话 就通过什么了 通过ewent点那么一

27:48.690 --> 27:53.890
ewent点那么二 以及ewent 这边的话 这个这边还写错了啊

27:54.610 --> 27:56.210
那我们这边要重新上传一下

27:57.190 --> 27:59.870
这边应该是什么 这个是不是应该是ewent

28:00.670 --> 28:07.270
ewent点tug 对不对 始终是通过这个实验对象 来拿这边这个data里面的这个参数

28:07.750 --> 28:11.110
ok 保存一下 保存了 我把它重新上传一下就可以了

28:12.830 --> 28:15.630
这边 把它上传一下 重新上传

28:17.070 --> 28:19.950
ok 等它重新上传 这边就更新了

28:21.750 --> 28:25.590
ok 更新了 更新了 我们这边可以来看一下啊 你如果不放心的话 可以来看一下

28:26.630 --> 28:27.390
这边云开发

28:28.590 --> 28:31.590
然后时间 这边刷新一下

28:32.990 --> 28:37.750
啊 是不是事实啊 对不对 两点事实啊 ok 好 回到这边

28:39.510 --> 28:45.110
回到这边 啊 这边是传过去的data啊 然后下一个 下一个的话是什么呢 下一个是6s对吧

28:46.510 --> 28:50.830
6s 啊 这边对应的是 我们这边直接写这个箭头函数

28:51.250 --> 28:52.090
s

28:52.850 --> 28:55.730
好 我们这边就直接cancel.log

28:56.730 --> 28:57.250
s

28:58.210 --> 28:59.970
ok 我们也写个这个fail

29:01.210 --> 29:08.930
fail对应的就是cancel.arrow 你如果是失败的话 这边直接调用cancel.arrow 把它打印出来

29:09.730 --> 29:13.010
好 保存 保存之后 我们重新编一下

29:13.690 --> 29:18.890
好 接下来的话 我们就要开始来看这个成果了 对不对 看一下是否能够调用

29:19.670 --> 29:20.430
把这边删除

29:21.350 --> 29:26.630
好 我们这边比如说啊 123456 我们这边先做一个加法

29:27.870 --> 29:30.430
啊 这边爆错了 是吧 没关系 我们来看一下

29:31.830 --> 29:34.590
嗯 这边爆错 这边是fail

29:35.590 --> 29:44.670
cannot find the module awe信点server 然后awe信更server更sdk 啊 这边的话 我们这里 我们少了一步

29:45.350 --> 29:48.470
就我们这边的话 你看 我们这边的话 是不是

29:49.430 --> 29:55.390
再引入这个微信更这个server更sdk 但这个有没有安装 这个没有安装 对不对

29:55.950 --> 30:00.110
突然想起来了 这边少了一步 那这边的话 我需要进入到这个目录里面

30:01.550 --> 30:02.710
好 这边进入到这个目录

30:05.010 --> 30:08.650
cd desktop下面的demo

30:09.370 --> 30:15.170
啊 我这个这个这个整个这个项目是在桌面上啊 看得清楚吧 我放大点啊

30:15.670 --> 30:23.150
啊demo啊 首先进来 进来的话 然后加有个什么 所以有个functions啊 方形式下面有个ca lc

30:24.430 --> 30:31.790
对不对 好 有个c lc 然后接下这个c lc 你这边先干嘛呢 你先这个npmoninit干歪

30:32.430 --> 30:33.270
先初识化一下

30:34.230 --> 30:40.670
啊 初识化之后他这边是不是就有这个paxy点接成这些东西啊 对不对 好 然后加这边你在npmon

30:41.270 --> 30:41.950
安装这个

30:42.570 --> 30:45.370
微信server isdk

30:46.810 --> 30:56.840
走 ok 等他安装 安装他这边就有这个依赖这些啊 刚刚才确实少个东西是吧 少依赖

30:57.280 --> 31:03.280
好 来我们这边呢 重新重新来 那我这边就把所有文件上传过去啊 直接上传所有文件

31:04.960 --> 31:10.720
好 这边等他上传吧 已经上传成功了啊 我们来看一下 这边四十三

31:11.700 --> 31:12.620
好 我这边刷新一下

31:16.800 --> 31:21.480
稍微再等一下呢 稍微再等一下 好 我这边呢 先先把这个笔记里面记一下

31:22.360 --> 31:24.800
这边在编写的时候 我们是在

31:26.160 --> 31:27.200
在这啊编写

31:29.240 --> 31:33.720
好 我给我给大家记到哪里呢 记到这里吧 就记到这里

31:34.960 --> 31:36.960
好 在这个编写

31:37.900 --> 31:45.660
在编写云含树的时候 需要使用到微信server

31:45.660 --> 31:48.460
然后刚sdk

31:49.340 --> 31:50.380
这个依赖

31:51.420 --> 31:52.580
对吧 好 首先

31:53.700 --> 31:56.820
在这个中端 在中端中

31:57.540 --> 31:58.980
然后接下来cd到

31:59.860 --> 32:02.020
cd到云含树

32:02.860 --> 32:06.580
所在的目录 啊 例如我们这里是

32:07.740 --> 32:09.420
我们这里是什么

32:09.420 --> 32:11.740
calc 对不对

32:11.740 --> 32:15.740
然后npmunit-y

32:17.300 --> 32:18.860
然后首先

32:20.700 --> 32:23.140
进行这个npmunit-y

32:24.820 --> 32:27.420
unit-y 然后进行一个初始化

32:29.100 --> 32:32.900
首先然后首先进行npmunit-y初始化操作

32:33.980 --> 32:35.260
初始化操作

32:36.200 --> 32:42.560
然后输入这个npmunit-y

32:42.560 --> 32:43.840
然后这个微信

32:44.880 --> 32:45.880
gamserver

32:46.560 --> 32:47.880
然后gamsdk

32:48.680 --> 32:50.400
对不对 安装该依赖

32:51.400 --> 32:54.000
安装该依赖

32:54.000 --> 32:57.000
OK 注意这一步啊 我们刚才少了这一步

32:57.680 --> 33:02.820
OK 好 然后这边做了之后 大家这边你在上传部署

33:02.820 --> 33:05.020
我们这边的话 刚才上传成功有啊

33:05.760 --> 33:07.280
重新编一下

33:07.280 --> 33:11.790
编一下 然后我这边我再上传一下

33:11.790 --> 33:13.190
重新上传一下

33:15.190 --> 33:16.790
在云端安装吧

33:16.790 --> 33:18.470
重新上传一下

33:18.470 --> 33:23.470
上传了之后 然后

33:23.470 --> 33:26.990
这边应该是OK的 我去那边看一下

33:26.990 --> 33:30.200
这边刷新一下

33:30.200 --> 33:31.600
OK了

33:31.600 --> 33:33.920
OK 但是这边时间 十四五

33:33.920 --> 33:37.720
好 然后完事之后 接下来的话

33:38.460 --> 33:41.140
好 接下来我们这边就继续再来调用一次

33:41.140 --> 33:45.140
来看一下云寒树

33:45.140 --> 33:49.140
好 这边123456

33:49.140 --> 33:51.300
加 拿到了

33:51.300 --> 33:53.900
对不对 这边拿到了 拿到了之后 把它展开

33:53.900 --> 33:55.700
展开之后 你看这边

33:55.700 --> 33:58.140
是不是就拿到了这个结果

33:58.140 --> 33:58.940
对不对

33:58.940 --> 34:00.820
哎 你看这边就拿到这个结果

34:00.820 --> 34:02.900
啊 这个res里面就拿到了

34:02.900 --> 34:04.300
拿到之后 你这边你可以干嘛

34:04.300 --> 34:08.470
你这边是不是可以通过这个结构

34:08.470 --> 34:10.550
对不对 结构 把谁结的构出来

34:10.610 --> 34:14.330
把这个result 这个 结构出来

34:14.330 --> 34:16.930
结构出来之后 然后下这边

34:16.930 --> 34:21.090
z是点set data

34:21.090 --> 34:24.450
设置谁 设置这个result

34:24.450 --> 34:26.730
result的值

34:26.730 --> 34:27.570
为什么

34:27.570 --> 34:32.410
作为这个caarcresult

34:32.410 --> 34:34.050
对不对 就你这边返回的

34:34.050 --> 34:37.770
我们该返回的就是caarcresult

34:37.770 --> 34:39.130
好 保存

34:39.190 --> 34:41.950
保存了之后 然后加这边 再来

34:41.950 --> 34:43.350
123

34:43.350 --> 34:45.670
然后456

34:45.670 --> 34:47.790
这边加

34:47.790 --> 34:53.000
caarc is not defend

34:53.000 --> 34:56.320
哦 这里是result

34:56.320 --> 34:58.320
result点caarc

34:58.320 --> 35:01.500
重新再来

35:01.500 --> 35:02.420
再来

35:02.420 --> 35:05.220
123456

35:05.220 --> 35:06.180
加

35:06.180 --> 35:07.180
是不是OK了

35:07.180 --> 35:08.700
对不对 呈

35:08.700 --> 35:10.380
你看 除

35:10.380 --> 35:12.540
OK 但这边你就自己优化一下了

35:12.600 --> 35:13.960
这些都是小问题

35:13.960 --> 35:16.000
OK 这边结

35:16.000 --> 35:16.640
看到没有

35:16.640 --> 35:18.240
那我们这边的话就是通过什么

35:18.240 --> 35:21.200
通过调用云端的这个函数

35:21.200 --> 35:22.520
对不对 云端的函数

35:22.520 --> 35:24.280
然后将我们把这个参数

35:24.280 --> 35:25.760
把它传递过去

35:25.760 --> 35:26.520
传递过去之后

35:26.520 --> 35:28.280
在云端计算完了之后

35:28.280 --> 35:30.440
那它干嘛是把这个结果

35:30.440 --> 35:32.440
是不是给我们返回来

35:32.440 --> 35:33.680
对不对

35:33.680 --> 35:37.160
这个其实就是它所谓的云函数

35:37.160 --> 35:38.040
云函数

35:38.040 --> 35:38.680
大家下去的话

35:38.680 --> 35:41.360
可以把这个例子自己先敲一敲

35:41.380 --> 35:41.980
敲了之后

35:41.980 --> 35:43.940
然后接下来我建议大家

35:43.940 --> 35:46.300
建议大家这边把这个整个云函数

35:46.300 --> 35:47.620
它这边的这个文档

35:47.620 --> 35:48.460
把它看一下

35:48.460 --> 35:50.780
你其实就看前面就可以了

35:50.780 --> 35:51.460
前面

35:51.460 --> 35:52.660
我的第一个云函数

35:52.660 --> 35:55.260
然后获取小程序用户信息啊这些

35:55.260 --> 35:55.860
OK

35:55.860 --> 35:56.340
这个的话

35:56.340 --> 35:57.660
我们在这一张节的话

35:57.660 --> 35:59.140
我们就不展开了

35:59.140 --> 36:00.300
我们看后面

36:00.300 --> 36:02.540
后面我们不是有个第五章吗

36:02.540 --> 36:05.620
第五章我们到时候会写各种干的这种案例

36:05.620 --> 36:06.500
写案例的时候

36:06.500 --> 36:08.060
接下来到时候我们用到了一个

36:08.060 --> 36:09.980
我们回头再来看了一个

36:09.980 --> 36:10.820
好吧

36:11.560 --> 36:12.400
我们这一张的话

36:12.400 --> 36:13.880
主要就是对这个

36:13.880 --> 36:14.880
整个云开发

36:14.880 --> 36:18.280
它的云数据库云存储和这个

36:18.280 --> 36:20.120
就刚讲的云函数

36:20.120 --> 36:22.680
我们做一个快速的上手

36:22.680 --> 36:23.320
对不对

36:23.320 --> 36:25.040
你快速写个DEMO

36:25.040 --> 36:26.800
快速的体验一下

36:26.800 --> 36:27.600
然后后面的话

36:27.600 --> 36:29.440
我们具体就是要用到里面

36:29.440 --> 36:30.720
比如涉及到一些细节的时候

36:30.720 --> 36:32.680
比如说我这边要本地调试

36:32.680 --> 36:33.000
对吧

36:33.000 --> 36:34.560
比如说我第五章写到某一个DEMO

36:34.560 --> 36:35.720
要本地调试的时候

36:35.720 --> 36:37.960
那我们再把这个展开讲一下

36:37.960 --> 36:39.400
好吧OK

36:39.400 --> 36:40.440
好

36:40.460 --> 36:41.220
大家下去的话

36:41.220 --> 36:43.500
把这个例子自己写一下

36:43.500 --> 36:45.220
这是关于云函数

36:45.220 --> 36:45.460
好

36:45.460 --> 36:47.140
这些课的话就到这里

36:47.140 --> 36:47.540
再见

