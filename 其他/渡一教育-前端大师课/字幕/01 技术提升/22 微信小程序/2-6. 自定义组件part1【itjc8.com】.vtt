WEBVTT

00:00.050 --> 00:05.050
前面的话 我们看了微信小程序里面内置的组件

00:05.050 --> 00:10.050
这些课的话 咱们来看一下在微信小程序中如何制定一组件

00:10.050 --> 00:15.050
这个用的其实蛮多的 因为经常的话 它内置的组件

00:15.050 --> 00:21.050
它有些时候不能满足我们的需求 还有就是有些时候的话 咱们根据咱们自己的业务

00:21.050 --> 00:26.050
对吧 自己的业务 然后有些的话 我们需要自己封装一些组件

00:26.050 --> 00:35.050
那如何来这个制定一组件 而制定一组件的话 它这边在官网 它这边实际上有这个详细的介绍

00:35.050 --> 00:41.050
在这里 我把这个链接放到笔记里面 然后笔记还是就是仔细这个重点

00:41.050 --> 00:47.050
关于制定一组件 这边在这个链接

00:47.050 --> 00:55.050
好 然后我们这边的话 我把它展开 展开的话 你看到 就是看到这里面的内容的话 实际上它比较多

00:55.050 --> 01:01.050
有这个介绍 然后有组件模板样式 然后这个component构造器 一条一条的

01:01.050 --> 01:05.050
但实际上的话 咱们这边常见的话 实际上就这样 前面的

01:05.050 --> 01:11.050
我把前面的给大家介绍一下 后面的话 就是一些关于这个扩展的

01:11.050 --> 01:15.050
还有就是这个开发第三方的制定一组件 单元测试之类的

01:15.050 --> 01:21.050
这个的话 你有兴趣的话 你下去自己看一下 好吧 我把前面这部分知识给大家讲了

01:21.050 --> 01:29.050
那大家就完全有能力啊 就是去制定一个组件 而且的话就基本上就平时开发业务的时候 实际上也就够用了

01:29.050 --> 01:37.050
ok 来我们这边我们首先来看一下这个介绍 首先的话 那这个是从基础库1.6.3

01:37.050 --> 01:45.050
开始啊 支持这个组件化编程啊 我看一下 然后支持这个简洁的组件化编程啊

01:45.050 --> 01:56.050
反正所有制定一组件相关特性 需要这个1.6.3 首先注意版本问题啊 在使用这个制定一组件的时候

01:56.050 --> 02:08.050
首先 首先需要注意版本问题 对吧 这个基础库 基础库

02:09.050 --> 02:19.050
要高于多少 要大于大于等于1.6.3 对吧 这是首先第一个要注意的啊

02:19.050 --> 02:26.050
好 然后接下来的话 这边我们来看一下如何创建啊 他这边的话 他是类似于页面

02:26.050 --> 02:37.050
一个制定一组件由这个json 然后wxmail 然后wxss json 这四个文件组成 这个是不是就和咱们页面是一样的了

02:38.050 --> 02:45.050
对不对 咱们页面的话也是就是由这四个部分组成啊 好 然后接下来你这边要编写一个制定一组件

02:45.050 --> 02:54.050
首先需要在这个json文件中啊 你这边要声明把这个component 制断设为这个q ok 那我们这边我们来看一下

02:55.050 --> 03:02.050
啊 这里啊 这边是新拉的一个项目啊 咱们把这个项目咱们把它重新把清空一下

03:03.050 --> 03:04.050
然后这边view

03:05.050 --> 03:14.050
view 然后下这边是index 把这个样式这些都不要啊 把清空了 然后把这个json json data 这边不要了

03:16.420 --> 03:20.420
然后把这边啊绑定这个事件这一块 把它干掉

03:21.420 --> 03:26.420
好 然后接下来这里这个全局的样式 把它干掉 ok 保存

03:27.420 --> 03:35.420
好 现在就是一个干干净净的这个空项目 好 他这边他刚说的是什么啊index.json啊 首先是这边

03:35.420 --> 03:44.420
using components 看到没有 using 就是使用 components 就是组件好 在这边这边的话他需要设置一个我们这边来看一下设置什么

03:45.420 --> 03:48.420
这边的话是需要把这个component设置为q

03:49.420 --> 03:56.990
哦 这个的话不是在页面里面这个是就是你的那个制定一组件里面啊 不是页面里面

03:57.990 --> 04:05.990
好 说说我们这边的话我们来创建一个制定一组件啊 制定一组件的话一般就是新建一个文件家 比如叫做components

04:06.990 --> 04:17.990
对吧 单独来一个文件家来这个装制定一组件好 在这下面 下面的话我们新建一个比如说我们新建一个什么呢 新建一个比较hatter 新建一个item

04:18.990 --> 04:24.990
新建一个item 好 然后接下来话这边右键右键你看这边这边是不是有一个新建component

04:25.990 --> 04:31.990
对不对 点击 点击之后然后加这边输入你的名字 我们这边叫做item

04:32.990 --> 04:33.990
啊 回车

04:34.990 --> 04:42.990
啊 这边的话你可以看到这边的话是不是就是给我们新建了这四个东西 实际上这个结构就和什么 结构是不是就和页面是一模一样的

04:43.990 --> 04:51.990
对不对 和页面一模一样啊 然后接下来他在这个item点接上里面 你看他这边他这边实际上你现在的话他自动就有了

04:51.990 --> 04:56.990
不需要你去写了 这个的话就表明什么了 表明我是一个自定义组件 ok

04:57.990 --> 05:05.990
好 然后接下来我们这边的话我们想要使用 啊 如何使用这个组件呢 我们这组件现在没写是吧 我们这边先随便写着吧

05:06.990 --> 05:09.990
写个名 啊 这边写个item

05:10.990 --> 05:22.430
自定义组件 ok 好 那回头的话你在这个你在哪个页面用 比如说我们想在index这个页面用 那你就在这边index点接上这边啊

05:22.430 --> 05:27.430
啊 这边是不是有个using components啊 对不对 好 你这边就写上你组件的名字

05:28.230 --> 05:34.430
比如说你要在页面里面用 对不对 那你在页面里面用这个组件的时候 这个组件叫什么名字啊 他叫做item

05:35.230 --> 05:43.030
对吧 好 然后在后面就这个组件他对应的这个路径 那路径的话是不是跟目楼下面的components

05:43.630 --> 05:46.030
下面的item 啊 item

05:47.030 --> 06:03.380
怎么样这样子啊 对不对啊 首先注意啊 一定要先导入啊 我们在笔记里面记录一下 在使用 在使用自定义组件的时候啊

06:04.580 --> 06:11.380
一般单独拿一个拿一个目楼来存放

06:12.380 --> 06:16.980
这个自定义组件啊 一般是什么呢 一般是

06:18.580 --> 06:20.380
一般是这个components

06:21.480 --> 06:28.380
对吧 好 然后接下来在使用的时候 在使用自定义组件啊 页面中啊

06:29.180 --> 06:31.380
页面中在使用自定义

06:32.380 --> 06:44.740
自定义组件时需要先在什么 先在这个接受文件中进行一个什么说配置啊 对吧 啊 例如

06:47.180 --> 06:54.900
啊 例如像这样子 ok 好 配置好了之后啊 接下来的话回到我们的这个index.wx 没样

06:56.140 --> 06:59.620
好 在这里 这里的话我就可以使用了 那比如说我们这边

07:00.620 --> 07:11.570
写一个item 看这边的话 你就可以直接当成就是和那个类制组件一样 然后像这些view 这些这些是不是就是它类制的组件

07:12.010 --> 07:16.290
对不对 你看这边呢 我们就是使用的是自定义组件啊 那我们保存一下

07:17.130 --> 07:24.010
保存之后 哎 这边没出来 没出来 我们看一下啊 这边components is not found in pairs

07:24.690 --> 07:27.690
他这边没找到components

07:28.650 --> 07:31.530
我看一看啊 这边他为什么没找到

07:32.690 --> 07:40.340
这边我们的路径 路径应该是对等 重新编一下呢 重新编一下 看一下

07:41.380 --> 07:47.620
啊 他这边确定是我这里using by page index 然后item

07:48.540 --> 07:54.140
components components 稍等啊 我看一下item

07:55.700 --> 08:02.700
啊 刚才试了一下啊 刚才把这边改成了那个相对路径啊 这里改成相对路径 改成相对路径之后 然后重新这个

08:03.180 --> 08:10.780
编译一下啊 你看这边就通过了 可不可以 这边呢 我们这个自定义的组件出来了 好 然后这样我后来我又把它改回来

08:11.500 --> 08:17.100
啊 重新改成这个绝对路径 绝对路径 然后将我重新编译一下啊 你看他这个错误也就回了

08:17.740 --> 08:21.260
啊 所以他这个微信开发者工具他有些时候会有些问题啊

08:22.700 --> 08:29.620
啊 这边呢 你看我们总之这里的话 我们就引入了啊 一定要先在这个接身里面先引入啊 引入之后

08:29.620 --> 08:35.060
然后接下来站一站什么呢 站一站你的页面里面来使用这个自定义组件

08:35.860 --> 08:36.820
ok啊

08:37.620 --> 08:42.340
好 那这个自定义组件你在使用的时候 实际上那这个的话就和你的这个页面

08:42.980 --> 08:47.620
其实很相似啊 首先的话 这边呢 是你的这个wx面 这个没什么好说的

08:48.180 --> 08:52.340
对不对啊 你这边呢 比如说你想要绑什么事件什么的 你就和在页面里面

08:53.060 --> 08:58.580
这个用组件的时候 然后绑事件是一样的啊 比如说我们这边 我们这边这样子

08:59.700 --> 09:04.740
我们给这个自定义组件 我们给他加点样式 class等于一个container

09:05.860 --> 09:08.500
ok好 这边呢 加个view

09:09.620 --> 09:11.780
好 我们给他加点样式啊 点container

09:12.820 --> 09:17.620
点container 我们给他一个样式啊 不要给个border

09:18.260 --> 09:22.340
border1rpx收利的给个几号ccc

09:23.780 --> 09:25.940
ok 咦 怎么出来呢

09:27.220 --> 09:28.820
container out出来了 ok

09:28.900 --> 09:33.780
那这一块 这一块就是我们的自定义样式啊 我用了一个灰色的框 把它框起来

09:34.340 --> 09:38.340
好 然后接下来在这里面 这里面的话 比如说我们给他绑定一个事件

09:39.140 --> 09:42.420
那这边的话 就和你写页面的时候是一样的 要绑到type

09:44.100 --> 09:46.420
对吧 等于一个这个type handle

09:47.940 --> 09:49.940
type handle

09:52.310 --> 09:57.030
好 然后接下来来到js这边啊 js这边稍微就有点区别了

09:57.990 --> 10:03.110
我们以前在那个页面里面那个构造器是什么 是不是配件 对不对

10:04.390 --> 10:07.910
他这边是什么呢 他这边是component 这边我们记录一下

10:09.670 --> 10:16.550
在自定义主键中 在自定义主键中啊不同于

10:17.510 --> 10:20.630
页面 这句话应该放前面哈

10:21.990 --> 10:23.190
不同于页面

10:24.150 --> 10:26.870
这个对应的这个js

10:27.430 --> 10:29.510
文件啊 js文件

10:30.710 --> 10:32.390
中的这个配级构造器

10:34.630 --> 10:35.190
构造

10:36.790 --> 10:45.670
构造器啊 在自定义主键中对应的js文件的构造器

10:45.670 --> 10:47.910
为什么为这个component

10:50.310 --> 10:54.550
component 对吧 好 那这个component下面就有很多选项 我们来看一下

10:55.110 --> 10:59.430
component 这边首先有这个properties

11:00.630 --> 11:01.190
properties

11:02.550 --> 11:07.350
ok 好 然后接下来的话 这边有什么 有data message 对吧

11:08.150 --> 11:08.630
data

11:10.150 --> 11:10.870
有data

11:11.910 --> 11:13.350
然后有message

11:14.710 --> 11:15.510
message

11:16.230 --> 11:17.190
message怎么评的

11:18.630 --> 11:19.750
thod 是吧

11:21.350 --> 11:22.630
thods

11:22.710 --> 11:24.630
ok 好 这两个实际上是

11:25.110 --> 11:29.110
我看message 哦message是配级里面也没有 是吧 配级里面只有只有什么实验的

11:29.110 --> 11:29.670
这个data

11:30.470 --> 11:34.470
对不对 配级 配级构造器里面它只有什么呢 它只有data

11:34.790 --> 11:37.830
表示什么呢 表示我这个页面里面的数据

11:38.150 --> 11:41.030
那这边的话你这个自定义主键里面

11:41.430 --> 11:44.550
component里面的这个data也是一样的啊 表示

11:46.650 --> 11:51.770
表示该自定义主键的这个数据

11:52.330 --> 11:53.770
来 我们这边我们可以来看一个吗

11:54.570 --> 11:57.130
比如说我们在这边data这边 我们来写一个

11:58.970 --> 12:00.170
比如说我们写个count

12:02.010 --> 12:05.290
那写个写个name嘛 写个name

12:05.850 --> 12:08.650
name对应的是什么呢 比如说这个自定义主键

12:11.720 --> 12:14.280
ok 那这个的话是不是就是我这个自定义主键

12:14.920 --> 12:16.920
啊 它的这个自身的这个数据

12:17.400 --> 12:21.080
好了 回到我在这边的话就可以干嘛呀 我在这边是不是就可以使用啊

12:22.360 --> 12:25.000
对 使用方式是一样的啊 这边name

12:25.720 --> 12:28.200
好 我们这边为了这个区别 我们这边我看一下

12:28.840 --> 12:31.800
ok 有区别啊 我们这边保存一下

12:33.400 --> 12:38.040
你看这边那是不是就是自定义主键 它用的是什么 用的是不就是这里的这个数据

12:38.840 --> 12:41.720
对不对啊 在这边用的就是这里的数据

12:42.040 --> 12:45.880
好 然后这样我们这边我们要绑4件 绑4件的话这个4件写在哪里呢

12:46.200 --> 12:48.280
以前在配级的话它是直接干嘛的

12:48.680 --> 12:51.240
配级里面的话是不是直接写到这个data的后面就可以了

12:51.640 --> 12:54.520
对不对 那现在的话在这个自定义主键中

12:54.760 --> 12:57.160
它这边的话就是写在这个message里面

12:57.800 --> 13:00.200
看到没有 就和那个view很像

13:00.760 --> 13:04.760
什么和view很像 对不对啊 我们这边那就是写个

13:05.960 --> 13:13.340
type handle啊 比如说console.log啊 触发了

13:15.100 --> 13:18.300
触发了type handle

13:19.820 --> 13:24.140
4件啊 保存啊 保存之后然后在这边我们来点击

13:24.860 --> 13:30.140
是不OK的 对吧 OK的啊 这个message里面就是输写

13:31.980 --> 13:34.940
输写这个对应的4件

13:35.580 --> 13:41.020
处理 函数啊 当然它的这个选项还有很多啊 我们回头一个一个介绍

13:41.180 --> 13:44.220
它就和那个view有点像啊view的话它的那个

13:45.180 --> 13:48.220
选项是不是非常非常多 对不对 有什么data呀

13:48.700 --> 13:52.300
message呀conputted呀watch呀有很多

13:52.620 --> 13:56.620
它这边也是一样的 还有很多 我们先介绍三个啊 这两个没问题吧

13:57.180 --> 14:01.900
应该没问题啊 应该非常容易接受 我们来看一下这个puberty是什么

14:03.020 --> 14:08.780
这puberty 实际上你猜都猜得到 对不对 你猜都猜得到这个puberty是什么

14:09.100 --> 14:14.700
这puberty的话是不是就是传入的属性 对不对啊 就是这个在使用

14:16.540 --> 14:20.140
在使用自定义主键时

14:20.860 --> 14:24.940
复原数 应该说复主键啊 复主键

14:25.500 --> 14:27.900
传入的什么是属性

14:29.260 --> 14:32.300
是不是应该是这个 对吧 好 来我们这边过来漏液

14:33.740 --> 14:37.420
切到这边 谁在用 什么你的这个index这边 这边在用

14:37.980 --> 14:42.140
对吧 好 让我们这边让我们来传入一个啊 比如说这边传一个content

14:43.580 --> 14:46.940
好 这边对应对应是什么呢 比如这个传入的内容

14:47.900 --> 14:49.900
传入的那种

14:50.460 --> 14:54.700
ok 那我们能传动态的呢 也可以啊 比如我这边一个count

14:56.060 --> 14:59.260
等于啊 这边让我传一个这个动态的

15:01.100 --> 15:07.180
count 那这个count来自于哪里 这个count是不是应该是来源于你这个index

15:08.540 --> 15:13.180
这个页面的这个数据 对不对啊 我们在index这边 我们来定一个数据

15:14.140 --> 15:17.420
这边我们定一个count对应的是1

15:17.980 --> 15:22.940
ok啊 回头我们这边在使用这个item这个自定义主键的时候 我们把这个count

15:23.340 --> 15:30.940
传到我们的自主键里面去 好 回头的话在item.js这边 那这边的话是不是应该是接收

15:31.820 --> 15:33.500
对不对啊 接收这个这个

15:34.220 --> 15:37.980
呃 传入的这个数据啊 那这边就是在这个properties

15:38.700 --> 15:39.500
这边

15:40.460 --> 15:42.940
好 我们来看一下啊 这边就是content

15:44.220 --> 15:51.100
对应啊 你这边的话可以写成一个对象啊和view非常像啊 非常像 首先是什么呢 首先是你的type

15:52.620 --> 15:55.020
对应是什么类型啊 比如我们这边是一个

15:55.660 --> 15:56.300
so straight

15:57.100 --> 16:04.780
对吧 好 然后接下来的话这边value 这个value就是什么呢 这个value就是默认值 如果你没传啊 这边就是这个content

16:05.660 --> 16:08.220
content的默认值

16:09.980 --> 16:12.940
看到没有 好 然后接下来的话 这边这个cont

16:13.820 --> 16:16.700
啊 你也可以简写 简写的话就是什么呢 就写个类型

16:17.420 --> 16:21.740
对吧 和view是不是一样的 对不对啊 那这边就接收到了

16:22.860 --> 16:28.060
通过这个properties 接收到副主键 传入的这个属性

16:28.540 --> 16:33.020
那接收到之后 然后接下来我自然而然 我就可以干嘛 我是不是可以在模板里面使用

16:33.660 --> 16:37.580
对不对啊 那我们这边回到这个模板里面 这边这个view

16:38.540 --> 16:40.940
这边我们就用什么呢 就用这个content

16:43.500 --> 16:48.060
content 好 我们这边再来个view啊 这边是一个什么呢 这个是个技术器

16:49.660 --> 16:54.620
技术器啊 这边是count

16:56.060 --> 16:59.900
啊 好 我们保存一下 保存一下啊 这边重新编一下吧

17:01.420 --> 17:07.820
ok 你啊 是不是ok的 对不对 制定一组件啊 这边是这里啊 大家这边传入的内容

17:08.140 --> 17:11.500
那家这边这个技术器一啊 如果我这边我没有传

17:12.220 --> 17:14.220
比方我们这边在使用的时候 我们没有传

17:15.580 --> 17:20.380
啊 比我们再再来一个组件吧 对吧 再来一个组件 再来一个组件 这边让我没有传

17:22.730 --> 17:27.930
保存 他这边就是干嘛 什么使用这个啊 默认字啊 对不对啊

17:28.570 --> 17:30.730
啊 我们这边这边给了一个组件 我们稍微让他

17:31.370 --> 17:32.890
有一个margin top吧

17:33.930 --> 17:39.290
margin top 给个10rpx啊 稍微开一点 给个20吧

17:40.410 --> 17:47.770
ok 稍微给开一点 看到没有啊 这个就是关于这个制定一组件啊 整体来讲的话还是很简单啊

17:48.410 --> 17:51.770
好 那我们这边回到这个文档 继续往后面看啊

17:53.940 --> 18:00.740
呃 这边代码实力啊 他这边呢 是声明了一个inner text 对吧啊 这边呢 设置这个样式

18:01.540 --> 18:03.220
呃 他这边写了个注意 看一下

18:04.020 --> 18:10.500
在组件的wxss中不应使用id选择器 属性选择器

18:10.820 --> 18:16.180
和标签选择器 也就是他推荐的话就是使用什么呢 就使用这个类选择器

18:16.740 --> 18:21.540
看表现他这边实力的话用的就是类选择器啊 但不知道他这个文档更新没有啊

18:22.100 --> 18:24.580
我现在测试就很多其实是可以的

18:25.540 --> 18:29.060
啊 很多时间是可以的 不知道是不是他这个文档没更新

18:29.940 --> 18:31.220
ok 我们继续往后面看

18:33.140 --> 18:34.340
呃 在制定一

18:35.060 --> 18:40.580
组件的接视文件中需要使用什么呢 需要使用component来注册组件

18:41.140 --> 18:49.620
这刚我们怎么讲了 对不对啊 然后并提供组件的什么呢 属性定义内部数据和制定一方法啊对应的就是这三个

18:50.500 --> 18:58.420
对应的就是这三个啊popertis 这个是这个传入的属性啊data 就是我这个制定义组件 自身的数据

18:59.780 --> 19:00.420
自身的

19:00.900 --> 19:08.100
自身的数据啊message message里面就写你的这个啊 事件处理函数啊 写一些方法

19:10.180 --> 19:17.540
好 来看一下他的这个实力 他这边实力的话 这边popertis啊啊 这个是接收副组件对吧 传过来的inner text

19:17.540 --> 19:24.660
的啊 这边的话可以是一个对象 对象然后接下来话 这边这个type value啊 这个刚也是说了的啊data

19:24.740 --> 19:30.180
data的话是组件内部的数据啊 这个刚才也实力了 对吧啊 这边这边是制定义的方法

19:30.660 --> 19:39.140
ok啊 然后使用制定义组件 使用的话 你需要在什么呢 需要在这个页面的这个接受文件中进行

19:39.220 --> 19:47.060
引用声明啊 这个我们一开始是不是就记录了的 对不对 在这边啊 你需要引用声明啊

19:47.060 --> 19:51.380
声明就是你这边你使用了这个组件的名字啊对应了这个路径啊

19:53.380 --> 19:58.420
啊 他这边有一个 就是你开发者工具 这这个版本之上啊 大家中

19:58.980 --> 20:08.260
这个声明using components 制断啊 在此声明视为全局制定义组件啊 然后在这个小程序内页面

20:08.740 --> 20:14.820
和制定义组件中可以直接使用无需再声明啊 他就是在这个app.json中

20:15.380 --> 20:20.660
那这个我们后面讲那个组件库的时候 我们就会在app.json中使用 就这边

20:21.860 --> 20:26.420
啊 这这个蛮有用的啊 就这边 就我们这边不是有个app.json吗

20:26.580 --> 20:31.700
这个我们之前说过是不是这个全局的这个配置啊 对不对 他这边的话从这个版本开始

20:33.060 --> 20:36.580
从这个版本啊 这个版本开始啊 反正就是有个版本

20:37.380 --> 20:45.000
极以上版本啊 记一下吧 记一下啊 从这个版本啊 开发者工具

20:45.480 --> 20:55.320
这个极以上版本开始可以什么呢 可以在app.json中啊 然后使用什么呢 使用这个using components

20:57.770 --> 21:04.330
来注册组件啊 你这个实际上就是在干嘛嘛 实际上是不是就是在注册组件嘛

21:04.810 --> 21:10.890
对吧啊 然后注册组件之后 然后这个注册的组件他被视为什么呢 视为全局的啊

21:11.770 --> 21:16.730
在在app.json中所

21:18.170 --> 21:19.610
中所

21:20.730 --> 21:21.850
注册的

21:22.810 --> 21:23.850
组件

21:25.210 --> 21:27.050
被视为

21:28.490 --> 21:31.450
被视为全局组件

21:32.570 --> 21:39.770
什么意思啊 是不是就各个页面都可以啊 对不对 各个页面啊 以及这个其他

21:40.570 --> 21:43.850
自定义组件中都可以使用

21:45.530 --> 21:49.450
中国自定义组件里面还可以再使用自定义组件 这个没问题吧

21:50.170 --> 21:54.570
就像俄罗斯套娃一样 比如说我这边的话 我后面又声明一个自定组件叫做item 2

21:55.210 --> 21:59.050
啊 声明了之后呢 我在item里面能不能用这个item 2这个自定组件

21:59.530 --> 22:02.490
可不可以啊 可以吗 对不对 长不行吗

22:04.780 --> 22:07.820
啊 这边呢 就是都可以使用啊 就不需要再注册了

22:08.700 --> 22:14.460
OK 我们后面我们讲那个第三方组件库的时候啊 我到时候我就会在这个app.json里面

22:14.860 --> 22:19.900
把那个就是会用到那些组件啊 就把它注册了 那回头在各个页面就都可以用了

22:22.020 --> 22:26.740
啊 这是这个 好来回到这个官方文档啊 主要就是看官方文档

22:27.540 --> 22:30.740
知道吧 像这些的话 实际上你们有能力自己看的

22:31.460 --> 22:39.060
你们现在这个view也学了 对不对啊view也会了 这个微信小程序的话 像这些你完全是有能力自己看的

22:39.380 --> 22:41.780
啊 我这边实际上就是带着快速过一遍

22:42.660 --> 22:48.740
明白吧啊 然后后面的话第五章的话给大家写一些这个势力 实际上这个微信小程序也就差不多了

22:49.140 --> 22:51.300
啊 好来继续往后面看

22:52.500 --> 22:59.220
呃 这边是代码实力啊 然后这边有一些这个注意事项啊 这里有一些这个注意的这个细节

22:59.620 --> 23:04.740
我看他这个有没有链接 这个做的不好啊 人家做的好的文档 这边的话会有个毛点

23:05.060 --> 23:10.100
有个毛点人家这边点过去人家这边这个 ur 这边会有个对应的毛点

23:10.660 --> 23:18.020
这样子我们来看一下吧 这边 因为wxml节点标签名只能是小写字母中画线下画线组合

23:18.420 --> 23:21.700
啊 所以这边标签名也只能是这些字符 ok 这个没问题

23:22.420 --> 23:29.460
呃 制定义组件可以引用 引用制定义组件的啊 这就是我刚才说的那个

23:30.180 --> 23:33.140
啊 我如果我这个制定义组件比我又定义一个item2

23:33.540 --> 23:38.260
那我在item里面我是可以用item2的 对吧 啊 引用方式是一样的

23:39.300 --> 23:42.100
呃 制定义组件和页面所在的这个

23:43.060 --> 23:50.740
项目跟目录名不能以这个wx 杠开头 它这个是相当于有特殊含义的啊 否则会爆错

23:51.220 --> 23:56.100
ok 好 那是否在页面文件中使用这个 u 人component

23:56.500 --> 24:02.580
会使得页面的rc对象原型稍微有一些差异啊 它这边啊有这么一些这个点

24:03.220 --> 24:06.660
ok 这个呢 大家下去自己把这个注意思想把它看一下

24:07.300 --> 24:12.020
好吧 这个的话就是关于这个制定义组件的一个介绍

24:12.340 --> 24:18.100
啊 这个小节咱们就看完了啊 看完了之后咱们继续啊 咱们继续这这几颗至少看一半嘛

24:18.420 --> 24:22.500
对吧 这几颗看一半 然后下几颗看一半啊 我打算就是花个两节克时间

24:22.900 --> 24:25.780
把这个制定这个制定义组件啊 把它过一下

24:26.580 --> 24:27.700
好 来看第二小节

24:28.820 --> 24:35.060
呃 类似于页面制定义组件拥有这个这个这个 我们知道对吧 然后组件模板好 这个很重要

24:35.620 --> 24:37.060
这个很重要 这个东西眼熟吧

24:37.940 --> 24:40.900
这玩意眼熟吧 这就是什么 这就是插槽啊

24:41.780 --> 24:50.020
就view里面的插槽 对不对 让我们这边再进行这个制定义组件的时候 咱们这边是可以设置插槽的啊 笔记里面记一下

24:52.260 --> 24:56.980
在设置 在设计啊 应该是设计制定义

24:57.780 --> 25:04.660
组件的时候是可以什么呢 是可以就是啊 添加插槽的

25:05.940 --> 25:07.860
啊 这个插槽的用法

25:08.500 --> 25:13.540
插槽的用法啊 和什么呢 和这个vue是

25:15.220 --> 25:16.180
是非常

25:16.980 --> 25:17.540
类似的

25:18.340 --> 25:20.820
啊 所以你会发现技术很多时候都是通的

25:21.620 --> 25:25.620
对不对啊 你学学完一门技术之后回头很多东西其实都是通的

25:26.180 --> 25:30.500
我们来看他这边的话是怎么这个设计插槽 这边就是什么呢 就是一个snot

25:31.380 --> 25:33.380
看到没有啊 比如说我们站我们这边

25:34.340 --> 25:39.140
来到这边啊 我们这边添加一个插槽对不对 snot

25:39.700 --> 25:41.940
好 人家这边呢 回头你在使用的时候

25:42.820 --> 25:48.500
在使用的时候 我这边在这中间我就可以干嘛呀 我这这边中间是不是就可以填入 填充这个内容

25:49.380 --> 25:55.660
对不对啊 我这边呢 就是写一个 表示这个是插槽vue

25:56.380 --> 25:59.420
嗯啊 这部分

26:00.380 --> 26:04.060
这部分内容会被放入

26:05.500 --> 26:07.340
到插槽中

26:08.780 --> 26:09.740
对吧啊 保存

26:10.700 --> 26:17.100
你看他这边啊 你这边就是你在使用这个制定组件的时候 你中间插入的这部分内容

26:17.500 --> 26:21.660
这部分内容就会被放入到哪里呢 就会放入到这个snot这边

26:22.380 --> 26:28.380
对不对啊 那这边的话 你这个位置在哪取决于你这个插槽在哪啊 别说这个插槽我把它放到

26:28.700 --> 26:34.140
这个中间 对吧 那你这边最终渲染出来的话 这个他就在中间

26:34.780 --> 26:40.780
ok 关于这个插槽啊 那这插槽的话他也是什么呢 也是就是可以取名字的

26:41.820 --> 26:43.740
好 直接在这写吧 写了我们再来看文档

26:44.620 --> 26:47.420
和这个vue类似啊 并且

26:48.380 --> 26:52.540
并且和vue中的这个插槽

26:53.660 --> 26:55.500
一样可以

26:56.220 --> 26:58.620
怎么呢 可以就是设置

26:59.340 --> 27:00.220
具名插槽

27:01.500 --> 27:02.780
还记得具名插槽吧

27:03.420 --> 27:07.100
还记不记了什么具名插槽 就是给插槽取个名字

27:07.900 --> 27:13.900
对不对 就是给插槽取个名字 然后回到你在插入的时候 你可以指定就是我要插入到哪个插槽

27:14.540 --> 27:17.020
ok 好 比如说我们这边的话 我们来这个

27:18.140 --> 27:22.540
设置具名插槽在这边 这边的话我给他写一个这个

27:23.660 --> 27:29.290
name name啊 比如说这个的话是一个什么呢 这个是一个before

27:30.490 --> 27:32.730
啊 人家这边是一个after

27:36.230 --> 27:41.990
after啊 那我这边呢 是不是就是两个具名插槽 对不对 人家这边再来一个 再来一个没有名字的

27:43.190 --> 27:43.430
啊

27:46.810 --> 27:49.290
再来一个没有名字的 那现在的话我在这边是不是

27:49.690 --> 27:54.330
就是设计了三个插槽 对不对 两个有名字 before after 一个没有名字

27:54.730 --> 28:00.650
好 然后接下来我这边我在使用的时候 那我这边在插入内容的时候 我这边就可以指定

28:01.610 --> 28:06.330
比如这部分内容被放入到什么呢 被放入到这个before

28:08.010 --> 28:11.450
啊 复制一份 这部分内容被放入到after

28:13.620 --> 28:14.100
after

28:14.820 --> 28:18.020
好 这部分内容放入到什么呢 放入到这个默认

28:21.140 --> 28:22.180
默认插槽

28:23.940 --> 28:31.620
ok 那你现在这样子他是没效果的 你现在这样子的话 你看他这边他就全部都是放到什么呢 全部都是放到这个中间这个

28:32.420 --> 28:37.860
啊 就这个啊 但你看不出来啊 因为这个也没渲染 对不对啊 抗腾的过了就直接就是他

28:38.260 --> 28:41.780
这个你也看不出来 我看怎么让他明显一点的 我们这样子

28:42.740 --> 28:48.020
我把这个啊 这样子可以吧 啊 这边插槽啊 隔了一个这个content

28:48.260 --> 28:53.380
那接下来又是这个默认的插槽 隔了一个content啊 大家这边是这个after这个插槽 你看

28:54.180 --> 28:58.100
现在现在的话 你看他这边就是content 大家这边全部是放到这里了

28:58.500 --> 29:03.620
对 然后技术器 ok 好 那你这边的话想要就是把这部分不要把这部分内容

29:04.100 --> 29:09.300
放入到什么呢 放入到这个插槽 也就最终渲染出来的话应该是什么 是不是在这个content的前面

29:09.780 --> 29:13.620
是不是在他前面啊 对不对啊 你想把这个这部分内容

29:14.260 --> 29:16.820
放入到哪里呢 放入到这个after

29:17.700 --> 29:24.900
放入到after 也就是渲染出来是在这个技术器后面 那这边怎么做啊 这边很简单 你在这边的话你指定一下

29:25.460 --> 29:33.380
snot就可以了 指定一下snot啊 我这部分内容我要放入到before

29:35.060 --> 29:36.820
啊 然后这部分内容

29:37.620 --> 29:40.500
我要放入到什么呢 我要放入到after

29:41.060 --> 29:45.820
ok 保存 哎 我看一下 重新编一下

29:47.820 --> 29:50.700
呃 我看一下我这边是不是写错了啊 稍等 我看一下

29:52.620 --> 29:58.140
啊 我这边我想起来了 这边的话如果想要使用多个插槽的话 你在这边你得配置

29:59.180 --> 30:05.580
在这里啊 这里我们刚刚是不是学了三个配置了啊 这个popper地色 然后data 然后还有这个message

30:05.980 --> 30:10.060
好 这边再介绍一个新的配置项 这配置项叫做什么呢 叫做options

30:11.020 --> 30:13.580
ok 他这边对应的是一个对象

30:15.100 --> 30:21.100
啊 这个options是什么呢 options他就是这个制定组件对应的配置啊 该

30:22.780 --> 30:27.340
该制定一组件所对应的

30:28.380 --> 30:30.620
所对应的

30:31.420 --> 30:33.180
所对应的配置

30:33.980 --> 30:38.940
ok 好 那在这个options是你需要把什么呢 需要把那个就是multiple

30:39.180 --> 30:40.860
notes把它设置为2

30:41.500 --> 30:46.700
啊 这边吗 你看这边有 看到没有 multiple multiple 就是啊 多个的意思

30:46.860 --> 30:52.300
那snotes就是插槽 也就是多个插槽 对吧 那把这个设置为什么呢 设置为2

30:52.700 --> 30:55.020
相当于开启什么 开启

30:56.540 --> 30:58.220
开启多插槽

30:59.020 --> 30:59.500
选项

31:00.380 --> 31:08.380
ok 保存一下 做搞定了 对不对 你看这边就搞定了啊 这是关于这个多个插槽

31:09.180 --> 31:17.100
好 然后我想想插槽这边还有没有什么 好像大致就没有了啊 这边我们看一下呢 来看一下他的文档啊

31:18.780 --> 31:21.660
好 他这边这个模板数据绑定

31:22.620 --> 31:25.340
模板数据绑定啊 与这个

31:26.300 --> 31:30.460
哦 他这边都不是讲插槽啊 这边都不是讲插槽

31:31.100 --> 31:34.780
这边插槽已经讲过了 讲过了 然后在这边是这个模板数据绑定

31:37.460 --> 31:38.500
啊 他这边就是说

31:39.060 --> 31:45.220
呃 你这边呢 可以像这个制定主键啊 传递这个属性啊 这个这个刚我们已经看了对不对

31:45.940 --> 31:51.780
啊 然后在这边在上面的例子中 主键的属性pop a pop b啊 就这个啊 这两个

31:52.020 --> 31:54.820
ok 将收到页面传递的数据

31:55.300 --> 32:02.260
啊 页面可以通过什么呢 可以通过这个set data来改变绑定的这个数据制断啊 也就是说这边

32:02.900 --> 32:09.220
比如我们看这个例子 我们这边呢 这个技术器1 技术器1 这个1哪来的 这个1的话是不是这个

32:09.700 --> 32:12.580
index这个页面里面所维护的这个数据

32:13.220 --> 32:18.020
对不对 那只要我这个页面数据发生变化 那传入到这个制定主键里面的数据

32:18.500 --> 32:19.540
自然而然也会变化

32:20.260 --> 32:23.620
对不对啊 来我们这边我们来看嘛 比如说我在这边

32:24.500 --> 32:31.780
我给他绑一个时间 好不好 啊 这边绑的type等于一个type handle

32:33.380 --> 32:35.060
好 然后接下来在这边

32:36.260 --> 32:38.980
在这边啊 我们来写一下type handle

32:40.100 --> 32:43.540
啊 这边呢 就是z是点set data

32:44.900 --> 32:49.620
对吧啊 这边抗车等于一个什么呢 等于一个z是点data点

32:50.260 --> 32:56.100
counter加1啊 那我们保存 保存之后 然后接下来我们这边的话 我们这边点击

32:57.140 --> 33:00.420
点击 你看 当我点击之后 我的这个

33:01.300 --> 33:06.660
index页面的这个counter 是不是会自占 那自占的话 自然而然 我这边在使用这个

33:07.140 --> 33:13.300
制定一组件的时候 这边这个counter会传递给制定一组件 那传递下去的话 这边是不是也就会自占

33:14.180 --> 33:15.940
对不对 他说的是这个

33:16.180 --> 33:16.660
啊

33:17.860 --> 33:18.180
哎

33:19.460 --> 33:21.140
好 然后接下来回到这边

33:22.740 --> 33:30.660
啊 然后下一个 下一个的话是这个snot啊snot刚才说了啊 然后需要使用多个snot时

33:30.820 --> 33:38.340
可以在组件结实中声明启用啊 就这个multiple snot是这个q啊 这我们在笔记里面记一下吧

33:39.060 --> 33:42.900
啊 我刚才已经讲了这三个 然后接下来有个什么呢 有一个options

33:46.100 --> 33:50.820
options啊 这个是什么呢 这个是关于这个制定一组件的一些选项配置

33:52.580 --> 34:04.100
关于制定一组件的选项配置啊 例如我们要使用这个多插槽的时候

34:04.820 --> 34:10.500
多插槽的时候就需要配置什么说那个multiple

34:11.220 --> 34:12.740
就需要配置

34:13.780 --> 34:13.940
啊

34:14.820 --> 34:17.380
这个东西对吧 配置这个为q

34:18.900 --> 34:21.300
需要配置这个为q

34:22.020 --> 34:27.140
ok 他还有很多其他的配置箱啊 这个具体有了一些配置箱 这个肯定是干嘛 这肯定是去看文档

34:27.700 --> 34:33.620
对不对 文档肯定是有个什么 不肯定是个表格 对不对啊 你这边的话猜都猜得到啊

34:34.740 --> 34:38.260
好 然后接下来后面继续啊 这是关于这个snot

34:39.220 --> 34:43.940
啊 这边before after啊 然后接下来这边内置的 内置的就放到啊 就是那个

34:44.740 --> 34:47.700
默认的 默认的就放到snot啊 这个刚才看了

34:48.580 --> 34:53.540
对吧 就你这边在使用的时候 这个放入到before 这个放入到after 这个就放到什么

34:53.540 --> 34:57.540
是放入到中间的这个默认插槽 对吧 ok

34:59.460 --> 35:07.300
好 然后使用时啊 用snot属性来将节点插入到不同的snot上啊 就这个

35:07.940 --> 35:08.180
ok

35:09.860 --> 35:17.860
好 然后接下来话 关于主键的样式啊 主键对应的wxss文件的样式只会对这个

35:18.500 --> 35:21.460
wxmail内的这个节点生效 ok

35:22.100 --> 35:28.980
好 大家这边的话就写样式的时候 他这边有一些这个注意点啊 比如说你这边主键和引用主键的页面

35:29.300 --> 35:35.620
不能使用id选择器 属性选择器和标签选择器啊 请改用class选择器

35:36.180 --> 35:43.140
也就是你记住 就在小程序里面用这个class是最稳的 ok 你用其他的话 他可能有些时候会出些问题

35:43.780 --> 35:51.220
啊 但这个具体为什么会出问题 这个就和他内部的设计有问题了 就是有关系了 对不对 就看他内部是怎么设计的 ok

35:51.780 --> 35:58.580
啊 说他这边就是用这个class选择器 这个是最稳定的啊 你今天的话就是用这个class选择器啊

35:59.140 --> 36:02.580
啊 这边的话 还有一些就是关于选择器的一些其他的一些注意事项

36:02.980 --> 36:09.220
这个我就不挨载着练了啊 你看这边这个在主键中不能使用不能使用啊 不能使用

36:09.780 --> 36:20.500
ok 所以你就用这个类选择器就ok了 除此之外 主键可以指定他所在节点的默认样式啊 使用这个host

36:21.220 --> 36:24.340
选择器 我们看一下 这边这个host

36:26.660 --> 36:34.020
他这边的话 实际上他有些哈 有些他给你提供的这种势力啊 你这边的话可以直接这边在这个开发者工具中

36:34.500 --> 36:38.100
预览效果就可以了 他这个东西也挺方便的啊 你这边点一下

36:38.740 --> 36:40.820
点一下之后 然后下来这边啊 导入

36:41.700 --> 36:46.900
导入这个代码片段啊 导入之后 然后下你直接看他官方的实力 ok

36:47.860 --> 36:54.260
我们来看他官方的实力吗 但这边首先也是一个页面对吧 index 就一个页面 大家这边的话有一个这个

36:54.580 --> 36:55.300
自定义主键

36:56.340 --> 36:58.740
啊 自定义主键 然后这边我们看一下

37:00.780 --> 37:01.180
这边

37:02.380 --> 37:07.180
呃 这边呢 就是view 然后加这边有一个这个snot啊 人家在这里

37:08.060 --> 37:09.420
这里用到了这个host

37:10.300 --> 37:10.620
conner

37:11.660 --> 37:13.020
host color yellow

37:14.780 --> 37:15.500
host

37:16.380 --> 37:20.940
然后这边的话应该他就把整个字体设置成了这个黄色

37:22.380 --> 37:23.980
我再再看一下呢 这边

37:24.700 --> 37:29.340
主键可以指定他所在节点的默认样式

37:30.140 --> 37:34.300
也就是说指定默认样式的啊 就统一这边使用这个冒号host

37:34.940 --> 37:38.380
啊 指定着整个这个默认的这个样式 ok

37:39.740 --> 37:47.020
啊 把这个关了啊 他这个其实蛮方便的 ok 很多时候你都需要把这个点开 看一下他这个官方给的这个实力

37:49.050 --> 38:00.490
好 下一个下一个的话是主键样式的这个隔离啊 然后自定义主键的样式只受到什么呢 就是你自定义主键的这个wxss的这个印象啊 这个这个是很好理解的

38:01.050 --> 38:10.090
对不对啊 正常情况下的话就是我们啊 就下意识觉得也应该是这样子的啊 除非以下两种情况啊 我们来看一下

38:11.290 --> 38:19.130
app.wx的页面啊 或者什么呢 或者页面的这个wxss使用了什么呢 使用了标签名选择器

38:19.610 --> 38:25.210
啊 来直接指定样式 那这些选择器的话会影响到页面和全部主键

38:25.770 --> 38:29.770
通常的话这个不推荐怎么做啊 给我们这边我们来看一下

38:30.890 --> 38:38.010
他说比如说我这边当前所在的这个页面 我现在的话我是在这个index这个页面使用的这个主键 对不对

38:38.250 --> 38:41.370
好 这样我在这边的话我直接干嘛呢 我直接使用这个view

38:43.540 --> 38:52.420
使用view啊 counter read啊 保存啊 确实是 看到没有 整个自定义主键 是不是都被影响了

38:53.060 --> 39:01.460
对吧 ok 啊 这个是不推荐的啊 好 然后加这边指定特殊的样式隔离选项 这边有一个这个style

39:02.020 --> 39:04.820
isolation 这个是什么呢 这个是样式隔离

39:05.380 --> 39:10.740
他默认情况下就是什么呢 默认情况下就是这个isolation 就表示什么呢 表示样式隔离

39:11.220 --> 39:13.220
所以一般情况下你是不需要去管他的

39:14.180 --> 39:18.820
一般情况下是不需要管他的 然后除此之外呢 就是他还给你提供了

39:19.300 --> 39:22.900
就是几个额外的这个选项啊 比如说我们这边来看一下

39:23.700 --> 39:30.500
apply shared 表示什么呢 表示页面的这个wxss样式啊 就页面的样式

39:30.900 --> 39:40.340
将影响自定义主键啊 但自定义主键的这个指定的样式不会影响页面 ok 好来 我们这边 我们来看一下

39:42.340 --> 39:44.340
呃 来看一下 比如说

39:45.140 --> 39:50.660
举个例子啊举个例子 比如说我这边这边的话我自定义

39:51.780 --> 39:53.460
自定义主键我这边是不是有个container

39:54.180 --> 39:58.340
对吧 有个container好 然后接下来我在这边这边的话我也来个container

39:59.300 --> 40:02.420
啊 在这边点container

40:04.760 --> 40:10.920
ok 再说话一下 也有个container啊 这个container点container

40:11.560 --> 40:14.200
啊 这个的话我给个什么呢 给个这个border

40:14.920 --> 40:19.560
给个5px啊 或者6啊6rpx

40:20.120 --> 40:22.120
solid 或者这个换一个线吗

40:23.480 --> 40:25.640
虚线对吧 然后来一个read

40:26.600 --> 40:28.200
ok 我们这边保存

40:28.920 --> 40:31.800
保存之后 你看两者之间是不是不会互相影响

40:32.440 --> 40:38.680
对不对 你这个页面的这个container这个样式和我这个自定义主键的container样式

40:38.680 --> 40:43.560
他们是不会互相影响的啊 除非什么呢 除非你这边 你比如说设置

40:44.040 --> 40:47.560
啊 比较这边 他也是在option室里面设置啊 这里面有很多选项

40:48.120 --> 40:49.320
比如说我这边设置他

40:51.160 --> 40:53.240
我们来到来到这边

40:54.200 --> 41:00.360
在这里 是吧 在这里啊 这边来设置一下 我们把他设置成什么呢 我们就把他设置成那个第二个

41:02.760 --> 41:04.840
就把他设置成 刚才好像出来了 是吧

41:06.200 --> 41:07.000
啊 重新来

41:08.520 --> 41:11.880
就这个applyshared 这个什么意思啊 来看一下

41:13.640 --> 41:18.920
呃 页面会影响自定义主键 但自定义主键呢 不会影响页面

41:18.920 --> 41:21.080
ok 那我们这边就应该是什么效果

41:21.640 --> 41:25.990
这边保存一下 看一下 保存

41:28.820 --> 41:30.820
呃 item

41:31.460 --> 41:40.380
看一下啊 呃 这边是难道是因为我这个自定主键写了样式 他这边用的是自定主键吗 我重新编一下呢

41:42.300 --> 41:46.460
呃 那我这边这样子呢 我把这个这个样式我把它去除掉

41:47.340 --> 41:48.780
啊 去除掉

41:48.780 --> 41:54.540
哦 ok 你看 你这这边 这边的话 因为刚才我们这边自定义样式这边写了啊 写了样式

41:54.540 --> 41:57.420
他估计他就直接用的是这个自定义主键的这个样式

41:57.420 --> 42:01.420
啊 你看我这边没写没写的话 你看这边 页面的样式是不是就穿透进来了

42:01.900 --> 42:04.140
对不对 但我如果我这边的话 我把这个

42:05.020 --> 42:09.420
我把这个去掉 去掉他默认是什么 默认是隔离 对吧 你看 这就没有

42:10.060 --> 42:12.220
看那边啊 这边啊 就是可以设置

42:12.460 --> 42:15.500
就是你这个页面的样式和自定义主键的样式

42:15.820 --> 42:21.580
啊 他的一个这个隔离如何进行隔离啊 就谁影响谁 但你这边啊也可以倒过来

42:22.380 --> 42:24.060
对吧 你看这边 这边就是怎么了

42:25.100 --> 42:32.700
比如这个sharedshared就是页面样式会影响自定义主键啊 然后自定义主键的样式也会什么呢 也会影响页面

42:33.260 --> 42:40.140
和其他设置了就这两个选心的这个这两个选项的自定义主键啊 这些应该都比较好理解啊

42:41.420 --> 42:42.700
好 我把这个这个改回去

42:43.740 --> 42:44.700
把这个重新打开

42:46.380 --> 42:54.150
啊 那页面页面的这个就不要了吧 好吧 页面这个就不要了 ok

42:54.870 --> 43:05.590
好 然后使用后者时请务必注意主键间样式的相互影响啊 就你如果使用后面的话 因为那个页面和主键之间

43:05.910 --> 43:09.910
样式会相互影响 说你这边要注意啊 他这边有这么一些点

43:10.310 --> 43:16.070
自己把它看一下啊 但一般实际上都是用什么呢 都是用这个啊 isolated

43:16.630 --> 43:21.030
啊 除非你什么呢 你有特殊的这个业务需求 我确实需要就是我这个

43:21.750 --> 43:30.310
页面里面的某些样式穿透到自定义主键里面 ok 一般来讲的话就是一般就是启用这个样式隔离 就是用它默认的就可以了

43:32.710 --> 43:36.950
啊 这是关于这个隔离 那他这边还举了个例子啊

43:39.380 --> 43:48.820
好 然后接下来的话 这边外部样式内啊 有时主键希望接受外部传入的样式内 那此时的话可以在这个component中

43:49.460 --> 43:57.060
然后使用什么呢 使用这个啊 这个叫什么 external 啊 对 external external classes

43:57.540 --> 44:05.780
来指定什么呢 来指来定义啊 定义这个若干个外部样式内啊 我们这边我们来看一下他的这个势力啊

44:06.580 --> 44:12.500
他这边的话 我们这边就有多一个选项 看到没有 又多一个选项啊 我们把笔记里面记一下

44:14.180 --> 44:14.740
在这里

44:15.620 --> 44:19.620
external classes

44:20.820 --> 44:27.620
啊 又多又多学一个选项 是吧 这个是什么呢 用于指定 就是外部

44:28.340 --> 44:36.980
传入的样式内啊 这个也很好理解 对不对 好来我们这边我们来看一下嘛 跟着他这个文档我们来试一下

44:37.620 --> 44:44.580
比如说我们现在这边 这边的话 我们这边给他挂一个样式内啊 就这个内幕这边啊 内幕这边

44:44.820 --> 44:47.380
我们给他挂个样式内 class

44:48.180 --> 44:48.980
等于一个

44:50.180 --> 44:57.940
叫什么名字呢 就要test吧 ok 叫test 但是我现在的话 我在我这个制定组件这边 我有没有写

44:58.740 --> 45:04.340
我没有写 对不对 我没有写啊 没有写的话 那你这边现在就是相当于是个空的样式内 啥都没有

45:04.820 --> 45:09.540
啥都没有 然后接下来我这边的话 我在这个接是这边 我来指定

45:10.260 --> 45:11.780
啊

45:12.100 --> 45:16.500
eternal class 我看他是怎么指定的 好像是个数组是吧

45:17.300 --> 45:24.260
过来看一下 是个数组数组里面就是这个 我们就叫my class吧 对 我们就叫这个吧 就跟着他官方来

45:24.980 --> 45:33.480
啊 直接把整个这个复制过来 叫做my class啊 这边斗好啊 好 然后接下来在这边

45:35.480 --> 45:38.600
在这边啊 这边你就应该是什么 是吧 my class

45:39.560 --> 45:48.360
my class啊 正常情况下来讲 你这边这个样式内面应该是在你自己的这个wxs s里面 是不来写

45:48.760 --> 45:52.840
我这边没写没写 然后这样我在这边配置了什么 是配置了外部传入

45:53.640 --> 46:01.480
对不对 那这边的话就是应该是你在使用这个组件的时候啊 这里使用组件的时候 外部来传入这个样式内 我们来看一下

46:02.120 --> 46:06.840
啊 这里看到没有啊 我这边传入这个样式内 class

46:08.760 --> 46:15.560
这边class等于一个my class 然后接下来我在这边我来配置my class

46:19.850 --> 46:23.770
my class 我们这边配置一个counter read

46:24.490 --> 46:26.250
啊 保存 是不是ok的

46:27.290 --> 46:30.250
哎 ok 归 ok 他这边的话我看一下啊

46:31.530 --> 46:39.690
ok 倒是 ok 哦 对的对的对的 应该是整个组件 对不对 你这边啊 整个组件 class 传进去传进去

46:40.410 --> 46:41.530
然后这边

46:43.050 --> 46:44.810
哦 他这边我看一下啊

46:48.250 --> 46:50.570
哦 他这边还不是说在这里使用

46:51.050 --> 46:58.250
还不是说在这里使用 他这边就相当于是什么了 这边的话你在用的时候你看这边class 对不对 传入整个这个class

46:58.570 --> 47:04.970
好 然后接下来我这边配置 配置了这个class之后 他针对什么 是不是 针对整个组件生销

47:06.410 --> 47:09.370
看到没有 针对整个组件生销啊 他是这样子的

47:11.430 --> 47:13.750
啊 这是关于这个额外的这个样式

47:14.550 --> 47:19.270
啊 他最就是优先级的问题 ok 他在这边会有个优先级

47:20.950 --> 47:25.750
好 然后我看一下啊 其他的啊 指定对应的

47:26.870 --> 47:32.390
啊 这边可以指定啊 不同的这个 就是传入不同的啊 就是针对同一个组件

47:32.950 --> 47:39.830
对不对 你让我同一个组件 我这边可以传入这个不同的这个这个样式内啊 这个这个在开发中实际上也是蛮有用的

47:40.550 --> 47:42.230
对不对 你想一想 比如说我这边的话

47:43.510 --> 47:47.350
我这个组件我需要是这个 就两个都是相同的这个制定组件

47:47.910 --> 47:51.830
都是相同的制定组件 但是这个的话 样式和这个的话可能有点不一样

47:52.390 --> 47:57.030
啊 这个就是取决于我在使用的时候 那我这边是不是就可以用 就是用这边

47:57.750 --> 48:00.550
这个传入 对不对 传入这个样式

48:03.530 --> 48:05.050
啊 这边是传入

48:06.090 --> 48:11.450
嗯 然后接下来话引入页面和或者副组件的样式

48:12.330 --> 48:15.610
啊 他这边后面的话 实际上都是在讲这个和样式相关的了

48:16.250 --> 48:20.810
可不可以啊 后面都是讲和样式相关的了啊 这个就不挨着看了

48:20.810 --> 48:25.770
ok 总之这边的话 这个组件和模板啊 以及样式 他这边实际上就是

48:26.330 --> 48:32.330
也是讲了一下 就是整个制定组件的一些基本的用法啊 你下面的话 你后面你可以把这个

48:32.890 --> 48:36.810
引用页面或者副组件的样式啊 自己看一下 我看他给例子没有

48:38.760 --> 48:42.840
啊 给了的 这边给了例子了 你可以把他的例子打开看一下

48:43.480 --> 48:47.800
好吧 ok 哦 我看估计这节课的话

48:48.760 --> 48:56.120
啊 我还说分两节课讲啊 估计两节课还讲不完 得分多多节课 因为这这会儿的话已经讲了快50分钟了

48:56.760 --> 49:02.760
行吧 那这个大家休息会 好吧 休息会 把这个制定组件自己就是我们这边课堂写的代码

49:03.480 --> 49:08.840
课堂写的代码自己把敲一遍 自己敲一敲啊 基本敲一遍就没有太大问题了

49:09.240 --> 49:15.720
啊 把这些这个自己过一下 ok 下节课的话 我们来开始从讲从这个component 构造器

49:16.200 --> 49:22.840
来看啊 继续往把这个文档继续往后面看 ok 这些课就先到这里啊 再见

