WEBVTT

00:00.500 --> 00:02.500
好 来吧

00:02.500 --> 00:06.500
给我来一起实现一个美团的省市集联

00:06.500 --> 00:09.500
好 咱们首先看一看这个效果

00:09.500 --> 00:13.500
效果很简单 左边选择省份

00:13.500 --> 00:16.500
然后选择城市 然后选择区域

00:16.500 --> 00:19.500
这些数据都是真的 不是假的

00:19.500 --> 00:23.500
然后再来一个 比方说这里选择黑龙江

00:23.500 --> 00:26.500
你看这个区域就清空了 对吧 不能选了

00:26.500 --> 00:29.500
然后城市选择一个哈尔滨

00:30.500 --> 00:34.500
咱们都一在哪个区 我都不知道都一在哪个区

00:34.500 --> 00:37.500
随便来一个区吧 就这么个效果

00:37.500 --> 00:41.500
但是这个效果有些同学可能觉得很简单

00:41.500 --> 00:44.500
我首先跟你说好 这个效果不简单的

00:44.500 --> 00:46.500
因为你觉得简单的话

00:46.500 --> 00:49.500
是因为你之前做的省市集联

00:49.500 --> 00:53.500
是用这个元素 是那个元素

00:53.500 --> 00:56.500
这个玩意儿做些是简单 是比较简单

00:56.500 --> 00:59.500
但是我们这一块是不能用这个元素的

00:59.500 --> 01:00.500
为什么不能用呢

01:00.500 --> 01:03.500
你看一下这里的样式效果

01:03.500 --> 01:06.500
你想一想那个Snake的玩意儿它能做到吗

01:06.500 --> 01:08.500
就做不到啊

01:08.500 --> 01:11.500
而且像这种效果在以后

01:11.500 --> 01:14.500
如果说你开发一些页面的时候

01:14.500 --> 01:17.500
我们往往不会使用原生的Snake

01:17.500 --> 01:19.500
因为那个玩意儿太丑了

01:19.500 --> 01:22.500
而且它那个

01:22.500 --> 01:23.500
怎么说

01:23.500 --> 01:25.500
它做不出来这种效果

01:25.500 --> 01:28.500
所以说我们往往会自己写样式

01:28.500 --> 01:30.500
自己用DV来去布局

01:30.500 --> 01:33.500
来做这么一个选择框

01:33.500 --> 01:36.500
因此这一块无论是CS代码

01:36.500 --> 01:39.500
还是GS代码 还是都是

01:39.500 --> 01:42.500
不能算太多 至少算是中等

01:42.500 --> 01:45.500
比方说CS代码大概在100行左右

01:45.500 --> 01:48.500
GS代码也大概在100行左右

01:48.500 --> 01:50.500
不加速适

01:50.500 --> 01:51.500
那么这一节课呢

01:51.500 --> 01:53.500
同学们要跟着我一步一步

01:53.500 --> 01:55.500
把这个效果完成

01:55.500 --> 01:57.500
当然在完成的过程中呢

01:57.500 --> 01:59.500
你不能说我一听老师的讲

01:59.500 --> 02:01.500
听了三天的课

02:01.500 --> 02:02.500
那么我的程序是思维

02:02.500 --> 02:04.500
然后突飞猛进

02:04.500 --> 02:05.500
以后那就不需要老师讲了

02:05.500 --> 02:08.500
我就可以自己能够把这些效果实现了

02:08.500 --> 02:10.500
不太现实

02:10.500 --> 02:12.500
因为程序思维的培养呢

02:12.500 --> 02:14.500
不是一朝一夕的事情

02:14.500 --> 02:16.500
我们需要一个过程

02:16.500 --> 02:18.500
当然也不是说你一定要一步到位

02:18.500 --> 02:20.500
成为天下无敌才能找工作

02:20.500 --> 02:21.500
那也不是这个意思啊

02:21.500 --> 02:23.500
你有一定的程序思维过后呢

02:23.500 --> 02:25.500
其实就可以找工作了

02:25.500 --> 02:28.500
这个世界上也不是全部都是大省

02:28.500 --> 02:30.500
所以大家也不用太过于担心

02:30.500 --> 02:33.500
你这节课需要做的一切的事情

02:33.500 --> 02:35.500
就是按照老师的要求

02:35.500 --> 02:37.500
把老师给力规定的作业

02:37.500 --> 02:39.500
一步一步完成就行了

02:39.500 --> 02:41.500
在整个视频的讲解过程中呢

02:41.500 --> 02:42.500
我会在适当的时候呢

02:42.500 --> 02:44.500
让你们去暂停

02:44.500 --> 02:45.500
暂停视频

02:45.500 --> 02:46.500
然后给你规定一个任务

02:46.500 --> 02:47.500
你去把它完成

02:47.500 --> 02:48.500
就OK了

02:48.500 --> 02:49.500
按照老师的节奏走

02:49.500 --> 02:50.500
我们这节课听完了

02:50.500 --> 02:51.500
很多地方呢

02:51.500 --> 02:52.500
你可能觉得

02:52.500 --> 02:54.500
老师为什么要去这样写CSS

02:54.500 --> 02:55.500
老师为什么要去这样写

02:55.500 --> 02:57.500
划分这个函数

02:57.500 --> 02:58.500
可能不是

02:58.500 --> 03:00.500
特别的理解

03:00.500 --> 03:02.500
而且呢也会觉得

03:02.500 --> 03:04.500
我如果说拖累了老师

03:04.500 --> 03:06.500
我是完全想不到用这种方式去做的

03:06.500 --> 03:08.500
这些东西啊

03:08.500 --> 03:10.500
都是非常非常正常的

03:10.500 --> 03:12.500
因为你们是初学者嘛

03:12.500 --> 03:14.500
所以说需要一个过程的训练

03:14.500 --> 03:15.500
慢慢来嘛

03:15.500 --> 03:16.500
你只要能够这节课

03:16.500 --> 03:18.500
能够听懂老师的讲的内容

03:18.500 --> 03:20.500
并且能够按照老师的要求

03:20.500 --> 03:22.500
把东西写出来就OK

03:22.500 --> 03:24.500
好我们一步步来啊

03:24.500 --> 03:25.500
然后呢这里呢

03:25.500 --> 03:27.500
大家可以拿到的是

03:27.500 --> 03:28.500
两个文念夹

03:28.500 --> 03:29.500
一个是效果

03:29.500 --> 03:30.500
这个没什么好说的

03:30.500 --> 03:31.500
一个是素材

03:31.500 --> 03:32.500
你们需要做的事情呢

03:32.500 --> 03:33.500
就是打开这个素材文念夹

03:33.500 --> 03:35.500
然后呢在里边编写代码

03:35.500 --> 03:37.500
那我这里呢就直接复制一个啊

03:37.500 --> 03:39.500
不复制的话

03:39.500 --> 03:40.500
那我给你的东西呢

03:40.500 --> 03:41.500
就没有这个碰牌素材了

03:42.500 --> 03:44.500
把它写成课堂代码

03:45.500 --> 03:47.500
好用VS课的去打开它啊

03:49.500 --> 03:50.500
打开之后呢

03:50.500 --> 03:51.500
我们做的顺序啊

03:51.500 --> 03:52.500
实现整个功能的顺序呢

03:52.500 --> 03:54.500
还是老样子

03:54.500 --> 03:55.500
先写ATML

03:55.500 --> 03:56.500
然后再写CSS

03:56.500 --> 03:57.500
再写GS

03:57.500 --> 03:59.500
首先我们看一下啊

03:59.500 --> 04:00.500
我们的ATML里边呢

04:00.500 --> 04:01.500
有是个空的

04:01.500 --> 04:02.500
啥都没有

04:02.500 --> 04:03.500
然后里边引用了一个CSS

04:03.500 --> 04:05.500
看一下CSS空的

04:05.500 --> 04:06.500
没有

04:06.500 --> 04:07.500
然后呢引用了一个GS

04:07.500 --> 04:09.500
GS呢里边有一个函数

04:09.500 --> 04:10.500
这个函数啥意思

04:10.500 --> 04:11.500
一边写的是啥

04:11.500 --> 04:12.500
我都胆子给你们看了

04:12.500 --> 04:13.500
无所谓

04:13.500 --> 04:14.500
我们一会儿会给大家讲

04:15.500 --> 04:16.500
接下来呢

04:16.500 --> 04:17.500
我们进入到ATML页面

04:17.500 --> 04:19.500
然后来书写这个ATML

04:19.500 --> 04:20.500
接下来呢

04:20.500 --> 04:21.500
大家请跟随老师啊

04:21.500 --> 04:23.500
把这个效果打开

04:24.500 --> 04:25.500
这是你们要实现的效果

04:25.500 --> 04:26.500
然后分一个屏

04:26.500 --> 04:27.500
把这个效果呢

04:27.500 --> 04:28.500
放到右边

04:29.500 --> 04:31.500
然后呢这个VS课的放左边

04:31.500 --> 04:32.500
这样子分屏的

04:32.500 --> 04:33.500
便于查看

04:33.500 --> 04:34.500
好分成一个屏啊

04:34.500 --> 04:35.500
然后呢

04:35.500 --> 04:37.500
我们把我们的ATML运行起来

04:37.500 --> 04:38.500
用这个never server

04:39.500 --> 04:40.500
打开它

04:40.500 --> 04:41.500
你看是不是运行起来

04:41.500 --> 04:42.500
里边啥都没有

04:43.500 --> 04:44.500
好 第一步

04:44.500 --> 04:46.500
完成ATML

04:47.500 --> 04:49.500
那么我们来观察一下这个页面啊

04:49.500 --> 04:51.500
这个页面有三个下达列表

04:51.500 --> 04:52.500
那么毫无疑问

04:52.500 --> 04:54.500
我们整个页面中呢

04:54.500 --> 04:55.500
肯定写ATML的时候呢

04:55.500 --> 04:56.500
肯定要写三个

04:56.500 --> 04:58.500
但是呢你会发现

04:58.500 --> 05:00.500
这三个下达列表啊

05:00.500 --> 05:02.500
它样子都差不多

05:02.500 --> 05:03.500
你发现没

05:03.500 --> 05:04.500
是不是差不多

05:04.500 --> 05:05.500
这个玩意有啥区别呢

05:05.500 --> 05:07.500
对呀 只有内容上的有区别

05:07.500 --> 05:09.500
其他地方没有什么区别

05:09.500 --> 05:10.500
所以说呢

05:10.500 --> 05:12.500
我们其实只需要写出一个

05:12.500 --> 05:13.500
一会儿复制粘贴

05:13.500 --> 05:14.500
就完事了

05:14.500 --> 05:15.500
对不对

05:15.500 --> 05:16.500
因此呢我们这里呢

05:16.500 --> 05:18.500
第一个作业来了

05:18.500 --> 05:20.500
需要大家呢

05:20.500 --> 05:21.500
根据老师的要求

05:21.500 --> 05:25.500
完成一个下达列表的ATML代码

05:25.500 --> 05:26.500
那么要求是什么呢

05:26.500 --> 05:27.500
在这

05:28.500 --> 05:29.500
这里有一个文件

05:29.500 --> 05:30.500
叫做ATML结构

05:30.500 --> 05:32.500
你们那边打开了

05:32.500 --> 05:34.500
有可能是张图片啊

05:34.500 --> 05:35.500
但是呢我这边打开了

05:35.500 --> 05:36.500
是一个设计工具

05:36.500 --> 05:37.500
这一块呢

05:37.500 --> 05:39.500
大家可以去安装一下

05:39.500 --> 05:40.500
这个vscode里边的一个插线

05:40.500 --> 05:42.500
叫做桌io

05:43.500 --> 05:44.500
就这个玩意

05:44.500 --> 05:45.500
安装一下啊

05:45.500 --> 05:46.500
安装了之后呢

05:46.500 --> 05:48.500
大家就可以打开这个文件了

05:48.500 --> 05:51.500
我们点击这个ATML结构

05:51.500 --> 05:52.500
打开之后呢

05:52.500 --> 05:54.500
大家看这张图片啊

05:55.500 --> 05:57.500
已经写的非常明白了

05:57.500 --> 05:58.500
这个玩意

05:58.500 --> 05:59.500
就是一个上面的一个下达列表

05:59.500 --> 06:00.500
对吧

06:00.500 --> 06:01.500
选择框

06:01.500 --> 06:02.500
然后呢

06:02.500 --> 06:03.500
它是一个DIV内容式为title

06:03.500 --> 06:04.500
它里边包含两个部分

06:04.500 --> 06:06.500
一个是实验文字

06:06.500 --> 06:07.500
一个是iconfund

06:07.500 --> 06:08.500
这是不是一个字体图标

06:08.500 --> 06:09.500
对吧

06:09.500 --> 06:11.500
一个小三角的字体图标

06:11.500 --> 06:13.500
然后下边的是一个ULNI

06:13.500 --> 06:15.500
然后最外层的

06:15.500 --> 06:17.500
用一个容器把它包起来

06:17.500 --> 06:18.500
好

06:18.500 --> 06:19.500
大家先不用管那么多

06:19.500 --> 06:20.500
理解这个结构

06:20.500 --> 06:21.500
然后呢

06:21.500 --> 06:23.500
用ATML大码把它实现

06:23.500 --> 06:24.500
暂停视频啊

06:26.500 --> 06:27.500
好了没

06:27.500 --> 06:29.500
好那我给大家实现一遍啊

06:30.500 --> 06:32.500
我们这里

06:32.500 --> 06:33.500
分个屏

06:35.500 --> 06:37.810
看着啊

06:37.810 --> 06:38.810
弄一下

06:39.810 --> 06:40.810
OK

06:40.810 --> 06:42.810
首先外面一个DIV

06:42.810 --> 06:43.810
就是最外层

06:43.810 --> 06:44.810
一个内容式snag

06:45.810 --> 06:46.810
这个写出来了吗

06:46.810 --> 06:48.810
然后里边是个两个部分

06:48.810 --> 06:49.810
一个部分是title

06:49.810 --> 06:51.810
标题DIVtitle

06:51.810 --> 06:52.810
标题

06:52.810 --> 06:54.810
标题里边分成两个部分

06:54.810 --> 06:55.810
一个span

06:55.810 --> 06:57.810
里边请选择

06:57.810 --> 06:59.810
省份城市区域啊无所谓

06:59.810 --> 07:00.810
请选择随便

07:00.810 --> 07:01.810
随便选择

07:01.810 --> 07:03.810
因为这些文字啊

07:03.810 --> 07:04.810
都会用界是把它改过的

07:04.810 --> 07:05.810
所以这里一块呢

07:05.810 --> 07:06.810
现在先不管

07:06.810 --> 07:07.810
然后里边另外一个呢

07:07.810 --> 07:08.810
就是icon放置

07:08.810 --> 07:09.810
是一个字体图标

07:09.810 --> 07:11.810
那么这个字体图标呢

07:11.810 --> 07:12.810
我们需要到哪里

07:12.810 --> 07:14.810
就到icon放置上面去

07:14.810 --> 07:16.810
找一找字体图标

07:16.810 --> 07:17.810
对不对

07:17.810 --> 07:19.810
好到icon放置里边呢

07:19.810 --> 07:21.810
我们去建立一个项目吧

07:21.810 --> 07:22.810
我这里其实已经有了啊

07:22.810 --> 07:23.810
你们可以在这里去

07:23.810 --> 07:24.810
新建一个项目

07:24.810 --> 07:25.810
然后呢在图标库里边

07:25.810 --> 07:26.810
找一个

07:27.810 --> 07:28.810
箭头

07:28.810 --> 07:29.810
我这收的就是兼箭

07:29.810 --> 07:31.810
那总之你去收一下吧

07:31.810 --> 07:32.810
或者叫小箭头

07:33.810 --> 07:34.810
应该有

07:34.810 --> 07:35.810
你们去找一个

07:35.810 --> 07:36.810
好找了过后呢

07:36.810 --> 07:37.810
就把个箭头呢

07:37.810 --> 07:38.810
夹到哪呢

07:38.810 --> 07:39.810
夹到各五车

07:39.810 --> 07:41.810
各五车里边添加字项目

07:41.810 --> 07:43.810
添加到你的项目里边就行了

07:43.810 --> 07:44.810
好那现在呢

07:44.810 --> 07:45.810
咱们回到这个项目里边去

07:45.810 --> 07:46.810
项目这一块呢

07:46.810 --> 07:48.810
他会帮你生成一个CSS

07:48.810 --> 07:50.810
我们只需要把这个CSS复制

07:50.810 --> 07:52.810
粘贴到我们的工程里边

07:56.530 --> 07:58.530
最前面要写上那个协议

07:58.530 --> 07:59.530
ATV

08:00.530 --> 08:01.530
好了我们把CSS

08:01.530 --> 08:02.530
引用过来了

08:02.530 --> 08:03.530
那么接下来

08:03.530 --> 08:06.530
如何来找到他归印的字体图标呢

08:06.530 --> 08:07.530
这一块我们复制一下这里的

08:07.530 --> 08:09.530
图标的那样式

08:09.530 --> 08:10.530
叫做iconIrowUp

08:10.530 --> 08:11.530
无所谓吧

08:11.530 --> 08:12.530
他叫什么无所谓

08:12.530 --> 08:14.530
然后我们这里写个I元数

08:14.530 --> 08:16.530
其实用什么元数都无所谓的

08:16.530 --> 08:17.530
只不过习惯上的图标

08:17.530 --> 08:19.530
我们用I元数

08:19.530 --> 08:21.530
首先公共那样式叫iconFont

08:21.530 --> 08:23.530
这是这个CSS里边给你提供的

08:23.530 --> 08:24.530
然后呢另外一个那样式

08:24.530 --> 08:25.530
刚才复制过来的

08:25.530 --> 08:26.530
就是他

08:26.530 --> 08:27.530
然后Type键

08:28.530 --> 08:29.530
好咱们来看一下

08:29.530 --> 08:30.530
我们的页面

08:30.530 --> 08:32.530
看一下是不是能够达到

08:32.530 --> 08:33.530
我们想要的效果呢

08:33.530 --> 08:34.530
你看是不是有了

08:34.530 --> 08:35.530
对吧图标有了

08:36.530 --> 08:38.530
接着我们继续按照这个结构来写

08:38.530 --> 08:40.530
你看上面的DIV数写完了

08:41.530 --> 08:42.530
对不对写完了

08:42.530 --> 08:44.530
那么接下来就是下面的Ul

08:44.530 --> 08:46.530
Ul一个那样式叫Options

08:46.530 --> 08:48.530
里面有个Li

08:48.530 --> 08:50.530
Li我就随便生成一些吧

08:50.530 --> 08:51.530
生成30个

08:52.530 --> 08:54.530
然后里边内容的话

08:54.530 --> 08:56.530
我就随便来一个选项

08:57.530 --> 08:58.530
到了

08:58.530 --> 09:00.530
就生成这么一些Li

09:00.530 --> 09:01.530
看一下页面

09:02.530 --> 09:05.160
好就出来了

09:05.160 --> 09:07.160
我们目前的ATM结构呢就写到这了

09:07.160 --> 09:08.160
所以很简单

09:08.160 --> 09:10.160
ATM结构还是比较简单的

09:10.160 --> 09:11.160
一会有三个

09:11.160 --> 09:12.160
有三个的话

09:12.160 --> 09:14.160
无非我就这里复制三次

09:14.160 --> 09:15.160
对吧

09:15.160 --> 09:16.160
我们随便来吧

09:16.160 --> 09:17.160
复制个三次

09:17.160 --> 09:18.160
一次

09:18.160 --> 09:19.160
也是一次

09:19.160 --> 09:20.160
两次

09:20.160 --> 09:21.160
一共就三次了

09:21.160 --> 09:22.160
你看在下面

09:23.160 --> 09:24.160
对吧

09:24.160 --> 09:25.160
接下来呢

09:25.160 --> 09:26.160
下一步

09:26.160 --> 09:27.160
就是写这个

09:27.160 --> 09:28.160
CSS

09:30.160 --> 09:31.160
到CSS

09:33.160 --> 09:35.160
CSS里面就涉及到布局了

09:35.160 --> 09:36.160
我们这里呢

09:36.160 --> 09:38.160
首先来一个整体的分析

09:38.160 --> 09:40.160
就是我们大概要布局成

09:40.160 --> 09:41.160
一个什么样子

09:42.160 --> 09:43.160
我们这里呢

09:43.160 --> 09:45.160
首先看一下这个结构啊

09:45.160 --> 09:46.160
刚才我们的结构呢

09:46.160 --> 09:47.160
其实已经给大家看了

09:47.160 --> 09:48.160
就在这

09:51.160 --> 09:52.160
放大一点

09:52.160 --> 09:55.160
这就是我们目前的一个结构

09:55.160 --> 09:56.160
稍微说小一点

09:56.160 --> 09:57.160
适应窗口

09:58.160 --> 10:00.160
这个结构里面呢

10:00.160 --> 10:01.160
我们的布局方式

10:01.160 --> 10:02.160
首先你要想到的

10:02.160 --> 10:03.160
有一几个点啊

10:03.160 --> 10:05.160
你必须要就能理解

10:05.160 --> 10:08.160
就是整个这一块

10:08.160 --> 10:10.160
整个这个容器

10:10.160 --> 10:13.160
它得是一个inline block

10:14.160 --> 10:16.160
就是航快和

10:16.160 --> 10:17.160
为啥

10:17.160 --> 10:18.160
你看我什么思考的

10:18.160 --> 10:19.160
当然他不是说

10:19.160 --> 10:20.160
一定得这样做

10:20.160 --> 10:22.160
但是我自然有我这样做的道理

10:22.160 --> 10:24.160
你们听一听吧

10:24.160 --> 10:26.160
为什么我要把它变成一个航快和呢

10:26.160 --> 10:28.160
因为它是一个下达列表

10:28.160 --> 10:30.160
我是在模拟谁

10:30.160 --> 10:32.160
我们之所以没有用官方的

10:32.160 --> 10:33.160
就是浏览器里面的

10:33.160 --> 10:34.160
那个snake成元素

10:34.160 --> 10:36.160
虽然snake成元素太丑了

10:36.160 --> 10:38.160
但是功能上是不跟它一样的

10:38.160 --> 10:40.160
而它是一个什么元素

10:40.160 --> 10:42.160
它不就是一个航快和元素吗

10:42.160 --> 10:43.160
对吧

10:43.160 --> 10:44.160
对不对

10:44.160 --> 10:45.160
所以说呢我们

10:45.160 --> 10:47.160
这一块干出去模拟它

10:47.160 --> 10:49.160
那么我也把它做成一个航快和

10:49.160 --> 10:50.160
我是这么思考的

10:50.160 --> 10:51.160
当然你不说一定要这样去做

10:51.160 --> 10:52.160
你可以用浮动

10:52.160 --> 10:54.160
把它归为一航

10:54.160 --> 10:55.160
但是我这里呢

10:55.160 --> 10:56.160
把它做成航快和

10:56.160 --> 10:57.160
这是我的一个思路

10:57.160 --> 10:59.160
另外它里边东西呢

11:00.160 --> 11:01.160
这个玩意

11:01.160 --> 11:03.160
我直接给你们看吧

11:03.160 --> 11:04.160
看这个布局结构

11:04.160 --> 11:09.390
适应窗口

11:12.390 --> 11:14.390
这个布局结构

11:15.390 --> 11:16.390
为什么还是这样子呢

11:16.390 --> 11:17.390
我没改过吗

11:17.390 --> 11:18.390
没关系

11:18.390 --> 11:20.390
那我这里说一下吧

11:20.390 --> 11:21.390
这个布局结构呢

11:21.390 --> 11:23.390
我这里把它手动改一下吧

11:23.390 --> 11:24.390
这个DIV呢

11:24.390 --> 11:28.150
它是一个航快和

11:28.150 --> 11:29.150
然后这里边的

11:29.150 --> 11:31.150
实变和i-con方式没什么好说的

11:31.150 --> 11:33.150
这些样式细节呢

11:33.150 --> 11:34.150
我先暂时不考虑

11:34.150 --> 11:36.150
然后这个DIV呢

11:36.150 --> 11:39.150
我打算把它做成一个弹性和

11:42.150 --> 11:44.150
我打算把它做成一个弹性和

11:44.150 --> 11:46.150
为什么我要把它做成

11:46.150 --> 11:48.150
一个弹性和呢

11:48.150 --> 11:51.150
是因为我看到这里边有两个元素

11:51.150 --> 11:52.150
一个是变

11:52.150 --> 11:53.150
一个是i元素

11:53.150 --> 11:54.150
然后一个靠左

11:54.150 --> 11:55.150
一个靠右

11:55.150 --> 11:57.150
那我们以前可以用浮动

11:57.150 --> 11:58.150
左浮动右浮动

11:58.150 --> 11:59.150
那么现在用弹性和

11:59.150 --> 12:00.150
是不是可以非常方便的

12:00.150 --> 12:03.150
用一个justify content

12:03.150 --> 12:07.150
justify content

12:07.150 --> 12:08.150
用什么

12:08.150 --> 12:11.150
space between对吧

12:11.150 --> 12:12.150
左边靠左

12:12.150 --> 12:13.150
右边靠右

12:13.150 --> 12:14.150
分散布局

12:14.150 --> 12:15.150
那么这样子是不是非常方便

12:15.150 --> 12:16.150
所以我这里呢

12:16.150 --> 12:17.150
打算把它做成弹快和

12:17.150 --> 12:18.150
我这里说一下

12:18.150 --> 12:21.150
央视的做法特别特别多

12:21.150 --> 12:22.150
它不是说

12:22.150 --> 12:23.150
只有唯一的一种协法

12:23.150 --> 12:24.150
那协法千奇百怪

12:24.150 --> 12:26.150
每个人写出来的代码都可以

12:26.150 --> 12:28.150
做到不一样的

12:28.150 --> 12:29.150
没有两个人写出来的代码

12:29.150 --> 12:30.150
是完全相同的

12:30.150 --> 12:31.150
所以这一块呢

12:31.150 --> 12:32.150
不用太过一纠结

12:32.150 --> 12:33.150
听我的诗路就行了

12:33.150 --> 12:35.150
我打算把它做成一个弹性和

12:35.150 --> 12:36.150
然后呢

12:36.150 --> 12:37.150
这里边呢

12:37.150 --> 12:38.150
有一个UL元素

12:38.150 --> 12:42.530
我打算把它做成一个网格布局

12:42.530 --> 12:44.530
网格布局

12:44.530 --> 12:46.530
为什么我要做成一个网格布局呢

12:46.530 --> 12:47.530
因为我发现

12:47.530 --> 12:49.530
这里边的东西呢就特别有意思

12:49.530 --> 12:51.530
它的排列方式呢

12:51.530 --> 12:52.530
是这样排列的

12:52.530 --> 12:53.530
第一项

12:53.530 --> 12:54.530
第二项

12:54.530 --> 12:55.530
第三项

12:55.530 --> 12:56.530
第四项

12:56.530 --> 12:57.530
第五项

12:57.530 --> 12:58.530
第六项

12:58.530 --> 12:59.530
你看这个逻辑顺序

12:59.530 --> 13:00.530
也是这样的排列的嘛

13:00.530 --> 13:01.530
你看这边

13:01.530 --> 13:03.530
那么到时候我用那个Grid布局的时候呢

13:03.530 --> 13:05.530
非常方便的就设置一下

13:05.530 --> 13:06.530
排列方向就完事了

13:06.530 --> 13:08.530
用那个网格布局

13:08.530 --> 13:09.530
比较方便

13:09.530 --> 13:10.530
仅此而已

13:10.530 --> 13:11.530
当然你可以用其他的布局方式

13:11.530 --> 13:12.530
只要能够布出来

13:12.530 --> 13:13.530
这个样子就可以

13:14.530 --> 13:15.530
另外呢

13:15.530 --> 13:16.530
这一块呢

13:16.530 --> 13:18.530
我还会给他设置一个

13:18.530 --> 13:20.530
最小宽度

13:21.530 --> 13:22.530
没有

13:22.530 --> 13:23.530
应该是

13:23.530 --> 13:25.530
应该是最大高度

13:26.530 --> 13:27.530
为什么我会给他

13:27.530 --> 13:29.530
设置一个最大高度呢

13:29.530 --> 13:30.530
因为你看啊

13:30.530 --> 13:31.530
他的内容呢

13:31.530 --> 13:33.530
他有些多有些少

13:33.530 --> 13:34.530
你看这个下落列表

13:34.530 --> 13:36.530
目前就比较多对不对

13:36.530 --> 13:37.530
那么你再多的话

13:37.530 --> 13:39.530
你不能超过一个最大高度

13:39.530 --> 13:40.530
比方说最大高度

13:40.530 --> 13:41.530
我给他设置一个300

13:41.530 --> 13:42.530
假设啊

13:42.530 --> 13:43.530
你超过300的话

13:43.530 --> 13:44.530
你就换行

13:44.530 --> 13:45.530
就换一列

13:45.530 --> 13:46.530
这里也超过300

13:46.530 --> 13:47.530
又换一列

13:47.530 --> 13:48.530
我就这么个意思

13:49.530 --> 13:51.530
如果说你不设置最大高度的话

13:51.530 --> 13:53.530
那么他就会一直

13:53.530 --> 13:54.530
往下排了

13:54.530 --> 13:55.530
对不对

13:55.530 --> 13:56.530
另外呢

13:56.530 --> 13:57.530
因为我设置的是最大高度

13:57.530 --> 13:58.530
所以说

13:58.530 --> 14:00.530
他内容比较少的时候

14:00.530 --> 14:01.530
我找一个内容比较少的

14:01.530 --> 14:02.530
你看这个北京市

14:02.530 --> 14:03.530
对吧

14:03.530 --> 14:05.530
那么他高度就自然摊塌下来了

14:05.530 --> 14:07.530
所以说我用最大高度来控制

14:07.530 --> 14:08.530
明儿的意思吧

14:09.530 --> 14:10.530
另外呢

14:10.530 --> 14:11.530
这一块区域呢

14:11.530 --> 14:13.530
我还会把它做成一个

14:13.530 --> 14:14.530
绝对定位

14:15.530 --> 14:19.160
为什么我会把它做成绝

14:19.160 --> 14:20.160
大家先不要写代码

14:20.160 --> 14:21.160
先不着急

14:21.160 --> 14:22.160
听我讲

14:22.160 --> 14:23.160
为什么我要把它做成一个绝对定位呢

14:24.160 --> 14:25.160
你们想一想

14:25.160 --> 14:27.160
瞎拉列表这一块

14:27.160 --> 14:28.160
假设啊

14:28.160 --> 14:29.160
这个区域

14:31.160 --> 14:33.160
这个区域下面还有文字

14:33.160 --> 14:35.160
比方一个P元数一个DIV

14:35.160 --> 14:36.160
还有文字啊

14:36.160 --> 14:37.160
就画了这个区域

14:37.160 --> 14:38.160
背后还有文字

14:38.160 --> 14:40.160
那么我们现在展开这个区域

14:40.160 --> 14:41.160
是覆盖文字呢

14:41.160 --> 14:43.160
还是把文字往下集呢

14:44.160 --> 14:45.160
大家平时上过网

14:45.160 --> 14:47.160
没吃过猪肉

14:47.160 --> 14:48.160
至少见过猪好嘛

14:48.160 --> 14:49.160
对不对

14:49.160 --> 14:50.160
那肯定是覆盖嘛

14:50.160 --> 14:51.160
对不对

14:51.160 --> 14:52.160
那么因此呢

14:52.160 --> 14:53.160
他的位置呢

14:53.160 --> 14:54.160
不能影响到其他盒子的布局

14:54.160 --> 14:56.160
因此我会把它做一绝对定位

14:56.160 --> 14:58.160
这些都是一年的啊

14:58.160 --> 15:00.160
好那么这是这一块

15:00.160 --> 15:01.160
然后还有一点啊

15:01.160 --> 15:03.160
上面那个弹性盒呢

15:03.160 --> 15:05.160
我会给他一个最小宽度

15:07.540 --> 15:09.540
为什么我要给他一个最小宽度呢

15:09.540 --> 15:10.540
不然有一些地方呢

15:10.540 --> 15:11.540
就不要这个零下

15:11.540 --> 15:13.540
这个两个字就特别短

15:13.540 --> 15:15.540
那么就会让这个

15:15.540 --> 15:16.540
下拉列表上面呢

15:16.540 --> 15:17.540
就说成一坨

15:17.540 --> 15:18.540
说的很短

15:18.540 --> 15:20.540
如果说你觉得这样ok

15:20.540 --> 15:21.540
设计师也觉得这样ok

15:21.540 --> 15:22.540
那就ok

15:22.540 --> 15:23.540
但是呢

15:24.540 --> 15:25.540
其实不好看

15:25.540 --> 15:26.540
我们给他一个最小宽度

15:26.540 --> 15:27.540
至少的没有多宽

15:27.540 --> 15:28.540
你可以把它撑开

15:28.540 --> 15:30.540
但是呢最少的有多宽

15:30.540 --> 15:31.540
你看吧

15:31.540 --> 15:32.540
我把它撑开试一下

15:32.540 --> 15:33.540
到四川省

15:33.540 --> 15:34.540
然后呢这边

15:34.540 --> 15:35.540
你看是不是撑开了

15:35.540 --> 15:36.540
对不对

15:36.540 --> 15:39.540
这就是这么一块失路啊

15:39.540 --> 15:41.540
那么有了这个失路之后呢

15:41.540 --> 15:43.540
我们就开始来进行

15:43.540 --> 15:45.540
我们的CS大码给他编写

15:45.540 --> 15:48.540
我把这个文件重新复制一下

15:49.540 --> 15:51.540
免得以后给你们的一个素材

15:51.540 --> 15:52.540
以后我下来复制吧

15:52.540 --> 15:53.540
现在不管

15:53.540 --> 15:55.540
现在我们进入到CSS啊

15:56.540 --> 15:58.540
开始来写这个布局

15:59.540 --> 16:00.540
好

16:00.540 --> 16:01.540
首先第一步

16:01.540 --> 16:03.540
我把整个容器

16:03.540 --> 16:05.540
是不是整个容器

16:06.540 --> 16:07.540
对吧

16:07.540 --> 16:08.540
整个DIV

16:08.540 --> 16:09.540
把它变成一个什么呢

16:09.540 --> 16:10.540
Display

16:10.540 --> 16:11.540
Innenblock

16:12.540 --> 16:14.540
把它变成一个航快活

16:14.540 --> 16:16.540
让它们排列在一航

16:16.540 --> 16:17.540
当然我也可以

16:17.540 --> 16:18.540
稍微的修饰一下啊

16:18.540 --> 16:20.540
给它一个什么margin啊

16:20.540 --> 16:21.540
对吧

16:21.540 --> 16:22.540
这些都是小的细节了

16:22.540 --> 16:23.540
可以修饰一下

16:23.540 --> 16:24.540
都不到几下

16:24.540 --> 16:26.540
然后我这里的比方

16:26.540 --> 16:29.540
说给它一个0.5px

16:29.540 --> 16:30.540
左右5px

16:30.540 --> 16:31.540
差不多行

16:32.540 --> 16:33.540
好

16:33.540 --> 16:34.540
这是第一个

16:34.540 --> 16:35.540
整个这个区域

16:35.540 --> 16:36.540
你看整个是个航快活

16:36.540 --> 16:38.540
然后里边这一块呢

16:38.540 --> 16:39.540
我再布局下局

16:39.540 --> 16:41.540
这一块是什么那样式啊

16:42.540 --> 16:43.540
开拓对吧

16:43.540 --> 16:44.540
你们都写过的

16:44.540 --> 16:45.540
开拓

16:45.540 --> 16:46.540
标题

16:46.540 --> 16:47.540
标题的话

16:47.540 --> 16:48.540
我给它一个最小宽度

16:48.540 --> 16:50.540
免得它太急了

16:50.540 --> 16:51.540
最小宽度

16:51.540 --> 16:52.540
我给它设置为150

16:52.540 --> 16:54.540
这个东西呢

16:54.540 --> 16:55.540
需要根据设计稿来定

16:55.540 --> 16:56.540
我这里没有设计稿

16:56.540 --> 16:57.540
就随意了

16:57.540 --> 16:58.540
给它一个150

16:58.540 --> 17:00.540
为了让你们看得清楚呢

17:00.540 --> 17:02.540
我这里给它设置一个背景颜色吧

17:03.540 --> 17:05.540
light blue

17:06.540 --> 17:07.540
说出来了

17:07.540 --> 17:08.540
然后呢

17:08.540 --> 17:09.540
它这一块呢

17:09.540 --> 17:10.540
有一个固定的高度

17:10.540 --> 17:11.540
因为这个固定的高度呢

17:11.540 --> 17:12.540
我就没有写的那么细了

17:12.540 --> 17:14.540
你看一下这个样式吧

17:14.540 --> 17:16.540
这一块高度是不是一定是固定的

17:16.540 --> 17:17.540
对不对

17:17.540 --> 17:18.540
那肯定一个固定的高度

17:18.540 --> 17:19.540
那固定的高度呢

17:19.540 --> 17:20.540
我这里呢

17:20.540 --> 17:21.540
我给它一个试试个相处

17:22.540 --> 17:23.540
自然呢

17:23.540 --> 17:24.540
我们要把这个行高

17:24.540 --> 17:25.540
也设置为试试

17:28.540 --> 17:29.540
可以

17:29.540 --> 17:30.540
当然可以对不对

17:30.540 --> 17:31.540
然后呢

17:31.540 --> 17:33.540
它会你左边也好

17:33.540 --> 17:34.540
你右边也好

17:34.540 --> 17:35.540
都有一定的距离

17:35.540 --> 17:36.540
就这一块

17:40.980 --> 17:41.980
这一块

17:41.980 --> 17:42.980
你看

17:42.980 --> 17:43.980
左边

17:43.980 --> 17:44.980
右边是一块距离

17:44.980 --> 17:45.980
那么这个距离可以用什么

17:45.980 --> 17:46.980
可以用偏顶

17:46.980 --> 17:47.980
就非常合适

17:47.980 --> 17:48.980
那么我这里呢

17:48.980 --> 17:49.980
就使用偏顶

17:50.980 --> 17:51.980
偏顶

17:51.980 --> 17:52.980
上下的为0

17:52.980 --> 17:54.980
左右的为一个试试

17:55.980 --> 17:56.980
差不多

17:56.980 --> 17:57.980
但是一旦设置了

17:57.980 --> 17:58.980
这个偏顶过后

17:58.980 --> 18:00.980
整个盒子是不是变得很长了

18:01.980 --> 18:02.980
为什么呢

18:02.980 --> 18:03.980
因为目前的你看

18:03.980 --> 18:05.980
我们设置了左右的偏顶

18:06.980 --> 18:07.980
那么整个盒子

18:07.980 --> 18:09.980
整个盒子可见区

18:09.980 --> 18:10.980
那就是这个偏顶

18:11.980 --> 18:12.980
左右的偏顶

18:12.980 --> 18:13.980
然后呢

18:13.980 --> 18:14.980
加上

18:14.980 --> 18:16.980
中间的这个

18:17.980 --> 18:19.980
content的宽度

18:19.980 --> 18:20.980
对吧

18:20.980 --> 18:21.980
宽度的宽度是多少

18:21.980 --> 18:22.980
是不是150

18:22.980 --> 18:23.980
最少150

18:24.980 --> 18:25.980
那么相当于

18:25.980 --> 18:26.980
是不是整个盒子

18:26.980 --> 18:27.980
就变得很宽了

18:27.980 --> 18:28.980
对不对

18:28.980 --> 18:29.980
变多宽了变成

18:31.980 --> 18:33.980
150加上两个实相数

18:33.980 --> 18:34.980
那么我们这里呢

18:34.980 --> 18:35.980
如果说我们的要求

18:35.980 --> 18:36.980
当然这个不一定

18:36.980 --> 18:38.980
这是根据设计搞来

18:38.980 --> 18:39.980
如果说一般来说

18:39.980 --> 18:40.980
我们的要求都是

18:40.980 --> 18:41.980
可见区域

18:42.980 --> 18:43.980
多宽

18:43.980 --> 18:44.980
无论你的偏顶是多少

18:44.980 --> 18:45.980
都无所谓

18:46.980 --> 18:47.980
所以说呢

18:47.980 --> 18:48.980
我们一般来说

18:48.980 --> 18:49.980
会设置一个什么

18:51.980 --> 18:52.980
这样子一来的话

18:52.980 --> 18:53.980
那么整个盒子的宽度

18:53.980 --> 18:54.980
就是150

18:55.980 --> 18:56.980
你加上偏顶

18:56.980 --> 18:57.980
加上内容

18:57.980 --> 18:58.980
加上边框都是150

18:59.980 --> 19:00.980
这样子的便于计算

19:00.980 --> 19:02.980
这是一种非常常见的做法

19:02.980 --> 19:03.980
甚至呢有一些

19:05.980 --> 19:06.980
有一些公司里边

19:06.980 --> 19:07.980
要求呢

19:07.980 --> 19:08.980
我们整个样式里边

19:08.980 --> 19:09.980
就写个新号

19:09.980 --> 19:10.980
把所有东西

19:10.980 --> 19:11.980
全部变成

19:11.980 --> 19:12.980
那我们这里

19:12.980 --> 19:13.980
可以用这种类似的做法

19:14.980 --> 19:16.980
那么这样子写了之后

19:16.980 --> 19:17.980
我们再继续看

19:18.980 --> 19:19.980
这一块我们刚才分析的

19:19.980 --> 19:21.980
它是一个弹性盒

19:21.980 --> 19:22.980
对不对

19:22.980 --> 19:23.980
我们把它变成弹性盒

19:26.980 --> 19:27.980
变弹性盒过后

19:27.980 --> 19:28.980
左边靠左

19:28.980 --> 19:29.980
右边靠右

19:29.980 --> 19:31.980
那就是justify content

19:31.980 --> 19:32.980
space between

19:33.980 --> 19:34.980
对不对

19:34.980 --> 19:35.980
是左边靠左

19:35.980 --> 19:36.980
右边靠右

19:36.980 --> 19:37.980
那么接下来

19:37.980 --> 19:38.980
我们来简单的

19:38.980 --> 19:39.980
做一些小的操作

19:39.980 --> 19:41.980
小的样式修饰

19:41.980 --> 19:42.980
一个是字体大小

19:42.980 --> 19:43.980
方Size

19:43.980 --> 19:45.980
我们把它设置为14个像素

19:45.980 --> 19:46.980
字体稍微小一点

19:47.980 --> 19:48.980
然后的话

19:48.980 --> 19:49.980
我们字体的颜色

19:49.980 --> 19:51.980
设置为666

19:52.980 --> 19:53.980
把字体的颜色

19:53.980 --> 19:54.980
稍微设置一下

19:54.980 --> 19:55.980
然后给它设置一个边框

20:00.980 --> 20:01.980
一个像素

20:01.980 --> 20:02.980
solid cjc

20:02.980 --> 20:04.980
稍微淡一点的颜色

20:04.980 --> 20:05.980
背景颜色去掉

20:06.980 --> 20:07.980
这个边框是不是出来了

20:08.980 --> 20:09.980
然后我们给它设置

20:09.980 --> 20:10.980
一个圆角边框

20:10.980 --> 20:11.980
这个都学过的

20:12.980 --> 20:13.980
设置个5个像素

20:14.980 --> 20:15.980
边框是不是变圆角了

20:15.980 --> 20:16.980
好接下来

20:16.980 --> 20:17.980
稍微来控制一下

20:17.980 --> 20:18.980
这个箭头

20:18.980 --> 20:19.980
这个箭头是一个字体图标

20:19.980 --> 20:20.980
对不对

20:20.980 --> 20:21.980
我们把它稍微的变小一点

20:21.980 --> 20:22.980
那么字体箭头

20:22.980 --> 20:24.980
这个箭头的图标变小的话

20:24.980 --> 20:25.980
我们是不是可以

20:25.980 --> 20:26.980
用那个

20:26.980 --> 20:27.980
设置字体大小

20:27.980 --> 20:28.980
对吧

20:28.980 --> 20:29.980
单独的去设置一下

20:29.980 --> 20:30.980
它下面的

20:30.980 --> 20:32.980
这个icon放出的字体大小

20:32.980 --> 20:33.980
方Size

20:33.980 --> 20:34.980
十个像素

20:34.980 --> 20:35.980
看一下

20:35.980 --> 20:36.980
差不多

20:36.980 --> 20:37.980
没问题吧

20:37.980 --> 20:38.980
好

20:38.980 --> 20:39.980
那么这一块的区域

20:39.980 --> 20:40.980
差不多了

20:40.980 --> 20:42.980
然后就是我们的鼠标样式

20:42.980 --> 20:43.980
在这个区域的鼠标样式

20:43.980 --> 20:45.980
Cursor把它稍微point

20:45.980 --> 20:46.980
这样子纸上去了

20:46.980 --> 20:47.980
就是一只小手

20:48.980 --> 20:49.980
没啥问题吧

20:49.980 --> 20:50.980
好

20:50.980 --> 20:51.980
那么目前的

20:51.980 --> 20:52.980
请大家暂停视频

20:52.980 --> 20:53.980
把代码的

20:54.980 --> 20:55.980
这个区域

20:55.980 --> 20:57.980
这个箭头这个区域

20:57.980 --> 20:58.980
以及Snegetre

20:58.980 --> 20:59.980
这两个样式

20:59.980 --> 21:00.980
把它写好

21:00.980 --> 21:01.980
我等你

21:02.980 --> 21:03.980
好了没

21:03.980 --> 21:04.980
好

21:04.980 --> 21:05.980
那么这一块搞定了之后

21:05.980 --> 21:06.980
我们接下来

21:06.980 --> 21:07.980
搞定下边这一块区域

21:08.980 --> 21:09.980
好

21:09.980 --> 21:11.980
这个区域是什么那样式呢

21:11.980 --> 21:12.980
是不是这个Options

21:12.980 --> 21:13.980
对不对

21:13.980 --> 21:14.980
好

21:14.980 --> 21:15.980
那么接下来

21:15.980 --> 21:16.980
我们来设置这个Options

21:17.980 --> 21:18.980
好

21:18.980 --> 21:19.980
这个区域它是一个UL元素

21:19.980 --> 21:20.980
所以说它多了很多的

21:20.980 --> 21:21.980
乱七八糟的东西

21:21.980 --> 21:22.980
我们给它设置一个

21:22.980 --> 21:23.980
Martin0

21:23.980 --> 21:25.980
Pendin0

21:25.980 --> 21:27.980
把这些东西给它去掉

21:27.980 --> 21:29.980
然后把这个NesseStyle

21:29.980 --> 21:30.980
设置为那

21:30.980 --> 21:31.980
把前面那个小圆点

21:31.980 --> 21:32.980
给它去掉

21:32.980 --> 21:33.980
好

21:33.980 --> 21:34.980
这样子是不是搞定了

21:34.980 --> 21:35.980
那么接下来

21:35.980 --> 21:36.980
给它设置一个

21:36.980 --> 21:37.980
字体的大小

21:37.980 --> 21:38.980
十二个像素

21:40.980 --> 21:41.980
好

21:41.980 --> 21:42.980
差不多了

21:42.980 --> 21:43.980
对不对

21:43.980 --> 21:44.980
然后整个区域

21:44.980 --> 21:45.980
有一个边框

21:45.980 --> 21:46.980
把边框给它加上

21:46.980 --> 21:48.980
一个像素Solid

21:48.980 --> 21:49.980
CC

21:50.980 --> 21:51.980
边框给它加上

21:51.980 --> 21:52.980
同样道理

21:52.980 --> 21:53.980
它有一个圆角边框

21:53.980 --> 21:54.980
Border Rider

21:54.980 --> 21:55.980
十五个像素的圆角边框

21:55.980 --> 21:56.980
好

21:56.980 --> 21:57.980
所以给它加上了

21:57.980 --> 21:58.980
可以了吧

21:58.980 --> 21:59.980
好

21:59.980 --> 22:00.980
接下来

22:00.980 --> 22:01.980
我们现在就要

22:01.980 --> 22:03.980
对它里边的东西进行布局了

22:03.980 --> 22:04.980
那么它里边的东西

22:05.980 --> 22:06.980
我们刚才分析过了

22:06.980 --> 22:07.980
是不是把它做成一个

22:08.980 --> 22:09.980
它本身是

22:09.980 --> 22:10.980
其他不管

22:10.980 --> 22:12.980
先把它变成一个网格布局

22:12.980 --> 22:13.980
来吧

22:13.980 --> 22:14.980
我们先把网格布局搞定

22:14.980 --> 22:15.980
首先

22:16.980 --> 22:17.980
我们用

22:17.980 --> 22:18.980
我们这样子

22:19.980 --> 22:20.980
在浏览器的控制台地表

22:20.980 --> 22:21.980
我们先写好

22:21.980 --> 22:23.980
把写好了之后再说

22:25.980 --> 22:26.980
要不然

22:26.980 --> 22:27.980
我们先把简单的弄了吧

22:27.980 --> 22:28.980
先把最大高度弄了

22:29.980 --> 22:30.980
最大高度

22:30.980 --> 22:31.980
Max Height

22:31.980 --> 22:32.980
这比较简单的先弄了

22:32.980 --> 22:34.980
三百七十五个像素

22:35.980 --> 22:36.980
或者是

22:37.980 --> 22:38.980
三百

22:39.980 --> 22:40.980
看多少合适

22:40.980 --> 22:41.980
你们自己订

22:41.980 --> 22:42.980
一个最大高度

22:42.980 --> 22:43.980
那么现在目前肯定是超出了

22:43.980 --> 22:44.980
对不对

22:45.980 --> 22:46.980
然后把它自认

22:46.980 --> 22:47.980
变成绝对定位

22:48.980 --> 22:49.980
absolute

22:50.980 --> 22:51.980
目前变成绝对定位

22:51.980 --> 22:52.980
变成绝对定位之后

22:52.980 --> 22:54.980
它有一个现象就是

22:55.980 --> 22:56.980
怎么了

22:56.980 --> 22:57.980
现象就是贪它了

22:58.980 --> 22:59.980
就是贪它了

22:59.980 --> 23:00.980
因为它宽度贪它了

23:00.980 --> 23:01.980
为什么贪它了

23:01.980 --> 23:03.980
因为它的宽度就不再是百分百了

23:03.980 --> 23:04.980
我们这里

23:04.980 --> 23:06.980
干脆给它设置一个最小宽度

23:06.980 --> 23:08.980
最小宽度为百分之百

23:09.980 --> 23:10.980
那么这个宽度一下子

23:10.980 --> 23:11.980
变得很宽

23:11.980 --> 23:12.980
为什么呢

23:12.980 --> 23:13.980
因为这个宽度的百分比

23:13.980 --> 23:14.980
相对于谁的

23:14.980 --> 23:16.980
相对于它的包含容器的

23:16.980 --> 23:18.980
那么这个容器是相对于谁呢

23:18.980 --> 23:20.980
因为它是绝对定位

23:20.980 --> 23:21.980
它就往复元素找

23:21.980 --> 23:22.980
看一下复元素

23:22.980 --> 23:23.980
是不是定位元素

23:23.980 --> 23:24.980
不是

23:24.980 --> 23:25.980
再看复元素

23:25.980 --> 23:26.980
body是不是定位元素

23:26.980 --> 23:27.980
不是

23:27.980 --> 23:28.980
再看atmos是不是

23:28.980 --> 23:29.980
不是

23:29.980 --> 23:30.980
是不是找到四口了

23:30.980 --> 23:31.980
那么它的宽度

23:31.980 --> 23:32.980
目前相当于是

23:32.980 --> 23:33.980
整个网页的宽度

23:34.980 --> 23:35.980
所以说

23:35.980 --> 23:36.980
第一要做的事情就是

23:37.980 --> 23:38.980
把它的复元素

23:38.980 --> 23:39.980
设为相对定位

23:39.980 --> 23:41.980
这是一种非常常见的做法

23:41.980 --> 23:42.980
那么现在

23:42.980 --> 23:43.980
它的宽度相对于

23:43.980 --> 23:45.980
是复元素的宽度了

23:45.980 --> 23:46.980
宽度这一块是不是

23:46.980 --> 23:47.980
最小宽度搞定了

23:48.980 --> 23:49.980
接下来我们继续

23:50.980 --> 23:51.980
我们要做网格布局了

23:51.980 --> 23:52.980
现在

23:52.980 --> 23:53.980
来吧

23:53.980 --> 23:54.980
我们来做一下

23:55.980 --> 23:56.980
首先我们第一步

23:56.980 --> 23:57.980
把它display

23:57.980 --> 23:58.980
设为greed

23:59.980 --> 24:00.980
网格布局

24:01.980 --> 24:02.980
设置好了没

24:02.980 --> 24:03.980
设置好了

24:03.980 --> 24:04.980
其实现在就

24:04.980 --> 24:05.980
看一下

24:05.980 --> 24:06.980
找到它里边的Ul

24:06.980 --> 24:07.980
你看

24:07.980 --> 24:08.980
是不是有个虚线

24:08.980 --> 24:09.980
放大一点

24:10.980 --> 24:15.080
目前你看

24:15.080 --> 24:16.080
是不是有个虚线

24:16.080 --> 24:17.080
网格布局

24:19.080 --> 24:21.080
然后这里边的东西

24:21.080 --> 24:22.080
它目前是

24:22.080 --> 24:23.080
一行一个

24:23.080 --> 24:24.080
一行一个

24:24.080 --> 24:25.080
一行一个

24:25.080 --> 24:26.080
也就是它只有一地

24:26.080 --> 24:27.080
对不对

24:27.080 --> 24:29.080
但我们希望它是多的

24:29.080 --> 24:31.080
那怎么办呢

24:31.080 --> 24:32.080
那如果说

24:32.080 --> 24:33.080
那我们可以利用

24:33.080 --> 24:34.080
网格布局的指示

24:34.080 --> 24:35.080
我们可以设置

24:35.080 --> 24:38.080
设置

24:38.080 --> 24:39.080
比如说

24:39.080 --> 24:40.080
我们可以用repeat

24:40.080 --> 24:41.080
对吧

24:41.080 --> 24:42.080
重复几列

24:42.080 --> 24:43.080
我们比方说

24:43.080 --> 24:44.080
这是三列

24:44.080 --> 24:45.080
每一列的宽度

24:45.080 --> 24:46.080
我们f2

24:46.080 --> 24:47.080
我们可以用这种方式

24:47.080 --> 24:48.080
是不是

24:48.080 --> 24:49.080
能形成三列了

24:49.080 --> 24:50.080
但是这样的

24:50.080 --> 24:51.080
方式下来

24:51.080 --> 24:52.080
结果是什么

24:52.080 --> 24:53.080
它的排列方式是

24:53.080 --> 24:54.080
一

24:54.080 --> 24:55.080
二

24:55.080 --> 24:56.080
三

24:56.080 --> 24:57.080
四

24:57.080 --> 24:58.080
五

24:58.080 --> 24:59.080
六

24:59.080 --> 25:00.080
七 八 九

25:00.080 --> 25:01.080
它是用这种方式排列的

25:01.080 --> 25:02.080
但是你看我们

25:02.080 --> 25:03.080
这边的逻辑

25:03.080 --> 25:04.080
我们是不是不是

25:04.080 --> 25:05.080
橫向排列的

25:05.080 --> 25:07.080
是中向排列的

25:07.080 --> 25:08.080
这样子排列的

25:08.080 --> 25:09.080
看到没

25:09.080 --> 25:11.080
好 那么这一块

25:11.080 --> 25:12.080
怎么在做呢

25:12.080 --> 25:13.080
如果说你没有学过

25:13.080 --> 25:14.080
听我讲

25:14.080 --> 25:15.080
这些东西

25:15.080 --> 25:16.080
都是一些小的技巧

25:16.080 --> 25:17.080
网格布局里边

25:17.080 --> 25:19.080
内容其实蛮多的

25:19.080 --> 25:20.080
不过

25:20.080 --> 25:21.080
我们很多同学

25:21.080 --> 25:22.080
记不住

25:22.080 --> 25:23.080
我也记不住

25:23.080 --> 25:24.080
用了的时候再去查

25:24.080 --> 25:25.080
那么这一块

25:25.080 --> 25:26.080
我们可以利用

25:26.080 --> 25:27.080
这种方式

25:27.080 --> 25:28.080
先不着急

25:28.080 --> 25:29.080
设置这个玩意

25:29.080 --> 25:30.080
我先把它

25:30.080 --> 25:31.080
设置成排列方向

25:31.080 --> 25:32.080
给它编一下

25:32.080 --> 25:33.080
不要橫向排列

25:33.080 --> 25:35.080
你中向排列

25:35.080 --> 25:36.080
我们现在把它去掉

25:36.080 --> 25:37.080
你看一下

25:37.080 --> 25:39.080
目前仍然是橫向排列的

25:39.080 --> 25:40.080
为什么呢

25:40.080 --> 25:41.080
因为它没

25:41.080 --> 25:42.080
它只有一列

25:42.080 --> 25:44.080
你不要看它好像是

25:44.080 --> 25:45.080
中向排列

25:45.080 --> 25:46.080
其实不是的

25:46.080 --> 25:47.080
目前仍然是橫向排列

25:47.080 --> 25:48.080
只不过它只有

25:48.080 --> 25:50.080
第一行排一个

25:50.080 --> 25:52.080
第一行还想排第二个

25:52.080 --> 25:53.080
排不下了

25:53.080 --> 25:54.080
只能排第二

25:54.080 --> 25:55.080
原来的意思吧

25:55.080 --> 25:56.080
它还是橫向排列的

25:56.080 --> 25:57.080
那么这里

25:57.080 --> 25:58.080
我要把它变成

25:58.080 --> 25:59.080
中向排列

25:59.080 --> 26:00.080
怎么变呢

26:01.080 --> 26:03.080
all to flow

26:04.080 --> 26:07.080
排列方向把它变成

26:08.080 --> 26:09.080
可能

26:10.080 --> 26:12.080
中向暗列来排列

26:12.080 --> 26:13.080
保存

26:13.080 --> 26:14.080
你看

26:14.080 --> 26:15.080
变化了对不对

26:15.080 --> 26:16.080
为了让你们看得更加清楚

26:16.080 --> 26:17.080
我把

26:17.080 --> 26:19.080
后两个先暂时的给它

26:21.080 --> 26:22.080
变成这样子

26:22.080 --> 26:23.080
那么解释一下

26:23.080 --> 26:24.080
为什么变成这样子

26:25.080 --> 26:26.080
你看

26:27.080 --> 26:28.080
它现在的排列方式

26:28.080 --> 26:29.080
就是暗列来排列了

26:29.080 --> 26:30.080
首先

26:31.080 --> 26:32.080
排列第一列

26:32.080 --> 26:33.080
然后第一列

26:34.080 --> 26:35.080
它只有一行

26:35.080 --> 26:36.080
之前是只有一列

26:36.080 --> 26:37.080
现在变成只有一行了

26:37.080 --> 26:38.080
这个方向整个调过来了

26:38.080 --> 26:39.080
它现在的第一列

26:39.080 --> 26:40.080
只有一行

26:40.080 --> 26:42.080
所以它只能排到第二列了

26:42.080 --> 26:43.080
然后排第三列

26:43.080 --> 26:45.080
因此我们现在要做的

26:45.080 --> 26:46.080
是不是就

26:46.080 --> 26:48.080
把行给它加多一点就行了

26:48.080 --> 26:49.080
对不对

26:49.080 --> 26:50.080
所以我们要做的

26:50.080 --> 26:51.080
就是给它加行

26:51.080 --> 26:53.080
那怎么来加行呢

26:53.080 --> 26:54.080
可以用grade

26:54.080 --> 26:55.080
之前用什么row

26:55.080 --> 26:56.080
clump

26:56.080 --> 26:57.080
clump

26:57.080 --> 26:58.080
templates clumps

26:58.080 --> 27:00.080
那么现在用templates rows

27:01.080 --> 27:03.080
给它设置列的数量

27:03.080 --> 27:05.080
行的数量

27:05.080 --> 27:06.080
repeat

27:06.080 --> 27:07.080
重复多少行呢

27:07.080 --> 27:08.080
那么问题来了

27:08.080 --> 27:10.080
那我这里要重复多少行呢

27:11.080 --> 27:13.080
你重复多少行都不合适

27:13.080 --> 27:15.080
你要让你这里自己数

27:15.080 --> 27:17.080
一二三四五六六七八九八八八八

27:17.080 --> 27:18.080
数了很多行

27:18.080 --> 27:21.080
但是如果说内容比较少的话

27:21.080 --> 27:23.080
那你说这个有几行呢

27:23.080 --> 27:24.080
是不是只有一行

27:24.080 --> 27:27.080
所以行的数量是不固定的

27:27.080 --> 27:28.080
那怎么办呢

27:28.080 --> 27:30.080
这里可以使用一个关键字

27:30.080 --> 27:33.080
叫做fit

27:33.080 --> 27:35.080
O2fit

27:35.080 --> 27:37.080
自动试用

27:37.080 --> 27:40.080
那么这样子关键字设置好了之后

27:40.080 --> 27:43.080
后面要跟上一个行的

27:43.080 --> 27:45.080
就是每一行的高度

27:45.080 --> 27:47.080
每一行的高度比方说20个像素

27:47.080 --> 27:48.080
那啥意思

27:48.080 --> 27:49.080
就是告诉它

27:49.080 --> 27:51.080
我每一行的20个像素

27:51.080 --> 27:52.080
你至于去排

27:52.080 --> 27:54.080
你不是从上到下来排吗

27:54.080 --> 27:55.080
你看啊

27:55.080 --> 27:56.080
它就变成这个样子了

28:01.600 --> 28:03.600
比方说这是一个区域

28:03.600 --> 28:04.600
然后呢

28:04.600 --> 28:07.600
第一行排

28:07.600 --> 28:08.600
第一个

28:08.600 --> 28:09.600
20个像素

28:09.600 --> 28:10.600
20个像素

28:10.600 --> 28:11.600
20个像素

28:11.600 --> 28:12.600
20个像素

28:12.600 --> 28:13.600
他自己去排

28:13.600 --> 28:14.600
排到排不下了

28:14.600 --> 28:15.600
比方到拿最大高度了

28:15.600 --> 28:16.600
排不下了

28:16.600 --> 28:18.600
他自然就换到下一地

28:18.600 --> 28:19.600
这样排

28:19.600 --> 28:20.600
就这么个意思

28:21.600 --> 28:22.600
明白吧

28:22.600 --> 28:23.600
这就是我们这里的

28:23.600 --> 28:24.600
这种做法

28:24.600 --> 28:25.600
那么这里呢

28:25.600 --> 28:26.600
我设置20个像素

28:26.600 --> 28:27.600
让它自动适应

28:27.600 --> 28:28.600
保存你看一下

28:28.600 --> 28:30.600
就是自动去排了

28:30.600 --> 28:31.600
好

28:31.600 --> 28:32.600
那么接下来还没有完

28:32.600 --> 28:34.600
我们接下来继续写

28:34.600 --> 28:35.600
可以给它写上一个

28:35.600 --> 28:37.600
行之间的一个键系

28:37.600 --> 28:39.600
就是row

28:39.600 --> 28:40.600
get

28:41.600 --> 28:42.600
键系到行与行之间

28:42.600 --> 28:43.600
我给它6个像素

28:43.600 --> 28:45.600
也不要太多了

28:46.600 --> 28:47.600
6个像素

28:47.600 --> 28:48.600
然后呢

28:48.600 --> 28:50.600
列与列之间的键系呢

28:50.600 --> 28:51.600
clump

28:51.600 --> 28:52.600
get

28:52.600 --> 28:53.600
我给它设置一个

28:53.600 --> 28:55.600
应该可以稍微远一点

28:56.600 --> 28:58.600
26个像素吧

28:59.600 --> 29:00.600
好 这里又出问题了

29:00.600 --> 29:02.600
出了什么问题呢

29:02.600 --> 29:04.600
它发现宽度不够了

29:04.600 --> 29:05.600
排不下

29:05.600 --> 29:06.600
看到没

29:06.600 --> 29:07.600
它发现宽度不够了

29:07.600 --> 29:08.600
排不下

29:08.600 --> 29:11.600
就挤压了每一个单元格

29:11.600 --> 29:14.600
指色的是空隙

29:14.600 --> 29:15.600
蓝色的是单元格

29:15.600 --> 29:17.600
是不是挤压了单元格

29:17.600 --> 29:18.600
那么为了避免它

29:18.600 --> 29:19.600
被挤压换行

29:19.600 --> 29:21.600
我就强制让它不要换行

29:22.600 --> 29:23.600
怎么样让它强制

29:23.600 --> 29:24.600
不要换行呢

29:24.600 --> 29:25.600
也很简单

29:25.600 --> 29:26.600
我们在整体的底标

29:26.600 --> 29:28.600
就设置一下

29:28.600 --> 29:30.600
就是wise space

29:31.600 --> 29:32.600
row

29:32.600 --> 29:33.600
也不要换行

29:34.600 --> 29:35.600
是不是就顶开了

29:35.600 --> 29:37.600
对吧 没问题吧

29:37.600 --> 29:39.600
就是并不复杂

29:39.600 --> 29:40.600
然后呢

29:40.600 --> 29:41.600
这里呢

29:41.600 --> 29:42.600
我再看一下

29:43.600 --> 29:45.600
整个区你靠着边框太近了

29:45.600 --> 29:46.600
所以说我这里

29:46.600 --> 29:48.600
把整个区给它设置一个panning

29:50.600 --> 29:51.600
panning的话

29:51.600 --> 29:53.600
就多个相处

29:53.600 --> 29:55.600
十个相处

29:55.600 --> 29:57.600
十个相处也行

29:57.600 --> 29:59.600
对吧 是不是可以了

29:59.600 --> 30:02.600
这就差不多有这么个意思

30:02.600 --> 30:03.600
再放大一点

30:03.600 --> 30:04.600
放大一点来看

30:04.600 --> 30:06.600
比较好看一点

30:06.600 --> 30:07.600
好 然后看一下

30:07.600 --> 30:08.600
还有什么呢

30:08.600 --> 30:09.600
还就是一个鼠标样式

30:09.600 --> 30:10.600
把它变成一只小手

30:10.600 --> 30:11.600
然后呢

30:11.600 --> 30:12.600
我把这个options

30:12.600 --> 30:14.600
找到下面的li

30:14.600 --> 30:15.600
cursor pointer

30:15.600 --> 30:17.600
把它变成一只小手

30:17.600 --> 30:19.600
差不多

30:19.600 --> 30:20.600
然后呢

30:20.600 --> 30:21.600
我们会发现

30:21.600 --> 30:22.600
有些li它有的时候

30:22.600 --> 30:23.600
会有一个选中效果

30:23.600 --> 30:24.600
看到没

30:24.600 --> 30:26.600
是不是会有一个选中效果呀

30:26.600 --> 30:27.600
所以说那一会呢

30:27.600 --> 30:29.600
总有某一个时候

30:29.600 --> 30:30.600
我们肯定要给这个li

30:30.600 --> 30:31.600
设置一个背景

30:32.600 --> 30:33.600
比方说我现在

30:33.600 --> 30:34.600
就给它设置一个背景

30:34.600 --> 30:35.600
随便设置一个吧

30:39.740 --> 30:41.740
那我这个背景一设

30:41.740 --> 30:42.740
是不是一看就

30:42.740 --> 30:43.740
不太对焦了对不对

30:43.740 --> 30:45.740
那么我们一步来调

30:45.740 --> 30:46.740
首先垂直居中

30:46.740 --> 30:48.740
你得垂直居中吧

30:48.740 --> 30:49.740
那我这里垂直居中

30:49.740 --> 30:50.740
比较好说

30:51.740 --> 30:52.740
它高每一行

30:52.740 --> 30:53.740
不是二十个箱数吗

30:53.740 --> 30:54.740
我就二十个箱数

30:55.740 --> 30:56.740
垂直居中好说

30:57.740 --> 30:58.740
然后呢我再给它

30:58.740 --> 30:59.740
设置一个左右的panning

30:59.740 --> 31:00.740
让它左右呢

31:01.740 --> 31:02.740
有一点距离

31:03.740 --> 31:04.740
panning

31:05.740 --> 31:06.740
上下呢我上下

31:06.740 --> 31:07.740
有一个稍微设置一下吧

31:07.740 --> 31:08.740
左右呢我

31:09.740 --> 31:12.250
五个箱数

31:15.710 --> 31:16.710
上下我一上

31:16.710 --> 31:17.710
这里就上

31:17.710 --> 31:18.710
加了panning过后呢

31:18.710 --> 31:19.710
它的高度就不够了

31:19.710 --> 31:20.710
还得去掉

31:21.710 --> 31:22.710
那么这一块就差不多了

31:22.710 --> 31:23.710
但是那你会发现

31:23.710 --> 31:25.710
它的文字呢是实际上

31:25.710 --> 31:26.710
它不是按照

31:26.710 --> 31:27.710
它的宽度

31:27.710 --> 31:29.710
不是按照自己的文字的宽度来定的

31:29.710 --> 31:30.710
它是把整个称满的

31:30.710 --> 31:31.710
你看到没

31:32.710 --> 31:34.710
是把整个那个单元格称满了

31:34.710 --> 31:35.710
我不需要你称满

31:35.710 --> 31:36.710
也就是你li

31:36.710 --> 31:37.710
自己有的宽就多宽

31:37.710 --> 31:38.710
你看这个选项1

31:38.710 --> 31:39.710
它本来没有那么宽的

31:39.710 --> 31:41.710
它是不是称的宽了很多

31:41.710 --> 31:42.710
因为

31:42.710 --> 31:44.710
整个这一列它要对齐

31:44.710 --> 31:45.710
它就会按照最长的

31:45.710 --> 31:46.710
那个单元格

31:46.710 --> 31:47.710
就是这个单元格

31:47.710 --> 31:48.710
来规定那个宽度

31:48.710 --> 31:49.710
那么其他单元格

31:49.710 --> 31:51.710
全部被规定这个宽度了

31:52.710 --> 31:53.710
而我现在希望的是

31:53.710 --> 31:54.710
这个li元素

31:54.710 --> 31:55.710
它不要随着

31:55.710 --> 31:57.710
这个单元格的宽度

31:57.710 --> 31:58.710
增加

31:58.710 --> 32:00.710
你自己有多宽就多宽

32:00.710 --> 32:01.710
那怎么办呢

32:01.710 --> 32:02.710
那么我们同样可以在

32:02.710 --> 32:04.710
网格布局里边去设置

32:04.710 --> 32:05.710
就是

32:06.710 --> 32:08.710
叫做justified content

32:09.710 --> 32:10.710
适应内容这一块

32:10.710 --> 32:12.710
我们把它设置为

32:12.710 --> 32:13.710
left

32:13.710 --> 32:14.710
也不要拉伸

32:15.710 --> 32:16.710
应该是align

32:18.710 --> 32:19.710
items

32:20.710 --> 32:21.710
那完了

32:21.710 --> 32:22.710
我这里忘了

32:22.710 --> 32:23.710
忘了没关系

32:23.710 --> 32:24.710
打开

32:25.710 --> 32:26.710
找到这一块

32:27.710 --> 32:28.710
grid

32:29.710 --> 32:30.710
这一块

32:31.710 --> 32:32.710
是哪个属性来着呢

32:33.710 --> 32:34.710
我看一下

32:34.710 --> 32:40.970
网格布局

32:42.970 --> 32:43.970
网格布局

32:43.970 --> 32:44.970
在这

32:44.970 --> 32:45.970
我给它加一下

32:45.970 --> 32:46.970
加一下

32:46.970 --> 32:47.970
看一下到底是哪个属性

32:48.970 --> 32:49.970
一点忘了

32:49.970 --> 32:50.970
叫做justified

32:52.970 --> 32:53.970
items

32:53.970 --> 32:54.970
应该是这个

32:55.970 --> 32:56.970
就是适配

32:56.970 --> 32:57.970
每一块

32:57.970 --> 32:59.970
单元格里边的元素

32:59.970 --> 33:01.970
它到底怎么去适应单元格

33:01.970 --> 33:03.970
我就靠左对齐就行了

33:03.970 --> 33:05.970
你不要去拉伸

33:05.970 --> 33:06.970
它不能拉伸

33:06.970 --> 33:07.970
拉伸的话

33:07.970 --> 33:09.970
就拉伸到跟单元格一样宽度

33:09.970 --> 33:11.970
我把它设置为left

33:12.970 --> 33:13.970
这样子

33:13.970 --> 33:14.970
它在单元格里边

33:14.970 --> 33:15.970
你看这个图

33:15.970 --> 33:16.970
就比较容易看出来

33:16.970 --> 33:17.970
在单元格里边靠左

33:17.970 --> 33:19.970
那么它自己有多宽就多宽

33:20.970 --> 33:21.970
这一块小细节

33:21.970 --> 33:22.970
就把它搞定了

33:23.970 --> 33:24.970
把它写上

33:24.970 --> 33:29.970
叫做justified items

33:30.970 --> 33:31.970
其实这一块

33:31.970 --> 33:33.970
如果说我这里没想起来的话

33:33.970 --> 33:34.970
我也可以去查一查文档

33:34.970 --> 33:35.970
AMD的文档

33:35.970 --> 33:37.970
就是网格布局那一块

33:37.970 --> 33:38.970
那么接下来

33:38.970 --> 33:39.970
我要做的事情

33:39.970 --> 33:40.970
就是给它设置一些

33:40.970 --> 33:41.970
圆角

33:41.970 --> 33:42.970
这些小的细节了

33:42.970 --> 33:44.970
比方说border radius

33:44.970 --> 33:46.970
要设置为一个五项书

33:47.970 --> 33:48.970
五项书

33:48.970 --> 33:50.970
差不多有这么个意思了

33:51.970 --> 33:53.970
其实就差不多了

33:53.970 --> 33:56.970
写到这就稍微增加一点

33:57.970 --> 33:58.970
就差不多了

33:58.970 --> 34:00.970
然后把背景颜色去掉

34:01.970 --> 34:02.970
接下来

34:02.970 --> 34:03.970
同学们

34:03.970 --> 34:05.970
把代码写成这个样子

34:06.970 --> 34:07.970
理解每一步代码

34:07.970 --> 34:08.970
在干什么

34:08.970 --> 34:09.970
一步一步变成这个样子的

34:10.970 --> 34:11.970
那么大家去写一下

34:11.970 --> 34:12.970
暂停视频

34:14.970 --> 34:15.970
好了没

34:15.970 --> 34:17.970
接着我们往下写

34:18.970 --> 34:19.970
然后呢

34:19.970 --> 34:21.970
现在我们要去做这个东西

34:21.970 --> 34:22.970
这个小块

34:23.970 --> 34:24.970
这个小块

34:24.970 --> 34:25.970
那么这个小块

34:25.970 --> 34:26.970
又是怎么做的呢

34:26.970 --> 34:27.970
大家看一下

34:27.970 --> 34:28.970
这个小块

34:28.970 --> 34:29.970
其实做起来还是挺有意思的

34:29.970 --> 34:30.970
首先

34:30.970 --> 34:31.970
我要把整个区域

34:31.970 --> 34:32.970
往下移动一点

34:33.970 --> 34:34.970
这个绝对因为的元素

34:34.970 --> 34:35.970
把它往下移动一点

34:36.970 --> 34:37.970
离不成太

34:37.970 --> 34:38.970
太靠上了

34:38.970 --> 34:39.970
这样子

34:39.970 --> 34:40.970
就没有什么空间了

34:40.970 --> 34:41.970
给它个小尖头

34:41.970 --> 34:42.970
没有空间了

34:42.970 --> 34:44.970
把它往下移动个10个项书

34:44.970 --> 34:45.970
那么这里

34:45.970 --> 34:46.970
我们怎么设置呢

34:47.970 --> 34:48.970
那么我们去设置它的什么

34:50.970 --> 34:51.970
设置多少

34:52.970 --> 34:54.970
这里不能设置10个项书

34:54.970 --> 34:56.970
它是相对于谁的

34:56.970 --> 34:57.970
它是相对于负元素的

34:57.970 --> 34:59.970
你看看它的负元素

34:59.970 --> 35:00.970
它的负元素在这

35:01.970 --> 35:02.970
看没

35:02.970 --> 35:03.970
你这样子设置

35:03.970 --> 35:04.970
上面10个项书

35:04.970 --> 35:05.970
就相对于负元素的

35:05.970 --> 35:06.970
顶端10个项书

35:06.970 --> 35:07.970
那肯定不行的

35:07.970 --> 35:09.970
那你这里要去算一下

35:09.970 --> 35:10.970
简单算一下

35:10.970 --> 35:11.970
就是上面的元素

35:11.970 --> 35:12.970
它的高度是多少呢

35:12.970 --> 35:13.970
是不是40

35:14.970 --> 35:15.970
然后呢

35:15.970 --> 35:17.970
我就40加上10

35:17.970 --> 35:18.970
不就完了吗

35:18.970 --> 35:19.970
就50的项书

35:19.970 --> 35:20.970
跑这儿来了

35:21.970 --> 35:22.970
好

35:22.970 --> 35:23.970
那么这是这一块

35:23.970 --> 35:25.970
那么接下来我要做个小尖头

35:25.970 --> 35:26.970
你要做小尖头的话

35:26.970 --> 35:27.970
甭管那个尖头是啥

35:27.970 --> 35:29.970
哪怕你它是一张图片

35:29.970 --> 35:31.970
你得有个元素

35:32.970 --> 35:34.970
我现在有没有这个元素

35:34.970 --> 35:35.970
我的ATM里面

35:35.970 --> 35:37.970
有没有给它留位置

35:37.970 --> 35:38.970
是不是没有

35:38.970 --> 35:39.970
没有怎么办

35:40.970 --> 35:41.970
我们以前

35:41.970 --> 35:42.970
遇到这种情况

35:42.970 --> 35:44.970
没有还真没有什么好办法

35:44.970 --> 35:45.970
你得必须得写一个元素

35:45.970 --> 35:47.970
所以以前的ATM代码里边

35:47.970 --> 35:49.970
就会出现很多那种

35:49.970 --> 35:50.970
毫无意义的元素

35:50.970 --> 35:51.970
它啥内容都没有

35:51.970 --> 35:53.970
它就是为了样式服务的

35:53.970 --> 35:54.970
因为没有元素

35:54.970 --> 35:55.970
就没法设置样式

35:55.970 --> 35:56.970
但是现在有了

35:56.970 --> 35:57.970
事业设置3之后呢

35:57.970 --> 35:59.970
我们可以有更多的做法了

35:59.970 --> 36:00.970
比方说

36:00.970 --> 36:01.970
我们这里呢

36:01.970 --> 36:02.970
就可以利用

36:02.970 --> 36:03.970
给这个Li

36:03.970 --> 36:04.970
给这个Options

36:04.970 --> 36:05.970
就整个这个区域

36:07.970 --> 36:08.970
这个DIV

36:08.970 --> 36:10.970
给它加上一个

36:11.970 --> 36:12.970
为元素

36:13.970 --> 36:14.970
你不是没有元素吗

36:14.970 --> 36:15.970
给它勾件一个元素

36:15.970 --> 36:16.970
比方

36:17.970 --> 36:18.970
给它写个内容

36:19.970 --> 36:20.970
这个元素呢

36:20.970 --> 36:21.970
我要把它定位

36:21.970 --> 36:22.970
相对于谁

36:22.970 --> 36:23.970
相对于这个玩意儿

36:23.970 --> 36:24.970
相对于它

36:24.970 --> 36:25.970
来进行定位

36:25.970 --> 36:26.970
因为它的比方

36:26.970 --> 36:27.970
是相对于它的指元素

36:27.970 --> 36:28.970
对吧

36:28.970 --> 36:29.970
相对于它来进行定位

36:29.970 --> 36:30.970
把它定位到这个位置

36:30.970 --> 36:31.970
就完事了

36:32.970 --> 36:33.970
好 那么我们来定位吧

36:33.970 --> 36:35.970
首先把元素做出来

36:35.970 --> 36:36.970
给它一个宽高

36:36.970 --> 36:38.970
宽度为10个像素

36:38.970 --> 36:39.970
高度呢

36:39.970 --> 36:41.970
高度为10个像素

36:41.970 --> 36:44.340
目前在这

36:44.340 --> 36:46.340
目前它变成一个普通元素

36:46.340 --> 36:47.340
进行参与的网格布局

36:48.340 --> 36:49.340
目前在这

36:49.340 --> 36:50.340
当然我肯定不希望它在这

36:50.340 --> 36:52.340
因此我把它变成决定定位

36:53.340 --> 36:54.340
还不是如此

36:55.340 --> 36:56.340
那么相信你决定定位

36:56.340 --> 36:57.340
现在看不见

36:57.340 --> 36:58.340
我们给它一个背景

36:58.340 --> 36:59.340
颜色就看见

36:59.340 --> 37:00.340
同色

37:01.340 --> 37:02.340
在这

37:02.340 --> 37:03.340
对不对

37:03.340 --> 37:04.340
那么接下来

37:04.340 --> 37:06.340
我就把它移动移动移动到这个位置

37:06.340 --> 37:07.340
移动到哪了

37:07.340 --> 37:09.340
是不是这个玩意儿的宽度的一半

37:10.340 --> 37:11.340
就是它的一半

37:12.340 --> 37:13.340
我们来吧

37:13.340 --> 37:14.340
移动它宽度的一半

37:14.340 --> 37:15.340
我们就设置一下

37:15.340 --> 37:16.340
Left

37:16.340 --> 37:17.340
需要一些调

37:17.340 --> 37:18.340
自己慢慢去调

37:18.340 --> 37:19.340
也不用去太多的计算

37:19.340 --> 37:21.340
这个计算也没什么多套意义

37:21.340 --> 37:22.340
我就慢慢调

37:22.340 --> 37:24.340
把它移过去

37:24.340 --> 37:25.340
首先Left

37:25.340 --> 37:27.340
直接是

37:28.340 --> 37:29.340
百分之

37:30.340 --> 37:31.340
你不能百分之50

37:31.340 --> 37:32.340
百分之50就相对于

37:32.340 --> 37:33.340
是它的百分之50

37:33.340 --> 37:34.340
那是不合适的

37:34.340 --> 37:35.340
那么这里

37:35.340 --> 37:36.340
它的宽度是多少

37:36.340 --> 37:37.340
它的宽度

37:37.340 --> 37:38.340
是不是

37:38.340 --> 37:39.340
150

37:39.340 --> 37:40.340
对吧

37:40.340 --> 37:41.340
那我们就75倍

37:43.340 --> 37:44.340
75个像素

37:44.340 --> 37:45.340
到这了

37:45.340 --> 37:48.340
然后再往稍微往左边来一点吧

37:48.340 --> 37:50.340
稍微往左边来一点

37:50.340 --> 37:52.340
左边的话

37:52.340 --> 37:53.340
我们给它

37:54.340 --> 37:55.340
就70个像素

37:55.340 --> 37:56.340
就稍微调一调

37:56.340 --> 37:57.340
因为这一块算起来

37:57.340 --> 37:58.340
还挺麻烦的

37:58.340 --> 37:59.340
好

37:59.340 --> 38:00.340
接下来是

38:00.340 --> 38:01.340
中左标

38:01.340 --> 38:02.340
中左标的话

38:02.340 --> 38:03.340
我们设置一个Tabz

38:03.340 --> 38:04.340
Tabz

38:04.340 --> 38:05.340
Food

38:05.340 --> 38:06.340
肯定是Food

38:06.340 --> 38:07.340
它是相对于它移动

38:07.340 --> 38:08.340
对不对

38:08.340 --> 38:09.340
它肯定要跑上面去

38:09.340 --> 38:10.340
Food

38:10.340 --> 38:11.340
Food自身高的

38:11.340 --> 38:13.340
这边像素

38:13.340 --> 38:14.340
跑这来了

38:15.340 --> 38:16.340
好

38:16.340 --> 38:18.340
然后给它设置一个Border

38:18.340 --> 38:19.340
一个像素

38:19.340 --> 38:21.340
solid CCC

38:22.340 --> 38:24.340
把背景颜色去了

38:24.340 --> 38:25.340
目前在这

38:26.340 --> 38:27.340
稍微的去调整一下

38:27.340 --> 38:29.340
Tabz能够复11

38:29.340 --> 38:30.340
12

38:33.040 --> 38:34.040
差不多

38:34.040 --> 38:35.040
差不多在这

38:35.040 --> 38:36.040
一会我们还要调

38:37.040 --> 38:38.040
有些11吗

38:38.040 --> 38:39.040
大家看得清楚一点

38:40.040 --> 38:41.040
现在我要做的就是

38:41.040 --> 38:42.040
把这个小方块

38:42.040 --> 38:43.040
进行旋转

38:44.040 --> 38:46.040
旋转个45度

38:47.040 --> 38:48.040
就把这个玩意儿

38:48.040 --> 38:49.040
旋转个45度

38:49.040 --> 38:50.040
我这里没法演示旋转

38:50.040 --> 38:51.040
就非常简单

38:51.040 --> 38:52.040
我们再看一下

38:52.040 --> 38:54.040
就Transform旋转

38:54.040 --> 38:55.040
用什么

38:55.040 --> 38:56.040
忘了可以查文档

38:56.040 --> 38:58.040
叫用Rotate

38:58.040 --> 38:59.040
这些忘了没关系

38:59.040 --> 39:00.040
也单词

39:00.040 --> 39:01.040
单词比较多

39:01.040 --> 39:02.040
然后45度

39:03.040 --> 39:04.040
转成这个样子

39:04.040 --> 39:05.040
一点一点的事

39:05.040 --> 39:06.040
就知道转多少度了

39:07.040 --> 39:08.040
好

39:08.040 --> 39:09.040
转了过后

39:09.040 --> 39:10.040
我们再来调整一下位置

39:10.040 --> 39:11.040
基本上我

39:11.040 --> 39:12.040
大家都明白了

39:12.040 --> 39:13.040
我要做什么

39:13.040 --> 39:14.040
把它

39:14.040 --> 39:15.040
就是我要的是什么呢

39:15.040 --> 39:16.040
要的就是这一块

39:16.040 --> 39:17.040
就这一块

39:19.800 --> 39:21.800
要的就是这一块

39:21.800 --> 39:24.800
一会我把下面的下边框隐藏

39:24.800 --> 39:26.800
把右边框隐藏

39:26.800 --> 39:27.800
去掉就完事了

39:27.800 --> 39:29.800
所以说我们现在就调

39:29.800 --> 39:30.800
调整完事了

39:30.800 --> 39:32.800
现在我先就隐藏

39:33.800 --> 39:34.800
下边框

39:38.800 --> 39:39.800
隐藏

39:39.800 --> 39:40.800
那么接下来我就调

39:40.800 --> 39:41.800
调调调

39:41.800 --> 39:42.800
把它调成这个样子

39:42.800 --> 39:43.800
好

39:44.800 --> 39:45.800
慢慢调

39:45.800 --> 39:46.800
然后就Top值

39:46.800 --> 39:47.800
Top值

39:47.800 --> 39:48.800
附多了

39:48.800 --> 39:50.800
附多了就7

39:53.800 --> 39:54.800
差不多了

39:54.800 --> 39:55.800
调到这个位置了

39:55.800 --> 39:57.800
那就说这个地方怎么办呢

39:57.800 --> 39:58.800
中间那个贯穿的

39:58.800 --> 39:59.800
那个线怎么办呢

39:59.800 --> 40:00.800
其实这个线

40:00.800 --> 40:01.800
没想一想

40:01.800 --> 40:02.800
非常简单

40:03.800 --> 40:04.800
怎么办

40:04.800 --> 40:05.800
我只要把这个小框框

40:05.800 --> 40:06.800
设成一个什么

40:07.800 --> 40:10.430
白色背景

40:10.430 --> 40:11.430
不就完了吗

40:11.430 --> 40:12.430
对不对

40:12.430 --> 40:13.430
非常简单

40:13.430 --> 40:14.430
然后再把这个去

40:14.430 --> 40:15.430
这个东西加上

40:15.430 --> 40:16.430
另外还有一点

40:16.430 --> 40:17.430
还给你小细节

40:17.430 --> 40:18.430
就是这个Obsync

40:18.430 --> 40:20.430
最好也设置个白色背景

40:20.430 --> 40:21.430
为什么呢

40:21.430 --> 40:22.430
给它看一下

40:22.430 --> 40:23.430
如果说你Obsync

40:23.430 --> 40:24.430
不设置白色背景

40:24.430 --> 40:25.430
会有个什么问题呢

40:25.430 --> 40:27.430
当然我们目前这个效果

40:27.430 --> 40:28.430
倒是不会遇到什么问题

40:28.430 --> 40:29.430
但是如果说在真实项目里边

40:29.430 --> 40:30.430
它肯定要出问题的

40:32.430 --> 40:33.430
是不是

40:33.430 --> 40:34.430
背后的东西也能看见了

40:34.430 --> 40:35.430
所以说

40:35.430 --> 40:36.430
我这个Obsync是呢

40:36.430 --> 40:38.430
它最好也设置个白色背景

40:38.430 --> 40:40.430
你看这些细节还是蛮多的

40:41.430 --> 40:43.430
这样是不是折腾了

40:43.430 --> 40:44.430
对不对

40:44.430 --> 40:45.430
好

40:47.870 --> 40:49.870
那么这边的白色背景加上

40:49.870 --> 40:51.870
然后把这个边框

40:51.870 --> 40:52.870
两个边框去掉

40:52.870 --> 40:53.870
就完事了

40:53.870 --> 40:55.870
这个东西就做出来了

40:56.870 --> 40:57.870
其实呢

40:57.870 --> 40:58.870
我们还可以去做一些

40:58.870 --> 40:59.870
更多的东西

40:59.870 --> 41:00.870
更多的事情

41:00.870 --> 41:01.870
比方说你可以觉得

41:01.870 --> 41:03.870
它不是那么明显的话

41:03.870 --> 41:04.870
你可以给它加上一个阴影

41:04.870 --> 41:05.870
这些都可以

41:05.870 --> 41:07.870
我们用CSS上的东西都可以做

41:07.870 --> 41:08.870
或者shadow

41:08.870 --> 41:10.870
零零我就

41:10.870 --> 41:12.870
或是四周或散

41:12.870 --> 41:13.870
橫向没有便宜

41:13.870 --> 41:14.870
纵向没有便宜

41:14.870 --> 41:15.870
像四周或散

41:15.870 --> 41:16.870
或三个

41:16.870 --> 41:17.870
三个相处吧

41:17.870 --> 41:18.870
RGBA

41:18.870 --> 41:19.870
阴影的话

41:19.870 --> 41:20.870
我们一般是个半透明

41:20.870 --> 41:21.870
0.5

41:22.870 --> 41:23.870
不就一个阴影了吗

41:24.870 --> 41:25.870
对了

41:25.870 --> 41:26.870
可以稍微的

41:27.870 --> 41:28.870
透明度稍微的低

41:28.870 --> 41:29.870
低一点

41:32.180 --> 41:33.180
那么就差不多了

41:33.180 --> 41:34.180
就做出来了

41:35.180 --> 41:36.180
接下来就是

41:37.180 --> 41:38.180
还有一些小的细节

41:38.180 --> 41:39.180
就是字体颜色

41:39.180 --> 41:40.180
字体颜色我设置一下

41:44.180 --> 41:45.180
字体颜色

41:47.180 --> 41:48.180
差不多了

41:49.180 --> 41:50.180
那么目前的大家

41:50.180 --> 41:51.180
把我们目前代码

41:51.180 --> 41:52.180
写到这个样子

41:52.180 --> 41:53.180
我等你

41:56.140 --> 41:57.140
好了没

41:58.140 --> 41:59.140
不要着急

41:59.140 --> 42:00.140
慢慢写代码

42:01.140 --> 42:02.140
今天咱们啥都不做

42:02.140 --> 42:03.140
就完成这个项目

42:03.140 --> 42:04.140
就完成这个练习

42:04.140 --> 42:05.140
就OK了

42:06.140 --> 42:08.140
那么写到这个样子之后

42:08.140 --> 42:10.140
我们还有哪些样式要准备呢

42:10.140 --> 42:11.140
实际上我们在写

42:11.140 --> 42:12.140
ATM也好

42:12.140 --> 42:13.140
写CSS也好

42:13.140 --> 42:15.140
还是要多考虑一下

42:15.140 --> 42:16.140
介石后边的事情

42:16.140 --> 42:17.140
你不能

42:17.140 --> 42:18.140
广想到目前

42:18.140 --> 42:19.140
后边的

42:19.140 --> 42:21.140
那肯定还要反过来改

42:21.140 --> 42:22.140
如果说初学者的话

42:22.140 --> 42:24.140
可能一开始想不到那么多

42:24.140 --> 42:25.140
那么就会导致

42:25.140 --> 42:26.140
写到介石代码的时候

42:26.140 --> 42:27.140
会频繁的

42:27.140 --> 42:28.140
去修改这个CSS

42:28.140 --> 42:29.140
修改这个ATM

42:29.140 --> 42:31.140
就觉得有点繁琐

42:32.140 --> 42:33.140
那么这里的我们就

42:33.140 --> 42:34.140
提前考虑一下

42:34.140 --> 42:35.140
其实你只要保证

42:35.140 --> 42:36.140
这么一个形态

42:36.140 --> 42:38.140
就是你在写CSS的时候

42:38.140 --> 42:39.140
一定要涵盖

42:39.140 --> 42:41.140
所有的样式情况

42:41.140 --> 42:42.140
比方说这边

42:42.140 --> 42:43.140
还有什么样式情况

42:43.140 --> 42:45.140
是不是一个选中的情况

42:45.140 --> 42:46.140
对不对

42:46.140 --> 42:47.140
就一个选中的情况

42:47.140 --> 42:48.140
那么选中谁

42:48.140 --> 42:49.140
选中LI

42:49.140 --> 42:50.140
那么也就说

42:50.140 --> 42:51.140
我们有的时候

42:51.140 --> 42:52.140
某一个LI

42:52.140 --> 42:53.140
可能有一些特殊的样式

42:53.140 --> 42:54.140
比方说的样式的名字

42:54.140 --> 42:56.140
把它取名为ATM

42:56.140 --> 42:57.140
我们测试一下

42:58.140 --> 42:59.140
那么到了CSS里边

42:59.140 --> 43:00.140
我们就修饰一下

43:00.140 --> 43:01.140
有特殊样式的

43:01.140 --> 43:02.140
也就是说

43:02.140 --> 43:04.140
Option下面的LI

43:04.140 --> 43:05.140
有个特殊样式

43:05.140 --> 43:06.140
Active

43:06.140 --> 43:08.140
给它单独修饰一下

43:08.140 --> 43:09.140
那什么颜色呢

43:09.140 --> 43:10.140
这个颜色

43:14.620 --> 43:15.620
我回过来

43:15.620 --> 43:16.620
这边来

43:16.620 --> 43:17.620
这个背景颜色

43:19.620 --> 43:20.620
这个颜色

43:21.620 --> 43:23.620
表示一个选中的效果

43:25.620 --> 43:26.620
那么这个样式

43:26.620 --> 43:27.620
是不是搞定的

43:27.620 --> 43:28.620
那这个东西有了

43:28.620 --> 43:29.620
这个样式之后

43:29.620 --> 43:30.620
一会儿CSS就比较方便了

43:30.620 --> 43:31.620
它只需要去控制

43:31.620 --> 43:32.620
有没有这个样式

43:32.620 --> 43:33.620
这就完事了

43:33.620 --> 43:34.620
选中了它就加上那个样式

43:34.620 --> 43:35.620
没有选中就麻烦

43:36.620 --> 43:37.620
就这一块

43:37.620 --> 43:39.620
还有什么样式呢

43:39.620 --> 43:40.620
其实还有个样式

43:40.620 --> 43:42.620
就是展开收起的样式

43:44.620 --> 43:45.620
就这

43:45.620 --> 43:47.620
也就是它现在整个下岸列表

43:47.620 --> 43:48.620
有两种状态

43:48.620 --> 43:49.620
一种是展开

43:49.620 --> 43:50.620
一种是收起

43:51.620 --> 43:52.620
那咱们来写一下

43:53.620 --> 43:54.620
默认情况下

43:54.620 --> 43:55.620
是不是一定是收起的

43:55.620 --> 43:57.620
也就是默认情况下

43:57.620 --> 43:58.620
这一块

43:58.620 --> 43:59.620
是没有显示的

44:01.620 --> 44:03.620
有一天它会展开

44:03.620 --> 44:04.620
展开的时候

44:04.620 --> 44:05.620
它不是瞬间出现的

44:05.620 --> 44:06.620
你看

44:06.620 --> 44:07.620
它展开不是瞬间出现的

44:07.620 --> 44:09.620
它是一个往下展开的

44:09.620 --> 44:10.620
对吧

44:10.620 --> 44:11.620
往下拉出来的

44:11.620 --> 44:13.620
那么这个拉出来是怎么做的呢

44:14.620 --> 44:15.620
我给它演示一遍

44:16.620 --> 44:17.620
并不复杂

44:18.620 --> 44:19.620
我是这样子玩的

44:20.620 --> 44:22.620
我是用了一个transform

44:23.620 --> 44:24.620
叫做scale

44:25.620 --> 44:26.620
玩

44:26.620 --> 44:27.620
纵向拉伸

44:28.620 --> 44:29.620
拉伸比例呢

44:29.620 --> 44:30.620
1就是原式大小

44:31.620 --> 44:32.620
1.1

44:33.620 --> 44:34.620
你看

44:34.620 --> 44:35.620
纵向拉伸

44:36.620 --> 44:37.620
反之

44:38.620 --> 44:39.620
就是压缩

44:40.620 --> 44:41.620
我把它压缩到0

44:43.620 --> 44:45.620
然后当我们展开的时候

44:45.620 --> 44:47.620
再把这个样式给它恢复到1

44:49.620 --> 44:50.620
目前是一个瞬间

44:50.620 --> 44:51.620
完成变化

44:51.620 --> 44:53.620
我们只需要加上一个transition

44:53.620 --> 44:54.620
对吧

44:54.620 --> 44:55.620
0.5秒

44:55.620 --> 44:56.620
大家看得清楚一点

44:57.620 --> 44:58.620
现在我们来切换这个样式

44:58.620 --> 44:59.620
你看是一个展开

45:02.130 --> 45:03.130
所以说

45:03.130 --> 45:04.130
这一块其实

45:04.130 --> 45:06.130
你能够把这个想到的话就不难了

45:07.130 --> 45:08.130
它一开始

45:08.130 --> 45:09.130
默认情况下

45:09.130 --> 45:10.130
这个options

45:11.130 --> 45:13.130
它是一个折叠状态

45:13.130 --> 45:14.130
什么叫折叠状态

45:14.130 --> 45:15.130
就是transform

45:16.130 --> 45:17.130
它是一个scale

45:18.130 --> 45:19.130
y

45:20.130 --> 45:21.130
0

45:21.130 --> 45:22.130
对吧

45:22.130 --> 45:23.130
它是这么一个状态

45:24.130 --> 45:25.130
然后有一个动效

45:26.130 --> 45:27.130
就是过渡效果

45:27.130 --> 45:28.130
我们就

45:28.130 --> 45:29.130
为了看得清楚

45:29.130 --> 45:30.130
我们先设置我一秒

45:31.130 --> 45:32.130
看一下

45:32.130 --> 45:34.130
然后当它展开的时候

45:34.130 --> 45:35.130
什么时候展开

45:35.130 --> 45:37.130
你当你给这个DIV

45:37.130 --> 45:38.130
给最外层的DIV

45:38.130 --> 45:40.130
加上一个样式叫expand

45:40.130 --> 45:41.130
如果说你一会儿

45:41.130 --> 45:43.130
即也是给它加上一个样式叫expand

45:43.130 --> 45:44.130
那么这个时候

45:44.130 --> 45:45.130
我就要展开了

45:45.130 --> 45:46.130
怎么展开

45:48.130 --> 45:49.130
options

45:49.130 --> 45:50.130
对吧

45:51.130 --> 45:52.130
如果说你有这个样式

45:52.130 --> 45:53.130
那么这个时候

45:54.130 --> 45:56.130
它下边的options

45:57.130 --> 45:58.130
就找到它

45:58.130 --> 45:59.130
找这个options

46:00.130 --> 46:01.130
它之前是

46:01.130 --> 46:02.130
搜索的对吧

46:02.130 --> 46:04.130
当我们复原数有这个样式

46:04.130 --> 46:05.130
那么这个时候

46:05.130 --> 46:06.130
它下面的options

46:06.130 --> 46:07.130
它就把它展开了

46:07.130 --> 46:09.130
就是重新设置这个transform

46:10.130 --> 46:11.130
把它设置为什么

46:11.130 --> 46:12.130
scale y

46:14.130 --> 46:15.130
好 接下来我们来看一下

46:15.130 --> 46:16.130
演示一下

46:16.130 --> 46:17.130
我们这里点这个

46:17.130 --> 46:18.130
cls

46:18.130 --> 46:20.130
可以切换的样式

46:20.130 --> 46:21.130
找这个

46:21.130 --> 46:22.130
你看是不是两个的样式

46:22.130 --> 46:23.130
那个是expand

46:23.130 --> 46:24.130
那个是不动

46:24.130 --> 46:25.130
接下来我们来切换这个expand

46:26.130 --> 46:29.210
看来

46:29.210 --> 46:30.210
是不是有一个展开效果

46:31.210 --> 46:32.210
但是这个展开效果

46:32.210 --> 46:33.210
它的变形

46:33.210 --> 46:35.210
它的transform变形的中心

46:35.210 --> 46:36.210
是不是

46:36.210 --> 46:37.210
以这个点为中心的

46:38.210 --> 46:40.210
它是以这根轴

46:41.210 --> 46:43.210
它是以这根轴为中心的

46:43.210 --> 46:44.210
对吧

46:44.210 --> 46:45.210
它不是以

46:45.210 --> 46:46.210
我们希望还有

46:46.210 --> 46:47.210
以什么为中心

46:47.210 --> 46:48.210
以这个地方为中心

46:49.210 --> 46:50.210
换句话说

46:50.210 --> 46:51.210
实际上它的中心点

46:51.210 --> 46:53.210
变形的中心点在这

46:53.210 --> 46:55.210
在原数的中心

46:55.210 --> 46:57.210
变形的中心点在这

46:57.210 --> 46:58.210
所以说

46:58.210 --> 46:59.210
它一切的变形

46:59.210 --> 47:00.210
都是以这个点为参考的

47:01.210 --> 47:02.210
我现在把它

47:02.210 --> 47:03.210
这个点变到哪

47:03.210 --> 47:04.210
变到这个位置

47:05.210 --> 47:06.210
横向其实

47:06.210 --> 47:07.210
横坐标其实不用管

47:07.210 --> 47:09.210
重坐标把它放到这个位置

47:09.210 --> 47:10.210
因为我们只是重向变小

47:10.210 --> 47:11.210
横向我们没动

47:11.210 --> 47:12.210
对吧

47:12.210 --> 47:13.210
所以我们只关心重坐标

47:14.210 --> 47:15.210
那么也就重向的

47:15.210 --> 47:16.210
我们要把它收到这个点

47:16.210 --> 47:17.210
那么我们是不是

47:17.210 --> 47:18.210
应该设置哪个属性

47:19.210 --> 47:23.250
是哪个属性呢

47:23.250 --> 47:24.250
我们接下来

47:24.250 --> 47:25.250
来写一下

47:26.250 --> 47:27.250
我们需要设置

47:27.250 --> 47:28.250
这个Option似的

47:28.250 --> 47:29.250
哪个地方呢

47:29.250 --> 47:32.250
叫做Transform Origin

47:33.250 --> 47:35.250
变形的中心

47:35.250 --> 47:36.250
两个值

47:36.250 --> 47:38.250
第一个值是横坐标

47:38.250 --> 47:39.250
横坐标那无所谓

47:39.250 --> 47:41.250
我们就说

47:41.250 --> 47:43.250
横向在中间

47:43.250 --> 47:44.250
中向很关键

47:44.250 --> 47:45.250
中向那就是

47:45.250 --> 47:47.250
相对于顶边的距离

47:47.250 --> 47:49.250
那么一些0的话

47:49.250 --> 47:51.250
那么它的中心点就在这

47:51.250 --> 47:53.250
目前就在这

47:53.250 --> 47:54.250
那么这里的其实

47:54.250 --> 47:55.250
是我们需要的

47:55.250 --> 47:56.250
我们希望在这

47:56.250 --> 47:58.250
从这里开始拿伸

47:58.250 --> 47:59.250
所以说我们要把它

47:59.250 --> 48:00.250
收一个复数

48:00.250 --> 48:01.250
复多少呢

48:01.250 --> 48:02.250
就复十个相处

48:02.250 --> 48:03.250
因为这个高度

48:03.250 --> 48:04.250
就是十个相处

48:05.250 --> 48:06.250
讲清楚了没

48:06.250 --> 48:07.250
那么接下来

48:07.250 --> 48:08.250
我们来写一下

48:08.250 --> 48:10.250
复十个相处

48:10.250 --> 48:11.250
好 接下来

48:11.250 --> 48:12.250
我们再来看

48:12.250 --> 48:14.250
切换这个Expend

48:14.250 --> 48:15.250
你看

48:15.250 --> 48:16.250
现在是不是

48:16.250 --> 48:17.250
我们想用的效果了

48:17.250 --> 48:19.250
只是速度裂慢而已

48:20.250 --> 48:21.250
好 接下来

48:21.250 --> 48:22.250
我们再来看

48:22.250 --> 48:23.250
我们希望

48:23.250 --> 48:25.250
它在变形的过程中

48:26.250 --> 48:27.250
除了

48:27.250 --> 48:29.250
中向有拉伸

48:30.250 --> 48:31.250
而且它有一个

48:31.250 --> 48:33.250
坚引进线的效果

48:33.250 --> 48:34.250
就是一开始的

48:34.250 --> 48:35.250
它是完全透明的

48:35.250 --> 48:37.250
Opacity为0

48:39.250 --> 48:41.250
然后当我们展开之后

48:42.250 --> 48:43.250
它就变成补透明

48:43.250 --> 48:44.250
对吧

48:45.250 --> 48:46.250
好 接下来再来看

48:47.250 --> 48:48.250
Expend

48:49.250 --> 48:50.250
这样是不是

48:50.250 --> 48:51.250
更加舒服一点了

48:52.250 --> 48:53.250
更加丝滑一点

48:53.250 --> 48:54.250
对不对

48:54.250 --> 48:55.250
好 那么这个效果

48:55.250 --> 48:56.250
其实就OK了

48:56.250 --> 48:57.250
那你看一会儿

48:57.250 --> 48:58.250
JS是不是特别方便

48:58.250 --> 49:00.250
我只需要去切换

49:00.250 --> 49:02.250
Expend这个样式就完事了

49:02.250 --> 49:04.250
对吧 这个效果已经做出来了

49:05.250 --> 49:07.250
就全靠C13

49:07.250 --> 49:08.250
没有C13做这些效果

49:08.250 --> 49:09.250
真的很麻烦了

49:09.250 --> 49:10.250
然后呢

49:10.250 --> 49:11.250
接下来

49:12.250 --> 49:14.250
就是展开折叠的时候

49:14.250 --> 49:15.250
除了这个东西要变化

49:15.250 --> 49:16.250
还有这个玩意儿也要变化

49:16.250 --> 49:17.250
你看吧

49:17.250 --> 49:18.250
你看这个图标

49:19.250 --> 49:20.250
所以也要变化

49:20.250 --> 49:22.250
也就是说非常简单

49:22.250 --> 49:23.250
这个图标一开始

49:23.250 --> 49:24.250
有一个样式

49:24.250 --> 49:25.250
然后呢

49:25.250 --> 49:26.250
当它展开的时候

49:26.250 --> 49:27.250
又变成了

49:28.250 --> 49:29.250
就是该做了一个旋转

49:29.250 --> 49:30.250
对不对

49:30.250 --> 49:31.250
啥意思呢

49:31.250 --> 49:32.250
就是说

49:32.250 --> 49:33.250
这个Sennheck

49:33.250 --> 49:34.250
车里边呢

49:34.250 --> 49:35.250
如果说有一个

49:35.250 --> 49:36.250
Expend这个样式的话

49:36.250 --> 49:37.250
它里面有个图标

49:37.250 --> 49:38.250
叫icon func

49:38.250 --> 49:39.250
你给我变个型

49:40.250 --> 49:41.250
transform

49:41.250 --> 49:42.250
你不要傻不

49:42.250 --> 49:43.250
傻不垃圾呆在那儿了

49:43.250 --> 49:44.250
你给我转个圈

49:45.250 --> 49:46.250
按到什么来旋转

49:47.250 --> 49:48.250
Rotate

49:48.250 --> 49:49.250
对吧 旋转

49:49.250 --> 49:50.250
按照什么来旋转

49:50.250 --> 49:51.250
X

49:51.250 --> 49:52.250
Y

49:52.250 --> 49:53.250
还是Z

49:54.250 --> 49:55.250
怎么来旋转呢

49:56.250 --> 49:57.250
那你看

49:57.250 --> 50:00.250
这个图标要旋转

50:00.250 --> 50:01.250
是不是

50:02.250 --> 50:03.250
基于它终点

50:03.250 --> 50:04.250
这个点

50:04.250 --> 50:05.250
怎么旋转

50:06.250 --> 50:08.250
这样子旋转

50:08.250 --> 50:09.250
对不对

50:09.250 --> 50:10.250
那么是基于什么走的

50:10.250 --> 50:12.250
是不是围绕着Z走啊

50:12.250 --> 50:13.250
这个是X

50:14.250 --> 50:15.250
这个是Y

50:16.250 --> 50:18.250
是不是它是基于

50:18.250 --> 50:20.250
从这里屏幕中间

50:20.250 --> 50:22.250
穿出来的一条线来旋转的

50:22.250 --> 50:23.250
对不对

50:23.250 --> 50:24.250
所以说它是基于Z走的

50:24.250 --> 50:26.250
那么基于Z走的话

50:26.250 --> 50:28.250
我们这里就可以写RotateZ

50:28.250 --> 50:29.250
或者是不写Z

50:29.250 --> 50:31.250
默认就是基于Z走

50:31.250 --> 50:32.250
旋转多少度呢

50:32.250 --> 50:33.250
180度

50:33.250 --> 50:34.250
转个圈呗

50:34.250 --> 50:37.620
好 咱们来看一下啊

50:37.620 --> 50:38.620
又来切换的样式

50:39.620 --> 50:40.620
切换

50:40.620 --> 50:41.620
所以有旋转

50:41.620 --> 50:43.620
但是它是瞬间完成旋转

50:43.620 --> 50:44.620
不太好

50:44.620 --> 50:45.620
我们希望呢

50:45.620 --> 50:47.620
你在一段过程里面

50:47.620 --> 50:48.620
完成旋转

50:48.620 --> 50:50.620
加上切换

50:50.620 --> 50:52.620
比方说0.25秒

50:52.620 --> 50:54.620
我比较喜欢的时间段

50:54.620 --> 50:56.620
这是一个人能够看清楚

50:56.620 --> 50:58.620
反应效果的时间段

50:58.620 --> 50:59.620
然后呢

50:59.620 --> 51:00.620
我把这个时间也改一下

51:00.620 --> 51:02.620
刚才写的是1秒钟

51:02.620 --> 51:03.620
太长了

51:03.620 --> 51:04.620
现在0.25秒

51:05.620 --> 51:06.620
好 接下来我们再来看

51:06.620 --> 51:07.620
演示一下

51:08.620 --> 51:09.620
很舒服了

51:12.620 --> 51:13.620
完美

51:13.620 --> 51:14.620
还有最后一个点

51:14.620 --> 51:15.620
不着急

51:15.620 --> 51:16.620
还有最后一个点

51:16.620 --> 51:17.620
最后点是什么呢

51:17.620 --> 51:18.620
就是它还有一种状态

51:18.620 --> 51:19.620
就这种状态

51:19.620 --> 51:22.060
就这种状态

51:22.060 --> 51:23.060
它不是展开状态

51:23.060 --> 51:24.060
也不是不展开状态

51:24.060 --> 51:25.060
它是不可用的状态

51:25.060 --> 51:27.060
那么不可用的状态的话

51:27.060 --> 51:28.060
我们给另外一个特殊样式

51:28.060 --> 51:29.060
叫disabled

51:30.060 --> 51:31.060
我们自己该取个名字

51:32.060 --> 51:33.060
好 那么如果说你是

51:33.060 --> 51:34.060
这种状态的话

51:34.060 --> 51:35.060
那么它里边有些东西呢

51:35.060 --> 51:36.060
也要变

51:36.060 --> 51:38.060
首先是那个字

51:38.060 --> 51:39.060
disabled

51:40.060 --> 51:41.060
首先它里边

51:41.060 --> 51:42.060
所谓的字体颜色

51:42.060 --> 51:43.060
给它变一下

51:44.060 --> 51:45.060
给它变成一个

51:46.060 --> 51:47.060
CC

51:47.060 --> 51:48.060
跟那个边框一样的颜色

51:50.060 --> 51:51.060
这个颜色我感觉

51:51.060 --> 51:52.060
统一设字得了

51:54.060 --> 51:55.060
不在这写了颜色

51:56.060 --> 51:57.060
还有那个地方有卡了

51:57.060 --> 51:58.060
这个地方有卡了

51:58.060 --> 51:59.060
我不在这写了

52:01.060 --> 52:02.060
我在统一设字

52:02.060 --> 52:04.060
在这里统一设字的样式

52:04.060 --> 52:05.060
这样子变于后边

52:05.060 --> 52:07.060
更改这个颜色

52:07.060 --> 52:08.060
你看

52:08.060 --> 52:09.060
加上那个disabled的样式

52:09.060 --> 52:10.060
是不是变成CC了

52:11.060 --> 52:12.060
不加这个样式呢

52:14.060 --> 52:15.060
就是

52:15.060 --> 52:16.060
默认样式

52:16.060 --> 52:17.060
对吧

52:18.060 --> 52:19.060
好 那么这是颜色

52:19.060 --> 52:20.060
那除了颜色变化之外

52:20.060 --> 52:21.060
其实disabled的时候

52:21.060 --> 52:23.060
还有一个鼠标样式的变化

52:23.060 --> 52:24.060
鼠标变成

52:25.060 --> 52:26.060
not loud

52:27.060 --> 52:28.060
不可用

52:28.060 --> 52:35.600
怎么还变成咳嗽呢

52:36.600 --> 52:37.600
这个鼠标样式呢

52:37.600 --> 52:38.600
是因为我们之前

52:38.600 --> 52:40.600
在它里边的元素里边

52:40.600 --> 52:41.600
设字的鼠标样式

52:41.600 --> 52:42.600
那我这里改一下

52:43.600 --> 52:45.600
设字里边disabled的

52:45.600 --> 52:46.600
下边有一个title

52:47.600 --> 52:48.600
我们之前在这里边

52:48.600 --> 52:49.600
设字的鼠标样式

52:52.600 --> 52:53.600
你看

52:53.600 --> 52:55.600
那么现在我们整个过程

52:55.600 --> 52:57.600
你看各种样式的情况

52:57.600 --> 52:58.600
是不是全部写完了

52:58.600 --> 53:00.600
禁用状态

53:00.600 --> 53:01.600
然后呢

53:01.600 --> 53:03.600
可用正常状态

53:03.600 --> 53:05.600
然后呢展开状态

53:05.600 --> 53:06.600
所以都写完了

53:06.600 --> 53:07.600
那么接下来

53:07.600 --> 53:09.600
就是我们开始写介石了

53:09.600 --> 53:10.600
好 但是介石之前

53:10.600 --> 53:12.600
我们先把这个元素

53:12.600 --> 53:13.600
复制三个

53:13.600 --> 53:15.600
这里边的li其实可以不要了

53:15.600 --> 53:17.600
因为一会儿介石来填充

53:17.600 --> 53:21.040
这个文本其实

53:21.040 --> 53:22.040
反正一会介石

53:23.040 --> 53:25.040
介石要改的

53:26.040 --> 53:27.040
这是一个

53:27.040 --> 53:28.040
两个

53:28.040 --> 53:29.040
三个

53:30.040 --> 53:31.040
对吧

53:31.040 --> 53:32.040
我会给它取个名字

53:32.040 --> 53:34.040
网页就恢复到原来的大小

53:35.040 --> 53:36.040
我会给它们取个名字

53:36.040 --> 53:37.040
给它一个ID

53:37.040 --> 53:38.040
第一个呢

53:38.040 --> 53:39.040
就是sell

53:39.040 --> 53:40.040
是那个字

53:40.040 --> 53:41.040
province

53:41.040 --> 53:42.040
省份

53:43.040 --> 53:44.040
第二个呢

53:44.040 --> 53:46.040
是城市

53:46.040 --> 53:47.040
sell city

53:47.040 --> 53:48.040
第三个呢

53:48.040 --> 53:49.040
是

53:50.040 --> 53:51.040
area

53:51.040 --> 53:52.040
地区

53:53.040 --> 53:54.040
好了 同学们

53:54.040 --> 53:55.040
加油啊

53:55.040 --> 53:57.040
把CSS代码

53:57.040 --> 53:59.040
致使全部完成

53:59.040 --> 54:01.040
如果说有任何的疑问

54:01.040 --> 54:02.040
回看我的视频

54:02.040 --> 54:04.040
或者是参考我的元代码

54:04.040 --> 54:05.040
无论怎么样

54:05.040 --> 54:07.040
你能够把CSS代码写完

54:07.040 --> 54:08.040
能够理解

54:08.040 --> 54:09.040
你不用理解

54:09.040 --> 54:10.040
它怎么一步一步写出来的

54:10.040 --> 54:11.040
为什么我会想到

54:11.040 --> 54:12.040
你不用去理解这个

54:12.040 --> 54:13.040
你只要能够理解

54:13.040 --> 54:15.040
这样子做是可行的

54:15.040 --> 54:16.040
是没问题的

54:16.040 --> 54:17.040
你能够理解

54:17.040 --> 54:19.040
它能够产生这样的效果

54:19.040 --> 54:20.040
是OK的

54:20.040 --> 54:21.040
那么就可以了

54:21.040 --> 54:23.040
把样式布局这一块写完

54:23.040 --> 54:24.040
写完的话

54:24.040 --> 54:25.040
我们这个效果就完成了

54:25.040 --> 54:26.040
50%了

54:26.040 --> 54:27.040
好 加油啊 同学们

54:27.040 --> 54:32.980
好 好了没

54:33.980 --> 54:34.980
如果说你觉得自己

54:34.980 --> 54:35.980
现在比较累的话

54:35.980 --> 54:36.980
你可以休息10分钟

54:36.980 --> 54:37.980
休息10到20分钟

54:37.980 --> 54:38.980
再来看

54:38.980 --> 54:39.980
我们现在开始要写

54:39.980 --> 54:41.980
这个CS代码了

54:42.980 --> 54:44.980
好 写CS代码的时候

54:44.980 --> 54:45.980
先不要去看这个函数

54:46.980 --> 54:47.980
我们应该用什么样的思路

54:47.980 --> 54:48.980
因为有些同学呢

54:48.980 --> 54:51.980
一到CS代码就非常的懵圈

54:51.980 --> 54:52.980
不知道该怎么写

54:52.980 --> 54:53.980
手都下不了

54:53.980 --> 54:54.980
那你就想吧

54:54.980 --> 54:56.980
我们先不用去考虑代码

54:56.980 --> 54:57.980
我们就想

54:58.980 --> 54:59.980
这个页面

54:59.980 --> 55:01.980
它到底在做什么

55:02.980 --> 55:05.980
其实很多的这种小的效果

55:05.980 --> 55:06.980
它大致都分为

55:06.980 --> 55:09.980
这么两个大块的东西

55:09.980 --> 55:10.980
很多页面都是如此

55:10.980 --> 55:11.980
不管是复杂的页面

55:11.980 --> 55:13.980
还是简单的页面

55:13.980 --> 55:14.980
它大致都分为

55:14.980 --> 55:15.980
这里面两块东西

55:15.980 --> 55:16.980
哪两块东西呢

55:16.980 --> 55:19.980
一个是一开始

55:19.980 --> 55:21.980
我要做一些事

55:22.980 --> 55:23.980
第二个是

55:24.980 --> 55:25.980
用户

55:27.980 --> 55:29.980
做了某个操作后

55:29.980 --> 55:31.980
要做一些事

55:31.980 --> 55:33.980
你看很多页面都是这样子

55:33.980 --> 55:35.980
一开始我啥都没做

55:35.980 --> 55:36.980
页面出来就是

55:36.980 --> 55:38.980
有一些事情它就自动完成了

55:38.980 --> 55:40.980
我们把这个玩意叫做初始化

55:41.980 --> 55:43.980
用英文来说就是inlet

55:44.980 --> 55:45.980
初始化

55:45.980 --> 55:46.980
有很多的工作要做

55:46.980 --> 55:47.980
有复杂的页面

55:47.980 --> 55:48.980
它做的事情要多一些

55:48.980 --> 55:49.980
简单的页面

55:49.980 --> 55:50.980
它做的事情要少一些

55:50.980 --> 55:52.980
总之有这么一个过程

55:52.980 --> 55:53.980
用户啥都没干

55:53.980 --> 55:55.980
但是我肯定有些事情要做

55:55.980 --> 55:58.980
然后初始化完成之后

55:58.980 --> 55:59.980
用户可能点到这

55:59.980 --> 56:00.980
又点到那

56:00.980 --> 56:01.980
多点一下

56:01.980 --> 56:02.980
新点一下

56:02.980 --> 56:03.980
又移动了锁标

56:03.980 --> 56:04.980
又滚动了滚动条

56:04.980 --> 56:06.980
我们可能有一些别的事情要做

56:06.980 --> 56:08.980
无非就是这么两个东西

56:08.980 --> 56:09.980
那么第二个东西

56:09.980 --> 56:10.980
就相当于是什么

56:10.980 --> 56:12.980
相当于是各种时间

56:12.980 --> 56:15.980
注册各种时间

56:15.980 --> 56:16.980
你看说来说去

56:16.980 --> 56:19.980
页面上无非就是这么一些东西

56:19.980 --> 56:21.980
好 咱们首先来一步一步说

56:21.980 --> 56:23.980
首先是看这个页面

56:23.980 --> 56:24.980
初始化

56:24.980 --> 56:26.980
一开始我就啥都没动

56:26.980 --> 56:27.980
我双手离开键盘

56:27.980 --> 56:28.980
我就打开这个页面了

56:28.980 --> 56:29.980
它要做啥

56:31.980 --> 56:32.980
它要做啥

56:33.980 --> 56:34.980
你觉得它要做啥呢

56:35.980 --> 56:38.980
它不得把这些数据给我填充好吗

56:39.980 --> 56:40.980
对不对

56:40.980 --> 56:41.980
你看啊

56:41.980 --> 56:42.980
我们这个页面上

56:42.980 --> 56:43.980
这个元素内容都没有

56:43.980 --> 56:44.980
你看这个LOI内容都没有

56:44.980 --> 56:45.980
那一会怎么玩呢

56:45.980 --> 56:47.980
用户点了点去有什么用呢

56:48.980 --> 56:50.980
是不是我得把这个LOI给它夹进去

56:50.980 --> 56:52.980
一个一个的LOI给它夹进去

56:53.980 --> 56:55.980
所以说我们这一块要做初始化的话

56:56.980 --> 56:57.980
我们来分析一下

56:57.980 --> 56:58.980
我们要做初始化

56:58.980 --> 57:00.980
是不是有这么一些事情要做

57:02.980 --> 57:03.980
初始化

57:03.980 --> 57:04.980
什么事情

57:04.980 --> 57:05.980
就是

57:06.980 --> 57:10.980
生成很多的LOI

57:10.980 --> 57:14.980
夹到对应的列表中去

57:14.980 --> 57:15.980
对不对

57:15.980 --> 57:16.980
是不是我们要做这么一件事

57:17.980 --> 57:18.980
我们就从这个角度开始想

57:18.980 --> 57:20.980
现在你心里边一定要知道

57:20.980 --> 57:21.980
我们现在在做啥

57:21.980 --> 57:22.980
在做初始化

57:22.980 --> 57:23.980
还没有做事件

57:23.980 --> 57:24.980
你不要去想事件

57:24.980 --> 57:26.980
跟事件就没有啥关系

57:26.980 --> 57:28.980
我们先搞定初始化

57:28.980 --> 57:32.350
那么我们要生成很多的LOI

57:32.350 --> 57:33.350
那生成LOI

57:33.350 --> 57:34.350
怎么生成

57:34.350 --> 57:35.350
生成多少个呢

57:36.350 --> 57:38.350
那每个LOI里边有写啥呢

57:38.350 --> 57:39.350
写什么文字的

57:39.350 --> 57:41.350
是不是我们现在又遇到一个问题

57:41.350 --> 57:42.350
就是

57:42.350 --> 57:44.350
我们要生成省份的LOI

57:44.350 --> 57:45.350
要生成城市的LOI

57:45.350 --> 57:47.350
要生成区域的LOI

57:48.350 --> 57:50.350
数据哪来呀

57:50.350 --> 57:52.350
你得给我城市的数据

57:52.350 --> 57:54.350
我没有数据

57:54.350 --> 57:55.350
比方说你给我一个数据

57:55.350 --> 57:56.350
哪怕这个数据里面是个支付串数据

57:56.350 --> 57:57.350
我都能搞定

57:57.350 --> 57:58.350
我循环这个数据生成LOI

57:58.350 --> 57:59.350
我能搞定

57:59.350 --> 58:01.350
但是没数据

58:01.350 --> 58:03.350
你找来找去

58:03.350 --> 58:04.350
你找到它了

58:04.350 --> 58:05.350
这个函数呢

58:05.350 --> 58:07.350
是我给你写好的函数

58:07.350 --> 58:08.350
里面有些代码的

58:08.350 --> 58:09.350
你们还不认识

58:09.350 --> 58:10.350
有些知识的

58:10.350 --> 58:11.350
你们后面还要学习

58:11.350 --> 58:13.350
不过目前没有关系

58:14.350 --> 58:16.350
外面又在装修了

58:16.350 --> 58:18.350
我把窗户稍微关一下

58:22.110 --> 58:28.710
不好意思

58:28.710 --> 58:30.710
这个东西我也控制不了

58:31.710 --> 58:32.710
但是呢

58:32.710 --> 58:34.710
你们学过Promise

58:34.710 --> 58:36.710
学过Async和Away

58:36.710 --> 58:37.710
你们一定学过

58:37.710 --> 58:38.710
我给你一个函数

58:38.710 --> 58:39.710
它反回一个Promise

58:39.710 --> 58:40.710
你怎么去用它

58:40.710 --> 58:41.710
对吧

58:41.710 --> 58:42.710
你至少知道怎么去用

58:42.710 --> 58:43.710
那么这个函数

58:43.710 --> 58:44.710
你不用去看里面来吗

58:44.710 --> 58:46.710
我就告诉你了

58:46.710 --> 58:47.710
我这个函数一定要用

58:47.710 --> 58:48.710
它在干嘛呢

58:48.710 --> 58:50.710
它在获取省市的数据

58:50.710 --> 58:51.710
省市区的数据

58:51.710 --> 58:52.710
所有数据全部获取到

58:53.710 --> 58:55.710
一旦数据获取完成

58:55.710 --> 58:56.710
它反回了一定是Promise

58:56.710 --> 58:58.710
因为它是用Async标记的

58:58.710 --> 59:00.710
它反回了一定是Promise

59:00.710 --> 59:02.710
一旦数据获取完成

59:02.710 --> 59:04.710
那么Promise就完成

59:04.710 --> 59:05.710
完成之后

59:05.710 --> 59:06.710
你就会拿到一个数据

59:07.710 --> 59:09.710
有这么一个函数提供给你的

59:09.710 --> 59:10.710
你不用去管

59:10.710 --> 59:11.710
它里面怎么写的

59:11.710 --> 59:13.710
那么你怎么用

59:13.710 --> 59:15.710
是不是按照我们

59:15.710 --> 59:16.710
之前的学习

59:16.710 --> 59:18.710
是不是用了get status

59:19.710 --> 59:20.710
然后怎么样

59:21.710 --> 59:22.710
然后呢

59:22.710 --> 59:23.710
Z

59:24.710 --> 59:25.710
有两种用法

59:25.710 --> 59:27.710
一种是用传统的Promise API

59:27.710 --> 59:28.710
Z

59:28.710 --> 59:29.710
它完成之后

59:29.710 --> 59:31.710
我就可以拿到一个数据了

59:31.710 --> 59:32.710
我是不是可以写个参数

59:32.710 --> 59:33.710
这个就是我们的数据

59:33.710 --> 59:34.710
data

59:34.710 --> 59:38.540
我们来输出一下data

59:38.540 --> 59:39.540
你看一下

59:39.540 --> 59:40.540
控制台

59:40.540 --> 59:42.540
就拿到一个数据

59:42.540 --> 59:43.540
看到没

59:43.540 --> 59:44.540
你看

59:44.540 --> 59:46.540
每一项是不是一个对象

59:46.540 --> 59:48.540
对象里边有它的

59:48.540 --> 59:50.540
应该是游边

59:50.540 --> 59:52.540
然后呢就是城市的名字

59:52.540 --> 59:54.540
而这个省份的省份下面

59:54.540 --> 59:55.540
还有一个气候捲就是数

59:55.540 --> 59:56.540
我们看另外一个省份

59:57.540 --> 59:58.540
河北省

59:58.540 --> 59:59.540
你看

59:59.540 --> 01:00:01.540
河北省下面有个气候捲

01:00:01.540 --> 01:00:02.540
这个对象里边有个气候捲

01:00:02.540 --> 01:00:04.540
气候捲里边输入它的城市

01:00:04.540 --> 01:00:06.540
比如说石家庄

01:00:06.540 --> 01:00:08.540
石家庄里边是不是也有

01:00:08.540 --> 01:00:09.540
城市的名字

01:00:09.540 --> 01:00:10.540
城市的游边

01:00:10.540 --> 01:00:12.540
然后城市里边有一个气候捲

01:00:12.540 --> 01:00:14.540
是不是城市里边的区

01:00:14.540 --> 01:00:15.540
对不对

01:00:15.540 --> 01:00:16.540
所以数据拿到了

01:00:16.540 --> 01:00:17.540
也就是数据

01:00:17.540 --> 01:00:18.540
它就是一个数组

01:00:18.540 --> 01:00:20.540
数据里边放的就是所有的省份

01:00:20.540 --> 01:00:22.540
省份下面有

01:00:22.540 --> 01:00:23.540
气候捲

01:00:23.540 --> 01:00:24.540
城市

01:00:24.540 --> 01:00:26.540
城市下面有气候捲

01:00:26.540 --> 01:00:27.540
区

01:00:27.540 --> 01:00:28.540
区下面就没了

01:00:29.540 --> 01:00:31.540
就拿到这么一个东西了

01:00:31.540 --> 01:00:32.540
明白了意思吧

01:00:33.540 --> 01:00:36.540
再给你们写一下这个对象格式

01:00:37.540 --> 01:00:38.540
就相当于这个玩意儿

01:00:39.540 --> 01:00:40.540
省份

01:00:40.540 --> 01:00:41.540
我们就写一个省份吧

01:00:41.540 --> 01:00:42.540
省份

01:00:43.540 --> 01:00:45.540
Nable

01:00:46.540 --> 01:00:47.540
北京

01:00:47.540 --> 01:00:48.540
或者是四川

01:00:48.540 --> 01:00:50.540
对四川比较熟悉一点

01:00:50.540 --> 01:00:52.540
其他城市不算熟

01:00:52.540 --> 01:00:54.540
Value就是

01:00:54.540 --> 01:00:56.540
游边510000

01:00:58.540 --> 01:00:59.540
那么它的气候捲

01:00:59.540 --> 01:01:00.540
气候捲就是

01:01:00.540 --> 01:01:02.540
四川下面也有很多的

01:01:02.540 --> 01:01:03.540
城市

01:01:03.540 --> 01:01:04.540
我就写一个城市

01:01:04.540 --> 01:01:06.540
每个城市的又是个对象

01:01:06.540 --> 01:01:08.540
这变成这么一种格式了

01:01:08.540 --> 01:01:09.540
Nable

01:01:10.540 --> 01:01:11.540
程度

01:01:13.540 --> 01:01:14.540
Value

01:01:15.540 --> 01:01:16.540
随便想起

01:01:16.540 --> 01:01:18.540
然后程度下面有一个气候捲

01:01:18.540 --> 01:01:19.540
就是它的区

01:01:19.540 --> 01:01:21.540
每个区的又是个对象

01:01:22.540 --> 01:01:24.540
变成这么一种结构

01:01:24.540 --> 01:01:26.540
看上去好像代码很多的样子

01:01:26.540 --> 01:01:28.540
其实它结构非常地清晰简单

01:01:28.540 --> 01:01:29.540
就是对象里面

01:01:29.540 --> 01:01:30.540
一个气候捲

01:01:30.540 --> 01:01:32.540
可以拿到指对象数组

01:01:32.540 --> 01:01:33.540
对象里面有气候捲

01:01:33.540 --> 01:01:34.540
指对象数组

01:01:34.540 --> 01:01:35.540
就能这么一个东西

01:01:35.540 --> 01:01:36.540
以后用的时候

01:01:36.540 --> 01:01:37.540
其实没有那么复杂

01:01:38.540 --> 01:01:40.540
那么数据是不是拿到了

01:01:40.540 --> 01:01:41.540
对吧

01:01:42.540 --> 01:01:43.540
那么这是第一种写法

01:01:44.540 --> 01:01:46.540
那么第二种写法呢

01:01:46.540 --> 01:01:47.540
是不是我们可以把它放到

01:01:47.540 --> 01:01:48.540
一个函数里面去

01:01:48.540 --> 01:01:50.540
用而为者的等待它

01:01:50.540 --> 01:01:51.540
对不对

01:01:51.540 --> 01:01:52.540
那么我们这里

01:01:52.540 --> 01:01:53.540
做一下第二种写法

01:01:53.540 --> 01:01:54.540
第二种写法

01:01:54.540 --> 01:01:55.540
我们可以这样的写

01:01:55.540 --> 01:01:56.540
我们把整个代码放到

01:01:56.540 --> 01:01:57.540
一个立即执行函数里面

01:01:57.540 --> 01:01:58.540
其实这种也是一种

01:01:58.540 --> 01:01:59.540
常见的做法

01:01:59.540 --> 01:02:00.540
为了避免全局变量污染

01:02:00.540 --> 01:02:01.540
把它放到一个

01:02:01.540 --> 01:02:02.540
立即执行函数里面

01:02:06.170 --> 01:02:07.170
放到立即执行函数里面

01:02:08.170 --> 01:02:09.170
接下来

01:02:09.170 --> 01:02:10.170
我们要这里

01:02:10.170 --> 01:02:11.170
不用这种方式了

01:02:11.170 --> 01:02:12.170
我们可以用这种方式

01:02:14.860 --> 01:02:16.860
getdata

01:02:17.860 --> 01:02:18.860
你不是返回Promise吗

01:02:18.860 --> 01:02:20.860
那我就等待而为者

01:02:20.860 --> 01:02:21.860
好

01:02:21.860 --> 01:02:22.860
一旦用而为者的时候

01:02:22.860 --> 01:02:23.860
一定要注意

01:02:23.860 --> 01:02:24.860
你如果说不注意的话

01:02:24.860 --> 01:02:25.860
结果就是冒出

01:02:25.860 --> 01:02:26.860
语法错误

01:02:26.860 --> 01:02:27.860
它说

01:02:27.860 --> 01:02:28.860
而为者的关键字

01:02:28.860 --> 01:02:30.860
必须要用到而sync的方法里面

01:02:30.860 --> 01:02:31.860
所以说呢

01:02:32.860 --> 01:02:33.860
它的哪个方法里面

01:02:33.860 --> 01:02:34.860
是不是在它里面

01:02:34.860 --> 01:02:35.860
那它里面

01:02:35.860 --> 01:02:36.860
是不是可以给它

01:02:36.860 --> 01:02:37.860
标记为一个而sync

01:02:37.860 --> 01:02:38.860
当然你学到函数函数

01:02:38.860 --> 01:02:39.860
这一块

01:02:39.860 --> 01:02:40.860
也可以用函数函数

01:02:41.860 --> 01:02:42.860
哎

01:02:42.860 --> 01:02:43.860
我怎么不小心把个单

01:02:43.860 --> 01:02:44.860
挂下来

01:02:44.860 --> 01:02:45.860
可以了

01:02:45.860 --> 01:02:46.860
不要去看

01:02:46.860 --> 01:02:47.860
好

01:02:47.860 --> 01:02:48.860
那么现在我们这里呢

01:02:48.860 --> 01:02:49.860
等待它

01:02:49.860 --> 01:02:50.860
是不是可以拿到data

01:02:50.860 --> 01:02:51.860
输出data

01:02:52.860 --> 01:02:53.860
好

01:02:53.860 --> 01:02:54.860
看一下

01:02:54.860 --> 01:02:55.860
是不是一样的

01:02:55.860 --> 01:02:56.860
一样可以拿到

01:02:56.860 --> 01:02:57.860
对吧

01:02:57.860 --> 01:02:58.860
好

01:02:58.860 --> 01:02:59.860
那么第一步是完成了

01:02:59.860 --> 01:03:00.860
我们至少拿到了数据

01:03:00.860 --> 01:03:01.860
对不对

01:03:01.860 --> 01:03:02.860
远程

01:03:02.860 --> 01:03:03.860
拿数据

01:03:03.860 --> 01:03:04.860
这是一开始

01:03:04.860 --> 01:03:05.860
就要做的事情

01:03:05.860 --> 01:03:06.860
一开始就影响了

01:03:07.860 --> 01:03:09.860
拿到数据过后

01:03:09.860 --> 01:03:10.860
要生成很多的li

01:03:10.860 --> 01:03:11.860
对不对

01:03:11.860 --> 01:03:12.860
那这里

01:03:12.860 --> 01:03:13.860
问题来了

01:03:13.860 --> 01:03:15.860
我有三个下拉列表

01:03:15.860 --> 01:03:16.860
需要填充

01:03:17.860 --> 01:03:18.860
不是一个

01:03:18.860 --> 01:03:19.860
我第一个要填充li

01:03:19.860 --> 01:03:20.860
第二个要填充li

01:03:20.860 --> 01:03:21.860
第三个要填充li

01:03:22.860 --> 01:03:23.860
而且不光是

01:03:23.860 --> 01:03:25.860
这个时候要填充

01:03:25.860 --> 01:03:27.860
之后也要填充

01:03:28.860 --> 01:03:29.860
对不对

01:03:29.860 --> 01:03:30.860
那么现在的问题

01:03:30.860 --> 01:03:31.860
要不然

01:03:31.860 --> 01:03:32.860
我们先不着急讲了

01:03:32.860 --> 01:03:33.860
大家先写代吧

01:03:33.860 --> 01:03:35.860
写成这个样子再说

01:03:35.860 --> 01:03:36.860
理解为什么

01:03:36.860 --> 01:03:37.860
怎么一步一步写成

01:03:37.860 --> 01:03:38.860
这个样子的

01:03:38.860 --> 01:03:39.860
先写我等你

01:03:40.860 --> 01:03:41.860
好了没

01:03:41.860 --> 01:03:42.860
那么接着讲

01:03:42.860 --> 01:03:43.860
就是我们现在

01:03:43.860 --> 01:03:44.860
接下来要填充下拉列表

01:03:44.860 --> 01:03:46.860
有三个下拉列表

01:03:46.860 --> 01:03:47.860
需要填充

01:03:47.860 --> 01:03:48.860
不是一个

01:03:48.860 --> 01:03:49.860
那么这三个点

01:03:49.860 --> 01:03:50.860
下拉列表

01:03:50.860 --> 01:03:51.860
填充的时候差不多的

01:03:51.860 --> 01:03:53.860
有多少区别呢

01:03:53.860 --> 01:03:54.860
你说区别大吗

01:03:54.860 --> 01:03:55.860
填充省份

01:03:55.860 --> 01:03:56.860
你给我一个数字

01:03:56.860 --> 01:03:57.860
我就填充省份了

01:03:57.860 --> 01:03:58.860
填充城市

01:03:58.860 --> 01:03:59.860
你给我一个数字

01:03:59.860 --> 01:04:00.860
我就填充城市

01:04:00.860 --> 01:04:01.860
对吧

01:04:01.860 --> 01:04:02.860
所以说我们这一块

01:04:02.860 --> 01:04:03.860
其实可以把

01:04:03.860 --> 01:04:04.860
填充下拉列表

01:04:04.860 --> 01:04:05.860
这个操作

01:04:05.860 --> 01:04:07.860
写成一个函数

01:04:07.860 --> 01:04:08.860
我这里无非就是

01:04:08.860 --> 01:04:09.860
调用三个函数就完成了

01:04:09.860 --> 01:04:10.860
对吧

01:04:10.860 --> 01:04:11.860
因此

01:04:11.860 --> 01:04:15.500
我这里写一个函数

01:04:15.500 --> 01:04:16.500
方形

01:04:17.500 --> 01:04:18.500
给他取个名字

01:04:18.500 --> 01:04:19.500
叫做feal

01:04:20.500 --> 01:04:22.500
填充省那个城

01:04:22.500 --> 01:04:23.500
下拉列表

01:04:26.320 --> 01:04:29.320
填充某个下拉列表

01:04:29.320 --> 01:04:30.320
那么你要告诉我

01:04:30.320 --> 01:04:32.320
哪些东西我就能填充

01:04:32.320 --> 01:04:33.320
因为我不知道

01:04:33.320 --> 01:04:34.320
首先你一个

01:04:34.320 --> 01:04:35.320
你我不知道

01:04:35.320 --> 01:04:36.320
到底要填充哪个下拉列表

01:04:36.320 --> 01:04:37.320
你跟着我的思路走

01:04:37.320 --> 01:04:38.320
一定要跟着我的思路走

01:04:38.320 --> 01:04:39.320
你不要想着

01:04:39.320 --> 01:04:40.320
我这为什么

01:04:40.320 --> 01:04:41.320
做出来

01:04:41.320 --> 01:04:42.320
为什么还没有时间

01:04:42.320 --> 01:04:43.320
你要这样子想就蒙了

01:04:43.320 --> 01:04:44.320
你不要去想其他的

01:04:44.320 --> 01:04:46.320
你一定要跟着我的思路走

01:04:46.320 --> 01:04:48.320
我到底要填充哪个下拉列表

01:04:48.320 --> 01:04:49.320
我不知道吗

01:04:49.320 --> 01:04:51.320
那你是不是可以传给我

01:04:51.320 --> 01:04:52.320
对吧

01:04:52.320 --> 01:04:53.320
那么第1个参数

01:04:53.320 --> 01:04:54.320
你给我传一个下拉列表进来

01:04:54.320 --> 01:04:56.320
你传的哪个下拉列表

01:04:56.320 --> 01:04:58.320
我就填充哪一个

01:04:58.320 --> 01:04:59.320
那么给了我下拉列表

01:04:59.320 --> 01:05:00.320
我就知道怎么填充了吗

01:05:00.320 --> 01:05:01.320
那不一定

01:05:01.320 --> 01:05:02.320
我也不知道

01:05:02.320 --> 01:05:04.320
我填充的数据是什么

01:05:04.320 --> 01:05:05.320
有些数据在这

01:05:05.320 --> 01:05:06.320
那数据

01:05:06.320 --> 01:05:07.320
这里边有省份

01:05:07.320 --> 01:05:08.320
有城市

01:05:08.320 --> 01:05:09.320
还有地区

01:05:09.320 --> 01:05:10.320
我到底要填充哪一个

01:05:10.320 --> 01:05:11.320
我也不知道

01:05:11.320 --> 01:05:13.320
所以你给我一个数据

01:05:13.320 --> 01:05:16.320
就是Nest

01:05:16.320 --> 01:05:20.530
打个注释

01:05:20.530 --> 01:05:21.530
生那个词

01:05:21.530 --> 01:05:25.530
这是要填充的下拉列表

01:05:25.530 --> 01:05:30.220
第二个Nest

01:05:30.220 --> 01:05:32.220
这是要填充

01:05:32.220 --> 01:05:35.220
就是被填充的数据

01:05:35.220 --> 01:05:38.220
数据是一个数据

01:05:38.220 --> 01:05:39.220
那么我们来

01:05:39.220 --> 01:05:40.220
有了数据

01:05:40.220 --> 01:05:41.220
有了下拉列表过后

01:05:41.220 --> 01:05:42.220
那是不是

01:05:42.220 --> 01:05:44.220
这下拉列表就指的是这个

01:05:44.220 --> 01:05:45.220
要么是这个DIV

01:05:45.220 --> 01:05:46.220
要么是这个DIV

01:05:46.220 --> 01:05:48.220
要么是这个DIV

01:05:48.220 --> 01:05:49.220
对不对

01:05:49.220 --> 01:05:50.220
我们一步一步来

01:05:50.220 --> 01:05:51.220
慢慢来

01:05:51.220 --> 01:05:54.220
我们是不是只需要找到这个DIV

01:05:54.220 --> 01:05:56.220
你给了我一个DIV

01:05:56.220 --> 01:05:57.220
就这个DIV

01:05:57.220 --> 01:05:58.220
要么就是他

01:05:58.220 --> 01:05:59.220
反正都一样

01:05:59.220 --> 01:06:00.220
结构

01:06:00.220 --> 01:06:01.220
我就找这个DIV

01:06:01.220 --> 01:06:04.220
下边的UL元素

01:06:04.220 --> 01:06:06.220
是不是找他

01:06:06.220 --> 01:06:07.220
因此我们

01:06:07.220 --> 01:06:09.220
第一步要找到UL元素

01:06:09.220 --> 01:06:10.220
怎么找

01:06:10.220 --> 01:06:12.220
我们用H5的API

01:06:12.220 --> 01:06:13.220
是那个词

01:06:13.220 --> 01:06:15.220
用query is a negative

01:06:15.220 --> 01:06:16.220
是不是在这个元素里边

01:06:16.220 --> 01:06:20.220
去寻找什么Options

01:06:20.220 --> 01:06:22.220
就是寻到那个UL

01:06:22.220 --> 01:06:23.220
对不对

01:06:23.220 --> 01:06:25.220
那么拿到这个UL

01:06:25.220 --> 01:06:26.220
不用打注释了吧

01:06:26.220 --> 01:06:28.220
这个名字一看就知道了

01:06:28.220 --> 01:06:30.220
拿到这个UL

01:06:30.220 --> 01:06:32.220
拿到这个UL之后

01:06:32.220 --> 01:06:34.220
那么我们是不是可以

01:06:34.220 --> 01:06:35.220
循环的

01:06:35.220 --> 01:06:36.220
循环什么

01:06:36.220 --> 01:06:38.220
循环这个数据

01:06:38.220 --> 01:06:39.220
然后呢

01:06:39.220 --> 01:06:40.220
每循环一次

01:06:40.220 --> 01:06:41.220
生成一个LI

01:06:41.220 --> 01:06:42.220
给他加进去

01:06:42.220 --> 01:06:44.220
是不是可以这样子

01:06:44.220 --> 01:06:45.220
当然可以这样子

01:06:45.220 --> 01:06:46.220
对吧

01:06:46.220 --> 01:06:47.220
那我们来试一下

01:06:47.220 --> 01:06:48.220
我们可以循环

01:06:48.220 --> 01:06:49.220
用什么循环呢

01:06:49.220 --> 01:06:50.220
我们可以用for2个循环

01:06:50.220 --> 01:06:51.220
循环什么

01:06:51.220 --> 01:06:52.220
循环列室

01:06:52.220 --> 01:06:53.220
列室是什么

01:06:53.220 --> 01:06:54.220
就是一个数组

01:06:54.220 --> 01:06:58.520
数组什么格式

01:06:58.520 --> 01:07:00.520
数组就是这样的格式

01:07:00.520 --> 01:07:01.520
就这样的格式

01:07:01.520 --> 01:07:02.520
有可能你给我一个

01:07:02.520 --> 01:07:03.520
省份的数组

01:07:03.520 --> 01:07:04.520
也有可能你会给我

01:07:04.520 --> 01:07:06.520
某一个指数组

01:07:06.520 --> 01:07:07.520
比方说

01:07:07.520 --> 01:07:08.520
你可能给我指数

01:07:08.520 --> 01:07:09.520
它结构都是一样的

01:07:09.520 --> 01:07:10.520
都是一个value

01:07:10.520 --> 01:07:11.520
一个nabel

01:07:11.520 --> 01:07:12.520
对吧

01:07:12.520 --> 01:07:13.520
就是这两个属性

01:07:13.520 --> 01:07:14.520
我要用

01:07:14.520 --> 01:07:15.520
其实value我都用不到

01:07:15.520 --> 01:07:16.520
我就要它的nabel

01:07:16.520 --> 01:07:17.520
所以说我每一循环

01:07:17.520 --> 01:07:18.520
数组的每一项是一个什么

01:07:18.520 --> 01:07:19.520
是一个对象

01:07:19.520 --> 01:07:23.920
我们输出一下吧

01:07:23.920 --> 01:07:24.920
obj

01:07:24.920 --> 01:07:25.920
输出一下obj

01:07:25.920 --> 01:07:27.920
循环列室

01:07:27.920 --> 01:07:28.920
好

01:07:28.920 --> 01:07:29.920
比方说

01:07:29.920 --> 01:07:30.920
这个函数就写好了

01:07:30.920 --> 01:07:31.920
那么我们接下来

01:07:31.920 --> 01:07:32.920
用一下这个函数

01:07:32.920 --> 01:07:33.920
拿到数据

01:07:33.920 --> 01:07:34.920
接下来

01:07:34.920 --> 01:07:35.920
我来填充

01:07:35.920 --> 01:07:36.920
首先填充第1个下拉列表

01:07:36.920 --> 01:07:37.920
第1个下拉列表

01:07:37.920 --> 01:07:38.920
在哪呢

01:07:38.920 --> 01:07:39.920
在这

01:07:39.920 --> 01:07:40.920
给他一个id

01:07:41.920 --> 01:07:42.920
那么我得到一下动物元素

01:07:42.920 --> 01:07:43.920
这里有

01:07:43.920 --> 01:07:44.920
这三个动物元素

01:07:44.920 --> 01:07:45.920
所以说我这里可以

01:07:45.920 --> 01:07:46.920
先提前把动物元素

01:07:46.920 --> 01:07:47.920
全部过去

01:07:47.920 --> 01:07:48.920
一个是sale

01:07:48.920 --> 01:07:49.920
pervance

01:07:49.920 --> 01:07:50.920
我们可以用

01:07:52.920 --> 01:07:53.920
document

01:07:54.920 --> 01:07:55.920
get element by id

01:07:55.920 --> 01:07:57.920
拿到这个sale

01:07:57.920 --> 01:07:58.920
pervance

01:07:59.920 --> 01:08:00.920
三个

01:08:00.920 --> 01:08:02.920
sale city

01:08:02.920 --> 01:08:04.920
一共就三个下拉列表

01:08:04.920 --> 01:08:06.920
sale area

01:08:06.920 --> 01:08:11.600
那么把这个动物

01:08:11.600 --> 01:08:12.600
放到对象里边

01:08:12.600 --> 01:08:13.600
那么接下来

01:08:13.600 --> 01:08:14.600
我们这里

01:08:14.600 --> 01:08:15.600
首先填充谁

01:08:15.600 --> 01:08:16.600
首先填充

01:08:16.600 --> 01:08:18.600
sale province

01:08:18.600 --> 01:08:19.600
先把这个搞定

01:08:19.600 --> 01:08:20.600
其他都差不多

01:08:20.600 --> 01:08:21.600
然后数组是什么

01:08:21.600 --> 01:08:22.600
数组

01:08:22.600 --> 01:08:23.600
这个不就是省份数组吗

01:08:27.600 --> 01:08:28.600
我们来看一下

01:08:28.600 --> 01:08:29.600
控制才打印的

01:08:29.600 --> 01:08:30.600
打印了很多的objects

01:08:30.600 --> 01:08:31.600
在循环他

01:08:31.600 --> 01:08:32.600
每个objects

01:08:32.600 --> 01:08:33.600
是不是一个省份

01:08:34.600 --> 01:08:35.600
对不对

01:08:35.600 --> 01:08:36.600
你给我一个数组

01:08:36.600 --> 01:08:37.600
我就把数组循环

01:08:37.600 --> 01:08:38.600
每循环一次去

01:08:38.600 --> 01:08:39.600
生成一个li

01:08:39.600 --> 01:08:40.600
给填充进去

01:08:40.600 --> 01:08:41.600
那么这里边

01:08:41.600 --> 01:08:42.600
我们怎么来生成

01:08:42.600 --> 01:08:43.600
li

01:08:43.600 --> 01:08:44.600
li

01:08:44.600 --> 01:08:45.600
用什么

01:08:45.600 --> 01:08:46.600
document

01:08:46.600 --> 01:08:47.600
create elements

01:08:47.600 --> 01:08:48.600
创建个li

01:08:48.600 --> 01:08:49.600
然后呢

01:08:49.600 --> 01:08:50.600
每个li

01:08:50.600 --> 01:08:51.600
是不是给他设置一下

01:08:51.600 --> 01:08:52.600
innerpacks

01:08:52.600 --> 01:08:53.600
设置为什么

01:08:53.600 --> 01:08:54.600
ovj的什么label

01:08:54.600 --> 01:08:55.600
你可以看一下

01:08:55.600 --> 01:08:56.600
对象结构

01:08:56.600 --> 01:08:57.600
对象里面不是一个属性label吗

01:08:57.600 --> 01:08:58.600
是他的文本

01:08:58.600 --> 01:08:59.600
然后把这个li

01:08:59.600 --> 01:09:00.600
加到哪儿去

01:09:00.600 --> 01:09:01.600
加到这个ul里面去

01:09:01.600 --> 01:09:03.600
append child

01:09:03.600 --> 01:09:04.600
我讲的很细

01:09:04.600 --> 01:09:05.600
很慢

01:09:05.600 --> 01:09:06.600
就希望大家每一行

01:09:06.600 --> 01:09:07.600
代码都能理解

01:09:07.600 --> 01:09:08.600
它什么意思

01:09:08.600 --> 01:09:09.600
好 将来我们来看一下

01:09:09.600 --> 01:09:10.600
点这个肯定没反应

01:09:10.600 --> 01:09:11.600
我都还没注册实现

01:09:11.600 --> 01:09:13.600
我们看一下这个元素结构

01:09:13.600 --> 01:09:15.600
看ul里面说有了

01:09:15.600 --> 01:09:16.600
说有了

01:09:16.600 --> 01:09:17.600
只不过目前是隐藏了

01:09:17.600 --> 01:09:18.600
对吧

01:09:18.600 --> 01:09:19.600
那我给他加上一个li

01:09:19.600 --> 01:09:22.600
加上一个spender样式

01:09:22.600 --> 01:09:23.600
你看

01:09:23.600 --> 01:09:25.600
数据有了

01:09:25.600 --> 01:09:27.600
其实就已经出来了

01:09:27.600 --> 01:09:29.600
就数据又填充进去

01:09:29.600 --> 01:09:30.600
好

01:09:30.600 --> 01:09:33.600
那么这是这一块

01:09:33.600 --> 01:09:34.600
好

01:09:34.600 --> 01:09:35.600
那么大家呢

01:09:35.600 --> 01:09:36.600
现在呢

01:09:36.600 --> 01:09:37.600
又跟着写一下

01:09:37.600 --> 01:09:38.600
把它写成这个样子

01:09:38.600 --> 01:09:39.600
跟着写

01:09:39.600 --> 01:09:40.600
有什么问题

01:09:40.600 --> 01:09:41.600
觉得哪里不明白的地方了

01:09:41.600 --> 01:09:43.600
就可以回看一下视频

01:09:43.600 --> 01:09:45.600
或者看一下元代

01:09:45.600 --> 01:09:46.600
确保自己

01:09:46.600 --> 01:09:47.600
每一行都能理解

01:09:47.600 --> 01:09:50.600
至少能够听懂

01:09:50.600 --> 01:09:51.600
好了没

01:09:51.600 --> 01:09:52.600
好 接下来

01:09:52.600 --> 01:09:54.600
我给大家介绍一种新的方式

01:09:54.600 --> 01:09:55.600
就这种方式

01:09:55.600 --> 01:09:56.600
行不行

01:09:56.600 --> 01:09:57.600
当然可以

01:09:57.600 --> 01:09:58.600
用es6的425循环

01:09:58.600 --> 01:09:59.600
特别方便

01:09:59.600 --> 01:10:01.600
但是我们也可以用别的方式

01:10:01.600 --> 01:10:02.600
比方说

01:10:02.600 --> 01:10:03.600
我其实也可以用

01:10:03.600 --> 01:10:04.600
一种非常简单的方式

01:10:04.600 --> 01:10:05.600
就是给这个ul

01:10:05.600 --> 01:10:07.600
设置什么Inner

01:10:07.600 --> 01:10:09.600
ATM

01:10:09.600 --> 01:10:11.600
我是不是生成一个制服串

01:10:11.600 --> 01:10:12.600
就是我生成一个

01:10:12.600 --> 01:10:14.600
就是他的InnerATM有制服串

01:10:14.600 --> 01:10:15.600
就是通过li

01:10:15.600 --> 01:10:16.600
评论出来的制服串

01:10:16.600 --> 01:10:19.600
放进去不就完了吗

01:10:19.600 --> 01:10:21.600
那怎么来生成

01:10:21.600 --> 01:10:23.600
一位同学能够一行代码写出来

01:10:23.600 --> 01:10:27.040
这里其实可以一行代码写出来

01:10:27.040 --> 01:10:29.040
看着啊

01:10:29.040 --> 01:10:31.040
这里不是一个数组吗

01:10:31.040 --> 01:10:32.040
你看啊

01:10:32.040 --> 01:10:33.040
数组的每一项是啥

01:10:33.040 --> 01:10:36.040
每一项不就是个对象吗

01:10:36.040 --> 01:10:39.040
数组的每一项

01:10:39.040 --> 01:10:40.040
数组的每一项

01:10:40.040 --> 01:10:41.040
是一个什么

01:10:41.040 --> 01:10:42.040
一个对象

01:10:42.040 --> 01:10:43.040
里边有个Label属性

01:10:43.040 --> 01:10:44.040
一个对象

01:10:44.040 --> 01:10:45.040
里边有个Label属性

01:10:45.040 --> 01:10:47.040
我无非就是把这个数组

01:10:47.040 --> 01:10:49.040
变成一个什么呢

01:10:49.040 --> 01:10:51.040
变成一个制服串的数组

01:10:51.040 --> 01:10:53.040
每个制服串是一个li

01:10:53.040 --> 01:10:56.040
li里边拼上一个文本

01:10:56.040 --> 01:10:57.040
对吧

01:10:57.040 --> 01:10:58.040
然后呢

01:10:58.040 --> 01:10:59.040
第二个数组

01:10:59.040 --> 01:11:00.040
数组的第二项也是一样

01:11:00.040 --> 01:11:01.040
这是啥呀

01:11:01.040 --> 01:11:02.040
同学们

01:11:02.040 --> 01:11:03.040
这是啥呀

01:11:03.040 --> 01:11:08.340
我就用这个耳根

01:11:08.340 --> 01:11:09.340
剑头啊

01:11:09.340 --> 01:11:11.340
这是个啥呀

01:11:11.340 --> 01:11:12.340
这是不是Map映射

01:11:12.340 --> 01:11:14.340
把数组原来的那一项

01:11:14.340 --> 01:11:16.340
生成一个新的项

01:11:16.340 --> 01:11:17.340
是不是映射

01:11:17.340 --> 01:11:18.340
来吧

01:11:18.340 --> 01:11:20.340
既然知道的是映射

01:11:20.340 --> 01:11:22.340
那这个代码怎么写

01:11:22.340 --> 01:11:23.340
Map

01:11:23.340 --> 01:11:24.340
数组的每一项

01:11:24.340 --> 01:11:25.340
ob界

01:11:25.340 --> 01:11:26.340
这个对象

01:11:26.340 --> 01:11:28.340
然后我给它返回的是什么呢

01:11:28.340 --> 01:11:31.340
返回的是一个li

01:11:31.340 --> 01:11:32.340
li里边的内容

01:11:32.340 --> 01:11:33.340
是不是我可以用

01:11:33.340 --> 01:11:35.340
模板制服出来拼接

01:11:35.340 --> 01:11:36.340
拼接什么

01:11:36.340 --> 01:11:38.340
拼接ob界的内部

01:11:38.340 --> 01:11:39.340
好

01:11:39.340 --> 01:11:41.340
看一下返回的是什么东西

01:11:41.340 --> 01:11:43.340
蕊兆子

01:11:43.340 --> 01:11:45.340
输出蕊兆子

01:11:45.340 --> 01:11:46.340
好看一下

01:11:46.340 --> 01:11:48.340
它返回的是什么呢

01:11:48.340 --> 01:11:50.340
就变成这样的一个数组了

01:11:50.340 --> 01:11:52.340
每一个对象变成了个什么li

01:11:52.340 --> 01:11:54.340
一个字部串

01:11:54.340 --> 01:11:56.340
接下来我要做什么

01:11:56.340 --> 01:11:57.340
同学们

01:11:57.340 --> 01:11:58.340
接下来我要做什么

01:11:58.340 --> 01:12:00.340
我无非就是把这个数组

01:12:00.340 --> 01:12:03.710
来一个教育

01:12:03.710 --> 01:12:04.710
空字部串

01:12:04.710 --> 01:12:06.710
用一个空字部串来拼接

01:12:06.710 --> 01:12:08.710
把数的每一项连接在一起了

01:12:08.710 --> 01:12:10.710
看一下

01:12:10.710 --> 01:12:11.710
所以连接成这个样子的

01:12:11.710 --> 01:12:13.710
然后呢我去设置什么

01:12:13.710 --> 01:12:14.710
设置什么

01:12:14.710 --> 01:12:16.710
设置一个ULO的

01:12:16.710 --> 01:12:18.710
Inner 80秒

01:12:19.710 --> 01:12:21.710
甚至我哪能用这个

01:12:21.710 --> 01:12:23.710
直接来

01:12:23.710 --> 01:12:25.710
一行代码数写出来了

01:12:25.710 --> 01:12:27.710
看一下我们看远处结构

01:12:32.600 --> 01:12:34.600
都出来了对不对

01:12:34.600 --> 01:12:36.600
那么这填充li

01:12:36.600 --> 01:12:38.600
是不是搞定的

01:12:38.600 --> 01:12:40.600
它还有很多细节

01:12:40.600 --> 01:12:41.600
还不着急

01:12:41.600 --> 01:12:42.600
有很多细节

01:12:42.600 --> 01:12:43.600
一点点来

01:12:43.600 --> 01:12:45.600
翻腰一口一口吃

01:12:45.600 --> 01:12:47.600
路要一步一步走

01:12:47.600 --> 01:12:48.600
肚子脉太大了

01:12:48.600 --> 01:12:50.600
走一丑的蛋

01:12:50.600 --> 01:12:52.600
还有什么问题呢

01:12:52.600 --> 01:12:54.600
所以那个提示文字

01:12:54.600 --> 01:12:56.600
勤选择啥

01:12:56.600 --> 01:12:57.600
啥呢

01:12:57.600 --> 01:12:59.600
我也不知道是啥

01:12:59.600 --> 01:13:01.600
我也不知道到底勤选择啥

01:13:01.600 --> 01:13:03.600
那么勤选择啥呢

01:13:03.600 --> 01:13:05.600
这里的文字是什么

01:13:05.600 --> 01:13:06.600
我不知道

01:13:06.600 --> 01:13:07.600
它有可能是城市

01:13:07.600 --> 01:13:08.600
有可能是省份

01:13:08.600 --> 01:13:09.600
有可能是地区

01:13:09.600 --> 01:13:10.600
文字不知道

01:13:10.600 --> 01:13:12.600
这个文字又怎么办呢

01:13:12.600 --> 01:13:14.600
两种做法

01:13:14.600 --> 01:13:15.600
第一种做法

01:13:15.600 --> 01:13:18.600
你可以通过一个参数传进来

01:13:18.600 --> 01:13:19.600
你告诉我这个文字是

01:13:19.600 --> 01:13:20.600
城市

01:13:20.600 --> 01:13:21.600
省份

01:13:21.600 --> 01:13:22.600
地区

01:13:22.600 --> 01:13:24.600
还有什么玩意

01:13:24.600 --> 01:13:26.600
通过外面调用的

01:13:26.600 --> 01:13:27.600
多传参数

01:13:27.600 --> 01:13:28.600
那么这里的

01:13:28.600 --> 01:13:29.600
比方说有一个参数的话

01:13:29.600 --> 01:13:30.600
你多传个省份

01:13:30.600 --> 01:13:31.600
那我就把省份的两个字

01:13:31.600 --> 01:13:32.600
写到这后边

01:13:32.600 --> 01:13:34.600
这是一种做法

01:13:34.600 --> 01:13:36.600
另外一种做法

01:13:36.600 --> 01:13:38.600
是这样

01:13:38.600 --> 01:13:40.600
我在元素里边

01:13:40.600 --> 01:13:42.600
用一个自定义属性

01:13:42.600 --> 01:13:44.600
比方说我们可以用

01:13:44.600 --> 01:13:46.600
H5的自定义属性

01:13:46.600 --> 01:13:48.600
叫Data

01:13:50.600 --> 01:13:53.600
比方说叫做Name

01:13:53.600 --> 01:13:59.220
这是省份

01:13:59.220 --> 01:14:01.220
这是城市

01:14:01.220 --> 01:14:03.220
有时候可能没见过这个玩意

01:14:03.220 --> 01:14:04.220
简单说一下

01:14:04.220 --> 01:14:05.220
非常简单

01:14:05.220 --> 01:14:06.220
非常非常简单

01:14:06.220 --> 01:14:08.220
地区

01:14:08.220 --> 01:14:09.220
这就是一个自定义属性

01:14:09.220 --> 01:14:10.220
对吧

01:14:10.220 --> 01:14:11.220
如果说以前的话

01:14:11.220 --> 01:14:12.220
自定义属性

01:14:12.220 --> 01:14:13.220
ABC

01:14:13.220 --> 01:14:14.220
随便你自己定义

01:14:14.220 --> 01:14:15.220
自定义属性

01:14:15.220 --> 01:14:16.220
它也不

01:14:16.220 --> 01:14:17.220
对这个显示

01:14:17.220 --> 01:14:18.220
也不产生任何的影响

01:14:18.220 --> 01:14:19.220
但是既也是

01:14:19.220 --> 01:14:21.220
可以获取到它

01:14:21.220 --> 01:14:22.220
就这么个意思

01:14:22.220 --> 01:14:23.220
以前这么获取的

01:14:23.220 --> 01:14:24.220
以前可以用这个

01:14:24.220 --> 01:14:26.220
比方说我就这样写的话

01:14:26.220 --> 01:14:27.220
以前可以用这个

01:14:27.220 --> 01:14:30.220
Dom.getAttribute

01:14:30.220 --> 01:14:31.220
Data.Name

01:14:31.220 --> 01:14:32.220
对吧

01:14:32.220 --> 01:14:33.220
以前可以用这种方式获取

01:14:33.220 --> 01:14:34.220
现在仍然可以用

01:14:34.220 --> 01:14:36.220
这种方式获取

01:14:36.220 --> 01:14:37.220
但是现在的获取方式呢

01:14:37.220 --> 01:14:38.220
有了

01:14:38.220 --> 01:14:40.220
看上去更舒服的方式

01:14:40.220 --> 01:14:43.220
叫做DataSet.Name

01:14:43.220 --> 01:14:45.220
这种方式得到的结果

01:14:45.220 --> 01:14:47.220
跟它的结果完全一样

01:14:47.220 --> 01:14:49.220
完全一样

01:14:49.220 --> 01:14:50.220
这种方式是不是看上去

01:14:50.220 --> 01:14:51.220
就没有什么

01:14:51.220 --> 01:14:53.220
就不用去写个字幕刷了

01:14:53.220 --> 01:14:54.220
反正我看上去

01:14:54.220 --> 01:14:55.220
更加喜欢这种方式

01:14:55.220 --> 01:14:57.220
都是A7V的API

01:14:57.220 --> 01:14:58.220
但是前例条件

01:14:58.220 --> 01:14:59.220
你这个自定义属性的名字

01:14:59.220 --> 01:15:00.220
必须要以Data

01:15:00.220 --> 01:15:01.220
轰钢开头

01:15:01.220 --> 01:15:02.220
你才能用这种方式获取

01:15:02.220 --> 01:15:03.220
如果说你给我

01:15:03.220 --> 01:15:04.220
乱取个什么ABC

01:15:04.220 --> 01:15:06.220
那这种方式获取不到的

01:15:06.220 --> 01:15:07.220
好

01:15:07.220 --> 01:15:08.220
那么现在呢

01:15:08.220 --> 01:15:13.870
我们用这种方式来获取它

01:15:13.870 --> 01:15:14.870
我们现在不是

01:15:14.870 --> 01:15:15.870
要显示这个文字吗

01:15:15.870 --> 01:15:17.870
那么我现在来获取一下

01:15:17.870 --> 01:15:19.870
就是来通过这个

01:15:19.870 --> 01:15:22.870
DataSet.Name

01:15:22.870 --> 01:15:23.870
是不是可以拿到它的

01:15:23.870 --> 01:15:25.870
什么提示文字

01:15:25.870 --> 01:15:29.180
TapName

01:15:29.180 --> 01:15:31.180
获取提示文字

01:15:31.180 --> 01:15:34.180
获取提示文字

01:15:34.180 --> 01:15:39.970
好 输出TapName

01:15:39.970 --> 01:15:40.970
后台你看

01:15:40.970 --> 01:15:41.970
拿到省份

01:15:41.970 --> 01:15:42.970
目前是省份的下来列表

01:15:42.970 --> 01:15:43.970
拿到省份的名字

01:15:43.970 --> 01:15:45.970
好 拿到这个名字之后呢

01:15:45.970 --> 01:15:47.970
我们是不是可以找到

01:15:47.970 --> 01:15:48.970
它里边的什么

01:15:48.970 --> 01:15:49.970
Span元素

01:15:49.970 --> 01:15:50.970
对吧

01:15:50.970 --> 01:15:52.970
好 我们接下来找一找

01:15:52.970 --> 01:15:54.970
找到这个显示文字的Span元素

01:15:54.970 --> 01:15:55.970
在哪呢

01:15:55.970 --> 01:15:56.970
在Snagger社下面的

01:15:56.970 --> 01:15:58.970
querySnagger社下面的

01:15:58.970 --> 01:16:00.970
就是找到它里面的

01:16:00.970 --> 01:16:02.970
title下面的Span

01:16:02.970 --> 01:16:03.970
Span

01:16:03.970 --> 01:16:04.970
好 然后呢

01:16:04.970 --> 01:16:05.970
五份就是

01:16:05.970 --> 01:16:06.970
设置一下这个Span

01:16:06.970 --> 01:16:08.970
Inner

01:16:08.970 --> 01:16:09.970
Tag社

01:16:09.970 --> 01:16:11.970
它里面没有什么其他结构

01:16:12.970 --> 01:16:13.970
就是

01:16:13.970 --> 01:16:15.970
请选择什么呢

01:16:15.970 --> 01:16:16.970
拼接一下

01:16:16.970 --> 01:16:17.970
TapName

01:16:17.970 --> 01:16:19.970
你看 这个事情是不是有搞定了

01:16:20.970 --> 01:16:21.970
好 那么大家呢

01:16:21.970 --> 01:16:23.970
可以先暂停一下视频

01:16:23.970 --> 01:16:25.970
先搞定到这个步骤

01:16:25.970 --> 01:16:26.970
你只能这样做

01:16:26.970 --> 01:16:27.970
如果全部听完了

01:16:27.970 --> 01:16:28.970
再在座的话

01:16:28.970 --> 01:16:29.970
可能你啥都想不起来了

01:16:29.970 --> 01:16:31.970
趁着打铁 赶快写

01:16:35.500 --> 01:16:36.500
好了没

01:16:36.500 --> 01:16:37.500
好 那接下来

01:16:37.500 --> 01:16:39.500
试考下一个问题

01:16:39.500 --> 01:16:41.500
哎呀 这个下拉列表田

01:16:41.500 --> 01:16:43.500
它不是它只有它一个

01:16:43.500 --> 01:16:45.500
还有别的下拉列表也要填充

01:16:45.500 --> 01:16:46.500
对吧

01:16:47.500 --> 01:16:49.500
我的效果跑到去了

01:16:49.500 --> 01:16:51.500
我的效果怎么把关

01:16:51.500 --> 01:16:56.220
别的下拉列表也要填充

01:16:56.220 --> 01:16:58.220
城市也得填充

01:16:58.220 --> 01:17:00.220
区域也得填充

01:17:00.220 --> 01:17:02.220
我们现在只填充了省份

01:17:02.220 --> 01:17:03.220
那么很简单

01:17:03.220 --> 01:17:05.220
我们不是写了这么一个函数吧

01:17:05.220 --> 01:17:06.220
它可以填充任何的下拉列表

01:17:06.220 --> 01:17:07.220
不是只能填充省份

01:17:07.220 --> 01:17:09.220
因此我就马上写

01:17:09.220 --> 01:17:12.220
我要填充城市City

01:17:12.220 --> 01:17:14.220
我还要填充什么

01:17:14.220 --> 01:17:17.220
还要填充那个地区

01:17:17.220 --> 01:17:19.220
写到这你马上就发现

01:17:19.220 --> 01:17:20.220
麻烦是事来了

01:17:20.220 --> 01:17:22.220
其实也没多少麻烦

01:17:22.220 --> 01:17:25.220
就是遇到一些不一样的地方

01:17:25.220 --> 01:17:27.220
怎么不一样呢

01:17:27.220 --> 01:17:30.220
一开始我能填充城市吗

01:17:30.220 --> 01:17:32.220
我跑哪去填充城市

01:17:32.220 --> 01:17:33.220
我填充哪个省份的城市

01:17:33.220 --> 01:17:34.220
你不能说我一开始

01:17:34.220 --> 01:17:35.220
把所有省份的城市

01:17:35.220 --> 01:17:36.220
全部填充进来

01:17:36.220 --> 01:17:37.220
那我疯弄了

01:17:37.220 --> 01:17:39.220
你看这边效果是怎么做的

01:17:39.220 --> 01:17:40.220
一开始

01:17:40.220 --> 01:17:42.220
城市是没法填充的

01:17:43.220 --> 01:17:45.220
你必须要选择了省份之后

01:17:45.220 --> 01:17:46.220
才能填充

01:17:46.220 --> 01:17:47.220
没意思吧

01:17:47.220 --> 01:17:49.220
所以说我们可以预见到

01:17:49.220 --> 01:17:50.220
将来我们事件里边

01:17:50.220 --> 01:17:52.220
也会用到这个函数

01:17:52.220 --> 01:17:53.220
也点击到一某一个省份

01:17:53.220 --> 01:17:55.220
我要重新填充城市

01:17:55.220 --> 01:17:57.220
我可能要重新填充地区

01:17:57.220 --> 01:17:58.220
点击到一个城市

01:17:58.220 --> 01:17:59.220
我要重新填充地区

01:17:59.220 --> 01:18:00.220
对吧

01:18:00.220 --> 01:18:02.220
所以说这个函数是非常通用的

01:18:02.220 --> 01:18:04.220
它可以记在初始化的时候

01:18:04.220 --> 01:18:05.220
要运行

01:18:05.220 --> 01:18:07.220
有可能在某些点击事件过后

01:18:07.220 --> 01:18:08.220
它也要运行

01:18:08.220 --> 01:18:10.220
它运行的方式很多的

01:18:10.220 --> 01:18:12.220
那么我们现在就考虑一开始的情况

01:18:12.220 --> 01:18:14.220
一开始我是不是没法填充城市

01:18:14.220 --> 01:18:16.220
那怎么办

01:18:16.220 --> 01:18:17.220
这里很简单

01:18:17.220 --> 01:18:18.220
我们这样处理

01:18:19.220 --> 01:18:21.220
我这个函数约定

01:18:21.220 --> 01:18:24.220
如果数组为空

01:18:24.220 --> 01:18:26.220
就是你没有给我东西

01:18:26.220 --> 01:18:28.220
则表示

01:18:29.220 --> 01:18:30.220
不填充

01:18:31.220 --> 01:18:32.220
禁用

01:18:32.220 --> 01:18:33.220
就这个地方已经不能点

01:18:33.220 --> 01:18:34.220
因为没数据点

01:18:34.220 --> 01:18:35.220
它也没用

01:18:35.220 --> 01:18:37.220
所以说呢

01:18:37.220 --> 01:18:39.220
我们这里呢

01:18:39.220 --> 01:18:41.220
就给它一个空数组

01:18:41.220 --> 01:18:43.220
一开始是没有办法填充城市

01:18:43.220 --> 01:18:45.220
也没有办法填充地区

01:18:47.660 --> 01:18:50.660
一开始无法填充城市

01:18:52.660 --> 01:18:54.660
一开始无法填充地区

01:18:54.660 --> 01:18:55.660
对吧

01:18:55.660 --> 01:18:56.660
也没选择吗

01:18:56.660 --> 01:18:57.660
好

01:18:57.660 --> 01:18:58.660
那么这边来了

01:18:58.660 --> 01:18:59.660
这是不是要判断

01:18:59.660 --> 01:19:02.660
如果说这个城市的下拉列表

01:19:02.660 --> 01:19:04.660
就这个城市的数据

01:19:04.660 --> 01:19:05.660
数组是空的

01:19:05.660 --> 01:19:07.660
那么表示是禁用状态

01:19:07.660 --> 01:19:08.660
我是不是要给它

01:19:09.660 --> 01:19:10.660
判断一下

01:19:10.660 --> 01:19:11.660
如果说

01:19:13.660 --> 01:19:14.660
等于0

01:19:15.660 --> 01:19:16.660
是不是禁用

01:19:17.660 --> 01:19:18.660
你没东西

01:19:18.660 --> 01:19:19.660
否则的话是正常的

01:19:19.660 --> 01:19:20.660
因此呢

01:19:20.660 --> 01:19:21.660
我们这个禁用怎么写呢

01:19:21.660 --> 01:19:22.660
就可以这样写

01:19:24.660 --> 01:19:26.660
为什么

01:19:26.660 --> 01:19:28.660
它不是有那个央视吗

01:19:28.660 --> 01:19:29.660
央视那个时候

01:19:29.660 --> 01:19:30.660
不是还加了

01:19:30.660 --> 01:19:31.660
就加加一个央视

01:19:34.660 --> 01:19:36.660
然后正常的情况下

01:19:36.660 --> 01:19:37.660
就是那个

01:19:38.660 --> 01:19:39.660
对吧

01:19:39.660 --> 01:19:40.660
当然这个代码的

01:19:40.660 --> 01:19:41.660
也可以一句话写完

01:19:43.970 --> 01:19:44.970
维持那个城

01:19:44.970 --> 01:19:45.970
然后后边这个呢

01:19:45.970 --> 01:19:46.970
我拼接一下

01:19:46.970 --> 01:19:47.970
这样子写

01:19:50.410 --> 01:19:51.410
有了ES6

01:19:51.410 --> 01:19:53.410
很多代码就可以变得很简洁了

01:19:53.410 --> 01:19:54.410
后边呢

01:19:56.410 --> 01:19:58.410
用三目运算服

01:19:59.410 --> 01:20:00.410
有值吗

01:20:00.410 --> 01:20:01.410
有值的话

01:20:01.410 --> 01:20:02.410
那就啥都没有

01:20:02.410 --> 01:20:03.410
没有值的话

01:20:03.410 --> 01:20:04.410
是不是等于0

01:20:04.410 --> 01:20:05.410
等于0的情况下

01:20:05.410 --> 01:20:06.410
就是disable

01:20:07.410 --> 01:20:09.410
我把这个三目运算服的运行结果

01:20:09.410 --> 01:20:10.410
要么就是个控制不确

01:20:10.410 --> 01:20:11.410
要么就是个disable的

01:20:11.410 --> 01:20:12.410
拼接到这个位置

01:20:13.410 --> 01:20:14.410
你看这样子进来

01:20:14.410 --> 01:20:15.410
是不是这两个

01:20:15.410 --> 01:20:16.410
就是禁用状态了

01:20:16.410 --> 01:20:17.410
那么最开始

01:20:17.410 --> 01:20:18.410
最初始的状态是不是完成了

01:20:18.410 --> 01:20:19.410
就已经完成了

01:20:20.410 --> 01:20:22.410
那么看初始状态代码有多少人

01:20:22.410 --> 01:20:23.410
其实没多少

01:20:23.410 --> 01:20:24.410
就是有一些

01:20:24.410 --> 01:20:26.410
后来的动物很简单吧

01:20:26.410 --> 01:20:27.410
然后得到数据

01:20:27.410 --> 01:20:28.410
这个数据呢

01:20:28.410 --> 01:20:29.410
得到方法具体怎么写的

01:20:29.410 --> 01:20:30.410
不用管

01:20:30.410 --> 01:20:31.410
只需要怎么知道

01:20:31.410 --> 01:20:32.410
怎么去用就行了

01:20:32.410 --> 01:20:33.410
拿到数据

01:20:33.410 --> 01:20:34.410
拿到数据过后呢

01:20:34.410 --> 01:20:35.410
我要填充填充

01:20:35.410 --> 01:20:37.410
我要初始发码进行填充

01:20:38.410 --> 01:20:39.410
好

01:20:39.410 --> 01:20:40.410
填充的时候

01:20:40.410 --> 01:20:41.410
我有三个点

01:20:41.410 --> 01:20:42.410
我就把它抽象成一个方法

01:20:42.410 --> 01:20:43.410
因为我的填充方式

01:20:43.410 --> 01:20:44.410
都是差不多的

01:20:45.410 --> 01:20:46.410
而且这个方法呢

01:20:46.410 --> 01:20:48.410
不仅仅是初始化的时候雕用

01:20:49.410 --> 01:20:51.410
该方法急剧

01:20:52.410 --> 01:21:01.260
急剧

01:21:01.260 --> 01:21:02.260
通用性

01:21:04.260 --> 01:21:07.260
不仅是初始化

01:21:07.260 --> 01:21:08.260
可以雕用

01:21:09.260 --> 01:21:11.260
之后在某些事件中

01:21:11.260 --> 01:21:12.260
也可以雕用

01:21:12.260 --> 01:21:13.260
对吧

01:21:13.260 --> 01:21:15.260
有这个方法就很多事情就很方便了

01:21:15.260 --> 01:21:17.260
像我们点击了某一个省份

01:21:17.260 --> 01:21:18.260
点了省份过后

01:21:18.260 --> 01:21:19.260
是不是要重新填充城市

01:21:19.260 --> 01:21:20.260
一重新填充

01:21:20.260 --> 01:21:21.260
我就掉一个方法

01:21:21.260 --> 01:21:22.260
给我一个下拉列表

01:21:22.260 --> 01:21:23.260
拿下拉列表

01:21:23.260 --> 01:21:24.260
填充什么样的数据

01:21:24.260 --> 01:21:25.260
一给我

01:21:25.260 --> 01:21:26.260
我就帮你填充了

01:21:26.260 --> 01:21:27.260
非常的方便

01:21:27.260 --> 01:21:28.260
好

01:21:28.260 --> 01:21:29.260
我们这个方法

01:21:29.260 --> 01:21:30.260
只要你写完

01:21:30.260 --> 01:21:31.260
你就不用去想它了

01:21:31.260 --> 01:21:32.260
不要你写完那个方法

01:21:32.260 --> 01:21:33.260
抽死了都没问题了

01:21:33.260 --> 01:21:34.260
脑袋里边还一直在想

01:21:34.260 --> 01:21:35.260
这个方法

01:21:35.260 --> 01:21:36.260
里边到底怎么实现的

01:21:36.260 --> 01:21:37.260
不用去想它了

01:21:37.260 --> 01:21:38.260
如果说你这个方法

01:21:38.260 --> 01:21:39.260
容易忘记的话

01:21:39.260 --> 01:21:40.260
你就把注释写

01:21:40.260 --> 01:21:41.260
一会儿就看着注释

01:21:41.260 --> 01:21:42.260
干活就行了

01:21:42.260 --> 01:21:43.260
这个方法已经写好了

01:21:43.260 --> 01:21:44.260
只要你掉了它

01:21:44.260 --> 01:21:45.260
给我一个下拉列表

01:21:45.260 --> 01:21:46.260
给我一个数据

01:21:46.260 --> 01:21:47.260
我就帮你填充

01:21:47.260 --> 01:21:48.260
好

01:21:48.260 --> 01:21:49.260
那么这个方法就写完了

01:21:49.260 --> 01:21:50.260
接下来呢

01:21:50.260 --> 01:21:51.260
我们接下来

01:21:51.260 --> 01:21:52.260
就是第一步

01:21:52.260 --> 01:21:53.260
就已经完成了

01:21:53.260 --> 01:21:54.260
初始化

01:21:54.260 --> 01:21:55.260
已经完成了

01:21:55.260 --> 01:21:56.260
大家可以暂停视频

01:21:56.260 --> 01:21:58.260
把这个城市和地区

01:21:58.260 --> 01:21:59.260
也给它写上

01:22:01.260 --> 01:22:02.260
好了没

01:22:02.260 --> 01:22:03.260
好

01:22:03.260 --> 01:22:04.260
那么接下来

01:22:04.260 --> 01:22:05.260
初始化完成了

01:22:05.260 --> 01:22:06.260
过后

01:22:06.260 --> 01:22:08.260
我们就要开始注册时间了

01:22:08.260 --> 01:22:10.260
各种各样乱七八糟的时间

01:22:10.260 --> 01:22:11.260
要开始注册了

01:22:12.260 --> 01:22:13.260
好那么这里呢

01:22:13.260 --> 01:22:15.260
我们来想一想注册时间

01:22:15.260 --> 01:22:16.260
第二步

01:22:17.260 --> 01:22:19.260
注册时间

01:22:20.260 --> 01:22:21.260
你看

01:22:21.260 --> 01:22:23.260
这三个下拉列表的事件

01:22:23.260 --> 01:22:24.260
是不是差不多的

01:22:24.260 --> 01:22:25.260
有没有去差别

01:22:25.260 --> 01:22:26.260
肯定有差别

01:22:26.260 --> 01:22:27.260
比方说

01:22:27.260 --> 01:22:28.260
选择省份

01:22:29.260 --> 01:22:30.260
选择完了过后

01:22:30.260 --> 01:22:31.260
我要重新填充城市

01:22:31.260 --> 01:22:32.260
对吧

01:22:32.260 --> 01:22:33.260
区域呢

01:22:33.260 --> 01:22:34.260
我得进用

01:22:34.260 --> 01:22:35.260
选择了城市过后

01:22:35.260 --> 01:22:37.260
我得重新填充区域

01:22:37.260 --> 01:22:38.260
肯定有区别的

01:22:38.260 --> 01:22:40.260
但是那有没有通用的东西

01:22:40.260 --> 01:22:41.260
那肯定有

01:22:42.260 --> 01:22:43.260
点它

01:22:44.260 --> 01:22:45.260
跟点它

01:22:45.260 --> 01:22:46.260
是不是都要打开一个东西

01:22:46.260 --> 01:22:47.260
对吧

01:22:47.260 --> 01:22:48.260
跟点它

01:22:48.260 --> 01:22:49.260
是不是都要打开一个

01:22:49.260 --> 01:22:50.260
选择区

01:22:50.260 --> 01:22:51.260
对不对

01:22:51.260 --> 01:22:52.260
这个是没有差别的

01:22:53.260 --> 01:22:55.260
好另外呢

01:22:55.260 --> 01:22:56.260
你看点它的

01:22:56.260 --> 01:22:57.260
就是我要给它

01:22:57.260 --> 01:22:58.260
做一些央视的

01:22:58.260 --> 01:22:59.260
控制之类的东西

01:22:59.260 --> 01:23:00.260
都基本上是通用的

01:23:00.260 --> 01:23:01.260
所以他们注册

01:23:01.260 --> 01:23:03.260
这些事件有差别

01:23:03.260 --> 01:23:04.260
也有通用

01:23:05.260 --> 01:23:06.260
那么既然有通用

01:23:06.260 --> 01:23:07.260
我就先搞定通用

01:23:08.260 --> 01:23:09.260
我先把那些

01:23:09.260 --> 01:23:10.260
通用的事件处理

01:23:10.260 --> 01:23:11.260
全给你写好

01:23:11.260 --> 01:23:12.260
有差别的

01:23:12.260 --> 01:23:13.260
我再单独处理

01:23:13.260 --> 01:23:14.260
所以说我这里

01:23:14.260 --> 01:23:15.260
又来写个函数

01:23:15.260 --> 01:23:16.260
不然的话

01:23:16.260 --> 01:23:17.260
我重复代码就会很多

01:23:17.260 --> 01:23:19.260
在软件开发里边

01:23:19.260 --> 01:23:21.260
有一个规则叫做

01:23:21.260 --> 01:23:22.260
DRY

01:23:22.260 --> 01:23:23.260
转

01:23:23.260 --> 01:23:24.260
什么叫

01:23:24.260 --> 01:23:25.260
downed

01:23:26.260 --> 01:23:27.260
repeat

01:23:29.260 --> 01:23:30.260
yourself

01:23:30.260 --> 01:23:32.260
不要反复的

01:23:32.260 --> 01:23:33.260
重复你自己

01:23:34.260 --> 01:23:36.900
现在我们写个函数

01:23:36.900 --> 01:23:37.900
来专门来注册事件

01:23:37.900 --> 01:23:38.900
这个函数

01:23:38.900 --> 01:23:39.900
我给它取个名字叫做

01:23:39.900 --> 01:23:40.900
regist

01:23:40.900 --> 01:23:41.900
reg

01:23:41.900 --> 01:23:42.900
注册

01:23:43.900 --> 01:23:44.900
common

01:23:44.900 --> 01:23:45.900
公共的

01:23:46.900 --> 01:23:47.900
event

01:23:47.900 --> 01:23:52.130
注册

01:23:53.130 --> 01:23:56.130
公共的事件处理

01:23:56.130 --> 01:23:57.130
就是相同的那部分

01:23:57.130 --> 01:23:58.130
我全在这里给你处理

01:23:59.130 --> 01:24:00.130
当然

01:24:00.130 --> 01:24:01.130
你要给我哪个下拉列表

01:24:01.130 --> 01:24:02.130
我又不知道

01:24:02.130 --> 01:24:03.130
哪个下拉列表要注册事件

01:24:03.130 --> 01:24:04.130
你给我一个下拉列表

01:24:04.130 --> 01:24:05.130
也就是这个DV

01:24:05.130 --> 01:24:06.130
你给我一个DV

01:24:06.130 --> 01:24:08.130
我就帮你注册事件

01:24:09.130 --> 01:24:10.130
然后

01:24:11.130 --> 01:24:12.130
还要给我啥

01:24:12.130 --> 01:24:13.130
其他就不需要给我啥了

01:24:13.130 --> 01:24:14.130
对吧

01:24:14.130 --> 01:24:15.130
我就帮你注册事件

01:24:16.130 --> 01:24:17.130
这里注册事件的时候

01:24:17.130 --> 01:24:18.130
我先注册公共的事件

01:24:18.130 --> 01:24:19.130
是不是就可以repeat

01:24:19.130 --> 01:24:20.130
common

01:24:20.130 --> 01:24:21.130
event

01:24:21.130 --> 01:24:22.130
dorms

01:24:23.130 --> 01:24:25.130
sale province

01:24:26.130 --> 01:24:27.130
三个

01:24:27.130 --> 01:24:28.130
sale city

01:24:29.130 --> 01:24:31.130
sale

01:24:32.130 --> 01:24:33.130
area

01:24:34.130 --> 01:24:35.130
三个下拉列表都要注册事件

01:24:35.130 --> 01:24:37.130
所以说我把这三个

01:24:37.130 --> 01:24:38.130
都调整一次

01:24:38.130 --> 01:24:39.130
好

01:24:39.130 --> 01:24:40.130
那么接下来我要进行

01:24:40.130 --> 01:24:41.130
事件处理

01:24:41.130 --> 01:24:42.130
一个个来

01:24:42.130 --> 01:24:43.130
首先是

01:24:43.130 --> 01:24:44.130
第一个问题

01:24:45.130 --> 01:24:46.130
我们要注册哪些事件

01:24:48.130 --> 01:24:49.130
你看我们是不是

01:24:49.130 --> 01:24:50.130
要注册两个

01:24:50.130 --> 01:24:51.130
一个是点它

01:24:52.130 --> 01:24:53.130
就点这个title

01:24:55.130 --> 01:24:56.130
除了它之外

01:24:56.130 --> 01:24:57.130
我们还要注册一个

01:24:57.130 --> 01:24:59.130
点它里边的li的时候

01:24:59.130 --> 01:25:00.130
对吧

01:25:00.130 --> 01:25:01.130
也就是我们可以用个

01:25:01.130 --> 01:25:02.130
事件委托

01:25:02.130 --> 01:25:03.130
给这个ur注册事件

01:25:03.130 --> 01:25:04.130
一个是给这个

01:25:04.130 --> 01:25:05.130
title注册事件

01:25:05.130 --> 01:25:06.130
一个是给ur

01:25:06.130 --> 01:25:07.130
所以说

01:25:07.130 --> 01:25:08.130
分成两步

01:25:08.130 --> 01:25:09.130
第一步

01:25:09.130 --> 01:25:10.130
title

01:25:10.130 --> 01:25:11.130
点击事件

01:25:13.130 --> 01:25:14.130
第二步

01:25:15.130 --> 01:25:16.130
UL

01:25:16.130 --> 01:25:17.130
点击事件

01:25:17.130 --> 01:25:18.130
两步走

01:25:18.130 --> 01:25:19.130
第一步

01:25:19.130 --> 01:25:20.130
title

01:25:20.130 --> 01:25:21.130
点title的时候

01:25:21.130 --> 01:25:22.130
我们是不是

01:25:22.130 --> 01:25:24.130
要获取到这个title吗

01:25:24.130 --> 01:25:25.130
title

01:25:25.130 --> 01:25:26.130
怎么获取呢

01:25:26.130 --> 01:25:27.130
就是

01:25:27.130 --> 01:25:28.130
这个下拉列表

01:25:28.130 --> 01:25:29.130
获取到

01:25:29.130 --> 01:25:30.130
上面前面都获取了很多事

01:25:30.130 --> 01:25:31.130
对吧

01:25:31.130 --> 01:25:32.130
团是那个团

01:25:32.130 --> 01:25:33.130
然后点title

01:25:33.130 --> 01:25:34.130
加上字幕

01:25:42.300 --> 01:25:43.300
好 找到这个title

01:25:43.300 --> 01:25:45.300
然后给大家注册点击事件

01:25:45.300 --> 01:25:47.300
add event listener

01:25:48.300 --> 01:25:49.300
click

01:25:49.300 --> 01:25:50.300
点击事件

01:25:50.300 --> 01:25:52.300
我们可以用那个

01:25:53.300 --> 01:25:54.300
多用一下那个

01:25:54.300 --> 01:25:55.300
箭头函数吧

01:25:56.300 --> 01:25:57.300
这个意气是没必要的

01:26:01.000 --> 01:26:03.000
好 给这个title注册点击事件

01:26:03.000 --> 01:26:04.000
好 注册点击

01:26:04.000 --> 01:26:05.000
点击的时候要干嘛

01:26:07.000 --> 01:26:08.000
点击的时候很简单

01:26:08.000 --> 01:26:09.000
我要把下面那个打开

01:26:09.000 --> 01:26:10.000
也就是说

01:26:10.000 --> 01:26:11.000
什么要下面的打开

01:26:11.000 --> 01:26:12.000
我们之前是不是写过样式

01:26:12.000 --> 01:26:13.000
给它加上一个spend

01:26:15.000 --> 01:26:16.000
再点击的时候

01:26:16.000 --> 01:26:17.000
去掉一个spend

01:26:17.000 --> 01:26:18.000
再点击的时候

01:26:18.000 --> 01:26:19.000
加上一个spend

01:26:19.000 --> 01:26:20.000
再点去掉

01:26:21.000 --> 01:26:22.000
这是什么呀

01:26:22.000 --> 01:26:23.000
H5的

01:26:25.000 --> 01:26:28.000
H5的class nest

01:26:28.000 --> 01:26:29.000
togo

01:26:30.000 --> 01:26:31.000
什么

01:26:31.000 --> 01:26:32.000
一个spend

01:26:32.000 --> 01:26:33.000
就完了

01:26:35.000 --> 01:26:36.000
有就加

01:26:36.000 --> 01:26:37.000
有就去

01:26:37.000 --> 01:26:38.000
没有就加

01:26:38.000 --> 01:26:39.000
对吧

01:26:39.000 --> 01:26:40.000
来 我们来看一下

01:26:41.000 --> 01:26:42.000
这个玩意可以搞定了

01:26:43.000 --> 01:26:44.000
可以搞定了

01:26:44.000 --> 01:26:45.000
对不对

01:26:46.000 --> 01:26:47.000
但是你会发现

01:26:47.000 --> 01:26:49.000
有些地方还会出问题

01:26:49.000 --> 01:26:50.000
首先第一个问题

01:26:51.000 --> 01:26:53.000
我点它的时候

01:26:53.000 --> 01:26:55.000
是不是没有把其他的隐藏

01:26:55.000 --> 01:26:56.000
对吧

01:26:56.000 --> 01:26:58.000
是不是没有把其他的spend隐藏

01:26:59.000 --> 01:27:00.000
没问题吧

01:27:00.000 --> 01:27:01.000
所以说

01:27:01.000 --> 01:27:03.000
我点它的时候

01:27:03.000 --> 01:27:05.000
我除了

01:27:05.000 --> 01:27:07.000
就是要把

01:27:07.000 --> 01:27:10.000
就是除了把自己展开和折叠之外

01:27:10.000 --> 01:27:11.000
我只要一点它

01:27:11.000 --> 01:27:13.000
就要把其他的全部隐藏

01:27:13.000 --> 01:27:14.000
就除了自己之外

01:27:14.000 --> 01:27:15.000
其他的

01:27:15.000 --> 01:27:17.000
展开的全部隐藏

01:27:18.000 --> 01:27:19.000
那又怎么办呢

01:27:20.000 --> 01:27:21.000
怎么办呢

01:27:21.000 --> 01:27:22.000
是不是

01:27:22.000 --> 01:27:23.000
我们这里的也简单

01:27:23.000 --> 01:27:24.000
用document

01:27:25.000 --> 01:27:26.000
choice legato

01:27:26.000 --> 01:27:28.000
选择所有的下达列表

01:27:29.000 --> 01:27:31.000
包含一個spend的样式的

01:27:31.000 --> 01:27:33.000
找到目前所有的

01:27:34.000 --> 01:27:35.000
bend

01:27:35.000 --> 01:27:37.890
这是什么意思

01:27:38.890 --> 01:27:39.890
先去

01:27:40.890 --> 01:27:43.890
先找到所有目前已展开的

01:27:45.890 --> 01:27:46.890
的下达列表

01:27:47.890 --> 01:27:49.890
比方说目前展开了很多个

01:27:50.890 --> 01:27:51.890
我点它的时候

01:27:51.890 --> 01:27:52.890
现在我要点它

01:27:52.890 --> 01:27:53.890
点的时候我要找到

01:27:53.890 --> 01:27:55.890
目前所有已经展开的下达列表

01:27:57.890 --> 01:27:58.890
然后呢

01:27:58.890 --> 01:27:59.890
要去掉自己

01:27:59.890 --> 01:28:00.890
对吧

01:28:00.890 --> 01:28:01.890
你自己不能

01:28:01.890 --> 01:28:02.890
不能参与操作

01:28:02.890 --> 01:28:03.890
因为自己后面还有

01:28:03.890 --> 01:28:04.890
这个东西在控制

01:28:04.890 --> 01:28:06.890
就是除了它自己之外的

01:28:06.890 --> 01:28:07.890
已经展开的下达列表

01:28:07.890 --> 01:28:08.890
是不是它和它

01:28:08.890 --> 01:28:09.890
把这些下达列表

01:28:09.890 --> 01:28:10.890
全部给我折叠起来

01:28:10.890 --> 01:28:11.890
也是去掉

01:28:11.890 --> 01:28:12.890
一个spend

01:28:12.890 --> 01:28:13.890
对吧

01:28:13.890 --> 01:28:14.890
好

01:28:14.890 --> 01:28:15.890
那么这个玩意

01:28:15.890 --> 01:28:16.890
我是不是可以把

01:28:16.890 --> 01:28:17.890
要把自己去掉

01:28:18.890 --> 01:28:19.890
是不是要把自己去掉

01:28:19.890 --> 01:28:20.890
那么我们可以

01:28:20.890 --> 01:28:21.890
这里的可以用for all

01:28:21.890 --> 01:28:22.890
循环吗

01:28:22.890 --> 01:28:23.890
很简单啊

01:28:23.890 --> 01:28:25.890
sale

01:28:26.890 --> 01:28:28.890
循环所有已经展开的

01:28:28.890 --> 01:28:29.890
目前已经展开的

01:28:29.890 --> 01:28:30.890
然后呢

01:28:30.890 --> 01:28:31.890
看一下

01:28:31.890 --> 01:28:32.890
它只要不是自己就行

01:28:33.890 --> 01:28:34.890
只要它不等于

01:28:35.890 --> 01:28:36.890
是那个

01:28:36.890 --> 01:28:37.890
这就是自己

01:28:37.890 --> 01:28:38.890
目前处理的是它

01:28:38.890 --> 01:28:39.890
对吧

01:28:39.890 --> 01:28:40.890
只要它不等于自己

01:28:40.890 --> 01:28:41.890
那么怎么办

01:28:41.890 --> 01:28:43.890
就把它的class list

01:28:43.890 --> 01:28:44.890
remove

01:28:44.890 --> 01:28:45.890
去掉这个spend

01:28:47.890 --> 01:28:48.890
除了自己之外

01:28:48.890 --> 01:28:49.890
全部折叠

01:28:49.890 --> 01:28:50.890
就这个意思

01:28:50.890 --> 01:28:51.890
现在再看

01:28:55.650 --> 01:28:57.650
这里好像出了问题

01:28:57.650 --> 01:28:58.650
我看一下

01:28:58.650 --> 01:29:02.180
看一下有没有报错

01:29:02.180 --> 01:29:03.180
有报错

01:29:03.180 --> 01:29:04.180
它说

01:29:04.180 --> 01:29:06.180
expend is not a twitter

01:29:07.180 --> 01:29:09.180
这里要用crisis

01:29:10.180 --> 01:29:11.180
好

01:29:11.180 --> 01:29:12.180
你看

01:29:12.180 --> 01:29:13.180
现在我点它的时候

01:29:13.180 --> 01:29:14.180
是不是它就折叠起来了

01:29:14.180 --> 01:29:15.180
点它的时候

01:29:15.180 --> 01:29:16.180
它就折叠起来了

01:29:16.180 --> 01:29:17.180
你看

01:29:17.180 --> 01:29:18.180
就可以

01:29:19.180 --> 01:29:20.180
这没问题了

01:29:20.180 --> 01:29:21.180
对吧

01:29:21.180 --> 01:29:22.180
就是我点

01:29:22.180 --> 01:29:23.180
再说一说

01:29:23.180 --> 01:29:24.180
我点它的时候

01:29:24.180 --> 01:29:25.180
我先找到之前

01:29:25.180 --> 01:29:27.180
就是所有已经展开的

01:29:27.180 --> 01:29:28.180
下大列表

01:29:28.180 --> 01:29:29.180
除了它自己之外

01:29:29.180 --> 01:29:30.180
全部折叠

01:29:30.180 --> 01:29:32.180
然后再操作自己

01:29:32.180 --> 01:29:33.180
它自己是展开就折叠

01:29:33.180 --> 01:29:35.180
它折叠就展开

01:29:35.180 --> 01:29:36.180
就这么一个逻辑

01:29:36.180 --> 01:29:37.180
好

01:29:37.180 --> 01:29:38.180
那么我等一下大家

01:29:38.180 --> 01:29:40.180
把这一块代码写好

01:29:40.180 --> 01:29:41.180
我们的整个程序

01:29:41.180 --> 01:29:42.180
它再复杂

01:29:42.180 --> 01:29:44.180
也是有很多简单的东西

01:29:44.180 --> 01:29:45.180
组合而成的

01:29:45.180 --> 01:29:46.180
一步一步出来的

01:29:46.180 --> 01:29:47.180
好

01:29:47.180 --> 01:29:48.180
先写

01:29:48.180 --> 01:29:50.740
好了没

01:29:50.740 --> 01:29:51.740
好

01:29:51.740 --> 01:29:52.740
那么这一块搞定了之后

01:29:52.740 --> 01:29:53.740
展开折叠的没有什么问题了

01:29:53.740 --> 01:29:54.740
但是

01:29:54.740 --> 01:29:55.740
我们还可以再继续

01:29:55.740 --> 01:29:56.740
探讨一下

01:29:56.740 --> 01:29:57.740
你看它已经是

01:29:57.740 --> 01:29:58.740
禁用状态了

01:29:58.740 --> 01:29:59.740
它能展开吗

01:29:59.740 --> 01:30:00.740
当然这里

01:30:00.740 --> 01:30:01.740
我就没有考虑

01:30:01.740 --> 01:30:02.740
什么禁用状态

01:30:02.740 --> 01:30:03.740
因为它不能

01:30:03.740 --> 01:30:04.740
永远是禁用

01:30:04.740 --> 01:30:05.740
它将来有天

01:30:05.740 --> 01:30:06.740
总会启用的

01:30:06.740 --> 01:30:07.740
启用状态

01:30:07.740 --> 01:30:08.740
它就是一个逻辑

01:30:08.740 --> 01:30:09.740
是禁用状态

01:30:09.740 --> 01:30:10.740
是不是不能操作

01:30:10.740 --> 01:30:11.740
因此

01:30:11.740 --> 01:30:12.740
如果说在前面

01:30:12.740 --> 01:30:13.740
再判断一下

01:30:13.740 --> 01:30:16.740
禁用状态下

01:30:16.740 --> 01:30:18.740
无法操作

01:30:18.740 --> 01:30:19.740
不能点击

01:30:19.740 --> 01:30:20.740
那怎么办

01:30:20.740 --> 01:30:21.740
判断一下

01:30:21.740 --> 01:30:22.740
你当前这个

01:30:22.740 --> 01:30:23.740
那个词

01:30:23.740 --> 01:30:24.740
里边是不是包

01:30:24.740 --> 01:30:25.740
它的内样式

01:30:25.740 --> 01:30:26.740
是不是包含

01:30:26.740 --> 01:30:27.740
contents

01:30:27.740 --> 01:30:28.740
就是h5的API

01:30:28.740 --> 01:30:29.740
忘了就查文档

01:30:29.740 --> 01:30:30.740
它的内样式里边

01:30:30.740 --> 01:30:32.740
是不是包含了disabled

01:30:32.740 --> 01:30:34.740
disabled

01:30:34.740 --> 01:30:36.740
如果说包含了disabled

01:30:36.740 --> 01:30:37.740
说明什么

01:30:37.740 --> 01:30:38.740
禁用状态

01:30:38.740 --> 01:30:39.740
不要说任何处理

01:30:39.740 --> 01:30:40.740
结束

01:30:40.740 --> 01:30:41.740
那么这样子

01:30:41.740 --> 01:30:42.740
你看这点

01:30:42.740 --> 01:30:43.740
就没反应了

01:30:44.740 --> 01:30:46.740
看省份这里就有反应

01:30:46.740 --> 01:30:48.740
那么至此

01:30:48.740 --> 01:30:50.740
Title这一块就搞定了

01:30:50.740 --> 01:30:51.740
好

01:30:51.740 --> 01:30:52.740
大家现在把Title这一块

01:30:52.740 --> 01:30:53.740
写到这儿

01:30:53.740 --> 01:30:54.740
喜欢

01:30:54.740 --> 01:30:55.740
反复的测试一下

01:30:55.740 --> 01:30:56.740
体会美剧代码的含义

01:30:56.740 --> 01:30:58.740
它怎么一步步出来的

01:30:58.740 --> 01:30:59.740
然后体会一下

01:30:59.740 --> 01:31:00.740
整个代码结构

01:31:00.740 --> 01:31:05.460
肯定是这样子

01:31:05.460 --> 01:31:08.460
那个程序思维训练

01:31:08.460 --> 01:31:09.460
它肯定会让大家

01:31:09.460 --> 01:31:11.460
觉得有一些不舒服

01:31:11.460 --> 01:31:12.460
脑袋脏

01:31:12.460 --> 01:31:13.460
痛苦

01:31:13.460 --> 01:31:14.460
都是正常的

01:31:14.460 --> 01:31:15.460
如果说你觉得

01:31:15.460 --> 01:31:16.460
非常轻松的话

01:31:16.460 --> 01:31:17.460
那么说明

01:31:17.460 --> 01:31:18.460
要么就是你已经过了

01:31:18.460 --> 01:31:19.460
这个阶段了

01:31:19.460 --> 01:31:20.460
要么你完全听不懂

01:31:20.460 --> 01:31:21.460
一如说觉得痛苦

01:31:21.460 --> 01:31:22.460
觉得脑袋很脏

01:31:22.460 --> 01:31:23.460
都是正常的

01:31:23.460 --> 01:31:24.460
你只有这样子

01:31:24.460 --> 01:31:25.460
能达到学习的效果

01:31:25.460 --> 01:31:26.460
只能是这样子

01:31:26.460 --> 01:31:27.460
如果说你觉得

01:31:27.460 --> 01:31:28.460
啥感觉都没有

01:31:28.460 --> 01:31:29.460
那就完蛋了

01:31:29.460 --> 01:31:30.460
那就完蛋了

01:31:30.460 --> 01:31:31.460
你没有痛苦的话

01:31:31.460 --> 01:31:32.460
就不会有进步的

01:31:34.460 --> 01:31:35.460
好

01:31:35.460 --> 01:31:36.460
那么这是点击对了

01:31:36.460 --> 01:31:37.460
那么这一块

01:31:37.460 --> 01:31:38.460
Title的点就搞定了

01:31:38.460 --> 01:31:39.460
那除了Title的点击之外

01:31:39.460 --> 01:31:41.460
我们还有一个UL的点击

01:31:41.460 --> 01:31:42.460
那是不是我们还要找

01:31:42.460 --> 01:31:43.460
下面的UL

01:31:43.460 --> 01:31:45.460
找这个UL列表

01:31:45.460 --> 01:31:47.460
好 接下来找这个UL列表

01:31:47.460 --> 01:31:48.460
生Lex

01:31:48.460 --> 01:31:49.460
同样的道理

01:31:49.460 --> 01:31:50.460
QuestLex

01:31:50.460 --> 01:31:51.460
接下来我就写到

01:31:51.460 --> 01:31:52.460
稍微快一点的

01:31:52.460 --> 01:31:53.460
因为很多代表都是类似的

01:31:53.460 --> 01:31:54.460
找到什么

01:31:54.460 --> 01:31:55.460
找到这个Opins

01:31:55.460 --> 01:31:56.460
对吧

01:31:56.460 --> 01:31:57.460
你如何能忘了

01:31:57.460 --> 01:31:58.460
那样的事

01:31:58.460 --> 01:31:59.460
你可以看一下

01:31:59.460 --> 01:32:03.540
找到这个Opins

01:32:03.540 --> 01:32:05.540
这个Opins找到之后

01:32:05.540 --> 01:32:06.540
我们可以是不是给一个UL

01:32:06.540 --> 01:32:07.540
注册点击时间

01:32:08.540 --> 01:32:09.540
点击

01:32:10.540 --> 01:32:11.540
注意哦

01:32:11.540 --> 01:32:12.540
这里是个时间委托

01:32:12.540 --> 01:32:14.540
我就用建筒函数吧

01:32:14.540 --> 01:32:16.540
多点一下建筒函数

01:32:17.540 --> 01:32:18.540
好 输出一下

01:32:19.540 --> 01:32:20.540
在上面

01:32:21.540 --> 01:32:22.540
输出一下个时间参数一

01:32:22.540 --> 01:32:23.540
看一下吧

01:32:24.540 --> 01:32:25.540
点这儿

01:32:25.540 --> 01:32:26.540
没有输出

01:32:26.540 --> 01:32:27.540
点下面的UL

01:32:28.540 --> 01:32:29.540
就可以输出

01:32:29.540 --> 01:32:30.540
对吧

01:32:30.540 --> 01:32:31.540
mouse event

01:32:31.540 --> 01:32:32.540
点这个北京市

01:32:32.540 --> 01:32:33.540
点天津市

01:32:33.540 --> 01:32:34.540
全部都可以输出

01:32:35.540 --> 01:32:36.540
好

01:32:36.540 --> 01:32:37.540
那么我们现在要找的是什么

01:32:37.540 --> 01:32:38.540
你只有点什么

01:32:38.540 --> 01:32:39.540
只有点这个Li

01:32:39.540 --> 01:32:40.540
我才处理

01:32:40.540 --> 01:32:41.540
不点Li的话

01:32:41.540 --> 01:32:42.540
我就处理啥

01:32:42.540 --> 01:32:43.540
你说点这个空白地方

01:32:43.540 --> 01:32:44.540
我处理啥吗

01:32:44.540 --> 01:32:45.540
没什么好处理的

01:32:45.540 --> 01:32:46.540
我必须要看你点

01:32:46.540 --> 01:32:47.540
没有点这个Li

01:32:47.540 --> 01:32:48.540
那怎么来看

01:32:48.540 --> 01:32:49.540
有没有点这个Li

01:32:49.540 --> 01:32:51.540
是不是找时间远

01:32:51.540 --> 01:32:52.540
你看我这点空白地方

01:32:52.540 --> 01:32:54.540
它的1.target

01:32:57.860 --> 01:32:58.860
target是UL

01:32:58.860 --> 01:32:59.860
对不对

01:32:59.860 --> 01:33:00.860
点了空隙的地方

01:33:00.860 --> 01:33:01.860
但是你点到Li的话

01:33:01.860 --> 01:33:03.860
你就是1.target是不是Li

01:33:03.860 --> 01:33:04.860
所以我怎么判断

01:33:04.860 --> 01:33:05.860
我看一下

01:33:05.860 --> 01:33:07.860
你点了这个元素

01:33:07.860 --> 01:33:08.860
元素标签名

01:33:08.860 --> 01:33:09.860
是不是Li

01:33:09.860 --> 01:33:11.860
那么我们这里可以输出一下

01:33:11.860 --> 01:33:12.860
1.target

01:33:12.860 --> 01:33:13.860
点

01:33:13.860 --> 01:33:14.860
target

01:33:14.860 --> 01:33:16.860
看一下是不是Li

01:33:17.860 --> 01:33:19.860
做程序一定要慢啊

01:33:19.860 --> 01:33:20.860
特别是初学者

01:33:20.860 --> 01:33:21.860
如果说得有

01:33:21.860 --> 01:33:23.860
非常非常着急的写程序的话

01:33:23.860 --> 01:33:25.860
那要么就写不出来

01:33:25.860 --> 01:33:27.860
然后自己受到很大的挫败感

01:33:27.860 --> 01:33:29.860
要么就是写成乱七八糟的一个代码

01:33:29.860 --> 01:33:31.860
还是受到很大的挫败

01:33:31.860 --> 01:33:32.860
一定要慢啊

01:33:32.860 --> 01:33:33.860
特别是初学者

01:33:33.860 --> 01:33:34.860
来

01:33:34.860 --> 01:33:35.860
看一下控制台

01:33:35.860 --> 01:33:36.860
就每一步

01:33:36.860 --> 01:33:38.860
你往前走一步

01:33:38.860 --> 01:33:39.860
都是胜利

01:33:39.860 --> 01:33:40.860
你不要老想到我怎么样

01:33:40.860 --> 01:33:42.860
快说把它做出来

01:33:42.860 --> 01:33:43.860
你看Li

01:33:43.860 --> 01:33:44.860
是不是Li

01:33:44.860 --> 01:33:45.860
点空隙的地方

01:33:45.860 --> 01:33:46.860
就是UL

01:33:46.860 --> 01:33:47.860
所以说我们这里

01:33:47.860 --> 01:33:48.860
要判断一下什么

01:33:48.860 --> 01:33:49.860
判断一下它的tag name

01:33:49.860 --> 01:33:51.860
是不是Li

01:33:51.860 --> 01:33:54.860
是不是等于Li

01:33:54.860 --> 01:33:56.860
如果说你不等于Li的话

01:33:56.860 --> 01:33:57.860
你说我处理啥吧

01:33:57.860 --> 01:33:59.860
我没法处理

01:34:00.860 --> 01:34:02.860
必须要点击Li

01:34:02.860 --> 01:34:04.860
Li才进行处理

01:34:05.860 --> 01:34:07.860
那么这个把它过滤掉

01:34:07.860 --> 01:34:08.860
那么后边的情况

01:34:08.860 --> 01:34:10.860
一定是点击的是Li

01:34:10.860 --> 01:34:11.860
那么点击的Li

01:34:11.860 --> 01:34:13.860
我们有哪些事情要做呢

01:34:13.860 --> 01:34:14.860
看这边

01:34:14.860 --> 01:34:17.230
是不是我们首先

01:34:17.230 --> 01:34:19.230
把个Li变成一个选中状态

01:34:19.230 --> 01:34:20.230
对吧

01:34:20.230 --> 01:34:22.230
那么来

01:34:22.230 --> 01:34:24.230
选中Li

01:34:24.230 --> 01:34:25.230
我们先拿到Li

01:34:25.230 --> 01:34:27.230
Li就是1点tag一次买

01:34:27.230 --> 01:34:28.230
这个很简单

01:34:28.230 --> 01:34:30.230
拿到这个Li

01:34:30.230 --> 01:34:31.230
选中Li

01:34:31.230 --> 01:34:32.230
怎么选中

01:34:32.230 --> 01:34:33.230
class列是add

01:34:33.230 --> 01:34:35.230
添加一个内容是active

01:34:35.230 --> 01:34:36.230
对吧

01:34:36.230 --> 01:34:37.230
就不去选中了吧

01:34:37.230 --> 01:34:38.230
你看

01:34:39.230 --> 01:34:40.230
不去选中了吧

01:34:42.230 --> 01:34:43.230
啥问题

01:34:43.230 --> 01:34:45.230
是没有去掉之前选中的

01:34:45.230 --> 01:34:46.230
对不对

01:34:46.230 --> 01:34:47.230
是没有去掉之前选中的

01:34:47.230 --> 01:34:48.230
那么怎么办呢

01:34:48.230 --> 01:34:50.230
这个也简单

01:34:50.230 --> 01:34:51.230
当我点的时候

01:34:51.230 --> 01:34:52.230
我就先去拿到

01:34:52.230 --> 01:34:54.230
之前的那个玩意儿

01:34:54.230 --> 01:34:55.230
如果说你拿到之后

01:34:55.230 --> 01:34:57.230
我先把之前的玩意儿去掉

01:34:59.230 --> 01:35:00.230
拿到

01:35:00.230 --> 01:35:01.230
之前的

01:35:01.230 --> 01:35:04.230
选中的Li

01:35:04.230 --> 01:35:06.230
去掉它的active

01:35:06.230 --> 01:35:10.310
然后再来选中

01:35:10.310 --> 01:35:11.310
当前的active

01:35:13.310 --> 01:35:16.310
选中当前的Li

01:35:16.310 --> 01:35:17.310
好

01:35:17.310 --> 01:35:18.310
那么我们首先去拿之前的

01:35:18.310 --> 01:35:19.310
怎么拿

01:35:19.310 --> 01:35:21.310
还是从那个身边去找

01:35:21.310 --> 01:35:22.310
找什么

01:35:22.310 --> 01:35:23.310
class那个

01:35:23.310 --> 01:35:24.310
这个app要常用

01:35:24.310 --> 01:35:25.310
这个app

01:35:25.310 --> 01:35:27.310
特别好用

01:35:27.310 --> 01:35:28.310
找它什么

01:35:28.310 --> 01:35:29.310
它的里边的Li

01:35:29.310 --> 01:35:31.310
带有内容是active的Li

01:35:31.310 --> 01:35:32.310
对不对

01:35:33.310 --> 01:35:35.310
它之前有没有带有active的Li

01:35:35.310 --> 01:35:36.310
那拿到

01:35:36.310 --> 01:35:40.690
before active Li

01:35:40.690 --> 01:35:42.690
我写个名字的比较长

01:35:42.690 --> 01:35:44.690
如果说你就单词比较恐惧的话

01:35:44.690 --> 01:35:45.690
你可以说完一点

01:35:46.690 --> 01:35:48.690
总之就是之前那个选中的Li

01:35:48.690 --> 01:35:49.690
但是它有可能有有可能没有

01:35:49.690 --> 01:35:50.690
比方说最开始的时候

01:35:50.690 --> 01:35:51.690
最开始的时候

01:35:51.690 --> 01:35:52.690
是不是没有之前选中的

01:35:52.690 --> 01:35:53.690
它有可能是now

01:35:53.690 --> 01:35:54.690
对吧

01:35:54.690 --> 01:35:55.690
所以说呢真的要考虑到

01:35:55.690 --> 01:35:56.690
如果说它不为now

01:35:56.690 --> 01:35:57.690
它有值

01:35:57.690 --> 01:35:58.690
有值的情况下呢

01:35:58.690 --> 01:36:00.690
我给它class list

01:36:04.220 --> 01:36:05.220
remove

01:36:05.220 --> 01:36:06.220
去掉什么active

01:36:07.220 --> 01:36:08.220
先去掉之前的

01:36:08.220 --> 01:36:12.300
再加上自己的

01:36:12.300 --> 01:36:13.300
就会舒服多了

01:36:13.300 --> 01:36:14.300
这些都是非常

01:36:14.300 --> 01:36:16.300
不要小喊这个东西

01:36:16.300 --> 01:36:17.300
你不要涵盖了很多很多

01:36:17.300 --> 01:36:18.300
我们平时开发中

01:36:18.300 --> 01:36:20.300
用到了一些思路

01:36:21.300 --> 01:36:22.300
那么选中Li没问题了

01:36:22.300 --> 01:36:23.300
对吧

01:36:23.300 --> 01:36:25.300
除了选中Li之外呢

01:36:25.300 --> 01:36:26.300
是不是还要

01:36:26.300 --> 01:36:27.300
更改

01:36:28.300 --> 01:36:29.300
title的

01:36:30.300 --> 01:36:31.300
文本

01:36:31.300 --> 01:36:32.300
对不对

01:36:32.300 --> 01:36:33.300
是不是要改变这个文本

01:36:33.300 --> 01:36:34.300
改变title的文本

01:36:34.300 --> 01:36:35.300
其实很简单

01:36:35.300 --> 01:36:36.300
那么我们找到

01:36:36.300 --> 01:36:37.300
title里面的span元素

01:36:37.300 --> 01:36:38.300
好吧

01:36:38.300 --> 01:36:39.300
又来拿着span元素

01:36:39.300 --> 01:36:40.300
span

01:36:40.300 --> 01:36:41.300
等于

01:36:41.300 --> 01:36:43.300
快要是那个title

01:36:43.300 --> 01:36:45.300
点title下面的span

01:36:45.300 --> 01:36:46.300
对吧

01:36:46.300 --> 01:36:47.300
好

01:36:47.300 --> 01:36:48.300
span里面inartex

01:36:48.300 --> 01:36:49.300
等于什么呢

01:36:49.300 --> 01:36:50.300
是不是等于当前的Li

01:36:50.300 --> 01:36:52.300
选中Li的inartex

01:36:54.300 --> 01:36:56.740
来看

01:36:56.740 --> 01:36:58.740
所以这个文本也变了

01:36:58.740 --> 01:37:00.740
这一步我们是不是又完成了

01:37:02.740 --> 01:37:04.740
那么这一步完成了之后呢

01:37:04.740 --> 01:37:05.740
我们还要一件事情要做

01:37:05.740 --> 01:37:07.740
就是把它收起来

01:37:08.740 --> 01:37:10.740
折叠起来

01:37:10.740 --> 01:37:11.740
怎么折叠

01:37:11.740 --> 01:37:12.740
那就简单了

01:37:12.740 --> 01:37:14.740
是那个是classness

01:37:14.740 --> 01:37:15.740
remove

01:37:15.740 --> 01:37:16.740
expand

01:37:17.740 --> 01:37:18.740
好

01:37:18.740 --> 01:37:19.740
再来我们来综合看一下

01:37:19.740 --> 01:37:20.740
一看是不是出来了

01:37:20.740 --> 01:37:22.740
而且这个功能是通用的

01:37:22.740 --> 01:37:24.740
除了所有的下达代表都是这样的功能

01:37:24.740 --> 01:37:25.740
有什么区别呢

01:37:25.740 --> 01:37:27.740
这些都是通用的部分

01:37:27.740 --> 01:37:28.740
选中一个

01:37:28.740 --> 01:37:29.740
这里就显示

01:37:29.740 --> 01:37:30.740
然后折叠起来

01:37:30.740 --> 01:37:32.740
这一会就做完了

01:37:32.740 --> 01:37:33.740
好

01:37:33.740 --> 01:37:34.740
那么至此呢

01:37:34.740 --> 01:37:35.740
我们所有下达代表的

01:37:35.740 --> 01:37:36.740
通用功能就全部做完了

01:37:36.740 --> 01:37:37.740
不过呢

01:37:37.740 --> 01:37:38.740
这边的城市

01:37:38.740 --> 01:37:39.740
地区还没有数据而已

01:37:39.740 --> 01:37:40.740
对不对

01:37:40.740 --> 01:37:41.740
如果说你要测试数据的话

01:37:41.740 --> 01:37:42.740
也很简单

01:37:42.740 --> 01:37:43.740
你就把省份数据

01:37:43.740 --> 01:37:44.740
夹进去

01:37:44.740 --> 01:37:45.740
要测试

01:37:45.740 --> 01:37:46.740
只不过它的数据不正确

01:37:46.740 --> 01:37:47.740
这样子的话

01:37:48.740 --> 01:37:50.740
它数据不正确

01:37:50.740 --> 01:37:51.740
但是呢

01:37:51.740 --> 01:37:52.740
你可以吃进去测试

01:37:52.740 --> 01:37:53.740
其实都可以的

01:37:54.740 --> 01:37:57.740
大家先把代码开发到这种地步

01:37:57.740 --> 01:37:58.740
那么你要知道

01:37:58.740 --> 01:37:59.740
现在开发到哪了

01:37:59.740 --> 01:38:00.740
我们现在在写时间

01:38:00.740 --> 01:38:01.740
时间写到哪了

01:38:01.740 --> 01:38:03.740
把通用的时间已经搞定了

01:38:03.740 --> 01:38:05.740
公共时间注册已经搞定了

01:38:05.740 --> 01:38:06.740
当然还有些特殊的

01:38:06.740 --> 01:38:07.740
好

01:38:07.740 --> 01:38:10.300
大家先做

01:38:10.300 --> 01:38:11.300
好

01:38:11.300 --> 01:38:12.300
那么接下来

01:38:12.300 --> 01:38:13.300
就进入到我们最后一步了

01:38:13.300 --> 01:38:15.300
你看我们做一个页面

01:38:15.300 --> 01:38:16.300
大的方向

01:38:16.300 --> 01:38:17.300
就这么两件事

01:38:17.300 --> 01:38:18.300
一个是初始化

01:38:18.300 --> 01:38:19.300
然后各种胶部

01:38:20.300 --> 01:38:21.300
好

01:38:21.300 --> 01:38:22.300
公共时间处理完了过后

01:38:22.300 --> 01:38:23.300
我们发现

01:38:23.300 --> 01:38:24.300
一个代码呢

01:38:24.300 --> 01:38:25.300
已经写的差不多了

01:38:25.300 --> 01:38:26.300
验证的是没问题的

01:38:26.300 --> 01:38:27.300
我们就把折叠起来

01:38:27.300 --> 01:38:28.300
你看整个代码结构

01:38:28.300 --> 01:38:29.300
就非常清晰

01:38:29.300 --> 01:38:31.300
你看非常清晰

01:38:31.300 --> 01:38:32.300
初始化

01:38:32.300 --> 01:38:33.300
不拉不拉不拉

01:38:33.300 --> 01:38:34.300
去填充填充填充

01:38:34.300 --> 01:38:35.300
填充完了过后

01:38:35.300 --> 01:38:36.300
就注册时间

01:38:36.300 --> 01:38:37.300
它就可以交互了

01:38:37.300 --> 01:38:39.300
但是除了公共时间之外

01:38:39.300 --> 01:38:41.300
还有一些时间

01:38:41.300 --> 01:38:44.300
就是省份的时间

01:38:44.300 --> 01:38:46.300
和城市的时间

01:38:46.300 --> 01:38:47.300
好

01:38:47.300 --> 01:38:48.300
他们两个时间是不一样的

01:38:48.300 --> 01:38:50.300
地区那其实没有啥

01:38:50.300 --> 01:38:51.300
就点击过后选择就完事了

01:38:51.300 --> 01:38:53.300
但是省份和城市是不一样的

01:38:53.300 --> 01:38:55.300
他们各自有些特殊的地方

01:38:55.300 --> 01:38:56.300
然后点省份

01:38:56.300 --> 01:38:57.300
点了省份过后

01:38:57.300 --> 01:38:58.300
我要填充城市

01:38:58.300 --> 01:38:59.300
对吧

01:38:59.300 --> 01:39:01.300
这个动作是城市没有的

01:39:01.300 --> 01:39:02.300
点了城市过后

01:39:02.300 --> 01:39:03.300
我要填充地区

01:39:03.300 --> 01:39:04.300
这个动作是地区没有的

01:39:04.300 --> 01:39:05.300
点到地区

01:39:05.300 --> 01:39:06.300
长得不错

01:39:06.300 --> 01:39:07.300
对吧

01:39:07.300 --> 01:39:08.300
他们有特殊的地方

01:39:08.300 --> 01:39:09.300
也有共同的地方

01:39:09.300 --> 01:39:10.300
共同的地方已经抽出出来了

01:39:10.300 --> 01:39:11.300
那么有差异的地方

01:39:11.300 --> 01:39:12.300
又写函数

01:39:12.300 --> 01:39:13.300
无非就两个函数

01:39:13.300 --> 01:39:15.300
注册省份

01:39:15.300 --> 01:39:17.300
Promise is that

01:39:17.300 --> 01:39:19.300
Promise event

01:39:19.300 --> 01:39:20.300
这里就不需要谁

01:39:20.300 --> 01:39:21.300
是那个词了

01:39:21.300 --> 01:39:22.300
因为我知道省份的下来

01:39:22.300 --> 01:39:24.300
要表示谁

01:39:24.300 --> 01:39:28.300
注册省份的特殊

01:39:28.300 --> 01:39:30.300
点击时间

01:39:30.300 --> 01:39:31.300
好

01:39:31.300 --> 01:39:32.300
这里还有一个函数

01:39:32.300 --> 01:39:37.300
注册城市的特殊点击时间

01:39:37.300 --> 01:39:42.300
注册城市的特殊点击时间

01:39:42.300 --> 01:39:43.300
好

01:39:43.300 --> 01:39:44.300
来吧

01:39:44.300 --> 01:39:45.300
这边我就调两个函数

01:39:45.300 --> 01:39:46.300
一个是一开始

01:39:46.300 --> 01:39:47.300
我们先注册省份的

01:39:47.300 --> 01:39:49.300
然后再注册城市的

01:39:49.300 --> 01:39:50.300
对吧

01:39:50.300 --> 01:39:51.300
那么接下来

01:39:51.300 --> 01:39:52.300
我们要做的事情

01:39:52.300 --> 01:39:53.300
所有事情就是把这两个函数写完

01:39:53.300 --> 01:39:54.300
而且这两个函数

01:39:54.300 --> 01:39:55.300
你只要写会了

01:39:55.300 --> 01:39:56.300
一个

01:39:56.300 --> 01:39:58.300
另一个自然就会了

01:39:58.300 --> 01:39:59.300
好

01:39:59.300 --> 01:40:00.300
一个个来

01:40:00.300 --> 01:40:01.300
省份的特殊点击时间

01:40:01.300 --> 01:40:02.300
是什么呢

01:40:02.300 --> 01:40:03.300
是点它吗

01:40:03.300 --> 01:40:04.300
不是

01:40:04.300 --> 01:40:07.300
是点它们里面的某一个省份

01:40:07.300 --> 01:40:09.300
点这个的时候

01:40:09.300 --> 01:40:10.300
发生了一些别的事情

01:40:10.300 --> 01:40:11.300
所以说

01:40:11.300 --> 01:40:12.300
OK 谁注册时间

01:40:12.300 --> 01:40:13.300
是不是又要找到这个EV

01:40:13.300 --> 01:40:14.300
这也在吧

01:40:14.300 --> 01:40:15.300
也没什么好多的

01:40:15.300 --> 01:40:17.300
去找

01:40:17.300 --> 01:40:19.300
哪个下来的表呢

01:40:19.300 --> 01:40:21.300
是doms里面的sale province

01:40:21.300 --> 01:40:23.300
现在因为他没有传参数性

01:40:23.300 --> 01:40:25.300
因为这个省份的下来的表

01:40:25.300 --> 01:40:26.300
是已知的

01:40:26.300 --> 01:40:27.300
之前为什么要传参数

01:40:27.300 --> 01:40:28.300
因为我不知道是

01:40:28.300 --> 01:40:29.300
要处理哪个下来的表

01:40:29.300 --> 01:40:30.300
我写的是通用的

01:40:30.300 --> 01:40:31.300
但是特殊的

01:40:31.300 --> 01:40:32.300
我知道是哪个下来的表

01:40:32.300 --> 01:40:33.300
就不用理传了

01:40:33.300 --> 01:40:35.300
好 找一个UL

01:40:35.300 --> 01:40:37.300
继续给它添加点击时间

01:40:37.300 --> 01:40:38.300
对吧

01:40:38.300 --> 01:40:40.300
添加时间可以添加多个

01:40:40.300 --> 01:40:43.450
对吧

01:40:43.450 --> 01:40:44.450
还是一样

01:40:44.450 --> 01:40:46.450
判断一下1.topics

01:40:46.450 --> 01:40:48.450
第二那个

01:40:48.450 --> 01:40:50.450
tyglaim

01:40:50.450 --> 01:40:52.450
是不是等于li

01:40:52.450 --> 01:40:54.450
如果说不等于li的话

01:40:54.450 --> 01:40:55.450
我就结束

01:40:55.450 --> 01:40:56.450
这个逻辑都是一样的

01:40:56.450 --> 01:40:59.780
好 那么

01:40:59.780 --> 01:41:01.780
我们这里先输出一个

01:41:01.780 --> 01:41:03.780
省份点击的

01:41:03.780 --> 01:41:07.480
好 看一下

01:41:07.480 --> 01:41:09.480
除了之前的功能之外

01:41:09.480 --> 01:41:10.480
你看 还多了一个时间

01:41:10.480 --> 01:41:12.480
省份点了

01:41:12.480 --> 01:41:14.480
好 接下来的问题就是

01:41:14.480 --> 01:41:15.480
就一个问题

01:41:15.480 --> 01:41:20.300
省份点了我要干吗

01:41:20.300 --> 01:41:22.300
点到什么要干吗

01:41:22.300 --> 01:41:25.300
是不是填充程式

01:41:25.300 --> 01:41:26.300
填充程式

01:41:26.300 --> 01:41:28.300
已经有现成的方法了

01:41:28.300 --> 01:41:29.300
你不要把这个方法

01:41:29.300 --> 01:41:30.300
重复到位去看一遍

01:41:30.300 --> 01:41:31.300
你自己写了

01:41:31.300 --> 01:41:32.300
你不要去纠结它了

01:41:32.300 --> 01:41:33.300
它已经写好了

01:41:33.300 --> 01:41:34.300
已经OK了

01:41:34.300 --> 01:41:35.300
也测试通过了

01:41:35.300 --> 01:41:36.300
如果说它出了问题

01:41:36.300 --> 01:41:37.300
这个不就是我们要

01:41:37.300 --> 01:41:38.300
填充的方法吗

01:41:38.300 --> 01:41:39.300
给我一个下来代表

01:41:39.300 --> 01:41:40.300
给我一个数据

01:41:40.300 --> 01:41:41.300
我就填充就完事了

01:41:41.300 --> 01:41:42.300
我的目标就是

01:41:42.300 --> 01:41:44.300
去雕入这个方法

01:41:44.300 --> 01:41:45.300
下来代表传啥

01:41:45.300 --> 01:41:47.300
就传一个省份

01:41:47.300 --> 01:41:49.300
要程式

01:41:49.300 --> 01:41:50.300
我要干吗

01:41:50.300 --> 01:41:52.300
我要填充程式

01:41:52.300 --> 01:41:54.300
说要填充程式

01:41:54.300 --> 01:41:55.300
我的省份变了

01:41:55.300 --> 01:41:57.300
我要填充程式

01:41:57.300 --> 01:41:59.300
关键就是第二个参数

01:41:59.300 --> 01:42:00.300
关键就是第二次

01:42:00.300 --> 01:42:01.300
第二参数你找到了

01:42:01.300 --> 01:42:03.300
这个事情就做完了

01:42:03.300 --> 01:42:05.300
程式你也不要拿来

01:42:05.300 --> 01:42:10.540
程式列表

01:42:10.540 --> 01:42:12.540
哪来

01:42:12.540 --> 01:42:14.540
哪来了

01:42:14.540 --> 01:42:18.130
哪来了

01:42:18.130 --> 01:42:20.130
我们现在有的是什么了

01:42:20.130 --> 01:42:22.130
手上只有一个多么元素

01:42:22.130 --> 01:42:24.130
对不对

01:42:24.130 --> 01:42:26.130
是不是只有一个多么元素

01:42:26.130 --> 01:42:28.130
那么这个多么元素里边

01:42:28.130 --> 01:42:30.130
它关键的省份的下达列表

01:42:30.130 --> 01:42:32.130
是省份的数据

01:42:32.130 --> 01:42:33.130
对吧

01:42:33.130 --> 01:42:35.130
我们再把那个数据打印出来看一下

01:42:35.130 --> 01:42:42.830
我们手上有的是什么

01:42:42.830 --> 01:42:44.830
有的只有省份的下达列表

01:42:44.830 --> 01:42:46.830
只有这个下达列表

01:42:46.830 --> 01:42:48.830
我们现在要通过

01:42:48.830 --> 01:42:50.830
标的点到江西省

01:42:50.830 --> 01:42:52.830
我们要通过江西省这三个字

01:42:52.830 --> 01:42:55.830
从这个数据里边去

01:42:55.830 --> 01:42:57.830
找到江西省

01:42:57.830 --> 01:42:58.830
找找找找

01:42:58.830 --> 01:42:59.830
找到对象

01:42:59.830 --> 01:43:02.830
找到对象里面的俱准

01:43:02.830 --> 01:43:04.830
是不是要做这么一件事

01:43:04.830 --> 01:43:05.830
那么俱准是不是就是

01:43:05.830 --> 01:43:07.830
那个程式的数据

01:43:07.830 --> 01:43:10.830
然后只要能找到这个数据

01:43:10.830 --> 01:43:11.830
我就把它传进去

01:43:11.830 --> 01:43:12.830
就完事

01:43:13.830 --> 01:43:15.830
比方说点的是四川省

01:43:16.830 --> 01:43:18.830
那么从这个数据里边找

01:43:18.830 --> 01:43:19.830
找四川省

01:43:19.830 --> 01:43:21.830
找到对象里面俱准

01:43:21.830 --> 01:43:23.830
把个数据传到城市里面去

01:43:23.830 --> 01:43:24.830
是不是填充好了

01:43:24.830 --> 01:43:26.830
关键就是怎么去找

01:43:27.830 --> 01:43:29.830
那么你直接循环这个数据

01:43:29.830 --> 01:43:30.830
找不就完成了吗

01:43:30.830 --> 01:43:31.830
当然这样子可以

01:43:31.830 --> 01:43:32.830
没问题没问题

01:43:32.830 --> 01:43:34.830
但是我要想的远一点

01:43:34.830 --> 01:43:37.830
这个逻辑不仅发生在省份这一块

01:43:37.830 --> 01:43:39.830
还发生在城市这一块

01:43:39.830 --> 01:43:40.830
你发现没

01:43:40.830 --> 01:43:41.830
一会我们点了城市

01:43:41.830 --> 01:43:43.830
是不是我也要从这里边去找城市

01:43:43.830 --> 01:43:45.830
比方说我找到那个程度市

01:43:45.830 --> 01:43:46.830
那你找吧

01:43:46.830 --> 01:43:47.830
你不能从这个数据里边找吧

01:43:47.830 --> 01:43:48.830
这是省份的数据

01:43:48.830 --> 01:43:50.830
里边找不到的程度市

01:43:50.830 --> 01:43:52.830
你要去找里边的

01:43:52.830 --> 01:43:54.830
你要去找北京市里边有哪些城市

01:43:54.830 --> 01:43:56.830
天津市里边有哪些城市

01:43:56.830 --> 01:43:57.830
这样子是不是很麻烦

01:43:58.830 --> 01:43:59.830
是不是很麻烦

01:44:00.830 --> 01:44:02.830
那我干脆这样

01:44:02.830 --> 01:44:03.830
看着啊

01:44:06.780 --> 01:44:07.780
我这里面有一个非常

01:44:08.780 --> 01:44:09.780
特别的技巧

01:44:10.780 --> 01:44:11.780
我在绑定

01:44:11.780 --> 01:44:13.780
就是我在填充省份的时候

01:44:13.780 --> 01:44:14.780
你不是有给我的数据吗

01:44:14.780 --> 01:44:15.780
我填充省份

01:44:15.780 --> 01:44:17.780
你给了我数据吗

01:44:17.780 --> 01:44:19.780
我在填充省份的时候

01:44:19.780 --> 01:44:21.780
我就把我那个填充的数组

01:44:22.780 --> 01:44:26.930
我就把整个这个数组

01:44:27.930 --> 01:44:30.930
给它附着在一个动物对象里干

01:44:30.930 --> 01:44:31.930
因为动物对象里

01:44:31.930 --> 01:44:32.930
它只是一个普通对象而已

01:44:32.930 --> 01:44:34.930
比方说你给它附着一个动物

01:44:34.930 --> 01:44:35.930
它一个动物对象

01:44:35.930 --> 01:44:36.930
里边给它加个属性

01:44:36.930 --> 01:44:37.930
Datast

01:44:37.930 --> 01:44:38.930
随便加个属性

01:44:38.930 --> 01:44:39.930
给它加上

01:44:39.930 --> 01:44:40.930
加一个属性

01:44:40.930 --> 01:44:42.930
当我在点某一个省份的时候

01:44:42.930 --> 01:44:43.930
我就从那个数组里边

01:44:43.930 --> 01:44:45.930
就是那个动物对象里边去取

01:44:46.930 --> 01:44:47.930
你要这意思吧

01:44:47.930 --> 01:44:48.930
比方说我在绑

01:44:48.930 --> 01:44:51.930
我在给它填充这个省份的时候

01:44:52.930 --> 01:44:53.930
直接把大码写出来

01:44:53.930 --> 01:44:54.930
里面还好理解一点

01:44:54.930 --> 01:44:55.930
我在什么时候呢

01:44:55.930 --> 01:44:56.930
我就在这个时候

01:44:56.930 --> 01:44:57.930
填充的时候

01:44:57.930 --> 01:44:59.930
我就多做一件事

01:44:59.930 --> 01:45:03.370
我往那个动物对象里边

01:45:03.370 --> 01:45:04.370
加一个属性Datast

01:45:04.370 --> 01:45:05.370
给它附着为劣势

01:45:06.370 --> 01:45:09.370
将目前填充的数据

01:45:10.370 --> 01:45:13.370
添加到动物对象的

01:45:13.370 --> 01:45:15.370
相的属性Datast

01:45:16.370 --> 01:45:17.370
Datast我是随便命个名字

01:45:17.370 --> 01:45:18.370
你也可以命别的名字

01:45:18.370 --> 01:45:19.370
都无所谓

01:45:19.370 --> 01:45:20.370
因为它只是个对象

01:45:20.370 --> 01:45:21.370
一会我就可以把它取出来

01:45:21.370 --> 01:45:23.370
关键是起这么一个作用

01:45:23.370 --> 01:45:24.370
也就是说啥意思呢

01:45:24.370 --> 01:45:26.370
就是说我界面上

01:45:26.370 --> 01:45:28.370
显示的这个列表

01:45:28.370 --> 01:45:30.370
我就可以通过那个

01:45:30.370 --> 01:45:32.370
动物对象里边的Datast

01:45:32.370 --> 01:45:33.370
把它拿出来

01:45:34.370 --> 01:45:35.370
没啥意思吧

01:45:35.370 --> 01:45:36.370
我就要起到这么一个作用

01:45:36.370 --> 01:45:41.130
比方说现在我们看一下

01:45:41.130 --> 01:45:42.130
现在是省份

01:45:42.130 --> 01:45:43.130
省份这一块

01:45:43.130 --> 01:45:44.130
我就把省份

01:45:44.130 --> 01:45:45.130
绑到这个下拉列表里边去了

01:45:45.130 --> 01:45:47.130
一会我填充程式的时候

01:45:47.130 --> 01:45:48.130
我又把那个程式的列表

01:45:48.130 --> 01:45:49.130
就绑到这个下拉列表里去了

01:45:50.130 --> 01:45:52.130
所以说我到时候

01:45:52.130 --> 01:45:53.130
我要点的时候

01:45:53.130 --> 01:45:54.130
比方说我点了某一个省

01:45:54.130 --> 01:45:55.130
我就从这个下拉列表里边

01:45:55.130 --> 01:45:57.130
把这个东西取出来

01:45:59.130 --> 01:46:00.130
你看吧

01:46:01.130 --> 01:46:02.130
我这里

01:46:02.130 --> 01:46:03.130
我在填充程式

01:46:03.130 --> 01:46:05.130
我这里点了这个江西省

01:46:05.130 --> 01:46:07.130
我就把这个省份的下拉列表

01:46:07.130 --> 01:46:11.130
doms, sale, promise

01:46:11.130 --> 01:46:13.130
它列表的Datast取出来

01:46:13.130 --> 01:46:15.130
因为它之前不是放进去了吗

01:46:15.130 --> 01:46:17.130
之前填充的时候就放进去了

01:46:17.130 --> 01:46:24.280
然后我点的时候把取出来

01:46:24.280 --> 01:46:26.280
你看是不是可以把取出来

01:46:26.280 --> 01:46:27.280
那么我只需要

01:46:27.280 --> 01:46:29.280
从这个数组里边去循环就完事了

01:46:29.280 --> 01:46:31.280
去找就完事了

01:46:31.280 --> 01:46:32.280
对不对

01:46:32.280 --> 01:46:34.280
也就是说我再说一次

01:46:34.280 --> 01:46:36.280
这一块有点糟

01:46:36.280 --> 01:46:38.280
就是我在绑下拉列表的时候

01:46:38.280 --> 01:46:40.280
我在填充的时候

01:46:40.280 --> 01:46:41.280
我填充什么数据

01:46:41.280 --> 01:46:42.280
我就把个数据

01:46:42.280 --> 01:46:44.280
保存到一个数组里边去

01:46:44.280 --> 01:46:45.280
保存到个动物对象里边去

01:46:45.280 --> 01:46:47.280
当时我在个动物对象里边点

01:46:47.280 --> 01:46:49.280
我又把那个数据取出来

01:46:49.280 --> 01:46:51.280
从一个数组里边取出那个数据里边去找

01:46:51.280 --> 01:46:53.280
就算是非常的方便

01:46:55.280 --> 01:46:56.280
可能现在你还感觉不到

01:46:56.280 --> 01:46:57.280
它有多方便

01:46:57.280 --> 01:46:58.280
一会你看到程式那一块

01:46:58.280 --> 01:47:00.280
你会发现它多方便

01:47:00.280 --> 01:47:02.280
好 接下来我们来写

01:47:02.280 --> 01:47:03.280
那么现在我们看到这个数组

01:47:03.280 --> 01:47:04.280
就是我们要找的数组

01:47:04.280 --> 01:47:05.280
我要做的事情

01:47:05.280 --> 01:47:07.280
是不是就从数组里边去找

01:47:07.280 --> 01:47:10.280
ES6里边有一个方法叫fant

01:47:10.280 --> 01:47:13.280
找满足条件的那个对象

01:47:13.280 --> 01:47:15.280
它里边传一个回调函数

01:47:15.280 --> 01:47:17.280
它会一项一项把对象传给你

01:47:17.280 --> 01:47:18.280
这是个对象数组

01:47:18.280 --> 01:47:21.280
它会把数组的每一项传给你

01:47:21.280 --> 01:47:23.280
然后你返回它一个布尔值

01:47:23.280 --> 01:47:25.280
看对象满不满足条件

01:47:25.280 --> 01:47:26.280
什么条件呢

01:47:26.280 --> 01:47:27.280
就是对象的label

01:47:27.280 --> 01:47:28.280
就是这个文本

01:47:28.280 --> 01:47:29.280
是不是等于

01:47:29.280 --> 01:47:35.320
目前你点的那个li

01:47:35.320 --> 01:47:36.320
e.target

01:47:36.320 --> 01:47:39.320
你点的那个li的文本

01:47:39.320 --> 01:47:41.320
in the text

01:47:41.320 --> 01:47:42.320
对吧

01:47:42.320 --> 01:47:43.320
只要满足

01:47:43.320 --> 01:47:44.320
就是你

01:47:44.320 --> 01:47:45.320
这是一个数据

01:47:45.320 --> 01:47:46.320
数据里一项一项去找

01:47:46.320 --> 01:47:47.320
每一项给你传进来

01:47:47.320 --> 01:47:48.320
你判断一下

01:47:48.320 --> 01:47:49.320
是不是满足这个条件

01:47:49.320 --> 01:47:50.320
满足条件

01:47:50.320 --> 01:47:51.320
它就给你返回了

01:47:51.320 --> 01:47:52.320
把对象返回了

01:47:52.320 --> 01:47:53.320
那么这个对象

01:47:53.320 --> 01:47:56.320
就是我们的

01:47:56.320 --> 01:47:57.320
程式对象

01:47:57.320 --> 01:47:58.320
好

01:47:58.320 --> 01:47:59.320
我们来输出一下

01:47:59.320 --> 01:48:02.590
输出pr

01:48:02.590 --> 01:48:03.590
点河北

01:48:03.590 --> 01:48:05.590
你看

01:48:05.590 --> 01:48:06.590
点山东

01:48:06.590 --> 01:48:07.590
点陕西

01:48:07.590 --> 01:48:08.590
好 接下来

01:48:08.590 --> 01:48:10.590
是不是我只要把q准

01:48:10.590 --> 01:48:14.670
传过去就行了

01:48:14.670 --> 01:48:19.650
pr 给它q准

01:48:19.650 --> 01:48:21.650
看一下

01:48:21.650 --> 01:48:23.650
天津

01:48:23.650 --> 01:48:25.650
天津只有一个

01:48:25.650 --> 01:48:26.650
遥陵

01:48:26.650 --> 01:48:28.650
你看是不是就传过去了

01:48:28.650 --> 01:48:30.650
而且大家看

01:48:30.650 --> 01:48:31.650
我在

01:48:31.650 --> 01:48:33.650
我调这个方法是在绑城市

01:48:33.650 --> 01:48:34.650
一绑城市的话

01:48:34.650 --> 01:48:37.650
是不是把这个q准的列表传过去了

01:48:37.650 --> 01:48:38.650
我就把这个列表

01:48:38.650 --> 01:48:39.650
就绑到一个

01:48:39.650 --> 01:48:41.650
城市那个下来列表的data

01:48:41.650 --> 01:48:42.650
里面去了

01:48:42.650 --> 01:48:44.650
那么一会我在城市里面

01:48:44.650 --> 01:48:45.650
是不是可以做同样的操作

01:48:45.650 --> 01:48:46.650
点城市里面

01:48:46.650 --> 01:48:47.650
某一个东西的时候

01:48:47.650 --> 01:48:49.650
我又可以从城市的下来列表里面

01:48:49.650 --> 01:48:50.650
把它取出来

01:48:50.650 --> 01:48:51.650
取出目前的城市

01:48:51.650 --> 01:48:53.650
从这个城市的数组里面

01:48:53.650 --> 01:48:54.650
做同样的操作循环

01:48:54.650 --> 01:48:55.650
所以说这两个函数

01:48:55.650 --> 01:49:00.540
差不多的

01:49:00.540 --> 01:49:02.540
其他都差不多

01:49:02.540 --> 01:49:04.540
只是这个地方变一下

01:49:04.540 --> 01:49:05.540
变成什么了

01:49:05.540 --> 01:49:07.540
sell city

01:49:07.540 --> 01:49:09.540
对吧

01:49:09.540 --> 01:49:10.540
然后这个地方变一下

01:49:10.540 --> 01:49:11.540
填充的是什么了

01:49:11.540 --> 01:49:16.740
填充的是后面的地区

01:49:16.740 --> 01:49:21.460
这个就是city

01:49:21.460 --> 01:49:22.460
来走一次

01:49:22.460 --> 01:49:27.460
这里是填充地区

01:49:28.460 --> 01:49:29.460
点城市里面的时候

01:49:29.460 --> 01:49:30.460
我要把城市这个下来列表

01:49:30.460 --> 01:49:32.460
关联到那个数组

01:49:32.460 --> 01:49:34.460
通过它取出来

01:49:34.460 --> 01:49:35.460
什么时候绑进去了

01:49:35.460 --> 01:49:37.460
就在这里绑进去了

01:49:37.460 --> 01:49:38.460
填数据的时候绑进去了

01:49:38.460 --> 01:49:39.460
我点的时候就把取出来

01:49:39.460 --> 01:49:40.460
取出来

01:49:40.460 --> 01:49:41.460
从这个数组里面

01:49:41.460 --> 01:49:42.460
去找了个对象

01:49:42.460 --> 01:49:43.460
比方说点了沈阳市

01:49:43.460 --> 01:49:45.460
我就找了沈阳市

01:49:45.460 --> 01:49:47.460
找这个li的文本是沈阳市的

01:49:47.460 --> 01:49:48.460
哪个对象找出来

01:49:48.460 --> 01:49:49.460
找出来的话

01:49:49.460 --> 01:49:50.460
就把对象里面的汽油水

01:49:50.460 --> 01:49:52.460
就是它的地区

01:49:52.460 --> 01:49:54.460
又去绑进地区

01:49:54.460 --> 01:49:56.460
再走一遍

01:49:56.460 --> 01:49:58.460
四川成都

01:49:58.460 --> 01:50:00.460
你看地区出来了

01:50:00.460 --> 01:50:01.460
地区点了过就点了

01:50:01.460 --> 01:50:04.460
没有什么别的事情要做了

01:50:04.460 --> 01:50:05.460
好 最后有一个

01:50:05.460 --> 01:50:06.460
最后一个bug

01:50:06.460 --> 01:50:07.460
最后一句话就写完了

01:50:07.460 --> 01:50:08.460
就是如果说

01:50:08.460 --> 01:50:11.460
这个时候再重新选择省份

01:50:11.460 --> 01:50:12.460
它就会重新选择城市

01:50:12.460 --> 01:50:13.460
这个是没问题的

01:50:13.460 --> 01:50:15.460
对吧 因为我重新填充了

01:50:15.460 --> 01:50:16.460
点了过就重新填充了

01:50:16.460 --> 01:50:17.460
但是这个地方

01:50:17.460 --> 01:50:19.460
你会发现它没变

01:50:19.460 --> 01:50:21.460
所以说这里还要做一件算

01:50:21.460 --> 01:50:25.460
填充地区

01:50:25.460 --> 01:50:26.460
点省份的时候

01:50:26.460 --> 01:50:28.460
地区给我进用

01:50:33.460 --> 01:50:34.460
因为你还没有选择城市

01:50:34.460 --> 01:50:35.460
所以说地区是进用的

01:50:35.460 --> 01:50:39.970
来 走 合备

01:50:39.970 --> 01:50:40.970
再重新选择省份

01:50:40.970 --> 01:50:42.970
河南你看地区进用了

01:50:42.970 --> 01:50:44.970
这个非常非常完美的

01:50:44.970 --> 01:50:46.970
三级级能的上下列表

01:50:46.970 --> 01:50:48.970
而且是真实数据就做完了

01:50:48.970 --> 01:50:50.970
是不是跟很多同学一开始

01:50:50.970 --> 01:50:52.970
在听课之前相当不太一样

01:50:52.970 --> 01:50:54.970
觉得很简单 是吧

01:50:54.970 --> 01:50:57.970
其实过程还是很曲折的

01:50:57.970 --> 01:50:59.970
但是我们这三天的集训

01:50:59.970 --> 01:51:02.970
这三天的集训思维训练

01:51:02.970 --> 01:51:04.970
那一定是让大家觉得保在脏脏的

01:51:04.970 --> 01:51:06.970
感觉很痛苦

01:51:06.970 --> 01:51:08.970
你不痛苦 你很难受苦

01:51:08.970 --> 01:51:10.970
我们都是在痛苦中成长的

01:51:10.970 --> 01:51:13.970
每一个开发者都要经过这个阶段

01:51:13.970 --> 01:51:14.970
好 那么大家接下来

01:51:14.970 --> 01:51:15.970
就是把整个

01:51:15.970 --> 01:51:17.970
这两个特殊的点击事件

01:51:17.970 --> 01:51:18.970
把它写完

01:51:18.970 --> 01:51:20.970
体会它里边的整个流程

01:51:20.970 --> 01:51:21.970
这里边有很多

01:51:21.970 --> 01:51:22.970
用到了很多很多

01:51:22.970 --> 01:51:24.970
所以我们以后开发中

01:51:24.970 --> 01:51:26.970
做到了一些思想 想法

01:51:26.970 --> 01:51:28.970
好 那么这里可能

01:51:28.970 --> 01:51:30.970
今天把它做完

01:51:30.970 --> 01:51:32.970
大家就好好休息一下

