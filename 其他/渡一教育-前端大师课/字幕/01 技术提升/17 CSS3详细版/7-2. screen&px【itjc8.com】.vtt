WEBVTT

00:00.370 --> 00:05.010
来 好了 同学们 这堂课呢 来给大家带来一场精心动魄的讲解

00:05.010 --> 00:07.850
为啥这么说 因为这堂课在所有课程里面

00:07.850 --> 00:13.010
它的深度 广度 超刚程度 复杂程度都是登顶的

00:13.010 --> 00:16.690
空前绝后也史无前例 就是这么一节课

00:16.690 --> 00:20.530
我粗略也估算了一下 这节课啊 全宇宙也就你成格

00:20.530 --> 00:23.170
敢给你去讲一讲 敢给你讲一讲

00:23.170 --> 00:26.490
我也不敢保证我真的能讲到什么传承的地步

00:26.650 --> 00:30.690
为啥这么说呢 因为这节课它真的真的比较符

00:30.690 --> 00:33.610
它已经超出了咱们前端 甚至计算机的部分

00:33.610 --> 00:36.810
它已经是硬件的部分了 能明白我意思吧 是这么回事

00:36.810 --> 00:41.050
但是这一堂课对咱们后期的学习真的是太有指导意了

00:41.050 --> 00:44.730
所以说我真的不忍心去搁置这一堂课 给大家直接呼吁过去

00:44.730 --> 00:48.090
虽然说也可以这么做 但是你成格不是那样的人 是吧

00:48.090 --> 00:50.250
我明白的 我就希望你也能明白

00:50.250 --> 00:53.250
但是你也得体谈体谈成格 这一堂课对我来说

00:53.250 --> 00:55.730
很多名词和术语它也是新鲜的

00:55.770 --> 00:58.290
所以说在表达的过程中对我是一种挑战

00:58.290 --> 01:00.170
如果说表达的不是很流畅

01:00.170 --> 01:03.130
你就那一个点你反复的再听一听 好吧

01:03.130 --> 01:05.130
但是我尽量我慢慢的去说

01:05.130 --> 01:07.530
但是有一些可能表达上会有一些阻碍

01:07.530 --> 01:11.730
我尽量尝试着去给你讲一讲 明白我意思吧 同学们

01:11.730 --> 01:15.010
那么这一堂课它的主旨 我就是一个

01:15.010 --> 01:18.210
让大家消除对屏幕的恐惧

01:18.210 --> 01:22.690
然后这一节课它的名称叫做显示器的成像原理

01:23.610 --> 01:26.690
这是硬件的东西 显示器的成像原理

01:26.690 --> 01:30.650
即PX的实际意义 也就是我们的相苏的实际意义

01:30.650 --> 01:32.530
这俩东西相符相成

01:32.530 --> 01:35.410
行了 在讲课之前 该铺垫的铺垫好了

01:35.410 --> 01:38.250
然后开始正式的铺垫

01:38.250 --> 01:40.330
正式铺垫啥意思 因为这堂课你要顺序来讲

01:40.330 --> 01:41.650
有太多物理学常识 你不知道

01:41.650 --> 01:42.810
那么来讲的话 咱就乱了

01:42.810 --> 01:44.690
我先把一些物理学常识先给你提前

01:44.690 --> 01:46.610
然后一会好讲 作为工具

01:46.610 --> 01:49.650
第一个叫空间混色法

01:49.650 --> 01:50.850
空间混色法

01:50.850 --> 01:53.890
讲空间混色法之前 我先来一个RGB三元色

01:53.890 --> 01:54.850
光学三元色 是吧

01:54.850 --> 01:57.210
混到一起是为成咱们的各种颜色 是吧

01:57.210 --> 01:59.090
三元色有很多种 简单介绍一下

01:59.090 --> 02:00.330
光学三元色 是吧

02:00.330 --> 02:03.410
RGB 美术三元色 红 黄 青 是吧

02:03.410 --> 02:05.290
然后还有工业三元色

02:05.290 --> 02:06.890
也是咱们把印刷三元色

02:06.890 --> 02:09.610
喷图圈的这种 印刷三元色 品红什么什么那种

02:09.610 --> 02:10.650
那个不多说了

02:10.650 --> 02:14.450
咱就说RGB回顾一下RGB什么样的过程

02:14.450 --> 02:16.850
是不是三个光学三元色混合起来

02:16.850 --> 02:18.010
形成一个新的颜色

02:18.050 --> 02:20.170
也是作为咱们计算机显像馆的

02:20.170 --> 02:22.410
一个基本程序原理 能懂我意思吗

02:22.410 --> 02:25.170
咱们理解的这种光学三元色

02:25.170 --> 02:27.930
它的混合的样子是什么样的 同学们

02:27.930 --> 02:29.810
咱们理解光学三元色的混合样子

02:29.810 --> 02:30.570
是不是应该是

02:30.570 --> 02:31.770
就是你想象一下空间

02:31.770 --> 02:33.810
它是如何混合的

02:33.810 --> 02:35.530
是不是空间叠加法

02:35.530 --> 02:36.850
比如说 我到后面

02:36.850 --> 02:38.130
这是一个红色的层

02:38.130 --> 02:39.770
然后这呢 是一个蓝色的层

02:39.770 --> 02:41.010
这是一个绿色的层

02:41.010 --> 02:42.490
它们撒混合到一起之后

02:42.490 --> 02:44.130
那中间这个部分是不是白色的

02:44.130 --> 02:45.530
因为它撒混合到一起了

02:45.530 --> 02:47.770
是不是这是一种空间最轴的一个叠加

02:47.770 --> 02:48.570
明白我意思吗

02:48.570 --> 02:50.850
那被叠加的部分是不是颠色了

02:50.850 --> 02:52.410
这个是不是能理解

02:52.410 --> 02:53.250
没有问题吧 同学们

02:53.250 --> 02:55.570
这是咱们之前所理解的空间三元色

02:55.570 --> 02:56.570
换句话说

02:56.570 --> 02:59.450
光学三元色在空间上的一个混合方法

02:59.450 --> 03:02.130
但是这个东西在光的混合上

03:02.130 --> 03:03.130
是没有任何问题的

03:03.130 --> 03:04.730
因为光没有实质 是吧

03:04.730 --> 03:07.370
但是把它放到咱们物理气泻里面

03:07.370 --> 03:09.570
它这么来排列就是不科学的

03:09.570 --> 03:10.410
因为你想

03:10.410 --> 03:12.650
能呈现光的颜色的设备

03:12.650 --> 03:14.250
它肯定是一个固体

03:14.250 --> 03:16.530
你把这个固体或者说粉状的一个体

03:16.530 --> 03:17.330
不管是银光粉

03:17.330 --> 03:19.130
还是这个银光片

03:19.130 --> 03:20.530
你把它这种

03:20.530 --> 03:22.930
这一种方向的一个叠加式排列

03:22.930 --> 03:24.690
它显然是不科学的

03:24.690 --> 03:26.690
那咱们真实的物理设备上

03:26.690 --> 03:28.770
咱们应该设备上对于这种混色

03:28.770 --> 03:29.810
它也肯定是三元色

03:29.810 --> 03:31.450
三元色构成一个像素点 是吧

03:31.450 --> 03:32.290
咱们都知道

03:32.290 --> 03:33.970
三元色是不是构成一个像素点

03:33.970 --> 03:35.330
一会儿大家说这个像素点

03:35.330 --> 03:36.810
一个像素它包含什么东西

03:36.810 --> 03:39.050
其实一个像素包含三个像点

03:39.050 --> 03:41.330
包含三个像点

03:41.330 --> 03:41.930
是吧

03:41.930 --> 03:44.610
然后靠这三个像点来调解这样的颜色

03:44.610 --> 03:46.170
来混合出咱们所有的颜色

03:46.170 --> 03:48.730
那这三个像点是怎么来排列的

03:48.730 --> 03:50.490
营用的就是咱们的空间混色法

03:50.490 --> 03:52.770
其实空间混色法看起来容易

03:52.770 --> 03:53.770
但你理解起来

03:53.770 --> 03:55.250
你就死活都理解不上去

03:55.250 --> 03:56.490
甚至说你都容易质疑

03:56.490 --> 03:57.450
一开始我也质疑

03:57.450 --> 03:58.530
后来我做了一个例子

03:58.530 --> 03:59.890
就打消我的质疑了

03:59.890 --> 04:00.490
为了要取个例子

04:00.490 --> 04:03.010
什么叫空间混色法

04:03.010 --> 04:05.770
在咱们的任何的可视屏幕上

04:05.770 --> 04:09.610
其实我们能够成像的这种物理学材料

04:09.610 --> 04:10.930
它都是平铺的

04:10.930 --> 04:12.410
没有空间叠加的

04:12.410 --> 04:13.610
我都说一下

04:13.610 --> 04:15.690
基本上是可以理解成是平铺的

04:15.690 --> 04:17.130
也不是绝对的平铺的

04:17.130 --> 04:18.450
就是平铺什么意思

04:18.450 --> 04:19.850
它不会是这个

04:19.850 --> 04:21.530
在这个能弄我意思吧

04:21.530 --> 04:23.610
它肯定不会这样叠加的

04:23.610 --> 04:24.650
它是怎么来放的

04:24.650 --> 04:27.090
比如说三元色咱构成一个像素

04:27.090 --> 04:28.490
它是怎么来放的

04:28.490 --> 04:31.130
比如说三个成像的一个材料

04:31.130 --> 04:33.130
第一个成像材料它就成像红色

04:33.130 --> 04:34.010
能弄我意思吧

04:34.010 --> 04:36.290
第二个成像材料它成像

04:36.290 --> 04:38.730
第二个成像材料它成像绿色

04:41.050 --> 04:44.090
第三个成像材料它成像蓝色

04:44.250 --> 04:47.370
这三个成像材料在空间上

04:47.370 --> 04:49.770
它就这么并排的排列

04:49.770 --> 04:52.010
我们就管它叫做空间混色法

04:52.010 --> 04:54.410
那同学你直接是不是就懵圈了

04:54.410 --> 04:56.250
成个这玩意都不交叉

04:56.250 --> 04:58.490
我们看起来它能混色

04:58.490 --> 04:59.450
你咋可能呢

04:59.450 --> 05:00.570
然后我再告诉你

05:00.570 --> 05:03.130
一个像素就是这三个组成部分

05:03.130 --> 05:05.690
每一个部分都是一个向点

05:05.690 --> 05:07.930
咱是不是说了像素有三元色构成

05:07.930 --> 05:09.050
它是不是一个基本的

05:09.050 --> 05:10.410
成色的一个点叫像素

05:10.410 --> 05:11.610
能呈现出很多的颜色

05:11.610 --> 05:11.850
对吧

05:11.850 --> 05:12.850
它作为一个点来显示

05:12.850 --> 05:13.610
没有问题吧

05:13.610 --> 05:14.810
这是像素的一个基本定义

05:14.810 --> 05:16.090
然后后期咱们再深入

05:16.090 --> 05:17.450
像素到底啥东西

05:17.450 --> 05:19.290
像素里面都有三个向点

05:19.290 --> 05:20.810
或者说也可以叫色点

05:20.810 --> 05:22.170
这个概念非常重要

05:22.170 --> 05:23.050
大家先记住

05:23.050 --> 05:25.690
然后三个向点

05:25.690 --> 05:27.210
它们的排列方式

05:27.210 --> 05:30.090
在空间屋里的这种设备上

05:30.090 --> 05:31.290
它的排列方式

05:31.290 --> 05:33.770
它就是接近于并排排列的

05:33.770 --> 05:35.610
你别管它是柱状还是圆点状

05:35.610 --> 05:36.730
它就是这么来排列的

05:36.730 --> 05:37.850
不是叠加到一起的

05:37.850 --> 05:38.730
没没有意思吧

05:38.730 --> 05:40.090
这么来排列的

05:40.090 --> 05:42.250
怎么可能实现光学的调色

05:42.250 --> 05:43.770
这是不是疑惑的问题

05:43.770 --> 05:44.730
但是我跟你讲

05:44.730 --> 05:46.170
它就是能实现

05:46.170 --> 05:47.210
因为它利用的是什么

05:47.210 --> 05:49.290
利用的就是咱们视觉的一个

05:49.290 --> 05:50.090
视觉叉

05:50.090 --> 05:51.210
咱们眼睛识别不了

05:51.210 --> 05:54.490
那么就是那么细的一个这样的一个颜色

05:54.490 --> 05:56.170
比如说我把这样的一个像素

05:56.170 --> 05:57.610
我给它调到无线无线小

05:57.610 --> 05:58.730
这是红黄蓝柱是吧

05:58.730 --> 05:59.770
红蓝蓝柱是吧

05:59.770 --> 06:01.050
我给它调到无线小

06:01.050 --> 06:01.610
无线小

06:01.610 --> 06:03.930
这三个柱它的颜色都是最饱和的

06:03.930 --> 06:05.930
都是正红正绿正蓝是吧

06:05.930 --> 06:07.450
我给它调到非常小的状态

06:07.450 --> 06:09.210
一旦小于0.2毫米左右的时候

06:09.210 --> 06:10.010
人眼里就废了

06:10.010 --> 06:10.650
你就看不着了

06:12.970 --> 06:13.930
你把蓝色去掉

06:13.930 --> 06:15.770
红绿一配小到一定程度

06:15.770 --> 06:16.810
它就是个黄点

06:16.810 --> 06:19.130
你把绿一色红蓝一配

06:19.130 --> 06:20.410
它就是一个紫色的

06:20.410 --> 06:21.210
你信不信

06:21.210 --> 06:22.250
你可能都不信是吧

06:22.250 --> 06:24.330
但你先了解这叫空间混色法

06:24.330 --> 06:24.810
其实是吧

06:24.810 --> 06:26.250
很不好理解的一个混色法

06:27.130 --> 06:28.490
我带你看一看

06:28.490 --> 06:29.370
我做了一个小例子

06:30.330 --> 06:31.370
什么小例子呢

06:31.370 --> 06:32.730
我这块想写1000个元素

06:32.730 --> 06:33.690
就让我写一个DIV

06:33.690 --> 06:34.730
DIVFlex

06:34.730 --> 06:35.130
为了什么

06:35.130 --> 06:35.930
让它一行是吧

06:35.930 --> 06:36.730
尽量的压缩

06:36.730 --> 06:38.250
咱其实现在这样的长度

06:38.250 --> 06:38.890
压缩不了的

06:38.890 --> 06:40.250
因为还不够长

06:40.570 --> 06:42.730
宽度每个DEMO

06:42.730 --> 06:43.850
宽度都是1

06:43.850 --> 06:44.570
高度是10

06:44.570 --> 06:44.810
是吧

06:44.810 --> 06:46.090
能看得更具体一点

06:46.090 --> 06:47.370
然后我让技术

06:47.370 --> 06:48.970
我让偶数号

06:48.970 --> 06:52.890
我让246的这样DEMO

06:52.890 --> 06:53.770
都是红色

06:53.770 --> 06:56.730
我让135的就是技术的

06:56.730 --> 06:57.450
都变成啥

06:58.170 --> 06:59.450
我这块其实可以添一个R的

06:59.450 --> 07:00.410
可以添一个E稳是吧

07:01.370 --> 07:02.250
一个红色

07:02.250 --> 07:03.130
一个这样的蓝色

07:03.130 --> 07:04.410
红蓝收配一起是紫色

07:05.210 --> 07:05.850
我保存

07:05.850 --> 07:06.490
你看一下

07:06.490 --> 07:07.770
你都出来了

07:08.730 --> 07:09.770
刷新

07:09.770 --> 07:10.570
刷新

07:10.570 --> 07:11.530
出来

07:11.530 --> 07:13.050
我一开始我也没信了

07:13.050 --> 07:14.410
但后来我给自己演示了一下

07:14.410 --> 07:15.530
我离远了一看

07:15.530 --> 07:16.570
还真是那么回事

07:16.570 --> 07:17.290
我一刷新

07:17.290 --> 07:18.170
你会看到

07:18.170 --> 07:19.370
这是红蓝的GUN

07:19.370 --> 07:20.250
配起来的颜色

07:20.250 --> 07:22.170
但是你实际一丑啥啥

07:22.170 --> 07:23.530
是不是紫色

07:23.530 --> 07:24.330
你没有意思吗

07:24.330 --> 07:24.650
陈哥

07:24.650 --> 07:25.450
你咋确定

07:25.450 --> 07:26.570
这俩拼到一起是紫色呢

07:27.930 --> 07:28.730
那这样

07:28.730 --> 07:30.010
我把它干掉

07:30.010 --> 07:30.890
现在你看是吧

07:30.890 --> 07:31.530
我把一个干掉

07:31.530 --> 07:32.410
是不是紫色

07:32.410 --> 07:32.970
没有问题吧

07:32.970 --> 07:33.850
同学们

07:33.850 --> 07:35.050
所以说空间混色法

07:35.050 --> 07:35.690
想不相信

07:35.690 --> 07:36.330
相信了吧

07:36.330 --> 07:36.970
相信完之后

07:37.050 --> 07:37.930
是不是这个

07:37.930 --> 07:38.890
咱就不看了

07:38.890 --> 07:39.370
OK

07:39.370 --> 07:40.010
没有问题吧

07:40.010 --> 07:41.290
那它咱就不看了

07:41.290 --> 07:42.330
空间混色法

07:43.370 --> 07:43.850
OK

07:44.490 --> 07:46.010
然后这个干掉

07:46.010 --> 07:46.330
好了

07:46.330 --> 07:47.850
空间混色法解决之后

07:47.850 --> 07:48.890
我给大家说一下

07:48.890 --> 07:50.570
像素的一个基本构成

07:50.570 --> 07:51.450
是怎么回事

07:51.450 --> 07:53.210
像素作为我们屏幕上

07:53.210 --> 07:55.770
成像的一个色点单位

07:55.770 --> 07:57.210
像素作为我们屏幕上

07:57.210 --> 07:58.490
成像的最小单位

07:58.490 --> 07:59.770
它可以代表一个颜色

07:59.770 --> 08:01.530
无数个像素点加起来之后

08:01.530 --> 08:03.290
就成形成了咱们旋律的颜色

08:03.290 --> 08:04.650
能明白我意思吧

08:04.650 --> 08:06.010
这是像素的基本概念

08:06.490 --> 08:08.570
像素其实不是最小的单位

08:08.570 --> 08:09.530
最小的单位

08:09.530 --> 08:10.250
叫像点

08:11.690 --> 08:14.970
像素由三个像点来构成

08:14.970 --> 08:15.930
这是肯定的

08:15.930 --> 08:17.130
三个像点来构成

08:17.130 --> 08:19.770
是不是红 绿 蓝

08:19.770 --> 08:21.370
然后依照的是

08:21.370 --> 08:22.090
怎么当

08:22.090 --> 08:23.690
依照的是空间混色法

08:24.810 --> 08:25.850
是不是太远了之后

08:25.850 --> 08:26.730
你就分不出来了

08:27.450 --> 08:28.170
这个我问你说

08:28.170 --> 08:29.210
还真没那么高级

08:29.210 --> 08:29.370
是吧

08:29.370 --> 08:29.930
你觉得可能说

08:29.930 --> 08:31.370
屏幕这个气味道里面

08:31.370 --> 08:32.970
是不是光学八八一吨折射了

08:32.970 --> 08:33.370
什么的

08:33.370 --> 08:33.770
没有

08:33.770 --> 08:34.730
就是空间排列了

08:34.730 --> 08:35.210
恶心了

08:35.930 --> 08:37.610
空间混色法

08:37.610 --> 08:38.570
这就是硬件

08:38.570 --> 08:39.770
所以学起来

08:39.770 --> 08:40.810
各种打扮你的认知

08:40.810 --> 08:41.050
是吧

08:41.050 --> 08:42.410
你感觉这个社会还是原始的

08:43.530 --> 08:44.250
空间混色法

08:44.250 --> 08:45.450
按照这么来排列的

08:45.450 --> 08:46.090
这是像素

08:46.090 --> 08:46.810
这里面是像点

08:46.810 --> 08:47.530
明白我意思吧

08:47.530 --> 08:48.250
同学们

08:48.250 --> 08:49.370
这个是不是很容易

08:49.370 --> 08:50.890
这红绿蓝都是像点

08:50.890 --> 08:52.570
红绿蓝都是像点

08:52.570 --> 08:53.130
好了

08:53.130 --> 08:54.730
那么我们再考虑一下

08:54.730 --> 08:56.170
既然说咱们说硬件了

08:56.170 --> 08:57.690
我们红绿蓝这样的像点

08:57.690 --> 08:58.330
就是像素

08:58.330 --> 09:00.250
涉及到我们是不是心体管

09:00.250 --> 09:00.810
还是什么东西

09:00.810 --> 09:02.650
银光粉还是绿光片

09:02.650 --> 09:03.930
它到底是怎么来

09:04.330 --> 09:05.450
构成的这个像素

09:05.450 --> 09:06.410
拿什么来成像的

09:07.130 --> 09:08.730
这块是涉到两个设备了

09:09.610 --> 09:10.730
咱们先记住

09:10.730 --> 09:12.410
一个像素里面有三个像点

09:12.410 --> 09:14.650
然后像点按照空间混色法来排列的

09:14.650 --> 09:15.370
空间混色法

09:16.250 --> 09:16.970
其实就是这样的

09:17.850 --> 09:18.970
要不就成品字形了

09:18.970 --> 09:19.770
这是一个品字形

09:19.770 --> 09:20.490
到了品字形吧

09:20.490 --> 09:20.810
对吧

09:20.810 --> 09:21.290
能看到吧

09:21.290 --> 09:22.170
品字形了

09:22.170 --> 09:23.770
要不就是这种柱状形的

09:23.770 --> 09:24.650
一会再跟大家说

09:24.650 --> 09:26.730
这是两种设备

09:26.730 --> 09:29.610
或者说不同公司出的设备的

09:29.610 --> 09:31.050
对像素点的

09:31.050 --> 09:32.570
全市的方式的不一样

09:32.650 --> 09:36.090
所学的就是不一样了

09:36.090 --> 09:38.330
有的像素是点状的像素

09:38.330 --> 09:39.690
有的是三格状的

09:39.690 --> 09:40.490
咱我画段粗

09:40.490 --> 09:41.130
可能这样的

09:41.130 --> 09:42.170
这样的是吧

09:42.170 --> 09:42.970
是这样的

09:42.970 --> 09:44.410
反正这个像素

09:44.410 --> 09:45.690
是由三个像点来构成的

09:45.690 --> 09:46.410
明白我意思吧

09:46.410 --> 09:46.970
行了

09:46.970 --> 09:48.810
那我们先说一下

09:48.810 --> 09:51.370
这个东西到底是怎么成像的

09:51.370 --> 09:52.410
我们的机器怎么成像的

09:52.410 --> 09:53.770
先说两种机器

09:53.770 --> 09:54.970
先说两种显示屏

09:54.970 --> 09:56.090
CRT显示屏

09:57.290 --> 09:58.570
就是咱们之前的大脑

09:58.570 --> 09:59.370
见过吧

09:59.370 --> 10:00.010
大脑的电视

10:00.010 --> 10:00.570
大脑的电脑

10:00.570 --> 10:01.770
大脑的这个厂那个

10:02.090 --> 10:03.370
后面那么长大脑的

10:03.370 --> 10:04.090
是不是干嘛呢

10:04.090 --> 10:05.850
为了打这种电子树的

10:05.850 --> 10:06.810
打这种电子枪

10:06.810 --> 10:08.170
打出电子树

10:08.170 --> 10:08.810
又来说

10:08.810 --> 10:09.450
然后第二个

10:09.450 --> 10:10.170
叫LED

10:10.170 --> 10:11.130
也叫液晶屏

10:12.170 --> 10:13.690
LED

10:13.690 --> 10:14.250
大家听过吧

10:14.250 --> 10:16.170
LED其实是一种特殊液晶屏

10:16.170 --> 10:17.290
用的技术差不多的

10:17.290 --> 10:18.890
咱就说这两个点形了

10:18.890 --> 10:20.890
CRT虽然说已经过时了

10:20.890 --> 10:24.890
但是它给出的一些像点的排列

10:24.890 --> 10:29.050
包括到最后这个点距

10:29.050 --> 10:30.410
像点就是

10:30.410 --> 10:31.370
然后包括到最后

10:31.370 --> 10:32.730
还有一个点距

10:32.730 --> 10:34.010
它的一个应用方式

10:34.010 --> 10:35.130
都是非常典型的

10:35.130 --> 10:37.210
因为它求点距CRT屏

10:37.210 --> 10:38.730
求点距的方法

10:38.730 --> 10:41.690
CRT屏求点距的方法

10:43.450 --> 10:48.090
方法的意义是几乎所有屏

10:49.690 --> 10:52.810
所有屏幕都通用了

10:53.850 --> 10:56.570
然后我靠嘴来说一下

10:56.570 --> 10:59.610
CRT屏和LED和LED液晶屏

11:00.170 --> 11:01.770
它到底是怎么来成像的

11:01.770 --> 11:03.290
这个靠大家想象了

11:03.290 --> 11:04.730
我没有找到那种

11:04.730 --> 11:06.970
特别你看一眼就特别直观的图

11:06.970 --> 11:08.570
然后我就大概给你说一下

11:08.570 --> 11:09.370
它的基本原理

11:12.250 --> 11:14.090
我拿一下画图版

11:15.370 --> 11:16.650
但是我不拿它画

11:16.650 --> 11:17.530
它实在太饿了

11:18.730 --> 11:19.610
我还是拿这个画

11:20.250 --> 11:21.530
就是我先描述一下

11:21.530 --> 11:22.330
看你能不能懂

11:24.170 --> 11:25.850
CRT屏到底是怎么回事

11:25.850 --> 11:26.730
它怎么来成像的

11:27.210 --> 11:28.250
CRT屏

11:28.330 --> 11:31.930
它的最末端会有一个这样的电子枪

11:32.810 --> 11:34.410
最末端会有这样的电子枪

11:34.970 --> 11:37.130
然后电子枪可以打出这样的电子树

11:37.690 --> 11:39.050
比如说这块有个电子枪

11:40.970 --> 11:41.690
耐心点

11:41.690 --> 11:42.650
最快我慢点来

11:42.650 --> 11:44.970
因为我也是很少说这种专业树

11:44.970 --> 11:46.810
可能说在表达上会有点吃力

11:47.290 --> 11:48.650
这块会有个电子枪

11:48.650 --> 11:51.050
然后电子枪会打出这样的电子树

11:51.530 --> 11:52.650
会打出这样的电子树

11:53.050 --> 11:56.010
这个电子树肯定是光学的这种光的电子树

11:56.010 --> 11:58.010
所以说它符合玻璃二相性的那种意思吧

11:58.090 --> 11:59.290
符合玻璃二相性 你们再说吧

11:59.290 --> 12:00.330
反正你也不懂

12:00.330 --> 12:01.770
一会来说一下符合玻璃二相性的影响

12:02.330 --> 12:03.610
电子枪打出电子树

12:03.610 --> 12:05.690
电子树直接会打到这个屏幕上

12:05.690 --> 12:06.170
但是成个

12:06.170 --> 12:08.250
诶 电子树打到屏幕上就能成像吗

12:08.250 --> 12:09.130
当然不能了

12:09.130 --> 12:11.850
这个屏幕上会涂了很多银光粉

12:12.730 --> 12:15.530
银光粉在接到这种电子树的时候

12:17.050 --> 12:18.810
就叫高屏电子树

12:18.810 --> 12:21.050
高屏持续电子树

12:22.490 --> 12:22.810
树

12:24.010 --> 12:24.730
一树花

12:25.530 --> 12:26.090
树 对吧

12:26.810 --> 12:27.770
高屏持续电子树

12:27.770 --> 12:29.770
电子枪打出高屏持续电子树

12:29.770 --> 12:30.810
到这屏幕上

12:30.810 --> 12:32.410
屏幕上是有银光粉的

12:33.450 --> 12:36.730
银光粉在接受到这个电子树之后

12:36.730 --> 12:38.570
银光粉它有这样一个排列方式

12:38.570 --> 12:39.370
有银光粉

12:40.490 --> 12:42.010
这是一种化学材料是吧

12:42.010 --> 12:44.410
银光粉在接受这种电子树之后

12:44.410 --> 12:45.130
会被点亮

12:45.130 --> 12:46.170
银光粉自己没亮

12:46.570 --> 12:47.770
它接受电子树之后

12:47.770 --> 12:49.050
就会被点亮 会被激发

12:49.530 --> 12:51.530
但是你打游戏一树

12:51.530 --> 12:52.650
它就亮了一下

12:52.650 --> 12:54.410
你持续打它就持续亮

12:54.410 --> 12:56.730
这是�光粉发光的一个原理

12:56.730 --> 12:57.610
那东西是吧

12:57.690 --> 12:59.530
银光粉有很多种银光粉

13:00.170 --> 13:01.210
咱们用的银光粉

13:01.210 --> 13:02.490
基本上就是三种

13:02.490 --> 13:06.730
有红银光粉 绿银光粉和蓝银光粉

13:07.130 --> 13:09.290
这个银光粉排列的方式

13:09.290 --> 13:11.610
就是咱们向点的排列方式

13:11.610 --> 13:12.330
能动我意思吗

13:12.330 --> 13:13.210
也就是说

13:13.210 --> 13:14.250
实际上银光粉

13:14.250 --> 13:15.930
就是基本上是这么来排列的

13:16.490 --> 13:18.090
这么来排列成三角形品质形

13:18.090 --> 13:19.210
或者这么来排列的

13:19.210 --> 13:20.890
机器不同 设备不同

13:20.890 --> 13:21.690
比如索尼

13:21.690 --> 13:22.570
后来他们出的

13:22.570 --> 13:23.210
索尼松下

13:23.210 --> 13:24.090
他们出的后来就变成

13:24.090 --> 13:25.610
这种三轮型的这种

13:25.610 --> 13:26.890
银光粉的排列方式了

13:26.970 --> 13:28.970
然后一开始是这种圆形的

13:28.970 --> 13:29.770
成品质形的

13:29.770 --> 13:32.410
三个银光粉的排列方式

13:32.410 --> 13:34.010
然后当我们的电子树

13:34.010 --> 13:35.050
打到这个银光粉之后

13:35.050 --> 13:36.170
银光粉被点亮

13:36.170 --> 13:37.370
持续打就持续亮

13:37.370 --> 13:40.970
然后根据我们电子树强弱的不同

13:40.970 --> 13:44.250
每个被点亮的银光粉的颜色强弱不同

13:44.250 --> 13:46.250
最后混合出不同的颜色

13:46.250 --> 13:47.930
形成一个像素点

13:47.930 --> 13:49.450
那么多个像素点

13:49.450 --> 13:50.570
是不是就成像了

13:51.210 --> 13:52.010
明白我意思吗

13:52.970 --> 13:56.570
这就是咱们CRT这样的一个

13:58.090 --> 13:59.690
这样的一个屏幕的一个成像原理

13:59.690 --> 14:00.090
当然了

14:00.090 --> 14:01.130
它没有这么简单

14:01.130 --> 14:02.570
是不是我把这个基本原理给你

14:02.570 --> 14:03.130
给你讲通了

14:03.130 --> 14:03.770
后面电子箱

14:03.770 --> 14:04.650
所以它大吧

14:04.650 --> 14:05.770
是不是大脑袋

14:05.770 --> 14:06.890
就这么大一个大脑袋

14:06.890 --> 14:07.290
是吧

14:07.290 --> 14:08.490
这是一个电视是吧

14:08.490 --> 14:10.170
然后这块是个电视屏

14:10.170 --> 14:10.490
是吧

14:10.490 --> 14:10.890
对吧

14:10.890 --> 14:11.450
电视屏

14:12.010 --> 14:13.050
这块能看到电视屏

14:13.050 --> 14:14.090
这可能是个不过力是吧

14:14.090 --> 14:15.930
通过这眼睛在这块看

14:15.930 --> 14:16.170
是吧

14:17.450 --> 14:18.410
眼睛在这块看

14:18.410 --> 14:18.650
是吧

14:18.650 --> 14:19.530
能动我意思吗

14:19.530 --> 14:21.210
然后是这样的

14:21.370 --> 14:22.410
还没完事

14:22.410 --> 14:23.930
我再给你深入再讲一下

14:23.930 --> 14:26.490
但这个跟咱们CRT没关系了

14:26.490 --> 14:28.490
这个电子箱在打到它身上的时候

14:28.490 --> 14:30.730
其实它不可能就放任这么多个电子

14:30.730 --> 14:31.530
无数个电子箱

14:31.530 --> 14:33.050
一起来打这样的营光粉

14:33.050 --> 14:34.170
营光粉有多少个点

14:34.170 --> 14:35.530
电子箱就打出多少电子树

14:35.530 --> 14:36.250
能动我意思吧

14:36.250 --> 14:37.050
打出这样的电子树

14:37.050 --> 14:38.330
当然这个电子箱

14:38.330 --> 14:39.290
好点的电子箱

14:39.290 --> 14:40.650
一箱能射出三人树

14:40.650 --> 14:42.170
能打到一个像素点的

14:42.170 --> 14:43.450
三个像点是吧

14:43.450 --> 14:45.610
不好的电子箱能打出来

14:45.610 --> 14:46.970
就是一个电子箱

14:46.970 --> 14:48.490
只能打出来一个树

14:48.490 --> 14:50.570
一个电子箱打出来一树的话

14:50.650 --> 14:52.970
那就想打出一个像素点

14:52.970 --> 14:55.130
是不是需要三个电子箱同时打

14:55.130 --> 14:56.010
那三个电子箱

14:56.010 --> 14:56.970
同时往一个点秒

14:56.970 --> 14:59.290
是不是可能就出现一点小的误差什么的

14:59.290 --> 15:02.010
所以说便宜的就是三枪的

15:02.010 --> 15:03.850
贵的就是单枪打三树

15:03.850 --> 15:06.170
单枪打三树索尼最早实现的

15:06.170 --> 15:08.730
所以说索尼的屏幕一般来说它很准

15:08.730 --> 15:09.770
所以这一点上

15:09.770 --> 15:11.050
在原来的CRT屏上

15:11.050 --> 15:13.050
这种打打着电子树这种技术上

15:13.050 --> 15:14.410
索尼那时候是无人能理的

15:14.410 --> 15:15.290
非常非常厉害

15:15.290 --> 15:16.090
你应该有意思吧

15:16.090 --> 15:18.490
但是这个电子树它容易歪

15:18.490 --> 15:19.130
你知道吧

15:19.130 --> 15:20.650
在仪式它容易散射

15:20.650 --> 15:21.770
因为它是光嘛

15:21.770 --> 15:22.650
光被它说容易歪

15:22.650 --> 15:23.370
那是那种歪

15:23.370 --> 15:24.170
我从说一下

15:24.170 --> 15:25.450
就是光它有玻璃上性

15:25.450 --> 15:26.650
它会反射散射效应

15:26.650 --> 15:28.090
所以说你这光不能让烂打

15:28.090 --> 15:29.850
你如果都是这块都是刷着刷

15:30.730 --> 15:32.250
都是这样的电子树的话

15:32.250 --> 15:33.370
你这样烂打的话

15:33.370 --> 15:34.410
它可能会互相影响

15:34.410 --> 15:35.530
比如说这块电子树可能说

15:35.530 --> 15:36.490
这块有粒子什么的

15:36.490 --> 15:37.610
可能刷刷好人还散射一点

15:37.610 --> 15:38.330
等等会错

15:38.330 --> 15:38.970
不能烂打

15:38.970 --> 15:40.490
所以这块它中间隔了一个板

15:41.290 --> 15:42.330
隔了一个板

15:42.330 --> 15:44.730
用于加以矫正这个光的

15:44.730 --> 15:45.690
这个板叫什么呢

15:46.250 --> 15:47.530
这个板叫阴罩层

15:47.850 --> 15:50.250
我都不知道能不能打出来这俩字

15:50.250 --> 15:52.170
树音的音

15:52.170 --> 15:54.250
就是哥照着你的照

15:54.250 --> 15:55.690
照着你

15:55.690 --> 15:56.650
哥照着你

15:56.650 --> 15:58.250
这块照这个阴罩层

15:58.250 --> 15:59.450
它叫阴罩层

15:59.450 --> 16:00.810
然后阴罩层的

16:00.810 --> 16:04.090
会和这个银光粉相对应的

16:04.090 --> 16:04.890
银光粉在哪

16:04.890 --> 16:05.610
它就对应的

16:05.610 --> 16:06.170
花个口

16:06.170 --> 16:07.050
在那

16:07.050 --> 16:08.330
然后那你这玩意吧

16:08.330 --> 16:09.210
能过去

16:09.210 --> 16:10.890
准确的能过去

16:10.890 --> 16:11.690
你要是偏的

16:11.690 --> 16:12.730
或者说散射光

16:12.730 --> 16:13.450
你就别过去了

16:13.450 --> 16:15.210
精准的打过去

16:15.530 --> 16:17.210
这是CRT

16:17.210 --> 16:19.610
这个影屏成像的一个原理

16:19.610 --> 16:20.570
你明白我意思吧

16:20.570 --> 16:22.010
CRT影屏成像的一个原理

16:22.010 --> 16:22.490
就是这样的

16:22.490 --> 16:23.770
后面电子箱打电子树

16:23.770 --> 16:25.130
高屏持续电子树

16:25.130 --> 16:26.250
然后点亮阴光粉

16:26.250 --> 16:27.130
然后来这样

16:27.130 --> 16:28.490
来做回来这样的一个成像的原理

16:28.490 --> 16:29.130
来弄一次吧

16:29.130 --> 16:29.770
所以那个时候吧

16:29.770 --> 16:30.890
比较低级

16:30.890 --> 16:32.010
然后后来呢

16:32.970 --> 16:34.330
后来怎么回事呢

16:34.330 --> 16:35.530
后来又过了一段时间

16:35.530 --> 16:36.410
我可咔嚓了

16:36.410 --> 16:37.210
咔嚓了

16:37.210 --> 16:38.490
就咔就没了

16:38.490 --> 16:39.290
是吧

16:39.290 --> 16:40.010
咔就没了

16:40.010 --> 16:41.370
这个你可怎么回来了

16:41.370 --> 16:42.490
我在这吧

16:42.490 --> 16:43.450
我再弄一一是吧

16:44.090 --> 16:44.650
我再弄一一

16:46.170 --> 16:47.690
我把它放到这

16:47.690 --> 16:48.570
哎

16:48.570 --> 16:49.050
可以

16:49.050 --> 16:50.090
放到这还有

16:50.090 --> 16:50.730
然后现在呢

16:50.730 --> 16:51.370
我再画一个

16:51.370 --> 16:52.890
再画一个啥呢

16:54.410 --> 16:54.810
再画

16:54.810 --> 16:55.050
哎

16:55.050 --> 16:56.090
我那个我画图版呢

16:56.970 --> 16:58.650
再来一个CRT版是吧

16:58.650 --> 17:00.330
然后说一下历史过渡了

17:00.330 --> 17:02.650
这个到了一定时候呢

17:02.650 --> 17:04.570
其实这个材料是一开始早就有了

17:04.570 --> 17:05.530
什么材料一开始早就有呢

17:05.530 --> 17:06.090
液晶材料

17:06.650 --> 17:08.170
1888年的时候

17:08.170 --> 17:10.250
德国的一个生理学家

17:10.250 --> 17:11.770
我也不知道为啥叫生理学家

17:11.770 --> 17:12.570
反正是这么回事

17:12.570 --> 17:14.410
1888年的时候呢

17:14.570 --> 17:15.610
德国的一个生理学家

17:15.610 --> 17:16.410
一大哥啊

17:16.410 --> 17:18.010
忽然发现一种新的材料

17:18.010 --> 17:19.050
叫液晶材料

17:19.610 --> 17:20.650
这个液晶材料啊

17:20.650 --> 17:21.290
了不得啊

17:21.290 --> 17:22.890
但那时候没做电视啊

17:22.890 --> 17:24.410
直到很久之后再做电视

17:24.410 --> 17:25.450
因为它不好调

17:25.450 --> 17:27.210
这个液晶材料呢

17:27.210 --> 17:28.170
它能保持一个什么呢

17:28.650 --> 17:30.090
它能够呈现两种

17:30.090 --> 17:31.530
它能够呈现两种态

17:31.530 --> 17:32.490
一个是固态

17:32.490 --> 17:33.290
一个是液态

17:33.850 --> 17:34.410
哎

17:34.410 --> 17:36.090
通过特定的这样的一个

17:36.090 --> 17:37.130
你是高温也好

17:37.130 --> 17:38.010
还是磁场也好

17:38.010 --> 17:39.290
它就能变换啊

17:39.290 --> 17:40.570
而且变换的很细腻

17:40.570 --> 17:41.450
又能变成固态

17:41.450 --> 17:42.330
又能变成液态

17:42.330 --> 17:42.970
哎呦

17:42.970 --> 17:44.490
后来咱们的液晶电视

17:44.490 --> 17:45.850
就根据这种液晶材料

17:45.850 --> 17:47.370
来做了一个成像的一个原理

17:47.370 --> 17:49.050
这个液晶电视就了不得了

17:49.050 --> 17:50.730
液晶电视怎么样的成像原理呢

17:50.730 --> 17:52.330
由于这个液晶体

17:52.330 --> 17:54.330
它可以变成固态和液态

17:54.330 --> 17:56.410
而且非常细腻的受控

17:56.970 --> 17:57.930
所以说咱们

17:57.930 --> 17:59.370
通过一些调控方式

17:59.370 --> 18:01.210
可以让一个局部地区的

18:01.210 --> 18:02.970
这样的一个液晶材料

18:02.970 --> 18:04.410
变成固态和液态

18:04.410 --> 18:06.730
来对光发生不同的偏褶

18:06.730 --> 18:08.650
最后来帮咱们去打出

18:08.650 --> 18:10.010
那样的一个红绿蓝

18:10.010 --> 18:11.210
这样的一个成像

18:11.290 --> 18:12.170
听到有意思吧

18:12.970 --> 18:14.330
现在怎么来做液晶屏这样

18:14.330 --> 18:15.370
液晶屏是不是大家都知道

18:15.370 --> 18:16.170
很薄是吧

18:16.170 --> 18:18.650
比如说这是一个液晶屏

18:18.650 --> 18:20.090
等会这不是液晶屏

18:20.090 --> 18:21.130
液晶屏里面的材料

18:21.130 --> 18:22.090
液晶屏可能是这样的

18:23.130 --> 18:23.850
这是液晶屏

18:25.130 --> 18:26.250
我就稍微画得快点

18:26.250 --> 18:27.210
实际不可能这么快是吧

18:27.770 --> 18:28.570
就画得快点

18:28.570 --> 18:29.370
我就这块

18:29.850 --> 18:30.970
这个方块

18:31.370 --> 18:31.770
挺好

18:31.770 --> 18:32.330
这个方块

18:32.810 --> 18:35.610
它是一块可以导电的玻璃

18:35.610 --> 18:38.010
这块也是有一个可以导电的玻璃

18:38.010 --> 18:40.330
然后中间放的是液晶的材质

18:41.290 --> 18:44.090
也说液晶的材质放到了两个导电玻璃里面

18:44.090 --> 18:44.570
是吧

18:44.570 --> 18:46.170
放到了两个导电玻璃里面

18:46.170 --> 18:48.250
然后导电玻璃这一块通上电

18:48.250 --> 18:48.890
通上磁场

18:50.490 --> 18:51.370
这不能这么来

18:51.370 --> 18:52.090
这块通上电

18:53.290 --> 18:54.650
给你加磁场

18:54.650 --> 18:55.610
加完磁场之后

18:56.330 --> 18:56.970
你这玩意

18:58.330 --> 18:59.450
等会我给你加磁场

18:59.450 --> 19:00.010
比如通电了

19:00.490 --> 19:01.130
通电了

19:01.130 --> 19:02.570
通电完之后是不加磁场

19:02.570 --> 19:03.690
比如说我们的屏幕在这

19:04.090 --> 19:05.050
比如说我们屏幕在这

19:05.050 --> 19:05.770
实际的玻璃

19:05.770 --> 19:06.810
那个屏幕在这

19:07.290 --> 19:09.370
通电之后磁场这么来做

19:09.370 --> 19:09.770
磁场

19:10.170 --> 19:10.490
嘎嘎

19:11.290 --> 19:12.490
来磁场这么来做

19:12.490 --> 19:14.650
然后磁场会作用到液晶的

19:14.650 --> 19:15.770
每一个这样的颗粒上

19:16.330 --> 19:18.890
然后磁场的方向和强弱

19:18.890 --> 19:21.050
就会导致液晶屏

19:21.050 --> 19:22.170
当前这个点

19:22.170 --> 19:24.010
它到底成固态还是液态

19:24.010 --> 19:25.690
然后就会导致这个光

19:25.690 --> 19:26.810
发生什么样的偏折

19:26.810 --> 19:28.090
所以说光从哪来的

19:28.090 --> 19:28.570
你别着急

19:28.570 --> 19:29.450
光是从这来的

19:29.450 --> 19:31.050
刷刷刷来一个真实的光

19:31.050 --> 19:31.930
我来个光

19:32.250 --> 19:33.610
我光拿这个大点来画

19:34.810 --> 19:35.370
这是光

19:36.010 --> 19:36.810
光就往这边走

19:37.130 --> 19:38.010
光就往这边走

19:38.410 --> 19:39.370
光就往这边走

19:39.690 --> 19:41.210
当你这个磁场

19:41.210 --> 19:42.970
这一条线的磁场

19:43.370 --> 19:45.770
让液晶屏变成了这种液态的

19:45.770 --> 19:46.890
这个光就能过来

19:47.290 --> 19:48.170
就是正常的光

19:48.170 --> 19:48.810
不是这么电子数

19:48.810 --> 19:49.690
光就能过来

19:49.690 --> 19:51.290
然后当你这个点

19:51.930 --> 19:53.130
变成固态的时候

19:53.130 --> 19:54.170
这个光过不来了

19:54.170 --> 19:54.890
过不来怎么办

19:54.890 --> 19:57.050
过不来向上发生这样的偏折

19:57.050 --> 19:57.770
相当于就没了

19:57.770 --> 19:58.570
能懂意思吧

19:58.570 --> 19:59.610
有的光能过来

19:59.610 --> 20:00.970
有的光过不来是吧

20:00.970 --> 20:01.930
那能过来

20:01.930 --> 20:02.410
过不来

20:02.410 --> 20:03.770
这个东西调解的是啥呢

20:03.770 --> 20:04.650
你别着急

20:05.530 --> 20:07.050
光只要打过来了

20:07.050 --> 20:08.330
在屏幕这一块

20:08.330 --> 20:10.650
它依然有一个成像的一个区域

20:10.650 --> 20:12.330
成像的区域里面放的是啥呢

20:12.330 --> 20:13.530
最后不放银光粉

20:13.530 --> 20:15.130
放银光粉太低级了

20:15.130 --> 20:16.250
放的是绿光片

20:16.890 --> 20:17.850
放的是绿光片

20:19.530 --> 20:20.490
绿光片呢

20:21.050 --> 20:22.650
它也有红绿蓝

20:22.650 --> 20:23.530
绿光片

20:23.530 --> 20:24.490
哎呀绿光片

20:24.490 --> 20:24.810
我跟你说

20:24.810 --> 20:26.810
这个东西简直就是太好了理解了

20:26.810 --> 20:28.090
绿光片是啥东西呢

20:28.090 --> 20:29.930
比如说我们给你一个绿的玻璃

20:29.930 --> 20:30.810
现在绿的玻璃

20:30.810 --> 20:32.250
红的玻璃和蓝的玻璃

20:32.250 --> 20:33.690
那这三玻璃透过去的光

20:33.690 --> 20:35.050
是不是只能绿红蓝的

20:35.050 --> 20:35.850
能懂我意思吗

20:36.330 --> 20:37.930
这块有无数的绿光片

20:37.930 --> 20:41.370
也是根据向点的这种排列方式来排列的

20:41.370 --> 20:42.410
排列是绿光片

20:42.410 --> 20:44.090
然后这个千丝万缕的光

20:44.090 --> 20:45.050
就刮光了这块射

20:45.050 --> 20:46.730
射完之后能射过来的光

20:46.730 --> 20:48.170
就会点亮这个绿光片吧

20:48.730 --> 20:50.410
正常的一个自然光进来之后

20:50.410 --> 20:51.210
打到绿光片上

20:51.210 --> 20:52.490
是不是你是绿色绿光片

20:52.490 --> 20:53.370
就只能透绿光

20:53.370 --> 20:54.170
你是红色绿光片

20:54.170 --> 20:55.290
只能透红光

20:55.290 --> 20:56.890
然后透过来之后这个光

20:56.890 --> 20:58.970
是不是经过空间混测法

20:58.970 --> 21:00.330
空间混色法是吧

21:00.330 --> 21:01.210
空间一混色

21:01.210 --> 21:02.090
是不是又混出来

21:02.090 --> 21:03.530
咱们想要的一个像素点的

21:03.530 --> 21:04.410
像素色了

21:04.410 --> 21:05.210
明白我意思吗

21:05.210 --> 21:06.490
向点混能像素色

21:06.490 --> 21:07.450
根据空间混测法

21:07.450 --> 21:09.610
是不是到最后屏幕依然能够成像

21:09.610 --> 21:10.410
明白我意思吗

21:10.410 --> 21:12.330
只不过叶经屏处理的更细腻

21:12.330 --> 21:13.850
比原来那个更强一些

21:13.850 --> 21:14.810
而且更稳定

21:14.810 --> 21:15.530
这是叶经屏

21:15.530 --> 21:16.410
然后它还薄

21:16.410 --> 21:16.810
是吧

21:16.810 --> 21:17.610
不需要那个枪

21:17.610 --> 21:18.650
不需要大脑的了吧

21:18.650 --> 21:20.250
这是叶经屏到现在这个引用

21:20.250 --> 21:20.890
明白我意思吗

21:20.890 --> 21:22.810
这是叶经屏的一个成像原理

21:22.810 --> 21:24.170
是不是到这一块为止

21:24.170 --> 21:26.090
大家对这个屏幕的成像原理

21:26.090 --> 21:27.450
没有什么太大的问题

21:27.450 --> 21:28.090
同学们

21:28.090 --> 21:29.210
然后我跟大家说一下

21:29.210 --> 21:30.810
LCD就是叶经屏

21:30.810 --> 21:32.650
LED是一种特殊叶经屏

21:32.650 --> 21:34.090
它俩的技术是一样的

21:34.090 --> 21:34.810
明白我意思吗

21:36.490 --> 21:37.450
新的屏幕

21:37.450 --> 21:38.410
激光屏

21:38.410 --> 21:39.450
银丝K屏等等

21:39.450 --> 21:40.730
再说

21:40.730 --> 21:41.850
它俩就是最经典

21:41.850 --> 21:43.290
但是不管是那个屏

21:43.290 --> 21:45.050
那你的屏幕里面的

21:45.050 --> 21:46.410
显示颜色的基本单位

21:46.410 --> 21:47.050
肯定是像素

21:47.050 --> 21:48.570
像素的基本单位肯定是向点

21:48.570 --> 21:48.890
是吧

21:48.890 --> 21:50.490
你向点的排列方式是经典的

21:50.490 --> 21:52.090
是CRT里面一开始手创

21:52.090 --> 21:52.650
是吧

21:52.650 --> 21:54.650
这是一个空间混测法的

21:54.650 --> 21:55.610
一个这样一个应用

21:55.610 --> 21:56.330
明白我意思吗

21:56.330 --> 21:58.010
然后紧接着

21:58.010 --> 21:59.610
我们来说一下

21:59.610 --> 22:01.210
像素究竟多大的一个问题

22:01.210 --> 22:03.850
像素多大的问题

22:03.850 --> 22:04.890
我们来看一下

22:05.850 --> 22:06.890
看哪呢

22:06.890 --> 22:07.690
比如说

22:07.690 --> 22:08.890
吓死我了

22:08.890 --> 22:10.250
看这啊

22:10.250 --> 22:11.450
差点把的又踢关机了

22:11.450 --> 22:12.490
但后来我一想

22:12.490 --> 22:13.850
我虽然说在公司路过间的

22:13.850 --> 22:15.450
但是我用的是我自己电脑

22:15.450 --> 22:15.850
没事

22:15.850 --> 22:17.850
我电脑没有机箱

22:17.850 --> 22:18.490
好了

22:18.490 --> 22:19.530
我们来看这

22:19.530 --> 22:20.570
就假如说

22:20.570 --> 22:22.250
我们现在的向点

22:22.250 --> 22:23.530
是这么来排列的

22:23.530 --> 22:25.610
明白我意思吗

22:25.610 --> 22:26.570
不管是绿光片

22:26.570 --> 22:28.090
不管这是绿光片

22:28.090 --> 22:31.210
还是我们的银光粉

22:31.210 --> 22:31.850
向点

22:31.850 --> 22:33.290
这种向点的排列

22:33.290 --> 22:34.490
就是最经典的方式了

22:34.570 --> 22:35.690
最早的CRT的一个

22:35.690 --> 22:37.530
等腰三角形的排列方式

22:37.530 --> 22:39.210
不是等别三角形排列方式

22:39.210 --> 22:40.090
这是一大堆向点

22:40.090 --> 22:40.970
明白我意思吗

22:40.970 --> 22:42.890
什么叫像素呢

22:42.890 --> 22:46.650
一个像素是不是就是这个样子呀

22:46.650 --> 22:48.650
TASA是不是就是一个像素

22:48.650 --> 22:49.370
对吧

22:49.370 --> 22:51.210
TASA是不是又是一个像素

22:51.210 --> 22:51.770
对吧

22:51.770 --> 22:53.370
TASA是不是又是一个像素

22:53.370 --> 22:54.010
明白我意思吧

22:54.010 --> 22:55.370
像素是不是实际的

22:55.370 --> 22:56.410
这种包含的样子

22:56.410 --> 22:57.610
就是这样的对吧

22:57.610 --> 22:59.210
现在我们关注一个问题

22:59.210 --> 23:01.850
我们想知道像素的大小是多少

23:01.850 --> 23:02.570
其实呢

23:02.570 --> 23:04.250
想知道像素的大小是多少

23:04.250 --> 23:06.170
真的是不太好求

23:06.170 --> 23:08.170
因为所有国际上给我们的规范

23:08.170 --> 23:09.690
都没有说太大小的

23:09.690 --> 23:11.370
我们都指的是

23:11.370 --> 23:12.170
都指的是什么呢

23:12.170 --> 23:13.370
都指的是点句

23:13.370 --> 23:14.330
什么叫点句呢

23:14.330 --> 23:17.370
点句就是从一个同色的点

23:17.370 --> 23:18.890
到另一个同色的点

23:18.890 --> 23:19.930
就是从这个红色点

23:19.930 --> 23:20.730
到这个红色点

23:20.730 --> 23:22.410
这个距离叫做点句

23:22.410 --> 23:23.930
这个是我们研究的

23:23.930 --> 23:25.210
非常多这个东西

23:25.210 --> 23:27.450
也就是说给你同一个尺寸

23:27.450 --> 23:29.050
比如说我给你一个尺寸

23:29.050 --> 23:30.810
我给你一英寸的尺寸

23:30.810 --> 23:34.090
是不是你里面放的像素越多

23:34.090 --> 23:37.530
是不是你的显示的效果就越好

23:37.530 --> 23:38.730
那相对来说

23:38.730 --> 23:40.810
你给你的固定的尺寸是固定的

23:40.810 --> 23:41.850
里面像素越多

23:41.850 --> 23:44.170
说明里面的每个像素是不是越小

23:44.170 --> 23:46.490
我们怎么来衡量像素小呢

23:46.490 --> 23:48.730
怎么来说像素有多大呢

23:48.730 --> 23:50.890
其实我们是用点句来表示的

23:50.890 --> 23:52.410
虽然说这样的一个点句吧

23:52.410 --> 23:52.970
你会看到

23:55.690 --> 23:57.530
我写一个我看有没有三角形

23:58.170 --> 23:59.210
还真有三角形

23:59.770 --> 24:01.450
比如说这是一个三角形

24:01.450 --> 24:02.170
我把它呢

24:02.730 --> 24:05.530
弄成这样的有边的无天冲的

24:05.530 --> 24:08.570
比如说这个三角有白色的天冲的

24:08.570 --> 24:10.490
天冲是白色的

24:10.490 --> 24:11.610
然后我说一下

24:11.610 --> 24:13.130
比如说这是一个三角形

24:13.130 --> 24:14.250
大家能看到吧

24:14.250 --> 24:15.930
三角形然后我弄的小一点

24:15.930 --> 24:17.770
然后要这样的

24:17.770 --> 24:18.890
这样三角形好吧

24:18.890 --> 24:20.890
OK这样三角形

24:20.890 --> 24:22.730
我把这三角形放到这

24:22.730 --> 24:24.570
比如说这三角形

24:24.570 --> 24:26.890
这个三角形其实它的大小

24:26.890 --> 24:27.690
不太好求

24:27.690 --> 24:30.570
换句话说也没有什么太多的指导意义

24:30.890 --> 24:32.170
我们需要的是什么呢

24:32.170 --> 24:33.770
我们需要的其实是点句

24:33.770 --> 24:36.330
用点句来表示这里面有多少个像素

24:36.330 --> 24:38.010
比如说这个红色的点

24:38.010 --> 24:39.290
到这个红色点的距离

24:39.290 --> 24:41.530
是不是也大致能描述出

24:41.530 --> 24:43.290
这个像素到底是多大

24:44.250 --> 24:45.610
啊看啊

24:45.610 --> 24:46.490
看有多少个点句

24:47.370 --> 24:48.410
是不是它俩

24:48.410 --> 24:50.250
从这个红色到这个红色

24:51.210 --> 24:52.010
对吧

24:52.010 --> 24:53.930
是不是大致也能描述出

24:53.930 --> 24:56.010
这个像素密集程度吧

24:56.010 --> 24:57.690
是不是也能描述出像素密集程度

24:57.690 --> 24:58.890
比如说我说这里面

24:59.050 --> 25:01.050
同一个尺寸下像素多

25:01.050 --> 25:02.330
和同一个尺寸下

25:03.130 --> 25:04.650
这个点句小

25:04.650 --> 25:05.610
是不是一个概念

25:05.610 --> 25:07.130
你点句越小是没啥

25:07.130 --> 25:08.410
说明你这像素越小啊

25:08.410 --> 25:09.450
你这个圆是不是越小

25:10.330 --> 25:11.130
你这个圆

25:11.130 --> 25:11.930
哎呀

25:11.930 --> 25:14.090
你这个圆每个圆是不是都越小

25:14.090 --> 25:14.970
你圆小了

25:14.970 --> 25:16.250
你点句自然小啊

25:16.250 --> 25:17.450
能懂我意思吗

25:17.450 --> 25:18.650
啊明白我意思吧啊

25:18.650 --> 25:19.690
所以说点句啊

25:19.690 --> 25:21.610
跟这个实际像素的大小

25:21.610 --> 25:22.730
还是不太一样

25:22.730 --> 25:24.810
因为实际像素是不是三角形了呢

25:24.810 --> 25:25.530
明白我意思吧

25:25.530 --> 25:26.490
但是在显示的时候

25:26.490 --> 25:27.610
有的是六边形的

25:27.610 --> 25:28.890
不是说三个点显示六边形

25:28.890 --> 25:30.170
就是边界有的时候六边形了

25:30.170 --> 25:31.210
那你甭管

25:31.210 --> 25:32.970
但真实的像素一般来说

25:32.970 --> 25:33.770
按这种排列的

25:33.770 --> 25:34.890
才是三角形了是吧

25:34.890 --> 25:37.610
所以说点句也是描述

25:37.610 --> 25:40.090
我们这个成像细腻程度的一个

25:40.090 --> 25:41.130
非常重要的指标

25:41.130 --> 25:43.130
也有人说点句就是像素大小

25:43.130 --> 25:44.650
你非这么说也可以

25:44.650 --> 25:45.770
因为是这个像素点到

25:45.770 --> 25:47.210
这个像素点的一个距离嘛

25:47.210 --> 25:49.050
是不是基本上这个点到这个点的距离

25:49.050 --> 25:51.210
也可以等同于一个像素的大小

25:51.210 --> 25:51.930
是不是也没问题

25:51.930 --> 25:53.930
但实际上你通过空间来看

25:53.930 --> 25:55.770
还是有点小的差池的

25:55.770 --> 25:56.490
明白我意思吧

25:56.490 --> 25:58.090
是不是还有点小的差池的

25:58.090 --> 26:00.490
这个点句是不是大家了解了

26:00.490 --> 26:02.330
所以说点句完全等于像素大小吗

26:02.330 --> 26:02.810
不一定

26:02.810 --> 26:04.490
大家可以表示像素大小吗

26:04.490 --> 26:05.370
是可以的

26:05.370 --> 26:06.810
而且专业领域里面讲

26:06.810 --> 26:07.930
比如说我们的PPI

26:07.930 --> 26:09.770
PPI是我们的一个成像

26:09.770 --> 26:12.650
对一个这个丰富程度的一个值

26:12.650 --> 26:13.210
PPI什么意思

26:13.210 --> 26:14.570
PPI和DPI什么意思的

26:14.570 --> 26:16.170
这个PPI一会给大家讲

26:16.170 --> 26:17.930
PPI其实就是

26:17.930 --> 26:20.570
一英寸里面容纳多少个点句

26:20.570 --> 26:24.090
一英寸里面有多少个

26:24.090 --> 26:25.290
这样的单位点句

26:25.370 --> 26:26.250
让我弄个意思吧

26:26.250 --> 26:28.330
多少个单位点句换句话说多少个像素

26:28.330 --> 26:30.410
因为你有一个像素才能有一个点句

26:30.410 --> 26:31.450
明白我意思吧

26:31.450 --> 26:32.170
那个意思吧

26:32.170 --> 26:33.210
然后点句的大小

26:33.210 --> 26:34.570
就可以约等于像素大小

26:34.570 --> 26:35.050
没问题吧

26:35.050 --> 26:36.250
你看这个图是差不多

26:36.250 --> 26:38.890
但是在不同情况下还是有点差距的

26:38.890 --> 26:40.890
然后这是最经典的一开始

26:40.890 --> 26:42.970
屏幕的一个

26:42.970 --> 26:45.690
我们的这个向点的一个排列方式

26:45.690 --> 26:46.490
就是这么来排列

26:46.490 --> 26:47.530
一开始最经典的

26:47.530 --> 26:50.570
后来日本的日历公司

26:50.570 --> 26:53.210
出了一些新的一个向点的排列方式

26:53.290 --> 26:55.370
哎呀他排列的吧挺噁的

26:55.370 --> 26:56.490
他怎么来做呢

26:56.490 --> 26:57.530
就是也跟着差不多

26:57.530 --> 26:59.610
只不过拉开点距离这样的

26:59.610 --> 27:00.570
一旦这样的之后

27:00.570 --> 27:01.770
跟原来是有变化的

27:01.770 --> 27:02.490
什么变化呢

27:02.490 --> 27:04.730
你看原来咱们连三角形都这么连

27:04.730 --> 27:06.250
我不知道能不能让三角形转啊

27:07.850 --> 27:09.690
哎呀三角形不好转啊

27:09.690 --> 27:10.730
比如说这样啊

27:10.730 --> 27:11.850
我让他我想让他

27:13.050 --> 27:14.330
哎呀怎么办呢

27:14.970 --> 27:16.170
我拿手画吧

27:16.890 --> 27:18.330
你大致理解啊

27:18.330 --> 27:19.450
原来的三角形呢

27:19.450 --> 27:20.890
比如说原来我这么连三角形

27:20.890 --> 27:21.690
怎么连呢

27:21.770 --> 27:23.610
我把点距和点距连一个三角形

27:24.250 --> 27:26.730
哎这作为一个测量的基本单位

27:26.730 --> 27:28.250
这个是不是等边三角形

27:28.250 --> 27:29.850
所以这个点距是不是好测

27:29.850 --> 27:31.290
点距都是等边的是吧

27:31.290 --> 27:33.530
现在呢日历公司出了一个新的设备

27:33.530 --> 27:35.290
他的成像是这么来成像的

27:35.290 --> 27:36.970
他是等腰三角形

27:36.970 --> 27:39.530
你显然这两边是相等的是吧

27:39.530 --> 27:40.730
但是中间这个边呢

27:40.730 --> 27:42.090
是不是不相等的是吧

27:42.090 --> 27:43.690
所以说这里面的点距吧

27:43.690 --> 27:44.730
你要硬说点距

27:44.730 --> 27:46.410
其实点距又不太好测量了

27:46.410 --> 27:47.610
就是我给大家细腻点说

27:47.610 --> 27:48.890
说这个点距的一些发展史

27:48.890 --> 27:50.890
但你不用太多的去计较这个东西

27:51.050 --> 27:52.490
你知道点距是怎么回事就行了

27:53.130 --> 27:53.770
一般情况下

27:53.770 --> 27:55.130
大家也不去细究这个点距

27:55.130 --> 27:55.850
到底怎么回事

27:55.850 --> 27:57.050
所以这样的一个点距

27:57.050 --> 27:58.890
我们一般情况下管这个点距

27:58.890 --> 28:00.090
就不叫这两个边了

28:00.090 --> 28:00.890
一般叫一个什么呢

28:00.890 --> 28:02.010
叫水平点距

28:02.010 --> 28:03.050
就是从这个点

28:03.050 --> 28:04.890
往这条线上做垂直线

28:04.890 --> 28:06.970
这个就叫做一个在日历

28:06.970 --> 28:09.370
就是这种排列方式的一个点距

28:09.370 --> 28:09.850
能弄一做吧

28:09.850 --> 28:10.890
知道水平点距

28:11.370 --> 28:12.410
水平点距

28:12.410 --> 28:14.330
然后刚才那个叫实际点距

28:14.330 --> 28:15.290
但是在这种情况下

28:15.290 --> 28:16.650
这个实际点距就意义

28:16.650 --> 28:19.210
是不是就不太能表示

28:20.170 --> 28:23.450
真实的这种屏幕的一个设计方式

28:23.450 --> 28:24.250
能弄我意思吧

28:25.050 --> 28:26.650
是不是不太能表示这种设计方式

28:26.650 --> 28:26.970
是吧

28:26.970 --> 28:28.490
因为你看等一二的这条边

28:28.490 --> 28:29.930
它不是那个点距是吧

28:29.930 --> 28:30.890
所以最后取个中

28:30.890 --> 28:31.770
取了一个什么

28:31.770 --> 28:32.970
就是垂直的一个线

28:32.970 --> 28:34.090
叫水平点距

28:34.090 --> 28:34.970
它叫水平点距

28:34.970 --> 28:36.330
垂直线叫水平点距

28:36.330 --> 28:36.970
能弄我意思吧

28:36.970 --> 28:37.930
水平点距

28:37.930 --> 28:41.050
然后有些厂商在模糊概念的时候

28:41.050 --> 28:43.050
之前有些厂商在模糊概念的时候

28:43.050 --> 28:46.810
比如说还没到什么呢

28:47.770 --> 28:49.690
我先把它退回去

28:49.690 --> 28:52.250
就是它的一个排列方式

28:52.250 --> 28:54.010
还是原来正规的排列方式

28:54.010 --> 28:55.930
但是它给你报的点距

28:55.930 --> 28:57.690
因为点距大

28:57.690 --> 28:58.410
说明你怎么到

28:58.410 --> 29:00.170
你成像就没那么细腻吧

29:00.170 --> 29:01.530
点距小是不是成像细腻

29:01.530 --> 29:03.530
说明啥你这个像素是不是就小

29:03.530 --> 29:03.770
是吧

29:04.890 --> 29:06.490
有的厂商就挺饿

29:06.490 --> 29:07.450
他抓住这个规律了

29:07.450 --> 29:08.010
说啊好

29:08.010 --> 29:09.210
还有一个水平点距

29:09.210 --> 29:10.730
这个国际上提出的标准

29:10.730 --> 29:11.530
那这样吧

29:11.530 --> 29:13.370
本来我的点距是三角形

29:13.370 --> 29:14.570
等面三角形是吧

29:14.730 --> 29:17.610
他这块来给你量一个水平点距

29:17.610 --> 29:18.970
然后他告诉你呢

29:18.970 --> 29:19.690
给你写的

29:19.690 --> 29:21.130
就是营销人员推销

29:21.130 --> 29:22.970
我跟你说你看我那个点距小

29:22.970 --> 29:24.010
实际你看声明书

29:24.010 --> 29:25.450
他说的是水平点距

29:25.450 --> 29:26.890
是不是不是实际点距

29:26.890 --> 29:27.770
能明白我意思吗

29:27.770 --> 29:28.970
是这么回事

29:28.970 --> 29:30.170
然后再往后

29:30.170 --> 29:31.850
索尼松夏等公司

29:31.850 --> 29:33.770
就出了一个新型的一个

29:33.770 --> 29:35.290
表示向点的一个方式

29:35.290 --> 29:36.330
叫三角形的

29:36.330 --> 29:38.090
就干脆不沿用原来那种

29:38.090 --> 29:39.210
品质型的

29:39.210 --> 29:39.930
就三角形的

29:39.930 --> 29:41.530
那它在它之前的点距

29:41.530 --> 29:42.890
那它的点距怎么来求

29:42.890 --> 29:43.930
它的点距是不是就是

29:43.930 --> 29:45.450
同色的两个方块

29:45.450 --> 29:46.410
这样的点距

29:46.410 --> 29:48.170
是不是这个点距就能更直观的

29:48.170 --> 29:49.290
表示一个像素大小

29:49.290 --> 29:50.890
也真实是一个像素大小吧

29:50.890 --> 29:52.170
是不是也仅在这种

29:52.170 --> 29:53.450
三角形式的里面

29:53.450 --> 29:54.330
所以有的时候说

29:54.330 --> 29:55.290
点距可以代表

29:55.290 --> 29:56.570
像素大小是没有问题的

29:56.570 --> 29:57.370
明白我意思吧

29:57.370 --> 29:58.650
好了

29:58.650 --> 30:00.170
那三角形的是不是打这个

30:00.170 --> 30:01.130
无论打击光束

30:01.130 --> 30:02.090
还是说这个

30:02.090 --> 30:03.610
我们业绩萍的这样的一个偏褶

30:03.610 --> 30:05.370
是不是都往这块偏能懂我意思吧

30:05.370 --> 30:06.410
这个是无所谓的

30:07.610 --> 30:08.410
就是不管怎么样

30:08.410 --> 30:09.370
是三个点

30:09.370 --> 30:10.010
空间混合法

30:10.010 --> 30:11.130
还三条空间混合法

30:11.130 --> 30:11.850
都可以混

30:11.850 --> 30:12.650
明白我意思吧

30:12.730 --> 30:15.770
这是像素的一个来龙去脉

30:15.770 --> 30:16.730
来龙去脉

30:16.730 --> 30:18.090
然后跟大家说一下

30:18.090 --> 30:19.530
像素说到底

30:20.970 --> 30:23.210
跟我说像素说到底

30:23.210 --> 30:24.330
说啥呢

30:24.330 --> 30:26.010
还是一个相对单位

30:27.370 --> 30:28.170
相对单位

30:28.170 --> 30:30.330
我们即使说的物理像素

30:30.330 --> 30:31.370
它也是相对单位

30:31.370 --> 30:32.650
物理像素是什么意思呢

30:32.650 --> 30:33.450
物理像素

30:33.450 --> 30:35.770
就是我们的设备出厂的时候

30:35.770 --> 30:37.050
一个像素的大小

30:37.050 --> 30:38.730
就是设备出厂时

30:39.370 --> 30:41.370
出厂时

30:41.370 --> 30:42.970
像素的大小

30:42.970 --> 30:43.770
然后接下来

30:44.490 --> 30:45.530
我们就是像素

30:45.530 --> 30:47.450
那是不是不同的设备的

30:47.450 --> 30:48.810
不同物理像素

30:48.810 --> 30:50.250
不同设备的物理像素

30:50.250 --> 30:51.130
有可能大小不一样

30:51.130 --> 30:52.330
能懂我意思吗

30:52.330 --> 30:53.050
是不是没问题

30:53.050 --> 30:53.610
同学们

30:53.610 --> 30:54.090
没问题吧

30:55.050 --> 30:55.850
一般情况下

30:56.410 --> 30:58.090
就是我们的像素大小

30:58.090 --> 30:58.730
一般情况下

30:58.730 --> 30:59.850
普遍的设备都是多少

31:00.810 --> 31:01.690
我们有个核量标准

31:01.690 --> 31:02.570
叫DPI

31:02.570 --> 31:03.770
你先别管DPI是啥

31:04.250 --> 31:05.610
我先告诉你DPI这个概念

31:06.810 --> 31:08.410
DPI它是指

31:08.570 --> 31:09.370
一英寸

31:10.650 --> 31:12.170
所能容纳的

31:12.170 --> 31:13.050
一英寸是不是长度

31:13.050 --> 31:13.370
是吧

31:14.010 --> 31:16.730
容纳的像素点数

31:16.730 --> 31:19.610
一英寸所能容纳的像素点数

31:19.610 --> 31:20.170
越多

31:20.170 --> 31:21.610
是不代表像素越小

31:21.610 --> 31:23.130
是不是这个成像效果越好

31:23.130 --> 31:25.210
你一英寸所能容纳的像素越少

31:25.210 --> 31:25.850
就是一英寸

31:25.850 --> 31:26.570
一英寸多大

31:26.570 --> 31:27.370
一英寸

31:27.370 --> 31:30.170
你知道等于多大吗

31:30.170 --> 31:33.450
等于2.54厘米

31:33.450 --> 31:35.770
你一英寸只能放一个像素

31:35.770 --> 31:36.650
没得多大的点

31:36.650 --> 31:37.770
你这像素得多模糊

31:37.930 --> 31:39.370
你这放出来的图像它还能看了

31:39.370 --> 31:40.010
能懂我意思吧

31:40.010 --> 31:41.930
那确实成那种点装的一个屏吧

31:41.930 --> 31:42.170
是吧

31:42.170 --> 31:43.130
那确实恶心死了

31:43.770 --> 31:45.930
所以一英寸所能容纳的像素点数越多

31:45.930 --> 31:46.330
说明啥

31:46.330 --> 31:47.770
我们这个成像是不是越好看

31:47.770 --> 31:48.490
是不是越细腻

31:48.490 --> 31:49.450
你明白了意思吧

31:49.450 --> 31:50.170
一般情况下

31:50.170 --> 31:51.210
我们这个屏幕

31:51.210 --> 31:52.650
能达到96DPI

31:52.650 --> 31:53.770
老式的夜景屏

31:53.770 --> 31:55.130
96DPI也不错了

31:55.130 --> 31:55.690
换句话说

31:55.690 --> 31:57.850
比如说就相当于2.54厘米出100

31:57.850 --> 31:59.290
相当于约等于

31:59.290 --> 32:00.330
约等于

32:00.330 --> 32:01.450
我看能不能达出约等于

32:02.170 --> 32:03.690
约等于

32:04.330 --> 32:05.290
有的时候挺强硬

32:05.290 --> 32:06.330
你看可强大了

32:06.410 --> 32:07.370
约等于是吧

32:07.370 --> 32:12.250
是不是等于差不多是0.25毫米

32:12.250 --> 32:12.730
是吧

32:12.730 --> 32:14.570
差不多是不是等于0.25毫米

32:14.570 --> 32:15.850
每一个像素点

32:15.850 --> 32:16.970
要成个毫米

32:16.970 --> 32:18.410
我眼睛是能看清的

32:18.410 --> 32:19.610
0.25毫米

32:19.610 --> 32:20.730
它也没多小

32:20.730 --> 32:21.930
一个像素点才这么大

32:21.930 --> 32:23.610
一个像点也就0.07毫米

32:23.610 --> 32:24.090
是吧

32:24.090 --> 32:25.930
那我离屏幕近一点

32:25.930 --> 32:27.210
能不能看到像点呢

32:27.210 --> 32:28.330
我跟你讲是可以的

32:28.330 --> 32:29.450
你不信你的电脑

32:29.450 --> 32:30.330
如果说够大的话

32:30.330 --> 32:31.130
你看一看

32:31.130 --> 32:32.250
看看行不行

32:32.250 --> 32:34.090
为什么它不往大的做点

32:34.090 --> 32:35.210
也有大的

32:35.210 --> 32:36.090
咱们正常情况下

32:36.170 --> 32:38.330
电脑的屏幕的DPI

32:38.330 --> 32:39.930
一般情况下能达到什么样呢

32:39.930 --> 32:40.810
最大的我估计

32:40.810 --> 32:42.730
也就300到400左右了

32:42.730 --> 32:43.530
普遍来说

32:43.530 --> 32:44.410
就是200左右

32:44.410 --> 32:45.930
200DPI那都更高的了

32:45.930 --> 32:47.690
也就是最后约等于

32:47.690 --> 32:49.130
约等于

32:49.130 --> 32:50.090
也就是最后

32:50.090 --> 32:52.090
能得出这样的一个毫米数

32:52.090 --> 32:53.610
比如说约等于什么呢

32:53.610 --> 32:54.410
就我不说200

32:54.410 --> 32:55.530
200DPI什么的

32:55.530 --> 32:58.170
比如说最后能约等于

32:58.170 --> 32:59.850
能约等于0.1

33:01.050 --> 33:02.730
0.1毫米

33:02.730 --> 33:04.250
或者

33:04.250 --> 33:04.970
或者0.

33:04.970 --> 33:05.290
我跟你说

33:05.290 --> 33:06.970
或者0.15毫米

33:06.970 --> 33:08.810
那设备都老清晰了

33:08.810 --> 33:09.450
能动我意思吧

33:09.450 --> 33:10.250
都已经老清晰了

33:10.250 --> 33:11.450
什么治愈了

33:11.450 --> 33:12.090
因为啥呢

33:12.090 --> 33:13.530
虽然说也不太治愈

33:13.530 --> 33:14.010
虽然说你说

33:14.010 --> 33:15.050
现在技术能不能做到

33:15.050 --> 33:15.930
比它还细腻

33:15.930 --> 33:16.650
可以

33:16.650 --> 33:17.690
手机的屏幕

33:17.690 --> 33:18.570
包括4K屏

33:18.570 --> 33:19.450
包括咱之前那个

33:19.450 --> 33:20.170
Ratino

33:20.170 --> 33:21.130
Ratino屏

33:21.130 --> 33:22.650
我说Ratino屏

33:22.650 --> 33:25.210
就是咱们iOS的iOS

33:25.210 --> 33:26.570
咱iOS的Ratino屏

33:26.570 --> 33:27.290
就手机的屏幕

33:27.290 --> 33:29.210
已经做到比电脑屏幕更细腻了

33:29.210 --> 33:30.170
但为啥电脑屏幕

33:30.170 --> 33:31.290
不采用那种方式呢

33:31.290 --> 33:32.410
首先来说成本太高

33:32.410 --> 33:33.770
再有一个真的没必要

33:33.770 --> 33:35.050
因为我们眼睛

33:35.050 --> 33:36.570
在看不同设备的时候

33:36.570 --> 33:37.610
或者距离不一样

33:37.610 --> 33:38.730
你看电脑

33:38.730 --> 33:39.530
一般情况下

33:39.530 --> 33:40.570
一臂的距离

33:40.570 --> 33:41.690
这是官方给人来说吧

33:41.690 --> 33:42.330
一臂的距离

33:42.330 --> 33:44.090
除非你那啥是吧

33:44.090 --> 33:45.050
也是不打好

33:45.050 --> 33:46.490
你一臂的距离

33:46.490 --> 33:48.330
一臂的距离大概是28英寸

33:48.330 --> 33:50.170
28英寸去看一个

33:50.170 --> 33:51.610
比较大一点的像素点

33:51.610 --> 33:52.330
是没有问题的

33:52.330 --> 33:53.530
你眼睛是分辨不出来的

33:53.530 --> 33:54.090
明白我意思吧

33:54.090 --> 33:56.490
还有一个视距和视角的问题

33:56.490 --> 33:57.290
比如说你看手机

33:57.290 --> 33:58.570
一般情况下是一眨

33:58.570 --> 33:59.610
有的同学可能说

33:59.610 --> 34:00.490
这习惯不好点

34:00.490 --> 34:01.770
可能都快贴恋

34:01.770 --> 34:02.650
那就非常近了

34:02.650 --> 34:03.690
你是不是就如果像素点

34:03.690 --> 34:04.890
那大的话是本开来了

34:04.890 --> 34:06.170
所以这时候手机屏幕还小

34:06.170 --> 34:06.890
即使造价高点

34:06.890 --> 34:07.770
这也没关系

34:07.770 --> 34:09.050
那就高点造价是吧

34:09.050 --> 34:09.770
来的弯芯头屏

34:09.770 --> 34:12.890
可能达到360 dpi

34:12.890 --> 34:13.850
360 dpi的话

34:13.850 --> 34:15.130
那你一除是吧

34:15.130 --> 34:16.490
你这个除外

34:16.490 --> 34:18.890
你2.54除以

34:18.890 --> 34:21.290
你2.54除以这360

34:21.290 --> 34:22.730
你看看能不能多少

34:22.730 --> 34:24.570
弯芯头屏的标准

34:24.570 --> 34:25.690
好像大于360的

34:25.690 --> 34:26.810
这连眼就分辨不出来了

34:26.810 --> 34:27.610
太小了那东西

34:27.610 --> 34:28.570
大家看起来更大

34:28.570 --> 34:29.450
更大的可能

34:29.450 --> 34:30.010
三星的屏

34:30.170 --> 34:31.050
更牛逼是吧

34:31.050 --> 34:32.090
三星一般都是

34:32.090 --> 34:33.290
咱都知道三星造品厉害

34:33.290 --> 34:33.530
是吧

34:33.530 --> 34:34.170
它这个像素点

34:34.170 --> 34:34.730
可以造得特别小

34:34.730 --> 34:36.090
就是 dpi 可以做得特别大

34:36.090 --> 34:36.650
你告诉我

34:36.650 --> 34:38.330
哎是这么回事

34:38.330 --> 34:39.690
这个 dpi 的概念

34:39.690 --> 34:40.650
也顺道给大家说了

34:40.650 --> 34:43.290
就是 dpi 就是什么呢

34:43.290 --> 34:45.050
每英寸能容纳的像素点数

34:45.050 --> 34:46.650
其实这个 dpi

34:46.650 --> 34:48.010
它还有一种

34:48.010 --> 34:49.050
兄弟的表现形式

34:49.050 --> 34:49.450
叫什么呢

34:49.450 --> 34:50.330
叫 ppi

34:50.330 --> 34:51.210
其实准确的来说

34:51.210 --> 34:52.970
dpi 它是来表示

34:52.970 --> 34:54.410
我们的打印机设备的

34:54.410 --> 34:56.650
就是打印机也是一种设备

34:56.650 --> 34:57.770
你别看打印机low

34:57.770 --> 34:59.610
打印机它的点

34:59.930 --> 35:00.810
它的像素点

35:00.810 --> 35:02.330
它的默点相当于像素点

35:02.330 --> 35:02.970
它的默点

35:02.970 --> 35:04.250
要比咱们显示器的默点

35:04.250 --> 35:05.370
要高很多

35:05.370 --> 35:06.250
因为打印完之后

35:06.250 --> 35:07.210
你离着看

35:07.210 --> 35:08.410
离到多近看

35:08.410 --> 35:09.930
你都要保证它不是真是吧

35:09.930 --> 35:10.970
所以打印机的默点

35:10.970 --> 35:12.730
有的时候能达到600 dpi的

35:14.010 --> 35:16.010
这个 dpi 其实也就是说的

35:16.010 --> 35:17.530
打印机在一项复

35:17.530 --> 35:18.570
打印出来的东西里面

35:18.570 --> 35:19.290
有多少个默点

35:20.090 --> 35:21.290
一般600 300 300

35:21.290 --> 35:22.330
算Low的打印机了

35:22.330 --> 35:22.730
都这样

35:22.730 --> 35:23.290
还可以更高

35:23.290 --> 35:23.690
我意思吧

35:23.690 --> 35:24.650
激光打印机什么的

35:24.650 --> 35:25.850
打印机这样的

35:25.850 --> 35:28.170
这个 dpi 最早是形容什么呢

35:28.170 --> 35:29.210
打印机打印的

35:29.690 --> 35:35.370
打印机在一英寸的屏幕里面

35:35.370 --> 35:37.930
可以打印多少个默点

35:39.850 --> 35:40.490
这是打印机的

35:40.490 --> 35:41.370
当然放到屏幕里面

35:41.370 --> 35:42.250
就可以指像素点了

35:42.250 --> 35:42.650
是吧

35:42.650 --> 35:44.010
但屏幕里面也有个专业概念

35:44.010 --> 35:45.130
叫 ppi 是一样的

35:45.130 --> 35:46.250
就是指一英寸

35:46.810 --> 35:50.650
一英寸所能容纳的像素点数

35:52.010 --> 35:52.650
或者啊

35:52.650 --> 35:54.010
或者专业的说法叫什么

35:54.010 --> 35:54.970
叫点句数

35:55.530 --> 35:57.290
点句数容纳的点句数

35:57.290 --> 35:58.090
明白我意思吧

35:58.730 --> 35:59.370
是这么回事

35:59.370 --> 36:01.290
所以 dpi 和 ppi 可以通用

36:01.290 --> 36:02.010
没什么太大关系

36:02.010 --> 36:02.970
在指屏幕的时候

36:02.970 --> 36:03.690
往往都是一样

36:04.250 --> 36:05.130
明白我意思吧

36:05.130 --> 36:05.610
重新办

36:05.610 --> 36:06.250
明白我意思吧

36:07.130 --> 36:09.290
所以说是这样的一个情况

36:10.570 --> 36:12.010
然后一会我再跟大家说一下

36:12.010 --> 36:13.370
刚才物理像素是为大家讲完了

36:13.370 --> 36:13.930
是吧

36:13.930 --> 36:15.210
物理像素讲完了之后

36:15.210 --> 36:16.170
这俩评评讲完了

36:16.170 --> 36:17.770
然后我紧接着要说一个东西

36:18.330 --> 36:20.330
物理像素一般情况下指什么

36:20.330 --> 36:22.570
指是不是我们这个屏幕出厂时的

36:22.570 --> 36:23.530
它的一个像素大小

36:23.930 --> 36:25.050
但是一般情况下

36:25.050 --> 36:27.530
我们多个不同的屏幕出厂时的

36:27.530 --> 36:28.410
dpi 是不一样

36:28.410 --> 36:29.530
比如说正常的一个屏幕

36:29.530 --> 36:30.970
可能说我就好写点了

36:30.970 --> 36:31.930
100 dpi

36:31.930 --> 36:33.690
然后有200 dpi的

36:33.690 --> 36:35.290
然后有300 dpi的

36:36.090 --> 36:36.570
哎呀

36:36.570 --> 36:38.890
那我们在写 css 的时候

36:38.890 --> 36:40.170
比如说我设置一个

36:41.370 --> 36:41.850
100

36:42.490 --> 36:43.530
位置100

36:43.530 --> 36:45.050
然后高100

36:45.690 --> 36:46.410
那大哥们

36:46.410 --> 36:48.170
我在你们的屏幕里面显示起来

36:48.170 --> 36:49.930
那不可能一样漏啊

36:49.930 --> 36:52.090
你这一英寸容纳100个像素

36:52.090 --> 36:53.850
你这一英寸容纳200个像素

36:54.410 --> 36:55.610
那同样一英寸

36:55.690 --> 36:58.090
这东西空间测量上是没问题的

36:58.090 --> 36:58.650
是吧

36:58.650 --> 37:00.250
那你一英寸容纳200个像素

37:00.250 --> 37:01.850
那我这100天米里面

37:01.850 --> 37:03.610
你实际上让大家看起来

37:03.610 --> 37:05.130
是不是只有半英寸

37:05.130 --> 37:06.570
你看起来只有一英寸

37:06.570 --> 37:08.490
你看起来是三分之一英寸大小

37:08.490 --> 37:09.050
是吧

37:09.050 --> 37:10.650
是不是大家是有差迟的

37:10.650 --> 37:12.250
那同样一个 css 代码

37:12.250 --> 37:14.330
放到不同的机器上去显示

37:15.130 --> 37:17.450
利用浏览器调用操作系统的

37:17.450 --> 37:18.890
成像驱动来显示

37:18.890 --> 37:20.970
是不是我们显示出来效果不一样

37:21.530 --> 37:22.090
是吧

37:22.090 --> 37:24.090
然后后来这个驱动意想

37:24.090 --> 37:24.970
操作系统意想

37:24.970 --> 37:26.170
说这不行

37:26.170 --> 37:27.210
这如果这么玩的话

37:27.210 --> 37:28.090
那咋编程是吧

37:28.090 --> 37:29.530
那你机器你家出的好

37:29.530 --> 37:30.570
人家出的烂

37:30.570 --> 37:31.530
编程源一编

37:31.530 --> 37:32.570
那到底按谁的编呢

37:32.570 --> 37:33.130
按贵的编

37:33.130 --> 37:34.250
按便宜的编呢

37:34.250 --> 37:36.090
是高端人士还是亲民性的

37:36.090 --> 37:36.330
是吧

37:36.330 --> 37:37.370
说没法编了

37:37.370 --> 37:38.490
后来大家一拍大腿

37:38.490 --> 37:39.530
说得了

37:39.530 --> 37:41.210
咱来一个参照像素吧

37:42.570 --> 37:43.530
提出第二概念

37:43.530 --> 37:45.610
咱来一个叫参照像素

37:46.250 --> 37:47.610
参照像素一会可以等于

37:47.610 --> 37:48.410
很多个说法

37:48.410 --> 37:49.450
什么叫参照像素呢

37:50.090 --> 37:52.090
为了让不同机器上

37:52.090 --> 37:53.530
显示起图像

37:53.530 --> 37:55.530
能有一样的体验效果

37:55.530 --> 37:57.610
咱能提出了参照像素的概念

37:57.610 --> 37:59.130
比如说咱设置一个标杆

37:59.130 --> 38:01.050
当这个标杆设置得也不是很稳的

38:01.050 --> 38:02.010
大家都是参照它

38:02.010 --> 38:03.050
真是参照它

38:03.050 --> 38:04.650
上下还是有点区别的

38:04.650 --> 38:05.690
它只作为一个参照单位

38:06.250 --> 38:06.970
标杆

38:06.970 --> 38:08.170
它作为一个标杆

38:08.170 --> 38:10.170
大家都像这个标杆来靠拢

38:10.170 --> 38:11.610
这个标杆是啥呢

38:11.610 --> 38:14.250
这个标杆是96 dpi的

38:14.250 --> 38:14.810
这样的一个

38:14.810 --> 38:17.050
以96 dpi的这样的电脑

38:17.050 --> 38:19.130
你一一一壁啊

38:19.930 --> 38:20.410
一壁

38:22.570 --> 38:24.490
一壁一壁之长

38:26.740 --> 38:27.540
一壁

38:27.780 --> 38:28.580
胳膊啊

38:30.980 --> 38:31.460
一壁

38:31.460 --> 38:32.580
我必须把这壁找到

38:33.220 --> 38:33.940
一壁距离

38:37.020 --> 38:37.900
一壁之摇

38:40.380 --> 38:41.420
一壁之摇

38:41.420 --> 38:41.900
好吧

38:41.900 --> 38:42.460
哎好

38:43.900 --> 38:47.020
96 dpi这样的一个屏幕

38:47.020 --> 38:49.820
然后以一壁之摇的视角去看

38:50.220 --> 38:51.500
的视角去看

38:51.980 --> 38:56.140
然后显示出的具体

38:56.860 --> 38:57.660
具体大小

38:57.660 --> 38:59.980
当然了这个得经过一些的视角

38:59.980 --> 39:00.460
视度

39:00.460 --> 39:01.500
然后乘完之后

39:01.500 --> 39:02.860
基本上就是96 dpi

39:02.860 --> 39:03.820
乘以个什么什么度数

39:04.700 --> 39:06.380
基本上也就等于

39:06.380 --> 39:07.180
约等于最后

39:07.180 --> 39:09.420
也就约等于96 dpi的这样下注点

39:09.420 --> 39:11.260
然后最后的下注点就约等于什么呢

39:11.260 --> 39:12.540
约等于1比96

39:13.500 --> 39:14.540
约等于1比96

39:14.540 --> 39:15.660
再乘以这样的英寸

39:15.660 --> 39:16.620
能弄一次吧

39:16.620 --> 39:17.660
1比96英寸

39:18.860 --> 39:19.580
约等于啊

39:19.580 --> 39:20.860
实际你要算那个点数

39:20.860 --> 39:22.700
因为你看你眼睛到屏幕有距离

39:22.700 --> 39:23.820
然后再有点视角的差

39:23.820 --> 39:24.860
你看这个东西

39:24.860 --> 39:25.820
实际未必等于

39:25.820 --> 39:26.860
完全等于这个就约等于

39:27.020 --> 39:27.660
反正是个标杆

39:28.060 --> 39:30.380
就是以96 dpi这样的一个屏幕

39:30.380 --> 39:31.260
作为这样一个标杆

39:31.260 --> 39:32.220
能懂我意思吧

39:32.220 --> 39:33.820
然后大家向它去靠拢

39:33.820 --> 39:35.180
什么叫向它去靠拢呢

39:35.180 --> 39:36.780
比如说我这屏幕是100 dpi

39:37.660 --> 39:38.380
100 dpi

39:39.100 --> 39:41.900
我100 dpi的参照像素是啥样的呢

39:41.900 --> 39:43.580
你看100 dpi跟96 dpi

39:43.580 --> 39:44.460
是不是也差不多

39:44.460 --> 39:45.660
那你的参照像素

39:45.660 --> 39:47.180
就等于你的物理像素吧

39:47.180 --> 39:49.020
这个时候约等于都是约等于

39:50.700 --> 39:52.700
约等于当然没有100 dpi的

39:52.700 --> 39:54.700
比如说你这个设备就是96 dpi

39:55.420 --> 39:57.340
96 dpi和96 dpi的参照像素

39:57.340 --> 39:58.140
是不是差不多

39:58.140 --> 40:00.940
你这个96 dpi你的参照像素

40:01.660 --> 40:04.540
你的物理像素是不是设备的像素

40:04.540 --> 40:05.500
参照像素就是一个

40:05.500 --> 40:06.780
一会儿比例转换的像素

40:07.500 --> 40:09.660
你这块的参照像素比完之后

40:09.660 --> 40:10.300
就是1比1

40:12.540 --> 40:14.540
然后比如说你现在设备是200 dpi

40:15.180 --> 40:16.460
200 dpi是不是挺大

40:16.460 --> 40:17.100
对吧

40:17.100 --> 40:21.100
200 dpi我到最后设出一个参照

40:21.100 --> 40:23.340
就是根据你这个参照像素

40:23.340 --> 40:24.620
我去对比起来

40:24.620 --> 40:26.380
比如说200像素的一个

40:26.380 --> 40:28.380
比如说200 dpi的这样的一个设备

40:28.940 --> 40:32.140
我想展示出跟你100 dpi的设备

40:32.140 --> 40:33.580
一样的大小的图像

40:34.140 --> 40:35.100
我得怎么办呢

40:35.660 --> 40:37.580
我是不是得拿两个像素点来

40:38.380 --> 40:40.620
当成一个就是拿水平两个像素点

40:40.620 --> 40:41.900
和垂直两个像素点来

40:41.900 --> 40:43.660
当一个像素点来使用

40:44.060 --> 40:45.900
才能和你完成一样的效果

40:45.900 --> 40:46.460
是吧

40:46.460 --> 40:48.540
所以说我参照你这个标杆比

40:48.540 --> 40:49.660
比完了之后

40:49.660 --> 40:51.260
是不是我这个200 dpi

40:51.820 --> 40:53.020
设置像素的时候

40:53.020 --> 40:55.420
得设置成两位的像素

40:55.420 --> 40:56.540
来跟你一个去对比

40:57.820 --> 40:58.940
我这么来解释

40:58.940 --> 40:59.820
同学们

40:59.820 --> 41:00.460
可能这么来说

41:00.460 --> 41:01.420
你不太能听得懂

41:02.140 --> 41:03.900
就是参照像素是什么意思呢

41:03.900 --> 41:06.140
就是大家都会朝着这个像素

41:06.140 --> 41:07.820
来显示的大小去转变

41:08.700 --> 41:10.620
这个像素显示的大小来转变

41:10.620 --> 41:11.340
比如说

41:11.340 --> 41:12.460
你这个参照像素

41:12.460 --> 41:13.580
比如说现在参照像素

41:13.580 --> 41:15.660
比如说以100像素

41:15.660 --> 41:18.860
乘以100像素

41:18.860 --> 41:20.620
这样的一个比例尺进行一个转换

41:20.620 --> 41:22.380
比如说现在我要呈现

41:22.380 --> 41:23.820
一个100×100的像

41:24.220 --> 41:28.780
我100×100的像放到参照像素的

41:28.780 --> 41:30.860
这种屏幕里面展示成什么样

41:30.860 --> 41:33.340
你们这些个机型就得展示成什么样

41:33.900 --> 41:34.940
就得展示多大

41:34.940 --> 41:35.740
明白我意思吗

41:36.300 --> 41:38.460
那我100×100的放到96 dpi

41:38.460 --> 41:39.340
那肯定没问题是吧

41:39.340 --> 41:40.860
100×100的放到100 dpi

41:40.860 --> 41:42.460
它俩差不多也没问题是吧

41:42.460 --> 41:45.500
我100×100的放到你200 dpi的这样的

41:45.500 --> 41:46.060
一个屏幕里面

41:46.060 --> 41:47.100
是不是就会变小了

41:47.580 --> 41:49.340
是不是水平的和你垂直了

41:49.340 --> 41:51.020
都变成原来的1分之一了

41:51.020 --> 41:51.980
明白我意思吗

41:52.140 --> 41:53.340
那现在怎么办呢

41:53.340 --> 41:55.180
我想让你变成一样的大小

41:55.180 --> 41:56.860
这里面就有一个转换比例

41:56.860 --> 41:58.860
就是这块就有一个转换比例

41:58.860 --> 42:01.660
从参照像素转成实际像素的一个比例

42:01.660 --> 42:02.380
是不是就得乘2

42:03.180 --> 42:03.980
明白我意思吗

42:03.980 --> 42:06.460
我这块100×100实际上是不是就得

42:06.460 --> 42:08.060
哎这块再乘一个2

42:08.780 --> 42:09.980
然后这块再乘一个2

42:11.020 --> 42:11.900
明白我意思吗

42:11.900 --> 42:13.740
就是2×100

42:15.100 --> 42:17.580
然后再乘以2×100是吧

42:17.580 --> 42:18.700
是不是这样才行

42:19.340 --> 42:21.420
才能得到在这个屏幕里面

42:21.420 --> 42:22.380
得到的大小

42:22.380 --> 42:24.540
是不是才和你这个屏幕里面一模一样

42:25.260 --> 42:26.380
能懂我意思吗

42:26.380 --> 42:27.180
明白我意思吗

42:27.180 --> 42:28.300
那在这是不是也一样

42:28.300 --> 42:28.780
是吧

42:28.780 --> 42:29.580
因为它是啥

42:29.580 --> 42:30.780
它300 dpi

42:30.780 --> 42:32.140
它更小是吧

42:32.140 --> 42:33.580
你在这里面展示100 100的

42:33.580 --> 42:35.580
你放人里面只有三分之一一个

42:35.580 --> 42:36.060
大小

42:36.060 --> 42:37.580
面积上可能就是九分之一个了

42:37.580 --> 42:38.380
能懂我意思吗

42:38.380 --> 42:39.820
所以你这块是不是还得乘3

42:39.820 --> 42:40.380
明白我意思吧

42:40.380 --> 42:42.860
就是设备之间会依照这个参照像素

42:42.860 --> 42:45.580
来转换自己的所用的像素格

42:45.580 --> 42:46.940
比如说你这块你像素多

42:46.940 --> 42:48.460
那你展示更眩的一些是吧

42:48.460 --> 42:50.460
但是我要展示同样宽高这个东西

42:50.460 --> 42:51.020
怎么办呢

42:51.420 --> 42:53.180
那大家依照参照像素

42:53.180 --> 42:55.980
就是参照像素是保持这个图像的比例

42:55.980 --> 42:57.580
尺寸是一样的

42:57.580 --> 42:59.100
具体内容的天成点

42:59.100 --> 43:00.540
那肯定是你像素点越多

43:00.540 --> 43:02.140
天成越好看能懂我意思吧

43:02.140 --> 43:03.420
那这个比例来说的话

43:03.420 --> 43:04.780
大家保持同一个宽高的话

43:04.780 --> 43:07.420
那它们肯定要依照参照像素来转换

43:07.420 --> 43:08.140
明白我意思吧

43:08.140 --> 43:10.300
啊这是参照像素的一个东西啊

43:10.300 --> 43:12.620
参照像素呢也叫CSS像素

43:14.140 --> 43:15.980
啊也叫CSS像素啊

43:16.460 --> 43:17.580
CSS像素

43:18.700 --> 43:20.380
就是我们编程这个像素

43:20.780 --> 43:23.820
也就是说现在我们编了一个100×100的话

43:23.820 --> 43:25.340
这些个屏幕会非常聪明

43:25.340 --> 43:27.500
它知道啊原来你按照参照像素

43:27.500 --> 43:29.660
也就是说我们的CSS像素也叫什么呢

43:29.660 --> 43:30.540
也叫逻辑像素

43:31.980 --> 43:33.580
我们编完在CSS像素里面

43:33.580 --> 43:35.260
我们编完了这样的100100

43:35.260 --> 43:36.700
就变成一个真正逻辑像素啊

43:36.700 --> 43:39.660
就是我们想依照参照像素占了一个大小

43:39.660 --> 43:41.820
编辑出一个100×100占了一个盒子

43:41.820 --> 43:42.860
显示的大小呢

43:42.860 --> 43:44.940
大致上是这个样子是吧

43:44.940 --> 43:47.020
显示的大小大致上是这个样子

43:47.020 --> 43:50.860
然后呢操作系统就会看自己的设备

43:50.860 --> 43:51.740
到底是啥样的设备

43:51.740 --> 43:54.380
操作系统看哎呀200 dpi的设备啊

43:54.380 --> 43:56.220
那完了正常200 dpi的话

43:56.220 --> 43:59.260
你用因为200 dpi它的像素是不是小

44:00.380 --> 44:04.860
你用真实的100像素当作物理像素来展示200 dpi的

44:04.860 --> 44:07.820
就是你用这个100像素来当作物理像素来展示的话

44:07.820 --> 44:10.300
它肯定盒子就是特别特别小了

44:10.300 --> 44:11.900
盒子是不是这么大点了是吧

44:11.900 --> 44:14.380
所以说这个时候是不是咱们转换依照什么

44:14.380 --> 44:16.860
依照我们的参照像素想转换吧

44:16.860 --> 44:19.580
所以说CSS像素就是实现这样的功能的

44:19.580 --> 44:21.420
我们CSS像素添的就是逻辑像素

44:21.420 --> 44:23.420
各个机器在看完CSS像素之后

44:23.420 --> 44:26.620
都会依照自己的 dpi来转换你的大小

44:26.620 --> 44:28.540
比如现在100 100

44:28.540 --> 44:30.140
它显然不够啊一看是200 dpi的

44:30.140 --> 44:32.860
好依照标准依照参照是不是来放大

44:32.860 --> 44:35.660
是放到这300的是不是再放大能弄一次吧

44:35.660 --> 44:37.180
这是怎么回事啊

44:37.180 --> 44:39.420
300的可能说一开始的校盒是在这

44:39.420 --> 44:42.140
是吧然后那一看那100 100肯定不够啊

44:42.140 --> 44:44.780
一看啊逻辑像参照像素咱比例吧是吧

44:44.860 --> 44:47.100
参照像素9.960 dpi

44:47.100 --> 44:48.860
我300 dpi比你是比三是吧

44:48.860 --> 44:50.940
那就他成三就ok比过来

44:50.940 --> 44:51.660
没有问题吧

44:51.660 --> 44:52.540
同学们好了

44:52.540 --> 44:54.060
好这个是一个比例问题

44:54.060 --> 44:54.860
然后呢

44:54.860 --> 44:56.860
这块咱们有一个设备啊

44:56.860 --> 44:57.980
设备像素比啊

44:57.980 --> 44:59.980
一个问题这个设备像素比呢

44:59.980 --> 45:00.620
叫dpi

45:00.620 --> 45:01.820
这个dpi是非常有用的啊

45:01.820 --> 45:02.860
这个像设备像素比

45:02.860 --> 45:05.260
就是咱们一会这个各个设备

45:05.260 --> 45:07.740
从自己的物理像素放大到

45:07.740 --> 45:09.900
CSS逻辑像素的一个非常关键的

45:09.900 --> 45:10.540
一个参数啊

45:10.540 --> 45:11.420
它是什么呢

45:11.420 --> 45:13.180
它是我们的物理像素

45:15.340 --> 45:17.180
比上我们的什么

45:17.180 --> 45:20.380
比上我们的CSS像素的一个比值

45:20.380 --> 45:22.940
比上我们CSS像素的一个比值啊

45:22.940 --> 45:25.500
就是CSS像素它们是一个逻辑像素吗

45:25.500 --> 45:27.580
它俩的比值是不是得看dpi是吧

45:27.580 --> 45:29.020
它俩比值是不是得看dpi

45:29.020 --> 45:31.340
比如说你这个设备dpi 300

45:31.340 --> 45:32.460
啊300

45:32.460 --> 45:35.500
然后呢你这个物理像素是不是肯定就小啊

45:35.500 --> 45:37.180
是吧物理像素是不是就小

45:37.180 --> 45:39.020
然后你CSS像素是不是多

45:39.020 --> 45:40.620
那你同样的一个空间内

45:40.620 --> 45:42.380
你容纳的同样的一个长度

45:42.380 --> 45:44.140
容纳的物理像素是不是多

45:44.140 --> 45:47.180
比如说你300dpi比上这个CSS像素的话

45:47.180 --> 45:48.380
就它俩比呗

45:48.380 --> 45:50.220
这物理像素拿dpi比是吧

45:50.220 --> 45:52.140
dpi一比的话比如说你这块啊

45:52.140 --> 45:54.300
你是300的或者是200的吧

45:54.300 --> 45:57.020
200dpi对吧200dpi比上什么

45:57.020 --> 45:57.980
比上你的CSS像素

45:57.980 --> 45:58.780
也就是说参照像素吧

45:58.780 --> 46:00.380
比上什么90dpi是吧

46:00.380 --> 46:03.660
90dpi一比一比比出来啥了

46:03.660 --> 46:06.380
是不是我们这个得怎么着

46:06.380 --> 46:08.860
我们就是比完之后是不是你就得二

46:08.860 --> 46:09.740
对吧得二

46:09.740 --> 46:11.180
证明什么证明你这个设备

46:11.180 --> 46:13.020
是不是哎还挺先进的是吧

46:13.020 --> 46:14.220
也就是设备还挺细腻的

46:14.220 --> 46:16.940
比这个参照的像素要多出来两倍的像素点

46:16.940 --> 46:18.700
垂直和水平都多出来的两倍

46:18.700 --> 46:20.300
面积多出来四倍是吧

46:20.300 --> 46:20.780
是这样的吧

46:20.780 --> 46:22.060
然后到时候你来成像的时候

46:22.060 --> 46:25.660
你就用两个像素点捏成一个像素点

46:25.660 --> 46:28.220
或者说面积上用四个像素点

46:28.220 --> 46:30.940
捏成一个像素点来展示我的

46:30.940 --> 46:32.300
哎这样的一个尺寸

46:32.300 --> 46:32.860
明白我的意思吗

46:32.860 --> 46:34.220
来展示这样的尺寸啊

46:34.220 --> 46:36.540
但实际上比如说你放了一个

46:36.540 --> 46:38.300
但实际上啊

46:38.300 --> 46:40.300
比如说实际上呢

46:40.380 --> 46:43.580
你依照200 dpi这样的一个像素的

46:43.580 --> 46:47.100
就是你依照200 dpi像素的这样的一个设备

46:47.100 --> 46:50.460
去给它一张以它的物理像素

46:50.460 --> 46:52.940
作为基本单位的这样一个图像的时候

46:52.940 --> 46:56.780
啊就比如说我是按照你的设备为这个基准

46:56.780 --> 46:59.340
给你一张能显示的图像的时候给你了

46:59.340 --> 47:03.420
是吧那我们写逻辑像素怎么办写呢

47:03.420 --> 47:05.500
啊我们写逻辑像素比较怎么来写呢

47:05.500 --> 47:07.420
比如说啊我先写几个基础

47:07.420 --> 47:08.300
然后再说那个问题啊

47:08.700 --> 47:09.900
过度太快了啊我慢点来

47:10.700 --> 47:11.100
设备

47:12.300 --> 47:13.020
d像素比

47:14.220 --> 47:15.260
比如说再来有dpi啊

47:16.300 --> 47:18.460
比如说有的dpi这是300 dpi的

47:18.460 --> 47:19.500
啊物理像素

47:19.500 --> 47:21.260
dpi比如说物理像素啊

47:23.660 --> 47:24.540
css像素

47:26.620 --> 47:29.260
就是每个设备根据它dpi的不同

47:29.260 --> 47:30.940
是不是它的dpr的不同

47:30.940 --> 47:32.620
是吧设备像素比是不是不一样

47:32.620 --> 47:34.300
啊比上这个逻辑像素是不一样

47:34.300 --> 47:36.460
然后呢比如说它比完是三是吧

47:36.620 --> 47:37.740
对吧啊先不管了

47:37.740 --> 47:39.740
然后有的呢有的dpr是比完是一

47:39.740 --> 47:41.180
啊比完是一那就惨了啊

47:42.940 --> 47:44.140
哎比完是一就惨了

47:44.140 --> 47:45.900
现在呢我先循序渐进啊

47:45.900 --> 47:47.020
我先说两个情况

47:47.740 --> 47:48.940
第一个情况呢是这样的

47:52.070 --> 47:52.630
我们的

47:54.230 --> 47:56.070
我们有两个非常经典的机器啊

47:56.630 --> 47:58.150
第一个机器呢叫iphone3

47:58.150 --> 47:59.670
第二个机器呢是iphone4

47:59.670 --> 48:00.870
它俩经典在哪呢

48:00.870 --> 48:02.710
它有个历史性的一个变革啊

48:02.710 --> 48:03.910
iphone3和iphone4

48:03.910 --> 48:05.430
屏幕的尺寸是一模一样的

48:05.430 --> 48:07.270
设备的尺寸是一模一样的

48:07.270 --> 48:13.670
然后呢iphone4同比例的像素的dpi是 iphone3的二倍

48:14.470 --> 48:15.990
啊iphone3

48:17.030 --> 48:21.030
比如说iphone iphone3啊我举个例子啊

48:21.030 --> 48:22.310
我忘了具体的数了

48:22.310 --> 48:24.710
比如说iphone3是180dpi

48:24.710 --> 48:26.070
是不是也挺高了是吧

48:26.070 --> 48:27.990
但是呢不够高啊iphone4

48:29.670 --> 48:32.950
iphone4啊iphone iphone4

48:33.670 --> 48:35.350
他们两个比数

48:36.390 --> 48:37.590
360dpi

48:37.590 --> 48:38.550
Rechinopin

48:38.550 --> 48:39.590
360dpi

48:40.390 --> 48:45.110
那他们俩在成像上是不是就这样的一个dpi的一个比值了

48:45.110 --> 48:45.510
对吧

48:45.510 --> 48:48.550
例如说iphone3dpi比值多少

48:48.550 --> 48:49.910
这个比值啊为什么说叫

48:49.910 --> 48:51.350
为什么说csn这个

48:51.350 --> 48:53.670
为什么说参照像素是一个模糊值

48:53.670 --> 48:54.630
它不怎么准

48:54.630 --> 48:56.150
它不可以比出一半来

48:56.150 --> 48:57.190
例如说dpi

48:57.190 --> 48:59.190
你能比出1.5dpi吗

48:59.190 --> 49:00.390
这是肯定不行的是吧

49:00.390 --> 49:01.350
你不能用半个像素

49:01.350 --> 49:02.950
你像素肯定都是取整的

49:02.950 --> 49:04.790
所以你这块iphone3这块

49:04.790 --> 49:06.150
你顶多咱这个dpi

49:06.150 --> 49:08.230
比如说它的dpi是1

49:08.230 --> 49:09.670
你顶多让它等于1

49:09.670 --> 49:12.470
然后这个iphone4的dpi呢

49:12.470 --> 49:14.150
你让它dpi

49:14.150 --> 49:14.870
你让它等于啥

49:14.870 --> 49:15.670
你让它等于2

49:15.670 --> 49:17.190
也只能这么来

49:17.190 --> 49:17.990
它是它的2倍

49:17.990 --> 49:18.950
它是它的3倍是吧

49:18.950 --> 49:19.830
它是它的1倍

49:19.830 --> 49:20.550
它是它的2倍是吧

49:20.550 --> 49:21.590
也只能这么约等于

49:21.590 --> 49:24.230
所以说dpi就是我们的实际的物理像素

49:24.230 --> 49:26.710
跟这个css这个逻辑像素的一个比

49:26.710 --> 49:29.350
也说你写一个css逻辑像素

49:29.350 --> 49:30.550
它在实际场上

49:30.550 --> 49:32.950
用多少个物理像素去帮你实现

49:32.950 --> 49:33.910
明白了意思吗

49:33.910 --> 49:35.510
你写一个逻辑像素

49:35.510 --> 49:38.470
它用多少个物理像素来帮你实现

49:38.470 --> 49:39.510
你比如说

49:39.510 --> 49:41.910
我们在这个3的设备上

49:41.910 --> 49:42.790
我要添一个

49:42.790 --> 49:44.950
画一个这样100×100了

49:44.950 --> 49:47.510
这是100×100

49:47.510 --> 49:48.390
3的设备上

49:48.390 --> 49:51.430
画一个100×100的这样一个方框

49:51.430 --> 49:52.710
在4的设备上

49:52.710 --> 49:56.390
如果我们不用逻辑像素的话

49:56.390 --> 49:57.630
如果我们css提供的

49:57.630 --> 49:58.390
不是逻辑像素

49:59.350 --> 49:59.670
对吧

49:59.670 --> 50:01.030
它俩是不是特别有代表性

50:01.030 --> 50:01.670
是吧

50:01.670 --> 50:02.870
如果你用了逻辑像素

50:02.870 --> 50:03.990
是不是它画的

50:03.990 --> 50:06.470
逻辑品逻辑像素就是啥

50:06.470 --> 50:07.190
让逻辑上

50:07.190 --> 50:09.030
你们的显示大小是不都是一样的

50:09.030 --> 50:09.590
是吧

50:09.590 --> 50:11.990
但是实际我4用的像素点数

50:11.990 --> 50:12.870
肯定比你多了

50:13.750 --> 50:14.470
不止一倍吧

50:14.470 --> 50:15.510
是不是横着比你多一倍

50:15.510 --> 50:16.550
纵着比你多一倍

50:16.550 --> 50:17.590
因为我dpi是2

50:17.590 --> 50:19.270
你dpi是1是吧

50:19.270 --> 50:20.630
我这块的像素点数

50:20.630 --> 50:21.830
是不是用的就比你多了

50:22.950 --> 50:24.310
面积上是不是多了4倍

50:24.310 --> 50:24.870
2×2

50:24.870 --> 50:25.670
明白我意思吧

50:25.670 --> 50:26.310
就是这么回事

50:26.950 --> 50:29.750
再说可能说咱们添冲上纯色的话

50:29.750 --> 50:30.470
这块重点

50:30.870 --> 50:32.790
如果我添冲上纯色的话

50:32.790 --> 50:34.790
那顶多也就是我多用点像素点

50:34.790 --> 50:35.830
你少用点像素点

50:35.830 --> 50:37.030
是这么回事对吧

50:37.030 --> 50:39.750
但是如果我里面有成像的话

50:40.470 --> 50:42.790
我里面依照的iPhone4的标准

50:42.790 --> 50:44.150
给你传了一张图片

50:44.870 --> 50:46.470
我依照iPhone4的标准

50:46.470 --> 50:47.750
传了一张图片

50:47.750 --> 50:49.830
那是不是在iPhone4里面

50:50.870 --> 50:51.670
是不是在iPhone4

50:51.670 --> 50:54.550
因为dpi2你是1对吧

50:54.550 --> 50:55.670
我在iPhone4里面

50:55.670 --> 50:57.510
我传了一个200×200的

50:57.510 --> 50:59.350
这样的一个图片email对吧

50:59.350 --> 51:01.910
但是我添这个图像的尺寸的时候

51:01.910 --> 51:03.830
是不是只能添100×100

51:03.830 --> 51:04.390
对吧

51:04.390 --> 51:05.350
因为什么

51:05.350 --> 51:08.470
因为它dpi2是2是吧

51:08.470 --> 51:08.950
对吧

51:08.950 --> 51:10.470
所以说我添了一个逻辑像素

51:10.470 --> 51:11.990
是不是只能添100×100

51:11.990 --> 51:13.430
但是实际上我放进去的

51:13.430 --> 51:14.870
是不是200×200像素的

51:14.870 --> 51:15.910
这样一个图片

51:15.910 --> 51:18.070
因为它在机器会帮咱们还原

51:18.070 --> 51:18.630
是吧

51:18.630 --> 51:19.430
因为逻辑屏

51:19.430 --> 51:20.230
是不是会转换成

51:20.230 --> 51:21.350
实际的物理像素

51:21.350 --> 51:22.230
明白我意思吧

51:22.230 --> 51:23.350
所以说我添了一张

51:23.350 --> 51:24.550
200×200的像素

51:24.630 --> 51:26.310
跑到这里面来的图片的话

51:26.310 --> 51:29.030
是不是它iPhone4能完美的显示出来

51:29.030 --> 51:30.790
iPhone3你就会丢像素点

51:30.790 --> 51:32.630
是不是显示效果不太好

51:32.630 --> 51:33.030
对吧

51:33.030 --> 51:34.070
因为我这个像素点

51:34.070 --> 51:35.110
就是200×200的

51:35.110 --> 51:35.750
是不是放进来

51:35.750 --> 51:37.190
虽然说咱俩设计的逻辑像素

51:37.190 --> 51:38.310
都是100×100没问题

51:38.310 --> 51:39.830
你是1我是第2

51:39.830 --> 51:41.830
我用200×200来表示100×100

51:41.830 --> 51:42.310
是吧

51:42.310 --> 51:44.630
但是如果你放的内容是200×200的

51:44.630 --> 51:45.830
你这个dpi2是1的

51:45.830 --> 51:46.950
是不是不占优势的

51:46.950 --> 51:48.150
是不是dpi2是2的

51:48.150 --> 51:49.670
是不是占优势的

51:49.670 --> 51:51.110
我这么说能明白我意思吗

51:51.110 --> 51:51.910
同学们

51:51.910 --> 51:53.590
是不是没有问题

51:53.670 --> 51:55.590
我实际上是按照iPhone4

51:55.590 --> 51:58.070
去给的图片200×200的图片

51:58.070 --> 51:59.990
那为了我在上

51:59.990 --> 52:02.390
那我用iPhone4为标准给的图片

52:02.390 --> 52:03.030
是吧

52:03.030 --> 52:03.750
给的图片

52:05.910 --> 52:07.190
这个image

52:07.190 --> 52:09.590
等于200×200的图片实际的

52:09.590 --> 52:12.390
我这个200×200是实际的物理像素

52:12.390 --> 52:12.950
物理像素

52:12.950 --> 52:13.750
也是设备像素

52:13.750 --> 52:14.550
物理像素

52:14.550 --> 52:15.830
按照iPhone4给的

52:15.830 --> 52:18.390
那转换成这样的逻辑像素的话

52:18.390 --> 52:19.590
用CSS代码来填

52:19.590 --> 52:20.230
填200是200

52:20.230 --> 52:20.790
它不毁了

52:20.790 --> 52:22.470
它会在这还得你成二是吧

52:22.470 --> 52:23.030
那怎么着呢

52:23.030 --> 52:25.270
实际上是不是我们填CSS的时候

52:25.270 --> 52:27.670
CSS的时候就是100×100是吧

52:27.670 --> 52:28.070
对吧

52:28.070 --> 52:29.110
然后在这里面

52:29.110 --> 52:30.710
它是不是能帮咱们还原

52:30.710 --> 52:32.790
还原成200×200对吧

52:32.790 --> 52:34.870
在这个在实际运行的时候

52:34.870 --> 52:37.190
是不是100×我们的DPR

52:38.630 --> 52:41.670
然后这块100×我们的DPR

52:41.670 --> 52:41.990
对吧

52:41.990 --> 52:42.710
因为1比2

52:42.710 --> 52:43.590
成一DPR之后

52:43.590 --> 52:45.030
是不是用200个像素点

52:45.030 --> 52:46.710
来表示100个这样的一个距离

52:46.710 --> 52:48.470
因为我们要让视觉上

52:48.470 --> 52:49.350
在不同的设备

52:49.350 --> 52:50.950
看起来都是一样大是吧

52:50.950 --> 52:52.710
但是我们这里面的内容

52:52.710 --> 52:53.830
是不是添冲的

52:53.830 --> 52:55.590
要比这里面内容的像素点

52:55.590 --> 52:56.550
说要多

52:56.550 --> 52:57.430
明白我意思吗

52:57.430 --> 52:59.350
iPhone4的时候比iPhone3要多

52:59.350 --> 53:00.630
就是这样的一个逻辑

53:00.630 --> 53:02.150
所以说你添一张图片进去之后

53:02.150 --> 53:02.950
你就发现了

53:02.950 --> 53:05.030
还是是不是高像素点的

53:05.030 --> 53:06.150
这样的保证率大

53:06.150 --> 53:09.030
逻辑像素只是为了保持尺寸

53:09.030 --> 53:09.430
一样的

53:09.430 --> 53:10.870
但是实际上添冲内容

53:10.870 --> 53:12.870
肯定还是你像素点是多

53:12.870 --> 53:14.470
你添的内容就更丰富

53:14.470 --> 53:15.350
明白我意思吧

53:15.350 --> 53:16.550
那你说它比如说这块

53:16.550 --> 53:17.750
你给它4万个像素点

53:17.750 --> 53:19.190
它里面只能放1万个

53:19.190 --> 53:20.470
那它肯定丢3万个

53:20.470 --> 53:21.350
比如说3个点

53:21.670 --> 53:22.550
加1个点

53:22.550 --> 53:23.030
3个点

53:23.030 --> 53:23.590
加1个点

53:23.590 --> 53:25.030
那色彩过渡就没那么好

53:25.030 --> 53:25.910
能跟我意思吧

53:25.910 --> 53:26.790
就掐掉了3个点

53:26.790 --> 53:27.430
扔掉3个点

53:27.430 --> 53:27.830
那没办法

53:27.830 --> 53:28.630
我显示过来那么多点

53:28.630 --> 53:29.190
是吧

53:29.190 --> 53:30.950
但是你拿高像素点出

53:30.950 --> 53:32.310
显示第一像素点出是不能实现

53:32.310 --> 53:33.270
比如说1个点是红

53:33.270 --> 53:34.550
和我4个点都是红

53:34.550 --> 53:36.070
那过渡的边缘都是不一样的

53:36.070 --> 53:36.950
明白我意思吧

53:36.950 --> 53:38.070
那肯定是不一样的

53:38.950 --> 53:39.430
为什么

53:39.430 --> 53:40.870
这是咱们编程的时候一个问题

53:41.190 --> 53:42.390
所以一般情况下

53:42.390 --> 53:44.630
我们美工会按照iPhone4

53:44.630 --> 53:45.830
现在是按照iPhone6

53:46.230 --> 53:49.190
美工会按照iPhone6的图像的标准

53:49.190 --> 53:50.310
给我们图像

53:50.390 --> 53:53.190
就是美工给咱们的一个PSD

53:53.190 --> 53:55.110
给咱们的一个视觉处理图

53:55.110 --> 53:56.310
我们按照视觉处理图来编程

53:56.310 --> 53:57.110
对了对吧

53:57.110 --> 53:59.190
咱们美工给咱们PSD的时候

53:59.190 --> 54:00.950
都会按照iPhone6的标准

54:02.630 --> 54:05.590
iPhone6的标准

54:06.550 --> 54:08.230
iPhone6就是Rational屏

54:08.230 --> 54:11.670
Rational屏那就是按照Rational屏的

54:11.670 --> 54:12.790
物理像素来给

54:12.790 --> 54:13.430
是吧

54:13.430 --> 54:16.870
按照Rational

54:17.590 --> 54:19.910
就是视网模型的物理像素

54:20.630 --> 54:21.670
去给我们

54:23.350 --> 54:24.390
去给我们这样的啥

54:25.350 --> 54:26.950
去给我们实际的

54:28.230 --> 54:30.630
去给我们图片的尺寸

54:30.630 --> 54:31.030
是吧

54:31.670 --> 54:33.590
然后我们得为了

54:33.590 --> 54:34.870
让所有机器展示出一样的

54:34.870 --> 54:36.470
是不是咱们把这个物理像素

54:36.470 --> 54:38.310
给它转成逻辑像素

54:38.310 --> 54:40.630
然后是不是得除我们的DPR

54:40.630 --> 54:42.150
除了DPR之后是不是

54:42.710 --> 54:43.910
我们很显然的是

54:43.910 --> 54:45.510
如果你主要面对的是

54:45.510 --> 54:46.470
iOS设备的话

54:46.470 --> 54:47.990
你是不是得把它给你的尺寸

54:47.990 --> 54:48.630
你除个2

54:49.030 --> 54:49.910
明白我意思吧

54:49.910 --> 54:51.350
所以这块美工给你的图

54:51.350 --> 54:53.030
你为什么要除2设备就理解了

54:53.030 --> 54:53.590
一般情况下

54:53.590 --> 54:55.910
它都以iPhone6作为基础来给图

54:56.630 --> 54:58.230
所以你要给它转换成

54:58.230 --> 54:59.350
逻辑像素的话

54:59.350 --> 55:01.510
iPhone6它就是DPR是2的设备

55:01.510 --> 55:02.070
是吧

55:02.070 --> 55:03.190
iPhone6的DPR

55:03.990 --> 55:06.710
iPhone6的DPR

55:07.670 --> 55:08.870
它就是2

55:08.870 --> 55:09.910
所以你得除2是吧

55:09.910 --> 55:11.190
除2之后换成逻辑像素

55:11.190 --> 55:12.230
逻辑像素这个设备

55:12.230 --> 55:13.430
会帮你再成回来2

55:13.430 --> 55:15.590
再变成你最终的那个像素点数

55:15.750 --> 55:16.790
所以你点数不会丢

55:16.790 --> 55:17.670
明白我意思吧

55:17.670 --> 55:18.470
它给你什么图

55:18.470 --> 55:19.350
你传进什么图

55:19.350 --> 55:20.230
也没问题

55:20.230 --> 55:21.270
但是在其他设备里面

55:21.270 --> 55:22.230
可能就会丢点

55:22.230 --> 55:22.790
ok

55:22.790 --> 55:24.710
这个能理解我意思吧

55:24.710 --> 55:25.990
我们也管

55:25.990 --> 55:27.270
把给我们的

55:27.270 --> 55:28.630
就是我们也管

55:28.630 --> 55:30.150
就是CSS

55:30.150 --> 55:32.230
用CSS的逻辑像素编程

55:32.230 --> 55:33.750
我们管的叫什么呢

55:33.750 --> 55:35.350
我把这个这页脸复制过来

55:35.350 --> 55:36.150
我放到这

55:36.150 --> 55:38.550
我真的我怕你们记不住

55:40.710 --> 55:41.510
怕你们记不住

55:41.510 --> 55:42.710
我都放这了

55:42.710 --> 55:43.430
我们也管

55:44.390 --> 55:45.510
我们也管

55:47.590 --> 55:50.230
CSS编程的

55:50.230 --> 55:53.110
这种编程的

55:53.110 --> 55:54.790
这个逻辑

55:54.790 --> 55:56.230
逻辑像素

55:56.230 --> 55:57.830
方式

55:57.830 --> 55:59.750
叫做逻辑屏

55:59.750 --> 56:01.670
逻辑屏

56:01.670 --> 56:04.070
逻辑屏幕

56:04.070 --> 56:06.150
比如说

56:06.150 --> 56:07.750
依然是比如说

56:07.750 --> 56:08.630
比如说

56:08.630 --> 56:10.390
我们这块有个逻辑屏

56:10.390 --> 56:11.910
我们都按逻辑屏是干嘛的

56:12.630 --> 56:14.710
是不是天生正常一个CSS像素的

56:14.710 --> 56:15.670
然后逻辑屏

56:15.670 --> 56:16.870
会根据

56:16.870 --> 56:18.070
是不是我们的操作系统

56:18.070 --> 56:21.190
我会根据逻辑屏的像素数

56:21.190 --> 56:23.750
然后再根据我们设备的DPI

56:23.750 --> 56:27.350
DPR来帮咱们转换实际的物理像素

56:27.350 --> 56:29.190
就是你设了100个逻辑像素

56:29.190 --> 56:30.630
我得拿多少个物理像素

56:30.630 --> 56:32.630
来帮你来实现逻辑像素

56:32.630 --> 56:33.510
明白我意思吧

56:33.510 --> 56:34.550
那是不是换句话说

56:34.550 --> 56:36.790
我们CSS里面像素就是一个虚拟值

56:36.790 --> 56:38.150
你添完之后

56:38.150 --> 56:39.670
它只是为了过度的

56:39.670 --> 56:40.550
对吧

56:40.550 --> 56:41.590
这个逻辑像素

56:41.670 --> 56:42.950
这块是逻辑屏是吧

56:43.830 --> 56:44.470
逻辑

56:45.350 --> 56:46.310
逻辑屏

56:46.310 --> 56:47.510
比如说屏幕

56:48.790 --> 56:49.670
比如逻辑屏里面

56:51.190 --> 56:52.470
逻辑屏里面怎么着呢

56:52.470 --> 56:53.350
我添的是100

56:53.990 --> 56:55.350
成100的是吧

56:55.350 --> 56:58.150
放到DPR是1里面的这样的一个DPR是1

56:58.150 --> 56:58.790
那不变

56:58.790 --> 56:59.270
它啥

56:59.270 --> 57:01.110
它100成100是吧

57:01.110 --> 57:03.030
这块DPR是DPR

57:03.030 --> 57:04.390
DPR它根据DPR

57:04.390 --> 57:05.190
会跟帮我们转换

57:05.190 --> 57:06.310
转换成物理像素是吧

57:06.310 --> 57:07.510
DPR比如说是2

57:08.150 --> 57:08.630
DPR是2

57:09.430 --> 57:10.230
这个DPR是1

57:14.060 --> 57:15.020
这DPR是2

57:15.020 --> 57:16.380
2的话是吧

57:16.380 --> 57:17.100
应该怎么着

57:17.100 --> 57:18.380
是不是变成200成200了

57:18.380 --> 57:18.780
对吧

57:18.780 --> 57:19.420
200成200

57:19.420 --> 57:20.220
它是不是在

57:20.220 --> 57:21.420
这我写的200成200

57:21.420 --> 57:22.380
是不是物理像素

57:22.380 --> 57:25.020
就是你屏幕实际实现像素点的

57:25.020 --> 57:27.820
一个设备的最基础的像素是吧

57:27.820 --> 57:29.340
就是设备像素是吧

57:29.340 --> 57:30.060
这叫物理像素

57:30.540 --> 57:31.980
是不是这是物理像素是吧

57:31.980 --> 57:32.540
物理像素

57:33.340 --> 57:35.260
因为只有200成200的物理像素

57:35.260 --> 57:36.940
才能实现出你逻辑像素

57:36.940 --> 57:38.700
100成100的这个大小是吧

57:38.700 --> 57:41.580
比如说这个DPR是3

57:41.580 --> 57:42.380
3的话

57:42.380 --> 57:43.660
那你就300成300吧

57:43.820 --> 57:44.540
对吧

57:44.540 --> 57:45.180
明白我意思吧

57:45.180 --> 57:46.060
就这样的一次类水

57:46.060 --> 57:47.820
当DPR现在我好像

57:47.820 --> 57:49.340
我不知道有没有七八九的

57:49.340 --> 57:50.140
那太吓人了说

57:50.140 --> 57:51.020
那啥设备啊

57:51.020 --> 57:51.740
工业级别的

57:52.060 --> 57:52.700
就这个意思

57:52.700 --> 57:54.860
逻辑屏转换成物理屏

57:54.860 --> 57:55.740
明白我意思吧

57:55.740 --> 57:56.860
逻辑屏转换成物理屏

57:58.220 --> 57:59.340
根据不同的设备

57:59.340 --> 57:59.980
可能这是

57:59.980 --> 58:01.180
这是iphone3是吧

58:01.180 --> 58:01.900
这是iphone4

58:01.900 --> 58:02.780
这可能是iphone

58:04.140 --> 58:05.980
这可能是iphone100是吧

58:06.540 --> 58:07.340
iphone100是吧

58:07.340 --> 58:08.940
这可能iphone5000是吧

58:08.940 --> 58:11.180
iphone1是吧

58:11.180 --> 58:12.220
然后这个可能iphone就没了

58:12.220 --> 58:12.860
三星了是吧

58:13.340 --> 58:14.060
就这样了

58:14.060 --> 58:15.260
逻辑屏转换了这个距离

58:15.260 --> 58:17.340
咱们编写编写的都是逻辑相处

58:17.340 --> 58:19.660
CSS里面的PX是逻辑相处

58:19.660 --> 58:20.620
明白我意思吧

58:20.620 --> 58:22.140
如果有面试官缺德过你

58:22.140 --> 58:22.620
相处

58:23.660 --> 58:24.700
这个多大呀

58:24.700 --> 58:25.260
是吧

58:25.260 --> 58:27.100
你是不是就好好给他解释解释

58:27.100 --> 58:27.420
是吧

58:27.420 --> 58:28.620
相处你跟他说有点距

58:28.620 --> 58:28.940
是吧

58:28.940 --> 58:30.380
点距可以约等于相处

58:30.380 --> 58:30.700
是吧

58:30.700 --> 58:31.820
每个设备的点距不一样

58:31.820 --> 58:33.100
所以说我们物理相处不一样

58:33.100 --> 58:33.580
是吧

58:33.580 --> 58:34.780
然后还有逻辑相处

58:34.780 --> 58:36.300
还有实际的物理相处是吧

58:36.300 --> 58:37.580
他们是有转换关系的

58:37.580 --> 58:38.300
知道吧

58:38.380 --> 58:40.140
这就是我们要讲的

58:40.140 --> 58:41.820
今天一系列的知识

58:41.820 --> 58:43.020
然后再说一下

58:44.060 --> 58:45.740
我们衡量一个屏幕

58:45.740 --> 58:47.500
到底它好不好

58:47.500 --> 58:49.420
它展示的色彩丰富丰富

58:49.420 --> 58:51.180
我们不看分辨率

58:52.220 --> 58:53.340
分辨率是啥呢

58:53.340 --> 58:53.740
同学们

58:53.740 --> 58:54.380
我给你说一下

58:54.380 --> 58:55.980
分辨率比如说1920

58:55.980 --> 58:57.180
乘以1080

58:58.140 --> 58:58.860
1080

58:58.860 --> 58:59.500
它是啥呢

59:00.460 --> 59:02.620
它是在我们固定宽高下

59:02.620 --> 59:04.940
听我说在固定宽高下

59:05.900 --> 59:07.180
宽高下

59:09.180 --> 59:10.860
宽高下

59:10.860 --> 59:15.180
展示的像素点数

59:15.180 --> 59:17.100
就是你看固定宽高下

59:17.100 --> 59:18.220
展示的像素点数

59:18.220 --> 59:20.300
其实你不太容易能直观的

59:20.300 --> 59:21.260
看出来好和坏

59:21.260 --> 59:24.060
比如说我分辨率是1920x1080

59:24.060 --> 59:25.740
也就是说我这个手机

59:25.740 --> 59:27.660
横着的尺寸

59:27.660 --> 59:30.140
能展示1080个像素点

59:30.140 --> 59:31.500
纵着的尺寸

59:31.500 --> 59:33.500
能展示1920个像素点

59:33.820 --> 59:35.820
你得看一下这个机器多大

59:35.820 --> 59:37.340
你这个展示多少像素点不重要

59:37.340 --> 59:38.860
你得看一下机器多大

59:38.860 --> 59:39.420
是吧

59:39.420 --> 59:40.780
你比如说这个机器

59:40.780 --> 59:44.940
我是10厘米乘以10英寸乘以8英寸的

59:44.940 --> 59:46.300
这是一个机器大小

59:46.300 --> 59:48.380
比如说咱就说这个纵轴吧

59:48.380 --> 59:50.300
咱就说这个斜角线

59:50.300 --> 59:52.300
对角线可能是10寸的

59:52.300 --> 59:53.500
它也是这么大

59:53.500 --> 59:56.940
你说10寸的10寸

59:56.940 --> 01:00:02.940
10寸的1920x1080和2寸的10寸的10寸

01:00:03.900 --> 01:00:05.180
1920x1080

01:00:05.180 --> 01:00:06.620
那清晰度能一样吧

01:00:06.620 --> 01:00:07.820
是不是2寸的大

01:00:07.820 --> 01:00:08.140
是吧

01:00:08.140 --> 01:00:09.420
同学们能理解我意思吧

01:00:09.420 --> 01:00:10.220
所以说咱们得看啥

01:00:10.220 --> 01:00:11.420
咱们得看DPI

01:00:11.420 --> 01:00:12.620
咱们得看DPI

01:00:12.620 --> 01:00:14.220
它这个1920型乘乘

01:00:14.220 --> 01:00:15.340
这个数字怎么来承认

01:00:15.340 --> 01:00:17.740
比如说屏幕的DPI给你什么

01:00:17.740 --> 01:00:18.700
给你去360

01:00:18.700 --> 01:00:20.940
DPI等于360

01:00:22.140 --> 01:00:23.420
等于360

01:00:23.420 --> 01:00:26.300
比如说这块写360DPI

01:00:26.300 --> 01:00:26.700
是吧

01:00:26.700 --> 01:00:27.660
或者PPI都行

01:00:27.660 --> 01:00:28.220
PPI

01:00:28.220 --> 01:00:29.660
360PPI

01:00:29.660 --> 01:00:31.420
然后它还是多少英寸

01:00:31.820 --> 01:00:33.420
它是两英寸

01:00:33.420 --> 01:00:35.500
或者2.5英寸

01:00:35.500 --> 01:00:36.860
那你承完了之后

01:00:36.860 --> 01:00:38.460
是纵向的就等于来纵向的数

01:00:38.460 --> 01:00:39.580
横向的等于来横向的数

01:00:39.580 --> 01:00:40.380
能懂我意思吗

01:00:40.380 --> 01:00:41.500
当然了

01:00:41.500 --> 01:00:42.300
你这种球法

01:00:42.300 --> 01:00:45.500
就是1980除以它的DPI

01:00:45.500 --> 01:00:46.620
除以它的英寸数

01:00:46.620 --> 01:00:51.020
2.5英寸和这个可能说1080

01:00:51.020 --> 01:00:52.700
再除以一个什么什么英寸数

01:00:52.700 --> 01:00:53.420
是吧

01:00:53.420 --> 01:00:54.380
得出的结果

01:00:54.380 --> 01:00:55.740
一个屏幕得出的结果

01:00:55.740 --> 01:00:57.740
它的DPI横着处和纵着处

01:00:57.740 --> 01:00:58.700
是不是都是相同的

01:00:58.700 --> 01:00:59.980
因为DPI乘以这个英寸

01:01:00.540 --> 01:01:01.500
它处理这个数

01:01:01.500 --> 01:01:02.700
应该等于DPI是吧

01:01:02.700 --> 01:01:03.900
横纵都是相同的

01:01:03.900 --> 01:01:05.100
不存在横的DPI

01:01:05.100 --> 01:01:06.540
和纵着的DPI是不一样的

01:01:06.540 --> 01:01:07.100
明白我意思吗

01:01:07.100 --> 01:01:07.740
同学们

01:01:07.740 --> 01:01:09.500
是不是这块都能理解了

01:01:10.060 --> 01:01:11.500
这块能理解了之后

01:01:11.500 --> 01:01:13.100
美工上那种Writing都凭

01:01:13.100 --> 01:01:14.540
需要除二的屏幕

01:01:14.540 --> 01:01:15.340
怎么来适配

01:01:15.340 --> 01:01:15.580
是吧

01:01:15.580 --> 01:01:16.540
逻辑屏什么的

01:01:16.540 --> 01:01:17.900
是不是大家都清楚了

01:01:18.540 --> 01:01:20.140
看看这些个名词

01:01:20.140 --> 01:01:21.420
还有啥不懂的吗

01:01:21.420 --> 01:01:22.380
是不是都明白了

01:01:22.380 --> 01:01:23.020
都明白了

01:01:23.020 --> 01:01:24.940
咱们这场课就告一段落了

01:01:24.940 --> 01:01:26.220
这一块非常复杂

01:01:26.220 --> 01:01:27.420
特别不好讲的误会

01:01:27.420 --> 01:01:28.780
我抱着一个非常愉悦的心情

01:01:28.780 --> 01:01:29.500
给你叫完了

01:01:30.060 --> 01:01:31.980
是不是还可以明白同学们

01:01:31.980 --> 01:01:33.100
如果实在不太懂的话

01:01:33.100 --> 01:01:34.300
你可以下课来问问我

01:01:34.300 --> 01:01:36.140
这话我是希望你能懂的

01:01:36.140 --> 01:01:36.700
OK

01:01:36.700 --> 01:01:38.140
咱们这堂课就到这了

01:01:38.140 --> 01:01:38.620
好不好

