WEBVTT

00:00.240 --> 00:03.000
Hello 大家好 欢迎大家来到堆一个堂

00:03.000 --> 00:04.400
我是你们的美琪老师

00:04.400 --> 00:08.600
今天带着大家来学习一下这个想氏网页开发

00:08.600 --> 00:13.120
在真正进入到我们这个课程之前有几个问题

00:13.120 --> 00:15.120
需要大家来思考一下

00:15.120 --> 00:18.120
我们都知道我们来开发一个页面

00:18.120 --> 00:20.680
最终是要呈现给人的 对不对

00:20.680 --> 00:21.840
让人看的

00:21.840 --> 00:24.840
那这个人我们也管的叫用户 对不对

00:24.840 --> 00:26.120
那么问题来了

00:26.120 --> 00:29.320
用户是通过什么来看我们的页面的呢

00:30.280 --> 00:34.480
用户它是不是可能会通过电脑 对吧

00:34.480 --> 00:40.840
电脑 手机或者平板这些设备来看我们的页面 对吧

00:40.840 --> 00:45.120
那这些设备我们在开发的时候是不是只能

00:45.120 --> 00:49.040
我们在开发的时候一般来说是在电脑上来开发的

00:49.040 --> 00:52.040
那我们看到这个浏览器里面显示的一个效果

00:52.040 --> 00:54.280
是电脑版PC版的 对不对

00:54.280 --> 00:58.040
我们也管电脑这一端叫PC端

00:58.040 --> 01:00.880
然后也管手机平板

01:00.880 --> 01:04.160
这一端叫一动端 统称一动端

01:04.160 --> 01:09.780
那我们在PC端开发的时候

01:09.780 --> 01:11.900
看到的效果可能是

01:11.900 --> 01:15.100
我可能一行有四个DIV 对不对

01:15.100 --> 01:16.860
可能我一行有四个DIV

01:16.860 --> 01:19.660
那在手机上我们看到的能

01:19.660 --> 01:21.980
是不是就不一定是这样的一个效果了

01:21.980 --> 01:24.620
如果是一行有四个DIV的话

01:24.620 --> 01:27.580
那它是不是可能就会出现滚动条了

01:27.740 --> 01:30.940
那这样一来展现给用户的一个效果

01:30.940 --> 01:33.780
是不是就并不油耗了 对吧

01:33.780 --> 01:36.620
用户还需要来回橫向的去拖动

01:36.620 --> 01:40.500
才能看清我整个的这个页面 对吧

01:40.500 --> 01:42.900
那还有一个问题

01:42.900 --> 01:45.340
除了我们这些设备

01:45.340 --> 01:47.420
除了这个大小不一样之外

01:47.420 --> 01:48.620
还有什么不一样呢

01:48.620 --> 01:50.820
是不是还有分辨率也不同

01:50.820 --> 01:54.140
对不对 分辨率也可能不同

01:54.140 --> 01:57.780
那分辨率不同会带来一个什么样的效果呢

01:57.780 --> 02:01.900
可能我在PC端我看一个十四向速的一个文字

02:01.900 --> 02:03.780
你看得很清晰 对不对

02:03.780 --> 02:05.180
觉得已经很大了

02:05.180 --> 02:07.260
但是我们拿到手机上呢

02:07.260 --> 02:10.020
手机的分辨率是不是可能

02:10.020 --> 02:12.300
手机的分辨率会很高 对不对

02:12.300 --> 02:13.460
会很高

02:13.460 --> 02:16.580
那你看到的这个文字是不是就可能很小很小

02:16.580 --> 02:16.980
对吧

02:16.980 --> 02:18.620
大家可以自己试一下

02:18.620 --> 02:20.780
可以自己试一下

02:20.780 --> 02:22.700
我也可以带着大家来试一下

02:22.700 --> 02:24.380
我来写一个

02:24.380 --> 02:25.900
这个

02:25.900 --> 02:27.220
我来写一个页面

02:27.220 --> 02:29.220
然后我把这一行先注释掉

02:29.220 --> 02:30.140
为什么会注释掉

02:30.140 --> 02:31.180
一会我们再来说

02:31.180 --> 02:33.060
可以吧

02:33.060 --> 02:35.500
我来一个文字

02:35.500 --> 02:39.460
今天你吃了吗

02:39.460 --> 02:42.460
然后我给这个文字加点样式

02:42.460 --> 02:43.420
DIV

02:43.420 --> 02:49.230
STEM

02:49.230 --> 02:53.910
给它的FundSize设置成十四向速

02:53.910 --> 02:55.590
然后我们在浏览器里面

02:55.590 --> 02:58.350
现在在我们这个

02:58.350 --> 03:00.070
开发的一个浏览器端

03:00.070 --> 03:01.910
看一下它的一个效果

03:01.910 --> 03:05.250
可以吧

03:07.050 --> 03:09.570
我们现在感觉这个文字已经挺大了

03:09.570 --> 03:10.210
对不对

03:10.210 --> 03:12.730
那我们右键也审查一下元素

03:12.730 --> 03:15.890
然后我们切换到这个移动端设备上

03:15.890 --> 03:16.850
如何切换呢

03:16.850 --> 03:18.330
大家可以看一下我们这个

03:18.330 --> 03:20.330
打开浏览器的控制台

03:20.330 --> 03:22.250
就是开发者工具

03:22.250 --> 03:23.850
然后它的左上角

03:23.850 --> 03:25.690
在这个控制台的左上角

03:25.690 --> 03:27.410
它有一个手机的一个标志

03:27.410 --> 03:29.850
这就是切换我们当前设备的

03:29.850 --> 03:30.850
我们点击一下它

03:30.850 --> 03:32.050
它就可以给你切换了

03:32.050 --> 03:32.770
看到了吗

03:32.770 --> 03:35.050
它现在给你切换的是iPhone对7 8

03:35.050 --> 03:36.530
那我们发现现在这个文字

03:36.530 --> 03:37.610
你是不是看不清了

03:37.610 --> 03:38.290
对不对

03:38.290 --> 03:40.170
我给大家把分辨率调成百分之百

03:40.170 --> 03:42.930
就是跟我们的设备一模一样的一个大小

03:42.930 --> 03:45.210
你发现我是不是看不清这个文字了

03:45.210 --> 03:45.690
对吧

03:45.690 --> 03:46.570
这是因为什么呢

03:46.570 --> 03:48.970
就是因为我们分辨率的一个问题

03:48.970 --> 03:50.730
到了移动端的时候

03:50.730 --> 03:52.490
它的分辨率会变大

03:52.490 --> 03:53.330
对不对

03:53.330 --> 03:56.330
那我们原本分辨率是什么

03:56.330 --> 03:58.770
分辨率是不是每一行

03:58.810 --> 04:00.050
每一行

04:00.050 --> 04:03.410
它的每一行的像素点的密集程度

04:03.410 --> 04:04.130
对吧

04:04.130 --> 04:04.970
每

04:05.970 --> 04:10.450
像素点的密集程度

04:11.250 --> 04:12.170
真的理解吗

04:13.250 --> 04:14.930
那我说它的分辨率大

04:14.930 --> 04:16.930
也就是说它的密集程度变大了

04:16.930 --> 04:17.450
对不对

04:17.450 --> 04:19.010
密集程度变大了

04:21.660 --> 04:23.340
那密集程度变大了

04:24.220 --> 04:25.980
之前我们在PC端的时候

04:25.980 --> 04:27.580
可能这么大一块

04:27.580 --> 04:29.060
就这么大一块

04:29.180 --> 04:31.340
它可能展示的是多大呢

04:31.340 --> 04:32.180
可以看一下

04:32.180 --> 04:33.940
这现在应该看不到

04:33.940 --> 04:36.540
可能它展示的这个14246

04:36.540 --> 04:37.700
14x6664

04:37.700 --> 04:37.980
对吧

04:37.980 --> 04:39.580
可能是64像素

04:39.580 --> 04:41.340
你在我这个电脑上看

04:41.340 --> 04:43.420
这块可能是64像素

04:43.420 --> 04:46.500
那我们这个CSI像素也可能是64像素

04:46.500 --> 04:47.260
对吧

04:47.260 --> 04:49.660
那到了移动端设备呢

04:49.660 --> 04:51.580
到了移动端设备的时候

04:51.580 --> 04:52.460
它这一块

04:53.540 --> 04:56.900
它的64像素就跟我们这个电脑上的

04:56.900 --> 04:59.220
这个64像素它就有一个区别了

04:59.220 --> 05:00.740
它可能就会变小了

05:00.740 --> 05:01.220
对不对

05:01.220 --> 05:02.100
为什么会变小

05:02.100 --> 05:04.020
就是因为你这个密集程度变大了

05:04.020 --> 05:04.420
对吧

05:05.420 --> 05:06.540
密集程度变大了

05:07.940 --> 05:09.220
这个可以理解吗

05:09.220 --> 05:09.940
这个如果

05:09.940 --> 05:11.580
这一块如果你不明白的话

05:11.580 --> 05:12.660
谢谢大家可以看一下

05:12.660 --> 05:15.900
乘哥这样的那个像素点的那一部分

05:15.900 --> 05:16.860
那一部分知识

05:16.860 --> 05:17.900
可以去了解一下

05:17.900 --> 05:18.420
可以吧

05:19.540 --> 05:21.260
然后我们再接着来说

05:21.260 --> 05:22.900
那它现在是不是就出现了

05:22.900 --> 05:23.820
这样的一个效果

05:23.820 --> 05:25.820
就是在我们移动端的时候

05:25.860 --> 05:28.700
它的这个样式展现的

05:28.700 --> 05:30.700
展现给用户的一个样式

05:30.700 --> 05:32.540
并不那么友好了

05:32.540 --> 05:33.140
对吧

05:33.140 --> 05:35.300
第一个不友好的一个原因

05:35.300 --> 05:37.900
就是它的文字可能你看不清

05:37.900 --> 05:39.500
第二个不友好的原因

05:39.500 --> 05:42.780
可能如果你要是写一个大的DIA的话

05:42.780 --> 05:44.540
它可能出现横向股东条

05:44.540 --> 05:45.620
对不对

05:45.620 --> 05:48.100
那为了解决这么样一个问题的话

05:49.220 --> 05:52.540
我们应该怎么来处理呢

05:52.540 --> 05:53.940
怎么来处理我们的页面呢

05:56.100 --> 05:57.780
我们出现这样横向股东条

05:57.780 --> 06:01.060
并且用户看不清我这个页面的时候

06:01.060 --> 06:02.780
看不清我页面的时候

06:02.780 --> 06:05.100
用户是不是又会给它放大来看

06:05.100 --> 06:06.940
但是放大来看有一个问题

06:06.940 --> 06:09.700
就是增加了用户的一些操作量

06:09.700 --> 06:10.340
对不对

06:10.340 --> 06:13.060
那用户会觉得用着这个网页

06:13.060 --> 06:14.380
我用着很不爽

06:14.380 --> 06:16.020
那用户都觉得不爽了

06:16.020 --> 06:19.700
你这个网页开发也就不那么成功了

06:19.700 --> 06:20.700
并不完美了

06:20.700 --> 06:21.060
可以吧

06:22.180 --> 06:25.620
那我们为了使用户用着更爽

06:25.620 --> 06:27.500
我们会怎么办呢

06:27.500 --> 06:28.820
可能早在以前

06:28.820 --> 06:32.340
你可能会说老实我可以开发多套页面

06:32.340 --> 06:33.700
我可以根据不同的设备

06:33.700 --> 06:34.780
我去开发一个页面

06:34.780 --> 06:35.500
对吧

06:35.500 --> 06:36.500
不同的设备

06:37.860 --> 06:39.380
开发不同的页面

06:40.940 --> 06:41.220
对吧

06:42.340 --> 06:43.380
然后根据设备

06:43.380 --> 06:45.460
我让它展示不同的页面就可以了

06:45.460 --> 06:48.380
这早在以前在移动端设备很少的时候

06:49.500 --> 06:51.380
这个完全是可以的

06:51.380 --> 06:54.100
因为这样如果移动端设备

06:54.100 --> 06:56.860
只有一两个的那个一两种的时候

06:56.860 --> 06:58.940
我们直接是开发几套

06:58.940 --> 07:00.340
开发两三套页面

07:00.340 --> 07:01.580
这完全没问题

07:01.580 --> 07:02.020
对吧

07:02.020 --> 07:03.180
完全全是没问题

07:03.180 --> 07:04.780
但是对于现在来说

07:05.300 --> 07:07.660
现在我们移动端的设备

07:07.660 --> 07:09.180
现在有多少种

07:09.180 --> 07:10.380
你已经数不过来了

07:10.380 --> 07:12.780
管安卓就已经

07:12.780 --> 07:16.380
你管安卓手机的这种设备

07:16.380 --> 07:18.020
这种型号

07:18.020 --> 07:20.980
这些型号你就已经数不过来了

07:21.540 --> 07:24.460
那再让你去开发不同的页面

07:24.460 --> 07:26.020
你能开发过来吗

07:26.020 --> 07:27.780
即使你说你能开发过来

07:27.780 --> 07:29.300
我相信你这

07:29.300 --> 07:30.500
还没

07:30.500 --> 07:32.620
这个钱什么还没挣到手呢

07:32.620 --> 07:34.140
你这已经被累死了

07:34.140 --> 07:35.260
对吧

07:35.260 --> 07:36.860
已经不在了

07:36.860 --> 07:39.260
那我们为了解决这么样一个问题

07:39.260 --> 07:40.620
为了解决什么问题呢

07:40.620 --> 07:49.280
就是让用户在不同的设备上

07:49.280 --> 07:53.090
看到我们的页面

07:53.130 --> 07:54.490
我们的页面的呈现

07:54.490 --> 07:56.130
不能说看到我们的页面

07:56.130 --> 07:58.610
让用户在不同的设备上

07:58.610 --> 08:06.440
看到到的页面呈现效果

08:06.440 --> 08:07.840
是完美的

08:07.840 --> 08:10.780
也就是说

08:10.780 --> 08:14.580
不会让用户觉得我在手机上看

08:14.580 --> 08:16.260
这个页面就觉得这个页面

08:16.260 --> 08:17.780
它不是手机端的

08:19.220 --> 08:21.220
它必须要去拿电脑来看

08:21.220 --> 08:22.620
并不是这样的

08:22.620 --> 08:24.700
而说我们开发一套页面

08:24.780 --> 08:27.020
让用户在不同的设备上

08:27.020 --> 08:29.220
去看这个页面的一个效果的时候

08:29.220 --> 08:30.820
它都是差不多的

08:30.820 --> 08:32.140
可以吧

08:32.140 --> 08:38.300
只需要开发一套页面

08:38.300 --> 08:40.140
那这样的一个目的

08:40.140 --> 08:41.500
其实就是我们这个

08:41.500 --> 08:42.860
想是开

08:42.860 --> 08:45.180
想是网页设计的一个目的

08:45.180 --> 08:46.740
可以吧

08:46.740 --> 08:49.740
我们就因为有这么一个问题

08:49.740 --> 08:51.020
刚才说的那个问题

08:51.020 --> 08:52.780
就是在不同的设备上

08:52.780 --> 08:55.540
我们看到的这个页面呈现的效果

08:55.540 --> 08:57.140
你看到的是不同的

08:57.140 --> 09:00.500
而且对于用户的使用效果

09:00.500 --> 09:02.020
它并不是很友好

09:02.020 --> 09:03.460
那理解吧

09:03.460 --> 09:05.020
给用户呈现的一个效果

09:05.020 --> 09:06.060
并不是很友好

09:06.060 --> 09:07.820
那为了解决这样的一个问题

09:07.820 --> 09:11.860
我们出现了这个想是网页设计

09:11.860 --> 09:14.380
出现了这个想是网页设计

09:14.380 --> 09:16.180
那想是网页设计

09:16.180 --> 09:18.900
其实它的本质就是

09:18.900 --> 09:20.940
开发一套页面

09:20.940 --> 09:23.620
就可以让用户在不同的设备上

09:23.620 --> 09:25.100
不管这是这个设备

09:25.100 --> 09:29.870
它的大小或者分辨率

09:29.870 --> 09:32.830
如何变化

09:32.830 --> 09:36.750
它都可以看到一个完整的一个页面

09:36.750 --> 09:37.350
可以吧

09:37.350 --> 09:40.670
它并不需要进行多的操作

09:40.670 --> 09:44.390
像这个放大页面的放大缩小

09:44.390 --> 09:45.230
这样的操作

09:45.230 --> 09:47.990
它就可以看到我们这个完美的一个页面

09:47.990 --> 09:50.350
好吧

09:50.350 --> 09:53.110
那这就是我们这个想是网页设计

09:53.110 --> 09:55.630
然后简单的可以看一下我这两个概念

09:55.630 --> 09:57.190
其实这两个概念说的

09:57.190 --> 10:00.470
本质上说的就是我们这个想是网页设计

10:00.470 --> 10:01.910
它就是用一套代码

10:01.910 --> 10:03.070
就是我刚才写的这个

10:03.070 --> 10:04.710
用一套代码

10:04.710 --> 10:10.030
去解决几乎所有设备的一个页面展示的一个问题

10:10.030 --> 10:12.350
我再写一遍

10:12.350 --> 10:24.630
一套代码解决几乎所有设备的页面展示问题

10:24.630 --> 10:26.510
那它到底是怎么来解决的呢

10:26.510 --> 10:28.390
我们可以看一下

10:28.390 --> 10:30.790
例如我现在有一个页面

10:30.790 --> 10:34.870
我这个页面里面可能有很多个DIV

10:34.870 --> 10:36.950
class

10:36.950 --> 10:40.810
有很多个DIV

10:40.810 --> 10:42.770
然后这样吧

10:42.770 --> 10:43.890
我有一个DIV

10:43.890 --> 10:46.050
一个DIV里面嵌套了很多个DIV

10:46.050 --> 10:48.130
可以吧

10:48.130 --> 10:51.210
这个DIV里面嵌套了很多DIV

10:51.210 --> 10:54.210
第二代码乘以5

10:54.210 --> 10:55.530
乘以5个DIV

10:55.530 --> 10:57.730
然后我就希望这个DEMO

10:57.730 --> 10:59.530
它的每一个宽度

10:59.530 --> 11:02.170
点DEMO

11:02.170 --> 11:05.490
它的宽度为300像素

11:05.490 --> 11:09.050
高度为200像素

11:09.050 --> 11:10.530
然后包顶

11:10.530 --> 11:11.330
拿个包顶

11:11.330 --> 11:12.010
一像素

11:12.010 --> 11:13.050
稍累的

11:13.050 --> 11:14.690
简号000

11:14.690 --> 11:15.650
那这是

11:15.650 --> 11:19.530
我希望在这个PC端看到的一个效果

11:19.530 --> 11:21.450
看到的一个效果

11:21.450 --> 11:24.210
我希望看到的他们都在一行

11:24.210 --> 11:24.570
对吧

11:24.570 --> 11:25.850
我希望他们都在一行

11:25.850 --> 11:27.090
可以给他来一个

11:27.090 --> 11:28.170
display

11:28.170 --> 11:31.320
inline block

11:31.320 --> 11:32.400
对吧

11:32.400 --> 11:33.160
那这样一来

11:33.160 --> 11:35.400
我这个最外层的这个DIV

11:35.400 --> 11:36.440
它的一个宽度

11:36.440 --> 11:37.600
我也给他设置

11:37.600 --> 11:39.560
设好了

11:39.560 --> 11:42.400
它的一个rapper

11:42.400 --> 11:45.960
我给他也设置一个宽度

11:45.960 --> 11:49.440
WREPP一样

11:49.440 --> 11:50.240
宽度

11:50.240 --> 11:51.880
我这一个是300

11:51.880 --> 11:53.840
总共的这是一共多少

11:53.840 --> 11:55.360
245个对吧

11:55.360 --> 11:56.560
1500

11:56.560 --> 11:56.880
对吧

11:56.880 --> 11:58.680
1500像素

11:58.680 --> 12:01.160
但我这么设置的话

12:01.160 --> 12:02.000
我这么设置的话

12:02.000 --> 12:02.960
它会不会换行

12:02.960 --> 12:05.440
大家可以思考一下

12:05.440 --> 12:06.360
肯定会换行

12:06.360 --> 12:06.720
对不对

12:06.720 --> 12:07.520
为什么会换行

12:07.520 --> 12:09.320
我们可以现在先来看一下

12:09.320 --> 12:10.960
如果你不相信它会换行的话

12:10.960 --> 12:12.240
我们可以先来看一下

12:12.240 --> 12:12.960
刷新一下

12:12.960 --> 12:15.880
放在这个移动端设备上

12:15.880 --> 12:17.160
你看它肯定会换行

12:17.160 --> 12:18.360
为什么会换行呢

12:18.360 --> 12:19.800
是不是就因为我们这两

12:19.800 --> 12:20.920
没两个这个

12:20.920 --> 12:23.480
音蓝还有音蓝block

12:23.480 --> 12:26.920
这个特点的元素

12:26.920 --> 12:28.120
它都有一个

12:28.120 --> 12:29.120
没两个之间

12:29.120 --> 12:31.800
它都有一个这个质表幅

12:31.800 --> 12:33.120
那个质表幅应该有多大

12:33.120 --> 12:35.240
应该是它的fund size值

12:35.240 --> 12:35.800
对吧

12:35.800 --> 12:37.280
fund size值

12:37.280 --> 12:38.720
那我们不想要这个质表幅

12:38.720 --> 12:40.400
你就可以给它

12:40.400 --> 12:42.600
把它的fund size设成零

12:42.600 --> 12:43.080
对不对

12:43.080 --> 12:44.800
把它的fund size

12:44.800 --> 12:46.600
fund size

12:46.600 --> 12:48.880
设成零

12:48.880 --> 12:51.040
然后我们这回来看一下刷新

12:51.040 --> 12:52.560
你发现现在又出了

12:52.560 --> 12:54.000
又换行了对吧

12:54.000 --> 12:54.760
为什么换行

12:54.760 --> 12:56.600
这回是不是就因为我们这个

12:56.600 --> 12:58.440
包点的一个问题了对吧

12:58.440 --> 13:01.080
每一个元素

13:01.080 --> 13:03.640
它都有两个

13:03.640 --> 13:05.360
航向的宽度

13:05.360 --> 13:06.880
它都有两个包点对吧

13:06.880 --> 13:09.040
都得加上两项素

13:09.040 --> 13:10.240
都要加上两项素

13:10.240 --> 13:12.600
那我如果就想把这个包点

13:12.600 --> 13:14.640
包含在我这个内容区里面呢

13:14.640 --> 13:19.270
我是不是可以给它拉一个box sizing

13:19.310 --> 13:20.550
给它来个box sizing

13:20.550 --> 13:22.430
来个包点box就可以了对吧

13:22.430 --> 13:22.950
这样的话

13:22.950 --> 13:25.230
它是不是就变成一行了对吧

13:25.230 --> 13:28.030
那这让我们在浏览器里面看到这个效果

13:28.030 --> 13:29.710
但是在我们的移动端

13:29.710 --> 13:31.430
你要再想看到这个效果

13:31.430 --> 13:32.470
它会变成什么样

13:32.470 --> 13:34.350
我们可以审查一下元素

13:34.350 --> 13:37.030
把它切换到移动端的一个设备

13:37.030 --> 13:39.030
我们发现

13:39.030 --> 13:41.950
现在确实也是在一行

13:41.950 --> 13:44.830
但是你看这个大小是不是不一样的对吧

13:44.830 --> 13:46.590
大小不一样了

13:46.590 --> 13:48.950
这就是出现我刚才所说的那个问题了

13:49.710 --> 13:50.990
如果这里有点文字的话

13:50.990 --> 13:52.230
你根本看不清

13:52.230 --> 13:54.190
在移动端你根本看不清对吧

13:54.190 --> 13:55.350
那如果你想看清的话

13:55.350 --> 13:57.190
你需要给它放大对不对

13:57.190 --> 13:58.150
你需要给它放大

13:58.150 --> 14:00.590
你才能看清它的一个大小对吧

14:03.350 --> 14:04.630
是这样的对吧

14:04.630 --> 14:05.670
来我们再来

14:08.270 --> 14:11.510
那我们怎么来解决这样的一个问题呢

14:13.910 --> 14:15.910
怎么样来解决这样的一个问题呢

14:15.910 --> 14:17.190
这就用到了我们这个

14:17.230 --> 14:20.190
想视网也开发的一个问题

14:20.190 --> 14:24.070
然后刚才留了一个伏笔对吧

14:24.070 --> 14:26.630
就是我刚才把这个Meta标签给它注释掉了

14:27.990 --> 14:29.750
那注释掉了之后

14:29.750 --> 14:31.590
它呈现的效果是这样的对吧

14:31.590 --> 14:33.710
但是我们把它打开之后

14:33.710 --> 14:35.750
大家再来看一下它的一个效果

14:35.750 --> 14:36.870
刷新一下页面

14:36.870 --> 14:38.150
我再重新进一下吧

14:41.270 --> 14:42.990
我再重新打开一下我的页面

14:46.930 --> 14:47.530
现在是这样

14:47.730 --> 14:49.210
我审查一下元素

14:49.210 --> 14:51.210
你看现在的一个效果是什么样子了

14:51.210 --> 14:52.930
它自动给你放大了对不对

14:52.930 --> 14:54.010
自动给你放大了吧

14:54.930 --> 14:58.290
然后这回这个大小是跟我浏览器里面

14:58.290 --> 14:59.370
跟我开发的时候

14:59.370 --> 15:01.890
PC端浏览器里面的大小是一样的对不对

15:04.210 --> 15:06.690
那现在展示的这个大小

15:06.690 --> 15:08.130
感觉是一样的了对吧

15:08.130 --> 15:09.050
感觉是一样的了

15:09.890 --> 15:13.170
那这这个标签到底有什么作用的

15:13.170 --> 15:15.970
其实这个标签它作用就是

15:15.970 --> 15:17.530
将分辨率不同的

15:19.010 --> 15:22.330
将页面大小

15:24.210 --> 15:29.490
根据分辨率不同

15:29.490 --> 15:35.600
进行相应的调节

15:35.600 --> 15:41.880
以展示展示给用户的大小

15:43.440 --> 15:44.760
感觉上差不多

15:47.450 --> 15:47.810
可以吧

15:49.370 --> 15:50.650
其实我这么说

15:50.650 --> 15:52.890
你可能不是特别理解对吧

15:53.770 --> 15:56.290
那我这个面塌标签其实就是用来

15:56.530 --> 16:00.730
其实就是用来在不同的分辨率的设备下面

16:00.730 --> 16:04.290
让你可以看到相同的这个大小

16:05.010 --> 16:05.530
那你解释吧

16:05.530 --> 16:07.050
可以看到相同的一个大小

16:08.890 --> 16:10.090
那我们可以想一下

16:10.090 --> 16:11.970
我这个分辨率比这个分辨率

16:11.970 --> 16:14.530
会比我这个分辨率会大对不对

16:15.210 --> 16:16.690
它比我那个分辨率会大

16:17.690 --> 16:20.610
那如果我希望展示成相同的一个效果的话

16:20.890 --> 16:23.770
我这个像素CSI像素的一个转化

16:23.770 --> 16:30.090
它是不是应该会跟我设备上的一个像素的一个比值

16:30.090 --> 16:31.690
它应该会大一点对吧

16:32.530 --> 16:35.290
大家都知道我以CSS像素

16:36.570 --> 16:39.370
它跟我这个物理像素设备的一个像素

16:39.370 --> 16:39.730
对吧

16:40.370 --> 16:41.010
像素

16:44.290 --> 16:44.970
像素

16:44.970 --> 16:46.170
它是有一定关系的

16:46.170 --> 16:48.050
它并不是完完全全相瞪的

16:48.050 --> 16:48.410
对不对

16:48.410 --> 16:50.010
它并不是完完全全相瞪的

16:51.650 --> 16:55.290
那它是会根据你这个设备的一些分辨率

16:56.010 --> 16:57.490
设备的分辨率

16:57.890 --> 17:01.410
会根据设备分辨率

17:03.240 --> 17:04.200
分辨率

17:06.150 --> 17:09.590
或者是那个屏幕的屏幕的分辨率

17:09.590 --> 17:10.270
不能说

17:11.270 --> 17:14.030
也可以说设备屏幕的分辨率

17:15.270 --> 17:16.190
分辨率

17:16.550 --> 17:18.990
进行一个相应的调节的对吧

17:18.990 --> 17:20.070
相应的调整的

17:21.950 --> 17:22.470
调整

17:23.510 --> 17:26.710
这就是我们这个Meta标签的一个作用

17:26.710 --> 17:28.070
Meta标签的一个作用

17:28.070 --> 17:29.910
然后我们可以详细的来说一下

17:29.910 --> 17:30.750
这个Meta标签

17:31.750 --> 17:33.470
这个Meta标签它设置的是什么呢

17:33.470 --> 17:35.270
设置的是其实是我们的试口

17:35.670 --> 17:37.190
它是怎么来调节的呢

17:38.230 --> 17:39.950
如果你不加这个的话

17:39.950 --> 17:43.230
它也会有一个默认的试口的一个宽度

17:43.230 --> 17:44.790
默认的试口的一个大小

17:45.150 --> 17:46.550
它默认的这个试口大小

17:46.550 --> 17:48.550
一般是980左右

17:48.550 --> 17:50.150
980像素左右

17:51.150 --> 17:55.150
这个会根据你不同的设备

17:55.150 --> 17:58.030
在设备出生的时候

17:58.030 --> 17:59.390
设备出现的时候

17:59.750 --> 18:01.510
它就会给你固定好了

18:01.510 --> 18:03.950
默认的试口的宽度是多大

18:03.950 --> 18:04.510
可以吧

18:05.910 --> 18:08.190
然后我们这块来content它里面

18:08.190 --> 18:11.190
来设置的是我们这个试口的一些属特点

18:11.190 --> 18:12.230
一些属性

18:12.550 --> 18:15.070
第一个wise代表的是我们这个试口的宽度

18:15.070 --> 18:17.430
这个代表的是试口的宽度

18:17.430 --> 18:19.590
thewisewise代表的是设备的宽度

18:19.790 --> 18:21.430
那这块设置的是什么呢

18:21.430 --> 18:23.510
它是希望我们的试口的宽度

18:23.510 --> 18:25.350
等于我设备的一个宽度

18:26.310 --> 18:28.550
这一块能设置什么呢

18:28.550 --> 18:30.670
其实最常见的能设置什么呢

18:30.670 --> 18:32.470
我们之前有的时候

18:32.470 --> 18:35.310
会把这个宽度的高度来设一个百分比

18:35.310 --> 18:35.950
对不对

18:35.950 --> 18:38.870
那大家都知道这个百分比是相对于谁的吗

18:39.790 --> 18:41.670
我如果这块设成50%

18:41.670 --> 18:43.390
大家觉得它是相对于谁的

18:43.790 --> 18:45.750
很多同学会说相对于它的负极

18:45.750 --> 18:46.030
对吧

18:46.030 --> 18:47.110
那肯定是相对于负极

18:47.110 --> 18:47.870
它的负极是谁

18:47.870 --> 18:48.510
rapper

18:48.630 --> 18:50.790
那你发现rapper它有一个宽度

18:50.790 --> 18:51.190
对吧

18:51.190 --> 18:52.910
那如果rapper没有宽度呢

18:52.910 --> 18:54.350
它会相对于谁呢

18:54.350 --> 18:55.390
大家可以再思考一下

18:55.390 --> 18:56.550
它会相对于谁

18:56.550 --> 18:58.030
它会相对于rapper的负极

18:58.030 --> 18:58.310
对吧

18:58.310 --> 19:01.030
rapper负极是不是这个body

19:01.030 --> 19:01.750
对吧

19:01.750 --> 19:03.630
那body它也没有宽度啊

19:04.710 --> 19:06.990
那谁到底是哪的宽度呢

19:06.990 --> 19:07.790
再接着往上找

19:07.790 --> 19:08.990
是不是HTML

19:08.990 --> 19:10.350
那HTML也没有宽度

19:10.350 --> 19:11.830
HTML是相对于谁的呀

19:12.670 --> 19:14.790
最终HTML的上级

19:14.790 --> 19:16.750
其实就是我们这个试口了

19:17.470 --> 19:18.510
HTML的上级

19:18.510 --> 19:19.430
就是我们的试口了

19:20.550 --> 19:22.870
那也就是说

19:22.870 --> 19:25.150
如果你要是写百分比的话

19:25.150 --> 19:26.830
它的这个元素

19:26.830 --> 19:27.950
它的上级

19:27.950 --> 19:30.590
上面的负极都没有

19:31.230 --> 19:33.510
都没有固定的宽度的话

19:33.510 --> 19:34.750
它的这个百分比

19:34.750 --> 19:37.070
会相对于这个试口的宽度

19:37.070 --> 19:38.390
那试口的宽度

19:38.390 --> 19:40.230
其实也是我们可以设置的

19:40.590 --> 19:43.150
如果你要不设置这个Meta标签的话

19:43.150 --> 19:44.670
它的试口的宽度

19:44.670 --> 19:46.190
是根据设备而言的

19:46.310 --> 19:47.390
那试口的宽度

19:47.390 --> 19:49.310
它有的设备是9008

19:49.310 --> 19:50.670
有的设备是1024

19:50.670 --> 19:52.910
这个是不同的设备都不一样

19:52.910 --> 19:54.150
然后我们可以看一下

19:54.150 --> 19:55.910
我们如果这个时候

19:55.910 --> 19:57.270
不设置这个Meta标签

19:57.270 --> 19:59.470
你看一下我当前这个设备

19:59.470 --> 20:00.470
这个移动端设备

20:00.470 --> 20:01.790
它的一个宽度是多少

20:02.870 --> 20:03.790
看一下我这个代贸

20:04.790 --> 20:05.630
50%

20:05.630 --> 20:06.670
50%

20:06.670 --> 20:07.830
我给它设置50%

20:07.830 --> 20:08.270
对吧

20:08.270 --> 20:10.150
然后你看它的具体的宽度呢

20:10.150 --> 20:11.190
转换成像素之后

20:11.190 --> 20:12.150
它变成408了

20:12.150 --> 20:12.510
对不对

20:13.910 --> 20:15.150
那这为什么408呢

20:16.270 --> 20:17.470
是因为这408

20:17.470 --> 20:18.310
你看算一下

20:18.310 --> 20:19.950
408乘一二多少

20:19.950 --> 20:21.030
906对不对

20:21.030 --> 20:21.550
906

20:21.550 --> 20:23.870
那为什么不是908

20:23.870 --> 20:25.670
是因为这我这块是不是有包袋

20:25.670 --> 20:26.230
对吧

20:26.230 --> 20:27.190
那还有什么

20:27.190 --> 20:28.550
我这除了包袋之外

20:28.550 --> 20:29.990
我这个包得

20:29.990 --> 20:30.990
这个包得标签

20:30.990 --> 20:32.350
它还有一个默认Majin纸

20:32.350 --> 20:33.150
看到了吗

20:33.150 --> 20:34.750
那我如果把这个默认的Majin纸

20:34.750 --> 20:35.910
给它去掉之后

20:35.910 --> 20:37.910
它是不是就是变成了908了

20:37.910 --> 20:38.590
对吧

20:38.590 --> 20:39.790
Majin变成了

20:44.110 --> 20:44.870
这样一来

20:44.870 --> 20:46.110
它就变成908了

20:46.110 --> 20:46.630
看到了吗

20:46.630 --> 20:47.590
它就变成908了

20:49.270 --> 20:49.590
那

20:50.790 --> 20:51.630
这也就是说

20:51.630 --> 20:52.430
我们这个

20:53.430 --> 20:54.150
尸口

20:54.150 --> 20:56.750
这也就是说我们如果要设施百分比的话

20:56.750 --> 20:58.150
它的一个宽度大小

20:58.150 --> 20:59.870
是根据我这个尸口来的

20:59.870 --> 21:01.030
根据我尸口来的

21:01.030 --> 21:03.030
那如果你设置这样的一个

21:03.030 --> 21:03.870
没打标签

21:03.870 --> 21:04.830
你设置了一下

21:04.830 --> 21:05.990
这样的一个尸口

21:05.990 --> 21:08.550
然后你给它固定了这个宽度

21:08.550 --> 21:09.950
就等于我设备的宽度

21:09.950 --> 21:10.470
那你看一下

21:10.470 --> 21:11.710
当前设备多宽

21:11.710 --> 21:12.950
375对不对

21:12.950 --> 21:14.110
375

21:14.110 --> 21:15.470
它并不是我那个908

21:15.470 --> 21:16.070
对不对

21:16.150 --> 21:17.270
它是375

21:17.270 --> 21:18.150
那我这回

21:18.150 --> 21:19.590
我如果要再给它

21:19.590 --> 21:20.750
保存一下

21:20.750 --> 21:22.710
刷新一下我这个页面

21:22.710 --> 21:25.070
大家觉得我这个宽度会变成多少

21:25.070 --> 21:26.790
是不是应该是我设备的一半了

21:26.790 --> 21:27.110
对吧

21:27.110 --> 21:27.830
我刷新一下

21:27.830 --> 21:29.950
你看这回它是不是变成设备的一半了

21:31.950 --> 21:32.670
在这里

21:32.670 --> 21:33.870
Rapper的demo

21:33.870 --> 21:34.910
你看它的一个宽度

21:34.910 --> 21:37.190
是不是变成185.5了

21:37.190 --> 21:37.470
对吧

21:37.470 --> 21:38.910
185.5了吧

21:41.030 --> 21:42.590
这是不是有

21:42.590 --> 21:45.590
这回大家是不是就能理解我这个尸口

21:45.630 --> 21:47.750
它到底是什么了

21:47.750 --> 21:49.110
其实我们所说的尸口

21:49.110 --> 21:52.710
就是你能看到的这个页面的一个大小

21:52.710 --> 21:53.390
能理解吧

21:53.390 --> 21:55.110
你能看到的页面的大小

21:57.540 --> 21:58.780
明白吧

21:58.780 --> 21:59.180
ok

21:59.180 --> 22:00.660
那除了这个之外

22:00.660 --> 22:02.460
大家有同学可能还会发现

22:02.460 --> 22:04.180
我后面还有一个属性

22:04.180 --> 22:04.740
对不对

22:04.740 --> 22:06.020
这个Initial Skill

22:06.020 --> 22:07.020
那Initial Skill

22:07.020 --> 22:07.740
字面上意思

22:07.740 --> 22:09.900
它是初始化的一个缩放比

22:09.900 --> 22:10.700
对吧

22:10.700 --> 22:11.700
那我设计1.0

22:11.700 --> 22:13.100
代表不缩放

22:13.100 --> 22:14.460
那这个Initial Skill

22:14.460 --> 22:16.420
它是针对于什么呢

22:16.420 --> 22:18.980
也是针对于我这个尸口颜的

22:18.980 --> 22:21.260
你设置这个Initial Skill等于1

22:21.260 --> 22:23.780
和我设置这个Wise等于DeviceWise

22:23.780 --> 22:25.620
其实是一样的一个效果

22:25.620 --> 22:26.340
你刷新一下

22:26.340 --> 22:27.420
它还是一样的

22:27.420 --> 22:29.420
然后你再看一下我这个宽度

22:29.420 --> 22:31.220
它还是185.5

22:31.220 --> 22:32.820
那为什么我会新两个呢

22:32.820 --> 22:35.180
就是因为它俩的一个兼容性的一个问题

22:35.180 --> 22:37.420
兼容性的一个问题

22:37.420 --> 22:39.380
Wise等于DeviceWise

22:39.380 --> 22:42.140
这个属性

22:42.140 --> 22:44.900
它在iPhone和iPad上

22:44.980 --> 22:47.100
它的横数平的一个宽度

22:47.100 --> 22:48.540
它都是一样的

22:48.540 --> 22:49.540
那这样一来

22:49.540 --> 22:51.300
是不是它就不能

22:51.300 --> 22:54.500
不能自动的去更改我这个CiCi像素了

22:54.500 --> 22:54.900
对不对

22:54.900 --> 22:55.740
我的尸口大小

22:55.740 --> 22:58.100
它又不能自动的去给我更改了

22:58.100 --> 23:00.460
那我们为什么会说在这个iPhone

23:00.460 --> 23:01.500
我来写一下

23:02.740 --> 23:03.260
在iPhone

23:04.420 --> 23:05.500
这个DeviceWise

23:05.500 --> 23:07.060
我都把它写了嘛

23:07.060 --> 23:11.700
Wise等于Device和Wise

23:11.700 --> 23:14.420
它是在iPhone或者iPad上

23:17.840 --> 23:22.000
或者iPad上

23:22.000 --> 23:26.260
横数平的时候

23:26.260 --> 23:27.780
横数平的宽度

23:27.780 --> 23:29.980
横数平的宽度

23:29.980 --> 23:31.780
它都等于

23:31.780 --> 23:38.280
数平时候的宽度

23:38.280 --> 23:41.360
数平时候的宽度

23:41.360 --> 23:42.240
那我们想一下

23:42.240 --> 23:44.480
我如果把我这个手机

23:44.480 --> 23:46.080
横过来

23:46.080 --> 23:49.400
我是不是就希望我的页面横向宽度变大了

23:49.400 --> 23:49.720
对吧

23:49.720 --> 23:51.000
横向宽度变大了

23:51.000 --> 23:53.400
但是你在iPhoneiPad上的时候

23:53.400 --> 23:55.080
如果用这个Device

23:55.080 --> 23:56.840
DeviceWise的话

23:56.840 --> 24:01.240
它就不会去改变你这个

24:01.240 --> 24:03.440
页面的一个宽度和高度

24:03.440 --> 24:05.400
页面这个尸口的一个宽度和高度

24:05.400 --> 24:06.520
尸口的宽度和高度

24:06.520 --> 24:10.640
还是这个数平的时候的宽度和高度

24:10.640 --> 24:11.440
那这样一来

24:11.440 --> 24:15.160
是不是还是没有解决我们这个

24:15.160 --> 24:19.000
不同的设备

24:19.000 --> 24:20.240
它的一个

24:20.240 --> 24:21.440
不能说不同的设备

24:21.440 --> 24:23.320
因为我当前是用相等的一个设备

24:23.320 --> 24:24.080
都是iPhone

24:24.080 --> 24:24.520
对吧

24:24.560 --> 24:26.960
只不过横数平的一个问题

24:26.960 --> 24:27.800
那这样的话

24:27.800 --> 24:29.600
我们还是一样的用户体验

24:29.600 --> 24:30.720
效果不是很好

24:30.720 --> 24:32.600
对不对

24:32.600 --> 24:34.920
我就希望当它屏幕宽的时候

24:34.920 --> 24:37.320
我让它展示宽一点的内容

24:37.320 --> 24:38.480
多一点内容

24:38.480 --> 24:39.360
屏幕窄的时候

24:39.360 --> 24:40.880
让它展示少一点内容

24:40.880 --> 24:43.000
对不对

24:43.000 --> 24:44.120
那这样

24:44.120 --> 24:46.320
这就有这么一个问题

24:46.320 --> 24:49.040
那initial skill

24:49.040 --> 24:50.640
那有同学可能会问我

24:50.640 --> 24:53.200
那我直接写initial skill不就好了吗

24:53.200 --> 24:54.400
为什么我还要写

24:54.400 --> 24:55.880
为什么

24:55.880 --> 24:58.160
initial skill

24:58.160 --> 24:59.360
S,A,R,E

24:59.360 --> 25:00.840
它等于一点凉的时候

25:00.840 --> 25:01.920
它有一个问题

25:01.920 --> 25:04.360
它这回不是在iPhone上了

25:04.360 --> 25:11.480
它是在Windows系统的手机上面

25:11.480 --> 25:16.240
它的Windows系统的手机里面的iE浏览器上面

25:16.240 --> 25:18.960
还是iE浏览器

25:18.960 --> 25:20.480
对于iE浏览器

25:20.480 --> 25:22.760
它的这个横数平

25:22.800 --> 25:24.080
这些

25:24.080 --> 25:25.640
横数平的宽度

25:25.640 --> 25:28.520
它又等于又有这样的一个问题了

25:28.520 --> 25:32.840
在Windows系统的手机上面的iE浏览器上

25:32.840 --> 25:34.440
它的横数平的宽度

25:34.440 --> 25:36.840
也等于数平时候的宽度

25:36.840 --> 25:38.760
也不能自适应

25:38.760 --> 25:39.840
也不能自适应

25:39.840 --> 25:45.040
不能自适应的问题

25:45.040 --> 25:47.360
不能自适应的问题

25:47.360 --> 25:48.600
那

25:48.600 --> 25:50.560
他们俩我们一起写在一起

25:50.560 --> 25:51.480
就是因为

25:51.480 --> 25:53.240
我们这个WiseLine的WiseLine

25:53.240 --> 25:56.000
它可以解决这个Windows手机上iE浏览器

25:56.000 --> 25:57.440
这个横数平的一个问题

25:57.440 --> 25:58.720
然后以Initial Skill

25:58.720 --> 26:00.720
它可以解决iPhone或者iPad

26:00.720 --> 26:03.400
在横数平的这个问题

26:03.400 --> 26:05.240
那它俩一起写在一起

26:05.240 --> 26:06.440
它俩一起写

26:06.440 --> 26:08.560
就能把这两个问题全部都解决

26:08.560 --> 26:09.800
就可以兼容

26:09.800 --> 26:11.600
自适用我们所有的设备了

26:11.600 --> 26:12.440
可以吧

26:12.440 --> 26:13.600
不管是横数平

26:13.600 --> 26:15.280
还是我们设备的种类

26:15.280 --> 26:17.360
它就可以兼容所有的设备了

26:18.360 --> 26:20.560
那这个就是我们这个Meta标签

26:20.560 --> 26:23.880
Meta标签的这个视口

26:23.880 --> 26:25.160
Meta标签的视口

26:26.240 --> 26:27.280
然后我们再来说一下

26:27.280 --> 26:28.800
这个视口除了这个之外

26:28.800 --> 26:30.160
我们还可以设置什么呢

26:30.160 --> 26:32.720
我们还可以设置这个UserSkillable

26:32.720 --> 26:35.400
UserSkillable代表的是用户是否

26:35.400 --> 26:36.880
是否允许用户缩放

26:36.880 --> 26:38.280
是否允许用户缩放

26:38.280 --> 26:40.120
我们可以看一下我们这个页面

26:40.120 --> 26:40.880
当前这个页面

26:40.880 --> 26:41.840
我双击一下

26:42.840 --> 26:44.720
好像现在应该是

26:45.960 --> 26:47.040
包屎对吧

26:48.360 --> 26:50.640
我想调解一下

26:51.960 --> 26:53.000
现在双击包屎

26:53.000 --> 26:54.160
但一般来说

26:54.160 --> 26:57.480
如果你这个文字它小

26:57.480 --> 26:59.320
变特别小的时候

26:59.320 --> 27:00.920
你双击的话

27:00.920 --> 27:02.320
它会给你放大

27:02.320 --> 27:03.360
它会给你放大

27:03.360 --> 27:04.560
这个页面会给你放大

27:04.560 --> 27:07.360
然后让你看清它里面的一个内容

27:07.360 --> 27:10.360
那如果我们不希望

27:10.360 --> 27:13.600
让用户手动的去缩放

27:13.600 --> 27:15.560
去让它放大或者缩小的话

27:15.560 --> 27:17.320
我们就可以设置这个属性

27:17.400 --> 27:18.800
叫UserSkillable

27:18.800 --> 27:20.000
等于一个node就可以了

27:21.120 --> 27:22.840
代表的是不允许用户缩放

27:22.840 --> 27:24.360
大家可以这样来看

27:24.360 --> 27:26.760
我可以怎么来给大家来设置一下呢

27:29.880 --> 27:31.680
这里来写点文字吧

27:31.680 --> 27:33.880
我看我写点文字的好包屎啊

27:33.880 --> 27:34.560
刷新一下

27:35.760 --> 27:36.680
跑这来了对吧

27:45.510 --> 27:48.340
这样吧

27:48.340 --> 27:48.820
这样吧

27:48.820 --> 27:50.940
我刷新

27:50.940 --> 27:53.260
然后我给它放大一点

27:53.300 --> 27:54.180
可以吧

27:54.180 --> 27:56.180
把它写固定的三麦相处

27:58.690 --> 27:59.170
刷新

28:00.570 --> 28:01.610
然后大家可以看一下

28:01.610 --> 28:02.730
现在默认啊

28:02.730 --> 28:04.650
我这默认它现在是不是就可以

28:04.650 --> 28:06.770
这个默认就已经够大了

28:06.770 --> 28:07.010
对吧

28:07.010 --> 28:07.970
默认就已经够大了

28:09.770 --> 28:10.330
那这样

28:10.330 --> 28:12.930
我把这个下面这块先给它删掉

28:12.930 --> 28:14.970
因为这块我是不是给它设置了这个

28:16.250 --> 28:19.730
页面的一个这个尸口的一个大小

28:19.730 --> 28:21.490
然后它会根据我这个尸口的大小

28:21.490 --> 28:23.130
进行调节我这个相思

28:23.130 --> 28:24.050
在相处值

28:24.050 --> 28:24.370
对吧

28:25.130 --> 28:25.850
那你看一下

28:25.850 --> 28:27.410
我如果不加它的时候

28:27.410 --> 28:28.890
然后这回有双击

28:28.890 --> 28:29.970
你看我双击的时候

28:29.970 --> 28:31.570
它是不是会放大或者缩小

28:31.570 --> 28:32.650
看到了吗

28:32.650 --> 28:33.490
可以吧

28:33.490 --> 28:35.930
那如果你不希望它这样双击

28:35.930 --> 28:38.530
不希望它有这个双击操作的话

28:38.530 --> 28:41.090
我们就可以给它加上这个属性

28:41.090 --> 28:42.370
叫这个优质的skillbow

28:44.370 --> 28:45.290
等一等

28:45.290 --> 28:47.290
然后这个我们来看一下刷新一下

28:47.290 --> 28:49.610
我们这回你看我怎么刷新

28:49.610 --> 28:49.810
哎呀

28:49.810 --> 28:50.610
我现在刷新啊

28:50.610 --> 28:51.810
然后我怎么双击

28:51.810 --> 28:53.490
它都不会给你放大了吧

28:53.490 --> 28:53.810
对吧

28:53.850 --> 28:54.890
它都不会给你放大了

28:57.410 --> 28:59.010
这就是我们那个尸口

28:59.810 --> 29:02.610
不让这个用户放大缩小的一个操作

29:02.610 --> 29:03.490
然后一般来说

29:03.490 --> 29:07.770
我们会把这这个尸口的大小给它固定好了

29:07.770 --> 29:09.610
然后再给它加一个优质

29:09.610 --> 29:10.290
skillbow

29:14.050 --> 29:16.050
c a r a b r e

29:16.050 --> 29:16.610
等于呢

29:17.650 --> 29:18.370
这样一来

29:20.010 --> 29:22.650
我们就可以把这个设备给它固定死了

29:22.650 --> 29:23.210
那你解释吧

29:23.210 --> 29:24.410
设备给它固定死了

29:24.410 --> 29:26.970
就不希望让用户横向的去拖动

29:26.970 --> 29:30.730
并且也不希望让用户去放大缩小的一个操作了

29:30.730 --> 29:30.970
对吧

29:32.850 --> 29:33.250
这样的话

29:33.250 --> 29:36.610
用户去体验我这个移动端的一个网页的时候

29:36.610 --> 29:40.090
会更加的方便

29:40.090 --> 29:41.490
也看上来更加爽

29:41.490 --> 29:41.770
对不对

29:44.330 --> 29:46.010
然后我这块看一下这句话啊

29:46.010 --> 29:47.330
我这块这句话

29:47.330 --> 29:51.170
CSI像素会根据设备像素进行一个计算

29:51.170 --> 29:52.890
这个大家应该没有什么问题

29:52.890 --> 29:53.850
对吧

29:54.770 --> 29:58.170
大家都觉得一CSI像素都能有一个设备像素

29:58.170 --> 29:59.050
这是默认的

29:59.050 --> 29:59.410
对不对

29:59.410 --> 29:59.930
默认的

30:01.650 --> 30:05.170
那如何来调节这个像素

30:05.170 --> 30:08.170
CSI像素和设备的一个像素的一个关系呢

30:08.170 --> 30:09.810
我们就可以通过这个尸口

30:10.250 --> 30:10.850
通过尸口

30:11.930 --> 30:12.530
来调节

30:13.810 --> 30:16.130
我们设置这个尸口的一个宽度之后

30:16.130 --> 30:17.730
设置尸口宽度等于我这个

30:19.090 --> 30:20.450
设备的一个宽度

30:20.450 --> 30:23.490
它就会拿到你这个设备的宽度之后

30:23.530 --> 30:25.610
然后根据设备的一个

30:25.610 --> 30:28.370
根据设备的分辨率

30:30.290 --> 30:32.930
分辨率加上DPI

30:33.770 --> 30:36.450
根据设备分辨率DPI值对吧

30:37.930 --> 30:41.770
来计算我CSI像素

30:43.490 --> 30:49.410
像素真正展现的大小对吧

30:51.250 --> 30:52.490
要这个啊

30:52.490 --> 30:55.250
然后如果你这块没有听懂的话

30:55.250 --> 30:56.210
如果这块没有听懂

30:56.210 --> 30:56.850
不要紧啊

30:56.850 --> 30:59.290
你只需要对于现在来说

30:59.290 --> 31:00.810
你只需要知道

31:00.810 --> 31:05.210
我们这个Meta标签设置这个viewport这个尸口大小

31:05.210 --> 31:08.170
它就是用来设置适配

31:08.170 --> 31:12.570
它就是用来适配各种不同分辨率的设备的

31:12.570 --> 31:13.290
那一些吧

31:13.290 --> 31:15.450
适配各种不同分辨率的设备的

31:17.210 --> 31:19.170
然后我们在移动当开发的时候

31:19.210 --> 31:21.650
最好必须啊

31:21.650 --> 31:22.530
不能说最好

31:22.530 --> 31:25.450
我必须要求大家必须要有这么一个标签

31:25.450 --> 31:26.410
可以吧

31:26.410 --> 31:27.970
然后可能大家还会发现

31:27.970 --> 31:30.210
我这里还有其他的一些属性对吧

31:30.210 --> 31:32.050
像这个Main Name Scale

31:32.050 --> 31:33.250
还有Max Scale

31:33.250 --> 31:35.650
其实他们说的都是这个缩放的一个问题啊

31:35.650 --> 31:37.610
缩放的缩放的一个问题

31:37.610 --> 31:39.770
那你设置这个User Scale Board的话

31:39.770 --> 31:41.770
这两个其实你可以不用设置了啊

31:43.050 --> 31:44.890
这两个其实可以不用设置了

31:44.890 --> 31:46.250
这个了解一下就可以了

31:46.250 --> 31:47.290
一个是最大的缩放笔

31:47.290 --> 31:48.330
一个是小缩放笔

31:48.330 --> 31:49.290
好吧

31:49.290 --> 31:50.530
那这就是我们试考啊

31:50.530 --> 31:54.530
然后接下来我们就来进入到我们重点

31:54.530 --> 31:58.490
就是我们如何来实现一个想是不决

31:59.730 --> 32:01.410
那我们实现想是不决啊

32:01.410 --> 32:04.450
有从需要从这么四个方面来实现

32:04.450 --> 32:07.850
第一个我们需要用到这个流体望格来布局

32:08.890 --> 32:11.210
那流体望格是什么意思呢

32:11.210 --> 32:14.290
流体大家都能想到这个水对不对

32:14.290 --> 32:16.490
那我们可以想一下水有什么特点

32:16.490 --> 32:17.850
它是流动的对吧

32:18.410 --> 32:19.330
水可以流动

32:19.330 --> 32:22.570
你可以水可以根据不同的容器

32:22.570 --> 32:26.050
不同的容器来进行一个伸缩对不对

32:26.050 --> 32:26.970
对吧

32:26.970 --> 32:28.930
那我们这个流体网格也是一样的啊

32:28.930 --> 32:30.410
流体网格也是一样的

32:30.410 --> 32:31.650
流体网格说的是什么

32:31.650 --> 32:35.690
就是希望大家就是在布局的时候

32:35.690 --> 32:37.890
在布局我们每个元素的时候

32:37.890 --> 32:41.290
给它设置的这个大小不要固定

32:41.290 --> 32:43.490
你可以给它设置一个百分比

32:43.490 --> 32:47.210
你也可以给它用这个弹性核四来布局

32:47.210 --> 32:48.050
可以吧

32:48.050 --> 32:50.970
你还可以用flow的浮动让它布局

32:50.970 --> 32:51.770
好吧

32:51.770 --> 32:54.290
就是可以让它进行一个伸缩变换啊

32:54.290 --> 32:57.130
其实就是可以让这个元素进行一个伸缩变捩

32:58.250 --> 32:59.210
这个了解一下

32:59.210 --> 33:00.130
可以吧

33:00.130 --> 33:02.610
然后第二方面就是我们在

33:02.610 --> 33:04.250
我们可以用弹性图片

33:04.250 --> 33:05.290
什么是弹性图片

33:05.290 --> 33:10.690
其实所谓弹性图片也是图片的框高不固定

33:10.690 --> 33:14.250
你也需要给它设置一个百分比

33:14.290 --> 33:14.970
那理解吧

33:14.970 --> 33:17.450
给它框高用百分比的一个形式啊

33:17.450 --> 33:18.490
大家不多说了

33:18.490 --> 33:22.890
那在显扬视网也开发里面最重要的

33:22.890 --> 33:24.290
也是最关键的一步

33:24.290 --> 33:26.330
其实就是用这个媒体查询

33:26.330 --> 33:27.570
用媒体查询

33:27.570 --> 33:29.530
媒体查询它的一个目的就是

33:29.530 --> 33:32.730
我们这个显扬视网也开发的一个目的

33:32.730 --> 33:35.130
它就是媒体查询就是为了让页面

33:35.130 --> 33:38.130
在不同的中端上面展示的效果

33:38.130 --> 33:39.370
是差不多的

33:39.370 --> 33:42.290
但这个展示的效果并不是说我们这个样式

33:42.290 --> 33:45.050
就完全全相同的

33:45.050 --> 33:47.450
并不是说我们样式要完全全相同啊

33:47.450 --> 33:49.450
而是说我们希望什么呢

33:49.450 --> 33:51.650
希望在不同的设备上面

33:51.650 --> 33:55.010
它都有一个比较合适的展示

33:55.010 --> 33:56.050
能理解吧

33:56.050 --> 33:57.490
在不同的设备上面

33:57.490 --> 34:00.850
在不同的设备

34:00.850 --> 34:02.770
这个不同的设备

34:02.770 --> 34:04.770
它是有这个大小不同

34:04.770 --> 34:05.250
对吧

34:05.250 --> 34:07.690
可能是大小不同

34:07.690 --> 34:13.020
也可能是分辨率不同

34:13.020 --> 34:15.900
在不同的设备上面

34:15.900 --> 34:17.740
展示的

34:20.340 --> 34:21.740
上面

34:21.740 --> 34:25.780
展示的

34:25.780 --> 34:28.460
在不同的设备上面

34:28.460 --> 34:31.460
均展示合适的一个页面

34:31.460 --> 34:35.060
展示合适的页面

34:35.060 --> 34:36.580
那这个合适的页面

34:36.580 --> 34:39.220
其实这就是我们这个

34:39.220 --> 34:42.820
显示网也设计的那一部分了

34:42.820 --> 34:45.260
那这个设计工作

34:45.260 --> 34:47.740
一般是由美工

34:47.740 --> 34:48.980
一般这个设计工作

34:48.980 --> 34:53.380
一般是由美工设计工作

34:53.380 --> 34:59.820
由产品经理或者美工产品经理

34:59.820 --> 35:06.340
或者美工来出

35:06.340 --> 35:08.740
我们只需要根据它的一个设计稿

35:08.740 --> 35:10.420
来进行一个实现就行了

35:10.420 --> 35:10.900
可以吧

35:10.900 --> 35:13.660
我们进行一个实现就行了

35:13.660 --> 35:15.900
那一会儿我们会详细的

35:15.900 --> 35:19.700
教给大家如何来使用这个媒体查询

35:19.700 --> 35:21.100
然后在媒体查询的时候

35:21.100 --> 35:24.540
你可能还会接触到一个

35:24.540 --> 35:27.660
一个关键词叫这个主要断点

35:27.660 --> 35:29.980
这个主要断点说的其实就是这个设备的

35:29.980 --> 35:31.300
宽度的临界点

35:31.300 --> 35:32.820
设备宽度的临界点

35:32.820 --> 35:34.580
那这个临界点有什么用呢

35:34.580 --> 35:35.620
我们刚才是不是说

35:35.620 --> 35:37.060
在不同的设备上面

35:37.060 --> 35:39.140
均展示合适的一个页面

35:39.140 --> 35:39.780
对不对

35:39.780 --> 35:41.100
展示合适的页面

35:41.100 --> 35:42.500
那这个页面包括什么

35:42.500 --> 35:43.620
包括布局对吧

35:43.620 --> 35:46.660
也包括一个样式对不对

35:46.660 --> 35:50.660
那我们在不同的设备上面展示

35:50.660 --> 35:53.740
那我怎么区分不同的设备呢

35:53.740 --> 35:56.260
那不同的设备最大的一个区别

35:56.260 --> 35:57.740
刚才也说了最大的一个区别

35:57.740 --> 36:01.550
就是大小的一个区别对吧

36:01.550 --> 36:02.710
那这个大小的区别

36:02.710 --> 36:05.630
其实也相当于这个宽度的一个区别

36:05.630 --> 36:06.950
宽度

36:08.150 --> 36:09.750
不同

36:09.790 --> 36:12.030
那我们就可以根据这个宽度

36:12.030 --> 36:16.550
这个宽度来进行相应的一个适配

36:16.550 --> 36:30.000
就是由根据不同宽度展示不同的样式

36:30.000 --> 36:30.400
可以吧

36:30.400 --> 36:32.640
展示不同样式

36:32.640 --> 36:34.480
那我说这个根据不同的宽度

36:34.480 --> 36:35.360
展示不同样式

36:35.360 --> 36:36.360
可能有同学会说

36:36.360 --> 36:38.720
老实说我直接用GS不好吗

36:38.720 --> 36:39.920
GS不也可以吗

36:39.920 --> 36:40.920
GS也是可以的

36:40.920 --> 36:42.200
完全是可以的

36:42.200 --> 36:46.840
但GS有一个不好的地方是什么呢

36:46.840 --> 36:49.640
Jascript代码一般来说

36:49.640 --> 36:53.800
是不是应该是同步执行的

36:53.800 --> 36:54.120
对吧

36:54.120 --> 36:55.240
同步执行的

36:55.240 --> 36:59.040
是大家都觉得它是一个单线程的

36:59.040 --> 36:59.320
对吧

36:59.320 --> 37:00.520
单线程的

37:00.520 --> 37:02.760
单说单线程并不准确

37:02.760 --> 37:03.960
并不准确

37:03.960 --> 37:06.400
因为我们可以进行一些事件监听

37:06.400 --> 37:06.680
对不对

37:06.680 --> 37:09.560
事件监听它是不是就出现多线程

37:09.560 --> 37:10.480
对吧

37:10.480 --> 37:11.680
那可能有同学就会说

37:11.680 --> 37:15.440
老实那我直接用GS里面的那个事件监听

37:15.440 --> 37:18.600
我监听一下它的宽度变化不就好了吗

37:18.600 --> 37:19.760
这也是可以的

37:19.760 --> 37:23.240
但是GS代码它会有一个性能的一个问题

37:23.240 --> 37:23.720
对吧

37:23.720 --> 37:25.640
性能的问题

37:25.640 --> 37:27.000
而且这样的话

37:27.000 --> 37:30.280
你这个你在GS里面操作

37:30.280 --> 37:32.720
你不仅代码偏多

37:32.720 --> 37:35.520
这个它加载的速度变慢

37:35.520 --> 37:37.200
而且还会有一个什么问题呢

37:37.200 --> 37:39.320
就是在你监听的一个过程当中

37:39.320 --> 37:43.120
可能会对你这个页面有一定的影响

37:43.120 --> 37:43.520
对吧

37:43.520 --> 37:44.960
页面有一定的影响

37:44.960 --> 37:46.760
那所以啊

37:46.760 --> 37:48.880
我们这个小事网页开发

37:48.880 --> 37:54.560
它并不主要是在这个GS上面进行一个操作

37:54.560 --> 37:55.720
小事网页开发

37:55.720 --> 38:05.760
它最主要其实在CSS上面的小样式

38:05.760 --> 38:08.520
网页开发

38:08.520 --> 38:13.600
主要是在CSS

38:13.640 --> 38:19.940
样式上面进行操作

38:19.940 --> 38:21.580
但是这个操作啊

38:21.580 --> 38:23.300
是在CSS代码里的

38:23.300 --> 38:25.180
并不是在GS代码里了

38:25.180 --> 38:26.820
大家都知道CSS代码

38:26.820 --> 38:28.700
它是一个异部加载的一个过程

38:28.700 --> 38:29.300
对吧

38:29.300 --> 38:30.580
异部加载的一个过程

38:30.580 --> 38:34.340
那这样的话是不是就比我们在GS里面去操作

38:34.340 --> 38:36.900
这个页面更加友好一点了

38:36.900 --> 38:37.340
对吧

38:37.340 --> 38:38.420
更好一点了

38:38.420 --> 38:40.980
那也提升了一些性能问题

38:40.980 --> 38:42.620
对吧

38:42.620 --> 38:45.340
那这就是我们这个小事网页开发

38:45.380 --> 38:48.740
然后我们接下来就来详细的来说一下媒体查询

38:48.740 --> 38:50.020
那在说媒体查询之前

38:50.020 --> 38:52.460
我们还是再来说一下这个主要断点

38:52.460 --> 38:56.820
可以根据这个图来了解一下这个主要断点

38:56.820 --> 38:58.100
主要断点说的什么呢

38:58.100 --> 38:59.780
其实就是一个临界点

38:59.780 --> 39:01.940
临界点

39:01.940 --> 39:05.700
就是在这个临界点

39:05.700 --> 39:07.660
两边

39:07.660 --> 39:11.860
展现的我们这个页面的一个效果是不一样的

39:11.860 --> 39:13.820
展现的我们的效果是不一样的

39:13.820 --> 39:15.140
大家可以看一下这个图

39:15.140 --> 39:17.420
你看在这个临界点的两边

39:17.420 --> 39:20.380
它一个这两边的效果是不一样

39:20.380 --> 39:21.740
一个是数着的对吧

39:21.740 --> 39:22.420
ABC

39:22.420 --> 39:23.700
一个是ABC

39:23.700 --> 39:25.260
然后并且这个图片

39:25.260 --> 39:27.460
这块这面是有两个

39:27.460 --> 39:29.420
这张是有一个对吧

39:29.420 --> 39:31.940
而且下面这块有两个区域

39:31.940 --> 39:35.540
下面左边这个有一个区域对吧

39:35.540 --> 39:37.700
这就是一个临界点

39:37.700 --> 39:39.140
然后这边也是一样的

39:39.140 --> 39:39.820
不多说了

39:39.820 --> 39:40.980
好吧

39:40.980 --> 39:41.980
不多说了

39:41.980 --> 39:44.540
然后我们接下来来说一下这个媒体查询

39:44.700 --> 39:47.260
媒体查询怎么来用

39:47.260 --> 39:49.740
然后先简单了解一下什么是媒体查询

39:49.740 --> 39:52.020
媒体查询其实就是向不同的设备

39:52.020 --> 39:54.020
提供不同的样式的

39:54.020 --> 39:57.460
不同样式的一种方式

39:57.460 --> 39:59.220
然后它为每一种类型的用户

39:59.220 --> 40:00.620
提供了最佳的体验

40:00.620 --> 40:02.260
那这个

40:02.260 --> 40:03.380
它到底怎么来用

40:03.380 --> 40:04.260
它是不是没有说

40:04.260 --> 40:06.700
它只是说这个媒体查询是什么

40:06.700 --> 40:08.060
大家一定要知道

40:08.060 --> 40:10.100
它先知道它是什么

40:10.100 --> 40:12.460
然后我们再说一下它怎么来用

40:12.460 --> 40:15.540
那媒体查询它并不是我们CSS3里面

40:15.540 --> 40:17.100
新提出的一个

40:19.100 --> 40:20.540
一个样式

40:20.540 --> 40:22.460
并不是我们新提出的一个概念

40:22.460 --> 40:23.620
不能说样式是概念

40:25.060 --> 40:28.220
并不是CSS3里面提出的一个概念

40:28.220 --> 40:32.780
那它早在CSS2里面就已经有了这个概念了

40:32.780 --> 40:33.620
只不过

40:33.620 --> 40:35.140
CSS2里面

40:35.140 --> 40:36.100
它的这个概念

40:37.420 --> 40:38.940
只有一个媒体类型

40:38.940 --> 40:41.540
那这个媒体类型针对的有几种

40:41.620 --> 40:43.060
大家可以看一下

40:43.060 --> 40:44.980
媒体类型大体有三种

40:44.980 --> 40:45.700
一个是

40:46.540 --> 40:47.500
这个Screen

40:47.500 --> 40:49.020
Screen这一行

40:49.020 --> 40:52.820
代表是在电脑屏幕

40:52.820 --> 40:54.460
手机屏幕

40:54.460 --> 40:55.460
手机屏幕

40:55.460 --> 40:57.620
这些设备上面的时候

40:57.620 --> 40:59.140
在看我们这个页面的时候

40:59.140 --> 41:00.900
是一般用的是这个类型

41:00.900 --> 41:02.380
Screen这个类型

41:02.380 --> 41:05.020
那如果在打印机或者打淤蓝的时候

41:05.020 --> 41:06.980
我们一般用Print这个类型

41:07.980 --> 41:09.060
那是类型的不同

41:10.060 --> 41:12.620
然后我们一般最常用的还是Screen

41:12.620 --> 41:13.860
最常用的还是Screen

41:13.860 --> 41:15.380
这个了解一下就可以

41:15.380 --> 41:17.900
然后这个媒体类型

41:17.900 --> 41:20.660
早在这个CSS2里面就已经有了

41:21.300 --> 41:23.020
那个时候我们只能对这个

41:23.020 --> 41:24.780
媒体类型进行一个操作

41:25.500 --> 41:27.020
但是在CSS3里面

41:27.020 --> 41:28.220
它对我们这个

41:29.500 --> 41:31.260
它对我们这个媒体查询

41:31.260 --> 41:34.180
做了一个进步的一个优化

41:34.180 --> 41:35.620
进步的一个增强

41:35.620 --> 41:37.180
它增强了哪些呢

41:37.180 --> 41:39.020
它除了这个媒体类型之外

41:39.140 --> 41:41.460
它还有这个CSS1个属性

41:41.460 --> 41:43.340
那我们管它叫媒体特性

41:43.340 --> 41:44.380
媒体特性

41:44.380 --> 41:46.380
也就是像这个媒体特性

41:46.380 --> 41:47.260
您可以设置什么呢

41:47.260 --> 41:48.580
您可以设置我们刚才所说的

41:48.580 --> 41:49.620
那个主要断点

41:49.620 --> 41:50.740
主要断点

41:50.740 --> 41:51.380
您可以看一下

41:51.380 --> 41:52.980
这个媒体特性都有哪些

41:53.580 --> 41:56.660
它里面我们最常见的是这个宽度和高度

41:56.660 --> 41:57.740
还有这个最大宽度

41:57.740 --> 41:59.540
最大宽度

41:59.540 --> 42:00.340
最小宽度

42:00.340 --> 42:01.020
最大高度

42:01.020 --> 42:02.020
最小高度

42:05.020 --> 42:07.180
那我们这个废话就不多说了

42:07.220 --> 42:09.060
这个图大家自己回去看一下

42:09.060 --> 42:09.500
就可以了

42:09.500 --> 42:10.180
好吧

42:10.180 --> 42:12.220
这个表哥回去自己看一下

42:12.220 --> 42:13.980
然后我们现在告诉大家

42:13.980 --> 42:15.740
怎么来用这个媒体查询

42:16.380 --> 42:17.460
特别简单

42:17.460 --> 42:19.620
我们CSS样式的引入方式

42:19.620 --> 42:20.420
是不是有三种

42:20.420 --> 42:20.900
对吧

42:20.900 --> 42:22.820
那我们媒体查询的引入方式

42:22.820 --> 42:24.100
也有三种

42:24.100 --> 42:24.940
哪三种呢

42:24.940 --> 42:27.220
跟我们CSS样式是一样的

42:27.220 --> 42:30.340
CSS样式在引入的时候

42:30.340 --> 42:33.260
我们是不是有两种是外不引入

42:33.260 --> 42:33.580
对吧

42:33.580 --> 42:34.660
两种外不引入

42:34.660 --> 42:36.580
一个是另一个标签来引入

42:36.620 --> 42:39.220
例如我现在需要引入一个CSS案件

42:39.220 --> 42:41.100
就是这个index.css

42:42.340 --> 42:44.060
index.css

42:44.060 --> 42:45.740
我把它写进去

42:45.740 --> 42:47.700
但是我不希望它立即作用

42:47.700 --> 42:49.220
我希望它什么时候作用呢

42:49.220 --> 42:51.780
我希望它的宽度

42:51.780 --> 42:53.260
当我这个设备

42:53.260 --> 42:58.700
它的一个宽度在这个375相速之内

42:58.700 --> 42:59.780
我让它作用

42:59.780 --> 43:01.380
如果它要是大于375

43:01.380 --> 43:03.180
我就不让它作用这个样式了

43:03.180 --> 43:04.940
那我就可以给它再来一个属性

43:04.940 --> 43:06.100
叫media

43:06.100 --> 43:08.100
这个媒体查询这个属性

43:08.100 --> 43:09.460
叫media这个属性

43:09.460 --> 43:11.740
然后我们接下来就可以给它写这个

43:13.260 --> 43:14.740
写这个邻界点

43:14.740 --> 43:17.020
我们刚才说最大宽度是375

43:17.020 --> 43:17.740
对不对

43:17.740 --> 43:20.620
最大宽度是375的时候

43:20.620 --> 43:21.660
我让它作用

43:21.660 --> 43:24.140
如果不是375

43:24.140 --> 43:26.060
如果大于375

43:26.060 --> 43:27.180
我就不让它作用

43:27.180 --> 43:30.100
这个我们来刷新一下一面看一下

43:30.100 --> 43:32.140
好像它没有作用上是吧

43:32.140 --> 43:35.670
我们可以看一下

43:35.710 --> 43:39.030
看一下我有没有写上这块

43:39.030 --> 43:39.990
已经引入了

43:39.990 --> 43:40.310
对吧

43:40.310 --> 43:43.070
引入了375

43:43.070 --> 43:44.030
没什么问题

43:44.030 --> 43:44.470
对不对

43:46.470 --> 43:48.070
这样我看一下

43:49.070 --> 43:52.580
把它加个库号

43:52.580 --> 43:54.580
来我们刷新一下

43:54.580 --> 43:56.380
这回这回是不是作用上了

43:56.380 --> 43:57.580
然后注意一点

43:57.580 --> 43:58.860
刚才我什么没写库号

43:58.860 --> 43:59.620
它没有作用上

43:59.620 --> 44:00.100
对吧

44:00.100 --> 44:02.260
注意一点媒体特性

44:02.260 --> 44:03.380
我们管这个

44:03.380 --> 44:04.220
叫媒体特性

44:04.220 --> 44:05.260
也管它叫主要端点

44:05.260 --> 44:06.180
对吧

44:06.180 --> 44:08.940
媒体特性你必须要加库号

44:08.940 --> 44:09.380
能理解吧

44:09.380 --> 44:10.940
媒体特性必须要加库号

44:10.940 --> 44:13.700
那如果你要再想加一个媒体类型

44:13.700 --> 44:15.740
你可以在前面加媒体类型

44:15.740 --> 44:18.340
然后通过这个按的操作服

44:18.340 --> 44:19.380
来给它连接

44:19.380 --> 44:21.700
可以把按的操作服给它连接

44:21.700 --> 44:23.140
这样它俩是一个效果

44:23.140 --> 44:23.780
看到了吗

44:23.780 --> 44:24.980
那如果我给它放大

44:24.980 --> 44:27.740
你看我给它放到PC端上去

44:27.740 --> 44:29.300
给它放到PC端

44:29.300 --> 44:30.740
它是不是就没有这个钥匙了

44:30.740 --> 44:30.980
对吧

44:30.980 --> 44:32.620
没有这个钥匙了

44:32.620 --> 44:34.620
这也就是我们媒体查选的

44:34.620 --> 44:35.860
第一种引入形式

44:35.940 --> 44:37.140
第一种引入形式

44:37.140 --> 44:38.220
外部引入

44:38.220 --> 44:40.380
第一种外部引入的一个形式

44:40.380 --> 44:42.460
是通过这个link标签

44:42.460 --> 44:43.220
对吧

44:43.220 --> 44:45.820
那我们CSS里面

44:45.820 --> 44:47.500
外部引入还有什么方式

44:47.500 --> 44:48.460
是不是还有这个

44:48.460 --> 44:49.820
iTimpart的一个形式

44:49.820 --> 44:50.300
对吧

44:50.300 --> 44:51.860
iTimpart的一个形式

44:51.860 --> 44:53.260
那在我们媒体查选里面

44:53.260 --> 44:54.420
也是一样的

44:54.420 --> 44:56.300
通过iTimpart来引入一个

44:56.300 --> 44:57.420
CSS

44:57.420 --> 44:58.460
一个外部文件

44:58.460 --> 44:59.860
CSS文件

44:59.860 --> 45:02.220
那我们怎么来写这个

45:02.220 --> 45:03.420
媒体查选呢

45:03.420 --> 45:05.100
我们怎么来用这个媒体查选呢

45:05.140 --> 45:06.940
我们只需要把这个媒体查选

45:06.940 --> 45:09.900
放在我们这个CSS文件后面就可以了

45:09.900 --> 45:11.260
然后把上面这个我注释掉

45:11.260 --> 45:14.060
那它这句话和我刚才这句话

45:14.060 --> 45:15.020
它俩是一样的

45:17.260 --> 45:18.860
它俩的一个效果是一样的

45:18.860 --> 45:22.220
都是希望在这个屏幕是

45:22.220 --> 45:24.100
屏幕大小

45:24.100 --> 45:27.340
在小于375相速的设备上面

45:27.340 --> 45:29.900
我希望让它作用这个样式

45:29.900 --> 45:30.500
可以吧

45:30.500 --> 45:32.060
那这回我们来看一下刷新

45:32.060 --> 45:32.900
当前是没有的

45:32.900 --> 45:33.340
对吧

45:33.380 --> 45:35.980
我给它切换到375的那个设备上面

45:35.980 --> 45:36.900
发现有了吧

45:36.900 --> 45:37.780
这回是不是有了

45:38.780 --> 45:39.500
可以理解吧

45:40.820 --> 45:43.020
那我们是不是就可以通过这样的一个形式

45:43.020 --> 45:45.500
来写相的一个样式了

45:45.500 --> 45:45.780
对吧

45:45.780 --> 45:47.180
来写相应的一个样式了

45:48.860 --> 45:50.660
那这是外部引入的一个形式

45:50.660 --> 45:52.180
那除了外部引入之外

45:52.180 --> 45:55.140
我们还可以在这个CSS里面来引入

45:55.140 --> 45:57.100
CSS里面怎么来引入呢

45:57.100 --> 46:00.340
我们可以用关键字atmedia来引入

46:00.340 --> 46:02.340
然后atmedia后面跟着的

46:02.340 --> 46:07.300
就是媒体查询的那些值

46:07.300 --> 46:09.620
媒体查询的这些属性值

46:09.620 --> 46:10.980
第一个是媒体特性

46:10.980 --> 46:14.940
第二个是媒体类型

46:14.940 --> 46:16.060
第二是媒体特性

46:16.060 --> 46:18.180
然后它们之间用按的来连接

46:18.180 --> 46:19.860
那如果你直接写媒体特性

46:19.860 --> 46:20.660
也是可以的

46:20.660 --> 46:21.620
都是可以的

46:21.620 --> 46:23.020
然后你直接写媒体类型

46:23.020 --> 46:24.100
也是可以的

46:24.100 --> 46:24.940
都是可以的

46:27.020 --> 46:29.420
然后我们接着再往下

46:29.420 --> 46:30.420
再往下

46:30.420 --> 46:31.700
我来接着来写

46:31.780 --> 46:36.090
我希望这个最大宽度

46:36.090 --> 46:39.650
我希望最大宽度在375相速的时候

46:39.650 --> 46:41.970
作用下面的一个代码

46:41.970 --> 46:43.010
作用下面的一个样式

46:43.010 --> 46:44.010
我们就可以这样来写

46:46.210 --> 46:48.010
再写一个大过号

46:48.010 --> 46:49.610
代表是我们这个里面

46:49.610 --> 46:51.170
要写的是一个样式

46:51.170 --> 46:54.490
这个样式是在满足这个条件下的时候

46:54.490 --> 46:55.850
我们才做个作用

46:55.850 --> 46:56.570
然后我来写一个

46:56.570 --> 46:58.970
把给包袋来个颜色

46:58.970 --> 47:01.090
包袋来个color

47:01.090 --> 47:03.050
HTML和包袋吧

47:03.090 --> 47:04.210
HTML

47:04.210 --> 47:05.290
都好包袋

47:05.290 --> 47:07.530
给它宽度来个百分之八

47:10.010 --> 47:11.330
来个百分之八

47:11.330 --> 47:13.050
然后高度来个百分之八

47:17.810 --> 47:18.730
百分之八

47:18.730 --> 47:20.370
然后再来个背景颜色

47:20.370 --> 47:23.820
background.color

47:23.820 --> 47:24.860
来个红色

47:24.860 --> 47:25.860
可以吧

47:25.860 --> 47:26.940
然后我们可以看一下

47:26.940 --> 47:29.820
现在好像爆了一个错呢

47:29.820 --> 47:31.100
art media

47:31.100 --> 47:33.140
不知道这个东西

47:33.140 --> 47:35.220
我们先来看一下

47:35.220 --> 47:35.860
刷新一下

47:35.860 --> 47:36.700
好像没有作用上

47:36.700 --> 47:37.700
对吧

47:39.460 --> 47:40.700
可以看一下

47:40.700 --> 47:41.580
art media

47:41.580 --> 47:42.620
应该没有写错

47:42.620 --> 47:43.060
对吧

47:43.060 --> 47:46.620
max

47:46.620 --> 47:47.740
me di

47:47.740 --> 47:49.020
我没评错吧

47:49.020 --> 47:50.980
me di

47:50.980 --> 47:51.900
应该没有评错

47:53.860 --> 47:55.140
现在来看一下

47:55.140 --> 47:57.300
来看一下我们这个样式

47:57.300 --> 47:59.140
最大宽度是375的时候

47:59.140 --> 48:00.380
我让它作用这个样式

48:01.780 --> 48:02.620
来刷新

48:04.500 --> 48:06.460
发现没有作用上是吧

48:06.460 --> 48:09.180
我看一下是不是我这块写的有点问题

48:09.180 --> 48:09.740
感觉

48:11.060 --> 48:12.980
哪里看着这么别扭呢

48:12.980 --> 48:13.820
art media

48:15.060 --> 48:16.060
max wise

48:17.460 --> 48:18.380
最大宽度

48:18.380 --> 48:19.580
375

48:24.670 --> 48:25.670
me di

48:25.670 --> 48:26.790
我评错了吧

48:26.790 --> 48:27.070
对吧

48:27.070 --> 48:28.510
me di

48:28.510 --> 48:28.950
注意

48:28.950 --> 48:29.910
千万不要评错

48:29.910 --> 48:31.070
不要像我这样

48:31.070 --> 48:32.150
马虎了

48:32.150 --> 48:32.350
来

48:32.350 --> 48:33.430
这位是不是作用上了

48:33.430 --> 48:33.750
对吧

48:33.750 --> 48:34.350
作用上了吧

48:35.590 --> 48:36.350
这就是我们media

48:36.350 --> 48:38.830
还寻第三种引入方式

48:38.830 --> 48:39.790
就是行间

48:39.790 --> 48:41.270
这个style

48:41.270 --> 48:43.110
css样式里面引入

48:52.500 --> 48:53.780
这是这种形式的引入

48:53.780 --> 48:55.180
然后我们再接着往下

48:55.180 --> 48:56.060
再接着往下

48:59.300 --> 49:00.860
然后注意一点

49:00.860 --> 49:04.620
这个媒体查询它并不占有权重

49:04.620 --> 49:09.470
媒体查询不占用权重

49:11.150 --> 49:11.830
也就是说

49:11.830 --> 49:14.830
你把媒体查询如果写在上面的话

49:14.830 --> 49:16.790
你把媒体查询写在上面

49:16.790 --> 49:20.310
然后你下面还有一个给html的号

49:20.310 --> 49:20.950
body

49:22.630 --> 49:24.110
加了这些样式的话

49:24.110 --> 49:25.150
加了一些样式的话

49:25.150 --> 49:26.790
给它加了白光的

49:30.260 --> 49:30.780
yellow

49:32.100 --> 49:32.980
那这样的话

49:32.980 --> 49:34.060
它会作用哪个呢

49:34.060 --> 49:35.540
即使你满足这个条件

49:35.540 --> 49:36.740
它还是会作用这个

49:36.740 --> 49:37.820
因为它俩一笔

49:37.820 --> 49:39.100
它俩权重是一样的

49:39.100 --> 49:39.580
对不对

49:39.580 --> 49:41.020
它俩权重是一样的

49:41.020 --> 49:42.220
那权重一样的话

49:42.220 --> 49:43.340
它就会把后

49:43.340 --> 49:46.100
它就会通过后面的这个样式

49:46.100 --> 49:47.660
覆盖前面的样式了

49:47.700 --> 49:48.340
那理解吧

49:49.860 --> 49:51.060
然后就是这一点

49:51.060 --> 49:51.900
一定要注意

49:51.900 --> 49:52.900
一定要注意

49:52.900 --> 49:55.420
所以一般我们媒体查询在写这个

49:56.260 --> 49:58.460
在CSS里面引入的时候

49:58.460 --> 50:00.900
我们一般会把媒体查询放在最后

50:00.900 --> 50:02.140
放在最后

50:03.620 --> 50:05.140
我们放在最后的一个原因

50:05.140 --> 50:06.260
就是因为我们

50:06.260 --> 50:08.220
如果这里面写的权重

50:08.220 --> 50:11.420
跟上面权重一样大的时候

50:11.420 --> 50:13.060
它会作用下面的

50:13.060 --> 50:14.580
它会作用我们媒体查询里的

50:14.580 --> 50:16.180
并不会作用我上面的

50:16.180 --> 50:17.060
那理解吧

50:17.140 --> 50:19.100
那如果你上面的权重比我们这个

50:19.100 --> 50:21.740
媒体查询里面的这个元素的权重大的话

50:21.740 --> 50:23.860
它还是会作用上面的一个样式

50:25.380 --> 50:26.380
这个注意一点

50:26.380 --> 50:27.300
注意一下就行了

50:27.300 --> 50:27.620
好吧

50:27.620 --> 50:28.420
注意一下就好了

50:29.700 --> 50:31.100
那这就是我们的媒体查询

50:31.100 --> 50:32.220
是不是特别简单

50:32.220 --> 50:32.660
对吧

50:32.660 --> 50:33.820
特别简单

50:33.820 --> 50:35.300
那我们媒体查询里面

50:35.300 --> 50:37.100
还有一些操作服务

50:37.100 --> 50:38.940
刚才说了一个按的服务

50:38.940 --> 50:39.540
对不对

50:39.540 --> 50:42.460
按的代表是合并的一个操作服务

50:42.460 --> 50:44.380
代表是并列的关系

50:44.380 --> 50:44.700
对吧

50:44.700 --> 50:45.940
并列的关系

50:45.980 --> 50:48.540
那我们刚才只写了一个按的服务

50:48.540 --> 50:49.220
对吧

50:49.220 --> 50:51.140
例如我这块来个屏幕

50:52.420 --> 50:53.220
按的

50:53.220 --> 50:54.300
我这个

50:54.300 --> 50:55.700
我是屏幕设备

50:55.700 --> 50:57.460
并且屏幕的类型

50:57.460 --> 50:58.820
屏幕类型

50:58.820 --> 51:01.620
然后并且我希望我这个宽度

51:01.620 --> 51:02.740
当前这个宽度

51:02.740 --> 51:05.740
它要是它小于这些的时候

51:05.740 --> 51:07.380
我来作用这个样式

51:07.380 --> 51:09.220
那我还希望它小于这些

51:09.220 --> 51:13.420
在大于一个宽度的时候

51:13.420 --> 51:15.420
作用这个样式呢

51:15.420 --> 51:17.420
大于例如大于300的时候

51:17.420 --> 51:18.020
大于300

51:18.020 --> 51:18.860
我希望作用这个

51:18.860 --> 51:21.420
大于300小于375作用这个样式

51:21.420 --> 51:22.580
我就可以再接着往后

51:22.580 --> 51:23.860
再接着按的

51:23.860 --> 51:25.380
来个慢

51:25.380 --> 51:26.340
wise

51:26.340 --> 51:29.540
这是大于300相速的时候

51:29.540 --> 51:30.540
最小宽度300

51:30.540 --> 51:32.180
是不是也就大于300的时候

51:32.180 --> 51:33.340
然后作用这个样式

51:33.340 --> 51:35.540
那如果小于300它是不是又不作用了

51:35.540 --> 51:37.100
那我现在这是可以作用的

51:37.100 --> 51:37.380
对吧

51:37.380 --> 51:38.700
我来给大家一个想用

51:38.700 --> 51:39.580
然后小于

51:39.580 --> 51:40.380
你看300

51:40.380 --> 51:42.500
大于300的时候它作用

51:42.500 --> 51:42.820
对吧

51:42.820 --> 51:44.820
大于300到375的时候它作用

51:44.820 --> 51:47.060
然后小于300它又不作用了吧

51:47.060 --> 51:49.300
然后大于30075它也不作用吧

51:49.300 --> 51:50.620
对吧

51:50.620 --> 51:52.660
了解一下

51:52.660 --> 51:53.900
那除了按的之外

51:53.900 --> 51:54.660
我们还

51:54.660 --> 51:57.660
我们在这个媒体查询里面

51:57.660 --> 51:59.740
它并没有凹这个操作服

51:59.740 --> 52:03.060
它并没有凹这个操作服

52:03.060 --> 52:05.420
那它的这个表示

52:05.420 --> 52:07.780
货的关系的这个操作服是什么呢

52:07.780 --> 52:09.660
它有个兜号

52:09.660 --> 52:11.220
例如你希望的是

52:11.220 --> 52:14.780
我在小于375的设备上

52:14.780 --> 52:16.500
能作用上这个样式

52:16.500 --> 52:20.860
并且我还希望在大于600的设备上

52:20.860 --> 52:22.860
它也可以作用这个样式

52:22.860 --> 52:26.580
大于600就是最小宽度是600的像素的

52:26.580 --> 52:28.100
这个设备上它也可以作用

52:28.100 --> 52:29.940
我就可以通过兜号来隔开

52:29.940 --> 52:30.620
知道吧

52:30.620 --> 52:32.900
可以通过兜号来隔开

52:32.900 --> 52:33.620
然后你可以看一下

52:33.620 --> 52:34.580
现在是大于600

52:34.580 --> 52:34.860
是吧

52:34.860 --> 52:36.820
604大于600它作用了

52:36.820 --> 52:38.500
然后小于600没有作用

52:38.500 --> 52:41.260
小于375它也作用了吧

52:41.260 --> 52:42.180
对吧

52:42.180 --> 52:42.860
了解一下

52:42.900 --> 52:43.740
好吧了解一下

52:45.140 --> 52:47.860
然后我们再接着就是这个否定条件

52:49.180 --> 52:50.260
否定条件

52:50.260 --> 52:52.460
就相当于除了吧

52:52.460 --> 52:54.820
那如果我前面加个note

52:54.820 --> 52:56.700
代表的是除了

52:56.700 --> 52:57.900
它这个只能

52:58.980 --> 53:00.660
只能作用我第一个语句

53:00.660 --> 53:01.100
看到了吗

53:01.100 --> 53:01.660
第一个语句

53:03.900 --> 53:04.740
第一个语句

53:04.740 --> 53:07.460
代表是除了我这个屏幕

53:07.460 --> 53:12.620
并除了我宽度小于375的屏幕

53:12.620 --> 53:13.380
设备之外

53:13.380 --> 53:15.540
它都可以作用这个样式

53:15.540 --> 53:18.260
那就是大于375的屏幕

53:19.540 --> 53:19.860
对吧

53:19.860 --> 53:21.780
大于375的屏幕可以作用

53:21.780 --> 53:23.460
或者是除了不是屏幕

53:24.860 --> 53:27.340
或者不是屏幕这个类型的

53:27.340 --> 53:28.900
它会作用上吧

53:28.900 --> 53:29.620
对吧

53:29.620 --> 53:31.140
那我们可以看一下

53:31.140 --> 53:31.580
现在

53:33.460 --> 53:35.300
小于375的时候没有作用吧

53:35.300 --> 53:36.340
大于375呢

53:36.340 --> 53:37.300
它是不是就作用了

53:37.300 --> 53:37.580
对吧

53:38.540 --> 53:39.380
了解一下

53:39.380 --> 53:39.740
可以吧

53:39.740 --> 53:40.260
了解一下

53:41.260 --> 53:43.140
然后我们再接着

53:43.140 --> 53:43.660
再接着

53:43.660 --> 53:45.740
还有一个关键字叫这个onglet

53:45.740 --> 53:46.460
那这个onglet

53:46.460 --> 53:48.580
我们现在用的并不是很多

53:48.580 --> 53:50.740
这个onglet它出现是为了什么呢

53:50.740 --> 53:52.820
其实就是为了兼容以前的浏览器

53:52.820 --> 53:55.300
以前浏览器它是

53:55.300 --> 53:57.660
不支持这个媒体特性的

53:57.660 --> 53:59.980
不支持媒体查询的

54:00.980 --> 54:03.060
那它如果不支持媒体查询的话

54:03.060 --> 54:04.740
你加上了这个onglet的话

54:04.740 --> 54:05.740
它会默认

54:05.740 --> 54:08.500
只看这个媒体特性

54:08.500 --> 54:10.140
默认只看媒体特性

54:10.380 --> 54:13.180
那如果你支持我这个媒体查询的话

54:13.740 --> 54:15.220
如果支持媒体查询的话

54:15.220 --> 54:15.780
它会

54:16.660 --> 54:17.940
它代表的就是

54:17.940 --> 54:18.900
指认许

54:18.900 --> 54:21.780
这个指认许这样的一个设备

54:23.020 --> 54:24.580
满足这样的条件的

54:25.260 --> 54:25.860
语句

54:25.860 --> 54:27.860
它才能作用这个样式

54:27.860 --> 54:30.060
那是不是它和我这直接写

54:30.060 --> 54:31.500
这个screen按的

54:31.500 --> 54:32.780
它是一样的了

54:32.780 --> 54:33.180
对吧

54:33.180 --> 54:34.140
直接写一样的了

54:34.140 --> 54:35.340
它其实是一样的

54:37.020 --> 54:38.500
你看我所写到375的时候

54:38.500 --> 54:39.140
它也会作用

54:39.140 --> 54:39.540
对吧

54:40.660 --> 54:41.540
那这个onglet

54:41.540 --> 54:43.060
其实就是为了兼容以前

54:43.060 --> 54:44.060
早半分的乱七

54:44.060 --> 54:45.500
早半分的乱七的问题

54:48.240 --> 54:49.360
这个了解一下

54:49.360 --> 54:49.760
可以吧

54:49.760 --> 54:50.480
了解一下

54:52.320 --> 54:53.280
然后我们再接着

54:53.280 --> 54:54.920
就是说一下这几个宽度

54:54.920 --> 54:56.240
一个是device-wise

54:56.240 --> 54:57.840
还有一个wise

54:57.840 --> 54:59.240
device-wise刚才也说了

54:59.240 --> 55:00.720
是设备的一个宽度

55:00.720 --> 55:01.000
对吧

55:01.000 --> 55:02.320
设备的一个宽度

55:02.320 --> 55:05.040
然后wise是我们试口的一个宽度

55:05.240 --> 55:06.400
试口的一个宽度

55:08.200 --> 55:10.640
也就是相当于我们的渲染一个宽度

55:11.960 --> 55:12.800
可以吧

55:12.800 --> 55:13.840
这个了解一下

55:13.840 --> 55:14.680
这个了解一下

55:20.720 --> 55:22.520
然后我们再接着往下

55:22.520 --> 55:23.200
我们刚才说

55:23.200 --> 55:24.560
这个在布局的时候

55:24.560 --> 55:26.720
我们详细网站开发的时候

55:26.720 --> 55:27.440
布局

55:27.440 --> 55:29.760
我们是不是希望它是一个相对的一个单位

55:29.760 --> 55:31.360
并不是一个绝对的一个单位

55:31.360 --> 55:31.680
对吧

55:33.360 --> 55:36.000
我们希望它的一个大小可以

55:36.000 --> 55:37.480
根据我设备的一个变化

55:37.480 --> 55:38.200
变化的

55:38.200 --> 55:39.080
对吧

55:39.080 --> 55:44.280
那这就出现了我们这些相对单位

55:44.280 --> 55:46.560
这就出现了我们这些相对单位

55:46.560 --> 55:48.720
那这些相对单位都代表什么意思

55:48.720 --> 55:50.000
能不能一个一个来看

55:50.000 --> 55:50.800
可以吧

55:50.800 --> 55:52.320
首先一个REM

55:52.320 --> 55:55.720
REM代表是相对于根结点的一个样式

55:55.720 --> 55:59.320
根结点就是我们HTMR这个标签

55:59.320 --> 56:00.600
例如HTMR标签

56:00.600 --> 56:02.560
我给它来个分子赛子之

56:02.560 --> 56:05.080
来个14小速

56:05.080 --> 56:11.200
然后我们这里给这个Demo来一个10REM

56:11.200 --> 56:12.080
你可以看一下

56:12.120 --> 56:14.480
我这个它的一个宽度变成多少了

56:14.480 --> 56:15.840
我刷新一下

56:15.840 --> 56:17.200
然后我们审查一下元素

56:17.200 --> 56:18.480
看一下它的一个宽度

56:20.200 --> 56:20.920
Demo

56:20.920 --> 56:24.480
你发现它的一个宽度变成了138

56:24.480 --> 56:24.760
对吧

56:24.760 --> 56:26.200
138

56:26.200 --> 56:29.920
我看一下这个宽度变成了138

56:29.920 --> 56:31.960
那这138怎么来的呢

56:31.960 --> 56:32.960
大家可以思考一下

56:32.960 --> 56:34.120
这个138怎么来的

56:36.760 --> 56:39.320
如果它要是相对于我这个根结点的话

56:39.320 --> 56:41.000
它应该是140

56:41.000 --> 56:41.400
对不对

56:42.040 --> 56:43.360
那为什么是138呢

56:43.360 --> 56:44.440
是不是还有我这个Bauder

56:44.440 --> 56:44.840
对吧

56:44.840 --> 56:45.560
我的Bauder

56:45.560 --> 56:47.680
他把我这Bauder是不是也包含进去了

56:47.680 --> 56:49.840
因为我这块设置Bauder box

56:49.840 --> 56:51.200
对吧

56:51.200 --> 56:54.320
所以REM它是相对于根标签的

56:54.320 --> 56:56.520
那如果你不相信它相对于根标签

56:56.520 --> 57:00.000
我再给这个副级再给它设置一个分子赛子值

57:00.000 --> 57:01.920
给它设置一个20小速

57:03.640 --> 57:04.600
你这回来看

57:04.600 --> 57:06.160
它是不是还是这个值

57:06.160 --> 57:07.520
你发现它还是这个值吧

57:07.520 --> 57:07.880
对不对

57:07.880 --> 57:08.880
还是138

57:08.880 --> 57:09.920
发现了吗

57:09.920 --> 57:11.360
所以REM

57:11.360 --> 57:13.400
注意它是相对于根标签的

57:13.400 --> 57:14.400
那它有什么用呢

57:14.400 --> 57:17.000
我们为什么要用这个单位呢

57:17.000 --> 57:19.440
我们可以结合着这个媒体查询来用

57:19.440 --> 57:20.200
对不对

57:20.200 --> 57:22.920
我们在这个浏览器里面

57:22.920 --> 57:26.640
可能看到14小速的这个文字

57:26.640 --> 57:28.280
你看着比较清晰了

57:28.280 --> 57:29.600
但是在我这个手机上

57:29.600 --> 57:31.560
你可能看着不清晰对吧

57:31.560 --> 57:34.400
那你就可以在这里给它设置这个HTML

57:36.160 --> 57:37.920
你给它设一个分子赛子值

57:37.920 --> 57:39.240
根据不同的设备

57:39.280 --> 57:41.360
给它设置不同的一个分子赛子值

57:41.360 --> 57:42.120
是不是就可以了

57:42.120 --> 57:42.680
对吧

57:42.680 --> 57:43.680
然后我这块

57:43.680 --> 57:45.240
我上面这个DEMO的一个样式

57:45.240 --> 57:47.120
我就可以不用改变它了

57:47.120 --> 57:47.600
解释吧

57:47.600 --> 57:49.000
我就可以不用改变它了

57:51.480 --> 57:53.120
这就是我们REM

57:53.120 --> 57:55.480
然后与它相似的

57:55.480 --> 57:56.840
还有个EM

57:56.840 --> 57:58.800
那EM是相对于谁呢

57:58.800 --> 58:02.320
EM是相对于自己本身的分子赛子值

58:02.320 --> 58:03.840
本身的分子赛子值

58:03.840 --> 58:05.560
你看我给它改成EM

58:05.560 --> 58:06.600
看一下

58:07.600 --> 58:09.320
然后给它设置一个分子赛子

58:10.920 --> 58:12.760
给它设置15小速

58:12.760 --> 58:13.920
然后这个

58:13.920 --> 58:15.200
还是先用REM

58:15.200 --> 58:15.840
大家看一下

58:15.840 --> 58:18.880
它是不是还是根据我们这个

58:18.880 --> 58:19.800
根标签的

58:19.800 --> 58:22.000
还是根据我们根标签的

58:22.000 --> 58:23.720
我们给它设置一个分子赛子

58:25.800 --> 58:26.880
给它设置分子赛子了

58:26.880 --> 58:27.320
对吧

58:27.320 --> 58:29.960
然后给HTML也设置一个分子赛子

58:29.960 --> 58:31.320
把这个伸掉

58:31.320 --> 58:33.920
给它HTML也设置了一个分子赛子

58:33.920 --> 58:35.520
把这个MIDI权先注释掉

58:37.520 --> 58:38.000
刷新

58:38.000 --> 58:39.560
你发现还是138对不对

58:39.560 --> 58:40.320
还是138

58:40.320 --> 58:42.240
就是说我们这个REM

58:42.240 --> 58:45.120
它就是根据REM

58:45.120 --> 58:48.240
REM相对于根标签

58:49.240 --> 58:55.570
相对于HTML元素

58:55.570 --> 59:01.170
HTML元素的分子赛子

59:02.170 --> 59:03.570
打小

59:03.570 --> 59:04.770
然后EM呢

59:04.770 --> 59:06.090
我们把它改成EM

59:06.090 --> 59:07.890
我们再来看一下EM

59:07.890 --> 59:08.490
刷新

59:08.490 --> 59:10.130
你看EM的时候它是不是变了

59:10.130 --> 59:11.290
变成148了

59:11.290 --> 59:12.890
那148再加上两个包段

59:12.890 --> 59:13.610
是不是150了

59:13.610 --> 59:14.450
对吧

59:14.450 --> 59:16.490
那EM谁是15

59:16.490 --> 59:18.810
是它本身的一个分子赛子值

59:18.810 --> 59:19.610
对不对

59:19.610 --> 59:30.360
那EM是相对于本身的分子赛子

59:30.360 --> 59:31.560
打小

59:31.560 --> 59:33.960
那如果本身没有这个分子赛子

59:33.960 --> 59:35.040
它是不是会继承

59:35.040 --> 59:36.840
这个分子赛子属性

59:36.840 --> 59:38.560
对吧

59:38.600 --> 59:39.120
注意啊

59:39.120 --> 59:50.150
FoundSize属性是可以继承的

59:50.150 --> 59:50.990
可以吧

59:50.990 --> 59:52.350
那除了这个之外

59:52.350 --> 59:55.150
除了这两个单位之外

59:55.150 --> 59:57.470
我们还有VWH

59:57.470 --> 59:59.350
然后PX我就不多说了

59:59.350 --> 01:00:03.030
PX是相对于你这个显示器的分辨率的

01:00:03.030 --> 01:00:04.430
显示器屏幕的分辨率的

01:00:04.430 --> 01:00:06.150
显示器屏幕分辨率的

01:00:06.150 --> 01:00:06.990
不多说了

01:00:06.990 --> 01:00:09.350
这个诚哥之前是不是也给大家来计调

01:00:09.350 --> 01:00:11.070
对吧

01:00:11.070 --> 01:00:11.910
然后接下来

01:00:11.910 --> 01:00:12.990
这VWH

01:00:12.990 --> 01:00:16.910
VWH一般会用在我们这个移动端开发里面

01:00:16.910 --> 01:00:19.030
移动端用开发里面

01:00:19.030 --> 01:00:20.510
那在移动端开发的时候

01:00:20.510 --> 01:00:22.910
这个VWH代表什么意思呢

01:00:22.910 --> 01:00:26.070
它是把我们这个视口的宽度

01:00:26.070 --> 01:00:28.590
或者高度分成了100份

01:00:28.590 --> 01:00:29.110
能理解吧

01:00:29.110 --> 01:00:30.430
100份

01:00:30.430 --> 01:00:32.710
然后你就可以根据这个分数

01:00:32.710 --> 01:00:34.310
来显示这个大小

01:00:34.310 --> 01:00:37.190
例如我现在需要50份

01:00:37.190 --> 01:00:38.390
50VW

01:00:38.390 --> 01:00:42.430
代表我整个把设备整个分成了100份

01:00:42.430 --> 01:00:44.430
那我50占100的多少

01:00:44.430 --> 01:00:45.870
50占100的一分之一

01:00:45.870 --> 01:00:46.310
对不对

01:00:46.310 --> 01:00:49.150
你就相当于我设置这个50VW

01:00:49.150 --> 01:00:51.830
相当于设置我这个大小

01:00:51.830 --> 01:00:53.990
是我这个设备的一半

01:00:53.990 --> 01:00:54.310
对吧

01:00:54.310 --> 01:00:54.990
设备的一半

01:00:54.990 --> 01:00:55.870
大家可以看一下

01:00:55.870 --> 01:00:57.590
现在刷新一下

01:00:57.590 --> 01:00:59.110
是不是就变成设备的一半了

01:00:59.110 --> 01:01:01.350
我们审查一下元素

01:01:01.350 --> 01:01:02.310
182.5

01:01:02.310 --> 01:01:02.670
对不对

01:01:02.670 --> 01:01:04.870
也有82.5吧

01:01:04.870 --> 01:01:06.950
那我们再来做一个测试

01:01:06.990 --> 01:01:09.110
再来做一个测试

01:01:09.110 --> 01:01:12.750
我如果把我们这个外子视口的宽度改变

01:01:12.750 --> 01:01:16.020
改变成无外向素

01:01:16.020 --> 01:01:17.220
我们再来看一下

01:01:17.220 --> 01:01:20.980
它大小到底是谁的

01:01:20.980 --> 01:01:22.260
到底是谁的一半

01:01:22.260 --> 01:01:22.780
可以吧

01:01:22.780 --> 01:01:24.060
我们审查一下元素

01:01:24.060 --> 01:01:25.740
就会变成248了吧

01:01:25.740 --> 01:01:26.180
对不对

01:01:26.180 --> 01:01:27.100
248了

01:01:27.100 --> 01:01:28.180
也就是说

01:01:28.180 --> 01:01:33.140
这个VW或者VH

01:01:33.140 --> 01:01:34.380
它俩是相对的

01:01:34.380 --> 01:01:36.340
VW或者VH

01:01:36.420 --> 01:01:40.100
它是相对于

01:01:40.100 --> 01:01:43.720
视口而言的

01:01:43.720 --> 01:01:45.480
它是会把视口

01:01:47.480 --> 01:01:52.120
会把视口分成一百份

01:01:52.120 --> 01:01:52.960
能理解吧

01:01:52.960 --> 01:01:55.040
所以你如果完完全全说把

01:01:56.920 --> 01:01:59.040
我们设备大小分成一

01:01:59.040 --> 01:02:00.040
设备的宽度

01:02:00.040 --> 01:02:01.760
高度分成一百份的话

01:02:01.760 --> 01:02:03.480
这并不准去

01:02:03.480 --> 01:02:06.480
它真实的是把视口分成了一百份

01:02:06.480 --> 01:02:07.840
明白吧

01:02:07.840 --> 01:02:10.360
然后占用你视口的多少份

01:02:10.360 --> 01:02:10.760
可以吧

01:02:12.040 --> 01:02:12.520
OK

01:02:12.520 --> 01:02:14.440
注意这一点

01:02:14.440 --> 01:02:15.760
这是device wise

01:02:15.760 --> 01:02:17.480
那我们一般来说

01:02:17.480 --> 01:02:20.080
我们有一些人会认为它是

01:02:21.760 --> 01:02:23.920
有一些人会认为这个VWVH

01:02:23.920 --> 01:02:27.480
它是相对于我们这个屏幕

01:02:27.480 --> 01:02:29.320
设备的大小的宽度的

01:02:29.320 --> 01:02:30.040
是因为什么呢

01:02:30.040 --> 01:02:32.960
就是因为它把这款给它设置了一下

01:02:32.960 --> 01:02:35.920
把这个视口和屏幕的宽度

01:02:35.920 --> 01:02:37.160
设置成相等的了

01:02:37.160 --> 01:02:40.400
所以他认为这个VWVH

01:02:40.400 --> 01:02:42.160
它是分

01:02:42.160 --> 01:02:44.960
它是拆分的我的设备

01:02:44.960 --> 01:02:46.120
它是拆分我的设备的

01:02:47.800 --> 01:02:48.680
然后注意一点

01:02:48.680 --> 01:02:51.600
它真实的是把这个视口分成了一百份

01:02:51.600 --> 01:02:53.280
并不是我们的设备

01:02:53.280 --> 01:02:53.960
可以吧

01:02:53.960 --> 01:02:55.160
VH也是一样的

01:02:55.160 --> 01:02:56.680
VH也是一样的

01:02:56.680 --> 01:02:59.000
那我这块来个50VH

01:02:59.000 --> 01:03:01.320
50VH是不是代表是高度的一半

01:03:01.320 --> 01:03:01.640
对吧

01:03:01.640 --> 01:03:02.440
我们刷新一下

01:03:02.440 --> 01:03:03.720
这回是不是出来了

01:03:03.720 --> 01:03:04.640
对不对

01:03:04.640 --> 01:03:05.840
你看

01:03:05.840 --> 01:03:08.520
它会根据你这个设备的一个变化

01:03:08.520 --> 01:03:09.920
它会有一个相当的变化

01:03:09.920 --> 01:03:10.400
看到了吗

01:03:11.720 --> 01:03:12.480
可以吧

01:03:12.480 --> 01:03:14.400
那除了这两个单对位之外

01:03:14.400 --> 01:03:16.360
还有一个VMAX VMAN

01:03:16.360 --> 01:03:18.320
VMAX VMAN

01:03:18.320 --> 01:03:23.600
就是它会查找你当前这个视口的宽高

01:03:23.600 --> 01:03:24.720
哪个大

01:03:24.720 --> 01:03:26.720
VMAX代表是哪个大

01:03:26.720 --> 01:03:28.800
我就把哪个分成一百份

01:03:28.800 --> 01:03:31.440
VMAN代表是哪个小

01:03:31.440 --> 01:03:33.680
我就把那个分成一百份

01:03:33.680 --> 01:03:43.940
取视口宽高中最小的一边

01:03:43.940 --> 01:03:50.440
一边分成一百份

01:03:50.440 --> 01:03:52.360
然后上面这个视口的宽高中

01:03:52.360 --> 01:03:53.840
取最大的一边

01:03:53.840 --> 01:03:55.320
分成一百份

01:03:55.320 --> 01:03:56.880
最大的

01:03:56.880 --> 01:03:59.440
看我现在给它改成VMAX

01:03:59.440 --> 01:04:00.720
宽度改成VMAX

01:04:00.720 --> 01:04:02.760
我们现在这个视口

01:04:02.760 --> 01:04:03.520
谁大

01:04:03.520 --> 01:04:04.680
是不是高度最大

01:04:04.680 --> 01:04:06.120
高度是462

01:04:06.120 --> 01:04:06.560
对不对

01:04:06.560 --> 01:04:08.680
那462的一半是231

01:04:08.680 --> 01:04:09.240
对不对

01:04:09.240 --> 01:04:10.280
那我们这回刷新一下

01:04:10.280 --> 01:04:11.040
看是不是

01:04:11.040 --> 01:04:11.760
刷新

01:04:11.760 --> 01:04:12.760
非常的一个正方形

01:04:12.760 --> 01:04:13.480
对吧

01:04:13.480 --> 01:04:15.880
然后我们这还不能这么看

01:04:15.880 --> 01:04:17.560
我把它拉上去之后

01:04:17.560 --> 01:04:19.200
拉上去之后

01:04:19.200 --> 01:04:20.400
你看我的高度变了

01:04:20.400 --> 01:04:20.920
对吧

01:04:20.920 --> 01:04:23.240
然后这位宽度是不是应该是最大的

01:04:23.240 --> 01:04:24.720
宽度是369

01:04:24.720 --> 01:04:25.360
对不对

01:04:25.360 --> 01:04:27.160
369出于2的多少

01:04:27.160 --> 01:04:31.240
184.5

01:04:31.240 --> 01:04:31.520
对吧

01:04:31.520 --> 01:04:32.720
184.5

01:04:32.720 --> 01:04:34.360
然后加上我这个包点

01:04:34.360 --> 01:04:35.960
是不是就是检测我包点

01:04:35.960 --> 01:04:37.480
是不是就182.5了

01:04:37.480 --> 01:04:37.800
对吧

01:04:37.800 --> 01:04:39.240
那种去

01:04:39.240 --> 01:04:40.000
然后注意一点

01:04:40.000 --> 01:04:41.160
这个注意这个

01:04:41.160 --> 01:04:41.520
可以吧

01:04:41.520 --> 01:04:43.320
注意这个

01:04:43.320 --> 01:04:46.240
VMAX是取最大的那条片

01:04:46.240 --> 01:04:48.560
然后VMAX是取最小的那条片

01:04:48.560 --> 01:04:49.520
可以吧

01:04:49.520 --> 01:04:51.240
然后可以试一下这个VMAX

01:04:51.240 --> 01:04:53.000
我把它改成MIN

01:04:53.000 --> 01:04:54.680
代表取最小的那个

01:04:54.680 --> 01:04:55.080
刷新

01:04:55.080 --> 01:04:56.600
我们现在最小的是谁

01:04:56.600 --> 01:04:57.400
最小是高度

01:04:57.400 --> 01:04:57.680
对吧

01:04:57.680 --> 01:04:59.360
高度233出于2

01:04:59.360 --> 01:05:03.000
应该是166.6

01:05:03.000 --> 01:05:03.360
对吧

01:05:03.360 --> 01:05:04.240
166.6

01:05:04.240 --> 01:05:06.360
再减去两边

01:05:06.360 --> 01:05:08.480
我现在

01:05:08.480 --> 01:05:09.280
我这么移动

01:05:09.280 --> 01:05:10.840
它的这个高度也变了

01:05:10.840 --> 01:05:12.320
对不对

01:05:12.320 --> 01:05:12.760
这样吧

01:05:12.760 --> 01:05:13.440
这样看

01:05:13.440 --> 01:05:14.280
我这个回

01:05:14.280 --> 01:05:15.760
这个高度是188

01:05:15.760 --> 01:05:17.320
出于2是94

01:05:17.320 --> 01:05:17.640
对吧

01:05:17.640 --> 01:05:18.240
94

01:05:18.240 --> 01:05:20.520
94减去两个包点

01:05:20.520 --> 01:05:21.760
两边的包点

01:05:21.760 --> 01:05:22.800
别人92了吧

01:05:22.800 --> 01:05:23.240
对吧

01:05:23.240 --> 01:05:24.040
那种去92

01:05:24.040 --> 01:05:24.600
没问题

01:05:24.600 --> 01:05:24.880
对吧

01:05:24.880 --> 01:05:26.400
没问题吧

01:05:26.400 --> 01:05:28.200
还取最小的那个片

01:05:28.200 --> 01:05:29.280
注意一点

01:05:29.280 --> 01:05:30.800
注意一下这块

01:05:30.800 --> 01:05:32.160
那这就是我们这些单位

01:05:32.160 --> 01:05:33.400
相对的单位

01:05:33.400 --> 01:05:35.280
那这些单位需要大家

01:05:35.280 --> 01:05:36.680
完完全全掌握

01:05:36.680 --> 01:05:38.880
这些单位是需要大家去掌握的

01:05:38.880 --> 01:05:40.600
并且需要大家去记住的

01:05:40.600 --> 01:05:41.560
可以吧

01:05:41.560 --> 01:05:42.520
也不难对吧

01:05:42.520 --> 01:05:42.960
不难

01:05:42.960 --> 01:05:44.680
用几次其实就记住了

01:05:44.680 --> 01:05:46.280
好吧

01:05:46.280 --> 01:05:47.680
接着再来说一下

01:05:47.680 --> 01:05:49.600
我们这个想是网站设计

01:05:49.600 --> 01:05:51.920
它是最佳的选择吗

01:05:51.920 --> 01:05:53.480
可能很多人都觉得

01:05:53.480 --> 01:05:54.480
想是网站设计

01:05:54.480 --> 01:05:55.480
我可以让用户

01:05:55.480 --> 01:05:56.560
所有的用户

01:05:56.560 --> 01:05:59.000
都可以有这样一个

01:05:59.000 --> 01:06:00.800
更好的一个体验效果

01:06:00.800 --> 01:06:01.600
对不对

01:06:01.600 --> 01:06:03.120
但是并不能这么说

01:06:03.200 --> 01:06:05.000
并不能说这个想是设计

01:06:05.000 --> 01:06:06.920
就是最佳的一个选择

01:06:06.920 --> 01:06:09.040
那我们如何来选择

01:06:09.040 --> 01:06:10.160
这个实现的方式

01:06:10.160 --> 01:06:12.080
是需要通过三方面的

01:06:12.080 --> 01:06:13.760
第一个是项目的预算

01:06:13.760 --> 01:06:14.960
第二个是目标用户

01:06:14.960 --> 01:06:16.720
第三个是产品定位

01:06:16.720 --> 01:06:18.840
那项目用预算都包括哪些

01:06:18.840 --> 01:06:21.800
首先除了这个人

01:06:21.800 --> 01:06:24.080
除了财力以外

01:06:24.080 --> 01:06:24.880
我们这个预算

01:06:24.880 --> 01:06:26.440
还有这个人力的一个预算

01:06:26.440 --> 01:06:28.680
还有时间的一个成本预算

01:06:28.680 --> 01:06:29.520
能理解吧

01:06:29.520 --> 01:06:31.280
除了这个人力物理财力

01:06:31.680 --> 01:06:34.720
总结起来人力物理

01:06:34.720 --> 01:06:40.120
物理财力

01:06:40.120 --> 01:06:41.080
对吧

01:06:41.080 --> 01:06:42.640
然后还有时间成本

01:06:42.640 --> 01:06:46.400
这都是需要你来预算的

01:06:46.400 --> 01:06:47.920
然后还有一个

01:06:47.920 --> 01:06:50.120
第二方面是这个目标用户

01:06:50.120 --> 01:06:52.760
那我们实现的方式

01:06:52.760 --> 01:06:54.720
其实最主要的就是这两点

01:06:54.720 --> 01:06:56.000
然后产品定位

01:06:56.000 --> 01:06:57.560
你也是需要考虑到的

01:06:57.560 --> 01:06:59.880
那就像一个产品

01:06:59.880 --> 01:07:01.480
我就指

01:07:01.480 --> 01:07:02.800
我的目标用户

01:07:02.840 --> 01:07:05.440
只针对于iE678来的

01:07:05.440 --> 01:07:08.000
那你完完全全不需要去写这个想法

01:07:08.000 --> 01:07:11.440
是完完全全不需要用这个网页

01:07:11.440 --> 01:07:12.840
想法是网页设计

01:07:13.960 --> 01:07:15.000
完完全全不需要的

01:07:18.920 --> 01:07:21.080
然后在我们这个想法

01:07:21.080 --> 01:07:23.600
是网页设计这个过程当中

01:07:23.600 --> 01:07:25.800
有两个名词

01:07:25.800 --> 01:07:26.560
专用名词

01:07:26.560 --> 01:07:28.080
一个是见级增强

01:07:28.080 --> 01:07:29.360
一个是优雅见级

01:07:29.360 --> 01:07:30.320
其实这两个名词

01:07:30.320 --> 01:07:32.600
可能你们是第一次听说

01:07:32.600 --> 01:07:36.040
但是他应该

01:07:36.040 --> 01:07:37.480
他并不是一个新词

01:07:37.480 --> 01:07:38.920
他并不是一个新词

01:07:38.920 --> 01:07:41.040
只不过是老词心说了

01:07:41.040 --> 01:07:43.920
那他见级增强

01:07:43.920 --> 01:07:45.120
针对以前的一个词

01:07:45.120 --> 01:07:47.200
其实就是这个向上兼容

01:07:47.200 --> 01:07:48.520
向上兼容

01:07:48.520 --> 01:07:50.400
都知道什么是向上兼容吧

01:07:50.400 --> 01:07:53.480
就是我现在先开发一个

01:07:53.480 --> 01:07:57.240
指先只开发兼容一个设备的

01:07:57.240 --> 01:07:59.480
我们当前这个iPhone例如iPhone 6

01:07:59.480 --> 01:08:00.240
举例

01:08:00.240 --> 01:08:01.680
兼容iPhone 6的

01:08:01.680 --> 01:08:04.280
然后我现在以iPhone 6为原形容

01:08:04.280 --> 01:08:05.480
我先开发完了之后

01:08:05.480 --> 01:08:08.240
我再去兼容其他的一些新的设备

01:08:08.240 --> 01:08:09.760
这叫见级增强

01:08:09.760 --> 01:08:11.160
能力把见级增强

01:08:11.160 --> 01:08:12.200
那优雅见级

01:08:12.200 --> 01:08:15.040
其实是相对于我们

01:08:15.040 --> 01:08:17.520
以前所说的那个向下兼容的

01:08:17.520 --> 01:08:19.240
向下兼容也就相当于

01:08:19.240 --> 01:08:21.520
我们先开发一个通用的版本

01:08:21.520 --> 01:08:23.280
然后再去兼容一些

01:08:23.280 --> 01:08:25.880
比较特殊的一些老版本的一些浏览器

01:08:25.880 --> 01:08:26.440
可以吧

01:08:27.960 --> 01:08:29.720
这就是我们这两个关键词

01:08:29.720 --> 01:08:31.320
这两个书语

01:08:31.360 --> 01:08:32.920
大家了解一下就可以了

01:08:32.920 --> 01:08:34.720
那一般我们在做显示网站

01:08:34.720 --> 01:08:37.200
显示网站开发的时候

01:08:37.200 --> 01:08:39.280
一般都是先

01:08:39.280 --> 01:08:40.440
先移动端

01:08:42.040 --> 01:08:45.110
再pc端

01:08:45.110 --> 01:08:46.870
而且移动端的设备

01:08:46.870 --> 01:08:50.230
我们还有一个是先移动端设备

01:08:51.150 --> 01:08:53.750
中我们还是先iPhone

01:08:53.750 --> 01:08:55.990
我们会以iPhone 6

01:08:55.990 --> 01:08:59.270
iPhone 6为原形

01:09:00.230 --> 01:09:08.830
为初始原形

01:09:08.830 --> 01:09:13.520
为初始原形开始开发

01:09:13.520 --> 01:09:14.360
开发完了之后

01:09:14.360 --> 01:09:16.160
再去兼容其他的移动端设备

01:09:18.160 --> 01:09:19.720
这个开发

01:09:20.720 --> 01:09:25.840
完成之后再去兼容其他的设备

01:09:27.520 --> 01:09:29.000
那这个过程

01:09:29.000 --> 01:09:30.400
是不是就相当于我们

01:09:30.400 --> 01:09:32.200
是用这个见尽增强了

01:09:32.200 --> 01:09:32.680
对吧

01:09:32.680 --> 01:09:33.920
见尽增强

01:09:35.480 --> 01:09:35.960
对吧

01:09:35.960 --> 01:09:38.160
见尽增强了解一下

01:09:38.160 --> 01:09:38.480
好吧

01:09:38.480 --> 01:09:39.080
了解一下

01:09:41.080 --> 01:09:42.720
然后以上就是我们这个

01:09:42.720 --> 01:09:44.200
显示网站设备

01:09:44.200 --> 01:09:46.440
那在我们这个前端里面

01:09:46.440 --> 01:09:49.160
我们其实有一些框架

01:09:49.160 --> 01:09:52.000
它就是基于显示网站开发的

01:09:52.000 --> 01:09:53.080
大家可以去看一下

01:09:53.080 --> 01:09:54.040
这个bootstrap

01:09:55.840 --> 01:09:56.720
bootstrap

01:09:56.720 --> 01:09:57.920
这个bootstrap

01:09:57.920 --> 01:09:59.840
这个网站其实它就是基于

01:09:59.840 --> 01:10:02.080
我们这个显示网站开发的

01:10:02.120 --> 01:10:02.800
并且

01:10:03.960 --> 01:10:05.800
这个bootstrap

01:10:05.800 --> 01:10:06.800
它是一个什么东西

01:10:06.800 --> 01:10:08.000
它就是我们这个

01:10:09.280 --> 01:10:12.240
基于显示网站开发的一个前端框架

01:10:12.240 --> 01:10:12.640
可以吧

01:10:12.640 --> 01:10:14.800
基于显示网站开发的一个前端框架

01:10:14.800 --> 01:10:18.560
我们它里面已经封装了很多组件了

01:10:18.560 --> 01:10:19.480
还有一些

01:10:19.480 --> 01:10:22.200
栈栏格的一些结构

01:10:22.200 --> 01:10:24.400
我们就直接拿来用就可以了

01:10:24.400 --> 01:10:26.000
也是比较方便的

01:10:28.000 --> 01:10:28.960
你说这些样式

01:10:28.960 --> 01:10:29.880
它都已经写完了

01:10:29.880 --> 01:10:31.400
我们直接拿来用就可以了

01:10:31.400 --> 01:10:34.040
你看它的底层其实用的

01:10:34.040 --> 01:10:36.360
就是这个媒体它询想是网站开发

01:10:36.360 --> 01:10:36.800
可以吧

01:10:37.640 --> 01:10:38.720
然后留个作业

01:10:38.720 --> 01:10:41.960
希望大家回去把这个bootstrap

01:10:41.960 --> 01:10:43.560
这个网站

01:10:43.560 --> 01:10:45.680
这个网页来实现一下

01:10:45.680 --> 01:10:46.200
可以吧

01:10:46.200 --> 01:10:47.600
你看一下它的一个显示

01:10:47.600 --> 01:10:49.080
它是怎么显示的

01:10:49.080 --> 01:10:50.960
最开始我们在PC端的时候

01:10:50.960 --> 01:10:51.960
在浏览器上

01:10:51.960 --> 01:10:52.760
在电脑上

01:10:52.760 --> 01:10:54.200
你看到的这个效果

01:10:54.200 --> 01:10:55.720
是这样的一个效果

01:10:55.720 --> 01:10:55.960
对吧

01:10:55.960 --> 01:10:57.120
下面有撕裂

01:10:57.120 --> 01:10:57.520
对不对

01:10:57.520 --> 01:10:59.400
上面这个导航条

01:10:59.400 --> 01:11:00.280
下面有导航条

01:11:00.280 --> 01:11:02.000
然后这块有关于对不对

01:11:02.000 --> 01:11:02.840
然后我在缩小

01:11:02.840 --> 01:11:04.000
我这个浏览器的时候

01:11:04.000 --> 01:11:05.920
你看我缩小浏览器

01:11:05.920 --> 01:11:06.600
缩小浏览器

01:11:06.600 --> 01:11:09.640
是不是相当于改变我设备的一个大小

01:11:09.640 --> 01:11:10.280
对吧

01:11:10.280 --> 01:11:11.480
改变设备大小

01:11:11.480 --> 01:11:13.640
你发现它有一些变化

01:11:13.640 --> 01:11:14.800
下面变成三裂了

01:11:14.800 --> 01:11:15.120
对吧

01:11:15.120 --> 01:11:16.320
变化到一定程度的时候

01:11:16.320 --> 01:11:18.360
它下面变成三裂了

01:11:18.360 --> 01:11:19.320
然后我再接着变化

01:11:19.320 --> 01:11:19.880
变化变化

01:11:19.880 --> 01:11:20.760
再接着缩小

01:11:20.760 --> 01:11:22.360
你发现那个关于没了吧

01:11:22.360 --> 01:11:22.680
对不对

01:11:22.680 --> 01:11:23.600
关于没了

01:11:23.600 --> 01:11:25.200
然后下面变成两裂了吧

01:11:25.200 --> 01:11:25.800
对吧

01:11:25.800 --> 01:11:28.440
然后我再接着缩小呢

01:11:28.520 --> 01:11:30.320
我再接着缩小

01:11:30.320 --> 01:11:32.080
它是不是上面导航条都没了

01:11:32.080 --> 01:11:33.400
然后下面变成一裂了

01:11:33.400 --> 01:11:34.480
那这样的一个效果

01:11:34.480 --> 01:11:36.840
是不是就是用我们刚才所学的

01:11:36.840 --> 01:11:38.480
这个媒体查询来做的

01:11:38.480 --> 01:11:38.800
对吧

01:11:38.800 --> 01:11:40.320
媒体查询来做的

01:11:40.320 --> 01:11:43.560
然后下面这个布局

01:11:43.560 --> 01:11:45.440
一行有四裂

01:11:45.440 --> 01:11:46.240
一行有四裂

01:11:46.240 --> 01:11:47.720
这应可以用什么来做

01:11:47.720 --> 01:11:50.160
是不是可以用我们这个弹性合模型来做

01:11:50.160 --> 01:11:50.480
对吧

01:11:50.480 --> 01:11:52.480
弹性合自来做

01:11:52.480 --> 01:11:53.680
弹性合自来做

01:11:53.680 --> 01:11:55.320
然后中间这个距离

01:11:55.320 --> 01:11:57.560
我怎么来设置呢

01:11:57.600 --> 01:11:59.080
你需要设置margin吗

01:11:59.080 --> 01:11:59.720
不许吧

01:11:59.720 --> 01:12:00.840
不需要吧

01:12:00.840 --> 01:12:04.240
这个宽度我们是不是在这个flex布局里面

01:12:04.240 --> 01:12:09.400
我们有一个排列方式

01:12:09.400 --> 01:12:11.120
对不对

01:12:11.120 --> 01:12:13.240
严主轴的排列方式

01:12:13.240 --> 01:12:14.760
叫jassafi content的

01:12:14.760 --> 01:12:16.360
对不对

01:12:16.360 --> 01:12:17.280
是这个属性吗

01:12:17.280 --> 01:12:19.520
我们可以给它设置一个space between

01:12:19.520 --> 01:12:20.320
是不是就可以

01:12:20.320 --> 01:12:21.040
对吧

01:12:21.040 --> 01:12:22.120
那我就说到这

01:12:22.120 --> 01:12:23.920
然后大家自己回去想一下

01:12:23.920 --> 01:12:24.720
怎么来实现

01:12:24.720 --> 01:12:25.160
好吧

01:12:25.160 --> 01:12:26.720
然后自己做一下

01:12:26.720 --> 01:12:28.520
那以上就是我们这个

01:12:28.520 --> 01:12:30.320
想是

01:12:30.320 --> 01:12:32.760
想是布局开发的这个

01:12:32.760 --> 01:12:36.640
这一堂课的主要的内容

01:12:36.640 --> 01:12:37.960
那作业我也留完了

01:12:37.960 --> 01:12:39.480
这一堂课咱们就先到这

01:12:39.480 --> 01:12:40.200
好吧

01:12:40.200 --> 01:12:41.520
咱们以后的课程再见

01:12:41.520 --> 01:12:41.920
拜拜

