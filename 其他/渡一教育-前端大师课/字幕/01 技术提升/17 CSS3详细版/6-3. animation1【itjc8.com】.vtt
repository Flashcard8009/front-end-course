WEBVTT

00:00.560 --> 00:02.560
来好了 咱们开始今天的课程

00:02.560 --> 00:04.560
Animation属性的一个讲解

00:04.560 --> 00:06.560
提到Animation 动画的意思是吧

00:06.560 --> 00:08.560
咱们必须要强调一下

00:08.560 --> 00:10.560
Animation是实现CS3动画

00:10.560 --> 00:12.560
最重要的一个属性

00:12.560 --> 00:14.560
虽然说Transition也能实现这样的动画效果

00:14.560 --> 00:16.560
但Transition实现只是说

00:16.560 --> 00:18.560
从A状态变换到B状态的动画效果

00:18.560 --> 00:20.560
它想再变到C状态它是办不到的

00:20.560 --> 00:22.560
但是Animation可以 Animation可以什么呢

00:22.560 --> 00:24.560
可以从A状态变到B状态

00:24.560 --> 00:26.560
可以变到C状态变到D状态

00:26.560 --> 00:28.560
再往下一直变下去

00:28.560 --> 00:30.560
再改变了一个连续动画

00:30.560 --> 00:32.560
这是Animation的一个强大之处

00:32.560 --> 00:34.560
Transition跟Animation比较起来

00:34.560 --> 00:36.560
Transition那就是实现一个状态

00:36.560 --> 00:38.560
改变了一段动画

00:38.560 --> 00:40.560
Animation就是一个完整的多状态

00:40.560 --> 00:42.560
改变了一个动画

00:42.560 --> 00:44.560
这是它俩的一个区别

00:44.560 --> 00:46.560
所以比较起来你会发现

00:46.560 --> 00:48.560
Animation是不是它非常的强大 是吧

00:48.560 --> 00:50.560
更加丰满一些

00:50.560 --> 00:52.560
也确实咱们CS3的动画效果

00:52.560 --> 00:54.560
主要也是围绕着Animation来展开的

00:54.560 --> 00:56.560
Animation配合一些变化的属性

00:56.560 --> 00:58.560
但是你要说CS3动画非常强大

00:58.560 --> 01:00.560
其实也被围绕

01:00.560 --> 01:02.560
它也没那么强大

01:02.560 --> 01:04.560
实现一些基本的效果它够用了

01:04.560 --> 01:06.560
但你要说实现一些特别复杂的动画效果

01:06.560 --> 01:08.560
其实CS3来做还是不太适合的

01:08.560 --> 01:10.560
还是要拿那个SVG

01:10.560 --> 01:12.560
包括Flyce或者是原生JS

01:12.560 --> 01:14.560
配合一些数据的变化

01:14.560 --> 01:16.560
来实现复杂的动画

01:16.560 --> 01:18.560
这是那么来做的

01:18.560 --> 01:20.560
但是CS3给咱们提供的这些动画效果

01:20.560 --> 01:22.560
基本上也够咱们一常来使用了

01:22.560 --> 01:24.560
甚至说一些旋律的

01:24.560 --> 01:26.560
就比较优势的

01:26.560 --> 01:28.560
行了咱就不多说了

01:28.560 --> 01:30.560
咱们来开始Animation属性的讲解

01:30.560 --> 01:32.560
咱们先来看一下Animation属性

01:32.560 --> 01:34.560
咱刚才听的比较强大是吧

01:34.560 --> 01:36.560
但是它讲解起来也没那么吃力

01:36.560 --> 01:38.560
因为咱们之前学过Transition

01:38.560 --> 01:40.560
很多属性它俩都是差不多的

01:40.560 --> 01:42.560
咱们来看一下Animation属性

01:42.560 --> 01:44.560
第一个是一个复合属性

01:44.560 --> 01:46.560
下面是所有被复合的属性是吧

01:46.560 --> 01:48.560
咱们来看一下下面这些个属性

01:48.560 --> 01:50.560
一共是不是八个

01:50.560 --> 01:52.560
八个里面咱看Duration

01:52.560 --> 01:54.560
这个属性的意义跟这个方法

01:54.560 --> 01:56.560
应用能力跟那个Transition里面

01:56.560 --> 01:58.560
是完全一模一样的

01:58.560 --> 02:00.560
所以这三个属性咱不需要怎么过多的讲

02:00.560 --> 02:02.560
是不是基本上就完事了

02:02.560 --> 02:04.560
那么接下来就剩五个属性

02:04.560 --> 02:06.560
是不是讲解起来就容易多了

02:06.560 --> 02:08.560
咱接下来就来开始这个Animation的一个讲解

02:08.560 --> 02:10.560
在讲之前我先写一个这样的一个方块

02:10.560 --> 02:12.560
一会儿我想让这个方块实现一个运动状态

02:12.560 --> 02:14.560
然后通过改变这个运动状态

02:14.560 --> 02:16.560
咱们来看一下这个Animation

02:16.560 --> 02:18.560
到底是怎么来应用的

02:18.560 --> 02:20.560
现在我想让这个红色的方块

02:20.560 --> 02:22.560
我先说一下为啥的办法

02:22.560 --> 02:24.560
我想让它实现从第一个状态改变到什么

02:24.560 --> 02:26.560
向右平移100个像素

02:26.560 --> 02:28.560
然后再向下平100个像素

02:28.560 --> 02:30.560
然后向左平100个像素

02:30.560 --> 02:32.560
然后最后来回到它最终的位置

02:32.560 --> 02:34.560
实现绕一圈这样的一个效果

02:34.560 --> 02:36.560
一共发生了几次状态的改变

02:36.560 --> 02:38.560
是不是一共发生了四次状态的改变

02:38.560 --> 02:40.560
第一个状态变到第二个状态

02:40.560 --> 02:41.560
变到第三个状态

02:41.560 --> 02:42.560
变到第四个状态

02:42.560 --> 02:43.560
变到第五个状态

02:43.560 --> 02:44.560
一共发生了四次改变

02:44.560 --> 02:45.560
一共发生了四次动画

02:45.560 --> 02:46.560
一共五个状态

02:46.560 --> 02:47.560
明白我意思吗

02:47.560 --> 02:49.560
那咱们现在拿Animation来实现一下

02:49.560 --> 02:51.560
这样状态的一个改变

02:51.560 --> 02:53.560
咱们先来快点的写一下

02:53.560 --> 02:55.560
然后一会我再系统的来讲一下

02:55.560 --> 02:56.560
行吧 咱们先快速的

02:56.560 --> 02:57.560
先感受一下Animation

02:57.560 --> 02:58.560
到底来怎么来使

02:58.560 --> 03:00.560
要实现这几个状态的改变

03:00.560 --> 03:01.560
用Animation来实现

03:01.560 --> 03:03.560
咱就必须得把这些状态记录下来

03:03.560 --> 03:04.560
放到一个容器里面

03:04.560 --> 03:06.560
然后按照顺序来执行

03:06.560 --> 03:08.560
这个容器就叫做咱们的PFrames

03:08.560 --> 03:10.560
就叫做咱们的一个关键帧容器

03:11.560 --> 03:12.560
TFrames

03:12.560 --> 03:13.560
它的写法这样

03:13.560 --> 03:15.560
取个QRA写的一个PFrames

03:15.560 --> 03:16.560
它就变成一个关键帧容器

03:16.560 --> 03:18.560
然后写一个容器的名称

03:18.560 --> 03:19.560
这是自定义的 乱

03:19.560 --> 03:20.560
你可以随便写

03:20.560 --> 03:22.560
然后里面就要记载咱们的

03:22.560 --> 03:23.560
运动的状态了

03:23.560 --> 03:25.560
比如说运动发生了几次状态的改变

03:25.560 --> 03:26.560
你要在这里面

03:26.560 --> 03:27.560
把这些状态的改变

03:27.560 --> 03:28.560
这个状态记录到里面去

03:28.560 --> 03:30.560
拿什么来记录呢

03:30.560 --> 03:31.560
里面会定一些关键帧

03:31.560 --> 03:32.560
你有几个状态

03:32.560 --> 03:33.560
你就定几个关键帧

03:33.560 --> 03:34.560
怎么来定义关键帧呢

03:34.560 --> 03:35.560
拿百分数来做

03:35.560 --> 03:36.560
比如说

03:36.560 --> 03:38.560
第一个关键帧是0%

03:38.560 --> 03:39.560
第二关键帧25%

03:39.560 --> 03:40.560
一共5个是吧

03:40.560 --> 03:41.560
然后50%

03:41.560 --> 03:44.560
那无疑是从0%到100%是吧

03:44.560 --> 03:46.560
你不能再多写了

03:46.560 --> 03:48.560
但看你关键帧数量多于少

03:48.560 --> 03:49.560
比如说你这个动画比较复杂

03:49.560 --> 03:50.560
有很多恶关键帧

03:50.560 --> 03:51.560
你可以从0%

03:51.560 --> 03:52.560
12%

03:52.560 --> 03:53.560
31%的100%都可以

03:53.560 --> 03:55.560
甚至说1.1%都可以

03:55.560 --> 03:56.560
当然咱们这块没多少

03:56.560 --> 03:58.560
咱就给它关键帧平衡一下

03:58.560 --> 03:59.560
平衡成5份是吧

03:59.560 --> 04:00.560
然后呢

04:00.560 --> 04:01.560
我们让这个

04:01.560 --> 04:02.560
为了让它能动

04:02.560 --> 04:03.560
是不是先给它加一个Position

04:03.560 --> 04:04.560
absolute是吧

04:04.560 --> 04:05.560
然后呢

04:05.560 --> 04:07.560
在里面定一些关键帧的一个状态

04:07.560 --> 04:08.560
第一个状态

04:08.560 --> 04:09.560
最初始的状态

04:09.560 --> 04:10.560
我想给的定的

04:10.560 --> 04:12.560
最初始的这个位置是吧

04:12.560 --> 04:13.560
然后第二个状态

04:13.560 --> 04:14.560
是不相优平仪

04:14.560 --> 04:15.560
那相优平仪的话

04:15.560 --> 04:16.560
就是Live100消速TOP零拜

04:16.560 --> 04:18.560
这是Position的Live和TOP是吧

04:18.560 --> 04:19.560
然后呢

04:19.560 --> 04:20.560
这个是不相下

04:20.560 --> 04:21.560
相下的话是不Live不变

04:21.560 --> 04:22.560
然后TOP100是吧

04:22.560 --> 04:23.560
然后这个呢

04:23.560 --> 04:24.560
相左

04:24.560 --> 04:26.560
相左的话是不是Live变成0

04:26.560 --> 04:27.560
然后TOP变成

04:27.560 --> 04:28.560
还是保持100是吧

04:28.560 --> 04:30.560
最终回到原始状态

04:30.560 --> 04:31.560
是不是变成0和0

04:31.560 --> 04:32.560
哎

04:32.560 --> 04:34.560
那这个咱们想运动的轨迹

04:34.560 --> 04:36.560
是不是就已经定一完了是吧

04:36.560 --> 04:37.560
运动的这样一个状态的轨迹

04:37.560 --> 04:38.560
是不是定一完了

04:38.560 --> 04:39.560
在关键帧里面

04:39.560 --> 04:40.560
而且按照咱们的顺序

04:40.560 --> 04:41.560
是不是从小到大

04:41.560 --> 04:43.560
去拿咱们的一个百分比

04:43.560 --> 04:44.560
去定义一个这样的一个顺序啊

04:44.560 --> 04:46.560
定义一个运动的一个顺序

04:46.560 --> 04:47.560
然后从小到大

04:47.560 --> 04:48.560
咱们来执行了是吧

04:48.560 --> 04:49.560
那咱们现在呢

04:49.560 --> 04:50.560
想让Animation属性

04:50.560 --> 04:51.560
来读取这个关键帧

04:51.560 --> 04:52.560
来运行的话

04:52.560 --> 04:53.560
咱们来做呢

04:53.560 --> 04:54.560
来情况写一个Animation

04:54.560 --> 04:55.560
是吧

04:55.560 --> 04:56.560
然后现在想读取这个关键帧

04:56.560 --> 04:57.560
那怎么跟那个关键帧建立的人心呢

04:57.560 --> 04:58.560
关键帧有个名字

04:58.560 --> 04:59.560
读一弯的是吧

04:59.560 --> 05:00.560
咱们把这个名字

05:00.560 --> 05:01.560
就可以了

05:01.560 --> 05:02.560
乱一下是吧

05:02.560 --> 05:03.560
然后呢

05:03.560 --> 05:04.560
就读取这个关键帧了

05:04.560 --> 05:05.560
按照关键帧里面

05:05.560 --> 05:06.560
定一个顺序来执行

05:06.560 --> 05:07.560
然后最后呢

05:07.560 --> 05:08.560
这块再写一个运动的时间

05:08.560 --> 05:09.560
比如写一个Duration

05:09.560 --> 05:10.560
4秒就可以了

05:10.560 --> 05:12.560
那现在保存一下刷新

05:12.560 --> 05:13.560
它就可以来运动了

05:13.560 --> 05:14.560
你看看到是不是

05:14.560 --> 05:16.560
它会按照咱们定义的顺序

05:16.560 --> 05:17.560
去执行这样的一个动画

05:17.560 --> 05:18.560
什么有问题的吧

05:18.560 --> 05:19.560
走的是不是

05:19.560 --> 05:20.560
都是咱们定义好的

05:20.560 --> 05:21.560
这些个帧

05:21.560 --> 05:22.560
第一个状态

05:22.560 --> 05:23.560
第二个状态

05:23.560 --> 05:24.560
第三个状态

05:24.560 --> 05:25.560
第四个状态

05:25.560 --> 05:26.560
第五个状态

05:26.560 --> 05:27.560
是我们的问题

05:27.560 --> 05:28.560
是啥

05:28.560 --> 05:30.560
首先说这个关键帧容器

05:30.560 --> 05:31.560
keyframes

05:31.560 --> 05:32.560
是一个固定的写法

05:32.560 --> 05:33.560
这个不用升级

05:33.560 --> 05:34.560
后面自定义名字

05:34.560 --> 05:35.560
也不用升级

05:35.560 --> 05:36.560
里面呢

05:36.560 --> 05:38.560
关键帧都是用百分数来定义的

05:38.560 --> 05:40.560
也只能写成百分数的形式

05:40.560 --> 05:41.560
还有一些特殊写法

05:41.560 --> 05:42.560
一会儿再讲

05:43.560 --> 05:44.560
然后呢

05:44.560 --> 05:45.560
这个百分数是什么意思

05:45.560 --> 05:46.560
你看你会发现

05:46.560 --> 05:48.560
我们这一个运动

05:48.560 --> 05:50.560
是不是一个完整的动画

05:50.560 --> 05:51.560
这个完整的动画

05:51.560 --> 05:52.560
是不是耗时

05:52.560 --> 05:53.560
是咱们Duration写的4秒钟

05:53.560 --> 05:54.560
你可以查一下是吧

05:54.560 --> 05:56.560
完整的动画耗时4秒

05:56.560 --> 05:57.560
那么每一段动画

05:57.560 --> 05:58.560
从一个状态

05:58.560 --> 05:59.560
改变到另一个状态

05:59.560 --> 06:00.560
用时多少秒呢

06:00.560 --> 06:01.560
怎么来计算呢

06:01.560 --> 06:03.560
用时多少秒

06:03.560 --> 06:04.560
就是我们百分数

06:04.560 --> 06:06.560
让它占了多少分量

06:06.560 --> 06:07.560
它来分割的

06:07.560 --> 06:08.560
那这个百分数

06:08.560 --> 06:09.560
就是用来分割

06:09.560 --> 06:10.560
咱们的执行时间的

06:10.560 --> 06:11.560
明白有意思吗

06:11.560 --> 06:13.560
比如说咱们执行时间是4秒

06:13.560 --> 06:14.560
从第一个状态

06:14.560 --> 06:15.560
改变到第二个状态

06:15.560 --> 06:16.560
一共用了多少个百分数

06:16.560 --> 06:17.560
是用了25%的数

06:17.560 --> 06:18.560
是吧

06:18.560 --> 06:19.560
那我们也就是说

06:19.560 --> 06:20.560
从第一个状态

06:20.560 --> 06:21.560
运动的第二个状态

06:21.560 --> 06:22.560
占了四分之一的时间

06:22.560 --> 06:23.560
那四秒的四分之一

06:23.560 --> 06:24.560
是一秒是吧

06:24.560 --> 06:25.560
那一字类推

06:25.560 --> 06:26.560
是不是每个都是一秒

06:26.560 --> 06:27.560
一共就四段动画

06:27.560 --> 06:28.560
是吧

06:28.560 --> 06:29.560
那这样是不是这个

06:29.560 --> 06:31.560
这个百分数就好解释了是吧

06:31.560 --> 06:32.560
这块也只能填百分数

06:32.560 --> 06:33.560
注意

06:33.560 --> 06:34.560
没有多号什么的

06:34.560 --> 06:35.560
没有多号

06:35.560 --> 06:36.560
填多号执行不了了

06:37.560 --> 06:38.560
这是第一个属性

06:38.560 --> 06:39.560
啊

06:39.560 --> 06:40.560
这块添一个关键帧容器

06:40.560 --> 06:41.560
那这块呢

06:41.560 --> 06:42.560
就是Animation

06:42.560 --> 06:45.560
AnimationMame了吧

06:45.560 --> 06:46.560
是吧

06:46.560 --> 06:47.560
就第一个属性值

06:47.560 --> 06:48.560
是我给大家讲完了

06:48.560 --> 06:49.560
AnimationMame

06:49.560 --> 06:50.560
这块添一个关键帧

06:50.560 --> 06:51.560
当然了

06:51.560 --> 06:52.560
我们可以定义很多个关键帧

06:52.560 --> 06:53.560
比如说1,1,2都可以

06:53.560 --> 06:54.560
在里面的比如说0%

06:54.560 --> 06:55.560
是吧

06:55.560 --> 06:56.560
100%

06:56.560 --> 06:57.560
这块写一个

06:57.560 --> 06:58.560
比如说0,0

06:58.560 --> 06:59.560
然后呢

06:59.560 --> 07:00.560
终止状态

07:00.560 --> 07:01.560
比如说100

07:01.560 --> 07:02.560
我就定义两个关键帧

07:02.560 --> 07:03.560
是吧

07:03.560 --> 07:04.560
因为它就两个状态

07:04.560 --> 07:05.560
从一个处置状态

07:05.560 --> 07:06.560
变成一个终止状态

07:06.560 --> 07:07.560
状态

07:07.560 --> 07:08.560
比如说100相做

07:08.560 --> 07:09.560
然后呢

07:09.560 --> 07:10.560
这块是200

07:10.560 --> 07:11.560
然后它运动的状态

07:11.560 --> 07:12.560
是不是就从一开始的

07:12.560 --> 07:13.560
处置状态

07:13.560 --> 07:14.560
然后往终止状态

07:14.560 --> 07:15.560
去运动

07:15.560 --> 07:16.560
小心啊

07:16.560 --> 07:17.560
比如说保存

07:17.560 --> 07:18.560
保存

07:18.560 --> 07:19.560
我看看啊

07:20.560 --> 07:21.560
我让它变成1

07:21.560 --> 07:22.560
是吧

07:22.560 --> 07:23.560
保存

07:23.560 --> 07:24.560
刷新

07:24.560 --> 07:25.560
它执行的就是万一

07:25.560 --> 07:26.560
是吧

07:26.560 --> 07:27.560
万一

07:27.560 --> 07:28.560
你看执行完了之后

07:28.560 --> 07:29.560
是不是变得最终状态了

07:29.560 --> 07:30.560
然后执行完了之后

07:30.560 --> 07:31.560
这个动画结束了

07:31.560 --> 07:33.560
是不是得让人一个元素

07:33.560 --> 07:34.560
回归到原始的状态里面去

07:34.560 --> 07:35.560
是吧

07:35.560 --> 07:36.560
回归到最开始的

07:36.560 --> 07:37.560
才没有执行动画的状态

07:37.560 --> 07:38.560
是吧

07:38.560 --> 07:39.560
现在执行的是万一

07:39.560 --> 07:40.560
有这块你写谁

07:40.560 --> 07:41.560
你可以定义多个关键帧

07:41.560 --> 07:42.560
你

07:42.560 --> 07:43.560
但是你执行

07:43.560 --> 07:44.560
只能执行一个关键帧

07:44.560 --> 07:45.560
明白我意思吧

07:45.560 --> 07:46.560
所以你刷新

07:46.560 --> 07:47.560
啊

07:47.560 --> 07:48.560
是变到这了

07:48.560 --> 07:49.560
OK

07:49.560 --> 07:50.560
没有问题吧

07:50.560 --> 07:52.560
那咱们再来说一下

07:52.560 --> 07:53.560
这个keyframes的一些

07:53.560 --> 07:54.560
写法的问题

07:54.560 --> 07:56.560
这个keyframes

07:56.560 --> 07:57.560
其实还有一个

07:57.560 --> 07:58.560
另一种写法

07:58.560 --> 07:59.560
就是一个百分数吧

07:59.560 --> 08:00.560
有两个百分数

08:00.560 --> 08:01.560
可以换成其他东西

08:01.560 --> 08:02.560
百分之零

08:02.560 --> 08:03.560
可以换成from

08:03.560 --> 08:04.560
记住啊

08:04.560 --> 08:05.560
只有百分之零的换成from

08:05.560 --> 08:06.560
然后呢

08:06.560 --> 08:07.560
这个百分之百

08:07.560 --> 08:08.560
可以换成to

08:08.560 --> 08:09.560
用这种形式来表示

08:09.560 --> 08:10.560
就是混乱形的写法

08:10.560 --> 08:11.560
from和to

08:11.560 --> 08:12.560
这块呢

08:12.560 --> 08:13.560
就可以变成什么呢

08:13.560 --> 08:14.560
变成from了

08:14.560 --> 08:15.560
一样的

08:15.560 --> 08:16.560
这块变成to

08:16.560 --> 08:17.560
如果你不喜欢

08:17.560 --> 08:18.560
用这样的形式

08:18.560 --> 08:19.560
你就用百分数都行

08:19.560 --> 08:20.560
不好意思

08:20.560 --> 08:21.560
没有只有from和to

08:21.560 --> 08:22.560
甚至说你可以混在一起

08:22.560 --> 08:23.560
前面from这块百分之百

08:23.560 --> 08:24.560
没有问题

08:24.560 --> 08:26.560
from就是用来代替百分之零的

08:26.560 --> 08:27.560
to就用来代替百分之百了

08:27.560 --> 08:28.560
没有问题吧

08:28.560 --> 08:29.560
同学们

08:29.560 --> 08:30.560
这块也OK了

08:30.560 --> 08:31.560
好

08:31.560 --> 08:32.560
然后呢

08:32.560 --> 08:33.560
这一块

08:33.560 --> 08:34.560
用关键帧

08:34.560 --> 08:35.560
这一块

08:35.560 --> 08:37.560
其实给一个元素

08:37.560 --> 08:39.560
可以用多个动画

08:39.560 --> 08:40.560
比如说成个

08:40.560 --> 08:42.560
难道他就非得执行

08:42.560 --> 08:43.560
这样的一个

08:43.560 --> 08:44.560
运动吗

08:44.560 --> 08:45.560
比如我在运动的时候

08:45.560 --> 08:47.560
我还想让他改变一下color

08:47.560 --> 08:48.560
能不能办到呢

08:48.560 --> 08:49.560
能办到

08:49.560 --> 08:50.560
怎么来办呢

08:50.560 --> 08:51.560
如果说你觉得

08:51.560 --> 08:52.560
上面这个关键帧

08:52.560 --> 08:53.560
分割的方式

08:53.560 --> 08:54.560
不太合你的意的话

08:54.560 --> 08:56.560
你可以再添一个关键帧

08:56.560 --> 08:57.560
可以让一个元素执行

08:57.560 --> 08:58.560
两个关键帧

08:58.560 --> 08:59.560
当然你也可以写到

08:59.560 --> 09:00.560
一个关键帧里面去

09:00.560 --> 09:01.560
比如说现在这样

09:01.560 --> 09:02.560
然后让这个关键帧

09:02.560 --> 09:03.560
变成什么呢

09:03.560 --> 09:04.560
比如说白光color

09:04.560 --> 09:06.560
一开始是红色是吧

09:06.560 --> 09:08.560
第一帧最好和

09:08.560 --> 09:10.560
这个原始状态保持一样的

09:10.560 --> 09:11.560
第一个红色

09:11.560 --> 09:12.560
然后呢

09:12.560 --> 09:13.560
第二帧

09:13.560 --> 09:14.560
你可以变成什么

09:14.560 --> 09:15.560
变成绿色是吧

09:15.560 --> 09:16.560
然后第三帧

09:16.560 --> 09:17.560
变成什么

09:17.560 --> 09:19.560
变成这个黑色是吧

09:19.560 --> 09:21.560
然后最后变成什么蓝色

09:21.560 --> 09:23.560
啊最后变成什么

09:23.560 --> 09:25.560
变成这个

09:25.560 --> 09:26.560
Pink是吧

09:26.560 --> 09:27.560
保存刷新啊

09:27.560 --> 09:28.560
你会看到

09:28.560 --> 09:31.000
哎呀

09:31.000 --> 09:32.000
刷新啊

09:32.000 --> 09:33.000
我看哪块写的有问题是吧

09:33.000 --> 09:36.000
哪块写的有问题呢

09:36.000 --> 09:37.000
Front保存

09:37.000 --> 09:39.000
我看看

09:39.000 --> 09:41.000
多保存了一下

09:41.000 --> 09:42.000
多保存一下

09:42.000 --> 09:43.000
然后刷新啊

09:43.000 --> 09:44.000
应该是没什么开的

09:44.000 --> 09:45.000
哎我看看

09:45.000 --> 09:46.000
哪块写的有问题

09:46.000 --> 09:47.000
咱们调一下

09:47.000 --> 09:48.000
这不是啥大问题啊

09:49.000 --> 09:50.000
来

09:51.000 --> 09:52.000
嗯

09:52.000 --> 09:53.000
我的

09:53.000 --> 09:54.000
我的DIV呢

09:54.000 --> 09:55.000
啊

09:55.000 --> 09:56.000
没有DIV是吧

09:56.000 --> 09:57.000
保存啊

09:57.000 --> 09:58.000
刷新啊

09:58.000 --> 09:59.000
把DIV给去了是吧

09:59.000 --> 10:00.000
然后你能看到啊

10:00.000 --> 10:02.000
是不是他在运动的时候

10:02.000 --> 10:03.000
会把这些东西结合起来

10:03.000 --> 10:04.000
你看啊

10:04.000 --> 10:05.000
第一个状态变第二状态

10:05.000 --> 10:06.000
第三个状态

10:06.000 --> 10:07.000
最终状态

10:07.000 --> 10:08.000
然后还原是吧

10:08.000 --> 10:09.000
然后还原啊

10:09.000 --> 10:10.000
就是这样了

10:10.000 --> 10:11.000
你可以这么来写

10:11.000 --> 10:12.000
当然了

10:12.000 --> 10:13.000
你也可以换种写法

10:13.000 --> 10:14.000
比如不写这些个东西

10:14.000 --> 10:16.000
不写这些东西

10:17.000 --> 10:18.000
把这一干掉

10:18.000 --> 10:19.000
是吧

10:19.000 --> 10:20.000
这整个

10:20.000 --> 10:21.000
我就想换一种动画

10:21.000 --> 10:22.000
跟它并行的啊

10:22.000 --> 10:23.000
不写到这里面的

10:23.000 --> 10:25.000
比如说两个关键帧

10:25.000 --> 10:26.000
同时做到一个

10:26.000 --> 10:28.000
元素上能不能做到呢

10:28.000 --> 10:29.000
可以啊

10:29.000 --> 10:30.000
可以

10:30.000 --> 10:31.000
比如说我再设置一下

10:31.000 --> 10:32.000
Color Change

10:32.000 --> 10:33.000
好吧

10:33.000 --> 10:34.000
Color Change

10:34.000 --> 10:35.000
然后呢

10:35.000 --> 10:36.000
从第零个关键帧

10:36.000 --> 10:37.000
然后呢

10:37.000 --> 10:38.000
变到

10:38.000 --> 10:40.000
第六十个关键帧是吧

10:40.000 --> 10:41.000
啊

10:41.000 --> 10:42.000
变到第六十个

10:42.000 --> 10:43.000
百分比的关键帧

10:43.000 --> 10:44.000
然后再变到

10:44.000 --> 10:46.000
100个百分比的关键帧

10:46.000 --> 10:47.000
如果你看这么来

10:47.000 --> 10:48.000
风格的话

10:48.000 --> 10:49.000
比如说这三状态

10:49.000 --> 10:50.000
第一个状态变到

10:50.000 --> 10:51.000
第二个状态

10:51.000 --> 10:52.000
用时是60%的时间

10:52.000 --> 10:53.000
是吧

10:53.000 --> 10:54.000
所以说你添到这里面

10:54.000 --> 10:55.000
是不是不太合适了

10:55.000 --> 10:56.000
是吧

10:56.000 --> 10:57.000
因为没有那么风格

10:57.000 --> 10:58.000
是吧

10:58.000 --> 10:59.000
风格形式不一样的话

10:59.000 --> 11:00.000
你可以把它拆出来

11:00.000 --> 11:01.000
就是第1个

11:01.000 --> 11:02.000
白光Color Red

11:02.000 --> 11:03.000
从Red变到蓝色呢

11:03.000 --> 11:04.000
用时是60%的时间

11:04.000 --> 11:05.000
是吧

11:05.000 --> 11:06.000
变到蓝色

11:06.000 --> 11:07.000
是吧

11:07.000 --> 11:08.000
这个不露

11:08.000 --> 11:09.000
然后呢

11:09.000 --> 11:10.000
从不露变到最终的

11:10.000 --> 11:11.000
黑色啊

11:11.000 --> 11:12.000
用时呢

11:12.000 --> 11:13.000
是40%的时间

11:13.000 --> 11:14.000
风格方式跟上一个不一样

11:14.000 --> 11:15.000
我就完全有理由

11:15.000 --> 11:16.000
把它拆出来写啊

11:16.000 --> 11:17.000
然后在这块呢

11:17.000 --> 11:18.000
你要写个斗号

11:18.000 --> 11:19.000
斗号写另一个关键帧

11:19.000 --> 11:21.000
比如说Color Change

11:21.000 --> 11:22.000
哎

11:22.000 --> 11:23.000
然后呢

11:23.000 --> 11:25.000
它就会并行的啊

11:25.000 --> 11:26.000
把这两个

11:26.000 --> 11:27.000
同时去运动

11:27.000 --> 11:29.000
不会说先运动第1个

11:29.000 --> 11:30.000
不会说先运动这个

11:30.000 --> 11:31.000
再运动这个啊

11:31.000 --> 11:32.000
它是并行的

11:32.000 --> 11:33.000
那东西是吧

11:33.000 --> 11:34.000
并行的

11:34.000 --> 11:35.000
当然看你这个秒数

11:35.000 --> 11:36.000
多少了

11:36.000 --> 11:37.000
你要一个给4秒

11:37.000 --> 11:38.000
一个给3秒

11:38.000 --> 11:39.000
那4秒的肯定是

11:39.000 --> 11:40.000
后玩事

11:40.000 --> 11:41.000
3秒肯定先玩

11:41.000 --> 11:42.000
那东西是吧

11:42.000 --> 11:43.000
你能不送到他自个身上的

11:43.000 --> 11:44.000
能看到吧

11:44.000 --> 11:45.000
这是可以的

11:45.000 --> 11:46.000
但是这个东西

11:46.000 --> 11:47.000
你自己来调控吧

11:47.000 --> 11:48.000
我告诉你

11:48.000 --> 11:49.000
可以可以来这么写

11:49.000 --> 11:50.000
有没有意思吧

11:50.000 --> 11:51.000
ok

11:51.000 --> 11:52.000
tframes呢

11:52.000 --> 11:53.000
没有什么太多

11:53.000 --> 11:54.000
其他的东西了

11:54.000 --> 11:55.000
再有吧

11:55.000 --> 11:56.000
就是它一个兼容性的问题

11:56.000 --> 11:57.000
我给大家看一下啊

11:58.000 --> 11:59.000
兼容性的问题

11:59.000 --> 12:00.000
给大家看一下

12:00.000 --> 12:01.000
tframes在哪

12:01.000 --> 12:02.000
tframes呢

12:02.000 --> 12:03.000
它在余法与规则里面

12:03.000 --> 12:04.000
rose

12:04.000 --> 12:05.000
里面有tframes

12:05.000 --> 12:06.000
是的

12:06.000 --> 12:07.000
然后你往下拽啊

12:07.000 --> 12:08.000
你看from2

12:08.000 --> 12:09.000
形式是不是跟你讲了

12:09.000 --> 12:10.000
都没都没问题吧

12:10.000 --> 12:11.000
是吧

12:11.000 --> 12:12.000
然后呢

12:12.000 --> 12:13.000
太过兼容性的问题

12:13.000 --> 12:14.000
大家看一下啊

12:14.000 --> 12:15.000
基本上所有的

12:15.000 --> 12:16.000
过渡版本的浏览器

12:16.000 --> 12:17.000
都需要加这个潜质

12:17.000 --> 12:18.000
是吧

12:18.000 --> 12:19.000
除了这个ie

12:19.000 --> 12:20.000
这个10.0

12:20.000 --> 12:21.000
i10.0过渡吧

12:21.000 --> 12:22.000
因为现在是a是吧

12:22.000 --> 12:23.000
啊

12:23.000 --> 12:24.000
其实呢

12:24.000 --> 12:25.000
你是过渡版本

12:25.000 --> 12:26.000
现在这个谷歌

12:26.000 --> 12:27.000
已经70.0了是吧

12:27.000 --> 12:28.000
所以说我这块

12:28.000 --> 12:29.000
不写版pid是没问题的

12:29.000 --> 12:30.000
但是最好你在编程

12:30.000 --> 12:31.000
实单开发里面是写的

12:31.000 --> 12:32.000
练习可以不写

12:32.000 --> 12:33.000
实单开发必须写

12:33.000 --> 12:34.000
你要知道怎么写

12:34.000 --> 12:35.000
在这块加版pid

12:35.000 --> 12:37.000
然后你最好再加一个

12:37.000 --> 12:38.000
怎么的

12:38.000 --> 12:39.000
加一个

12:39.000 --> 12:40.000
比如说

12:40.000 --> 12:41.000
加的是吧

12:41.000 --> 12:42.000
然后再加一个是吧

12:42.000 --> 12:43.000
再加一个

12:43.000 --> 12:44.000
这个modeleer

12:44.000 --> 12:45.000
是吧

12:45.000 --> 12:46.000
然后再加上

12:46.000 --> 12:47.000
都加上pvm

12:47.000 --> 12:48.000
然后统一都定义成乱

12:48.000 --> 12:49.000
计划来个乱

12:49.000 --> 12:50.000
是吧

12:50.000 --> 12:51.000
属性这一幅

12:51.000 --> 12:52.000
完了是吧

12:52.000 --> 12:53.000
咱们上课呢

12:53.000 --> 12:54.000
为了方便

12:54.000 --> 12:55.000
我就先跟你说一下

12:55.000 --> 12:56.000
这东西到底怎么用

12:56.000 --> 12:57.000
然后呢

12:57.000 --> 12:58.000
咱就拿一个干净来写

12:58.000 --> 12:59.000
就可以了

12:59.000 --> 13:00.000
用到一算

13:00.000 --> 13:01.000
这是pvm

13:01.000 --> 13:02.000
完事

13:02.000 --> 13:03.000
然后呢

13:03.000 --> 13:04.000
来接着讲

13:04.000 --> 13:05.000
接着讲第三个属性

13:05.000 --> 13:06.000
就是咱们那个

13:07.000 --> 13:08.000
哪去吗

13:08.000 --> 13:09.000
我先找一找

13:09.000 --> 13:10.000
怎么呢

13:10.000 --> 13:11.000
讲这个谈命方式

13:11.000 --> 13:12.000
谈命方式呢

13:12.000 --> 13:13.000
跟那个一样的

13:13.000 --> 13:14.000
也有一些这个

13:14.000 --> 13:15.000
讲话的值是吧

13:15.000 --> 13:17.000
代表这个三次必材曲线这个值

13:17.000 --> 13:18.000
这些值呢

13:18.000 --> 13:19.000
你可以直接来写

13:19.000 --> 13:20.000
也可以写这个必材曲线是吧

13:20.000 --> 13:21.000
然后呢

13:21.000 --> 13:22.000
现在我想要运动状态的是

13:22.000 --> 13:23.000
先慢

13:23.000 --> 13:24.000
后快

13:24.000 --> 13:25.000
再慢是吧

13:25.000 --> 13:26.000
然后呢怎么来写呢

13:26.000 --> 13:27.000
就pubic

13:27.000 --> 13:28.000
pubic是吧

13:28.000 --> 13:29.000
vizir

13:29.000 --> 13:30.000
既然说咱们学了

13:30.000 --> 13:31.000
咱就多用是吧

13:31.000 --> 13:32.000
先慢后快再慢

13:32.000 --> 13:33.000
怎么来写呢

13:33.000 --> 13:34.000
就是定一个

13:34.000 --> 13:35.000
第一个点

13:35.000 --> 13:36.000
是.50是吧

13:36.000 --> 13:37.000
第二个点呢

13:37.000 --> 13:38.000
是.51

13:38.000 --> 13:39.000
后快再慢了

13:39.000 --> 13:40.000
然后刷新一下

13:40.000 --> 13:41.000
咱们来看一下

13:41.000 --> 13:42.000
我想大家看的是什么呢

13:42.000 --> 13:43.000
比如说

13:43.000 --> 13:44.000
现在看一下

13:44.000 --> 13:45.000
现在开有运动状态了

13:46.000 --> 13:47.000
保存

13:48.000 --> 13:49.000
这个保存

13:49.000 --> 13:50.000
保存

13:50.000 --> 13:51.000
我刚才是没保存吗

13:51.000 --> 13:52.000
还是哪块写错了是吧

13:52.000 --> 13:53.000
保存一下

13:53.000 --> 13:54.000
有运动状态了

13:54.000 --> 13:55.000
然后DIV

13:55.000 --> 13:56.000
刷新

13:56.000 --> 13:58.000
怎么不好使啊

13:58.000 --> 13:59.000
那里面是哪块写错了

13:59.000 --> 14:00.000
pubic vizir

14:00.000 --> 14:01.000
是不是写错了

14:01.000 --> 14:02.000
vizir

14:02.000 --> 14:03.000
是不是写错了

14:03.000 --> 14:04.000
IE

14:04.000 --> 14:05.000
是吧

14:05.000 --> 14:06.000
vizir

14:06.000 --> 14:07.000
刷新

14:07.000 --> 14:08.000
它有了一个运动状态

14:08.000 --> 14:10.000
但可能现在你看不懂

14:10.000 --> 14:11.000
或者说你看不明白

14:11.000 --> 14:13.000
这个运动状态到底指的是

14:13.000 --> 14:15.000
你一个完整的动画的一个运动状态

14:15.000 --> 14:17.000
还是说分阶段的

14:17.000 --> 14:19.000
每一个状态的改变的运动状态

14:19.000 --> 14:21.000
咱是不是想探究一下这个问题

14:21.000 --> 14:23.000
比如说你现在运动状态是定义给

14:23.000 --> 14:25.000
每一个运动的段的

14:25.000 --> 14:26.000
还是说定义到完整的运动的

14:26.000 --> 14:27.000
是吧

14:27.000 --> 14:28.000
咱怎么着呢

14:28.000 --> 14:29.000
咱先看一下

14:29.000 --> 14:30.000
这是不是先快后慢

14:30.000 --> 14:31.000
再慢

14:31.000 --> 14:32.000
先慢后快再慢

14:32.000 --> 14:33.000
是吧

14:33.000 --> 14:34.000
是吧

14:34.000 --> 14:35.000
咱写的vizir曲线是没问题的

14:35.000 --> 14:36.000
那咱现在改一下

14:36.000 --> 14:37.000
咱现在要变什么呢

14:37.000 --> 14:38.000
变成先快后慢

14:38.000 --> 14:39.000
是不是就会能看出来

14:39.000 --> 14:41.000
每次都是一个这样的一个

14:41.000 --> 14:43.000
就是怎么说呢

14:43.000 --> 14:44.000
每次都是一个刹车运动

14:44.000 --> 14:45.000
是吧

14:45.000 --> 14:46.000
每次都是一个刹车运动

14:46.000 --> 14:47.000
那先快后慢

14:47.000 --> 14:48.000
是不是一开始

14:48.000 --> 14:49.000
我这个比如说点5

14:49.000 --> 14:52.000
然后放到来一个y的话

14:52.000 --> 14:53.000
就是1是吧

14:53.000 --> 14:54.000
然后这个呢

14:54.000 --> 14:55.000
是以第二空的点

14:55.000 --> 14:56.000
不让它动了

14:56.000 --> 14:57.000
所以这肯定是一个

14:57.000 --> 14:58.000
看一下这样的一个曲线

14:58.000 --> 14:59.000
先看曲线

14:59.000 --> 15:00.000
看这

15:00.000 --> 15:01.000
是不是肯定是一个先快后慢的运动

15:01.000 --> 15:02.000
是吧

15:02.000 --> 15:03.000
然后咱来看一下

15:03.000 --> 15:04.000
这个动画怎么运动的

15:04.000 --> 15:05.000
刷新

15:05.000 --> 15:06.000
哎

15:06.000 --> 15:07.000
你会看到是不是

15:07.000 --> 15:08.000
每一段里面

15:08.000 --> 15:09.000
都是一个先快后慢

15:09.000 --> 15:10.000
你看先快后慢

15:10.000 --> 15:11.000
先快后慢

15:11.000 --> 15:12.000
先快后慢

15:12.000 --> 15:13.000
是吧

15:13.000 --> 15:14.000
所以每一段都是

15:14.000 --> 15:15.000
以这样的运动状态来完成的

15:15.000 --> 15:16.000
所以说这个

15:16.000 --> 15:18.000
Timing Function

15:18.000 --> 15:19.000
它定义的

15:19.000 --> 15:20.000
是这个动画的

15:20.000 --> 15:21.000
每一段的运动状态

15:21.000 --> 15:22.000
而不是完整的运动状态

15:22.000 --> 15:23.000
能懂我意思吧

15:23.000 --> 15:24.000
所以这个问题

15:24.000 --> 15:25.000
这个疑问咱先解决

15:25.000 --> 15:26.000
然后呢

15:26.000 --> 15:27.000
给大家说一下

15:27.000 --> 15:28.000
其实这一块

15:28.000 --> 15:29.000
就看出来

15:29.000 --> 15:30.000
这个C3动画的一个缺陷了

15:30.000 --> 15:31.000
可能说你看这块

15:31.000 --> 15:32.000
挺强大的是吧

15:32.000 --> 15:33.000
每一段这样的

15:33.000 --> 15:34.000
但是现在我想要什么呢

15:34.000 --> 15:35.000
不一样

15:35.000 --> 15:37.000
这个就是办不到了

15:37.000 --> 15:38.000
这个就是C3

15:38.000 --> 15:39.000
Animation办不到了

15:39.000 --> 15:40.000
所以说这块

15:40.000 --> 15:41.000
你要是动画灵活性吧

15:41.000 --> 15:42.000
它还不是那么

15:42.000 --> 15:43.000
特别灵活

15:43.000 --> 15:44.000
就说挺粗糙的

15:44.000 --> 15:45.000
它必须得要

15:45.000 --> 15:46.000
每一段运动状态

15:46.000 --> 15:47.000
都是一样的

15:47.000 --> 15:48.000
如果你想要

15:48.000 --> 15:49.000
每一段运动状态

15:49.000 --> 15:50.000
不一样的话

15:50.000 --> 15:51.000
你只能配合JS

15:51.000 --> 15:52.000
配合JS来改变了

15:52.000 --> 15:53.000
到这个状态

15:53.000 --> 15:54.000
什么样的

15:54.000 --> 15:55.000
到下一个状态

15:55.000 --> 15:56.000
改变一下这个Animation

15:56.000 --> 15:57.000
就只能这样了

15:57.000 --> 15:58.000
那就得不偿使的

15:58.000 --> 15:59.000
那你用蠢贼身

15:59.000 --> 16:00.000
也能实现

16:00.000 --> 16:01.000
换句话说

16:01.000 --> 16:02.000
你用这个JS

16:02.000 --> 16:03.000
配合C3

16:03.000 --> 16:05.000
SVG也是可以的

16:05.000 --> 16:06.000
就说这块

16:06.000 --> 16:07.000
就是不太强大了

16:07.000 --> 16:08.000
当然还有一些

16:08.000 --> 16:09.000
不太强大的地方

16:09.000 --> 16:10.000
你看现在的运动轨迹

16:10.000 --> 16:11.000
是不是只限了

16:11.000 --> 16:12.000
能够实现吗

16:12.000 --> 16:13.000
当有一天

16:13.000 --> 16:14.000
比如说咱们

16:14.000 --> 16:15.000
想玩点花花的

16:15.000 --> 16:16.000
玩点花样的

16:16.000 --> 16:17.000
想实现一个曲线的

16:17.000 --> 16:18.000
不规律的

16:18.000 --> 16:20.000
曲线的一个运动轨迹

16:20.000 --> 16:21.000
这个东西在C3

16:21.000 --> 16:22.000
纯C3里面

16:22.000 --> 16:23.000
你想实现

16:23.000 --> 16:24.000
几乎是不可能的

16:24.000 --> 16:25.000
很难办到

16:25.000 --> 16:26.000
这个也是办不到的

16:26.000 --> 16:27.000
但是这样的一个东西

16:27.000 --> 16:29.000
放到Flash里面

16:29.000 --> 16:30.000
或者说给SVG

16:30.000 --> 16:31.000
它实现起来

16:31.000 --> 16:32.000
就是比较容易

16:32.000 --> 16:34.000
或者说你配合JS

16:34.000 --> 16:35.000
写一个复杂的数学函数

16:35.000 --> 16:36.000
也是能实现的

16:36.000 --> 16:37.000
是吧

16:37.000 --> 16:38.000
那你存打C3来实现

16:38.000 --> 16:39.000
那你就定义

16:39.000 --> 16:40.000
无数的关键证

16:40.000 --> 16:41.000
一点点实现

16:41.000 --> 16:42.000
逐针动画的

16:42.000 --> 16:43.000
那不恶心死

16:43.000 --> 16:44.000
实现一个这样曲线运动

16:44.000 --> 16:45.000
不得好久办法

16:45.000 --> 16:46.000
是吧

16:46.000 --> 16:47.000
所以说

16:47.000 --> 16:48.000
这个东西

16:48.000 --> 16:49.000
C3还是有它的曲线性的

16:49.000 --> 16:50.000
就是给大家说一下

16:50.000 --> 16:51.000
但是基本上

16:51.000 --> 16:52.000
它能给咱们

16:52.000 --> 16:53.000
提供的一个方法

16:53.000 --> 16:54.000
功能也够咱们使的

16:54.000 --> 16:55.000
明白我意思吗

16:55.000 --> 16:56.000
然后还可以

16:56.000 --> 16:57.000
添一个属性

16:57.000 --> 16:58.000
叫这个什么

16:58.000 --> 16:59.000
Animation Delay

16:59.000 --> 17:00.000
delay

17:00.000 --> 17:01.000
就是等多少时间

17:01.000 --> 17:02.000
然后再执行动画的意思

17:02.000 --> 17:03.000
是吧

17:03.000 --> 17:04.000
等一秒再执行

17:04.000 --> 17:05.000
等一秒然后再开始

17:05.000 --> 17:06.000
是吧

17:06.000 --> 17:07.000
OK

17:07.000 --> 17:08.000
这个什么有问题的

17:08.000 --> 17:09.000
好了

17:09.000 --> 17:10.000
那咱们来看一下

17:10.000 --> 17:11.000
剩下的四个属性

17:11.000 --> 17:12.000
剩下的四个属性

17:12.000 --> 17:13.000
第一个

17:13.000 --> 17:14.000
叫Ateration Quant

17:14.000 --> 17:15.000
Ateration Quant

17:15.000 --> 17:16.000
里面有一个

17:16.000 --> 17:17.000
第一个叫什么

17:17.000 --> 17:18.000
叫Infinite 是吧

17:18.000 --> 17:19.000
Infinite这样一个值

17:19.000 --> 17:21.000
然后后面就是个Number

17:21.000 --> 17:22.000
Infinite

17:22.000 --> 17:23.000
是不是知道

17:23.000 --> 17:24.000
无限的

17:24.000 --> 17:26.000
Infinite也是无限无穷的意思

17:26.000 --> 17:27.000
然后这块可以添这个

17:27.000 --> 17:28.000
默认值是1

17:28.000 --> 17:29.000
它是啥意思

17:29.000 --> 17:30.000
就是咱们的动画

17:31.000 --> 17:32.000
咱现在默认状态

17:32.000 --> 17:33.000
是不是这个动画

17:33.000 --> 17:34.000
完全动画只执行一次

17:34.000 --> 17:35.000
比如我在后面

17:35.000 --> 17:36.000
可以添一个2

17:36.000 --> 17:37.000
如果添2的话

17:37.000 --> 17:38.000
它是不是执行两次这动画

17:38.000 --> 17:39.000
咱们来注意一下

17:39.000 --> 17:40.000
执行两次

17:40.000 --> 17:41.000
第二次再执行的时候

17:41.000 --> 17:42.000
还等不等待了

17:42.000 --> 17:43.000
是不是不等待

17:43.000 --> 17:44.000
是吧

17:44.000 --> 17:45.000
它一旦运动开始

17:45.000 --> 17:47.000
或者说一旦动画开始

17:47.000 --> 17:48.000
之后无论执行

17:48.000 --> 17:49.000
多少次这样的动画

17:49.000 --> 17:50.000
都算成了一个

17:50.000 --> 17:51.000
完整的动画

17:51.000 --> 17:52.000
在完整的动画之前

17:52.000 --> 17:53.000
才实现这样的

17:53.000 --> 17:54.000
delay的一个效果

17:54.000 --> 17:55.000
明白我意思吧

17:55.000 --> 17:56.000
就是不管你执行

17:56.000 --> 17:57.000
多少次循环

17:57.000 --> 17:58.000
你都算一个完整动画

17:58.000 --> 17:59.000
之前我在delay

17:59.000 --> 18:00.000
然后我们这块

18:00.000 --> 18:01.000
可以添数字

18:01.000 --> 18:02.000
添多少都可以

18:02.000 --> 18:03.000
也可以添一个大招

18:03.000 --> 18:04.000
叫什么

18:04.000 --> 18:05.000
Infinite 是吧

18:05.000 --> 18:06.000
Infinite

18:07.000 --> 18:08.000
Infinite就是无限的意思了

18:08.000 --> 18:09.000
那你就开始完之后

18:09.000 --> 18:10.000
它就

18:10.000 --> 18:11.000
我好像写错了

18:13.000 --> 18:14.000
Infinite

18:14.000 --> 18:15.000
没有这个

18:15.000 --> 18:16.000
没有这个A

18:16.000 --> 18:17.000
是i的意思

18:17.000 --> 18:18.000
Infinite

18:18.000 --> 18:20.000
相信无限的意思

18:20.000 --> 18:21.000
那就

18:21.000 --> 18:22.000
咱只要开着它

18:22.000 --> 18:23.000
它就一直动了

18:23.000 --> 18:24.000
开着它一直动了

18:24.000 --> 18:25.000
然后接下来

18:25.000 --> 18:26.000
看下面一个属性

18:26.000 --> 18:27.000
这比较简单了

18:27.000 --> 18:28.000
Acreation Quant

18:28.000 --> 18:29.000
比较简单了

18:29.000 --> 18:30.000
然后Derection

18:30.000 --> 18:31.000
Derection其实也挺简单

18:31.000 --> 18:32.000
咱看一下

18:32.000 --> 18:33.000
它是定义运动方向的

18:33.000 --> 18:34.000
什么叫运动方向呢

18:34.000 --> 18:35.000
其实就是咱们

18:35.000 --> 18:36.000
走关键帧的方向

18:36.000 --> 18:38.000
现在咱们走关键帧的方向

18:38.000 --> 18:39.000
是不是从小到大的

18:39.000 --> 18:40.000
对吧

18:40.000 --> 18:41.000
从0到100了 是吧

18:41.000 --> 18:42.000
当然还可以倒着走

18:42.000 --> 18:43.000
比如Reverse

18:43.000 --> 18:44.000
它可以从100走到0

18:44.000 --> 18:45.000
是吧

18:45.000 --> 18:46.000
比如咱试一下

18:46.000 --> 18:47.000
咱先把Infinite

18:47.000 --> 18:49.000
先去掉

18:49.000 --> 18:50.000
然后我们先设一下

18:50.000 --> 18:51.000
比如变成E

18:51.000 --> 18:52.000
变成默认值

18:52.000 --> 18:53.000
Reverse

18:53.000 --> 18:54.000
Reverse之后

18:54.000 --> 18:55.000
我刷新一下

18:55.000 --> 18:56.000
Reverse

18:56.000 --> 18:57.000
你可以看到等一秒

18:57.000 --> 18:58.000
然后怎么到

18:58.000 --> 19:00.000
它是不是倒着来执行

19:00.000 --> 19:01.000
是不是从这个关键帧

19:01.000 --> 19:02.000
从0.0关键帧

19:02.000 --> 19:03.000
开始跳到75关键帧

19:03.000 --> 19:04.000
是吧

19:04.000 --> 19:05.000
所以说

19:05.000 --> 19:06.000
是不是从0.0人时状态

19:06.000 --> 19:07.000
变到水质的

19:07.000 --> 19:08.000
歪轴的

19:08.000 --> 19:09.000
100像速度的状态

19:09.000 --> 19:10.000
然后往回去走

19:10.000 --> 19:11.000
是吧

19:11.000 --> 19:12.000
你看到等一秒

19:12.000 --> 19:13.000
然后是不倒着来走

19:13.000 --> 19:14.000
没问题吧

19:14.000 --> 19:15.000
这是Reverse

19:15.000 --> 19:17.000
然后咱们来看这个

19:17.000 --> 19:18.000
Alternate

19:18.000 --> 19:19.000
这个Alternate

19:19.000 --> 19:20.000
它是什么呢

19:20.000 --> 19:21.000
先正的执行一次

19:21.000 --> 19:23.000
然后再倒着执行一次

19:23.000 --> 19:24.000
那也就是说

19:24.000 --> 19:25.000
这个属性生效的一个前提

19:25.000 --> 19:27.000
是必须咱们的动画执行次数

19:27.000 --> 19:29.000
是大于等于2了是吧

19:29.000 --> 19:30.000
比如说这块2的话

19:30.000 --> 19:32.000
我就会设一个Alternate

19:33.000 --> 19:34.000
保存

19:34.000 --> 19:37.000
它会正着走一次关键帧的顺序

19:37.000 --> 19:39.000
然后再倒着走一次关键帧的顺序

19:39.000 --> 19:40.000
然后回来

19:40.000 --> 19:41.000
快点回来

19:41.000 --> 19:42.000
是吧

19:42.000 --> 19:43.000
倒着执行一次

19:43.000 --> 19:44.000
这个Alternate

19:44.000 --> 19:45.000
作为这种中摆式的运动

19:45.000 --> 19:46.000
是不是非常常见

19:46.000 --> 19:47.000
比如说咱定一个运动状态

19:47.000 --> 19:48.000
是吧

19:48.000 --> 19:49.000
比如说

19:49.000 --> 19:50.000
这个中摆一开始

19:50.000 --> 19:51.000
一开始这个中摆

19:51.000 --> 19:52.000
是斜着的

19:52.000 --> 19:53.000
朝这边斜的

19:54.000 --> 19:55.000
朝这边斜的

19:55.000 --> 19:56.000
咱想让它运到这边去

19:56.000 --> 19:57.000
是吧

19:57.000 --> 19:58.000
那是不是咱实现一个过渡

19:58.000 --> 20:00.000
是不是打这运动这就完事了

20:00.000 --> 20:02.000
那如果咱想让它实现一个

20:02.000 --> 20:03.000
往复循环那个中摆运动

20:03.000 --> 20:05.000
是不是最好的方式就是Alternate

20:05.000 --> 20:06.000
是吧

20:06.000 --> 20:07.000
让它从这个点

20:07.000 --> 20:08.000
从这个点

20:08.000 --> 20:09.000
然后再运动回来是吧

20:09.000 --> 20:11.000
然后用一个叫什么infinite

20:11.000 --> 20:12.000
来实现这样的状态

20:12.000 --> 20:13.000
是不是就更好了

20:13.000 --> 20:14.000
明白我意思吧

20:14.000 --> 20:15.000
就能实现一个

20:15.000 --> 20:16.000
往返的中摆运动

20:16.000 --> 20:17.000
就是这样了

20:17.000 --> 20:18.000
这是Alternate

20:18.000 --> 20:20.000
然后还有一个Alternate Revers

20:20.000 --> 20:21.000
Alternate Revers

20:21.000 --> 20:22.000
就无聊了

20:22.000 --> 20:24.000
这是第一次开始的时候

20:24.000 --> 20:25.000
是以这个

20:25.000 --> 20:26.000
板方向开始

20:26.000 --> 20:27.000
然后再来正方向的

20:27.000 --> 20:28.000
就这样了

20:28.000 --> 20:29.000
Alternate Revers

20:29.000 --> 20:30.000
一般情况

20:30.000 --> 20:31.000
它用Alternate就可以了

20:31.000 --> 20:32.000
Revers

20:32.000 --> 20:33.000
你这Alternate Revers

20:33.000 --> 20:34.000
你用的干嘛呢

20:34.000 --> 20:35.000
这个东西是吧

20:35.000 --> 20:36.000
你要想从哪边开始

20:36.000 --> 20:37.000
你就先定义哪边

20:37.000 --> 20:38.000
关键证就完事了

20:38.000 --> 20:39.000
你非得正的写

20:39.000 --> 20:40.000
然后倒是这些

20:40.000 --> 20:41.000
有病倒是吧

20:41.000 --> 20:42.000
没必要

20:42.000 --> 20:43.000
有些属性是能用上

20:43.000 --> 20:44.000
也听不到的

20:45.000 --> 20:47.000
然后PlaceData

20:47.000 --> 20:48.000
PlaceData

20:48.000 --> 20:49.000
这个东西

20:49.000 --> 20:50.000
就是可以设置

20:50.000 --> 20:51.000
它是否是软顶

20:51.000 --> 20:53.000
和Pass的一个状态

20:53.000 --> 20:54.000
它可以暂停

20:54.000 --> 20:55.000
不认值软顶

20:55.000 --> 20:56.000
比如说现在

20:56.000 --> 20:58.000
我让这个DIV Hover

20:58.000 --> 21:01.000
DIV Hover一下

21:01.000 --> 21:03.000
当你把鼠标旋停的时候

21:03.000 --> 21:04.000
我们让这个动画

21:04.000 --> 21:05.000
是暂停的状态

21:05.000 --> 21:06.000
就吧

21:06.000 --> 21:07.000
然后Play

21:07.000 --> 21:08.000
我这么来写

21:08.000 --> 21:09.000
PlayState

21:10.000 --> 21:13.000
当你去碰到它的时候

21:14.000 --> 21:15.000
它Pose一下

21:16.000 --> 21:17.000
保存

21:17.000 --> 21:18.000
它就暂停

21:18.000 --> 21:19.000
你看它是不是动了

21:20.000 --> 21:21.000
我刚刚看

21:21.000 --> 21:22.000
保存

21:22.000 --> 21:23.000
我是不是写错了

21:23.000 --> 21:25.000
AnimationPlaceData

21:25.000 --> 21:26.000
看一下

21:27.000 --> 21:29.000
AnimationPlaceData

21:29.000 --> 21:30.000
PoseData

21:30.000 --> 21:31.000
就说吧

21:31.000 --> 21:32.000
保存

21:32.000 --> 21:33.000
刷新

21:33.000 --> 21:34.000
就是现在

21:34.000 --> 21:35.000
它用的不多

21:35.000 --> 21:36.000
用的不多

21:36.000 --> 21:37.000
因为它介绍性有问题

21:37.000 --> 21:38.000
我把鼠标放这

21:38.000 --> 21:39.000
是不是停了

21:39.000 --> 21:40.000
然后挪走

21:40.000 --> 21:41.000
是不继续运动

21:41.000 --> 21:42.000
我再刷新

21:42.000 --> 21:43.000
再来

21:43.000 --> 21:44.000
开始

21:44.000 --> 21:45.000
我把鼠标放这

21:45.000 --> 21:46.000
是不是停了

21:46.000 --> 21:47.000
再放这

21:47.000 --> 21:48.000
是不是又停了

21:48.000 --> 21:49.000
这个问题

21:49.000 --> 21:50.000
在有些版本浏览器里面

21:50.000 --> 21:52.000
当你把鼠标浏览之后

21:52.000 --> 21:53.000
它是停了

21:53.000 --> 21:54.000
但是你挪开之后

21:54.000 --> 21:55.000
它不继续运动

21:55.000 --> 21:56.000
它是打开头

21:56.000 --> 21:57.000
给你重新再运动一遍

21:57.000 --> 21:58.000
能弄一次吧

21:58.000 --> 21:59.000
就是它的介绍性

21:59.000 --> 22:00.000
虽然说

22:00.000 --> 22:01.000
介绍性

22:01.000 --> 22:02.000
现在你看起来

22:02.000 --> 22:03.000
是没啥太大问题

22:03.000 --> 22:04.000
顶多加外配的

22:04.000 --> 22:05.000
但是它实现起来

22:05.000 --> 22:06.000
效果是不一样的

22:06.000 --> 22:07.000
然后W3C

22:07.000 --> 22:08.000
也考虑

22:08.000 --> 22:09.000
是否将这个脚本

22:09.000 --> 22:10.000
去替换

22:10.000 --> 22:11.000
是否将这样的功能替换掉

22:11.000 --> 22:12.000
所以说

22:12.000 --> 22:13.000
这是一个

22:13.000 --> 22:14.000
可能未来

22:14.000 --> 22:15.000
就不太会生效的一个

22:15.000 --> 22:16.000
这样的属性

22:16.000 --> 22:17.000
它在一些场景中

22:17.000 --> 22:18.000
会有错误行为

22:18.000 --> 22:19.000
所以说

22:19.000 --> 22:20.000
这个部分的暂时

22:20.000 --> 22:21.000
不支持

22:21.000 --> 22:22.000
或者支持不够好

22:22.000 --> 22:23.000
所以说

22:23.000 --> 22:24.000
这个最好

22:24.000 --> 22:25.000
还是咱规避这种写法

22:25.000 --> 22:26.000
其实

22:26.000 --> 22:27.000
在说看起来挺实用的

22:27.000 --> 22:28.000
它能暂停

22:28.000 --> 22:29.000
但是通过其他方式

22:29.000 --> 22:30.000
咱们也能实现

22:30.000 --> 22:31.000
这个东西

22:31.000 --> 22:32.000
先给你介绍一下

22:32.000 --> 22:33.000
你别太考虑了

22:33.000 --> 22:34.000
然后看Fill Mode

22:34.000 --> 22:35.000
Fill Mode这个东西

22:35.000 --> 22:36.000
它比较有意思

22:36.000 --> 22:38.000
你要看它官方解释

22:38.000 --> 22:39.000
我相信你这辈子

22:39.000 --> 22:40.000
都不会明白它干嘛的

22:40.000 --> 22:41.000
所以你只能听我就说

22:41.000 --> 22:42.000
这个东西是什么意思

22:42.000 --> 22:43.000
Fill Mode

22:43.000 --> 22:44.000
Fill Mode

22:44.000 --> 22:45.000
相信一下

22:45.000 --> 22:46.000
然后看一下动多少次

22:46.000 --> 22:47.000
说不动两次

22:47.000 --> 22:48.000
先别动两次

22:48.000 --> 22:49.000
你就动一次了

22:49.000 --> 22:50.000
动一次

22:50.000 --> 22:51.000
然后快点动

22:51.000 --> 22:52.000
就完事了是吧

22:52.000 --> 22:53.000
刷新

22:53.000 --> 22:54.000
Fill Mode咱看一下

22:54.000 --> 22:55.000
它是什么呢

22:55.000 --> 22:56.000
它有几个值

22:56.000 --> 22:57.000
默认状态是9

22:57.000 --> 22:58.000
然后Fill Mode

22:58.000 --> 22:59.000
Backwards它就Bose

22:59.000 --> 23:00.000
Bose特别好理解

23:00.000 --> 23:01.000
咱解释完前俩之后

23:01.000 --> 23:02.000
你基本上也明白

23:02.000 --> 23:03.000
Bose是什么意思

23:03.000 --> 23:04.000
现在我们知道

23:04.000 --> 23:05.000
这个动画

23:05.000 --> 23:06.000
运动完之后

23:06.000 --> 23:07.000
是不是就会回归

23:07.000 --> 23:08.000
它的最原始状态

23:08.000 --> 23:09.000
明白我意思吗

23:09.000 --> 23:10.000
是不是运动完之后

23:10.000 --> 23:12.000
会回归它最原始状态

23:12.000 --> 23:13.000
比如说

23:13.000 --> 23:14.000
咱们让它最原始状态

23:14.000 --> 23:15.000
是黑色的

23:15.000 --> 23:17.000
黑色的

23:17.000 --> 23:19.000
然后开始状态的时候

23:19.000 --> 23:20.000
动画开始的时候

23:20.000 --> 23:21.000
为咱改了

23:21.000 --> 23:22.000
改成什么呢

23:22.000 --> 23:23.000
改成红色的

23:23.000 --> 23:24.000
改成红色的

23:24.000 --> 23:25.000
然后刷新一下看一下

23:25.000 --> 23:26.000
是不是开始黑的

23:26.000 --> 23:27.000
等几秒

23:27.000 --> 23:28.000
然后变成红的

23:28.000 --> 23:29.000
是吧

23:29.000 --> 23:30.000
然后慢慢的过得过来

23:30.000 --> 23:31.000
最后变成

23:31.000 --> 23:33.000
我把每一个都得变成红的

23:33.000 --> 23:34.000
不然的话

23:34.000 --> 23:36.000
它就会朝着最终的目标值

23:36.000 --> 23:37.000
我们最原始状态

23:37.000 --> 23:38.000
黑色去改进

23:39.000 --> 23:40.000
OK

23:40.000 --> 23:41.000
让每一个都是红的

23:41.000 --> 23:42.000
你看变成红的

23:42.000 --> 23:44.310
OK

23:44.310 --> 23:45.310
是不是这样的状态

23:45.310 --> 23:46.310
最后回味到

23:46.310 --> 23:47.310
最原始状态变成黑的

23:47.310 --> 23:48.310
然后咱们来看一下

23:48.310 --> 23:49.310
这个forward

23:49.310 --> 23:50.310
forward的什么意思呢

23:50.310 --> 23:52.310
forward是设置对象

23:52.310 --> 23:54.310
状态为结束式的状态

23:54.310 --> 23:55.310
就是

23:55.310 --> 23:56.310
比如说咱们运动

23:56.310 --> 23:57.310
运动完事之后

23:57.310 --> 23:59.310
是不是回归成最终的状态

23:59.310 --> 24:01.310
如果你设置成forward之后

24:01.310 --> 24:02.310
它运动完之后

24:02.310 --> 24:03.310
会保存

24:03.310 --> 24:05.310
我们最后一阵的状态

24:05.310 --> 24:06.310
让动画停留到

24:06.310 --> 24:07.310
最后一阵的状态

24:07.310 --> 24:08.310
就不会变黑了

24:08.310 --> 24:10.310
比如说设一下forward

24:10.310 --> 24:14.010
就是在动画结束后

24:14.010 --> 24:16.010
保存最后一阵的状态

24:16.010 --> 24:17.010
你看

24:17.010 --> 24:18.010
放心

24:18.010 --> 24:19.010
就这样吧

24:19.010 --> 24:20.010
过来

24:20.010 --> 24:21.010
过来

24:21.010 --> 24:22.010
是不是最后一阵

24:22.010 --> 24:23.010
是零零红色的

24:23.010 --> 24:24.010
它就不会变回

24:24.010 --> 24:25.010
到咱们一开始的

24:25.010 --> 24:26.010
原始状态

24:26.010 --> 24:27.010
那个黑色

24:27.010 --> 24:28.010
明白我意思吗

24:28.010 --> 24:29.010
这是forward的

24:29.010 --> 24:30.010
设置的是什么

24:30.010 --> 24:33.010
设置的是运动之后的状态

24:33.010 --> 24:35.010
就是把动画的最后一阵

24:35.010 --> 24:37.010
当做运动之后的状态

24:37.010 --> 24:39.010
来持续展示

24:39.010 --> 24:40.010
明白我意思吗

24:40.010 --> 24:41.010
forward

24:41.010 --> 24:42.010
运动之后

24:42.010 --> 24:43.010
你变成什么样子

24:43.010 --> 24:44.010
运动之前

24:44.010 --> 24:45.010
你要是什么样

24:45.010 --> 24:46.010
你看它说的什么

24:46.010 --> 24:47.010
设置对象状态

24:47.010 --> 24:48.010
为运动开始时的状态

24:48.010 --> 24:49.010
这个东西

24:50.010 --> 24:52.010
我刚才给你强调了一下

24:52.010 --> 24:53.010
forward

24:53.010 --> 24:55.010
是主要设置运动之后的

24:55.010 --> 24:56.010
但是它

24:56.010 --> 24:57.010
你看是不是没强调

24:57.010 --> 24:58.010
它说设置动画

24:58.010 --> 24:59.010
状态为结束时的状态

24:59.010 --> 25:01.010
那是不是咱会理解成

25:01.010 --> 25:02.010
可能一开始

25:02.010 --> 25:04.010
在没开始动画的时候

25:04.010 --> 25:05.010
我们也要设成

25:05.010 --> 25:06.010
最后一阵的状态

25:06.010 --> 25:07.010
其实不是吧

25:07.010 --> 25:08.010
forward

25:08.010 --> 25:09.010
设置的只是

25:09.010 --> 25:11.010
最后一阵结束之后

25:11.010 --> 25:12.010
我们的元素

25:12.010 --> 25:13.010
状态它不设置

25:13.010 --> 25:15.010
动画开始之前的

25:15.010 --> 25:16.010
而这个backwards

25:16.010 --> 25:18.010
设置的是动画开始之前的

25:18.010 --> 25:20.010
不设置动画结束之后的

25:20.010 --> 25:21.010
能懂我意思吗

25:21.010 --> 25:22.010
虽然说

25:22.010 --> 25:23.010
但是它这里面

25:23.010 --> 25:25.010
是不是没给你们着重强调

25:25.010 --> 25:26.010
比如说forward

25:26.010 --> 25:28.010
它只针对动画结束之后

25:28.010 --> 25:29.010
元素的状态

25:29.010 --> 25:30.010
backwards只针对

25:30.010 --> 25:32.010
动画开始之前元素的状态

25:32.010 --> 25:33.010
其他状态它不改变

25:33.010 --> 25:34.010
其他状态也不关注

25:34.010 --> 25:35.010
动画开始之前

25:35.010 --> 25:36.010
咱是不是

25:36.010 --> 25:37.010
什么叫开始之前

25:37.010 --> 25:38.010
是不是等待那个时间

25:38.010 --> 25:39.010
等待那个时间

25:39.010 --> 25:40.010
是不是开始之前

25:40.010 --> 25:41.010
咱是不是还保持着

25:41.010 --> 25:42.010
元素的状态

25:42.010 --> 25:45.010
如果我设置成一个backwards的话

25:45.010 --> 25:47.010
backwards

25:47.010 --> 25:49.010
是不是动画开始之前

25:49.010 --> 25:51.010
就是第一阵的状态了

25:51.010 --> 25:52.010
在它等待的时候

25:52.010 --> 25:53.010
是不是也维持第一阵

25:53.010 --> 25:54.010
这样的状态

25:54.010 --> 25:55.010
所以我刷新

25:55.010 --> 25:56.010
你会看到

25:56.010 --> 25:57.010
是不是在红色状态等

25:57.010 --> 25:58.010
然后变

25:58.010 --> 25:59.010
现在我没设置forward

25:59.010 --> 26:00.010
所以它到最后的时候

26:00.010 --> 26:01.010
怎么着

26:01.010 --> 26:02.010
还会变回到

26:02.010 --> 26:03.010
它元素的状态

26:03.010 --> 26:04.010
能懂我意思吗

26:04.010 --> 26:05.010
bose是什么意思

26:05.010 --> 26:07.010
bose就是它俩的一个结合

26:07.010 --> 26:09.010
在动画开始之前

26:09.010 --> 26:10.010
这个元素

26:10.010 --> 26:13.010
会变成第一阵的状态

26:13.010 --> 26:14.010
在动画结束之后

26:14.010 --> 26:16.010
它会保留最后一阵的状态

26:16.010 --> 26:17.010
所以这是bose

26:17.010 --> 26:18.010
一般情况下

26:18.010 --> 26:19.010
我们用bose用的比较多

26:19.010 --> 26:20.010
刷新

26:20.010 --> 26:21.010
你看在等待的时候

26:21.010 --> 26:22.010
就变成第一阵了

26:22.010 --> 26:23.010
然后运动

26:23.010 --> 26:24.010
运动

26:24.010 --> 26:25.010
然后运动完之后

26:25.010 --> 26:26.010
它会保留最后一阵的

26:26.010 --> 26:27.010
这样的状态

26:27.010 --> 26:28.010
没问题吧 同学们

26:28.010 --> 26:30.010
这是这几个属性的一个介绍

26:30.010 --> 26:32.010
这个是不是介绍很清楚了

26:32.010 --> 26:33.010
这个fuel mode

26:33.010 --> 26:34.010
你一定要理解

26:34.010 --> 26:35.010
一定要清楚

26:35.010 --> 26:36.010
因为下一节

26:36.010 --> 26:37.010
咱们再讲

26:37.010 --> 26:38.010
timing function里面的一个step

26:38.010 --> 26:39.010
逐帧动画的时候

26:39.010 --> 26:40.010
对这个fuel mode

26:40.010 --> 26:41.010
它要配合起来使用

26:41.010 --> 26:42.010
所以你必须要清楚

26:42.010 --> 26:43.010
forward是什么意思

26:43.010 --> 26:44.010
forward是不是

26:44.010 --> 26:45.010
在结束之后

26:45.010 --> 26:47.010
保留最后一阵的状态

26:47.010 --> 26:48.010
是吧

26:48.010 --> 26:49.010
backwards在开始之前

26:49.010 --> 26:51.010
是不是就设置为

26:51.010 --> 26:52.010
第一阵的状态

26:52.010 --> 26:53.010
是吧

26:53.010 --> 26:54.010
bose是它俩的一个综合体

26:54.010 --> 26:55.010
没问题吧

26:55.010 --> 26:57.010
兼容性还可以

26:57.010 --> 26:58.010
兼容性还可以

26:58.010 --> 26:59.010
单独写的话

26:59.010 --> 27:00.010
最好加上是吧

27:00.010 --> 27:01.010
最好加上这样的一个

27:01.010 --> 27:02.010
如果animation fuel mode的话

27:02.010 --> 27:04.010
最好加上wiped是吧

27:04.010 --> 27:05.010
其实在写animation的时候

27:05.010 --> 27:07.010
你最好也加上wiped

27:07.010 --> 27:09.010
因为每一个里面的

27:09.010 --> 27:10.010
拆分完的属性

27:10.010 --> 27:11.010
它的介绍性

27:11.010 --> 27:12.010
都不是特别特别好

27:13.010 --> 27:15.010
但是它确实是很常用

27:15.010 --> 27:16.010
OK

27:16.010 --> 27:17.010
没有问题吧

27:17.010 --> 27:18.010
是不是animation里面

27:18.010 --> 27:19.010
所有的这样的一个东西

27:19.010 --> 27:20.010
咱们都介绍的差不多了

27:20.010 --> 27:21.010
是吧

27:21.010 --> 27:22.010
然后那么接下来

27:22.010 --> 27:23.010
我们用animation来

27:23.010 --> 27:24.010
实现一个动画状态

27:24.010 --> 27:25.010
来近距离的

27:25.010 --> 27:26.010
充分的使用一下

27:26.010 --> 27:28.010
animation这样的一个属性

27:28.010 --> 27:29.010
我们来看看

27:29.010 --> 27:30.010
它究竟能实现

27:30.010 --> 27:31.010
什么样的一个状态

27:31.010 --> 27:32.010
是吧

