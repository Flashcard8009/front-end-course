WEBVTT

00:00.560 --> 00:05.280
好 我们这节课来聊一聊Dome的尺寸和位置

00:05.920 --> 00:09.280
这一块知识呢 我不知道你们如何

00:09.280 --> 00:13.920
反正我是背不住的 我到现在了 这都多少年了 我都背不住

00:14.320 --> 00:20.240
因此这一块有几张图需要的时候 真的要用到尺寸的时候

00:20.240 --> 00:22.200
就来查阅 就完事了

00:22.640 --> 00:26.480
我们看第一张图 因为这尺寸和位置这些东西

00:26.640 --> 00:32.640
它还真不是说你直接通过样式什么DIV style left

00:32.640 --> 00:36.160
来获取位置 然后位置来获取尺寸

00:36.720 --> 00:40.880
这么简单的 因为尺寸情况有很多

00:40.880 --> 00:45.120
所以说官方给你提供了很多的API

00:45.120 --> 00:47.920
来给你获取各种各样的尺寸

00:48.640 --> 00:51.360
好 我们来看图就完事了 把几张图一看

00:51.360 --> 00:54.720
接下来我们来做练习 需要的时候以后来查图

00:55.680 --> 00:59.520
第一张图 我给大家画了这么几张

00:59.520 --> 01:02.080
一看就明白了 这玩意没有什么复杂的

01:02.880 --> 01:06.320
你要获取整个屏幕的尺寸 用这个

01:07.280 --> 01:09.680
高度 Hight is高度

01:10.880 --> 01:14.720
然后屏幕的宽度 就整个屏幕 不是浏览器

01:14.720 --> 01:16.800
整个屏幕 就这样获取

01:17.920 --> 01:23.760
你要获取浏览器的尺寸 用这个window outer width

01:24.480 --> 01:28.000
宽度 window outer height 高度

01:30.240 --> 01:32.560
它是包含整个浏览器 你看个箭头就知道了

01:32.560 --> 01:33.520
我不用多扯了

01:34.080 --> 01:37.360
然后你要获取浏览器内部的尺寸的话

01:37.360 --> 01:38.800
就是window inner height

01:40.000 --> 01:43.760
看箭头 然后window inner width 宽度

01:44.240 --> 01:45.520
它是包含滚动条的

01:47.280 --> 01:49.760
如果说你要不要滚动条

01:49.760 --> 01:52.160
我要获取四口的尺寸

01:52.240 --> 01:54.160
这个玩意文品平时比较常见

01:54.480 --> 01:56.320
获取四口 四口是什么

01:56.320 --> 01:58.160
就浏览器的可见窗口

01:59.920 --> 02:02.160
然后就是document

02:02.160 --> 02:04.400
这个玩意之前还有印象吗

02:04.960 --> 02:07.360
没印象没关系 这里回忆一下

02:07.760 --> 02:09.520
这个玩意就是atmr元素

02:10.720 --> 02:12.160
就是我们的网页的根元素

02:12.640 --> 02:14.240
所以你只要拿到根元素

02:14.240 --> 02:16.320
然后它的属性client height

02:17.200 --> 02:18.320
就是四口的高度

02:18.960 --> 02:21.920
client width 就是四口的宽度

02:23.120 --> 02:25.760
我们获取四口宽高就这样获取

02:26.720 --> 02:29.520
它是不包含浏览器滚动条的

02:30.880 --> 02:32.240
OK 这就是这一块

02:32.240 --> 02:33.280
然后再看下边吧

02:33.680 --> 02:35.680
下边是说的这个图说的什么意思呢

02:35.680 --> 02:37.360
这个图是单个元素

02:37.360 --> 02:39.360
刚才是跟浏览器相关的 对吧

02:39.360 --> 02:41.280
那如果说元素的尺寸呢

02:42.480 --> 02:43.520
它有两种

02:44.080 --> 02:46.400
一种叫做client width

02:46.880 --> 02:48.400
那高度就是client height

02:49.120 --> 02:53.920
它获取的是元素内容加上pending这一部分

02:54.560 --> 02:57.360
可见宽高

02:58.400 --> 03:00.880
但是不包含浏览条的位置

03:00.880 --> 03:04.320
不包含那个border边框

03:05.200 --> 03:07.600
那如果说你使用offset width

03:07.600 --> 03:09.120
和offset height

03:09.120 --> 03:12.320
它是包含浏览条和border的

03:13.360 --> 03:14.320
就这个区别

03:15.040 --> 03:15.680
再往下

03:16.400 --> 03:18.960
那如果说我们一个元素

03:18.960 --> 03:20.720
它比方说它固定了宽高

03:20.720 --> 03:22.160
这一个元素的宽高固定

03:22.720 --> 03:26.000
那它内容其实它超过了它的宽高

03:26.720 --> 03:28.080
那么可能会出现滚动条

03:28.080 --> 03:29.200
对吧 也有可能没有滚动条

03:29.200 --> 03:30.480
反正它内容超过了宽高

03:31.440 --> 03:32.400
那么这一块

03:33.840 --> 03:35.680
有这么一些东西需要注意

03:35.680 --> 03:38.480
刚才我们说了client width

03:39.280 --> 03:39.600
对吧

03:40.080 --> 03:41.600
那么它就是获取这一部分

03:41.600 --> 03:42.800
可见的这一部分

03:42.800 --> 03:43.840
是不含边框的

03:44.480 --> 03:45.360
offset width

03:45.520 --> 03:46.400
是含边框的

03:46.400 --> 03:47.360
当然高度一样

03:47.360 --> 03:50.240
client height和offset height

03:50.720 --> 03:52.160
还有一个能够叫做scroll

03:53.760 --> 03:55.280
可滚动的高度

03:56.160 --> 03:57.680
对吧 就是整个内容

03:57.680 --> 03:59.120
它有些地方看不见

03:59.120 --> 04:00.800
就除了这个区别就看不见了

04:00.800 --> 04:02.640
就能看见的区别就这个区别

04:02.960 --> 04:03.680
能看见

04:04.080 --> 04:05.520
其他地方去地方看不见

04:05.520 --> 04:06.640
看不见也没关系

04:06.880 --> 04:08.880
它也是算在scroll height里边

04:09.680 --> 04:11.920
自己看图这个玩意没什么好说的

04:12.320 --> 04:13.360
然后再看这个

04:14.320 --> 04:15.520
还是一样

04:16.080 --> 04:17.200
有一个元素

04:18.000 --> 04:19.520
它的宽高可能是固定的

04:20.400 --> 04:21.680
它里边的内容

04:21.920 --> 04:24.400
实际上它有可能会超过它的宽高

04:24.880 --> 04:25.280
是吧

04:26.320 --> 04:28.480
那么如果说我要知道

04:29.440 --> 04:30.320
它滚动条

04:30.320 --> 04:31.280
不然往下滚动

04:31.520 --> 04:32.320
往下滚动的话

04:32.320 --> 04:33.520
内容是不是往上跑

04:33.840 --> 04:34.720
对吧 往上跑

04:35.360 --> 04:36.240
往上滚动的

04:36.640 --> 04:37.680
内容就往下跑

04:37.920 --> 04:38.960
对吧 就这么个意思

04:39.680 --> 04:41.440
那么这两个地方

04:41.440 --> 04:43.200
可以获取到scroll top

04:43.680 --> 04:45.360
这个东西文字不没法描述

04:45.360 --> 04:46.240
你只是看图

04:46.640 --> 04:47.840
这一块叫scroll top

04:48.320 --> 04:52.080
这一块叫scroll left

04:53.120 --> 04:54.320
就这两个东西

04:54.720 --> 04:57.840
当然我们平时比较见得比较多的是重向滚动

04:57.840 --> 04:59.920
对吧 横向滚动的比较少一点

05:00.640 --> 05:02.240
横向滚动就用这个获取

05:02.480 --> 05:03.280
滚动的位置

05:03.280 --> 05:04.160
就滚动了多少

05:04.160 --> 05:06.560
三边有多少已经被滚动上去了

05:07.040 --> 05:07.920
就这么个意思

05:09.680 --> 05:10.720
还有什么好说的呢

05:11.280 --> 05:12.960
然后说到滚动这一块

05:14.240 --> 05:15.280
有一个小的知识

05:15.680 --> 05:18.240
就是我们可以调用元素的scroll 2

05:19.360 --> 05:20.800
给它一个xry

05:21.520 --> 05:24.000
可以设置元素的滚动位置

05:25.120 --> 05:29.200
xry和分别代表scroll left和scroll top

05:30.320 --> 05:31.280
分别代表这两个

05:31.760 --> 05:33.520
所以说我们这里就有一句代码

05:33.520 --> 05:34.560
有的时候我们会用到

05:35.760 --> 05:37.600
让它滚动到最顶部

05:37.600 --> 05:38.720
就是scroll 2

05:38.880 --> 05:42.160
到哪呢 零零零零是啥意思

05:42.640 --> 05:44.880
就它里边的实际内容这个区域

05:44.880 --> 05:46.800
实际内容可能很宽高很多

05:47.040 --> 05:48.000
把它放到这个位置

05:49.360 --> 05:49.920
把它放到这

05:50.400 --> 05:52.880
是不是刚好就看到这个整个区域的左上角

05:53.200 --> 05:53.520
对吧

05:54.320 --> 05:55.680
就回到顶部就这个意思

05:56.960 --> 05:58.480
它本来可能在这的

05:59.920 --> 06:01.360
一回到顶部就到这了

06:02.080 --> 06:04.240
当然一般情况下

06:04.640 --> 06:07.360
是没有横向滚动的

06:07.360 --> 06:08.800
那么一般情况下可能是这样子

06:10.000 --> 06:10.320
对吧

06:10.560 --> 06:12.480
这个红色的是真它里边的内容

06:12.480 --> 06:14.240
它可能超出了的元素区域

06:14.800 --> 06:17.280
往下滑滚滚滚动起来往下

06:17.280 --> 06:18.320
是不是到那了

06:18.560 --> 06:19.280
回到顶部

06:20.480 --> 06:21.120
是不是到这了

06:22.240 --> 06:23.120
就这么个意思

06:23.520 --> 06:27.440
设置scroll top为0和scroll left为0就行了

06:28.640 --> 06:30.160
没什么好说的这个玩意

06:30.480 --> 06:33.280
如果说要监听元素的滚动

06:33.280 --> 06:34.400
比方说它滚动了

06:34.400 --> 06:36.560
用会在这里边用鼠标中间

06:36.640 --> 06:37.520
在这里滚动

06:37.520 --> 06:39.120
只要一滚动它就会触发

06:39.680 --> 06:41.600
事件内形叫做scroll

06:41.600 --> 06:42.720
所以说你可以使用

06:42.720 --> 06:45.760
ad event messenger来监听它

06:45.760 --> 06:46.560
它在滚动

06:47.440 --> 06:50.160
这以后的这些在我们开发的场景里面

06:50.160 --> 06:51.280
遇到了我们就会讲

06:51.280 --> 06:52.800
然后就会来巩固一下

06:53.200 --> 06:54.880
就是图的话就这么几张图

06:55.600 --> 06:57.280
也没有必要去专门弄一个练习

06:57.280 --> 07:00.560
把每一个宽高尺寸都必须要全部用到

07:01.040 --> 07:03.840
那个玩意你要用到哪一部分来看图就完事了

07:04.400 --> 07:04.640
好

07:04.640 --> 07:06.240
另外一个是有点意思的

07:07.200 --> 07:08.000
是得到元素

07:08.000 --> 07:09.360
因为前面都是说尺寸

07:09.760 --> 07:11.680
那么这里还有一个就是位置

07:13.040 --> 07:17.120
元素位置要通过这种方式来过去

07:18.080 --> 07:20.640
通过元素里面一个方法叫做get

07:20.880 --> 07:23.200
得到bounding client rate

07:23.680 --> 07:24.480
得到一个

07:25.760 --> 07:29.120
怎么翻译的就是边界的举行

07:29.840 --> 07:32.080
得到元素边界产生的举行

07:32.480 --> 07:34.640
就是我们一个元素不是产生一个盒子

07:34.640 --> 07:34.960
对吧

07:34.960 --> 07:36.080
那个盒子就是个举行

07:36.800 --> 07:37.120
对吧

07:37.760 --> 07:38.720
边界是什么意思

07:38.720 --> 07:39.760
就包含border

07:39.760 --> 07:41.680
border在内的内坨

07:41.680 --> 07:42.320
整个举行

07:43.120 --> 07:43.360
好

07:43.360 --> 07:44.560
那么这个举行呢

07:45.280 --> 07:46.560
它有很多的信息

07:46.560 --> 07:47.520
首先有宽高

07:47.760 --> 07:48.080
对吧

07:48.080 --> 07:48.640
宽高了

07:48.640 --> 07:50.160
我们之前用尺寸就可以获取

07:50.640 --> 07:52.000
那么还有一个位置信息

07:52.000 --> 07:54.000
这个位置是相对于试口的

07:54.160 --> 07:56.160
就是这个举行的左边园

07:56.640 --> 07:57.440
离试口

07:58.480 --> 08:00.320
左边有多少距离

08:00.640 --> 08:02.000
使用这个举行的left

08:02.640 --> 08:03.920
离上边有多少距离

08:03.920 --> 08:05.040
使用这个举行的top

08:06.000 --> 08:07.280
后边还有一个right车

08:07.280 --> 08:08.560
border用的比较少一点

08:08.560 --> 08:10.160
比方说我们举随便举个例子

08:12.320 --> 08:13.520
找一个网站吧

08:14.480 --> 08:15.120
找个军动

08:16.080 --> 08:17.200
随便找个举行

08:17.440 --> 08:18.640
你们看上哪个举行

08:21.520 --> 08:23.280
把它弄到这

08:25.280 --> 08:26.000
随便找一个

08:27.520 --> 08:29.360
那我们就找这个我的购物车吧

08:30.240 --> 08:31.120
就找这个玩意

08:31.360 --> 08:32.160
这个玩意少呀

08:32.880 --> 08:36.640
这个玩意叫做IDCLEAN

08:36.640 --> 08:37.680
那什么玩意

08:38.240 --> 08:40.720
好我们这里得到购物车CARD

08:41.200 --> 08:42.160
那个元素

08:45.340 --> 08:45.820
CARD

08:45.980 --> 08:46.540
看一下

08:47.500 --> 08:49.180
哎呦它里边用了Gquery的

08:49.180 --> 08:50.460
它还不能用这个dodger

08:50.460 --> 08:51.660
它里边用了Gquery的

08:51.660 --> 08:53.580
我们用DocumentsGquery是哪个字

08:57.460 --> 08:59.300
好看一下就是这个元素

08:59.780 --> 09:01.620
那我要得到这个元素的一个举行

09:01.620 --> 09:03.460
那个位置就是离屏幕左边

09:04.580 --> 09:06.420
离屏幕左边的距离

09:06.500 --> 09:08.580
那能不能得到离负元素的距离

09:08.580 --> 09:10.580
这个东西最好不要用这种方式

09:14.180 --> 09:15.620
得到离屏幕左边的距离

09:15.620 --> 09:16.580
那我怎么办呢

09:16.820 --> 09:18.260
我就调用它的一个方法

09:18.260 --> 09:19.380
叫GassBunding

09:20.180 --> 09:20.900
不用去计划

09:20.900 --> 09:21.940
这个方法我都经常忘

09:22.820 --> 09:23.940
需要的时候来查阅

09:24.100 --> 09:26.580
它会返回一个举行对象

09:27.300 --> 09:29.380
RigTango是个举行的单词

09:29.780 --> 09:31.620
你随便会变量获取就行了

09:31.780 --> 09:32.740
这是个举行对象

09:32.740 --> 09:34.420
咱们来看一下个举行对象吧

09:34.580 --> 09:35.060
Great

09:36.900 --> 09:37.540
你看吧

09:37.940 --> 09:39.220
Left993

09:39.460 --> 09:40.900
993指责是啥呢

09:40.900 --> 09:42.740
指责是它那个举行边缘

09:42.740 --> 09:44.740
到这边有993个像素

09:45.860 --> 09:48.900
TOP136指责是这个举行的上边缘

09:48.900 --> 09:50.340
到底边有136

09:50.980 --> 09:52.660
宽高没什么好说的了

09:52.820 --> 09:54.180
宽高我们不用这种方式

09:54.180 --> 09:55.460
用其他方式也可以获取

09:55.940 --> 09:56.900
对方就完事了

09:57.780 --> 09:59.380
大家有些东西说我不想知道

09:59.380 --> 10:00.820
它离屏幕的

10:01.300 --> 10:03.460
在屏幕上的就是在试口上

10:03.460 --> 10:05.300
试口我们说专业点就试口

10:05.300 --> 10:06.020
试口是什么

10:06.180 --> 10:08.020
试口就是口见窗口

10:08.420 --> 10:09.220
就这个区

10:09.380 --> 10:10.020
就试口

10:10.820 --> 10:12.900
跟固定定位是相对于试口的

10:12.900 --> 10:13.620
就这么个意思

10:14.580 --> 10:16.500
那么我不想相对于试口

10:16.500 --> 10:17.940
我想相对于它的复原数

10:17.940 --> 10:18.820
那假设呢

10:18.980 --> 10:21.780
假设它的复原数是这个

10:22.340 --> 10:23.460
那我又怎么来呢

10:23.620 --> 10:24.900
我怎么来得到

10:25.540 --> 10:28.100
我怎么来得到这一段距离呢

10:29.380 --> 10:30.580
就是也很简单嘛

10:30.820 --> 10:31.540
怎么弄呢

10:31.860 --> 10:32.660
你就这样呗

10:33.380 --> 10:36.980
你先算出它离屏幕左边的距离

10:38.020 --> 10:42.260
再算出复原数离屏幕左边的距离

10:42.660 --> 10:44.900
是不是两个一相前不就这段吗

10:45.460 --> 10:46.740
这个儿没什么好说的

10:46.740 --> 10:48.260
你肯定是可以搞定的

10:48.820 --> 10:49.460
就完事了

10:51.620 --> 10:53.220
那么这一块就没了

10:53.220 --> 10:53.700
就没了

10:54.660 --> 10:56.660
不用一次一次去训练

10:56.660 --> 10:58.340
一次一次去讲每一个属性

10:58.340 --> 10:59.220
拿封了嘛

10:59.220 --> 11:00.740
就看这个图就完事了

11:00.740 --> 11:01.860
所以我们直接来做题

11:03.620 --> 11:04.980
来吧 做题

11:04.980 --> 11:06.500
好 有两道题

11:06.740 --> 11:08.020
第一道题呢

11:08.340 --> 11:09.060
看一下

11:09.300 --> 11:11.300
是一个可以拖动的变迁

11:11.620 --> 11:12.660
这个变迁呢

11:12.900 --> 11:14.580
它里边的文字可以写的

11:14.580 --> 11:16.740
就是袁老师平时用的这个变迁

11:16.740 --> 11:17.780
这个样子

11:18.020 --> 11:20.580
我把这个样子给它弄过来了

11:20.820 --> 11:22.340
这里边文字可以改

11:22.340 --> 11:23.620
那为什么文字可以改呢

11:23.620 --> 11:25.300
文字可以改我是怎么做的呢

11:25.700 --> 11:26.740
讲过来说

11:26.740 --> 11:28.260
就是一个content editable

11:28.900 --> 11:29.780
就这么一个东西

11:30.420 --> 11:31.060
就完事了

11:32.020 --> 11:34.100
然后现在的关键是个变迁

11:34.100 --> 11:34.980
是可以拖动的

11:34.980 --> 11:36.180
就是指着它上面

11:36.180 --> 11:37.460
这个玩意儿是可以拖动的

11:37.460 --> 11:38.500
现在肯定拖动不了

11:38.980 --> 11:40.420
顺便说一下

11:40.420 --> 11:42.180
这个玩意儿的鼠标样式

11:43.380 --> 11:44.100
这个

11:44.660 --> 11:45.300
就这个

11:45.300 --> 11:46.420
这个mubar

11:46.420 --> 11:47.780
这个玩意儿就是个鼠

11:47.780 --> 11:49.940
鼠标的样式是为什么做成这个样子的

11:49.940 --> 11:51.300
就是个cursor move

11:52.180 --> 11:53.860
cursor move就可以了

11:53.860 --> 11:54.980
就变成这个样子

11:54.980 --> 11:55.940
好 那么现在呢

11:55.940 --> 11:58.660
我要让它是可以被拖动的

11:58.900 --> 12:00.820
那么怎么来玩这件事

12:01.540 --> 12:02.660
这里需要写解释

12:03.300 --> 12:05.300
让变迁可以被拖动

12:05.300 --> 12:06.420
但是呢不能超出失口

12:06.420 --> 12:07.460
就不能拖到外面去了

12:08.260 --> 12:09.060
好 那么这里呢

12:09.060 --> 12:10.020
我们要分解动作

12:10.020 --> 12:10.900
这个玩意儿你们

12:11.220 --> 12:12.260
如果说第一次做的话

12:12.260 --> 12:13.940
那个十字八九是做不出来的

12:14.340 --> 12:15.140
听老师讲

12:15.140 --> 12:16.420
因为以后的拖动呢

12:16.420 --> 12:17.460
基本上都是这样写

12:18.180 --> 12:19.780
那这一块拖动怎么玩呢

12:19.780 --> 12:21.220
首先搞定第一件事

12:21.780 --> 12:24.020
什么时候能拖动

12:24.500 --> 12:26.100
是鼠标移上去就可以拖动了吗

12:26.820 --> 12:27.540
不是的

12:27.540 --> 12:29.460
是要鼠标按下去

12:30.420 --> 12:32.260
然后再移动鼠标

12:33.380 --> 12:34.340
才能拖动

12:34.340 --> 12:37.460
鼠标一放开就不能拖动了

12:38.500 --> 12:39.860
是不是有这么一个逻辑存在

12:40.340 --> 12:42.020
这一块要一步一步写啊

12:42.020 --> 12:43.780
最好让老师写一个步骤

12:43.780 --> 12:44.900
你们就跟着写一个步骤

12:45.700 --> 12:46.340
这一块呢

12:46.340 --> 12:48.100
那么会稍微的

12:48.100 --> 12:49.220
有那么一点绕

12:49.780 --> 12:51.380
但是呢只需要写一次

12:51.380 --> 12:52.020
一次之后

12:52.020 --> 12:53.620
其他时候的拖动都是一样的

12:55.140 --> 12:55.780
那么现在呢

12:55.780 --> 12:56.340
我们来看

12:57.300 --> 12:58.500
鼠标

12:58.500 --> 13:00.500
你说鼠标只有按到哪呢

13:00.500 --> 13:01.460
按到哪个元素

13:02.100 --> 13:04.660
按住了这个mubar的元素才能被拖动

13:04.660 --> 13:06.260
鼠标放开就不能拖动了

13:06.260 --> 13:08.260
所以我们首先来获取到这个mubar

13:08.260 --> 13:08.820
就拿一块

13:09.860 --> 13:10.820
可以按下去拖动

13:11.220 --> 13:11.940
那么这里呢

13:12.420 --> 13:14.660
得到个mubar document

13:15.940 --> 13:16.580
query

13:16.580 --> 13:17.220
剩下一个特儿

13:18.260 --> 13:19.380
我让你们写到时候

13:19.380 --> 13:20.260
你们就可以开始写了

13:20.900 --> 13:21.460
mubar

13:24.800 --> 13:26.960
好拿到这个元素之后呢

13:26.960 --> 13:27.520
我最后

13:27.680 --> 13:28.560
我现在拿的出出了

13:29.360 --> 13:29.920
然后呢

13:29.920 --> 13:30.320
我们就

13:31.200 --> 13:32.160
写这个mubar呢

13:32.160 --> 13:33.040
注册事件

13:33.040 --> 13:33.760
什么事件呢

13:35.200 --> 13:36.800
鼠标按一下的事件

13:36.800 --> 13:39.200
因为我只有按一下的时候才能拖动

13:39.200 --> 13:41.280
所以说我们的事件结构是这样子的

13:41.280 --> 13:42.160
我可以用ADD

13:42.160 --> 13:42.400
因为呢

13:42.400 --> 13:42.720
联系呢

13:42.720 --> 13:45.680
也可以用on mouse

13:46.640 --> 13:46.880
当

13:48.160 --> 13:50.000
当鼠标按一下的时候

13:51.040 --> 13:51.360
是吧

13:51.360 --> 13:52.000
这一个事件

13:52.800 --> 13:54.480
鼠标按一下的时候要干嘛呢

13:54.480 --> 13:56.400
因为我只有按一下了才能拖动

13:56.400 --> 13:57.120
所以说

13:57.200 --> 13:57.840
拖动是什么

13:57.840 --> 13:59.520
就是监听鼠标的移动

13:59.520 --> 13:59.760
对吧

13:59.760 --> 14:00.560
在上面的移动

14:00.960 --> 14:02.720
所以说我们只有按一下的时候呢

14:03.120 --> 14:04.720
我要监听谁的移动

14:04.720 --> 14:05.280
监听

14:06.880 --> 14:08.800
鼠标在他上面的移动

14:09.920 --> 14:10.640
mouse

14:14.590 --> 14:16.430
鼠标在移动

14:19.260 --> 14:21.340
如果说我抬起来了

14:21.340 --> 14:22.460
鼠标抬起了

14:23.820 --> 14:25.660
鼠标抬起过后了

14:25.660 --> 14:28.060
我是不是就不再监听他的移动了

14:28.540 --> 14:28.860
对吧

14:29.500 --> 14:30.060
我看啊

14:31.340 --> 14:31.980
打个注释

14:35.550 --> 14:37.390
鼠标按一下后

14:37.870 --> 14:39.950
监听移动

14:40.670 --> 14:41.710
监听鼠标移动

14:43.150 --> 14:44.510
鼠标抬起后

14:45.550 --> 14:47.230
标抬起后

14:47.790 --> 14:51.870
不再监听鼠标移动和抬起

14:52.510 --> 14:53.390
好我们来看一下

14:53.390 --> 14:55.390
那么是不是这里是不是又要注册一个事件

14:55.390 --> 14:58.030
叫on mouse up

14:58.830 --> 15:00.350
当鼠标抬起的时候

15:01.390 --> 15:02.670
好我们这里要干嘛

15:02.750 --> 15:04.190
不再监听

15:04.190 --> 15:05.390
不再监听

15:06.110 --> 15:06.750
移动

15:06.750 --> 15:07.630
那么如何来

15:07.630 --> 15:09.790
你说我们把要把一个移动事件去除了

15:10.830 --> 15:12.110
那怎么来移除事件

15:12.750 --> 15:13.710
是不之前学过的

15:14.030 --> 15:16.990
mubar on mouse

15:17.870 --> 15:18.990
mubar稍微拉我

15:18.990 --> 15:19.630
覆盖就完事了

15:19.630 --> 15:19.870
对吧

15:19.870 --> 15:22.110
所以说我这里为什么没有用add event listener

15:22.110 --> 15:23.550
因为这种覆盖比较简单

15:24.110 --> 15:25.710
用add event listener行不行

15:25.710 --> 15:26.270
也行

15:26.270 --> 15:27.230
以后给大家写一下

15:28.750 --> 15:31.150
那鼠标抬起的时候是不是不再监听移动了

15:32.830 --> 15:33.710
那么顺便呢

15:33.710 --> 15:34.510
鼠标抬

15:34.510 --> 15:35.550
鼠标只要一抬起

15:35.550 --> 15:37.310
那鼠标抬起本身也不要

15:37.310 --> 15:38.430
也不要再监听了

15:40.030 --> 15:40.430
是吧

15:40.430 --> 15:41.790
因为你都鼠标抬都抬起了

15:41.790 --> 15:43.470
我都抬起鼠标了

15:44.030 --> 15:45.230
我干嘛还要再重新

15:45.230 --> 15:46.510
还要监听你抬起了

15:47.470 --> 15:49.390
那之后再按一下又重新来

15:49.390 --> 15:50.270
之后再按一下

15:50.270 --> 15:51.630
我又监听鼠标移动

15:51.630 --> 15:52.830
监听鼠标抬起

15:52.830 --> 15:54.030
也鼠标只要一抬起

15:54.030 --> 15:55.070
我就不再监听移动

15:55.070 --> 15:56.430
也不再监听抬起了

15:56.430 --> 15:58.670
也就是我在鼠标没有按下之前

15:58.670 --> 16:00.110
我只监听按下

16:00.110 --> 16:00.910
按下过后

16:00.990 --> 16:02.430
我才监听移动

16:02.430 --> 16:03.710
监听抬起

16:03.710 --> 16:04.590
一抬起来过后

16:04.590 --> 16:06.430
我就不再监听移动

16:06.430 --> 16:07.230
不再监听抬起了

16:07.230 --> 16:09.470
就保证鼠标没有按下之前

16:09.470 --> 16:10.670
只监听按下

16:10.670 --> 16:11.230
按下过后

16:11.790 --> 16:14.350
我要监听移动和抬起

16:14.350 --> 16:15.790
保证这么一个效果就行了

16:15.790 --> 16:15.950
好

16:15.950 --> 16:17.150
咱们来试一下

16:17.150 --> 16:18.670
看一下能不能完成这样的一个效果

16:20.510 --> 16:21.550
鼠标在这里按下

16:22.910 --> 16:23.310
按下

16:24.030 --> 16:24.750
鼠标在移动

16:24.750 --> 16:24.910
对吧

16:24.910 --> 16:25.630
再监听移动

16:26.430 --> 16:26.830
抬起

16:28.030 --> 16:28.590
不再监听了

16:28.590 --> 16:29.870
你看我鼠标再移动

16:29.870 --> 16:30.590
不再监听了

16:31.230 --> 16:31.950
然后再按一下

16:32.510 --> 16:33.390
鼠标移动

16:33.390 --> 16:34.270
鼠标移动

16:34.270 --> 16:35.550
抬起不再监听了

16:36.190 --> 16:37.310
就这么个意识逻辑

16:39.070 --> 16:39.390
好

16:39.390 --> 16:41.550
同学们先把这个代码写完

16:42.350 --> 16:42.830
不要看

16:42.830 --> 16:44.270
不要照着操划

16:44.270 --> 16:45.550
按照我这个逻辑带去

16:46.030 --> 16:48.510
把视频注意小话

16:48.510 --> 16:48.990
不要看

16:50.510 --> 16:50.990
好咩

16:51.310 --> 16:51.550
好

16:51.550 --> 16:52.750
那么接下来我们再继续

16:53.390 --> 16:55.310
这一块其实有一个隐患

16:55.310 --> 16:56.350
什么隐患呢

16:56.350 --> 16:57.710
你看着注意看

16:58.510 --> 16:59.950
我这里鼠标按下

17:00.030 --> 17:00.990
移动没问题对吧

17:00.990 --> 17:01.630
移动没问题

17:01.630 --> 17:02.670
但如果说有些人

17:03.310 --> 17:05.310
不像袁老师手这么稳

17:05.310 --> 17:06.270
他一动就跑这了

17:06.270 --> 17:07.550
鼠标就跑这了

17:07.550 --> 17:08.350
一跑这来了

17:09.790 --> 17:10.590
那还在监听吗

17:10.590 --> 17:11.390
鼠标移动

17:11.390 --> 17:12.270
所以没有监听了

17:12.830 --> 17:13.950
但是你不能保证

17:13.950 --> 17:15.950
鼠标的用户都像袁老师手这么稳

17:15.950 --> 17:16.270
对吧

17:17.070 --> 17:18.430
而且这一行子也容易

17:19.070 --> 17:20.910
用户体验也不是很好

17:21.870 --> 17:23.070
因此能稳最好就是

17:24.350 --> 17:26.430
给它的范围宽泛一点

17:26.430 --> 17:27.390
就是你在这里

17:27.390 --> 17:28.510
你首先要移动

17:28.510 --> 17:30.030
必须要在这里按下鼠标

17:30.750 --> 17:32.430
但是鼠标在移动的时候

17:32.430 --> 17:33.390
我可以宽泛一点

17:33.390 --> 17:35.630
你不一定在这个条上面移动

17:35.630 --> 17:37.790
你可以在整个屏幕上移动都可以

17:37.790 --> 17:38.350
对吧

17:38.350 --> 17:39.150
我都要监听

17:39.710 --> 17:40.990
也就是我监听什么

17:40.990 --> 17:43.150
监听鼠标在这里按下

17:44.350 --> 17:45.390
但是你移动

17:45.390 --> 17:46.190
随便在哪里移动

17:46.190 --> 17:46.830
我都要监听

17:47.470 --> 17:49.550
因此代码的最好改写一下

17:50.350 --> 17:52.670
鼠标必须要在它里边按下

17:52.670 --> 17:53.870
但是移动的时候

17:53.870 --> 17:55.630
我要在整个屏幕上监听

17:55.630 --> 17:58.030
那么怎么样在整个屏幕上监听呢

17:58.190 --> 17:58.750
Windows

18:00.940 --> 18:02.380
在整个屏幕上监听

18:03.100 --> 18:05.340
监听整个屏幕的鼠标移动

18:07.900 --> 18:08.700
懂了意思吧

18:10.140 --> 18:10.620
好

18:10.620 --> 18:11.900
鼠标抬起的时候

18:11.900 --> 18:12.780
那也可能你看

18:12.780 --> 18:13.420
现在开始移动

18:13.420 --> 18:14.540
移动到这抬起

18:15.340 --> 18:16.700
那移动到这抬起的时候

18:16.700 --> 18:17.500
我也要监听

18:17.500 --> 18:20.140
也就是说鼠标抬起

18:20.140 --> 18:22.060
我也要监听整个屏幕的抬起

18:22.060 --> 18:23.500
整个屏幕抬起之后

18:24.860 --> 18:27.980
我就不再监听整个屏幕的鼠标移动了

18:27.980 --> 18:30.300
也不再监听整个屏幕的鼠标抬起了

18:30.380 --> 18:33.580
所以把这个地方换成Windows好好去体会一下

18:33.580 --> 18:35.580
然后现在这种处理就搞得多了

18:35.580 --> 18:36.460
用户就

18:36.460 --> 18:38.060
我在这里必须要在这里按下

18:38.060 --> 18:38.620
这个没问题

18:38.620 --> 18:39.820
你看我这里随便移动

18:40.380 --> 18:41.180
它都会在监听

18:41.660 --> 18:43.340
然后抬起过后就不再监听了

18:44.380 --> 18:45.740
你看这样是不是更合理

18:45.740 --> 18:46.220
对吧

18:46.220 --> 18:47.820
那我在这里按下就没用了

18:47.820 --> 18:49.100
我必须要在这里按下

18:49.100 --> 18:49.660
按下的时候

18:49.660 --> 18:51.500
我监听整个屏幕的移动和抬起

18:51.900 --> 18:52.140
好

18:52.140 --> 18:53.500
一抬起过后我就不再监听了

18:54.060 --> 18:54.300
好

18:54.300 --> 18:55.340
把代码改造一下

18:56.860 --> 18:57.420
倒点水

19:04.800 --> 19:05.840
好那么接下来了

19:06.640 --> 19:07.200
下一件事

19:07.920 --> 19:08.240
就是

19:09.280 --> 19:10.080
我要干嘛呢

19:10.800 --> 19:12.560
我要让这个元素

19:12.560 --> 19:13.280
对吧

19:13.280 --> 19:14.400
我要让哪个元素移动

19:14.960 --> 19:16.400
是不是让这个Note这个元素

19:16.400 --> 19:17.120
这个DIV

19:17.120 --> 19:17.840
我们先过去

19:19.360 --> 19:21.600
要把你要移动的元素先找到

19:22.240 --> 19:23.120
我要移动它

19:24.160 --> 19:25.120
移动到哪去呢

19:25.120 --> 19:27.360
因为它肯定是个决定位

19:27.360 --> 19:29.200
目前我跟他说这是固定定位

19:29.200 --> 19:30.000
都行

19:30.000 --> 19:31.600
反正它肯定是个定位元素

19:32.480 --> 19:34.320
目前是固定定位

19:34.640 --> 19:35.680
PrationFixed

19:35.680 --> 19:37.200
随便给它设一个Left Top

19:38.000 --> 19:38.560
随便说的

19:40.240 --> 19:42.160
好那么现在的节就是我们移动

19:42.160 --> 19:43.200
实际上是改什么呢

19:43.200 --> 19:44.560
改这个Left Top

19:45.600 --> 19:47.200
什么时候要改它

19:47.200 --> 19:48.400
首先我们要确定这个

19:48.400 --> 19:50.400
什么时候我改这个Left Top

19:51.200 --> 19:51.680
什么时候

19:52.560 --> 19:53.920
是不是在鼠标移动的时候

19:54.640 --> 19:55.360
移动的时候

19:55.360 --> 19:56.160
因为鼠标在动

19:56.160 --> 19:57.200
它要跟着在动对吧

19:57.680 --> 19:59.120
这个变圈要跟着在动

19:59.120 --> 20:00.320
所以说鼠标移动的时候

20:00.320 --> 20:01.600
它的Left Top是不是要变

20:02.480 --> 20:03.920
那么现在的问题就是

20:04.400 --> 20:06.400
它的Left Top变为多少

20:07.040 --> 20:08.000
关键就在这

20:08.640 --> 20:09.600
主要移动的时候

20:10.080 --> 20:11.040
Left等于多少

20:13.280 --> 20:14.080
我给它复制

20:14.080 --> 20:15.120
复制很好复制对吧

20:15.120 --> 20:15.920
复制怎么复制

20:15.920 --> 20:18.160
loads.style.left

20:18.160 --> 20:19.600
给它复一个指就完成了

20:20.400 --> 20:21.840
loads.style.top

20:21.840 --> 20:22.960
给它复一个指就完成

20:22.960 --> 20:23.920
关键是

20:24.480 --> 20:25.680
它要复制多少

20:25.680 --> 20:26.640
也就是说我们现在要

20:26.640 --> 20:28.160
算出这个Left Top

20:28.960 --> 20:29.840
算出这个Left

20:30.960 --> 20:32.080
算出这个Top

20:32.080 --> 20:32.960
要把它算出来

20:33.520 --> 20:34.320
那关键是怎么算

20:34.320 --> 20:35.200
算出来就好复制了

20:35.600 --> 20:36.560
这里就是Left

20:36.560 --> 20:37.360
凭借上撇一个指

20:38.160 --> 20:39.440
这里就是Top

20:39.440 --> 20:40.480
凭借上撇一个指

20:42.080 --> 20:42.800
关键是怎么算

20:43.520 --> 20:44.880
这一块挺好

20:45.920 --> 20:46.400
是这样

20:47.680 --> 20:49.280
我这里给它画一下

20:50.400 --> 20:52.320
当我们鼠标按一下的时候

20:52.320 --> 20:53.040
在哪里按下的

20:53.040 --> 20:53.760
是不是在这里

20:53.760 --> 20:55.120
一定是在这个条上按下的

20:55.120 --> 20:55.440
对吧

20:56.000 --> 20:57.120
按一下的时候

20:57.120 --> 20:58.240
我就用圈圈来表示

20:58.800 --> 20:59.920
这里是不是会产生一个

20:59.920 --> 21:01.120
鼠标的坐标

21:01.920 --> 21:03.120
有时候说鼠标的坐标

21:03.120 --> 21:03.920
怎么来获取

21:05.440 --> 21:06.880
所有的鼠标事件

21:06.880 --> 21:08.240
它不是有个事件对象吗

21:08.720 --> 21:11.040
这个事件对象里边有一个属性

21:11.680 --> 21:13.360
叫做Clancer X

21:13.920 --> 21:15.520
和Clancer Y

21:16.400 --> 21:18.560
这个表示鼠标相对于

21:18.560 --> 21:20.560
四口的横重坐标

21:20.880 --> 21:22.000
所以不是相对于

21:22.000 --> 21:22.960
某一个元素的

21:22.960 --> 21:24.240
是相对于四口的

21:25.360 --> 21:26.160
好 咱们来看一下

21:27.680 --> 21:28.560
我鼠标在这里按下

21:28.560 --> 21:28.960
你看

21:28.960 --> 21:29.440
按下

21:29.840 --> 21:30.400
按下

21:30.400 --> 21:31.680
250104

21:32.240 --> 21:33.200
好 我在这里按下

21:33.200 --> 21:33.760
按下

21:33.840 --> 21:35.760
114 116 104

21:35.760 --> 21:36.160
对吧

21:36.800 --> 21:37.600
第一个横坐标

21:37.600 --> 21:38.400
第二个重坐标

21:38.720 --> 21:39.840
比方说

21:39.840 --> 21:41.040
我在这里按下

21:41.040 --> 21:41.600
那么

21:42.160 --> 21:43.040
我来这里按下一下

21:43.440 --> 21:45.120
218 104

21:45.120 --> 21:46.000
那么在这里按下

21:46.320 --> 21:47.920
这个218是啥呢

21:47.920 --> 21:48.880
这个218就这

21:50.000 --> 21:51.200
104是啥呢

21:51.200 --> 21:52.160
104就是这

21:53.040 --> 21:54.160
对吧 是一个坐标

21:54.160 --> 21:55.120
总之会有个坐标

21:55.120 --> 21:55.600
嘛 反正

21:57.200 --> 21:58.640
好 那么这里有个坐标

21:59.520 --> 22:00.800
当我鼠标按下的时候

22:00.800 --> 22:01.840
是不是可以拿到这个坐标

22:02.480 --> 22:03.520
我们先把这个坐标拿到

22:06.420 --> 22:06.820
这是

22:08.580 --> 22:09.060
x

22:09.460 --> 22:10.580
等于1.x

22:10.580 --> 22:11.380
Column's x

22:13.460 --> 22:14.420
然后Y

22:14.420 --> 22:16.020
等于1.Column's y

22:16.020 --> 22:18.900
是不是可以把鼠标按一下的坐标

22:18.900 --> 22:21.780
啊 这是鼠标按一下的坐标

22:21.780 --> 22:23.220
都是指的屏幕坐标

22:23.700 --> 22:25.060
全指的是四口坐标

22:26.660 --> 22:27.540
好 接下来再看

22:29.460 --> 22:30.660
我鼠标按下的时候

22:30.660 --> 22:31.540
这个坐标我知道了

22:32.500 --> 22:33.300
按下的时候

22:33.300 --> 22:34.180
还有一个坐标

22:34.980 --> 22:36.180
就是这个元素

22:36.180 --> 22:38.100
就是我要拖动那个元素标的露射

22:38.100 --> 22:38.820
就整个元素

22:39.700 --> 22:40.340
就这个元素

22:42.660 --> 22:44.340
那么它是不是本身有个坐标

22:45.140 --> 22:45.540
对不对

22:46.580 --> 22:48.020
它的坐标呢 换个颜色

22:49.540 --> 22:50.500
说左上角

22:50.500 --> 22:51.700
我们只看横坐标

22:51.700 --> 22:52.820
中坐标是一样的

22:53.380 --> 22:55.380
我们把横坐标分析出来就一样了

22:55.940 --> 22:56.580
按下的时候

22:56.580 --> 22:57.780
它是不是有个坐标

22:57.780 --> 22:59.060
那么这个坐标也是

22:59.060 --> 23:00.660
都是我们要把参考系一致

23:00.660 --> 23:01.860
都是相对于屏幕

23:01.860 --> 23:02.820
都是相对于四口

23:03.780 --> 23:04.660
这个坐标能不能算

23:05.940 --> 23:06.820
能不能算

23:06.820 --> 23:08.420
肯定是可以算吗

23:08.420 --> 23:09.220
怎么算

23:09.220 --> 23:09.780
看文道

23:11.140 --> 23:12.100
位置咋算

23:12.100 --> 23:13.380
不就是跟Left Top吗

23:14.180 --> 23:14.820
对吧

23:14.820 --> 23:15.620
那么先来一个

23:15.620 --> 23:16.980
Gate bounding Client Rect

23:20.740 --> 23:21.540
那么就是

23:21.540 --> 23:23.620
先来一个就是Rect

23:24.420 --> 23:26.100
等于Move Bar

23:26.660 --> 23:29.380
Gate bounding Client Rect

23:30.340 --> 23:32.020
好了于是那我们可以拿到什么

23:32.180 --> 23:34.660
拿到元素的坐标

23:35.220 --> 23:36.180
都是相对于屏幕

23:36.660 --> 23:37.940
元素坐标我用Left

23:42.420 --> 23:43.860
元素的坐标没问题

23:43.860 --> 23:44.420
Left

23:46.100 --> 23:46.740
换个名字吧

23:46.740 --> 23:47.620
因为跟下面的Left

23:47.620 --> 23:48.580
有重名

23:49.940 --> 23:53.220
叫做Ex吗

23:53.220 --> 23:54.420
Element X

23:54.420 --> 23:55.540
元素的X坐标

23:56.980 --> 23:57.620
Dialect

23:58.580 --> 24:02.180
Ey等于这个举行的Top

24:03.380 --> 24:04.660
拿到元素的坐标

24:04.660 --> 24:05.620
一个拿到就是

24:05.620 --> 24:06.660
数标的坐标

24:06.660 --> 24:07.620
一个是元素的坐标

24:07.620 --> 24:08.580
什么拿到了

24:08.580 --> 24:09.540
什么时候拿到了

24:09.540 --> 24:11.300
数标按下的时候拿到了

24:12.340 --> 24:14.660
好那么接下来就好说了

24:15.220 --> 24:16.100
数标移动

24:16.660 --> 24:17.780
那么每一次移动标

24:17.780 --> 24:18.900
移动一小段距离

24:18.900 --> 24:19.380
对吧

24:19.380 --> 24:20.660
是要触发一次事件

24:20.660 --> 24:21.220
移动到这

24:21.220 --> 24:22.260
也要触发一次事件

24:22.260 --> 24:23.140
反正不断的触发

24:23.620 --> 24:25.140
这个事件是不断的触发的

24:25.140 --> 24:26.180
那么看一下吧

24:26.180 --> 24:27.220
所以这里不停的移动

24:27.220 --> 24:29.060
还不停的都要触发摩斯布

24:30.100 --> 24:32.100
那在这里边是不是也可以拿到

24:33.140 --> 24:34.740
移动的时候的数标位置

24:35.620 --> 24:36.100
对吧

24:36.100 --> 24:36.660
我来看一下

24:37.460 --> 24:38.100
比方说

24:38.660 --> 24:39.780
我移动到了这

24:41.700 --> 24:42.900
数标移动到了这

24:43.620 --> 24:45.060
那么现在的问题

24:45.060 --> 24:47.380
就是我要算元素

24:47.380 --> 24:49.620
因为我要重新更改元素的Left

24:49.620 --> 24:50.660
Left的值

24:50.660 --> 24:51.220
对吧

24:51.220 --> 24:52.660
那元素应该到哪

24:54.260 --> 24:55.540
从这个图上

24:55.620 --> 24:57.620
已经可以非常清楚的看到了

24:57.620 --> 24:59.140
元素应该到这

25:00.740 --> 25:02.820
那么怎么把这个东西算出来的

25:03.940 --> 25:05.460
是不是它原来的

25:05.460 --> 25:06.660
就按下的时候的

25:08.020 --> 25:10.260
坐标加上一段距离

25:10.260 --> 25:10.980
加上什么距离

25:11.540 --> 25:12.740
加上这段距离

25:12.740 --> 25:13.220
对吧

25:13.220 --> 25:15.460
就算出这个距离是多少

25:16.180 --> 25:17.060
这个距离怎么算

25:17.060 --> 25:19.380
所以数标目前移动的时候的位置

25:19.380 --> 25:21.300
减去它按下的时候的位置

25:22.900 --> 25:23.380
对不对

25:24.340 --> 25:25.620
这两个积极是相等的

25:26.180 --> 25:26.820
是相等的

25:27.620 --> 25:27.860
好

25:27.860 --> 25:32.180
因此我们就可以在这里拿到距离

25:32.180 --> 25:33.940
Distance

25:33.940 --> 25:34.580
X

25:34.580 --> 25:36.100
横向的距离等于什么呢

25:36.100 --> 25:37.460
1点Client X

25:37.460 --> 25:38.980
就是数标移动的时候

25:39.460 --> 25:41.460
这个叉叉这个位置的坐标

25:41.460 --> 25:42.500
减去什么

25:42.500 --> 25:44.100
减去它起始的坐标

25:45.380 --> 25:45.940
起始什么

25:45.940 --> 25:46.980
按下的时候的坐标

25:46.980 --> 25:48.100
按下的时候是不是X

25:49.060 --> 25:49.940
那么D-Y

25:49.940 --> 25:52.100
是不是一样的1点Client Y

25:52.180 --> 25:52.820
减去

25:54.420 --> 25:54.820
Y

25:55.540 --> 25:56.580
不就是距离吗

25:56.580 --> 25:57.940
这个玩意不距离不出来了吗

25:58.500 --> 26:00.100
那么这个距离出来了之后

26:00.660 --> 26:01.940
这个距离就算出来了对吧

26:01.940 --> 26:03.700
它减它这个距离就算出来了

26:04.580 --> 26:06.340
终点起点嘛

26:06.340 --> 26:06.900
算出来了

26:08.500 --> 26:11.220
那如果说差差在左边怎么办

26:11.220 --> 26:12.020
那不一样嘛

26:12.020 --> 26:13.620
这算出来无非就是负数吗

26:14.420 --> 26:15.620
差差在左边的时候

26:16.740 --> 26:18.660
那算出来不就是负数吗

26:18.660 --> 26:20.340
那负数就负数呗

26:20.340 --> 26:21.220
那这里是负数

26:21.300 --> 26:23.220
那么它加上一个负数

26:23.220 --> 26:24.900
加上一个负数不该往这跑嘛

26:25.700 --> 26:26.900
对吧是一样的呀

26:26.900 --> 26:27.700
没有什么区别

26:28.420 --> 26:30.340
反正就终点减起点就是距离嘛

26:31.860 --> 26:32.820
好距离出来了

26:32.820 --> 26:33.700
然后我们再

26:33.700 --> 26:35.300
是不是要做的事情就很简单了

26:36.020 --> 26:37.780
在这个元素的起始坐标

26:37.780 --> 26:39.300
是按下的时候的起始坐标

26:40.180 --> 26:43.460
它上面加上这段距离不就完了吗

26:44.420 --> 26:45.140
好我们来看一下

26:45.700 --> 26:46.660
也就是我们这里算出来

26:46.660 --> 26:47.620
Left得多少

26:47.620 --> 26:50.100
等于EX加上DX

26:51.300 --> 26:52.820
然后Top值等于多少

26:52.820 --> 26:55.620
等于EY加上DXY

26:56.740 --> 26:57.780
这距离就不出来了嘛

26:58.580 --> 26:59.860
好这个距离一出来

26:59.860 --> 27:02.100
我把新的坐标一出来

27:02.100 --> 27:03.540
我把新的坐标复制回去

27:04.580 --> 27:05.060
就完了

27:07.520 --> 27:08.240
就可以透动了

27:08.880 --> 27:09.760
那是不是可以透动了

27:10.640 --> 27:11.040
对吧

27:11.920 --> 27:13.600
哎那有时候还想不通

27:14.240 --> 27:14.960
袁老师呢

27:17.600 --> 27:18.640
再重新画一次

27:19.120 --> 27:20.880
袁老师呢只是画了一个点

27:20.880 --> 27:22.400
对吧鼠标移动到一个点

27:22.480 --> 27:22.960
那如果呢

27:23.520 --> 27:25.040
鼠标移动的是连续的呀

27:25.040 --> 27:26.960
那连续的为什么就可以起效果呢

27:26.960 --> 27:27.520
就想不通

27:28.000 --> 27:29.040
其实是一样的

27:29.040 --> 27:29.760
一个点可以

27:29.760 --> 27:30.960
那多个点就可以

27:30.960 --> 27:31.440
比方说

27:32.240 --> 27:33.200
鼠标移动到这

27:33.520 --> 27:34.080
一个点吧

27:36.000 --> 27:36.880
是移到一个点

27:37.440 --> 27:39.760
然后呢元素应该运动到哪

27:39.760 --> 27:40.880
所以应该是运动到这

27:40.880 --> 27:41.440
对吧

27:41.440 --> 27:42.160
这个没问题吧

27:42.720 --> 27:44.320
那鼠标接着移动

27:44.320 --> 27:45.440
接着移动到了这

27:45.440 --> 27:46.960
不是还是一样嘛

27:46.960 --> 27:48.400
你把这一段距离求出来

27:48.400 --> 27:48.720
对吧

27:48.720 --> 27:49.920
到起始的位置求出来

27:50.880 --> 27:51.920
然后呢

27:51.920 --> 27:53.680
这边呢是不是就应该到这了

27:53.680 --> 27:54.240
因为为什么

27:54.240 --> 27:55.600
对于这段距离是一样的呀

27:56.800 --> 27:57.440
不一样吧

27:57.440 --> 27:58.240
还是一样的

27:58.880 --> 27:59.520
是吧

27:59.520 --> 28:00.640
是这个道理吧

28:01.040 --> 28:02.560
所以这就可以移动了

28:03.680 --> 28:04.000
但是呢

28:04.000 --> 28:05.680
这里有个小细节注意

28:05.680 --> 28:07.040
你不能移出四口

28:07.680 --> 28:09.680
你看我现在说就移出四口了

28:09.680 --> 28:10.480
那肯定不行

28:10.480 --> 28:11.200
也就是说

28:11.200 --> 28:12.960
我们最多左边就移到这

28:13.440 --> 28:13.840
因此呢

28:13.840 --> 28:16.160
我在这里是不是要对nav这进行限制

28:18.540 --> 28:18.940
在这

28:19.260 --> 28:22.540
还有对nav这

28:23.100 --> 28:28.220
nav这和top的有效范围进行限制

28:28.700 --> 28:29.820
怎么限制呢

28:30.940 --> 28:32.780
我认为nav这是最

28:32.780 --> 28:34.220
我先把搞定nav这

28:34.220 --> 28:35.820
nav的注意少为0

28:36.380 --> 28:37.580
如果它小于0了

28:37.580 --> 28:38.780
比方说像这种情况

28:38.780 --> 28:39.500
它跑出去了

28:39.500 --> 28:40.140
我觉得不行

28:41.020 --> 28:42.220
nav的注意小为0

28:42.220 --> 28:42.940
小于0的话

28:42.940 --> 28:43.820
我把它复制为0

28:44.780 --> 28:45.180
对吧

28:45.180 --> 28:46.140
就是个变量吧

28:46.140 --> 28:47.740
这个变量最终会在这里复制

28:47.820 --> 28:49.340
它限制一下不就完了吗

28:49.340 --> 28:51.420
小于0的时候我就给它设置为0

28:52.060 --> 28:53.020
你想过去的话

28:53.020 --> 28:53.900
我不要你过去

28:55.900 --> 28:57.020
那么最大值呢

28:57.020 --> 28:57.740
同学们想一想

28:57.740 --> 28:58.220
最大值

28:59.500 --> 29:00.620
最大值是不是在这

29:01.100 --> 29:02.460
那么也说最大的nav成了

29:02.460 --> 29:03.340
就周围段

29:03.340 --> 29:04.780
那么这段怎么刷出来的

29:04.780 --> 29:06.540
什么整个屏幕的宽度

29:07.580 --> 29:10.380
减去这个元素自身的宽度

29:12.060 --> 29:12.380
对吧

29:13.020 --> 29:14.700
如果说我们可以认为

29:14.700 --> 29:16.780
元素的宽度在拖动的期间

29:16.860 --> 29:17.740
是不会变化的

29:18.300 --> 29:19.420
因为这个场景里边

29:19.420 --> 29:20.460
你拖动元素的时候

29:20.460 --> 29:21.580
它的宽高不会变化

29:21.580 --> 29:22.300
对吧

29:22.300 --> 29:25.580
所以说拖动元素的期间宽高不变

29:27.020 --> 29:28.620
拖动元素的期间

29:28.620 --> 29:30.540
湿口的宽高也不变

29:30.540 --> 29:31.980
因此我建议同学们

29:32.460 --> 29:35.420
在鼠标按下的时候获取

29:35.420 --> 29:39.340
湿口宽高和元素宽高

29:39.820 --> 29:40.940
我建议在这里获取

29:41.580 --> 29:43.500
不建议在鼠标移动的时候获取

29:43.500 --> 29:46.380
因为获取湿口宽高和元素宽高

29:46.460 --> 29:48.460
是一个费时的操作

29:49.260 --> 29:50.140
比较费时的

29:50.140 --> 29:51.740
这个费时是相对的

29:51.740 --> 29:53.660
不是说还要在这卡一辆秒钟

29:53.660 --> 29:54.620
那不至于

29:54.780 --> 29:56.620
会多个几毫秒

29:57.100 --> 29:58.460
或者是时代毫秒

29:58.940 --> 30:00.140
时代毫秒就有点夸张了

30:00.140 --> 30:01.980
基本就是几毫秒

30:03.020 --> 30:06.380
那么这一个事情最好就是少做

30:06.380 --> 30:07.020
少做

30:07.020 --> 30:08.540
因为我觉得在拖动期间

30:08.540 --> 30:10.460
它的这些宽高都不变

30:10.460 --> 30:11.660
所以说我就按下的时候

30:11.660 --> 30:12.380
就直接获取了

30:12.380 --> 30:13.260
后面就直接用

30:13.820 --> 30:15.180
不要反复的去获取

30:15.660 --> 30:17.340
那么我们来获取宽高

30:17.340 --> 30:18.940
一个是屏幕的

30:18.940 --> 30:22.380
就是那个湿口的宽高用W

30:22.860 --> 30:24.140
等于Document

30:24.140 --> 30:25.180
你就查文档吧

30:25.180 --> 30:26.860
湿口宽高怎么来获取啊

30:26.860 --> 30:27.740
尺寸在这里

30:27.740 --> 30:29.180
湿口肯定不是这

30:29.180 --> 30:30.140
这是元素的

30:30.140 --> 30:31.340
那就是这了呗

30:31.340 --> 30:32.220
对吧湿口

30:32.220 --> 30:34.060
对吧跟元素的Client Width

30:34.060 --> 30:35.340
Client Height

30:36.940 --> 30:37.660
Document

30:39.820 --> 30:41.260
Document Element

30:41.260 --> 30:43.260
Client Width

30:44.220 --> 30:45.820
高度呢

30:45.820 --> 30:47.020
Document

30:47.020 --> 30:48.380
Client Height

30:48.380 --> 30:50.780
对吧先把湿口的宽高获取了

30:50.780 --> 30:52.780
然后那是元素的宽高

30:52.780 --> 30:54.460
元素宽高用EW

30:54.460 --> 30:56.060
Element Width

30:56.060 --> 30:58.860
元素的宽高是不是可以用那个Note

30:58.860 --> 31:01.420
对吧这是个元素嘛

31:01.420 --> 31:02.620
元素了什么

31:02.620 --> 31:04.060
因为这里有变框吧

31:04.060 --> 31:04.780
没有变框

31:04.780 --> 31:05.580
没有变框

31:05.580 --> 31:07.580
没有关系的话就可以用Client Width

31:07.580 --> 31:09.420
有变框的话用Offset Width

31:09.420 --> 31:11.100
当然也可以直接用Offset Width

31:11.100 --> 31:11.900
都行啊

31:11.900 --> 31:13.180
Offset Width

31:14.140 --> 31:17.180
高度呢

31:17.180 --> 31:20.380
Note Offset Height

31:20.380 --> 31:21.740
为了验证一下

31:21.740 --> 31:23.340
我们来看一下按下的时候

31:23.340 --> 31:24.540
屏幕的宽高

31:24.540 --> 31:26.140
元素的宽高

31:26.140 --> 31:28.140
它有没有正确的获取到

31:28.140 --> 31:30.820
按一下

31:30.820 --> 31:32.020
你看是不是都获取到了

31:32.020 --> 31:35.060
好那么获取到之后

31:35.060 --> 31:36.820
再来过来

31:36.820 --> 31:38.980
Left的最大值顿等于多少

31:38.980 --> 31:40.580
所以就可以直接算出来了

31:40.580 --> 31:44.740
算出最大的Left和

31:45.300 --> 31:46.740
Top

31:46.740 --> 31:48.260
最小的我们知道都是0嘛

31:48.260 --> 31:49.860
最大的Left和Top呢

31:49.860 --> 31:52.740
怎么算呢

31:52.740 --> 31:53.540
Max

31:53.540 --> 31:53.940
Left

31:53.940 --> 31:55.940
最大的Left值等于什么

31:55.940 --> 31:57.540
等于湿口宽度

31:57.540 --> 32:00.740
减去元素宽度

32:00.740 --> 32:01.780
就等于这儿

32:01.780 --> 32:03.540
这些东西要去算一下

32:03.540 --> 32:05.380
一写熟了这玩意太简单了

32:05.380 --> 32:06.420
一开始

32:06.420 --> 32:07.460
结束的时候呢

32:07.460 --> 32:08.100
哇

32:08.100 --> 32:09.860
其实有什么高升的数学之手

32:09.860 --> 32:10.660
那都不至于

32:10.660 --> 32:12.500
全都是加减法

32:12.500 --> 32:13.860
你要说加减法很高升

32:13.860 --> 32:16.100
那我也跑说啥

32:17.060 --> 32:20.100
那么这里是最大的就是Left

32:20.100 --> 32:22.340
还有还就是最大的高度

32:22.340 --> 32:23.860
最大的重着标

32:23.860 --> 32:27.540
就是H减去EH

32:27.540 --> 32:28.580
是吧

32:29.940 --> 32:31.140
一步一算

32:31.140 --> 32:32.340
然后我刚才忘了说了

32:32.340 --> 32:33.300
之前忘了说了

32:33.300 --> 32:34.340
让同学跟着写

32:34.340 --> 32:34.980
跟着写

32:34.980 --> 32:35.860
写一段你差不多了

32:35.860 --> 32:36.740
你跟着写

32:38.260 --> 32:39.700
好那么算出来过后了

32:39.700 --> 32:40.660
这里就简单了

32:40.660 --> 32:43.140
那小于0的话就法复制为0

32:43.140 --> 32:44.580
那如果说大于呢

32:44.660 --> 32:45.140
大于呢

32:45.140 --> 32:46.580
就是MaxLeft呢

32:46.580 --> 32:48.820
就把它复制为MaxLeft

32:49.460 --> 32:50.340
还是Left

32:50.340 --> 32:51.540
TOP一样

32:51.540 --> 32:52.580
TOP小于0呢

32:52.580 --> 32:53.540
就复制为0

32:57.300 --> 32:59.940
如果说TOP大于MaxTOP呢

32:59.940 --> 33:02.820
就复制为MaxTOP

33:06.190 --> 33:06.990
看一下吧

33:06.990 --> 33:07.870
你看就拖不过去了

33:07.870 --> 33:08.910
你看这就拖不过去了

33:10.430 --> 33:11.470
上边也是

33:11.470 --> 33:12.430
下边也是

33:12.430 --> 33:13.070
拖不过去了

33:13.070 --> 33:14.110
那么就在个屏幕里边

33:14.750 --> 33:15.150
对吧

33:15.150 --> 33:16.430
就非常舒服了

33:16.510 --> 33:17.150
好 我们再看

33:17.150 --> 33:18.110
放大一点屏幕

33:18.110 --> 33:18.670
也一样

33:18.670 --> 33:19.470
那就看

33:21.390 --> 33:21.950
没问题吧

33:22.670 --> 33:24.350
好那么这是拖动效果

33:24.350 --> 33:25.150
拖动效果

33:25.870 --> 33:26.830
后边以后

33:26.830 --> 33:28.110
广页上反正拖动效果

33:28.110 --> 33:29.230
都是这样子玩的

33:29.230 --> 33:30.910
你就弄的方式玩就行了

33:30.910 --> 33:33.390
基本上逻辑都是一样的

33:34.670 --> 33:36.110
好这是这一块

33:36.110 --> 33:36.510
第一题

33:40.450 --> 33:40.850
第二题

33:43.090 --> 33:43.970
把这全部关掉

33:46.670 --> 33:48.430
第二题是有一个小球

33:49.230 --> 33:50.030
这个小球呢

33:51.150 --> 33:52.350
你们做得出来吧

33:52.350 --> 33:53.630
就是一个固定定位

33:53.630 --> 33:54.990
一个决定定位或者固定定位

33:54.990 --> 33:55.870
反正一个小球在这

33:57.470 --> 33:58.670
然后有一个介石

33:58.670 --> 34:00.430
现在就是介石里边玩了

34:00.430 --> 34:03.630
让这个小球向右下运动

34:04.510 --> 34:05.550
向这个方向运动

34:06.110 --> 34:07.710
遇到边缘就反弹

34:08.590 --> 34:09.630
做这么一件事

34:09.630 --> 34:10.590
自己来谈谈谈去

34:11.230 --> 34:12.510
就是做这么一件事

34:13.870 --> 34:15.710
什么叫做向右下运动

34:18.320 --> 34:20.000
你们之前做了一个英雄

34:20.160 --> 34:21.440
向右边跑的

34:21.440 --> 34:22.400
是一样的道理

34:23.120 --> 34:25.360
每隔一脚段时间

34:25.360 --> 34:28.960
让它的X轴和重轴

34:28.960 --> 34:30.560
产生一点变化

34:31.680 --> 34:32.880
不就做这么一个事吗

34:34.000 --> 34:34.400
对吧

34:35.760 --> 34:37.040
所以说我们这道题

34:38.000 --> 34:40.080
核心的要做的就是

34:40.080 --> 34:42.640
每隔一段时间

34:42.640 --> 34:43.520
那么每个多少时间

34:43.520 --> 34:44.640
你可以随便来吧

34:44.640 --> 34:46.880
你要不能每隔一秒钟

34:46.880 --> 34:48.400
那就是一秒钟动一下

34:48.400 --> 34:49.120
一秒钟动一下

34:49.200 --> 34:50.080
一秒钟动一下

34:50.080 --> 34:51.440
比一个时间一般比较短

34:51.440 --> 34:53.200
一般设置20毫秒左右吧

34:53.680 --> 34:55.120
每隔一段小段时间

34:55.120 --> 34:56.560
那么就是固定20毫秒吧

34:59.920 --> 35:03.040
改变小球的

35:03.040 --> 35:05.120
Left和Top

35:05.760 --> 35:07.360
是不是就做改变就行了

35:07.360 --> 35:09.120
如何做改变呢

35:09.120 --> 35:11.200
就是把Left只加一段

35:12.480 --> 35:13.840
Top只加一段

35:15.200 --> 35:16.000
但有些朋友说

35:16.000 --> 35:17.040
那反弹之后不要

35:17.600 --> 35:18.080
方向吗

35:19.200 --> 35:21.120
往上或者是往左吗

35:22.400 --> 35:23.920
那就加一个Fu数不就完了吗

35:25.280 --> 35:25.840
对吧

35:25.840 --> 35:27.440
所以说我们这一块呢

35:27.440 --> 35:29.120
首先需要考虑的就是

35:29.760 --> 35:31.040
因为我这个代码很好写

35:31.040 --> 35:32.160
就是set interval

35:33.440 --> 35:33.920
对吧

35:33.920 --> 35:35.200
我说永远都不会停止的

35:35.200 --> 35:36.480
这个小球一直在运动

35:36.480 --> 35:37.600
20毫秒都固定的

35:38.240 --> 35:40.240
那小球不得获取吗

35:40.240 --> 35:41.040
对吧

35:41.040 --> 35:42.560
这里有些小技巧

35:42.560 --> 35:44.160
你可以在这里获取小球

35:44.160 --> 35:45.760
表面播用什么document

35:47.280 --> 35:48.000
curves negative

35:50.080 --> 35:50.880
那样是微波

35:53.970 --> 35:55.410
你可以在这里获取

35:55.410 --> 35:55.810
但是呢

35:55.810 --> 35:56.530
我建议呢

35:56.530 --> 35:57.330
在外面获取

35:57.330 --> 35:57.970
为什么

35:57.970 --> 35:58.770
你想这个道理

36:00.210 --> 36:01.810
这个元素在运动期间

36:03.490 --> 36:04.370
会消失吗

36:04.370 --> 36:04.850
不会吧

36:05.730 --> 36:06.610
会新增吗

36:06.610 --> 36:07.010
不会吧

36:08.850 --> 36:09.890
所以说这个元素

36:09.890 --> 36:10.930
这个动元素

36:10.930 --> 36:12.050
这个对象是固定的

36:12.610 --> 36:13.810
你没有必要每一

36:13.810 --> 36:15.250
20毫秒获取一次

36:15.250 --> 36:17.090
获取是需要时间的

36:17.090 --> 36:18.370
所以说你反正都是固定的

36:18.370 --> 36:19.650
那就先来获取

36:19.730 --> 36:20.210
后面就改

36:20.210 --> 36:20.850
它就完事了

36:21.490 --> 36:22.930
每个20毫秒改啥

36:23.490 --> 36:25.010
我是不是要算出一个naft

36:26.530 --> 36:26.850
对不对

36:26.850 --> 36:27.970
是不是要算出一个naft

36:28.690 --> 36:29.730
要算出一个top

36:30.850 --> 36:32.770
然后就给它复制就完事了

36:32.770 --> 36:34.770
这也是这样的玩法

36:35.330 --> 36:35.650
对吧

36:37.820 --> 36:38.620
算出一个naft

36:38.620 --> 36:39.580
算出一个top

36:39.580 --> 36:41.100
然后给它复制不就完了吗

36:41.820 --> 36:43.020
所以我们现在就要算这个

36:43.580 --> 36:44.860
那这个怎么算呢

36:44.860 --> 36:46.540
每一次的作标怎么算

36:48.060 --> 36:48.700
这要怎么算

36:51.570 --> 36:52.450
是不是就可以

36:52.930 --> 36:55.650
在它之前的作标上加一段

36:55.650 --> 36:56.130
对不对

36:56.130 --> 36:57.490
是在之前的作标加一段

36:58.370 --> 36:59.970
那么之前的作标

37:01.010 --> 37:01.730
又咋算了

37:02.530 --> 37:04.130
问题是之前的作标又咋算了

37:04.770 --> 37:06.210
之前的作标是不是又来了

37:06.210 --> 37:06.850
这个玩意儿

37:08.940 --> 37:09.740
所以这个玩意儿

37:09.740 --> 37:10.140
对吧

37:10.140 --> 37:11.340
get bounding clad rigged

37:11.980 --> 37:13.020
每一次拿到

37:13.020 --> 37:14.300
那这里只能在这里拿了

37:14.300 --> 37:15.660
因为每一次的作标不一样

37:16.300 --> 37:17.980
每隔20毫秒它作标都会变化

37:18.540 --> 37:20.060
所以说我们这里拿到这个举行

37:21.260 --> 37:21.500
不

37:22.060 --> 37:22.940
拿到这个举行

37:23.020 --> 37:25.900
然后获取它的x和y

37:27.420 --> 37:27.740
对吧

37:30.030 --> 37:31.150
就获取它的x和y

37:31.710 --> 37:33.230
然后它当前的x和y

37:33.230 --> 37:35.790
那么新的作标是不是要加上一段

37:36.830 --> 37:37.790
是不是要加上一段

37:39.630 --> 37:40.110
加上一段

37:40.110 --> 37:41.230
它如果说往左边跑

37:41.230 --> 37:41.950
往上边跑了

37:41.950 --> 37:42.910
就是加复数

37:42.910 --> 37:43.630
往右边跑

37:43.630 --> 37:44.910
往下边跑就是加正数

37:45.470 --> 37:46.750
那么加上多少呢

37:46.750 --> 37:48.670
我们可以在外边定一个变量

37:48.670 --> 37:49.550
比方说

37:49.550 --> 37:51.630
第四表示距离

37:51.630 --> 37:54.110
每一20毫秒运动的距离

37:54.190 --> 37:56.190
x表示横向运动距离

37:56.190 --> 37:57.550
比方说我们给它写个e

37:58.110 --> 38:00.510
中向运动距离的x y等于

38:00.990 --> 38:01.710
互移

38:01.710 --> 38:02.350
也是e

38:02.350 --> 38:02.910
对吧

38:02.910 --> 38:04.590
每一次横作标加e

38:04.590 --> 38:06.430
每一次重作标也加e

38:06.430 --> 38:08.590
所以说我们横作标等于

38:09.150 --> 38:11.790
它之前的作标加上第四x

38:12.510 --> 38:13.150
这个楼记吧

38:14.030 --> 38:17.790
重作标等于之前的重作标加上第四y

38:18.830 --> 38:20.270
横作标就算出来了吧

38:20.270 --> 38:21.070
那我们来看一下

38:21.070 --> 38:22.110
把猪是一取消

38:24.190 --> 38:24.750
不觉得跑吗

38:24.750 --> 38:25.070
对吧

38:25.710 --> 38:26.270
再不再跑

38:26.910 --> 38:27.390
再跑

38:30.030 --> 38:30.990
跑出去了

38:30.990 --> 38:32.590
我先不管跑不跑出去

38:32.910 --> 38:33.070
好

38:33.070 --> 38:33.950
我们现在再来看

38:35.950 --> 38:36.430
要再来看

38:36.430 --> 38:38.110
那如果说我这里写成富一

38:38.110 --> 38:39.150
它就往左边跑

38:40.910 --> 38:42.350
左边往下往左

38:42.750 --> 38:42.910
对吧

38:42.910 --> 38:43.870
每次加的是富数

38:44.670 --> 38:46.350
那我这个网上写的是富数呢

38:47.630 --> 38:49.230
它就往右边上边跑

38:49.950 --> 38:51.070
那两个都是富数呢

38:52.510 --> 38:53.550
它就往左上跑

38:53.630 --> 38:54.270
对吧

38:54.270 --> 38:56.030
加的是正处它就往左

38:56.030 --> 38:56.910
反正就懂的

38:56.910 --> 38:57.470
你懂的

38:59.310 --> 39:00.670
那么接下来的问题就是

39:02.190 --> 39:03.710
它到了某一个点

39:04.510 --> 39:06.110
它会有反向

39:06.910 --> 39:07.630
哪个点呢

39:07.630 --> 39:09.230
就是跟屏幕的宽高有关

39:09.950 --> 39:11.630
而整个运动期间

39:11.630 --> 39:13.710
屏幕的宽高我认为是不变的

39:14.430 --> 39:16.030
整个运动期间我认为是不变的

39:16.030 --> 39:17.790
那么当然也有没有可能变化

39:17.790 --> 39:18.910
有它比较正在运动里

39:18.910 --> 39:20.190
把屏幕给它变大了

39:20.190 --> 39:20.990
那就有变化了

39:21.630 --> 39:22.910
那我就假设它不变

39:23.950 --> 39:26.510
不变的话那么屏幕的宽高

39:26.510 --> 39:27.710
我是不是一开始就可以获取

39:28.190 --> 39:28.670
对吧

39:28.670 --> 39:30.030
屏幕的W

39:30.830 --> 39:32.990
等于Documenter

39:32.990 --> 39:34.430
有什么来的藏创

39:34.430 --> 39:36.270
Documenter,Elementer,Client's Width

39:36.910 --> 39:37.950
屏幕的宽度

39:37.950 --> 39:39.150
然后屏幕的高度呢

39:39.790 --> 39:40.110
对吧

39:40.110 --> 39:40.430
高度

39:41.150 --> 39:41.310
好

39:41.310 --> 39:42.270
这是屏幕的宽高

39:44.110 --> 39:45.230
屏幕的宽高

39:45.870 --> 39:48.110
那么小球的宽高是不是也可以获取

39:48.110 --> 39:48.510
对吧

39:48.510 --> 39:52.030
EW等于4Client's Width

39:52.990 --> 39:56.190
EH等于4Client's Height

39:56.190 --> 39:57.710
好小球的宽高有人知道

39:57.710 --> 39:58.830
那是不是也一样的

39:58.830 --> 39:59.470
你看这种

39:59.470 --> 40:00.750
基本上好多都是相同的

40:00.750 --> 40:02.830
最大的横坐标是多少

40:05.100 --> 40:05.660
不扯了

40:05.660 --> 40:06.380
就在这

40:07.340 --> 40:09.020
最大的重坐标在哪呢

40:09.020 --> 40:09.740
高度

40:09.740 --> 40:10.860
最小的肯定是0吗

40:12.060 --> 40:12.860
对吧

40:12.860 --> 40:15.100
最大的横重坐标是不是算出来

40:16.860 --> 40:21.420
计算最大横重坐标

40:23.700 --> 40:24.020
好

40:24.020 --> 40:25.300
那么现在我们在这里玩

40:25.300 --> 40:26.100
开始来玩

40:26.100 --> 40:27.300
我就一开始复制

40:27.300 --> 40:28.100
复制

40:28.100 --> 40:28.340
复制你的

40:28.980 --> 40:30.820
我先这控制一下

40:32.020 --> 40:32.740
控制范围

40:34.180 --> 40:34.900
控制范围

40:36.180 --> 40:37.780
如果说Left

40:39.620 --> 40:40.500
大鱼了

40:41.860 --> 40:42.500
小鱼了

40:43.060 --> 40:43.620
先说大鱼

40:44.100 --> 40:44.900
大鱼的你

40:44.900 --> 40:46.020
大鱼的最大坐标

40:47.140 --> 40:48.980
那Left只能是这个最大坐标

40:48.980 --> 40:49.300
是吧

40:49.300 --> 40:50.180
你不能跑出去

40:50.740 --> 40:51.700
所以说到这

40:52.020 --> 40:52.580
那你看一下

40:53.140 --> 40:54.340
我直接把Left控制

40:54.340 --> 40:55.620
它到最大坐标的时候

40:55.620 --> 40:57.060
它就不会站往右边跑了

40:59.570 --> 41:00.690
就不会站往右边跑了

41:01.810 --> 41:03.090
那问题是怎么反向呢

41:05.650 --> 41:06.610
请问怎么反向

41:07.490 --> 41:08.290
什么叫反向

41:09.810 --> 41:11.090
每一次加的是1

41:11.090 --> 41:12.930
是不是把它每一次变成负1

41:13.570 --> 41:13.810
对吧

41:13.810 --> 41:15.010
也就是变它的负数

41:17.620 --> 41:19.060
是不是变成负数就完成了

41:19.060 --> 41:19.700
它之前是

41:20.660 --> 41:21.940
1变成负1变

41:22.420 --> 41:23.060
那就反向了

41:23.620 --> 41:24.900
一个十字就是不是反向了

41:25.620 --> 41:25.940
对吧

41:25.940 --> 41:27.620
这我们现在看的是横坐标

41:30.130 --> 41:30.770
就反向了

41:32.370 --> 41:32.690
好了

41:32.690 --> 41:33.970
中坐标不一样吗

41:33.970 --> 41:34.530
中坐标

41:35.650 --> 41:36.690
Top大鱼

41:36.690 --> 41:37.330
Max Top

41:40.940 --> 41:42.140
它不能超出去

41:44.980 --> 41:45.620
然后呢

41:45.620 --> 41:46.660
中坐标反向

41:48.020 --> 41:48.580
第10万

41:50.340 --> 41:51.060
稍微大一点

41:51.060 --> 41:52.100
稍微大一点

41:52.100 --> 41:52.980
我这里写成2

41:52.980 --> 41:54.260
每次两个项数

41:54.260 --> 41:55.060
一同两个项数

42:00.400 --> 42:00.640
好了

42:00.640 --> 42:02.480
那么现在我要考虑0的情况了

42:02.480 --> 42:03.200
对吧

42:03.200 --> 42:03.680
不一样吧

42:03.680 --> 42:04.400
0的情况

42:04.400 --> 42:05.040
横坐标来

42:05.440 --> 42:07.280
如果说Max小于0

42:07.280 --> 42:08.400
那你只能是0

42:09.680 --> 42:10.240
对吧

42:10.240 --> 42:10.560
然后呢

42:10.560 --> 42:11.200
还是要反向

42:12.320 --> 42:12.880
就是反向

42:13.600 --> 42:14.080
第10

42:14.080 --> 42:14.480
那个是

42:16.080 --> 42:16.320
好

42:16.320 --> 42:17.520
Max也是一样

42:17.520 --> 42:18.880
如果说Top小于0

42:22.930 --> 42:24.690
那么Top只能是去到0

42:25.490 --> 42:28.050
第10Y等于第10Y

42:28.050 --> 42:28.290
对吧

42:28.290 --> 42:28.930
这就是反向

42:29.890 --> 42:30.530
就完事了

42:31.890 --> 42:33.410
那就它在这里碰来碰去

42:34.770 --> 42:35.330
其实这个

42:36.530 --> 42:37.810
还可以玩一些别的画像

42:37.890 --> 42:39.170
比如说每一次碰撞

42:39.170 --> 42:40.450
我要改变它的颜色

42:40.450 --> 42:41.730
还要随机改变颜色

42:42.530 --> 42:43.250
是不是也可以玩

42:43.890 --> 42:45.010
随机颜色

42:45.010 --> 42:46.130
实际上是很好做的

42:46.770 --> 42:47.810
只要出现随机

42:47.810 --> 42:49.330
你先把这个函数给我写出来

42:49.810 --> 42:50.210
red

42:50.930 --> 42:51.330
min

42:51.570 --> 42:52.130
Max

42:52.130 --> 42:53.250
先把这个玩意儿写出来

42:53.250 --> 42:54.610
这个玩意儿是不是之前讲过了

42:55.730 --> 42:56.530
不再重复扯了

42:59.470 --> 43:00.510
最小之最大之间

43:00.510 --> 43:01.310
产生一个随机数

43:01.870 --> 43:03.310
那我要玩一个颜色出来

43:03.310 --> 43:03.870
怎么玩

43:04.670 --> 43:05.630
每一次

43:05.630 --> 43:06.990
就是比方说我再写个函数

43:07.870 --> 43:08.590
颜色

43:09.790 --> 43:10.270
颜色

43:10.990 --> 43:11.950
颜色逼迹

43:11.950 --> 43:13.230
改变背景颜色

43:13.230 --> 43:14.590
随机改变背景颜色

43:14.590 --> 43:15.790
随机改变

43:17.710 --> 43:19.070
背景颜色

43:19.070 --> 43:19.870
那怎么改变呢

43:21.310 --> 43:21.630
for

43:22.510 --> 43:22.990
style

43:23.870 --> 43:24.430
background

43:24.990 --> 43:26.830
是不是说它的样式

43:27.790 --> 43:28.750
背景颜色

43:28.750 --> 43:29.150
为什么

43:29.150 --> 43:29.870
RGB

43:31.790 --> 43:32.830
RGB

43:32.830 --> 43:34.510
这个值

43:34.510 --> 43:35.390
这三个问号为止

43:35.390 --> 43:36.190
是不是随机的

43:36.190 --> 43:36.830
那拼接呗

43:37.390 --> 43:38.270
第一个问号为止

43:38.270 --> 43:39.390
拼接gassrider

43:40.670 --> 43:41.470
把表达

43:41.470 --> 43:43.310
当然你以为你看不懂表达式了

43:43.310 --> 43:45.390
它一定要放到一个边量里边

43:45.390 --> 43:48.190
gassrider0到256

43:48.190 --> 43:48.750
对吧

43:48.750 --> 43:49.550
取不到256嘛

43:49.550 --> 43:50.030
就0到

43:50.670 --> 43:51.710
255

43:51.710 --> 43:52.270
产生一个

43:52.910 --> 43:53.790
产生个红

43:53.790 --> 43:54.590
然后再产生个绿

43:58.050 --> 43:58.530
绿

43:58.530 --> 43:59.730
然后再产生个蓝

43:59.730 --> 44:01.250
然后把RGB拼到这

44:01.570 --> 44:02.210
拼接到这

44:02.690 --> 44:04.210
那你可以把这个表达式直

44:04.770 --> 44:06.850
也可以把这个表达式直接拼到这

44:06.850 --> 44:07.490
是不是也可以

44:08.450 --> 44:09.250
然后再用

44:09.250 --> 44:10.050
这样就写吧

44:10.050 --> 44:10.690
就这样写吧

44:12.050 --> 44:12.290
2

44:14.450 --> 44:14.850
g

44:18.450 --> 44:18.690
b

44:19.810 --> 44:21.170
那么这里有一个函数

44:21.170 --> 44:21.810
可以改变

44:21.810 --> 44:23.330
随机改变它的背景颜色

44:23.330 --> 44:25.250
那我只需要把这个函数调用

44:25.250 --> 44:26.050
在哪里调用呢

44:26.050 --> 44:27.410
只要你反向的时候就调用

44:28.370 --> 44:29.970
只要你反向的时候我就调用

44:30.770 --> 44:31.570
反向调用

44:33.010 --> 44:33.890
反向调用

44:35.970 --> 44:37.170
这样子每一次碰撞呢

44:37.730 --> 44:39.170
它就会随机改变颜色了

44:40.690 --> 44:42.210
所以还是有点意思

44:44.210 --> 44:46.050
其实这边你可以调整

44:46.050 --> 44:47.090
比方说你觉得

44:47.650 --> 44:49.090
因为这个背景是白色对吧

44:49.090 --> 44:50.210
如果说碰撞

44:51.010 --> 44:52.370
这些颜色随机的值

44:52.370 --> 44:54.610
都是在200以上的

44:54.610 --> 44:55.570
那就接近白色了

44:55.570 --> 44:57.250
就可能看不见这个小球了

44:57.250 --> 44:59.010
那么你可以把这个数值调低一点

44:59.010 --> 45:00.530
只能再0到200之间

45:00.530 --> 45:02.210
这样子它颜色就不会过淡

45:03.090 --> 45:04.370
这些都会控制的

45:04.370 --> 45:05.650
程序是非常灵活的

45:06.530 --> 45:07.730
同学们就写写这个程序

45:08.690 --> 45:10.530
这些课就在这两道题

45:10.530 --> 45:11.090
把搞定

