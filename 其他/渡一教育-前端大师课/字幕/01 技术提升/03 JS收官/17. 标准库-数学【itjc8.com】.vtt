WEBVTT

00:00.000 --> 00:03.440
好 下一个标准库 数学

00:03.440 --> 00:05.640
别害怕 别害怕

00:05.640 --> 00:09.840
这一块跟数学 跟你们想象中的那个数学

00:09.840 --> 00:11.680
其实不是一回事

00:11.680 --> 00:13.480
这个标准库是这样子

00:13.480 --> 00:16.640
它给你提供了这么一个对象 叫做Math

00:16.640 --> 00:18.120
那就数学的意思

00:18.120 --> 00:20.320
这里边它给你提供了很多的方法

00:20.320 --> 00:22.200
来处理各种数学问题

00:22.200 --> 00:25.400
不过我们这里看到的数学问题都比较简单

00:25.400 --> 00:28.160
它其实是有一些 比方说什么球

00:28.160 --> 00:32.680
底数 球三赢 扣三赢

00:32.680 --> 00:35.360
其实基本上也就是出高中的东西

00:35.360 --> 00:38.200
不过那些东西 尽管是出高中的东西

00:38.200 --> 00:39.680
我们也用不到

00:39.680 --> 00:42.280
我们平时用的最多的也就是这些了

00:42.280 --> 00:43.520
就这么些东西

00:43.520 --> 00:44.800
我们来看一下

00:44.800 --> 00:46.520
第一个圆周率派

00:46.520 --> 00:48.000
这个玩意大家知道就行了

00:48.000 --> 00:50.400
别的 这个玩意也用的很少

00:50.400 --> 00:53.600
它是一个长量 就是固定的值

00:53.600 --> 00:55.200
它是一个属性派

00:55.200 --> 00:57.280
这里顺便给大家说一下

00:57.360 --> 01:03.520
像这种长量

01:03.520 --> 01:04.520
什么叫长量呢

01:04.520 --> 01:06.880
就是这个数字或者是这个值

01:06.880 --> 01:08.200
它不会变化

01:08.200 --> 01:11.080
比方说月球到地球的距离

01:11.080 --> 01:12.240
对吧

01:12.240 --> 01:15.040
公转周期等等

01:15.040 --> 01:17.800
像这些什么普朗克常数等等

01:17.800 --> 01:20.320
这些不会变化的值 叫做长量

01:20.320 --> 01:24.040
这种长量有一个规范的命名方式

01:24.040 --> 01:26.960
就是全部字母大写

01:26.960 --> 01:28.800
这长量的一个命名规范

01:28.840 --> 01:30.240
大家知道就行了

01:30.240 --> 01:31.480
那么这就是一个圆周率

01:31.480 --> 01:34.520
圆周率其实我们平时开发用了多不多

01:35.520 --> 01:37.560
很少很少

01:37.560 --> 01:38.840
知道就行了

01:38.840 --> 01:42.400
接下来下面这个叫球绝对值

01:42.400 --> 01:43.400
简单吧

01:43.400 --> 01:45.200
ABS 你给它一个-1

01:45.200 --> 01:46.120
它就给你一个-1

01:46.120 --> 01:47.040
你给它一个-1

01:47.040 --> 01:48.040
它还是给你一个-1

01:48.040 --> 01:49.680
就是球绝对值

01:49.680 --> 01:53.120
下一个向上取整 向下取整

01:53.120 --> 01:55.840
它是去球整数

01:55.840 --> 01:57.040
那么这里我们看一下

01:57.080 --> 01:58.920
MeshFloor

01:58.920 --> 01:59.840
就是向下取整

01:59.840 --> 02:01.080
边上3.14

02:01.080 --> 02:02.240
要得到3

02:02.240 --> 02:03.960
Cell向上取整

02:03.960 --> 02:05.520
Floor就是地板的意思

02:05.520 --> 02:07.000
Cell就是天花板的意思

02:07.000 --> 02:09.080
向上取整就得到4

02:09.080 --> 02:11.840
那么这里我以前见过一个同学

02:11.840 --> 02:13.800
他遇到过一道面试题

02:13.800 --> 02:14.800
不过这个面试题

02:14.800 --> 02:17.080
我后来也没再见到过了

02:17.080 --> 02:18.520
就是很少很少

02:18.520 --> 02:22.160
就是他问你PoseInt和Floor

02:22.160 --> 02:24.240
这个面试题我觉得没啥意义

02:24.240 --> 02:25.640
去考这种细节

02:25.680 --> 02:28.640
这三个东西都是球整数

02:28.640 --> 02:32.360
那么它们之间有什么样的一个区别

02:32.360 --> 02:33.920
都可以球整数

02:33.920 --> 02:35.480
那么什么区别是这样子

02:35.480 --> 02:37.440
我给大家画一条竖肘

02:37.440 --> 02:38.640
这是竖肘

02:38.640 --> 02:40.280
向右竖肘增加

02:40.280 --> 02:42.080
比方说这是竖肘的0

02:42.080 --> 02:43.080
这是1

02:43.080 --> 02:44.160
2

02:44.160 --> 02:44.880
3

02:44.880 --> 02:45.840
4

02:45.840 --> 02:46.880
Floor 1

02:46.880 --> 02:47.760
Floor 2

02:47.760 --> 02:48.920
Floor 3

02:48.920 --> 02:49.480
Floor 4

02:49.480 --> 02:51.280
这就是一条竖肘

02:51.280 --> 02:54.040
那么PoseInt

02:54.040 --> 02:55.240
这是什么意思呢

02:55.280 --> 02:56.640
它是你给它一个数字

02:56.640 --> 02:58.560
比方说数字在这

02:58.560 --> 03:02.120
PoseInt的意思就是向0取整

03:03.480 --> 03:06.200
就是向0靠近0的方向取整

03:06.200 --> 03:07.720
其实最简单来说的话

03:07.720 --> 03:09.480
就是直接把小数去掉

03:09.480 --> 03:11.040
比方说这里是1.5

03:11.040 --> 03:12.920
它把小数去掉是不是变成1

03:12.920 --> 03:13.600
是不是在这了

03:13.600 --> 03:15.320
向0的方向取整

03:15.320 --> 03:17.080
那比方说是-1.5

03:17.080 --> 03:19.040
那把小数去掉是不是-1

03:19.040 --> 03:20.240
是不是向0的方向取整

03:20.240 --> 03:22.200
就是PoseInt

03:22.200 --> 03:23.720
那么Floor是什么意思呢

03:23.760 --> 03:25.720
Floor是向下取整

03:26.880 --> 03:28.280
那比方说你给1.5

03:28.280 --> 03:30.320
向下取整它就取掉1

03:30.320 --> 03:31.880
对吧

03:31.880 --> 03:33.120
-1.5

03:33.120 --> 03:34.720
你看向下取整它叫Floor 2

03:35.720 --> 03:37.040
Floor

03:37.040 --> 03:39.040
然后另外一个你懂了是吧

03:39.040 --> 03:40.600
向上取整就不用说了

03:41.880 --> 03:43.880
这就是这三个的区别

03:43.880 --> 03:46.160
平时我们用的话

03:46.160 --> 03:47.280
那就看具体情况吧

03:47.280 --> 03:50.200
其实很多时候也没有去做细微的区分

03:51.160 --> 03:53.960
然后下一个Max球去大值

03:53.960 --> 03:55.200
那么这个玩意是什么呢

03:55.200 --> 03:57.040
它是给它一系列的值

03:57.040 --> 03:57.480
2比2

03:57.480 --> 03:59.960
1 2 3 4 5 6 7

04:00.680 --> 04:04.160
2 3 11 3 5

04:04.160 --> 04:08.200
它在这一系列的数列当中取出一个值

04:08.200 --> 04:10.200
叫做11

04:11.200 --> 04:12.080
那就是这样子

04:12.080 --> 04:13.120
这是Max

04:13.120 --> 04:15.200
好下面这个Ming

04:15.200 --> 04:16.920
这里我顺便说一下

04:16.920 --> 04:19.200
这个Max它这里传的是数列

04:19.320 --> 04:20.000
不是数组

04:20.000 --> 04:22.040
比方说你要给它传一个数组

04:22.040 --> 04:25.840
这个数组里边有3 1 5 2 7

04:25.840 --> 04:27.800
我要找到这个数组的最大值

04:27.800 --> 04:28.720
该怎么找呢

04:28.720 --> 04:30.160
Max Max行不行啊

04:30.160 --> 04:32.480
这样子它就不行

04:32.480 --> 04:35.760
因为它只能把一次把数字传进去

04:35.760 --> 04:37.640
那么如果说你要有一个数组

04:37.640 --> 04:39.240
我要求去大值怎么办呢

04:39.240 --> 04:41.280
两种做法

04:41.280 --> 04:43.000
第一种做法你自己写循环

04:43.000 --> 04:43.720
自己去求

04:45.280 --> 04:47.160
第二种做法

04:47.160 --> 04:49.000
给同一边说一下第二种做法

04:49.000 --> 04:50.560
第二种做法的话

04:50.560 --> 04:52.880
那么就可以用这个core

04:52.880 --> 04:53.640
这个erplei

04:55.560 --> 04:56.640
是不是可以用erplei

04:56.640 --> 04:57.880
Max是不是寒树

04:57.880 --> 04:58.960
是寒树吗

04:58.960 --> 05:01.280
这个寒树是不是有个erplei方法

05:01.280 --> 05:02.440
那么绑定Z

05:02.440 --> 05:03.440
Z无所谓

05:03.440 --> 05:05.840
因为它这个寒树它不需要Z

05:05.840 --> 05:06.960
从道理上就知道

05:06.960 --> 05:08.520
跟Z没有什么关系

05:08.520 --> 05:09.320
那就是给它一个数列

05:09.320 --> 05:11.200
它就求最大值就完成了

05:11.200 --> 05:12.880
那么Z就可以传一个now

05:12.880 --> 05:15.400
或者随便传啥的无所谓

05:15.400 --> 05:17.720
那么后边我们把这个ar传进去

05:17.720 --> 05:19.480
为什么这样做就可以呢

05:19.480 --> 05:20.520
是因为erplei的

05:20.520 --> 05:22.800
它第二个参数就是要传一个数组

05:22.800 --> 05:25.040
这个数组表示参数列表

05:25.040 --> 05:26.640
数组的第一项作为第一个参数

05:26.640 --> 05:28.600
数组的第二项作为第二个参数

05:28.600 --> 05:30.760
相当于是一式传进去了

05:30.760 --> 05:32.600
这是一个小技巧

05:32.600 --> 05:33.560
这是Max

05:33.560 --> 05:35.760
那么接下来这个min就求最小值

05:35.760 --> 05:37.600
那么用法是完全一样的

05:37.600 --> 05:38.720
就不说了

05:38.720 --> 05:39.000
好

05:39.000 --> 05:41.240
下边这个是很重要的

05:41.240 --> 05:42.400
我们开发当中

05:42.400 --> 05:45.640
在数学这一会用的最多的是这个ratum

05:45.640 --> 05:46.960
它非常简单

05:46.960 --> 05:47.920
它是得到什么呢

05:47.920 --> 05:50.480
得到一个水积数

05:50.480 --> 05:52.120
0到1之间的水积数

05:52.120 --> 05:54.280
你看每次运行都不一样

05:54.280 --> 05:55.720
得到一个水积数

05:55.720 --> 05:57.960
范围就在0到1之间

05:57.960 --> 05:59.440
它不需要参数

05:59.440 --> 06:01.120
那么但是它有一个特点

06:01.120 --> 06:03.680
就是它取不到1

06:03.680 --> 06:04.960
取不到1的

06:04.960 --> 06:06.800
最大就是0.999999

06:06.800 --> 06:08.040
就取不到1

06:08.040 --> 06:09.800
这个大家注意一下就完事了

06:09.800 --> 06:13.080
好最后一个是MaxWong

06:13.080 --> 06:14.560
这是四手五入

06:14.560 --> 06:16.000
你给他一个数字

06:17.520 --> 06:20.760
15926

06:20.760 --> 06:22.800
后边它给上一个

06:22.800 --> 06:24.280
取多少位数

06:24.280 --> 06:25.360
多少位小数

06:25.360 --> 06:26.960
比方说取两位小数

06:27.880 --> 06:28.680
不对

06:28.680 --> 06:31.000
那我这里又记错了

06:31.000 --> 06:32.160
我看一下文档

06:33.160 --> 06:34.680
反而会一个数字

06:34.680 --> 06:36.440
它直接得到整数的

06:36.440 --> 06:37.480
直接得到整数的

06:37.480 --> 06:39.320
它没法求小数这一块

06:42.170 --> 06:43.290
那么直接得到整数

06:43.290 --> 06:44.450
如果说要求小数的话

06:44.450 --> 06:46.330
是不是可以用之前的2fix

06:46.330 --> 06:46.930
对吧

06:46.930 --> 06:51.010
数字那一块不就有一个2fix

06:51.010 --> 06:52.450
就这个

06:52.450 --> 06:54.890
这个玩意可以四手五入到小数

06:55.530 --> 06:57.170
那么这里就直接求整数的

06:57.170 --> 06:58.330
你给他一个小数

06:58.330 --> 06:59.810
他给你四手五入到整数

06:59.810 --> 07:00.730
叫Wong

07:01.570 --> 07:02.250
就没了

07:02.250 --> 07:02.970
就没了

07:03.770 --> 07:04.090
好

07:04.090 --> 07:06.290
那么接下来就是做这个练习题了

07:06.290 --> 07:07.250
我复制一下

07:07.250 --> 07:09.210
这个练习题讲解

07:13.710 --> 07:14.470
好

07:14.510 --> 07:17.030
地道题是我们在开发当中

07:17.030 --> 07:19.230
经常会写的一个函数

07:19.230 --> 07:23.710
叫做求一个范围内的随机准数

07:23.710 --> 07:24.550
就给你一个范围

07:24.550 --> 07:25.910
最小值给你

07:25.910 --> 07:27.150
最大值给你

07:27.150 --> 07:28.710
你给我返回一个数字

07:28.710 --> 07:30.390
这个数字是随机的

07:30.390 --> 07:34.350
它的取值范围在最小值到最大值之间

07:35.030 --> 07:36.710
但是它取不到最大值

07:36.710 --> 07:38.430
一般来说我们都是取不到最大值的

07:39.310 --> 07:41.350
那么这个函数咱怎么写呢

07:41.350 --> 07:42.470
这个函数

07:42.510 --> 07:45.510
后边你一开始听着好像听陌生的

07:45.510 --> 07:46.710
但后边你写着写着

07:46.710 --> 07:48.030
这一看出来你要写吐

07:49.030 --> 07:50.310
因为它是固定的写法

07:50.310 --> 07:51.590
就这么一句话

07:51.590 --> 07:52.790
Mass Floor

07:53.830 --> 07:54.950
Mass Ridden

07:55.950 --> 07:56.910
我写完了再解释

07:57.910 --> 08:00.110
乘以Max减命

08:00.110 --> 08:01.510
最后加上一个命

08:04.040 --> 08:06.000
当然也可以把这个命加里边

08:06.000 --> 08:07.560
加里边放外边都行

08:08.600 --> 08:10.000
那么这个写法什么意思呢

08:10.000 --> 08:11.360
给他打个注释

08:11.360 --> 08:13.320
Mass.ridden

08:13.360 --> 08:14.920
那么这个取值是多少

08:14.920 --> 08:16.760
0到1之间的

08:16.760 --> 08:19.240
我们用一个数学里边的符号来表示的话

08:19.240 --> 08:20.640
0到1取不到

08:20.640 --> 08:22.160
所以说是这个不是中括号

08:22.160 --> 08:23.440
是小括号

08:23.440 --> 08:26.640
0可以取到0到1之间的一个随机数

08:26.640 --> 08:28.040
得到这么一个范围

08:28.040 --> 08:30.080
那么接下来我给他成了

08:30.080 --> 08:32.240
成绩的这么一个东西

08:33.280 --> 08:35.640
那它的取值范围是多少啊

08:35.640 --> 08:37.480
那你可以自己想一想吧

08:37.480 --> 08:38.480
它最小值的时候

08:38.480 --> 08:39.840
就上面这个表达是这个碗

08:39.840 --> 08:42.400
这一坨它最小的时候是不是0

08:42.440 --> 08:43.800
那它取到0的时候

08:43.800 --> 08:45.560
是不是管它右边是啥

08:45.560 --> 08:46.320
它一定是0

08:46.320 --> 08:46.560
对吧

08:46.560 --> 08:48.240
所以说最小值仍然是0

08:49.080 --> 08:50.080
最大值呢

08:50.080 --> 08:51.440
就它取到1

08:51.440 --> 08:52.480
它当取不到1

08:52.480 --> 08:53.600
就假设它取到1

08:53.600 --> 08:54.760
就是不是最大值

08:54.760 --> 08:57.280
最大值的时候是不是刚好是这个表达式

08:57.280 --> 09:00.760
那于是就得到了这么一个表达式

09:00.760 --> 09:02.080
它的范围就是这个范围

09:02.080 --> 09:03.400
然后这两个是参数传官的

09:03.400 --> 09:04.280
最大值最小值

09:05.640 --> 09:06.520
好接下来呢

09:06.520 --> 09:08.280
我们再来了一个加命

09:11.920 --> 09:12.960
那你想一想吧

09:12.960 --> 09:14.640
前边这一坨的取值范围

09:14.680 --> 09:15.800
是0到这个

09:15.800 --> 09:17.920
然后加上这个

09:17.920 --> 09:18.920
是不是把这个

09:18.920 --> 09:20.000
就简单的数学数

09:20.000 --> 09:20.880
是可以搞定的

09:20.880 --> 09:22.280
这个0加上这个

09:22.880 --> 09:24.400
然后那这边是这个玩意

09:24.400 --> 09:25.440
再加上这个

09:25.440 --> 09:27.560
那么max减命加上命

09:27.560 --> 09:29.040
是不是刚好点于max

09:29.800 --> 09:32.240
那么它的取值范围是不是就命到max之间了

09:32.880 --> 09:33.320
对吧

09:33.320 --> 09:34.680
它取不到max

09:35.080 --> 09:35.760
但是这样子

09:35.760 --> 09:36.040
一来呢

09:36.040 --> 09:37.400
它还有可能会有小数

09:37.400 --> 09:37.640
对吧

09:37.640 --> 09:38.320
我要得到的是

09:38.320 --> 09:41.640
随机范围内的随机整数

09:41.720 --> 09:42.440
因此呢

09:42.440 --> 09:44.680
我要把这个小数取整

09:44.680 --> 09:47.040
我们这里一般使用的是向下取整

09:47.040 --> 09:48.280
那为什么不向0取整

09:48.280 --> 09:49.840
为什么不向上取整呢

09:49.840 --> 09:50.520
我们这里呢

09:50.520 --> 09:52.440
在数学上就不去多去证明了

09:52.440 --> 09:53.720
大家只要知道就行了

09:53.720 --> 09:56.000
我们这一块都是使用向下取整

09:56.440 --> 09:56.720
好

09:56.720 --> 09:59.680
因此把这个表达是一向下取整

09:59.680 --> 10:00.560
是不是得到了

10:01.520 --> 10:02.960
这个范围内的随机整数

10:03.280 --> 10:03.880
对吧

10:03.880 --> 10:05.240
范围还是这个范围

10:05.240 --> 10:05.880
只不过呢

10:05.880 --> 10:06.680
没有小数了

10:07.280 --> 10:08.200
全是整数

10:08.880 --> 10:09.680
就完事了

10:10.640 --> 10:13.520
这个表达是一开始听着比较陌生

10:13.520 --> 10:15.240
但后边你写多了

10:15.240 --> 10:16.000
也就这样了

10:16.000 --> 10:17.120
反正就是一句话

10:17.520 --> 10:18.680
后边我们遇到

10:18.680 --> 10:21.840
在程序里面遇到了很多很多需要随机的地方

10:21.840 --> 10:23.680
基本上都需要这个函数

10:24.440 --> 10:25.920
基本上都需要这个函数的

10:26.440 --> 10:26.600
好

10:26.600 --> 10:27.240
是第一道题

10:28.080 --> 10:29.040
接下来看第二道题

10:30.560 --> 10:32.280
得到一个指定

10:32.280 --> 10:33.280
我们来试一下

10:33.280 --> 10:34.720
这写了半天都还没去试一下

10:36.000 --> 10:36.880
get the right time

10:37.880 --> 10:39.720
我们给他取一个

10:39.720 --> 10:41.040
2 3到10

10:41.040 --> 10:41.760
看一下3到10

10:41.760 --> 10:42.440
其实取不到10

10:42.440 --> 10:43.560
就是3到9

10:44.560 --> 10:45.680
第一是运行4

10:45.680 --> 10:46.920
第二是运行7

10:46.920 --> 10:47.920
也9

10:47.920 --> 10:48.920
4

10:48.920 --> 10:49.760
7

10:49.760 --> 10:50.560
6

10:50.560 --> 10:51.160
7

10:51.160 --> 10:52.160
7还出现了

10:52.160 --> 10:53.120
3

10:53.120 --> 10:53.960
7

10:53.960 --> 10:54.960
3

10:54.960 --> 10:55.520
6

10:55.520 --> 10:56.760
你看是随机的

10:56.760 --> 10:57.960
就这么个意思

10:59.960 --> 11:00.200
好

11:00.200 --> 11:00.960
其实这个随机

11:00.960 --> 11:01.680
要跟他方面说一下

11:01.680 --> 11:03.040
你看出现了这么多次

11:03.040 --> 11:05.040
你是不是一直没有出现8

11:05.680 --> 11:06.080
对吧

11:06.280 --> 11:07.400
我们再来多运行一下

11:08.400 --> 11:09.360
其实这个随机

11:11.280 --> 11:12.880
如果说你去开发一些游戏

11:12.880 --> 11:14.720
好像我们以后不会去开发游戏

11:14.720 --> 11:16.400
如果说你以后开发游戏的话

11:16.400 --> 11:18.440
是不能用这种方式去求随机的

11:19.000 --> 11:21.560
因为这种随机过于散裂

11:21.560 --> 11:24.360
它不符合统计学的规律

11:25.280 --> 11:27.520
因此我们往往游戏里边的随机

11:27.520 --> 11:29.720
它会要更加复杂一点

11:29.720 --> 11:33.760
比如说你30%的机率是暴击

11:34.520 --> 11:37.160
那我要保证在10次里边

11:37.160 --> 11:39.200
你就应该有3次暴击

11:39.200 --> 11:42.080
如果说你连续出现的7次都没有暴击

11:42.080 --> 11:44.600
那我接下来3次基本上很高概率

11:46.080 --> 11:47.480
都是暴击

11:47.480 --> 11:49.160
游戏里边是这样子在处理的

11:49.160 --> 11:51.520
大部分游戏都是这样处理的

11:51.520 --> 11:53.600
因此它的手机还要更加复杂一点

11:53.600 --> 11:54.920
我们这一块不去考虑

11:56.560 --> 11:56.760
好

11:56.760 --> 11:58.120
这是第一题

11:58.120 --> 11:59.000
第二题

11:59.000 --> 12:03.160
得到一个指定长度的随机制服串

12:03.200 --> 12:05.200
制服串里边包含所有数字

12:05.200 --> 12:06.360
以及呢

12:06.360 --> 12:08.760
制服都有可能

12:08.760 --> 12:10.640
那么这个制服串该怎么来写呢

12:12.080 --> 12:13.080
这个制服串呢

12:13.080 --> 12:15.000
刘英宏现在说我能不能这样子

12:15.000 --> 12:16.840
我写这么一个数组

12:16.840 --> 12:18.280
或者就写这么一个制服串啊

12:18.280 --> 12:19.880
这是你有两种做法

12:19.880 --> 12:20.520
第一种做法呢

12:20.520 --> 12:22.480
就是我两种做法都写一下吧

12:22.480 --> 12:23.880
第一种做法就是写一个制服串

12:23.880 --> 12:25.160
里边就包含所有数字

12:25.160 --> 12:27.720
两一二三四五六七

12:27.720 --> 12:28.320
当然呢

12:28.320 --> 12:31.080
你也可以用循环的方式往制服串里面拼接

12:31.080 --> 12:32.600
012356789

12:32.600 --> 12:36.520
然后ABCD一直到Z

12:36.520 --> 12:36.760
对吧

12:36.760 --> 12:39.480
是不是数字字母都包含了

12:39.480 --> 12:40.440
那接下来呢

12:40.440 --> 12:44.880
我只要随机的往里边取出一些制服

12:44.880 --> 12:47.280
拼接到这个长度就行了

12:47.280 --> 12:47.720
对吧

12:47.720 --> 12:51.740
比方说我这里准备好一个result

12:51.740 --> 12:52.060
好

12:52.060 --> 12:55.060
我比方说这个长度传的是7

12:55.060 --> 12:58.700
那我第一个先随机取一个比方取出来2

12:58.700 --> 13:00.780
再随机取一个比方取出来A

13:00.780 --> 13:02.860
再随机取一个取出来C

13:02.900 --> 13:04.220
再取一个Y

13:04.220 --> 13:05.780
再取一个6

13:05.780 --> 13:06.780
再取一个0

13:06.780 --> 13:06.980
对吧

13:06.980 --> 13:08.580
随机取每次都随机取

13:08.580 --> 13:09.540
取多少次呢

13:09.540 --> 13:11.020
取7次

13:11.020 --> 13:12.980
这就成了给随机制服串了

13:12.980 --> 13:16.620
那么怎么来从制服串里面随机取一个东西呢

13:16.620 --> 13:18.140
我们又要用到这个函数了

13:18.140 --> 13:20.100
这个函数要拿过来了

13:20.100 --> 13:21.540
拿过来用了

13:21.540 --> 13:23.540
好比方说有这么一个函数

13:23.540 --> 13:24.260
这个函数呢

13:24.260 --> 13:28.140
我们就可以得到一个指定范围的随机整数

13:28.140 --> 13:28.420
对吧

13:28.420 --> 13:30.020
已经写好了就不用管它了

13:30.020 --> 13:30.860
函数就这样子

13:30.860 --> 13:33.020
你写好了之后就不用管它了

13:33.020 --> 13:33.180
好

13:33.180 --> 13:35.540
那么接下来我要用这个函数怎么来操作呢

13:35.540 --> 13:39.300
我是不是就可以雕用这个函数啊

13:39.300 --> 13:40.860
我传一个0进去

13:40.860 --> 13:42.460
就最小值为0

13:42.460 --> 13:43.420
最大值呢

13:43.420 --> 13:44.540
为这个数组的

13:44.540 --> 13:46.820
为这个制服串的长度

13:46.820 --> 13:49.980
那这样子是不是会产生一个下标

13:49.980 --> 13:51.940
你看是不是会产生一个下标

13:51.940 --> 13:54.340
这个下标是随机的

13:54.340 --> 13:55.300
它的下标的曲子呢

13:55.300 --> 13:57.620
刚好在0到制服串的长度之间

13:57.620 --> 13:58.500
当取不到长度

13:58.660 --> 14:00.540
最大值就是长度减1

14:00.540 --> 14:02.900
这个下标是不是可以利用这个下标

14:02.900 --> 14:06.820
随机的下标去取出一个制服啊

14:06.820 --> 14:08.340
去取出一个制服

14:08.340 --> 14:09.900
把index传进去

14:09.900 --> 14:10.060
好

14:10.060 --> 14:11.380
咱们来试一下

14:11.380 --> 14:15.900
get ridem stream传一个7

14:15.900 --> 14:16.780
输出

14:16.780 --> 14:18.620
你看第一次取的下标是3

14:18.620 --> 14:20.020
第二次取的下标是

14:20.020 --> 14:21.740
第一次取的数字是3

14:21.740 --> 14:24.140
第二次取的制服是Q

14:24.140 --> 14:25.940
所以每一次都是随机的制服

14:25.940 --> 14:27.260
用这个随机的下标

14:27.300 --> 14:29.060
去从制服串里面取

14:29.060 --> 14:29.260
好

14:29.260 --> 14:30.660
那我们取几次呢

14:30.660 --> 14:31.820
是不是取7次

14:31.820 --> 14:34.020
所以一个固定次数的循环

14:34.020 --> 14:35.860
i等于0小于nance

14:37.940 --> 14:38.380
对吧

14:38.380 --> 14:40.580
是不是小于这个值

14:40.580 --> 14:41.660
循环7次

14:41.660 --> 14:44.860
循环多有长度一起就循环几次

14:44.860 --> 14:46.260
每一次循环呢

14:46.260 --> 14:48.140
取一个制服出来

14:48.140 --> 14:53.920
把这个制服拼接到一个结果里边

14:53.920 --> 14:55.040
without

14:55.040 --> 14:56.560
拼接到一个结果里边

14:56.560 --> 14:57.760
然后返回

14:57.760 --> 14:58.840
这种鞋法

14:59.840 --> 15:01.160
虽然说看上去比较笨

15:01.160 --> 15:02.000
但是

15:03.640 --> 15:04.120
这种鞋法

15:04.120 --> 15:05.920
大家一定要会

15:05.920 --> 15:08.560
它是一个普遍性的解决这种问题

15:08.560 --> 15:10.640
就是从一个制服串里边

15:10.640 --> 15:12.160
或者是从一个数组里边

15:12.160 --> 15:13.800
随机的取出以下

15:13.800 --> 15:15.360
都是用这种方式来做的

15:17.000 --> 15:18.760
我这里输出

15:23.470 --> 15:24.310
对

15:24.310 --> 15:25.870
然后每一次都在随机

15:25.870 --> 15:26.470
是吧

15:26.470 --> 15:27.790
每一次都在随机

15:27.790 --> 15:29.310
不然的话只随机的一次

15:29.310 --> 15:31.110
每一次循环都在重新取

15:31.190 --> 15:32.110
取一个随机

15:34.050 --> 15:35.930
看到一个随机制服串了

15:35.930 --> 15:37.130
这是一种做法

15:37.130 --> 15:37.610
好

15:37.610 --> 15:39.170
除了这种做法之外

15:39.170 --> 15:41.330
还有一个取巧的做法

15:41.970 --> 15:43.970
取巧的做法怎么做的是这样子的

15:43.970 --> 15:44.930
我给上面看一下

15:46.130 --> 15:48.730
我可以通过master.righton

15:48.730 --> 15:51.570
来生成一个随机小数

15:52.330 --> 15:53.050
对不对

15:53.050 --> 15:54.010
是不是一个随机小数

15:54.010 --> 15:55.570
0到1之间

15:55.570 --> 15:56.970
然后我通过

15:56.970 --> 15:57.770
这是一个数字

15:57.770 --> 15:58.130
对吧

15:58.130 --> 15:59.810
前面表达是一个数字

15:59.810 --> 16:01.250
这表达是一个数字的话

16:01.290 --> 16:03.490
数字不是有一个to-stune方法吗

16:04.090 --> 16:05.570
是不是可以把它转换成制服串

16:06.050 --> 16:07.250
也转换成制服串的时候

16:07.250 --> 16:08.730
是不是这里可以填进字

16:09.330 --> 16:10.650
那我填36进字

16:11.210 --> 16:12.210
所以包含小数

16:13.210 --> 16:13.930
包含数字

16:13.930 --> 16:14.690
包含字母

16:15.610 --> 16:15.930
对吧

16:15.930 --> 16:16.530
那你看

16:18.010 --> 16:20.090
每一次是不是得到了就不一样

16:20.090 --> 16:21.050
那我再用

16:21.050 --> 16:22.490
这个玩意是一个制服串

16:22.490 --> 16:24.610
我再利用制服串拼接

16:25.050 --> 16:26.690
我再利用制服串拼接

16:26.690 --> 16:27.290
就是

16:28.130 --> 16:29.330
不是制服串拼接

16:29.330 --> 16:30.330
制服串的一个方法

16:30.370 --> 16:31.210
叫substune

16:33.210 --> 16:34.650
是不是求制服串

16:34.650 --> 16:36.450
我从这个位置开始取

16:38.050 --> 16:39.170
那么这个位置是几呢

16:39.170 --> 16:39.930
012

16:40.410 --> 16:41.610
从2开始取

16:41.610 --> 16:43.410
是不是就取出来后边的一段

16:44.970 --> 16:45.450
对吧

16:45.970 --> 16:47.210
是不是取出来后边的一段

16:47.210 --> 16:48.810
然后结束位置的话

16:48.810 --> 16:50.290
比方说我长度为7

16:50.290 --> 16:52.570
那就是2加7取到9

16:53.570 --> 16:54.930
是不是刚好取出来7位

16:56.130 --> 16:56.450
对吧

16:56.450 --> 16:57.850
长度为7就2加9

16:57.850 --> 16:59.450
长度为6就2加8

17:00.890 --> 17:01.410
对吧

17:01.410 --> 17:03.090
那就是产生一个水机制服串了

17:03.090 --> 17:05.090
这是一种更加取巧的做法

17:05.090 --> 17:08.450
因此我们这里的代码还可以简写为这样子

17:08.450 --> 17:09.850
就一个表达式就行了

17:10.410 --> 17:11.050
那么2

17:11.050 --> 17:12.050
后边写啥呢

17:12.050 --> 17:13.770
就是2加上lens

17:14.770 --> 17:15.250
对吧

17:16.050 --> 17:19.250
这样子也可以得到一个水机的制服串

17:19.970 --> 17:20.250
OK

17:20.250 --> 17:22.930
这是这两种做法都可以

17:23.770 --> 17:24.010
好

17:24.010 --> 17:24.730
第三题

17:25.450 --> 17:27.890
从数组中水机取出一项

17:27.890 --> 17:29.330
那是不是就是刚才的做法

17:29.490 --> 17:30.410
给你一个数组

17:30.410 --> 17:32.090
然后水机取出一下

17:32.090 --> 17:34.650
那么这个做法是不是需要这个函数来支撑

17:35.770 --> 17:36.210
对吧

17:36.210 --> 17:37.210
需要这个函数

17:37.210 --> 17:37.890
好

17:37.890 --> 17:38.890
然后在这里边

17:40.890 --> 17:42.370
就是刚才的代码

17:44.960 --> 17:46.400
稍微感一下

17:46.400 --> 17:48.480
数组不需要STR了

17:48.480 --> 17:49.760
这个玩意也不需要了

17:50.320 --> 17:51.760
那么也就是这么一句话

17:56.350 --> 17:58.630
我先水机的取出一个下标

17:58.630 --> 18:01.230
下标的范围是0到数组长度

18:01.990 --> 18:03.510
取不到长度就长度减1

18:04.510 --> 18:05.310
好

18:05.310 --> 18:06.750
然后拿到下标之后

18:06.750 --> 18:07.830
我通过下标

18:07.830 --> 18:09.670
是不是找到数组这一项就完了

18:10.670 --> 18:11.830
这就完了

18:11.830 --> 18:13.750
这就是从数组里边水机取一下

18:13.750 --> 18:14.430
那比方说吧

18:14.430 --> 18:15.470
我有一个数组

18:15.470 --> 18:17.190
这个数组可以是任意的数组

18:17.190 --> 18:18.430
可以是一个数字的数组

18:18.430 --> 18:19.390
也可以呢

18:19.990 --> 18:22.430
里边有制服

18:22.430 --> 18:23.630
有制服串

18:23.630 --> 18:25.190
有对象都行

18:25.190 --> 18:25.750
随便

18:25.750 --> 18:27.230
反正就随随之取出一项

18:28.110 --> 18:29.670
然后我能这里输出

18:29.670 --> 18:32.390
get the random item

18:32.550 --> 18:34.110
把数组还进去

18:34.110 --> 18:35.990
那么这样就可以取出数组的

18:35.990 --> 18:37.750
随意的取出数组没一项了

18:38.750 --> 18:38.870
好

18:38.870 --> 18:40.790
这就是数组里边水机

18:40.790 --> 18:42.310
其实我们平时开发当中

18:42.310 --> 18:43.310
随机这一块

18:43.310 --> 18:45.270
也就是用了这三种长角

18:45.270 --> 18:46.510
就是这三种长角

18:47.510 --> 18:48.270
那么第一题呢

18:48.270 --> 18:49.510
我在顺便刚才说了

18:49.510 --> 18:49.830
说了

18:49.830 --> 18:50.710
在顺便说一下

18:50.710 --> 18:51.430
那原来说

18:51.430 --> 18:53.390
那我这里是取不到最大值

18:53.390 --> 18:57.770
那如果说我希望他能取到最大值呢

18:57.770 --> 18:59.770
我希望他能取到最大值

19:00.610 --> 19:02.370
该怎么弄呢

19:02.410 --> 19:05.610
也就是说这里的不是开区间

19:05.610 --> 19:06.810
是必须间

19:06.810 --> 19:08.090
就这里

19:08.090 --> 19:09.530
应该是这样子

19:09.530 --> 19:11.250
那这个事还不简单吗

19:11.250 --> 19:13.010
你就把max当成什么

19:13.010 --> 19:15.770
max加1不就完了吗

19:16.610 --> 19:18.450
所以当成max加1不就完了吗

19:18.450 --> 19:18.930
因此呢

19:18.930 --> 19:20.010
你在最开始的时候

19:20.010 --> 19:20.810
做这么一件事

19:20.810 --> 19:22.130
max加加

19:22.130 --> 19:24.010
你这把自身加1

19:24.010 --> 19:25.570
就是把最大值再加以为

19:26.290 --> 19:26.890
就完事了

19:26.890 --> 19:30.050
所以说这个也很简单的

19:30.050 --> 19:30.330
好

19:30.370 --> 19:31.410
这就是这些题

19:31.410 --> 19:32.450
把它做一下

19:32.450 --> 19:33.930
这一块API非常简单

