WEBVTT

00:01.140 --> 00:04.540
来吧,就剩下最后一个数据的表达了

00:04.540 --> 00:05.340
就是数据

00:05.940 --> 00:07.280
我们还有啥呢?

00:07.280 --> 00:12.340
知不错,数字,布尔,拉奥阿尼范德,然后呢,有普通对象

00:12.840 --> 00:15.940
加上一个数据,是不是这个世界上所有的东西

00:15.940 --> 00:17.940
我们都可以在代码里边把表达出来了

00:17.940 --> 00:20.340
这还有啥吗?还能有啥吗?

00:20.340 --> 00:22.340
复合数据我们就用对象嘛

00:22.340 --> 00:24.540
那剩下这个数据是用来表达啥呢?

00:24.540 --> 00:27.840
是用来表达多个同种类的数据

00:27.840 --> 00:30.540
比方说咱们班,100多号人

00:30.740 --> 00:32.340
那么每一个人是不是有一个数据

00:32.340 --> 00:33.940
是一坨数据,对吧?

00:33.940 --> 00:35.140
每个人一坨数据

00:35.140 --> 00:37.340
那么如何来表达100多号人呢?

00:37.940 --> 00:38.940
那就要数据了

00:39.340 --> 00:41.740
因为每一个人他是一个同种类的数据

00:42.540 --> 00:44.840
张三跟李氏他们的数据是至少

00:44.840 --> 00:46.340
他们不一样,肯定不一样

00:46.340 --> 00:48.740
但是他们是同种类的,都表示人嘛

00:48.740 --> 00:50.440
所以说这种同种类的数据

00:50.440 --> 00:51.740
我们就用数据来表达

00:52.140 --> 00:53.340
表达多个数据

00:54.340 --> 00:57.140
数据其实我们上一节课讲的

00:57.140 --> 01:00.240
都已经呼之欲出了,对吧?

01:00.440 --> 01:01.440
数据是啥呀?

01:01.940 --> 01:04.740
数据就是对象,就是一个对象

01:05.440 --> 01:07.740
只不过他的属性名是一个数字

01:07.740 --> 01:08.940
属性名能不能是数字

01:08.940 --> 01:10.440
不能,它只能是字不串

01:10.440 --> 01:12.540
只不过字不串里面是一个数字

01:13.040 --> 01:13.740
精彻意

01:14.640 --> 01:16.240
然后有一个属性叫nance

01:16.240 --> 01:17.440
表示数据的长度

01:17.740 --> 01:18.840
对吧?它是一个数字

01:20.040 --> 01:20.940
这不就是数据吗?

01:21.440 --> 01:23.240
比方说我们来写一个

01:24.540 --> 01:25.540
124

01:26.240 --> 01:27.240
我们来写一个数据

01:27.540 --> 01:29.040
123

01:29.440 --> 01:30.440
随便写一写

01:32.440 --> 01:35.840
我这里把自动格式化打开

01:37.240 --> 01:38.140
FM-C

01:39.240 --> 01:40.540
保存的时候自动格式化

01:42.880 --> 01:43.880
我运行出来

01:46.480 --> 01:48.580
现在我们在控制台里边运行

01:48.580 --> 01:50.780
倒是看不出来

01:50.780 --> 01:52.480
它好像是一个对象

01:53.480 --> 01:54.180
看不出来

01:54.680 --> 01:57.280
但是我们在浏览器里边可以看得非常清楚

01:57.280 --> 01:58.080
因为数据这一块

01:58.080 --> 01:59.080
他做了一些特殊处理

01:59.080 --> 02:00.280
在打印的时候

02:00.380 --> 02:01.680
他用这种格式打印的

02:01.680 --> 02:02.780
它不是像对象那样子

02:03.280 --> 02:04.480
对象的那种格式打印的

02:04.980 --> 02:06.880
但是我们在浏览器里边做的这件事

02:06.880 --> 02:08.080
看得非常非常清楚

02:08.980 --> 02:10.680
我们在浏览器里边做一下

02:11.580 --> 02:12.480
我们这里写个数据

02:14.280 --> 02:16.380
3256

02:17.480 --> 02:18.280
我们来看一下

02:18.380 --> 02:20.580
这个ARR是一个啥呢?

02:20.580 --> 02:21.780
它打印出来好像是一个数据

02:21.780 --> 02:22.880
对吧?你展开

02:24.080 --> 02:24.780
是对象吧

02:25.080 --> 02:26.780
属性0是3

02:26.780 --> 02:28.080
属性1是2

02:28.280 --> 02:29.480
属性2是6

02:29.880 --> 02:31.580
有个属性叫nance是3

02:32.580 --> 02:34.080
我们来自己做一个对象出来

02:34.080 --> 02:34.780
OB界

02:35.380 --> 02:38.480
它的属性0是3

02:38.580 --> 02:40.180
属性1是2

02:40.280 --> 02:41.580
属性2是6

02:41.680 --> 02:43.780
属性nance是3

02:44.880 --> 02:46.380
我们来看一下OB界

02:46.680 --> 02:48.880
跟那个数组有啥区别

02:51.070 --> 02:52.070
我弄大一点

02:52.570 --> 02:53.770
稍微放小一点

02:55.670 --> 02:56.470
来你看一下

02:56.970 --> 02:57.670
这一块

02:59.270 --> 03:00.670
跟这一块有啥区别

03:01.570 --> 03:02.370
没啥区别

03:02.970 --> 03:04.570
那数组的本质就是对象

03:05.170 --> 03:06.970
只不过它为了让你写的方便

03:07.170 --> 03:09.370
让你可以用这种方式来创建数组

03:09.770 --> 03:11.070
来创建这个对象

03:11.370 --> 03:12.170
僅此而已

03:13.570 --> 03:14.170
那这里边

03:14.170 --> 03:16.670
这个就是对象的属性0那个值

03:16.670 --> 03:17.870
对吧?属性1的值

03:17.870 --> 03:18.770
属性2的值

03:19.170 --> 03:20.170
不就是这样子吗?

03:20.870 --> 03:22.770
那属性的值是不是可以是任何东西?

03:22.770 --> 03:23.570
它可以是数字

03:23.570 --> 03:24.570
也可以是字乌串

03:24.570 --> 03:25.170
也可以是布尔

03:25.170 --> 03:26.170
也可以是任何东西

03:26.470 --> 03:27.370
也可以是一个对象

03:27.370 --> 03:28.370
也可以是一个数组

03:28.770 --> 03:29.770
啥东西都可以

03:30.570 --> 03:32.070
那么我们知道这一点之后

03:32.070 --> 03:33.470
我们就来做一些练习题

03:33.870 --> 03:34.470
这些练习题

03:34.470 --> 03:37.070
我们基本上都是把对象数组

03:37.070 --> 03:38.170
在综合来练习

03:38.570 --> 03:40.170
这一块是比较容易出问题的

03:41.970 --> 03:42.970
又来了邓哥

03:43.470 --> 03:45.670
为教育事业奉献终身的男人

03:47.670 --> 03:48.470
名字叫邓哥

03:48.470 --> 03:50.070
对吧?他的姓别是男

03:50.070 --> 03:51.170
身高185

03:51.170 --> 03:52.370
有邓少二位

03:52.770 --> 03:53.670
不是一般人

03:53.970 --> 03:54.670
邓少二位

03:54.670 --> 03:56.070
齐英的名为脆花

03:56.070 --> 03:56.670
东北人

03:56.870 --> 03:57.970
齐二的名为上飙

03:57.970 --> 03:58.670
统罗湾人

03:59.170 --> 04:01.070
那么如何来描述上面的信息

04:01.670 --> 04:02.970
这些所有的信息

04:02.970 --> 04:04.370
是不是都是属于邓哥的

04:04.570 --> 04:05.870
那这是一个附和信息

04:06.270 --> 04:06.970
这个附和信息

04:06.970 --> 04:08.970
我们应该用什么来描述

04:08.970 --> 04:10.170
这边应该用对象

04:10.970 --> 04:12.970
对象

04:13.970 --> 04:15.270
对象里面一个个描述

04:15.270 --> 04:16.470
他的名字叫什么

04:16.470 --> 04:17.170
叫邓哥

04:17.570 --> 04:18.370
这些题

04:18.370 --> 04:19.370
袁老师讲之前

04:19.370 --> 04:20.470
同学们可以自己写一下

04:20.470 --> 04:21.670
哪怕写错了都没关系

04:21.670 --> 04:22.470
不要怕错

04:22.770 --> 04:23.870
千万不要怕犯错

04:23.870 --> 04:25.270
我就怕你们不犯错

04:25.470 --> 04:25.870
不犯错

04:25.870 --> 04:26.770
我现在心里边

04:27.070 --> 04:28.470
简直是特别没底

04:28.870 --> 04:30.270
我不知道里面有没有底

04:30.270 --> 04:31.270
反正你们不犯错

04:31.270 --> 04:33.470
我心里边就是特别害怕的

04:33.670 --> 04:34.470
你犯了错

04:34.470 --> 04:36.270
然后通过老师的讲解在几乎错

04:36.270 --> 04:37.870
这样子我心里边特别踏实

04:39.270 --> 04:41.470
如果说你整个学程去开发过程中

04:41.470 --> 04:42.670
要犯1000个错误

04:42.670 --> 04:43.070
结果呢

04:43.070 --> 04:44.670
得到学到后面一个错误没犯

04:44.670 --> 04:45.870
我心里边怕得不得了

04:46.270 --> 04:47.470
是不是说明你没问题

04:47.770 --> 04:48.270
不是的

04:48.270 --> 04:49.170
说明你这些问题

04:49.170 --> 04:50.770
要留到公司里边去犯错

04:51.370 --> 04:52.170
那就不得了

04:53.070 --> 04:54.870
所以我希望你们早一点犯错

04:54.870 --> 04:55.570
至于去写

04:55.670 --> 04:56.470
犯错没关系

04:56.470 --> 04:57.270
听老师讲

04:58.870 --> 05:00.470
然后性别

05:00.470 --> 05:00.970
性别的话

05:00.970 --> 05:01.870
我们这里用制服串

05:02.570 --> 05:04.170
都想用布尔制服串都想

05:04.170 --> 05:04.670
身高

05:06.370 --> 05:06.870
185

05:07.870 --> 05:08.070
好

05:08.070 --> 05:09.970
那接下来就是有邓少二威

05:11.470 --> 05:12.270
都是邓少

05:12.270 --> 05:12.570
对吧

05:12.570 --> 05:14.070
他们是不是同种类的数据

05:14.370 --> 05:15.870
那么这一块应该用什么来保存

05:15.870 --> 05:16.470
是不是数主

05:17.470 --> 05:18.870
有的人可以在这里写数主

05:19.070 --> 05:19.670
你还是

05:19.670 --> 05:21.270
你目前在写对象啊

05:21.270 --> 05:22.470
不得有属性名吗

05:23.070 --> 05:23.970
那么现在呢

05:24.270 --> 05:26.370
他的邓少用一个属性名来表说

05:26.370 --> 05:28.070
叫WIFES

05:30.500 --> 05:31.100
叫什么

05:31.300 --> 05:31.900
那个

05:32.700 --> 05:36.100
妻子的老婆的附数形式

05:36.900 --> 05:37.900
当然我们平常

05:37.900 --> 05:38.700
正常情况下

05:38.700 --> 05:39.500
不都是单数

05:39.700 --> 05:40.900
哪有什么附数的老婆

05:40.900 --> 05:42.700
就跟你的父亲一样

05:42.700 --> 05:43.000
对吧

05:43.000 --> 05:44.200
不能说父亲门

05:45.200 --> 05:47.100
只能说父亲是单数

05:47.300 --> 05:48.300
邓哥那是不一样

05:48.300 --> 05:49.200
那不是一般的

05:49.200 --> 05:50.300
他是附数形式

05:50.700 --> 05:51.800
那么他得是一个数主

05:52.300 --> 05:53.800
那数主的每一项是什么

05:53.800 --> 05:54.700
因为像这种数主

05:54.700 --> 05:56.100
我们就没什么好说的了

05:57.200 --> 05:58.100
每一项是什么

05:58.500 --> 05:59.700
每一项不就是

05:59.900 --> 06:00.700
又是一个数据

06:00.700 --> 06:02.000
这个数据是一个附合数据

06:02.000 --> 06:02.900
那么每一项得是什么

06:02.900 --> 06:03.900
那得是一个对象

06:04.300 --> 06:04.900
第一个

06:05.100 --> 06:05.500
媳妇

06:05.500 --> 06:06.300
第二个媳妇

06:06.800 --> 06:07.700
邓少一

06:07.900 --> 06:08.700
邓少二

06:08.900 --> 06:10.700
那邓少一里面有什么数据呢

06:11.100 --> 06:11.900
我们现在

06:12.100 --> 06:13.500
搞定数据的秒数

06:13.500 --> 06:15.100
怎么把它表示出来

06:15.300 --> 06:16.500
都不能表示出来

06:16.500 --> 06:18.000
还有什么后续操作

06:18.000 --> 06:18.900
它不存在的

06:20.100 --> 06:21.800
那第一个邓少的名字是什么

06:21.800 --> 06:22.400
翠花

06:23.900 --> 06:24.700
邓少的

06:25.500 --> 06:26.200
来历

06:26.300 --> 06:26.900
习惯

06:26.900 --> 06:27.600
我们用From

06:27.600 --> 06:28.400
从哪来的

06:28.700 --> 06:29.300
东北

06:29.900 --> 06:30.700
东北来的

06:31.300 --> 06:32.700
这第一个邓少就表示出来了

06:33.100 --> 06:33.300
好

06:33.300 --> 06:34.100
第二个邓少

06:34.400 --> 06:36.000
姓名的是是上标

06:37.400 --> 06:38.400
非常虎的名字

06:39.600 --> 06:40.300
从哪来的

06:40.400 --> 06:41.000
彭罗万

06:42.300 --> 06:43.900
你看这样就表示出来了

06:43.900 --> 06:44.800
这表示一个邓哥

06:44.800 --> 06:45.900
是不是所有信息都有了

06:45.900 --> 06:48.200
邓哥的名字姓别升高

06:48.200 --> 06:50.300
他的邓少有这两个

06:50.900 --> 06:51.100
对吧

06:51.100 --> 06:51.900
这就表示出来了

06:52.200 --> 06:53.800
这对象啊

06:53.900 --> 06:55.600
和数字远有很多这种

06:56.500 --> 06:57.500
关联性的意义

06:57.900 --> 06:59.300
那么现在我们不仅要把它

06:59.300 --> 07:00.100
描述出来

07:00.100 --> 07:01.800
我们还要能够准确的

07:01.900 --> 07:03.900
得到我们所有想要得到的信息

07:04.300 --> 07:05.700
比方说我要通过这个对象

07:05.700 --> 07:06.400
我要知道

07:07.200 --> 07:08.400
邓少有几位

07:08.600 --> 07:09.800
我怎么知道了

07:10.400 --> 07:11.900
我要知道邓少有几位

07:13.600 --> 07:14.600
邓不若

07:14.800 --> 07:15.800
说找到对象

07:16.300 --> 07:17.100
他的媳妇

07:17.100 --> 07:17.900
Wives

07:18.900 --> 07:20.200
这个表达是什么

07:20.200 --> 07:21.300
不就是这个书主吗

07:21.300 --> 07:21.700
对吧

07:21.700 --> 07:23.500
书主里面不有一个属性吗

07:23.500 --> 07:25.400
他是个书主的本质就是个对象对吧

07:25.800 --> 07:27.300
对象里面不有一个属性类似表示

07:27.300 --> 07:28.400
他书主的长度嘛

07:28.400 --> 07:28.800
对不对

07:29.400 --> 07:30.400
那么Darnance

07:31.400 --> 07:31.800
你看

07:32.300 --> 07:34.500
就得到了他有几位

07:35.000 --> 07:35.500
邓少

07:36.500 --> 07:38.800
那我要得到第一位邓少的名字呢

07:39.500 --> 07:40.900
你看没有什么特别的

07:41.000 --> 07:41.800
这是一个什么

07:41.800 --> 07:42.900
这是一个书主对吧

07:42.900 --> 07:44.300
书主不丢失对象吗

07:45.100 --> 07:46.400
我要访问他哪个属性

07:46.500 --> 07:48.100
我要访问他0对吧

07:48.600 --> 07:50.000
属性名为0这个东西

07:50.000 --> 07:51.400
那我能切D20吗

07:51.400 --> 07:51.800
不行

07:51.800 --> 07:53.700
因为你们不是一个有效的标识符

07:53.700 --> 07:54.700
是不是上天可讲过

07:55.700 --> 07:56.500
我应该怎么写呢

07:56.500 --> 07:57.000
那就

07:57.200 --> 07:58.600
是不是只能用这种方式来写

07:58.700 --> 08:01.100
这就是为什么书主要用这种方式来获取

08:01.900 --> 08:03.100
没有什么特别的呀

08:03.100 --> 08:04.200
哪有特别的呀

08:05.000 --> 08:06.400
你说特别的在哪呢

08:06.600 --> 08:07.500
没有任何特别的

08:07.500 --> 08:08.700
他就是一个对象啊

08:09.000 --> 08:09.700
他对象

08:09.700 --> 08:11.600
他本来想这样子写属性的

08:11.600 --> 08:12.500
但是写不出来

08:12.500 --> 08:13.800
因为他不是一个标识符

08:13.800 --> 08:14.400
知道吧

08:15.000 --> 08:15.600
所以说

08:15.800 --> 08:17.100
他只能这样子写了

08:18.400 --> 08:18.800
好

08:18.800 --> 08:20.200
因此他能不能这样子写呢

08:20.200 --> 08:22.100
那本来就应该这样子写

08:22.100 --> 08:22.700
只不过呢

08:22.700 --> 08:23.900
他可以减写为这个

08:23.900 --> 08:25.500
他会自动帮你转成制服圈

08:26.200 --> 08:27.300
就是上天可说过的

08:27.600 --> 08:29.000
那么是不是找到的第一位

08:29.200 --> 08:29.500
喜欢

08:29.500 --> 08:30.500
我们找到这个对象了

08:30.700 --> 08:31.800
把数字的第一箱

08:32.800 --> 08:33.800
是不是拿到这个对象

08:34.100 --> 08:35.400
那我还要拿这个对象的什么

08:35.400 --> 08:36.200
Name属性

08:36.200 --> 08:37.200
名字吗

08:37.300 --> 08:38.500
那前面那个表达是

08:38.500 --> 08:39.800
前面这个表达是不是就是个对象

08:39.800 --> 08:41.000
你接着写就完事了

08:41.100 --> 08:41.900
这是表达是

08:41.900 --> 08:43.300
表达是会有一个运算结果

08:43.300 --> 08:44.300
这个结果就是这个

08:44.700 --> 08:45.300
那后边

08:45.300 --> 08:46.600
我们要得到这个对象的什么

08:46.600 --> 08:47.200
Name属性

08:47.200 --> 08:48.100
那后边接着写

08:48.200 --> 08:48.800
点Name

08:49.700 --> 08:50.400
就出来了吗

08:50.900 --> 08:51.400
吹花

08:51.800 --> 08:53.700
那我如果说要改变这个

08:53.900 --> 08:54.700
Name属性

08:54.900 --> 08:56.300
吹花把它变成酸菜

08:56.900 --> 08:57.800
那行不行呢

08:58.200 --> 08:58.800
酸菜

08:58.800 --> 09:00.500
你不仅要能够表达

09:00.500 --> 09:01.200
还要能够

09:01.200 --> 09:03.000
可以得过去它里边的所有东西

09:03.000 --> 09:03.500
就是下来过

09:03.500 --> 09:04.700
大家都可以念一念

09:05.200 --> 09:06.400
就你写随便想

09:06.400 --> 09:07.300
你要干什么

09:07.300 --> 09:08.300
然后自己试一下代表

09:08.300 --> 09:09.100
再怎么去写

09:09.900 --> 09:10.200
对吧

09:10.200 --> 09:11.000
那这样子打印出来

09:11.000 --> 09:12.000
不就是酸菜了吗

09:12.800 --> 09:14.000
我们再看一下这个对象

09:14.200 --> 09:15.400
所以变成了酸菜了

09:16.300 --> 09:17.200
这样的

09:18.000 --> 09:18.900
有什么区别

09:20.100 --> 09:20.900
就是对象

09:22.000 --> 09:22.200
好

09:22.200 --> 09:23.600
那就是这就是用字面两个

09:23.600 --> 09:25.000
描述上边的信息

09:25.000 --> 09:25.900
描述出来了

09:27.300 --> 09:28.400
其实我们还可以看到

09:28.400 --> 09:29.300
一个数组里边

09:29.300 --> 09:30.100
我不仅掉

09:30.100 --> 09:32.000
你这个数组里边是有这些属性吗

09:32.600 --> 09:33.200
012

09:33.200 --> 09:34.100
那来了

09:34.100 --> 09:34.800
那来呗

09:34.900 --> 09:36.700
我们这里看一下再来看一下

09:37.000 --> 09:37.900
不就是那个

09:38.000 --> 09:38.600
三个属性吗

09:38.600 --> 09:40.000
那既然说它是一个普通对象

09:40.000 --> 09:41.300
它能不能写别的属性

09:41.300 --> 09:42.800
ABC的123

09:43.500 --> 09:44.200
可以啊

09:44.200 --> 09:44.900
你看吧

09:45.300 --> 09:47.000
现在是不是有个属性名为ABC

09:47.000 --> 09:48.200
你可以随便写

09:49.100 --> 09:50.400
它只是一个对象而已

09:51.000 --> 09:51.400
对吧

09:51.400 --> 09:52.400
加属性的东西

09:52.400 --> 09:53.900
只是我们平常不这样去干

09:53.900 --> 09:54.500
对吧

09:54.500 --> 09:55.000
不这样去干

09:55.000 --> 09:55.900
没什么意义

09:56.000 --> 09:57.400
但是它是可以这样做的

09:59.100 --> 09:59.300
好

09:59.300 --> 10:00.600
那么我们来看一下第二题

10:01.500 --> 10:02.400
第二题呢

10:02.400 --> 10:04.400
说我们有三个人

10:04.600 --> 10:06.700
邓哥 陈哥 莫莉卡

10:07.900 --> 10:10.000
每个人肯定是一些符合型的数据

10:10.200 --> 10:10.700
对吧

10:10.900 --> 10:13.400
那首先整体上我用什么来表达呢

10:13.700 --> 10:14.300
整体上呢

10:14.300 --> 10:15.100
我只能用数组

10:15.100 --> 10:16.200
因为这是三个数据

10:16.200 --> 10:16.500
对吧

10:16.500 --> 10:18.000
1 2 3

10:18.200 --> 10:19.800
是不是整体上就有三个数据

10:20.400 --> 10:20.700
对不对

10:20.700 --> 10:23.100
那我应该就可以使用一个数组啊

10:23.100 --> 10:23.800
叫做

10:24.900 --> 10:25.700
teachers

10:26.100 --> 10:27.100
有三个老师

10:27.100 --> 10:28.300
他是一个数据

10:29.500 --> 10:30.700
数据的每一项

10:30.700 --> 10:31.200
是他呢

10:31.200 --> 10:32.100
是数字吗

10:32.600 --> 10:34.500
8 4 1 3 4

10:34.500 --> 10:36.100
那其他信息丢失了呀

10:36.100 --> 10:37.600
那其他信息名字怎么办

10:37.600 --> 10:38.400
爱好怎么办

10:38.400 --> 10:39.200
说丢失了

10:39.300 --> 10:41.500
说这每一项是一个符合型数据

10:41.500 --> 10:43.300
因此每一项呢又是一个对象

10:43.800 --> 10:44.500
第一个

10:44.700 --> 10:45.300
第二个

10:45.300 --> 10:45.800
第三个

10:45.800 --> 10:46.600
又是个对象

10:47.400 --> 10:47.600
好

10:47.600 --> 10:48.900
每一个对象里边呢

10:49.200 --> 10:49.700
你看

10:51.100 --> 10:52.500
第一个数据是一个符合型数据

10:52.500 --> 10:53.300
它是个对象对吧

10:53.300 --> 10:55.200
那我们来用一个对象来描述这个数据

10:55.300 --> 10:56.200
这怎么来描述呢

10:56.600 --> 10:58.000
名字叫做凳格

10:58.800 --> 10:59.600
年龄呢

11:00.400 --> 11:01.200
81岁

11:02.400 --> 11:02.600
好

11:02.600 --> 11:04.200
那接下来爱好loves

11:04.800 --> 11:06.300
爱好是不是有多个呀

11:06.300 --> 11:07.100
多个爱好

11:07.700 --> 11:09.500
那这个爱好是不是也得是数据

11:09.500 --> 11:11.100
你别管什么千套不千套

11:11.100 --> 11:12.400
他该不该是个数据吗

11:12.500 --> 11:12.900
该吧

11:12.900 --> 11:13.600
就写一篇

11:13.800 --> 11:15.300
你只管描述就行了

11:15.900 --> 11:16.300
啊

11:16.500 --> 11:17.600
爱好香菜

11:19.100 --> 11:20.100
然后秋葵

11:21.200 --> 11:22.200
然后六两

11:25.030 --> 11:25.330
啊

11:25.330 --> 11:26.730
把这个这样子放一下

11:27.530 --> 11:29.430
这个凳格的信息被描述出来了吗

11:29.730 --> 11:30.930
那你单个对象怎么描述

11:30.930 --> 11:31.930
这里就这么描述

11:31.930 --> 11:33.130
那这里是一样的

11:33.330 --> 11:33.530
啊

11:33.530 --> 11:34.130
凳格

11:36.230 --> 11:37.230
啊年龄

11:38.130 --> 11:38.730
爱好

11:40.630 --> 11:41.130
是吧

11:41.430 --> 11:41.930
扯淡

11:43.730 --> 11:44.130
啊

11:44.530 --> 11:45.130
找凳少

11:47.130 --> 11:48.130
关系很乱啊

11:48.530 --> 11:50.130
然后第三个名字

11:50.130 --> 11:50.930
Molica

11:51.830 --> 11:52.430
年龄

11:52.430 --> 11:53.230
时期

11:53.730 --> 11:54.330
爱好

11:54.930 --> 11:55.730
奶茶

12:02.330 --> 12:04.230
给我啥这个大哥

12:05.430 --> 12:05.830
啊

12:08.320 --> 12:09.120
哎那些啊

12:09.120 --> 12:09.720
啊这里

12:09.920 --> 12:10.420
这里

12:12.520 --> 12:13.920
然后你看不就描述出来了吗

12:14.120 --> 12:14.420
对吧

12:14.420 --> 12:15.120
第一个

12:15.120 --> 12:15.720
第一个人

12:15.720 --> 12:16.220
第一个老

12:16.220 --> 12:16.820
第二个老师

12:16.820 --> 12:17.720
第三个老师

12:17.720 --> 12:20.020
每个老师里边有一个附和信信息

12:20.320 --> 12:21.820
你别管什么千套不千套

12:21.820 --> 12:22.720
那个不重要

12:23.220 --> 12:24.720
该怎么描述就怎么描述

12:25.520 --> 12:26.720
那么接下来的思考题

12:26.820 --> 12:28.020
你不仅要能够把

12:28.220 --> 12:29.720
这个信息表达出来

12:29.920 --> 12:32.420
你要能够获取他里边每一个细微的信息

12:32.420 --> 12:35.620
比方说我要获取邓哥的第一个爱好

12:36.720 --> 12:37.620
我要获取这个香菜

12:37.620 --> 12:38.520
我该怎么写的

12:39.620 --> 12:40.920
啊那么这里是一个数组

12:41.120 --> 12:41.620
对吧

12:42.220 --> 12:43.020
这是一个数组

12:43.420 --> 12:44.220
我们来输出吗

12:44.620 --> 12:45.320
teachers

12:45.320 --> 12:46.220
这是一个数组

12:46.320 --> 12:47.020
这个数组呢

12:47.020 --> 12:48.420
我要取第几项啊

12:48.820 --> 12:49.020
对吧

12:49.020 --> 12:51.020
数组里边不就是一些属性组成的吗

12:51.020 --> 12:51.520
对吧

12:51.520 --> 12:52.220
属性

12:52.620 --> 12:54.220
我要取第几个属性啊

12:54.220 --> 12:55.220
这不是第零个

12:55.620 --> 12:55.820
对吧

12:55.820 --> 12:56.620
取这个属性

12:56.620 --> 12:57.720
我要先拿到这个

12:57.920 --> 12:58.820
所以说我这里怎么写

12:58.820 --> 13:00.220
你先能写的点零吗

13:00.420 --> 13:00.920
对吧

13:00.920 --> 13:02.020
倒是想这样写

13:02.020 --> 13:03.020
逻辑是没问题的

13:03.020 --> 13:04.220
但是他不允许你这样子写

13:04.220 --> 13:05.920
因为你不是一个有效的标识服务

13:06.220 --> 13:07.220
所以说你得这样子写

13:09.420 --> 13:10.220
邓哥拿到了

13:10.220 --> 13:11.020
是不是拿到这个对象了

13:11.020 --> 13:11.820
这是个表达式

13:11.820 --> 13:12.020
对吧

13:12.020 --> 13:12.620
这是个表达式

13:12.620 --> 13:13.420
拿到这个对象了

13:13.620 --> 13:14.420
然后接着往后写

13:14.420 --> 13:15.120
我要找到什么了

13:15.120 --> 13:16.920
找到他的爱好

13:18.220 --> 13:19.220
是不是拿到这个了

13:19.820 --> 13:19.920
好

13:19.920 --> 13:20.620
拿到这个过后

13:20.620 --> 13:21.820
我要拿到他第几个爱好

13:21.820 --> 13:22.620
是不是第一个爱好

13:22.620 --> 13:23.220
这是一个数组

13:23.220 --> 13:23.620
对吧

13:23.620 --> 13:25.320
他的属性语为零的这个地方

13:25.620 --> 13:27.220
所以说我这里是不是应该这样子写

13:27.920 --> 13:28.720
不就写出来了吗

13:29.720 --> 13:30.320
对吧

13:30.320 --> 13:31.520
你别管这个整体上

13:31.520 --> 13:34.020
这个看上去好怪呀

13:34.020 --> 13:36.520
不要去有这种奇怪的感觉

13:36.920 --> 13:38.220
该怎么写就怎么写

13:38.520 --> 13:38.920
对吧

13:38.920 --> 13:40.220
按照表达式的约定

13:40.220 --> 13:41.320
就一步写就行了

13:43.020 --> 13:43.220
好

13:43.220 --> 13:43.920
那么这就是这个

13:43.920 --> 13:44.620
那我要改

13:44.620 --> 13:45.420
改变这个东西

13:45.420 --> 13:46.420
是不是也是一样

13:46.420 --> 13:48.320
我再给他再重新复始就行了

13:48.920 --> 13:49.920
还好香菜

13:51.720 --> 13:52.420
这样子的话

13:52.420 --> 13:53.720
那是不是就运行出来是这个

13:54.520 --> 13:55.020
对不对

13:55.320 --> 13:55.520
好

13:55.520 --> 13:56.520
那么比方要第1个题

13:56.820 --> 13:58.520
如何得到平均年龄

13:58.620 --> 13:59.520
平均年龄怎么求

13:59.520 --> 14:01.320
是不是三个加起来除以三

14:02.520 --> 14:03.720
对了是不是就求出来了

14:04.420 --> 14:04.520
好

14:04.520 --> 14:05.720
那我们来怎么在求呢

14:05.720 --> 14:07.020
如果说当然这个循环

14:07.020 --> 14:08.120
原来用循环解出来

14:08.120 --> 14:09.420
那就非常非常不错

14:09.820 --> 14:10.820
我这里不用循环

14:11.420 --> 14:12.120
就写死

14:13.120 --> 14:14.620
我拿到这个年龄拿到这个年龄

14:14.620 --> 14:15.520
拿到三个年龄

14:15.520 --> 14:17.220
首先把他加起来再说怎么加

14:18.120 --> 14:20.320
提起来就要练习这个表达式的写法

14:20.820 --> 14:21.520
第一个

14:22.720 --> 14:25.020
第一个老师拿什么拿A级

14:25.820 --> 14:30.920
加上第二个老师提起来是真是表达式啊

14:30.920 --> 14:31.920
不管他写有多长

14:31.920 --> 14:33.220
他不就是个表达式吗

14:33.220 --> 14:35.420
先把他算出来算出来对多少八十一

14:35.420 --> 14:37.520
再把他算出来算出来等于多少三十

14:37.520 --> 14:38.720
然后八十一加三十

14:38.720 --> 14:41.020
这个就是八十一加三十的结果

14:41.320 --> 14:42.620
然后继续往后加

14:42.820 --> 14:44.120
加什么提起来是

14:44.720 --> 14:47.220
大家要熟悉这种写法

14:48.520 --> 14:49.220
一二一

14:49.820 --> 14:51.120
就三个年龄加起来了

14:51.720 --> 14:52.820
加起来过后呢

14:52.820 --> 14:54.420
这个把香加的结果啊

14:54.620 --> 14:55.720
因为我要用处罚了

14:55.720 --> 14:56.920
所以说一个优先级的问题

14:56.920 --> 14:57.920
我要把他扩起来

14:58.420 --> 14:59.520
除一级除一三

14:59.720 --> 15:00.920
这不就是品距年龄吗

15:01.520 --> 15:02.920
你可以把它保存到变量里边

15:02.920 --> 15:05.820
你甚至可以把整个这一坨直接输出

15:08.020 --> 15:08.620
品距年龄

15:09.020 --> 15:09.720
四十二岁

15:10.320 --> 15:13.020
那完全是不是我完全可以把这一坨

15:13.420 --> 15:15.920
这个整个表达式的运算结果直接输出

15:15.920 --> 15:16.620
可不可以啊

15:16.920 --> 15:18.420
当然可以啊有什么问题呢

15:20.120 --> 15:21.720
所以这就是表达式的威力

15:22.220 --> 15:25.220
任何可以写数据的地方都可以写字面量

15:25.220 --> 15:26.220
变量表达式

15:26.620 --> 15:27.420
这里可以写数据

15:27.420 --> 15:28.820
他自然可以写表达式

15:29.620 --> 15:31.420
我不一定要把保存的变量里边

15:33.220 --> 15:34.020
好这就是

15:34.320 --> 15:35.320
如果说你觉得太长了

15:35.320 --> 15:37.420
你可以先把它保存的变量里边再扩再输出

15:38.120 --> 15:39.620
这是第一个得到品距年龄

15:40.020 --> 15:40.920
好第二个

15:41.020 --> 15:44.220
我要得到所有人的所有爱好的总和

15:44.220 --> 15:44.720
啥意思啊

15:44.720 --> 15:46.220
我就把他有几个爱好三个

15:46.220 --> 15:47.120
他有几个爱好两个

15:47.120 --> 15:49.020
他有几个爱好两个就3加2加2

15:50.220 --> 15:51.420
那我怎么来写这个代码呢

15:52.220 --> 15:53.820
啊综合上

15:54.520 --> 15:57.120
那就是第一个老师teachers

15:58.720 --> 16:00.420
第一个老师什么爱好

16:00.520 --> 16:02.120
对吧要练习表达式

16:03.020 --> 16:03.520
love

16:04.920 --> 16:05.620
这倒是爱好

16:05.620 --> 16:06.320
这是个数据

16:06.320 --> 16:07.520
数据里边不一个属性吗

16:07.520 --> 16:08.820
一个属性什么长度

16:08.820 --> 16:09.620
对吧nance

16:10.720 --> 16:11.320
nance

16:12.620 --> 16:13.720
好第二个老师

16:15.420 --> 16:16.720
然后第三个老师

16:19.770 --> 16:20.270
love

16:20.870 --> 16:21.470
nance

16:22.470 --> 16:25.470
一加起来不就是综合了吗

16:26.470 --> 16:27.470
一共有七个

16:28.470 --> 16:29.470
对不对

16:29.470 --> 16:31.470
这一颗呢其实数组他本身就没有

16:31.470 --> 16:32.470
有了上级颗的铺垫

16:32.470 --> 16:34.470
数组本身就没什么东西了

16:34.470 --> 16:35.470
他就是个对象

16:35.470 --> 16:36.470
就知道就完事了

16:37.470 --> 16:38.470
为什么要用综合号来访问呢

16:38.470 --> 16:40.470
因为他这个属性名是数字

16:40.470 --> 16:41.470
没有办法

16:41.470 --> 16:42.470
他不是一个有效的标识符

16:42.470 --> 16:43.470
没有办法用底

16:43.470 --> 16:45.470
所以说逼着没办法才用综合号

16:45.470 --> 16:47.470
所有对象本来他的属性访问

16:47.470 --> 16:48.470
都是用综合号的

16:49.470 --> 16:51.470
然后就是练习一下表达式

16:51.470 --> 16:53.470
对象和数据各种各种断期拔刀的组合

16:53.470 --> 16:55.470
不管他欠多深都无所谓

16:55.470 --> 16:57.470
两个表达式一个一点点

16:57.470 --> 16:59.470
成绩去找就完事了

17:00.470 --> 17:02.470
这就是咱们这一块

17:02.470 --> 17:03.470
那么现在支持呢

17:03.470 --> 17:06.470
我们的数据表达这一块就没了

17:06.470 --> 17:07.470
就没东西了

17:07.470 --> 17:08.470
所有的数据表达

17:08.470 --> 17:09.470
我要能够把数据

17:09.470 --> 17:11.470
用一个合适的类型表达出来

17:11.470 --> 17:13.470
然后我还要能够去修改他

17:13.470 --> 17:15.470
还要能够去访问他就完事了

17:15.470 --> 17:16.470
这一块就通了

17:16.470 --> 17:18.470
那么剩下的就是别的事情了

17:18.470 --> 17:19.470
我们后面慢慢聊

