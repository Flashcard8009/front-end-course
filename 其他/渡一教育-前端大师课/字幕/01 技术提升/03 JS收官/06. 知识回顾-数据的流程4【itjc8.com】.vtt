WEBVTT

00:00.000 --> 00:02.600
嗯 喝水啊

00:05.900 --> 00:12.600
打吧 怎么样啊 做兔了没啊 做兔了就对了

00:13.300 --> 00:17.200
这个不兔就是不给面子啊 这个不兔就没到位啊

00:17.800 --> 00:24.480
一定要说兔 说话说什么提不罪人 人治罪嘛 对不对

00:25.380 --> 00:30.080
好 那这道题啊 得到所有姓程的学生

00:30.380 --> 00:35.280
得到一个新宿主啊 有时候又来呗 哪一个新宿主啊 new students

00:35.580 --> 00:37.080
那表出去 学生

00:38.280 --> 00:41.680
然后循环原来的宿主啊 就直接来啊

00:42.680 --> 00:45.580
呃 我这里呢 推荐大家安装一个插件啊

00:46.180 --> 00:48.380
就是原来说 你为什么提示一下就出来了

00:49.080 --> 00:51.980
推荐安个插件叫做Type Line 就在这 怎么样

00:52.780 --> 00:56.680
Type Line 呃 这插件里面收一下啊 Type Line

00:57.680 --> 01:01.580
这个插件是支持多语言的啊 GS 啊 Python 啊 Java 他都支持啊

01:01.580 --> 01:04.580
很支持很多语言 他是使用人工智能的方式啊

01:04.580 --> 01:07.280
根据你之前写过的代码 然后推导出

01:07.280 --> 01:11.080
你接下来可能会写什么样的代码 你只要打出钱寄个字母啊

01:11.080 --> 01:14.680
他就会有很多的提示 当然他有的时候提示很傻的啊

01:14.680 --> 01:17.080
但是有的时候的提示确实还不错

01:17.580 --> 01:21.080
呃 这个插件呢 安装之后啊 就是你需要等一段时间

01:21.380 --> 01:24.680
呃 但是这个插件呢 我为什么之前没有推荐呢

01:24.880 --> 01:27.880
是因为 这个插件你安装之后啊 他要去那个

01:28.380 --> 01:32.080
联网下载很多东西 呃 但是这个联网过程呢

01:32.080 --> 01:35.980
他比较慢啊 因为他是需要同学们科学上网的

01:36.780 --> 01:40.380
因此这件事呢 我觉得同学们要不然早一点

01:40.380 --> 01:43.680
把把这件事搞定吧 同学们沈通广大 在群里边

01:44.280 --> 01:47.980
互相啊 有有的有东西的互相推荐一下啊

01:48.080 --> 01:52.080
或者是你去问那个谢老师啊 问那个谢杰老师

01:53.080 --> 01:58.880
他有的啊 私了啊 这个玩意儿我在直播客 或者是路播客里边不好说啊

01:59.380 --> 02:02.280
科学上网 科学上网的话可以解决很多问题

02:02.280 --> 02:04.580
反正里面早晚都得科学上网

02:05.380 --> 02:08.880
现在科学上网的工具呢 可能会有一些付费的啊

02:09.280 --> 02:13.280
钱也不多 一个月一个月就几十块钱吧

02:13.780 --> 02:14.580
那就这样子

02:15.580 --> 02:17.880
如果说你没有科学上网的话

02:17.880 --> 02:21.780
这个插件可能会到时候下载 联网下载的时候会失败啊

02:23.080 --> 02:26.680
好 然后这里一个科学团啊 就是便利所有的学生

02:26.680 --> 02:28.880
我们还是拿过去吧 把学生放到的students

02:28.880 --> 02:31.880
这个表是比较长啊 我就放到这个边量里面

02:31.880 --> 02:33.880
后边就通过这个边量来去做处理

02:34.680 --> 02:37.680
我要得到所有姓程的学生 还不是一样的吗 三选吗

02:37.680 --> 02:40.480
对吧 判断一下条件 条件是什么呀

02:40.480 --> 02:43.480
条件是他的名字的第一个字是陈

02:44.280 --> 02:47.480
对不对 名 s 点 name 是不是名字

02:48.080 --> 02:50.280
对吧 这不是这个字符串出来了吗 这个字符串

02:50.680 --> 02:52.680
那我要取他的第一个字怎么取呢

02:52.680 --> 02:55.680
是不是 这个字符串可以把它当成数组来用啊

02:55.680 --> 02:59.280
取他的第一个字符 对不对 取他的属性0

02:59.280 --> 03:02.680
属性0不就是第一个字符吗 第一个字符应该等于什么呢 等于成

03:04.280 --> 03:08.080
这不是姓程的学生吗 然后把这个学生加到姓数组里面去

03:09.280 --> 03:11.680
加的是学生 不是学生的名字

03:12.680 --> 03:17.080
好 最后出了循环之后 这个姓数组里面不就是所有姓程的学生了吗

03:17.880 --> 03:21.080
这里边没有姓程的 是吧 没有姓程的 有没有姓李的呀

03:23.080 --> 03:26.680
有一个 有一个 还有没有别的呀 姓王的呀

03:28.480 --> 03:30.880
有一个 有没有姓张的呀

03:33.080 --> 03:35.880
没有 就是这么个意思啊 你们去弄一下

03:35.880 --> 03:39.080
姓程的学生好像没有 是吧 但是我们代码得这样子写

03:40.680 --> 03:43.480
好 这是这道题 下面这道题

03:43.480 --> 03:46.680
得到电话号码以一节尾的学生

03:47.480 --> 03:52.480
那不像的吗 那个new student 哎 我就直接复制了

03:53.880 --> 03:57.680
一定要 你们不要复制啊 你们按在这儿写 要写到复位置

03:58.480 --> 04:02.880
你们不能复制啊 要看老师复制 或者是讲课的时候 轻松一点啊

04:03.880 --> 04:09.680
你们不要复制啊 好 我们的条件是什么呢 条件是电话号码 对吧 s 边 tail

04:10.280 --> 04:15.080
电话号码以一节尾 那是不是我要取这个电话号码的最后一个制服啊

04:15.880 --> 04:20.280
那怎么取最后一个制服啊 那零是第一个制服 一是第二个制服

04:21.080 --> 04:24.880
那最后一个制服不就是一共十一位的电话号码 对吧

04:25.480 --> 04:28.680
那最后一个制服不就是长度减一吗 取十 对不对

04:29.280 --> 04:35.480
啊 但这样的写法呢就不是很好啊 万一这个电话号码是国外的呀 或者是一些作举号啊

04:36.080 --> 04:38.880
那又出问题了 对吧 所以说我们这里呢 最好是

04:40.080 --> 04:49.300
取这个电话号码长度的减一 这是个表达式吗 别人有个表达式有多长 他总会有个结果

04:49.700 --> 04:55.100
这个结果是不是就是这个电话号码的最后一个下标 对吧 这个表达式

04:56.300 --> 04:58.300
那结果放过来 作为作为

04:59.500 --> 05:03.500
电话号码的下标放到这个位置 那么最后一个位置是一

05:05.100 --> 05:10.500
好 我们来看一下 那所有电话号码都是以一节尾的 对不对 以一节尾

05:11.900 --> 05:13.300
好 然后这是这道题

05:15.400 --> 05:19.200
接下来下一道题 下一道题是得到所有学生姓名

05:20.500 --> 05:25.300
形成的数组 新数组啊 你们不要抄 你们不要copy哈 你们直接老老实实

05:26.200 --> 05:33.240
弄过来 得到所有学生姓名组成的数组 也就是说我要的是什么的 这个是一个映射

05:33.540 --> 05:40.840
对吧 原来是一个学生对象 我现在把他每个学生对象变成一个制服串 就是我要把这个对象变成一个制服串

05:41.540 --> 05:49.740
是不是要做一个映射 那这里呢 我们没有什么判断条件了啊 我就直接把这个学生的名字加入到新数组就把修就行了

05:50.940 --> 05:54.540
是不是 我新数组加上就不是学生了 就学生的名字

05:56.340 --> 06:02.340
你看吧 好 下一道题 得到所有女生形成的内名数组

06:03.240 --> 06:10.240
形成的就是姓名数组 也就是说我这里要加名字的时候呢 还不一定是所有的学生都加

06:10.440 --> 06:15.640
我要判断一下对吧 判断一下他是不是女生 这些条件一定要发明出了图

06:18.220 --> 06:23.620
我说我说我现在讲课都有一点麻了 更不要说我瞎来写了 不知道里面麻了没

06:24.520 --> 06:28.520
然后就完了嘛 对不对

06:30.520 --> 06:40.520
好 接下来 得到女生的姓名和电话号码形成的数组 就是我要的是什么呢 我要的是每

06:41.420 --> 06:47.120
每个女生的名字和电话 其他属性我不要 我不要其他属性

06:47.820 --> 06:53.520
注意啊 你不能去改哈 你不能去改那个原来的数组里边的东西 我一会说怎么改

06:54.120 --> 06:55.920
改的话也可以改 不是说不能改

06:56.920 --> 06:58.320
好 那我们来先说一下改吧

06:59.320 --> 07:05.120
我们得到他如果说是一个女生 那我们来怎么来处理呢 我就不要其他属性了 我只要保留电话

07:05.720 --> 07:14.320
电话号码和名字就可以了 所以说如果说他是一个女生 那么我就怎么样了 用D net关键字删除的吧 这个之前没有复习到

07:15.020 --> 07:22.120
删除其他属性 删除id属性 删除那个sext属性 删除ag属性

07:22.620 --> 07:25.820
删除而dress属性 是不是就剩下一个名字和电话了

07:26.420 --> 07:29.920
对吧 那这样子的我就不是输出新宿主了啊 就输出原宿主

07:30.220 --> 07:32.020
student 那原宿主里边

07:33.620 --> 07:43.420
女生啊 男生就没有管了啊 女生是不是就只有这个 只有这两个属性了啊 这是删除 但是这里的最好不要去动原来的东西啊 我用一个新宿主

07:44.620 --> 07:49.720
来处理 也就是新宿主呢 我们如果说发现他是女生 我就往新宿主里边加一箱

07:50.220 --> 07:52.020
加的是什么呢 加的是一个对象

07:52.920 --> 07:58.920
之前加的是一个字物 加的是一个数字 现在加的是一个对象 对吧 这对象里边有两个属性 一个是Nem属性

07:59.320 --> 08:02.720
Nem属性等于什么呢 等于这个学生的名字

08:03.620 --> 08:10.420
还有电话号码等于什么呢 等于学生的电话 对吧 说得到一个新的对象 把个新的对象加到这个新宿主里边去

08:12.460 --> 08:17.700
这就是所有女生的姓名和电话 对吧 不要去打啊 这段电话都是随意生存的

08:18.700 --> 08:20.100
ok 那这就是那个

08:21.600 --> 08:30.200
这到底 得到所有学生的年龄的组合 这不是一个球合的问题吗 对吧 哎呀 球合的东西 先来一个一张纸 记住一个0

08:30.700 --> 08:35.100
然后呢 再来遍地所有的学生 每个学生拿出来

08:37.100 --> 08:41.700
拿出来 然后呢 我要把他的年龄组合拿到

08:42.500 --> 08:48.900
是不是就是这个玩意儿 哪家 哪家什么 你不要哪家 s 哈 s是一个对象 你对象怎么加进去了

08:49.300 --> 08:56.900
所以说你要加什么 加学生的年龄 好 这样子哪家完了之后 最后这个边疆里面不就是纪录的总和吗

08:58.300 --> 09:04.900
对不对 好 那么下面这道题 计算所有学生的平均年龄 那么平均年龄怎么算了

09:05.200 --> 09:08.400
不就是年龄的总和 厨艺学生的人数吗 对吧

09:09.400 --> 09:13.800
是不是这样的吗 那我就拿到一个年龄的总和 厨艺学生的人数

09:15.200 --> 09:21.400
average 学生的人数怎么求了总和 厨艺学生的人数 人数是什么了 不就是数主长度吗

09:22.200 --> 09:27.400
studentness average 那么就得到这个平均年龄了

09:27.800 --> 09:34.670
啊 上面主使掉啊 21.65

09:36.270 --> 09:43.290
是吧 ok 这是这一块 得到一个对象

09:44.090 --> 09:48.490
这个是啥 这个对这个对象比较特殊啊 这个对象有意思 得到这么一个对象

09:48.890 --> 09:52.410
这个对象里边有两个属性 一个是name属性 一个是a级属性

09:53.170 --> 09:58.330
name属性里边要记住所有学生的名字 a级属性里边要记住所有学生的年龄

09:59.330 --> 10:00.930
这个玩意又怎么做了

10:02.490 --> 10:14.330
这个玩意其实也 你想通了也简单 就是我先来 不就是呢 想拿到这么一个对象吗 我就先来这么一个对象 这个对象里面有两个属性 一个是name是一个空数组 一个是年龄是一个空数组

10:15.570 --> 10:21.850
是吧 两个空数组 然后呢 我就便利学生 把第一个学生的名字加证 第一个学生的年龄加证

10:22.210 --> 10:27.050
再把第二个学生的名字加证 第二个学生的年龄加证 我就完了嘛 徐环结束就结束了

10:27.450 --> 10:34.010
好 我们得到一个 result 啊 这是个我们想要的对象 对象里面有两个属性 name 一个空 另外一个空数组

10:34.690 --> 10:41.360
a级一个空数组 好啊 然后我就循环学生呗

10:43.920 --> 10:48.680
哎等于0 哎小鱼student 家家

10:50.400 --> 10:52.320
喜欢学生 然后拿到每一个学生

10:56.710 --> 11:01.150
我干嘛 我要我要把这个学生的学生的name

11:02.030 --> 11:09.870
往里边加一下 对吧 这个对象里面的name 是不是个数组 这个表达是个数组 数组里面是个铺习函数啊 往里边加一下

11:10.270 --> 11:19.990
加什么呢 加这个学生的名字 加目前这个数组里面这一项学生的名字 然后除了加名字之外呢 我还要找到年龄这个数组 往里边加年龄

11:20.950 --> 11:28.950
这样子呢 我们最终徐环结束之后 我们整个对象里面 那里面包含了所有的学生的名字 a级包含了所有的学生的年龄

11:29.670 --> 11:32.070
对不对 这道题啊

11:33.470 --> 11:42.550
下载下载题 找到id为这个的学生对象 那这是个查照问题啊 这个查照问题 那查照问题怎么找呢

11:43.110 --> 11:48.430
是不过得先有一张纸或者是有个什么东西啊 我记录一下目前找到的学生对象

11:49.430 --> 11:58.670
啊 target目前一开始呢是ら啊然后就一节车箱一节车箱找找到了过后就给他重新复制复制为的学生对象

11:58.710 --> 12:10.780
那后来结束寻找对吧 说说我们这里的定一个辩量啊叫 target我们找到了是啊那啊或者是我们最终的

12:10.780 --> 12:11.780
也可以

12:11.780 --> 12:12.780
身上

12:12.780 --> 12:13.780
然后我们就开始寻找

12:16.780 --> 12:18.780
有的时候它体式很傻

12:20.780 --> 12:22.780
它其他语言体式倒是挺不错的

12:22.780 --> 12:23.780
GS这一块

12:23.780 --> 12:25.780
因为GS它语言太过于灵活

12:25.780 --> 12:27.780
有时候它体式很傻

12:27.780 --> 12:28.780
找这个学生

12:28.780 --> 12:29.780
student

12:29.780 --> 12:31.780
我要找的是什么呢

12:31.780 --> 12:36.780
这个学生的ID是等于7997

12:36.780 --> 12:37.780
是吧

12:37.780 --> 12:38.780
所以找到这个学生

12:38.780 --> 12:39.780
如果说找到了

12:39.780 --> 12:41.780
我就给这个变量负质为这个学生

12:41.780 --> 12:42.780
对吧

12:42.780 --> 12:43.780
我就要找这个学生

12:43.780 --> 12:44.780
然后结束

12:45.780 --> 12:46.780
好

12:46.780 --> 12:47.780
最后我们看一下

12:47.780 --> 12:48.780
这个变量

12:48.780 --> 12:49.780
输出的变量就完事了

12:49.780 --> 12:50.780
对不对

12:50.780 --> 12:51.780
如果说他为拉

12:51.780 --> 12:52.780
我就表示没有找到

12:52.780 --> 12:53.780
他不为拉我的话

12:53.780 --> 12:54.780
就找到了

12:54.780 --> 12:57.470
那就找到这个学生

12:57.470 --> 12:58.470
对吧

12:58.470 --> 12:59.470
好

12:59.470 --> 13:00.470
这是这道题

13:01.470 --> 13:02.470
下面这道题

13:02.470 --> 13:05.470
是否包含年龄大语

13:05.470 --> 13:06.470
这个又是一个查到问题

13:06.470 --> 13:07.470
对吧

13:07.470 --> 13:08.470
这种是否包含

13:08.470 --> 13:09.470
就是我只要知道

13:09.470 --> 13:10.470
就行了

13:10.470 --> 13:11.470
那我就用easeFant

13:11.470 --> 13:12.470
force

13:12.470 --> 13:17.000
然后又来循环

13:17.000 --> 13:18.000
还有一样

13:18.000 --> 13:20.000
student

13:20.000 --> 13:24.570
年龄大语28岁

13:24.570 --> 13:28.570
如果说sa级大语的28

13:28.570 --> 13:29.570
那么是不是找到了

13:29.570 --> 13:30.570
找到了

13:30.570 --> 13:31.570
我就把easeFant

13:31.570 --> 13:32.570
设为2

13:32.570 --> 13:33.570
break

13:34.570 --> 13:35.570
结束

13:36.570 --> 13:37.570
我哪里写错了

13:38.570 --> 13:39.570
没有写错

13:39.570 --> 13:40.570
那么最后

13:40.570 --> 13:41.570
我就输出一下easeFant

13:41.570 --> 13:42.570
是否包含

13:42.570 --> 13:43.570
这也可以判断一下

13:43.570 --> 13:44.570
如果他不想输出

13:44.570 --> 13:45.570
出合force的话

13:45.570 --> 13:46.570
那就判断一下

13:46.570 --> 13:47.570
其实我们这里

13:47.570 --> 13:48.570
也可以这样子写

13:50.570 --> 13:51.570
easeFant

13:51.570 --> 13:52.570
他为出吗

13:52.570 --> 13:53.570
为出的话

13:53.570 --> 13:54.570
我就输出4

13:54.570 --> 13:55.570
否则的话

13:55.570 --> 13:56.570
我就输出4

13:56.570 --> 13:57.570
对吧

13:57.570 --> 13:58.570
可以

13:58.570 --> 14:00.570
把三部运算浮的结果输出

14:00.570 --> 14:01.570
这三部运算浮

14:01.570 --> 14:02.570
要么就是这个4

14:02.570 --> 14:03.570
要么就是这个否

14:04.570 --> 14:05.570
是

14:05.570 --> 14:06.570
有这个学生

14:06.570 --> 14:07.570
我就不知道

14:07.570 --> 14:08.570
这个学生是啥

14:08.570 --> 14:09.570
因为我没有保存

14:09.570 --> 14:10.570
这个学生

14:10.570 --> 14:11.570
我只是保存了

14:11.570 --> 14:13.570
是否所有学生的年龄

14:13.570 --> 14:14.570
都在

14:15.570 --> 14:16.570
28岁

14:17.570 --> 14:18.570
以内

14:19.570 --> 14:20.570
这道题有点意思

14:20.570 --> 14:21.570
这道题

14:21.570 --> 14:22.570
压走题

14:22.570 --> 14:23.570
还是得找几个文

14:23.570 --> 14:26.570
是否所有女生的年龄

14:26.570 --> 14:29.570
都在28岁以内

14:29.570 --> 14:31.570
那这个玩意怎么找呢

14:32.570 --> 14:34.570
我们就反过来想呗

14:35.570 --> 14:37.570
是不是只要找到一个

14:38.570 --> 14:40.570
大于28岁的

14:42.880 --> 14:43.880
就行了

14:44.880 --> 14:45.880
所以我们找的是什么

14:45.880 --> 14:47.880
我们把这个题换一下

14:47.880 --> 14:48.880
找什么

14:49.880 --> 14:51.880
是否有学生

14:53.880 --> 14:55.880
是否有女生

14:56.880 --> 14:57.880
年龄

14:57.880 --> 14:59.880
大于28岁

15:00.880 --> 15:01.880
我们找这个玩意就行了

15:01.880 --> 15:03.880
还是个查到问题

15:03.880 --> 15:04.880
因为我要找

15:04.880 --> 15:05.880
都在28岁以内

15:05.880 --> 15:06.880
我不好找

15:06.880 --> 15:08.880
但是我找一个

15:08.880 --> 15:09.880
大于28岁的

15:09.880 --> 15:10.880
是不是就可以找

15:11.880 --> 15:13.880
我先找了再说

15:16.880 --> 15:18.880
那么我拿到一个学生

15:19.880 --> 15:20.880
拍段一下

15:20.880 --> 15:21.880
条件是什么

15:21.880 --> 15:22.880
条件是学生

15:22.880 --> 15:24.880
他的性别是女生

15:25.880 --> 15:27.880
同时他的年龄

15:27.880 --> 15:29.880
又大于28岁

15:29.880 --> 15:31.880
那么如果说找到了

15:34.880 --> 15:36.880
好那么接下来问题来了

15:36.880 --> 15:38.880
如果说找到了

15:39.880 --> 15:41.880
就是有女生

15:41.880 --> 15:43.880
年龄是大于28岁的

15:43.880 --> 15:45.880
我应该输出是还是否呢

15:45.880 --> 15:46.880
这边

15:49.960 --> 15:50.960
是不是否啊

15:51.960 --> 15:52.960
对不对

15:52.960 --> 15:54.960
因为有一个大于28岁的

15:55.960 --> 15:56.960
我不知道有多少个

15:56.960 --> 15:57.960
反正就是

15:57.960 --> 15:58.960
这时候28岁这条线

15:58.960 --> 15:59.960
下边的都是小于

15:59.960 --> 16:00.960
等于28岁的

16:01.960 --> 16:02.960
只要我找到了

16:02.960 --> 16:04.960
有一个在28岁以上的

16:04.960 --> 16:06.960
那么说明

16:06.960 --> 16:07.960
不是所有女生

16:07.960 --> 16:09.960
都在28岁以内

16:10.960 --> 16:12.960
所以说我们这里就输出

16:12.960 --> 16:13.960
刚好相反

16:13.960 --> 16:14.960
对不对

16:14.960 --> 16:15.960
输出否

16:15.960 --> 16:16.960
L什么

16:17.960 --> 16:18.960
就输出是

16:18.960 --> 16:20.960
就是我找了半天

16:20.960 --> 16:22.960
一个大于28岁的都没有

16:22.960 --> 16:23.960
那说明是不是

16:23.960 --> 16:25.960
说明全部都在28岁以内

16:25.960 --> 16:26.960
对吧

16:27.960 --> 16:29.960
就这么个意思

16:30.960 --> 16:31.960
OK

16:31.960 --> 16:32.960
那有些人说

16:32.960 --> 16:33.960
那我想知道

16:33.960 --> 16:34.960
到底是哪一个女生

16:34.960 --> 16:35.960
怎么办

16:35.960 --> 16:36.960
打个断点

16:36.960 --> 16:37.960
打个断点

16:37.960 --> 16:38.960
然后

16:38.960 --> 16:39.960
这里点运行

16:40.960 --> 16:41.960
运行

16:42.960 --> 16:43.960
现在把它设为

16:43.960 --> 16:44.960
出了对吧

16:44.960 --> 16:45.960
因为我们刚才看到的是

16:45.960 --> 16:46.960
否吗

16:46.960 --> 16:47.960
它肯定是出

16:47.960 --> 16:48.960
那么肯定会运行这个代码

16:48.960 --> 16:49.960
那我们来看一下

16:49.960 --> 16:50.960
这个学生是谁

16:50.960 --> 16:51.960
说冯秀兰

16:51.960 --> 16:53.960
他的年龄是29岁

16:56.960 --> 16:57.960
OK

16:57.960 --> 16:58.960
就没了

16:58.960 --> 16:59.960
没了

16:59.960 --> 17:00.960
你把这一套提

17:00.960 --> 17:01.960
以后那是五六

17:01.960 --> 17:02.960
全部练下来的话

17:02.960 --> 17:03.960
那这一块肯定是过关了

17:03.960 --> 17:05.960
肯定是把扫干净了

17:05.960 --> 17:07.960
这一块其实也没有

17:07.960 --> 17:08.960
就我们这一行

17:08.960 --> 17:09.960
没有那种

17:09.960 --> 17:11.960
特别高精尖的东西

17:11.960 --> 17:12.960
又不是造火箭

17:13.960 --> 17:14.960
又不是搞芯片

17:14.960 --> 17:16.960
又不是装核武器

17:16.960 --> 17:17.960
需要一代人

17:17.960 --> 17:19.960
或者是几代人的努力

17:20.960 --> 17:21.960
我们这个

17:21.960 --> 17:22.960
不需要那么长时间

17:22.960 --> 17:23.960
有些像一些

17:23.960 --> 17:24.960
高精的先生的技术

17:25.960 --> 17:26.960
很多科学家一辈子

17:26.960 --> 17:27.960
都看不到一个结果

17:27.960 --> 17:29.960
只能把它往前推进

17:29.960 --> 17:30.960
那么一小步

17:30.960 --> 17:31.960
咱们这个玩意

17:31.960 --> 17:32.960
就几天的时间

17:32.960 --> 17:33.960
搭不了就是一周

17:33.960 --> 17:34.960
搭不了就两周

17:34.960 --> 17:35.960
有什么搭不了的

17:35.960 --> 17:37.960
你只要过关了

17:37.960 --> 17:38.960
真的就过关了

17:38.960 --> 17:40.960
那这一辈子都过关了

17:41.960 --> 17:42.960
你要害怕他

17:42.960 --> 17:43.960
你不想去动他

17:43.960 --> 17:44.960
那就卡了一辈子

17:45.960 --> 17:46.960
没有什么搭不了

17:46.960 --> 17:47.960
你肯定是能过关的

17:47.960 --> 17:48.960
那这一块过关了

17:48.960 --> 17:49.960
我们程序里边

17:49.960 --> 17:51.960
最麻烦最麻烦的东西

17:51.960 --> 17:52.960
也不就是这个玩意了

17:52.960 --> 17:53.960
就是这个玩意

17:54.960 --> 17:56.960
然后这一块就OK了

17:56.960 --> 17:57.960
好吧

17:57.960 --> 17:58.960
好好去练一下这些题

