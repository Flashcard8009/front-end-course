WEBVTT

00:00.620 --> 00:05.620
好了 同学们 咱们之前对于jt操作都是用什么指令 对吧

00:05.620 --> 00:08.620
咱们老师我记不住啊 好烦啊 对吧

00:08.620 --> 00:13.620
咱们今天来讲讲关于jt相关的图形化工具

00:15.620 --> 00:20.620
这样的话 大家先打开百度 在上面搜索搜索搜索3

00:20.620 --> 00:24.620
然后点击这 无论是麦克版们还是Windows都有

00:24.620 --> 00:27.620
点击下载就好了 点击下载就好了

00:33.650 --> 00:36.650
然后老师这边是已经下完了 就不再重复下了

00:36.650 --> 00:39.650
然后打开 然后进行安装就可以了

00:41.650 --> 00:42.650
进行安装

00:44.650 --> 00:46.650
然后这个什么beat bucket

00:46.650 --> 00:51.650
bucket的这一也是一个类似github的这个页面

00:51.650 --> 00:53.650
这个不用管 这跳过就好了 这样的一个账号

00:53.650 --> 00:56.650
然后大家可能说默认的话没有这个mattro

00:56.650 --> 00:59.650
你可以把它勾上 勾险上

00:59.650 --> 01:03.650
然后接下来这个下一步

01:03.650 --> 01:06.650
然后这个没有的话 大家天上

01:06.650 --> 01:09.650
那这个是从本地信息去搞的 本地信息中去搞的

01:09.650 --> 01:11.650
大家配置完之后应该也有

01:11.650 --> 01:14.650
所以这个如果没有的话 写上就好了

01:14.650 --> 01:15.650
然后继续下一步

01:15.650 --> 01:19.650
下一步这段告诉你们想加载一个ssh密钥吗

01:19.650 --> 01:23.650
如果正常是需要加的 但是咱还没做 先点否

01:24.650 --> 01:28.650
那刚才说这个密钥 来 咱们搞一下

01:28.650 --> 01:30.650
大家如果进来的话应该是新的

01:30.650 --> 01:33.650
因为之前这做了个小测试

01:37.650 --> 01:39.650
刚才新来的时候应该是这样的

01:39.650 --> 01:43.650
然后干嘛呢 咱们先把之前配置的ssh在这里面搞上

01:43.650 --> 01:47.650
点工具 干嘛呢 创建或者导入ssh密钥

01:47.650 --> 01:50.650
点这工具 然后这有个load加在

01:52.650 --> 01:56.650
这里面在这 它会默认定位到咱们ssh文件

01:56.650 --> 01:58.650
但是刚进来什么都没有 为啥呢

01:58.650 --> 02:01.650
因为它选的是ppk文件 这里面选所有文件

02:01.650 --> 02:05.650
把这个rsa文件选上pub是公园 放到了服务器上

02:08.650 --> 02:10.650
ok 这四个ssh成功了是吧

02:10.650 --> 02:13.650
成功之后干嘛呢 记住 把这个ssh保存一下

02:14.650 --> 02:15.650
保存一下

02:16.650 --> 02:19.650
再次还是在这个文件夹下 干嘛起个名 随便起

02:19.650 --> 02:22.650
我觉得叫key 就是它最后结果是key点ukey

02:23.650 --> 02:26.650
ok 保存完之后干嘛呢 再点工具

02:26.650 --> 02:29.650
这有一个ssh助手

02:29.650 --> 02:33.650
它会自动选中这个文件夹下的一个ppk文件

02:33.650 --> 02:35.650
直接通过它去空间

02:35.650 --> 02:38.650
确定 这样的话就没问题了

02:38.650 --> 02:41.650
那我可以回到 回来 回到哪呢

02:41.650 --> 02:44.650
咱们之前的这个 之前写的这个页面

02:44.650 --> 02:45.650
gte

03:00.230 --> 03:03.230
来 看咱们的项目啊 这个跟手印

03:03.230 --> 03:06.230
或者这应该是有我的仓库 对吧

03:06.230 --> 03:08.230
然后这project

03:09.230 --> 03:10.230
这个

03:10.230 --> 03:14.540
然后然后是它对吧 点击克隆啊

03:14.540 --> 03:16.540
这hts ssh

03:16.540 --> 03:18.540
空空的仓库跟咱们有代码仓库

03:18.540 --> 03:21.540
按钮的位置可能不一样啊 复制

03:22.540 --> 03:24.540
复制完之后干嘛呢

03:24.540 --> 03:25.540
在这有克隆对吧

03:25.540 --> 03:27.540
local本地的克隆

03:27.540 --> 03:29.540
这个添加文件创建仓库

03:29.540 --> 03:30.540
这都能做

03:32.540 --> 03:33.540
粘贴

03:36.820 --> 03:39.820
如果没有刚才上一步的一个配置

03:39.820 --> 03:41.820
这个地方就会爆错 懂不懂吧

03:41.820 --> 03:44.820
那所以说 干嘛呢 把视频停了一下

03:44.820 --> 03:46.820
把之前关于这个salt tree的一个配置

03:46.820 --> 03:48.820
包括安装 做一下

03:48.820 --> 03:50.820
一定要跟上 至于说

03:50.820 --> 03:52.820
到这里面 这个没有爆错

03:52.820 --> 03:55.820
那说明我们配置成功呢 可以利用这个软件了

03:56.820 --> 03:59.820
ok 那在默认的话 是document下面的project文件夹

03:59.820 --> 04:02.820
那怎么选择给它选择桌面上

04:02.820 --> 04:05.820
干嘛呢 桌面上先建一个

04:07.820 --> 04:08.820
project

04:13.940 --> 04:15.940
ok 然后克隆

04:22.290 --> 04:24.290
这样的话 大家有时候看的

04:24.290 --> 04:27.290
其实在桌面上 你就能看到这样的一个文件

04:27.290 --> 04:29.290
文件夹 然后UOS code打开

04:30.290 --> 04:32.290
然后在这看看咱们这个界面

04:32.290 --> 04:34.290
提交 认识吧

04:34.290 --> 04:35.290
拉取 推送

04:35.290 --> 04:37.290
分支 合并

04:37.290 --> 04:39.290
什么证明都有

04:39.290 --> 04:41.290
只不过就是把原来的这个

04:43.290 --> 04:45.290
过程通过这种点点点的方式来实现

04:46.290 --> 04:49.290
那前提是一定要明白咱们之前做那件事

04:49.290 --> 04:50.290
它为什么要那么做

04:50.290 --> 04:52.290
也就是说他们这点的名字

04:52.290 --> 04:54.290
那偶尔可能跟咱们不一样

04:54.290 --> 04:56.290
那咱们一点难试

04:56.290 --> 04:58.290
那首先咱们master分支对吧

04:58.290 --> 05:00.290
那行 我想基于这个分支干嘛呢

05:00.290 --> 05:02.290
我想创建一个新的分支

05:02.290 --> 05:04.290
那点分支呗 创建新分支

05:04.290 --> 05:06.290
创建一个新的分支干嘛呢 我想创建一个叫做

05:06.290 --> 05:08.290
dv分支

05:08.290 --> 05:10.290
dv分支

05:10.290 --> 05:12.290
创建分支

05:12.290 --> 05:15.290
对吧 然后那现在是dv分支是吧

05:15.290 --> 05:18.290
那我想切换的这个小点在谁代表谁

05:18.290 --> 05:19.290
哪个是谁的分支

05:19.290 --> 05:20.290
然后点master

05:20.290 --> 05:22.290
然后在这就要剪出checkout嘛

05:22.290 --> 05:24.290
就切换到master分支

05:24.290 --> 05:27.290
切换到dv分支

05:27.290 --> 05:30.730
嗯 ok

05:30.730 --> 05:34.730
然后这里面的这个history代表我们的版本库

05:34.730 --> 05:36.730
然后这个文件状态对吧

05:36.730 --> 05:37.730
这个因为现在什么都没有

05:37.730 --> 05:39.730
那假如说现在我们干嘛呢

05:39.730 --> 05:41.730
现在在dv分支对吧

05:41.730 --> 05:44.730
ok 我来一个index.css

05:44.730 --> 05:46.730
在这里面写些代码

05:46.730 --> 05:48.730
什么呢 来个money 零

05:51.730 --> 05:52.730
ok

05:52.730 --> 05:53.730
然后回来

05:56.730 --> 05:58.730
然后这 这技术工学啊

05:58.730 --> 06:00.730
这的话你这个所有

06:00.730 --> 06:02.730
或者说这个在默认下的是一忽略的

06:02.730 --> 06:04.730
你可以说这个所有

06:04.730 --> 06:06.730
看所有文件就行了

06:06.730 --> 06:08.730
你看包括这个问号

06:08.730 --> 06:10.730
代表是这个这个文件干嘛呢

06:10.730 --> 06:11.730
这个是新创建的嘛

06:11.730 --> 06:13.730
那这个呢就是什么

06:13.730 --> 06:14.730
就是我们工作区的内容

06:14.730 --> 06:16.730
然后这个是暂存区对吧

06:16.730 --> 06:17.730
你点这个加号

06:19.730 --> 06:21.730
啊 可以把它放到暂存区

06:21.730 --> 06:22.730
那当然说你

06:22.730 --> 06:24.730
你可以说直接点暂存所有野心

06:24.730 --> 06:25.730
啊 一样的

06:25.730 --> 06:27.730
那它只会找差异嘛 找它

06:27.730 --> 06:28.730
然后把这个干嘛呢

06:28.730 --> 06:29.730
暂存完之后

06:29.730 --> 06:30.730
提交成一个新的版本

06:30.730 --> 06:32.730
那这里面没有提交信息啊

06:32.730 --> 06:33.730
对吧 commit

06:34.730 --> 06:36.730
这个初始化 css的样式

06:37.730 --> 06:40.550
啊 这无非就是咱们的

06:40.550 --> 06:42.550
这个 commit 对不对

06:42.550 --> 06:43.550
啊

06:43.550 --> 06:45.550
然后点这个提交就好了

06:49.270 --> 06:51.270
ok 这样呢 回来看历史

06:54.350 --> 06:55.350
对 是不是多了

06:55.350 --> 06:56.350
多了一个第一位分支

06:56.350 --> 06:57.350
它是从下往上的

06:57.350 --> 06:59.350
从下往上的一个过程

06:59.350 --> 07:00.350
那ok 那干嘛呢

07:00.350 --> 07:02.350
咱们再切换到 master 分支

07:04.350 --> 07:07.350
啊 ok 咱们再创建一个 index

07:08.350 --> 07:10.350
对 css

07:11.350 --> 07:14.350
啊 ok 那咱们在这也初始化一个

07:14.350 --> 07:16.350
干嘛呢 咱们想表示一下

07:16.350 --> 07:17.350
文件冲突

07:17.350 --> 07:19.350
啊干嘛呢 刚才写的是 master

07:19.350 --> 07:20.350
这写的是 padding

07:21.350 --> 07:23.350
ok 那再把它再提交成一个版本

07:23.350 --> 07:24.350
好吧

07:24.350 --> 07:26.350
那同样查个文件状态

07:27.350 --> 07:28.350
啊 查个文件状态

07:31.350 --> 07:33.350
对吧 还是干嘛呢

07:33.350 --> 07:35.350
添加到暂存区域

07:35.350 --> 07:37.350
然后提交成版本

07:37.350 --> 07:38.350
也叫初始化

07:40.350 --> 07:41.350
啊 css

07:42.350 --> 07:43.350
然后提交

07:44.350 --> 07:48.650
哎 完事了

07:48.650 --> 07:50.650
对吧 那这个时候你回来看历史

07:50.650 --> 07:51.650
你就能看出来

07:51.650 --> 07:52.650
哎 两个分支

07:52.650 --> 07:53.650
分别一个第一位分支

07:53.650 --> 07:55.650
一个啊这个 master 分支

07:55.650 --> 07:57.650
它俩哎 这个同时相间

07:57.650 --> 07:59.650
这个往前走了一步

07:59.650 --> 08:00.650
那接下来干嘛呢

08:00.650 --> 08:01.650
我们想让

08:01.650 --> 08:03.650
第一位分支跟 master 分支合并

08:03.650 --> 08:05.650
并且合并到 master 分支上来

08:05.650 --> 08:06.650
点击合并

08:08.650 --> 08:09.650
对吧 然后干嘛呢

08:09.650 --> 08:10.650
跟选选一个

08:10.650 --> 08:11.650
选一个这个

08:12.650 --> 08:13.650
用 dv 跟 master 合

08:13.650 --> 08:14.650
选一个 dv 分支

08:14.650 --> 08:15.650
确定

08:15.650 --> 08:16.650
选了 jitmerd

08:16.650 --> 08:17.650
然后这个时候

08:17.650 --> 08:18.650
我告诉你干嘛

08:18.650 --> 08:19.650
出现冲突

08:19.650 --> 08:20.650
啊 然后这个时候

08:20.650 --> 08:21.650
因为它俩本来

08:21.650 --> 08:22.650
我这个不这个

08:22.650 --> 08:24.650
只是说位置上的冲突

08:24.650 --> 08:25.650
但内容不冲突

08:25.650 --> 08:27.650
所以说咱们两个都要

08:27.650 --> 08:28.650
对吧 哎

08:28.650 --> 08:29.650
然后回来

08:29.650 --> 08:30.650
关闭

08:31.650 --> 08:33.650
啊 那这个冲突咱们要干嘛

08:33.650 --> 08:34.650
要解决冲突对吧

08:34.650 --> 08:35.650
还是回到文件状态

08:36.650 --> 08:38.650
啊 它会得到一个新的 css

08:39.650 --> 08:40.650
啊 暂存

08:40.650 --> 08:41.650
然后干嘛呢

08:41.650 --> 08:43.650
这里面它会给我们写了对吧

08:43.650 --> 08:45.650
跟 dv 分支合并

08:45.650 --> 08:46.650
啊 ok 点提交

08:49.090 --> 08:51.090
ok 那这个时候你再查看一下历史

08:54.090 --> 08:55.090
是不是两个分支

08:55.090 --> 08:56.090
然后最终合并到这了

08:57.090 --> 08:58.090
啊 然后合并完之后干嘛呢

08:58.090 --> 09:00.090
是不是还可以给它推送

09:00.090 --> 09:02.090
推送到远程分支

09:02.090 --> 09:04.090
对吧 那只不过你说这个

09:04.090 --> 09:06.090
它 软件可以同时

09:06.090 --> 09:08.090
让 master 跟 dv 分支推送

09:08.090 --> 09:09.090
只不过 dv 的话

09:09.090 --> 09:10.090
你可以推动 dv 分支

09:10.090 --> 09:12.090
master 推动 master 分支

09:17.090 --> 09:18.090
哎 完事

09:18.090 --> 09:19.090
那我怎么想知道完没完事呢

09:19.090 --> 09:20.090
回来刷新一下呗

09:20.090 --> 09:21.090
看看有没有位

09:21.090 --> 09:22.090
是不是

09:23.090 --> 09:25.090
远程的是 master dv 分支

09:25.090 --> 09:26.090
定 dv 咱们用

09:26.090 --> 09:27.090
是吧

09:27.090 --> 09:29.090
哎 dv 分支也是刚推上来的

09:30.090 --> 09:31.090
也是刚推上来的

09:32.090 --> 09:33.090
包括说这里面

09:33.090 --> 09:34.090
还有什么呢

09:34.090 --> 09:35.090
分支

09:35.090 --> 09:36.090
包括咱们的文件状态

09:37.090 --> 09:38.090
对吧

09:38.090 --> 09:40.090
这个合并分支推送拉去

09:40.090 --> 09:42.090
通过点点点就能做到

09:42.090 --> 09:44.090
那其实它还有很多功能

09:44.090 --> 09:45.090
跟我们的指令是对应的

09:45.090 --> 09:47.090
只不过咱们之前是敲指令

09:47.090 --> 09:48.090
现在呢

09:48.090 --> 09:49.090
是通过这个这个

09:49.090 --> 09:51.090
软件的方式

09:51.090 --> 09:52.090
去点击

09:53.090 --> 09:54.090
这个咱们就说到这

09:54.090 --> 09:55.090
包括说呢

09:55.090 --> 09:56.090
我还想做一些其他功能怎么办

09:56.090 --> 09:57.090
同时可以说

09:57.090 --> 09:58.090
自行的茶油文档

09:58.090 --> 09:59.090
包括说

09:59.090 --> 10:00.090
看一看

10:00.090 --> 10:01.090
百度它这样一个操作手册

10:02.090 --> 10:03.090
刚才只给大家

10:04.090 --> 10:06.090
做了简单的软件的一个几个步骤

10:06.090 --> 10:07.090
当然我们工作当中也就是这些

10:07.090 --> 10:08.090
那OK

10:08.090 --> 10:11.090
那这就是关于騷擎咱们就说这么多

