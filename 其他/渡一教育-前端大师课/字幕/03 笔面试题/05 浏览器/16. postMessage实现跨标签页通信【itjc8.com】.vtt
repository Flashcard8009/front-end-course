WEBVTT

00:00.750 --> 00:08.170
好 接下来的话 我们来看一下使用这个window.open以及这个window.postmessage

00:08.430 --> 00:12.530
通过这种方式来实现这个跨标签页的通信

00:12.790 --> 00:15.610
我们首先来看一下MODN上面

00:15.870 --> 00:18.410
关于这个window.postmessage

00:18.670 --> 00:19.690
它的一个介绍

00:20.210 --> 00:25.830
window.postmessage方法可以安全的实现跨源通信

00:26.350 --> 00:28.650
通常对于两个不同页面的脚本

00:28.870 --> 00:31.970
只有当执行它们页面具有相同的协议

00:32.230 --> 00:35.570
端口号以及这个主机的时候

00:35.830 --> 00:37.870
这两个脚本才能相互通信

00:38.130 --> 00:43.250
然后postmessage方法提供了一种受控机制来规避此限制

00:43.510 --> 00:46.570
只要正确使用方法就很安全

00:47.090 --> 00:50.410
OK 这个是关于MODN上面的一个介绍

00:50.670 --> 00:53.730
比起这个介绍的话 我们其实直接看例子

00:54.250 --> 00:55.010
要来得快一些

00:55.530 --> 00:56.030
对吧

00:56.290 --> 00:58.090
好 我们把这个demo的话 我们把它写一下

00:58.550 --> 01:00.850
好 首先这边认证是两个页面

01:01.110 --> 01:02.650
一个页面一 一个页面二

01:02.910 --> 01:05.470
好 然后接下来首先来写页面一

01:05.730 --> 01:07.010
这边的话一个barton

01:07.770 --> 01:10.330
这个是专门负责弹出窗口的

01:11.090 --> 01:12.110
弹出

01:12.370 --> 01:13.410
新窗口

01:15.190 --> 01:16.210
弹出新窗口

01:16.470 --> 01:17.750
好 这边我给一个id

01:18.270 --> 01:20.310
id的话是一个pop

01:20.570 --> 01:21.330
btn

01:21.850 --> 01:22.370
OK

01:22.870 --> 01:24.930
好 然后接下来的话有一个这个input

01:25.430 --> 01:27.990
这个是负责一会要进行一个通信的

01:28.550 --> 01:31.630
一会在这个页面里面写一些东西

01:31.890 --> 01:34.450
写一些东西之后 然后就在这边再来一个barton

01:35.210 --> 01:36.230
这边的话btn

01:36.490 --> 01:38.790
这个吧就是负责发送数据的

01:39.570 --> 01:43.650
发送数据发送到哪去呢 发送到弹出的新的窗口去

01:44.410 --> 01:44.690
OK

01:45.450 --> 01:47.050
好 然后接下来的话这边

01:50.310 --> 01:52.110
好 首先的话先获取一下

01:52.370 --> 01:53.390
这边const

01:53.650 --> 01:54.930
一个pop

01:55.190 --> 01:55.950
btn

01:56.950 --> 02:01.530
等于一个document.query selector

02:01.790 --> 02:03.830
把动物元素获取一下

02:04.090 --> 02:05.890
这边的话就是pop btn

02:06.390 --> 02:07.510
好 负责两份

02:07.930 --> 02:10.230
然后一个是什么呢 一个是content

02:13.710 --> 02:16.030
另外一个是什么呢 另外一个是btn

02:18.380 --> 02:19.400
btn

02:19.900 --> 02:20.420
btn

02:20.680 --> 02:22.720
OK 先把动物元素获取到

02:22.980 --> 02:26.820
好 获取到之后 然后接下来我们先做什么呢 先给这个pop btn

02:27.080 --> 02:28.360
我们来绑定一个实现

02:28.560 --> 02:30.620
我们这边let一个opener

02:31.900 --> 02:32.920
opener

02:33.180 --> 02:34.460
等于一个num

02:34.720 --> 02:37.780
这个是干嘛的呢 这个的话用来保存

02:38.820 --> 02:43.680
用于保存window.open

02:43.940 --> 02:48.020
打开的窗口的引用

02:49.560 --> 02:50.840
啊 引用

02:51.100 --> 02:53.660
我们一会的话要调用这个window.open方法

02:53.920 --> 02:54.940
来打开一个页面

02:55.200 --> 02:57.240
这个页面就是我们的index2页面

02:58.060 --> 02:59.500
那它会给你返回一个值

02:59.760 --> 03:02.320
这个值的话就保留着这个窗口的这个引用

03:02.820 --> 03:05.900
回头的话你就可以在这个值上面调一些方法

03:07.180 --> 03:09.220
好 那接下来这边就开始打开呗

03:09.740 --> 03:12.560
那这边那就是pop btn

03:13.320 --> 03:16.660
点onclick等于一个function

03:17.420 --> 03:21.780
绑定一个点击事件 点击事件里面调window.open方法

03:22.540 --> 03:23.820
对吧 打开谁

03:24.080 --> 03:27.140
打开index2.html

03:28.060 --> 03:30.460
啊 那接下来这边有一个这个标题

03:31.020 --> 03:32.460
标题的话你就随便写嘛

03:32.820 --> 03:35.500
好 然后接下来这边可以设置一下它的这个

03:35.760 --> 03:40.500
窗口的宽高 比如说我这边hit设置是一个400

03:41.260 --> 03:43.320
然后宽

03:44.080 --> 03:45.620
设置一个400

03:45.880 --> 03:48.940
啊 然后加这边top设置一个比如说20

03:49.460 --> 03:51.520
然后这个resize

03:51.780 --> 03:52.740
resizable

03:53.000 --> 03:54.580
设置是一个yes

03:55.040 --> 03:58.880
就可以重新拖动 改变它的这个size

03:59.140 --> 04:00.940
好 然后它会返回一个引用

04:01.200 --> 04:03.480
说我这边的话使用什么呢 使用这个opener

04:04.260 --> 04:05.280
来接收一下

04:06.040 --> 04:06.560
看到没啊

04:07.080 --> 04:09.640
好 那接下来它一会儿就会把这个index2

04:09.900 --> 04:12.440
把它打开 那比如说我在这边我写一个

04:13.980 --> 04:16.040
这是页面2

04:16.800 --> 04:18.340
好 然后接下来这边

04:18.840 --> 04:19.620
全部保存

04:20.140 --> 04:23.960
保存之后然后来到这边 这边你可以看到我只打开了页面1

04:24.380 --> 04:27.740
对不对 好 我点击一下 弹出新窗口轴

04:28.260 --> 04:28.780
看到没有

04:29.540 --> 04:30.060
你看这边

04:30.820 --> 04:32.100
这边的话是不是这个页面2

04:32.620 --> 04:35.700
就打开了 对不对 宽400 高400

04:36.200 --> 04:40.540
就打开了 打开了之后 然后接下来我这边 这边的话我想像这边

04:40.800 --> 04:43.880
我点发送数据的时候 我想像这个页面2

04:44.140 --> 04:47.200
来发送数据 那怎么做呢 很简单

04:47.460 --> 04:49.780
那这边的话你就直接

04:50.540 --> 04:51.820
应该是给这个bt

04:52.080 --> 04:52.840
绑实验

04:53.360 --> 04:53.860
对吧

04:54.160 --> 04:54.920
点

04:55.440 --> 04:56.480
onclick

04:56.740 --> 04:57.760
等于一个

04:59.040 --> 04:59.800
方形

05:01.080 --> 05:01.580
好

05:01.840 --> 05:04.400
当点击的时候 然后接下来我们这边

05:04.660 --> 05:05.940
来获取一下

05:06.200 --> 05:07.740
要发送的数据

05:08.500 --> 05:11.060
data等于一个这边 value

05:11.320 --> 05:14.660
对应的是一个content.value

05:15.160 --> 05:18.740
然后接下来的话 这边通过什么呢 通过这个opener

05:19.520 --> 05:21.560
看不看 为什么刚才要保存这个引用

05:21.820 --> 05:23.100
因为我们现在会用到

05:23.300 --> 05:25.660
opener它上面有一个叫做post

05:25.920 --> 05:26.680
message

05:29.850 --> 05:31.390
post message

05:31.910 --> 05:34.450
好 通过post message 接下来这边的话

05:34.710 --> 05:37.010
传入你要发送的data

05:37.270 --> 05:39.570
好 然后接下来第二个参数 给一个信号

05:39.830 --> 05:43.930
信号代表什么意思呢 它第二个参数其实就是你这个

05:44.190 --> 05:45.470
访问的来源

05:46.230 --> 05:47.010
就是这边

05:47.510 --> 05:48.030
写一下

05:48.290 --> 05:48.790
data

05:49.310 --> 05:50.070
代表

05:51.610 --> 05:52.630
代表

05:52.890 --> 05:53.410
的

05:53.670 --> 05:54.170
设

05:55.150 --> 05:56.430
要发送的

05:56.690 --> 05:57.450
数据

05:57.710 --> 05:58.730
好 第二个

05:58.990 --> 06:01.810
参数是什么呢 是origin

06:02.570 --> 06:04.870
origin是不是就是你的这个源啊

06:05.390 --> 06:06.670
对不对 或者说你的域

06:07.170 --> 06:07.950
你的域

06:08.210 --> 06:09.470
也就是说你的这个域名

06:09.730 --> 06:12.030
那这边就是使用信号

06:13.310 --> 06:14.870
使用信号

06:15.370 --> 06:17.670
代表什么 所有原

06:17.930 --> 06:19.470
对应该是所有域

06:20.750 --> 06:21.770
所有域

06:21.990 --> 06:22.990
域名

06:23.250 --> 06:24.790
所有域都可以

06:25.050 --> 06:26.830
ok 这边就发送了

06:27.090 --> 06:30.170
好 这边发送了之后 然后接下来的话在这边

06:30.930 --> 06:32.990
在这边的话 我们就接收一下

06:33.250 --> 06:34.770
这边的script

06:36.050 --> 06:37.330
然后window

06:37.590 --> 06:39.630
点end event listener

06:39.890 --> 06:42.450
绑定一个什么事件呢 绑定一个

06:42.710 --> 06:43.730
message世界

06:45.010 --> 06:48.090
message世界里面 然后接下来这边回调函数

06:48.350 --> 06:50.130
这边有个世界对象

06:50.390 --> 06:51.670
然后接下来的话这边

06:52.750 --> 06:55.310
cancel.log

06:55.570 --> 06:58.110
拿到什么呢 这边1.data

06:58.890 --> 07:01.710
拿到这边传递过来的数据

07:01.970 --> 07:03.750
我们这边我们来看一下好不好用

07:05.290 --> 07:06.310
全部保存

07:06.830 --> 07:08.870
保存了之后 然后接下来这边

07:09.130 --> 07:09.910
把这个关了

07:10.410 --> 07:11.430
重新弹出

07:11.950 --> 07:13.990
好 弹出来之后 然后接下来这边

07:14.510 --> 07:17.830
检查把控制台打开 单独开了一个

07:18.090 --> 07:18.590
是吧

07:18.850 --> 07:22.950
好 然后接下来我们在这边 我们来输一些东西 比如说写节

07:23.210 --> 07:23.710
走

07:23.970 --> 07:24.730
拿到没有

07:25.510 --> 07:26.270
是不是拿到了

07:26.790 --> 07:28.070
对不对 你好

07:28.570 --> 07:29.090
走

07:30.110 --> 07:30.870
是不是拿到了

07:31.390 --> 07:31.890
对不对

07:32.150 --> 07:34.970
所以说通过这个post message这种方式

07:35.490 --> 07:37.010
我们是不是也成功的实现了

07:37.270 --> 07:38.290
划标签页

07:38.550 --> 07:38.810
通信

07:39.330 --> 07:42.390
对不对 而且这种方式的话 相比前面介绍的这个

07:42.650 --> 07:44.450
Saurus Walker

07:44.950 --> 07:45.990
还介绍了个啥

07:46.490 --> 07:47.010
前面

07:47.470 --> 07:49.510
这个Saurus Walker 还有就是这个

07:49.770 --> 07:50.790
Shield Walker

07:51.310 --> 07:54.630
比起这个的话 其实还简单些 因为我不用去注册

07:55.150 --> 07:56.950
对不对 你无论是这个Saurus Walker

07:57.470 --> 07:58.750
还是这个Shield Walker

07:58.990 --> 08:00.790
都得去注册一个Walker

08:01.550 --> 08:04.110
对不对 这个post message 他就直接

08:04.370 --> 08:05.150
就把数据

08:05.390 --> 08:06.670
传递给就是

08:06.930 --> 08:07.950
你打开的这个页面了

08:09.230 --> 08:10.510
这个的话就是通过这个

08:10.770 --> 08:12.830
window.post message

08:13.070 --> 08:15.890
来实现划标签页的通信

08:16.390 --> 08:16.910
好吧

08:17.010 --> 08:18.230
好 下来自己试一下吧

