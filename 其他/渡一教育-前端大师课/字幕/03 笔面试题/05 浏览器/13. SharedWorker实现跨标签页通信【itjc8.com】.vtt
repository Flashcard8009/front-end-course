WEBVTT

00:00.430 --> 00:02.990
这节课的话我们来看一下通过这个

00:03.510 --> 00:05.030
shared walker

00:05.290 --> 00:07.850
然后定时期轮寻的方式

00:08.110 --> 00:10.930
来实现这个跨标签页的这个通信

00:11.190 --> 00:13.490
shared walker的话

00:13.750 --> 00:15.270
它是web walker的一种

00:15.530 --> 00:18.090
它和web walker最大的区别就是什么呢

00:18.350 --> 00:19.110
最大区别就是

00:19.370 --> 00:22.190
它就是几个页面可以共享一个walker

00:22.710 --> 00:26.550
我们这边来看一下这个MDN对shared walker的一个说明

00:27.050 --> 00:30.130
它代表一种特定类型的walker

00:30.630 --> 00:33.750
然后使用这个walker的话可以连接到什么呢

00:34.010 --> 00:36.050
连接到多个不同的页面

00:36.570 --> 00:38.370
这些页面必须是什么呢 必须是

00:38.630 --> 00:39.130
同源的

00:39.650 --> 00:40.150
OK

00:40.410 --> 00:42.450
好 那我们这边呢仍然是直接通过实例

00:42.710 --> 00:43.230
来看

00:43.730 --> 00:46.810
这边我创建好了两个页面 页面1和页面2

00:47.070 --> 00:48.610
首先的话这个页面1

00:49.630 --> 00:52.690
页面1的话我们这边仍然是写一个input

00:54.780 --> 00:55.800
写一个input

00:56.060 --> 01:00.660
然后再这边给一个id 给一个content

01:01.380 --> 01:03.420
好 然后接下来这边给一个button

01:04.700 --> 01:07.780
好 然后加这边是发送信息

01:08.040 --> 01:09.060
OK

01:09.320 --> 01:10.840
好 然后在script里面

01:11.100 --> 01:14.440
先把这两个动物元素我们先把它拿到

01:14.700 --> 01:19.040
一个是document.cary selector

01:20.580 --> 01:21.860
警号content

01:22.120 --> 01:24.160
好 一个是这个按钮

01:24.940 --> 01:25.440
btn

01:26.720 --> 01:27.240
btn

01:27.500 --> 01:29.020
好 然后接下来下一步

01:29.280 --> 01:30.560
下一步的话我们要干嘛呢

01:30.740 --> 01:32.660
我们要创建一个walker

01:34.440 --> 01:34.960
创建

01:36.240 --> 01:38.800
创建一个walker

01:39.060 --> 01:41.200
这个walker的话就是回头要帮我们

01:41.460 --> 01:42.640
帮我们做事情的

01:42.900 --> 01:44.940
它是一个独立的这个线册

01:45.200 --> 01:47.000
这个的话在下一节课

01:47.260 --> 01:49.800
就是我们把这个跨标签页通信

01:50.060 --> 01:53.140
讲完之后 我给大家讲一下这个web walker

01:53.400 --> 01:55.440
那我们这边先就直接看实例

01:55.700 --> 01:57.240
这边创建一个这个walker

01:57.760 --> 01:59.280
这边的话就const

01:59.740 --> 02:01.280
一个这个walker

02:01.540 --> 02:04.600
等于什么呢 等于一个这边你要new一个什么呢

02:04.860 --> 02:06.660
new一个shared walker

02:08.440 --> 02:09.480
shared walker

02:10.240 --> 02:11.260
可不可以啊

02:11.520 --> 02:15.860
然后接下来这里 这里的话需要传入你的这个walker这个gsh文件

02:16.120 --> 02:17.660
那gsh文件我这边是不是创建好了

02:18.180 --> 02:20.220
对不对 一个空的这个我们一会来写

02:20.740 --> 02:21.500
好 这里

02:21.760 --> 02:22.780
这里的话就是

02:23.040 --> 02:24.060
walker

02:24.320 --> 02:25.600
点gsh

02:26.120 --> 02:27.900
好 创建了这个walker之后

02:27.940 --> 02:29.640
然后回头我们就通过这个walker

02:30.160 --> 02:31.940
来进行一个这个消息的发送

02:32.200 --> 02:34.260
那我们这边呢给这个按钮

02:34.520 --> 02:36.560
绑定一个点击事件

02:38.910 --> 02:40.190
click

02:41.190 --> 02:42.730
等于一个function

02:43.510 --> 02:45.810
OK 好 在这里在这里干嘛呢

02:46.070 --> 02:47.590
我们就通过这个walker

02:47.850 --> 02:49.390
walkers不刚才创建好的

02:49.650 --> 02:52.470
对不对 然后他有一个什么呢 他有一个这个port

02:53.230 --> 02:54.770
port 然后有一个方法

02:55.290 --> 02:57.330
叫做post message

02:58.050 --> 03:01.430
那我们这边的话就在这个地方 把我们的这个要发送的

03:01.690 --> 03:02.450
信息

03:02.710 --> 03:03.990
我们要发送的信息是什么

03:04.250 --> 03:06.290
content.value

03:07.310 --> 03:07.830
对不对

03:08.090 --> 03:08.850
把这个

03:09.110 --> 03:09.870
进行一个发送

03:10.390 --> 03:12.430
那这个信息会发送到哪里去呢

03:12.690 --> 03:15.510
这个信息的话他就会发送给这个walker

03:16.270 --> 03:18.070
就是我们的这个walker点gsh

03:18.330 --> 03:19.350
说来到这边

03:19.610 --> 03:22.170
来到这边我们首先挖一个这个data

03:22.930 --> 03:24.470
等于一个空置串

03:24.730 --> 03:26.770
这个是干嘛呢 这个是存储

03:29.220 --> 03:30.260
存储

03:30.520 --> 03:32.300
这个用户

03:32.560 --> 03:33.840
发送

03:34.100 --> 03:35.360
过来的

03:35.880 --> 03:36.400
信息

03:37.160 --> 03:37.680
存储

03:37.940 --> 03:39.720
好 然后接下来的话 这边

03:39.980 --> 03:41.000
unconnect

03:42.540 --> 03:44.340
等于一个function

03:46.380 --> 03:49.960
关于这个方法的话 你可以在这个mdn上面看到

03:50.480 --> 03:51.240
在这个位置

03:52.000 --> 03:54.320
看到没有 这边example就是这个

03:54.820 --> 03:56.120
就是这个 我们来看一下

03:56.620 --> 03:58.160
the connecting port

03:58.380 --> 04:00.160
can be referenced

04:00.420 --> 04:02.200
through the event object

04:02.460 --> 04:04.000
就是他有一个这个事件对象

04:04.260 --> 04:05.800
那他有一个这个port

04:06.560 --> 04:07.080
这个参数

04:07.340 --> 04:08.600
看到没有port这个参数

04:08.860 --> 04:09.900
this

04:10.140 --> 04:14.500
this reference can handle and unmessage handler

04:14.760 --> 04:18.340
就是他可以监听一个什么呢 监听一个unmessage

04:18.600 --> 04:19.100
事件

04:19.620 --> 04:20.140
看到没有

04:20.400 --> 04:22.180
好 那我们这边把这个拿过来

04:23.460 --> 04:24.740
把这一块拿过来

04:25.260 --> 04:27.040
然后来到我们的代码里面

04:27.240 --> 04:28.280
这边需要有个e

04:29.040 --> 04:30.680
然后接下来这边监听一个什么呢

04:30.940 --> 04:33.140
监听一个unmessage 事件

04:33.400 --> 04:35.960
在这里我们要做的事情就不一样了

04:36.460 --> 04:38.260
在这里要做的事情是什么呢

04:38.520 --> 04:40.820
这边的话 我给个eve判断

04:41.320 --> 04:43.640
eve 1.data

04:44.400 --> 04:46.960
全等于一个什么呢 全等于一个git

04:48.500 --> 04:52.340
那说明什么呢 说明要把这个数据返回给客户端

04:53.620 --> 04:54.380
说明

04:55.360 --> 05:00.160
说明要将接收到的数据

05:00.720 --> 05:03.680
返回给客户端

05:04.200 --> 05:05.600
那我们这边怎么返回呢

05:05.840 --> 05:07.640
那这边呢 就是还是通过这个port

05:08.680 --> 05:09.120
port

05:09.380 --> 05:11.040
他有一个post

05:12.000 --> 05:13.520
post message

05:15.320 --> 05:17.640
看到没有 仍然是通过post message

05:17.880 --> 05:20.960
那你猜都猜得到一会在页面里面是不是会unmessage

05:21.480 --> 05:23.160
对不对 监听message事件

05:23.580 --> 05:25.020
好 把什么呢 把这个data

05:26.180 --> 05:27.620
返回去 data就是这里

05:27.880 --> 05:30.020
对不对 否则进 else

05:30.780 --> 05:34.380
进 else的话 这边就直接把这个接收到的数据

05:35.140 --> 05:36.940
接收到数据就是eve.data

05:37.700 --> 05:39.240
给谁呢 给data

05:40.020 --> 05:42.820
看到没有 这边做了一个eve else判断

05:43.080 --> 05:44.620
那我们这边我们来看页面1

05:44.880 --> 05:48.200
页面1的话 我们这边是不是post message

05:48.460 --> 05:49.740
发送的是这么一段数据

05:50.200 --> 05:53.520
那这么一段数据它是进eve 还是进 else

05:53.780 --> 05:55.320
很明显是进 else

05:55.580 --> 06:01.220
对不对 进 else 把你这边输入的这个数据 给谁呢 给这个data

06:01.980 --> 06:02.480
ok

06:02.740 --> 06:06.080
好 然后接下来在这个index2

06:07.360 --> 06:08.380
index2

06:08.640 --> 06:11.200
好 这边的话我们就可以来获取

06:12.740 --> 06:13.500
好 我这边呢

06:14.260 --> 06:15.800
给了一个part

06:16.580 --> 06:18.100
好 这边的话可以获取

06:20.160 --> 06:22.920
我这边的话或者我就直接通过轮寻的方式

06:23.280 --> 06:25.480
把这儿删了 不要这个part了

06:25.840 --> 06:27.640
我直接通过轮寻的方式

06:29.000 --> 06:33.200
好 我这边 这边让我首先还是Const的一个walker

06:33.440 --> 06:34.800
这边在script里面

06:36.080 --> 06:37.000
script里面

06:37.360 --> 06:40.560
Const的一个walker

06:40.880 --> 06:45.800
等于一个new shared walker

06:46.440 --> 06:48.240
好 把这个walker传进去

06:49.680 --> 06:53.520
ok 好 然后接下来的话下一步 下一步的话这边walker

06:54.560 --> 06:55.320
点part

06:56.840 --> 07:01.080
点part 点start 启动 启动完了之后

07:01.320 --> 07:04.040
然后接下来的话我这边就set the interval

07:06.820 --> 07:08.340
好 然后每个一秒

07:08.860 --> 07:12.140
去这个执行这个函数 那这个函数里面我们要干嘛呢

07:12.380 --> 07:14.900
这个函数里面我们就是要往这个walker

07:15.340 --> 07:17.820
发送数据 发送数据仍然是什么

07:18.180 --> 07:21.860
仍然是通过这个part 点poster message

07:22.380 --> 07:24.340
看到没有 和这边是一样的

07:24.700 --> 07:27.500
这边的话我们是不是也是在向walker发送数据

07:27.740 --> 07:28.860
只问我们发送的是什么

07:29.100 --> 07:30.460
发送的是不是这一块

07:30.740 --> 07:33.140
而这边 这边的话发送的是什么呢

07:33.140 --> 07:34.940
我们这边就发送git

07:36.060 --> 07:39.020
看到没有 好 那接下来的话再点walker这边

07:39.260 --> 07:42.860
walker这边就会针对接收到的数据是不是做不同的处理

07:43.100 --> 07:46.700
如果是git 他就把这个data是不是给你返回

07:46.900 --> 07:51.420
如果是接收到的不是git 是其他的数据 那就把这个数据存储在

07:51.660 --> 07:53.420
data里面 对不对

07:53.660 --> 07:57.860
ok 好 那接下来这边 这边如果返回数据 那在这边

07:58.620 --> 08:01.340
我们就可以干嘛呢 我们这边的话就可以walker

08:02.260 --> 08:03.660
点这个port

08:04.220 --> 08:08.260
然后接下来这边 添加一个什么呢 这边on message

08:09.780 --> 08:11.220
等于一个function

08:12.460 --> 08:13.220
接收

08:13.740 --> 08:15.340
就是监听这个message时间

08:15.540 --> 08:17.340
好 然后接下这边的话来拿

08:18.620 --> 08:20.420
来拿这个接收到的数据

08:20.660 --> 08:22.460
我们把这个数据我们把它打印出来就可以了

08:22.700 --> 08:24.260
console.log

08:25.980 --> 08:30.140
来自walker的数据

08:31.420 --> 08:35.020
好 那这个数据的话就是1.data

08:35.780 --> 08:38.260
ok 好 那我们这边让我们来看一下好不好使

08:38.860 --> 08:39.780
全部保存

08:40.220 --> 08:42.780
保存了之后 然后接下来我们来到这边

08:43.500 --> 08:46.260
好 这边还没有发消息 他是不是这边就一直在

08:47.540 --> 08:51.300
是不是就一直在来自walker的数据啊 为什么 我们来看一下为什么

08:52.060 --> 08:55.260
这边的话 因为他这边给了个git

08:55.620 --> 08:59.260
git 然后来到这边git git的话竟然进来

08:59.780 --> 09:01.820
进来的话 他这边的话

09:02.860 --> 09:04.740
是往里面 往这边post的

09:05.260 --> 09:07.380
对不对 让我们这边的话稍微做一下处理

09:08.460 --> 09:11.460
好 我们来到这边 我们这边做一个判断

09:12.460 --> 09:15.700
eave 1.data

09:17.180 --> 09:19.340
然后是不是才打印 对不对 保存

09:19.860 --> 09:24.100
好 然后接下来到这边来看 比如说这边输了 你好 发送

09:25.740 --> 09:29.180
这边是不是来了 对不对 来了 但是这边的话也是一直在打印

09:29.540 --> 09:32.300
为什么 因为你这边是不是现在这个data

09:33.140 --> 09:37.740
data里面是有数据的 对不对 有数据 然后接下来的话 你这边的话

09:38.740 --> 09:46.540
每个一秒 你要向walker发一个git 然后walker这边是不是就会进衣服 进衣服 然后接下来他就会一直把这个data

09:47.060 --> 09:52.020
所以发送给你 说这边怎么办呢 这边我们把这个data发送一次之后我们把它清空

09:53.460 --> 09:56.820
可不可以啊 清空了之后 然后下一次他是不是就不会清走衣服了

09:57.740 --> 10:01.780
对不对 好 那我们这边保存一下 保存之后 然后再来

10:02.700 --> 10:03.260
发送一个

10:03.860 --> 10:10.620
比如说 你好 发送 怎么来了 对不对 然后Hello

10:12.260 --> 10:12.540
发送

10:13.700 --> 10:18.060
可不可以啊 这边就是shared walker通过轮寻的方式

10:18.780 --> 10:29.020
来就是实现这个跨标签页的一个这个通信 好吧 基本上的话也不难 也不难 就是两个页面注册一个相同的walker

10:30.020 --> 10:38.580
对不对 无论是index还是index2 注册一个相同的这个walker 因为你这边的话是 你new的是一个shared walker

10:39.220 --> 10:44.700
它是一个可以共享的一个walker 所以说两个页面的话 其实是共享这一个walker

10:45.220 --> 10:49.740
所以说两个页面之间就可以实现什么呢 实现这个数据之间的这个交换

10:50.740 --> 10:58.620
明白吧 OK 好这个就是关于这个使用shared walker来实现挂这个跨标签页通信

10:59.020 --> 11:00.300
那这几个就先到这里

