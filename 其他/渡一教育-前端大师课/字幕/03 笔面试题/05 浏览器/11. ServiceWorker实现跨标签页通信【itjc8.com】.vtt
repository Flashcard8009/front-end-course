WEBVTT

00:00.880 --> 00:07.600
这节课的话 我们来看这个通过Service Walker来实现这个跨标签页的这个通信

00:08.880 --> 00:14.240
Service Walker的话 它是这个浏览器和服务器之间 你可以把它看作是一个代理服务器

00:14.720 --> 00:22.320
它最大的特点就是在页面中要注册 然后安装 安装成功之后它就是运行于浏览器的这个后台

00:22.920 --> 00:24.720
不受这个页面刷新的影响

00:25.200 --> 00:30.640
这Service Walker的话 最早的话是和那个PW 就是融入到这个PWA里面的

00:31.040 --> 00:40.080
啊 有一个这个啊 有一个这个微博应用开发方式叫做PWA里面的话就是使用到了这个Service Walker

00:40.480 --> 00:45.840
啊 当我们这边的话也是不展开讲啊 我们这边的就是看一下如何使用这个Service Walker

00:46.480 --> 00:47.360
来实现这个

00:48.320 --> 00:53.680
很跨标签页通信 好 那我这边的话已经创建好了页面1和页面2

00:54.160 --> 00:58.480
怎么样 好 那我们页面1的话我们就还是一样 这边的话写一个input

00:59.840 --> 01:02.960
text id给一个content

01:03.600 --> 01:06.400
好 然后接下来这里 这里的话给一个button

01:08.320 --> 01:10.400
button给一个这个btn

01:11.360 --> 01:17.660
然后加这边的话是发送 发送出去

01:18.540 --> 01:21.100
ok 好 然后接下来的话这边script

01:22.620 --> 01:25.980
好 首先第一步 第一步的话我们需要干嘛呢 我们需要注册

01:27.100 --> 01:30.060
注册这个service walker

01:33.870 --> 01:39.310
注册 怎么注册呢 你需要有这么一个service walker的这个文件 它是一个jess文件

01:39.710 --> 01:43.870
啊 那我们这边我们在这儿创建一个用sw.jess

01:45.870 --> 01:50.590
这个的话就是我们这个service walker的这个文件啊 当然这里面写什么我们先不管啊

01:50.750 --> 01:56.590
那我们在这里来进行一个注册 那这个service walker的话它是挂在这个level gator

01:57.550 --> 02:03.630
就我们windows会有个level gator这个属性 对不对 它也是个对象挂在这上面的 让你这边点

02:04.590 --> 02:10.510
service walker看到没有 然后既然它有一个方法叫做这个register

02:11.870 --> 02:15.550
有这么一个方法啊 这个方法让我注册什么呢 我注册

02:16.830 --> 02:20.510
sw.jess啊 就是我们这个jess文件

02:21.150 --> 02:26.430
好 然后接下来 它是会返回一个promise

02:28.190 --> 02:36.030
啊 所以说我们这边呢 就可以点任对吧 任方法 任方法里面的话 我们也不需要做什么 我们这边就简单说一下

02:36.990 --> 02:40.590
log一下这个service walker注册成功

02:42.110 --> 02:43.310
啊 这边是一个支付串

02:45.680 --> 02:48.400
service walker

02:49.360 --> 02:59.920
注册成功 注册成功 okay 好 下一步 下一步的话 我们这边给我们的这个btn

03:01.520 --> 03:04.640
绑定一个什么呢 绑定一个点击事件 click

03:05.440 --> 03:12.400
等于一个function 当它点击的时候要干嘛呢 好 那接下来我们这边就是level gator

03:12.800 --> 03:14.480
点这个service walker

03:15.200 --> 03:22.880
点这个controller 控制器 然后接下来也是使用poster message 其实和刚才那个是不很像

03:23.680 --> 03:31.920
对 啊poster message 然后接下来的话 这边我们要发送 发送一个这个信息过去 对吧 我们这边就发送一个这个对象

03:32.320 --> 03:39.840
就一样的嘛 这边value value 然后接下来这边那就是content.value 啊 但你这边让你获取一下

03:40.560 --> 03:42.080
啊 这边

03:43.760 --> 03:45.040
呃const

03:46.880 --> 03:54.240
const一个content 等于一个document.query selector

03:55.200 --> 04:00.560
啊 这边请好content 把它获取一下啊 这边那是不是就是content value

04:01.280 --> 04:07.040
对不对啊 获取 就是发送这么一个数据过去 好 那这个数据就会被发送到哪里去呢

04:07.440 --> 04:15.200
它这边的话 就会发送到我们的这个service walker这个sw.js 我们刚才注册的是不是 是这个js文件

04:15.680 --> 04:19.040
对不对 消息就会到达这 啊 说说我们这边的话

04:19.840 --> 04:20.320
消息

04:26.050 --> 04:29.250
消息就会到达

04:30.770 --> 04:31.490
到达

04:33.730 --> 04:39.570
到达这里啊 我们注册的sw.js 好 然后接下来的话 这边self

04:41.680 --> 04:47.760
self 然后再给它绑定一个事件 and event listener

04:48.320 --> 04:52.080
绑定一个什么事件呢 绑定一个message事件

04:52.640 --> 04:59.840
看到没有啊 我们这边呢 是poster message 那这边呢 就jnt message事件啊 然后接下来的话 这边

05:01.600 --> 05:02.640
event

05:03.520 --> 05:04.400
啊 这边

05:04.960 --> 05:08.160
这写了一个一步函数啊 然后加这边event

05:08.640 --> 05:10.320
event 然后接下来的话下一步

05:10.800 --> 05:17.280
这里的话 首先获取到所有注册了这个 注册了这个service walker的客户端

05:18.320 --> 05:18.800
首先

05:20.880 --> 05:24.480
获取到所有注册了

05:25.200 --> 05:30.000
service walker的客户端

05:30.560 --> 05:34.800
先把这个获取到 怎么获取呢 啊 这边呢 就是可以通过这个self

05:36.400 --> 05:38.800
self 它有一个什么呢 有一个这个client

05:40.480 --> 05:43.040
client 然后它有一个什么呢 有一个match all

05:44.800 --> 05:51.680
match all 哎 有这么一个方法 这个方法的话就可以获取到所有注册了service walker的客户端

05:51.920 --> 05:58.400
但它是个一步的方法 所以我们这边的话需要等待一下啊 所以为什么这里的话写的是async一步方法

05:58.880 --> 06:03.200
对吧 好 然后接下来的话 这边const一个client

06:04.000 --> 06:05.040
把这个所有的

06:06.000 --> 06:11.200
注册了service walker的 拿到 拿到之后 然后接下来的话进行一个便利

06:12.400 --> 06:16.880
它拿到的是个数组啊 数组的话 让我们这边可以调什么呢 调for each

06:18.880 --> 06:20.880
for each 然后接下来的话 这边

06:22.720 --> 06:23.200
方形

06:24.320 --> 06:26.400
好 这边是不拿到每一个客户端

06:27.200 --> 06:33.360
对不对 拿到每一个客户端 然后接下来的话 这边调每一个客户端 调什么呢 调这个post

06:34.240 --> 06:34.720
message

06:36.000 --> 06:39.120
调message方法 好 把什么呢 把这个event

06:40.560 --> 06:42.480
event点data

06:42.960 --> 06:49.520
把它传递过去啊 当我们这边event点data是一个是不是对象 你这边就可以继续点什么

06:50.160 --> 06:50.560
value

06:51.600 --> 06:58.080
对不对 把它传递过去 OK 好 然后接下来这边来到我们的index2这个页面

06:59.040 --> 07:05.760
好 这个页面 这个页面呢 我们这边script那首先的话是一样的 首先要注册

07:06.320 --> 07:08.080
说这边要把这个拿过来

07:09.040 --> 07:09.360
注册

07:10.800 --> 07:16.800
对吧 先把sorry walker注册了 注册了之后 然后接下来的话 这边levegator

07:17.440 --> 07:20.960
点这个sorry walker 他就干嘛呢 这边

07:21.840 --> 07:22.800
on message

07:23.520 --> 07:30.000
gint message实际上 他gint message实际上是谁发过来的 注意和刚才的那个bordercast不一样

07:30.640 --> 07:38.160
bordercast的话是不是就直接是由这个页面发给这个页面的 对不对 但是这里不是 这里的话是这个页面

07:38.720 --> 07:42.800
这个页面他发消息发给谁 发给发给他

07:43.600 --> 07:45.440
这个的话相当于是我们的一个中转站

07:46.400 --> 07:49.120
明白吧 相当于是个中转站 他接收了

07:49.920 --> 07:54.080
消息 接收了消息之后 然后接下来再由他发送给他

07:54.800 --> 08:00.080
明白吧 说他这边的话 监听message实际上 他的message实际上是由这个

08:00.800 --> 08:04.080
啊 这个sw.js由他来出发的

08:05.440 --> 08:07.440
好 然后接下来我们这边的话function

08:09.700 --> 08:11.060
好 这边的话 解构

08:11.780 --> 08:15.540
拿到data 拿到data之后 然后将我们这边让我们来打印一下

08:16.340 --> 08:16.660
log

08:17.700 --> 08:18.660
log data

08:19.220 --> 08:26.660
ok 啊 整个这个就写完了 我们这边保存一下 好 保存了之后 这边来看一下

08:27.620 --> 08:31.380
啊 把这个关了 啊 这边两边的话 是不是都是注册成功

08:32.420 --> 08:37.300
对不对 注册成功 好 然后先让我这边发送数据 你好发送

08:37.940 --> 08:43.380
看到没有 这边是不是拿到了 对不对啊 然后接下这边

08:44.900 --> 08:45.300
发送

08:46.180 --> 08:52.260
是不是拿到了 对不对啊 这边就拿到了 ok 这个的话 就是通过service walker

08:52.820 --> 08:58.660
来进行跨标签页同性 好吧 好 这些告就先到这里啊 再见

