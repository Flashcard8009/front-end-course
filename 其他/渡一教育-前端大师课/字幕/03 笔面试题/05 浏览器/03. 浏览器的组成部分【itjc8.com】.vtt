WEBVTT

00:01.140 --> 00:03.440
大家好 我是谢老师

00:03.700 --> 00:08.300
这节课的话我们来聊一聊关于浏览器的这个组成部分

00:08.820 --> 00:11.900
这节课的话非常轻松 也非常简短

00:12.140 --> 00:13.420
我们简单来聊一下

00:13.680 --> 00:15.980
浏览器它是由哪些部分

00:16.240 --> 00:16.760
组成的

00:17.020 --> 00:20.340
那我这边也是写了一个文档 我们这边来看一下

00:20.860 --> 00:21.620
首先第一个

00:21.880 --> 00:23.420
什么是浏览器

00:23.920 --> 00:26.480
那关于什么是浏览器这个的话就不需要多说了

00:26.740 --> 00:29.040
这个基本上大家每天都在用的

00:29.300 --> 00:30.580
就算你之前不怎么用

00:31.040 --> 00:32.120
进入前端之后

00:32.380 --> 00:33.400
你是不是也得用

00:34.680 --> 00:36.720
那这个浏览器的话它主要是干嘛的呢

00:36.980 --> 00:38.000
主要就是用来

00:38.780 --> 00:41.080
显示从服务器检索的

00:41.340 --> 00:42.100
是Vable

00:42.360 --> 00:42.860
资源

00:43.640 --> 00:45.940
当然这里所说的Vable资源它不是

00:46.200 --> 00:47.980
说就指涉网页

00:48.500 --> 00:50.300
网页是Vable资源的一种

00:50.560 --> 00:53.100
它还可以是什么呢 还可以是比如说PDF文档

00:53.620 --> 00:54.120
图片

00:54.380 --> 00:55.160
音频视频

00:55.660 --> 00:57.460
这些的话都是Vable资源

00:57.720 --> 01:00.280
那这些资源的话都可以通过浏览器

01:00.780 --> 01:02.320
来进行一个显示

01:03.600 --> 01:07.700
然后浏览器的话包含结构良好的组件

01:08.460 --> 01:10.780
就是浏览器的内部它是由

01:11.280 --> 01:13.580
就是一个一个的组件组成的

01:13.840 --> 01:16.400
这些组件执行一系列的任务

01:16.660 --> 01:18.460
来确保我们的这个浏览器

01:18.720 --> 01:21.020
能够显示Vable资源

01:21.780 --> 01:24.080
那这些组件究竟有哪些组件呢

01:24.340 --> 01:25.620
让我们这边来看一下

01:26.140 --> 01:28.440
这里的话就有一个关于浏览器

01:28.940 --> 01:30.480
组件的一个这个图

01:30.780 --> 01:32.060
或者叫做架构图

01:32.320 --> 01:35.400
它整体上来讲的话就是由这么六个部分组成

01:35.660 --> 01:36.420
首先这个

01:37.180 --> 01:38.980
Data persistence

01:39.240 --> 01:41.540
这个是做数据持久化的

01:41.800 --> 01:43.280
就是

01:43.540 --> 01:45.640
什么呢 就是数据存储的

01:45.900 --> 01:49.220
我这边写的data storage 一个意思做数据存储

01:49.480 --> 01:52.040
好 然后接下来这边的话User interface

01:52.300 --> 01:54.080
这个的话就是用户界面

01:54.600 --> 01:56.900
好 然后接下来browser engine

01:57.160 --> 01:58.700
浏览器引擎

01:59.540 --> 02:00.700
Render engine

02:00.960 --> 02:02.740
我们的渲染引擎

02:03.000 --> 02:04.540
然后little walking

02:05.040 --> 02:07.360
这是网络 处理网络请求的

02:07.620 --> 02:09.600
然后接下来这边Java script

02:09.860 --> 02:10.940
Interpreter

02:11.200 --> 02:13.240
这个是JS解释器

02:13.500 --> 02:16.060
主要是用于解释这个JS代码

02:16.320 --> 02:18.360
然后最后一个是这个UI back-end

02:18.620 --> 02:20.660
就是用户界面的这个后端

02:20.920 --> 02:24.500
好 你看一共的话就是这么六个部分

02:24.960 --> 02:29.100
不止 主要的主件有这么

02:29.360 --> 02:30.640
七个是吧 七个

02:30.900 --> 02:35.240
主要的主件有这么七个部分 但不是说一个浏览器就这么七个部分

02:35.760 --> 02:37.300
不是 他还有一些其他的

02:37.560 --> 02:39.600
其他的话就是不同的浏览器

02:39.860 --> 02:40.880
他可能就不一样

02:41.140 --> 02:43.440
但是基本上就是所有的浏览器

02:43.700 --> 02:44.980
这七个部分

02:45.240 --> 02:46.260
是肯定有的

02:46.780 --> 02:47.540
明白吧

02:48.560 --> 02:51.120
好 那接下来的话我们就每一个部分

02:51.380 --> 02:53.680
我们来进行一个简单的来看一下

02:54.400 --> 02:55.420
那首先第一个

02:55.680 --> 02:57.980
第一个是什么呢 第一个是这个用户界面

02:58.240 --> 02:59.780
User interface

03:00.540 --> 03:02.080
对吧 他用于干嘛呢

03:02.340 --> 03:03.620
他用于呈现

03:03.880 --> 03:05.920
浏览器窗口的部件

03:07.200 --> 03:09.500
什么浏览器窗口部件 你看我这边有张图

03:10.260 --> 03:10.780
看到没有

03:11.040 --> 03:13.340
这个图里面 比如这个是我们的一个浏览器

03:13.600 --> 03:14.380
谷歌浏览器

03:14.620 --> 03:15.900
那里面就有什么东西呢

03:17.180 --> 03:18.980
里面就有地址栏

03:19.240 --> 03:21.020
然后接下来前进后退按钮

03:21.280 --> 03:23.580
然后输签 顶部菜单之类的

03:23.680 --> 03:25.220
就像这 看到没有 这边

03:25.480 --> 03:26.240
比如这个

03:26.500 --> 03:27.520
然后还有就是

03:27.780 --> 03:28.540
刷新

03:28.800 --> 03:30.580
然后前进后退

03:30.840 --> 03:31.620
输签

03:31.880 --> 03:32.640
这些

03:32.900 --> 03:36.980
部件 这个的话就是属于这个用户界面 就是User interface

03:37.240 --> 03:38.540
组件来负责的

03:39.800 --> 03:40.320
好 下一个

03:40.840 --> 03:43.140
下一个的话是浏览器引擎

03:43.660 --> 03:45.700
浏览器引擎border engine

03:45.960 --> 03:48.000
他是什么呢 他是我们的UI

03:48.260 --> 03:50.820
和渲染引擎之间的桥梁

03:51.580 --> 03:52.620
来我们来看一下这里

03:53.600 --> 03:54.100
你看

03:54.360 --> 03:56.400
我们的这个browser engine是不是在这

03:56.920 --> 03:59.480
它的上面是什么 它的上面是User interface

03:59.740 --> 04:01.780
就是什么 就是这个用户界面

04:02.040 --> 04:03.840
好 接下来它的下面是什么

04:04.100 --> 04:05.880
它的下面是不是这个

04:06.140 --> 04:07.420
Rendering engine

04:07.680 --> 04:08.440
渲染引擎

04:08.700 --> 04:11.260
那它的话就是在这两者之间

04:11.520 --> 04:12.280
做一个

04:12.540 --> 04:14.840
什么作用呢 起一个桥梁作用

04:15.600 --> 04:18.180
用户的话是在什么呢 是在用户界面

04:18.440 --> 04:19.440
是不是输入信息

04:19.700 --> 04:22.520
输入了信息之后 然后接下来的话 他就会把这个信息

04:23.340 --> 04:27.180
这边这个browser engine 就会把这个信息传递给

04:27.440 --> 04:28.720
Rendering engine

04:28.980 --> 04:31.280
这个传递给渲染引擎

04:32.040 --> 04:32.560
看到没有

04:33.060 --> 04:34.860
这就是浏览器引擎

04:35.120 --> 04:37.680
接收来自UI的输入

04:37.940 --> 04:40.240
UI就是指的是那个用户界面

04:40.500 --> 04:43.300
然后通过操作什么呢 操作渲染引擎

04:43.560 --> 04:47.140
将网页或者其他资源显示在浏览器中

04:48.180 --> 04:49.460
这是浏览器引擎

04:49.720 --> 04:52.520
当我们这边的话只是做了一句话的一个概括

04:52.660 --> 04:55.380
它里面做的事情肯定是相当多的

04:55.900 --> 04:59.220
它究竟是怎么操作的 怎么和UI程

04:59.480 --> 05:02.420
进行交流的 然后又怎么和渲染引擎

05:02.680 --> 05:04.100
这一层进行交流的

05:04.360 --> 05:05.700
它肯定是做了很多工作的

05:05.960 --> 05:08.100
对吧 但这里的话我们只需要了解

05:08.360 --> 05:09.660
就是浏览器引擎

05:09.920 --> 05:11.260
它主要的工作

05:11.520 --> 05:12.280
是什么

05:12.800 --> 05:13.320
就可以了

05:14.840 --> 05:15.360
而下一个

05:16.120 --> 05:18.680
下一个的话就是渲染引擎

05:18.940 --> 05:19.960
渲染引擎干嘛

05:20.180 --> 05:23.160
渲染引擎负责在浏览器窗口上

05:23.420 --> 05:25.540
显示请求的这个内容

05:26.580 --> 05:29.380
这里其实应该是负责渲染内容

05:29.640 --> 05:30.660
渲染内容

05:31.420 --> 05:33.740
就是我们用户比如请求一个HTML页面

05:34.000 --> 05:36.540
然后有什么呢 有这个渲染引擎

05:36.800 --> 05:39.880
由它来解析HTML和CSS

05:40.640 --> 05:42.700
这个我们在我们的第一节课

05:43.220 --> 05:44.620
我们其实就已经说过了

05:45.120 --> 05:48.340
对不对 整个这个渲染引擎它的一个渲染流程

05:48.500 --> 05:50.300
当我们一会的话再把它过一遍

05:50.560 --> 05:52.640
再把它过一遍 就当做一个复习

05:53.420 --> 05:55.560
好 然后现代的这个网络浏览器

05:55.820 --> 05:58.800
常见的渲染引擎 这边你大致看一下

05:59.060 --> 05:59.800
比如这边

06:00.060 --> 06:00.840
Firefox

06:01.600 --> 06:03.820
Firefox的话 它的渲染引擎是这个

06:04.080 --> 06:04.680
Curcle

06:05.960 --> 06:09.040
然后接下这个Safari Safari的话是这个Webkit

06:09.800 --> 06:12.100
然后谷歌 谷歌和这个Oprah

06:12.360 --> 06:15.680
Oprah是15版本之后 用的是这个Blink

06:16.400 --> 06:17.460
然后这个IE

06:17.720 --> 06:19.460
IE的话用的是这个Tradent

06:19.980 --> 06:21.400
就不同的这个

06:21.660 --> 06:22.300
浏览器

06:22.540 --> 06:24.080
它的这个渲染引擎

06:24.340 --> 06:25.100
它是不一样的

06:25.360 --> 06:26.140
但是

06:26.900 --> 06:29.460
即使它的这个渲染引擎不一样

06:29.960 --> 06:32.780
就是整体来讲的话 你每一个浏览器肯定

06:33.040 --> 06:34.580
是有这个渲染引擎的

06:34.840 --> 06:36.380
对不对 这一点是可以保证的

06:36.620 --> 06:37.660
你一定会有这个东西

06:37.920 --> 06:42.260
不是说你是一个其他的浏览器 你压根就没有这个东西 那不可能的

06:42.520 --> 06:45.580
这几个部件 任何浏览器都有

06:46.140 --> 06:46.660
没有没有

06:48.700 --> 06:51.020
好 来我们来看一下这个关于这个渲染引擎

06:51.260 --> 06:52.300
做什么事情

06:52.540 --> 06:55.100
那渲染引擎的话 这边我们来看一下

06:55.360 --> 06:58.260
浏览器再从网络接收到数据

06:58.520 --> 07:01.960
后需要经过一系列称为关键渲染路径的

07:02.220 --> 07:03.300
过程和技术

07:03.820 --> 07:05.600
这包括什么呢 包括就是

07:05.860 --> 07:07.380
汇制DOM数

07:07.640 --> 07:09.440
汇制这个样式规则数

07:09.700 --> 07:12.500
然后接下来两者结合起来形成渲染数

07:13.020 --> 07:15.340
形成渲染数之后 然后接下来再布局

07:15.540 --> 07:17.340
布局完了之后再进行汇制

07:18.100 --> 07:20.160
这个是不是就是我们第一节课讲的内容

07:20.420 --> 07:21.940
我们第一节课讲那个

07:22.200 --> 07:23.640
渲染流程的时候

07:23.900 --> 07:25.280
这就是讲的这一系列

07:25.780 --> 07:27.840
对不对 那我们这边简单来过一下

07:28.600 --> 07:31.420
这边首先从数据到这个DOM

07:31.680 --> 07:34.240
这文字你都不用看 你直接看这个图

07:35.260 --> 07:36.040
直接看这个图

07:36.540 --> 07:39.360
首先的话是什么 首先是不是这个字节数据

07:39.880 --> 07:41.660
对不对 这种二进制的字节数据

07:41.920 --> 07:42.940
然后转成什么

07:43.200 --> 07:45.240
转成一个是不是很长的制服串

07:46.260 --> 07:48.780
对不对 转成一个很长的制服串之后

07:48.780 --> 07:50.660
然后接下来再进行标记化

07:51.180 --> 07:53.820
标记化的话就把这个每一个标签

07:53.820 --> 07:56.300
有这个StartTargetHTML

07:56.560 --> 07:57.840
然后在这边Hit

07:58.100 --> 08:00.140
把每一个标签把它提出来

08:01.420 --> 08:03.820
提出来之后形成什么呢 形成DOM节列

08:04.580 --> 08:06.980
对不对 形成一个一个的DOM节列

08:07.220 --> 08:08.340
然后最后构建什么

08:08.580 --> 08:10.500
最后构建这个DOM数

08:11.260 --> 08:13.700
整个这个构建DOM的流程

08:14.220 --> 08:14.980
是不是这样子的

08:15.540 --> 08:16.060
对不对

08:16.580 --> 08:21.180
好 然后接下来下面的话是这个CSS数据到CSSOM

08:21.460 --> 08:25.380
那基本上也是差不多的 最终构建出来的话也是一棵树

08:26.140 --> 08:28.940
也是一棵树 但这个的话我们不称之为DOM数

08:28.940 --> 08:31.940
我们称之为是CSSOM数

08:32.300 --> 08:33.740
就是样式规则数

08:34.180 --> 08:36.100
它仍然是还是有节点

08:36.540 --> 08:39.820
对不对 因为你样式是建立在某一个节点上面

08:40.380 --> 08:40.900
对不对

08:41.260 --> 08:43.300
那这边就是比较这个样式

08:43.300 --> 08:44.740
它是属于这个节点的

08:45.140 --> 08:47.460
然后加这个节点它有这个样式

08:47.820 --> 08:49.940
也是有相互的依赖关系

08:50.220 --> 08:53.060
就是树里面有这个关系

08:53.380 --> 08:54.500
对吧 有这个上限

08:54.660 --> 08:55.740
就是负质关系

08:57.500 --> 08:59.620
然后两棵树形成了之后 然后干吗

09:00.380 --> 09:01.900
两棵树形成了之后

09:02.260 --> 09:05.860
这边DOM数和CSSOM数形成之后

09:06.020 --> 09:08.140
然后接下来进行一个合并

09:08.580 --> 09:11.140
变成什么 这变成RenderTree

09:12.220 --> 09:13.700
什么是渲染树

09:14.420 --> 09:16.820
对不对 形成一个渲染树

09:17.780 --> 09:19.540
然后渲染树出来了之后

09:19.540 --> 09:20.420
然后干吗

09:20.660 --> 09:23.140
然后接下来的话进行一个布局

09:23.540 --> 09:25.700
就是确定你每一个节点

09:25.940 --> 09:28.420
就每一个盒子 它的一个合模型

09:29.180 --> 09:31.380
就比较每一个盒子比较BODY

09:31.620 --> 09:33.420
BODY的话它的一个合模型

09:34.180 --> 09:35.580
它的内容宽高

09:35.700 --> 09:37.900
它的Margin把这些确定好

09:38.260 --> 09:40.420
确定好之后 然后接下来最后一步干吗

09:40.580 --> 09:42.620
最后一步进行一个会子

09:43.340 --> 09:46.380
对不对 一个向述点 一个向述点的进行会子

09:46.620 --> 09:48.140
这边其实布局完了

09:48.300 --> 09:49.460
我们第一节可讲了

09:49.460 --> 09:51.100
布局完了其实还有一个什么

09:51.540 --> 09:52.660
是不是就是重绘

09:52.940 --> 09:54.900
对不对 确定每一个向述点

09:55.140 --> 09:56.140
它的一个信息

09:56.340 --> 09:58.980
确定完了之后 然后接下来才是会子

10:00.860 --> 10:03.100
会子的话就是一针一针的

10:03.380 --> 10:04.660
把它画出来

10:05.500 --> 10:07.180
好 整体的流程图就是什么

10:07.180 --> 10:08.700
整体的流程图就是这个样子的

10:09.420 --> 10:10.580
我们来看一下 这边

10:11.460 --> 10:12.700
这边是HTML

10:12.700 --> 10:14.660
HTML结果解析

10:14.660 --> 10:18.060
解析最后的话形成什么呢 形成这个动物数

10:18.340 --> 10:19.980
同时CSS样式

10:20.260 --> 10:22.300
通过解析形成什么呢

10:22.300 --> 10:25.180
形成CSSOEM

10:25.180 --> 10:26.340
样式规则数

10:26.340 --> 10:28.620
然后两者进行一个attachment

10:28.620 --> 10:29.380
就是合并

10:29.860 --> 10:30.900
合并变成什么

10:31.180 --> 10:33.300
合并然后变成ZenderTree

10:33.860 --> 10:35.460
对不对 ZenderTree完了之后

10:35.460 --> 10:36.100
然后干吗

10:36.100 --> 10:37.380
那是不是进行一个布局

10:37.380 --> 10:38.500
Nailed布局

10:38.700 --> 10:39.500
布局完了之后

10:40.220 --> 10:41.300
然后接下来这边

10:42.060 --> 10:42.580
Painting

10:43.100 --> 10:44.100
进行会子

10:44.100 --> 10:46.140
会子完了之后 最后就是Display

10:46.420 --> 10:46.940
显示

10:47.700 --> 10:49.500
这就是我们渲染引擎

10:49.500 --> 10:50.500
整个渲染引擎

10:50.780 --> 10:51.780
做的工作

10:52.300 --> 10:54.540
相当于把第一节课的内容

10:54.540 --> 10:55.620
又复习了一遍

10:57.660 --> 10:59.740
然后下一个是网络

10:59.980 --> 11:01.940
网络的话 它主要就是干吗的呢

11:01.940 --> 11:04.580
它主要就是处理各种网络通信的

11:05.100 --> 11:06.540
我们知道我们这个浏览器

11:06.540 --> 11:07.900
它是要发送请求

11:08.100 --> 11:08.980
对不对 发送请求

11:08.980 --> 11:10.180
然后拿数据回来

11:10.420 --> 11:11.340
拿内容回来

11:11.340 --> 11:12.900
那哪怕你的页面已经

11:13.180 --> 11:14.060
就是显示了

11:14.060 --> 11:16.180
那我背后是不是还是可以发送数据

11:16.620 --> 11:18.500
比如说什么 比如说阿甲克斯请求

11:19.060 --> 11:20.660
对不对 我页面已经呈现了

11:20.660 --> 11:21.260
呈现了

11:21.260 --> 11:22.700
然后这样我把一个东西

11:23.140 --> 11:24.620
添加到购物车里面

11:24.620 --> 11:25.780
我点一下加号

11:26.180 --> 11:27.940
它就添加到购物车里面了

11:27.940 --> 11:29.100
那它背后它要干吗

11:29.100 --> 11:30.900
它是要和服务器进行通信

11:31.420 --> 11:31.900
对不对

11:32.180 --> 11:34.740
说这边那就涉及到了网络模块

11:36.460 --> 11:37.780
好 然后接下来下一个

11:37.820 --> 11:38.740
下一个的话是这个

11:38.740 --> 11:40.900
JavaScript Interpreter

11:41.260 --> 11:41.860
这个是什么

11:41.860 --> 11:43.540
这个是JS解释器

11:44.220 --> 11:45.140
这个模块

11:45.340 --> 11:47.460
那这个模块顾名思义就是拿来干吗的

11:48.380 --> 11:49.140
拿来干吗的

11:49.420 --> 11:51.820
是不是用来执行JS脚本的

11:52.300 --> 11:52.860
对不对

11:52.860 --> 11:54.300
你要注意就是这个

11:54.460 --> 11:57.940
JS解释器在执行这个脚本的时候

11:57.940 --> 11:58.940
它会干吗

11:58.940 --> 12:02.020
它会让多母数的购物键停止

12:02.940 --> 12:04.580
这个我们在前面是不是已经说过了

12:05.220 --> 12:05.780
对不对

12:05.780 --> 12:07.180
这里就不多说了

12:08.060 --> 12:10.220
然后不同的这个浏览器

12:10.220 --> 12:12.660
它的JS引擎是不一样的

12:13.500 --> 12:15.020
比如说我们的这个谷歌

12:15.020 --> 12:16.500
谷歌的话它就是V8

12:16.900 --> 12:18.380
V8引擎非常出名

12:18.740 --> 12:19.980
我们的露的JS

12:19.980 --> 12:22.180
就是建立在这个V8之上的

12:22.740 --> 12:23.500
然后Moderna

12:23.500 --> 12:24.780
Moderna的话是这个

12:25.060 --> 12:27.420
Spider Monkey蜘蛛猴子

12:27.620 --> 12:30.180
以前的话是松鼠鱼

12:30.340 --> 12:32.700
这个这一只的话叫做这个蜘蛛猴子

12:33.500 --> 12:36.340
喜欢把两个动物拼接在一起

12:36.340 --> 12:36.780
是吧

12:37.260 --> 12:38.500
然后大家这个Edge

12:38.500 --> 12:39.980
Edge的话是这个

12:40.340 --> 12:41.420
这应该怎么叫

12:41.620 --> 12:42.300
Chakra

12:42.580 --> 12:44.020
好像是Chakra是吧

12:44.420 --> 12:45.660
然后加Sapri

12:45.660 --> 12:47.140
Sapri的话用的是这个

12:47.460 --> 12:48.140
Nitro

12:48.580 --> 12:49.700
Nitro VivoKit

12:50.180 --> 12:50.980
用了这个

12:51.220 --> 12:52.580
就不同的这个

12:52.780 --> 12:53.980
不同的这个浏览器

12:54.260 --> 12:56.660
它的这个JS解释器是不一样的

12:57.020 --> 12:58.300
当我们平时的话

12:58.300 --> 12:59.660
只需要研究什么就可以了

12:59.980 --> 13:01.020
所以V8就可以了

13:01.460 --> 13:02.820
对因为V8最出名

13:03.300 --> 13:04.380
V8最出名

13:05.260 --> 13:08.060
这是关于JS解释器部分

13:08.660 --> 13:09.940
好然后接下来下一个

13:10.220 --> 13:13.420
下一个的话就是用户界面后端

13:14.300 --> 13:15.180
那这个是什么呢

13:15.180 --> 13:16.180
我们来看这个图

13:17.740 --> 13:18.820
来看上面这个图

13:19.100 --> 13:20.860
你看它是不是处于在这个位置

13:21.580 --> 13:22.060
对不对

13:22.300 --> 13:23.700
然后接下来它是直接干嘛

13:23.700 --> 13:26.740
它是不是直接和User Interface打交道

13:26.900 --> 13:28.220
对不对你看这边有个箭头

13:28.460 --> 13:29.380
直接指过来

13:29.500 --> 13:32.420
它直接和User Interface打交道

13:32.620 --> 13:33.860
那这个是什么意思呢

13:34.380 --> 13:35.660
好这个User

13:37.180 --> 13:38.660
这个User

13:38.660 --> 13:40.540
这个UI Backend

13:40.780 --> 13:42.580
用户界面后端

13:42.820 --> 13:45.900
它是用于位置基本窗口小部件

13:46.140 --> 13:49.220
比如说下拉列表文本框按钮

13:49.980 --> 13:51.540
就比如说我们的一个网页

13:51.780 --> 13:52.540
网页里面是不是

13:53.060 --> 13:54.620
会有这个单选框对不对

13:54.620 --> 13:55.300
多选框

13:55.300 --> 13:56.660
然后下拉列表这些

13:57.420 --> 13:58.460
会有这些部件

13:58.940 --> 14:02.540
好这些部件的话实际上是谁给你提供的呢

14:02.740 --> 14:05.560
实际上是操作系统给你提供的

14:06.320 --> 14:07.100
你注意哦

14:07.360 --> 14:10.680
就是你的网页啊比如你的页面打开比如你输入一个这个

14:10.940 --> 14:11.700
radio

14:12.220 --> 14:13.500
输入一个单选框

14:13.760 --> 14:15.800
让你的那个网页里面是不是就有个单选框

14:16.060 --> 14:17.600
你输入一个checkbox

14:17.860 --> 14:19.140
input checkbox

14:19.400 --> 14:20.420
是不是就有个多选框

14:20.680 --> 14:21.180
对不对

14:21.440 --> 14:23.480
你以为是浏览器给你汇制出来的

14:23.740 --> 14:24.240
不是

14:24.500 --> 14:26.560
是操作系统给你提供的

14:27.580 --> 14:28.340
明白吧

14:28.600 --> 14:29.880
操作系统给你提供的

14:30.140 --> 14:31.160
说这一层

14:31.380 --> 14:33.420
就这个用户界面后端这一层

14:33.680 --> 14:35.920
他就干完了他其实也是

14:36.180 --> 14:38.280
起到一个中间商的作用

14:38.540 --> 14:40.580
他去就向下他去调用什么呢

14:40.840 --> 14:42.380
调用操作系统

14:42.640 --> 14:43.660
的这些接口

14:43.920 --> 14:45.180
来汇制这些

14:45.440 --> 14:49.540
汇制这些小部件什么下拉列表呀文本框呀按钮

14:49.800 --> 14:52.100
然后接下操作系统是不会给你提供一个接口

14:52.360 --> 14:54.400
然后接下他把这个接口给谁呢

14:54.660 --> 14:55.680
就向上

14:56.720 --> 14:58.760
公开向上公开然后提供给谁

14:59.020 --> 15:00.300
是不是提供给这个

15:00.500 --> 15:01.800
user interface

15:02.560 --> 15:03.320
对不对

15:03.580 --> 15:07.680
说说这里你要知道他的话去干嘛他会去访问操作系统

15:07.940 --> 15:09.720
操作系统提供的一些接口

15:10.240 --> 15:11.520
一些汇制

15:11.780 --> 15:12.460
单选框

15:12.720 --> 15:16.880
汇制多选框啊汇制各种各样下拉列表啊这些小部件

15:17.140 --> 15:18.940
操作系统提供了这个接口的

15:19.200 --> 15:20.720
提供了某些方法

15:20.980 --> 15:22.260
那他的话就是去

15:22.520 --> 15:23.040
访问

15:23.300 --> 15:23.800
这些接口

15:24.060 --> 15:25.600
大家再进行封装

15:25.860 --> 15:27.380
封装完了之后然后提供给

15:27.640 --> 15:28.920
user interface

15:29.640 --> 15:30.360
没有没有

15:30.620 --> 15:32.700
这个的话就是用户界面户端

15:33.740 --> 15:36.300
好最后一个最后一个的话就是数据存储

15:36.800 --> 15:38.340
这是一个19成

15:38.860 --> 15:41.420
就是我们浏览器里面可以存储一些数据

15:41.680 --> 15:43.200
比如什么呢比如说Cookie啊

15:43.460 --> 15:45.000
local storage啊

15:45.260 --> 15:47.040
index的db啊这些

15:47.300 --> 15:48.580
这个我们是不是也说过了

15:49.340 --> 15:49.860
对不对

15:51.140 --> 15:54.220
哦不是不是这个还没说过这个是我们下一篇

15:54.480 --> 15:57.540
就是下一堂课下一堂课要说的

15:57.840 --> 15:58.800
啊这个就是

15:59.040 --> 16:00.300
呃离线存储

16:00.560 --> 16:04.920
就是local storage啊index的db啊这些这些都是离线存储的知识

16:05.180 --> 16:06.440
啊我们再下一堂课

16:06.700 --> 16:08.440
来讨论关于这个浏览器

16:08.700 --> 16:10.540
如何进行一个离线存储

16:11.060 --> 16:11.560
好吧

16:11.820 --> 16:13.880
啊说这些课的话其实内容不多

16:14.400 --> 16:15.920
对吧我们就简单的看了一下

16:16.180 --> 16:17.920
呃浏览器的组成部分

16:18.180 --> 16:20.280
啊说就是因为有些公司啊

16:20.540 --> 16:21.760
他可能他会问到你

16:22.020 --> 16:23.860
有没有了解过浏览器有

16:24.120 --> 16:24.880
哪些部分

16:25.140 --> 16:25.900
组成

16:26.360 --> 16:28.660
你说这个东西他影不影响你写带吗呢

16:28.920 --> 16:30.200
其实也不影响你写带吗

16:30.720 --> 16:33.280
对不对但有些公司他就喜欢问怎么一嘴

16:33.540 --> 16:36.220
那你达出来了总比你没达出来要好

16:37.120 --> 16:39.160
对不对其实这个问题你达没达出来

16:39.420 --> 16:40.700
对方其实心里也是有数的

16:40.960 --> 16:44.800
你就算没达出来也不说明你怎么编程能力就不行

16:45.060 --> 16:47.100
这个和这个编程能力没有什么

16:47.360 --> 16:48.120
太大的关系

16:48.640 --> 16:50.420
对不对啊他就随口那么疑问

16:50.680 --> 16:51.960
但你如果达出来了

16:52.480 --> 16:54.780
哎他是不是觉得哎这个人还不错

16:55.440 --> 16:59.600
对不对平时还是挺喜欢专业的挺爱阅读的

17:00.360 --> 17:02.160
对吧啊说我们这边呢

17:02.420 --> 17:05.120
能开一节课单独来聊一聊啊

17:05.380 --> 17:07.020
而最后这里就是一个总结

17:07.780 --> 17:10.100
我们浏览器由以下几个部分组成

17:10.360 --> 17:12.560
啊用户界面浏览器引擎

17:12.820 --> 17:13.680
渲染引擎

17:13.940 --> 17:14.440
网络

17:14.700 --> 17:16.700
然后用户界面后端对吧

17:16.960 --> 17:17.780
然后解释器

17:18.040 --> 17:19.260
然后数据存储

17:19.520 --> 17:21.860
OK就这么七个部分啊

17:22.020 --> 17:23.660
下来的话可以把这篇文章

17:23.920 --> 17:25.180
自己再看一下

17:25.440 --> 17:27.240
啊这个文章就读一遍就可以了啊

17:27.500 --> 17:28.780
就通读一遍就可以了

17:29.040 --> 17:30.300
没必要就是

17:30.560 --> 17:31.580
呃就是

17:32.100 --> 17:33.380
在那就是

17:34.140 --> 17:38.760
咬文嚼字的啊就每个字我要弄清楚他什么意思啊这个没必要

17:39.020 --> 17:40.040
就通读一下

17:40.300 --> 17:44.140
就可以了大致知道有这么几个部分组成就行了

17:44.640 --> 17:45.160
好吧

17:45.420 --> 17:48.220
好这节课的话就先到这里啊再见

