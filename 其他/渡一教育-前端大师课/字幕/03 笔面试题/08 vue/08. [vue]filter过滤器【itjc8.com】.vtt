WEBVTT

00:00.050 --> 00:02.350
好 这一课咱们讲郭律器

00:02.850 --> 00:05.430
郭律器这一块愉快一点啊 非常简单

00:05.690 --> 00:07.470
我们来首先看一下官网文档啊

00:07.730 --> 00:11.050
看一下官网文档 然后呢我们来做一个小的练习就OK了

00:12.090 --> 00:12.850
好 进去了

00:13.870 --> 00:15.930
郭律器 看一下吧 非常简单啊

00:16.190 --> 00:17.210
啥意思呢

00:17.470 --> 00:20.790
他的用的地方啊 他是用在

00:21.810 --> 00:24.630
大胡志语法 就是马斯泰奇语法里边

00:24.890 --> 00:28.210
就我比方说我们这里呢要显示一个数据 叫做message

00:28.930 --> 00:33.330
然后呢 他这个message呢 我们可能把它要格式化一下 比方说

00:33.590 --> 00:34.350
我要把他的

00:34.610 --> 00:37.430
手字母呢 转化成大写

00:37.690 --> 00:41.010
于是呢 我可以去调用一个方法 对吧 我们可以这样子写

00:42.810 --> 00:44.090
调用一个方法 叫做

00:46.390 --> 00:48.950
比方说叫做capitalize

00:49.210 --> 00:52.270
假设有这么一个方法啊 然后我们把这个message传进去

00:52.530 --> 00:56.630
对不对 是不是可以这样子 当然我们也可以利用计算属性来做这件事情

00:56.850 --> 00:58.370
比方说我们到底要用方法吧

00:58.630 --> 01:00.930
但是呢 如果说这个事情啊

01:01.190 --> 01:04.010
不仅仅是这个组件 这一个地方要做

01:04.770 --> 01:07.330
可能很多的地方都要做类似的事情

01:07.590 --> 01:11.950
那么于是呢 这个方法我们就希望他重用 当然重用的办法呢 我们也可以想到

01:12.450 --> 01:15.790
可以把它分解成一个模块出去 对吧 然后呢再

01:16.050 --> 01:17.050
把它导入进来

01:17.310 --> 01:20.390
把它放到我们当前这个组件的message里边

01:20.650 --> 01:22.190
也是可以做这件事情的

01:22.450 --> 01:24.490
但是呢 毕竟有点不方便

01:25.070 --> 01:28.030
于是呢 不用了 给你搞出来这么一个东西 叫做过滤器

01:28.290 --> 01:29.570
他就来

01:29.830 --> 01:32.110
可以非常方便来做这件事 看怎么做的啊

01:33.670 --> 01:34.950
比方说在这

01:35.950 --> 01:39.030
我们把这个数据读出来 然后呢 希望把这个数据呢

01:39.290 --> 01:43.130
经过一个过滤器处理 处理完了过后 把处理的结构放这儿

01:43.390 --> 01:45.430
于是呢 他的写法 语法就变成这个样子了

01:46.710 --> 01:50.550
其实这个东西呢 在我们的最终的虚拟节点里边 它会变成什么样子呢

01:50.810 --> 01:52.350
就最终在Render函数里边

01:53.070 --> 01:55.890
在Render函数里边啊 其他 我们就写关键代码

01:56.390 --> 01:58.070
就这一块东西 它就会变成

02:00.470 --> 02:00.970
this

02:02.790 --> 02:03.310
開

02:04.230 --> 02:04.590
p

02:05.190 --> 02:05.550
托

02:06.010 --> 02:06.510
nice

02:07.030 --> 02:08.630
然后把这个message放进去

02:09.870 --> 02:13.110
它就变成这个样子了 其实非常非常简单啊 就这样子 没了

02:13.510 --> 02:16.550
所以说呢 我们这个玩意呢 本质上也就是一个函数

02:16.830 --> 02:19.910
它写到哪呢 它写到这个filtr page里边啊filtr

02:20.190 --> 02:23.190
表示我们这位配置 这个组件里边要用到的过滤器

02:23.430 --> 02:25.230
于是这里呢 就可以写成一个函数

02:25.470 --> 02:29.350
当然你可以把这个函数提取到一个单独的模块里边去使用

02:29.790 --> 02:32.150
你看 这个函数的做法就是 接受一个值

02:32.430 --> 02:34.190
这个值呢 就是前边传过来的这个值

02:35.070 --> 02:36.590
然后呢 如果说这个值

02:37.270 --> 02:40.350
就做一些处理吧 如果说它不微空啊

02:40.910 --> 02:44.950
它没有这个值 没有这个微空 然后呢就返回一个空制服串

02:45.310 --> 02:47.430
不微空的时候呢 把它转换成制服串

02:47.710 --> 02:49.670
然后呢 把它第一个制服转换成大鞋

02:50.110 --> 02:51.870
凭借上后边了 就这么简单

02:52.030 --> 02:54.750
于是呢 这样子呢 这个数据里边的第一个字母就大鞋了

02:55.470 --> 02:57.030
这是在Multi-Tag举法里边

02:57.350 --> 03:00.670
有的时候呢 我们在属性绑定的时候呢 也可以做这件事情

03:01.030 --> 03:04.470
就是在属性绑定的时候呢 我们也可以让它经过一个过滤器来处理

03:04.470 --> 03:06.910
就把这个数据呢 交给它来进行处理

03:07.190 --> 03:09.510
就这么简单 当然这里它没有写过滤器

03:10.110 --> 03:11.350
你要学会看文档啊

03:12.550 --> 03:15.830
这里呢 是局部定义 就是把过滤器呢 定义到那个

03:16.190 --> 03:18.110
组件的一个配置里边

03:18.870 --> 03:22.150
其实也可以全局定义 你看这里 跟逐渐是一样的啊

03:22.550 --> 03:26.350
通过View到就是个静态方法 可以进行全局定义

03:26.910 --> 03:30.310
那么同样的 给它一个函数 方这个函数也可以分成一个模块来写

03:30.670 --> 03:33.270
对吧 非常简单啊 那你看它下面一个例子啊

03:33.510 --> 03:36.750
有了这个过滤器之后呢 我们在文闷框里边的输入

03:36.750 --> 03:38.350
那么这个文闷框里边是怎么用的呢

03:38.950 --> 03:41.750
这个文闷框里边 文闷框里边 我们就可以用这种方式啊

03:43.430 --> 03:44.830
就是比方说这个Input

03:46.110 --> 03:46.990
这里一个VMode

03:48.790 --> 03:49.510
这里一个数据

03:50.150 --> 03:52.230
比方说Name吧 加上一个过滤器

03:53.190 --> 03:53.950
过滤器是什么呢

03:57.990 --> 03:59.390
原来的意思啊 就这么简单

04:01.430 --> 04:03.630
然后呢 它告诉你过滤器呢 也可以串联

04:04.110 --> 04:05.550
就比方说可以用多个过滤器

04:05.910 --> 04:08.870
这个都是原始数据 然后经过它再经过它

04:09.630 --> 04:12.470
那么什么意思呢 就调用这个方法把Message传进去

04:13.190 --> 04:16.430
然后把这个方法返回了结果了 作为参数就传到这个方法里边

04:16.630 --> 04:19.670
对吧 一式传递 先让它经过它 得到一个值

04:19.910 --> 04:23.390
然后再把这个值经过它 得到最终的值 然后显示一下

04:23.750 --> 04:24.910
可以传多个过滤器

04:25.670 --> 04:28.070
而且呢 过滤器呢 也可以传参数 比方说有些方法呢

04:28.070 --> 04:29.790
它有一些参数也需要可以传递

04:30.070 --> 04:31.390
那么比方说这个过滤器啊

04:32.390 --> 04:33.390
传了两个参数进去

04:33.710 --> 04:35.830
那么也就是说这个方法呢 它要接收三个参数

04:36.110 --> 04:37.030
第一个参数就是它

04:37.630 --> 04:40.270
传过来 然后呢 还有两个字定义的传过来

04:40.510 --> 04:41.630
对吧 非常简单啊

04:42.270 --> 04:44.110
这是过滤器 那我们来做一个例子吧

04:45.070 --> 04:48.270
比方说我们在这里呢 有个组件啊

04:48.270 --> 04:49.550
这个组件呢 啥都没有

04:50.110 --> 04:50.990
可以吧 啥都没有

04:51.230 --> 04:54.990
接下来呢 我们希望这里呢 有一个 这么一个文本框吧

04:56.870 --> 04:59.670
或者就是一个 那么给它个数据

05:00.510 --> 05:09.380
比如说 比方说 先来一个1000

05:12.380 --> 05:15.420
然后呢 这边呢 我们有一个文本框

05:16.260 --> 05:18.600
一个文本框

05:19.160 --> 05:20.720
这个文本框呢 要绑进这个money

05:22.280 --> 05:23.800
money啊 带回number

05:25.080 --> 05:27.080
为了让它是一个数字呢

05:27.080 --> 05:28.520
我们在这里加上一个修设服

05:29.200 --> 05:29.960
那么这样子呢

05:31.000 --> 05:32.200
文本框里边输入的结果呢

05:32.200 --> 05:34.400
还就不会是制服串的啊 变成一个数字了

05:35.080 --> 05:35.880
好 我们来看一下吧

05:36.120 --> 05:36.800
非常简单吧

05:37.200 --> 05:38.280
一个数字嘛 对不对

05:39.080 --> 05:41.000
好 那么这个数字输入多少呢

05:41.360 --> 05:42.880
它会改变这个文本框的值

05:43.280 --> 05:44.440
改变这个数据的值

05:44.640 --> 05:46.600
接下来呢 我们下面呢 有一个元数啊

05:46.600 --> 05:48.360
比方说 我们显示一个p元数吧

05:48.640 --> 05:50.440
这p元数里边 我们就显示这个money

05:53.910 --> 05:54.510
是很简单

05:55.070 --> 05:57.070
好 那么现在我要做的事情就是

05:57.270 --> 05:59.110
我要把这个地方的东西呢

05:59.350 --> 06:00.590
转换成一个

06:02.550 --> 06:04.590
金钱的格式啊 金额的格式

06:04.590 --> 06:05.710
什么叫金额的格式呢

06:05.910 --> 06:07.070
就是每三个制服啊

06:07.310 --> 06:08.550
前面加上一个兜号啊

06:08.550 --> 06:10.230
或者是加上一个空格之类的东西

06:10.990 --> 06:13.110
好 于是呢 我们这里可以写方法来完成吧

06:13.110 --> 06:15.310
当然可以啊 我们就可以在这里写个方法

06:15.950 --> 06:16.470
message

06:17.150 --> 06:18.630
比方说这个format

06:19.630 --> 06:19.990
money

06:21.190 --> 06:22.990
你给我传一个money进来

06:23.310 --> 06:26.150
然后呢 我负责了把它转换成一个合适的格式

06:26.150 --> 06:27.710
那么这样子呢 我们就可以在这里呢

06:27.710 --> 06:29.510
去调用这个方法 对吧

06:29.870 --> 06:31.350
把一个调用方法的返回结果呢

06:31.350 --> 06:32.190
放到这个位置

06:32.550 --> 06:33.550
非常简单嘛

06:33.910 --> 06:36.390
但是我们也可以利用这几颗学习的过滤器

06:36.390 --> 06:37.270
来完成这个式

06:37.270 --> 06:38.190
就是filters

06:38.710 --> 06:40.950
配置一下啊 给它加上一个format

06:42.470 --> 06:42.990
money

06:45.260 --> 06:47.180
好 你给我传一个金额进来

06:47.340 --> 06:49.660
那如果说是你写成过滤器的格式的话

06:49.660 --> 06:51.060
你在模范里边用的时候啊

06:51.100 --> 06:52.460
过滤器它只会影响模范

06:52.820 --> 06:53.740
它在Render函数里边

06:53.740 --> 06:54.860
它其实就是方法调用

06:55.300 --> 06:57.460
然后呢 把它传递给这个过滤器

06:57.580 --> 06:58.300
format money

06:58.780 --> 06:59.420
那就完事了

06:59.900 --> 07:01.860
那它不会把这个方法的返回结果放到这

07:02.540 --> 07:03.940
那如果说你觉得这个过滤器呢

07:03.940 --> 07:04.540
是通用的

07:04.540 --> 07:07.060
因此呢 你也可以写成一个通用的模块

07:07.060 --> 07:09.300
比方说放在一个特殊的文念牙filter里边

07:09.540 --> 07:10.260
比方说我们这里

07:10.740 --> 07:12.540
啊 给它写个money filter

07:14.180 --> 07:16.220
啊 这里面我们导出一个format money

07:17.500 --> 07:19.580
format money

07:20.580 --> 07:21.940
你给我传一个指示进来

07:22.420 --> 07:23.620
我给你返回一个东西

07:23.820 --> 07:25.700
那么如果写成这种通用的格式的话

07:25.700 --> 07:27.460
那么这边你是不是需要导入进来

07:27.660 --> 07:28.060
对吧

07:28.260 --> 07:29.260
那么这里导入进来啊

07:29.260 --> 07:29.860
format

07:31.260 --> 07:31.740
对不对

07:32.740 --> 07:33.860
导入一下啊

07:36.310 --> 07:36.950
import

07:38.470 --> 07:38.870
from

07:39.470 --> 07:40.070
filter

07:42.480 --> 07:44.680
导入一下这个format money

07:46.120 --> 07:47.040
把配置到这

07:47.880 --> 07:48.960
决步注册嘛

07:48.960 --> 07:50.040
当然你可以全聚注册啊

07:50.040 --> 07:50.840
全聚注册过后呢

07:50.840 --> 07:52.400
每个组件里面就不用注册了

07:52.760 --> 07:53.880
啊 你直接用就行了

07:54.680 --> 07:56.200
但是呢 我跟组件一样啊

07:56.200 --> 07:56.920
能够

07:56.920 --> 07:58.880
如果说不是那么大犯完的使用的话

07:58.880 --> 08:00.400
我建议大家还是决不注册

08:01.200 --> 08:03.080
好 那么这样子就可以使用过滤器了

08:03.080 --> 08:03.800
我们来看一下吧

08:03.800 --> 08:05.920
比方说过滤器里面返回一个123

08:05.920 --> 08:06.880
返回一个123

08:07.320 --> 08:08.760
啊 然后我们这里输出一下

08:09.000 --> 08:10.000
filter

08:11.240 --> 08:12.000
好 保存啊

08:12.000 --> 08:13.640
你看一下这里有没有显示出来啊

08:14.720 --> 08:16.240
你看这里是不是显示123了

08:16.240 --> 08:16.720
对吧

08:16.720 --> 08:17.800
它运行的这个方法

08:18.080 --> 08:19.920
它会把一个方法的反馈结果显示

08:19.920 --> 08:20.800
就这么简单

08:21.560 --> 08:22.160
就这么简单

08:22.160 --> 08:24.120
你看每一次数据变化

08:24.120 --> 08:25.440
它都会重新渲染出

08:25.440 --> 08:26.680
能渲染一个界面

08:26.680 --> 08:27.520
渲染界面的时候

08:27.520 --> 08:28.880
它就会重新运行过滤器

08:29.720 --> 08:31.080
过滤器是没有什么缓存的啊

08:33.580 --> 08:36.780
好 这是关于这个这一块

08:36.780 --> 08:37.380
然后呢

08:37.380 --> 08:39.380
我们这就把这个方法写完就完事了

08:39.380 --> 08:40.620
那这个方法怎么写呢

08:40.620 --> 08:43.020
我们就顺便去复习一下基础知识

08:43.020 --> 08:44.660
这里肯定要用老众的表达式

08:45.340 --> 08:46.140
怎么弄呢

08:46.140 --> 08:47.380
就是把这个玩意呢

08:47.620 --> 08:49.180
转换成一个制服串

08:49.740 --> 08:51.220
然后再合适的位置呢

08:51.220 --> 08:52.620
给它加一个斗号

08:52.780 --> 08:54.500
当然它不一定是加斗号

08:54.500 --> 08:55.820
有可能是加别的符号

08:55.820 --> 08:56.940
比方说加空格

08:56.940 --> 08:59.980
或者加一些别的特定语言的符号

08:59.980 --> 09:00.540
那么这里呢

09:00.540 --> 09:01.900
你可以做一个参数传进来

09:01.900 --> 09:03.260
比方说加一个split

09:04.140 --> 09:05.940
就是到底用什么来分割

09:05.940 --> 09:07.740
默认了是用一个斗号

09:07.740 --> 09:09.100
当然你可以传递一些别的

09:09.100 --> 09:09.900
比方说我们这里呢

09:09.900 --> 09:12.100
可以传递一个空格

09:12.100 --> 09:12.620
对吧

09:13.180 --> 09:14.300
那么它就会把这个东西

09:14.300 --> 09:15.420
作为第一个参数传进去

09:15.420 --> 09:16.020
把这个玩意呢

09:16.020 --> 09:17.260
作为第二个参数传进去

09:17.260 --> 09:18.300
就变成这个样子了

09:18.300 --> 09:20.140
那么我们把这个方法写完就完事了

09:20.140 --> 09:21.180
来吧写一下吧

09:21.260 --> 09:24.620
我们首先把这个money转换成一个支付创

09:25.740 --> 09:27.300
把这个money转换成支付创

09:28.780 --> 09:29.980
这是一个number

09:29.980 --> 09:31.020
把它做事吧

09:32.460 --> 09:33.580
这是个number的意义

09:34.540 --> 09:35.900
这是一个支付创的意义

09:36.940 --> 09:37.820
好那么这边呢

09:37.820 --> 09:39.260
我们就有智能提示了

09:39.260 --> 09:39.900
to fix

09:40.940 --> 09:43.260
我们首先把它保留两位小数吧

09:43.260 --> 09:45.020
因为金融呢

09:45.020 --> 09:46.460
它一般都有两位小数

09:46.460 --> 09:47.340
都会有两位小数

09:47.340 --> 09:48.820
当然你要保留几位小数的话

09:48.820 --> 09:50.780
你可以在这里做一个参数传进来

09:50.860 --> 09:51.260
对吧

09:52.380 --> 09:53.020
fixed

09:54.940 --> 09:55.500
digit

09:56.540 --> 09:57.420
等于二

09:57.420 --> 09:58.620
你把这个东西传进来

09:58.620 --> 09:59.660
保留几位小数

09:59.660 --> 10:00.540
保留两位小数

10:01.340 --> 10:02.300
默认是两位

10:02.300 --> 10:03.500
你当然也可以传更多的

10:04.300 --> 10:05.740
好那么这样子一传进来的话

10:05.740 --> 10:06.460
我们来看一下

10:06.460 --> 10:06.780
return

10:09.850 --> 10:10.330
是吧

10:10.330 --> 10:11.530
保留两位小数了

10:11.530 --> 10:12.810
那如果说你要保留多位的话

10:12.810 --> 10:14.330
你是不是可以再传个参数

10:16.810 --> 10:17.210
对吧

10:17.210 --> 10:17.770
你自己定

10:18.890 --> 10:19.690
好然后呢

10:19.690 --> 10:20.090
这边

10:21.050 --> 10:22.970
保留这样子得到了一个数字

10:22.970 --> 10:23.290
然后呢

10:23.290 --> 10:24.170
我再把这个数字呢

10:24.170 --> 10:25.770
转换成一个字母创

10:25.770 --> 10:27.530
to stream

10:28.490 --> 10:30.490
当然我最好做一些边界检查

10:30.490 --> 10:32.570
比方说是不是NAN那一段去把刀的

10:34.330 --> 10:34.730
好

10:34.730 --> 10:35.130
然后呢

10:35.130 --> 10:35.770
我们这里是不是等

10:35.770 --> 10:36.650
拿到一个字母创啊

10:38.960 --> 10:39.840
拿到这么一个字母创

10:41.600 --> 10:43.360
拿到字母创之后呢

10:43.360 --> 10:44.080
我们可以

10:46.000 --> 10:47.680
把这个字母创解许一下

10:47.680 --> 10:48.400
用什么解许呢

10:48.400 --> 10:49.600
用点来解许

10:49.600 --> 10:50.480
左边的是一坨

10:50.480 --> 10:51.360
右边的是一坨

10:51.440 --> 10:51.840
对吧

10:51.840 --> 10:53.360
我们来解许一下啊

10:54.560 --> 10:54.880
part

10:55.600 --> 10:56.480
set r split

10:57.600 --> 10:59.120
按照点来分割

11:00.080 --> 11:00.880
分割之后呢

11:00.880 --> 11:02.080
它就左右两边了

11:02.800 --> 11:03.760
有了左右两边的话

11:03.760 --> 11:05.760
左边那一块是整数部分

11:05.760 --> 11:06.720
对不对

11:06.720 --> 11:08.880
右边那一块是小数部分

11:08.880 --> 11:10.480
那么我们把左边的一部分搞定

11:11.200 --> 11:11.920
左边那一部分呢

11:11.920 --> 11:12.720
就是parts0

11:13.440 --> 11:14.240
右边那一部分呢

11:14.240 --> 11:14.960
就是parts2

11:20.600 --> 11:21.320
就左右两边

11:21.880 --> 11:22.600
左边整数

11:26.060 --> 11:27.740
这是右边小数

11:29.100 --> 11:31.180
我就没有做太多的边界检查

11:31.180 --> 11:32.380
如果说这个玩意要拧的话

11:32.380 --> 11:33.500
就没有小数啊

11:33.500 --> 11:35.340
你们自己去搞定

11:35.980 --> 11:36.220
好

11:36.220 --> 11:36.860
左边那一部分

11:36.860 --> 11:37.820
整数的一部分呢

11:37.820 --> 11:39.500
我们就可以整动了

11:41.740 --> 11:42.220
这样吧

11:42.220 --> 11:43.180
我们先把这个函数

11:43.740 --> 11:44.380
测试一下

11:44.380 --> 11:45.180
不测试一下

11:45.180 --> 11:45.980
for max money

11:46.780 --> 11:47.580
给他一个数字

11:51.930 --> 11:52.490
result

11:53.050 --> 11:54.090
输出一下result

11:54.890 --> 11:55.370
测试好了

11:55.370 --> 11:56.330
过来再拿出去用

12:00.170 --> 12:01.370
目前反过来是1dB

12:01.770 --> 12:01.930
好

12:01.930 --> 12:02.490
左边的小

12:02.490 --> 12:03.130
左边的整数

12:03.130 --> 12:03.930
我们来看一下

12:03.930 --> 12:04.490
parts1

12:05.530 --> 12:06.090
输出一下

12:06.890 --> 12:07.770
左边整数

12:07.770 --> 12:08.730
是一个字不错

12:08.730 --> 12:09.130
然后呢

12:09.130 --> 12:11.450
我们就要利用一个政策表达式

12:12.090 --> 12:13.690
再合适的位置加上一个斗

12:13.690 --> 12:15.450
那整个政策表达式怎么写呢

12:15.450 --> 12:17.690
好像我记得讲技术的时候

12:17.690 --> 12:19.130
是写过这个玩意的

12:20.410 --> 12:20.890
replace

12:21.610 --> 12:22.010
替换

12:22.570 --> 12:24.570
就是替换一个政策表达式

12:25.290 --> 12:25.690
然后呢

12:25.690 --> 12:26.570
右边替换了什么呢

12:26.570 --> 12:27.530
替换了这个split

12:28.410 --> 12:29.610
把什么位置替换呢

12:29.610 --> 12:30.250
就是那个位置

12:30.250 --> 12:31.130
它有这么一个特点

12:31.690 --> 12:34.090
那个位置后边一定是

12:34.890 --> 12:37.210
三个或者是三个的倍数

12:37.210 --> 12:39.130
三个六个九个数字

12:39.690 --> 12:40.170
对吧

12:40.170 --> 12:40.810
整数部分

12:41.450 --> 12:43.530
它后边一定是三六九

12:43.530 --> 12:45.450
也就是三的倍数个数字

12:46.010 --> 12:48.410
把那个位置替换成一个斗号

12:48.410 --> 12:49.610
那这个东西怎么写呢

12:50.490 --> 12:52.890
其实就是一个前瞻

12:52.890 --> 12:53.210
对吧

12:53.210 --> 12:54.330
正向前瞻

12:54.330 --> 12:55.210
问号等号

12:55.210 --> 12:57.370
就是这里这个位置

12:57.370 --> 12:58.730
这个位置后边

12:59.370 --> 13:00.810
因为正向前瞻呢

13:01.290 --> 13:03.210
是不会消耗制服的

13:03.210 --> 13:03.770
对吧

13:03.770 --> 13:04.970
它后边只会匹配

13:04.970 --> 13:06.170
它不会消耗制服

13:06.170 --> 13:06.650
啥意思呢

13:06.650 --> 13:07.130
就比方说

13:07.690 --> 13:08.490
这个位置

13:08.490 --> 13:08.970
你看啊

13:09.610 --> 13:10.330
我们这个位置

13:10.330 --> 13:11.050
我现在这个

13:11.050 --> 13:12.170
鼠标指责这个位置

13:13.210 --> 13:14.090
这个位置呢

13:14.090 --> 13:15.610
后边有三个数字

13:16.650 --> 13:17.130
钢地

13:18.730 --> 13:18.970
三

13:19.530 --> 13:20.170
对吧

13:20.170 --> 13:21.610
那么于是这个位置能匹配

13:21.610 --> 13:23.210
就我鼠标这个位置能匹配

13:23.210 --> 13:24.570
这个位置是不是也能匹配

13:25.370 --> 13:26.090
对吧

13:26.090 --> 13:27.210
这个位置就匹配不了

13:27.210 --> 13:28.970
后边不是三的倍数的数字

13:28.970 --> 13:30.570
这个位置也匹配不了

13:30.650 --> 13:32.410
所以说就能匹配到这个位置

13:32.410 --> 13:33.050
这个位置

13:33.930 --> 13:35.290
就这么简单啊

13:35.290 --> 13:37.130
你把替换一下就完事了

13:37.130 --> 13:38.090
然后返回的话

13:38.090 --> 13:38.490
我们就

13:39.930 --> 13:40.410
返回呗

13:41.770 --> 13:43.690
重新拿了个part1

13:45.720 --> 13:46.600
好拿了个part1

13:46.600 --> 13:47.000
过后呢

13:47.000 --> 13:48.200
我们再来输出一下的part1

13:51.290 --> 13:52.330
就变这样子了

13:52.330 --> 13:52.810
我看一下

13:52.810 --> 13:53.770
哪里哪里出了问题

13:55.770 --> 13:56.730
后边有

13:58.970 --> 13:59.850
这里三个数字

13:59.850 --> 14:01.050
这个地方能匹配

14:01.050 --> 14:02.330
这个地方为什么匹配到了

14:05.770 --> 14:06.650
三个

14:06.650 --> 14:07.210
三个数字

14:07.210 --> 14:07.770
对对对

14:07.770 --> 14:08.810
在这里还有一个问题

14:08.810 --> 14:09.770
它有可能是三个

14:09.770 --> 14:11.050
有可能是六个

14:11.050 --> 14:12.330
有可能是九个对吧

14:12.330 --> 14:13.050
也就是说

14:13.050 --> 14:14.170
这个三个数字呢

14:14.170 --> 14:15.610
它可能出现一次或多次

14:22.590 --> 14:23.150
还有问题

14:23.710 --> 14:24.350
我看一下

14:24.350 --> 14:25.310
当然还有什么问题

14:29.040 --> 14:30.320
但应该就是这个问题了

14:30.320 --> 14:32.160
后边应该要接上一个

14:33.280 --> 14:33.680
结束

14:34.720 --> 14:36.080
应该要接上一个结束符号

14:37.440 --> 14:38.000
对了

14:38.000 --> 14:39.840
因为刚才为什么不行啊

14:40.480 --> 14:41.280
你看这个数字

14:41.280 --> 14:41.920
他为什么不行

14:42.560 --> 14:43.520
因为他会发现

14:43.520 --> 14:44.960
这个数这个位置

14:44.960 --> 14:46.480
就是我鼠标指的这个位置

14:46.480 --> 14:47.600
这个位置后边呢

14:47.600 --> 14:49.200
也是有三个字符的

14:49.200 --> 14:49.840
一二三

14:49.840 --> 14:50.320
对吧

14:50.320 --> 14:51.200
你不加结束的话

14:51.920 --> 14:53.440
他就不会匹配到结束

14:53.440 --> 14:54.800
不光有三个字符

14:54.800 --> 14:55.760
三个三个字符

14:55.760 --> 14:56.240
六个字符

14:56.240 --> 14:57.040
九个字符

14:57.040 --> 14:58.400
背一数个字符之后呢

14:58.400 --> 14:59.200
他有一个结束

15:00.800 --> 15:01.120
好吧

15:01.120 --> 15:01.840
这个想法就OK了

15:03.280 --> 15:03.600
好了

15:03.600 --> 15:04.560
那么就搞定了

15:04.560 --> 15:05.600
整数部分搞定了

15:05.600 --> 15:05.920
过后了

15:05.920 --> 15:07.120
再把小数部分拼接一下

15:07.120 --> 15:08.000
就完事了

15:08.000 --> 15:08.560
拼接一下

15:09.360 --> 15:10.000
part1

15:12.570 --> 15:12.970
第二

15:13.530 --> 15:14.090
然后呢

15:15.210 --> 15:16.010
part2

15:17.210 --> 15:17.610
好了

15:17.610 --> 15:18.090
我们再看

15:19.690 --> 15:20.170
是吧

15:20.170 --> 15:22.650
是不是拼接成这个合适的样子了

15:23.850 --> 15:24.010
好

15:24.010 --> 15:24.970
当然这个地方呢

15:24.970 --> 15:25.370
也可以

15:26.730 --> 15:27.610
使用其他字符

15:27.610 --> 15:28.650
它是可以喘参的

15:28.650 --> 15:30.010
我们把它导入出去

15:30.650 --> 15:31.290
把它导出去

15:31.850 --> 15:32.170
好

15:32.170 --> 15:33.050
加上我们看一下页面

15:33.530 --> 15:33.930
放心

15:34.810 --> 15:35.130
你看

15:35.130 --> 15:35.850
现在是空格

15:35.850 --> 15:36.170
对吧

15:38.170 --> 15:39.290
是不是变成金额格式了

15:39.850 --> 15:40.330
对吧

15:40.330 --> 15:41.450
就写成了这么一个

15:42.410 --> 15:42.970
filter

15:44.250 --> 15:44.970
就这么简单

15:44.970 --> 15:46.250
大家可以下去写一些

15:46.250 --> 15:46.890
我一会就行了

