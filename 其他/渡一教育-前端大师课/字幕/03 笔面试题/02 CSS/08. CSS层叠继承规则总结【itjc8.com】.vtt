WEBVTT

00:01.010 --> 00:03.010
大家好 我是谢老师

00:03.010 --> 00:09.010
这节课我们来看一下CSS里面的成谍和继承的规则

00:09.010 --> 00:12.010
这里也是一道面试整体

00:12.010 --> 00:17.010
请简术一下CSS中成谍规则

00:17.010 --> 00:20.010
但是我建议你在听这节课之前

00:20.010 --> 00:24.010
最好先把CSS属性的计算过程

00:24.010 --> 00:26.010
把这节课先听一下

00:26.010 --> 00:30.010
听了之后再来听现在讲的这节课

00:30.010 --> 00:33.010
这两节课其实是有那么一点关联的

00:33.010 --> 00:36.010
那么在这个CSS属性计算过程

00:36.010 --> 00:38.010
这个课里面我们讲过

00:38.010 --> 00:40.010
每一个元素它干嘛呢

00:40.010 --> 00:43.010
它是不是都有所有的属性

00:43.010 --> 00:44.010
对不对

00:44.010 --> 00:46.010
哪怕我比如说我给一个段落

00:46.010 --> 00:47.010
我只设一个carner

00:47.010 --> 00:50.010
你看上去我只设置了一个属性carner

00:50.010 --> 00:54.010
但其实所有的属性它都有

00:54.010 --> 00:58.010
然后每一个属性都会通过一系列的计算

00:58.010 --> 01:01.010
得到什么呢得到最终的值

01:01.010 --> 01:03.010
这个计算是怎么计算的呢

01:03.010 --> 01:05.010
大致分为这么四个步骤

01:05.010 --> 01:07.010
首先第一个就是确定生命值

01:07.010 --> 01:10.010
第二个就是解决冲突问题

01:10.010 --> 01:11.010
沉叠冲突问题

01:11.010 --> 01:13.010
然后接下来如果没有生命值

01:13.010 --> 01:15.010
让我接下来我能够使用继承

01:15.010 --> 01:17.010
我就使用继承

01:17.010 --> 01:19.010
如果继承我也拿不到值

01:19.010 --> 01:20.010
那最终我使用什么呢

01:20.010 --> 01:22.010
最终我使用默认值

01:22.010 --> 01:24.010
这个就是这节课

01:24.010 --> 01:27.010
这节课里面讲的这四步

01:27.010 --> 01:30.010
其中的话第二步和第三步

01:30.010 --> 01:33.010
里面的话就有一些需要注意的知识点

01:33.010 --> 01:36.010
这节课的话我们主要就是围绕这两步

01:36.010 --> 01:38.010
一个是沉叠冲突

01:38.010 --> 01:40.010
一个是这个继承

01:40.010 --> 01:43.010
这两个里面有一些什么东西

01:43.010 --> 01:46.010
那么首先来看这个沉叠冲突

01:46.010 --> 01:48.010
我们的CSS

01:48.010 --> 01:52.010
CSS全称叫做Cascading Style Sheets

01:52.010 --> 01:56.010
看到没有要取这个手字模CSS

01:56.010 --> 01:59.010
它翻译成中文是不是就是沉叠样式表

01:59.010 --> 02:02.010
那这里的话Cascading

02:02.010 --> 02:05.010
就是这个沉叠这个概念

02:05.010 --> 02:07.010
它就是非常重要的

02:07.010 --> 02:10.010
这个沉叠这个概念非常非常重要

02:10.010 --> 02:12.010
好然后接下来的话

02:12.010 --> 02:14.010
我们这个沉叠

02:14.010 --> 02:17.010
它这个如何就是决定最终沉叠

02:17.010 --> 02:20.010
然后选择哪一个样式

02:20.010 --> 02:21.010
它取决于什么呢

02:21.010 --> 02:23.010
取决于这个三个因素

02:23.010 --> 02:24.010
哪三个因素呢

02:24.010 --> 02:26.010
首先就是重要性

02:26.010 --> 02:27.010
Importance

02:27.010 --> 02:30.010
然后加这个专用性

02:30.010 --> 02:32.010
Specificity

02:32.010 --> 02:34.010
然后最后就是一个Source Order

02:34.010 --> 02:37.010
原代码的这个秩序

02:37.010 --> 02:39.010
从上往下

02:39.010 --> 02:41.010
上面这个最重要

02:41.010 --> 02:43.010
然后接下来如果上面这个没有

02:43.010 --> 02:44.010
然后接下来看这个

02:44.010 --> 02:45.010
这个没有

02:45.010 --> 02:47.010
然后最后才是它说了算

02:47.010 --> 02:48.010
秒秒

02:48.010 --> 02:51.010
它这个是按重量级来排的

02:51.010 --> 02:53.010
那这样我们首先来看这个重要性

02:53.010 --> 02:54.010
那在Cascading里面

02:54.010 --> 02:56.010
有一个特别的语法

02:56.010 --> 02:58.010
可以让你的这个一个规则

02:58.010 --> 03:00.010
始终是优于其他规则的

03:00.010 --> 03:01.010
叫做什么呢

03:01.010 --> 03:02.010
叫做感叹号

03:02.010 --> 03:03.010
Importance

03:03.010 --> 03:05.010
比如说我们这边我们举个例子

03:05.010 --> 03:08.010
比如说我们这边设置一个P

03:11.010 --> 03:14.010
然后接下来我们这边设置这个P

03:14.010 --> 03:18.010
比如说这里这个P我设置一个Conner

03:18.010 --> 03:20.010
Conner是一个Raid

03:20.010 --> 03:22.010
然后接下来我这边

03:22.010 --> 03:24.010
我再来设置一个P

03:24.010 --> 03:26.010
然后接下来这边Conner

03:26.010 --> 03:28.010
Conner是一个Blu

03:28.010 --> 03:30.010
然后接下来我这个的话

03:30.010 --> 03:31.010
我加上一个什么呢

03:31.010 --> 03:33.010
加上一个Importance

03:33.010 --> 03:35.010
加上一个Importance之后

03:35.010 --> 03:36.010
那说明你这个

03:36.010 --> 03:37.010
这条样式

03:37.010 --> 03:40.010
它的这个重要性是非常重要的

03:40.010 --> 03:41.010
说说我们这边的话

03:41.010 --> 03:42.010
我们一刷新

03:42.010 --> 03:43.010
你会发现最终的话

03:43.010 --> 03:45.010
这个段落呈现的是什么呢

03:45.010 --> 03:47.010
呈现的是蓝色

03:47.010 --> 03:49.010
并且这个红色这条

03:50.010 --> 03:52.010
我看一下在哪个位置

03:52.010 --> 03:55.010
它应该是有被画掉

03:55.010 --> 03:57.010
要选择中看到没有这里

03:57.010 --> 03:59.010
红色这个Conner Raid

03:59.010 --> 04:00.010
是不是就被画掉了

04:00.010 --> 04:03.010
为什么因为你这个加了这个Importance

04:03.010 --> 04:05.010
这个就是重要性

04:05.010 --> 04:07.010
使用这个感叹号Importance

04:07.010 --> 04:10.010
但是这个的话一般建议你干吗呢

04:10.010 --> 04:12.010
建议你不要去使用它

04:12.010 --> 04:13.010
除非你万不得已

04:13.010 --> 04:15.010
你要去改一些就是比如说

04:15.010 --> 04:16.010
主建库

04:16.010 --> 04:18.010
你们后面会学到这个主建库

04:18.010 --> 04:20.010
主建库里面有一些这个默认的样式

04:20.010 --> 04:21.010
你要去改

04:21.010 --> 04:22.010
改了又改不了

04:22.010 --> 04:24.010
那这里的话你可能会想到使用这个

04:24.010 --> 04:26.010
这个Importance

04:26.010 --> 04:29.010
去就是强调你一样式的这个重要性

04:29.010 --> 04:31.010
那这个时候你可能会使用

04:31.010 --> 04:33.010
一般来讲就是在你自己

04:33.010 --> 04:34.010
写样式的时候

04:34.010 --> 04:37.010
能够这个避免的话就不要去使用它

04:37.010 --> 04:38.010
为什么呢

04:38.010 --> 04:39.010
因为你这个改变了

04:39.010 --> 04:42.010
这个成叠正常的这个工作方式

04:42.010 --> 04:45.010
而且在这个调试的时候也比较困难

04:45.010 --> 04:47.010
所以这个东西这个Importance

04:47.010 --> 04:49.010
首先你要知道有这么一个东西

04:49.010 --> 04:52.010
但是你要知道这个东西是避免使用的

04:52.010 --> 04:53.010
好吧

04:53.010 --> 04:55.010
好 接下来第二个

04:55.010 --> 04:58.010
那如果再都没有写这个Importance的情况下

04:58.010 --> 05:00.010
我们这边

05:00.010 --> 05:02.010
我们都不写这个

05:02.010 --> 05:04.010
感叹号Importance

05:04.010 --> 05:06.010
那在这种情况下就谁说了算了

05:06.010 --> 05:08.010
那就是这个专用性

05:08.010 --> 05:09.010
其实就是什么呢

05:09.010 --> 05:11.010
就是这个权重

05:11.010 --> 05:12.010
看权重

05:12.010 --> 05:13.010
什么叫做专用性呢

05:13.010 --> 05:15.010
所谓专用性就是

05:15.010 --> 05:17.010
衡量你的这个选择器

05:17.010 --> 05:20.010
它能匹配多少元素

05:20.010 --> 05:24.010
如果它能匹配的元素越少

05:24.010 --> 05:26.010
那么它的专用性就越高

05:26.010 --> 05:29.010
那么它的权重也就越高

05:29.010 --> 05:31.010
那我们这边我来看一下

05:31.010 --> 05:33.010
比如说这边

05:33.010 --> 05:36.010
元素选择器具有很低的专用性

05:36.010 --> 05:37.010
为什么

05:37.010 --> 05:38.010
很简单

05:38.010 --> 05:39.010
因为元素选择器

05:39.010 --> 05:40.010
是不是你选比我写个P

05:40.010 --> 05:43.010
是不是这个页面所有P都被选中了

05:43.010 --> 05:44.010
对不对

05:44.010 --> 05:45.010
那接下来

05:45.010 --> 05:47.010
类选择器具有更高的专用性

05:47.010 --> 05:49.010
也就是类的话比这个元素选择器

05:49.010 --> 05:51.010
它的权重要高一些

05:51.010 --> 05:54.010
所以它可以暂升元素选择器

05:54.010 --> 05:57.010
比如我们这边我们来写个例子吧

05:57.010 --> 05:59.010
比如我们这边的话

05:59.010 --> 06:02.010
给个ClassTest

06:02.010 --> 06:06.010
那这样我们这边就是点Test

06:06.010 --> 06:08.010
那接下来最终还是什么色

06:08.010 --> 06:10.010
最终还是蓝色

06:10.010 --> 06:11.010
对不对

06:11.010 --> 06:12.010
为什么

06:12.010 --> 06:15.010
因为它的权重更高一些

06:15.010 --> 06:16.010
然后接下来的话

06:16.010 --> 06:18.010
ID选择器

06:18.010 --> 06:20.010
它就有更高的专用性

06:20.010 --> 06:22.010
它可以暂升类选择器

06:22.010 --> 06:23.010
为什么

06:23.010 --> 06:24.010
因为ID是唯一的

06:24.010 --> 06:25.010
对不对

06:25.010 --> 06:26.010
ID是唯一的

06:26.010 --> 06:28.010
那能够暂升ID选择器的方法

06:28.010 --> 06:30.010
就是Style

06:30.010 --> 06:33.010
或者是Important

06:33.010 --> 06:34.010
一般来讲的话

06:34.010 --> 06:36.010
我们选择器它的专用性

06:36.010 --> 06:37.010
可以用什么

06:37.010 --> 06:39.010
可以用不同的值

06:39.010 --> 06:41.010
来进行衡量

06:41.010 --> 06:43.010
我相信有的同学应该是知道的

06:43.010 --> 06:45.010
就是可以用千位

06:45.010 --> 06:49.010
千位 百位 十位 个位来衡量

06:49.010 --> 06:50.010
比如我们的元素选择器

06:50.010 --> 06:51.010
是不是就是个位

06:51.010 --> 06:53.010
然后我们的ID选择器

06:53.010 --> 06:54.010
是不是就是千位

06:54.010 --> 06:55.010
对不对

06:55.010 --> 06:57.010
好 那我们这边我们来看一下

06:57.010 --> 06:59.010
ID是百位

06:59.010 --> 07:00.010
说错了

07:00.010 --> 07:01.010
那接下来我们这边来看一下

07:01.010 --> 07:02.010
首先千位

07:02.010 --> 07:04.010
千位如果你声明

07:04.010 --> 07:06.010
就是你写样式是在什么呢

07:06.010 --> 07:08.010
是在Style属性里面

07:08.010 --> 07:09.010
就是怎么写的

07:09.010 --> 07:10.010
你这样子来写的

07:10.010 --> 07:12.010
你直接给我这样子写的

07:12.010 --> 07:13.010
Style里面

07:13.010 --> 07:16.010
那既然我这边Connor

07:16.010 --> 07:18.010
是一个绿色

07:18.010 --> 07:21.010
那它的这个权重就是最高的

07:21.010 --> 07:22.010
为什么它是千位啊

07:22.010 --> 07:23.010
对不对

07:23.010 --> 07:24.010
它是千位

07:24.010 --> 07:25.010
相当于有1000的权重

07:25.010 --> 07:27.010
那这边最终呈现什么

07:27.010 --> 07:28.010
呈现这个绿色

07:28.010 --> 07:29.010
对不对

07:29.010 --> 07:31.010
最终呈现这个绿色

07:31.010 --> 07:32.010
如果是这个

07:32.010 --> 07:36.010
它就是这个千位加一分

07:36.010 --> 07:38.010
然后如果是这个百位

07:38.010 --> 07:39.010
百位的话就是什么

07:39.010 --> 07:40.010
就是这个ID选择器

07:40.010 --> 07:42.010
它就是在这个百位

07:42.010 --> 07:44.010
然后接下来这边这个十位

07:44.010 --> 07:45.010
十位就是什么呢

07:45.010 --> 07:46.010
你看十位就有点多了

07:46.010 --> 07:47.010
十位的话

07:47.010 --> 07:50.010
内选择器是十位

07:50.010 --> 07:51.010
然后接下属性

07:51.010 --> 07:53.010
属性的话也是十位

07:53.010 --> 07:55.010
然后接下来这个尾类

07:55.010 --> 07:56.010
也是这个十位

07:56.010 --> 07:58.010
就是各加一分

07:58.010 --> 07:59.010
然后接下来这个个尾

07:59.010 --> 08:01.010
个尾的话就是元素选择器

08:01.010 --> 08:03.010
和尾元素

08:03.010 --> 08:05.010
它是这个个尾

08:05.010 --> 08:07.010
我们这边来举个例子嘛

08:07.010 --> 08:08.010
我们这边的话

08:08.010 --> 08:11.010
我们把这个都加上

08:11.010 --> 08:12.010
然后这边给个ID

08:12.010 --> 08:13.010
ID比如叫做OP

08:13.010 --> 08:14.010
然后接下来这边

08:14.010 --> 08:20.010
通过OP来设置这个样式

08:20.010 --> 08:21.010
比如这个Connor

08:21.010 --> 08:23.010
这个Connor是一个Yellow

08:23.010 --> 08:24.010
OK

08:24.010 --> 08:25.010
你看我这边的话是不是

08:25.010 --> 08:26.010
通过

08:26.010 --> 08:27.010
这里写错了

08:27.010 --> 08:29.010
这里应该是个警号

08:29.010 --> 08:30.010
你看我这边

08:30.010 --> 08:32.010
这边是不是通过ID

08:32.010 --> 08:33.010
来选择重元素

08:33.010 --> 08:34.010
是不是设置这个颜色

08:34.010 --> 08:36.010
接下来也通过这个

08:36.010 --> 08:38.010
标签选择器

08:38.010 --> 08:39.010
设置这个颜色

08:39.010 --> 08:40.010
也通过什么呢

08:40.010 --> 08:41.010
也通过这个类选择器

08:41.010 --> 08:42.010
然后同时这边

08:42.010 --> 08:43.010
还设置了什么

08:43.010 --> 08:44.010
是不是Style

08:44.010 --> 08:45.010
对不对

08:45.010 --> 08:46.010
那请问

08:46.010 --> 08:48.010
现在它的这个最终颜色

08:48.010 --> 08:50.010
应该是什么颜色

08:50.010 --> 08:52.010
应该是什么颜色

08:52.010 --> 08:54.010
那很明显是不是

08:54.010 --> 08:55.010
应该是绿色

08:55.010 --> 08:56.010
为什么

08:56.010 --> 08:57.010
因为你这个Style

08:57.010 --> 08:59.010
它这个权重最高

08:59.010 --> 09:00.010
对不对

09:00.010 --> 09:01.010
它相当于是1000

09:01.010 --> 09:02.010
它相当于是1000

09:02.010 --> 09:04.010
然后你这个ID选择器

09:04.010 --> 09:05.010
是不是相当于100

09:05.010 --> 09:06.010
相当于是10

09:06.010 --> 09:07.010
这个相当于是1

09:07.010 --> 09:08.010
对不对

09:08.010 --> 09:09.010
那谁最终

09:09.010 --> 09:10.010
是不是肯定是它最终

09:10.010 --> 09:11.010
所以这里的话

09:11.010 --> 09:12.010
它就是什么呢

09:12.010 --> 09:13.010
最终它就是

09:13.010 --> 09:14.010
是不是绿色

09:14.010 --> 09:16.010
那如果我把这一条

09:16.010 --> 09:18.010
我把它去掉

09:18.010 --> 09:21.010
我把这一条去掉

09:21.010 --> 09:23.010
我把这一条去掉之后

09:23.010 --> 09:24.010
那接下来

09:24.010 --> 09:25.010
它就应该是呈现什么颜色

09:25.010 --> 09:27.010
谁的权重更高一些

09:27.010 --> 09:28.010
是不是很明显

09:28.010 --> 09:30.010
它的权重

09:30.010 --> 09:31.010
这个ID

09:31.010 --> 09:32.010
ID是百位

09:32.010 --> 09:33.010
对不对

09:33.010 --> 09:34.010
它的权重高一些

09:34.010 --> 09:35.010
所以就是

09:35.010 --> 09:36.010
黄色

09:36.010 --> 09:37.010
看了没有

09:37.010 --> 09:38.010
这黄色有点不明显

09:38.010 --> 09:40.010
我换一个

09:40.010 --> 09:41.010
换一个灰色

09:41.010 --> 09:43.010
那个黄色太耀眼了

09:43.010 --> 09:44.010
换一个灰色

09:44.010 --> 09:46.770
好 说心

09:46.770 --> 09:47.770
你看

09:47.770 --> 09:48.770
它是不是就是灰色

09:48.770 --> 09:49.770
对不对

09:49.770 --> 09:52.770
说这个的话就是权重

09:52.770 --> 09:53.770
你注意

09:53.770 --> 09:54.770
通用选择器

09:54.770 --> 09:56.770
和一些复合选择器

09:56.770 --> 09:57.770
比如加号

09:57.770 --> 09:58.770
大语号

09:58.770 --> 09:59.770
飘空格

09:59.770 --> 10:00.770
这些的话

10:00.770 --> 10:02.770
它是没有权重影响的

10:02.770 --> 10:04.770
没有权重影响的

10:04.770 --> 10:05.770
好 那我们这边

10:05.770 --> 10:06.770
我们来举一下例子

10:06.770 --> 10:07.770
比如说这边

10:07.770 --> 10:08.770
比如说我的选择器

10:08.770 --> 10:09.770
写了个H1

10:09.770 --> 10:11.770
那它千位是不是就是0

10:11.770 --> 10:12.770
零

10:12.770 --> 10:13.770
各位是不是11

10:13.770 --> 10:14.770
所以它最终得到的值就是多少呢

10:14.770 --> 10:17.770
最终得到的值就是1

10:17.770 --> 10:18.770
得到的值就是1

10:18.770 --> 10:19.770
这个就是它的权重值

10:19.770 --> 10:20.770
最终我们是什么呢

10:20.770 --> 10:22.770
最终我们是比较这个值

10:22.770 --> 10:23.770
谁大

10:23.770 --> 10:24.770
我们就用谁的样式

10:24.770 --> 10:25.770
明不明

10:25.770 --> 10:27.770
它就是这样子来解决冲突的

10:27.770 --> 10:29.770
这样子来解决冲突

10:29.770 --> 10:30.770
就比这个值

10:30.770 --> 10:31.770
哪个值大

10:31.770 --> 10:33.770
我就用哪个值

10:33.770 --> 10:35.770
所对应的这个样式

10:35.770 --> 10:36.770
那比如这个

10:36.770 --> 10:37.770
这个是不是ID选择器

10:37.770 --> 10:38.770
ID选择器

10:38.770 --> 10:39.770
那就是什么

10:39.770 --> 10:40.770
百位

10:40.770 --> 10:41.770
记一个

10:41.770 --> 10:42.770
所以接下来它是多少

10:42.770 --> 10:43.770
是不是就是100

10:43.770 --> 10:44.770
看到没有

10:44.770 --> 10:46.770
好 那接下来这个

10:46.770 --> 10:47.770
这个的话

10:47.770 --> 10:49.770
是不是有一个元素选择器

10:49.770 --> 10:50.770
元素选择器

10:50.770 --> 10:51.770
是不是就是各位

10:51.770 --> 10:52.770
是不是一个

10:52.770 --> 10:53.770
然后这个

10:53.770 --> 10:54.770
这个是不是也是元素选择器

10:54.770 --> 10:55.770
是不是又是得一分

10:55.770 --> 10:56.770
然后接下来这边

10:56.770 --> 10:57.770
这个是什么

10:57.770 --> 10:58.770
这个是不是委员数

10:58.770 --> 10:59.770
是不是又得一分

10:59.770 --> 11:01.770
委员数是不是也是各位

11:01.770 --> 11:02.770
对不对

11:02.770 --> 11:03.770
最终的话加起来就几分

11:03.770 --> 11:04.770
是不是3分

11:04.770 --> 11:05.770
对不对

11:05.770 --> 11:07.770
最终它的权重值就是3

11:07.770 --> 11:08.770
或者说得3分

11:08.770 --> 11:10.770
好 大家这边来看一下这个

11:10.770 --> 11:12.770
这个的话

11:12.770 --> 11:13.770
首先这个利

11:13.770 --> 11:14.770
利的话是什么

11:14.770 --> 11:16.770
利的话是不是元素选择器

11:16.770 --> 11:17.770
对不对 是不是得一分

11:17.770 --> 11:18.770
然后加这个

11:18.770 --> 11:20.770
这个是不是也是元素选择器

11:20.770 --> 11:21.770
对不对

11:21.770 --> 11:22.770
所以又得一分

11:22.770 --> 11:23.770
现在的话就是2分

11:23.770 --> 11:25.770
2分然后接下来这个

11:25.770 --> 11:26.770
这个是什么

11:26.770 --> 11:28.770
这个是不是属性选择器

11:28.770 --> 11:29.770
属性选择器是什么

11:29.770 --> 11:31.770
是不是10位

11:31.770 --> 11:32.770
得一分

11:32.770 --> 11:34.770
然后加这边这个是内选择器

11:34.770 --> 11:35.770
内选择器

11:35.770 --> 11:37.770
然后接下来是不是又是

11:37.770 --> 11:39.770
内选择器在这里

11:39.770 --> 11:40.770
看到没有

11:40.770 --> 11:41.770
又是10位

11:41.770 --> 11:42.770
说最终它的权重值是多少呢

11:42.770 --> 11:45.770
最终权重值是22

11:45.770 --> 11:49.770
最终它的权重值是22

11:49.770 --> 11:50.770
明白没有

11:50.770 --> 11:51.770
其实我们最终就是

11:51.770 --> 11:52.770
依靠权重值

11:52.770 --> 11:54.770
我们这边我们来写一个

11:54.770 --> 11:55.770
比如说我们这边

11:55.770 --> 11:56.770
真的是这个P

11:56.770 --> 11:57.770
比如说我们这边的话

11:57.770 --> 11:58.770
设置这个

11:58.770 --> 12:01.780
比如说我们这边

12:01.780 --> 12:03.780
给一个这个DIV

12:03.780 --> 12:05.780
给个DIV

12:05.780 --> 12:07.780
DIV然后下面这个P

12:07.780 --> 12:12.440
我这边我写个简单的

12:12.440 --> 12:13.440
比如说我这里

12:13.440 --> 12:14.440
我这里的话

12:14.440 --> 12:17.440
设置这个P

12:17.440 --> 12:18.440
Connor

12:18.440 --> 12:20.440
Red

12:20.440 --> 12:22.440
那正常情况下

12:22.440 --> 12:23.440
它是不是应该是红色

12:23.440 --> 12:24.440
对不对

12:24.440 --> 12:25.440
红色

12:25.440 --> 12:27.440
好那接下来我这边

12:27.440 --> 12:28.440
我这边我比我在它上面来写

12:28.440 --> 12:30.440
DIV

12:30.440 --> 12:31.440
然后

12:31.440 --> 12:33.440
它这个DIV

12:33.440 --> 12:36.440
DIV下面的这个P

12:36.440 --> 12:37.440
然后接下来

12:37.440 --> 12:39.440
这边Connor

12:39.440 --> 12:41.440
Blue

12:41.440 --> 12:42.440
看了没有

12:42.440 --> 12:43.440
好那这样我们这边

12:43.440 --> 12:44.440
我们刷新一下

12:44.440 --> 12:45.440
你看它就是什么颜色

12:45.440 --> 12:47.440
所以就变成蓝色了

12:47.440 --> 12:48.440
为什么

12:48.440 --> 12:49.440
原因很简单

12:49.440 --> 12:50.440
因为你这个的话

12:50.440 --> 12:51.440
你这个几个元素选择器了

12:51.440 --> 12:53.440
这两个元素选择器

12:53.440 --> 12:54.440
它的权重值就是多少

12:54.440 --> 12:55.440
说2

12:55.440 --> 12:56.440
对不对你这个是1

12:56.440 --> 12:57.440
那我这边我怎么办

12:57.440 --> 12:58.440
我这边可以这个样子

12:58.440 --> 12:59.440
比如点

12:59.440 --> 13:01.440
Test

13:01.440 --> 13:02.440
下面的这个P

13:03.440 --> 13:04.440
点Test下面的P

13:04.440 --> 13:05.440
你看我这边那是不是

13:05.440 --> 13:06.440
就是有一个这个

13:06.440 --> 13:07.440
10位上的权重了

13:07.440 --> 13:08.440
对不对

13:08.440 --> 13:09.440
所以我这个权重值

13:09.440 --> 13:10.440
加起来是多少呢

13:10.440 --> 13:11.440
加起来是11

13:11.440 --> 13:12.440
而你这个

13:12.440 --> 13:13.440
加起来是2

13:13.440 --> 13:14.440
所以最终它就呈现什么呢

13:14.440 --> 13:16.440
最终它就呈现为

13:20.260 --> 13:22.260
Test的写错了

13:23.260 --> 13:25.260
这里应该是这个

13:25.260 --> 13:26.260
OK

13:26.260 --> 13:27.260
好那加这边刷新

13:27.260 --> 13:29.260
你看它最终就呈现为什么

13:29.260 --> 13:31.260
呈现为红色

13:31.260 --> 13:32.260
看了没有

13:32.260 --> 13:33.260
说它这个权重值

13:33.260 --> 13:34.260
就是这么来计算的

13:34.260 --> 13:36.260
就是不同的这个选择器

13:36.260 --> 13:38.260
它其实是有这个权重值的

13:38.260 --> 13:39.260
那最终的话

13:39.260 --> 13:40.260
把这个权重值干嘛呢

13:40.260 --> 13:41.260
最终把这个权重值

13:41.260 --> 13:42.260
把它加起来

13:42.260 --> 13:44.260
看谁的权重值高

13:44.260 --> 13:46.260
谁的权重值高

13:46.260 --> 13:48.260
那我就用谁的

13:48.260 --> 13:49.260
这个是这个

13:49.260 --> 13:51.260
那接下来有一个问题

13:51.260 --> 13:53.260
那就是我权重值一样

13:53.260 --> 13:54.260
怎么办呢

13:54.260 --> 13:56.260
比如说我这边权重值

13:56.260 --> 13:57.260
一样比我们这边

13:57.260 --> 13:58.260
来写一个

13:58.260 --> 13:59.260
给这个P

13:59.260 --> 14:03.470
Conner rate

14:03.470 --> 14:04.470
然后接下来

14:04.470 --> 14:06.470
然后这边一个P

14:06.470 --> 14:11.040
Conner blue

14:11.040 --> 14:12.040
OK

14:12.040 --> 14:13.040
那你看这两个

14:13.040 --> 14:14.040
是不是都是权重值选择器

14:14.040 --> 14:15.040
权重值都是多少呀

14:15.040 --> 14:17.040
是不是都是1

14:17.040 --> 14:18.040
对不对

14:18.040 --> 14:19.040
让我这个最终我用哪个呢

14:19.040 --> 14:20.040
我这边刷新

14:20.040 --> 14:21.040
你会发现它最终是

14:21.040 --> 14:22.040
蓝色

14:22.040 --> 14:23.040
为什么呢

14:23.040 --> 14:24.040
原因很简单

14:24.040 --> 14:25.040
因为你这个的话

14:25.040 --> 14:27.040
权重值一样

14:27.040 --> 14:29.040
让我们就取决于什么呢

14:29.040 --> 14:31.040
取决于这个元代码的

14:31.040 --> 14:32.040
顺序

14:32.040 --> 14:33.040
或者是次序

14:33.040 --> 14:34.040
看这边

14:34.040 --> 14:37.040
如果多个相互竞争的选择器

14:37.040 --> 14:40.040
具有相同的重要性和

14:40.040 --> 14:41.040
专用性

14:41.040 --> 14:42.040
就前两个

14:42.040 --> 14:44.040
这个判断标准都是一样的

14:44.040 --> 14:46.040
没办法通过前面两个

14:46.040 --> 14:48.040
判断标准来判断了

14:48.040 --> 14:49.040
那接下来我们就是使用

14:49.040 --> 14:50.040
第三个

14:50.040 --> 14:51.040
第三个就是什么呢

14:51.040 --> 14:53.040
元代码的这个次序

14:53.040 --> 14:56.040
谁在后面

14:56.040 --> 14:57.040
谁在后面

14:57.040 --> 14:58.040
我就用谁的

14:58.040 --> 14:59.040
看到没有

14:59.040 --> 15:00.040
说我们刚才的话

15:00.040 --> 15:01.040
我们写的这个例子

15:01.040 --> 15:02.040
是不录在后面

15:02.040 --> 15:03.040
对不对

15:03.040 --> 15:04.040
成蝶掉了

15:04.040 --> 15:06.040
不然为什么叫做成蝶样式标呢

15:06.040 --> 15:08.040
他就把他成蝶掉了

15:08.040 --> 15:09.040
看到没有

15:09.040 --> 15:11.040
就是这个样子的

15:11.040 --> 15:12.040
就这个样子的

15:12.040 --> 15:13.040
你看这个

15:13.040 --> 15:14.040
这个是不是就被成蝶掉了

15:14.040 --> 15:15.040
对不对

15:15.040 --> 15:17.040
显示出这个不录

15:17.040 --> 15:19.040
好 这边

15:19.040 --> 15:20.040
有一点大家需要注意

15:20.040 --> 15:22.040
就是当多个CSS

15:22.040 --> 15:24.040
规则匹配相同元素式

15:24.040 --> 15:25.040
他们都会被应用到

15:25.040 --> 15:26.040
该元素中

15:26.040 --> 15:27.040
只不过后面

15:27.040 --> 15:29.040
因为成蝶规则

15:29.040 --> 15:31.040
被成蝶掉了而已

15:31.040 --> 15:33.040
这个是我们刚才看到的

15:33.040 --> 15:34.040
对不对

15:34.040 --> 15:35.040
他这个屁他有没有给他

15:35.040 --> 15:36.040
设置Carnal read

15:36.040 --> 15:37.040
他其实这边

15:37.040 --> 15:38.040
其实你看到他是不是设置了的

15:38.040 --> 15:39.040
设置了直播

15:39.040 --> 15:40.040
他被成蝶掉了

15:40.040 --> 15:42.040
所以他这边有一个一杠

15:42.040 --> 15:44.040
有一个一杠

15:44.040 --> 15:45.040
OK

15:45.040 --> 15:47.040
好 这是关于这个成蝶

15:47.040 --> 15:49.040
成蝶了这个规则

15:49.040 --> 15:50.040
其实就是

15:50.040 --> 15:51.040
其实就这么三个

15:51.040 --> 15:53.040
根据这个重要性

15:53.040 --> 15:55.040
专用性和元代码秩序

15:55.040 --> 15:57.040
来决定最终

15:57.040 --> 15:59.040
我用哪一个声名值

15:59.040 --> 16:00.040
对不对

16:00.040 --> 16:01.040
对不对

16:01.040 --> 16:02.040
好 然后接下来

16:02.040 --> 16:04.040
这边如果没有声名值

16:04.040 --> 16:05.040
没有声名值

16:05.040 --> 16:07.040
接下来我们应该是走什么

16:07.040 --> 16:08.040
你看这边应该是走什么

16:08.040 --> 16:10.040
是不是走这个继承

16:10.040 --> 16:12.040
对不对 使用这个继承

16:12.040 --> 16:14.040
所以我们来看一下这个继承

16:14.040 --> 16:15.040
继承这个很简单

16:15.040 --> 16:17.040
继承的话他就是

16:17.040 --> 16:18.040
某一些

16:18.040 --> 16:20.040
就是某个元素的一些值

16:20.040 --> 16:21.040
属性值

16:21.040 --> 16:23.040
他会有指元素来继承

16:23.040 --> 16:24.040
比如说Carnal

16:24.040 --> 16:25.040
那Carnal的话

16:25.040 --> 16:26.040
这个就是指元素

16:26.040 --> 16:28.040
它是会继承的

16:28.040 --> 16:29.040
CSS的话

16:29.040 --> 16:30.040
它为继承

16:30.040 --> 16:32.040
它提供了四个值

16:32.040 --> 16:34.040
一个是inherit

16:34.040 --> 16:35.040
这个就代表

16:35.040 --> 16:36.040
就是我设置这个值

16:36.040 --> 16:39.040
是继承负元素的这个值

16:39.040 --> 16:41.040
然后一个是initio

16:41.040 --> 16:43.040
initio代表什么呢

16:43.040 --> 16:44.040
initio表示

16:44.040 --> 16:45.040
我们来看一下

16:45.040 --> 16:46.040
该值将应用到

16:46.040 --> 16:48.040
选定元素的属性值

16:48.040 --> 16:50.040
设置为与浏览器

16:50.040 --> 16:52.040
默认样式表中

16:52.040 --> 16:54.040
该元素设置的值一样

16:54.040 --> 16:56.040
也就是我们浏览器

16:56.040 --> 16:57.040
它是不是有一个

16:57.040 --> 16:58.040
默认的这个样式值

16:58.040 --> 17:00.040
那这个initio就是使用什么呢

17:00.040 --> 17:01.040
使用浏览器的

17:01.040 --> 17:03.040
默认的这个样式值

17:04.040 --> 17:06.040
然后如果浏览器

17:06.040 --> 17:08.040
默认样式没有设置值

17:08.040 --> 17:09.040
那它就是什么呢

17:09.040 --> 17:11.040
该属性就是自然继承的

17:11.040 --> 17:12.040
好

17:12.040 --> 17:14.040
然后夹这个unset

17:14.040 --> 17:15.040
unset的话是

17:15.040 --> 17:17.040
重置为自然值

17:17.040 --> 17:18.040
什么叫做自然值

17:18.040 --> 17:19.040
就是属性

17:19.040 --> 17:21.040
属性是自然继承的

17:21.040 --> 17:23.040
它就是如果能够继承的到

17:23.040 --> 17:26.040
它表现就和inherit是一样

17:26.040 --> 17:27.040
否则的话

17:27.040 --> 17:28.040
它就是使用什么呢

17:28.040 --> 17:30.040
它就是使用浏览器默认值

17:30.040 --> 17:32.040
就是这个initio

17:32.040 --> 17:33.040
总是你记住嘛

17:33.040 --> 17:34.040
inherit就是

17:34.040 --> 17:35.040
继承值

17:35.040 --> 17:36.040
从复原说

17:36.040 --> 17:37.040
继承而来

17:37.040 --> 17:38.040
然后夹initio就是什么呢

17:38.040 --> 17:41.040
就是这个浏览器默认值

17:41.040 --> 17:43.040
好 夹这边revert

17:43.040 --> 17:45.040
revert的话

17:45.040 --> 17:46.040
这边就是

17:46.040 --> 17:48.040
如果没有任何样式

17:48.040 --> 17:50.040
该属性恢复到

17:50.040 --> 17:51.040
它所拥有的值

17:51.040 --> 17:52.040
也就是说

17:52.040 --> 17:54.040
会设置为自己

17:54.040 --> 17:57.040
定义一样是所定义的属性

17:57.040 --> 17:59.040
这个其实用的挺少的

17:59.040 --> 18:00.040
revert

18:00.040 --> 18:01.040
我不怎么用这个

18:01.040 --> 18:02.040
一般的话就是

18:02.040 --> 18:03.040
你了解这两个

18:03.040 --> 18:04.040
一个inherit

18:04.040 --> 18:05.040
一个initio

18:05.040 --> 18:07.040
这两个你把它了解一下

18:07.040 --> 18:08.040
一个这个是代表

18:08.040 --> 18:09.040
我设置的值是

18:09.040 --> 18:10.040
继承复原说的

18:10.040 --> 18:11.040
这个代表什么呢

18:11.040 --> 18:12.040
我设置的值是

18:12.040 --> 18:15.040
浏览器默认样式

18:15.040 --> 18:17.040
好 继承这边还有一个点

18:17.040 --> 18:18.040
什么点呢

18:18.040 --> 18:22.040
那就是究竟原则

18:22.040 --> 18:23.040
究竟原则

18:23.040 --> 18:24.040
什么叫做究竟原则

18:24.040 --> 18:25.040
好 让我这边

18:25.040 --> 18:27.040
我们就用这个嘛

18:27.040 --> 18:28.040
就用这个

18:28.040 --> 18:34.080
好 你看我这边

18:34.080 --> 18:36.080
然后我把这个

18:36.080 --> 18:41.280
拿过来

18:41.280 --> 18:42.280
格式画一下

18:42.280 --> 18:44.280
好 请问最终这个屁

18:44.280 --> 18:46.280
最终这个屁

18:46.280 --> 18:48.280
呈现什么颜色

18:48.280 --> 18:49.280
想一想

18:49.280 --> 18:50.280
最终这个屁

18:50.280 --> 18:52.280
呈现什么颜色

18:52.280 --> 18:54.280
好 首先有没有选中这个屁

18:54.280 --> 18:55.280
有没有选中这个屁

18:55.280 --> 18:58.280
有没有选中这个屁的选择器

18:58.280 --> 18:59.280
是没有啊

18:59.280 --> 19:02.280
对不对 没有一个选择器选中了这个屁的

19:02.280 --> 19:03.280
所以说这边呢

19:03.280 --> 19:05.280
它就是不存在这个成叠冲突

19:05.280 --> 19:06.280
那这边就是使用什么呢

19:06.280 --> 19:08.280
使用这个继承值

19:08.280 --> 19:09.280
继承值的话

19:09.280 --> 19:11.280
我们这边设置的这个DIV

19:11.280 --> 19:13.280
这个2它是这个Blue

19:13.280 --> 19:15.280
那设置的这个1是什么呢

19:15.280 --> 19:16.280
是Red

19:16.280 --> 19:18.280
那这里就有一个究竟原则

19:18.280 --> 19:19.280
我用谁的

19:19.280 --> 19:21.280
那就是谁进我就用谁的

19:21.280 --> 19:22.280
所以最终的话

19:22.280 --> 19:24.280
我会用这个DIV的

19:24.280 --> 19:25.280
会用这个DIV的

19:25.280 --> 19:26.280
这个DIV的话是2

19:26.280 --> 19:27.280
2的话是不是不落

19:27.280 --> 19:28.280
这个是不落

19:28.280 --> 19:29.280
对不对

19:29.280 --> 19:30.280
所以最终的话你看到

19:30.280 --> 19:31.280
刷新

19:31.280 --> 19:32.280
看到没有

19:32.280 --> 19:33.280
是不是不落

19:33.280 --> 19:36.280
所以这个的话就是这个究竟原则

19:36.280 --> 19:38.280
因为2比1更加接近屁

19:38.280 --> 19:39.280
所以最终的话

19:39.280 --> 19:41.280
采用的是2的carnal值

19:41.280 --> 19:43.280
断落呈现蓝色

19:43.280 --> 19:45.280
呈现蓝色

19:45.280 --> 19:46.280
但是你如果选中了

19:46.280 --> 19:47.280
那肯定就是

19:47.280 --> 19:48.280
是不是使用你选中的值

19:48.280 --> 19:49.280
对不对

19:49.280 --> 19:50.280
比如我这边让我选中了

19:50.280 --> 19:51.280
比如这个屁

19:51.280 --> 19:54.280
比如说这边carnal

19:54.280 --> 19:56.280
比如说green

19:56.280 --> 19:57.280
那你这边他肯定

19:57.280 --> 19:59.280
最终的话他值就是什么

19:59.280 --> 20:00.280
最终值是不是就是green

20:00.280 --> 20:01.280
你不要学晕了

20:01.280 --> 20:02.280
不要学晕了

20:02.280 --> 20:03.280
为什么是green

20:03.280 --> 20:04.280
有东西

20:04.280 --> 20:06.280
他权重不是比他重吗

20:06.280 --> 20:07.280
这个不是类选择器

20:07.280 --> 20:08.280
权重是10

20:08.280 --> 20:10.280
你这个权重是1吗

20:10.280 --> 20:12.280
怎么这个生效了

20:12.280 --> 20:13.280
你这两个没选中啊

20:13.280 --> 20:14.280
大哥

20:14.280 --> 20:15.280
对不对

20:15.280 --> 20:16.280
你这两个东西没选中

20:16.280 --> 20:17.280
我们这个是

20:17.280 --> 20:18.280
就是继承

20:18.280 --> 20:19.280
继承实在就是

20:19.280 --> 20:21.280
你没有选中的情况下

20:21.280 --> 20:22.280
没有选中的情况下

20:22.280 --> 20:24.280
我是不是我去看那个继承

20:24.280 --> 20:26.280
加谁进用谁的继承值

20:26.280 --> 20:27.280
对不对

20:27.280 --> 20:28.280
你这个选中了

20:28.280 --> 20:29.280
那肯定是用他选中的

20:29.280 --> 20:30.280
对不对

20:30.280 --> 20:31.280
那如果多个选中了

20:31.280 --> 20:33.280
是我才去看那个权重值

20:33.280 --> 20:34.280
对不对

20:34.280 --> 20:36.280
不要整晕了

20:36.280 --> 20:37.280
好

20:37.280 --> 20:39.280
这个是关于这个继承

20:39.280 --> 20:40.280
OK

20:40.280 --> 20:41.280
好

20:41.280 --> 20:42.280
所以我们这边

20:42.280 --> 20:43.280
我们来回答一下

20:43.280 --> 20:44.280
这个整体

20:44.280 --> 20:45.280
请减速一下

20:45.280 --> 20:46.280
CS中沉迭的规则

20:46.280 --> 20:47.280
那是不是就是

20:47.280 --> 20:48.280
上面的三个

20:48.280 --> 20:49.280
是不是就是这三个

20:49.280 --> 20:50.280
对不对

20:50.280 --> 20:51.280
重要性

20:51.280 --> 20:52.280
专用性

20:52.280 --> 20:54.280
这个元代码秩序

20:54.280 --> 20:55.280
你就把这三个

20:55.280 --> 20:57.280
你把它这个

20:57.280 --> 20:58.280
回答上

20:58.280 --> 20:59.280
就可以了

20:59.280 --> 21:00.280
好吧

21:00.280 --> 21:01.280
OK

21:01.280 --> 21:03.280
这个就是

21:03.280 --> 21:05.280
这个就是我们这边

21:05.280 --> 21:06.280
要讲的这个关于

21:06.280 --> 21:08.280
CS的沉迭和继承的这个规则

21:08.280 --> 21:10.280
它其实是属于这个

21:10.280 --> 21:12.280
属性计算里面的一部分

21:12.280 --> 21:13.280
说说我

21:13.280 --> 21:14.280
刚开始讲的时候

21:14.280 --> 21:15.280
我就说过

21:15.280 --> 21:16.280
你要先去把这个听了

21:16.280 --> 21:17.280
听了之后

21:17.280 --> 21:19.280
再加你再来听这一节课

21:19.280 --> 21:20.280
它是属于这个的一部分

21:20.280 --> 21:21.280
我们首先确定

21:21.280 --> 21:22.280
生命值

21:22.280 --> 21:23.280
那接下来解决

21:23.280 --> 21:24.280
是不是沉迭冲突

21:24.280 --> 21:25.280
解决沉迭冲突里面

21:25.280 --> 21:27.280
是不是就包含了

21:27.280 --> 21:28.280
是不是这三个

21:28.280 --> 21:29.280
对不对

21:29.280 --> 21:30.280
那如果没有生命值

21:30.280 --> 21:31.280
那我使用继承

21:31.280 --> 21:32.280
继承里面

21:32.280 --> 21:33.280
这样是不是有那个究竟原则

21:33.280 --> 21:34.280
对不对

21:34.280 --> 21:35.280
那如果继承也拿不到之

21:35.280 --> 21:36.280
那最终使用什么

21:36.280 --> 21:38.280
是不是浏览这个默认值

21:38.280 --> 21:39.280
对不对

21:39.280 --> 21:40.280
OK

21:40.280 --> 21:42.280
这节课就先到这里

21:42.280 --> 21:43.280
大家自己下来的话

21:43.280 --> 21:45.280
把这个再看一看

21:45.280 --> 21:46.280
好

21:46.280 --> 21:47.280
再见

