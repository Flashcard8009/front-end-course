WEBVTT

00:00.180 --> 00:04.180
好的 同学们 我们这期课来聊一聊文件上传

00:04.180 --> 00:07.680
其实大家之前也做过文件上传 是吧

00:07.680 --> 00:11.680
只不过我们之前做的时候是利用一些线程的裤啊

00:11.680 --> 00:15.180
或者是框架里边的一些组件来做的

00:15.180 --> 00:18.680
其实它的文件上传的功能都已经给你实现好了

00:18.680 --> 00:21.180
你只需要按部就班的去使用就行了

00:21.180 --> 00:23.180
这样做其实还不够

00:23.180 --> 00:25.680
因为你们以后到了公司里边

00:25.680 --> 00:29.680
它的文件上传的场景是千奇百怪的

00:30.180 --> 00:33.680
所以说我们要能够应付各种文件上传的场景

00:33.680 --> 00:37.680
我们就必须要知道文件上传它到底发生了什么事

00:37.680 --> 00:39.680
它的消息传输是什么样子的

00:39.680 --> 00:42.680
那么我们才能够在不同的场景里边

00:42.680 --> 00:46.680
根据我们学过的原理然后去分开来处理

00:46.680 --> 00:48.680
所以这节课我们聊的文件上传的

00:48.680 --> 00:50.680
聊的是比较底层的啊

00:50.680 --> 00:52.680
聊的是它的消息格式

00:52.680 --> 00:55.680
聊的是我们用原生的介石

00:55.680 --> 00:56.680
如何实现文件上传

00:56.680 --> 00:58.680
这一点你也只要学会了

00:58.680 --> 01:00.680
就可以通过这些原理

01:00.680 --> 01:02.680
解决所有的文件上传的场景

01:02.680 --> 01:04.680
咱们来聊一聊

01:04.680 --> 01:06.680
首先是文件上传的消息格式

01:06.680 --> 01:09.680
因为我们知道无论是你提交一个表单

01:09.680 --> 01:11.680
还是你要做文件上传

01:11.680 --> 01:14.680
无非就是一堆数据跑到了服务器了

01:14.680 --> 01:16.680
无非就是这么一件事

01:16.680 --> 01:18.680
那么这件事的文件上传

01:18.680 --> 01:20.680
其实也就是一个数据提交

01:20.680 --> 01:22.680
无非就是数据量大一点

01:22.680 --> 01:26.680
其实ATDP协议并没有要求说

01:26.680 --> 01:28.680
文件上传必须要用什么样的消息格式

01:28.680 --> 01:30.680
它完全没有要求

01:30.680 --> 01:31.680
它觉得是一样的嘛

01:31.680 --> 01:32.680
有啥区别呢

01:32.680 --> 01:35.680
只是我们在平时的开发实践当中

01:35.680 --> 01:38.680
人们逐渐形成了一种共识

01:38.680 --> 01:40.680
觉得这个文件上传

01:40.680 --> 01:41.680
既然是大数据量

01:41.680 --> 01:43.680
里面有一些问题

01:43.680 --> 01:44.680
我们需要处理

01:44.680 --> 01:46.680
所以说它规定了一种比较

01:46.680 --> 01:48.680
大家都比较认可的

01:48.680 --> 01:49.680
这么一种消息格式

01:49.680 --> 01:51.680
但不是说一定的

01:51.680 --> 01:53.680
我们来看一下这个消息格式

01:53.680 --> 01:55.680
就这么一坨

01:56.680 --> 01:58.680
很乱对不对这个消息格式

01:58.680 --> 01:59.680
其实它一点都不乱

01:59.680 --> 02:00.680
非常的清晰

02:00.680 --> 02:01.680
咱们来看一下

02:01.680 --> 02:03.680
这里边其实表达了不少的东西

02:03.680 --> 02:05.680
一个是文件上传

02:05.680 --> 02:08.680
我们通常使用Pose的星球

02:08.680 --> 02:10.680
那别的星球能不能做呢

02:10.680 --> 02:11.680
也能做

02:11.680 --> 02:13.680
只不过我们通常使用Pose的星球

02:13.680 --> 02:15.680
然后这里写的是啥呢

02:15.680 --> 02:17.680
这里都是想请求行

02:17.680 --> 02:19.680
请求行里边这一部分就写的是

02:19.680 --> 02:20.680
上传地址

02:20.680 --> 02:22.680
那么这个上传地址呢

02:22.680 --> 02:23.680
一般来说

02:23.680 --> 02:25.680
接口文档会告诉你

02:25.680 --> 02:27.680
比方说这里一个接口势力

02:27.680 --> 02:29.680
这里一个统一上传接口

02:29.680 --> 02:30.680
就是上传文件的接口

02:30.680 --> 02:31.680
然后还会告诉你

02:31.680 --> 02:32.680
上传的路径在这

02:32.680 --> 02:33.680
你用这个路径

02:33.680 --> 02:35.680
请求这个路径来进行上传

02:35.680 --> 02:37.680
好咱们继续看

02:37.680 --> 02:39.680
然后写意的写一版本

02:39.680 --> 02:41.680
然后一些请求头都一样

02:41.680 --> 02:43.680
接下来看这个

02:43.680 --> 02:44.680
因为我们是Pose上传

02:44.680 --> 02:45.680
Pose请求

02:45.680 --> 02:47.680
所以说一定必不可少的

02:47.680 --> 02:49.680
有什么消息体

02:49.680 --> 02:50.680
对不对 请求体

02:50.680 --> 02:51.680
那么请求体

02:51.680 --> 02:52.680
我们通过这个字段

02:52.680 --> 02:53.680
来告诉服务器

02:53.680 --> 02:55.680
我的请求体的格式

02:55.680 --> 02:57.680
我们通常使用的格式是啥

02:57.680 --> 02:59.680
我们通常使用的格式是这个

02:59.680 --> 03:01.680
Application

03:01.680 --> 03:02.680
接审

03:02.680 --> 03:03.680
这是我们常见的一个

03:03.680 --> 03:05.680
消息体的格式

03:05.680 --> 03:07.680
那么文件上传这一块

03:07.680 --> 03:09.680
我们通常使用另外一种格式

03:09.680 --> 03:11.680
叫做Multipart formData

03:11.680 --> 03:13.680
formData就是表单数据

03:13.680 --> 03:15.680
Multipart就是多个表单数据

03:15.680 --> 03:17.680
就这么个意思

03:17.680 --> 03:19.680
接下来看这一坨

03:19.680 --> 03:21.680
这一坨是啥

03:21.680 --> 03:23.680
这一坨表示的是一个边界

03:23.680 --> 03:27.880
叫做定界浮

03:27.880 --> 03:28.880
定界

03:28.880 --> 03:31.200
它表示一个边界

03:31.200 --> 03:32.200
这一块是一个

03:32.200 --> 03:34.200
随机生成的一个制服串

03:34.200 --> 03:35.200
是浏览机自动生成的

03:35.200 --> 03:37.200
我们都不用管

03:37.200 --> 03:38.200
那么这个玩意到底有什么用的

03:38.200 --> 03:39.200
接下来

03:39.200 --> 03:40.200
我们来看一下

03:40.200 --> 03:41.200
它的消息体的格式

03:41.200 --> 03:42.200
这是请求体

03:42.200 --> 03:43.200
你会发现

03:43.200 --> 03:44.200
请求体里边

03:44.200 --> 03:45.200
它的格式

03:45.200 --> 03:46.200
跟我们的Application

03:46.200 --> 03:47.200
接审

03:47.200 --> 03:49.200
它就完全不一样了

03:49.200 --> 03:50.200
它的格式是这样子的

03:50.200 --> 03:51.200
它会使用你

03:51.200 --> 03:53.200
这里约定好的定界浮

03:53.200 --> 03:54.200
把这个请求体

03:54.200 --> 03:55.200
进行分割

03:55.200 --> 03:56.200
你看

03:56.200 --> 03:57.200
这两个定界浮

03:57.200 --> 03:59.200
分割出来就是这么一块区域

03:59.200 --> 04:01.200
然后这两个定界浮

04:01.200 --> 04:03.200
分割出来就是这么一个区域

04:03.200 --> 04:04.200
然后这两个定界浮

04:04.200 --> 04:06.200
分割出来就是这么一个区域

04:06.200 --> 04:07.200
对吧

04:07.200 --> 04:08.200
它把要上传

04:08.200 --> 04:09.200
就是要提交的数据

04:09.200 --> 04:11.200
放到这些区域里边

04:11.200 --> 04:12.200
这是第一个数据

04:12.200 --> 04:13.200
第二个数据

04:13.200 --> 04:14.200
第三个数据

04:14.200 --> 04:16.200
那么每一个数据是啥呢

04:16.200 --> 04:17.200
其实每一个数据

04:17.200 --> 04:19.200
它还是一个建制队

04:19.200 --> 04:20.200
你看我们Application

04:20.200 --> 04:21.200
不就是建制队吗

04:21.200 --> 04:23.200
那这一块其实还是建制队

04:23.200 --> 04:24.200
你看一下怎么

04:24.200 --> 04:25.200
怎么就是一个建制队呢

04:25.200 --> 04:26.200
你看这

04:26.200 --> 04:28.200
这前边的东西是固定的

04:28.200 --> 04:29.200
要说

04:29.200 --> 04:31.200
表示内容区域

04:31.200 --> 04:32.200
是一个formdata

04:32.200 --> 04:33.200
是一个表达数据

04:33.200 --> 04:34.200
这个都是固定写法

04:34.200 --> 04:35.200
接下来看这个

04:35.200 --> 04:36.200
这就是建

04:36.200 --> 04:38.200
它的建的名字叫做password

04:38.200 --> 04:39.200
密码

04:39.200 --> 04:40.200
建的值呢

04:40.200 --> 04:41.200
在这

04:41.200 --> 04:42.200
换一行

04:42.200 --> 04:43.200
在这

04:43.200 --> 04:44.200
它就也是建的队

04:44.200 --> 04:45.200
建和值

04:45.200 --> 04:46.200
你看这

04:46.200 --> 04:47.200
用户名

04:47.200 --> 04:48.200
建和值

04:48.200 --> 04:49.200
所以说

04:49.200 --> 04:50.200
通过这个例子

04:50.200 --> 04:51.200
你可以看到

04:51.200 --> 04:52.200
它的消息里边

04:52.200 --> 04:53.200
其实文件上传的时候

04:53.200 --> 04:55.200
它也可以放普通数据的

04:55.200 --> 04:56.200
没有任何问题的

04:56.200 --> 04:57.200
这个玩意

04:57.200 --> 04:59.200
也就是这个玩意呢

04:59.200 --> 05:01.200
它不仅仅可以用文件上传

05:01.200 --> 05:02.200
放普通数据也可以

05:02.200 --> 05:03.200
只不过它放普通数据

05:03.200 --> 05:04.200
有点太多说了

05:04.200 --> 05:06.200
写了一大堆就写了个建制队

05:06.200 --> 05:07.200
那我还不如

05:07.200 --> 05:09.200
用那个Application节省

05:09.200 --> 05:11.200
不过这种格式呢

05:11.200 --> 05:13.200
它是比较适合使用文件上传的

05:13.200 --> 05:15.200
那么文件上传里边

05:15.200 --> 05:16.200
我们要传文件

05:16.200 --> 05:17.200
那么传文件其实传的是

05:17.200 --> 05:20.200
文件的恶尽制数据

05:20.200 --> 05:21.200
那么它怎么放的呢

05:21.200 --> 05:22.200
它这样放的

05:22.200 --> 05:24.200
你看这一部分就是文件数据

05:24.200 --> 05:26.200
前面固定的对吧

05:26.200 --> 05:27.200
它的建是什么

05:27.200 --> 05:29.200
Avata表示我是一个头像

05:29.200 --> 05:30.200
那么这个玩意呢

05:30.200 --> 05:32.200
是由接口文档来规定的

05:32.200 --> 05:34.200
就这里建是什么名字

05:34.200 --> 05:36.200
由接口文档来规定

05:36.200 --> 05:38.200
这个大家应该能体会到吧

05:38.200 --> 05:39.200
你们提交的时候

05:39.200 --> 05:40.200
Poser提交的时候

05:40.200 --> 05:42.200
消息里边放哪些数据

05:42.200 --> 05:43.200
接口文档那边都有规定啊

05:43.200 --> 05:45.200
你看我们这个接口实例

05:45.200 --> 05:47.200
里边它告诉你自断名字 file

05:47.200 --> 05:48.200
那么如果说接口文档

05:48.200 --> 05:49.200
这样写的话

05:49.200 --> 05:51.200
那你这边就要写个 file

05:51.200 --> 05:52.200
这就要写成 file

05:52.200 --> 05:53.200
懂了意思吧

05:53.200 --> 05:54.200
这个是

05:54.200 --> 05:56.200
这个自断的意思

05:56.200 --> 05:57.200
这建的名字

05:57.200 --> 05:58.200
那它的值呢

05:58.200 --> 05:59.200
就在这

05:59.200 --> 06:00.200
值是什么

06:00.200 --> 06:02.200
值就是文件的恶尽制数据

06:02.200 --> 06:04.200
这里就没法写了

06:04.200 --> 06:05.200
一大堆

06:05.200 --> 06:06.200
那就非常非常大了

06:06.200 --> 06:07.200
文件的数据

06:07.200 --> 06:09.200
要比我们普通的一些文本数据

06:09.200 --> 06:11.200
要大得太多太多了

06:11.200 --> 06:12.200
总之恶尽制数据

06:12.200 --> 06:13.200
它就会放这

06:13.200 --> 06:15.200
然后你会发现在文件

06:15.200 --> 06:16.200
这一块区域的

06:16.200 --> 06:17.200
除了建制队之外

06:17.200 --> 06:19.200
除了这个和建和值之外

06:19.200 --> 06:21.200
它还放了一些别的信息

06:21.200 --> 06:22.200
比方说像这个 file name

06:22.200 --> 06:23.200
这个表示什么意思呢

06:23.200 --> 06:24.200
表示这个文件

06:24.200 --> 06:26.200
在扣护端的名字

06:26.200 --> 06:28.200
这个东西也会提交到服务器

06:28.200 --> 06:30.200
让服务器作为参考

06:30.200 --> 06:31.200
一般来说服务器

06:31.200 --> 06:33.200
不会直接使用你这个名字

06:33.200 --> 06:34.200
来保存文件

06:35.200 --> 06:36.200
你的文件

06:36.200 --> 06:37.200
你的文件

06:37.200 --> 06:40.200
写的是那个小纤绿

06:41.200 --> 06:42.200
小纤绿

06:42.200 --> 06:44.200
然后你把它发到服务器了

06:44.200 --> 06:45.200
发到服务器

06:45.200 --> 06:48.200
服务器能不能用这个小纤绿

06:48.200 --> 06:50.200
肯定是不行的

06:50.200 --> 06:51.200
为什么呢

06:51.200 --> 06:52.200
你想想为什么

06:53.200 --> 06:54.200
为啥呢

06:54.200 --> 06:56.200
如果说张山的系统里边

06:56.200 --> 06:58.200
有一个文件叫小纤绿

06:58.200 --> 06:59.200
理事的系统里边

06:59.200 --> 07:01.200
也有一个文件叫小纤绿

07:01.200 --> 07:02.200
如果说服务器

07:02.200 --> 07:04.200
用这个客户端的名字的话

07:04.200 --> 07:05.200
那么都存到服务器

07:05.200 --> 07:06.200
是不是造成文件名的冲突

07:06.200 --> 07:08.200
所以服务器一般

07:08.200 --> 07:10.200
会把这个文件的名字

07:10.200 --> 07:11.200
重新给你改一下保存

07:11.200 --> 07:13.200
改成一个唯一的名字

07:13.200 --> 07:14.200
当然这个改名字的

07:14.200 --> 07:15.200
其实有很多东西可以聊的

07:15.200 --> 07:17.200
不过这是服务器端的事

07:17.200 --> 07:18.200
跟你们没有什么关系

07:18.200 --> 07:20.200
总之他会给你重新生成的名字

07:20.200 --> 07:21.200
得顺便说一句

07:22.200 --> 07:23.200
好 这是

07:23.200 --> 07:24.200
这个文件名

07:24.200 --> 07:26.200
它会给你提供一些额外的信息

07:26.200 --> 07:27.200
除了建制队之外

07:27.200 --> 07:28.200
它会给你提供一些额外的信息

07:28.200 --> 07:29.200
比如说这是

07:29.200 --> 07:30.200
客户端的文件名字

07:30.200 --> 07:32.200
提供给服务器做参考

07:32.200 --> 07:35.200
然后这个是文件的MIMEG类型

07:35.200 --> 07:36.200
就是用一个字部刷

07:36.200 --> 07:37.200
来描述文件类型

07:37.200 --> 07:38.200
这是一个GPG文件

07:38.200 --> 07:39.200
懂了意思吧

07:39.200 --> 07:42.200
这就是文件上传的这么一个消息格式

07:42.200 --> 07:43.200
下面这几个点

07:43.200 --> 07:45.200
我就给大家列出来了

07:45.200 --> 07:47.200
我们首先认识这个消息格式

07:47.200 --> 07:48.200
我们在写单码的时候

07:48.200 --> 07:49.200
做文件上传

07:49.200 --> 07:50.200
是不是要手动的把消息

07:50.200 --> 07:51.200
改成这种格式呢

07:51.200 --> 07:52.200
不用

07:52.200 --> 07:54.200
这种格式其实浏览器

07:54.200 --> 07:57.200
有一些接口会让你自动去完成

07:57.200 --> 07:58.200
接下来我们来看一下

07:58.200 --> 07:59.200
文件上传的实现

07:59.200 --> 08:01.200
就是文如贺来去写单码

08:01.200 --> 08:03.200
在看这个之前

08:03.200 --> 08:06.200
其实我还想给大家演示一下

08:06.200 --> 08:08.200
让大家印象再深刻一点

08:08.200 --> 08:09.200
就这种格式

08:09.200 --> 08:10.200
那么这个时候

08:10.200 --> 08:12.200
我会用另外一个工具

08:12.200 --> 08:14.200
来去请求我们的服务器

08:14.200 --> 08:15.200
来进行上传文件

08:15.200 --> 08:17.200
这里我已经准备好了一个服务器

08:17.200 --> 08:18.200
就是后端服务器

08:18.200 --> 08:19.200
假设就是后端开发人员写的

08:19.200 --> 08:20.200
你不用管

08:20.200 --> 08:21.200
那么这一块

08:21.200 --> 08:23.200
我就是用漏断解释写的

08:23.200 --> 08:25.200
大家可以把这个服务器启动起来

08:25.200 --> 08:26.200
怎么启动呢

08:26.200 --> 08:27.200
点击右键

08:27.200 --> 08:28.200
在中端都打开

08:28.200 --> 08:31.200
然后这边你们要先安装依赖

08:31.200 --> 08:32.200
这里边有依赖

08:32.200 --> 08:33.200
你们要先安装依赖

08:33.200 --> 08:36.200
然后就可以运行NPM Start

08:36.200 --> 08:37.200
启动那个服务器

08:37.200 --> 08:39.200
那么服务器启动到8000端口

08:39.200 --> 08:40.200
所以说你可以通过

08:40.200 --> 08:42.200
ADDP Local Horst

08:42.200 --> 08:45.200
冒号8000来进行访问

08:45.200 --> 08:46.200
好 接下来

08:46.200 --> 08:47.200
我们如何来访问呢

08:47.200 --> 08:48.200
我们可以

08:48.200 --> 08:50.200
我们往往都是通过浏览器去访问

08:50.200 --> 08:51.200
有的时候

08:51.200 --> 08:54.200
其实我们在测试接口的时候

08:54.200 --> 08:56.200
可以完全脱离浏览器

08:56.200 --> 08:57.200
不需要浏览器

08:57.200 --> 08:59.200
你发一个ADDP请求谁不能发呢

08:59.200 --> 09:01.200
任何一个软件都可以发出

09:01.200 --> 09:02.200
ADDP请求

09:02.200 --> 09:04.200
浏览器只是启动一个软件而已

09:04.200 --> 09:05.200
我们可以完全可以用别的

09:05.200 --> 09:08.200
这个我给大家推荐一个软件叫Pose Man

09:08.200 --> 09:09.200
你们现在可以下载去

09:09.200 --> 09:11.200
买多去收一下安装

09:11.200 --> 09:14.200
这个玩意特别好去调试接口

09:14.200 --> 09:16.200
有的时候你们在开发过程中

09:16.200 --> 09:18.200
突然出现数据拿不到

09:18.200 --> 09:20.200
或者总是提交有问题

09:20.200 --> 09:23.200
你也无法可能找了半天错误

09:23.200 --> 09:24.200
调试了半天

09:24.200 --> 09:25.200
你也不知道这一块

09:25.200 --> 09:27.200
到底是你自己前端的代码出了问题

09:27.200 --> 09:29.200
还是服务端的代码出了问题

09:29.200 --> 09:31.200
怎么办呢 你就打开这个软件

09:31.200 --> 09:32.200
如果说这个软件

09:32.200 --> 09:33.200
你按照接口文章的

09:33.200 --> 09:34.200
要求去请求服务器

09:34.200 --> 09:35.200
没有问题的话

09:35.200 --> 09:37.200
那一定是你前端出了问题的

09:37.200 --> 09:39.200
如果这个软件都出了问题的话

09:39.200 --> 09:41.200
那就是给你前端代码就没关系了

09:41.200 --> 09:42.200
那就是服务器的问题

09:42.200 --> 09:43.200
可以就做调试的

09:43.200 --> 09:45.200
这里我们打开一个选项卡

09:45.200 --> 09:47.200
这里我们选择看一下接口文章

09:47.200 --> 09:49.200
我们完全按照接口文章来

09:49.200 --> 09:51.200
这里有个同一上传接口

09:51.200 --> 09:52.200
我们来看一下这个接口文章

09:52.200 --> 09:53.200
通过这个接口文章

09:53.200 --> 09:54.200
我们如何来上传文件

09:54.200 --> 09:55.200
首先他告诉你

09:55.200 --> 09:56.200
请求的路径是这个

09:56.200 --> 09:57.200
请求的方法是Pose

09:57.200 --> 10:00.200
于是这里调成Pose请求

10:00.200 --> 10:02.200
请求路径的了写完

10:02.200 --> 10:03.200
GDP 帽号

10:03.200 --> 10:04.200
首先前立条件

10:04.200 --> 10:06.200
你得把后端服务器启动起来

10:06.200 --> 10:07.200
一般的公司里边

10:07.200 --> 10:08.200
这个你不用管

10:08.200 --> 10:10.200
一般都是放到另外台积转机

10:10.200 --> 10:11.200
给你启动好的

10:11.200 --> 10:13.200
可以告诉你的访问地址是啥

10:13.200 --> 10:14.200
那么刚才我们看到

10:14.200 --> 10:16.200
我们的服务器的关口18000

10:16.200 --> 10:17.200
接下来是我们的路径

10:17.200 --> 10:19.200
路径就是API Upload

10:19.200 --> 10:21.200
这里我顺便说一下

10:21.200 --> 10:23.200
接口里边一般会给你一个

10:23.200 --> 10:24.200
统一上传接口

10:24.200 --> 10:26.200
但不是一定的

10:26.200 --> 10:27.200
什么叫统一上传接口呢

10:27.200 --> 10:29.200
就是整个网站

10:29.200 --> 10:31.200
可能有很多文件需要上传

10:31.200 --> 10:32.200
一些投降

10:32.200 --> 10:34.200
上传一些相册的图片

10:34.200 --> 10:36.200
或者是上传一些邮件的附件

10:36.200 --> 10:37.200
等等等等

10:37.200 --> 10:39.200
有各种各样的上传场地

10:39.200 --> 10:41.200
那么它都会使用一个接口来搞定

10:41.200 --> 10:43.200
所有的文件都上传到这个接口

10:43.200 --> 10:45.200
是这么个意思

10:45.200 --> 10:46.200
有的时候这个接口

10:46.200 --> 10:48.200
会让你提供一些额外的制断

10:48.200 --> 10:50.200
比如说Type制断

10:50.200 --> 10:51.200
告诉服务器

10:51.200 --> 10:52.200
你上传到底是啥

10:52.200 --> 10:53.200
是投降

10:53.200 --> 10:55.200
还是一个附件

10:55.200 --> 10:57.200
还是个家说宝宝到底是啥

10:57.200 --> 11:00.200
一般有可能会让你告诉他

11:00.200 --> 11:01.200
我们这里没有了

11:01.200 --> 11:03.200
直接上传就完事了

11:03.200 --> 11:04.200
请求帮忙Pose

11:04.200 --> 11:05.200
请求入境这个

11:05.200 --> 11:06.200
好

11:06.200 --> 11:08.200
接下来他会告诉你制断名字

11:08.200 --> 11:11.200
制断的名字呢

11:11.200 --> 11:12.200
就是指的是

11:12.200 --> 11:14.200
我们提交了请求题

11:14.200 --> 11:16.200
里边就这个地方

11:16.200 --> 11:18.200
这个地方的名字

11:18.200 --> 11:19.200
好

11:19.200 --> 11:20.200
那么我们在PoseMan里边怎么去设置呢

11:20.200 --> 11:21.200
首先你找到保底

11:21.200 --> 11:22.200
是不是请求题

11:22.200 --> 11:23.200
请求题里边

11:23.200 --> 11:24.200
他会让你选择

11:24.200 --> 11:25.200
请求题的格式

11:25.200 --> 11:26.200
你看这里边是有很多

11:26.200 --> 11:28.200
我们平时用的是什么呢

11:28.200 --> 11:30.200
我们平时用的是这种格式

11:30.200 --> 11:32.200
接生

11:32.200 --> 11:34.200
那么这种格式是IPTK型接生

11:34.200 --> 11:36.200
但是我们在文件上传的时候

11:36.200 --> 11:38.200
除非他的文档里边

11:38.200 --> 11:39.200
特别说明

11:39.200 --> 11:41.200
他说我这里的

11:41.200 --> 11:43.200
我这个文件上传的跟

11:43.200 --> 11:45.200
我们平时的场景不太一样

11:45.200 --> 11:47.200
我们这次文件上传的

11:47.200 --> 11:49.200
用的是IPTK型接生的格式

11:49.200 --> 11:50.200
那么这个时候

11:50.200 --> 11:52.200
你就要调成接生

11:52.200 --> 11:53.200
什么意思吧

11:53.200 --> 11:54.200
但是一般来说

11:54.200 --> 11:56.200
文件上传都不会用这种格式

11:56.200 --> 11:57.200
但是有的时候我确实

11:57.200 --> 11:59.200
遇到过一些场景

11:59.200 --> 12:00.200
一些第三方库

12:00.200 --> 12:01.200
或者是一些

12:01.200 --> 12:02.200
当时遇到过

12:02.200 --> 12:04.200
忘了是在哪个场景里面了

12:04.200 --> 12:05.200
它是用接生格式上传的

12:05.200 --> 12:06.200
那如果说用接生

12:06.200 --> 12:07.200
是格式上传文件的话

12:07.200 --> 12:08.200
那就是这样子

12:08.200 --> 12:09.200
就普通的接生格式

12:09.200 --> 12:11.200
比如说我这里一个文件file

12:11.200 --> 12:12.200
他告诉你文件的

12:12.200 --> 12:14.200
字段名是file对吧

12:14.200 --> 12:15.200
那么后边的要写文件的

12:15.200 --> 12:16.200
二进字数据

12:16.200 --> 12:17.200
那么这个二进字数据

12:17.200 --> 12:19.200
一般会进行BS60编码

12:19.200 --> 12:21.200
把文件进行BS60编码

12:21.200 --> 12:22.200
放到这个位置

12:22.200 --> 12:24.200
那就是很长一串了

12:24.200 --> 12:25.200
放到八老虎气

12:25.200 --> 12:27.200
那么这个BS60编码

12:27.200 --> 12:28.200
其实就是把一个文件的

12:28.200 --> 12:29.200
二进字数

12:29.200 --> 12:31.200
变成一个普通的制服创

12:31.200 --> 12:33.200
一个制服创而已

12:33.200 --> 12:34.200
那么就通过

12:34.200 --> 12:36.200
这种方式把并编码

12:36.200 --> 12:37.200
GS实际上是

12:37.200 --> 12:39.200
可以进行BS60编码的

12:39.200 --> 12:40.200
你可以去白头搜一下

12:40.200 --> 12:43.200
GSBS60就是一句话

12:43.200 --> 12:45.200
好那么这里顺便说一下

12:45.200 --> 12:46.200
但是如果说服务

12:46.200 --> 12:47.200
其他没有明确

12:47.200 --> 12:48.200
就是接口文档

12:48.200 --> 12:49.200
没有明确告诉你的话

12:49.200 --> 12:51.200
那么一般来说

12:51.200 --> 12:52.200
文件上传都是

12:52.200 --> 12:54.200
使用这个formdata

12:54.200 --> 12:55.200
其他这种格式

12:55.200 --> 12:57.200
其实就是这种格式

12:57.200 --> 12:59.200
multipartformdata

12:59.200 --> 13:01.200
懂得意思吗

13:01.200 --> 13:03.200
好 咱们来看

13:03.200 --> 13:04.200
回到这

13:06.200 --> 13:07.200
那么现在我们按照

13:07.200 --> 13:08.200
接口文档的要求

13:08.200 --> 13:10.200
把它设置成这种格式

13:10.200 --> 13:12.200
接下来我们来写文件

13:12.200 --> 13:13.200
那么这个地方

13:13.200 --> 13:14.200
我们可以选择

13:14.200 --> 13:16.200
是一个文本还是一个文件

13:16.200 --> 13:17.200
我们这里选择文件

13:17.200 --> 13:19.200
然后我们来这里选择keyz

13:19.200 --> 13:20.200
keyz是什么

13:20.200 --> 13:22.200
朋友们

13:22.200 --> 13:23.200
keyz是啥

13:23.200 --> 13:25.200
keyz就是这个自断名

13:25.200 --> 13:26.200
坚持对应吗

13:26.200 --> 13:27.200
对吧

13:27.200 --> 13:29.200
那么这是坚持值吗

13:29.200 --> 13:30.200
key value坚持对应吗

13:30.200 --> 13:34.200
说keyz就是按照文档的要求来写

13:34.200 --> 13:35.200
然后值呢

13:35.200 --> 13:38.200
它这个Posman里面

13:38.200 --> 13:39.200
给你非常友好的

13:39.200 --> 13:40.200
设置了这么一个按钮

13:40.200 --> 13:42.200
你可以点击选择文件

13:42.200 --> 13:44.200
我们这里选择一个文件

13:44.200 --> 13:47.200
比方说就选择

13:47.200 --> 13:51.200
找一个素材

13:52.200 --> 13:54.200
就写好了

13:54.200 --> 13:55.200
接下来我们直接发送请求

13:55.200 --> 13:56.200
我们看一下

13:56.200 --> 13:57.200
还有没有什么别的要求

13:57.200 --> 13:58.200
它告诉你尺寸限制

13:58.200 --> 14:00.200
这个文件不能超过一兆

14:00.200 --> 14:01.200
然后呢

14:01.200 --> 14:02.200
支持的文件后维名呢

14:02.200 --> 14:03.200
会这些

14:03.200 --> 14:04.200
这些在接口文档里面

14:04.200 --> 14:05.200
都会给你说明

14:05.200 --> 14:06.200
如果说你

14:06.200 --> 14:08.200
不满足尺寸的要求

14:08.200 --> 14:09.200
不满足文件后维的要求

14:09.200 --> 14:10.200
那么上传肯定要失败

14:10.200 --> 14:12.200
它会告诉你失败

14:12.200 --> 14:13.200
好

14:13.200 --> 14:14.200
接下来我们来看一下

14:14.200 --> 14:15.200
直接上传

14:17.200 --> 14:18.200
看到这种格式

14:18.200 --> 14:19.200
告诉你

14:19.200 --> 14:20.200
夫妻告诉你

14:21.200 --> 14:22.200
当然这种格式

14:22.200 --> 14:23.200
每个公司也不一样

14:23.200 --> 14:24.200
看接口文档

14:24.200 --> 14:25.200
扣的你表示错误消息

14:25.200 --> 14:27.200
为没有错误消息

14:27.200 --> 14:28.200
这没有错误消息

14:28.200 --> 14:29.200
然后这个data

14:29.200 --> 14:31.200
这个data里面

14:31.200 --> 14:32.200
就是告诉你

14:32.200 --> 14:33.200
这个文件已经成功了

14:33.200 --> 14:34.200
上传到了服务器了

14:34.200 --> 14:35.200
然后这边呢

14:35.200 --> 14:37.200
是文件的

14:37.200 --> 14:39.200
就是那个文件的

14:39.200 --> 14:41.200
访问路径

14:41.200 --> 14:42.200
你可以通过这个路径

14:42.200 --> 14:43.200
访问文件

14:43.200 --> 14:44.200
大家也可以看出

14:44.200 --> 14:45.200
这个路径里面

14:45.200 --> 14:46.200
跟我们这个文件

14:46.200 --> 14:47.200
就不太一样了

14:47.200 --> 14:48.200
我们这个文件是

14:48.200 --> 14:49.200
pipo1.png

14:49.200 --> 14:50.200
上传到过后了

14:50.200 --> 14:52.200
变成了这么G3UZS

14:52.200 --> 14:53.200
一大堆

14:53.200 --> 14:54.200
一厂算的字不串

14:54.200 --> 14:55.200
来表示这个文件名

14:55.200 --> 14:58.200
这主要是为了避免文件重名

14:58.200 --> 14:59.200
那么你可以

14:59.200 --> 15:00.200
其实你可以通过这个地址

15:00.200 --> 15:02.200
你就可以访问到这个图片

15:02.200 --> 15:03.200
因为它已经到了服务器了

15:03.200 --> 15:04.200
你访问那个服务器

15:04.200 --> 15:06.200
就可以访问到这个图片

15:06.200 --> 15:07.200
这就是一个文件

15:07.200 --> 15:08.200
上传完整流程

15:08.200 --> 15:09.200
当然这里

15:09.200 --> 15:11.200
我没有掩饰错误场景

15:11.200 --> 15:13.200
如果说发生了错误的话

15:13.200 --> 15:14.200
比方说你上传了

15:14.200 --> 15:15.200
一个很大的文件

15:16.200 --> 15:17.200
这个吧

15:17.200 --> 15:18.200
这个多子

15:18.200 --> 15:19.200
1.5兆

15:19.200 --> 15:21.200
看 尺寸超过限制了

15:21.200 --> 15:22.200
那么还可以告诉你

15:22.200 --> 15:23.200
一个错误消息

15:23.200 --> 15:25.200
文件大小超过限制

15:25.200 --> 15:27.200
如果说你上传了一个

15:27.200 --> 15:28.200
别的文件

15:28.200 --> 15:31.200
比方说我们这里找下载

15:31.200 --> 15:32.200
这个吧

15:34.200 --> 15:35.200
这是告诉你

15:35.200 --> 15:36.200
无销的文件内容

15:36.200 --> 15:38.200
这个内容我不支持

15:38.200 --> 15:39.200
就这么个意思

15:39.200 --> 15:40.200
这就是接口给你做好的

15:40.200 --> 15:41.200
后装开发的人给你做好的

15:41.200 --> 15:42.200
你都不用去管

15:43.200 --> 15:45.200
上传就成功了

15:45.200 --> 15:46.200
到了服务器了

15:46.200 --> 15:47.200
好 接下来我们来看一下

15:47.200 --> 15:49.700
这个地方

15:49.700 --> 15:50.700
这个按code

15:50.700 --> 15:51.700
code是什么呢

15:51.700 --> 15:54.700
就可以查看它原始的消息格式

15:54.700 --> 15:55.700
code

15:55.700 --> 15:56.700
我们可以看到

15:56.700 --> 15:58.700
在左边找到这个addp

15:58.700 --> 15:59.700
你可以看到

15:59.700 --> 16:01.700
这就是它原始的消息格式

16:01.700 --> 16:02.700
你看

16:02.700 --> 16:03.700
Pose请求

16:03.700 --> 16:04.700
请求的是这个路径

16:04.700 --> 16:05.700
然后呢

16:05.700 --> 16:06.700
它的

16:08.700 --> 16:10.700
content type

16:11.700 --> 16:13.700
这个消息内型

16:13.700 --> 16:15.700
就是multipart form data

16:15.700 --> 16:17.700
这里其实没有换行的

16:17.700 --> 16:19.700
是因为它这边显示不下了

16:19.700 --> 16:20.700
boundary

16:20.700 --> 16:21.700
是不是给生成了一个

16:21.700 --> 16:22.700
定界幅

16:22.700 --> 16:23.700
然后我们的文件数据

16:23.700 --> 16:24.700
是不是在这个

16:24.700 --> 16:25.700
两个定界幅里边

16:25.700 --> 16:27.700
这个data就是文件的

16:27.700 --> 16:28.700
二净值数据

16:28.700 --> 16:29.700
你看我们的建

16:29.700 --> 16:30.700
直

16:30.700 --> 16:31.700
它无非又是邦里

16:31.700 --> 16:32.700
Pose麦就是邦里

16:32.700 --> 16:33.700
生成这样的一个消息格式

16:33.700 --> 16:34.700
让你给你发出一个

16:34.700 --> 16:35.700
请求发过去了

16:36.700 --> 16:37.700
懂了意思吗

16:37.700 --> 16:38.700
OK

16:38.700 --> 16:39.700
那么这一块

16:39.700 --> 16:40.700
就是文件上传

16:40.700 --> 16:42.700
它的消息格式

16:42.700 --> 16:43.700
大家理解清楚

16:43.700 --> 16:44.700
好

16:44.700 --> 16:45.700
接下来我们来看一下

16:45.700 --> 16:46.700
在我们的实际开发中

16:46.700 --> 16:48.700
文件上传的场景

16:48.700 --> 16:49.700
我们为了获得

16:49.700 --> 16:50.700
更好的用户体验

16:50.700 --> 16:52.700
我们通常会用什么样的方式

16:52.700 --> 16:53.700
来进行文件上传

16:53.700 --> 16:55.700
这里我给它画了个

16:55.700 --> 16:56.700
示意图

16:57.700 --> 16:59.700
文件上传在页面上的

16:59.700 --> 17:01.700
这种展现模式

17:01.700 --> 17:03.700
其实千起百怪各种割压

17:03.700 --> 17:04.700
我这里画了

17:04.700 --> 17:05.700
一种比较常见的模式

17:07.700 --> 17:08.700
通过这种模式

17:08.700 --> 17:09.700
给大家一些启发

17:09.700 --> 17:10.700
以后在公司里面

17:10.700 --> 17:11.700
遇到了一些其他的模式

17:11.700 --> 17:12.700
你也知道灵活处理

17:13.700 --> 17:14.700
我们通常现在

17:14.700 --> 17:15.700
是这样子做的

17:15.700 --> 17:16.700
比方说有一个表单

17:16.700 --> 17:17.700
比方说就注册

17:17.700 --> 17:18.700
你要填账号

17:18.700 --> 17:19.700
填密码

17:19.700 --> 17:20.700
我这里没有写重复密码了

17:20.700 --> 17:21.700
然后呢

17:21.700 --> 17:22.700
填头像

17:22.700 --> 17:23.700
选头像的时候

17:23.700 --> 17:24.700
它一般会给你一些

17:24.700 --> 17:25.700
功能区域

17:25.700 --> 17:26.700
比方说一些按钮

17:26.700 --> 17:27.700
这些东西

17:27.700 --> 17:28.700
让你选择文件上传

17:28.700 --> 17:29.700
比方说

17:29.700 --> 17:30.700
我这里就有一个按钮

17:30.700 --> 17:32.700
一个上传文件的按钮

17:32.700 --> 17:34.700
点这个上传文件的按钮

17:34.700 --> 17:35.700
弹出一个框框

17:35.700 --> 17:36.700
让你选择一个文件

17:36.700 --> 17:37.700
选择好了文件过后

17:37.700 --> 17:38.700
这一步

17:38.700 --> 17:39.700
它就会发生一个

17:39.700 --> 17:40.700
阿迦克斯请求

17:40.700 --> 17:41.700
把文件的数据

17:41.700 --> 17:43.700
上传到服务器

17:43.700 --> 17:44.700
也就是我们刚才

17:44.700 --> 17:45.700
做的这个事

17:45.700 --> 17:46.700
就是统一上传

17:46.700 --> 17:47.700
接口就发生在这

17:48.700 --> 17:50.700
是在这一步发生的

17:51.700 --> 17:52.700
是在这一步发生的

17:52.700 --> 17:54.700
它不是在这里提交的时候

17:54.700 --> 17:55.700
发生上传的

17:55.700 --> 17:56.700
提交的时候

17:56.700 --> 17:57.700
没有上传文件了

17:57.700 --> 17:58.700
上传文件是在这里发生的

17:58.700 --> 18:00.700
把文件上传到服务器

18:00.700 --> 18:01.700
那么服务器

18:01.700 --> 18:02.700
我们刚才也看到了

18:02.700 --> 18:03.700
服务器是不是

18:03.700 --> 18:04.700
给我们一个文件

18:04.700 --> 18:05.700
访问地址

18:05.700 --> 18:06.700
我刚才还在浏览器

18:06.700 --> 18:07.700
本去访问了一下

18:07.700 --> 18:08.700
既然poseman里面

18:08.700 --> 18:09.700
可以看到

18:09.700 --> 18:10.700
服务器是不是会

18:10.700 --> 18:11.700
响应给我一个文件

18:11.700 --> 18:12.700
访问地址

18:12.700 --> 18:13.700
对吧

18:13.700 --> 18:14.700
那么服务器

18:14.700 --> 18:15.700
把这个文件地址

18:15.700 --> 18:16.700
就响应给了谁

18:16.700 --> 18:17.700
响应给了浏览器

18:17.700 --> 18:18.700
好 浏览器

18:18.700 --> 18:19.700
接下来就可以玩了

18:19.700 --> 18:20.700
可以各种玩法

18:20.700 --> 18:21.700
比方说浏览器

18:21.700 --> 18:22.700
可以这样子做

18:22.700 --> 18:23.700
也是常见的一种做法

18:23.700 --> 18:24.700
它既然把地址

18:24.700 --> 18:25.700
响应给我了

18:25.700 --> 18:27.700
比方说我上传的是一个图片

18:27.700 --> 18:28.700
那我是不是可以

18:28.700 --> 18:29.700
生成一个MG元素

18:29.700 --> 18:30.700
你看这

18:30.700 --> 18:31.700
是不是可以生成

18:31.700 --> 18:32.700
一个MG元素

18:32.700 --> 18:33.700
这个MG元素

18:33.700 --> 18:34.700
它就要设置一下

18:34.700 --> 18:36.700
这个src路径

18:36.700 --> 18:37.700
把src路径一设置

18:37.700 --> 18:38.700
设置成这个地址

18:38.700 --> 18:39.700
是不是一个MG

18:39.700 --> 18:40.700
就可以显示出来了

18:40.700 --> 18:41.700
对更用户的感觉的话

18:41.700 --> 18:43.700
就是这里选择一个文件

18:43.700 --> 18:44.700
稍微等了一下

18:44.700 --> 18:46.700
这个地方就显示出来了

18:47.700 --> 18:48.700
好 这是第三步

18:48.700 --> 18:50.700
浏览器会显示这个文件

18:50.700 --> 18:51.700
接下来最后一步

18:51.700 --> 18:52.700
就是点提交

18:52.700 --> 18:53.700
提交的时候

18:53.700 --> 18:54.700
跟上传有关系吗

18:54.700 --> 18:55.700
没关系了

18:55.700 --> 18:56.700
上传已经完成了

18:56.700 --> 18:57.700
提交的时候

18:57.700 --> 18:58.700
就是把这些信息

18:58.700 --> 18:59.700
什么账号信息

18:59.700 --> 19:01.700
密码信息

19:01.700 --> 19:02.700
包括之前

19:02.700 --> 19:03.700
浏览器响应了

19:03.700 --> 19:04.700
这个文件地址

19:04.700 --> 19:05.700
对吧

19:05.700 --> 19:06.700
你可以用个边量保存

19:06.700 --> 19:07.700
你用啥

19:07.700 --> 19:08.700
保存都无所谓

19:08.700 --> 19:09.700
总之你把这个信息

19:09.700 --> 19:10.700
和这个信息

19:10.700 --> 19:11.700
以及刚才的

19:11.700 --> 19:12.700
响应那个文件地址

19:12.700 --> 19:13.700
一起提交给服务器

19:13.700 --> 19:14.700
这一步有上传吧

19:14.700 --> 19:15.700
没有

19:16.700 --> 19:17.700
只是高速服务器

19:17.700 --> 19:19.700
我这个用户

19:19.700 --> 19:20.700
我的账号是这个

19:20.700 --> 19:21.700
密码是这个

19:21.700 --> 19:22.700
我的头像

19:22.700 --> 19:24.700
不是一个二进制数据

19:24.700 --> 19:25.700
我的头像是一个

19:25.700 --> 19:26.700
访问地址

19:26.700 --> 19:27.700
那服务器

19:27.700 --> 19:28.700
就会把它记录下来

19:29.700 --> 19:30.700
好好去梳理一下

19:30.700 --> 19:31.700
是这么一个流程

19:31.700 --> 19:33.700
那么这个时候

19:33.700 --> 19:35.700
我们来实战的

19:35.700 --> 19:36.700
去书写一段

19:36.700 --> 19:38.700
书写原生的纪念识

19:38.700 --> 19:39.700
把这个效果的给他实现

19:39.700 --> 19:41.700
这里有个静态页面

19:44.700 --> 19:45.700
其他启动者

19:45.700 --> 19:46.700
看一下静态页面

19:46.700 --> 19:47.700
这静态页面

19:47.700 --> 19:48.700
做的也比较丑

19:48.700 --> 19:49.700
就这么个意思

19:49.700 --> 19:50.700
就这么个意思

19:50.700 --> 19:52.700
我拿着去美化他了

19:52.700 --> 19:53.700
这个玩意不用讲了吧

19:53.700 --> 19:54.700
不用说这个页面

19:54.700 --> 19:55.700
是怎么做出来的吧

19:55.700 --> 19:56.700
这个没什么好说的

19:56.700 --> 19:57.700
就点点赞吧

19:57.700 --> 19:59.700
自己可以去看一下

20:00.700 --> 20:01.700
我们直接说功能

20:01.700 --> 20:03.700
怎么去实现他的功能

20:03.700 --> 20:04.700
一点点来做

20:04.700 --> 20:05.700
我们直接在这里

20:05.700 --> 20:07.700
去写一些介绍

20:10.700 --> 20:12.700
这个页面上有一些

20:12.700 --> 20:13.700
区域比方说

20:13.700 --> 20:14.700
帐号是一个音铺子框

20:14.700 --> 20:16.700
它的ID

20:16.700 --> 20:17.700
密码是一个音铺子框

20:17.700 --> 20:19.700
一个Password的一个

20:19.700 --> 20:20.700
上传文件

20:20.700 --> 20:21.700
我把这个删了

20:22.700 --> 20:23.700
上传文件

20:23.700 --> 20:25.700
其实就是这里一个按钮

20:25.700 --> 20:27.700
提交注册是这么一个按钮

20:27.700 --> 20:29.700
所以我这边的就

20:29.700 --> 20:30.700
把这些动品元素

20:30.700 --> 20:32.700
挨在这获取到吧

20:32.700 --> 20:33.700
我先把这些动品元素

20:33.700 --> 20:34.700
获取到

20:34.700 --> 20:35.700
反正肯定要用的

20:35.700 --> 20:37.700
一个是Uzername

20:38.700 --> 20:39.700
来自Uzername

20:40.700 --> 20:42.700
Priority is negative

20:43.700 --> 20:45.700
Uzername

20:46.700 --> 20:48.700
然后多来几个吧

20:48.700 --> 20:50.700
一个是Password

20:50.700 --> 20:51.700
密码

20:51.700 --> 20:56.100
然后是一个

20:56.100 --> 20:58.100
上传文件的个按钮

20:58.100 --> 21:01.100
Btn Upload

21:02.100 --> 21:05.100
来自于Btn Upload

21:06.100 --> 21:08.100
这边是提交注册的一个按钮

21:09.100 --> 21:10.100
SupMate

21:11.100 --> 21:14.100
是内样式

21:14.100 --> 21:15.100
SupMate

21:16.100 --> 21:17.100
好了

21:17.100 --> 21:18.100
那么接下来

21:18.100 --> 21:19.100
我们来做第一件事

21:19.100 --> 21:20.100
第一件事是

21:20.100 --> 21:22.100
我们要搞定上传文件

21:22.100 --> 21:24.100
这就是最核心的功能

21:24.100 --> 21:26.100
点击这个上传文件

21:26.100 --> 21:28.100
它现在要弹出一个框框

21:28.100 --> 21:30.100
文件选择框框

21:30.100 --> 21:32.100
那问题是咋弹出了

21:33.100 --> 21:34.100
见了鬼了

21:34.100 --> 21:35.100
这个玩意咋弹出了

21:35.100 --> 21:37.100
问题是咋弹出

21:37.100 --> 21:39.100
你要弹出这个框框

21:39.100 --> 21:41.100
如果说我们不考虑样式

21:41.100 --> 21:43.100
应该用啥

21:43.100 --> 21:44.100
是不是应该用一个元素

21:44.100 --> 21:46.100
叫做input file

21:47.100 --> 21:49.100
它的type file这么一个元素

21:49.100 --> 21:50.100
对不对

21:51.100 --> 21:52.100
顺便给它说一些

21:52.100 --> 21:53.100
我们平时开发的一些细节

21:53.100 --> 21:54.100
对吧

21:54.100 --> 21:55.100
是不是这么一个元素

21:55.100 --> 21:56.100
但这个元素

21:56.100 --> 21:57.100
肯定是可以弹出框框

21:57.100 --> 21:58.100
选择文件

21:58.100 --> 21:59.100
但是有一个问题

21:59.100 --> 22:01.100
这个元素

22:01.100 --> 22:02.100
它的显示

22:02.100 --> 22:04.100
在不同的操作系统上面

22:04.100 --> 22:06.100
显示的是不一样的样式

22:06.100 --> 22:07.100
因为它这里

22:07.100 --> 22:08.100
调用的是操作系统的

22:08.100 --> 22:09.100
那个文件选择

22:09.100 --> 22:10.100
懂不懂意思吧

22:10.100 --> 22:11.100
所以它在不同的

22:11.100 --> 22:12.100
操作系统里边

22:12.100 --> 22:13.100
它显示的样式不一样

22:13.100 --> 22:14.100
这就给我们的

22:14.100 --> 22:15.100
用户体验

22:15.100 --> 22:16.100
造成一些不好的影响

22:16.100 --> 22:17.100
这都是小事

22:17.100 --> 22:18.100
定功能那边

22:18.100 --> 22:19.100
什么关系的

22:19.100 --> 22:20.100
就是让用户体验

22:20.100 --> 22:21.100
舒服一点

22:21.100 --> 22:22.100
所以我们往往

22:22.100 --> 22:24.100
会自己定义一个按钮

22:24.100 --> 22:25.100
当时做成

22:25.100 --> 22:26.100
各个浏览器

22:26.100 --> 22:27.100
不同的操作系统

22:27.100 --> 22:28.100
看上去都是一样的

22:28.100 --> 22:29.100
但是这个按钮

22:29.100 --> 22:30.100
它又弹不出

22:30.100 --> 22:32.100
选择文件的框框

22:32.100 --> 22:33.100
怎么办呢

22:33.100 --> 22:34.100
就是特别简单

22:34.100 --> 22:35.100
我就做这么一件事

22:36.100 --> 22:37.100
我先给它ID

22:37.100 --> 22:38.100
这个元素

22:38.100 --> 22:39.100
我们一会要过去的

22:39.100 --> 22:40.100
Apploader吧

22:44.010 --> 22:45.010
叫做File

22:45.010 --> 22:46.010
Apploader

22:47.010 --> 22:49.010
这边我们再加一个

22:50.010 --> 22:51.010
File

22:51.010 --> 22:53.010
Apploader

22:53.010 --> 22:55.580
就这个元素

22:55.580 --> 22:56.580
我们怎么来做呢

22:56.580 --> 22:58.580
把它隐藏掉

23:02.170 --> 23:03.170
Display

23:05.170 --> 23:06.170
隐藏也看不见了

23:06.170 --> 23:08.170
但是它必须要有

23:08.170 --> 23:10.170
然后我给那个

23:11.170 --> 23:12.170
Button

23:12.170 --> 23:14.170
注册一个点击事件

23:15.170 --> 23:17.170
我不是要点它的时候

23:17.170 --> 23:19.170
我要点它的时候

23:19.170 --> 23:21.170
弹出文件选择吗

23:21.170 --> 23:22.170
那么就很简单了

23:22.170 --> 23:23.170
我点它的时候

23:23.170 --> 23:25.170
我强行让它也点一次

23:25.170 --> 23:26.170
是不是很简单了

23:26.170 --> 23:27.170
对吧

23:27.170 --> 23:28.170
它点击的时候

23:28.170 --> 23:29.170
怎么办

23:29.170 --> 23:30.170
我让Don'ts

23:30.170 --> 23:31.170
File

23:31.170 --> 23:32.170
Apploader

23:32.170 --> 23:33.170
Click

23:33.170 --> 23:34.170
它也去点一次

23:34.170 --> 23:35.170
不就弹出来了吗

23:35.170 --> 23:36.170
非常简单

23:36.170 --> 23:37.170
对吧

23:37.170 --> 23:38.170
你点是不是弹出来了

23:38.170 --> 23:39.170
好

23:39.170 --> 23:40.170
这件事就完成了

23:40.170 --> 23:41.170
但是现在上传没

23:41.170 --> 23:42.170
还没有上传

23:42.170 --> 23:43.170
只是选择文件

23:43.170 --> 23:44.170
那么现在我要做的是

23:44.170 --> 23:45.170
当它把文件

23:45.170 --> 23:47.170
选择完成之后

23:47.170 --> 23:49.170
它就要上传了

23:49.170 --> 23:50.170
然后选择到这个文件

23:50.170 --> 23:51.170
一打开

23:51.170 --> 23:52.170
这个事就要上传了

23:52.170 --> 23:53.170
好

23:53.170 --> 23:54.170
那么这又怎么办呢

23:55.170 --> 23:56.170
我们就要去注册

23:56.170 --> 23:57.170
这个事件

23:57.170 --> 23:59.170
它有一个事件

24:00.170 --> 24:01.170
可以监控

24:01.170 --> 24:02.170
它选择文件了

24:03.170 --> 24:04.170
就是这个文件上传框

24:04.170 --> 24:05.170
它有什么事件

24:05.170 --> 24:06.170
叫Unchanged

24:06.170 --> 24:07.170
就是它改变了

24:07.170 --> 24:08.170
对吧

24:08.170 --> 24:09.170
它的指是什么

24:09.170 --> 24:10.170
它指就是一个文件

24:10.170 --> 24:11.170
你选择的文件变了

24:11.170 --> 24:12.170
一开始没有文件

24:12.170 --> 24:13.170
现在选了一个文件

24:13.170 --> 24:14.170
对吧

24:14.170 --> 24:15.170
或者一开始是这个文件

24:15.170 --> 24:16.170
现在选择另外一个文件了

24:16.170 --> 24:17.170
它的文件变了

24:17.170 --> 24:18.170
那么它又会出发这个事件

24:18.170 --> 24:19.170
我们来打印一下吧

24:19.170 --> 24:20.170
123

24:22.170 --> 24:23.170
好

24:23.170 --> 24:24.170
我们来看一下

24:24.170 --> 24:25.170
点击上传

24:25.170 --> 24:26.170
随便找一个

24:26.170 --> 24:27.170
123

24:28.170 --> 24:29.170
对吧就输出了

24:29.170 --> 24:30.170
那么在这个时候

24:30.170 --> 24:31.170
我们要干嘛

24:31.170 --> 24:32.170
我们要上传文件

24:33.170 --> 24:34.170
我们选择好了文件

24:34.170 --> 24:35.170
这个时候要上传文件

24:36.170 --> 24:38.170
那么怎么来上传文件呢

24:39.170 --> 24:40.170
不就是一个

24:40.170 --> 24:41.170
大家都是请求接口嘛

24:41.170 --> 24:42.170
对吧

24:42.170 --> 24:44.170
只不过文件上传这一块呢

24:44.170 --> 24:46.170
如果说要我们自己去写这个

24:46.170 --> 24:48.170
自己去写这个content type

24:49.170 --> 24:50.170
有点繁琐

24:50.170 --> 24:51.170
对不对

24:51.170 --> 24:52.170
有点繁琐

24:52.170 --> 24:53.170
太麻烦了

24:53.170 --> 24:54.170
所以说瀏覽器

24:54.170 --> 24:55.170
给我们提供了一些API

24:55.170 --> 24:57.170
变了来生成这么一种消息

24:57.170 --> 24:58.170
提交到服务器

24:58.170 --> 24:59.170
好 那我们来写一下

24:59.170 --> 25:01.170
上传文件怎么做呢

25:01.170 --> 25:03.170
首先你要创建一个东西

25:03.170 --> 25:04.170
叫做formdata

25:05.170 --> 25:06.170
又一个formdata

25:07.170 --> 25:08.170
虽然创建这么一个东西

25:08.170 --> 25:09.170
这东西就是

25:09.170 --> 25:11.170
这东西其实就是那个

25:13.170 --> 25:14.170
martipart

25:14.170 --> 25:15.170
就是这个东西

25:15.170 --> 25:17.170
formdata就可以理解为这个东西

25:18.170 --> 25:19.170
多意思吧

25:19.170 --> 25:20.170
就可以理解为它就行了

25:22.170 --> 25:24.170
然后formdata里边

25:24.170 --> 25:26.170
我们可以使用一个方法叫append

25:26.170 --> 25:27.170
append是什么呢

25:27.170 --> 25:29.170
添加一个建值队

25:30.170 --> 25:32.170
添加一个建值队

25:34.170 --> 25:35.170
那就是添加这一坨对吧

25:35.170 --> 25:37.170
这就是一个建值队嘛

25:37.170 --> 25:40.170
对吧 两个定界符之间的东西

25:40.170 --> 25:41.170
然后会自动帮你生成

25:41.170 --> 25:42.170
你只需要写上

25:42.170 --> 25:44.170
建的名字和值的名字就是呢

25:44.170 --> 25:45.170
第一个参数是建

25:45.170 --> 25:46.170
第二个参数是值

25:47.170 --> 25:48.170
建的名字这里写啥呢

25:48.170 --> 25:49.170
是不是要看接口文档

25:50.170 --> 25:51.170
接口文档里边还会告诉你

25:51.170 --> 25:52.170
这个建的名字

25:52.170 --> 25:53.170
就自端名为file

25:54.170 --> 25:56.170
那么只要看接口文档

25:56.170 --> 25:57.170
不能自己在那里瞎写

25:58.170 --> 25:59.170
建的名字file

26:00.170 --> 26:02.170
那么值写啥呢

26:02.170 --> 26:04.170
值呢 这里是文件的

26:04.170 --> 26:06.170
二净值数据

26:06.170 --> 26:07.170
那么这个文件的

26:07.170 --> 26:09.170
二净值数据怎么获取呢

26:09.170 --> 26:10.170
非常简单

26:12.170 --> 26:14.170
你在这不是有个file upload吗

26:14.170 --> 26:15.170
就这个东西

26:15.170 --> 26:17.170
你找到这个元素

26:17.170 --> 26:18.170
这个元素里边呢

26:20.170 --> 26:22.170
file upload

26:23.170 --> 26:25.170
这个元素里边有个属性叫files

26:26.170 --> 26:29.170
这个元素实际上是可以加多个文件的

26:29.170 --> 26:31.170
只不过我们通常只需要一个就行了

26:32.170 --> 26:34.170
它有个文件的就是数据

26:34.170 --> 26:35.170
那么你这里取第一个

26:35.170 --> 26:37.170
因为我们这里只有一个文件

26:37.170 --> 26:39.170
你把这个文件给它就行了

26:40.170 --> 26:41.170
就把它加进去了

26:41.170 --> 26:43.170
于是这个变量

26:43.170 --> 26:45.170
它里边就是这个东西

26:45.170 --> 26:46.170
它里边就是这个东西

26:47.170 --> 26:49.170
不过它在戒严身边表现成一个对象

26:49.170 --> 26:51.170
它其实里边记录的就是这个东西

26:51.170 --> 26:52.170
你添加一个建设对

26:52.170 --> 26:53.170
它可以生成这么一个东西

26:53.170 --> 26:55.170
再添加一个它可以生成这么一个东西

26:55.170 --> 26:57.170
好 接下来就要发送阿迦克斯请求了

26:57.170 --> 26:58.170
那么阿迦克斯请求怎么发送呢

26:58.170 --> 26:59.170
不就是一个废弃吗

27:00.170 --> 27:01.170
请求谁

27:01.170 --> 27:02.170
请求哪个地址

27:03.170 --> 27:04.170
哪个地址

27:04.170 --> 27:05.170
看我戒严文档

27:05.170 --> 27:06.170
他告诉你请求这个地址

27:06.170 --> 27:08.170
当然你前面的一些

27:08.170 --> 27:09.170
adb

27:10.170 --> 27:11.170
localhost

27:12.170 --> 27:13.170
8000

27:13.170 --> 27:14.170
这个地址

27:14.170 --> 27:16.170
然后那后边写上一些配置

27:16.170 --> 27:17.170
method

27:17.170 --> 27:18.170
请求方法的post

27:19.170 --> 27:22.170
然后接下来请求的消息体呢

27:22.170 --> 27:23.170
消息体写上了

27:23.170 --> 27:25.170
这里你不需要写header

27:25.170 --> 27:26.170
你写消息体的话

27:26.170 --> 27:28.170
你直接把这个foamdata给它

27:28.170 --> 27:30.170
你的body就是为这个foamdata

27:32.170 --> 27:35.250
这样子一做

27:35.250 --> 27:36.250
它发现

27:36.250 --> 27:37.250
分析这个方法

27:37.250 --> 27:39.250
它发现你的body是这么一种格式

27:39.250 --> 27:40.250
它会自动调整

27:41.250 --> 27:43.250
它会自动给你调整成

27:43.250 --> 27:45.250
content type会自动给你调整成这样子

27:46.250 --> 27:47.250
懂了意思吧

27:48.250 --> 27:49.250
好 那么现在呢

27:49.250 --> 27:50.250
这个数据发过去了

27:50.250 --> 27:51.250
不信我们看一下

27:52.250 --> 27:55.690
这里我们选择一个头像

27:55.690 --> 27:57.690
选择一个pipo1

27:58.690 --> 27:59.690
提交

27:59.690 --> 28:00.690
点错了

28:00.690 --> 28:01.690
其实现在已经发过去了

28:01.690 --> 28:03.690
只是我们没有打印而已

28:03.690 --> 28:04.690
没有打印而已

28:07.690 --> 28:08.690
太肥了

28:08.690 --> 28:09.690
我们来看一下

28:09.690 --> 28:11.690
这里有个网络接口

28:12.690 --> 28:13.690
后续的

28:13.690 --> 28:14.690
后续应该是我没有选择

28:14.690 --> 28:16.690
这里没有选择

28:16.690 --> 28:17.690
有个foamdata

28:17.690 --> 28:18.690
里边没有选择

28:19.690 --> 28:20.690
这要看上面的

28:20.690 --> 28:21.690
我们刚才提交成功的人

28:22.690 --> 28:23.690
请求的时候你看

28:23.690 --> 28:24.690
content type

28:24.690 --> 28:25.690
multipartfoamdata

28:25.690 --> 28:26.690
一个bundle

28:26.690 --> 28:27.690
对吧

28:27.690 --> 28:28.690
然后我们看一下foamdata

28:28.690 --> 28:29.690
我们看一下原式格式

28:29.690 --> 28:30.690
原式格式就是这种

28:31.690 --> 28:32.690
它文件的二进之数据

28:32.690 --> 28:33.690
它就没法给你显示了

28:33.690 --> 28:34.690
不然这个显示出来

28:34.690 --> 28:35.690
那就差不多看不见了

28:36.690 --> 28:37.690
我在这里

28:37.690 --> 28:38.690
请求到了服务器了

28:38.690 --> 28:39.690
服务器有没有响应的

28:39.690 --> 28:40.690
我们看服务器的响应

28:40.690 --> 28:41.690
是不是响应的

28:41.690 --> 28:42.690
只不过现在没有豁去而已

28:42.690 --> 28:44.690
这接着就特别简单了

28:44.690 --> 28:45.690
我把豁去一下

28:45.690 --> 28:46.690
解析成接成

28:46.690 --> 28:47.690
服务器响应的

28:47.690 --> 28:48.690
普通的接成格式

28:48.690 --> 28:49.690
然后我们这里

28:49.690 --> 28:51.690
还设成而生不完

28:54.690 --> 28:56.690
好 这边我们得到

28:56.690 --> 28:58.690
服务器的响应结果

28:58.690 --> 29:00.690
这边我们输出一下

29:02.690 --> 29:03.690
好 接下来点击上传

29:08.690 --> 29:10.690
是因为我之前不是

29:10.690 --> 29:12.690
有一次把文件那个删了吗

29:12.690 --> 29:14.690
导致上传了个ngd犯的

29:14.690 --> 29:15.690
导致服务器挂掉了

29:15.690 --> 29:17.690
把服务器重新启动起来

29:19.690 --> 29:21.690
因为这里只是一个势力服务器

29:21.690 --> 29:22.690
所以说我写的带码了

29:22.690 --> 29:25.690
就没有去做更多的验证

29:25.690 --> 29:26.690
好 来吧

29:26.690 --> 29:28.690
再来一个文件

29:28.690 --> 29:31.900
刷新识

29:32.900 --> 29:33.900
上传一个文件

29:35.900 --> 29:36.900
OK 上传成功了

29:36.900 --> 29:37.900
接下来我们看控制台

29:37.900 --> 29:38.900
是不是打印出来的

29:38.900 --> 29:39.900
服务器的响应结果

29:39.900 --> 29:40.900
我们腰的是

29:40.900 --> 29:41.900
腰的就是这个东西

29:42.900 --> 29:43.900
腰的就是这个

29:43.900 --> 29:44.900
data

29:44.900 --> 29:46.900
好 接下来我们怎么做呢

29:46.900 --> 29:47.900
我们是不是要在这里

29:47.900 --> 29:48.900
显示出一张图片

29:48.900 --> 29:49.900
对吧

29:49.900 --> 29:50.900
现在我们进入到哪一步了

29:50.900 --> 29:51.900
到这一步了

29:52.900 --> 29:54.900
现在我们这一步是不是完成了

29:54.900 --> 29:55.900
服务器的响应访问地址完成了

29:55.900 --> 29:57.900
接下来拿到浏览器这边

29:57.900 --> 29:58.900
浏览器就生成一个

29:58.900 --> 29:59.900
img元素放这

29:59.900 --> 30:00.900
不就完了吗

30:00.900 --> 30:01.900
好 那么我们这里

30:01.900 --> 30:02.900
就生成一个img元素

30:02.900 --> 30:04.900
别玩弄在这吧

30:05.900 --> 30:06.900
写个img元素

30:06.900 --> 30:07.900
先放这 给它个id

30:08.900 --> 30:09.900
id

30:10.900 --> 30:11.900
就是vata

30:12.900 --> 30:13.900
投降

30:14.900 --> 30:16.900
我们这里先获取这个元素

30:16.900 --> 30:17.900
vata

30:17.900 --> 30:23.840
好 拿到img元素

30:23.840 --> 30:25.840
拿到img元素一开始的时候没有

30:25.840 --> 30:26.840
为啥没有

30:27.840 --> 30:28.840
它没有图片路径啊

30:28.840 --> 30:30.840
所以说我们这边只需要找到

30:30.840 --> 30:31.840
这个ervata

30:31.840 --> 30:33.840
给它的src设置为什么呢

30:33.840 --> 30:36.840
设置为服务器响应的data

30:36.840 --> 30:37.840
对吧 那个图片路径就可以了

30:37.840 --> 30:38.840
好 接下来我们再看

30:38.840 --> 30:39.840
点击上传

30:40.840 --> 30:41.840
选择一个图片

30:41.840 --> 30:42.840
它就会到服务器

30:42.840 --> 30:43.840
服务器响应给我们地址

30:43.840 --> 30:44.840
响应给我们地址

30:44.840 --> 30:46.840
过后我们再用img元素

30:46.840 --> 30:47.840
先把它显示出来

30:48.840 --> 30:49.840
当然这里也可以

30:49.840 --> 30:51.840
可以在这里进行切换

30:52.840 --> 30:53.840
这里进行切换

30:55.840 --> 30:57.840
好 那么最后就是点击这个按钮了

30:57.840 --> 30:58.840
这个按钮其实跟上传

30:58.840 --> 31:00.840
就没有任何一毛钱关系了

31:00.840 --> 31:02.840
但是我还是把它做一下吧

31:02.840 --> 31:03.840
那么这里我先说一下

31:04.840 --> 31:06.840
就是在文件上传的时候

31:06.840 --> 31:08.840
服务器那边肯定会去验证

31:08.840 --> 31:10.840
文件的尺寸

31:10.840 --> 31:12.840
文件的后罪名释放证券

31:12.840 --> 31:14.840
服务器肯定是要验证的

31:15.840 --> 31:17.840
但是一般来说

31:17.840 --> 31:20.840
公司都会要求你前端先验证

31:21.840 --> 31:22.840
为什么呢

31:22.840 --> 31:24.840
是因为服务器为了安全

31:24.840 --> 31:25.840
它肯定要验证

31:25.840 --> 31:26.840
它不能

31:26.840 --> 31:28.840
服务器是绝对不会相信前端的

31:29.840 --> 31:32.840
不是说不相信前端开发者

31:32.840 --> 31:35.840
是因为adb请求是谁都可以发

31:35.840 --> 31:37.840
这个服务器它不知道这个请求过来了

31:41.840 --> 31:43.840
这个请求它过来了

31:43.840 --> 31:45.840
它不知道这个请求到底是谁发过来的

31:45.840 --> 31:47.840
有可能就是我们刚才用PoseMan发过来的

31:47.840 --> 31:48.840
对吧

31:48.840 --> 31:51.840
它不能假定这个请求一定是正确的

31:51.840 --> 31:53.840
它说的是它就会做很多很多的验证

31:54.840 --> 31:56.840
那么既然它做了验证

31:56.840 --> 31:57.840
为什么前端

31:57.840 --> 31:59.840
前端这一块它也要验证了

31:59.840 --> 32:02.840
是因为为了减少服务器压力

32:02.840 --> 32:04.840
一个是为了减少服务器压力

32:04.840 --> 32:06.840
二个是为了提高用户体验

32:06.840 --> 32:07.840
那你想啊

32:07.840 --> 32:09.840
如果说你啥验证都不做

32:09.840 --> 32:11.840
这也是同学们常见的问题

32:11.840 --> 32:13.840
为什么服务器验证了我还要验证一次

32:13.840 --> 32:15.840
为什么我验证了服务器还要验证一次

32:15.840 --> 32:17.840
你验证了服务器肯定要验证

32:17.840 --> 32:19.840
因为服务器不能相信前端发过来的adb请求

32:20.840 --> 32:22.840
那为什么服务器验证了我还要验证呢

32:23.840 --> 32:24.840
是因为

32:24.840 --> 32:26.840
如果说你啥事都交给服务器的话

32:26.840 --> 32:30.840
那么就意味着你任何的验证都要先跑到服务器

32:30.840 --> 32:32.840
然后服务器把验证结果告诉你再跑回来

32:33.840 --> 32:34.840
浪费时间不

32:35.840 --> 32:37.840
用户等的慌不慌

32:37.840 --> 32:38.840
对吧

32:38.840 --> 32:40.840
所以为了提高用户体验和减少服务器压力

32:40.840 --> 32:44.840
我们很多验证前端能做的自己先把它做一遍

32:44.840 --> 32:45.840
对吧

32:45.840 --> 32:46.840
有一些明显的错误

32:46.840 --> 32:49.840
比方说你用户名验都没验密码验都没验

32:49.840 --> 32:50.840
我到什么服务器啊

32:50.840 --> 32:52.840
虽然到服务器服务器那边也不会通过了

32:52.840 --> 32:53.840
也会验证的

32:53.840 --> 32:54.840
但是为什么要到服务器啊

32:54.840 --> 32:55.840
我直接搞领导对吧

32:55.840 --> 32:57.840
少去反服务器

32:57.840 --> 32:59.840
这是有这么一个逻辑在里面

32:59.840 --> 33:01.840
因此在文件上传的场景也是一样的

33:01.840 --> 33:03.840
然后客户端能够判断那个

33:04.840 --> 33:06.840
文件的尺寸合规

33:06.840 --> 33:07.840
是不是合规的

33:07.840 --> 33:08.840
结合文件里面都有一些

33:09.840 --> 33:11.840
包括文件的后维是不是正确的

33:11.840 --> 33:14.840
那么你可以自行签在这里验证

33:16.840 --> 33:21.840
一般先会在这里对文件进行验证

33:21.840 --> 33:24.840
表面有没有文件有没有上传啊

33:24.840 --> 33:25.840
对吧

33:25.840 --> 33:26.840
我们来看一下

33:26.840 --> 33:27.840
那如何验证呢

33:27.840 --> 33:29.840
你其实把这个东西打印出来就明白了

33:30.840 --> 33:31.840
upload files

33:31.840 --> 33:33.840
就把这个属性打印出来就明白了

33:36.840 --> 33:37.840
我选了一个文件

33:38.840 --> 33:40.840
你看它就是一个伪数组对吧

33:40.840 --> 33:41.840
那么这个数组里面

33:41.840 --> 33:42.840
每一项就是一个文件

33:42.840 --> 33:44.840
那你如果说这个数组长度为0

33:44.840 --> 33:46.840
说明啥你根本就没有选择文件

33:46.840 --> 33:47.840
就可以直接先

33:47.840 --> 33:48.840
啪死掉了

33:48.840 --> 33:50.840
就不要去反服务器了

33:50.840 --> 33:52.840
那如果说你选择的文件过后

33:52.840 --> 33:53.840
那么拿到第1个文件

33:53.840 --> 33:55.840
你看文件里面有很多信息

33:55.840 --> 33:56.840
这个文件的名字

33:56.840 --> 33:57.840
文件的size

33:57.840 --> 33:59.840
这个是字节

33:59.840 --> 34:00.840
字节

34:00.840 --> 34:02.840
1020个字节等于1kb

34:02.840 --> 34:04.840
1020kb等于1兆你自己去算

34:04.840 --> 34:06.840
看那个尺寸数字满足要求

34:06.840 --> 34:08.840
然后是文件的MIME类型

34:08.840 --> 34:09.840
对吧

34:09.840 --> 34:10.840
那么从这里可以拿到文件的后维

34:10.840 --> 34:12.840
看后维满足要求

34:12.840 --> 34:13.840
字节弄

34:13.840 --> 34:14.840
这是那个

34:14.840 --> 34:16.840
上一次文件修改的时间戳

34:16.840 --> 34:17.840
都可以看得到

34:18.840 --> 34:19.840
那么这些信息

34:19.840 --> 34:21.840
就可以供你在这里先做验证

34:21.840 --> 34:22.840
那么这里我就不说了

34:24.840 --> 34:25.840
好 接下来我们继续往后做

34:25.840 --> 34:27.840
其实后边的东西都没啥了

34:27.840 --> 34:28.840
继续往后做

34:28.840 --> 34:29.840
比方点这个按钮的时候

34:29.840 --> 34:31.840
我要去做一件

34:31.840 --> 34:32.840
来吧

34:33.840 --> 34:35.840
DOMS

34:35.840 --> 34:36.840
一个什么submiss按钮

34:36.840 --> 34:37.840
点击的时候

34:40.790 --> 34:41.790
在这里点击的时候

34:41.790 --> 34:43.790
我们去做一些事

34:43.790 --> 34:44.790
其实就是一个阿拉克斯请求

34:44.790 --> 34:45.790
不要说这里的我写的

34:45.790 --> 34:46.790
一个几口四厘

34:46.790 --> 34:48.790
就做一个用户注册吧

34:48.790 --> 34:50.790
那么这件事跟文件上团有关系吗

34:50.790 --> 34:51.790
一毛钱关系都没有了

34:51.790 --> 34:52.790
对吧

34:52.790 --> 34:53.790
一点关系都没有了

34:53.790 --> 34:54.790
那么去请求这个地址

34:55.790 --> 34:56.790
那么我就来吧

34:56.790 --> 34:57.790
直接去请求这个地址

34:58.790 --> 34:59.790
ADP

34:59.790 --> 35:00.790
localhost

35:00.790 --> 35:01.790
8000

35:02.790 --> 35:03.790
API

35:03.790 --> 35:05.790
user

35:05.790 --> 35:06.790
请求方法

35:07.790 --> 35:08.790
method

35:08.790 --> 35:09.790
post

35:10.790 --> 35:11.790
请求方法post

35:11.790 --> 35:13.790
知识的消息内容就是content type

35:13.790 --> 35:15.790
那么这两个都可以

35:15.790 --> 35:16.790
这两个都可以

35:16.790 --> 35:18.790
那么我们一般来说会选择

35:19.790 --> 35:20.790
使用

35:20.790 --> 35:21.790
content type

35:21.790 --> 35:23.790
使用IPK性接受

35:24.790 --> 35:25.790
当然看服务器知识是什么

35:25.790 --> 35:26.790
有些服务器两种都知识

35:26.790 --> 35:28.790
有些服务器知识是一种

35:30.790 --> 35:32.790
那么这些好户就是body

35:32.790 --> 35:34.790
我要用json

35:34.790 --> 35:35.790
stun key犯

35:36.790 --> 35:37.790
把对象变成json格式

35:37.790 --> 35:38.790
它要让你双团什么东西呢

35:38.790 --> 35:39.790
就是这三个东西

35:39.790 --> 35:40.790
三个字段要上团

35:40.790 --> 35:41.790
一个是user name

35:41.790 --> 35:43.790
user name来自于什么

35:43.790 --> 35:44.790
来自于dorms

35:44.790 --> 35:45.790
user name等by6

35:46.790 --> 35:47.790
password

35:47.790 --> 35:48.790
来自于dorms

35:48.790 --> 35:49.790
password.by6

35:49.790 --> 35:50.790
还有一个erbata

35:50.790 --> 35:51.790
那么头像呢

35:52.790 --> 35:53.790
头像我们之前是来自于

35:53.790 --> 35:55.790
之前的服务器的响应结果

35:55.790 --> 35:57.790
哪里可以用边量保存一下

35:57.790 --> 35:59.790
也可以直接通过这个ABG元素

35:59.790 --> 36:00.790
或许它的src也行

36:00.790 --> 36:01.790
dorms

36:02.790 --> 36:03.790
erbata

36:04.790 --> 36:05.790
去看你自己喜欢哪一种

36:05.790 --> 36:06.790
都喜欢

36:06.790 --> 36:07.790
总之你把它给它就行了

36:09.790 --> 36:10.790
就穿过去了

36:11.790 --> 36:12.790
然后我们在这里呢

36:16.790 --> 36:17.790
我怎么选择了

36:22.160 --> 36:24.730
对了

36:24.730 --> 36:25.730
没问题

36:26.730 --> 36:27.730
我怎么刚才这里走

36:27.730 --> 36:28.730
把下面都折起来

36:30.730 --> 36:31.730
然后

36:31.730 --> 36:32.730
这边

36:32.730 --> 36:33.730
再上一个sync

36:34.730 --> 36:35.730
等待

36:35.730 --> 36:37.730
等待服务器的响应结果

36:37.730 --> 36:43.160
这个注册我就是

36:43.160 --> 36:45.160
服务器那边就随便写一下

36:45.160 --> 36:46.160
我也没有用数据库

36:46.160 --> 36:47.160
这是假的

36:47.160 --> 36:49.160
就是给它演示一下而已

36:50.160 --> 36:51.160
那么这里

36:51.160 --> 36:53.160
直接就输出一下就行了吧

36:53.160 --> 36:54.160
输出一下

36:54.160 --> 36:56.160
当然在做这件事情之前

36:56.160 --> 36:57.160
最好验证一下

36:58.160 --> 36:59.160
你这个东西

36:59.160 --> 37:00.160
是不是空的

37:00.160 --> 37:01.160
有没有上传图片

37:01.160 --> 37:02.160
没有上传图片

37:02.160 --> 37:03.160
我现在不让你注册

37:03.160 --> 37:04.160
我给你提示消息

37:04.160 --> 37:05.160
这个玩意我也验证一下

37:05.160 --> 37:06.160
这个玩意也验证一下

37:07.160 --> 37:09.160
其实这些事情的服务器也有验证

37:09.160 --> 37:10.160
但是你最好先验证一下

37:10.160 --> 37:11.160
减少服务器的压力

37:11.160 --> 37:12.160
那我那个服务器

37:12.160 --> 37:13.160
我就随便写的写的

37:13.160 --> 37:14.160
比如说没有验证

37:14.160 --> 37:15.160
拿去验证了

37:15.160 --> 37:16.160
我主要是说

37:16.160 --> 37:17.160
为了说我念上传

37:17.160 --> 37:18.160
好

37:18.160 --> 37:19.160
咱们来看一下吧

37:19.160 --> 37:21.160
接下来我们上传一个文件

37:21.160 --> 37:23.160
拿一个gip

37:23.160 --> 37:25.160
接下来账号

37:25.160 --> 37:26.160
密码

37:26.160 --> 37:28.160
然后点击提交

37:29.160 --> 37:30.160
服务器告诉我

37:30.160 --> 37:31.160
注册成功

37:31.160 --> 37:32.160
你的

37:32.160 --> 37:33.160
头像是这个地址

37:33.160 --> 37:35.160
你的用户名是这个

37:35.160 --> 37:36.160
后续你要做什么

37:36.160 --> 37:37.160
那就是后续的事了

37:37.160 --> 37:38.160
你要挑转页面

37:38.160 --> 37:39.160
挑转到欢迎页面

37:39.160 --> 37:40.160
挑转到首页

37:40.160 --> 37:41.160
挑转到高层中心

37:41.160 --> 37:42.160
那无所谓了

37:42.160 --> 37:43.160
跟这个没关系了

37:43.160 --> 37:44.160
OK

37:44.160 --> 37:48.160
这就是完整的文件上传的流程

37:48.160 --> 37:49.160
你只要牢牢记住这个

37:49.160 --> 37:50.160
文件上传的本质

37:50.160 --> 37:53.160
就是发这么一个消息到服务器

37:53.160 --> 37:54.160
就完事了

37:54.160 --> 37:57.160
那么什么时候发这个消息

37:57.160 --> 37:59.160
在页面点什么操作的时候

37:59.160 --> 38:00.160
发这个消息

38:00.160 --> 38:02.160
具体情况具体分析

38:02.160 --> 38:04.160
比方说像这个地方

38:04.160 --> 38:06.160
我就是在点这个按钮的时候

38:06.160 --> 38:07.160
发生这个消息过去

38:07.160 --> 38:09.160
这个消息就到了服务器

38:09.160 --> 38:11.160
过后服务器一般会给力一个响应

38:11.160 --> 38:12.160
访问地址

38:12.160 --> 38:13.160
那么通过地址

38:13.160 --> 38:14.160
就可以访问到这个文件

38:15.160 --> 38:16.160
这就是文件上传

