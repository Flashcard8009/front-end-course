WEBVTT

00:00.240 --> 00:04.440
好了 同学们 这期课咱们来详细的说一下这个Cookie

00:04.440 --> 00:07.140
可能时间稍微有点长

00:07.140 --> 00:10.140
但是通过这期课大家可以对Cookie这个东西

00:10.140 --> 00:12.640
有一个非常非常全面的认识

00:12.640 --> 00:17.340
将来遇到任何的Cookie的面试题都不会有任何问题了

00:17.340 --> 00:20.340
说清楚这个Cookie的话

00:20.340 --> 00:23.340
首先我们从一个问题出发吧

00:23.340 --> 00:26.840
实际上Cookie跟我们的

00:27.340 --> 00:30.340
很多时候跟我们的登录是有极大的关系的

00:30.340 --> 00:33.340
但是它不一定只限于登录这个场景

00:33.340 --> 00:35.840
一些别的场景也可以使用它

00:35.840 --> 00:37.340
它到底是一个什么东西呢

00:37.340 --> 00:38.840
咱们来先看一个问题

00:38.840 --> 00:41.840
比方说我们服务器提供了一个接口

00:41.840 --> 00:43.840
你请求一个地址

00:43.840 --> 00:45.840
然后比方说是Poser请求

00:45.840 --> 00:47.840
就可以添加一个管理员

00:47.840 --> 00:50.840
但是不是任何人都有权利去做这个事

00:50.840 --> 00:53.840
比方说你是一个普通的用户

00:53.840 --> 00:55.840
你不可能去添加淘宝的管理员

00:55.840 --> 00:58.840
不可能去添加一个京东的管理员

00:58.840 --> 01:01.840
那么服务器它是如何知道

01:01.840 --> 01:04.840
请求这个接口的人是有这个权利的呢

01:04.840 --> 01:07.840
那么比方说我们的场景的场景就是

01:07.840 --> 01:10.840
只有登录过的管理员

01:10.840 --> 01:13.840
才能去添加别的管理员

01:13.840 --> 01:15.840
那问题来了

01:15.840 --> 01:18.840
客户端就是浏览器跟服务器之间传输的时候

01:18.840 --> 01:20.840
使用的是ATP协议

01:20.840 --> 01:23.840
而这个ATP协议它是没有状态的

01:23.840 --> 01:24.840
什么叫没有状态呢

01:24.840 --> 01:27.840
就是说这个服务器它不知道

01:27.840 --> 01:30.840
你这一次过来请求的人

01:30.840 --> 01:32.840
就是上一次请求的人

01:32.840 --> 01:33.840
他不知道的

01:33.840 --> 01:36.840
就好必须说你到银行里边去搬一半业务

01:36.840 --> 01:38.840
你跟银行说我娶点钱

01:38.840 --> 01:40.840
银行问你这样有账号密码

01:40.840 --> 01:42.840
你说不用我刚刚才来过

01:42.840 --> 01:43.840
银行说我忘了

01:43.840 --> 01:44.840
我不知道你刚刚才来过

01:44.840 --> 01:46.840
我怎么能确定你刚刚才来过呢

01:46.840 --> 01:49.840
所以你还是得给我重新给我账号密码

01:49.840 --> 01:52.840
下面一张图就可以很容易说清楚这个问题

01:52.840 --> 01:54.840
比方说这个浏览器

01:54.840 --> 01:55.840
他把这个账号密码了

01:55.840 --> 01:57.840
附在给服务器登录

01:57.840 --> 01:58.840
然后服务器告诉他

01:58.840 --> 01:59.840
你登入成功了

01:59.840 --> 02:00.840
你这一次OK了

02:00.840 --> 02:02.840
然后客户端走了

02:02.840 --> 02:03.840
离开了

02:03.840 --> 02:05.840
过了一会客户端又跑过来说

02:05.840 --> 02:07.840
我要添加一个管理员

02:07.840 --> 02:09.840
这个服务器就蒙了

02:09.840 --> 02:11.840
你是谁啊

02:11.840 --> 02:13.840
你有没有这个权利啊

02:13.840 --> 02:15.840
你说我刚刚才登入成功的

02:15.840 --> 02:16.840
服务器我不知道啊

02:16.840 --> 02:18.840
因为ATP协议是无状态的

02:18.840 --> 02:21.840
他一旦完成请求和响应之后

02:21.840 --> 02:24.840
这个连接就被断开了

02:24.840 --> 02:25.840
断开交了

02:25.840 --> 02:27.840
而连接一断开服务器就不知道

02:27.840 --> 02:30.840
之前来过那个人到底是谁了

02:30.840 --> 02:32.840
因此你后边再请求的时候

02:32.840 --> 02:33.840
服务器就不知道

02:33.840 --> 02:35.840
你这个客户端

02:35.840 --> 02:38.840
是之前请求登入成功的那个客户端吗

02:38.840 --> 02:39.840
不知道了

02:39.840 --> 02:41.840
这就是无状态

02:41.840 --> 02:43.840
那么这个时候咋办

02:43.840 --> 02:45.840
你不可能说我要去做这些操作的时候

02:45.840 --> 02:47.840
我每一次都要附在账号密码

02:47.840 --> 02:48.840
那这样子行不行

02:48.840 --> 02:49.840
那理论上是可以的

02:49.840 --> 02:51.840
那这样子是不是太麻烦了呀

02:51.840 --> 02:52.840
对不对

02:52.840 --> 02:53.840
每一次都要附在账号密码

02:53.840 --> 02:55.840
你做任何操作都要去重新登入

02:55.840 --> 02:57.840
账号密码一次

02:57.840 --> 02:59.840
这太麻烦了

02:59.840 --> 03:01.840
所以说这个时候就要想办法了

03:01.840 --> 03:03.840
那具体怎么办呢

03:03.840 --> 03:05.840
于是服务器可以想出这么一个办法

03:05.840 --> 03:06.840
就这个办法呢

03:06.840 --> 03:09.840
平时你们做一些项目的时候

03:09.840 --> 03:10.840
也遇到我对吧

03:10.840 --> 03:12.840
看一下怎么做的

03:12.840 --> 03:13.840
怎么办呢

03:13.840 --> 03:15.840
当你在登入成功之后

03:15.840 --> 03:16.840
服务器呢

03:16.840 --> 03:18.840
他知道你登入成功了

03:18.840 --> 03:19.840
这个时候呢

03:19.840 --> 03:21.840
他不但要告诉你登入成功了

03:21.840 --> 03:23.840
同时要给你一个证件

03:24.840 --> 03:25.840
给你一个字

03:25.840 --> 03:27.840
相当于是在银行里边办事的时候

03:27.840 --> 03:30.840
认字不认人对不对

03:30.840 --> 03:32.840
你去办一些业务的时候

03:32.840 --> 03:33.840
是不是要带很多的字

03:33.840 --> 03:35.840
包括你去注册一些商家的会员

03:35.840 --> 03:36.840
对吧

03:36.840 --> 03:37.840
一些会员卡

03:37.840 --> 03:39.840
你只需要提供卡号就行了

03:39.840 --> 03:40.840
他不说你这个人是谁

03:40.840 --> 03:42.840
但是呢他知道这个卡是真的

03:42.840 --> 03:43.840
是我发出来的

03:43.840 --> 03:45.840
所以他会把一个字呢

03:45.840 --> 03:46.840
发给这个客户端

03:46.840 --> 03:48.840
那么这个客户端要想一些办法

03:48.840 --> 03:50.840
把这个字保存下来

03:50.840 --> 03:52.840
比方说保存到自己的卡包里边

03:52.840 --> 03:53.840
将来这个客户端

03:53.840 --> 03:56.840
浏览器再去请求服务器的时候呢

03:56.840 --> 03:58.840
他会把这个卡包里边的字

03:58.840 --> 04:00.840
给服务器带过去

04:00.840 --> 04:01.840
服务器一看

04:01.840 --> 04:02.840
你要添加一个管理员

04:02.840 --> 04:03.840
但是呢这个时候呢

04:03.840 --> 04:04.840
我不知道你是谁

04:04.840 --> 04:05.840
但是你有一个字

04:05.840 --> 04:06.840
这个字呢

04:06.840 --> 04:09.840
肯定是由之前服务器发给你的

04:09.840 --> 04:10.840
因此呢

04:10.840 --> 04:11.840
他就知道了

04:11.840 --> 04:13.840
你是有这个权利的

04:13.840 --> 04:14.840
因为你有字

04:14.840 --> 04:17.840
所以说这个管理员就可以添加了

04:17.840 --> 04:19.840
他是用这么一种模式

04:19.840 --> 04:21.840
认证不认人

04:21.840 --> 04:22.840
那么这个时候呢

04:22.840 --> 04:23.840
就设计到另外一个问题

04:23.840 --> 04:25.840
客户端这边

04:25.840 --> 04:28.840
用什么东西来保存这个字

04:28.840 --> 04:30.840
我们可以非常容易想到

04:30.840 --> 04:32.840
我用我们学过的Local Storage

04:32.840 --> 04:33.840
对吧

04:33.840 --> 04:34.840
但是呢

04:34.840 --> 04:35.840
我给大家说的一个问题就是

04:35.840 --> 04:38.840
以前是没有这个东西的

04:38.840 --> 04:39.840
Local Storage呢

04:39.840 --> 04:41.840
也是ATM5才带过来的

04:41.840 --> 04:43.840
在ATM5这个版本之前

04:43.840 --> 04:44.840
是没有这个东西的

04:44.840 --> 04:46.840
所以你们到了ATM5之后

04:46.840 --> 04:48.840
你确实可以使用Local Storage

04:48.840 --> 04:51.840
完全不考虑Cookie的问题

04:51.840 --> 04:52.840
你可以完成

04:52.840 --> 04:53.840
但是呢不可避免的

04:53.840 --> 04:54.840
你将来去

04:54.840 --> 04:56.840
到公司里面去做一些项目的时候

04:56.840 --> 04:57.840
那些网站呢

04:57.840 --> 04:59.840
可能还是用以前的一些方式来去处理的

04:59.840 --> 05:00.840
因此呢

05:00.840 --> 05:02.840
Cookie还是要学习的

05:02.840 --> 05:05.840
那么以前在没有Local Storage的时候

05:05.840 --> 05:06.840
用什么

05:06.840 --> 05:07.840
客户端这边用什么东西

05:07.840 --> 05:08.840
来保存这个证件

05:08.840 --> 05:10.840
就是一个问题

05:10.840 --> 05:12.840
那么他就要求客户端那边

05:12.840 --> 05:14.840
就有一个卡包的东西

05:14.840 --> 05:15.840
来装这个证件

05:15.840 --> 05:17.840
因为浏览器你想一想

05:17.840 --> 05:20.840
一天下来得访问多少个网站

05:20.840 --> 05:21.840
每个网站

05:21.840 --> 05:23.840
他都有可能给你发证

05:23.840 --> 05:24.840
而且这个证呢

05:24.840 --> 05:25.840
他不一定是登陆成功

05:25.840 --> 05:26.840
过后才给你发

05:26.840 --> 05:28.840
他有可能一些别的证

05:28.840 --> 05:29.840
比方说你有没有查到

05:29.840 --> 05:30.840
有些网站

05:30.840 --> 05:32.840
他第一次进去的时候

05:32.840 --> 05:34.840
有一些教程对吧

05:34.840 --> 05:35.840
有一些

05:35.840 --> 05:37.840
特别像一些移动端的网页

05:37.840 --> 05:38.840
他会有一些教程

05:38.840 --> 05:39.840
教你怎么去用

05:39.840 --> 05:41.840
那么他后来就不显示了

05:41.840 --> 05:43.840
只有第一次进去就才显示

05:43.840 --> 05:44.840
后来就不显示了

05:44.840 --> 05:45.840
那是为什么呢

05:45.840 --> 05:47.840
有一种方式就是

05:47.840 --> 05:49.840
服务器发现你

05:49.840 --> 05:51.840
来请求我的网页的时候

05:51.840 --> 05:53.840
我给你一个教程

05:53.840 --> 05:54.840
同时给你一个证

05:54.840 --> 05:56.840
表示你这一次

05:56.840 --> 05:58.840
你就已经学习过教程了

05:58.840 --> 05:59.840
那么将来

05:59.840 --> 06:00.840
你在访问服务器的时候

06:00.840 --> 06:01.840
你把这个证该带过去

06:01.840 --> 06:02.840
服务器看

06:02.840 --> 06:04.840
你之前学习过这个教程

06:04.840 --> 06:07.840
那我就不用再给你发这个教程了

06:07.840 --> 06:08.840
懂的意思吧

06:08.840 --> 06:09.840
就这么一个方式

06:09.840 --> 06:10.840
还有很多类似的方式

06:10.840 --> 06:11.840
都可以

06:11.840 --> 06:13.840
也就是说这个卡包人

06:13.840 --> 06:15.840
他不一定是保存登录状态

06:15.840 --> 06:16.840
他又可能是一些别的

06:16.840 --> 06:18.840
一些迷失状态

06:18.840 --> 06:21.840
那么就要求我们这个卡包

06:21.840 --> 06:23.840
他要能够存放多个出入证

06:23.840 --> 06:25.840
他不是一个

06:25.840 --> 06:27.840
因为不同的有很多网站

06:27.840 --> 06:28.840
每个网站

06:28.840 --> 06:30.840
他都有自己的出入证

06:30.840 --> 06:32.840
而且他还要能够

06:32.840 --> 06:34.840
自动的出使出入证

06:34.840 --> 06:35.840
比方说

06:35.840 --> 06:36.840
客户端在访问百度的时候

06:36.840 --> 06:38.840
他会把百度给我

06:38.840 --> 06:39.840
把他的证件

06:39.840 --> 06:41.840
一起发给百度的服务器

06:41.840 --> 06:42.840
能够自动的

06:42.840 --> 06:43.840
把对应的出入证附带过去

06:43.840 --> 06:44.840
这个网友是

06:44.840 --> 06:45.840
劉克斯多里基完成不了的

06:45.840 --> 06:46.840
对吧

06:46.840 --> 06:48.840
劉克斯多里基的发行动作

06:48.840 --> 06:51.840
必须要手动写带

06:51.840 --> 06:52.840
然后还要能够

06:52.840 --> 06:54.840
正确的出使出入证

06:54.840 --> 06:55.840
比方说客户端

06:55.840 --> 06:57.840
去访问肯德基的网站之后

06:57.840 --> 06:58.840
有一个出入证

06:58.840 --> 07:00.840
然后去访问麦当劳的时候

07:00.840 --> 07:01.840
他不能把肯德基的出入证

07:01.840 --> 07:03.840
发给麦当劳

07:03.840 --> 07:06.840
然后管理出入证的有效期

07:06.840 --> 07:07.840
每个证件

07:07.840 --> 07:08.840
就有效期的

07:08.840 --> 07:09.840
比方说你登证成功之后

07:09.840 --> 07:10.840
有这么一个证件

07:10.840 --> 07:11.840
但是呢

07:11.840 --> 07:12.840
将来呢

07:12.840 --> 07:13.840
也过了一周

07:13.840 --> 07:14.840
我们平时登课的时候

07:14.840 --> 07:16.840
保持登课状态7天

07:16.840 --> 07:17.840
对不对

07:17.840 --> 07:18.840
7天过后呢

07:18.840 --> 07:19.840
你这个证件就失效了

07:19.840 --> 07:20.840
要从卡包里面

07:20.840 --> 07:21.840
把它移除掉

07:21.840 --> 07:23.840
它就有类似于这么一些问题

07:23.840 --> 07:24.840
需要管理

07:24.840 --> 07:26.840
那么能够满足以上

07:26.840 --> 07:27.840
所有要求的

07:27.840 --> 07:28.840
那就是扣停

07:28.840 --> 07:29.840
你看劉克斯多里基

07:29.840 --> 07:30.840
还不能满足所有的要求

07:30.840 --> 07:32.840
但是客户有客户的好处

07:32.840 --> 07:34.840
劉克斯多里基呢

07:34.840 --> 07:35.840
有劉克斯多里基的好处

07:36.840 --> 07:37.840
扣停的好

07:38.840 --> 07:39.840
然后我们接下来看吧

07:40.840 --> 07:42.840
扣停类似于它一个卡包

07:42.840 --> 07:44.840
专门用于存放各种出入证

07:44.840 --> 07:46.840
并且还有自己的一套

07:46.840 --> 07:47.840
自动的机制

07:47.840 --> 07:48.840
来管理这些证件

07:49.840 --> 07:50.840
那么卡包里面的

07:50.840 --> 07:51.840
每一张卡片

07:51.840 --> 07:53.840
我们就称为一个扣停

07:54.840 --> 07:56.840
这是我们先从感性的方式

07:56.840 --> 07:58.840
去简单的认识一下

07:58.840 --> 08:00.840
扣停它到底是一个什么东西

08:01.840 --> 08:02.840
就是一个卡片

08:03.840 --> 08:04.840
其实我们可以在网站上

08:04.840 --> 08:05.840
给大家看一下

08:06.840 --> 08:07.840
你可以看到这个百度的网站

08:07.840 --> 08:08.840
这里我们点字

08:09.840 --> 08:10.840
这里有一个扣停

08:10.840 --> 08:11.840
你看百度给我们发了

08:11.840 --> 08:12.840
58个扣停

08:12.840 --> 08:13.840
说明百度给我们

08:13.840 --> 08:14.840
发了58个出入证

08:15.840 --> 08:16.840
那么不同的里面那边

08:16.840 --> 08:17.840
可能也不太一样

08:18.840 --> 08:19.840
好 咱们找到这里

08:19.840 --> 08:20.840
你看这里面

08:20.840 --> 08:21.840
就有很多的扣停

08:22.840 --> 08:24.840
其实你从这里可以看出

08:24.840 --> 08:25.840
扣停里面的

08:25.840 --> 08:26.840
每个扣停的信息

08:26.840 --> 08:28.840
就是一个简单的建制队

08:29.840 --> 08:30.840
这是属性名

08:30.840 --> 08:31.840
属性值

08:32.840 --> 08:33.840
简直

08:33.840 --> 08:34.840
一个简的建制队

08:34.840 --> 08:35.840
它给你办发了很多

08:35.840 --> 08:36.840
当然你要问我这些

08:36.840 --> 08:37.840
Cookie是干嘛用的

08:37.840 --> 08:38.840
我不知道 聊去问百度

08:38.840 --> 08:40.840
总之它给你办发了很多证件

08:40.840 --> 08:41.840
然后将来我们在

08:41.840 --> 08:42.840
请求百度的时候

08:42.840 --> 08:43.840
它会把这些证件

08:43.840 --> 08:44.840
给我们带过去

08:44.840 --> 08:45.840
OK 这就是关于

08:45.840 --> 08:47.840
Cookie的一个感性认识

08:47.840 --> 08:48.840
好 接下来我们再详细说

08:48.840 --> 08:49.840
每一个Cookie

08:49.840 --> 08:50.840
就是每一张卡片里面

08:50.840 --> 08:52.840
有什么样的一个信息

08:53.840 --> 08:54.840
首先最重要的

08:54.840 --> 08:55.840
就是它一个建制队

08:55.840 --> 08:56.840
建

08:56.840 --> 08:57.840
比方说

08:57.840 --> 08:58.840
身份证号 编号

08:58.840 --> 09:00.840
就是它的建的名字

09:00.840 --> 09:02.840
Value就建了直

09:02.840 --> 09:03.840
比方说身份证号

09:03.840 --> 09:04.840
就这么一长串

09:04.840 --> 09:06.840
当然这是举个例子

09:06.840 --> 09:07.840
你看这里面

09:09.840 --> 09:10.840
这里的Cookie

09:10.840 --> 09:11.840
每个Cookie

09:11.840 --> 09:12.840
它都是一个建

09:12.840 --> 09:13.840
对 建

09:13.840 --> 09:14.840
直

09:14.840 --> 09:15.840
这里

09:15.840 --> 09:16.840
建

09:16.840 --> 09:17.840
直

09:17.840 --> 09:18.840
这是关于Cookie

09:18.840 --> 09:20.840
它里面核心的建制队

09:20.840 --> 09:22.840
然后除了建制队之外

09:22.840 --> 09:24.840
其实它还包含一些别的东西

09:24.840 --> 09:26.840
比方说DoMe

09:26.840 --> 09:27.840
表示育

09:27.840 --> 09:28.840
它啥意思呢

09:28.840 --> 09:29.840
说这个Cookie

09:29.840 --> 09:31.840
它是属于哪一个网站的

09:31.840 --> 09:32.840
那么这个东西有什么用呢

09:32.840 --> 09:34.840
比方说你在肯德基里边

09:34.840 --> 09:35.840
去注册个会员

09:35.840 --> 09:37.840
那么肯德基会给你发一个证

09:37.840 --> 09:38.840
那个证上面

09:38.840 --> 09:39.840
肯定给你写上

09:39.840 --> 09:42.840
这是肯德基的那个会员卡

09:42.840 --> 09:43.840
那么这个会员卡

09:43.840 --> 09:44.840
是不是只能肯德基用

09:44.840 --> 09:46.840
别的公司里是用不了的

09:46.840 --> 09:47.840
对不对

09:47.840 --> 09:48.840
那么这个相当于是育

09:48.840 --> 09:49.840
这个育是什么意思呢

09:49.840 --> 09:50.840
比方说我们这里

09:50.840 --> 09:51.840
黄文白说

09:51.840 --> 09:53.840
看这个Cookie

09:54.840 --> 09:56.840
这里边Cookie

09:56.840 --> 09:57.840
你会发现它的育

09:57.840 --> 09:58.840
就是这个东西

09:58.840 --> 09:59.840
这个就表示

09:59.840 --> 10:02.840
我这是百度的抗

10:02.840 --> 10:04.840
你这个证件是

10:05.840 --> 10:07.840
是在百度的抗

10:07.840 --> 10:08.840
下面是有效的

10:08.840 --> 10:09.840
将来你去请求

10:09.840 --> 10:11.840
这样的一个网站的时候

10:11.840 --> 10:12.840
它会把这个Cookie

10:12.840 --> 10:13.840
给带过去

10:13.840 --> 10:14.840
就这么意思

10:14.840 --> 10:15.840
它表示这个Cookie

10:15.840 --> 10:16.840
是属于哪一个网站的

10:16.840 --> 10:18.840
那么我们看这边的Cookie

10:18.840 --> 10:20.840
那么它是属于这个育的

10:20.840 --> 10:21.840
懂了意思吧

10:21.840 --> 10:23.840
我们以后会详细说

10:23.840 --> 10:25.840
然后PASS路径

10:25.840 --> 10:26.840
表示

10:26.840 --> 10:28.840
因为有了这个育

10:28.840 --> 10:29.840
还不够

10:29.840 --> 10:30.840
还要可以详细的规定一下

10:30.840 --> 10:31.840
这个Cookie

10:31.840 --> 10:32.840
是属于哪个网站的

10:32.840 --> 10:34.840
哪个基督径

10:34.840 --> 10:35.840
这个又是啥意思呢

10:35.840 --> 10:37.840
就好比说

10:37.840 --> 10:38.840
不同的公司

10:38.840 --> 10:39.840
同一家公司

10:39.840 --> 10:40.840
它可能会

10:40.840 --> 10:41.840
为不同的部门

10:41.840 --> 10:43.840
颁发不同的处理事

10:43.840 --> 10:44.840
以后的公司里上班

10:44.840 --> 10:45.840
你们那个

10:45.840 --> 10:47.840
员工卡上边

10:47.840 --> 10:48.840
不就是有不同的

10:48.840 --> 10:49.840
一个部门编号吗

10:49.840 --> 10:50.840
对不对

10:50.840 --> 10:51.840
都是同一个公司

10:51.840 --> 10:52.840
你的育是一样的

10:52.840 --> 10:53.840
但是那一次

10:53.840 --> 10:54.840
不同的部门

10:54.840 --> 10:55.840
你的权限是不一样的

10:55.840 --> 10:57.840
你能进这个房间

10:57.840 --> 10:58.840
有些部门

10:58.840 --> 10:59.840
能进那个房间

10:59.840 --> 11:00.840
就这么个意思

11:00.840 --> 11:01.840
那么在这里

11:01.840 --> 11:03.840
就表现为它的路径

11:03.840 --> 11:05.840
比方说Cookie的路径

11:05.840 --> 11:06.840
是斜槓

11:06.840 --> 11:07.840
六四

11:07.840 --> 11:08.840
就表示Cookie

11:08.840 --> 11:09.840
是属于这个路径的

11:09.840 --> 11:10.840
我们先简单认识一下

11:10.840 --> 11:11.840
我们可以在这里

11:11.840 --> 11:12.840
先看一下

11:12.840 --> 11:13.840
跟着

11:13.840 --> 11:14.840
我在这里

11:14.840 --> 11:15.840
几个土屋的

11:15.840 --> 11:17.840
你看下面

11:17.840 --> 11:18.840
是一个路径

11:18.840 --> 11:19.840
它路径的是跟路径

11:19.840 --> 11:21.840
看一下有没有别的

11:21.840 --> 11:22.840
有没有别的

11:22.840 --> 11:23.840
好像没有别的

11:23.840 --> 11:24.840
没有别的

11:24.840 --> 11:25.840
我现在还没有访问

11:25.840 --> 11:26.840
那个其他地址

11:26.840 --> 11:27.840
好像还没看到别的

11:27.840 --> 11:28.840
好

11:28.840 --> 11:29.840
都是路径

11:29.840 --> 11:30.840
然后还有两个

11:30.840 --> 11:31.840
一个secure

11:31.840 --> 11:32.840
secure

11:32.840 --> 11:34.840
它表示是否用于安全传输

11:34.840 --> 11:35.840
这个玩意

11:35.840 --> 11:36.840
我们先暂时放一放

11:36.840 --> 11:37.840
一会儿来解释

11:37.840 --> 11:38.840
然后还有一个就是

11:38.840 --> 11:39.840
一个spire

11:39.840 --> 11:40.840
过期时间

11:40.840 --> 11:41.840
我们说

11:41.840 --> 11:42.840
每个证件

11:42.840 --> 11:43.840
它都有一个

11:43.840 --> 11:44.840
时间限制

11:44.840 --> 11:45.840
在什么时间内

11:45.840 --> 11:46.840
是有效的

11:46.840 --> 11:48.840
比方说你看这个口体

11:48.840 --> 11:50.840
再换一个吧

11:50.840 --> 11:52.840
看这里是个倒极时间

11:52.840 --> 11:53.840
对不对

11:53.840 --> 11:54.840
它表示

11:54.840 --> 11:55.840
今天我们是星期二

11:55.840 --> 11:58.840
然后创建时间是去年的12月22号

11:58.840 --> 12:00.840
到期时间是今年的

12:00.840 --> 12:03.840
2021年的12月22号

12:03.840 --> 12:04.840
星期三下午

12:04.840 --> 12:05.840
它一个倒极时间

12:05.840 --> 12:06.840
Expire

12:06.840 --> 12:07.840
好

12:07.840 --> 12:08.840
这就是Cookie里边

12:08.840 --> 12:10.840
所包含的所有信息了

12:10.840 --> 12:11.840
就这么一些信息

12:12.840 --> 12:13.840
好

12:13.840 --> 12:14.840
那么这个东西

12:14.840 --> 12:15.840
现在我们卡包里边

12:15.840 --> 12:16.840
假设就已经有了

12:16.840 --> 12:17.840
这些卡片了

12:17.840 --> 12:19.840
我们先不着急去

12:19.840 --> 12:20.840
搞清楚这个卡片

12:20.840 --> 12:21.840
哪来的

12:21.840 --> 12:23.840
我们先说这么一个问题

12:23.840 --> 12:24.840
有了这些卡片之后

12:24.840 --> 12:25.840
我们不是说

12:25.840 --> 12:27.840
你要请求服务器的时候

12:27.840 --> 12:28.840
它要能够自动的

12:28.840 --> 12:30.840
把卡片出示给服务器吗

12:30.840 --> 12:32.840
那么它是怎么出示的

12:32.840 --> 12:34.840
就把这个问题说清楚

12:34.840 --> 12:35.840
当浏览器向服务器

12:35.840 --> 12:37.840
发一个请求的时候

12:37.840 --> 12:39.840
它就会从自己的卡包里边

12:39.840 --> 12:40.840
翻一翻

12:40.840 --> 12:41.840
找到那些

12:41.840 --> 12:43.840
符合条件的卡片

12:43.840 --> 12:44.840
把这些卡片

12:44.840 --> 12:45.840
会附带的

12:45.840 --> 12:47.840
烧给服务器

12:47.840 --> 12:49.840
那么哪些卡片

12:49.840 --> 12:52.840
会附带给服务器呢

12:52.840 --> 12:55.840
同时满足以下条件

12:55.840 --> 12:57.840
是同时满足以下条件的卡片

12:57.840 --> 12:59.840
它会被附带到服务器

12:59.840 --> 13:00.840
第一个

13:00.840 --> 13:02.840
它没有过期

13:02.840 --> 13:04.840
比方说现在我们这个空气

13:04.840 --> 13:07.840
是2021年12月22号

13:07.840 --> 13:08.840
这个空气

13:08.840 --> 13:10.840
那假如说

13:10.840 --> 13:11.840
我目前的时间是

13:11.840 --> 13:14.840
2021年10月23号

13:14.840 --> 13:16.840
是不是这个空气已经过期了

13:16.840 --> 13:17.840
那过期了

13:17.840 --> 13:18.840
它不会被发到服务器

13:18.840 --> 13:20.840
它说必须潜力条件是

13:20.840 --> 13:21.840
没有过期

13:21.840 --> 13:22.840
这个好理解吧

13:22.840 --> 13:24.840
好 下一个

13:24.840 --> 13:25.840
空气中的浴

13:25.840 --> 13:27.840
和这一次请求的浴

13:27.840 --> 13:29.840
是匹配的

13:29.840 --> 13:30.840
这是啥意思呢

13:30.840 --> 13:32.840
每个空气不就是一个卡片吗

13:32.840 --> 13:33.840
卡片里边不是要记住

13:33.840 --> 13:34.840
这是哪家公司的吗

13:34.840 --> 13:36.840
那么这里就是一个浴

13:36.840 --> 13:37.840
那么就是浴

13:37.840 --> 13:38.840
你看着

13:38.840 --> 13:40.840
所以每个空气都有一个浴

13:40.840 --> 13:41.840
就这个东西

13:41.840 --> 13:43.840
它要找到匹配的浴

13:43.840 --> 13:44.840
就是你这一次请求

13:44.840 --> 13:45.840
比方你请求这个网站

13:45.840 --> 13:47.840
这个空气要不要带过去

13:47.840 --> 13:49.840
那么它要看这个空气的浴

13:49.840 --> 13:51.840
跟这个网站是不是匹配的

13:51.840 --> 13:53.840
这样就可以避免

13:53.840 --> 13:55.840
我把那个

13:55.840 --> 13:57.840
肯德基的空气发送给了

13:57.840 --> 13:58.840
麦当劳的网站

13:58.840 --> 14:00.840
它要避免这个问题

14:00.840 --> 14:01.840
肯德基的空气

14:01.840 --> 14:03.840
你只能发送给肯德基

14:03.840 --> 14:04.840
那么浴是

14:04.840 --> 14:06.840
它是怎么来进行匹配的呢

14:06.840 --> 14:08.840
它是看这么几点

14:08.840 --> 14:10.840
空气里边的浴

14:10.840 --> 14:12.840
如果比方说是这样的一个浴

14:12.840 --> 14:14.840
那么它可以匹配的请求浴

14:14.840 --> 14:16.840
这是主浴名 对吧

14:16.840 --> 14:18.840
那么它可以匹配的是主浴

14:18.840 --> 14:19.840
还有纸浴

14:19.840 --> 14:21.840
就前面加了什么3W

14:21.840 --> 14:22.840
加了一些Blogs

14:22.840 --> 14:23.840
加了一些这些东西

14:23.840 --> 14:24.840
它都可以匹配

14:24.840 --> 14:26.840
那么这些都是匹配的

14:26.840 --> 14:28.840
比方说我们来看一下

14:28.840 --> 14:30.840
这个空气

14:30.840 --> 14:31.840
它的浴是什么

14:31.840 --> 14:33.840
百度点抗 对吧

14:33.840 --> 14:34.840
它这里显示的前面一个点

14:34.840 --> 14:35.840
表示前面是通配的

14:35.840 --> 14:36.840
这是啥意思呢

14:36.840 --> 14:38.840
如果说是这样的一个浴的话

14:38.840 --> 14:39.840
你访问3W点

14:39.840 --> 14:40.840
百度点抗

14:40.840 --> 14:42.840
这个空气它会发过去

14:43.840 --> 14:44.840
然后比方说下一个

14:44.840 --> 14:46.840
好像都是一样的

14:46.840 --> 14:47.840
这就是这种情况

14:47.840 --> 14:48.840
就是如果说前面访问的是

14:48.840 --> 14:50.840
3W点百度点抗可以发过去

14:50.840 --> 14:52.840
访问60点百度点抗

14:52.840 --> 14:54.840
也可以发过去

14:54.840 --> 14:55.840
就这么个意思

14:55.840 --> 14:56.840
就是这种情况

14:56.840 --> 14:58.840
如果说你的空气里边的浴

14:58.840 --> 14:59.840
不是这样的一个浴

14:59.840 --> 15:00.840
是一个纸浴

15:00.840 --> 15:01.840
就前面有什么3W

15:01.840 --> 15:03.840
这些东西

15:03.840 --> 15:04.840
那么这些空气

15:04.840 --> 15:05.840
要不要发呢

15:05.840 --> 15:08.840
那比方说我们看这

15:08.840 --> 15:09.840
这个空气

15:09.840 --> 15:10.840
这个空气

15:10.840 --> 15:11.840
我访问3W点

15:11.840 --> 15:12.840
百度点抗的时候

15:12.840 --> 15:13.840
会不会把这个空气

15:13.840 --> 15:14.840
也发过去了

15:14.840 --> 15:15.840
它就不会

15:15.840 --> 15:16.840
因为匹配不上

15:16.840 --> 15:17.840
你访问这个纸浴

15:17.840 --> 15:18.840
那么你只能

15:18.840 --> 15:19.840
这个纸浴

15:19.840 --> 15:20.840
访问这个纸浴的时候

15:20.840 --> 15:21.840
能发过去

15:21.840 --> 15:22.840
那比方说

15:22.840 --> 15:23.840
如果说

15:23.840 --> 15:24.840
那你这样访问

15:24.840 --> 15:25.840
比如说ABC

15:25.840 --> 15:26.840
你访问这个地址

15:26.840 --> 15:27.840
假设有NBD

15:27.840 --> 15:29.840
比较百度点抗

15:29.840 --> 15:30.840
如说你访问这个地址

15:30.840 --> 15:31.840
那可以

15:31.840 --> 15:32.840
没问题

15:32.840 --> 15:33.840
它前边你可以加

15:33.840 --> 15:35.840
但是那你不能改做一坨

15:35.840 --> 15:36.840
懂了意思吗

15:36.840 --> 15:38.840
就是它前边可以随便加

15:38.840 --> 15:39.840
好 这是这么个意思

15:39.840 --> 15:41.840
这就是匹配浴

15:41.840 --> 15:42.840
浴必须要匹配

15:42.840 --> 15:43.840
不匹配的浴

15:43.840 --> 15:45.840
Cookie是不会发过去的

15:46.840 --> 15:48.840
Cookie这一块是

15:48.840 --> 15:49.840
不在乎端口的

15:49.840 --> 15:50.840
端口号无所谓

15:50.840 --> 15:52.840
只要浴匹配就行了

15:52.840 --> 15:54.840
这是关于浴的匹配

15:54.840 --> 15:55.840
第一 没有过期

15:55.840 --> 15:56.840
第二 浴要匹配

15:56.840 --> 15:59.840
第三 路径要匹配

15:59.840 --> 16:00.840
那么路径

16:00.840 --> 16:01.840
就相当于是你哪个部门

16:01.840 --> 16:02.840
对不对

16:02.840 --> 16:03.840
那么路径匹配的时候

16:03.840 --> 16:04.840
是怎么匹配的呢

16:04.840 --> 16:06.840
Cookie里边记录的是

16:06.840 --> 16:07.840
G路径

16:10.860 --> 16:11.860
基础路径

16:12.860 --> 16:13.860
叫做G路径

16:14.860 --> 16:16.860
Bass Pass

16:18.860 --> 16:20.860
比方说Cookie里边记录的路径

16:20.860 --> 16:21.860
是这个

16:21.860 --> 16:22.860
一个鞋杠

16:22.860 --> 16:23.860
那么随便什么路径

16:23.860 --> 16:24.860
它都可以匹配

16:24.860 --> 16:25.860
比方说这样子可以匹配

16:25.860 --> 16:26.860
没问题

16:26.860 --> 16:27.860
这样子可以匹配没问题

16:27.860 --> 16:28.860
这样子

16:29.860 --> 16:30.860
没问题

16:30.860 --> 16:31.860
都可以发过去

16:31.860 --> 16:32.860
所以我们看一下

16:32.860 --> 16:35.550
百度这里的Cookie

16:35.550 --> 16:36.550
然后这边

16:36.550 --> 16:37.550
比方说它的路径

16:37.550 --> 16:38.550
就是一个G路径

16:38.550 --> 16:39.550
比如说你这里

16:39.550 --> 16:40.550
访问任何一个

16:40.550 --> 16:41.550
后续的路径

16:41.550 --> 16:42.550
它都可以把这个Cookie发过去

16:43.550 --> 16:44.550
这是三个条件了

16:44.550 --> 16:46.550
没有过期 浴要匹配

16:46.550 --> 16:47.550
路径要匹配

16:48.550 --> 16:49.550
然后还要验证

16:49.550 --> 16:51.550
它的安全传输

16:51.550 --> 16:52.550
有些Cookie

16:52.550 --> 16:53.550
它的设置是

16:53.550 --> 16:54.550
设置为secure为处

16:54.550 --> 16:55.550
那么在这里

16:55.550 --> 16:56.550
哪里可以看得到呢

16:59.550 --> 17:00.550
如果说你设置

17:00.550 --> 17:01.550
这一回都没有设置

17:02.550 --> 17:03.550
有些Cookie它设置了

17:03.550 --> 17:05.550
它设置到安全

17:05.550 --> 17:06.550
下面会有个安全

17:08.860 --> 17:09.860
这里没有设置

17:13.460 --> 17:14.460
它这里没设置了

17:15.460 --> 17:16.460
如果说它设置到

17:16.460 --> 17:18.460
这个secure为处的话

17:18.460 --> 17:20.460
那么你请求的时候

17:20.460 --> 17:22.460
必须是ATBS协议

17:22.460 --> 17:23.460
否则的话

17:23.460 --> 17:24.460
它是不会发出Cookie的

17:25.460 --> 17:26.460
因为我们知道

17:26.460 --> 17:27.460
ATBS协议的是安全传输

17:28.460 --> 17:29.460
这一块是有单独的

17:29.460 --> 17:30.460
一些课去讲解的

17:32.460 --> 17:34.460
这就是关于这个Cookie里边

17:34.460 --> 17:35.460
首先Cookie里边

17:35.460 --> 17:36.460
包含哪些东西

17:36.460 --> 17:37.460
第二 浏览器

17:37.460 --> 17:38.460
请求服务器的时候

17:38.460 --> 17:39.460
会自动的附带Cookie

17:41.460 --> 17:43.460
哪些Cookie会被附带过去

17:43.460 --> 17:44.460
是它的匹配原则

17:45.460 --> 17:46.460
那么接下来

17:46.460 --> 17:47.460
我们继续来聊

17:47.460 --> 17:49.460
假设这些Cookie

17:49.460 --> 17:50.460
有好几个Cookie都匹配了

17:51.460 --> 17:52.460
匹配到这些条件了

17:52.460 --> 17:54.460
那么浏览器在请求的时候

17:54.460 --> 17:55.460
会把自动加入到请求中

17:55.460 --> 17:57.460
它怎么加入的

17:57.460 --> 17:58.460
就是非常简单

17:58.460 --> 17:59.460
它怎么加入的

17:59.460 --> 18:01.460
当你在请求网页的时候

18:01.460 --> 18:03.460
它会把Cookie

18:03.460 --> 18:05.460
附带到请求头里边

18:07.460 --> 18:08.460
怎么附盖的呢

18:08.460 --> 18:09.460
好 咱们来看一下

18:11.460 --> 18:13.460
首先给大家讲它的逻辑

18:13.460 --> 18:14.460
附带的时候

18:14.460 --> 18:15.460
它就非常简单

18:15.460 --> 18:16.460
在请求头里边

18:16.460 --> 18:18.460
增加一个字段

18:18.460 --> 18:19.460
叫做Cookie

18:20.460 --> 18:21.460
那么比方说

18:21.460 --> 18:23.460
有哪些Cookie要附带的时候

18:23.460 --> 18:24.460
它就会把建值队

18:24.460 --> 18:25.460
全部给它传过去

18:25.460 --> 18:27.460
比方说有3个Cookie ABC

18:27.460 --> 18:29.460
A等于1B等于2C等于3

18:29.460 --> 18:30.460
这3个Cookie都是满足条件的

18:30.460 --> 18:31.460
都没有过期

18:31.460 --> 18:32.460
预约匹配

18:32.460 --> 18:33.460
路径也匹配

18:33.460 --> 18:34.460
安全

18:34.460 --> 18:36.460
安全规则也匹配

18:36.460 --> 18:37.460
那么它就附带这样的附带的

18:37.460 --> 18:39.460
A等于1B等于2C等于3

18:40.460 --> 18:41.460
所以有点像地址来参数

18:41.460 --> 18:42.460
对不对

18:42.460 --> 18:43.460
它就这样子给它带过去了

18:43.460 --> 18:44.460
那么附席那边

18:44.460 --> 18:45.460
是不是可以拿到这个Cookie

18:45.460 --> 18:47.460
那么至于附席拿到这个Cookie

18:47.460 --> 18:48.460
过后干嘛

18:48.460 --> 18:49.460
那就是服端程序要做的事

18:49.460 --> 18:51.460
跟你们没关系了

18:51.460 --> 18:53.460
好 咱们来看一下百度

18:53.460 --> 18:54.460
我们刚才说百度里边

18:54.460 --> 18:55.460
不是有很多Cookie吗

18:55.460 --> 18:56.460
这Cookie有很多的满足规则

18:56.460 --> 18:57.460
对吧

18:57.460 --> 18:58.460
它预约也匹配

18:58.460 --> 19:00.460
它过期时间也匹配

19:00.460 --> 19:01.460
都没有问题

19:02.460 --> 19:03.460
你看这些都没有问题

19:03.460 --> 19:04.460
其实能够显示到这了

19:04.460 --> 19:05.460
都没有过期

19:05.460 --> 19:06.460
过期的话

19:06.460 --> 19:08.460
就会在这里就会被移除掉

19:09.460 --> 19:10.460
那么这些呢

19:12.460 --> 19:13.460
当我们来请求这个百度的时候

19:13.460 --> 19:14.460
它就会发过去

19:14.460 --> 19:15.460
好 咱们来试一下

19:15.460 --> 19:16.460
刷新一下

19:17.460 --> 19:18.460
好 咱们看一下

19:18.460 --> 19:19.460
请求百度这个网页

19:21.460 --> 19:22.460
我们看

19:22.460 --> 19:24.460
Request 是不是一个Cookie

19:24.460 --> 19:26.460
哇 是不是太多很多

19:26.460 --> 19:28.460
百度搞了很多Cookie出来

19:28.460 --> 19:29.460
你要说这些Cookie有什么用

19:29.460 --> 19:30.460
我不知道

19:31.460 --> 19:33.460
那是他们服务器程序写出来的

19:34.460 --> 19:36.460
好 你看 是不是建制队

19:37.460 --> 19:38.460
建 值

19:39.460 --> 19:40.460
我刚刚写错了

19:40.460 --> 19:41.460
不是按的符号

19:41.460 --> 19:42.460
不好意思

19:42.460 --> 19:43.460
不是按的符号

19:43.460 --> 19:44.460
应该是什么呢

19:44.460 --> 19:45.460
应该是分号

19:47.460 --> 19:48.460
所以我分号分个

19:48.460 --> 19:49.460
挤错了

19:49.460 --> 19:50.460
好 你看

19:50.460 --> 19:52.460
建 值

19:52.460 --> 19:54.460
好 一个Cookie

19:54.460 --> 19:56.460
第二个建 值

19:56.460 --> 19:58.460
第三个建 值

19:58.460 --> 19:59.460
那么这些信息

19:59.460 --> 20:01.460
就会附带发给服务器

20:02.460 --> 20:03.460
懂得意思吗

20:03.460 --> 20:05.460
好 那么你可以想象得到

20:05.460 --> 20:06.460
那如果说

20:06.460 --> 20:07.460
我们要做登录的话

20:07.460 --> 20:08.460
是不是很简单呢

20:09.460 --> 20:10.460
那我只要记住一个Cookie

20:10.460 --> 20:11.460
登录成功后

20:11.460 --> 20:12.460
我有个Cookie

20:12.460 --> 20:13.460
来记住什么呢

20:13.460 --> 20:14.460
记住我的

20:14.460 --> 20:16.460
比方说我的用户ID

20:16.460 --> 20:18.460
比方说这是有点ID

20:18.460 --> 20:19.460
然后等于一个啥啥啥

20:19.460 --> 20:20.460
记住下来

20:20.460 --> 20:21.460
那我以后

20:21.460 --> 20:22.460
每一次请求服务器的时候

20:22.460 --> 20:23.460
是不是就会

20:23.460 --> 20:24.460
都会把这个Cookie

20:24.460 --> 20:26.460
带给服务器

20:26.460 --> 20:27.460
对不对

20:27.460 --> 20:28.460
都会带给他

20:28.460 --> 20:29.460
好 那么这是

20:29.460 --> 20:30.460
关于这个Cookie

20:30.460 --> 20:32.460
他如何是被发送的

20:32.460 --> 20:34.460
那么这里有一点

20:34.460 --> 20:35.460
大家要知道

20:35.460 --> 20:36.460
Cookie里面是包含了

20:36.460 --> 20:38.460
重要的身份信息的

20:38.460 --> 20:40.460
别看它是保存在浏览器的

20:40.460 --> 20:42.460
所以千万不要把你的Cookie

20:42.460 --> 20:43.460
泄露给别人

20:43.460 --> 20:44.460
比方说你登录成功过后

20:44.460 --> 20:45.460
你的Cookie

20:45.460 --> 20:47.460
就飙食了你的身份

20:47.460 --> 20:48.460
因为浏览

20:48.460 --> 20:49.460
服务器他也不知道

20:49.460 --> 20:51.460
你的道理是谁

20:51.460 --> 20:52.460
他只知道你

20:52.460 --> 20:53.460
有没有带过Cookie过去

20:53.460 --> 20:54.460
带过去了

20:54.460 --> 20:55.460
他一验着

20:55.460 --> 20:56.460
ok 那么他就认为

20:56.460 --> 20:57.460
你具有这样的权限

20:57.460 --> 20:58.460
一旦你把Cookie

20:58.460 --> 20:59.460
分享过去了

20:59.460 --> 21:00.460
那么别人只要把

21:00.460 --> 21:02.460
你分享的Cookie

21:02.460 --> 21:04.460
保存到他自己的浏览器卡包

21:04.460 --> 21:05.460
那就不得了了

21:05.460 --> 21:06.460
那他就可以

21:06.460 --> 21:08.460
用你的身份去做任何事情

21:08.460 --> 21:10.460
好 这是关于这个Cookie

21:10.460 --> 21:11.460
好 第二个

21:11.460 --> 21:13.460
下面这个问题来了

21:13.460 --> 21:15.460
哪来的

21:15.460 --> 21:16.460
你说了半天

21:16.460 --> 21:17.460
这个Cookie

21:17.460 --> 21:19.460
我知道他有这么一些信息

21:19.460 --> 21:20.460
可以自动附带到浏览

21:20.460 --> 21:21.460
服务器

21:21.460 --> 21:23.460
那么他哪来的呢

21:23.460 --> 21:26.460
他的来源有两种

21:26.460 --> 21:27.460
第一种来源

21:27.460 --> 21:30.460
是由服务器想用的

21:30.460 --> 21:31.460
就是你登录成功之后

21:32.460 --> 21:33.460
登录成功之后

21:33.460 --> 21:34.460
服务器就会把这个Cookie

21:34.460 --> 21:35.460
这个初说就是个Cookie

21:35.460 --> 21:37.460
发到客户端

21:37.460 --> 21:39.460
发给你

21:39.460 --> 21:40.460
这是他第一个来源

21:40.460 --> 21:41.460
第二个来源呢

21:41.460 --> 21:42.460
是你自己添加进去的

21:42.460 --> 21:43.460
就是服务器

21:43.460 --> 21:45.460
服务器压根就没给你

21:45.460 --> 21:47.460
然后你自己在这边

21:47.460 --> 21:48.460
通过某种方式

21:48.460 --> 21:49.460
加到卡包

21:49.460 --> 21:50.460
就自己做了一张卡

21:50.460 --> 21:52.460
放进去了

21:52.460 --> 21:54.460
这两种方式都可以

21:54.460 --> 21:56.460
那么我们一个个看

21:56.460 --> 21:57.460
首先是服务器想用

21:57.460 --> 21:59.460
服务器是怎么来想用Cookie的呢

21:59.460 --> 22:00.460
也很简单

22:00.460 --> 22:02.460
他只需要在想用头里边

22:02.460 --> 22:04.460
加上这么一些东西就行了

22:04.460 --> 22:06.460
想用的就是头对里边

22:06.460 --> 22:08.460
制断名叫Cookie

22:08.460 --> 22:09.460
设置Cookie

22:09.460 --> 22:10.460
后面就是第一个Cookie

22:10.460 --> 22:12.460
如果说你要加多个Cookie的话

22:12.460 --> 22:13.460
就是两个Cookie

22:13.460 --> 22:14.460
三个Cookie

22:14.460 --> 22:15.460
好 咱们来看一下

22:15.460 --> 22:16.460
就是百度你访问百度首页的时候

22:16.460 --> 22:18.460
百度就给我们加了很多Cookie

22:20.460 --> 22:21.460
我们来看一下百度首页

22:21.460 --> 22:23.460
他在想用的时候

22:23.460 --> 22:24.460
你看我现在没有登录

22:24.460 --> 22:25.460
他有些Cookie

22:25.460 --> 22:26.460
他不是说只有登录的时候

22:26.460 --> 22:27.460
才用Cookie

22:27.460 --> 22:29.460
有的时候别的信心

22:29.460 --> 22:32.460
也可能用Cookie来记录一下

22:32.460 --> 22:34.460
他给我们发了三个Cookie

22:34.460 --> 22:35.460
第二个Cookie

22:35.460 --> 22:36.460
第二个Cookie

22:36.460 --> 22:37.460
第三个Cookie

22:37.460 --> 22:39.460
他通过这种方式来发

22:39.460 --> 22:40.460
那么这个

22:40.460 --> 22:42.460
每个Cookie里面不是有很多信息吗

22:42.460 --> 22:44.460
因为每个Cookie里面不是建

22:44.460 --> 22:46.460
纸 玉 乱七八糟的玩意儿

22:46.460 --> 22:48.460
那么他是怎么把这些信息

22:48.460 --> 22:49.460
告诉你的呢

22:49.460 --> 22:50.460
也很简单

22:50.460 --> 22:52.460
每一个Cookie这里的写法

22:52.460 --> 22:53.460
有个完整的写法

22:53.460 --> 22:55.460
建等于纸

22:55.460 --> 22:57.460
分号

22:57.460 --> 22:58.460
这个Cookie的路径是什么

22:58.460 --> 22:59.460
这个Cookie的键

22:59.460 --> 23:00.460
Cookie的纸

23:00.460 --> 23:01.460
Cookie的路径

23:01.460 --> 23:02.460
Cookie的玉

23:02.460 --> 23:04.460
Cookie的过期时间

23:04.460 --> 23:06.460
这是相对过期时间

23:06.460 --> 23:07.460
这是绝对过期时间

23:07.460 --> 23:08.460
两个设置一个就行了

23:08.460 --> 23:11.460
是否必须要安全传输

23:11.460 --> 23:13.460
是不是对应Cookie里面的那些信息

23:13.460 --> 23:14.460
还有一个ATP only

23:14.460 --> 23:15.460
我一会再说

23:15.460 --> 23:17.460
好 咱们来一个个看

23:17.460 --> 23:19.460
建和纸就没有什么问题了吧

23:19.460 --> 23:20.460
很简单

23:20.460 --> 23:22.460
就是Cookie的本质就是个限度对

23:22.460 --> 23:25.460
所以说你要把建和纸写好

23:25.460 --> 23:27.460
然后路径是什么

23:27.460 --> 23:28.460
你可以去设置

23:28.460 --> 23:29.460
如果说你这里不设置

23:29.460 --> 23:31.460
后面都是可选的

23:31.460 --> 23:33.460
都是可以不用写的

23:33.460 --> 23:35.460
如果说你路径不设置

23:35.460 --> 23:36.460
就兼职必须要写

23:36.460 --> 23:37.460
路径可以不写

23:37.460 --> 23:39.460
路径不设置的话

23:39.460 --> 23:41.460
那么它会用什么路径呢

23:41.460 --> 23:44.460
它会默认用你当前网页的路径

23:44.460 --> 23:47.460
就当当前请求的路径

23:47.460 --> 23:48.460
懂了意思吧

23:48.460 --> 23:50.460
比方说你请求的是

23:50.460 --> 23:52.460
3W的眼百度雕抗

23:52.460 --> 23:53.460
请求这个地址

23:53.460 --> 23:55.460
诶 服务器给你发送的Cookie里面

23:56.460 --> 23:58.460
你看这里给你写的Cookie里面有路径

23:58.460 --> 24:00.460
如果它这里没有给你写路径

24:00.460 --> 24:02.460
那么路径也就是默认是跟路径

24:02.460 --> 24:04.460
因为你访问的就是跟路径

24:04.460 --> 24:06.460
那如果说你访问别的路径呢

24:06.460 --> 24:09.460
我访问一些别的路径吧

24:09.460 --> 24:12.460
我看看能不能找不到的别的路径

24:15.020 --> 24:17.020
我找个百度快照

24:19.460 --> 24:20.460
不对 它预都不一样

24:20.460 --> 24:22.460
比方就请求这个预吧

24:22.460 --> 24:24.460
这个预后面是不是还有很长的东西

24:24.460 --> 24:25.460
还有一个斜杠C

24:25.460 --> 24:26.460
对不对

24:29.990 --> 24:30.990
是不是一个斜杠C

24:30.990 --> 24:31.990
这样的一个路径

24:31.990 --> 24:34.990
那么如果说这个服务器给你发的Cookie

24:34.990 --> 24:35.990
它没有设置路径的话

24:35.990 --> 24:36.990
那么它的路径就是斜杠C

24:36.990 --> 24:38.990
总之它路径不写的话

24:38.990 --> 24:41.990
就是默认是当前的路径

24:41.990 --> 24:43.990
就是当前你请求的路径

24:43.990 --> 24:44.990
第二是预

24:45.990 --> 24:47.990
这一块是设置Cookie的预

24:47.990 --> 24:48.990
讲过了 对吧

24:48.990 --> 24:49.990
不再最初了

24:49.990 --> 24:51.990
那么这个预呢

24:51.990 --> 24:52.990
如果说你不设置

24:52.990 --> 24:54.990
它就默认为你当前请求的预

24:54.990 --> 24:56.990
比方说你请求这个地址

24:56.990 --> 24:57.990
那你请求这个地址

24:57.990 --> 24:59.990
它的预没有设置

24:59.990 --> 25:01.990
那么这个预呢

25:01.990 --> 25:05.990
它就默认是3W.百度点抗

25:05.990 --> 25:06.990
我们来试一下

25:06.990 --> 25:08.990
BDSVRTM

25:08.990 --> 25:09.990
你看它没有设置住命

25:09.990 --> 25:10.990
对吧 它没有设置预

25:10.990 --> 25:11.990
我们来看一下这个Cookie

25:11.990 --> 25:13.990
是不是这个预

25:14.990 --> 25:15.990
你也在这里边找

25:15.990 --> 25:16.990
肯定能找到

25:16.990 --> 25:18.990
BDSVRTM

25:18.990 --> 25:20.990
是不是就这个预

25:20.990 --> 25:22.990
3W.百度点抗

25:22.990 --> 25:23.990
对吧 就这么个意思

25:24.990 --> 25:25.990
好 你看这个Cookie

25:25.990 --> 25:27.990
BDHOME等于1

25:27.990 --> 25:29.990
那么这个Cookie的预是什么呢

25:29.990 --> 25:31.990
再来看一下

25:32.990 --> 25:34.990
BDHOME 是不是

25:34.990 --> 25:36.990
也是3W.百度点抗

25:37.990 --> 25:38.990
然后再看下面

25:38.990 --> 25:41.990
HPSPSSID

25:41.990 --> 25:43.990
那么它的预是点百度点抗

25:43.990 --> 25:45.990
那么就应该在上面

25:49.200 --> 25:50.200
在哪里的

25:50.200 --> 25:53.200
PSSID

25:53.200 --> 25:57.200
HPSPSSID

25:57.200 --> 25:59.200
你看 它这个Cookie的预

25:59.200 --> 26:00.200
就是点百度点抗

26:00.200 --> 26:02.200
因为它这里可以设置的这个预

26:02.200 --> 26:03.200
不容易是吧

26:03.200 --> 26:04.200
其实这里的设置预

26:04.200 --> 26:05.200
它也是有限制的

26:05.200 --> 26:08.200
你可以最多设置到主预

26:08.200 --> 26:10.200
比方你访问3W.百度点抗

26:10.200 --> 26:12.200
那么它给你发的Cookie

26:12.200 --> 26:13.200
最多能设置到主预

26:13.200 --> 26:15.200
就是你访问肯德基的时候

26:15.200 --> 26:17.200
他不可能把预给你设置成麦当劳

26:17.200 --> 26:19.200
这是做不到的

26:19.200 --> 26:20.200
你不要让你这里

26:20.200 --> 26:21.200
换成淘宝点抗了

26:21.200 --> 26:22.200
肯定不行了

26:22.200 --> 26:23.200
它就不认了

26:23.200 --> 26:24.200
总之呢

26:24.200 --> 26:25.200
它就把这些Cookie

26:25.200 --> 26:26.200
通过这些

26:26.200 --> 26:28.200
的信息发给浏览器

26:28.200 --> 26:29.200
比方说那么这个场景

26:29.200 --> 26:31.200
就是在我们将来

26:31.200 --> 26:32.200
在服务器开发的时候

26:32.200 --> 26:34.200
一般是后段人员处理

26:34.200 --> 26:35.200
当你登录成功之后

26:35.200 --> 26:37.200
它就会给了一个

26:37.200 --> 26:39.200
给了一个证件就是Cookie

26:39.200 --> 26:40.200
那么这个Cookie

26:40.200 --> 26:41.200
它就会把预

26:41.200 --> 26:42.200
PASS

26:42.200 --> 26:43.200
过期时间的那些东西

26:43.200 --> 26:44.200
全给的设置好

26:44.200 --> 26:45.200
发给浏览器

26:45.200 --> 26:48.200
通过响应头给浏览器

26:49.200 --> 26:50.200
好

26:51.200 --> 26:52.200
然后还有什么呢

26:52.200 --> 26:54.200
还有就是Expire和MaxA

26:54.200 --> 26:55.200
这两个

26:56.200 --> 26:57.200
一个是Expire

26:57.200 --> 26:58.200
这两个其实都是

26:58.200 --> 27:00.200
设置过期时间的

27:00.200 --> 27:02.200
Expire表示绝对过期时间

27:02.200 --> 27:04.200
那么它使用的是

27:04.200 --> 27:05.200
隔临维制时间

27:05.200 --> 27:08.200
就是GMT的标准

27:08.200 --> 27:09.200
时间命名

27:09.200 --> 27:11.200
就这种方式来写

27:11.200 --> 27:12.200
一个字步刷

27:13.200 --> 27:14.200
通过这种方式来

27:14.200 --> 27:15.200
设置过期时间

27:15.200 --> 27:16.200
那么它会在

27:16.200 --> 27:17.200
绝对的时间进过期

27:17.200 --> 27:18.200
还有另一种是

27:18.200 --> 27:19.200
相对过期时间

27:19.200 --> 27:20.200
跟MaxA集

27:21.200 --> 27:22.200
那么这个东西

27:22.200 --> 27:24.200
你设置为

27:24.200 --> 27:25.200
MaxA级

27:25.200 --> 27:26.200
比较说你设置为

27:26.200 --> 27:27.200
MaxA级为1000

27:28.200 --> 27:31.600
我怎么换好了呢

27:32.600 --> 27:33.600
等一下啊

27:36.170 --> 27:37.170
MaxA级

27:37.170 --> 27:38.170
如果说

27:39.170 --> 27:41.170
你设置MaxA级为1000

27:41.170 --> 27:42.170
那么什么意思呢

27:42.170 --> 27:43.170
就告诉浏览器

27:43.170 --> 27:44.170
你在添加空气的时候

27:45.170 --> 27:47.170
把用当前时间

27:47.170 --> 27:49.170
加上1000秒

27:49.170 --> 27:50.170
来作为它的过期时间

27:51.170 --> 27:52.170
就是相对的

27:52.170 --> 27:53.170
一个是绝对的

27:53.170 --> 27:54.170
一个是相对的

27:55.170 --> 27:56.170
那么

27:56.170 --> 27:57.170
这两个东西

27:57.170 --> 27:58.170
你设置一个

27:59.170 --> 28:00.170
如果说

28:00.170 --> 28:01.170
你既没有设置

28:01.170 --> 28:02.170
一个Spire

28:02.170 --> 28:04.170
也没有设置MaxA级

28:04.170 --> 28:05.170
这两个都没有设置

28:05.170 --> 28:06.170
那么表示这个过期

28:06.170 --> 28:08.170
它没有过期时间

28:08.170 --> 28:09.170
没有过期时间

28:09.170 --> 28:10.170
是什么时候过期呢

28:10.170 --> 28:12.170
表示汇化结束后过期

28:12.170 --> 28:13.170
那么什么叫

28:13.170 --> 28:14.170
汇化结束过期呢

28:14.170 --> 28:15.170
就是你把

28:15.170 --> 28:16.170
那个浏览器一关

28:16.170 --> 28:17.170
它就过期了

28:18.170 --> 28:19.170
就是汇化过期

28:19.170 --> 28:20.170
你没有关这个浏览器

28:20.170 --> 28:21.170
它就一直没过期

28:21.170 --> 28:22.170
有些Cookie

28:22.170 --> 28:23.170
你看

28:23.170 --> 28:24.170
这两个Cookie都是

28:24.170 --> 28:25.170
没有设置过期时间的

28:25.170 --> 28:26.170
那么说明

28:26.170 --> 28:28.170
Cookie它都是汇化

28:28.170 --> 28:29.170
使过期

28:29.170 --> 28:30.170
我们来看一下

28:30.170 --> 28:31.170
BD Home

28:31.170 --> 28:32.170
看一下BD Home

28:32.170 --> 28:33.170
你看

28:33.170 --> 28:34.170
下面的过期时间

28:34.170 --> 28:37.170
汇化结束时过期

28:37.170 --> 28:38.170
有些Cookie

28:38.170 --> 28:39.170
设置过期时间

28:39.170 --> 28:40.170
我看一下

28:40.170 --> 28:42.170
这里好像没有

28:42.170 --> 28:43.170
应该是我之前

28:43.170 --> 28:44.170
在登录的时候

28:44.170 --> 28:45.170
登录的时候

28:45.170 --> 28:46.170
有些Cookie

28:46.170 --> 28:48.170
设置过期时间

28:48.170 --> 28:49.170
这个应该是

28:49.170 --> 28:51.170
记录的是用户的ID

28:51.170 --> 28:53.170
百度ID

28:53.170 --> 28:54.170
应该是我

28:54.170 --> 28:55.170
这也是只能拆

28:55.170 --> 28:56.170
这些东西

28:56.170 --> 28:57.170
只有服务器那边才认识

28:57.170 --> 28:58.170
你看

28:58.170 --> 29:00.170
这里就是记录过期时间

29:04.480 --> 29:06.480
这是Expire和Max这一集

29:06.480 --> 29:07.480
另外一个Secure

29:07.480 --> 29:08.480
这个Secure

29:08.480 --> 29:09.480
只要带上就行了

29:09.480 --> 29:10.480
如果说服务器

29:10.480 --> 29:11.480
给你想象的一个Secure

29:11.480 --> 29:12.480
就表示

29:12.480 --> 29:13.480
Cookie只能是

29:13.480 --> 29:14.480
必须是什么

29:14.480 --> 29:15.480
必须是那个

29:15.480 --> 29:16.480
安ATPS

29:16.480 --> 29:18.480
下一次ATPS请求的时候

29:18.480 --> 29:20.480
这Cookie才能复带过去

29:20.480 --> 29:21.480
否则的话

29:21.480 --> 29:22.480
不会复带过去

29:22.480 --> 29:23.480
还有一个是ATP Only

29:23.480 --> 29:25.480
这个玩意是什么东西呢

29:26.480 --> 29:27.480
在这

29:28.480 --> 29:29.480
这个玩意表示

29:29.480 --> 29:31.480
这个Cookie

29:31.480 --> 29:33.480
它只能用于传输

29:33.480 --> 29:34.480
如果说

29:34.480 --> 29:35.480
设置了这个值

29:35.480 --> 29:36.480
这个Cookie

29:36.480 --> 29:37.480
它不允许在客户端

29:37.480 --> 29:38.480
通过JS来过去

29:39.480 --> 29:40.480
啥意思

29:40.480 --> 29:41.480
就是我们刚才说了

29:41.480 --> 29:43.480
这个Cookie的设置

29:43.480 --> 29:45.480
是不是只能有两种方式

29:45.480 --> 29:46.480
一种是服务器响应

29:46.480 --> 29:48.480
一种是客户端自行设置

29:48.480 --> 29:50.480
客户端自行设置的话

29:50.480 --> 29:52.480
就可以使用JS来控制

29:52.480 --> 29:53.480
就算浏览器端

29:53.480 --> 29:54.480
运行一段

29:54.480 --> 29:55.480
JS代码

29:55.480 --> 29:56.480
在这一端

29:56.480 --> 29:57.480
运行一段JS代码

29:57.480 --> 29:58.480
来管理这个Cookie

29:58.480 --> 29:59.480
可以读

29:59.480 --> 30:00.480
也可以加

30:00.480 --> 30:01.480
也可以删

30:01.480 --> 30:02.480
也可以写

30:03.480 --> 30:04.480
但是如果说

30:04.480 --> 30:05.480
你服务器响应的Cookie

30:05.480 --> 30:07.480
它设置了ATP Only的话

30:07.480 --> 30:08.480
那么这个Cookie

30:08.480 --> 30:09.480
它只能用于传输

30:11.480 --> 30:12.480
只能用于传输

30:12.480 --> 30:14.480
你JS是没有权力

30:14.480 --> 30:15.480
去设置的

30:16.480 --> 30:17.480
这个属性

30:17.480 --> 30:19.480
其实在一些网络安全的时候

30:20.480 --> 30:22.480
考虑到网络安全的时候

30:22.480 --> 30:23.480
还是比较常见的

30:23.480 --> 30:24.480
ATP Only

30:25.480 --> 30:26.480
好

30:26.480 --> 30:27.480
那么下面来举一个例子

30:27.480 --> 30:28.480
比方说

30:28.480 --> 30:30.480
客户端通过Pose寻求去

30:30.480 --> 30:32.480
寻求一个登录的地址

30:32.480 --> 30:34.480
并且我现在要登录了

30:34.480 --> 30:36.480
然后给它一个账号和密码

30:36.480 --> 30:37.480
服务器那边验证了

30:37.480 --> 30:38.480
来登录成功了

30:38.480 --> 30:40.480
于是服务器在响应的时候

30:40.480 --> 30:42.480
就会加入以下内容

30:42.480 --> 30:43.480
就在这个时候

30:45.790 --> 30:46.790
就在这个时候

30:47.790 --> 30:48.790
会加入一个Cookie

30:53.920 --> 30:54.920
比方说Cookie

30:54.920 --> 30:55.920
Token

30:55.920 --> 30:57.920
给的一个就是令牌

30:57.920 --> 30:58.920
这个令牌相当于是个证件

30:58.920 --> 31:00.920
证件相当于是里面一个编号

31:00.920 --> 31:02.920
这个编号一般来说

31:02.920 --> 31:03.920
是加密过后的

31:03.920 --> 31:04.920
可以服务端

31:04.920 --> 31:05.920
这都是服务端处理的

31:05.920 --> 31:06.920
给你加密好的

31:06.920 --> 31:07.920
你都不用去管了

31:07.920 --> 31:08.920
到底是怎么加密的

31:08.920 --> 31:09.920
你都不用去管

31:09.920 --> 31:10.920
好

31:10.920 --> 31:12.920
总之给你一串东西

31:12.920 --> 31:13.920
其实你们做

31:14.920 --> 31:15.920
做过以前登录的时候

31:15.920 --> 31:16.920
你可以看到

31:16.920 --> 31:17.920
你们保算Local Storage里面

31:17.920 --> 31:18.920
有个东西

31:18.920 --> 31:19.920
是不是也是

31:19.920 --> 31:20.920
经过加密过后的

31:20.920 --> 31:21.920
总之它既加密过后

31:21.920 --> 31:22.920
给你发过来了

31:22.920 --> 31:23.920
然后它告诉你

31:23.920 --> 31:24.920
Pense等于鞋钢

31:24.920 --> 31:26.920
Magazade等于3600

31:27.920 --> 31:28.920
啥意思呢

31:28.920 --> 31:29.920
好

31:29.920 --> 31:30.920
你现在登录成功了

31:30.920 --> 31:31.920
我给你发一个证件

31:31.920 --> 31:32.920
证件里边有个编号

31:32.920 --> 31:33.920
你把浏览器

31:33.920 --> 31:34.920
你去把记录一下

31:34.920 --> 31:35.920
浏览器会自动记录的

31:35.920 --> 31:36.920
你不用管

31:36.920 --> 31:39.920
然后给你一个Pense

31:39.920 --> 31:41.920
表示以将来去请求

31:41.920 --> 31:43.920
记录进

31:43.920 --> 31:44.920
或者是这个记录进

31:44.920 --> 31:45.920
后续的录进

31:45.920 --> 31:48.920
都会把这个Cookie带过来

31:48.920 --> 31:50.920
这个Cookie的过期时间

31:50.920 --> 31:53.920
是当前时间的3600秒之后

31:53.920 --> 31:54.920
也相当于是一个小时

31:54.920 --> 31:55.920
过后过期

31:55.920 --> 31:56.920
而且这个Cookie你在客户端

31:56.920 --> 31:58.920
是不能直接访问的

31:58.920 --> 31:59.920
不能用介石来控制

31:59.920 --> 32:01.920
只能用于传输

32:01.920 --> 32:04.920
就把这个想应头给带过来了

32:04.920 --> 32:05.920
带过来之后

32:05.920 --> 32:07.920
浏览器它就会自动的

32:07.920 --> 32:09.920
把这个Cookie加入到

32:09.920 --> 32:10.920
自己的卡包里边

32:10.920 --> 32:11.920
它就会记录一下

32:11.920 --> 32:13.920
我这里有个键

32:13.920 --> 32:14.920
Cookie只是这个

32:14.920 --> 32:15.920
Dume是这个

32:15.920 --> 32:16.920
Pense是这个

32:16.920 --> 32:17.920
过期时间

32:17.920 --> 32:18.920
它就会算出来

32:18.920 --> 32:20.920
你相对日期3600秒

32:20.920 --> 32:22.920
然后当前日期去

32:22.920 --> 32:23.920
加上3600秒

32:23.920 --> 32:24.920
那么比方说

32:24.920 --> 32:27.920
假设当前日期是4月17号

32:27.920 --> 32:29.920
下午5点55分

32:29.920 --> 32:31.920
加上3600过后

32:31.920 --> 32:34.920
就变成了18点55分

32:34.920 --> 32:36.920
然后它不是用于安全的

32:36.920 --> 32:37.920
不是用于

32:37.920 --> 32:39.920
就是你任何ATP请求

32:39.920 --> 32:41.920
和ATPS请求都可以发过去

32:41.920 --> 32:43.920
ATP only表示只能用于传输

32:43.920 --> 32:45.920
不允许介石来获取这个Cookie

32:45.920 --> 32:47.920
浏览器就会把这个Cookie

32:47.920 --> 32:48.920
记录到卡包里边

32:48.920 --> 32:49.920
于是你将来

32:49.920 --> 32:51.920
这个同一个浏览器

32:51.920 --> 32:52.920
你要去做一些别的事

32:52.920 --> 32:54.920
不要访问同样的网站

32:54.920 --> 32:55.920
我要去增加一个管理员

32:55.920 --> 32:57.920
那么这个时候

32:57.920 --> 32:58.920
浏览器必须匹配

32:58.920 --> 33:00.920
浴是匹配的

33:00.920 --> 33:01.920
ATPS也是匹配的

33:01.920 --> 33:03.920
过期时间还没有过期

33:03.920 --> 33:04.920
这些都是OK的

33:04.920 --> 33:05.920
于是它就会把这个Cookie

33:05.920 --> 33:08.920
直接带到请求头里边

33:17.020 --> 33:19.020
它就会把这个Cookie

33:19.020 --> 33:20.020
直接带到请求头里边

33:20.020 --> 33:21.020
发给服务器

33:21.020 --> 33:23.020
服务器那边一看

33:24.020 --> 33:25.020
你把这个Cookie

33:25.020 --> 33:27.020
浏览器发给我了

33:27.020 --> 33:28.020
服务器那边

33:28.020 --> 33:29.020
只要通过一段程序

33:29.020 --> 33:30.020
一判断

33:30.020 --> 33:31.020
你有这个Cookie

33:31.020 --> 33:32.020
我一验证这个编号

33:32.020 --> 33:33.020
确实是我发的

33:33.020 --> 33:34.020
我是加密过后了

33:34.020 --> 33:36.020
你也做不了假

33:36.020 --> 33:38.020
那么这确实是我颁发的

33:38.020 --> 33:40.020
因此服务器就认为你有权限

33:40.020 --> 33:42.020
可以去增加一个管理员

33:42.020 --> 33:43.020
可以操作

33:44.020 --> 33:46.020
这就是Cookie的逻辑

33:46.020 --> 33:47.020
那么时间还剩下

33:47.020 --> 33:48.020
最后一个问题

33:48.020 --> 33:50.020
就是如何删除Cookie呢

33:50.020 --> 33:51.020
删除Cookie

33:51.020 --> 33:52.020
有种最狠的方式

33:52.020 --> 33:53.020
就是在这

33:54.020 --> 33:55.020
你直接干掉了

33:56.020 --> 33:57.020
百度UID

33:57.020 --> 34:00.020
这个应该是我登陆的ID吧

34:00.020 --> 34:01.020
我试一下

34:01.020 --> 34:02.020
我现在登陆了

34:02.020 --> 34:04.020
然后我把Cookie删掉

34:09.150 --> 34:10.150
一输掉

34:11.150 --> 34:13.150
多一输几个

34:13.150 --> 34:14.150
好 完成

34:14.150 --> 34:16.150
然后我们这里再刷新

34:16.150 --> 34:18.150
他还是认为我是登陆的

34:18.150 --> 34:19.150
说明那个玩意

34:20.150 --> 34:22.150
就全部删了

34:22.150 --> 34:23.150
Cookie全部删完了

34:23.150 --> 34:25.150
然后我们在现在看

34:25.150 --> 34:26.150
是不是就没有登陆了

34:26.150 --> 34:27.150
然后再去请求

34:27.150 --> 34:29.150
我一个证件都没有发给服务器

34:29.150 --> 34:30.150
服务器那边就蒙了

34:30.150 --> 34:32.150
你肯定是一个新的

34:32.150 --> 34:33.150
新的人过来

34:33.150 --> 34:34.150
肯定是没有登陆的

34:34.150 --> 34:36.150
不然的话怎么会没有证件呢

34:36.150 --> 34:37.150
我之前办法的证件

34:37.150 --> 34:38.150
一个都没有带过来

34:38.150 --> 34:40.150
他认为你没有登陆

34:40.150 --> 34:41.150
懂的意思吧

34:41.150 --> 34:43.150
这就是这一块

34:43.150 --> 34:44.150
那么怎么来删除Cookie呢

34:44.150 --> 34:46.150
除了我们刚才的方式

34:46.150 --> 34:47.150
但是普通用会

34:47.150 --> 34:50.150
可不能去指望他用这种方式

34:50.150 --> 34:52.150
删除Cookie其实非常简单

34:52.150 --> 34:54.150
第一个就是让他时间

34:54.150 --> 34:55.150
自动到期

34:55.150 --> 34:56.150
到期过后

34:56.150 --> 34:58.150
浏览器自动给他干掉了

34:58.150 --> 34:59.150
如果说

34:59.150 --> 35:01.150
你要没有到期之前

35:01.150 --> 35:02.150
你想删除Cookie的话

35:02.150 --> 35:04.150
其实也很简单

35:04.150 --> 35:06.150
你又再给他发一次Cookie

35:06.150 --> 35:07.150
比方说服务器

35:07.150 --> 35:09.150
像让突然

35:09.150 --> 35:10.150
比方说你修改了帐号

35:10.150 --> 35:11.150
你修改了密码

35:11.150 --> 35:13.150
这个时候你之前登陆过的

35:13.150 --> 35:14.150
但是你修改了密码

35:14.150 --> 35:15.150
我希望你重新登陆一次

35:15.150 --> 35:16.150
我怎么办呢

35:16.150 --> 35:18.150
我就让把你的Cookie给干掉

35:18.150 --> 35:19.150
那Cookie干掉

35:19.150 --> 35:20.150
是不是就相当于没有登陆了

35:20.150 --> 35:21.150
那怎么给干掉了

35:21.150 --> 35:23.150
服务器给你想印这么一个

35:23.150 --> 35:24.150
你修改密码之后

35:24.150 --> 35:26.150
就给你想印这么一个

35:26.150 --> 35:27.150
想印头

35:27.150 --> 35:30.980
就塞着Cookie

35:30.980 --> 35:31.980
键保持一样

35:31.980 --> 35:33.980
比方你跟登陆相关的Cookie的

35:33.980 --> 35:34.980
键是token

35:34.980 --> 35:35.980
假设是这个

35:35.980 --> 35:37.980
那么键保持一致

35:37.980 --> 35:38.980
指的话无所谓

35:38.980 --> 35:40.980
其他的寓意啊

35:40.980 --> 35:42.980
这些拍摄要跟之前的Cookie匹配

35:42.980 --> 35:43.980
比方之前的Cookie

35:43.980 --> 35:44.980
它是这个寓意

35:44.980 --> 35:45.980
你要写这个寓意

35:45.980 --> 35:46.980
之前的拍摄是这个地址

35:46.980 --> 35:47.980
你要写这个地址

35:47.980 --> 35:48.980
关键来说

35:48.980 --> 35:50.980
再加一个MXA等于-1

35:50.980 --> 35:52.980
MXA等于-1

35:52.980 --> 35:53.980
你知道这个是相对时间

35:53.980 --> 35:55.980
相当于是不是在过去的一秒

35:55.980 --> 35:56.980
就是上一秒过期

35:56.980 --> 35:57.980
对不对

35:57.980 --> 35:58.980
上一秒过期

35:58.980 --> 35:59.980
刘烂熙一看那里啥意思

35:59.980 --> 36:01.980
你让我在上一秒过期

36:01.980 --> 36:02.980
那我只能过期

36:02.980 --> 36:03.980
马上过期了

36:03.980 --> 36:04.980
对不对

36:04.980 --> 36:05.980
就这么个意思

36:05.980 --> 36:06.980
给他发一个

36:06.980 --> 36:08.980
同样的名称的Cookie过去

36:08.980 --> 36:09.980
把之前的Cookie给他覆盖掉

36:09.980 --> 36:10.980
这一覆盖

36:10.980 --> 36:11.980
以为他在上一秒过期

36:11.980 --> 36:13.980
那么Cookie立即失效了

36:13.980 --> 36:14.980
刘烂熙就会自动删除

36:18.980 --> 36:19.980
这里有一个小的地点

36:19.980 --> 36:20.980
要注意

36:20.980 --> 36:21.980
就是Cookie里面

36:21.980 --> 36:22.980
无论是修改还是删除

36:22.980 --> 36:24.980
都要注意Cookie的御合路径

36:24.980 --> 36:26.980
一定要跟之前那个

36:26.980 --> 36:27.980
要打算删除

36:27.980 --> 36:28.980
和打算修改那个Cookie

36:28.980 --> 36:29.980
修改是一样的

36:29.980 --> 36:30.980
你从来改个指就行了

36:30.980 --> 36:32.980
一定要保证跟这个御合

36:32.980 --> 36:34.980
PASS跟之前那个Cookie是一样的

36:34.980 --> 36:35.980
因为他可能会存在

36:35.980 --> 36:36.980
不同的御

36:36.980 --> 36:37.980
比方说你肯德基

36:37.980 --> 36:38.980
里边有个Token

36:38.980 --> 36:40.980
麦当劳那边也有个Token

36:41.980 --> 36:42.980
他会不同的御里边

36:42.980 --> 36:43.980
可能会有相同的Keyz

36:43.980 --> 36:44.980
都没问题的

36:45.980 --> 36:46.980
那么PASS也是一样

36:46.980 --> 36:48.980
都是肯德基

36:48.980 --> 36:49.980
但是呢

36:49.980 --> 36:50.980
新闻这一部分的Cookie

36:50.980 --> 36:51.980
比方说你这里起个六子

36:51.980 --> 36:53.980
这部分有个Token

36:53.980 --> 36:55.980
还有个Blogs有个Token

36:55.980 --> 36:57.980
那么他们也可以同名的

36:57.980 --> 36:58.980
同时存在的

36:59.980 --> 37:01.980
因此无法仅通过Key

37:01.980 --> 37:03.980
来确定是哪一个Cookie

37:03.980 --> 37:05.980
都是关于如何设置Cookie

37:05.980 --> 37:07.980
最后总结

37:08.980 --> 37:09.980
对

37:09.980 --> 37:10.980
还有一个客户端设置Cookie

37:10.980 --> 37:11.980
没讲

37:11.980 --> 37:12.980
我们刚才说了

37:12.980 --> 37:14.980
服务器响应的时候

37:14.980 --> 37:15.980
可以在消息头里边

37:15.980 --> 37:17.980
响应头里边去设置Cookie

37:17.980 --> 37:18.980
除此之外

37:18.980 --> 37:19.980
客户端里边

37:19.980 --> 37:20.980
也可以添加Cookie的

37:20.980 --> 37:21.980
也可以加的

37:23.980 --> 37:24.980
比方说吧

37:24.980 --> 37:25.980
我

37:25.980 --> 37:26.980
关键是我百度不知道

37:26.980 --> 37:28.980
哪一个是跟登录相关的肤体

37:29.980 --> 37:30.980
我不知道

37:31.980 --> 37:33.980
我再试一下吧

37:40.380 --> 37:41.380
他放验证码

37:41.380 --> 37:43.380
我现在还不好登录呢

37:44.380 --> 37:46.380
那我用我的账号登录

37:49.210 --> 37:51.210
我的账号又忘了

37:54.030 --> 37:55.030
那这样吧

37:55.030 --> 37:56.030
用我的网站吧

37:57.030 --> 38:07.700
账号是

38:10.140 --> 38:11.140
OK

38:12.140 --> 38:13.140
这里边我用了

38:13.140 --> 38:14.140
我的Cookie不多

38:14.140 --> 38:15.140
我只用了三个

38:15.140 --> 38:16.140
就这一个

38:17.140 --> 38:18.140
我把这个玩意

38:22.520 --> 38:24.520
我这个玩意能不能暴露

38:25.520 --> 38:26.520
算了

38:26.520 --> 38:28.520
我还是不想用这个

38:29.520 --> 38:30.520
Cookie暴露了

38:30.520 --> 38:31.520
有些

38:31.520 --> 38:33.520
大部分同学是好的

38:33.520 --> 38:35.520
但是有些同学

38:35.520 --> 38:37.520
我怕出问题

38:37.520 --> 38:38.520
算了

38:38.520 --> 38:39.520
不暴露了

38:40.520 --> 38:42.520
我在客户端也可以加Cookie

38:42.520 --> 38:43.520
本来想给他们演示一下

38:43.520 --> 38:44.520
我在那边

38:44.520 --> 38:45.520
把Cookie散烂过后

38:45.520 --> 38:47.520
我用客户端用GS把Cookie加上

38:47.520 --> 38:49.520
他仍然是可以保持登录状态的

38:50.520 --> 38:52.520
其实就是把把个纸加进去就行了

38:53.520 --> 38:54.520
客户端怎么加呢

38:54.520 --> 38:55.520
其实也很简单

38:55.520 --> 38:56.520
你要加一个Cookie的话

38:56.520 --> 38:57.520
就可以了

38:57.520 --> 38:58.520
他复纸就行了

38:58.520 --> 38:59.520
Document的Cookie

38:59.520 --> 39:00.520
给他直接复纸

39:00.520 --> 39:01.520
复纸一次就加一次

39:02.520 --> 39:03.520
那么复什么纸

39:03.520 --> 39:05.520
你之前服务器想用

39:05.520 --> 39:06.520
Cookie是怎么写法

39:06.520 --> 39:07.520
这里就怎么写法

39:07.520 --> 39:08.520
举个例子

39:08.520 --> 39:09.520
比方说

39:09.520 --> 39:10.520
我就百度吧

39:15.390 --> 39:17.390
现在我给百度里边加个Cookie

39:17.390 --> 39:18.390
Document

39:19.390 --> 39:21.390
说说为什么你们不要去暴露Cookie

39:21.390 --> 39:22.390
你暴露Cookie过后

39:22.390 --> 39:23.390
别人就一行代

39:23.390 --> 39:25.390
比方说你暴露了你百度的Cookie

39:25.390 --> 39:26.390
别人就一行代

39:27.390 --> 39:28.390
如果别人知道

39:28.390 --> 39:29.390
哪个Cookie是跟用户

39:29.390 --> 39:30.390
等等的状态相关的

39:30.390 --> 39:31.390
那么

39:31.390 --> 39:32.390
他不知道

39:32.390 --> 39:33.390
他一个个去试

39:34.390 --> 39:36.390
然后把这个Cookie

39:36.390 --> 39:37.390
加进去就行了

39:37.390 --> 39:38.390
把你暴露的Cookie的纸

39:38.390 --> 39:39.390
加进去就行了

39:39.390 --> 39:41.390
然后这里写个A等于1

39:41.390 --> 39:42.390
又回车

39:42.390 --> 39:43.390
我们来看一下

39:43.390 --> 39:44.390
这里是不是多了一个Cookie

39:49.650 --> 39:51.650
是不是多了一个A等于1

39:51.650 --> 39:52.650
对吧

39:52.650 --> 39:53.650
把这些全部移除掉

39:53.650 --> 39:54.650
因为我这些访问

39:54.650 --> 39:55.650
又全部重来

39:56.650 --> 39:57.650
如果说

39:57.650 --> 39:58.650
当然A等于1

39:58.650 --> 40:00.650
加这个Cookie是没有写

40:00.650 --> 40:01.650
其他都不是保持默认的

40:01.650 --> 40:02.650
就是他没有写育

40:02.650 --> 40:04.650
没有写PASS

40:04.650 --> 40:06.650
因此他就跟当前的网页

40:06.650 --> 40:07.650
是一样的

40:07.650 --> 40:08.650
当前的网页

40:08.650 --> 40:09.650
是这个育

40:09.650 --> 40:10.650
他就是这个育

40:10.650 --> 40:11.650
当前的网页路径是这个

40:11.650 --> 40:12.650
那么就是这个

40:12.650 --> 40:13.650
过期时间没有写

40:13.650 --> 40:14.650
他就是绘画结束

40:14.650 --> 40:15.650
对吧

40:15.650 --> 40:16.650
跟之前是一样的

40:16.650 --> 40:17.650
那如果说

40:17.650 --> 40:18.650
你要去设置过期时间

40:18.650 --> 40:19.650
怎么办

40:19.650 --> 40:20.650
Cookie

40:21.650 --> 40:22.650
A等于

40:22.650 --> 40:24.650
加了一个B等于2

40:24.650 --> 40:25.650
然后呢

40:25.650 --> 40:27.650
MAXA等于

40:27.650 --> 40:28.650
3600

40:29.650 --> 40:30.650
一回车

40:30.650 --> 40:31.650
来看一下

40:31.650 --> 40:33.650
重新打开一下

40:33.650 --> 40:35.960
你发现

40:35.960 --> 40:36.960
这个B

40:36.960 --> 40:37.960
这个B

40:37.960 --> 40:38.960
它的过期时间

40:38.960 --> 40:39.960
是不是一个小时之后

40:39.960 --> 40:40.960
下午3点

40:40.960 --> 40:41.960
过期

40:41.960 --> 40:42.960
3.33过期

40:42.960 --> 40:43.960
后面

40:43.960 --> 40:44.960
当然你还有同样的方式

40:44.960 --> 40:45.960
你可以去设置

40:45.960 --> 40:46.960
我们来设置一下

40:46.960 --> 40:47.960
Cookie

40:48.960 --> 40:50.960
把A到只改一下

40:50.960 --> 40:51.960
改成3

40:51.960 --> 40:52.960
然后再加上一个Secure

40:56.300 --> 40:57.300
好 咱们再看

41:01.400 --> 41:02.400
A到只等于3了

41:03.400 --> 41:04.400
他这里没有写

41:04.400 --> 41:06.400
他这里没有写

41:06.400 --> 41:08.400
3000的购物自动加了

41:08.400 --> 41:09.400
没有写

41:09.400 --> 41:10.400
他其实这里

41:10.400 --> 41:11.400
是有一个

41:11.400 --> 41:12.400
就是安全的

41:12.400 --> 41:13.400
他只有ATPS

41:13.400 --> 41:14.400
请求的时候

41:14.400 --> 41:15.400
才会发送

41:15.400 --> 41:16.400
在这

41:16.400 --> 41:17.400
为何发送

41:17.400 --> 41:18.400
同一网站的安全连接

41:18.400 --> 41:19.400
就这个

41:20.400 --> 41:21.400
你看B就不是

41:21.400 --> 41:23.400
仅限同一网站的连接

41:23.400 --> 41:24.400
它可以不用安全连接

41:24.400 --> 41:25.400
不用ATPS

41:25.400 --> 41:27.400
就是它区别

41:28.400 --> 41:29.400
然后的话

41:29.400 --> 41:30.400
我们也

41:30.400 --> 41:31.400
除了可以设置Cookie

41:31.400 --> 41:32.400
比方说我要3出

41:32.400 --> 41:33.400
可以怎么办呢

41:33.400 --> 41:34.400
一样的

41:34.400 --> 41:35.400
比方说我要3出A

41:35.400 --> 41:36.400
我给A重新复个值

41:38.400 --> 41:39.400
复个值

41:39.400 --> 41:40.400
无所谓

41:40.400 --> 41:41.400
随便复什么值都可以

41:41.400 --> 41:42.400
最后就完全可以不写

41:42.400 --> 41:43.400
MAXA

41:43.400 --> 41:44.400
比较复字为复一

41:44.400 --> 41:46.400
你看这样子一搞

41:46.400 --> 41:47.400
Cookie

41:49.400 --> 41:50.400
A

41:50.400 --> 41:51.400
是不是没了

41:51.400 --> 41:52.400
没的一种了

41:52.400 --> 41:53.400
你现在还能看得到

41:55.400 --> 41:56.400
这里

41:56.400 --> 41:57.400
没的一种了

41:57.400 --> 41:58.400
你现在还能看得到

41:58.400 --> 41:59.400
一会我只要一刷新页面

41:59.400 --> 42:00.400
它就没了

42:00.400 --> 42:01.400
我刷新页面

42:01.400 --> 42:02.400
我再去看A

42:02.400 --> 42:03.400
还能看得到吗

42:04.400 --> 42:05.400
是没了

42:05.400 --> 42:06.400
只有个B了

42:06.400 --> 42:07.400
对吧

42:07.400 --> 42:08.400
好

42:08.400 --> 42:09.400
这是如何来

42:09.400 --> 42:10.400
通过器也是设置Cookie

42:10.400 --> 42:12.400
那么如何来

42:14.400 --> 42:15.400
读取Cookie的

42:16.400 --> 42:17.400
你读这个属性就完事了

42:19.400 --> 42:21.400
它会把目前能读到的Cookie

42:21.400 --> 42:22.400
它不是所有的

42:22.400 --> 42:23.400
能读到的

42:24.400 --> 42:25.400
全部读给你的

42:26.400 --> 42:27.400
不能读的它就不会给你的

42:27.400 --> 42:28.400
比方说你在

42:28.400 --> 42:29.400
这个网站上

42:29.400 --> 42:30.400
你要去读那个

42:30.400 --> 42:32.400
你在肯德基的网站

42:32.400 --> 42:33.400
你要去读麦当劳的Cookie

42:33.400 --> 42:34.400
肯定是读不到

42:34.400 --> 42:36.400
你只有跑到麦当劳的网站里面

42:36.400 --> 42:37.400
把开控制台

42:37.400 --> 42:38.400
你才能读到麦当劳的Cookie

42:39.400 --> 42:40.400
这么个意思

42:40.400 --> 42:42.400
我会把你现在能读到的

42:42.400 --> 42:43.400
什么要能读到的

42:43.400 --> 42:44.400
就是你加下一次请求

42:44.400 --> 42:45.400
请求这个地址

42:45.400 --> 42:46.400
你能够把Cookie发送过去的

42:47.400 --> 42:48.400
那么这些Cookie

42:48.400 --> 42:49.400
还全部给你

42:49.400 --> 42:50.400
给力的是一个字幕串

42:50.400 --> 42:51.400
那么这字幕串的格式

42:51.400 --> 42:52.400
跟我们请求头

42:52.400 --> 42:53.400
里面的格式是一样的

42:53.400 --> 42:54.400
你要去读的话

42:54.400 --> 42:56.400
你可以自己去分割字幕串

42:56.400 --> 42:57.400
自己去处理

42:57.400 --> 42:58.400
或者用郑德表达式

42:58.400 --> 42:59.400
去切割都可以

42:59.400 --> 43:00.400
有一些网站

43:00.400 --> 43:01.400
有一些第三方库

43:01.400 --> 43:02.400
还专门来

43:02.400 --> 43:03.400
通过介石来读这个东西

43:05.400 --> 43:06.400
这就是关于这个Cookie

43:06.400 --> 43:07.400
如何设置

43:08.400 --> 43:09.400
如何发送

43:11.400 --> 43:12.400
它的整个过程

43:13.400 --> 43:14.400
最后我们来总结一下

43:16.900 --> 43:17.900
在登录

43:17.900 --> 43:18.900
我们通常把Cookie

43:18.900 --> 43:19.900
用于登录场景

43:19.900 --> 43:21.900
浏览器的请求

43:21.900 --> 43:22.900
整个登录的流程是浏览器

43:22.900 --> 43:23.900
发送请求到服务器

43:23.900 --> 43:24.900
附带账号密码

43:25.900 --> 43:27.900
服务器的验量账号密码正确

43:27.900 --> 43:28.900
如果不正确的话就不说了

43:28.900 --> 43:29.900
如果说正确的话

43:29.900 --> 43:30.900
那么它就会在Cookie里面

43:30.900 --> 43:31.900
带一个证件

43:32.900 --> 43:33.900
一般来说

43:33.900 --> 43:34.900
我给你一个加密的

43:34.900 --> 43:35.900
认证信息

43:36.900 --> 43:37.900
那么到底带什么证件

43:37.900 --> 43:38.900
可以接WT

43:39.900 --> 43:40.900
接WT

43:40.900 --> 43:41.900
是咱们之前

43:41.900 --> 43:42.900
做登录的时候

43:42.900 --> 43:43.900
在项目里面

43:43.900 --> 43:44.900
做登录的时候

43:44.900 --> 43:45.900
都是用它

43:45.900 --> 43:46.900
就是啥

43:46.900 --> 43:48.900
就需要单独开解课来解释

43:48.900 --> 43:49.900
好 课五段

43:49.900 --> 43:50.900
收到Cookie过后

43:50.900 --> 43:51.900
浏览器会自动记录下来

43:51.900 --> 43:52.900
那么后续请求的时候

43:52.900 --> 43:53.900
浏览器会把自动的

43:53.900 --> 43:55.900
把Cookie附带过去

43:55.900 --> 43:56.900
那么服务器一看

43:56.900 --> 43:57.900
你有这个Cookie

43:57.900 --> 43:58.900
说明你之前肯定登录过了

43:58.900 --> 43:59.900
你没有登录

43:59.900 --> 44:00.900
肯定没有这个Cookie

44:00.900 --> 44:01.900
登录成功了

44:01.900 --> 44:02.900
它有这个Cookie

44:02.900 --> 44:03.900
对吧

44:03.900 --> 44:05.900
而且你能够发过来

44:05.900 --> 44:06.900
我那边再验证一下

44:06.900 --> 44:07.900
是不是OK的

44:07.900 --> 44:08.900
一切OK

44:08.900 --> 44:09.900
那就没问题了

44:09.900 --> 44:10.900
OK

44:10.900 --> 44:12.900
这就是整个的Cookie

44:12.900 --> 44:13.900
它的作用

44:13.900 --> 44:14.900
你流程

44:14.900 --> 44:15.900
它会怎么来出面试题呢

44:15.900 --> 44:16.900
它的面试题

44:16.900 --> 44:17.900
它出发是非常灵活的

44:17.900 --> 44:19.900
它通常会这样子问你

44:19.900 --> 44:20.900
就是我告诉你

44:20.900 --> 44:21.900
我现在有哪些Cookie

44:21.900 --> 44:23.900
每个Cookie的键

44:23.900 --> 44:24.900
指是啥

44:24.900 --> 44:25.900
欲是啥

44:25.900 --> 44:26.900
拍是啥

44:26.900 --> 44:27.900
这些东西

44:27.900 --> 44:28.900
这些属性有没有

44:28.900 --> 44:29.900
有没有ATP only

44:29.900 --> 44:31.900
就是之前附带的时候

44:31.900 --> 44:32.900
给你设置Cookie的时候

44:32.900 --> 44:34.900
有没有带这个东西

44:34.900 --> 44:35.900
它把每一个Cookie

44:35.900 --> 44:36.900
全部告诉你

44:36.900 --> 44:38.900
问你现在去访问

44:38.900 --> 44:39.900
某一个网站

44:39.900 --> 44:40.900
它把网址给你

44:40.900 --> 44:41.900
请问哪些Cookie

44:41.900 --> 44:43.900
会被附带过去

44:43.900 --> 44:45.900
还会用这种方式来考虑

44:45.900 --> 44:46.900
那么这里就全要用

44:46.900 --> 44:47.900
这别的逻辑

44:47.900 --> 44:48.900
去匹配

44:48.900 --> 44:49.900
你要哪些网站能够

44:49.900 --> 44:50.900
访问这个地址的时候

44:50.900 --> 44:51.900
哪些Cookie能发出过去

44:51.900 --> 44:53.900
要去看这个

44:53.900 --> 44:54.900
条件

44:54.900 --> 44:56.900
就这些条件适合满足

44:57.900 --> 45:00.900
这是它的第一种考法

45:00.900 --> 45:02.900
第二种考法就是

45:02.900 --> 45:05.900
问你就是一些基本逻辑

45:05.900 --> 45:07.900
就是为什么需要Cookie

45:07.900 --> 45:08.900
为什么

45:08.900 --> 45:09.900
因为ATP协议无状态

45:09.900 --> 45:10.900
没有状态

45:10.900 --> 45:11.900
就不知道

45:11.900 --> 45:12.900
你每一个请求的

45:12.900 --> 45:13.900
这一次请求的客户端

45:13.900 --> 45:14.900
到底是谁

45:14.900 --> 45:16.900
所以它需要有一个东西

45:16.900 --> 45:17.900
能够保存

45:17.900 --> 45:18.900
相当于是证件的

45:18.900 --> 45:21.900
证件的这么一个逻辑

45:21.900 --> 45:22.900
它需要有个东西

45:22.900 --> 45:23.900
来保存证件

45:25.900 --> 45:26.900
其他还能问

45:26.900 --> 45:28.900
Cookie这一块还能问的

45:28.900 --> 45:30.900
那么就是Cookie跟Sation的区别

45:30.900 --> 45:31.900
然后Sation东西

45:31.900 --> 45:32.900
又需要单独的去开一节课

45:32.900 --> 45:33.900
大概就这样子

45:33.900 --> 45:34.900
好 这是关于Cookie

45:34.900 --> 45:36.900
就应该全部讲完了

