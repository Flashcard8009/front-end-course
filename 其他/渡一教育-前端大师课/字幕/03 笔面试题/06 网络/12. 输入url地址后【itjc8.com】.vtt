WEBVTT

00:00.240 --> 00:07.240
这是一道经典的题 也是面试的时候特别容易考的题

00:07.240 --> 00:15.240
就是这道题呢 如果说你了解的知识越多 那你回答的就越详细

00:15.240 --> 00:19.240
可以详细到什么程度呢 可以详细到三天三夜出乎完整程度

00:19.240 --> 00:24.240
但是呢 我们不能这样子讲 这样子讲的话 你疯了我也疯了

00:24.240 --> 00:26.240
大家都疯了 面试完也疯了

00:26.240 --> 00:31.240
我们讲面试题呢 讲到一个什么程度 试一

00:31.240 --> 00:37.240
其实我的要求很简单 我的原则就是 咱们杜一的学生出去面试的时候

00:37.240 --> 00:42.240
你回答面试题 只要能够把其他的面试者按在地上摩擦就可以了

00:42.240 --> 00:46.240
我就不要求再多了 你比其他人强就可以了

00:46.240 --> 00:51.240
所以我们这里的难度适中 然后比其他面试者强

00:51.240 --> 00:54.240
就到这么一个程度就可以了 我们就回答这道题

00:55.240 --> 00:59.240
一步一步说 但是有一些步骤 可能同学们现在知识还没有学

00:59.240 --> 01:03.240
我就简单的说一下 大家先有这么一个印象

01:03.240 --> 01:09.240
面试的时候也可以这么回答 然后之后 因为我们面试整个面试课

01:09.240 --> 01:14.240
就比面试题的讲解这个课程 我们知识是分了层次的 对吧

01:14.240 --> 01:19.240
有些是必学的 有些是选学的 有些是以后慢慢去了解的

01:20.240 --> 01:25.240
所以有些知识是以之后的课程才会学习

01:25.240 --> 01:29.240
我们这里先给大家说了 第一步

01:29.240 --> 01:33.240
就地址南里边输入一个地址 你按下回车 发生哪些事呢

01:33.240 --> 01:37.240
第一步 先自动补权 协议 端口

01:37.240 --> 01:40.240
这是啥意思呢 比方说你在这里输入一个百度

01:40.240 --> 01:44.240
你写协议没有 你写的协议没有 你写端口没有

01:44.240 --> 01:47.240
是否没有写 没有写回车 那不得给你补权吗

01:48.240 --> 01:53.240
其实补权协议 到底补权ADDP协议还是ATPS协议呢

01:53.240 --> 01:57.240
这里还有一些细轴 还有一些细轴

01:57.240 --> 02:00.240
我们这里就不多扯了 也没有必要

02:00.240 --> 02:03.240
因为这些细轴我可以肯定的告诉你

02:03.240 --> 02:05.240
其他原始都不知道 而且比较深

02:05.240 --> 02:08.240
不用去管这些东西 反正还会给你补权 就管事了

02:08.240 --> 02:12.240
有些是给你补权成ATP 有些是给你补权成ATPS

02:13.240 --> 02:16.240
然后端口号没有的话 那么这个东西比较好确定

02:16.240 --> 02:19.240
如果说你是ATP协议的话 就是80端口

02:19.240 --> 02:22.240
如果说是ATPS的话 就是43端口

02:22.240 --> 02:24.240
这个没有什么好说的

02:24.240 --> 02:27.240
那么这里就是补权 还有一种情况

02:27.240 --> 02:30.240
什么情况呢 就是你写的不是网站

02:30.240 --> 02:32.240
写的是一个关键字

02:32.240 --> 02:35.240
那么这种情况 它就会给你进行搜索

02:35.240 --> 02:37.240
那么它就会按照浏览器的配置

02:37.240 --> 02:40.240
如果说配置的默认搜索引擎是百度 它就搜索百度

02:40.240 --> 02:43.240
如果说配置的是谷歌 它就搜索谷歌

02:43.240 --> 02:45.240
或者是其他的根据的配置

02:45.240 --> 02:50.240
总之呢 也要完成一个UIL地址的协议和端口补权

02:50.240 --> 02:52.240
OK 这是第一步

02:52.240 --> 02:55.240
第二步呢 它还要完成UIL编码

02:55.240 --> 02:56.240
这是什么意思呢

02:56.240 --> 02:59.240
比方说你写的地址 它可能里边有一些

02:59.240 --> 03:01.240
比方说我们百度吧

03:01.240 --> 03:05.240
里边有一些文字是中文

03:05.240 --> 03:08.240
比方说我们这里写一个

03:08.240 --> 03:10.240
这叫什么名字呢

03:10.240 --> 03:14.240
百度 百度搜索关键字在啥呀

03:14.240 --> 03:16.240
来搜一下 SWD

03:16.240 --> 03:19.240
比方说我们这里搜索的是那个

03:19.240 --> 03:21.240
搜索的是那个无视

03:21.240 --> 03:22.240
又回头

03:22.240 --> 03:24.240
那么这个地址里边是不是有中文

03:24.240 --> 03:27.240
那么有中文的时候 它显示出来是中文

03:27.240 --> 03:31.240
但是呢 实际上呢 它给你变成了这个样子

03:31.240 --> 03:33.240
这叫做UIL编码 对吧

03:33.240 --> 03:36.240
因为UIL这个地址里边是不能出现

03:36.240 --> 03:38.240
非Ask字符的

03:38.240 --> 03:42.240
Ask字符呢 它只能是数字字母

03:42.240 --> 03:44.240
和一些常见的英文符号

03:44.240 --> 03:46.240
它不能出现其他字符

03:46.240 --> 03:47.240
那出现其他字符的时候呢

03:47.240 --> 03:49.240
它会进行给你执行自动编码

03:49.240 --> 03:50.240
当然这个玩意呢

03:50.240 --> 03:52.240
也可以利用GS啊 进行手动编码

03:52.240 --> 03:53.240
也是可以的

03:53.240 --> 03:57.240
OK 这是第二步啊 进行编码

03:57.240 --> 03:58.240
然后第三步

03:58.240 --> 04:00.240
当然这个有些顺序呢

04:00.240 --> 04:02.240
它不一定是严格按到这个顺序

04:02.240 --> 04:04.240
有些事情呢 可能是同时进行的

04:04.240 --> 04:07.240
我这里能列的顺序呢 只是它都会做这些事

04:07.240 --> 04:08.240
然后接下来

04:08.240 --> 04:10.240
浏览器呢 会根据UIL地址呢

04:10.240 --> 04:12.240
查找本地缓存

04:12.240 --> 04:14.240
那么这里呢 要涉及到缓存协议了

04:14.240 --> 04:16.240
缓存协议呢 是我们单独的一节课

04:16.240 --> 04:17.240
这里先了解一下

04:17.240 --> 04:19.240
缓存什么意思呢 就是

04:19.240 --> 04:21.240
有一些请求啊 服务器说

04:21.240 --> 04:23.240
你这个东西我给你一次

04:23.240 --> 04:24.240
你以后就不要问我了

04:24.240 --> 04:25.240
你直接用你的缓存

04:25.240 --> 04:27.240
就浏览器把它保存下来了

04:27.240 --> 04:29.240
那么就不会再请求服务器了

04:29.240 --> 04:30.240
是这么一种情况

04:30.240 --> 04:31.240
那么这个缓存的时候

04:31.240 --> 04:32.240
里边呢 有一些规则

04:32.240 --> 04:34.240
比方说缓存的过期时间啊

04:34.240 --> 04:36.240
对吧 缓存里边

04:36.240 --> 04:38.240
要那个

04:38.240 --> 04:39.240
对应的地址啊 对吧

04:39.240 --> 04:41.240
一个地址就是一个缓存

04:41.240 --> 04:43.240
那么浏览器呢 它就相当于是缓存到

04:43.240 --> 04:44.240
浏览器的一个小文件里边

04:44.240 --> 04:46.240
一些缓存文件里边

04:46.240 --> 04:48.240
那么它会查看一下

04:48.240 --> 04:50.240
有没有本地缓存

04:50.240 --> 04:51.240
如果说有缓存的话

04:51.240 --> 04:53.240
并且命中了缓存的时候

04:53.240 --> 04:54.240
它就不会发生请求了

04:54.240 --> 04:55.240
直接使用缓存

04:55.240 --> 04:57.240
这里呢 有一点给大家说一下

04:57.240 --> 04:58.240
虽然说有缓存

04:58.240 --> 05:00.240
可以提高我们的一些效率

05:00.240 --> 05:01.240
有些请求呢

05:01.240 --> 05:03.240
我们不需要通过网络去拿了

05:03.240 --> 05:04.240
直接从缓存里边取就往下了

05:04.240 --> 05:06.240
但是一般来说

05:06.240 --> 05:08.240
我们的页面地址都不会缓存的

05:08.240 --> 05:10.240
都不会进行缓存

05:10.240 --> 05:13.240
一般来说 当然黑鸯缓存也可以

05:13.240 --> 05:15.240
好 这是关于这个第三点

05:15.240 --> 05:16.240
我们在缓存

05:16.240 --> 05:18.240
ATDP缓存协议那一块

05:18.240 --> 05:20.240
会详细的说

05:21.240 --> 05:22.240
这个

05:22.240 --> 05:24.240
通过DNS解析

05:24.240 --> 05:26.240
找到服务器的IP地址

05:26.240 --> 05:27.240
是什么意思呢

05:27.240 --> 05:29.240
就是我们这里写的是一个域名

05:29.240 --> 05:30.240
对吧

05:30.240 --> 05:31.240
其实在网络中

05:31.240 --> 05:32.240
域名是不能通信的

05:32.240 --> 05:34.240
不能通过域名通信的

05:34.240 --> 05:36.240
我们网络通信是要通过IP地址

05:36.240 --> 05:38.240
大家学过

05:39.240 --> 05:41.240
我们的七层 五层协议

05:41.240 --> 05:42.240
对吧

05:42.240 --> 05:43.240
计算机的五层协议

05:43.240 --> 05:44.240
那么第一层是什么

05:44.240 --> 05:45.240
应用层

05:45.240 --> 05:46.240
第二层是什么

05:46.240 --> 05:47.240
那个传输层

05:47.240 --> 05:49.240
第三层就是网络层

05:50.240 --> 05:51.240
网络层里边就规定了

05:51.240 --> 05:53.240
每一个主机

05:53.240 --> 05:55.240
它需要有一个IP地址

05:55.240 --> 05:56.240
那么到时候通信的时候

05:56.240 --> 05:58.240
你要通过这个IP地址

05:58.240 --> 05:59.240
我来找到

05:59.240 --> 06:00.240
我应该通过哪一

06:00.240 --> 06:01.240
网络中有这么多节点

06:01.240 --> 06:02.240
对吧

06:02.240 --> 06:03.240
有这么多路由器

06:03.240 --> 06:04.240
我要通过哪一条路径

06:04.240 --> 06:06.240
能够到达对方那里去

06:06.240 --> 06:08.240
所以说IP地址是

06:08.240 --> 06:10.240
第三层的协议

06:10.240 --> 06:11.240
而域名这个东西

06:11.240 --> 06:12.240
我们可以认为是

06:12.240 --> 06:13.240
应用层的协议

06:13.240 --> 06:14.240
对吧

06:14.240 --> 06:15.240
说光知道域名

06:15.240 --> 06:16.240
是没有办法通信的

06:16.240 --> 06:18.240
所以它必须要得到IP

06:18.240 --> 06:19.240
那么这里就设计

06:19.240 --> 06:20.240
要一个翻译的问题

06:20.240 --> 06:21.240
要根据这个域名

06:21.240 --> 06:22.240
来得到IP

06:22.240 --> 06:23.240
那么这个过程

06:23.240 --> 06:25.240
其实要分为很多个步骤

06:25.240 --> 06:27.240
那我这里就写一个步骤了

06:27.240 --> 06:28.240
因为这也会进入到

06:28.240 --> 06:29.240
另外一块指示

06:29.240 --> 06:31.240
就是DNS解析

06:31.240 --> 06:33.240
我们有一节单独的课程

06:33.240 --> 06:35.240
讲这个DNS解析

06:35.240 --> 06:36.240
反正要经过这一步

06:36.240 --> 06:38.240
拿到IP地址

06:38.240 --> 06:39.240
好 拿到IP地址

06:39.240 --> 06:40.240
过后就可以通信了

06:40.240 --> 06:41.240
但是在通信之前

06:41.240 --> 06:43.240
因为我们ATDP协议

06:43.240 --> 06:45.240
是建立在TCP协议之上的

06:45.240 --> 06:47.240
这是应用层的ATDP

06:47.240 --> 06:48.240
下面就是TCP

06:48.240 --> 06:50.240
它用的是TCP协议

06:50.240 --> 06:52.240
那么TCP协议要求

06:52.240 --> 06:54.240
是每一次通信之前

06:54.240 --> 06:56.240
我们要进行

06:56.240 --> 06:58.240
连接通道的建立

06:58.240 --> 07:00.240
有了这个连接通道之后

07:00.240 --> 07:01.240
我们才能进行通信

07:01.240 --> 07:02.240
就毫必说

07:02.240 --> 07:03.240
我要打电话

07:03.240 --> 07:04.240
对吧 TCP协议就是

07:04.240 --> 07:05.240
我要先拨号

07:05.240 --> 07:06.240
拨完号之后

07:06.240 --> 07:07.240
我要先说话

07:07.240 --> 07:09.240
喂 你在吗

07:09.240 --> 07:10.240
能听到吗

07:10.240 --> 07:11.240
对吗说

07:11.240 --> 07:12.240
我能听到

07:12.240 --> 07:13.240
然后你能听到吗

07:13.240 --> 07:14.240
我也能听到

07:14.240 --> 07:15.240
好 这个时候

07:15.240 --> 07:17.240
连接才真正的建立

07:17.240 --> 07:18.240
建立之后

07:18.240 --> 07:19.240
你们再说啥

07:19.240 --> 07:20.240
那就是应用层的协议的

07:20.240 --> 07:22.240
如果说你要给他

07:22.240 --> 07:23.240
说一个文件内容

07:23.240 --> 07:25.240
那就是FTP协议

07:25.240 --> 07:26.240
发文件

07:26.240 --> 07:27.240
你要给他说一些

07:27.240 --> 07:28.240
我要一个网易

07:28.240 --> 07:29.240
那就是ATDP协议

07:29.240 --> 07:30.240
懂这意思吧

07:30.240 --> 07:31.240
总之就是

07:31.240 --> 07:32.240
要建立连接之后

07:32.240 --> 07:34.240
才能玩剩下的事情

07:34.240 --> 07:35.240
因此

07:35.240 --> 07:36.240
我们现在还没有请求

07:36.240 --> 07:39.240
还只是在建立连接

07:39.240 --> 07:40.240
建立连接

07:40.240 --> 07:41.240
那么这就要经过

07:41.240 --> 07:42.240
三次获首

07:42.240 --> 07:43.240
关于这个TCP三次获首

07:43.240 --> 07:45.240
我们也是单独的一节课

07:45.240 --> 07:46.240
好 接下来

07:46.240 --> 07:47.240
有可能你使用了

07:47.240 --> 07:49.240
ATP-S协议

07:49.240 --> 07:50.240
使用ATP-S协议的话

07:50.240 --> 07:51.240
要

07:51.240 --> 07:53.240
那么就要进行加密传输了

07:53.240 --> 07:54.240
那么ATP-S协议

07:54.240 --> 07:55.240
如何来进行加密传输

07:55.240 --> 07:56.240
又是一节课

07:56.240 --> 07:58.240
又是单独的一节课来讲

07:58.240 --> 08:00.240
那么这个

08:00.240 --> 08:02.240
如果说你使用ATP-S协议

08:02.240 --> 08:05.240
它会进行SSL卧手

08:05.240 --> 08:06.240
那么这个是什么意思呢

08:06.240 --> 08:08.240
就主要是来建立加密信道

08:08.240 --> 08:10.240
主要是起这么一个作用

08:10.240 --> 08:11.240
那么SSL是什么意思呢

08:11.240 --> 08:13.240
它是这么一个关系

08:13.240 --> 08:14.240
就是ATP

08:14.240 --> 08:15.240
我们上面是ATDP

08:15.240 --> 08:17.240
那么下面是TCP

08:17.240 --> 08:18.240
这是目前的情况

08:18.240 --> 08:20.240
那如果说你要加密传输的话

08:20.240 --> 08:22.240
那就是ATP-S

08:22.240 --> 08:24.240
下面是SSL协议

08:24.240 --> 08:25.240
然后再

08:25.240 --> 08:27.240
然后剩下的再是TCP协议

08:27.240 --> 08:29.240
就是通道建立之后

08:29.240 --> 08:30.240
通道建立之后

08:30.240 --> 08:32.240
还要进行SSL的三次获

08:32.240 --> 08:33.240
就不是三次获首

08:33.240 --> 08:35.240
就是SSL的卧手

08:35.240 --> 08:36.240
建立加密信道

08:36.240 --> 08:39.240
然后再传输ATP的内容

08:39.240 --> 08:40.240
它就多了一个过程了

08:40.240 --> 08:42.240
说这里是建立加密信道

08:42.240 --> 08:44.240
这么一个步骤

08:45.240 --> 08:48.240
如果说你使用的ATP-S协议

08:48.240 --> 08:50.240
在握手的时候

08:50.240 --> 08:52.240
它还会确定你到底使用的是哪一个版本

08:52.240 --> 08:54.240
就是ATP的版本

08:54.240 --> 08:56.240
如果说你使用了ATP-2

08:56.240 --> 08:58.240
因为ATP-2的话

08:58.240 --> 08:59.240
是一个新版本的协议

08:59.240 --> 09:01.240
我们也是单独的一节课来讲

09:01.240 --> 09:02.240
ATP-2呢

09:02.240 --> 09:04.240
这几课其实设立到知识

09:04.240 --> 09:05.240
很多很多

09:05.240 --> 09:07.240
这条面试体设立到知识

09:07.240 --> 09:08.240
也特别特别多

09:08.240 --> 09:09.240
你会哪些

09:09.240 --> 09:10.240
你会得少

09:10.240 --> 09:11.240
那你回答出来就很少

09:11.240 --> 09:12.240
你会得越多

09:12.240 --> 09:13.240
回答出来就越多

09:13.240 --> 09:15.240
才是这么一个逻辑

09:15.240 --> 09:18.240
因为ATP-2这个新版本

09:18.240 --> 09:21.240
它要求你必须要使用ATP-S协议

09:21.240 --> 09:22.240
所以说

09:22.240 --> 09:25.240
ATP-S协议又必须要进行握手

09:25.240 --> 09:26.240
所以它在握手的时候

09:26.240 --> 09:29.240
它就会带一个消息问你

09:29.240 --> 09:31.240
也咱们使用的是ATP-2这个协议吗

09:31.240 --> 09:32.240
它握手的时候

09:32.240 --> 09:35.240
它就会顺带把这个情况确定了

09:35.240 --> 09:37.240
那如果说你使用的是ATP-2的话

09:37.240 --> 09:38.240
之后发送请求

09:38.240 --> 09:40.240
就发送了是这个协议的

09:40.240 --> 09:41.240
这个版本的请求

09:41.240 --> 09:43.240
格式会有一点区别

09:43.240 --> 09:44.240
好

09:44.240 --> 09:45.240
再下一步

09:45.240 --> 09:47.240
浏览器决定要附带哪些Cookie到请求头

09:47.240 --> 09:48.240
这个是不是我们学过的

09:48.240 --> 09:49.240
对不对

09:49.240 --> 09:50.240
Cookie的命中

09:50.240 --> 09:52.240
哪些Cookie我们这一次

09:52.240 --> 09:53.240
会自动附带过去

09:53.240 --> 09:54.240
好

09:54.240 --> 09:55.240
把这个决定好

09:55.240 --> 09:57.240
接下来一切都准备就去了

09:57.240 --> 09:58.240
我们就浏览器

09:58.240 --> 09:59.240
会自动设置好请求头

09:59.240 --> 10:00.240
这个时候才发送请求

10:00.240 --> 10:02.240
连接通道也有了

10:02.240 --> 10:04.240
加密信道也有了

10:04.240 --> 10:06.240
然后Cookie的东西都确定好了

10:06.240 --> 10:08.240
那么自动设置好请求头

10:08.240 --> 10:10.240
请求头里面还会包含一些

10:10.240 --> 10:12.240
一些默认的制断

10:12.240 --> 10:14.240
然后我们的协议版本使用哪个协议

10:14.240 --> 10:16.240
ATP-1.1还是ATP-2

10:16.240 --> 10:18.240
然后Cookie这些东西都设置好

10:18.240 --> 10:20.240
然后发送一个get请求到服务器

10:20.240 --> 10:22.240
那么服务器

10:22.240 --> 10:23.240
怎么发过去的

10:23.240 --> 10:24.240
那我们就不管了

10:24.240 --> 10:25.240
那就设计到第三层了

10:25.240 --> 10:27.240
像我们是学前端的

10:27.240 --> 10:29.240
了解到第二层就行了

10:29.240 --> 10:31.240
我们的应用层

10:31.240 --> 10:33.240
然后是传输层

10:33.240 --> 10:34.240
到这就行了

10:34.240 --> 10:35.240
我们了解一些

10:35.240 --> 10:37.240
还不会了解权

10:37.240 --> 10:38.240
一切就可以了

10:38.240 --> 10:39.240
那么后面的网络层

10:39.240 --> 10:40.240
数据链路物理层

10:40.240 --> 10:42.240
那就不要去了解了

10:42.240 --> 10:44.240
那个东西就越来越多了东西

10:44.240 --> 10:45.240
好我们这里的请求

10:45.240 --> 10:46.240
反正就发过去了

10:46.240 --> 10:48.240
中间经过了哪些步骤

10:48.240 --> 10:49.240
发过去了不管了

10:49.240 --> 10:50.240
那么发过去了

10:50.240 --> 10:51.240
发过去之后

10:51.240 --> 10:53.240
就该服务器处理了

10:53.240 --> 10:54.240
服务器处理的就是

10:54.240 --> 10:55.240
后端的处理流程了

10:55.240 --> 10:57.240
就不是前端需要关心的了

10:57.240 --> 10:58.240
总之它们会处理

10:58.240 --> 10:59.240
处理完了之后

10:59.240 --> 11:01.240
它们给你一个响应

11:01.240 --> 11:02.240
把一个ATP报文

11:02.240 --> 11:03.240
就是我们响应头

11:03.240 --> 11:04.240
加上响应体

11:04.240 --> 11:06.240
这么一个完整的ATP报文

11:06.240 --> 11:08.240
发给牛烂器

11:08.240 --> 11:10.240
好牛烂器受到这个报文之后

11:10.240 --> 11:12.240
它就会

11:12.240 --> 11:13.240
还有一件事情

11:13.240 --> 11:14.240
它首先要看一下

11:14.240 --> 11:15.240
就是我这里

11:15.240 --> 11:17.240
要不要关闭TCP连接

11:17.240 --> 11:19.240
这个连接要不要关闭

11:19.240 --> 11:20.240
那么要不要关闭呢

11:20.240 --> 11:23.240
它取决于ATP协议的版本

11:23.240 --> 11:25.240
以及呢

11:25.240 --> 11:26.240
投利表有个

11:26.240 --> 11:27.240
扛了一个新制度

11:27.240 --> 11:28.240
就这个制度

11:28.240 --> 11:29.240
我们来看一下吧

11:29.240 --> 11:33.090
好这比较

11:33.090 --> 11:34.090
我们看一下列车

11:34.090 --> 11:36.090
小心

11:36.090 --> 11:38.090
就看第一个网页

11:38.090 --> 11:39.090
一个网页

11:39.090 --> 11:40.090
你看

11:40.090 --> 11:41.090
响应的时候

11:41.090 --> 11:43.090
是不是加了一个扛了一个新

11:43.090 --> 11:44.090
对不对

11:44.090 --> 11:46.090
然后我们看请求

11:46.090 --> 11:47.090
请求的时候

11:47.090 --> 11:48.090
有加了一个扛了一个新

11:48.090 --> 11:49.090
对吧

11:49.090 --> 11:50.090
这个制度有什么用

11:50.090 --> 11:52.090
那不是我们这几课的内容

11:52.090 --> 11:54.090
是后边单独的一节课

11:54.090 --> 11:56.090
就是ATP版本那一节课

11:56.090 --> 11:57.090
来讲的事情

11:57.090 --> 11:58.090
这些课的内容

11:58.090 --> 11:59.090
很多东西

11:59.090 --> 12:00.090
大家可能还没有学到

12:00.090 --> 12:01.090
没关系

12:01.090 --> 12:02.090
我们先大概了解一下

12:02.090 --> 12:03.090
你只要面试的时候

12:03.090 --> 12:04.090
能够把这些

12:04.090 --> 12:06.090
八九不离十的回答出来

12:06.090 --> 12:07.090
那就已经可以

12:08.090 --> 12:09.090
把其他面试了

12:09.090 --> 12:10.090
按下地上摩擦了

12:10.090 --> 12:11.090
所以说我们这里

12:11.090 --> 12:12.090
有些东西没学

12:12.090 --> 12:13.090
我们大概了解一下就行了

12:13.090 --> 12:14.090
这个制断起是一个

12:14.090 --> 12:15.090
什么样的作用

12:15.090 --> 12:17.090
主要的作用就是

12:17.090 --> 12:19.090
那个TCP连接通道

12:19.090 --> 12:20.090
要不要关

12:20.090 --> 12:21.090
啥意思

12:21.090 --> 12:22.090
就好必说你打电话

12:22.090 --> 12:23.090
打电话怎么连接通道的建立

12:23.090 --> 12:24.090
是

12:24.090 --> 12:25.090
喂 你好

12:25.090 --> 12:26.090
你听得到吗

12:26.090 --> 12:27.090
我听得到

12:27.090 --> 12:28.090
你呢

12:28.090 --> 12:29.090
我也听得到

12:29.090 --> 12:30.090
连接通道建立的

12:30.090 --> 12:33.090
那么最后关闭连接是什么

12:33.090 --> 12:34.090
就是把电话挂了

12:34.090 --> 12:35.090
就关闭连接

12:35.090 --> 12:37.090
就你说完了吗

12:37.090 --> 12:38.090
我说完了

12:38.090 --> 12:39.090
那你也说完了吗

12:39.090 --> 12:40.090
我也说完了

12:40.090 --> 12:42.090
那我们就可以挂电话了

12:42.090 --> 12:44.090
那么就是关闭连接

12:44.090 --> 12:46.090
那么之后要再拿数据

12:46.090 --> 12:48.090
比方说再去发送请求的话

12:48.090 --> 12:49.090
又重新建立连接

12:49.090 --> 12:50.090
重新拨号

12:50.090 --> 12:51.090
是这么一个意思

12:51.090 --> 12:52.090
那么这个地方就是

12:52.090 --> 12:53.090
确定要不要关

12:53.090 --> 12:55.090
要不要把连接关了

12:55.090 --> 12:56.090
就这个制断的作用

12:56.090 --> 12:57.090
就起这么一个作用

12:57.090 --> 12:59.090
当然还有一个东西

12:59.090 --> 13:00.090
跟协议的版本也有关系

13:00.090 --> 13:01.090
都有关系

13:01.090 --> 13:02.090
那么决定

13:02.090 --> 13:03.090
他们两个统统决定

13:03.090 --> 13:05.090
要不要保留TCP连接

13:06.090 --> 13:07.090
现在的浏览器

13:07.090 --> 13:08.090
一般来说

13:08.090 --> 13:10.090
ADP 1.1的协议的话

13:10.090 --> 13:11.090
一时半会

13:11.090 --> 13:12.090
它不会关连接

13:12.090 --> 13:13.090
一时半会不会关

13:13.090 --> 13:14.090
要留一会

13:14.090 --> 13:17.090
就是没有那么着急去挂电话

13:17.090 --> 13:18.090
如果要关的话

13:18.090 --> 13:19.090
就是经过TCP的

13:19.090 --> 13:21.090
四次挥手

13:21.090 --> 13:23.090
关闭

13:23.090 --> 13:25.090
四次挥手

13:25.090 --> 13:26.090
后面会讲

13:26.090 --> 13:28.090
以后会讲

13:28.090 --> 13:29.090
好

13:29.090 --> 13:30.090
接下来下一步

13:30.090 --> 13:32.090
那么服务器给你的东西

13:32.090 --> 13:33.090
接下来

13:33.090 --> 13:34.090
你首先要根据

13:34.090 --> 13:35.090
服务器的状态码

13:35.090 --> 13:36.090
对吧

13:36.090 --> 13:37.090
决定如何来处理这一次享用

13:37.090 --> 13:39.090
比方说服务器状态码是200

13:39.090 --> 13:40.090
那就OK

13:40.090 --> 13:41.090
那就没问题没有

13:41.090 --> 13:43.090
如果说服务器的状态码

13:43.090 --> 13:44.090
是403

13:44.090 --> 13:45.090
那就说明服务器给你拒绝了

13:45.090 --> 13:46.090
对吧

13:46.090 --> 13:47.090
你不允许你访问

13:47.090 --> 13:48.090
那你就可能要

13:48.090 --> 13:49.090
显示一个错误页面了

13:49.090 --> 13:50.090
比方说服务器的状态码

13:50.090 --> 13:51.090
404

13:51.090 --> 13:52.090
那也是一个错误

13:52.090 --> 13:54.090
包括服务器的状态码

13:54.090 --> 13:56.090
是302

13:56.090 --> 13:57.090
重定箱

13:57.090 --> 13:58.090
301 302

13:58.090 --> 13:59.090
重定箱

13:59.090 --> 14:00.090
那里浏览器

14:00.090 --> 14:01.090
来进行挑转

14:01.090 --> 14:02.090
对吧

14:02.090 --> 14:03.090
要根据这个状态码

14:03.090 --> 14:04.090
来确定如何来处理

14:04.090 --> 14:05.090
好

14:05.090 --> 14:06.090
那么比方说是200

14:06.090 --> 14:07.090
那接下来就是服务器

14:07.090 --> 14:08.090
浏览器要根据

14:08.090 --> 14:11.090
享用途中的content type

14:11.090 --> 14:12.090
那享用的时候

14:12.090 --> 14:13.090
它会有一个字段

14:13.090 --> 14:14.090
叫content type

14:14.090 --> 14:15.090
服务器会告诉你

14:15.090 --> 14:16.090
我这一块给你发了一些

14:16.090 --> 14:17.090
一堆东西啊

14:17.090 --> 14:18.090
给你发了一堆东西

14:18.090 --> 14:20.090
这个东西到底是个啥

14:20.090 --> 14:22.090
它就会通过这个字段告诉你

14:22.090 --> 14:23.090
那告诉你

14:23.090 --> 14:24.090
它是一个ATM稳当

14:24.090 --> 14:27.090
制服编码解释UTF-8

14:27.090 --> 14:28.090
那么它就会通过

14:28.090 --> 14:29.090
这个字段告诉你

14:29.090 --> 14:30.090
我们再看一下图片

14:30.090 --> 14:31.090
图片服务器会告诉你

14:31.090 --> 14:32.090
我这里给你发的东西

14:32.090 --> 14:34.090
就后边响应题里边

14:34.090 --> 14:35.090
给你发的东西

14:35.090 --> 14:36.090
是一张图片

14:36.090 --> 14:37.090
是PNG的图片

14:37.090 --> 14:38.090
那比方说

14:38.090 --> 14:39.090
我们再看一下这个字体

14:39.090 --> 14:41.090
那么服务器会告诉你

14:41.090 --> 14:45.090
它是一个恶性之流

14:45.090 --> 14:47.090
然后我们再看一下

14:47.090 --> 14:51.910
一些可能CSS吧

14:51.910 --> 14:52.910
服务器会告诉你

14:52.910 --> 14:53.910
通过这个字段告诉你

14:53.910 --> 14:54.910
它是一个CSS

14:54.910 --> 14:55.910
总之呢

14:55.910 --> 14:57.910
浏览器他看到这个东西

14:57.910 --> 14:58.910
他就知道了

14:58.910 --> 14:59.910
你后边给我的

14:59.910 --> 15:01.910
你那边的东西到底是个啥

15:01.910 --> 15:02.910
你是一个图片

15:02.910 --> 15:04.910
那我就给你用一个图片来显示

15:04.910 --> 15:06.910
所以说浏览器要怎么来显示

15:06.910 --> 15:08.910
不是因为它是一个图片

15:08.910 --> 15:10.910
而是因为通过这个字段来告诉你

15:10.910 --> 15:13.910
它到底是什么东西

15:13.910 --> 15:15.910
那么是图片

15:15.910 --> 15:16.910
我用按图片来显示

15:16.910 --> 15:17.910
是CSS

15:17.910 --> 15:18.910
我就按CSS显示

15:18.910 --> 15:19.910
是页面

15:19.910 --> 15:20.910
我就按页面的解析

15:20.910 --> 15:21.910
那么这里的大部分情况下

15:21.910 --> 15:22.910
都是一页面

15:22.910 --> 15:23.910
对吧

15:23.910 --> 15:24.910
你在浏览器地址

15:24.910 --> 15:25.910
蓝那边输入了一个地址一回车

15:25.910 --> 15:26.910
那肯定是一页面

15:26.910 --> 15:28.910
大部分都是一页面

15:28.910 --> 15:30.910
对于响应的内容的进行ATM的解析

15:30.910 --> 15:31.910
否则的话

15:31.910 --> 15:32.910
如果说其他类型的东西

15:32.910 --> 15:34.910
就做其他处理

15:34.910 --> 15:35.910
接下来

15:35.910 --> 15:36.910
浏览器会根据响应图的

15:36.910 --> 15:38.910
其他内容完成缓存

15:38.910 --> 15:40.910
那么这是缓存协议了

15:40.910 --> 15:42.910
另外一节课的东西

15:42.910 --> 15:43.910
还有Cookie

15:43.910 --> 15:44.910
这个我们讲过了

15:44.910 --> 15:46.910
它有一个字段叫SetCookie

15:46.910 --> 15:48.910
我看一下一个百度有没有

15:48.910 --> 15:50.910
应该是有的

15:50.910 --> 15:51.910
一看是不是有SetCookie

15:51.910 --> 15:54.910
那么浏览器会把Cookie加上

15:54.910 --> 15:55.910
接下来

15:55.910 --> 15:56.910
那么就

15:56.910 --> 15:57.910
这个东西都搞定了之后

15:57.910 --> 15:59.910
头不搞定了之后

15:59.910 --> 16:00.910
接下来就是响应体了

16:00.910 --> 16:01.910
就这个东西了

16:01.910 --> 16:03.910
响应体这里边东西了

16:03.910 --> 16:05.910
是不是ATM文档

16:05.910 --> 16:06.910
那么这个响应体

16:06.910 --> 16:08.910
它会从上到下进行解析

16:08.910 --> 16:09.910
ATM

16:09.910 --> 16:12.910
然后如果说中途遇到了外部资源

16:12.910 --> 16:13.910
比方说一个NINQ元素

16:13.910 --> 16:15.910
或者是一个AMG元素

16:15.910 --> 16:16.910
那么就进一步

16:16.910 --> 16:17.910
请求这些资源

16:17.910 --> 16:18.910
如果说页面上

16:18.910 --> 16:19.910
有这个什么NINQ

16:19.910 --> 16:21.910
链接一个CSS

16:21.910 --> 16:23.910
或者是AMG链接一个图片

16:23.910 --> 16:25.910
或者是Scripps链接一个GS

16:25.910 --> 16:27.910
那么它都会去重新发送请求

16:27.910 --> 16:28.910
这就是为什么页面上

16:28.910 --> 16:29.910
你看到这个完整的页面

16:29.910 --> 16:31.910
它一开始只是请求一个网页

16:31.910 --> 16:32.910
结果请求这么多

16:32.910 --> 16:34.910
它的原因就在这

16:34.910 --> 16:36.910
中途在解析的过程中

16:36.910 --> 16:38.910
会发送这些请求

16:39.910 --> 16:42.910
然后在解析整个ATM的过程中

16:42.910 --> 16:43.910
它会生成一个DOM数

16:43.910 --> 16:44.910
像我们GS里面

16:44.910 --> 16:45.910
获取了什么Document车

16:45.910 --> 16:46.910
Gate Element车

16:46.910 --> 16:48.910
那些都是DOM对象

16:48.910 --> 16:49.910
那么DOM对象

16:49.910 --> 16:51.910
都是DOM数里面的一个一个的节点

16:51.910 --> 16:52.910
它会生成个DOM数

16:52.910 --> 16:54.910
当然个DOM数的根结点就是什么

16:54.910 --> 16:56.910
根结点就是个ATM

16:56.910 --> 16:57.910
就是个ATM

16:57.910 --> 16:59.910
它会生成个DOM数

16:59.910 --> 17:01.910
除了DOM数之外

17:01.910 --> 17:02.910
在解析过程中

17:02.910 --> 17:03.910
如果说遇到了CSS

17:03.910 --> 17:06.910
它还会生成CSS数

17:06.910 --> 17:08.910
叫SOM数

17:08.910 --> 17:10.910
有的时候会简称SOM数

17:10.910 --> 17:12.910
那么这个CSS叫做规则数

17:12.910 --> 17:14.910
也叫做央视规则数

17:14.910 --> 17:15.910
那么它会决定

17:15.910 --> 17:17.910
我这里写了哪些央视

17:17.910 --> 17:19.910
那么选中了哪些节点

17:19.910 --> 17:21.910
那么就是通过这个来决定的

17:21.910 --> 17:22.910
CSS代码

17:22.910 --> 17:24.910
然后一边生成DOM数

17:24.910 --> 17:26.910
一边生成CSS数

17:26.910 --> 17:27.910
然后同时

17:27.910 --> 17:29.910
不是说生成完了之后再做这个事

17:29.910 --> 17:31.910
应该是同时

17:31.910 --> 17:33.910
把这个DOM数和CSS数

17:33.910 --> 17:35.910
合并成为一个渲染数

17:35.910 --> 17:36.910
渲染数里边

17:36.910 --> 17:38.910
它就进入了每一个节点

17:38.910 --> 17:40.910
这是在浏览器的渲染过程

17:40.910 --> 17:42.910
网络通信已经结束了

17:42.910 --> 17:44.910
进入到浏览器的渲染过程了

17:44.910 --> 17:45.910
那么浏览器的渲染时候

17:45.910 --> 17:46.910
会生成渲染数

17:46.910 --> 17:47.910
渲染数就决定了

17:47.910 --> 17:49.910
每一个节点

17:49.910 --> 17:52.910
它应该有哪些央视

17:52.910 --> 17:54.910
各种各样的CSS央视

17:54.910 --> 17:55.910
有哪些

17:55.910 --> 17:57.910
那么生成渲染数之后

17:57.910 --> 17:58.910
它还要开始计算

17:58.910 --> 18:00.910
每一个节点的位置和大小

18:00.910 --> 18:02.910
那么这一步叫做reflow

18:02.910 --> 18:03.910
是不是很熟悉了

18:03.910 --> 18:06.910
叫做回流或者是重排

18:06.910 --> 18:09.220
好

18:09.220 --> 18:11.220
然后计算出

18:11.220 --> 18:13.220
每一个节点的位置和大小

18:13.220 --> 18:14.220
就可以开始绘制了

18:14.220 --> 18:15.220
就可以把它画到屏幕上了

18:15.220 --> 18:16.220
那么它最后

18:16.220 --> 18:18.220
把一些信息发送到GPU

18:18.220 --> 18:20.220
然后让GPU

18:20.220 --> 18:21.220
让它们绘制到屏幕

18:21.220 --> 18:23.220
这个叫做repaint

18:23.220 --> 18:25.220
叫做渲染

18:25.220 --> 18:27.220
OK,那么这是这个步骤

18:27.220 --> 18:28.220
最后在解析的过程中

18:28.220 --> 18:31.220
还会触发一些事件

18:31.220 --> 18:33.220
当动物数解析完成之后

18:33.220 --> 18:35.220
它会触发动物抗体层楼立的时间

18:35.220 --> 18:36.220
当所有的资源

18:36.220 --> 18:37.220
包括的外部的CSS

18:37.220 --> 18:38.220
包括图片

18:38.220 --> 18:39.220
这些都加载完成之后

18:39.220 --> 18:41.220
会触发动的时间

18:41.220 --> 18:43.220
好,这就是整个的过程

18:43.220 --> 18:45.220
大概你要把它说清楚的话

18:45.220 --> 18:46.220
大概就是七、八分钟

18:46.220 --> 18:48.220
十分钟左右

18:48.220 --> 18:49.220
这个东西不要去背

18:49.220 --> 18:50.220
就按照我刚才

18:50.220 --> 18:52.220
袁老师刚才说的那个流程

18:52.220 --> 18:53.220
自己去理解

18:53.220 --> 18:54.220
有些东西现在还没有学

18:54.220 --> 18:56.220
你可以比较模糊

18:56.220 --> 18:57.220
都没关系

18:57.220 --> 18:58.220
只是大概知道这一步

18:58.220 --> 19:00.220
有这么一个步骤就行了

19:00.220 --> 19:01.220
那么你说的时候

19:01.220 --> 19:03.220
你按照这个过程

19:03.220 --> 19:04.220
慢慢的

19:04.220 --> 19:05.220
用你自己的语言

19:05.220 --> 19:07.220
把它描述出来就行了

19:07.220 --> 19:09.220
因为可能你描述不到百分之百

19:09.220 --> 19:11.220
描述能不能描述百分之七、八十

19:11.220 --> 19:13.220
也非常非常不错了

19:13.220 --> 19:16.220
OK,这就是关于这一块的指示

