WEBVTT

00:00.240 --> 00:05.240
好,Cookie 认识清楚之后呢,我们就来聊一聊 Session

00:05.240 --> 00:11.240
呃,Session 这个东西呢,以前在后端的面试中特别特别爱问

00:11.240 --> 00:13.240
就是Cookie 和 Session 的区别

00:13.240 --> 00:16.240
但是在前端开发中呢,面试中呢

00:16.240 --> 00:19.240
呃,要好得多啊,没有问的没有那么平反

00:19.240 --> 00:22.240
这要讲清楚这个问题呢,其实还是比较容易的

00:22.240 --> 00:24.240
给大家讲一讲就行了

00:24.240 --> 00:26.240
呃,怎么回事呢?

00:26.240 --> 00:28.240
就是Cookie 呢,虽然可以保存在客户端

00:28.240 --> 00:30.240
保存在客户端的好处就是

00:30.240 --> 00:33.240
当然Local Storage 和 Session Storage 同理啊

00:33.240 --> 00:35.240
保存在客户端的好处是什么呢?

00:35.240 --> 00:38.240
好处可以分担服务器的存储压力

00:38.240 --> 00:41.240
服务器不用存了,我帮你存了

00:41.240 --> 00:45.240
比方说一个服务器支撑了一万个客户端

00:45.240 --> 00:48.240
那些数据,很多数据可以发给那些客户端自己去存

00:48.240 --> 00:50.240
服务器可以减少很多的存储压力

00:50.240 --> 00:53.240
但是在某一些情况下呢,就会出现麻烦

00:53.240 --> 00:56.240
特别是一些敏感数据,存到客户端

00:56.240 --> 00:59.240
你要知道啊,你存到客户端的东西

00:59.240 --> 01:01.240
始终是能够被别人获取到的

01:01.240 --> 01:03.240
别人可以看得到的

01:03.240 --> 01:05.240
如果说这个数据看到无所谓的话

01:05.240 --> 01:07.240
那就无所谓啊,可以扔过去

01:07.240 --> 01:09.240
但是呢,有些数据呢,比较重要的

01:09.240 --> 01:11.240
你不希望它看到,就不太合适了

01:11.240 --> 01:13.240
比方说验证嘛

01:13.240 --> 01:15.240
验证嘛的目的是啥?

01:15.240 --> 01:17.240
像是个手机验证嘛

01:17.240 --> 01:19.240
那目的就是,要看你这个手机号

01:19.240 --> 01:20.240
是不是真实的手机号

01:20.240 --> 01:22.240
到底是不是你的手机号,对吧

01:22.240 --> 01:25.240
另外一个呢,是防止机器驻车

01:25.240 --> 01:27.240
比方说你要驻车的时候

01:27.240 --> 01:29.240
因为驻车本身就是一个

01:29.240 --> 01:31.240
ACP请求嘛,大家都知道

01:31.240 --> 01:33.240
所以说我完全可以写个程序

01:33.240 --> 01:36.240
一秒钟请求十万次

01:36.240 --> 01:38.240
那就驻车了十万个用户了

01:38.240 --> 01:41.240
很快的服务系的数据库就崩溃了

01:41.240 --> 01:43.240
所以说防止机器驻车,验证嘛

01:43.240 --> 01:45.240
无论是手机验证嘛,还是图形验证嘛

01:45.240 --> 01:46.240
都有这么一个目的啊

01:46.240 --> 01:49.240
就是要知道它是一个真实的人

01:49.240 --> 01:52.240
那怎么做呢?比方说我看这个验证嘛,流程

01:53.240 --> 01:55.240
验写完手机号之后呢

01:55.240 --> 01:57.240
这里发送验证嘛,进入第一步

01:57.240 --> 01:59.240
发送验证嘛,点击过后呢

01:59.240 --> 02:01.240
实际上就是一个请求发出去了

02:01.240 --> 02:03.240
一个阿迦克斯请求

02:03.240 --> 02:05.240
客户端,浏览器会把这个手机号

02:05.240 --> 02:07.240
发到服务器这边

02:07.240 --> 02:10.240
发到服务器,服务器那边会写一个程序

02:10.240 --> 02:12.240
像这个手机号发送一串验证嘛

02:12.240 --> 02:14.240
这个验证嘛服务器会随机生成

02:14.240 --> 02:16.240
随机生成一个验证嘛

02:16.240 --> 02:17.240
然后把这个验证嘛呢

02:17.240 --> 02:21.240
通过短信的形式发送到那个手机端

02:21.240 --> 02:24.240
同时服务器那边

02:24.240 --> 02:26.240
如果说我们用Cookie来处理

02:26.240 --> 02:27.240
看一下有什么问题

02:27.240 --> 02:29.240
服务器那边生成的验证嘛1036

02:29.240 --> 02:31.240
比方说是个1036

02:31.240 --> 02:33.240
它不但要发送到手机端

02:33.240 --> 02:36.240
还要同时发送给浏览器

02:36.240 --> 02:38.240
用Cookie的形式发送给浏览器

02:38.240 --> 02:40.240
有人问的,那为什么要发送给浏览器呢

02:40.240 --> 02:41.240
不发行不行的

02:41.240 --> 02:43.240
如果说你不发

02:43.240 --> 02:45.240
那到时候用户这里填

02:45.240 --> 02:47.240
随便填一个数字

02:47.240 --> 02:49.240
你怎么知道它是填的正确的

02:49.240 --> 02:50.240
可能在服务器那边打个电话

02:50.240 --> 02:51.240
拍个人

02:51.240 --> 02:52.240
赶快跑到用户那边

02:52.240 --> 02:54.240
看他手机给我抢过来

02:54.240 --> 02:56.240
看他手机里面是不是1036

02:56.240 --> 02:57.240
你不可能这样做对吧

02:57.240 --> 02:59.240
所以说得有个东西来记录这个1036

02:59.240 --> 03:01.240
我到时候才能验子

03:01.240 --> 03:03.240
那么假如说我用Cookie来记录

03:03.240 --> 03:05.240
那么服务器就是发一个Cookie

03:05.240 --> 03:06.240
到了客户端

03:06.240 --> 03:07.240
高速客户端

03:07.240 --> 03:09.240
我都给你验证嘛是1036

03:09.240 --> 03:11.240
同时也给你短信发了

03:11.240 --> 03:13.240
那么如果说一个正常的用户

03:13.240 --> 03:14.240
那倒是无所谓

03:14.240 --> 03:16.240
正常的用户的话

03:16.240 --> 03:17.240
用户收到短信

03:17.240 --> 03:18.240
收到短信的话

03:18.240 --> 03:20.240
他就把一个1036填进去了

03:20.240 --> 03:22.240
然后点提交

03:22.240 --> 03:23.240
也得想点提交的时候

03:23.240 --> 03:25.240
之前是不是有个Cookie

03:25.240 --> 03:27.240
这里1036是不是已经记录下来了

03:27.240 --> 03:29.240
有个Cookie在这里记录下来了

03:29.240 --> 03:31.240
之前是不是想用了个Cookie

03:31.240 --> 03:32.240
客户端这边有个Cookie

03:32.240 --> 03:34.240
好那么用户写了一个1036

03:36.240 --> 03:38.240
然后点了提交

03:38.240 --> 03:40.240
点了提交过后

03:40.240 --> 03:41.240
是不是这又是一个请求

03:41.240 --> 03:42.240
我后边就没话了

03:42.240 --> 03:43.240
后边又是一个请求

03:43.240 --> 03:44.240
这一次请求是不是

03:44.240 --> 03:46.240
会把这个1036传到服务器

03:47.240 --> 03:49.240
同时也会把刚才那个Cookie

03:49.240 --> 03:51.240
1036也传到服务器

03:51.240 --> 03:52.240
Cookie会自动带到服务器

03:52.240 --> 03:54.240
服务器那边是不是就可以验证了

03:54.240 --> 03:56.240
看一下你的Cookie里面的1036

03:56.240 --> 03:58.240
跟这里的填的1036

03:58.240 --> 04:00.240
跟填的数字是不是一样的

04:00.240 --> 04:01.240
一样的那就是验证码证券

04:01.240 --> 04:03.240
他就可以判断

04:03.240 --> 04:05.240
当然实际上这个事

04:05.240 --> 04:06.240
都不用服务器判断了

04:06.240 --> 04:07.240
因为我这边

04:07.240 --> 04:08.240
客户端点提交的时候

04:08.240 --> 04:09.240
是不是这边就可以判断

04:09.240 --> 04:11.240
因为这边有个Cookie1036

04:11.240 --> 04:12.240
我们知道戒严时

04:12.240 --> 04:13.240
是可以获取到Cookie的

04:13.240 --> 04:15.240
1036获取到

04:15.240 --> 04:16.240
然后再从这里

04:16.240 --> 04:17.240
看一下用户填的

04:17.240 --> 04:18.240
跟那个Cookie一不一样

04:18.240 --> 04:19.240
是不是就可以了

04:19.240 --> 04:21.240
看上去挺不错的对不对

04:21.240 --> 04:24.240
但是这样子肯定是有问题的

04:24.240 --> 04:26.240
因为你相当于说

04:26.240 --> 04:27.240
你把这个验证码

04:27.240 --> 04:29.240
就直接告诉客户端了

04:29.240 --> 04:31.240
就好必说

04:31.240 --> 04:33.240
你拆我手上有几个

04:33.240 --> 04:34.240
有几个硬币

04:34.240 --> 04:36.240
拆对了我把两个都给你

04:36.240 --> 04:38.240
已经告诉他了来拆他

04:38.240 --> 04:39.240
这样做客户端

04:39.240 --> 04:40.240
就可以怎么来

04:40.240 --> 04:41.240
绕过这个验证流程

04:41.240 --> 04:42.240
我随便填个手机号

04:42.240 --> 04:44.240
填个别人的手机号

04:44.240 --> 04:45.240
然后呢

04:45.240 --> 04:47.240
发出一个请求验证码

04:47.240 --> 04:49.240
反正你会把验证码告诉我的

04:49.240 --> 04:51.240
你随便给别人

04:51.240 --> 04:52.240
别人手机号发

04:52.240 --> 04:53.240
发无所谓

04:53.240 --> 04:54.240
反正我就从我的Cookie里边

04:54.240 --> 04:55.240
是不是就可以

04:55.240 --> 04:57.240
拿到这个验证码1036

04:57.240 --> 04:58.240
拿到验证码过后

04:58.240 --> 04:59.240
我就知道验证码是啥

04:59.240 --> 05:00.240
我才发一次请求

05:00.240 --> 05:01.240
把验证码填进去

05:01.240 --> 05:02.240
就完事了

05:02.240 --> 05:04.240
完全可以绕过这个

05:04.240 --> 05:05.240
不用自己的手机号

05:05.240 --> 05:07.240
这种情况就不行了

05:07.240 --> 05:10.240
你就不能把这个关键信息

05:10.240 --> 05:13.240
就是

05:13.240 --> 05:15.240
这个就是

05:15.240 --> 05:16.240
需要保护的信息

05:16.240 --> 05:18.240
发送给客户端

05:18.240 --> 05:19.240
无论你用Cookie也好

05:19.240 --> 05:21.240
还是用什么

05:21.240 --> 05:22.240
其他的Header

05:22.240 --> 05:23.240
让Local Storage保存都一样

05:23.240 --> 05:24.240
都有这个问题

05:24.240 --> 05:25.240
因为只要你把

05:25.240 --> 05:26.240
这个东西给它

05:26.240 --> 05:28.240
它肯定可以拿得到的

05:28.240 --> 05:29.240
那怎么做呢

05:29.240 --> 05:31.240
正确的做法是下边

05:31.240 --> 05:33.240
下边的图有点小

05:33.240 --> 05:34.240
我把它

05:34.240 --> 05:36.240
在流量器里边打开

05:36.240 --> 05:38.240
放大一点在这

05:38.240 --> 05:39.240
看这个图

05:39.240 --> 05:42.240
这个图就是正确的做法了

05:42.240 --> 05:43.240
我还是一样

05:43.240 --> 05:44.240
第一步 第二步都一样

05:44.240 --> 05:45.240
我把这个手机号

05:45.240 --> 05:46.240
发给流量器

05:46.240 --> 05:48.240
服务器发送一个验证码

05:48.240 --> 05:50.240
到手机1036

05:50.240 --> 05:51.240
但是这一次

05:51.240 --> 05:52.240
服务器不会把

05:52.240 --> 05:53.240
我生成的验证码

05:53.240 --> 05:55.240
告诉客户端

05:55.240 --> 05:56.240
它会告诉客户端

05:56.240 --> 05:57.240
一个什么东西呢

05:57.240 --> 05:58.240
一个SID

05:58.240 --> 06:01.240
我们把它叫做Session ID

06:01.240 --> 06:02.240
这个SID

06:02.240 --> 06:04.240
我通常就把它叫做Session ID

06:04.240 --> 06:06.240
当然这个固定的名字

06:06.240 --> 06:08.240
可以随便取得

06:08.240 --> 06:10.240
给它一个SID

06:10.240 --> 06:11.240
这个ID是什么呢

06:11.240 --> 06:12.240
要使这个客户端的身份

06:12.240 --> 06:14.240
这个东西跟那个1036

06:14.240 --> 06:15.240
没有一毛钱关系

06:15.240 --> 06:16.240
它是随机生成的

06:16.240 --> 06:17.240
也不是随机

06:17.240 --> 06:19.240
它是生成一个唯一的东西

06:19.240 --> 06:21.240
唯一的这么一个制度圈

06:21.240 --> 06:23.240
来表示你的身份是啥

06:23.240 --> 06:25.240
就好比一把钥匙一样

06:25.240 --> 06:26.240
发给你

06:26.240 --> 06:27.240
同时

06:27.240 --> 06:29.240
它再会在服务端

06:29.240 --> 06:30.240
开一块区域

06:30.240 --> 06:32.240
这个服务端有个保险柜

06:32.240 --> 06:34.240
就好比说一些

06:34.240 --> 06:36.240
像瑞士银行那种

06:36.240 --> 06:37.240
有一个保险柜

06:37.240 --> 06:40.240
你可以往那边存一些柜种物品

06:40.240 --> 06:42.240
每一个用户有一个保险柜

06:42.240 --> 06:44.240
它发给用户的是什么呢

06:44.240 --> 06:46.240
发给用户的是一个保险柜的钥匙

06:46.240 --> 06:49.240
它不会把保险柜的内容发给它

06:49.240 --> 06:51.240
它是保险柜的钥匙

06:51.240 --> 06:52.240
这个保险柜比较特殊

06:52.240 --> 06:54.240
用户是永远看不到的

06:54.240 --> 06:55.240
它只有钥匙

06:55.240 --> 06:56.240
它永远看不到

06:56.240 --> 06:58.240
它会把这个钥匙发给它

06:58.240 --> 06:59.240
那么表示

06:59.240 --> 07:00.240
这是这个用户的保险柜

07:00.240 --> 07:02.240
保险柜里面有很多小格子

07:02.240 --> 07:04.240
每个小格子就是建置队

07:04.240 --> 07:06.240
这就是一个建置队

07:06.240 --> 07:08.240
还有一些其他的建置队

07:08.240 --> 07:10.240
那么我们这里面只会用到一个建置队

07:10.240 --> 07:11.240
那么记录一下

07:11.240 --> 07:13.240
这个保险柜里面有个验证码

07:13.240 --> 07:15.240
验证码的纸是1036这个用户的

07:15.240 --> 07:17.240
那么还有一些别的用户

07:17.240 --> 07:18.240
而别的用户的话

07:18.240 --> 07:20.240
也是别的柜子跟它没关系

07:20.240 --> 07:22.240
然后别的用户的验证码是这个

07:22.240 --> 07:23.240
就记录一下

07:23.240 --> 07:24.240
好 我就看这儿

07:24.240 --> 07:26.240
这个用户的验证码是1036

07:26.240 --> 07:27.240
就放在这儿了

07:27.240 --> 07:28.240
那么只会把这个保险柜的钥匙

07:28.240 --> 07:30.240
交给这个客户端

07:30.240 --> 07:31.240
那你想一想

07:31.240 --> 07:33.240
客户端现在还能不能招得过去

07:33.240 --> 07:34.240
招不过去

07:34.240 --> 07:35.240
它手上只有这个钥匙

07:35.240 --> 07:37.240
跟1036就没有一毛钱关系

07:37.240 --> 07:39.240
那它无论如何都无法

07:39.240 --> 07:42.240
通过这个钥匙能知道验证码是啥

07:42.240 --> 07:44.240
它只能老老实实的拿出手机

07:44.240 --> 07:45.240
看一下手机的验证码

07:45.240 --> 07:47.240
然后填进去

07:47.240 --> 07:49.240
然后再点提交

07:49.240 --> 07:50.240
这样提交的时候

07:50.240 --> 07:51.240
那么这边是不是有个Cookie

07:51.240 --> 07:52.240
之前有个Cookie

07:52.240 --> 07:55.240
这个钥匙又重新会发送到服务器

07:55.240 --> 07:58.240
同时这个1036也会发到服务器

07:58.240 --> 08:00.240
那么服务器那边怎么验证呢

08:00.240 --> 08:01.240
它首先用这个钥匙

08:01.240 --> 08:03.240
打开这个保险柜

08:03.240 --> 08:05.240
然后从这个保险柜里面找到

08:05.240 --> 08:06.240
我们的验证码SN扣的

08:06.240 --> 08:08.240
这个键是水面取的

08:08.240 --> 08:10.240
可以自己定义的

08:10.240 --> 08:12.240
这边可以有很多的限制队

08:12.240 --> 08:13.240
那么找到这个SN扣的

08:13.240 --> 08:14.240
找到这个1036

08:14.240 --> 08:17.240
这个用户它的验证码是1036

08:17.240 --> 08:19.240
它给我发的验证码也是1036

08:19.240 --> 08:20.240
OK 它就正确

08:20.240 --> 08:23.240
这样子就很安全了

08:23.240 --> 08:24.240
它又绕不开了

08:24.240 --> 08:26.240
不光是这个手机验证码

08:26.240 --> 08:28.240
像是因为图片验证码都是这样做的

08:28.240 --> 08:29.240
它只会给你一个图片

08:29.240 --> 08:32.240
它不会把图片里边的数据发送到客户端

08:32.240 --> 08:34.240
如果哪一天

08:34.240 --> 08:35.240
你跑到公司里边去

08:35.240 --> 08:36.240
看到它接口里边

08:36.240 --> 08:37.240
居然给你一个

08:37.240 --> 08:40.240
把验证码的数据直接发送客户端了

08:40.240 --> 08:41.240
你可以去教育教育它

08:41.240 --> 08:43.240
然后你这个东西有什么意义呢

08:43.240 --> 08:45.240
它就起不到验证的作用

08:45.240 --> 08:47.240
这就是这种方式

08:47.240 --> 08:48.240
那么我们讲的C型是啥呢

08:48.240 --> 08:50.240
C型就是这个玩意

08:50.240 --> 08:52.240
就是一个用户的保险柜里面的限制队

08:52.240 --> 08:53.240
就是C型

08:53.240 --> 08:55.240
就C型跟口体也一样

08:55.240 --> 08:56.240
它也是限制队

08:56.240 --> 08:57.240
只不过呢

08:57.240 --> 08:59.240
它是存处在服务器端

08:59.240 --> 09:01.240
那么服务器端存这个东西用啥存呢

09:01.240 --> 09:03.240
啥都可以

09:03.240 --> 09:04.240
可以用数据库

09:04.240 --> 09:06.240
比方说像Redis这种数据库

09:06.240 --> 09:08.240
也可以直接放在一处里面

09:08.240 --> 09:10.240
用啥存无所谓

09:10.240 --> 09:12.240
那么它跟客户端之间

09:12.240 --> 09:14.240
只有一个SID

09:14.240 --> 09:16.240
C型ID的进行关系

09:16.240 --> 09:18.240
为什么要这个东西呢

09:18.240 --> 09:19.240
那不要这个东西行不行呢

09:19.240 --> 09:21.240
不要这个东西就麻烦了

09:21.240 --> 09:23.240
因为服务器要接受很多的用户

09:23.240 --> 09:25.240
它有很多的柜制

09:25.240 --> 09:28.240
比方说有一万个用户都在发出验证

09:28.240 --> 09:30.240
它要存一个一万个建制队

09:30.240 --> 09:32.240
那么到时候这个请求过来了之后

09:32.240 --> 09:33.240
它不知道这个人

09:33.240 --> 09:37.240
到底是对应哪一个建制队

09:37.240 --> 09:38.240
它不知道

09:38.240 --> 09:40.240
所以说它必须有这个C型ID

09:40.240 --> 09:42.240
C型ID跟客户端进行关联

09:42.240 --> 09:44.240
那C型ID只用发一次就行了

09:44.240 --> 09:45.240
后续请求

09:45.240 --> 09:47.240
只要发现客户端这边带了C型ID过来

09:47.240 --> 09:49.240
那么它就不会再重新发C型ID了

09:49.240 --> 09:51.240
那就通用这一个

09:51.240 --> 09:52.240
就这么个意思

09:52.240 --> 09:53.240
这就是C型

09:53.240 --> 09:55.240
那么它是存在服务器端的

09:55.240 --> 09:56.240
所以它本质区别呢

09:56.240 --> 09:58.240
就跟客户的本质区别

09:58.240 --> 09:59.240
就在于C型它存在服务器端

09:59.240 --> 10:01.240
那么Coke在客户端

10:01.240 --> 10:03.240
好 今天来看一下面试题

10:03.240 --> 10:06.240
Coke和C型ID区别是怎么有这么四个点

10:06.240 --> 10:08.240
第一个Coke的数据保存在浏览器端

10:08.240 --> 10:10.240
C型ID的数据保存在服务器端

10:10.240 --> 10:12.240
那么就造成了很多很多的区别了

10:12.240 --> 10:14.240
Coke可以分担服务器的压力

10:14.240 --> 10:16.240
让服务器存出的压力没有那么大

10:16.240 --> 10:17.240
但是同样的

10:17.240 --> 10:19.240
它的数据是很容易被用户获取到的

10:19.240 --> 10:21.240
C型ID的数据放到服务器

10:21.240 --> 10:22.240
更加安全

10:22.240 --> 10:25.240
但是同时同样会增加服务器的存出压力

10:25.240 --> 10:28.240
然后Coke的存出空间是有限的

10:28.240 --> 10:30.240
但浏览器端是只有四兆

10:30.240 --> 10:32.240
当然如果说你不用Coke

10:32.240 --> 10:33.240
能够多一点行不行

10:33.240 --> 10:35.240
那也可以吧

10:35.240 --> 10:37.240
只不过大部分都是用的Coke

10:37.240 --> 10:44.240
C型ID大部分都是用的Coke

10:44.240 --> 10:46.240
存出空间有限

10:46.240 --> 10:48.240
C型的存出空间是不限的

10:48.240 --> 10:49.240
因为就存在服务器端

10:49.240 --> 10:51.240
服务器端无非就给钱

10:51.240 --> 10:54.240
空间不够了就给钱

10:54.240 --> 10:55.240
理论上是无限的

10:55.240 --> 10:57.240
Coke只能保存制服串

10:57.240 --> 10:59.240
Coke Storage也一样

10:59.240 --> 11:01.240
C型 Storage也一样

11:01.240 --> 11:03.240
C型可以保存任何类型的数据

11:03.240 --> 11:05.240
其实这个玩意要说准确一点的话

11:05.240 --> 11:07.240
还要看你这个表是怎么存的

11:07.240 --> 11:08.240
你存到数据库

11:08.240 --> 11:10.240
要跟数据库的类型相匹配

11:10.240 --> 11:11.240
有些对象数据库

11:11.240 --> 11:13.240
只可以保存对象的

11:13.240 --> 11:15.240
但是那些普通的数据库

11:15.240 --> 11:17.240
它只能保存数据库的相关类型

11:17.240 --> 11:19.240
当然如果存在类存里边

11:19.240 --> 11:21.240
这个表存在类存里边

11:21.240 --> 11:22.240
那就可以保存任何数据

11:22.240 --> 11:25.240
这一块你可以是一个数字

11:25.240 --> 11:27.240
也可以是一个对象

11:27.240 --> 11:29.240
也可以是任何类型

11:29.240 --> 11:31.240
比方像浮端那个C型

11:31.240 --> 11:32.240
存C型的代码

11:32.240 --> 11:34.240
其实也就是一句话

11:34.240 --> 11:35.240
C型

11:35.240 --> 11:37.240
然后set item

11:37.240 --> 11:39.240
一个是件

11:39.240 --> 11:40.240
件就对应这个

11:40.240 --> 11:42.240
比方说我们就对应个SN code

11:42.240 --> 11:43.240
然后给它存个值

11:43.240 --> 11:44.240
这里边就可以写任何值

11:44.240 --> 11:45.240
对吧,可以是个对象

11:45.240 --> 11:46.240
可以是任何东西

11:46.240 --> 11:47.240
比方说1036

11:47.240 --> 11:48.240
一个数字都可以存

11:48.240 --> 11:50.240
就存进去了

11:50.240 --> 11:53.240
就这么一回事

11:53.240 --> 11:55.240
然后下边

11:55.240 --> 11:57.240
Cookie中的数据容易被获取

11:57.240 --> 11:58.240
因为它放了客户端

11:58.240 --> 11:59.240
所有的客户端的数据

11:59.240 --> 12:01.240
都是容易被获取的

12:01.240 --> 12:03.240
C型中的数据哪里获取

12:03.240 --> 12:04.240
你在作为一个用户

12:04.240 --> 12:05.240
你怎么去获取服务器上

12:05.240 --> 12:06.240
这个数据

12:06.240 --> 12:07.240
保险规律备的数据

12:07.240 --> 12:08.240
你获取不到

12:08.240 --> 12:09.240
你只能把

12:09.240 --> 12:11.240
哪怕你有钥匙的获取不到

12:11.240 --> 12:13.240
你有钥匙你只能把钥匙给它

12:13.240 --> 12:15.240
它要不要把数据拿出来给你

12:15.240 --> 12:16.240
它说了算

12:16.240 --> 12:17.240
不想给你

12:17.240 --> 12:18.240
它就不给你

12:18.240 --> 12:19.240
你是拿不到的

12:19.240 --> 12:22.240
这是Cookie和C型的区别

12:22.240 --> 12:24.240
另外一种面试题的话

12:24.240 --> 12:25.240
就是如何消除C型

12:25.240 --> 12:28.240
因为你看有个用户越来越多

12:28.240 --> 12:30.240
那这个表就越来越大

12:30.240 --> 12:31.240
那如果说100万个用户

12:31.240 --> 12:33.240
这里表是不是100万个呢

12:33.240 --> 12:35.240
是不是特别特别多

12:35.240 --> 12:37.240
像有些数据用完了过后

12:37.240 --> 12:40.240
其实用户也不是永远在线的

12:40.240 --> 12:42.240
它访问这个网站

12:42.240 --> 12:45.240
可能十多分钟就跑掉了

12:45.240 --> 12:46.240
十多分钟上一个网站

12:46.240 --> 12:47.240
十多分钟还是

12:47.240 --> 12:49.240
时间还是算比较久的

12:49.240 --> 12:50.240
玩的比较久

12:50.240 --> 12:51.240
那么这个时候

12:51.240 --> 12:52.240
用户走掉了过后

12:52.240 --> 12:54.240
这个C型就没有必要存了

12:54.240 --> 12:56.240
它下一次来再重新存就行了

12:56.240 --> 12:58.240
这些都是临时数据

12:58.240 --> 13:00.240
C型一般不存一些

13:00.240 --> 13:02.240
需要长久保存的数据

13:02.240 --> 13:03.240
长久保存的数据

13:03.240 --> 13:07.240
老老师是用数据扣技术

13:07.240 --> 13:08.240
它存一些临时的

13:08.240 --> 13:09.240
所以跑了过后

13:09.240 --> 13:11.240
这些东西就没有意义了

13:11.240 --> 13:12.240
那么这个东西

13:12.240 --> 13:13.240
没有意义就需要清除

13:13.240 --> 13:15.240
那什么时候清除C型呢

13:15.240 --> 13:17.240
有一个点就需要大家知道

13:17.240 --> 13:20.240
客户端那边没有访问你这个网站

13:20.240 --> 13:22.240
下线的你这边是不知道的

13:22.240 --> 13:23.240
服务器他怎么知道

13:23.240 --> 13:25.240
客户端那边跑掉了

13:25.240 --> 13:26.240
他怎么知道了

13:26.240 --> 13:27.240
他根本就不知道跑掉了

13:27.240 --> 13:28.240
所以说

13:28.240 --> 13:29.240
那这个东西到底存多久

13:29.240 --> 13:31.240
一般有两种做法

13:31.240 --> 13:33.240
一种是给他設置一个过期时间

13:33.240 --> 13:35.240
就是给每个用户

13:35.240 --> 13:36.240
設置过期时间

13:36.240 --> 13:37.240
一般都是统一设置

13:37.240 --> 13:39.240
比方说20分钟

13:39.240 --> 13:42.240
20分钟你都还没有请求跑过来

13:42.240 --> 13:44.240
还没有带这个C型ID过来

13:44.240 --> 13:46.240
没有新的C型ID带过来

13:46.240 --> 13:48.240
说明这个用户

13:48.240 --> 13:50.240
比方说这个

13:50.240 --> 13:51.240
这个C型

13:51.240 --> 13:52.240
这一块的建制队

13:52.240 --> 13:53.240
这个C型

13:53.240 --> 13:54.240
20分钟了

13:54.240 --> 13:56.240
20分钟内都没有任何一个请求

13:56.240 --> 13:57.240
带这个C型ID过来

13:57.240 --> 13:59.240
其他的C型ID都是不停的来

13:59.240 --> 14:01.240
那么就说明其他用户都在请求

14:01.240 --> 14:02.240
但这个用户可能已经跑掉了

14:02.240 --> 14:03.240
20分钟都没来

14:03.240 --> 14:04.240
访问一个网站

14:04.240 --> 14:06.240
我们有这么多阿迦克斯请求

14:06.240 --> 14:08.240
还有他在网上点的点去

14:08.240 --> 14:09.240
也会跳转

14:09.240 --> 14:10.240
还有沙拉都会夹载

14:10.240 --> 14:11.240
都会有请求过来的

14:11.240 --> 14:12.240
一个请求都没有

14:12.240 --> 14:15.240
因为单凡有任何一个请求过来

14:15.240 --> 14:17.240
他是不是都会把固体带过来

14:17.240 --> 14:19.240
结果他一个请求的都没有带过来

14:19.240 --> 14:20.240
说明什么

14:20.240 --> 14:21.240
从没有一个用户

14:21.240 --> 14:22.240
十字八有跑掉

14:22.240 --> 14:23.240
那么这个时候呢

14:23.240 --> 14:24.240
服务器把干掉

14:24.240 --> 14:25.240
这是设置过去时间

14:25.240 --> 14:26.240
这是这种方式

14:26.240 --> 14:29.240
另外就是客户端主动通知

14:29.240 --> 14:31.240
那么你可以在客户端序写些程序

14:31.240 --> 14:32.240
不要写一个GS

14:32.240 --> 14:34.240
只要你关闭这个网页

14:34.240 --> 14:35.240
我们监控了一个网页的关闭

14:35.240 --> 14:37.240
只要你不是强行关闭

14:37.240 --> 14:38.240
比方说强行按了

14:38.240 --> 14:39.240
电源键重启

14:39.240 --> 14:40.240
你正常的关闭网页

14:40.240 --> 14:42.240
那么都会有一个这个通知的

14:42.240 --> 14:45.240
叫做Unboard还是啥

14:46.240 --> 14:48.240
我现在忘了这个事件了

14:48.240 --> 14:50.240
好像是Windows Unload

14:52.240 --> 14:53.240
这个事件

14:55.810 --> 14:56.810
离开页面的盘子

14:56.810 --> 14:57.810
那么如果说

14:57.810 --> 14:59.810
用GS触发一个事件

14:59.810 --> 15:01.810
如果说这个事件触发了

15:01.810 --> 15:03.810
你该发一个特别的请求过去

15:03.810 --> 15:04.810
那么就服务器约定好

15:04.810 --> 15:05.810
我给你发一个请求

15:05.810 --> 15:06.810
表示我已经下线了

15:06.810 --> 15:08.810
那么服务器收到这样的请求的话

15:08.810 --> 15:10.810
就把一个对应的C型杆干掉

15:10.810 --> 15:12.810
这是有两种做法

15:12.810 --> 15:13.810
OK

15:13.810 --> 15:14.810
这是关于C型

15:14.810 --> 15:16.810
以它的相关面式

15:16.810 --> 15:17.810
这个C型其实跟里面

15:17.810 --> 15:18.810
往往没有什么关系

15:18.810 --> 15:19.810
因为它跟服务器技术

15:19.810 --> 15:20.810
延续得太紧密了

15:20.810 --> 15:22.810
而且用C型的话

15:22.810 --> 15:23.810
你扣服装这边

15:23.810 --> 15:24.810
跟前装开发者的

15:24.810 --> 15:25.810
对前装开发者来说

15:25.810 --> 15:27.810
都是感觉不到的

15:27.810 --> 15:28.810
包括这个场景里面

15:28.810 --> 15:29.810
你只需要把手机号

15:29.810 --> 15:30.810
发过去就行了

15:30.810 --> 15:31.810
对吧

15:31.810 --> 15:32.810
剩下的事情不用管了

15:32.810 --> 15:33.810
对吧

15:33.810 --> 15:34.810
然后把体交过去

15:34.810 --> 15:35.810
把电子码提交过去

15:35.810 --> 15:36.810
剩下的事情跟你没关系

15:36.810 --> 15:38.810
这个C型 ID会自己带过去

15:38.810 --> 15:39.810
OK

15:39.810 --> 15:40.810
这是关于这个C型

