WEBVTT

00:01.460 --> 00:06.460
各位同学 大家好 这节课我们继续按立职作的一个学习

00:06.460 --> 00:13.460
那么通过上节课的代码完成 我们已经实现了对这个表格的一个基本渲染

00:13.460 --> 00:17.460
以及它的这个可编辑表格 部分的内容的处理

00:17.460 --> 00:23.460
那么本节课呢 我们要来实现一下对这个表格 它的一个编辑功能的一个实现

00:23.460 --> 00:27.460
再说编辑功能实现之前呢 我们首先要明确一个问题

00:27.460 --> 00:34.460
在这个里面 我们对这种引曝的输入框 我们在编辑的时候展示一个文本框 是ok的没问题

00:34.460 --> 00:40.460
但是如果说我们对这种下拉菜单 那你看在这个里面展示的时候就有一些问题了

00:40.460 --> 00:46.460
比如说我们对这个入职时间 那它给我们返回一个日期对象 这个显然是不正确的

00:46.460 --> 00:51.460
我们可以看一下已经完成的这个案例里面 如果说是输入框

00:51.460 --> 00:54.460
我正常展示当前表格里面的内容

00:54.460 --> 01:00.460
然后作为被选职给它放在里面 那假如说如果是展示的是我们一个下拉菜单

01:00.460 --> 01:05.460
比如说性别这一块 我们可以对它进行一个男女的选择

01:05.460 --> 01:10.460
这个时候呢 你在这个给我进行一个可编辑表格生成的时候

01:10.460 --> 01:15.460
那这个时候你要给我生成一个文本框 对不对 这是这个需求

01:15.460 --> 01:20.460
还有对这个日期 如果说我想对这个入职的时间进行一个调整

01:20.460 --> 01:27.460
那这个调整的时候 我们就可以在这个里面生成一个日期的下拉菜单

01:27.460 --> 01:32.460
那这个里面我们可以借助datepicker来实现 这是第一个

01:32.460 --> 01:36.460
那第二个是什么呢 第二个就是我要说的这个里面的问题

01:36.460 --> 01:40.460
首先如果说我要去修改一个电话的话 那这个时候呢

01:40.460 --> 01:45.460
它会有一个证则验证的 那证则验证它的作用是做什么呢

01:45.460 --> 01:48.460
就是说如果你输入的职是一个无效的

01:48.460 --> 01:52.460
那这个无效的职代表着我就不想去进行一个修改了

01:52.460 --> 01:57.460
那此时呢 我们要把一个证则的一个验证规则给它传递进去

01:57.460 --> 02:02.460
传递进去之后 那我来去看你这个输入的内容是不是有效

02:02.460 --> 02:06.460
而且同时我们要对这个电话要进行一个效应 为什么呢

02:06.460 --> 02:10.460
当你修改电话号码的时候 比如说李晓明的是2511

02:10.460 --> 02:15.460
那如果说他想把这个电话号码修改为4.2 那这个时候呢

02:15.460 --> 02:19.460
就尴尬了 因为什么呢 我们数据库里面已经存储了

02:19.460 --> 02:23.460
张飞的电话号码为4.2 虽然电话号码它不具备

02:23.460 --> 02:26.460
特别的唯一性 但是呢 这个东西呢

02:26.460 --> 02:30.460
如果说我们存了两个相同的电话号码 那这个时候会造成混乱

02:30.460 --> 02:34.460
所以说我们在这个去修改电话号码的时候

02:34.460 --> 02:38.460
我们还要进行一个效应操作 这是第二个

02:38.460 --> 02:43.460
然后还有一个就是在我这个姓名这一块 那姓名这一块呢

02:43.460 --> 02:47.460
除了我可以修改当前指定姓名之外 其实右边还有一个

02:47.460 --> 02:51.460
我们这个手动输入的这一个 也就是说一个笔加一个本啊

02:51.460 --> 02:54.460
这么一个小图标 这个图标是干什么呢

02:54.460 --> 02:59.460
它就可以唤醒我们的这个详情界面 打开这么一个抽屉弹窗的

02:59.460 --> 03:03.460
这样一个功能 那这个功能呢 我们也需要实现一下啊

03:03.460 --> 03:07.460
好的 那基于以上几点呢 我们就来完成一下

03:07.460 --> 03:10.460
第一样 我们要处理的问题是什么呢

03:10.460 --> 03:15.460
如果说我们要再进行编辑的时候 那这个里面需要添加一个政策

03:15.460 --> 03:18.460
那这个政策 我们提前先给他指定好了

03:18.460 --> 03:23.460
那政策里面其实内容有好多的 我这里面已经提前给同学们准备好了

03:23.460 --> 03:26.460
我们拿去用就ok了 在哪个里面

03:26.460 --> 03:31.460
在我们员工列表模块4这个里面有一个政策

03:31.460 --> 03:35.460
那我们首先把这个 这是一个基本呢 基本的常规政策验证啊

03:35.460 --> 03:37.460
所以说呢 我们就不在这个里面完成了

03:37.460 --> 03:40.460
我们就把它给做一个复制单T样

03:40.460 --> 03:43.460
Ruler4 在Ruler4下面有一个LoganRuler

03:43.460 --> 03:46.460
那我这里面再创建一个StuffRuler

03:46.460 --> 03:51.460
StuffRuler.js 然后把它给做一个导入操作

03:51.460 --> 03:55.460
导入操作里面 其实这些政策呢 就是一一对应的

03:55.460 --> 03:59.460
我们所看到的这些里面的一个验证规则

03:59.460 --> 04:04.460
当然了 这个里面我指定的这个k值 也就是说这个自断值呢

04:04.460 --> 04:08.460
它是跟后端返回的这个自断完全吻合的

04:08.460 --> 04:12.460
为什么这样做 因为这个里面啊 会涉及到一个简单的程序设计

04:12.460 --> 04:16.460
我这样设计完成之后 如果说后端一会儿我再去渲染的时候

04:16.460 --> 04:18.460
那我直接就自行匹配就可以了

04:18.460 --> 04:22.460
因为我们知道这里面有一个值很关键 是什么呢

04:22.460 --> 04:26.460
DataInx 他呢 是通过DataInx来进行渲染的

04:26.460 --> 04:30.460
所以说其实我这个值呢 跟我们里面的DataInx是完全相同的

04:30.460 --> 04:35.460
一些基本的常规的效应 比如说像这种department level

04:35.460 --> 04:40.460
还有这个addication呢 他都是一些不能微空的一个简单的效应

04:40.460 --> 04:44.460
然后这个我们怎么来用 首先第一步呢

04:44.460 --> 04:46.460
我们要用的话 这个里面呢

04:46.460 --> 04:49.460
我们就要给他引入到clamps里面啊

04:49.460 --> 04:52.460
在引入之前 我们先来说一下

04:52.460 --> 04:56.460
上节课的一个问题啊 上节课有一个问题 是什么问题呢

04:56.460 --> 04:59.460
在这个里面 我们点击查看的时候

04:59.460 --> 05:01.460
我们可以看一下他的这个讲诚记录

05:01.460 --> 05:04.460
讲诚记录这个时候给我返回一个警告处分

05:04.460 --> 05:07.460
但他真的是警告处分吗 我们来看一下

05:07.460 --> 05:11.460
在这个里面network 我们一点击讲诚记录

05:11.460 --> 05:15.460
他的返回类型值 应该是这个datalease的

05:15.460 --> 05:17.460
我们打开啊 这里面好长啊

05:17.460 --> 05:20.460
然后type等于3 那type等于3

05:20.460 --> 05:23.460
那我们这里面显示警告处分啊 对不对

05:23.460 --> 05:25.460
我们来直接搜索一下就ok了

05:25.460 --> 05:27.460
我们在这个mapdate里面

05:27.460 --> 05:30.460
警告处分应该是第四项 对不对

05:30.460 --> 05:32.460
那这个产生原因是什么呢

05:32.460 --> 05:34.460
就是说在我们当时渲染的时候

05:34.460 --> 05:37.460
因为我们这个索引值是从零开始的 对不对

05:37.460 --> 05:39.460
但是我们在渲染的时候呢

05:39.460 --> 05:41.460
索引值我们直接没做处理

05:41.460 --> 05:44.460
那直接的在这个里面revey的type data type

05:44.460 --> 05:46.460
那我们拿到这个3

05:46.460 --> 05:48.460
其实都已经是我们这个最差长度值了

05:48.460 --> 05:49.460
所以说呢 在这个里面

05:49.460 --> 05:51.460
我们要做一个什么 减1的操作啊

05:51.460 --> 05:53.460
同时其他的下落在当

05:53.460 --> 05:55.460
如果说有这个问题的话

05:55.460 --> 05:57.460
我们也给它添加一个减1的操作

05:57.460 --> 05:59.460
那你看现在就变成了同胞批评

05:59.460 --> 06:01.460
因为它type类型3的话

06:01.460 --> 06:02.460
我们在这个里面

06:02.460 --> 06:04.460
或者是你添加一个空断啊

06:04.460 --> 06:06.460
比如说添加一个空自断都ok的

06:06.460 --> 06:07.460
这个也是可以

06:07.460 --> 06:08.460
然后呢 在这里面

06:08.460 --> 06:11.460
我们第三项就变成了一个同胞批评

06:11.460 --> 06:13.460
也就是说那你后端不是从这个

06:13.460 --> 06:15.460
1234开始的吗

06:15.460 --> 06:16.460
那我这里面就给你做一个

06:16.460 --> 06:18.460
减1操作就ok了

06:18.460 --> 06:21.460
这是第1个 还有一个是

06:21.460 --> 06:24.460
是我们这个里面的这个表单

06:24.460 --> 06:25.460
都有下来列表了

06:25.460 --> 06:26.460
这个不太好

06:26.460 --> 06:28.460
怎么办呢 我们来给他处理一下

06:28.460 --> 06:31.460
我们回到layout里面

06:31.460 --> 06:32.460
到layout里面

06:32.460 --> 06:34.460
我们有一个layout点lice

06:34.460 --> 06:35.460
其实图

06:35.460 --> 06:37.460
我们这个表单特别长的原因

06:37.460 --> 06:38.460
主要是什么呢

06:38.460 --> 06:39.460
主要就是我们那个图片

06:39.460 --> 06:40.460
给它撑起来了

06:40.460 --> 06:42.460
我们可以把图片调小一些

06:42.460 --> 06:43.460
调成40

06:43.460 --> 06:44.460
哎 你看这样了

06:44.460 --> 06:46.460
就感觉有个底边了

06:46.460 --> 06:47.460
对不对

06:47.460 --> 06:48.460
最起码你能适应这种

06:48.460 --> 06:50.460
基本的一个1920

06:50.460 --> 06:52.460
1080的这种屏幕的一个展示

06:52.460 --> 06:53.460
就ok啊

06:53.460 --> 06:55.460
好 那说完这些之后

06:55.460 --> 06:56.460
我们就开始了

06:56.460 --> 06:57.460
首先第一步

06:57.460 --> 06:59.460
我们已经创建好的一个政策

06:59.460 --> 07:00.460
那这个政策呢

07:00.460 --> 07:02.460
我们想让它进行使用

07:02.460 --> 07:04.460
那也就是说对外

07:04.460 --> 07:05.460
我们需要暴露一个

07:05.460 --> 07:07.460
stuff ruler这样一个政策

07:07.460 --> 07:08.460
对吧

07:08.460 --> 07:09.460
那这个stuff ruler

07:09.460 --> 07:11.460
怎么来做处理呢

07:11.460 --> 07:12.460
其实这个东西

07:12.460 --> 07:14.460
我们在这个index.js里面

07:14.460 --> 07:15.460
给它倒出一下

07:15.460 --> 07:16.460
是不是就可以了

07:16.460 --> 07:17.460
也就是说在这个里面

07:17.460 --> 07:18.460
我们复制一套

07:18.460 --> 07:19.460
这个叫stuff ruler

07:19.460 --> 07:21.460
那这个应该从我们的

07:21.460 --> 07:23.460
stuff ruler里面倒出

07:23.460 --> 07:25.460
倒出一个政策对象之后

07:25.460 --> 07:28.460
这里面添加一个.js

07:29.460 --> 07:30.460
当我倒出之后

07:30.460 --> 07:31.460
那这个时候呢

07:31.460 --> 07:32.460
我要去使用它

07:32.460 --> 07:34.460
使用它在哪使用呢

07:34.460 --> 07:37.460
这个里面就需要回到我们的

07:37.460 --> 07:38.460
配置式下面的

07:38.460 --> 07:40.460
stuff里面的clamps

07:40.460 --> 07:42.460
然后我们找一下

07:42.460 --> 07:44.460
配置式找到stuff

07:44.460 --> 07:47.460
stuff里面有一个clamps

07:47.460 --> 07:49.460
那clamps里面

07:49.460 --> 07:50.460
其实这个啊

07:50.460 --> 07:52.460
我们之前也没做

07:52.460 --> 07:53.460
详细的分析

07:53.460 --> 07:54.460
那我们接下来呢

07:54.460 --> 07:55.460
就给它进行一个

07:55.460 --> 07:56.460
细致的分析

07:56.460 --> 07:58.460
然后咱们来说这个事

07:58.460 --> 07:59.460
首先把这个stuff ruler

07:59.460 --> 08:01.460
肯定是在这里面使用

08:01.460 --> 08:02.460
那我就给它进行一个

08:02.460 --> 08:03.460
倒入啊

08:03.460 --> 08:08.460
stuff ruler

08:08.460 --> 08:09.460
sorry啊

08:09.460 --> 08:10.460
应该是这个

08:10.460 --> 08:11.460
倒入的路径

08:11.460 --> 08:12.460
应该是我们的这个

08:12.460 --> 08:14.460
yotius啊

08:14.460 --> 08:15.460
yotius

08:15.460 --> 08:17.460
下面的我们的这个

08:17.460 --> 08:18.460
里面的什么呢

08:18.460 --> 08:20.460
这应该是rules对吧

08:20.460 --> 08:21.460
因为我们已经配了

08:21.460 --> 08:22.460
别名音设啊

08:22.460 --> 08:23.460
并且呢

08:23.460 --> 08:24.460
我们rules有入口的

08:24.460 --> 08:26.460
一个输出文件啊

08:26.460 --> 08:27.460
好了那这个倒出之后

08:27.460 --> 08:29.460
首先别让它抱错啊

08:29.460 --> 08:30.460
没问题是不是

08:30.460 --> 08:31.460
没问题之后

08:31.460 --> 08:32.460
我们再回来说啊

08:32.460 --> 08:33.460
那像这些呢

08:33.460 --> 08:34.460
是我们渲染之前的

08:34.460 --> 08:36.460
时候使用的这个

08:36.460 --> 08:37.460
自断值

08:37.460 --> 08:38.460
我们就可以不要了

08:38.460 --> 08:39.460
咱们再来仔细看一下

08:39.460 --> 08:41.460
这里面有一个normal list

08:41.460 --> 08:42.460
还有一个呢

08:42.460 --> 08:44.460
是我们的auto list

08:44.460 --> 08:45.460
分别代表什么呢

08:45.460 --> 08:47.460
这个是我们正常的

08:47.460 --> 08:49.460
去请求的一个自断

08:49.460 --> 08:50.460
对不对

08:50.460 --> 08:53.460
正常请求的自断

08:53.460 --> 08:54.460
这个自断啊

08:54.460 --> 08:55.460
它是这个

08:55.460 --> 08:56.460
只有管理员

08:56.460 --> 08:57.460
可以进行渲染

08:57.460 --> 08:58.460
对吧

08:58.460 --> 08:59.460
这里面写一下

08:59.460 --> 09:00.460
只有管理员

09:00.460 --> 09:03.460
可以进行渲染展示

09:03.460 --> 09:04.460
也就是说

09:04.460 --> 09:05.460
那你这个

09:05.460 --> 09:06.460
其实是要全线的

09:06.460 --> 09:07.460
之后做了一件

09:07.460 --> 09:08.460
什么事呢

09:08.460 --> 09:09.460
给他们做了一个合并啊

09:09.460 --> 09:11.460
合并规则是什么呢

09:11.460 --> 09:12.460
判断我们当前

09:12.460 --> 09:14.460
用户

09:14.460 --> 09:15.460
身份

09:15.460 --> 09:16.460
如果说等于等于0

09:16.460 --> 09:17.460
成立的话

09:17.460 --> 09:18.460
那这个时候呢

09:18.460 --> 09:19.460
我们就可以

09:19.460 --> 09:20.460
把它理解为什么呢

09:20.460 --> 09:21.460
你现在如果说

09:21.460 --> 09:22.460
等于0了

09:22.460 --> 09:23.460
ok

09:23.460 --> 09:24.460
那这个时候

09:24.460 --> 09:25.460
你就是一个

09:25.460 --> 09:26.460
我们的这个管理员

09:26.460 --> 09:27.460
普通用户登陆啊

09:27.460 --> 09:28.460
普通用户登陆

09:28.460 --> 09:29.460
那我们直接的

09:29.460 --> 09:30.460
去让你展示

09:30.460 --> 09:31.460
正常渲染的这个

09:31.460 --> 09:33.460
立表自断就可以了

09:33.460 --> 09:34.460
如果说是管理员

09:34.460 --> 09:35.460
那我再把这个

09:35.460 --> 09:36.460
全线自断给你添加上

09:36.460 --> 09:37.460
就这么一个规则

09:37.460 --> 09:38.460
之后呢

09:38.460 --> 09:40.460
我们这里面啊

09:40.460 --> 09:41.460
就来到了

09:41.460 --> 09:42.460
under complements

09:42.460 --> 09:44.460
重新其实对这个

09:44.460 --> 09:46.460
我们定义好的这个

09:46.460 --> 09:47.460
clombs啊

09:47.460 --> 09:48.460
给他做了一个

09:48.460 --> 09:49.460
重新的复职

09:49.460 --> 09:51.460
那这个复职规则是什么呢

09:51.460 --> 09:52.460
在这个里面

09:52.460 --> 09:53.460
我们复职规则的时候

09:53.460 --> 09:54.460
其实这里面

09:54.460 --> 09:55.460
我们就要看一下了

09:55.460 --> 09:56.460
首先呢

09:56.460 --> 09:57.460
我们看啊

09:57.460 --> 09:58.460
他这个里面

09:58.460 --> 09:59.460
每一项

09:59.460 --> 10:00.460
那col代表着

10:00.460 --> 10:01.460
他的这个每一项啊

10:01.460 --> 10:02.460
我们知道

10:02.460 --> 10:03.460
因为入他

10:03.460 --> 10:04.460
list的commount

10:04.460 --> 10:05.460
点map

10:05.460 --> 10:06.460
是不是我们去看

10:06.460 --> 10:07.460
后面这个啊

10:07.460 --> 10:08.460
我们看啊

10:08.460 --> 10:09.460
这个里面

10:09.460 --> 10:10.460
是不是我们

10:10.460 --> 10:11.460
每一项

10:11.460 --> 10:12.460
我们判断的

10:12.460 --> 10:13.460
每一项里面

10:13.460 --> 10:14.460
是否可编辑

10:14.460 --> 10:15.460
如果说

10:15.460 --> 10:16.460
你有这个

10:16.460 --> 10:18.460
adb为初的这样一个

10:18.460 --> 10:19.460
c值

10:19.460 --> 10:20.460
也就是说一个关键值

10:20.460 --> 10:21.460
啊属性

10:21.460 --> 10:22.460
那假如说

10:22.460 --> 10:23.460
你有这个属性

10:23.460 --> 10:24.460
那我直接的

10:24.460 --> 10:25.460
就是可编辑啊

10:25.460 --> 10:26.460
假如说你要是

10:26.460 --> 10:27.460
可编辑怎么办

10:27.460 --> 10:29.460
你走下面的啊

10:29.460 --> 10:30.460
也就是说

10:30.460 --> 10:31.460
这个里面

10:31.460 --> 10:32.460
给同学们写一个注释

10:32.460 --> 10:33.460
这就是

10:33.460 --> 10:35.460
当前的单元格啊

10:35.460 --> 10:37.460
当前的单元格

10:37.460 --> 10:39.460
为可编辑的单元格

10:39.460 --> 10:42.460
可编辑的单元格

10:42.460 --> 10:43.460
那如果说

10:43.460 --> 10:44.460
你要是

10:44.460 --> 10:45.460
不可编辑的单元格

10:45.460 --> 10:46.460
那我直接把这个

10:46.460 --> 10:47.460
col

10:47.460 --> 10:48.460
也就是说

10:48.460 --> 10:49.460
我们定义好的这个

10:49.460 --> 10:50.460
close

10:50.460 --> 10:51.460
里面的这个单元格

10:51.460 --> 10:52.460
那我直接给你

10:52.460 --> 10:53.460
炫耀回去

10:53.460 --> 10:54.460
是不是就可以了

10:54.460 --> 10:55.460
你像这种

10:55.460 --> 10:56.460
不能编辑的

10:56.460 --> 10:57.460
直接描述

10:57.460 --> 10:58.460
对吧

10:58.460 --> 10:59.460
因为它呢

10:59.460 --> 11:00.460
是我们从

11:00.460 --> 11:01.460
别的这个

11:01.460 --> 11:02.460
字段里面

11:02.460 --> 11:03.460
解析出来的一个

11:03.460 --> 11:04.460
子属性

11:04.460 --> 11:05.460
所以说呢

11:05.460 --> 11:06.460
这些都不

11:06.460 --> 11:07.460
不可编辑啊

11:07.460 --> 11:08.460
如果说

11:08.460 --> 11:09.460
可编辑呢

11:09.460 --> 11:10.460
就走到这个

11:10.460 --> 11:11.460
on sale下面了

11:11.460 --> 11:12.460
on sale下面

11:12.460 --> 11:13.460
直接的

11:13.460 --> 11:15.460
他做了一个什么事呢

11:15.460 --> 11:16.460
首先

11:16.460 --> 11:17.460
他把这些属性

11:17.460 --> 11:19.460
给他进行了一个添加

11:19.460 --> 11:20.460
一些常规属性

11:20.460 --> 11:21.460
比如说这个

11:21.460 --> 11:23.460
我们找一个可编辑的吧

11:23.460 --> 11:24.460
这个里面

11:24.460 --> 11:25.460
可编辑的还不多

11:25.460 --> 11:26.460
是吧

11:26.460 --> 11:27.460
那我们直接的往上找啊

11:27.460 --> 11:28.460
这个是后面的

11:28.460 --> 11:29.460
查看表示

11:29.460 --> 11:30.460
你像这个

11:30.460 --> 11:31.460
毕业院校

11:31.460 --> 11:32.460
他就可编辑

11:32.460 --> 11:33.460
那我首先

11:33.460 --> 11:34.460
第一件事

11:34.460 --> 11:35.460
就把你毕业院校里面

11:35.460 --> 11:36.460
这三个

11:36.460 --> 11:37.460
title

11:37.460 --> 11:38.460
你添加进去啊

11:38.460 --> 11:41.460
然后添加进去之后

11:41.460 --> 11:42.460
那我们接下来

11:42.460 --> 11:43.460
要做的事是什么呢

11:43.460 --> 11:44.460
我们这里面

11:44.460 --> 11:45.460
on sale

11:45.460 --> 11:46.460
又多了一个

11:46.460 --> 11:47.460
on sale属性

11:47.460 --> 11:48.460
on sale属性

11:48.460 --> 11:49.460
这个里面

11:49.460 --> 11:50.460
能拿到一个recode

11:50.460 --> 11:51.460
recode呢

11:51.460 --> 11:52.460
这个值

11:52.460 --> 11:53.460
我们得知道一下

11:53.460 --> 11:54.460
它是个什么值

11:54.460 --> 11:55.460
那这个时候

11:55.460 --> 11:56.460
只有你知道

11:56.460 --> 11:57.460
它是什么值之后

11:57.460 --> 11:58.460
我们才能进行

11:58.460 --> 12:00.460
一个相应的处理啊

12:00.460 --> 12:01.460
然后呢

12:01.460 --> 12:03.460
我们把这个给注掉啊

12:03.460 --> 12:04.460
放在这个里面

12:04.460 --> 12:06.460
return出来一个什么

12:06.460 --> 12:07.460
以下之后呢

12:07.460 --> 12:09.460
我们打印出来这个recode

12:09.460 --> 12:10.460
我们来看一下

12:10.460 --> 12:12.460
它的答案结果

12:12.460 --> 12:13.460
在这个里面

12:13.460 --> 12:14.460
我们检查元素

12:14.460 --> 12:15.460
然后这个recode呢

12:15.460 --> 12:16.460
其实它应该是

12:16.460 --> 12:17.460
会打印很多啊

12:17.460 --> 12:19.460
这个我们要提前指导一下

12:19.460 --> 12:20.460
好的

12:20.460 --> 12:21.460
是不是很多啊

12:21.460 --> 12:23.460
随便打开一个看一下吧

12:23.460 --> 12:24.460
这个里面呢

12:24.460 --> 12:26.460
就代表着我们整行的信息

12:26.460 --> 12:27.460
比如说像这个

12:27.460 --> 12:28.460
张飞的信息

12:28.460 --> 12:30.460
是不是一整行的信息啊

12:30.460 --> 12:31.460
然后这个信息

12:31.460 --> 12:32.460
传递给谁用

12:32.460 --> 12:33.460
其实这个里面呢

12:33.460 --> 12:34.460
我们这个信息

12:34.460 --> 12:35.460
主要是传递

12:35.460 --> 12:37.460
给这个adb下面的index啊

12:37.460 --> 12:39.460
来对它进行一个使用

12:39.460 --> 12:41.460
我们可以分为两评

12:41.460 --> 12:42.460
来查看一下

12:42.460 --> 12:43.460
这个里面呢

12:43.460 --> 12:44.460
会有一些指定的

12:44.460 --> 12:45.460
接收指向

12:45.460 --> 12:46.460
我们把这个

12:46.460 --> 12:48.460
可编辑行件关掉啊

12:48.460 --> 12:49.460
你想这个里面

12:49.460 --> 12:50.460
我们这个里面

12:50.460 --> 12:51.460
有title adb呢

12:51.460 --> 12:52.460
都是从这个里面

12:52.460 --> 12:53.460
来进行接收的

12:53.460 --> 12:55.460
那现代我们要做的事情

12:55.460 --> 12:56.460
就是什么呢

12:56.460 --> 12:57.460
把我们的这个规则

12:57.460 --> 12:58.460
来给的进行一个

12:58.460 --> 13:00.460
填充就可以了

13:00.460 --> 13:02.460
那规则填充怎么填充

13:02.460 --> 13:03.460
因为我们已经拿到了

13:03.460 --> 13:04.460
一个stuff ruler

13:04.460 --> 13:05.460
对不对

13:05.460 --> 13:06.460
这个stuff ruler

13:06.460 --> 13:07.460
由于我们刚才

13:07.460 --> 13:08.460
定义好的时候

13:08.460 --> 13:09.460
跟它的data index

13:09.460 --> 13:10.460
值是完全吻合的

13:10.460 --> 13:11.460
所以说呢

13:11.460 --> 13:12.460
那我们这里面

13:12.460 --> 13:14.460
每一个单元格的rulers

13:14.460 --> 13:15.460
那我们传的

13:15.460 --> 13:17.460
就应该是一个指定的值

13:17.460 --> 13:18.460
那这个指定的值

13:18.460 --> 13:19.460
是什么呢

13:19.460 --> 13:22.460
就是我们stuff ruler

13:22.460 --> 13:23.460
然后呢

13:23.460 --> 13:24.460
这个里面

13:24.460 --> 13:25.460
我们直接的

13:25.460 --> 13:27.460
是col 点

13:27.460 --> 13:28.460
data index

13:28.460 --> 13:29.460
那这样你就把

13:29.460 --> 13:30.460
每一个的规则

13:30.460 --> 13:31.460
是不是就给它

13:31.460 --> 13:32.460
传递进去了

13:32.460 --> 13:33.460
对不对

13:33.460 --> 13:34.460
一个操作

13:34.460 --> 13:35.460
当你传递进去之后

13:35.460 --> 13:36.460
那这个时候

13:36.460 --> 13:37.460
我们又

13:37.460 --> 13:38.460
就添加了一个什么

13:38.460 --> 13:39.460
rulers

13:39.460 --> 13:40.460
对吧

13:40.460 --> 13:41.460
这里面是添加了一个

13:41.460 --> 13:42.460
然后添加完成之后

13:42.460 --> 13:43.460
我们可以看一下

13:43.460 --> 13:44.460
师傅添加成功

13:44.460 --> 13:45.460
在这里面

13:45.460 --> 13:46.460
打印一个rulers

13:46.460 --> 13:48.460
然后这个rulers

13:48.460 --> 13:49.460
看的时候

13:49.460 --> 13:50.460
也是会比较多

13:50.460 --> 13:52.460
我们来刷新一下

13:52.460 --> 13:53.460
刷新一下之后

13:53.460 --> 13:54.460
你会发现

13:54.460 --> 13:55.460
有时候是安定犯的

13:55.460 --> 13:56.460
那可能是什么呢

13:56.460 --> 13:57.460
它没有编辑的

13:57.460 --> 13:58.460
没有编辑

13:58.460 --> 13:59.460
那就不要吧

13:59.460 --> 14:00.460
对不对

14:00.460 --> 14:01.460
然后这里面

14:01.460 --> 14:02.460
什么新名

14:02.460 --> 14:03.460
已经传递过去了

14:03.460 --> 14:04.460
对吧

14:04.460 --> 14:05.460
这是我们第一个需要

14:05.460 --> 14:07.460
使用的验证规则

14:07.460 --> 14:08.460
给它传递进去了

14:08.460 --> 14:09.460
那验证规则

14:09.460 --> 14:10.460
我们给谁

14:10.460 --> 14:11.460
验证规则

14:11.460 --> 14:12.460
我们肯定是

14:12.460 --> 14:13.460
给这个放版item

14:13.460 --> 14:14.460
对不对

14:14.460 --> 14:15.460
我们对它的这个处理

14:15.460 --> 14:16.460
也不要

14:16.460 --> 14:17.460
比如说

14:17.460 --> 14:18.460
这个样式处理

14:18.460 --> 14:19.460
我们就给它干掉

14:19.460 --> 14:20.460
那么原来

14:20.460 --> 14:21.460
它有一个人呢

14:21.460 --> 14:22.460
就是说必须

14:22.460 --> 14:23.460
不能为空的

14:23.460 --> 14:24.460
这么一个验证

14:24.460 --> 14:25.460
那这个呢

14:25.460 --> 14:26.460
它相对啊

14:26.460 --> 14:27.460
是太简单了

14:27.460 --> 14:28.460
我们直接的

14:28.460 --> 14:29.460
给它做一个替换

14:29.460 --> 14:30.460
替换成

14:30.460 --> 14:31.460
我们的这个rulers

14:32.460 --> 14:34.460
传递过来的这个rulers

14:34.460 --> 14:35.460
供它来进行使用

14:35.460 --> 14:36.460
那这样呢

14:36.460 --> 14:37.460
首先保证第一点

14:37.460 --> 14:38.460
它有一个验证规则

14:38.460 --> 14:39.460
现在已经处罚了

14:39.460 --> 14:40.460
比如说

14:40.460 --> 14:41.460
我们对这个

14:41.460 --> 14:42.460
姓名的验证

14:42.460 --> 14:43.460
那姓名的验证

14:43.460 --> 14:44.460
我们可以找一下

14:44.460 --> 14:46.460
比如说这个叫

14:46.460 --> 14:47.460
staff ruler

14:47.460 --> 14:48.460
好的

14:48.460 --> 14:50.460
我们来看一下这个理念

14:50.460 --> 14:52.460
对姓名验证的时候

14:52.460 --> 14:53.460
姓名不能为空

14:53.460 --> 14:54.460
长度不正确

14:54.460 --> 14:55.460
最小长度

14:55.460 --> 14:56.460
最大长度都已经规定好了

14:56.460 --> 14:57.460
那这个时候呢

14:57.460 --> 14:58.460
它就应该给我处罚

14:58.460 --> 14:59.460
这个验证规则

14:59.460 --> 15:00.460
对不对

15:00.460 --> 15:01.460
这个验证规则

15:01.460 --> 15:02.460
我们是添加进去的

15:02.460 --> 15:04.460
当然这个中文的验证

15:04.460 --> 15:05.460
我们后期

15:05.460 --> 15:06.460
还可以进行一个添加

15:06.460 --> 15:07.460
在这里面呢

15:07.460 --> 15:08.460
我们就是单独的

15:08.460 --> 15:09.460
对它的这个

15:09.460 --> 15:10.460
我们这个姓名啊

15:10.460 --> 15:12.460
一些指定的这个字段

15:12.460 --> 15:13.460
比如说长度

15:13.460 --> 15:14.460
两位到五位

15:14.460 --> 15:15.460
这些做一个简单验证

15:15.460 --> 15:16.460
就可以了

15:16.460 --> 15:18.460
当你这个验证完成之后

15:18.460 --> 15:19.460
就是说

15:19.460 --> 15:20.460
我们规则添加进去之后

15:20.460 --> 15:21.460
咱们再来解决

15:21.460 --> 15:22.460
第二个问题

15:22.460 --> 15:23.460
啥问题呢

15:23.460 --> 15:24.460
就是说如果我要是

15:24.460 --> 15:25.460
这种下拉菜单

15:25.460 --> 15:27.460
那你这个时候展示

15:27.460 --> 15:28.460
我们这个什么

15:28.460 --> 15:29.460
性别为一

15:29.460 --> 15:30.460
不太好了

15:30.460 --> 15:31.460
那这个应该怎么来做呢

15:31.460 --> 15:33.460
我们给它调整一下

15:33.460 --> 15:34.460
比如说

15:34.460 --> 15:35.460
那你知道了

15:35.460 --> 15:36.460
我们去这个

15:36.460 --> 15:38.460
渲染的时候

15:38.460 --> 15:39.460
也就是说

15:39.460 --> 15:41.460
生成可编辑表格的时候

15:41.460 --> 15:42.460
其实这个里面

15:42.460 --> 15:43.460
我们是不是可以

15:43.460 --> 15:44.460
轮廷出击一个结果质

15:44.460 --> 15:45.460
对吧

15:45.460 --> 15:46.460
轮廷结果质

15:46.460 --> 15:47.460
那你在添加一个什么呢

15:47.460 --> 15:48.460
我们这里面

15:48.460 --> 15:49.460
再给它添加一个字段

15:49.460 --> 15:50.460
这个字段呢

15:50.460 --> 15:51.460
叫type

15:51.460 --> 15:52.460
也就是说

15:52.460 --> 15:53.460
你渲染的一个类型

15:53.460 --> 15:54.460
所以说

15:54.460 --> 15:55.460
那我们这里面

15:55.460 --> 15:58.460
就是创建一个规定

15:59.460 --> 16:01.460
编辑文本类型的

16:01.460 --> 16:02.460
一个什么

16:02.460 --> 16:03.460
编辑表单

16:04.460 --> 16:06.460
类型的一个属性

16:06.460 --> 16:07.460
这个属性呢

16:07.460 --> 16:08.460
我们就叫它

16:08.460 --> 16:09.460
type属性

16:09.460 --> 16:10.460
就OK了

16:10.460 --> 16:11.460
然后我们只要

16:11.460 --> 16:12.460
把这个type属性

16:12.460 --> 16:13.460
给它来实现一下

16:13.460 --> 16:14.460
就可以

16:14.460 --> 16:15.460
对吧

16:15.460 --> 16:16.460
首先出手话的时候

16:16.460 --> 16:17.460
我这个type

16:17.460 --> 16:18.460
等于一个空

16:18.460 --> 16:19.460
也就是说

16:19.460 --> 16:20.460
让它没有

16:20.460 --> 16:21.460
对吧

16:21.460 --> 16:22.460
或者是你等一个闹

16:22.460 --> 16:23.460
都可以

16:23.460 --> 16:24.460
然后在这里面

16:24.460 --> 16:25.460
做一个判断

16:25.460 --> 16:26.460
那这个判断呢

16:26.460 --> 16:27.460
因为比较多

16:28.460 --> 16:29.460
首先呢

16:29.460 --> 16:30.460
我们这个里面

16:30.460 --> 16:32.460
它的判断条件是什么呢

16:32.460 --> 16:33.460
我们判断条件

16:33.460 --> 16:34.460
就是

16:36.460 --> 16:37.460
因为它返回

16:37.460 --> 16:38.460
当前我们渲染的

16:38.460 --> 16:39.460
这个

16:39.460 --> 16:40.460
所引的这个

16:40.460 --> 16:41.460
K值对不对

16:41.460 --> 16:42.460
那这个K值里面

16:42.460 --> 16:43.460
如果说

16:43.460 --> 16:44.460
我们去判断一下

16:44.460 --> 16:45.460
假如说

16:45.460 --> 16:46.460
那现在有几种情况

16:46.460 --> 16:47.460
首先要是一个日期

16:47.460 --> 16:48.460
对不对

16:48.460 --> 16:49.460
那我们就得找一下

16:49.460 --> 16:51.460
这个日期

16:51.460 --> 16:53.460
我们应该是

16:53.460 --> 16:54.460
在这个里面

16:54.460 --> 16:55.460
还没找到

16:55.460 --> 16:56.460
那我们往上去

16:56.460 --> 16:57.460
入职时间

16:57.460 --> 16:58.460
入职时间

16:58.460 --> 16:59.460
如果说你

17:00.460 --> 17:01.460
是

17:01.460 --> 17:02.460
对吧

17:02.460 --> 17:04.460
有可能是这个时间啊

17:04.460 --> 17:05.460
那我们直接的

17:05.460 --> 17:06.460
这个里面

17:06.460 --> 17:07.460
是不是就要给你

17:07.460 --> 17:08.460
做一个什么

17:08.460 --> 17:09.460
给你返回

17:09.460 --> 17:10.460
我们日期对象

17:10.460 --> 17:11.460
是不是就可以了

17:11.460 --> 17:12.460
也就是说

17:12.460 --> 17:13.460
你渲染的时候

17:13.460 --> 17:14.460
只渲染

17:14.460 --> 17:15.460
是不是可以

17:15.460 --> 17:16.460
那这个时候

17:16.460 --> 17:17.460
除了这个日期之外

17:17.460 --> 17:18.460
其实还有

17:18.460 --> 17:19.460
还有什么呢

17:19.460 --> 17:20.460
我们生日

17:20.460 --> 17:21.460
生日因为

17:21.460 --> 17:22.460
它添加的时候

17:22.460 --> 17:23.460
它也是应该是

17:23.460 --> 17:24.460
一个什么呢

17:24.460 --> 17:25.460
我们这个

17:25.460 --> 17:26.460
是一个日期选择的

17:26.460 --> 17:27.460
对不对

17:27.460 --> 17:28.460
不让它自己去

17:28.460 --> 17:29.460
手动选择

17:29.460 --> 17:30.460
所以说呢

17:30.460 --> 17:31.460
我这里面

17:31.460 --> 17:32.460
onbounding time之后

17:32.460 --> 17:33.460
还有一个

17:33.460 --> 17:34.460
如果说

17:34.460 --> 17:35.460
你要是一个什么

17:35.460 --> 17:36.460
假如说

17:36.460 --> 17:37.460
你要是一个case

17:37.460 --> 17:39.460
要是id number

17:39.460 --> 17:40.460
对不对

17:40.460 --> 17:41.460
或者是呢

17:41.460 --> 17:42.460
我们这个data nice

17:42.460 --> 17:43.460
这个里面

17:43.460 --> 17:44.460
对没问题

17:44.460 --> 17:45.460
id number

17:45.460 --> 17:46.460
你如果说

17:46.460 --> 17:47.460
是这两种情况

17:47.460 --> 17:48.460
假的

17:48.460 --> 17:50.460
那我直接的type

17:50.460 --> 17:51.460
就给你

17:51.460 --> 17:52.460
重新等一个值

17:52.460 --> 17:53.460
那这个值叫什么呢

17:53.460 --> 17:54.460
叫我们data

17:54.460 --> 17:55.460
note

17:55.460 --> 17:56.460
也就是说

17:56.460 --> 17:57.460
你渲染日期的

17:57.460 --> 17:58.460
一个节点就ok了

17:58.460 --> 18:00.460
这是第一种情况

18:00.460 --> 18:01.460
那第二种情况

18:01.460 --> 18:02.460
咱们再来想一下

18:02.460 --> 18:03.460
如果说

18:03.460 --> 18:04.460
你要是一个下拉菜单

18:04.460 --> 18:05.460
对不对

18:05.460 --> 18:06.460
那下拉菜单

18:06.460 --> 18:07.460
就有好多了

18:07.460 --> 18:08.460
比如说这个

18:08.460 --> 18:09.460
是真的

18:09.460 --> 18:10.460
这是第一种

18:10.460 --> 18:11.460
真的完了之后

18:11.460 --> 18:12.460
那假如说

18:12.460 --> 18:13.460
你是adocation

18:13.460 --> 18:14.460
对吧

18:14.460 --> 18:15.460
或者说

18:15.460 --> 18:16.460
你是我们的

18:16.460 --> 18:18.460
这个婚姻状况

18:18.460 --> 18:20.460
那这里面选择的时候

18:20.460 --> 18:21.460
我们这个时候

18:21.460 --> 18:23.460
type让它等于一个

18:23.460 --> 18:26.460
select node

18:26.460 --> 18:27.460
ok之后

18:27.460 --> 18:29.460
给它一个break

18:29.460 --> 18:30.460
好了那这两种

18:30.460 --> 18:31.460
都处理完了之后

18:31.460 --> 18:32.460
因为我们编辑的时候

18:32.460 --> 18:34.460
大概也就三种情况

18:34.460 --> 18:35.460
那default的时候

18:35.460 --> 18:37.460
我们直接就给它一个type

18:37.460 --> 18:39.460
等于我们的一个

18:39.460 --> 18:41.460
input node

18:41.460 --> 18:42.460
那这样就保证了

18:42.460 --> 18:43.460
一个什么呢

18:43.460 --> 18:44.460
我们把所有的

18:44.460 --> 18:45.460
这个需要渲染的

18:45.460 --> 18:46.460
节点类型

18:46.460 --> 18:47.460
那这里面

18:47.460 --> 18:48.460
都定义好了

18:48.460 --> 18:49.460
定义好的之后

18:49.460 --> 18:50.460
我们这个时候

18:50.460 --> 18:51.460
就可以

18:51.460 --> 18:53.460
去给它进行一个传递

18:53.460 --> 18:54.460
对不对

18:54.460 --> 18:55.460
传递过去之后

18:55.460 --> 18:56.460
那我在这边

18:56.460 --> 18:57.460
是不是就可以对它

18:57.460 --> 18:58.460
进行一个什么

18:58.460 --> 18:59.460
接收了对吧

18:59.460 --> 19:00.460
那接收完了之后

19:00.460 --> 19:01.460
我们怎么来做

19:01.460 --> 19:02.460
首先呢

19:02.460 --> 19:03.460
我们先看一下

19:03.460 --> 19:04.460
这个接收结果

19:04.460 --> 19:05.460
是否可行啊

19:05.460 --> 19:06.460
在这里面

19:06.460 --> 19:08.460
加一个dou号

19:08.460 --> 19:09.460
然后呢

19:09.460 --> 19:10.460
我们打印一下

19:10.460 --> 19:11.460
这个type值

19:13.460 --> 19:14.460
我们刷清一下

19:14.460 --> 19:15.460
刷清一下之后

19:15.460 --> 19:16.460
你会发现

19:16.460 --> 19:17.460
这里面

19:17.460 --> 19:18.460
有的时候有值

19:18.460 --> 19:19.460
有的时候没值

19:19.460 --> 19:20.460
没值

19:20.460 --> 19:21.460
因为什么呢

19:21.460 --> 19:22.460
它是整个都过来的

19:22.460 --> 19:23.460
有的是不可编辑的

19:23.460 --> 19:24.460
咱们不需要

19:24.460 --> 19:25.460
处理这问题

19:25.460 --> 19:26.460
然后呢

19:26.460 --> 19:27.460
你看slide node

19:27.460 --> 19:28.460
input node

19:28.460 --> 19:29.460
这些是不是就过来了

19:29.460 --> 19:30.460
那slide node

19:30.460 --> 19:31.460
input node

19:31.460 --> 19:32.460
过来之后

19:32.460 --> 19:33.460
我就可以根据这个

19:33.460 --> 19:34.460
来做一个什么

19:34.460 --> 19:35.460
处理的对不对

19:35.460 --> 19:36.460
也就是说

19:36.460 --> 19:37.460
那你去渲染的时候

19:37.460 --> 19:39.460
你就没有必要去

19:39.460 --> 19:41.460
直接的一直都渲染

19:41.460 --> 19:42.460
这个input了

19:42.460 --> 19:43.460
我们可以根据条件

19:43.460 --> 19:44.460
来进行渲染

19:44.460 --> 19:46.460
比如说我们的条件

19:46.460 --> 19:47.460
那是input的框

19:47.460 --> 19:48.460
那我们就渲染input的框

19:48.460 --> 19:49.460
假如说

19:49.460 --> 19:51.460
涉及到这个下拉菜单

19:51.460 --> 19:52.460
那我们就进行

19:52.460 --> 19:53.460
下拉菜单的渲染

19:53.460 --> 19:54.460
这样就OK了

19:54.460 --> 19:55.460
好的

19:55.460 --> 19:56.460
那我们接下来

19:56.460 --> 19:57.460
就把这个input的框

19:57.460 --> 19:58.460
包括我们

19:58.460 --> 19:59.460
下拉菜单框

19:59.460 --> 20:00.460
给做一个区分

20:00.460 --> 20:01.460
如何来实现呢

20:01.460 --> 20:02.460
首先就是说

20:02.460 --> 20:04.460
在我们这个编辑的时候

20:04.460 --> 20:05.460
现在正常是

20:05.460 --> 20:06.460
我们编辑的

20:06.460 --> 20:07.460
这个input的框

20:07.460 --> 20:08.460
那这个呢

20:08.460 --> 20:09.460
显然就不太合适了

20:09.460 --> 20:11.460
我们需要给它调整一下

20:11.460 --> 20:12.460
比如说我们这里面

20:12.460 --> 20:14.460
有一个added node的类型

20:14.460 --> 20:15.460
我这里面

20:15.460 --> 20:16.460
就创建一下

20:16.460 --> 20:18.460
我们定一个Counts的

20:18.460 --> 20:20.460
added node

20:20.460 --> 20:22.460
added node data

20:22.460 --> 20:24.460
然后这里面是一个对象

20:24.460 --> 20:25.460
那这个对象里面

20:25.460 --> 20:26.460
包含什么呢

20:26.460 --> 20:27.460
如果说

20:27.460 --> 20:29.460
我们传过来的是input node

20:29.460 --> 20:30.460
对吧

20:30.460 --> 20:31.460
假如说

20:31.460 --> 20:32.460
要是input node的话

20:32.460 --> 20:33.460
那这个时候呢

20:33.460 --> 20:34.460
我就去渲染

20:34.460 --> 20:35.460
这个input的框

20:35.460 --> 20:36.460
是不是就可以了

20:36.460 --> 20:37.460
也就是说

20:37.460 --> 20:38.460
那这如果说是它的话

20:38.460 --> 20:39.460
那我这里面

20:39.460 --> 20:40.460
就写一个

20:40.460 --> 20:41.460
input的

20:41.460 --> 20:42.460
正常去渲染

20:42.460 --> 20:43.460
之后呢

20:43.460 --> 20:44.460
我把input的里面

20:44.460 --> 20:45.460
所需要的内容

20:45.460 --> 20:46.460
ref

20:46.460 --> 20:47.460
包括onpressinter

20:47.460 --> 20:48.460
进行一个添加

20:48.460 --> 20:49.460
那当然这些东西

20:49.460 --> 20:50.460
比如说

20:50.460 --> 20:51.460
那你在这里面

20:51.460 --> 20:52.460
怎么做处理呢

20:52.460 --> 20:53.460
其实也非常简单

20:53.460 --> 20:55.460
因为我们现在有type类型值的

20:55.460 --> 20:56.460
所以说呢

20:56.460 --> 20:57.460
正因为有type类型值

20:57.460 --> 20:58.460
我直接的在这个里面

20:58.460 --> 21:00.460
added node data

21:00.460 --> 21:01.460
然后呢

21:01.460 --> 21:03.460
根据这个type类型值

21:03.460 --> 21:04.460
我们是不是来给它

21:04.460 --> 21:05.460
做一次渲染

21:05.460 --> 21:06.460
就可以了

21:06.460 --> 21:07.460
然后这个里面

21:07.460 --> 21:08.460
我们使用大扩号

21:08.460 --> 21:10.460
给它进行一个包裹

21:10.460 --> 21:11.460
到这个里面

21:11.460 --> 21:12.460
added node

21:12.460 --> 21:13.460
那此时

21:13.460 --> 21:14.460
现在如果说

21:14.460 --> 21:15.460
我们还没有加

21:15.460 --> 21:16.460
其他的框呢

21:16.460 --> 21:17.460
我保证什么呢

21:17.460 --> 21:18.460
我们正常可以显示

21:18.460 --> 21:19.460
这个李耀明

21:19.460 --> 21:20.460
这个

21:20.460 --> 21:21.460
比如说文字这一块

21:21.460 --> 21:22.460
这个都没什么问题

21:22.460 --> 21:23.460
对不对

21:23.460 --> 21:24.460
那么接下来

21:24.460 --> 21:25.460
我们要做什么事呢

21:25.460 --> 21:26.460
定义完

21:26.460 --> 21:27.460
added node之后

21:27.460 --> 21:28.460
那第二个

21:28.460 --> 21:29.460
我们就要定义什么呢

21:29.460 --> 21:30.460
data node

21:30.460 --> 21:31.460
也就是说

21:31.460 --> 21:32.460
如果说

21:32.460 --> 21:33.460
你是一个时间节点

21:33.460 --> 21:34.460
那时间节点呢

21:34.460 --> 21:35.460
我们这时候

21:35.460 --> 21:36.460
就会使用一个 select

21:36.460 --> 21:37.460
对吧

21:37.460 --> 21:39.460
这里面写一下 select

21:39.460 --> 21:40.460
select

21:40.460 --> 21:41.460
它会引入了

21:41.460 --> 21:42.460
这个刚才

21:42.460 --> 21:43.460
应该是

21:43.460 --> 21:44.460
做了一个引入

21:44.460 --> 21:45.460
但是这个引入

21:45.460 --> 21:46.460
可以去除掉

21:46.460 --> 21:47.460
slag的里面

21:47.460 --> 21:48.460
会有内容包裹

21:48.460 --> 21:49.460
我们这里面

21:49.460 --> 21:51.460
使用一个小扩号

21:51.460 --> 21:52.460
小扩号里面

21:52.460 --> 21:53.460
我们直接的

21:53.460 --> 21:54.460
应该存放什么呢

21:54.460 --> 21:55.460
这个里面

21:55.460 --> 21:56.460
应该是有这个 option

21:56.460 --> 21:57.460
对不对

21:57.460 --> 21:58.460
然后呢

21:58.460 --> 21:59.460
但是这个 select

21:59.460 --> 22:00.460
我们也提前

22:00.460 --> 22:01.460
给它加一个什么

22:01.460 --> 22:02.460
unblur 事件

22:02.460 --> 22:03.460
unblur 事件的时候

22:03.460 --> 22:04.460
具体做什么事情

22:04.460 --> 22:06.460
比如说这个 save

22:06.460 --> 22:07.460
那我们提前

22:07.460 --> 22:08.460
也给它写一下

22:08.460 --> 22:09.460
但是最后呢

22:09.460 --> 22:10.460
我们可能在发送之前

22:10.460 --> 22:11.460
还会做一些

22:11.460 --> 22:12.460
相应的验证

22:12.460 --> 22:14.460
然后我们把这个 select

22:14.460 --> 22:15.460
一个引入

22:15.460 --> 22:16.460
从这个里面

22:16.460 --> 22:17.460
引入 select 了之后

22:17.460 --> 22:18.460
那这里面

22:18.460 --> 22:19.460
就会有一个 option

22:19.460 --> 22:20.460
对不对

22:20.460 --> 22:21.460
那我们把这个 option

22:21.460 --> 22:23.460
给它做一个倒出

22:23.460 --> 22:25.460
const option

22:25.460 --> 22:26.460
我们直接不是

22:26.460 --> 22:27.460
const option

22:27.460 --> 22:29.460
我们应该是

22:29.460 --> 22:30.460
也可以

22:30.460 --> 22:31.460
const option

22:31.460 --> 22:33.460
等于我们 select

22:33.460 --> 22:34.460
从 select 下面

22:34.460 --> 22:35.460
把这个 option 组件

22:35.460 --> 22:37.460
给它进行一个获取

22:37.460 --> 22:38.460
获取之后

22:38.460 --> 22:39.460
那我们就可以

22:39.460 --> 22:42.460
正常的使用这个 option

22:42.460 --> 22:43.460
的一个组件了

22:43.460 --> 22:44.460
那使用 option 组件

22:44.460 --> 22:45.460
其实也非常简单

22:45.460 --> 22:47.460
我们直接在 select 下面

22:47.460 --> 22:50.460
给它做一个插注就可以了

22:50.460 --> 22:51.460
找到这个里面

22:51.460 --> 22:52.460
我们 select

22:52.460 --> 22:53.460
select 下面

22:53.460 --> 22:55.460
应该会有这个 option

22:55.460 --> 22:56.460
对吧

22:56.460 --> 22:57.460
那我们就写一下

22:57.460 --> 22:58.460
写这个 option 之前

22:58.460 --> 22:59.460
那我们来想一下

22:59.460 --> 23:00.460
这个 option

23:00.460 --> 23:01.460
可能会有好多内容

23:01.460 --> 23:02.460
对不对

23:02.460 --> 23:04.460
比如说我们对这个

23:04.460 --> 23:05.460
性别

23:05.460 --> 23:06.460
性别的处理

23:06.460 --> 23:07.460
那它这里面

23:07.460 --> 23:08.460
是不是就会有两个指

23:08.460 --> 23:09.460
对吧

23:09.460 --> 23:10.460
那所以说

23:10.460 --> 23:11.460
对这两个指

23:11.460 --> 23:12.460
我们还要单独的

23:13.460 --> 23:14.460
如何来处理呢

23:14.460 --> 23:15.460
这个时候我们就得知道

23:15.460 --> 23:17.460
需要渲染的内容都哪些

23:17.460 --> 23:18.460
比如说它现在

23:18.460 --> 23:20.460
是我们的性别这一块

23:20.460 --> 23:21.460
那性别这一块

23:21.460 --> 23:22.460
渲染的时候

23:22.460 --> 23:24.460
我们知道存放性别的

23:24.460 --> 23:25.460
硬射是在我们

23:25.460 --> 23:27.460
Utils 下面会有一个指

23:27.460 --> 23:28.460
对吧

23:28.460 --> 23:29.460
也就是说

23:29.460 --> 23:30.460
这个map data 下面的真的

23:30.460 --> 23:31.460
我们可以通过这个

23:31.460 --> 23:32.460
来做一个硬射

23:32.460 --> 23:33.460
那所以说

23:33.460 --> 23:34.460
在这个里面

23:34.460 --> 23:35.460
我们就可以来

23:35.460 --> 23:36.460
给它先进行一个倒入

23:36.460 --> 23:39.460
Import 我们的map data

23:39.460 --> 23:41.460
这个应该是

23:41.460 --> 23:42.460
map data

23:42.460 --> 23:43.460
然后是

23:43.460 --> 23:44.460
fram

23:44.460 --> 23:45.460
从我们的Utils

23:45.460 --> 23:47.460
下面倒出来

23:47.460 --> 23:49.460
这里面有一个叫map data

23:49.460 --> 23:50.460
的一个文件

23:50.460 --> 23:52.460
然后在这个map data

23:52.460 --> 23:53.460
这个文件里面

23:53.460 --> 23:54.460
它肯定会有什么

23:54.460 --> 23:55.460
我们对这个

23:55.460 --> 23:57.460
当前的性别的一些

23:57.460 --> 23:58.460
循环渲染的条件

23:58.460 --> 23:59.460
对吧

23:59.460 --> 24:00.460
那我们这里面

24:00.460 --> 24:01.460
就可以怎么写

24:01.460 --> 24:02.460
我们定义的时候

24:02.460 --> 24:03.460
这里面使用一个大伙号

24:03.460 --> 24:04.460
之后map data

24:04.460 --> 24:05.460
map data

24:05.460 --> 24:06.460
下面的什么

24:06.460 --> 24:07.460
我们刚才看到了

24:07.460 --> 24:08.460
有真的

24:08.460 --> 24:09.460
但是你这里面

24:09.460 --> 24:10.460
能写真的吗

24:10.460 --> 24:11.460
我们不能写

24:11.460 --> 24:12.460
因为什么

24:12.460 --> 24:13.460
如果说你要渲染

24:13.460 --> 24:14.460
这个婚姻情况

24:14.460 --> 24:15.460
包括学历这一块

24:15.460 --> 24:16.460
是不是

24:16.460 --> 24:17.460
那这时候就会出现问题

24:17.460 --> 24:19.460
所以说我们map data

24:19.460 --> 24:21.460
这时候我们要取一个变量

24:21.460 --> 24:22.460
它的变量值就是谁

24:22.460 --> 24:23.460
就是我们传过来

24:23.460 --> 24:24.460
这个data index

24:24.460 --> 24:25.460
因为我们知道

24:25.460 --> 24:26.460
当前选的

24:26.460 --> 24:27.460
这一列data index

24:27.460 --> 24:29.460
因为做程序设计的时候

24:29.460 --> 24:30.460
已经把它

24:30.460 --> 24:32.460
跟我们数据返回里面

24:32.460 --> 24:34.460
硬射的data index

24:34.460 --> 24:35.460
已经做了重提

24:35.460 --> 24:36.460
那所以说

24:36.460 --> 24:37.460
我们在这个里面

24:37.460 --> 24:38.460
就可以找到一个数组

24:38.460 --> 24:39.460
找到这个数组之后

24:39.460 --> 24:41.460
可以调用它的map方法

24:41.460 --> 24:42.460
item

24:42.460 --> 24:44.460
这里面都写上item

24:44.460 --> 24:46.460
和index

24:46.460 --> 24:47.460
然后我在这个里面

24:47.460 --> 24:49.460
就可以return值了

24:49.460 --> 24:50.460
那return值是什么呢

24:50.460 --> 24:51.460
就是我们的这个option

24:51.460 --> 24:52.460
也就是说

24:52.460 --> 24:54.460
我们需要渲染的这个option

24:54.460 --> 24:56.460
这里面写一下option

24:56.460 --> 24:57.460
ok

24:57.460 --> 24:58.460
创建完成之后

24:58.460 --> 24:59.460
这个option

24:59.460 --> 25:00.460
肯定首先得有一个k

25:00.460 --> 25:02.460
k我们就让它等于

25:02.460 --> 25:03.460
我们刚才循环出来的

25:03.460 --> 25:05.460
这个index值

25:05.460 --> 25:06.460
之后我们这里面

25:06.460 --> 25:07.460
还会有一个y

25:07.460 --> 25:08.460
y等于谁

25:08.460 --> 25:09.460
来料就让我

25:09.460 --> 25:11.460
它等于我们的这个index

25:11.460 --> 25:12.460
索引值

25:12.460 --> 25:13.460
之后里面

25:13.460 --> 25:14.460
我们就可以给它

25:14.460 --> 25:15.460
进行一个什么

25:15.460 --> 25:16.460
添加浪

25:16.460 --> 25:17.460
添加添加谁呢

25:17.460 --> 25:19.460
就是我们这个item

25:19.460 --> 25:20.460
便利出来的这个值

25:20.460 --> 25:21.460
对吧

25:21.460 --> 25:22.460
那这样呢

25:22.460 --> 25:23.460
我们就把一个slekt

25:23.460 --> 25:24.460
sorry

25:24.460 --> 25:25.460
应该是

25:25.460 --> 25:26.460
我们这个要slekt node

25:26.460 --> 25:28.460
不是data node

25:28.460 --> 25:29.460
slekt node

25:29.460 --> 25:30.460
这样就定义好了

25:30.460 --> 25:31.460
我们来看一下

25:31.460 --> 25:32.460
是否可行

25:32.460 --> 25:33.460
刷新一下

25:33.460 --> 25:34.460
刷新一下

25:34.460 --> 25:35.460
感觉有包错

25:35.460 --> 25:36.460
然后我们来看一下

25:36.460 --> 25:37.460
包错的原因

25:37.460 --> 25:38.460
是什么呢

25:38.460 --> 25:39.460
ray的map

25:39.460 --> 25:41.460
无法读取map属性

25:41.460 --> 25:42.460
那这里面map data

25:42.460 --> 25:43.460
这里面应该是

25:43.460 --> 25:45.460
有一个data index

25:45.460 --> 25:46.460
这样

25:46.460 --> 25:47.460
我们先来看一下

25:47.460 --> 25:48.460
这个map data

25:48.460 --> 25:49.460
是否可以正确的

25:49.460 --> 25:50.460
获取

25:50.460 --> 25:51.460
在这里面

25:51.460 --> 25:52.460
map data

25:52.460 --> 25:53.460
我来进行一个

25:53.460 --> 25:54.460
打印

25:54.460 --> 25:55.460
到这里面

25:55.460 --> 25:56.460
打印一下

25:56.460 --> 25:57.460
什么呢

25:57.460 --> 25:58.460
我们的map data

26:01.980 --> 26:02.980
slekt b

26:02.980 --> 26:03.980
合标圈

26:03.980 --> 26:04.980
没有关闭

26:04.980 --> 26:05.980
我们把它也给进行一个

26:05.980 --> 26:06.980
清空

26:06.980 --> 26:07.980
好了给它注释掉之后

26:07.980 --> 26:09.980
我们重新来进行一个打印

26:09.980 --> 26:10.980
看一下map data

26:10.980 --> 26:11.980
map data里面

26:11.980 --> 26:13.980
有这个真的属性

26:13.980 --> 26:14.980
那这个时候呢

26:14.980 --> 26:15.980
我们如果说

26:15.980 --> 26:16.980
想正确的渲染的话

26:16.980 --> 26:17.980
那这个map data

26:17.980 --> 26:18.980
我们还得要确定

26:18.980 --> 26:20.980
它的这个data index

26:20.980 --> 26:21.980
是否有值

26:21.980 --> 26:22.980
到哪个里面

26:22.980 --> 26:25.980
到我们刚才打印的这一块

26:25.980 --> 26:26.980
map data

26:26.980 --> 26:28.980
下面的data index

26:28.980 --> 26:30.980
然后我们来刷新一下

26:30.980 --> 26:31.980
刷新一下

26:31.980 --> 26:32.980
你就会发现

26:32.980 --> 26:33.980
有时候呢

26:33.980 --> 26:34.980
它是undefund

26:34.980 --> 26:36.980
undefund的原因是啥呢

26:36.980 --> 26:38.980
因为我们这个map data里面

26:38.980 --> 26:39.980
其实我们要是

26:39.980 --> 26:40.980
按这种做法的话

26:40.980 --> 26:41.980
它并不能把所有的

26:41.980 --> 26:43.980
这个都能拿得到对不对

26:43.980 --> 26:44.980
有的时候它是没有的

26:44.980 --> 26:45.980
那这个怎么办呢

26:45.980 --> 26:46.980
我们直接的在这个里面

26:46.980 --> 26:48.980
来做一个容错处理

26:48.980 --> 26:49.980
什么容错处理呢

26:49.980 --> 26:50.980
就是说你map data

26:50.980 --> 26:51.980
下面data index

26:51.980 --> 26:52.980
有值的时候

26:52.980 --> 26:54.980
你再给我进行一个渲染

26:54.980 --> 26:55.980
那这里面

26:55.980 --> 26:57.980
我们就是map data

26:57.980 --> 26:58.980
data index

26:58.980 --> 26:59.980
对不对

26:59.980 --> 27:00.980
然后这里面是并起

27:00.980 --> 27:03.980
当它如果说是存在这一项

27:03.980 --> 27:04.980
那我就让它来进行

27:04.980 --> 27:05.980
一个渲染操作

27:05.980 --> 27:07.980
这个就是我们一个处理

27:07.980 --> 27:09.980
容错的一个点

27:09.980 --> 27:10.980
好的

27:10.980 --> 27:11.980
现在我们再来试一下

27:11.980 --> 27:12.980
比如说小明

27:12.980 --> 27:14.980
它应该是input note的

27:14.980 --> 27:15.980
那map index

27:15.980 --> 27:16.980
我们来看一下

27:16.980 --> 27:17.980
有爆错对吧

27:17.980 --> 27:18.980
有爆错的原因是什么

27:18.980 --> 27:19.980
我们这个里面

27:19.980 --> 27:20.980
你看

27:20.980 --> 27:22.980
当我们去进行

27:22.980 --> 27:23.980
一个点击的时候

27:23.980 --> 27:24.980
那处发点在哪呢

27:24.980 --> 27:26.980
我们点击这个里面

27:26.980 --> 27:28.980
应该会有一个处发的点

27:28.980 --> 27:29.980
那处发的点

27:29.980 --> 27:32.980
就应该是input

27:32.980 --> 27:33.980
如果说你看

27:33.980 --> 27:34.980
这个里面

27:34.980 --> 27:35.980
它坚定

27:35.980 --> 27:36.980
Use ifcult

27:36.980 --> 27:37.980
坚定的是谁

27:37.980 --> 27:40.980
input iif.current.fox

27:40.980 --> 27:41.980
那这个时候

27:41.980 --> 27:43.980
就是它的意思是什么呢

27:43.980 --> 27:44.980
如果说我们这个

27:44.980 --> 27:45.980
addata发生改变了

27:45.980 --> 27:46.980
然后呢

27:46.980 --> 27:48.980
它就会去处发这个fox的

27:48.980 --> 27:49.980
那所以说

27:49.980 --> 27:50.980
但是现在我们这个

27:50.980 --> 27:52.980
slack note的下面

27:52.980 --> 27:53.980
我们可以看一下

27:53.980 --> 27:54.980
其实这里面

27:54.980 --> 27:55.980
我们根本就没指定

27:55.980 --> 27:57.980
这个input iif

27:57.980 --> 27:58.980
对不对

27:58.980 --> 27:59.980
那也就是说

27:59.980 --> 28:00.980
它这里面可能就会什么

28:00.980 --> 28:01.980
爆错

28:01.980 --> 28:02.980
那我们怎么办

28:02.980 --> 28:03.980
我们直接在这个里面

28:03.980 --> 28:04.980
处理一下

28:04.980 --> 28:07.980
比如说input iif

28:07.980 --> 28:09.980
我们判断它有值吗

28:09.980 --> 28:10.980
哪一个有值

28:10.980 --> 28:11.980
点current成立吗

28:11.980 --> 28:12.980
成立的话

28:12.980 --> 28:14.980
你再去做这个

28:14.980 --> 28:16.980
input.current fox

28:16.980 --> 28:17.980
这样一个操作

28:17.980 --> 28:18.980
那这样就保证了

28:18.980 --> 28:19.980
我们input

28:19.980 --> 28:20.980
才去处发

28:20.980 --> 28:22.980
获得焦点的这么一个操作

28:22.980 --> 28:23.980
因为其他的

28:23.980 --> 28:24.980
我们是不是

28:24.980 --> 28:25.980
没有必要

28:25.980 --> 28:26.980
获取它的焦点

28:26.980 --> 28:27.980
对吧

28:27.980 --> 28:28.980
那这样我们再来试一下

28:30.980 --> 28:31.980
来我们看一下

28:31.980 --> 28:32.980
这个里面

28:32.980 --> 28:33.980
我们一点击的话

28:33.980 --> 28:35.980
比如说这个女

28:35.980 --> 28:36.980
这个时候你就会发现

28:36.980 --> 28:37.980
OK

28:37.980 --> 28:38.980
这是没有任何问题的

28:38.980 --> 28:39.980
比如说到小明这一块

28:39.980 --> 28:40.980
这是不是都OK了

28:40.980 --> 28:41.980
对吧

28:41.980 --> 28:42.980
那这样OK之后

28:42.980 --> 28:43.980
现在我们这个处理完了

28:43.980 --> 28:44.980
接下来

28:44.980 --> 28:45.980
就把我们的这个

28:45.980 --> 28:46.980
data note

28:46.980 --> 28:48.980
也做一个定义

28:48.980 --> 28:49.980
data note在哪定义

28:49.980 --> 28:50.980
在它的下面

28:50.980 --> 28:52.980
我们再写一个data note

28:52.980 --> 28:53.980
data note

28:53.980 --> 28:54.980
我们这个定义的时候

28:54.980 --> 28:56.980
那其实在这里面

28:56.980 --> 28:57.980
使用

28:57.980 --> 28:58.980
那我们就要使用一个

28:58.980 --> 28:59.980
data peak

28:59.980 --> 29:01.980
如何来引入

29:01.980 --> 29:02.980
首先呢

29:02.980 --> 29:03.980
我们要把这个

29:03.980 --> 29:04.980
data peak

29:04.980 --> 29:05.980
组架给它进行

29:05.980 --> 29:06.980
导出

29:06.980 --> 29:07.980
那这里面是

29:07.980 --> 29:09.980
data peak

29:09.980 --> 29:10.980
组架

29:10.980 --> 29:11.980
data peak

29:11.980 --> 29:12.980
组架是按在给我们提供的

29:12.980 --> 29:13.980
我们在这个里面

29:13.980 --> 29:14.980
就可以使用它

29:14.980 --> 29:15.980
那data peak

29:15.980 --> 29:16.980
好了

29:16.980 --> 29:17.980
那既然使用到

29:17.980 --> 29:18.980
data peak之后

29:18.980 --> 29:19.980
那我们在这个里面

29:19.980 --> 29:20.980
来写的时候

29:20.980 --> 29:22.980
也同样的是

29:22.980 --> 29:23.980
给它加一个什么呢

29:23.980 --> 29:24.980
我们这里面

29:24.980 --> 29:25.980
就是说

29:25.980 --> 29:26.980
当它值发生改变的时候

29:26.980 --> 29:27.980
我们再来做事

29:27.980 --> 29:28.980
那我这里面

29:28.980 --> 29:29.980
就指定一个on change

29:29.980 --> 29:30.980
on change

29:30.980 --> 29:32.980
我们先也给它指定一个

29:32.980 --> 29:33.980
c5

29:33.980 --> 29:34.980
咱们来看一下

29:34.980 --> 29:35.980
是否可行

29:35.980 --> 29:36.980
data

29:36.980 --> 29:38.980
找到我们的这个时间

29:38.980 --> 29:39.980
入之时间

29:39.980 --> 29:40.980
我一点击

29:40.980 --> 29:41.980
你会发现还是有抱错

29:41.980 --> 29:43.980
然后这个抱错的原因是什么

29:43.980 --> 29:45.980
data.colon is not a function

29:45.980 --> 29:46.980
这是啥意思

29:46.980 --> 29:47.980
就是说

29:47.980 --> 29:48.980
当我去点击的时候

29:48.980 --> 29:49.980
比如说我们重新来一下

29:49.980 --> 29:50.980
刷新

29:50.980 --> 29:51.980
当点击到

29:51.980 --> 29:53.980
某一个单元格的时候

29:53.980 --> 29:54.980
那这个时候呢

29:54.980 --> 29:56.980
我们是要给它进行

29:56.980 --> 29:57.980
一个内容渲染的

29:57.980 --> 29:58.980
内容渲染在哪来

29:58.980 --> 29:59.980
内容渲染

29:59.980 --> 30:01.980
其实是在我们这个

30:01.980 --> 30:02.980
togo edit

30:02.980 --> 30:03.980
这里面就写一下

30:03.980 --> 30:05.980
这个呢就是专门处理

30:05.980 --> 30:06.980
表单

30:06.980 --> 30:08.980
单元格

30:08.980 --> 30:10.980
点击的时候

30:10.980 --> 30:13.980
进行内容的一个渲染

30:13.980 --> 30:14.980
其实内容渲染

30:14.980 --> 30:15.980
你看啊

30:15.980 --> 30:16.980
它用的是什么方法呢

30:16.980 --> 30:17.980
这里面有一个

30:17.980 --> 30:19.980
formal.setfiles value

30:19.980 --> 30:20.980
也就是说

30:20.980 --> 30:21.980
你找到当前的这个

30:21.980 --> 30:22.980
data index

30:22.980 --> 30:23.980
之后

30:23.980 --> 30:24.980
把它这个值

30:24.980 --> 30:25.980
给显然成recode

30:25.980 --> 30:26.980
data index

30:26.980 --> 30:27.980
我们可以来试一下

30:27.980 --> 30:28.980
这里面

30:28.980 --> 30:29.980
去打印一个什么呢

30:29.980 --> 30:30.980
打印一个值

30:30.980 --> 30:31.980
那这个值就是

30:31.980 --> 30:35.980
我们的data index

30:35.980 --> 30:36.980
然后还有一个什么呢

30:36.980 --> 30:38.980
就是我们recode的下面的

30:38.980 --> 30:40.980
data index

30:40.980 --> 30:41.980
然后这两个值都打印

30:41.980 --> 30:42.980
我们可以来看一下

30:42.980 --> 30:43.980
首先

30:43.980 --> 30:44.980
第一个

30:44.980 --> 30:45.980
我们在这个

30:45.980 --> 30:46.980
李小铭这一块

30:46.980 --> 30:47.980
当我去点击

30:47.980 --> 30:48.980
他会发现

30:48.980 --> 30:49.980
我们这个data index

30:49.980 --> 30:50.980
是有点内容

30:50.980 --> 30:51.980
也就是说

30:51.980 --> 30:52.980
让我们这个表单

30:52.980 --> 30:54.980
form去设置一个属性

30:54.980 --> 30:55.980
属性是什么属性

30:55.980 --> 30:56.980
有点内容属性

30:56.980 --> 30:57.980
值呢

30:58.980 --> 30:59.980
如果说

30:59.980 --> 31:00.980
我要去这个性别

31:00.980 --> 31:01.980
这一块

31:01.980 --> 31:02.980
比如说

31:02.980 --> 31:03.980
再去点击

31:03.980 --> 31:04.980
你会发现

31:04.980 --> 31:05.980
真的

31:05.980 --> 31:06.980
是不是一样

31:06.980 --> 31:07.980
对吧

31:07.980 --> 31:08.980
那也就是说

31:08.980 --> 31:09.980
设置真的一

31:09.980 --> 31:10.980
因为我们给定他

31:10.980 --> 31:11.980
value

31:11.980 --> 31:12.980
所以说

31:12.980 --> 31:13.980
他显示输出的时候

31:13.980 --> 31:14.980
在对这个

31:14.980 --> 31:15.980
真的处理的时候

31:15.980 --> 31:16.980
那这个里面

31:16.980 --> 31:17.980
他就是把这个

31:17.980 --> 31:18.980
item

31:18.980 --> 31:19.980
给他进行一个

31:19.980 --> 31:20.980
收集

31:20.980 --> 31:21.980
获取了

31:21.980 --> 31:22.980
那对于

31:22.980 --> 31:23.980
我们这个

31:23.980 --> 31:24.980
日期对象

31:24.980 --> 31:25.980
这里面来了

31:25.980 --> 31:26.980
日期对象

31:26.980 --> 31:27.980
我们是获取了

31:27.980 --> 31:28.980
一个真正的日期对象

31:28.980 --> 31:29.980
那其实渲染的时候

31:29.980 --> 31:30.980
我们只需要

31:30.980 --> 31:31.980
根据这个日期对象

31:31.980 --> 31:32.980
把自动创

31:32.980 --> 31:33.980
给做一个

31:33.980 --> 31:34.980
应设出出

31:34.980 --> 31:35.980
是不是就可以了

31:35.980 --> 31:36.980
也就是说

31:36.980 --> 31:37.980
那这里面

31:37.980 --> 31:38.980
时间呢

31:38.980 --> 31:39.980
我们在设置的时候

31:39.980 --> 31:40.980
要做一个

31:40.980 --> 31:41.980
格外的处理

31:41.980 --> 31:42.980
格外处理怎么办

31:42.980 --> 31:43.980
我们这里面

31:43.980 --> 31:44.980
就借助moment

31:44.980 --> 31:45.980
可以通过moment

31:45.980 --> 31:46.980
来实现

31:46.980 --> 31:47.980
那这里面

31:47.980 --> 31:48.980
input

31:48.980 --> 31:49.980
我们

31:50.980 --> 31:51.980
moment

31:51.980 --> 31:52.980
然后是

31:52.980 --> 31:53.980
forum

31:53.980 --> 31:55.980
我们的moment

31:55.980 --> 31:56.980
前面这个

31:56.980 --> 31:57.980
调整一下

31:57.980 --> 31:58.980
moment

31:58.980 --> 31:59.980
是他

31:59.980 --> 32:00.980
我们这个

32:00.980 --> 32:01.980
5米啊

32:01.980 --> 32:02.980
内置给我们提供的

32:02.980 --> 32:03.980
也是一个

32:03.980 --> 32:04.980
格式化日期的这么一个

32:04.980 --> 32:05.980
API

32:05.980 --> 32:06.980
那我们就可以

32:06.980 --> 32:07.980
通过moment

32:07.980 --> 32:08.980
来做一个处理

32:08.980 --> 32:09.980
如果说

32:09.980 --> 32:10.980
他要是一个日期对象

32:10.980 --> 32:11.980
那我就在这个里面

32:11.980 --> 32:12.980
给他进行一个

32:12.980 --> 32:13.980
重新格式化的

32:13.980 --> 32:14.980
这样一个

32:14.980 --> 32:15.980
操作

32:15.980 --> 32:16.980
是不是就OK了

32:16.980 --> 32:17.980
那这里面

32:17.980 --> 32:18.980
我得指定一下

32:18.980 --> 32:19.980
假如说

32:19.980 --> 32:20.980
我们是

32:20.980 --> 32:22.980
unbolding time

32:22.980 --> 32:23.980
对不对

32:23.980 --> 32:24.980
入职的时间

32:24.980 --> 32:25.980
time的时候

32:25.980 --> 32:26.980
那我们直接的

32:26.980 --> 32:27.980
在这个里面

32:27.980 --> 32:28.980
moment

32:28.980 --> 32:29.980
要给他做处理

32:29.980 --> 32:31.980
就是recode

32:32.980 --> 32:33.980
点

32:33.980 --> 32:35.980
unbolding time

32:35.980 --> 32:36.980
然后呢

32:36.980 --> 32:37.980
我们这个里面

32:37.980 --> 32:38.980
那现在啊

32:38.980 --> 32:39.980
做了一件什么事

32:39.980 --> 32:40.980
你想一下

32:40.980 --> 32:41.980
我们去这个

32:41.980 --> 32:42.980
设置的时候

32:42.980 --> 32:43.980
当你点击的时候

32:43.980 --> 32:44.980
那要么

32:44.980 --> 32:45.980
你是我们指定好的

32:45.980 --> 32:46.980
如果说

32:46.980 --> 32:47.980
你是unbolding time

32:47.980 --> 32:48.980
那我就去

32:48.980 --> 32:49.980
走下面的

32:49.980 --> 32:50.980
这个

32:50.980 --> 32:51.980
是不是就可以了

32:51.980 --> 32:52.980
也就是说

32:52.980 --> 32:53.980
你直接的

32:53.980 --> 32:55.980
时间自端的

32:55.980 --> 32:57.980
一个渲染操作

32:57.980 --> 32:58.980
对吧

32:58.980 --> 32:59.980
那我直接走这个操作

32:59.980 --> 33:00.980
就可以了

33:00.980 --> 33:01.980
咱们来试一下

33:01.980 --> 33:02.980
看这样做完之后

33:02.980 --> 33:03.980
日期是否可行

33:03.980 --> 33:04.980
我们回到日期这

33:04.980 --> 33:05.980
OK

33:05.980 --> 33:06.980
那你看啊

33:06.980 --> 33:07.980
还不行啊

33:07.980 --> 33:08.980
还不行的原因是什么

33:08.980 --> 33:09.980
我们来看一下

33:09.980 --> 33:10.980
recode

33:10.980 --> 33:11.980
unbolding time

33:11.980 --> 33:12.980
那咱们看一下

33:12.980 --> 33:13.980
是不是

33:13.980 --> 33:14.980
这个值

33:15.980 --> 33:16.980
打印一个什么呢

33:16.980 --> 33:17.980
我们这个

33:17.980 --> 33:19.980
data index

33:19.980 --> 33:20.980
咱们就看一眼

33:20.980 --> 33:21.980
这个data index

33:21.980 --> 33:22.980
就OK了

33:22.980 --> 33:23.980
这里面

33:23.980 --> 33:24.980
我们来指定一下

33:24.980 --> 33:25.980
哎

33:25.980 --> 33:26.980
到这个里面

33:26.980 --> 33:27.980
应该是unbolding time

33:27.980 --> 33:28.980
对吧

33:28.980 --> 33:29.980
unbolding time

33:29.980 --> 33:30.980
为

33:30.980 --> 33:31.980
这个没有问题

33:31.980 --> 33:32.980
然后呢

33:32.980 --> 33:33.980
那这个时候

33:33.980 --> 33:34.980
我们就要来看一下

33:34.980 --> 33:35.980
这个moment

33:35.980 --> 33:36.980
moment

33:36.980 --> 33:37.980
它使用的时候

33:37.980 --> 33:38.980
这里面爆红了

33:38.980 --> 33:39.980
应该是什么

33:39.980 --> 33:40.980
我们做的结构

33:40.980 --> 33:41.980
这里面应该是

33:41.980 --> 33:42.980
直接导出moment

33:42.980 --> 33:43.980
对象就OK了

33:43.980 --> 33:44.980
好的

33:44.980 --> 33:45.980
我们来做一下处理

33:45.980 --> 33:46.980
这里面一点击

33:46.980 --> 33:47.980
你会发现日期

33:47.980 --> 33:48.980
是不是正常的

33:48.980 --> 33:49.980
显示在这了

33:49.980 --> 33:50.980
对吧

33:50.980 --> 33:51.980
那显示在这

33:51.980 --> 33:52.980
点击提交

33:52.980 --> 33:53.980
改变日期的一些

33:53.980 --> 33:54.980
相关的操作行为

33:54.980 --> 33:55.980
那你是不是在这

33:55.980 --> 33:57.980
就可以来做

33:57.980 --> 33:58.980
一些指定行为了

33:58.980 --> 33:59.980
对吧

33:59.980 --> 34:00.980
这个就是我们一个处理

34:00.980 --> 34:02.980
对日期的一个处理

34:02.980 --> 34:03.980
日期处理完了之后

34:03.980 --> 34:04.980
我们就可以

34:04.980 --> 34:05.980
继续来做

34:05.980 --> 34:06.980
其他的操作了

34:09.980 --> 34:10.980
如果说

34:10.980 --> 34:11.980
你要是对日期

34:11.980 --> 34:12.980
也像input

34:12.980 --> 34:14.980
这样失去焦点的时候

34:14.980 --> 34:15.980
我们直接的

34:15.980 --> 34:16.980
把它给恢复到

34:16.980 --> 34:17.980
一个正常状态

34:17.980 --> 34:18.980
那怎么办呢

34:18.980 --> 34:19.980
我们直接的

34:19.980 --> 34:21.980
就可以去添加

34:21.980 --> 34:23.980
获得一个onfox的事件

34:23.980 --> 34:24.980
那我们就可以

34:24.980 --> 34:25.980
给它指定ref

34:25.980 --> 34:26.980
这个就看你个人

34:26.980 --> 34:28.980
比如说我们指定ref

34:28.980 --> 34:30.980
然后日期对象

34:30.980 --> 34:31.980
也指定ref之后

34:31.980 --> 34:32.980
那我们再看一下

34:32.980 --> 34:33.980
当它失去焦点的时候

34:33.980 --> 34:34.980
这个时候

34:34.980 --> 34:36.980
它就会去自己

34:36.980 --> 34:38.980
主动的进行一个什么呢

34:38.980 --> 34:40.980
我们回归正常状态

34:40.980 --> 34:42.980
这个是我们可调的

34:42.980 --> 34:43.980
反正是看同学们的

34:43.980 --> 34:44.980
这个需求

34:44.980 --> 34:46.980
如果说你要是

34:46.980 --> 34:47.980
我这里面是使用的

34:47.980 --> 34:48.980
onchange事件

34:48.980 --> 34:49.980
假如说onblue的时候

34:49.980 --> 34:50.980
你也想去保存

34:50.980 --> 34:51.980
那你直接的

34:51.980 --> 34:52.980
就在这个里面

34:52.980 --> 34:53.980
给它进行一个什么

34:53.980 --> 34:55.980
onblue的一个处理

34:55.980 --> 34:56.980
我们来看一下

34:56.980 --> 34:58.980
其实这个是都可以的

34:58.980 --> 34:59.980
回到这里面

34:59.980 --> 35:00.980
我们onblue的时候

35:00.980 --> 35:01.980
ok

35:01.980 --> 35:02.980
这个也可以获得的

35:02.980 --> 35:03.980
我们一个对象

35:03.980 --> 35:04.980
那接下来

35:04.980 --> 35:05.980
我们就去

35:05.980 --> 35:06.980
要做一下

35:06.980 --> 35:07.980
失去焦点的时候

35:07.980 --> 35:08.980
一个保存操作了

35:08.980 --> 35:09.980
怎么来做呢

35:09.980 --> 35:10.980
我们onblue的时候

35:10.980 --> 35:11.980
这个失去焦点

35:11.980 --> 35:12.980
首先第一件事

35:12.980 --> 35:14.980
我们要做一件

35:14.980 --> 35:16.980
验证的一个事情

35:16.980 --> 35:17.980
怎么来验证

35:17.980 --> 35:18.980
如果说

35:18.980 --> 35:19.980
比如说这个李耀明

35:19.980 --> 35:21.980
当我失去焦点的时候

35:21.980 --> 35:22.980
现在处罚保存

35:22.980 --> 35:23.980
但是这个处罚保存

35:23.980 --> 35:24.980
正确吗

35:24.980 --> 35:25.980
其实不正确

35:25.980 --> 35:26.980
为什么呢

35:26.980 --> 35:27.980
因为它没有进行值的修改

35:27.980 --> 35:28.980
对不对

35:28.980 --> 35:29.980
所以说

35:29.980 --> 35:30.980
我们这里面

35:30.980 --> 35:31.980
要有一个什么

35:31.980 --> 35:32.980
在发送之前

35:32.980 --> 35:33.980
也就是说

35:33.980 --> 35:34.980
你去保存之前

35:34.980 --> 35:35.980
我们要做一个

35:35.980 --> 35:37.980
send before checked

35:37.980 --> 35:38.980
也就是说

35:38.980 --> 35:40.980
发送之前的一个检测

35:41.980 --> 35:42.980
好的

35:42.980 --> 35:43.980
发送之前检测

35:43.980 --> 35:44.980
我们就可以

35:44.980 --> 35:46.980
来定义一下

35:46.980 --> 35:47.980
我们就来

35:47.980 --> 35:48.980
把这个我们就不要了

35:49.980 --> 35:50.980
把它给注释掉

35:50.980 --> 35:51.980
或者我们直接

35:51.980 --> 35:52.980
给它删除掉也行

35:52.980 --> 35:53.980
然后我们一会

35:53.980 --> 35:54.980
拿它的这个

35:54.980 --> 35:55.980
直来使用

35:55.980 --> 35:56.980
我们这里面定一下

35:56.980 --> 35:58.980
这个叫发送之前的

35:58.980 --> 35:59.980
一个检测

35:59.980 --> 36:00.980
写一下

36:00.980 --> 36:03.980
发送之前的一个检测

36:03.980 --> 36:04.980
或者是我们直接的

36:04.980 --> 36:06.980
这个就是修改

36:06.980 --> 36:08.980
之前的一个检测

36:08.980 --> 36:09.980
也可以

36:09.980 --> 36:10.980
Counts的

36:10.980 --> 36:11.980
这里面写一个下线

36:11.980 --> 36:13.980
为什么写一个下线呢

36:13.980 --> 36:15.980
因为我们在这个里面

36:15.980 --> 36:16.980
使用一个什么呢

36:18.980 --> 36:19.980
我们要对这个

36:19.980 --> 36:21.980
Value值做一个检测处理

36:21.980 --> 36:22.980
它是一个异不操作

36:22.980 --> 36:23.980
所以说我们这里面

36:23.980 --> 36:24.980
写一下

36:24.980 --> 36:25.980
Counts的

36:28.980 --> 36:29.980
然后呢

36:29.980 --> 36:31.980
在这个里面来写

36:31.980 --> 36:33.980
当它处发失去焦点的时候

36:33.980 --> 36:34.980
肯定就会去

36:34.980 --> 36:35.980
调用这个方法

36:35.980 --> 36:36.980
对吧

36:36.980 --> 36:37.980
这里面多了一个中间

36:37.980 --> 36:38.980
好了

36:38.980 --> 36:39.980
那调用这个方法的时候

36:39.980 --> 36:40.980
我们在这个里面

36:40.980 --> 36:41.980
首先第一步

36:41.980 --> 36:42.980
我得要去

36:42.980 --> 36:43.980
把它这个值获取一下

36:43.980 --> 36:44.980
值怎么获取呢

36:44.980 --> 36:45.980
其实

36:45.980 --> 36:46.980
Fail的Values

36:46.980 --> 36:47.980
它就可以获取值

36:47.980 --> 36:48.980
但是我们在这个里面

36:48.980 --> 36:50.980
可以获取指定的一个值

36:50.980 --> 36:51.980
比如说

36:52.980 --> 36:53.980
A data data

36:53.980 --> 36:54.980
然后呢

36:54.980 --> 36:55.980
我们这里面

36:55.980 --> 36:56.980
传递一个什么

36:56.980 --> 36:57.980
data index

36:57.980 --> 36:58.980
那就获取

36:58.980 --> 37:00.980
当前的这么一个值

37:00.980 --> 37:01.980
我们可以看一下

37:02.980 --> 37:03.980
A data

37:03.980 --> 37:04.980
data

37:04.980 --> 37:06.980
然后我们来做一个打印

37:06.980 --> 37:07.980
比如说

37:07.980 --> 37:08.980
我们现在把第1个

37:08.980 --> 37:09.980
来给做一个处理

37:09.980 --> 37:10.980
李小铭

37:10.980 --> 37:11.980
当我去

37:11.980 --> 37:12.980
一点击

37:12.980 --> 37:13.980
你会发现

37:13.980 --> 37:14.980
获取指定的这个值了

37:14.980 --> 37:15.980
刚才是获取数组

37:15.980 --> 37:16.980
对吧

37:16.980 --> 37:17.980
那我们现在就是

37:17.980 --> 37:18.980
直接获取一个对象

37:18.980 --> 37:19.980
获取这个对象

37:19.980 --> 37:21.980
就是我们需要修改的这个值

37:21.980 --> 37:22.980
那需要修改值

37:22.980 --> 37:23.980
这里面第1步

37:23.980 --> 37:24.980
我们要验证一下

37:24.980 --> 37:25.980
验证什么

37:26.980 --> 37:27.980
当前

37:27.980 --> 37:29.980
当前修改

37:29.980 --> 37:30.980
后的值

37:31.980 --> 37:32.980
我们这个里面

37:32.980 --> 37:33.980
是否

37:33.980 --> 37:34.980
与

37:34.980 --> 37:35.980
之前的

37:35.980 --> 37:36.980
一个值相等

37:36.980 --> 37:37.980
如果说

37:37.980 --> 37:38.980
你要是相等的话

37:38.980 --> 37:39.980
咱们就没有必要

37:39.980 --> 37:40.980
去做验证了

37:40.980 --> 37:41.980
对不对

37:41.980 --> 37:42.980
也就是说

37:42.980 --> 37:43.980
一个存储

37:43.980 --> 37:45.980
这个我们要清楚一下

37:45.980 --> 37:47.980
然后我们这里面

37:47.980 --> 37:48.980
会有一个什么

37:48.980 --> 37:49.980
检测

37:49.980 --> 37:50.980
检测怎么来检测

37:50.980 --> 37:52.980
我们直接在这个里面

37:52.980 --> 37:53.980
如果说

37:53.980 --> 37:54.980
去判断一下

37:54.980 --> 37:55.980
假如说我们

37:55.980 --> 37:56.980
recode的

37:57.980 --> 37:58.980
我们肯定拿到recode的

37:58.980 --> 37:59.980
这个里面

37:59.980 --> 38:00.980
data index

38:00.980 --> 38:01.980
是我们之前的值

38:01.980 --> 38:02.980
对不对

38:02.980 --> 38:03.980
如果说

38:03.980 --> 38:04.980
recode的data index

38:04.980 --> 38:05.980
等于等于我们

38:05.980 --> 38:06.980
a data data

38:06.980 --> 38:07.980
下面

38:07.980 --> 38:08.980
我们获取到的

38:08.980 --> 38:10.980
data index

38:10.980 --> 38:11.980
那现在

38:11.980 --> 38:12.980
就给它

38:12.980 --> 38:13.980
return掉

38:13.980 --> 38:14.980
是不是就可以了

38:14.980 --> 38:15.980
也就是说

38:15.980 --> 38:16.980
现在你们两个

38:16.980 --> 38:17.980
应该是

38:17.980 --> 38:18.980
相同的代表

38:18.980 --> 38:19.980
其实

38:19.980 --> 38:20.980
你虽然处罚焦点了

38:20.980 --> 38:21.980
但是你没有去

38:21.980 --> 38:22.980
给他做一个

38:22.980 --> 38:23.980
更改

38:23.980 --> 38:24.980
对吧

38:24.980 --> 38:25.980
这个就是我们一个简单的判断

38:25.980 --> 38:26.980
如果说你过了

38:26.980 --> 38:27.980
这个判断之后

38:27.980 --> 38:28.980
那这个时候

38:28.980 --> 38:29.980
就代表

38:29.980 --> 38:30.980
你已经去

38:30.980 --> 38:31.980
想去进行

38:31.980 --> 38:32.980
一个

38:32.980 --> 38:33.980
重新的处罚了

38:33.980 --> 38:34.980
对吧

38:34.980 --> 38:35.980
那这就是他的一个操作

38:35.980 --> 38:36.980
我们来看一下

38:36.980 --> 38:37.980
是否可行

38:38.980 --> 38:39.980
到这个里面

38:39.980 --> 38:40.980
李小铭

38:41.980 --> 38:42.980
OK

38:42.980 --> 38:43.980
失去焦点

38:43.980 --> 38:44.980
当失去焦点之后

38:44.980 --> 38:45.980
你会发现

38:45.980 --> 38:46.980
其实这个时候

38:46.980 --> 38:47.980
不做这个事情了

38:47.980 --> 38:48.980
不做这个事情是什么

38:48.980 --> 38:49.980
我们这里面

38:49.980 --> 38:50.980
是不是有一个

38:50.980 --> 38:51.980
togo data

38:51.980 --> 38:52.980
togo data

38:52.980 --> 38:53.980
我们是不是

38:53.980 --> 38:54.980
没做这个处理

38:54.980 --> 38:55.980
所以说

38:55.980 --> 38:56.980
我们这个时候

38:56.980 --> 38:57.980
应该怎么办

38:57.980 --> 38:58.980
我们把

38:58.980 --> 38:59.980
set data

38:59.980 --> 39:00.980
给他做一个

39:00.980 --> 39:01.980
重新的复职

39:01.980 --> 39:02.980
是不是就可以了

39:02.980 --> 39:03.980
因为他这个里面

39:03.980 --> 39:04.980
定义好了一个

39:04.980 --> 39:05.980
set adding

39:05.980 --> 39:07.980
我们就在这个里面

39:07.980 --> 39:08.980
如果说

39:08.980 --> 39:09.980
获取完职之后

39:09.980 --> 39:10.980
那我们在这个里面

39:10.980 --> 39:12.980
也不用做去togo data

39:12.980 --> 39:13.980
我们直接的

39:13.980 --> 39:14.980
set adding

39:14.980 --> 39:15.980
非 adding

39:15.980 --> 39:16.980
对吧

39:16.980 --> 39:17.980
那这样

39:17.980 --> 39:18.980
我们再来看一下

39:18.980 --> 39:19.980
比如说

39:19.980 --> 39:20.980
重新来

39:20.980 --> 39:21.980
李小铭

39:21.980 --> 39:22.980
点击一下

39:22.980 --> 39:23.980
OK 失去焦点

39:23.980 --> 39:24.980
失去焦点

39:24.980 --> 39:25.980
他就没做任何事情

39:25.980 --> 39:26.980
假如说

39:26.980 --> 39:27.980
改一个指李小铭

39:27.980 --> 39:28.980
OK

39:28.980 --> 39:29.980
那这个时候

39:29.980 --> 39:30.980
代表着

39:30.980 --> 39:31.980
我们已经

39:31.980 --> 39:32.980
把这个值修改了

39:32.980 --> 39:33.980
对吧

39:33.980 --> 39:34.980
值修改了之后

39:34.980 --> 39:35.980
我们再来

39:35.980 --> 39:36.980
做其他事情

39:36.980 --> 39:37.980
就可以了

39:37.980 --> 39:38.980
然后做什么事情

39:38.980 --> 39:39.980
需要修改的这个值

39:39.980 --> 39:41.980
保存需要修改的这个值

39:41.980 --> 39:42.980
因为我们之前

39:42.980 --> 39:43.980
已经定义了一个什么

39:43.980 --> 39:44.980
在这个里面

39:44.980 --> 39:45.980
我们传过来

39:45.980 --> 39:46.980
这里面有一个

39:46.980 --> 39:47.980
Hallander C5

39:47.980 --> 39:48.980
那这个Hallander C5

39:48.980 --> 39:50.980
原来是在这个里面使用

39:50.980 --> 39:51.980
我们现在

39:51.980 --> 39:52.980
就可以给它做一个调整

39:52.980 --> 39:53.980
Hallander C5

39:53.980 --> 39:54.980
我们直接

39:54.980 --> 39:55.980
就在这个里面来处理

39:55.980 --> 39:56.980
然后把一个

39:56.980 --> 39:57.980
回调的值

39:57.980 --> 39:58.980
给它传回去

39:59.980 --> 40:00.980
传回去都传什么

40:00.980 --> 40:01.980
既然你像修改

40:01.980 --> 40:02.980
那我们这里面

40:02.980 --> 40:04.980
指定必须得有一个ID

40:04.980 --> 40:05.980
那为什么有一个ID

40:05.980 --> 40:06.980
这个我们可以看

40:06.980 --> 40:07.980
接口文档

40:07.980 --> 40:08.980
因为你这是修改员工

40:08.980 --> 40:09.980
对吧

40:09.980 --> 40:10.980
我们去找一下

40:10.980 --> 40:11.980
员工接口

40:11.980 --> 40:12.980
员工接口这里面

40:12.980 --> 40:14.980
有一个修改员工信息

40:14.980 --> 40:15.980
里面有一个ID

40:15.980 --> 40:17.980
当前员工的ID值

40:17.980 --> 40:19.980
还有一个Type修改的类型

40:19.980 --> 40:21.980
所有次的均可以进行修改

40:21.980 --> 40:22.980
包括我们这里面

40:22.980 --> 40:23.980
有一个修改之后的

40:23.980 --> 40:24.980
一个新值

40:24.980 --> 40:25.980
也就是说

40:25.980 --> 40:26.980
你需要把这几个值

40:26.980 --> 40:27.980
都给它进行一个传递

40:27.980 --> 40:28.980
那我们这里面

40:28.980 --> 40:29.980
就收集一下

40:29.980 --> 40:30.980
首先来说

40:30.980 --> 40:31.980
对这个ID

40:31.980 --> 40:32.980
ID非常好找

40:32.980 --> 40:34.980
ID为什么非常好找呢

40:34.980 --> 40:35.980
我们这里面有Recode

40:35.980 --> 40:36.980
Recode代表

40:36.980 --> 40:37.980
当前行的一个记录

40:37.980 --> 40:38.980
对吧

40:38.980 --> 40:39.980
那有当前行记录

40:39.980 --> 40:41.980
它下面肯定会有一个什么

40:41.980 --> 40:42.980
ID值

40:42.980 --> 40:43.980
我们所以说

40:43.980 --> 40:44.980
第一个就把这个ID

40:44.980 --> 40:46.980
给它进行一个传递

40:46.980 --> 40:47.980
然后就是我们的

40:47.980 --> 40:49.980
AppleDate

40:50.980 --> 40:51.980
Value

40:51.980 --> 40:52.980
也就是说

40:52.980 --> 40:54.980
我们需要修改的这么一个值

40:54.980 --> 40:55.980
AppleDateValue

40:55.980 --> 40:57.980
就是我们刚才获取到的

40:57.980 --> 40:59.980
AdataDate

40:59.980 --> 41:00.980
然后这个里面

41:00.980 --> 41:02.980
获取到的什么值呢

41:02.980 --> 41:03.980
这个里面就是我们的

41:03.980 --> 41:04.980
DataIndex

41:04.980 --> 41:05.980
对吧

41:06.980 --> 41:07.980
然后接下来

41:07.980 --> 41:08.980
就是我们这个

41:08.980 --> 41:09.980
Type类型

41:09.980 --> 41:11.980
Type需要修改什么类型

41:11.980 --> 41:13.980
就是我们的DataIndex

41:13.980 --> 41:14.980
那这样我们

41:14.980 --> 41:15.980
HelenanSeo里面

41:15.980 --> 41:17.980
就保存了相关的数据

41:17.980 --> 41:19.980
保存相关数据之后

41:19.980 --> 41:20.980
那现在其实

41:20.980 --> 41:21.980
我们就可以回到

41:21.980 --> 41:23.980
我们的TableList里面来了

41:23.980 --> 41:25.980
找到我们的TableList

41:25.980 --> 41:26.980
因为在这个里面

41:26.980 --> 41:27.980
我们已经定义了

41:27.980 --> 41:28.980
一个HelenanSeo

41:28.980 --> 41:29.980
而且我们知道

41:29.980 --> 41:31.980
返回的是一个对象

41:31.980 --> 41:32.980
那我在这里面

41:32.980 --> 41:34.980
就来进行一个打印

41:34.980 --> 41:36.980
Ctrl-LogData

41:36.980 --> 41:38.980
然后咱们在这里面

41:38.980 --> 41:39.980
来看一下

41:39.980 --> 41:40.980
李晓明首先

41:40.980 --> 41:41.980
什么也不做

41:41.980 --> 41:42.980
OK没问题

41:42.980 --> 41:43.980
然后如果说选

41:43.980 --> 41:44.980
123新名长度不正确

41:44.980 --> 41:45.980
那现在其实

41:45.980 --> 41:46.980
新名长度不正确

41:46.980 --> 41:47.980
它也是处罚不了的

41:47.980 --> 41:48.980
那我怎么办呢

41:48.980 --> 41:49.980
我直接就让它正确的

41:49.980 --> 41:50.980
李晓明

41:50.980 --> 41:52.980
然后我们在这个里面

41:52.980 --> 41:53.980
失去焦点

41:53.980 --> 41:54.980
其实这里面

41:54.980 --> 41:55.980
还有一件事情要做

41:55.980 --> 41:56.980
如果说新名长度不正确

41:56.980 --> 41:57.980
你失去焦点的时候

41:57.980 --> 41:59.980
你是不是也应该给它

41:59.980 --> 42:01.980
把它这个就是

42:01.980 --> 42:03.980
是状态

42:03.980 --> 42:04.980
调整为正常展示

42:04.980 --> 42:05.980
对吧

42:05.980 --> 42:06.980
那我们把这个也做一下

42:06.980 --> 42:08.980
那这个里面怎么来做呢

42:08.980 --> 42:09.980
回到我们的

42:09.980 --> 42:10.980
AdataData

42:10.980 --> 42:11.980
我们这里面

42:11.980 --> 42:13.980
是直接的来进行

42:13.980 --> 42:14.980
一个使用了

42:14.980 --> 42:15.980
但是这个时候

42:15.980 --> 42:16.980
我们可能会有错

42:16.980 --> 42:17.980
对吧

42:17.980 --> 42:18.980
因为是一个Promise

42:18.980 --> 42:19.980
对象

42:19.980 --> 42:20.980
AsyncWait

42:20.980 --> 42:21.980
那我们就使用

42:21.980 --> 42:23.980
这种Trackatch的形式

42:23.980 --> 42:24.980
如果说

42:24.980 --> 42:25.980
你要是正常的话

42:25.980 --> 42:26.980
那你现在就走

42:26.980 --> 42:27.980
这里面逻辑

42:27.980 --> 42:28.980
假如说

42:28.980 --> 42:29.980
它要补货到错误

42:29.980 --> 42:30.980
补货到错误怎么办呢

42:30.980 --> 42:31.980
那我们这个

42:32.980 --> 42:33.980
非Ating

42:33.980 --> 42:34.980
然后其实

42:34.980 --> 42:35.980
它现在如果说你错误了

42:35.980 --> 42:36.980
太不做任何事情

42:36.980 --> 42:37.980
直接就过

42:37.980 --> 42:39.980
显示回原来的这个值

42:39.980 --> 42:40.980
是不是就可以了

42:40.980 --> 42:41.980
对吧

42:41.980 --> 42:42.980
那这样就是

42:42.980 --> 42:43.980
实现了一个容错处理

42:43.980 --> 42:44.980
当你如果说

42:44.980 --> 42:46.980
展示的是这个正确的值

42:46.980 --> 42:47.980
比如说李小平1

42:47.980 --> 42:48.980
那现在呢

42:48.980 --> 42:49.980
我们TableList

42:49.980 --> 42:50.980
就可以接收到

42:50.980 --> 42:52.980
你需要修改的这个值

42:52.980 --> 42:53.980
并且呢

42:53.980 --> 42:54.980
这里面指定好了

42:54.980 --> 42:55.980
ID Update

42:55.980 --> 42:56.980
Value

42:56.980 --> 42:58.980
包括我们的一个Type类型

42:58.980 --> 42:59.980
这些呢

42:59.980 --> 43:00.980
就是我们后端

43:00.980 --> 43:02.980
需要获取的一些内容

43:02.980 --> 43:03.980
但这个里面

43:03.980 --> 43:04.980
我们接下来

43:04.980 --> 43:06.980
在我们做保存之前

43:06.980 --> 43:08.980
还需要做一件事情

43:08.980 --> 43:09.980
是什么事情呢

43:09.980 --> 43:10.980
就是说

43:10.980 --> 43:11.980
你是不是得验证一下

43:11.980 --> 43:13.980
因为刚才咱们最早的时候

43:13.980 --> 43:14.980
也说过

43:14.980 --> 43:16.980
像手机号的一个值

43:16.980 --> 43:17.980
它呢比较特殊

43:17.980 --> 43:18.980
如果说

43:18.980 --> 43:20.980
你要是想修改为

43:20.980 --> 43:21.980
跟我们下面

43:21.980 --> 43:22.980
张飞这个手机号

43:22.980 --> 43:23.980
完全一致

43:23.980 --> 43:24.980
那这些时候呢

43:24.980 --> 43:25.980
就会造成一个混乱啊

43:25.980 --> 43:26.980
什么混乱呢

43:26.980 --> 43:27.980
比如说

43:27.980 --> 43:28.980
原来我们手机库里面

43:28.980 --> 43:30.980
已经保存了张飞的手机号

43:30.980 --> 43:32.980
叫527542

43:32.980 --> 43:33.980
对不对

43:33.980 --> 43:34.980
那你现在又想输入

43:34.980 --> 43:35.980
变成527542

43:35.980 --> 43:36.980
那这个显然不对了

43:36.980 --> 43:37.980
所以说

43:37.980 --> 43:39.980
我们在做这个

43:39.980 --> 43:42.980
向后端提供修改数据之前

43:42.980 --> 43:43.980
我们要做一个检测

43:43.980 --> 43:45.980
那有没有这个检测接口呢

43:45.980 --> 43:46.980
也有啊

43:46.980 --> 43:47.980
我们回到这个里面

43:47.980 --> 43:48.980
找到我们的

43:48.980 --> 43:50.980
全部接口

43:50.980 --> 43:51.980
这里面有一个

43:51.980 --> 43:52.980
员工的

43:52.980 --> 43:53.980
用户接口

43:53.980 --> 43:54.980
用户接口这里面

43:54.980 --> 43:55.980
检测手机号码

43:55.980 --> 43:56.980
或账户名

43:56.980 --> 43:57.980
是否有效

43:57.980 --> 43:59.980
它是一个pose的请求

43:59.980 --> 44:01.980
它的请求地址叫

44:01.980 --> 44:03.980
trick extents

44:03.980 --> 44:04.980
是否存在啊

44:04.980 --> 44:05.980
然后这里面

44:05.980 --> 44:06.980
传递的值都哪些呢

44:06.980 --> 44:08.980
这里面是一个check date

44:08.980 --> 44:09.980
check date呢

44:09.980 --> 44:10.980
你可以传mobile

44:10.980 --> 44:12.980
或者是传account name

44:12.980 --> 44:13.980
然后这两个值

44:13.980 --> 44:14.980
你传一个

44:14.980 --> 44:15.980
反正是呢

44:15.980 --> 44:16.980
我就可以检测

44:16.980 --> 44:17.980
我们的数据库里面

44:17.980 --> 44:18.980
就是保存的基督里面

44:18.980 --> 44:20.980
有没有你这个手机号

44:20.980 --> 44:21.980
那这个手机号

44:21.980 --> 44:22.980
比如说我返回的时候

44:22.980 --> 44:23.980
夹入零

44:23.980 --> 44:24.980
那这个代表着

44:24.980 --> 44:25.980
没有错过啊

44:25.980 --> 44:26.980
然后这个data

44:26.980 --> 44:27.980
代表着账户名

44:27.980 --> 44:28.980
或者是手机号

44:28.980 --> 44:29.980
已经被注册了

44:29.980 --> 44:30.980
你进行更换

44:30.980 --> 44:31.980
为fals呢

44:31.980 --> 44:32.980
这个就是

44:32.980 --> 44:34.980
当前的账户名

44:34.980 --> 44:35.980
是有效的

44:35.980 --> 44:36.980
那这个时候

44:36.980 --> 44:37.980
我们就可以来使用一下

44:37.980 --> 44:38.980
这个接口啊

44:38.980 --> 44:39.980
使用这个接口

44:39.980 --> 44:40.980
怎么办呢

44:40.980 --> 44:41.980
我们先对这个接口

44:41.980 --> 44:43.980
进行一个定义

44:43.980 --> 44:44.980
interface

44:44.980 --> 44:45.980
找到我们的staff

44:45.980 --> 44:46.980
staff里面

44:46.980 --> 44:47.980
现在已经有这些了

44:47.980 --> 44:49.980
那我们再定一个啊

44:49.980 --> 44:51.980
把它给复制一套

44:51.980 --> 44:55.980
那这个叫检测用户名啊

44:55.980 --> 44:57.980
写一下

44:57.980 --> 44:58.980
嗯

44:58.980 --> 44:59.980
这个什么呢

44:59.980 --> 45:01.980
检测员工

45:01.980 --> 45:02.980
用户名

45:02.980 --> 45:04.980
或者是手机号

45:04.980 --> 45:06.980
是否有效啊

45:06.980 --> 45:08.980
或者是

45:08.980 --> 45:10.980
手机号

45:10.980 --> 45:11.980
是否

45:11.980 --> 45:14.980
已经存在

45:14.980 --> 45:15.980
如果说存在

45:15.980 --> 45:16.980
那你换一个

45:16.980 --> 45:17.980
也就是说

45:17.980 --> 45:18.980
你现在就比较里面入了啊

45:18.980 --> 45:19.980
然后这个是

45:19.980 --> 45:20.980
tick

45:20.980 --> 45:21.980
asetase

45:21.980 --> 45:22.980
然后

45:22.980 --> 45:23.980
它的请求方法

45:23.980 --> 45:24.980
是posts

45:24.980 --> 45:25.980
然后

45:25.980 --> 45:26.980
之后呢

45:26.980 --> 45:27.980
我们在这个tablet里面

45:27.980 --> 45:28.980
就可以来写了啊

45:28.980 --> 45:29.980
那先

45:29.980 --> 45:31.980
首先对它进行一个判断嘛

45:31.980 --> 45:32.980
如果说

45:32.980 --> 45:33.980
我们这里面定一下

45:33.980 --> 45:35.980
假如我们data.tap

45:35.980 --> 45:37.980
你传过来的

45:37.980 --> 45:38.980
要是mobile

45:38.980 --> 45:40.980
那代表着你现在是想修改手机号

45:40.980 --> 45:41.980
对吧

45:41.980 --> 45:42.980
修改手机号的话

45:42.980 --> 45:43.980
那我这里面

45:43.980 --> 45:45.980
要给你做一个什么

45:45.980 --> 45:47.980
要给你做一个检测了

45:47.980 --> 45:48.980
那检测的时候

45:48.980 --> 45:50.980
我先把这个data

45:50.980 --> 45:51.980
给定一下

45:51.980 --> 45:53.980
比如说我们asdata

45:53.980 --> 45:54.980
也就是说

45:54.980 --> 45:55.980
我们的这个

45:55.980 --> 45:56.980
iqdata

45:56.980 --> 45:58.980
这里面是请求的data

45:58.980 --> 45:59.980
请求data

45:59.980 --> 46:00.980
我们就指定一下

46:00.980 --> 46:01.980
等于一个什么呢

46:01.980 --> 46:02.980
我们这里面创建好了

46:02.980 --> 46:04.980
一个叫mobile

46:05.980 --> 46:07.980
把这个指示给他指定一下

46:07.980 --> 46:10.980
mobile这里面就是obj.

46:10.980 --> 46:11.980
错了啊

46:11.980 --> 46:15.980
我们这个obj.update.value

46:16.980 --> 46:17.980
好

46:17.980 --> 46:19.980
把这个update.value

46:19.980 --> 46:20.980
给他拿过去

46:20.980 --> 46:21.980
拿去之后呢

46:21.980 --> 46:22.980
这里面就定一好了

46:22.980 --> 46:23.980
然后我们这个是data

46:23.980 --> 46:25.980
data.update.value

46:25.980 --> 46:26.980
这个是一个请求对象

46:26.980 --> 46:27.980
请求对象之后

46:27.980 --> 46:29.980
那我们就可以发送请求了

46:29.980 --> 46:30.980
发送请求

46:30.980 --> 46:32.980
首先把我们的这个atdp

46:32.980 --> 46:33.980
方法给他导出

46:33.980 --> 46:36.980
input $http

46:36.980 --> 46:37.980
from

46:37.980 --> 46:39.980
从我们的这个api

46:39.980 --> 46:40.980
里面获取之后呢

46:40.980 --> 46:42.980
我这里面就可以来定一下

46:42.980 --> 46:44.980
写一下const

46:44.980 --> 46:45.980
我们的响应值里面

46:45.980 --> 46:46.980
有data

46:46.980 --> 46:47.980
还有这个msg

46:47.980 --> 46:49.980
如果说data为false

46:49.980 --> 46:50.980
刚才我们看呢

46:50.980 --> 46:51.980
这个呢

46:51.980 --> 46:53.980
请求的一个检测通过了

46:53.980 --> 46:54.980
那我们这里面要知道一下

46:54.980 --> 46:55.980
$http

46:55.980 --> 46:57.980
就把这个方法写一下

46:57.980 --> 47:00.980
checkasx

47:00.980 --> 47:02.980
然后这个里面来写参数

47:02.980 --> 47:03.980
写参数呢

47:03.980 --> 47:04.980
刚才咱们看了

47:04.980 --> 47:05.980
他这里面接收一个

47:05.980 --> 47:07.980
checkdata

47:07.980 --> 47:09.980
checkdata是什么值

47:09.980 --> 47:10.980
就是我们定一好的

47:10.980 --> 47:12.980
这个request的data

47:12.980 --> 47:13.980
或者是你直接在这个里面

47:13.980 --> 47:14.980
就来写一个什么

47:14.980 --> 47:15.980
checkdata

47:15.980 --> 47:16.980
然后这样我们就

47:16.980 --> 47:18.980
省了一步对吧

47:18.980 --> 47:19.980
avate

47:19.980 --> 47:20.980
这个时候有avate

47:20.980 --> 47:21.980
那我前面就得

47:21.980 --> 47:24.980
接一个什么sync对吧

47:24.980 --> 47:25.980
好了

47:25.980 --> 47:26.980
定一好之后

47:26.980 --> 47:28.980
那他就去给我做一个检测

47:28.980 --> 47:29.980
如果说你要有

47:29.980 --> 47:30.980
那这个时候

47:30.980 --> 47:32.980
我们就来进行一个什么

47:32.980 --> 47:33.980
获取啊

47:33.980 --> 47:34.980
我们知道了

47:34.980 --> 47:35.980
有错了

47:35.980 --> 47:36.980
那我就不再做这个

47:36.980 --> 47:38.980
重复的手机号码的

47:38.980 --> 47:39.980
一个往里存储

47:39.980 --> 47:40.980
这样一个操作

47:40.980 --> 47:41.980
然后这里面有一个暴洪

47:41.980 --> 47:42.980
暴洪原因

47:42.980 --> 47:43.980
是我在这儿

47:43.980 --> 47:44.980
解构了一个data

47:44.980 --> 47:45.980
然后我下面又使用了data

47:45.980 --> 47:46.980
那我就把上面的

47:46.980 --> 47:47.980
给做一个调整

47:47.980 --> 47:48.980
上面的调整一下

47:48.980 --> 47:49.980
变成什么呢

47:49.980 --> 47:51.980
就是这个ovg

47:51.980 --> 47:52.980
把它改一下

47:52.980 --> 47:53.980
这个叫ovg

47:53.980 --> 47:54.980
ok

47:54.980 --> 47:59.300
底鞋的这个也做一个调整

47:59.300 --> 48:00.300
好了

48:00.300 --> 48:01.300
这个处理完成之后

48:01.300 --> 48:04.300
那现在我打印一下什么呢

48:04.300 --> 48:05.300
我们这个data

48:05.300 --> 48:06.300
和msg

48:06.300 --> 48:08.300
咱们来看一下

48:08.300 --> 48:09.300
检查元素

48:09.300 --> 48:10.300
到这个里面

48:10.300 --> 48:11.300
如果说我去修改的时候

48:11.300 --> 48:12.300
李小铭

48:12.300 --> 48:13.300
然后呢

48:13.300 --> 48:14.300
我小李小铭

48:14.300 --> 48:15.300
这个不对啊

48:15.300 --> 48:16.300
因为是手机号

48:16.300 --> 48:17.300
把这个手机号

48:17.300 --> 48:18.300
改一下

48:18.300 --> 48:20.300
应该是4个2对吧

48:20.300 --> 48:21.300
取消或许交铁

48:21.300 --> 48:23.300
然后这里面有一个什么呢

48:23.300 --> 48:25.300
Table List的84行

48:25.300 --> 48:26.300
84行

48:26.300 --> 48:28.300
难道去执行了吗

48:28.300 --> 48:29.300
删除失败

48:29.300 --> 48:31.300
这个不太对啊

48:31.300 --> 48:32.300
我看一下

48:32.300 --> 48:34.300
调用的这个Date Story

48:34.300 --> 48:36.300
Date Story接口就不对了

48:36.300 --> 48:38.300
因为是什么样的呢

48:38.300 --> 48:39.300
我们回到这个里面

48:39.300 --> 48:41.300
刚才在staff interface里面

48:41.300 --> 48:43.300
我们是没有改这个纸的

48:43.300 --> 48:44.300
这个纸应该是什么

48:44.300 --> 48:45.300
和它一样

48:45.300 --> 48:47.300
叫checkestase

48:47.300 --> 48:48.300
好了

48:48.300 --> 48:49.300
那咱们再来一下

48:49.300 --> 48:51.300
刚才是没有改这个纸啊

48:51.300 --> 48:52.300
我们再做一个处理

48:52.300 --> 48:53.300
到这个里面

48:53.300 --> 48:55.300
135223

48:55.300 --> 48:57.300
然后失去焦点

48:57.300 --> 48:58.300
ok

48:58.300 --> 48:59.300
这里面是错

48:59.300 --> 49:00.300
当天手机号码已经存在

49:00.300 --> 49:02.300
请更换对吧

49:02.300 --> 49:03.300
那这里面已经给你提示信息了

49:03.300 --> 49:05.300
就说明你这个

49:05.300 --> 49:06.300
你传错了

49:06.300 --> 49:07.300
那传错了咋办

49:07.300 --> 49:09.300
咱们就来给他进行一个替换

49:09.300 --> 49:10.300
那这时候

49:10.300 --> 49:12.300
我们就去判断一下

49:12.300 --> 49:13.300
假如说

49:13.300 --> 49:14.300
如果说

49:14.300 --> 49:16.300
我们这个data有值

49:16.300 --> 49:17.300
data有值代表着

49:17.300 --> 49:18.300
我们这个错误了

49:18.300 --> 49:20.300
那我们就给他一个提示信息

49:20.300 --> 49:22.300
message.error

49:22.300 --> 49:23.300
我们直接把这个

49:23.300 --> 49:24.300
MSG

49:24.300 --> 49:26.300
给他做一个打印就可以了

49:26.300 --> 49:28.300
然后这个message从哪来

49:28.300 --> 49:29.300
因为按的

49:29.300 --> 49:31.300
d里面是不是有这个message

49:31.300 --> 49:33.300
我们直接就给他来获取一下

49:33.300 --> 49:34.300
这样就定义完了

49:34.300 --> 49:35.300
咱们来试一下

49:37.300 --> 49:38.300
把它改变去除掉

49:38.300 --> 49:39.300
然后呢

49:39.300 --> 49:40.300
重新改一下值

49:40.300 --> 49:41.300
三杆

49:41.300 --> 49:42.300
ok

49:42.300 --> 49:43.300
当前手机号码已经存在

49:43.300 --> 49:44.300
请更换

49:44.300 --> 49:45.300
然后呢我随便换一个

49:45.300 --> 49:46.300
这里面

49:46.300 --> 49:47.300
哎

49:47.300 --> 49:49.300
这个非常快啊就过去了

49:49.300 --> 49:50.300
这个是当年手机号码

49:50.300 --> 49:51.300
还是已经存在啊

49:51.300 --> 49:52.300
2519

49:52.300 --> 49:54.300
那这个应该是没有吧

49:54.300 --> 49:56.300
2519也是有了

49:56.300 --> 49:58.300
那我直接在这个里面

49:58.300 --> 50:01.300
5275133

50:01.300 --> 50:03.300
1234

50:03.300 --> 50:04.300
5432

50:04.300 --> 50:06.300
这个随便写一个

50:06.300 --> 50:07.300
随便写一个

50:07.300 --> 50:08.300
你看啊

50:08.300 --> 50:09.300
这个手机号码是不存在的

50:09.300 --> 50:10.300
对吧

50:10.300 --> 50:11.300
那也就是说

50:11.300 --> 50:12.300
这个手机你可以进行修改

50:12.300 --> 50:13.300
然后并且使用这个新手机

50:13.300 --> 50:14.300
当然了

50:14.300 --> 50:16.300
这个里面还可以做一些

50:16.300 --> 50:17.300
手机验掌码的一个操作啊

50:17.300 --> 50:18.300
那我们在这个里面呢

50:18.300 --> 50:20.300
就展实现不做这个处理啊

50:20.300 --> 50:22.300
如果说你这些都处理完成之后

50:22.300 --> 50:23.300
那现在呢

50:23.300 --> 50:25.300
我们就要开始进行一个什么

50:25.300 --> 50:27.300
值的一个修改了对不对

50:27.300 --> 50:29.300
那也就是说在这个里面进行

50:29.300 --> 50:32.300
我们修改表单的一个操作啊

50:33.300 --> 50:35.300
修改表单操作

50:35.300 --> 50:36.300
那修改表单操作时候

50:36.300 --> 50:37.300
这个时候呢

50:37.300 --> 50:38.300
我们要知道

50:38.300 --> 50:40.300
你修改表单都要干嘛

50:40.300 --> 50:41.300
当你修改完成之后

50:41.300 --> 50:42.300
那这个时候

50:42.300 --> 50:44.300
我们是不是要给他

50:44.300 --> 50:45.300
进行一个提示

50:45.300 --> 50:46.300
如果说修改完成之后

50:46.300 --> 50:47.300
给他提示

50:47.300 --> 50:48.300
比如说修改成功

50:48.300 --> 50:49.300
之后呢

50:49.300 --> 50:50.300
你还要把这个表单

50:50.300 --> 50:52.300
给进行一个重新的渲染

50:52.300 --> 50:53.300
对不对

50:53.300 --> 50:55.300
这是我们需要做的事情啊

50:55.300 --> 50:56.300
那我们就来写一下

50:56.300 --> 50:57.300
嗯

50:57.300 --> 50:58.300
怎么办呢

50:58.300 --> 51:00.300
我们couns的code和这个msg

51:00.300 --> 51:01.300
调用一个方法

51:01.300 --> 51:04.300
叫waitdollarhttp

51:04.300 --> 51:06.300
然后这里面是

51:06.300 --> 51:08.300
应该叫update

51:08.300 --> 51:09.300
staff

51:09.300 --> 51:10.300
我们可以看一下

51:10.300 --> 51:11.300
因为这个方法

51:11.300 --> 51:13.300
我们已经定义好了

51:13.300 --> 51:14.300
在这个里面

51:14.300 --> 51:15.300
叫修改员工

51:15.300 --> 51:16.300
对吧

51:16.300 --> 51:17.300
那我们直接的就把它来

51:17.300 --> 51:19.300
进行一个使用就可以了

51:19.300 --> 51:21.300
在这个里面update

51:21.300 --> 51:22.300
staff

51:22.300 --> 51:23.300
然后呢

51:23.300 --> 51:24.300
我们来传指啊

51:24.300 --> 51:25.300
指呢修改的这个指

51:25.300 --> 51:26.300
就是我们这个obg

51:26.300 --> 51:27.300
对吧

51:27.300 --> 51:28.300
如果说你修改成功

51:28.300 --> 51:29.300
或者修改失败

51:29.300 --> 51:30.300
你这里面

51:30.300 --> 51:31.300
是不是都会有反悔值

51:31.300 --> 51:32.300
如果说code有值

51:32.300 --> 51:33.300
那代表着我们

51:33.300 --> 51:34.300
本次修改错误了

51:34.300 --> 51:35.300
对吧

51:35.300 --> 51:36.300
我们直接就给他

51:36.300 --> 51:37.300
return掉啊

51:37.300 --> 51:38.300
然后呢

51:38.300 --> 51:39.300
我们这个不管你修改错误

51:39.300 --> 51:40.300
修改成功

51:40.300 --> 51:41.300
我们都给他

51:41.300 --> 51:43.300
添加一个message

51:43.300 --> 51:44.300
消息提示

51:44.300 --> 51:45.300
对不对

51:45.300 --> 51:46.300
那要是错误呢

51:46.300 --> 51:48.300
我们直接的return

51:48.300 --> 51:50.300
message.error

51:50.300 --> 51:51.300
msg

51:51.300 --> 51:52.300
那如果说要成功呢

51:52.300 --> 51:54.300
我们就是message.sugsize

51:54.300 --> 51:55.300
sugsize

51:55.300 --> 51:56.300
这个里面叫什么呢

51:56.300 --> 51:58.300
把这个msg给他

51:58.300 --> 51:59.300
回传的这个字幕刷

51:59.300 --> 52:00.300
给他显示出来

52:00.300 --> 52:01.300
就可以啊

52:01.300 --> 52:02.300
咱们来试一下

52:02.300 --> 52:04.300
135 5275

52:04.300 --> 52:05.300
那这个改一下

52:05.300 --> 52:06.300
改一个什么呢

52:06.300 --> 52:07.300
1234

52:07.300 --> 52:08.300
对吧

52:08.300 --> 52:09.300
好的

52:09.300 --> 52:11.300
那这里面提示修改成功啊

52:11.300 --> 52:12.300
修改成功之后

52:12.300 --> 52:13.300
但是我们这个值

52:13.300 --> 52:14.300
还没有发生更改呢

52:14.300 --> 52:16.300
如果让值进行更改呢

52:16.300 --> 52:17.300
这个时候

52:17.300 --> 52:20.300
就需要我们重新的去reload

52:20.300 --> 52:22.300
一个当前的这个列表对不对

52:22.300 --> 52:23.300
那我们这里面可以写一下

52:23.300 --> 52:25.300
reload配置

52:25.300 --> 52:26.300
有这个方法吗

52:26.300 --> 52:27.300
肯定是没有啊

52:27.300 --> 52:28.300
那这个方法怎么办呢

52:28.300 --> 52:30.300
我们直接的因为是组件吗

52:30.300 --> 52:31.300
而且我们因e的

52:31.300 --> 52:32.300
lease的方法

52:32.300 --> 52:34.300
也是在这个index里面来定义的

52:34.300 --> 52:35.300
那所以说

52:35.300 --> 52:36.300
我们就在这个里面

52:36.300 --> 52:37.300
来使用一下

52:37.300 --> 52:38.300
使用的时候

52:39.300 --> 52:40.300
除了接收这个

52:43.300 --> 52:45.300
我们再来进行对他

52:45.300 --> 52:47.300
接收一个什么方法啊

52:47.300 --> 52:48.300
那这个方法呢

52:48.300 --> 52:50.300
就是我们的reload配置啊

52:50.300 --> 52:52.300
reload配置的时候

52:52.300 --> 52:53.300
我们要做一件事

52:53.300 --> 52:54.300
做的事情是啥呢

52:54.300 --> 52:55.300
非常简单

52:55.300 --> 52:57.300
我们重新出手画的

52:57.300 --> 52:58.300
这个因e的sdflease的

52:58.300 --> 52:59.300
是不是就可以了

52:59.300 --> 53:01.300
但这个因e的sdflease的

53:01.300 --> 53:03.300
这里面是有一个问题的

53:03.300 --> 53:04.300
比如说我现在先来修改啊

53:04.300 --> 53:05.300
咱先不管呢

53:05.300 --> 53:06.300
135 5275

53:06.300 --> 53:07.300
1234

53:07.300 --> 53:09.300
那我这里面修改1235

53:09.300 --> 53:10.300
我给你感觉没问题啊

53:10.300 --> 53:13.300
现在是也进行同步的更改了

53:13.300 --> 53:15.300
但是如果说我们这个

53:15.300 --> 53:16.300
现在是在第一页

53:16.300 --> 53:18.300
假如说我们在这个第二页

53:18.300 --> 53:19.300
第三页当我修改

53:19.300 --> 53:23.300
陆佳良的52752112

53:24.300 --> 53:25.300
我修改完了之后

53:25.300 --> 53:26.300
你会发现啊

53:26.300 --> 53:27.300
这个时候又跑回

53:27.300 --> 53:28.300
第一页数据了

53:28.300 --> 53:29.300
这是因为啥啊

53:29.300 --> 53:30.300
你看当我修改完

53:30.300 --> 53:32.300
update的sdflease之后

53:32.300 --> 53:33.300
这里面有一个

53:33.300 --> 53:34.300
getsdflease操作

53:34.300 --> 53:36.300
你getsdflease操作的时候

53:36.300 --> 53:38.300
这个时候我们传直

53:38.300 --> 53:40.300
并没有传那个配置

53:40.300 --> 53:42.300
没有传配置的原因是什么呢

53:42.300 --> 53:43.300
我们可以找一下

53:43.300 --> 53:46.300
初始化因e的sdflease的时候

53:46.300 --> 53:47.300
我们在这个里面

53:47.300 --> 53:48.300
给的他一个什么

53:48.300 --> 53:49.300
current配置

53:49.300 --> 53:50.300
也就是说那你这时候

53:50.300 --> 53:52.300
其实是给的传了配置的

53:52.300 --> 53:54.300
那我们在这个里面

53:54.300 --> 53:55.300
其实是没有进行

53:55.300 --> 53:56.300
配置的传递的

53:56.300 --> 53:57.300
那怎么办呢

53:57.300 --> 53:59.300
我们直接在这个里面

53:59.300 --> 54:00.300
current配置

54:00.300 --> 54:01.300
等于配置

54:01.300 --> 54:02.300
如果说你不传的话

54:02.300 --> 54:03.300
那我就使用配置

54:03.300 --> 54:04.300
是不是就可以了

54:05.300 --> 54:06.300
这样我这个配置

54:06.300 --> 54:07.300
都可以进行一个什么

54:07.300 --> 54:08.300
干掉他

54:08.300 --> 54:09.300
也就是说

54:09.300 --> 54:11.300
不需要再给他传递配置了

54:11.300 --> 54:12.300
那或者说

54:12.300 --> 54:13.300
如果说你为了温度几件

54:13.300 --> 54:15.300
你也可以传一个配置

54:15.300 --> 54:16.300
但是我们初始化的时候

54:16.300 --> 54:17.300
是不是已经指定为一了

54:17.300 --> 54:18.300
并且我没传

54:18.300 --> 54:20.300
那就调用我们当天

54:20.300 --> 54:21.300
指定好的这个配置

54:21.300 --> 54:22.300
对吧

54:22.300 --> 54:23.300
咱们再来试一下

54:23.300 --> 54:25.300
还是从最后一页来

54:25.300 --> 54:26.300
进行修改

54:26.300 --> 54:27.300
看一下他的这个

54:27.300 --> 54:29.300
值是否正确

54:29.300 --> 54:30.300
当我们修改

54:30.300 --> 54:32.300
这里面咱们修改一个什么

54:32.300 --> 54:33.300
修改一个

54:33.300 --> 54:34.300
性别吧

54:34.300 --> 54:35.300
我们在这个里面

54:35.300 --> 54:36.300
修改性别

54:36.300 --> 54:37.300
比如说这个是个男

54:37.300 --> 54:38.300
我们修改没什么

54:38.300 --> 54:39.300
修改完成

54:39.300 --> 54:40.300
一保存

54:40.300 --> 54:41.300
这里面保存成功

54:41.300 --> 54:43.300
并且当前展示

54:43.300 --> 54:44.300
还是这一页的数据

54:44.300 --> 54:45.300
对吧

54:45.300 --> 54:46.300
那我们可以看一下

54:46.300 --> 54:47.300
没有任何问题

54:47.300 --> 54:48.300
如果说你这里面

54:48.300 --> 54:49.300
出现了问题

54:49.300 --> 54:51.300
比如说我们对这个

54:51.300 --> 54:52.300
其他的

54:52.300 --> 54:53.300
应该是也不会有问题了

54:53.300 --> 54:54.300
因为我们这个里面

54:54.300 --> 54:55.300
只有一个真的

54:55.300 --> 54:56.300
你像这些其他的

54:56.300 --> 54:57.300
我们是

54:57.300 --> 54:59.300
没办法进行修改的

54:59.300 --> 55:00.300
我们只有查看的权限

55:00.300 --> 55:01.300
对吧

55:01.300 --> 55:02.300
好的

55:02.300 --> 55:03.300
这一块基本上就搞定了

55:03.300 --> 55:04.300
搞定他之后

55:04.300 --> 55:05.300
我们再回到第一

55:05.300 --> 55:06.300
这里面还有一个问题

55:06.300 --> 55:07.300
是啥问题呢

55:07.300 --> 55:08.300
就是说我这个

55:08.300 --> 55:10.300
李晓明和张飞这一块

55:10.300 --> 55:11.300
咱们看

55:11.300 --> 55:12.300
他这个左面

55:12.300 --> 55:13.300
就是一个表达项

55:13.300 --> 55:14.300
是不是

55:14.300 --> 55:15.300
那其实右边的这块

55:15.300 --> 55:16.300
还有内容

55:16.300 --> 55:17.300
是啥内容呢

55:17.300 --> 55:18.300
完成的这一块

55:18.300 --> 55:19.300
这有一个小图标

55:19.300 --> 55:20.300
这小图标一点击

55:20.300 --> 55:21.300
右边呢

55:21.300 --> 55:22.300
会弹出来一个

55:22.300 --> 55:23.300
我们详情的这样

55:23.300 --> 55:24.300
一个弹窗

55:24.300 --> 55:25.300
并且呢

55:25.300 --> 55:26.300
每个组件啊

55:26.300 --> 55:27.300
对这个详情弹窗

55:27.300 --> 55:28.300
其实它是都有的

55:28.300 --> 55:30.300
我们调整到部门

55:30.300 --> 55:31.300
到这个直级站

55:31.300 --> 55:32.300
如果说在直级站

55:32.300 --> 55:33.300
我们一点击

55:33.300 --> 55:34.300
它也会有一个弹窗

55:34.300 --> 55:35.300
给我们展示出来

55:35.300 --> 55:36.300
那这个弹窗呢

55:36.300 --> 55:37.300
就代表着

55:37.300 --> 55:38.300
我们当天记录的一个

55:38.300 --> 55:40.300
详情啊展示

55:40.300 --> 55:41.300
那这个时候

55:41.300 --> 55:42.300
我们怎么来做

55:42.300 --> 55:43.300
其实呢

55:43.300 --> 55:44.300
那这个时候

55:44.300 --> 55:45.300
我们应该

55:45.300 --> 55:46.300
除了渲染我们这么一个

55:46.300 --> 55:47.300
表达之外

55:47.300 --> 55:48.300
右边呢

55:48.300 --> 55:49.300
还得需要有一个指

55:49.300 --> 55:50.300
那也就是说

55:50.300 --> 55:51.300
我们在定一个

55:51.300 --> 55:52.300
Close的时候

55:52.300 --> 55:53.300
再给他添加一个内容

55:53.300 --> 55:54.300
是不是就OK了

55:54.300 --> 55:55.300
那我们下面啊

55:55.300 --> 55:56.300
就来完成一下

55:56.300 --> 55:57.300
在姓名站

55:57.300 --> 55:58.300
再给他添加一下

55:58.300 --> 56:00.300
我们可以关闭一下

56:00.300 --> 56:01.300
因为现在比较多

56:01.300 --> 56:03.300
找到src

56:03.300 --> 56:04.300
pages

56:04.300 --> 56:06.300
下面的stuff

56:06.300 --> 56:07.300
components

56:07.300 --> 56:08.300
里面找到close

56:08.300 --> 56:09.300
close

56:09.300 --> 56:10.300
我们当时定义的时候

56:10.300 --> 56:12.300
咱们合并一下

56:12.300 --> 56:13.300
定义的时候

56:13.300 --> 56:14.300
是在这个里面

56:14.300 --> 56:15.300
这个里面有一个什么

56:15.300 --> 56:16.300
normal list的

56:16.300 --> 56:17.300
这个是用户名

56:17.300 --> 56:18.300
对吧

56:18.300 --> 56:19.300
那用户名

56:19.300 --> 56:20.300
在这个里面

56:20.300 --> 56:21.300
我们修改的时候

56:21.300 --> 56:22.300
其实呢

56:22.300 --> 56:23.300
在这个里面

56:23.300 --> 56:25.300
我们做处理的时候

56:25.300 --> 56:26.300
那你原来

56:26.300 --> 56:27.300
却也没使用

56:27.300 --> 56:28.300
Render函数

56:28.300 --> 56:29.300
那我这里面

56:29.300 --> 56:30.300
给他定一个什么

56:30.300 --> 56:31.300
Render函数

56:31.300 --> 56:32.300
对吧

56:32.300 --> 56:33.300
Render函数

56:33.300 --> 56:34.300
来做一个处理

56:34.300 --> 56:35.300
Render函数

56:35.300 --> 56:36.300
咱们知道这里面

56:36.300 --> 56:37.300
有这个当前的

56:37.300 --> 56:38.300
这个记录值

56:38.300 --> 56:39.300
那比如说

56:39.300 --> 56:40.300
我这个叫data

56:40.300 --> 56:41.300
data定完了之后

56:41.300 --> 56:42.300
那这里面

56:42.300 --> 56:43.300
还会有一个什么

56:43.300 --> 56:44.300
还会有一个id

56:44.300 --> 56:45.300
我给他做一个

56:45.300 --> 56:46.300
解构

56:46.300 --> 56:47.300
然后咱们给他

56:47.300 --> 56:48.300
打印出来

56:48.300 --> 56:49.300
可以看一下

56:49.300 --> 56:50.300
比如说data

56:50.300 --> 56:51.300
和id

56:51.300 --> 56:53.300
因为是当前指定记录

56:53.300 --> 56:55.300
和整行的

56:55.300 --> 56:56.300
一个记录信息

56:56.300 --> 56:57.300
我们来看一下

56:57.300 --> 56:58.300
为什么要id

56:58.300 --> 56:59.300
这个id指

56:59.300 --> 57:00.300
这个id指

57:00.300 --> 57:01.300
其实对我们来说

57:01.300 --> 57:02.300
至关重要

57:02.300 --> 57:03.300
我们点击

57:03.300 --> 57:04.300
这个详情弹桩

57:04.300 --> 57:05.300
你得知道你现在

57:05.300 --> 57:06.300
是点击的哪一个

57:06.300 --> 57:07.300
对不对

57:07.300 --> 57:09.300
然后我们来过来

57:09.300 --> 57:10.300
刷新一下

57:10.300 --> 57:11.300
刷新一下之后

57:11.300 --> 57:12.300
这里面就给我们

57:12.300 --> 57:13.300
选出来了

57:13.300 --> 57:14.300
首先是李耀明

57:14.300 --> 57:15.300
他的id

57:15.300 --> 57:16.300
是不是也有了

57:16.300 --> 57:17.300
对吧

57:17.300 --> 57:18.300
李耀明id都有了

57:18.300 --> 57:19.300
那我们在这个里面

57:19.300 --> 57:20.300
就可以对他来做处理

57:20.300 --> 57:21.300
这里面

57:21.300 --> 57:22.300
我们是分为

57:22.300 --> 57:23.300
两部分经展示

57:23.300 --> 57:24.300
那我们就给他

57:24.300 --> 57:25.300
定义什么

57:25.300 --> 57:26.300
两个死判

57:26.300 --> 57:27.300
那两个死判

57:27.300 --> 57:28.300
给他来表示一下

57:28.300 --> 57:29.300
首先

57:29.300 --> 57:30.300
我们这个里面

57:30.300 --> 57:31.300
第一个

57:31.300 --> 57:32.300
咱们给他return出去吧

57:32.300 --> 57:33.300
那这里面

57:33.300 --> 57:35.300
就是return的

57:35.300 --> 57:36.300
把它放在后面

57:36.300 --> 57:37.300
格式化一下

57:37.300 --> 57:38.300
好了

57:38.300 --> 57:39.300
return 第一个死判

57:39.300 --> 57:40.300
就是我们的

57:40.300 --> 57:41.300
引迫的时候框

57:41.300 --> 57:42.300
我这里面写一下

57:42.300 --> 57:43.300
死判

57:43.300 --> 57:44.300
class name

57:44.300 --> 57:46.300
咱们指定一个class name

57:46.300 --> 57:47.300
如果说样式不合适

57:47.300 --> 57:48.300
我们再给他

57:48.300 --> 57:49.300
进行一个调整

57:49.300 --> 57:51.300
user name

57:51.300 --> 57:53.300
规定好了之后

57:53.300 --> 57:54.300
那我们展示的时候

57:54.300 --> 57:55.300
是展示谁呢

57:55.300 --> 57:56.300
就是我们的

57:56.300 --> 57:57.300
这个recode

57:57.300 --> 57:58.300
也就是说

57:58.300 --> 57:59.300
我们这个date

57:59.300 --> 58:00.300
或者是我们直接

58:00.300 --> 58:01.300
比较date

58:01.300 --> 58:03.300
我们叫user name

58:03.300 --> 58:04.300
把它改一下

58:04.300 --> 58:06.300
叫user name

58:08.300 --> 58:09.300
大写的

58:10.300 --> 58:11.300
好

58:11.300 --> 58:12.300
定义好这个

58:12.300 --> 58:13.300
user name之后

58:13.300 --> 58:14.300
那我们直接的

58:14.300 --> 58:15.300
就在这里面

58:15.300 --> 58:16.300
渲染的时候

58:16.300 --> 58:17.300
把user name

58:17.300 --> 58:18.300
给他进行一个填充

58:18.300 --> 58:19.300
那下面的死判

58:19.300 --> 58:20.300
就是我们右边的

58:20.300 --> 58:21.300
这一部分

58:21.300 --> 58:22.300
下面的死判

58:22.300 --> 58:23.300
我们这个里面

58:23.300 --> 58:24.300
首先要给他

58:24.300 --> 58:25.300
进行一个onclick

58:25.300 --> 58:26.300
事件

58:26.300 --> 58:27.300
对不对

58:27.300 --> 58:28.300
onclick事件

58:28.300 --> 58:29.300
那这里面

58:29.300 --> 58:30.300
我们是什么事件呢

58:30.300 --> 58:31.300
咱们先给他

58:31.300 --> 58:32.300
写一下

58:32.300 --> 58:33.300
onclick指定一下

58:33.300 --> 58:34.300
那这个里面

58:34.300 --> 58:35.300
我们的这个

58:35.300 --> 58:36.300
onclick事件

58:36.300 --> 58:37.300
咱们这里面

58:37.300 --> 58:38.300
比如说叫

58:38.300 --> 58:39.300
open detail dialog

58:40.300 --> 58:42.930
好吧

58:42.930 --> 58:43.930
open detail dialog

58:43.930 --> 58:44.930
就调用这么一个方法

58:44.930 --> 58:45.930
但这方法

58:45.930 --> 58:46.930
显然现在没有

58:46.930 --> 58:47.930
对吧

58:47.930 --> 58:48.930
没有怎么办

58:48.930 --> 58:49.930
不要紧

58:49.930 --> 58:50.930
咱们可以给他

58:50.930 --> 58:51.930
进行一个传递

58:51.930 --> 58:53.930
open detail dialog

58:53.930 --> 58:54.930
当我定义好的之后

58:54.930 --> 58:55.930
然后呢

58:55.930 --> 58:56.930
这个里面

58:56.930 --> 58:57.930
其实是有这个

58:57.930 --> 58:58.930
内容展示的

58:58.930 --> 58:59.930
这里面有一个

58:59.930 --> 59:00.930
icon的map

59:00.930 --> 59:01.930
也就是说

59:01.930 --> 59:02.930
有这么一个小图

59:02.930 --> 59:04.930
我们可以看一下

59:04.930 --> 59:05.930
这个小图从哪来呢

59:05.930 --> 59:06.930
我们就在

59:06.930 --> 59:08.930
这个iconmap里面

59:08.930 --> 59:10.930
来进行一个填充

59:10.930 --> 59:11.930
但这个iconmap

59:11.930 --> 59:12.930
填充的时候

59:12.930 --> 59:14.930
我们是没有这个内容的

59:14.930 --> 59:15.930
那咋办呢

59:15.930 --> 59:16.930
我们准备好了

59:16.930 --> 59:18.930
一个iconmap.js

59:18.930 --> 59:19.930
这个时候

59:19.930 --> 59:20.930
我们可以

59:20.930 --> 59:21.930
也用这个

59:21.930 --> 59:23.930
把我们的给替换一下

59:23.930 --> 59:24.930
你拿到代码之后

59:24.930 --> 59:25.930
直接把这个给来

59:25.930 --> 59:26.930
做一个替换就ok了

59:26.930 --> 59:27.930
然后再接下来的

59:27.930 --> 59:28.930
开发过程当中呢

59:28.930 --> 59:29.930
如果说

59:29.930 --> 59:30.930
适合到新的

59:30.930 --> 59:31.930
我提前呢

59:31.930 --> 59:32.930
都会加来好了

59:32.930 --> 59:33.930
你只要拿到

59:33.930 --> 59:35.930
本课程对应的

59:35.930 --> 59:36.930
这个代码之后

59:36.930 --> 59:37.930
把这个代码里面的

59:37.930 --> 59:38.930
iconmap

59:38.930 --> 59:39.930
给做一个替换

59:39.930 --> 59:40.930
那这样就保证

59:40.930 --> 59:41.930
你能正确的使用了

59:41.930 --> 59:42.930
一个小图标

59:42.930 --> 59:43.930
非常简单

59:43.930 --> 59:44.930
我们直接的

59:44.930 --> 59:45.930
在这个里面

59:45.930 --> 59:46.930
iconmap

59:46.930 --> 59:47.930
然后iconmap

59:47.930 --> 59:48.930
但是你有没有

59:48.930 --> 59:49.930
现在没有对不对

59:49.930 --> 59:50.930
我们这个叫detail

59:50.930 --> 59:51.930
咱们写写完

59:52.930 --> 59:53.930
没有呢

59:53.930 --> 59:54.930
就给他做一个引入

59:54.930 --> 59:55.930
引入怎么办呢

59:55.930 --> 59:57.930
我们引炮的iconmap

59:57.930 --> 59:58.930
from

59:58.930 --> 59:59.930
从我们的

59:59.930 --> 01:00:00.930
这个conformance

01:00:00.930 --> 01:00:01.930
下面

01:00:03.930 --> 01:00:04.930
conformance

01:00:04.930 --> 01:00:06.930
下面有一个iconmap

01:00:06.930 --> 01:00:07.930
好了

01:00:07.930 --> 01:00:08.930
那有个iconmap

01:00:08.930 --> 01:00:09.930
之后找到

01:00:09.930 --> 01:00:10.930
他的一个detail

01:00:10.930 --> 01:00:11.930
咱们看行不行

01:00:12.930 --> 01:00:13.930
回到我们这个里面

01:00:13.930 --> 01:00:14.930
显然抱错了

01:00:14.930 --> 01:00:15.930
对不对

01:00:15.930 --> 01:00:16.930
conformance

01:00:16.930 --> 01:00:17.930
下面

01:00:17.930 --> 01:00:18.930
咱们来试一下

01:00:18.930 --> 01:00:19.930
conformance

01:00:23.300 --> 01:00:24.300
引炮的iconmap

01:00:24.300 --> 01:00:25.300
from

01:00:25.300 --> 01:00:26.300
刚才写的有错吗

01:00:26.300 --> 01:00:28.300
con

01:00:28.300 --> 01:00:30.300
这里面有一个错误

01:00:30.300 --> 01:00:31.300
来刷新一下

01:00:31.300 --> 01:00:32.300
试一下

01:00:32.300 --> 01:00:33.300
看是否可行

01:00:33.300 --> 01:00:34.300
到这个里面

01:00:34.300 --> 01:00:35.300
我们指定的时候

01:00:35.300 --> 01:00:36.300
你会发现

01:00:36.300 --> 01:00:37.300
这个值是不是就有了

01:00:37.300 --> 01:00:38.300
对吧

01:00:38.300 --> 01:00:39.300
有了值之后

01:00:39.300 --> 01:00:40.300
那这个其实是有

01:00:40.300 --> 01:00:41.300
一个harve效果的

01:00:41.300 --> 01:00:43.300
那我们给他一个什么

01:00:43.300 --> 01:00:44.300
Kalas name

01:00:44.300 --> 01:00:45.300
Kalas name

01:00:45.300 --> 01:00:46.300
因为我们之前

01:00:46.300 --> 01:00:48.300
订了一个c-r

01:00:48.300 --> 01:00:49.300
那我这里面写一下

01:00:49.300 --> 01:00:50.300
看他能不能继承

01:00:50.300 --> 01:00:52.300
继承就省事了

01:00:52.300 --> 01:00:53.300
然后这里面有打印值

01:00:53.300 --> 01:00:55.300
把这个打印值先干掉吗

01:00:56.300 --> 01:00:59.680
显然没继承

01:00:59.680 --> 01:01:00.680
那我们刷新一下

01:01:00.680 --> 01:01:02.680
刚才是没有刷新的原因

01:01:02.680 --> 01:01:03.680
到这个里面

01:01:03.680 --> 01:01:04.680
c-r无效

01:01:04.680 --> 01:01:06.680
那我们就定一下

01:01:06.680 --> 01:01:07.680
把这两个属性

01:01:07.680 --> 01:01:08.680
都来做一个处理

01:01:08.680 --> 01:01:10.680
我记得layout里面

01:01:10.680 --> 01:01:11.680
是有一个c-r的

01:01:11.680 --> 01:01:14.680
找到我们的layout

01:01:14.680 --> 01:01:16.680
背的layout.less

01:01:16.680 --> 01:01:17.680
然后这里面

01:01:17.680 --> 01:01:19.680
应没有c-r

01:01:19.680 --> 01:01:20.680
那我们就写一下

01:01:20.680 --> 01:01:21.680
点c-r

01:01:21.680 --> 01:01:22.680
非常简单

01:01:22.680 --> 01:01:24.680
就给他一个c-r

01:01:24.680 --> 01:01:25.680
如果你不想写的话

01:01:25.680 --> 01:01:26.680
怎么办

01:01:26.680 --> 01:01:27.680
那你直接在这里面写一个

01:01:27.680 --> 01:01:29.680
死带要属性也可以

01:01:30.680 --> 01:01:31.680
这样是不是就有了

01:01:31.680 --> 01:01:32.680
有了之后

01:01:32.680 --> 01:01:33.680
我们是不是就可以点击了

01:01:33.680 --> 01:01:34.680
点击的时候

01:01:34.680 --> 01:01:35.680
咱也别调用

01:01:35.680 --> 01:01:36.680
那咱们怎么办

01:01:36.680 --> 01:01:37.680
我在这里面打印一个值

01:01:37.680 --> 01:01:38.680
打印一个什么

01:01:38.680 --> 01:01:39.680
123

01:01:39.680 --> 01:01:40.680
咱先来试一下

01:01:41.680 --> 01:01:43.680
我到这个里面点击

01:01:43.680 --> 01:01:44.680
你会发现

01:01:44.680 --> 01:01:45.680
这里面有什么问题呢

01:01:45.680 --> 01:01:46.680
就是说

01:01:46.680 --> 01:01:47.680
其实我点击

01:01:47.680 --> 01:01:49.680
是想打开右侧的

01:01:49.680 --> 01:01:50.680
详情弹装

01:01:50.680 --> 01:01:51.680
但是现在

01:01:51.680 --> 01:01:52.680
我们这个表达

01:01:52.680 --> 01:01:54.680
也给处罚了这个修改了

01:01:54.680 --> 01:01:55.680
那这是因为啥

01:01:55.680 --> 01:01:56.680
其实这是因为

01:01:56.680 --> 01:01:58.680
事件是不是有冒泡

01:01:58.680 --> 01:01:59.680
也就是说

01:01:59.680 --> 01:02:00.680
其实这个事件

01:02:00.680 --> 01:02:01.680
它现在是冒泡了

01:02:01.680 --> 01:02:02.680
那怎么办呢

01:02:02.680 --> 01:02:03.680
我处罚这个当前

01:02:03.680 --> 01:02:04.680
指定了

01:02:04.680 --> 01:02:05.680
紫元素事件的时候

01:02:05.680 --> 01:02:06.680
我要做一个

01:02:06.680 --> 01:02:07.680
意义点死到吧

01:02:07.680 --> 01:02:08.680
publication

01:02:08.680 --> 01:02:09.680
把他的这个冒泡

01:02:09.680 --> 01:02:10.680
给他干掉

01:02:10.680 --> 01:02:11.680
对吧

01:02:11.680 --> 01:02:12.680
也就是说单独的处罚他

01:02:12.680 --> 01:02:14.680
这样就OK了

01:02:14.680 --> 01:02:15.680
一点死到吧

01:02:15.680 --> 01:02:16.680
publication之后

01:02:16.680 --> 01:02:17.680
我们再来看一下

01:02:17.680 --> 01:02:18.680
是否可行

01:02:18.680 --> 01:02:19.680
然后呢

01:02:19.680 --> 01:02:20.680
我们在这个里面

01:02:20.680 --> 01:02:21.680
他walker

01:02:21.680 --> 01:02:22.680
我一点击

01:02:22.680 --> 01:02:23.680
你会发现

01:02:23.680 --> 01:02:24.680
这时候是不是没啥问题了

01:02:24.680 --> 01:02:25.680
没啥问题

01:02:25.680 --> 01:02:26.680
那此时我调用

01:02:26.680 --> 01:02:27.680
open dialog

01:02:27.680 --> 01:02:29.680
调用open dialog

01:02:29.680 --> 01:02:30.680
的时候

01:02:30.680 --> 01:02:31.680
你不能白调用啊

01:02:31.680 --> 01:02:32.680
因为你得知道

01:02:32.680 --> 01:02:33.680
一会你去打开谁

01:02:33.680 --> 01:02:34.680
对吧

01:02:34.680 --> 01:02:35.680
那我下面

01:02:35.680 --> 01:02:36.680
是不是得给他

01:02:36.680 --> 01:02:37.680
传递一个什么id值

01:02:37.680 --> 01:02:38.680
对吧

01:02:38.680 --> 01:02:39.680
那这样id值

01:02:39.680 --> 01:02:40.680
我们给他传递过去之后

01:02:40.680 --> 01:02:41.680
那在这个

01:02:41.680 --> 01:02:42.680
table list的里面

01:02:42.680 --> 01:02:43.680
我们就来好用了

01:02:43.680 --> 01:02:44.680
对吧

01:02:44.680 --> 01:02:45.680
放在这里面

01:02:45.680 --> 01:02:46.680
我们再写一个

01:02:46.680 --> 01:02:48.680
open detail dialog

01:02:48.680 --> 01:02:49.680
这里面

01:02:50.680 --> 01:02:51.680
这个什么

01:02:51.680 --> 01:02:52.680
打开

01:02:52.680 --> 01:02:53.680
员工

01:02:53.680 --> 01:02:54.680
详情

01:02:54.680 --> 01:02:55.680
详情

01:02:55.680 --> 01:02:56.680
界面

01:02:56.680 --> 01:02:57.680
你打开详情界面

01:02:57.680 --> 01:02:58.680
现在前提

01:02:58.680 --> 01:02:59.680
你得先

01:02:59.680 --> 01:03:00.680
获取到数据

01:03:00.680 --> 01:03:01.680
如果你不获取数据

01:03:01.680 --> 01:03:03.680
你打开这个详情界面

01:03:03.680 --> 01:03:04.680
也没什么任何意义

01:03:04.680 --> 01:03:05.680
对不对

01:03:05.680 --> 01:03:07.680
那我们这个里面

01:03:07.680 --> 01:03:08.680
怎么办呢

01:03:08.680 --> 01:03:09.680
首先我们要去获取数据

01:03:09.680 --> 01:03:10.680
那这样

01:03:10.680 --> 01:03:11.680
我们先定一下

01:03:11.680 --> 01:03:13.680
open detail dialog

01:03:13.680 --> 01:03:14.680
然后在这个里面

01:03:14.680 --> 01:03:15.680
给他复职啊

01:03:15.680 --> 01:03:17.680
这里面肯定是有一个id的

01:03:17.680 --> 01:03:18.680
对吧

01:03:18.680 --> 01:03:19.680
因为我们传了一个id

01:03:19.680 --> 01:03:20.680
然后呢

01:03:20.680 --> 01:03:21.680
我们在这里面

01:03:21.680 --> 01:03:23.680
const open detail dialog

01:03:23.680 --> 01:03:26.680
等于下滑线id

01:03:26.680 --> 01:03:27.680
然后在这个里面

01:03:27.680 --> 01:03:28.680
我们就要去

01:03:28.680 --> 01:03:30.680
给他做一个分发了

01:03:30.680 --> 01:03:31.680
因为什么呢

01:03:31.680 --> 01:03:32.680
做分发

01:03:32.680 --> 01:03:33.680
我们这个里面处理的时候

01:03:33.680 --> 01:03:34.680
比如说获取详情

01:03:34.680 --> 01:03:36.680
用状态管理

01:03:36.680 --> 01:03:38.680
我们不光是对这个

01:03:38.680 --> 01:03:40.680
把这个详情数据

01:03:40.680 --> 01:03:41.680
给收集到

01:03:41.680 --> 01:03:42.680
而且呢

01:03:42.680 --> 01:03:43.680
我们还要做一件事

01:03:43.680 --> 01:03:44.680
因为你打开弹窗

01:03:44.680 --> 01:03:45.680
这个弹窗

01:03:45.680 --> 01:03:46.680
咱们也说了

01:03:46.680 --> 01:03:47.680
好多组件都会使用到

01:03:47.680 --> 01:03:48.680
这个时候呢

01:03:48.680 --> 01:03:49.680
我们可能就会去

01:03:49.680 --> 01:03:51.680
绑定一个

01:03:51.680 --> 01:03:52.680
全局的公共状态

01:03:52.680 --> 01:03:53.680
然后呢

01:03:53.680 --> 01:03:54.680
我们对这个公共状态

01:03:54.680 --> 01:03:55.680
进行一个

01:03:55.680 --> 01:03:56.680
调整

01:03:56.680 --> 01:03:57.680
是不是就OK了

01:03:57.680 --> 01:03:58.680
那这里面

01:03:58.680 --> 01:03:59.680
我们就使用这种

01:03:59.680 --> 01:04:00.680
dispatch的形式

01:04:00.680 --> 01:04:01.680
由model里面

01:04:01.680 --> 01:04:02.680
来进行

01:04:02.680 --> 01:04:03.680
我们这个

01:04:03.680 --> 01:04:05.680
调用

01:04:05.680 --> 01:04:06.680
详情的

01:04:06.680 --> 01:04:07.680
事件接口的一个处发

01:04:07.680 --> 01:04:08.680
staff

01:04:08.680 --> 01:04:10.680
下面

01:04:10.680 --> 01:04:11.680
我们定一个

01:04:11.680 --> 01:04:12.680
这个叫什么

01:04:12.680 --> 01:04:13.680
getstaff detail

01:04:13.680 --> 01:04:16.310
好

01:04:16.310 --> 01:04:17.310
getstaff detail

01:04:17.310 --> 01:04:18.310
我们定义完了之后

01:04:18.310 --> 01:04:19.310
那这里面

01:04:19.310 --> 01:04:20.310
肯定的传旨

01:04:20.310 --> 01:04:21.310
我这里面就写一个

01:04:21.310 --> 01:04:23.310
payload的入餐

01:04:23.310 --> 01:04:24.310
payload的入餐

01:04:24.310 --> 01:04:25.310
就是我们这个id纸

01:04:25.310 --> 01:04:26.310
id纸

01:04:26.310 --> 01:04:27.310
给它传过去就行

01:04:27.310 --> 01:04:29.310
这个注意是一个小写的

01:04:29.310 --> 01:04:30.310
好了

01:04:30.310 --> 01:04:31.310
定义完成之后

01:04:31.310 --> 01:04:32.310
这里面又回到问题了

01:04:32.310 --> 01:04:33.310
dispatch又忘错了

01:04:33.310 --> 01:04:34.310
没有对吧

01:04:34.310 --> 01:04:35.310
使用dispatch

01:04:35.310 --> 01:04:36.310
那首先呢

01:04:36.310 --> 01:04:37.310
我们要把这个

01:04:37.310 --> 01:04:38.310
youse

01:04:38.310 --> 01:04:39.310
dispatch

01:04:39.310 --> 01:04:40.310
给它进行一个输出

01:04:40.310 --> 01:04:42.310
导出youse

01:04:42.310 --> 01:04:43.310
dispatch

01:04:43.310 --> 01:04:44.310
从wumi里面

01:04:44.310 --> 01:04:45.310
给它进行导出

01:04:45.310 --> 01:04:46.310
之后呢

01:04:46.310 --> 01:04:47.310
我把这个dispatch

01:04:47.310 --> 01:04:48.310
进行一个定义

01:04:48.310 --> 01:04:50.310
couns的dispatch

01:04:50.310 --> 01:04:52.310
等于我们的这个youse

01:04:52.310 --> 01:04:53.310
dispatch

01:04:53.310 --> 01:04:54.310
ok

01:04:54.310 --> 01:04:55.310
方法调用一下

01:04:55.310 --> 01:04:56.310
调用一下之后

01:04:56.310 --> 01:04:57.310
dispatch

01:04:57.310 --> 01:04:58.310
就会出发了

01:04:58.310 --> 01:04:59.310
出发的时候

01:04:59.310 --> 01:05:00.310
那我们就回到model里面

01:05:00.310 --> 01:05:02.310
来定一下这么一个方法

01:05:02.310 --> 01:05:03.310
那这个叫什么

01:05:03.310 --> 01:05:05.310
获取员工的详情

01:05:05.310 --> 01:05:06.310
写一下

01:05:06.310 --> 01:05:08.310
获取员工

01:05:08.310 --> 01:05:10.310
详情

01:05:10.310 --> 01:05:11.310
新号

01:05:11.310 --> 01:05:12.310
首先是Generator

01:05:12.310 --> 01:05:13.310
函数

01:05:13.310 --> 01:05:14.310
它一个通用写法

01:05:14.310 --> 01:05:15.310
然后这里面

01:05:15.310 --> 01:05:16.310
是第一个

01:05:16.310 --> 01:05:17.310
和call

01:05:17.310 --> 01:05:18.310
我们就在这个里面

01:05:18.310 --> 01:05:19.310
来做事就可以了

01:05:19.310 --> 01:05:20.310
那做事的时候

01:05:20.310 --> 01:05:21.310
我们要做什么事呢

01:05:21.310 --> 01:05:22.310
其实就是要

01:05:22.310 --> 01:05:24.310
触发我们的一个请求

01:05:24.310 --> 01:05:25.310
那这里面

01:05:25.310 --> 01:05:26.310
我们就定一下

01:05:26.310 --> 01:05:27.310
couns的

01:05:27.310 --> 01:05:28.310
这里面指定一个什么呢

01:05:28.310 --> 01:05:29.310
data

01:05:29.310 --> 01:05:30.310
返回的指着msg

01:05:30.310 --> 01:05:31.310
去调用

01:05:31.310 --> 01:05:33.310
那是使用

01:05:33.310 --> 01:05:34.310
nl的关键字

01:05:34.310 --> 01:05:35.310
之后

01:05:35.310 --> 01:05:36.310
后面跟一个call

01:05:36.310 --> 01:05:38.310
nl的call

01:05:38.310 --> 01:05:39.310
触发的时候

01:05:39.310 --> 01:05:40.310
就是dollaredtdp

01:05:40.310 --> 01:05:41.310
那dollaredtp

01:05:41.310 --> 01:05:43.310
我们这个获取员工

01:05:43.310 --> 01:05:44.310
应该是哪一个接口

01:05:44.310 --> 01:05:46.310
那现在咱们也得看一眼

01:05:46.310 --> 01:05:48.310
到我们的summers

01:05:48.310 --> 01:05:49.310
下面interface

01:05:49.310 --> 01:05:51.310
找到我们的这个stuff

01:05:51.310 --> 01:05:52.310
找到stuff之后

01:05:52.310 --> 01:05:53.310
那这个里面

01:05:53.310 --> 01:05:54.310
有一个获取员工

01:05:54.310 --> 01:05:55.310
详情

01:05:55.310 --> 01:05:57.310
叫stuff detail

01:05:57.310 --> 01:05:58.310
对吧

01:05:58.310 --> 01:05:59.310
sorry

01:05:59.310 --> 01:06:01.310
应该是getstuff detail

01:06:01.310 --> 01:06:02.310
拿到它之后

01:06:02.310 --> 01:06:03.310
我们dollaredtp

01:06:03.310 --> 01:06:04.310
getstuff detail

01:06:04.310 --> 01:06:05.310
传递的指

01:06:05.310 --> 01:06:07.310
刚才咱们也看到了

01:06:07.310 --> 01:06:08.310
就是我们

01:06:08.310 --> 01:06:09.310
指定好的那个id

01:06:09.310 --> 01:06:10.310
对吧

01:06:10.310 --> 01:06:11.310
那我们就把这个

01:06:11.310 --> 01:06:12.310
payload的

01:06:12.310 --> 01:06:13.310
给它进行一个传递

01:06:13.310 --> 01:06:14.310
就可以了

01:06:14.310 --> 01:06:15.310
把这个payload的

01:06:15.310 --> 01:06:16.310
写一下

01:06:16.310 --> 01:06:17.310
不可以

01:06:17.310 --> 01:06:18.310
我们现在呢

01:06:18.310 --> 01:06:20.310
就对它来进行一个调用

01:06:20.310 --> 01:06:21.310
调用之前

01:06:21.310 --> 01:06:22.310
咱们这里面调整一下

01:06:22.310 --> 01:06:23.310
原来

01:06:23.310 --> 01:06:24.310
刚才咱们写的时候

01:06:24.310 --> 01:06:25.310
是放在外面了

01:06:25.310 --> 01:06:26.310
我们要给它放在

01:06:26.310 --> 01:06:27.310
e-pay cost

01:06:27.310 --> 01:06:28.310
函数里面

01:06:28.310 --> 01:06:29.310
放在函数里面

01:06:29.310 --> 01:06:30.310
咱们来试一下

01:06:30.310 --> 01:06:31.310
刷新界面

01:06:31.310 --> 01:06:32.310
网络请求失败了

01:06:32.310 --> 01:06:34.310
这搞事情了

01:06:34.310 --> 01:06:35.310
好的

01:06:35.310 --> 01:06:36.310
回来之后

01:06:36.310 --> 01:06:37.310
那我们这里面

01:06:37.310 --> 01:06:38.310
点击一下

01:06:38.310 --> 01:06:39.310
点击一下

01:06:39.310 --> 01:06:41.310
看到有没有发送请求

01:06:41.310 --> 01:06:42.310
这个里面呢

01:06:42.310 --> 01:06:43.310
是有发送的

01:06:43.310 --> 01:06:44.310
然后呢

01:06:44.310 --> 01:06:45.310
我们在这个里面

01:06:45.310 --> 01:06:46.310
给它做一个打印

01:06:46.310 --> 01:06:47.310
这是

01:06:47.310 --> 01:06:48.310
data

01:06:48.310 --> 01:06:49.310
我们在对它的

01:06:49.310 --> 01:06:50.310
这个数据来讲

01:06:50.310 --> 01:06:51.310
只需要data就ok了

01:06:51.310 --> 01:06:52.310
其他的咱不关注

01:06:52.310 --> 01:06:53.310
这里面点击一下

01:06:53.310 --> 01:06:54.310
李小铭

01:06:54.310 --> 01:06:55.310
ok有这个指示是吧

01:06:55.310 --> 01:06:56.310
那有这个指示

01:06:56.310 --> 01:06:57.310
其实我们是不是

01:06:57.310 --> 01:06:58.310
现在就需要

01:06:58.310 --> 01:06:59.310
给它进行一个保存

01:06:59.310 --> 01:07:00.310
就可以了

01:07:00.310 --> 01:07:01.310
保存什么指示呢

01:07:01.310 --> 01:07:02.310
我们这里面

01:07:02.310 --> 01:07:03.310
定有好一个

01:07:03.310 --> 01:07:04.310
staff list

01:07:04.310 --> 01:07:05.310
对不对

01:07:05.310 --> 01:07:06.310
那我们这个

01:07:06.310 --> 01:07:07.310
就把它给它

01:07:07.310 --> 01:07:08.310
做一个什么

01:07:08.310 --> 01:07:09.310
收集保存

01:07:09.310 --> 01:07:10.310
那这里面

01:07:11.310 --> 01:07:12.310
yellet呢

01:07:12.310 --> 01:07:13.310
我们使用它的

01:07:13.310 --> 01:07:14.310
put方法

01:07:14.310 --> 01:07:15.310
然后呢

01:07:15.310 --> 01:07:16.310
tap指定一下

01:07:18.310 --> 01:07:19.310
yellet

01:07:19.310 --> 01:07:20.310
put

01:07:20.310 --> 01:07:21.310
这个里面指定一个

01:07:21.310 --> 01:07:22.310
tap

01:07:22.310 --> 01:07:24.310
有卡顿

01:07:24.310 --> 01:07:26.310
那tap指定的时候

01:07:26.310 --> 01:07:27.310
我们指定什么呢

01:07:27.310 --> 01:07:28.310
比如说这个叫

01:07:28.310 --> 01:07:29.310
savo

01:07:29.310 --> 01:07:30.310
staff

01:07:30.310 --> 01:07:31.310
detail

01:07:31.310 --> 01:07:32.310
然后payload呢

01:07:32.310 --> 01:07:33.310
我们就把这个值

01:07:33.310 --> 01:07:34.310
给它进行一个传递

01:07:34.310 --> 01:07:36.310
payload值传递的时候

01:07:36.310 --> 01:07:37.310
其实我们

01:07:37.310 --> 01:07:38.310
现在就要传递一个什么

01:07:38.310 --> 01:07:39.310
把它这个data

01:07:39.310 --> 01:07:40.310
给它拿出去

01:07:40.310 --> 01:07:41.310
是不是就可以了

01:07:41.310 --> 01:07:42.310
那我们这里面就指定一下

01:07:42.310 --> 01:07:44.310
这个叫staff detail

01:07:44.310 --> 01:07:45.310
然后呢

01:07:45.310 --> 01:07:46.310
把它给解析为

01:07:46.310 --> 01:07:48.310
这个date

01:07:48.310 --> 01:07:49.310
是不是这样就可以

01:07:50.310 --> 01:07:51.310
ok 定义好了

01:07:51.310 --> 01:07:53.310
这个是我们做保存

01:07:53.310 --> 01:07:54.310
保存的时候呢

01:07:54.310 --> 01:07:55.310
你这里面是不是有这个

01:07:55.310 --> 01:07:56.310
savo

01:07:56.310 --> 01:07:57.310
staff detail

01:07:57.310 --> 01:07:58.310
对不对

01:07:58.310 --> 01:07:59.310
那savo

01:07:59.310 --> 01:08:00.310
staff detail

01:08:00.310 --> 01:08:01.310
这个就是

01:08:01.310 --> 01:08:02.310
做我们数据的一个保存的

01:08:02.310 --> 01:08:03.310
当你这样做完了之后

01:08:03.310 --> 01:08:04.310
那这个时候

01:08:04.310 --> 01:08:05.310
staff detail

01:08:05.310 --> 01:08:06.310
首先来讲

01:08:06.310 --> 01:08:07.310
它是不是应该就有值了

01:08:07.310 --> 01:08:08.310
我们来做一个断言

01:08:08.310 --> 01:08:09.310
如果它有值呢

01:08:09.310 --> 01:08:10.310
那这时候

01:08:10.310 --> 01:08:12.310
它就应该给我做一个收集

01:08:12.310 --> 01:08:13.310
咱们可以看一下

01:08:13.310 --> 01:08:14.310
dux

01:08:14.310 --> 01:08:15.310
这个插件里面

01:08:15.310 --> 01:08:16.310
来看一下

01:08:17.310 --> 01:08:18.310
找到staff

01:08:18.310 --> 01:08:19.310
出手话的时候

01:08:19.310 --> 01:08:20.310
我们这个staff detail

01:08:20.310 --> 01:08:21.310
是一个空

01:08:21.310 --> 01:08:22.310
当我一点击

01:08:22.310 --> 01:08:23.310
发送完请求之后

01:08:23.310 --> 01:08:25.310
那现在staff detail里面

01:08:25.310 --> 01:08:27.310
由于我们刚才的操作之后

01:08:27.310 --> 01:08:28.310
这个时候呢

01:08:28.310 --> 01:08:30.310
里面已经有一个值了

01:08:30.310 --> 01:08:31.310
对不对

01:08:31.310 --> 01:08:32.310
staff detail

01:08:32.310 --> 01:08:33.310
ok 有值了

01:08:33.310 --> 01:08:34.310
这是第一步

01:08:34.310 --> 01:08:35.310
我们保存了一个staff detail

01:08:35.310 --> 01:08:36.310
而听我们说了

01:08:36.310 --> 01:08:37.310
这个时候呢

01:08:37.310 --> 01:08:38.310
我们还需要做一个什么

01:08:38.310 --> 01:08:40.310
全局的一个状态的管理

01:08:40.310 --> 01:08:42.310
什么样的全局状态管理

01:08:42.310 --> 01:08:43.310
因为我们要点击之后

01:08:43.310 --> 01:08:44.310
获取到数据

01:08:44.310 --> 01:08:45.310
然后呢

01:08:45.310 --> 01:08:46.310
我们右侧的弹砖

01:08:46.310 --> 01:08:47.310
你是需要给我打开的

01:08:47.310 --> 01:08:49.310
这个右侧弹砖打开

01:08:49.310 --> 01:08:50.310
怎么来做呢

01:08:51.310 --> 01:08:53.310
当你获取完数据之后

01:08:53.310 --> 01:08:54.310
我们这里面

01:08:54.310 --> 01:08:55.310
还需要使用

01:08:55.310 --> 01:08:56.310
yala.put

01:08:56.310 --> 01:08:58.310
那这个yala.put

01:08:58.310 --> 01:08:59.310
我们就不是去

01:08:59.310 --> 01:09:00.310
从这个

01:09:00.310 --> 01:09:02.310
当前某块里面了

01:09:02.310 --> 01:09:03.310
因为它属于公共的

01:09:03.310 --> 01:09:04.310
对不对

01:09:04.310 --> 01:09:05.310
那我们这里面

01:09:05.310 --> 01:09:06.310
common

01:09:06.310 --> 01:09:08.310
common下面有一个什么呢

01:09:08.310 --> 01:09:10.310
我们set show dialog

01:09:10.310 --> 01:09:11.310
我们可以定

01:09:11.310 --> 01:09:12.310
这么一个方法

01:09:12.310 --> 01:09:16.310
set show detail dialog

01:09:16.310 --> 01:09:17.310
也就是说

01:09:17.310 --> 01:09:18.310
你是否显示

01:09:18.310 --> 01:09:21.310
详情的这么一个弹窗

01:09:21.310 --> 01:09:22.310
是不是显示

01:09:22.310 --> 01:09:23.310
那payload里面呢

01:09:23.310 --> 01:09:25.310
我们指定好一个值

01:09:25.310 --> 01:09:30.310
叫ease show detail dialog

01:09:30.310 --> 01:09:31.310
那这个里面

01:09:31.310 --> 01:09:32.310
我们就给它一个处

01:09:32.310 --> 01:09:34.310
ease show detail dialog

01:09:34.310 --> 01:09:36.310
当你定义完成之后

01:09:36.310 --> 01:09:37.310
那这个时候

01:09:37.310 --> 01:09:38.310
我们去common下面

01:09:38.310 --> 01:09:40.310
就可以把它来给创建一下

01:09:40.310 --> 01:09:41.310
到我们的model

01:09:41.310 --> 01:09:43.310
common下面

01:09:43.310 --> 01:09:44.310
然后咱们直接的

01:09:44.310 --> 01:09:45.310
在这个里面

01:09:45.310 --> 01:09:46.310
reducer

01:09:46.310 --> 01:09:48.310
reducer下面复制一套

01:09:48.310 --> 01:09:52.310
叫set show detail dialog

01:09:52.310 --> 01:09:53.310
我们在这里面

01:09:53.310 --> 01:09:54.310
要想使用的话

01:09:54.310 --> 01:09:55.310
其实我们这里面

01:09:55.310 --> 01:09:56.310
是不是还得

01:09:56.310 --> 01:09:57.310
出手话定一个什么

01:09:57.310 --> 01:09:59.310
ease show detail dialog

01:09:59.310 --> 01:10:00.310
对吧

01:10:00.310 --> 01:10:01.310
我们指定一下

01:10:01.310 --> 01:10:02.310
出手话

01:10:02.310 --> 01:10:03.310
它肯定是false

01:10:03.310 --> 01:10:06.310
当我们经过数据请求

01:10:06.310 --> 01:10:08.310
获取到详情内容之后

01:10:08.310 --> 01:10:09.310
那这个时候

01:10:09.310 --> 01:10:10.310
它就应该给我们

01:10:10.310 --> 01:10:11.310
变成一个处的

01:10:11.310 --> 01:10:13.310
这么一个调整

01:10:13.310 --> 01:10:14.310
那我们来看一下

01:10:14.310 --> 01:10:15.310
首先

01:10:15.310 --> 01:10:19.310
我们这个看这个stuff里面

01:10:19.310 --> 01:10:20.310
stuff里面

01:10:20.310 --> 01:10:21.310
它这个

01:10:21.310 --> 01:10:22.310
stuff detail是没有指的

01:10:22.310 --> 01:10:23.310
common里面

01:10:23.310 --> 01:10:25.310
ease show detail dialog

01:10:25.310 --> 01:10:26.310
它是false

01:10:26.310 --> 01:10:27.310
当我一点击

01:10:27.310 --> 01:10:28.310
如果说正常的

01:10:28.310 --> 01:10:29.310
获取数据之后

01:10:29.310 --> 01:10:30.310
那这个时候

01:10:30.310 --> 01:10:32.310
它就会发生改变

01:10:32.310 --> 01:10:33.310
发生改变

01:10:33.310 --> 01:10:34.310
我们看这一条纸

01:10:34.310 --> 01:10:37.310
这个里面action style

01:10:37.310 --> 01:10:38.310
到这个里面

01:10:38.310 --> 01:10:41.310
是由stuff detail

01:10:41.310 --> 01:10:42.310
还没有指

01:10:42.310 --> 01:10:43.310
那我们看一下

01:10:43.310 --> 01:10:44.310
这请求报错了吗

01:10:44.310 --> 01:10:45.310
没有报错

01:10:45.310 --> 01:10:49.310
Redux

01:10:49.310 --> 01:10:50.310
我们直接的

01:10:50.310 --> 01:10:51.310
到这个里面

01:10:51.310 --> 01:10:52.310
它是有执行的

01:10:52.310 --> 01:10:53.310
刷新一下

01:10:53.310 --> 01:10:55.310
执行一下之后

01:10:55.310 --> 01:10:57.310
那这个时候

01:10:57.310 --> 01:10:59.310
它应该是给我们

01:10:59.310 --> 01:11:00.310
发送值的

01:11:00.310 --> 01:11:01.310
我们再试一下

01:11:02.310 --> 01:11:03.310
刚才

01:11:03.310 --> 01:11:05.310
它是没有保存到值

01:11:05.310 --> 01:11:07.310
我们来点击一下

01:11:07.310 --> 01:11:08.310
咱们这个时候

01:11:08.310 --> 01:11:09.310
我一点击

01:11:09.310 --> 01:11:10.310
好的

01:11:10.310 --> 01:11:12.310
那这个stuff detail

01:11:12.310 --> 01:11:13.310
ease show dialog

01:11:13.310 --> 01:11:14.310
它们俩都发生改变

01:11:14.310 --> 01:11:15.310
改变之后

01:11:15.310 --> 01:11:16.310
我从这个里面

01:11:16.310 --> 01:11:17.310
来获取看的时候

01:11:17.310 --> 01:11:19.310
stuff detail

01:11:19.310 --> 01:11:20.310
然后这个时候

01:11:20.310 --> 01:11:21.310
是不是就有值了

01:11:21.310 --> 01:11:22.310
但是

01:11:22.310 --> 01:11:24.310
stuff detail

01:11:24.310 --> 01:11:25.310
这个有一个问题

01:11:25.310 --> 01:11:27.310
我们这个叫stuff detail

01:11:27.310 --> 01:11:28.310
对不对

01:11:28.310 --> 01:11:29.310
然后我们存储的时候

01:11:29.310 --> 01:11:30.310
这里面有一个

01:11:30.310 --> 01:11:31.310
stuff detail

01:11:31.310 --> 01:11:32.310
显然不太对

01:11:32.310 --> 01:11:34.310
那我们回来找一下

01:11:34.310 --> 01:11:37.310
找到我们的这个model

01:11:37.310 --> 01:11:38.310
stuff.js

01:11:38.310 --> 01:11:40.310
那这个其实应该叫什么

01:11:40.310 --> 01:11:42.310
叫stuff detail

01:11:42.310 --> 01:11:43.310
对对对

01:11:43.310 --> 01:11:44.310
然后刚才

01:11:44.310 --> 01:11:46.310
我觉得这个有问题

01:11:46.310 --> 01:11:47.310
就在这

01:11:47.310 --> 01:11:48.310
等于给它扩充了

01:11:48.310 --> 01:11:49.310
一个属性

01:11:49.310 --> 01:11:50.310
这个就不对了

01:11:50.310 --> 01:11:51.310
咱们再来一遍

01:11:51.310 --> 01:11:52.310
点击

01:11:52.310 --> 01:11:53.310
它走两遍

01:11:53.310 --> 01:11:54.310
应该是

01:11:54.310 --> 01:11:55.310
有处理

01:11:55.310 --> 01:11:56.310
有处理之后

01:11:56.310 --> 01:11:57.310
那我们看一下

01:11:57.310 --> 01:11:58.310
stuff detail

01:11:58.310 --> 01:11:59.310
这里面

01:11:59.310 --> 01:12:00.310
扩充进去了

01:12:00.310 --> 01:12:01.310
然后我们还调整了

01:12:01.310 --> 01:12:03.310
一个common的状态

01:12:03.310 --> 01:12:04.310
stuff detail

01:12:04.310 --> 01:12:05.310
dialogue为处

01:12:05.310 --> 01:12:07.310
那这两个都做到之后

01:12:07.310 --> 01:12:08.310
接下来

01:12:08.310 --> 01:12:09.310
我们就可以根据

01:12:09.310 --> 01:12:11.310
这stuff detail

01:12:11.310 --> 01:12:12.310
dialogue

01:12:12.310 --> 01:12:13.310
这一个状态指示

01:12:13.310 --> 01:12:15.310
并且我们已经获取到了

01:12:15.310 --> 01:12:17.310
这个用户的详情信息

01:12:17.310 --> 01:12:18.310
那我们就可以把

01:12:18.310 --> 01:12:19.310
右边的

01:12:19.310 --> 01:12:20.310
侧边的这个内容

01:12:20.310 --> 01:12:22.310
给来完成一下

01:12:22.310 --> 01:12:23.310
好的

01:12:23.310 --> 01:12:24.310
我们本节课内容

01:12:24.310 --> 01:12:25.310
就到这里

01:12:25.310 --> 01:12:26.310
谢谢大家

