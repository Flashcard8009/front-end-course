WEBVTT

00:01.970 --> 00:03.970
各位同学 大家好

00:03.970 --> 00:06.970
这节课我们继续部门模块的一个制作学习

00:06.970 --> 00:08.970
那么通过上节课的制作

00:08.970 --> 00:11.970
我们已经实现了创建部门这样一个需求

00:11.970 --> 00:14.970
但是里面还是有一些其他的细节问题的

00:14.970 --> 00:17.970
那这节课我们在这个基础上

00:17.970 --> 00:20.970
把部门的详情制作给实现一下

00:20.970 --> 00:22.970
还有就是优化一下我们的代码

00:22.970 --> 00:26.970
首先来说我们对这个部门详情的一个展示

00:26.970 --> 00:27.970
那么第一点

00:27.970 --> 00:30.970
当我们看到这个部门详情缠装的时候

00:30.970 --> 00:34.970
里面的内容应该是提前确讯上的

00:34.970 --> 00:38.970
所以说我们首先来把这个需求给完成一下

00:38.970 --> 00:41.970
打开我们的代码配置此department

00:41.970 --> 00:44.970
department下面有一个form-component

00:44.970 --> 00:47.970
然后我们对这个代码进行一个打开

00:47.970 --> 00:49.970
打开之后在这个里面

00:49.970 --> 00:52.970
我们这个form承载了我们新增

00:52.970 --> 00:56.970
以及详情展示的这么一个功能

00:56.970 --> 00:59.970
这个里面如果说我们打开的这个

00:59.970 --> 01:01.970
是详情界面的话

01:01.970 --> 01:02.970
那处置化的时候

01:02.970 --> 01:06.970
它会显示我们部门的一些原始的信息

01:06.970 --> 01:08.970
如何来实现这个呢

01:08.970 --> 01:09.970
其实也非常简单

01:09.970 --> 01:10.970
我们之前在form里面

01:10.970 --> 01:13.970
如果说想给它提前加载内容的话

01:13.970 --> 01:14.970
那这个里面

01:14.970 --> 01:19.970
我们可以给它指定一个什么init-value的属性

01:19.970 --> 01:21.970
那它的值是一个对象

01:21.970 --> 01:24.970
对象里面就有一些描述信息

01:24.970 --> 01:28.970
首先我们想指定department-later

01:28.970 --> 01:30.970
就是department-name

01:30.970 --> 01:32.970
我们想指定这个属性

01:32.970 --> 01:34.970
那这个里面我们就添加一下

01:34.970 --> 01:37.970
department-name

01:37.970 --> 01:39.970
department-name从哪里获取呢

01:39.970 --> 01:41.970
这个时候我们要明确一点

01:41.970 --> 01:43.970
想要获取它的一个值

01:43.970 --> 01:45.970
那这个里面我们就要知道

01:45.970 --> 01:47.970
department-detail的相关信息

01:47.970 --> 01:50.970
department-detail相关信息从哪获取

01:50.970 --> 01:53.970
那我们这个里面是不是去发送之后

01:53.970 --> 01:55.970
那这里面有一个department-detail

01:55.970 --> 01:56.970
对吧

01:56.970 --> 01:58.970
我们知道我们这个里面是没有使用的

01:58.970 --> 02:00.970
既然你这里面有department-detail

02:00.970 --> 02:01.970
那这个就方便多了

02:01.970 --> 02:04.970
我们直接的可以通过you的selector

02:04.970 --> 02:08.970
来进行一个department-detail的一个获取

02:08.970 --> 02:12.970
先是把you的selector给做一个导出

02:12.970 --> 02:13.970
导出之后

02:13.970 --> 02:14.970
那我们这里面定一下

02:14.970 --> 02:20.970
couns的我们的获取的是department-detail

02:20.970 --> 02:24.970
获取它等于我们you的selector

02:24.970 --> 02:27.970
然后selector-department

02:27.970 --> 02:30.970
从这个selector-department里面

02:30.970 --> 02:33.970
来进行一个获取就可以

02:33.970 --> 02:35.970
好的 那获取它之后

02:35.970 --> 02:37.970
咱们现在是不是有这个department-detail

02:37.970 --> 02:39.970
我们可以来进行一个查看

02:39.970 --> 02:43.970
打印一下我们的department-detail

02:43.970 --> 02:45.970
那这个里面init-value

02:45.970 --> 02:47.970
首先给它干掉

02:47.970 --> 02:49.970
然后咱们刷新一下看一下效果

02:49.970 --> 02:51.970
这个时候检查元素

02:51.970 --> 02:52.970
到这个里面

02:52.970 --> 02:54.970
我们打印console

02:54.970 --> 02:55.970
从这个里面来看效果

02:55.970 --> 02:56.970
当我点开一个之后

02:56.970 --> 02:59.970
你会发现这个时候里面

02:59.970 --> 03:01.970
一开始肯定是有一次没有

03:01.970 --> 03:04.970
但是后面它就会有department-detail

03:04.970 --> 03:05.970
对不对

03:05.970 --> 03:07.970
那我们先以department-detail

03:07.970 --> 03:09.970
来给它进行一个添加

03:09.970 --> 03:12.970
因为它可能会有那的时候

03:12.970 --> 03:14.970
所以说我们这个department-detail

03:14.970 --> 03:16.970
在获取值的时候

03:16.970 --> 03:18.970
给它添加一个问号

03:18.970 --> 03:20.970
这样给它做了一个容错处理

03:20.970 --> 03:21.970
也就是说你有的时候

03:21.970 --> 03:24.970
我给你进行一个渲染

03:24.970 --> 03:29.970
问号department-detail.department-name

03:29.970 --> 03:30.970
好的

03:30.970 --> 03:32.970
咱们来看一下是否可行

03:32.970 --> 03:33.970
当我这样

03:33.970 --> 03:35.970
比如说重新来一遍

03:35.970 --> 03:37.970
点击感觉上没有

03:37.970 --> 03:39.970
那我再来一次点击

03:39.970 --> 03:40.970
这个时候你会发现

03:40.970 --> 03:41.970
外部钱都渲染上了

03:41.970 --> 03:42.970
也就是说

03:42.970 --> 03:43.970
当我刷新之后

03:43.970 --> 03:44.970
第一次是没有的

03:44.970 --> 03:46.970
那这个是为了什么原因呢

03:46.970 --> 03:47.970
其实这个里面

03:47.970 --> 03:48.970
我们可以明确一点

03:48.970 --> 03:50.970
我们打开这个弹窗

03:50.970 --> 03:51.970
是同步操作

03:51.970 --> 03:52.970
但是我们请求

03:52.970 --> 03:53.970
这个department-detail

03:53.970 --> 03:54.970
是一步操作

03:54.970 --> 03:55.970
那在一步操作

03:55.970 --> 03:56.970
返回结果之前

03:56.970 --> 03:57.970
我们同步任务

03:57.970 --> 03:58.970
就已经执行了

03:58.970 --> 03:59.970
也就是说

03:59.970 --> 04:01.970
那可能他在渲染的时候

04:01.970 --> 04:02.970
处理话的时候

04:02.970 --> 04:03.970
他是没有拿到这个值的

04:03.970 --> 04:05.970
当他二次拿到这个值之后

04:05.970 --> 04:06.970
那这个

04:06.970 --> 04:07.970
我们的整个这个组件

04:07.970 --> 04:08.970
是没有存心渲染

04:08.970 --> 04:09.970
解决这个问题

04:09.970 --> 04:10.970
也非常简单

04:11.970 --> 04:13.970
我们回到index.js

04:13.970 --> 04:14.970
也就是说

04:14.970 --> 04:15.970
它是一个入口文件家下面

04:15.970 --> 04:16.970
当时呢

04:16.970 --> 04:17.970
我们做的时候

04:17.970 --> 04:19.970
这个dialogue status

04:19.970 --> 04:21.970
来控制这个磨泰框的

04:21.970 --> 04:22.970
一个显示和隐藏

04:22.970 --> 04:23.970
那显然呢

04:23.970 --> 04:25.970
现在从这个里面控制啊

04:25.970 --> 04:26.970
感觉不是特别好了

04:26.970 --> 04:28.970
因为我们要在详情

04:28.970 --> 04:29.970
获取到之后

04:29.970 --> 04:30.970
再来进行的打开

04:30.970 --> 04:31.970
是不是

04:31.970 --> 04:33.970
这个时机会更好一些

04:33.970 --> 04:34.970
对吧

04:34.970 --> 04:35.970
那所以说

04:35.970 --> 04:37.970
我们找到我们的这个model

04:37.970 --> 04:39.970
model在获取详情之后

04:39.970 --> 04:40.970
那这个里面呢

04:40.970 --> 04:42.970
我们就可以来进行一个

04:42.970 --> 04:43.970
打开弹窗的一个操作

04:43.970 --> 04:45.970
那既然你打开弹窗

04:45.970 --> 04:46.970
那我们这里面就

04:46.970 --> 04:48.970
把原来在组件里面

04:48.970 --> 04:50.970
维护的弹窗状态

04:50.970 --> 04:51.970
变成我们一个

04:51.970 --> 04:52.970
公共状态啊

04:52.970 --> 04:54.970
受model dialog

04:54.970 --> 04:56.970
这里面出实话

04:56.970 --> 04:58.970
给它一个false

04:58.970 --> 04:59.970
然后呢

04:59.970 --> 05:00.970
我们这个里面写一下

05:00.970 --> 05:03.970
save dialog status

05:03.970 --> 05:07.970
或者是save受model dialog啊

05:07.970 --> 05:10.920
好定义完成之后

05:10.920 --> 05:11.920
那在这个时候

05:11.920 --> 05:12.920
如果说

05:12.920 --> 05:14.920
你详情获取完成之后

05:14.920 --> 05:15.920
也就是说

05:15.920 --> 05:16.920
把详情已经获取了

05:16.920 --> 05:17.920
反正你现在

05:17.920 --> 05:18.920
肯定是要打开弹窗

05:18.920 --> 05:19.920
有这么一个操作

05:19.920 --> 05:21.920
那我现在就再来写一下

05:21.920 --> 05:24.920
也类的put使用

05:24.920 --> 05:25.920
受

05:25.920 --> 05:26.920
哎这个里面多浪

05:26.920 --> 05:28.920
save受model dialog

05:28.920 --> 05:29.920
然后呢

05:29.920 --> 05:31.920
把我们的受model dialog

05:31.920 --> 05:33.920
给它调整为这个处

05:33.920 --> 05:34.920
也就是说

05:34.920 --> 05:35.920
详情获取完成之后

05:35.920 --> 05:38.920
再进行一个弹窗打开

05:38.920 --> 05:39.920
那这个呢

05:39.920 --> 05:40.920
就是我们model的一个改造

05:40.920 --> 05:41.920
改造完model之后

05:41.920 --> 05:42.920
那现在我们这个

05:42.920 --> 05:44.920
dial status

05:44.920 --> 05:45.920
目前来看

05:45.920 --> 05:46.920
意不大了

05:46.920 --> 05:47.920
对吧

05:47.920 --> 05:48.920
那我们就来给它调整一下

05:48.920 --> 05:50.920
如何来实现调整呢

05:50.920 --> 05:51.920
我们这个里面

05:51.920 --> 05:52.920
首先第一步

05:52.920 --> 05:53.920
我们使用的时候

05:53.920 --> 05:55.920
肯定是使用刚才

05:55.920 --> 05:57.920
我们定义的这个公共状态

05:57.920 --> 05:58.920
也就是说

05:58.920 --> 06:01.920
受model dialog status

06:01.920 --> 06:02.920
对不对

06:02.920 --> 06:03.920
然后呢

06:03.920 --> 06:04.920
受model dialog

06:04.920 --> 06:06.920
等于我们的优自

06:06.920 --> 06:08.920
咱们从优自 select 里面获取啊

06:08.920 --> 06:11.230
State

06:11.230 --> 06:13.230
dial department 里面

06:13.230 --> 06:15.230
来进行一个状态的获取

06:15.230 --> 06:16.230
获取之后呢

06:16.230 --> 06:18.230
我们把原来使用到的地方

06:18.230 --> 06:20.230
咱们都给它进行一个替换

06:20.230 --> 06:21.230
比如说

06:21.230 --> 06:22.230
我们这个里面

06:22.230 --> 06:24.230
有一个 dialog status

06:24.230 --> 06:25.230
那我就给它替换

06:25.230 --> 06:26.230
像这些啊

06:26.230 --> 06:28.230
有一些 set dialog status

06:28.230 --> 06:29.230
对吧

06:29.230 --> 06:31.230
那这个 set dialog status

06:31.230 --> 06:32.230
怎么办呢

06:32.230 --> 06:33.230
我们这个里面

06:33.230 --> 06:34.230
就可以调整你什么呢

06:34.230 --> 06:35.230
我们呢

06:35.230 --> 06:36.230
可以在这个新增弹窗

06:36.230 --> 06:37.230
打开之前呢

06:37.230 --> 06:38.230
调用一次

06:38.230 --> 06:39.230
我们的这个

06:39.230 --> 06:41.230
department of detail的一个设置

06:41.230 --> 06:42.230
把它呢

06:42.230 --> 06:43.230
给清空一下

06:43.230 --> 06:44.230
是不是就可以了

06:44.230 --> 06:45.230
所以说呢

06:45.230 --> 06:46.230
我们这里面

06:46.230 --> 06:48.230
save department of detail

06:48.230 --> 06:49.230
从这个里面呢

06:49.230 --> 06:51.230
我们来调用一下它啊

06:51.230 --> 06:52.230
然后这个里面传什么呢

06:52.230 --> 06:53.230
传一个值

06:53.230 --> 06:54.230
就是我们对

06:54.230 --> 06:56.230
department of detail的一个操作

06:56.230 --> 06:57.230
给它这个值呢

06:57.230 --> 06:59.230
变成我们原始值

06:59.230 --> 07:00.230
原始值之上

07:00.230 --> 07:01.230
就是这个闹呗

07:01.230 --> 07:02.230
那这样就能保证

07:02.230 --> 07:04.230
我们打开这个新增窗口

07:04.230 --> 07:06.230
和这个详情窗口之间

07:06.230 --> 07:08.230
他们避免了

07:08.230 --> 07:10.230
我们始终都能获取到

07:10.230 --> 07:11.230
详情这样一个问题

07:11.230 --> 07:12.230
那你看

07:12.230 --> 07:13.230
现在web前端

07:13.230 --> 07:14.230
旋转上了

07:14.230 --> 07:15.230
之后呢

07:15.230 --> 07:16.230
因为它没有了嘛

07:16.230 --> 07:17.230
对吧

07:17.230 --> 07:18.230
而且我们已经做了一种错

07:18.230 --> 07:19.230
那所以说这个时候

07:19.230 --> 07:21.230
它就不进行任何展示了啊

07:21.230 --> 07:22.230
好了那这个说完了之后

07:22.230 --> 07:24.230
那我们继续来给它

07:24.230 --> 07:25.230
进行一个值的渲染

07:25.230 --> 07:26.230
刚才是渲染了

07:26.230 --> 07:27.230
第一个值

07:27.230 --> 07:29.230
叫我们department的内幕对吧

07:29.230 --> 07:30.230
那我们接下来

07:30.230 --> 07:31.230
还有几个值啊

07:31.230 --> 07:32.230
也是需要我们

07:32.230 --> 07:33.230
进行一个渲染的

07:33.230 --> 07:34.230
第二个值是什么呢

07:34.230 --> 07:37.860
是我们的remark

07:37.860 --> 07:38.860
ok

07:38.860 --> 07:39.860
remark这个值

07:39.860 --> 07:40.860
remark这个值呢

07:40.860 --> 07:42.860
就是department of detail

07:42.860 --> 07:44.860
的remark这样一个自断

07:44.860 --> 07:45.860
就可以了

07:45.860 --> 07:46.860
咱把它给渲染上

07:46.860 --> 07:47.860
之后呢

07:47.860 --> 07:48.860
我们这里面还有一个

07:48.860 --> 07:51.860
department的later

07:51.860 --> 07:52.860
我们把这个later

07:52.860 --> 07:53.860
值也给它添加上

07:53.860 --> 07:54.860
当然了

07:54.860 --> 07:55.860
这个渲染的时候

07:55.860 --> 07:57.860
我们应该叫later name

07:57.860 --> 07:59.860
因为下面使用的时候

07:59.860 --> 08:00.860
我们是使用的

08:00.860 --> 08:02.860
department的later name

08:02.860 --> 08:04.860
这个自断对不对

08:04.860 --> 08:05.860
然后呢

08:05.860 --> 08:06.860
这个自断怎么获取呢

08:06.860 --> 08:07.860
我们直接的

08:07.860 --> 08:09.860
从department of detail

08:09.860 --> 08:10.860
点

08:10.860 --> 08:12.860
department later

08:12.860 --> 08:14.860
这个里面来获取

08:15.860 --> 08:16.860
later有值

08:16.860 --> 08:17.860
那的话

08:17.860 --> 08:18.860
这个里面

08:18.860 --> 08:19.860
我们获取它的一个

08:19.860 --> 08:20.860
点

08:20.860 --> 08:21.860
later name

08:21.860 --> 08:22.860
是不是就可以了

08:22.860 --> 08:23.860
然后呢

08:23.860 --> 08:24.860
这个为了防止报措

08:24.860 --> 08:25.860
我给它两个

08:25.860 --> 08:26.860
什么呢

08:26.860 --> 08:27.860
两个问号

08:27.860 --> 08:29.860
department detail

08:29.860 --> 08:30.860
这个应该是

08:30.860 --> 08:31.860
把它调整一下

08:31.860 --> 08:33.860
department detail

08:33.860 --> 08:34.860
下面的这个

08:34.860 --> 08:35.860
department later里面

08:35.860 --> 08:36.860
就保存了

08:36.860 --> 08:37.860
一个

08:37.860 --> 08:38.860
当前的用户信息

08:38.860 --> 08:39.860
那这个用户呢

08:39.860 --> 08:40.860
其实就是

08:40.860 --> 08:41.860
这个部门的领导

08:41.860 --> 08:42.860
对吧

08:42.860 --> 08:43.860
那这样呢

08:43.860 --> 08:44.860
都给它进行了

08:44.860 --> 08:45.860
一个渲染

08:45.860 --> 08:46.860
然后你看

08:46.860 --> 08:47.860
这个位言

08:47.860 --> 08:48.860
是不是也进去了

08:48.860 --> 08:49.860
对不对

08:49.860 --> 08:50.860
那现在上去之后

08:50.860 --> 08:51.860
那怎么办

08:51.860 --> 08:52.860
我们这里面

08:52.860 --> 08:53.860
还有一个表格

08:53.860 --> 08:54.860
表格呢

08:54.860 --> 08:55.860
我们也来实现一下

08:55.860 --> 08:56.860
这个表格呢

08:56.860 --> 08:58.860
是专门针对我们

08:58.860 --> 08:59.860
在这个

08:59.860 --> 09:01.860
详情展示的时候

09:01.860 --> 09:02.860
来进行渲染的

09:02.860 --> 09:03.860
那所以说呢

09:03.860 --> 09:04.860
我们在这个里面

09:04.860 --> 09:06.860
来给它进行一个编写

09:06.860 --> 09:07.860
因为是详情展示

09:07.860 --> 09:08.860
才进行渲染的

09:08.860 --> 09:09.860
而且呢

09:09.860 --> 09:10.860
它是一个描述的

09:10.860 --> 09:11.860
一个列表

09:11.860 --> 09:12.860
这个里面使用

09:12.860 --> 09:13.860
description

09:13.860 --> 09:14.860
来写一下

09:14.860 --> 09:16.860
那我们复制一套

09:16.860 --> 09:17.860
description

09:18.860 --> 09:19.860
ok

09:19.860 --> 09:20.860
那这个里面

09:20.860 --> 09:21.860
都有啥内容呢

09:21.860 --> 09:22.860
其实这个里面的内容

09:22.860 --> 09:23.860
它是一个

09:23.860 --> 09:24.860
整个的

09:24.860 --> 09:26.860
用户的一个表格

09:26.860 --> 09:27.860
我们呢

09:27.860 --> 09:28.860
就可以啊

09:28.860 --> 09:29.860
在这个里面

09:29.860 --> 09:30.860
我们直接的

09:30.860 --> 09:31.860
进行一个

09:31.860 --> 09:32.860
组件的调用

09:32.860 --> 09:33.860
比如说

09:33.860 --> 09:34.860
我们这里面

09:34.860 --> 09:35.860
订一个

09:35.860 --> 09:36.860
staff

09:36.860 --> 09:37.860
table

09:37.860 --> 09:38.860
创建这么一个

09:38.860 --> 09:39.860
staff table

09:39.860 --> 09:40.860
组件

09:41.860 --> 09:42.860
我们来把

09:42.860 --> 09:43.860
这个表格

09:43.860 --> 09:44.860
给实现一下

09:44.860 --> 09:45.860
创建一下

09:45.860 --> 09:47.860
staff table.js

09:47.860 --> 09:48.860
然后呢

09:49.860 --> 09:50.860
先写一下

09:50.860 --> 09:51.860
写一下之后

09:51.860 --> 09:52.860
把它给做一个

09:52.860 --> 09:53.860
引入

09:53.860 --> 09:55.860
从这个index.js里面

09:55.860 --> 09:56.860
引入

09:56.860 --> 09:57.860
它

09:57.860 --> 09:58.860
就是我们

09:58.860 --> 09:59.860
import

09:59.860 --> 10:00.860
staff table

10:00.860 --> 10:01.860
from

10:02.860 --> 10:03.860
网上一集

10:03.860 --> 10:04.860
是component

10:04.860 --> 10:05.860
下面的

10:06.860 --> 10:07.860
错了啊

10:07.860 --> 10:08.860
这个应该是

10:08.860 --> 10:09.860
component

10:11.860 --> 10:12.860
component

10:12.860 --> 10:13.860
下面的

10:13.860 --> 10:14.860
什么呢

10:14.860 --> 10:15.860
我们的这个

10:15.860 --> 10:16.860
staff table

10:16.860 --> 10:17.860
好了

10:17.860 --> 10:18.860
把它来进行一个

10:18.860 --> 10:19.860
使用啊

10:19.860 --> 10:20.860
使用这个

10:20.860 --> 10:21.860
staff table的时候

10:21.860 --> 10:22.860
那这个label值

10:22.860 --> 10:23.860
我也给它做一个

10:23.860 --> 10:24.860
更改

10:24.860 --> 10:25.860
这个应该叫

10:25.860 --> 10:26.860
部门员工

10:26.860 --> 10:27.860
也就是说

10:27.860 --> 10:28.860
你想进展示的时候

10:28.860 --> 10:29.860
这个部门里

10:29.860 --> 10:30.860
有几个员工

10:30.860 --> 10:31.860
你都给它展示一下

10:31.860 --> 10:32.860
是不是就可以了

10:32.860 --> 10:33.860
然后这个也不

10:33.860 --> 10:34.860
接什么柴药的粒子

10:34.860 --> 10:35.860
它不做任何操作

10:35.860 --> 10:36.860
只是做一个

10:36.860 --> 10:37.860
静静的展示

10:37.860 --> 10:38.860
对不对

10:38.860 --> 10:39.860
静静的展示

10:39.860 --> 10:40.860
我们这里面

10:40.860 --> 10:41.860
给它传递一个

10:41.860 --> 10:42.860
staff list的属性

10:44.860 --> 10:46.860
staff list的属性

10:46.860 --> 10:47.860
等于什么呢

10:47.860 --> 10:48.860
我们就等于

10:48.860 --> 10:49.860
department

10:50.860 --> 10:51.860
detail

10:51.860 --> 10:52.860
因为

10:52.860 --> 10:53.860
department

10:53.860 --> 10:54.860
detail

10:54.860 --> 10:55.860
下面是有一个什么

10:55.860 --> 10:56.860
有这个

10:56.860 --> 10:57.860
staff list的

10:57.860 --> 10:58.860
那我们直接

10:58.860 --> 10:59.860
对它进行一个

10:59.860 --> 11:00.860
展示就可以了

11:00.860 --> 11:01.860
咱们可以来看一下

11:01.860 --> 11:02.860
我们刷新

11:04.860 --> 11:05.860
刷新有抱错

11:05.860 --> 11:06.860
这个里面

11:06.860 --> 11:07.860
难道没引进来吗

11:07.860 --> 11:08.860
找一下路径

11:08.860 --> 11:09.860
点点杠

11:09.860 --> 11:10.860
compartment

11:10.860 --> 11:11.860
sorry

11:11.860 --> 11:12.860
点点杠

11:12.860 --> 11:13.860
就没有compartment

11:13.860 --> 11:14.860
我们直接是

11:14.860 --> 11:16.860
去使用staff table

11:16.860 --> 11:17.860
就可以

11:17.860 --> 11:18.860
咱们来看一下

11:18.860 --> 11:19.860
是否可行

11:19.860 --> 11:20.860
好了

11:20.860 --> 11:21.860
我们只要

11:21.860 --> 11:22.860
点击某一个的时候

11:22.860 --> 11:23.860
这个里面

11:23.860 --> 11:24.860
就是我们

11:24.860 --> 11:26.860
详情里面的内容

11:26.860 --> 11:27.860
详情里面内容

11:27.860 --> 11:28.860
这个时候

11:28.860 --> 11:29.860
就会有一个

11:29.860 --> 11:30.860
staff list

11:30.860 --> 11:32.860
staff list的里面

11:32.860 --> 11:33.860
保存了

11:33.860 --> 11:34.860
我们当前

11:34.860 --> 11:35.860
部门的一个信息

11:35.860 --> 11:36.860
然后部门

11:36.860 --> 11:37.860
员工的信息

11:37.860 --> 11:38.860
可以拿到

11:38.860 --> 11:39.860
这个部门员工的信息

11:39.860 --> 11:40.860
来进行

11:40.860 --> 11:41.860
相应的列表展示

11:41.860 --> 11:42.860
是不是就可以了

11:42.860 --> 11:43.860
非常的简单

11:44.860 --> 11:45.860
staff list的

11:45.860 --> 11:46.860
那我们第一步

11:46.860 --> 11:47.860
先来让它进行

11:47.860 --> 11:48.860
一个接收

11:48.860 --> 11:49.860
在这个里面

11:49.860 --> 11:50.860
我们

11:50.860 --> 11:51.860
定一下

11:51.860 --> 11:53.860
staff list的

11:53.860 --> 11:54.860
之后

11:54.860 --> 11:56.860
我们对它里面的

11:56.860 --> 11:57.860
结构

11:57.860 --> 11:59.860
先给它写一下

11:59.860 --> 12:00.860
写一下这个结构

12:00.860 --> 12:02.860
结构其实也非常简单

12:02.860 --> 12:03.860
首先来说

12:03.860 --> 12:04.860
我们这个里面

12:04.860 --> 12:05.860
最主要的

12:05.860 --> 12:06.860
一个内容就是

12:06.860 --> 12:07.860
比如说

12:07.860 --> 12:08.860
我们看这个完成

12:08.860 --> 12:10.860
当这个员工展示的时候

12:10.860 --> 12:11.860
sorry

12:11.860 --> 12:12.860
应该是部门

12:12.860 --> 12:13.860
部门展示的时候

12:13.860 --> 12:14.860
这里面

12:14.860 --> 12:15.860
会有一些字段

12:15.860 --> 12:16.860
比如说姓名

12:16.860 --> 12:17.860
年龄

12:17.860 --> 12:18.860
习惯

12:18.860 --> 12:19.860
还有联系电话

12:19.860 --> 12:20.860
头像

12:20.860 --> 12:21.860
主要就是这些

12:21.860 --> 12:22.860
clamps的一个定义

12:22.860 --> 12:23.860
至于其他的

12:23.860 --> 12:24.860
倒是没有什么

12:24.860 --> 12:26.860
特别复杂的处理

12:26.860 --> 12:27.860
这个我们知道一下

12:27.860 --> 12:29.860
那我们就来定一下

12:29.860 --> 12:30.860
首先使用table

12:30.860 --> 12:31.860
那使用table

12:31.860 --> 12:33.860
你给它做一个引入

12:33.860 --> 12:35.860
import table

12:39.330 --> 12:41.330
从我们的安德地里面

12:41.330 --> 12:42.330
给它进行一个

12:42.330 --> 12:43.330
获取安德地

12:43.330 --> 12:44.330
ok

12:44.330 --> 12:45.330
那这个里面

12:45.330 --> 12:46.330
咱也别使用dnv了

12:46.330 --> 12:47.330
对吧

12:47.330 --> 12:48.330
我们这个时候

12:48.330 --> 12:49.330
就使用一个table

12:49.330 --> 12:50.330
作为它的容器

12:50.330 --> 12:53.330
这里面table

12:53.330 --> 12:54.330
好的

12:54.330 --> 12:55.330
开始和b盒都在一起

12:55.330 --> 12:57.330
然后我们先给它一些

12:57.330 --> 12:58.330
相应的属性

12:58.330 --> 13:00.330
肯定第一个

13:00.330 --> 13:01.330
是data source

13:01.330 --> 13:02.330
对吧

13:02.330 --> 13:03.330
数据加载的一个源

13:03.330 --> 13:04.330
那我们就使用

13:04.330 --> 13:05.330
staff list的

13:05.330 --> 13:06.330
蓝金加载

13:06.330 --> 13:07.330
这是第一个

13:07.330 --> 13:09.330
我们有这个columns

13:09.330 --> 13:11.330
columns属性

13:11.330 --> 13:12.330
那我们这个里面

13:12.330 --> 13:13.330
给它指定一个什么

13:13.330 --> 13:14.330
我们这里面

13:14.330 --> 13:15.330
定一个columns

13:15.330 --> 13:16.330
然后现在还没有

13:16.330 --> 13:17.330
但是不要紧

13:17.330 --> 13:18.330
我们这里面

13:18.330 --> 13:20.330
可以创建一个

13:20.330 --> 13:23.330
couns它columns

13:23.330 --> 13:25.330
columns等于一个什么

13:25.330 --> 13:28.330
等于一个对象

13:28.330 --> 13:29.330
然后呢

13:29.330 --> 13:30.330
我们在这个对象里面

13:30.330 --> 13:31.330
就可以给它

13:31.330 --> 13:33.330
进行一个值的添加了

13:33.330 --> 13:34.330
那columns里面

13:34.330 --> 13:35.330
都有什么呢

13:35.330 --> 13:36.330
首先第一个

13:36.330 --> 13:37.330
肯定得展示

13:37.330 --> 13:38.330
一个员工的姓名

13:38.330 --> 13:39.330
对不对

13:39.330 --> 13:40.330
那我们这里面

13:40.330 --> 13:41.330
就是

13:41.330 --> 13:42.330
应该是一个数组

13:42.330 --> 13:43.330
这不是一个对象

13:43.330 --> 13:44.330
我们改变一下

13:44.330 --> 13:46.330
是个数组

13:46.330 --> 13:48.330
因为是columns嘛

13:48.330 --> 13:50.330
先写第一个对象

13:50.330 --> 13:52.330
那title

13:52.330 --> 13:54.330
title展示的时候

13:54.330 --> 13:55.330
这个叫姓名

13:55.330 --> 13:56.330
对吧

13:56.330 --> 13:57.330
然后呢

13:57.330 --> 13:58.330
我们给它一个

13:58.330 --> 13:59.330
data index

13:59.330 --> 14:00.330
咱们这里面写一下

14:00.330 --> 14:03.330
data index

14:03.330 --> 14:04.330
data index

14:04.330 --> 14:08.900
这个叫 user name

14:08.900 --> 14:09.900
中间加一个

14:09.900 --> 14:10.900
dote号之后呢

14:10.900 --> 14:11.900
我们这个

14:11.900 --> 14:12.900
让它居中展示

14:12.900 --> 14:13.900
给它一个

14:13.900 --> 14:15.900
align

14:15.900 --> 14:16.900
align

14:16.900 --> 14:17.900
给它一个center

14:17.900 --> 14:18.900
好吧

14:18.900 --> 14:19.900
这个就定义完

14:19.900 --> 14:20.900
第一个了

14:20.900 --> 14:21.900
第一个定义完之后

14:21.900 --> 14:22.900
那我们第二个呢

14:22.900 --> 14:24.900
就是姓名

14:24.900 --> 14:25.900
这里面是姓别

14:25.900 --> 14:26.900
对吧

14:26.900 --> 14:27.900
姓别

14:27.900 --> 14:28.900
然后

14:28.900 --> 14:29.900
data index

14:29.900 --> 14:30.900
我们直接的

14:30.900 --> 14:31.900
这里面有一个

14:31.900 --> 14:32.900
真的

14:32.900 --> 14:33.900
然后呢

14:33.900 --> 14:34.900
这些都是一些

14:34.900 --> 14:35.900
比较基本的操作

14:35.900 --> 14:36.900
那这个怎么办呢

14:36.900 --> 14:37.900
我们可以先写

14:37.900 --> 14:38.900
一个到两个

14:38.900 --> 14:39.900
剩下的呢

14:39.900 --> 14:40.900
我们直接复制粘贴

14:40.900 --> 14:41.900
过来就OK了

14:41.900 --> 14:42.900
对吧

14:42.900 --> 14:43.900
怎么来进行复制粘贴呢

14:43.900 --> 14:44.900
我在这个里面

14:44.900 --> 14:46.900
已经准备好了

14:46.900 --> 14:47.900
一个

14:47.900 --> 14:48.900
我们部门员工的

14:48.900 --> 14:49.900
一个columns集合

14:49.900 --> 14:50.900
那我们直接

14:50.900 --> 14:51.900
拿过来这个

14:51.900 --> 14:52.900
进行一个使用

14:52.900 --> 14:53.900
就可以了

14:53.900 --> 14:54.900
我们把它

14:54.900 --> 14:55.900
给做一个复制

14:55.900 --> 14:56.900
之后呢

14:56.900 --> 14:57.900
我们把这个columns

14:57.900 --> 14:58.900
原来的干掉

14:58.900 --> 14:59.900
干掉之后

14:59.900 --> 15:00.900
这里面

15:00.900 --> 15:01.900
应该是缺少一个

15:01.900 --> 15:02.900
标签

15:02.900 --> 15:03.900
我们给它添加一下

15:03.900 --> 15:04.900
这里面

15:04.900 --> 15:05.900
还得定一下

15:05.900 --> 15:07.900
columns的columns

15:07.900 --> 15:09.900
columns等于

15:09.900 --> 15:10.900
我们写一个开始

15:10.900 --> 15:11.900
这样

15:11.900 --> 15:12.900
是不是就好了

15:12.900 --> 15:13.900
然后这里面

15:13.900 --> 15:14.900
是需要一些指的

15:14.900 --> 15:15.900
比如说mapdata

15:15.900 --> 15:16.900
formapdata

15:16.900 --> 15:17.900
那这个咱们之前

15:17.900 --> 15:18.900
都使用过

15:18.900 --> 15:19.900
那我直接的

15:19.900 --> 15:20.900
在这个里面

15:20.900 --> 15:21.900
做一个导入

15:21.900 --> 15:22.900
就可以了

15:22.900 --> 15:23.900
mapdata

15:23.900 --> 15:24.900
from

15:24.900 --> 15:26.900
我们的utils

15:26.900 --> 15:27.900
utils

15:27.900 --> 15:28.900
下面的mapdata

15:28.900 --> 15:29.900
那这是

15:29.900 --> 15:30.900
第一个

15:30.900 --> 15:32.900
咱们之前也使用过

15:32.900 --> 15:33.900
我们这个formapdata

15:33.900 --> 15:34.900
可以看一下

15:34.900 --> 15:35.900
在我们的utils

15:35.900 --> 15:37.900
下面有一个formapdata

15:37.900 --> 15:38.900
ins

15:38.900 --> 15:39.900
那这里面就是

15:39.900 --> 15:40.900
有这个formapdata

15:40.900 --> 15:41.900
格式化

15:41.900 --> 15:42.900
我们的一个年

15:42.900 --> 15:43.900
对不对

15:43.900 --> 15:44.900
也就是说

15:44.900 --> 15:45.900
从生日里面

15:45.900 --> 15:46.900
获取年龄

15:46.900 --> 15:47.900
那我们这里面

15:47.900 --> 15:48.900
写一下formapdata

15:48.900 --> 15:49.900
from

15:49.900 --> 15:50.900
从我们的utils

15:50.900 --> 15:52.900
下面的一个

15:52.900 --> 15:53.900
formapdata

15:53.900 --> 15:54.900
里面

15:54.900 --> 15:56.900
来进行一个获取

15:56.900 --> 15:57.900
好的

15:57.900 --> 15:58.900
这两个

15:58.900 --> 15:59.900
都处理完成之后

15:59.900 --> 16:00.900
现在clumps

16:00.900 --> 16:02.900
应该是有这个纸的

16:02.900 --> 16:03.900
对吧

16:03.900 --> 16:04.900
那我们来看一下

16:04.900 --> 16:05.900
这个clumps

16:05.900 --> 16:07.900
clumps的clumps

16:07.900 --> 16:09.900
感觉没什么问题

16:09.900 --> 16:10.900
然后呢

16:10.900 --> 16:11.900
我们这个定义完成之后

16:11.900 --> 16:12.900
现在看它有没有抱错

16:12.900 --> 16:13.900
如果说有抱错

16:13.900 --> 16:14.900
那就尴尬了

16:14.900 --> 16:15.900
没有抱错

16:15.900 --> 16:16.900
现在我们基本上

16:16.900 --> 16:17.900
就成功了第一步

16:18.900 --> 16:19.900
纸

16:19.900 --> 16:20.900
不错都已经上去了

16:20.900 --> 16:21.900
上去之后

16:21.900 --> 16:22.900
这里面说什么

16:22.900 --> 16:23.900
要一个

16:23.900 --> 16:24.900
什么书的k

16:24.900 --> 16:25.900
那这就啥意思呢

16:25.900 --> 16:26.900
就是说你给它

16:26.900 --> 16:27.900
一个唯一的k纸

16:27.900 --> 16:28.900
现在这个唯一k纸

16:28.900 --> 16:29.900
你没给的

16:29.900 --> 16:30.900
对吧

16:30.900 --> 16:32.900
这里面加一个小括号

16:32.900 --> 16:34.900
给它回车一下

16:34.900 --> 16:35.900
之后呢

16:35.900 --> 16:36.900
我们这个淡调

16:36.900 --> 16:37.900
好了

16:37.900 --> 16:38.900
加一个小括号

16:38.900 --> 16:39.900
那我们继续的来写

16:39.900 --> 16:41.900
clumps定义完成之后

16:41.900 --> 16:42.900
那这个时候呢

16:42.900 --> 16:44.900
我们给它加一个rowk

16:46.900 --> 16:47.900
rowk

16:47.900 --> 16:49.900
等于我们一个对象

16:49.900 --> 16:50.900
那这里面

16:50.900 --> 16:51.900
我们有这个

16:51.900 --> 16:52.900
每一行的记录

16:52.900 --> 16:53.900
每一行记录里面

16:53.900 --> 16:54.900
都有一个

16:54.900 --> 16:55.900
recode的点

16:55.900 --> 16:56.900
下发现id

16:57.900 --> 16:58.900
我们把这个给

16:58.900 --> 16:59.900
做一个

16:59.900 --> 17:00.900
输出出去

17:00.900 --> 17:01.900
是不是就可以了

17:01.900 --> 17:02.900
对吧

17:02.900 --> 17:03.900
之后呢

17:03.900 --> 17:04.900
我们这个里面

17:04.900 --> 17:05.900
再给它一点样式

17:05.900 --> 17:06.900
那我们就添加一个

17:06.900 --> 17:08.900
class name属性

17:08.900 --> 17:09.900
class name属性

17:09.900 --> 17:10.900
等于什么呢

17:10.900 --> 17:11.900
department

17:12.900 --> 17:14.900
这个里面写一个

17:14.900 --> 17:15.900
字符创

17:15.900 --> 17:18.400
department

17:18.400 --> 17:19.400
gang

17:19.400 --> 17:20.400
我们的这个

17:20.400 --> 17:21.400
staff

17:21.400 --> 17:22.400
ganglist

17:22.400 --> 17:23.400
gangcontainer

17:23.400 --> 17:24.400
好了

17:24.400 --> 17:25.400
这个添加完成

17:25.400 --> 17:26.400
然后或者是

17:26.400 --> 17:27.400
staff list

17:27.400 --> 17:28.400
wrapper

17:28.400 --> 17:30.400
为什么要给它指定了

17:30.400 --> 17:31.400
因为这个样式

17:31.400 --> 17:32.400
我都提前已经写好了

17:32.400 --> 17:33.400
那你直接拿回去用

17:33.400 --> 17:34.400
就可以

17:34.400 --> 17:35.400
分页呢

17:35.400 --> 17:36.400
我们这个不需要

17:36.400 --> 17:37.400
所以说

17:37.400 --> 17:38.400
我们page

17:38.400 --> 17:39.400
给它一个

17:39.400 --> 17:40.400
false之后呢

17:40.400 --> 17:41.400
align

17:41.400 --> 17:42.400
让它去

17:42.400 --> 17:44.400
等于一个center

17:45.400 --> 17:46.400
之后

17:46.400 --> 17:48.400
我们给它加一个边框

17:48.400 --> 17:49.400
那间框

17:49.400 --> 17:50.400
给它加一个

17:50.400 --> 17:51.400
border的属性

17:52.400 --> 17:53.400
好了

17:53.400 --> 17:54.400
现在基本上

17:54.400 --> 17:55.400
感觉上

17:55.400 --> 17:57.400
应该是不会有包错了

17:57.400 --> 17:58.400
然后这个

17:58.400 --> 18:00.400
现在得给它做成一个什么

18:00.400 --> 18:02.400
做成一个可滚动的表格对不对

18:02.400 --> 18:03.400
那在目前来讲

18:03.400 --> 18:04.400
它也不算一个

18:04.400 --> 18:05.400
可滚动的表格

18:05.400 --> 18:06.400
那这个怎么办呢

18:06.400 --> 18:08.400
我们就在这个

18:08.400 --> 18:09.400
layout list里面

18:09.400 --> 18:11.400
给它进行一个

18:11.400 --> 18:15.800
样式的调整就ok了

18:15.800 --> 18:16.800
样式处理呢

18:16.800 --> 18:18.800
也是一些比较简单的样式

18:18.800 --> 18:19.800
那这个里面呢

18:19.800 --> 18:20.800
我提前已经给

18:20.800 --> 18:21.800
同学们准备好了

18:21.800 --> 18:23.800
我们可以拿到这个样式之后

18:23.800 --> 18:25.800
在我们的layout里面

18:25.800 --> 18:26.800
给它进行一个

18:26.800 --> 18:28.800
替换就ok了

18:28.800 --> 18:30.800
找到我们背的layout.less

18:30.800 --> 18:31.800
那在这个里面替换一下

18:31.800 --> 18:32.800
之后呢

18:32.800 --> 18:33.800
我们一看

18:33.800 --> 18:34.800
这个呢就变成了一个

18:34.800 --> 18:35.800
滚动表格

18:35.800 --> 18:36.800
其实这个制作

18:36.800 --> 18:38.800
还是相对比较简单的

18:38.800 --> 18:40.800
我们对它的这个制作

18:40.800 --> 18:41.800
没有什么

18:41.800 --> 18:43.800
特别复杂的这个样式处理

18:43.800 --> 18:45.800
就是一些中规中矩的样式

18:45.800 --> 18:46.800
你给它添加进去

18:46.800 --> 18:47.800
就ok了

18:47.800 --> 18:48.800
好的

18:48.800 --> 18:49.800
那这个就是我们的一个

18:49.800 --> 18:50.800
表格的制作

18:50.800 --> 18:51.800
然后呢

18:51.800 --> 18:52.800
我们再回到

18:52.800 --> 18:54.800
我们的这个index

18:55.800 --> 18:57.800
里面对这个表格

18:57.800 --> 18:59.800
咱们再继续来看一下

18:59.800 --> 19:01.800
表格刚才我们是使用了一个

19:01.800 --> 19:03.800
staff table对不对

19:03.800 --> 19:04.800
那这个staff table

19:04.800 --> 19:06.800
其实我们在使用的时候

19:06.800 --> 19:07.800
现在呢

19:07.800 --> 19:08.800
我们也没做任何处理

19:08.800 --> 19:09.800
其实这个呢

19:09.800 --> 19:10.800
如果说在新增的时候

19:10.800 --> 19:12.800
它是不进行展示的对不对

19:12.800 --> 19:13.800
所以说呢这个里面

19:13.800 --> 19:14.800
我们要根据一个条件

19:14.800 --> 19:16.800
来判断它当前

19:16.800 --> 19:17.800
是否需要展示

19:17.800 --> 19:19.800
那这个条件是什么呢

19:19.800 --> 19:20.800
我们model type

19:20.800 --> 19:21.800
如果说你要是

19:21.800 --> 19:23.800
等于等于

19:23.800 --> 19:25.800
你是不是再来进行

19:25.800 --> 19:26.800
这个展示就可以

19:26.800 --> 19:27.800
对吧

19:27.800 --> 19:28.800
其他比如说

19:28.800 --> 19:29.800
你要是新增的时候

19:29.800 --> 19:31.800
那这个我就不需要展示了

19:31.800 --> 19:33.800
这个呢就是我们的一个处理

19:33.800 --> 19:34.800
也就是说

19:34.800 --> 19:36.800
根据条件来进行

19:36.800 --> 19:37.800
我们当前的

19:37.800 --> 19:39.800
这个员工列表的一个展示

19:39.800 --> 19:40.800
咱们可以来试一下

19:40.800 --> 19:41.800
现在呢

19:41.800 --> 19:42.800
是我们打开

19:42.800 --> 19:43.800
随便打开一个商品

19:43.800 --> 19:44.800
不是商品不是

19:44.800 --> 19:45.800
还没有人

19:45.800 --> 19:46.800
是不是

19:46.800 --> 19:48.800
这是原来的一个老数据啊

19:48.800 --> 19:49.800
好吧

19:49.800 --> 19:50.800
那我们就看一个新

19:50.800 --> 19:51.800
研发部有没有人

19:51.800 --> 19:52.800
那先来看有数据的吧

19:52.800 --> 19:53.800
比如说这个数据里面

19:53.800 --> 19:55.800
是有部门员工的

19:55.800 --> 19:56.800
那如果说

19:56.800 --> 19:58.800
我们点开创建的时候

19:58.800 --> 20:00.800
它呢是不应该进行展示的

20:00.800 --> 20:02.800
这个就是我们的一个

20:02.800 --> 20:04.800
优化的一个处理

20:04.800 --> 20:05.800
好的

20:05.800 --> 20:06.800
那我们继续来

20:06.800 --> 20:07.800
下一个任务

20:07.800 --> 20:08.800
下一个任务是什么呢

20:08.800 --> 20:10.800
就是我们点开之后

20:10.800 --> 20:11.800
那这个里面

20:11.800 --> 20:12.800
是不是可以进行

20:12.800 --> 20:13.800
值的一个修改

20:13.800 --> 20:14.800
也就是说

20:14.800 --> 20:15.800
那这个时候

20:15.800 --> 20:16.800
我们就可以进行一个

20:16.800 --> 20:18.800
数据的一个更改

20:18.800 --> 20:20.800
回到我们的这个代码里面

20:21.800 --> 20:22.800
src

20:22.800 --> 20:23.800
配置

20:23.800 --> 20:24.800
下面department

20:24.800 --> 20:25.800
修改的处发

20:25.800 --> 20:27.800
也是在这个form里面啊

20:27.800 --> 20:28.800
那我们依次的

20:28.800 --> 20:29.800
来找一下

20:29.800 --> 20:31.800
每一个表单项啊

20:31.800 --> 20:32.800
因为每一项呢

20:32.800 --> 20:33.800
它都是可以修改的

20:33.800 --> 20:34.800
所以说

20:34.800 --> 20:36.800
我们依次的来处发它一下

20:36.800 --> 20:37.800
首先

20:37.800 --> 20:38.800
第一个我们在这个里面

20:38.800 --> 20:39.800
找到一个什么呢

20:39.800 --> 20:40.800
第一个描述信息

20:40.800 --> 20:42.800
就是我们的部门名称

20:42.800 --> 20:43.800
部门名称的时候

20:43.800 --> 20:45.800
这里面有一个input

20:45.800 --> 20:46.800
那这个input

20:46.800 --> 20:48.800
之前我们写了一个什么

20:48.800 --> 20:49.800
onplour

20:49.800 --> 20:50.800
在失去焦点的时候

20:50.800 --> 20:51.800
是不是你这个里面

20:51.800 --> 20:52.800
要做事啊对吧

20:52.800 --> 20:53.800
那我们要做什么事呢

20:53.800 --> 20:55.800
其实我们这个

20:55.800 --> 20:57.800
如果他在失去焦点的时候

20:57.800 --> 20:58.800
并且呢

20:58.800 --> 21:00.800
我们当前的这个类型

21:00.800 --> 21:02.800
为这个详情查看的时候

21:02.800 --> 21:03.800
也就是说在修改的

21:03.800 --> 21:05.800
模特态框里面的时候

21:05.800 --> 21:06.800
那我们这时候

21:06.800 --> 21:07.800
就可以进行一个

21:07.800 --> 21:09.800
department name的一个更改的

21:09.800 --> 21:10.800
对吧

21:10.800 --> 21:11.800
那这个呢

21:11.800 --> 21:12.800
就是我们的一个需求啊

21:12.800 --> 21:13.800
然后呢

21:13.800 --> 21:14.800
我们这里面判断一下

21:14.800 --> 21:15.800
如果说

21:15.800 --> 21:16.800
他要model type

21:16.800 --> 21:18.800
假如要是不等于update

21:18.800 --> 21:19.800
在失去焦点的时候

21:19.800 --> 21:20.800
什么也不做对吧

21:20.800 --> 21:23.800
那就是model type等于等于update

21:23.800 --> 21:24.800
然后呢并且

21:24.800 --> 21:26.800
我们让他执行一个方法

21:26.800 --> 21:29.800
叫update detail

21:29.800 --> 21:36.220
或者是update department

21:36.220 --> 21:38.220
update department

21:38.220 --> 21:40.220
就定义这么一个方法

21:40.220 --> 21:42.220
update department的时候

21:42.220 --> 21:43.220
你去想修改什么呢

21:43.220 --> 21:44.220
这个里面

21:44.220 --> 21:45.220
我们是不是还得

21:45.220 --> 21:46.220
给他传一个值

21:46.220 --> 21:48.220
告诉他我们修改的类型啊

21:48.220 --> 21:50.220
type给他一个type值

21:50.220 --> 21:51.220
这个我们就是

21:51.220 --> 21:53.220
修改department name

21:53.220 --> 21:55.220
department name

21:55.220 --> 21:56.220
ok

21:56.220 --> 21:58.220
这个就是我们需要修改的值

21:58.220 --> 21:59.220
然后呢

21:59.220 --> 22:00.220
我们就在这个里面

22:00.220 --> 22:02.220
来把这个update detail

22:02.220 --> 22:04.220
来给他做一个处理

22:04.220 --> 22:05.220
update department

22:05.220 --> 22:09.220
那这个就是修改部门信息

22:09.220 --> 22:12.220
修改部门信息

22:12.220 --> 22:13.220
ok

22:13.220 --> 22:14.220
定义一下Const

22:14.220 --> 22:16.220
update department

22:16.220 --> 22:18.220
等于一个

22:18.220 --> 22:20.220
这里面有一个对象

22:20.220 --> 22:22.220
那我们给他解构出来

22:22.220 --> 22:24.220
然后对他进行一个使用

22:24.220 --> 22:25.220
使用的时候

22:25.220 --> 22:26.220
其实这里面值呢

22:26.220 --> 22:27.220
我们之后啊

22:27.220 --> 22:29.220
传可能会传很多

22:29.220 --> 22:30.220
我们现在先给他一个什么

22:30.220 --> 22:32.220
给他一个简单的值

22:32.220 --> 22:34.220
这里面是一个type

22:34.220 --> 22:35.220
给他解构出来

22:35.220 --> 22:38.220
然后给他加一个quad

22:38.220 --> 22:39.220
好了

22:39.220 --> 22:40.220
那咱们来处理一下

22:40.220 --> 22:41.220
那这个

22:41.220 --> 22:43.220
现在我给的传update的Value

22:43.220 --> 22:44.220
没给的传

22:44.220 --> 22:46.220
没给的传update的Value

22:46.220 --> 22:47.220
你说他怎么来过去

22:47.220 --> 22:48.220
其实非常简单

22:48.220 --> 22:50.220
我们给他传department的name

22:50.220 --> 22:51.220
那我们这里面啊

22:51.220 --> 22:52.220
来判断一下

22:52.220 --> 22:53.220
但是呢

22:53.220 --> 22:54.220
有的呢

22:54.220 --> 22:56.220
我们还会给他传递updateValue的

22:56.220 --> 22:58.220
什么时候给他传updateValue

22:58.220 --> 22:59.220
那你比如说

22:59.220 --> 23:01.220
我们在这个

23:01.220 --> 23:03.220
我们子部门这个处理的时候

23:03.220 --> 23:04.220
那比如说

23:04.220 --> 23:05.220
我们修改哪一个部门

23:05.220 --> 23:06.220
点击确定

23:06.220 --> 23:08.220
那有可能是给他传updateValue

23:08.220 --> 23:10.220
这个时候我们要区分一下

23:10.220 --> 23:11.220
所以说呢

23:11.220 --> 23:12.220
我们这里面啊

23:12.220 --> 23:13.220
除了这个type

23:13.220 --> 23:15.220
可能我们还会接收一个什么呢

23:15.220 --> 23:17.220
叫updateValue

23:17.220 --> 23:19.220
然后我们在这个里面判断一下

23:19.220 --> 23:20.220
如果说

23:20.220 --> 23:22.220
没有这个updateValue的话

23:22.220 --> 23:23.220
我们怎么办呢

23:23.220 --> 23:25.220
我们把这个updateValue

23:25.220 --> 23:27.220
给他进行一个什么复职

23:27.220 --> 23:28.220
复职为什么呢

23:28.220 --> 23:29.220
因为我们有form

23:29.220 --> 23:30.220
对不对

23:30.220 --> 23:31.220
我们就可以通过

23:31.220 --> 23:35.220
form.getValue的Value

23:35.220 --> 23:37.220
我们使用getValue的Value

23:37.220 --> 23:39.220
获取一个

23:39.220 --> 23:40.220
根据这个Type类型

23:40.220 --> 23:41.220
那你是不是就获取到了

23:41.220 --> 23:43.220
获取到这个职之后

23:43.220 --> 23:45.220
那我们现代是不是

23:45.220 --> 23:48.220
就可以来进行一个什么呢

23:48.220 --> 23:49.220
进行一个处理了

23:49.220 --> 23:50.220
对不对

23:50.220 --> 23:51.220
那进行处理的时候

23:51.220 --> 23:52.220
这里面我们还得判断一下

23:52.220 --> 23:54.220
如果说新就职

23:54.220 --> 23:55.220
他相同的话

23:55.220 --> 23:56.220
那这个时候我们是不是

23:56.220 --> 23:58.220
就不做事情了

23:58.220 --> 23:59.220
对不对

23:59.220 --> 24:00.220
那不做事情怎么办呢

24:00.220 --> 24:01.220
我们直接在这个里面

24:01.220 --> 24:03.220
如果说update

24:03.220 --> 24:04.220
哎呀

24:04.220 --> 24:05.220
这里面啊

24:05.220 --> 24:07.220
if我们的updateValue

24:07.220 --> 24:09.220
如果说他要是等于等于

24:09.220 --> 24:11.220
我们department

24:11.220 --> 24:13.220
然后detail

24:13.220 --> 24:14.220
这里面应该是

24:14.220 --> 24:16.220
他们的detail

24:16.220 --> 24:17.220
下面的什么呢

24:17.220 --> 24:19.220
我们直接这里面有一个Type

24:19.220 --> 24:20.220
那也就是说

24:20.220 --> 24:21.220
或者说是什么

24:21.220 --> 24:24.220
或者说我们是这个updateValue

24:24.220 --> 24:25.220
对吧

24:25.220 --> 24:26.220
当然了

24:26.220 --> 24:27.220
这个updateValue

24:27.220 --> 24:28.220
现在进不来啊

24:28.220 --> 24:29.220
因为什么呢

24:29.220 --> 24:31.220
因为他是在这个条件里面

24:31.220 --> 24:32.220
给他拦住了

24:32.220 --> 24:33.220
对不对

24:33.220 --> 24:34.220
那我们直接就判断

24:34.220 --> 24:35.220
这种情况就可以了

24:35.220 --> 24:36.220
那我们就给他说一天掉

24:36.220 --> 24:37.220
也就是说

24:37.220 --> 24:38.220
其实这个判断是什么

24:38.220 --> 24:40.220
新就职是否相等

24:40.220 --> 24:41.220
对吧

24:41.220 --> 24:42.220
如果说相等

24:42.220 --> 24:43.220
那你不做任何修改

24:43.220 --> 24:45.220
判断新就职

24:46.220 --> 24:48.220
是否相等

24:50.220 --> 24:51.220
当你这些都处理完成之后

24:51.220 --> 24:52.220
那你现在是不是

24:52.220 --> 24:53.220
就可以去修改了

24:53.220 --> 24:54.220
那我们这里面就是

24:54.220 --> 24:56.220
dates patch type

24:56.220 --> 24:58.220
修改修改应该是什么

24:58.220 --> 25:00.220
我们的一个明明空间

25:00.220 --> 25:01.220
是department的

25:01.220 --> 25:02.220
department的下面

25:02.220 --> 25:04.220
我们可以定一个update

25:04.220 --> 25:06.220
department detail

25:07.220 --> 25:08.220
好吧

25:08.220 --> 25:09.220
定于这么一个职

25:09.220 --> 25:10.220
之后呢

25:10.220 --> 25:12.220
我们这个里面再传

25:12.220 --> 25:13.220
这里面传什么呢

25:13.220 --> 25:14.220
payload

25:14.220 --> 25:15.220
payload的

25:15.220 --> 25:16.220
首先第一个

25:16.220 --> 25:17.220
你修改的时候

25:17.220 --> 25:18.220
得给他传ID

25:18.220 --> 25:19.220
那你说这些职

25:19.220 --> 25:20.220
从哪来的

25:20.220 --> 25:21.220
我们可以看一下

25:21.220 --> 25:22.220
这个里面呢

25:22.220 --> 25:23.220
有一个修改指定部门

25:23.220 --> 25:25.220
他需要你传递一个什么

25:25.220 --> 25:26.220
他的这个请求方式

25:26.220 --> 25:27.220
是poop的请求

25:27.220 --> 25:28.220
比较特殊

25:28.220 --> 25:29.220
然后这里面

25:29.220 --> 25:31.220
我们parameters参数

25:31.220 --> 25:32.220
要给传递一个ID

25:32.220 --> 25:33.220
并且呢

25:33.220 --> 25:34.220
我们这里面

25:34.220 --> 25:35.220
还有包队值

25:35.220 --> 25:36.220
包队值

25:36.220 --> 25:38.220
比如说这个修改的类型

25:38.220 --> 25:40.220
还有这个update的外料

25:40.220 --> 25:41.220
最后一个呢

25:41.220 --> 25:43.220
是否为删除子部门

25:43.220 --> 25:44.220
这个是什么意思啊

25:44.220 --> 25:45.220
因为我们后段呢

25:45.220 --> 25:47.220
要一个描述信息

25:47.220 --> 25:49.220
如果说你要是在这个

25:49.220 --> 25:50.220
详情里面

25:50.220 --> 25:52.220
假如说点击一个新的部门

25:52.220 --> 25:54.220
我新登一个大数据产品部

25:54.220 --> 25:55.220
我添加一下

25:55.220 --> 25:56.220
当添加完成之后

25:56.220 --> 25:57.220
那这个时候你是不是

25:57.220 --> 25:59.220
还有可能我解除子部门关联

25:59.220 --> 26:01.220
这个就是一个删除操作对不对

26:01.220 --> 26:02.220
删除操作呢

26:02.220 --> 26:03.220
这个时候需要你传递

26:03.220 --> 26:04.220
一个特殊的指

26:04.220 --> 26:06.220
是否是在进行

26:06.220 --> 26:08.220
对这个子部门的一个删除

26:08.220 --> 26:09.220
所以说这里面

26:09.220 --> 26:10.220
你除了这几个值之外

26:10.220 --> 26:13.220
还要添加一个ease delete

26:13.220 --> 26:15.220
那我们现在肯定不是

26:15.220 --> 26:17.220
对这个删除操作对不对

26:17.220 --> 26:19.220
不是对子部门删除操作

26:19.220 --> 26:20.220
那我们出手话的时候

26:20.220 --> 26:21.220
给一个ease delete

26:21.220 --> 26:23.220
为false对吧

26:23.220 --> 26:24.220
ease delete

26:24.220 --> 26:25.220
然后这个里面

26:25.220 --> 26:27.220
我们依次的就来写

26:27.220 --> 26:28.220
首先是id

26:28.220 --> 26:29.220
id呢

26:29.220 --> 26:30.220
我们第一个就应该是

26:30.220 --> 26:32.220
department detail

26:34.220 --> 26:36.220
department detail

26:36.220 --> 26:38.220
这个应该是取他的点

26:39.220 --> 26:41.220
这是不是第一个id只有了对吧

26:41.220 --> 26:43.220
然后我们把他的这个

26:43.220 --> 26:45.220
tab类型给他传递过去

26:45.220 --> 26:46.220
传递过去之后

26:46.220 --> 26:48.220
再把这个update的Value

26:48.220 --> 26:49.220
因为我们已经定义好了

26:49.220 --> 26:51.220
最后呢是传递一个

26:52.220 --> 26:55.220
最后我们再传递一个ease delete

26:55.220 --> 26:56.220
咱们在这里面写一下

26:56.220 --> 26:57.220
ease delete

26:57.220 --> 26:59.220
好你把这些定义好之后

26:59.220 --> 27:01.220
你想在这个迪瓦的

27:01.220 --> 27:02.220
这个状态管理里面

27:02.220 --> 27:04.220
来做这个处理对吧

27:04.220 --> 27:06.220
那我们直接就找到model

27:06.220 --> 27:07.220
model是新增

27:07.220 --> 27:08.220
获取部门列表

27:08.220 --> 27:10.220
获取部门详情

27:10.220 --> 27:11.220
然后呢

27:11.220 --> 27:13.220
我们这个里面接下来继续写

27:13.220 --> 27:15.220
这个应该是叫我们的修改

27:15.220 --> 27:17.220
部门信息

27:17.220 --> 27:18.220
然后修改部门信息

27:18.220 --> 27:19.220
也是一个

27:19.220 --> 27:20.220
January的函数

27:20.220 --> 27:22.220
这样我们复制一套

27:22.220 --> 27:23.220
到这个里面

27:23.220 --> 27:24.220
然后给他调整一下

27:24.220 --> 27:25.220
就可以了

27:25.220 --> 27:26.220
过来过来过来

27:26.220 --> 27:27.220
好吧

27:27.220 --> 27:28.220
把它给干掉

27:28.220 --> 27:29.220
之后呢

27:29.220 --> 27:30.220
这个值拿过来

27:31.220 --> 27:32.220
从这个里面

27:32.220 --> 27:34.220
我们update

27:34.220 --> 27:35.220
department

27:36.220 --> 27:37.220
detail对吧

27:37.220 --> 27:38.220
update

27:38.220 --> 27:39.220
department

27:39.220 --> 27:40.220
detail

27:40.220 --> 27:41.220
那这个时候呢

27:41.220 --> 27:42.220
我们就把这个里面的内容

27:42.220 --> 27:44.220
给他做一个调整就可以了

27:44.220 --> 27:46.220
调整都调整哪些内容呢

27:46.220 --> 27:47.220
首先这个

27:47.220 --> 27:48.220
payload

27:48.220 --> 27:49.220
put

27:49.220 --> 27:50.220
call

27:50.220 --> 27:51.220
他这个我们是不需要调整的

27:51.220 --> 27:52.220
然后这个里面

27:52.220 --> 27:53.220
也是获取code

27:53.220 --> 27:54.220
MSG

27:54.220 --> 27:56.220
我们这个接口地址

27:56.220 --> 27:57.220
肯定是这个

27:57.220 --> 27:58.220
不要他了

27:58.220 --> 27:59.220
我们就写一个

27:59.220 --> 28:00.220
delete

28:02.220 --> 28:03.220
delete

28:03.220 --> 28:04.220
什么呢

28:04.220 --> 28:06.220
这个不是山储工人信息

28:06.220 --> 28:07.220
我们这个叫update

28:07.220 --> 28:08.220
department

28:08.220 --> 28:10.220
写一个update

28:11.220 --> 28:12.220
department

28:12.220 --> 28:13.220
好吧

28:13.220 --> 28:14.220
那这个update

28:14.220 --> 28:15.220
department

28:15.220 --> 28:16.220
我们是不是进行一个定义

28:16.220 --> 28:17.220
因为现在在servus

28:17.220 --> 28:18.220
下面

28:18.220 --> 28:19.220
我们应该是

28:19.220 --> 28:20.220
没有做任何处理

28:20.220 --> 28:21.220
我们直接的

28:21.220 --> 28:23.220
找到department

28:23.220 --> 28:24.220
新增部门

28:24.220 --> 28:25.220
我们这里面

28:25.220 --> 28:27.220
再写一个修改部门

28:27.220 --> 28:28.220
把它给加上

28:28.220 --> 28:29.220
这个是什么呢

28:29.220 --> 28:31.220
我们的一个修改部门

28:32.220 --> 28:33.220
修改部门

28:33.220 --> 28:35.220
这样我直接写一个吧

28:35.220 --> 28:36.220
如果说不直接写

28:36.220 --> 28:37.220
因为它这个Ui

28:37.220 --> 28:38.220
和这个参数

28:38.220 --> 28:39.220
都不太一样

28:39.220 --> 28:40.220
那我们直接的

28:40.220 --> 28:42.220
export

28:42.220 --> 28:43.220
const

28:43.220 --> 28:44.220
不要这个了

28:44.220 --> 28:45.220
update

28:45.220 --> 28:46.220
department

28:46.220 --> 28:47.220
然后在这个里面

28:47.220 --> 28:49.220
给它做一个重写

28:49.220 --> 28:50.220
否则这个里面

28:50.220 --> 28:51.220
如果你不重写的话

28:51.220 --> 28:53.220
它会更加麻烦

28:53.220 --> 28:55.220
我们这个修改部门之后

28:55.220 --> 28:56.220
这里面同样的是

28:56.220 --> 28:58.220
传递一个parmaris

28:59.220 --> 29:00.220
parmaris

29:00.220 --> 29:01.220
调用的阿甲克斯

29:01.220 --> 29:02.220
它这个是

29:02.220 --> 29:03.220
poop的方法

29:03.220 --> 29:04.220
poop的方法

29:04.220 --> 29:05.220
也是我们使用

29:05.220 --> 29:06.220
department

29:06.220 --> 29:07.220
然后这个里面

29:07.220 --> 29:08.220
你使用department

29:08.220 --> 29:10.220
是使用

29:10.220 --> 29:11.220
但是这里面

29:11.220 --> 29:12.220
我们得需要

29:12.220 --> 29:13.220
给你传递一个什么

29:13.220 --> 29:14.220
拼接一个指

29:14.220 --> 29:15.220
也就是说

29:15.220 --> 29:16.220
你这个

29:16.220 --> 29:17.220
去修改的时候

29:17.220 --> 29:18.220
我们要给你拼接

29:18.220 --> 29:19.220
一个参数

29:19.220 --> 29:20.220
这个里面

29:20.220 --> 29:21.220
我先把底下的

29:21.220 --> 29:22.220
不要了

29:22.220 --> 29:23.220
把它

29:23.220 --> 29:24.220
放一下

29:24.220 --> 29:25.220
这个里面是

29:25.220 --> 29:26.220
department

29:26.220 --> 29:27.220
detail

29:27.220 --> 29:28.220
之后

29:28.220 --> 29:29.220
后面要加一个什么呢

29:29.220 --> 29:30.220
我们的id

29:30.220 --> 29:31.220
一直到那

29:31.220 --> 29:32.220
那我们就把这个

29:32.220 --> 29:33.220
parmaris

29:33.220 --> 29:34.220
点

29:34.220 --> 29:35.220
这个传递过来的

29:35.220 --> 29:37.220
应该是parmaris

29:37.220 --> 29:38.220
点下号线id

29:38.220 --> 29:39.220
对吧

29:39.220 --> 29:40.220
给它添加进去

29:40.220 --> 29:41.220
然后我们再把

29:41.220 --> 29:42.220
其他的这个parmaris

29:42.220 --> 29:43.220
给它传递过去

29:43.220 --> 29:44.220
是不是就OK了

29:45.220 --> 29:47.220
这里面缺一个箭头

29:47.220 --> 29:48.220
把这个箭头

29:48.220 --> 29:49.220
给它进行一个补充

29:49.220 --> 29:50.220
OK

29:50.220 --> 29:51.220
这个就处理完了

29:51.220 --> 29:52.220
update

29:52.220 --> 29:53.220
department

29:53.220 --> 29:54.220
到这个里面

29:54.220 --> 29:55.220
payload

29:55.220 --> 29:56.220
然后我们回来之后

29:56.220 --> 29:57.220
再对它

29:57.220 --> 29:58.220
进行一个

29:58.220 --> 29:59.220
其他的处理

29:59.220 --> 30:00.220
比如说

30:00.220 --> 30:01.220
我们对这个里面

30:01.220 --> 30:02.220
它修改完成

30:02.220 --> 30:03.220
做的事情

30:03.220 --> 30:04.220
我们这个是不是

30:04.220 --> 30:05.220
也得做一个处理

30:05.220 --> 30:06.220
对吧

30:06.220 --> 30:07.220
那如果说有扣的

30:07.220 --> 30:09.220
我们给它干掉

30:09.220 --> 30:10.220
之后呢

30:10.220 --> 30:12.220
我们去给它提示一下

30:12.220 --> 30:14.220
message.setsize

30:14.220 --> 30:15.220
messg

30:15.220 --> 30:16.220
这都没啥问题

30:16.220 --> 30:17.220
请求成功之后

30:17.220 --> 30:18.220
那你这个时候

30:18.220 --> 30:19.220
第一个

30:19.220 --> 30:20.220
获取我们的这个

30:20.220 --> 30:21.220
部门列表

30:21.220 --> 30:22.220
这个事也应该做一下

30:22.220 --> 30:23.220
payload

30:23.220 --> 30:24.220
给它传一个空

30:24.220 --> 30:25.220
对

30:25.220 --> 30:26.220
这个没问题

30:26.220 --> 30:27.220
然后你获取完

30:27.220 --> 30:28.220
部门列表之后

30:28.220 --> 30:29.220
我们的这个

30:29.220 --> 30:30.220
部门详情

30:30.220 --> 30:31.220
也就是说你把

30:31.220 --> 30:32.220
部门详情

30:32.220 --> 30:33.220
再给我们

30:33.220 --> 30:35.220
获取一下新增部门

30:35.220 --> 30:36.220
这个是

30:36.220 --> 30:37.220
那我们就调用

30:37.220 --> 30:38.220
它的一个

30:38.220 --> 30:39.220
该的department的

30:39.220 --> 30:40.220
detail对不对

30:40.220 --> 30:41.220
payload的

30:41.220 --> 30:42.220
那我们这个里面

30:42.220 --> 30:43.220
获取部门详情的时候

30:43.220 --> 30:44.220
得传ID

30:44.220 --> 30:45.220
ID是什么呢

30:45.220 --> 30:46.220
我们这个payload的里面

30:46.220 --> 30:47.220
肯定的有

30:47.220 --> 30:48.220
是不是

30:48.220 --> 30:49.220
payload的点

30:49.220 --> 30:50.220
下部线ID

30:50.220 --> 30:51.220
那这个是不是

30:51.220 --> 30:52.220
就给它传递完成了

30:52.220 --> 30:53.220
对吧

30:53.220 --> 30:54.220
OK

30:54.220 --> 30:55.220
那咱们来看一下

30:55.220 --> 30:56.220
是否可行

30:56.220 --> 30:57.220
定页

30:57.220 --> 30:58.220
前端

30:58.220 --> 30:59.220
前端部

30:59.220 --> 31:00.220
我们直接给它

31:00.220 --> 31:01.220
少一个字

31:01.220 --> 31:02.220
那这里面

31:02.220 --> 31:03.220
感觉没有意义

31:03.220 --> 31:04.220
没用原因是啥呢

31:04.220 --> 31:05.220
我们这个

31:05.220 --> 31:06.220
只添加了一个

31:06.220 --> 31:07.220
input对吧

31:07.220 --> 31:08.220
那其他的

31:08.220 --> 31:09.220
我们没有添加

31:09.220 --> 31:10.220
也就是说

31:10.220 --> 31:11.220
把第一个

31:11.220 --> 31:12.220
我们部门的

31:12.220 --> 31:13.220
这个input

31:13.220 --> 31:14.220
给它处理了

31:14.220 --> 31:15.220
那像第二个

31:15.220 --> 31:16.220
备注这个

31:16.220 --> 31:17.220
咱没处理

31:17.220 --> 31:18.220
为什么

31:18.220 --> 31:19.220
我没改这个

31:19.220 --> 31:20.220
因为我觉得

31:20.220 --> 31:21.220
那个部门

31:21.220 --> 31:22.220
那个前端部

31:22.220 --> 31:23.220
叫的还可以

31:23.220 --> 31:24.220
那我们直接的

31:24.220 --> 31:25.220
来吧

31:25.220 --> 31:26.220
看一下这个

31:26.220 --> 31:27.220
咱们刷新一下

31:28.220 --> 31:29.220
刚才没修改成功

31:29.220 --> 31:30.220
那咱们再来一个

31:30.220 --> 31:31.220
web前端部门

31:31.220 --> 31:32.220
失去焦点

31:32.220 --> 31:33.220
走

31:33.220 --> 31:34.220
修改成功

31:34.220 --> 31:35.220
前端部

31:35.220 --> 31:36.220
那前端部

31:36.220 --> 31:37.220
这个里面

31:37.220 --> 31:38.220
我们把这个

31:38.220 --> 31:39.220
web前端

31:39.220 --> 31:41.220
添加一个什么呢

31:41.220 --> 31:42.220
改一个纸

31:42.220 --> 31:43.220
web前端

31:43.220 --> 31:44.220
一部

31:44.220 --> 31:45.220
咱们直接添

31:45.220 --> 31:46.220
第三个

31:46.220 --> 31:47.220
然后呢

31:47.220 --> 31:48.220
我们失去焦点

31:48.220 --> 31:49.220
失去焦点

31:49.220 --> 31:50.220
你会发现

31:50.220 --> 31:51.220
这个时候是不是改了

31:51.220 --> 31:52.220
它改了之后

31:52.220 --> 31:53.220
其实

31:53.220 --> 31:54.220
这块也应该修改

31:54.220 --> 31:55.220
对吧

31:55.220 --> 31:56.220
就做到了

31:56.220 --> 31:57.220
继续

31:57.220 --> 31:58.220
我们这个

31:58.220 --> 31:59.220
紫部门这一块

31:59.220 --> 32:00.220
紫部门这一块

32:00.220 --> 32:01.220
我们应该怎么处理呢

32:01.220 --> 32:02.220
其实紫部门这一块

32:02.220 --> 32:04.220
相对是比较复杂的

32:04.220 --> 32:05.220
我们在这个里面

32:05.220 --> 32:06.220
比如说

32:06.220 --> 32:07.220
增加了紫部门之后

32:07.220 --> 32:08.220
那这个呢

32:08.220 --> 32:09.220
和我们新增的时候

32:09.220 --> 32:10.220
逻辑就不一样了

32:10.220 --> 32:11.220
如果说

32:11.220 --> 32:13.220
我们要是去做修改的时候

32:13.220 --> 32:14.220
那你这个里面呢

32:14.220 --> 32:15.220
还得对它

32:15.220 --> 32:16.220
进行一个

32:16.220 --> 32:18.220
我们的这个

32:18.220 --> 32:19.220
删除或者是

32:19.220 --> 32:20.220
给它一个type类型

32:20.220 --> 32:21.220
对吧

32:21.220 --> 32:22.220
相对比较复杂

32:22.220 --> 32:23.220
那我们先把这个

32:23.220 --> 32:24.220
部门负责人的这一部分

32:24.220 --> 32:26.220
来给它实现一下

32:26.220 --> 32:27.220
部门负责人

32:27.220 --> 32:28.220
这个啊

32:28.220 --> 32:30.220
就是简单了一些

32:30.220 --> 32:32.220
比如说那这个部门负责人

32:32.220 --> 32:33.220
当我们获取到

32:33.220 --> 32:34.220
这个内容之后

32:34.220 --> 32:35.220
来咱们看一下

32:35.220 --> 32:36.220
部门负责人

32:36.220 --> 32:37.220
如果说

32:37.220 --> 32:39.220
你要是在这个里面

32:39.220 --> 32:40.220
调用了一个

32:40.220 --> 32:42.220
JobPoper

32:42.220 --> 32:43.220
传递过来的

32:43.220 --> 32:44.220
应该是一个

32:44.220 --> 32:45.220
select

32:45.220 --> 32:47.220
该的select 爱特吗

32:47.220 --> 32:48.220
你在这个里面

32:48.220 --> 32:49.220
设置完成之后

32:49.220 --> 32:50.220
那你现在

32:50.220 --> 32:52.220
是不是就可以去

32:52.220 --> 32:53.220
我们的这个里面

32:53.220 --> 32:54.220
来做事了

32:54.220 --> 32:55.220
做什么事呢

32:55.220 --> 32:56.220
我们直接呢

32:56.220 --> 32:57.220
就去update detail

32:57.220 --> 32:59.220
也就是说update

32:59.220 --> 33:00.220
department

33:00.220 --> 33:01.220
我们就可以去修改了吧

33:01.220 --> 33:02.220
对吧

33:02.220 --> 33:03.220
那你update

33:03.220 --> 33:04.220
department的时候

33:04.220 --> 33:05.220
我们在这个里面

33:05.220 --> 33:06.220
把它一些指

33:06.220 --> 33:07.220
给它传递一下

33:07.220 --> 33:08.220
是不是就可以了

33:08.220 --> 33:09.220
选定之后

33:09.220 --> 33:10.220
其实我们就是想修改

33:10.220 --> 33:11.220
那这个时候

33:11.220 --> 33:12.220
我们给它一个type

33:12.220 --> 33:13.220
type

33:13.220 --> 33:14.220
我们这里面

33:14.220 --> 33:15.220
给它一个叫什么

33:15.220 --> 33:17.220
叫department

33:17.220 --> 33:18.220
lader的指就可以

33:18.220 --> 33:19.220
因为其他的

33:19.220 --> 33:20.220
我们不需要给他

33:20.220 --> 33:21.220
为啥其他的

33:21.220 --> 33:22.220
不需要给他们

33:22.220 --> 33:23.220
像一个department的

33:23.220 --> 33:24.220
lader name

33:24.220 --> 33:25.220
是不是我们展示的时候

33:25.220 --> 33:26.220
使用的

33:26.220 --> 33:27.220
而这个department的

33:27.220 --> 33:28.220
lader是作为

33:28.220 --> 33:29.220
我们真正传递

33:29.220 --> 33:31.220
给后端的这么一个指

33:31.220 --> 33:32.220
来咱们看一下

33:32.220 --> 33:33.220
是否可行

33:33.220 --> 33:34.220
到这里面

33:34.220 --> 33:35.220
我们刷新一下

33:35.220 --> 33:37.220
刷新一下之后

33:37.220 --> 33:39.220
外部前端部

33:39.220 --> 33:40.220
那这个里面

33:40.220 --> 33:41.220
我们去点击修改

33:41.220 --> 33:42.220
现在是未言

33:42.220 --> 33:43.220
那我把它变成

33:43.220 --> 33:44.220
亡英

33:44.220 --> 33:45.220
OK 指呢

33:45.220 --> 33:46.220
修改成功了

33:46.220 --> 33:47.220
修改成功之后

33:47.220 --> 33:48.220
咱们再来点击一下

33:48.220 --> 33:49.220
亡英呢

33:49.220 --> 33:50.220
就作为这个

33:50.220 --> 33:51.220
领导进行一个展示

33:51.220 --> 33:52.220
是不是

33:52.220 --> 33:53.220
那这个呢

33:53.220 --> 33:54.220
我们就搞定了

33:54.220 --> 33:55.220
接下来呢

33:55.220 --> 33:56.220
我们再说一下

33:56.220 --> 33:58.220
对紫部门的这个处理

33:58.220 --> 34:00.220
紫部门的一个处理

34:00.220 --> 34:01.220
我们得回到

34:01.220 --> 34:03.220
这个最初的这个内层

34:03.220 --> 34:04.220
来看一下

34:04.220 --> 34:05.220
我们这里面

34:05.220 --> 34:06.220
有一个

34:06.220 --> 34:08.220
AdChill的model对吧

34:08.220 --> 34:09.220
AdChill的model呢

34:09.220 --> 34:11.220
它是对紫部门的一个

34:11.220 --> 34:13.220
添加的这么一个操作

34:13.220 --> 34:14.220
那现在呢

34:14.220 --> 34:15.220
我们这个里面

34:15.220 --> 34:16.220
要来分析一下

34:16.220 --> 34:17.220
它有可能是新的

34:17.220 --> 34:18.220
紫部门

34:18.220 --> 34:19.220
还有可能呢

34:19.220 --> 34:20.220
是对这个

34:20.220 --> 34:21.220
紫部门进行修改

34:21.220 --> 34:22.220
对不对

34:22.220 --> 34:23.220
那这个时候

34:23.220 --> 34:24.220
怎么来区分呢

34:24.220 --> 34:25.220
如果说

34:25.220 --> 34:26.220
我们department的内幕有值

34:26.220 --> 34:27.220
那这个时候呢

34:27.220 --> 34:29.220
department的detail有值

34:29.220 --> 34:30.220
它呢

34:30.220 --> 34:31.220
就是进行这个

34:31.220 --> 34:32.220
紫部门的修改

34:32.220 --> 34:33.220
你直接就去修改

34:33.220 --> 34:34.220
就可以了

34:34.220 --> 34:35.220
而不是说

34:35.220 --> 34:36.220
进行一个新增处理

34:36.220 --> 34:37.220
对吧

34:37.220 --> 34:38.220
那这里面

34:38.220 --> 34:39.220
我们就来判断一下

34:39.220 --> 34:40.220
如何来进

34:40.220 --> 34:41.220
判断

34:41.220 --> 34:42.220
其实也非常简单

34:42.220 --> 34:43.220
我们直接把这个

34:43.220 --> 34:44.220
department的detail

34:44.220 --> 34:45.220
给做一个获取

34:45.220 --> 34:46.220
就可以了

34:46.220 --> 34:47.220
department

34:47.220 --> 34:48.220
detail

34:48.220 --> 34:51.370
好的

34:51.370 --> 34:52.370
那这个怎么获取呢

34:52.370 --> 34:53.370
我们直接的

34:53.370 --> 34:54.370
这些就不要了

34:54.370 --> 34:55.370
这一坨

34:55.370 --> 34:56.370
咱们给他拿走

34:56.370 --> 34:57.370
从我们的

34:57.370 --> 34:58.370
state里面

34:58.370 --> 35:00.370
给他来找一下

35:00.370 --> 35:02.370
这个就是我们的

35:02.370 --> 35:06.370
state.department

35:06.370 --> 35:08.740
department

35:08.740 --> 35:10.740
state.department

35:10.740 --> 35:11.740
里面来进行获取

35:11.740 --> 35:12.740
就可以

35:12.740 --> 35:13.740
然后这里面

35:13.740 --> 35:14.740
有的加一个件头

35:14.740 --> 35:15.740
好了

35:15.740 --> 35:16.740
那现在获取到

35:16.740 --> 35:17.740
department的detail之后

35:17.740 --> 35:18.740
那如果说

35:18.740 --> 35:19.740
department的detail

35:19.740 --> 35:20.740
有值

35:20.740 --> 35:21.740
就证明一点

35:21.740 --> 35:22.740
我们是在详情界面

35:22.740 --> 35:23.740
打开的对不对

35:23.740 --> 35:24.740
详情界面打开

35:24.740 --> 35:25.740
那现在你就是

35:25.740 --> 35:27.740
想对他进行一个什么

35:27.740 --> 35:29.740
我们的这个

35:29.740 --> 35:30.740
新增

35:30.740 --> 35:31.740
然后增加一个子铺门

35:31.740 --> 35:32.740
其实本质上

35:32.740 --> 35:33.740
就是对这个子铺门的

35:33.740 --> 35:34.740
一个修改

35:34.740 --> 35:35.740
所以说呢

35:35.740 --> 35:36.740
这个里面

35:36.740 --> 35:37.740
我们给他调整一下

35:37.740 --> 35:38.740
我们send a data

35:38.740 --> 35:39.740
的时候

35:39.740 --> 35:40.740
这个type

35:40.740 --> 35:41.740
值

35:41.740 --> 35:42.740
我们来判断一下

35:42.740 --> 35:43.740
如果说

35:43.740 --> 35:44.740
我们

35:44.740 --> 35:45.740
不是department的detail

35:45.740 --> 35:46.740
或者是

35:46.740 --> 35:48.740
我们department的detail

35:48.740 --> 35:49.740
有值的话

35:49.740 --> 35:50.740
那成立了吗

35:50.740 --> 35:51.740
成立的话

35:51.740 --> 35:52.740
那他现在应该是什么

35:52.740 --> 35:53.740
update

35:53.740 --> 35:54.740
否则

35:54.740 --> 35:55.740
那再是新增

35:55.740 --> 35:56.740
是不是可以了

35:56.740 --> 35:58.740
我们做这么一个操作

36:00.740 --> 36:01.740
好他定义完成之后

36:01.740 --> 36:02.740
同样的

36:02.740 --> 36:03.740
我们给他进行

36:03.740 --> 36:04.740
一个传旨

36:04.740 --> 36:05.740
然后呢

36:05.740 --> 36:06.740
我们set

36:06.740 --> 36:07.740
受这个child的model

36:07.740 --> 36:08.740
这些都不发生

36:08.740 --> 36:09.740
任何改变

36:10.740 --> 36:11.740
这里面有一个

36:11.740 --> 36:12.740
addchild的list

36:12.740 --> 36:13.740
对吧

36:13.740 --> 36:14.740
addchild的list

36:14.740 --> 36:15.740
其实本质上

36:15.740 --> 36:16.740
是调用了

36:16.740 --> 36:17.740
push update

36:17.740 --> 36:18.740
我们往上层走

36:19.740 --> 36:20.740
上层走的时候

36:20.740 --> 36:21.740
这个push update

36:21.740 --> 36:22.740
直接做了

36:22.740 --> 36:23.740
一个乘上起下的作用

36:23.740 --> 36:25.740
那直接就会来到

36:25.740 --> 36:26.740
我们的这个form

36:26.740 --> 36:27.740
compartment

36:27.740 --> 36:30.120
下面

36:30.120 --> 36:31.120
这个里面

36:31.120 --> 36:32.120
我们打开push

36:32.120 --> 36:33.120
update list

36:33.120 --> 36:35.120
的来做一个查看

36:35.120 --> 36:36.120
原来呢

36:36.120 --> 36:37.120
我们这个里面

36:37.120 --> 36:38.120
指定是data

36:38.120 --> 36:39.120
data呢这个纸上

36:39.120 --> 36:40.120
太含糊了

36:40.120 --> 36:41.120
我们直接

36:41.120 --> 36:42.120
把这个纸上都给

36:42.120 --> 36:43.120
映射出来

36:43.120 --> 36:44.120
一个是list的

36:44.120 --> 36:45.120
一个是type

36:45.120 --> 36:47.120
首先获取一个ids

36:47.120 --> 36:48.120
之后呢

36:48.120 --> 36:50.120
我们这个去存储list的

36:50.120 --> 36:51.120
让我们做一个判断

36:51.120 --> 36:52.120
什么判断呢

36:52.120 --> 36:53.120
我们判断一下

36:53.120 --> 36:54.120
如果说type

36:54.120 --> 36:55.120
假如说

36:55.120 --> 36:56.120
它要是等于等于

36:56.120 --> 36:57.120
我们的update

36:57.120 --> 36:58.120
对不对

36:58.120 --> 36:59.120
等于update的时候

36:59.120 --> 37:00.120
我们做一个

37:00.120 --> 37:01.120
发送的操作

37:01.120 --> 37:02.120
然后呢

37:02.120 --> 37:03.120
如果说

37:03.120 --> 37:04.120
不是等于update

37:04.120 --> 37:05.120
我们再来

37:05.120 --> 37:06.120
做这件事情

37:06.120 --> 37:07.120
如果说等于update

37:07.120 --> 37:08.120
我们要干什么呢

37:08.120 --> 37:09.120
我们直接的

37:09.120 --> 37:10.120
要update department

37:10.120 --> 37:11.120
对吧

37:11.120 --> 37:12.120
要把这个事情

37:12.120 --> 37:13.120
给做一下

37:13.120 --> 37:14.120
做一下的时候

37:14.120 --> 37:15.120
我们这个里面

37:15.120 --> 37:16.120
要有一个type

37:16.120 --> 37:17.120
修改的是类型

37:17.120 --> 37:18.120
是什么

37:18.120 --> 37:19.120
是我们的

37:19.120 --> 37:20.120
这是第一个

37:20.120 --> 37:21.120
那我们的update

37:21.120 --> 37:22.120
value

37:22.120 --> 37:23.120
应该写什么

37:23.120 --> 37:24.120
就是我们

37:24.120 --> 37:25.120
当时解析出来

37:25.120 --> 37:26.120
一个tilt ids

37:26.120 --> 37:27.120
对吧

37:27.120 --> 37:28.120
那就是

37:28.120 --> 37:29.120
把它来给

37:29.120 --> 37:30.120
使用一下

37:31.120 --> 37:32.120
之后呢

37:32.120 --> 37:33.120
我们这个里面

37:33.120 --> 37:34.120
来做一下

37:34.120 --> 37:35.120
那这个时候是

37:35.120 --> 37:36.120
ease delete

37:36.120 --> 37:37.120
是不是删除呢

37:37.120 --> 37:38.120
肯定不是删除

37:38.120 --> 37:39.120
对吧

37:39.120 --> 37:40.120
ease delete

37:40.120 --> 37:41.120
我们这个也没有指

37:41.120 --> 37:42.120
原来是

37:42.120 --> 37:43.120
默认指是false

37:43.120 --> 37:44.120
对吧

37:44.120 --> 37:45.120
那我们这个时候

37:45.120 --> 37:46.120
不给它传了

37:46.120 --> 37:47.120
删除的时候

37:47.120 --> 37:48.120
咱们再说

37:48.120 --> 37:49.120
一下是否可行

37:49.120 --> 37:50.120
如果说你去update

37:50.120 --> 37:51.120
department

37:51.120 --> 37:52.120
然后呢

37:52.120 --> 37:53.120
它去走这个

37:53.120 --> 37:54.120
相应的操作

37:54.120 --> 37:55.120
咱们来看

37:55.120 --> 37:57.120
现在我们直接的

37:57.120 --> 37:58.120
到这个里面

37:58.120 --> 37:59.120
添加一个子部门

37:59.120 --> 38:00.120
然后呢

38:00.120 --> 38:01.120
咱们从这个里面

38:01.120 --> 38:02.120
外部前端一步

38:02.120 --> 38:03.120
我把测试二步

38:03.120 --> 38:04.120
给添加过来

38:04.120 --> 38:06.120
现在是想的这种事情

38:06.120 --> 38:07.120
但是测试二步呢

38:07.120 --> 38:09.120
这个可能添加不过来

38:09.120 --> 38:10.120
因为什么

38:10.120 --> 38:11.120
因为它属于

38:11.120 --> 38:12.120
别的部门的子部门了

38:12.120 --> 38:13.120
那我们就给

38:13.120 --> 38:14.120
研发部添加过来

38:14.120 --> 38:15.120
好了

38:15.120 --> 38:16.120
添加过来

38:16.120 --> 38:17.120
研发部之后

38:17.120 --> 38:18.120
这个里面提示

38:18.120 --> 38:19.120
我们修改成功

38:19.120 --> 38:21.120
修改成功之后

38:21.120 --> 38:22.120
它应该进行展示

38:22.120 --> 38:24.120
但是它现在没有展示

38:24.120 --> 38:25.120
而且给我们抱错了

38:25.120 --> 38:26.120
我们来看一下

38:26.120 --> 38:27.120
这个逻辑的

38:27.120 --> 38:29.120
没展示的原因

38:29.120 --> 38:31.120
我们新研发部过来了

38:31.120 --> 38:33.120
然后这个里面

38:33.120 --> 38:34.120
没有展示

38:34.120 --> 38:35.120
我们再添加一个

38:35.120 --> 38:36.120
到这里面

38:36.120 --> 38:37.120
我们读一下逻辑

38:37.120 --> 38:39.120
update department

38:39.120 --> 38:40.120
如果说我们去修改

38:40.120 --> 38:41.120
tabtrue准

38:41.120 --> 38:42.120
update value

38:42.120 --> 38:47.430
childtrue准ids

38:47.430 --> 38:48.430
然后呢

38:48.430 --> 38:50.430
我们会走一个model

38:50.430 --> 38:51.430
到model里面

38:51.430 --> 38:53.430
我们去修改部门信息之后

38:53.430 --> 38:54.430
重新去处罚

38:54.430 --> 38:56.430
init department的list

38:56.430 --> 38:58.430
并且get department的detail

38:58.430 --> 39:00.430
这个感觉上没啥问题

39:00.430 --> 39:01.430
咱们再添一个

39:01.430 --> 39:03.430
把这个商品部

39:03.430 --> 39:04.430
也作为它的子部门

39:04.430 --> 39:05.430
我们看一下

39:05.430 --> 39:06.430
调用的几个接口

39:06.430 --> 39:07.430
点击确定

39:07.430 --> 39:08.430
修改成功

39:08.430 --> 39:10.430
修改成功之后

39:10.430 --> 39:11.430
这个时候

39:11.430 --> 39:12.430
我们这些纸

39:12.430 --> 39:14.430
其实是都有了

39:14.430 --> 39:15.430
都有了之后

39:15.430 --> 39:16.430
但是这个纸

39:16.430 --> 39:17.430
它没去渲染

39:17.430 --> 39:18.430
对吧

39:18.430 --> 39:19.430
那你这个声儿

39:19.430 --> 39:20.430
没渲染的原因是什么

39:20.430 --> 39:23.430
我们找到我们的这个

39:23.430 --> 39:24.430
foam

39:24.430 --> 39:26.430
这个里面有一个index.js

39:26.430 --> 39:27.430
对不对

39:27.430 --> 39:28.430
你再给它传递

39:28.430 --> 39:30.430
紫部门值的时候

39:30.430 --> 39:31.430
这个时候呢

39:31.430 --> 39:32.430
我们就来看一下了

39:32.430 --> 39:33.430
这个紫部门值

39:33.430 --> 39:35.430
应该是传递错了

39:35.430 --> 39:37.430
到这个里面

39:37.430 --> 39:38.430
找到我们的

39:38.430 --> 39:40.430
紫部门childlist

39:40.430 --> 39:41.430
childlist

39:41.430 --> 39:42.430
它一直是childlist

39:42.430 --> 39:43.430
这个也不行

39:43.430 --> 39:44.430
对吧

39:44.430 --> 39:45.430
那你要是一直是

39:45.430 --> 39:46.430
这个意思的

39:46.430 --> 39:47.430
那我们这个紫部门

39:47.430 --> 39:48.430
它这个

39:48.430 --> 39:49.430
你即使修改了

39:49.430 --> 39:51.430
它也没获取我们的这个

39:51.430 --> 39:53.430
什么修改之后的

39:53.430 --> 39:55.430
这里面的这个内容信息

39:55.430 --> 39:56.430
对不对

39:56.430 --> 39:57.430
其实这个里面

39:57.430 --> 39:58.430
吹忽准它是有值的

39:58.430 --> 39:59.430
然后我们

39:59.430 --> 40:00.430
如果说你修改成功

40:00.430 --> 40:01.430
你是不是获取

40:01.430 --> 40:02.430
这底下的就可以了

40:02.430 --> 40:03.430
对吧

40:03.430 --> 40:04.430
把它给你宣传出来

40:04.430 --> 40:05.430
所以说呢

40:05.430 --> 40:06.430
这里面

40:06.430 --> 40:07.430
我们得做一个调整

40:07.430 --> 40:08.430
把这个值调整一下

40:08.430 --> 40:09.430
什么意思呢

40:09.430 --> 40:10.430
就是说

40:10.430 --> 40:11.430
我们这个值

40:11.430 --> 40:12.430
有可能是吹忽准

40:12.430 --> 40:13.430
也有可能是什么

40:13.430 --> 40:14.430
也有可能是

40:14.430 --> 40:15.430
childlist

40:16.430 --> 40:17.430
哪一个

40:17.430 --> 40:18.430
是不是这个

40:18.430 --> 40:19.430
childlist的值

40:19.430 --> 40:20.430
对吧

40:20.430 --> 40:21.430
那我们就调整它

40:21.430 --> 40:22.430
就可以了

40:22.430 --> 40:23.430
这里面我们改一下

40:23.430 --> 40:24.430
改一下什么呢

40:24.430 --> 40:25.430
我们这个里面判断一下

40:25.430 --> 40:27.430
model type

40:27.430 --> 40:28.430
假如说model type

40:28.430 --> 40:29.430
如果说

40:29.430 --> 40:31.430
它要是等于等于

40:31.430 --> 40:33.430
我们的这个update的时候

40:33.430 --> 40:35.430
你就别搞一个空的了

40:35.430 --> 40:36.430
你提前你得上值

40:36.430 --> 40:37.430
对不对

40:37.430 --> 40:38.430
那我们直接的

40:38.430 --> 40:39.430
在这个里面

40:39.430 --> 40:41.430
就把这个department

40:41.430 --> 40:43.430
的detail

40:43.430 --> 40:45.430
里面的点吹忽准

40:45.430 --> 40:48.870
给它做一个渲染

40:48.870 --> 40:50.870
department的detail

40:50.870 --> 40:51.870
吹忽准就可以了

40:51.870 --> 40:53.870
否则那你在渲染child

40:53.870 --> 40:54.870
如果说你是新招

40:54.870 --> 40:55.870
那你直接在这里面

40:55.870 --> 40:56.870
使用childlist

40:56.870 --> 40:57.870
是不是就可以了

40:57.870 --> 40:58.870
那就是

40:58.870 --> 41:00.870
做了这么一个优化的逻辑

41:00.870 --> 41:02.870
把它给进行一个添加

41:02.870 --> 41:03.870
然后呢

41:03.870 --> 41:04.870
给它一个闭合标签

41:04.870 --> 41:05.870
这里面

41:05.870 --> 41:06.870
好了

41:06.870 --> 41:07.870
这个就处理完了

41:07.870 --> 41:08.870
或者说呢

41:08.870 --> 41:10.870
我们直接的给它进行一个

41:10.870 --> 41:11.870
这样

41:11.870 --> 41:12.870
给它调整上去

41:12.870 --> 41:13.870
好吧

41:13.870 --> 41:14.870
最后呢

41:14.870 --> 41:15.870
咱们再来看一下

41:15.870 --> 41:16.870
刷新之后

41:16.870 --> 41:18.870
它现在就应该是web前端

41:18.870 --> 41:19.870
这个里面

41:19.870 --> 41:20.870
应该是给我展示

41:20.870 --> 41:21.870
好多子部门了吧

41:21.870 --> 41:23.870
哎这个时候有报错

41:23.870 --> 41:24.870
报错原因

41:24.870 --> 41:25.870
我们来看一下

41:25.870 --> 41:26.870
1.g

41:26.870 --> 41:27.870
它给我们提示报错

41:27.870 --> 41:28.870
报错不了点

41:28.870 --> 41:29.870
我们主要是

41:29.870 --> 41:31.870
找到这个报错的问题

41:31.870 --> 41:32.870
那这个里面

41:32.870 --> 41:33.870
是啥问题呢

41:33.870 --> 41:34.870
其实这里面

41:34.870 --> 41:35.870
我们得融一个错

41:35.870 --> 41:36.870
因为出手化的时候

41:36.870 --> 41:37.870
它没有这个department

41:37.870 --> 41:38.870
对不对

41:38.870 --> 41:39.870
department的detail

41:39.870 --> 41:40.870
是没有的

41:40.870 --> 41:41.870
那我们这里面

41:41.870 --> 41:42.870
给它融个错

41:42.870 --> 41:43.870
处理啊

41:43.870 --> 41:44.870
我们来看一下

41:44.870 --> 41:46.870
打开我们的部门

41:46.870 --> 41:47.870
部门之后

41:47.870 --> 41:48.870
到这个里面

41:48.870 --> 41:49.870
假如说web前端

41:49.870 --> 41:50.870
这个时候

41:50.870 --> 41:51.870
它是不是就

41:51.870 --> 41:52.870
已经有值了

41:52.870 --> 41:53.870
对不对

41:53.870 --> 41:54.870
已经有值了

41:54.870 --> 41:55.870
那我们现在

41:55.870 --> 41:56.870
比如说再给它增加一个子部门

41:56.870 --> 41:57.870
把技术部

41:57.870 --> 41:58.870
也作为它的子部门

41:58.870 --> 41:59.870
放上去

42:00.870 --> 42:01.870
你会发现技术部

42:01.870 --> 42:02.870
是不是也添加上了

42:02.870 --> 42:03.870
那现在呢

42:03.870 --> 42:04.870
我们就开始

42:04.870 --> 42:06.870
把这个解除子部门的裸件

42:06.870 --> 42:08.870
来给它进行一个实现

42:09.870 --> 42:11.870
解除子部门这个操作

42:11.870 --> 42:12.870
我们首先呢

42:12.870 --> 42:13.870
需要找到这个按钮

42:13.870 --> 42:15.870
那我们就来获取一下它

42:15.870 --> 42:16.870
这个应该在哪儿

42:16.870 --> 42:19.870
在我们channel的department下面

42:19.870 --> 42:20.870
department下面

42:20.870 --> 42:21.870
这里面有一个

42:21.870 --> 42:23.870
解除子部门的一个关联

42:23.870 --> 42:24.870
然后呢

42:24.870 --> 42:26.870
它调用一个model弹框

42:26.870 --> 42:27.870
这里面onok

42:27.870 --> 42:28.870
onok的时候

42:28.870 --> 42:30.870
是调用这个deldepartment

42:30.870 --> 42:31.870
我们把这个建筒

42:31.870 --> 42:32.870
函数去掉

42:33.870 --> 42:34.870
那在这个里面

42:34.870 --> 42:36.870
我们需要获取一个什么呢

42:36.870 --> 42:37.870
其实这里面

42:37.870 --> 42:38.870
我们需要获取

42:38.870 --> 42:40.870
一个它的这个列表值

42:40.870 --> 42:41.870
就是说你解除

42:41.870 --> 42:42.870
你是不是得把这个id

42:42.870 --> 42:43.870
或者说是

42:43.870 --> 42:44.870
咱们这条记录给拿到

42:44.870 --> 42:45.870
最好呢

42:45.870 --> 42:46.870
我们拿记录

42:46.870 --> 42:47.870
为什么这么说呢

42:47.870 --> 42:48.870
因为我们id

42:48.870 --> 42:50.870
在这个最后处理的时候

42:50.870 --> 42:52.870
已经给它进行了一个过滤对吧

42:52.870 --> 42:53.870
那我们这里面呢

42:53.870 --> 42:55.870
现在拿的肯定是id

42:55.870 --> 42:56.870
那我们就拿列表

42:57.870 --> 42:58.870
给它改一下

42:58.870 --> 43:00.870
那这个叫dellist

43:00.870 --> 43:01.870
然后呢

43:01.870 --> 43:03.870
这个是setdellist

43:04.870 --> 43:06.870
之后把里面的值

43:06.870 --> 43:08.870
都给它进行一个更改

43:09.870 --> 43:10.870
现在拿记录

43:10.870 --> 43:12.870
那就是recode

43:13.870 --> 43:14.870
把这个recode

43:14.870 --> 43:16.870
给它进行一个添加

43:17.870 --> 43:18.870
之后呢

43:18.870 --> 43:19.870
我们这个里面

43:19.870 --> 43:21.870
给它传递的时候

43:21.870 --> 43:23.870
判断是dellist

43:23.870 --> 43:24.870
它点lumps了

43:25.870 --> 43:26.870
之后其它的

43:26.870 --> 43:27.870
也不需要更改

43:27.870 --> 43:28.870
我们来看一下

43:28.870 --> 43:29.870
是否可行

43:30.870 --> 43:31.870
比如说这里面

43:31.870 --> 43:32.870
解除子泵门关联

43:32.870 --> 43:33.870
我选中两个

43:33.870 --> 43:35.870
那这个时候点击确定

43:35.870 --> 43:36.870
id

43:36.870 --> 43:37.870
不对啊

43:37.870 --> 43:38.870
这里面的时候

43:38.870 --> 43:40.870
应该打印我们delids

43:40.870 --> 43:41.870
看一下

43:41.870 --> 43:42.870
它是否有值就行了

43:43.870 --> 43:44.870
从今来

43:44.870 --> 43:46.870
一个选择

43:46.870 --> 43:47.870
一个两个

43:47.870 --> 43:48.870
之后

43:48.870 --> 43:49.870
解除子泵门关联

43:49.870 --> 43:50.870
点击确定

43:50.870 --> 43:51.870
好的

43:51.870 --> 43:52.870
那这时候呢

43:52.870 --> 43:53.870
就有两个值了

43:53.870 --> 43:54.870
这两个值呢

43:54.870 --> 43:55.870
其实

43:55.870 --> 43:56.870
这个时候

43:56.870 --> 43:57.870
我们可以拿到它

43:57.870 --> 43:58.870
一会还可以渲染

43:58.870 --> 43:59.870
然后呢

43:59.870 --> 44:00.870
还可以进行删除

44:00.870 --> 44:01.870
这么一个操作

44:01.870 --> 44:02.870
那目前

44:02.870 --> 44:03.870
现在我们找到的

44:03.870 --> 44:04.870
第一步啊

44:04.870 --> 44:05.870
还有一个问题是什么呢

44:05.870 --> 44:06.870
现在我们得区分一下

44:06.870 --> 44:07.870
这个情况

44:07.870 --> 44:08.870
如果说

44:08.870 --> 44:10.870
你要是在这个

44:10.870 --> 44:11.870
详情界面打开

44:11.870 --> 44:13.870
那你是真正的要去修改

44:13.870 --> 44:14.870
修改什么呢

44:14.870 --> 44:15.870
把我们的这个

44:15.870 --> 44:16.870
当前web前段一步

44:16.870 --> 44:17.870
里面的子泵门

44:17.870 --> 44:19.870
进行一个删除操作

44:19.870 --> 44:20.870
那还有一种情况

44:20.870 --> 44:21.870
如果说你在这个

44:21.870 --> 44:22.870
当前啊

44:22.870 --> 44:23.870
你是在创建

44:23.870 --> 44:24.870
比如说我们这里面

44:24.870 --> 44:26.870
新增两个部门

44:26.870 --> 44:28.870
新增一个吧

44:28.870 --> 44:29.870
点击确定

44:29.870 --> 44:30.870
有抱错

44:30.870 --> 44:31.870
有抱错的原因是什么

44:31.870 --> 44:32.870
我们来找一下

44:32.870 --> 44:33.870
id

44:33.870 --> 44:34.870
model

44:34.870 --> 44:35.870
新增子泵门

44:35.870 --> 44:36.870
判断的时候

44:36.870 --> 44:37.870
release the child

44:37.870 --> 44:38.870
release the type

44:38.870 --> 44:40.870
department of detail

44:40.870 --> 44:42.870
那这个应该是个解构啊

44:42.870 --> 44:43.870
好的那这个

44:43.870 --> 44:44.870
我们再来一遍啊

44:44.870 --> 44:45.870
看一下啊

44:45.870 --> 44:46.870
到这个里面

44:46.870 --> 44:47.870
我们点击确定

44:47.870 --> 44:48.870
点击确定之后

44:48.870 --> 44:49.870
如果说你这时候点击

44:49.870 --> 44:51.870
那你现在应该是什么

44:51.870 --> 44:52.870
你是不是就是

44:52.870 --> 44:53.870
想在原来这个基础上

44:53.870 --> 44:54.870
给他做一个删除

44:54.870 --> 44:55.870
就可以了

44:55.870 --> 44:56.870
所以说这个时候

44:56.870 --> 44:57.870
我们要分为

44:57.870 --> 44:58.870
两种情况来处理啊

44:58.870 --> 44:59.870
这两种情况处理

44:59.870 --> 45:00.870
怎么办呢

45:00.870 --> 45:01.870
我们直接的

45:01.870 --> 45:03.870
就是可以通过这个

45:03.870 --> 45:04.870
department of list

45:04.870 --> 45:06.870
也就是说这个

45:06.870 --> 45:07.870
department of list的

45:07.870 --> 45:09.870
这个department of detail

45:09.870 --> 45:10.870
我们可以通过

45:10.870 --> 45:11.870
department of detail

45:11.870 --> 45:12.870
来判断一下

45:12.870 --> 45:13.870
那如果说

45:13.870 --> 45:14.870
你department of detail

45:14.870 --> 45:15.870
有值

45:15.870 --> 45:16.870
那你现在是想

45:16.870 --> 45:17.870
删除子泵门

45:17.870 --> 45:18.870
假如说你

45:18.870 --> 45:19.870
department of detail

45:19.870 --> 45:20.870
没有值呢

45:20.870 --> 45:21.870
那你这个时候呢

45:21.870 --> 45:22.870
其实就是想给他

45:22.870 --> 45:23.870
做一个子泵门的

45:23.870 --> 45:24.870
重新调整

45:24.870 --> 45:25.870
调整指的是什么

45:25.870 --> 45:26.870
就是把他列表

45:26.870 --> 45:27.870
给做一个更改

45:27.870 --> 45:28.870
是不是就可以了

45:28.870 --> 45:30.870
那基于这个条件呢

45:30.870 --> 45:32.870
我们首先第一步啊

45:32.870 --> 45:33.870
先把这个

45:33.870 --> 45:34.870
department of detail

45:34.870 --> 45:35.870
给他传递过去吧

45:35.870 --> 45:36.870
因为这个

45:36.870 --> 45:37.870
我们一直在调用

45:37.870 --> 45:39.870
也是比较麻烦的

45:39.870 --> 45:40.870
子泵门

45:40.870 --> 45:41.870
子泵门这里面

45:41.870 --> 45:42.870
有child list的

45:42.870 --> 45:43.870
然后呢

45:43.870 --> 45:44.870
我们还可以

45:44.870 --> 45:46.870
把这个department of detail

45:46.870 --> 45:47.870
给他带过去

45:47.870 --> 45:48.870
带过去之后

45:48.870 --> 45:49.870
那我们child

45:49.870 --> 45:50.870
department的下面

45:50.870 --> 45:51.870
是不是就

45:51.870 --> 45:52.870
应该有这么一个

45:52.870 --> 45:53.870
department of detail

45:53.870 --> 45:54.870
然后呢

45:54.870 --> 45:55.870
我们这里面

45:55.870 --> 45:56.870
判断一下

45:56.870 --> 45:57.870
反正不管你怎么做

45:57.870 --> 45:58.870
你要做两件事

45:58.870 --> 45:59.870
第一是什么呢

45:59.870 --> 46:00.870
我们这个

46:00.870 --> 46:01.870
解除子泵门的时候

46:01.870 --> 46:02.870
首先打开

46:02.870 --> 46:03.870
关闭对吧

46:03.870 --> 46:04.870
打开弹装关闭

46:04.870 --> 46:05.870
应该是什么呢

46:05.870 --> 46:07.870
我们这个都比较简单啊

46:07.870 --> 46:08.870
这个应该是什么

46:08.870 --> 46:09.870
set

46:09.870 --> 46:10.870
sodel

46:10.870 --> 46:11.870
model

46:11.870 --> 46:12.870
然后给他一个 false

46:12.870 --> 46:13.870
对吧

46:13.870 --> 46:14.870
咱们先把这个需求

46:14.870 --> 46:15.870
给实现一下啊

46:15.870 --> 46:16.870
比如说点击这个

46:16.870 --> 46:17.870
点击一个部门

46:17.870 --> 46:18.870
我解除子泵门

46:18.870 --> 46:20.870
点击确定关闭弹装

46:20.870 --> 46:21.870
对吧没问题啊

46:21.870 --> 46:22.870
然后第二个呢

46:22.870 --> 46:24.870
你是调用一下

46:24.870 --> 46:25.870
这个push

46:25.870 --> 46:26.870
update

46:26.870 --> 46:27.870
list的方法

46:27.870 --> 46:28.870
也就是把这个方法

46:28.870 --> 46:29.870
给传递过去

46:29.870 --> 46:30.870
list呢

46:30.870 --> 46:31.870
就拿我们的这个

46:31.870 --> 46:32.870
del list

46:32.870 --> 46:33.870
是不是可以啊

46:33.870 --> 46:34.870
之后呢我们这个

46:34.870 --> 46:35.870
type值啊

46:35.870 --> 46:36.870
type值呢

46:36.870 --> 46:37.870
这里面有可能是什么呢

46:37.870 --> 46:38.870
我们的这个

46:38.870 --> 46:39.870
有可能是删除了

46:39.870 --> 46:40.870
现在就是

46:40.870 --> 46:41.870
也就是说

46:41.870 --> 46:42.870
删除子泵门

46:42.870 --> 46:43.870
这么一个操作

46:43.870 --> 46:44.870
还有可能是什么呢

46:44.870 --> 46:45.870
就是我们

46:45.870 --> 46:46.870
把它看做一个

46:46.870 --> 46:48.870
新增的部门

46:48.870 --> 46:49.870
这样里面的

46:49.870 --> 46:50.870
一个调整部门的

46:50.870 --> 46:51.870
一个操作

46:51.870 --> 46:52.870
那我们这里面

46:52.870 --> 46:53.870
就可以通过

46:53.870 --> 46:54.870
department的detail

46:54.870 --> 46:55.870
来判断啊

46:55.870 --> 46:57.870
department的detail

46:57.870 --> 46:58.870
成立吗

46:58.870 --> 46:59.870
成立的话

46:59.870 --> 47:00.870
type呢

47:00.870 --> 47:01.870
update

47:01.870 --> 47:02.870
否则呢

47:02.870 --> 47:03.870
那我们还把它

47:03.870 --> 47:04.870
当作

47:04.870 --> 47:05.870
i的来做一个处理

47:05.870 --> 47:06.870
那这样呢

47:06.870 --> 47:07.870
我们就给它带过去了

47:07.870 --> 47:08.870
带过去之后

47:08.870 --> 47:09.870
那我们再回到

47:09.870 --> 47:10.870
我们的这个

47:10.870 --> 47:11.870
fump

47:11.870 --> 47:12.870
compartment里面

47:12.870 --> 47:13.870
那你这个时候

47:13.870 --> 47:14.870
我们这个里面的

47:14.870 --> 47:15.870
type

47:15.870 --> 47:16.870
如果说

47:16.870 --> 47:17.870
非update的value

47:17.870 --> 47:18.870
咱们这个

47:18.870 --> 47:19.870
应该是

47:19.870 --> 47:20.870
push update

47:20.870 --> 47:21.870
我们这个里面

47:21.870 --> 47:22.870
你看

47:22.870 --> 47:23.870
能打印到

47:23.870 --> 47:24.870
type和list的

47:24.870 --> 47:25.870
咱们先不去

47:25.870 --> 47:26.870
发请求啊

47:26.870 --> 47:27.870
咱们先来看一下

47:28.870 --> 47:29.870
我们这个

47:29.870 --> 47:30.870
如果说点击一个

47:30.870 --> 47:31.870
删除

47:31.870 --> 47:32.870
解除子铺铭关联

47:32.870 --> 47:33.870
我一点击

47:33.870 --> 47:34.870
确定

47:34.870 --> 47:35.870
确定之后呢

47:35.870 --> 47:36.870
92行打印出来一个

47:36.870 --> 47:37.870
add

47:37.870 --> 47:38.870
和这么一个

47:38.870 --> 47:39.870
list的对不对

47:39.870 --> 47:40.870
那你现在就是

47:40.870 --> 47:41.870
什么呢

47:41.870 --> 47:42.870
我们对这个

47:42.870 --> 47:43.870
里面的内容

47:43.870 --> 47:44.870
我是不是要给他

47:44.870 --> 47:45.870
进行一个

47:45.870 --> 47:46.870
删除啊

47:46.870 --> 47:47.870
对吧

47:47.870 --> 47:48.870
那要给他

47:48.870 --> 47:49.870
进行删除的话

47:49.870 --> 47:50.870
你直接的

47:50.870 --> 47:51.870
是不是sidechild

47:51.870 --> 47:52.870
的list的

47:52.870 --> 47:53.870
把我们原来的

47:53.870 --> 47:54.870
这一个

47:54.870 --> 47:55.870
给他干掉

47:55.870 --> 47:56.870
是不是就ok了

47:56.870 --> 48:00.660
干掉他的逻辑

48:00.660 --> 48:01.660
是什么样呢

48:01.660 --> 48:02.660
其实就是

48:02.660 --> 48:03.660
把这个

48:03.660 --> 48:04.660
我们选中的这一块

48:04.660 --> 48:05.660
也就是说

48:05.660 --> 48:06.660
解除子铺铭关联的时候

48:06.660 --> 48:07.660
我们把这个

48:07.660 --> 48:08.660
只给他

48:08.660 --> 48:09.660
清空调

48:09.660 --> 48:10.660
是不是就可以了

48:10.660 --> 48:11.660
所以说

48:11.660 --> 48:12.660
我们在这个

48:12.660 --> 48:13.660
给他传递

48:13.660 --> 48:14.660
push update

48:14.660 --> 48:15.660
list的时候

48:15.660 --> 48:16.660
因为我们这一块

48:16.660 --> 48:17.660
不想做操作了

48:17.660 --> 48:18.660
那我们就可以在这个

48:18.660 --> 48:19.660
child

48:19.660 --> 48:20.660
department的时候

48:20.660 --> 48:21.660
我们做一个

48:21.660 --> 48:22.660
判断啊

48:23.660 --> 48:24.660
做一个什么判断呢

48:24.660 --> 48:25.660
我们直接的

48:25.660 --> 48:26.660
可以把这个

48:26.660 --> 48:27.660
del list

48:27.660 --> 48:28.660
来给他

48:28.660 --> 48:30.660
直接的清空调

48:30.660 --> 48:31.660
我们直接这样写

48:31.660 --> 48:32.660
如果说

48:32.660 --> 48:33.660
我们的department

48:33.660 --> 48:34.660
的detail

48:34.660 --> 48:35.660
有职的话

48:35.660 --> 48:36.660
做一件事

48:36.660 --> 48:37.660
没有职的话

48:37.660 --> 48:38.660
咱们再做一件事

48:38.660 --> 48:39.660
如果说有职

48:39.660 --> 48:41.660
那咱们很轻松了

48:41.660 --> 48:42.660
现在啊

48:42.660 --> 48:43.660
这个里面

48:43.660 --> 48:44.660
我们直接的

48:44.660 --> 48:45.660
这个就不做判断了

48:45.660 --> 48:46.660
type呢

48:46.660 --> 48:48.660
就是我们的这个update

48:48.660 --> 48:49.660
这个咱们

48:49.660 --> 48:50.660
什么也不做了

48:50.660 --> 48:51.660
对吧

48:51.660 --> 48:52.660
否则呢

48:52.660 --> 48:53.660
那我们直接的

48:53.660 --> 48:54.660
在这个里面

48:54.660 --> 48:55.660
来做一件事

48:55.660 --> 48:57.660
那我们传递的时候

48:57.660 --> 48:58.660
首先这个del list

48:58.660 --> 48:59.660
就不是说

48:59.660 --> 49:00.660
你选中的这个

49:00.660 --> 49:01.660
我们要在原来的

49:01.660 --> 49:02.660
这个基础上

49:02.660 --> 49:03.660
给他做一个过滤

49:03.660 --> 49:04.660
怎么过滤呢

49:04.660 --> 49:05.660
我们可以打印一下

49:05.660 --> 49:06.660
之前是不是

49:06.660 --> 49:07.660
我们传递过来的时候

49:07.660 --> 49:08.660
有一个child list的

49:08.660 --> 49:09.660
然后呢

49:09.660 --> 49:10.660
我们现在

49:10.660 --> 49:12.660
还有一个什么del list

49:12.660 --> 49:13.660
两边我们一比较

49:13.660 --> 49:14.660
你就能发现

49:14.660 --> 49:16.660
这里面是有一些

49:16.660 --> 49:18.660
他是包含的关系的

49:18.660 --> 49:20.660
我们这里面增加子部门

49:20.660 --> 49:22.660
然后这个里面

49:22.660 --> 49:23.660
错了

49:23.660 --> 49:25.660
我们直接重新来一下

49:25.660 --> 49:26.660
解除子部门

49:26.660 --> 49:27.660
我们这里面一点击

49:27.660 --> 49:28.660
解除子部门

49:28.660 --> 49:29.660
解除子部门的时候

49:29.660 --> 49:30.660
我们这里面

49:30.660 --> 49:31.660
你看确定要删除吗

49:31.660 --> 49:32.660
确定

49:32.660 --> 49:33.660
确定这是两个值

49:33.660 --> 49:34.660
这个呢

49:34.660 --> 49:35.660
是我们

49:35.660 --> 49:36.660
原来的这个

49:36.660 --> 49:37.660
list

49:37.660 --> 49:38.660
券列表对不对

49:38.660 --> 49:39.660
这个呢是我们需要

49:39.660 --> 49:41.660
删除的这么一个子部门

49:41.660 --> 49:42.660
那你现在你就可以

49:42.660 --> 49:43.660
想一下

49:43.660 --> 49:44.660
我们是不是在原来的

49:44.660 --> 49:46.660
基础上把它给删除掉

49:46.660 --> 49:47.660
然后剩下的

49:47.660 --> 49:48.660
就是没选中的

49:48.660 --> 49:49.660
没选中的是我们

49:49.660 --> 49:51.660
需要在这个里面展示的

49:51.660 --> 49:52.660
那删除的呢

49:52.660 --> 49:53.660
其实就是我们

49:53.660 --> 49:54.660
被选中的对不对

49:54.660 --> 49:55.660
那我们直接的

49:55.660 --> 49:56.660
在这个里面

49:56.660 --> 49:57.660
做一件什么事呢

49:57.660 --> 49:59.660
给这个DL list的

49:59.660 --> 50:00.660
重新复制

50:00.660 --> 50:02.660
或者是我们直接

50:02.660 --> 50:04.660
定一个temporate

50:04.660 --> 50:06.660
temporate list的tmp

50:06.660 --> 50:09.660
temporate

50:09.660 --> 50:10.660
tmp list的吧

50:10.660 --> 50:13.660
等于我们child list

50:13.660 --> 50:15.660
这里面去一个什么呢

50:15.660 --> 50:17.660
我们去让它去filter

50:17.660 --> 50:19.660
child list的点filter

50:19.660 --> 50:20.660
然后呢这里面

50:20.660 --> 50:21.660
有一个item值

50:21.660 --> 50:23.660
把这个return先打掉

50:23.660 --> 50:26.660
item值干什么呢

50:26.660 --> 50:28.660
直接的filter item点

50:28.660 --> 50:29.660
下滑线id

50:29.660 --> 50:31.660
它不等于我们的这个

50:31.660 --> 50:32.660
什么呢

50:32.660 --> 50:34.660
就是DL list的

50:34.660 --> 50:36.660
里面的某一个值对不对

50:36.660 --> 50:37.660
那这里面就涉及到什么

50:37.660 --> 50:39.660
两层判断对不对

50:39.660 --> 50:40.660
两层判断

50:40.660 --> 50:41.660
那什么是两层判断

50:41.660 --> 50:42.660
也就是说

50:42.660 --> 50:44.660
其实你是不是把这个

50:44.660 --> 50:45.660
里面的这个内容

50:45.660 --> 50:47.660
给它做一个清空

50:47.660 --> 50:48.660
是不是就可以了

50:48.660 --> 50:53.250
怎么来实现这个呢

50:53.250 --> 50:55.250
我们回到代码里面

50:55.250 --> 50:56.250
在这个代码里面

50:56.250 --> 50:57.250
我们这里面

50:57.250 --> 50:58.250
有一个DL list的

50:58.250 --> 50:59.250
是不是

50:59.250 --> 51:00.250
那在判断的时候

51:00.250 --> 51:01.250
我们这里面

51:01.250 --> 51:02.250
首先第一个

51:02.250 --> 51:03.250
我们来处理一下

51:03.250 --> 51:04.250
就不这样写了

51:04.250 --> 51:06.250
我们可以通过

51:06.250 --> 51:08.250
一副department detail

51:08.250 --> 51:10.250
如果说有值

51:10.250 --> 51:12.250
有值这个事情

51:12.250 --> 51:14.250
就是相对比较简单了

51:14.250 --> 51:15.250
我们这个直接

51:15.250 --> 51:16.250
就是变成修改

51:16.250 --> 51:17.250
是不是就可以了

51:17.250 --> 51:18.250
如果说

51:18.250 --> 51:19.250
你要是没有值

51:19.250 --> 51:20.250
那现在你可能

51:20.250 --> 51:21.250
在新增部门

51:21.250 --> 51:22.250
对吧

51:22.250 --> 51:23.250
那这里面

51:23.250 --> 51:24.250
我们就判断一下

51:24.250 --> 51:25.250
首先呢

51:25.250 --> 51:28.250
我们获取一个ids

51:28.250 --> 51:29.250
这里面定一个

51:29.250 --> 51:32.250
const

51:32.250 --> 51:33.250
ids等于什么呢

51:33.250 --> 51:34.250
就是我们

51:34.250 --> 51:36.250
DL list.

51:36.250 --> 51:37.250
我们直接的

51:37.250 --> 51:40.250
就让它去map

51:40.250 --> 51:41.250
点map item

51:41.250 --> 51:43.250
然后打印出来

51:43.250 --> 51:45.250
item.下线id

51:45.250 --> 51:46.250
这得到一个集合

51:46.250 --> 51:47.250
对不对

51:47.250 --> 51:48.250
然后你拿到这个集合

51:48.250 --> 51:49.250
这个ids

51:49.250 --> 51:50.250
还有一个是什么呢

51:50.250 --> 51:51.250
是我们原来

51:51.250 --> 51:52.250
选的这个tilt list

51:52.250 --> 51:53.250
我们可以看一下

51:53.250 --> 51:55.250
这两个值

51:55.250 --> 51:56.250
在这个里面

51:56.250 --> 51:57.250
比如说点击一个

51:57.250 --> 51:58.250
点击一个

51:58.250 --> 51:59.250
我这里面

51:59.250 --> 52:00.250
解除子锋书关联

52:00.250 --> 52:01.250
确定

52:01.250 --> 52:02.250
然后这里面有一个数组

52:02.250 --> 52:03.250
对吧

52:03.250 --> 52:04.250
两个数组

52:04.250 --> 52:05.250
第一个数组

52:05.250 --> 52:06.250
是我们需要删除的

52:06.250 --> 52:08.250
这个列表的一个id

52:08.250 --> 52:09.250
还有一个呢

52:09.250 --> 52:10.250
是原来我们渲染的

52:10.250 --> 52:11.250
当然现在只有一个

52:11.250 --> 52:12.250
假如说

52:12.250 --> 52:13.250
我们要是两个呢

52:13.250 --> 52:14.250
两个这个事情

52:14.250 --> 52:15.250
就好弄一些了

52:15.250 --> 52:18.250
我们这样可以增加两个

52:18.250 --> 52:20.250
先把它干掉了

52:20.250 --> 52:21.250
我们直接的

52:21.250 --> 52:24.250
让它增加两个操作

52:24.250 --> 52:25.250
之后呢

52:25.250 --> 52:27.250
我们这样就能看出来了

52:28.250 --> 52:29.250
刷新一下

52:29.250 --> 52:30.250
刷新一下

52:30.250 --> 52:31.250
重新来一下

52:31.250 --> 52:32.250
到这个里面

52:32.250 --> 52:35.250
我们直接的创建

52:35.250 --> 52:36.250
创建的时候

52:36.250 --> 52:37.250
增加子部门

52:37.250 --> 52:38.250
然后呢

52:38.250 --> 52:39.250
这个里面选中两个

52:39.250 --> 52:40.250
选中两个之后

52:40.250 --> 52:41.250
那现在有俩子部门

52:41.250 --> 52:42.250
如果说选中一个

52:42.250 --> 52:44.250
外部前端一部

52:44.250 --> 52:45.250
那这个时候

52:45.250 --> 52:46.250
解除子部门关联

52:46.250 --> 52:47.250
想做的事情

52:47.250 --> 52:48.250
是把这个前端一部

52:48.250 --> 52:49.250
给干掉

52:49.250 --> 52:50.250
保留呢

52:50.250 --> 52:51.250
销售研发部

52:51.250 --> 52:53.250
那这时候点击确定

52:53.250 --> 52:54.250
点击确定

52:54.250 --> 52:55.250
你会发现

52:55.250 --> 52:57.250
这个里面有一个什么呢

52:57.250 --> 52:58.250
id

52:58.250 --> 53:00.250
id就是外部前端一部的

53:00.250 --> 53:02.250
他作为我们准备删除的

53:02.250 --> 53:03.250
原来这个里面

53:03.250 --> 53:05.250
是有两个值对不对

53:05.250 --> 53:06.250
那我们保留谁

53:06.250 --> 53:07.250
保留我们在这个

53:07.250 --> 53:08.250
销售研发部

53:08.250 --> 53:09.250
是不是就可以了

53:09.250 --> 53:10.250
所以说

53:10.250 --> 53:11.250
在这个里面

53:11.250 --> 53:12.250
做的时候

53:12.250 --> 53:13.250
我们直接的

53:13.250 --> 53:14.250
给他过滤一下

53:14.250 --> 53:15.250
是不是就可以了

53:15.250 --> 53:16.250
那我们把这个

53:16.250 --> 53:17.250
定一个Const

53:17.250 --> 53:18.250
AR

53:18.250 --> 53:19.250
或者是Temperate

53:19.250 --> 53:21.250
AR等于什么呢

53:21.250 --> 53:22.250
我们的

53:22.250 --> 53:23.250
child

53:23.250 --> 53:24.250
这里面写一下

53:24.250 --> 53:26.250
child list

53:26.250 --> 53:27.250
然后呢

53:27.250 --> 53:28.250
我们去使用他的

53:28.250 --> 53:29.250
filter

53:29.250 --> 53:30.250
方法

53:30.250 --> 53:35.750
child list.filter

53:35.750 --> 53:37.750
使用这个filter

53:37.750 --> 53:38.750
方法

53:38.750 --> 53:39.750
然后这里面

53:39.750 --> 53:40.750
有一个item

53:40.750 --> 53:41.750
item

53:41.750 --> 53:42.750
要做一个

53:42.750 --> 53:43.750
什么事呢

53:43.750 --> 53:44.750
我们这个

53:44.750 --> 53:45.750
取一个反

53:45.750 --> 53:49.750
取一个反是ids.incalus

53:49.750 --> 53:52.750
然后是item.side

53:52.750 --> 53:53.750
那也就是说

53:53.750 --> 53:54.750
把不包含的

53:54.750 --> 53:55.750
这个给取出来

53:55.750 --> 53:56.750
对不对

53:56.750 --> 53:57.750
不包含取出来之后

53:57.750 --> 53:58.750
那我们这个时候

53:58.750 --> 53:59.750
打印这个Temperate

54:00.750 --> 54:01.750
AR

54:01.750 --> 54:02.750
你来看一下

54:02.750 --> 54:03.750
这个结果

54:03.750 --> 54:05.750
现在还是两个对吧

54:05.750 --> 54:06.750
还是两个

54:06.750 --> 54:07.750
那我们现在

54:07.750 --> 54:08.750
选中一个web前段一步

54:08.750 --> 54:09.750
也就是说

54:09.750 --> 54:10.750
我想删除他

54:10.750 --> 54:11.750
点击确定

54:11.750 --> 54:12.750
点击确定之后

54:12.750 --> 54:13.750
原来呢

54:13.750 --> 54:14.750
这里面是有两个

54:14.750 --> 54:15.750
那我现在

54:15.750 --> 54:16.750
经过过滤之后

54:16.750 --> 54:17.750
我现在只保留了

54:17.750 --> 54:18.750
一个销售研发部

54:18.750 --> 54:20.750
就可以做这个位置

54:20.750 --> 54:21.750
是不是可以给我们

54:21.750 --> 54:22.750
进行一个传递了

54:22.750 --> 54:23.750
对不对

54:23.750 --> 54:24.750
那此时

54:24.750 --> 54:25.750
我们这个时候

54:25.750 --> 54:26.750
传递的时候

54:26.750 --> 54:27.750
就是把我们的

54:27.750 --> 54:28.750
TemperateAR

54:28.750 --> 54:29.750
给的传递

54:29.750 --> 54:30.750
Type呢

54:30.750 --> 54:31.750
我们直接给他指定

54:31.750 --> 54:32.750
i的

54:32.750 --> 54:33.750
是不是可以了

54:33.750 --> 54:34.750
这样就做到了一个

54:34.750 --> 54:35.750
什么呢

54:35.750 --> 54:36.750
我们在调用

54:36.750 --> 54:37.750
铺上update

54:37.750 --> 54:38.750
方法的时候

54:38.750 --> 54:39.750
回到我们这个

54:39.750 --> 54:40.750
form里面

54:40.750 --> 54:42.750
咱们从这个里面看

54:42.750 --> 54:43.750
首先他不走

54:43.750 --> 54:44.750
上面的对不对

54:44.750 --> 54:45.750
那走下面时候

54:45.750 --> 54:46.750
怎么走呢

54:46.750 --> 54:47.750
我们直接在这个里面

54:48.750 --> 54:49.750
这个时候

54:49.750 --> 54:50.750
我们获取到的

54:50.750 --> 54:51.750
这个List

54:51.750 --> 54:53.750
就是我们已经过滤完的

54:53.750 --> 54:54.750
也就是说

54:54.750 --> 54:55.750
现在有两

54:55.750 --> 54:56.750
当我选中一个之后

54:56.750 --> 54:57.750
我点击解除指纷门

54:57.750 --> 54:59.750
我这里面一点击确定

54:59.750 --> 55:00.750
你是想把这个外的

55:00.750 --> 55:01.750
前端一步

55:01.750 --> 55:02.750
是不是就给他删除掉

55:02.750 --> 55:03.750
保留一个

55:03.750 --> 55:04.750
是不是这样就对了

55:04.750 --> 55:05.750
对吧

55:05.750 --> 55:06.750
那如果在详情里面

55:06.750 --> 55:07.750
我们再来

55:08.750 --> 55:09.750
假如说在

55:09.750 --> 55:10.750
详情里面

55:10.750 --> 55:11.750
这个指纷门比较多

55:11.750 --> 55:12.750
我们删除一个

55:12.750 --> 55:14.750
把技术部给干掉

55:14.750 --> 55:15.750
那这个技术部

55:15.750 --> 55:16.750
删除的话

55:16.750 --> 55:17.750
我们走的逻辑是什么

55:17.750 --> 55:18.750
Type

55:19.750 --> 55:20.750
先回到这个里面

55:20.750 --> 55:21.750
我们回到

55:21.750 --> 55:22.750
Chill的Department里面

55:22.750 --> 55:24.750
回到Chill的Department里面

55:24.750 --> 55:26.750
我们直接在做删除的时候

55:26.750 --> 55:28.750
是不是要去

55:28.750 --> 55:30.750
Department的Detail有值对吧

55:30.750 --> 55:31.750
有值呢

55:31.750 --> 55:33.750
我们删除DL List的

55:33.750 --> 55:34.750
那这里面

55:34.750 --> 55:35.750
把所有删除的数组

55:35.750 --> 55:36.750
都已经准备好了

55:36.750 --> 55:37.750
准备好了之后

55:37.750 --> 55:38.750
那你就到这个里面

55:39.750 --> 55:40.750
到这个里面

55:40.750 --> 55:41.750
我们判断一下

55:41.750 --> 55:42.750
如果说Type

55:42.750 --> 55:43.750
等于Update

55:43.750 --> 55:44.750
然后我们这里面

55:44.750 --> 55:45.750
还得写一个条件

55:45.750 --> 55:46.750
这是什么呢

55:46.750 --> 55:47.750
我们Type

55:47.750 --> 55:49.750
或者说等于等于

55:49.750 --> 55:50.750
我们的DL

55:50.750 --> 55:51.750
对吧

55:51.750 --> 55:52.750
这个里面是DL

55:52.750 --> 55:54.750
咱们看一下

55:54.750 --> 55:56.750
这个Push

55:56.750 --> 55:57.750
Update

55:57.750 --> 55:59.750
那这个应该是一个

55:59.750 --> 56:00.750
删除此部门

56:00.750 --> 56:03.750
我们写一个DL吧

56:03.750 --> 56:05.750
这样方便区分

56:05.750 --> 56:06.750
那我们这个Type

56:06.750 --> 56:08.750
给它一个DL

56:08.750 --> 56:09.750
如果说

56:09.750 --> 56:10.750
你是修改

56:10.750 --> 56:11.750
或者是删除

56:11.750 --> 56:12.750
那这时候说明

56:12.750 --> 56:13.750
你要是对此部门

56:13.750 --> 56:14.750
进行动手

56:14.750 --> 56:15.750
我们这个时候

56:15.750 --> 56:17.750
要给它来做一个判断了

56:17.750 --> 56:18.750
怎么判断呢

56:18.750 --> 56:20.750
我们直接的这个里面

56:20.750 --> 56:22.750
是不是可以进行一个

56:22.750 --> 56:23.750
什么条件处理

56:23.750 --> 56:24.750
对不对

56:24.750 --> 56:25.750
你要是等于Update

56:25.750 --> 56:27.750
或者是等于DL

56:27.750 --> 56:29.750
你去调这个方法

56:29.750 --> 56:31.750
但是咱们说了

56:31.750 --> 56:32.750
现在如果说

56:32.750 --> 56:33.750
你要是DL的话

56:33.750 --> 56:34.750
那你这个里面

56:34.750 --> 56:35.750
是不是

56:35.750 --> 56:36.750
就是真的要

56:36.750 --> 56:37.750
一直Delete了

56:37.750 --> 56:38.750
对不对

56:38.750 --> 56:39.750
所以说我们这个时候

56:39.750 --> 56:40.750
还需要做一个什么事呢

56:40.750 --> 56:42.750
Const

56:42.750 --> 56:44.750
定一下Const

56:44.750 --> 56:45.750
我们这里面

56:45.750 --> 56:48.750
一直定一个什么delete

56:48.750 --> 56:50.750
Delete变量

56:50.750 --> 56:51.750
因为delete变量

56:51.750 --> 56:52.750
那我们这里面

56:52.750 --> 56:54.750
判断一下Type等于等于

56:54.750 --> 56:55.750
什么呢

56:55.750 --> 56:57.750
我们这个DL

56:57.750 --> 56:58.750
那如果说

56:58.750 --> 56:59.750
它要是False

56:59.750 --> 57:00.750
那就是代表着

57:00.750 --> 57:01.750
它先去想修改

57:01.750 --> 57:02.750
对不对

57:02.750 --> 57:03.750
如果说为出了

57:03.750 --> 57:04.750
那你这里面

57:04.750 --> 57:05.750
是真正的想去删除了

57:05.750 --> 57:06.750
所以说

57:06.750 --> 57:07.750
我们把这个DL

57:07.750 --> 57:09.750
再给它进行一个传递

57:09.750 --> 57:10.750
传递过去

57:11.750 --> 57:12.750
传递过去之后

57:12.750 --> 57:13.750
那我们告诉后端

57:13.750 --> 57:14.750
现在呢

57:14.750 --> 57:15.750
当前的部门

57:15.750 --> 57:16.750
想干掉一个子部门

57:16.750 --> 57:17.750
这样是不是

57:17.750 --> 57:18.750
它就知道了

57:18.750 --> 57:19.750
我们这么一个操作处理

57:19.750 --> 57:20.750
对吧

57:20.750 --> 57:21.750
好的

57:21.750 --> 57:22.750
那我们来看一下

57:22.750 --> 57:23.750
比如说这个技术部

57:23.750 --> 57:25.750
我想解除子部门关联

57:25.750 --> 57:26.750
我一点击

57:26.750 --> 57:28.750
确定要删除子部门吗

57:28.750 --> 57:29.750
我现在一点击确定

57:29.750 --> 57:30.750
好了

57:30.750 --> 57:31.750
干掉一个对不对

57:31.750 --> 57:32.750
干掉一个

57:32.750 --> 57:33.750
其实这个里面

57:33.750 --> 57:35.750
它应该去雕接口了

57:35.750 --> 57:37.750
这个里面Department

57:37.750 --> 57:39.750
我们看一下DressFalse

57:39.750 --> 57:41.750
这是获取列表的

57:41.750 --> 57:42.750
修改成功对不对

57:42.750 --> 57:43.750
然后这里面

57:43.750 --> 57:44.750
还会有一个什么呢

57:44.750 --> 57:45.750
Preview

57:45.750 --> 57:47.750
Preview是获取我们这个详情

57:47.750 --> 57:49.750
当你修改成功之后

57:49.750 --> 57:50.750
这个里面

57:50.750 --> 57:51.750
要进行一个重置

57:51.750 --> 57:52.750
然后呢

57:52.750 --> 57:53.750
我们上面那块儿

57:53.750 --> 57:55.750
也进行一个重置对不对

57:55.750 --> 57:56.750
比如说Web前端部

57:56.750 --> 57:58.750
现在还多是不是

57:58.750 --> 57:59.750
那我们再把这个

57:59.750 --> 58:01.750
大数据产品部给干掉

58:01.750 --> 58:02.750
我们再来试一下

58:02.750 --> 58:03.750
大数据产品部

58:03.750 --> 58:05.750
解除子部门关联

58:05.750 --> 58:06.750
一点击确定

58:06.750 --> 58:07.750
OK

58:07.750 --> 58:08.750
这个是不是就已经

58:08.750 --> 58:09.750
把它也可以干掉了

58:09.750 --> 58:10.750
对吧

58:10.750 --> 58:11.750
这个就是做了一个什么

58:11.750 --> 58:12.750
详细的区分

58:12.750 --> 58:14.750
比如说我们这个里面

58:14.750 --> 58:15.750
有这么多可选职

58:15.750 --> 58:17.750
我们增加这几个之后

58:17.750 --> 58:18.750
点击确定

58:18.750 --> 58:19.750
那这个时候

58:19.750 --> 58:20.750
我们现在这里面

58:20.750 --> 58:21.750
是不是就有了

58:21.750 --> 58:23.750
然后如果说想删除一个

58:23.750 --> 58:24.750
删除一个怎么办

58:24.750 --> 58:25.750
确定要删除选择

58:25.750 --> 58:26.750
我一点击删除

58:26.750 --> 58:28.750
是不是这样就没了对吧

58:28.750 --> 58:30.750
这个就是我们一个

58:30.750 --> 58:32.750
业务逻辑的一个优化处理

58:32.750 --> 58:36.380
回到我们的代码里

58:36.380 --> 58:37.380
目前呢

58:37.380 --> 58:38.380
我们代码其实

58:38.380 --> 58:39.380
还是有一个问题的

58:39.380 --> 58:40.380
我们可以来看一下

58:40.380 --> 58:41.380
什么问题

58:41.380 --> 58:43.380
比如说在我创建的时候

58:43.380 --> 58:44.380
现在呢

58:44.380 --> 58:45.380
我增加子部门

58:45.380 --> 58:48.380
这个时候我创建两个子部门

58:48.380 --> 58:49.380
之后呢

58:49.380 --> 58:50.380
如果说我再进行

58:50.380 --> 58:52.380
子部门添加的时候

58:52.380 --> 58:53.380
你会发现

58:53.380 --> 58:54.380
我原来已经选择了

58:54.380 --> 58:56.380
这个商品部和大数据部

58:56.380 --> 58:57.380
那这个时候

58:57.380 --> 58:59.380
其实商品部和大数据部

58:59.380 --> 59:00.380
是不是没有必要

59:00.380 --> 59:01.380
在这个里面展示的

59:01.380 --> 59:02.380
对吧

59:02.380 --> 59:03.380
这个呢是它的第一个问题

59:03.380 --> 59:04.380
第二个问题

59:04.380 --> 59:05.380
就是说

59:05.380 --> 59:08.380
在我对详情处理的时候

59:08.380 --> 59:09.380
它现在啊

59:09.380 --> 59:11.380
我们选中的这个部门

59:11.380 --> 59:12.380
叫web前端一部

59:12.380 --> 59:14.380
但是我增加子部门的时候

59:14.380 --> 59:16.380
web前端一部呢

59:16.380 --> 59:17.380
它目前还是存在的

59:17.380 --> 59:19.380
这个不太合理

59:19.380 --> 59:21.380
那既然你是当前指定的部门

59:21.380 --> 59:23.380
你就不能存在于

59:23.380 --> 59:24.380
这个子部门列表里面

59:24.380 --> 59:26.380
它产生的原因是什么呢

59:26.380 --> 59:27.380
就是说我们这个

59:27.380 --> 59:28.380
一级部门里面

59:28.380 --> 59:30.380
现在有它自己本身对吧

59:30.380 --> 59:31.380
那这个时候

59:31.380 --> 59:32.380
我们怎么来做处理

59:32.380 --> 59:33.380
这个呢

59:33.380 --> 59:35.380
就涉及到一个优化的点

59:35.380 --> 59:37.380
我们重新打开

59:37.380 --> 59:39.380
这个代码Department

59:39.380 --> 59:40.380
Components

59:40.380 --> 59:41.380
Components

59:41.380 --> 59:43.380
我们在这个表格展示的时候

59:43.380 --> 59:45.380
也就是说这个

59:45.380 --> 59:47.380
子部门这个增加子部门

59:47.380 --> 59:48.380
弹床展示的时候

59:48.380 --> 59:49.380
应该在这个

59:49.380 --> 59:51.380
AddChill的model里面

59:51.380 --> 59:52.380
在这个AddChill的model里面

59:52.380 --> 59:54.380
其实我们是通过

59:54.380 --> 59:55.380
DepartmentList的展示的

59:55.380 --> 59:56.380
对吧

59:56.380 --> 59:57.380
我们定义了一个

59:57.380 --> 59:58.380
部门的列表

59:58.380 --> 01:00:00.380
那这个部门列表展示的时候

01:00:00.380 --> 01:00:01.380
我们是需要

01:00:01.380 --> 01:00:03.380
给它定义一个条件的

01:00:03.380 --> 01:00:04.380
什么条件呢

01:00:04.380 --> 01:00:06.380
就是说你现在展示

01:00:06.380 --> 01:00:09.380
DepartmentList里面这些项

01:00:09.380 --> 01:00:11.380
不能等于我们当前这一项

01:00:11.380 --> 01:00:13.380
也就是说这里面我写一下

01:00:13.380 --> 01:00:16.380
ReturnItem.ParentList.Lance

01:00:16.380 --> 01:00:17.380
并且呢

01:00:17.380 --> 01:00:19.380
这里面有一个条件

01:00:19.380 --> 01:00:20.380
是什么呢

01:00:20.380 --> 01:00:22.380
DepartmentDetail点

01:00:22.380 --> 01:00:23.380
下好线ID

01:00:23.380 --> 01:00:24.380
也就是说当前

01:00:24.380 --> 01:00:26.380
我们打开这个弹床的

01:00:26.380 --> 01:00:28.380
这个部门的ID

01:00:28.380 --> 01:00:30.380
不能等于我们的什么呢

01:00:30.380 --> 01:00:32.380
现在这个Item.下好线ID

01:00:32.380 --> 01:00:33.380
也就是说

01:00:33.380 --> 01:00:35.380
他们不能相等啊

01:00:36.380 --> 01:00:37.380
如果说相等

01:00:37.380 --> 01:00:38.380
那我直接就给你干掉

01:00:38.380 --> 01:00:39.380
就可以了

01:00:39.380 --> 01:00:40.380
对吧

01:00:40.380 --> 01:00:41.380
这是一个优化的点

01:00:41.380 --> 01:00:42.380
我们可以来看一下

01:00:42.380 --> 01:00:44.380
现在我选择商品部

01:00:44.380 --> 01:00:46.380
那么我们这个子部门里面

01:00:46.380 --> 01:00:48.380
一定不允许有商品部

01:00:48.380 --> 01:00:49.380
对不对

01:00:49.380 --> 01:00:50.380
这个就完成了

01:00:50.380 --> 01:00:52.380
我们的一个优化操作

01:00:52.380 --> 01:00:53.380
这是第一个

01:00:53.380 --> 01:00:54.380
第二个

01:00:54.380 --> 01:00:55.380
就是刚才我们说的

01:00:55.380 --> 01:00:56.380
创建部门的时候

01:00:56.380 --> 01:00:57.380
咱们刷新一下

01:00:58.380 --> 01:01:00.380
当我进行部门创建

01:01:00.380 --> 01:01:01.380
这个有爆错

01:01:01.380 --> 01:01:02.380
对吧

01:01:02.380 --> 01:01:03.380
ReturnID

01:01:03.380 --> 01:01:05.380
是因为爆错的原因是什么

01:01:05.380 --> 01:01:06.380
其实这个里面

01:01:06.380 --> 01:01:07.380
非常好理解

01:01:07.380 --> 01:01:09.380
我们这个Department的

01:01:09.380 --> 01:01:10.380
Department的DetailID

01:01:10.380 --> 01:01:12.380
它这个出售化的时候

01:01:12.380 --> 01:01:13.380
是没有的

01:01:13.380 --> 01:01:14.380
因为我们这个创建

01:01:14.380 --> 01:01:16.380
本身就没有这个Department的Detail

01:01:16.380 --> 01:01:17.380
对吧

01:01:17.380 --> 01:01:18.380
我们这个里面

01:01:18.380 --> 01:01:19.380
直接给它一个容错就可以了

01:01:19.380 --> 01:01:20.380
好吧

01:01:20.380 --> 01:01:21.380
添加一个这个值

01:01:21.380 --> 01:01:23.380
然后咱们再来

01:01:23.380 --> 01:01:24.380
现在不适合

01:01:24.380 --> 01:01:25.380
就到Department的Detail

01:01:25.380 --> 01:01:26.380
这个问题了

01:01:26.380 --> 01:01:27.380
对不对

01:01:27.380 --> 01:01:28.380
我们这个里面

01:01:28.380 --> 01:01:30.380
去在做这个事情的时候

01:01:30.380 --> 01:01:32.380
比如说我们这里面创建

01:01:32.380 --> 01:01:33.380
的时候我增加子部门

01:01:33.380 --> 01:01:35.380
如果说我现在增加了

01:01:35.380 --> 01:01:36.380
两个子部门

01:01:36.380 --> 01:01:38.380
OK 点击确定

01:01:38.380 --> 01:01:39.380
然后我这里面

01:01:39.380 --> 01:01:40.380
再做一件事

01:01:41.380 --> 01:01:43.380
我添加一个技术部

01:01:43.380 --> 01:01:44.380
那添加一个技术部

01:01:44.380 --> 01:01:45.380
这时候我点击确定

01:01:45.380 --> 01:01:46.380
你会发现

01:01:46.380 --> 01:01:48.380
原来那两个被干掉了

01:01:48.380 --> 01:01:49.380
那这个干掉的逻辑

01:01:49.380 --> 01:01:50.380
是因为什么

01:01:50.380 --> 01:01:51.380
我们找到这个

01:01:51.380 --> 01:01:53.380
Chill的Department

01:01:53.380 --> 01:01:55.380
Chill的Department

01:01:55.380 --> 01:01:56.380
这个里面

01:01:56.380 --> 01:01:57.380
它去渲染

01:01:57.380 --> 01:01:59.380
是依靠一个什么呢

01:01:59.380 --> 01:02:00.380
就是我们传过来的

01:02:00.380 --> 01:02:01.380
一个Chill的例子

01:02:01.380 --> 01:02:03.380
这个Chill的例子的

01:02:03.380 --> 01:02:05.380
是我们Farm Components

01:02:05.380 --> 01:02:06.380
给我们传过来的

01:02:06.380 --> 01:02:07.380
Farm Compartment

01:02:07.380 --> 01:02:09.380
给我们传过来的时候

01:02:09.380 --> 01:02:10.380
因为我们直到

01:02:10.380 --> 01:02:12.380
现在没有Department的Detail

01:02:12.380 --> 01:02:13.380
那它直接的

01:02:13.380 --> 01:02:14.380
出售化的时候

01:02:14.380 --> 01:02:15.380
订一个空

01:02:15.380 --> 01:02:16.380
订一个空

01:02:16.380 --> 01:02:17.380
在这个

01:02:17.380 --> 01:02:18.380
我们新增子部门

01:02:18.380 --> 01:02:20.380
或者是修改子部门的时候

01:02:20.380 --> 01:02:21.380
它直接保我们

01:02:21.380 --> 01:02:23.380
这个铺上update的例子

01:02:23.380 --> 01:02:25.380
传过来的这个值

01:02:25.380 --> 01:02:26.380
把这个例子的

01:02:26.380 --> 01:02:27.380
直接给它进行一个复制了

01:02:27.380 --> 01:02:28.380
我们可以在这里面

01:02:28.380 --> 01:02:29.380
打印一下

01:02:29.380 --> 01:02:30.380
这里面我们打印一个什么呢

01:02:30.380 --> 01:02:31.380
List

01:02:31.380 --> 01:02:32.380
然后呢

01:02:32.380 --> 01:02:33.380
咱们一看这个打印纸

01:02:33.380 --> 01:02:34.380
就应该

01:02:34.380 --> 01:02:35.380
清楚了

01:02:35.380 --> 01:02:36.380
这里面是一个技术部

01:02:36.380 --> 01:02:37.380
对不对

01:02:37.380 --> 01:02:39.380
然后我现在选择两个

01:02:39.380 --> 01:02:41.380
选择两个我点击确定

01:02:41.380 --> 01:02:42.380
点击确定之后

01:02:42.380 --> 01:02:43.380
你看这个时候

01:02:43.380 --> 01:02:44.380
是不是这两个值

01:02:44.380 --> 01:02:45.380
在这个里面了

01:02:45.380 --> 01:02:46.380
所以说这个

01:02:46.380 --> 01:02:47.380
不太对

01:02:47.380 --> 01:02:48.380
这个显然不对

01:02:48.380 --> 01:02:50.380
那我们要做的是什么呢

01:02:50.380 --> 01:02:51.380
就是说

01:02:51.380 --> 01:02:52.380
你这底下

01:02:52.380 --> 01:02:53.380
是不是已经有两个了

01:02:53.380 --> 01:02:55.380
我在这两个基础上

01:02:55.380 --> 01:02:56.380
再给你新增一个

01:02:56.380 --> 01:02:58.380
是不是插入一个就对了

01:02:58.380 --> 01:02:59.380
那这个怎么来

01:02:59.380 --> 01:03:00.380
怎么来做啊

01:03:00.380 --> 01:03:01.380
因为我们知道

01:03:01.380 --> 01:03:02.380
点击的时候

01:03:02.380 --> 01:03:04.380
是Add Child来进行一个

01:03:04.380 --> 01:03:05.380
Push

01:03:05.380 --> 01:03:06.380
Update

01:03:06.380 --> 01:03:08.380
List的这么一个方法

01:03:08.380 --> 01:03:09.380
那这个时候

01:03:09.380 --> 01:03:11.380
我们就得来做一个判断了

01:03:11.380 --> 01:03:12.380
其实呢

01:03:12.380 --> 01:03:13.380
和我们删除这个

01:03:13.380 --> 01:03:14.380
差不多

01:03:14.380 --> 01:03:16.380
我们这里面来定理一下

01:03:16.380 --> 01:03:18.380
那这个时候怎么来定义呢

01:03:18.380 --> 01:03:20.380
为了方便逻辑处理

01:03:20.380 --> 01:03:21.380
我们直接

01:03:21.380 --> 01:03:22.380
把这个Department的

01:03:22.380 --> 01:03:24.380
Detail作为条件

01:03:24.380 --> 01:03:25.380
如果有我们这个

01:03:25.380 --> 01:03:26.380
Send Data

01:03:26.380 --> 01:03:27.380
出手的话的时候

01:03:27.380 --> 01:03:28.380
我们这里面

01:03:28.380 --> 01:03:31.380
定一下Cons的Send Data

01:03:31.380 --> 01:03:34.700
发送这个数据

01:03:34.700 --> 01:03:35.700
或者说呢

01:03:35.700 --> 01:03:37.700
我们不要这个Send Data

01:03:37.700 --> 01:03:38.700
然后呢

01:03:38.700 --> 01:03:39.700
我们直接的在这个里面

01:03:39.700 --> 01:03:41.700
把它放进来

01:03:41.700 --> 01:03:42.700
放进来之后

01:03:42.700 --> 01:03:43.700
那这个呢

01:03:43.700 --> 01:03:44.700
作为条件

01:03:44.700 --> 01:03:45.700
给它传过去

01:03:45.700 --> 01:03:46.700
没问题对不对

01:03:46.700 --> 01:03:49.700
放在这个里面

01:03:49.700 --> 01:03:50.700
那现在

01:03:50.700 --> 01:03:51.700
我先给它做一个

01:03:51.700 --> 01:03:53.700
简单的区分啊

01:03:53.700 --> 01:03:54.700
如果说

01:03:54.700 --> 01:03:55.700
你要是有的

01:03:55.700 --> 01:03:57.700
这个Department的Detail

01:03:57.700 --> 01:03:59.700
那现在你应该是在进行

01:03:59.700 --> 01:04:00.700
我们

01:04:00.700 --> 01:04:02.700
表达详情修改的

01:04:02.700 --> 01:04:04.700
这么一个操作对不对

01:04:04.700 --> 01:04:06.700
那如果说你没有呢

01:04:06.700 --> 01:04:07.700
那你现在是不是

01:04:07.700 --> 01:04:08.700
就是说

01:04:08.700 --> 01:04:09.700
想新增一个部门啊

01:04:09.700 --> 01:04:11.700
想新增一个部门的话

01:04:11.700 --> 01:04:12.700
那我这里面铺是

01:04:12.700 --> 01:04:14.700
update list的的时候

01:04:14.700 --> 01:04:15.700
我这个list

01:04:15.700 --> 01:04:16.700
这个呢

01:04:16.700 --> 01:04:17.700
是我们定义的

01:04:17.700 --> 01:04:18.700
Department list的

01:04:18.700 --> 01:04:19.700
原来是一个空书图

01:04:19.700 --> 01:04:20.700
对不对

01:04:20.700 --> 01:04:21.700
那我们这个里面

01:04:21.700 --> 01:04:22.700
要给你做一个什么

01:04:22.700 --> 01:04:25.700
要给你做一个扩展

01:04:25.700 --> 01:04:26.700
也就是说

01:04:26.700 --> 01:04:28.700
把原来的这个值

01:04:28.700 --> 01:04:29.700
给你进行

01:04:29.700 --> 01:04:30.700
一个插入就可以了

01:04:30.700 --> 01:04:31.700
对不对

01:04:31.700 --> 01:04:32.700
tap

01:04:32.700 --> 01:04:33.700
我们把它

01:04:33.700 --> 01:04:35.700
给它放在这个里面啊

01:04:35.700 --> 01:04:36.700
好了

01:04:36.700 --> 01:04:38.700
这个tap值还是不变的

01:04:38.700 --> 01:04:39.700
我们把这个tap

01:04:39.700 --> 01:04:40.700
也处理一下

01:04:40.700 --> 01:04:41.700
只不过是呢

01:04:41.700 --> 01:04:42.700
我们对这个tap的list

01:04:42.700 --> 01:04:44.700
要给它做一个扩展

01:04:44.700 --> 01:04:45.700
那扩展

01:04:45.700 --> 01:04:46.700
我们是不是得

01:04:46.700 --> 01:04:47.700
把原来的这两个值

01:04:47.700 --> 01:04:48.700
给它收集一下

01:04:48.700 --> 01:04:49.700
原来这两个值

01:04:49.700 --> 01:04:50.700
怎么来进行收集呢

01:04:50.700 --> 01:04:51.700
我们这里面

01:04:51.700 --> 01:04:52.700
也比较简单啊

01:04:52.700 --> 01:04:54.700
收集它的时候

01:04:54.700 --> 01:04:55.700
其实呢

01:04:55.700 --> 01:04:56.700
我们在这个

01:04:56.700 --> 01:04:58.700
chill的department的下面

01:04:58.700 --> 01:04:59.700
是不是调用了

01:04:59.700 --> 01:05:01.700
我们addchill的model

01:05:01.700 --> 01:05:02.700
对不对

01:05:02.700 --> 01:05:04.700
那我们可以写一个

01:05:04.700 --> 01:05:07.700
existence存在的

01:05:08.700 --> 01:05:10.700
existence存在的列表

01:05:10.700 --> 01:05:11.700
也就是说

01:05:11.700 --> 01:05:12.700
原来我们现在

01:05:12.700 --> 01:05:13.700
这个里面

01:05:13.700 --> 01:05:14.700
已经有的列表

01:05:14.700 --> 01:05:16.700
那已经有的列表

01:05:16.700 --> 01:05:17.700
咱们直接等于一个

01:05:17.700 --> 01:05:18.700
什么呢

01:05:18.700 --> 01:05:19.700
等于一个数组啊

01:05:19.700 --> 01:05:20.700
现在理论上

01:05:20.700 --> 01:05:21.700
实际上等于一个数组

01:05:21.700 --> 01:05:22.700
然后呢

01:05:22.700 --> 01:05:23.700
我们这里面

01:05:23.700 --> 01:05:24.700
接收它一下啊

01:05:24.700 --> 01:05:25.700
接收的时候

01:05:25.700 --> 01:05:26.700
就是在我们的

01:05:26.700 --> 01:05:28.700
addchill的model里面

01:05:28.700 --> 01:05:31.700
接收一个xs的list

01:05:31.700 --> 01:05:33.700
然后我们在做处理的时候

01:05:33.700 --> 01:05:35.700
把这个xslist

01:05:35.700 --> 01:05:37.700
直接的点

01:05:37.700 --> 01:05:38.700
一个什么

01:05:38.700 --> 01:05:39.700
concate

01:05:39.700 --> 01:05:40.700
给它做一个连接

01:05:40.700 --> 01:05:41.700
或者是我们

01:05:41.700 --> 01:05:43.700
chill的list

01:05:43.700 --> 01:05:44.700
然后呢

01:05:44.700 --> 01:05:45.700
点concate

01:05:45.700 --> 01:05:46.700
它就可以了

01:05:47.700 --> 01:05:48.700
对吧

01:05:48.700 --> 01:05:49.700
把他们俩

01:05:49.700 --> 01:05:50.700
给做一个拼接

01:05:50.700 --> 01:05:51.700
那这样形成

01:05:51.700 --> 01:05:52.700
一个新的数组

01:05:52.700 --> 01:05:54.700
保留了新值和老值

01:05:54.700 --> 01:05:55.700
接下来

01:05:55.700 --> 01:05:56.700
我们要做的事情

01:05:56.700 --> 01:05:57.700
就是把这个值

01:05:57.700 --> 01:05:58.700
给它进行一个传递

01:05:58.700 --> 01:05:59.700
是不是可以了

01:05:59.700 --> 01:06:01.700
值怎么来传递呢

01:06:01.700 --> 01:06:02.700
因为这个时候

01:06:02.700 --> 01:06:04.700
我们出手话的时候

01:06:04.700 --> 01:06:05.700
其实我们知道

01:06:05.700 --> 01:06:06.700
这里面也定义了

01:06:06.700 --> 01:06:07.700
一个dl list

01:06:07.700 --> 01:06:09.700
那定义了一个dl list

01:06:09.700 --> 01:06:10.700
其实这个是

01:06:10.700 --> 01:06:11.700
我们删除的

01:06:11.700 --> 01:06:13.700
跟我们现在展示的

01:06:13.700 --> 01:06:14.700
这个chill list

01:06:14.700 --> 01:06:15.700
没有任何关系

01:06:15.700 --> 01:06:16.700
对不对

01:06:16.700 --> 01:06:17.700
我们其实选中

01:06:17.700 --> 01:06:18.700
或者不选中

01:06:18.700 --> 01:06:20.700
都靠这个chill list

01:06:20.700 --> 01:06:21.700
来进行渲染

01:06:21.700 --> 01:06:22.700
去看一下

01:06:22.700 --> 01:06:23.700
chill的list

01:06:23.700 --> 01:06:25.700
来咱们打印一下

01:06:25.700 --> 01:06:27.700
在这个里面

01:06:27.700 --> 01:06:29.700
我们现在刷新

01:06:29.700 --> 01:06:31.700
刷新之后

01:06:31.700 --> 01:06:32.700
再做处理

01:06:32.700 --> 01:06:33.700
服务器错

01:06:33.700 --> 01:06:34.700
等会

01:06:34.700 --> 01:06:36.700
123qw

01:06:36.700 --> 01:06:38.700
这里面123qw

01:06:38.700 --> 01:06:41.010
好的

01:06:41.010 --> 01:06:42.010
那咱们

01:06:42.010 --> 01:06:43.010
回到部门

01:06:43.010 --> 01:06:45.010
公司组织架构图

01:06:46.010 --> 01:06:48.010
来咱们看一眼

01:06:48.010 --> 01:06:49.010
创建一个部门

01:06:49.010 --> 01:06:50.010
创建一个部门

01:06:50.010 --> 01:06:51.010
我增加紫部门

01:06:51.010 --> 01:06:52.010
此时现在都没有

01:06:52.010 --> 01:06:54.010
什么时候会有呢

01:06:54.010 --> 01:06:55.010
当我选中了两个

01:06:55.010 --> 01:06:57.010
选中了两个之后

01:06:57.010 --> 01:06:59.010
这里面有爆错

01:06:59.010 --> 01:07:00.010
爆错的原因是

01:07:00.010 --> 01:07:02.010
不能读取到id

01:07:02.010 --> 01:07:04.010
这个事情尴大了

01:07:04.010 --> 01:07:05.010
是什么呢

01:07:05.010 --> 01:07:06.010
我们这个里面

01:07:06.010 --> 01:07:07.010
刚才对它的操作

01:07:07.010 --> 01:07:09.010
现在好像是

01:07:09.010 --> 01:07:11.010
引起了一个问题

01:07:11.010 --> 01:07:13.010
那我们来看一下

01:07:13.010 --> 01:07:14.010
这个concuit

01:07:14.010 --> 01:07:16.010
xtest list

01:07:16.010 --> 01:07:20.010
chill的list.c1ct

01:07:20.010 --> 01:07:21.010
难道是这个里面

01:07:21.010 --> 01:07:22.010
不能用这个方法吗

01:07:22.010 --> 01:07:23.010
我们先看一下

01:07:23.010 --> 01:07:25.010
先给它一个list

01:07:25.010 --> 01:07:27.010
然后我们这里面指定吧

01:07:27.010 --> 01:07:29.010
指定是chill的list

01:07:29.010 --> 01:07:31.010
给它做一个打印

01:07:31.010 --> 01:07:33.010
我们这里面打印什么

01:07:33.010 --> 01:07:36.010
log一个chill的list.concuit

01:07:36.010 --> 01:07:38.010
xtest list

01:07:38.010 --> 01:07:39.010
iTest list

01:07:39.010 --> 01:07:40.010
现在应该是

01:07:40.010 --> 01:07:41.010
我还没有传递过来

01:07:41.010 --> 01:07:42.010
对不对

01:07:42.010 --> 01:07:43.010
那这个里面

01:07:43.010 --> 01:07:44.010
我给它注释掉了

01:07:44.010 --> 01:07:46.010
这个事情就尴大了

01:07:46.010 --> 01:07:47.010
先给它个默认值

01:07:47.010 --> 01:07:48.010
防止的爆错

01:07:48.010 --> 01:07:49.010
咱们先把这个验证给过了

01:07:49.010 --> 01:07:50.010
否则它过不了

01:07:51.010 --> 01:07:53.010
我这里面选中两个点击确定

01:07:53.010 --> 01:07:55.010
点击确定你会发现

01:07:55.010 --> 01:07:56.010
我们在这个

01:07:57.010 --> 01:07:59.010
咱们看哪一个

01:07:59.010 --> 01:08:02.010
看我们的chill的department里面的一个打印

01:08:02.010 --> 01:08:04.010
chill的department里面打印

01:08:04.010 --> 01:08:05.010
其实这里面

01:08:05.010 --> 01:08:06.010
应该找这个

01:08:06.010 --> 01:08:07.010
是不是这里面有两个值

01:08:07.010 --> 01:08:08.010
对吧

01:08:08.010 --> 01:08:09.010
那有两个值

01:08:09.010 --> 01:08:11.010
这是第1个和第2个

01:08:11.010 --> 01:08:12.010
大数据和销售研发部

01:08:12.010 --> 01:08:15.010
那其实我们现在就明确了

01:08:15.010 --> 01:08:16.010
你出手的话

01:08:16.010 --> 01:08:17.010
你是不是没有值

01:08:17.010 --> 01:08:18.010
没有值

01:08:18.010 --> 01:08:19.010
那就代表你没选中

01:08:19.010 --> 01:08:20.010
你现在有值的

01:08:20.010 --> 01:08:21.010
是不是代表你选中

01:08:21.010 --> 01:08:23.010
所以说我们直接给它传值的时候

01:08:23.010 --> 01:08:24.010
传什么值

01:08:24.010 --> 01:08:26.010
我们xs的list

01:08:26.010 --> 01:08:28.010
是不是可以把chill的list

01:08:28.010 --> 01:08:29.010
传低过去就可以

01:08:29.010 --> 01:08:30.010
对吧

01:08:30.010 --> 01:08:32.010
那它接收一个chill的list

01:08:32.010 --> 01:08:33.010
这个时候

01:08:33.010 --> 01:08:35.010
它就可以做一个什么拼接了

01:08:35.010 --> 01:08:37.010
拼接的规则是什么

01:08:37.010 --> 01:08:39.010
就是我原来chill的list

01:08:39.010 --> 01:08:41.010
然后去conquer它

01:08:41.010 --> 01:08:43.010
我们已经在这个表格里面

01:08:43.010 --> 01:08:45.010
保存了这么一个值

01:08:45.010 --> 01:08:47.010
这样就给它添加进去了

01:08:47.010 --> 01:08:48.010
咱们来试一下

01:08:48.010 --> 01:08:49.010
刷新

01:08:49.010 --> 01:08:51.010
我们重新来处理一下这个逻辑

01:08:51.010 --> 01:08:52.010
到员工

01:08:52.010 --> 01:08:54.010
我们点击创建

01:08:54.010 --> 01:08:56.010
点击创建的时候增加子部门

01:08:56.010 --> 01:08:57.010
这个时候

01:08:57.010 --> 01:08:58.010
那现在是没有

01:08:58.010 --> 01:09:00.010
我点击一个OK大数据

01:09:00.010 --> 01:09:01.010
你看现在大数据有了

01:09:01.010 --> 01:09:02.010
是不是

01:09:02.010 --> 01:09:03.010
大数据有了之后

01:09:03.010 --> 01:09:04.010
这里面有一个指

01:09:04.010 --> 01:09:06.010
然后我再增加一个子部门

01:09:06.010 --> 01:09:08.010
那这时候我添加销售部和技术部

01:09:08.010 --> 01:09:10.010
此时你要做的一个操作是什么呢

01:09:10.010 --> 01:09:12.010
我们把原来的这个指

01:09:12.010 --> 01:09:15.010
然后进行一个conquer的拼接

01:09:15.010 --> 01:09:17.010
这里面我点击确定

01:09:17.010 --> 01:09:19.010
大数据和销售部技术部

01:09:19.010 --> 01:09:20.010
是不是这个就都有

01:09:20.010 --> 01:09:21.010
对吧

01:09:21.010 --> 01:09:22.010
那这个就没问题了

01:09:22.010 --> 01:09:24.010
然后这个里面没问题之后

01:09:24.010 --> 01:09:26.010
咱们再暴露一个其他问题

01:09:26.010 --> 01:09:29.010
childdepartment.js41

01:09:29.010 --> 01:09:32.010
我们先把这个打印值给它关了

01:09:32.010 --> 01:09:35.010
这里面应该是有一个console值

01:09:35.010 --> 01:09:37.010
在这个里面把它关了

01:09:37.010 --> 01:09:39.010
要不然它一直打印

01:09:39.010 --> 01:09:42.010
还有一个是我们的index.js

01:09:42.010 --> 01:09:44.010
index.js咱们这个先不考虑它

01:09:44.010 --> 01:09:45.010
咱们来看这个问题

01:09:45.010 --> 01:09:46.010
啥问题呢

01:09:46.010 --> 01:09:48.010
现在我这个销售技术和大数据

01:09:48.010 --> 01:09:49.010
已经存在了

01:09:49.010 --> 01:09:51.010
那我再增加子部门的时候

01:09:51.010 --> 01:09:54.010
你看销售大数据和这个技术部

01:09:54.010 --> 01:09:56.010
是不是还在这个里面

01:09:56.010 --> 01:09:57.010
这个显然就不对了

01:09:57.010 --> 01:09:58.010
我已经保存了三个

01:09:58.010 --> 01:10:00.010
那你其实在这个时候

01:10:00.010 --> 01:10:02.010
你是不是没有必要再给我

01:10:02.010 --> 01:10:03.010
来展示这几个

01:10:03.010 --> 01:10:04.010
对不对

01:10:04.010 --> 01:10:05.010
那没有必要展示这几个

01:10:05.010 --> 01:10:06.010
应该是怎么来做呢

01:10:06.010 --> 01:10:09.010
我们在这个add child的model的时候

01:10:09.010 --> 01:10:11.010
我们在这个里面

01:10:11.010 --> 01:10:14.010
因为我们接收了extence list

01:10:14.010 --> 01:10:16.010
那你接收到它之后

01:10:16.010 --> 01:10:19.010
其实我们去展示列表的时候

01:10:19.010 --> 01:10:20.010
我们是不是

01:10:20.010 --> 01:10:21.010
除了这个过滤条件

01:10:21.010 --> 01:10:23.010
我们还可以加一个过滤条件

01:10:23.010 --> 01:10:25.010
那最后一个过滤条件就是什么呢

01:10:25.010 --> 01:10:27.010
我们现在可以得到一个什么

01:10:27.010 --> 01:10:29.010
根据这个extence list的

01:10:29.010 --> 01:10:32.010
可以得到一个ids的数组对不对

01:10:32.010 --> 01:10:34.010
那我们这里面可以写一下

01:10:34.010 --> 01:10:37.010
extence list的点

01:10:37.010 --> 01:10:38.010
一个什么呢

01:10:38.010 --> 01:10:40.010
map

01:10:40.010 --> 01:10:43.010
先是获得一个数组的

01:10:43.010 --> 01:10:45.010
id的一个数组对象

01:10:45.010 --> 01:10:47.010
item.下线id

01:10:47.010 --> 01:10:48.010
是不是

01:10:48.010 --> 01:10:50.010
那这样我们拿到它之后

01:10:50.010 --> 01:10:51.010
那这个里面

01:10:51.010 --> 01:10:53.010
我们就可以使用一个什么

01:10:53.010 --> 01:10:55.010
点inc loose方法

01:10:55.010 --> 01:10:56.010
点inc loose

01:10:56.010 --> 01:10:58.010
判断一个数组

01:10:58.010 --> 01:11:00.010
是不是存在于我们这个里面

01:11:00.010 --> 01:11:03.010
比如说item.下线id

01:11:03.010 --> 01:11:04.010
如果说你要存在

01:11:04.010 --> 01:11:05.010
那是不是就不展示了

01:11:05.010 --> 01:11:06.010
那我们这时候

01:11:06.010 --> 01:11:08.010
是不是给它一个飞就可以了

01:11:08.010 --> 01:11:09.010
咱们再来验证一下

01:11:09.010 --> 01:11:11.010
现在销售技术和大域

01:11:11.010 --> 01:11:12.010
都在这个里面了

01:11:12.010 --> 01:11:13.010
那现在呢

01:11:13.010 --> 01:11:15.010
我们是不是不展示它就可以了

01:11:15.010 --> 01:11:18.010
那这样就做到了一个优化的点

01:11:18.010 --> 01:11:19.010
以上这些呢

01:11:19.010 --> 01:11:21.010
就是我们针对这个

01:11:21.010 --> 01:11:25.010
当前我们直接的这个里面的

01:11:25.010 --> 01:11:29.010
所有的部门的相关的一个业务处理

01:11:29.010 --> 01:11:30.010
那么我们再来回忆一下

01:11:30.010 --> 01:11:32.010
部门都做了哪些事

01:11:32.010 --> 01:11:33.010
首先我们借助一个

01:11:33.010 --> 01:11:35.010
数状图的组件

01:11:35.010 --> 01:11:37.010
来进行一个数状图的基本展示

01:11:37.010 --> 01:11:39.010
当然这个是比较简单的

01:11:39.010 --> 01:11:40.010
之后呢

01:11:40.010 --> 01:11:42.010
我们最核心的部分是什么呢

01:11:42.010 --> 01:11:45.010
就是对一个磨态框的一个附用

01:11:45.010 --> 01:11:47.010
那在磨态框附用的时候

01:11:47.010 --> 01:11:48.010
我们处理又逻辑

01:11:48.010 --> 01:11:51.010
重中之重是在这个紫部门的一个处理

01:11:51.010 --> 01:11:54.010
然后像这个部门负责人这一块

01:11:54.010 --> 01:11:55.010
因为我们在员工这一块

01:11:55.010 --> 01:11:58.010
都已经实现过这种功能了

01:11:58.010 --> 01:11:59.010
所以说这个里面

01:11:59.010 --> 01:12:02.010
我们就非常简单的

01:12:02.010 --> 01:12:04.010
快速给它拿过来附用就OK了

01:12:04.010 --> 01:12:05.010
对不对

01:12:05.010 --> 01:12:06.010
紫部门这一个逻辑

01:12:06.010 --> 01:12:09.010
因为它签到层级是比较多的

01:12:09.010 --> 01:12:11.010
然后我们可以进行增加

01:12:11.010 --> 01:12:12.010
紫部门的操作

01:12:12.010 --> 01:12:13.010
那在这个时候呢

01:12:13.010 --> 01:12:15.010
我们又进行了一个弹床的打开

01:12:15.010 --> 01:12:17.010
那这里面弹床签到弹床

01:12:17.010 --> 01:12:19.010
当我这个弹床

01:12:19.010 --> 01:12:20.010
做相应处理的时候

01:12:20.010 --> 01:12:21.010
那这个时候呢

01:12:21.010 --> 01:12:24.010
还要通知我们的一个什么呢

01:12:24.010 --> 01:12:25.010
当前的这个

01:12:25.010 --> 01:12:27.010
最外层的这个弹床改变内容

01:12:27.010 --> 01:12:28.010
并且呢

01:12:28.010 --> 01:12:29.010
最外层弹床改变内容之后

01:12:29.010 --> 01:12:31.010
把我们紫部门的列表

01:12:31.010 --> 01:12:33.010
也要做一个渲染处理

01:12:33.010 --> 01:12:34.010
这个呢

01:12:34.010 --> 01:12:36.010
是它的一个逻辑的复杂点

01:12:36.010 --> 01:12:37.010
所以说同学们

01:12:37.010 --> 01:12:38.010
做这一块的时候

01:12:38.010 --> 01:12:40.010
要按着自己的这个

01:12:40.010 --> 01:12:41.010
先想一下

01:12:41.010 --> 01:12:42.010
想完了之后呢

01:12:42.010 --> 01:12:44.010
再慢慢的来实现

01:12:44.010 --> 01:12:45.010
就ok了

01:12:45.010 --> 01:12:46.010
好的

01:12:46.010 --> 01:12:47.010
以上这些呢

01:12:47.010 --> 01:12:49.010
就是我们本节课的内容

01:12:49.010 --> 01:12:51.010
我们这节课就到这里

01:12:51.010 --> 01:12:52.010
谢谢大家

