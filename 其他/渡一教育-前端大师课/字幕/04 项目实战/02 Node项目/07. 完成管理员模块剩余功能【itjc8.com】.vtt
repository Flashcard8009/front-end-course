WEBVTT

00:00.620 --> 00:03.940
我们接着来写这个服务习惯程序

00:04.200 --> 00:07.280
我们这节课的话把那个管理员这个模块

00:07.540 --> 00:09.320
最后一个接口我们把它写了

00:09.840 --> 00:12.640
最后一个接口是这个更新管理员

00:12.900 --> 00:14.440
对吧 我们来大致

00:14.700 --> 00:17.000
扭眼啊 这边接口路径

00:17.260 --> 00:19.300
他的这个方法是铺着

00:19.560 --> 00:22.900
然后接下来这边那是API and the Mint 是吧

00:23.160 --> 00:27.500
然后请求参数 你注意你要修改 修改的话那这边要求你带什么过去

00:28.020 --> 00:29.300
带这个Token

00:29.760 --> 00:30.580
把Token带过去

00:31.100 --> 00:31.600
对不对

00:31.860 --> 00:34.160
好 接下来的话这边的话他的这个body

00:34.680 --> 00:37.740
body的话有这么信息 有他的这个内幕

00:38.000 --> 00:39.020
有他的ID

00:39.280 --> 00:42.100
然后有他的这个密码以及旧的密码

00:42.620 --> 00:44.400
我们有写什么东西可以修改

00:45.160 --> 00:46.700
首先这个内幕是不可以修改

00:47.480 --> 00:49.520
对不对 我可以把这个内幕进行一个修改

00:49.780 --> 00:52.340
ID的话一般是不允许你修改的

00:52.600 --> 00:54.640
一开始你ID定了就定了

00:55.420 --> 00:55.920
对不对

00:56.180 --> 00:58.480
好 那密码的话是可以修改的

00:59.500 --> 01:03.340
但是密码修改的话要求什么呢 要求就是你首先要输入这个旧的密码

01:03.860 --> 01:05.400
然后接下来是不是才能进行修改

01:05.660 --> 01:07.440
其实包括你修改这个名字

01:07.700 --> 01:11.020
你名字你要修改名字是不是也要求你输入这个旧的密码

01:11.280 --> 01:13.080
你说你旧的密码输队了

01:13.340 --> 01:14.620
是不是我才允许你修改

01:14.880 --> 01:17.940
你如果没有输入队的话 让我这边的话是会给你报一个

01:18.200 --> 01:19.740
你这边比如说这个密码

01:20.240 --> 01:20.740
不对

01:21.000 --> 01:22.040
对吧 验证错误

01:22.300 --> 01:22.800
OK

01:23.060 --> 01:28.940
好 修改之后然后接下来返回数据 数据的话有code 有MOSG 有data

01:29.140 --> 01:32.220
data里面的话有你的这个ID 有你的这个内幕

01:32.480 --> 01:35.280
如果你改了内幕 那这个就是你新的内幕信息

01:35.540 --> 01:36.580
然后以及你这个

01:37.860 --> 01:41.940
就ID是吧 那这个密码密码没有 反正就这三个信息

01:42.200 --> 01:43.740
是吧 反而是三个信息

01:44.000 --> 01:45.540
大致的话就是这样子的

01:46.040 --> 01:46.700
也不难

01:47.060 --> 01:47.580
对吧

01:47.840 --> 01:49.880
好 那这样来呗 最后一个

01:50.140 --> 01:52.700
来到首先的话来到这个enemy

01:53.460 --> 01:55.780
难道enemy我们这边的话我们新增一个

01:56.780 --> 01:59.060
这边的话就是应该是

01:59.820 --> 02:01.260
呃 修改

02:03.090 --> 02:05.870
router 然后点什么

02:06.130 --> 02:07.290
这边应该是put

02:08.050 --> 02:08.570
对不对

02:08.830 --> 02:11.130
好 这里 这里的话你看一下这个接口

02:11.390 --> 02:14.710
接口的话它这边是APIenemy

02:14.970 --> 02:18.550
也就是说APIenemy是直接就是我们这边

02:18.810 --> 02:19.830
APIenemy

02:20.330 --> 02:23.930
对不对 那这个二级路由的话 我们这边就直接写个横纲就可以了

02:24.450 --> 02:26.990
好 然后接下来这边的话 一个一步的

02:27.190 --> 02:27.950
function

02:28.950 --> 02:31.550
哎 你看只要一个写通了 后面是不是就

02:31.810 --> 02:32.590
很顺畅了

02:33.350 --> 02:34.110
对不对

02:34.370 --> 02:37.430
所以你这边的话这个写服务写乱代码的话就是这样子的

02:37.690 --> 02:41.030
一个模块写通了之后 后面模块的话慢慢就写得来了

02:41.290 --> 02:43.830
可能就是有些模块他有些特殊的需求

02:44.090 --> 02:45.890
啊 这个的话需要特殊的处理

02:46.150 --> 02:49.470
如果没有特殊的处理的话 那后面就我们会越写越快的

02:50.230 --> 02:50.750
知道吧

02:51.270 --> 02:54.350
好了 首先的话这边路由成路由成的话会拿到什么信息

02:55.070 --> 03:02.310
路由成的话是不是会拿到这一块信息啊 对不对 这一块信息就干嘛呢 是不是直接传给了这个服务成就可以啊

03:02.910 --> 03:04.670
啊 所以我们这边的话就直接

03:05.830 --> 03:07.750
我们服务成 然后我们搞一个方法嘛

03:08.750 --> 03:10.910
这边啊 这个写了的就把它折起来

03:11.510 --> 03:12.590
这个是登录

03:13.910 --> 03:19.510
啊 是吧 注释写一下 这是登录 好 然后接下来的话是什么呢 接下来的话是这个更新

03:20.030 --> 03:25.030
对吧 更新更新的话 这边model

03:26.470 --> 03:32.790
model.export 点这边的话update and me service

03:33.630 --> 03:34.470
加一个service

03:35.150 --> 03:40.350
啊 然后sync 方形 啊 这边啊 传入你的这个账号信息

03:40.790 --> 03:41.350
account

03:43.190 --> 03:44.430
account infer

03:45.510 --> 03:48.510
传入过来 好 那现在在这边 这边呢 就导入一下

03:49.430 --> 03:53.350
这边的话就是update and me service

03:55.540 --> 04:00.580
好 然后这里 这里的话就直接res点剩的

04:01.340 --> 04:04.740
好 然后这里的话需要等待一下await

04:06.700 --> 04:10.940
那通过req 点body 把它拿到

04:11.940 --> 04:16.780
对不对 OK 所以这一层的话不需要做什么处理啊 直接传递过去

04:17.260 --> 04:23.860
就可以了 好 那接下来的话来到我们的这个service 层 service 层是我们具体的这个业部逻辑层

04:24.380 --> 04:29.740
那这一层我们就需要做一些事情了 那我们这一层我们思考一下 我们需要做什么事情

04:30.580 --> 04:32.660
我们首先的话需要就是

04:34.380 --> 04:37.020
验证一下他的救命嘛 是不对

04:38.220 --> 04:43.620
对吧 验证他的救命嘛 对不对 那这个怎么验证呢 他这边的话是不是给你发送了的

04:44.300 --> 04:46.420
回头看一下 他这边是不是给你

04:46.780 --> 04:48.820
发送了这个账号

04:49.340 --> 04:51.380
就他的这个id 以及他救的密码

04:52.420 --> 04:55.740
对不对 让我们这个登录接口是不是又写了的呀

04:56.500 --> 04:59.580
在这个andme.dao 这里

05:00.860 --> 05:01.380
这个位置

05:02.380 --> 05:06.500
这里 我们是不是又写了这个login.dao 是不是写了这个方法的

05:07.260 --> 05:09.580
让我这边是不是直接调用这个方法就可以了

05:10.060 --> 05:11.340
调用这个方法 然后

05:11.860 --> 05:15.460
他就查询 根据你传过来的id 以及这个密码

05:15.660 --> 05:19.500
进行查询 如果有的话 我就给你返回这个账号信息

05:19.760 --> 05:23.100
如果没有的话 我就干嘛 我返回的是一个什么 还记不记得

05:23.860 --> 05:28.220
应该就是上上节课讲的 是什么 是不是一个诺

05:28.980 --> 05:31.280
对不对 是个空 那这个问题就简单了

05:31.540 --> 05:36.400
那我这边的话就把那个login.dao 这边有 是吧 直接就来呗

05:37.180 --> 05:39.480
那这里的话就直接调这个login.dao

05:39.740 --> 05:40.500
这个dao

05:41.020 --> 05:42.800
好 然后把什么呢 把这个

05:43.160 --> 05:46.240
信息把它传过去 首先一个是这个login id

05:46.760 --> 05:50.080
login id的话就应该是你这个account infer

05:50.680 --> 05:52.920
里面你会给我传一个login id

05:53.720 --> 05:57.760
对吧 然后接下来还有个什么 还有一个这个login pwd

05:58.880 --> 06:02.560
这个的话就是啊 你要用这个md5进行一次加密

06:03.240 --> 06:05.280
好 这边的话account infer

06:06.400 --> 06:11.200
点old哈 你不要传错了哈 这边就是应该是他的救命嘛 old login

06:12.200 --> 06:14.240
login这个pwd

06:15.280 --> 06:19.560
ok啊 掉登录 好 然后接下来这边到一步 所以说你这边的话 等待一下

06:20.240 --> 06:24.960
wait 好 然后接下来的话 这边const and infer

06:25.960 --> 06:32.240
这边让我给你写一下注射 这里就是在干嘛呢 这里的话就是第一步 查询就根据

06:33.280 --> 06:38.120
根据传入的账号信息

06:39.000 --> 06:47.920
查询对应的用户 对吧 注意使用救命嘛

06:49.360 --> 06:57.440
ok 使用救命嘛 好了 接下来这个andemm infer就有两种情况 要么的话就是查到了 要么的话就是没有查到

06:58.200 --> 06:59.920
对不对 好了 接下来的话我们这里

07:01.120 --> 07:03.400
第二步啊 分为两种情况

07:04.400 --> 07:13.360
两种情况 哪两种呢 有用户信息和没有用户信息

07:14.720 --> 07:25.040
用户 用户信息 那你有的话就是什么 有的话那就是说明你救命嘛 输对了嘛 输对了就开始改嘛

07:25.880 --> 07:36.480
对不对 好 那这边呢 就是if andemm infer 并且andemm infer.theta values

07:37.280 --> 07:41.760
还记不记得 就我们之前这个登录的时候 是不是也是这样写的 对不对

07:42.760 --> 07:47.840
把这个折起来 那这边呢就说明是正确的 对吧 我就不写注射了 好 进 else

07:48.760 --> 07:54.880
如果进 else的话说明什么 说明是不是你密码 输入不正确

07:55.880 --> 07:59.160
对不对 你字密码不正确的时候 说明这个没有查到这个用户嘛

08:00.000 --> 08:02.920
对吧 那我们就该干嘛啊 这就是应该是抛出

08:04.840 --> 08:11.880
抛出制定义错误 对吧 我们有个什么制定义错误 我们这边我们过来揉一眼

08:12.680 --> 08:17.360
这边的话有一个 是不是验证错误 对不对

08:17.840 --> 08:21.760
Validation error 说我们这边的话就应该是抛出这么一个错误

08:22.480 --> 08:25.560
那我们这边我们来 这边的话Const

08:26.680 --> 08:34.850
等于一个require 这边的话 把这个写上

08:38.010 --> 08:44.850
然后这边是Utils下面的errors 好 然后在这里的话是Validation error

08:45.370 --> 08:49.690
ok 好 那这里的话我们就应该抛出制定义错误 这边呢就是sure

08:50.410 --> 08:51.130
这个new

08:52.410 --> 08:57.130
Validation error 啊 这边呢就传一个什么 我们来看一下我们这边定义的error

08:58.090 --> 09:03.930
就传一个message 是不就可以了 对吧 那我们这边message 我们就直接传一个救密码

09:05.130 --> 09:09.290
救密码 不正确 有没有感受到我们这边

09:10.410 --> 09:16.010
就之前定义了那个错误类 慢慢有没有一点感受到有点好死的这种感觉

09:16.730 --> 09:22.970
有没有感受到 我们提前把那个错误位那个错误类定义好之后 然后我们这边要用的时候 是不是直接用就可以了

09:23.890 --> 09:31.570
对不对啊 ok 好 然后接下来的话 这边啊 这边 这边的话那说明是不是对的

09:32.290 --> 09:35.770
对的话 那你就可以进行修改呗啊 这边的话就说明

09:37.570 --> 09:38.890
密码正确

09:39.450 --> 09:47.450
开始修改 那开始修改其实这个逻辑很简单 开始修改是不是就是组装这个新的对象

09:48.570 --> 09:52.570
组装这个新的对象 然后接下来进行一个更新就可以了 对不对

09:53.370 --> 10:00.890
其实就是组装新的对象 然后进行更新

10:01.610 --> 10:03.130
即可

10:04.090 --> 10:08.890
对吧 好了 这边的话就是关于这个新密码 你要稍微处理一下

10:09.650 --> 10:14.650
这边的话new password 等于一个什么的啊 首先用这个md5

10:15.210 --> 10:19.370
把它加个密 这边呢 就是应该是account info 点什么

10:19.970 --> 10:20.530
login

10:22.050 --> 10:22.650
pw 点

10:23.650 --> 10:30.330
对 这个呢 是密码加密啊 这个就不说了啊 我每次的密码都加了密的 好 然后接下来的话 这里

10:30.890 --> 10:33.850
这里的话 你就应该是组装一个新的对象

10:34.730 --> 10:38.650
啊 这个新的对象 然后加内幕对应的是你的这个account

10:39.530 --> 10:39.930
info

10:40.730 --> 10:43.770
点内幕 对吧 然后加你的这个login id

10:44.770 --> 10:47.490
应该是等于你的这个account info

10:48.170 --> 10:51.930
点login id 以及什么呢 以及你的新的密码

10:52.530 --> 10:57.890
login pwd 他应该是account info 点login

10:58.770 --> 11:05.210
pwd 哎 有这么一个对象 那这么一个对象 那我就应该是调什么呀 说调数据层

11:05.890 --> 11:07.010
对应的这个接口

11:08.170 --> 11:11.930
对不对啊 说来到我们的这个数据层 我们把这个接口 我们把它写上

11:13.410 --> 11:19.170
啊 这个登录 好 然后接下来这边的是更新管理员

11:20.090 --> 11:22.530
更新管理员 这边呢 就认识model

11:23.610 --> 11:24.610
点expose

11:25.610 --> 11:29.610
model 点expose 点update

11:30.610 --> 11:31.610
然后endme

11:33.530 --> 11:38.730
endme.do 等于一个async function

11:39.970 --> 11:45.530
好 这边呢 就是拿到是你新的newaccount info

11:46.250 --> 11:50.610
对不对 拿到这个 好了 接下来 来到这边 这边呢 你把那个导入一下

11:51.610 --> 11:59.410
这边呢 就是update endme.do 先把他导入 导入之后 然后这样 我们的这个对象就应该是传入到

12:00.090 --> 12:00.810
什么这个方法里面

12:01.610 --> 12:02.370
await

12:03.250 --> 12:04.770
update endme

12:06.410 --> 12:07.570
啊 都传到这里

12:08.810 --> 12:14.130
对不对 好 传到这里之后 然后这样来到我们这边 这边 然后这里就接受到那个对象了

12:14.530 --> 12:17.130
接受到那个对象之后 然后我们这边的话就直接

12:18.130 --> 12:19.490
这个model是有的呗

12:20.490 --> 12:26.050
对吧 这个model有的 然后你就直接调用什么呢 调用这个update方法

12:26.850 --> 12:32.490
他有个update方法 把这边 我们把那个打开 把那个circle nice

12:34.650 --> 12:35.090
打开

12:36.650 --> 12:37.890
circle nice

12:40.240 --> 12:43.480
在在在这里 是吧 打开

12:45.920 --> 12:48.160
啊 然后就要最新的

12:49.360 --> 12:52.480
其实我们做开发哈 就是把这个官方文档一个一个打开

12:53.880 --> 12:58.320
一定是把这个官方文档打开的 随时再查 因为这些apis记不住的

12:59.160 --> 13:01.840
对不对 这个的话 其实袁老师也反复给大家强调过

13:02.560 --> 13:03.520
这个你哪记得住

13:04.440 --> 13:05.840
好 然后接下来的话 他是

13:06.840 --> 13:13.160
那个the model 是吧 model 上面的方法 我看一下 是不是 他这边的话有一个update 我记得

13:14.160 --> 13:14.640
在

13:17.120 --> 13:20.440
哎 在哪里呢 update 找一找 找一找

13:22.480 --> 13:25.480
fand都有 fand create count

13:26.600 --> 13:30.360
这些都有的吗 我看一下啊 fand过了是

13:31.440 --> 13:34.840
as many in it remove remove 都出来了

13:36.080 --> 13:41.040
啊 这这这 看到没有 update 出来了啊 那你这边让你把打开

13:42.000 --> 13:48.920
这边update 接收什么 是不是接收这边value 是object 然后再是option option 也是一个object

13:49.600 --> 13:52.080
好了 接下来前面这个 前面这个就是你新的这个

13:52.960 --> 13:56.960
新的这个就是信息 他是以一个对象的形式接收

13:57.520 --> 14:02.200
然后接下来这个option option 他也是一个对象 对象里面 然后接下来就有这些字段

14:03.120 --> 14:06.640
看到没有 那我们就用的就是什么 我们就一会会用到这个ware

14:07.360 --> 14:13.240
这是你要改哪一条 啊 要改哪一条 说来到我们这边 这边呢 我们就是update

14:14.680 --> 14:18.160
然后我们这个新的信息就是这个new account infer

14:18.800 --> 14:23.360
对吧 然后下第二个参数 第二个参数也是个对象 对象里面有一个这个ware

14:24.720 --> 14:29.280
ware对应也是一个对象 你看这里ware是不是也是对应的是一个对象

14:30.080 --> 14:34.880
对不对 好这个对象里面的话 然后现在你要改哪一个 那我们要改这个login id

14:35.520 --> 14:40.880
对应的是什么呢 对应的就是你传过来的这个new account infer

14:41.600 --> 14:42.240
login id

14:43.920 --> 14:50.560
看到没有 改完之后 然后接下来把这个 这边呢 他肯定是异步的 所以你await 大家这边把这个return一下

14:51.520 --> 14:56.480
再return一下 我们这边呢这个dao程就写完了 其实很简单

14:57.440 --> 15:03.120
对不对 是很简单 好 然后接下来我们来到这边service程 service程 这边是不是在等

15:03.920 --> 15:06.320
对不对 等的话 然后接下来我们这边 我们来看一下

15:07.040 --> 15:07.680
const

15:09.790 --> 15:14.110
const一个result 等于我们这边 我们来打印一下console

15:14.990 --> 15:18.350
点log 啊 这边的话result

15:20.910 --> 15:23.310
result 我们这边全部保存

15:25.070 --> 15:25.310
ok

15:26.830 --> 15:31.390
没问题 是吧 没有任何问题 好 然后接下来 我们这边来到我们的这个接口这边

15:32.110 --> 15:35.150
接口这边呢 就应该是一个什么了 是不是就应该是个put

15:35.870 --> 15:37.550
put 然后接下来这个是没有的

15:38.510 --> 15:44.910
对吧 这个是没有的 没有的 然后接下来这边body body的话 我们要带信息过去 我们这边过来login

15:46.190 --> 15:46.990
呃 这里

15:48.270 --> 15:49.550
那这里是我们带的信息

15:50.990 --> 15:51.310
然后

15:52.510 --> 15:54.030
这边 把他拿过来

15:54.990 --> 15:59.790
拿过来 然后接下来你看一下数据过 我们现在叫什么名字 我们现在叫做超级管理员

16:00.350 --> 16:06.350
然后id是什么id是enemy 对吧 旧密码旧密码 我们是123456

16:07.710 --> 16:13.870
对吧 好 然后这里这里的话 这个新密码新密码 我们就654321

16:14.750 --> 16:20.990
好吧 然后内幕内幕的话 我们就之前叫做超级管理员 我们就改成这个管理员2啊 这个我们就不动他

16:21.470 --> 16:22.510
好 我们首先剩的

16:23.790 --> 16:24.670
好 这边的话

16:25.950 --> 16:28.670
他已经 我们来看一下 看一下这里

16:29.870 --> 16:31.390
啊 这里 这里的话已经返回了

16:32.350 --> 16:37.710
看到没有 已经返回了 他这个返回的是什么呢 返回的是这个受影响的调数

16:38.510 --> 16:41.470
啊 受影响的调数 就说明什么了 说明已经ok了

16:42.830 --> 16:48.110
是吧 已经ok了 你如果密码不对的话 比如说我们现在再来发送 再来发送的话 现在这个

16:48.430 --> 16:50.670
我们这个新密码已经改成654321了

16:51.070 --> 16:54.510
那我们现在的话再发送的话 他这边的话就会抛出个错误 我们剩的

16:54.830 --> 16:57.760
啊 你看这边的话

16:58.480 --> 17:02.560
哎 你看看到没有 这边抛出了一个错误 这边的救密码不正确

17:04.000 --> 17:08.640
看到没有啊 但是这边救密码不正确 他这边的话应该是根本

17:09.200 --> 17:11.280
抛出这么一个错误

17:12.720 --> 17:14.240
但是这边的话 我们那个

17:16.480 --> 17:18.720
我们的这个express他没有办法

17:19.840 --> 17:22.240
接收到这个是吧 没有办法

17:23.360 --> 17:26.880
处理这个异步的错误 我们这边可以装一个那个

17:28.080 --> 17:31.840
可以装一个那个包 好吧 这个停一下

17:33.360 --> 17:40.780
好 我们这边可以装这么一个包啊 这里的话你可以npmi

17:41.660 --> 17:44.460
npmi 那一个叫做express

17:45.420 --> 17:46.380
然后sync

17:47.980 --> 17:48.540
errors

17:49.740 --> 17:54.780
啊 有这么一个包 这个包的话他就可以补货到这个异步的这个错误 装好了是吧

17:55.100 --> 17:59.180
装好了之后 然后你在这个andmean这边 你把它require一下

18:00.460 --> 18:01.020
在这里

18:02.060 --> 18:03.260
好 把它require一下

18:04.140 --> 18:04.860
require

18:05.980 --> 18:08.380
这边的话express async errors

18:09.900 --> 18:13.500
ok 好 让他保存一下 保存了之后我们再重启这个项目

18:15.500 --> 18:15.740
走

18:17.340 --> 18:19.820
好 重启了 重启了之后让项目这边再来发送

18:21.580 --> 18:22.940
再来发送 走

18:23.820 --> 18:26.620
好 然后接下来到这边来看一下 你看

18:27.340 --> 18:28.700
这边让他这个异步的错误

18:29.260 --> 18:32.620
这就补货到了 对不对 就补货到了

18:33.180 --> 18:37.180
好 补货到之后 然后接下来的话 我们这边的话 他现在是来到这边

18:37.820 --> 18:41.500
来到这边的话 我们刚才是这边只做了这个errorLame

18:41.500 --> 18:45.340
啊 他是不是是不是这个unauthorization

18:45.340 --> 18:51.260
啊Z这个ZT的这个error 只做了这个判断好了 接下来这里的话 我们把这里补全

18:52.220 --> 18:53.900
这里就是什么呢

18:53.900 --> 18:54.860
else if

18:57.340 --> 18:58.860
如果你的这个error

18:59.500 --> 19:02.460
他是干嘛的呢 他是这个instance of

19:03.020 --> 19:04.460
这个service error

19:06.640 --> 19:07.360
service error

19:08.240 --> 19:11.840
service error就是什么 service error是不是就是我们这边这个积累

19:12.400 --> 19:17.120
对 只要你的这个错误 我不管你是uploaderror也好

19:17.120 --> 19:22.240
还是forbiddenerror也好 还是这个啊 这些error也好啊 只要你是什么呢

19:22.400 --> 19:26.880
只要你这边呢 是就是是我这个service error

19:26.880 --> 19:33.200
他的一个这个子类啊 让我这边呢 就直接res.sender

19:35.930 --> 19:39.370
这个error.toresponse.json

19:40.250 --> 19:40.570
OK

19:42.250 --> 19:48.240
否则的话 否则的话 让我就是一个什么呢 我就是一个未知的错误

19:48.800 --> 19:53.040
那未知的错误 那我这边呢 就抛出什么呢 抛出这个unknown error

19:53.840 --> 19:59.280
看到没有啊 否则的话 就是未知的 说我这边呢 res.sender

20:00.800 --> 20:02.400
然后下这边呢 就是new一个

20:03.920 --> 20:08.240
这个unknown error.toresponse.json

20:09.760 --> 20:15.920
OK 好 呃 上面的话 我看他 他已经自动帮我引入了啊 好 我这边的话 我保存一下

20:17.280 --> 20:21.280
保存一下之后 然后既然你这边来看啊 这边他就会直接就会得到

20:22.000 --> 20:25.760
走 你看这边是不是就是救命嘛 不正确

20:26.640 --> 20:29.040
看到没有 会得到这么一个对象

20:29.680 --> 20:34.080
啊 会得到这么一个对象 好 然后接下来哈 我们回到这边

20:35.520 --> 20:37.760
我们继续 那么该写到哪了

20:38.720 --> 20:43.440
啊 写到这边 是吧 写到这边 好 这里的话 然后我们继续啊

20:43.840 --> 20:49.840
那刚才的话 如果是这个得到的是1 他是一个数组吗 是个1 好 那我们这边呢 就需要返回什么

20:50.560 --> 20:56.320
所以返回 返回这边这个接口文档 是不是要求的信息啊 接口文档在哪里

20:58.000 --> 21:02.960
所以返回这个接口文档要求的信息啊 对不对 要求信息有locking id name

21:03.360 --> 21:09.440
然后id啊 这个也很简单 我们那个是否封装好了的 直接用就可以了 对不对

21:11.520 --> 21:13.360
啊 所以这里的话就是return

21:14.080 --> 21:16.720
然后一个format

21:17.520 --> 21:21.040
啊 对format response 让他自动帮我引

21:21.600 --> 21:24.240
好 然后接下来这边的话就是啊 传入什么

21:24.880 --> 21:26.320
我们这边呢 就是应该是零

21:27.200 --> 21:31.440
然后空的啊 这边呢 是一个对象 对象里面 然后他需要什么

21:33.930 --> 21:36.810
需要这三个 是吧 这三个拿过来

21:37.850 --> 21:42.170
拿过来 然后加这个logging id log in id 就是应该是什么

21:43.130 --> 21:47.770
啊 就应该是你这边的这个account infer

21:48.970 --> 21:52.330
account infer.logging id

21:52.970 --> 21:54.970
对吧 好 然后加你的这个name

21:55.610 --> 21:59.210
name的话 是不是也是应该是account infer点这个

22:00.010 --> 22:05.770
你传过来 这边有个name啊 大家id id的话就应该是

22:07.050 --> 22:10.570
account infer.id

22:11.130 --> 22:15.610
ok 搞定 写完了 好 然后将我们这边我们来测试一下

22:16.890 --> 22:21.870
这边呢 改已经改成功了哈 我们这边我们刷新一下 刷新

22:22.990 --> 22:26.750
那把这个关了嘛 关掉啊 重新开

22:28.030 --> 22:32.430
是不是改成功了 哎 改成功了是改成功了 这里怎么回事

22:33.710 --> 22:37.950
这里怎么回事 这里的话这个密码传进去没有加密

22:38.670 --> 22:42.190
是不是 没有加密啊 我们来看一下这里怎么回事

22:44.030 --> 22:44.990
这里的话

22:46.750 --> 22:47.070
嗯

22:48.990 --> 22:54.030
哦 这里这里是不是写错了 这里应该是什么 这边是不是应该是这个new

22:54.910 --> 23:00.110
password 应该是new password 是不是要这样子啊

23:00.910 --> 23:06.430
对不对啊 这里的话也不需要存这个result 这个就不需要就等待等它改完之后然后反过这个

23:06.990 --> 23:07.550
保存

23:09.470 --> 23:12.910
好 保存的话 让我们现在的话得把这个稍微改一改

23:14.270 --> 23:15.710
呃 怎么改一改呢

23:17.230 --> 23:21.230
我看一下啊 因为现在数据库我们存的是这个654321

23:21.630 --> 23:23.790
那这里这里的话你现在的话一辈子都改不动

23:24.590 --> 23:29.550
对不对 因为你这边回头你就算输对了这个救命嘛 它这边会对你进行一个什么

23:30.190 --> 23:32.750
是不是会进行一个md5加密啊 那我们先把这个

23:33.790 --> 23:34.430
先把这个

23:35.230 --> 23:38.510
它验证的地方啊 这个地方我们先把它去掉

23:40.730 --> 23:42.010
对吧 把保存

23:43.450 --> 23:45.130
保存之后 然后接下来这里

23:45.770 --> 23:46.330
这里来吧

23:47.290 --> 23:49.690
救命嘛 这里是654321

23:51.130 --> 23:55.210
啊 然后新密码 新密码123456啊 管理员

23:56.090 --> 23:57.050
啊 然后走

23:58.970 --> 23:59.530
是不是ok啊

24:00.170 --> 24:00.410
啊

24:01.850 --> 24:03.770
logging id name 是不是少一个呀

24:05.450 --> 24:07.530
少一个什么 是不是少一个id啊

24:08.250 --> 24:09.850
少一个id

24:10.810 --> 24:11.850
呃

24:12.330 --> 24:16.250
id 我这边是写的呀

24:17.770 --> 24:19.770
好 这里的话我看一下啊

24:20.250 --> 24:23.450
写了 哦 我知道 是因为我这边的话

24:23.770 --> 24:25.770
这边传的时候没有id啊

24:26.730 --> 24:29.050
对不对 这边的话压根就没有id

24:29.690 --> 24:31.690
没有id的话我想想啊

24:32.330 --> 24:34.650
啊 这里的话我们先看一下那个数据库改成功妙

24:35.530 --> 24:36.890
数据库把他关一下

24:37.530 --> 24:38.090
走

24:38.410 --> 24:38.810
走

24:39.290 --> 24:43.210
就可以了 对不对 首先这边可以了 这边可以了 然后把刚才那恢复

24:44.250 --> 24:48.410
把这边 这边恢复啊 这边加上md5

24:50.780 --> 24:52.060
ok 保存

24:52.780 --> 24:57.500
好 保存之后 然后接下来的话 我们来解决这个id的问题

24:58.380 --> 25:02.460
这边的话 我们的这个account inverse是没有id的

25:03.500 --> 25:04.940
没有id

25:06.300 --> 25:08.380
哎 我看一下呢 我打一下呢

25:09.340 --> 25:11.500
console.log

25:12.300 --> 25:13.500
and the mean infer

25:16.730 --> 25:18.170
and the mean infer

25:18.650 --> 25:18.970
哦

25:19.930 --> 25:22.810
这里的话 and the mean inverse不应该有id

25:23.930 --> 25:24.250
对不对

25:25.210 --> 25:27.610
好 我们这边我们来看一下 这边再来

25:28.650 --> 25:34.010
好 然后就密码12356 新密码也是12356 就这样子

25:34.730 --> 25:36.330
好 然后这里的话来看一下

25:37.850 --> 25:39.450
呃 这样子是不是id就拿到了

25:40.330 --> 25:43.690
对不对 这样子id就拿到了 好 那我们这边的话就可以这样子

25:44.410 --> 25:45.450
这边呢 就直接

25:46.250 --> 25:49.210
要id是吧 id的话 我这边就and the mean infer

25:49.850 --> 25:51.050
点这个data

25:51.930 --> 25:52.490
values

25:53.130 --> 25:53.770
点id

25:54.490 --> 25:55.050
可不可以啊

25:56.010 --> 25:57.370
可不可以啊

25:58.010 --> 25:58.410
对不对

26:00.620 --> 26:04.540
好 现在的话就ok了啊 现在就ok了 好 保存

26:05.340 --> 26:06.940
保存了之后 然后我看一下

26:07.500 --> 26:09.340
有没有其他地方没写的

26:09.900 --> 26:10.620
没有了啊

26:11.100 --> 26:12.140
没有了都ok了

26:12.380 --> 26:13.740
好了 来这边来测试一下呗

26:14.220 --> 26:14.940
来测试一下

26:15.500 --> 26:17.820
好 现在的话我们这边把这个关了

26:18.300 --> 26:20.060
关了 然后我们打开 重新看一下

26:20.540 --> 26:22.780
这边呢logging id and the mean

26:23.180 --> 26:23.820
管理员

26:24.220 --> 26:26.460
那这个的话是12356是吧 我刚刚改了

26:26.780 --> 26:29.420
好 然后接下来我们这边呢 我们改成超级

26:32.490 --> 26:34.250
超级无敌

26:35.450 --> 26:38.170
管理员对吧 然后logging id是不变的

26:38.490 --> 26:39.130
然后这个

26:40.010 --> 26:42.650
新密码 新密码我们改成123123

26:43.290 --> 26:45.610
然后旧密码旧密码123156对吧

26:45.850 --> 26:46.890
好 然后走

26:47.530 --> 26:48.170
是不ok了

26:49.210 --> 26:49.690
对不对

26:49.930 --> 26:50.490
就ok了

26:50.730 --> 26:52.330
ok了之后 然后这样我又改

26:52.570 --> 26:53.770
然后加这个

26:54.170 --> 26:57.930
我重新把它改回来123456

26:58.330 --> 26:59.930
旧密码我这边没输对

27:00.970 --> 27:02.490
旧密码我认识的是123456

27:02.730 --> 27:03.530
好 走

27:04.330 --> 27:05.610
是不是旧密码不正确

27:06.410 --> 27:06.890
对不对

27:07.130 --> 27:07.930
旧密码不正确

27:08.170 --> 27:10.650
所以这边的话123123

27:11.290 --> 27:11.770
走

27:12.490 --> 27:13.130
是不是ok了

27:13.850 --> 27:14.330
对不对

27:14.570 --> 27:15.130
就ok了

27:16.090 --> 27:18.410
那么支持的话 我们整个这个

27:18.650 --> 27:19.450
end密模块

27:19.690 --> 27:21.210
就我们的这个管理员

27:22.010 --> 27:22.490
就这边

27:23.770 --> 27:24.250
就这边

27:24.810 --> 27:26.330
整个这个管理员模块

27:26.730 --> 27:27.610
我们就写完了

27:28.170 --> 27:31.210
但下来的话把这个管理员模块自己好好消化一下

27:32.010 --> 27:32.490
知道吧

27:32.890 --> 27:34.730
你基本上这个管理员模块

27:35.050 --> 27:36.970
写出来了之后后面就是

27:37.210 --> 27:38.250
很简单了

27:39.290 --> 27:41.210
后面的话就越写越快

27:41.690 --> 27:42.170
知道吧

27:42.650 --> 27:44.890
后面的话就是我们写这个博客文章

27:45.290 --> 27:46.890
可能就还有一些新东西

27:47.770 --> 27:48.890
对博客文章里面

27:49.130 --> 27:50.570
博客文章里面有一个那个

27:50.810 --> 27:51.850
有个那个toc

27:52.810 --> 27:53.530
要处理一下

27:54.570 --> 27:56.730
后面的这个什么手页标语

27:57.290 --> 28:00.090
然后关于页面留言板这些就越写越快

28:00.570 --> 28:02.010
基本就是一个套路

28:02.330 --> 28:03.690
直接一下子就写出来了

28:05.210 --> 28:08.810
所以下去的话一定要把这个管理员模块自己好好消化了

28:09.290 --> 28:09.770
好吧

28:10.090 --> 28:11.370
这些课就先到这里

28:11.370 --> 28:12.330
啊再见

