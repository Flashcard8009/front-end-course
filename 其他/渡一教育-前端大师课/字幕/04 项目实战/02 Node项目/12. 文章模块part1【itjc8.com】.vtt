WEBVTT

00:00.820 --> 00:05.940
好 我们这节课继续啊 我们上节课的话已经把我们的这个分类

00:06.200 --> 00:09.520
分类已经做了啊 除了那个三处分类的时候

00:09.780 --> 00:13.100
那边的话要做那么一点点这个小的修改

00:13.360 --> 00:14.640
其他的话都是做了的

00:15.160 --> 00:15.660
对不对

00:16.180 --> 00:18.480
好 然后这节课的话我们进入我们的文章模块

00:18.740 --> 00:21.040
文章模块 然后首先我们还是先来看接口

00:21.300 --> 00:25.660
ok 接口的话我们来看一下哈 这个文章模块的话这个接口

00:25.920 --> 00:27.440
稍微就有那么

00:27.700 --> 00:28.720
6个是吧

00:29.480 --> 00:30.260
我们看有哪些

00:31.020 --> 00:35.420
我不是 这边的话是应该是文章 我看12345还是5个

00:36.200 --> 00:37.220
还是5个可能没有

00:37.740 --> 00:39.780
我们来看一下首先的话第一个就是发布文章

00:40.540 --> 00:41.580
API blog

00:42.080 --> 00:46.180
然后这边是要带这个token过去 你要添加数据肯定要带token

00:46.700 --> 00:47.200
对吧

00:47.980 --> 00:50.020
好 然后加这个是你的body

00:50.780 --> 00:52.060
body的话是这个样子的

00:52.320 --> 00:56.420
然后接下来这边返回数据 返回数据的话就是你新增的这一条

00:57.180 --> 00:58.980
可能没有 新增的这篇文章

00:59.700 --> 01:01.240
其他就没什么了

01:02.260 --> 01:03.540
然后接下来这边

01:03.800 --> 01:04.820
修改文章

01:05.080 --> 01:08.660
修改文章的话是put 后面带一个这个id

01:09.940 --> 01:13.260
修改文章的话你如果只需要修改某些字段

01:13.520 --> 01:16.080
你就只需要传递修改的字段就可以了

01:16.340 --> 01:19.680
比如说只修改文章的标题你就只传一个这个

01:19.940 --> 01:20.440
title

01:21.980 --> 01:25.560
然后在这边请求参数 有一个这个id 回头我们通过那个

01:26.060 --> 01:27.100
parmas

01:27.360 --> 01:28.120
是不可以拿到

01:28.580 --> 01:29.100
对不对

01:29.620 --> 01:30.380
好 大家token

01:30.880 --> 01:32.680
然后返回 这边是这个body

01:33.440 --> 01:37.540
你传的这个要修改的内容 但这边呢是列举了很多个字段

01:38.060 --> 01:42.420
你如果要修改的话 你比如说修改只修改某一个字段的话 是不只传一个字段就可以了

01:43.180 --> 01:43.680
对不对

01:44.200 --> 01:49.060
好 然后加这边返回数据 返回的就是你修改了这篇文章的最新的这个信息

01:50.860 --> 01:53.420
好 然后接下来的话是删除文章

01:53.940 --> 01:56.740
删除文章的话这边真的是带一个id

01:57.040 --> 02:03.200
删除文章后 该文章下的所有评论将会一同被删除

02:03.800 --> 02:04.720
哎 你注意这里

02:05.240 --> 02:06.960
啊 这里的话是不是又有一个处理

02:07.560 --> 02:09.600
对不对 所有的评论

02:10.160 --> 02:11.560
会一同被删除

02:12.000 --> 02:14.080
啊 大家这边带一个这个id

02:14.920 --> 02:15.760
然后

02:16.760 --> 02:20.080
这里 这里返回数据 返回数据这里就是返回一个q就可以了

02:21.440 --> 02:22.600
好 然后接下来

02:23.040 --> 02:24.880
接下来是分页获取文章

02:25.720 --> 02:26.440
分页获取

02:26.800 --> 02:28.600
就这边那是有一个这个

02:28.880 --> 02:32.080
你这边那就是后面可以跟那个参数的

02:32.600 --> 02:36.160
啊 就你这边的话比如说这边API blog 然后后面的话打一个问号

02:36.680 --> 02:39.520
对吧 打一个问号问号 然后后面就是可以

02:39.760 --> 02:42.200
传递这个page limit

02:42.640 --> 02:46.920
啊 然后还有这个keywords 还有就是这个category id

02:47.680 --> 02:48.720
分类的这个名称

02:49.240 --> 02:50.920
那这里的话其实设计了什么

02:51.160 --> 02:52.240
是不是设计到一个连表

02:53.320 --> 02:55.360
对不对 因为你这边要和你的这个分类

02:55.860 --> 02:56.900
进行一个关联

02:58.180 --> 03:01.260
然后返回数据 返回了就是你对应的

03:01.500 --> 03:02.780
查询到了这个数据

03:04.320 --> 03:07.380
好 然后就还有一个就是获取单篇文章

03:07.660 --> 03:10.980
获取单篇文章这个比较简单 这个呢就是这边一个这个id

03:11.500 --> 03:12.260
一个id

03:12.500 --> 03:14.820
id 然后接下来的话这里

03:16.340 --> 03:20.700
我看这个是什么 获取单篇 然后在这边传了id之后

03:20.960 --> 03:21.980
然后这里的话

03:22.240 --> 03:24.300
是不是对应id的这个文章

03:24.760 --> 03:25.800
给你返回来

03:26.560 --> 03:29.380
对不对 OK 这五个啊 这五个

03:31.770 --> 03:33.310
好 回到我们的这个代码

03:34.070 --> 03:39.190
啊 这边的话首先还是和之前的步骤是一样的 首先的话创建什么呢 创建这个model

03:39.450 --> 03:42.010
所以我们这边创建一个这个blog

03:42.270 --> 03:43.030
model

03:43.790 --> 03:45.350
然后点js

03:46.110 --> 03:47.630
啊 然后

03:48.910 --> 03:51.990
这边的话基本就是一样的 把这直接复制过来

03:52.970 --> 03:57.330
复制过来之后把这改一下 这边的话就应该是blog

03:58.090 --> 04:05.250
对不对 至于它有哪些字段呢 那这边的话就是我们一篇这个文章的话 它会有文章的标题

04:05.510 --> 04:09.090
然后文章的描述 然后还有就是比如说它的这个

04:09.850 --> 04:10.630
model

04:11.390 --> 04:16.010
toc 啊 然后还有就是html 看成成 你看这里就看得出来

04:16.770 --> 04:17.810
看哪里 看这里

04:18.790 --> 04:20.330
基本上合作就是一致的

04:21.090 --> 04:26.470
基本上合作就是一致 ID就不说了吗 ID的话 它是自动生成的 然后既然有文章的标题

04:26.990 --> 04:28.510
有它的这个描述

04:29.290 --> 04:34.150
然后有它的创建日期 对吧 然后既然这个scan number 浏览的次数

04:34.910 --> 04:35.950
comment number

04:36.710 --> 04:42.590
评论的这个数量啊 然后还有这个category 它分类的信息 分类的信息这边就是一个连表

04:43.370 --> 04:46.190
啊 这边是个连表 只不过之前的话那个

04:46.910 --> 04:52.630
原老师是用这个mango做的 我们这边得使用这个my circle来进行这个连表的查讯

04:53.190 --> 04:58.270
然后接下来这边一个toc 啊 然后接下来这边的话html content 就是你的证文

04:58.830 --> 05:03.310
然后最后的话一个这个就是你的这个说略图啊 文章的这个说略图

05:04.030 --> 05:09.670
ok 好 所以说回到我们的代码 我们这边的一个一个来写 那首先第一个 第一个的话是title

05:10.270 --> 05:11.310
把这个弄到下面去

05:13.520 --> 05:21.600
首先第一个 第一个的话是title 这个的话是我们文章的这个标题 好 然后接下来的话 下面是一个description

05:22.880 --> 05:24.440
cri

05:25.560 --> 05:31.810
description describe describe

05:32.330 --> 05:35.610
scr 然后pti

05:36.410 --> 05:38.210
description 这个是文章的这个描述

05:38.810 --> 05:43.290
然后接下来这这里啊 这里你注意这里要改一下 这里的话这个文章的描述 我们用一个

05:43.770 --> 05:49.490
stream 来存啊 如果这个描述比较大的话 你可以干嘛 你可以用一个这个text

05:51.050 --> 05:56.370
对吧 如果这个数量很大的话 比如他描述他写的很长 那你这边的话可以用一个text

05:57.010 --> 05:58.690
好 然后接下来的话 这边一个toc

06:00.690 --> 06:04.890
toc的话这里哈 toc的话我是用什么来存的呢 就是

06:06.170 --> 06:10.890
之前袁老师的话他用的是数组啊 因为mango里面了支持存这个数组

06:11.250 --> 06:14.410
那我这边的话是把这个数组 然后给大家看一下

06:15.410 --> 06:21.610
我把这个我们的成品 这边blog打开给大家看一下 我这边的话toc我也是用的是一个制服串

06:22.450 --> 06:26.610
看到没有 也是用了一个制服串来存 就是我把它转成这个制服串

06:27.210 --> 06:31.610
啊 转成制服串 回头你要的时候 我把这个制服串给你转回数组就可以了

06:32.170 --> 06:38.730
啊 这个做得到吧 这是不很简单 用那个接生的那个方法 接生的那个有一个streeifi

06:39.690 --> 06:43.010
这不就转成制服串了 然后要转回来是不接生点帕子

06:43.770 --> 06:47.370
对不对啊 说我这边的话也是制服串 但是呢 他量又会很大

06:48.010 --> 06:51.210
说我这边的话给的是一个什么呢 给的是一个text

06:52.050 --> 06:54.810
啊 给的是一个text 好 然后接下来下面

06:55.770 --> 06:56.250
复制一份

06:57.450 --> 07:01.210
接下来的话下面 下面的话是一个这个html

07:02.050 --> 07:02.570
content

07:04.770 --> 07:06.890
content啊 他也是这个text

07:08.130 --> 07:09.490
好 然后接下来下面

07:10.650 --> 07:12.610
下面的话是一个这个缩列图

07:13.730 --> 07:21.050
ph 啊 这个啊 这边的话给的是一个stree 因为缩列图的话 他那个一般不会太大

07:22.050 --> 07:26.210
就是他的那个字段啊 这里面存的数据不会太大啊 这边给了一个stree

07:27.010 --> 07:29.250
好 然后接下来的话就是这个scannumber

07:31.430 --> 07:32.670
scannumber

07:34.510 --> 07:35.070
对应的

07:35.670 --> 07:39.710
这里他既然是一个浏览数 那这里的话就是应该是引起点

07:42.370 --> 07:45.130
对不对啊 然后还有一个什么呢 还有一个这个

07:46.530 --> 07:47.250
comment number

07:48.370 --> 07:48.970
comment

07:50.930 --> 07:51.930
so mnt

07:52.610 --> 07:54.930
comment number 他也是一个integer

07:55.530 --> 07:59.450
好 然后最后一个 最后一个是关于你的这个创建时间

08:00.210 --> 08:01.090
在这里

08:01.930 --> 08:03.730
所以里面存储的是一个时间戳

08:04.570 --> 08:07.370
对不对啊 照理说的话 你这边直接把这个

08:08.170 --> 08:09.210
created and

08:09.850 --> 08:10.970
设为去就可以了

08:11.570 --> 08:17.970
啊 他这边他就会给你存一处一个 就是他那边规定格式的这个时间戳啊 你这样子做也可以

08:18.250 --> 08:24.530
或者你干嘛呢 你这边的统一控制也可以啊 比如说我这边的 我就是在我这里统一进行控制的

08:26.330 --> 08:30.810
这个created date 然后就没有用他那个 我这边我自己来存

08:31.290 --> 08:36.210
可不可以啊 这也可以啊 对不对啊 然后加这边的是一个这个q

08:36.930 --> 08:38.050
啊 这边是一个stream

08:38.970 --> 08:42.290
啊 这边是一个这个stream 然后这个allow none force

08:43.210 --> 08:45.130
ok 好 那我们整个这个

08:46.090 --> 08:50.410
呃blog就我们的文章的这个模型 我们就创建好了

08:51.170 --> 08:54.050
看怎么样啊 这边有没有少什么制断 检查一下

08:54.930 --> 08:57.890
啊 差不多对了 是吧 没什么太大的问题

08:58.490 --> 08:58.770
ok

08:59.850 --> 09:04.490
好 然后接下来的话 我们保存一下 然后在这里

09:05.210 --> 09:09.730
在我们的这个db.js里面 我们这边把它引入一下

09:11.170 --> 09:17.570
这边呢 就是应该是啊 blog model 等于这个blog model

09:19.490 --> 09:26.290
啊 保存 保存了之后他自动的进行一个什么同步啊 对不对 同步完成之后我们来数据库看一眼

09:27.810 --> 09:34.220
好 来这边 好 是不是有了 对不对 这边blog

09:34.620 --> 09:38.980
ok 就都有了啊 你这边可以这边打开这个设计表

09:40.220 --> 09:43.100
这边可以看一下啊 大字的话就是这个样子的

09:43.980 --> 09:51.060
ok 啊 首先的话就把我们的这个模型创建好 创建好之后 然后接下来后面的话就是一样的

09:52.060 --> 09:57.660
后面就是一样的 这边的话 首先的话创建一个blog.js

09:58.620 --> 10:01.260
啊 然后接下来你懒得写的话 你就复制一份过来

10:02.100 --> 10:05.740
对不对 你复制一份看着差不多的 啊 拿过来

10:07.620 --> 10:09.500
拿过来 然后接下来这个的话就可以删了

10:10.620 --> 10:17.580
好 然后接下来这边呢 是不是就是这么几个借口 对不对 把把这边调用的方法先删掉

10:19.300 --> 10:23.020
好 那我们这边就一个一个来 首先这里是添加blog

10:23.540 --> 10:30.520
然后这个是分页获取blog 有一个分页

10:33.780 --> 10:36.580
分页获取blog 然后这个是获取

10:38.140 --> 10:40.220
其中一个blog 修改

10:40.900 --> 10:43.740
一个blog 然后删除一个blog

10:44.700 --> 10:47.460
对不对 我们这边我们来看一下啊 我们这边来看一下

10:48.300 --> 10:53.740
这边的话 获取啊 这边获取单篇 这边呢 是这里有个id

10:54.420 --> 10:58.580
然后删除啊 这里一个id 修改

10:59.460 --> 11:04.780
这个id 然后分页获取 分页获取了 这边就APIblog 然后还有就是发布

11:05.620 --> 11:10.820
发布APIblog 是不对对得上 对不对 然后回头到你再把那个一级路由

11:11.460 --> 11:15.820
你把它写了 来到哪里呢 来到这个app.js里面

11:16.660 --> 11:22.450
啊 你把这边把它引入 好 这边blog

11:24.210 --> 11:26.610
blog 这边呢 就是blog

11:27.490 --> 11:27.890
router

11:28.450 --> 11:31.410
好 然后接下来来到这下面

11:34.230 --> 11:39.510
blogrouter 然后blog 对不对 OK 好 保存一下

11:43.030 --> 11:49.030
好 没有问题 好 没有问题之后 然后这样我们就一个一个来写呗 我们从这个添加博客来写

11:49.590 --> 11:50.870
好吧啊 一个一个来

11:52.550 --> 11:57.990
哦 等一下啊 突然想起个东西 就是我们这边的话添加了这个博客表之后

11:58.710 --> 12:03.350
我们的这个博客表 他和那个博客分类表 他是不是有个关联关系

12:04.070 --> 12:09.750
对不对 但是你现在的话 我们现在这样的设置呢 他是看不到任何关联关系的啊 我们这边 我们在这里看一下

12:10.710 --> 12:11.910
在这里的话 我记得有一种

12:12.630 --> 12:14.550
查看啊 这里 你看

12:15.430 --> 12:17.030
现在呢 是不是没有任何的关联关系

12:17.670 --> 12:21.430
对不对啊 这个是博客表 这个是banner 这个是博客

12:22.070 --> 12:27.830
啊 这个他的分类啊 这个是enemy 没有任何关系 而说我们得先把这个关联关系把它

12:28.150 --> 12:30.950
设置上啊 怎么设置呢啊 也很简单

12:32.150 --> 12:36.950
来到我们的db.js 这边 这边我们刚才是不是引入了这个blog

12:38.070 --> 12:43.030
blogmodel 这不引入了 对不对 大家这边也引入了什么呢 blogtypemodel

12:43.430 --> 12:48.630
好 然后接下来这里 这里边是不是进行一个这个同步啊 对不对 然后在同步之前

12:49.670 --> 12:52.870
啊 在同步之前 我们就来设置什么呢 就来

12:53.590 --> 13:04.340
定义定义模型之间的关联关系

13:05.620 --> 13:08.820
哎 在这之前你就来定义啊 那首先的话第一个

13:10.100 --> 13:18.260
第一个是什么呢 第一个就是博客和博客分类之间的关联

13:18.900 --> 13:23.540
啊 那这边怎么定义关联呢 这个袁老师是讲过的啊 我不知道大家还记不记得

13:24.020 --> 13:31.700
就你这边在文档里面也查得到啊 这里的话是在我看一下啊 他有一个定义这个关联关系

13:33.460 --> 13:40.020
在get started 应该不是started 应该是在

13:41.140 --> 13:42.500
看一下model basic

13:44.020 --> 13:45.540
他有一个那个has more

13:46.820 --> 13:47.460
我找一找

13:48.420 --> 13:49.460
has more

13:54.580 --> 13:55.300
在哪来着

13:57.300 --> 14:00.340
drawping, demonstration 啊这个的话我得找一找

14:01.060 --> 14:05.860
我找一找啊 这样子我把视频先暂停啊 我先把视频暂停 我先找一找

14:07.460 --> 14:11.860
啊 这里的话我找到了啊 刚才我把视频暂停了 找了一下 找到了

14:11.860 --> 14:16.260
那这边专门有个模块啊 这个social cations 就是关联

14:16.500 --> 14:18.420
那这边呢 是不是就是有这个has one

14:19.140 --> 14:22.420
beknownst to has money

14:23.300 --> 14:31.140
对不对啊 他就是 就是我们的表和表之间 是不是就那么三种关系啊 对不对 一对一 一对多和多对多

14:31.540 --> 14:37.220
啊 然后在这边呢 他给你提供了一些这个方法来设置表和表之间的这个关系

14:37.780 --> 14:42.420
啊 这个的话 这个袁老师在视频里面也是讲了的 对不对 好 那我们这边让我们直接来

14:43.140 --> 14:46.100
啊 直接来 那我们这边呢 首先这个blog

14:47.780 --> 14:49.300
blog这个type model

14:49.940 --> 14:53.140
这个是一个什么 这个是一个文章分类

14:53.700 --> 15:00.100
啊 这个是个文章分类 那一个分类下面是不是应该有多篇就对应有多篇文章呀

15:01.460 --> 15:05.620
你想想是不是应该这个关系啊 对不对 比如说我有一个分类 叫做html

15:05.940 --> 15:10.740
那我这个分类下面是不是有可以有多篇关于html的这个文章

15:12.420 --> 15:16.740
对不对 说这里的话就是点怎么呢 has many

15:18.770 --> 15:22.450
还是 many 好的 第一个成熟 第一个成熟就是我们的这个blog

15:23.170 --> 15:28.530
model啊 还有这个多篇文章 好 然后接下来这边 第二个的话 给一个对象

15:29.010 --> 15:34.130
然后设置你的这个键啊 这边那就是啊 这个foreigner key

15:35.330 --> 15:40.210
键 外键 外键应该是谁 你看一下 这边的话 看一下这里

15:40.930 --> 15:48.930
看一下这里 这里的话 外键的话 这里没有 是吧 这里没有 这里的话就应该有个什么呢 有个叫做category id

15:49.890 --> 15:51.890
category id

15:54.870 --> 15:59.990
啊 他对应的这个键对应的就是哪个呢 这边啊 target

16:00.550 --> 16:07.270
他对应的就应该是什么呢 对应的就应该是这个blog type里面的id

16:07.990 --> 16:12.790
这边的话 我们要加一条 加一条叫做category id

16:13.430 --> 16:18.790
就是分类 分类的id 他对应的就是什么呢 对应的就是这个blog type的id

16:19.030 --> 16:21.030
啊 说这边啊这个

16:21.350 --> 16:22.150
target

16:22.870 --> 16:25.910
target key 啊 这边是target key

16:26.230 --> 16:29.270
啊 对应的就应该是什么呢 对应的就应该是id

16:30.070 --> 16:32.870
怎么样 来这就是第一个过点关系

16:34.150 --> 16:35.670
好 然后接下来

16:37.990 --> 16:39.030
blog model

16:39.590 --> 16:43.750
这个是你的一篇什么 是不是一篇博客 他就应该什么呢

16:46.870 --> 16:51.830
他是不是有一个belance tool 他就应该是属于什么 是不是属于一个分类

16:52.710 --> 16:54.230
blog type model

16:55.190 --> 16:57.110
对不对 好 然后接下来 这边

16:57.750 --> 16:59.590
第二个对象 第二个对象也是一样的

17:02.630 --> 17:04.630
也是一样的啊 这边他的外键

17:05.590 --> 17:07.750
这个category id

17:07.750 --> 17:09.110
然后target key

17:09.110 --> 17:10.230
然后id

17:10.230 --> 17:12.550
那既然这边呢 我们给他设置一个别名

17:13.350 --> 17:14.150
这边呢 s

17:14.870 --> 17:17.590
设置一个别名 这边呢 我们就叫做category

17:19.540 --> 17:21.940
别名的话是为了方便我们一会儿这个查询

17:23.140 --> 17:24.580
ok 就设置好了

17:24.900 --> 17:29.460
看到没有 这边呢 博客和博客分类之间的关系 我们就设置好了

17:29.700 --> 17:30.500
就两行代码

17:31.140 --> 17:32.260
啊 就两行代码

17:32.260 --> 17:34.660
好 然后接下来 我们这边 我们刷新一下

17:35.140 --> 17:35.780
就保存一下

17:38.050 --> 17:41.010
保存啊 没有问题啊 没有问题 然后回到这边

17:41.570 --> 17:43.010
回到这边 我们来看一下

17:44.690 --> 17:46.290
好 我把这儿全部关掉吧

17:49.160 --> 17:50.920
好 然后我们这边 我们重新来

17:52.120 --> 17:54.520
现在呢 他就应该是有这个观点关系了啊

17:55.160 --> 17:56.360
我们重新刷新一下

17:58.200 --> 18:00.120
刷新之后 然后接下来这里看一下

18:00.600 --> 18:02.280
看到没有 是不是就有了

18:02.840 --> 18:03.880
把这个好好排一下

18:04.360 --> 18:05.000
自动布局

18:05.880 --> 18:07.560
看到没有 是不是就有了

18:07.720 --> 18:08.760
这边更多两列

18:09.240 --> 18:12.600
啊 你看这里 这里的话是不是就有一个这个 你指到这个线

18:13.160 --> 18:14.680
啊 你指到 鼠标指到正能线

18:15.160 --> 18:17.720
只要正能线 你看这个 关联关系是不是相当明显

18:18.600 --> 18:20.280
对不对 你看这边呢 就是什么呀

18:20.840 --> 18:22.600
就是这个category id

18:23.480 --> 18:26.120
啊 就是这个category id 他关联的是哪个

18:26.120 --> 18:28.920
是关联的是这个blog type的这个id

18:29.960 --> 18:34.200
对不对 category id 他是外界啊 关联的是blog type

18:34.680 --> 18:35.880
他的这个主件

18:36.200 --> 18:37.720
看了没有

18:38.440 --> 18:38.840
OK

18:39.560 --> 18:44.520
好 然后这边关联关系设置好了 设置好了之后 然后这一块就结束了

18:44.920 --> 18:46.520
好 那现在我们回到这边 我们继续来写

18:47.160 --> 18:48.760
好 然后首先的话 这边

18:49.320 --> 18:51.400
这边的话是要添加blog

18:51.400 --> 18:55.080
那回头的话 他会有一个这个req.body

18:55.080 --> 18:56.680
是不是信息都在这里面

18:57.560 --> 18:59.000
对不对 都在这里面

18:59.000 --> 19:01.880
那我们直接调什么呢 直接调了一个服务层的这个方法

19:02.280 --> 19:04.120
好 所以我们这边呢 就是来到这边

19:04.840 --> 19:07.480
业务层啊 我习惯叫他服务层

19:09.080 --> 19:12.840
好 这边就是应该是有一个这个blog service

19:13.960 --> 19:17.480
对吧啊blog service这边 这边的话你就导出方法

19:18.200 --> 19:24.360
module.export.endblog

19:24.760 --> 19:30.040
然后service等于一个一步的方式

19:34.370 --> 19:38.210
这里的话他应该接受一个参数 进行过传过来的这个new

19:39.170 --> 19:40.930
blog infer

19:41.650 --> 19:46.290
对不对 好 大家回头在我这边 这边的话我就直接干嘛 是不是调用

19:47.010 --> 19:49.250
res.send

19:49.890 --> 19:51.570
然后接下来这边的话就是await

19:52.130 --> 19:56.770
调用了一个刚才我们的那个endblog service

19:58.130 --> 20:01.250
对不对啊 这边req.body

20:01.970 --> 20:02.850
把它传递过去

20:04.130 --> 20:06.850
看到没啊 好 然后接下来这里

20:07.490 --> 20:11.330
这里的话就会拿到这个blog的这个新东西

20:11.810 --> 20:14.770
拿到新东西之后 然后我们需要做一些处理

20:15.330 --> 20:18.770
需要做些处理 需要做什么处理呢 我们这边来看一下

20:20.930 --> 20:23.650
首先第一个的话是什么呢 是这个toc

20:24.930 --> 20:25.490
首先

20:26.850 --> 20:30.050
首先第一个要处理的

20:30.770 --> 20:34.370
就是什么呢 就是toc 就是我们那个文章不是有个目录吗

20:34.850 --> 20:36.610
对不对 我们称之为这个toc目录

20:37.010 --> 20:40.930
这个的话我们是要单独处理的 好这个的话我们放在下一节课

20:41.730 --> 20:44.130
这个我们放在

20:46.450 --> 20:47.170
下一节课

20:49.090 --> 20:51.970
下一节 下一节课我们马上就会讲这个toc的处理

20:52.850 --> 20:58.610
好处理完了之后 然后接下来我们会把这个处理完了这个结果把它转成一个这个制服串

20:59.570 --> 21:00.290
接下来

21:03.190 --> 21:10.390
接下来我们将处理好 就前面啊 前面这这一块的处理主要是处理什么呢

21:10.470 --> 21:11.670
主要是处理格式

21:12.230 --> 21:17.110
就是将我们的这个这个toc把它转成我们需要的这个格式

21:17.430 --> 21:20.710
啊 下面的转好 转好之后 然后我们将处理好的

21:21.510 --> 21:25.990
这个toc格式转为制服串

21:26.710 --> 21:30.150
转为制服串 那这边呢我们就是这个newblog

21:31.430 --> 21:35.110
newblog infer 我们给它添加一个这个toc

21:35.670 --> 21:40.070
这边等于一个json.stream afi

21:40.470 --> 21:44.150
把它转成制服串 好那我这边的话我就先干嘛呢我就先写死

21:45.190 --> 21:48.070
好吧我就先写死啊 比如说这边的话有一个

21:49.030 --> 21:52.550
呃有一个a对应一个这个b

21:53.190 --> 21:55.510
假设这样子啊 这个我们回头会改的

21:56.070 --> 22:00.550
下节课讲了那个toc之后我们就会改啊 我们这一块的话先先这么写

22:01.190 --> 22:07.110
好 那toc就处理好了 处理好了之后 然后接下来需要干嘛呢 需要出史化

22:08.630 --> 22:11.990
新文章的其他信息

22:13.750 --> 22:18.390
其他信息啊 哪些信息呢 那首先呢 这边newblog infer

22:18.790 --> 22:21.510
它会有一个什么呢 会有一个这个scannumber

22:23.670 --> 22:25.350
scannumber等于一个0

22:25.670 --> 22:27.990
这个就是什么 这就是你的这个阅读量

22:29.430 --> 22:33.350
对不对 阅读量出史化为0

22:33.910 --> 22:36.550
好 然后接下来这边newblog infer

22:37.110 --> 22:39.110
点有一个这个comment

22:41.560 --> 22:44.520
comment number等于一个0

22:45.080 --> 22:46.920
这个是什么 是评论数啊

22:48.120 --> 22:52.200
对不对 评论数出史化为0

22:53.160 --> 22:56.360
ok 这两个 好完事之后我们就需要干嘛呀

22:56.840 --> 23:01.000
是不是需要对这个newblog infer进行一个这个验证

23:01.800 --> 23:04.760
对不对 好 接下来的话定义验证规则

23:08.210 --> 23:12.770
验证规则 好 那我们这边呢 const一个这个blog

23:14.210 --> 23:14.450
入

23:16.130 --> 23:20.050
等于一个 然后这边让我针对了一些常见的东西

23:20.930 --> 23:23.650
进行了个验证啊 这个验证的话我就直接把它

23:24.050 --> 23:26.530
从成品里面拿过来算了啊 这个就

23:27.090 --> 23:31.490
这个验证 反正这个规则你就自己去写啊 比如title你要做什么样的验证

23:31.970 --> 23:33.730
然后接下来这个description

23:33.970 --> 23:36.530
你要做什么样的验证啊 你就自己写就可以了

23:37.330 --> 23:39.170
ok 好 这边呢 我就把那个

23:39.730 --> 23:41.170
从成品里面把它拿过来

23:42.290 --> 23:43.490
这边的话是在

23:44.770 --> 23:47.970
service service的blog service

23:48.770 --> 23:49.170
啊 这边

23:50.050 --> 23:52.370
这边的话 然后我的验证规则我看一下

23:53.010 --> 23:53.570
啊 这里

23:54.130 --> 23:54.770
啊 这个的

23:55.330 --> 23:56.050
反正就这么多

23:57.490 --> 24:00.450
看到没有啊 这个你就自己写 这个是体力活了

24:01.170 --> 24:05.170
对不对啊 你就一个一个去写啊 你如果有更多的这个验证

24:05.570 --> 24:06.450
你就去反正

24:07.090 --> 24:11.890
去那个就是写就可以了啊 那个参照那个vd.dat.js

24:12.130 --> 24:15.490
它里面的这个语法啊 这里有一个要说的

24:15.810 --> 24:17.010
就比如说这个title

24:17.570 --> 24:21.730
title的话这边必须要出席对吧 然后接下来这边内心是strain

24:21.890 --> 24:23.970
这些都没什么好说的啊 这边

24:26.000 --> 24:29.120
啊 这些的话都是没什么好说的 然后关键是这里

24:30.400 --> 24:31.440
category id

24:32.320 --> 24:35.840
看到没有啊 啊 这里的话有一个category

24:36.880 --> 24:37.520
category

24:38.720 --> 24:40.640
我的这个怎么不好使了

24:42.160 --> 24:43.200
show results

24:44.800 --> 24:46.320
好 稍等一下啊 我调一下这个

24:49.750 --> 24:52.230
好 可以了 关键是这里

24:52.790 --> 24:53.750
category id

24:54.310 --> 24:55.430
这个是验证什么

24:56.150 --> 24:59.270
这个的话是验证你的那个分类

24:59.910 --> 25:01.110
你的那个分类

25:01.350 --> 25:02.310
存不存在

25:03.750 --> 25:07.830
对不对 就我们这边让我们刚说了嘛 我们这边的话就是你在添加博客的

25:08.070 --> 25:11.750
是不是有这些信息啊 有这些信息的话 比如说我这个博客分类

25:11.990 --> 25:14.790
我的这个id一共就只有三个 123

25:15.030 --> 25:18.630
那你这边的话你这个category id 你跟我写个100行不行

25:19.350 --> 25:23.590
肯定不行 我这边压根就没有对应的这个 id 为100的这个博客分类

25:24.310 --> 25:28.470
是不行 对不对 那有的同学说那你这个是在前端选择的嘛

25:28.950 --> 25:30.790
前端选择他怎么会选到100呢

25:31.270 --> 25:34.310
啊 你就是没有100的话 他压根他就只会选数123

25:34.790 --> 25:35.590
啊 就这个意思

25:36.150 --> 25:37.430
就有的同学他会觉得

25:37.990 --> 25:40.390
我这边的话 比如说我这边要新增一个博客

25:40.950 --> 25:41.830
好吧 这个关了

25:43.110 --> 25:44.070
比如说我这边的话

25:45.350 --> 25:46.070
添加博客

25:46.710 --> 25:51.590
啊 添加博客之后咱家选这个文章分类是在这里选的啊 这里的话是根据你那个

25:52.310 --> 25:54.870
就是后端的那个数据库的那个博客分类

25:55.270 --> 25:58.150
拿到了数据确认的 他怎么会选到100呢

25:58.550 --> 25:59.510
啊 但是你要注意

25:59.990 --> 26:03.510
我们这边的话验证我们是不知道你的数据是从哪里来的

26:04.470 --> 26:06.550
对不对 这个的话袁老师应该是给你讲过的

26:07.350 --> 26:10.150
对不对 我们这边是不管你那个数据是从哪里来的

26:10.470 --> 26:12.230
你有可能干嘛 你有可能通过这个

26:12.550 --> 26:13.670
是不是通过这个postman

26:14.390 --> 26:15.750
直接就把数据发过来了

26:16.310 --> 26:19.030
对不对 所以我这边的话我不管 我这边必须

26:19.750 --> 26:23.110
我这边的话必须要对你的这个

26:23.750 --> 26:26.390
这个博客分类也要进行一个验证

26:27.190 --> 26:30.150
明白吧啊 那这个验证的话这里的话 你看这里

26:31.190 --> 26:33.910
啊 这里必须要有 然后类型是integra

26:34.470 --> 26:35.190
啊 大家这边

26:35.590 --> 26:37.670
category id exist

26:37.990 --> 26:38.630
等于true

26:39.110 --> 26:39.750
这个是什么

26:40.710 --> 26:43.110
啊 这个是什么 category id exist

26:43.670 --> 26:44.630
exist true

26:45.190 --> 26:46.070
这玩意是啥呢

26:46.310 --> 26:48.550
这个的话就是我们自己扩展的

26:49.350 --> 26:51.510
啊 自己扩展的 所以我们来到这上面

26:52.870 --> 26:53.590
来到这边

26:54.710 --> 26:56.950
啊 这个是添加博客啊 主持写上

26:58.070 --> 27:00.870
这个是添加博客

27:01.590 --> 27:03.030
好 然后接下来在这上面

27:03.270 --> 27:05.350
这边的话我们就需要干嘛呢 我们就需要

27:05.670 --> 27:07.990
扩展验证规则

27:10.150 --> 27:10.550
对不对

27:10.870 --> 27:11.910
好 所以这边的话就是

27:12.470 --> 27:13.590
very dead

27:14.710 --> 27:15.910
点这个

27:16.710 --> 27:17.670
very deaders

27:20.520 --> 27:21.000
very

27:21.720 --> 27:22.360
deaders

27:22.840 --> 27:26.520
好 大家添加一个什么呢 添加一个这个category

27:27.960 --> 27:29.160
category id

27:29.720 --> 27:31.160
is exist

27:32.040 --> 27:34.120
等于一个这边 async

27:34.760 --> 27:35.160
function

27:35.560 --> 27:38.120
好 你这边来给我传一个value过来

27:38.680 --> 27:40.360
就是你这边要验证的值过来

27:40.600 --> 27:41.960
让我这边是不是进行个验证

27:42.600 --> 27:43.000
对不对

27:43.240 --> 27:45.000
啊 我这边进行验证也很简单

27:45.240 --> 27:47.160
我这边拿到哪里面去查一下就可以了

27:47.560 --> 27:49.880
就拿到这个blog type model里面

27:50.520 --> 27:52.520
对不对 然后接下来我这边的fand

27:53.320 --> 27:54.040
by pk

27:54.440 --> 27:56.520
就根据你传过来的这个id

27:56.840 --> 28:00.120
你传的是多少啊 比如说你这边的你给我传的id是100

28:00.280 --> 28:02.840
我找一下有没有这个id为100的

28:03.320 --> 28:03.960
blog分类

28:04.600 --> 28:04.920
对不对

28:05.320 --> 28:07.400
好 然后接下来这边的话你给我返回一个结果

28:08.040 --> 28:11.640
const一个blog type

28:12.280 --> 28:13.240
然后infer

28:14.760 --> 28:15.480
返回回来

28:15.800 --> 28:17.000
好 那接下来如果

28:17.560 --> 28:18.040
有

28:18.760 --> 28:21.400
如果有blog type infer

28:21.800 --> 28:22.760
那我就干嘛呢

28:23.000 --> 28:25.080
我这边就直接出return

28:25.880 --> 28:27.000
对不对 返回

28:27.240 --> 28:29.320
否则的话 我这边我就返回一句话

28:30.040 --> 28:32.760
返回什么呢 返回这个category

28:34.200 --> 28:35.480
category id

28:36.120 --> 28:36.600
is

28:37.880 --> 28:38.280
not

28:39.320 --> 28:39.800
exist

28:42.150 --> 28:42.710
看到没有

28:43.110 --> 28:45.830
这里的话就需要我们自己来扩展

28:46.230 --> 28:47.110
这个验证规则

28:47.910 --> 28:48.310
OK

28:48.790 --> 28:51.910
好 扩展完了之后 然后接下来这个就是我们的验证规则

28:52.150 --> 28:53.190
就其他没什么

28:53.670 --> 28:54.470
就除了这个

28:54.710 --> 28:56.230
这个的话我们自己扩展了一个

28:56.630 --> 28:57.510
其他的话是不是没什么

28:58.310 --> 28:58.790
对不对

28:59.030 --> 28:59.830
没什么好说的

29:00.070 --> 29:02.390
好 然后在这边把这个规则就把它收起来了

29:02.630 --> 29:03.910
因为它毕竟还是有点长

29:04.470 --> 29:07.270
好 然后接下来的话就对你的这个数据

29:07.510 --> 29:08.790
进行一个验证

29:11.350 --> 29:11.910
接下来

29:13.430 --> 29:14.710
接下来对

29:15.190 --> 29:16.710
传递

29:17.190 --> 29:19.590
过来的数据

29:19.990 --> 29:21.990
进行一个验证

29:22.550 --> 29:24.710
但是你这边对数据进行验证你注意

29:24.950 --> 29:26.630
我们的这个验证规则里面

29:27.110 --> 29:29.910
我们这边的话是不是有一个这个扩展的验证规则

29:30.470 --> 29:33.190
扩展的验证规则 然后接下来这边涉及到一个什么

29:33.510 --> 29:35.350
涉及到一个异部的处理啊

29:36.390 --> 29:37.910
对不对 涉及到一个异部的处理

29:37.910 --> 29:39.910
所以这边的话你就不能像之前那样子了

29:40.470 --> 29:41.750
这边的话你就得

29:42.630 --> 29:43.910
异部的来进行验证

29:44.070 --> 29:45.510
那我们这边就用这个try

29:46.150 --> 29:46.870
try catch

29:47.750 --> 29:48.070
try

29:49.830 --> 29:51.590
然后接下来这边 catch

29:57.650 --> 29:58.290
try catch

29:58.930 --> 29:59.810
通过这种方式

30:00.130 --> 30:01.010
好 这边try

30:01.250 --> 30:03.730
try的话 然后我们这边呢就是await

30:04.610 --> 30:05.810
等待 等待什么呢

30:06.290 --> 30:07.250
very data

30:07.650 --> 30:08.850
点async

30:10.370 --> 30:11.650
async

30:11.650 --> 30:13.010
对的async

30:13.010 --> 30:14.450
然后把你的这个信息

30:14.450 --> 30:15.810
newbloginfo

30:16.210 --> 30:17.010
传过去

30:17.250 --> 30:18.130
然后blog

30:19.090 --> 30:19.490
入

30:19.890 --> 30:21.010
是吧 传过去

30:21.010 --> 30:22.130
这里要写一下

30:22.370 --> 30:23.570
就是因为

30:24.130 --> 30:24.770
扩展

30:25.730 --> 30:29.090
扩展的验证规则

30:29.650 --> 30:32.450
里面涉及到什么呢

30:32.450 --> 30:34.690
涉及到异部的操作

30:37.010 --> 30:37.490
所以

30:39.090 --> 30:45.010
这里要采用异部的验证方式

30:47.170 --> 30:47.570
对不对

30:48.050 --> 30:49.010
所以这边是

30:49.010 --> 30:51.010
就没有像之前的话

30:51.010 --> 30:52.530
我们之前验证的话是不是直接

30:52.530 --> 30:53.570
比如说我们这边找一个

30:54.210 --> 30:55.170
我们之前哪个验证的

30:55.170 --> 30:55.970
比如这个

30:55.970 --> 30:57.730
我们之前的话是不是就直接

30:57.730 --> 30:59.170
very data点very data

30:59.170 --> 31:00.690
是不是同步的进行验证就可以了

31:01.330 --> 31:01.810
对不对

31:01.810 --> 31:02.690
但是这边的话

31:02.690 --> 31:05.410
我们因为扩展的这个验证规则里面

31:05.410 --> 31:07.250
涉及到了异部的操作

31:07.250 --> 31:08.450
所以我们这边用的是

31:08.450 --> 31:09.970
very data async

31:10.530 --> 31:11.490
你这边去验证

31:11.490 --> 31:12.450
验证如果出错

31:12.450 --> 31:13.330
它就会干嘛呢

31:13.330 --> 31:14.770
就会进这个catch

31:14.770 --> 31:16.610
catch的话说明什么呢

31:16.610 --> 31:17.330
说明是吧

31:17.650 --> 31:18.850
验证未通过

31:20.690 --> 31:22.930
验证未通过

31:22.930 --> 31:24.130
那验证未通过的话

31:24.130 --> 31:24.530
那这边呢

31:24.530 --> 31:27.250
就是slow new

31:27.250 --> 31:29.090
这个very

31:30.370 --> 31:31.490
这个very data

31:33.490 --> 31:35.410
我们有一个这个very data error

31:35.970 --> 31:36.610
对吧

31:36.610 --> 31:37.330
大家这边呢

31:37.330 --> 31:41.410
就是数据验证失败

31:42.770 --> 31:43.170
对不对

31:43.170 --> 31:45.010
抛出我们的制定错误

31:46.050 --> 31:46.290
好

31:46.370 --> 31:47.810
大家如果验证通过

31:47.810 --> 31:48.850
验证通过的话

31:48.850 --> 31:50.210
然后接下来我们就干嘛呢

31:50.210 --> 31:50.930
我们这边的话

31:50.930 --> 31:51.810
是不是应该是调

31:53.330 --> 31:54.450
数据层的这个方法

31:55.650 --> 31:56.530
对不对

31:56.530 --> 31:57.170
接下来的话

31:57.170 --> 31:58.530
就需要在我们这边

31:59.970 --> 32:00.610
在这边

32:00.610 --> 32:01.490
我们来写一个

32:04.610 --> 32:07.730
blogdao.js

32:09.090 --> 32:09.410
好

32:09.410 --> 32:16.210
这边那就是model.expods.andblogdao

32:17.250 --> 32:20.450
然后等于一个sync function

32:22.400 --> 32:22.800
对吧

32:23.440 --> 32:23.760
好

32:25.360 --> 32:26.960
然后这里需不需要接受参数啊

32:27.600 --> 32:28.320
不需要

32:28.320 --> 32:28.880
对不对

32:28.880 --> 32:30.080
接受你的这个new

32:31.360 --> 32:33.120
bloginfer

32:33.920 --> 32:34.880
好接受了之后

32:34.880 --> 32:35.920
然后接下来这里的话

32:35.920 --> 32:37.920
我们就直接await

32:37.920 --> 32:38.880
等待什么呢

32:38.880 --> 32:41.680
等待我们的这个blogmodel

32:42.560 --> 32:43.600
然后点什么

32:44.080 --> 32:44.720
secret

32:46.000 --> 32:46.560
对不对

32:46.720 --> 32:48.480
然后把这个newbloginfer

32:49.120 --> 32:50.320
把它创立进去

32:50.320 --> 32:51.200
把它等待

32:51.200 --> 32:52.160
它创建完了之后

32:52.160 --> 32:54.000
它就会把那个创建好的信息

32:54.000 --> 32:54.880
返回给你

32:54.880 --> 32:55.120
好

32:55.120 --> 32:55.920
然后这样我们这边

32:55.920 --> 32:57.360
我们对它进行一个解构

32:58.480 --> 32:59.520
这边的const

33:00.080 --> 33:00.720
一个这个

33:02.080 --> 33:04.320
这边的就是dataValues

33:05.440 --> 33:06.560
进行一个解构

33:06.560 --> 33:07.520
解构完了之后

33:07.520 --> 33:08.240
然后接下来的话

33:08.240 --> 33:09.440
这边return

33:10.080 --> 33:12.720
把这个信息把它返回去

33:14.480 --> 33:15.280
对吧

33:15.440 --> 33:16.720
这就是我们的这个

33:16.720 --> 33:17.520
数据

33:17.520 --> 33:18.560
dao乘

33:18.560 --> 33:18.880
好

33:18.880 --> 33:20.640
那接下来回到我们这边

33:21.440 --> 33:23.280
回到我们的这个sorrys这边

33:23.280 --> 33:24.160
sorrys这边的话

33:24.160 --> 33:25.600
是不是就是调用这个方法

33:26.960 --> 33:27.600
对吧

33:27.600 --> 33:28.160
直接的话

33:28.160 --> 33:29.440
这边就await

33:30.400 --> 33:31.520
调用这个方法

33:33.120 --> 33:34.720
它这边给我自动引入秒

33:34.720 --> 33:36.720
你看这这这一次又没自动引入

33:37.440 --> 33:38.000
是因为什么呢

33:38.000 --> 33:39.200
是因为不是我手敲的吗

33:39.760 --> 33:39.920
好

33:39.920 --> 33:40.640
这边我看一下

33:41.440 --> 33:42.080
这边的话

33:43.280 --> 33:43.920
and

33:45.280 --> 33:46.640
blog dao

33:47.600 --> 33:48.560
要自己敲

33:48.560 --> 33:49.200
看到没有

33:49.200 --> 33:50.880
我刚才是直接粘过来的

33:50.880 --> 33:51.760
粘过来还不行

33:52.400 --> 33:52.640
啊这边

33:53.280 --> 33:53.600
好

33:53.600 --> 33:55.360
然后接下来这边调这个方法

33:55.360 --> 33:56.160
把什么扔进去

33:56.640 --> 33:57.680
所以就是把我们的这个

33:57.680 --> 33:58.880
newblog infer

33:59.680 --> 34:00.400
是不是扔过去

34:01.040 --> 34:01.520
对不对

34:01.520 --> 34:02.480
进行一个新增

34:04.080 --> 34:05.680
进行一个新增

34:06.960 --> 34:07.280
好

34:07.280 --> 34:08.160
新增完了之后

34:08.160 --> 34:09.280
然后加这边接受一下

34:09.280 --> 34:10.160
它返回的数据

34:10.880 --> 34:11.280
data

34:12.240 --> 34:12.800
接受一下

34:14.000 --> 34:14.240
好

34:14.400 --> 34:15.040
那接下来这边

34:15.440 --> 34:16.240
这边还有

34:16.240 --> 34:16.880
还有任务

34:17.680 --> 34:18.720
还有什么任务呢

34:18.720 --> 34:19.440
你想想

34:19.440 --> 34:21.120
你文章新增了

34:22.080 --> 34:24.240
你这个文章所属的分类

34:24.960 --> 34:25.680
要不要新增

34:26.400 --> 34:27.440
哎这里有个问题

34:28.160 --> 34:28.880
我这边写一下

34:29.840 --> 34:30.480
接下来

34:31.280 --> 34:32.880
还有一个

34:33.600 --> 34:34.400
工作

34:34.400 --> 34:35.280
什么呢

34:35.280 --> 34:36.000
文章

34:36.880 --> 34:37.440
新增了

34:38.080 --> 34:40.480
对应的文章

34:41.440 --> 34:42.400
分类

34:42.400 --> 34:44.000
是不是也应该

34:45.200 --> 34:45.840
新增了

34:47.200 --> 34:47.520
对不对

34:48.080 --> 34:48.800
也应该新增

34:49.520 --> 34:50.720
所以这里的话就涉及到

34:50.720 --> 34:52.000
我们这边要去扩展

34:52.000 --> 34:52.640
我们的这个

34:53.200 --> 34:54.320
blog type

34:54.880 --> 34:55.440
dao

34:57.040 --> 34:58.000
blog type

34:58.480 --> 34:59.040
找一下

34:59.040 --> 34:59.360
这里

34:59.920 --> 35:00.720
我们要扩展它

35:01.200 --> 35:01.680
这里的话

35:01.680 --> 35:02.880
我们之前的话就只写了

35:02.880 --> 35:04.240
就是我们那个接口有几个

35:04.640 --> 35:06.160
这边是不是就写了几个方法

35:06.640 --> 35:07.120
对不对

35:07.120 --> 35:08.480
那这里的话其实还有一个

35:08.960 --> 35:11.120
就是接口上没有的这个方法

35:11.600 --> 35:12.400
这个是什么呢

35:12.400 --> 35:13.600
这个的话就是根据

35:13.600 --> 35:14.400
这个id

35:15.680 --> 35:17.440
根据id

35:17.440 --> 35:18.240
新增

35:18.880 --> 35:20.240
这个对应

35:21.600 --> 35:23.360
对应这个伯克

35:24.160 --> 35:24.720
分类

35:27.030 --> 35:28.870
分类的文章

35:29.670 --> 35:30.070
数量

35:32.630 --> 35:34.070
好这里的话就是model

35:35.670 --> 35:37.350
model.expose

35:37.910 --> 35:38.550
点什么呢

35:39.190 --> 35:40.710
and blog

35:41.350 --> 35:42.310
to type

35:42.790 --> 35:44.230
但这个名字你自己随便取

35:45.110 --> 35:46.070
然后这边

35:46.070 --> 35:47.110
sync

35:47.110 --> 35:47.910
function

35:47.910 --> 35:49.110
他接收一个什么呢

35:49.110 --> 35:50.550
他接收一个这个id

35:51.990 --> 35:53.030
接收一个id

35:53.030 --> 35:55.110
就是你那个伯克分类的id

35:55.110 --> 35:56.310
你究竟是哪个

35:56.310 --> 35:57.190
伯克分类

35:57.190 --> 35:59.270
好大家我们首先让我们把它找出来

35:59.270 --> 36:00.470
说这边的await

36:01.110 --> 36:01.990
这个blog

36:02.550 --> 36:03.270
typemodel

36:03.750 --> 36:05.910
点这个fan的bypk

36:07.030 --> 36:08.710
然后接下来这边id

36:09.590 --> 36:10.550
把它找出来

36:10.550 --> 36:11.270
找出来之后

36:11.270 --> 36:12.870
然后加这边const data

36:13.750 --> 36:14.470
把它

36:14.470 --> 36:15.350
存一下

36:15.350 --> 36:16.150
存一下之后

36:16.150 --> 36:17.990
然后接下来的话这边data

36:17.990 --> 36:18.950
点什么呢

36:18.950 --> 36:20.630
他有一个这个叫做article

36:23.360 --> 36:24.720
article count

36:25.840 --> 36:27.680
你看一下你过来看一下

36:27.680 --> 36:30.320
我们的那个文章这边是不是有一个article count

36:30.880 --> 36:31.600
对不对

36:31.600 --> 36:33.040
说这里的话article count

36:33.040 --> 36:34.480
它是不是就应该是加加

36:36.000 --> 36:36.640
对不对

36:36.640 --> 36:38.320
只要跟我传一个id过来

36:38.320 --> 36:40.160
然后找到这个对应的分类

36:40.160 --> 36:42.000
然后接下来我这边文章数量

36:42.000 --> 36:42.800
加加

36:42.800 --> 36:44.480
加加之后然后接下来的话这边

36:44.640 --> 36:45.200
await

36:45.760 --> 36:47.440
这个data

36:47.440 --> 36:48.240
点save

36:48.880 --> 36:50.000
存储一下

36:50.000 --> 36:50.880
存储完了之后

36:50.880 --> 36:52.160
然后接下来这边

36:52.160 --> 36:52.480
whip

36:53.280 --> 36:55.600
你看我们这边就多了这么一个

36:56.240 --> 36:57.120
这个方法

36:57.920 --> 36:58.320
看到没有

36:58.320 --> 37:00.080
这个方法是接口上看不到的

37:00.880 --> 37:01.680
接口上看不到的

37:02.480 --> 37:02.720
好

37:04.560 --> 37:06.800
接下来的话回到我们这边

37:07.520 --> 37:09.120
blogsoris这边

37:09.120 --> 37:10.400
那这边的话是不是就可以

37:10.400 --> 37:11.360
调用刚才那个方法

37:12.160 --> 37:12.560
对不对

37:12.640 --> 37:13.840
这边呢就是and

37:15.680 --> 37:17.280
blog2type

37:18.400 --> 37:20.560
然后把你的这个id传过去

37:20.560 --> 37:21.920
id的话在哪里拿得到

37:22.560 --> 37:24.960
我这边的话是不是就是newbloginfer

37:24.960 --> 37:26.160
它里面有一个什么呀

37:26.160 --> 37:27.360
是不是category id

37:28.160 --> 37:28.640
对不对

37:28.640 --> 37:30.000
把它传过去就可以了

37:30.000 --> 37:32.160
传过去之后然后接下这边await

37:32.960 --> 37:34.000
等待一下

37:34.000 --> 37:35.280
等待了之后然后接下来

37:35.280 --> 37:36.960
然后这边返回

37:36.960 --> 37:38.000
返回什么呢

37:38.000 --> 37:40.320
返回这个format

37:41.120 --> 37:41.840
response

37:43.520 --> 37:44.800
这边了就是0

37:45.600 --> 37:46.640
然后没有数据

37:46.640 --> 37:47.600
然后下这边

37:47.600 --> 37:47.920
data

37:48.720 --> 37:48.960
ok

37:49.520 --> 37:49.840
好了

37:49.840 --> 37:50.800
我们整个这个

37:51.360 --> 37:52.800
添加文章

37:52.800 --> 37:54.320
我们这个就写好了

37:54.320 --> 37:54.800
写好之后

37:54.800 --> 37:56.000
我们来测试一下

37:56.000 --> 37:56.720
我们这边了

37:57.280 --> 37:57.680
保存

37:59.360 --> 38:00.320
保存看有没有错

38:01.840 --> 38:02.800
好没有错是吧

38:02.800 --> 38:03.600
没有错之后

38:03.600 --> 38:04.320
然后下我们这边

38:04.320 --> 38:05.120
我们来测试一下

38:07.120 --> 38:08.560
这里的话就应该是什么呢

38:08.560 --> 38:09.600
就应该是post

38:10.560 --> 38:11.360
对不对

38:11.360 --> 38:11.600
好

38:11.680 --> 38:12.640
然后接下来这里

38:12.640 --> 38:14.800
这里的话就是应该是block type

38:16.080 --> 38:16.320
好

38:16.320 --> 38:17.280
然后接下来这里

38:17.280 --> 38:18.080
这里这个body

38:19.680 --> 38:20.480
body的话

38:20.480 --> 38:21.360
然后我们这边

38:21.360 --> 38:22.080
我们就找一个

38:23.440 --> 38:24.480
找一个这里

38:25.600 --> 38:27.120
发布文章

38:27.120 --> 38:27.840
我们就找这个

38:28.400 --> 38:28.800
好吧

38:29.360 --> 38:29.920
就找这个

38:31.760 --> 38:32.000
好

38:32.000 --> 38:32.800
把它拿过来

38:33.760 --> 38:34.800
拿到postman里面

38:35.840 --> 38:36.400
拿到这边

38:36.960 --> 38:37.600
把章过来

38:38.960 --> 38:40.000
这里报了一个错

38:40.960 --> 38:42.000
我看这里报什么错

38:42.880 --> 38:44.480
这里它应该是严格的接受

38:45.200 --> 38:46.160
这边不应该加兜

38:46.160 --> 38:46.480
好

38:46.480 --> 38:47.200
OK

38:47.200 --> 38:47.440
好

38:47.440 --> 38:48.560
你注意这个toc

38:49.120 --> 38:50.400
toc我们是回头

38:50.400 --> 38:51.680
会进行这个处理的

38:52.720 --> 38:53.120
OK

38:53.120 --> 38:54.720
所以toc你不管它

38:54.720 --> 38:55.760
toc它回头的话

38:55.760 --> 38:57.360
就我们这一次增加的话

38:57.360 --> 38:58.240
它会变成什么

38:58.880 --> 39:00.240
它是不是会变成

39:01.280 --> 39:01.920
变成这个

39:02.800 --> 39:03.120
对不对

39:03.120 --> 39:05.040
我们先固定写成这个样子

39:05.040 --> 39:07.200
我们下节课来处理这个toc

39:07.760 --> 39:08.320
好吧

39:08.320 --> 39:09.520
下节课来处理toc

39:10.160 --> 39:10.960
所以这边的话

39:10.960 --> 39:13.040
我们就先不看那个toc

39:13.760 --> 39:15.040
除开toc以外的

39:16.080 --> 39:17.360
category id 这里的话

39:17.360 --> 39:18.160
你不能写这个

39:18.960 --> 39:19.760
不能写这个

39:19.760 --> 39:21.200
category id 我们就写什么呢

39:21.200 --> 39:21.680
写个1

39:22.640 --> 39:23.840
它这里是要求是一个什么

39:23.840 --> 39:24.160
那个

39:24.800 --> 39:25.440
我们来看一下

39:27.440 --> 39:28.240
我们这边的话

39:28.240 --> 39:30.000
category id 要求是一个什么

39:32.080 --> 39:34.320
是一个integer

39:34.800 --> 39:35.280
看到没有

39:35.280 --> 39:35.920
是个integer

39:35.920 --> 39:37.040
然后这个create date

39:37.040 --> 39:38.480
也是一个integer

39:38.480 --> 39:40.000
然后comment number

39:40.000 --> 39:40.640
scan number

39:40.640 --> 39:41.840
这些都是integer

39:41.840 --> 39:43.280
所以我们这边有些东西

39:43.280 --> 39:44.080
你得改一改

39:44.640 --> 39:45.200
这个的话

39:45.200 --> 39:46.320
它是一个integer

39:46.320 --> 39:47.600
所以你这边得改一改

39:48.320 --> 39:49.360
这个的话也是integer

39:50.240 --> 39:52.800
其他的话就没什么了

39:53.840 --> 39:54.480
是吧

39:54.480 --> 39:56.000
其他的话就没什么了

39:56.000 --> 39:56.240
好

39:56.240 --> 39:57.120
那接下来我们这边

39:57.760 --> 39:58.160
剩的

39:59.520 --> 40:01.520
这边数据教验失败

40:02.240 --> 40:03.040
数据教验失败

40:03.040 --> 40:03.680
我们来看一下

40:05.200 --> 40:06.880
数据教验失败是怎么回事

40:07.600 --> 40:07.920
好

40:09.280 --> 40:09.840
这边的话

40:09.840 --> 40:11.840
它直接抛出error了

40:11.840 --> 40:12.720
直接抛出error

40:12.720 --> 40:13.200
那我们这边

40:13.200 --> 40:14.000
我们想要看一下

40:14.000 --> 40:15.200
究竟是哪里失败了

40:15.920 --> 40:16.320
对不对

40:16.960 --> 40:17.440
好

40:17.440 --> 40:18.160
我们这边的话

40:18.160 --> 40:19.360
怎么来看呢

40:19.360 --> 40:19.520
好

40:19.520 --> 40:20.320
这边你可以

40:23.440 --> 40:24.000
const

40:25.200 --> 40:26.720
const一个result

40:27.440 --> 40:27.920
等于

40:29.200 --> 40:29.920
然后接下来

40:29.920 --> 40:30.000
好

40:30.000 --> 40:30.400
这边

40:31.840 --> 40:32.320
这边的话

40:32.320 --> 40:33.200
然后打印一下

40:33.760 --> 40:36.160
log result

40:37.040 --> 40:37.440
保存

40:39.910 --> 40:40.230
好

40:40.230 --> 40:40.790
保存之后

40:40.790 --> 40:41.590
然后像我们这边

40:41.590 --> 40:41.990
再来

40:43.750 --> 40:43.990
走

40:44.950 --> 40:45.190
好

40:45.190 --> 40:46.310
然后像这边来看一下

40:49.570 --> 40:50.050
这边的话

40:50.050 --> 40:50.450
它是

40:50.450 --> 40:50.930
我看一下

40:52.370 --> 40:53.330
tri-catch

40:54.050 --> 40:55.810
它是直接就抛出错误了

40:55.810 --> 40:56.130
是吧

40:57.570 --> 40:59.250
直接就抛出错误了

40:59.890 --> 41:00.450
但是我这边

41:00.450 --> 41:01.090
我想看一下

41:01.090 --> 41:02.610
是哪个验子没通过

41:03.330 --> 41:03.970
我这边的话

41:03.970 --> 41:04.770
我调一下

41:04.770 --> 41:05.330
稍等一下

41:06.610 --> 41:07.410
这边我看一下

41:08.770 --> 41:09.490
稍微调一下

41:11.780 --> 41:14.100
刚才稍微调试了一下

41:14.100 --> 41:14.980
刚才是这个地方

41:15.940 --> 41:16.980
这个地方写错了

41:16.980 --> 41:17.620
这个地方

41:17.620 --> 41:19.540
我刚才是直接写的是id

41:20.340 --> 41:20.980
怎么样

41:20.980 --> 41:21.700
直接写的id

41:21.700 --> 41:23.060
那它这个肯定是没有id嘛

41:23.060 --> 41:23.300
对吧

41:23.300 --> 41:24.500
你传过来的是value

41:25.300 --> 41:27.140
然后我把这边让我把它改了

41:27.140 --> 41:28.180
改成value

41:28.180 --> 41:29.060
改成value之后

41:29.060 --> 41:29.940
然后接下来

41:29.940 --> 41:31.380
这边就ok了

41:31.380 --> 41:31.540
好

41:31.540 --> 41:32.580
我们这边保存一下

41:32.580 --> 41:33.300
重新保存一下

41:34.020 --> 41:34.900
保存一下之后

41:34.900 --> 41:35.540
然后像我们这边

41:35.540 --> 41:36.660
我们来看一下

41:36.660 --> 41:38.420
来到我们的poster man

41:38.420 --> 41:40.180
其实刚才已经跑成功了

41:40.180 --> 41:40.660
我们这边

41:41.060 --> 41:42.420
重新升的

41:42.420 --> 41:42.980
你看这边

41:44.260 --> 41:45.140
怎么添加成功了

41:45.940 --> 41:46.580
对不对

41:46.580 --> 41:48.020
你回到这个数据库

41:48.020 --> 41:48.740
你来看一下

41:49.460 --> 41:50.100
这边刷新

41:52.420 --> 41:53.380
重新刷新

41:53.380 --> 41:53.940
走

41:53.940 --> 41:54.660
你看

41:54.660 --> 41:55.460
这边是不是就有了

41:56.020 --> 41:56.340
对不对

41:56.340 --> 41:57.940
有同学说怎么有两条

41:57.940 --> 41:59.540
这一条是我刚才调试的时候

42:00.100 --> 42:01.140
添加成功的

42:01.140 --> 42:02.260
它只有一条

42:02.260 --> 42:04.020
这一条是我们刚才按的

42:04.020 --> 42:05.140
上面这一条是我刚才

42:05.140 --> 42:06.820
我把视频暂停了

42:06.820 --> 42:08.260
我在那调试

42:08.260 --> 42:09.860
然后接下来调试出来的

42:09.860 --> 42:10.580
ok

42:10.580 --> 42:10.980
好

42:10.980 --> 42:11.860
如果你这边的话

42:11.940 --> 42:12.420
你比如说

42:12.420 --> 42:13.460
这个不符合要求

42:14.180 --> 42:14.980
比如说你这里

42:16.660 --> 42:17.380
这里的话

42:17.380 --> 42:18.500
比如说他要求你

42:18.500 --> 42:19.460
传一个这个

42:21.380 --> 42:22.580
这个create debt

42:22.580 --> 42:23.140
是吧

42:23.140 --> 42:23.780
这边的话

42:23.780 --> 42:24.660
你传了一个什么呢

42:24.660 --> 42:25.460
传了一个支付串

42:26.260 --> 42:26.500
好

42:26.500 --> 42:28.100
大家这边你剩的

42:28.100 --> 42:28.500
剩的话

42:28.500 --> 42:29.380
这边是不是就是

42:29.380 --> 42:30.340
数据交易失败

42:31.300 --> 42:31.940
对不对

42:31.940 --> 42:32.900
但有的同学说

42:32.900 --> 42:33.860
那我如果比如说

42:33.860 --> 42:34.660
我是不小心

42:35.540 --> 42:36.100
不小心

42:36.100 --> 42:38.740
我这边写成这个支付串了

42:38.740 --> 42:39.300
你这边的话

42:39.300 --> 42:40.260
光抛出个错误

42:40.260 --> 42:41.540
我也不知道这个错误在哪里了

42:41.940 --> 42:43.300
你这边的话可以这样子

42:43.300 --> 42:44.500
那你补货错误

42:44.500 --> 42:44.900
错误的话

42:44.900 --> 42:46.980
他这边是不是接受一个这个错误

42:46.980 --> 42:47.620
对不对

42:47.620 --> 42:47.860
好

42:47.860 --> 42:48.980
那加这边你把这个错误

42:48.980 --> 42:50.180
你把它打印出来

42:50.180 --> 42:51.140
看一下就可以了

42:52.020 --> 42:52.420
可能没有

42:53.380 --> 42:53.940
然后接下来

42:53.940 --> 42:55.380
我们这边让我们来看一下

42:56.660 --> 42:57.380
这里

42:57.380 --> 42:58.100
从现在

42:58.100 --> 42:59.140
剩的

42:59.140 --> 42:59.700
失败

42:59.700 --> 43:00.260
失败之后

43:00.260 --> 43:01.460
然后加你在这边

43:01.460 --> 43:02.500
这边你是不是就看得到

43:03.300 --> 43:03.860
对不对

43:03.860 --> 43:05.540
这边的create debt

43:05.540 --> 43:06.100
must be

43:06.820 --> 43:08.100
这个type

43:08.100 --> 43:09.060
这个integer

43:09.860 --> 43:10.820
可能没有

43:10.980 --> 43:12.180
这里的话就可以看得到

43:13.780 --> 43:14.340
好

43:14.340 --> 43:15.460
然后这里的话

43:15.460 --> 43:17.380
是关于这个添加文章

43:17.380 --> 43:18.740
我们就写完了

43:18.740 --> 43:20.100
除了toc

43:20.100 --> 43:21.700
除了toc没有处理

43:21.700 --> 43:22.180
其他的话

43:22.180 --> 43:23.380
我们就都做了

43:23.380 --> 43:23.940
toc的话

43:23.940 --> 43:25.060
你看他现在的话

43:25.060 --> 43:26.580
他添加的就是什么

43:26.580 --> 43:27.780
是不是就是我们写的那个

43:29.060 --> 43:29.860
对不对

43:29.860 --> 43:30.580
就我们写的那个

43:31.860 --> 43:34.260
而这是关于这个添加伯克

43:34.260 --> 43:35.060
添加伯克的话

43:35.060 --> 43:36.340
稍微麻烦一点

43:36.340 --> 43:36.660
好

43:36.660 --> 43:37.540
然后加后面

43:37.540 --> 43:38.020
后面的话

43:38.020 --> 43:38.980
我们继续

43:38.980 --> 43:39.620
接下来的话

43:39.620 --> 43:40.980
我们来写怎么呢

43:40.980 --> 43:41.620
来写这个

43:41.620 --> 43:43.860
根据这个分页

43:43.860 --> 43:46.020
来获取这个伯克内容

43:46.020 --> 43:46.340
好了

43:46.340 --> 43:48.420
这边我们就写一个model

43:49.780 --> 43:51.220
model.exports

43:52.020 --> 43:53.940
点这个fender blog

43:55.620 --> 43:57.700
然后by page

43:59.700 --> 44:01.220
by page service

44:02.100 --> 44:03.220
等于一个async

44:04.900 --> 44:05.780
热号方形

44:07.140 --> 44:08.420
这边他还给我传一个什么呢

44:08.420 --> 44:09.220
他还给我传一个

44:09.220 --> 44:10.900
关于分页的这个信息

44:12.180 --> 44:13.140
对不对

44:13.140 --> 44:13.380
好

44:14.340 --> 44:15.380
然后来到我们这边

44:15.380 --> 44:16.180
这边blog

44:16.180 --> 44:17.220
那就是这里

44:17.220 --> 44:19.220
这里的话就直接调用

44:19.220 --> 44:20.900
调用这个服务程的这个方法

44:22.420 --> 44:23.380
这里的话就应该是

44:23.380 --> 44:25.540
res.send

44:26.100 --> 44:27.140
然后接下来这里的话

44:27.140 --> 44:28.180
就是await

44:28.980 --> 44:30.340
然后fender

44:31.300 --> 44:32.260
这个blog

44:33.140 --> 44:35.140
fenderblog

44:35.140 --> 44:36.820
by page service

44:36.820 --> 44:37.700
他我引入没有

44:37.700 --> 44:38.740
他引入了

44:38.900 --> 44:39.060
好

44:39.060 --> 44:39.700
然后接下来这边

44:39.700 --> 44:40.340
我们来看一下

44:40.340 --> 44:41.940
来看一下接口文档

44:41.940 --> 44:43.300
分页的话

44:44.100 --> 44:44.660
分页

44:45.860 --> 44:47.380
分页获取文章这里

44:47.380 --> 44:48.820
他这边是以什么

44:48.820 --> 44:50.980
是不是是以这个query的形式

44:52.260 --> 44:52.980
就是以这个

44:54.100 --> 44:56.260
在后面添加参数的形式

44:56.260 --> 44:57.300
是不是给我传递过来的

44:57.940 --> 44:58.580
对不对

44:58.580 --> 44:58.900
好

44:58.900 --> 44:59.620
传递过来的话

44:59.620 --> 45:00.820
然后接下来我这边的话

45:01.620 --> 45:02.100
我就

45:03.140 --> 45:06.740
这里的话就是应该是req.query

45:07.460 --> 45:09.060
就传递过来

45:09.060 --> 45:09.940
传递过来之后

45:09.940 --> 45:11.300
然后接下来我们在这边

45:11.300 --> 45:12.100
这边让我们首先

45:12.100 --> 45:13.140
我们来打一下

45:13.140 --> 45:14.500
打一下这个page infer

45:15.620 --> 45:19.540
log page infer

45:21.060 --> 45:21.300
好

45:21.300 --> 45:22.100
这边全部保存

45:25.830 --> 45:26.310
没问题

45:28.070 --> 45:29.750
来到我们的这个post面

45:30.310 --> 45:30.630
好

45:30.630 --> 45:31.590
我们这边的话

45:31.590 --> 45:33.030
后面是不是就可以跟这个参数

45:33.510 --> 45:33.750
对不对

45:33.750 --> 45:34.710
你看他有哪些参数

45:35.750 --> 45:37.030
这边可以看一下

45:37.030 --> 45:39.030
他这边有page有limit

45:39.590 --> 45:41.110
还有这个keyword

45:41.110 --> 45:42.870
然后有这个category id

45:43.510 --> 45:44.070
对不对

45:44.070 --> 45:45.030
有这些

45:45.030 --> 45:45.190
好

45:45.190 --> 45:46.310
那我们这里的话就

45:49.510 --> 45:51.110
比如说这边来一个page

45:51.670 --> 45:52.950
page的话等于一个1

45:53.670 --> 45:54.790
然后接下来这边

45:54.790 --> 45:56.790
end给你的这个limit

45:58.470 --> 46:01.750
limit等于一个比如说5

46:02.630 --> 46:03.110
对不对

46:03.110 --> 46:04.310
然后接下来end

46:04.310 --> 46:05.750
end你的这个category

46:06.630 --> 46:08.230
当然他这个都不是必须的

46:09.430 --> 46:13.350
然后category id

46:13.350 --> 46:14.790
等于一个比如说2

46:15.670 --> 46:16.230
对不对

46:16.230 --> 46:16.390
好

46:16.390 --> 46:17.190
然后我们这边发送

46:17.830 --> 46:18.470
发送值

46:19.750 --> 46:20.710
这边应该是git

46:22.710 --> 46:23.030
好

46:23.030 --> 46:23.510
然后走

46:24.870 --> 46:25.670
然后接下来回头

46:25.670 --> 46:26.630
这边来看一下

46:26.630 --> 46:27.830
你看拿到的

46:27.830 --> 46:29.110
是不是就是这么一个对象

46:30.710 --> 46:31.190
对不对

46:31.190 --> 46:34.550
拿到的就是page limit category id

46:34.550 --> 46:36.070
这么一个对象

46:37.190 --> 46:38.790
拿到是这么一个对象之后

46:38.790 --> 46:40.470
然后接下来我们这边直接干嘛呢

46:40.470 --> 46:42.070
我们把它传到那个数据层

46:43.270 --> 46:44.310
我们在这个数据层

46:44.310 --> 46:45.190
我们来写个方法

46:46.710 --> 46:47.190
数据

46:47.190 --> 46:48.070
这个是博客分类的

46:48.070 --> 46:48.470
是吧

46:48.470 --> 46:49.590
把这个就关了

46:49.590 --> 46:49.990
这边

46:52.070 --> 46:53.190
说起来我们刚才的话

46:53.190 --> 46:54.230
添加了两篇文章

46:54.230 --> 46:55.110
你回头看一下

46:55.670 --> 46:57.430
我们添加了两篇文章

46:57.430 --> 46:58.710
category id是不是都是2

46:59.190 --> 47:00.070
那我们来看一下这边

47:00.070 --> 47:00.870
block type

47:02.390 --> 47:02.950
你看这边

47:04.070 --> 47:04.950
这边的话

47:04.950 --> 47:07.110
你看他的这个account

47:07.110 --> 47:07.990
这个article counter

47:08.150 --> 47:08.870
是不是变成2了

47:09.590 --> 47:10.070
对不对

47:10.070 --> 47:11.430
所以我们刚刚那个

47:11.430 --> 47:12.310
是不是也没有问题啊

47:13.830 --> 47:13.990
好

47:13.990 --> 47:14.790
然后接下来的话

47:14.790 --> 47:16.070
我们这边继续

47:16.070 --> 47:17.590
刚才这个这个是添加博客

47:19.270 --> 47:20.550
添加博客

47:21.110 --> 47:21.350
好

47:21.350 --> 47:22.230
然后加这里

47:22.230 --> 47:25.030
这里的话就是根据分页

47:26.710 --> 47:33.270
根据分页信息来查询博客

47:34.310 --> 47:36.070
根据分页信息来查询

47:36.070 --> 47:37.750
好根据分页信息来

47:38.150 --> 47:39.030
然后这里的话

47:39.030 --> 47:39.990
就是module

47:41.110 --> 47:42.150
点exports

47:43.430 --> 47:43.990
点什么呢

47:44.710 --> 47:46.070
fan的block

47:47.350 --> 47:49.190
然后by page

47:50.390 --> 47:51.430
然后service

47:53.030 --> 47:56.070
等于一个sync function

47:57.110 --> 47:58.630
啊这边那就是你的这个

47:58.630 --> 47:59.590
pag infer

48:01.030 --> 48:01.590
是不是直接

48:02.230 --> 48:02.790
传递过来

48:03.510 --> 48:04.150
对不对

48:04.150 --> 48:04.390
好

48:04.390 --> 48:05.590
然后接下来在这个

48:05.590 --> 48:06.630
service这层

48:06.630 --> 48:07.430
service这层的话

48:07.430 --> 48:08.230
你就直接

48:08.790 --> 48:09.430
这边那就

48:09.430 --> 48:10.230
await

48:11.350 --> 48:13.430
然后fan的block

48:13.430 --> 48:14.390
by page

48:16.390 --> 48:17.830
fan的block

48:17.830 --> 48:18.070
by

48:20.230 --> 48:21.030
by page

48:21.030 --> 48:22.790
因为我们那边是不是写错了

48:22.790 --> 48:23.030
对

48:23.030 --> 48:23.670
这边写错了

48:23.670 --> 48:24.630
这边是dao

48:25.990 --> 48:26.630
dao

48:27.510 --> 48:27.750
好

48:27.750 --> 48:28.390
然后by

48:29.670 --> 48:30.710
fan的block

48:31.590 --> 48:33.030
by page dao

48:33.670 --> 48:34.230
对不对

48:34.230 --> 48:34.790
引入没有

48:35.830 --> 48:36.710
啊引入了

48:36.710 --> 48:36.950
OK

48:37.430 --> 48:38.710
然后直接把什么

48:38.710 --> 48:40.870
直接把你的pag infer

48:41.590 --> 48:42.310
扔过去

48:43.910 --> 48:44.550
对不对

48:44.550 --> 48:45.510
直接扔过去

48:45.510 --> 48:46.630
啊扔过去之后

48:46.630 --> 48:48.070
然后接下来来到这边

48:48.710 --> 48:51.350
这边的话就需要根据你的这个pag infer

48:51.910 --> 48:53.670
来进行一个具体的这个查询

48:53.670 --> 48:54.630
那这个pag infer

48:55.270 --> 48:56.310
长什么样子呢

48:56.310 --> 48:58.310
这个pag infer的话是长这个样子的

48:58.310 --> 48:59.510
我把它写在这里

49:01.910 --> 49:03.510
啊它是长这个样子的

49:03.510 --> 49:04.310
长这个样子的话

49:04.310 --> 49:06.390
然后接下来关键是这个category id

49:07.270 --> 49:08.230
我有可能干嘛呢

49:08.230 --> 49:11.670
有可能这边的category id

49:11.670 --> 49:12.470
我没有传

49:13.750 --> 49:14.310
对不对

49:14.310 --> 49:15.110
我没有传

49:15.110 --> 49:17.270
那接下来我这边的话我就需要看

49:17.270 --> 49:19.270
有没有category id

49:19.830 --> 49:21.270
啊需要看一下有没有

49:21.270 --> 49:22.550
所以这边呢就是if

49:24.470 --> 49:28.070
ifpag infer点这个category

49:29.670 --> 49:30.550
category id

49:32.470 --> 49:34.710
如果你有category id

49:34.710 --> 49:36.230
那我们这边就干嘛呀

49:36.230 --> 49:38.070
所以根据分类信息

49:38.070 --> 49:39.670
来查询对不对

49:40.310 --> 49:40.790
根据

49:42.710 --> 49:47.510
根据分类信息来查询

49:47.510 --> 49:48.550
否则的话

49:52.130 --> 49:53.810
否则的话干嘛

49:53.810 --> 49:55.010
是不是直接根据分页

49:57.490 --> 50:01.890
根据分页来进行查询

50:02.610 --> 50:04.850
是不是原来是这样子的逻辑啊对不对

50:07.030 --> 50:08.470
好本来这样子写的话

50:08.470 --> 50:10.950
这个逻辑是没有问题的

50:10.950 --> 50:11.510
啊没有问题

50:11.510 --> 50:13.910
就是你如果有这个category id

50:13.990 --> 50:17.030
就是有这个文章分类的这个id传过来

50:17.030 --> 50:18.630
我是不是应该是按照这个分类

50:18.950 --> 50:21.830
先分类啊比如你要查询这个html

50:21.830 --> 50:24.070
我只找这个html相关的这个文章

50:24.710 --> 50:25.350
对不对

50:25.350 --> 50:26.630
html相关的文章

50:26.630 --> 50:29.030
那我html文章都有比如说100篇

50:29.030 --> 50:30.710
那既然是不是再来进行一个分页

50:31.270 --> 50:31.830
对不对

50:31.830 --> 50:33.030
所以首先的话就是

50:33.030 --> 50:34.790
先根据这个category id

50:35.510 --> 50:36.310
看你有没有

50:36.310 --> 50:38.630
有的话是根据这个分类信息

50:38.630 --> 50:42.070
来进行分页查询

50:42.070 --> 50:42.710
对不对

50:42.790 --> 50:44.470
那否则的话就是根据什么呢

50:44.470 --> 50:45.990
根据这个所有

50:47.510 --> 50:49.190
所有这个博客

50:50.470 --> 50:50.870
文章

50:51.830 --> 50:53.750
进行这个分页查询

50:55.110 --> 50:56.550
这个逻辑是没有问题的

50:56.550 --> 50:57.910
但是当时我在写的时候

50:57.910 --> 50:58.470
然后写了之后

50:58.470 --> 50:59.590
然后后面再调试的时候

50:59.590 --> 51:01.030
发现出问题了

51:01.590 --> 51:01.990
出问题

51:01.990 --> 51:03.510
然后后来我就去检查

51:03.510 --> 51:04.870
然后我就发现就是这个

51:04.870 --> 51:07.030
之前大家是在写这个个人博客的时候

51:07.830 --> 51:09.510
啊这个是那个我们的前台

51:10.150 --> 51:11.270
my site client

51:11.750 --> 51:14.070
就是袁老师带着大家写的那个前台

51:14.070 --> 51:15.910
袁老师这边让他做了一个处理

51:16.710 --> 51:17.190
看到没有

51:17.190 --> 51:19.830
他这边就是z是点downer root

51:19.830 --> 51:22.470
点promise点category id

51:22.470 --> 51:23.430
看见没有

51:23.430 --> 51:24.550
就是看你有没有

51:24.550 --> 51:26.070
如果有的话就用你的

51:26.070 --> 51:27.990
否则的话他给了一个值什么呢

51:27.990 --> 51:28.950
给了一个负一

51:30.230 --> 51:31.030
看到没有

51:31.030 --> 51:31.910
给了一个负一

51:31.910 --> 51:33.190
所以当时我在调试的时候

51:33.190 --> 51:34.630
我就发现有这么一个问题

51:35.190 --> 51:36.310
而说说我这边的话

51:36.310 --> 51:37.750
我就把我的这个后端

51:37.750 --> 51:39.270
我就稍微改了一下

51:39.430 --> 51:40.230
这边他就是

51:40.870 --> 51:42.790
你如果有category id

51:43.430 --> 51:44.950
并且什么呢

51:44.950 --> 51:47.430
并且你的这个pg infer

51:48.870 --> 51:52.150
pg infer点这个category id

51:52.150 --> 51:53.990
你不能等于什么呢

51:53.990 --> 51:56.550
不能等于一个这个负一

51:56.550 --> 51:57.990
而且他是制服串的负一

51:57.990 --> 51:59.990
啊不能等于这个负一

51:59.990 --> 52:01.030
那我才干嘛呢

52:01.030 --> 52:04.230
根据这个分类信息进行分页查询

52:04.870 --> 52:08.150
否则的话就是所有博客进行分页查询

52:09.110 --> 52:09.750
看到没有

52:09.750 --> 52:11.750
注意哈这边加了这么一个

52:11.750 --> 52:13.510
为什么是因为这边的话

52:13.510 --> 52:15.030
之前你们在写的时候

52:15.030 --> 52:16.870
这边是不是做了这么一个处理

52:16.870 --> 52:17.590
对不对

52:17.590 --> 52:18.390
就是你这个

52:18.390 --> 52:20.070
你们前段的代码我就没去改了

52:21.030 --> 52:21.590
没有吧

52:21.590 --> 52:23.510
就前段的代码我就没有去改了

52:23.510 --> 52:24.950
啊这边既然做了这个处理

52:24.950 --> 52:25.830
让我这边的话

52:25.830 --> 52:27.350
我在写服务期段的时候

52:27.350 --> 52:28.630
我这边那就加上了这个

52:29.510 --> 52:29.830
OK

52:30.550 --> 52:31.750
好那接下来我们来

52:31.750 --> 52:33.910
开始进行这个分页的这个查询

52:33.910 --> 52:34.790
那我们先写什么呢

52:34.790 --> 52:35.670
我们先写这个

52:35.670 --> 52:36.630
按照所有这个

52:37.190 --> 52:37.990
博客文章

52:38.150 --> 52:39.430
进行分页查询

52:39.430 --> 52:40.710
啊这个非常简单

52:40.710 --> 52:41.670
这个的话就是什么呢

52:41.670 --> 52:43.430
这个呢就是首先awaiter

52:43.430 --> 52:45.270
因为它是异部嘛对不对

52:45.270 --> 52:47.350
然后blog model

52:48.070 --> 52:49.750
然后它有一个方法

52:49.750 --> 52:50.630
叫做什么呢

52:50.630 --> 52:52.790
fand and counter or

52:54.390 --> 52:55.270
看到没有

52:55.270 --> 52:56.950
fand and counter or

52:57.670 --> 52:58.310
啊这个是什么

52:58.310 --> 52:59.190
你这边你看一下

53:00.310 --> 53:01.270
在这边有

53:02.790 --> 53:04.310
这里的话我们找一个哈

53:05.350 --> 53:06.310
这边模型

53:06.310 --> 53:07.670
找到他的这个API文档

53:08.950 --> 53:10.550
找到他API文档

53:10.550 --> 53:11.830
再加这边model

53:11.830 --> 53:13.110
model

53:13.110 --> 53:14.390
然后接下来的话

53:14.390 --> 53:15.430
找一找

53:15.430 --> 53:17.990
fand and counter or

53:17.990 --> 53:18.870
看到没有

53:18.870 --> 53:20.550
fand or the rows

53:20.550 --> 53:22.710
然后match in your query

53:22.710 --> 53:25.670
with with in this

53:25.670 --> 53:28.230
special of sets limits

53:28.230 --> 53:31.030
这个的话相当于就是做这个分页查询的

53:31.030 --> 53:32.070
OK

53:32.070 --> 53:34.230
好那回到我们这边

53:34.230 --> 53:35.510
让他接受一个什么呢

53:35.510 --> 53:36.790
接受一个对象

53:37.750 --> 53:39.110
对象里面的话

53:39.110 --> 53:41.670
我们就需要传一些这个参数

53:41.670 --> 53:43.510
首先的话有一个这个include

53:43.510 --> 53:44.870
include

53:44.870 --> 53:45.510
这个是什么呢

53:45.510 --> 53:46.790
这个是做关联查询

53:48.150 --> 53:49.910
做关联查询include

53:49.910 --> 53:52.070
这个的话原老师应该是讲过的

53:52.070 --> 53:53.830
好那接下来我们这边

53:53.830 --> 53:54.950
我们要关联什么呢

53:54.950 --> 53:56.470
我们要关联了这个model

53:56.470 --> 53:57.910
先写上你的model名

53:57.910 --> 53:58.950
我们要关联两个

53:58.950 --> 54:01.030
是关联blog type

54:02.790 --> 54:03.350
对不对

54:03.350 --> 54:04.950
blog type model

54:04.950 --> 54:05.990
要关联这个

54:06.310 --> 54:07.430
好然后接下来

54:07.430 --> 54:10.950
这边s写上你的这个别名

54:10.950 --> 54:12.390
别名的话就叫做什么呢

54:12.390 --> 54:13.510
叫做category

54:15.110 --> 54:15.910
看到没有

54:15.910 --> 54:17.430
别名叫做category

54:17.430 --> 54:18.310
什么意思

54:18.310 --> 54:19.270
就是我们这边

54:19.270 --> 54:20.950
你如果直接去查

54:20.950 --> 54:21.990
你直接去查的话

54:21.990 --> 54:23.030
他查出来的话

54:23.030 --> 54:23.990
能不能查出来

54:23.990 --> 54:24.950
能查出来

54:24.950 --> 54:26.310
他查出来的话

54:26.310 --> 54:26.870
他的这个

54:28.790 --> 54:29.670
这个category

54:30.870 --> 54:32.710
这边呢是不是就是category idea

54:32.710 --> 54:34.150
对对应的比较二三

54:34.150 --> 54:35.510
对应的就是你那边

54:35.670 --> 54:36.870
这个blog type里面

54:36.870 --> 54:37.910
他的主键id

54:38.870 --> 54:39.510
对不对

54:39.510 --> 54:41.030
对应的是一个这个id号嘛

54:41.030 --> 54:42.310
但是你看这个接口文档

54:43.350 --> 54:44.390
你看这个接口文档

54:45.510 --> 54:46.870
这个接口文档的话

54:46.870 --> 54:48.870
他这边的话要求返回的是什么

54:48.870 --> 54:50.310
这边的这个category

54:50.950 --> 54:51.910
是不是有一个category

54:51.910 --> 54:54.070
返回的是一个对应的是不是一个对象

54:54.070 --> 54:54.390
对不对

54:54.390 --> 54:56.550
对象里面对应有id有name

54:57.350 --> 54:57.670
对不对

54:57.670 --> 54:59.990
他要求返回的是这个东西

54:59.990 --> 55:01.030
说说我们这边的话

55:02.470 --> 55:04.710
我们这边要做这么一个这个关联

55:05.830 --> 55:06.070
好

55:06.070 --> 55:07.190
然后接下来的话

55:07.190 --> 55:08.310
这边下一个参数

55:09.030 --> 55:09.910
下一个参数的话

55:09.910 --> 55:10.870
就是offset

55:12.470 --> 55:13.430
offset

55:13.430 --> 55:15.990
offset的话就是跳过多少

55:15.990 --> 55:18.390
这个呢就是做分页用的

55:18.390 --> 55:20.790
这边就是pagit infer

55:20.790 --> 55:21.830
他有一个什么

55:21.830 --> 55:22.550
他有一个这个

55:23.190 --> 55:23.670
pagit

55:24.550 --> 55:24.870
对吧

55:24.870 --> 55:25.670
有一个pagit

55:25.670 --> 55:26.790
然后接下来的话

55:26.790 --> 55:27.910
乘一个什么呢

55:27.910 --> 55:28.790
乘一个e

55:29.590 --> 55:31.190
再减去个e

55:32.470 --> 55:34.550
然后乘一个这个pagit

55:35.670 --> 55:36.470
infer

55:36.470 --> 55:37.270
点limit

55:39.110 --> 55:39.670
点limit

55:42.230 --> 55:43.430
啊这个能不能看得到

55:43.990 --> 55:45.030
这个这个offset

55:45.030 --> 55:45.830
他就代表什么呢

55:45.830 --> 55:47.350
代表跳过多少条

55:47.830 --> 55:49.110
我们跳过多少条呢

55:49.110 --> 55:50.230
这个是不是跳过多少条

55:50.230 --> 55:51.510
根据你的业数来的

55:52.230 --> 55:52.870
对不对

55:52.870 --> 55:54.950
你业数比如说你就是第一页

55:54.950 --> 55:56.630
第一页需不需要跳过

55:56.630 --> 55:57.590
第一页不需要跳过

55:58.230 --> 55:58.790
对不对

55:58.790 --> 56:00.150
你如果是第二页

56:00.150 --> 56:00.870
第二页的话

56:00.870 --> 56:02.310
那你每页看你多少条

56:02.310 --> 56:03.670
每页比如说是五条

56:04.310 --> 56:05.030
每页是五条

56:05.030 --> 56:06.310
那是不是就应该是跳过五条

56:07.030 --> 56:07.590
对不对

56:07.590 --> 56:09.030
说这边那就是pagit

56:09.030 --> 56:10.630
infer点pagit乘以1

56:10.630 --> 56:11.590
乘以1什么意思

56:12.070 --> 56:13.750
你这边拿到了是不是制服串

56:14.470 --> 56:14.870
对不对

56:14.870 --> 56:15.590
拿到制服串

56:15.590 --> 56:17.430
我这边乘以1把你转成一个什么

56:17.430 --> 56:17.990
数字

56:18.550 --> 56:19.990
数字再减去什么

56:19.990 --> 56:21.350
是不是再减去一个e

56:22.630 --> 56:22.950
对不对

56:22.950 --> 56:23.590
再减去一个e

56:23.590 --> 56:24.470
因为你第一页

56:24.470 --> 56:25.910
有第一页他不需要跳

56:25.910 --> 56:27.190
一减1是不是就是0

56:27.750 --> 56:28.230
对不对

56:28.230 --> 56:29.910
那最终乘出来也是0

56:29.910 --> 56:30.790
那如果是第二页

56:30.790 --> 56:32.150
第二页的话是不是2

56:32.630 --> 56:33.830
减1是不是就是1

56:33.830 --> 56:34.630
要乘一个

56:35.030 --> 56:35.990
这个pagitinfer

56:36.470 --> 56:36.870
limit

56:37.990 --> 56:39.590
那为什么这个不需要转

56:39.590 --> 56:41.430
因为我前面做这个惩罚

56:41.430 --> 56:41.990
惩罚的话

56:41.990 --> 56:43.830
他自动是不是就会做一个

56:43.830 --> 56:44.870
数据类型的转换

56:45.750 --> 56:46.150
对不对

56:47.270 --> 56:47.510
好

56:47.510 --> 56:48.390
然后接下来的话

56:48.390 --> 56:49.750
这边的话是limit

56:50.470 --> 56:51.030
限制

56:51.030 --> 56:52.710
限制的话是不是就是应该是

56:52.710 --> 56:55.270
pagitinfer点limit

56:55.910 --> 56:57.110
乘以1

56:58.470 --> 56:58.870
对不对

56:59.350 --> 57:01.430
那我们分页就做好了

57:02.230 --> 57:02.870
看到没有

57:02.870 --> 57:03.670
就做好了

57:03.670 --> 57:04.470
简简单单的

57:05.030 --> 57:05.510
就做好了

57:05.990 --> 57:07.750
那这个分页做好了之后

57:07.750 --> 57:09.110
这边你不要忘记return

57:11.200 --> 57:12.080
这边return

57:12.080 --> 57:13.520
把这个返回出去

57:13.520 --> 57:14.800
这个做好之后

57:14.800 --> 57:16.240
那上面那个就简单了

57:16.240 --> 57:17.280
上面那个的话

57:17.280 --> 57:18.240
基本上就是这个

57:18.240 --> 57:19.280
和这个是一样的

57:20.320 --> 57:23.520
你这边的话就直接拿过去

57:23.520 --> 57:24.400
他就多一个

57:25.120 --> 57:26.080
多一个什么呢

57:26.080 --> 57:27.840
这边的话多一个ware

57:29.120 --> 57:29.920
看到没有

57:29.920 --> 57:30.560
ware

57:30.560 --> 57:31.760
ware什么呢

57:31.760 --> 57:32.880
ware你这边

57:32.880 --> 57:34.720
你这个因为你这个硬库的是什么呢

57:34.720 --> 57:36.240
是你的这个blog type

57:36.400 --> 57:37.200
是blog分类

57:37.680 --> 57:38.160
对不对

57:38.160 --> 57:38.800
blog分类

57:38.800 --> 57:39.520
然后接下来的话

57:39.520 --> 57:40.640
刚才是查的所有

57:40.640 --> 57:42.160
那我现在的话是查什么呢

57:42.160 --> 57:44.800
查你这个blog分类的这个id

57:44.800 --> 57:46.080
要等于什么呢

57:46.080 --> 57:48.320
要等于pagitinfer

57:49.040 --> 57:50.400
点categoryid

57:51.360 --> 57:52.160
看到没有

57:52.160 --> 57:53.360
就多这么一行

57:54.320 --> 57:54.880
就可以了

57:55.600 --> 57:56.880
就多这么一行

57:56.880 --> 57:57.440
OK

57:57.440 --> 57:59.040
那这个的话就是我们的这个

57:59.040 --> 58:00.080
分页查询

58:00.640 --> 58:02.000
我们也就写好了

58:02.560 --> 58:03.280
看到没有

58:03.280 --> 58:04.240
也就写好了

58:04.240 --> 58:05.360
好

58:05.440 --> 58:06.080
然后接下来的话

58:06.080 --> 58:08.560
我们这边让我们来这边postman

58:08.560 --> 58:09.600
我们来测试一下

58:10.960 --> 58:12.000
比如说我们这边呢

58:12.000 --> 58:12.880
pagitinfer

58:12.880 --> 58:14.080
然后limit5

58:14.720 --> 58:15.760
也等一下我们这边

58:15.760 --> 58:16.640
我看一下

58:16.640 --> 58:17.680
这边返回之后

58:17.680 --> 58:18.720
我们的这个service

58:19.280 --> 58:20.160
service这边的话

58:20.160 --> 58:21.520
都还没写完是吧

58:21.520 --> 58:21.840
好吧

58:21.840 --> 58:23.120
这边把它写完

58:23.920 --> 58:24.160
好

58:24.160 --> 58:24.880
这边这边呢

58:24.880 --> 58:26.160
就是根据分页

58:27.280 --> 58:32.400
根据分页来查询博客

58:32.960 --> 58:35.760
这里的话

58:35.760 --> 58:37.680
我们就接收一下这个数据

58:37.680 --> 58:39.120
const一个data

58:39.840 --> 58:40.880
等于

58:40.880 --> 58:41.200
好

58:41.200 --> 58:41.760
然后接下来

58:41.760 --> 58:42.800
我们这边让我们打印一下data

58:43.840 --> 58:44.480
打印一下

58:44.480 --> 58:45.200
我们先看一下

58:45.200 --> 58:45.680
行不行

58:46.400 --> 58:46.720
好

58:46.720 --> 58:47.040
然后接下来

58:47.040 --> 58:48.000
我们这边保存

58:51.090 --> 58:51.970
没问题是吧

58:51.970 --> 58:52.690
没问题的话

58:52.690 --> 58:53.570
然后我们这边的话

58:53.570 --> 58:53.810
我们来

58:54.530 --> 58:55.650
我们这边的话

58:55.650 --> 58:56.530
先就这个

58:58.210 --> 58:58.850
来查嘛

58:58.850 --> 58:59.890
现在应该是查得到的

59:00.530 --> 59:01.570
来看一下这边

59:01.570 --> 59:02.290
是不是出来了

59:03.250 --> 59:04.370
看到没有

59:04.370 --> 59:05.730
这边它返回了一个对象

59:05.730 --> 59:06.850
对象里面有count

59:06.850 --> 59:08.210
count对应的是2

59:08.210 --> 59:09.490
然后接下来这边rows

59:09.490 --> 59:10.450
对应的是数组

59:10.450 --> 59:11.890
数组里面就叫

59:11.890 --> 59:13.490
是不是这边blog

59:13.490 --> 59:14.930
blog

59:14.930 --> 59:16.450
然后这边data values

59:16.450 --> 59:18.050
对应的是具体的数据

59:18.050 --> 59:19.330
对不对

59:19.330 --> 59:20.050
好了

59:20.050 --> 59:20.450
这个呢

59:20.450 --> 59:22.130
你这个肯定是要处理的

59:22.130 --> 59:22.610
好

59:22.610 --> 59:23.170
那我们这边呢

59:23.170 --> 59:24.290
就直接调用我们之前

59:24.290 --> 59:25.410
写的那个

59:25.410 --> 59:26.210
好

59:26.210 --> 59:27.490
那我们这边就const

59:27.490 --> 59:29.410
一个rows

59:29.410 --> 59:32.050
等于一个这个

59:32.290 --> 59:34.290
cando data part

59:34.290 --> 59:35.410
可能引入没有

59:35.410 --> 59:36.210
引入了

59:36.210 --> 59:36.530
好

59:36.530 --> 59:37.170
把什么呢

59:37.170 --> 59:41.170
把这个data.rows

59:41.170 --> 59:42.370
把它传进去

59:42.370 --> 59:42.610
好

59:42.610 --> 59:43.250
那这样我们这边

59:43.250 --> 59:44.770
我们来log一下

59:44.770 --> 59:46.130
rows

59:46.130 --> 59:47.730
保存

59:47.730 --> 59:48.210
好

59:48.210 --> 59:48.770
保存之后

59:48.770 --> 59:49.970
然后接下来这边重新

59:50.610 --> 59:51.810
重新发送

59:51.810 --> 59:52.130
好

59:52.130 --> 59:53.410
然后接下来这边来看一下

59:55.830 --> 59:56.470
是不是OK的

59:57.430 --> 59:58.230
是不是OK的

59:58.230 --> 59:59.270
一个数组

59:59.270 --> 01:00:00.070
返回一个数组

01:00:00.070 --> 01:00:01.510
数组里面是不是就是

01:00:01.510 --> 01:00:02.950
我们新添加的这个文章

01:00:04.150 --> 01:00:04.470
对不对

01:00:04.470 --> 01:00:06.310
当我们现在文章数量比较少

01:00:06.310 --> 01:00:07.270
啊

01:00:07.270 --> 01:00:09.110
我们回头这个多添加几篇文章

01:00:09.110 --> 01:00:09.510
之后

01:00:09.510 --> 01:00:10.790
我们可以再来测试

01:00:10.790 --> 01:00:10.950
好

01:00:10.950 --> 01:00:12.950
这代码的话肯定是没有问题的

01:00:12.950 --> 01:00:13.910
OK

01:00:13.910 --> 01:00:15.350
代码肯定是没有问题的

01:00:15.350 --> 01:00:15.910
啊

01:00:15.910 --> 01:00:17.030
我们回头的话可以

01:00:17.030 --> 01:00:18.230
多添加几篇文章

01:00:18.230 --> 01:00:19.750
自己再试一试

01:00:19.750 --> 01:00:20.070
好

01:00:20.070 --> 01:00:21.030
然后完成了之后

01:00:21.030 --> 01:00:22.470
然后我们要针对什么呢

01:00:22.470 --> 01:00:24.070
我们要针对这个toc

01:00:24.710 --> 01:00:25.670
我们要做一个处理

01:00:25.670 --> 01:00:27.590
我们要把它还原成这个数组

01:00:28.470 --> 01:00:29.430
针对这个toc

01:00:31.110 --> 01:00:31.750
针对

01:00:32.710 --> 01:00:35.030
针对这个toc

01:00:35.030 --> 01:00:39.030
要做一个还原

01:00:40.710 --> 01:00:42.630
还原的操作

01:00:42.630 --> 01:00:44.230
因为我们存到那个数据库里面

01:00:44.230 --> 01:00:45.190
我们是以什么

01:00:45.190 --> 01:00:47.190
是不是是以那个制服创的形式存的

01:00:48.070 --> 01:00:48.470
对不对

01:00:48.470 --> 01:00:49.110
啊

01:00:49.110 --> 01:00:49.670
说这边呢

01:00:49.670 --> 01:00:50.630
我就是Rose

01:00:51.830 --> 01:00:52.950
Rose它是个数组嘛

01:00:52.950 --> 01:00:53.590
好

01:00:53.590 --> 01:00:54.310
然后接下来的话

01:00:54.310 --> 01:00:54.630
这边

01:00:55.750 --> 01:00:57.590
点for each

01:00:58.310 --> 01:00:58.630
好

01:00:58.630 --> 01:00:59.350
然后接下来的话

01:00:59.350 --> 01:01:00.470
拿到每一项

01:01:01.430 --> 01:01:02.710
拿到每一项之后

01:01:02.710 --> 01:01:04.550
然后每一项它有一个什么呢

01:01:04.550 --> 01:01:06.710
它有一个toc

01:01:07.830 --> 01:01:08.150
对不对

01:01:08.150 --> 01:01:08.790
有个toc

01:01:08.790 --> 01:01:09.270
然后接下来

01:01:09.270 --> 01:01:11.430
我把它丢到接生点

01:01:11.430 --> 01:01:12.150
part里面

01:01:13.350 --> 01:01:13.990
对不对

01:01:13.990 --> 01:01:17.590
然后这边它是it.toc

01:01:19.510 --> 01:01:20.150
看到没有

01:01:20.150 --> 01:01:21.350
就做了一个这个还原

01:01:21.910 --> 01:01:23.750
把它还原成这个数组

01:01:23.750 --> 01:01:24.870
还原成数组之后

01:01:24.870 --> 01:01:25.590
然后接下来的话

01:01:25.590 --> 01:01:27.590
这边把把它返回

01:01:27.590 --> 01:01:28.470
这边就return

01:01:29.030 --> 01:01:30.390
return一个这个for

01:01:30.550 --> 01:01:31.190
met

01:01:31.750 --> 01:01:32.390
response

01:01:32.950 --> 01:01:33.830
这边就是0

01:01:34.550 --> 01:01:35.830
然后这个

01:01:35.830 --> 01:01:36.150
好

01:01:36.150 --> 01:01:36.790
然后再这边

01:01:36.790 --> 01:01:37.190
这边的话

01:01:37.190 --> 01:01:37.670
你注意

01:01:37.670 --> 01:01:38.790
这边的话

01:01:39.350 --> 01:01:40.550
你看一下这边这个文档

01:01:41.030 --> 01:01:42.230
这边让它返回一个data

01:01:42.230 --> 01:01:43.190
data里面有什么

01:01:43.190 --> 01:01:43.910
有两项

01:01:43.910 --> 01:01:44.630
一个是toto

01:01:45.590 --> 01:01:45.750
啊

01:01:45.750 --> 01:01:47.030
就是你这边对应的

01:01:47.030 --> 01:01:47.990
有多少篇文章

01:01:48.550 --> 01:01:49.350
第二个是什么呢

01:01:49.350 --> 01:01:49.830
第二个的话

01:01:49.830 --> 01:01:50.550
就是你的这个

01:01:51.110 --> 01:01:51.510
Rose

01:01:52.070 --> 01:01:53.590
Rose里面对应的是个数组

01:01:53.590 --> 01:01:54.230
数组里面是不是

01:01:54.230 --> 01:01:55.270
就是一篇一篇的文章

01:01:55.910 --> 01:01:56.710
对不对

01:01:56.710 --> 01:01:57.430
说这边的话

01:01:57.430 --> 01:01:58.070
你注意

01:01:58.070 --> 01:01:58.630
这边的话

01:01:58.630 --> 01:02:00.150
我们就要组装一个这个对象

01:02:00.790 --> 01:02:02.230
这个对象里面有什么呢

01:02:02.230 --> 01:02:03.270
有这个toto

01:02:05.560 --> 01:02:06.600
toto哪去哪

01:02:06.600 --> 01:02:07.320
toto的话

01:02:07.320 --> 01:02:08.360
我们刚才看到了

01:02:09.240 --> 01:02:09.400
啊

01:02:09.400 --> 01:02:10.600
刚才在这上面

01:02:11.160 --> 01:02:12.680
它返回到这个data里面

01:02:12.680 --> 01:02:14.040
是不是有一个这个counter

01:02:14.840 --> 01:02:15.400
对不对

01:02:15.400 --> 01:02:18.440
说这边就直接data.counter

01:02:19.000 --> 01:02:19.320
好

01:02:19.320 --> 01:02:20.200
然后接下来这里

01:02:20.200 --> 01:02:22.200
这里的话有一个Rose

01:02:23.160 --> 01:02:24.680
Rose对应的就是什么

01:02:24.680 --> 01:02:26.600
对应的就是我们返回的Rose

01:02:28.440 --> 01:02:29.160
对不对

01:02:29.160 --> 01:02:29.400
好

01:02:29.400 --> 01:02:30.920
那现在我们这边保存一下

01:02:30.920 --> 01:02:31.640
我们来看一眼

01:02:32.760 --> 01:02:33.800
过来看一眼

01:02:35.320 --> 01:02:35.720
这边

01:02:36.520 --> 01:02:36.840
走

01:02:38.040 --> 01:02:38.680
是不是返回了

01:02:39.560 --> 01:02:40.440
对不对

01:02:40.440 --> 01:02:41.160
和我们的那个

01:02:42.040 --> 01:02:42.840
这边要求的

01:02:43.800 --> 01:02:44.520
是不是是一样的

01:02:45.720 --> 01:02:46.360
对不对

01:02:46.360 --> 01:02:47.560
和我们这边要求的是一样的

01:02:48.840 --> 01:02:49.080
好

01:02:49.080 --> 01:02:51.240
这是关于这个添加文章

01:02:52.360 --> 01:02:53.480
那我们这边的话

01:02:53.480 --> 01:02:54.200
这个样子

01:02:54.200 --> 01:02:55.640
我本来说这节课的话

01:02:55.640 --> 01:02:57.640
把这个文章模块

01:02:58.280 --> 01:02:59.480
直接就把它讲完

01:02:59.480 --> 01:03:00.200
但是现在的话

01:03:00.200 --> 01:03:01.240
都已经讲了

01:03:01.400 --> 01:03:02.520
一个多小时了

01:03:02.520 --> 01:03:03.240
对吧

01:03:03.240 --> 01:03:04.520
大家也休息一会

01:03:04.520 --> 01:03:06.600
把这个添加博客

01:03:06.600 --> 01:03:08.120
和这个分业查询博客

01:03:08.120 --> 01:03:09.560
自己下来看一下

01:03:09.560 --> 01:03:11.000
把这一部分做一下

01:03:11.000 --> 01:03:12.200
让我这个文章模块

01:03:12.200 --> 01:03:13.400
我就分为两节课来讲

01:03:14.040 --> 01:03:14.680
好吧

01:03:14.680 --> 01:03:15.720
分为两节课来讲

01:03:15.720 --> 01:03:16.520
好

01:03:16.520 --> 01:03:17.960
这期课就先到这里

01:03:17.960 --> 01:03:18.840
再见

