WEBVTT

00:00.500 --> 00:05.810
好 我们这一小节呢 把咱们的商品地表页来实现

00:05.810 --> 00:10.810
商品地表页 我们来看一下 整个的这个组件 我们可以分成两部分

00:10.810 --> 00:16.810
对吧 第一部分就是搜索的这个区域 第二部分就是下面的表格的区域

00:16.810 --> 00:19.810
那么我们就可以给它分开来写 对不对

00:19.810 --> 00:23.810
那一部分是我们的 来写一下我们的这个页面啊

00:23.810 --> 00:29.810
然后再写这个页面之前 我切了一下分支 切到了新的一个分支上

00:29.810 --> 00:34.810
我们这个分支看一下 怎么去看单线的分支

00:34.810 --> 00:43.820
你切了一下就行了 我当前的分支就是以当前这个小姐的一个名字来命名的

00:43.820 --> 00:48.820
命名的 这是第十二小姐的 对吧 我们就叫十二了

00:48.820 --> 00:55.820
然后接下来我们就来实现一下这个结构 刚刚说商品地表页 它又分为

00:55.820 --> 01:00.820
我先把这个商品地表页面 它的一个class name 先起出来啊

01:00.820 --> 01:06.820
方便如果我们后面去写样式的话 方便我们去选中这个元素 对吧

01:06.820 --> 01:13.820
那这一部分应该分成两部分 一部分是搜索 还有一部分是表格

01:13.820 --> 01:18.820
那搜索的话比较简单 就是两个搜索框 对吧

01:18.820 --> 01:21.820
然后这两个搜索框 我们会发现

01:21.820 --> 01:28.820
它是不是有搜索按钮 点击搜索的时候 它会进行一个数据的一个检索 对吧

01:28.820 --> 01:35.820
那么我们这块可以怎么去做呢 我们就可以用现成的组件啊 用一个form组件去实现

01:35.820 --> 01:39.820
在这里 我们就找一下啊

01:39.820 --> 01:47.820
form 上面应该有个form module 在这里 我们之前用过form module 对吧

01:48.820 --> 01:51.820
在我们登录的表单当中 我们去用的

01:51.820 --> 01:56.820
然后这一次呢 我们用的应该是内连的登录栏 内连的这样的一个元素

01:56.820 --> 01:59.820
看到了吗 应该是站在一行的一个元素啊

01:59.820 --> 02:03.820
那么我们可以选择的就是这一个结构呗

02:03.820 --> 02:08.820
我们可以把这个结构拿过来 先来试验一下 对吧

02:08.820 --> 02:13.820
那我们这里面又涉及到两块 它的一个提交 对吧

02:13.820 --> 02:17.820
两部分一个提交 并且我们刚刚也划分了

02:17.820 --> 02:20.820
上面它属于一块内容 下面属于一块内容

02:20.820 --> 02:26.820
那么我们就可以把上半部分单独抽离出来 做成一个组件

02:26.820 --> 02:29.820
把它单独拿出来做成一个组件

02:29.820 --> 02:32.820
那么我们这里面就需要在我们的components下面

02:32.820 --> 02:36.820
再新建一个文件 一个组件的文件

02:36.820 --> 02:41.820
我们就叫设施吧 代表的是一个搜索的一个组件

02:42.820 --> 02:46.820
那我们一般什么时候会去封装这样的一个组件啊

02:46.820 --> 02:55.820
一般我们就是在 如果页面当中有多个页面都有这样的一个功能的话

02:55.820 --> 02:58.820
我们会把它单独拆分出来的封装

02:58.820 --> 03:01.820
还有这种呢 就是如果页面比较复杂的话

03:01.820 --> 03:05.820
我们最好把一个页面拆分成多个组件

03:05.820 --> 03:10.820
每一个组件之间 那我们让它相互之间没有任何的联系

03:10.820 --> 03:15.820
这样一来 我们就可以独立的去使用这个组件了

03:15.820 --> 03:19.820
那对于其他的项目 如果你想要用到这种联动的

03:19.820 --> 03:22.820
它俩之间没有联动关系 对吧

03:22.820 --> 03:28.820
如果你想要在其他的页面里面 想要去使用这样的一个组件的话

03:28.820 --> 03:31.820
我们可以直接拿过来去使用 对吧

03:31.820 --> 03:37.820
那这就是封装组件的一种情况啊

03:37.820 --> 03:41.820
那好 那我们来把这样的一个结构先实现一下吧

03:41.820 --> 03:44.820
搜索的话 我们这里面应该有一个module 对吧

03:44.820 --> 03:48.820
就是我们要存处这些信息的一个数据

03:48.820 --> 03:55.820
那我们这里面呢 就管它叫search form吧 叫search form

03:55.820 --> 03:58.820
OK吧 代表的是一个搜索的一个表单

03:58.820 --> 04:00.820
那搜索表单里面有个提交 对吧

04:00.820 --> 04:04.820
那我们就需要有一个square的标签

04:04.820 --> 04:09.820
然后里面来个myster的 把这个方法写一下

04:09.820 --> 04:13.820
把它拿过来 上面handle submit

04:13.820 --> 04:18.820
代表是我们提交表单的时候 它出发的

04:18.820 --> 04:22.820
实践 出发的这个函数 对吧

04:22.820 --> 04:26.820
提交表单的时候 出发

04:26.820 --> 04:32.970
OK吧 然后接下来我们里面的数据改一改吧

04:32.970 --> 04:35.970
像我们这里面没有用户名了 对吧

04:35.970 --> 04:39.970
但是我们这里面有一个搜索的search

04:39.970 --> 04:42.970
叫search word

04:42.970 --> 04:47.970
这个字段 这个字段最好和我们后台的字段

04:47.970 --> 04:49.970
一的对应 后台的字段叫什么呢

04:49.970 --> 04:53.970
回过来看一下 再让我们查找查询产品地表

04:53.970 --> 04:55.970
这里有个search word的

04:55.970 --> 04:57.970
其实就是我们今天做产品的一个关键词

04:57.970 --> 05:01.970
看到了吗 就是关键字 在这里

05:01.970 --> 05:05.970
那我们就可以把这个search word拿过来放在这

05:05.970 --> 05:07.970
对吧 然后我们的数据里面

05:07.970 --> 05:09.970
我们这里面就需要有一个数据吧

05:09.970 --> 05:11.970
那数据来个data

05:11.970 --> 05:16.970
接下来再称一个search word

05:16.970 --> 05:21.600
先给它默认值 把一个空的

05:21.600 --> 05:24.600
对吧 那除此之外呢 是不是还有一个内幕

05:24.600 --> 05:26.600
这个内幕的字段叫category

05:26.600 --> 05:29.600
叫category 在这里叫category

05:29.600 --> 05:32.600
我们就需要把这个字段也给它写进去

05:32.600 --> 05:36.550
可以吧 开开归

05:37.550 --> 05:40.550
那好 那我们这个内幕的字段

05:40.550 --> 05:43.550
它应该是一个下拉列表 对不对

05:43.550 --> 05:46.550
并且我们上面这个好像没有这个图标

05:46.550 --> 05:48.550
所以我们就可以把图标删掉了

05:48.550 --> 05:52.550
placeholder里面我们需要给它输入的是

05:52.550 --> 05:55.550
查询请输入

05:55.550 --> 06:00.550
请输入关键字

06:00.550 --> 06:02.550
然后我们这里面是不是有个level

06:02.550 --> 06:05.550
你看一下 我们这里是不是有个检索关键字

06:05.550 --> 06:08.550
所以我们这里也需要给它添加上

06:08.550 --> 06:10.550
检索关键字的level

06:13.550 --> 06:16.550
检索关键字 对吧

06:16.550 --> 06:18.550
然后接下来下面这个

06:18.550 --> 06:21.550
我们叫商品内幕 对吧

06:21.550 --> 06:23.550
我们再给它加一个level

06:24.550 --> 06:26.550
商品内幕

06:26.550 --> 06:31.550
再接下来我们需要添加下拉列表了

06:31.550 --> 06:34.550
对不对 那我们就找一下这个下拉列表

06:34.550 --> 06:36.550
那就是一个select 组件

06:37.550 --> 06:39.550
在这里 选择器 对吧

06:39.550 --> 06:40.550
select 选择器

06:40.550 --> 06:43.550
我们就直接找到我们想要的

06:43.550 --> 06:45.550
我们想用的

06:45.550 --> 06:50.890
看一下 好像这个可以 对不对

06:51.890 --> 06:52.890
这个可以啊

06:52.890 --> 06:54.890
我们就直接复制它了

06:54.890 --> 06:56.890
把它复制过来

07:01.930 --> 07:03.930
OK 复制到这个位置

07:03.930 --> 07:04.930
我们格数画一下

07:04.930 --> 07:08.930
然后开始把里面的东西都改一改 对吧

07:08.930 --> 07:10.930
首先就是这个placeholder

07:10.930 --> 07:19.620
应该是选择 请选择商品内幕 对吧

07:19.620 --> 07:22.620
然后接下来呢 下面这个呢

07:22.620 --> 07:24.620
option filter prop

07:24.620 --> 07:26.620
如果这个你不知道什么意思的话

07:26.620 --> 07:27.620
我们可以往下去看啊

07:27.620 --> 07:30.620
你看一下它到底代表了什么意思

07:31.620 --> 07:33.620
我们去看一下option

07:34.620 --> 07:36.620
option 这里

07:36.620 --> 07:39.620
option filter prop 对吧

07:39.620 --> 07:40.620
option filter prop

07:40.620 --> 07:43.620
减锁是过滤对应的option属性

07:43.620 --> 07:47.620
那这就是代表的是减锁的一个字段 对吧

07:47.620 --> 07:49.620
它是一个减锁的字段啊

07:50.620 --> 07:52.620
那我们来看一下吧

07:52.620 --> 07:53.620
它要减锁的

07:53.620 --> 07:55.620
你看啊 我这里面写的是求准

07:55.620 --> 07:58.620
减锁的这个字段是求准这个字段 对不对

07:58.620 --> 08:00.620
那你看过来看一下吧

08:00.620 --> 08:02.620
我们的这个数据里面

08:02.620 --> 08:04.620
你看一下这里

08:05.620 --> 08:07.620
我们需要让它减锁吗

08:07.620 --> 08:08.620
我们来看一下

08:08.620 --> 08:10.620
我们这里面是不是不想让它减锁

08:10.620 --> 08:12.620
那不想让它减锁的话

08:12.620 --> 08:14.620
我们就可以把这个删掉了啊

08:14.620 --> 08:17.060
没有用

08:17.060 --> 08:19.060
没有用到它

08:19.060 --> 08:21.060
ok 然后接下来下面的这个减锁

08:21.060 --> 08:23.060
也是不要让删掉

08:23.060 --> 08:26.060
再接下来试这个聚焦

08:26.060 --> 08:27.060
我们不需要

08:27.060 --> 08:29.060
试焦也不需要 对吧

08:29.060 --> 08:31.060
只有改变的时候我们才需要啊

08:31.060 --> 08:33.060
然后再来

08:33.060 --> 08:35.060
往下就是它的一个选项

08:35.060 --> 08:36.060
它的口选值

08:36.060 --> 08:38.060
是不是就取决于我们的

08:38.060 --> 08:39.060
肋目的列表啊

08:39.060 --> 08:41.060
那我们就需要拿到

08:41.060 --> 08:42.060
肋目的列表数据

08:42.060 --> 08:43.060
对吧

08:43.060 --> 08:44.060
那我们给它存储到那儿呢

08:44.060 --> 08:45.060
存储到

08:45.060 --> 08:46.060
CatedGridList

08:46.060 --> 08:48.060
这样的一个字段下面吧

08:50.060 --> 08:51.060
那我们还需要去

08:51.060 --> 08:53.060
获取到这个CatedGridList

08:53.060 --> 08:54.060
对不对

08:54.060 --> 08:55.060
然后在这里面

08:55.060 --> 08:56.060
我们先把

08:56.060 --> 08:58.060
轩然这里写下啊

08:58.060 --> 09:00.060
为港方循环的

09:00.060 --> 09:01.060
举旋然

09:01.060 --> 09:03.060
来 拿到我们的CatedGrid

09:03.060 --> 09:05.060
每个肋目

09:05.060 --> 09:07.060
拿到我们的每个肋目

09:07.060 --> 09:09.060
设置它的一个Value值

09:09.060 --> 09:10.060
它的Value值

09:10.060 --> 09:11.060
拿到肋目之后

09:11.060 --> 09:12.060
它的Value值就是

09:12.060 --> 09:14.060
内幕里面的这个内幕属性啊

09:14.060 --> 09:15.060
这个怎么去看

09:15.060 --> 09:17.060
我这里面先写在这儿啊

09:17.060 --> 09:18.060
写一点内幕

09:18.060 --> 09:19.060
然后注意一下

09:19.060 --> 09:20.060
你看一下

09:20.060 --> 09:21.060
现在还会爆错对吧

09:21.060 --> 09:22.060
爆错的原因

09:22.060 --> 09:23.060
是因为我们这里面

09:23.060 --> 09:24.060
用了vfo

09:24.060 --> 09:26.060
用了一个循环语句

09:26.060 --> 09:28.060
那我们既然用循环了

09:28.060 --> 09:29.060
在viu当中

09:29.060 --> 09:31.060
你如果要用循环的话

09:31.060 --> 09:32.060
就一定要给它

09:32.060 --> 09:33.060
添加一个

09:33.060 --> 09:35.060
这个唯一的Key值

09:35.060 --> 09:36.060
那我们就需要

09:36.060 --> 09:37.060
把这个Key值

09:37.060 --> 09:38.060
给它加进去

09:38.060 --> 09:39.060
这个Key值

09:39.060 --> 09:40.060
我们就直接

09:40.060 --> 09:41.060
用它的一个ID值了

09:41.060 --> 09:43.060
然后里面的Value值

09:43.060 --> 09:44.060
这个Value值

09:44.060 --> 09:46.060
我们用的应该是ID

09:46.060 --> 09:48.060
然后显示的

09:48.060 --> 09:49.060
这个Value值

09:49.060 --> 09:50.060
应该是内幕

09:51.060 --> 09:52.060
这个就可以了

09:52.060 --> 09:54.060
我们先来看一下

09:54.060 --> 09:56.060
我们拿到的这个CatedGridList

09:56.060 --> 09:57.060
这个长度

09:57.060 --> 09:59.060
这个数据

09:59.060 --> 10:00.060
它的一个结构

10:00.060 --> 10:01.060
在写它的结构之前

10:01.060 --> 10:03.060
我们先把上面这个Change事件

10:03.060 --> 10:05.060
它得处理函数

10:05.060 --> 10:06.060
我们先给它写一下

10:06.060 --> 10:08.060
一会我们再去写

10:08.060 --> 10:09.060
这两个函数

10:09.060 --> 10:11.060
下面这个是

10:11.060 --> 10:12.060
切换

10:12.060 --> 10:13.060
内幕

10:13.060 --> 10:14.060
是

10:15.060 --> 10:17.060
出发的函数

10:18.060 --> 10:20.060
好 那我们接下来

10:20.060 --> 10:21.060
来获取一下

10:21.060 --> 10:23.060
我们的内幕的列表

10:23.060 --> 10:24.060
内幕的列表

10:24.060 --> 10:25.060
怎么去获取

10:25.060 --> 10:26.060
这里面是不是

10:26.060 --> 10:28.060
又需要用到接口了

10:28.060 --> 10:30.060
那我们来看一下

10:30.060 --> 10:32.060
查看

10:32.060 --> 10:33.060
内幕列表数据

10:33.060 --> 10:34.060
是不是在这里

10:34.060 --> 10:35.060
对吧

10:35.060 --> 10:37.060
那么我们就可以直接

10:37.060 --> 10:38.060
直接传吧

10:38.060 --> 10:40.060
对吧 直接去调用就可以了

10:40.060 --> 10:42.060
我们就直接调用它

10:43.060 --> 10:44.060
这个方法

10:44.060 --> 10:45.060
那现在又写接口了

10:45.060 --> 10:47.060
我们还是统一的处理

10:47.060 --> 10:49.060
我们把所有的

10:49.060 --> 10:50.060
这个产品的接口

10:50.060 --> 10:52.060
我们都写在Protact

10:52.060 --> 10:54.060
自己的文件下面

10:54.060 --> 10:55.060
然后也是一样的

10:55.060 --> 10:56.060
先引入

10:59.060 --> 11:00.060
引入我们写好的

11:00.060 --> 11:01.060
actress的实例

11:02.060 --> 11:04.820
好 接下来

11:04.820 --> 11:05.820
刀出一下

11:05.820 --> 11:06.820
猫丢点

11:07.820 --> 11:10.520
这里面我们用

11:10.520 --> 11:11.520
export default

11:11.520 --> 11:12.520
也可以

11:12.520 --> 11:13.520
一样的

11:13.520 --> 11:14.520
接下来

11:14.520 --> 11:15.520
来写一下

11:15.520 --> 11:16.520
我们的

11:16.520 --> 11:17.520
第一个

11:17.520 --> 11:18.520
就是

11:21.520 --> 11:23.520
既然它是一个内幕的

11:23.520 --> 11:24.520
我们会发现

11:24.520 --> 11:25.520
内幕有单独的一个页面

11:25.520 --> 11:26.520
对不对

11:26.520 --> 11:27.520
那么我们可以把

11:27.520 --> 11:29.520
这个内幕的接口

11:29.520 --> 11:31.520
单独的去写在

11:31.520 --> 11:33.520
内幕的接口当中

11:33.520 --> 11:34.520
文件当中

11:34.520 --> 11:36.520
开启gray.js

11:37.520 --> 11:38.520
哎呀

11:38.520 --> 11:39.520
js

11:39.520 --> 11:40.520
重明一下

11:40.520 --> 11:42.900
好

11:42.900 --> 11:43.900
这里面

11:43.900 --> 11:44.900
我们要写的

11:44.900 --> 11:46.900
所有内幕的

11:46.900 --> 11:47.900
接口

11:48.900 --> 11:49.900
可以吧

11:49.900 --> 11:50.900
我们还是一样的

11:50.900 --> 11:51.900
需要先

11:51.900 --> 11:52.900
导入一下

11:52.900 --> 11:53.900
actress

11:56.900 --> 11:57.900
actress

11:59.900 --> 12:00.900
对吧

12:00.900 --> 12:01.900
然后接下来

12:01.900 --> 12:02.900
我们

12:02.900 --> 12:03.900
刀出一下

12:03.900 --> 12:09.410
那我们要

12:09.410 --> 12:10.410
后续到的是

12:10.410 --> 12:11.410
它的一个列表

12:11.410 --> 12:12.410
对吧

12:12.410 --> 12:13.410
那我们就直接

12:14.410 --> 12:15.410
拿到

12:15.410 --> 12:16.410
这些

12:16.410 --> 12:17.410
列表的数据

12:17.410 --> 12:18.410
需要传过来

12:18.410 --> 12:19.410
params

12:19.410 --> 12:21.410
最后返回出去

12:21.410 --> 12:23.410
actress.

12:24.410 --> 12:25.410
我们这是什么方式的

12:25.410 --> 12:26.410
guide方式

12:26.410 --> 12:27.410
对吧

12:27.410 --> 12:28.410
通过guide方法

12:28.410 --> 12:29.410
调用一下

12:29.410 --> 12:30.410
来

12:30.410 --> 12:31.410
接这个路径

12:31.410 --> 12:32.410
拿过来

12:33.410 --> 12:34.410
接下来

12:34.410 --> 12:35.410
请求参数

12:35.410 --> 12:36.410
那我们通过

12:36.410 --> 12:37.410
guide的方法

12:37.410 --> 12:38.410
传递请求参数的时候

12:38.410 --> 12:39.410
千万不要忘了

12:39.410 --> 12:41.410
给它加上一个对象

12:41.410 --> 12:42.410
把我们的params

12:42.410 --> 12:43.410
加进去

12:44.410 --> 12:45.410
为什么要加这个对象

12:45.410 --> 12:46.410
是因为我们的

12:46.410 --> 12:47.410
guide方法

12:47.410 --> 12:48.410
它的第二个参数

12:48.410 --> 12:49.410
要传的

12:49.410 --> 12:50.410
就是一个对象

12:50.410 --> 12:51.410
你要把数据

12:51.410 --> 12:52.410
传到params

12:52.410 --> 12:53.410
这个自断下面

12:53.410 --> 12:54.410
所以我们

12:54.410 --> 12:55.410
才需要

12:55.410 --> 12:56.410
把它加上

12:56.410 --> 12:57.410
一个大过号

12:57.410 --> 12:58.410
那现在

12:58.410 --> 12:59.410
我们这个list

12:59.410 --> 13:00.410
就写完了呗

13:00.410 --> 13:01.410
接下来

13:01.410 --> 13:02.410
在设置这里

13:02.410 --> 13:03.410
我们先去引入

13:03.410 --> 13:04.410
我们的

13:04.410 --> 13:05.410
category的接口

13:06.410 --> 13:07.410
API接口

13:08.410 --> 13:09.410
来 from

13:09.410 --> 13:10.410
一个

13:10.410 --> 13:11.410
category at

13:11.410 --> 13:12.410
API下面的

13:12.410 --> 13:13.410
category

13:15.410 --> 13:16.410
对吧

13:16.410 --> 13:17.410
然后接下来

13:17.410 --> 13:18.410
在我们

13:18.410 --> 13:19.410
一创建

13:19.410 --> 13:20.410
这个组建的时候

13:21.410 --> 13:22.410
我们去

13:22.410 --> 13:23.410
获取一下

13:26.300 --> 13:27.300
它的一个列表

13:27.300 --> 13:28.300
对吧

13:28.300 --> 13:29.300
然后我们的

13:29.300 --> 13:30.300
数据呢

13:30.300 --> 13:31.300
我们这里面

13:31.300 --> 13:32.300
是不是想要

13:32.300 --> 13:33.300
这个数据

13:33.300 --> 13:34.300
那这里面

13:34.300 --> 13:35.300
我们的page

13:35.300 --> 13:36.300
和size

13:36.300 --> 13:37.300
就可以不用去

13:37.300 --> 13:38.300
写了

13:38.300 --> 13:39.300
可以不用去写了

13:39.300 --> 13:40.300
然后接下来

13:40.300 --> 13:41.300
我们想要去

13:41.300 --> 13:42.300
想要去

13:42.300 --> 13:43.300
拿到这个数据

13:43.300 --> 13:44.300
我们就可以

13:44.300 --> 13:45.300
通过这个

13:45.300 --> 13:46.300
赠的一个方法

13:46.300 --> 13:47.300
对吧

13:47.300 --> 13:48.300
为什么可以通过

13:48.300 --> 13:49.300
赠的方法

13:49.300 --> 13:50.300
是因为

13:50.300 --> 13:51.300
actors

13:51.300 --> 13:52.300
它拿到数据之后

13:52.300 --> 13:53.300
它会返回

13:53.300 --> 13:55.300
一个promise对象

13:56.300 --> 13:57.300
所以我们这里面

13:57.300 --> 13:58.300
就可以通过

13:58.300 --> 13:59.300
赠的一个方法

13:59.300 --> 14:01.300
去获取到

14:01.300 --> 14:02.300
过来的数据了

14:02.300 --> 14:03.300
我们在这里面

14:03.300 --> 14:04.300
打印一下res

14:04.300 --> 14:05.300
你就可以看到

14:05.300 --> 14:08.930
加上一个标志

14:08.930 --> 14:09.930
好

14:09.930 --> 14:10.930
我们在写完代码之后

14:10.930 --> 14:11.930
一定要

14:11.930 --> 14:12.930
不要忘记

14:12.930 --> 14:13.930
我们需要把这个

14:15.930 --> 14:16.930
代码规范

14:16.930 --> 14:18.930
规范一下

14:18.930 --> 14:19.930
执行一下

14:19.930 --> 14:20.930
npm running

14:20.930 --> 14:23.500
这就可以了

14:23.500 --> 14:24.500
这回

14:24.500 --> 14:26.500
回到我们的页面当中

14:26.500 --> 14:27.500
看一下

14:27.500 --> 14:28.500
列表页

14:28.500 --> 14:30.500
应该会有一些问题吧

14:30.500 --> 14:31.500
来看一下

14:31.500 --> 14:33.500
好像现在没有问题

14:33.500 --> 14:34.500
但也没有渲染

14:34.500 --> 14:36.500
为什么没有渲染

14:36.500 --> 14:37.500
是因为没有引入

14:37.500 --> 14:38.500
接下来就引入到

14:38.500 --> 14:39.500
我们的页面当中

14:39.500 --> 14:41.500
搜索的页面当中

14:41.500 --> 14:43.500
那我们接下来

14:43.500 --> 14:45.500
把我们的这个组件

14:45.500 --> 14:47.500
引入一下

14:48.500 --> 14:49.500
我们需要

14:49.500 --> 14:51.500
把组件拿过来

14:51.500 --> 14:52.500
search

14:52.500 --> 14:54.500
e-a-a-r-c-h

14:54.500 --> 14:55.500
box

14:56.500 --> 14:57.500
from

14:58.500 --> 14:59.500
component

14:59.500 --> 15:00.500
下面的

15:00.500 --> 15:02.500
search.view

15:03.500 --> 15:04.500
对吧

15:04.500 --> 15:05.500
然后接下来

15:05.500 --> 15:06.500
写在我们的component

15:06.500 --> 15:07.500
下面

15:07.500 --> 15:09.500
把我们的search.box

15:09.500 --> 15:10.500
写进去

15:10.500 --> 15:11.500
那我们

15:11.500 --> 15:12.500
接下来

15:12.500 --> 15:14.500
在我们的LTML当中

15:14.500 --> 15:15.500
我就可以用

15:15.500 --> 15:17.500
这个标签了

15:17.500 --> 15:18.500
对不对

15:18.500 --> 15:20.500
现在不就好了吗

15:20.500 --> 15:21.500
现在我们再来看一下

15:21.500 --> 15:23.500
来执行一下npm running

15:28.020 --> 15:29.020
OK

15:29.020 --> 15:30.020
报了两个错误

15:30.020 --> 15:31.020
这两个错误

15:31.020 --> 15:32.020
好像是

15:34.020 --> 15:35.020
一个是我们

15:35.020 --> 15:36.020
proper docs

15:36.020 --> 15:37.020
里面没有用到

15:37.020 --> 15:38.020
这个actors

15:38.020 --> 15:39.020
对吧

15:39.020 --> 15:40.020
因为我们proper docs

15:40.020 --> 15:41.020
里面没有去写

15:41.020 --> 15:42.020
那这个

15:42.020 --> 15:43.020
我们先注释

15:43.020 --> 15:44.020
先不用管它

15:44.020 --> 15:45.020
那接下来

15:45.020 --> 15:46.020
还有一个是超长的

15:46.020 --> 15:48.020
我们回去看一下

15:48.020 --> 15:49.020
长度太长的话

15:49.020 --> 15:50.020
怎么办

15:50.020 --> 15:51.020
之前有给大家提

15:51.020 --> 15:52.020
对吧

15:52.020 --> 15:53.020
你可以做一个

15:53.020 --> 15:54.020
换行处理

15:54.020 --> 15:55.020
是不是就可以了

15:55.020 --> 15:56.020
然后接下来

15:56.020 --> 15:59.810
search

15:59.810 --> 16:00.810
画一下

16:00.810 --> 16:01.810
好 这回

16:01.810 --> 16:02.810
看一下

16:03.810 --> 16:05.810
来刷新一下页面

16:05.810 --> 16:06.810
现在

16:06.810 --> 16:08.810
这个是一个

16:08.810 --> 16:09.810
对象

16:09.810 --> 16:10.810
这个

16:10.810 --> 16:11.810
不能

16:11.810 --> 16:12.810
不能直接的

16:14.810 --> 16:17.310
不可以直接去

16:17.310 --> 16:18.310
设置这样的一个对象

16:18.310 --> 16:19.310
对不对

16:19.310 --> 16:20.310
那么

16:20.310 --> 16:21.310
这是怎么回事

16:21.310 --> 16:22.310
这是因为我们这里面

16:22.310 --> 16:23.310
我们用的是

16:23.310 --> 16:25.310
module.expulse的导出

16:25.310 --> 16:26.310
对吧

16:26.310 --> 16:27.310
module.expulse导出

16:27.310 --> 16:28.310
它不允许我们

16:28.310 --> 16:30.310
直接去复制

16:30.310 --> 16:31.310
那怎么办呢

16:31.310 --> 16:32.310
我们就可以通过

16:32.310 --> 16:34.310
expulse default

16:34.310 --> 16:38.520
这样进行个导出

16:38.520 --> 16:39.520
我们之前是不是

16:39.520 --> 16:40.520
一直用的是

16:40.520 --> 16:41.520
expulse default

16:41.520 --> 16:42.520
对吧

16:43.520 --> 16:44.520
这回呢

16:44.520 --> 16:47.090
好像又报了一个错误

16:47.090 --> 16:48.090
这位错误跟

16:48.090 --> 16:49.090
之前不一样了吧

16:49.090 --> 16:50.090
这个错误

16:50.090 --> 16:51.090
告诉我们

16:51.090 --> 16:52.090
search form没有定义

16:52.090 --> 16:53.090
对不对

16:53.090 --> 16:54.090
那就在我们搜索这里面

16:54.090 --> 16:55.090
我没有定义

16:55.090 --> 16:56.090
这个数据吗

16:56.090 --> 16:57.090
好像没有

16:57.090 --> 16:58.090
是不是

16:58.090 --> 16:59.090
那我们就需要

16:59.090 --> 17:00.090
把这两个数据

17:00.090 --> 17:01.090
放到我们的

17:01.090 --> 17:02.090
search form下面

17:02.090 --> 17:08.110
OK

17:08.110 --> 17:09.110
现在

17:09.110 --> 17:10.110
再个说话一下

17:10.110 --> 17:14.020
好

17:14.020 --> 17:15.020
现在来看

17:15.020 --> 17:16.020
还有没有问题了

17:17.020 --> 17:18.020
刷新一下

17:18.020 --> 17:19.020
这回是没有问题了

17:19.020 --> 17:20.020
对吧

17:20.020 --> 17:21.020
然后我们的按钮

17:21.020 --> 17:23.020
应该给它改成搜索

17:23.020 --> 17:24.020
不是login了

17:24.020 --> 17:25.020
就是搜索

17:26.020 --> 17:28.020
并且我不需要让它

17:28.020 --> 17:29.020
这个

17:29.020 --> 17:30.020
不能点击对吧

17:30.020 --> 17:32.020
让它一直可以点击的

17:32.020 --> 17:33.020
这回是不是可以了

17:33.020 --> 17:35.020
然后接下来呢

17:35.020 --> 17:36.020
接下来

17:36.020 --> 17:37.020
我是不是需要

17:37.020 --> 17:39.020
把这个样式调一调

17:39.020 --> 17:40.020
因为发现

17:40.020 --> 17:41.020
我们的距离

17:41.020 --> 17:42.020
左边距离

17:42.020 --> 17:43.020
上边好像都有距离

17:43.020 --> 17:44.020
但是现在我们呢

17:44.020 --> 17:45.020
好像没有

17:45.020 --> 17:46.020
是不是

17:46.020 --> 17:47.020
那么我们就需要

17:47.020 --> 17:49.020
给它加上这样一个距离

17:49.020 --> 17:50.020
那这个距离

17:50.020 --> 17:51.020
怎么去添加

17:51.020 --> 17:52.020
我是不是就可以

17:52.020 --> 17:54.020
给我们的search box

17:54.020 --> 17:55.020
去设置样式了

17:55.020 --> 17:56.020
那这个样式

17:56.020 --> 17:57.020
只有一行

17:57.020 --> 17:59.020
只有一个样式

17:59.020 --> 18:00.020
只有给这个元素

18:00.020 --> 18:01.020
添加样式

18:01.020 --> 18:02.020
所以我们就直接写在

18:02.020 --> 18:03.020
这个文件下面了

18:04.020 --> 18:05.020
语言

18:05.020 --> 18:06.020
我们用来

18:07.020 --> 18:08.020
search

18:09.020 --> 18:11.020
search.book

18:12.020 --> 18:13.020
我们给大家

18:13.020 --> 18:14.020
一个排定值

18:14.020 --> 18:15.020
我让它

18:15.020 --> 18:16.020
让一下左右

18:16.020 --> 18:17.020
都为时相处吧

18:18.020 --> 18:20.020
然后各说话一下

18:20.020 --> 18:24.320
诶

18:24.320 --> 18:27.270
各说话一下

18:27.270 --> 18:28.270
好 现在呢

18:29.270 --> 18:30.270
现在我们纵上

18:30.270 --> 18:31.270
看一下

18:32.270 --> 18:33.270
是不是有纵上了

18:33.270 --> 18:34.270
但是左侧

18:34.270 --> 18:35.270
好像还是有点太近了

18:35.270 --> 18:36.270
那左侧

18:36.270 --> 18:38.270
我就给它写远一点

18:38.270 --> 18:39.270
左侧

18:40.270 --> 18:42.270
大概写一下吧

18:42.270 --> 18:43.270
上下我让它为时

18:43.270 --> 18:44.270
左右呢

18:44.270 --> 18:46.270
让它为30

18:46.270 --> 18:47.270
我们看一下

18:48.270 --> 18:50.270
这样是不是差不多

18:50.270 --> 18:51.270
对吧

18:51.270 --> 18:52.270
这个样式呢

18:52.270 --> 18:53.270
我们就不做

18:53.270 --> 18:55.270
这个

18:55.270 --> 18:57.270
严格的去要求了

18:57.270 --> 18:58.270
不做严格要求了

18:58.270 --> 19:00.270
为什么不做严格要求

19:00.270 --> 19:01.270
是因为咱们

19:01.270 --> 19:03.270
这个做的是对于

19:03.270 --> 19:05.270
商家用户的

19:05.270 --> 19:06.270
这样一个效果

19:06.270 --> 19:07.270
对吧

19:07.270 --> 19:08.270
那对于商家来说

19:08.270 --> 19:10.270
他们并不是

19:10.270 --> 19:12.270
他们对于一面的

19:12.270 --> 19:13.270
美观的要求

19:13.270 --> 19:14.270
并不是很高

19:14.270 --> 19:16.270
他们最主要的

19:16.270 --> 19:17.270
就是希望

19:17.270 --> 19:19.270
让自己的产品商家

19:19.270 --> 19:20.270
对不对

19:20.270 --> 19:21.270
能提到线上

19:21.270 --> 19:23.270
能让其他的用户

19:23.270 --> 19:25.270
对于C端的用户

19:25.270 --> 19:26.270
它可以看到

19:26.270 --> 19:27.270
对不对

19:27.270 --> 19:28.270
所以这里面

19:28.270 --> 19:29.270
我们对这个

19:29.270 --> 19:30.270
细节上的一个

19:30.270 --> 19:31.270
样式问题

19:31.270 --> 19:33.270
我们不做严格的要求

19:33.270 --> 19:34.270
你觉得好看

19:34.270 --> 19:36.270
我们就用

19:36.270 --> 19:37.270
你觉得好看的话

19:37.270 --> 19:38.270
我们就直接

19:38.270 --> 19:39.270
就用这个样式

19:39.270 --> 19:40.270
好吧

19:40.270 --> 19:41.270
那现在

19:41.270 --> 19:42.270
我们就已经把

19:42.270 --> 19:43.270
搜索的一个功能

19:43.270 --> 19:44.270
感觉差不多了

19:44.270 --> 19:45.270
对不对

19:45.270 --> 19:46.270
但是好像

19:46.270 --> 19:47.270
内幕没有获取来

19:47.270 --> 19:48.270
看一下内幕

19:48.270 --> 19:49.270
为什么没有获取来

19:49.270 --> 19:50.270
告诉我们

19:50.270 --> 19:52.270
没有APP

19:52.270 --> 19:53.270
对不对

19:53.270 --> 19:54.270
现在返回一个值

19:54.270 --> 19:55.270
告诉我们没有APP

19:55.270 --> 19:56.270
那这是不是

19:56.270 --> 19:57.270
就是因为

19:57.270 --> 19:58.270
我们的数据

19:58.270 --> 19:59.270
我没有传递APP

19:59.270 --> 20:01.270
你看一下

20:01.270 --> 20:02.270
下面

20:02.270 --> 20:03.270
我们去找一下

20:06.270 --> 20:07.270
是它对吧

20:07.270 --> 20:08.270
你会发现

20:08.270 --> 20:10.270
我们既没有APP

20:10.270 --> 20:11.270
因为我们的数据

20:11.270 --> 20:12.270
也没有传递过去

20:12.270 --> 20:13.270
对不对

20:13.270 --> 20:14.270
那为什么呢

20:14.270 --> 20:15.270
看一下

20:15.270 --> 20:16.270
我们的数据

20:16.270 --> 20:17.270
好像没有传递

20:17.270 --> 20:18.270
任何的数据

20:18.270 --> 20:19.270
对吧

20:19.270 --> 20:20.270
没有传递任何数据

20:20.270 --> 20:21.270
它当然没有数据了

20:21.270 --> 20:22.270
那接下来

20:22.270 --> 20:23.270
就是APPKey的问题

20:23.270 --> 20:24.270
那我们之前

20:24.270 --> 20:26.270
在整理的时候

20:26.270 --> 20:27.270
再去给大家

20:27.270 --> 20:28.270
做这个

20:29.270 --> 20:30.270
分析的时候

20:30.270 --> 20:31.270
整个项目分析的时候

20:31.270 --> 20:32.270
我是不是有说

20:32.270 --> 20:33.270
这个APPKey

20:33.270 --> 20:35.270
我们可以怎么去设置

20:35.270 --> 20:36.270
对吧

20:36.270 --> 20:37.270
这个APPKey

20:37.270 --> 20:38.270
在之前

20:38.270 --> 20:39.270
做登录的时候

20:39.270 --> 20:40.270
也有说吧

20:40.270 --> 20:41.270
我们是不是可以

20:41.270 --> 20:42.270
在登录

20:42.270 --> 20:43.270
在网络请求

20:44.270 --> 20:45.270
之前

20:45.270 --> 20:46.270
我们添加一个拦截

20:46.270 --> 20:47.270
对不对

20:47.270 --> 20:48.270
之前在写AXS的时候

20:48.270 --> 20:50.270
是不是有个拦截

20:50.270 --> 20:51.270
我看一下

20:51.270 --> 20:52.270
我这个PPT里面

20:52.270 --> 20:53.270
我之前有没有写

20:53.270 --> 20:56.270
在做这个APPKey

20:56.270 --> 20:58.270
好像没有写在PPT里

20:58.270 --> 20:59.270
对吧

20:59.270 --> 21:00.270
没有写的话

21:00.270 --> 21:01.270
大家听我说吧

21:02.270 --> 21:03.270
那你看一下

21:03.270 --> 21:04.270
我们的APPKey

21:04.270 --> 21:05.270
是不是就可以写在

21:05.270 --> 21:06.270
请求拦截当中

21:06.270 --> 21:07.270
因为既然

21:07.270 --> 21:09.270
每一个项目当中的

21:09.270 --> 21:10.270
这个接口

21:10.270 --> 21:11.270
它都需要APPKey的话

21:11.270 --> 21:12.270
我们就可以

21:12.270 --> 21:13.270
在一个位置上

21:13.270 --> 21:15.270
给它添加这个APPKey

21:15.270 --> 21:16.270
对吧

21:16.270 --> 21:17.270
那么我们是不是

21:17.270 --> 21:18.270
可以在这里添加

21:18.270 --> 21:19.270
对不对

21:19.270 --> 21:20.270
在请求发出之前

21:20.270 --> 21:22.270
这个拦截器当中

21:22.270 --> 21:23.270
进行一个添加

21:23.270 --> 21:25.270
那我们怎么添加呢

21:25.270 --> 21:27.270
我们的APPKey在哪

21:27.270 --> 21:28.270
是不是APPKey

21:28.270 --> 21:30.270
在我们的

21:30.270 --> 21:32.270
这个style里面

21:32.270 --> 21:33.270
在我们的

21:33.270 --> 21:35.270
状态管理的

21:35.270 --> 21:36.270
state下面

21:36.270 --> 21:37.270
对不对

21:37.270 --> 21:39.270
state下面的user里面

21:39.270 --> 21:40.270
user里面有个APPKey吧

21:40.270 --> 21:41.270
那么我们是不是

21:41.270 --> 21:42.270
就可以在

21:42.270 --> 21:43.270
请求拦截这里

21:43.270 --> 21:45.270
我们去引入一下style

21:45.270 --> 21:50.440
style而已

21:50.440 --> 21:52.440
引入一下这个viewex

21:52.440 --> 21:53.440
对吧

21:53.440 --> 21:54.440
然后我们拿到

21:54.440 --> 21:56.440
当前录进下的style

21:57.440 --> 21:58.440
拿到的话之后

21:58.440 --> 22:00.440
在我们请求拦截这里面

22:00.440 --> 22:01.440
我们要做什么

22:01.440 --> 22:02.440
是不是需要

22:02.440 --> 22:03.440
判断一下

22:03.440 --> 22:04.440
我们当前

22:04.440 --> 22:05.440
是不是我们项目的接口

22:05.440 --> 22:06.440
像登录的话

22:06.440 --> 22:07.440
登录的接口

22:07.440 --> 22:08.440
我们不需要进行

22:08.440 --> 22:09.440
这样的一个

22:09.440 --> 22:11.440
APPKey的一个添加吧

22:11.440 --> 22:12.440
你看一下

22:12.440 --> 22:13.440
登录的接口

22:13.440 --> 22:14.440
没有这个APPKey

22:14.440 --> 22:16.440
注册也没有

22:16.440 --> 22:17.440
然后像这个

22:17.440 --> 22:18.440
找回运蛮也没有

22:18.440 --> 22:19.440
还有修改

22:19.440 --> 22:20.440
用户的信息

22:20.440 --> 22:21.440
这也没有

22:21.440 --> 22:22.440
只有后面

22:22.440 --> 22:23.440
所有的

22:23.440 --> 22:24.440
对于在我们

22:24.440 --> 22:25.440
整个系统当中

22:25.440 --> 22:27.440
你所要查看的

22:27.440 --> 22:28.440
这些

22:28.440 --> 22:29.440
产品的

22:29.440 --> 22:30.440
对于产品的一些

22:30.440 --> 22:31.440
操作的接口

22:31.440 --> 22:32.440
我们才需要

22:32.440 --> 22:33.440
添加APPKey

22:33.440 --> 22:34.440
对吧

22:34.440 --> 22:35.440
那我们再来看

22:35.440 --> 22:37.440
那除了

22:37.440 --> 22:38.440
看一下产品

22:38.440 --> 22:39.440
这些这个接口

22:39.440 --> 22:41.440
它有什么特点

22:41.440 --> 22:42.440
它的特点

22:42.440 --> 22:43.440
是不是就是我们的

22:43.440 --> 22:44.440
前柱

22:44.440 --> 22:45.440
它不是Pathpart了

22:45.440 --> 22:46.440
你看到了吗

22:46.440 --> 22:48.440
关于我们用户信息的

22:48.440 --> 22:49.440
这些接口

22:49.440 --> 22:50.440
它都是

22:50.440 --> 22:52.440
前柱都有Pathpart的

22:52.440 --> 22:54.440
对于产品

22:54.440 --> 22:55.440
它是Product

22:55.440 --> 22:56.440
对于Limone

22:56.440 --> 22:57.440
是Catcree

22:57.440 --> 22:58.440
对吧

22:58.440 --> 22:59.440
那你会发现

22:59.440 --> 23:00.440
它好像除了Pathpart

23:00.440 --> 23:01.440
之外的这个接口

23:01.440 --> 23:03.440
它是需要添加APPKey的

23:03.440 --> 23:05.440
那么我们就可以在这里面

23:05.440 --> 23:06.440
进行一个判断

23:06.440 --> 23:08.440
判断一下它的URL

23:08.440 --> 23:09.440
我们刚刚打印的

23:09.440 --> 23:10.440
这个config

23:10.440 --> 23:11.440
大家也看到了

23:11.440 --> 23:12.440
应该就是

23:12.440 --> 23:13.440
我们当前的

23:13.440 --> 23:14.440
我们去看一下

23:14.440 --> 23:16.440
应该就是我们当前

23:16.440 --> 23:17.440
这个路

23:17.440 --> 23:18.440
当前

23:18.440 --> 23:19.440
请求

23:19.440 --> 23:20.440
发出请求的

23:20.440 --> 23:21.440
这些信息

23:21.440 --> 23:22.440
对吧

23:22.440 --> 23:23.440
这个信息当中URL

23:23.440 --> 23:24.440
是不是就是我们的路径

23:24.440 --> 23:25.440
我们想要的

23:25.440 --> 23:26.440
这个路径吧

23:26.440 --> 23:27.440
接口的路径

23:27.440 --> 23:28.440
我们就可以

23:28.440 --> 23:29.440
判断这个路径吧

23:29.440 --> 23:30.440
那我们就需要

23:30.440 --> 23:31.440
判断一下

23:31.440 --> 23:34.440
开config下面的URL

23:34.440 --> 23:36.440
它里面是否包含

23:36.440 --> 23:38.440
那我是不是可以

23:38.440 --> 23:40.440
通过跟glues

23:40.440 --> 23:41.440
这个方法

23:41.440 --> 23:42.440
判断一下

23:42.440 --> 23:45.440
是否包含Pathpart

23:45.440 --> 23:46.440
对吧

23:46.440 --> 23:48.440
如果是的话

23:48.440 --> 23:49.440
代表的是它的登录

23:49.440 --> 23:50.440
对不对

23:50.440 --> 23:51.440
我们就直接

23:51.440 --> 23:52.440
return一个config

23:52.440 --> 23:53.440
就可以了

23:53.440 --> 23:54.440
那如果不是呢

23:54.440 --> 23:56.440
如果它不包含呢

23:56.440 --> 23:57.440
不包含的话

23:57.440 --> 23:58.440
我是不是需要

23:58.440 --> 24:00.440
让它的数据拼接一下

24:00.440 --> 24:01.440
那我们的数据在哪

24:01.440 --> 24:03.440
我们回头来看一下

24:03.440 --> 24:04.440
我们的数据

24:04.440 --> 24:07.440
应该在params下面吧

24:07.440 --> 24:08.440
我们所有的

24:08.440 --> 24:10.440
数据应该都在params下面

24:10.440 --> 24:11.440
所以这里面

24:11.440 --> 24:12.440
我们就需要

24:12.440 --> 24:14.440
把我们的数据

24:14.440 --> 24:16.440
return出去

24:16.440 --> 24:18.440
config

24:18.440 --> 24:19.440
对吧

24:19.440 --> 24:21.440
它里面应该有个config

24:21.440 --> 24:25.440
所有的config里面的值

24:25.440 --> 24:28.440
再加上它的params

24:28.440 --> 24:29.440
这个params

24:29.440 --> 24:31.440
需要有啥

24:31.440 --> 24:32.440
这个params

24:32.440 --> 24:33.440
是不是需要有

24:33.440 --> 24:34.440
我们本身

24:34.440 --> 24:36.440
要传给后台的一个数据

24:36.440 --> 24:39.440
再加上我们的app key

24:39.440 --> 24:40.440
对不对

24:40.440 --> 24:42.440
params

24:42.440 --> 24:44.440
再加上app key

24:44.440 --> 24:46.440
这个app key从哪儿取

24:46.440 --> 24:47.440
是不是从我们的

24:47.440 --> 24:48.440
状态里面去取

24:48.440 --> 24:49.440
start

24:49.440 --> 24:50.440
data下面的

24:50.440 --> 24:53.440
user下面的app key吧

24:53.440 --> 24:54.440
对不对

24:54.440 --> 24:56.440
这样是不是就可以了

24:56.440 --> 24:57.440
那现在我们再来看呗

24:57.440 --> 25:01.330
来格式化一下

25:01.330 --> 25:03.330
我们来看一下

25:03.330 --> 25:04.330
可不可以

25:04.330 --> 25:05.330
又爆了一个错

25:05.330 --> 25:07.330
看一下错误信息是什么

25:07.330 --> 25:10.330
问题是告诉你

25:10.330 --> 25:13.330
后面倒不了这儿对吧

25:13.330 --> 25:14.330
它说倒不了这儿

25:14.330 --> 25:15.330
我们就给它删掉就可以了

25:15.330 --> 25:17.330
没有用的

25:17.330 --> 25:20.540
代码

25:20.540 --> 25:21.540
这回呢

25:21.540 --> 25:22.540
这回应该没有问题了吧

25:22.540 --> 25:23.540
对吧

25:23.540 --> 25:24.540
这个没有问题

25:24.540 --> 25:25.540
我们再来看

25:25.540 --> 25:29.810
来刷新一下

25:29.810 --> 25:31.810
是不是就拿到这个数据了

25:31.810 --> 25:32.810
看到了吗

25:32.810 --> 25:33.810
在我们设置这里

25:33.810 --> 25:34.810
我们就拿到这个数据了吧

25:34.810 --> 25:36.810
那数据里面的data

25:36.810 --> 25:37.810
是我们想要的

25:37.810 --> 25:38.810
所有的数据

25:38.810 --> 25:39.810
对不对

25:39.810 --> 25:40.810
那我们这里面

25:40.810 --> 25:45.810
设置一下

25:45.810 --> 25:46.810
data

25:46.810 --> 25:47.810
诶 是data吗

25:47.810 --> 25:48.810
对吧

25:48.810 --> 25:49.810
是data

25:49.810 --> 25:51.810
我就可以把这个console

25:51.810 --> 25:52.810
删掉了呗

25:52.810 --> 25:54.810
这回我们的下拉列表

25:54.810 --> 25:55.810
应该有数据了吧

25:55.810 --> 25:56.810
看一下

25:56.810 --> 25:58.810
下拉列表是不是有数据了

25:58.810 --> 25:59.810
选中

25:59.810 --> 26:00.810
那接下来

26:00.810 --> 26:02.810
我是不是还可以让它清空啊

26:02.810 --> 26:04.810
搜索框是需要清空的

26:04.810 --> 26:05.810
可以清空的

26:05.810 --> 26:06.810
那我们接下来

26:06.810 --> 26:07.810
看一下

26:07.810 --> 26:09.810
我们的搜索框怎么清空呗

26:09.810 --> 26:12.810
找一个允许清空的

26:12.810 --> 26:16.530
我看一下

26:16.530 --> 26:17.530
选择它

26:17.530 --> 26:18.530
诶 这个是不允许清空的

26:18.530 --> 26:19.530
对不对

26:19.530 --> 26:21.530
我们是找一个可以清空的

26:21.530 --> 26:25.500
来

26:25.500 --> 26:28.500
有没有允许清空

26:28.500 --> 26:32.390
支持清除

26:32.390 --> 26:34.390
叫这个allow clear

26:34.390 --> 26:36.390
那我们就给它加进去呗

26:36.390 --> 26:37.390
这个数据

26:37.390 --> 26:38.390
对吧

26:38.390 --> 26:39.390
这回呢

26:39.390 --> 26:40.390
看一下

26:40.390 --> 26:42.390
这回选中

26:42.390 --> 26:43.390
是不是可以清空了

26:43.390 --> 26:44.390
对吧

26:44.390 --> 26:45.390
对吧

26:45.390 --> 26:46.390
这回就ok了呗

26:46.390 --> 26:47.390
那当我切换的时候

26:47.390 --> 26:48.390
我要做什么

26:48.390 --> 26:49.390
是不是应该改变的是

26:49.390 --> 26:51.390
我当前数据里面的

26:51.390 --> 26:52.390
category啊

26:52.390 --> 26:53.390
对不对

26:53.390 --> 26:55.390
所以在我们change这里面

26:55.390 --> 26:56.390
我们需要拿到当前

26:56.390 --> 26:58.390
改变的一个y6值

26:58.390 --> 26:59.390
我们可以打印一下

26:59.390 --> 27:00.390
你看一下

27:00.390 --> 27:01.390
console.log一下

27:01.390 --> 27:04.390
这个y6就是我们改变之后的

27:05.390 --> 27:06.390
这个类目的

27:06.390 --> 27:08.390
对应的id值

27:08.390 --> 27:09.390
你可以看一下

27:09.390 --> 27:10.390
来

27:10.390 --> 27:14.150
空格数量的一个问题

27:14.150 --> 27:15.150
对吧

27:15.150 --> 27:17.150
ok 现在可以了

27:17.150 --> 27:18.150
这回来看

27:18.150 --> 27:19.150
点击

27:19.150 --> 27:20.150
是不是打印

27:20.150 --> 27:21.150
它的一个对应的id值了

27:21.150 --> 27:22.150
对吧

27:22.150 --> 27:23.150
那当我切换之后

27:23.150 --> 27:24.150
我们需要做什么

27:24.150 --> 27:26.150
是不是需要做的就是

27:26.150 --> 27:28.150
我需要改变

27:28.150 --> 27:31.150
我们的srcform里面的

27:31.150 --> 27:32.150
开帖规啊

27:32.150 --> 27:34.150
让它等于y6吧

27:34.150 --> 27:35.150
对不对

27:35.150 --> 27:37.150
然后接下来提交

27:37.150 --> 27:39.150
当我点击soso的时候

27:39.150 --> 27:40.150
我们需要做什么

27:40.150 --> 27:41.150
是不是需要把我们

27:41.150 --> 27:43.150
这里面的所有soso

27:43.150 --> 27:45.150
偏好的这些数据

27:45.150 --> 27:48.150
传递到他们的副组件当中

27:48.150 --> 27:49.150
对不对

27:49.150 --> 27:50.150
那么我们这里面

27:50.150 --> 27:51.150
假如

27:51.150 --> 27:52.150
假设

27:52.150 --> 27:53.150
它的副组件

27:53.150 --> 27:54.150
来 这里

27:54.150 --> 27:56.150
传递给它一个

27:56.150 --> 27:57.150
exchange

27:57.150 --> 28:01.360
或者叫submate吧

28:01.360 --> 28:02.360
sobmit

28:02.360 --> 28:05.360
等于src

28:06.360 --> 28:08.360
这个src

28:09.360 --> 28:10.360
submate

28:11.360 --> 28:12.360
可以吧

28:12.360 --> 28:13.360
那我就在副组件这里面

28:13.360 --> 28:15.360
需要有这样的一个方法

28:15.360 --> 28:16.360
measure

28:17.360 --> 28:18.360
srcsubmate

28:18.360 --> 28:19.360
我们接收到

28:19.360 --> 28:20.360
它的一个

28:20.360 --> 28:21.360
泡沫

28:21.360 --> 28:22.360
Y6值

28:22.360 --> 28:23.360
对吧

28:23.360 --> 28:24.360
我们在这里面打印一下

28:24.360 --> 28:27.250
OK吧

28:27.250 --> 28:28.250
然后接下来

28:31.250 --> 28:32.250
接下来我们要做的

28:32.250 --> 28:33.250
是不是就是

28:33.250 --> 28:34.250
提交的时候

28:34.250 --> 28:36.250
让它触发这样的一个方法

28:37.250 --> 28:38.250
在我们src里面

28:39.250 --> 28:40.250
执行一下

28:40.250 --> 28:41.250
srcform.inmate

28:41.250 --> 28:42.250
对吧

28:42.250 --> 28:43.250
是我们自组件

28:43.250 --> 28:44.250
给副组件

28:44.250 --> 28:45.250
传递

28:45.250 --> 28:47.250
这个数据的方法

28:47.250 --> 28:48.250
对不对

28:48.250 --> 28:49.250
通过inmate的方法

28:49.250 --> 28:51.250
触发副组件里面的这个

28:51.250 --> 28:52.250
submate这个时间

28:52.250 --> 28:53.250
对不对

28:53.250 --> 28:54.250
submit

28:55.250 --> 28:56.250
然后把我们的数据

28:56.250 --> 28:57.250
传递过去

28:57.250 --> 28:59.250
数据是不是就是srcform.inmate

29:00.250 --> 29:01.250
这样是不是就可以了

29:01.250 --> 29:02.250
现在我们来看

29:02.250 --> 29:03.250
来

29:03.250 --> 29:04.250
又出现

29:04.250 --> 29:07.620
又出现这样的一个

29:07.620 --> 29:09.620
代码规范的一个问题了

29:09.620 --> 29:11.620
它告诉我的就是

29:11.620 --> 29:13.620
空格数有点多了

29:14.620 --> 29:15.620
ok

29:15.620 --> 29:16.620
现在来看一下

29:16.620 --> 29:17.620
点击搜索

29:17.620 --> 29:18.620
是不是里面就有

29:18.620 --> 29:19.620
对吧

29:19.620 --> 29:20.620
输入关键字

29:20.620 --> 29:21.620
嗯

29:21.620 --> 29:22.620
叫什么呢

29:22.620 --> 29:26.790
苹果

29:26.790 --> 29:27.790
点击搜索

29:27.790 --> 29:28.790
是不是也都有

29:28.790 --> 29:29.790
对不对

29:29.790 --> 29:31.790
然后我们就可以根据这个数据

29:32.790 --> 29:34.790
根据这个检索的信息

29:34.790 --> 29:36.790
获取最新的表格数据了吧

29:36.790 --> 29:37.790
那好

29:38.790 --> 29:40.790
那在获取表格数据之前

29:40.790 --> 29:42.790
我们需要把这个表格

29:42.790 --> 29:43.790
渲染一下

29:43.790 --> 29:44.790
渲染表格

29:44.790 --> 29:46.790
我们下一小节继续

29:46.790 --> 29:47.790
好吧

