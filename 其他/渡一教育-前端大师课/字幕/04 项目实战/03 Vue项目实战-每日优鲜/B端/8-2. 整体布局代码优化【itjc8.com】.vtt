WEBVTT

00:00.000 --> 00:03.400
好 这小节呢 我们来做一下代码优化

00:03.400 --> 00:06.600
把上一堂课做完了 这样的一个

00:06.600 --> 00:09.600
不举结构 我们来优化一下

00:09.600 --> 00:14.200
那在优化之前 我们先把我们上一堂课这个代码

00:14.200 --> 00:17.400
先提交到远端 先存住下来

00:17.400 --> 00:20.000
我们提交到哪儿呢 我们可以提交在

00:20.000 --> 00:21.800
提交到github上

00:21.800 --> 00:26.600
那我们这里面就需要大家先到你的github上去

00:27.000 --> 00:30.200
我去看一下这个github不是我的 是吧

00:30.200 --> 00:32.000
我再创建一个github

00:32.000 --> 00:36.000
再登录一下我自己的github 不是创建

00:36.000 --> 00:39.000
如果在github上没有账号的同学

00:39.000 --> 00:42.600
可以去创建一个账号

00:45.000 --> 00:48.200
在这里面我来登录一下 我的幽默名是啥呢

00:48.200 --> 00:49.200
忘了

01:00.140 --> 01:05.410
在登录啊

01:05.410 --> 01:07.810
OK 我已经登录到我的github上了

01:07.810 --> 01:11.210
然后接下来你需要在你的github上去创建

01:11.210 --> 01:15.010
这样的一个资源 存处的一个资源

01:15.010 --> 01:17.210
来 我们先建一个

01:17.210 --> 01:20.410
然后起一下名字 给你的项目起个名字

01:20.410 --> 01:25.130
我们这个名字叫AKP

01:26.930 --> 01:28.930
告诉我已经存在了 是不是

01:28.930 --> 01:33.130
那这样啊 我把我之前已经存在的这个呢

01:33.130 --> 01:36.730
我给它删掉

01:39.570 --> 01:47.450
我看一下

01:49.850 --> 01:51.450
我给它重新名一下

01:57.020 --> 01:57.620
OK

02:00.440 --> 02:01.040
好了

02:02.040 --> 02:04.040
这回我们再起这个名字再看一下

02:04.040 --> 02:05.440
刷新一下 重新的

02:06.240 --> 02:07.040
进一下

02:07.840 --> 02:10.670
小猫APP

02:11.470 --> 02:12.870
好 已经可以了 对吧

02:12.870 --> 02:14.670
然后接下来我们就创建就可以了

02:14.670 --> 02:16.270
正常的一个创建

02:16.270 --> 02:18.670
创建完这个资源之后呢

02:18.670 --> 02:22.070
大家需要在你的这个

02:22.070 --> 02:24.670
在你的项目当中打开

02:24.670 --> 02:26.870
我们当前的这个项目

02:27.070 --> 02:30.870
然后把我们的一个gith打开

02:30.870 --> 02:32.070
githbatch打开

02:32.070 --> 02:34.670
打开之后我们直接再给dnit

02:37.380 --> 02:38.180
nit

02:38.180 --> 02:41.380
也就是它这里面给你提示出来的这些信息啊

02:42.380 --> 02:44.580
就一次的进行个执行就可以了

02:44.580 --> 02:48.980
githi的我们把所有的资源都添加进去

02:48.980 --> 02:50.980
那这里面所有资源需要

02:50.980 --> 02:54.380
把我们的这个nodeModules忽略掉啊

02:54.380 --> 02:57.780
还有这个dit打包目录

02:57.780 --> 02:59.180
打包下来的githi面键

02:59.180 --> 03:01.180
我们需要给它忽略掉

03:01.580 --> 03:03.380
然后我们执行一下它

03:04.780 --> 03:07.180
接下来提交一下conmet

03:07.580 --> 03:09.980
我们执行githiconmet

03:10.580 --> 03:14.180
它只会提交到咱们的本地藏库

03:14.380 --> 03:16.980
就本地的你像gith安装之后

03:17.380 --> 03:19.380
提交到你本地的gith上了

03:20.380 --> 03:22.380
但是我们想要提交到远端的话

03:22.380 --> 03:24.580
你还需要去执行下面的一些语句啊

03:24.580 --> 03:37.820
那我们先把这个提交

03:38.820 --> 03:41.330
好

03:43.880 --> 03:45.480
我们提交完了

03:45.480 --> 03:49.480
接下来执行它给的语句

03:50.280 --> 03:51.480
把它复制一下

03:56.340 --> 03:57.340
再接下来

03:57.940 --> 03:58.340
好

03:58.340 --> 03:59.940
再接着之前conmet

03:59.940 --> 04:01.540
githi push一下

04:02.540 --> 04:05.140
这里面我们就直接regimaster就可以了

04:06.340 --> 04:07.140
提交

04:11.340 --> 04:13.540
这里面让我们输入用户名和密码

04:13.540 --> 04:14.140
对吧

04:14.340 --> 04:15.540
我这个用户名叫

04:47.290 --> 04:49.490
提交之后我们再切一个分支

04:49.490 --> 04:51.090
来写今天的一个代码

04:52.090 --> 04:54.090
切换一个新的分支

04:54.090 --> 04:55.890
执行check out conbit

04:55.890 --> 04:57.890
加上新分支的名字

04:57.890 --> 04:59.290
我们这个名字叫什么呢

04:59.290 --> 05:01.090
就是第八小节对吧

05:01.090 --> 05:07.080
那我就8-2

05:07.080 --> 05:07.480
好

05:07.480 --> 05:09.280
我们切换新的分支之后

05:09.280 --> 05:10.480
我们接下来就开始

05:10.480 --> 05:13.480
来对我们这一堂课代码开始编写

05:14.080 --> 05:15.280
那我们说这一堂课

05:15.280 --> 05:17.880
我们要对上一堂课代码进行优化

05:18.280 --> 05:19.480
上一堂课最后的时候

05:19.480 --> 05:21.880
我说我们这个代码

05:21.880 --> 05:23.080
虽然已经写完了

05:23.080 --> 05:24.680
这个效果已经呈现了

05:24.680 --> 05:26.480
但是我们现在有一些问题

05:26.480 --> 05:27.280
什么问题呢

05:27.280 --> 05:30.480
就是我们如果这个页面当中

05:30.480 --> 05:33.940
我们的

05:34.340 --> 05:36.740
那我们对于整个页面的维护

05:36.740 --> 05:38.340
是不是就不是很好了

05:38.340 --> 05:38.740
对吧

05:38.740 --> 05:40.540
你要一个一个一点点

05:40.540 --> 05:42.940
去定位到我们哪一行的代码

05:42.940 --> 05:43.940
是不是相对来说

05:43.940 --> 05:45.740
我们还需要找到这个文件

05:45.740 --> 05:48.940
找到之后再定位到哪一个菜单

05:49.140 --> 05:50.340
它出现的问题

05:50.340 --> 05:53.440
菜单哪一个导航出现的问题

05:53.440 --> 05:54.940
再加上我们右侧

05:54.940 --> 05:55.940
它又有什么问题

05:55.940 --> 05:57.540
你还要依次的去找

05:57.540 --> 05:58.740
那这样的话

05:58.740 --> 06:02.340
对于我们后期的一个维护成本来说

06:02.340 --> 06:04.740
就会增大一些

06:04.740 --> 06:11.340
那我们定用一个组

06:11.340 --> 06:13.940
也就是说我们把每一部分

06:13.940 --> 06:16.140
把我们整个页面进行一个划分

06:16.140 --> 06:16.940
每一部分

06:16.940 --> 06:19.340
我们给它放在一个组件当中

06:19.340 --> 06:21.740
我们让每个组件与组件之间

06:21.740 --> 06:24.140
它们是相互独立的

06:24.140 --> 06:27.640
然后通过一系列的这样的一个交互

06:27.640 --> 06:29.840
让它产生联系

06:29.840 --> 06:32.040
那像我们的这个效果

06:32.040 --> 06:33.640
首先左侧导航

06:33.640 --> 06:35.940
它是不是就有很多的内容

06:35.940 --> 06:38.240
那我就可以把它单独提出来吧

06:38.240 --> 06:41.340
作为一个组件出现

06:41.340 --> 06:43.440
那我就可以在我们的lineout里面

06:43.440 --> 06:45.840
创建一个文件家叫component

06:48.040 --> 06:48.540
可以吧

06:48.640 --> 06:50.340
然后里面写的就是

06:50.340 --> 06:56.740
我们当前这个模板文件当中的一些组件

06:56.740 --> 06:58.440
那我们这里面有一个menu

06:59.740 --> 07:01.840
就是我们菜单的一卵

07:01.840 --> 07:04.640
最外层template tmprat

07:08.750 --> 07:09.150
对吧

07:09.150 --> 07:11.150
把我们的代码扶植过来

07:11.150 --> 07:12.150
那接下来呢

07:12.150 --> 07:14.150
接下来应该还有什么

07:14.150 --> 07:15.250
是不是还有我们的

07:16.150 --> 07:19.350
这个顶部这样的一个导航

07:19.350 --> 07:21.150
那个这个不应该属于导航

07:21.150 --> 07:22.550
这属于调顶的一个区域

07:22.550 --> 07:24.150
就在hider区域

07:24.150 --> 07:26.350
那我们就可以把这个hider区域拿出来

07:28.250 --> 07:29.450
整个的hider区域

07:29.450 --> 07:31.950
也可以给它放在一个组件当中

07:31.950 --> 07:32.950
我们管它叫什么呢

07:32.950 --> 07:35.450
叫叫sleder

07:39.740 --> 07:41.240
直接叫hider也可以啊

07:41.240 --> 07:42.140
叫sleder network

07:46.770 --> 07:47.270
点view

07:48.970 --> 07:49.570
OK

07:49.570 --> 07:50.370
template

07:52.670 --> 07:54.270
那我们再接下来看一下

07:54.270 --> 07:55.670
我们这几个组件啊

07:55.670 --> 07:57.970
组件里面会用到一些数据

07:57.970 --> 07:59.870
像我们现在所看到的这个

07:59.870 --> 08:01.070
调顶的一个区域

08:01.070 --> 08:03.770
它就会有这样的一个切换

08:04.870 --> 08:08.470
切换我们菜单软状态的

08:08.470 --> 08:10.170
这样的一个方法

08:10.170 --> 08:10.970
看到了吗

08:10.970 --> 08:14.170
就是tango collapsed

08:14.170 --> 08:14.770
对吧

08:14.770 --> 08:16.170
这样的一个方法

08:16.170 --> 08:17.070
那我们就需要

08:17.070 --> 08:19.370
在我们script里面有这个方法吧

08:19.370 --> 08:21.670
那我们就需要把这个方法拿过来

08:23.370 --> 08:25.170
拿到我们的sleder里面去

08:25.970 --> 08:26.970
写一个script

08:30.080 --> 08:31.680
master的对吧

08:31.680 --> 08:32.880
都复制过来

08:32.880 --> 08:33.680
个说话一下

08:34.980 --> 08:36.480
再接下来呢

08:36.480 --> 08:38.480
再接下来是不是应该

08:38.480 --> 08:39.680
这里面有切换

08:39.680 --> 08:41.780
我们这个数据是不是也需要有啊

08:41.780 --> 08:44.280
那我就需要在我们的data里面去写吗

08:46.680 --> 08:48.280
我先写在data里面

08:48.280 --> 08:49.480
然后一会有问题的话

08:49.480 --> 08:50.780
我们再进行处理

08:50.780 --> 08:51.280
可以吧

08:55.040 --> 08:55.640
是这样的吧

08:56.940 --> 08:57.740
那我们再来看

08:57.740 --> 08:59.140
还有什么

08:59.140 --> 08:59.640
看一下

09:00.940 --> 09:01.640
这里面

09:01.640 --> 09:03.340
我们这个方法可以不用要了

09:03.340 --> 09:04.240
对不对

09:04.240 --> 09:05.040
再接下来

09:05.040 --> 09:06.240
应该把我们这两个组件

09:06.240 --> 09:09.440
引入到我们的页面当中吧

09:09.440 --> 09:12.240
那我就需要引入组件

09:12.240 --> 09:13.640
通过

09:13.640 --> 09:15.440
inpart进行一个引入

09:15.440 --> 09:17.340
先引入我们的left and menu吧

09:18.940 --> 09:20.840
我这里面为什么不直接叫menu

09:20.840 --> 09:24.340
是因为我们的标签当中

09:24.340 --> 09:25.040
在

09:25.040 --> 09:26.840
我记得在h5标签当中

09:26.840 --> 09:30.240
它有一个新增的一个menu标签

09:30.340 --> 09:33.440
这里面大家最好把它驱分开来啊

09:33.440 --> 09:37.410
不要用一些特殊的这样的一个名字

09:37.410 --> 09:39.910
我们就直接找到当前录定下的

09:39.910 --> 09:42.510
component之下的menu.view

09:44.310 --> 09:45.310
接下来

09:45.310 --> 09:46.810
还有一个

09:46.810 --> 10:03.770
然后接下来引入到我们的

10:03.770 --> 10:05.670
在当前那个组件里面

10:05.670 --> 10:07.870
我们需要写在component之下面

10:07.870 --> 10:08.970
对吧

10:08.970 --> 10:10.770
把我们这两个组件写进去

10:10.770 --> 10:11.970
left menu

10:11.970 --> 10:14.370
还有一个slider now

10:14.370 --> 10:16.470
接下来在我们指定位置

10:16.470 --> 10:17.970
使用一下这两个

10:17.970 --> 10:19.070
组件呗

10:19.070 --> 10:20.270
首先

10:20.270 --> 10:30.270
left menu

10:30.270 --> 10:32.070
现在我们来看一下页面啊

10:32.070 --> 10:34.570
现在又出现了这样的一个

10:34.570 --> 10:36.170
代码规范的一个问题

10:36.170 --> 10:38.170
我们就需要去格式画一下

10:38.170 --> 10:43.990
让它自动的去修复这样的一个bug

10:43.990 --> 10:44.290
来

10:44.290 --> 10:44.590
好了

10:44.590 --> 10:45.990
现在已经修复成功了

10:45.990 --> 10:47.290
现在来看一下

10:47.290 --> 10:48.490
是不是可以

10:48.490 --> 10:49.890
但现在还有一个问题

10:49.890 --> 10:50.790
当我点击的时候

10:50.790 --> 10:53.190
你会发现它并没有消失

10:53.190 --> 10:53.990
就吧

10:53.990 --> 10:56.090
那也就是说它俩现在还没有联系

10:56.090 --> 10:58.290
并且我们这里面还报了一个错误

10:58.290 --> 10:59.790
说我们的这个属性

10:59.790 --> 11:02.590
这个属性或者帮法啊

11:02.590 --> 11:03.590
它没有定义

11:03.590 --> 11:04.690
就直接被用了

11:04.690 --> 11:05.290
对不对

11:05.290 --> 11:06.490
那我们回过来看一下

11:06.490 --> 11:08.190
在哪里用到了呗

11:08.190 --> 11:10.490
第一部分就是在我们的主页当中

11:10.490 --> 11:15.280
我们有用到了这个变量

11:15.280 --> 11:16.380
再有呢

11:16.380 --> 11:18.380
这里面我们有这样一个值

11:18.380 --> 11:18.880
再有呢

11:18.880 --> 11:20.580
manyu里面是不是也有啊

11:20.580 --> 11:27.900
manyu里面主要就是用于切换我们的菜单

11:27.900 --> 11:30.800
应该说是让它合并

11:30.800 --> 11:32.200
还是让它展开

11:32.200 --> 11:33.100
对不对

11:33.100 --> 11:36.500
我们可以看一下这个词叫啥啊

11:36.500 --> 11:38.800
这个manyu

11:38.800 --> 11:42.290
找一下manyu

11:42.290 --> 11:45.190
在这里

11:45.190 --> 11:48.590
我们去找一下inlan这里

11:48.590 --> 11:49.990
是否是收集的一个状态

11:49.990 --> 11:51.790
对吧

11:51.790 --> 11:53.190
也就是这样的一个属性

11:53.190 --> 11:54.490
我们必须要控制它

11:54.490 --> 11:56.390
是否收集的一个状态

11:56.390 --> 11:59.490
那我们就是要把这样的一个值传递过来

11:59.590 --> 12:01.190
那这里面就设计到了

12:01.190 --> 12:03.390
我们组建与组建之间的一个交互的一个

12:03.390 --> 12:08.390
我们去做

12:08.390 --> 12:10.890
第一种方式我们可以借助副元素

12:10.890 --> 12:11.490
对不对

12:11.490 --> 12:20.180
副组建传递给它的紫元素吧

12:20.180 --> 12:23.180
我们这里面直接来个cel

12:23.180 --> 12:26.980
把这样的一个属性放进去

12:26.980 --> 12:28.280
对不对

12:28.280 --> 12:31.080
我们完全是可以的

12:31.080 --> 12:32.680
但这种方式写起来

12:32.680 --> 12:42.410
你会发现还有一点点的麻烦

12:42.410 --> 12:42.810
对吧

12:42.810 --> 12:44.010
你可以这样去写

12:44.110 --> 12:46.310
然后我们在页面当中

12:46.310 --> 12:47.110
我们去看一下

12:47.110 --> 12:47.910
这里面

12:47.910 --> 12:50.310
我们就需要再写一个script

12:51.610 --> 12:54.710
因为发现我们就需要在每一个组建当中

12:54.710 --> 12:57.210
我们都需要通过这样probs

12:57.210 --> 13:00.310
先把这样的一个数据拿过来

13:00.310 --> 13:01.710
对不对

13:01.710 --> 13:03.610
相对来说比较麻烦

13:03.610 --> 13:05.110
这是第一种方式

13:05.110 --> 13:06.510
它确实可以

13:06.510 --> 13:08.910
但是我这个人比较懒

13:08.910 --> 13:09.710
比较懒

13:09.710 --> 13:11.210
我不想写什么都带嘛

13:11.210 --> 13:12.110
怎么办

13:12.110 --> 13:14.410
我就用一种懒人自由懒

13:14.410 --> 13:15.010
懒法

13:15.010 --> 13:16.110
对不对

13:16.110 --> 13:16.810
那我就用一种

13:16.810 --> 13:19.110
我认为比较简单的一种方式

13:19.110 --> 13:20.110
那第二种方式

13:20.110 --> 13:22.810
是不是就可以通过vex

13:22.810 --> 13:25.210
我们就可以把我们的数据存入在

13:25.210 --> 13:26.510
我们的dart里面

13:26.510 --> 13:29.810
data下面的就是vex的状态里面

13:29.810 --> 13:33.610
我们把这样的一个数据放进去

13:33.610 --> 13:37.010
它就是用于切换

13:37.010 --> 13:42.110
这个菜单的必和

13:42.110 --> 13:50.020
probs不必和

13:50.020 --> 13:54.420
数代表必和

13:54.420 --> 13:55.620
对吧

13:55.620 --> 13:56.920
我们是不是可以写在这儿

13:56.920 --> 13:57.920
写在这儿之后呢

13:57.920 --> 14:00.220
我们就需要再写一些方法

14:00.220 --> 14:02.420
可以改变这个状态的方法

14:02.420 --> 14:04.120
写在我们的modation当中

14:04.120 --> 14:05.320
和action4里面

14:05.320 --> 14:06.020
对不对

14:06.020 --> 14:08.020
那现在这里面来写一下吧

14:08.020 --> 14:09.120
change

14:09.120 --> 14:10.420
我们就叫change

14:12.820 --> 14:15.820
plabcd

14:16.820 --> 14:17.520
so

14:17.520 --> 14:20.720
orapcd

14:20.720 --> 14:21.720
对吧

14:21.720 --> 14:24.220
那这里面我们要接收到state

14:24.220 --> 14:26.320
以及它的一个y6值

14:26.320 --> 14:27.620
对吧

14:27.620 --> 14:29.220
那这里面我们就可以不用去

14:29.220 --> 14:30.120
给它y6值了

14:30.120 --> 14:32.220
我们就直接去切换它的一个

14:32.220 --> 14:33.820
它的值不就是出合包子吗

14:33.820 --> 14:35.420
就切换它的值就可以了

14:35.420 --> 14:39.410
那就是state的

14:39.410 --> 14:40.410
等于

14:40.410 --> 14:41.810
非的

14:41.810 --> 14:42.710
beta

14:42.710 --> 14:44.210
tate

14:44.210 --> 14:45.810
它下面的plabcd

14:45.810 --> 14:47.010
对吧

14:47.010 --> 14:48.510
然后在我们的action4里面

14:48.510 --> 14:51.710
我们也需要去写一下

14:51.710 --> 14:53.610
在这里面为什么要去写

14:53.610 --> 14:56.210
是不是我们最好在操作数据的时候

14:56.210 --> 14:58.510
我们用dash patch去操作

14:58.510 --> 14:59.110
对吧

14:59.110 --> 15:00.310
防止如果我们这里面

15:00.310 --> 15:02.010
有一些音不操作的话

15:02.010 --> 15:08.240
在这里面我们就直接去写一下

15:08.240 --> 15:08.740
就快乐

15:08.740 --> 15:12.610
cange

15:14.810 --> 15:17.760
plabcd

15:17.760 --> 15:18.560
对吧

15:18.560 --> 15:19.460
是不是就可以了

15:19.460 --> 15:20.360
然后再接下来

15:20.360 --> 15:22.260
还能在我们的组件当中

15:22.260 --> 15:23.560
我就直接去

15:23.560 --> 15:25.460
不用在这里面再去声明了吧

15:25.460 --> 15:25.960
对吧

15:25.960 --> 15:27.360
我就直接去用

15:27.360 --> 15:29.060
我们的dash里面的

15:29.060 --> 15:30.360
把这些都可以删掉了

15:32.360 --> 15:33.460
这些都可以删掉了

15:34.860 --> 15:35.560
在这里面

15:35.560 --> 15:36.760
我们就直接用

15:36.760 --> 15:41.360
我们的dash身上的data里面的plabd

15:41.360 --> 15:43.860
rapcd

15:43.860 --> 15:44.560
对吧

15:44.560 --> 15:46.860
那我们需要在我们的自作件当中

15:46.860 --> 15:48.260
这个组件当中吧

15:48.760 --> 15:51.860
就是我们的头部这个组件当中

15:51.860 --> 15:53.260
我们也可以不用去它

15:53.260 --> 15:55.560
不用去声明它了

15:55.560 --> 15:58.160
接下来在这里

15:58.160 --> 15:59.560
我们就看一下在这里面

16:00.960 --> 16:03.560
在我们调用这个数据

16:03.560 --> 16:05.060
调用这个数据的位置

16:05.060 --> 16:08.160
我们前面都给它加上一个dash下面的

16:08.160 --> 16:11.400
vid下面的这个数据

16:11.400 --> 16:12.700
我们切换这里呢

16:12.700 --> 16:15.800
我也可以不用去自己切换它了

16:15.800 --> 16:16.300
对吧

16:16.300 --> 16:20.300
直接调用dash到身上的dash patch方法

16:20.400 --> 16:21.300
dash patch

16:21.300 --> 16:23.000
dash

16:23.000 --> 16:26.200
然后调用changer

16:26.200 --> 16:31.510
changer collapse

16:31.510 --> 16:32.410
是不是可以

16:32.410 --> 16:33.810
在接下来manual里面

16:33.810 --> 16:36.510
我们这里是不是也不需要用到

16:36.510 --> 16:37.910
这个点亮了

16:37.910 --> 16:41.410
直接去down里面去读去吧

16:41.410 --> 16:43.910
tore将dash里面

16:43.910 --> 16:45.810
collapse

16:45.810 --> 16:46.210
对吧

16:46.210 --> 16:47.210
这回是不是可以了

16:47.210 --> 16:48.410
现在我们来看一下

16:48.410 --> 16:50.510
现在又有这样的一些

16:50.510 --> 16:52.510
代码规范的一个问题

16:52.510 --> 16:56.970
那我们再去

16:56.970 --> 16:58.570
ok 现在好了

16:58.570 --> 16:59.970
ok 现在是不是可以了

16:59.970 --> 17:02.870
现在我们的切换什么也就实现了

17:02.870 --> 17:04.670
对吧

17:04.670 --> 17:07.570
那我们来看一下我们的这个效果

17:07.570 --> 17:09.470
你会发现我们的代码

17:09.470 --> 17:10.270
主的

17:10.270 --> 17:13.370
也就是我们的整个的这个页面当中

17:13.370 --> 17:15.370
我们的代码量相对来说

17:15.370 --> 17:16.770
是不是很少啊

17:16.770 --> 17:17.170
对吧

17:17.170 --> 17:18.170
很少吧

17:18.170 --> 17:20.370
那在接下来看一下

17:20.370 --> 17:22.170
每一个组件当中的代码量呢

17:22.170 --> 17:23.970
也不是很多吧

17:23.970 --> 17:24.370
对吧

17:24.370 --> 17:25.370
它都是一个功能

17:25.370 --> 17:27.670
每一个组件它都代表一个功能

17:27.670 --> 17:30.570
它都可以单独独立的去用

17:30.570 --> 17:31.470
对吧

17:31.470 --> 17:33.770
那我们也就把我们上一堂课的这个代码

17:33.770 --> 17:35.270
做了这样的一个结构化

17:35.270 --> 17:38.420
结构

17:38.420 --> 17:42.820
那在接下来我们

17:42.820 --> 17:43.720
内容区

17:43.720 --> 17:46.320
我们是不是还需要进行切换啊

17:46.320 --> 17:47.820
右侧内容区怎么切换

17:47.820 --> 17:50.420
是不是根据我们的猜担2012里面的

17:50.420 --> 17:53.020
这些信息改变我们的路由

17:53.020 --> 17:54.820
然后改变它的一个数据

17:54.820 --> 17:55.420
对吧

17:55.420 --> 17:57.220
那么我们的右侧内容区

17:57.220 --> 17:58.720
应该怎么去显示

17:58.720 --> 18:02.620
是不是就需要解在我们的routerview当中啊

18:02.620 --> 18:03.820
对吧

18:03.820 --> 18:06.120
写在routerview里面

18:06.120 --> 18:09.420
然后我们就可以通过路由进行切换

18:09.420 --> 18:10.820
这一部分的内容了吧

18:10.820 --> 18:13.320
紫路由前套呗

18:13.320 --> 18:14.320
对吧

18:14.320 --> 18:14.920
那好

18:14.920 --> 18:18.020
那我们现在已经把我们

18:18.020 --> 18:21.020
整个的这个结构已经写完了

18:21.020 --> 18:21.520
对吧

18:21.520 --> 18:24.220
现在我们整个页面的一个结构已经写完了

18:24.220 --> 18:25.420
接下来

18:25.420 --> 18:27.220
一部分一部分去实现

18:27.320 --> 18:30.220
那回过来看一下我们的这一块

18:30.220 --> 18:32.120
第一个功能

18:32.120 --> 18:34.420
第一个功能在这啊

18:34.420 --> 18:35.620
系统的整理布局

18:35.620 --> 18:36.620
我们已经写完了

18:36.620 --> 18:37.220
对不对

18:37.220 --> 18:55.680
看一下

18:55.680 --> 18:57.580
再接下来第2条

18:57.580 --> 18:59.580
用户信息的展示

18:59.580 --> 19:00.780
鼠标一入用户

19:00.780 --> 19:02.880
它会出现退出的按钮

19:02.880 --> 19:04.580
这个也都出现了

19:04.580 --> 19:05.280
对吧

19:05.280 --> 19:06.680
接下来第三条

19:06.680 --> 19:08.980
利用view一router切换右侧内容

19:08.980 --> 19:10.780
我们刚刚刚写完通过路

19:10.780 --> 19:16.890
那剩下的具体的信息

19:16.890 --> 19:19.190
我们就需要写紫路由了

19:19.190 --> 19:20.190
对吧

19:20.190 --> 19:21.190
就需要写紫的

19:21.190 --> 19:24.390
往紫路由下面去嵌套

19:24.390 --> 19:25.390
就是在我们的router

19:25.390 --> 19:25.790
呃

19:25.790 --> 19:26.490
我戴码了

19:26.490 --> 19:27.190
知道了

19:27.190 --> 19:29.390
就需要在我们的router里面

19:29.390 --> 19:31.790
进行一个嵌套收认呗

19:31.790 --> 19:32.490
对吧

19:32.490 --> 19:33.990
往里面这样去写呗

19:35.990 --> 19:37.090
对吧

19:37.090 --> 19:37.590
那好

19:37.590 --> 19:39.990
我们现在这一小节啊

19:39.990 --> 19:41.790
我们就先到这了

19:41.790 --> 19:43.890
我们就先休息一下

19:43.890 --> 19:45.590
大家先把这一小节的内容

19:45.590 --> 19:46.790
先吸收一下

19:46.790 --> 19:51.090
然后我们进入到下一个功能的实现

19:51.090 --> 19:52.090
那下一个功能

19:52.090 --> 19:53.890
我们先来实现这个

