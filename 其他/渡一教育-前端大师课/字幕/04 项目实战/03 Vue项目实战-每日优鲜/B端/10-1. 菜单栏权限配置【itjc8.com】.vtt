WEBVTT

00:00.180 --> 00:05.180
好 我们接下来来把我们的菜单的这一部分来完善一下

00:05.180 --> 00:11.180
菜单这一部分我们会发现它会根据用户的角色分配不同的菜单

00:11.180 --> 00:21.180
那你看我们先在这个菜单栏 它当中就没有内幕的管理的导航

00:21.180 --> 00:26.180
那我们再来看这些菜单对应着的 是不是就是我们右侧的页面

00:26.180 --> 00:30.180
那也就是说每一个菜单它都定位了一个路由 对不对

00:30.180 --> 00:34.180
那么我们就可以把这个菜单写在哪 是不是就写在路由当中啊

00:34.180 --> 00:41.180
那我们来写一下 这里面我们就可以再写一个路由

00:41.180 --> 00:49.180
来Constance 它是一个一步的SynC and Sync

00:49.180 --> 00:58.180
这个RouterMap 代表的是一个一步的路由的数组 对吧

00:58.180 --> 01:03.180
那这里面都需要有什么 是不是就需要有我们这些信息啊

01:03.180 --> 01:08.180
那我们再来看统计信息 好像每一个用户都有这个统计信息

01:08.180 --> 01:16.180
所以这个统计 这个导航我们就直接写在我们一直存在的路由里面了

01:16.180 --> 01:19.180
就是我们的Roots 这样的一个路由下面

01:19.180 --> 01:23.180
那我们在这里面 是不是接下来就需要写它的一个Children了

01:23.180 --> 01:28.180
就是它的一个子路由 对吧 那这个子路由就是统计呗

01:28.180 --> 01:32.180
那我们看一下这里面是不是还有名字 导航那个名字

01:32.180 --> 01:34.180
那这个导航名字我们怎么存处呢

01:34.180 --> 01:39.180
我们是不是就可以存处在路由的Meta 这样的一个属性里面

01:39.180 --> 01:44.180
对吧 把我们的当前的大标题写进去

01:44.180 --> 01:47.180
大标题 这个大标题是首页 对不对

01:47.180 --> 01:50.180
我们给它写进去 首页

01:50.180 --> 02:00.260
然后接下来子路由 子路由的话 第一个Test路径

02:00.260 --> 02:02.260
我们把这个子路由的路径写下

02:02.260 --> 02:05.260
那这个路径我们再接着统计 对吧

02:05.260 --> 02:08.260
那统计我们就管它叫Index吧

02:08.260 --> 02:13.260
可以吧 啊Index 主的一个页面嘛 对不对

02:13.260 --> 02:17.260
然后内幕也给它叫一下叫Index

02:17.260 --> 02:22.260
再接下来 我们会发现之前写的内幕名号都是大写的

02:22.260 --> 02:25.260
对不对 那这里面我们也给它大写吧

02:25.260 --> 02:28.260
Component 我们需要有这样一个组件 对不对

02:28.260 --> 02:32.260
那这个组件我们都写在Views这个目录下了

02:32.260 --> 02:38.260
那每一个页面我们都给它放置在我们的Page这样的一个目录下面

02:38.260 --> 02:41.260
代表的是一个页面 可以吧

02:41.260 --> 02:46.260
那这个页面我们就管它叫Index吧

02:46.260 --> 02:50.260
那这个页面下面我们写一点内容

02:50.260 --> 02:53.260
Template

02:53.260 --> 02:55.260
这是统计

02:55.260 --> 02:57.260
就写成这样一行文字

02:57.260 --> 03:00.260
然后接下来我们来写一下这个路由

03:00.260 --> 03:01.260
这个路由的话

03:01.260 --> 03:02.260
我们再来看

03:02.260 --> 03:06.260
这个路由它是不是属于我们的页面里面的 对不对

03:06.260 --> 03:10.260
那这个页面里面的一个子的组件吧 对不对

03:10.260 --> 03:12.260
它属于我们中间这一部分看到了吗

03:12.260 --> 03:15.260
上面这个结构我们都已经固定了 对不对

03:15.260 --> 03:18.260
那你看一下我们怎么动态的直改变这一部分呢

03:18.260 --> 03:20.260
是不是也可以通过路由啊

03:20.260 --> 03:23.260
那我就需要在我们的Lineout这里面

03:23.260 --> 03:26.260
把我们的右侧区域写出来

03:26.260 --> 03:28.260
右侧区域我们已经写出来了 对不对

03:28.260 --> 03:31.260
然后右侧区域上面有个雕底我们已经写完了

03:31.260 --> 03:34.260
接下来就是右侧会变化的这个区域

03:34.260 --> 03:37.260
那我们就用一个RouterView呗

03:37.260 --> 03:38.260
对不对

03:38.260 --> 03:39.260
用一个RouterView就可以了

03:39.260 --> 03:41.260
然后在我们的Router当中

03:41.260 --> 03:43.260
我们进行加载一下这个组件

03:43.260 --> 03:45.260
那这个组件我们一种方式

03:45.260 --> 03:48.260
你可以在这里面去引入啊

03:48.260 --> 03:52.260
引入我们当前的这个index 对吧

03:52.260 --> 04:03.570
vue 下面的page 下面的paj 下面的index.vue

04:03.570 --> 04:04.570
对吧

04:04.570 --> 04:05.570
我们就引入一下

04:05.570 --> 04:06.570
然后这个component

04:06.570 --> 04:07.570
我们就可以这样去写

04:07.570 --> 04:09.570
这是第一种方式

04:09.570 --> 04:10.570
第二种方式呢

04:10.570 --> 04:13.570
我们可以进行一个懒家载对不对

04:13.570 --> 04:14.570
什么是懒家载

04:14.570 --> 04:18.570
就是当我们去到这个路由上的时候

04:18.570 --> 04:20.570
我们再去加载这个页面

04:20.570 --> 04:21.570
那这个

04:21.570 --> 04:23.570
它的这种方式啊

04:23.570 --> 04:25.570
通过这个懒家载的一种方式

04:25.570 --> 04:28.570
它相对于我们直接

04:28.570 --> 04:30.570
这个写在顶部

04:30.570 --> 04:32.570
那写在顶部这种呢

04:32.570 --> 04:33.570
我们管它叫御加载

04:33.570 --> 04:35.570
就是提前加载好

04:35.570 --> 04:36.570
然后你用到时候

04:36.570 --> 04:38.570
我们再去找就可以了

04:38.570 --> 04:40.570
在我们缓存当中去找

04:40.570 --> 04:41.570
而我们下面这种方式呢

04:41.570 --> 04:42.570
懒家载

04:42.570 --> 04:44.570
我们接下来来说懒家载啊

04:44.570 --> 04:45.570
懒家载的话

04:45.570 --> 04:47.570
我们就直接通过一个回交韩数

04:47.570 --> 04:49.570
直接去引入就可以了

04:49.570 --> 04:52.570
把我们的这个地址拿过来

04:52.570 --> 04:54.570
这两种方式啊

04:54.570 --> 04:58.570
懒家载会比御加载的性能相对来说

04:58.570 --> 05:00.570
会好一点

05:00.570 --> 05:02.570
会好一点

05:02.570 --> 05:03.570
因为懒家载

05:03.570 --> 05:05.570
它是我们用到的时候

05:05.570 --> 05:06.570
它才会去加载它

05:06.570 --> 05:07.570
对吧

05:07.570 --> 05:09.570
OK 我们不用的话

05:09.570 --> 05:10.570
我们就不需要去加载

05:10.570 --> 05:12.570
那御加载的话

05:12.570 --> 05:13.570
它会有一个问题

05:13.570 --> 05:16.570
就是第一次加载你的这个项目的时候

05:16.570 --> 05:18.570
加载你这个系统的时候

05:18.570 --> 05:20.570
它会非常的慢

05:20.570 --> 05:21.570
那像懒家载

05:21.570 --> 05:25.570
它什么时候用到这个组件了

05:25.570 --> 05:27.570
它才会去加载这个组件

05:27.570 --> 05:31.570
那它就不需要等到这个组件

05:31.570 --> 05:32.570
加载完成之后

05:32.570 --> 05:34.570
展示给我们

05:35.570 --> 05:37.570
这是这个

05:37.570 --> 05:39.570
那现在已经把我们的这个路由

05:39.570 --> 05:40.570
第一个路由已经下完了

05:40.570 --> 05:41.570
对吧

05:41.570 --> 05:43.570
还有剩下的商品的路由

05:43.570 --> 05:47.570
是不是取决于我们的用户的这个角色呀

05:47.570 --> 05:50.570
那我们就把所有的路由都写在

05:50.570 --> 05:52.570
我们这个别良当中

05:52.570 --> 05:54.570
我singrouter别良当中

05:54.570 --> 05:55.570
那这里面

05:55.570 --> 05:58.570
它就应该有一个这个

05:58.570 --> 06:00.570
有一个这个路径

06:00.570 --> 06:02.570
这个路径就是我们商品的

06:02.570 --> 06:03.570
对吧

06:03.570 --> 06:06.570
有个导航就是我们商品的这个导航

06:06.570 --> 06:07.570
叫个商品

06:07.570 --> 06:09.570
我们就管叫什么呢

06:09.570 --> 06:11.570
叫portart对吧

06:11.570 --> 06:16.070
然后这个路径就叫portart

06:16.070 --> 06:17.070
好

06:17.070 --> 06:18.070
然后再接下来

06:18.070 --> 06:20.070
它应该有个mechat对吧

06:20.070 --> 06:21.070
拍头

06:21.070 --> 06:22.070
写下

06:22.070 --> 06:24.070
这是首页

06:24.070 --> 06:25.070
这不叫首页了

06:25.070 --> 06:26.070
这叫商品

06:26.070 --> 06:29.070
那它对应的这个组件是什么

06:29.070 --> 06:31.070
它是不是它的结构

06:31.070 --> 06:33.070
跟我们首页的这个结构是一样的

06:33.070 --> 06:34.070
所以这里面

06:34.070 --> 06:37.070
它需要给它加一个component

06:37.070 --> 06:39.070
加一个hold

06:39.070 --> 06:40.070
再接下来

06:40.070 --> 06:41.070
它下面的紫路线

06:41.070 --> 06:43.070
紫路由呗

06:43.070 --> 06:44.070
就呗

06:44.070 --> 06:45.070
紫路由

06:45.070 --> 06:46.070
那这个紫路由有什么

06:46.070 --> 06:49.070
是不是就需要写我们下面的这些了

06:49.070 --> 06:50.070
对吧

06:50.070 --> 06:51.070
商品就是一级标题

06:51.070 --> 06:53.070
下面就二级标题呗

06:53.070 --> 06:54.070
那接着往下来

06:54.070 --> 06:55.070
就是商品粒比奥

06:55.070 --> 06:56.070
添加商品

06:56.070 --> 06:57.070
还有这个

06:57.070 --> 06:59.070
内幕管理对吧

06:59.070 --> 07:01.070
那么一个一个来写

07:01.070 --> 07:03.070
先是粒比奥对吧

07:03.070 --> 07:04.070
我们就管它叫list吧

07:04.070 --> 07:06.070
叫portage list

07:06.070 --> 07:07.070
对吧

07:07.070 --> 07:08.070
叫portage list

07:08.070 --> 07:09.070
这样的路径

07:09.070 --> 07:14.070
然后内幕就叫portage list

07:14.070 --> 07:16.070
我们的内幕是不是都是大写的

07:16.070 --> 07:18.070
我们这里面也给它大写啊

07:18.070 --> 07:21.070
然后再接下来

07:21.070 --> 07:25.070
写下它的名字

07:25.070 --> 07:26.070
排头

07:26.070 --> 07:27.070
标题

07:27.070 --> 07:30.070
它叫商品粒比奥

07:30.070 --> 07:33.020
对吧

07:33.020 --> 07:34.020
然后再接下来

07:34.020 --> 07:37.020
它的组件

07:37.020 --> 07:39.020
那我们再写一下

07:39.020 --> 07:41.020
列表的页面呗

07:41.020 --> 07:42.020
叫list

07:42.020 --> 07:44.020
我们叫portage吧

07:44.020 --> 07:47.850
portage list

07:47.850 --> 07:49.850
叫view

07:49.850 --> 07:50.850
OK

07:50.850 --> 07:54.420
然后我们复制一下

07:54.420 --> 07:56.420
这里改成

07:56.420 --> 07:59.420
产品列表

07:59.420 --> 08:01.420
应该是商品的表

08:01.420 --> 08:05.820
然后我们再把

08:05.820 --> 08:07.820
剩下几个页面都给它加进去

08:07.820 --> 08:09.820
还有这个

08:09.820 --> 08:11.820
新增商品的一个页面

08:11.820 --> 08:18.260
portage

08:18.260 --> 08:19.260
新增

08:19.260 --> 08:24.940
新增商品

08:24.940 --> 08:25.940
OK

08:25.940 --> 08:26.940
然后把我们名字

08:26.940 --> 08:27.940
后面改一下

08:27.940 --> 08:32.300
后面

08:32.300 --> 08:43.680
然后再来一个lame管理

08:43.680 --> 08:44.680
好

08:44.680 --> 08:47.680
我们把这几个路由都写一下

08:47.680 --> 08:49.680
component

08:49.680 --> 08:51.680
我们还是用来加载

08:51.680 --> 08:53.680
那种方式去加载它

08:53.680 --> 09:08.320
src下面的views

09:08.320 --> 09:09.320
pages

09:09.320 --> 09:10.320
下面的

09:11.320 --> 09:13.320
下面的什么

09:13.320 --> 09:14.320
找一下

09:14.320 --> 09:15.320
这是列表

09:15.320 --> 09:16.320
对不对

09:16.320 --> 09:18.320
列表我们叫portage list

09:18.320 --> 09:24.340
对吧

09:24.340 --> 09:26.340
然后新增

09:26.340 --> 09:31.700
内幕

09:31.700 --> 09:34.700
这是新增我们就叫ite

09:34.700 --> 09:40.640
叫ite

09:40.640 --> 09:45.170
添加商品

09:45.170 --> 09:46.170
这个叫ite

09:46.170 --> 09:47.170
对吧

09:47.170 --> 09:49.170
portageite

09:49.170 --> 09:50.170
好

09:50.170 --> 09:55.360
然后内幕管理

09:55.360 --> 09:57.360
这个我们叫category

09:58.360 --> 10:03.180
lame管理

10:03.180 --> 10:04.180
好

10:04.180 --> 10:06.180
这个路径

10:07.180 --> 10:08.180
lame

10:08.180 --> 10:09.180
对吧

10:09.180 --> 10:11.180
现在我们就已经把所有

10:11.180 --> 10:13.180
会用到的这个路由

10:13.180 --> 10:15.180
所有会用到的页面

10:15.180 --> 10:17.180
它对应的路由都已经配置完了

10:17.180 --> 10:18.180
接下来

10:18.180 --> 10:20.180
我们是不是就需要根据角色

10:20.180 --> 10:22.180
去判断它需要油呢

10:22.180 --> 10:34.620
它对应的这个路由文件

10:34.620 --> 10:35.620
白写

10:35.620 --> 10:36.620
六个对应关系

10:36.620 --> 10:38.620
我们就在这个Utils里面吧

10:38.620 --> 10:40.620
来写这个对应关系

10:40.620 --> 10:42.620
就叫全件

10:42.620 --> 10:44.620
prmi

10:44.620 --> 10:49.620
prpermss

10:49.620 --> 10:50.620
对吧

10:50.620 --> 10:51.620
OK

10:51.620 --> 10:52.620
我们把这个对应关系

10:52.620 --> 10:53.620
就写在这儿

10:53.620 --> 10:54.620
这个对应关系

10:54.620 --> 10:56.620
我们写上一个对象

10:56.620 --> 10:58.620
这个对象我们就叫

10:58.620 --> 11:00.620
router to

11:00.620 --> 11:02.620
叫

11:02.620 --> 11:03.620
root

11:03.620 --> 11:05.620
to router

11:05.620 --> 11:06.620
对吧

11:06.620 --> 11:07.620
root

11:08.620 --> 11:10.620
代表角色对应关系

11:10.620 --> 11:12.620
对应的路由都有哪些

11:12.620 --> 11:14.620
那角色对应的路由

11:14.620 --> 11:15.620
它是一个mine

11:15.620 --> 11:16.620
是一个对象

11:16.620 --> 11:17.620
这个对象里面

11:17.620 --> 11:18.620
就根据我们的角色吧

11:18.620 --> 11:19.620
我们的角色

11:19.620 --> 11:20.620
一共有两个角色

11:20.620 --> 11:21.620
两类角色

11:21.620 --> 11:22.620
一类是

11:22.620 --> 11:25.620
customer

11:25.620 --> 11:28.620
c-o-s-t-o-m-e-r

11:28.620 --> 11:29.620
customer

11:29.620 --> 11:31.620
它对应的路由有哪些

11:31.620 --> 11:33.620
然后再有一个是管理员

11:33.620 --> 11:34.620
mean

11:34.620 --> 11:36.620
它对应的路由有哪些

11:36.620 --> 11:38.620
这个对应的路由

11:38.620 --> 11:40.620
我们就直接传递

11:40.620 --> 11:41.620
路由的名字了

11:41.620 --> 11:42.620
可以吧

11:42.620 --> 11:43.620
那这里面

11:43.620 --> 11:44.620
你可以认为

11:44.620 --> 11:46.620
这个每一个数字当中

11:46.620 --> 11:47.620
它就是一个名字

11:47.620 --> 11:49.620
你可以给数字当中的每一项

11:49.620 --> 11:50.620
设置为一个对象

11:50.620 --> 11:52.620
这个对象里面

11:52.620 --> 11:53.620
代表的是

11:53.620 --> 11:55.620
它需要用的

11:55.620 --> 11:58.620
这个当前这个角色

11:58.620 --> 11:59.620
它对应的

11:59.620 --> 12:02.620
有权限的这样的一个路由

12:02.620 --> 12:04.620
那这个路由里面

12:04.620 --> 12:06.620
就需要有内幕名称

12:06.620 --> 12:07.620
对吧

12:07.620 --> 12:08.620
对应的

12:08.620 --> 12:09.620
它需要有权限的

12:09.620 --> 12:11.620
路由名字的有哪些

12:11.620 --> 12:12.620
那这里面

12:12.620 --> 12:13.620
我们给它写一下吧

12:13.620 --> 12:15.620
首先我们的一级标题

12:15.620 --> 12:16.620
我们就需要

12:16.620 --> 12:17.620
给它加上

12:17.620 --> 12:19.620
这个权限

12:19.620 --> 12:22.620
我们就管它叫内幕吧

12:22.620 --> 12:23.620
然后

12:23.620 --> 12:24.620
再来

12:24.620 --> 12:25.620
二级标题

12:25.620 --> 12:26.620
是不是也有

12:26.620 --> 12:27.620
字标题

12:27.620 --> 12:28.620
还有

12:28.620 --> 12:30.620
product list

12:30.620 --> 12:32.620
都给它写进去

12:32.620 --> 12:33.620
还有一个

12:33.620 --> 12:37.060
这个新增商品吧

12:37.060 --> 12:39.060
DOCT

12:39.060 --> 12:41.060
Product ID

12:41.060 --> 12:42.060
对吧

12:42.060 --> 12:43.060
然后还有什么

12:43.060 --> 12:44.060
好像没有别的了吧

12:44.060 --> 12:45.060
没有别的了

12:45.060 --> 12:46.060
我们继续

12:46.060 --> 12:48.060
那再接下来

12:48.060 --> 12:49.060
往下

12:49.060 --> 12:50.060
就是我们的这个

12:50.060 --> 12:51.060
管理员的

12:51.060 --> 12:52.060
管理员的话

12:52.060 --> 12:53.060
是不是

12:53.060 --> 12:54.060
需要有这些权限

12:54.060 --> 12:56.060
除了这些权限之外

12:56.060 --> 12:57.060
它还需要有一个

12:57.060 --> 12:58.060
内幕管理的一个权限

12:58.060 --> 12:59.060
叫

12:59.060 --> 13:00.060
開启标题

13:00.060 --> 13:01.060
一

13:01.060 --> 13:02.060
二级

13:02.060 --> 13:04.430
对吧

13:04.430 --> 13:06.430
它有这些权限

13:06.430 --> 13:07.430
那我们最终

13:07.430 --> 13:08.430
你看一下

13:08.430 --> 13:10.430
这个对象存处的

13:12.430 --> 13:14.430
存处的是

13:14.430 --> 13:16.430
这个角色

13:17.430 --> 13:20.430
对应的权限

13:20.430 --> 13:22.430
名称

13:22.430 --> 13:23.430
对吧

13:23.430 --> 13:24.430
角色对应了

13:24.430 --> 13:25.430
还有

13:25.430 --> 13:27.430
还有的权限名称

13:27.430 --> 13:28.430
这是这样的一个对象

13:28.430 --> 13:29.430
那我们接下来

13:29.430 --> 13:31.430
是不是还需要通过

13:31.430 --> 13:33.430
还需要去实现一个

13:33.430 --> 13:34.430
功能

13:34.430 --> 13:35.430
什么功能

13:35.430 --> 13:36.430
就是通过我们的决策

13:36.430 --> 13:37.430
去来判断一下

13:37.430 --> 13:38.430
它都有哪些

13:38.430 --> 13:39.430
这个路由

13:39.430 --> 13:40.430
对不对

13:40.430 --> 13:41.430
那我们这里面

13:41.430 --> 13:48.480
有这个路由名

13:48.480 --> 13:49.480
那这个处理

13:49.480 --> 13:50.480
我们就需要在哪里去写

13:50.480 --> 13:52.480
是不是需要在我们

13:52.480 --> 13:54.480
继续往下去执行的时候

13:54.480 --> 13:55.480
也就是我们

13:55.480 --> 13:56.480
现在已经进入到

13:56.480 --> 14:05.380
系统当中

14:05.380 --> 14:06.380
已经登陆了

14:06.380 --> 14:07.380
然后

14:07.380 --> 14:08.380
要想

14:08.380 --> 14:09.380
进到我们的系统当中了

14:09.380 --> 14:10.380
我们接下来

14:10.380 --> 14:13.700
要对于我们的路由

14:13.700 --> 14:14.700
处理

14:14.700 --> 14:15.700
处理一下

14:15.700 --> 14:16.700
我们的这些路由

14:16.700 --> 14:17.700
然后动态的

14:17.700 --> 14:18.700
我们的路由里面

14:18.700 --> 14:19.700
去添加一下这些路由

14:19.700 --> 14:20.700
对吧

14:20.700 --> 14:21.700
那我们这里

14:21.700 --> 14:23.700
就需要这样的一个方法

14:23.700 --> 14:26.700
去获取当前用户

14:26.700 --> 14:28.700
当前的这个用户

14:28.700 --> 14:29.700
它的一个角色

14:29.700 --> 14:30.700
它所属的一个

14:30.700 --> 14:33.700
角色对应的这个

14:33.700 --> 14:34.700
路由的一个权限

14:34.700 --> 14:35.700
对吧

14:35.700 --> 14:36.700
那我们可以怎么去写呢

14:36.700 --> 14:37.700
这里面

14:37.700 --> 14:38.700
我们就可以这样

14:38.700 --> 14:41.700
把我们的这个路由

14:41.700 --> 14:43.700
把我们的角色

14:43.700 --> 14:45.700
对应的路由的这个信息

14:45.700 --> 14:46.700
我们就给它导出出去

14:46.700 --> 14:47.700
举个例子

14:47.700 --> 14:48.700
例如我们这里面

14:48.700 --> 14:49.700
直接来个

14:49.700 --> 14:51.700
Import Function

14:51.700 --> 14:53.700
我们导出一个函数

14:53.700 --> 14:54.700
对吧

14:54.700 --> 14:57.700
Default Function

14:57.700 --> 14:58.700
导出一个函数

14:58.700 --> 15:00.700
这个函数叫什么呢

15:00.700 --> 15:01.700
这个函数是用来

15:01.700 --> 15:03.700
主要是用来

15:03.700 --> 15:05.700
这个返回一个

15:05.700 --> 15:06.700
返回出去

15:06.700 --> 15:07.700
一个我们最终

15:07.700 --> 15:09.700
要渲染到页面当中的

15:09.700 --> 15:11.700
这样的一个路由

15:11.700 --> 15:12.700
也就是最终

15:12.700 --> 15:13.700
我们需要

15:13.700 --> 15:14.700
在这个系统当中

15:14.700 --> 15:15.700
我们需要了一个路由

15:15.700 --> 15:16.700
那我们就直接

15:16.700 --> 15:17.700
互取

15:17.700 --> 15:19.700
改成Manual

15:19.700 --> 15:22.700
这个Router

15:22.700 --> 15:23.700
可以吧

15:23.700 --> 15:24.700
通过这样的一个方法

15:24.700 --> 15:25.700
互取啊

15:25.700 --> 15:26.700
那这个方法

15:26.700 --> 15:27.700
需要我们拿过来什么

15:27.700 --> 15:28.700
是不是需要

15:28.700 --> 15:29.700
拿过来所有的路由啊

15:29.700 --> 15:30.700
然后再根据

15:30.700 --> 15:31.700
我们当下那个

15:31.700 --> 15:32.700
用户的一个权限

15:32.700 --> 15:33.700
来判断它到底

15:33.700 --> 15:34.700
有没有

15:34.700 --> 15:35.700
这个

15:35.700 --> 15:36.700
来便利一下

15:36.700 --> 15:37.700
我们所有的路由

15:37.700 --> 15:38.700
然后

15:38.700 --> 15:39.700
然后判断一下

15:39.700 --> 15:40.700
每一个路由

15:40.700 --> 15:41.700
它到底是否有权限的

15:41.700 --> 15:42.700
对吧

15:42.700 --> 15:43.700
那这里面

15:43.700 --> 15:44.700
我们就需要这样

15:45.700 --> 15:46.700
拿过来的

15:46.700 --> 15:47.700
应该是

15:47.700 --> 15:48.700
所有的路由信息

15:48.700 --> 15:49.700
就是

15:49.700 --> 15:51.700
叫Router

15:51.700 --> 15:53.700
R-O-U-T

15:53.700 --> 15:54.700
路词吧

15:54.700 --> 15:55.700
所有的路由

15:55.700 --> 15:56.700
对吧

15:56.700 --> 15:57.700
那接下来呢

15:57.700 --> 15:58.700
我们是不是就需要

15:58.700 --> 15:59.700
拿到

15:59.700 --> 16:00.700
这个

16:00.700 --> 16:01.700
角色对应的

16:01.700 --> 16:02.700
所有有权限的

16:02.700 --> 16:03.700
这个路由的名字

16:03.700 --> 16:04.700
然后我们去

16:04.700 --> 16:05.700
一个的判断

16:05.700 --> 16:06.700
便利一下

16:06.700 --> 16:07.700
我们的路由

16:07.700 --> 16:08.700
然后一个一个的

16:08.700 --> 16:09.700
判断

16:09.700 --> 16:10.700
对不对

16:10.700 --> 16:11.700
那我们这里面

16:11.700 --> 16:12.700
怎么做

16:12.700 --> 16:13.700
是不是

16:13.700 --> 16:14.700
这样的一个

16:14.700 --> 16:15.700
路由

16:15.700 --> 16:17.700
这个权限的

16:17.700 --> 16:18.700
路由的名字

16:18.700 --> 16:19.700
那我们这里面

16:19.700 --> 16:21.700
是不是就可以来一个Constant

16:21.700 --> 16:23.700
叫

16:23.700 --> 16:24.700
这个

16:24.700 --> 16:26.700
叫权有这个权限的

16:26.700 --> 16:27.700
对吧

16:27.700 --> 16:28.700
权有权限

16:28.700 --> 16:29.700
叫什么呢

16:29.700 --> 16:30.700
Allow

16:30.700 --> 16:32.700
叫Allow

16:32.700 --> 16:33.700
Root

16:33.700 --> 16:35.700
Name

16:35.700 --> 16:37.700
Root Name

16:37.700 --> 16:38.700
可以吧

16:38.700 --> 16:39.700
允许的

16:39.700 --> 16:40.700
这个路由的名字

16:40.700 --> 16:41.700
允许的路由名字

16:41.700 --> 16:42.700
哪些

16:42.700 --> 16:43.700
是不是就是这个

16:43.700 --> 16:44.700
它

16:44.700 --> 16:45.700
是不是我们还需要

16:45.700 --> 16:47.700
获取到我们的角色呀

16:47.700 --> 16:48.700
所以这个权数里面

16:48.700 --> 16:49.700
是不是还需要拿到

16:49.700 --> 16:50.700
我们当前这个

16:50.700 --> 16:51.700
用户的一个角色

16:51.700 --> 16:52.700
那我们就

16:52.700 --> 16:53.700
用这个Root

16:53.700 --> 16:54.700
这样的一个

16:54.700 --> 16:55.700
这个

16:55.700 --> 16:56.700
形参

16:56.700 --> 16:58.700
这个代表了

16:58.700 --> 16:59.700
可以吧

16:59.700 --> 17:00.700
那我们现在就可以

17:00.700 --> 17:01.700
拿到我们这个

17:01.700 --> 17:02.700
对应的

17:02.700 --> 17:03.700
所有的路由的

17:03.700 --> 17:04.700
这个

17:04.700 --> 17:05.700
Name名字了吧

17:05.700 --> 17:06.700
那我们想要拿到的

17:06.700 --> 17:07.700
是不是里面的名字

17:07.700 --> 17:08.700
对不对

17:08.700 --> 17:09.700
那我这里面

17:09.700 --> 17:10.700
就直接来一个

17:10.700 --> 17:11.700
Map一下呗

17:11.700 --> 17:12.700
对吧

17:12.700 --> 17:13.700
Map一下

17:13.700 --> 17:14.700
最终我让它

17:14.700 --> 17:15.700
返回

17:15.700 --> 17:17.700
当前这个对象里面的

17:17.700 --> 17:19.700
Name名称呗

17:19.700 --> 17:20.700
对吧

17:20.700 --> 17:21.700
好

17:21.700 --> 17:22.700
然后再接下来呢

17:22.700 --> 17:23.700
我是不是就需要

17:23.700 --> 17:25.700
便利一下我的Roots

17:25.700 --> 17:26.700
然后过滤掉

17:26.700 --> 17:28.700
没有权限的

17:28.700 --> 17:29.700
对不对

17:29.700 --> 17:30.700
那之后里面

17:30.700 --> 17:31.700
我们就可以

17:31.700 --> 17:32.700
再接下来

17:32.700 --> 17:34.700
返回Resout Roots

17:34.700 --> 17:37.700
R-O-U-T-E

17:37.700 --> 17:39.700
R-O-U-T-E-S

17:39.700 --> 17:40.700
那返回的路由

17:40.700 --> 17:41.700
应该什么

17:41.700 --> 17:42.700
是不是应该由我们

17:42.700 --> 17:43.700
传过来的这个路由

17:43.700 --> 17:45.700
便利一下过滤

17:45.700 --> 17:46.700
对吧

17:46.700 --> 17:47.700
它需要进行一个过滤

17:47.700 --> 17:49.700
那我们就用Future呗

17:49.700 --> 17:50.700
拿过来我们的

17:50.700 --> 17:51.700
每一个路由

17:51.700 --> 17:52.700
我们就要R吧

17:52.700 --> 17:53.700
可以吧

17:53.700 --> 17:54.700
拿过来我们的

17:54.700 --> 17:55.700
每一个路由

17:55.700 --> 17:56.700
进行一个判断

17:56.700 --> 17:57.700
判断我们当前

17:57.700 --> 17:58.700
这个权限当中

17:58.700 --> 18:00.700
是否含有这个路由呗

18:00.700 --> 18:01.700
对不对

18:01.700 --> 18:02.700
我们判断一下

18:02.700 --> 18:03.700
也就是

18:03.700 --> 18:04.700
看一下

18:04.700 --> 18:06.700
它的当前的

18:06.700 --> 18:07.700
Name名称

18:07.700 --> 18:08.700
对吧

18:08.700 --> 18:09.700
N-DX-O-F

18:09.700 --> 18:10.700
就是我们所有的

18:10.700 --> 18:11.700
这个

18:11.700 --> 18:12.700
这个数组当中

18:12.700 --> 18:14.700
含有权限的这个名字

18:14.700 --> 18:15.700
的数组当中

18:15.700 --> 18:17.700
是否含有当前路由的

18:17.700 --> 18:19.700
名字呗

18:19.700 --> 18:20.700
那我们通过

18:20.700 --> 18:21.700
N-DX-O-F

18:21.700 --> 18:22.700
就可以了

18:22.700 --> 18:23.700
拿到它的Name值

18:23.700 --> 18:25.700
如果它

18:25.700 --> 18:27.700
不等于

18:27.700 --> 18:28.700
Fu-E的话

18:28.700 --> 18:29.700
那也就是

18:29.700 --> 18:31.700
它含有这个权限

18:31.700 --> 18:32.700
对吧

18:32.700 --> 18:33.700
那如果有权限的话

18:33.700 --> 18:34.700
我们就需要

18:34.700 --> 18:36.700
把它返回出去

18:36.700 --> 18:37.700
对吧

18:37.700 --> 18:38.700
但是如果

18:38.700 --> 18:39.700
清楚之前

18:39.700 --> 18:40.700
我们再来看

18:40.700 --> 18:41.700
我们的这个路由

18:41.700 --> 18:42.700
它是不是会有一个

18:42.700 --> 18:43.700
二级路由

18:43.700 --> 18:44.700
对吧

18:44.700 --> 18:45.700
看一下是不是有个Q准

18:45.700 --> 18:46.700
那我是不是还需要

18:46.700 --> 18:47.700
判断一下它的

18:47.700 --> 18:50.700
子路由是否有权限呀

18:50.700 --> 18:51.700
那我们接下来

18:51.700 --> 18:52.700
在这里面

18:52.700 --> 18:53.700
还需要对它的一个

18:53.700 --> 18:55.700
子路由进行处理

18:55.700 --> 18:56.700
那我们先拿过来

18:56.700 --> 18:57.700
它的一个子路由

18:57.700 --> 18:58.700
那子路由

18:58.700 --> 18:59.700
我们就叫Q准吧

18:59.700 --> 19:02.700
T-I-R-D-R-E-N

19:02.700 --> 19:04.700
等于R-Q准

19:04.700 --> 19:05.700
对不对

19:05.700 --> 19:06.700
拿过来它的子路由

19:06.700 --> 19:07.700
再接下来呢

19:07.700 --> 19:09.700
便利子路由吧

19:09.700 --> 19:10.700
对吧

19:10.700 --> 19:12.700
把我们的子路由

19:12.700 --> 19:14.700
过滤一下

19:14.700 --> 19:15.700
那就进行一个

19:15.700 --> 19:16.700
Fu-E过滤

19:16.700 --> 19:17.700
拿过来

19:17.700 --> 19:19.700
每个子路由当中的

19:19.700 --> 19:21.700
这样的一个数据

19:21.700 --> 19:22.700
然后判断一下

19:22.700 --> 19:24.700
这个子路由的名字

19:24.700 --> 19:25.700
到底是否含有

19:25.700 --> 19:26.700
它是否在我们的

19:26.700 --> 19:28.700
所有

19:28.700 --> 19:29.700
这个有权限的

19:29.700 --> 19:30.700
这个名字的

19:30.700 --> 19:31.700
数组当中

19:31.700 --> 19:32.700
对吧

19:32.700 --> 19:33.700
那我们应该让它

19:33.700 --> 19:34.700
返回什么

19:34.700 --> 19:35.700
是不是返回

19:35.700 --> 19:37.700
它不等于Fu-E啊

19:38.700 --> 19:39.700
对不对

19:39.700 --> 19:40.700
那这里面就是C了

19:40.700 --> 19:43.700
对吧

19:43.700 --> 19:44.700
那这样一来

19:44.700 --> 19:45.700
我们是不是还需要接收

19:45.700 --> 19:46.700
用谁接收

19:46.700 --> 19:47.700
我们是不是应该

19:47.700 --> 19:49.700
用R-Q准进行接收

19:49.700 --> 19:50.700
对不对

19:50.700 --> 19:51.700
控制一下

19:51.700 --> 19:52.700
要跟它

19:52.700 --> 19:53.700
对吧

19:53.700 --> 19:55.700
现在是不是就好了

19:55.700 --> 19:57.700
我们也就写完了

19:57.700 --> 19:58.700
然后我们接下来

19:58.700 --> 19:59.700
来测试一下

19:59.700 --> 20:00.700
看一下

20:00.700 --> 20:01.700
那其它的情况

20:01.700 --> 20:02.700
是不是就应该

20:02.700 --> 20:03.700
R-Fu-E了

20:03.700 --> 20:06.200
对吧

20:06.200 --> 20:07.200
那其它的

20:07.200 --> 20:09.200
不没有权限的路由

20:09.200 --> 20:10.200
我们就让它

20:10.200 --> 20:11.200
不返回

20:11.200 --> 20:12.200
我们就过滤掉了

20:12.200 --> 20:13.200
对不对

20:13.200 --> 20:14.200
那最终这个函数

20:14.200 --> 20:16.200
我们就返回

20:16.200 --> 20:18.200
这个R-Fu-E

20:19.200 --> 20:20.200
就是

20:20.200 --> 20:21.200
还写下注释

20:28.330 --> 20:29.330
OK

20:29.330 --> 20:30.330
这是角色

20:30.330 --> 20:31.330
角色

20:31.330 --> 20:39.330
它是一个

20:39.330 --> 20:40.330
它代表的是

20:40.330 --> 20:45.330
获取过滤

20:45.330 --> 20:47.330
过滤

20:47.330 --> 20:51.330
过滤

20:51.330 --> 20:53.330
过滤

20:53.330 --> 20:55.330
含有过滤掉

20:55.330 --> 21:00.330
没有权限的路由

21:00.330 --> 21:03.020
可以吧

21:03.020 --> 21:05.020
然后我们在路由这里面

21:05.020 --> 21:06.020
接下来做出礼拜

21:06.020 --> 21:07.020
在这里

21:07.020 --> 21:08.020
我们拿到这个角色

21:08.020 --> 21:09.020
对不对

21:09.020 --> 21:10.020
拿到角色之后

21:10.020 --> 21:12.020
调用一下那个方法

21:12.020 --> 21:13.020
那这

21:13.020 --> 21:14.020
这回我们是不是就需要

21:14.020 --> 21:15.020
在这个文件下面

21:15.020 --> 21:16.020
去引入一下

21:16.020 --> 21:17.020
我们的Permission

21:17.020 --> 21:19.020
这样的一个文件了

21:19.020 --> 21:20.020
对吧

21:20.020 --> 21:22.020
那我们一Party一下

21:22.020 --> 21:23.020
改

21:23.020 --> 21:24.020
Menu

21:25.020 --> 21:26.020
Route

21:27.020 --> 21:28.020
Front

21:29.020 --> 21:30.020
来找一下

21:30.020 --> 21:32.020
它下面的YouTube

21:33.020 --> 21:34.020
下面的

21:35.020 --> 21:36.020
这个SRC下面的YouTube

21:36.020 --> 21:38.020
下面的Permission

21:39.020 --> 21:40.020
对吧

21:40.020 --> 21:41.020
这样的吧

21:41.020 --> 21:43.020
然后我们把它拿过来

21:45.020 --> 21:46.020
来

21:46.020 --> 21:47.020
获取一下

21:47.020 --> 21:48.020
也就是Constant

21:48.020 --> 21:50.020
MenuRoute

21:51.020 --> 21:52.020
它应该等于什么

21:52.020 --> 21:53.020
是不是应该

21:53.020 --> 21:55.020
把这个方法执行一下

21:55.020 --> 21:56.020
然后把我们的

21:56.020 --> 21:58.020
角色传递过去

21:58.020 --> 22:00.020
下面的User

22:00.020 --> 22:02.020
下面的Route

22:02.020 --> 22:03.020
对吧

22:03.020 --> 22:04.020
然后下游

22:04.020 --> 22:06.020
我们的所有的这个路由吧

22:06.020 --> 22:07.020
在这里

22:07.020 --> 22:09.020
我们需要过滤的这个路由

22:10.020 --> 22:11.020
然后再接下来

22:11.020 --> 22:12.020
我们在这里面打印一下

22:12.020 --> 22:14.020
MenuRoute

22:15.020 --> 22:16.020
可以吧

22:16.020 --> 22:17.020
我们现在来看一下

22:17.020 --> 22:18.020
会不会有问题

22:19.020 --> 22:21.020
报了一些错

22:21.020 --> 22:22.020
又是我们这个

22:22.020 --> 22:23.020
语法规范的问题

22:23.020 --> 22:25.020
那我们就直接

22:25.020 --> 22:26.020
执行一下

22:29.020 --> 22:30.020
解决一下这样的

22:30.020 --> 22:31.020
语法规范的问题

22:33.660 --> 22:34.660
OK

22:34.660 --> 22:35.660
然后我们确实解决了

22:35.660 --> 22:36.660
大家现在还有一个问题

22:36.660 --> 22:37.660
它解决不了

22:37.660 --> 22:38.660
对吧

22:38.660 --> 22:39.660
它告诉我们什么

22:39.660 --> 22:41.660
它说不允许我们

22:41.660 --> 22:42.660
这个在循环的时候

22:42.660 --> 22:44.660
去用到这个R

22:44.660 --> 22:45.660
看到了吗

22:45.660 --> 22:46.660
那我们需要怎么做

22:46.660 --> 22:47.660
这里面

22:47.660 --> 22:48.660
我们就需要

22:48.660 --> 22:49.660
做一个处理

22:49.660 --> 22:50.660
怎么处理呢

22:50.660 --> 22:51.660
我们就可以

22:51.660 --> 22:53.660
把一个R保存一下

22:53.660 --> 22:54.660
那我们在上面

22:54.660 --> 22:55.660
来一个Constant

22:56.660 --> 22:57.660
来

22:57.660 --> 22:58.660
Constant

22:58.660 --> 23:00.660
Constant一个什么呢

23:00.660 --> 23:03.660
叫Obi接吧

23:03.660 --> 23:04.660
不就叫Obi接

23:04.660 --> 23:05.660
等于一个R

23:05.660 --> 23:06.660
然后这里面

23:06.660 --> 23:07.660
我们拿到的

23:07.660 --> 23:09.660
就是这个Obi接的

23:09.660 --> 23:10.660
然后我们改变

23:10.660 --> 23:11.660
Obi接的求准

23:11.660 --> 23:12.660
是不是就改变

23:12.660 --> 23:13.660
R的求准了

23:13.660 --> 23:14.660
为什么改变

23:14.660 --> 23:15.660
Obi接的求准

23:15.660 --> 23:16.660
就是改变R的呢

23:16.660 --> 23:17.660
是不是因为

23:17.660 --> 23:19.660
这个R它是一个对象类型的

23:19.660 --> 23:20.660
它是一个引用值

23:20.660 --> 23:21.660
所以我们这里面

23:21.660 --> 23:23.660
做了一个复制的操作

23:23.660 --> 23:24.660
也就是存储了

23:24.660 --> 23:25.660
一个

23:25.660 --> 23:27.660
它的一个前引用

23:27.660 --> 23:28.660
对吧

23:28.660 --> 23:30.660
潜层克隆了一下

23:30.660 --> 23:31.660
然后呢

23:31.660 --> 23:33.660
我们把它拿过来了

23:33.660 --> 23:35.660
那它指向地址

23:35.660 --> 23:36.660
这就是R的地址

23:36.660 --> 23:37.660
对不对

23:37.660 --> 23:38.660
那这样一来

23:38.660 --> 23:39.660
是不是又改变

23:39.660 --> 23:40.660
这样的一个数据了

23:40.660 --> 23:41.660
现在我们来看

23:41.660 --> 23:42.660
刷新一下

23:45.290 --> 23:47.290
现在好像访问不到

23:47.290 --> 23:48.290
回忆后来

23:48.290 --> 23:49.290
我们来看一下

23:49.290 --> 23:50.290
怎么回事

23:50.290 --> 23:52.290
再进行并且一下

23:52.290 --> 23:54.290
这回呢

23:54.290 --> 23:55.290
这回是不是

23:55.290 --> 23:56.290
没有那个错误了

23:56.290 --> 23:57.290
对吧

23:57.290 --> 23:59.290
那我们再重新的

23:59.290 --> 24:00.290
访问一下看一下

24:00.290 --> 24:01.290
我们这里面

24:01.290 --> 24:02.290
要访问的

24:02.290 --> 24:04.290
是不是应该是index

24:04.290 --> 24:05.290
我们先访问一下

24:05.290 --> 24:06.290
index看一下

24:07.290 --> 24:08.290
来

24:08.290 --> 24:09.290
审查一下远处

24:09.290 --> 24:10.290
看一下

24:10.290 --> 24:11.290
包了个错

24:11.290 --> 24:12.290
包什么错

24:12.290 --> 24:13.290
告诉我们

24:13.290 --> 24:14.290
没有读取到MAP这个方法

24:14.290 --> 24:15.290
对不对

24:15.290 --> 24:16.290
那我们回忆后来看一下吧

24:16.290 --> 24:17.290
为什么没有读取到

24:17.290 --> 24:18.290
这个MAP方法

24:18.290 --> 24:22.290
说Vue Router保错了

24:22.290 --> 24:23.290
是吧

24:23.290 --> 24:25.290
那我们回忆后来看一下

24:25.290 --> 24:26.290
那也就是

24:26.290 --> 24:28.290
在我们的Router里面

24:28.290 --> 24:29.290
在这里

24:29.290 --> 24:31.290
在这里它保错了吗

24:31.290 --> 24:32.290
我们把它建筑室

24:32.290 --> 24:33.290
再看一下

24:33.290 --> 24:34.290
它问个问题

24:34.290 --> 24:35.290
OK

24:35.290 --> 24:36.290
可以进一下

24:36.290 --> 24:37.290
告诉我们

24:37.290 --> 24:38.290
没有用是不是

24:38.290 --> 24:39.290
我把上面这个

24:39.290 --> 24:40.290
也给它注释一下

24:40.290 --> 24:41.290
看一下

24:44.290 --> 24:45.290
来 刷新一下

24:47.290 --> 24:48.290
sync

24:48.290 --> 24:50.290
那是这个对象吗

24:51.290 --> 24:52.290
我感觉

24:52.290 --> 24:53.290
不是这个对象的问题

24:53.290 --> 24:54.290
看一下

24:54.290 --> 24:55.290
刷新一下

24:55.290 --> 24:56.290
好像就是这块的问题

24:56.290 --> 24:57.290
对不对

24:57.290 --> 24:58.290
我们再给它

24:58.290 --> 24:59.290
回忆后来

24:59.290 --> 25:00.290
我们看一下

25:00.290 --> 25:01.290
是不是哪里写的有问题

25:02.290 --> 25:03.290
都有component

25:03.290 --> 25:04.290
对不对

25:05.290 --> 25:06.290
那接下来

25:06.290 --> 25:07.290
我们再往下

25:07.290 --> 25:08.290
看我现在已经

25:08.290 --> 25:10.290
把这两个都拿过来了

25:10.290 --> 25:11.290
接下来

25:11.290 --> 25:13.290
我们直接一下

25:13.290 --> 25:14.290
这个函数

25:15.290 --> 25:16.290
拿过来

25:16.290 --> 25:19.290
我们的sync

25:19.290 --> 25:21.290
Router MAP

25:21.290 --> 25:22.290
对吧

25:22.290 --> 25:23.290
我们再往下

25:23.290 --> 25:24.290
再往下来

25:24.290 --> 25:25.290
看一行一行的

25:25.290 --> 25:26.290
去瞅一下

25:26.290 --> 25:27.290
看一下

25:28.290 --> 25:29.290
好像没有什么问题

25:29.290 --> 25:30.290
对不对

25:30.290 --> 25:32.290
看一下报的什么错误

25:32.290 --> 25:33.290
说

25:34.290 --> 25:35.290
先解决一下

25:35.290 --> 25:37.290
这个预法规范的一个问题

25:38.290 --> 25:40.290
我们先把这个预法规范

25:40.290 --> 25:42.290
问题先解决

25:42.290 --> 25:46.580
好

25:46.580 --> 25:47.580
现在报的错

25:47.580 --> 25:48.580
告诉我们

25:49.580 --> 25:50.580
迈牛如此

25:52.580 --> 25:53.580
没有 被用

25:53.580 --> 25:54.580
定义了

25:54.580 --> 25:55.580
诶

25:55.580 --> 25:56.580
是一个

25:56.580 --> 25:57.580
是这里

25:57.580 --> 25:58.580
没有用

25:58.580 --> 25:59.580
定义了

26:00.580 --> 26:03.020
这回呢

26:03.020 --> 26:05.020
这回应该没有问题了吧

26:05.020 --> 26:06.020
然后我们再来看

26:06.020 --> 26:07.020
来

26:07.020 --> 26:08.020
重新刷新一下

26:09.020 --> 26:10.020
诶

26:10.020 --> 26:11.020
报了个错

26:11.020 --> 26:12.020
又告诉我们

26:13.020 --> 26:14.020
诶

26:14.020 --> 26:15.020
是这里吧

26:15.020 --> 26:16.020
看到了吗

26:16.020 --> 26:17.020
哪里错了

26:17.020 --> 26:18.020
是这里错了

26:18.020 --> 26:19.020
对不对

26:19.020 --> 26:20.020
那我们来看一下吧

26:20.020 --> 26:21.020
这里为什么会错啊

26:21.020 --> 26:22.020
说没有map这个方法

26:22.020 --> 26:23.020
那也就是说

26:23.020 --> 26:25.020
它拿过来的

26:25.020 --> 26:26.020
它不是一个输组

26:26.020 --> 26:27.020
对不对

26:27.020 --> 26:28.020
那我们打印一下

26:28.020 --> 26:29.020
看一下就知道了

26:29.020 --> 26:31.020
Role

26:32.020 --> 26:34.020
以及我们的route

26:34.020 --> 26:35.020
我们来看一下

26:35.020 --> 26:37.020
我们的Role

26:37.020 --> 26:39.400
它到底是什么

26:39.400 --> 26:40.400
拿到的

26:40.400 --> 26:42.400
我是不是拼错了

26:43.400 --> 26:47.160
我直接把这个复制过来了

26:47.160 --> 26:49.160
我上面这块拼错了

26:52.050 --> 26:53.050
来

26:53.050 --> 26:54.050
格式化一下

26:54.050 --> 26:58.410
Customer

26:58.410 --> 26:59.410
对吧

26:59.410 --> 27:00.410
Customer

27:00.410 --> 27:01.410
这回呢

27:01.410 --> 27:03.980
刷新一下

27:03.980 --> 27:04.980
这回是不是可以了

27:04.980 --> 27:05.980
然后接下来

27:05.980 --> 27:06.980
把我们的

27:06.980 --> 27:07.980
这个愚法规范的问题

27:07.980 --> 27:08.980
解决一下

27:09.980 --> 27:11.980
现在没有问题了啊

27:11.980 --> 27:12.980
控制台没有报错了

27:12.980 --> 27:13.980
OK

27:13.980 --> 27:14.980
现在是不是就可以了

27:14.980 --> 27:15.980
对吧

27:15.980 --> 27:16.980
现在OK了

27:16.980 --> 27:17.980
然后接下来

27:17.980 --> 27:18.980
我是不是就需要

27:18.980 --> 27:19.980
动态渲染我们的

27:19.980 --> 27:20.980
这个

27:20.980 --> 27:21.980
这个

27:21.980 --> 27:22.980
菜单牢

27:22.980 --> 27:23.980
那这个菜单牢

27:23.980 --> 27:24.980
既然要动态渲染

27:24.980 --> 27:25.980
那我们需要

27:25.980 --> 27:26.980
给它存储在哪呢

27:26.980 --> 27:27.980
是不是我们

27:27.980 --> 27:28.980
又可以存储

27:28.980 --> 27:29.980
到我们的

27:29.980 --> 27:31.980
这个State下面

27:31.980 --> 27:32.980
对吧

27:32.980 --> 27:33.980
那我们就需要

27:33.980 --> 27:34.980
把它存储到

27:34.980 --> 27:35.980
我们State下面

27:35.980 --> 27:36.980
那我们在存储之前

27:36.980 --> 27:37.980
我是不是需要

27:37.980 --> 27:38.980
把我们这个路由

27:38.980 --> 27:39.980
添加到

27:39.980 --> 27:40.980
我们的路由当中

27:40.980 --> 27:41.980
那所以这里面

27:41.980 --> 27:42.980
我们就需要

27:42.980 --> 27:43.980
直进一下

27:43.980 --> 27:45.980
Router.IdeRoute

27:45.980 --> 27:47.980
把我们的这个路由

27:47.980 --> 27:48.980
添加进去

27:49.980 --> 27:50.980
这个我们再来看一下

27:50.980 --> 27:51.980
刷新一下

27:53.980 --> 27:54.980
已经加进去了

27:54.980 --> 27:55.980
对吧

27:55.980 --> 27:56.980
然后你看一下

27:56.980 --> 27:57.980
当我去访问

27:57.980 --> 27:58.980
其他的路由

27:58.980 --> 27:59.980
路由勾字的时候

27:59.980 --> 28:00.980
我们看一下

28:00.980 --> 28:01.980
是不是也可以

28:01.980 --> 28:02.980
但是你会发现

28:02.980 --> 28:03.980
现在又有个问题

28:03.980 --> 28:04.980
告诉我们重复的

28:04.980 --> 28:05.980
路由名字

28:06.980 --> 28:08.980
这个不断的往里去添加

28:08.980 --> 28:09.980
对吧

28:09.980 --> 28:10.980
那这怎么回事

28:10.980 --> 28:11.980
而且最后

28:11.980 --> 28:12.980
它又报了一个错

28:12.980 --> 28:13.980
告诉我们这个

28:13.980 --> 28:14.980
战役出的一个错误

28:14.980 --> 28:15.980
对吧

28:15.980 --> 28:16.980
这是怎么回事

28:16.980 --> 28:17.980
是不是这就涉及到

28:17.980 --> 28:18.980
我们这个路由

28:18.980 --> 28:20.980
这个导航

28:20.980 --> 28:21.980
路由勾字

28:21.980 --> 28:22.980
这个函数了

28:22.980 --> 28:23.980
对吧

28:24.980 --> 28:26.980
这涉及到我们这个

28:29.860 --> 28:30.860
对吧

28:30.860 --> 28:31.860
这个路由导航

28:31.860 --> 28:32.860
这里是不是代表的是

28:32.860 --> 28:34.860
每一次在

28:34.860 --> 28:35.860
路由跳转的时候

28:35.860 --> 28:37.860
它都会直行这个函数

28:37.860 --> 28:38.860
那也就是说

28:38.860 --> 28:39.860
每一次我们都

28:39.860 --> 28:40.860
往我们的Router里面

28:40.860 --> 28:41.860
去添加了吧

28:41.860 --> 28:42.860
但是我们不想让它

28:42.860 --> 28:43.860
每一次都添加吧

28:43.860 --> 28:44.860
那怎么办

28:44.860 --> 28:46.860
那这里面怎么办呢

28:46.860 --> 28:47.860
我们是不是

28:47.860 --> 28:48.860
就可以这样

28:48.860 --> 28:50.860
我只让它添加一次

28:50.860 --> 28:51.860
就好了

28:51.860 --> 28:52.860
对吧

28:52.860 --> 28:53.860
整个这个

28:53.860 --> 28:55.860
全线我只让它添加一次

28:55.860 --> 28:57.860
那怎么让它添加一次呢

28:57.860 --> 28:58.860
我这里

28:58.860 --> 28:59.860
是不是就可以在外面

28:59.860 --> 29:00.860
先写一个标志

29:00.860 --> 29:01.860
对吧

29:01.860 --> 29:02.860
我拉一个

29:02.860 --> 29:03.860
拉起一个

29:03.860 --> 29:04.860
A字

29:04.860 --> 29:06.860
是否已经添加过

29:06.860 --> 29:07.860
对吧

29:07.860 --> 29:08.860
A字

29:08.860 --> 29:09.860
A的如此

29:09.860 --> 29:11.860
是否已经添加过

29:11.860 --> 29:13.860
这样的一个路由

29:13.860 --> 29:15.860
那最开始

29:15.860 --> 29:16.860
我们谈为False

29:16.860 --> 29:17.860
代表是没添加过

29:17.860 --> 29:19.860
那当它没有添加过的时候

29:19.860 --> 29:20.860
我再给它添加

29:20.860 --> 29:21.860
是不是就可以

29:21.860 --> 29:22.860
对吧

29:22.860 --> 29:23.860
我们判断一下A字

29:23.860 --> 29:24.860
A的如此

29:24.860 --> 29:25.860
它是不是

29:25.860 --> 29:27.860
它是不是False吧

29:27.860 --> 29:28.860
它如果是False的话

29:28.860 --> 29:29.860
代表没有添加过

29:29.860 --> 29:30.860
没有添加过的话

29:30.860 --> 29:31.860
我们就给它

29:31.860 --> 29:32.860
往里添加

29:32.860 --> 29:33.860
对吧

29:33.860 --> 29:34.860
是不是这样

29:34.860 --> 29:36.860
然后接下来呢

29:36.860 --> 29:37.860
往里添加之后呢

29:37.860 --> 29:39.860
是不是我还需要

29:39.860 --> 29:40.860
把我们的菜单

29:40.860 --> 29:42.860
把我们的路由

29:42.860 --> 29:43.860
菜单的这个路由

29:43.860 --> 29:46.860
添加到我们的

29:46.860 --> 29:47.860
这个

29:49.860 --> 29:50.860
Starl里面去

29:50.860 --> 29:51.860
对吧

29:51.860 --> 29:52.860
那我就需要在Starl里面

29:52.860 --> 29:54.860
去来一个

29:54.860 --> 29:55.860
变量存储一下

29:55.860 --> 29:57.860
呈储

29:57.860 --> 30:01.860
菜单的路由

30:01.860 --> 30:03.860
我们管它叫什么呢

30:03.860 --> 30:05.860
叫Manual Roots吧

30:06.860 --> 30:07.860
对吧

30:07.860 --> 30:08.860
来一个空的

30:08.860 --> 30:09.860
那我们这里面

30:09.860 --> 30:11.860
就需要再来一个

30:11.860 --> 30:12.860
方法

30:12.860 --> 30:14.860
来设置

30:14.860 --> 30:15.860
SetManual

30:15.860 --> 30:16.860
或者Change

30:16.860 --> 30:19.860
Manual Roots

30:20.860 --> 30:21.860
可以吧

30:21.860 --> 30:22.860
我们拿过来

30:22.860 --> 30:23.860
这个数据

30:23.860 --> 30:25.860
以及Roots

30:26.860 --> 30:27.860
我们改变

30:27.860 --> 30:30.860
这个StateState

30:32.860 --> 30:33.860
Manual Roots

30:33.860 --> 30:34.860
等于Roots

30:34.860 --> 30:38.710
对不对

30:38.710 --> 30:39.710
然后在我们的

30:39.710 --> 30:40.710
Actions里面

30:40.710 --> 30:44.660
我们也写一下

30:44.660 --> 30:45.660
好

30:45.660 --> 30:47.660
然后这里

30:47.660 --> 30:48.660
我们不能直接的

30:48.660 --> 30:49.660
去改变它

30:49.660 --> 30:50.660
对不对

30:50.660 --> 30:51.660
我们还是调一下

30:51.660 --> 30:52.660
Commit这个方法

30:54.660 --> 31:10.580
把这个ChangeManual

31:10.580 --> 31:12.580
Roots

31:12.580 --> 31:13.580
传进去

31:13.580 --> 31:15.580
RTS

31:15.580 --> 31:19.620
改变吗

31:19.620 --> 31:20.620
对不对

31:20.620 --> 31:21.620
然后接下来

31:21.620 --> 31:22.620
在这里面

31:22.620 --> 31:23.620
我们就可以改了吧

31:23.620 --> 31:24.620
怎么去改

31:24.620 --> 31:26.620
是不是就直接往

31:26.620 --> 31:27.620
直接通过

31:27.620 --> 31:30.620
Starl.Dispatch

31:31.620 --> 31:34.620
PATCH

31:34.620 --> 31:36.620
去添加

31:36.620 --> 31:37.620
对吧

31:37.620 --> 31:38.620
然后把这个方法

31:38.620 --> 31:39.620
拿过来

31:39.620 --> 31:40.620
叫ChangeManual

31:40.620 --> 31:43.620
ChangeManual

31:43.620 --> 31:44.620
Roots

31:44.620 --> 31:45.620
对吧

31:45.620 --> 31:46.620
然后把我们的

31:46.620 --> 31:47.620
Roots传进去

31:47.620 --> 31:48.620
那我们传递的

31:48.620 --> 31:49.620
应该是什么

31:49.620 --> 31:50.620
我们会发现

31:50.620 --> 31:51.620
这里面展示的

31:51.620 --> 31:52.620
是不是还有个

31:52.620 --> 31:53.620
首页

31:53.620 --> 31:54.620
对不对

31:54.620 --> 31:55.620
这个首页

31:55.620 --> 31:56.620
是不是一直在我们

31:56.620 --> 31:58.620
Root下面

31:58.620 --> 31:59.620
对不对

31:59.620 --> 32:00.620
我是不是就需要

32:00.620 --> 32:02.620
把这两部分的路由

32:02.620 --> 32:03.620
进行一个拼接

32:03.620 --> 32:04.620
对不对

32:04.620 --> 32:05.620
那我们就直接

32:05.620 --> 32:06.620
来一个

32:06.620 --> 32:09.620
Roots.Commit

32:10.620 --> 32:12.620
Manual.Roots

32:13.620 --> 32:14.620
对不对

32:14.620 --> 32:15.620
这回不就好了吗

32:15.620 --> 32:16.620
那现在我们就

32:16.620 --> 32:17.620
已经添加进去了

32:17.620 --> 32:18.620
接下来

32:18.620 --> 32:19.620
在我们的

32:19.620 --> 32:20.620
Manual这里

32:20.620 --> 32:21.620
我们就需要

32:21.620 --> 32:22.620
动态的去渲染

32:22.620 --> 32:23.620
我们的这个

32:23.620 --> 32:24.620
菜单来了吧

32:24.620 --> 32:26.620
那怎么动态去渲染

32:26.620 --> 32:27.620
是不是这里面

32:27.620 --> 32:28.620
就需要用到

32:29.620 --> 32:30.620
下面这个

32:30.620 --> 32:34.540
需要用到

32:34.540 --> 32:35.540
这个组件了

32:35.540 --> 32:36.540
我们循环电力吧

32:36.540 --> 32:37.540
对不对

32:37.540 --> 32:38.540
电力一下

32:38.540 --> 32:39.540
V-4一下

32:40.540 --> 32:41.540
它等于什么

32:41.540 --> 32:42.540
是不是应该在

32:42.540 --> 32:43.540
我们的

32:43.540 --> 32:44.540
Star里面的

32:44.540 --> 32:45.540
Date下面的

32:45.540 --> 32:48.540
这个Manual.Roots

32:49.540 --> 32:50.540
Roots

32:50.540 --> 32:51.540
对吧

32:51.540 --> 32:52.540
循环它

32:52.540 --> 32:53.540
然后我们的Key

32:53.540 --> 32:54.540
也给它设置一下

32:54.540 --> 32:55.540
这个Key

32:55.540 --> 32:56.540
我们就设置

32:56.540 --> 32:57.540
为当前的

32:57.540 --> 32:58.540
这里面

32:58.540 --> 32:59.540
我们应该

32:59.540 --> 33:00.540
结束一下

33:01.540 --> 33:02.540
当前的

33:02.540 --> 33:03.540
这个路由的名字了

33:03.540 --> 33:04.540
可以吧

33:04.540 --> 33:05.540
叫Roots.Name

33:06.540 --> 33:07.540
OK吧

33:07.540 --> 33:09.540
当前这个路由名字

33:09.540 --> 33:10.540
那这应该是

33:10.540 --> 33:11.540
一级路由

33:11.540 --> 33:12.540
对不对

33:12.540 --> 33:13.540
也就是这里

33:13.540 --> 33:14.540
手艺和商品

33:14.540 --> 33:15.540
这里

33:15.540 --> 33:16.540
那我们接下来

33:16.540 --> 33:17.540
二级路由

33:17.540 --> 33:18.540
看啊

33:18.540 --> 33:19.540
二级路由之前

33:19.540 --> 33:20.540
我们需要把

33:20.540 --> 33:21.540
这个一级路由的名字

33:21.540 --> 33:22.540
先写进去

33:22.540 --> 33:23.540
那这个名字

33:23.540 --> 33:24.540
就是我们当前的

33:24.540 --> 33:26.540
叫Roots.Name

33:26.540 --> 33:28.540
应该是Meta下面的

33:28.540 --> 33:29.540
就在Meta下面的

33:29.540 --> 33:30.540
Title吧

33:31.540 --> 33:32.540
就在

33:32.540 --> 33:33.540
然后再接下来

33:33.540 --> 33:34.540
紫路由

33:34.540 --> 33:35.540
它下面的紫路由

33:35.540 --> 33:36.540
那紫路由

33:36.540 --> 33:37.540
是不是也需要

33:37.540 --> 33:38.540
辨历一下

33:39.540 --> 33:40.540
那应该是

33:40.540 --> 33:41.540
Chilled

33:41.540 --> 33:42.540
Chilled in

33:42.540 --> 33:43.540
Roots

33:43.540 --> 33:45.540
ROU71.Chilled

33:47.540 --> 33:48.540
对吧

33:48.540 --> 33:49.540
然后Key

33:49.540 --> 33:50.540
写一下

33:50.540 --> 33:51.540
Key也是

33:51.540 --> 33:52.540
Chilled.Name

33:54.540 --> 33:56.540
它的名字

33:56.540 --> 33:57.540
是不是应该是

33:57.540 --> 33:58.540
Chilled的

33:58.540 --> 33:59.540
下面的Meta

33:59.540 --> 34:00.540
下面的Name

34:01.540 --> 34:02.540
应该是Title

34:02.540 --> 34:03.540
我们那时候

34:03.540 --> 34:04.540
刚刚起的

34:04.540 --> 34:05.540
是Title

34:05.540 --> 34:06.540
像我们这样子的

34:06.540 --> 34:07.540
对吧

34:07.540 --> 34:08.540
现在是不是可以了

34:08.540 --> 34:09.540
那我们现在来看一下

34:09.540 --> 34:10.540
我们的这个效果

34:10.540 --> 34:11.540
刷新一下

34:12.540 --> 34:13.540
现在

34:13.540 --> 34:14.540
又告诉我们

34:14.540 --> 34:16.540
这个As Add Roots

34:17.540 --> 34:18.540
没有用

34:18.540 --> 34:19.540
没有用到

34:19.540 --> 34:20.540
是不是

34:20.540 --> 34:21.540
回过来看一下

34:21.540 --> 34:22.540
为什么没有用到

34:22.540 --> 34:23.540
那在我们的

34:23.540 --> 34:24.540
这里

34:24.540 --> 34:25.540
这里

34:26.540 --> 34:27.540
Rooter

34:27.540 --> 34:28.540
Rooter里面

34:28.540 --> 34:29.540
没有用到吗

34:29.540 --> 34:30.540
这里面是不是用到了

34:30.540 --> 34:31.540
对吧

34:31.540 --> 34:32.540
那用到了之后

34:32.540 --> 34:34.540
是不是需要给它修改一下

34:34.540 --> 34:40.300
对吧

34:40.300 --> 34:41.300
同于一个

34:41.300 --> 34:42.300
Chilled

34:42.300 --> 34:44.300
T2U71

34:44.300 --> 34:45.300
对吧

34:45.300 --> 34:46.300
这回看一下

34:46.300 --> 34:47.300
现在好像又是

34:47.300 --> 34:48.300
预法规范的问题了

34:48.300 --> 34:49.300
我们去

34:50.300 --> 34:51.300
执行一下NPM

34:52.300 --> 34:53.300
RanLint

34:53.300 --> 34:55.300
让它解决一下

34:55.300 --> 34:59.020
这样的一个问题

34:59.020 --> 35:01.020
现在又报了一个错

35:01.020 --> 35:02.020
告诉我们

35:02.020 --> 35:03.020
太长了

35:03.020 --> 35:04.020
这一行的

35:04.020 --> 35:05.020
这个

35:05.020 --> 35:06.020
字符不太长了

35:06.020 --> 35:07.020
我们去找到它

35:07.020 --> 35:08.020
然后把它

35:08.020 --> 35:09.020
换个行就可以了

35:09.020 --> 35:14.380
这回就好了吧

35:14.380 --> 35:15.380
我们再看

35:15.380 --> 35:17.380
还有哪一个部分

35:17.380 --> 35:19.890
看一下

35:19.890 --> 35:20.890
还有个Rooter

35:20.890 --> 35:21.890
用完了

35:21.890 --> 35:23.890
好像从来没有

35:23.890 --> 35:24.890
这个

35:24.890 --> 35:25.890
声明的没有用

35:25.890 --> 35:26.890
对吧

35:26.890 --> 35:27.890
那我们现在给它删掉

35:27.890 --> 35:28.890
接下来

35:28.890 --> 35:29.890
其他地方呢

35:30.890 --> 35:31.890
没有别的了吧

35:31.890 --> 35:32.890
再接下来

35:32.890 --> 35:33.890
来

35:33.890 --> 35:34.890
执行NPMRanLint

35:35.890 --> 35:36.890
又报了个错

35:36.890 --> 35:37.890
这应该是

35:37.890 --> 35:38.890
三个错误

35:38.890 --> 35:39.890
一个一个看

35:39.890 --> 35:40.890
这里面

35:40.890 --> 35:41.890
告诉我们

35:41.890 --> 35:42.890
这什么时候引入的

35:42.890 --> 35:44.890
应该是自动引入的

35:44.890 --> 35:45.890
电机器自动引入

35:45.890 --> 35:46.890
我们不用管它

35:46.890 --> 35:48.890
好像还有一个吧

35:48.890 --> 35:49.890
A字

35:51.890 --> 35:53.890
再往下看一下

35:53.890 --> 35:58.160
再来看一下吧

35:58.160 --> 35:59.160
好了

35:59.160 --> 36:02.690
现在可以了

36:02.690 --> 36:03.690
对不对

36:03.690 --> 36:04.690
现在我们刷新一下

36:04.690 --> 36:05.690
现在也会发现

36:05.690 --> 36:06.690
我们访问

36:06.690 --> 36:07.690
这个路由不好使

36:07.690 --> 36:08.690
为什么不好使

36:08.690 --> 36:09.690
一会我们再来说

36:09.690 --> 36:10.690
先看一下

36:10.690 --> 36:12.690
以进到一面的这个路由

36:12.690 --> 36:13.690
会发现

36:13.690 --> 36:14.690
现在没有问题

36:14.690 --> 36:15.690
但是呢

36:15.690 --> 36:16.690
现在告诉我们

36:16.690 --> 36:17.690
抬头没有定义

36:17.690 --> 36:18.690
那也就是说

36:18.690 --> 36:20.690
有一些属性

36:20.690 --> 36:21.690
我没有给它设置抬头

36:21.690 --> 36:22.690
对不对

36:22.690 --> 36:23.690
我一会来看一下

36:23.690 --> 36:24.690
那也就是说

36:24.690 --> 36:25.690
路由配置这里面有问题

36:25.690 --> 36:26.690
路由配置里面

36:26.690 --> 36:28.690
说每一个路由

36:28.690 --> 36:30.690
它都有这个抬头

36:30.690 --> 36:31.690
我们会发现

36:31.690 --> 36:32.690
这个没有

36:32.690 --> 36:33.690
对不对

36:33.690 --> 36:34.690
那我们给它加进去

36:34.690 --> 36:35.690
这个没有

36:35.690 --> 36:36.690
看一下

36:36.690 --> 36:37.690
我们手印下面对应的

36:37.690 --> 36:38.690
应该还有一个

36:38.690 --> 36:39.690
统计就该

36:39.690 --> 36:40.690
这个统计

36:40.690 --> 36:41.690
我没有给它写

36:41.690 --> 36:42.690
统计

36:42.690 --> 36:43.690
然后再接下来

36:43.690 --> 36:44.690
灯路这里面

36:44.690 --> 36:46.690
我们也给它写一个吧

36:46.690 --> 36:47.690
抬头

36:47.690 --> 36:48.690
叫

36:48.690 --> 36:49.690
这个

36:49.690 --> 36:50.690
叫什么

36:50.690 --> 36:51.690
叫

36:52.690 --> 36:54.690
它是灯路

36:54.690 --> 36:56.690
最后我们来看一下

36:56.690 --> 36:57.690
刷新一下

36:57.690 --> 36:58.690
现在又出现

36:58.690 --> 37:00.690
预发规范的问题了

37:02.690 --> 37:04.690
解决一下呗

37:04.690 --> 37:08.020
好了

37:08.020 --> 37:09.020
这回可以了

37:09.020 --> 37:10.020
现在这边没有问题

37:10.020 --> 37:11.020
但也会发现

37:11.020 --> 37:12.020
灯路

37:12.020 --> 37:13.020
它要给我们一个灯行

37:13.020 --> 37:14.020
但我们不想要

37:14.020 --> 37:15.020
灯路这个灯行

37:15.020 --> 37:16.020
怎么办呢

37:16.020 --> 37:18.020
这里怎么解决呢

37:19.020 --> 37:21.020
大家可以思考一下

37:21.020 --> 37:22.020
然后下

37:23.020 --> 37:24.020
思考一下

37:24.020 --> 37:25.020
休息一下

37:25.020 --> 37:26.020
我们下小节

37:26.020 --> 37:27.020
下来继续

37:27.020 --> 37:28.020
好吧

