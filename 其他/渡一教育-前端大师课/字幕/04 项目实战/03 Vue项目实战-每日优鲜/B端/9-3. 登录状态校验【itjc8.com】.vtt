WEBVTT

00:04.980 --> 00:08.180
那用户是不是需要以进到一面的话

00:08.180 --> 00:11.180
我们就需要判断一下它到底是否有登录

00:11.180 --> 00:13.380
那怎么判断它是否有登录呢

00:13.380 --> 00:18.380
是不是就判断它到底有没有拿过来它的一个APP

00:18.380 --> 00:20.580
以及它的一些用户的信息

00:20.580 --> 00:21.280
对不对

00:21.280 --> 00:23.380
它有没有拿过来这些数据吧

00:23.380 --> 00:24.880
那如果没有的话

00:24.880 --> 00:26.580
是不是代表它没有登录

00:26.580 --> 00:27.480
没有登录的话

00:27.480 --> 00:30.780
我是不是就需要让它跳转到登录的一个界面

00:30.780 --> 00:32.080
那大家思考一下

00:32.080 --> 00:35.580
这个效果我们需要怎么去实现

00:35.580 --> 00:38.280
相信大家回去之后有思考

00:38.280 --> 00:41.180
那这个效果在这里面

00:41.180 --> 00:46.580
我们是不是又可以做一个路由的一个拦截

00:46.580 --> 00:48.180
对不对

00:48.180 --> 00:51.380
在路由跳转之前我们进行一个拦截

00:51.380 --> 00:53.680
当用户进到这个页面的时候

00:53.680 --> 00:55.580
我们就去判断一下

00:55.580 --> 00:58.580
那这个页面又除了登录的一个界面呗

00:58.580 --> 00:59.080
对不对

00:59.080 --> 01:02.580
那我们怎么去添加这个路由拦截呢

01:02.580 --> 01:04.580
那在我们写代码之前

01:04.580 --> 01:12.430
我还是把上一堂课的代码先提交一下

01:12.430 --> 01:15.540
先提交一下

01:15.540 --> 01:17.940
这是上一堂课实践的

01:17.940 --> 01:23.540
好像是登录信息共享

01:23.540 --> 01:25.740
对吧

01:25.740 --> 01:28.480
数据共享

01:28.480 --> 01:28.980
OK

01:28.980 --> 01:33.290
然后把我们代码都提一下

01:33.290 --> 01:34.290
扶持一下

01:34.290 --> 01:38.100
一起扶持一下

01:39.100 --> 01:44.860
然后再开一个新的分支

01:44.860 --> 01:46.360
写这堂课的代码

01:46.360 --> 01:50.720
OK

01:50.720 --> 01:52.220
Check out

01:52.220 --> 01:53.220
港币

01:53.220 --> 01:55.790
Blogging

01:55.790 --> 01:57.790
港三

01:57.790 --> 01:59.290
好

01:59.290 --> 02:02.290
那我们这里面是不是就需要写路由拦截了

02:02.290 --> 02:04.790
路由拦截是不是需要写在路由当中啊

02:04.790 --> 02:07.790
所以这里面在路由的这个文件下面

02:07.790 --> 02:11.790
我们去写一个路由的这个导航钩子

02:12.790 --> 02:14.790
来调用它的一个

02:14.790 --> 02:16.790
Favor each

02:16.790 --> 02:18.790
在我们每一次跳转路由之前

02:18.790 --> 02:22.790
我们使用的这个毁掉函数

02:22.790 --> 02:23.790
对不对

02:23.790 --> 02:25.790
那在这里面

02:25.790 --> 02:28.790
传递一个

02:28.790 --> 02:30.790
function吧

02:30.790 --> 02:31.790
对不对

02:31.790 --> 02:34.790
这个function里面有to,from

02:34.790 --> 02:36.790
还有一个next

02:36.790 --> 02:37.790
对吧

02:37.790 --> 02:39.790
那这三个panel代表什么意思

02:39.790 --> 02:41.790
代表的是从哪个页面

02:41.790 --> 02:44.790
从哪个路径过来的from

02:44.790 --> 02:46.790
是不是应该代表的是

02:46.790 --> 02:49.790
它是从哪个路径到来过来的

02:49.790 --> 02:51.790
to应该是到哪个路径

02:51.790 --> 02:54.790
就是你要到哪个路由上去

02:54.790 --> 02:55.790
对不对

02:55.790 --> 02:56.790
next呢

02:56.790 --> 02:59.790
next是不是应该是我们继续往后去执行

02:59.790 --> 03:00.790
对吧

03:00.790 --> 03:01.790
它是一个毁掉函数

03:01.790 --> 03:03.790
那我们这里面要判断的是什么

03:03.790 --> 03:06.790
是不是就需要判断我们到底从

03:06.790 --> 03:08.790
这个我们到的

03:08.790 --> 03:11.790
我们要去的页面是哪个页面

03:11.790 --> 03:13.790
那也就是说它如果

03:13.790 --> 03:15.790
诶,判断一下

03:15.790 --> 03:18.790
如果我们要到的这个路径

03:18.790 --> 03:24.790
它不是登陆的页面的话

03:24.790 --> 03:26.790
如果它要去的这个路径

03:26.790 --> 03:28.790
不是一个登陆界面的话

03:28.790 --> 03:30.790
我们是不是就需要判断它

03:30.790 --> 03:32.790
是否是登陆的一个状态

03:32.790 --> 03:33.790
对吧

03:33.790 --> 03:35.790
怎么判断是否是登陆的状态

03:35.790 --> 03:37.790
我们应该在我们的sdow里面

03:37.790 --> 03:39.790
State下面有user

03:39.790 --> 03:42.790
用户的信息里面是否有这些信息

03:42.790 --> 03:43.790
对吧

03:43.790 --> 03:45.790
那我是不是就需要拿到这些信息

03:45.790 --> 03:46.790
那我们怎么去拿取

03:46.790 --> 03:48.790
这里面是不是就需要用到

03:48.790 --> 03:50.790
我们的这个sdow的所有数据了

03:50.790 --> 03:52.790
那我这里是不是就需要

03:52.790 --> 03:57.100
引入一下我们的sdow

03:57.100 --> 03:58.100
ok

03:58.100 --> 03:59.100
ture

03:59.100 --> 04:00.100
可以吧

04:00.100 --> 04:01.100
from

04:01.100 --> 04:03.100
从我们

04:03.100 --> 04:05.100
刚刚的这个sdow

04:05.100 --> 04:07.100
index.js

04:07.100 --> 04:08.100
index.js

04:08.100 --> 04:09.100
你可以不用去写

04:09.100 --> 04:10.100
对吧

04:10.100 --> 04:11.100
它默认的就是

04:11.100 --> 04:13.100
它下面的index.js

04:13.100 --> 04:14.100
ok

04:14.100 --> 04:15.100
那我们这里面

04:15.100 --> 04:16.100
查找的

04:16.100 --> 04:18.100
是不是还需要判断一下

04:18.100 --> 04:20.100
它的用户数据有没有

04:20.100 --> 04:21.100
对吧

04:21.100 --> 04:22.100
那就在sdow里面的

04:22.100 --> 04:23.100
basis下面吧

04:23.100 --> 04:24.100
sdat

04:24.100 --> 04:25.100
嗯

04:25.100 --> 04:27.100
它下面的user

04:27.100 --> 04:28.100
对吧

04:28.100 --> 04:30.100
user里面是否还有avvkey

04:30.100 --> 04:31.100
呗

04:31.100 --> 04:32.100
并且

04:32.100 --> 04:33.100
它是不是还需要

04:33.100 --> 04:34.100
判断

04:34.100 --> 04:35.100
是否

04:35.100 --> 04:36.100
还有这个

04:37.100 --> 04:38.100
用户名

04:38.100 --> 04:39.100
对吧

04:39.100 --> 04:40.100
嗯

04:40.100 --> 04:41.100
那这些啊

04:41.100 --> 04:42.100
那我们都给它

04:42.100 --> 04:43.100
做一个判断吧

04:43.100 --> 04:45.100
dow.date

04:45.100 --> 04:46.100
点user

04:46.100 --> 04:48.100
点user name

04:48.100 --> 04:50.100
再接着判断

04:50.100 --> 04:52.100
dow.date

04:52.100 --> 04:54.100
点user

04:54.100 --> 04:55.100
点rew

04:55.100 --> 04:56.100
嗯

04:56.100 --> 04:58.100
有这三个其实就差不多了

04:58.100 --> 04:59.100
对吧

04:59.100 --> 05:00.100
ok

05:00.100 --> 05:01.100
如果有的话

05:01.100 --> 05:02.100
我们就继续

05:02.100 --> 05:03.100
对吧

05:03.100 --> 05:04.100
那如果没有呢

05:04.100 --> 05:05.100
其中一个没有

05:05.100 --> 05:07.100
是不是都不能让它继续

05:07.100 --> 05:08.100
那不能让它继续

05:08.100 --> 05:09.100
应该在做什么

05:09.100 --> 05:10.100
是不是就需要

05:10.100 --> 05:13.100
我们跳转到登录的一个界面

05:13.100 --> 05:14.100
跳转到登录的界面

05:14.100 --> 05:16.100
我是不是就需要这么去写啊

05:16.100 --> 05:17.100
对吧

05:17.100 --> 05:18.100
到哪儿

05:18.100 --> 05:19.100
到老宾吧

05:20.100 --> 05:21.100
对不对

05:21.100 --> 05:22.100
最后我们来看一下

05:22.100 --> 05:23.100
啊

05:23.100 --> 05:24.100
我们的一个效果

05:24.100 --> 05:25.100
诶

05:25.100 --> 05:27.100
现在报了个错啊

05:27.100 --> 05:28.100
嗯

05:28.100 --> 05:29.100
我们先去修复一下

05:29.100 --> 05:30.100
这个问题啊

05:30.100 --> 05:33.420
还是执行npm write-in

05:33.420 --> 05:34.420
我们就看一下

05:36.420 --> 05:37.420
好

05:37.420 --> 05:38.420
现在已经执行完了

05:38.420 --> 05:39.420
现在刷新一下

05:39.420 --> 05:40.420
诶

05:40.420 --> 05:41.420
刷新一下

05:43.420 --> 05:44.420
诶

05:44.420 --> 05:45.420
现在好像没有跳转

05:45.420 --> 05:46.420
对吧

05:46.420 --> 05:47.420
大家你会发现它也没有进入

05:47.420 --> 05:48.420
啊

05:48.420 --> 05:49.420
这是怎么回事

05:49.420 --> 05:50.420
回头来看一下呗

05:50.420 --> 05:51.420
诶

05:51.420 --> 05:53.420
我们是不是没有继续的

05:53.420 --> 05:54.420
进行这个

05:54.420 --> 05:56.420
向下的执行

05:56.420 --> 05:57.420
对吧

05:57.420 --> 05:58.420
那这里面我们可以怎么做

05:58.420 --> 06:00.420
是不是直接来个回趁的

06:00.420 --> 06:01.420
而一提

06:01.420 --> 06:02.420
而返回一下

06:02.420 --> 06:05.420
就不让它继续往下了啊

06:05.420 --> 06:06.420
回趁

06:08.420 --> 06:09.420
那如果不是呢

06:09.420 --> 06:11.420
如果它是

06:11.420 --> 06:12.420
如果它是

06:12.420 --> 06:13.420
这个路径

06:13.420 --> 06:14.420
是捞并呢

06:14.420 --> 06:16.420
那我是不就直接让它

06:16.420 --> 06:17.420
向下的去执行

06:17.420 --> 06:18.420
就可以了

06:18.420 --> 06:19.420
npm write-in

06:19.420 --> 06:20.420
对吧

06:20.420 --> 06:21.420
最后我们来看一下啊

06:21.420 --> 06:22.420
刷新一下

06:22.420 --> 06:23.420
又包的样的一个

06:23.420 --> 06:24.420
预法触犯的一个错误了

06:24.420 --> 06:25.420
是不是

06:25.420 --> 06:26.420
这里面

06:26.420 --> 06:28.420
我们也给它来个回趁吧

06:29.420 --> 06:30.420
继续

06:31.420 --> 06:32.420
好

06:32.420 --> 06:34.420
执行一下npm write-in

06:36.420 --> 06:37.420
好了现在是不是可以了

06:37.420 --> 06:38.420
现在看一下

06:38.420 --> 06:39.420
我们

06:39.420 --> 06:40.420
进到

06:40.420 --> 06:41.420
这里

06:41.420 --> 06:42.420
是不是直接给我们

06:42.420 --> 06:43.420
挑战到登录页面了

06:43.420 --> 06:44.420
因为我们没有登录

06:44.420 --> 06:45.420
那现在我们登录一下

06:45.420 --> 06:46.420
你看一下

06:46.420 --> 06:50.900
来

06:50.900 --> 06:51.900
登录一下

06:52.900 --> 06:53.900
点击提交

06:53.900 --> 06:54.900
一键登录进来了吧

06:54.900 --> 06:56.900
那这回我们再刷新页面呢

06:57.900 --> 06:58.900
是不是

06:58.900 --> 06:59.900
还是可以登录的

06:59.900 --> 07:00.900
因为我们的数据

07:00.900 --> 07:01.900
已经存在到我们

07:01.900 --> 07:02.900
cookie里面了

07:02.900 --> 07:04.900
cookie里面是有这些信息的

07:04.900 --> 07:05.900
看到了吗

07:05.900 --> 07:07.900
现在也就实现了

07:07.900 --> 07:08.900
我们这个

07:08.900 --> 07:09.900
登录的

07:09.900 --> 07:10.900
教验的

07:10.900 --> 07:11.900
这样的一个效果了

07:11.900 --> 07:12.900
那我们再接下来

07:12.900 --> 07:14.900
是不是还有一个退出

07:14.900 --> 07:15.900
登录的一个功能

07:15.900 --> 07:16.900
对吧

07:16.900 --> 07:17.900
点击退出这个按钮

07:17.900 --> 07:18.900
我们需要让它退出

07:18.900 --> 07:19.900
登录

07:19.900 --> 07:20.900
那么这里面

07:20.900 --> 07:21.900
我们是不是就需要

07:21.900 --> 07:22.900
找到我们退出

07:22.900 --> 07:23.900
按钮的位置

07:23.900 --> 07:24.900
退出按钮

07:24.900 --> 07:25.900
应该在

07:25.900 --> 07:27.900
我们的louder

07:27.900 --> 07:29.900
下面的slater now吧

07:29.900 --> 07:30.900
这里面是不是有个退出

07:30.900 --> 07:31.900
对不对

07:31.900 --> 07:32.900
那在它这里

07:32.900 --> 07:34.900
我们给它点击一下

07:34.900 --> 07:36.900
给它绑进一个

07:36.900 --> 07:37.900
点击式件

07:37.900 --> 07:39.900
就是louder out

07:41.900 --> 07:42.900
退出

07:42.900 --> 07:44.900
然后我们再写一个louder out

07:45.900 --> 07:46.900
退出

07:46.900 --> 07:47.900
那这个时候

07:47.900 --> 07:48.900
我们只需要去改变

07:48.900 --> 07:49.900
它的一个状态

07:49.900 --> 07:50.900
是不是

07:50.900 --> 07:51.900
改变

07:51.900 --> 07:53.900
用户的一个状态

07:53.900 --> 07:54.900
来

07:54.900 --> 07:55.900
这个叫louder out

07:55.900 --> 07:58.980
对不对

07:58.980 --> 08:00.980
这应该是douler out

08:00.980 --> 08:01.980
对吧

08:01.980 --> 08:02.980
这回我们来看一下

08:02.980 --> 08:03.980
来

08:03.980 --> 08:04.980
现在又有这样一个

08:04.980 --> 08:05.980
预发错误了

08:05.980 --> 08:06.980
是不是

08:06.980 --> 08:08.980
重新的去修复一下

08:08.980 --> 08:09.980
好

08:09.980 --> 08:10.980
现在是不是可以了

08:10.980 --> 08:11.980
这回看

08:11.980 --> 08:12.980
当我

08:12.980 --> 08:13.980
我看一下这里面

08:13.980 --> 08:14.980
有报的什么错

08:15.980 --> 08:17.980
这回再重新刷新一下吧

08:17.980 --> 08:18.980
刚刚应该是

08:18.980 --> 08:19.980
我们在写的时候

08:19.980 --> 08:20.980
它自动保存出现的问题

08:20.980 --> 08:21.980
OK

08:21.980 --> 08:22.980
现在我们退出

08:22.980 --> 08:23.980
退出之后

08:23.980 --> 08:24.980
你会发现

08:24.980 --> 08:25.980
我们的信息没了

08:25.980 --> 08:26.980
对不对

08:26.980 --> 08:27.980
但是呢

08:27.980 --> 08:28.980
我们没有挑转一面吧

08:28.980 --> 08:29.980
我们退出之后

08:29.980 --> 08:30.980
是不是需要让它

08:30.980 --> 08:31.980
挑转到

08:31.980 --> 08:32.980
我们的登录的界面

08:32.980 --> 08:33.980
对不对

08:33.980 --> 08:35.980
那我们就来一个router

08:36.980 --> 08:37.980
rout

08:37.980 --> 08:39.980
叫replace

08:40.980 --> 08:41.980
或者

08:41.980 --> 08:43.980
你这里面来一个push

08:43.980 --> 08:45.980
replace代表是T1

08:45.980 --> 08:46.980
这个路由

08:46.980 --> 08:48.980
push代表的是新增一个路由

08:48.980 --> 08:50.980
那我们新增一个吧

08:50.980 --> 08:51.980
新增一个

08:51.980 --> 08:54.980
挑转到登录的一个界面

08:54.980 --> 08:55.980
这回是不是可以了

08:55.980 --> 08:57.980
现在我们来看一下

08:57.980 --> 08:58.980
又保错了

08:59.980 --> 09:00.980
还重新的

09:01.980 --> 09:03.980
执行一下我们的NTM软力器

09:04.980 --> 09:05.980
这回呢

09:05.980 --> 09:06.980
这回是不是可以了

09:06.980 --> 09:08.980
然后我们刷新一下页面

09:08.980 --> 09:09.980
挑转啊

09:09.980 --> 09:11.980
这回再进来

09:12.980 --> 09:13.980
就把死定

09:15.980 --> 09:16.980
可以吧

09:17.980 --> 09:18.980
点击提交

09:18.980 --> 09:19.980
起来了

09:19.980 --> 09:20.980
这回退出

09:20.980 --> 09:21.980
退出了

09:21.980 --> 09:22.980
然后我们再次的

09:22.980 --> 09:24.980
进到我们的后母页面下面去

09:26.980 --> 09:27.980
不允许我们进

09:27.980 --> 09:28.980
对吧

09:28.980 --> 09:29.980
因为我们没有登录

09:29.980 --> 09:30.980
所以不允许

09:30.980 --> 09:31.980
现在是不是可以了

09:31.980 --> 09:33.980
现在我们的登录功能

09:33.980 --> 09:35.980
也就完全的写完了

09:35.980 --> 09:39.060
对吧

09:39.060 --> 09:41.060
现在登录功能没有问题了

09:41.060 --> 09:43.060
那下一个

09:43.060 --> 09:44.060
我们先回忆

09:44.060 --> 09:45.060
我们来看一下

09:45.060 --> 09:46.060
我们之前整理好的

09:46.060 --> 09:47.060
这个

09:47.060 --> 09:48.060
呃

09:48.060 --> 09:50.060
实现的功能啊

09:50.060 --> 09:51.060
然后我们把我们

09:51.060 --> 09:52.060
已经实现的功能

09:52.060 --> 09:53.060
把它

09:53.060 --> 09:54.060
嗯

09:54.060 --> 09:56.060
标记一下

09:57.060 --> 09:58.060
在这下面

09:58.060 --> 09:59.060
对不对

09:59.060 --> 10:00.060
登录这个页面

10:00.060 --> 10:01.060
我们都已经写完了

10:01.060 --> 10:02.060
对不对

10:02.060 --> 10:03.060
那这里面

10:03.060 --> 10:04.060
都可以完事了

10:04.060 --> 10:05.060
就直接在这个

10:05.060 --> 10:06.060
大标记下面

10:07.060 --> 10:08.060
写成星了

10:08.060 --> 10:09.060
代表的是

10:09.060 --> 10:11.060
两个星代表是已经写完了

10:11.060 --> 10:12.060
可以吧

10:12.060 --> 10:13.060
那我们现在

10:13.060 --> 10:15.060
登录写完了之后

10:15.060 --> 10:16.060
我们接下来要做什么

10:16.060 --> 10:17.060
接下来要做的

10:17.060 --> 10:18.060
是不是就是根据

10:18.060 --> 10:20.060
我们用户的一个决策

10:20.060 --> 10:22.060
我们进行渲染

10:22.060 --> 10:24.060
我们的左侧的导航

10:24.060 --> 10:25.060
那我们左侧导航

10:25.060 --> 10:26.060
就不应该写字了

10:26.060 --> 10:27.060
对不对

10:27.060 --> 10:28.060
那这个功能

10:28.060 --> 10:30.060
大家先来思考一下

10:30.060 --> 10:31.060
怎么去实现

10:31.060 --> 10:32.060
好吧

10:32.060 --> 10:33.060
想想思路啊

10:33.060 --> 10:34.060
然后

10:34.060 --> 10:35.060
如果没有思路的话

10:35.060 --> 10:37.060
继续听下一条节

