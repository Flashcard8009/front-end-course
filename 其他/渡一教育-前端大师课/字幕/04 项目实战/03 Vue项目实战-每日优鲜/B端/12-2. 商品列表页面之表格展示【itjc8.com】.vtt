WEBVTT

00:00.180 --> 00:04.180
接下来我们来实现一下下面这个表格类区域

00:04.180 --> 00:06.180
表格区域也比较简单对不对

00:06.180 --> 00:08.180
就是一个table的组件

00:08.180 --> 00:10.180
我们去找一下

00:10.180 --> 00:11.180
都现成的

00:11.180 --> 00:13.180
我们就直接拿过来用就可以了

00:14.180 --> 00:16.180
那我们来看一下我们想要的这个表格

00:16.180 --> 00:17.180
它是什么样子的

00:17.180 --> 00:19.180
首先它是没有边框的

00:19.180 --> 00:22.180
它是每一行给你打上格子了对吧

00:22.180 --> 00:25.180
然后再有就是它下面

00:25.180 --> 00:27.180
看一下它是有分页的

00:27.180 --> 00:28.180
看到了吧

00:28.180 --> 00:32.180
并且它右边它是有操作的这种按钮了

00:32.180 --> 00:36.180
那这个操作按钮不属于我们的数据的这一部分对吧

00:36.180 --> 00:39.180
那它就需要我们单独的去处理

00:39.180 --> 00:41.180
那我们现在已经知道

00:41.180 --> 00:43.180
我们想要的这个表格的结构了

00:43.180 --> 00:46.180
接下来就去组件库当中去找一下

00:46.180 --> 00:49.180
有没有符合我们要求的

00:49.180 --> 00:51.180
那我们来看一下呗

00:51.180 --> 00:53.180
我们要求的好像是

00:53.180 --> 00:55.180
是不是类似于这个呀

00:55.180 --> 00:57.180
好像类似于它吧

00:58.180 --> 01:01.450
看一下

01:03.450 --> 01:05.450
大体应该就是类似于它

01:05.450 --> 01:08.450
只不过我们把这个按钮移动到最后一列了

01:08.450 --> 01:09.450
对不对

01:09.450 --> 01:11.450
它这里面是放在第一列了

01:11.450 --> 01:13.450
那么我们是不是就可以用这个呀

01:13.450 --> 01:16.450
我们就可以把这样的一个组件拿过来了

01:16.450 --> 01:19.450
怎么拿直接复制就好了呗

01:19.450 --> 01:20.450
对不对

01:20.450 --> 01:23.450
其实我们没有必要全部都复制下来

01:23.450 --> 01:28.450
我们可以先把先全部都复制下来吧

01:28.450 --> 01:31.450
其实我们就只需要复制它的HTML

01:31.450 --> 01:33.450
HTML这一部分就可以了

01:33.450 --> 01:35.450
它这里面没有CSS对吧

01:35.450 --> 01:36.450
ok

01:36.450 --> 01:40.450
然后我们放在我们的list的页面当中

01:40.450 --> 01:41.450
产品列表

01:41.450 --> 01:42.450
接下来表格

01:42.450 --> 01:44.450
那表格又是一部分

01:44.450 --> 01:46.450
我们再写在一个组件当中吧

01:46.450 --> 01:48.450
我们管它叫product table

01:48.450 --> 01:51.910
可以吧

01:51.910 --> 01:52.910
第二view

01:52.910 --> 01:53.910
好

01:53.910 --> 01:55.910
然后我们在这里面

01:55.910 --> 01:56.910
粘贴过来

01:56.910 --> 01:59.910
把我们刚刚复制的这个代码粘贴过来

01:59.910 --> 02:00.910
ok

02:00.910 --> 02:01.910
接下来改一下

02:01.910 --> 02:03.910
这个columns就是我们的表头呗

02:03.910 --> 02:05.910
那我们的表头需要什么

02:05.910 --> 02:06.910
看一下

02:06.910 --> 02:07.910
把我们的表头写下

02:07.910 --> 02:10.910
id 标题 描述 内幕

02:10.910 --> 02:12.910
第一个是id

02:12.910 --> 02:15.910
那我们的这个

02:15.910 --> 02:17.910
需要有

02:17.910 --> 02:19.910
需要有这个

02:19.910 --> 02:20.910
看一下

02:20.910 --> 02:22.910
需要有这个按钮的部分

02:22.910 --> 02:24.910
我们需要给它写在最后对吧

02:24.910 --> 02:27.910
剩下的都写在前面呗

02:27.910 --> 02:29.910
我们把这些都改一下

02:29.910 --> 02:31.910
第一个是id

02:31.910 --> 02:33.910
那这个

02:33.910 --> 02:34.910
data的数据

02:34.910 --> 02:35.910
对应的

02:35.910 --> 02:36.910
这一行

02:36.910 --> 02:38.910
就是这个产品的数据的是哪一个属性

02:38.910 --> 02:40.910
我们对应的就是id这个属性

02:40.910 --> 02:41.910
对吧

02:41.910 --> 02:42.910
那这个key值

02:42.910 --> 02:43.910
我们就随便去写一个

02:43.910 --> 02:44.910
这个key值

02:44.910 --> 02:46.910
代表的就是我们当前

02:46.910 --> 02:47.910
这个

02:47.910 --> 02:48.910
这一列

02:48.910 --> 02:50.910
它唯一对应的一个key值

02:50.910 --> 02:51.910
然后它的宽度

02:51.910 --> 02:52.910
我们就不去设置了

02:52.910 --> 02:53.910
让它默认

02:53.910 --> 02:55.910
然后接下来

02:55.910 --> 02:57.910
标题 描述 内幕

02:57.910 --> 02:59.910
标题 描述 内幕

02:59.910 --> 03:01.910
标题

03:01.910 --> 03:02.910
标题的index

03:02.910 --> 03:03.910
所以

03:03.910 --> 03:04.910
我们回头来看一下

03:04.910 --> 03:06.910
我们的数据

03:06.910 --> 03:08.910
在这里

03:08.910 --> 03:09.910
标题对应的

03:09.910 --> 03:11.910
title

03:11.910 --> 03:13.910
title

03:13.910 --> 03:14.910
然后key值

03:14.910 --> 03:15.910
我们也给它改一下吧

03:15.910 --> 03:16.910
随便去改

03:16.910 --> 03:18.910
还是改成title吧

03:18.910 --> 03:19.910
然后这里面有个olips

03:19.910 --> 03:20.910
代表的是

03:20.910 --> 03:22.910
如果超出这一列的宽度的话

03:22.910 --> 03:24.910
它会有一个打点

03:24.910 --> 03:25.910
会隐藏

03:25.910 --> 03:26.910
明白吧

03:26.910 --> 03:27.910
那我们就让它隐藏

03:27.910 --> 03:28.910
好吧

03:28.910 --> 03:29.910
然后接下来

03:29.910 --> 03:32.860
内幕

03:32.860 --> 03:33.860
内幕的书竞

03:33.860 --> 03:35.860
叫category

03:35.860 --> 03:36.860
对

03:36.860 --> 03:38.860
这都是需要对应着咱们的

03:38.860 --> 03:40.860
这个数据里面的值

03:40.860 --> 03:42.860
对应着它的

03:42.860 --> 03:44.860
key值我们也改一下

03:45.860 --> 03:46.860
可以吧

03:46.860 --> 03:47.860
然后接下来

03:47.860 --> 03:48.860
下一个是什么

03:48.860 --> 03:49.860
改一下

03:49.860 --> 03:51.860
内幕之前有个描述

03:51.860 --> 03:52.860
对吧 描述

03:52.860 --> 03:54.860
预售价 折扣价

03:54.860 --> 03:56.860
先把描述写在前面去吧

03:56.860 --> 04:03.570
来 描述

04:03.570 --> 04:10.560
写一下

04:10.560 --> 04:11.560
描述的属性是什么

04:11.560 --> 04:13.560
我们来qt来看一下

04:13.560 --> 04:15.560
dac

04:15.560 --> 04:17.560
dac

04:17.560 --> 04:18.560
key值

04:18.560 --> 04:20.560
我们也给它改一下

04:20.560 --> 04:22.560
再接下来是

04:22.560 --> 04:24.560
价格吧

04:24.560 --> 04:26.560
预售价格 折扣价格

04:27.560 --> 04:31.700
预售价格

04:31.700 --> 04:33.700
预售价格对应的

04:33.700 --> 04:34.700
key值

04:34.700 --> 04:37.700
看一下对应的这个值

04:37.700 --> 04:39.700
预售价格 这里

04:39.700 --> 04:41.700
prace

04:41.700 --> 04:43.700
price

04:44.700 --> 04:46.700
然后它还有个折扣价格

04:46.700 --> 04:48.700
对吧

04:48.700 --> 04:50.700
price

04:50.700 --> 04:52.700
我们再复制一个

04:52.700 --> 04:57.550
折扣价格

04:57.550 --> 04:59.550
折扣价格

05:00.550 --> 05:05.440
折扣价格对应的是praceoff

05:05.440 --> 05:07.440
qtf

05:07.440 --> 05:09.440
其实我们也给它改成这个吧

05:09.440 --> 05:13.650
那这个就不需要了

05:13.650 --> 05:15.650
这个预售价格和折扣价格

05:15.650 --> 05:16.650
我们就不需要让它隐藏了

05:16.650 --> 05:18.650
就需要让它全部显示出来

05:18.650 --> 05:19.650
对吧

05:19.650 --> 05:22.650
然后再有看一下还有什么

05:22.650 --> 05:25.650
标签限制购买数量

05:25.650 --> 05:27.650
上架状态对吧

05:27.650 --> 05:29.650
标签

05:29.650 --> 05:31.650
复制一个

05:31.650 --> 05:35.650
标签上架购买数量

05:35.650 --> 05:37.650
多复制了一个

05:37.650 --> 05:41.410
都号是不是

05:41.410 --> 05:46.060
标签

05:46.060 --> 05:48.060
标签的属性叫tax

05:48.060 --> 05:50.060
是叫tax吧

05:50.060 --> 05:51.060
回头来看一下

05:51.060 --> 05:52.060
tax对吧

05:52.060 --> 05:53.060
tax

05:53.060 --> 05:54.060
s

05:54.060 --> 05:55.060
tgs

05:55.060 --> 05:56.060
ok

05:56.060 --> 05:58.060
key值我们也管它叫tax

05:59.060 --> 06:01.060
接下来还有啥

06:01.060 --> 06:04.060
标签购买数量上架状态

06:04.060 --> 06:07.760
购买数量

06:07.760 --> 06:14.720
购买数量对应的

06:14.720 --> 06:16.720
随值

06:16.720 --> 06:22.870
叫这个

06:22.870 --> 06:23.870
它

06:23.870 --> 06:25.870
限制的一个数量

06:25.870 --> 06:26.870
它限制数量有时候

06:26.870 --> 06:27.870
我们库存走量

06:27.870 --> 06:28.870
对不对

06:28.870 --> 06:30.870
那我们就可以设置它

06:31.870 --> 06:32.870
要

06:33.870 --> 06:34.870
拿过来吧

06:34.870 --> 06:36.870
购买数量之后呢

06:36.870 --> 06:38.870
限制购买数量是不是

06:38.870 --> 06:40.870
少了一个限制

06:40.870 --> 06:41.870
好

06:41.870 --> 06:47.550
接下来上架状态

06:47.550 --> 06:55.860
上架状态

06:55.860 --> 07:00.940
上架状态这个属性叫staters

07:00.940 --> 07:02.940
key值也是staters

07:02.940 --> 07:06.380
一个操作对吧

07:06.380 --> 07:07.380
操作

07:07.380 --> 07:08.380
我们就随便去给它

07:08.380 --> 07:10.380
起个明白叫operations

07:10.380 --> 07:12.380
operatn

07:13.380 --> 07:16.380
可以把key值也是operatn

07:16.380 --> 07:18.380
那它应该没有这个属性啊

07:18.380 --> 07:19.380
然后接下来

07:19.380 --> 07:21.380
这里面是不是有按钮

07:21.380 --> 07:22.380
然后这个按钮看一下

07:22.380 --> 07:24.380
这个sculptus large

07:24.380 --> 07:25.380
啥意思

07:25.380 --> 07:26.380
它代表的是

07:26.380 --> 07:27.380
我们要往这一列当中

07:27.380 --> 07:28.380
添加一个

07:28.380 --> 07:30.380
插槽

07:30.380 --> 07:32.380
就是插槽的一个意思

07:33.380 --> 07:35.380
这个插槽里面的内容

07:35.380 --> 07:38.380
就是我们拿到的sulus

07:38.380 --> 07:40.380
为name的

07:40.380 --> 07:41.380
加那个插槽

07:41.380 --> 07:42.380
那我们这里面

07:42.380 --> 07:43.380
把这个name改一下吧

07:43.380 --> 07:44.380
改成option

07:44.380 --> 07:46.380
operatn

07:46.380 --> 07:47.380
对吧

07:47.380 --> 07:48.380
代表是操作

07:48.380 --> 07:50.380
operatn

07:50.380 --> 07:51.380
那这里面

07:51.380 --> 07:52.380
我们不用a标签了

07:52.380 --> 07:54.380
因为我们这个插槽里面

07:54.380 --> 07:55.380
是不是有两按钮

07:55.380 --> 07:56.380
那我这里面

07:56.380 --> 07:58.380
就直接用div标签了啊

07:59.380 --> 08:00.380
div

08:01.380 --> 08:02.380
后面的也是一样的

08:02.380 --> 08:03.380
改成div

08:03.380 --> 08:04.380
好

08:04.380 --> 08:05.380
那里面呢

08:05.380 --> 08:06.380
里面的话

08:06.380 --> 08:08.380
我们就改成两个

08:08.380 --> 08:09.380
按钮呗

08:09.380 --> 08:10.380
然后这个数据

08:10.380 --> 08:11.380
我们也不需要要了

08:11.380 --> 08:12.380
对不对

08:12.380 --> 08:14.380
当前的这个文本数据

08:14.380 --> 08:15.380
不要了啊

08:15.380 --> 08:16.380
接下来

08:16.380 --> 08:17.380
往里面写两按钮

08:17.380 --> 08:18.380
a-8

08:19.380 --> 08:21.380
一个是编辑

08:21.380 --> 08:22.380
对吧

08:22.380 --> 08:24.380
一个是删除

08:24.380 --> 08:28.420
删除

08:28.420 --> 08:29.420
OK

08:29.420 --> 08:30.420
我们现在来看一下

08:30.420 --> 08:31.420
我们的一个效果

08:32.420 --> 08:33.420
来

08:33.420 --> 08:34.420
现在

08:34.420 --> 08:35.420
没有任何的效果

08:35.420 --> 08:36.420
对吧

08:36.420 --> 08:37.420
为什么没有任何的效果

08:37.420 --> 08:38.420
没有引入吧

08:38.420 --> 08:39.420
就在

08:39.420 --> 08:40.420
接下来引入到

08:40.420 --> 08:42.420
我们的页面当中去

08:42.420 --> 08:43.420
list里面呗

08:43.420 --> 08:44.420
那我们这里面

08:44.420 --> 08:45.420
需要先

08:45.420 --> 08:47.420
引入我们这个组件

08:47.420 --> 08:48.420
叫

08:48.420 --> 08:49.420
我们这个组件

08:49.420 --> 08:50.420
叫做operatn

08:50.420 --> 08:51.420
table

08:52.420 --> 08:53.420
对吧

08:53.420 --> 08:54.420
from

08:54.420 --> 08:55.420
it components

08:55.420 --> 08:58.050
下面的

08:58.050 --> 08:59.050
operatn

08:59.050 --> 09:00.050
rld

09:00.050 --> 09:01.050
ucd

09:01.050 --> 09:02.050
table

09:02.050 --> 09:03.050
w

09:04.050 --> 09:05.050
对吧

09:05.050 --> 09:06.050
接下来

09:06.050 --> 09:07.050
在components里面

09:07.050 --> 09:08.050
引入它

09:08.050 --> 09:10.050
然后我们在页面当中

09:10.050 --> 09:12.050
添加这个标签

09:12.050 --> 09:14.050
prlduct

09:14.050 --> 09:16.050
tabre

09:17.050 --> 09:18.050
对吧

09:18.050 --> 09:20.050
那我们现在来看一下

09:20.050 --> 09:22.050
报了错啊

09:22.050 --> 09:23.050
看一下是不是

09:23.050 --> 09:24.050
与法规范的一个问题

09:24.050 --> 09:26.050
我们先把这个

09:26.050 --> 09:28.050
代码规范的一个问题啊

09:28.050 --> 09:29.050
不是与法规范了

09:29.050 --> 09:30.050
代码规范

09:31.050 --> 09:33.050
那我们需要执行一下

09:33.050 --> 09:34.050
npmrld

09:34.050 --> 09:36.050
然后它的代码规范一下

09:36.050 --> 09:37.050
报了个错

09:37.050 --> 09:38.050
告诉我们

09:38.050 --> 09:40.050
没有找到这个路径

09:40.050 --> 09:41.050
那回过来看一下吧

09:41.050 --> 09:42.050
我们叫什么

09:42.050 --> 09:43.050
produx

09:44.050 --> 09:45.050
对吧

09:45.050 --> 09:46.050
table

09:46.050 --> 09:47.050
稍微一个s

09:47.050 --> 09:50.060
这回呢

09:50.060 --> 09:51.060
没有问题了吧

09:51.060 --> 09:52.060
先再来看一下

09:52.060 --> 09:53.060
刷新一下

09:53.060 --> 09:54.060
是不是可以了

09:54.060 --> 09:55.060
然后接下来

09:55.060 --> 09:56.060
就是我们里面的数据了

09:56.060 --> 09:58.060
数据需要动态的去获取

09:58.060 --> 09:59.060
对吧

09:59.060 --> 10:00.060
那获取数据的话

10:00.060 --> 10:01.060
是不是属于我们当前

10:01.060 --> 10:03.060
这个页面的一个一部分

10:03.060 --> 10:04.060
那我就可以把这个数据

10:04.060 --> 10:06.060
动态的传过去吧

10:06.060 --> 10:07.060
那回过来看一下

10:07.060 --> 10:10.060
回到我们的table里面

10:10.060 --> 10:11.060
我们的data

10:11.060 --> 10:12.060
拿过来

10:12.060 --> 10:13.060
来data

10:13.060 --> 10:15.060
这个data就不再是它了

10:15.060 --> 10:17.060
就把它删掉

10:18.060 --> 10:19.060
这个data应该

10:19.060 --> 10:21.060
动态的获取过来的

10:21.060 --> 10:22.060
从它的复杰点

10:22.060 --> 10:23.060
传递过来的

10:23.060 --> 10:25.060
我们就可以通过一个proud

10:26.060 --> 10:27.060
防止一下

10:27.060 --> 10:29.060
拿到这个data

10:29.060 --> 10:30.060
那这个data

10:30.060 --> 10:31.060
我们接下来

10:31.060 --> 10:33.060
是不是需要在复杰点当中

10:33.060 --> 10:34.060
去获取一下

10:34.060 --> 10:35.060
来

10:35.060 --> 10:36.060
传递一下啊

10:37.060 --> 10:38.060
那这个

10:38.060 --> 10:40.060
我们就来个叫tabledata吧

10:40.060 --> 10:41.060
就叫tabledata

10:41.060 --> 10:42.060
好

10:42.060 --> 10:43.060
那我们就需要在复杰点

10:43.060 --> 10:45.060
复组建这里

10:45.060 --> 10:46.060
复组建这里

10:46.060 --> 10:48.060
有一个data的数据

10:48.060 --> 10:52.820
return一个data

10:52.820 --> 10:53.820
就叫tabledata

10:53.820 --> 10:54.820
对吧

10:54.820 --> 10:55.820
它最开始

10:55.820 --> 10:56.820
默认

10:56.820 --> 10:57.820
我让它微空的

10:57.820 --> 10:58.820
那我们是不是就需要获取啊

10:58.820 --> 11:00.820
那我就需要有这样的一个方法

11:00.820 --> 11:01.820
获取

11:01.820 --> 11:02.820
这个

11:02.820 --> 11:03.820
表格的数据

11:04.820 --> 11:06.820
gettabledata

11:07.820 --> 11:08.820
那获取表格数据

11:08.820 --> 11:09.820
都需要哪些

11:09.820 --> 11:10.820
信息

11:10.820 --> 11:11.820
是不是首先就是

11:11.820 --> 11:12.820
我们需要知道

11:12.820 --> 11:13.820
它的一个接口啊

11:14.820 --> 11:15.820
它的接口是哪一个

11:15.820 --> 11:17.820
是不是下面这个

11:17.820 --> 11:18.820
产品列表

11:18.820 --> 11:19.820
对不对

11:19.820 --> 11:20.820
让你看一下

11:20.820 --> 11:22.820
需要传递的寝宿参数

11:22.820 --> 11:23.820
除了avk以外的

11:23.820 --> 11:24.820
其他的

11:24.820 --> 11:25.820
page size吧

11:25.820 --> 11:26.820
还有search words

11:26.820 --> 11:27.820
对不对

11:27.820 --> 11:28.820
应该还有一个category

11:28.820 --> 11:29.820
对不对

11:29.820 --> 11:30.820
那这些信息

11:30.820 --> 11:31.820
我们都需要传递吧

11:31.820 --> 11:32.820
那我们接下来

11:32.820 --> 11:33.820
来

11:33.820 --> 11:34.820
写一下

11:34.820 --> 11:35.820
我们的这个API

11:35.820 --> 11:36.820
portdocs里面

11:36.820 --> 11:37.820
把它打开

11:37.820 --> 11:38.820
这里面

11:38.820 --> 11:40.820
我们用的是export default

11:40.820 --> 11:43.260
好

11:43.260 --> 11:45.260
接下来在这里面

11:45.260 --> 11:46.260
我们来一个list

11:46.260 --> 11:48.260
获取它的一个粒表

11:49.260 --> 11:51.260
传递过来的一些

11:51.260 --> 11:52.260
过滤的一些参数

11:52.260 --> 11:53.260
对吧

11:53.260 --> 11:55.260
我们最终返回出去

11:55.260 --> 11:57.260
就是access.guide

11:57.260 --> 11:59.260
又是一个guide的寄球吧

11:59.260 --> 12:00.260
就不在

12:00.260 --> 12:01.260
是guide的寄球

12:01.260 --> 12:02.260
把我们的路径

12:02.260 --> 12:04.260
写进来portdocs.l

12:05.260 --> 12:06.260
然后接下来

12:06.260 --> 12:07.260
我们的数据

12:07.260 --> 12:09.260
还是写在

12:09.260 --> 12:11.260
params里面

12:11.260 --> 12:12.260
对吧

12:12.260 --> 12:13.260
然后接下来

12:13.260 --> 12:15.260
在我们的portdocs.table

12:15.260 --> 12:16.260
下面

12:16.260 --> 12:17.260
我们需要去引入一下

12:17.260 --> 12:18.260
这个API

12:21.980 --> 12:25.980
API下面的portdocs.pl

12:25.980 --> 12:26.980
对吧

12:26.980 --> 12:27.980
然后接下来

12:27.980 --> 12:29.980
在我们的

12:31.980 --> 12:32.980
在哪里

12:32.980 --> 12:33.980
我不应该在这里面

12:33.980 --> 12:34.980
引入吧

12:34.980 --> 12:35.980
我应该是在它的

12:35.980 --> 12:36.980
复杰点当中去

12:36.980 --> 12:37.980
获取数据

12:37.980 --> 12:38.980
对吧

12:38.980 --> 12:39.980
复杰点在这里

12:40.980 --> 12:41.980
来

12:41.980 --> 12:42.980
拿到这个API

12:42.980 --> 12:44.980
然后在这个方法当中

12:44.980 --> 12:46.980
API.list

12:47.980 --> 12:49.980
传递参数了吧

12:49.980 --> 12:51.980
这个参数有什么配置

12:51.980 --> 12:52.980
对吧

12:52.980 --> 12:53.980
我先给大家写死

12:53.980 --> 12:55.980
还有一个size

12:55.980 --> 12:56.980
默认

12:57.980 --> 12:59.980
我给它写个10条吧

12:59.980 --> 13:00.980
然后再有

13:00.980 --> 13:02.980
还有一个searchword

13:02.980 --> 13:03.980
对吧

13:03.980 --> 13:04.980
searchword

13:04.980 --> 13:05.980
从哪过去来的

13:05.980 --> 13:06.980
是不是应该是

13:06.980 --> 13:09.980
从我们的searchbox

13:09.980 --> 13:11.980
里面过去来的

13:11.980 --> 13:12.980
对吧

13:12.980 --> 13:13.980
那我就需要把

13:13.980 --> 13:14.980
这个数据存住下来吧

13:14.980 --> 13:15.980
对吧

13:15.980 --> 13:16.980
form存住下来

13:16.980 --> 13:17.980
那我们这里面

13:17.980 --> 13:20.980
来一个searchform

13:20.980 --> 13:21.980
对象

13:21.980 --> 13:22.980
先来个空对象

13:22.980 --> 13:23.980
对不对

13:23.980 --> 13:25.980
这应该是斗行

13:25.980 --> 13:26.980
然后在我们

13:26.980 --> 13:27.980
做的时候

13:27.980 --> 13:29.980
我们把这个searchform

13:29.980 --> 13:32.980
让它等于我们的form

13:32.980 --> 13:33.980
对吧

13:33.980 --> 13:34.980
这样是不是可以了

13:34.980 --> 13:36.980
然后我们在这里面

13:36.980 --> 13:39.980
拿到searchform里面的数据

13:39.980 --> 13:41.980
是不是可以了

13:41.980 --> 13:42.980
对吧

13:42.980 --> 13:43.980
这回就OK了

13:43.980 --> 13:44.980
然后接下来

13:44.980 --> 13:45.980
拿到数据

13:45.980 --> 13:46.980
在哪里

13:46.980 --> 13:47.980
可以获取到数据

13:47.980 --> 13:48.980
是不是正这个方法

13:48.980 --> 13:49.980
还是

13:50.980 --> 13:52.980
f24返回一个promise

13:52.980 --> 13:53.980
我们通过正这个方法

13:53.980 --> 13:55.980
可以拿去到

13:56.980 --> 13:58.980
返回过来的一个结构

13:58.980 --> 13:59.980
对吧

13:59.980 --> 14:00.980
那我们在这里面

14:00.980 --> 14:01.980
打印一下我们的数据

14:01.980 --> 14:02.980
看有没有拿到

14:03.980 --> 14:04.980
先打印一下

14:06.980 --> 14:09.490
执行一下lint

14:09.490 --> 14:10.490
好

14:10.490 --> 14:11.490
现在来看一下

14:11.490 --> 14:12.490
我们的效果

14:13.490 --> 14:14.490
拿到这个数据了吧

14:14.490 --> 14:15.490
我们刷新一下

14:15.490 --> 14:16.490
再刷新一下

14:16.490 --> 14:17.490
看一下

14:19.490 --> 14:20.490
好像现在

14:20.490 --> 14:21.490
没有拿到这个数据

14:21.490 --> 14:22.490
这两个打印

14:22.490 --> 14:23.490
都是在我们

14:23.490 --> 14:24.490
access里面打印的

14:24.490 --> 14:25.490
我先把access里面

14:25.490 --> 14:26.490
打印的

14:26.490 --> 14:27.490
就删掉

14:27.490 --> 14:30.570
console

14:30.570 --> 14:31.570
上面这个console

14:31.570 --> 14:34.010
也删掉

14:34.010 --> 14:35.010
好

14:35.010 --> 14:36.010
这回呢

14:36.010 --> 14:37.010
没发现

14:37.010 --> 14:38.010
没有打印对吧

14:38.010 --> 14:39.010
为什么没有打印

14:39.010 --> 14:40.010
回过来再看一下

14:40.010 --> 14:41.010
没有执行这个方法吧

14:41.010 --> 14:42.010
我是不是

14:42.010 --> 14:43.010
一进到页面的时候

14:43.010 --> 14:45.010
一创建这个组件的时候

14:45.010 --> 14:46.010
我就需要先去

14:46.010 --> 14:47.010
获取一件数据

14:47.010 --> 14:50.010
所以在我们的created里面

14:50.010 --> 14:51.010
在我们创建的时候

14:51.010 --> 14:52.010
我们就需要

14:52.010 --> 14:53.010
调一下这个方法

14:54.010 --> 14:55.010
这个我们再来看

15:00.280 --> 15:01.280
这回再来看

15:01.280 --> 15:02.280
现在

15:02.280 --> 15:04.280
是不是就拿过来了

15:04.280 --> 15:05.280
看到了吗

15:05.280 --> 15:06.280
我们的data

15:06.280 --> 15:07.280
是不是就是

15:07.280 --> 15:08.280
我们的表格数据

15:08.280 --> 15:09.280
那接下来

15:09.280 --> 15:10.280
就把data

15:10.280 --> 15:12.280
渲染到我们的表格当中

15:12.280 --> 15:13.280
那这里面

15:13.280 --> 15:14.280
就直接来个

15:14.280 --> 15:17.280
this.tabledata

15:17.280 --> 15:19.280
它应该等于resdata吧

15:19.280 --> 15:20.280
对不对

15:20.280 --> 15:22.280
那我们现在来看

15:22.280 --> 15:23.280
现在是不是可以了

15:23.280 --> 15:24.280
但是现在又有个问题

15:24.280 --> 15:25.280
你看一下

15:25.280 --> 15:26.280
报了个错

15:26.280 --> 15:27.280
告诉我们

15:27.280 --> 15:29.280
是这个组件的一个问题

15:29.280 --> 15:31.280
每一个

15:31.280 --> 15:32.280
每一行

15:32.280 --> 15:34.280
每一个记录

15:34.280 --> 15:35.280
每一个记录

15:35.280 --> 15:38.280
它都需要一个key值

15:38.280 --> 15:39.280
那也就是我们表格当中

15:39.280 --> 15:40.280
每一个数据

15:40.280 --> 15:42.280
它都需要唯一的一个key值

15:42.280 --> 15:43.280
那我们是不是

15:43.280 --> 15:45.280
就需要把这个key补上去

15:45.280 --> 15:46.280
那怎么去补

15:46.280 --> 15:47.280
我就可以在

15:47.280 --> 15:49.280
我们的table里面

15:49.280 --> 15:50.280
做这样的一个处理

15:50.280 --> 15:52.280
拿到数据之后

15:52.280 --> 15:53.280
我们渲染到

15:53.280 --> 15:54.280
我不让它

15:54.280 --> 15:56.280
为传递过来这个data

15:56.280 --> 15:57.280
我就让它为

15:57.280 --> 15:59.280
处理后的一个data

15:59.280 --> 16:01.280
来个tabledata

16:01.280 --> 16:02.280
这个tabledata

16:02.280 --> 16:04.280
是由我们传递过来的数据

16:04.280 --> 16:05.280
进行一个计算

16:05.280 --> 16:06.280
得出来的

16:06.280 --> 16:08.280
computed

16:08.280 --> 16:10.280
tabledata

16:10.280 --> 16:14.040
它是怎么出现的呢

16:14.040 --> 16:16.040
我可以直接让它

16:16.040 --> 16:17.040
return一个

16:17.040 --> 16:18.040
data

16:18.040 --> 16:22.040
sys.data.map

16:22.040 --> 16:23.040
我让它

16:24.040 --> 16:27.040
进行一个

16:27.040 --> 16:28.040
过滤

16:28.040 --> 16:30.040
不是过滤

16:30.040 --> 16:31.040
变粒

16:31.040 --> 16:33.040
然后我们给它添加下一个key值

16:33.040 --> 16:34.040
因为我们的数据里面

16:34.040 --> 16:36.040
是没有key值的

16:36.040 --> 16:37.040
我们的数据里面

16:37.040 --> 16:38.040
是没有key值的

16:38.040 --> 16:39.040
所以我们需要

16:39.040 --> 16:40.040
把它添加进去

16:40.040 --> 16:41.040
那怎么添加呢

16:41.040 --> 16:42.040
给它返回

16:42.040 --> 16:44.040
返回出去一个iterm

16:44.040 --> 16:45.040
对吧

16:45.040 --> 16:46.040
再来一个key值

16:46.040 --> 16:48.040
加上一个唯一的key值

16:48.040 --> 16:49.040
那这个key值

16:49.040 --> 16:50.040
我就让它等于

16:50.040 --> 16:51.040
它的一个id值

16:51.040 --> 16:53.040
这样是不是就可以了

16:53.040 --> 16:54.040
格式画一下

16:54.040 --> 16:55.040
这回看一下

16:55.040 --> 16:56.040
我们的这个警告

16:56.040 --> 16:59.480
就解决了

16:59.480 --> 17:00.480
来

17:00.480 --> 17:01.480
好

17:01.480 --> 17:02.480
现在没有问题了

17:02.480 --> 17:03.480
这回呢

17:03.480 --> 17:06.480
来我们刷新一下一面

17:06.480 --> 17:08.480
刷新

17:08.480 --> 17:09.480
看一下

17:09.480 --> 17:11.480
这回是不是没有bug了

17:11.480 --> 17:12.480
对吧

17:12.480 --> 17:13.480
然后接下来

17:13.480 --> 17:14.480
是不是我们需要

17:14.480 --> 17:15.480
把我们的这个翻页

17:15.480 --> 17:17.480
也需要渲染一下

17:17.480 --> 17:19.480
翻页需要写在哪儿

17:19.480 --> 17:21.480
我们来看一下

17:21.480 --> 17:22.480
那我们接下来

17:22.480 --> 17:24.480
来看一下这个翻页

17:24.480 --> 17:25.480
这个翻页

17:25.480 --> 17:26.480
我们需要写在哪儿呢

17:26.480 --> 17:27.480
我这里面

17:27.480 --> 17:29.480
是不是就有这样的一个

17:29.480 --> 17:31.480
这种格式的

17:31.480 --> 17:32.480
这种方式的

17:32.480 --> 17:33.480
对吧

17:33.480 --> 17:34.480
然后这种方式

17:34.480 --> 17:35.480
它就可以翻页

17:35.480 --> 17:36.480
那我们来看一下

17:36.480 --> 17:37.480
把它的翻页在哪儿

17:37.480 --> 17:39.480
它的翻页

17:39.480 --> 17:41.480
这里

17:41.480 --> 17:42.480
好像没有写

17:42.480 --> 17:43.480
是不是

17:43.480 --> 17:44.480
没有写的话

17:44.480 --> 17:45.480
我们再往下去看吧

17:45.480 --> 17:47.480
往下去找

17:47.480 --> 17:48.480
有没有

17:48.480 --> 17:49.480
这种可翻页

17:49.480 --> 17:52.480
并且它写这样的一个

17:52.480 --> 17:54.480
我们这里面

17:54.480 --> 17:55.480
有过滤

17:55.480 --> 17:56.480
什么山

17:56.480 --> 17:57.480
有过滤

17:57.480 --> 17:58.480
我们来看一下

17:58.480 --> 17:59.480
翻页

17:59.480 --> 18:00.480
这里

18:00.480 --> 18:01.480
对吧

18:01.480 --> 18:02.480
在这个属性下面

18:02.480 --> 18:03.480
叫

18:03.480 --> 18:05.480
pagination

18:05.480 --> 18:06.480
这个属性

18:06.480 --> 18:07.480
对吧

18:07.480 --> 18:09.480
它的这个属性

18:09.480 --> 18:10.480
它存储的

18:10.480 --> 18:12.480
就是我们翻页的一些数据

18:12.480 --> 18:13.480
翻的数据在哪儿

18:13.480 --> 18:14.480
你就可以去

18:14.480 --> 18:15.480
到翻页的这个

18:15.480 --> 18:17.480
组件当中去找

18:17.480 --> 18:18.480
pagination

18:18.480 --> 18:19.480
我们去找一下

18:19.480 --> 18:22.980
pagination

18:22.980 --> 18:23.980
分页

18:23.980 --> 18:24.980
那我们这个

18:24.980 --> 18:25.980
先给它

18:25.980 --> 18:26.980
传递到这里

18:26.980 --> 18:27.980
先给它写在这儿

18:27.980 --> 18:29.980
就是我们的pagination

18:29.980 --> 18:33.490
我让它

18:33.490 --> 18:34.490
它的数据

18:34.490 --> 18:36.490
就等于我们的pagination

18:36.490 --> 18:38.490
pagn

18:38.490 --> 18:42.570
需要用一个引号引上

18:42.570 --> 18:44.570
接下来在我们的data里面

18:44.570 --> 18:46.570
我们就写下pagn

18:46.570 --> 18:49.570
pagn

18:49.570 --> 18:51.570
那这个数据都需要什么

18:51.570 --> 18:52.570
我们回过来看一下

18:52.570 --> 18:53.570
它需要有

18:53.570 --> 18:56.570
我们要做的是什么样的翻页

18:56.570 --> 18:57.570
是不是含有这样的一个

18:57.570 --> 18:58.570
size的一个翻页

18:58.570 --> 18:59.570
对不对

18:59.570 --> 19:00.570
含有我们的每一页

19:00.570 --> 19:01.570
调数的翻页

19:01.570 --> 19:03.570
那我们这里面

19:03.570 --> 19:05.570
找一下哪一个含有

19:05.570 --> 19:06.570
调数

19:06.570 --> 19:07.570
是不是这个

19:07.570 --> 19:08.570
对不对

19:08.570 --> 19:09.570
你看一下我们需要哪些参数

19:09.570 --> 19:10.570
其实我们需要参数

19:10.570 --> 19:11.570
就是我们

19:11.570 --> 19:12.570
每一个分页

19:12.570 --> 19:13.570
身上的这些属性

19:13.570 --> 19:14.570
看到了吗

19:14.570 --> 19:15.570
它属性有啥

19:15.570 --> 19:17.570
是不是有一个current

19:17.570 --> 19:19.570
代表的是当前的页码

19:19.570 --> 19:20.570
那我们就需要

19:20.570 --> 19:21.570
给它加上一个current

19:21.570 --> 19:24.570
cu22ent

19:24.570 --> 19:25.570
把它来默认为1

19:25.570 --> 19:26.570
可以吧

19:26.570 --> 19:27.570
再接下来呢

19:27.570 --> 19:28.570
还有我们的总调数吧

19:28.570 --> 19:29.570
还有每一页调数

19:29.570 --> 19:30.570
对不对

19:30.570 --> 19:32.570
还有显示

19:32.570 --> 19:33.570
要看啊

19:33.570 --> 19:34.570
有一个

19:34.570 --> 19:36.570
显示

19:36.570 --> 19:37.570
每一页

19:37.570 --> 19:39.570
显示每一页调数的

19:39.570 --> 19:40.570
找一下

19:40.570 --> 19:43.070
OK

19:43.070 --> 19:44.070
我们先把这个配置size

19:44.070 --> 19:45.070
先写下吧

19:45.070 --> 19:46.070
每一页调数

19:46.070 --> 19:48.070
配置size

19:48.070 --> 19:50.070
让它每页为10条

19:50.070 --> 19:51.070
对吧

19:51.070 --> 19:52.070
还有什么

19:52.070 --> 19:54.070
应该还有一个

19:55.070 --> 19:57.070
shows

19:57.070 --> 19:59.070
配置size

19:59.070 --> 20:00.070
对吧

20:00.070 --> 20:02.070
它是一个布尔类型的值啊

20:02.070 --> 20:04.070
ctrl v一下

20:04.070 --> 20:05.070
给它设置一个处

20:05.070 --> 20:06.070
就好了没

20:06.070 --> 20:08.070
再接下来呢

20:08.070 --> 20:09.070
toto数据总调

20:09.070 --> 20:10.070
对不对

20:10.070 --> 20:12.070
数据总调

20:12.070 --> 20:14.070
qotl

20:14.070 --> 20:15.070
tl

20:15.070 --> 20:16.070
那这个总调

20:16.070 --> 20:17.070
是不是

20:17.070 --> 20:19.070
默认我让它为1吧

20:19.070 --> 20:22.960
默认先让它为1

20:22.960 --> 20:23.960
然后我们来看一下

20:23.960 --> 20:24.960
现在那个效果吧

20:28.100 --> 20:31.060
好

20:31.060 --> 20:32.060
可说完了

20:32.060 --> 20:33.060
现在

20:33.060 --> 20:34.060
报了一些错误

20:34.060 --> 20:36.060
看这些错误啥意思

20:36.060 --> 20:38.060
说没有找到这个方法

20:38.060 --> 20:39.060
对不对

20:39.060 --> 20:40.060
来看一下吧

20:40.060 --> 20:41.060
哪里的问题啊

20:41.060 --> 20:43.060
pagination

20:43.060 --> 20:45.060
我是不是写错了

20:45.060 --> 20:47.060
这个属性没有问题

20:47.060 --> 20:48.060
对吧

20:48.060 --> 20:49.060
然后看一下

20:49.060 --> 20:51.060
上面的一些错误啊

20:51.060 --> 20:52.060
上面应该是

20:52.060 --> 20:53.060
当我修改的时候

20:53.060 --> 20:54.060
对不对

20:54.060 --> 20:55.060
我修改的时候

20:55.060 --> 20:56.060
它报的错啊

20:56.060 --> 20:58.060
现在应该没有这个问题

20:58.060 --> 20:59.060
看到了吗

20:59.060 --> 21:00.060
没有这个问题

21:00.060 --> 21:02.060
然后接下来总数

21:02.060 --> 21:04.060
总数据量

21:04.060 --> 21:06.060
是不是取决于我们传递过来的

21:06.060 --> 21:07.060
这个数据啊

21:07.060 --> 21:09.060
我们的数据里面

21:09.060 --> 21:11.060
在我们的处组件当中

21:11.060 --> 21:13.060
我们能拿到数据的总量吧

21:13.060 --> 21:14.060
像我们返回数据当中

21:14.060 --> 21:15.060
看这里

21:15.060 --> 21:16.060
是不是有个toto

21:16.060 --> 21:18.060
toto代表是总数据量

21:18.060 --> 21:19.060
所以这里面

21:19.060 --> 21:20.060
我们是不是需要把这个toto

21:20.060 --> 21:21.060
传递出去

21:21.060 --> 21:22.060
对不对

21:22.060 --> 21:23.060
还有我们的page size

21:23.060 --> 21:25.060
这里面是不是也用到了

21:25.060 --> 21:26.060
我们当前页

21:26.060 --> 21:27.060
是不是也用到了

21:27.060 --> 21:28.060
那么我们是不是就需要

21:28.060 --> 21:30.060
在我们处组件当中

21:30.060 --> 21:31.060
有一个

21:31.060 --> 21:34.060
这个印码的

21:34.060 --> 21:35.060
数据的存储

21:35.060 --> 21:36.060
对吧

21:36.060 --> 21:37.060
这里面应该存在的是

21:37.060 --> 21:39.060
我们当前的页数

21:39.060 --> 21:42.060
这里面我们叫它什么呢

21:42.060 --> 21:44.060
叫current对吧

21:44.060 --> 21:45.060
跟我们

21:45.060 --> 21:46.060
后面的

21:46.060 --> 21:47.060
组件里面的数据

21:47.060 --> 21:48.060
一的对应

21:48.060 --> 21:49.060
可以吧

21:49.060 --> 21:50.060
再接下来呢

21:50.060 --> 21:51.060
还有什么

21:51.060 --> 21:54.060
是不是还应该有这个

21:54.060 --> 21:56.060
page size

21:57.060 --> 21:58.060
对吧

21:58.060 --> 21:59.060
每页调数

21:59.060 --> 22:00.060
下有

22:00.060 --> 22:01.060
还应该有

22:01.060 --> 22:03.060
刚刚说的

22:03.060 --> 22:04.060
是不是这几个属性啊

22:04.060 --> 22:05.060
我们都需要

22:05.060 --> 22:06.060
给它写进去吧

22:06.060 --> 22:07.060
在这里

22:07.060 --> 22:09.060
都给它写进去

22:09.060 --> 22:10.060
那总调数

22:10.060 --> 22:11.060
我们就可以在这里面

22:11.060 --> 22:12.060
传递

22:12.060 --> 22:13.060
对吧

22:13.060 --> 22:14.060
每页

22:14.060 --> 22:15.060
当前是哪一页

22:15.060 --> 22:16.060
我们就可以拿到

22:16.060 --> 22:18.060
我们的page下面的current

22:18.060 --> 22:20.060
page size

22:20.060 --> 22:21.060
也可以拿到

22:21.060 --> 22:23.060
page下面的page size

22:23.060 --> 22:24.060
对吧

22:24.060 --> 22:25.060
然后接下来

22:25.060 --> 22:29.060
这里面

22:29.060 --> 22:30.060
我们需要改一下

22:30.060 --> 22:32.060
改成res的toto

22:32.060 --> 22:33.060
对吧

22:33.060 --> 22:34.060
总的数据调数

22:34.060 --> 22:35.060
然后接下来

22:35.060 --> 22:37.060
我们就可以把这个

22:37.060 --> 22:39.060
翻页的这些信息

22:39.060 --> 22:40.060
传递到我们的

22:40.060 --> 22:42.060
组件当中吧

22:42.060 --> 22:43.060
我们就可以通过

22:43.060 --> 22:44.060
一个page

22:44.060 --> 22:46.060
来传递一下

22:46.060 --> 22:47.060
可以吧

22:47.060 --> 22:48.060
然后接下来

22:48.060 --> 22:49.060
在我们的组件当中

22:49.060 --> 22:50.060
接收一下

22:50.060 --> 22:52.060
接收到这个page

22:52.060 --> 22:53.060
那这一回

22:53.060 --> 22:54.060
我们这里面

22:54.060 --> 22:56.060
用的就不是

22:56.060 --> 22:57.060
pagination了

22:57.060 --> 22:58.060
就是page了

22:58.060 --> 22:59.060
这个pagination

22:59.060 --> 23:00.060
就没有什么意义了

23:00.060 --> 23:01.060
对吧

23:01.060 --> 23:02.060
我们就可以把它删掉了

23:04.060 --> 23:05.060
对吧

23:05.060 --> 23:06.060
这回我们来看一下

23:06.060 --> 23:07.060
现在

23:09.060 --> 23:10.060
又有一些

23:10.060 --> 23:11.060
余法规范

23:11.060 --> 23:13.060
这个代码规范的问题了

23:13.060 --> 23:14.060
我为什么总说

23:14.060 --> 23:15.060
余法规范呢

23:16.060 --> 23:17.060
好了

23:17.060 --> 23:18.060
现在来看一下

23:18.060 --> 23:19.060
刷新一下

23:20.060 --> 23:21.060
说没有问题

23:21.060 --> 23:22.060
对吧

23:22.060 --> 23:24.060
你看当我翻页的时候

23:24.060 --> 23:25.060
翻页

23:25.060 --> 23:26.060
我是不是还需要做处理

23:26.060 --> 23:27.060
翻页的话

23:27.060 --> 23:28.060
我需要把数据

23:28.060 --> 23:29.060
进行一个翻页处理

23:29.060 --> 23:30.060
那我们接下来

23:30.060 --> 23:32.060
来看一下翻页

23:32.060 --> 23:33.060
翻页的话

23:33.060 --> 23:34.060
就需要一个change

23:34.060 --> 23:35.060
方法了吧

23:35.060 --> 23:36.060
那我们接下来

23:36.060 --> 23:37.060
来看一下table里面

23:37.060 --> 23:38.060
有没有这个change

23:40.060 --> 23:41.060
找一下table

23:41.060 --> 23:42.060
table

23:44.060 --> 23:46.560
在这里

23:46.560 --> 23:49.560
有没有翻页的处理函数呢

23:50.560 --> 23:51.560
时间处理函数

23:51.560 --> 23:52.560
找一下

23:53.560 --> 23:54.560
这里

23:54.560 --> 23:55.560
是不是有个change

23:55.560 --> 23:56.560
这个change

23:56.560 --> 23:57.560
是不是就是可以在

23:57.560 --> 23:59.560
分页排序签选变化的时候

23:59.560 --> 24:00.560
出发的

24:00.560 --> 24:01.560
对不对

24:01.560 --> 24:02.560
那么我们就可以

24:02.560 --> 24:08.300
给它直接绑定这个change

24:08.300 --> 24:09.300
对吧

24:09.300 --> 24:10.300
那我们管它

24:10.300 --> 24:11.300
给它起一个

24:12.300 --> 24:13.300
起一个名字吧

24:13.300 --> 24:17.940
叫change table

24:17.940 --> 24:18.940
这一笔le

24:18.940 --> 24:19.940
对吧

24:19.940 --> 24:20.940
修改表格

24:20.940 --> 24:21.940
信息的时候

24:21.940 --> 24:22.940
我们就出发

24:22.940 --> 24:24.940
或者直接写个change page

24:25.940 --> 24:26.940
我们能修改的

24:26.940 --> 24:27.940
也就是这样的一个

24:27.940 --> 24:28.940
一码对

24:28.940 --> 24:29.940
对不对

24:29.940 --> 24:30.940
然后接下来

24:30.940 --> 24:32.940
在我们的master的下面

24:32.940 --> 24:33.940
找一下

24:33.940 --> 24:34.940
我这里面没有写master

24:34.940 --> 24:35.940
对不对

24:36.940 --> 24:38.940
mit-s

24:38.940 --> 24:40.940
写上这个方法

24:41.940 --> 24:43.940
接收到它的一个信息

24:43.940 --> 24:44.940
对不对

24:44.940 --> 24:45.940
我们来看一下

24:45.940 --> 24:46.940
它切换之后

24:46.940 --> 24:48.940
它的数据是什么

24:48.940 --> 24:54.380
来看一下

24:55.380 --> 24:56.380
好

24:56.380 --> 24:57.380
我们切换一下

24:57.380 --> 24:58.380
现在报了个错

24:58.380 --> 24:59.380
告诉我们change

24:59.380 --> 25:00.380
没有定义吗

25:00.380 --> 25:02.380
来重新的刷新一下

25:02.380 --> 25:05.340
好了

25:05.340 --> 25:06.340
没有

25:06.340 --> 25:07.340
刚刚应该是在我写的

25:07.340 --> 25:08.340
编写的时候

25:08.340 --> 25:09.340
它报的错

25:09.340 --> 25:10.340
当我切换的时候

25:10.340 --> 25:11.340
你看一下

25:11.340 --> 25:12.340
我们拿到的

25:12.340 --> 25:13.340
是不是就可以

25:13.340 --> 25:15.340
拿到当前的这些数据

25:15.340 --> 25:16.340
对吧

25:16.340 --> 25:17.340
翻页的这些信息

25:17.340 --> 25:19.340
那我们拿到这个信息之后

25:19.340 --> 25:21.340
是不是需要传递出去

25:21.340 --> 25:22.340
对吧

25:22.340 --> 25:23.340
传递到它的复原组身上

25:23.340 --> 25:24.340
那我们就需要

25:24.340 --> 25:25.340
通过一个

25:25.340 --> 25:27.340
amate方法

25:27.340 --> 25:28.340
传递

25:28.340 --> 25:29.340
把我们的change

25:29.340 --> 25:30.340
配置

25:30.340 --> 25:31.340
这里面

25:31.340 --> 25:32.340
我们就叫change

25:32.340 --> 25:33.340
比较change

25:33.340 --> 25:34.340
配置了

25:34.340 --> 25:35.340
然后来

25:35.340 --> 25:36.340
把我们的配置传递出去

25:36.340 --> 25:38.340
那在我们的复读件当中

25:38.340 --> 25:39.340
我就需要接收一下

25:39.340 --> 25:40.340
对吧

25:40.340 --> 25:41.340
change一下

25:42.340 --> 25:43.340
change

25:43.340 --> 25:44.340
配置

25:44.340 --> 25:47.160
change

25:47.160 --> 25:48.160
配置

25:48.160 --> 25:51.540
可以把翻页

25:51.540 --> 25:52.540
那翻页的话

25:52.540 --> 25:53.540
我们要做的

25:53.540 --> 25:55.540
拿到翻页的数据

25:55.540 --> 25:56.540
把这个配置

25:57.540 --> 25:59.540
我们改变当前的这个配置

25:59.540 --> 26:01.540
ges2配置

26:01.540 --> 26:03.910
等于配置

26:03.910 --> 26:04.910
对吧

26:04.910 --> 26:05.910
然后接下来

26:05.910 --> 26:06.910
调用一下

26:06.910 --> 26:08.910
获取数据的一个方法

26:09.910 --> 26:10.910
是不是就可以了

26:10.910 --> 26:11.910
现在我们来看

26:12.910 --> 26:14.910
又出现这样的一个

26:15.910 --> 26:17.910
代码规范了

26:18.910 --> 26:19.910
OK 现在呢

26:20.910 --> 26:21.910
看一下

26:21.910 --> 26:22.910
现在是不是可以了

26:22.910 --> 26:23.910
这回没有问题

26:24.910 --> 26:25.910
往下

26:25.910 --> 26:26.910
继续往下来看

26:26.910 --> 26:27.910
翻页第二页

26:27.910 --> 26:28.910
或者第二页数据

26:28.910 --> 26:29.910
第三页数据

26:29.910 --> 26:30.910
第五页数据

26:30.910 --> 26:31.910
第六页数据

26:31.910 --> 26:32.910
第七页数据

26:33.910 --> 26:34.910
这个是不是OK了

26:35.910 --> 26:36.910
对吧

26:36.910 --> 26:37.910
现在没有什么问题吧

26:39.910 --> 26:41.910
二 四 六 八条

26:41.910 --> 26:43.910
第六页数据应该是十条

26:43.910 --> 26:44.910
因为我们一共

26:44.910 --> 26:45.910
六十八条数据嘛

26:45.910 --> 26:46.910
对吧

26:46.910 --> 26:47.910
现在

26:48.910 --> 26:49.910
可以了吧

26:49.910 --> 26:50.910
然后接下来

26:50.910 --> 26:51.910
就是我们一面展示

26:51.910 --> 26:52.910
这里面有点问题

26:52.910 --> 26:54.910
一面展示内幕

26:54.910 --> 26:55.910
我们需要拿到的是

26:55.910 --> 26:57.910
所有内幕数据里面的

26:57.910 --> 26:59.910
这样的一个文字

26:59.910 --> 27:00.910
对不对

27:00.910 --> 27:01.910
那我是不是就需要

27:01.910 --> 27:03.910
读取到对应的

27:03.910 --> 27:04.910
这个内幕

27:05.910 --> 27:06.910
它的一个名字

27:06.910 --> 27:07.910
那我们可以怎么做

27:07.910 --> 27:08.910
我们内幕的数据

27:08.910 --> 27:09.910
相对来说比较少

27:10.910 --> 27:11.910
所以就里面

27:11.910 --> 27:12.910
我们第一种方式

27:12.910 --> 27:13.910
我们可以

27:13.910 --> 27:15.910
在我们的副组件当中

27:15.910 --> 27:16.910
我把这个内幕

27:16.910 --> 27:17.910
先获取过来

27:17.910 --> 27:18.910
对不对

27:18.910 --> 27:19.910
那我们在这里

27:20.910 --> 27:21.910
副组件里面

27:21.910 --> 27:22.910
之前内幕

27:22.910 --> 27:23.910
是不是写在搜索里面了

27:23.910 --> 27:24.910
那我们接下来

27:24.910 --> 27:25.910
是不是需要把这个

27:25.910 --> 27:26.910
搜索里面的

27:26.910 --> 27:28.910
内幕的数据

27:28.910 --> 27:29.910
在我们的表格当中

27:29.910 --> 27:30.910
我们也需要用到

27:30.910 --> 27:32.910
我需要进行一个检索

27:32.910 --> 27:33.910
对吧

27:33.910 --> 27:34.910
检索到

27:34.910 --> 27:35.910
它的ID值为这个的

27:35.910 --> 27:36.910
内幕

27:36.910 --> 27:37.910
对不对

27:37.910 --> 27:38.910
所以这里面

27:38.910 --> 27:40.910
在它里面存储的话

27:40.910 --> 27:41.910
并不是很好

27:41.910 --> 27:42.910
那怎么办

27:42.910 --> 27:44.910
我们就可以把它拿出来

27:45.910 --> 27:46.910
把这个

27:46.910 --> 27:48.910
内幕的数据拿出来

27:49.910 --> 27:50.910
然后把这个数据

27:50.910 --> 27:51.910
动态的传递过来

27:52.910 --> 27:56.440
来通过一个PRO

27:57.440 --> 27:58.440
传递过来

28:00.440 --> 28:01.440
叫CATGREED LIST

28:02.440 --> 28:03.440
RO LIST

28:05.440 --> 28:06.440
对吧

28:06.440 --> 28:07.440
我们传递过来

28:07.440 --> 28:08.440
然后在我们的表格

28:08.440 --> 28:09.440
这个里面

28:10.440 --> 28:11.440
在我们的

28:11.440 --> 28:12.440
副字页面当中

28:12.440 --> 28:13.440
我们动态的去传递一下

28:14.440 --> 28:16.440
或者直接传递个data吧

28:18.440 --> 28:22.440
叫CATGREED LIST

28:23.440 --> 28:24.440
我们接下来

28:24.440 --> 28:25.440
在数据里面

28:25.440 --> 28:27.440
去需要有这样的一个数据

28:30.140 --> 28:31.140
然后我们需要去获取一下

28:31.140 --> 28:32.140
对不对

28:32.140 --> 28:33.140
那我们需要把这个

28:34.140 --> 28:35.140
API引入一下

28:35.140 --> 28:38.140
CATGORLIST

28:39.140 --> 28:40.140
API

28:40.140 --> 28:41.140
from

28:42.140 --> 28:43.140
API下面的

28:44.140 --> 28:45.140
CATGREED

28:47.580 --> 28:48.580
对吧

28:48.580 --> 28:49.580
然后我们在

28:49.580 --> 28:50.580
创建这里

28:51.580 --> 28:52.580
创建的时候

28:52.580 --> 28:53.580
创建这个组建的时候

28:53.580 --> 28:54.580
我们就需要去获取到

28:56.580 --> 28:57.580
点

28:57.580 --> 28:58.580
这个

28:58.580 --> 29:00.580
刚刚是不是拿过来了

29:00.580 --> 29:01.580
这个

29:01.580 --> 29:03.580
应该是CATGREED LIST

29:03.580 --> 29:04.580
API对吧

29:04.580 --> 29:05.580
去获取一下

29:05.580 --> 29:07.580
然后把这个数据拿过来

29:07.580 --> 29:08.580
对不对

29:08.580 --> 29:09.580
这样是不是就OK了

29:09.580 --> 29:10.580
然后在我们的

29:10.580 --> 29:11.580
在我们的

29:11.580 --> 29:12.580
这个页面当中

29:12.580 --> 29:13.580
在我们的

29:13.580 --> 29:15.580
搜索的组建当中

29:15.580 --> 29:16.580
我们把这个数据

29:16.580 --> 29:17.580
名字改一下

29:17.580 --> 29:18.580
改成data

29:18.580 --> 29:19.580
这里面也是

29:19.580 --> 29:20.580
改成data

29:22.580 --> 29:23.580
这样看一下

29:24.580 --> 29:25.580
我们来

29:26.580 --> 29:27.580
规范一下

29:27.580 --> 29:28.580
我们的代码

29:30.580 --> 29:31.580
现在来看一下

29:31.580 --> 29:32.580
是不是就一样的

29:32.580 --> 29:33.580
包了个错

29:33.580 --> 29:34.580
什么错误看一下

29:35.580 --> 29:37.580
告诉我们API用

29:37.580 --> 29:38.580
这个定义了

29:38.580 --> 29:39.580
但是没有用

29:39.580 --> 29:40.580
对吧

29:40.580 --> 29:41.580
回过头来看一下

29:41.580 --> 29:42.580
哪里

29:42.580 --> 29:43.580
应该就是这里吧

29:43.580 --> 29:44.580
组建当中的

29:44.580 --> 29:45.580
对不对

29:45.580 --> 29:46.580
把它删掉就可以了

29:46.580 --> 29:47.580
再接着

29:47.580 --> 29:48.580
再重新的

29:48.580 --> 29:49.580
去执行一下

29:49.580 --> 29:50.580
软定起

29:53.210 --> 29:54.210
这回没有问题了

29:54.210 --> 29:55.210
这回来看一下

29:55.210 --> 29:56.210
现在

29:56.210 --> 29:57.210
OK

29:57.210 --> 29:58.210
然后我们的这里

29:58.210 --> 29:59.210
呢

29:59.210 --> 30:00.210
是不是也可以选中

30:00.210 --> 30:01.210
对吧

30:01.210 --> 30:02.210
然后接下来

30:02.210 --> 30:03.210
在我们的内幕的

30:03.210 --> 30:04.210
这个展示这里面

30:04.210 --> 30:05.210
我们也需要去

30:05.210 --> 30:07.210
拿去到指定的

30:07.210 --> 30:08.210
这样的一个名字

30:08.210 --> 30:09.210
对不对

30:09.210 --> 30:10.210
那我这里面

30:10.210 --> 30:11.210
就需要把这个

30:11.210 --> 30:12.210
内幕的数据

30:12.210 --> 30:13.210
传递到

30:14.210 --> 30:15.210
我们的

30:15.210 --> 30:16.210
这个

30:16.210 --> 30:17.210
表格当中了

30:17.210 --> 30:18.210
对不对

30:18.210 --> 30:19.210
但是传递表格当中

30:19.210 --> 30:20.210
还不是很好

30:20.210 --> 30:21.210
那怎么办呢

30:21.210 --> 30:23.210
我们是不是可以这样

30:23.210 --> 30:25.210
在我们传递之前

30:25.210 --> 30:26.210
我们这个

30:26.210 --> 30:27.210
表格数据

30:27.210 --> 30:28.210
获取过来的时候

30:28.210 --> 30:29.210
我们做一下处理

30:29.210 --> 30:30.210
是不是就可以了

30:30.210 --> 30:31.210
那也就在我们的

30:31.210 --> 30:33.210
副页面当中

30:33.210 --> 30:35.210
在获取到表格数据的时候

30:35.210 --> 30:37.210
我们做一下处理

30:37.210 --> 30:38.210
给它做一个

30:38.210 --> 30:39.210
Map

30:43.030 --> 30:44.030
做一个Map

30:45.030 --> 30:47.030
拿到每一条数据

30:47.030 --> 30:49.030
拿到每一条数据之后呢

30:49.030 --> 30:51.030
我们去看一下

30:51.030 --> 30:53.030
它的这个名字

30:53.030 --> 30:54.030
对吧

30:54.030 --> 30:55.030
那这个时候

30:55.030 --> 30:56.030
我们是不是需要

30:56.030 --> 30:57.030
开启归的List

30:57.030 --> 30:58.030
指这个

30:58.030 --> 30:59.030
列表数据啊

30:59.030 --> 31:01.030
就是我们内幕的列表吧

31:01.030 --> 31:02.030
所以这里面

31:02.030 --> 31:03.030
你在这里写

31:03.030 --> 31:04.030
还不是特别好啊

31:05.030 --> 31:06.030
刚刚写到这

31:06.030 --> 31:07.030
感觉不是很好

31:07.030 --> 31:08.030
为什么不是很好

31:08.030 --> 31:09.030
是因为

31:09.030 --> 31:10.030
它的这个列表

31:10.030 --> 31:11.030
你不确定

31:11.030 --> 31:12.030
它俩谁先

31:12.030 --> 31:13.030
返回数据

31:13.030 --> 31:14.030
对吧

31:14.030 --> 31:15.030
谁先

31:15.030 --> 31:16.030
拿取到

31:16.030 --> 31:17.030
这样的一个数据

31:17.030 --> 31:18.030
那怎么办

31:18.030 --> 31:19.030
我们可以怎么做

31:19.030 --> 31:20.030
我们是不是就可以

31:20.030 --> 31:22.030
在我们的宣扬的时候

31:22.030 --> 31:23.030
把这个数据

31:23.030 --> 31:25.030
我们先传递到表格身上

31:26.030 --> 31:28.030
开启GridList

31:28.030 --> 31:32.050
我传递到表格身上

31:32.050 --> 31:34.050
然后在这个表格数据当中呢

31:34.050 --> 31:36.050
我们做一个映射

31:36.050 --> 31:40.550
做一个映射

31:40.550 --> 31:42.550
在我们的data里面

31:42.550 --> 31:43.550
拿到这个数据

31:43.550 --> 31:45.930
对吧

31:45.930 --> 31:46.930
我们需要先去

31:46.930 --> 31:47.930
拿到这个数据

31:47.930 --> 31:48.930
开启Grid

31:49.930 --> 31:50.930
ok

31:50.930 --> 31:51.930
哦

31:51.930 --> 31:52.930
R1

31:52.930 --> 31:53.930
List

31:53.930 --> 31:54.930
拿到这个数据

31:54.930 --> 31:55.930
然后我们需要

31:55.930 --> 31:56.930
进行一个便利吧

31:56.930 --> 31:57.930
对吧

31:57.930 --> 31:58.930
那我最后便利吧

31:58.930 --> 31:59.930
对吧

31:59.930 --> 32:00.930
那我最后便利完了之后

32:00.930 --> 32:01.930
我需要渲染到哪

32:01.930 --> 32:02.930
是不是需要

32:02.930 --> 32:03.930
渲染到的是

32:03.930 --> 32:05.930
我们内幕的这个选项当中

32:05.930 --> 32:06.930
对吧

32:06.930 --> 32:07.930
所以这里面

32:07.930 --> 32:09.930
我们要渲染到这个位置

32:09.930 --> 32:11.930
我们就需要把它

32:11.930 --> 32:13.930
重新的去

32:13.930 --> 32:15.930
渲染它里面的文本

32:15.930 --> 32:16.930
那这个文本

32:16.930 --> 32:17.930
我们看一下

32:17.930 --> 32:19.930
动态的渲染的

32:19.930 --> 32:21.930
这个属性是什么

32:21.930 --> 32:22.930
找一下

32:22.930 --> 32:23.930
这个属性应该是

32:23.930 --> 32:25.930
Render

32:25.930 --> 32:27.930
叫

32:28.930 --> 32:29.930
叫Render

32:29.930 --> 32:30.930
什么了

32:30.930 --> 32:31.930
往下去找

32:31.930 --> 32:32.930
啊

32:33.930 --> 32:34.930
Customer Render

32:34.930 --> 32:35.930
对吧

32:35.930 --> 32:36.930
代表是

32:36.930 --> 32:38.930
这个渲染函数

32:38.930 --> 32:39.930
它是渲染这样

32:39.930 --> 32:40.930
这一列的

32:40.930 --> 32:41.930
这样的一个渲染函数

32:41.930 --> 32:42.930
啊

32:42.930 --> 32:43.930
我们就给它写在这

32:43.930 --> 32:44.930
这个方式里面

32:44.930 --> 32:45.930
会有一些参数

32:45.930 --> 32:47.930
这个参数都有啥

32:47.930 --> 32:48.930
它有个Tax的

32:48.930 --> 32:49.930
代表的是当前的文本

32:49.930 --> 32:50.930
对吧

32:50.930 --> 32:51.930
还有这个Recard的

32:51.930 --> 32:53.930
其实我们要

32:53.930 --> 32:54.930
只要第二个

32:54.930 --> 32:55.930
才说就可以了

32:55.930 --> 32:56.930
Recard的

32:56.930 --> 32:57.930
代表是当前

32:57.930 --> 32:59.930
这一行的数据

32:59.930 --> 33:00.930
拿到这个数据之后

33:00.930 --> 33:02.930
我们要渲染的是什么

33:02.930 --> 33:03.930
是不是需要渲染的是

33:03.930 --> 33:05.930
它里面

33:05.930 --> 33:07.930
Recard的

33:07.930 --> 33:08.930
来

33:08.930 --> 33:09.930
我们需要拿到

33:09.930 --> 33:11.930
需要拿到

33:11.930 --> 33:14.930
内幕对应的名字

33:14.930 --> 33:15.930
对不对

33:15.930 --> 33:16.930
名称

33:16.930 --> 33:17.930
那对应的名字

33:17.930 --> 33:19.930
我们知道是在

33:19.930 --> 33:20.930
这个内幕

33:20.930 --> 33:21.930
所有的数据

33:21.930 --> 33:22.930
是在

33:22.930 --> 33:24.930
cf.categraylist里面

33:24.930 --> 33:25.930
对吧

33:25.930 --> 33:27.930
我们拿到了吧

33:27.930 --> 33:28.930
我看一下

33:28.930 --> 33:30.930
是不是在这里

33:30.930 --> 33:31.930
在这里

33:31.930 --> 33:32.930
那我就需要便利了

33:32.930 --> 33:33.930
对不对

33:33.930 --> 33:34.930
便利一下

33:34.930 --> 33:36.930
cf.categraylist

33:36.930 --> 33:41.900
点for each一下

33:41.900 --> 33:45.110
for each一下

33:45.110 --> 33:46.110
然后我们

33:46.110 --> 33:47.110
把它的id

33:47.110 --> 33:48.110
拿过来

33:48.110 --> 33:50.110
便利一下

33:50.110 --> 33:51.110
这样吧

33:51.110 --> 33:52.110
我们

33:52.110 --> 33:54.110
还是便利吧

33:54.110 --> 33:55.110
便利一下

33:55.110 --> 33:56.110
拿到它下面的

33:56.110 --> 33:57.110
所有的信息

33:57.110 --> 33:59.110
c

33:59.110 --> 34:03.320
每一个内幕对应的信息

34:03.320 --> 34:04.320
让我们判断一下

34:04.320 --> 34:06.320
它的c.id

34:06.320 --> 34:07.320
它是不是等于我们

34:07.320 --> 34:09.320
当前的Recard的

34:09.320 --> 34:11.320
叫categray的值

34:12.320 --> 34:13.320
如果是的话

34:13.320 --> 34:14.320
我们就最终

34:14.320 --> 34:15.320
发挥的就是

34:15.320 --> 34:16.320
这个test的文本

34:16.320 --> 34:17.320
对吧

34:17.320 --> 34:18.320
内幕

34:18.320 --> 34:19.320
这个

34:19.320 --> 34:21.320
来提一个内幕吧

34:21.320 --> 34:23.320
等于一个空的

34:24.320 --> 34:25.320
我们这里面

34:25.320 --> 34:26.320
就可以让这个内幕

34:26.320 --> 34:27.320
等于

34:27.320 --> 34:29.320
我们c.name值

34:29.320 --> 34:30.320
最终

34:30.320 --> 34:31.320
我们把这个内幕

34:31.320 --> 34:32.320
返回出去

34:32.320 --> 34:34.320
是不是这样就可以了

34:34.320 --> 34:35.320
那现在我们

34:35.320 --> 34:36.320
来看一下吧

34:36.320 --> 34:38.320
我们的页面

34:38.320 --> 34:40.320
又有一些

34:40.320 --> 34:42.320
代码规范的东西

34:43.320 --> 34:46.630
解决一下

34:46.630 --> 34:47.630
好

34:47.630 --> 34:48.630
报了一个错

34:48.630 --> 34:49.630
告诉我们

34:49.630 --> 34:50.630
什么

34:50.630 --> 34:51.630
如果超

34:51.630 --> 34:52.630
长了

34:52.630 --> 34:53.630
超长的话

34:53.630 --> 34:58.630
我们给它

34:58.630 --> 34:59.630
换行就好了

34:59.630 --> 35:04.630
这个也是

35:04.630 --> 35:05.630
每个属性

35:05.630 --> 35:09.990
好

35:09.990 --> 35:14.420
这回呢

35:14.420 --> 35:15.420
这回没有问题了

35:15.420 --> 35:18.980
回过来看一下

35:18.980 --> 35:19.980
来

35:19.980 --> 35:21.980
刷新一下

35:21.980 --> 35:23.980
我们的内幕

35:23.980 --> 35:24.980
但是内幕这里面

35:24.980 --> 35:25.980
我是不是写的有问题

35:25.980 --> 35:27.980
内幕对应的

35:27.980 --> 35:29.980
不是它吧

35:29.980 --> 35:31.980
回过来看一下

35:31.980 --> 35:33.980
内幕对应的数据

35:33.980 --> 35:35.980
我是不是

35:35.980 --> 35:36.980
列表当中

35:36.980 --> 35:37.980
table当中

35:37.980 --> 35:39.980
内幕对应的是categray

35:39.980 --> 35:40.980
没有问题

35:40.980 --> 35:42.980
price

35:42.980 --> 35:44.980
预售价

35:44.980 --> 35:46.980
没有问题

35:46.980 --> 35:47.980
但是我会发现

35:47.980 --> 35:48.980
我的内幕

35:48.980 --> 35:50.980
下面对应的

35:50.980 --> 35:51.980
这一列

35:51.980 --> 35:52.980
好像有点问题

35:52.980 --> 35:53.980
那看一下

35:53.980 --> 35:55.980
现在空来还报错了

35:55.980 --> 35:56.980
告诉我们

35:56.980 --> 35:57.980
categray list

35:57.980 --> 35:58.980
没有读到

35:58.980 --> 35:59.980
是不是

35:59.980 --> 36:00.980
就找一下

36:00.980 --> 36:04.380
没有读到

36:04.380 --> 36:05.380
这样的一个数据

36:05.380 --> 36:06.380
那回过来看一下

36:06.380 --> 36:07.380
呗

36:07.380 --> 36:08.380
怎么回事

36:08.380 --> 36:09.380
是不是因为

36:09.380 --> 36:10.380
像我们渲染的时候

36:10.380 --> 36:11.380
我们这个数据

36:11.380 --> 36:12.380
可能没有传递过来

36:12.380 --> 36:14.380
那这怎么办呢

36:14.380 --> 36:15.380
那也就是说

36:15.380 --> 36:17.380
这种方式行不通了

36:17.380 --> 36:18.380
对吧

36:18.380 --> 36:20.380
行不通怎么办

36:20.380 --> 36:21.380
我们这里面

36:21.380 --> 36:22.380
还有另一种方式

36:22.380 --> 36:23.380
怎么办呢

36:23.380 --> 36:24.380
我们是不是

36:24.380 --> 36:25.380
就可以在我们

36:25.380 --> 36:27.380
拿到数据的时候

36:28.380 --> 36:29.380
把这个数据

36:29.380 --> 36:30.380
可以删掉了

36:30.380 --> 36:32.380
拿到数据的时候呢

36:32.380 --> 36:33.380
我们

36:33.380 --> 36:35.380
再给它添加上一个数据

36:35.380 --> 36:37.380
叫categrayname

36:37.380 --> 36:38.380
可以吧

36:38.380 --> 36:39.380
这个内幕

36:39.380 --> 36:40.380
我就让它展示的

36:40.380 --> 36:42.380
这个categrayname的数据

36:42.380 --> 36:43.380
然后接下来

36:43.380 --> 36:46.380
在我们的表格数据当中

36:46.380 --> 36:48.380
获取表格数据这里

36:48.380 --> 36:50.380
我们再一次的

36:50.380 --> 36:52.380
拿到这个数据

36:52.380 --> 36:53.380
对吧

36:53.380 --> 36:54.380
便利一下这个数据

36:54.380 --> 36:56.380
在这里面便利一下吧

36:56.380 --> 36:57.380
点

36:57.380 --> 36:58.380
map

36:58.380 --> 37:00.380
拿到数据

37:00.380 --> 37:02.380
拿到数据之后呢

37:02.380 --> 37:04.380
我是不是就需要

37:04.380 --> 37:05.380
等到

37:05.380 --> 37:06.380
也就是说

37:06.380 --> 37:07.380
我需要拿到

37:07.380 --> 37:08.380
我们所有的

37:08.380 --> 37:09.380
列表的数据

37:09.380 --> 37:10.380
对不对

37:10.380 --> 37:11.380
就是这个吧

37:11.380 --> 37:12.380
那我们

37:12.380 --> 37:13.380
就里面就设计到

37:13.380 --> 37:14.380
这个列表数据

37:14.380 --> 37:15.380
什么时候读取完

37:15.380 --> 37:16.380
那我是不是需要

37:16.380 --> 37:18.380
等到它完成之后啊

37:18.380 --> 37:19.380
我们才

37:19.380 --> 37:22.380
进行获取数据

37:22.380 --> 37:23.380
对不对

37:23.380 --> 37:25.380
那所以就里面啊

37:25.380 --> 37:27.380
我们把获取表格数据写在这

37:27.380 --> 37:29.380
写在它之后

37:29.380 --> 37:30.380
然后我们上面这个呢

37:30.380 --> 37:32.380
让它是一个同步的

37:32.380 --> 37:34.380
就是先让它获取

37:35.380 --> 37:36.380
先让它获取

37:36.380 --> 37:38.380
我们的内幕的数据

37:38.380 --> 37:39.380
然后再进行下面的

37:39.380 --> 37:41.380
这个表格数据的一个获取

37:41.380 --> 37:42.380
这个时候

37:42.380 --> 37:44.380
是不是它要能确定

37:44.380 --> 37:45.380
AS-BNC

37:45.380 --> 37:46.380
这个时候

37:46.380 --> 37:47.380
它要能确定

37:47.380 --> 37:48.380
我们的category list

37:48.380 --> 37:49.380
它已经有值了

37:49.380 --> 37:50.380
对不对

37:50.380 --> 37:51.380
那接下来

37:51.380 --> 37:52.380
我们在这里面

37:53.380 --> 37:54.380
已经处理呗

37:55.380 --> 37:56.380
怎么处理

37:57.380 --> 37:58.380
需要便利了吧

37:58.380 --> 37:59.380
看一下它里面

37:59.380 --> 38:01.380
到底有没有ID值为

38:01.380 --> 38:03.380
我们当前数据的

38:03.380 --> 38:04.380
这个内幕的ID值

38:04.380 --> 38:05.380
如果有的话

38:05.380 --> 38:06.380
我们给它添加一个

38:06.380 --> 38:07.380
这个内幕名字

38:07.380 --> 38:08.380
对吧

38:08.380 --> 38:09.380
那这里面有吗

38:10.380 --> 38:12.380
更快速的一种方式

38:12.380 --> 38:13.380
可以怎么去做呢

38:13.380 --> 38:14.380
我们可以在

38:14.380 --> 38:15.380
获取到这个

38:15.380 --> 38:17.380
内幕的列表之后

38:17.380 --> 38:19.380
我们把它做一个映射

38:19.380 --> 38:20.380
有一个

38:20.380 --> 38:21.380
内幕的一个映射

38:22.380 --> 38:23.380
category

38:23.380 --> 38:24.380
OBG

38:26.380 --> 38:27.380
这个内幕的映射呢

38:27.380 --> 38:28.380
对应着

38:28.380 --> 38:29.380
它的ID

38:29.380 --> 38:30.380
对应着它里面的

38:30.380 --> 38:31.380
所有的信息

38:31.380 --> 38:32.380
对吧

38:32.380 --> 38:33.380
那我这里面

38:33.380 --> 38:34.380
就可以便利一下

38:34.380 --> 38:36.380
就res.data.foe

38:36.380 --> 38:37.380
取一下

38:39.820 --> 38:40.820
然后拿到

38:40.820 --> 38:41.820
我们里面的

38:41.820 --> 38:42.820
所有的数据

38:43.820 --> 38:44.820
然后判断一下

38:44.820 --> 38:45.820
我们的OBG

38:45.820 --> 38:46.820
里面

38:46.820 --> 38:47.820
我们的

38:47.820 --> 38:48.820
category

38:48.820 --> 38:49.820
des.category

38:51.820 --> 38:52.820
categoryOBG

38:52.820 --> 38:54.820
它下面是否有

38:54.820 --> 38:56.820
这个ID值为它的元素

38:56.820 --> 38:57.820
对吧

38:57.820 --> 38:58.820
如果有的话

38:59.820 --> 39:00.820
如果没有的话

39:00.820 --> 39:02.820
我们给它去添加

39:03.820 --> 39:04.820
或者这边

39:04.820 --> 39:05.820
直接去给它添加

39:05.820 --> 39:06.820
是不是可以

39:06.820 --> 39:07.820
des.category

39:07.820 --> 39:08.820
OBG

39:09.820 --> 39:11.820
它的item的ID值

39:12.820 --> 39:13.820
为它的P值

39:13.820 --> 39:14.820
然后

39:14.820 --> 39:15.820
里面的数据

39:15.820 --> 39:16.820
就是它的

39:17.820 --> 39:18.820
当前内幕的

39:18.820 --> 39:19.820
所有的信息

39:20.820 --> 39:21.820
那这样一来

39:21.820 --> 39:22.820
在我们的table这里

39:22.820 --> 39:23.820
我就可以判断一下

39:23.820 --> 39:24.820
直接给它添加

39:24.820 --> 39:25.820
就可以了

39:25.820 --> 39:26.820
不需要给它判断了

39:26.820 --> 39:27.820
对吧

39:27.820 --> 39:28.820
直接把它的

39:28.820 --> 39:29.820
数据拿过来

39:29.820 --> 39:30.820
再加上一个

39:30.820 --> 39:31.820
category

39:31.820 --> 39:32.820
name

39:32.820 --> 39:33.820
等于什么

39:33.820 --> 39:35.820
应该是des.category

39:35.820 --> 39:36.820
OBG的

39:36.820 --> 39:37.820
item的

39:37.820 --> 39:38.820
category

39:38.820 --> 39:39.820
这样的一个值

39:40.820 --> 39:41.820
对吧

39:41.820 --> 39:42.820
这回不就好了吗

39:42.820 --> 39:43.820
现在来看一下

39:47.710 --> 39:48.710
各式画一下

39:48.710 --> 39:49.710
现在OK了

39:49.710 --> 39:50.710
来

39:50.710 --> 39:51.710
这回我们的内幕

39:51.710 --> 39:53.710
看一下帮我们报错

39:53.710 --> 39:54.710
刷新一下

39:54.710 --> 39:59.070
好像没有报错

39:59.070 --> 40:00.070
但是我们这里面

40:00.070 --> 40:01.070
也没有显示出来

40:01.070 --> 40:02.070
对吧

40:02.070 --> 40:03.070
那看一下为什么有显示出来

40:03.070 --> 40:04.070
帮

40:04.070 --> 40:05.070
打印一下

40:05.070 --> 40:09.920
我们在便利的时候

40:09.920 --> 40:10.920
看一下我们的

40:12.920 --> 40:13.920
在这里面

40:13.920 --> 40:14.920
打印一下

40:14.920 --> 40:15.920
console.log

40:15.920 --> 40:16.920
des.category

40:16.920 --> 40:17.920
OBG

40:17.920 --> 40:18.920
我们看一下

40:18.920 --> 40:19.920
里面有没有信息

40:19.920 --> 40:23.700
来

40:23.700 --> 40:24.700
这里面是有的

40:24.700 --> 40:25.700
对不对

40:25.700 --> 40:26.700
一直都有的

40:26.700 --> 40:28.700
然后我们的id值

40:28.700 --> 40:29.700
每次便利的时候

40:29.700 --> 40:30.700
我们打印一下

40:30.700 --> 40:31.700
它的值

40:31.700 --> 40:34.400
也就是

40:36.400 --> 40:37.400
这样吧

40:38.400 --> 40:45.450
好

40:45.450 --> 40:46.450
然后上面打印一下

40:46.450 --> 40:47.450
console.log

40:47.450 --> 40:54.020
des.category

40:54.020 --> 40:55.020
OBG的

40:55.020 --> 40:56.020
item的

40:56.020 --> 40:57.020
category

40:57.020 --> 40:58.020
这一下

41:04.940 --> 41:05.940
我看一下

41:05.940 --> 41:06.940
我这里面展示的

41:06.940 --> 41:07.940
是不是category name

41:08.940 --> 41:09.940
对吧

41:09.940 --> 41:10.940
然后这个数据

41:10.940 --> 41:11.940
我们不需要了

41:11.940 --> 41:12.940
我们可以给它删掉

41:13.940 --> 41:14.940
好

41:14.940 --> 41:15.940
现在来看一下

41:15.940 --> 41:16.940
刷新一下

41:16.940 --> 41:20.770
是不是都可以拿到

41:20.770 --> 41:21.770
都可以拿到之后

41:21.770 --> 41:22.770
我们来看一下

41:22.770 --> 41:23.770
我这里面

41:23.770 --> 41:25.770
应该拿起到

41:25.770 --> 41:26.770
它的一个内幕值

41:26.770 --> 41:27.770
对不对

41:27.770 --> 41:28.770
内幕值

41:28.770 --> 41:29.770
这回

41:29.770 --> 41:30.770
是不是可以了

41:30.770 --> 41:31.770
OK了吧

41:31.770 --> 41:32.770
把我们之前

41:32.770 --> 41:33.770
打印的东西

41:33.770 --> 41:34.770
都可以删掉了

41:35.770 --> 41:37.770
现在我们内幕的展示

41:37.770 --> 41:38.770
也就完成了

41:38.770 --> 41:40.770
然后再来看

41:40.770 --> 41:41.770
再往下

41:45.170 --> 41:46.170
看一下

41:46.170 --> 41:47.170
这里面还有打印

41:47.170 --> 41:48.170
都给它删掉

41:49.170 --> 41:50.170
还有什么

41:50.170 --> 41:51.170
是不是还有就是

41:51.170 --> 41:52.170
我们的上架状态

41:52.170 --> 41:53.170
上架状态

41:53.170 --> 41:54.170
我们需要

41:54.170 --> 41:56.170
读取到它的一个状态

41:56.170 --> 41:57.170
那上架状态的话

41:57.170 --> 41:58.170
我们就动态的

41:58.170 --> 41:59.170
去渲染一下吧

41:59.170 --> 42:01.170
去用customer render

42:03.170 --> 42:04.170
渲染一下

42:04.170 --> 42:05.170
拿到它里面的数据

42:05.170 --> 42:06.170
对吧

42:06.170 --> 42:07.170
首先

42:07.170 --> 42:08.170
第一个是text

42:08.170 --> 42:09.170
我们不需要recard

42:09.170 --> 42:10.170
我们需要的

42:10.170 --> 42:11.170
我们最终让它

42:11.170 --> 42:13.170
返回的是recard

42:15.170 --> 42:16.170
c

42:16.170 --> 42:17.170
ord吧

42:19.170 --> 42:20.170
叫recard

42:20.170 --> 42:21.170
c-a-r-d

42:21.170 --> 42:22.170
re

42:22.170 --> 42:23.170
c-a-r-d

42:24.170 --> 42:25.170
c-o-r-d

42:25.170 --> 42:26.170
对吧

42:26.170 --> 42:27.170
c-o-r-d

42:28.170 --> 42:29.170
第二

42:29.170 --> 42:31.170
它的spiders

42:31.170 --> 42:32.170
等于1

42:32.170 --> 42:33.170
如果是1的话

42:33.170 --> 42:34.170
代表是上架

42:34.170 --> 42:35.170
对吧

42:35.170 --> 42:36.170
然后如果是

42:36.170 --> 42:37.170
理由的话

42:37.170 --> 42:38.170
代表是下架

42:38.170 --> 42:41.250
我们就可以这样

42:41.250 --> 42:42.250
去写呗

42:42.250 --> 42:43.250
现在来看一下

42:43.250 --> 42:45.250
还是执行一下

42:45.250 --> 42:49.480
OK

42:49.480 --> 42:50.480
现在我们来看

42:51.480 --> 42:52.480
好 这回是不是

42:52.480 --> 42:53.480
也可以了

42:53.480 --> 42:54.480
现在我们所有的

42:54.480 --> 42:55.480
这个展示

42:55.480 --> 42:57.480
就已经展示完了呗

42:57.480 --> 42:58.480
翻页

42:58.480 --> 42:59.480
也没有什么问题

42:59.480 --> 43:00.480
对吧

43:00.480 --> 43:01.480
接下来

43:01.480 --> 43:02.480
就是做

43:02.480 --> 43:04.480
刪除和编辑的一个功能了

43:04.480 --> 43:05.480
那我们

43:06.480 --> 43:07.480
这两个功能

43:07.480 --> 43:08.480
下一小节

43:08.480 --> 43:09.480
继续休息一下

43:09.480 --> 43:10.480
好吧

