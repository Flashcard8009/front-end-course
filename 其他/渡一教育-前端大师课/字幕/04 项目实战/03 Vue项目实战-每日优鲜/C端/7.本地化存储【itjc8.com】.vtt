WEBVTT

00:00.430 --> 00:03.430
好了啊 同学们 咱们继续来讲

00:03.430 --> 00:06.630
那今天的这样一个主要内容是关于本地话存储

00:06.630 --> 00:10.430
我就是说 当我们添加的时候 这会一起做一个记录

00:10.430 --> 00:12.630
OK 上当课留了个小尾吧 什么的

00:12.630 --> 00:15.630
当我们切换的时候 并没有示意操作 是吧

00:15.630 --> 00:20.230
那这个什么原因呢 就是我们在这里面 在我们的list里面

00:20.230 --> 00:22.030
在这里面 对吧

00:22.030 --> 00:26.030
其实你切换相当于根据type进行一个刷新 对吧

00:26.030 --> 00:28.430
那在type呢 我们在这儿已经学好了

00:28.430 --> 00:31.430
那切换的时候并没执行 所以说在对底 干嘛呢

00:31.430 --> 00:35.430
让ZStar on refresh 执行一下刷新即可

00:35.430 --> 00:37.430
啊 刷新即可

00:37.430 --> 00:39.430
诶 刷新

00:39.430 --> 00:42.430
价格 诶 从高到低这样的一个排序 对吧

00:42.430 --> 00:46.430
诶 是可以的啊 包括销量 他有专门这样的一个自行排序

00:46.430 --> 00:47.430
OK 这是他啊

00:47.430 --> 00:50.430
那接下来干嘛呢 我们去搞

00:50.430 --> 00:53.430
这个商品的一个增加或者减少

00:53.430 --> 00:55.430
那这呢 就因为相对简单

00:55.430 --> 00:58.430
里面就没这个作图 或者说这个没拿过来哈

00:58.430 --> 01:01.430
那行了 这儿呢 咱们就直接写 这个比较简单

01:01.430 --> 01:03.430
就是一个加减号

01:03.430 --> 01:06.430
那OK 那回到我们的这块里面来

01:06.430 --> 01:09.430
那price啊 把tag press press

01:09.430 --> 01:12.430
下面的话 就是我们的所谓的counter 对吧

01:12.430 --> 01:15.430
在下面 在这里面 我们做一个加减操作

01:15.430 --> 01:17.430
OK 那在这儿

01:17.430 --> 01:21.430
DIV.counter

01:21.430 --> 01:23.430
CVWtr

01:23.430 --> 01:24.430
DIV.counter

01:24.430 --> 01:26.430
然后下面有什么呢 有三个DIV

01:26.430 --> 01:28.430
就是加减 还有中间显示那个数

01:28.430 --> 01:30.430
DIV.counter

01:30.430 --> 01:33.430
然后这里面是一个减这个加

01:33.430 --> 01:36.430
这个里面我们先写 加的时候就一个 或者十个 好吧

01:36.430 --> 01:38.430
写死 然后这个地方是个加

01:38.430 --> 01:40.430
这里面干嘛呢 用一个图片去表示的

01:40.430 --> 01:42.430
用一个图片去表示 图片地址

01:42.430 --> 01:44.430
在这儿 一个是减 一个是加号

01:44.430 --> 01:50.500
把我们考核过来

01:50.500 --> 01:51.500
这儿 再来一个

01:51.500 --> 02:00.740
OK 有这两个地址

02:00.740 --> 02:03.740
那当然呢 他们的布局呢 咱也得写一下啊

02:03.740 --> 02:05.740
也得写一下

02:05.740 --> 02:08.740
那来 那在底下 这儿

02:08.740 --> 02:10.740
往下找price 对吧

02:10.740 --> 02:12.740
统计 写这个counter cvwtr

02:12.740 --> 02:15.740
每个人的counter 基本上都是一样的

02:15.740 --> 02:17.740
天下 对吧 天下一点

02:17.740 --> 02:20.740
OK 那我们先给他来个Position

02:20.740 --> 02:23.740
定位absolute

02:23.740 --> 02:25.740
absolute

02:25.740 --> 02:26.740
absolute

02:26.740 --> 02:28.740
然后我们靠右下 所以说

02:28.740 --> 02:30.740
absolute

02:30.740 --> 02:32.740
这个十二乘速

02:32.740 --> 02:35.740
然后我们的rat

02:35.740 --> 02:37.740
十五乘速

02:37.740 --> 02:39.740
这个是之前写过的 写好的

02:39.740 --> 02:41.740
然后 我们让他再这样的一个

02:41.740 --> 02:43.740
水平排列 对吧

02:43.740 --> 02:45.740
那所以说 我们利用弹性盒子

02:45.740 --> 02:47.740
display什么呢 flex

02:47.740 --> 02:49.740
display flex

02:49.740 --> 02:52.740
然后我们的这个just fine content

02:52.740 --> 02:54.740
就垂直水平居中

02:54.740 --> 02:57.740
这个水平 它要靠后展示 对吧

02:57.740 --> 02:58.740
flex arm

02:58.740 --> 03:00.740
然后垂直居中

03:00.740 --> 03:03.740
这个blank items

03:03.740 --> 03:06.740
center

03:06.740 --> 03:08.740
OK

03:08.740 --> 03:10.740
然后下面呢 下面咱们还有

03:10.740 --> 03:12.740
来 先看一下 看一下结果

03:12.740 --> 03:15.740
有啥

03:15.740 --> 03:21.900
86号

03:21.900 --> 03:25.730
是这样对吧 那只不过这个呢

03:25.730 --> 03:28.730
展示的位置不太好 那需要把它单独处理一下

03:28.730 --> 03:30.730
处理一下 什么的

03:30.730 --> 03:32.730
就是

03:32.730 --> 03:34.730
我们的下面这个div

03:34.730 --> 03:36.730
并且干嘛呢

03:36.730 --> 03:38.730
这样 我们给它一个类名

03:38.730 --> 03:40.730
因为中间这个咱们需要

03:40.730 --> 03:45.130
特殊处理一下 对吧

03:45.130 --> 03:47.130
给classman

03:47.130 --> 03:52.210
对它进行单独处理

03:52.210 --> 03:54.210
在这 干嘛呢

03:54.210 --> 03:56.210
在这

03:56.210 --> 04:01.210
不是类名为nam的元素

04:01.210 --> 04:04.210
给它一个

04:04.210 --> 04:07.210
宽度16像素

04:07.210 --> 04:10.970
高度16像素

04:10.970 --> 04:16.620
然后下面的这个图片

04:16.620 --> 04:22.890
宽度100%

04:22.890 --> 04:24.890
宽度100%

04:24.890 --> 04:26.890
然后高度自身

04:26.890 --> 04:29.890
然后我们这个nam

04:29.890 --> 04:32.890
那有那个数干嘛呢

04:32.890 --> 04:36.890
设置一个拍点 上下是0 左右5像素

04:36.890 --> 04:39.890
然后这个高度22

04:39.890 --> 04:42.890
像素 然后Lanhex 也是22

04:44.890 --> 04:46.890
ok 就这样的一个内容

04:46.890 --> 04:48.890
把它写好了 写好了 每个人都写死的

04:48.890 --> 04:50.890
正常来说它是不是应该有个纸

04:50.890 --> 04:53.890
对吧 而且这个纸应该存在本地

04:53.890 --> 04:56.890
包括我这里面刚进来的时候

04:56.890 --> 04:58.890
除非你第一次进的话没有纸

04:58.890 --> 05:00.890
其他情况下 应该是跟本地去拿

05:00.890 --> 05:02.890
就跟你的这个搜索记录一样

05:02.890 --> 05:04.890
因为之前像你的购物车一样嘛

05:04.890 --> 05:06.890
对吧 你已经装好了

05:06.890 --> 05:08.890
而且你是从里面调好了

05:08.890 --> 05:10.890
你强行删掉 那这样的话就没有本地存储的意义了

05:10.890 --> 05:12.890
所以的话 这样的话我们就可能说

05:12.890 --> 05:14.890
需要在我们的local storage

05:14.890 --> 05:16.890
里面进行一个存储

05:16.890 --> 05:18.890
进行一个存储

05:18.890 --> 05:20.890
那你看啊 那存储的时候

05:20.890 --> 05:22.890
就是当我们点加或者减的时候

05:22.890 --> 05:24.890
需要在本这个里面进行一个操作

05:24.890 --> 05:26.890
对吧 那所以说这里面

05:26.890 --> 05:27.890
它们还设计到一个实践

05:27.890 --> 05:28.890
它们设计到一个实践

05:28.890 --> 05:31.890
ok 那么就写一个

05:31.890 --> 05:34.890
绑定一个methods

05:34.890 --> 05:43.380
叫 counter

05:43.380 --> 05:45.380
cou 问题啊

05:45.380 --> 05:47.380
叫 counter

05:47.380 --> 05:49.380
这个 counter 里面干嘛呢

05:49.380 --> 05:51.380
我们在干嘛

05:51.380 --> 05:53.380
写这个价格的时候

05:53.380 --> 05:55.380
在这 给它们绑定一个实践

05:55.380 --> 05:57.380
at 什么的

05:57.380 --> 05:58.380
touch

05:58.380 --> 06:00.380
tou ch 它是按的

06:00.380 --> 06:02.380
等于什么呢

06:02.380 --> 06:05.380
等于我们的这个 counter

06:05.380 --> 06:07.380
正常元素的话

06:07.380 --> 06:09.380
我们能拿过来什么的 id

06:09.380 --> 06:11.380
包括这个是-1

06:11.380 --> 06:13.380
然后下面的是-1

06:13.380 --> 06:15.380
ok 固执一下

06:15.380 --> 06:20.620
哎 这是-1

06:20.620 --> 06:22.620
在这1 对吧

06:22.620 --> 06:24.620
一个是-1 一个是-1

06:24.620 --> 06:26.620
一个-1 一个-1

06:26.620 --> 06:28.620
那么在这里啊 在这种情况下

06:28.620 --> 06:30.620
接着往下来搞

06:30.620 --> 06:32.620
那就包括这里面这个nam

06:32.620 --> 06:34.620
正常来说我们应该先取到对不对

06:34.620 --> 06:36.620
先取到 可能或者说这里面

06:36.620 --> 06:37.620
根本就没有啊

06:37.620 --> 06:39.620
我们希望是传过来的一个指

06:39.620 --> 06:41.620
传过来的一个指

06:41.620 --> 06:43.620
然后 那这个指

06:43.620 --> 06:45.620
如果这里面我们需要知道什么 id

06:45.620 --> 06:47.620
跟我们的nam

06:47.620 --> 06:49.620
num

06:49.620 --> 06:51.620
id 是跟这个商品

06:51.620 --> 06:53.620
一起传过来 只不过这个nam

06:53.620 --> 06:55.620
我们需要单独去拿

06:55.620 --> 06:57.620
那这个ok

06:57.620 --> 06:59.620
那这个nam 这个nam应该在哪呢

06:59.620 --> 07:01.620
也就是在我们的list

07:01.620 --> 07:02.620
有什么商品列表

07:02.620 --> 07:04.620
刚用到它的时候拿过来

07:04.620 --> 07:05.620
因为这个nam

07:05.620 --> 07:06.620
我们需要

07:06.620 --> 07:08.620
进行一个指的一个存储

07:08.620 --> 07:10.620
对吧 那它应该是

07:10.620 --> 07:11.620
在记录里面

07:11.620 --> 07:13.620
然后去拿到它

07:13.620 --> 07:14.620
去拿到它

07:14.620 --> 07:15.620
那所以说这里面

07:15.620 --> 07:16.620
你要想记录的话

07:16.620 --> 07:17.620
我们得放到我们store里面

07:17.620 --> 07:19.620
对吧 那这里面有个什么呢

07:19.620 --> 07:20.620
有个叫 counter

07:20.620 --> 07:21.620
co

07:21.620 --> 07:22.620
n

07:22.620 --> 07:23.620
countermap

07:23.620 --> 07:24.620
那是个对象

07:24.620 --> 07:25.620
里面存的什么呢

07:25.620 --> 07:26.620
假如说我们的商品

07:26.620 --> 07:27.620
或者是1

07:27.620 --> 07:28.620
然后 哎 十个

07:28.620 --> 07:30.620
什么呢 id唯一的商品有十个

07:30.620 --> 07:31.620
就这么存

07:31.620 --> 07:33.620
ok 那这是我们的 countermap

07:33.620 --> 07:35.620
那下面

07:35.620 --> 07:36.620
那我们就来一个

07:36.620 --> 07:37.620
nam

07:37.620 --> 07:38.620
set

07:38.620 --> 07:39.620
counter

07:39.620 --> 07:40.620
co

07:40.620 --> 07:41.620
countermap

07:43.620 --> 07:45.620
也就是说我们的

07:45.620 --> 07:46.620
state

07:46.620 --> 07:47.620
map

07:47.620 --> 07:48.620
什么呢

07:48.620 --> 07:49.620
state

07:49.620 --> 07:51.620
countermap

07:51.620 --> 07:52.620
等我们用这个map

07:52.620 --> 07:54.620
有这样的一个方法

07:54.620 --> 07:55.620
有这样的一个方法

07:55.620 --> 07:56.620
去拿到它

07:56.620 --> 07:57.620
去拿到它

07:57.620 --> 07:58.620
那ok

07:58.620 --> 08:00.620
那我们需要干嘛呢

08:00.620 --> 08:01.620
执行一个方法

08:01.620 --> 08:03.620
去把这个纸拿到

08:03.620 --> 08:04.620
对吧 去把这个

08:04.620 --> 08:06.620
所谓的这个 countermap 去拿到

08:06.620 --> 08:08.620
那这个 countermap

08:08.620 --> 08:09.620
回到这里来对吧

08:09.620 --> 08:11.620
哎 那也就是说

08:11.620 --> 08:12.620
当我们

08:12.620 --> 08:13.620
这里面

08:13.620 --> 08:14.620
引方法的时候

08:14.620 --> 08:15.620
在这

08:15.620 --> 08:17.620
我还得有一个

08:17.620 --> 08:21.180
我还得拿到

08:21.180 --> 08:22.180
我们的 countermap 是吧

08:22.180 --> 08:24.180
那所以说我们的

08:24.180 --> 08:25.180
哎 这里面

08:25.180 --> 08:26.180
再拿一个

08:26.180 --> 08:28.180
countermap

08:28.180 --> 08:29.180
co

08:29.180 --> 08:30.180
un

08:30.180 --> 08:31.180
pr

08:31.180 --> 08:32.180
map

08:32.180 --> 08:33.180
那同样

08:33.180 --> 08:34.180
state

08:34.180 --> 08:35.180
state

08:35.180 --> 08:37.180
这样 countermap

08:37.180 --> 08:39.180
那 countermap

08:39.180 --> 08:40.180
把它拿到了

08:40.180 --> 08:41.180
拿到之后干嘛呢

08:41.180 --> 08:42.180
我们在这

08:42.180 --> 08:43.180
A

08:43.180 --> 08:45.180
进行绑定NAM

08:45.180 --> 08:46.180
un

08:46.180 --> 08:48.180
这个NAM等于啥

08:50.180 --> 08:52.180
对吧 这个NAM等于啥

08:52.180 --> 08:53.180
这个NAM等于我们

08:53.180 --> 08:55.180
这个 countermap

08:55.180 --> 08:57.180
下面的id

08:57.180 --> 08:58.180
就是说

08:58.180 --> 08:59.180
它对应的是

08:59.180 --> 09:01.180
里面的这样的一个值

09:01.180 --> 09:03.180
我们根据id存的嘛

09:03.180 --> 09:05.180
取到这id 就取到它

09:05.180 --> 09:07.180
当然没有的话就没有

09:07.180 --> 09:08.180
看看啊

09:08.180 --> 09:10.180
格式化一下

09:16.460 --> 09:18.460
应该是这里面

09:18.460 --> 09:20.460
多号没写是吧

09:20.460 --> 09:23.350
ok

09:23.350 --> 09:25.350
这没问题了

09:25.350 --> 09:26.350
ok 那这样的话

09:26.350 --> 09:27.350
那我们的 countermap

09:27.350 --> 09:28.350
对吧 那我们的 countermap

09:28.350 --> 09:29.350
哎 用存

09:29.350 --> 09:30.350
或者是怎么着

09:30.350 --> 09:32.350
那它得什么时候拿呢

09:32.350 --> 09:33.350
对不对

09:33.350 --> 09:34.350
什么时候去内存里面

09:34.350 --> 09:35.350
去拿呢

09:35.350 --> 09:36.350
这样的话

09:36.350 --> 09:37.350
我们其实在

09:37.350 --> 09:38.350
像刚开始的时候

09:38.350 --> 09:39.350
像刚开始的时候

09:39.350 --> 09:40.350
我们就需要

09:40.350 --> 09:41.350
去拿一下

09:41.350 --> 09:42.350
什么的

09:42.350 --> 09:43.350
在我们 app

09:43.350 --> 09:44.350
w里面

09:44.350 --> 09:46.350
就里面写个script

09:48.350 --> 09:50.350
scrfg

09:51.350 --> 09:52.350
这样没有

09:59.530 --> 10:00.530
script

10:00.530 --> 10:01.530
在这里面

10:02.530 --> 10:03.530
干嘛呢

10:03.530 --> 10:05.530
export default

10:07.530 --> 10:09.530
export default

10:09.530 --> 10:10.530
什么的

10:10.530 --> 10:11.530
created

10:15.500 --> 10:16.500
在这里面

10:16.500 --> 10:17.500
我们需要拿到

10:17.500 --> 10:18.500
我们的 countermap

10:18.500 --> 10:19.500
对吧 ok

10:19.500 --> 10:20.500
const

10:20.500 --> 10:21.500
什么的

10:22.500 --> 10:23.500
等于什么呢

10:23.500 --> 10:24.500
等于

10:24.500 --> 10:26.500
哎 这个

10:26.500 --> 10:27.500
local storage

10:27.500 --> 10:28.500
s2

10:28.500 --> 10:29.500
local storage

10:29.500 --> 10:30.500
第二个

10:30.500 --> 10:31.500
at

10:31.500 --> 10:32.500
我们起个名叫固子

10:33.500 --> 10:35.500
存到它里面

10:35.500 --> 10:36.500
或者说没拿到它

10:36.500 --> 10:37.500
干嘛呢

10:37.500 --> 10:38.500
我们

10:39.500 --> 10:41.500
或者

10:41.500 --> 10:42.500
来控制一下

10:42.500 --> 10:43.500
如果没有它

10:43.500 --> 10:44.500
默认出的话的时候就它

10:44.500 --> 10:45.500
然后我们在存它的时候

10:45.500 --> 10:46.500
干嘛呢

10:46.500 --> 10:47.500
我直接

10:47.500 --> 10:48.500
以json的形式去存出

10:48.500 --> 10:49.500
所以说

10:49.500 --> 10:50.500
那这里面我可以传

10:50.500 --> 10:52.500
json.parse

10:53.500 --> 10:54.500
解析一下

10:56.500 --> 10:57.500
drse

10:58.500 --> 10:59.500
然后去解析一下

11:01.940 --> 11:02.940
我去解析一下

11:02.940 --> 11:03.940
把这个结果拿到

11:03.940 --> 11:04.940
拿到

11:04.940 --> 11:05.940
然后拿完之后干嘛呢

11:05.940 --> 11:06.940
我去存一下

11:06.940 --> 11:07.940
什么的

11:07.940 --> 11:12.940
this.dollarstore.commit

11:12.940 --> 11:13.940
什么的

11:13.940 --> 11:16.940
set countermap

11:16.940 --> 11:17.940
是吧

11:17.940 --> 11:18.940
就set countermap

11:21.940 --> 11:22.940
set countermap

11:22.940 --> 11:23.940
ok

11:23.940 --> 11:24.940
然后把我们的

11:24.940 --> 11:25.940
这个countermap传进去

11:25.940 --> 11:26.940
在这

11:26.940 --> 11:27.940
刚开始

11:27.940 --> 11:28.940
我就先把你这个

11:28.940 --> 11:29.940
在本地化存储的一个东西

11:29.940 --> 11:30.940
我拿到

11:30.940 --> 11:31.940
把我们拿到

11:32.940 --> 11:36.090
是不是这个问题

11:36.090 --> 11:37.090
ok

11:38.090 --> 11:39.090
把这搞完

11:39.090 --> 11:40.090
搞完之后

11:40.090 --> 11:41.090
还回到我们的

11:41.090 --> 11:42.090
list里面来

11:43.090 --> 11:44.090
回到这里来

11:44.090 --> 11:45.090
那你看

11:45.090 --> 11:46.090
这里面

11:46.090 --> 11:47.090
我们在这干嘛呢

11:47.090 --> 11:48.090
传了个id

11:48.090 --> 11:49.090
传了个e

11:49.090 --> 11:50.090
那是不是意味着

11:50.090 --> 11:51.090
拿到这里

11:51.090 --> 11:52.090
会拿到一个id

11:52.090 --> 11:53.090
会拿到一个e

11:54.090 --> 11:55.090
是吧

11:55.090 --> 11:56.090
那我们需要跟这个id

11:56.090 --> 11:57.090
跟这个nam

11:57.090 --> 11:58.090
进行一个运算

11:58.090 --> 11:59.090
跟这个nam

11:59.090 --> 12:00.090
id

12:00.090 --> 12:01.090
或者跟这个nam

12:01.090 --> 12:02.090
进行一个运算

12:02.090 --> 12:03.090
也就是说

12:03.090 --> 12:04.090
我们需要在原来的技术上

12:04.090 --> 12:05.090
进行一个加

12:05.090 --> 12:06.090
或者减的一个操作

12:06.090 --> 12:07.090
是吧

12:07.090 --> 12:08.090
这在哪里面去

12:08.090 --> 12:09.090
就是

12:09.090 --> 12:10.090
把这些东西拿过来

12:10.090 --> 12:11.090
咱得参与运算

12:11.090 --> 12:12.090
是吧

12:12.090 --> 12:13.090
所以说这里面

12:13.090 --> 12:14.090
我们就需要有一个方法

12:14.090 --> 12:15.090
所以是一个方法

12:15.090 --> 12:16.090
没实现

12:16.090 --> 12:17.090
然后先写下来

12:17.090 --> 12:18.090
什么的

12:18.090 --> 12:19.090
叫

12:19.090 --> 12:21.090
storage

12:21.090 --> 12:22.090
storage

12:22.090 --> 12:23.090
change

12:23.090 --> 12:24.090
去修改我们

12:24.090 --> 12:25.090
本地的一些值

12:26.090 --> 12:27.090
然后在这里面

12:27.090 --> 12:28.090
把我们的

12:28.090 --> 12:29.090
什么的

12:29.090 --> 12:30.090
id传进去

12:30.090 --> 12:31.090
把我们的

12:31.090 --> 12:32.090
value

12:32.090 --> 12:33.090
也就是把我们的

12:33.090 --> 12:34.090
nam传进去

12:34.090 --> 12:36.090
当然这个方法在哪呢

12:36.090 --> 12:38.090
这个方法作为我们的

12:38.090 --> 12:39.090
mutations

12:40.090 --> 12:41.090
我们需要在这里

12:41.090 --> 12:42.090
声明

12:42.090 --> 12:43.090
那我们在这

12:43.090 --> 12:44.090
直接引过来

12:44.090 --> 12:46.090
map mutations

12:48.720 --> 12:49.720
什么呢

12:49.720 --> 12:51.720
stor

12:52.720 --> 12:54.720
adge

12:54.720 --> 12:55.720
change

12:55.720 --> 12:56.720
ok

12:56.720 --> 12:57.720
那我们回来

12:57.720 --> 12:59.720
来写一个这个方法

13:00.720 --> 13:01.720
看到哪儿包错了

13:01.720 --> 13:02.720
各自换一下

13:03.720 --> 13:13.010
然后这里面

13:13.010 --> 13:14.010
有stata

13:15.010 --> 13:17.010
然后我们能解析出

13:17.010 --> 13:18.010
id和value是吧

13:19.010 --> 13:20.010
能够解构出

13:20.010 --> 13:21.010
id和value

13:23.830 --> 13:24.830
嗯

13:24.830 --> 13:25.830
又出问题了

13:25.830 --> 13:26.830
一会再说吧

13:26.830 --> 13:27.830
能解构出id和value

13:27.830 --> 13:28.830
怎么解构呢

13:28.830 --> 13:29.830
是因为

13:29.830 --> 13:30.830
我们在这是这么传的

13:30.830 --> 13:31.830
id和value

13:31.830 --> 13:33.830
然后在这这个

13:33.830 --> 13:34.830
传据之后

13:34.830 --> 13:36.830
我们在这里面能做啥呢

13:36.830 --> 13:37.830
也就是说

13:37.830 --> 13:38.830
把他需要

13:38.830 --> 13:39.830
就是我们需要

13:39.830 --> 13:40.830
把本地的这个

13:40.830 --> 13:42.830
storage down的值拿出来

13:42.830 --> 13:43.830
经读取

13:43.830 --> 13:44.830
然后进行一个

13:44.830 --> 13:45.830
加一或者删除的

13:45.830 --> 13:46.830
一个操作

13:46.830 --> 13:47.830
是吧

13:47.830 --> 13:48.830
这个学位有点符的

13:48.830 --> 13:49.830
但是还好

13:49.830 --> 13:50.830
好好来

13:50.830 --> 13:51.830
那怎么说呢

13:51.830 --> 13:52.830
判断一下

13:52.830 --> 13:54.830
stata.contermap

13:55.830 --> 13:56.830
contermap下的谁呢

13:56.830 --> 13:57.830
这个id

13:57.830 --> 13:58.830
看到存不存在

13:58.830 --> 13:59.830
对吧

13:59.830 --> 14:00.830
如果有怎么样

14:00.830 --> 14:01.830
没有怎么样

14:01.830 --> 14:02.830
啊

14:02.830 --> 14:03.830
如果有

14:03.830 --> 14:04.830
哎

14:04.830 --> 14:05.830
如果有的话

14:05.830 --> 14:06.830
哎这个这个

14:06.830 --> 14:07.830
如果有的话

14:07.830 --> 14:08.830
那是不是就是

14:09.830 --> 14:10.830
直接操作就行了

14:10.830 --> 14:11.830
对吧

14:11.830 --> 14:12.830
在里面作为判断

14:12.830 --> 14:13.830
如果没有的话

14:13.830 --> 14:14.830
我们直接

14:14.830 --> 14:15.830
vue.set

14:15.830 --> 14:16.830
什么的

14:16.830 --> 14:17.830
state

14:17.830 --> 14:18.830
因为它是引用值嘛

14:18.830 --> 14:19.830
stata.contermap

14:19.830 --> 14:20.830
什么的

14:20.830 --> 14:21.830
id的值是1

14:21.830 --> 14:22.830
那

14:22.830 --> 14:23.830
ok

14:26.830 --> 14:27.830
这是它

14:27.830 --> 14:28.830
然后接下来

14:28.830 --> 14:29.830
它到底是加

14:29.830 --> 14:30.830
还是减

14:30.830 --> 14:31.830
对吧

14:31.830 --> 14:32.830
需要判断一下这个value

14:32.830 --> 14:33.830
如果什么的

14:33.830 --> 14:40.590
stata.contermap

14:40.590 --> 14:41.590
对

14:41.590 --> 14:42.590
这里面

14:42.590 --> 14:43.590
我们直接判断

14:43.590 --> 14:44.590
什么的

14:44.590 --> 14:45.590
我们的这个value

14:45.590 --> 14:46.590
干嘛呢

14:46.590 --> 14:47.590
它如果等一等

14:47.590 --> 14:48.590
等一等

14:48.590 --> 14:49.590
说明啥呀

14:49.590 --> 14:50.590
如果等于负一的话

14:50.590 --> 14:51.590
说明

14:51.590 --> 14:53.590
我们的这个值是减

14:53.590 --> 14:54.590
对吧

14:54.590 --> 14:55.590
减

14:55.590 --> 14:56.590
减的话

14:56.590 --> 14:57.590
还不一样

14:57.590 --> 14:58.590
减的话不一样

14:58.590 --> 14:59.590
我们并且什么呢

14:59.590 --> 15:02.590
stata.contermap

15:02.590 --> 15:03.590
id

15:03.590 --> 15:04.590
还等一等于1

15:04.590 --> 15:05.590
那说明它只有一个了

15:05.590 --> 15:06.590
对吧

15:06.590 --> 15:07.590
这时候减掉的话

15:07.590 --> 15:08.590
这些干嘛的

15:08.590 --> 15:09.590
vue.delete

15:09.590 --> 15:10.590
什么的

15:10.590 --> 15:11.590
我们的

15:11.590 --> 15:12.590
这个这个

15:12.590 --> 15:16.590
stata.contermap

15:16.590 --> 15:19.590
然后把对应的这个id值给干掉

15:19.590 --> 15:21.590
对应的id值给干掉

15:21.590 --> 15:23.590
否则的话

15:23.590 --> 15:24.590
哎

15:24.590 --> 15:25.590
这个是问题

15:25.590 --> 15:26.590
问题

15:26.590 --> 15:27.590
否则的话

15:27.590 --> 15:28.590
我们就直接在里面

15:28.590 --> 15:29.590
去修改就行了

15:29.590 --> 15:30.590
vue.set

15:30.590 --> 15:31.590
什么的

15:31.590 --> 15:34.590
stata.contermap

15:34.590 --> 15:36.590
然后id

15:36.590 --> 15:39.590
然后stata.contermap

15:39.590 --> 15:40.590
id

15:40.590 --> 15:41.590
什么的

15:41.590 --> 15:42.590
加上我们的value

15:42.590 --> 15:43.590
别管它争议还是负一

15:43.590 --> 15:44.590
是吧

15:44.590 --> 15:45.590
啊

15:45.590 --> 15:47.590
然后这这这上面这些都是干嘛呢

15:47.590 --> 15:49.590
去对于当前的数据

15:49.590 --> 15:50.590
进行操作对吧

15:50.590 --> 15:51.590
操作完之后

15:51.590 --> 15:52.590
干嘛呢

15:52.590 --> 15:55.590
localStorage.set

15:55.590 --> 15:56.590
把它存起来

15:56.590 --> 15:57.590
存给谁呢

15:57.590 --> 15:58.590
我们的一个招

15:58.590 --> 15:59.590
哎

15:59.590 --> 16:00.590
固子

16:00.590 --> 16:01.590
这样的一个东西

16:01.590 --> 16:02.590
这样的一个值

16:02.590 --> 16:03.590
然后在这里面

16:03.590 --> 16:04.590
什么的

16:04.590 --> 16:07.590
json.stringify

16:07.590 --> 16:08.590
什么的

16:08.590 --> 16:11.590
stata.contermap

16:11.590 --> 16:12.590
啊

16:12.590 --> 16:13.590
给它存到这里

16:13.590 --> 16:14.590
这个这个

16:14.590 --> 16:15.590
把它转换成字幕串

16:15.590 --> 16:17.590
存到我们的固子里面去

16:17.590 --> 16:18.590
这样的话

16:18.590 --> 16:19.590
就ok了

16:19.590 --> 16:20.590
这样的话就ok了

16:20.590 --> 16:21.590
然后回来

16:21.590 --> 16:22.590
我们看一下啊

16:22.590 --> 16:24.590
看看个是个是话的问题嘛

16:24.590 --> 16:25.590
哎

16:30.350 --> 16:32.350
哎哪有问题啊

16:32.350 --> 16:33.350
看看啥问题

16:33.350 --> 16:45.140
没问题了是吧

16:45.140 --> 16:46.140
没问题了

16:46.140 --> 16:48.140
好那时候我们这时候回来啊

16:48.140 --> 16:50.140
这些东西已经绑定好了

16:50.140 --> 16:51.140
哎

16:51.140 --> 16:52.140
刚开始没有

16:52.140 --> 16:53.140
这刚开始这个简号中间

16:53.140 --> 16:54.140
不应该显示对吧

16:54.140 --> 16:55.140
没有值的时候呢

16:55.140 --> 16:56.140
怎么能展示呢

16:56.140 --> 16:57.140
所以说我们回到

16:57.140 --> 16:58.140
这card里面来

16:58.140 --> 17:00.140
判断一下

17:00.140 --> 17:01.140
这么呢

17:01.140 --> 17:03.140
呃

17:03.140 --> 17:05.140
如果就像这个简号

17:05.140 --> 17:07.140
它正常如果没有这个name的话

17:07.140 --> 17:08.140
不应该展示对吧

17:08.140 --> 17:09.140
不应该展示

17:09.140 --> 17:11.140
就包括这里面也是

17:11.140 --> 17:12.140
它也是

17:12.140 --> 17:13.140
判断一下

17:13.140 --> 17:14.140
如果

17:14.140 --> 17:15.140
没有我们的name

17:15.140 --> 17:17.140
就不应该去展示

17:17.140 --> 17:18.140
就不应该去展示

17:19.140 --> 17:25.030
25

17:25.030 --> 17:26.030
看看啊什么方法

17:26.030 --> 17:28.030
id is not defined

17:30.030 --> 17:31.030
id

17:31.030 --> 17:32.030
在哪

17:32.030 --> 17:35.030
在我们的这个固子list里面

17:37.030 --> 17:42.390
这个应该是atom.id

17:42.390 --> 17:49.250
ok

17:49.250 --> 17:50.250
那说明啊

17:50.250 --> 17:51.250
这现在是本地里面有值

17:51.250 --> 17:53.250
哈那这样我们把它删掉

17:53.250 --> 17:55.250
我们把哎

17:55.250 --> 17:56.250
把这个

17:57.250 --> 17:58.250
application

17:59.250 --> 18:01.250
里面的local storage

18:01.250 --> 18:04.250
里面的这个固子删掉

18:06.250 --> 18:07.250
刷新

18:07.250 --> 18:10.250
对吧哎点加加加加

18:10.250 --> 18:11.250
哎加

18:11.250 --> 18:13.250
你看这都有个变化对吧

18:13.250 --> 18:14.250
ok 包存刷新的话

18:14.250 --> 18:15.250
它也会有

18:15.250 --> 18:16.250
为什么呢

18:16.250 --> 18:17.250
它从先从本地里面去拿

18:17.250 --> 18:19.250
然后有一个对应的这样的一个值

18:19.250 --> 18:20.250
有对应的一个这样的值

18:20.250 --> 18:21.250
ok 这是它

18:21.250 --> 18:22.250
这是它

18:22.250 --> 18:23.250
一个本地化存储

18:23.250 --> 18:24.250
那同时它跟谁有关

18:24.250 --> 18:26.250
是不是跟我们的购物车有关

18:26.250 --> 18:27.250
对吧我们需要把它

18:27.250 --> 18:28.250
让那个结果干嘛呢

18:28.250 --> 18:30.250
统统都放到购物车

18:30.250 --> 18:32.250
这里面去展示对吧

18:32.250 --> 18:33.250
哎这样我们来看一下

18:33.250 --> 18:34.250
vnt

18:37.250 --> 18:38.250
我们的这个

18:38.250 --> 18:39.250
侧边蓝

18:39.250 --> 18:41.250
叫什么来着叫

18:43.250 --> 18:45.250
分享面板弹出层

18:45.250 --> 18:47.250
这等会儿我再看

18:51.350 --> 18:52.350
标签

18:53.350 --> 18:54.350
那有板

18:54.350 --> 18:55.350
所以蓝

18:55.350 --> 18:56.350
不是

19:00.010 --> 19:01.010
哎它有板

19:01.010 --> 19:02.010
对吧是它

19:02.010 --> 19:03.010
它也支持什么

19:03.010 --> 19:05.010
支持说支持这个小图标啊

19:05.010 --> 19:06.010
对吧我们总共买了多少个

19:06.010 --> 19:07.010
在这展示

19:07.010 --> 19:08.010
所以说在这

19:08.010 --> 19:09.010
它应该是有一个

19:11.010 --> 19:12.010
挥标提示

19:12.010 --> 19:14.010
应该是这个

19:14.010 --> 19:15.010
badj

19:15.010 --> 19:16.010
是吧

19:16.010 --> 19:18.010
ok 那回到我们这里面哪有

19:19.010 --> 19:20.010
组件

19:21.010 --> 19:22.010
它还爬对吧

19:22.010 --> 19:23.010
那就是这个购物车

19:24.010 --> 19:25.010
这样

19:26.010 --> 19:27.010
这个咱们就数日来写吧

19:28.010 --> 19:34.030
也就是说这里面

19:34.030 --> 19:36.030
我们的badj

19:41.030 --> 19:44.690
我假如说等于10

19:44.690 --> 19:45.690
好吧

19:45.690 --> 19:46.690
来我们看一下

19:47.690 --> 19:48.690
哎是10是吧

19:48.690 --> 19:49.690
但是这个值呢

19:49.690 --> 19:50.690
应该是我们算出来

19:50.690 --> 19:51.690
是我们算出来

19:51.690 --> 19:52.690
那所以说

19:52.690 --> 19:53.690
我们在这里

19:53.690 --> 19:54.690
也要去进行一个

19:54.690 --> 19:56.690
对应的值的一个运算

19:56.690 --> 19:57.690
那怎么搞呢

19:59.690 --> 20:02.900
也就是说把我们

20:02.900 --> 20:03.900
这个

20:04.900 --> 20:05.900
store里面的

20:05.900 --> 20:06.900
这个counter map里面的

20:06.900 --> 20:07.900
值拿出来对吧

20:07.900 --> 20:08.900
把里面的所有的值

20:08.900 --> 20:09.900
进行一个运算

20:09.900 --> 20:10.900
就可以了

20:10.900 --> 20:11.900
就可以了

20:11.900 --> 20:12.900
那同样在这里面来

20:13.900 --> 20:14.900
先把这个

20:14.900 --> 20:15.900
state

20:15.900 --> 20:16.900
这个拿过来

20:16.900 --> 20:17.900
computed

20:23.230 --> 20:24.230
map

20:24.230 --> 20:25.230
map

20:26.230 --> 20:27.230
state

20:29.860 --> 20:30.860
里面有个count

20:30.860 --> 20:31.860
cu untr

20:31.860 --> 20:32.860
counter map

20:33.860 --> 20:38.160
state

20:38.160 --> 20:39.160
counter map

20:41.160 --> 20:42.160
countr map

20:42.160 --> 20:43.160
把这个值拿过来

20:43.160 --> 20:44.160
把它拿过来之后

20:44.160 --> 20:46.160
这是有问题是吧

20:46.160 --> 20:47.160
有问题

20:47.160 --> 20:48.160
把这个拿过来之后

20:49.160 --> 20:50.160
还有啥问题

20:50.160 --> 20:51.160
没事

20:51.160 --> 20:52.160
先往下写

20:52.160 --> 20:56.180
把这个值拿过来之后

20:56.180 --> 20:57.180
干嘛呢

20:57.180 --> 20:58.180
我们需要去计算一个

20:58.180 --> 20:59.180
badj

20:59.180 --> 21:00.180
是吧

21:00.180 --> 21:01.180
我需要把它

21:01.180 --> 21:02.180
属于一个

21:02.180 --> 21:03.180
计算主义

21:03.180 --> 21:04.180
把它计算出来

21:04.180 --> 21:05.180
那它怎么计算呢

21:05.180 --> 21:06.180
是不是应该

21:06.180 --> 21:07.180
把我们的这个

21:07.180 --> 21:08.180
counter map

21:08.180 --> 21:09.180
所里面的

21:10.180 --> 21:11.180
value

21:11.180 --> 21:12.180
对吧

21:12.180 --> 21:13.180
有value

21:13.180 --> 21:14.180
那我是不是可以

21:14.180 --> 21:15.180
通过object

21:15.180 --> 21:16.180
点

21:16.180 --> 21:17.180
values

21:17.180 --> 21:18.180
拿到谁啊

21:18.180 --> 21:19.180
this点

21:19.180 --> 21:20.180
counter map的

21:20.180 --> 21:21.180
所有的

21:21.180 --> 21:22.180
对应的一个值

21:22.180 --> 21:23.180
对吧

21:23.180 --> 21:24.180
那counter map 长啥呀

21:24.180 --> 21:25.180
counter map 是不是

21:25.180 --> 21:26.180
p value

21:26.180 --> 21:27.180
那把value

21:27.180 --> 21:28.180
把611都拿到吧

21:28.180 --> 21:29.180
对吧

21:29.180 --> 21:30.180
它会返回一个数组

21:30.180 --> 21:31.180
那这个数组呢

21:31.180 --> 21:32.180
干嘛

21:32.180 --> 21:33.180
先来一个计算

21:33.180 --> 21:34.180
reduce

21:34.180 --> 21:35.180
然后这里面

21:35.180 --> 21:36.180
prive

21:36.180 --> 21:37.180
next

21:39.180 --> 21:40.180
xt

21:40.180 --> 21:41.180
干嘛呢

21:41.180 --> 21:42.180
一个prive

21:42.180 --> 21:44.180
加next

21:44.180 --> 21:45.180
然后默认传个0

21:45.180 --> 21:46.180
好吧

21:46.180 --> 21:47.180
默认传个0

21:47.180 --> 21:48.180
干嘛呢

21:48.180 --> 21:49.180
把它进行个类加

21:49.180 --> 21:50.180
那这样的话

21:50.180 --> 21:51.180
就会返回一个结果

21:51.180 --> 21:52.180
就是我们的counter

21:55.870 --> 21:56.870
counter

21:56.870 --> 21:57.870
counter等于它

21:58.870 --> 21:59.870
等于它

21:59.870 --> 22:00.870
那这样的话

22:00.870 --> 22:01.870
有了它之后

22:01.870 --> 22:02.870
有了这个counter

22:02.870 --> 22:03.870
那我们就在这

22:03.870 --> 22:04.870
干嘛呢

22:04.870 --> 22:05.870
如果这个counter

22:05.870 --> 22:06.870
如果它要大于99

22:06.870 --> 22:07.870
咱这不写

22:07.870 --> 22:08.870
不写100了

22:08.870 --> 22:09.870
这些写99加

22:11.870 --> 22:12.870
return

22:12.870 --> 22:13.870
99加

22:14.870 --> 22:15.870
否则的话

22:15.870 --> 22:16.870
就return我们的counter

22:16.870 --> 22:17.870
就可以了

22:19.870 --> 22:20.870
return我们的counter

22:20.870 --> 22:21.870
就可以了

22:21.870 --> 22:22.870
来格式画一下

22:23.870 --> 22:32.140
OK

22:35.140 --> 22:36.140
这个10是写死的

22:36.140 --> 22:37.140
是吧

22:37.140 --> 22:38.140
那回到这一来

22:38.140 --> 22:39.140
我们干嘛呢

22:39.140 --> 22:40.140
bad

22:40.140 --> 22:41.140
j

22:42.140 --> 22:43.140
绑一个tut

22:46.920 --> 22:47.920
对吧

22:47.920 --> 22:48.920
7

22:48.920 --> 22:49.920
你就像这是在写8

22:49.920 --> 22:50.920
这样的一个逻辑

22:50.920 --> 22:51.920
对吧

22:51.920 --> 22:52.920
这样的逻辑

22:52.920 --> 22:53.920
那OK

22:53.920 --> 22:54.920
咱们本地画存储

22:54.920 --> 22:56.920
包括我们购物车的一个添加

22:56.920 --> 22:57.920
就讲完了

22:57.920 --> 22:58.920
下条路干嘛

22:58.920 --> 22:59.920
讲个像什么呢

22:59.920 --> 23:01.920
讲我们飞入购物车的一个过程

