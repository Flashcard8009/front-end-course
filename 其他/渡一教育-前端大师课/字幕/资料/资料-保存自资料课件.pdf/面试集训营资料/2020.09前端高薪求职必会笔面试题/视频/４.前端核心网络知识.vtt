WEBVTT

00:00.000 --> 00:02.960
今天咱们讲网络通信

00:03.520 --> 00:05.920
网络通信是咱们后期的一个课

00:06.320 --> 00:08.320
它不是说一节课就能全部讲完了

00:08.320 --> 00:09.520
这里边细节很多

00:09.520 --> 00:11.200
作为前端开发者

00:11.200 --> 00:13.200
我们对网络通信这一块

00:13.200 --> 00:15.480
最核心最重点的就是

00:15.480 --> 00:16.880
AGB协议

00:16.880 --> 00:19.320
你把AGB协议搞清楚了

00:19.320 --> 00:22.000
那么网络通信里边什么阿加克斯

00:22.000 --> 00:24.920
什么那些前后端连条的乱七八糟的

00:24.920 --> 00:27.120
很多事情 什么话语

00:27.120 --> 00:28.800
你全部搞清楚了

00:29.040 --> 00:32.240
这些东西所有的东西都是在AGB协议里边

00:32.240 --> 00:34.240
那么这一块知识很大

00:34.880 --> 00:36.080
它绝对不是说

00:36.080 --> 00:39.000
有些同学可能接触过一点点AGB协议

00:39.000 --> 00:40.840
觉得自己应该是没问题

00:40.840 --> 00:43.920
但是实际上这里面细节特别特别多

00:43.920 --> 00:47.120
我记得我当时在讲那个load的课程里边

00:48.440 --> 00:50.360
你确实要给它看一下

00:50.360 --> 00:53.520
而且我当时在讲load的课程的时候

00:54.880 --> 00:58.040
就讲到了各种的应用场景

00:58.120 --> 00:59.840
后边在这

01:00.440 --> 01:01.920
你看这全是场景

01:01.920 --> 01:03.160
那么这些场景里边

01:03.160 --> 01:05.640
绝大部分都跟AGB协议相关

01:05.640 --> 01:07.640
而且这里边有很多细节

01:07.640 --> 01:09.600
什么缓存

01:09.600 --> 01:14.200
什么后边还有什么XSSG攻击

01:14.200 --> 01:16.360
对吧CSR攻击

01:16.360 --> 01:19.320
还有文件上传

01:19.320 --> 01:21.560
跨域JWT

01:21.560 --> 01:23.720
Token那一乱七八糟的玩意儿

01:23.720 --> 01:25.240
都跟AGB协议有关

01:25.240 --> 01:26.880
它是一个很大块的知识点

01:26.880 --> 01:30.360
我们今天重点是认识它的核心里面

01:30.360 --> 01:32.000
核心标准

01:32.000 --> 01:34.640
然后会有一道面试题

01:34.640 --> 01:36.240
这一块大家不要注意

01:36.240 --> 01:38.520
在你们以后找工作的过程中

01:38.520 --> 01:40.600
面试题会非常非常地密集

01:40.600 --> 01:42.800
AGB协议这一块

01:42.800 --> 01:44.960
好 那么咱们就开始

01:44.960 --> 01:46.560
首先我们要讲协议之权

01:46.560 --> 01:48.000
首先你要理解一个基本概念

01:48.000 --> 01:49.720
叫服务器

01:49.720 --> 01:51.200
不要觉得简单

01:51.200 --> 01:53.080
这一块概念可能很多人都误解

01:53.080 --> 01:55.240
所以我这里单独离出来说一下

01:55.280 --> 01:57.280
这个服务器是什么概念的

01:57.280 --> 01:59.320
它有点在不同的语境下边

01:59.320 --> 02:02.320
它其实有不同的含义

02:02.320 --> 02:04.240
有的时候我们说

02:04.240 --> 02:07.040
咱们买一台服务器

02:07.040 --> 02:10.840
那么这个服务器指的就是一种真实可见的

02:10.840 --> 02:13.760
看得见摸得着的这么一台独立的计算机

02:13.760 --> 02:14.600
所以说有的时候

02:14.600 --> 02:17.640
表示一台独立的计算机

02:17.640 --> 02:19.400
在那个年代

02:19.400 --> 02:21.200
很多很多年以前

02:21.200 --> 02:22.760
那个时候我们买一台服务器

02:22.760 --> 02:24.400
就真的是一台计算机

02:24.440 --> 02:25.360
不过那个计算机

02:25.360 --> 02:28.680
跟我们普通的家用电脑是不太一样的

02:28.680 --> 02:30.680
也不是笔记本

02:30.680 --> 02:31.760
有什么刀片的

02:31.760 --> 02:32.320
对吧

02:32.320 --> 02:33.560
那么不同的服务器

02:33.560 --> 02:35.160
它的价格不一样

02:35.160 --> 02:39.120
但是基本上比我们的家用PC要贵很多

02:39.120 --> 02:40.640
我记得当时

02:40.640 --> 02:42.000
我第一家公司的时候

02:42.000 --> 02:43.440
自己买了一个服务器

02:43.440 --> 02:45.400
买的是最便宜的那种

02:45.400 --> 02:47.080
还买的是二手的

02:47.080 --> 02:48.280
都花了一万八

02:48.280 --> 02:49.680
那个时候

02:49.680 --> 02:51.440
所以说这个还是蛮贵的

02:51.440 --> 02:53.800
不过现在的服务器

02:53.800 --> 02:55.320
你们都是在阿里云上面买的

02:55.320 --> 02:55.760
对吧

02:55.760 --> 02:57.840
阿里云腾讯云上面买的

02:57.840 --> 02:59.960
那么那个东西叫做云服务器

02:59.960 --> 03:01.000
云服务器的话

03:01.000 --> 03:03.680
它就不是一台真正意义上的独立计算机了

03:03.680 --> 03:06.320
它只是独立计算机里面跑了一个程序而已

03:06.320 --> 03:08.320
你买的就是这个程序的使用权

03:10.240 --> 03:11.360
但是在更多的时候

03:11.360 --> 03:13.160
我们平时说服务器的时候

03:13.160 --> 03:13.880
我忘记的

03:13.880 --> 03:15.920
它是一个应用程序

03:15.920 --> 03:18.480
这一块给大家单独拎出来说一下

03:18.480 --> 03:20.760
很多时候我们说服务器

03:20.760 --> 03:22.280
对我们开发者而言

03:22.280 --> 03:23.680
都指的是它是一个应用程序

03:23.680 --> 03:24.520
什么要应用程序

03:24.520 --> 03:26.280
它本质上跟QQ

03:26.280 --> 03:27.280
微信

03:27.280 --> 03:28.560
还有你的流量器

03:28.560 --> 03:30.000
没有什么本质的区别

03:30.000 --> 03:31.840
它就是跑出来的一个应用程序

03:31.840 --> 03:33.960
那么这个程序可以用加把写

03:33.960 --> 03:35.800
可以用C和C要加写

03:35.800 --> 03:36.800
可以用拍摄写

03:36.800 --> 03:38.080
可以用PSP写

03:38.080 --> 03:40.400
也可以用我们的介事员写

03:40.400 --> 03:40.560
对吧

03:40.560 --> 03:42.520
介事员就在漏的环境里面写

03:42.520 --> 03:43.520
所以我们后边的漏的客人

03:43.520 --> 03:46.360
会教大家如何来写这个服务器

03:46.360 --> 03:46.840
对吧

03:46.840 --> 03:49.760
这是服务器的不同的含义

03:49.760 --> 03:51.600
我们之后本节课

03:51.600 --> 03:53.600
里边说到了所有服务器

03:53.600 --> 03:55.360
都指的是应用程序

03:55.360 --> 03:56.920
不再指计创机

03:56.920 --> 03:58.680
那么服务器它为什么会出现呢

03:58.680 --> 04:00.360
它为什么需要一个服务器呢

04:00.360 --> 04:01.200
你想啊

04:01.200 --> 04:04.200
咱们在很多的软件

04:04.200 --> 04:05.040
还是也好

04:05.040 --> 04:06.360
还有网站也好

04:06.360 --> 04:10.800
它不可能把数据保存在用户的电脑上

04:10.800 --> 04:13.760
比方说里面玩那个什么网走荣耀对吧

04:13.760 --> 04:15.200
我不是很会玩这个游戏

04:15.200 --> 04:19.520
我玩那个以前那个英雄联盟还行

04:19.520 --> 04:20.280
有些游戏

04:20.280 --> 04:21.560
你们下载下载这个客户端

04:21.560 --> 04:22.000
对不对

04:22.040 --> 04:23.640
下来下来是一个应用程序

04:23.640 --> 04:26.040
但是那个应用程序里边

04:26.040 --> 04:28.400
你怎么知道别人在哪呢

04:28.400 --> 04:30.320
你玩那个王子农要兑现的时候

04:30.320 --> 04:30.960
对吧

04:30.960 --> 04:32.000
你去抓别人的时候

04:32.000 --> 04:32.880
你打野的时候

04:32.880 --> 04:33.920
对吧

04:33.920 --> 04:34.880
别人在什么位置

04:34.880 --> 04:36.000
你怎么知道呢

04:36.000 --> 04:38.560
你的电脑上也没有保存别人的位置

04:38.560 --> 04:41.480
那么是不是要通过一个服务器来进行通信啊

04:41.480 --> 04:44.320
服务器知道别人在什么位置

04:44.320 --> 04:45.760
于是你问一下服务器

04:45.760 --> 04:46.640
他在什么位置

04:46.640 --> 04:48.760
服务器告诉你他在什么位置

04:48.760 --> 04:50.640
所以他需要跟服务器之间通信

04:50.640 --> 04:53.560
比方你们10个人一局游戏嘛

04:53.560 --> 04:57.040
那么10个人就组成了一个网络

04:57.040 --> 05:00.600
每个每个人的手机上跟这个服务器进行通信

05:00.600 --> 05:02.200
那么服务器是全知的

05:02.200 --> 05:03.760
服务器什么情况都知道

05:03.760 --> 05:06.520
那么他根据情况把不同的信息

05:06.520 --> 05:08.800
分发到不同的客户端里面

05:08.800 --> 05:10.600
于是你们的手机上

05:10.600 --> 05:12.760
就知道了每个人的位置信息

05:12.760 --> 05:13.360
对不对

05:13.360 --> 05:15.240
所以说这就是为什么啊

05:15.240 --> 05:16.280
你们需要联网

05:16.280 --> 05:16.560
对不对

05:16.560 --> 05:18.040
你不能断网断网的话

05:18.040 --> 05:20.880
就别人的位置信息就丢失了

05:20.880 --> 05:21.040
好

05:21.040 --> 05:22.840
这是这么一个回事啊

05:22.840 --> 05:25.040
包括我们访问网站也是这样子对不对

05:25.040 --> 05:26.360
像我们访问百度啊

05:26.360 --> 05:27.320
访问新浪

05:27.320 --> 05:29.840
访问各种各样的网站啊

05:29.840 --> 05:31.600
那么网站里边这些图片

05:31.600 --> 05:33.440
在不在你的电脑上不在吧

05:33.440 --> 05:35.280
网站里边这些新闻数据

05:35.280 --> 05:37.440
各种视频数据也不在你的电脑上

05:37.440 --> 05:40.640
说是需要一个远端来进行存出

05:40.640 --> 05:42.880
那么这是服务器来承担的作用

05:42.880 --> 05:44.160
其实服务器归根到底呢

05:44.160 --> 05:45.720
他就是提供服务的

05:45.720 --> 05:47.240
一切皆为服务

05:47.280 --> 05:48.440
他给你提供一些服务

05:48.440 --> 05:50.160
于是他就变成了一个服务器

05:50.160 --> 05:52.960
那么我们为把这种在互联网中

05:52.960 --> 05:54.600
提供服务的这种服务器呢

05:54.600 --> 05:56.320
称之为web服务器

05:56.320 --> 05:57.360
我们平时web是没什么意思

05:57.360 --> 05:59.040
去互联网的意思

05:59.040 --> 06:00.360
他是为互联网

06:00.360 --> 06:01.800
大众提供服务的

06:01.800 --> 06:03.280
把称之为web服务器

06:04.480 --> 06:05.320
那么以前呢

06:05.320 --> 06:06.440
这个web服务器的干颜呢

06:06.440 --> 06:08.240
是比较狭窄的啊

06:08.240 --> 06:10.880
仅仅是给流烂器提供服务的

06:10.880 --> 06:13.360
比如我们访问一个王一个地址

06:13.360 --> 06:15.680
那么他就可以得到一个网页

06:15.680 --> 06:16.960
以前的比干颜比较狭窄

06:17.000 --> 06:18.240
现在的web服务器的

06:18.240 --> 06:20.760
概念已经非常宽泛了

06:20.760 --> 06:22.560
我们平时说web服务器

06:22.560 --> 06:24.080
甚至跟那些游戏服务器界线

06:24.080 --> 06:25.520
已经非常模糊了

06:25.520 --> 06:26.520
就表示的说

06:26.520 --> 06:28.160
我在互联网中我提供了服务

06:29.160 --> 06:29.920
不管是什么服务

06:29.920 --> 06:31.080
比方说的移动端

06:31.080 --> 06:32.040
一手机要访问我

06:32.040 --> 06:33.840
那我也是web服务器

06:33.840 --> 06:35.040
你是一个游戏客户端

06:35.040 --> 06:36.360
你是个王的荣耀里要访问我

06:36.360 --> 06:38.040
我也是个web服务器

06:38.040 --> 06:40.040
所以说界线比较模糊了

06:40.040 --> 06:41.160
把概念给大家说一下

06:43.320 --> 06:44.080
然后呢

06:44.080 --> 06:44.800
我们今天呢

06:44.800 --> 06:47.200
会安装一个小的插件

06:47.200 --> 06:49.080
叫做neve server

06:49.080 --> 06:50.480
小的插件

06:50.480 --> 06:51.360
这个插件之前呢

06:51.360 --> 06:55.040
我在我的开发过程中也用到了

06:55.040 --> 06:56.720
点击这个vscode里面一个插件

06:56.720 --> 06:58.440
叫做neve server

06:58.440 --> 06:59.560
它其实就是一个程序

07:01.600 --> 07:02.720
你可以去收一下

07:02.720 --> 07:03.360
就这个玩意

07:03.360 --> 07:04.680
你把安装一下

07:04.680 --> 07:05.280
这个插件

07:05.280 --> 07:06.320
它其实就是一个程序

07:06.320 --> 07:08.000
我们说了服务器就是个程序

07:08.000 --> 07:08.960
它来做什么呢

07:08.960 --> 07:10.440
它可以在你的计算机上

07:10.440 --> 07:12.200
给你搭建一个服务器

07:12.200 --> 07:14.040
那么这个服务器有什么作用呢

07:14.240 --> 07:14.720
你看啊

07:14.720 --> 07:17.120
我这里比方说写一个文件

07:17.120 --> 07:18.000
test atmail

07:24.170 --> 07:24.850
还有什么作用呢

07:24.850 --> 07:26.330
你看我写个atmail文件之后呢

07:26.330 --> 07:27.570
我可以点击右键

07:27.570 --> 07:29.290
open with neve server

07:29.290 --> 07:30.610
于是呢

07:30.610 --> 07:32.330
这个插件它就启动了

07:32.330 --> 07:33.050
启动过后了

07:33.050 --> 07:35.450
它会在本地搭一个服务器

07:35.450 --> 07:36.130
搭一个服务器

07:36.130 --> 07:37.290
你看我现在访问地址

07:37.290 --> 07:38.530
就不是一个文件地址的

07:38.530 --> 07:39.210
对吧

07:39.210 --> 07:40.650
有点像一个王子

07:40.650 --> 07:41.170
对不对

07:41.170 --> 07:43.290
一变像这种这种王子

07:43.290 --> 07:44.290
就有点类似啊

07:44.290 --> 07:45.930
有这种类似的感觉了

07:45.930 --> 07:47.450
那么为什么能够访问到呢

07:47.450 --> 07:49.570
就是因为它在本地搭了一个服务器

07:49.570 --> 07:50.130
没啥意思

07:50.130 --> 07:51.530
所以说要把插件安装一下

07:51.530 --> 07:51.890
以后呢

07:51.890 --> 07:53.650
我们可能会用到

07:53.650 --> 07:53.850
好

07:53.850 --> 07:55.010
这是第一个阶段啊

07:55.010 --> 07:56.410
服务器的概念

07:58.250 --> 07:58.490
好

07:58.490 --> 08:00.450
接下来就是一大波的个

08:00.450 --> 08:02.010
各种专业术语和概念

08:02.010 --> 08:02.810
就要度上来了

08:04.090 --> 08:04.810
第一个问题

08:06.130 --> 08:07.330
如何访问服务器

08:10.130 --> 08:11.570
这里要解决一个什么问题呢

08:11.570 --> 08:13.290
就是说我们服务器呢

08:13.290 --> 08:15.250
首先它是一个应用程序

08:15.290 --> 08:16.810
但是应用程序要跑起来

08:16.810 --> 08:19.090
是不是必须要在一台计算机上

08:19.090 --> 08:21.130
甭管它是在我们这台计算机

08:21.130 --> 08:22.490
还是在别人的计算机上

08:22.490 --> 08:22.810
对吧

08:22.810 --> 08:23.810
真实的环境里面

08:23.810 --> 08:25.450
已经是在别人的计算机上

08:25.450 --> 08:26.770
不在你这儿

08:26.770 --> 08:28.570
不管它在哪儿吧

08:28.570 --> 08:30.650
我要把它找到对不对

08:30.650 --> 08:32.730
互联网上有这么多计算机

08:32.730 --> 08:35.730
每个计算机里边有这么多程序

08:35.730 --> 08:38.330
我要精确的在互联网中找到

08:38.330 --> 08:40.410
我要访问的那个计算机

08:40.410 --> 08:43.730
我要访问的那个计算机上的跑的程序

08:43.730 --> 08:45.970
是不是需要一个定位

08:45.970 --> 08:47.570
那么这个定位如何来定位呢

08:47.570 --> 08:49.290
就是我们这一个部分要解决的问题

08:51.010 --> 08:53.050
我们要找到我们的服务器程序

08:53.050 --> 08:55.570
就必须要有这么三个条件

08:55.570 --> 08:56.130
第一个

08:56.130 --> 08:57.490
首先你要定位它的计算机

08:57.490 --> 08:58.010
它在哪儿

08:59.290 --> 09:00.130
第二个

09:00.130 --> 09:02.730
你要进计算机中有很多的程序

09:02.730 --> 09:02.930
对吧

09:02.930 --> 09:03.970
有它可能跑QQ

09:03.970 --> 09:05.970
当然服务器不可能跑QQ

09:05.970 --> 09:08.050
不可能跑各种其他的应用程序

09:08.050 --> 09:08.730
你要把它找到

09:09.930 --> 09:11.530
找到它的程序

09:11.530 --> 09:12.650
还有一个问题就是

09:12.650 --> 09:14.730
这个程序里边可能会提供很多功能

09:14.730 --> 09:16.570
比如说我们这个VS code的程序

09:16.570 --> 09:18.570
它里边是不是有很多功能

09:18.570 --> 09:18.810
对不对

09:18.810 --> 09:19.370
你看吧

09:19.370 --> 09:20.770
这边菜单就有很多功能嘛

09:20.770 --> 09:21.330
对不对

09:21.330 --> 09:23.650
你到底要访问它的什么功能

09:24.770 --> 09:28.570
你可以这样子先感兴的去想象一下

09:28.570 --> 09:30.410
所以是这么三个问题要解决

09:30.410 --> 09:32.210
那么这三个问题如何解决呢

09:32.210 --> 09:33.650
就需要一个统一的规范

09:33.650 --> 09:35.970
不然的话你用一套方式

09:35.970 --> 09:36.770
我用一套方式

09:36.770 --> 09:38.450
那服务器就理解不了

09:38.450 --> 09:38.930
对不对

09:38.930 --> 09:41.330
服务器就必须要有一个统一的规范

09:41.330 --> 09:42.970
大家都这么来访问

09:42.970 --> 09:44.690
我就能看懂了

09:44.690 --> 09:45.970
那么到底怎么来访问呢

09:47.090 --> 09:51.490
我们通常使用URL地址来描述

09:51.490 --> 09:53.050
上面的三个关键信息

09:54.290 --> 09:55.730
那么这个URL地址

09:55.730 --> 09:58.650
称之为统一资源定位服务

09:58.650 --> 09:59.810
是UI的一种

09:59.810 --> 10:02.330
在UI数上我们就再起步表了

10:02.330 --> 10:03.330
我们跟着逐渐走

10:04.210 --> 10:05.330
URL是什么东西呢

10:05.330 --> 10:06.770
它本质上就是一个制补串

10:06.770 --> 10:07.450
你看下面这个

10:08.330 --> 10:09.690
就是一个URL地址

10:09.690 --> 10:10.730
它本质上就是个制补串

10:11.330 --> 10:12.410
它的格式是什么呢

10:12.410 --> 10:13.810
就这个格式

10:13.810 --> 10:15.730
一个完整的URL制服串

10:15.730 --> 10:16.970
它就是这么一种格式

10:16.970 --> 10:19.290
当然这里边有些地方是可以省略的

10:19.290 --> 10:20.610
是可以不写的

10:20.610 --> 10:21.490
那我们来看一下

10:21.490 --> 10:23.330
这里边有哪些部分组成

10:23.330 --> 10:24.450
说你要学ADB协议

10:24.450 --> 10:27.450
首先得认识这个URL地址

10:27.450 --> 10:28.610
第一个部分

10:28.610 --> 10:30.010
Protocol

10:30.010 --> 10:32.050
有的时候也把称之为SKMAP

10:32.050 --> 10:32.650
它叫做什么呢

10:32.650 --> 10:36.140
它叫做协议

10:36.140 --> 10:36.820
什么意思呢

10:36.820 --> 10:38.300
这一块我们这里

10:38.300 --> 10:40.740
由于大家还没有学习过其他协议

10:40.740 --> 10:42.140
所以说我这里给它解释

10:42.180 --> 10:44.260
就不是很好解释

10:44.260 --> 10:46.140
就是说它大概什么意思呢

10:46.140 --> 10:47.420
大概就是说

10:47.420 --> 10:49.140
高速服务器我要给你通信了

10:49.140 --> 10:50.460
我要跟你相互访问

10:50.460 --> 10:51.940
我要访问你的

10:51.940 --> 10:53.740
那么将来我访问你的时候

10:53.740 --> 10:55.300
我们之间

10:55.300 --> 10:58.940
我们是用一种什么标准来通信

10:58.940 --> 11:00.300
就是我给你发什么样的数据

11:00.300 --> 11:01.660
你给我发什么样的数据

11:01.660 --> 11:02.140
对吧

11:02.140 --> 11:04.460
我给服务器之间约定一种标准

11:04.460 --> 11:05.780
所以不同的标准的格式

11:05.780 --> 11:07.540
这个消息格式是不是不一样

11:07.540 --> 11:10.820
你不要说你跟别人聊天的时候

11:11.820 --> 11:13.660
首先你得也确定对方是

11:13.660 --> 11:15.140
里面认识网友的时候

11:15.140 --> 11:16.860
你得确定对方是男是女

11:16.860 --> 11:17.340
对不对

11:17.340 --> 11:19.820
聊天的方式肯定是不一样的

11:19.820 --> 11:22.020
或者是你在确定它是不是中国人

11:22.020 --> 11:22.340
对吧

11:22.340 --> 11:24.820
那聊天的内容肯定是不一样的

11:24.820 --> 11:25.940
你得确定它的

11:25.940 --> 11:27.660
你跟它聊的是工作啊

11:27.660 --> 11:28.860
还是生活啊

11:28.860 --> 11:30.580
那聊天的方式也不一样

11:30.580 --> 11:32.780
所以说这一块就是双方约定好

11:32.780 --> 11:35.100
我们是用什么样的标准来进行通信

11:35.100 --> 11:37.100
那么这一块标准呢

11:37.100 --> 11:39.860
绝大部分情况下就两种

11:40.020 --> 11:40.980
一个是ATVP

11:40.980 --> 11:42.260
一个是ATVS

11:42.260 --> 11:43.300
ATVS呢

11:43.300 --> 11:45.140
我们是在后期的六个课程里面

11:45.140 --> 11:47.540
或者一整节课的时间给大家讲的啊

11:47.540 --> 11:49.100
我们今天就先认识ATVP

11:49.100 --> 11:50.660
你把先把这个东西搞清楚了

11:50.660 --> 11:51.500
ATVS呢

11:51.500 --> 11:52.780
其实并不难

11:52.780 --> 11:53.980
它需要要招一点啊

11:53.980 --> 11:55.980
但是它是建立在ATV基础上的

11:57.340 --> 11:58.860
那么我们今天这一块呢

11:58.860 --> 12:02.460
这里就全写ATVP固定写ATV就行了

12:02.460 --> 12:02.660
好

12:02.660 --> 12:03.740
这一部分啊

12:03.740 --> 12:05.460
然后边是一个固定的帽号

12:05.460 --> 12:07.180
一个两个鞋线

12:07.180 --> 12:07.980
这一部分是什么呢

12:07.980 --> 12:09.540
它叫做HouseName

12:09.540 --> 12:11.140
叫做主机名

12:11.140 --> 12:11.940
主机名呢

12:11.940 --> 12:14.220
它有不同的鞋法啊

12:14.220 --> 12:16.300
可以是IP地址

12:16.300 --> 12:17.900
也可以是域名

12:17.900 --> 12:18.740
都可以啊

12:19.980 --> 12:20.740
那么这一块呢

12:20.740 --> 12:26.490
你看我们平时访问百度的时候

12:26.490 --> 12:30.920
这一块我们把复制一下啊

12:30.920 --> 12:31.520
粘过来啊

12:31.520 --> 12:31.960
粘开过来

12:31.960 --> 12:33.200
因为在浏览器里边

12:33.200 --> 12:34.640
它把前面的东西给省去了啊

12:34.640 --> 12:35.320
粘过来

12:35.320 --> 12:36.880
你看这一部分就是HouseName

12:36.880 --> 12:38.560
就是主机名的意思

12:38.560 --> 12:39.760
没了意思吧

12:39.760 --> 12:40.800
那么它这里写的是什么呢

12:40.800 --> 12:41.840
实在是域名

12:41.840 --> 12:43.160
那写IP地址行不行呢

12:43.160 --> 12:45.760
那么我们看一下百度的IP地址啊

12:45.760 --> 12:47.400
我这里就直接聘一下吧

12:48.800 --> 12:51.840
聘一下啊

12:51.840 --> 12:53.520
它是这个复制一下啊

12:53.520 --> 12:57.300
它的IP地址

12:57.300 --> 12:58.300
看一下IP地址行不行呢

13:00.300 --> 13:04.710
IP地址它就不能加ATPS了啊

13:04.710 --> 13:06.230
ITP

13:06.230 --> 13:08.430
你看这个也可以访问

13:08.430 --> 13:08.910
对吧

13:08.910 --> 13:09.830
当然有些服务器

13:09.830 --> 13:11.350
它不允许利用IP地址访问啊

13:11.350 --> 13:12.750
在百度还可以

13:12.750 --> 13:14.830
那么这就是它HouseName部分

13:15.830 --> 13:16.430
好

13:16.430 --> 13:17.150
第三个部分呢

13:17.150 --> 13:19.310
是这个主机名我再说一下啊

13:19.310 --> 13:20.830
简单说一下

13:20.830 --> 13:21.510
IP呢

13:21.510 --> 13:24.350
它里边有一些特殊的IP段

13:24.350 --> 13:27.990
比方说像这个127.0.0.1

13:27.990 --> 13:30.030
它表示的是一个特殊IP啊

13:30.030 --> 13:31.710
如果说你写这样的IP地址的话

13:31.710 --> 13:33.270
你相当于是访问本机

13:33.270 --> 13:34.510
你看这一部分

13:34.510 --> 13:36.630
是不是127.0.0.1

13:36.630 --> 13:38.590
我们在本地打了一个服务器

13:38.590 --> 13:39.190
靠什么打的

13:39.190 --> 13:39.830
靠那个插件

13:39.830 --> 13:40.670
你有什么打的

13:40.670 --> 13:41.630
自动给打了

13:41.630 --> 13:42.750
所以我们这里就访问

13:42.750 --> 13:43.870
访问的是本机

13:43.910 --> 13:46.270
它就不会到我互联网里面去找了

13:46.270 --> 13:47.430
因为在互联网中的

13:47.430 --> 13:49.510
每一台计算机都有一个唯一的IP

13:49.510 --> 13:50.230
对不对

13:50.230 --> 13:51.390
所以有一个唯一的IP

13:51.390 --> 13:52.430
那么通过IP地址

13:52.430 --> 13:54.070
是不是可以找到

13:54.070 --> 13:56.270
互联网中的那个计算机了

13:56.270 --> 13:57.430
对不对

13:57.430 --> 13:58.430
当然内网IP呢

13:58.430 --> 13:59.030
它又不一样

13:59.030 --> 14:01.710
是192.168开头的对吧

14:01.710 --> 14:01.870
好

14:01.870 --> 14:02.670
那么在于鸣呢

14:02.670 --> 14:03.510
我单独说一下

14:03.510 --> 14:04.390
于鸣呢

14:04.390 --> 14:06.830
它其实最终也会转换成IP

14:06.830 --> 14:07.670
它通过什么转换

14:07.670 --> 14:09.150
通过一个DNS服务器啊

14:09.150 --> 14:10.190
我们这里提一句

14:10.190 --> 14:10.790
那一块呢

14:10.790 --> 14:12.910
展开又长了

14:12.910 --> 14:14.630
就是通过一个东西

14:14.630 --> 14:17.110
它可以把你的域名比较容易访问百度

14:17.110 --> 14:17.950
它会把这个东西呢

14:17.950 --> 14:20.470
转换成IP地址

14:20.470 --> 14:22.190
最终会转换成IP地址

14:22.190 --> 14:24.270
所以说最终还是通过IP来访问的

14:24.270 --> 14:25.710
但是你为什么要域名呢

14:25.710 --> 14:27.630
因为IP地址不是很好记

14:27.630 --> 14:27.790
对吧

14:27.790 --> 14:28.350
你记百度

14:28.350 --> 14:29.710
你去记这个玩意

14:29.710 --> 14:31.230
这个玩意就封掉了

14:31.230 --> 14:31.870
不是很好记

14:31.870 --> 14:33.150
但是记百度是不是很好记

14:33.150 --> 14:33.390
对吧

14:33.390 --> 14:34.550
一个域名好记一点

14:34.550 --> 14:36.110
听什么

14:36.110 --> 14:37.870
那么其中有一个特殊的主机名

14:37.870 --> 14:39.510
叫做Local Horst

14:39.510 --> 14:40.230
那么这个东西呢

14:40.230 --> 14:41.550
也是比较特殊的啊

14:41.590 --> 14:42.350
遇到这个单词呢

14:42.350 --> 14:44.430
还会被解析为本机

14:44.430 --> 14:47.030
还会被解析为127.0.0.1

14:47.030 --> 14:47.870
没了意思吧

14:47.870 --> 14:48.550
其实这个东西呢

14:48.550 --> 14:51.870
在操作系统那边还可以配置的啊

14:51.870 --> 14:52.510
我们这里呢

14:52.510 --> 14:55.310
看一下

14:55.310 --> 14:58.830
这里我们把它变成Local Horst

14:58.830 --> 14:59.950
你看

14:59.950 --> 15:01.710
还是说还是可以访问

15:01.710 --> 15:02.830
没问题吧

15:02.830 --> 15:04.430
这是HorseLin

15:04.430 --> 15:04.630
好

15:04.630 --> 15:05.710
接下来这一部分完了啊

15:05.710 --> 15:07.550
接下来下一部分叫Port

15:07.550 --> 15:09.190
短口号

15:09.190 --> 15:09.670
这个呢

15:09.670 --> 15:11.310
是一个数字啊

15:11.310 --> 15:14.110
是一个种数

15:14.150 --> 15:15.590
它相当于是怎么来你看啊

15:15.590 --> 15:17.270
我们的协议表示的是

15:17.270 --> 15:18.870
跟服务器之间的通信的方式

15:18.870 --> 15:19.750
一个标准

15:19.750 --> 15:22.190
HorseLin是为了在互联网中定位到

15:22.190 --> 15:22.830
我一个计算机

15:22.830 --> 15:24.510
前面不是说了这三个问题吗

15:24.510 --> 15:25.790
先首先定位到计算机

15:25.790 --> 15:26.950
计算机找到了

15:26.950 --> 15:28.430
但计算机找到了过后

15:28.430 --> 15:30.670
计算机上跑了很多程序啊

15:30.670 --> 15:32.550
他跑了很多的程序

15:32.550 --> 15:34.910
那么我到底要访问哪个程序呢

15:34.910 --> 15:36.870
有一些程序你是不能访问的

15:36.870 --> 15:38.150
比方说你要把你的电脑

15:38.150 --> 15:39.710
做成一个服务器啊

15:39.710 --> 15:41.270
这里不要实现很多

15:41.270 --> 15:43.190
我就说如果假如你的电脑

15:43.190 --> 15:45.230
变成一个服务器

15:45.230 --> 15:46.990
你是不是不希望这个电脑中

15:46.990 --> 15:49.230
你电脑中跑了几百个程序

15:49.230 --> 15:50.230
你打开你的任务管理器

15:50.230 --> 15:50.790
看一下啊

15:50.790 --> 15:52.190
至少有几十个

15:52.190 --> 15:53.430
那么这几十个的程序

15:53.430 --> 15:55.070
你是不是不希望说

15:55.070 --> 15:56.910
有些程序是不希望对外面访问的

15:56.910 --> 15:57.510
对不对

15:57.510 --> 15:58.430
有些程序呢

15:58.430 --> 16:01.110
是可以提供给外面访问的

16:01.110 --> 16:02.110
明儿的意思吧

16:02.110 --> 16:04.270
那么别人来访问的时候

16:04.270 --> 16:05.990
他到底访问哪一个程序呢

16:05.990 --> 16:07.150
怎么来告诉他呢

16:07.150 --> 16:08.950
他就通过端口号

16:08.950 --> 16:10.710
你可以这样子想象啊

16:10.710 --> 16:12.190
服务器

16:12.190 --> 16:14.870
就是计算机是一栋大楼

16:14.870 --> 16:15.710
这个楼里边呢

16:15.710 --> 16:19.590
有很多很多的房间

16:19.590 --> 16:20.910
每个房间的空着

16:20.910 --> 16:22.910
每个房间空着

16:22.910 --> 16:23.470
然后呢

16:23.470 --> 16:25.950
每一个房间有个门牌号

16:25.950 --> 16:27.870
这个门牌号就是端口号

16:27.870 --> 16:29.350
所以端口号不能重复

16:29.350 --> 16:30.110
对不对

16:30.110 --> 16:30.670
好

16:30.670 --> 16:32.270
每一个房间的

16:32.270 --> 16:33.590
每个房间是空的

16:33.590 --> 16:33.990
但是呢

16:33.990 --> 16:36.270
如果说你有一个程序

16:36.270 --> 16:38.270
需要对外提供访问啊

16:38.270 --> 16:40.070
需要对外提供服务

16:40.070 --> 16:42.670
那么他就住进这个房间里边去

16:42.670 --> 16:45.590
我们就把它叫做监听端口

16:45.590 --> 16:48.470
比方说你像这个leaf server

16:48.470 --> 16:49.670
leaf server这个程序呢

16:49.670 --> 16:50.950
他就监听了哪个端口了

16:50.950 --> 16:53.670
监听了5500这个端口

16:53.670 --> 16:54.470
看到没

16:54.470 --> 16:55.270
那么于是呢

16:55.270 --> 16:57.110
我通过5500这个端口

16:57.110 --> 16:59.550
是不是就可以访问到这个程序了

16:59.550 --> 17:00.350
访问到哪个程序

17:00.350 --> 17:02.630
访问到我们安装那个leaf server这个程序

17:02.630 --> 17:03.670
好leaf server给我们什么

17:03.670 --> 17:04.550
给我们的一个网页

17:04.550 --> 17:06.070
这个网页就是这个东西

17:06.070 --> 17:07.030
明儿的意思吧

17:07.030 --> 17:07.590
那是不说

17:07.590 --> 17:08.790
就换一个端口行不行的

17:10.470 --> 17:11.190
不好意思

17:11.190 --> 17:13.230
这个端口这个门牌号里边

17:13.230 --> 17:14.630
这个房间是空的

17:14.630 --> 17:15.550
没有人住

17:15.550 --> 17:16.550
没有人住的话

17:16.550 --> 17:17.310
以访问那个端口

17:17.310 --> 17:19.110
没有人监听啊

17:19.110 --> 17:19.550
没有人监听

17:19.550 --> 17:20.470
没有人接地开门

17:20.470 --> 17:21.750
所以说你啥都得不到啊

17:21.750 --> 17:22.950
无法访问这个网站

17:22.950 --> 17:24.310
比方说访问百度的时候

17:24.310 --> 17:26.270
我给他换一个端口啊

17:26.270 --> 17:27.470
比方说随便给他写个吧

17:28.470 --> 17:28.990
他甩过我们吗

17:28.990 --> 17:30.710
还是不甩我们的啊

17:30.710 --> 17:32.070
你看就没有响应了啊

17:32.070 --> 17:33.950
一来算了算得不到任何响应

17:33.950 --> 17:35.470
因为没有人去去监

17:35.470 --> 17:36.350
百度那个服务器

17:36.350 --> 17:37.990
他没有监听这个端口

17:37.990 --> 17:39.630
房间里面没住人

17:39.630 --> 17:40.990
明儿的意思吧

17:40.990 --> 17:41.110
好

17:41.110 --> 17:41.990
这个端口号

17:41.990 --> 17:43.310
那么通过这个端口号

17:43.310 --> 17:45.150
是不是又可以定位到应用程序了

17:45.150 --> 17:45.870
你看啊

17:45.870 --> 17:46.950
前边定位到计算机

17:46.950 --> 17:48.910
然后再定位到应用程序

17:48.910 --> 17:49.670
对吧

17:49.670 --> 17:49.830
好

17:49.830 --> 17:51.350
这个端口号里边呢

17:51.350 --> 17:52.070
我再说一下

17:52.070 --> 17:53.270
它是有默认值的

17:53.270 --> 17:54.350
就是你可以不写

17:54.350 --> 17:56.110
你看刚刚我们访问百度的时候

17:56.110 --> 17:57.110
这个您发不开了

17:57.110 --> 17:57.550
对吧

17:57.550 --> 17:58.710
访问百度的时候呢

17:58.710 --> 18:00.070
一个端口号是可以不写的

18:01.310 --> 18:02.430
不写的时候

18:02.430 --> 18:05.710
它有默认端口号

18:05.750 --> 18:07.950
浏览器会给你自动加

18:07.950 --> 18:10.350
那么个默认端口号是啥呢

18:10.350 --> 18:12.350
如果你是ATP协议

18:12.350 --> 18:14.070
如果说你是这个协议的话

18:14.070 --> 18:15.670
那么它的端口号是八零

18:15.670 --> 18:16.230
默认端口

18:16.230 --> 18:16.950
就是你不写的话

18:16.950 --> 18:19.190
还会给你自动加上八零

18:19.190 --> 18:20.630
那么我们来看一下啊

18:20.630 --> 18:24.260
访问这个地址

18:24.260 --> 18:24.540
为什么

18:26.540 --> 18:27.140
它有个重定

18:27.140 --> 18:29.860
像一个有定位到ATP s的啊

18:29.860 --> 18:31.820
或者说我们刚刚看到IP地址的IP地址

18:31.820 --> 18:33.620
是看得比较明显的

18:33.620 --> 18:34.300
再加上八零

18:35.900 --> 18:36.500
是一样的

18:37.500 --> 18:38.780
没问题吧

18:38.780 --> 18:41.740
如果说你是ATP s协议的话

18:41.740 --> 18:44.860
那么它的默认端口是四十三

18:44.860 --> 18:48.200
比方说我们这里访问这个地址

18:48.200 --> 18:49.320
你看是不是也可以访问

18:49.320 --> 18:49.520
对吧

18:49.520 --> 18:50.440
它就流量器里面

18:50.440 --> 18:51.920
就没给你显示这个端口号了

18:51.920 --> 18:53.160
实际上它端口号有没有

18:53.160 --> 18:53.920
它有

18:53.920 --> 18:54.920
它是默认端口

18:56.080 --> 18:57.240
继续啊

18:57.240 --> 18:58.920
咱们找到了应用程序

18:58.920 --> 19:01.000
找到的计算机找到应用程序

19:01.000 --> 19:01.800
现在问题回来了

19:01.800 --> 19:03.680
一步一步的细化

19:03.680 --> 19:05.080
那么这个程序里边

19:05.080 --> 19:06.240
它有很多服务啊

19:06.240 --> 19:07.680
比方说我百度里边

19:07.680 --> 19:09.320
百度有很多服务啊

19:09.320 --> 19:11.080
有新闻

19:11.080 --> 19:12.680
有什么好一二三的

19:12.680 --> 19:14.360
他们以前把那个网站收购了

19:14.360 --> 19:15.440
有那个是地图

19:15.440 --> 19:16.880
有些乱七八糟的各种服务

19:18.040 --> 19:18.680
有登录

19:18.680 --> 19:19.880
有注册

19:19.880 --> 19:20.920
有验证码

19:20.920 --> 19:21.960
还有什么天气

19:21.960 --> 19:23.440
是不是有各种服务

19:23.440 --> 19:24.360
还有搜索

19:24.360 --> 19:26.280
那么不同的服务

19:26.280 --> 19:28.400
我到底要访问哪一个服务呢

19:28.400 --> 19:30.200
就是一个程序里边有很多服务

19:30.200 --> 19:31.560
就是你进了这个房间了

19:31.560 --> 19:32.920
这个房间

19:32.920 --> 19:34.880
用一口地道的伦敦枪问你

19:34.880 --> 19:35.760
没HAPPY有事

19:36.760 --> 19:38.360
他能为你个做啥呢

19:38.360 --> 19:39.600
你需要告诉他

19:39.600 --> 19:41.680
那么怎么来告诉他的服务呢

19:41.680 --> 19:44.120
一般来说通过两种方式

19:44.120 --> 19:45.960
这两种方式可以混合着用啊

19:45.960 --> 19:46.800
到底用哪一种呢

19:46.800 --> 19:48.120
看服务器的规定

19:48.120 --> 19:49.480
每个服务器不一样的

19:49.480 --> 19:51.080
服务器就是你自己写的程序啊

19:51.080 --> 19:52.960
里面以后都自己会写

19:52.960 --> 19:54.240
不是说我安装一个软件

19:54.240 --> 19:55.440
他就自动完成了

19:55.440 --> 19:56.240
不是他

19:56.240 --> 19:58.000
他需要自己写代码调出来的啊

19:58.000 --> 19:59.400
所以说为什么

19:59.400 --> 20:01.000
加把那些是后端开发的人员

20:01.000 --> 20:01.200
对吧

20:01.200 --> 20:02.920
他们要写服务器程序的

20:02.920 --> 20:05.040
那边看一个服务器程序咋写着的

20:05.080 --> 20:06.120
他到底认啥

20:06.120 --> 20:07.200
双方要约定好

20:07.200 --> 20:08.600
你们以后到了公司里边

20:08.600 --> 20:09.800
也得你做前端开发

20:09.800 --> 20:11.200
他一般会给一个文档

20:11.200 --> 20:13.400
就是服务器到底要什么

20:13.400 --> 20:15.200
拿什么样的UIL地址

20:15.200 --> 20:16.600
你能能拿到什么样的服务

20:16.600 --> 20:17.400
他会告诉你的

20:18.880 --> 20:19.920
那么他怎么告诉你呢

20:19.920 --> 20:21.520
他主要是告诉你这两个

20:21.520 --> 20:23.000
query and pass和query

20:24.320 --> 20:26.680
这两个就共同决定了

20:26.680 --> 20:28.840
服务器要给力什么东西

20:28.840 --> 20:33.280
你希望你要让服务器提供什么样的服务给力

20:33.440 --> 20:34.200
你找到这个程序

20:34.200 --> 20:35.960
程序里面有很多服务

20:35.960 --> 20:37.520
那么这个pass是啥呢

20:37.520 --> 20:38.720
这个pass就是路径

20:38.720 --> 20:39.440
没啥意思

20:39.440 --> 20:40.880
就是一个字无窜

20:40.880 --> 20:43.240
比方说你请求这样的地址

20:43.240 --> 20:43.920
pass是什么呢

20:43.920 --> 20:46.640
pass就是一个鞋杠

20:46.640 --> 20:47.880
表示什么意思呢

20:47.880 --> 20:49.600
不表示啥意思

20:49.600 --> 20:50.640
百度是怎么理解的呢

20:50.640 --> 20:51.880
百度是这样理解的

20:51.880 --> 20:55.200
如果说你的pass是一个鞋杠的话

20:55.200 --> 20:57.480
那么我就给你百度的首页

20:57.480 --> 20:58.320
我就给你一个网页

20:58.320 --> 21:00.640
你看我就看到了一个网页

21:00.800 --> 21:03.280
就这么个意思

21:03.280 --> 21:04.680
那么标准我这里是搜索一下

21:04.680 --> 21:08.060
随便搜索一个

21:08.060 --> 21:08.540
你看啊

21:08.540 --> 21:10.740
现在地址是不是变了

21:10.740 --> 21:11.660
不要看问号后面了

21:11.660 --> 21:12.460
问号后面不看

21:12.460 --> 21:13.740
看前面的

21:13.740 --> 21:14.700
地址是不是变了

21:14.700 --> 21:16.700
现在地址变成这个

21:16.700 --> 21:17.780
这个网页是啥呢

21:17.780 --> 21:18.700
一个鞋杠也是的

21:18.700 --> 21:21.540
pass现在是它的指示一个鞋杠也是

21:21.540 --> 21:22.500
百度是怎么理解的呢

21:22.500 --> 21:23.860
百度是理解的是

21:23.860 --> 21:25.900
你如果说访问这个地址的话

21:25.900 --> 21:28.260
我就给你一个搜索结果

21:28.260 --> 21:29.340
我就给你不是首页的

21:29.340 --> 21:30.300
给你的是搜索结果

21:30.300 --> 21:31.620
所以说你刷新看一下

21:31.660 --> 21:32.900
还是一个搜索结果

21:32.900 --> 21:34.100
你请求这个地址

21:34.100 --> 21:35.820
就给你一个搜索结果

21:35.820 --> 21:36.820
但是一定要注意

21:36.820 --> 21:39.780
这个东西是百度服务器自己约定的

21:39.780 --> 21:40.980
你不要把这个东西

21:40.980 --> 21:42.660
当成一个公式去套用

21:42.660 --> 21:43.620
不能的

21:43.620 --> 21:45.220
那看别人服务器是怎么写的

21:45.220 --> 21:45.900
比方说

21:45.900 --> 21:47.460
比方说新浪的服务器的搜索

21:47.460 --> 21:49.540
它有可能变成另外一个地址的

21:49.540 --> 21:51.380
新浪服务器可能要变成12

21:52.620 --> 21:54.340
我也有可能说不准的

21:54.340 --> 21:56.420
要看别人服务器是怎么写的

21:56.420 --> 21:56.940
原来的意思吧

21:56.940 --> 21:58.020
就是双方约定好

21:59.620 --> 21:59.820
好

21:59.820 --> 22:01.460
另一个部分的叫做query

22:01.460 --> 22:02.580
query是写到哪的

22:02.580 --> 22:04.300
是写到pass之后的

22:04.300 --> 22:06.180
一个以一个问号开头

22:06.180 --> 22:07.460
后面就全部是query

22:07.460 --> 22:08.860
这一部分是query

22:08.860 --> 22:09.820
query的写法

22:09.820 --> 22:10.500
格式

22:10.500 --> 22:11.580
格式呢

22:11.580 --> 22:13.300
它是一个兼职队的格式

22:13.300 --> 22:13.900
怎么写的呢

22:13.900 --> 22:15.060
你看这

22:15.060 --> 22:17.220
就是属性名属性值

22:17.220 --> 22:18.820
一个and 符号

22:18.820 --> 22:19.780
分割一下

22:19.780 --> 22:21.540
属性名属性值

22:21.540 --> 22:22.860
就这样的写

22:22.860 --> 22:23.380
写成query

22:23.380 --> 22:24.180
那我们来看一下

22:24.180 --> 22:25.660
刚才我们搜索结果里边

22:25.660 --> 22:26.180
这个服务

22:26.180 --> 22:27.020
这个地址

22:27.020 --> 22:28.780
你看一下query是啥

22:28.780 --> 22:29.900
那条道一大堆对吧

22:29.900 --> 22:30.620
没关系

22:30.660 --> 22:31.900
query 是不是这一块

22:33.060 --> 22:34.620
你看是不是属性名属性值

22:34.620 --> 22:36.900
属性名属性值

22:36.900 --> 22:38.740
and 符号下一个属性名

22:38.740 --> 22:39.700
下一个属性值

22:39.700 --> 22:40.460
有的同学说

22:40.460 --> 22:42.980
这些属性名属性值是啥意思啊

22:42.980 --> 22:43.940
你要去问百度

22:45.180 --> 22:47.020
这些东西是发到百度服务器的

22:47.020 --> 22:48.060
他怎么去理解的东西

22:48.060 --> 22:49.740
要看别人服务器是怎么写的

22:49.740 --> 22:51.460
我不知道百度服务器咋写的啊

22:51.460 --> 22:53.380
我没有参与过百度服务器的编码

22:53.380 --> 22:53.820
所以说呢

22:53.820 --> 22:55.940
你要去问他啊

22:55.940 --> 22:56.300
其实呢

22:56.300 --> 22:56.780
这里边呢

22:56.780 --> 22:58.100
其实我看了一下

22:58.100 --> 22:59.140
这里边很多

22:59.140 --> 23:01.380
这些属性名属性值都没有用的

23:01.380 --> 23:03.940
可能是要记录一些用户的相关信息吧

23:03.940 --> 23:05.140
你怎么去访问这个网页的

23:05.140 --> 23:06.460
从哪里来的

23:06.460 --> 23:08.460
比如说你们看

23:08.460 --> 23:10.460
你们点了一些广告

23:10.460 --> 23:12.500
比方说你们在抖音上啊

23:12.500 --> 23:13.460
有些广告对不对

23:13.460 --> 23:14.900
或者是你们看一些网页的

23:14.900 --> 23:15.540
是有些广告

23:15.540 --> 23:16.780
你点了个广告

23:16.780 --> 23:18.580
那个网站是要拿提成的

23:19.700 --> 23:21.420
那就就奇怪了

23:21.420 --> 23:22.900
比方说你点了一个百

23:22.900 --> 23:23.700
淘宝的广告

23:23.700 --> 23:25.580
到了淘宝网页里边去

23:25.580 --> 23:26.460
淘宝那个网页

23:26.460 --> 23:28.340
他怎么知道你从哪里来的呢

23:28.340 --> 23:31.300
他就通过这个信息

23:31.300 --> 23:33.140
通过query里边的信息

23:33.140 --> 23:34.180
query里边比方说

23:34.180 --> 23:35.380
我就举个例子啊

23:35.380 --> 23:37.340
比方说这里有个信息要from

23:37.340 --> 23:38.700
等于什么呢

23:38.700 --> 23:41.820
等于来自于好123角抗

23:41.820 --> 23:42.900
说明了你

23:42.900 --> 23:45.420
你来做这里的搜索是从哪里来的呢

23:45.420 --> 23:47.980
是从这个好123角抗来的

23:47.980 --> 23:48.900
没啥意思

23:48.900 --> 23:51.420
那么他就会给好123角抗提成

23:51.420 --> 23:52.860
那如果说你知道这个规则过后

23:52.860 --> 23:53.620
你把这个地址

23:53.620 --> 23:54.980
你不用去访问好123

23:54.980 --> 23:55.940
把这个地址复制一下

23:55.940 --> 23:57.260
咱听过去

23:57.260 --> 23:58.100
刷几次

23:58.100 --> 24:00.420
所以就里面就收到钱了

24:00.420 --> 24:02.580
就这么个意思啊

24:02.580 --> 24:04.220
那么这一部分是他的关键字

24:04.220 --> 24:04.980
啊

24:06.340 --> 24:08.140
word key

24:08.140 --> 24:08.860
atmail

24:08.860 --> 24:10.420
老师你搜索的关键字呢

24:10.420 --> 24:11.180
是

24:11.180 --> 24:12.260
atmail

24:12.260 --> 24:15.100
咱们来看一下

24:15.100 --> 24:19.200
他选这样子

24:19.200 --> 24:20.400
回收

24:20.400 --> 24:22.680
你看是不是仍然是atmail的搜索结果

24:22.680 --> 24:23.000
对吧

24:23.000 --> 24:24.920
其实关键有用的信息在这

24:24.920 --> 24:26.120
那么当事这里呢

24:26.120 --> 24:27.480
还是给大家说明啊

24:27.480 --> 24:30.160
这关键是看服务器是怎么写的

24:30.160 --> 24:31.560
他不是说一个通用的规则

24:31.560 --> 24:32.640
不是说所有的网站

24:32.640 --> 24:35.120
搜索关键字都一定要用query的形式

24:35.120 --> 24:37.720
一定要写成一个wd的属性名

24:37.720 --> 24:38.240
属性值呢

24:38.240 --> 24:39.840
就是你搜索的内容

24:39.840 --> 24:40.640
不是的啊

24:40.640 --> 24:42.880
他是看具体的服务区是怎么写的

24:42.880 --> 24:43.680
比方说有的服务器呢

24:43.680 --> 24:44.960
他就是这样写的

24:44.960 --> 24:45.680
他有可能啊

24:45.680 --> 24:47.160
他就是这样写的

24:47.160 --> 24:47.960
表示了什么意思

24:47.960 --> 24:49.240
他就没有用query

24:49.240 --> 24:50.320
用了pass里面的

24:50.320 --> 24:51.840
pass的最后一部分啊

24:51.840 --> 24:54.240
以s开头表示你在搜索

24:54.240 --> 24:54.880
搜索什么呢

24:54.880 --> 24:56.680
搜索atmail

24:56.680 --> 24:57.160
意思吧

24:57.160 --> 24:59.200
这个说不准的

24:59.200 --> 25:01.400
那么以后你们到了公司里边去呢

25:01.400 --> 25:02.840
一般会拿到一个文档

25:02.840 --> 25:04.120
那个文档就会告诉你啊

25:04.120 --> 25:05.800
比方说他不会告诉你什么

25:05.800 --> 25:07.360
这个协议不用告诉你了

25:07.360 --> 25:08.320
协议的话

25:08.320 --> 25:10.120
一般就说adps

25:10.120 --> 25:11.400
这都没什么好说的

25:11.400 --> 25:12.640
主机名呢

25:12.640 --> 25:14.480
他用一个标题给你说

25:14.480 --> 25:16.720
所有的请求都是通过这个主机名

25:16.720 --> 25:18.000
不然的话可以说明

25:18.000 --> 25:20.800
好后边的全部是用这种方式来写

25:20.800 --> 25:21.600
举个例子啊

25:21.600 --> 25:23.280
比方说

25:23.280 --> 25:27.480
过去所有的电影啊

25:27.480 --> 25:29.600
比方说一个电影服务器

25:29.600 --> 25:31.240
他就告诉你请求地址

25:32.880 --> 25:33.600
请求地址呢

25:33.600 --> 25:34.320
是什么呢

25:34.320 --> 25:35.040
是这个地址

25:38.320 --> 25:38.840
无位置

25:40.280 --> 25:40.680
啊

25:40.680 --> 25:41.640
有没有query呢

25:41.640 --> 25:42.160
有

25:42.160 --> 25:42.600
他query呢

25:42.600 --> 25:44.720
一旦会用一个表格给你写啊

25:44.720 --> 25:45.600
query的名字

25:48.480 --> 25:49.600
含义

25:49.600 --> 25:50.280
然后呢

25:50.280 --> 25:51.320
默认值

25:51.320 --> 25:52.120
就是你不写的话

25:52.120 --> 25:53.240
他表示什么意思

25:53.240 --> 25:54.040
比方说名字的话

25:54.040 --> 25:55.120
就是拍集

25:55.120 --> 25:55.800
含义的话

25:55.800 --> 25:57.400
就是你夜吗

25:57.400 --> 25:58.720
要有很多电影数据

25:58.720 --> 26:01.160
你到底要获取第几页的电影数据

26:01.160 --> 26:01.280
啊

26:01.280 --> 26:02.720
默认值为一啊

26:02.720 --> 26:04.000
还有nimx

26:04.000 --> 26:04.680
表示什么意思呢

26:04.680 --> 26:05.800
表示的是夜容量

26:07.240 --> 26:07.880
默认值呢

26:07.880 --> 26:09.160
是10

26:09.160 --> 26:10.080
那比方说

26:10.080 --> 26:11.160
你拿到这个文档过后

26:11.160 --> 26:12.240
你可以去请求一下

26:12.240 --> 26:13.040
请求meapi

26:13.040 --> 26:14.440
不必去试一下啊

26:14.440 --> 26:16.920
把前面的协议和主机名给他加上

26:16.920 --> 26:17.760
他会告诉你的啊

26:17.760 --> 26:19.520
他会在一开始就告诉你

26:19.520 --> 26:20.160
然后加上过后

26:20.160 --> 26:21.160
你去请求一下

26:21.160 --> 26:23.040
那么是不是拿到一个电影数据

26:23.040 --> 26:24.160
默认为第一页

26:24.160 --> 26:25.880
每页10条

26:25.880 --> 26:26.080
好

26:26.080 --> 26:26.800
如果说呢

26:26.800 --> 26:27.520
你要改的话

26:27.520 --> 26:28.480
也很很简单

26:28.480 --> 26:29.760
又加上query

26:29.760 --> 26:31.480
配级等于二

26:31.480 --> 26:32.320
或许第二页

26:32.320 --> 26:33.400
每页10条

26:33.400 --> 26:35.200
那如果说你要每页20条呢

26:35.200 --> 26:35.920
你就加上一个

26:35.920 --> 26:37.680
默认值等于20

26:37.680 --> 26:39.440
你通过这个地址去获取

26:39.440 --> 26:39.920
没了意思吧

26:39.920 --> 26:40.760
那就是你们以后

26:40.760 --> 26:41.440
到公司里边

26:41.440 --> 26:42.520
他会给你一个文档

26:42.520 --> 26:43.360
那么说或许电影

26:43.360 --> 26:44.400
那登录怎么办呢

26:44.400 --> 26:46.000
他又会给你写

26:46.000 --> 26:48.280
或许写成一个非常详细的文档

26:48.280 --> 26:52.280
总之拍时和query综合起来

26:52.280 --> 26:54.840
决定了服务期要给力什么东西

26:54.840 --> 26:58.330
要给力什么东西

26:58.330 --> 26:58.970
好

26:58.970 --> 26:59.370
然后呢

26:59.370 --> 27:00.490
最后一部分是哈希

27:00.490 --> 27:01.770
哈希我这里简单说一下

27:01.770 --> 27:03.570
这个东西大家就是见过的

27:03.570 --> 27:03.850
是什么

27:03.850 --> 27:04.610
就是某链接

27:04.610 --> 27:05.090
对不对

27:05.090 --> 27:07.010
你们学atmos的时候就已经学过了

27:07.010 --> 27:07.770
某链接

27:07.770 --> 27:10.210
这个玩意通常服务期是不要的

27:10.210 --> 27:13.050
浏览器也也不会把它发送到服务器

27:13.050 --> 27:14.410
但是有些软件了

27:14.410 --> 27:15.850
因为我们做服务器的话

27:15.850 --> 27:17.610
不一定完全要考虑浏览器

27:17.610 --> 27:18.770
还要考虑其他软件

27:18.770 --> 27:19.530
那有一些软件了

27:19.530 --> 27:21.090
他是要把人发送到服务器的

27:21.090 --> 27:21.450
不过呢

27:21.450 --> 27:22.490
服务器一般不认他

27:22.530 --> 27:23.410
发送过来我也不认

27:23.410 --> 27:24.770
所以说这个东西跟我们

27:24.770 --> 27:25.410
今天的课程呢

27:25.410 --> 27:26.410
没有什么关系啊

27:26.410 --> 27:29.010
但是他仍然是UIL地址的一部分

27:29.010 --> 27:30.690
我给大家说一下

27:30.690 --> 27:32.410
浏览器是怎么处理这一部分的

27:32.410 --> 27:35.050
就是如果说你的链接里边加了这一部分

27:35.050 --> 27:36.770
他不会请求服务器的

27:36.770 --> 27:38.610
他不会把消息发到服务器说

27:38.610 --> 27:40.170
我重新问一下这个服务器的

27:40.170 --> 27:42.850
要从服务器那要东西不会了

27:42.850 --> 27:43.570
他就在本地

27:43.570 --> 27:46.530
这里无刷新跳转

27:46.530 --> 27:48.010
页面内跳转

27:48.010 --> 27:50.050
跳转到毛点

27:50.090 --> 27:50.730
老子哈嘻啊

27:50.730 --> 27:51.410
我们聊天下就行了

27:53.330 --> 27:54.090
好

27:54.090 --> 27:55.010
讲到这一块

27:55.010 --> 27:55.890
大家有什么问题没

27:55.890 --> 27:56.210
没问题

27:56.210 --> 27:56.810
Q个一

27:56.810 --> 27:57.170
有问题

27:57.170 --> 27:57.570
问问题

28:04.020 --> 28:04.620
昨天想啥

28:04.620 --> 28:05.140
也没来了

28:06.940 --> 28:07.820
真想没话话啊

28:09.100 --> 28:09.500
好

28:09.500 --> 28:15.440
咱们继续啊

28:15.440 --> 28:16.480
刚才我们说了这个

28:16.480 --> 28:16.960
最后呢

28:16.960 --> 28:17.760
我们来总结一下

28:17.760 --> 28:19.280
后是那名用来定位计算机

28:19.280 --> 28:20.800
Port用来定位服务器

28:20.800 --> 28:21.720
呃

28:21.720 --> 28:23.240
服务器就是哪个应用程序

28:23.240 --> 28:24.240
对吧

28:24.240 --> 28:24.920
Port口呢

28:24.920 --> 28:26.560
告诉他用什么协议

28:26.560 --> 28:27.600
之后传说用什么

28:27.640 --> 28:28.520
传说有什么协议

28:28.520 --> 28:29.840
Pass呢

28:29.840 --> 28:31.560
是在定位服务器当的服务的

28:31.560 --> 28:32.600
就是应用程序里边

28:32.600 --> 28:34.120
服务器是一个应用程序啊

28:34.120 --> 28:35.680
这程序里边的服务

28:35.680 --> 28:36.400
query呢

28:36.400 --> 28:38.640
Pass可以共同决定的啊

28:38.640 --> 28:40.120
那些服务的具体信息

28:41.280 --> 28:42.160
哈嘻呢

28:42.160 --> 28:43.360
是一些额外的信息啊

28:43.360 --> 28:45.240
服务器一般不会用的

28:45.240 --> 28:46.200
然后下面一个例子

28:47.320 --> 28:49.040
这个里边协议是啥

28:49.040 --> 28:50.520
协议ATPS

28:50.520 --> 28:51.000
后

28:51.000 --> 28:52.200
那竹金�

28:52.200 --> 28:54.160
百度百科帖百度雕抗

28:55.840 --> 28:56.760
端口号

28:56.800 --> 28:57.960
四四三

28:57.960 --> 28:59.560
Pass

28:59.560 --> 29:00.800
这一部分

29:00.800 --> 29:01.720
query

29:01.720 --> 29:02.760
这一部分

29:02.760 --> 29:03.640
search

29:03.640 --> 29:04.840
就是哈嘻

29:04.840 --> 29:06.320
哈嘻这一部分

29:07.640 --> 29:07.800
好

29:07.800 --> 29:09.840
最后一个小的知识就是

29:09.840 --> 29:11.040
UI L里边

29:11.040 --> 29:13.000
就整个是个制服串了

29:13.000 --> 29:15.800
他只支持

29:15.800 --> 29:17.400
Busker制服

29:17.400 --> 29:19.440
也就那么127个

29:19.440 --> 29:21.520
也其他制服他又不认识

29:21.520 --> 29:24.920
因此如果说你在地址里边出现了中文

29:24.920 --> 29:26.680
他是不认识的

29:26.680 --> 29:27.640
不过呢现在流浪

29:27.640 --> 29:28.600
现在的流浪器呢

29:28.600 --> 29:29.760
是比较智能的

29:29.760 --> 29:31.120
如果说你写了中文的话

29:31.120 --> 29:32.520
他会给你编码

29:32.520 --> 29:33.960
他会把中文给你编码

29:33.960 --> 29:35.640
把它变成

29:35.640 --> 29:36.520
ask制服

29:36.520 --> 29:37.200
怎么编码呢

29:37.200 --> 29:39.240
你看这个写这个字

29:39.240 --> 29:40.560
他是用UTF-8编码

29:41.640 --> 29:42.400
变成了这个东西

29:44.120 --> 29:45.600
对不对

29:45.600 --> 29:47.800
E变成了这个东西

29:47.800 --> 29:49.120
它是一种编码格式

29:49.120 --> 29:51.120
那么这个玩意是不是全是ask制服了

29:51.120 --> 29:51.240
好

29:51.240 --> 29:52.280
咱们来看一下啊

29:52.280 --> 29:57.940
我们把这个地址复制一下

29:57.940 --> 29:59.140
这边取收水

29:59.140 --> 29:59.860
放到这

29:59.900 --> 30:00.340
一回车

30:01.620 --> 30:02.700
哎好像没问题啊

30:02.700 --> 30:03.620
你写的是中文

30:03.620 --> 30:04.940
你这里不显示中文吗

30:04.940 --> 30:06.620
你把这边再重新复制一下

30:07.860 --> 30:08.260
拿过来

30:09.820 --> 30:11.380
你看是不是变成编码之后了

30:11.380 --> 30:13.060
只不过他这里流浪器呢

30:13.060 --> 30:14.820
为了让你看着舒服一点啊

30:14.820 --> 30:16.380
他显示出来的给你显示中文

30:16.380 --> 30:18.980
但是实际上你不能把中文发到服务器

30:18.980 --> 30:21.220
服务器是完全不认识中文的

30:21.220 --> 30:21.820
完全不认识

30:21.820 --> 30:22.900
他解析要出问题的

30:24.860 --> 30:25.660
当然你

30:25.660 --> 30:27.100
他最主要原设的格式这个都

30:27.100 --> 30:28.180
你把这个东西复制一下

30:28.180 --> 30:29.460
然后再粘过来

30:29.500 --> 30:30.980
流浪器还是会显示中文

30:30.980 --> 30:32.620
他只是显示出来是中文啊

30:32.620 --> 30:35.060
但是实际上的本质上还是编码过后的

30:36.580 --> 30:38.580
好这是如何访问服务器

30:39.540 --> 30:40.540
第一部分结束了啊

30:41.460 --> 30:44.020
好有了前置知识过后

30:44.020 --> 30:46.380
现在你看我找到了计算机

30:47.220 --> 30:49.220
找到了计算机上的应用程序

30:49.220 --> 30:51.740
我也通过pass通过query

30:51.740 --> 30:53.500
告诉了服务器我到底要什么

30:53.500 --> 30:55.460
我要要一部分电影

30:55.460 --> 30:57.140
要很多电影你给我电影的

30:58.100 --> 30:59.260
或者是我要首页

30:59.260 --> 31:00.780
把个网页给握备

31:00.780 --> 31:02.980
那么这个时候是不是跟服务器通信了

31:02.980 --> 31:04.260
交换信息了

31:04.260 --> 31:06.900
就是你们正儿八交开始聊天了

31:06.900 --> 31:07.940
那么这个时候呢

31:07.940 --> 31:09.180
就要用到协议了

31:10.460 --> 31:12.820
刚才写的这个这个地方要其作用的

31:12.820 --> 31:15.820
甭管你是写了atbs还是atb协议啊

31:15.820 --> 31:18.900
他的核心部分就下面的这一个商界

31:20.260 --> 31:21.220
那不什么来打消息的

31:22.980 --> 31:23.860
我们这里呢

31:23.860 --> 31:25.980
景讲atb协议

31:25.980 --> 31:27.740
在这个协议的规定下

31:27.740 --> 31:29.020
他规定

31:29.020 --> 31:31.660
你们两个要通信的话

31:31.660 --> 31:33.340
这样子来通信

31:33.340 --> 31:36.060
服务器比较喜欢被动一点

31:37.900 --> 31:39.380
他不主动发消息

31:40.500 --> 31:41.500
由客户端

31:42.620 --> 31:43.500
什么叫客户端

31:43.500 --> 31:45.500
就是像服务器发消息的那个东西

31:45.500 --> 31:46.900
因为客户端也是个应用程序

31:46.900 --> 31:48.740
像我们平时用的客户端就是浏览器

31:48.740 --> 31:48.980
对吧

31:48.980 --> 31:49.580
叫browser

31:51.100 --> 31:51.780
然后也可以

31:51.780 --> 31:52.780
也可以使其他客户端

31:52.780 --> 31:55.020
你们以后做什么手机app

31:55.020 --> 31:56.700
那么他也是个客户端

31:56.700 --> 31:58.700
总之就是给服务器发消息的那个东西

31:58.700 --> 32:00.980
那个应用程序就是客户端

32:00.980 --> 32:02.940
客户端主动发消息

32:02.940 --> 32:04.380
服务器被动

32:04.380 --> 32:06.740
客户端发一个消息到服务器

32:06.740 --> 32:08.220
我们把这个过程的叫请求

32:10.060 --> 32:11.260
然后服务器呢

32:11.260 --> 32:12.820
是不是收到这个消息的

32:12.820 --> 32:15.140
服务器给他给他一个结果

32:15.140 --> 32:16.780
这叫享用

32:16.780 --> 32:19.180
atb就这么两个过程

32:19.180 --> 32:20.340
请求享用

32:21.460 --> 32:22.020
而一会呢

32:22.020 --> 32:22.700
又要发消息了

32:22.700 --> 32:24.500
又请求又统情享用

32:24.500 --> 32:25.380
非常简单对不对

32:26.340 --> 32:26.540
好

32:26.540 --> 32:27.940
那么这两个单词要记住啊

32:27.940 --> 32:29.500
请求要request

32:29.500 --> 32:32.910
响应了叫做response

32:32.910 --> 32:33.230
好

32:36.230 --> 32:37.750
在请求完成

32:37.750 --> 32:39.110
响应完成之后了

32:39.110 --> 32:40.830
我们就认为一次

32:41.590 --> 32:43.910
atb交互就结束了

32:45.030 --> 32:46.230
如果说你还要

32:46.230 --> 32:47.110
这个东西不够

32:47.110 --> 32:48.990
比方说我找首页

32:48.990 --> 32:50.430
首页是不是有很多资源

32:50.430 --> 32:51.950
我要找百度的首页

32:51.950 --> 32:53.590
然后就这个搜索页嘛

32:53.590 --> 32:54.630
搜索页有很多资源

32:54.630 --> 32:56.190
有可能有图片啊

32:56.230 --> 32:58.670
有GS文件啊

32:58.670 --> 32:59.830
还有CSS文件

32:59.830 --> 33:00.030
对吧

33:00.030 --> 33:01.550
是不是有很多资源

33:01.550 --> 33:03.350
那么这些资源如果说不够啊

33:03.350 --> 33:05.870
一开始如果是拿到一个atmail

33:05.870 --> 33:06.270
还不够

33:06.270 --> 33:07.390
还有什么CSS

33:07.390 --> 33:08.030
还有GS

33:08.030 --> 33:09.430
还有很多的图片

33:09.430 --> 33:10.630
那怎么办呢

33:10.630 --> 33:11.910
重新发消息

33:12.830 --> 33:13.550
重新给我发

33:14.470 --> 33:17.150
所以说我们其实看一个网页的时候

33:17.150 --> 33:20.030
他其实有很多次请求响应

33:20.030 --> 33:21.510
很多次请求响应

33:21.510 --> 33:22.470
我们来看一下啊

33:22.470 --> 33:24.550
我这点击浏览器里边

33:24.550 --> 33:26.030
点击右键

33:26.030 --> 33:26.510
检查

33:27.990 --> 33:28.830
这里有个network

33:29.910 --> 33:33.100
网络通信

33:33.100 --> 33:36.340
现在我们刷新一下

33:36.340 --> 33:36.620
你看

33:37.900 --> 33:39.260
他一共他就监测到

33:39.260 --> 33:41.820
这就这么一个刷新动作

33:41.820 --> 33:43.260
他实际上发出了多少次请求

33:43.260 --> 33:45.020
每一行就是个请求

33:45.020 --> 33:45.820
你看有请求什么

33:45.820 --> 33:47.380
有请求图片的

33:47.380 --> 33:48.140
片记对吧

33:48.140 --> 33:48.980
有请求图片的

33:48.980 --> 33:50.220
你看点个看一下

33:50.220 --> 33:51.700
有请求图片的

33:51.700 --> 33:53.820
有什么有什么请求字体文件了

33:53.820 --> 33:55.100
这玩意是个字体文件啊

33:56.620 --> 33:57.020
然后呢

33:57.020 --> 33:57.980
有请求什么

33:59.100 --> 34:00.740
乱七八糟的东西啊

34:00.740 --> 34:01.980
还有什么请求介式的

34:01.980 --> 34:03.220
你看这个他用的是

34:03.220 --> 34:04.500
他用了接query对不对

34:05.900 --> 34:06.740
还用了图片

34:06.740 --> 34:07.580
还有CSS

34:07.580 --> 34:08.820
还有CSS

34:08.820 --> 34:10.060
这里可以筛选一下

34:10.060 --> 34:10.700
CSS

34:10.700 --> 34:11.660
有一个CSS

34:12.460 --> 34:15.500
看来他实际上是发送了很多次请求的

34:15.500 --> 34:18.920
这点拳铺

34:18.920 --> 34:19.200
好

34:19.200 --> 34:20.880
那么这是一个基本的格式

34:20.880 --> 34:21.600
请求响应

34:22.480 --> 34:23.960
那么接下来我们要研究的

34:23.960 --> 34:25.280
具体要研究的

34:25.280 --> 34:27.840
就是请求他发的是什么样的消息格式

34:28.760 --> 34:31.480
响应又发的是什么样的消息格式

34:31.480 --> 34:33.360
你把这些东西认识清楚了

34:33.360 --> 34:36.400
以后不要无论是自己写服务器也好

34:36.400 --> 34:37.480
前端要不要写服务器

34:39.160 --> 34:39.920
我告诉你

34:41.560 --> 34:42.480
目前呢

34:42.480 --> 34:43.480
还不多

34:44.480 --> 34:45.200
但是呢

34:45.200 --> 34:46.480
逐步会变多了

34:47.720 --> 34:50.200
因为前后端要达到彻底的分离

34:50.200 --> 34:51.760
前端是需要写服务器的

34:53.560 --> 34:55.160
因此这一块弄的呢

34:55.160 --> 34:55.760
而且弄的呢

34:55.760 --> 34:57.800
不仅仅是可以用来做前端服务器

34:58.360 --> 34:59.840
一向你们以后用到了什么

34:59.840 --> 35:01.120
vipak呀

35:01.120 --> 35:02.080
还用到了什么

35:02.080 --> 35:03.760
那个vue clear

35:03.760 --> 35:04.720
这些角色加工具

35:04.720 --> 35:06.280
他们都要已经烂斗的

35:06.280 --> 35:08.280
所以他们都在里面还是必须要学的啊

35:09.680 --> 35:10.080
总之呢

35:10.080 --> 35:12.280
你们无论以后要写服务器也好

35:12.280 --> 35:15.760
还是要写在在刻铺端那边要发出请求

35:15.760 --> 35:17.760
还是在服务端那边要给他响应

35:18.920 --> 35:20.920
都要证实这个消息格式

35:20.920 --> 35:22.360
我们一部分一部分看

35:22.360 --> 35:23.840
现在看请求

35:23.840 --> 35:24.840
我跟他发消息

35:24.840 --> 35:26.240
到底发什么样的消息呢

35:27.040 --> 35:29.280
这里有标准来约定

35:29.280 --> 35:30.160
你不能乱来的话

35:30.160 --> 35:31.560
你给他发一个我爱你

35:31.560 --> 35:32.480
他又不知道你在说啥

35:34.040 --> 35:35.360
他又发一个你是个好人

35:38.950 --> 35:39.830
随便看请求啊

35:41.430 --> 35:43.550
请求的消息是一个什么玩意呢

35:43.550 --> 35:44.630
其实本质上呢

35:46.350 --> 35:48.030
你可以把它理解为一个制服创

35:48.030 --> 35:49.110
他就发了一个制服创过去

35:50.230 --> 35:52.190
但是实际上他不是一个制服创

35:52.190 --> 35:53.350
他叫报文

35:53.350 --> 35:55.070
我们可以把他认识为一个制服创

35:55.070 --> 35:55.910
先简单认识吧

35:55.990 --> 35:57.310
我们认识这些知识呢

35:57.310 --> 35:58.390
是逐步递真的

35:58.390 --> 35:58.670
对吧

36:00.030 --> 36:01.030
一把看一个制服创

36:01.030 --> 36:02.990
他发了一个制服创到服务器上去

36:02.990 --> 36:03.430
请求

36:04.150 --> 36:05.470
但是这个制服创不能乱写啊

36:05.470 --> 36:06.670
你不能随便瞎写

36:06.670 --> 36:08.670
他是有格式要求的

36:08.670 --> 36:10.430
那么这个格式他把这个制服创了

36:10.430 --> 36:11.630
分为两个部分

36:11.630 --> 36:13.590
一个叫做请求头

36:13.590 --> 36:15.270
一个叫做请求体

36:15.270 --> 36:16.670
request a body

36:16.670 --> 36:17.590
request a headers

36:18.990 --> 36:22.750
咱们又来看请求里边的请求头

36:22.750 --> 36:24.310
和请求体又是什么玩意

36:25.310 --> 36:25.710
好

36:25.710 --> 36:26.750
咱们首先看请求头

36:28.350 --> 36:29.590
头是个什么东西呢

36:29.590 --> 36:31.550
他就是一个多航文本制服创

36:31.550 --> 36:32.510
他就是个制服创

36:33.230 --> 36:33.990
他的格式呢

36:33.990 --> 36:35.230
大概像这个样子

36:35.230 --> 36:37.430
看上去有点花里扶烧的

36:37.430 --> 36:38.750
不知道他干嘛对不对

36:38.750 --> 36:40.630
不要说你请求这个例子啊

36:40.630 --> 36:41.070
你看一下吧

36:41.070 --> 36:44.260
我们就请求这个例子

36:44.260 --> 36:45.340
检查

36:45.340 --> 36:46.820
看一下我们刚才的网络请求

36:46.820 --> 36:47.260
小心一下

36:48.820 --> 36:49.500
找地行

36:49.500 --> 36:50.340
第一行你看

36:50.340 --> 36:50.820
点击过后

36:51.780 --> 36:53.700
这边选中 headers

36:53.700 --> 36:54.060
头

36:55.060 --> 36:55.860
下面找

36:55.860 --> 36:56.380
找到的

36:56.380 --> 36:57.900
找到request a headers

36:57.900 --> 36:58.780
是不是请求头

36:59.780 --> 37:01.180
这里个view source

37:01.180 --> 37:02.620
看原始格式

37:02.620 --> 37:04.580
看他的原始格式是什么

37:04.580 --> 37:05.620
点击

37:05.620 --> 37:07.180
这个工具一定要会用啊

37:07.180 --> 37:08.140
你们以后

37:08.140 --> 37:09.660
凡是网络那边出了问题

37:09.660 --> 37:12.580
原来我从服务器拿数据能不能拿不到呢

37:12.580 --> 37:14.340
由他这里去分析

37:14.340 --> 37:15.740
看到里是请求出了问题

37:15.740 --> 37:16.980
还是想用出了问题

37:16.980 --> 37:18.060
一共就这两步嘛

37:18.060 --> 37:19.500
从微视有个东西出了问题

37:20.540 --> 37:20.700
好

37:20.700 --> 37:21.540
看一下这部分

37:21.540 --> 37:22.860
view source啊

37:22.860 --> 37:23.820
就是个制服创吗

37:23.900 --> 37:24.380
你看

37:24.380 --> 37:25.180
这就是个制服创

37:27.180 --> 37:27.980
虽然东西很多

37:27.980 --> 37:28.980
很长

37:28.980 --> 37:29.660
还有换行

37:29.660 --> 37:30.420
那就是个制服创

37:31.420 --> 37:31.620
对不对

37:31.620 --> 37:32.620
看上去很复杂的样子

37:32.620 --> 37:33.060
对不对

37:33.060 --> 37:33.980
咱们来看一下

37:33.980 --> 37:34.780
他其实并不复杂

37:36.700 --> 37:38.620
这个请求头里边呢

37:38.620 --> 37:39.740
他又分为两个部分

37:40.940 --> 37:42.780
一个叫做请求行

37:42.780 --> 37:44.220
有些教科书里边呢

37:44.220 --> 37:46.140
把请求行单独拎出去啊

37:46.140 --> 37:46.940
有请求行呢

37:46.940 --> 37:47.540
是一个部分

37:47.540 --> 37:48.500
请求头是一个部分

37:48.500 --> 37:50.180
请求体是一个部分啊

37:50.180 --> 37:51.100
有些书里边呢

37:51.100 --> 37:52.420
又把它合并在一起啊

37:52.420 --> 37:52.940
没关系

37:53.860 --> 37:54.900
这个都不重要

37:54.900 --> 37:55.460
你怎么知道

37:55.460 --> 37:57.060
这个第一行是请求行就完事了

37:58.140 --> 37:58.340
好

37:58.340 --> 37:59.540
请求行里边呢

37:59.540 --> 38:00.940
有三个部分

38:00.940 --> 38:02.220
第一个叫做请求方法

38:03.300 --> 38:04.580
请求方法是个什么东西

38:04.580 --> 38:05.700
叫做一个注意啊

38:05.700 --> 38:07.780
这一块是非常容易遭到误解的地方

38:08.900 --> 38:10.940
它是一个普通制服创

38:10.940 --> 38:11.740
这个制服创呢

38:11.740 --> 38:13.260
会被服务器读到

38:13.260 --> 38:13.860
就这么简单

38:13.860 --> 38:14.100
没了

38:16.060 --> 38:16.940
它就是一个制服创

38:18.100 --> 38:19.060
这里就是制服创的名字

38:19.060 --> 38:20.220
叫做GET

38:20.220 --> 38:20.780
对吧

38:20.780 --> 38:22.140
你可以写ABC

38:22.140 --> 38:23.100
你可以写我爱你

38:23.100 --> 38:24.020
那不要写中文啊

38:24.020 --> 38:25.820
因为这一部分只能是阿斯科别马

38:25.820 --> 38:27.660
只能认识阿斯科制服

38:27.660 --> 38:30.580
你可以写IW都可以

38:30.580 --> 38:31.540
随便

38:31.540 --> 38:31.980
总之呢

38:31.980 --> 38:34.900
它第一个单词就是请求方法

38:35.940 --> 38:37.180
那么这东西有什么用呢

38:38.300 --> 38:40.260
你想让它有用就让它有用

38:40.260 --> 38:41.660
想让它没用就没用

38:41.660 --> 38:44.300
它就是给服务器发了一个制服创过去

38:44.300 --> 38:45.700
第一个单词GET

38:45.700 --> 38:46.740
服务器可以读到

38:46.740 --> 38:48.300
读到过后服务器干嘛

38:48.300 --> 38:49.420
就随便离了

38:49.420 --> 38:50.060
随便离干嘛

38:51.220 --> 38:51.660
对吧

38:51.660 --> 38:53.060
ATB协议里边

38:53.060 --> 38:54.940
它并没有要求说

38:54.940 --> 38:56.540
这个地方必须要写啥

38:56.540 --> 38:57.700
写啥都可以

38:57.700 --> 38:58.300
你们以后了

38:58.300 --> 38:59.220
在面试里边

38:59.220 --> 39:01.180
一位做面试的就是他问你

39:01.180 --> 39:03.540
我想自己实现一个ABC的方法

39:03.540 --> 39:04.660
请求方法为ABC

39:04.660 --> 39:05.420
你怎么实现

39:05.420 --> 39:06.900
你脑袋一下就蒙了

39:06.900 --> 39:07.820
我从来没听说过

39:07.820 --> 39:08.900
请求方法有ABC的

39:10.740 --> 39:11.700
它叫考察力什么

39:11.700 --> 39:12.740
考察力

39:12.740 --> 39:14.700
是不是真的对ATB的协议

39:14.700 --> 39:16.420
有深入的理解

39:16.420 --> 39:18.020
请求方法是可以随便的

39:18.020 --> 39:19.540
随便定义的

39:19.540 --> 39:21.260
你总之给服务器发了一个制服创

39:21.260 --> 39:22.300
服务器能读到就行了

39:23.500 --> 39:25.340
只不过呢

39:25.340 --> 39:28.060
我们按照开发习惯上来说

39:28.060 --> 39:30.180
这个地方一般来说

39:30.180 --> 39:31.940
写的是两个单词之一

39:32.860 --> 39:34.420
get post

39:35.620 --> 39:37.300
一般来说去写这两个

39:37.300 --> 39:38.100
那么这个东西

39:38.100 --> 39:38.620
ATB协议

39:38.620 --> 39:39.820
它只说了这么一句话

39:41.660 --> 39:42.980
原文我背不住了

39:42.980 --> 39:44.140
它意思就是说

39:44.140 --> 39:45.020
这个地方

39:45.020 --> 39:46.540
它表示的是

39:46.540 --> 39:49.500
我这一次请求的目的是什么

39:49.540 --> 39:51.340
我为什么要发出这一次请求

39:51.340 --> 39:52.660
你把这个东西给服务器

39:52.660 --> 39:54.180
让服务器是一个程序

39:54.180 --> 39:54.980
自己写的程序

39:54.980 --> 39:56.660
服务器自己去分析

39:56.660 --> 39:57.380
它到底要干嘛

39:58.740 --> 40:00.180
那么这个get什么意思呢

40:00.180 --> 40:01.140
get说表示的说

40:02.580 --> 40:03.580
我希望呢

40:03.580 --> 40:05.540
我带服务器去拿一些东西

40:05.540 --> 40:07.580
get就拿过去一些东西嘛

40:07.580 --> 40:09.060
我希望我从服务器哪一个东西

40:09.060 --> 40:09.980
不要说我从服务器

40:11.300 --> 40:12.260
哪一个网页

40:12.260 --> 40:13.860
我从服务器哪一张图片

40:13.860 --> 40:16.100
我从服务器哪一个GS

40:16.100 --> 40:18.180
我从服务器哪一个CSS

40:18.180 --> 40:18.860
明白吧

40:18.860 --> 40:21.220
你看这里不就是get嘛

40:21.220 --> 40:21.700
对不对

40:21.700 --> 40:23.300
我希望从服务器哪一个网页

40:24.580 --> 40:24.860
然后呢

40:24.860 --> 40:27.020
这个你看这个地方

40:27.020 --> 40:28.580
这个地方有缓存了

40:28.580 --> 40:29.980
有缓存的

40:29.980 --> 40:32.060
我把缓存去清空

40:32.060 --> 40:32.620
缓存去掉

40:34.500 --> 40:35.500
你看这边

40:36.580 --> 40:37.140
vue source

40:37.140 --> 40:38.420
你看是不是还是get

40:38.420 --> 40:39.540
get很多啊

40:39.540 --> 40:42.940
很多像我们的平时在浏览器里面去请求这些东西

40:42.940 --> 40:44.660
在迪士兰输入回车

40:44.660 --> 40:46.820
还有它自动下载这些东西

40:46.820 --> 40:48.180
它其实都是get请求

40:48.220 --> 40:48.940
就是拿东西嘛

40:48.940 --> 40:50.420
从服务器拿东西

40:50.420 --> 40:51.140
明白了意思吧

40:51.140 --> 40:53.220
这我们平常的约定

40:53.220 --> 40:54.220
pose的什么意思呢

40:54.220 --> 40:55.580
pose表示的是

40:55.580 --> 40:56.380
我希望呢

40:56.380 --> 40:58.260
我提交一些东西给服务器

40:58.260 --> 40:59.860
比方说我填写了帐号密码

40:59.860 --> 41:02.140
我要把帐号密码发送给服务器

41:02.140 --> 41:02.900
对吧

41:02.900 --> 41:05.420
不是你给我是我给你

41:05.420 --> 41:07.820
是不是就这么就这么两个语意上的不同

41:08.860 --> 41:09.500
但是呢

41:09.500 --> 41:11.820
只是我们平时约定好了

41:11.820 --> 41:12.620
约定熟成了

41:12.620 --> 41:13.420
而且浏览器呢

41:13.420 --> 41:14.420
也自动支持的

41:14.420 --> 41:14.660
对吧

41:14.660 --> 41:15.900
浏览器里边

41:15.900 --> 41:17.220
你自己它就用给你

41:17.220 --> 41:18.820
它就自动给你生成要get请求

41:19.980 --> 41:22.140
但不是说它这里必须要是这两个

41:22.140 --> 41:22.540
以后呢

41:22.540 --> 41:24.180
你们还会接触到更多的请求方法

41:25.380 --> 41:25.540
好

41:25.540 --> 41:26.660
这请求方法

41:26.660 --> 41:26.980
以后呢

41:26.980 --> 41:30.380
我们还会说一下这里的一个面试题

41:32.260 --> 41:33.020
第二个部分

41:33.020 --> 41:34.300
就这一部分

41:34.300 --> 41:35.780
我们把它叫做pass

41:35.780 --> 41:36.660
在这里的pass呢

41:36.660 --> 41:37.740
它指的是

41:37.740 --> 41:39.660
之前UIO地址中的pass

41:39.660 --> 41:41.220
加上12起加上哈希

41:41.220 --> 41:41.940
但是一般来说

41:41.940 --> 41:43.100
哈希是不存在的

41:43.100 --> 41:44.940
它一般浏览器不会去把哈希发过去的

41:46.020 --> 41:46.740
那么这个发过去

41:46.740 --> 41:48.380
是不是浮览器可以赌到了

41:48.380 --> 41:50.260
你把这个消息附带过去

41:50.260 --> 41:52.100
浮览器那边是不是可以赌到这个东西

41:52.100 --> 41:53.060
赌到这个东西过后

41:53.060 --> 41:55.980
它是不是可以知道你

41:55.980 --> 41:56.540
到底要干嘛

41:56.540 --> 41:58.140
Oreo做搜索

41:58.140 --> 42:00.260
关键知识也挺没有

42:00.260 --> 42:00.460
对吧

42:00.460 --> 42:02.060
浮览器是可以拿到

42:02.060 --> 42:02.220
好

42:02.220 --> 42:02.820
第三个呢

42:02.820 --> 42:04.260
是ADB协议的版本

42:04.260 --> 42:05.180
目前的版本呢

42:05.180 --> 42:06.860
就顾虑认为是1.19成了

42:08.060 --> 42:11.500
都是请求行

42:11.500 --> 42:11.660
好

42:11.660 --> 42:13.300
然后接下来

42:13.300 --> 42:14.900
请求头还没完啊

42:14.900 --> 42:15.740
头部还没完

42:15.740 --> 42:16.900
头部下面又是一大堆的

42:16.900 --> 42:18.460
这个的这样的东西

42:18.500 --> 42:20.780
某个东西啥啥啥冒号啥啥

42:21.660 --> 42:23.340
啥啥冒号啥啥

42:24.460 --> 42:27.380
像不像属性名属性值

42:27.380 --> 42:29.260
属性名属性值

42:29.260 --> 42:30.620
是不是属性名属性值呢

42:30.620 --> 42:30.900
就是

42:32.300 --> 42:35.140
有相当于是有给他一些额外的信息

42:35.140 --> 42:38.140
那么这些信息到底要写啥呢

42:39.660 --> 42:42.220
adb协议并没有规定这些东西要写啥

42:42.220 --> 42:43.380
随便你写啥

42:43.380 --> 42:44.140
你写啥都可以

42:44.140 --> 42:45.420
你写个A等于B等于2

42:45.420 --> 42:46.060
随便都可以

42:47.420 --> 42:48.180
随便的

42:48.180 --> 42:51.060
因为这些东西全部都会被服务器读到

42:51.060 --> 42:53.300
那么就是一些额外的信息

42:53.300 --> 42:54.980
那么这两个我给他列出来了

42:54.980 --> 42:56.260
列出来这两个市场呢

42:56.260 --> 42:58.300
第一个hose比我们比较常见的

42:58.300 --> 42:59.220
一般来说开发

42:59.220 --> 43:00.460
约定属成的

43:00.460 --> 43:02.820
浏览器也会自动给你发送的

43:02.820 --> 43:04.500
表示我请求了主机名

43:04.500 --> 43:04.700
对吧

43:04.700 --> 43:05.580
hose内

43:05.580 --> 43:06.820
因为这里没有这个信息嘛

43:06.820 --> 43:08.500
所以说我把他放到这

43:08.500 --> 43:09.940
浏览器会把他放到这

43:09.940 --> 43:10.300
这样子

43:10.300 --> 43:11.060
hose内

43:11.060 --> 43:12.660
放到这

43:12.660 --> 43:13.180
好

43:13.180 --> 43:15.180
然后下面这个U2A政策什么意思呢

43:15.180 --> 43:16.500
就表示

43:16.500 --> 43:17.380
我告诉服务器

43:17.380 --> 43:17.940
我是谁

43:19.660 --> 43:22.260
因为平时看那个什么CSS

43:22.260 --> 43:23.980
不是有个什么user agent

43:25.300 --> 43:25.980
去边找一个啊

43:27.500 --> 43:29.340
我还找不到呢

43:29.340 --> 43:35.100
找一个什么实验

43:35.100 --> 43:35.740
找一找啊

43:38.260 --> 43:39.740
有那些默认样

43:39.740 --> 43:41.260
默认样是跑了去了

43:41.260 --> 43:42.060
DIV都没有

43:42.060 --> 43:42.380
对吧

43:42.380 --> 43:44.060
DIV实验都没有

43:44.060 --> 43:47.030
我们看这边吧

43:47.030 --> 43:47.470
在这边

43:47.470 --> 43:48.430
我们一个A7元素

43:49.470 --> 43:51.470
你看A7这里是一个user agent的

43:51.470 --> 43:52.430
看见吗

43:52.470 --> 43:54.870
user agent的style sheet

43:54.870 --> 43:55.670
user agent什么意思

43:55.670 --> 43:56.750
叫浏览器啊

43:56.750 --> 43:58.510
就是用户代理

43:58.510 --> 43:59.190
我们说

43:59.190 --> 44:01.310
我们可以认为他就是一个浏览器

44:01.310 --> 44:02.190
那么浏览

44:02.190 --> 44:03.230
user agent这里呢

44:03.230 --> 44:04.870
就告诉服务器

44:04.870 --> 44:06.630
我是谁在寻求里

44:06.630 --> 44:06.910
是吧

44:06.910 --> 44:09.270
我把自己把自己描述清楚

44:09.270 --> 44:10.430
但是大家觉得很奇怪

44:10.430 --> 44:10.630
对吧

44:10.630 --> 44:13.070
这个谷歌浏览器里边

44:13.070 --> 44:15.310
他为什么叫这样的描述呢

44:15.310 --> 44:17.150
他为什么要说自己是Moderna呢

44:18.150 --> 44:19.790
Moderna是火谷经纪会的啊

44:19.790 --> 44:21.030
对吧

44:21.030 --> 44:21.910
他为什么要说这次

44:21.910 --> 44:23.550
Apple Webkit的

44:25.550 --> 44:27.670
他为什么要说自己是Decor

44:28.510 --> 44:29.310
然后自己是Chrome

44:29.310 --> 44:30.070
他当然是Chrome

44:30.070 --> 44:30.630
对不对

44:30.630 --> 44:32.990
他为什么要说自己是Safari呢

44:32.990 --> 44:34.430
他是不是在骗服务器呢

44:35.310 --> 44:36.510
他还真就是在骗服务器

44:37.670 --> 44:39.710
因为这个是有些历史原因了

44:40.750 --> 44:41.670
以前

44:41.670 --> 44:43.350
成歌的课程里面给他介绍过

44:43.350 --> 44:44.110
对吧

44:44.110 --> 44:46.030
以前是有一个浏览器的大战

44:46.830 --> 44:48.270
在浏览器大战的时候呢

44:48.270 --> 44:50.110
因为大家各玩各的

44:51.110 --> 44:52.310
理解的东西

44:52.310 --> 44:55.270
就是我能够运行一些代码

44:55.270 --> 44:57.470
其他浏览器能够运行一些别的代码

44:57.470 --> 44:58.830
就双方是不兼容的

44:59.830 --> 45:00.510
大家于是呢

45:00.510 --> 45:01.910
当时的开发者

45:01.910 --> 45:03.110
解极也是代码的开发者

45:03.110 --> 45:04.470
就很恼火

45:04.470 --> 45:05.750
我支持了这个浏览器

45:05.750 --> 45:07.870
另一个浏览器就出问题了

45:07.870 --> 45:09.470
我要做兼容就很麻烦

45:09.470 --> 45:10.110
说那个时候呢

45:10.110 --> 45:10.910
很多开发者呢

45:10.910 --> 45:11.790
就从服务器

45:12.990 --> 45:14.390
判断一下

45:14.390 --> 45:16.070
我看一下是哪个浏览器在访问我

45:16.070 --> 45:16.990
比方说我开发这个程序

45:16.990 --> 45:18.870
我只支持IE

45:19.870 --> 45:20.950
我只是说IE

45:20.950 --> 45:23.550
我就看一下是哪个浏览器在访问我

45:23.550 --> 45:24.350
那么IE

45:24.350 --> 45:25.190
我发现是IE

45:25.190 --> 45:26.310
我给你结果

45:26.310 --> 45:27.590
如果说不是IE

45:27.590 --> 45:31.030
那么我就给你一个错误页面

45:31.030 --> 45:31.870
告诉你

45:31.870 --> 45:33.550
请使用IE来访问

45:33.550 --> 45:34.830
你看现在有些

45:34.830 --> 45:36.910
政府网站不就是这样的网吧

45:36.910 --> 45:37.950
他告诉你

45:37.950 --> 45:38.830
你应该使用什么

45:38.830 --> 45:40.070
让浏览器来访问

45:40.070 --> 45:41.350
要使用IE

45:41.350 --> 45:41.990
于是呢

45:41.990 --> 45:43.070
就导致了

45:43.070 --> 45:43.830
有些浏览器

45:43.830 --> 45:46.190
访问一些网站访问不了

45:46.190 --> 45:47.230
那么拥护他不管

45:47.230 --> 45:49.990
拥护不管这是别人服务器不支持

45:49.990 --> 45:51.990
他就认为这是浏览器也不够智能

45:51.990 --> 45:52.670
你这个浏览器

45:52.670 --> 45:53.590
为什么他能不能访问

45:53.590 --> 45:54.230
你就不能访问

45:54.230 --> 45:55.310
你这个浏览器垃圾

45:55.310 --> 45:56.590
我就不想用了

45:56.590 --> 45:58.110
拥护是很暴力的

45:58.110 --> 46:00.350
那么搞的这些浏览器厂商没办法

46:00.350 --> 46:02.550
于是他就开始骗服务器

46:02.550 --> 46:04.310
就是说我啥都是

46:04.310 --> 46:04.950
我既是这个

46:04.950 --> 46:05.390
又是那个

46:05.390 --> 46:05.790
又是那个

46:05.790 --> 46:06.790
又是那个

46:06.790 --> 46:07.670
服务器是不是蒙了

46:07.670 --> 46:09.710
一看就蒙了

46:09.710 --> 46:11.830
我也不知道你是啥了

46:11.830 --> 46:13.790
那怎么办我就给你一杯

46:13.790 --> 46:15.030
从另一方面

46:15.110 --> 46:17.670
这场上给人的感觉就是

46:17.670 --> 46:19.190
我这个监聋性做得很好

46:19.190 --> 46:20.550
你不用判断的

46:20.550 --> 46:21.230
你不用判断

46:21.230 --> 46:22.270
你放心把页面给我

46:22.270 --> 46:24.630
我觉得能正常显示的

46:24.630 --> 46:25.390
久而久之

46:25.390 --> 46:26.470
那就变成这个样子的

46:26.470 --> 46:29.870
这是一个历史的遗留问题

46:29.870 --> 46:31.670
这是琴球头

46:31.670 --> 46:33.990
当时就说里边还有很多额外的信息

46:33.990 --> 46:36.270
他们在不同的情况下

46:36.270 --> 46:37.430
他们有不同的约定

46:37.430 --> 46:38.310
有不同的含义

46:38.310 --> 46:40.470
不同的功能

46:40.470 --> 46:41.430
总之

46:41.430 --> 46:45.270
这就整个组成了我们的琴球头

46:45.270 --> 46:47.310
整个琴球头描述了一个东西

46:47.310 --> 46:48.910
叫做原数据信息

46:48.910 --> 46:51.590
什么叫原数据

46:51.590 --> 46:53.030
就是一些附加数据

46:53.030 --> 46:54.230
可以这样理解

46:54.230 --> 46:55.710
就是附加数据

46:55.710 --> 46:57.990
就跟业务无关的额外信息

46:57.990 --> 46:59.110
比方说我要

46:59.110 --> 47:00.390
请求百度的首页

47:00.390 --> 47:00.950
对吧

47:00.950 --> 47:01.590
那么这些信息

47:01.590 --> 47:03.510
跟百度的首页没有什么关系的

47:03.510 --> 47:06.230
就是一些额外的描述信息

47:06.230 --> 47:07.390
比方说我们要做登录

47:07.390 --> 47:08.510
我要发送账号密码

47:08.510 --> 47:09.070
那么这些信息

47:09.070 --> 47:10.790
跟这些账号密码没有什么关系

47:10.790 --> 47:14.190
它是非业务信息

47:14.190 --> 47:16.030
然后我们在浏览器的地址栏

47:16.030 --> 47:17.790
如果说输入一个UIL地址

47:17.790 --> 47:18.910
这里输入一个UIL地址

47:18.910 --> 47:20.270
按下回车

47:20.270 --> 47:22.190
或者是我们点击个超链接

47:22.190 --> 47:24.670
点击个链接图片等等

47:24.670 --> 47:25.710
这样这些行为

47:25.710 --> 47:27.350
它都会

47:27.350 --> 47:29.510
浏览器都会自动的构建一个琴球

47:29.510 --> 47:30.950
并且这个琴球的方法

47:30.950 --> 47:31.870
自动为阶子

47:31.870 --> 47:34.150
这浏览器自动完成了

47:34.150 --> 47:35.750
然后向服务器发送琴球

47:35.750 --> 47:38.470
比方说我们来看一下

47:38.550 --> 47:40.550
我随便点一个

47:40.550 --> 47:42.950
随便点一个

47:42.950 --> 47:43.870
广告就不见了

47:43.870 --> 47:45.190
点白颗

47:45.190 --> 47:46.750
把这个清空一下

47:46.750 --> 47:47.710
点白颗

47:47.710 --> 47:51.310
我轻谈一个页面出来

47:51.310 --> 47:53.430
在这边来吧

47:53.430 --> 47:58.900
一个页面B

47:58.900 --> 48:01.460
然后这边有个超链接

48:01.460 --> 48:04.860
去页面B

48:04.860 --> 48:07.340
然后这边有个链接

48:07.340 --> 48:09.060
密到B点儿去

48:09.060 --> 48:10.580
打开

48:10.580 --> 48:11.940
检查

48:11.940 --> 48:12.900
网络

48:12.900 --> 48:15.380
一开始请求这个

48:15.380 --> 48:16.140
第一个不用管

48:16.140 --> 48:18.980
第一个是本地服务器

48:18.980 --> 48:19.980
根本生成的一个东西

48:19.980 --> 48:20.820
不用去管它

48:20.820 --> 48:23.820
这是个插线给我们搞出来的

48:23.820 --> 48:25.100
是不是请求这个页面

48:25.100 --> 48:27.780
然后点击它

48:27.780 --> 48:28.420
你看着

48:28.420 --> 48:29.300
把这个勾选上

48:29.300 --> 48:30.620
这个勾选上刷新网页

48:30.620 --> 48:32.060
它就不会清空了

48:32.060 --> 48:33.700
点击它

48:33.700 --> 48:35.100
是不是又去请求了B

48:35.100 --> 48:35.660
对吧

48:35.660 --> 48:37.260
什么请求

48:37.260 --> 48:38.460
是不是借着请求

48:38.460 --> 48:39.140
当然这个点

48:39.140 --> 48:40.100
可以在最开始

48:40.100 --> 48:42.180
揭露了一些关键信息里边

48:42.180 --> 48:44.140
可以看到请求方法为戒指

48:44.140 --> 48:46.300
刘烂锡给自动构建的

48:46.300 --> 48:47.940
包括什么下载CSS

48:47.940 --> 48:48.980
下载GSS

48:48.980 --> 48:50.660
全是戒指请求

48:50.660 --> 48:51.860
刚才我们看到的所有请求

48:51.860 --> 48:53.940
全是戒指请求

48:53.940 --> 48:55.620
了解是吧

48:55.620 --> 48:57.020
那么什么时候会发生

48:57.020 --> 48:59.100
poss这请求呢

48:59.100 --> 49:01.500
这种情况下

49:01.500 --> 49:03.100
比方说

49:03.100 --> 49:09.350
我们这里写个缝表单

49:09.350 --> 49:12.030
这里边有一个input元素

49:12.070 --> 49:17.460
这帐号

49:17.460 --> 49:22.940
密码

49:22.940 --> 49:26.220
给它个电

49:26.220 --> 49:27.420
呃

49:27.420 --> 49:29.100
挪给

49:29.100 --> 49:30.740
给它个电

49:30.740 --> 49:31.500
挪给

49:31.500 --> 49:32.460
poss文

49:32.460 --> 49:33.020
帐号密码

49:33.020 --> 49:35.060
然后下面一个按钮

49:35.060 --> 49:35.900
提销

49:35.900 --> 49:36.860
登录

49:36.860 --> 49:38.660
比方说写这么一个东西

49:38.660 --> 49:39.380
好

49:39.380 --> 49:40.100
这个缝表

49:40.100 --> 49:41.020
缝表单里边呢

49:41.020 --> 49:42.300
这个一个属性要Action

49:42.300 --> 49:43.340
Action表示

49:43.340 --> 49:44.940
到时候点这个按钮的时候

49:44.940 --> 49:45.940
我要发出一个请求

49:45.940 --> 49:48.460
刘烂锡会自动给我们发送

49:48.460 --> 49:50.540
那么他到底去请求哪个地址呢

49:50.540 --> 49:51.740
现在知道了什么意思呢

49:51.780 --> 49:52.620
就请求一个地址

49:52.620 --> 49:52.860
对吧

49:52.860 --> 49:53.980
我们要请求服务器

49:53.980 --> 49:55.220
那么请求一个地址

49:55.220 --> 49:56.380
那么这个地址呢

49:56.380 --> 49:58.660
比方说我们请求这个地址

49:58.660 --> 49:59.580
请求百度

49:59.580 --> 50:00.860
跑百度里边去

50:00.860 --> 50:02.020
3w6

50:02.020 --> 50:04.940
我怕这个账号密码提要百度

50:04.940 --> 50:05.180
好

50:05.180 --> 50:07.380
后边还有一个东西要master的

50:07.380 --> 50:08.980
请求方法

50:08.980 --> 50:10.340
我们这里写poss

50:10.340 --> 50:11.420
那么这个时候呢

50:11.420 --> 50:12.580
我们点击按钮过后

50:12.580 --> 50:13.820
他就会请求百度

50:13.820 --> 50:14.940
发送一个poss请求

50:14.940 --> 50:18.560
咱们来看一下

50:18.560 --> 50:20.440
找到网络

50:20.440 --> 50:21.720
账号abc

50:21.720 --> 50:23.360
密码123n

50:23.400 --> 50:24.640
这东西

50:24.640 --> 50:27.550
我点登录

50:27.550 --> 50:28.430
你看这边

50:28.430 --> 50:29.230
你甭管看

50:29.230 --> 50:34.220
不过甭管页面是啥啊

50:34.220 --> 50:35.580
你看这边

50:35.580 --> 50:37.740
是不是一个poss请求

50:37.740 --> 50:38.380
对不对

50:38.380 --> 50:40.140
他就发送一个poss请求

50:40.140 --> 50:40.740
表达

50:40.740 --> 50:41.700
就是我们在没有学习

50:41.700 --> 50:43.020
阿迦夫斯之前

50:43.020 --> 50:44.380
我们要发送poss请求了

50:44.380 --> 50:46.180
要通过这个forum元素

50:46.180 --> 50:47.820
来进行发送

50:47.820 --> 50:49.780
这样就发送一个poss请求了

50:49.780 --> 50:50.980
账号密码就放到百度里面去

50:50.980 --> 50:52.980
他们百度根本不知道我们要干嘛

50:52.980 --> 50:54.180
百度有没有收到我们的请求

50:54.180 --> 50:55.100
他绝对有收到

50:55.100 --> 50:56.620
他的服务器

50:56.620 --> 50:57.900
脑袋里面一个灯亮了

50:57.900 --> 50:58.820
有个东西过来了

50:58.820 --> 51:00.740
账号abc密码123456

51:00.740 --> 51:01.740
他看不懂

51:01.740 --> 51:03.300
因为我们这个请求格式

51:03.300 --> 51:04.780
并不符合他的要求

51:04.780 --> 51:07.380
而现在他又还有安全的处理

51:07.380 --> 51:09.380
他不认外网发过来的东西

51:09.380 --> 51:10.580
就其他网站发过来的

51:10.580 --> 51:11.460
他不认的

51:11.460 --> 51:12.900
但是有没有发过去

51:12.900 --> 51:14.780
他发过去了

51:14.780 --> 51:17.100
这就是

51:17.100 --> 51:18.740
请求投

51:18.740 --> 51:19.700
这一块没什么问题

51:19.700 --> 51:20.460
没问题Q1

51:20.460 --> 51:21.980
有问题的话

51:21.980 --> 51:29.420
没问题

51:29.540 --> 51:34.830
咱们继续

51:34.830 --> 51:35.750
下个部分

51:35.750 --> 51:38.350
我们刚刚说请求里面就投有题

51:38.350 --> 51:40.070
投里面进行一些乱七八糟的信息

51:40.070 --> 51:41.710
跟我们现在好像也没什么关系

51:41.710 --> 51:42.670
就这个东西

51:42.670 --> 51:44.550
我们要注意一下

51:44.550 --> 51:46.350
然后请求题

51:46.350 --> 51:47.510
请求题什么的意思

51:47.510 --> 51:49.750
就是业务数据了

51:49.750 --> 51:51.590
你要上传一个图片

51:51.590 --> 51:53.830
你不能放到请求投里面

51:53.830 --> 51:54.510
你不能

51:54.510 --> 51:55.790
这些都是业务数据

51:55.790 --> 51:57.470
你要登陆注册

51:57.470 --> 52:01.750
你要把账号密码发送到服务器

52:01.750 --> 52:02.910
你玩那个王中荣耀

52:02.950 --> 52:04.750
你要不停的把

52:04.750 --> 52:06.070
你的位置信息

52:06.070 --> 52:06.830
你用了技能

52:06.830 --> 52:08.790
你用了什么技能

52:08.790 --> 52:09.110
对吧

52:09.110 --> 52:10.790
你用了技能的点了点

52:10.790 --> 52:11.510
哪个方向

52:11.510 --> 52:12.270
注册信息

52:12.270 --> 52:13.350
全部要发到服务器

52:13.350 --> 52:15.630
服务器要处理的

52:15.630 --> 52:16.550
那么这些信息

52:16.550 --> 52:19.310
全部放到请求体里面

52:19.310 --> 52:20.830
那么这个请求体就放

52:20.830 --> 52:21.190
就是这

52:21.190 --> 52:22.510
其实他整个请求

52:22.510 --> 52:23.110
就是一个支付串

52:23.110 --> 52:24.110
一个大的支付串

52:24.110 --> 52:24.910
这是请求行

52:24.910 --> 52:27.350
换行请求投

52:27.350 --> 52:28.870
其实投了东的一个建制队

52:28.870 --> 52:30.270
然后很多的建制队

52:30.270 --> 52:31.790
然后再多换一个行

52:31.790 --> 52:32.870
换两行

52:33.430 --> 52:34.670
直接写请求体

52:34.670 --> 52:35.870
他就是这么一种格式

52:35.870 --> 52:37.590
以后你们学习到露的里边

52:37.590 --> 52:40.270
我给我给用那个猎扯模块给他

52:40.270 --> 52:40.950
直接写出来了

52:40.950 --> 52:41.590
首写出来了

52:41.590 --> 52:45.620
这整个请求的构建消息体

52:45.620 --> 52:47.100
那么请求体里边写啥呢

52:47.100 --> 52:48.340
随便你写啥

52:48.340 --> 52:50.460
不要说你登陆你就写账号密码

52:50.460 --> 52:51.660
你注册就账号密码

52:51.660 --> 52:52.660
重复密码

52:52.660 --> 52:53.380
还有个什么呢

52:53.380 --> 52:55.100
邮箱手机验证码

52:55.100 --> 52:56.060
对吧

52:56.060 --> 52:57.460
该写他就写啥

52:57.460 --> 52:58.860
就具体的信息

52:58.860 --> 52:59.700
但是啊

52:59.700 --> 53:00.740
大家想要这个问题啊

53:00.740 --> 53:02.660
这个具体的信息用什么格式写呢

53:02.700 --> 53:04.860
是不是又是又是个麻烦事情呢

53:04.860 --> 53:06.260
比方说张浩鸣把我能不能这样写

53:06.260 --> 53:07.860
abc-123456

53:09.020 --> 53:09.500
哎

53:09.500 --> 53:11.020
这样写也挺好的呀

53:11.020 --> 53:12.580
但是有些服务器呢

53:12.580 --> 53:13.260
那有些人呢

53:13.260 --> 53:14.500
他就不这样子写

53:14.500 --> 53:15.340
他可能要这样子写

53:15.340 --> 53:18.020
mokin id等于abc

53:18.020 --> 53:20.660
mokin password等于123456

53:20.660 --> 53:20.940
对吧

53:20.940 --> 53:22.620
他说格式又不标准了

53:22.620 --> 53:23.780
那么又要遇到问题

53:23.780 --> 53:25.100
说要这一块的格式呢

53:25.100 --> 53:26.420
我们往往有这么极动

53:26.420 --> 53:27.700
标准可以选择

53:27.700 --> 53:29.900
但是不说一定的啊

53:29.900 --> 53:31.780
如果有一天公司要求

53:31.820 --> 53:33.180
我既不用我

53:33.180 --> 53:34.900
以前我们默公认的标准

53:34.900 --> 53:35.540
我全部不用

53:35.540 --> 53:37.540
我就要自己用一种格式

53:37.540 --> 53:37.860
行不行

53:37.860 --> 53:38.540
当然可以

53:38.540 --> 53:40.300
你自己去解析呗

53:40.300 --> 53:42.700
那我们通常都会用一些标准格式

53:42.700 --> 53:45.060
那么这个标准格式

53:45.060 --> 53:46.900
到底用什么格式

53:46.900 --> 53:48.500
服务器还是不知道

53:48.500 --> 53:52.770
他不知道你使用的是这种格式

53:52.770 --> 53:54.130
还是用的是这种格式

53:56.650 --> 53:57.490
原来的意思吧

53:57.490 --> 53:58.170
就像服务器

53:58.170 --> 54:00.290
一不他不知道你请求的协议是什么

54:00.290 --> 54:01.890
是不是这里要告诉服务器

54:01.890 --> 54:03.170
我用的是什么协议

54:03.170 --> 54:04.970
那么这里的数据格式也是一样

54:04.970 --> 54:06.530
服务器不知道你要用什么格式

54:06.530 --> 54:07.810
他就不知道该怎么去解析

54:09.130 --> 54:10.570
那么通常情况下呢

54:10.570 --> 54:12.370
我们怎么来告诉服务器呢

54:12.370 --> 54:13.610
我们是要在

54:14.770 --> 54:16.370
想用头里边

54:16.370 --> 54:19.370
用一个特殊制断叫做content type

54:20.490 --> 54:21.490
服务器要认啊

54:21.490 --> 54:24.780
很多服务器都要认

54:24.780 --> 54:27.180
大家说我能不能不用这个单词呢

54:27.180 --> 54:28.100
换个单词行不行

54:28.100 --> 54:28.980
也可以

54:28.980 --> 54:30.020
那服务器你自己写呗

54:31.460 --> 54:32.500
反正一家写啥

54:32.500 --> 54:34.780
这个请求头里边你都可以读到的

54:34.780 --> 54:35.780
那么有个请求头里

54:35.780 --> 54:40.190
包括加上一个东西叫做content type

54:40.190 --> 54:41.670
我刚刚描述一下

54:41.670 --> 54:43.230
我这一次请求里边

54:43.230 --> 54:46.670
请求体是什么格式的数据

54:46.670 --> 54:48.150
那么这特别写的是啥呢

54:48.150 --> 54:50.870
写的是一个MIME类型

54:50.870 --> 54:54.560
那叫做MIME类型

54:54.560 --> 54:55.680
这个网页又是啥呢

54:55.680 --> 54:57.720
这个网页是一个标准格式的制服串

54:58.600 --> 55:00.000
格式的制服串

55:01.520 --> 55:04.720
用于描述互联网中的

55:06.920 --> 55:08.000
数据格式

55:10.040 --> 55:11.760
你看我们互联网中有哪些数据格式

55:12.880 --> 55:13.800
有图片

55:13.800 --> 55:15.160
图片有PNG图片

55:15.160 --> 55:16.600
有GIF图片

55:16.600 --> 55:18.480
有GPG图片

55:18.480 --> 55:19.600
有网页

55:19.600 --> 55:22.280
有CSS有GS

55:22.280 --> 55:22.520
对不对

55:22.520 --> 55:24.720
所以有各种不同的数据格式

55:24.720 --> 55:26.520
还有什么普通文件

55:26.520 --> 55:28.520
普通文件就是个二听子格式

55:28.520 --> 55:30.440
所以有很多的格式啊

55:30.440 --> 55:31.920
那么这些格式呢

55:31.920 --> 55:33.160
你用于英文描述好啊

55:33.160 --> 55:34.280
还是用中文描述好

55:34.280 --> 55:35.240
你用啥子不好

55:35.280 --> 55:37.240
所以我们需要标准话

55:37.240 --> 55:38.920
让大家都认识普遍公证

55:40.040 --> 55:41.320
那么这些标准里边呢

55:41.320 --> 55:42.320
就包括说

55:42.320 --> 55:44.200
比如说我们的atmail

55:44.200 --> 55:46.360
他就是用这种这个制服串来描述的

55:47.120 --> 55:48.760
普通文本就是一个制服串文本

55:48.760 --> 55:51.080
我就用这种格式来描述

55:51.080 --> 55:53.040
如果说是一个图片

55:53.040 --> 55:53.960
我就用这种格式

55:53.960 --> 55:55.440
那就是个标准格式的制服串

55:55.440 --> 55:56.640
没有什么特别的

55:56.640 --> 55:57.360
PNG

55:59.080 --> 56:00.080
那个GPG

56:01.920 --> 56:02.800
对吧

56:02.800 --> 56:03.840
他用GPG

56:04.560 --> 56:05.440
CSS

56:05.440 --> 56:06.840
我就用这种格式

56:06.840 --> 56:08.840
GS我就用MPG

56:12.840 --> 56:14.880
你可以摆对一下MIME内容

56:14.880 --> 56:16.760
MIME内容里边很多很多的

56:16.760 --> 56:17.480
它是个标准

56:17.480 --> 56:18.200
没有什么特别的

56:19.160 --> 56:20.360
那么这里也是一样

56:20.360 --> 56:21.240
我告诉服务系

56:21.240 --> 56:23.280
我这个东西到底是啥格式

56:23.280 --> 56:24.320
他怎么描述呢

56:24.320 --> 56:26.200
我们用MIME内容来描述

56:28.000 --> 56:28.720
通常情况下

56:28.720 --> 56:30.320
你可以看到这里有三种

56:30.320 --> 56:31.160
第一种呢

56:31.160 --> 56:33.040
描述的是什么呢

56:33.040 --> 56:34.480
这种就是这种格式

56:34.480 --> 56:35.920
这种格式是什么格式呢

56:35.920 --> 56:37.760
就是query的格式

56:37.760 --> 56:40.160
比方说用这种格式来书写的话

56:40.160 --> 56:42.160
如果说用这种格式来书写的话

56:42.160 --> 56:51.600
那么他的消息挺的是这个样子

56:51.600 --> 56:52.400
我们直接看吧

56:52.400 --> 56:54.120
直接去看效果

56:54.120 --> 56:54.720
直接看效果

56:54.720 --> 56:56.160
不用在这里再写了

56:56.160 --> 56:56.800
看这边

56:56.800 --> 56:57.960
刚才不是访文摆动吧

56:59.920 --> 57:01.320
我再来给他提交一次

57:01.320 --> 57:02.360
我甭管他认不认

57:02.360 --> 57:03.280
我就给他提交过去

57:04.440 --> 57:05.600
帐号ABC

57:05.600 --> 57:06.960
密码了123

57:06.960 --> 57:08.080
默认情况下

57:08.080 --> 57:10.720
forum表达发出post的寻求的时候

57:10.720 --> 57:12.440
他的消息体就是这样的格式

57:12.440 --> 57:12.920
点灯录

57:14.040 --> 57:14.440
你看这

57:16.120 --> 57:17.320
看下面啊

57:17.320 --> 57:19.360
寻求post

57:19.360 --> 57:19.760
对不对

57:19.760 --> 57:21.040
寻求的地址

57:21.040 --> 57:21.960
pies

57:21.960 --> 57:22.280
写个

57:24.320 --> 57:25.560
然后往下找啊

57:25.560 --> 57:27.080
下边不是一个form data

57:27.080 --> 57:28.640
我这看这

57:28.640 --> 57:32.180
content type

57:32.180 --> 57:33.420
内容

57:33.420 --> 57:34.300
消息内容

57:35.460 --> 57:36.500
内容是什么呢

57:36.500 --> 57:38.100
implication

57:38.100 --> 57:39.060
x3w

57:39.060 --> 57:39.460
forum

57:39.460 --> 57:39.980
url

57:39.980 --> 57:40.460
incoded

57:40.460 --> 57:41.740
很长一个字不算

57:41.740 --> 57:42.820
他表示什么意思

57:42.820 --> 57:43.740
表示我给你

57:43.740 --> 57:45.420
我给服务器发送的消息格式

57:45.420 --> 57:46.140
是什么格式呢

57:46.140 --> 57:47.220
你看下面这个form data

57:47.220 --> 57:48.660
就是我们的寻求题

57:48.660 --> 57:49.100
寻求题

57:49.100 --> 57:49.460
我们点灯

57:49.460 --> 57:50.020
vue source

57:50.020 --> 57:51.300
看他原式格式

57:51.300 --> 57:55.660
就这个玩意

57:55.660 --> 57:56.420
哎呦

57:56.420 --> 57:57.220
完了

57:57.220 --> 57:58.580
我这里要新开一个了

57:58.580 --> 57:59.980
他这个格式有变

57:59.980 --> 58:00.300
不对的

58:02.100 --> 58:02.740
他就这个格式

58:05.100 --> 58:05.620
这个格式

58:05.620 --> 58:07.460
就是他的他的消息格式

58:07.460 --> 58:15.290
就是我们把它称之为这个

58:15.330 --> 58:17.090
这个玩意是不是跟快乐长得一样

58:17.090 --> 58:17.890
属性名

58:17.890 --> 58:18.730
属性值

58:18.730 --> 58:19.450
属性名

58:19.450 --> 58:20.050
属性值

58:20.050 --> 58:21.770
跟快乐是不长得一模一样

58:21.770 --> 58:22.530
对吧

58:22.530 --> 58:22.730
好

58:22.730 --> 58:23.850
那么还有没有别的格式呢

58:23.850 --> 58:25.010
还有

58:25.010 --> 58:25.290
这个

58:27.050 --> 58:28.610
application

58:28.610 --> 58:29.490
对不对

58:29.490 --> 58:29.770
接受

58:34.820 --> 58:35.660
来给你接受

58:35.660 --> 58:36.500
那么这种格式呢

58:36.500 --> 58:37.460
他得到的消息呢

58:37.460 --> 58:37.860
就是这个

58:37.860 --> 58:39.460
以后我们用阿迦克斯发送的话

58:39.460 --> 58:41.380
我们一般就会发送这种格式啊

58:41.380 --> 58:42.020
locking id

58:43.700 --> 58:44.340
等于

58:44.340 --> 58:44.900
对

58:44.900 --> 58:46.180
冒号

58:46.180 --> 58:46.900
属性

58:46.900 --> 58:48.460
结证了他接证你是就是

58:48.460 --> 58:49.820
你可以把认为就是一个

58:49.820 --> 58:51.660
既也是对象的格式

58:51.660 --> 58:52.020
只不过了

58:52.020 --> 58:52.700
他的属性没有权

58:52.700 --> 58:53.980
不要加上加上那个

58:53.980 --> 58:54.740
呃

58:54.740 --> 58:56.340
双引号

58:56.340 --> 58:59.830
abc

58:59.830 --> 59:00.790
locking

59:00.790 --> 59:01.790
大数

59:01.790 --> 59:02.510
换不换换换

59:02.510 --> 59:03.070
都无所谓

59:04.430 --> 59:04.910
123

59:06.590 --> 59:07.510
原来的意思吧

59:07.510 --> 59:08.390
如果说是结证的话

59:08.390 --> 59:09.470
他就是各自这种格式

59:10.670 --> 59:10.790
啊

59:10.790 --> 59:11.750
还有没有别的呢

59:11.750 --> 59:12.230
还有这个

59:13.590 --> 59:14.110
这种格式

59:15.110 --> 59:15.670
这种格式呢

59:15.670 --> 59:16.870
一般用于上传文件

59:16.870 --> 59:18.750
就是他数据量特别大

59:18.750 --> 59:20.630
比方说我文件是一个恶性质数据

59:20.630 --> 59:20.870
对不对

59:20.870 --> 59:21.550
恶性质数据

59:21.550 --> 59:22.670
那我就不能用这种格式

59:22.670 --> 59:24.190
那个很长很长

59:24.190 --> 59:25.230
一个文件一可以比

59:25.230 --> 59:26.790
像这个东西

59:26.790 --> 59:27.910
可能只有几个字节

59:28.830 --> 59:29.750
只有几个字节

59:29.750 --> 59:30.990
但因为一个阿斯克福

59:30.990 --> 59:32.350
就是一个字节吗

59:32.350 --> 59:32.630
对吧

59:34.190 --> 59:35.430
八位吗

59:35.430 --> 59:36.830
那一个文件是一可以比

59:36.830 --> 59:38.270
是1024个字节

59:38.270 --> 59:39.550
一可以比的文件就是1024

59:39.550 --> 59:40.950
那个数据量很大的

59:40.950 --> 59:41.070
啊

59:41.070 --> 59:42.630
他这种格式不是很友好的

59:42.630 --> 59:44.110
于是他一般上传文件的话

59:44.110 --> 59:44.990
会用这种格式啊

59:44.990 --> 59:46.270
比方说我这里呢

59:46.270 --> 59:47.030
给他看一下啊

59:47.030 --> 59:48.510
也可以自己手动条

59:48.510 --> 59:50.190
把这个调整成这个

59:51.190 --> 59:51.550
叫

59:52.270 --> 59:53.950
太叫什么名字了

59:53.950 --> 59:55.350
好久没写过forum表单了

59:55.350 --> 59:56.310
这种原始

59:56.310 --> 59:57.950
以前我们开发网易的时候

59:57.950 --> 59:59.110
很多数据提交都要靠

59:59.110 --> 01:00:00.590
都要靠这个forum表单的啊

01:00:00.590 --> 01:00:01.110
一个type

01:00:01.750 --> 01:00:02.030
这个

01:00:03.470 --> 01:00:04.390
调整成这个

01:00:04.390 --> 01:00:05.190
forum跌上

01:00:05.190 --> 01:00:05.790
marpy pod

01:00:05.790 --> 01:00:06.310
forum跌上

01:00:06.310 --> 01:00:07.390
那么这样他的消息格式

01:00:07.390 --> 01:00:08.430
变成这个格式了

01:00:08.430 --> 01:00:09.510
我们来看一下吧

01:00:09.510 --> 01:00:10.990
你们以后学文件上传的时候

01:00:10.990 --> 01:00:12.150
你就会学到

01:00:12.150 --> 01:00:14.070
就要使用这个格式

01:00:14.070 --> 01:00:14.190
啊

01:00:14.190 --> 01:00:14.590
又来啊

01:00:14.590 --> 01:00:16.310
我们又来提交

01:00:16.310 --> 01:00:17.470
又找到这个内出

01:00:18.550 --> 01:00:21.230
abc123点灯路

01:00:21.230 --> 01:00:21.910
你看看这个

01:00:21.910 --> 01:00:24.890
这个也是什么格式

01:00:24.890 --> 01:00:25.970
你看数据还是一样啊

01:00:25.970 --> 01:00:27.010
数据还是一样

01:00:27.010 --> 01:00:28.930
我们点这个vue source

01:00:28.930 --> 01:00:29.690
变成这个格式的

01:00:30.730 --> 01:00:31.570
所以分割符

01:00:31.570 --> 01:00:32.730
这个分割符在哪里定义的

01:00:32.730 --> 01:00:34.330
是在content type里的定义的啊

01:00:34.330 --> 01:00:36.090
不过我们现在还没有学到

01:00:36.090 --> 01:00:37.450
你们以后会学到文件上传啊

01:00:37.450 --> 01:00:39.090
我这里会想想去解释的

01:00:39.090 --> 01:00:39.890
我们这里去看一下

01:00:39.890 --> 01:00:40.930
反正他格式

01:00:40.930 --> 01:00:41.170
哎

01:00:41.170 --> 01:00:42.290
很奇特

01:00:42.290 --> 01:00:43.770
很非常奇特就行了

01:00:43.770 --> 01:00:43.890
啊

01:00:43.890 --> 01:00:46.130
就是我们总之的就是我们请求服务器

01:00:46.130 --> 01:00:48.490
会给他不同的数据格式

01:00:48.490 --> 01:00:51.450
那如果格式请求能不能有这个东西呢

01:00:51.450 --> 01:00:54.290
格式请求写词也可以有啊

01:00:54.290 --> 01:00:55.330
atb协议并没有说

01:00:55.330 --> 01:00:57.170
格式请求就不能有这个

01:00:57.170 --> 01:00:57.690
只不过呢

01:00:57.690 --> 01:00:59.330
浏览器他不回

01:00:59.330 --> 01:01:00.610
如果说你是格式请求的话

01:01:00.610 --> 01:01:01.850
浏览器

01:01:01.850 --> 01:01:02.530
他不会甩地

01:01:02.530 --> 01:01:03.930
他不会把这个东西给服务器

01:01:03.930 --> 01:01:04.530
一旦写了

01:01:04.530 --> 01:01:05.570
他不会给服务器的

01:01:05.570 --> 01:01:06.330
而且浏览器

01:01:06.330 --> 01:01:07.570
格式请求我们刚才看到

01:01:07.570 --> 01:01:09.090
浏览器里边都是

01:01:09.090 --> 01:01:10.490
自己生存的格式请求对吧

01:01:10.490 --> 01:01:11.810
你看随便找一个格式请求啊

01:01:11.810 --> 01:01:12.970
你看这个特色atmail

01:01:12.970 --> 01:01:14.010
它是个格式请求

01:01:14.010 --> 01:01:15.050
格式请求你看下面就没有这个

01:01:15.050 --> 01:01:16.010
蜂蜂

01:01:16.010 --> 01:01:16.930
它就没有消息体

01:01:16.930 --> 01:01:17.610
那么自然而然

01:01:17.610 --> 01:01:18.610
你困在这个header里边

01:01:18.610 --> 01:01:20.730
是不是没有content type

01:01:20.730 --> 01:01:21.770
他没有content type

01:01:21.770 --> 01:01:24.010
因为他消息体都没有

01:01:24.010 --> 01:01:25.850
那我给谁描述这个格式呢

01:01:25.850 --> 01:01:27.650
这个东西就是描述消息体的格式的

01:01:27.650 --> 01:01:28.370
他就没有

01:01:28.370 --> 01:01:29.410
没有这个请求体

01:01:29.410 --> 01:01:31.250
他就没有这个content type

01:01:31.250 --> 01:01:32.170
你要这意思吧

01:01:32.170 --> 01:01:34.890
但是不是说格式请求就不能有请求体啊

01:01:34.890 --> 01:01:36.930
它是可以有的

01:01:36.930 --> 01:01:37.090
好

01:01:37.090 --> 01:01:37.410
最后呢

01:01:37.410 --> 01:01:38.570
我给他看一个啊

01:01:38.570 --> 01:01:40.490
就是练识题

01:01:40.490 --> 01:01:41.050
练识题

01:01:41.050 --> 01:01:43.290
问你格式和pose有什么样的区别

01:01:43.290 --> 01:01:45.610
所以经常会问的

01:01:45.650 --> 01:01:48.130
那你怎么回答呢

01:01:48.130 --> 01:01:50.010
我相信大家自己去摆度的话

01:01:50.010 --> 01:01:51.410
可以摆度出一大堆

01:01:51.410 --> 01:01:55.660
一二三四五六七八九

01:01:55.660 --> 01:01:58.380
但是这些回答都太过于表面了

01:01:58.380 --> 01:02:00.260
你要去告诉面试官

01:02:00.260 --> 01:02:04.260
你真正最深刻的理解是什么

01:02:04.260 --> 01:02:06.940
其实 acgb 协议里边并没有规定

01:02:06.940 --> 01:02:08.380
请求方法必须试什么

01:02:08.380 --> 01:02:09.180
你必须试个什么

01:02:09.180 --> 01:02:09.900
你要获得资源

01:02:09.900 --> 01:02:10.620
你必须要是给证

01:02:10.620 --> 01:02:11.220
那我获得资源

01:02:11.220 --> 01:02:12.300
我可以用 abc

01:02:12.300 --> 01:02:14.100
我可以不用给证

01:02:14.100 --> 01:02:15.300
它只是一个制服圈而已

01:02:15.300 --> 01:02:16.860
它没有什么区别

01:02:16.860 --> 01:02:19.500
只不过我们在应用层面

01:02:19.500 --> 01:02:23.300
由于瀏覽器

01:02:23.300 --> 01:02:25.700
它有自动处理的能力

01:02:25.700 --> 01:02:30.540
和服务器一般能识别这两个请求

01:02:30.540 --> 01:02:32.780
并且服务器会对这两个请求

01:02:32.780 --> 01:02:34.020
做出差异化处理

01:02:34.020 --> 01:02:35.340
一般来说啊

01:02:35.340 --> 01:02:36.500
而且服务器你完全

01:02:36.500 --> 01:02:37.420
就是用代码写成的

01:02:37.420 --> 01:02:38.980
你完全可以自己写服务器

01:02:38.980 --> 01:02:41.380
你可以完全自己搞一个

01:02:41.380 --> 01:02:42.380
不同的请求方法出来

01:02:42.380 --> 01:02:44.740
完全可以

01:02:44.740 --> 01:02:47.420
但是一般来说服务器呢

01:02:47.420 --> 01:02:49.020
它对这两个请求的处理

01:02:49.020 --> 01:02:50.460
是不一样的

01:02:50.460 --> 01:02:52.780
造成了这两个地方的有差别

01:02:52.780 --> 01:02:53.700
它处理什么

01:02:53.700 --> 01:02:55.220
什么不一样呢

01:02:55.220 --> 01:02:57.540
如果你是接着请求的话

01:02:57.540 --> 01:03:01.100
服务器它不会去独立的请求题

01:03:01.100 --> 01:03:01.940
哪怕你给它请求

01:03:01.940 --> 01:03:04.100
他都不读

01:03:04.100 --> 01:03:04.740
而且瀏覽器

01:03:04.740 --> 01:03:06.020
他也不会不会把

01:03:06.020 --> 01:03:06.860
给的请求的请求

01:03:06.860 --> 01:03:09.740
给服务器发过去

01:03:09.740 --> 01:03:10.540
那么如果说你是

01:03:10.540 --> 01:03:11.060
给的请求

01:03:11.060 --> 01:03:12.100
如果说你要传数据

01:03:12.100 --> 01:03:14.020
比方说我要我要做搜索

01:03:14.060 --> 01:03:17.210
刚才我们不是做了搜索吗

01:03:17.210 --> 01:03:17.890
我要做搜索

01:03:17.890 --> 01:03:18.530
这个搜索是不是

01:03:18.530 --> 01:03:19.730
get请求

01:03:19.730 --> 01:03:20.050
对不对

01:03:20.050 --> 01:03:20.890
就是个get请求嘛

01:03:20.890 --> 01:03:23.370
你看通过一个地址请求过来的

01:03:23.370 --> 01:03:24.610
那么通过的地址请求过来的

01:03:24.610 --> 01:03:25.090
是不是

01:03:25.090 --> 01:03:28.640
就是这是我们的搜索对不对

01:03:28.640 --> 01:03:29.840
那么搜索是不是要把

01:03:29.840 --> 01:03:31.040
关键字告诉服务器

01:03:31.040 --> 01:03:33.200
所以有业务数据不告诉服务器

01:03:33.200 --> 01:03:33.960
那么如何来

01:03:33.960 --> 01:03:35.200
它不能传消息题

01:03:35.200 --> 01:03:36.160
不能传请求题

01:03:36.160 --> 01:03:37.240
那么怎么来告诉服务器的

01:03:37.240 --> 01:03:38.160
业务数据呢

01:03:38.160 --> 01:03:41.560
它一般是通过pass

01:03:41.560 --> 01:03:43.200
或者是pass

01:03:43.200 --> 01:03:43.920
或者是按

01:03:43.920 --> 01:03:49.580
这应该是这样写

01:03:49.580 --> 01:03:54.150
通过query

01:03:54.150 --> 01:03:55.950
通过这两个地方去读

01:03:55.950 --> 01:03:57.470
有些人可以通过pass来读

01:03:57.470 --> 01:03:58.230
像百度这里

01:03:58.230 --> 01:03:59.550
它在通过query

01:03:59.550 --> 01:04:00.990
通过这里来读

01:04:00.990 --> 01:04:02.630
读得起消息

01:04:02.630 --> 01:04:04.630
所以说是不是这个地方是服务

01:04:04.630 --> 01:04:06.150
这是因为服务器这样做的

01:04:06.150 --> 01:04:08.270
所以说你不得不这样做

01:04:08.270 --> 01:04:10.750
然后如果你是pose请求呢

01:04:10.750 --> 01:04:12.230
一般来说服务器

01:04:12.230 --> 01:04:13.910
不会从地址里边去读数据

01:04:13.910 --> 01:04:16.310
一般会从请求题里边去读数据

01:04:16.310 --> 01:04:16.550
对吧

01:04:16.550 --> 01:04:17.510
就是我们刚才看到的

01:04:17.510 --> 01:04:18.310
这个body里边

01:04:18.310 --> 01:04:20.790
就这里从这里去读数据

01:04:23.320 --> 01:04:26.880
由于服务器的处理不一样

01:04:26.880 --> 01:04:29.120
所以造成了

01:04:29.120 --> 01:04:30.800
它们有各种各样的差异

01:04:30.800 --> 01:04:31.880
比方说gass

01:04:31.880 --> 01:04:33.520
gass一般来说我们就没有请求题

01:04:33.520 --> 01:04:34.640
不是说它不

01:04:34.640 --> 01:04:35.560
它一定没有

01:04:35.560 --> 01:04:36.800
只数据服务器它不认

01:04:36.800 --> 01:04:37.360
所以说呢

01:04:37.360 --> 01:04:38.240
而且浏览器呢

01:04:38.240 --> 01:04:39.200
它就不给

01:04:39.200 --> 01:04:40.800
所要造成的gass请求

01:04:40.800 --> 01:04:43.800
好像没有请求题

01:04:43.800 --> 01:04:45.520
pose因为服务器那边呢

01:04:45.520 --> 01:04:46.920
它一般不认那个pose

01:04:46.920 --> 01:04:48.280
它一般pose读的时候呢

01:04:48.280 --> 01:04:49.560
一般来说它不会从这里读

01:04:49.560 --> 01:04:50.480
但是能不能从这里读

01:04:50.480 --> 01:04:51.480
可以从这里读

01:04:51.480 --> 01:04:53.960
但是服务器一般从请求题里边读

01:04:53.960 --> 01:04:54.600
所以说呢

01:04:54.600 --> 01:04:55.680
用pose请求的时候呢

01:04:55.680 --> 01:04:56.880
我们一般会构建请求题

01:04:58.200 --> 01:04:59.160
然后呢

01:04:59.160 --> 01:05:01.600
由于这次请求浏览器呢

01:05:01.600 --> 01:05:02.600
它会有限制啊

01:05:02.600 --> 01:05:05.040
就对这个UIL地址会有限制

01:05:05.040 --> 01:05:06.480
比方说一个数据量很大

01:05:06.480 --> 01:05:07.640
也要传输的数据很多

01:05:07.640 --> 01:05:09.000
比方就发布一篇文章

01:05:09.000 --> 01:05:10.080
用gass请求

01:05:10.080 --> 01:05:12.280
你只是只能把文章数据放到这儿

01:05:12.280 --> 01:05:13.920
比方说RT口

01:05:13.920 --> 01:05:14.520
康天字

01:05:14.520 --> 01:05:14.960
放到这儿

01:05:14.960 --> 01:05:15.360
对吧

01:05:15.360 --> 01:05:16.440
一大堆

01:05:16.440 --> 01:05:17.680
几千字的文章

01:05:17.680 --> 01:05:18.640
放到这儿

01:05:18.640 --> 01:05:19.600
由于浏览器呢

01:05:19.600 --> 01:05:20.600
对这个地址呢

01:05:20.600 --> 01:05:22.840
长度是有限制的

01:05:22.840 --> 01:05:23.280
所以说呢

01:05:23.280 --> 01:05:24.600
你的请求呢

01:05:24.600 --> 01:05:26.560
可能发送不完整

01:05:26.560 --> 01:05:29.040
你的数据可能会被截断

01:05:29.040 --> 01:05:29.520
原来是吧

01:05:29.520 --> 01:05:30.600
但不是说

01:05:32.080 --> 01:05:33.440
ATP协议有限制

01:05:33.440 --> 01:05:34.880
ATP协议没有限制

01:05:34.880 --> 01:05:37.280
是浏览器给你的限制

01:05:37.280 --> 01:05:39.520
它不能用写太多的东西在这儿

01:05:39.520 --> 01:05:40.080
对吧

01:05:40.080 --> 01:05:41.680
因此呢

01:05:41.680 --> 01:05:43.480
数据量上

01:05:43.480 --> 01:05:44.800
在浏览器和服务器之间

01:05:44.800 --> 01:05:45.680
交互了过程中

01:05:47.480 --> 01:05:49.240
接着请求的传输的数据量

01:05:49.240 --> 01:05:54.030
要比Pose请求要小

01:05:54.030 --> 01:05:54.550
然后呢

01:05:54.550 --> 01:05:55.630
接着请求还有什么区别呢

01:05:55.630 --> 01:05:57.430
接着请求的业务数据

01:05:57.430 --> 01:06:00.310
是放到地址中的安全性交叉

01:06:00.310 --> 01:06:01.790
那么这也谈到安全性啊

01:06:01.790 --> 01:06:02.710
一个是访投赔

01:06:02.710 --> 01:06:03.310
是吧

01:06:03.310 --> 01:06:05.230
你是在这边访用网页

01:06:07.030 --> 01:06:08.150
然后这边

01:06:08.150 --> 01:06:09.750
你在提交数据的时候

01:06:09.750 --> 01:06:10.510
这里边

01:06:10.510 --> 01:06:11.190
比方你注册

01:06:12.310 --> 01:06:13.030
这里写

01:06:13.030 --> 01:06:14.270
地址栏上写了一个

01:06:14.270 --> 01:06:18.390
写了一个这么一个东西

01:06:18.390 --> 01:06:20.750
locking password 123

01:06:20.750 --> 01:06:23.310
你说把密码暴露出去了

01:06:23.310 --> 01:06:24.630
密码是不是暴露出去了

01:06:24.630 --> 01:06:26.190
别人后面看

01:06:26.190 --> 01:06:28.950
一把一二三

01:06:28.950 --> 01:06:29.750
仪式访投赔啊

01:06:29.750 --> 01:06:30.430
都是一个点

01:06:30.430 --> 01:06:31.430
后面还有些点了

01:06:31.430 --> 01:06:31.950
跟那个

01:06:34.110 --> 01:06:35.790
CSRF攻击有关系

01:06:38.710 --> 01:06:39.110
总之呢

01:06:39.110 --> 01:06:40.030
就是介绍放

01:06:40.030 --> 01:06:42.710
把请求数据放到介绍里边的安全性交叉

01:06:42.710 --> 01:06:44.670
但是跟加密一定没关系

01:06:44.670 --> 01:06:46.190
一定跟加密没关系

01:06:46.190 --> 01:06:47.190
Pose是不加密的

01:06:48.430 --> 01:06:49.670
都是明文的

01:06:49.670 --> 01:06:51.830
说跟加密没有任何关系啊

01:06:51.830 --> 01:06:52.550
然后还有一个点呢

01:06:52.550 --> 01:06:54.190
就是介绍了有利于分享

01:06:54.190 --> 01:06:54.950
页面结构

01:06:56.430 --> 01:06:57.870
分享页面结构啥意思呢

01:06:57.870 --> 01:06:59.550
比方说我这里搜索一个关键字啊

01:07:01.070 --> 01:07:01.590
哎听没有

01:07:01.590 --> 01:07:01.830
对吧

01:07:01.830 --> 01:07:02.590
我们这是我们

01:07:02.590 --> 01:07:02.670
哎

01:07:02.670 --> 01:07:04.430
我们看这个搜索一面还不错

01:07:04.430 --> 01:07:05.590
我就把一个地址一复制

01:07:05.590 --> 01:07:06.870
就分享给你的朋友了

01:07:06.870 --> 01:07:09.070
那你朋友那边打开过后

01:07:09.070 --> 01:07:10.990
打开过后是不是一模一样的界面

01:07:10.990 --> 01:07:11.590
为什么呢

01:07:11.590 --> 01:07:13.710
为什么能够达到一模一样的界面

01:07:13.710 --> 01:07:14.590
因为监测请求

01:07:14.590 --> 01:07:15.830
他是没有消息体的

01:07:15.830 --> 01:07:18.910
他的所有的信息全是不是全在这里边

01:07:18.910 --> 01:07:20.350
信息是不是齐全的

01:07:20.350 --> 01:07:20.750
对吧

01:07:20.750 --> 01:07:22.390
一这边信息跟他那边信息一样

01:07:22.390 --> 01:07:23.470
他得到的页面就一样了

01:07:24.950 --> 01:07:26.590
当然这里边有特殊情况啊

01:07:26.590 --> 01:07:27.830
那就要学习更多的知识

01:07:27.830 --> 01:07:28.630
比方说口气啊

01:07:28.630 --> 01:07:29.830
C信啊这种东西

01:07:29.830 --> 01:07:30.630
不过呢

01:07:30.630 --> 01:07:31.430
像这种啊

01:07:31.430 --> 01:07:33.470
跟那个登录无关的页面

01:07:33.470 --> 01:07:34.630
那么他得到信息就一样

01:07:34.630 --> 01:07:35.470
他便于分享

01:07:36.670 --> 01:07:38.030
但是铺设型就不行

01:07:38.030 --> 01:07:39.750
铺设型为什么不便于分享呢

01:07:39.750 --> 01:07:41.190
因为你比方你

01:07:41.190 --> 01:07:42.110
你刚才我们看到了

01:07:43.310 --> 01:07:44.790
请求这个地址

01:07:44.790 --> 01:07:46.590
我们发动了铺设型球

01:07:46.590 --> 01:07:47.710
我给他传了一个数据过去

01:07:47.710 --> 01:07:48.510
在在哪里

01:07:48.510 --> 01:07:49.790
在消息体里边

01:07:49.790 --> 01:07:51.910
你把地址分享过去

01:07:51.950 --> 01:07:54.030
他能不能复制到消息体里边的数据

01:07:54.030 --> 01:07:55.630
复制不到对吧

01:07:55.630 --> 01:07:57.550
消息体里边的数据是复制不过去的

01:07:57.550 --> 01:07:58.510
分享不出去了

01:07:58.510 --> 01:07:59.390
于是别人

01:07:59.390 --> 01:08:01.350
你这边是铺设型球发了消息体

01:08:01.350 --> 01:08:02.150
别人里面打开过后

01:08:02.150 --> 01:08:02.950
就是铺设型球了

01:08:02.950 --> 01:08:03.710
没有消息体

01:08:03.710 --> 01:08:05.750
看到的东西自然不一样

01:08:05.750 --> 01:08:07.310
说铺设呢是不利于分享的

01:08:08.390 --> 01:08:09.030
别人的意思吧

01:08:09.030 --> 01:08:10.390
而且语议上也不一样

01:08:10.390 --> 01:08:11.790
铺设是什么语议呢

01:08:11.790 --> 01:08:13.350
那语议就是含义不一样

01:08:13.350 --> 01:08:13.990
铺设什么含义

01:08:13.990 --> 01:08:15.430
给我一个东西

01:08:15.430 --> 01:08:16.230
拿东西的

01:08:16.230 --> 01:08:17.030
铺设什么含义呢

01:08:17.030 --> 01:08:17.950
我给你提交东西的

01:08:19.710 --> 01:08:23.110
我今天时间好像又超时了

01:08:23.110 --> 01:08:23.230
好

01:08:23.230 --> 01:08:23.590
别问题吧

01:08:23.590 --> 01:08:23.870
没问题

01:08:23.870 --> 01:08:24.990
赶快扣一

01:08:24.990 --> 01:08:28.500
咱们就继续了

01:08:28.500 --> 01:08:30.860
之所以我使人们打点劲

01:08:30.860 --> 01:08:32.980
就是希望大家要认识准确一点

01:08:32.980 --> 01:08:35.970
把这些看起来

01:08:35.970 --> 01:08:36.210
好

01:08:36.210 --> 01:08:37.090
下面是响应

01:08:37.090 --> 01:08:37.450
响应

01:08:38.570 --> 01:08:40.410
刚才说到这个是浏览器

01:08:40.410 --> 01:08:41.810
或者是其他乱七八糟的科普端

01:08:41.810 --> 01:08:42.690
向服务器发数据

01:08:42.690 --> 01:08:43.410
就是这么一种格式

01:08:43.410 --> 01:08:44.250
一个很长的之后

01:08:44.250 --> 01:08:44.810
车型球行

01:08:44.810 --> 01:08:46.250
型球头型球体

01:08:46.250 --> 01:08:48.090
然后就是响应了

01:08:48.090 --> 01:08:50.130
响应也是一样的格式

01:08:50.130 --> 01:08:51.170
响应行

01:08:51.170 --> 01:08:52.050
响应头

01:08:52.050 --> 01:08:53.530
响应体

01:08:53.530 --> 01:08:54.210
你给我发过来

01:08:54.210 --> 01:08:54.890
我给你发过去

01:08:56.570 --> 01:08:57.170
响应头

01:08:58.370 --> 01:08:59.730
我给你重申一遍

01:08:59.730 --> 01:09:01.730
你不是说要1.1这个版本吗

01:09:01.730 --> 01:09:02.090
行

01:09:02.090 --> 01:09:02.570
我认

01:09:02.570 --> 01:09:04.050
我就给你1.1版本

01:09:04.050 --> 01:09:05.930
将来你能学到这个外边收费的时候

01:09:05.930 --> 01:09:07.290
服务器要改

01:09:07.290 --> 01:09:09.370
它可能要改成其他协议

01:09:09.370 --> 01:09:09.730
不管它

01:09:09.730 --> 01:09:10.770
我们现在就不改

01:09:10.770 --> 01:09:11.450
你说什么协议

01:09:11.450 --> 01:09:12.250
什么协议

01:09:12.250 --> 01:09:13.330
识归

01:09:13.330 --> 01:09:14.090
然后这一边

01:09:14.090 --> 01:09:16.610
然后后面是一个消息码

01:09:17.930 --> 01:09:19.170
状态码

01:09:19.170 --> 01:09:20.370
也叫有消息码

01:09:20.370 --> 01:09:21.290
也叫状态文本

01:09:21.290 --> 01:09:22.450
也叫有消息文本

01:09:22.450 --> 01:09:22.850
啥意思呢

01:09:22.850 --> 01:09:23.770
他们是连在一块的

01:09:25.450 --> 01:09:26.890
高速客户端

01:09:26.890 --> 01:09:28.050
你的请求我收到了

01:09:29.650 --> 01:09:30.690
然后我这边呢

01:09:30.690 --> 01:09:31.770
我给你个

01:09:31.770 --> 01:09:34.250
我给你我给你的是什么玩意儿

01:09:34.250 --> 01:09:35.810
我到底是怎么处理这个请求的

01:09:38.170 --> 01:09:39.730
就通过这个东西告诉他的

01:09:39.730 --> 01:09:41.450
这是这是响应行

01:09:41.450 --> 01:09:42.810
那么我们这里是终点说一下这个

01:09:43.730 --> 01:09:45.970
响应行里边这个协议不用说了啊

01:09:45.970 --> 01:09:46.770
第二就是这一部分

01:09:46.770 --> 01:09:48.570
就是状态码和状态文本

01:09:48.570 --> 01:09:50.290
一个数字和一个数字对应的单词

01:09:50.290 --> 01:09:51.410
这是这是标准化的

01:09:52.810 --> 01:09:53.890
那么这个东西在表述什么

01:09:53.890 --> 01:09:56.610
来表述服务器的到底是什么情况

01:09:56.610 --> 01:09:58.170
那么见证最多的啊

01:09:58.170 --> 01:10:00.250
这里边很多超级多

01:10:00.250 --> 01:10:01.970
我们这里说见证最多的

01:10:01.970 --> 01:10:02.570
两败ok

01:10:03.810 --> 01:10:05.050
一切正常啊

01:10:05.050 --> 01:10:06.170
你好我好大家好

01:10:06.170 --> 01:10:07.010
你不是要个网页吗

01:10:07.010 --> 01:10:07.890
我就给你个网页

01:10:07.890 --> 01:10:08.570
你不要介意是吗

01:10:08.570 --> 01:10:09.410
我就给你个解释

01:10:10.610 --> 01:10:11.850
你要图片我就给你个图片

01:10:11.850 --> 01:10:12.410
两败ok

01:10:14.750 --> 01:10:15.390
301

01:10:16.790 --> 01:10:18.870
职员已经被永久重力向了

01:10:18.870 --> 01:10:19.510
不好意思

01:10:19.510 --> 01:10:21.270
你要的东西我已经没有了

01:10:22.790 --> 01:10:23.750
麻烦麻烦

01:10:23.750 --> 01:10:25.430
我已经把它移到了另外一个地方了

01:10:25.430 --> 01:10:27.150
曾经有过啊

01:10:27.150 --> 01:10:29.510
我现在已经把它移到了另外一个地方了

01:10:29.510 --> 01:10:30.070
麻烦呢

01:10:30.070 --> 01:10:33.350
你请求另外一个地址重新去获得这个资源

01:10:33.350 --> 01:10:34.990
那么请求谁呢

01:10:34.990 --> 01:10:36.910
另外的地址我已经放到都可以心里边去了

01:10:38.190 --> 01:10:42.810
你看刚才我们就遇到这种情况了

01:10:42.810 --> 01:10:43.170
你看这

01:10:44.290 --> 01:10:46.090
得到是不是说一个302

01:10:46.090 --> 01:10:47.050
看没302

01:10:47.810 --> 01:10:49.610
哎我这刚刚说的是301

01:10:49.610 --> 01:10:50.970
302301是一样的意思啊

01:10:51.010 --> 01:10:51.970
都是被移动了

01:10:51.970 --> 01:10:53.770
一个是零时的一个是一个是永久的

01:10:53.770 --> 01:10:55.250
这个是永久的

01:10:55.250 --> 01:10:56.090
一个是零时的

01:10:56.090 --> 01:10:58.570
我我们一会说什么区别啊

01:10:58.570 --> 01:10:59.210
302

01:11:00.410 --> 01:11:03.450
放的啊表示找到了我的你的资源以前是有过

01:11:03.450 --> 01:11:04.570
但是现在没有了

01:11:04.570 --> 01:11:05.890
放的是不是过去时

01:11:05.890 --> 01:11:07.610
以前有现在没有了

01:11:07.610 --> 01:11:10.210
我现在已经把零时的移动到哪了

01:11:10.210 --> 01:11:10.850
移动到到这

01:11:12.290 --> 01:11:13.650
他在想应头里面

01:11:13.650 --> 01:11:15.450
你看 with sponsors

01:11:15.450 --> 01:11:17.810
想用头里面会加上一个location

01:11:19.650 --> 01:11:20.810
麻烦你浏览器

01:11:20.850 --> 01:11:22.410
你去请求这个地址

01:11:22.410 --> 01:11:24.330
我的资源引导到到这来了

01:11:24.330 --> 01:11:26.010
于是浏览器又发了一个请求

01:11:26.010 --> 01:11:27.850
你看是不是请求这个air.atml

01:11:28.970 --> 01:11:29.690
又发了一个请求

01:11:29.690 --> 01:11:31.610
是不看请求这个地址去了

01:11:31.610 --> 01:11:32.810
浏览器自动完成了啊

01:11:33.850 --> 01:11:35.130
于是我们看到这个页面

01:11:35.130 --> 01:11:35.930
一个错误页面

01:11:36.930 --> 01:11:37.290
没有意思

01:11:37.290 --> 01:11:38.170
一个错误页面哪来的

01:11:38.170 --> 01:11:39.530
我们迷失请求的是他

01:11:39.530 --> 01:11:40.890
为什么跑到这个地方来了

01:11:40.890 --> 01:11:43.170
随便服务器给我们发送一个302

01:11:43.170 --> 01:11:44.610
于是浏览器自动的一看到

01:11:44.610 --> 01:11:45.210
浏览器一看

01:11:45.210 --> 01:11:47.050
哦302我知道知道怎么处理

01:11:47.050 --> 01:11:49.090
浏览器自动的跑到请求这个地方去了

01:11:50.010 --> 01:11:51.130
这个地方说200ok

01:11:52.130 --> 01:11:53.490
就这么意思啊

01:11:53.490 --> 01:11:55.050
那么永久和临时有什么区别呢

01:11:55.050 --> 01:11:55.890
一个设计要被缓存

01:11:55.890 --> 01:11:57.970
一个无悲缓存就这么区别

01:11:57.970 --> 01:11:59.490
如果说你是返回了301

01:11:59.490 --> 01:12:00.530
浏览器一看

01:12:00.530 --> 01:12:01.810
永久重进一项了

01:12:03.330 --> 01:12:04.930
那我就给你缓存起来

01:12:04.930 --> 01:12:07.450
下一次你再去请求以前这个地址的时候

01:12:07.450 --> 01:12:08.610
我就不用问服务器了

01:12:08.610 --> 01:12:10.210
我直接给你换问这个地址

01:12:11.210 --> 01:12:12.330
那就是301

01:12:12.330 --> 01:12:14.330
302的浏览器是不缓存的

01:12:14.330 --> 01:12:15.570
每一次都要问一下服务器

01:12:15.570 --> 01:12:16.450
哎现在还在不在呀

01:12:16.450 --> 01:12:17.290
现在还在不在呀

01:12:17.290 --> 01:12:18.010
那就这么个意思

01:12:19.210 --> 01:12:21.770
304表示服务器说你的东西呢

01:12:22.730 --> 01:12:24.330
我不想给你啊

01:12:24.330 --> 01:12:25.330
你在请求我收到了

01:12:26.330 --> 01:12:28.570
这个资源我拿拿着比较费事

01:12:29.490 --> 01:12:30.410
我去拿这个资源标准

01:12:30.410 --> 01:12:31.490
你要请求一篇文章

01:12:32.250 --> 01:12:33.930
这个文章800点不去修改过

01:12:33.930 --> 01:12:35.570
都不会修改的

01:12:35.570 --> 01:12:37.890
你之前你就用之前的吧

01:12:37.890 --> 01:12:39.050
我这就不想给你了啊

01:12:39.050 --> 01:12:40.810
我之前给给过你的

01:12:40.810 --> 01:12:42.250
你不能老是问我要

01:12:42.250 --> 01:12:44.130
你之前的你就用你的缓存吧

01:12:44.970 --> 01:12:46.530
啊你那期说我没有缓存怎么办

01:12:46.570 --> 01:12:47.610
没有缓存关我什么事

01:12:47.610 --> 01:12:48.450
我不管

01:12:48.450 --> 01:12:49.690
那你为什么不缓存呢

01:12:49.690 --> 01:12:50.770
你那期都

01:12:50.770 --> 01:12:53.290
总之一开始都缓存又是一块知识的啊

01:12:53.290 --> 01:12:54.650
我们后边会讲那个

01:12:54.650 --> 01:12:56.410
里面会讲那个缓存

01:12:56.410 --> 01:12:58.210
到底是怎么一个交互过程啊

01:12:58.210 --> 01:13:01.770
总之他就是这个304只主要用来缓存的啊

01:13:01.770 --> 01:13:02.850
你那期不给你东西

01:13:02.850 --> 01:13:04.490
让你织取用缓存

01:13:04.490 --> 01:13:06.130
400就是battery quest

01:13:06.130 --> 01:13:07.250
就是说这个东西是什么呢

01:13:07.250 --> 01:13:08.450
你给我发了个啥完全看不懂

01:13:09.650 --> 01:13:11.090
这个一般情况是怎么情况的

01:13:11.090 --> 01:13:12.130
要么就是服务器写错了

01:13:13.370 --> 01:13:14.090
解析有问题

01:13:14.090 --> 01:13:15.570
一般是解析消息体的问题

01:13:17.090 --> 01:13:18.490
一般就是整个请求格式

01:13:18.490 --> 01:13:20.130
整个请求格式有问题

01:13:20.130 --> 01:13:21.410
这个请整个请求

01:13:21.410 --> 01:13:22.650
就请求了这个制服

01:13:22.650 --> 01:13:24.490
整个制服创里面有格式问题

01:13:24.490 --> 01:13:25.250
服务器完全看不懂

01:13:26.210 --> 01:13:29.090
就一般会发生反悔一个400battery quest

01:13:29.090 --> 01:13:31.330
403就是服务器不想给你

01:13:32.650 --> 01:13:33.770
你的权限不够

01:13:34.930 --> 01:13:38.010
你没有这个权力来访问我这个资源

01:13:38.010 --> 01:13:39.610
我就给你403 for beaten

01:13:39.610 --> 01:13:41.010
404就最常见了

01:13:41.010 --> 01:13:41.770
对吧

01:13:41.770 --> 01:13:43.610
服务器说资源不存在

01:13:43.610 --> 01:13:46.760
我问一下大家啊

01:13:46.760 --> 01:13:47.960
服务器说资源不存在

01:13:47.960 --> 01:13:51.500
是不是真的资源不存在

01:13:51.500 --> 01:13:52.780
有没有可能资源存在

01:13:52.780 --> 01:13:54.220
他告诉你资源不存在

01:13:54.220 --> 01:13:59.710
有没有这种可能

01:13:59.710 --> 01:14:02.660
有没有可能

01:14:02.660 --> 01:14:03.540
是不是完全有可能

01:14:03.540 --> 01:14:05.740
因为服务器程序是你自己写的

01:14:05.740 --> 01:14:07.420
服务器要响应什么响应吧

01:14:08.740 --> 01:14:11.020
完全是用你的代码来控制的

01:14:11.020 --> 01:14:12.620
将来你没学到豆子过后

01:14:12.620 --> 01:14:13.660
一句话就搞定了

01:14:13.660 --> 01:14:14.260
对吧

01:14:14.260 --> 01:14:15.580
服务器就写一句代码

01:14:15.580 --> 01:14:16.660
我管理资源什么存在

01:14:16.660 --> 01:14:17.340
我就给你一个

01:14:19.100 --> 01:14:20.220
404

01:14:20.220 --> 01:14:21.140
你打他怎么样呢

01:14:21.140 --> 01:14:22.900
你也不能怎么样对吧

01:14:22.900 --> 01:14:24.380
你也不知道他资源真的不存在

01:14:24.380 --> 01:14:25.340
还是不想给你

01:14:25.380 --> 01:14:26.660
他就给你反馈404

01:14:26.660 --> 01:14:28.180
就一句代码就搞定了

01:14:28.180 --> 01:14:30.100
这个服务器代码都可以是自己写的

01:14:30.100 --> 01:14:32.740
想到底要响应什么状态码

01:14:32.740 --> 01:14:33.980
500英特尔的时候呢

01:14:35.100 --> 01:14:36.460
这个一般表示服务器内不错

01:14:38.300 --> 01:14:40.700
就是服务器不知道什么原因爆错了

01:14:40.700 --> 01:14:41.820
进行不下去了

01:14:41.820 --> 01:14:43.780
那一般是服务器的问题

01:14:43.780 --> 01:14:45.300
一般是服务器的问题

01:14:45.300 --> 01:14:46.100
你收到这个东西呢

01:14:46.100 --> 01:14:47.500
一般就可以联系管理员了

01:14:47.500 --> 01:14:49.260
当然如果说你作为一个服务器开发者

01:14:50.380 --> 01:14:53.340
你是最不希望看到这个状态码的

01:14:53.540 --> 01:14:55.140
有些客户的反馈

01:14:55.140 --> 01:14:56.100
给你反馈给你

01:14:56.100 --> 01:14:57.900
他怎么看网易看到这个东西

01:14:59.140 --> 01:15:00.660
估计以后开始联业改八个了

01:15:02.180 --> 01:15:03.780
一般来说我们0到399

01:15:03.780 --> 01:15:04.940
之前的状态码都正常了

01:15:04.940 --> 01:15:05.940
其他都是不正常的

01:15:06.820 --> 01:15:08.140
好这是响应吗

01:15:08.140 --> 01:15:09.700
这个点准解释清楚了

01:15:09.700 --> 01:15:11.340
下面就是一大堆建筑队的

01:15:11.340 --> 01:15:12.860
建筑队里面我们就认识

01:15:13.900 --> 01:15:15.060
一个东西叫content type

01:15:15.820 --> 01:15:16.420
就认识这个

01:15:17.540 --> 01:15:18.980
是不是之前请求里面有

01:15:18.980 --> 01:15:20.500
请求里面content type什么意思

01:15:20.500 --> 01:15:23.060
表示我的请求体力表是什么格式

01:15:23.100 --> 01:15:25.180
那么响应头里面的content type什么意思

01:15:25.900 --> 01:15:27.620
自然而然就告诉流烂器

01:15:27.620 --> 01:15:28.860
或者是告诉其他客户端

01:15:30.460 --> 01:15:32.860
我的响应体是什么格式

01:15:33.820 --> 01:15:35.980
我的主要数据在响应体里面

01:15:35.980 --> 01:15:37.660
我在响应头里面告诉你

01:15:37.660 --> 01:15:39.660
表述一下我的响应体是什么格式

01:15:39.660 --> 01:15:41.140
你看这种表述

01:15:41.140 --> 01:15:42.780
我给力的是一个atm文件

01:15:42.780 --> 01:15:43.580
文档

01:15:43.580 --> 01:15:44.540
然后呢

01:15:44.540 --> 01:15:45.780
似乎编码是UTF-8

01:15:45.780 --> 01:15:46.260
你看一下吧

01:15:47.900 --> 01:15:48.620
我就放文百度

01:15:52.150 --> 01:15:52.550
从现在

01:15:56.310 --> 01:15:57.550
访问百度

01:15:57.550 --> 01:15:59.910
你看服务器给我的响应content type

01:15:59.910 --> 01:16:00.510
是不是个atm

01:16:01.670 --> 01:16:03.110
他为什么要告诉这个东西

01:16:03.110 --> 01:16:04.870
因为这个东西的客户端要看的

01:16:06.070 --> 01:16:07.590
比方说这个流烂器就是个客户端

01:16:07.590 --> 01:16:08.470
流烂器一看

01:16:08.470 --> 01:16:11.030
服务器给我的是一个什么atm文档

01:16:11.030 --> 01:16:11.750
那行了

01:16:11.750 --> 01:16:13.630
我甭管这个响应体是啥

01:16:13.630 --> 01:16:17.350
我一定把它按照文档来渲染

01:16:17.350 --> 01:16:19.110
我一一把它作为一个atm文件来渲染

01:16:19.990 --> 01:16:21.310
就这么简单

01:16:21.310 --> 01:16:24.950
你看这个图片

01:16:24.950 --> 01:16:27.390
图片服务器给他那个content type是啥

01:16:27.390 --> 01:16:28.430
1米级片级

01:16:29.550 --> 01:16:30.110
于是呢

01:16:30.110 --> 01:16:30.910
流烂器一看

01:16:30.910 --> 01:16:31.270
哦

01:16:31.270 --> 01:16:33.830
这个响应的类型是1米级片级

01:16:33.830 --> 01:16:34.310
于是呢

01:16:34.310 --> 01:16:35.590
我会把它的响应体

01:16:36.590 --> 01:16:37.790
作为图片来渲染

01:16:38.790 --> 01:16:39.910
没意思吧

01:16:39.910 --> 01:16:42.310
这服务器通过这个字端来告诉流烂器

01:16:42.310 --> 01:16:44.030
告诉或者是其他客户端

01:16:45.030 --> 01:16:46.070
我给力的是什么东西

01:16:47.950 --> 01:16:50.030
这是响应头

01:16:50.030 --> 01:16:51.350
还有响应头里面还有一个server

01:16:51.350 --> 01:16:53.470
有些服务器给你响应这个server

01:16:53.470 --> 01:16:54.230
有些服务器没有

01:16:54.230 --> 01:16:55.830
我看一下百度有没有

01:16:55.830 --> 01:16:56.270
百度有

01:16:57.470 --> 01:16:58.550
百度的服务器还不一样

01:16:58.550 --> 01:17:01.150
响应图片的服务器是一个gsp3

01:17:01.150 --> 01:17:03.190
当这只是一个制服串

01:17:03.190 --> 01:17:04.510
服务器完全可以骗你

01:17:04.510 --> 01:17:05.430
明明不是这个服务器

01:17:05.430 --> 01:17:07.030
他给你用这个服务器名字

01:17:07.030 --> 01:17:09.310
他也可以完全构建出一个自定义的制服串

01:17:09.310 --> 01:17:10.670
你看这个地方的server

01:17:12.070 --> 01:17:13.350
在百度自己写的服务器

01:17:14.550 --> 01:17:15.510
那他自己取个名字

01:17:15.510 --> 01:17:16.430
随便取个名字

01:17:16.430 --> 01:17:18.230
这只是一个字段而已

01:17:18.230 --> 01:17:19.230
服务器想这么给你响应

01:17:19.230 --> 01:17:20.110
就怎么写响应

01:17:20.110 --> 01:17:21.830
以后要你没学到服务器过后了

01:17:21.830 --> 01:17:23.590
服务器一句大法就搞定了

01:17:23.590 --> 01:17:23.990
set

01:17:25.590 --> 01:17:26.030
server

01:17:27.550 --> 01:17:28.390
持

01:17:28.390 --> 01:17:29.710
随便写

01:17:29.710 --> 01:17:31.230
想给你响应什么写

01:17:31.230 --> 01:17:32.510
server就给你响应什么

01:17:32.510 --> 01:17:33.870
这是完全是服务器自己订的

01:17:35.950 --> 01:17:37.790
那么这是这个东西

01:17:37.790 --> 01:17:38.790
最后就是响应题

01:17:38.790 --> 01:17:39.390
响应题是什么

01:17:39.390 --> 01:17:40.510
就是消息的真文

01:17:40.510 --> 01:17:41.270
这个没什么好说的

01:17:41.270 --> 01:17:42.510
你看一下

01:17:42.510 --> 01:17:43.750
看一下这边

01:17:43.750 --> 01:17:44.830
访问百度的时候

01:17:44.830 --> 01:17:46.550
响应题是什么呢

01:17:46.550 --> 01:17:48.150
捨不搜集

01:17:48.150 --> 01:17:49.710
一个A.T.B文档

01:17:49.710 --> 01:17:51.470
这就是消息的真文

01:17:51.470 --> 01:17:52.870
response

01:17:52.870 --> 01:17:53.350
响应题

01:17:54.630 --> 01:17:55.070
对吧

01:17:55.070 --> 01:17:56.030
这么长的制服圈

01:17:56.030 --> 01:17:57.590
瀏覽器

01:17:57.590 --> 01:17:58.910
他得知道是什么格式

01:17:58.910 --> 01:18:00.270
怎么知道是什么格式

01:18:00.270 --> 01:18:01.070
他就靠这个content

01:18:02.350 --> 01:18:03.270
你看到是A.T.B

01:18:03.270 --> 01:18:03.670
那行

01:18:03.670 --> 01:18:04.190
响应题呢

01:18:04.190 --> 01:18:05.190
我就开始宣战

01:18:05.190 --> 01:18:07.550
我就把他按照A.T.B来宣战

01:18:07.550 --> 01:18:09.110
那我们现在走一遍

01:18:09.110 --> 01:18:09.550
比方说

01:18:10.790 --> 01:18:12.230
我这个B点

01:18:12.230 --> 01:18:13.590
这个tester点A.T.B

01:18:13.590 --> 01:18:14.950
就这个A.T.B

01:18:14.950 --> 01:18:20.120
我就来一个A.T.B

01:18:20.120 --> 01:18:21.760
有一个A元素

01:18:21.760 --> 01:18:26.830
验接到什么B.T.B

01:18:26.830 --> 01:18:30.180
然后再搞一张图片

01:18:30.180 --> 01:18:31.140
来一张

01:18:31.140 --> 01:18:34.960
华士奇

01:18:34.960 --> 01:18:38.640
华士奇为我们学习软件开发

01:18:38.640 --> 01:18:41.200
做出了不可灭磨灭的贡献

01:18:41.200 --> 01:18:42.920
我猜课里边经常用到它

01:18:44.640 --> 01:18:45.320
我的地址呢

01:18:46.200 --> 01:18:50.060
复制图片地址

01:18:50.060 --> 01:18:51.820
这个图片啊

01:18:51.820 --> 01:18:52.740
然后再来个CSS

01:18:54.180 --> 01:18:55.060
A.CSS

01:18:56.020 --> 01:18:57.460
About it

01:18:57.460 --> 01:18:58.020
Beguant

01:19:00.820 --> 01:19:01.060
好

01:19:01.060 --> 01:19:02.860
然后再引用一下CSS

01:19:02.900 --> 01:19:06.780
我们看一下整个过程是什么样子的

01:19:06.780 --> 01:19:07.580
CSS

01:19:07.580 --> 01:19:07.700
好

01:19:07.700 --> 01:19:13.390
运行看一下

01:19:13.390 --> 01:19:14.030
它整个过程

01:19:15.750 --> 01:19:16.110
刷新

01:19:17.510 --> 01:19:18.190
第一个不用看

01:19:18.190 --> 01:19:19.550
第一个是一个插线给我们搞出来的

01:19:19.550 --> 01:19:20.830
这个DF时候的插线给我们搞出来的

01:19:20.830 --> 01:19:21.150
不用看

01:19:22.470 --> 01:19:24.990
首先我们在浏览器里边相当于说

01:19:24.990 --> 01:19:25.750
请求这个地址

01:19:25.750 --> 01:19:25.990
对吧

01:19:25.990 --> 01:19:27.270
输入了这个地址一按回车

01:19:28.310 --> 01:19:29.550
然后呢

01:19:29.550 --> 01:19:31.390
自然而然浏览器会去请求啥呀

01:19:31.390 --> 01:19:33.870
谁去请求这个A.T.B

01:19:33.870 --> 01:19:34.230
对吧

01:19:34.230 --> 01:19:35.190
会发生一个请求

01:19:35.190 --> 01:19:35.630
你看

01:19:35.630 --> 01:19:37.470
是不是请求这个地址

01:19:37.470 --> 01:19:38.390
而这个地址会到了

01:19:38.430 --> 01:19:39.710
这个请求会到了谁

01:19:39.710 --> 01:19:42.110
到了这个地址12的这个服务器

01:19:42.110 --> 01:19:43.910
那么这个服务器做了什么事呢

01:19:43.910 --> 01:19:45.470
他做的事情很简单

01:19:45.470 --> 01:19:48.550
他也把这个A.T.B文件内容读出来

01:19:48.550 --> 01:19:49.710
然后扔给我

01:19:49.710 --> 01:19:51.230
于是他就响应了

01:19:51.230 --> 01:19:52.350
那个响应是谁响应的

01:19:52.350 --> 01:19:53.950
是这个地址12响应的

01:19:53.950 --> 01:19:54.750
啊

01:19:54.750 --> 01:19:58.880
他又会把这个文件内容扔给我

01:19:58.880 --> 01:19:59.160
好

01:19:59.160 --> 01:20:00.680
那么这个响应过后呢

01:20:00.680 --> 01:20:02.280
你看他就给我们响应体

01:20:02.280 --> 01:20:04.280
响应内容是TexA

01:20:04.280 --> 01:20:05.560
响应体的是这个

01:20:05.560 --> 01:20:07.320
A流浪器看你给我的是一个页面啊

01:20:07.320 --> 01:20:07.920
那得了

01:20:07.920 --> 01:20:09.160
我开始渲染呗

01:20:09.240 --> 01:20:10.640
于是流浪器开始渲染

01:20:10.640 --> 01:20:11.240
对吧

01:20:11.240 --> 01:20:13.000
生成A.T.B元素

01:20:13.000 --> 01:20:14.240
黑的黑的渲染

01:20:14.240 --> 01:20:14.600
哎

01:20:14.600 --> 01:20:15.520
流浪器看到这个玩意了

01:20:16.720 --> 01:20:17.680
流浪器一看

01:20:17.680 --> 01:20:19.360
这是个链接啊

01:20:19.360 --> 01:20:20.160
正常链接到谁

01:20:20.160 --> 01:20:21.760
链接到A.CSS

01:20:21.760 --> 01:20:23.320
于是流浪器看到这

01:20:23.320 --> 01:20:25.280
马上又发出了一个新的请求

01:20:25.280 --> 01:20:29.150
去请求A.CSS

01:20:29.150 --> 01:20:29.790
请求谁

01:20:29.790 --> 01:20:31.030
请求Leave Server

01:20:31.030 --> 01:20:32.030
Leave Server一看

01:20:32.030 --> 01:20:33.030
你要请求这个电容器

01:20:33.030 --> 01:20:34.270
我一看我这个文件有啊

01:20:34.270 --> 01:20:35.230
我就给你呗

01:20:35.230 --> 01:20:35.430
对吧

01:20:35.430 --> 01:20:37.670
这是Leave Server一个程序写好的

01:20:37.670 --> 01:20:38.430
你们将来如果说

01:20:38.430 --> 01:20:39.510
自己写服务器程序的话

01:20:39.510 --> 01:20:40.470
完全可以说

01:20:40.470 --> 01:20:41.030
我有这个文件

01:20:41.030 --> 01:20:42.150
我就是不给你

01:20:42.150 --> 01:20:45.910
这是别人写好的

01:20:45.910 --> 01:20:47.390
于是他把文件读出来

01:20:47.390 --> 01:20:47.910
读出来过后

01:20:47.910 --> 01:20:48.710
于扔给流浪器

01:20:48.710 --> 01:20:49.430
流浪器一看

01:20:49.430 --> 01:20:50.190
他给我的是咋样

01:20:50.190 --> 01:20:53.110
给我的是一个Texas CSS

01:20:53.110 --> 01:20:54.670
那就按照一样式宣传

01:20:54.670 --> 01:20:56.950
一宣传跟一面说变黑了

01:20:56.950 --> 01:20:57.270
对吧

01:20:58.870 --> 01:21:00.230
那么读到这个CSS过后

01:21:00.230 --> 01:21:02.830
又回到之前的A.T.B还没解析完

01:21:02.830 --> 01:21:03.510
继续解析

01:21:03.510 --> 01:21:04.750
又遇到一张图片

01:21:04.750 --> 01:21:05.870
这不是又是个地址吗

01:21:05.870 --> 01:21:07.270
又是个外部链接

01:21:07.270 --> 01:21:08.590
是个地址对不对

01:21:08.590 --> 01:21:08.750
好

01:21:08.750 --> 01:21:09.390
那行咧

01:21:09.390 --> 01:21:10.670
咱们去请求图片呗

01:21:10.670 --> 01:21:12.550
于是他请求了这个东西

01:21:12.550 --> 01:21:12.950
这是个啥

01:21:12.950 --> 01:21:13.950
这是个图片

01:21:13.950 --> 01:21:15.670
Respa是二进制数据

01:21:15.670 --> 01:21:16.270
二进制数据

01:21:16.270 --> 01:21:17.670
他没法显示的

01:21:17.670 --> 01:21:18.870
他可以有个preview

01:21:18.870 --> 01:21:19.870
就是个图片

01:21:19.870 --> 01:21:20.510
流浪器一看

01:21:20.510 --> 01:21:23.190
你这个内情是image接png

01:21:23.190 --> 01:21:26.550
我一定做成图片显示呗

01:21:26.550 --> 01:21:28.430
然后流浪器继续宣传

01:21:28.430 --> 01:21:29.550
继续宣传一个页面

01:21:29.550 --> 01:21:30.510
没了对吧

01:21:30.510 --> 01:21:32.550
A.T.B还说他不会加载地点

01:21:32.550 --> 01:21:32.790
一天没有

01:21:32.790 --> 01:21:33.670
他不会加载

01:21:33.670 --> 01:21:34.750
这个时候不会请求

01:21:34.750 --> 01:21:35.870
只有你点了

01:21:35.870 --> 01:21:36.630
超链接过后

01:21:36.630 --> 01:21:38.070
才才会去请求

01:21:38.110 --> 01:21:40.190
没有点他不会去请求的

01:21:40.190 --> 01:21:41.830
就是流浪器的完整解析过程

01:21:41.830 --> 01:21:42.670
所以说

01:21:42.670 --> 01:21:44.270
看上去我只是访问了一个页面

01:21:44.270 --> 01:21:46.150
实际上他发出了很多个请求

01:21:46.150 --> 01:21:46.630
页面

01:21:46.630 --> 01:21:47.350
CSS

01:21:47.350 --> 01:21:48.350
如果他还要介绍的话

01:21:48.350 --> 01:21:51.070
还会去由介绍来支修

01:21:51.070 --> 01:21:53.030
那么我们今年的一道面试题

01:21:53.030 --> 01:21:55.390
流浪器地址南东出了一个立面地址

01:21:55.390 --> 01:21:59.420
按下回头键之后会发生什么事

01:21:59.420 --> 01:22:01.260
你可以自寻想看一下

01:22:01.260 --> 01:22:02.940
我就不给大家一一来练了

01:22:02.940 --> 01:22:03.940
不用一一来练了

01:22:03.940 --> 01:22:06.460
听完这里已经能看得懂了

01:22:06.460 --> 01:22:08.780
当然以后你们学校更多的支持过后

01:22:08.860 --> 01:22:10.740
你还可以回答的更丰富

01:22:10.740 --> 01:22:12.580
你会回答出十几个步骤

01:22:12.580 --> 01:22:16.380
二十几个步骤都可以

01:22:16.380 --> 01:22:16.620
好

01:22:16.620 --> 01:22:19.260
最后

01:22:19.260 --> 01:22:19.900
阿迦克斯

01:22:21.860 --> 01:22:23.620
我只需要花五分钟时间就够了

01:22:25.140 --> 01:22:26.700
也就一笔协议你都搞定了

01:22:27.900 --> 01:22:29.020
阿迦克斯

01:22:29.020 --> 01:22:31.500
你会发现是谁简单的一件事

01:22:31.500 --> 01:22:32.340
阿迦克斯什么意思

01:22:32.340 --> 01:22:35.260
就是流浪器给我们提供了一个构造函数

01:22:35.260 --> 01:22:35.900
一个API

01:22:37.100 --> 01:22:38.620
通过这个构造函数

01:22:38.620 --> 01:22:40.700
我们不用像以前传统的那种

01:22:40.700 --> 01:22:43.580
非要一定要写个风文表达才能发送请求了

01:22:43.580 --> 01:22:47.060
一定要在流浪器地址里边去输入一个东西的发送请求了

01:22:47.060 --> 01:22:48.780
我们在GS代码里边

01:22:48.780 --> 01:22:51.020
就已经拥有了发送请求的能力了

01:22:52.540 --> 01:22:59.570
这个就已经有二十多年了

01:22:59.570 --> 01:23:00.010
看一下

01:23:01.010 --> 01:23:02.650
直接用GS代码的发送请求

01:23:03.650 --> 01:23:05.010
不是流浪器天生蛋

01:23:05.010 --> 01:23:07.570
不直接用流浪器的东西了

01:23:07.570 --> 01:23:09.410
当然GS也是流浪器给我们提供的

01:23:09.410 --> 01:23:10.210
那怎么来发送请求了

01:23:10.210 --> 01:23:11.090
剩下的就是API了

01:23:11.090 --> 01:23:12.410
API是主意简单的

01:23:12.410 --> 01:23:13.570
极其简单

01:23:13.610 --> 01:23:15.370
当然一副字一下就看明白了

01:23:16.970 --> 01:23:18.770
首先构建一个对象

01:23:18.770 --> 01:23:20.970
我现在这里没去考虑兼容性了

01:23:20.970 --> 01:23:21.250
以后呢

01:23:21.250 --> 01:23:23.410
你们学的GSATM5之后呢

01:23:23.410 --> 01:23:24.410
还有一个废写一篇

01:23:24.410 --> 01:23:25.530
也是在做同样的事情的

01:23:26.450 --> 01:23:27.650
构建一个对象

01:23:27.650 --> 01:23:28.490
这个对象要干嘛的

01:23:28.490 --> 01:23:32.010
发送请求的

01:23:32.010 --> 01:23:32.530
然后

01:23:34.010 --> 01:23:35.730
它有一个回教函数

01:23:35.730 --> 01:23:36.530
相对于是事件

01:23:37.490 --> 01:23:39.050
状态变化的时候

01:23:39.050 --> 01:23:40.290
它会运行这个函数

01:23:40.290 --> 01:23:43.570
以后我们说会说什么时候

01:23:43.570 --> 01:23:44.730
二十多年了

01:23:44.770 --> 01:23:46.450
以前最早IE出来的

01:23:46.450 --> 01:23:47.410
九七年就出来了

01:23:47.410 --> 01:23:54.610
就八年还是九九年啊

01:23:54.610 --> 01:23:55.810
都不知道十多年嘛

01:23:55.810 --> 01:23:57.330
这个函数有没有一或再说啊

01:23:57.330 --> 01:23:57.890
什么时候运行

01:23:59.610 --> 01:24:01.290
XHR

01:24:01.290 --> 01:24:02.610
这个地方东西是什么

01:24:02.610 --> 01:24:03.970
设置请求头

01:24:05.370 --> 01:24:06.690
你请求头是不是可以随便设置

01:24:06.690 --> 01:24:07.890
我们随便来一个吧

01:24:07.890 --> 01:24:09.770
SetsRequestHeader

01:24:09.770 --> 01:24:10.330
A

01:24:10.330 --> 01:24:11.050
等于1

01:24:11.050 --> 01:24:13.490
随便下写一些请求头都可以

01:24:13.490 --> 01:24:14.770
关键是服务系只要认

01:24:14.770 --> 01:24:19.330
只要认

01:24:19.330 --> 01:24:21.970
怪不得Front不大用了

01:24:21.970 --> 01:24:23.250
什么叫Front不大用了

01:24:24.730 --> 01:24:25.370
Foom

01:24:25.370 --> 01:24:26.170
你说的是foom

01:24:28.690 --> 01:24:29.210
是啊

01:24:29.210 --> 01:24:31.570
foom现在谁还在用foom

01:24:31.570 --> 01:24:33.450
还是有一些传统的网站在用啊

01:24:33.450 --> 01:24:34.170
用foom的话

01:24:34.170 --> 01:24:36.290
一般来说就不是前后端分地的

01:24:36.290 --> 01:24:37.690
前后端就很难分地的

01:24:37.690 --> 01:24:39.810
现在我们以后的公司里边做开发的话

01:24:39.810 --> 01:24:41.530
一般都是前后端分地的项目

01:24:41.530 --> 01:24:42.410
前后端分地的话

01:24:42.410 --> 01:24:45.970
请求你要全部负责的

01:24:45.970 --> 01:24:46.250
好

01:24:46.250 --> 01:24:46.850
然后呢

01:24:46.850 --> 01:24:47.970
这是设置请求头

01:24:47.970 --> 01:24:49.250
没问题吧

01:24:49.250 --> 01:24:50.690
就把随便设置就行了

01:24:50.690 --> 01:24:52.050
然后这是open

01:24:52.050 --> 01:24:52.610
什么意思

01:24:52.650 --> 01:24:54.930
配置请求的方法

01:24:54.930 --> 01:24:57.650
比方说又发生一个get请求

01:24:57.650 --> 01:24:58.690
请求什么地址呢

01:24:58.690 --> 01:24:59.690
我就随便请求个地址吧

01:24:59.690 --> 01:25:01.250
我这里给他提供了一个地址啊

01:25:01.250 --> 01:25:03.410
这是我自己的福起

01:25:03.410 --> 01:25:04.410
复制一下

01:25:04.410 --> 01:25:05.250
这个这个地址呢

01:25:05.250 --> 01:25:06.490
是来提供

01:25:06.490 --> 01:25:08.410
得到很多的电影数据的

01:25:08.410 --> 01:25:10.530
得到很多电影数据

01:25:10.530 --> 01:25:12.770
get请求请求这个地址

01:25:12.770 --> 01:25:14.290
配置好了请求头

01:25:14.290 --> 01:25:14.570
对吧

01:25:14.570 --> 01:25:16.570
有两个请求头给他加了两个一个a

01:25:16.570 --> 01:25:17.330
一个这个玩意儿

01:25:19.850 --> 01:25:20.730
你以后就知道了啊

01:25:20.730 --> 01:25:22.090
就是一些电影数据

01:25:22.090 --> 01:25:23.130
他不是视频啊

01:25:23.130 --> 01:25:24.290
是电影数据

01:25:24.290 --> 01:25:26.930
然后新的就是发送请求题

01:25:26.930 --> 01:25:28.250
get请求没有请求题

01:25:28.250 --> 01:25:29.410
没有请求举发送的号码

01:25:32.050 --> 01:25:33.410
这不够钱好一个请求

01:25:33.410 --> 01:25:34.970
那么再说回来

01:25:34.970 --> 01:25:37.130
这个函数什么时候执行

01:25:37.130 --> 01:25:38.570
因为我们知道请求要传输

01:25:38.570 --> 01:25:41.450
要需要很多时间对吧

01:25:41.450 --> 01:25:42.330
那么这个函数呢

01:25:42.330 --> 01:25:44.610
他只要状态发生变化的时候

01:25:44.610 --> 01:25:46.010
他就会运行这个函数

01:25:46.010 --> 01:25:47.170
那么有哪些状态呢

01:25:47.170 --> 01:25:49.370
他这里规定的有这么无动状态啊

01:25:49.370 --> 01:25:51.290
一个是刚刚创建好的对象过后

01:25:51.290 --> 01:25:52.690
他就会运行啊

01:25:52.690 --> 01:25:53.770
但是还没有配置请求

01:25:53.770 --> 01:25:55.650
就是还没有调用open

01:25:55.650 --> 01:25:58.130
创建好的对象还没有调用open

01:25:58.130 --> 01:25:58.850
那么这个时候呢

01:25:58.850 --> 01:26:00.450
他会执行一次这个函数

01:26:00.450 --> 01:26:01.450
执行一次这个函数

01:26:03.050 --> 01:26:04.010
这个函数的过程中

01:26:04.010 --> 01:26:05.290
我们可以通过这个字段

01:26:05.290 --> 01:26:06.650
来得到他的状态信息

01:26:06.650 --> 01:26:09.370
他等于零的时候就表示这个状态

01:26:09.370 --> 01:26:10.690
他等于一的时候呢

01:26:10.690 --> 01:26:12.010
就是open方法已经被调用了

01:26:12.010 --> 01:26:13.530
但是还没有发送出去

01:26:13.530 --> 01:26:15.290
请求还没有发出去

01:26:15.290 --> 01:26:16.050
等于二个状态

01:26:16.050 --> 01:26:17.690
就是请求已经发出去了

01:26:17.690 --> 01:26:18.570
但是呢

01:26:18.570 --> 01:26:20.050
还没有收到服务器的消息

01:26:20.090 --> 01:26:21.690
服务器那边还没给我没有给我响应

01:26:23.250 --> 01:26:24.930
等于三的时候呢

01:26:24.930 --> 01:26:26.490
服务器已经给我响应了

01:26:26.490 --> 01:26:27.450
我正在接收

01:26:27.450 --> 01:26:28.530
因为接收服务器的响应

01:26:28.530 --> 01:26:29.210
需要断过程

01:26:29.210 --> 01:26:29.450
对吧

01:26:29.450 --> 01:26:31.770
服务器的响应数据有可能会很多

01:26:31.770 --> 01:26:33.250
而等于四的时候呢

01:26:33.250 --> 01:26:35.610
服务器的响应全部完成

01:26:35.610 --> 01:26:37.090
我这边全部接收完了

01:26:37.090 --> 01:26:38.810
所以我们这里一般用到的就是

01:26:38.810 --> 01:26:40.410
他等于四的情况

01:26:40.410 --> 01:26:40.730
因此呢

01:26:40.730 --> 01:26:42.250
我们这里判断一下啊

01:26:42.250 --> 01:26:46.050
如果说xhr ready state等于四

01:26:46.050 --> 01:26:48.330
说明什么服务器那边响应了

01:26:48.330 --> 01:26:50.050
我所有东西全部收到了

01:26:50.050 --> 01:26:52.170
那我怎么来达到服务器的东西呢

01:26:52.170 --> 01:26:53.250
就通过另外一个

01:26:55.090 --> 01:26:56.930
属性的response text

01:26:58.330 --> 01:27:00.130
通过他就可以拿到服务器的东西

01:27:00.130 --> 01:27:01.210
就这么简单

01:27:01.210 --> 01:27:13.900
你看我把这个运行箱

01:27:13.900 --> 01:27:14.100
哦

01:27:14.100 --> 01:27:15.780
set header必须要在open之后啊

01:27:15.780 --> 01:27:17.300
必须要在open之后才能set header

01:27:22.930 --> 01:27:23.930
为什么没达到结果

01:27:25.010 --> 01:27:26.690
ready states等于

01:27:26.690 --> 01:27:27.450
我说说一下啊

01:27:27.490 --> 01:27:29.650
和hr ready state

01:27:30.730 --> 01:27:31.410
ready state

01:27:32.610 --> 01:27:32.970
对了

01:27:34.370 --> 01:27:35.490
哦对了对了

01:27:35.490 --> 01:27:36.170
把存在啊

01:27:37.210 --> 01:27:37.530
刷新

01:27:38.850 --> 01:27:40.210
这是服务器给我的响应结果

01:27:40.210 --> 01:27:40.890
那么我们看一下

01:27:40.890 --> 01:27:41.570
network啊

01:27:41.570 --> 01:27:42.530
看一下网络

01:27:42.530 --> 01:27:43.770
网络这边

01:27:43.770 --> 01:27:45.130
我们请求的是谁

01:27:45.130 --> 01:27:46.130
请求的是这个movey

01:27:46.130 --> 01:27:47.050
对不对

01:27:47.050 --> 01:27:48.090
啊这个movey

01:27:48.090 --> 01:27:48.570
这个movey

01:27:48.570 --> 01:27:49.570
然后呢

01:27:49.570 --> 01:27:51.450
我们请求request里边一看

01:27:51.450 --> 01:27:52.450
是不是加了一个请求头

01:27:52.450 --> 01:27:53.370
也等于一

01:27:53.370 --> 01:27:54.330
有他用没咋用啊

01:27:54.330 --> 01:27:55.250
反正服务器不认的

01:27:55.250 --> 01:27:56.170
我这个随便加

01:27:56.170 --> 01:27:57.130
服务器反对不帅我

01:27:58.610 --> 01:27:59.370
然后给他加了一个什么

01:27:59.370 --> 01:27:59.970
content type的

01:27:59.970 --> 01:28:01.450
有ipk 请节省

01:28:01.450 --> 01:28:02.050
什么意思呢

01:28:02.050 --> 01:28:02.770
也没什么意思

01:28:02.770 --> 01:28:02.930
对吧

01:28:02.930 --> 01:28:04.090
我这里没有请求题

01:28:04.090 --> 01:28:05.130
加这东西也没什么用

01:28:05.130 --> 01:28:06.530
服务器看的不会看

01:28:06.530 --> 01:28:07.610
说这两行等于百价的

01:28:07.610 --> 01:28:08.410
没没什么意义

01:28:09.730 --> 01:28:10.170
就发生了

01:28:10.170 --> 01:28:11.450
get这请求就行了

01:28:11.450 --> 01:28:11.650
对吧

01:28:11.650 --> 01:28:13.690
服务器给我们的什么响应结果呢

01:28:13.690 --> 01:28:15.250
给了我们这么一个响应结果

01:28:16.050 --> 01:28:16.970
看呗

01:28:16.970 --> 01:28:17.370
这里

01:28:18.290 --> 01:28:19.010
这是个什么格式

01:28:19.010 --> 01:28:20.930
就是个节省格式啊

01:28:20.930 --> 01:28:21.970
那么我们这拿到的是什么

01:28:21.970 --> 01:28:23.130
拿到的是个制服圈

01:28:23.130 --> 01:28:23.650
我们这里呢

01:28:23.650 --> 01:28:25.090
可以用这么一个函数啊

01:28:25.090 --> 01:28:26.730
叫节省pulse

01:28:26.730 --> 01:28:29.290
把一个制服圈转换成为

01:28:29.290 --> 01:28:29.970
介石对象

01:28:31.450 --> 01:28:32.450
什么意思

01:28:32.450 --> 01:28:35.930
将节省格式的制服圈

01:28:35.930 --> 01:28:39.970
转换为介石对象

01:28:42.900 --> 01:28:43.420
movice

01:28:45.420 --> 01:28:47.700
到这其实已经跟这个请求没什么关系了

01:28:47.700 --> 01:28:49.140
到这已经拿到结果了

01:28:49.140 --> 01:28:49.460
对吧

01:28:49.460 --> 01:28:50.580
这个请求意义已经完成了

01:28:50.580 --> 01:28:51.580
请求发出去了

01:28:51.580 --> 01:28:53.780
然后又从服务器拿到响应结果了

01:28:53.780 --> 01:28:55.300
是不是已经完成了

01:28:55.300 --> 01:28:56.140
已经完成了

01:28:56.140 --> 01:28:57.380
后续就是后续处理的

01:28:57.380 --> 01:28:58.220
对不对

01:28:58.220 --> 01:29:00.140
后续处理把什么制服说转成这个

01:29:00.140 --> 01:29:01.220
然后把它拿到输主

01:29:01.220 --> 01:29:02.780
拿到拿到这个对象

01:29:02.780 --> 01:29:04.500
拿对象过后又干嘛

01:29:04.500 --> 01:29:05.620
是不可以自行处理的

01:29:05.620 --> 01:29:06.540
你看现在拿到对象了

01:29:06.540 --> 01:29:07.100
对吧

01:29:07.100 --> 01:29:08.140
扣的表您

01:29:08.140 --> 01:29:09.300
我们这里约定好的啊

01:29:09.300 --> 01:29:10.340
我跟服务器约定好的

01:29:10.340 --> 01:29:12.220
扣的为您表示服务器那边没有错误

01:29:12.220 --> 01:29:12.980
没有错误

01:29:12.980 --> 01:29:14.020
一些正常

01:29:14.020 --> 01:29:14.460
然后呢

01:29:14.460 --> 01:29:17.540
靠此人26表示我的电影数据有26个

01:29:17.540 --> 01:29:19.180
目前给了你第一页啊

01:29:19.180 --> 01:29:19.780
第一页呢

01:29:19.780 --> 01:29:21.060
有10个

01:29:21.060 --> 01:29:21.780
有10个电影

01:29:23.820 --> 01:29:24.740
有10条电影

01:29:24.740 --> 01:29:26.060
电影的一些信息

01:29:27.060 --> 01:29:28.820
那没得对

01:29:28.820 --> 01:29:29.860
就是数数吧

01:29:29.860 --> 01:29:30.420
那么后

01:29:30.420 --> 01:29:31.700
这些东西跟服务器没关系的

01:29:31.700 --> 01:29:35.040
就是已经是后续处理了

01:29:35.040 --> 01:29:36.160
那么这个时候拿到输主过后

01:29:36.160 --> 01:29:36.680
你要干嘛

01:29:36.680 --> 01:29:37.360
随便你

01:29:37.360 --> 01:29:39.680
表面上有个UL元素

01:29:39.680 --> 01:29:41.600
就随便你玩了啊

01:29:41.600 --> 01:29:43.920
id movies嘛

01:29:43.920 --> 01:29:45.040
那么这里

01:29:45.040 --> 01:29:48.040
document is elements by id movies

01:29:49.680 --> 01:29:51.280
UL

01:29:51.280 --> 01:29:52.480
然后干嘛呢

01:29:52.480 --> 01:29:54.760
然后就循环呗

01:29:54.760 --> 01:29:56.440
循环i等于0

01:29:56.480 --> 01:29:57.880
i小于movies

01:29:57.880 --> 01:30:01.160
i加加

01:30:01.160 --> 01:30:03.080
每次循环是不是拿到一个电影

01:30:03.080 --> 01:30:03.880
movies

01:30:03.880 --> 01:30:05.080
i

01:30:05.080 --> 01:30:06.440
拿到电影是不是可以生成一个

01:30:06.440 --> 01:30:07.520
create elements

01:30:07.520 --> 01:30:08.880
Li

01:30:08.880 --> 01:30:09.840
对不对

01:30:09.840 --> 01:30:12.080
我们首先把那个UL清空嘛

01:30:12.080 --> 01:30:12.960
或者拿来清空了

01:30:12.960 --> 01:30:13.480
就这样嘛

01:30:13.480 --> 01:30:14.440
东西意识就行了

01:30:14.440 --> 01:30:15.200
生成的Li

01:30:15.200 --> 01:30:17.200
把Li的什么inner text

01:30:17.200 --> 01:30:18.160
设置为什么

01:30:18.160 --> 01:30:20.200
电影的什么数据

01:30:20.200 --> 01:30:20.680
电影的

01:30:22.680 --> 01:30:24.240
name

01:30:24.240 --> 01:30:25.440
m.name

01:30:25.440 --> 01:30:27.440
他把Li加到这个UL里面去

01:30:27.440 --> 01:30:30.240
apply the challenge

01:30:30.240 --> 01:30:32.480
后边的处理跟服务性没有什么关系

01:30:32.480 --> 01:30:33.960
跟请求响应没关系了啊

01:30:33.960 --> 01:30:35.880
就纯粹的介绍代码了

01:30:35.880 --> 01:30:36.160
刷新

01:30:37.680 --> 01:30:40.200
数据出来

01:30:40.200 --> 01:30:41.640
我是没包出来

01:30:41.640 --> 01:30:43.160
看一下啊

01:30:43.160 --> 01:30:46.300
movies

01:30:46.300 --> 01:30:47.940
没问题啊

01:30:47.940 --> 01:30:49.420
create li

01:30:49.420 --> 01:30:50.420
我看一下啊

01:30:50.420 --> 01:30:53.640
li出来没有

01:30:53.640 --> 01:30:54.000
UL

01:30:54.000 --> 01:30:54.600
没出来啊

01:30:54.600 --> 01:30:54.920
没出来

01:30:54.920 --> 01:30:56.720
我输出一下吧

01:30:56.720 --> 01:30:58.760
我就在浏览器里面调试一下吧

01:30:58.760 --> 01:31:05.340
source this

01:31:05.460 --> 01:31:06.580
再调试一下啊

01:31:07.780 --> 01:31:08.580
来个段点

01:31:08.580 --> 01:31:09.460
小心

01:31:09.460 --> 01:31:11.060
看一下mubes

01:31:11.060 --> 01:31:12.420
mubes.data对吧

01:31:12.420 --> 01:31:13.060
点data

01:31:13.060 --> 01:31:13.980
他这才是一个输出

01:31:17.460 --> 01:31:17.860
这点

01:31:19.300 --> 01:31:19.940
点data

01:31:21.620 --> 01:31:21.940
别怕

01:31:23.580 --> 01:31:24.500
好你看

01:31:24.500 --> 01:31:25.860
一门不就显示出来了吗

01:31:25.860 --> 01:31:26.660
你要显示

01:31:26.660 --> 01:31:27.740
你要显示图片

01:31:27.740 --> 01:31:29.660
你可以加图片呗

01:31:29.660 --> 01:31:31.540
这个这个里面有图片地址

01:31:31.540 --> 01:31:32.420
啊

01:31:32.420 --> 01:31:32.820
我这里

01:31:34.020 --> 01:31:35.020
所以有图片地址

01:31:35.060 --> 01:31:36.340
每个电影里面有图片地址

01:31:36.340 --> 01:31:36.420
啊

01:31:36.420 --> 01:31:37.660
这个poster

01:31:37.660 --> 01:31:39.540
不知道这很早以前的数据了

01:31:39.540 --> 01:31:40.900
不知道现在图片能不能显示

01:31:42.460 --> 01:31:43.340
再试一下吧

01:31:44.380 --> 01:31:45.420
试一下吧

01:31:45.420 --> 01:31:46.540
我们这个initx

01:31:46.540 --> 01:31:47.660
initm

01:31:48.300 --> 01:31:48.900
来试一下

01:31:51.340 --> 01:31:52.100
initm

01:31:55.110 --> 01:31:56.310
来先来个引力级元素

01:31:57.390 --> 01:31:58.790
src

01:31:58.790 --> 01:31:59.230
等于

01:32:01.350 --> 01:32:02.230
问号

01:32:02.230 --> 01:32:03.430
以后要拼接的

01:32:03.430 --> 01:32:03.830
然后呢

01:32:03.830 --> 01:32:05.230
再来一个

01:32:05.230 --> 01:32:06.310
问号就是电影

01:32:06.310 --> 01:32:07.350
电影的什么名字

01:32:07.350 --> 01:32:08.310
电影名字我们拼接

01:32:08.310 --> 01:32:09.590
m.net

01:32:09.590 --> 01:32:09.870
啊

01:32:09.870 --> 01:32:10.630
个问号位置呢

01:32:10.630 --> 01:32:11.510
是poster对吧

01:32:11.510 --> 01:32:14.490
拼接一下

01:32:14.490 --> 01:32:18.170
m.poster

01:32:18.170 --> 01:32:18.490
哎呀

01:32:18.490 --> 01:32:19.210
还可以显示对吧

01:32:19.210 --> 01:32:20.090
我这里没写样式啊

01:32:20.090 --> 01:32:21.130
你自己去设置样式

01:32:22.090 --> 01:32:22.250
对吧

01:32:22.250 --> 01:32:23.770
这不就从服务器拿出去了吗

01:32:23.770 --> 01:32:25.250
就这么简单没有什么复杂的

01:32:25.250 --> 01:32:26.890
你还可以利用我们之前学过的知识

01:32:26.890 --> 01:32:27.610
把它封装一下

01:32:27.610 --> 01:32:28.690
封装到一个函数里面

01:32:28.690 --> 01:32:30.050
不是之前学过promise嘛

01:32:30.050 --> 01:32:30.970
对不对

01:32:30.970 --> 01:32:31.250
对啊

01:32:31.250 --> 01:32:32.170
这个artex

01:32:32.170 --> 01:32:33.490
你给我个UIL地址

01:32:33.490 --> 01:32:33.650
对吧

01:32:33.650 --> 01:32:35.050
我直接写个非常简单的啊

01:32:35.050 --> 01:32:36.010
那具体的封装的时候

01:32:36.010 --> 01:32:38.050
还要考虑什么请求方法呀

01:32:38.050 --> 01:32:38.970
请求投这些东西

01:32:38.970 --> 01:32:39.970
还要给他提供传输

01:32:39.970 --> 01:32:41.090
我这就写个简单的

01:32:41.090 --> 01:32:42.850
就一把git请求啊

01:32:42.850 --> 01:32:43.810
artexgit

01:32:45.090 --> 01:32:46.090
对个git请求

01:32:46.090 --> 01:32:48.330
然后你给我一个地址就行了

01:32:48.330 --> 01:32:50.130
我这里是不是可以把封装一下

01:32:50.130 --> 01:32:51.770
这个玩意儿拿过来

01:32:51.770 --> 01:32:52.770
封装一下

01:32:52.770 --> 01:32:54.090
我就可以发送git请求

01:32:54.090 --> 01:32:54.850
请求哪个地址

01:32:54.850 --> 01:32:57.250
请求这个一个传达的参数UIL

01:32:57.250 --> 01:32:57.850
对吧

01:32:57.850 --> 01:32:59.730
那么这个是整个过程的

01:32:59.730 --> 01:33:01.290
我们把它封装到一个promise里边

01:33:01.290 --> 01:33:02.890
return a new promise

01:33:02.890 --> 01:33:04.450
是之前学过的

01:33:05.410 --> 01:33:06.890
我都不考虑错误了

01:33:06.890 --> 01:33:07.010
啊

01:33:07.010 --> 01:33:08.290
尽量减化一点

01:33:08.290 --> 01:33:09.010
你说

01:33:09.010 --> 01:33:11.170
当我请求完成的时候

01:33:11.170 --> 01:33:13.210
我把它用节省格式来解析

01:33:13.210 --> 01:33:14.610
解析成界对象

01:33:14.610 --> 01:33:15.690
OB界

01:33:15.690 --> 01:33:16.130
然后呢

01:33:16.130 --> 01:33:17.650
调用调用

01:33:17.650 --> 01:33:18.930
是不是OB界传进去

01:33:20.770 --> 01:33:21.970
之前我们不是写过这么一个函数吗

01:33:21.970 --> 01:33:22.130
对吧

01:33:22.130 --> 01:33:22.930
而sync connect

01:33:22.930 --> 01:33:23.770
咱们就用它

01:33:23.770 --> 01:33:24.850
就用这个名字

01:33:24.850 --> 01:33:25.810
就用这个名字

01:33:25.810 --> 01:33:26.450
你说

01:33:26.450 --> 01:33:27.970
就是Promise完成了

01:33:27.970 --> 01:33:29.050
那么有了这个封装过后

01:33:29.050 --> 01:33:30.970
后面的事情是更简单的

01:33:30.970 --> 01:33:32.170
我们写个sync函数

01:33:33.170 --> 01:33:34.370
当然这些

01:33:34.370 --> 01:33:35.170
这些又需要一些

01:33:35.170 --> 01:33:36.570
ES7的知识啊

01:33:36.570 --> 01:33:37.570
呃

01:33:38.570 --> 01:33:42.300
对什么

01:33:42.300 --> 01:33:43.700
要我们这里调用啊

01:33:43.700 --> 01:33:44.500
对什么

01:33:45.900 --> 01:33:47.300
那么这里很简单了

01:33:47.300 --> 01:33:48.300
调用这个函数

01:33:48.300 --> 01:33:49.300
而sync connect

01:33:50.900 --> 01:33:51.700
把地址传进去

01:33:51.700 --> 01:33:52.300
请求那个地址

01:33:52.300 --> 01:33:53.100
请求这个地址

01:33:54.700 --> 01:33:55.700
请求这个地址

01:33:55.700 --> 01:33:56.100
拿到什么

01:33:56.100 --> 01:33:57.300
拿到就是电影数据

01:33:57.300 --> 01:33:58.300
无位置

01:33:58.300 --> 01:34:01.780
拿到电影数据干嘛

01:34:01.780 --> 01:34:02.580
拿到电影数据干嘛

01:34:02.580 --> 01:34:04.180
就就就这个事情呗

01:34:04.180 --> 01:34:05.180
不会就是这个事情吗

01:34:05.180 --> 01:34:05.980
还能干嘛呢

01:34:06.580 --> 01:34:09.940
对吧后面单码就不要了

01:34:09.940 --> 01:34:10.340
对吧

01:34:10.340 --> 01:34:10.940
是不是变成

01:34:10.940 --> 01:34:11.940
那么有了这个函数过后

01:34:11.940 --> 01:34:13.340
后面请求是不是变得简单了

01:34:13.340 --> 01:34:14.340
请求这个地址

01:34:14.340 --> 01:34:15.140
拿到数据

01:34:15.140 --> 01:34:15.940
然后呢

01:34:15.940 --> 01:34:17.140
该干嘛干嘛

01:34:17.140 --> 01:34:18.140
效果是完全一样的

01:34:18.140 --> 01:34:20.840
对吧

01:34:20.840 --> 01:34:21.340
好了

01:34:21.340 --> 01:34:22.040
今天就把这个

01:34:22.040 --> 01:34:22.840
ATV协议啊

01:34:22.840 --> 01:34:24.240
最核心的部分给大家讲了

01:34:24.240 --> 01:34:24.840
嗯

01:34:26.040 --> 01:34:27.440
不想你不写生的的话

01:34:27.440 --> 01:34:28.040
你发布

01:34:28.040 --> 01:34:29.440
你请求没发出去啊

01:34:29.440 --> 01:34:31.240
你请求没发出去啊

01:34:31.240 --> 01:34:32.840
你还不写生的

01:34:32.840 --> 01:34:33.440
请求呢

01:34:33.440 --> 01:34:34.240
请求没发出去

01:34:34.240 --> 01:34:35.640
你看一个类伺服

01:34:35.640 --> 01:34:39.360
对不对

01:34:39.360 --> 01:34:41.360
类伺服有请求吗

01:34:41.360 --> 01:34:41.760
没有

01:34:41.760 --> 01:34:42.660
只有一个页面请求

01:34:42.660 --> 01:34:44.160
阿迦克斯请求没发出去啊

01:34:45.360 --> 01:34:47.160
而且在GS里边发动请求啊

01:34:47.160 --> 01:34:48.560
他页面是不会刷新的

01:34:48.560 --> 01:34:49.260
是不会刷新的

01:34:49.260 --> 01:34:49.960
就说这件事呢

01:34:49.960 --> 01:34:50.660
你完全可以把它

01:34:50.660 --> 01:34:52.160
写到一个按钮时间里来去

01:34:52.160 --> 01:34:52.760
比较说

01:34:53.460 --> 01:34:54.260
发生啊

01:34:54.260 --> 01:34:55.260
当然我现在这几颗不是讲

01:34:55.260 --> 01:34:55.860
阿迦克斯啊

01:34:55.860 --> 01:34:56.860
我就随便说一下啊

01:34:56.860 --> 01:34:57.260
阿迦克斯啊

01:34:57.260 --> 01:34:58.160
专门来客来讲

01:34:59.060 --> 01:34:59.660
加散

01:35:00.160 --> 01:35:00.960
电影

01:35:00.960 --> 01:35:01.460
对吧

01:35:02.060 --> 01:35:02.860
点击的时候

01:35:02.860 --> 01:35:03.560
onclick

01:35:03.560 --> 01:35:04.760
点击的时候我调了什么呢

01:35:05.360 --> 01:35:05.760
这里

01:35:06.460 --> 01:35:07.260
就是move it吧

01:35:07.260 --> 01:35:07.860
move it

01:35:08.660 --> 01:35:09.360
move it

01:35:09.360 --> 01:35:10.060
发个名字啊

01:35:10.560 --> 01:35:11.560
点击的时候我调用这个

01:35:11.560 --> 01:35:12.360
get some movies

01:35:13.260 --> 01:35:15.460
然后这里就几样简单简单点啊

01:35:15.460 --> 01:35:16.860
这个就这里就调用了

01:35:17.160 --> 01:35:18.760
我点击按钮的时候调用这个函数

01:35:19.060 --> 01:35:20.060
啊这里是封装了一个

01:35:20.060 --> 01:35:20.460
synch

01:35:20.460 --> 01:35:20.560
cancel

01:35:20.560 --> 01:35:21.360
cancel对吧

01:35:21.460 --> 01:35:22.560
通用了请求方法

01:35:24.600 --> 01:35:25.700
好刷新加散

01:35:25.800 --> 01:35:26.500
就加得出来

01:35:28.100 --> 01:35:29.100
好了啊

01:35:29.100 --> 01:35:30.100
今天我们又到这了啊

01:35:30.700 --> 01:35:32.500
啊今天可能有些同学听到有点蒙啊

01:35:32.500 --> 01:35:33.900
蒙的话下去

01:35:34.700 --> 01:35:35.800
哪里不会看哪里

01:35:37.000 --> 01:35:37.400
好了

01:35:37.700 --> 01:35:38.400
今天我们又到这了

01:35:38.400 --> 01:35:38.700
好吧

01:35:38.700 --> 01:35:39.100
讨厌们

01:35:39.100 --> 01:35:40.300
今天又超时了

