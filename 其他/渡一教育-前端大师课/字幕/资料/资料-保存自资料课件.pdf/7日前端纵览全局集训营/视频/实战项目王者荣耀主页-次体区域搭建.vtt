WEBVTT

00:00.940 --> 00:03.240
每天我们是有作业的啊 同学们

00:03.500 --> 00:04.780
每天的作业是啥呢

00:05.300 --> 00:08.360
就是我每天呢 把这个网站做成啥样子

00:08.620 --> 00:09.900
你就跟着我做成啥样子

00:10.420 --> 00:11.700
千万不要觉得简单

00:11.940 --> 00:12.720
然后不去做

00:13.220 --> 00:14.760
咱们这个行业呢

00:15.020 --> 00:16.300
是有幻觉的

00:16.820 --> 00:22.180
你可以在咱们这里听课的同学啊 今天少了很多人 很多人少了哪些人呢 我都知道

00:22.700 --> 00:27.060
是少了那些后期付费学员啊 跑过来听着玩的

00:27.320 --> 00:28.580
很多人跑了

00:29.340 --> 00:32.940
另外呢 就是咱们这个行业有特别多的幻觉

00:33.200 --> 00:36.520
就是你觉得自己学懂了 但是你自己没有做出来的话都不能算

00:36.780 --> 00:39.840
你可以去在群里边去问一下你的师兄师姐

00:40.100 --> 00:41.120
他们都知道

00:41.640 --> 00:43.680
所有的一定要引起重视 一定要训练一次

00:44.200 --> 00:44.700
这是一个

00:45.740 --> 00:50.860
另一个呢 我给大家再重申一次啊 就是说我们讲的课呢 这七天几讯也啊

00:51.120 --> 00:53.660
还是要照顾一下您基础的同学

00:54.120 --> 00:58.740
有些同学呢 他有一些基础啊 看到一些诚哥的课程 毕竟有一些同学是没有看的

00:59.240 --> 01:01.040
那么这里涉及到一个问题啊

01:01.540 --> 01:02.820
我要照顾哪些同学的问题

01:03.080 --> 01:06.160
如果说我去照顾那个有一部分基础的同学呢

01:06.660 --> 01:12.040
那就不是体验好不好的问题了 那直接就把那个临基础的同学就枪毙了啊 就没就没得玩了

01:12.300 --> 01:17.680
如果说我要照顾临基础的呢 就是哪怕你学过一些 你至少还可以玩对吧 你至少还可以听得懂

01:17.940 --> 01:19.480
所以说一定要照顾临基础的啊

01:20.460 --> 01:29.860
好了 那咱们就继续昨天的做吧 昨天我们做成什么样子 做成这个样子 你效果还差得远对吧 为什么还差得远呢 是因为我们这里呢 还少了

01:30.380 --> 01:32.820
两个css的大块支持

01:33.500 --> 01:34.780
这两个css

01:36.140 --> 01:41.460
这两个css的大块支持我们一学习 也会发现了绝大部分小伙伴都能做出来了

01:41.900 --> 01:45.300
所以说我们在学习的过程中呢 一开始做这个头部的时候呢会很慢

01:45.780 --> 01:49.300
但是只要你头部一做出来 你会发现后面的东西全是一样的

01:49.660 --> 01:55.500
基本上没有什么差别了 所以我们先把头部搞定啊 不着急 慢慢搞定 总之是我们七天已经能搞定的 放心

01:57.340 --> 02:02.300
等你真正把这些东西用处了 过后呢 整个网页做出来也就是三个小时

02:02.740 --> 02:08.820
四个小时啊 就自己做的话啊 我自己我来做的话也就一个半小时左右吧 全部把做完 其实

02:09.540 --> 02:14.500
时间用不了那么多了 好 咱们一个个来啊 今天晚上了咱们还要讲两个

02:15.260 --> 02:16.140
重要的知识

02:17.580 --> 02:17.780
嗯

02:18.760 --> 02:23.040
好 第一个重要的知识呢 是样式冲突怎么办

02:25.720 --> 02:28.560
这两个知识一学很多小伙伴都能做的 第二个是

02:29.480 --> 02:30.360
盒子的排列

02:31.040 --> 02:36.240
啊 有人还不知道什么叫盒子 没事啊 咱们慢慢来讲 第一个呢是样式冲突怎么办

02:37.400 --> 02:41.040
好 那么我们这里呢 为什么会有样式冲突的这个很奇怪

02:42.080 --> 02:48.880
咱们再看一下为什么会有样式冲突 首先我问大家一个问题 这里的 这里的文字啊 这个se元素

02:49.180 --> 02:50.220
它凭什么要这么大

02:51.260 --> 02:55.020
它为什么a元素就这么小的字体 而se元素凭什么就这么大

02:55.540 --> 02:58.420
啊 有人说那se元素天生就这么大 其实不是的

02:58.980 --> 03:04.780
这是一个误区 啊 即便是很多学的se元素同学呢 他都有这个误区 啊 认为se元素他一定别

03:05.220 --> 03:13.340
a元素他的样式大 他为他的字体大 为什么se元素他的字体要大一些呢 是因为我们有一个流烂期默认样式表

03:13.560 --> 03:18.880
看呗 我们用点击右键检查啊 这个用怎么怎么放过来的啊 点这个

03:19.720 --> 03:29.240
在下边 点这个在右边 对吧 你们自己可以自己去玩 我们放下边吧 咱们看一下这个a元素啊 a元素他的文字凭什么这么大

03:30.120 --> 03:35.360
你看一下 我们没有给他设置任何样式 但是你看右边说出现了一个样式

03:35.880 --> 03:42.040
这个样式哪来的 它叫做user agent style sheet 这个样式什么 叫做流烂期默认样式

03:42.740 --> 03:50.100
流烂期里边他给一些很多元素啊 他都设置了一些默认的样式 那么现在呢 我们再来写一个se元素

03:51.300 --> 03:53.940
我们把这个分隔一个屏幕嘛 点这个啊 分隔屏幕

03:54.740 --> 04:01.340
把分隔过来啊 这边去留一个a天秒 这边来写样式 好 这边呢 我们就来写一个a期元素的样式 看着啊

04:02.140 --> 04:06.540
你看样式是怎么冲突的 好 我们这边呢 设置上一个color

04:07.240 --> 04:08.240
设置上一个方式size

04:09.760 --> 04:12.240
然后给他设置成16px

04:13.360 --> 04:19.480
好 保存 康书叫s保存 我这里没有设置自动保存 我们把自动保存打开嘛 自动保存打开

04:20.200 --> 04:27.760
好 这边 我们看一下 这边是不是文字变小了 那么我们现在再看这个a期元素 这个a期元素你会发现

04:29.120 --> 04:30.640
我们自己写的样式

04:31.540 --> 04:34.780
是不是有一个方式size 选中了他 对吧 方式size16个相处

04:35.620 --> 04:39.620
牛烂器的默认样式表里边也有一个样式 他写了一个方式

04:40.820 --> 04:48.060
方式size 2dm e m是什么 不用管啊 2dm相当于是32个相处 32个相处 你可以这样理解

04:48.460 --> 04:52.260
好 那么方式size 2dm 你看 这两个样式是不是冲突了

04:52.780 --> 04:58.340
对不对 因为我们自己在想写样式啊 牛烂器是不是也有自己的样式 那么样式不会造成冲突 对不对

04:58.540 --> 05:03.580
你看 都有一个方式size 他听谁的呢 他到底是16个相处还是2dm呢 他听谁的呢 搞不定的

05:03.920 --> 05:09.160
所以说 样式冲突这个问题 我们一定要解决 样式冲突怎么办 牛烂器自动处理

05:10.400 --> 05:15.480
器会自动处理 他是怎么来自动处理的 怎么自动处理的

05:16.440 --> 05:17.720
好 他有这么三个层面

05:18.600 --> 05:25.320
一个说 第一个层面 他是作者样式表 会覆盖默认样式表

05:26.180 --> 05:27.940
什么是作者样式表

05:30.140 --> 05:34.180
默认样式表我们都知道 对吧 牛烂器默认自带的 每个牛烂器可能有一些差异

05:34.860 --> 05:39.180
什么是作者样式表 谁是作者 作者就是你

05:40.420 --> 05:43.620
你是开发者 你就是作者 开发者就是作者

05:44.900 --> 05:52.100
换句话说 我们自己写的样式 一定会 如果说遇到了样式冲突 一定会覆盖牛烂器的样式

05:52.600 --> 05:53.160
就是作者

05:56.850 --> 06:03.490
总的意思吧 所以说 我们这里写了一个方赛词 就覆盖了牛烂器的样式 你看牛烂器这里是不是给他花了一个横杠 表示这个样式不要了

06:03.810 --> 06:08.250
我用这个 我不听你的了 听我的 作者样式表覆盖牛烂器默认样式表

06:08.530 --> 06:13.250
对不对 好 那么这里呢 你看一下有些样式是没有覆盖的 你看这个Display 我们现在还没有学

06:13.690 --> 06:20.570
还有这个Martin是不是还没有学 这个方式 方式为什么学过了 对吧 那么他为什么是加粗的效果 因为牛烂器默认样式表是加粗的

06:20.730 --> 06:27.490
而这个东西是没有冲突的 对吧 样式是没有冲突的 所以说它是加粗的 那如果说你这里呢 自己去写了一个放置位置

06:28.250 --> 06:34.290
写个NOMO 那么现在就是不是就没有加粗了 你看是不是没有加粗了 就这么简单 作者样式表覆盖牛烂器

06:34.810 --> 06:38.570
样式表 那么这样子一来呢 我就会形成一个效果 什么效果呢

06:39.250 --> 06:45.130
因为不同的牛烂器啊 它的默认样式表是可能有些差异的 就导致了我们网站里的

06:45.930 --> 06:53.290
在一个牛烂器显示一个样子 到了另一个牛烂器可能显示另一个样子 这是我们不希望看到的 于是我们给予它这么一个特点

06:53.890 --> 06:58.770
就是作者样式表会覆盖牛烂器默认样式表 那么我们会给予这么一个特点 于是呢

06:59.210 --> 07:04.730
网上就有很多叫做CSS reset的技术 换句话说叫做CSS重置技术

07:06.010 --> 07:09.210
什么叫重置技术 就是我自己写一段CSS代码

07:09.930 --> 07:12.490
把牛烂器的一些默认样式全部给它覆盖掉

07:13.170 --> 07:22.490
这是CSS重置技术 网上有很多CSS重置技术 你去搜一下CSS reset一大堆 我们这里呢 我自己个人喜好了 一般我喜欢用这个人的

07:22.770 --> 07:26.610
叫Mayor Eric Mayor 他是W3C组织的一个成员

07:27.330 --> 07:28.930
他自己搞了一个牛烂器模的样式

07:30.970 --> 07:31.330
Mayor

07:32.210 --> 07:36.530
在这 我把这个地址给他给他放一下啊 以后给他放一下

07:37.290 --> 07:39.170
哎呦 外网连接有点慢啊

07:39.890 --> 07:40.250
有点慢

07:42.960 --> 07:46.280
Mayor reset Mayor CSS吧 用这样子搜

07:50.760 --> 07:58.520
这个还有主页 他主页 我们看一下这个页面 等他慢慢连吧 等他慢慢连 我们这边继续讲啊

07:58.960 --> 08:02.560
就是我们这个 就是我们在网上去自己找一段CSS重置代码

08:03.000 --> 08:06.480
然后呢 给他放进去 他就可以把牛烂器的默认样式给他覆盖掉

08:06.760 --> 08:14.280
然后呢 我们后边就可以自己写自己想要的CSS代码 为了保证 这样子可以保证在所有的牛烂器里边啊 我们都可以看到一样的效果

08:14.800 --> 08:23.760
打不开了 打不开啊 我这里没开带里没开带里有个连接国外的网站就速度太慢了

08:25.560 --> 08:31.200
啊 让他慢慢打开吧 让他慢慢打开 等他打开了过后 我们再回过头来说吧 我们节约时间 好 接下来我们讲第二个点

08:32.800 --> 08:37.000
那如果说是作者样式表冲突呢 都是作者样式表

08:37.840 --> 08:39.320
都是作者样式表

08:40.440 --> 08:44.400
那么这个时候有没有可能造成冲突了 也有可能啊 也有可能会造成冲突

08:45.160 --> 08:48.960
哎 看到了啊 出来了 这个网站呢 点这个啊 点copy over the file

08:49.880 --> 08:52.000
直接把这个复制一下吧 点击一下这个

08:53.280 --> 09:00.320
这速度太慢了 让他慢慢连吧 如果说都是作者样式表的话 会不会造成问题呢 比方说啊

09:01.480 --> 09:05.880
什么情况下 我们会在作者样式表里边也造成冲突了 你看这

09:07.480 --> 09:11.240
你看这 每一个A元数啊 这每一个A元数

09:11.800 --> 09:18.800
颜色呢 都是一种颜色 对吧 都是一种颜色 所以说呢 我们这里呢 可以用一种简单的设置方式 我们去设置这个main lab

09:20.240 --> 09:22.800
去设置这里边的所有的

09:25.120 --> 09:30.640
我们在这里复制一下 去设置这下面的所有A元数 给他设置个颜色 比方说把它设置为红色

09:31.520 --> 09:37.560
原来是吧 然后呢 有的时候呢 我们还会出现这种情况 有一个A元法比较特殊 你看这个A元数是比较特殊

09:37.880 --> 09:42.040
它是一个选中的效果 那么这个选中的效果呢 我们可以这样子再写

09:42.760 --> 09:47.200
啊 你看 我这里呢 在列表里边 你看 第一个A元数是不是选中的效果 对不对

09:48.080 --> 09:49.280
好 那我咱们呢 在这里

09:50.120 --> 09:53.480
写上一个class 给他取个名字 叫做

09:54.280 --> 10:00.360
一个T5嘛 这个名字随便去 随便的去去什么啊 表示他被选中了 然后我们在这边去写个样式

10:00.760 --> 10:03.160
main.active

10:03.680 --> 10:06.640
啊 或者写这么一个A.active

10:07.480 --> 10:13.720
A.active 什么意思 就是他必须要是A元数 同时他有内样式active 那么这个选中的是谁

10:14.280 --> 10:20.800
所以他 他能选中 他选不中 对不对 好 然后咱们写一个color 呃 比方说写成不露满

10:21.880 --> 10:22.960
好 接下来我们来看一下效果

10:24.760 --> 10:25.120
啊 你看

10:26.120 --> 10:33.880
其他的A元数全都是红色 就他比较特殊 他变成蓝色了 对吧 我们看一下这边打开没有 好打开了啊 我把这个地址给他复制一下

10:35.160 --> 10:35.680
给他放过来

10:36.800 --> 10:37.280
CSS

10:38.200 --> 10:45.400
啊 你们点这个链接啊 就可以把这个代码拿到了 这个是个重置技术啊 重置技术里很简单 你把这个代码复制一下

10:46.640 --> 10:50.240
复制一下 然后呢 在这里新建一个CSS文件 给他取个名字

10:50.960 --> 10:55.000
叫做随便取个名字啊 我们给他取个resets吧 表示重置的样式

10:55.760 --> 10:58.160
好 我们把粘贴过来 你看 所以保存过来了

10:58.920 --> 11:07.520
然后我们到页面里边去 页面里边呢 我们首先去引用啊 我们这里不是引用了自己的CSS吗 然后呢 再引用自己的CSS之前 先去引用一下重置样式

11:08.160 --> 11:14.800
CSS resets 重置样式 那么这句话是不是把CSS就用浏览器的墨镇样式给他覆盖掉 对不对 然后看一下

11:16.320 --> 11:21.440
你看 是不是全部挨在一起了 对不对 所有的样式都没了 浏览器的墨镇样式全部没了

11:22.400 --> 11:27.280
那哪怕是A型元素 你看 也变小了 文字也变小了 对吧 这是关于这一块啊

11:28.120 --> 11:30.680
把它复盖一下 好 然后我们再回到这

11:32.360 --> 11:36.000
你看啊 我们都是作者样式表 都是自己写的样式 是不是也冲突了

11:36.600 --> 11:42.320
那么这个时候浏览器会如何来选择呢 他到底选择哪一个呢 接下来我们来看一下第二部分

11:43.880 --> 11:48.880
第二部分 都是作者样式表 他发生了冲突 那么他是选择哪个选择哪一个呢

11:49.760 --> 11:56.360
哪个选择器 他是看选择器 哪个选择器选中的更加精确

11:58.480 --> 11:59.840
使用哪个样式

12:00.800 --> 12:08.560
就这么简单 那么他怎么来判断他是不是精确呢 他是这样子 按照精确度的从高到低来排序

12:09.040 --> 12:16.320
最精确度最高的什么叫精确就最越选中的元素越翻维越小啊 他就是越精确 那么

12:17.280 --> 12:21.680
他的具体的判断方式呢 是这样子那一年样式

12:23.360 --> 12:26.640
最精确啊 如果就说什么叫那一年样式 就是写到这的

12:27.840 --> 12:32.240
你看啊 我这个A元素在这啊 我这个A元素 比方说我在这里写一个style

12:33.200 --> 12:37.680
那一年样式 这是不是那一年样式 也叫做行内样式 我们比方说给他设一个color

12:38.400 --> 12:41.200
颜色啊 或者是颜色吧 黄色

12:42.160 --> 12:47.360
我们这样子设置过后呢 你看 这边是不是变成黄色了 看了也不太清楚啊 这变成黄色了

12:47.760 --> 12:50.800
对不对 所以那一年样式是最精确的 毫无疑问

12:51.840 --> 13:00.560
然后呢 其次呢 是内样式 内样式是不是可以 方位要大一些了 对吧 因为凡是有这个class的都可以选中 方位要大一些了

13:01.040 --> 13:06.160
内样式 次值 然后呢 最不精确的是什么呢 元素选 元 不是

13:06.920 --> 13:07.920
这是内选择器

13:09.760 --> 13:10.400
选择器

13:10.960 --> 13:13.760
好 最不精确的是元素选择器

13:14.480 --> 13:15.760
那么我们再来看一下

13:16.960 --> 13:18.560
我们这里的 如果说我这样子写

13:20.730 --> 13:25.080
啊 你看 看一下这个单 它会显示什么颜色

13:26.680 --> 13:30.840
啊 id 门不说啊 不讲 id 门直接略过 因为我们用不到 id

13:32.200 --> 13:37.950
它会显示什么颜色 显示什么呢

13:39.310 --> 13:42.030
那个跑里同学不要乱说啊 这个是答案是错误的

13:42.990 --> 13:44.030
是不是黄色

13:45.070 --> 13:48.670
显示黄色 因为最精确的是内颜样式

13:49.070 --> 13:52.430
所以说它肯定是生销的 这两个全部不生销 咱们来看一下

13:53.070 --> 13:57.870
点击右键啊 检查 你看这个黄色的是不是黄色啊 咱们来看一下这个A元素

13:58.590 --> 14:02.590
A元素里面你看这几个是不是被钢了 对不对 卡了是不是被钢掉了 对不对

14:03.070 --> 14:06.110
好 然后再来啊 因为内颜样式我们用的毕竟少一点

14:06.430 --> 14:10.830
内颜样式我们在调试的时候 在测试的时候呢 很用用 要说我们把这个内颜样式去掉

14:11.790 --> 14:15.550
为什么说测试的时候很用用了 你看我们换回来了啊 这个A元素

14:16.350 --> 14:21.230
我们你看这个 这个叫做Elemental Style 什么意思 表示的是内颜样式

14:21.550 --> 14:26.510
就是在测试的时候呢 我们可以直接在浏览器里面 就在调试 就是这个控制台里面啊 这个

14:27.390 --> 14:29.950
调试工具里面我们直接可以书写样式 比方说Color

14:31.630 --> 14:32.990
紫色嘛 purple

14:34.030 --> 14:35.310
对吧 所以变紫色了

14:35.950 --> 14:40.430
啊 你看是这里 你看这里是不是加了一个Style Color点 Color purple 对不对

14:40.590 --> 14:42.430
在这里调试是非常有用的 因为它

14:43.390 --> 14:48.910
无论你写的是什么 它一定生效 为什么呢 还是内颜样式啊 它已经生效了 这是关于这个啊

14:49.470 --> 14:51.070
嗯 好 这是

14:52.190 --> 14:56.350
内颜样式 内样式 然后呢 如果说把内颜样式去掉 是不是它生效对不对

14:56.910 --> 15:00.270
好 那么接下来我们再来看一个问题 那如果说我在选择器写了很多

15:01.230 --> 15:04.910
怎么办 选择器写的很多怎么办 比方说我们这里刚才我们写怎么写的

15:05.310 --> 15:06.910
Nive

15:08.430 --> 15:08.910
Nive

15:09.870 --> 15:11.630
好 这边呢 是

15:12.750 --> 15:13.150
Made

15:13.870 --> 15:14.270
Nive

15:14.910 --> 15:17.470
这个东西它怎么来抉择呢 它怎么来抉择

15:18.190 --> 15:22.670
它是这样子的 你看它怎么来抉择 如果说你写了多个选择器

15:23.150 --> 15:24.190
它就挨着来看

15:24.910 --> 15:28.030
看一下哪个内选择器多 哪个就越精确

15:28.590 --> 15:32.590
哪个内选择器多 是不是它的内选择器多 那么它就更精确 对吧

15:33.150 --> 15:37.790
好 如果说内选择器一样 那就看元素选择器哪个更多 就是这么个意思

15:38.270 --> 15:42.030
所以说这个显示什么颜色 是不是还是蓝色 对还是蓝色

15:42.590 --> 15:47.470
好 那如果说这个地方呢 如果说我这样子写呢 这样子写显示什么颜色

15:48.750 --> 15:51.840
什么颜色 这样子

15:53.600 --> 15:59.040
是不是红色 对吧 就显示了红色了 因为两个内选择器是一样多的

15:59.040 --> 16:02.000
然后就看元素选择器哪个多 那么现在就肯定显示红色

16:02.480 --> 16:07.040
对不对 这就是它的选择器 它的就是如何来判断

16:07.520 --> 16:12.240
判断到底是哪个样式生效 当然我们刚才是这样子写的 那毫无疑问肯定是它生效

16:12.480 --> 16:17.280
对不对 这就是它的成绩规则 是不是非常简单 但是它有很多细节啊 刚才有同学提到了 还是什么

16:17.280 --> 16:22.480
因迫产有很多细节 但是呢 我们这几天的时间说了 不去陷入技术细节

16:22.880 --> 16:27.840
从最高的角度 怎么把一个网页完成 我们只需要学习 需要用到的知识有够了

16:28.400 --> 16:29.920
好 那么这是这个情况

16:31.120 --> 16:35.520
好 如果说两个都精确了 都是一样精确的 那又怎么办呢

16:36.480 --> 16:37.280
比方说啊

16:38.960 --> 16:42.960
比方说 这个我再说一下 如果说是这个样式 Harvard

16:43.840 --> 16:48.800
这个样式 这个为内选的器它也算是内 那么这个是有几个内选的器

16:48.800 --> 16:53.760
一个两个 对吧 两个内选的器一个元素 这个是一个内选的器一个元素

16:53.760 --> 16:57.520
所以说 Harvard的时候它生效 鼠标一上去的时候它生效

16:57.520 --> 17:00.800
你看一开始是红色 对吧 鼠标一上去的时候就变蓝色了

17:01.120 --> 17:03.840
一上去的时候它生效 因为它的它的就是

17:05.760 --> 17:08.400
就是它的比更加特殊 选中的更加精确

17:09.360 --> 17:11.040
那如果说都是一样的呢

17:12.640 --> 17:14.400
都是一样的咋办 你看着

17:16.080 --> 17:19.760
那这个东西有选择啥呢 你看啊 内选的器一个两个

17:20.480 --> 17:23.520
内选的器一个这个为内也算是内啊 两个

17:24.880 --> 17:28.000
这个是不是元素的器 元素的器一个是不是全部一样

17:28.560 --> 17:33.280
全部一样的情况下 它还是分不出来了 那么这个时候它用啥手锏了

17:33.360 --> 17:36.000
用绝招了 什么呢 谁靠后

17:39.280 --> 17:43.360
用谁 就这么简单 这个东西叫做元次序

17:44.400 --> 17:48.800
判断元次序 元是什么元 就是元代码的元 不是新元的元

17:49.600 --> 17:53.360
次序 这个东西叫什么呢 这个东西叫做特殊性

17:54.960 --> 17:57.600
判断特殊性 它哪个认特殊 什么叫认特殊

17:59.040 --> 18:01.520
就是它选中的更加精确就更特殊

18:01.680 --> 18:05.520
那么如果说都一样的话 那么就看元次序了 元次序它一定能出来结果

18:06.640 --> 18:11.680
刷新 元次序呢 我们看 一个体育 红色 为什么没生效呢

18:12.320 --> 18:12.960
一个体育

18:14.560 --> 18:18.880
看一下 早一早啊 这个A元素 样式没有被选中

18:20.560 --> 18:21.360
Main lab

18:22.880 --> 18:24.640
A元素早一早 哦 这就写错了

18:25.360 --> 18:25.920
一个体育

18:27.840 --> 18:30.000
你看 是不是红色 对不对 红色

18:30.320 --> 18:33.600
然后呢 现在我们把鼠标移上去 是变蓝色了

18:33.920 --> 18:36.800
因为鼠标移上去的时候 是不是这两个都生效了

18:37.600 --> 18:40.400
对 是不是两个都生效了 对吧 首先它有这个那样式嘛

18:40.400 --> 18:43.920
它肯定是生效的 然后那鼠标移入了 它是不是也生效的

18:45.040 --> 18:46.320
用谁 谁靠后用谁

18:47.040 --> 18:49.200
那么如果说我们把这个东西写前面呢

18:50.880 --> 18:51.520
写前面呢

18:52.240 --> 18:54.880
现在我请问大家 鼠标移入的时候

18:55.920 --> 18:57.600
鼠标移入的时候 显示什么颜色

19:00.570 --> 19:04.010
卡的话 那个刷新一下网页啊 鼠标移入的时候

19:04.410 --> 19:04.970
好好想想

19:06.170 --> 19:06.970
好 咱们来看一下

19:08.170 --> 19:08.810
鼠标移入

19:09.530 --> 19:10.730
有变化吗 是不是没变化

19:11.290 --> 19:14.330
为什么没变化 你想啊 鼠标移入的时候

19:14.330 --> 19:15.130
哈巴的时候

19:15.690 --> 19:19.290
你看 当我们鼠标移入的时候 是不是两个样式生效了

19:19.290 --> 19:21.770
这个样式是要生效的啊 不是说它就不生效了

19:21.850 --> 19:23.850
它肯定 它还是能选动这个元素啊

19:23.850 --> 19:25.370
你看 它是不是还是能选动那个元素

19:25.850 --> 19:27.130
红色 它要生效

19:27.130 --> 19:30.490
它也要生效 对吧 两个的特殊性是完全一样的

19:30.490 --> 19:32.330
都是两个那样式 一个元素选择器

19:32.650 --> 19:34.650
所以说都是一样的 那哪个生效呢

19:35.370 --> 19:38.010
谁靠后用谁 谁靠后了 它靠后

19:38.010 --> 19:39.610
是不是还是用它 对不对

19:39.610 --> 19:41.850
那么于是呢 鼠标移入就不生效了

19:41.850 --> 19:45.130
所以这个地方点要注意一下 这是关于这个点

19:45.130 --> 19:46.330
那如果说我这样子写呢

19:47.210 --> 19:47.690
Active

19:48.730 --> 19:51.290
它既要是A元素 又要有这个那样式

19:51.290 --> 19:52.890
又要鼠标移入

19:53.290 --> 19:54.570
那么肯定是它生效了 对吧

19:54.570 --> 19:56.170
因为它的特殊性比它高了

19:56.170 --> 19:57.210
它更加特殊了

19:57.210 --> 19:59.610
所以说 当鼠标移入的时候 肯定是它生效

20:00.170 --> 20:00.650
你看

20:01.770 --> 20:02.330
刷新译室

20:02.650 --> 20:03.130
好 你看

20:04.250 --> 20:04.890
说没问题了

20:04.890 --> 20:07.770
这是我们这里 这里一个第一个指示点啊

20:07.770 --> 20:10.810
今天晚上第一个指示点 样式冲突了 怎么办

20:11.370 --> 20:11.850
好

20:12.810 --> 20:15.850
那么这是作者样式表啊 这还有一个问题

20:16.810 --> 20:18.650
样式冲突的问题是不是解决了

20:19.130 --> 20:19.610
对不对

20:19.930 --> 20:22.170
那么最终的一定是只有一个样式

20:22.570 --> 20:24.090
胜出 其他样式都被淘汰掉

20:24.650 --> 20:25.850
那么现在还有一个问题

20:26.810 --> 20:28.650
有些样式缺失怎么办

20:30.890 --> 20:32.410
缺失怎么办

20:34.170 --> 20:35.770
好 比如说现在不冲突了

20:35.770 --> 20:36.650
一切都好好的

20:37.210 --> 20:39.530
但是样式缺了缺了样式

20:39.930 --> 20:40.810
这是啥意思呢

20:41.450 --> 20:42.970
什么叫做缺了样式

20:43.530 --> 20:44.810
看着 我给大家演示一下

20:46.890 --> 20:47.290
Header

20:48.010 --> 20:51.770
我们找到这个Header 给他设置一个Color

20:52.650 --> 20:53.930
颜色的为红色

20:55.210 --> 20:56.010
有意思的

20:56.570 --> 20:57.050
刷新

20:58.170 --> 21:00.410
跑了一下

21:01.050 --> 21:01.930
我们这里

21:01.930 --> 21:03.610
A元是没有写Ref

21:03.610 --> 21:05.370
没有写Ref 把Ref写上

21:06.650 --> 21:07.930
然后看一下

21:09.210 --> 21:09.450
好

21:10.490 --> 21:12.010
你会发现 我们把网页调小一点

21:13.290 --> 21:15.610
因为我们太靠左边了

21:15.610 --> 21:16.890
大家看得不错

21:17.050 --> 21:18.170
现在我们看到

21:18.730 --> 21:20.170
其他的A元数都没有变

21:20.170 --> 21:21.610
但是这两个元数变了

21:21.610 --> 21:23.290
这两个是啥元数 我们点击检查一下

21:24.570 --> 21:25.850
这就奇了乖了

21:27.130 --> 21:28.410
你看啊 这两个是P元数

21:28.410 --> 21:29.690
P元数变成红色了

21:29.690 --> 21:30.970
但是我设置P元数的样式没

21:31.210 --> 21:32.250
是没有设置

21:32.250 --> 21:33.530
哪去设置了P元数的样式呢

21:33.770 --> 21:35.050
我们设置的是谁的样式

21:35.050 --> 21:36.090
Header的样式

21:36.090 --> 21:37.610
Header里边有一个Color Red

21:38.650 --> 21:39.930
那么这个是怎么回事呢

21:39.930 --> 21:41.210
为什么A元数没有变

21:41.210 --> 21:42.490
那么这个P元数为什么变了呢

21:43.770 --> 21:45.050
它是这样的

21:45.770 --> 21:48.330
当元数的样式缺失的时候

21:48.330 --> 21:49.610
它会做这么两件事

21:50.890 --> 21:52.170
第一件事

21:52.170 --> 21:53.450
查看

21:53.450 --> 21:56.010
一次查看主纤元数

21:57.290 --> 21:58.570
主纤元数

21:58.570 --> 22:02.410
从主纤元数中继承

22:02.410 --> 22:03.690
继承

22:06.540 --> 22:07.820
好 什么意思

22:07.820 --> 22:08.780
一看啊

22:08.780 --> 22:10.620
咱们这个P元数不是没有

22:10.620 --> 22:12.940
没有这个颜色的配置吗

22:12.940 --> 22:14.460
对不对 是不是没有颜色

22:14.620 --> 22:18.700
哪里该设置的颜色都没有设置颜色

22:18.700 --> 22:19.900
我们没有写过这个赖嘛

22:19.900 --> 22:20.860
那么它没有颜色

22:20.860 --> 22:22.140
它要显示什么颜色呢

22:22.140 --> 22:23.180
它自己没有颜色

22:23.180 --> 22:24.700
它就从主纤里边去继承

22:24.700 --> 22:27.020
继承主纤的遗产

22:27.020 --> 22:28.540
看DIV有颜色吗

22:28.540 --> 22:30.060
没有 继续往上看

22:30.060 --> 22:31.340
这个DIV有颜色吗

22:31.340 --> 22:32.380
是不是都是主纤

22:32.380 --> 22:33.020
没有

22:33.020 --> 22:33.980
然后继续往看

22:33.980 --> 22:35.340
看这个DIV有颜色吗

22:35.340 --> 22:35.820
没有

22:35.820 --> 22:37.100
看这个DIV有颜色吗

22:37.100 --> 22:37.500
有

22:37.500 --> 22:38.380
是不是继承下来了

22:38.380 --> 22:40.060
它就把它的红色继承下来了

22:40.060 --> 22:43.660
这就是样式的继承

22:43.820 --> 22:46.380
因此我们可以把很多统一的样式

22:46.380 --> 22:48.860
直接写到一个顶端的元素这里

22:48.860 --> 22:50.780
比如说我们整个网站有一些字体

22:50.780 --> 22:52.780
相同的字体和相同的行高

22:52.780 --> 22:54.380
我们就可以统一的来设置

22:54.380 --> 22:55.420
就非常的方便

22:55.420 --> 22:57.740
因为样式它有继承

22:57.740 --> 22:58.700
那么起的快了

22:58.700 --> 23:01.020
这个A元素为什么没变呢

23:01.020 --> 23:02.220
这个A元素

23:02.220 --> 23:04.220
A元素为什么没变呢

23:04.220 --> 23:08.060
因为A元素它样式不缺失

23:08.060 --> 23:10.940
样式缺失的时候才会使用继承

23:10.940 --> 23:12.540
A元素样式缺失吗

23:12.540 --> 23:13.180
不缺失

23:13.500 --> 23:14.300
怎么不缺失

23:14.300 --> 23:15.420
我都没给它写

23:15.420 --> 23:16.220
你没有给它写

23:16.220 --> 23:17.340
但是浏览器写了

23:18.460 --> 23:19.020
你看一下

23:19.820 --> 23:21.740
浏览器是不是写到一个卡拉

23:22.380 --> 23:22.940
对不对

23:22.940 --> 23:24.700
浏览器卡拉是那个关键词

23:24.700 --> 23:25.420
它就是这个颜色

23:26.060 --> 23:28.220
所以说它的样式是不缺失的

23:28.220 --> 23:29.820
不缺失它就不会继承

23:29.820 --> 23:30.380
没了意思吧

23:31.100 --> 23:36.300
这是关于它的继承规则

23:36.300 --> 23:37.420
所以说我们有的时候

23:37.420 --> 23:38.380
为了重置样式

23:38.380 --> 23:40.300
我们也会做这么一件事

23:40.300 --> 23:41.260
我们带一个重置

23:41.260 --> 23:42.300
不是一个重置样式吗

23:42.380 --> 23:43.900
我们之前从网上下的

23:43.900 --> 23:44.140
对吧

23:44.140 --> 23:45.180
它写了一大堆代码

23:45.180 --> 23:47.180
然后我们在重置样式的最下面

23:47.180 --> 23:48.220
我们一般会写上

23:48.220 --> 23:49.500
我至少我自己

23:50.220 --> 23:52.060
我一般会写上这么一堆代码

23:52.060 --> 23:53.980
选中页面上所有的A元素

23:53.980 --> 23:55.180
这是作者样式表

23:55.180 --> 23:57.420
我把浏览器的默认样式给它覆盖掉

23:57.420 --> 23:57.980
怎么写呢

23:57.980 --> 23:58.300
卡拉

23:58.940 --> 24:00.460
卡拉写什么呢

24:00.460 --> 24:01.980
我也不知道写啥

24:01.980 --> 24:03.260
我就这样子写

24:03.260 --> 24:06.380
我让它强制继承覆元素的样式

24:07.580 --> 24:08.780
这句话的意思是

24:11.310 --> 24:14.830
让A元素强制继承

24:15.710 --> 24:17.950
主先元素的样式

24:17.950 --> 24:19.070
就这么个意思

24:19.070 --> 24:19.870
好那么这样子呢

24:19.870 --> 24:21.710
A元素看数字全部变红了

24:21.710 --> 24:22.510
对不对

24:22.510 --> 24:23.390
而且呢同时呢

24:23.390 --> 24:24.190
我一般来说

24:24.190 --> 24:26.270
会把这个A元素的下滑线给它去掉

24:26.270 --> 24:27.390
Tex Decoration

24:27.390 --> 24:27.630
是吧

24:27.630 --> 24:28.590
我们上一课学过的

24:29.230 --> 24:30.350
是不是下滑线就没了

24:30.350 --> 24:31.310
因为我们网页里面

24:31.310 --> 24:31.950
大部分A元素

24:31.950 --> 24:33.470
它都没有这个下滑线

24:33.470 --> 24:34.350
所以一般这些A元素

24:34.350 --> 24:35.390
哪有这个下滑线

24:35.390 --> 24:35.870
对不对

24:35.870 --> 24:36.350
所以说呢

24:36.350 --> 24:38.030
我只把下滑线给它去掉

24:38.030 --> 24:38.990
没问题吧

24:38.990 --> 24:40.990
我一般会在重置样式里面

24:40.990 --> 24:42.510
去做这么一个书写

24:42.510 --> 24:43.710
好那么现在我们来看一下

24:43.710 --> 24:44.510
这个A元素

24:44.510 --> 24:46.030
这个A元素是不是样式营有了

24:46.030 --> 24:46.350
对吧

24:46.350 --> 24:47.710
卡拉是不是设置的样式的

24:47.710 --> 24:48.430
样式来自于哪

24:48.430 --> 24:49.550
直接继承

24:49.550 --> 24:50.350
直接继承复元素

24:50.350 --> 24:50.990
那么这一步

24:50.990 --> 24:51.790
它就把样式

24:51.790 --> 24:52.750
它就不确实了

24:52.750 --> 24:53.150
对吧

24:53.150 --> 24:54.750
它就把样式直接继承下来了

24:54.750 --> 24:56.030
因为这是作者样式表

24:56.030 --> 24:56.990
还会覆盖浏览器等

24:56.990 --> 24:58.750
默认样式表

24:58.750 --> 24:59.710
原来的意思吧

24:59.710 --> 25:01.390
好那么这是关于继承

25:01.390 --> 25:02.830
但是我要告诉大家

25:02.830 --> 25:04.670
并不是所有元素

25:04.670 --> 25:06.750
并不是所有样式都能继承

25:06.750 --> 25:08.910
并不是所有样式

25:08.910 --> 25:09.950
都能继承

25:09.950 --> 25:12.990
能继承的是什么样式呢

25:12.990 --> 25:15.070
是这些样式

25:15.070 --> 25:16.910
继承

25:16.910 --> 25:20.670
和字体相关的样式

25:20.670 --> 25:24.720
可以被继承

25:24.720 --> 25:26.400
比方说什么字体大小

25:26.400 --> 25:27.440
字体内形

25:27.440 --> 25:28.960
以及什么航高

25:28.960 --> 25:29.200
对吧

25:29.200 --> 25:30.240
这跟字体相关的

25:30.240 --> 25:31.520
都可以被继承

25:31.520 --> 25:33.040
像什么宽度高度

25:33.040 --> 25:33.920
还有背景颜色

25:33.920 --> 25:35.200
这些是不会继承的

25:35.200 --> 25:36.080
是不会继承的

25:36.080 --> 25:37.680
这是关于这个继承

25:37.680 --> 25:39.600
因此由于继承这个点

25:39.600 --> 25:41.920
现在我们开始来做一个项目了

25:41.920 --> 25:44.240
接下来有这个继承的特点

25:44.240 --> 25:45.680
所以说我们一般会怎么写呢

25:45.680 --> 25:47.680
我们一般会在body元素里边

25:47.680 --> 25:51.200
把一些常见的

25:51.200 --> 25:54.480
希望被整个网页所继承的

25:54.480 --> 25:56.880
那么这个样式写下来

25:56.880 --> 25:59.440
你看我就写了这么两句带嘛

25:59.440 --> 26:02.080
我们在那个in这个世界写写写写写写里面去

26:02.080 --> 26:07.160
我在body里边写了这么两句带嘛

26:07.160 --> 26:07.960
再读一下啊

26:07.960 --> 26:10.920
这咱们都学过的

26:10.920 --> 26:12.280
设置字体是不是可以

26:12.280 --> 26:14.440
是不是可以被整个网页所继承

26:14.440 --> 26:17.720
整个网页的字体大小是十四个项数

26:17.720 --> 26:19.640
1.5倍的航高

26:19.640 --> 26:20.680
然后呢

26:20.680 --> 26:22.520
字体的内形就在这几个东西选

26:22.520 --> 26:23.880
你第一个没有就选第二个

26:23.880 --> 26:25.160
第二个没有就选第三个

26:25.160 --> 26:26.280
最后一个一定有

26:26.280 --> 26:27.400
最后一个这种写法一定有

26:27.400 --> 26:29.000
那么这种写法是什么意思啊

26:29.000 --> 26:30.200
那你可以去看我的

26:30.200 --> 26:31.720
或者是成哥的这些课程

26:31.720 --> 26:33.160
里面有详细的解释

26:33.160 --> 26:34.920
好那么这个颜色是不是可以继承

26:34.920 --> 26:35.760
那么这样子就来了

26:35.760 --> 26:37.040
整个网页你看一下

26:37.040 --> 26:41.120
整个网页的航高颜色都继承下来了

26:41.120 --> 26:43.440
而且A元素我也是单独处理的过了

26:43.440 --> 26:45.040
然后A元素强制继承

26:45.040 --> 26:46.080
也单独处理过了

26:46.080 --> 26:47.920
那么这样子的颜色就统一了

26:47.920 --> 26:49.760
当然如果说你有特殊的地方

26:49.760 --> 26:51.280
你自己去选中它

26:51.280 --> 26:52.720
给它设置一些特殊的字

26:52.720 --> 26:54.400
因为你选中它过后它就有

26:54.400 --> 26:55.200
它就不确实了

26:55.200 --> 26:57.040
不确实肯定用自己的样式了

26:57.040 --> 26:57.760
对吧

26:57.760 --> 26:59.600
好都是关于这个样式的继承

26:59.600 --> 27:00.080
没问题吧

27:00.080 --> 27:01.120
很简单

27:01.280 --> 27:08.190
我刚刚说的例子

27:08.190 --> 27:10.510
好这是继承

27:10.510 --> 27:12.430
然后咱们继续

27:12.430 --> 27:15.870
那如果说不是所有的样式都能继承

27:15.870 --> 27:17.790
那么这里会找这个问题

27:17.790 --> 27:20.270
就是说如果说不能继承的样式呢

27:20.270 --> 27:23.150
或者说复原素没有写的样式呢

27:23.150 --> 27:24.990
那么这种情况怎么办呢

27:24.990 --> 27:26.350
这种情况下使用默认值

27:26.350 --> 27:30.430
如果无法继承使用默认值

27:30.430 --> 27:32.350
每一个样式都有默认值的

27:32.590 --> 27:34.350
我们后边会讲很多的样式

27:34.350 --> 27:35.550
每一个样式都有默认值的

27:35.550 --> 27:36.350
还会使用默认值

27:36.350 --> 27:38.830
那么咱们讲到具体的样式的时候再说

27:38.830 --> 27:40.670
好这是关于样式这一块

27:40.670 --> 27:41.710
所以样式冲突

27:41.710 --> 27:43.630
样式确实问题都解决了

27:43.630 --> 27:43.950
对不对

27:43.950 --> 27:45.630
而且它是浏览器自动解决的

27:45.630 --> 27:47.390
你只需要去利用它这种特点

27:47.390 --> 27:49.150
然后去完成你的页面就行了

27:49.150 --> 27:50.430
你看我们怎么利用的

27:50.430 --> 27:51.470
给保底设置一个样式

27:51.470 --> 27:51.710
对吧

27:51.710 --> 27:53.470
后边就全部都有了

27:53.470 --> 27:55.310
好接下来再来看

27:55.310 --> 27:57.070
重大问题来了

27:57.070 --> 27:59.150
现在我们已经准备好了

27:59.150 --> 28:01.150
很多知识了

28:01.230 --> 28:02.270
我们现在的问题就是

28:02.270 --> 28:04.110
怎么把它排成这个样子

28:04.110 --> 28:05.550
它现在肯定不是这样子排的

28:05.550 --> 28:05.790
对吧

28:05.790 --> 28:06.750
是这样子排的

28:06.750 --> 28:08.750
我们怎么样把它排成这个样子

28:08.750 --> 28:09.710
那么怎么来排列呢

28:09.710 --> 28:12.830
这需要学习盒子的排列

28:12.830 --> 28:14.430
首先要解释一个东西

28:14.430 --> 28:16.350
什么是盒子

28:16.350 --> 28:17.470
盒子是啥玩意儿

28:18.590 --> 28:19.950
什么是盒子呢

28:19.950 --> 28:22.830
每一个元素在页面中

28:24.030 --> 28:27.230
生成的举行区域

28:28.190 --> 28:31.710
就是一个盒子

28:31.710 --> 28:33.150
盒子叫box

28:33.150 --> 28:34.910
就好像我们做网页

28:34.910 --> 28:36.270
就好像搭机幕一样

28:36.270 --> 28:38.030
一个机幕一个机幕往上搭

28:38.030 --> 28:39.550
这个机幕的形状是什么

28:39.550 --> 28:40.670
全是举行

28:40.670 --> 28:41.390
怎么要举行

28:41.390 --> 28:42.190
就长方形

28:42.190 --> 28:43.870
正方形也是长方形的一种

28:43.870 --> 28:44.510
对不对

28:44.510 --> 28:45.710
好咱们来去看一下

28:45.710 --> 28:47.070
怎么来验证这一点

28:47.070 --> 28:48.350
保底

28:48.350 --> 28:49.710
我们指着保底

28:49.710 --> 28:51.150
你看这个蓝色区域

28:51.150 --> 28:53.150
就是页面上生成的盒子

28:53.150 --> 28:54.590
DIV

28:54.590 --> 28:55.390
蓝色区域

28:55.390 --> 28:56.670
页面上生成的盒子

28:56.830 --> 28:58.270
DIV是不是盒子

28:58.270 --> 28:59.470
对吧

28:59.470 --> 29:00.270
我们调过来吧

29:00.270 --> 29:01.630
调过来看得更加清楚一点

29:01.630 --> 29:03.310
你看DIV

29:03.310 --> 29:05.150
这个DIV是不是一个盒子

29:05.150 --> 29:07.470
这个A11你看是不是个举行区域

29:07.470 --> 29:08.950
UL是不是举行区域

29:08.950 --> 29:10.390
LI是不是举行区域

29:10.390 --> 29:10.870
对不对

29:10.870 --> 29:12.750
你看这个A元素是不是举行区域

29:12.750 --> 29:14.070
都是一些举行区域

29:14.070 --> 29:15.710
那么这些人都叫我盒子

29:15.710 --> 29:16.670
盒子的概念特别简单

29:16.670 --> 29:17.470
就像搭机幕一样

29:17.470 --> 29:20.350
把这个一个盒子一个盒子往往一上堆

29:20.350 --> 29:22.270
然后搭成我们想要的样子

29:22.270 --> 29:23.350
好都是盒子

29:23.350 --> 29:24.830
概念认识清楚了

29:24.830 --> 29:27.030
那么这个盒子

29:27.030 --> 29:28.870
只有一种情况吗

29:28.870 --> 29:30.750
我们可以看到这个LI这个盒子

29:30.750 --> 29:32.230
你看是很长

29:32.230 --> 29:34.630
这个A这个盒子是不是很短

29:34.630 --> 29:35.230
对吧

29:35.230 --> 29:37.390
这个盒子它是有内形的

29:37.390 --> 29:38.990
盒子的内形

29:38.990 --> 29:39.550
它有上

29:39.550 --> 29:41.310
我们现在只学三种内形

29:41.310 --> 29:43.310
一种内形是最变态的

29:43.310 --> 29:46.070
叫做NANG

29:46.070 --> 29:47.990
NANG是什么内形呢

29:47.990 --> 29:50.800
不生成盒子

29:50.800 --> 29:52.000
没有任何盒子

29:52.000 --> 29:53.320
这就是NANG

29:53.320 --> 29:54.440
比方说什么

29:54.480 --> 29:56.480
我们这个网页上哪个盒子是NANG呢

29:56.480 --> 29:57.880
这个Header

29:57.880 --> 29:59.320
你看浏览器的默认样式表里边

29:59.320 --> 30:01.280
所以再加了一个Display NANG

30:01.280 --> 30:02.560
它不生成盒子

30:02.560 --> 30:04.480
凡是不生成盒子的

30:04.480 --> 30:06.680
页面上它都无法显示

30:06.680 --> 30:07.960
是不能显示的

30:07.960 --> 30:09.920
这就是不生成盒子

30:09.920 --> 30:10.480
那有的人说

30:10.480 --> 30:11.840
不生成盒子有啥用了

30:11.840 --> 30:13.000
我都不显示

30:13.000 --> 30:13.560
有什么用了

30:13.560 --> 30:14.600
你看这

30:14.600 --> 30:15.680
你看这

30:15.680 --> 30:17.120
欢迎登录

30:17.120 --> 30:17.840
点了过后

30:17.840 --> 30:19.400
是不是可以弹出来这个

30:19.400 --> 30:20.640
这是不是个盒子

30:20.640 --> 30:22.120
它一开始是不是隐藏的

30:22.120 --> 30:22.880
对吧

30:22.880 --> 30:23.960
一开始是不是不生成

30:24.000 --> 30:25.560
点了过后才生成盒子

30:25.560 --> 30:26.040
对吧

30:26.040 --> 30:27.400
所以说我们一般

30:27.400 --> 30:28.560
这个东西是可以把

30:28.560 --> 30:31.560
有些内容可以一开始隐藏

30:31.560 --> 30:33.560
满足条件之后再显示

30:33.560 --> 30:34.760
那么怎么来满足条件

30:34.760 --> 30:37.160
我们之后讲介事的时候就会说

30:37.160 --> 30:38.240
这是关于第一个盒子

30:38.240 --> 30:38.760
非常简单

30:38.760 --> 30:39.960
把设为NANG就行了

30:39.960 --> 30:41.360
那么盒子内型怎么来设置

30:41.360 --> 30:43.560
就是用Display属性

30:43.560 --> 30:45.440
通过Display属性来设置

30:45.440 --> 30:45.640
好

30:45.640 --> 30:46.840
第二个盒子

30:46.840 --> 30:48.960
叫做INNANG

30:48.960 --> 30:49.960
这个生成的是什么呢

30:49.960 --> 30:51.680
航盒

30:51.680 --> 30:52.800
什么叫航盒

30:52.800 --> 30:55.680
就是不换航排列

30:55.680 --> 30:57.600
这叫不换航排列

30:57.600 --> 31:00.960
那么哪些元素会生成航盒了

31:00.960 --> 31:02.200
默认情况下

31:02.200 --> 31:04.000
浏览器的默认样式表里边

31:04.000 --> 31:05.200
会把这两个元素

31:05.200 --> 31:07.160
我们目前学过了这两个元素

31:07.160 --> 31:09.280
这三个元素EMAG

31:09.280 --> 31:10.280
A元素

31:10.280 --> 31:11.440
十代元素

31:11.440 --> 31:12.760
它会生成航盒

31:12.760 --> 31:14.680
咱们来看一下吧

31:14.680 --> 31:16.480
你看这个A

31:16.480 --> 31:17.840
是不是一个航盒

31:17.840 --> 31:18.600
它没有换航嘛

31:18.600 --> 31:19.000
对吧

31:19.000 --> 31:20.600
它就是它不换航排列

31:20.600 --> 31:21.800
怎么来知道它不换航排列

31:21.800 --> 31:22.960
我们这里复制一下

31:22.960 --> 31:24.040
把这个A复制一下

31:24.040 --> 31:26.480
然后粘贴

31:26.480 --> 31:28.920
粘贴不粘贴到这吧

31:28.920 --> 31:30.400
我再粘贴到这个LI里面

31:30.400 --> 31:31.920
康处加倍粘贴

31:31.920 --> 31:33.440
你看这是不是两个A元素

31:33.440 --> 31:34.720
是不是并排排列的

31:34.720 --> 31:36.040
对不对

31:36.040 --> 31:37.200
这就是航盒

31:37.200 --> 31:38.360
而且你看A元素里面

31:38.360 --> 31:39.280
是不是有Span元素

31:39.280 --> 31:40.720
是不是也是并排排列的

31:40.720 --> 31:43.080
航盒与航盒之间是并排排列的

31:43.080 --> 31:44.320
它不换航

31:44.320 --> 31:45.000
这就是航盒

31:45.000 --> 31:46.200
它的特点

31:46.200 --> 31:47.840
好另外一个特点呢

31:47.840 --> 31:48.760
就是另外一个盒子呢

31:48.760 --> 31:51.040
就是Block

31:51.040 --> 31:53.880
这叫做快盒

31:53.880 --> 31:58.320
那么都是什么独占一航

31:58.320 --> 32:01.080
独占一航

32:01.080 --> 32:02.560
就这么个排列的

32:02.560 --> 32:03.600
它是独占一航

32:03.600 --> 32:04.400
快盒

32:04.400 --> 32:06.000
那么哪些元素是深层快盒呢

32:06.000 --> 32:07.760
像什么H1元素

32:07.760 --> 32:10.000
1到6级表记全是快盒

32:10.000 --> 32:11.240
P元素快盒

32:11.240 --> 32:13.360
DIV快盒

32:13.360 --> 32:14.800
这些东西全是快盒

32:14.800 --> 32:15.800
咱们看一下吧

32:15.800 --> 32:17.680
我们这里呢DIV你看

32:17.680 --> 32:18.560
是不是

32:18.560 --> 32:19.920
甭管它起了多少文字

32:19.920 --> 32:21.000
它一定是换航的

32:21.000 --> 32:22.800
你看下一个DIV

32:22.800 --> 32:23.760
下个DIV在这儿

32:23.760 --> 32:25.440
看边说换航

32:25.440 --> 32:27.760
这是两个盒子之间的区别

32:27.760 --> 32:28.560
那么这两个盒子

32:28.560 --> 32:30.320
是不是固定不变的呢

32:30.320 --> 32:32.600
并不是

32:32.600 --> 32:35.760
A元素它之所以是一个了航盒

32:35.760 --> 32:39.040
是因为浏览器的默认央视表里边

32:39.040 --> 32:42.120
没有去设置这个Display这个属性

32:42.120 --> 32:44.040
没有设置它的默认值

32:44.040 --> 32:46.160
就是航盒

32:46.160 --> 32:47.320
因此呢

32:47.320 --> 32:49.400
如果说你去设置了这个A元素

32:49.400 --> 32:50.720
你看着我先去设置一下

32:52.720 --> 32:53.760
Display

32:53.760 --> 32:56.480
Block

32:56.480 --> 32:57.680
把它变成快盒了对吧

32:57.680 --> 32:58.600
那里看这个A元素

32:58.600 --> 33:00.200
跟下面这个A元素是不是换航排列的

33:01.280 --> 33:03.360
你看这个A元素是不是独占一航

33:03.360 --> 33:04.000
对不对

33:04.000 --> 33:05.960
你看这个A元素是换航了

33:05.960 --> 33:08.680
所以说这个航盒和快盒不是说

33:08.680 --> 33:10.040
哪个元素就必须是航盒

33:10.040 --> 33:11.000
哪个元素必须是快盒

33:11.000 --> 33:11.760
不是了

33:11.760 --> 33:13.320
你是可以随便调的

33:13.320 --> 33:15.280
只是浏览器默认情况下

33:15.280 --> 33:16.880
A元素是一个航盒

33:16.880 --> 33:17.640
这些东西是快盒

33:17.640 --> 33:18.560
你看Li

33:18.560 --> 33:19.360
为什么是快盒

33:19.400 --> 33:20.320
还有这个

33:20.320 --> 33:22.280
ULLI

33:22.280 --> 33:23.960
这两个元素都是快盒

33:23.960 --> 33:24.920
你看ULLI

33:24.920 --> 33:25.920
它为什么凭什么是快盒

33:25.920 --> 33:27.120
你看浏览器的默认样式表

33:28.560 --> 33:29.920
它用的是LiS Atom

33:29.920 --> 33:32.120
LiS Atom其实是快盒的一种

33:32.120 --> 33:33.320
它其实是快盒的一种

33:33.320 --> 33:35.040
你看这个ULO元素是不是Display

33:35.040 --> 33:35.880
Block

33:35.880 --> 33:37.120
浏览器默认样式表

33:37.120 --> 33:38.440
你看这个A起一元素

33:38.440 --> 33:39.680
DisplayBlock

33:39.680 --> 33:40.800
看这个DEV元素

33:40.800 --> 33:41.600
DisplayBlock

33:41.600 --> 33:41.760
对吧

33:41.760 --> 33:43.840
这是浏览器默认样式表也设置的

33:43.840 --> 33:44.920
能不能把它变成航盒了

33:44.920 --> 33:45.760
当然可以

33:45.760 --> 33:47.640
比方说我把这个DEV

33:47.640 --> 33:49.120
我把这两个DEV都变成航盒

33:49.120 --> 33:51.480
你看着Display

33:51.480 --> 33:53.080
浏览

33:53.080 --> 33:55.240
调到DEV

33:55.240 --> 33:56.000
Display

33:56.000 --> 33:57.640
浏览

33:57.640 --> 33:58.480
为什么没变放了

33:58.480 --> 33:59.680
做这里

33:59.680 --> 34:01.480
这里因为它里边有快盒

34:01.480 --> 34:04.240
因为它里边有快盒

34:04.240 --> 34:05.520
我们单独来演

34:05.520 --> 34:05.760
算了

34:05.760 --> 34:07.400
我绝对可以不用演示的

34:07.400 --> 34:08.640
看一下吧

34:08.640 --> 34:09.520
还是看一下吧

34:09.520 --> 34:10.400
我们在这里

34:10.400 --> 34:12.080
两个A起一元素

34:12.080 --> 34:13.320
A起一肯定是快盒嘛

34:13.320 --> 34:14.600
对不对

34:14.600 --> 34:15.320
A起一

34:15.320 --> 34:16.840
第一个标题

34:16.840 --> 34:18.320
然后了A起一

34:18.360 --> 34:19.160
A起二

34:19.160 --> 34:20.960
第二个标题

34:20.960 --> 34:22.040
来吧

34:22.040 --> 34:22.560
保存看一下

34:22.560 --> 34:24.200
你看两个什么换行的

34:24.200 --> 34:24.760
独占一行

34:24.760 --> 34:25.440
你看A起一

34:25.440 --> 34:26.040
A起二

34:26.040 --> 34:26.680
看看A起一

34:26.680 --> 34:27.280
A起二

34:27.280 --> 34:29.360
现在我们把A起一换成航盒

34:29.360 --> 34:31.000
Display银烂

34:31.000 --> 34:32.680
然后A起二呢

34:32.680 --> 34:33.800
换成航盒

34:33.800 --> 34:34.960
Display银烂

34:34.960 --> 34:37.000
你看A起一是被并排排列的

34:37.000 --> 34:37.520
对不对

34:37.520 --> 34:39.720
所以说航盒是并排排列的

34:39.720 --> 34:42.400
快盒是独占一行

34:42.400 --> 34:44.320
这是航盒

34:44.320 --> 34:46.240
它的盒子类型

34:46.240 --> 34:47.960
通过这个Display属性来控制

34:48.000 --> 34:49.680
浏览器有它的默认的行为

34:49.680 --> 34:50.520
默认的值

34:52.000 --> 34:52.920
好

34:52.920 --> 34:54.080
盒子的类型搞定了

34:54.080 --> 34:55.080
然后接下来

34:55.960 --> 34:56.920
如何排列

34:57.640 --> 34:58.400
不

34:58.400 --> 34:59.240
还有一个东西

34:59.240 --> 35:00.360
还有一个盒子的组成

35:02.000 --> 35:03.840
还有一个就是盒子的排列

35:05.680 --> 35:06.560
这两个东西一讲完

35:06.560 --> 35:07.720
今天的核心知识就没了

35:07.720 --> 35:08.280
我们就可以

35:08.280 --> 35:09.600
很多东西都可以做了

35:09.600 --> 35:09.760
好

35:09.760 --> 35:11.160
咱们来看一下

35:11.160 --> 35:12.880
盒子的组成

35:12.880 --> 35:13.880
每一个盒子

35:13.880 --> 35:16.960
它不是说单独的就一个机幕就完了

35:17.000 --> 35:19.200
这个机幕里面是有很多部分的

35:19.200 --> 35:20.680
每一个盒子有很多部分

35:20.680 --> 35:22.160
有哪些部分的

35:22.160 --> 35:23.040
把它分为这个

35:23.040 --> 35:24.080
一个叫做Border

35:24.080 --> 35:24.800
叫做边框

35:26.800 --> 35:29.240
一个叫做Countance

35:29.240 --> 35:31.600
叫Countance

35:31.600 --> 35:32.560
叫做内容

35:33.720 --> 35:35.320
一个叫做Pending

35:35.320 --> 35:36.280
叫做内边距

35:37.240 --> 35:38.840
一个叫做Martin

35:38.840 --> 35:39.680
外边距

35:39.680 --> 35:40.320
一个盒子

35:40.320 --> 35:42.040
它又会有这么四个部分组成

35:43.000 --> 35:43.840
边框内容

35:43.840 --> 35:44.360
内边距

35:44.360 --> 35:45.880
外边距

35:45.880 --> 35:47.680
我这样子是比较方便教学

35:47.680 --> 35:49.320
如果说按照顺序来说的话

35:49.320 --> 35:50.720
应该是Countance

35:50.720 --> 35:51.400
Pending

35:51.400 --> 35:51.960
Border

35:51.960 --> 35:53.320
Martin

35:53.320 --> 35:54.400
不管无所谓吧

35:54.400 --> 35:55.520
我们还在这学

35:56.520 --> 35:57.720
你怎么能理解呢

35:59.240 --> 36:00.240
你可以这样子想象

36:02.200 --> 36:03.880
你们买过快递吧

36:03.880 --> 36:05.080
在网上买过快递

36:05.080 --> 36:06.160
快递是不是个盒子

36:07.480 --> 36:09.880
那个快递的箱子就是边框

36:11.480 --> 36:14.680
快递里边是不是箱子打开过后

36:14.680 --> 36:16.400
是不是有一些什么泡沫

36:16.400 --> 36:17.520
一些什么

36:17.520 --> 36:19.320
一些乱七八糟的填充物

36:19.320 --> 36:20.120
对吧

36:20.120 --> 36:21.440
它吧就是里边的东西

36:21.440 --> 36:23.360
里边你买的东西它隔开

36:23.360 --> 36:24.920
那么它叫做内边距

36:24.920 --> 36:27.080
就是边框到内容之间的

36:27.080 --> 36:27.800
那么内容是什么呢

36:27.800 --> 36:28.680
内容就是你买的东西

36:28.680 --> 36:30.280
比方说你买了一个打火机

36:30.280 --> 36:31.240
一个Ripple

36:31.240 --> 36:33.120
那么它盒子可能很大

36:33.120 --> 36:34.120
但是里边只有很小

36:34.120 --> 36:34.560
对吧

36:34.560 --> 36:37.520
内容它就是里边装东西的那一块

36:37.520 --> 36:38.480
什么叫Martin呢

36:38.480 --> 36:39.560
外边距是什么呢

36:39.560 --> 36:41.080
就是你如果说买了多个快递

36:41.080 --> 36:42.160
有多个盒子

36:42.160 --> 36:43.880
盒子与盒子之间的距离

36:43.920 --> 36:45.280
就是外边距

36:45.280 --> 36:47.680
一个盒子还有这么四个部分组成

36:47.680 --> 36:49.280
咱们来演示一下

36:49.280 --> 36:50.680
为了让你们看得更加清楚

36:50.680 --> 36:53.280
我在TESTV里边单独来开个页面

36:53.280 --> 36:53.880
咱们来写

36:55.600 --> 36:57.280
这里我们写上一个DIV

36:59.120 --> 37:00.760
写上两个DIV吧

37:00.760 --> 37:02.560
写上两个DIV

37:02.560 --> 37:04.240
接下来我们来看一下

37:04.240 --> 37:07.600
我给这两个DIV设置一下样式

37:07.600 --> 37:09.040
我们就写内部样式表

37:09.040 --> 37:11.480
给这两个DIV设置一下样式

37:11.480 --> 37:12.280
说是什么样式呢

37:12.280 --> 37:15.120
首先我们要去给它设置一下边框

37:17.040 --> 37:18.080
边框怎么设置

37:18.080 --> 37:19.640
边框是用这个属性

37:19.640 --> 37:21.000
border的属性

37:21.000 --> 37:22.840
那么它可以写三个

37:22.840 --> 37:24.840
一个是宽度

37:24.840 --> 37:26.440
一个是内形

37:26.440 --> 37:28.680
一个是颜色

37:30.280 --> 37:32.080
边框可以写这么三个东西

37:32.080 --> 37:33.240
咱们来看一下

37:33.240 --> 37:34.560
怎么来设置边框

37:34.560 --> 37:35.080
border

37:36.760 --> 37:37.840
第一个写查

37:37.840 --> 37:40.000
第一个是边框的宽度

37:40.000 --> 37:41.640
比方说两个像素

37:41.680 --> 37:42.320
第二个写查

37:42.320 --> 37:43.520
第二个写边框的内形

37:43.520 --> 37:45.120
是虚线还是实线

37:45.120 --> 37:46.400
比方说写solid

37:46.400 --> 37:48.320
比方说边框是实线

37:48.320 --> 37:49.360
第三个写什么呢

37:49.360 --> 37:50.280
写边框的颜色

37:50.280 --> 37:51.000
比方说红色

37:52.240 --> 37:52.720
你看一下

37:54.600 --> 37:54.920
印象

37:55.960 --> 37:56.840
就出了两根线

37:56.840 --> 37:58.560
为什么出两个线不是盒子呢

37:58.560 --> 38:00.360
因为它的高度是零

38:00.360 --> 38:01.920
它没有内容

38:01.920 --> 38:02.600
对吧

38:02.600 --> 38:03.240
它没有内容

38:03.240 --> 38:04.640
我们给它加一些内容

38:04.640 --> 38:06.520
我们给第一个DIV加一些内容

38:06.520 --> 38:08.520
laury比方说加一个

38:09.360 --> 38:11.520
就写这么一段话

38:11.560 --> 38:12.000
再来

38:12.000 --> 38:12.680
第二个也是

38:12.680 --> 38:13.640
加入一段话

38:15.000 --> 38:16.120
看一下

38:16.120 --> 38:17.440
说两个盒子出来了

38:17.440 --> 38:19.360
第一个DIV是不是一个盒子

38:19.360 --> 38:20.440
第二个DIV是一个盒子

38:20.440 --> 38:21.560
边框是不出来了

38:21.560 --> 38:22.960
边框是两个像素

38:22.960 --> 38:23.960
第一个参数

38:23.960 --> 38:25.000
像素值越高

38:25.000 --> 38:27.440
你看边框尺寸是不是越大

38:27.440 --> 38:28.440
看没

38:28.440 --> 38:29.960
就第一个参数的意思

38:29.960 --> 38:30.880
solid是什么意思呢

38:30.880 --> 38:32.440
solid表示边框内形

38:32.440 --> 38:35.120
内形我们可以有solid实现

38:35.120 --> 38:36.560
然后大显

38:36.560 --> 38:37.360
大显

38:37.360 --> 38:38.400
虚线

38:38.400 --> 38:39.960
虚线有点难看

38:39.960 --> 38:40.840
两个像素

38:40.880 --> 38:42.120
你看这是不是虚线

38:42.120 --> 38:42.800
对不对

38:42.800 --> 38:44.360
还有什么doughty的点

38:44.360 --> 38:46.040
doughty的

38:46.040 --> 38:47.000
是不是一点一点的

38:47.000 --> 38:48.160
对吧

38:48.160 --> 38:49.240
solid的

38:49.240 --> 38:51.080
我们平时用的最多的就是solid的

38:51.080 --> 38:51.800
这是边框

38:51.800 --> 38:52.400
对不对

38:52.400 --> 38:55.400
如果说我只希望设置一个方向上的边框

38:55.400 --> 38:56.560
不想四周都有

38:56.560 --> 38:57.120
那怎么办呢

38:57.120 --> 38:57.800
可以

38:57.800 --> 38:58.920
可以这样子写

38:58.920 --> 39:01.560
border方向

39:01.560 --> 39:03.200
写法还是一样

39:03.200 --> 39:06.200
宽度内形颜色

39:07.600 --> 39:08.720
还是写法还是一样

39:08.720 --> 39:09.920
那么这个方向怎么写

39:10.000 --> 39:11.080
方向有四个方向

39:11.080 --> 39:12.360
一个是top

39:12.360 --> 39:13.720
上边框

39:13.720 --> 39:14.960
一个是right

39:14.960 --> 39:15.640
右边框

39:15.640 --> 39:19.120
一个是button

39:19.120 --> 39:19.720
下边框

39:19.720 --> 39:20.480
一个是left

39:20.480 --> 39:22.160
左边框

39:22.160 --> 39:23.360
来看一下

39:23.360 --> 39:24.400
比方我们这个border

39:24.400 --> 39:25.480
我们这样子写

39:25.480 --> 39:26.920
border bottom

39:26.920 --> 39:28.040
是不是只有下边框

39:28.040 --> 39:29.840
下边框两个像素solid

39:29.840 --> 39:31.000
rid

39:31.000 --> 39:31.880
你看

39:31.880 --> 39:33.160
第一个盒子

39:33.160 --> 39:34.080
是不是下边框

39:34.080 --> 39:35.360
这个盒子是不是有个下边框

39:35.360 --> 39:37.360
一般我们把两个DV都选中了

39:37.360 --> 39:38.760
对吧

39:38.960 --> 39:39.200
对

39:39.200 --> 39:41.320
老认识叫做乱数假文

39:41.320 --> 39:42.640
乱数假文

39:42.640 --> 39:44.160
听着简单就可以了

39:44.160 --> 39:45.720
你下来肯定要边看

39:45.720 --> 39:46.480
边看我的视频

39:46.480 --> 39:47.200
边去练习

39:47.200 --> 39:47.880
肯定要练习

39:47.880 --> 39:48.840
练习肯定要花点时间

39:48.840 --> 39:49.680
这毫无疑问的

39:49.680 --> 39:52.240
所有人的学习都是这样过来的

39:52.240 --> 39:52.400
好

39:52.400 --> 39:54.480
然后我们再来看

39:54.480 --> 39:55.120
这个盒子

39:55.120 --> 39:55.800
我们如果说

39:55.800 --> 39:57.520
我们要在浏览器里面调试的话

39:57.520 --> 39:58.760
你会发现

39:58.760 --> 39:59.960
我们的浏览器里面

39:59.960 --> 40:01.960
非常贴心的

40:01.960 --> 40:03.160
根本出来这么一个东西

40:03.160 --> 40:04.960
你看是不是盒子

40:04.960 --> 40:06.040
你看这个border

40:06.040 --> 40:07.120
边框这一部分

40:07.120 --> 40:08.320
指着这个DV

40:08.320 --> 40:09.360
边框这一部分

40:09.360 --> 40:10.560
你看没

40:10.560 --> 40:11.360
是不是两个像素

40:11.360 --> 40:13.040
他告诉你左边框没有

40:13.040 --> 40:14.240
右边框没有

40:14.240 --> 40:15.480
border上边框没有

40:15.480 --> 40:17.000
下边框是不是两个像素

40:17.000 --> 40:17.600
对不对

40:17.600 --> 40:18.360
他非常贴心的

40:18.360 --> 40:20.720
在把个盒模型给我显示出来了

40:20.720 --> 40:22.120
这是边框

40:22.120 --> 40:23.760
边框你们学习完了

40:23.760 --> 40:24.760
边框完了过后

40:24.760 --> 40:27.520
我们接下来是内容

40:27.520 --> 40:28.080
内容是什么

40:28.080 --> 40:30.000
内容你不用去设置任何东西

40:30.000 --> 40:32.000
就是它里面写的东西

40:32.000 --> 40:32.640
什么叫内容

40:32.640 --> 40:35.800
就是说我们元素内部的东西

40:35.800 --> 40:37.560
全是在内容范围内

40:37.560 --> 40:40.160
元素内部的东西

40:40.160 --> 40:43.760
都在内容范围内

40:43.760 --> 40:44.960
都是在内容范围内的

40:44.960 --> 40:46.920
你看这两个是不是在内容范围内的

40:46.920 --> 40:47.480
这个DVA

40:47.480 --> 40:48.520
它里面有很多文字

40:48.520 --> 40:50.000
文字放到哪儿的

40:50.000 --> 40:51.520
它不能跑到边框那边去

40:51.520 --> 40:53.440
它放到内容部分的

40:53.440 --> 40:56.560
内容部分我们是可以控制它的尺寸的

40:56.560 --> 40:57.480
怎么来控制

40:57.480 --> 40:59.760
是通过这个width

40:59.760 --> 41:00.280
设置什么

41:00.280 --> 41:02.400
设置宽度

41:02.400 --> 41:03.880
Height

41:03.880 --> 41:04.360
设置什么

41:04.360 --> 41:05.760
设置高度

41:05.760 --> 41:07.320
是通过这两个属性来控制

41:07.320 --> 41:09.280
内容部分的区域的尺寸的

41:09.280 --> 41:10.120
如果说你不写的话

41:10.120 --> 41:10.920
它就自动的

41:10.920 --> 41:12.840
自动根据内容来增长

41:12.840 --> 41:14.400
好 咱们看一下

41:14.400 --> 41:16.480
这个DVA里面

41:16.480 --> 41:19.120
我们就直接在这里测试

41:19.120 --> 41:20.200
找这个DVA

41:20.200 --> 41:21.800
我在这里是不是个内联选择器

41:21.800 --> 41:22.360
对吧

41:22.360 --> 41:22.960
行内选择器

41:22.960 --> 41:24.720
我在这里设置一个宽度

41:24.720 --> 41:26.200
我们把边框试读加上

41:26.200 --> 41:30.600
试读加上看得清楚一点

41:30.600 --> 41:31.560
再来

41:31.560 --> 41:32.320
DVA

41:32.320 --> 41:33.400
设置一个宽度

41:33.400 --> 41:35.840
宽度比方说我们设置的是多少

41:35.880 --> 41:39.480
设置的是100个像素

41:39.480 --> 41:41.120
所以宽度变窄了

41:41.120 --> 41:41.440
对不对

41:41.440 --> 41:42.760
所以宽度变窄了

41:42.760 --> 41:44.840
然后再来设置一个高度

41:44.840 --> 41:47.240
也是100个像素

41:47.240 --> 41:48.120
看到有什么问题没

41:48.120 --> 41:51.680
我们把第二个DVA删掉

41:51.680 --> 41:53.440
看到有什么问题没

41:53.440 --> 41:54.640
这个时候它就没办法了

41:54.640 --> 41:55.440
一把逼疯了

41:55.440 --> 41:56.120
真的

41:56.120 --> 41:58.320
一把逼到没有活路了

41:58.320 --> 42:00.120
它里面那么多文字

42:00.120 --> 42:02.800
但是你只给它100的内容宽度

42:02.800 --> 42:03.600
注意看

42:03.600 --> 42:04.280
看核模型

42:04.280 --> 42:06.400
里面是不是100×100

42:06.400 --> 42:08.400
内容部分是100×100

42:08.400 --> 42:10.280
一把逼疯了

42:10.280 --> 42:11.080
宽度只有100

42:11.080 --> 42:11.680
高度只有100

42:11.680 --> 42:12.680
这么多东西怎么办

42:12.680 --> 42:13.560
它只能溢出了

42:13.560 --> 42:14.200
是不是溢出了

42:14.200 --> 42:15.240
跑出去了

42:15.240 --> 42:15.920
对不对

42:15.920 --> 42:17.160
跑出去还能看得见吗

42:17.160 --> 42:18.920
还能看得见

42:18.920 --> 42:20.360
那如果我希望它跑出去

42:20.360 --> 42:22.760
看不见怎么办

42:22.760 --> 42:26.200
有一个东西叫做overflow

42:26.200 --> 42:28.040
还得

42:28.040 --> 42:29.080
这东西什么意思

42:29.080 --> 42:31.840
表示溢出隐藏

42:31.840 --> 42:36.480
就这么个意思

42:36.480 --> 42:37.680
咱们来试一下

42:37.680 --> 42:39.840
我们这里写个overflow

42:39.840 --> 42:40.560
它摸的是什么

42:40.560 --> 42:41.320
摸的是微热波

42:41.320 --> 42:42.080
微热波什么意思

42:42.080 --> 42:42.920
可以显示的

42:42.920 --> 42:44.480
overflow就表示出去了

42:44.480 --> 42:45.800
跑出去了

42:45.800 --> 42:46.800
微热波要什么意思

42:46.800 --> 42:47.480
可以显示

42:47.480 --> 42:49.160
它摸的就是这个字

42:49.160 --> 42:51.000
把写成hide

42:51.000 --> 42:52.160
所以隐藏了

42:52.160 --> 42:53.800
一出就隐藏了

42:53.800 --> 42:54.480
对不对

42:54.480 --> 42:57.720
这就是这个东西可以控制

42:57.720 --> 42:59.600
这是宽度和高度

42:59.600 --> 43:01.000
另外我再说一点

43:01.040 --> 43:04.040
宽度这里还可以写百分比

43:04.040 --> 43:05.640
宽度还可以写百分比

43:05.640 --> 43:07.720
怎么写呢

43:07.720 --> 43:09.880
宽度百分比

43:09.880 --> 43:13.390
它可以写百分比

43:13.390 --> 43:15.550
百分比

43:15.550 --> 43:17.110
百分比是什么

43:17.110 --> 43:19.030
你要知道一个元素

43:19.030 --> 43:22.110
它的活动区域是它的副元素

43:22.110 --> 43:22.950
你看DIV

43:22.950 --> 43:24.270
它的活动区域是不是副元素

43:24.270 --> 43:25.350
body

43:25.350 --> 43:26.590
这个百分比指的是

43:26.590 --> 43:30.710
占body内容区域的百分之多少

43:30.710 --> 43:32.110
指的是这么个意思

43:32.110 --> 43:36.670
比方说DIV宽度给它写百分之半

43:36.670 --> 43:38.190
什么意思

43:38.190 --> 43:39.950
你看body

43:39.950 --> 43:41.470
就是我们整个网页

43:41.470 --> 43:42.670
整个网页的内容

43:42.670 --> 43:45.270
是不是322.182

43:45.270 --> 43:47.230
322.182

43:47.230 --> 43:49.150
然后DIV

43:49.150 --> 43:51.750
你看它的宽度

43:51.750 --> 43:53.430
是不是322.182

43:53.430 --> 43:54.870
是不是一样的

43:54.870 --> 43:55.550
对不对

43:55.550 --> 43:57.270
所以宽度指的是内容区域

43:57.270 --> 43:59.230
占副元素内容的百分比

43:59.230 --> 44:00.110
咱们来看一下

44:00.110 --> 44:01.270
我们这里如果说

44:01.310 --> 44:02.830
控制这个东西的移动

44:02.830 --> 44:04.470
控制个网页大小

44:04.470 --> 44:05.910
body变宽了

44:05.910 --> 44:07.470
是不是它也跟着变宽了

44:07.470 --> 44:07.950
对不对

44:07.950 --> 44:09.790
它就是百分比的好处

44:09.790 --> 44:11.030
如果说你写死的话

44:11.030 --> 44:13.030
那么它不会写出变化的

44:13.030 --> 44:14.390
因此我们可以写个百分比

44:14.390 --> 44:16.670
可以让它随着副元素的

44:16.670 --> 44:18.830
尺寸变化和变化

44:18.830 --> 44:19.430
没了意思吧

44:19.430 --> 44:22.230
这就是百分比

44:22.230 --> 44:23.270
百分之50也可以

44:23.270 --> 44:23.950
咱们来看一下

44:23.950 --> 44:26.390
百分之50

44:26.390 --> 44:27.790
你看百分之50

44:27.790 --> 44:28.710
始终占一半

44:28.710 --> 44:30.590
你看看始终占一半

44:30.590 --> 44:31.310
对不对

44:31.310 --> 44:33.030
始终占一半

44:33.030 --> 44:33.230
好

44:33.230 --> 44:33.830
这是这一个

44:35.830 --> 44:37.190
接下来我们再来看

44:37.190 --> 44:38.630
还有一些东西要说

44:38.630 --> 44:39.670
还用了这里边

44:39.670 --> 44:41.350
我们还可以写一个这个东西

44:43.030 --> 44:45.270
min位置

44:45.270 --> 44:45.910
什么意思

44:45.910 --> 44:48.550
表示最小宽度

44:48.550 --> 44:51.510
通常和百分比混用

44:54.030 --> 44:54.550
什么意思

44:56.150 --> 44:58.310
看着我们这样子来玩

44:58.310 --> 44:59.510
把这个DIV去掉

44:59.510 --> 45:01.350
这个页面我们都是用来测试的

45:01.350 --> 45:02.950
来讲解知识点的

45:02.950 --> 45:03.870
这个包着不要了

45:03.870 --> 45:05.110
这个包着写着吧

45:05.110 --> 45:06.350
就写着吧

45:06.350 --> 45:09.870
然后我们的宽度不是100%吗

45:09.870 --> 45:11.390
对不对

45:11.390 --> 45:13.110
你看宽度是不是100%

45:13.110 --> 45:15.750
它始终是跟着副元素的宽度来的

45:15.750 --> 45:16.790
对不对

45:16.790 --> 45:17.390
好

45:17.390 --> 45:19.470
那么现在我们要做这么一件事

45:19.470 --> 45:20.870
我说这个东西不能太小

45:20.870 --> 45:21.790
太小就太夸张了

45:21.790 --> 45:22.950
一看太小就不好看了

45:22.950 --> 45:24.030
这样就不好看了

45:24.030 --> 45:25.110
所以说我们可以给它设置一个

45:25.190 --> 45:26.270
最小宽度

45:27.430 --> 45:28.910
min位置

45:28.910 --> 45:31.350
比方说这是CSS3的属性

45:31.350 --> 45:32.310
叫做最小宽度

45:32.310 --> 45:34.590
比方说最小宽度就是300

45:34.590 --> 45:35.270
你不能太小了

45:35.270 --> 45:36.950
太小效果实在是找不住了

45:36.950 --> 45:37.710
因此怎么办

45:37.710 --> 45:38.990
它会出现什么现象

45:38.990 --> 45:39.750
你看

45:39.750 --> 45:41.110
减少减少减少

45:42.390 --> 45:42.750
减少

45:43.870 --> 45:45.630
到300公尺不动了

45:45.630 --> 45:46.550
不再减少了

45:46.550 --> 45:47.910
我不跟你了

45:47.910 --> 45:50.350
你看这里是不是出现了横向滚动条

45:50.350 --> 45:51.870
对不对

45:51.870 --> 45:53.390
那么这个东西有什么用的

45:53.390 --> 45:54.550
这个东西

45:54.550 --> 45:56.110
这个东西非常有用

45:56.110 --> 45:59.390
但是我们平时写下极其简单

45:59.390 --> 46:01.670
就是有些网页

46:01.670 --> 46:03.190
它不能太小了

46:03.190 --> 46:04.270
你看这个网页

46:04.270 --> 46:06.150
它不能太小了

46:06.150 --> 46:07.390
所以小到一定程度过后

46:07.390 --> 46:08.710
它就不能太小了

46:08.710 --> 46:09.870
在小就没法看了

46:09.870 --> 46:11.270
这个网页就没法看了

46:11.270 --> 46:12.390
然后有些人说移动端

46:12.390 --> 46:12.790
手机端

46:12.790 --> 46:14.750
手机端是另外的一套客厂

46:14.750 --> 46:16.030
你看我们网这种要的官网

46:16.030 --> 46:16.710
你去官网看

46:16.710 --> 46:17.790
它一定是这样子的

46:17.790 --> 46:18.950
它不能太小了

46:18.950 --> 46:21.230
我们做这个网页是专门为电脑准备的

46:21.230 --> 46:22.150
你不能太小

46:22.150 --> 46:23.430
因此我们可以怎么来玩呢

46:23.470 --> 46:24.750
我们回到这个英德克社页面

46:24.750 --> 46:26.790
我们一般可以这样子来写

46:26.790 --> 46:27.310
body里面

46:27.310 --> 46:30.630
我们可以给它一个最小宽度命位置

46:30.630 --> 46:31.750
多少呢

46:31.750 --> 46:34.110
我这里给的是1280

46:34.110 --> 46:35.790
1280个相处

46:35.790 --> 46:37.950
你最多只能这么小了

46:37.950 --> 46:39.190
给body最小宽度

46:39.190 --> 46:41.950
那么这样子就会形成一个效果

46:41.950 --> 46:46.610
你看到英德克社里面来

46:46.610 --> 46:49.330
我们给body一个边框

46:49.330 --> 46:50.810
大家看得清楚一点

46:50.850 --> 46:52.930
一个两个像素

46:52.930 --> 46:53.850
solid

46:53.850 --> 46:54.210
red

46:54.210 --> 46:54.570
红色

46:56.570 --> 46:56.890
你看

46:58.450 --> 46:58.850
放下来

47:00.490 --> 47:01.050
现在没问题

47:01.050 --> 47:01.250
对吧

47:01.250 --> 47:02.290
成满的

47:02.290 --> 47:04.330
然后我们变小变小变小

47:04.330 --> 47:04.770
你看

47:04.770 --> 47:06.690
是不是不听我们指挥了

47:06.690 --> 47:07.730
它出现了横向股东条了

47:07.730 --> 47:08.890
它只能这么小了

47:08.890 --> 47:10.370
只能1280个像素

47:10.370 --> 47:11.930
不能太小了

47:11.930 --> 47:13.370
这就是它的含义

47:13.370 --> 47:14.130
看没

47:14.130 --> 47:15.410
这不能太小了

47:15.410 --> 47:16.250
就这么个意思

47:16.250 --> 47:17.010
这是最小宽度

47:17.010 --> 47:18.490
非常有用

47:18.490 --> 47:20.170
这是盒子里边的

47:20.210 --> 47:21.090
这个部分

47:21.090 --> 47:22.210
内容部分

47:22.210 --> 47:22.690
就讲完了

47:22.690 --> 47:23.730
边框内容搞定了

47:23.730 --> 47:24.330
对吧

47:24.330 --> 47:26.770
然后这两个也很有意思

47:26.770 --> 47:27.810
一个是内边距

47:27.810 --> 47:28.610
内边距什么

47:28.610 --> 47:31.570
指的是边框到内容的距离

47:31.570 --> 47:32.250
你看着

47:34.170 --> 47:34.850
我们到这边来

47:37.290 --> 47:38.330
现在我们去设置一下

47:38.330 --> 47:39.650
这个DV的内边距

47:39.650 --> 47:40.330
那边有什么设置

47:40.330 --> 47:41.370
偏近

47:41.370 --> 47:42.290
直接设置就行了

47:42.290 --> 47:43.810
跟边框的设置方式是一样的

47:43.810 --> 47:44.690
它只有一个尺寸

47:44.690 --> 47:45.410
没有颜色

47:45.410 --> 47:47.170
只有尺寸

47:47.170 --> 47:49.910
50个像素

47:49.910 --> 47:50.230
你看

47:51.230 --> 47:53.630
我们把这个名位尺区调

47:56.030 --> 47:56.510
你看一下

47:57.830 --> 47:58.670
是不是到内容之间

47:58.670 --> 48:00.230
有50个像素的距离了

48:00.230 --> 48:01.350
对不对

48:01.350 --> 48:02.390
你看

48:02.390 --> 48:03.750
我们的边框到内容之间

48:03.750 --> 48:04.430
是不是有50个像素

48:04.430 --> 48:05.470
你看这里

48:05.470 --> 48:06.270
这个盒子里边

48:06.270 --> 48:08.390
这个盒模型里边看得非常清楚

48:08.390 --> 48:10.030
你指的它是不是绿色区域

48:10.030 --> 48:13.110
绿色区域就是我们的边框的那一部分

48:13.110 --> 48:14.350
就是内边距

48:14.350 --> 48:15.550
就是填充物

48:15.550 --> 48:17.390
我们的箱子跟内容之间的填充物

48:17.390 --> 48:18.230
就这一部分

48:18.230 --> 48:19.870
当然这部分也可以设置方向

48:19.990 --> 48:21.070
比方说我们Pending

48:22.950 --> 48:23.830
比方说我们这里

48:23.830 --> 48:25.870
Pending Left

48:25.870 --> 48:26.710
左边

48:26.710 --> 48:28.790
左内边距50个像素

48:28.790 --> 48:30.790
你看上边是不是不受影响

48:30.790 --> 48:31.750
下边也不受影响

48:31.750 --> 48:31.990
对吧

48:31.990 --> 48:33.030
只有左边受影响

48:33.030 --> 48:34.350
可以单独设置

48:34.350 --> 48:36.950
然后Pending Right

48:36.950 --> 48:37.990
Pending Top

48:37.990 --> 48:38.910
Pending Top

48:39.830 --> 48:41.150
50个像素

48:41.150 --> 48:41.590
看呗

48:41.590 --> 48:41.990
是不是

48:43.150 --> 48:44.390
只有这两个方向受影响

48:44.390 --> 48:44.670
对不对

48:44.670 --> 48:45.790
就是Pending内边距

48:45.790 --> 48:46.390
非常简单

48:47.390 --> 48:50.430
然后大家发现一个神奇的线下面

48:50.430 --> 48:53.890
刚才出现了一个问题

48:53.890 --> 48:56.610
Pending 50个像素

48:56.610 --> 48:57.690
发现个什么问题呢

48:59.210 --> 49:00.690
它怎么出现横向滚动条了

49:01.850 --> 49:02.890
以后谁能回答我

49:02.890 --> 49:04.010
它怎么来出

49:04.010 --> 49:06.010
怎么出现横向滚动条了

49:06.010 --> 49:07.210
不是百分之百的宽度吗

49:07.210 --> 49:08.090
刚好撑满吗

49:09.210 --> 49:09.810
它为什么会出

49:09.810 --> 49:10.570
这个我已经够了

49:10.570 --> 49:11.370
我已经去掉了

49:11.370 --> 49:12.490
这个名位是我已经去掉了

49:13.730 --> 49:15.130
只有这两个三个属性

49:15.130 --> 49:15.610
宽度

49:15.610 --> 49:16.090
Border

49:16.090 --> 49:16.970
Pending

49:17.010 --> 49:18.370
凭什么出现了横向滚动条呢

49:19.930 --> 49:20.330
对

49:20.330 --> 49:21.850
盒子它被称大了

49:21.850 --> 49:22.730
你想啊

49:22.730 --> 49:24.210
我们内容部分

49:24.210 --> 49:24.770
是不是

49:24.770 --> 49:26.370
我们这个宽度是设置的谁

49:26.370 --> 49:28.250
设置的是内容部分

49:28.250 --> 49:31.050
内容部分跟我们的网页刚好一样

49:31.050 --> 49:33.210
你看内容部分跟我们的网页刚好一样

49:33.210 --> 49:33.970
对吧

49:33.970 --> 49:35.330
但是加上Pending

49:35.330 --> 49:37.810
加上边框是不是变大了

49:37.810 --> 49:38.170
对不对

49:38.170 --> 49:39.250
是不是变大了

49:39.250 --> 49:41.050
那么这个时候呢就很麻烦了

49:41.050 --> 49:42.250
如果说很多时候呢

49:42.250 --> 49:43.490
我们视觉效果上

49:43.490 --> 49:44.690
都希望是整个盒子

49:44.690 --> 49:45.290
就是边框

49:45.330 --> 49:47.330
包含边框整个这个盒子

49:47.330 --> 49:48.490
它是百分之百

49:48.490 --> 49:51.050
而不是说只是那种百分之百

49:51.050 --> 49:53.210
有的时候我们会有这样的需求

49:53.210 --> 49:54.570
那么这样子那就麻烦了

49:54.570 --> 49:56.650
我要去算就算起来很麻烦

49:56.650 --> 49:58.170
我要是整个宽度

49:58.170 --> 50:00.010
要减去一个左右两个像

50:00.010 --> 50:01.530
左右两个像就是四个像素

50:01.530 --> 50:01.970
对吧

50:01.970 --> 50:03.650
边框每个左边框两个像素

50:03.650 --> 50:05.650
右边框两个像素四个像素

50:05.650 --> 50:07.450
然后左那边具五十个像素

50:07.450 --> 50:08.570
右那边具五十个像素

50:08.570 --> 50:09.290
是不是一百

50:09.290 --> 50:11.730
要去算就特别麻烦

50:11.730 --> 50:12.610
那么于是呢

50:12.610 --> 50:13.650
他为了解决这个问题

50:13.650 --> 50:15.250
给我们提供了这么一个属性

50:15.250 --> 50:16.850
在内容部分

50:16.850 --> 50:19.810
就是给我们这里写个额外的属性

50:19.810 --> 50:21.890
就写到这吧

50:21.890 --> 50:22.930
提供了这么一个属性

50:22.930 --> 50:24.290
叫box setting

50:24.290 --> 50:27.610
这也是CSS3的属性

50:27.610 --> 50:28.530
默认是什么呢

50:28.530 --> 50:30.130
他默认就是康天子

50:30.130 --> 50:31.130
表示什么意思

50:31.130 --> 50:35.760
设置宽高时

50:35.760 --> 50:40.880
设置的是内容部分

50:40.880 --> 50:41.880
以设置宽高

50:41.880 --> 50:43.040
指的是哪一部分的宽高

50:43.040 --> 50:44.360
指的是内容部分的宽高

50:44.400 --> 50:47.000
指它的默认值

50:47.000 --> 50:49.400
所以说他就为什么会出现这种现象

50:49.400 --> 50:50.280
还有一个指呢

50:50.280 --> 50:52.440
他叫做border

50:52.440 --> 50:53.000
什么意思

50:53.000 --> 50:56.480
指的是设置宽高时

50:56.480 --> 51:00.880
设置的是整个边框部分

51:00.880 --> 51:04.980
这个东西非常有用

51:04.980 --> 51:06.460
那么我们来看一下

51:06.460 --> 51:08.060
我们只需要加一个属性

51:08.060 --> 51:09.660
box setting

51:09.660 --> 51:10.540
border box

51:10.540 --> 51:11.980
是不是一下搞定了

51:11.980 --> 51:13.700
现在这个宽度是不是指的是

51:13.740 --> 51:16.580
整个边框部分

51:16.580 --> 51:19.780
指的是这个部分

51:19.780 --> 51:20.780
这个部分

51:20.780 --> 51:21.620
包含边框

51:21.620 --> 51:22.500
包含内边距

51:22.500 --> 51:24.460
包含内容整个这一块

51:24.460 --> 51:25.620
百分之百

51:25.620 --> 51:28.100
然后你自己去根据内边距

51:28.100 --> 51:28.820
根据边框

51:28.820 --> 51:30.660
自己去够算出内容部分的宽度

51:30.660 --> 51:31.340
自己去算

51:31.340 --> 51:32.580
我不管你的

51:32.580 --> 51:34.300
他自动给你算出来

51:34.300 --> 51:35.620
这样子什么更加方便了

51:35.620 --> 51:36.300
对不对

51:36.300 --> 51:38.540
有的时候这东西非常非常有用

51:38.540 --> 51:40.220
帮助我们去写样式的时候

51:40.220 --> 51:43.180
要调一个尺寸的时候非常有用

51:43.220 --> 51:44.860
好多就是核模型

51:46.020 --> 51:49.140
最后我们看一下margin外边距

51:49.140 --> 51:51.820
外边距就是合制与合制之间的距离

51:51.820 --> 51:52.300
来吧

51:52.300 --> 51:54.020
我们又回到这个页面

51:54.020 --> 51:55.460
这里有一个dav

51:55.460 --> 51:57.500
你看我们这里下面还有一个dav

51:57.500 --> 52:02.680
把这个名位去掉

52:02.680 --> 52:04.240
现在让我们来调整

52:04.240 --> 52:09.320
调整第一个dav的margin

52:09.320 --> 52:10.320
我们从零开始

52:10.320 --> 52:11.280
你们自己去观察一下

52:11.280 --> 52:12.000
观察一下页面

52:12.000 --> 52:16.670
我们挨载的增加

52:16.670 --> 52:18.310
你看着

52:18.310 --> 52:19.150
还可以是复苏

52:19.310 --> 52:21.150
复苏交铁在一起了

52:21.150 --> 52:24.340
增加

52:24.340 --> 52:25.780
都出现很像滚动条了

52:25.780 --> 52:29.300
因为右边的margin显示不出来了

52:29.300 --> 52:33.140
增加

52:33.140 --> 52:35.540
那么我们只调了第一个dav

52:35.540 --> 52:37.020
第一个dav的margin是不是增加了

52:37.020 --> 52:40.340
你它的边缘的距离越来越远了

52:40.340 --> 52:41.340
这就是margin

52:41.340 --> 52:42.620
当然margin也有方向

52:42.620 --> 52:45.940
比方说我们可以写margin left

52:45.940 --> 52:47.820
你左边有80个相处

52:47.820 --> 52:50.420
或者是margin top

52:50.460 --> 52:52.540
你上边有82个相处

52:52.540 --> 52:53.260
对吧

52:53.260 --> 52:55.940
所以写了这么一个东西

52:55.940 --> 52:58.500
这就是外编句

52:58.500 --> 52:59.780
ok

52:59.780 --> 53:02.900
这就是每一个元素都会增长合作

53:02.900 --> 53:04.860
每一个合作它都有这么几个部分

53:04.860 --> 53:06.940
可以让你去调整

53:06.940 --> 53:10.320
但是有特殊情况

53:10.320 --> 53:11.080
什么特殊情况

53:11.080 --> 53:15.000
航河的特殊情况

53:15.000 --> 53:19.710
什么特殊情况的航河

53:19.710 --> 53:24.950
就是航河无法设置宽高

53:24.990 --> 53:25.430
真的吗

53:25.430 --> 53:26.310
我们来看一下

53:26.310 --> 53:28.430
航河不能设置宽高吗

53:28.430 --> 53:31.470
我们在这里写个A元素

53:31.470 --> 53:32.670
A元素随便写个吧

53:32.670 --> 53:33.670
它不就是航河吗

53:33.670 --> 53:34.670
对不对

53:34.670 --> 53:34.870
好

53:34.870 --> 53:35.870
咱们来看一下

53:35.870 --> 53:37.190
为了让你们看得更清楚

53:37.190 --> 53:38.510
我们给它加一个背景颜色

53:38.510 --> 53:39.390
我们上一课学了

53:39.390 --> 53:41.390
背景颜色叫background

53:41.390 --> 53:42.550
背景颜色

53:42.550 --> 53:44.470
颜色来给它写个红色

53:44.470 --> 53:46.310
背景颜色会覆盖边框范围

53:46.310 --> 53:47.790
比方说我们在这里写个红

53:47.790 --> 53:48.830
背景颜色

53:48.830 --> 53:52.390
背景颜色我们写个灰色

53:52.390 --> 53:54.230
888

53:54.390 --> 53:54.910
你看

53:54.910 --> 53:55.350
是什么灰色

53:55.350 --> 53:55.510
对吧

53:55.510 --> 53:57.390
它会覆盖边框范围内

53:57.390 --> 53:57.510
好

53:57.510 --> 53:58.430
你看一下这个A元素

53:58.430 --> 53:59.950
A元素是不是红色

53:59.950 --> 54:00.950
这个A元素太丑了

54:00.950 --> 54:02.070
我们改一下吧

54:02.070 --> 54:04.030
把文字颜色给它设为白色

54:04.030 --> 54:05.590
白色是3个F

54:05.590 --> 54:07.230
3个F就是白色

54:07.230 --> 54:08.270
3个0就是黑色

54:08.270 --> 54:10.070
这些常见的纸

54:10.070 --> 54:11.590
有时候不是说6个吗

54:11.590 --> 54:13.910
如果说6个也可以

54:13.910 --> 54:14.790
3个是简写

54:14.790 --> 54:15.910
就是说每两个

54:15.910 --> 54:17.110
如果说你完全一样

54:17.110 --> 54:18.310
两个F完全一样

54:18.310 --> 54:19.830
你可以只写一个

54:19.830 --> 54:21.790
它是简写

54:21.790 --> 54:22.790
3个F什么意思

54:22.790 --> 54:24.070
就是所有的光

54:24.070 --> 54:26.030
所有的颜色全部调到最大

54:26.030 --> 54:26.910
你只能渲晕的

54:26.910 --> 54:27.230
对不对

54:27.230 --> 54:28.790
只能渲晕的一片空白

54:28.790 --> 54:30.590
你看那个什么核弹爆炸

54:30.590 --> 54:31.230
对吧

54:31.230 --> 54:33.110
这个亮度就非常非常高了

54:33.110 --> 54:34.430
就是白色

54:34.430 --> 54:35.910
0就所有的颜色都没有

54:35.910 --> 54:37.310
那就吸收光了

54:37.310 --> 54:37.510
对吧

54:37.510 --> 54:38.510
没有光反射出来

54:38.510 --> 54:39.910
那就是黑色

54:39.910 --> 54:43.630
来看这个A元素是不是出来了

54:43.630 --> 54:44.910
你看我咱们这个技术

54:44.910 --> 54:46.150
学习技术还有挺有意思的

54:46.150 --> 54:48.390
万华统啥都有

54:48.390 --> 54:48.550
好

54:48.550 --> 54:49.270
这个A元素

54:49.270 --> 54:50.710
你看是不是只有这么短

54:50.710 --> 54:52.750
我们来设置一下宽度

54:52.750 --> 54:53.390
宽度

54:53.430 --> 54:54.830
百分之百

54:54.830 --> 54:55.350
有用吗

54:55.350 --> 54:56.190
是不是没用

54:56.190 --> 54:57.670
宽度500个像素

54:57.670 --> 54:58.150
有用吗

54:58.150 --> 54:58.830
没用

54:58.830 --> 55:02.510
高度1000个像素

55:02.510 --> 55:03.110
有用吗

55:03.110 --> 55:03.990
是没用

55:03.990 --> 55:07.790
航核是无法设置宽高的

55:07.790 --> 55:09.030
那怎么办

55:09.030 --> 55:09.870
变快核

55:11.070 --> 55:11.910
一变成快核

55:11.910 --> 55:13.550
什么权啥都有了

55:13.550 --> 55:14.190
对不对

55:14.190 --> 55:14.830
一变成快核

55:14.830 --> 55:16.350
是不是啥都有了

55:16.350 --> 55:16.910
对不对

55:16.910 --> 55:17.030
好

55:17.030 --> 55:19.230
这就是那个航核的问题

55:19.230 --> 55:21.550
它无法设置宽高

55:21.550 --> 55:22.630
这几个

55:22.750 --> 55:24.350
航核还有什么问题

55:24.350 --> 55:28.350
垂直方向上的

55:28.350 --> 55:31.230
margin是无效的

55:31.230 --> 55:33.230
什么意思

55:33.230 --> 55:33.670
我们看一下

55:33.670 --> 55:35.030
还是看这个A元素

55:35.030 --> 55:36.030
我们设置一下margin

55:37.990 --> 55:38.710
从零开始

55:38.710 --> 55:39.710
挨着增加

55:39.710 --> 55:41.350
你看吧

55:41.350 --> 55:43.230
左右是不是有效的

55:43.230 --> 55:43.590
对不对

55:43.590 --> 55:44.790
我们看这个

55:44.790 --> 55:45.430
你看这个

55:45.430 --> 55:46.030
看页面上

55:46.030 --> 55:47.190
两个黄色的区域

55:47.190 --> 55:47.950
是不是左右

55:47.950 --> 55:49.030
左右是不是有效的

55:49.030 --> 55:50.630
上下是不是没效的

55:50.630 --> 55:51.310
无效的上下

55:51.310 --> 55:51.710
对吧

55:51.710 --> 55:53.910
因为我们margin是设置四个方向

55:53.910 --> 55:55.470
上下是不是无效的

55:55.470 --> 55:56.230
对不对

55:56.230 --> 55:57.230
这是margin

55:57.230 --> 55:59.870
注意航核还有这两个问题

55:59.870 --> 56:02.710
至于它为什么要这样去设计

56:02.710 --> 56:04.190
不陷入技术细节

56:04.190 --> 56:06.390
我们从一个整体的角度去理解它就行了

56:06.390 --> 56:08.750
它始终是这么回事

56:08.750 --> 56:10.750
但是有一个特殊

56:10.750 --> 56:12.390
img出外

56:12.390 --> 56:13.350
img是不是航核

56:13.350 --> 56:14.390
是

56:14.390 --> 56:16.110
但它能设置宽高

56:16.110 --> 56:17.030
它为什么有特殊

56:17.030 --> 56:18.230
它为什么要这样设计

56:18.230 --> 56:19.870
不陷入技术细节

56:19.870 --> 56:22.310
不然的话就讲起来没完没了了

56:22.310 --> 56:23.510
那么img是除外的

56:23.510 --> 56:28.300
比方说我们在这里设置一个图片

56:28.300 --> 56:30.180
哪个什么图片呢

56:30.180 --> 56:33.960
我拿一个

56:33.960 --> 56:35.120
这个图片太大了

56:35.120 --> 56:37.240
有没有小一点的图片

56:37.240 --> 56:39.120
就在一个n缺1

56:39.120 --> 56:40.280
拿下这个图片

56:40.280 --> 56:42.400
img n缺1

56:42.400 --> 56:43.960
看一下这个图片

56:43.960 --> 56:45.080
你看什么图片出来了

56:45.080 --> 56:45.360
好

56:45.360 --> 56:47.040
图片它是可以设置宽高的

56:47.040 --> 56:48.040
你看它是不是航核

56:48.040 --> 56:49.160
它肯定是航核

56:49.160 --> 56:50.320
是不是没有站满

56:50.320 --> 56:51.040
对不对

56:51.040 --> 56:51.440
没有站满

56:51.440 --> 56:52.720
它是航核

56:52.760 --> 56:54.640
然后它能宽度

56:54.640 --> 56:55.800
100%

56:55.800 --> 56:56.920
是不是可以设置

56:56.920 --> 56:57.280
对不对

56:57.280 --> 56:58.160
它一把拉伸了

56:58.160 --> 56:58.880
高度自动

56:58.880 --> 57:00.360
自动增长

57:00.360 --> 57:02.720
你看我们设置margin

57:02.720 --> 57:04.000
你

57:04.000 --> 57:04.360
增加

57:04.360 --> 57:06.240
你看上下左右是不是都有效的

57:06.240 --> 57:07.720
是都有效的

57:07.720 --> 57:08.320
它是航核

57:08.320 --> 57:09.400
但是它比较特殊

57:09.400 --> 57:10.200
它除外

57:10.200 --> 57:11.800
你想图片如果说不能设置宽高

57:11.800 --> 57:12.760
它太麻烦了

57:12.760 --> 57:13.760
对不对

57:13.760 --> 57:16.360
这里是关于这个盒子的组成部分

57:20.440 --> 57:22.160
bfc我们不讲

57:22.160 --> 57:23.760
不去那个技术太细了

57:23.760 --> 57:24.880
这个技术

57:24.880 --> 57:27.280
总之我们这个课程都有的

57:27.280 --> 57:28.800
咱们网上的乘客的课也好

57:28.800 --> 57:29.760
我的课也好

57:29.760 --> 57:31.720
都讲得非常细了

57:31.720 --> 57:33.840
如果说你要听那些非常细的知识的话

57:33.840 --> 57:36.440
那么你可以去听就行了

57:36.440 --> 57:37.880
反正也是免费的

57:37.880 --> 57:40.400
我们这几天主要是来做项目的

57:40.400 --> 57:41.600
不要去献入技术细节

57:43.160 --> 57:43.280
好

57:43.280 --> 57:44.320
这是盒子的组成

57:44.320 --> 57:45.800
就讲完了

57:45.800 --> 57:46.800
最后一个重要的知识

57:46.800 --> 57:48.920
就是盒子的排列

57:48.920 --> 57:49.880
成功就在眼前了

57:49.920 --> 57:51.200
这个东西一学没了

57:52.760 --> 57:53.400
怎么排列

57:53.400 --> 57:53.960
非常简单

57:55.600 --> 57:57.320
普通快合

57:59.120 --> 58:01.080
在复原术中

58:02.280 --> 58:05.480
纵向排列

58:05.480 --> 58:05.960
你看吧

58:07.320 --> 58:07.800
什么意思

58:07.800 --> 58:08.920
什么叫做这句话

58:08.920 --> 58:13.430
什么人理解

58:13.430 --> 58:15.270
为了让你们看得更加清楚

58:15.270 --> 58:16.390
我这样这样这样子写

58:18.310 --> 58:20.270
这个div我给他写个样式

58:20.270 --> 58:20.790
这都不要了

58:22.470 --> 58:23.510
反正是测试代码

58:24.510 --> 58:25.590
不要了

58:25.590 --> 58:26.950
这个div我给他写个样式

58:26.950 --> 58:28.030
就在这里写测试

58:28.030 --> 58:30.190
宽度了100个像素

58:30.190 --> 58:31.470
就是300个像素

58:32.870 --> 58:34.110
高度了300个像素

58:35.430 --> 58:35.750
Border

58:37.750 --> 58:38.390
边框

58:38.390 --> 58:39.270
两个像素稍微的

58:40.710 --> 58:41.830
你看这个就出来了

58:41.830 --> 58:42.710
对吧

58:42.710 --> 58:43.870
是框框出来了

58:43.870 --> 58:44.990
对不对

58:44.990 --> 58:45.190
好

58:46.190 --> 58:48.430
然后他里边有两个div

58:50.070 --> 58:51.790
这两个div是快合

58:51.790 --> 58:52.590
是不是快合

58:52.590 --> 58:53.230
咱们来看一下

58:54.270 --> 58:54.710
宽度

58:57.110 --> 58:58.030
宽度的话百分之百

59:00.710 --> 59:01.110
高度

59:02.230 --> 59:03.350
高度的话

59:03.350 --> 59:04.030
200个像素

59:05.150 --> 59:06.310
宽度我不去设置它

59:06.310 --> 59:07.550
不设置宽度

59:07.550 --> 59:08.470
不设置宽度

59:08.470 --> 59:09.550
高度200个像素

59:09.550 --> 59:10.870
然后设置个边框

59:10.870 --> 59:11.190
Border

59:12.670 --> 59:13.910
两个像素稍微的

59:13.910 --> 59:14.710
上面没有写颜色

59:14.710 --> 59:15.310
对吧

59:15.310 --> 59:15.870
没有写颜色

59:15.870 --> 59:16.470
没有写颜色

59:16.470 --> 59:18.430
默认使用文字颜色

59:18.430 --> 59:19.030
颜色的话

59:19.030 --> 59:20.670
我们这里使用红色吗

59:20.670 --> 59:21.590
这里边使用黑色

59:23.740 --> 59:24.980
你看一下吧

59:25.020 --> 59:26.500
好是第1个div

59:26.500 --> 59:27.220
第2个div

59:27.220 --> 59:30.780
高度是100个像素

59:30.780 --> 59:31.580
两个都100吧

59:33.900 --> 59:34.420
两个都100

59:35.380 --> 59:38.280
好 你看一下

59:38.280 --> 59:39.600
我会让你们看得更加清楚

59:39.600 --> 59:39.960
算了

59:39.960 --> 59:41.360
我还是不用边框了

59:41.360 --> 59:42.320
用背景颜色吧

59:42.320 --> 59:44.520
背景颜色看得清楚一点

59:44.520 --> 59:45.800
这个背景颜色是灰色

59:47.520 --> 59:47.880
999

59:49.880 --> 59:52.040
这个背景颜色是深灰色

59:53.640 --> 59:54.040
666

59:55.960 --> 59:56.280
保存

59:56.720 --> 59:57.080
看一下

59:58.640 --> 59:59.640
看是不是横向排列的

01:00:00.800 --> 01:00:01.680
是不是横向排列的

01:00:01.680 --> 01:00:02.280
有什么不信

01:00:03.560 --> 01:00:06.160
你这个因为它自己的宽度是称满的

01:00:06.160 --> 01:00:06.680
对吧

01:00:06.680 --> 01:00:08.920
那如果说我把宽度给它调小一点

01:00:08.920 --> 01:00:09.360
行不行呢

01:00:11.240 --> 01:00:13.280
把第1个div的宽度调小一点

01:00:13.280 --> 01:00:14.800
调成50个像素

01:00:14.800 --> 01:00:15.360
不好意思

01:00:15.360 --> 01:00:16.880
它还是重向排列的

01:00:18.160 --> 01:00:19.120
为什么呢

01:00:19.120 --> 01:00:20.560
当你把宽度调小了过后

01:00:20.560 --> 01:00:22.680
它会自动用margin去凑

01:00:22.680 --> 01:00:25.400
你看右边是不是出现一个黄色区域

01:00:25.440 --> 01:00:26.960
是不是又出现一个黄色区域

01:00:26.960 --> 01:00:27.760
黄色区域是什么

01:00:27.760 --> 01:00:29.040
就是margin

01:00:29.040 --> 01:00:30.880
他觉得他自己已经排不满了

01:00:31.760 --> 01:00:32.360
不好意思

01:00:32.360 --> 01:00:34.640
我一定要把排满

01:00:34.640 --> 01:00:36.800
他要margin撑的把撑满

01:00:36.800 --> 01:00:37.080
对吧

01:00:37.080 --> 01:00:38.800
所以说他一定是排满的

01:00:38.800 --> 01:00:41.000
纵向的垂直的这样排列

01:00:43.280 --> 01:00:44.640
那么这里就会出现一个

01:00:44.640 --> 01:00:46.600
非常有意识的效果

01:00:46.600 --> 01:00:49.080
就是说如果说我要把他居中怎么办

01:00:50.640 --> 01:00:51.960
注意是非常重要的一个知识的

01:00:52.960 --> 01:00:55.360
普通快合居中

01:00:55.360 --> 01:00:58.480
普通快合在复原书里边居中

01:00:58.480 --> 01:01:00.400
怎么办

01:01:00.400 --> 01:01:04.600
就是用margin上下为多少

01:01:04.600 --> 01:01:05.480
无所谓

01:01:05.480 --> 01:01:06.840
左右写成out

01:01:06.840 --> 01:01:07.880
out是什么意思

01:01:07.880 --> 01:01:08.600
就是不够

01:01:08.600 --> 01:01:09.400
我就来凑

01:01:09.400 --> 01:01:11.040
就是out

01:01:11.040 --> 01:01:11.800
那么我们来看一下

01:01:11.800 --> 01:01:15.340
为什么这样子就能居中

01:01:15.340 --> 01:01:16.580
我们就在这里写吧

01:01:16.580 --> 01:01:17.220
你看

01:01:17.220 --> 01:01:19.140
它宽度为50个像素

01:01:19.140 --> 01:01:20.420
把宽度固定

01:01:20.420 --> 01:01:21.940
宽度固定过后

01:01:21.980 --> 01:01:23.700
然后我们把左右的margin

01:01:24.700 --> 01:01:26.420
刚才的意思还没解释

01:01:26.420 --> 01:01:28.100
为什么这里可以写两个字

01:01:28.100 --> 01:01:29.740
两个字的第一个字表示上下

01:01:29.740 --> 01:01:31.180
第二个字表示左右

01:01:31.180 --> 01:01:32.220
第一个字表示上下

01:01:32.220 --> 01:01:34.260
第二个字表示左右

01:01:34.260 --> 01:01:35.420
那么这里我们写个margin

01:01:36.620 --> 01:01:37.700
上下无所谓

01:01:37.700 --> 01:01:39.220
上下我们就零

01:01:39.220 --> 01:01:40.900
零是可以不写单位的

01:01:40.900 --> 01:01:42.420
然后左右是out

01:01:42.420 --> 01:01:43.940
你看是不是居中了

01:01:43.940 --> 01:01:45.580
他凭什么就居中了

01:01:45.580 --> 01:01:46.340
out什么意思

01:01:46.340 --> 01:01:47.260
不够我就来凑

01:01:48.260 --> 01:01:49.340
宽度是不是50

01:01:49.340 --> 01:01:50.740
50是不是站不满

01:01:50.740 --> 01:01:51.740
左右都是out

01:01:51.820 --> 01:01:54.060
左右的out我就来凑

01:01:54.060 --> 01:01:55.580
把左右的margin就

01:01:55.580 --> 01:01:56.940
刚好就称到中间了

01:01:56.940 --> 01:01:58.900
左右的margin就来凑数的

01:01:58.900 --> 01:02:00.580
那么这个核就在中间了

01:02:00.580 --> 01:02:03.380
这是一个非常重要的

01:02:03.380 --> 01:02:05.260
这么一个就是居中的办法

01:02:08.780 --> 01:02:10.340
你不用担心

01:02:10.340 --> 01:02:12.060
我说给你讲完就一定能讲完的

01:02:14.060 --> 01:02:15.260
你说你不要在乎

01:02:15.260 --> 01:02:16.860
现在我们还没什么都没有做出来

01:02:16.860 --> 01:02:18.220
因为我们现在在积累知识

01:02:18.220 --> 01:02:19.100
知识一旦积累出来

01:02:19.100 --> 01:02:20.220
这些做起来非常快的

01:02:21.900 --> 01:02:24.540
那么这是普通盒子

01:02:24.540 --> 01:02:28.010
普通盒子是这样子

01:02:28.010 --> 01:02:31.530
那么航河就没什么好说的了

01:02:31.530 --> 01:02:37.530
航河水平在复原树中

01:02:37.530 --> 01:02:41.210
水平开的

01:02:41.210 --> 01:02:41.970
这没什么好说的

01:02:41.970 --> 01:02:43.650
我们就刚才都见识过了

01:02:43.650 --> 01:02:45.610
还有最后一种

01:02:45.610 --> 01:02:50.290
什么浮动快盒

01:02:50.290 --> 01:02:52.290
我们刚才都看到的是普通盒子

01:02:53.010 --> 01:02:54.210
什么叫浮动快盒

01:02:54.210 --> 01:02:55.850
等一下我们一会就会讲

01:02:55.850 --> 01:02:59.650
浮动快盒在复原树中

01:02:59.650 --> 01:03:03.530
水平依次排列

01:03:03.530 --> 01:03:09.530
排列不下换行

01:03:09.530 --> 01:03:11.370
你看浮动盒子就不一样了

01:03:11.370 --> 01:03:12.570
比较说我们这两个DAV

01:03:12.570 --> 01:03:14.490
还是不变的DAV

01:03:14.490 --> 01:03:15.210
它有高度

01:03:15.210 --> 01:03:17.450
然后我们给它一个宽度

01:03:22.070 --> 01:03:24.070
复制

01:03:29.070 --> 01:03:31.390
你看现在是不是还是水平

01:03:31.390 --> 01:03:32.430
又是中向排列的

01:03:32.430 --> 01:03:33.230
一个站满的

01:03:33.230 --> 01:03:35.790
然后我们现在只要做这么一件事

01:03:35.790 --> 01:03:40.230
我让这两个DAV浮动起来

01:03:40.230 --> 01:03:41.470
怎么浮动

01:03:41.470 --> 01:03:42.510
Float left

01:03:42.510 --> 01:03:43.630
表示左浮动

01:03:43.630 --> 01:03:46.030
你看Float left

01:03:46.030 --> 01:03:46.950
两个都左浮动

01:03:46.950 --> 01:03:48.830
我们这里写个1和2

01:03:48.830 --> 01:03:49.390
两个盒子

01:03:50.310 --> 01:03:51.230
第一个盒子左浮动

01:03:51.230 --> 01:03:52.910
第二个盒子左浮动

01:03:52.910 --> 01:03:53.790
他们是不是快盒

01:03:53.790 --> 01:03:55.310
他们仍然是快盒

01:03:55.310 --> 01:03:56.910
不过他们是浮动的快盒

01:03:56.910 --> 01:03:58.710
于是就不一样了

01:03:58.710 --> 01:04:00.150
是不是水平排列了

01:04:00.150 --> 01:04:00.470
对不对

01:04:00.470 --> 01:04:02.550
水平排列了

01:04:02.550 --> 01:04:03.630
如果说是三个盒子

01:04:07.230 --> 01:04:08.670
继续水平排列

01:04:08.670 --> 01:04:10.430
第二个盒子

01:04:10.430 --> 01:04:13.310
第四个盒子排列不下了

01:04:13.310 --> 01:04:14.550
它就自动换行

01:04:14.550 --> 01:04:16.470
是不是有点类似于航河的排列方式

01:04:16.470 --> 01:04:17.830
它跟航河不一样

01:04:17.830 --> 01:04:18.910
因为它还是快盒

01:04:18.910 --> 01:04:20.430
快盒是不是可以设置宽高

01:04:20.430 --> 01:04:22.190
航河是不是不能设置宽高

01:04:22.190 --> 01:04:22.390
对吧

01:04:22.390 --> 01:04:23.990
这是它的区别

01:04:23.990 --> 01:04:24.150
对吧

01:04:24.150 --> 01:04:25.630
这是浮动盒子

01:04:25.630 --> 01:04:26.430
对不对

01:04:26.430 --> 01:04:27.470
那么这是左浮动

01:04:27.470 --> 01:04:28.910
那右浮动呢

01:04:28.910 --> 01:04:30.150
一样的

01:04:30.150 --> 01:04:31.110
右浮动是一样的

01:04:31.110 --> 01:04:32.910
我们看两个就行了

01:04:32.910 --> 01:04:34.510
right

01:04:34.510 --> 01:04:36.510
Float right

01:04:36.510 --> 01:04:37.270
你看

01:04:37.270 --> 01:04:38.390
右浮动是不是

01:04:38.390 --> 01:04:39.350
第一个靠右

01:04:39.350 --> 01:04:40.630
第二个也跟着靠右

01:04:40.630 --> 01:04:41.070
对吧

01:04:41.070 --> 01:04:42.510
就往右边扔

01:04:42.510 --> 01:04:43.670
第一个盒子跑到右边去

01:04:43.670 --> 01:04:45.790
第二个盒子也跟着往右边靠

01:04:45.790 --> 01:04:46.430
对不对

01:04:46.470 --> 01:04:47.150
这就是浮动

01:04:48.990 --> 01:04:50.950
OK

01:04:50.950 --> 01:04:51.790
知识的积累

01:04:55.670 --> 01:04:58.590
对浮动会对复元素产生一定的影响

01:04:58.590 --> 01:05:01.070
要知道这个影响到底怎么办

01:05:01.070 --> 01:05:02.910
咱们还是在详细课程里面讲

01:05:02.910 --> 01:05:04.270
那么我们有两

01:05:04.270 --> 01:05:07.590
有两位高级教师给大家分享的

01:05:07.590 --> 01:05:10.190
这个ADM4S的技术课

01:05:10.190 --> 01:05:11.950
我们就不在其他的课程里面讲

01:05:11.950 --> 01:05:13.830
我们的其他课程里面直讲

01:05:13.830 --> 01:05:14.710
直讲核心知识

01:05:14.710 --> 01:05:15.870
我们要用到的核心知识

01:05:17.030 --> 01:05:17.430
OK

01:05:17.430 --> 01:05:18.830
现在可以做了

01:05:18.830 --> 01:05:19.830
现在怎么来做

01:05:19.830 --> 01:05:21.990
我都我都我怎么不知道怎么来做了

01:05:21.990 --> 01:05:25.110
看着你看着怎么来做

01:05:25.110 --> 01:05:26.990
我们先开发头部

01:05:26.990 --> 01:05:32.320
现在我们开始正儿八经来做了

01:05:32.320 --> 01:05:34.000
头部是不是有个固定的高度

01:05:35.560 --> 01:05:36.240
对不对

01:05:36.240 --> 01:05:37.560
你看这个头部高度是多少

01:05:37.560 --> 01:05:39.040
我们看一下我之前写的高度是多少

01:05:39.040 --> 01:05:40.400
我拿的剧量凉了

01:05:41.640 --> 01:05:42.280
84

01:05:42.280 --> 01:05:42.640
对不对

01:05:42.640 --> 01:05:44.080
头部是84个相处

01:05:44.080 --> 01:05:44.400
来

01:05:45.600 --> 01:05:47.040
直接写header

01:05:47.160 --> 01:05:47.880
打个树式

01:05:48.560 --> 01:05:49.080
头部

01:05:50.560 --> 01:05:52.400
现在我们开始在真正的用起来了

01:05:52.400 --> 01:05:54.600
直识掌握的量已经够了

01:05:54.600 --> 01:05:55.000
header

01:05:56.840 --> 01:05:57.800
高度是多少

01:05:57.800 --> 01:05:58.680
84个相处

01:05:59.840 --> 01:06:00.720
有没有背景颜色

01:06:00.720 --> 01:06:01.720
有背景颜色

01:06:01.720 --> 01:06:02.720
背景颜色是一个啥呢

01:06:02.720 --> 01:06:03.840
我们看一下这边偷一下

01:06:03.840 --> 01:06:04.320
不

01:06:04.320 --> 01:06:04.960
顺一下

01:06:06.040 --> 01:06:07.080
复制一下

01:06:07.080 --> 01:06:07.640
三天过来

01:06:07.640 --> 01:06:10.960
是一个RGB-A半透明的黑色

01:06:10.960 --> 01:06:11.520
三个零

01:06:11.520 --> 01:06:11.760
对吧

01:06:11.760 --> 01:06:13.360
RGB三个零是不是黑色

01:06:13.360 --> 01:06:14.920
然后这个黑色是半透明的

01:06:14.920 --> 01:06:15.800
你看为什么是半透明

01:06:15.800 --> 01:06:16.520
你看背

01:06:16.520 --> 01:06:18.080
我们到时候会加一个背景图片

01:06:18.080 --> 01:06:18.320
对吧

01:06:18.320 --> 01:06:19.440
背后会加一张图片

01:06:19.440 --> 01:06:20.880
那么这个图片是不是隐隐约约

01:06:20.880 --> 01:06:21.920
弱隐弱线的

01:06:21.920 --> 01:06:22.360
对不对

01:06:22.360 --> 01:06:23.560
所以是半透明的黑色

01:06:24.680 --> 01:06:24.840
好

01:06:24.840 --> 01:06:26.800
84个相处半透明的黑色

01:06:26.800 --> 01:06:27.800
咱们来看一下

01:06:27.800 --> 01:06:28.120
这边

01:06:29.000 --> 01:06:29.240
这边

01:06:30.240 --> 01:06:31.120
把个边框去掉

01:06:33.120 --> 01:06:34.240
我在哪里去加个边框

01:06:34.240 --> 01:06:35.720
在波特里面加个边框

01:06:35.720 --> 01:06:37.000
包地里面加个边框

01:06:37.000 --> 01:06:37.960
说出来了

01:06:37.960 --> 01:06:39.160
背后半透明的

01:06:39.160 --> 01:06:39.880
没有看

01:06:39.880 --> 01:06:41.920
因为背后没有图片

01:06:41.920 --> 01:06:43.280
背景图片我们还没有做

01:06:43.280 --> 01:06:45.040
所以说看上去好像没有半透明

01:06:45.080 --> 01:06:46.080
实际上它是半透明的

01:06:47.240 --> 01:06:48.480
比方说把图片算了

01:06:48.480 --> 01:06:50.280
我现在还没有讲背景图片

01:06:50.280 --> 01:06:50.960
我们后边再说

01:06:51.920 --> 01:06:52.200
算了

01:06:52.200 --> 01:06:52.800
我们要讲了吧

01:06:53.960 --> 01:06:55.280
也就一句话

01:06:55.280 --> 01:06:56.240
背景图片我们可以说

01:06:56.240 --> 01:06:56.840
包地里面

01:06:58.080 --> 01:06:59.320
就是设置背景图片

01:07:01.460 --> 01:07:03.500
设置背景图片有一个非常简单的方式

01:07:03.500 --> 01:07:04.740
就是直接使用白光的

01:07:04.740 --> 01:07:04.900
对吧

01:07:04.900 --> 01:07:06.380
它既可以设置背景颜色

01:07:06.380 --> 01:07:07.860
也可以设置背景图片

01:07:07.860 --> 01:07:08.620
图片怎么设置呢

01:07:08.620 --> 01:07:10.420
就是UIL写上这么一个关键字

01:07:10.420 --> 01:07:12.180
里面写上图片路径

01:07:12.180 --> 01:07:13.100
路径怎么写

01:07:13.100 --> 01:07:14.540
路径就写

01:07:14.540 --> 01:07:16.100
我们这里看这个文件

01:07:16.100 --> 01:07:17.820
这个文件我要从这里面去找图片

01:07:17.820 --> 01:07:18.540
对不对

01:07:18.540 --> 01:07:20.180
那是不是要返回上一级目录

01:07:20.180 --> 01:07:21.580
因为我要从这个目录下面

01:07:21.580 --> 01:07:23.140
找这个目录下面没有图片

01:07:23.140 --> 01:07:24.540
那么怎么来返回上一级目录呢

01:07:24.540 --> 01:07:26.220
用两个点一个鞋杠

01:07:26.220 --> 01:07:27.740
返回上一级目录

01:07:27.740 --> 01:07:29.100
然后找到这个AMG

01:07:29.100 --> 01:07:29.820
哪张图片呢

01:07:29.820 --> 01:07:30.380
这个BG

01:07:31.700 --> 01:07:32.900
叫JPG

01:07:32.900 --> 01:07:34.020
就是这张图片

01:07:34.020 --> 01:07:34.700
保存就完了

01:07:36.300 --> 01:07:37.340
背景图片是不是出来了

01:07:37.340 --> 01:07:37.660
对不对

01:07:38.740 --> 01:07:40.660
这就是背景图片

01:07:40.660 --> 01:07:41.260
看一下这边

01:07:42.380 --> 01:07:43.580
好像有一点不一样

01:07:43.580 --> 01:07:44.060
对不对

01:07:44.060 --> 01:07:44.740
为什么呢

01:07:44.780 --> 01:07:45.780
因为这个头

01:07:45.780 --> 01:07:46.900
他怎么跑到右边去了

01:07:46.900 --> 01:07:48.180
这个头是在中间的

01:07:48.180 --> 01:07:48.820
对不对

01:07:48.820 --> 01:07:49.820
那是怎么回事呢

01:07:49.820 --> 01:07:51.500
是因为这个图片比较大

01:07:51.500 --> 01:07:52.140
这个网页

01:07:52.140 --> 01:07:52.540
你看

01:07:53.740 --> 01:07:54.100
放小

01:07:55.580 --> 01:07:56.820
这图片是不是比较大

01:07:56.820 --> 01:07:57.980
非常非常大

01:07:57.980 --> 01:08:00.180
我现在都还显示不完整个图片

01:08:00.180 --> 01:08:01.540
都还没有显示完

01:08:01.540 --> 01:08:02.820
这图片很大

01:08:02.820 --> 01:08:04.980
所以说他就会形成这么一种效果

01:08:06.660 --> 01:08:13.610
画一张图

01:08:13.610 --> 01:08:16.820
这是我们的网页

01:08:16.820 --> 01:08:17.380
然后

01:08:19.220 --> 01:08:20.340
这是我们的图片

01:08:20.340 --> 01:08:21.460
背景图片

01:08:21.460 --> 01:08:22.940
背景图片比较大

01:08:22.940 --> 01:08:24.860
我们网页显示不下

01:08:24.860 --> 01:08:25.260
但是

01:08:25.260 --> 01:08:27.180
尽管说我们显示不下

01:08:27.180 --> 01:08:28.740
我也希望我要显示

01:08:28.740 --> 01:08:30.540
这个背景图片的哪个位置

01:08:30.540 --> 01:08:31.460
我希望我要显示

01:08:31.460 --> 01:08:33.180
这个背景图片的中间这个位置

01:08:34.220 --> 01:08:35.860
我要把它显示到中间

01:08:35.860 --> 01:08:36.860
懂这个意思吗

01:08:36.860 --> 01:08:38.700
就是把背景图的中心点

01:08:38.700 --> 01:08:40.940
对到我们网页的中心点

01:08:40.940 --> 01:08:42.340
指的是这么一个意思

01:08:42.340 --> 01:08:43.700
那怎么办呢

01:08:43.700 --> 01:08:45.300
我们可以继续来设置

01:08:46.140 --> 01:08:46.780
叫做

01:08:46.780 --> 01:08:47.660
Background

01:08:48.740 --> 01:08:49.380
Prediction

01:08:50.380 --> 01:08:51.860
背景图的位置

01:08:52.420 --> 01:08:53.420
横向

01:08:54.060 --> 01:08:54.780
中间

01:08:54.780 --> 01:08:55.260
Center

01:08:55.780 --> 01:08:56.660
中向

01:08:56.900 --> 01:08:57.460
中间

01:08:57.460 --> 01:08:58.020
Center

01:08:58.420 --> 01:08:59.220
就这么个意思

01:08:59.220 --> 01:09:00.180
那么这样的背景图

01:09:00.180 --> 01:09:01.020
它就在这个位置了

01:09:01.700 --> 01:09:02.300
别的意思吧

01:09:02.620 --> 01:09:03.620
我们刷新看一下

01:09:03.620 --> 01:09:04.740
你看是不是在这个位置

01:09:04.740 --> 01:09:06.060
这都还是不一样

01:09:06.060 --> 01:09:07.620
是因为我这里

01:09:07.620 --> 01:09:09.420
我那边并不是设置的

01:09:09.420 --> 01:09:10.500
横向

01:09:10.500 --> 01:09:11.340
我是在中间

01:09:11.340 --> 01:09:11.740
中向

01:09:11.740 --> 01:09:12.620
我是在这个位置

01:09:14.570 --> 01:09:14.890
中向

01:09:14.890 --> 01:09:15.730
我是在这个位置

01:09:16.090 --> 01:09:17.650
就是我的背景图是这样设置的

01:09:17.650 --> 01:09:19.170
横向在中间

01:09:19.530 --> 01:09:20.330
中向

01:09:20.770 --> 01:09:22.610
是靠就是顶边对齐

01:09:22.930 --> 01:09:24.170
那么顶边对齐怎么办

01:09:24.170 --> 01:09:25.370
顶边对齐我们用Top

01:09:26.010 --> 01:09:27.330
表示顶边对齐

01:09:27.330 --> 01:09:28.570
横向在中间

01:09:29.810 --> 01:09:30.810
背景图

01:09:33.200 --> 01:09:33.720
位置

01:09:34.120 --> 01:09:34.880
横向

01:09:35.680 --> 01:09:36.720
中心对齐

01:09:39.480 --> 01:09:40.080
中向

01:09:43.200 --> 01:09:43.720
中向

01:09:44.840 --> 01:09:45.880
顶端对齐

01:09:47.360 --> 01:09:47.880
懂我的意思吧

01:09:48.280 --> 01:09:49.400
好 这是背景图的位置

01:09:49.400 --> 01:09:49.880
好 你看

01:09:49.880 --> 01:09:50.520
是不是出来了

01:09:51.480 --> 01:09:52.120
你看这两个

01:09:52.720 --> 01:09:53.400
是不是一样了

01:09:53.640 --> 01:09:54.040
对不对

01:09:54.040 --> 01:09:54.880
一样了

01:09:54.880 --> 01:09:56.280
只是我这里放大了

01:09:56.280 --> 01:09:57.440
可以把重置一下

01:09:57.720 --> 01:09:58.280
放小一点

01:09:59.280 --> 01:10:00.200
因为这边有个滚动条

01:10:00.200 --> 01:10:02.520
它稍微多了一点

01:10:02.520 --> 01:10:03.320
其实都是一样的

01:10:04.240 --> 01:10:05.560
好 那么现在背景图出来了

01:10:05.560 --> 01:10:06.080
对不对

01:10:06.640 --> 01:10:08.240
好 那么现在这个高度也设置出来了

01:10:08.240 --> 01:10:09.880
那么接下来我们来看一下这个区域

01:10:11.000 --> 01:10:11.600
第一个

01:10:12.280 --> 01:10:12.960
我们要看什么

01:10:12.960 --> 01:10:13.560
看这个

01:10:13.880 --> 01:10:14.680
看这个DIV

01:10:15.080 --> 01:10:16.320
这个DIV在哪啊

01:10:16.920 --> 01:10:17.720
导航栏

01:10:17.720 --> 01:10:18.840
你看这个导航栏在哪

01:10:20.720 --> 01:10:21.360
导航栏

01:10:22.160 --> 01:10:23.760
导航栏是不是这一部分

01:10:25.400 --> 01:10:26.360
这一部分说明啥

01:10:26.960 --> 01:10:27.520
说明了啥

01:10:27.520 --> 01:10:28.040
这一部分

01:10:28.680 --> 01:10:29.760
这一部分的

01:10:30.000 --> 01:10:32.840
东西是不是宽度一千二

01:10:33.400 --> 01:10:36.000
然后在复元书里边居中的

01:10:36.000 --> 01:10:36.560
你看一下

01:10:36.720 --> 01:10:37.520
复元书是谁

01:10:37.520 --> 01:10:38.880
复元书不就是这个玩意吗

01:10:39.840 --> 01:10:40.760
这是不是复元书

01:10:41.640 --> 01:10:42.080
成满的

01:10:42.760 --> 01:10:44.400
它在复元书里边居中

01:10:44.400 --> 01:10:45.960
宽度是一千二

01:10:46.600 --> 01:10:47.160
看到没

01:10:48.120 --> 01:10:49.120
高度是84

01:10:49.120 --> 01:10:50.040
高度是一样的

01:10:50.320 --> 01:10:51.440
那么我们就可以继续写

01:10:51.960 --> 01:10:53.600
找到header里边

01:10:57.600 --> 01:10:59.400
找到这个header下边的

01:10:59.400 --> 01:11:00.040
哪个

01:11:00.600 --> 01:11:01.400
main nav

01:11:02.280 --> 01:11:03.560
main nav

01:11:05.400 --> 01:11:08.080
然后宽度一千二百个相处

01:11:08.600 --> 01:11:09.720
然后居中怎么居中

01:11:09.720 --> 01:11:10.320
margin

01:11:10.680 --> 01:11:11.400
上下为零

01:11:11.400 --> 01:11:12.120
左右out

01:11:12.480 --> 01:11:13.080
是不是居中了

01:11:13.560 --> 01:11:13.720
好

01:11:13.720 --> 01:11:14.280
咱们来看一下

01:11:16.280 --> 01:11:16.840
你看

01:11:17.280 --> 01:11:18.960
现在看上去好像感觉不出来

01:11:18.960 --> 01:11:20.480
但是你仔细看一下

01:11:21.400 --> 01:11:22.760
只是他这个main nav

01:11:22.760 --> 01:11:23.280
你看一下

01:11:23.640 --> 01:11:24.320
是不是居中了

01:11:25.160 --> 01:11:25.600
对不对

01:11:25.600 --> 01:11:26.520
然后高度

01:11:26.920 --> 01:11:27.880
控制一下高度

01:11:27.880 --> 01:11:29.160
高度也是84

01:11:29.440 --> 01:11:30.880
高度其实也可以写百分之百

01:11:30.880 --> 01:11:31.600
但是

01:11:31.760 --> 01:11:33.920
初学者我不太建议你高度用百分之百

01:11:33.920 --> 01:11:34.880
很难控制的

01:11:35.120 --> 01:11:36.720
除非在老师的肯定之下

01:11:36.720 --> 01:11:37.520
你才可以控制

01:11:37.760 --> 01:11:39.520
如果说你看完了我的课程

01:11:39.520 --> 01:11:40.560
或者是看完了诚哥的

01:11:40.560 --> 01:11:41.360
一天到晚是写的课程

01:11:41.360 --> 01:11:42.040
啊OK

01:11:42.040 --> 01:11:42.680
那就随便用了

01:11:42.680 --> 01:11:44.160
你知道在什么情况下

01:11:44.160 --> 01:11:45.000
可以用百分之百

01:11:45.280 --> 01:11:46.120
可以用百分比

01:11:46.480 --> 01:11:47.680
这里我可以用百分比

01:11:47.680 --> 01:11:49.360
相对于复元书的高度

01:11:49.360 --> 01:11:50.640
如果说复元书写的高度

01:11:50.640 --> 01:11:53.200
你也是可以用百分比的

01:11:53.200 --> 01:11:54.880
如果说复元书没有写高度

01:11:54.880 --> 01:11:55.520
胜用

01:11:55.920 --> 01:11:57.000
不然要出问题

01:11:57.640 --> 01:11:57.920
好

01:11:57.920 --> 01:11:58.760
现在我们看一下

01:11:58.760 --> 01:11:59.960
这个地方你看

01:12:00.160 --> 01:12:00.960
左右是毛巾

01:12:00.960 --> 01:12:01.320
对吧

01:12:01.320 --> 01:12:02.360
是不是中间去中了

01:12:02.880 --> 01:12:04.480
然后接下来再看这一部分

01:12:06.160 --> 01:12:07.520
那么这个DIV里边

01:12:07.520 --> 01:12:08.920
是不是有三块组成

01:12:09.440 --> 01:12:10.160
一块

01:12:11.880 --> 01:12:12.720
两块

01:12:13.440 --> 01:12:14.240
三块

01:12:14.240 --> 01:12:14.800
对吧

01:12:14.800 --> 01:12:16.760
这三块是冰牌排列的

01:12:16.960 --> 01:12:17.680
该怎么办

01:12:18.240 --> 01:12:19.400
浮动起来

01:12:19.880 --> 01:12:20.120
好

01:12:20.120 --> 01:12:20.720
于是呢

01:12:20.720 --> 01:12:21.960
我们这里就可以写

01:12:22.400 --> 01:12:23.040
写上这个

01:12:26.390 --> 01:12:26.950
写上

01:12:27.790 --> 01:12:28.950
Header下边的

01:12:28.950 --> 01:12:30.790
什么May Nav下边的

01:12:31.310 --> 01:12:33.510
当然也可以直接找到里面的

01:12:33.510 --> 01:12:34.670
这个H1

01:12:34.670 --> 01:12:35.310
对不对

01:12:35.790 --> 01:12:37.190
是不是这个H1元书

01:12:37.790 --> 01:12:39.190
找了个H1元书

01:12:39.950 --> 01:12:40.790
然后呢

01:12:41.310 --> 01:12:43.270
让它浮动起来

01:12:43.590 --> 01:12:44.590
让它浮动起来

01:12:44.590 --> 01:12:46.070
Float Nav

01:12:46.070 --> 01:12:47.150
所以浮动起来了

01:12:47.670 --> 01:12:47.990
好

01:12:47.990 --> 01:12:48.910
然后这几个

01:12:48.910 --> 01:12:50.710
那么我们干脆单独来写个内样式

01:12:51.350 --> 01:12:53.590
通用的样式

01:12:53.590 --> 01:12:54.750
这样子更加方便一点

01:12:55.470 --> 01:12:56.590
免得翻载浮去写

01:12:57.470 --> 01:12:58.110
写个

01:12:58.310 --> 01:12:58.950
FL

01:12:58.950 --> 01:13:00.070
Float Nav

01:13:00.070 --> 01:13:00.790
就是浮动

01:13:00.790 --> 01:13:01.630
左浮动

01:13:01.630 --> 01:13:02.790
Float Nav

01:13:03.710 --> 01:13:04.750
就一句话就完事了

01:13:04.750 --> 01:13:05.790
Float Nav

01:13:05.790 --> 01:13:06.070
好

01:13:06.070 --> 01:13:08.110
这里我们按照一些Close

01:13:09.830 --> 01:13:10.350
Close

01:13:10.790 --> 01:13:11.510
FL

01:13:11.750 --> 01:13:12.510
这个地方

01:13:13.030 --> 01:13:13.590
Close

01:13:13.750 --> 01:13:14.390
FL

01:13:14.710 --> 01:13:15.230
对吧

01:13:15.230 --> 01:13:16.990
然后这个地方Close FL

01:13:16.990 --> 01:13:17.830
所以浮动起来了

01:13:18.270 --> 01:13:18.470
好

01:13:18.470 --> 01:13:19.510
咱们再看一下

01:13:19.830 --> 01:13:20.870
浮动起来过后

01:13:21.230 --> 01:13:22.190
有没有什么变化

01:13:22.390 --> 01:13:23.470
你看是不是有变化了

01:13:25.190 --> 01:13:25.790
这里

01:13:25.790 --> 01:13:26.550
H1在这

01:13:26.550 --> 01:13:28.070
你看网易上的蓝色区域

01:13:28.070 --> 01:13:28.990
H1在这

01:13:29.190 --> 01:13:30.070
EOL在这

01:13:30.910 --> 01:13:31.910
这个东西在这

01:13:32.070 --> 01:13:32.310
对吧

01:13:32.310 --> 01:13:33.070
还是不好看

01:13:33.070 --> 01:13:33.710
但是没关系

01:13:33.910 --> 01:13:35.230
我们至少已经把浮动起来了

01:13:35.230 --> 01:13:36.190
是不是并排显示了

01:13:36.390 --> 01:13:36.830
对不对

01:13:37.190 --> 01:13:37.350
好

01:13:37.350 --> 01:13:38.510
现在我们再来控制

01:13:38.510 --> 01:13:39.990
这里面的文字颜色

01:13:39.990 --> 01:13:40.710
文字颜色

01:13:40.710 --> 01:13:42.350
我们看上去这个太丑了

01:13:42.350 --> 01:13:43.550
不是这样的文字颜色

01:13:43.550 --> 01:13:45.190
它的文字颜色是不是一个统一的颜色

01:13:45.190 --> 01:13:46.550
我们看一下这边的颜色是什么

01:13:47.310 --> 01:13:48.270
它的文字颜色

01:13:48.990 --> 01:13:49.950
看

01:13:50.310 --> 01:13:51.350
有文字

01:13:51.950 --> 01:13:52.710
轮动是它

01:13:54.150 --> 01:13:55.510
它的文字颜色是这个

01:13:56.390 --> 01:13:57.150
复制一下

01:13:58.230 --> 01:14:00.670
我们到这个文字颜色

01:14:00.670 --> 01:14:02.510
我们只因为我们又继承

01:14:02.510 --> 01:14:03.990
所以说我们可以把颜色写到这

01:14:03.990 --> 01:14:05.430
让它指元素去继承它

01:14:05.430 --> 01:14:06.470
后代元素去继承它

01:14:06.790 --> 01:14:08.190
你看文字颜色是不是搞定了

01:14:08.510 --> 01:14:08.950
对不对

01:14:08.950 --> 01:14:09.270
好

01:14:09.270 --> 01:14:09.950
一个个来

01:14:10.110 --> 01:14:12.030
首先来搞定这个H1元素

01:14:13.510 --> 01:14:14.790
搞定这个H1

01:14:14.910 --> 01:14:15.150
好

01:14:15.150 --> 01:14:15.550
H1

01:14:15.550 --> 01:14:17.190
那我再单独给它一个那样式

01:14:17.350 --> 01:14:18.750
我尽量用那样式去控制

01:14:19.150 --> 01:14:20.750
这里表示logo

01:14:20.750 --> 01:14:23.910
就是文字网站的logo

01:14:23.910 --> 01:14:25.070
网站的logo

01:14:26.790 --> 01:14:26.990
好

01:14:26.990 --> 01:14:28.430
header下边的logo

01:14:29.230 --> 01:14:31.230
那么这个区域它除了有浮动之外

01:14:31.230 --> 01:14:32.590
你看有可以有多个的样式的

01:14:32.590 --> 01:14:33.950
不说只能写一个

01:14:34.430 --> 01:14:35.190
可以有多个的

01:14:35.190 --> 01:14:36.670
就是我可以应用它的那样式

01:14:36.670 --> 01:14:37.990
也可以应用它的那样式

01:14:37.990 --> 01:14:38.470
都可以

01:14:38.750 --> 01:14:39.990
两个都一起应用

01:14:41.470 --> 01:14:42.390
左浮动过后

01:14:42.390 --> 01:14:44.230
我们logo这个区域怎么来设置呢

01:14:44.230 --> 01:14:45.110
我们看一下这边

01:14:46.390 --> 01:14:47.070
H1

01:14:47.310 --> 01:14:48.190
是不是有个宽度

01:14:48.950 --> 01:14:49.430
对不对

01:14:49.430 --> 01:14:50.270
是不是有个宽度

01:14:52.030 --> 01:14:52.550
它有

01:14:53.190 --> 01:14:54.350
这里有个H1元素

01:14:54.950 --> 01:14:56.950
这个H1元素它有一个

01:14:57.310 --> 01:14:58.550
我们可以设置这个H1元素

01:14:58.550 --> 01:14:59.790
直接去设置这个H1元素的了

01:15:00.270 --> 01:15:01.470
这个都够下面的H1元素

01:15:02.550 --> 01:15:03.470
去设置这个H1元素

01:15:03.470 --> 01:15:05.470
这个H1元素我们给它设置一个宽度

01:15:06.270 --> 01:15:06.750
高度

01:15:07.110 --> 01:15:08.470
宽高给它设置了

01:15:09.310 --> 01:15:09.870
复制过来

01:15:10.630 --> 01:15:11.190
宽高设置了

01:15:11.190 --> 01:15:11.950
这个很简单吧

01:15:12.590 --> 01:15:14.270
你去量一下图片的尺寸

01:15:14.590 --> 01:15:15.710
然后给它怎么样呢

01:15:15.710 --> 01:15:16.830
给它设置一张背景图

01:15:16.950 --> 01:15:19.070
因为这个背景图的宽高就是200 x 54

01:15:19.390 --> 01:15:20.310
给它设置一张背景图

01:15:20.790 --> 01:15:21.630
背景图了就是这个

01:15:22.390 --> 01:15:22.990
background

01:15:24.150 --> 01:15:24.670
UIL

01:15:26.760 --> 01:15:27.960
返回上级目录图片

01:15:28.200 --> 01:15:29.400
背景图是一个logo

01:15:29.840 --> 01:15:30.680
logopng

01:15:32.120 --> 01:15:32.600
背景图

01:15:33.480 --> 01:15:33.680
好

01:15:33.680 --> 01:15:34.200
咱们来看一下

01:15:34.920 --> 01:15:35.320
行不行

01:15:36.880 --> 01:15:37.520
又出问题了

01:15:38.040 --> 01:15:38.480
为什么

01:15:38.920 --> 01:15:39.560
不要慌啊

01:15:39.560 --> 01:15:40.240
出问题不要慌

01:15:40.240 --> 01:15:42.200
我们开发过程中会出很多问题的

01:15:43.040 --> 01:15:43.840
宽高没用

01:15:44.200 --> 01:15:45.200
为什么看宽高没用

01:15:45.640 --> 01:15:46.000
怎么办

01:15:46.000 --> 01:15:47.160
你直接告诉我怎么办吧

01:15:51.120 --> 01:15:51.560
怎么办

01:15:52.920 --> 01:15:53.800
所以变快级元素

01:15:53.800 --> 01:15:54.200
对不对

01:15:54.200 --> 01:15:55.160
因为它是

01:15:55.400 --> 01:15:56.680
它是含和

01:15:56.680 --> 01:15:58.120
含和是无法设置宽高的

01:15:58.120 --> 01:15:59.080
所以说怎么办

01:15:59.080 --> 01:16:00.040
Display block

01:16:02.040 --> 01:16:02.360
对吧

01:16:02.720 --> 01:16:03.600
直接变快和

01:16:04.040 --> 01:16:05.200
你看是不是就有用了

01:16:05.200 --> 01:16:06.480
A元素是不是就有用了

01:16:06.880 --> 01:16:07.240
对不对

01:16:07.920 --> 01:16:08.280
好

01:16:08.280 --> 01:16:09.840
那么这个地方写好了

01:16:09.840 --> 01:16:12.400
然后我们希望它离上边有一段距离

01:16:13.200 --> 01:16:14.520
离上边我们写个margin top

01:16:14.520 --> 01:16:14.720
对吧

01:16:14.720 --> 01:16:16.680
我们这里写好了有16个项数

01:16:16.920 --> 01:16:17.880
OK我们这里写一下

01:16:18.120 --> 01:16:18.760
margin top

01:16:19.120 --> 01:16:19.760
16个项数

01:16:20.200 --> 01:16:21.520
你看是不是跑到中间来了

01:16:22.280 --> 01:16:24.000
好这个A元素到中间了

01:16:24.240 --> 01:16:24.600
对不对

01:16:25.320 --> 01:16:26.880
好那么现在的A元素已经过来了

01:16:26.880 --> 01:16:27.640
已经过来了

01:16:28.400 --> 01:16:28.960
现在

01:16:29.200 --> 01:16:30.200
还有第二个问题

01:16:31.240 --> 01:16:32.240
这个文字咋办

01:16:33.400 --> 01:16:34.920
文字最简单的方式就把删掉

01:16:35.560 --> 01:16:36.560
这是最简单的方式

01:16:37.280 --> 01:16:38.600
但是我不建议你删掉

01:16:39.240 --> 01:16:39.800
为什么

01:16:40.160 --> 01:16:42.880
因为删掉了它不利于搜索引擎优化

01:16:42.880 --> 01:16:43.400
什么叫一生

01:16:43.400 --> 01:16:45.320
就是你像百度啊谷歌啊

01:16:45.320 --> 01:16:47.520
他们来他会爬去我们的网站

01:16:47.520 --> 01:16:48.600
会抓我们的网站

01:16:49.160 --> 01:16:51.400
那么在我们他抓我们的网站的时候

01:16:51.400 --> 01:16:53.080
他会阅读我们的元代吗

01:16:53.080 --> 01:16:54.040
就像一个机器人

01:16:54.040 --> 01:16:55.320
他会阅读我们的元代吗

01:16:55.880 --> 01:16:57.400
他看不懂什么图片啊

01:16:57.400 --> 01:16:58.680
那样是他完全看不懂

01:16:58.680 --> 01:16:59.840
他只看那种文字

01:17:00.520 --> 01:17:01.760
如果说你把这个文字删了

01:17:01.760 --> 01:17:03.400
他就不知道你这个网站标题是啥了

01:17:03.920 --> 01:17:04.560
为什么

01:17:04.760 --> 01:17:06.360
所以文字还得还必须得删

01:17:06.680 --> 01:17:07.800
但是呢怎么办呢

01:17:08.000 --> 01:17:10.000
我们可以用样式让他显示不出来

01:17:10.560 --> 01:17:13.000
有很多很多那种方式可以让他显示不出来

01:17:13.360 --> 01:17:14.960
比方我们这里呢使用这种方式

01:17:15.200 --> 01:17:16.400
叫做Tex indent

01:17:16.880 --> 01:17:17.240
看一下

01:17:18.800 --> 01:17:19.520
这东西是什么呢

01:17:19.520 --> 01:17:20.880
表示文字说尽

01:17:22.280 --> 01:17:23.440
Tex的intent

01:17:23.680 --> 01:17:24.520
文字说尽

01:17:25.280 --> 01:17:25.800
你看啊

01:17:25.800 --> 01:17:28.320
我们这里写零个像素

01:17:28.600 --> 01:17:29.160
一个像素

01:17:29.160 --> 01:17:30.360
你看是不是文字

01:17:31.360 --> 01:17:32.560
靠那个靠U了

01:17:32.560 --> 01:17:33.000
对吧

01:17:33.240 --> 01:17:35.000
就好像我们平时写中文的时候

01:17:35.000 --> 01:17:37.120
每个自然段前面说尽两个字符

01:17:37.640 --> 01:17:38.360
所以这个意思

01:17:38.560 --> 01:17:40.120
一个字符比方说十四个像素

01:17:40.120 --> 01:17:41.080
就二十八个像素

01:17:41.240 --> 01:17:42.640
就文字说尽的意思

01:17:43.480 --> 01:17:44.680
那你这里可以写复数啊

01:17:46.160 --> 01:17:47.400
复十个像素

01:17:47.400 --> 01:17:49.000
你看是不是反向说尽

01:17:49.520 --> 01:17:51.240
再写复数再写复数

01:17:51.240 --> 01:17:52.040
跑没了

01:17:52.240 --> 01:17:52.960
我刚写多少了

01:17:52.960 --> 01:17:54.200
我刚写复了999

01:17:54.200 --> 01:17:55.040
他一定跑没了

01:17:55.480 --> 01:17:56.440
Tex indent

01:17:56.640 --> 01:17:57.760
复的999

01:17:57.760 --> 01:17:58.600
他一定跑没了

01:17:58.840 --> 01:17:59.880
所以文字放在这

01:18:00.000 --> 01:18:00.880
但是他不影响

01:18:00.920 --> 01:18:01.800
是不是就出来了

01:18:01.960 --> 01:18:03.040
网站就出来了吧

01:18:04.280 --> 01:18:05.640
好接下来中间这一部分

01:18:06.000 --> 01:18:06.800
好中间这一部分

01:18:06.800 --> 01:18:07.280
来吧

01:18:08.120 --> 01:18:09.120
中间这一部分呢

01:18:09.120 --> 01:18:09.800
你看一下

01:18:10.080 --> 01:18:11.320
每一个拆单是啥

01:18:12.320 --> 01:18:14.000
每个拆单是不是一个li元素

01:18:14.960 --> 01:18:16.000
li是什么盒子

01:18:16.000 --> 01:18:16.880
是不是快合

01:18:16.960 --> 01:18:18.960
所以说他为什么变成这个样子

01:18:19.280 --> 01:18:20.320
就是因为li啊

01:18:20.320 --> 01:18:21.120
它是个快合

01:18:21.120 --> 01:18:22.960
你看是不是中向排列的

01:18:23.440 --> 01:18:23.920
怎么办

01:18:24.360 --> 01:18:25.840
浮动起来全部给我

01:18:25.840 --> 01:18:26.880
全部给我那个

01:18:27.880 --> 01:18:28.560
横向排列

01:18:28.560 --> 01:18:29.680
我这里可以这样做吧

01:18:29.680 --> 01:18:31.440
我们也可以在这里一个个加

01:18:31.440 --> 01:18:32.560
什么fl一个个加

01:18:32.560 --> 01:18:33.560
但是太麻烦了

01:18:34.000 --> 01:18:34.600
太麻烦了

01:18:34.600 --> 01:18:35.360
把这个删掉

01:18:36.360 --> 01:18:36.880
我们这里呢

01:18:36.880 --> 01:18:37.840
还用这种方式

01:18:37.840 --> 01:18:39.040
在这里写个那样式

01:18:39.360 --> 01:18:40.800
这个是拆单

01:18:40.800 --> 01:18:41.440
menu

01:18:42.360 --> 01:18:42.800
来吧

01:18:43.280 --> 01:18:44.720
我们写一个header

01:18:45.000 --> 01:18:45.600
menu

01:18:47.880 --> 01:18:49.960
他下面的什么呢

01:18:49.960 --> 01:18:51.040
他下面的li

01:18:51.040 --> 01:18:51.360
对不对

01:18:51.360 --> 01:18:52.120
找到header

01:18:52.120 --> 01:18:53.600
menu下面的li

01:18:54.440 --> 01:18:55.040
然后呢

01:18:55.040 --> 01:18:56.600
让这li全部给我浮动起来

01:18:56.880 --> 01:18:57.600
flows lift

01:18:57.880 --> 01:18:58.640
全部浮动起来

01:18:59.920 --> 01:19:00.080
好

01:19:00.080 --> 01:19:00.720
你看一下吧

01:19:01.440 --> 01:19:01.880
不说别的

01:19:01.880 --> 01:19:02.880
他至少并排了吗

01:19:03.400 --> 01:19:03.600
对吧

01:19:03.600 --> 01:19:04.400
是不是并排了

01:19:05.560 --> 01:19:06.280
并排了吧

01:19:06.960 --> 01:19:07.160
好

01:19:07.160 --> 01:19:07.920
然后我们看到

01:19:07.920 --> 01:19:09.200
他里边还有一个问题

01:19:09.320 --> 01:19:11.240
就是这个官网首页这几个字

01:19:11.360 --> 01:19:11.920
你看啊

01:19:13.480 --> 01:19:14.520
说做起来很快的

01:19:14.960 --> 01:19:16.360
官网首页这几个字

01:19:16.400 --> 01:19:18.280
跟这个Span元素是不是并排显示的

01:19:19.280 --> 01:19:19.800
看没

01:19:19.800 --> 01:19:22.320
官网首页跟这个Span元素是不是并排显示的

01:19:22.320 --> 01:19:23.120
那怎么办

01:19:23.680 --> 01:19:24.840
我希望他换个行

01:19:24.840 --> 01:19:26.840
把这个Span元素变成宽一盒不就完了吗

01:19:27.240 --> 01:19:28.600
所以把这个li里边的什么

01:19:28.600 --> 01:19:30.640
Span元素电杂变宽一盒

01:19:30.640 --> 01:19:32.360
display block

01:19:33.840 --> 01:19:34.800
肯定给我换行

01:19:34.800 --> 01:19:35.800
你必须给我换行

01:19:36.400 --> 01:19:37.040
你看

01:19:37.040 --> 01:19:38.000
因为他是个宽一盒

01:19:38.000 --> 01:19:38.200
对吧

01:19:38.200 --> 01:19:39.400
宽一盒一定是单独一行

01:19:39.800 --> 01:19:40.600
你看li

01:19:40.760 --> 01:19:41.440
第二个li

01:19:41.440 --> 01:19:42.160
第三个li

01:19:42.640 --> 01:19:43.360
还是不好看

01:19:43.360 --> 01:19:43.560
对吧

01:19:43.560 --> 01:19:44.240
还是不好看

01:19:44.240 --> 01:19:44.720
没关系

01:19:44.720 --> 01:19:45.400
慢慢来调

01:19:46.400 --> 01:19:47.320
他的每个li

01:19:47.320 --> 01:19:48.560
那实际上是有个宽度的

01:19:50.760 --> 01:19:51.720
他的每个li

01:19:51.720 --> 01:19:54.240
他实际上是有一个宽度的

01:19:54.240 --> 01:19:54.880
我看一下

01:19:56.200 --> 01:19:58.000
他这边宽度

01:20:04.590 --> 01:20:06.110
宽度是110

01:20:06.110 --> 01:20:06.870
110

01:20:06.870 --> 01:20:08.710
所以说我们这里的每一个li

01:20:08.710 --> 01:20:09.470
很简单

01:20:09.710 --> 01:20:11.550
我给他设置一个宽度110

01:20:12.430 --> 01:20:13.790
宽度110

01:20:16.010 --> 01:20:16.770
你看一下

01:20:17.370 --> 01:20:18.170
宽度是不是有了

01:20:18.210 --> 01:20:19.210
每个li都有宽度了

01:20:19.210 --> 01:20:19.650
对吧

01:20:19.650 --> 01:20:21.370
但是在每一个li的内部

01:20:21.370 --> 01:20:22.650
文字是不是没有居中

01:20:23.170 --> 01:20:25.090
我们希望他的内部的文字居中

01:20:25.090 --> 01:20:26.490
文字居中非常简单

01:20:26.650 --> 01:20:27.850
使用tags而来

01:20:28.090 --> 01:20:29.210
文字的对齐

01:20:29.210 --> 01:20:29.930
使用center

01:20:29.930 --> 01:20:31.330
这个东西表示文字居中

01:20:32.010 --> 01:20:32.930
像这些属性

01:20:33.570 --> 01:20:34.890
说一句话你就懂了

01:20:35.090 --> 01:20:36.170
都不用去解释

01:20:36.170 --> 01:20:37.890
真正要解释的就是个核模型

01:20:38.810 --> 01:20:40.490
还有什么样式冲突怎么办

01:20:40.490 --> 01:20:41.530
你先怎么去排列

01:20:41.530 --> 01:20:42.770
这东西非常简单

01:20:42.930 --> 01:20:44.170
这是用于什么复杂的呢

01:20:44.890 --> 01:20:45.330
你看

01:20:45.330 --> 01:20:46.050
所以文字居中了

01:20:46.050 --> 01:20:47.170
你看每一个li

01:20:47.330 --> 01:20:48.170
所以文字居中了

01:20:48.810 --> 01:20:49.290
对不对

01:20:49.850 --> 01:20:50.250
好

01:20:50.770 --> 01:20:52.050
这些东西还是不对

01:20:52.250 --> 01:20:52.930
还是不对

01:20:53.050 --> 01:20:55.490
那么这里你看文字格的比较开

01:20:55.490 --> 01:20:55.890
对吧

01:20:55.890 --> 01:20:57.650
是不是文字格的比较开

01:20:58.050 --> 01:20:58.690
这个文字

01:20:59.250 --> 01:21:00.930
那么这个东西我们可以用什么来控制

01:21:00.930 --> 01:21:02.090
用航高来控制

01:21:02.090 --> 01:21:03.370
这个航高收的是30

01:21:03.810 --> 01:21:04.930
我们这里直接设置

01:21:05.170 --> 01:21:05.850
南亥产

01:21:07.490 --> 01:21:08.730
航高30个相处

01:21:10.880 --> 01:21:11.280
你看

01:21:11.680 --> 01:21:12.360
就这样子的

01:21:12.520 --> 01:21:13.120
变这样子的

01:21:13.360 --> 01:21:14.160
还有说还是不对

01:21:14.160 --> 01:21:14.840
慢慢来调

01:21:14.840 --> 01:21:16.200
一个地点一个连调

01:21:16.600 --> 01:21:17.920
文字大小所以不对

01:21:18.040 --> 01:21:19.360
文字大小这里设置的是多少呢

01:21:19.360 --> 01:21:20.560
这18个相处

01:21:20.960 --> 01:21:21.880
所以说文字大小

01:21:22.440 --> 01:21:23.200
from the size

01:21:23.440 --> 01:21:24.120
18个相处

01:21:25.920 --> 01:21:26.560
你看这边

01:21:26.720 --> 01:21:27.360
文字大小变了

01:21:27.360 --> 01:21:27.760
对吧

01:21:27.920 --> 01:21:29.640
但是这个十般元素的文字大小

01:21:29.640 --> 01:21:31.240
是不是要变有比较小

01:21:31.400 --> 01:21:32.640
这十般元素的文字大小

01:21:33.040 --> 01:21:33.440
多少呢

01:21:33.440 --> 01:21:34.240
12个相处

01:21:34.240 --> 01:21:34.880
又来一倍

01:21:35.240 --> 01:21:36.480
十般元素的文字大小

01:21:36.720 --> 01:21:38.000
这东西写起来很快的

01:21:39.320 --> 01:21:40.480
就一开始你写不熟练

01:21:40.480 --> 01:21:41.600
肯定是慢一点

01:21:41.720 --> 01:21:43.680
但是你写熟练了过很快很快的

01:21:43.680 --> 01:21:44.040
真的

01:21:44.600 --> 01:21:44.800
好

01:21:44.800 --> 01:21:46.360
那么这里写完了过还是有点不对

01:21:46.840 --> 01:21:47.640
你看这个li

01:21:48.600 --> 01:21:49.680
为什么还是不对叫呢

01:21:50.120 --> 01:21:51.440
是因为他你顶部

01:21:52.720 --> 01:21:54.800
他顶部他整个都是li

01:21:54.800 --> 01:21:55.440
只不过呢

01:21:55.440 --> 01:21:56.480
他有一个这个

01:21:56.840 --> 01:21:57.520
pending

01:21:57.520 --> 01:21:59.440
pending20个相数

01:22:00.280 --> 01:22:01.880
pending top有20个相数

01:22:01.880 --> 01:22:02.560
当然了

01:22:02.560 --> 01:22:04.400
你也可以去给A元素去设置pending

01:22:04.400 --> 01:22:04.920
也可以

01:22:04.920 --> 01:22:06.160
比方说我们给A元素设置

01:22:07.680 --> 01:22:09.720
找到这个li下面的A元素

01:22:11.080 --> 01:22:12.960
黑道下面的menu下面的li的

01:22:12.960 --> 01:22:13.560
A元素

01:22:13.560 --> 01:22:14.720
这样精确全中

01:22:14.920 --> 01:22:15.920
然后给他设置

01:22:16.160 --> 01:22:17.040
上面的pending

01:22:17.360 --> 01:22:19.360
但是A元素是上下的距离

01:22:19.360 --> 01:22:20.160
都是不能设置的

01:22:20.160 --> 01:22:21.440
所以说把它变快和再说

01:22:22.000 --> 01:22:22.880
把它变快和

01:22:23.240 --> 01:22:24.440
A元素变快和

01:22:24.600 --> 01:22:25.920
然后了宽度给我称慢

01:22:26.440 --> 01:22:27.560
高度给我称慢

01:22:28.360 --> 01:22:29.600
因为我设置的pending的时候

01:22:29.600 --> 01:22:31.120
是不是会增加盒子尺寸

01:22:31.240 --> 01:22:32.280
我们刚才讲过对吧

01:22:32.280 --> 01:22:34.760
因为我这个地方默认是设置的是内容区域的

01:22:34.760 --> 01:22:36.560
我加了pending过后尺寸出不变了

01:22:36.560 --> 01:22:38.480
所以说我们这里呢是用box sizing

01:22:38.800 --> 01:22:39.520
把它变成

01:22:40.680 --> 01:22:42.720
整个边框范围内的宽高

01:22:43.200 --> 01:22:45.800
整个边框范围内宽高都是100%

01:22:46.160 --> 01:22:47.080
然后呢收置pending

01:22:47.320 --> 01:22:48.680
pending top多少呢

01:22:49.640 --> 01:22:50.240
20个相处

01:22:51.360 --> 01:22:51.960
好你看一下

01:22:55.100 --> 01:22:56.700
li是不是整个账满的

01:22:56.700 --> 01:22:57.220
对不对

01:22:57.380 --> 01:22:57.940
账满的

01:22:57.940 --> 01:22:59.260
然后里边A元素

01:22:59.820 --> 01:23:00.660
你看A元素

01:23:00.860 --> 01:23:01.740
是不是上面有个宽度

01:23:01.980 --> 01:23:03.220
有一个pending看绿色

01:23:03.220 --> 01:23:04.140
绿色区域

01:23:04.340 --> 01:23:05.500
绿色区域就是pending

01:23:07.020 --> 01:23:07.380
看没

01:23:08.140 --> 01:23:09.300
好要不说仔细看的话

01:23:09.900 --> 01:23:10.820
这个li啊

01:23:10.820 --> 01:23:12.580
它还是没有把整个UO站满

01:23:12.580 --> 01:23:12.980
看没

01:23:12.980 --> 01:23:14.380
是不是没有把整个UO站满

01:23:14.540 --> 01:23:15.220
这个li

01:23:15.980 --> 01:23:16.340
对吧

01:23:16.660 --> 01:23:18.060
整个UO它都没有站满

01:23:18.300 --> 01:23:19.140
UO没有站满

01:23:19.140 --> 01:23:20.860
是因为UO我没有收置宽高度

01:23:21.260 --> 01:23:22.540
UO我给它收置个高度

01:23:23.540 --> 01:23:24.060
UO

01:23:24.580 --> 01:23:25.500
这是个UO

01:23:27.560 --> 01:23:28.000
高度

01:23:28.560 --> 01:23:29.200
100%吧

01:23:29.880 --> 01:23:30.560
管它那么多

01:23:31.040 --> 01:23:32.640
然后li高度100%

01:23:33.760 --> 01:23:34.760
这样子就把账满

01:23:35.280 --> 01:23:35.680
你看

01:23:36.320 --> 01:23:38.320
liUO是不账满的把高度

01:23:38.640 --> 01:23:39.760
li是不账满的

01:23:40.000 --> 01:23:40.200
对吧

01:23:40.200 --> 01:23:41.280
每个li账满的

01:23:41.480 --> 01:23:42.560
A元素也是账满的

01:23:42.560 --> 01:23:44.360
因为它是快合宽高

01:23:44.920 --> 01:23:45.320
对吧

01:23:45.320 --> 01:23:45.640
然后呢

01:23:45.640 --> 01:23:46.480
收置个box

01:23:46.480 --> 01:23:47.320
审整box

01:23:47.320 --> 01:23:48.200
如果说你不收置这个

01:23:48.200 --> 01:23:48.880
你看麻烦了

01:23:49.320 --> 01:23:50.480
所以高度多了一截

01:23:50.880 --> 01:23:51.120
对吧

01:23:51.120 --> 01:23:52.840
因为加上pending过后多了一截

01:23:52.840 --> 01:23:53.280
对不对

01:23:53.560 --> 01:23:53.720
好

01:23:53.720 --> 01:23:54.040
你看

01:23:54.040 --> 01:23:54.560
就出来了

01:23:55.600 --> 01:23:56.000
好

01:23:56.320 --> 01:23:56.760
然后呢

01:23:56.760 --> 01:23:57.120
现在呢

01:23:57.120 --> 01:23:59.560
我们希望它整个UO

01:23:59.560 --> 01:24:00.800
你看整个UO

01:24:00.800 --> 01:24:01.720
你左边

01:24:02.040 --> 01:24:03.280
这个A起一远一点

01:24:03.280 --> 01:24:04.720
你看这一东西都好收置的啊

01:24:05.120 --> 01:24:06.080
整个UO

01:24:06.080 --> 01:24:07.720
你左边的A起一远一点

01:24:07.720 --> 01:24:08.280
收置什么

01:24:09.080 --> 01:24:10.560
收置margin left

01:24:10.560 --> 01:24:11.200
你看

01:24:12.040 --> 01:24:13.400
margin left

01:24:14.680 --> 01:24:15.200
margin right

01:24:15.200 --> 01:24:15.960
你看这个margin right

01:24:15.960 --> 01:24:17.000
是不是要离左边的

01:24:17.560 --> 01:24:18.640
A起一远一点

01:24:18.800 --> 01:24:19.200
对吧

01:24:19.480 --> 01:24:21.000
就是和墨型的东西全部可以用起来

01:24:21.000 --> 01:24:22.080
我看一下这里收置了多少

01:24:22.080 --> 01:24:23.160
我这哪在训谅了

01:24:23.160 --> 01:24:24.040
36个相处

01:24:24.280 --> 01:24:25.320
那就36个相处为

01:24:29.880 --> 01:24:30.160
好

01:24:30.160 --> 01:24:31.400
是不是隔了一段距离了

01:24:32.840 --> 01:24:33.400
对不对

01:24:34.160 --> 01:24:34.320
好

01:24:34.320 --> 01:24:35.680
我们把这个把右边的东西做完

01:24:35.680 --> 01:24:36.400
做完过后了

01:24:36.400 --> 01:24:37.440
咱们今天就到这

01:24:37.440 --> 01:24:38.200
到这

01:24:38.800 --> 01:24:39.240
好

01:24:39.480 --> 01:24:40.160
右边的东西

01:24:40.160 --> 01:24:40.800
右边的东西呢

01:24:40.800 --> 01:24:41.440
是一样的

01:24:41.720 --> 01:24:42.680
左边的东西还有一个

01:24:42.680 --> 01:24:43.640
左边还有一个

01:24:43.920 --> 01:24:44.800
左边还有一个什么呢

01:24:44.800 --> 01:24:46.360
左边还有一个就是选中效果

01:24:47.040 --> 01:24:48.280
怎么来做选中效果呢

01:24:48.800 --> 01:24:49.560
比方说这个

01:24:49.880 --> 01:24:51.480
比方说第一个被选中

01:24:51.480 --> 01:24:53.640
那么我就给第一个Li加上一个iqtl

01:24:54.160 --> 01:24:55.240
如果说第二个被选中

01:24:55.240 --> 01:24:57.040
我就给第二个Li加上一个iqtl

01:24:57.160 --> 01:24:57.600
对吧

01:24:57.960 --> 01:24:59.360
再加上一个特殊的样式

01:24:59.680 --> 01:25:02.040
那么我们利用那个样式覆盖的就是

01:25:02.400 --> 01:25:03.760
选中的越精准

01:25:03.760 --> 01:25:05.880
是不是样式的有特殊性就越高

01:25:05.880 --> 01:25:06.840
我们就可以这样子写

01:25:07.160 --> 01:25:09.800
header下边的什么menu下边的什么i

01:25:10.000 --> 01:25:12.440
什么那个Li的iqtl

01:25:12.960 --> 01:25:13.440
对吧

01:25:14.160 --> 01:25:16.680
是不是把前面的Li这种写法就该覆盖掉了

01:25:16.800 --> 01:25:17.040
对不对

01:25:17.040 --> 01:25:17.960
menu下面的Li

01:25:18.000 --> 01:25:19.280
这是menu下面的Li

01:25:19.280 --> 01:25:20.600
iqtl是不是更加特殊

01:25:20.960 --> 01:25:22.280
然后把他的样式给他覆盖一下

01:25:22.480 --> 01:25:23.280
覆盖成什么呢

01:25:23.560 --> 01:25:25.080
覆盖成那个就是

01:25:26.760 --> 01:25:28.160
字体颜色给他改一下

01:25:28.640 --> 01:25:29.840
看一下这边是什么字体颜色

01:25:31.040 --> 01:25:32.000
字体颜色改成这个

01:25:33.680 --> 01:25:34.120
好了

01:25:34.560 --> 01:25:35.120
改成这个

01:25:37.440 --> 01:25:38.000
看一下吧

01:25:39.440 --> 01:25:40.160
字体颜色改了

01:25:40.160 --> 01:25:40.480
对吧

01:25:40.480 --> 01:25:41.280
字体颜色改了

01:25:41.800 --> 01:25:42.320
改成这个

01:25:42.640 --> 01:25:43.720
然后背景呢

01:25:43.720 --> 01:25:45.840
背景是一张图片

01:25:45.840 --> 01:25:47.320
它是背景是一张图片

01:25:47.520 --> 01:25:48.640
我看它的背景图是啥

01:25:50.040 --> 01:25:50.640
背景图是这个

01:25:51.280 --> 01:25:51.800
复制一下吧

01:25:52.360 --> 01:25:54.040
这些东西你们要自己去找一道背景图

01:25:54.040 --> 01:25:54.520
也可以找到

01:25:54.520 --> 01:25:56.280
这些浪费时间的工作了

01:25:56.280 --> 01:25:56.800
我们就不写了

01:25:57.680 --> 01:25:59.360
就在email级文件下面的这个玩意

01:25:59.360 --> 01:26:00.960
这可以给双一号也可以不给

01:26:01.960 --> 01:26:02.760
给双一号的目的呢

01:26:02.760 --> 01:26:04.280
是防止的里面出现特殊制服

01:26:05.000 --> 01:26:06.320
最好给一下

01:26:07.120 --> 01:26:07.400
好了

01:26:07.400 --> 01:26:07.880
背景图

01:26:08.240 --> 01:26:09.000
一样就出来了

01:26:09.600 --> 01:26:10.280
非常简单

01:26:11.080 --> 01:26:12.680
那怎么来做这个鼠标椅上去

01:26:12.680 --> 01:26:13.640
它就变成这个样子呢

01:26:13.640 --> 01:26:14.480
那还不简单吗

01:26:16.120 --> 01:26:16.520
怎么做

01:26:17.680 --> 01:26:20.040
给这个Li写一个hover

01:26:20.600 --> 01:26:21.920
鼠标移入样式

01:26:22.480 --> 01:26:23.680
移入的时候是一样的

01:26:24.280 --> 01:26:25.000
一样的样式

01:26:27.220 --> 01:26:27.660
你看这边

01:26:28.380 --> 01:26:29.060
移入的时候

01:26:29.780 --> 01:26:30.580
是一样的样式

01:26:31.020 --> 01:26:31.220
对吧

01:26:31.220 --> 01:26:32.220
完全一样的样式

01:26:32.420 --> 01:26:32.740
对不对

01:26:33.540 --> 01:26:33.660
好

01:26:33.660 --> 01:26:34.220
那么这里呢

01:26:34.220 --> 01:26:36.020
其实这两个样式是完全一样的话

01:26:36.020 --> 01:26:36.780
你可以这样子写

01:26:36.780 --> 01:26:38.060
用逗号分割

01:26:38.780 --> 01:26:39.220
逗号

01:26:40.060 --> 01:26:40.700
这样子写过来

01:26:41.180 --> 01:26:42.260
效果完全一样

01:26:44.340 --> 01:26:45.900
你看这个效果是完全一样的

01:26:46.420 --> 01:26:47.700
就是这个样式

01:26:47.820 --> 01:26:48.420
这个样式

01:26:48.420 --> 01:26:49.380
我把它合并起来

01:26:49.380 --> 01:26:50.820
一起写是一样的效果

01:26:50.820 --> 01:26:51.540
是一样的效果

01:26:51.540 --> 01:26:53.220
跟你分开写完全一样

01:26:53.220 --> 01:26:54.020
完全一样

01:26:54.980 --> 01:26:57.220
昨天不是有同学问在什么叫愚法堂吗

01:26:57.220 --> 01:26:57.980
这就是愚法堂

01:26:58.700 --> 01:26:59.500
它这种写法

01:26:59.500 --> 01:27:01.140
跟刚才那种写法是完全效果

01:27:01.140 --> 01:27:01.980
完全一样的

01:27:02.100 --> 01:27:03.620
只是它写下来更加方便一点

01:27:04.700 --> 01:27:05.500
这就是愚法堂

01:27:06.420 --> 01:27:07.020
那就出来了

01:27:08.380 --> 01:27:08.540
好

01:27:08.540 --> 01:27:09.340
今天我们就到这吧

01:27:09.340 --> 01:27:09.780
到这

01:27:09.780 --> 01:27:11.180
反正每天就做一点嘛

01:27:11.340 --> 01:27:11.860
不用着急

01:27:11.860 --> 01:27:12.860
放了100个新

01:27:12.860 --> 01:27:14.660
把一半里的新放到God's World里面

01:27:15.060 --> 01:27:16.020
就一定做得完的

01:27:16.020 --> 01:27:17.460
这个还都还做不完

01:27:18.380 --> 01:27:18.780
不可能

01:27:18.780 --> 01:27:19.140
不可能

01:27:19.140 --> 01:27:19.660
我只能告诉你

01:27:19.660 --> 01:27:19.940
不可能

01:27:19.940 --> 01:27:20.820
绝对做得完的

01:27:20.820 --> 01:27:21.300
放心

01:27:21.300 --> 01:27:22.620
就是一开始会做得慢一点

01:27:22.620 --> 01:27:23.420
但是直时一学

01:27:23.420 --> 01:27:24.780
你看这我们十几二十分钟

01:27:24.780 --> 01:27:25.660
就做成这个样子了

01:27:25.660 --> 01:27:26.620
非常非常快的

01:27:30.280 --> 01:27:30.600
没事

01:27:30.600 --> 01:27:31.520
你们去消化一下

01:27:31.520 --> 01:27:32.080
你们先

01:27:32.080 --> 01:27:33.440
你们下去一定要做作业

01:27:33.440 --> 01:27:34.680
要把它写成这个样子

01:27:34.680 --> 01:27:35.200
这二八斤的

01:27:35.200 --> 01:27:36.400
要把它写成这个样子

01:27:36.400 --> 01:27:38.080
那么优别的东西还没有做完

01:27:38.080 --> 01:27:38.240
对吧

01:27:38.240 --> 01:27:39.800
你可以自行去完成一下

01:27:39.800 --> 01:27:41.320
你试着去做一下

01:27:41.320 --> 01:27:42.520
其实已经很简单了

01:27:42.760 --> 01:27:43.880
这些东西全都可以做了

01:27:43.880 --> 01:27:45.000
都非常简单了

01:27:45.000 --> 01:27:46.200
已经没有什么负担了

01:27:46.200 --> 01:27:47.480
负担东西全部讲完了

01:27:49.410 --> 01:27:50.810
盘顶可以换成码颈吗

01:27:50.810 --> 01:27:51.650
是这样子

01:27:51.650 --> 01:27:53.050
如果说你说这个

01:27:53.050 --> 01:27:54.410
上边的上边距是吧

01:27:56.170 --> 01:27:56.890
你说这个

01:27:57.250 --> 01:27:58.610
我说就说这个点吧

01:27:58.610 --> 01:28:00.050
因为我是怎么考虑的呢

01:28:00.050 --> 01:28:02.610
因为这些东西都需要程序经验了

01:28:02.610 --> 01:28:04.210
你换成盘顶的

01:28:04.210 --> 01:28:05.210
你换成盘顶的

01:28:05.210 --> 01:28:05.810
它是这样子

01:28:05.810 --> 01:28:06.890
你换成码颈可不可以

01:28:06.890 --> 01:28:08.290
效果是完全一样的

01:28:08.290 --> 01:28:08.890
你看着

01:28:08.890 --> 01:28:09.610
码颈

01:28:09.610 --> 01:28:10.450
效果完全一样

01:28:10.450 --> 01:28:11.010
对吧

01:28:11.010 --> 01:28:13.210
但是A元素的范围是不是变载了

01:28:14.010 --> 01:28:14.650
对不对

01:28:14.650 --> 01:28:15.970
你看A元素

01:28:15.970 --> 01:28:17.650
A元素高度百分之百

01:28:17.650 --> 01:28:19.650
换成码颈是不是高出来一截

01:28:20.570 --> 01:28:20.810
对不对

01:28:20.810 --> 01:28:22.250
因为它高度是百分之百

01:28:22.250 --> 01:28:23.210
这还不是主要的问题

01:28:23.210 --> 01:28:24.090
主要的问题是

01:28:24.090 --> 01:28:25.130
当你点这的时候

01:28:25.130 --> 01:28:25.890
你就点不了了

01:28:25.890 --> 01:28:26.650
它是个A元素

01:28:26.650 --> 01:28:27.810
你看是不是点不了了

01:28:27.810 --> 01:28:29.330
因为它跑到盒子外边去了

01:28:29.330 --> 01:28:29.890
对吧

01:28:29.890 --> 01:28:31.170
跑到码颈外边去了

01:28:31.170 --> 01:28:32.770
所以这里用盘顶的是最好的

01:28:33.650 --> 01:28:34.770
这些你做多了

01:28:34.770 --> 01:28:35.650
这些东西开发多了

01:28:35.650 --> 01:28:37.130
你慢慢就懂了

01:28:37.130 --> 01:28:37.890
你要说的话

01:28:37.890 --> 01:28:38.490
靠我说的话

01:28:38.490 --> 01:28:40.290
就总结几千几页就总结不完

01:28:40.290 --> 01:28:41.610
你开发多了就自然明白了

01:28:41.610 --> 01:28:42.930
你看现在我们指着它

01:28:42.930 --> 01:28:45.170
因为盘顶它是盒子的内部的一部分

01:28:45.170 --> 01:28:45.490
对吧

01:28:45.490 --> 01:28:47.210
所以我们点这的时候

01:28:47.210 --> 01:28:48.090
点顶端的时候

01:28:48.090 --> 01:28:49.170
是不是也可以点

01:28:49.170 --> 01:28:50.690
也可以点击的

01:28:50.690 --> 01:28:51.850
它也是一个超链接

01:28:51.850 --> 01:28:52.570
是这么个意思

01:28:53.890 --> 01:28:54.690
全都是细节

01:28:54.690 --> 01:28:55.450
满满的细节

01:28:57.650 --> 01:28:58.250
马锦涛

01:28:58.250 --> 01:29:03.310
对马锦涛是没有什么颜色的一东西的

01:29:03.310 --> 01:29:03.550
好

01:29:03.550 --> 01:29:05.310
那么现在我就交给这个

01:29:06.670 --> 01:29:07.590
深处异地

01:29:07.590 --> 01:29:09.710
深处远方的毛利卡解决了

01:29:11.030 --> 01:29:12.150
我们今天一天不用

01:29:12.150 --> 01:29:13.670
因为毕竟有零技术的学员

01:29:13.670 --> 01:29:15.070
我们一天不适合讲多了

01:29:15.070 --> 01:29:16.110
不是说不跟你们讲

01:29:16.110 --> 01:29:16.670
你放心

01:29:16.670 --> 01:29:17.310
你放一百个心

01:29:17.310 --> 01:29:18.190
绝对可以做完的

01:29:18.190 --> 01:29:20.390
这个东西后边说得很快的

01:29:20.390 --> 01:29:22.030
我是成都的人

01:29:22.030 --> 01:29:23.870
那么呼唤一下毛利卡大魔王

01:29:25.430 --> 01:29:26.870
盘顶是内边距的

01:29:26.870 --> 01:29:27.710
是内边距

01:29:27.710 --> 01:29:29.310
是边框到内部的距离

