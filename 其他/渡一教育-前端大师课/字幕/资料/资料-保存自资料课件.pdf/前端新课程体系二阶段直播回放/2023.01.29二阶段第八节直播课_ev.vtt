WEBVTT

00:00.050 --> 00:06.190
大家晚上好 这边277和287的同学

00:06.450 --> 00:10.810
来了人越来越少了 也不知道是不是过年的这个原因

00:11.310 --> 00:15.150
今天晚上首先要给大家讲一个东西

00:15.930 --> 00:17.710
就是关于一个这个

00:17.970 --> 00:20.010
Web性能优化的这个东西

00:20.270 --> 00:23.090
因为这个的话 之前有同学提到

00:23.350 --> 00:26.670
同学提到就是关于这个Web性能优化这一块

00:26.930 --> 00:29.230
特别是那么几个这个指标

00:29.630 --> 00:32.550
LCP FID CLS

00:32.810 --> 00:33.590
这几个东西

00:34.090 --> 00:38.190
所以说我想着趁着这边这个直播课

00:38.450 --> 00:41.510
花一点时间给大家讲一下

00:42.030 --> 00:43.310
简单给大家说一下

00:43.570 --> 00:45.870
这个占用不到太多的这个时间

00:46.130 --> 00:47.910
主要就是给大家理一个这个大纲

00:48.170 --> 00:53.030
你知道就是Web性能优化这一块 回头你学的话该怎么去学习

00:53.550 --> 00:54.310
好吧

00:55.290 --> 01:00.150
我们这边一点点来看一下 把这个讲完了之后的那个暴龙你再来

01:02.410 --> 01:03.950
我们这边来看一下

01:05.230 --> 01:07.790
关于这个Web性能的这个优化

01:08.050 --> 01:12.410
早期的时候 早期的时候其实不存在什么性能优化

01:12.670 --> 01:15.990
那当然这个早期的话就是指的非常非常早的时候了

01:16.750 --> 01:20.850
对不对 就刚开始这个互联网刚诞生的时候了

01:21.110 --> 01:23.150
那个时候的话咱们这个浏览器

01:23.610 --> 01:27.450
浏览器的话你只要把什么呢 只要把后段传递过来的这个页面

01:28.210 --> 01:30.010
然后接下来把他这个显示出来

01:30.530 --> 01:31.050
就可以了

01:32.050 --> 01:33.090
哎呀 朱老板又来了

01:34.370 --> 01:37.050
朱老板你到时候公司上市了 你一定要通知我呀

01:38.730 --> 01:39.730
一定记得通知我

01:42.290 --> 01:46.410
我这边先继续啊 我先把今天晚上这边要讲的 要给大家介绍的这个内容

01:46.650 --> 01:47.570
先给大家介绍一下

01:48.130 --> 01:49.970
早期的话就显示出来就可以了

01:50.190 --> 01:53.870
但是慢慢的话就是Web这个Web开发者发现啊

01:54.350 --> 01:56.070
就如果自己的这个页面

01:57.030 --> 02:00.150
展示出来所需的这个时间 他越长

02:00.950 --> 02:03.390
那么自然而然作为用户的话他就干嘛呀

02:03.870 --> 02:05.270
就越没有这个耐心啊

02:06.150 --> 02:10.390
对不对 我一个页面我比如说打开的话要花个这个35秒

02:11.150 --> 02:13.550
比如说正常的页面表一秒钟就打开了对不对

02:13.990 --> 02:16.070
其他的这个页面的话要花个这个

02:16.790 --> 02:21.910
3秒5秒啊 甚至更长 那这个用户的话他必然是什么 这必然是没有耐心的

02:22.690 --> 02:26.010
对不对 所以对应的网页呈现率就越低

02:26.530 --> 02:27.290
这句话怎么理解

02:28.050 --> 02:31.890
就是你这个网页转转转要转半天 那这个用户他可能就把他关掉了

02:32.650 --> 02:34.650
对不对 就直接就关掉他就不看了

02:35.930 --> 02:40.610
好 这边的话是来自就是各大平台的一些数据啊 这个大家可以大致漏一眼

02:41.590 --> 02:48.750
嗯 谷歌啊 谷歌的话这边有10条数据啊0.4秒能够加载完的这个页面

02:49.110 --> 02:54.230
如果变成什么呢 变成这个30条数据0.9秒加载完啊 那你这边

02:54.630 --> 02:58.030
明显这个时间变长了对吧 从0.4秒变到了0.9秒

02:58.470 --> 03:02.230
那你的这个流量和广告收入就会下降90%

03:02.870 --> 03:07.990
OK 好的这个谷歌地图啊 首文件从这个100kb

03:08.450 --> 03:13.850
减少到70到80kb以后啊 流量第一周涨了10%

03:14.410 --> 03:16.490
接下来三周涨了25%

03:17.170 --> 03:20.730
实际上你从这边你就已经可以看到一些优化的这个手段了

03:21.610 --> 03:24.530
对不对啊 比如这边这个大小啊 大小的减小

03:25.850 --> 03:30.690
好 然后还有这个亚马逊 亚马逊这个数据表明 加载这个时间增加100毫秒

03:31.170 --> 03:35.170
销量的话就下载这个就下降1%

03:35.890 --> 03:43.310
OK 这些的话都是一些实实在在的这个数据啊 来自于这些就是国际的这种大厂啊 所呈现出来的这种数据

03:43.990 --> 03:50.670
OK 说作为一个这个合格的这个开发者啊 说我们这边的话还需要具备一项技能

03:51.510 --> 03:57.710
就是什么呢 不仅仅是把我们的应用把它开发出来就完事了 我们这应用最终我们是要上线的

03:58.830 --> 04:02.830
对不对 最终是要上线的啊 最终是要呈现给用户的

04:03.410 --> 04:09.170
那要呈现给用户的话 那我们这边就需要考虑一些这个性能的这些优化

04:09.890 --> 04:15.010
OK 好 我们看一下就是以下这个常见的几个这个指标啊

04:16.330 --> 04:24.050
首先当用户请求一个网站时 如果一秒内看不见关键内容 那用户的话会感觉什么呢 感觉任务被中断了

04:24.850 --> 04:26.730
而如果他点击某些按钮

04:27.570 --> 04:31.570
如果100毫秒内无法响应 那用户会感受到这个延迟

04:32.830 --> 04:37.690
还就是最典型的就是你微博动画中啊 如果你没有达到这个60fps

04:38.210 --> 04:44.090
这个就是你的那个帧率 对吧 就是你浏览器的那个帧 正常情况下是60fps

04:44.850 --> 04:51.010
如果没有达到的话 那用户会感受什么 感受到什么呢 感受到你这个动画它一卡一卡的

04:52.290 --> 04:57.930
对不对 所以这些的话都是就是从侧面说明的这个东西的重要性

04:58.650 --> 05:04.750
就性能优化的这个重要性啊 你性能优化的好啊 直接就是

05:05.310 --> 05:08.110
反馈到用户上面就是什么呢 就是用户的这个体验

05:08.830 --> 05:11.190
啊 直接决定了这个用户体验好不好

05:11.950 --> 05:18.310
OK啊 所以这边优化页面的这个渲染速度 它成为了一个非常重要的一个课题

05:19.390 --> 05:22.350
那我们这边的话 就整体的这个性能优化的话

05:23.330 --> 05:28.450
可以从几个方面着手呢 因为我们是一个这个微博应用

05:29.250 --> 05:33.210
对吧 微博应用的话 这边就分为前端和后端

05:34.090 --> 05:38.250
前端的话 也就是我们所说的客户端 也就是浏览器这一端

05:38.970 --> 05:41.930
好 然后这下后端 后端的话 就是我们的这个服务期段

05:42.890 --> 05:47.610
服务期段 所以我们这边大致实际上可以分为这么三个方面

05:48.270 --> 05:50.830
首先 第一个就是前端的性能优化

05:52.110 --> 05:56.910
这个的话 实际上是最重要的 百分之八十的话 实际上都是这个前端性能优化

05:57.350 --> 05:59.310
因为我们前端的话是直接和用户

05:59.990 --> 06:00.590
打交道的

06:01.670 --> 06:03.910
对吧 啊 土狗来了 你好像土狗

06:04.790 --> 06:06.630
好 然后接下来的话是后端

06:07.870 --> 06:10.230
后端需不需要性能优化呢 后端也需要

06:11.030 --> 06:15.270
对不对 我前端发一个请求你这个后端的话 你半天才跟我返回这个响应

06:15.630 --> 06:17.350
那明显这个也是不合适的

06:17.830 --> 06:24.910
说后端的话 它也是需要这个性能优化的 还有就是什么呢 还有就是前后端通信的时候

06:26.110 --> 06:31.670
啊 这就是在前后端进行通信的时候 你也是可以做这个性能优化的

06:32.590 --> 06:35.950
所以我们这边实际上可以分成什么呢 可以分成这三块

06:37.150 --> 06:37.790
分成这三块

06:38.430 --> 06:40.390
好 这三块的话 来我们一直来看一下

06:41.190 --> 06:44.350
那首先的话 关于是这个前端的这个性能优化

06:45.250 --> 06:48.970
那要说这个性能优化的话 那这个东西它这个范围就太广

06:49.930 --> 06:51.450
啊 它是这种方方面面的

06:52.170 --> 06:57.250
知道吧 这我们前端 特别是我们前端的话 然后涉及到html css cs

06:57.850 --> 07:01.570
啊 那每一块的话 它可能都会有这个一些优化的一些这个

07:02.410 --> 07:03.410
点在里面

07:04.010 --> 07:05.130
啊 它分的比较散

07:06.250 --> 07:06.890
分的比较散

07:07.650 --> 07:09.570
那我这边呢 我简单罗列了一下

07:10.550 --> 07:14.390
那前端优化的话 主要围绕就是提高这个加载速度

07:14.910 --> 07:18.990
啊 进行的 那主要体现在什么呢 首先的话 第一个就是下载

07:20.550 --> 07:22.350
对不对啊 第一个就是下载

07:22.830 --> 07:26.990
啊 那你这边的话 就是各种页面元素啊 什么图像啊 样式表啊 脚本

07:27.390 --> 07:28.030
这些下载

07:28.630 --> 07:33.990
那你尽可能的干嘛呢 尽可能的需要减少html的这个请求

07:34.970 --> 07:40.010
对不对 你每多一个请求 那就要多一份这个下载 多一份下载 它就会什么

07:40.530 --> 07:41.090
什么耗时啊

07:42.210 --> 07:46.570
对不对 说为什么我们现在前端开发的话 你看我们是模块化开发

07:47.130 --> 07:49.930
啊 模块化开发的话 一个接视文件就是一个模块

07:50.730 --> 07:56.610
啊 那你再开发一个单应用的时候 那你这个整个接视文件可能就是直接就上百

07:57.210 --> 07:58.690
对不对 几百个这个接视文件

07:59.610 --> 08:02.170
那最终你在上线的时候 你一定会干嘛

08:02.830 --> 08:05.910
是不是一定会打包啊 对不对 为什么要打包

08:06.630 --> 08:12.630
就是因为你在几百个这个接视文件 我不可能让用户啊 看一个网页就发这个几百次这个请求

08:13.470 --> 08:15.230
这明显是不合适的

08:16.190 --> 08:19.390
对不对 因为你发这个请求是要这个耗时的

08:21.550 --> 08:24.350
好 还有就是什么呢 还有就是减少重汇回流

08:25.150 --> 08:31.350
OK 那重汇和回流的话 这一块涉及到了什么呢 涉及到了整个这个浏览器的这个

08:31.570 --> 08:33.250
汇制页面的一个这个流程

08:34.450 --> 08:37.770
这个我不知道大家知不知道啊 诸老板知不知道

08:38.730 --> 08:42.810
诸老板应该没问题啊 这个应该是知道的 就整个这个页面

08:43.370 --> 08:47.570
从他拿到了这个就是拿到响应 拿到那个支付创开始

08:48.170 --> 08:50.770
他每一个步骤 一步一步他在做什么

08:51.690 --> 08:57.490
OK 这个如果不清楚的同学啊 不清楚的同学的话 对对对对对 暴龙知道

08:58.150 --> 09:01.510
暴龙还写了一篇这个文档 当时还发给我看的

09:02.310 --> 09:07.310
回头的话那个暴龙你可以把你的那个文档发到那个群里面 给大家看一下

09:08.190 --> 09:12.550
OK 如果不太清楚的同学的话 回头的话可以就是找这个

09:13.430 --> 09:18.110
班主任老师 要一下那个袁老师 袁老师有一堂那个公开课

09:18.630 --> 09:21.790
就是讲这个浏览器的这个渲染流程的

09:22.510 --> 09:26.830
讲得非常的细 也非常的好 大家的话可以去这个听一下

09:27.550 --> 09:28.830
好吧 整个这个

09:29.870 --> 09:34.350
浏览器他把这个页面如何渲染出来的 他有那么几个流程

09:35.110 --> 09:38.550
首先构建这个多姆树 然后构建这个苏姆树

09:39.550 --> 09:46.070
那家合并整两棵树 然后后面一个一个步骤 比如这个布局啊分成啊 一个一个步骤

09:46.750 --> 09:46.950
OK

09:48.590 --> 09:55.270
所以我们这边的话 我们在书写代码的时候 要尽量的减少什么呢 要减少这个重汇和挥溜

09:56.010 --> 09:56.250
OK

09:57.130 --> 09:58.290
这个也是要花时间的

09:59.050 --> 10:05.050
好 然后还有就是什么呢 还有一些就是优化HTML CSS和JS的一些这个技巧

10:05.730 --> 10:07.770
那这个技巧的话就非常杂了

10:08.890 --> 10:12.730
非常非常杂了 我这边简单罗利了一些 但是后面还有很多啊

10:13.330 --> 10:16.210
还有很多 不是说就是只是我罗利了这几条

10:16.930 --> 10:17.890
简单来看一下嘛

10:18.610 --> 10:21.530
首先第一个 避免图片的src为空

10:22.510 --> 10:28.150
为什么呢 因为虽然你这个图片src 我们知道图片的src是这个图片的这个地址

10:29.430 --> 10:30.950
那你的这个src属性

10:31.710 --> 10:36.790
为这个空置付串 那么这个浏览器的话 它仍然是会向服务器发起一个请求的

10:37.350 --> 10:44.350
啊 当然这些优化的一些这些策略啊 这个还是要看你这个实际开发 就具体情况具体分析

10:45.510 --> 10:47.350
没有吧 具体情况具体分析

10:48.330 --> 10:51.410
好 然后还有就是将样式表放在这个黑的中

10:52.410 --> 10:56.170
啊 这个很简单 对吧 要把这个脚本放到页面底部

10:56.930 --> 10:59.330
好 然后不要使用css表达式

11:00.130 --> 11:06.050
啊 当然我们这边的话 其实也没有给大家说什么是css表达式 这个的话确实用的也非常少啊

11:06.650 --> 11:14.570
啊 还有这个 这个也非常 非常这个常见 减少绑定事件监听的这个节点啊 通过什么通过这个事件委托

11:15.930 --> 11:16.930
这个我们是讲过的

11:17.930 --> 11:25.410
对不对 啊 尽量的话通过什么通过这个事件委托啊 它这个事件委托它是基于什么 是不是基于这个事件码炮

11:26.450 --> 11:29.170
对不对啊 你看像那个比如说像react

11:29.770 --> 11:36.250
它实际上就是用到了什么呢 他就是用到了这个事件委托啊 最终的话你所有的事件实际上是被绑定在这个根元素的

11:38.250 --> 11:43.010
啊 这是我们这个前端的这个性能优化的这个点 还有很多哈 然后后面后面我会说

11:43.210 --> 11:48.290
好 然后接下来的话是关于这个后端的这个性能优化

11:49.130 --> 11:59.210
那后端的这个性能优化的话 主要体现在哪里呢 主要体现在我这边挪累了下 主要是这么三个点 首先就是你优化你这个业务的这个算法

12:00.650 --> 12:05.970
对吧 啊 这边的话涉及到这个算法的这个复杂度 就是时间复杂度

12:06.850 --> 12:12.890
啊 时间复杂度的话 那这边的话就是有好几个这个就时间和空间啊 一般的话这个时间复杂度的话

12:12.930 --> 12:19.330
我们是比较在意的 对不对 你的时间复杂度比如说是on 还是on的这个平方

12:20.010 --> 12:24.850
那如果你能够把你的一个业务的这个复杂度从on的平方降到这个on

12:25.730 --> 12:28.610
那你这边的话就可以啊 大大提升这个效率

12:29.810 --> 12:30.810
对不对啊

12:32.170 --> 12:35.330
第二个是什么呢 第二个就是优化这个数据库的这个查询

12:36.730 --> 12:40.810
这个也是非常重要的啊 我后端的这个耗时哈

12:41.290 --> 12:46.850
后端的耗时 虽然我们是这个前端工程师 啊 但这边的话我们有些时候我们也会写一些漏的

12:47.650 --> 12:52.890
对不对啊 包括有的同学也会这个漏的 能够用这个漏的来开发这个服务器端

12:53.890 --> 13:02.930
好 那这个你在这个书写服务器端程序的时候 实际上往往这个比较耗时的部分就是在哪里呢 就是在这个数据库的这个查询

13:03.890 --> 13:11.930
那你这个数据库的这个查询语句写的好不好啊 直接决定了什么 直接决定了你这个查询的时候 它所消耗的这个时间

13:13.050 --> 13:15.170
ok 消耗的这个时间啊

13:16.930 --> 13:19.130
好 然后还有什么呢 还有就是这个缓存

13:20.050 --> 13:23.090
啊 就后端的话就我们一般的话是要做这个缓存的

13:23.730 --> 13:27.490
缓存的话 然后早期的话用那个memo catch 用的比较多

13:28.170 --> 13:29.850
啊 现在的话用这个readys

13:30.890 --> 13:32.770
用readys的话用的比较多

13:33.210 --> 13:40.450
啊 这个readys的话它也是一种这个数据库 就是那个非关系型的数据库 这个的话袁老师也是讲过的

13:41.250 --> 13:43.570
啊 在后面的课程里面有 ok

13:44.410 --> 13:52.850
all log不考虑一下 我说的是一个 举的是一个例嘛 举的是一个例 你真正认识的这个时间复杂度 它好几个级别嘛

13:53.530 --> 13:55.490
对吧 我只是从中举个例子而已

13:56.770 --> 14:01.690
啊 这是关于这个后端的这个性能优化啊 所有的这个点

14:02.490 --> 14:07.450
好 然后接下来的话是什么呢 接下来是前后端通信时的这个性能优化

14:08.290 --> 14:10.730
那前后端在进行通信的时候

14:11.450 --> 14:18.960
那我们也是可以有这个优化的这个手段的 比如说什么呢 比如说使用cdn

14:20.880 --> 14:24.960
啊 使用cdn 什么是cdn 有没有同学不知道什么是cdn的

14:26.320 --> 14:31.520
啊 你们平时的话用了这个view 我不知道你们用view或者用react的时候 有没有通过这个

14:32.240 --> 14:33.680
script标签去引过

14:34.480 --> 14:42.400
有没有 你如果又通过这个script标签去引入过的话 那你那个script标签的后面那个地址它实际上就是一个cdn地址

14:43.760 --> 14:48.400
ok cdn的话它全称叫做什么 全称叫做我记得英语叫做content

14:49.120 --> 14:56.000
delivery好像是叫做delivery 然后letwork 叫做这个内容分发请求

14:56.960 --> 15:01.600
内容分发请求 它最大的特点实际上举一个这个最简单的例子

15:02.720 --> 15:04.960
就你单纯的 我这边我记得我有个图

15:06.320 --> 15:09.580
在这边 在这边

15:10.380 --> 15:14.540
就正常情况下 正常情况下的话比如说服务器在这里

15:15.340 --> 15:20.140
对不对 好 这样我们这边所有人请求都是请求什么的 都是请求这台服务器

15:20.940 --> 15:26.380
对不对 那cdn架构是什么的 cdn架构的话它这边就是就是分了好好多这个服务器出来

15:26.940 --> 15:33.180
那回头的话就是比如说这两个人 这两个人然后离这台服务器最近 那他就直接从这台服务器上面

15:33.820 --> 15:40.780
去获取这个资源 好这两个人 这两个人他离这台服务器最近 那他就直接从这台服务器上面去

15:41.180 --> 15:41.820
获取资源

15:42.620 --> 15:47.500
ok好 这边举了一个非常形象的例子 非常形象的例子 就一看就懂了

15:48.220 --> 15:53.660
就是比如说你这边夹住程度的这个小民 对吧 比如说在魔宝上买了件这个衣服

15:54.140 --> 15:56.020
那卖家在哪里呢 卖家在广东

15:57.140 --> 16:04.860
就好比我们的服务器是吧 离我们的很远 好那你这边 你就干嘛呢 你就等啊等啊等啊 然后接下来的话 等到就是后面

16:05.460 --> 16:10.060
这个第四天之后 总算拿到这个自己的这个衣服 对不对

16:10.500 --> 16:14.740
好了 你如果采用这个cdn的形式 它就什么呢 它就有点类似于这种京东

16:15.380 --> 16:19.900
你在全国各地的话都有这个仓储和这个备货

16:20.620 --> 16:27.020
然后你这边你是程度的 对吧 或者你是北京的 直接什么呢 直接从离你最近的这个仓库

16:27.620 --> 16:28.620
直接发货就可以了

16:29.380 --> 16:32.020
其实生活中的话也有这样的例子

16:32.820 --> 16:33.540
要这样的例子

16:35.340 --> 16:44.220
它怎么知道离最近 它这边的话会有它的算法呗 通过你的ipr什么的 它有一套算法呗 可以计算出你这边你哪个服务器最近吗

16:45.220 --> 16:51.840
这个就是这个cdn 叫做content delivery network

16:53.800 --> 17:02.160
它主要就是什么 主要就是可以找到就是离用户 就把你的这个请求 代理到这个用户较劲的这个代理服务器上面

17:04.640 --> 17:08.160
回到我们这边 还有一个是什么呢 还有一个就是压缩资源

17:09.720 --> 17:13.160
压缩资源 这个的话也是一个非常好的这个方式

17:14.080 --> 17:23.240
ok 就你这边的话就是你的这个资源 一般来讲在传输的时候 它会把它压缩 压缩的话一般是什么呢 一般是以这个gzap的格式

17:24.320 --> 17:25.040
gzap的格式

17:26.680 --> 17:31.680
那会不会请求两次 这个我倒没试验过 这个回头要看一下

17:34.040 --> 17:39.840
你意思是就是先第一次到这个它的中央服务器是吧 然后再这个转发这个请求

17:40.320 --> 17:46.840
转发到另外一次 第一次告诉他我在哪里 理论上来讲的话 想一想

17:48.320 --> 17:56.360
有可能 有可能 就第一次的话 我这边的话先发送到这个中央服务器 然后接下来的话 他这边的话先计算到这个ip

17:57.080 --> 18:02.160
然后接下来的话 然后看我的这个地址 然后回头的话 然后接下来再转发这个请求

18:03.200 --> 18:07.280
是吧 这个要看这个cdn具体的它的这个算法 要去看一下

18:08.280 --> 18:14.040
然后这边的话00闪闪介绍了一些

18:14.960 --> 18:22.840
00闪闪介绍一些 就是分成这三大类 前端的性能优化 后端的性能优化 然后还有就前后端通性式的这个性能优化

18:23.480 --> 18:27.080
那有没有就是比如说性能优化的一个标准

18:28.440 --> 18:29.880
有没有一个标准呢 有

18:30.840 --> 18:39.960
有 一般我们在这个提这个性能优化的时候 一般最早的时候会给大家提这个牙虎的这个14条性能优化建议

18:40.760 --> 18:45.600
ok 这个的话也被称之为这个就是性能优化的14条军规

18:47.080 --> 18:51.120
这牙虎的话 他是实际上他是作为就是早期这个门户时代

18:51.760 --> 18:57.560
啊 就是我们微博啊 微博实际上经历了三个 三个时代啊 这边给大家记一下啊

18:58.400 --> 19:00.840
就整个整个互联网

19:02.240 --> 19:03.800
从什么呢 从这个诞生

19:04.880 --> 19:05.880
到现在

19:07.280 --> 19:10.160
一共有什么呢 一共有三个时代

19:12.280 --> 19:17.000
有三个时代 哪三个时代呢 最早期的话是门户时代

19:18.400 --> 19:20.960
他知道什么是门户时代吧 有没有这样的概念

19:22.200 --> 19:25.000
最早的话就是有一些这个门户网站

19:25.560 --> 19:29.400
比较像牙虎 最早的实际上就是牙虎啊 然后还有什么

19:30.480 --> 19:31.800
比较出名的 比较收获

19:33.080 --> 19:36.440
对吧 收获 然后还有什么 还有就是那个腾讯

19:37.480 --> 19:42.600
对不对 这个的话实际上是门户时代的话 实际上是这个微博1.0的这个产物

19:43.600 --> 19:47.760
那这个牙虎 牙虎的话实际上就是在门户时代 最有名的

19:48.400 --> 19:53.680
而后面的话 从门户时代之下 进化到了什么呢 就是搜索时代

19:56.790 --> 20:04.070
OK 你这个门户时代的话 相当于就是我这边作为内容的提供商 我给你提供什么 你就看什么

20:04.590 --> 20:09.710
然后接下来用户要搜索一些这个资源或者资料的话 实际上也比较麻烦

20:10.190 --> 20:14.790
我只能到什么呢 只能到这个对应的网站去看这个对应的这个信息

20:16.110 --> 20:22.310
那后面的话就过渡了什么呢 过渡了这个搜索时代 那搜索时代的话这个谷歌

20:22.870 --> 20:24.270
他就是在这个时代崛起的

20:27.870 --> 20:28.270
谷歌

20:30.110 --> 20:38.750
就是在这个时代崛起的啊 大家门户时代门户时代的话是牙虎啊 牙虎是这个

20:39.630 --> 20:47.430
就是当时 当时的这个佼佼者啊 大家搜索时代过了 然后接下来是什么呢 接下来就是这个移动互联网时代

20:49.230 --> 20:55.390
移动互联网时代啊 那移动互联网时代的话 目前来看的话就仍然还是谷歌

20:56.310 --> 21:00.430
对吧 还是谷歌 这个谷歌的话就作为整个互联网的一个风向标

21:01.110 --> 21:05.590
一般来讲他推出一个技术的话 大家都会去关注的 都会去关心的

21:07.110 --> 21:12.390
好 那么这个牙虎 牙虎的话作为早期微博领域的这个佼佼者

21:12.950 --> 21:18.510
他就提出了什么 提出了这个七个那边 共这个35条 就你如果细分的话

21:19.230 --> 21:23.830
细分的话那是这个35条 这个前端性能优化的这个最佳实践

21:24.550 --> 21:27.470
但是比较可惜的一点啊 就是这边让他打不开了

21:28.710 --> 21:31.070
ok 就你打开的话是这个样子的

21:31.870 --> 21:37.950
看到没有 这边的话 大家看清楚吧 这里有一个best practice for this

21:39.470 --> 21:44.310
speeding up your weibo sites 原来这边就有一条一条的 比如说第一条

21:45.150 --> 21:53.310
minimize HTTP request 就减少你的htp请求 对不对 这是第一条 第一条在他里面又分成

21:53.870 --> 21:57.270
好几条啊 比如你这边可以合并你的这个文件

21:57.950 --> 22:00.790
好 大家这边的话可以使用什么呢 使用css spritz

22:01.590 --> 22:10.750
精灵图啊 然后还有什么呢 还有就是图片这个maps啊 他给你提了一条一条的 就这边别人总结下来的话一共是什么呢 一共是这个35条

22:11.350 --> 22:13.550
啊 但这个网站的话 现在已经打不开了

22:15.030 --> 22:19.590
已经打不开了 啊 这边他已经就是退出中国市场了 看到没有

22:20.390 --> 22:28.470
啊 就一点都打不开啊 想了各种各样的办法啊 打不开 ok 然后后来的话 然后找了一些这个朋友啊 在国外的这个朋友

22:28.990 --> 22:33.110
啊 让他们这个打开 然后把这个网站把他下载下来了 在这里

22:33.990 --> 22:38.630
就杨火十四条优化建议 啊 人家这边的话有一个这个pdf版本的

22:40.590 --> 22:46.030
他这边啊 代理不行代理不行 我这边是开了vpn的 你看吧 我这边是有vpn的

22:47.030 --> 22:48.230
比如说我这边

22:51.350 --> 22:53.510
我这边是有这个vpn的 啊 但是打不开

22:55.150 --> 23:01.110
好 我这边那就是 你看 呃 这边的话 然后让让朋友啊 把他下载下来了

23:01.910 --> 23:06.950
但我现在有点卡 有点卡 ok 这边下载下来了 还有什么呢 还有就是这个

23:08.990 --> 23:09.510
还有就是这个

23:11.550 --> 23:13.950
啊 这边的话 让他把这个html也下载下来

23:14.430 --> 23:16.310
你html的话 他这边就是没有样式

23:17.190 --> 23:25.710
啊 你就就将就着看啊 你这这个实际上还好 没有样式也能看 因为他毕 毕竟就是原本的话 他这边也是这个样子

23:26.590 --> 23:33.230
啊 原本的话也是这样子的 就大量的这个文本 怎么样就大量的文本啊 所以这边的话 实际上也可以将就看

23:34.270 --> 23:36.110
啊 也可以将就看 ok

23:38.270 --> 23:41.070
啊 或者什么呢 或者你看这个 或者看这个pdf

23:41.550 --> 23:48.950
也可以 啊 这边把他下载成这个pdf 那pdf的话 我看了下他这个最后啊 最后好像有些地方感觉有点切不上

23:49.750 --> 23:53.230
看了没有 比如这边 why is this behavior bad

23:53.790 --> 24:00.390
啊 就为什么这个行为是不好的 大家这边上下一个就直接是这个第二了 二和三就感觉有点切不上

24:00.910 --> 24:07.390
啊 所以你这边你要看的话 你就可以配合着这个pdf和这个html可以配合着看

24:08.190 --> 24:15.470
啊 ok 这是关于这个羊虎 或者是什么呢 或者的话你是可以在这个绝经上面

24:15.950 --> 24:24.750
比如绝经啊 或者是否啊 像这种技术论坛上面 你可以找一下这个羊虎的这个实诗条建议 这个你一收的话都是有的

24:25.390 --> 24:31.950
啊 比如说我这边就是这个链接啊 给出了一个这个链接 这个链接的话就是这个绝来自于这个绝经

24:32.630 --> 24:33.750
啊 这边你可以看一下

24:35.780 --> 24:42.260
可不可以啊 这是前端性能优化 羊虎35条这个军规 啊 这边你可以看一下

24:43.660 --> 24:47.300
他比如说这个第一条 减少http请求数

24:48.100 --> 24:57.380
对不对啊 可以采用到一些方式 比如合并皆是css文件啊 然后还有就是还有就是什么呢 使用这个css精灵图

24:58.100 --> 25:01.540
当然有些有些的话 实际上是有点过时了

25:02.500 --> 25:05.220
比如我们知道这个精灵图的话 现在实际上用的不多了

25:06.100 --> 25:10.980
对吧 在早期这个web 1.0的时代 那个时候精灵图用的特别的多

25:11.860 --> 25:14.820
主要就是解决什么呢 解决就是那种小图标

25:15.700 --> 25:18.340
小图标我还要去发一个这个请求 这个不太合适

25:18.900 --> 25:23.700
所以把就是我们网页里面的所有图标合并在一张图片上面

25:24.260 --> 25:29.060
对吧 但现在的话很多时候是使用什么 这直接使用这个css字体

25:29.860 --> 25:33.860
这就出来了 对不对啊 最出名的就是那个icon font

25:34.820 --> 25:38.100
对吧 通过这个icon font就把它搞出来了

25:39.220 --> 25:44.340
说他有些的话 实际上有点过时了 你本身的话就是这个雅虎就很过时了

25:44.900 --> 25:47.700
对不对 雅虎的话 它是这个门户时代的这个老大

25:48.500 --> 25:51.940
对不对 现在的话是谷歌 我们一会会说会说到谷歌啊

25:52.740 --> 25:56.660
说到这个谷歌提出了这个性能优化的这个指标 一会来说

25:57.140 --> 26:03.940
好 然后还有什么呢 还有就是这边这个图片啊 可以就是把它就是弄成这个bass64边嘛

26:04.500 --> 26:07.460
我一会儿把这个发给大家 大家可以结合着我这个来看

26:08.020 --> 26:12.900
我这个的话 实际上也是就是讲这个雅虎的这个十四条军规的

26:13.540 --> 26:15.620
啊 在这边 比较规则1

26:16.500 --> 26:20.820
啊 规则1啊 合并对吧 还就是内联这个小图片

26:21.220 --> 26:23.620
内联小图片的话 这边你可以把一些小图片

26:24.100 --> 26:28.100
比如这种小图片啊 把它转成什么呢 转成这个bass64

26:28.660 --> 26:31.620
把它比如说有些这个在线的网站可以直接转

26:32.340 --> 26:35.140
啊 可以直接转 我一会儿的话把这个文档发给大家

26:35.940 --> 26:38.020
OK啊 现在我现在就把它导出来啊

26:39.940 --> 26:41.940
所以你可以几个结合着看啊

26:44.020 --> 26:44.820
把它导出来

26:47.250 --> 26:50.050
稍等啊 我的电脑已经燃烧起来了

26:50.850 --> 26:52.210
我本来给你们说的就是

26:52.930 --> 26:54.930
如果这个m2pro出来了

26:55.330 --> 26:57.090
我就把我这个这个电脑换了

26:57.570 --> 26:58.930
后来我看了下价格

26:59.250 --> 27:02.690
我发现我这个电脑挺好的 还能够再用一下

27:04.770 --> 27:10.080
好 这是关于雅虎的这个十四条军规

27:10.480 --> 27:14.800
我就不再说了 这个大家自己去看 给大家提供了好几个资料

27:15.120 --> 27:18.400
一个是就是这个雅虎的这个html和那个pdf

27:18.720 --> 27:21.920
那还有什么呢 还有就是你在这个决心或者是否上面

27:22.320 --> 27:23.200
你可以去搜一下

27:23.720 --> 27:24.480
相关的

27:25.240 --> 27:26.800
对吧 相关的这个军规

27:27.040 --> 27:29.360
那还有一个就是什么 还有一个就是我这边的这个文档

27:29.600 --> 27:31.120
你几个的话配合起来看

27:31.640 --> 27:32.160
好吧

27:34.200 --> 27:34.960
这是雅虎

27:35.480 --> 27:40.080
后来的话就是谷歌 谷歌的话作为这个后期之秀

27:40.600 --> 27:45.480
那么现在的话 谷歌的话在这个微博领域的话 它是有这个绝对的话语权的

27:46.240 --> 27:49.560
OK 我刚才就说过了 谷歌的话它现在是作为一个什么

27:49.820 --> 27:50.600
风向标

27:51.320 --> 27:54.900
对不对 它基本就是咱们整个这个互联网时代的这个风向标

27:55.160 --> 28:01.820
好 然后谷歌的话 它目前的话也推出了就是自己的这个性能优化这个指标

28:02.320 --> 28:04.120
就有自己的一些这个指标

28:04.380 --> 28:08.720
其中的话 它其实最早 早期的时候实际上就推出了一些

28:08.980 --> 28:14.360
早期的话 它推出了各种各样的这种指标 但是发现就是这些指标的话好像用数不太大

28:15.120 --> 28:16.160
那后来的话

28:16.420 --> 28:18.960
又更新了三种核心指标

28:19.680 --> 28:24.400
这三种呢 就是ARCP FID和CRS

28:24.880 --> 28:26.920
这个的话也是之前有同学在问的

28:28.200 --> 28:34.320
好 我们首先来看一个网站 这个网站的话就是专门测试你的这个微博的这个性能的

28:34.720 --> 28:36.480
你看这个网站的名字都叫做什么

28:36.740 --> 28:37.520
是Page

28:38.120 --> 28:38.880
这个Speed

28:39.640 --> 28:40.920
对不对 页面速度

28:41.180 --> 28:42.480
好 我们这边把它打开

28:44.000 --> 28:46.400
这是谷歌推出的 谷歌推出的

28:46.920 --> 28:48.600
好 这边你可以输入这个网子

28:49.160 --> 28:52.000
比如说我们这边的决筋 比我们这边这个决筋

28:53.000 --> 28:54.360
好 让大家这边分析

28:55.120 --> 28:57.120
它这边它就可以做一个这个分析

28:57.360 --> 29:01.200
它这边在分析的时候 你看它这边核心指标

29:01.960 --> 29:02.480
看了没有

29:03.000 --> 29:05.560
这个网页 它的一些核心指标

29:06.320 --> 29:08.640
那这边就有什么呢 这边就有ARCP

29:09.400 --> 29:09.920
2.4秒

29:10.680 --> 29:11.440
FID

29:11.700 --> 29:12.480
14毫秒

29:12.920 --> 29:14.000
CRS

29:14.260 --> 29:15.280
0.01

29:15.800 --> 29:18.080
对不对 那这个究竟是什么意思

29:19.120 --> 29:20.080
究竟是什么意思

29:20.320 --> 29:21.720
它下面还在诊断

29:22.240 --> 29:26.080
好 除了这个核心这个指标以外 它还有一些这个其他的这个重要指标

29:26.340 --> 29:28.380
这个你有兴趣的话 你就自己去看一下了

29:28.640 --> 29:30.440
还是什么FCP

29:31.200 --> 29:32.240
这个INP

29:33.000 --> 29:34.020
TTFP这些

29:34.280 --> 29:35.560
这些的话你就自己去看了

29:35.820 --> 29:38.880
我这边主要简单给大家介绍一下 就这三个指标

29:39.140 --> 29:39.900
分别是什么

29:41.440 --> 29:42.720
好 来 我们这边来看一下

29:44.000 --> 29:44.760
来看一下

29:45.020 --> 29:46.040
这边提到了

29:46.300 --> 29:47.320
核心的这三个

29:48.040 --> 29:50.600
首先是什么呢 首先是ARCP

29:51.880 --> 29:54.700
ARCP的话 它英语全称叫做这个

29:55.200 --> 29:58.280
largest content for this Pint

29:58.540 --> 30:01.860
表示什么呢 表示最大内容彙制

30:02.880 --> 30:03.920
最大内容彙制

30:04.180 --> 30:07.240
也就是说我这边我在呈现一个网页的时候

30:07.500 --> 30:09.540
这边 稍等我把这个比刷

30:11.740 --> 30:13.800
这边比说我在呈现这个网页

30:17.480 --> 30:18.520
对吧 这个是我的网页

30:18.780 --> 30:20.300
而网页里面有很多的元素

30:21.880 --> 30:24.180
对不对 有很多的元素 比如这边

30:24.440 --> 30:25.220
有一个这个

30:25.480 --> 30:26.760
好 然后加这边

30:27.520 --> 30:28.020
这边

30:28.280 --> 30:32.120
OK 那在我的这个网页里面 最大的一块是什么

30:32.380 --> 30:33.920
最大一块是不是就这一块

30:35.200 --> 30:35.720
对不对

30:36.220 --> 30:37.000
就这一块

30:37.260 --> 30:41.080
好 那这边的话它就是测试你最大的内容的这个

30:41.340 --> 30:41.860
彙制

30:42.620 --> 30:44.680
它的这个一个时间

30:45.180 --> 30:46.720
你看它这边给了你一个

30:46.980 --> 30:51.580
这个指标是什么呢 就为了提供良好的用户体验

30:51.880 --> 30:57.260
那你的这个最大内容彙制要控制在2.5秒以内

30:58.300 --> 31:00.340
看到没有 它这边是有一个这个时间的

31:00.840 --> 31:02.900
你要控制在2.5秒以内

31:03.420 --> 31:03.920
OK

31:04.680 --> 31:08.280
好 这边的话是关于这个LCP官方的一个这个介绍

31:08.780 --> 31:10.320
咱们点进去看一下

31:12.580 --> 31:13.360
点进去看一下

31:16.600 --> 31:17.100
OK

31:17.860 --> 31:18.380
好 这边

31:19.420 --> 31:22.980
这边首先对这个LCP进行了一个这个介绍

31:23.240 --> 31:24.020
看在哪里

31:24.480 --> 31:25.000
在这里

31:25.520 --> 31:26.780
什么是LCP

31:27.040 --> 31:29.860
LCP那是首次开始夹载的时候

31:30.120 --> 31:31.900
你这个可视区域内

31:32.160 --> 31:34.720
可见的最大图像

31:35.240 --> 31:37.020
或者什么呢 或者文文块

31:37.280 --> 31:40.880
然后完成渲染的相对这个时间

31:41.880 --> 31:44.720
好 然后为了提供这个良好的用户体验

31:44.960 --> 31:50.600
你这边的话努力要控制在多少呢 控制在2.5秒以内

31:52.120 --> 31:53.920
看到没有 2.5秒以内

31:54.480 --> 31:57.920
好 然后它这边的话这个最大内容它是随着你这个渲染

31:58.320 --> 31:59.560
你这个页面的这个渲染

31:59.800 --> 32:04.480
不同时期就每一针 每一针的话它是这个最大内容它是不一样的

32:04.720 --> 32:06.000
它后面给了个例子

32:07.280 --> 32:09.320
这例子在这里

32:09.840 --> 32:11.380
只不过这张图还没出来

32:11.880 --> 32:12.400
没出来

32:13.440 --> 32:14.440
一会儿等他转一下

32:14.700 --> 32:15.480
等他转一下

32:16.560 --> 32:19.840
那这边就是不同时间点它的这个最大内容 出来了

32:20.340 --> 32:20.840
出来了

32:21.100 --> 32:21.620
OK

32:21.880 --> 32:23.160
好 比如说你看这边

32:23.460 --> 32:25.980
针对这个第一针它这边的话就是你页面

32:26.220 --> 32:27.260
页面这个不同的针

32:27.500 --> 32:28.780
那比如说这边第一针

32:29.300 --> 32:31.340
第一针的话这个最大内容就是这个

32:32.380 --> 32:32.900
看到没有

32:33.400 --> 32:33.900
就这个

32:34.160 --> 32:38.260
好 到了第二针 第二针的话这个最大内容就变成这个了 变成这个HE了

32:39.020 --> 32:40.060
就变成这个标题了

32:40.320 --> 32:42.360
那第三针和第四针都是他

32:42.620 --> 32:45.180
到了第五针之后让后面的内容呈现出来了

32:45.940 --> 32:49.260
对不对 后面了这个这个图片呈现出来 这个图片的话

32:49.780 --> 32:51.320
它就成为我的这个最大内容

32:51.840 --> 32:52.340
OK

32:52.560 --> 32:54.600
那你这边的话没真的这个

32:54.860 --> 32:56.640
就是呈现这个

32:56.900 --> 32:57.920
就是最大元素

32:58.180 --> 33:01.260
始终什么呢 始终控制在2.5秒以内

33:01.760 --> 33:02.800
是比较合适的

33:03.820 --> 33:04.840
是比较合适的

33:05.100 --> 33:08.680
就能够给用户提供一个良好的这个体验

33:09.440 --> 33:14.820
那这边自然而然同学们就会问就是那我这边他如何保证就是这个lcp这个指标达标呢

33:15.080 --> 33:17.380
他这边的官方实际上已经给你介绍了

33:19.180 --> 33:20.960
他这边下面还举了个例子

33:21.220 --> 33:22.000
比如说这边

33:22.340 --> 33:23.880
这边是这个instagram

33:24.380 --> 33:28.740
他这边的话就是最大元素从第二针开始 第一针什么都没有啊

33:29.000 --> 33:30.020
第二针开始首先

33:30.280 --> 33:31.560
他最大元素是这

33:32.060 --> 33:33.360
接下来的话是这

33:34.120 --> 33:37.440
OK 后面第四针第五针虽然出现了这个新的内容

33:37.700 --> 33:41.280
出现新的内容 但他的最大元素还是怎么呢 还是他

33:41.800 --> 33:42.560
还是他

33:43.080 --> 33:43.580
OK

33:43.840 --> 33:45.380
好 然后如何优化呢

33:45.900 --> 33:46.660
他这边有

33:47.160 --> 33:48.460
首先的话如何测量

33:48.720 --> 33:50.760
测量的话这边你就用这个就可以了

33:51.520 --> 33:52.280
就用这个

33:52.540 --> 33:53.580
Page Speed

33:54.340 --> 33:56.900
就用这个 这个你看他这边是不是就可以测试出来

33:57.420 --> 33:59.460
对不对 三个指标都通过

33:59.720 --> 34:01.260
好 然后接下来如何优化

34:01.520 --> 34:04.060
如何优化的话他这边其实就是有很多条了

34:05.340 --> 34:05.860
分秒

34:06.120 --> 34:07.660
如何改进你的lcp

34:07.920 --> 34:10.720
那lcp主要受四个因素的这个影响

34:10.980 --> 34:12.260
比如说服务器

34:12.520 --> 34:13.800
响应很缓慢

34:14.060 --> 34:16.860
那你是不是要想办法去提升你的服务器的响应速度

34:17.380 --> 34:17.880
对不对

34:18.140 --> 34:21.740
然后这个JS和这个CSS渲染他发生了这个阻涉

34:22.200 --> 34:24.000
还有就是资源加在时间

34:24.260 --> 34:26.560
还有就是客户端这个渲染的这个时间过长

34:27.080 --> 34:27.580
OK

34:27.840 --> 34:31.680
所以你会发现整个这个性能优化他实际上是什么实际上是零零散散的

34:32.960 --> 34:33.220
对不对

34:33.480 --> 34:37.300
我这边优化一点那边优化一点这边优化一点那边有优化一点

34:37.560 --> 34:38.340
最终的话

34:38.600 --> 34:40.640
达到一个这个很好的这个体验

34:41.660 --> 34:42.180
明白没有

34:44.480 --> 34:46.020
这是关于这个lcp

34:46.780 --> 34:50.120
好 然后接下来的话还有一个什么呢还有一个是FID

34:51.100 --> 34:53.660
FID它是测量这个交互性的

34:54.420 --> 34:56.740
测量交互性的我们这边我们来看一下

34:58.260 --> 35:02.620
FID测量什么呢就是用户第一次与页面交互

35:03.140 --> 35:06.460
到什么呢到浏览器对交互做出响应

35:06.720 --> 35:08.500
整个这个时间

35:09.020 --> 35:10.040
这个也非常好理解

35:10.800 --> 35:11.060
对不对

35:11.320 --> 35:14.140
他全称叫什么来着好像叫做first input

35:14.900 --> 35:16.940
然后一个那个D是什么我忘了

35:17.460 --> 35:20.020
前面的FID叫做first input

35:21.100 --> 35:23.660
然后后面后面那个D应该是响应的意思吧

35:25.180 --> 35:27.180
啊等他转吧OK

35:27.740 --> 35:29.860
好作为这个编写事件

35:30.120 --> 35:33.380
响应代码的这个开发者我们一般会假定什么

35:33.640 --> 35:36.660
假定我们写的这个代码啊你事件发生那就

35:36.920 --> 35:39.540
立即执行我们的这个事件处理函数

35:40.300 --> 35:40.700
对不对

35:40.960 --> 35:43.880
但实际情况的话往往是什么呢往往是就是比如说

35:44.140 --> 35:47.820
你的手机正在加载一个网页啊或者在做这个其他的事情

35:48.040 --> 35:52.120
那用户做了点击之后发现这个网页的话好像没有反应

35:52.880 --> 35:54.940
实际上那是不是没有反应的不是

35:55.700 --> 35:58.200
对不对我们作为网页开发者我们知道不是

35:58.460 --> 36:01.340
是因为就是现在浏览器这个主线程他很忙

36:01.860 --> 36:03.400
他可能在处理其他的事情

36:03.660 --> 36:05.940
他要把其他的事情处理完了之后

36:06.200 --> 36:08.500
才来处理你这个事件毁掉函数

36:08.760 --> 36:11.080
但是作为这个用户来讲他不知道啊

36:12.100 --> 36:15.420
对不对对用户来讲他可能就觉得你这个东西就是

36:15.880 --> 36:18.200
主色了啊就就是卡住了

36:18.460 --> 36:19.200
没有反应

36:19.720 --> 36:23.560
OK说这个FID这个指标的话主要就是来测试这个的

36:23.820 --> 36:25.100
我看那边打开没有

36:25.860 --> 36:27.920
打开了叫做delay

36:28.420 --> 36:30.480
就首次输入延迟

36:31.240 --> 36:31.760
OK

36:32.020 --> 36:33.280
首次输入延迟

36:35.540 --> 36:42.000
好然后这边的话然后稍微注释了一下比如FID只测试事件处理过程中的这个延迟

36:42.260 --> 36:44.800
不会测量什么的不会测量你这个事件

36:45.000 --> 36:47.560
处理就是事件处理本身的这个事件

36:48.080 --> 36:50.900
就比如说我现在的话我绑定了一个点击事件

36:51.420 --> 36:55.500
绑定了这个点击事件之后这个FID只测试什么的

36:55.760 --> 36:58.320
只测试什么时候触发这个点击事件

36:59.340 --> 37:01.400
他不会去测量什么的不会

37:01.660 --> 37:04.980
测量就是你这个点击事件背后对应的这个事件处理函数

37:05.500 --> 37:06.500
他要花了这个时间

37:07.280 --> 37:07.540
OK

37:08.040 --> 37:12.900
也不测量什么的也不测量这个浏览器在运行事件处理程序后

37:13.100 --> 37:15.460
更新用户界面所花费的时间

37:15.980 --> 37:18.780
就有些时候我们针对这个

37:19.040 --> 37:20.320
事件处理函数

37:20.580 --> 37:23.900
然后既然他执行了之后他可能会涉及到页面的这个更新

37:24.160 --> 37:28.520
那更新的话这边所花费的时间这个的话不属于这个FID里面

37:28.780 --> 37:29.800
他所算的这个时间

37:32.100 --> 37:35.420
好然后接下来为了提供良好的用户体验

37:35.680 --> 37:39.520
FID的话你因为什么呢就是应该要小于100毫秒

37:39.780 --> 37:41.060
或者这个更短

37:42.040 --> 37:45.620
好这边是关于这个官方的这个FID这个介绍

37:45.880 --> 37:48.700
我这边的话就罗列了一下就是重点你看了些点

37:49.200 --> 37:51.240
就首先的话就是关于FID的详情

37:52.020 --> 37:53.040
什么是FID

37:53.300 --> 37:58.160
好那为什么只考虑手持输入这个的话在在他的这边都写的有啊

37:59.440 --> 38:00.480
在

38:01.240 --> 38:02.520
在哪里呢

38:05.080 --> 38:08.920
这里都写的有啊就为什么只考虑手持输入

38:09.120 --> 38:11.680
好那还有什么呢哪些是手持输入

38:12.460 --> 38:14.000
对不对哪些是手持输入

38:14.260 --> 38:16.040
还有一个就是什么呢还有一个就是

38:16.300 --> 38:17.320
如何改进

38:17.840 --> 38:19.620
如何改进这个FID

38:19.880 --> 38:27.060
好你这边他在这个哪些算是手持输入这边这边他还提到了一个RAAIL性能模型

38:27.820 --> 38:30.120
这个实际上挺有意思的这个大家可以去看一下

38:30.880 --> 38:34.980
这个你面试的时候你比如说面试官问到你这个性能优化

38:35.240 --> 38:38.060
你在回答的时候你能够把这些东西打出来

38:38.520 --> 38:39.800
那是直接就加分的

38:40.560 --> 38:41.080
对不对

38:41.340 --> 38:43.380
你这边的话你可能就是你在

38:43.640 --> 38:50.040
就是回答中你能够提一下比如说RAAIL这个性能模型这个他这里有

38:51.080 --> 38:51.580
看了没有

38:51.840 --> 38:52.340
在这里

38:54.810 --> 38:56.850
什么叫做RAAIL

38:57.110 --> 39:00.190
性能模型啊这个RAAIL是指的是什么

39:00.450 --> 39:01.730
R是指的是

39:02.490 --> 39:03.770
我看在哪里

39:04.290 --> 39:04.790
这边

39:05.310 --> 39:06.850
R指的是响应

39:07.350 --> 39:09.410
然后加AA的话是animation

39:09.750 --> 39:10.510
就是动画

39:10.770 --> 39:12.830
R是指的是这个弦字

39:13.090 --> 39:15.890
那露的露的指的是什么指的是这个夹仔

39:16.410 --> 39:18.710
他是这四个单词的一个这个

39:18.970 --> 39:19.470
减血

39:19.990 --> 39:22.030
这四个的话就是明显就是

39:22.290 --> 39:24.850
就是这四个指标

39:25.110 --> 39:28.430
四个指标他实际上也是和这个性能优化相关的

39:28.950 --> 39:29.450
OK

39:29.710 --> 39:31.510
你回到那把这篇文档可以看一下

39:31.770 --> 39:34.830
看一下的时候你面试的时候如果能够说得出来

39:35.090 --> 39:36.110
当然是更好的

39:36.370 --> 39:37.650
绝对是加分项

39:38.170 --> 39:38.670
对不对

39:38.870 --> 39:39.910
绝对是加分项

39:42.470 --> 39:44.770
这是关于这个FID

39:45.030 --> 39:47.830
最后一个是这个CLS

39:48.350 --> 39:51.930
CLS的话它是这个视觉稳定性

39:53.210 --> 39:55.510
视觉稳定性什么叫做视觉稳定性

39:55.770 --> 39:56.550
你看他这边

39:57.050 --> 39:59.110
举了个例子这个例子非常形象

39:59.370 --> 40:00.370
这个也是官方觉得

40:00.630 --> 40:03.190
就比如说你在网上你在阅读一篇文章

40:03.710 --> 40:03.970
对不对

40:04.230 --> 40:07.290
结果的话这个页面的某些内容他突然发生改变

40:08.270 --> 40:10.070
那你想想什么时候会突然发生改变

40:10.830 --> 40:13.390
这就有可能这个一部的夹载了新的内容

40:15.190 --> 40:15.690
对不对

40:15.950 --> 40:18.250
一部的夹载新的内容加你在读的文章

40:19.010 --> 40:20.290
一下子被挤到下面去了

40:20.810 --> 40:24.390
或者是什么呢或者是就是你点击一个链接或者一个这个按钮

40:24.650 --> 40:27.210
但是在你点击的这个瞬间

40:27.470 --> 40:28.750
这个链接直接移位了

40:29.010 --> 40:31.050
你点了其他的这个别的东西了

40:31.570 --> 40:33.610
这个的话我觉得大家应该是经历过的

40:34.130 --> 40:35.150
应该是有体会过的

40:35.910 --> 40:36.410
对不对

40:36.610 --> 40:38.150
那为什么会出现这样的情况

40:38.410 --> 40:39.950
那很明显就是因为什么

40:40.210 --> 40:41.490
什么一部夹载资源

40:42.770 --> 40:43.270
对不对

40:43.530 --> 40:45.570
因为你这边的话一开始呈现了

40:45.830 --> 40:48.910
呈现出来了一些内容但是他背后实际上还在夹载资源

40:49.170 --> 40:53.010
那这个时候你比如你在点击或者你在看这个东西的时候

40:53.270 --> 40:55.810
突然这个一部的这个资源夹载好了

40:56.070 --> 40:58.370
夹载好了之后再加他重新进行一个布局

40:58.890 --> 40:59.390
OK

40:59.650 --> 41:01.970
说这边的话就是视觉稳定性

41:02.230 --> 41:03.230
他也是一个

41:03.490 --> 41:04.770
评判的一个指标

41:05.810 --> 41:06.310
OK

41:06.930 --> 41:09.990
为了这个提供良好的这个用户体验

41:10.510 --> 41:12.290
那么页面的这个CLS

41:12.810 --> 41:14.850
他应该保持在什么的保持在0.1

41:15.370 --> 41:16.130
或者更少

41:16.650 --> 41:18.450
这边你把这个点开看一下

41:20.230 --> 41:21.010
CLS

41:22.290 --> 41:23.310
他这个叫做这个

41:24.070 --> 41:24.590
Communative

41:25.090 --> 41:26.370
Layout Shaft

41:26.630 --> 41:28.690
就是累积的布局偏移

41:30.210 --> 41:32.530
那这个的话也是有一个计算公式的

41:33.030 --> 41:34.570
在哪里呢在这边

41:36.540 --> 41:38.340
在这边他有个计算公式

41:39.360 --> 41:41.920
呃啊这边0.1以下啊

41:42.180 --> 41:43.460
往上计算公在这里

41:43.960 --> 41:44.480
看没有

41:44.740 --> 41:47.040
你布局偏移分数等于什么呢

41:47.300 --> 41:48.840
等于这个影响分数

41:49.100 --> 41:50.880
乘以距离分数

41:51.640 --> 41:54.720
那这个时候你就会问什么是影响分数啊这边人家给你介绍了

41:54.980 --> 41:58.820
什么是影响分数啊那什么是距离分数啊这边在下面

41:59.080 --> 42:01.120
给你介绍了什么是距离分数

42:01.640 --> 42:02.140
OK

42:02.400 --> 42:04.440
以及就是大家最关心的是什么呢

42:04.640 --> 42:07.200
就是我如何提高这个分数

42:08.240 --> 42:09.920
对不对我如何提高这个分数

42:10.180 --> 42:11.300
那接下来在这边

42:12.080 --> 42:16.160
他一般就是这个每一块说明啊他最后

42:16.420 --> 42:17.440
最后他一定有

42:17.960 --> 42:22.060
一定有一个是如何测量如何测量就不说了如何测量你这边就通过

42:22.320 --> 42:23.340
就通过这个来测量

42:23.840 --> 42:24.360
就可以了

42:24.620 --> 42:25.900
这边就测量的出来

42:26.160 --> 42:28.720
在这边你可以看就是如何提高

42:30.240 --> 42:31.280
在

42:32.560 --> 42:33.060
在这边

42:33.780 --> 42:34.600
如何改进

42:34.860 --> 42:36.380
这边会给你罗列

42:36.640 --> 42:38.440
一些就是建议点

42:38.940 --> 42:41.260
就如何进行这个改进CLS

42:41.520 --> 42:43.560
这边还有一个还有两篇文章

42:43.820 --> 42:45.600
一个是优化CLS

42:45.860 --> 42:47.660
一个是调试布局这个篇影

42:48.420 --> 42:48.940
OK

42:49.440 --> 42:51.240
这个是关于这个谷歌

42:52.260 --> 42:53.540
推出了这三个指标

42:53.800 --> 42:55.840
大家下去的话可以这个了解一下

42:56.360 --> 42:58.400
这三个指标的话实际上是比较新的

42:59.180 --> 43:00.200
比较新的那种

43:00.460 --> 43:01.980
好像也就才去年

43:02.180 --> 43:03.220
好像是去年

43:03.480 --> 43:05.260
去年这个中旬的时候

43:05.520 --> 43:06.280
推出的

43:07.060 --> 43:07.560
OK

43:09.630 --> 43:11.430
好这是关于这个谷歌

43:11.690 --> 43:13.730
谷歌的这个指标这三个

43:13.990 --> 43:16.050
给大家简单的这个介绍了一下

43:17.330 --> 43:19.370
这是关于这个web应用

43:19.630 --> 43:20.650
这个性能优化

43:20.910 --> 43:21.930
这个的话

43:22.190 --> 43:24.490
注意一下就是我今天晚上介绍了这一块

43:24.750 --> 43:26.270
只是一个什么只是一个

43:26.530 --> 43:27.570
算是一个大纲

43:28.590 --> 43:28.850
知道吧

43:29.110 --> 43:29.870
算是个大纲

43:30.130 --> 43:32.690
你如果真真真真你的这个性能优

43:34.090 --> 43:34.770
他怎么回事

43:35.530 --> 43:35.930
hello

43:37.330 --> 43:37.730
hello

43:38.090 --> 43:39.130
能听到我说话吗

43:40.290 --> 43:40.670
hello

43:42.170 --> 43:42.730
能不能听到

43:44.090 --> 43:44.490
hello

43:45.370 --> 43:46.090
好能是吧

43:46.370 --> 43:48.370
刚刚我这边突然跳了一下

43:49.570 --> 43:50.130
那边呢

43:50.890 --> 43:52.890
那边那个腾讯课堂那边的同学

43:53.970 --> 43:54.490
鲍龙

43:55.250 --> 43:58.330
鲍龙说什么那个事情先听是不是一个时间就会开一个县城

43:59.090 --> 43:59.970
去监听他

44:02.360 --> 44:03.360
开一个县城

44:05.120 --> 44:05.920
可以听到是吧

44:07.320 --> 44:09.920
世界监听就会开一个这个县城

44:11.720 --> 44:12.520
去监听

44:15.340 --> 44:15.940
我想一想

44:18.500 --> 44:20.700
你事件他是开了一个县城吗

44:24.270 --> 44:25.670
好像还是是吧

44:26.470 --> 44:27.870
应该是新开了一个县城

44:28.070 --> 44:29.270
不然他就注射了的吧

44:29.870 --> 44:30.270
对不对

44:30.870 --> 44:31.470
他就注射了

44:31.670 --> 44:32.670
对他有县城池

44:35.070 --> 44:35.470
OK

44:36.470 --> 44:39.070
所以为什么需要就是你少绑定一些事件

44:39.270 --> 44:41.070
就尽量不要绑绑一太多事件

44:41.670 --> 44:42.270
就这个原因

44:43.470 --> 44:43.670
OK

44:44.070 --> 44:44.870
好回到这边

44:45.270 --> 44:47.470
就今天晚上给大家介绍的这个

44:48.270 --> 44:49.070
性能优化

44:49.270 --> 44:51.270
这边那算是一个什么呢算是个大刚

44:52.070 --> 44:52.470
知道吧

44:52.670 --> 44:53.470
算是个大刚

44:53.670 --> 44:56.670
就给大家介绍的就是我们性能优化有哪些点

44:57.070 --> 44:58.670
你这边可以从这个点入手

44:59.070 --> 45:00.670
如果后端也是你开发的

45:00.670 --> 45:02.070
那后端你可以从这个点

45:02.270 --> 45:04.070
还有就是前后端通信的时候的点

45:04.470 --> 45:05.070
还有就是什么呢

45:05.270 --> 45:06.070
还有就是这个

45:06.670 --> 45:09.870
以前这个牙壶的这个14条性能优化的建议

45:10.070 --> 45:13.270
以及这个谷歌新提出的这个性能优化指标

45:13.670 --> 45:14.070
OK

45:14.470 --> 45:17.070
把整个大方向给大家指名了

45:17.870 --> 45:20.670
那至于就是你要落实到一些细节的这个点

45:21.470 --> 45:23.470
那这个东西就非常非常多了

45:23.870 --> 45:24.870
非常非常多

45:25.070 --> 45:25.470
OK

45:27.270 --> 45:27.470
好

45:27.470 --> 45:30.470
那剩下时间的话就是帮同学们

45:30.670 --> 45:31.470
帮同学们看一下

45:31.670 --> 45:33.670
这边那个暴龙他遇到一个问题

45:34.470 --> 45:36.070
他的这个my circle撞不上

45:36.670 --> 45:37.870
这边帮他看一下吧

45:38.270 --> 45:39.270
把这个关了

45:40.070 --> 45:40.670
关了

45:43.740 --> 45:45.740
微信第一阶段的录好了吗

45:45.740 --> 45:47.340
微信第一阶段录好了呀

45:49.250 --> 45:49.850
录好了

45:51.050 --> 45:52.650
这边的话给大家看一下

45:53.450 --> 45:54.450
这边在这里

45:57.450 --> 45:58.650
前端开发

45:59.450 --> 46:00.350
然后

46:01.250 --> 46:02.050
移动端

46:02.550 --> 46:04.050
应该说是第一章

46:04.050 --> 46:05.750
应该是第一章就入门篇嘛

46:06.450 --> 46:08.050
入门篇这个这个已经录好了

46:08.850 --> 46:09.650
已经录好了

46:10.450 --> 46:11.850
就净减还是净减

46:12.250 --> 46:14.050
把整个课程把它净减下来了

46:14.550 --> 46:14.750
好

46:14.750 --> 46:16.450
那去现在录这个第二章

46:17.650 --> 46:18.250
第二章

46:19.250 --> 46:20.550
没有没有没有没有

46:21.650 --> 46:23.250
只是文件家建好了而已

46:25.250 --> 46:27.450
虚块链的话我一直挺有兴趣的

46:34.930 --> 46:36.330
虚块链挺有兴趣的

46:37.530 --> 46:39.330
回头有时间有时间研究吧

46:39.530 --> 46:41.130
每天就是事情太多了

46:43.820 --> 46:45.020
好来那个

46:45.620 --> 46:47.420
我把我这个东西关一点

46:47.620 --> 46:49.320
稍等我把我这边的东西关一点

46:49.320 --> 46:50.920
我这个电脑想起来了

46:51.620 --> 46:53.220
已经开始花花花的想起来了

46:54.720 --> 46:56.020
本来说就是

46:56.620 --> 46:57.420
想换一个

46:58.020 --> 47:00.220
但是那个价格简直是算了吧

47:01.220 --> 47:02.820
突然觉得我电脑还是能用的

47:04.620 --> 47:05.220
来那个

47:08.520 --> 47:10.120
朱老板你怎么什么都有啊

47:12.020 --> 47:13.520
朱老板真的是什么都有啊

47:16.020 --> 47:17.420
来来来那个

47:17.920 --> 47:20.220
对是你共享屏幕我这边得结束一下

47:20.820 --> 47:24.220
其他同学稍稍微等一下我这边得结束一下共享

47:24.720 --> 47:27.920
这边那个暴龙暴龙是咱们28期的同学

47:28.320 --> 47:29.120
28期的同学

47:29.520 --> 47:31.320
那边的话他那个卖12口撞不上

47:31.720 --> 47:33.520
这边我们可以一起帮他看一下啊

47:34.020 --> 47:37.120
我这边现在我结束共享让他那边来共享

47:45.160 --> 47:45.760
好了暴龙

47:47.860 --> 47:48.160
OK

47:50.790 --> 47:52.190
你可以说话暴龙

47:56.660 --> 47:59.160
其他同学能不能看到他的屏幕呀

48:00.360 --> 48:01.360
小同学能不能看到

48:02.760 --> 48:03.860
应该可以看到啊

48:04.260 --> 48:04.660
OK

48:06.360 --> 48:07.960
暴龙你说下话好不好

48:09.860 --> 48:13.660
你把我来我来听到吗听到吗OK能听到对啊

48:13.660 --> 48:15.660
你好歹把你的麦那我可以行

48:16.660 --> 48:20.560
行就是这个数据部啊撞不上我撞了已经三四天了

48:20.860 --> 48:23.460
然后C盘都给我C盘都给我搞满了

48:23.860 --> 48:26.760
然后你随便搞满肯定不是他的问题啊

48:27.760 --> 48:30.960
啊对对我更新的东西然后这然后一放什么东西

48:31.060 --> 48:33.560
我搞这个搞那个然后他说防火墙的问题

48:33.560 --> 48:36.360
然后把防火墙关了然后然后又说什么

48:36.660 --> 48:38.360
然后再往上插一说是有版本问题

48:38.360 --> 48:39.860
然后换版本也不行

48:41.160 --> 48:42.360
撞压缩包也不行

48:43.260 --> 48:44.960
然后这哎哎不对

48:46.160 --> 48:48.160
我今天撞了个压缩包等等

48:48.860 --> 48:49.360
嗯

48:50.560 --> 48:52.460
啊用那个压缩包吧

48:56.840 --> 48:58.440
你就直接装呗

48:59.240 --> 49:00.140
直接装呗

49:00.240 --> 49:01.440
这装撞不上

49:02.140 --> 49:03.340
还抱什么错误吗

49:03.340 --> 49:04.540
我们要看一下错误呗

49:04.540 --> 49:06.140
哦好好给你看看

49:06.440 --> 49:08.640
啊第二个嘛等一下等一下等一下等一下

49:09.540 --> 49:11.140
第一个是那个完整版

49:11.440 --> 49:13.640
第二个是那个支持否刺

49:13.640 --> 49:14.940
第一个是默认嘛

49:15.340 --> 49:18.440
in stores or products needed for my circuit

49:18.440 --> 49:20.040
嗯那第二个是什么

49:20.240 --> 49:22.140
in stores only my circuit server

49:22.540 --> 49:24.340
嗯这个是指装服务器

49:24.440 --> 49:25.640
第三个是client

49:26.540 --> 49:27.740
就是连接他的

49:28.040 --> 49:31.040
然后for第四个是in stores or includes

49:31.040 --> 49:32.540
products and features

49:33.140 --> 49:34.140
那custom

49:35.140 --> 49:36.840
你选自定义呢选第五个

49:38.140 --> 49:39.640
啊还可以自定义啊

49:39.740 --> 49:41.140
custom不就自定义吗

49:42.040 --> 49:44.040
那那我选自定义还是选那个

49:44.440 --> 49:45.440
选第五个嘛

49:45.440 --> 49:48.940
我们看一下就是他可以选择哪些组件啊next

49:49.540 --> 49:52.340
啊他这边的话就是有哎等一下等一下

49:52.340 --> 49:54.640
先不着急先向我看一下啊

49:54.640 --> 49:57.640
please select the product you would like to store

49:57.640 --> 50:00.440
on this computer

50:00.540 --> 50:01.840
他这边就是让你选择嘛

50:01.840 --> 50:02.940
你要安装哪些东西

50:02.940 --> 50:04.240
首先第一个是my

50:05.040 --> 50:06.140
circle servers吗

50:06.140 --> 50:07.240
这个肯定是要装吗

50:07.340 --> 50:08.440
你把它展开看一下

50:09.940 --> 50:10.940
你展开看一下呢

50:12.340 --> 50:13.640
哦哦他就是8.0

50:13.640 --> 50:15.740
你把它择叠起来择叠起来

50:15.740 --> 50:16.940
择叠起来按右键

50:16.940 --> 50:18.540
对对对择叠起来让按右

50:18.640 --> 50:20.240
就他那边不是有个右键

50:20.240 --> 50:22.140
右键头那不是有个右键头吗

50:22.240 --> 50:22.740
对

50:25.640 --> 50:26.340
点不动啊

50:27.240 --> 50:29.640
a viable product

50:31.240 --> 50:33.740
看这是什么inable the select

50:34.040 --> 50:35.540
等一下等一下你属于不要乱动

50:36.040 --> 50:38.540
inable the select future page

50:40.640 --> 50:42.540
就是允许选择

50:42.840 --> 50:44.240
这个页面custom

50:44.340 --> 50:45.340
把那个打勾呢

50:46.140 --> 50:47.740
把那个复选框打勾啊哪个

50:47.940 --> 50:50.140
下面不是有个复选框吗啊你把打勾

50:50.540 --> 50:52.040
点不动也点不动点不动

50:52.240 --> 50:53.840
我觉得他应该是先配置这个

50:54.440 --> 50:55.340
这个是啥呀

50:55.940 --> 50:57.940
fuelter过滤器

50:58.940 --> 51:01.740
txt the category分类

51:02.640 --> 51:06.040
然后下面那个counterbrounder

51:07.840 --> 51:08.440
nl

51:08.940 --> 51:10.740
好这边你应该是64位吗

51:11.640 --> 51:13.440
应该是64位啊

51:13.440 --> 51:15.540
这条or我觉得应该都配

51:15.940 --> 51:16.640
fuelter

51:18.780 --> 51:20.080
然后点不动

51:20.080 --> 51:22.480
要不然是直接跳上一个步吧

51:23.180 --> 51:24.280
嗯battle嘛

51:26.320 --> 51:27.220
要选第二个

51:27.720 --> 51:28.820
server only

51:29.320 --> 51:31.520
嗯就只让他做服务

51:33.020 --> 51:34.620
只装装服务器

51:35.820 --> 51:37.220
啊对然后点dance啊

51:37.220 --> 51:38.720
嗯ok下载

51:39.220 --> 51:40.220
下载之后你等

51:41.920 --> 51:43.520
你等一下等一下我已经

51:44.360 --> 51:45.320
我已经装了一个

51:45.660 --> 51:46.720
那个myself了

51:47.020 --> 51:48.620
那你把你之前的卸载量

51:50.120 --> 51:53.620
啊我或者有可能他会自动覆盖

51:56.720 --> 51:57.620
哎有点慢

51:57.920 --> 51:58.520
等等

51:59.120 --> 51:59.820
然后

52:02.370 --> 52:03.770
你把之前的卸载了吧

52:07.820 --> 52:10.520
对电脑太慢了吧

52:11.820 --> 52:15.900
嗯啊啊

52:17.600 --> 52:19.300
我去那种地方那里去

52:22.960 --> 52:24.760
对打蛋了啊

52:24.960 --> 52:26.960
这跟不上我手术太过分了

52:28.260 --> 52:29.060
直接过滤嘛

52:29.060 --> 52:30.360
mma等一下我看到了

52:30.360 --> 52:31.760
my circle这边

52:32.360 --> 52:33.760
然后我点启动

52:33.960 --> 52:34.560
这个是

52:34.960 --> 52:36.560
就是我在那里下载的是不行启动

52:36.560 --> 52:38.160
然后点这里他是可以启动的

52:38.260 --> 52:39.260
然后这样启动是吧

52:39.260 --> 52:40.160
然后这样启动之后

52:40.160 --> 52:41.260
我应该是可以免了对吧

52:41.760 --> 52:43.160
我现在已经启动成功了对吧

52:43.160 --> 52:45.260
啊对启动成功了

52:45.960 --> 52:47.560
这个软件

52:47.760 --> 52:49.160
嗯点数据功能吗

52:49.460 --> 52:49.860
嗯

52:57.530 --> 52:58.030
hello

53:00.430 --> 53:00.930
hello

53:02.830 --> 53:03.430
hello

53:05.760 --> 53:06.960
是他掉线了吧

53:10.930 --> 53:11.730
hello暴龙

53:12.430 --> 53:13.130
你还在吗

53:15.490 --> 53:16.090
暴龙

53:19.920 --> 53:20.420
完了

53:21.120 --> 53:22.220
我感觉他掉线了

53:38.600 --> 53:39.100
hello

53:39.600 --> 53:40.800
说我掉线了吗

53:42.000 --> 53:42.600
喂

53:43.900 --> 53:44.800
模型模型

53:46.100 --> 53:46.500
hello

53:46.500 --> 53:47.300
哦是他掉线了

53:47.300 --> 53:48.000
吓我一跳

53:48.500 --> 53:49.000
啊

53:49.200 --> 53:50.300
你们也不说话

53:51.300 --> 53:51.800
啊

53:52.300 --> 53:53.700
暴龙你还在吗

53:57.210 --> 53:57.710
暴龙

54:02.920 --> 54:04.520
那个网络啊真的是

54:06.530 --> 54:08.730
过去电脑死机了没没网了

54:10.640 --> 54:12.140
哎等一下没没网了

54:12.140 --> 54:14.540
你这边你这个为什么这个腾讯课档还在

54:16.900 --> 54:18.400
啊啊啊

54:18.900 --> 54:20.600
好好这边又我过来了

54:21.300 --> 54:21.700
啊

54:22.300 --> 54:23.400
然后连接名

54:23.500 --> 54:26.900
然后localhost密码路

54:29.400 --> 54:31.300
嗯以为搞一个吗要测

54:33.000 --> 54:33.400
啊

54:33.800 --> 54:36.700
啊你这个账用户名和密码是哪来的

54:39.000 --> 54:40.800
就他不是随便的吗

54:41.800 --> 54:42.700
是随便的吗

54:43.400 --> 54:45.000
我忘了啊我忘了

54:45.000 --> 54:46.900
你先先测试连接我看一下

54:47.500 --> 54:48.600
说不定保不准

54:49.400 --> 54:51.900
保不准就是你这个账号密码的原因

54:52.500 --> 54:54.800
cannot connect onlocalhost

54:54.800 --> 54:56.400
unknown error

54:56.400 --> 54:58.100
哦这边未知的

54:59.800 --> 55:02.400
看比如我密码是这个我密码是一个空格

55:07.610 --> 55:10.010
看等一下我再给你看那个

55:10.810 --> 55:12.610
哦比如说我今天下那个

55:12.910 --> 55:13.910
然后我做的配置

55:17.650 --> 55:19.650
哎福利文件家是啥呀

55:20.550 --> 55:20.950
啊

55:21.950 --> 55:22.350
啊

55:22.850 --> 55:24.150
福利文件家是啥

55:25.850 --> 55:28.150
就是抓就是以前搞的

55:28.250 --> 55:29.950
哦就是真的

55:33.250 --> 55:34.650
就是正常正常全体

55:34.950 --> 55:36.350
正常的正常的好的

55:36.350 --> 55:37.150
都正常

55:39.150 --> 55:40.250
然后就这个目录嘛

55:40.250 --> 55:41.450
然后就配置文件

55:41.550 --> 55:41.950
啊

55:43.050 --> 55:44.250
哦展开

55:46.290 --> 55:47.490
然后这些都没问题

55:47.990 --> 55:48.890
这些自己配置的

55:48.890 --> 55:50.390
哎呀你不要那么快呀

55:50.790 --> 55:51.990
你要让我看一下呀

55:52.790 --> 55:53.330
啊

55:53.330 --> 55:54.090
自己配置的

55:54.090 --> 55:56.090
那就是3306

55:56.290 --> 55:56.790
然后

55:57.490 --> 55:58.690
bass dir

55:58.690 --> 56:00.690
这边bass dir

56:02.290 --> 56:04.690
是数据快安装目录安装目录

56:06.190 --> 56:07.290
对就这个目录

56:07.890 --> 56:09.190
bass dir

56:10.590 --> 56:11.090
嗯

56:11.690 --> 56:12.990
那data dir

56:12.990 --> 56:14.690
这个这个是数据目录

56:14.890 --> 56:16.090
放在data对我放到这里

56:16.090 --> 56:16.990
我新建的文件家

56:16.990 --> 56:17.590
结束

56:17.590 --> 56:18.290
然后这里就

56:18.490 --> 56:19.490
这是我出实化的

56:19.890 --> 56:22.890
哎这边数据数据都出实化好了的吗

56:23.490 --> 56:24.790
对这时候出实化之后我

56:24.790 --> 56:25.890
我能出实化

56:26.190 --> 56:27.590
我能执行他这边给的命令

56:27.590 --> 56:28.790
但是我启动就是

56:28.890 --> 56:29.990
我能启动成功

56:30.390 --> 56:31.290
但是就是不能

56:31.490 --> 56:31.930
你看一下

56:31.930 --> 56:33.130
你下面有啥呢

56:33.230 --> 56:34.490
你把柄打开我去

56:36.290 --> 56:37.330
哎搞错

56:38.190 --> 56:39.590
就在这就在这

56:40.150 --> 56:41.630
我去启动嗯

56:41.730 --> 56:43.550
然后这边他有没有exe

56:43.590 --> 56:44.870
my circle的exe

56:45.590 --> 56:47.770
有啊有他应该叫做micer

56:47.770 --> 56:49.130
d不不应该叫做

56:49.330 --> 56:51.190
my circle d 是启动的意思

56:51.190 --> 56:52.890
这里啊你双漸

56:52.950 --> 56:54.390
你双邪my circle d

56:54.390 --> 56:56.950
好了 没了

56:56.950 --> 56:59.250
然后再看那个mycircle

56:59.250 --> 57:03.090
再再启动那个mycircle.exe

57:03.090 --> 57:09.880
这个啊 对对 冲击吧

57:09.880 --> 57:12.960
我记得有个命令是可以启动的

57:12.960 --> 57:14.480
就是

57:14.480 --> 57:15.760
我去摆读一下吧

57:15.760 --> 57:19.360
你这边就直接那个了 执行那个mycircle.exe了

57:19.360 --> 57:21.140
那我控制一下 我控制一下

57:21.140 --> 57:21.920
稍等

57:21.920 --> 57:23.440
还可以控制我的吗

57:23.440 --> 57:29.620
对啊 所以为什么让你用团形会议啊

57:29.620 --> 57:32.440
我靠

57:32.440 --> 57:37.140
控制吧

57:37.140 --> 57:38.420
OK

57:38.420 --> 57:42.000
控制是控制

57:42.000 --> 57:44.300
呃 这边呢 执行一下

57:44.300 --> 57:47.380
mycircle.exe

57:47.380 --> 57:48.660
可能不能执行

57:48.660 --> 57:51.720
我好久没用Windows了

57:51.720 --> 57:52.760
我也是可以的

57:52.760 --> 57:54.540
啊 这边

57:54.540 --> 57:56.080
没启动 要先启动

57:56.080 --> 57:56.860
cannot

57:56.860 --> 58:03.860
那就先这个mysqlard.exe

58:03.860 --> 58:07.180
他这边应该是有一些启动配置

58:07.180 --> 58:11.280
这边应该是有些启动配置啊 就像那个我们启动mango一样

58:11.280 --> 58:17.680
应该是可以那个的 就是后面应该是可以指定一些参数的

58:17.680 --> 58:20.240
带个遗国区看看

58:20.240 --> 58:23.060
不糊 我说您启动啊

58:23.060 --> 58:24.600
不是不是不是

58:24.600 --> 58:27.160
cannot content 那个connect

58:27.160 --> 58:29.980
我还讲不到这个

58:29.980 --> 58:30.740
连接

58:30.740 --> 58:32.280
你查一下那个呢

58:32.280 --> 58:34.580
通过命令启动

58:34.580 --> 58:37.900
我去说通过命令启动 我今天通过命令可以启动

58:37.900 --> 58:40.980
你查一下呢 查一下我看一下

58:40.980 --> 58:43.800
你是怎么启动的

58:43.800 --> 59:02.920
哇 这个今天有那个

59:02.920 --> 59:04.700
先进入的病

59:04.700 --> 59:08.800
叫做natter start

59:08.800 --> 59:12.120
就是这个 今天就启动这个 他可以启动成功

59:12.140 --> 59:14.380
我接试的可以启动成功

59:14.380 --> 59:16.940
回到你刚才那里

59:16.940 --> 59:20.520
回到这里

59:20.520 --> 59:24.540
这个就是启动服务了 但你服务启动了对吧

59:24.540 --> 59:26.420
刚才不是已经启动了吗

59:26.420 --> 59:28.700
let us start mysqlard

59:28.700 --> 59:31.540
他能启动 但连不上

59:31.540 --> 59:35.100
不见得启动 然后他启动成功了 他连不上

59:35.100 --> 59:36.780
他出去库启动不了

59:36.780 --> 59:39.220
他找不到端口

59:39.360 --> 59:42.440
刚才那边已经启动成功了

59:42.440 --> 59:47.960
成功了之后 然后看一下

59:47.960 --> 59:51.120
然后以这个let us start

59:51.120 --> 59:53.640
在这边引起动成功了吗

59:53.640 --> 59:56.760
对啊 启动成功了 然后

59:56.760 --> 01:00:04.670
看一下刚才那个呢

01:00:04.670 --> 01:00:07.230
就是因为说这样子很奇怪

01:00:07.230 --> 01:00:09.390
然后装不上 跌倒装不上

01:00:09.390 --> 01:00:11.830
装不上了 装不上

01:00:11.830 --> 01:00:14.830
不是装不上 这边是

01:00:14.830 --> 01:00:18.190
没连入进去 装是装上了

01:00:18.210 --> 01:00:21.370
对 装上了 这是我下的压缩包

01:00:21.370 --> 01:00:24.090
装是装上了

01:00:24.090 --> 01:00:27.290
哎 等下我在看服务里面看端口

01:00:27.290 --> 01:00:29.930
端口3306

01:00:29.930 --> 01:00:31.890
哦 等下我看他

01:00:31.890 --> 01:00:34.290
万一他不是 他不走我那个

01:00:34.290 --> 01:00:38.750
哎 等下那个

01:00:38.750 --> 01:00:50.650
不走我那个东西 就有点

01:00:50.650 --> 01:00:54.370
等一下 你这边怎么和那边不对称呢

01:00:54.370 --> 01:00:55.490
啊

01:00:55.490 --> 01:00:59.570
你这边怎么和刚才那边启动不对称呢

01:00:59.630 --> 01:01:01.590
SQLD

01:01:01.590 --> 01:01:03.830
对啊 LD 啊 启动啊

01:01:03.830 --> 01:01:05.550
不是 我不知道你这边是咋回事

01:01:05.550 --> 01:01:06.910
你为什么这边服务面吧

01:01:06.910 --> 01:01:09.790
显示的又是没有启动啊

01:01:09.790 --> 01:01:11.590
嗯

01:01:11.590 --> 01:01:13.750
你这边两边没有对手

01:01:13.750 --> 01:01:15.590
你没发现对了 我靠啊

01:01:15.590 --> 01:01:16.790
对了

01:01:16.790 --> 01:01:20.320
为什么会这样子

01:01:20.320 --> 01:01:23.400
你是不是装了好几个呀

01:01:23.400 --> 01:01:24.520
那就一个呀

01:01:24.520 --> 01:01:25.960
对我是装了很多遍

01:01:25.960 --> 01:01:26.760
但是我对吧

01:01:26.760 --> 01:01:29.720
那个注册表的那些都相远硬了

01:01:29.720 --> 01:01:30.600
这边很奇怪啊

01:01:30.660 --> 01:01:31.940
那边显示的是启动了

01:01:31.940 --> 01:01:36.100
但是这边服务面吧又是启动

01:01:36.100 --> 01:01:39.860
他会不会启动的不是一个东西

01:01:39.860 --> 01:01:40.980
哦 这个是这个是我

01:01:40.980 --> 01:01:42.940
这个是通过这个这个

01:01:42.940 --> 01:01:43.860
要是包装的

01:01:43.860 --> 01:01:45.140
哎

01:01:45.140 --> 01:01:46.860
是我这个装的

01:01:46.860 --> 01:01:48.540
我这个这个要是包装的

01:01:48.540 --> 01:01:50.140
哎呦我我之前那个命令

01:01:50.140 --> 01:01:51.780
然后他就安装服务

01:01:51.780 --> 01:01:52.900
他抓上了

01:01:52.900 --> 01:01:54.060
抓上之后他可以启动

01:01:54.060 --> 01:01:58.770
但是就是连不上 启动不了

01:01:58.770 --> 01:01:59.570
嗯

01:01:59.570 --> 01:02:01.530
他启动也没用 连不上

01:02:01.530 --> 01:02:03.170
嗯

01:02:03.170 --> 01:02:06.230
就是启动了之后连不上是吧

01:02:06.230 --> 01:02:07.470
哎哎对啊

01:02:07.470 --> 01:02:08.470
但是你看这个

01:02:08.470 --> 01:02:10.470
我通过下一步通过那个

01:02:10.470 --> 01:02:11.950
那个什么拼用程序

01:02:11.950 --> 01:02:15.110
这个这个这个这个这个

01:02:15.110 --> 01:02:16.070
下好了是吧

01:02:16.070 --> 01:02:17.510
捞点那个star

01:02:17.510 --> 01:02:18.390
这不没问题吧

01:02:18.390 --> 01:02:19.710
那个star

01:02:19.710 --> 01:02:20.830
没问题吧

01:02:20.830 --> 01:02:21.230
等一下等一下

01:02:21.230 --> 01:02:22.550
那个star不用配置

01:02:22.550 --> 01:02:23.630
就默认这个是

01:02:23.630 --> 01:02:25.550
他说你看你是有哪个有三个

01:02:25.550 --> 01:02:26.550
你是在做什么的

01:02:26.550 --> 01:02:28.190
这这服务端和客户端

01:02:28.190 --> 01:02:28.910
那就服务端

01:02:28.910 --> 01:02:29.950
然后这个服务端

01:02:29.950 --> 01:02:30.870
还有就是什么

01:02:30.930 --> 01:02:31.530
my circle

01:02:31.530 --> 01:02:32.330
这什么东西啊

01:02:32.330 --> 01:02:33.330
嗯

01:02:33.330 --> 01:02:33.870
哎呦

01:02:33.870 --> 01:02:34.730
第一个嘛

01:02:34.730 --> 01:02:35.530
没问题吗

01:02:35.530 --> 01:02:36.530
嗯

