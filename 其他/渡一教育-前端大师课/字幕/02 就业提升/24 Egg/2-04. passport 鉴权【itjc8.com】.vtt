WEBVTT

00:00.050 --> 00:03.850
好 这里呢 我说一下在 egg 中呢 使用第三方登录

00:05.130 --> 00:10.170
现在呢 有一个问题就是 第三方登录了 里边设计到那个 o os 原理

00:11.370 --> 00:18.690
哎呀 这个原理呢 我在这里就不讲了 因为呢 我接下来呢 打算度一个课程来讲第三方登录

00:19.090 --> 00:23.730
第三方登录里边的知识呢 还是比较了杂 比较了多啊 也比较了细

00:25.090 --> 00:29.770
这里呢 一时半伙的 也不能靠一节课啊 简单几句话就能把原理说清楚

00:30.610 --> 00:38.530
那么问题是 现在我还没有录这个课 那我肯定是要录的啊 那么具体什么时间录了 我现在还说不准 因为后边还有很多计划

00:39.730 --> 00:46.570
那么我就现在担心的有一些同学呢 看到这个选修课呢 有可能没有看过的一个第三方接口

00:47.530 --> 00:50.570
那这些课呢 你就不知道他怎么回事了

00:51.290 --> 00:55.890
另外呢 第三方接口呢 哪怕不录出来呢 也有可能是作为一个选修课

00:56.850 --> 01:00.610
所以说呢 也有可能会有些同学没看过 所以你听到这节课呢

01:01.610 --> 01:09.370
你如果说你想理解这几个东西 那你必须要知道第三方接口了一个课程的知识 你是必须要看过的

01:10.090 --> 01:12.530
那如果说你没有看过的 能不能学这节课呢 也可以

01:13.210 --> 01:17.450
不是说不能学 但是呢 你只能知道他怎么用 你无法知道他的原理是什么

01:19.090 --> 01:24.090
他的官方文道这个 其实呢 如果说你看到第三方接口那个课程啊 我将来一定会录的

01:24.810 --> 01:32.210
如果说你看到这个课程的话 这个名字不一定是这个名字啊 到时候呢 我可能会换其他的名字 反正就是这么个意思啊 总之讲的就是第三方接口

01:33.210 --> 01:36.770
第三方登陆 第三方授权啊 就这么个意思 课程的名字不一定

01:38.130 --> 01:43.250
那么你看 如果说你学了过后 你看那个官方文道 你一定能看得懂啊 你不用我讲了 你自己看就看得懂啊

01:43.850 --> 01:50.890
你这一课都不用听了 那听着这个这一课的东西呢 你就是官方文道看不懂 那看不懂的主要原因呢 就是你没有学过这个文课

01:51.530 --> 01:57.730
那就看一下吧 那我们就看一下怎么来用就行了啊 这里呢我准备好了一个非常非常简单的一个工程

01:58.210 --> 02:03.650
这工程里边啥都没有 你看啊 我该清理的该清空了 这个人要给他删掉了

02:05.450 --> 02:09.450
呃 我们昨天看一下这个 这个app这些 这个也不要了吧 直接不要了

02:11.010 --> 02:14.690
这个地方啊 我们的依赖 依赖的只有一个啊 egg view

02:15.650 --> 02:18.850
这个是模板隐形 对吧 当然模板隐形可以使用别的

02:19.890 --> 02:28.650
模板我都没有写啊 为个模念都是空的 然后呢plugging 这里面启用了模板隐形啊 这里的配置的一下模板隐形 啥都没有 对吧 这空的工程

02:29.210 --> 02:31.810
控制了空的 没有空的 没了 什么东西都没了

02:33.250 --> 02:35.610
那么接下来呢 我们来实现一个第三方登录啊

02:36.530 --> 02:44.410
这个第三方登录呢 我就以gis hub为例 实际上呢 egg 里面是支持很多第三方登录的 你需要安装相应的插件 比方说微信啊

02:44.450 --> 02:46.610
微博都可以 那为什么不用那些的

02:48.210 --> 02:58.650
保护一下我的个人隐私啊 我估计呢 后边我讲这个第三方接口的时候呢 也保护不了 但是呢 我现在呢 还没有想好啊 第三方接口了 到时候我怎么保护个人隐私啊 不要再

02:59.170 --> 03:04.650
什么信息都泄露了 所以说呢 我这里就用那个 因为我现在没有没有多的多余的微信号嘛

03:05.570 --> 03:09.810
然后就用gis hub啊 其实呢 都是一样 因为它是统一的配置啊 配置统一的

03:10.530 --> 03:18.610
那么怎么呢 使用了 首先的安装 安装一个叫 egg passport 插件 这个插件呢 它是就像模板引擎一样

03:19.210 --> 03:27.370
egg 里面的模板引擎是否 都是配置是统一的 完全统一的配置 对吧 那么具体使用什么模板引擎呢 你去启用就完事了啊

03:27.690 --> 03:34.290
你去启用相应的模板引擎就完事了 不要说我启用的是一节 s 对不对 那么我这里配置的也是一节 s

03:35.010 --> 03:39.010
那么这个第三方登录呢 它有一个统一的

03:40.290 --> 03:45.050
就是方案 就是 egg passport 它提供了一种统一的方案 就是不管你是微信微博

03:45.810 --> 03:53.050
还是gis hub 还是什么语缺等等等等 他都可以用一种统一的方案来使用 所以你学习的一种呢 其他都是一样的

03:54.570 --> 04:02.050
因此呢 我要安装一个 egg passport 它提供的是统一方案 那么另外呢 我具体的你到底要使用什么来进行第三方登录

04:02.290 --> 04:07.490
比较通常用gis hub 来进行第三方登录 那么你还要安装相应的passport插件

04:09.250 --> 04:18.850
它有很多 比方说还有微信微博啊 对安装相应的插件就行了 这个东西是必须要安装的 这个东西呢 根据你的需要 你看要提供哪些第三方登录 那么必须要安装这里的就安装这两个啊

04:19.450 --> 04:23.530
passport egg passport

04:25.570 --> 04:28.130
然后呢 egg passport

04:29.130 --> 04:31.730
gis hub 让它安装

04:32.890 --> 04:40.370
好 安装好了过后呢 我们要作为相应的配置 首先就是把这两个插件启用起来 这个很简单的啊 在plugin里边把这两个插件的启用起来

04:41.810 --> 04:43.330
这没问题吧 用力啊

04:44.210 --> 04:50.530
好 使用这两个插件 然后呢配置 后边是gboard config里面配置 当然可以根据换不同的环境的经营配置

04:50.930 --> 04:56.850
啊 比方开发环境的跟那个生产环境的可能有不一样 那么我们再配置配置里面啊 咱先过来啊

04:57.810 --> 05:02.210
好 那么看一下这个配置的名字 这个配置的名字是这样子啊 它的命名规范是这样子

05:02.610 --> 05:08.370
passport 后边跟上里的叫做策略啊 就是什么第三方登录 比方说gis hub就写的gis hub

05:08.610 --> 05:14.210
那么不同的 那么这个地方你要参与什么了 这个就是个名字该怎么写 你要参与什么了 你要参与这个对应的插件

05:14.530 --> 05:18.130
比方说啊 我们这里使用的是这个插件 对吧 那么你参与一下这个插件

05:18.530 --> 05:25.250
他的名字是什么 没什么意思吧 就这么个意思啊 那么里边的东西呢 就这里边的东西呢基本都是统一的

05:25.650 --> 05:31.730
基本上都是统一的啊 key secret callback url 这三个是最关键的 这三个要配置

05:32.770 --> 05:39.010
那么这个东西倒是可以可选啊 如果说你不配置这个玩意的话 它默认就地址有这个地址 好 我们一个一个说啊

05:40.370 --> 05:47.890
首先是这个key 是什么呢 我现在你现在还不知道是什么啊 以后呢 我们要在gis hub那边去操作一下 还会给你一个key 给你一个secret

05:48.930 --> 05:53.410
那么第三个callback url是什么呢 就是那边你在gis hub上面完成登录之后

05:53.730 --> 05:58.770
用户完成登录之后 它会给一个回跳地址 回跳地址要跳到我们网站里边来

05:59.010 --> 06:07.970
那么你要给他一个回跳地址 这个回跳地址要经过一些特殊处理 那么这个特殊处理呢 你由于你使用了这个插件啊 你不需要你手动操作了 他会自动帮你完成

06:08.290 --> 06:13.250
所以说 但是呢 你要给他一个地址 这个地址默认地址就是这个啊 表示我们可以就用这个地址

06:13.970 --> 06:20.130
啊 那么现在这个配置写完没还没有 因为这两个东西我们还不知道 对吧 那么现在我也不知道是什么 然后接下来我们继续看

06:21.010 --> 06:27.970
好 接下来还有一个就是在router里边的路由里边呢 你要去挂载 为什么要挂载呢 因为你看啊 这个地址是不是他要处理

06:28.450 --> 06:35.170
对吧 是不是要有一个control要处理这个地址 对不对 那么你不想自己手动写带吧 他会自动帮你处理

06:35.730 --> 06:45.490
当你自己去配置这个路由 当然也可以啊 自己手写 但是呢我们一般使用他的方式啊 他自动帮你完成的 那怎么来写呢 非常简单啊 也在这里

06:46.210 --> 06:47.170
挂载个路由就行了

06:49.580 --> 06:58.860
这句话就相当于是什么呢 要骂载 骂载就挂载 对吧 挂载什么get hub 为什么是get hub 就是你安装的这个插件 就是把相应的路由交给他来处理

06:59.820 --> 07:03.980
那就相当于什么呢 这里我给大家打号注释了啊 就相当于是这么几句话

07:05.580 --> 07:08.380
效果是完全一样的啊 他上面这句话是一个语法堂

07:09.900 --> 07:10.380
你看啊

07:12.140 --> 07:16.940
相当于是下面这句话啊 因为你安装好的插件过后呢 他会在这个passport里面呢

07:17.660 --> 07:19.500
就是这个东西是ag接ag

07:20.460 --> 07:22.460
是agpassport给你注入了一个api

07:23.580 --> 07:24.380
passport对象

07:25.260 --> 07:31.580
然后呢 他里边有一个方法叫authentication authenticate 就是认证 使用什么认证呢

07:32.460 --> 07:35.580
使用get hub认证 当然你要首先安装相应的get hub插件

07:36.860 --> 07:43.020
使用他来进行认证 也就是说什么呢 就这里边可以安装很多很多插件 可以提供多种认证方式

07:43.820 --> 07:47.980
原来的意思吧 总之呢 你选择一个认证方式 后面写一些配置

07:49.420 --> 07:52.620
然后呢 把它会返回一个认证对象就是get hub

07:53.260 --> 07:56.220
那么这个认证对象其实就是什么呢 就是一个处理函数

07:56.860 --> 07:58.060
就是一个处理的controller

07:58.780 --> 08:00.300
就是一个action处理函数

08:00.860 --> 08:05.740
那么这个action呢 你放上怎么来放呢 他有两个地址要处理 一个是登录

08:05.740 --> 08:09.180
就是你通过这个地址呢 你就会进入get hub登录 以后我们就可以看到了

08:09.820 --> 08:12.780
然后登录成功过后呢 他有个回跳地址 这个地址是不是就这个

08:13.100 --> 08:13.820
就我们配置这个

08:14.460 --> 08:16.780
对吧 当然你配置不同的话 这里边就不同

08:17.500 --> 08:20.140
然后呢 他会出 也会交给相应的x型来处理

08:20.540 --> 08:24.060
那么上面这一句话就相当于相当于两句话 对吧 也就是说我们

08:24.620 --> 08:28.300
写了这句话过后 至少有两个地址 是不是他已经等够自动处理的

08:28.700 --> 08:31.660
这两个地址他能自动处理 一个是进入登录页面 一个是

08:32.460 --> 08:35.500
毁掉处理那边认证结果的页面

08:36.780 --> 08:41.980
好 那么就相当于这三句话 总之呢 我们把那个帮子加的就是把它挂得进去

08:42.460 --> 08:46.700
好 那么到了这一步呢 配置就所有的完成了 你看我们控制了自己写不写 不行

08:47.020 --> 08:50.380
他能自动帮你认证 你不用管了

08:51.660 --> 08:55.900
好了 那么现在呢 还就差最后一点事 就是这个 这两个地方是没有

08:56.140 --> 09:01.580
没有的话我们继续看第三步 创建应用 创建应用也就是我们现在要跟get hub那边要打通

09:02.220 --> 09:05.580
首先呢 你要知道 当然这个东西不记得太多的原理啊

09:05.740 --> 09:09.820
就说你第三方登录的话 你必须要在第三方 就比方说你get hub登录

09:09.980 --> 09:13.660
你必须要在get hub上面去创建应用 当然微信啊这些东西都是一样

09:14.460 --> 09:18.780
那么现在呢 我们在这里 去通过这个地址呢 去创建一个get hub应用

09:20.940 --> 09:25.980
那么这里呢 我们写上一个应用名称 比方说我们写上一个doe

09:28.060 --> 09:34.540
home 就是表示我们的就是首页地址啊 首页地址呢 因为我们现在是开发阶段嘛 所以说我们这里写上这个首页地址

09:35.500 --> 09:40.540
那么应用的描述 当然你以后部署完了过 你不能用这种方式啊

09:40.940 --> 09:45.260
到时候要重新创建应用啊 因为这是开发阶段 开发阶段在用的玩的

09:45.580 --> 09:51.020
所以说呢 你这个配置呢 这个key和secrets呢 到了开发阶段 到了生产环境肯定是不一样的啊

09:51.100 --> 09:52.300
这些东西都不一样的

09:53.500 --> 09:55.820
然后呢 我们这里呢

09:56.540 --> 10:00.700
还有一个callback uio 那么这个地方写什么呢 这个地方写的callback uio写这个

10:01.500 --> 10:03.260
就写这个啊

10:03.420 --> 10:03.980
复制

10:04.460 --> 10:09.420
上天过来 也就是跟这个配置啊 这个跟这个配置的地方要保持一样啊 callback uio

10:09.660 --> 10:11.820
跟这里要保持一样 当然这里呢 你得写权

10:12.700 --> 10:14.380
这里得写权 对吧 包括郁民

10:15.500 --> 10:20.140
主席名端口号 还有这个协议 好ok 那过后呢 我们就注册一个应用

10:20.380 --> 10:23.340
因为地址还不能没有那么多那些八道的事情啊 注册应用很简单的

10:24.060 --> 10:27.180
好 注册完了应用过后呢 他就给你生成了一个应用注册的页面

10:27.980 --> 10:32.780
他的机遇是二十人争 那么这里呢 他就会给你提供两个东西 一个是client id

10:33.500 --> 10:35.820
复制 上天过来 一个是secret

10:36.620 --> 10:39.660
复制 上天过来 没了 没了

10:40.940 --> 10:41.580
好 这就是

10:42.620 --> 10:45.340
这里的配置 配置是不是完了 对吧 创建应用完了

10:45.980 --> 10:48.780
好 那么接下来就是使用了 怎么使用了 就特别简单

10:49.740 --> 10:52.460
你现在什么都不做 你什么都不做

10:54.140 --> 10:56.140
你直接去访问这个页面 我们来试一下

10:57.820 --> 10:58.620
一行代码的东西

11:01.600 --> 11:03.840
好 起动起来了啊 咱们运行一下

11:04.560 --> 11:08.160
现在你直接去访问 当然现在是找不到 访问这个页面 Passport

11:10.720 --> 11:11.200
github

11:13.200 --> 11:17.280
你看 所以就自动到了授权页面 对不对 自动到了授权页面

11:18.160 --> 11:23.760
你要意思吧 当然如果说你github没有登录的话 这里会提示的登录啊 我目前这github是登录的

11:24.480 --> 11:25.120
就这么简单

11:25.840 --> 11:31.040
那么现在呢 也就是说你只要给一个超链接 让他就挑了那个地址 他就是不是完成授权了

11:31.280 --> 11:31.920
好 咱们来

11:32.560 --> 11:34.080
试一下吧啊 来试一下

11:35.280 --> 11:38.080
啊 我们来看一下在controller里边

11:39.680 --> 11:43.680
在这里面新建一个home.json 这里能够导出

11:45.440 --> 11:49.840
mortul.export 导出一个什么呢 一个类 继承制什么呢 一个tint

11:50.240 --> 11:52.400
继承制require egg

11:53.760 --> 11:54.480
怎么controller

11:55.040 --> 11:55.760
继承制这个类

11:57.360 --> 11:59.760
然后呢 这里面我们提供一个函数

12:00.720 --> 12:02.320
提供一个函数

12:03.600 --> 12:04.160
index

12:05.920 --> 12:06.880
就处理函数

12:07.120 --> 12:11.520
那么表示我们的首页 首页呢 我在这里呢 去注册一下啊 注册一下

12:12.960 --> 12:14.080
approter

12:15.040 --> 12:15.360
get

12:15.840 --> 12:18.400
如果说访问这个例子啊 我把人扔到首页里边去

12:18.880 --> 12:19.360
index

12:20.400 --> 12:22.080
ok 这很简单的吧 我们之前学过了

12:22.640 --> 12:23.840
好 那么这边呢 我就

12:25.120 --> 12:27.200
选了一个试图吧 我就选了一个试图

12:27.920 --> 12:28.960
this context

12:29.440 --> 12:30.000
arrender

12:31.280 --> 12:32.960
当然前面要额位置啊

12:35.600 --> 12:37.760
呃 选的呢 是什么呢 选的呢 是home

12:38.080 --> 12:38.800
叫egs

12:39.920 --> 12:42.880
呃 对象呢 对象呢 我们有个写个mortul吧

12:43.200 --> 12:43.680
mortul

12:46.910 --> 12:47.630
选的对象

12:49.660 --> 12:52.140
好了 那么我们在试图里边新建一个home

12:52.540 --> 12:53.340
叫egs

12:55.260 --> 12:58.540
啊 这里呢 首页呢 我们就给它一个se吧 首页

13:01.040 --> 13:03.040
呃 然后呢 我想要写啥呢

13:04.080 --> 13:04.800
我写一个

13:06.640 --> 13:07.920
呃 div

13:10.180 --> 13:12.740
这边是写的是用户信息啊 用户信息

13:14.500 --> 13:17.700
用户信息 当前登录的用户信息啊 当然目前是没有的 对吧

13:18.340 --> 13:22.420
呃 然后呢 后边我们写上一个登录吧 一个a元数

13:24.340 --> 13:25.140
啊 登录

13:25.780 --> 13:27.140
登录的话 我们使用这个

13:27.700 --> 13:28.740
使用那个就是

13:29.700 --> 13:32.820
这个地址passport 对吧 我刚才看到过的disk hub

13:33.620 --> 13:34.100
对吧

13:34.980 --> 13:36.660
使用disk hub登录

13:37.300 --> 13:39.620
行了 我们来看一下 现在我们看一下首页

13:39.860 --> 13:40.260
刷新

13:40.420 --> 13:42.580
就变这个样子了 对吧 使用disk hub登录

13:42.740 --> 13:45.060
那么目前呢 登录用户信息我这里还没有写

13:45.220 --> 13:46.020
你点击登录

13:46.340 --> 13:47.220
所以跳到这个地址

13:47.620 --> 13:50.420
让你进行完成登录 就这么简单 对不对

13:51.460 --> 13:53.140
好 那么现在呢 我们来

13:53.780 --> 13:55.060
把一个用户信息填上

13:55.540 --> 13:59.220
好 比方说啊 我怎么样知道他有 目前有没有登录呢

13:59.460 --> 14:01.540
我怎么样知道他目前有没有登录呢 看下面的API

14:01.940 --> 14:04.100
他给你提供了一些API啊 默论的授权地址

14:04.100 --> 14:06.660
就是passport 我刚才看到的 这里这里是策略啊

14:06.740 --> 14:09.540
策略就是disk hub 目前我们使用的disk hub 对吧

14:09.780 --> 14:11.780
那你如果说用微信的话 这些微信

14:13.060 --> 14:15.620
无论你使用哪一种第三方接口 最终的API都是统一的

14:15.940 --> 14:18.180
他可以在contact里面 给你提供了一些API

14:18.420 --> 14:20.260
更多的API呢 你可以参与这个地址

14:20.500 --> 14:22.660
一个是user 表示当前登录的用户信息

14:22.820 --> 14:25.220
一个是Ease Authenticated 表示试捧已经授权

14:25.620 --> 14:27.780
就是lock it out 都退出 就这么简单

14:28.180 --> 14:28.900
就这么简单

14:29.060 --> 14:30.980
所以说你只要判断一下就完成了

14:31.380 --> 14:32.900
比方说我们的在这里呢

14:34.260 --> 14:35.140
在这里就可以判断

14:37.380 --> 14:40.820
我们这个模型对吧 有没有用户信息

14:40.820 --> 14:43.060
我们把这个模型就扔在这吧

14:44.500 --> 14:46.660
模型扔在这 好 那么我们现在这样子

14:47.460 --> 14:48.100
判断一下

14:48.820 --> 14:51.060
如果说this

14:52.100 --> 14:54.100
对对对 this context

14:54.580 --> 14:56.660
Ease Authenticated

15:06.620 --> 15:07.980
是不是已经登录了

15:09.100 --> 15:10.940
已经授权过了

15:11.900 --> 15:13.500
如果说已经授权过了

15:13.500 --> 15:16.140
我们就在model里面加上一个user

15:16.940 --> 15:19.420
其实它会自动的在contact里面加user

15:19.420 --> 15:20.380
自动在这里加user

15:20.380 --> 15:21.500
我们在这里都不用加了

15:21.500 --> 15:22.380
都不用加了

15:22.380 --> 15:23.580
如果说已经授权过了

15:23.580 --> 15:25.340
过后我们这里就是

15:25.820 --> 15:27.420
islocking so we should

15:29.100 --> 15:30.700
so we should else

15:31.100 --> 15:32.780
but islocking so we force

15:35.660 --> 15:36.860
好 那么把模型传过去

15:37.500 --> 15:39.180
实际上我们这甚至可以把这个

15:39.180 --> 15:40.380
就这样吧 就这样吧

15:40.380 --> 15:41.900
好 然后我们在这边来

15:42.220 --> 15:43.420
我们这里是不是可以用判断

15:43.660 --> 15:44.220
对不对

15:44.620 --> 15:46.220
EJS if

15:46.780 --> 15:47.260
判断

15:48.140 --> 15:49.580
如果说什么呢

15:49.820 --> 15:51.020
如果说

15:53.740 --> 15:55.020
islocking we should

15:55.260 --> 15:56.380
如果说都登成功了

15:56.380 --> 15:57.660
我们这里是不是填用户信息

15:58.140 --> 15:59.340
对不对 填用户信息

15:59.820 --> 16:00.940
好 那么这里 else

16:02.540 --> 16:03.020
else

16:08.860 --> 16:10.140
哎不对啊不对

16:10.140 --> 16:11.340
那么这里呢我们

16:11.660 --> 16:13.500
哎这个EJS的 else是咋写的

16:14.220 --> 16:15.020
我一点忘了

16:16.140 --> 16:16.540
if

16:17.500 --> 16:18.540
哦 else在这

16:20.220 --> 16:20.860
哦在这

16:23.460 --> 16:24.260
是咋写的吗

16:26.100 --> 16:26.660
else

16:29.950 --> 16:30.350
if

16:34.210 --> 16:35.970
哦在这 这样子啊这样子

16:35.970 --> 16:36.450
这样子这样子

16:37.090 --> 16:37.970
好 如果说

16:37.970 --> 16:38.850
如果说是这样子的话

16:38.850 --> 16:39.570
那么就div

16:39.570 --> 16:40.290
对吧 else

16:40.290 --> 16:41.250
那么就是这个

16:41.250 --> 16:41.810
后面这个

16:42.290 --> 16:43.570
如果说没有登录的话

16:43.570 --> 16:44.690
没有登录的话没写是这个

16:45.570 --> 16:46.850
好 保存啊 我们来看一下

16:47.250 --> 16:47.650
刷新

16:48.290 --> 16:48.530
哎

16:49.170 --> 16:50.370
目前已经登录了吗

16:51.730 --> 16:52.850
已经授权过了吗

16:54.290 --> 16:55.010
islocking

16:57.150 --> 16:57.870
我看一下啊

16:58.910 --> 16:59.310
刷新

17:00.750 --> 17:01.550
已经授权过了吗

17:01.550 --> 17:02.750
是我之前测试的时候

17:02.750 --> 17:03.710
已经授权过了是吧

17:05.150 --> 17:06.990
那么我们把用户信就显示到这吧

17:07.630 --> 17:08.110
显示到这

17:09.550 --> 17:10.190
eJS

17:11.390 --> 17:12.030
eJS

17:16.980 --> 17:17.620
eJS

17:20.180 --> 17:20.820
直接写吧

17:21.620 --> 17:22.180
然后这里呢

17:22.180 --> 17:23.380
我们可以使用json

17:23.380 --> 17:24.020
pull

17:24.020 --> 17:24.900
string key

17:26.420 --> 17:27.780
string key

17:28.740 --> 17:29.700
把这个

17:29.700 --> 17:31.060
把我们的那个

17:31.060 --> 17:32.500
context里面的user

17:32.500 --> 17:33.300
它会自动把

17:33.780 --> 17:34.820
用户信息放到这

17:35.300 --> 17:35.940
保存看一下

17:37.220 --> 17:37.940
我这里已经

17:38.260 --> 17:39.620
我这里已经授权过了

17:39.620 --> 17:41.540
之前我这个网站已经授权过了

17:41.540 --> 17:43.300
之前我做测试的时候已经授权过了

17:44.260 --> 17:44.820
那么现在呢

17:44.820 --> 17:45.700
我们就这里呢

17:45.700 --> 17:46.500
已经授权过了

17:46.500 --> 17:47.140
它就是一个

17:47.140 --> 17:47.940
就这么一些信息

17:48.340 --> 17:49.380
就这么一些信息

17:49.380 --> 17:50.100
那么这些信息呢

17:50.100 --> 17:50.820
你可以看一下

17:50.820 --> 17:51.860
你把打印出来一看

17:51.860 --> 17:52.900
一看就明白了

17:52.900 --> 17:53.780
就这么一些信息

17:54.420 --> 17:55.940
名字显示的名字

17:55.940 --> 17:56.740
以及照片

17:56.820 --> 17:57.780
那么我就放一个照片

17:57.780 --> 17:58.740
和显示的名字就行了

18:00.420 --> 18:00.980
这边呢

18:00.980 --> 18:02.260
我们就放一个照片

18:02.260 --> 18:02.740
照片呢

18:02.740 --> 18:03.940
就是一个一密集元素

18:03.940 --> 18:04.580
对吧

18:04.580 --> 18:06.020
然后src里面呢

18:07.700 --> 18:08.660
就填写

18:08.660 --> 18:09.860
ctsuser的

18:10.420 --> 18:11.540
照片是

18:11.540 --> 18:12.820
因为不同的授权信息

18:12.820 --> 18:14.580
它的里面用户的信息不一样

18:14.580 --> 18:15.300
比方说微信啊

18:15.300 --> 18:15.940
微博啊

18:15.940 --> 18:16.740
和github上面的

18:16.740 --> 18:17.940
给的信息就不太一样

18:17.940 --> 18:18.740
所以打印出来

18:18.740 --> 18:19.700
最好打印出来看一下

18:20.420 --> 18:21.060
这照片

18:21.060 --> 18:21.460
照片呢

18:21.460 --> 18:22.740
后边给一个名字吧

18:22.740 --> 18:24.420
我给它稍微测这个宽度

18:24.420 --> 18:25.780
宽度了200个像素

18:26.980 --> 18:27.300
然后呢

18:27.300 --> 18:28.580
后边设置一个名字

18:28.580 --> 18:29.380
一个实验员数

18:38.980 --> 18:40.660
那个out

18:40.660 --> 18:42.180
啊out

18:42.180 --> 18:43.780
忘了这些API

18:43.780 --> 18:44.500
呃API

18:45.700 --> 18:46.580
Display

18:46.580 --> 18:46.980
Net

18:48.740 --> 18:48.980
OK

18:50.420 --> 18:50.740
刷新

18:51.380 --> 18:51.700
OK

18:51.700 --> 18:52.500
是不是显示出来了

18:52.500 --> 18:53.380
用户信息

18:53.380 --> 18:54.180
目前是登入了

18:54.180 --> 18:54.500
对吧

18:55.060 --> 18:56.180
那么我们现在登入过后

18:56.180 --> 18:56.740
是不是要退出

18:56.740 --> 18:57.060
对吧

18:57.060 --> 18:57.780
你得给提供一个

18:57.780 --> 18:58.740
退出的功能吧

18:58.740 --> 18:59.540
所以我们给给它一个

18:59.540 --> 19:00.260
超链接啊

19:00.260 --> 19:01.060
退出

19:01.060 --> 19:01.700
退出的话

19:01.700 --> 19:02.660
其实特别简单

19:02.660 --> 19:03.060
比方说

19:03.140 --> 19:03.700
我们就推出到

19:03.700 --> 19:04.340
这个样的地址

19:04.340 --> 19:05.060
就locking out

19:06.100 --> 19:06.900
啊locking out的话

19:06.900 --> 19:07.700
我配置一下路由

19:08.580 --> 19:09.300
那么这里呢

19:09.300 --> 19:10.260
配置一下路由啊

19:10.980 --> 19:11.700
locking out

19:12.580 --> 19:14.100
locking out

19:14.100 --> 19:15.060
那么就放到这个

19:15.060 --> 19:16.180
homelocking out里面吧

19:17.860 --> 19:19.060
locking out

19:19.060 --> 19:19.860
非常简单啊

19:21.140 --> 19:21.460
放这

19:23.140 --> 19:23.940
朵铣里面吧

19:25.780 --> 19:26.260
sync

19:27.620 --> 19:27.940
好

19:27.940 --> 19:29.220
推出的话很简单

19:29.220 --> 19:30.660
就是z

19:31.540 --> 19:32.100
context

19:33.620 --> 19:34.100
然后呢

19:36.740 --> 19:37.220
这边是

19:38.580 --> 19:39.140
locking out

19:39.780 --> 19:40.260
lock out

19:43.650 --> 19:44.130
OK

19:44.130 --> 19:44.850
这样的退出了

19:46.610 --> 19:47.090
位置

19:47.650 --> 19:47.970
退出

19:48.770 --> 19:49.650
退出完了过后呢

19:49.650 --> 19:50.930
我们这里要出的事情

19:50.930 --> 19:51.810
就是重新下

19:53.330 --> 19:54.050
context

19:54.050 --> 19:54.930
ready read

19:54.930 --> 19:55.410
重新下

19:55.410 --> 19:56.130
重新让到手艺

19:57.090 --> 19:57.970
这做完事了

19:57.970 --> 19:58.610
退出完了过后

19:58.610 --> 19:59.890
重新又渲染手艺

19:59.890 --> 20:00.130
好

20:00.130 --> 20:00.450
保存

20:01.010 --> 20:01.650
发信

20:01.650 --> 20:02.370
然后点击退出

20:03.010 --> 20:03.330
你看

20:03.970 --> 20:04.770
重新让到手艺过后

20:05.090 --> 20:06.370
重新到手艺过后

20:06.370 --> 20:07.570
这边是不是就变成了

20:07.570 --> 20:08.610
islocking為forced

20:08.610 --> 20:09.010
对吧

20:09.010 --> 20:10.530
然后重新渲染这个东西的时候呢

20:10.530 --> 20:11.410
它就没有东西了

20:11.410 --> 20:13.170
它就变成衣服判断进不去

20:13.170 --> 20:14.130
它又进入air

20:14.130 --> 20:15.490
是不是只有github登录

20:15.890 --> 20:16.370
对不对

20:16.370 --> 20:17.730
那么现在我们进入github登录

20:19.170 --> 20:19.490
然后呢

20:19.490 --> 20:19.810
这里

20:20.530 --> 20:20.930
授权

20:22.930 --> 20:23.170
哎

20:23.170 --> 20:24.930
你看是不是就登录成功了

20:24.930 --> 20:25.570
对吧

20:25.570 --> 20:27.010
实际上它这里挑转了

20:27.010 --> 20:28.690
它还有分了几次挑转

20:28.690 --> 20:29.650
首先挑转到

20:29.650 --> 20:31.650
那个github的授权页面

20:32.050 --> 20:33.650
然后再挑转到github的

20:33.650 --> 20:34.610
就是提示页面

20:34.850 --> 20:37.410
再从github的提示页面挑转到

20:37.410 --> 20:38.610
我们的毁掉页面

20:38.610 --> 20:39.170
挑转到这

20:39.970 --> 20:41.010
挑转到哪呢

20:41.890 --> 20:42.450
挑转到这

20:43.010 --> 20:45.010
然后再从毁掉页面挑转到这

20:45.490 --> 20:46.130
对吧

20:46.130 --> 20:47.490
它是一层一层过来的

20:49.410 --> 20:51.650
这是关于这个授权这一块

20:52.450 --> 20:53.810
如果说它具体的原力的话

20:53.810 --> 20:56.210
你需要了解就是第三方授权

20:56.210 --> 20:57.330
就是oos那一块

20:58.530 --> 20:59.410
其他都没啥了

20:59.410 --> 21:00.610
其他都没啥了

21:00.610 --> 21:02.850
基本使用的话是非常非常简单的

21:02.850 --> 21:03.810
只不过我们真正的

21:03.810 --> 21:05.090
正在用第三方接口的时候

21:05.090 --> 21:07.010
其实还要配合很多事情

21:07.010 --> 21:08.530
比方说配合自己的数据户

21:08.530 --> 21:10.210
无论是你是微信用户

21:10.210 --> 21:12.290
还是你看你们平时在网站上

21:12.290 --> 21:13.570
做第三方登录的时候

21:13.570 --> 21:14.850
什么登录之后还要让你

21:14.850 --> 21:15.810
玩上你的信息

21:15.810 --> 21:16.210
对吧

21:16.210 --> 21:18.210
因为它要提供一个统一的用户信息

21:18.210 --> 21:19.810
它要保存到自己的数据户

21:19.810 --> 21:22.050
可能还要涉及到很多很多的细节

21:22.050 --> 21:24.130
这细节我们在第三方接口的课程里面

21:24.130 --> 21:24.850
再详细再讲

21:25.890 --> 21:26.930
其他更没啥了

21:26.930 --> 21:28.690
这是passport键权

