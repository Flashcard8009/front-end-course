WEBVTT

00:00.300 --> 00:03.580
我们这些课呢 说一下egg的一些其他的功能

00:04.380 --> 00:08.620
实际上我们在用egg的过程中啊 其实平时写代码的话就是controller

00:09.420 --> 00:12.300
啊 然后呢 加上一些配置对啊rotr

00:13.020 --> 00:19.020
然后view 试图啊 如果说你要用服务端渲染的话 就可能可能会写view试图 然后service 然后数据铺

00:19.740 --> 00:25.580
其他像这些东西都很少用的啊 像schedule啊 就是可能有的时候呢偶尔加一点点

00:26.380 --> 00:28.380
非常非常少的一些计划任务

00:29.100 --> 00:34.460
中间键呢 如果说你需要的话 你很少就可以去写一下 写了之后呢 也不用去管它了

00:34.700 --> 00:38.700
总之呢 我们平时开发的注意力机动的比较多的就是controller

00:39.340 --> 00:43.500
如果说服端渲染就无忧啊 加上一个静态支援嘛对不对

00:44.540 --> 00:47.180
那么其他文讲了这么多乱七八糟的功能呢 就是

00:47.980 --> 00:49.980
有一些特殊情况就8020原则

00:50.460 --> 00:57.900
其实很绝大部分时候呢 我们用不到这么多的东西啊 如果说遇到了 那么你只要知道至少知道一个方向啊 大致的方向是什么

00:59.340 --> 01:01.900
啊 这几个也是一样啊 比如说文件上传啊

01:03.020 --> 01:03.900
国际化啊

01:05.180 --> 01:09.660
啊 这个happer对象啊 还有什么验证啊 这是一些边角的东西啊 我们一个说吧

01:10.220 --> 01:13.420
啊 简单说一下啊 首先是这个文件上传

01:15.840 --> 01:20.320
这个文件上传呢 可以看一下这里的 就是文档啊 特别特别简单

01:20.880 --> 01:28.080
它的内部呢 是通过这个multipart插件来实现用户上传的 这个multipart插件是怎么呢 你点进去看一下啊 就知道了

01:28.640 --> 01:34.720
呃 它是通过啊 就是如果说你请求的时候 你的请求体呢 是multipart formdata

01:34.880 --> 01:38.400
这种各式来发送文件的时候呢 他会给你提供支持

01:38.800 --> 01:41.760
那么他墨镇上有两种模式 一种是file模式

01:42.880 --> 01:44.960
就你看一下你就明白了 什么叫file模式

01:45.680 --> 01:49.600
就他把这个文件先给你保存起来 直接给你保存起来

01:50.240 --> 01:55.600
保存起来的过后呢 接下来呢 你要把它移动到别的地方来怎么用就随便你啊

01:56.160 --> 01:57.120
这是file模式

01:58.240 --> 02:04.800
如果说你 还他还有种模式 比如说大文件 大文件的话 他等他给你保存下来过了很长段时间了 对吧

02:05.120 --> 02:06.880
那么你可以使用那个stream模式

02:07.360 --> 02:13.840
就是流模式 那么他不给你处理任何东西啊 他只给你提供一个流 你通过一个流一点一点的处理一点点的保存

02:14.160 --> 02:16.560
对啊 总之总之都可以做到啊

02:17.680 --> 02:19.520
file模式你看一下他怎么配置的啊

02:19.920 --> 02:22.720
配置个multipart 把它模式的配置为file

02:23.200 --> 02:26.640
啊 比方你上传上传文件啊 这里给写个客户端 这个客户端无所谓吧

02:27.040 --> 02:32.000
你无论是使用这个这种方式来提交文件 还是使用阿迦克斯的方式 总之可以上传文件的

02:32.480 --> 02:35.840
好 上传完了过后呢 服务器那边怎么来获取呢 非常简单

02:36.720 --> 02:41.760
request files 这里面可以获取到上传的所有文件 对吧 看了获取到哪一个

02:42.400 --> 02:43.440
啊 然后生成一个

02:44.160 --> 02:50.400
生成一个就是文件名 他是文件名哪来的呢 就是跟你上跟距离上传的文件的文件名里边提取出什么呢

02:50.880 --> 02:55.840
呃 然后保存保存一个目的里边去啊 然后呢 把我们这个

02:56.560 --> 03:04.560
名字啊 他这个上传到云段 我们不用管 呃 这里是你可以用fs啊 就用那个文件处理模块保存本地啊

03:05.120 --> 03:08.000
给他一个文件名 然后呢 把文件保存一下就行了

03:09.040 --> 03:09.680
要这意思吧

03:11.520 --> 03:18.480
好 然后呢 呃 上传多个文件的话啊 你可以自己去看一下啊 自己去看一下 那么这这就是一个数主了

03:18.560 --> 03:20.720
对不对 这就是数主了 一是处理就行了

03:21.200 --> 03:25.200
这上传文件啊 你看一下你一定明白的 因为我们之前已经讲过上传文件了

03:26.080 --> 03:29.280
然后呢 是那个国际化啊 国际化我说了一下

03:31.570 --> 03:37.410
国际化呢 以前大家可能没有接触过 就是你的网站上可能支持多种语言 他其实怎么回事呢

03:37.810 --> 03:45.250
为什么叫这个i18n呢 就是internationalization

03:47.730 --> 03:51.970
internationalization 应该是这个 反正一共18个字母

03:52.610 --> 03:55.490
然后呢 第一个字母是i 最后一个字母是n 叫i18n

03:56.450 --> 04:03.490
那这个国际化其实没有那么复杂了啊 就是它里边是有一个类制的插件 叫aig s8n啊 这个东西来提供的

04:04.450 --> 04:08.530
首先对他配置啊 配置的话就配置一下你的默认语言的网站默认语言

04:08.850 --> 04:12.050
那么你的网站到底是使用什么语言 他是怎么来决定的呢

04:13.010 --> 04:14.690
啊 他是怎么来决定的呢 他是这样子啊

04:15.250 --> 04:15.570
你

04:16.450 --> 04:24.210
你就是用户 如果说没有做任何操作来访问我们的网站的时候 我们使用的就是默认语言 这里配置这个字母串

04:25.170 --> 04:29.490
如果说用户的请求里边带了一个帝子 叫locale

04:30.050 --> 04:31.330
locale的单词呢 叫做

04:33.330 --> 04:34.610
哎 这个怎么没法翻译啊

04:35.730 --> 04:40.530
就是某个地方的东西啊 某个地方的东西 某个地方的语言 如果说带了这个参数

04:41.650 --> 04:47.890
那么服务器就会认为 你现在希望使用的是这个语言 他就看一下这个语言 我有没有配置

04:49.250 --> 04:52.370
如果说他没有带这个参数 但是他如果说cookie里边有这个东西

04:53.090 --> 04:54.370
cookie里边带了这个locale

04:54.610 --> 04:57.570
那么服务器啊 我们这个a个服务器呢 他也会看

04:58.130 --> 05:00.770
他也会认为我们现在使用这个语言啊 台湾

05:01.490 --> 05:05.970
呃 然后呢 如果说他的请求头里边带了这个东西和saps non-cookie

05:06.690 --> 05:13.010
那么我服务器呢 也会认为有相应的语言 那么如果说都带了的话 还有一个优先级高低 从高到低是create大于cookie大于

05:13.330 --> 05:13.810
header

05:14.290 --> 05:14.850
原来意思吧

05:16.130 --> 05:17.410
如果说用户比较软

05:17.810 --> 05:22.290
用户了只要你修改了语言 比较默认语言中文 他只要把它修改成了英文

05:22.850 --> 05:31.650
那么a个服务器会自动的就这个查询的功能 他自动的把它加到cookie里边去 那么下一次用户就不用带这个了 下一次访问的时候呢 他就直接是那个

05:32.690 --> 05:33.170
英文了

05:33.730 --> 05:40.130
就这么个意思啊 总之呢 要你客户当要告诉我服务器到底要使用什么 你不告诉我的话 我就使用默认语言

05:40.690 --> 05:43.250
那么不同的语言我怎么去处理呢

05:43.970 --> 05:47.490
你就他让你把他编写到这 咖啡一个local里面

05:48.610 --> 05:57.010
把他编写到这个这个目录 直接去找这个目录啊 直接去见见一下这个目录 然后这里面就根据不同的语言写不同的节词 也可以写接上文件啊

05:57.570 --> 06:00.610
写不同的节词 这个节词就配置就完了 全是配置的里面

06:01.090 --> 06:08.690
就是不同的语言的配置 那么比方说你看一下这个中文的中文的这个语言包 他里面怎么配置的 就找出个对象 在对象里面就各种件子对

06:09.330 --> 06:09.810
email

06:10.370 --> 06:12.530
对应的什么的 这个属性对应的就是邮箱

06:13.970 --> 06:21.570
那如果说英文的话email就对应的是email 对吧 那么如果说是繁体中文的话 就是email对应一个繁体字

06:22.530 --> 06:28.450
总之属性名这几个文件的属性名都是一样的 就是这个值不一样 就是做个配置

06:29.170 --> 06:30.610
好 配置完了过后呢

06:31.570 --> 06:35.410
我们怎么来用呢 就是比方说你在模板里边也好 你在那个

06:35.890 --> 06:42.530
康仇的里边也好 你可以直接用了啊 直接用了 怎么用呢 你可以通过康泰克社

06:43.410 --> 06:50.210
两个下华线读到这个email 那么读出来到底是什么呢 到底是繁体中文还是简体中文 到底还是英文的

06:51.010 --> 06:58.210
那就取决于当前服务系的语言 那服务当前请求处理的时候 他的使用的语言就取决于客户专那边 有没有给我传过来

06:58.690 --> 07:04.050
传了query啊 就或者传了cookie 那么我就使用你设置的语言 但找不到的话 我就是没人知

07:04.530 --> 07:09.170
就这么一回事 就这么简单的 根据一个指属性的活路 归了他的指就完事了

07:09.570 --> 07:15.410
而且他这个属性迷 而且他这个属性呢 你看这个属性啊 属性呢 他还可以是这种模板制无创

07:16.370 --> 07:21.570
那个模板制无创他一怎么该该怎么来输写呢 你可以看这个 这是loader.js几百东西啊

07:22.050 --> 07:24.290
loader.js里面一个format 更是差不多 你看a

07:24.930 --> 07:29.970
百分号s就是10 百分号d就是number 对吧 百分号j就是结设 百分号f就是float

07:30.450 --> 07:31.570
百分号i就是int

07:32.130 --> 07:37.170
啊 就这么回事啊 就是说你可以写个模板啊 其他模板过后怎么用呢 你看就是两个下滑线啊 我

07:37.570 --> 07:45.330
除了把这个东西带过来之外呢 我还把可以给他一个站位服啊 把个站位服 比方说欢迎你回来或者wellcome back啊

07:46.210 --> 07:46.930
欢迎你回来

07:47.970 --> 07:52.930
然后呢 这里一个站位服 对吧 如果说中文环境的话 这个地方就会被翻译成为欢迎回来对不对

07:53.650 --> 07:59.170
总之就是给他一个件 获取一个值就完事了啊 没有那么复杂啊 还可以给这样的站位服也可以

07:59.650 --> 08:01.330
给这样的站位服都行啊 都行

08:03.090 --> 08:04.930
你自己看 应该能看懂的啊

08:05.730 --> 08:12.770
好 那么这边使用的话就非常简单 抗帖格式里面直接用就行了啊 在师徒里面也可以用 师徒里面直接使用两个下滑线就完成

08:13.330 --> 08:16.610
直接用就行了 表示师徒里面我要显示 这个是这个地方

08:17.090 --> 08:25.490
email是啥啥啥啥 对吧 用户的 用户的邮箱 那么这个时候呢 我这个到底显示email还是显示邮件的 对吧 我们就直接通过这个

08:26.210 --> 08:33.810
s8n去获取一个完事了 把email传进去 那么他这个时候呢 还会根据当前语言的配置 去找对应的什么呢 对应的GS

08:34.050 --> 08:37.330
那么对应的GS里面肯定有email的配置 他会把拿出来

08:38.610 --> 08:40.130
就这么一回事啊 就是

08:40.530 --> 08:41.170
果句话啊

08:41.890 --> 08:44.930
Helper对象我看一下吧 Helper对象呢 他是这样子

08:46.210 --> 08:49.970
他就是呢 我们的开发的过程中呢 可能会使用一些工具函数

08:50.370 --> 08:51.650
对不对 会使用一些工具

08:52.130 --> 08:59.170
那么这些工具呢 可能会给我们提供一些帮助啊 因此呢 他做了这么一个处理 一个框架呢 做了这么一个处理 他就给你做了一个Helper对象

09:00.050 --> 09:04.210
这个Helper对象里面纯粹提供的就是一些各种使用的函数

09:04.770 --> 09:07.330
其实他给你提供的只有两个 持有两个函数

09:07.810 --> 09:12.370
但是呢 他给你提供的一种方式可以扩展它 可以往里面加函数 我们来看一下就行了

09:13.570 --> 09:16.450
这个Helper对象到处可以获取啊 你只要能够获取到context

09:16.690 --> 09:17.890
你就能获取到Helper对象

09:18.530 --> 09:20.050
Helper对象可以拿到的

09:20.770 --> 09:25.410
因为他是跟那个请求进行使力化的 就请求来了过后 他会进行使力化

09:27.170 --> 09:31.810
因此呢 Helper上的所有函数都能够获取到当前请求上下闻到信息

09:32.770 --> 09:34.930
都能够获取到的 好 不要说啊

09:36.610 --> 09:40.130
获取方要获取这个Helper对象呢 非常简单 你就通过这个

09:40.690 --> 09:44.450
ctx helper 对吧 为什么会多出来这个函数 这个函数是那个

09:45.090 --> 09:49.890
是那个是扩展出来的 是扩展出来的 我们可以对他可以扩展 我们一会再说吧

09:50.290 --> 09:53.090
就通过他来获取Helper对象 就是教你怎么去看文档

09:53.810 --> 09:58.450
那么除了在controller里边可以获取到Helper对象之外呢 我们在母就是母版

09:59.330 --> 10:02.930
母版引擎嘛 对吧 无诱里边也可以获取到Helper对象 直接用就行了

10:03.890 --> 10:09.810
啊 这个s ATML呢 他是另外一个插件啊 他给你扩展的 就是别的插件呢 他也会扩展这个Helper对象

10:09.970 --> 10:13.010
就往就给你提 一个还五分就是给你提供一个对象

10:13.330 --> 10:17.570
其他插件啊 还有用户啊 开发者啊 往里边加东西对不对

10:18.530 --> 10:23.970
好 那么这里他告诉你怎么来扩展这个Helper方法 怎么来扩展的就是extend

10:25.010 --> 10:32.930
往App Extend这个文件夹里边 写一个Helper接识啊 扩展这个Helper接识 你导出一个对象 对象里面的所有方法

10:33.570 --> 10:39.570
都是会扩展到那个Helper上 我们后边讲框架扩展的时候再说 还会说

10:40.690 --> 10:46.050
然后呢这个Helper里边他默认有什么方法了 默认了你可以在这里 API可以去查看一下吧

10:48.140 --> 10:59.410
查一查啊 看一下这个Helper嘛 Helper Reference Helper

11:01.090 --> 11:03.970
他摸的就两个方法 一个是PASS4

11:04.530 --> 11:09.650
一个是URL4 啥意思呢 你看一下你明白了啊 好像是因为好像很复杂的样子对吧

11:10.290 --> 11:15.730
PASS4两个参数 第一个参数名字 第二个参数呢就是Paris

11:16.290 --> 11:20.210
他就说什么呀 生成一个URL PASS

11:21.410 --> 11:25.970
不包括什么协议啊 主经民那些东西啊 就是纯粹的PASS

11:26.850 --> 11:28.850
for road

11:29.490 --> 11:31.490
为了路由生成一个PASS

11:31.890 --> 11:38.130
Tex就是这个得到了是路由的名字和参数的一个

11:38.530 --> 11:43.170
印设 下面告诉你一个例子一看例子 其实不用看这些一看例子就完事了

11:44.130 --> 11:46.130
get home

11:46.610 --> 11:48.610
这个是APP

11:50.050 --> 11:52.050
context Helper

11:52.050 --> 11:53.570
然后呢PASS4

11:53.570 --> 11:55.570
Home

11:55.890 --> 12:00.370
这个是不是那个之前这是路由吧 这里应该写错了 应该是rotor

12:00.370 --> 12:02.370
应该是rotor

12:02.530 --> 12:04.530
这里是那个路由的名字

12:06.210 --> 12:12.050
然后呢 这里是参数列表 他会给你生成什么呢 这应该是写的是rotor 应该是写错了

12:12.530 --> 12:15.330
那么这里呢 就是我们之前配置路由的时候

12:15.330 --> 12:20.930
你看一下 是不是给了路由 我这里没给啊 我这里没给 实际上是不是可以给路由的名字

12:20.930 --> 12:25.970
对吧 这是路由的名字 我当时说给了路由的名字呢 以后呢方便生成一个地址

12:26.690 --> 12:30.850
那么将来比方说我们要挑转的时候 我们要挑转到首页 那么首页我也不知道它地址是啥

12:31.170 --> 12:34.370
我也不知道首页的地址是啥 但是我知道首页的路由的名字是啥

12:34.770 --> 12:37.170
这样子呢 哪怕有一天首页的地址变了

12:37.650 --> 12:42.690
我知道 只要它的路由名字没变 是不是也可以不用去改很多代嘛 就起到那个作用啊

12:43.090 --> 12:47.410
那么这里呢 就写个名字啊 我要挑战哪个路由呢 我把相关的参数给你

12:47.410 --> 12:50.050
他就会生成哦 这个路由的名字他对应这个地址

12:50.610 --> 12:53.490
对吧 对应这个地址 然后呢 把参数给你变成这个query

12:54.130 --> 12:57.970
啊 因为这里没有动态参数嘛 没有动态参数呢 所以说他只能用query

12:59.810 --> 13:04.050
好 那么下面这个uil4e一模一样的效果 直播了它是完整的

13:04.530 --> 13:09.090
完整的地址 就这个区别 对吧 不过就是给大家这么两个函数 其他都没有了

13:09.810 --> 13:13.010
啊 当然其他一些其他的插件呢 给他扩展了一些函数啊

13:13.570 --> 13:16.050
这是这么一回事 还不对象

13:16.930 --> 13:23.540
好 验证 验证

13:24.420 --> 13:26.580
有 怎么了 看那只open

13:28.610 --> 13:30.770
哎呦 这写错了啊

13:32.050 --> 13:38.800
这写错了 在这 这才是链接地址

13:43.970 --> 13:45.490
啊 验证啊

13:46.210 --> 13:51.890
就有的时候呢 我们是到了 请求到了服务器过后呢 服务器可能会验证一些数据对吧 我们平时

13:52.530 --> 13:58.850
呃 服务器那边要可能要验证 验证也非常简单啊 他给你提供了就是他使用了插件啊 叫Agg-Validex插件

13:59.330 --> 14:03.090
那么这个插件呢 你要把它开启啊 安装过后把它开启

14:03.810 --> 14:08.130
呃 然后呢 他会给你注入一个context里面 注入一个方法叫Validex

14:08.610 --> 14:14.290
怎么写呢 规则验证什么东西 如果说你第二参数不写的话 那么他就默认验证

14:14.690 --> 14:16.690
消息体啊 就request的保底

14:17.890 --> 14:23.250
啊 他某人就会这样子处理 明白了意思吗 哦 这个东西好像不用安装啊 好像是不用安装的

14:24.050 --> 14:31.890
看一下吧 你看一下有没有智能提示就知道 呃 比方说咱们呢 这里写个this context来

14:32.450 --> 14:37.810
给你对策啊 要不要安装啊 你试试试试一下啊 这东西不不不不看了

14:38.450 --> 14:42.050
我们这说一下就行了啊 这些东西你要用到的时候写就行了 没有那么复杂

14:42.530 --> 14:46.850
然后呢 这个验证啊 验证的话 第一个就是规则 那规则具体怎么写呢

14:47.410 --> 14:50.450
他下面应该有说啊 这个规则教验通过的parameter

14:50.850 --> 14:56.130
他是通过这个库来验证规则的 那么这个库呢 他告诉你哪些规则啊required

14:56.930 --> 15:00.850
是不是要必填的内行 对吧啊 自己去看一下啊maxme啊

15:01.330 --> 15:06.050
不同的日期还有什么什么的 自己去可以看一下啊 其实跟那个我们之前写的那个

15:06.690 --> 15:10.210
写的那个 就是讲的那个验证库啊 就差不多啊 差不多

15:12.370 --> 15:17.330
也就教验规则 然后呢 你还可以扩展他的规则 在哪里扩展的 走在app里边

15:17.730 --> 15:21.970
mydata 加上一个入啊 规则的名称 然后具体是怎么去验证的

15:22.610 --> 15:25.650
对吧 总之呢 就是可以完成验证就完事了

15:26.450 --> 15:31.650
好了 这是验证啊 你这个验证的 只要能够获取一个contact 是不是 service 也可以用那个

15:32.530 --> 15:38.930
就是controller 里面也可以用 对不对啊 第一个参数 如果说你不填 他默认验证的对象 目标 就是你传

15:39.250 --> 15:41.250
就是你requested body

15:42.690 --> 15:50.210
好 那么就说这几个啊 这些东西呢 没有必要一个一个具体无意的把它讲完了 因为这些东西一看文章就特别特别容易理解

15:51.010 --> 15:58.130
呃 然后呢 就是这些东西平时也用的很少 但是呢 用到了过后呢 你要知道到哪里去查 再找找到一个方向

15:59.330 --> 16:04.050
而且 而且另外一点呢 就是通过这几块我告诉大家 一个礼拜还有这么几个功能

16:05.010 --> 16:11.250
有的时候呢 需要去用它 不需要验证这里 我如果说你觉得他验证看不懂 难道用不想用他那个

16:11.490 --> 16:16.290
能不能用以前讲那个核验安装用就行了 对以前的东西跟那个框架无关的

16:17.730 --> 16:20.850
好了 这是关于这个一个衣服补充一下啊 一些其他功能

