WEBVTT

00:00.110 --> 00:03.110
说一下那个XGS的配置

00:03.110 --> 00:04.110
其实这一点呢

00:04.110 --> 00:07.110
XGS肯定是考虑到的

00:07.110 --> 00:09.110
因为我们在生产环境里面

00:09.110 --> 00:14.110
某一些的值和开发环境的是不太一样的

00:14.110 --> 00:15.110
就是例子啊

00:15.110 --> 00:17.110
比方说像数据库

00:17.110 --> 00:18.110
数据库的话

00:18.110 --> 00:21.110
我们本地当我这里用的是Redis

00:21.110 --> 00:22.110
像麦声库啊

00:22.110 --> 00:25.110
Redis的数据库可能密码

00:25.110 --> 00:28.110
或者是一些配置都不太一样

00:28.110 --> 00:30.110
比方说我们这里像Redis

00:30.110 --> 00:31.110
我们找到一个配置

00:31.110 --> 00:32.110
Redis的配置呢

00:32.110 --> 00:34.110
我这里的端口号是6379

00:34.110 --> 00:35.110
对吧

00:35.110 --> 00:36.110
那服务器有个可能是别的端口号

00:36.110 --> 00:38.110
那比方说我的主机呢

00:38.110 --> 00:39.110
是本机

00:39.110 --> 00:40.110
那么在服务器上呢

00:40.110 --> 00:42.110
Redis可能是专门一台服务器

00:42.110 --> 00:45.110
可能要远程连接一个内部的IP

00:45.110 --> 00:47.110
Password的可能服务器

00:47.110 --> 00:49.110
它有一个认证

00:49.110 --> 00:50.110
然后地毙呢

00:50.110 --> 00:52.110
可能应得的是不一样

00:52.110 --> 00:53.110
总之呢

00:53.110 --> 00:54.110
服务器的配置呢

00:54.110 --> 00:55.110
可能跟开发环境不太一样

00:55.110 --> 00:57.110
这是一个非常常见的场景

00:57.110 --> 00:58.110
接式里边怎么办呢

00:58.110 --> 01:00.110
我们这里呢就说到

01:00.110 --> 01:03.110
就是那个环境配置

01:03.110 --> 01:05.110
环境配置呢

01:05.110 --> 01:07.110
我们首先要设置环境辨量

01:07.110 --> 01:09.110
A个接式里边通过

01:09.110 --> 01:11.110
它是要读这个环境辨量

01:11.110 --> 01:12.110
跟我们之前悬逗的时候

01:12.110 --> 01:14.110
要读的N5

01:14.110 --> 01:15.110
不太一样

01:15.110 --> 01:16.110
它读这个环境辨量

01:16.110 --> 01:18.110
它用两种配置方式

01:18.110 --> 01:20.110
一种是在config里边

01:20.110 --> 01:22.110
通过这个文件来指定

01:22.110 --> 01:24.110
就在config里边加一个文件

01:24.110 --> 01:26.110
叫做N5这个文件

01:26.110 --> 01:27.110
里边你随便怎么写

01:27.110 --> 01:28.110
你随写什么指

01:28.110 --> 01:30.110
它这个环境辨量就是什么指

01:30.110 --> 01:32.110
这是文件的配置方式

01:32.110 --> 01:33.110
这种方式呢

01:33.110 --> 01:35.110
我不是很推荐

01:35.110 --> 01:36.110
因为呢

01:36.110 --> 01:38.110
这个到时候你要部署到服务器

01:38.110 --> 01:40.110
你可能还要去改动这个文件

01:40.110 --> 01:42.110
我们最好呢就是不要去改动

01:42.110 --> 01:43.110
那怎么办呢

01:43.110 --> 01:44.110
建议大家呢

01:44.110 --> 01:45.110
就直接去设置这个环境辨量

01:45.110 --> 01:46.110
就完事了

01:46.110 --> 01:48.110
你就在运行的时候

01:48.110 --> 01:50.110
这里我们不是用这个

01:50.110 --> 01:52.110
目前不是用这个A个并

01:52.110 --> 01:53.110
逮不来运行嘛

01:53.110 --> 01:54.110
对不对

01:54.110 --> 01:55.110
那么在运行的时候

01:55.110 --> 01:56.110
就可以预设置这个环境辨量

01:56.110 --> 01:57.110
就完事了

01:57.110 --> 01:58.110
我们来这

01:58.110 --> 01:59.110
就可以预设置这个环境辨量

01:59.110 --> 02:01.110
复制一下吧

02:01.110 --> 02:03.110
把它设置成生产环境

02:03.110 --> 02:05.110
如果我们有两个

02:05.110 --> 02:06.110
现在我们举个例子

02:06.110 --> 02:07.110
将来部署的时候呢

02:07.110 --> 02:09.110
又有一些区别

02:09.110 --> 02:10.110
咱们举个例子

02:10.110 --> 02:11.110
现在

02:11.110 --> 02:12.110
要逮捕环境的是这个

02:12.110 --> 02:13.110
对吧

02:13.110 --> 02:15.110
然后呢生产环境

02:15.110 --> 02:17.740
有的时候呢

02:17.740 --> 02:18.740
我们要测试一下生产环境

02:18.740 --> 02:19.740
里边的运行

02:19.740 --> 02:21.740
说可以用这个

02:21.740 --> 02:22.740
好

02:22.740 --> 02:23.740
咱们试一下吧

02:23.740 --> 02:25.740
但是现在这个鞋放呢

02:25.740 --> 02:27.740
就是完全正确

02:27.740 --> 02:29.740
将来我们说部署的那一块呢

02:29.740 --> 02:30.740
再详细说

02:30.740 --> 02:31.740
总之呢

02:31.740 --> 02:32.740
这个环境呢

02:32.740 --> 02:33.740
是可以设置的

02:33.740 --> 02:34.740
可以通过这个环境辨量设置

02:34.740 --> 02:35.740
我们把这个问题

02:35.740 --> 02:36.740
解释清楚

02:36.740 --> 02:37.740
那么现在呢

02:37.740 --> 02:38.740
比方说呢

02:38.740 --> 02:39.740
用NPMZone

02:39.740 --> 02:41.740
prod运行

02:43.740 --> 02:44.740
那么这个时候呢

02:44.740 --> 02:45.740
还就是生产环境

02:45.740 --> 02:46.740
你看日子都不太一样了

02:46.740 --> 02:47.740
对不对

02:47.740 --> 02:48.740
那我们怎么来确定呢

02:48.740 --> 02:49.740
它是这样子

02:49.740 --> 02:51.740
如果说你设置了

02:51.740 --> 02:52.740
这个环境辨量的话

02:52.740 --> 02:53.740
你可以通过某一种方式

02:53.740 --> 02:55.740
来获取这个环境的设置

02:55.740 --> 02:56.740
就获取这个辨量的值

02:56.740 --> 02:57.740
怎么获取呢

02:57.740 --> 03:00.740
有一个属性

03:00.740 --> 03:02.740
在app里边有个config

03:02.740 --> 03:04.740
就在配置里边有个n

03:04.740 --> 03:05.740
那么用这个东西呢

03:05.740 --> 03:06.740
它可以表示

03:06.740 --> 03:08.740
当前应用的运行环境

03:08.740 --> 03:09.740
它到底是一个什么环境

03:09.740 --> 03:10.740
其实它呢

03:10.740 --> 03:11.740
它读的是什么呢

03:11.740 --> 03:13.740
它读的就是这个环境辨量的值

03:13.740 --> 03:14.740
你设置的是什么

03:14.740 --> 03:15.740
它就是什么

03:15.740 --> 03:16.740
比方说啊

03:16.740 --> 03:18.740
那咱们在这个app里边吧

03:18.740 --> 03:19.740
就随便找个地方

03:19.740 --> 03:20.740
我们输出一下

03:20.740 --> 03:22.740
app.config.n

03:24.740 --> 03:25.740
保存啊

03:25.740 --> 03:26.740
现在我们来看一下

03:26.740 --> 03:27.740
这里的值

03:27.740 --> 03:29.740
打印出来

03:29.740 --> 03:31.740
重新来啊

03:31.740 --> 03:33.740
runpro

03:34.740 --> 03:35.740
运行

03:35.740 --> 03:38.380
打印出来

03:38.380 --> 03:39.380
你看目前是不是prod

03:39.380 --> 03:40.380
对不对

03:40.380 --> 03:41.380
为什么是prod

03:41.380 --> 03:42.380
因为这个环境辨量的值

03:42.380 --> 03:43.380
是prod

03:43.380 --> 03:45.380
但是它可以是任何值

03:45.380 --> 03:46.380
好

03:46.380 --> 03:47.380
这是这个

03:47.380 --> 03:48.380
那如果说你没有去

03:48.380 --> 03:49.380
这是说一个细节

03:49.380 --> 03:50.380
小的细节

03:50.380 --> 03:51.380
就是如果说你没有指定这个文件

03:51.380 --> 03:53.380
也没有指定这个环境辨量

03:53.380 --> 03:54.380
总之就是环境辨量

03:54.380 --> 03:55.380
没有指

03:55.380 --> 03:57.380
环境辨量没有指的话

03:57.380 --> 03:58.380
那么它这个东西的值

03:58.380 --> 04:00.380
就是环境辨量的值啊

04:00.380 --> 04:02.380
它会默认来自于另外一个地方

04:02.380 --> 04:03.380
就是loadm

04:03.380 --> 04:04.380
因为我们在load解释里面

04:04.380 --> 04:05.380
或者是一些

04:05.380 --> 04:06.380
其他的第三方库

04:06.380 --> 04:07.380
很多时候都要用到

04:07.380 --> 04:08.380
这个环境辨量对吧

04:08.380 --> 04:10.380
那么它会根据这个值来定

04:10.380 --> 04:11.380
那怎么来定呢

04:11.380 --> 04:12.380
这个了解一下就行了

04:12.380 --> 04:14.380
如果说loadm没有设置

04:14.380 --> 04:16.380
或者是设置一些看不懂的值

04:16.380 --> 04:18.380
那么这个时候呢

04:18.380 --> 04:20.380
它就认为这个环境辨量的值

04:20.380 --> 04:22.380
我就干脆写环境辨量的

04:22.380 --> 04:28.060
它就认为这个环境辨量的值

04:28.060 --> 04:29.060
复制

04:29.060 --> 04:31.060
它认为这个环境辨量的值

04:31.060 --> 04:32.060
就是local

04:32.060 --> 04:34.060
就是本地开发环境

04:34.060 --> 04:35.060
也就是生产环境

04:35.060 --> 04:37.820
怎么回事

04:37.820 --> 04:39.820
如果说它是test

04:39.820 --> 04:40.820
就是测试

04:40.820 --> 04:41.820
如果loadm是test

04:41.820 --> 04:42.820
它就是unit test

04:42.820 --> 04:44.820
叫做单元测试

04:44.820 --> 04:45.820
一个测试环境

04:45.820 --> 04:47.820
如果说算是production

04:47.820 --> 04:49.820
这是loadm里面的生产环境

04:49.820 --> 04:50.820
一般的写法

04:50.820 --> 04:51.820
那么在这里边

04:51.820 --> 04:52.820
它就是proud

04:52.820 --> 04:53.820
就这么一个意思

04:53.820 --> 04:54.820
这种了解一下就行了

04:54.820 --> 04:55.820
总之呢

04:55.820 --> 04:56.820
这个环境辨量

04:56.820 --> 04:58.820
它就代表了ag.js

04:58.820 --> 05:00.820
它要使用的环境的值

05:01.820 --> 05:03.820
那么这个环境指定的过后

05:03.820 --> 05:05.820
我们关键是要根据不同的环境

05:05.820 --> 05:06.820
来进行配置

05:06.820 --> 05:07.820
那怎么来写呢

05:07.820 --> 05:09.820
在loadm里面非常简单

05:09.820 --> 05:11.820
你只需要在config文件下

05:11.820 --> 05:13.820
写上不同的配置文件就行了

05:13.820 --> 05:14.820
这是默认的配置

05:14.820 --> 05:16.820
这是生产环境的配置

05:16.820 --> 05:18.820
这是测试环境的配置

05:18.820 --> 05:20.820
这是本地开发环境的配置

05:20.820 --> 05:22.820
那么它的读取方式

05:22.820 --> 05:23.820
是根据环境辨量的指来的

05:23.820 --> 05:25.820
比方说你的环境

05:25.820 --> 05:26.820
就是本地开发环境

05:26.820 --> 05:28.820
默认情况下是本地开发环境

05:28.820 --> 05:29.820
那么它就会去读这个

05:29.820 --> 05:31.820
但是它读不到的话就算了

05:31.820 --> 05:32.820
它读这个过后

05:32.820 --> 05:35.820
把这个的值覆盖default

05:35.820 --> 05:37.820
然后再覆盖默认的值

05:37.820 --> 05:39.820
就形成了一个最终的配置

05:39.820 --> 05:40.820
如果说你是生产环境的话

05:40.820 --> 05:41.820
就会读这个

05:41.820 --> 05:42.820
然后覆盖它

05:42.820 --> 05:43.820
再覆盖默认的

05:43.820 --> 05:45.820
那么就是一个完整的配置了

05:45.820 --> 05:46.820
就这么一个意思

05:46.820 --> 05:47.820
比方说

05:47.820 --> 05:48.820
随便举个例子

05:48.820 --> 05:50.820
现在我们在这里default

05:50.820 --> 05:51.820
不变

05:51.820 --> 05:52.820
default不变

05:52.820 --> 05:54.820
然后我们在这config

05:54.820 --> 05:57.820
prod.js

05:57.820 --> 05:59.820
default我们变一下吧

05:59.820 --> 06:00.820
设置一个什么呢

06:00.820 --> 06:03.820
设置一个cluster

06:03.820 --> 06:06.820
主要是设置监听

06:06.820 --> 06:08.820
监听的话默认短口是那个

06:08.820 --> 06:10.820
701对吧

06:10.820 --> 06:12.820
那么我们这里换成7000

06:12.820 --> 06:15.820
然后我们在prod里边

06:15.820 --> 06:17.820
再来设置一下

06:17.820 --> 06:19.820
prod再设置一下

06:19.820 --> 06:22.820
那么这个是5000

06:23.820 --> 06:24.820
咱们来试一下

06:24.820 --> 06:26.820
两种不同的情况

06:26.820 --> 06:27.820
停止

06:27.820 --> 06:29.820
首先我们运行生产环境

06:29.820 --> 06:30.820
就是开发环境

06:30.820 --> 06:31.820
开发环境呢

06:31.820 --> 06:32.820
你会看到

06:32.820 --> 06:33.820
它现在是不是不再是701了

06:33.820 --> 06:34.820
对吧

06:34.820 --> 06:35.820
7000短口

06:35.820 --> 06:36.820
没了意思吧

06:36.820 --> 06:38.820
那么因为它没有读取到local

06:38.820 --> 06:39.820
所以它只能读取default

06:39.820 --> 06:40.820
default

06:40.820 --> 06:41.820
覆盖默认值

06:41.820 --> 06:43.820
所以变成7000了

06:43.820 --> 06:44.820
好

06:44.820 --> 06:46.820
而且它从这一点可以看出

06:46.820 --> 06:47.820
它不是整个替换

06:47.820 --> 06:48.820
它不是把整个属性替换

06:48.820 --> 06:50.820
它其实呢

06:50.820 --> 06:52.820
就是使用了一个第三方库

06:52.820 --> 06:53.820
叫extend

06:53.820 --> 06:54.820
第三方库

06:54.820 --> 06:55.820
进行深度拷贝

06:55.820 --> 06:56.820
就深度合并

06:56.820 --> 06:58.820
那么默认值里边

06:58.820 --> 06:59.820
内设里边有很多配置

06:59.820 --> 07:01.820
包括什么主机名

07:01.820 --> 07:02.820
这些东西有很多配置

07:02.820 --> 07:03.820
那么我这边

07:03.820 --> 07:04.820
只覆盖了它的短口

07:04.820 --> 07:05.820
没了意思吧

07:05.820 --> 07:06.820
好

07:06.820 --> 07:07.820
那么这里

07:07.820 --> 07:08.820
如果说我是开

07:08.820 --> 07:09.820
我是生产环境的

07:09.820 --> 07:10.820
再看一下

07:10.820 --> 07:11.820
咱们是生产环境

07:11.820 --> 07:13.820
npmronprod

07:13.820 --> 07:14.820
那么我们看一下

07:14.820 --> 07:15.820
现在的短口是多少

07:15.820 --> 07:16.820
就变成5000了

07:16.820 --> 07:17.820
对不对

07:17.820 --> 07:18.820
就是这么个意思

07:18.820 --> 07:19.820
你可以针对数据库

07:19.820 --> 07:20.820
在别的地方

07:20.820 --> 07:21.820
总之你可以用这个模式

07:21.820 --> 07:23.820
来进行不同的配置

07:23.820 --> 07:25.820
这就是关于一个配置文件

07:25.820 --> 07:27.820
另外如果说

07:27.820 --> 07:30.820
你可能会需要自定义环境

07:30.820 --> 07:31.820
这种情况

07:31.820 --> 07:32.820
要是什么情况

07:32.820 --> 07:33.820
很少见

07:33.820 --> 07:34.820
非常非常少见

07:34.820 --> 07:36.820
比方说在开发阶段的时候

07:36.820 --> 07:38.820
有的时候里边写一个功能

07:38.820 --> 07:39.820
那个功能需要一些配置

07:39.820 --> 07:40.820
但是别的开发者

07:40.820 --> 07:41.820
还不需要的

07:41.820 --> 07:42.820
那么你这里

07:42.820 --> 07:43.820
这个时候你为了不影响

07:43.820 --> 07:44.820
别的开发者

07:44.820 --> 07:46.820
你可能会自己去定一个配置

07:46.820 --> 07:48.820
那么它是支持自定义配置的

07:48.820 --> 07:49.820
那怎么来做呢

07:49.820 --> 07:50.820
比方说

07:50.820 --> 07:51.820
我这里就写了个例子

07:51.820 --> 07:54.820
你这里自定一个环境面量

07:54.820 --> 07:55.820
随便写个字

07:55.820 --> 07:56.820
随便写个字都行

07:56.820 --> 07:57.820
那么写到这个字的话

07:57.820 --> 07:59.820
它的环境是变成远近的

07:59.820 --> 08:00.820
对不对

08:00.820 --> 08:02.820
那么然后你在配置文件里面

08:02.820 --> 08:03.820
你针对性的配置一个

08:03.820 --> 08:04.820
康废一点远近点一些事

08:04.820 --> 08:05.820
它就会读取这个配置

08:05.820 --> 08:06.820
同样的道理

08:06.820 --> 08:08.820
这个配置会覆盖默认

08:08.820 --> 08:10.820
覆盖default

08:10.820 --> 08:11.820
然后覆盖它的内置的配置

08:11.820 --> 08:13.820
形成一个完整的配置

08:13.820 --> 08:14.820
就这么个意思

08:14.820 --> 08:16.820
这就是关于这个配置

08:16.820 --> 08:17.820
环境面量的配置

08:17.820 --> 08:18.820
其他也没啥了

08:18.820 --> 08:19.820
非常简单

