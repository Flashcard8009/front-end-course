WEBVTT

00:00.880 --> 00:04.880
我们这期评论继续讲移动端的适配

00:04.880 --> 00:08.880
这期课是移动端适配的最后一节课

00:08.880 --> 00:10.880
把最后两个介绍了

00:10.880 --> 00:13.880
一个是关于VW-VH的适配

00:13.880 --> 00:16.880
一个是使用第三方库

00:16.880 --> 00:19.880
我们先来看一下VW-VH

00:19.880 --> 00:25.880
这个的话也是CSS3新给我们提供的单位

00:25.880 --> 00:27.880
也是相对单位

00:27.880 --> 00:30.880
它一共有四个

00:30.880 --> 00:32.880
就是VW-VH

00:32.880 --> 00:35.880
然后这个VMIN-VMAX

00:35.880 --> 00:37.880
我们先来看前两个

00:37.880 --> 00:39.880
因为前两个用的比较多

00:39.880 --> 00:40.880
这个VW

00:40.880 --> 00:44.880
VW的话它指的就是它英文全称

00:44.880 --> 00:47.880
叫做ViewPortWise

00:47.880 --> 00:49.880
叫做四口宽度

00:49.880 --> 00:52.880
也就是说你这个EVW

00:52.880 --> 00:53.880
它就等于什么呢

00:53.880 --> 00:56.880
等于你的这个四口宽度的1%

00:56.880 --> 01:00.880
那我如果是设置100%的话

01:00.880 --> 01:03.880
那就是四口宽度的100%

01:03.880 --> 01:05.880
就比如说我这边有张图

01:05.880 --> 01:06.880
这个是手机

01:06.880 --> 01:07.880
对吧

01:07.880 --> 01:08.880
这是手机

01:08.880 --> 01:11.880
大家这边100VW就站满

01:11.880 --> 01:12.880
看到没有

01:12.880 --> 01:13.880
站满

01:13.880 --> 01:14.880
我如果写个50

01:14.880 --> 01:16.880
50的话是不是就占一半

01:16.880 --> 01:17.880
对吧

01:17.880 --> 01:18.880
那高度也是一样的

01:18.880 --> 01:20.880
你写个EVH

01:20.880 --> 01:22.880
它就只占1%

01:22.880 --> 01:24.880
就把这个屏幕分成100%

01:24.880 --> 01:25.880
只占1%

01:25.880 --> 01:26.880
写个50VH

01:26.880 --> 01:29.880
它就占50%

01:29.880 --> 01:31.880
100的话它就占满

01:31.880 --> 01:32.880
对吧

01:32.880 --> 01:33.880
VW-VH

01:33.880 --> 01:34.880
非常好用

01:34.880 --> 01:36.880
而且我现在的话

01:36.880 --> 01:38.880
我在写样式的时候

01:38.880 --> 01:40.880
我也非常喜欢用这两个单位

01:40.880 --> 01:41.880
好

01:41.880 --> 01:42.880
然后接下来还有一个是

01:42.880 --> 01:45.880
VMIN和VMAX

01:45.880 --> 01:46.880
VMIN的话就是

01:46.880 --> 01:48.880
看这个当前

01:48.880 --> 01:50.880
VW和VH

01:50.880 --> 01:51.880
哪个小

01:51.880 --> 01:53.880
我就取谁

01:53.880 --> 01:54.880
那VMAX的话

01:54.880 --> 01:55.880
刚好就相反

01:55.880 --> 01:58.880
就这边VW和VH

01:58.880 --> 01:59.880
就你这个思考

01:59.880 --> 02:01.880
宽度和高度

02:01.880 --> 02:02.880
哪个大

02:02.880 --> 02:03.880
哪个大我就取哪个

02:03.880 --> 02:05.880
比如这有张图

02:05.880 --> 02:06.880
看到没有

02:06.880 --> 02:08.880
对于我这个

02:08.880 --> 02:09.880
数着

02:09.880 --> 02:11.880
现在我手机数着了

02:11.880 --> 02:13.880
那我的这个100%的VH

02:13.880 --> 02:15.880
是不是这么高

02:15.880 --> 02:16.880
100%的VH

02:16.880 --> 02:17.880
对不对

02:17.880 --> 02:20.880
那100%的VW是不是这么宽

02:20.880 --> 02:21.880
那我如果VMIN

02:21.880 --> 02:23.880
VMIN的话就取哪一块

02:23.880 --> 02:25.880
就取这一块

02:25.880 --> 02:26.880
对不对

02:26.880 --> 02:27.880
它取小的

02:27.880 --> 02:28.880
如果是VMAX

02:28.880 --> 02:30.880
VMAX的话就取哪一块

02:30.880 --> 02:31.880
就取这一块

02:31.880 --> 02:33.880
它取大的

02:33.880 --> 02:34.880
这个的话

02:34.880 --> 02:36.880
非常好理解

02:36.880 --> 02:37.880
那这个的话

02:37.880 --> 02:39.880
和我们这个移动端布局

02:39.880 --> 02:40.880
有什么关系呢

02:40.880 --> 02:42.880
你仔细想一想

02:42.880 --> 02:43.880
我刚说了

02:43.880 --> 02:45.880
你这个VW-VH

02:45.880 --> 02:47.880
它就是什么

02:47.880 --> 02:48.880
是不是E-VW

02:48.880 --> 02:49.880
它就是

02:49.880 --> 02:50.880
四口

02:50.880 --> 02:53.880
整个四口宽度的1%

02:53.880 --> 02:54.880
你想想

02:54.880 --> 02:56.880
那它是不是就是

02:56.880 --> 02:57.880
把我们的屏幕

02:57.880 --> 02:59.880
分成了100%

02:59.880 --> 03:00.880
对不对

03:00.880 --> 03:02.880
我50VW就是

03:02.880 --> 03:04.880
占这个屏幕的50%

03:04.880 --> 03:06.880
100VW就是占这个屏幕

03:06.880 --> 03:07.880
就这个四口

03:07.880 --> 03:09.880
四口宽度的100%

03:09.880 --> 03:11.880
那是不是就把我们的屏幕

03:11.880 --> 03:13.880
分成了100%

03:13.880 --> 03:14.880
对吧

03:14.880 --> 03:16.880
那它分成100%的话

03:16.880 --> 03:17.880
是不是就是

03:17.880 --> 03:18.880
我们之前

03:18.880 --> 03:19.880
把屏幕

03:19.880 --> 03:21.880
分成多少分的工作

03:21.880 --> 03:23.880
帮助我们做了

03:23.880 --> 03:25.880
对不对

03:25.880 --> 03:27.880
它就帮我们做了

03:27.880 --> 03:28.880
我们之前的话

03:28.880 --> 03:29.880
是不是自己来分

03:29.880 --> 03:30.880
有的时候

03:30.880 --> 03:31.880
之前的话

03:31.880 --> 03:32.880
我说了

03:32.880 --> 03:33.880
这个分多少分

03:33.880 --> 03:34.880
这个的话

03:34.880 --> 03:35.880
就是看你自己

03:35.880 --> 03:36.880
你可以分16分

03:36.880 --> 03:37.880
24分

03:37.880 --> 03:38.880
32分

03:38.880 --> 03:39.880
对不对

03:39.880 --> 03:40.880
然后我们之前的话

03:40.880 --> 03:41.880
最夸张的

03:41.880 --> 03:42.880
就是使用这种的话

03:42.880 --> 03:44.880
分了750粒

03:44.880 --> 03:45.880
对不对

03:45.880 --> 03:46.880
OK

03:46.880 --> 03:47.880
这个VW的话

03:47.880 --> 03:48.880
它就是什么呢

03:48.880 --> 03:50.880
它就是给你分成了100粒

03:50.880 --> 03:52.880
看到没有

03:52.880 --> 03:54.880
然后一个VW

03:54.880 --> 03:55.880
它就是什么呢

03:55.880 --> 03:57.880
就是一粒

03:57.880 --> 03:59.880
一个VW就是一粒

03:59.880 --> 04:00.880
因此的话

04:00.880 --> 04:02.880
那我们这边的话

04:02.880 --> 04:04.880
设置这个根字体

04:04.880 --> 04:06.880
应该设置多少呢

04:06.880 --> 04:07.880
究竟它应该是

04:07.880 --> 04:08.880
占多少粒呢

04:08.880 --> 04:09.880
我们这边

04:09.880 --> 04:10.880
我们前面的话

04:10.880 --> 04:12.880
就是按照这个iPhone678

04:12.880 --> 04:13.880
如果它的这个

04:13.880 --> 04:15.880
设备宽度是375

04:15.880 --> 04:16.880
然后接下来的话

04:16.880 --> 04:18.880
一粒的宽度是不是

04:18.880 --> 04:20.880
就是3.75

04:20.880 --> 04:22.880
我们一点一点来推

04:22.880 --> 04:24.880
如果你的设备宽度是375

04:24.880 --> 04:25.880
我们iPhone678

04:25.880 --> 04:26.880
设备宽度是不是

04:26.880 --> 04:28.880
就是375

04:28.880 --> 04:29.880
对不对

04:29.880 --> 04:30.880
那么它的这个

04:30.880 --> 04:31.880
一个VW

04:31.880 --> 04:32.880
它就是多少呢

04:32.880 --> 04:35.880
它就是3.75

04:35.880 --> 04:36.880
然后根据我们

04:36.880 --> 04:37.880
上面的公式

04:37.880 --> 04:38.880
就我们刚才

04:38.880 --> 04:39.880
上面这个公式

04:39.880 --> 04:40.880
就这一套

04:40.880 --> 04:41.880
就我们

04:41.880 --> 04:42.880
就上上节课

04:42.880 --> 04:43.880
讲那个IEM

04:43.880 --> 04:44.880
适配的时候

04:44.880 --> 04:45.880
我们最终的话

04:45.880 --> 04:46.880
是不是用了这一段代码

04:46.880 --> 04:47.880
对吧

04:47.880 --> 04:48.880
用了这一段代码

04:48.880 --> 04:49.880
然后接下来

04:49.880 --> 04:50.880
我们的这个fault size

04:50.880 --> 04:52.880
我们是怎么设置的

04:52.880 --> 04:53.880
我们这边的话

04:53.880 --> 04:54.880
是这个

04:54.880 --> 04:55.880
client wise

04:55.880 --> 04:56.880
除一个design wise

04:56.880 --> 04:58.880
成一个100

04:58.880 --> 04:59.880
也就是这边

04:59.880 --> 05:00.880
算出来的话是多少

05:00.880 --> 05:01.880
每一粒的宽度

05:01.880 --> 05:03.880
是不是50像素

05:03.880 --> 05:04.880
对不对

05:04.880 --> 05:05.880
我们这边算出来

05:05.880 --> 05:06.880
每一粒宽度

05:06.880 --> 05:08.880
是50像素的时候

05:08.880 --> 05:09.880
你这个计算

05:09.880 --> 05:10.880
是最方便的

05:10.880 --> 05:12.880
就是你测量出来的

05:12.880 --> 05:13.880
这个像素

05:13.880 --> 05:15.880
直接小数点

05:15.880 --> 05:16.880
往前面

05:16.880 --> 05:17.880
一两位

05:17.880 --> 05:18.880
是不是就是

05:18.880 --> 05:19.880
IEM

05:19.880 --> 05:20.880
对不对

05:20.880 --> 05:21.880
我们这个上节课

05:21.880 --> 05:23.880
也改写了一个猫眼电影

05:23.880 --> 05:24.880
全部都是这么做的

05:24.880 --> 05:25.880
是没问题

05:25.880 --> 05:26.880
对吧

05:26.880 --> 05:27.880
那我现在的话

05:27.880 --> 05:28.880
那我现在

05:28.880 --> 05:29.880
是使用的是什么呢

05:29.880 --> 05:31.880
我使用的是W

05:31.880 --> 05:33.880
我使用的是W

05:33.880 --> 05:35.880
那我现在的话

05:35.880 --> 05:36.880
我知道

05:36.880 --> 05:37.880
我们要将元素的

05:37.880 --> 05:38.880
字体大小

05:38.880 --> 05:40.880
设为什么呢

05:40.880 --> 05:42.880
设为50像素

05:42.880 --> 05:44.880
50像素究竟是多少粒呢

05:44.880 --> 05:46.880
我一粒的话是多少

05:46.880 --> 05:49.880
一粒是不是3.75

05:50.880 --> 05:51.880
你想想

05:51.880 --> 05:52.880
一粒是不是3.75

05:52.880 --> 05:53.880
对不对

05:53.880 --> 05:54.880
那接下来的话

05:54.880 --> 05:56.880
50像素有多少粒

05:56.880 --> 05:57.880
是不是又回到

05:57.880 --> 05:59.880
那个小学数学题了

05:59.880 --> 06:00.880
对不对

06:00.880 --> 06:01.880
那你这边的话

06:01.880 --> 06:02.880
就直接使用50

06:02.880 --> 06:03.880
除一个多少呢

06:03.880 --> 06:05.880
除一个3.75

06:05.880 --> 06:07.880
那究竟多少粒

06:08.880 --> 06:09.880
是不是就算出来了

06:09.880 --> 06:10.880
对不对

06:10.880 --> 06:11.880
这边算出来就是

06:11.880 --> 06:13.880
这个13.3333 Moon

06:13.880 --> 06:14.880
这边有的同学

06:14.880 --> 06:16.880
看到这个小数点

06:16.880 --> 06:17.880
有这么多

06:17.880 --> 06:18.880
有的同学就慌了

06:18.880 --> 06:19.880
这个是没有问题的

06:19.880 --> 06:40.740
ok

06:40.740 --> 06:45.700
啊 他这边是13点3334啊 我那边的话是取了一个进食值

06:46.580 --> 06:50.140
ok 好 那我们来看一下这种方案好不好死啊

06:51.500 --> 06:54.260
来看一下好不好死啊 我这边的话新建一个

06:58.700 --> 07:00.500
新建一个啊 在桌面上

07:02.580 --> 07:04.260
index.html

07:05.220 --> 07:10.900
ok 好 然后接下来的话我们来一个这个di位啊

07:11.300 --> 07:12.820
然后接下来的话在这边style

07:14.580 --> 07:23.100
好 这里的话我就要干嘛呢 我就想设置这个di位的宽度啊 这边写一下 我们写到下面吧

07:24.460 --> 07:28.620
我们想要设置该

07:29.740 --> 07:33.860
di位的宽度为什么呢 为

07:34.260 --> 07:35.700
这个4口

07:37.860 --> 07:38.340
4口

07:41.890 --> 07:47.890
4口的一半啊 那也就是说也就是说

07:49.010 --> 07:53.810
也就是说 测量出来应该是多少

07:55.090 --> 07:56.850
测量出来的话是不是就是应该是

07:57.890 --> 08:01.730
起稿是起了750吗 750的话一半的话是不是375啊

08:02.290 --> 08:07.330
就是那个设计师给你这个设计稿的时候 你测量出来就是应该是375

08:08.850 --> 08:11.970
像素 对吧 然后我们设置的时候

08:13.090 --> 08:20.690
我们设置的时候就应该是3.75啊 颜貌

08:21.610 --> 08:26.410
对吧 就这边的这个计算还是一样 小数点往前挪两位

08:27.290 --> 08:35.130
啊 就这边的话和之前就是我们之前是一样的 你测出来是多少 然后这样你写的时候小数点往前挪两位就可以了

08:35.450 --> 08:40.010
好 然后接下来在这边 这边的话我们之前的话是不是得通过什么

08:41.210 --> 08:44.170
是不是得通过一大段这个js

08:45.050 --> 08:49.850
是不是才能做的啊 对不对 你得通过这一段js才能做到 那现在的话就不用了

08:50.330 --> 08:55.050
现在的话我只需要设置什么呢 我只需要设置根字体

08:55.770 --> 09:02.410
啊 你注意啊 这边这个使用了一个伪类选择器啊 选择中了就是你的route就是html

09:03.770 --> 09:06.650
好 设置他的这个fonte size

09:07.450 --> 09:11.450
他的fonte size为多少呢啊 就应该是这边算出来的

09:14.330 --> 09:18.010
算出来的啊 这么多 然后vw

09:19.290 --> 09:24.250
看到没有 就完事了啊 就完事了 好了 我们这边 我们来试一下呗

09:25.050 --> 09:26.890
好 我们这边的话div

09:28.010 --> 09:36.730
然后宽的话我认真是多少 是不是3.75啊 对吧 你量出来是多少小数点往前移两位啊 这个应该很熟悉了啊 上去可写了一个实战案例的

09:37.210 --> 09:41.050
好 然后加这边刚3.75 然后给一个背景颜色

09:41.610 --> 09:42.890
ban光的carner

09:43.530 --> 09:44.410
一个ray的

09:45.210 --> 09:49.210
ok 保存 保存了之后 然后接下来的话 我们这边把它打开一下

09:51.640 --> 09:55.560
好 打开之后 然后 我们把那个

09:56.360 --> 10:04.640
把那个margin那些清楚一下 margin零 然后pidin零啊 保存

10:05.280 --> 10:08.640
这边刷新 ok 搞定没有

10:09.360 --> 10:15.520
是不是就搞定了 你看这边是不是就是占屏幕宽度的一半 对吧 好 你这边切换一下其他的

10:16.640 --> 10:20.640
啊 刷新一下 有没有问题啊 是完全没问题啊

10:20.960 --> 10:27.520
这个就是使用什么呢 使用这个vw和vh啊 使用这种方案来进行这个适配

10:27.840 --> 10:31.920
这个的话可以说就是这两个单位哈 它天生就是为适配而生的

10:32.560 --> 10:38.560
对吧 你想想你这个一个vw就是屏幕的一列 100 vw 就是屏幕的100列

10:39.040 --> 10:41.440
所以天生就是为适配而生 ok

10:42.160 --> 10:43.920
好 那我们这边的话 我们就把

10:44.080 --> 10:50.960
这个已经说了哈 那我们这边呢 就把我们上节课写的那个猫眼

10:51.680 --> 10:59.520
我们来到这边 上节课写的猫眼在这里啊 登陆叶实战案例2

11:00.160 --> 11:04.640
我把拿出来复制一份啊 然后在这边的话改个名字嘛 改成三

11:05.680 --> 11:08.320
ok 好 那我们这边呢 我们要把它改一下

11:09.040 --> 11:16.990
好 来到这边 我们先把它启动起来哈 先回顾一下我们上节课所写的一个成果

11:17.550 --> 11:19.150
是吧 把它启动起来

11:22.110 --> 11:25.310
刷新一下 ok 现在的话是不ok的

11:25.790 --> 11:30.510
对不对 现在是ok的 好 然后接下来这边刷新一下啊 这个是iphone 6

11:30.510 --> 11:35.470
什么都是ok的 对吧 好 然后现在的话 我要把这个改成什么呢 改成这个

11:35.550 --> 11:41.550
使用这个vw的方式来进行这个适配 好 来到我们这边这个代码

11:42.590 --> 11:46.590
来到这个代码 这一大段节课还要不要

11:47.310 --> 11:55.150
这一大段这一大段是不是就不要了 对不对 这一大段不要了啊 不要了 这你保存一下 那他现在的话就又啊 又变成这个样子了

11:55.710 --> 11:59.390
可不可以啊 就乱了啊 好 然后接下来的话

11:59.470 --> 12:03.150
然后我们接下来的话 我们在哪里呢 我们在这个glob里面

12:04.270 --> 12:10.270
就这边啊 这边的话 我们来进行一个设置

12:11.230 --> 12:16.350
rot对吧啊rot 然后刚才我们算出来的话是

12:17.310 --> 12:20.670
就这个fonte size 他应该是多少

12:22.110 --> 12:22.910
刚才我们

12:23.790 --> 12:28.270
呃 这边没有了 是吧 好 我看了 这边没有了 是吧

12:28.750 --> 12:29.870
啊 我看那个文件

12:31.710 --> 12:41.100
啊 这边 我把打开啊 刚才的话是多少 是不是这么多 对不对啊 把他拿过来

12:43.100 --> 12:47.660
啊 把他这儿设置一下啊 设置了之后 然后接下来的话 你这边保存

12:48.220 --> 12:51.420
保存了之后 然后接下来的话 来到这边

12:52.860 --> 12:59.660
来到这边 你刷新啊 都不用刷新啊 你可以看到这边的话 有没有达到我们期望的这个效果

13:00.860 --> 13:01.420
你看一下

13:02.780 --> 13:11.420
有没有达到我们期望的效果 是没有啊 对不对 哎 感觉就很奇怪了 哎 刚才的话 你这个这边用

13:12.220 --> 13:19.100
这边用是不是都是ok的 对吧啊 3.7我占一半就ok了 但是这边的话 为什么就有问题呢

13:19.660 --> 13:25.180
原因很简单 我们刚才计算的话 我们是怎么计算的 哎 等一下 不小心把这个点开了

13:25.740 --> 13:33.660
而我们刚才计算的话是怎么计算的 你回忆一下 我们这边计算出来 你的字体大小要设置为多少

13:34.380 --> 13:35.820
是不是设置为50

13:36.780 --> 13:46.140
然后用这个50去除以这个3.75 3.75就是你这个一列嘛 对吧 一列的这个宽度 算出来是不是这么多

13:46.700 --> 13:49.180
对吧 好 你这个50是怎么来的

13:50.060 --> 13:52.460
50我们是不是通过这个公司来的

13:53.420 --> 14:02.140
所以通过这个公司来的 对不对 这个公司然后接下来这边的话是个client wise 就是你设备宽度啊 我们当时是375

14:02.700 --> 14:08.300
那设计稿的话是750啊 除下来是不是0.5 0.5成一个100

14:08.860 --> 14:11.500
是不是就是50啊 对不对 但是你现在的话

14:12.300 --> 14:14.540
你想想我们的设计稿变成多少了

14:15.420 --> 14:17.900
我们的设计稿的时候变成1080了

14:18.540 --> 14:22.300
还记不记得我们上几个写的时候啊 我反复讲了 我们的设计稿是

14:22.540 --> 14:25.260
1080啊 这边的话你也可以看得到

14:26.300 --> 14:33.420
这边啊 这边ctrl这一下对吧 是不是1080啊 我把这个注射掉嘛

14:33.980 --> 14:35.500
这个就不要了啊

14:36.460 --> 14:45.980
那就不要了 是不是1080啊 所以说你这边的计算是不是也应该是375去除一个1080

14:46.540 --> 14:50.300
对不对 再乘一个100好 那我们这边让我们来计算一下啊

14:51.020 --> 14:56.220
好 我们这边的话是375除一个1080

14:56.860 --> 14:59.580
再乘一个多少 再乘一个100

15:00.620 --> 15:07.100
啊 也就是我们的字体大小的话 我们要设置为多少 设置为34.7222

15:07.500 --> 15:11.580
小数点很多不用怕 只要它计算出来 结果是正确的就可以

15:12.220 --> 15:15.020
ok 好 然后接下来再用这个数

15:15.740 --> 15:24.620
再用这个数去干嘛呀 你回来看一下 再用这个数是不是去除一个3.75啊

15:25.340 --> 15:30.220
对不对 应该是这样子来算 3.75走

15:31.180 --> 15:34.860
看到没有 算下来的话就应该是多少呢 就应该是这么多

15:35.420 --> 15:39.260
vw ok 好 那我们这边回到我们的这个代码

15:39.980 --> 15:44.860
回到啊 这边不变 然后来到这边 这边的话就应该是

15:46.220 --> 15:51.420
是不是这么多vw 对不对 9.25 925啊 反正后面这么多

15:52.380 --> 15:54.700
ok 好 然后加我们这边保存一下

15:56.220 --> 15:58.780
保存之后 然后将我们来看一下正常了没有

15:59.500 --> 16:04.300
是不是就正常了啊 所以说刚才的话是我们的这个算法啊 就是我们的那个

16:04.860 --> 16:09.660
设计稿的尺寸 我们没有取对啊 你看现在现在是不是就都ok了

16:11.340 --> 16:13.580
看到没有 是不是都ok的啊

16:14.300 --> 16:19.740
啊 这就是关于使用这个vw和vh啊 现在的话慢慢就是

16:20.460 --> 16:26.140
一动断的适配的话 就是使用这种vw vh啊 慢慢就变得越来越多了

16:26.540 --> 16:29.340
啊 因为他不需要干嘛 他最大的优点就是这边

16:30.060 --> 16:34.860
不需要干嘛呀 是不需要再做这一大段这个jess的这个处理了

16:35.580 --> 16:40.860
对不对 他这个vw他背后其实也是这么处理的啊 只不过他这边上就是浏览器

16:41.260 --> 16:42.860
他已经帮我们处理了啊

16:44.700 --> 16:52.220
好 这是关于这个vw vh啊 然后最后最后的话就是使用这个第三方库

16:52.860 --> 16:55.500
进行这个适配啊 我们来看一下啊

16:56.220 --> 17:04.540
啊 一直以来的话一动端适配问题啊 困扰着一动端的开发者啊 所谓说呢就出现了很多

17:04.940 --> 17:05.820
第三方库

17:06.860 --> 17:11.020
看到没有啊 出现了很多第三方库来解决这个问题啊

17:11.420 --> 17:15.660
那其中比较有名的话就有什么呢 就有这个heart css

17:16.380 --> 17:21.740
啊 这个的话是一动端布局开发解决方案啊 我们这边把他点开看一下

17:22.300 --> 17:28.380
这个是他的get hub地址啊 这边等他开吧 我们这边继续往后面啊

17:29.100 --> 17:35.740
好 然后接下来的话你到时候的话你可以从这个get hub上面你可以下载对应的这个文件

17:36.300 --> 17:39.260
啊 那我们需要的是什么呢 我们需要的就是两个

17:39.820 --> 17:42.700
一个是heart css.jess

17:43.340 --> 17:44.780
一个是这个p

17:45.500 --> 17:49.180
这个px2这个im点这个sass

17:49.740 --> 17:55.660
你注意啊 他这边提供了这个sass的这个文件啊 也就是说我们后面写代码的话 我们用sass来写啊

17:56.060 --> 17:59.340
这就要求你对这个sass有一定的这个了解

18:01.020 --> 18:04.460
好 那接下来的话我们这边可以来试一下 我看这边打开没有

18:05.740 --> 18:08.220
呦 这边还打不开啊

18:08.940 --> 18:16.220
啊 还打不开 没关系啊 我这边的话我已经把他下载好了 下载下来就是这个样子的

18:17.500 --> 18:24.940
看到没有啊 这边呢是打开了太好了 这边打开了看到没有 这里的话是这个heart css

18:25.420 --> 18:30.300
这里写的有让一动端布局开发更加容易

18:31.020 --> 18:37.420
啊 他是一个什么呢 他是一个一动端布局开发的解决方案啊 这样他这边告诉你

18:37.660 --> 18:38.700
下载下来的话

18:39.580 --> 18:44.060
有些什么东西啊 这边的话有这个example 这个是他的一些势力

18:45.420 --> 18:50.380
那接下来他的主要文件就是在src下面看到没有 有一个js

18:50.940 --> 18:53.420
然后接下来的话有这个px2rem

18:53.820 --> 18:57.740
对应的有类似版本有sass版本有这个status

18:58.460 --> 19:03.420
版本ok 就看你用哪一个这个css预处理器

19:03.900 --> 19:09.500
啊 你用类似 那你就这边引入这个 用sass就用这个啊 status就用这个

19:10.060 --> 19:15.420
ok 好 来我们这边的话 我们来试验一下啊 好 这边他已经下载下来了

19:16.700 --> 19:20.810
好 把这些先先注意小话 ok

19:21.850 --> 19:26.970
我这边他已经下载下来 下载下来的话 我们这边src 你看 是不是就是这三个这四个文件

19:27.930 --> 19:33.850
对不对 这四个文件 好 然后接下来的话 我们这边新创建一个项目目录啊

19:35.370 --> 19:38.010
这个叫做什么呢 这个叫做heart

19:39.130 --> 19:41.050
css下滑线

19:42.250 --> 19:46.970
下滑线demo ok 好 然后接下来后我们就在这里面

19:50.490 --> 19:53.450
我们在这里面好 我们来创建我们的这个文件

19:54.410 --> 19:56.490
好 首先的话 我们这边正常情况下

19:57.210 --> 20:01.210
有一个index.html对不对

20:01.930 --> 20:07.290
ok 好 然后接下来的话 我们这边呢 想有一个这个div这个div回头的话也是要干嘛呢

20:07.370 --> 20:13.930
就是占整个这个屏幕的一半啊 我们就写这个屏幕的一半 只要这个你搞定了 那其他的是不是就都搞得定

20:14.330 --> 20:19.050
ok 好 那正常情况下 我这边他是不是就是应该是要引入一个

20:19.610 --> 20:23.370
啊 我们就放在当前目录下面index.css

20:24.570 --> 20:29.370
对不对 正常情况下引入一个css 那接下来在css里面来书写样式

20:29.770 --> 20:36.170
ok 但是呢 我们这个css啊 我们通过什么呢 通过就是我们去写上时代嘛

20:36.650 --> 20:42.330
然后接下来通过一些这个转移器 他自动帮我们生成这个sass

20:43.290 --> 20:46.650
ok 啊 说说我这边的话我还需要干嘛呢 我还需要

20:47.370 --> 20:52.490
创建一个index.sas sss

20:53.290 --> 20:56.090
啊 大家这边写下啊 这里书写我们的

20:56.810 --> 21:01.690
这里书写我们的这个sas

21:02.170 --> 21:07.930
代嘛 之后编译为css

21:08.650 --> 21:14.490
啊 他自动会编译成同名的 他编译的话编译出来的就是index.css

21:15.130 --> 21:19.370
ok 好 然后接下来的话 我们这边的话需要把这个啊

21:20.650 --> 21:21.850
需要把他的那个包

21:23.770 --> 21:30.490
这边啊 这边需要把他的包 我们需要把什么拿过来呢 一个是这个heart css.js

21:31.290 --> 21:35.610
把他拿过来 然后一个是什么呢 我们这边用的是sass对吧 然后接下来把他

21:36.970 --> 21:42.330
拿过来 ok 把这两个东西拿过来好 拿过来之后 然后这样我们来看一下这两个东西是啥

21:43.290 --> 21:44.410
好吧 这个就关了啊

21:47.290 --> 21:52.650
好 这边 我们来看一下这两个东西是啥这个是啥 首先这个heart css.js

21:53.130 --> 21:58.330
啊 你可以看到这边的话 他其实用的就是什么呢 就是这个rem方案

21:58.890 --> 22:01.130
啊 只不过他考虑的就会更细一些

22:01.850 --> 22:03.130
看了没有 你看这边是不是还是

22:03.850 --> 22:06.250
你仔细看一下啊 他下面

22:10.410 --> 22:15.290
你看这边设置这个根字体 对不对 然后index.css.js出一个320

22:16.090 --> 22:22.250
他这边呢 其实核心的话用的就是我们那个阿耶梦的视频方案啊 只不过他考虑的更细一些

22:22.570 --> 22:26.410
比如他考虑到了这个 我看 我记得他考虑到了这个一向数 这边

22:26.970 --> 22:32.410
看到没有 移动端的一向数啊 这个四季难题啊 但这个什么是一向数

22:32.970 --> 22:39.530
啊 这个问题 这个我们放到后面 后面我们在讲这个移动端常见问题的时候 我们统一来说

22:40.330 --> 22:43.130
好吧 我们统一来说啊 所以这个的话 我们先不管他

22:43.690 --> 22:49.050
好 那这边的话 你把这个js的话 你把它引一下啊 这边 引一下

22:51.130 --> 22:57.770
呃 当前目录下面的heart css.js啊 先把这个引了 引了之后 然后接下来的话

22:58.490 --> 23:07.050
呃 来到这边 上是这边 上是这边的话 你就需要把这个 我们来看一下这边px2rem

23:07.610 --> 23:11.450
这边 这边的话他就是什么呢 他这边呢 就是一个方法

23:12.330 --> 23:18.890
啊 就一个函数 就一个叫做px2rem的这个函数 然后接下来你往这边传入这个向数

23:19.370 --> 23:22.410
然后他会自动的给你转成rem

23:23.290 --> 23:28.090
ok 自动的给你转成rem啊 所以说我们这边来到我们的这个sus

23:28.970 --> 23:32.170
我们首先呢 把它引入一下 这边import

23:35.000 --> 23:40.840
import了什么呢 这个px 然后2rem.scss

23:41.800 --> 23:43.640
ok 先把这个引入一下

23:45.480 --> 23:50.840
好 接下来的话 你就可以非常愉快的写代码了啊 比如说我们这边的话 新号

23:51.800 --> 23:56.680
啊 margin0 然后排0对吧 保存一下

23:57.720 --> 24:00.680
呃 保存了之后 他这边跟我报了个错误 我看一下报什么错

24:01.640 --> 24:03.240
mediacrarybegin

24:05.320 --> 24:09.640
charingport 哇 这边 这边啥问题啊

24:10.920 --> 24:16.760
啊 ok 啊 刚才忘记打分号了啊 好 你看这边 当我一保存之后 他是不是自动就给我生成了

24:17.240 --> 24:21.880
什么 自动的就给我生成了index.css 以及还有压缩版的

24:22.920 --> 24:24.920
你注意我把这两个删除了 你再看一眼啊

24:26.040 --> 24:29.320
一动 然后把这个删除

24:30.440 --> 24:34.600
ok 好 然后这样我这边 你再看一眼 比如说我现在的话 我设置这个div

24:36.200 --> 24:41.000
div的话 我设置他什么呢 对我们现在的话 假设我们凉出来的是

24:41.800 --> 24:44.760
一半嘛 一半的话 这个设计稿我们假设是750

24:45.080 --> 24:50.760
750 一半是不是就375 对不对 375的话 那你这边就设置他的宽

24:51.800 --> 25:00.440
宽是多少呢 375 就直接设置375 啊 但是呢 你得用一下 用一下就是我们这边 他这边导入了这个函数

25:01.560 --> 25:06.840
ok 啊 也就说怎么写 就是这边 就是把咋把这个像素

25:07.400 --> 25:12.920
转成啊耶梦 你要把多少像素转成啊耶梦 我要把375

25:13.400 --> 25:19.960
不是了 我要把375啊 375像素转成啊耶梦

25:20.840 --> 25:27.640
你看他这个是不是也就做到了一个 你这个设计稿凉出来是多少 我是不是直接写多少就可以了

25:28.360 --> 25:30.040
对吧 好 大家高度也是

25:32.280 --> 25:37.000
高度啊高度的话 这边p差那这边375

25:37.640 --> 25:40.840
ok 好 大家这边给一个这个背景颜色

25:42.520 --> 25:49.480
ban光的counter是一个ray的 ok 你注意我现在我要保存了 啊 这边忘记打分后了

25:50.760 --> 25:56.920
啊 你注意我现在我要保存了 你注意啊 这边的话他就会自动生成这个index.css

26:01.400 --> 26:05.880
这边的话 嗯 我看一下 cannot see output

26:07.960 --> 26:14.380
这边他报了一个错 哦 他这边我看一下啊

26:16.300 --> 26:22.300
啊 这边的话我们还少写了一个东西啊 就我们现在的话我们设计高这个设计稿的尺寸是多少

26:22.940 --> 26:27.740
我们设计稿的尺寸是750啊 对不对啊 让家这边需要

26:29.100 --> 26:30.460
需要写上

26:31.900 --> 26:35.660
写上设计稿的尺寸

26:36.380 --> 26:39.340
啊 那我们这边呢就是downer design

26:41.180 --> 26:48.380
啊 他有个叫做downer design wise 这个变量啊 你写一个750就ok了啊 保存

26:52.430 --> 27:00.030
啊分号啊 又忘记打了 保存 你看这边是不是success 40这个generated css

27:00.590 --> 27:04.910
你看在这边是不是就自动的生成了css和这个min css

27:05.630 --> 27:11.710
对不对啊 当然这个自动生成的话是因为我这边有一个插件啊 这个插件的话 大家要把这个插件装一下啊

27:12.110 --> 27:18.910
你如果那个没装插件的话 那你那个还是他不会这个自动生成的啊 你还得去找一些其他的这个工具

27:19.150 --> 27:25.150
什么考拉呀之类的啊来进行转换 这边的话有一个这个工具 我看这个工具我在笔记里写的有

27:27.150 --> 27:32.190
啊 就这个 这个叫做ezsass啊 你在这边一收就有

27:32.750 --> 27:35.870
在这里ezsass

27:36.830 --> 27:41.950
ok 就这个怎么样 就这个啊 这个就是什么 这个的话他就是可以把你的这个

27:43.310 --> 27:48.590
sass文件你保存之后 他就自动编译成这个css文件

27:49.950 --> 27:53.630
啊 以前的话很麻烦的 以前的话是用的是一个叫做考拉的工具

27:54.030 --> 27:57.310
啊 不知道有的同学有的同学可能知道啊 有的同学可能不知道

27:57.950 --> 28:01.150
就一个叫做考拉啊 我都忘记这考拉怎么拼了

28:02.030 --> 28:02.590
考拉

28:03.710 --> 28:06.110
然后sass 你这样子收一下

28:07.310 --> 28:10.030
啊 就这个 就这个考拉

28:11.710 --> 28:15.470
啊 就这个 以前的话用的是这个工具啊 这个叫考拉的这个工具

28:16.670 --> 28:21.550
看到没有 他是一个单独的一个应用程序啊 你首先要下载 然后安装

28:22.590 --> 28:28.670
下载安装了之后 然后接下来把你的这个sass啊 拖到这个应用程序里面 然后接下来这边

28:29.070 --> 28:32.190
点击这个康派 那接下来他就把你的这个sass

28:32.990 --> 28:39.070
编译成这个css啊 就很麻烦 对吧 以前就很麻烦啊 现在的话这个vscode

28:39.310 --> 28:42.510
大家都知道vscode的话 他可以装很多很多的这个插件

28:43.150 --> 28:48.430
对不对 那其中的话 这边就有一个这个叫做ezsass的这个插件啊 这个就相当好用

28:49.070 --> 28:52.110
这个的话 你在你的项目里面有这个sass文件

28:52.510 --> 28:56.670
然后你如果装了这个插件的话 只要你写了这个sass 然后这样一保存

28:56.910 --> 29:03.950
他自动就干嘛呢 自动这边就给你编一层 css了啊 这边这里的话 刚才大家也看到了

29:04.510 --> 29:05.470
对不对 ok

29:06.830 --> 29:12.590
啊 这个下来可以装一下啊 好 然后接着我们这边的话 我们来看一下行不行啊 我们这边保存

29:13.470 --> 29:15.070
保存了之后 然后接下来我们这边

29:16.110 --> 29:16.430
打开

29:19.080 --> 29:21.800
行不行 其实你可以看到已经是不 ok 了

29:22.600 --> 29:26.360
看到没有啊 这个是iphone 5 大家我们这边 iphone 6

29:27.000 --> 29:29.800
对吧啊 大家 iphone

29:30.680 --> 29:35.640
plus 是不是已经ok了 对不对 占这个宽度的一半啊

29:36.120 --> 29:42.280
所以你这边的话 使用这个第三方库的话 他有一个好处就是什么呢 就是你连小数点都不用一

29:43.080 --> 29:46.760
对不对 你粘出来是多少 粘出来是三七五好 然后我就写三七五

29:47.480 --> 29:53.560
对不对 只不过呢 你要用什么 要用这个方法啊 PX2IM 把它包一下

29:54.280 --> 30:00.920
也就是说这边的话 我传入的是这个像素值 然后接下来他会自动给我转成什么呢 自动给我转成

30:01.320 --> 30:04.920
rm 我看在这看得到吗 这应该是看得到的

30:06.520 --> 30:12.600
这个展开 这个第二位啊 你看是不看得到 对不对 转出来的话 他这边是8rm

30:13.480 --> 30:19.480
看到没有啊 他最终的话 他会给你转成这个rm 这个这个来源于哪里 这个就来源于

30:19.960 --> 30:28.440
这个这边是PX2IM点SARS这里面 他有一个这个导出了一个这个函数啊 对不对 这个方法

30:30.120 --> 30:34.840
ok 这就是使用这个第三方库啊 也是非常方便

30:35.560 --> 30:38.600
啊 下来大家如果有兴趣的话 大家可以把那个猫眼

30:38.920 --> 30:45.000
就我们上几颗写的那个猫眼 你就再来进行一个改写啊 这个的话是不是刚才我已经改写了

30:45.560 --> 30:50.600
对不对 这个的话改动是最小的啊 你只需要就是加一个那个封了赛子

30:51.480 --> 30:56.120
就可以了 就设置一下那个根元数的封了赛子 就就这样的嘛 就

30:57.160 --> 31:03.480
啊 就这样 对吧 这个改动是最小的 你只需要加一下这个就可以了啊 然后加这个第三方库 第三方库的话

31:03.960 --> 31:07.720
其实还是稍微有点麻烦啊 他们出现了顺序啊 我说一下

31:08.920 --> 31:10.600
嗯 这边的话这个rm

31:11.400 --> 31:14.760
rm出来之后 然后后面的话就出现了这种第三方库

31:15.480 --> 31:19.560
ok 那现在最新的是什么呢 最新的就是使用这个vw和vh

31:20.760 --> 31:28.120
面包啊 现在的话你看那个像淘宝啊那些 他们都已经把他们的这个移动端的适配方案都已经改了

31:29.000 --> 31:32.120
改成这种vw vh了啊 我这边我写的有

31:33.000 --> 31:39.160
在这里啊 就是这个是一个方案嘛 这个这个叫heart css是一个方案嘛

31:39.480 --> 31:44.600
好 大家这个淘宝也出了一套类似的 叫做什么呢 叫做这个 uh flexible

31:45.320 --> 31:48.280
在这个get a hub地址在这里 我们打开看一下

31:50.520 --> 31:56.840
在这里啊 他和那个heart css就我们刚刚介绍的那个是差不多的啊 也是一套这个

31:57.160 --> 32:03.320
移动端布局的解决方案啊 但是现在的话他就已经没有在维护了 为什么啊 因为这边

32:03.800 --> 32:11.480
就是随着这个vw vh这种基于四口的这个单位啊 越来越多得到这个浏览器的这个支持

32:11.960 --> 32:18.600
所以这个官方他就已经不再维护了啊 说现在的话 最新的话 其实是比较推荐使用

32:19.000 --> 32:23.800
vw vh的 啊 但用了最广的话是什么呢 那肯定是一个rm

32:24.920 --> 32:30.120
rm是用了最广的 然后由这个rm衍生出来了一些第三方库

32:31.000 --> 32:32.840
面包啊 是这样子的关系

32:33.880 --> 32:36.200
哎呦 我这个半天也打不开啊

32:37.160 --> 32:41.960
啊 这个国内开这个get hub就是比较老火啊 半天打不开

32:42.520 --> 32:45.160
啊 回头的话 大家可以 我看我这边我翻啊

32:46.360 --> 32:52.250
就是我这边搭个梯子行不行 搭个梯子 稍等

32:54.250 --> 32:57.370
啊 搭了个梯子之后 这样这边再来开

32:58.330 --> 33:01.370
你看搭个梯子就ok了啊 你看这边

33:02.170 --> 33:07.290
这个是这个淘宝出的 但是你看他这边一来就说的有啊 由于这个v

33:07.930 --> 33:15.290
port单位得到这个众多浏览器的这个兼容啊 所以这种过度方案已经放弃使用了

33:15.770 --> 33:22.250
啊 已经放弃了 建议大家使用viewport viewport就是我们刚说的那个vw vh那个啊

33:23.050 --> 33:30.250
啊 使用viewport来替代此方 所以他就没有再维护了啊 就你要用的话也可以用

33:30.410 --> 33:33.050
但我以后我就不会再来维护这个库了

33:33.770 --> 33:34.010
ok

33:35.450 --> 33:42.010
好 那我们整个这个移动端的这个适配啊 就讲到这里啊 给他讲了这么多种这个方案啊

33:42.250 --> 33:46.490
所以这么多种方案的话 他不是说就是我专门只能用一种

33:47.050 --> 33:49.690
我有些时候我就是可以几种是吧 一起使用

33:50.250 --> 33:51.610
特别是比如说这个百分比

33:52.250 --> 33:56.010
百分比可以和后面的任何一种方案是配合在一起使用

33:56.970 --> 33:57.930
对不对啊

33:58.810 --> 34:04.890
啊 这就是关于这个移动端的这个适配啊 大家下去的话再把这个文档自己好好看一看

34:05.370 --> 34:08.490
好吧啊 这一刻就先到这里啊 再见

