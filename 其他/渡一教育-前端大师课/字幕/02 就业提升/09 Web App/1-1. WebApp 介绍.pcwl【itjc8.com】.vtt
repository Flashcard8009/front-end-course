WEBVTT

00:00.620 --> 00:07.020
从这几课开始就由谢老师来给大家介绍这个关于咱们前端

00:07.280 --> 00:09.840
部分然后这个移动端的这个开发

00:10.340 --> 00:13.160
当我们这个前端的话这个移动端的开发啊

00:13.420 --> 00:14.700
就手机端移动端的开发

00:14.960 --> 00:15.980
技术比较多

00:16.240 --> 00:18.020
大家知道的有什么

00:18.280 --> 00:19.820
比如手机小程序

00:20.340 --> 00:22.120
对不对还有什么RN

00:22.380 --> 00:23.140
flutter

00:23.400 --> 00:24.940
对不对还有一些其他

00:25.200 --> 00:27.500
反正一些杂其杂吧的技术比较多

00:27.900 --> 00:30.820
那这个东西的话我们就一个一个来讲

00:31.080 --> 00:32.360
我们先从简单的开始

00:32.620 --> 00:33.380
一个一个讲

00:33.640 --> 00:37.220
那我们这边的话低门课的话我这边就打算以什么呢

00:37.480 --> 00:39.020
以这个web app

00:39.540 --> 00:40.560
以这个开始来讲

00:41.580 --> 00:45.940
这web app这个也比较好理解web 微博的话是不是就是我们的这个网页

00:46.200 --> 00:47.460
对不对然后app

00:47.720 --> 00:49.520
做成这个app的这个形式

00:50.540 --> 00:53.360
好然后我这边的话我大致梳理了一下

00:53.620 --> 00:56.940
大概的话就是这么七个这个章节

00:57.700 --> 00:58.980
也就是说把这七个章节

00:59.240 --> 01:00.260
把它学完

01:00.520 --> 01:03.600
大家的话基本上就是在开发这个web app方面

01:04.120 --> 01:04.620
就

01:04.880 --> 01:05.900
没什么问题

01:06.920 --> 01:11.280
但有的同学的话可能就说就是这个关于这个微博app然后我也不太了解

01:11.540 --> 01:14.080
那没关系我这边会慢慢给你介绍吗

01:14.340 --> 01:14.860
对吧

01:15.120 --> 01:17.680
有同学说我又不知道你说的什么是微博app

01:17.940 --> 01:19.980
没关系我们一会会介绍你看我们这边

01:20.240 --> 01:21.260
第一张是不是就是关于

01:21.520 --> 01:22.800
微博app的介绍

01:23.560 --> 01:24.080
对不对

01:24.340 --> 01:26.380
然后接下来的话这边有这个

01:26.580 --> 01:30.560
第二第二张就是关于这个实配然后响应是事件

01:30.820 --> 01:33.500
然后接下来这边现代技术开发微博app

01:33.760 --> 01:35.540
那现代技术的话就指的是

01:35.800 --> 01:37.600
大家学的那些框架

01:37.860 --> 01:39.900
什么vuereact

01:40.160 --> 01:41.940
对不对是用这些技术来开发

01:42.200 --> 01:45.020
好然后接下来这边的话有一个这个调用原生接口

01:45.280 --> 01:46.300
最后一个是

01:46.560 --> 01:48.600
大家在开发微博app的时候

01:48.860 --> 01:50.900
一些这个常见的一些问题

01:51.160 --> 01:53.720
总共来讲的话就是这么几个章节

01:53.980 --> 01:54.480
OK

01:54.860 --> 01:57.760
好然后今天的话是我们的这个第一堂课

01:58.020 --> 02:00.060
第一堂课的话那我们这边的话就是首先

02:00.320 --> 02:01.760
我们步子还是慢一点

02:02.020 --> 02:04.160
对吧我们首先的话来给大家介绍一下

02:04.420 --> 02:05.300
什么是

02:05.560 --> 02:06.460
微博app

02:06.720 --> 02:07.240
OK

02:07.500 --> 02:08.260
然后这里面

02:08.520 --> 02:11.580
有一个文档就是第一个微博app介绍

02:11.840 --> 02:12.860
我们这边来看一下

02:13.640 --> 02:14.400
OK

02:14.660 --> 02:16.400
好这边的话就是

02:16.660 --> 02:19.260
谢老师已经把教案写好了我们一点来看

02:19.520 --> 02:22.340
你放轻松这节课的话不会涉及到任何的变码

02:22.800 --> 02:26.200
这节课和下节课都不会涉及到任何的变码

02:26.460 --> 02:28.600
只是就是让大家就是理解

02:28.860 --> 02:29.640
什么是

02:29.900 --> 02:30.740
微博app

02:31.260 --> 02:31.760
OK

02:32.020 --> 02:33.560
好来我们一个一个来啊

02:33.820 --> 02:35.860
好首先第一个什么是微博app

02:36.120 --> 02:38.940
就是在早期这个功能机时代

02:39.200 --> 02:43.280
那个时候的话其实压根就没有这个手机应用的这个概念

02:44.040 --> 02:46.360
手机应用大家现在的话用了这个

02:46.620 --> 02:48.140
无论你是用这个苹果

02:48.400 --> 02:49.940
还是用的是这个安卓

02:50.200 --> 02:51.980
是不里面就是一个一个的应用啊

02:53.060 --> 02:55.100
对不对啊无论就是你这个

02:55.360 --> 03:01.000
无论你是那个哪个系统啊你都可以往你的手机里面安装各种各样的应用

03:01.260 --> 03:03.300
当然可能大家平时装的比较多的

03:03.560 --> 03:06.380
就是什么游戏应用对吧你看他游戏也是一个什么

03:06.640 --> 03:07.400
也是个应用

03:07.660 --> 03:14.560
对不对啊包括一些就是平时生活中比较常见的比如什么美团啊淘宝啊京东啊

03:15.080 --> 03:17.520
是不是在那个手机商店什么都有相应的应用

03:17.780 --> 03:19.680
你把它下载下来是不是就可以用了

03:19.940 --> 03:20.440
对不对

03:20.640 --> 03:22.800
但是在早期的话是没有这个概念的

03:23.220 --> 03:26.020
你注意早期的话你的手机就是这个样子的

03:26.280 --> 03:28.580
我不知道大家经历过这个年代没有

03:28.840 --> 03:30.380
应该经历过啊

03:30.640 --> 03:33.700
谢老师应该不是连接那么大是吧

03:33.960 --> 03:35.760
你们应该是经历过的啊

03:36.260 --> 03:38.060
早期的话手机是不是就长这个样子

03:38.560 --> 03:42.660
对不对啊你回一下在早期的时候啊九几年包括零几年的时候

03:42.920 --> 03:44.980
那个时候是不是你买个手机基本上

03:45.240 --> 03:47.020
那个手机里面有些什么功能

03:47.520 --> 03:48.800
是不是你就用什么功能

03:49.200 --> 03:52.720
对不对从来不会说我还要去拓展这个手机的功能啊

03:52.960 --> 03:57.160
那我们这边一般去买手机的时候我们就会提前看哇这个手这个手机

03:57.420 --> 03:59.000
啊他的这个功能好多呀

03:59.600 --> 04:04.720
对不对他有什么什么样的功能啊基本上就是你买着啊买着它是什么样子

04:04.960 --> 04:07.960
有些什么功能那你用这个手机就用这些功能

04:08.220 --> 04:08.720
OK

04:08.980 --> 04:13.680
这是在最早的时候啊你回忆一下啊最早确实是有这么一个年代

04:13.940 --> 04:14.440
对吧

04:15.400 --> 04:22.600
好后面后面慢慢的话就是新款的这个落鸡压手机啊说起来的话早期的话是不是这个落鸡压一桶江山

04:23.280 --> 04:25.680
对不对啊这些的话这些是不是都是杂牌

04:26.320 --> 04:33.280
对不对但是这个华为啊华为现在不是了对吧早期的话啊这边的话什么什么这个AGM听都没听过是吧

04:33.720 --> 04:35.240
还有这个这个我也不知道什么牌子的

04:35.840 --> 04:39.200
对不对啊早期的话都是这个落鸡压啊一桶江山

04:40.040 --> 04:44.360
好然后面的话就是慢慢慢慢的话这个新款的这个落鸡压手机

04:44.880 --> 04:49.440
他慢慢就提出了什么呢他就提出了扩展手机用的概念

04:50.280 --> 04:57.560
注意哦他就提出了扩展他怎么扩展的就是除了就是出厂的时候你手机里面是不是会有些类制的功能

04:58.080 --> 04:58.360
对不对

04:58.960 --> 05:04.680
除了这些类制的功能以外我们的这个用户还可以通过这个网络

05:05.600 --> 05:12.040
去下载这个其他的这个手机用啊比如说你看这边这边我去下一些比如什么游戏啊

05:13.000 --> 05:16.000
对吧还有些这个其他的啊比如qq啊

05:16.560 --> 05:20.840
有一个就是有一段时间我记得是07年还是08年的时候

05:21.720 --> 05:26.000
啊差不多就那个年代的时候啊那个时候的话你那个手机你买的是没有qq的

05:26.560 --> 05:32.400
然后你的那个落鸡压手机里面他会有一个应用市场那个时候其实就有应用市场了啊

05:32.400 --> 05:36.320
然后既然你从里面的话你就可以下一些这个常见的应用啊比如这个qq

05:37.080 --> 05:41.640
看到没有说那个时候的话慢慢就应用的这个概念就已经就出来了

05:42.200 --> 05:45.120
啊只不过那个时候的应用不像现在大爆发

05:45.840 --> 05:51.680
你现在的话你打开你手机的这个应用市场啊里面是不是林郎满目的这个应用

05:52.240 --> 05:57.720
对不对各种各样的应用啊那个时候的话那个就是你进那个就是应用应用商店

05:58.600 --> 06:02.800
你进去啊00省省的就几款啊就几款零用啊你可以就是

06:03.600 --> 06:05.960
自己来下载了然后扩展你手机的功能

06:06.480 --> 06:06.680
OK

06:07.560 --> 06:10.880
好然后接下来到了这个智能手机时代

06:11.600 --> 06:17.840
到了智能手机时代那就是什么呢就是我们的这个iOS和这个android对吧但有一段时间还有那个windows phone

06:18.360 --> 06:24.280
啊但现在windows phone已经死了吗对吧就就就这个iOS和android就这两大阵营

06:24.920 --> 06:30.800
然后我们的手机慢慢就演变成什么呢就完全是应用的形式

06:32.160 --> 06:36.960
看不看完全以应用为主啊包括大家之前所熟悉的比如什么

06:37.400 --> 06:42.720
电话呀短信啊电话布啊这些这些东西团你看在手机里面也是什么

06:43.120 --> 06:47.120
是不是一个一个的应用对不对比如这个短信啊这个是打电话

06:48.000 --> 06:53.400
对不对啊完全就变成了一个应用包括这个啊camera这个相机

06:54.480 --> 06:59.360
看到没有啊完全就是以这种应用的形式啊以应用为主导

06:59.960 --> 07:00.160
OK

07:01.600 --> 07:06.160
好那接下来刚开始的时候这个智能手机它的这个应用的话其实并不多的

07:06.880 --> 07:07.320
并不多

07:07.880 --> 07:13.200
但是呢智能手机的话它非常好的就是什么呢它有一个应用市场的这个平台

07:13.800 --> 07:19.280
它允许什么呢允许第三方开发者来开发这个就是手机应用

07:19.480 --> 07:27.120
然后发布到它的这个市场上面啊这样子的话它就其实就带来了一个非常好的这个就是良性的一个循环

07:27.680 --> 07:28.120
为什么呢

07:28.440 --> 07:33.680
因为比如说我是我是作为一个第三方的这个开发者对吧我给你的手机开发了应用

07:34.080 --> 07:41.000
开发了应用之后然后接下随着第三方开发者的加入那你手机的这个手机商店里面的应用是不会越来越多

07:42.200 --> 07:42.480
对不对

07:43.000 --> 07:48.000
而手机商店里面的应用越来越多那这个用户是不是就愿意用你的这个系统

07:49.040 --> 07:54.000
对不对愿意用你的系统啊愿意用你的系统然后接下来用户然后慢慢增多

07:54.440 --> 08:00.160
慢慢增多然后接下来就会导致什么呢导致开发者就愿意给你的这个系统

08:00.680 --> 08:03.560
是不是开发应用对不对是不是就是一个很良好的这个循环

08:04.080 --> 08:09.560
对不对开发者他能赚得到钱啊所以说他愿意给你的这个系统开发应用

08:10.080 --> 08:16.240
随着你的这个系统啊然后接下这个应用越来越多那用户的话愿意来用你的这个系统

08:17.240 --> 08:21.840
对不对形成了一个良好的循环啊说当时那个windows 4怎么死的

08:22.100 --> 08:23.640
他就是因为应用不多

08:24.160 --> 08:31.080
windows 4其实那个手机其实就是那个手机系统其实不错的啊虽然我没用过啊但是我听过就是

08:31.540 --> 08:34.860
身边用过的人说过啊那个手机当时很流畅的

08:35.380 --> 08:41.020
啊相比当时的那个android啊当时android刚出来的时候其实是很卡的用一段时间就很卡啊

08:41.280 --> 08:47.420
啊他相比这个android他其实是很流畅的据说那个流畅度可以就是和那个苹果的那个iOS

08:48.180 --> 08:51.780
相比没但是他死就死在哪里了他的应用很少

08:52.540 --> 08:57.140
很少很少啊所以最后的话就是导致什么导致是不是用你的人就会越来越少

08:57.600 --> 09:02.520
那用你的人越来越少了那那个开发者是不是也就不愿意为你这个平台就开发应用了

09:02.780 --> 09:04.060
这就是一个恶性的循环

09:04.820 --> 09:05.320
对不对

09:05.840 --> 09:06.620
啊 ok

09:07.900 --> 09:09.420
好这简单说了一下啊

09:09.680 --> 09:13.520
好然后接下来的话早期我们要开发这个手机应用

09:14.040 --> 09:19.920
那早期开发这个手机应用的话我们说过啊我们手机系统的话一个这个iOS一个这个android

09:20.180 --> 09:21.460
对不对包括现在其实也是

09:22.180 --> 09:27.300
对不对当然我不知道现在红龙发展发展的怎么样了啊这个没有具体区了解过

09:27.560 --> 09:32.420
啊但现在的话我看身边其实还是就iOS和android的人用的多一些

09:32.680 --> 09:34.460
啊但可能会有个别就是

09:34.720 --> 09:38.300
呃用华为的同学啊用的是红龙系统

09:38.560 --> 09:39.080
是不是啊

09:40.360 --> 09:43.160
啊那早期的话开发这个手机应用的话

09:43.420 --> 09:46.120
你需要根据不同的手机系统

09:46.380 --> 09:48.280
使用不同的技术

09:48.480 --> 09:49.080
来开发

09:49.520 --> 09:53.600
ok我这个我给你画重点啊就是需要根据不同的手机系统

09:53.860 --> 09:55.660
然后使用不同的技术

09:55.920 --> 09:56.420
来开发

09:56.680 --> 09:57.700
我给你加出

09:58.220 --> 09:58.720
ok

09:59.760 --> 10:00.520
啊比如说

10:00.780 --> 10:03.080
比如说你要开发一个iOS的应用

10:03.340 --> 10:07.180
啊那早期的话他用的是什么呢用的是这个objective c

10:07.680 --> 10:09.740
啊就是objc就这个这个语言

10:10.000 --> 10:14.340
然后来的话苹果的话就推出了自家的这个编程语言叫做这个swift

10:15.120 --> 10:17.160
啊那后面的话这个swift

10:17.280 --> 10:20.740
就成为了这个开发iOS应用的这个标准语言

10:21.000 --> 10:23.820
啊当这个swift的话他不仅仅是开发iOS应用

10:24.080 --> 10:25.100
他也可以开发那个

10:25.360 --> 10:26.380
MacOS的应用

10:27.140 --> 10:29.700
对不对啊这个语言的话是苹果推出的

10:29.960 --> 10:31.240
啊我记得是在

10:31.760 --> 10:34.060
15年还是一几年的时候啊

10:34.320 --> 10:38.140
这个要去查一下具体要查一下反正这个语言挺新的

10:38.400 --> 10:39.180
挺新的

10:39.440 --> 10:40.200
就是

10:40.720 --> 10:42.000
呃10年以后嘛

10:42.260 --> 10:43.520
10年以后推出的

10:44.500 --> 10:47.820
好那如果你是要开发这个安卓

10:48.600 --> 10:50.120
如果是这个安卓应用

10:50.380 --> 10:53.200
那早期是使用什么呢早期是使用java

10:53.720 --> 10:55.500
这个的话其实大家是比较熟悉的

10:55.760 --> 10:58.320
对吧不管你会不会但你至少应该是听说过的

10:59.080 --> 11:01.140
对不对啊早期的话是用这个java

11:01.400 --> 11:03.700
然后面的话推出了一个什么呢

11:03.960 --> 11:05.500
推出了一个这个叫做cutlin

11:06.260 --> 11:10.620
啊但这个的话不是那个谷歌推出的这个是一个叫做getbrain

11:11.340 --> 11:13.900
啊不知道大家听说过这家公司面getbrain

11:14.160 --> 11:15.940
他出了很多这个编辑器

11:16.460 --> 11:19.540
啊出了很多这种编辑器啊比如说

11:20.040 --> 11:21.140
呃比如java的

11:21.400 --> 11:22.780
java的好像那个idl

11:23.040 --> 11:27.200
idl的话就这个啊比如说以前的话我比如说我开发php的时候

11:27.460 --> 11:29.520
有一个编辑器叫做phpstorm

11:30.280 --> 11:36.180
啊也是他家的他基本上就是对市面上主流的这个语言他都有就是个编辑器

11:36.680 --> 11:40.280
啊这个getbrain最早的话就专门开发这个ide的

11:40.720 --> 11:43.400
啊就是那种重度的这种编辑器的啊

11:43.900 --> 11:47.480
啊这个语言的话就被称之为这个android世界的这个swift

11:48.260 --> 11:48.760
ok

11:49.020 --> 11:55.680
但是无论是就是你使用这个啊还是使用这个对不对那和我们前端有没有关系啊

11:56.700 --> 11:57.720
和我们前端有没有关系啊

11:58.480 --> 12:00.800
和我们前端是不是一毛钱关系都没有

12:01.060 --> 12:07.200
对不对使用这些技术开发的手机用称之为什么呢称之为原生应用

12:07.720 --> 12:09.240
也就是说latv app

12:09.760 --> 12:10.520
原生应用

12:10.720 --> 12:18.360
啊这种就是你使用使用这些语言哈对应的然后开发对应的这个应用啊开发的是原生应用这种应用的话

12:18.600 --> 12:20.760
然后这个他的性能和体验

12:21.080 --> 12:24.600
他都是最好的啊然后唯一有一个缺点

12:24.860 --> 12:27.480
什么缺点呢就是成本比较高

12:28.760 --> 12:29.920
为什么成本比较高

12:30.280 --> 12:35.400
因为现在的话这个市场上啊这个无论是ios也好还是android也好用的人是吧

12:35.660 --> 12:36.320
啊基本上

12:36.680 --> 12:37.720
就打个55开嘛

12:38.260 --> 12:44.740
对不对那我比如说我作为一家这个公司啊我现在要推出一个应用我不可能就是只推出

12:45.000 --> 12:45.700
ios

12:45.960 --> 12:48.420
那你这不是歧视人家使用安卓的人吗

12:48.940 --> 12:55.340
对不对啊然后这样我有些应用的话好像是就只有安卓有是吧有部分啊有部分

12:55.600 --> 12:59.420
但是一般比较那种大众的应用哈那一定是双平台的

13:00.460 --> 13:05.580
对不对你比如说像平常大家用的比如什么淘宝啊青东啊这种应用啊这种级别的应用

13:05.880 --> 13:09.800
那他不可能是只在iOS上推出或者只在安卓上推出

13:10.560 --> 13:15.520
对不对你说个别的那种小中的这种软件他可能有啊就只在iOS上面

13:15.780 --> 13:19.880
你安卓用不了那或者有些软件只在安卓上面你iOS是用不了

13:20.120 --> 13:21.400
但是像这种比较大众的

13:21.920 --> 13:27.040
对不对什么淘宝呀京东啊咸鱼呀这些人人都要用的这种我不可能就只

13:27.800 --> 13:29.200
只在一个平台推出

13:29.960 --> 13:32.920
对不对啊那使用这个原生这个

13:33.640 --> 13:36.200
原生应用开发他的缺点就是成本比较高

13:36.700 --> 13:40.900
因为我们刚才讲了你开发苹果应用的话你可能是使用的啊这两种

13:41.420 --> 13:46.060
语言对吧你使开发这个安卓使用的是这就是这两种

13:46.820 --> 13:48.900
啊反正选一种对吧这种语言

13:49.460 --> 13:52.580
那就导致什么呢导致你一个公司

13:53.100 --> 13:55.140
如果要推出一个这个产品

13:55.900 --> 13:58.300
那你需要干嘛呢你需要找两拨人

13:59.140 --> 14:00.780
然后呢开发两份

14:01.760 --> 14:07.000
看了没有这就是早期啊开发这个手机应用他的一个这个缺陷

14:07.400 --> 14:08.920
就是这个成本太高了

14:09.440 --> 14:10.880
OK啊这是第一个

14:11.160 --> 14:16.040
好那接下来的话不管他成本高不高其实最早的话开发这个手机应用啊

14:16.560 --> 14:19.160
他和我们前段是一毛钱关系都没有了

14:19.960 --> 14:22.000
对不对为什么因为你用的是这些啊

14:22.440 --> 14:27.160
对不对你用的是这些什么swift然后接下这些语言我们前段会不会这些东西啊

14:27.800 --> 14:29.360
我们前段是不会这些东西的

14:30.260 --> 14:31.420
对不对我们前段会的是什么

14:31.920 --> 14:32.940
我们前段会的是吧

14:33.200 --> 14:34.740
html css

14:35.260 --> 14:35.760
js

14:36.520 --> 14:39.340
对不对我们前段的话会的是这些技术

14:40.380 --> 14:42.420
那究竟是什么原因

14:42.680 --> 14:45.220
让我们这个前端一个前端

14:45.480 --> 14:46.260
开发者

14:46.520 --> 14:50.100
能够涉足到开发这个手机应用上面呢

14:50.620 --> 14:52.660
究竟是什么原因呢没错

14:52.920 --> 14:53.420
就是

14:53.680 --> 14:54.700
浏览器

14:55.460 --> 14:57.020
OK就是浏览器

14:57.480 --> 15:01.840
你想想我们刚说了手机上现在的智能手机上面是不是会有各种各样的应用

15:02.860 --> 15:05.680
对不对那你既然有各种各样的应用那你肯定少不了什么

15:06.200 --> 15:07.200
少不了浏览器

15:08.240 --> 15:08.740
对不对

15:09.000 --> 15:14.880
那你这个浏览器的话其实不是说到了那个安卓啊不是说到了那个智能手机时代

15:15.140 --> 15:15.660
才出来的

15:15.920 --> 15:18.720
就是早期在这个诺基压时代

15:19.240 --> 15:19.760
就有了

15:20.020 --> 15:21.560
你看我这边有个这个截图

15:22.320 --> 15:25.120
这个诺基压的这个型号的这个名字我都说不出来了啊

15:25.340 --> 15:30.700
这型号我还挺熟悉的因为以前我有个同学就买的这个啊还是我陪他一起去买的

15:31.220 --> 15:35.820
啊这个这个型号我很熟悉但是我一下子忘了啊但是你可以看到这边

15:36.080 --> 15:36.860
这边的话你看

15:37.620 --> 15:38.640
是不是就是有浏览器

15:38.900 --> 15:40.180
对你看这边当时

15:40.440 --> 15:46.060
装的是这个U.C.浏览器啊但你这边也可以通过这个啊这个是应该是他这个机器自带的

15:47.100 --> 15:48.380
啊自带的这个浏览器

15:48.880 --> 15:51.180
说在其实在这个诺基压时代

15:51.700 --> 15:53.220
其实手机上就已经

15:53.480 --> 15:54.780
提供这个浏览器了

15:55.180 --> 15:58.140
只不过在那个时代的话你使用这个浏览器

15:58.400 --> 16:01.220
以来浏览这个网页的话其实体验并不好

16:01.980 --> 16:03.020
体验并不好

16:03.280 --> 16:06.540
为什么呢其实有几个方面啊有好几个方面

16:06.800 --> 16:10.940
首先第一个就是早期这个网页是采用多页形式的

16:11.200 --> 16:13.140
啊这个的话大家学过那个

16:13.400 --> 16:16.320
那个我们那个网页的那个发展历史大家应该是知道的

16:16.840 --> 16:19.640
对不对从早期的这个多页到现在流行什么

16:19.900 --> 16:20.680
现在说

16:20.940 --> 16:22.460
流行的是单页

16:22.720 --> 16:25.020
对不对早期的话我们称之为是个网站

16:25.360 --> 16:28.200
啊比如说早期我们说的是我想做一个网站

16:28.460 --> 16:29.980
一个网站里面是不是就有多个

16:30.240 --> 16:31.260
多张网页组成

16:32.020 --> 16:35.620
对不对但是我们现在更多的话因为我们的现在做的是单页了

16:35.880 --> 16:38.180
单页的话我们称之为什么是不是一个应用

16:39.200 --> 16:41.000
对不对为什么因为你只有一个页面

16:41.500 --> 16:45.600
你只有一个网页然后接下来的话其他的话都是通过这个模块夹仔过来的

16:45.860 --> 16:49.700
感觉用上去的话是不是就像一个本地应用一样

16:50.200 --> 16:54.820
对不对说现在的话称之为单页应用啊从来没有人说什么单页网站

16:55.320 --> 16:59.160
对不对啊那以前的话多页时代的话就称之为多页网站对不对

16:59.420 --> 17:00.960
不会说是一个多页应用

17:01.220 --> 17:01.720
啊

17:01.980 --> 17:05.060
说早期的时候采用的是这个多页的形式

17:05.560 --> 17:06.540
他就会导致什么呢

17:06.800 --> 17:09.400
导致你没点击一个地方啊

17:09.660 --> 17:12.480
你这个页面整体要刷新

17:13.240 --> 17:18.120
哎整体要刷新要在那转半天啊但是那个年代的话网速又慢

17:18.880 --> 17:20.920
啊那个时候网速非常非常的慢啊

17:21.180 --> 17:23.740
所以基本就导致什么呢导致你你看我这边写的有

17:23.940 --> 17:30.860
就你点了一个链接之后啊你可以把手机放下啊去泡个茶呀什么的啊之后这个网页就打开了啊

17:31.120 --> 17:33.880
想想现在这个现在的小孩挺幸福的哈

17:34.140 --> 17:35.460
特别像我小孩

17:35.720 --> 17:39.820
慢慢慢慢长大了啊以后他用手机的时候他根本就不会有这些概念

17:40.340 --> 17:43.560
啊不会有这个手机网页会卡怎么会卡呢

17:43.820 --> 17:49.300
他都不会有这些概念对不对但像我们我们就经历过这个时代啊我们就知道

17:49.800 --> 17:52.100
对不对我们就知道他是怎么来的啊

17:52.820 --> 17:55.020
说那个时候你看你看我这人有张截图

17:55.780 --> 17:58.460
看到没有怀不怀念啊怀不怀念

17:58.980 --> 18:05.980
这个差不多就应该我记得应该就是08年左右啊07年08年左右用手机上网啊就是这个样子的

18:06.860 --> 18:08.700
看到没有就这个样子了啊

18:09.460 --> 18:15.860
啊所以首先的话这这里话首先就是这个早期的话有这个浏览器啊什么当时的这个体验啊不好

18:16.340 --> 18:22.820
然后后面的话然后有一些这个性能很好的这个手机啊后面特别是洛基亚啊洛基亚当时在

18:23.740 --> 18:30.180
在那个年代啊因为他算是中流抵住吗对吧那个年代他这个更新的非常非常频繁啊每过

18:31.180 --> 18:34.420
可能一年啊推出一个新机型啊或者好几个新机型

18:34.860 --> 18:35.060
对吧

18:35.820 --> 18:40.180
啊所以后来的话就洛基亚啊推出了一些性能很好的手机

18:40.780 --> 18:44.140
啊那这些手机他可以干嘛呢他可以直接通过这个手机浏览器

18:44.540 --> 18:46.140
打开pc端的网页

18:46.900 --> 18:50.220
啊当时的话就是刚刚推出来的时候这是个穴头

18:50.740 --> 18:59.020
你知道吧我们可以用手机打开这个电脑的这个网页啊当时就是一听到感觉让人是不是很振奋人心对不对

18:59.260 --> 19:03.260
但实际上是怎么呢实际上这个体验也是非常糟糕的

19:04.580 --> 19:10.380
啊为什么你想想当时那个手机屏幕才多大点啊你看当时这个手机屏幕是不是才这么大

19:11.100 --> 19:14.420
对不对你如果直接把这个pc端的这个网页

19:15.180 --> 19:20.180
搬到手机上就会导致什么导致你的文字显得非常非常小

19:20.780 --> 19:25.060
ok啊你哪怕就现在啊现在我们的手机屏幕是不是已经很大了

19:25.420 --> 19:29.780
相比以前这种手机这种老款的手机我们现在手机屏幕是不是已经非常大了

19:30.300 --> 19:33.100
你现在用你的手机如果直接去打开一个这个

19:33.620 --> 19:36.180
呃就pc端的这个网页看着是不是也是很别扭的

19:36.900 --> 19:41.140
对不对你需要就是用两根纸头啊你很习惯的就用两根纸头是不是把它

19:41.580 --> 19:41.900
扩大

19:42.860 --> 19:46.020
对不对啊当时的话你想想当时首先屏幕有小

19:46.740 --> 19:51.420
当时的屏幕不可能比现在大嘛对不对而且当时还没有什么没有那个放大的功能

19:52.380 --> 19:55.780
对不对啊所以当时的那个体验是相当的糟糕

19:56.580 --> 19:56.780
OK

19:57.860 --> 20:02.580
那我们这个使用这个浏览器来浏览这个网页它是从什么时候开始

20:02.980 --> 20:06.180
哎那个体验慢慢慢慢那个变好的呢

20:06.740 --> 20:11.180
哎其实就是智能时代啊就是那个智能手机时代啊这里写错了

20:12.620 --> 20:20.460
就是智能手机时代的时候啊我记得在中国的话全面的这个智能手机时代差不多就是应该是

20:21.100 --> 20:26.420
12年13年左右啊应该反正就至少从13年因为13年的话那个

20:27.300 --> 20:29.020
iphone都推出iphone5了

20:29.220 --> 20:35.900
对不对都已经到了这个iphone5了啊那个时候就是慢慢慢慢这个智能手机时代来临了

20:36.340 --> 20:37.740
那从那个时代开始

20:38.540 --> 20:45.580
啊就从那一年开始我们手机浏览器浏览网页的这个体验它才逐步的这个提升啊

20:46.300 --> 20:50.020
然后那个时代的话就是就我们之前说的好几个痛点啊

20:50.540 --> 20:56.740
就是随着这个智能手机时代的这个来临啊一个一个就都被解决了我们之前说了哪些痛点

20:57.460 --> 21:03.940
首先第一个就是这个网速慢对吧 玩速慢的话 然后接下来到了智能手机时代 然后出现了什么

21:04.380 --> 21:05.260
出现了世纪

21:06.900 --> 21:14.460
对不对 出现了世纪世纪的话那个速度还是挺快的 对不对啊 所谓首先这个不存在了 好 第二个就是什么呢 第二个就是

21:15.660 --> 21:20.820
这个多页的形式 没点击一个地方 然后导致页面整体刷新

21:21.660 --> 21:25.580
那后面我们就出现了什么 是出现了这个spa的这个开发模式

21:26.380 --> 21:28.380
单页应用的开发模式

21:29.300 --> 21:33.020
对不对 这个痛点也解决了 然后还有就是什么呢 还有就是你在这个手机上

21:33.660 --> 21:40.100
啊 手机上然后你这个字看不清楚啊 然后当时出现了什么 是出现了HTML5和CSS3

21:41.100 --> 21:49.780
对不对 特别是这个CSS3媒体查询啊 我可以根据你这个使用的这个设备啊 然后接下来来改变我的这个样式

21:50.260 --> 21:56.500
啊 说说你现在的话 你看到的这个就是你使用手机哈 打开一个网页 你看到的效果就是这个样子的

21:57.940 --> 22:01.860
看到没有 给人的感觉就是这个样子的 你现在你可以用你的这个

22:02.740 --> 22:09.780
手机我这个打开的是猫眼 是吧 你可以自己试一试啊 你用手机打开你的浏览器啊 然后将你打开猫眼

22:10.140 --> 22:16.860
你就会发现打开的话是这个样子的 那这个样子的话给人的感觉 他就像是一个什么

22:17.740 --> 22:21.860
就像是在使用一个手机应用 而非一个网站呀

22:22.700 --> 22:27.940
对不对 因为我们说了就是 呃 这个网页他是采用什么 SPA

22:28.820 --> 22:34.820
对不对 SPA这个最大的特点就是会给人 感觉是在使用一个应用

22:35.380 --> 22:37.660
而非是一个网站 因为他只有一个页面

22:38.460 --> 22:46.100
对不对 OK 所以说才出现了什么 所以说才出现了web app这个说法

22:47.060 --> 22:50.260
不明白没有 说这个web app他怎么来的

22:51.340 --> 22:56.780
我一步一步啊 从这个历史开始给你讲 那你现在就知道这个web app他怎么来的

22:57.180 --> 23:01.580
他其实就是什么呀 是不是 就是我们移动端的网站

23:03.020 --> 23:05.340
对不对 就是其实就说白了就是网站

23:06.700 --> 23:13.380
啊 就是你的这个网页 对吧 就是一个网页 就是你使用这个web技术来进行开发的

23:13.980 --> 23:16.540
或者叫做什么呢 或者叫做h5应用

23:17.180 --> 23:22.300
为什么叫做h5应用呢 啊 因为他使用到什么呢 使用到了html5 css3

23:22.780 --> 23:28.980
啊 你注意哈 你现在的话 很多就是同学出去啊 出去找工作的时候啊 人家就会问你会不会开发这个h5

23:29.580 --> 23:34.900
就把他问蒙走了啊 说我好像没听过什么开发h5啊 老师也没说过呀

23:35.260 --> 23:42.100
h5就是你所学习的html5 css3 es6啊 他指的是这一系列东西

23:43.060 --> 23:48.260
混杂在一起 称之为是个h5 主要就是什么呢 主要就是html5 css3

23:49.140 --> 23:53.220
ok啊 所以说这个的话 又被称之为是h5应用

23:55.340 --> 23:58.620
啊 这是关于这个web app 他怎么来的

23:59.820 --> 24:01.340
简单的给大家做了一个介绍

24:02.300 --> 24:09.060
好 然后接下来的话 我们来看一下 关于这个web app他的一个优缺点啊 我们这个使用这个

24:10.020 --> 24:18.500
使用web技术来开发 他有什么优缺点 那首先我们来看优点啊 优点的话 首先他肯定就是开发成本地

24:19.380 --> 24:24.260
啊 这个是肯定的 对不对 你以前的话 你使用这种原生的这种语言

24:24.980 --> 24:27.380
那你这个代码的话 你是不是得找两拨人

24:28.180 --> 24:35.300
对不对 那你现在的话 是不是只需要找一个这个前端就可以了 对不对 只要你会写前端页面 那你就会开发这个web app

24:35.780 --> 24:38.420
对不对 而第二个呢 是跨平台的

24:39.220 --> 24:45.420
你以前的话呢 你这个 你这边啊 比如我用这个swift写的 那是不是就是只是开发了苹果应用

24:45.940 --> 24:49.540
对不对 我不可能说 我把这个又编一层这个在安卓上面跑的

24:50.140 --> 24:52.980
啊 这个不可能 对不对啊 说的才需要两拨人吗

24:53.460 --> 24:57.540
啊 但是你这个就不不存在这个问题 就你的web app就不存在这个问题

24:57.940 --> 25:00.260
为什么 你web app是不是就是这个

25:01.260 --> 25:05.500
网页 对不对 网页的话 他是在哪里面运行 是不是在浏览器里面

25:06.460 --> 25:13.860
对不对 他是在浏览器里面 啊 说他可以跨平台 啊 然后调是方便开发速度快 那肯定开发速度快吗

25:14.340 --> 25:18.340
对不对 你两个平台我只需要就是一个前端 这就搞定了

25:18.980 --> 25:20.260
对吧 那速度肯定快吗

25:20.900 --> 25:24.940
啊 所以说web app 一般只需要一个前端人员来开发这个代码

25:25.340 --> 25:31.780
然后可以应用于什么呢 各大主流浏览器 啊 没有什么呢 没有新的学习成本

25:32.700 --> 25:37.340
啊 但这个没有新的学习成本 这个只是相对的 啊 这个只是相对的

25:37.780 --> 25:45.340
啊 他如果没有真的没有这个学习成本 那我们就不用开这个课了 是吧 我还专门开个课来讲他干嘛呢 是吧

25:46.140 --> 25:53.900
啊 所以这个只是相对的 他相比你学这个 他 相比你去学习这个什么swift 啊 学习这些东西 那他确实这个学习成本

25:54.260 --> 25:54.940
是不是要低得多

25:55.860 --> 25:59.460
对不对 那肯定学习成本要低得多 啊 因为用的都是你会的技术啊

25:59.660 --> 26:01.060
OK

26:01.940 --> 26:10.740
啊 然后维护成本低 啊 然后如果代码合理只需要一名前端就可以维护多个web app 啊 然后更新速度很快

26:11.260 --> 26:14.620
为什么呢 因为他是使用的是那种网站bs的那种价格

26:15.500 --> 26:18.100
对不对 那我回头我要更新的话 我只需要把我的服务器

26:18.620 --> 26:22.940
服务器上面的这个文件一更新 那用户下次再打开的时候是不是就更新了

26:23.700 --> 26:27.300
对不对 他采用的是那种bs价格啊 所以说更新速度很快

26:28.020 --> 26:33.460
那你以前的话 你那种应用的话 那我更新了的话 我还需要干嘛 这还需要重新上架

26:34.860 --> 26:40.820
对不对 重新上架 上架到那个应用超市 然后用户重新来进行下载

26:41.420 --> 26:45.180
所以以前的话那种原生应用 他的这个更新成本其实挺高的

26:45.740 --> 26:52.620
我每次我比如说我做一个版本的修改 我都要去提示这个用户 也要更新版本 那用户那边要重新进行一个更新

26:53.180 --> 26:58.180
好 然后下一个就无需安装app不用占用手机内存

26:58.980 --> 27:02.700
这个只要你理解微博app他的本质 那这个是不是肯定也是

27:03.540 --> 27:09.540
对不对 为什么 因为他是通过浏览器 是不是来进行反问的 对不对 OK 这是他的优点

27:10.180 --> 27:11.580
好 让我们来看一下他有什么缺点

27:12.900 --> 27:21.060
他不是说只有优点没有缺点 他有缺点 首先的话就是他的用户体验 他不像这个原生应用那么好

27:21.980 --> 27:31.060
但现在的话我观察哈 就是你基本上普通的那种信息展示内的这种应用哈 你使用微博app的话 基本是没什么问题的

27:31.860 --> 27:33.300
不会比你的原生应用差

27:35.700 --> 27:44.780
由于他是直接通过这个浏览器访问 无法使用一些原生的这个api 什么呢 比如说我这个我开发的应用 我需要去调用什么呢

27:44.980 --> 27:51.340
需要去调用这个手机的这个通讯路 对吧 然后这样我要去这个发个短信

27:51.900 --> 27:56.220
什么的 这个的话得用到什么呢 得用到他操作系统层面的一些api

27:56.980 --> 27:59.380
那你以前的话你用这个原生技术

28:00.220 --> 28:08.020
来开发 那这个要调用一些api就非常方便 但是你现在的话你是你开发出来的 你是开发出来是什么 就是网页

28:08.620 --> 28:11.900
对网页 然后最终的话是在哪里面跑 就在浏览器里面跑

28:12.460 --> 28:17.260
对不对 所以你这个使用这些原生api就不好使用 所以这个

28:18.260 --> 28:23.060
这个操作体验就不是很好 然后第二个的话就是依赖于网络

28:23.740 --> 28:25.740
依赖于网络 那这个也是肯定的

28:26.300 --> 28:31.020
因为我们在前面是不是已经介绍了什么是微博app 它本质是不是网页啊

28:31.780 --> 28:34.180
那你本质是网页 那肯定得依赖网络呀

28:35.140 --> 28:40.220
对不对 那你用电脑上网的事 你把网断了事是你能打开网页吗 肯定打不开吗

28:40.700 --> 28:44.420
对不对 那这个微博app它本身就是网页 那肯定依赖于网络

28:45.260 --> 28:49.340
对不对 但是有些原生应用它就不需要依赖这个网络

28:50.220 --> 28:52.220
这个当然原生应用哈 你也要分

28:52.980 --> 28:56.460
如果是那种新闻资讯内的 你是不是也得需要网络

28:57.260 --> 29:04.940
对不对 那你如果你的原生应用是比如游戏 特别是那种单机游戏 那确实是不需要网络 对不对 没有网也可以玩

29:04.940 --> 29:11.100
然后功能受限 大量功能无法使用

29:12.300 --> 29:13.660
这个的话 刚才也解释了

29:14.620 --> 29:25.580
对吧 就是很多一些这个API 你是无法调用的 当然这个的话 我们后面会讲使用这个html5的话 后面会给他介绍一个叫做html5产业联盟的

29:26.060 --> 29:31.660
这个知识 他里面的话提供了一些API 我们可以调用 当然其实还是有一定的限制

29:32.380 --> 29:33.500
还是有一定的限制

29:34.380 --> 29:42.540
而最后一个 最后一个就是临时性入口 用户流存率低 但这个的话就是从运营的角度来讲

29:43.340 --> 29:45.340
就比如说以前我这个原生应用

29:46.140 --> 29:50.300
用户下载了 然后接下来我那个原生应用是不是就是在那个一直都在那个

29:51.180 --> 29:56.620
用户的手机里面 对不对 但是我现在这个web app 它本质上是网页

29:57.100 --> 30:02.340
网页的话用户打开了之后 后面只要把那个浏览器关 是不是你的那个页面也就没有了

30:03.100 --> 30:06.220
对不对 你就没有了 所以这个流存率比较低

30:08.380 --> 30:15.340
好 然后最后一个 这节课最后一个 就是我们开发这个web app 需要哪些技术

30:16.060 --> 30:19.100
好 我前面说了 开发这个web app 它其实就是开发网页

30:19.660 --> 30:23.740
对不对 那既然是开发网页的话 那肯定是离不开我们前端的三架马车

30:24.140 --> 30:27.020
三架马车 是不是HTML CSS和JS

30:28.460 --> 30:35.980
对不对 OK 然后前面也说了 就是我们的这个web app 之所以被称之为app 是因为什么

30:36.300 --> 30:41.500
所以它使用的是单页的开发模式 你只有开发的是单页才能被称之为是应用

30:41.980 --> 30:45.260
对不对 我从来没见过谁把这个 他自己的网站是个多页的

30:45.820 --> 30:52.220
他称之为是个应用的 从来没见过 这因为是单页 单页的话是不表现行为 是不感觉才像是一个应用

30:52.940 --> 31:00.540
对不对 好 那现在的话 就是开发单页的话 有就是非常成熟的框架 比如说大家比较熟悉的这个

31:01.020 --> 31:07.260
Angela React 还有这个web 但其实还有 还有什么 我记得还有什么Aber

31:07.820 --> 31:14.060
Aber 连接式 还有一些其他的 但现在目前来讲的话 最火的是不是就这三个

31:14.700 --> 31:17.500
对不对 特别是这两个 这两个大家学过的

31:18.300 --> 31:23.180
对不对 OK 那这些知识的话 大家其实都是会的

31:23.980 --> 31:33.020
你想想HTML CSJS 你不会吗 你肯定是会的 对不对 接下来的话这个reactweb 我相信绝大部分同学也是学习过的

31:33.580 --> 31:37.660
对不对 那是不是就意味着 那我们有这些知识就够了呢

31:38.460 --> 31:44.380
那肯定不是 对不对 如果就够了 就像我刚才说的 如果够了我就不用开这门课程了

31:45.180 --> 31:48.140
对不对 我还讲什么 讲这个移动端 我讲他干嘛呢

31:49.340 --> 31:56.460
那这边的话 就是你如果要做移动端开发 还需要这么一些知识 哪些知识呢 我们来看一下啊

31:56.940 --> 32:01.820
就如果对比以前开发这个pc端网页 它会有如下的这个区别

32:02.940 --> 32:09.820
首先就是系统 系统的话你这个pc 你如果是pcpc常见了什么windows和这个mac

32:10.700 --> 32:17.580
对不对啊 接下来无论你是windows还是mac 你这个网页的话 在不同的系统上 他这个区别是不大的

32:18.220 --> 32:20.300
啊 但是的话 你这个如果是移动端

32:20.860 --> 32:25.260
移动端的话 你这边主要就是iOS和Android 他是有一些区别的

32:26.060 --> 32:30.300
OK 有些区别的啊 所以我们这边专门有个章节啊 在这后面

32:30.940 --> 32:35.820
后面这个常见问题这一块 常见问题这一块我就会讲一下这个兼容性的问题

32:36.540 --> 32:45.180
OK 然后接下来的话这个浏览器啊 浏览器的话 以前这个在pc是区别很大 特别是调那个兼容性

32:45.900 --> 32:50.220
是不是让人死掉的心都有 对不对啊 但现在的话这个随着这个ie

32:50.620 --> 32:56.380
慢慢的这个淡出了这个历史舞台啊 那这个问题的话慢慢也就没那么明显了

32:56.780 --> 32:59.980
啊 以前那个要去兼容那个i678真的是让人难受

33:00.780 --> 33:01.900
是不是啊

33:02.860 --> 33:05.820
啊 那这个移动端移动端的话就没有这个问题了

33:06.540 --> 33:12.780
啊 就没有这个兼容性问题了 啊 为什么呢 因为移动端的话它都是使用的 基本上都是使用的是这个vibrokit

33:12.780 --> 33:13.340
类合的

33:14.380 --> 33:16.940
啊 如果这个兼容性问题就不存在了

33:17.660 --> 33:18.700
是不是松了一口气啊

33:19.420 --> 33:25.180
是不是啊 啊 但是我告诉你 更老虎的东西来了 什么东西呢 分辨率

33:26.620 --> 33:31.180
啊 这个的话在pc上有区别 在移动端区别很大

33:32.060 --> 33:34.940
区别很大 为什么 因为我们的手机有不同的这个型号

33:35.740 --> 33:37.500
对不对 有大屏的 有小屏的

33:38.220 --> 33:40.220
各种各样的这种屏幕尺寸

33:40.780 --> 33:45.340
啊 所以说虽然这个兼容性问题没有了 但是更为噁心的东西来了

33:45.740 --> 33:47.500
那就是什么呢 就是我们的这个实配

33:48.060 --> 33:49.660
啊 就我们这个页面的这个实配

33:50.220 --> 33:52.460
啊 这也又变成了一个大问题

33:52.860 --> 33:55.020
所以说你看我们这边上专门有个这个章节

33:55.820 --> 33:56.380
看到没有啊

33:56.700 --> 34:00.940
移动端试配啊 就我们把第一章节讲完了之后 马上第二章节就是

34:01.340 --> 34:02.220
移动端的实配

34:02.780 --> 34:03.180
OK

34:04.540 --> 34:12.220
啊 说说我们在开发这个web app的时候啊 主要要解决的就是以下几个方面的问题啊 这边让我写了下啊 就是实配

34:12.540 --> 34:13.740
然后还有就是响应式

34:14.300 --> 34:18.620
响应式就是让你的这个页面在不同的尺寸下 是不是自动的

34:19.260 --> 34:22.460
那个就是去变换

34:23.180 --> 34:24.940
对不对 自动的去变换啊

34:25.340 --> 34:30.300
然后还有就是什么呢 还有就是h5调用这个原生接口啊 这个我们又换一个章节来介绍

34:30.780 --> 34:36.140
啊 最后的话就是关于这个兼容性啊 这些的话其实都是在开发这个web app

34:36.540 --> 34:38.460
都是一些比较典型的这个问题

34:38.860 --> 34:42.300
啊 也是我们这后面章节主要要讲解的这个知识点

34:42.540 --> 34:43.420
啊 就是我们这边

34:43.820 --> 34:48.460
看到没有 我们后面的章节其实就是围围绕着什么呢 围绕着这几点

34:48.940 --> 34:49.500
展开的

34:50.300 --> 34:56.860
OK啊 这就是我们的这个第一堂课啊 第一堂课主要给大家介绍一下就是什么是web app

34:56.860 --> 35:00.860
以及这个web app的优缺点啊 这就就到这里

