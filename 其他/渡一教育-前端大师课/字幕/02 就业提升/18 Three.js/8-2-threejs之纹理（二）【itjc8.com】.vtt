WEBVTT

00:00.000 --> 00:02.640
本堂课我们来使用一下文理

00:02.640 --> 00:06.000
然后我们先来写一个简单的小代码

00:06.000 --> 00:09.640
那我就先把第一堂课的代码拿过来了

00:09.640 --> 00:11.800
可以吧 第一堂课的代码

00:13.400 --> 00:16.600
第一堂课的立方体的一个代码

00:16.600 --> 00:18.200
立方体旋转的一个代码

00:19.200 --> 00:20.800
然后在这会儿改一下

00:20.800 --> 00:22.400
应该是文理

00:23.000 --> 00:26.000
然后我们可以看一下这里面

00:26.000 --> 00:27.400
我要写文理的话

00:27.400 --> 00:30.400
我首先需要先创建这样的一个文理

00:30.400 --> 00:32.400
对吧 创建这个文理怎么来创建

00:32.400 --> 00:38.400
我们就需要在创建文理

00:38.400 --> 00:42.900
我们就需要调用这个txt loader对吧

00:42.900 --> 00:43.900
加载文理

00:43.900 --> 00:44.900
不应该说创建文理

00:44.900 --> 00:47.900
应该是加载文理

00:47.900 --> 00:49.900
我们就握了一个txt

00:49.900 --> 00:53.900
等于你有一个3.txt

00:54.900 --> 00:56.900
txtureloader

00:57.900 --> 00:59.900
点load的这个方法

00:59.900 --> 01:01.900
txtloader这个load的方法

01:01.900 --> 01:02.900
然后我们可以看一下

01:02.900 --> 01:07.900
txtloader这个加载文理的这个构造还数

01:09.900 --> 01:14.050
我们可以看一下

01:14.050 --> 01:18.050
txtloader这个这个构造还数

01:18.050 --> 01:20.050
它是怎么来用的

01:20.050 --> 01:21.050
我们可以看一下

01:21.050 --> 01:22.050
我们首先需要

01:22.050 --> 01:24.050
除了画一个加载器对吧

01:24.050 --> 01:25.050
txtloader这个加载器

01:25.050 --> 01:27.050
然后我们通过点load的方式

01:27.050 --> 01:28.050
去加载一个资源

01:28.050 --> 01:29.050
加载一个资源

01:29.050 --> 01:30.050
然后它的第一个参数

01:30.050 --> 01:32.050
这个点load

01:32.050 --> 01:33.050
这个load的还数的

01:33.050 --> 01:34.050
第一个参数

01:34.050 --> 01:36.050
其实是我们加载资源的一个地址

01:36.050 --> 01:39.050
第二个参数是我们onload的一个还数

01:39.050 --> 01:42.050
就是我们在加载完成之后

01:42.050 --> 01:44.050
回调的一个还数

01:44.050 --> 01:46.050
然后再有第三个参数

01:46.050 --> 01:49.050
其实是onprogress

01:49.050 --> 01:51.050
代表加载进行中的一个回答还数

01:51.050 --> 01:52.050
但是它说

01:52.050 --> 01:54.050
现在目前已经不支持了

01:54.050 --> 01:55.050
目前暂不支持

01:55.050 --> 01:57.050
现在不支持这个

01:57.050 --> 01:59.050
这个还数

01:59.050 --> 02:00.050
那一会我们来看一下

02:00.050 --> 02:02.050
现在还支不支持了

02:02.050 --> 02:04.050
然后还有第几个了

02:04.050 --> 02:06.050
1,2,3,4

02:06.050 --> 02:08.050
第四个参数是错误的一个回答还数

02:08.050 --> 02:10.050
就是说如果你在加载

02:10.050 --> 02:12.050
这个文里图片的时候

02:12.050 --> 02:14.050
加载这个图文件的时候

02:14.050 --> 02:16.050
它出现问题了

02:16.050 --> 02:18.050
它会给你执行这样的一个还数

02:18.050 --> 02:19.050
可以吧

02:19.050 --> 02:21.050
我们拿过来用一下

02:21.050 --> 02:24.490
来先写一个地址

02:24.490 --> 02:26.490
可以吧

02:26.490 --> 02:27.490
我们来写一个地址

02:27.490 --> 02:30.490
那要写当前录件下的txt

02:30.490 --> 02:32.490
txt下的

02:32.490 --> 02:33.490
一点gpg

02:33.490 --> 02:35.490
看一下猫屎

02:35.490 --> 02:36.490
可以吧

02:36.490 --> 02:37.490
一点gpg

02:37.490 --> 02:39.490
然后我们要把这个文理

02:39.490 --> 02:40.490
添加到我们材质当中

02:40.490 --> 02:41.490
对吧

02:41.490 --> 02:42.490
我们刚才说

02:42.490 --> 02:44.490
这个文理是材质的一个属性

02:44.490 --> 02:45.490
对不对

02:45.490 --> 02:46.490
我们要取的

02:46.490 --> 02:48.490
应该是文理身上的一个颜色

02:48.490 --> 02:49.490
怎么来取呢

02:49.490 --> 02:50.490
我们需要通过

02:50.490 --> 02:52.490
调用材质里面的map这个方式

02:52.490 --> 02:53.490
把我们的材质

02:53.490 --> 02:54.490
把我们的这个文理

02:54.490 --> 02:56.490
传进去就可以了

02:56.490 --> 02:57.490
然后我们先再来看一下

02:57.490 --> 02:58.490
好包式

02:58.490 --> 02:59.490
没有建议

02:59.490 --> 03:00.490
看一下

03:00.490 --> 03:01.490
包了个错

03:01.490 --> 03:03.490
看现在没有确认出来

03:03.490 --> 03:06.490
包了一个错

03:06.490 --> 03:09.490
来看一下是什么错

03:09.490 --> 03:10.490
上面啊

03:10.490 --> 03:11.490
它告诉你

03:11.490 --> 03:12.490
它说这个

03:12.490 --> 03:13.490
没有找到这个圆

03:13.490 --> 03:14.490
对吧

03:14.490 --> 03:15.490
它说这个存在加

03:15.490 --> 03:16.490
交叉域了

03:16.490 --> 03:17.490
看到了吧

03:17.490 --> 03:18.490
也就是说我们在

03:18.490 --> 03:19.490
文理图片

03:19.490 --> 03:21.490
再加在文理图片的时候

03:21.490 --> 03:24.490
是需要通过你

03:24.490 --> 03:26.490
http的这种

03:26.490 --> 03:28.490
这种协议的

03:28.490 --> 03:30.490
这种协议下的一个路径

03:30.490 --> 03:31.490
去打开的

03:31.490 --> 03:32.490
就是说

03:32.490 --> 03:33.490
我们再去加在

03:33.490 --> 03:34.490
一个文理图片的时候

03:34.490 --> 03:36.490
我们必须

03:36.490 --> 03:38.490
必须要在一个服务器下面

03:38.490 --> 03:39.490
去打开

03:39.490 --> 03:41.490
服务器下面打开

03:41.490 --> 03:42.490
就是一个slower下面打开

03:42.490 --> 03:43.490
对吧

03:43.490 --> 03:45.490
我们才可以拿到这个数据

03:45.490 --> 03:47.490
那我们可以右键

03:47.490 --> 03:50.490
这个服务器怎么来弄

03:51.490 --> 03:52.490
一种方式

03:52.490 --> 03:53.490
你可以把这个

03:53.490 --> 03:54.490
放到你

03:54.490 --> 03:56.490
你们的web server身上

03:56.490 --> 03:57.490
对吧

03:57.490 --> 03:58.490
web server的3w目录下

03:58.490 --> 04:01.490
w a m p s e r

04:01.490 --> 04:03.490
v e r对吧

04:03.490 --> 04:05.490
记着大家学网络的时候

04:05.490 --> 04:07.490
是不是用的是这个web server

04:07.490 --> 04:08.490
你可以把这个文件

04:08.490 --> 04:09.490
放到web server

04:09.490 --> 04:11.490
下面3w

04:11.490 --> 04:13.490
它的一个3w目录下面去

04:13.490 --> 04:14.490
然后再打开

04:14.490 --> 04:15.490
然后通过local house

04:15.490 --> 04:16.490
进行一个打开

04:16.490 --> 04:17.490
对吧

04:17.490 --> 04:18.490
然后还有一种方式

04:18.490 --> 04:19.490
什么

04:19.490 --> 04:21.490
有个插件叫live server

04:21.490 --> 04:22.490
这个插件

04:22.490 --> 04:23.490
大家可以下载一下

04:23.490 --> 04:24.490
下载完了之后

04:24.490 --> 04:25.490
我们右键

04:25.490 --> 04:26.490
然后它就出

04:26.490 --> 04:27.490
它就会出现一个选项

04:27.490 --> 04:29.490
叫open with live server

04:29.490 --> 04:32.490
就是在我们一个服务器下面打开

04:32.490 --> 04:33.490
那我们可以打开一下

04:33.490 --> 04:34.490
你可以看一下

04:34.490 --> 04:35.490
一个服务下面打开

04:35.490 --> 04:36.490
我们发现这个图片

04:36.490 --> 04:37.490
是不是已经有了

04:37.490 --> 04:38.490
对吧

04:38.490 --> 04:39.490
我把这个

04:39.490 --> 04:40.490
然后有同学又会发现

04:40.490 --> 04:41.490
老师你这个颜色

04:41.490 --> 04:42.490
为什么是绿色呢

04:42.490 --> 04:43.490
这是因为我这块

04:43.490 --> 04:44.490
设置了一个color

04:44.490 --> 04:45.490
我们如果这块

04:45.490 --> 04:46.490
不设置color的话

04:46.490 --> 04:48.490
它就是我们的图片

04:48.490 --> 04:49.490
看到了吗

04:49.490 --> 04:50.490
这就是我们的图片

04:51.490 --> 04:52.490
能给上吗

04:52.490 --> 04:54.490
这就是我们怎么来加载

04:54.490 --> 04:56.490
怎么来使用我们的文理

04:56.490 --> 04:58.490
如何来使用我们的文理

04:59.490 --> 05:01.490
现在已经大家都知道

05:01.490 --> 05:02.490
怎么来使用了

05:02.490 --> 05:03.490
对不对

05:03.490 --> 05:04.490
这就是一种

05:04.490 --> 05:06.490
我们是文理的使用方式

05:06.490 --> 05:07.490
然后

05:07.490 --> 05:08.490
我们再来了解一下

05:08.490 --> 05:09.490
这个texture

05:10.490 --> 05:12.490
这个texture loader

05:12.490 --> 05:13.490
这个构材术

05:13.490 --> 05:14.490
刚才是不是说

05:14.490 --> 05:16.490
它的loader方法

05:16.490 --> 05:17.490
可以

05:17.490 --> 05:19.490
可以传递几个参数

05:19.490 --> 05:20.490
对吧

05:20.490 --> 05:22.490
这是1 2 3 4 4个参数

05:22.490 --> 05:23.490
那这4个参数

05:23.490 --> 05:24.490
我们都传一下

05:24.490 --> 05:25.490
你可以看一下

05:25.490 --> 05:26.490
第一个参数

05:26.490 --> 05:27.490
我刚才已经传了

05:27.490 --> 05:28.490
就是一个资源的一个地址

05:28.490 --> 05:29.490
对吧

05:29.490 --> 05:31.490
第二个参数是一个

05:31.490 --> 05:33.490
一个成功的一个回调函数

05:33.490 --> 05:34.490
对不对

05:34.490 --> 05:35.490
买

05:35.490 --> 05:36.490
买一个

05:36.490 --> 05:37.490
二es

05:37.490 --> 05:38.490
可以吧

05:38.490 --> 05:39.490
然后我们在这里面

05:39.490 --> 05:40.490
打印一下

05:40.490 --> 05:41.490
console.log

05:41.490 --> 05:42.490
成功的一个回调函数

05:42.490 --> 05:43.490
对吧

05:43.490 --> 05:44.490
4个size

05:45.490 --> 05:48.990
es

05:48.990 --> 05:49.990
然后4个size

05:49.990 --> 05:51.990
这样的一个成功的回调函数

05:51.990 --> 05:52.990
然后我们可以打印一下

05:52.990 --> 05:53.990
这个res

05:53.990 --> 05:54.990
你可以看一下它是啥

05:54.990 --> 05:55.990
然后第二个

05:55.990 --> 05:56.990
第三个参数

05:56.990 --> 05:57.990
第三个参数

05:57.990 --> 05:59.990
应该是进行中的一个

05:59.990 --> 06:01.990
一个回答函数对不对

06:01.990 --> 06:02.990
那么打印一下

06:02.990 --> 06:03.990
console.log

06:03.990 --> 06:05.990
progress.pro.js

06:05.990 --> 06:06.990
可以吧

06:06.990 --> 06:08.990
然后再接着

06:08.990 --> 06:09.990
第三个

06:09.990 --> 06:11.990
第四个参数

06:11.990 --> 06:12.990
第四个参数

06:12.990 --> 06:13.990
应该是

06:13.990 --> 06:15.990
这个错误的一个回答函数

06:15.990 --> 06:16.990
对吧

06:16.990 --> 06:17.990
那我们可以打印一下

06:17.990 --> 06:19.990
这个错误的回答函数

06:19.990 --> 06:20.990
二

06:20.990 --> 06:21.990
然后里面打印一下

06:21.990 --> 06:22.990
一二

06:22.990 --> 06:23.990
可以吧

06:23.990 --> 06:24.990
然后我们可以看一下

06:24.990 --> 06:26.990
它们的一个执行顺序

06:26.990 --> 06:27.990
其实我们可相而知

06:27.990 --> 06:28.990
它们的一个执行顺序

06:28.990 --> 06:29.990
对不对

06:29.990 --> 06:30.990
右键

06:30.990 --> 06:31.990
你可以看一下

06:31.990 --> 06:32.990
我把这个

06:32.990 --> 06:33.990
我的动画

06:33.990 --> 06:34.990
这里面的console.log

06:34.990 --> 06:35.990
去调

06:35.990 --> 06:36.990
刷新一下

06:36.990 --> 06:37.990
你看

06:37.990 --> 06:38.990
我们看一下

06:38.990 --> 06:39.990
4个size

06:39.990 --> 06:40.990
执行了对不对

06:40.990 --> 06:41.990
4个size执行了

06:41.990 --> 06:42.990
然后我们这里面

06:42.990 --> 06:43.990
还有个什么

06:43.990 --> 06:44.990
它说已经

06:44.990 --> 06:48.690
这里

06:48.690 --> 06:50.690
这里是大小的一个问题

06:50.690 --> 06:51.690
我们不用在意

06:51.690 --> 06:52.690
然后这块有个size

06:52.690 --> 06:53.690
对吧

06:53.690 --> 06:54.690
但是我们发现

06:54.690 --> 06:55.690
unprogress它没有执行

06:55.690 --> 06:56.690
对不对

06:56.690 --> 06:57.690
那这也就是我们这里面

06:57.690 --> 06:58.690
它这里面

06:58.690 --> 06:59.690
文档里面所说的

06:59.690 --> 07:00.690
说这个

07:00.690 --> 07:02.690
unprogress

07:02.690 --> 07:03.690
这个回调函数

07:03.690 --> 07:04.690
现在已经

07:04.690 --> 07:06.690
已经不支持了

07:06.690 --> 07:07.690
现在就算不支持

07:07.690 --> 07:08.690
可以吧

07:08.690 --> 07:10.690
也就是我们3.js

07:10.690 --> 07:11.690
现在

07:11.690 --> 07:12.690
这个版本

07:12.690 --> 07:14.690
就是284之后

07:14.690 --> 07:16.690
这个版本

07:16.690 --> 07:17.690
它的一个特点

07:17.690 --> 07:18.690
它会把这个

07:18.690 --> 07:19.690
进程搭载过程中

07:19.690 --> 07:20.690
给你删掉

07:20.690 --> 07:23.690
这个函数给你删掉了

07:23.690 --> 07:24.690
这个大家注意一下

07:24.690 --> 07:25.690
可以吗

07:25.690 --> 07:26.690
注意一下

07:26.690 --> 07:27.690
ok

07:27.690 --> 07:29.690
然后我们可以看一下

07:29.690 --> 07:30.690
还有什么东西

07:30.690 --> 07:31.690
我们来再看一下

07:31.690 --> 07:32.690
还有什么

07:32.690 --> 07:34.690
我没有讲的

07:34.690 --> 07:35.690
现在

07:35.690 --> 07:36.690
对

07:36.690 --> 07:37.690
刚才这块是不是有个警告

07:37.690 --> 07:38.690
有朋友发现了

07:38.690 --> 07:39.690
这块有个警告

07:39.690 --> 07:40.690
这警告说的是什么意思

07:40.690 --> 07:41.690
我还记得我之前

07:41.690 --> 07:42.690
再说

07:42.690 --> 07:44.690
加在一个文理图片的时候

07:44.690 --> 07:45.690
这个文理图片

07:45.690 --> 07:46.690
必须是二的miss方

07:46.690 --> 07:47.690
对不对

07:47.690 --> 07:48.690
二的多少次

07:48.690 --> 07:50.690
二的miss方

07:50.690 --> 07:54.640
二的

07:54.640 --> 07:55.640
哎

07:55.640 --> 07:56.640
哎

07:56.640 --> 07:57.640
二的

07:57.640 --> 07:59.640
写在这吧

07:59.640 --> 08:01.640
文理图

08:01.640 --> 08:02.640
文理影射

08:02.640 --> 08:04.640
一个图片

08:04.640 --> 08:05.640
哎

08:05.640 --> 08:06.640
删一下

08:06.640 --> 08:08.640
重来啊

08:08.640 --> 08:09.640
ok

08:09.640 --> 08:10.640
加在

08:10.640 --> 08:12.640
加在文理图片

08:12.640 --> 08:15.640
加在的文理图片

08:15.640 --> 08:18.640
所加在的文理图片

08:18.640 --> 08:19.640
以前啊

08:19.640 --> 08:21.640
是以前外部这样的一个

08:21.640 --> 08:22.640
啊

08:22.640 --> 08:23.640
这是

08:23.640 --> 08:24.640
这是

08:24.640 --> 08:26.640
版本已留的一个问题啊

08:26.640 --> 08:27.640
就是以前

08:27.640 --> 08:28.640
外部这样里面

08:28.640 --> 08:30.640
你要下载一个文理图片的时候

08:30.640 --> 08:31.640
我们必须是

08:31.640 --> 08:33.640
二的miss方的这个图片大小

08:33.640 --> 08:35.640
图片大小

08:36.640 --> 08:38.640
图片大小

08:38.640 --> 08:40.640
必须为

08:40.640 --> 08:42.640
二的

08:42.640 --> 08:43.640
miss方

08:43.640 --> 08:44.640
也就是说

08:44.640 --> 08:45.640
如果你这个图片

08:45.640 --> 08:47.640
不是二的miss方的大小的话

08:47.640 --> 08:48.640
它就不会被

08:48.640 --> 08:49.640
它就不能

08:49.640 --> 08:50.640
不能渲染

08:50.640 --> 08:51.640
不能拿过来用

08:51.640 --> 08:53.640
那现在啊

08:53.640 --> 08:54.640
现在我们那个

08:54.640 --> 08:56.640
新的版本已经

08:56.640 --> 08:58.640
把这个问题解决了

08:58.640 --> 09:00.640
它是怎么解决的呢

09:00.640 --> 09:01.640
它会把你

09:01.640 --> 09:02.640
你现在

09:02.640 --> 09:03.640
其实你现在不是

09:03.640 --> 09:04.640
一个二的miss方的

09:04.640 --> 09:05.640
一个大小

09:05.640 --> 09:06.640
就像我现在这张图片啊

09:06.640 --> 09:07.640
你可以看一下

09:07.640 --> 09:08.640
我刚刚

09:08.640 --> 09:09.640
引入进来的这张图片

09:09.640 --> 09:11.640
我刚刚引入进来的这张图片

09:11.640 --> 09:13.640
它的大小是800x600的

09:13.640 --> 09:15.640
它是800x600的

09:15.640 --> 09:17.640
现在

09:17.640 --> 09:19.640
是800x600的

09:19.640 --> 09:20.640
然后它就会

09:20.640 --> 09:22.640
去把这个大小

09:22.640 --> 09:24.640
给它重置

09:24.640 --> 09:28.080
重置

09:28.080 --> 09:30.080
重置

09:30.080 --> 09:31.080
重置

09:31.080 --> 09:32.080
大小

09:32.080 --> 09:33.080
把它的大小

09:33.080 --> 09:34.080
重置成多少呢

09:34.080 --> 09:35.080
是重置成

09:35.080 --> 09:36.080
离它最

09:36.080 --> 09:37.080
最近的

09:37.080 --> 09:38.080
那个二的

09:38.080 --> 09:39.080
miss方的数

09:39.080 --> 09:40.080
那它这里面

09:40.080 --> 09:41.080
重置成了512

09:41.080 --> 09:43.080
重置成了512

09:43.080 --> 09:45.080
它变成了512

09:45.080 --> 09:46.080
成为512的

09:46.080 --> 09:47.080
大小的

09:47.080 --> 09:48.080
然后

09:48.080 --> 09:50.080
才进行的

09:50.080 --> 09:51.080
才进行的

09:51.080 --> 09:52.080
渲染我们的这个

09:52.080 --> 09:54.080
渲染我们的这个

09:54.080 --> 09:55.080
这个

09:55.080 --> 09:57.080
这个什么

09:57.080 --> 09:59.080
渲染我们的这个物体

09:59.080 --> 10:00.080
这个物体

10:00.080 --> 10:02.080
可以吧

10:02.080 --> 10:04.080
那这是webgr

10:04.080 --> 10:06.080
一流的一个问题

10:06.080 --> 10:07.080
以前

10:07.080 --> 10:09.080
你可能在老的一些

10:09.080 --> 10:10.080
你可能在

10:10.080 --> 10:12.080
一三年之前吧

10:12.080 --> 10:14.080
一三年之前

10:14.080 --> 10:16.080
你去用这个webgr的话

10:16.080 --> 10:18.080
它可能就是

10:18.080 --> 10:19.080
只能

10:19.080 --> 10:20.080
加在这个

10:20.080 --> 10:21.080
文理图片的话

10:21.080 --> 10:23.080
只能加在二的miss方的

10:23.080 --> 10:24.080
图片

10:24.080 --> 10:25.080
那现在

10:25.080 --> 10:26.080
随着我们的

10:26.080 --> 10:27.080
科技的一个进步

10:27.080 --> 10:28.080
它已经

10:28.080 --> 10:30.080
把这个问题

10:30.080 --> 10:31.080
已经解决了

10:31.080 --> 10:32.080
可以吧

10:32.080 --> 10:33.080
那它这个问题

10:33.080 --> 10:34.080
是怎么解决的呢

10:34.080 --> 10:35.080
其实就是通过

10:35.080 --> 10:37.080
后面的这几个属性

10:37.080 --> 10:39.080
就是通过我们这几个

10:39.080 --> 10:40.080
来看一下

10:40.080 --> 10:42.080
刚才那个文理的那几个属性

10:42.080 --> 10:43.080
就这几个

10:43.080 --> 10:44.080
RAMP, SRAMPT

10:44.080 --> 10:46.080
MAGA filter

10:46.080 --> 10:47.080
MEM filter

10:47.080 --> 10:48.080
这几个属性

10:48.080 --> 10:49.080
来实现的

10:51.080 --> 10:53.080
那其实现在的webgr

10:53.080 --> 10:54.080
也已经

10:54.080 --> 10:55.080
也已经

10:55.080 --> 10:57.080
把这个问题解决了

10:57.080 --> 10:58.080
它也是通过

10:58.080 --> 10:59.080
它就是通过

10:59.080 --> 11:00.080
这几个属性来解决的

11:00.080 --> 11:01.080
对不对

11:01.080 --> 11:03.080
咱们讲webgr的时候

11:03.080 --> 11:04.080
在讲文理的时候

11:04.080 --> 11:05.080
说过

11:05.080 --> 11:06.080
说过这四个属性

11:06.080 --> 11:07.080
对吧

11:07.080 --> 11:08.080
那我们后续

11:08.080 --> 11:09.080
还会接着再来说

11:09.080 --> 11:10.080
可以吧

11:10.080 --> 11:11.080
再给大家讲一遍

11:11.080 --> 11:12.080
OK

11:12.080 --> 11:14.080
那现在大家是不是

11:14.080 --> 11:15.080
已经会如何

11:15.080 --> 11:17.080
添加这个文理了

11:17.080 --> 11:18.080
对吧

11:18.080 --> 11:19.080
那好

11:19.080 --> 11:20.080
那这一堂课

11:20.080 --> 11:21.080
咱们就先

11:21.080 --> 11:22.080
先一些

11:22.080 --> 11:23.080
然后大家去

11:23.080 --> 11:24.080
写一些

11:24.080 --> 11:25.080
这样的一个

11:25.080 --> 11:26.080
加在文理的

11:26.080 --> 11:27.080
方式

11:27.080 --> 11:28.080
这样的一个代码

11:28.080 --> 11:29.080
大家自己去写一些

11:29.080 --> 11:30.080
可以吧

