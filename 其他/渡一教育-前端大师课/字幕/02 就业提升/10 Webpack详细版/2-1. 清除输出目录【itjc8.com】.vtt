WEBVTT

00:00.820 --> 00:04.400
这个章节呢 咱们来讲这个常用扩展

00:04.920 --> 00:06.960
所谓的vipack扩展是什么呢

00:07.220 --> 00:08.760
vipack就两个扩展点

00:09.020 --> 00:10.800
一个呢是noder

00:11.060 --> 00:12.340
一个呢还是什么呢

00:12.600 --> 00:13.360
是plucking

00:13.880 --> 00:15.660
一共就这么两个扩展点

00:16.180 --> 00:18.740
所谓的这些扩展啊 这些生态

00:19.500 --> 00:22.060
其实要么就是noder 要么呢就是plucking

00:23.100 --> 00:24.620
因此我们这一张学到啥呢

00:24.880 --> 00:26.160
学的不是vipack本身

00:26.420 --> 00:30.260
学的是一些别的公司 或者是一些别的开发者

00:30.720 --> 00:35.320
他们利用vipack的这种noder 自己写了个noder 或者是自己写了一个plucking

00:35.580 --> 00:37.880
咱们能把它融入到vipack里边去

00:38.140 --> 00:39.680
来解决一些

00:40.200 --> 00:40.960
常见的问题

00:41.740 --> 00:43.780
那么这一张呢 可能东西比较多

00:44.040 --> 00:48.120
包括了除了这一张之外 后续的章节呢 都是讲很多很多的扩展

00:48.380 --> 00:51.460
那么这些东西比较多 我们如何来看待这些东西呢

00:51.720 --> 00:52.480
又来了啊

00:52.740 --> 00:54.280
优势之前我说的那个问题

00:54.780 --> 00:56.580
就是知识点太多了 记不住

00:57.340 --> 00:58.120
谁让你记住了

00:58.460 --> 01:01.140
没有人让你记住 你不需要去记住他

01:01.900 --> 01:04.660
如果说你以后就是这门课学完了

01:04.980 --> 01:06.780
或者说到了以后快毕业了

01:07.040 --> 01:08.320
必要去找工作的时候呢

01:08.580 --> 01:13.420
如果说你还能清楚的记得这些扩展 我真的是经理司机号汉子 反正我是记不住的

01:13.940 --> 01:15.740
那么我们如何来看待这个知识呢

01:16.000 --> 01:16.760
这个知识

01:17.020 --> 01:19.580
当我们要去用它的时候 再来进行查阅

01:20.100 --> 01:21.620
不用它的时候 它一点用都没有

01:21.880 --> 01:22.900
什么时候会用它

01:23.420 --> 01:23.940
什么时候会用

01:24.440 --> 01:26.740
什么时候用 我们用vipack的时候就可能会用它

01:27.200 --> 01:28.480
因为它叫常用扩展

01:29.000 --> 01:30.520
是vipack的常用扩展

01:30.800 --> 01:32.320
我如果说不用vipack

01:32.580 --> 01:34.000
那会不会用它呢 就不会用它

01:34.760 --> 01:38.480
那么我们以后会不会经常使用vipack来搭建工程呢

01:38.980 --> 01:39.600
我告诉大家

01:40.000 --> 01:40.360
不会

01:40.880 --> 01:41.280
不会

01:41.800 --> 01:43.960
但是那我们学这个vipack有什么意义呢

01:44.040 --> 01:46.400
又来了啊 这些老实人常谈的问题了

01:46.880 --> 01:47.880
那学这个有什么意义呢

01:48.120 --> 01:50.560
实在于我们后续学一些技术的时候

01:50.840 --> 01:51.640
比方学5u

01:52.040 --> 01:52.760
学react

01:53.120 --> 01:54.320
学一些东西的时候呢

01:54.600 --> 01:56.520
他们内部做了一些脚手架

01:56.800 --> 01:59.000
而那些脚手架呢 搭出来的工程

01:59.440 --> 02:00.800
里面包含了vipack

02:01.560 --> 02:04.120
有的时候呢 你可能会对它进行修改

02:05.640 --> 02:07.200
或者是要改变它的一些配置

02:07.440 --> 02:09.240
那如果说你要改它的配置的时候

02:09.480 --> 02:11.280
我们这本课功能就发挥出来了

02:12.040 --> 02:13.600
你要用我们这本课学过的知识

02:13.840 --> 02:15.240
学过的这些乱七八糟的配置

02:15.480 --> 02:17.040
你要去查阅一下相关的文档

02:17.280 --> 02:18.640
或者是回看一下相关的视频

02:18.880 --> 02:21.200
ok 那去改去改它的东西

02:21.880 --> 02:23.240
那如果说你不改它的东西呢

02:23.480 --> 02:25.120
不改它的东西它就跟我们没啥关系

02:25.360 --> 02:25.960
最多

02:26.840 --> 02:28.840
是能够帮助我们去理解

02:29.520 --> 02:30.200
像5u啊

02:30.440 --> 02:32.320
像react这些脚手架搭建出来的东西

02:32.760 --> 02:34.720
明白吧 我们的课程定位是在这

02:35.520 --> 02:36.160
搞清楚啊

02:37.360 --> 02:39.360
这里呢 我们说一个它的常用扩展

02:39.520 --> 02:40.880
来 我们来看一下我们的课件

02:43.240 --> 02:44.720
后边的课件就极其简单了

02:44.920 --> 02:46.080
我就告诉你一个名字

02:46.520 --> 02:47.600
我就告诉你一个名字

02:47.840 --> 02:49.360
剩下的事情全部你自己搞的

02:49.720 --> 02:52.280
这非常像你们以后到公司里面去开发

02:52.640 --> 02:53.600
经常就是这种情况

02:54.580 --> 02:56.580
你可能那名字都吸不入

02:56.780 --> 02:57.580
可能还要查一查

02:57.780 --> 02:58.780
摆渡一下这个名字是啥

02:58.980 --> 03:00.380
所以说我课件里面就告诉你一个名字

03:00.580 --> 03:01.580
我这里要用到一个什么

03:01.780 --> 03:04.380
叫做名字叫做Clean Webpack Plugging

03:04.580 --> 03:05.380
也就是它是个插件

03:05.980 --> 03:07.380
它名字就像是一个插件

03:07.580 --> 03:08.780
那么就是Webpack的插件

03:09.180 --> 03:10.140
Webpack Plugging

03:10.780 --> 03:11.980
它的插件名字叫做Clean

03:12.340 --> 03:13.100
清楚的

03:14.100 --> 03:14.900
咱们来进去看一下

03:15.580 --> 03:16.380
看它能干嘛

03:16.980 --> 03:17.900
到哪里去看呢

03:18.100 --> 03:19.780
我们可以直接去NPM来看

03:19.980 --> 03:21.180
也可以去给github

03:21.380 --> 03:23.380
但是我建议了直接去NPM来看

03:23.680 --> 03:25.680
因为这个名字就是NPM包的名字

03:25.880 --> 03:26.880
咱们去搜一下

03:27.880 --> 03:29.880
一定要学会这种方式

03:30.880 --> 03:33.880
将你们以后真正的去做开发

03:34.880 --> 03:36.880
那么其实你们真的就像

03:36.880 --> 03:38.880
老师在直播的时候那样子

03:39.880 --> 03:40.880
不停的携带

03:40.880 --> 03:41.880
真的是这样子吗

03:41.880 --> 03:42.880
实际上不是

03:42.880 --> 03:44.880
你们以后做开发

03:44.880 --> 03:46.880
会打开一个浏览器

03:46.880 --> 03:48.880
这个浏览器上有很多个标签

03:48.880 --> 03:49.880
也全是资料

03:49.880 --> 03:50.880
全是文档

03:50.880 --> 03:52.880
几乎会把标签一扎满的

03:52.880 --> 03:54.880
可以说你开发里边很多时间

03:54.880 --> 03:55.880
你都在查文档

03:55.880 --> 03:56.880
正常的很

03:56.880 --> 04:02.880
这就是真实的前端开发的过程

04:03.880 --> 04:04.880
那么接下来我们看一下

04:04.880 --> 04:06.880
这个插件Clean Webpack Plugin

04:06.880 --> 04:07.880
它说什么意思呢

04:07.880 --> 04:08.880
它说

04:08.880 --> 04:11.880
这个插件它用来做什么呢

04:11.880 --> 04:12.880
它用来Remove

04:12.880 --> 04:13.880
移除

04:13.880 --> 04:15.880
或者也叫做Clean

04:15.880 --> 04:17.880
清楚你的什么

04:18.880 --> 04:20.880
Build Folders

04:20.880 --> 04:21.880
Build Folders是什么意思

04:21.880 --> 04:23.880
就是你打包最终的目录

04:23.880 --> 04:24.880
给它清除掉

04:24.880 --> 04:25.880
完了

04:25.880 --> 04:26.880
一句话就解释完了

04:26.880 --> 04:27.880
什么意思

04:27.880 --> 04:28.880
就是说

04:28.880 --> 04:29.880
我这里的比方说

04:29.880 --> 04:31.880
我们这个Webpack写好了

04:31.880 --> 04:35.880
我们这里到空台去

04:35.880 --> 04:36.880
好写好了

04:36.880 --> 04:37.880
我们一打包

04:37.880 --> 04:39.880
你看着我这里给它这么一个东西

04:39.880 --> 04:40.880
给它一个Output

04:40.880 --> 04:42.880
因为我们真实的项目里

04:42.880 --> 04:44.880
我们会配置这个玩意

04:44.880 --> 04:45.880
比方说我这样配置

04:45.880 --> 04:47.880
Name点什么呢

04:48.880 --> 04:49.880
或者是叫

04:49.880 --> 04:50.880
创改哈西

04:52.880 --> 04:53.880
然后点解释

04:53.880 --> 04:55.880
比方说我们File Name是这样子

04:55.880 --> 04:56.880
来我们打个包

05:01.880 --> 05:02.880
打包完了

05:02.880 --> 05:03.880
你看这不是出了个目录吗

05:03.880 --> 05:04.880
对吧 后面有哈西

05:04.880 --> 05:05.880
好那么接下来我们肯定

05:05.880 --> 05:06.880
没完

05:06.880 --> 05:08.880
我们肯定要修改代码

05:08.880 --> 05:09.880
我们测试一下

05:09.880 --> 05:10.880
发现有问题

05:10.880 --> 05:11.880
或者是工程还没做完

05:11.880 --> 05:12.880
我们修改一下代码

05:12.880 --> 05:13.880
东西变了

05:13.880 --> 05:14.880
那么再重新打包

05:14.880 --> 05:15.880
你看一下

05:15.880 --> 05:17.880
重新打包是不是哈西变了

05:17.880 --> 05:18.880
对吧

05:18.880 --> 05:19.880
哈西变了过了

05:19.880 --> 05:20.880
是不是多了两个文件出来

05:20.880 --> 05:22.880
那之前的文件有用了吗

05:22.880 --> 05:23.880
是不是没用了

05:23.880 --> 05:24.880
之前的文件

05:24.880 --> 05:25.880
根本没关系了

05:25.880 --> 05:26.880
那么我们是不是要手动去删它

05:26.880 --> 05:28.880
手动删是不是很麻烦

05:28.880 --> 05:29.880
它就要解决这个问题

05:29.880 --> 05:31.880
它可以让你自动

05:31.880 --> 05:32.880
它可以帮你自动去删它

05:32.880 --> 05:33.880
它就这么简单

05:33.880 --> 05:34.880
就这么简单

05:34.880 --> 05:35.880
特别简单

05:35.880 --> 05:36.880
它怎么用呢

05:36.880 --> 05:37.880
你看一下

05:37.880 --> 05:38.880
它让你首先安装

05:38.880 --> 05:39.880
安装来安装吧

05:40.880 --> 05:41.880
用NPM

05:41.880 --> 05:42.880
I

05:42.880 --> 05:43.880
橫钢D

05:43.880 --> 05:44.880
Clean

05:44.880 --> 05:45.880
Webpack

05:45.880 --> 05:46.880
Plugging

05:51.020 --> 05:52.020
安装一下

05:52.020 --> 05:53.020
安装好了过了

05:53.020 --> 05:54.020
它告诉你怎么用呢

05:54.020 --> 05:55.020
你看它告诉你怎么用

05:55.020 --> 05:56.020
它说require

05:56.020 --> 05:57.020
把导进来

05:57.020 --> 05:58.020
在配置的时候

05:58.020 --> 05:59.020
把导进来

05:59.020 --> 06:00.020
导进来过后

06:00.020 --> 06:01.020
解构

06:01.020 --> 06:02.020
你看这里是不是个解构

06:02.020 --> 06:04.020
它里面包含了一个

06:04.020 --> 06:05.020
一个函数

06:05.020 --> 06:06.020
一个

06:06.020 --> 06:07.020
你看手这么大

06:07.020 --> 06:08.020
一般就是构造函数

06:08.020 --> 06:09.020
你都懂的

06:09.020 --> 06:10.020
一个构造函数

06:10.020 --> 06:11.020
你看我们说的插件

06:11.020 --> 06:12.020
不就是个构造函数吗

06:12.020 --> 06:13.020
然后Plugging

06:13.020 --> 06:14.020
里面是不是

06:14.020 --> 06:15.020
溜一个构造函数

06:15.020 --> 06:16.020
创建一个插件对象

06:16.020 --> 06:17.020
没了

06:18.020 --> 06:19.020
就这么简单

06:19.020 --> 06:20.020
来 我们来用一下吧

06:20.020 --> 06:22.020
这里require

06:22.020 --> 06:23.020
第二鞋杠

06:23.020 --> 06:24.020
虽然说这些东西

06:24.020 --> 06:25.020
没那么的重要

06:25.020 --> 06:27.020
但是你们还是要去

06:27.020 --> 06:28.020
自己写一下

06:28.020 --> 06:29.020
不然一点影响都没有

06:29.020 --> 06:30.020
也不好

06:30.020 --> 06:31.020
咱们

06:31.020 --> 06:32.020
复制一下

06:32.020 --> 06:34.020
插件名字我肯定是记不住的

06:34.020 --> 06:35.020
你们能记住

06:35.020 --> 06:36.020
你们留意

06:36.020 --> 06:37.020
这里

06:37.020 --> 06:38.020
导入

06:39.020 --> 06:41.020
那么我们这里的解构

06:41.020 --> 06:42.020
反复的是个对象

06:42.020 --> 06:43.020
对象里面解构

06:43.020 --> 06:44.020
解构出来一个叫做Clean

06:44.020 --> 06:45.020
一般那个名字

06:45.020 --> 06:46.020
就是这样子

06:46.020 --> 06:47.020
一般就是那个

06:47.020 --> 06:49.020
就是变成大头风命名法

06:49.020 --> 06:50.020
变成这个样子

06:50.020 --> 06:51.020
就是一个构造函数

06:51.020 --> 06:52.020
对吧

06:52.020 --> 06:53.020
然后我们怎么配置

06:53.020 --> 06:54.020
插件配置

06:54.020 --> 06:55.020
我们都处理

06:55.020 --> 06:56.020
缺过的Plugging

06:56.020 --> 06:57.020
一个数组

06:57.020 --> 06:58.020
加一个插件

06:58.020 --> 06:59.020
Clean Plugging

07:00.020 --> 07:01.020
没了

07:01.020 --> 07:02.020
没了

07:02.020 --> 07:03.020
好

07:03.020 --> 07:04.020
那接下来

07:04.020 --> 07:05.020
我来再来试一下

07:05.020 --> 07:07.020
我们再改一下代码

07:07.020 --> 07:09.020
变成123

07:09.020 --> 07:11.840
保存

07:13.840 --> 07:18.560
NPS Webpack

07:19.560 --> 07:20.560
打包完了

07:20.560 --> 07:21.560
你看

07:21.560 --> 07:22.560
是不是只有我们新的GS

07:22.560 --> 07:23.560
它之前不见了

07:23.560 --> 07:24.560
来再看一下

07:24.560 --> 07:25.560
ABC

07:25.560 --> 07:26.560
AC

07:27.560 --> 07:28.560
再看一下

07:28.560 --> 07:29.560
看这

07:30.560 --> 07:31.560
就变了

07:31.560 --> 07:32.560
它怎么做的

07:32.560 --> 07:33.560
你觉得它怎么做的

07:33.560 --> 07:34.560
如果说要说它的原理的话

07:34.560 --> 07:35.560
你觉得它是怎么做的

07:36.560 --> 07:37.560
我们之前是不是写过插件

07:37.560 --> 07:38.560
对吧

07:38.560 --> 07:39.560
是不是注册过插件事件

07:39.560 --> 07:40.560
Plugging

07:40.560 --> 07:41.560
我们是不是学过的

07:41.560 --> 07:43.560
我们再来做个例子

07:43.560 --> 07:44.560
添加文件列表

07:44.560 --> 07:46.560
我们在这里是不是做了一个例子

07:46.560 --> 07:47.560
在这里边

07:47.560 --> 07:48.560
在这里边

07:48.560 --> 07:49.560
它做怎么做的

07:49.560 --> 07:50.560
它其实很简单

07:50.560 --> 07:51.560
就去注册一个事件

07:51.560 --> 07:52.560
比方就是MS的事件

07:52.560 --> 07:53.560
在MS的时候

07:53.560 --> 07:54.560
干嘛

07:54.560 --> 07:55.560
我们

07:55.560 --> 07:57.560
它这里是不是可以使用漏的代码

07:57.560 --> 07:59.560
漏的代码是不是可以用文件

07:59.560 --> 08:01.560
就是用文件的那个

08:01.560 --> 08:02.560
操作

08:02.560 --> 08:04.560
漏的代码里边有个什么

08:04.560 --> 08:05.560
有个FS

08:05.560 --> 08:06.560
对吧

08:06.560 --> 08:07.560
FS模块

08:07.560 --> 08:08.560
就是当

08:08.560 --> 08:09.560
当MS的时候

08:09.560 --> 08:10.560
你看你自己

08:10.560 --> 08:11.560
如果你有兴趣的话

08:11.560 --> 08:13.560
你后边学到漏的文件处理

08:13.560 --> 08:15.560
你都自己可以搞定这件事

08:15.560 --> 08:16.560
当MS的时候

08:16.560 --> 08:17.560
就是注册事件

08:17.560 --> 08:19.560
因为我们插件里面是可以注册各种事件的

08:19.560 --> 08:21.560
当MS的时候干嘛呢

08:21.560 --> 08:23.560
先删除

08:23.560 --> 08:24.560
用漏的

08:24.560 --> 08:25.560
用FS模块

08:25.560 --> 08:26.560
删除

08:26.560 --> 08:27.560
电使目录

08:27.560 --> 08:29.560
当那个删目录要写一些代码

08:29.560 --> 08:31.560
删除电使目录

08:31.560 --> 08:33.560
然后呢

08:33.560 --> 08:34.560
没了

08:34.560 --> 08:35.560
然后就没了

08:35.560 --> 08:36.560
它没了

08:36.560 --> 08:37.560
它就删一下目录就完了

08:37.560 --> 08:38.560
还能干嘛呢

08:38.560 --> 08:39.560
对不对

08:39.560 --> 08:40.560
这就是这个模块

08:40.560 --> 08:42.560
它的实现原理也特别简单

08:42.560 --> 08:43.560
你知道了

08:43.560 --> 08:44.560
插件怎么回事的时候

08:44.560 --> 08:45.560
你再用这一插件

08:45.560 --> 08:46.560
你就觉得

08:46.560 --> 08:47.560
无非如此

08:47.560 --> 08:48.560
OK

08:48.560 --> 08:49.560
这就是关于这个插件

08:49.560 --> 08:50.560
没有

08:50.560 --> 08:51.560
只清楚说出目录

08:51.560 --> 08:53.560
很多时候我们如果说用VIPI可的话

08:53.560 --> 08:54.560
包括何北亚什么VU

08:54.560 --> 08:55.560
RAGAT他的脚头架

08:55.560 --> 08:57.560
默认的都会包含这个东西

08:57.560 --> 08:59.560
还默认的给你夹进来了

08:59.560 --> 09:00.560
一般我们都会用它

09:00.560 --> 09:01.560
因为手动去删

09:01.560 --> 09:03.560
之前的代码太不方便了

09:03.560 --> 09:04.560
一般用整趴

09:04.560 --> 09:05.560
来搞定这件事情

