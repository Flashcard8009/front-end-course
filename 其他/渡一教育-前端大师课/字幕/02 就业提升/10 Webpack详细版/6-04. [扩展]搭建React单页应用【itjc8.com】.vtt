WEBVTT

00:00.000 --> 00:03.000
上级课咱们搭了这个vue

00:03.000 --> 00:06.000
这级课咱们搭了一个regs

00:06.000 --> 00:10.000
regs搭起来要比一个vue简单相当多了

00:10.000 --> 00:12.000
因为vue其实它那个

00:12.000 --> 00:14.000
脚手下搭出来的东西

00:14.000 --> 00:16.000
它里面有一个叫单纹键组件

00:16.000 --> 00:17.000
对不对

00:17.000 --> 00:20.000
有这么一个就是后水鸣为vue的组件

00:20.000 --> 00:23.000
上级课只有一个地址

00:23.000 --> 00:27.000
后水鸣为vue的那个组件

00:27.000 --> 00:29.000
它里面一看它的代码结构

00:29.000 --> 00:31.000
它就不是一个纯粹的GS

00:31.000 --> 00:32.000
它里面有什么呢

00:32.000 --> 00:33.000
有template

00:33.000 --> 00:34.000
有什么

00:34.000 --> 00:35.000
有GS

00:35.000 --> 00:36.000
还有什么

00:36.000 --> 00:37.000
还有CSS

00:37.000 --> 00:40.000
因此它那个东西还需要交给

00:40.000 --> 00:44.000
一个是交给babel来进行编译

00:44.000 --> 00:46.000
另外一个还要进行模板编译

00:46.000 --> 00:49.000
所以vue它跟我们传统的GS

00:49.000 --> 00:52.000
那种协法还是有一定差距的

00:52.000 --> 00:53.000
但是在regs里边

00:53.000 --> 00:55.000
它这个差距就很小很小了

00:55.000 --> 00:57.000
几乎是没有什么差距了

00:57.000 --> 00:59.000
因为你们学过regs

00:59.000 --> 01:00.000
当这个课还是一样

01:00.000 --> 01:01.000
这些课的东西

01:01.000 --> 01:03.000
你要学过regs之后

01:03.000 --> 01:06.000
你才需要过来学习

01:06.000 --> 01:08.000
那么regs里边

01:08.000 --> 01:10.000
我们之前讲regs的时候有反复强调过

01:10.000 --> 01:13.000
regs就是原生的GS

01:13.000 --> 01:14.000
它啥都不易的

01:14.000 --> 01:16.000
regs不易在任何东西

01:16.000 --> 01:17.000
啥都不易的

01:17.000 --> 01:18.000
就是一个原生的GS

01:18.000 --> 01:19.000
只不过它后边

01:19.000 --> 01:21.000
为了让我们写代码写的方便

01:21.000 --> 01:24.000
因此给你加了一个GSx

01:24.000 --> 01:25.000
对不对

01:25.000 --> 01:26.000
说这样子

01:26.000 --> 01:28.000
因此它要做的事情

01:28.000 --> 01:29.000
其实非常简单

01:29.000 --> 01:32.000
就是编译一下GSx

01:32.000 --> 01:33.000
就是那个东西识别不了

01:33.000 --> 01:34.000
其他都能识别

01:34.000 --> 01:36.000
你看regs里边写的

01:36.000 --> 01:37.000
regs里边写的

01:37.000 --> 01:39.000
不是create element

01:39.000 --> 01:40.000
对不对

01:40.000 --> 01:41.000
那个东西

01:41.000 --> 01:43.000
就是原生GS的一个函数

01:43.000 --> 01:44.000
因此在regs

01:44.000 --> 01:45.000
搭建regs的时候

01:45.000 --> 01:46.000
你要做的无非

01:46.000 --> 01:48.000
就是在byboard里边

01:48.000 --> 01:49.000
加一个插件

01:49.000 --> 01:51.000
我们看一下官方文档

01:51.000 --> 01:54.000
byboard里面

01:54.000 --> 01:55.000
你去加一个插件

01:55.000 --> 01:57.000
点一试一试

01:57.000 --> 01:59.000
byboard里面有个插件

01:59.000 --> 02:01.000
只要你能够把regs编译一下

02:01.000 --> 02:02.000
就完事了

02:02.000 --> 02:04.000
其实也没什么东西了

02:04.000 --> 02:05.000
不要玩弄

02:05.000 --> 02:08.000
我们这里看一下

02:15.590 --> 02:16.590
试一下吧

02:16.590 --> 02:18.590
看一下现在能不能编译regs

02:24.500 --> 02:25.500
你看

02:25.500 --> 02:26.500
这个编译出来

02:26.500 --> 02:28.500
就是一个regs create element

02:28.500 --> 02:29.500
对不对

02:30.500 --> 02:32.500
里边再写一个

02:32.500 --> 02:35.880
里边再来一个

02:35.880 --> 02:37.880
后边的元素

02:37.880 --> 02:38.880
有个a元素

02:38.880 --> 02:40.880
a元素里面有一段内容

02:40.880 --> 02:43.880
然后它的属性

02:43.880 --> 02:45.880
它的属性

02:45.880 --> 02:46.880
属于一个属性

02:46.880 --> 02:48.880
就是很简单

02:48.880 --> 02:49.880
dv没有属性

02:49.880 --> 02:51.880
然后它的指源素

02:51.880 --> 02:52.880
指源素是啥

02:52.880 --> 02:53.880
一个a元素

02:53.880 --> 02:54.880
a元素里有个属性

02:54.880 --> 02:55.880
rave

02:55.880 --> 02:56.880
内容

02:56.880 --> 02:57.880
一个字不算

02:57.880 --> 02:58.880
这个代码去不去

02:58.880 --> 03:00.880
代码直接就识别出来了

03:00.880 --> 03:01.880
直接就识别出来了

03:01.880 --> 03:05.880
所以regs的达现是非常简单的

03:05.880 --> 03:06.880
好

03:06.880 --> 03:07.880
因此我们要达现regs

03:07.880 --> 03:08.880
我这里已经写好了

03:08.880 --> 03:11.880
我们直接来看一下

03:11.880 --> 03:14.880
我们这里使用

03:14.880 --> 03:15.880
进入这个桌面

03:15.880 --> 03:16.880
desk

03:16.880 --> 03:19.880
get

03:19.880 --> 03:22.380
clo

03:22.380 --> 03:26.340
把这些之前的衫

03:26.340 --> 03:33.550
然后把这个复制一下

03:33.550 --> 03:35.550
其实你们看到以后

03:35.550 --> 03:36.550
看到很多角色加的东西

03:36.550 --> 03:37.550
实际上

03:37.550 --> 03:39.550
它是那个

03:39.550 --> 03:41.550
好多都是微拍的东西

03:41.550 --> 03:44.930
好多是微拍的

03:44.930 --> 03:45.930
有vsc打开

03:45.930 --> 03:46.930
你看一下吧

03:46.930 --> 03:47.930
这边

03:47.930 --> 03:49.930
然后这边我们进入这个部落

03:49.930 --> 03:52.930
首先安装衣

03:52.930 --> 03:54.930
你会看到这几个东西

03:54.930 --> 03:55.930
就没有什么好说的

03:55.930 --> 03:56.930
因为这三个东西

03:56.930 --> 03:57.930
如果说你看

03:57.930 --> 03:58.930
听到前面几节课的话

03:58.930 --> 03:59.930
都是一样的

03:59.930 --> 04:00.930
都是一样的

04:00.930 --> 04:01.930
然后这一边

04:01.930 --> 04:02.930
无非就加上两个脚本

04:02.930 --> 04:03.930
一个是start

04:03.930 --> 04:04.930
一个是build

04:04.930 --> 04:05.930
然后我们主要

04:05.930 --> 04:06.930
看一下这里的配置

04:06.930 --> 04:07.930
这里的配置

04:07.930 --> 04:08.930
其他都一样

04:08.930 --> 04:09.930
这个东西不用说了吧

04:09.930 --> 04:10.930
这东西

04:10.930 --> 04:11.930
这东西没什么好说的

04:11.930 --> 04:12.930
都是一样的

04:12.930 --> 04:14.930
就一个地方配置

04:14.930 --> 04:16.930
有一个地方的配置有差

04:16.930 --> 04:18.930
一个是扩展名

04:18.930 --> 04:19.930
扩展名的话

04:19.930 --> 04:20.930
我们加住了GSX

04:20.930 --> 04:22.930
加住了这个扩展名

04:22.930 --> 04:24.930
然后我们在

04:24.930 --> 04:26.930
楼段里边进入配置的时候

04:26.930 --> 04:28.930
加了这么一个东西

04:28.930 --> 04:30.930
加了对GSX

04:30.930 --> 04:32.930
这两种文件

04:32.930 --> 04:34.930
把它交给babel

04:34.930 --> 04:35.930
来处理

04:35.930 --> 04:36.930
我们要做的

04:36.930 --> 04:37.930
就是在babel里边加个插件

04:37.930 --> 04:38.930
对吧

04:38.930 --> 04:39.930
babel在处理的时候

04:39.930 --> 04:41.930
我这里写了个配置文件

04:41.930 --> 04:42.930
对吧

04:42.930 --> 04:43.930
配置文件

04:43.930 --> 04:44.930
babel在处理的时候

04:44.930 --> 04:45.930
告诉她

04:45.930 --> 04:46.930
你通过这个预设

04:46.930 --> 04:47.930
怎么预设呢

04:47.930 --> 04:48.930
babel resets

04:48.930 --> 04:49.930
presets

04:49.930 --> 04:50.930
react

04:50.930 --> 04:51.930
其实我们之前

04:51.930 --> 04:52.930
讲这个babel的时候

04:52.930 --> 04:53.930
所以也提到过

04:53.930 --> 04:54.930
babel presets

04:54.930 --> 04:55.930
react

04:55.930 --> 04:56.930
加过这个预设

04:56.930 --> 04:57.930
它里边就来处理

04:57.930 --> 04:58.930
这个事情

04:58.930 --> 04:59.930
所以说我们要

04:59.930 --> 05:00.930
这里安装一个

05:00.930 --> 05:01.930
关键性的遗难

05:01.930 --> 05:02.930
就是这个babel

05:02.930 --> 05:03.930
presets

05:03.930 --> 05:04.930
react

05:04.930 --> 05:05.930
就完事了

05:05.930 --> 05:06.930
其他就没了

05:06.930 --> 05:07.930
就这个地方

05:08.930 --> 05:09.930
就比较特别

05:09.930 --> 05:10.930
那么这个地方

05:10.930 --> 05:11.930
就起到

05:11.930 --> 05:13.930
编译react文件的关键作用

05:13.930 --> 05:14.930
因为react文件里边

05:14.930 --> 05:15.930
它包含了这个

05:15.930 --> 05:17.930
GSX表达式

05:17.930 --> 05:18.930
就这个东西

05:18.930 --> 05:19.930
如果说你这里边

05:19.930 --> 05:20.930
不存在GSX

05:20.930 --> 05:21.930
首先

05:21.930 --> 05:23.930
react里面不存在

05:23.930 --> 05:24.930
你可不可以

05:24.930 --> 05:25.930
不使用这个react

05:25.930 --> 05:26.930
GSX

05:26.930 --> 05:27.930
当然是可以的

05:27.930 --> 05:28.930
你直接用这个react

05:28.930 --> 05:29.930
created element

05:29.930 --> 05:30.930
就可以做了

05:30.930 --> 05:31.930
对吧

05:31.930 --> 05:32.930
只不过来要写出来

05:32.930 --> 05:33.930
很不方便

05:33.930 --> 05:34.930
就是用GSX

05:34.930 --> 05:35.930
那么就把这个东西

05:35.930 --> 05:36.930
编译一下

05:36.930 --> 05:37.930
就完事了

05:37.930 --> 05:38.930
好 现在我们来看一下

05:38.930 --> 05:39.930
编译一下

05:39.930 --> 05:41.930
npm start

05:41.930 --> 05:42.930
我们运行一下

05:43.930 --> 05:44.930
这个其实就是

05:44.930 --> 05:45.930
一个react的初始工程

05:45.930 --> 05:47.930
我用那个react

05:47.930 --> 05:49.930
官方角色夹

05:49.930 --> 05:50.930
create-react-app

05:50.930 --> 05:51.930
这个角色夹

05:51.930 --> 05:52.930
搭建出来的文件

05:52.930 --> 05:53.930
直接复制过来

05:53.930 --> 05:54.930
有publig

05:54.930 --> 05:55.930
有src

05:55.930 --> 05:56.930
复制过来

05:56.930 --> 05:57.930
搭建出来

05:57.930 --> 05:58.930
就是这个样子

05:58.930 --> 05:59.930
所以说

05:59.930 --> 06:00.930
你把这个wipack学习

06:00.930 --> 06:01.930
为什么说wipack学习

06:01.930 --> 06:03.930
对后边的学习有好处呢

06:03.930 --> 06:05.930
很多东西就能理解了

06:05.930 --> 06:06.930
它的一脚后架

06:06.930 --> 06:08.930
本质上并没有那么复杂

06:08.930 --> 06:09.930
没有那么神奇

06:09.930 --> 06:10.930
就是用这个达着

06:10.930 --> 06:13.930
这是关于react的搭建

