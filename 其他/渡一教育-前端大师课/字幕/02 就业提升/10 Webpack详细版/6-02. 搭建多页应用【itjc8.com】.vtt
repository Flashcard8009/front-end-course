WEBVTT

00:00.000 --> 00:04.360
接下来几节课 给大家讲一些用WePack搭建的一些案例

00:04.860 --> 00:08.460
这些课呢我们来说一下多页应用 那么肉是什么场景呢

00:08.960 --> 00:11.780
这个东西啊 给大家说一下 就不再

00:12.280 --> 00:18.420
一步一步给大家写了 有一个一个插件安装 然后一个一个楼阻安装 然后去配置 没有必要了

00:18.680 --> 00:22.780
我就已经给大家搭建好了 你们以后在工作中呢 直接把它拿过来用

00:23.040 --> 00:28.420
如果说不满足你们的实用场景的话 因为你们学过WePack对吧 那么你们再上他的基础上

00:28.880 --> 00:31.200
修修补补 基本上也没什么问题了

00:31.700 --> 00:32.980
因为WePack呢他

00:34.260 --> 00:39.820
之所以要我们要去学习他 就是因为现在呢 还没有就是说形成一种统一的

00:40.400 --> 00:47.260
规范 比如说比方多页应用程序 我们就用一种模式来搭建 他没有这种统一的规范 也说说白了 就是没有什么的

00:47.520 --> 00:48.600
没有最佳时间

00:49.280 --> 00:53.800
因此呢 他每一种工程的可能都是过多过少化 会有一些差异

00:54.660 --> 01:02.820
我这里给大家搭建了一个呢 就是说能够满足大部分情况吧 如果说你们以后呢 有一些特别的情况或者是公司有一些特别的要求

01:03.220 --> 01:09.620
需要自己手动的WePack搭的话 你可以把我这个工程啊 拿过去 然后修修改干 基本上也就够用了

01:10.220 --> 01:14.020
好 这就是这个地方 给他说一点 什么叫多页应用程序呢 就是说

01:14.980 --> 01:19.300
你们以后在工作中啊 遇到这么一种场景 比方开发一些纯粹的静态页面

01:19.840 --> 01:29.360
就是公司里边做一些商城 商城里边呢 最近快装11了 或者是618要搞一些活动 那么搞活动的时候呢

01:31.000 --> 01:38.480
可能会出一些静态页面 让马上完成 时间很短 那么这个时候呢 你可以利用WePack来搭一些工程 然后迅速的给他做出来

01:39.040 --> 01:45.520
这些页面呢 都没有什么特别的东西啊 每个页面也比较简单 就是用介石啊 做一些动态效果 比方说

01:46.100 --> 01:55.700
页面上有些什么抽奖啊 轮波图啊 这些东西啊 也小的效果啊 可能页面比较多 可能有五六个七八个页面 像这种情况下呢 就非常适合

01:56.180 --> 02:00.180
搭建一个多页应用程序 那么这个呢 我已经给大家搭建好了

02:02.100 --> 02:07.340
用的方法呢 非常简单啊 你首先打开一个控制台 然后呢 进入

02:08.320 --> 02:15.680
我们就要到桌面吧 在桌面上呢 用拉取一下啊 把这个命令复制过来 拉取一下

02:17.640 --> 02:20.680
好 稍等片刻 把整个工程拉取下来

02:21.800 --> 02:27.040
然后我来讲一讲这个工程里边怎么来用啊 好 ok 拉取下来了 然后呢 我进入这个目录啊 就在桌面上

02:27.600 --> 02:29.360
就这个玩意儿啊 进入这个目录

02:31.680 --> 02:32.800
进入那个位

02:33.100 --> 02:33.820
multipart

02:37.980 --> 02:46.590
然后呢 打开啊 用vscode打开他 打开之后呢 我们要安装他的一代 npm

02:47.310 --> 02:51.230
安装他的一代 他一代比较多啊 这里边一代 我们看一下拍个点节省

02:52.310 --> 02:56.190
你看这里边 基本上都是开发一代啊 然后呢

02:57.750 --> 03:05.270
普通一代的话 根据你的情况 我这里一代了一个结块位 如果说你有别的情况的话 你八个三了啊 如果说不需要结块位 把三了

03:05.470 --> 03:13.310
你至于去写都行啊 你是要安装什么一代至于去安装 好 那么工程拿去管了过后呢 我们也安装好了 各个所有的一代包

03:13.870 --> 03:19.630
安装好了之后 我们来看一下这个工程啊 有人我们来怎么来用他 用的方式 我们来首先看一下他的效果

03:20.750 --> 03:25.190
我们比方说把它运行出来 运行有两种方式 一种是用npm装

03:25.910 --> 03:26.550
npm装

03:28.150 --> 03:31.110
代步 就是用开发模式来运行 就在这

03:31.930 --> 03:42.130
你看 开发模式来运行 你看这里的配置 是不是表示的是啊 用了什么dev server来运行 对吧 而且呢 给他加了一个配置文件 配置文件的话是使用这个配置文件

03:43.010 --> 03:46.530
使用这个配置文件来进行运行啊 运行看一下

03:47.930 --> 03:51.970
那么这个时候他又会弹出一个页面啊 我已经写了一些势力页面啊 要弹出来了

03:52.530 --> 03:57.690
那么就是这就是一个页面对吧 两个页面啊 夺页应用程序吧 非常简单啊 就写了一个势力

03:58.330 --> 04:00.730
当然你们要做具体的例子的话 你们自己去做啊

04:01.410 --> 04:07.010
好 这是开发模式 然后呢 如果说生产环境下呢 生产环境下呢 我们用npm装build

04:08.130 --> 04:13.970
好运行 你看一下这边 是不是就用微派打包 使用了配置文件 使用了配置文件是这个文件

04:14.490 --> 04:16.490
pro production.js

04:17.690 --> 04:25.490
好 然后我们打包完成过后呢 他会在dev瀆目录下面 你看这里是不是生成了我们想要的 并且呢启动了压缩包 你看是不是有压缩

04:26.350 --> 04:33.630
有这个5icon 有这个各个页面 对吧 我们有两个页面 然后呢 js在这 对吧 每个js也有压缩包 csm在这

04:33.950 --> 04:38.110
也有对应的压缩包 原来的意思吧 好 那我们这里写完了啊

04:39.150 --> 04:45.070
然后呢 页面上的后面可以弹出来一个东西 这个东西是什么呢 我讲过了 对吧 就是分析一个分析的插件

04:45.350 --> 04:48.710
分析我们的包的大小 我们每一个包的大小可以把它分析出来

04:49.350 --> 04:53.630
好 这就是两种打包模式 一种是生产环境 一种是开发环境

04:53.930 --> 04:59.250
那么接下来我来说一下 这里边它怎么回事 首先大家看到这两个配置文件啊 一个是生产环境的

04:59.490 --> 05:04.610
一个是开发模式的配置文件 一个是生产环境的配置文件 还有一个呢是未拍个config.js

05:05.450 --> 05:11.730
那么可以想象 这个玩意呢 应该是无论是生产环境还是开发环境 所以都要用到的配置文件

05:11.970 --> 05:20.170
对吧 那么就有这三个未拍的配置 好 咱们首先看一下这个dev.js啊 这个里边很简单就是模式是开发模式

05:21.150 --> 05:22.750
然后呢 启用这个sourcemap

05:23.390 --> 05:29.190
然后大家建一下开发服务器 自动打开流量器 然后端口号是8080都讲过了 对不对

05:29.830 --> 05:35.110
然后这里配置一个stats 来控制台 打包的时候 来控制台里面 输出少一点 开发模式下面

05:35.510 --> 05:40.950
然后proxy呢 表示那个代理 对吧 也讲过了 这都全是讲过了 不再最初了

05:41.270 --> 05:45.990
如果说你有代理配置的话 在这里已经配置完了 然后我们在这里要导入这个基础

05:46.290 --> 05:52.690
基础配置啊 就在这个文件 在这个里面导入了一个基础配置 然后通过未拍个mergy啊 这个讲过没

05:53.890 --> 06:00.090
我都忘了想没讲过了啊 呃 未拍个mergy是这样子啊 这里我都加了一个注释的

06:01.370 --> 06:02.650
未拍个mergy呢 是一个

06:04.130 --> 06:11.490
相当于是一个工具 他可以 他就是帮你来合并两个配置啊 你看 他给你提供一个mergy函数 把基础配置传进来

06:12.030 --> 06:18.110
然后呢 把我们的这个配置传进来 他会把后边的配置呢 覆盖前面的配置啊 相应的地方进行覆盖

06:18.550 --> 06:25.390
对不对啊 那么这就是 最后呢 覆盖完成过后呢 形成一个配置 把这个配置导出 这就是开发模式的配置

06:25.870 --> 06:34.270
生产环境是一样的 生产环境我们来看一下 生产环境呢 也是利用基础配置啊 利用这个mergy 最终呢 还是把基础配置和这个

06:35.130 --> 06:44.450
这个名字写的不好啊 这个应该是prod config 管它的吧 我一会再改一改 那么这个配置 顺便把它覆盖掉 基础配置

06:45.010 --> 06:48.930
那么在生产环境里边 我们的配置呢 mode production dev tool呢 就是

06:49.730 --> 06:58.210
物使用那个 source map 然后这里呢 我写了一个优化项啊 优化项呢 其他的保存默认 然后呢 就加了一个styles 就加了一个css的优化

06:58.950 --> 07:07.910
是不是加一个css的优化 我们讲过了对不对 好然后呢 parkings 里边呢 我们加了一个就是分析程序啊 一个分析的插件 就是看一下每个包打包出来的大小是多少

07:08.350 --> 07:12.710
然后呢 加了这么一个插件 就是压缩插件 对吧 把它打成 打成一个压缩包

07:13.510 --> 07:18.870
打成gg啊 这压缩包好 这是生产环境的配置 那么接下来就是就是

07:19.350 --> 07:25.310
基础配置的啊 基础配置我们来看一下啊 这个配置里边有点多 应该有90多行 其实也没有太多了啊

07:25.930 --> 07:27.370
基础配置里边呢 我们看一下这里

07:29.010 --> 07:34.610
首先入口呢 因为我们是多页应用程序嘛 那么入口来自于哪呢 入口呢 我这里写了一个函数

07:35.410 --> 07:43.130
来动态获取入口 因为我们入口配置不就是这样的配置吗 还记得吗 我们入口是怎么配置的 如果就是创可名字 对吧 然后呢

07:43.690 --> 07:48.330
入口文件 入口模块的名字 对不对 那么我就用专门用一个函数来生成这么一个对象

07:49.050 --> 07:53.410
get entry 这个函数来生成这个对象 这个对象呢 我就是写了一个对象n去 然后呢

07:54.030 --> 07:57.470
循环什么呢 循环配几式 循环这个文件

07:58.270 --> 08:05.670
这是方便你们使用的 这个文件里面要把你们配置页面啊 比方说我们有这么一个页面 index这个页面 它的创可名字就是index

08:06.430 --> 08:10.830
那么它的GS就是入口文件在哪呢 入口文件在src配几式

08:11.790 --> 08:12.350
index

08:13.110 --> 08:17.950
这个文件讲下面 这个文件讲下面默认是不是读index的GS 对吧 是不是默认读这个文件

08:18.930 --> 08:22.090
那么以这个文件为入口 明显的意思吧 就是这么个意思啊

08:22.850 --> 08:29.610
再看一下 配几式 就是我自己定义了一个配置文件 那么这个文件呢 就是创可名字 在它的入口模块的文字

08:29.890 --> 08:35.250
然后它的模办 页面模办在哪呢 页面模办 我这里呢一般把它放到同一个文件讲下面

08:35.530 --> 08:40.770
就是一个页面呢 它是一个文件讲 这个文件讲下面呢 有它的入口的GS 有它的模办

08:41.050 --> 08:44.850
就是atm模办 有它的css 对吧 我就把它全部放在一起

08:45.390 --> 08:52.870
这样子呢 管理起来比较方便 我们这里的GS入口模块给它配置一下 然后我们论文就是它的模办

08:53.830 --> 08:57.150
页面模办在哪 给它配置一下 对吧 也在这个 就这个文件

08:57.670 --> 09:01.790
然后呢 它输出目录的时候 到这个电视目录的时候 它的文件名是啥

09:02.230 --> 09:04.350
我们给它取个名字叫index的atm

09:04.870 --> 09:09.310
好 还有一个页面 而报程页面 它的创可名字叫而报制 它的入口模块在这

09:10.150 --> 09:11.390
在这 就这个GS

09:12.130 --> 09:16.690
那么它的atm页面呢 在这 奥射 它的输出的结果呢

09:17.330 --> 09:20.930
而报制的atm 输出的结果是要而报制的atm

09:21.930 --> 09:27.690
明白吧 好 我们把这个配置写好了 过后呢 到这边来 最终我们是要应用到这边吧 所以这边用起来就很简单了

09:27.930 --> 09:33.890
把这个配置导入进来 导入进来过后呢 我们这里是不是可以用循环 对吧 循环那个对象 你看这是不是对象吗

09:34.130 --> 09:39.410
循环对象的所有属性 那么每一个属性呢 就该加一个n去 对吧 n去的名字就是index

09:39.630 --> 09:44.190
两个n去嘛 一个index 一个而报制 那么它的入口模块呢 是不是赌它的GS

09:44.470 --> 09:47.470
对吧 赌它的GS这个属性 那么我们打印出来看一下

09:48.310 --> 09:49.590
输出get n去

09:51.150 --> 09:55.690
好 运行npm装

09:56.250 --> 09:56.650
dev

09:58.450 --> 10:04.330
好 看这边 你看得到什么这个东西 那么我们就以这个东西作为入口 对吧 作为入口配置

10:05.090 --> 10:06.770
没问题吧 我们把它作为入口配置

10:07.550 --> 10:17.430
那么之后呢 我们写页面的时候呢 是不是只需要去改动这里就行了 对吧 比方他们加了一个页面 我们只需要在这里再去配置一下就完事了 那么这些东西是不是可以不用动

10:17.990 --> 10:26.110
对不对啊 就配置简单一点 好 今天我们再往下看啊 输出目录呢 在哪呢 输出目录呢 我们把getn文件呢输出到这个地方

10:27.110 --> 10:27.590
get

10:28.510 --> 10:35.790
输出到getn目录下面的啊 用这么一个文件名 你们自己看 应该能看得到 public pass我们讲过的对吧 不用再追溯了

10:36.250 --> 10:38.650
pass 那就输出目录呢 就给它写设置为desk

10:39.770 --> 10:49.130
好 接下来我又做了一个事情 就是加了一些别名啊 就是我们的 都是讲过的啊 加了一些别名 别名的我们在导入魔化的时候呢 可以使用一个ata来表示

10:49.970 --> 10:57.370
src目录 用一个下滑线来表示工程跟目录 都是讲过的 好 然后呢 加了一些控制台的输出啊 就是减化一下控制台的输出

10:57.890 --> 11:03.730
然后接下来就是我们的楼段啊 楼段里边呢 我们写 我这里写了三个楼的 如果说不够的话 你们以后再自己加

11:04.450 --> 11:07.290
三个楼的一个是关于文件的楼段啊 就是如果说

11:08.250 --> 11:15.850
遇到一些文件比方图片啊 比方说字体字体文件啊等等等等啊 如果说遇到这样的文件了 我们使用url楼段来处理

11:16.370 --> 11:26.170
那么他如果说文件比较小的话 他就是用bass64编码 对吧 这也学过的 如果说文件比较大的话 那么他就是那个 把它放到这个目录啊 我把它放到这个目录

11:27.170 --> 11:30.490
啊 这是第一个楼段 第二个楼段呢 我们看一下 我使用了

11:31.010 --> 11:39.810
对于这个css和pscss 就是posed css文件 因为我这个工程是用posed css来搭建的 就是对央视的处理是使用posed css

11:40.090 --> 11:48.890
所以对于这两种文件呢 我们先用posed css楼段处理一下 然后再交给css楼段 然后呢 交给mini mini css extract

11:49.770 --> 11:53.850
啊 这个楼段 那么这个楼段干嘛的 讲过的 他是把它打包成一个css文件

11:54.450 --> 12:01.370
对不对 好 那么最后呢 是gss啊 gss能么用babelloader 对吧 用babelloader来进行处理 好了吧 这个

12:02.730 --> 12:09.570
loader是不是写完了 好 接下来是procings啊 就是插件 插件呢 我这里用了这么一些插件 意思清楚这个调整部路

12:10.050 --> 12:20.930
另外一个呢 是copy啊copy plugin 表示我们要把这个public部路下面 public部路下面 随便你有什么东西 无论你有什么东西 只要你一有 我就原封不动的 把它写到输出部路里边去

12:21.650 --> 12:28.010
就这么个意思 好 这讲过的啊 好 接下来呢 就是模板了 就是atman web 就是这个东西了

12:29.090 --> 12:35.890
哎atman web pack plugin 就这个东西了 那么这个东西是不是要写多个 因为我们是有多业应用程序吧 是不是写多个

12:36.290 --> 12:42.610
那么有多少个呢 是不是 根据这边的配置来 这边配置了两个页面 那么这边是不是要配置两个atman plugin 对不对

12:42.610 --> 12:45.170
所以说我这里就写了一个函数动态获取

12:45.430 --> 12:48.750
我这个函数就写了个数组 对吧 因为无非就是一个数组

12:49.010 --> 12:51.570
写个数组 然后循环这个配极室里边

12:53.980 --> 12:55.500
循环这个配极室里边

12:55.760 --> 12:58.580
这个配极室里边有一个属性 那么就是一个页面

12:58.840 --> 13:01.660
那么每一个页面呢 我们就生成一个往这个数组里边加一个

13:02.160 --> 13:05.240
加一个什么呢 加一个就是ATMVPAC plugin的对象

13:05.500 --> 13:08.820
好 加一个对象 然后创可了 它对应的创可了是不是跟那个

13:09.080 --> 13:11.120
这边就跟那个创可名字一样 对吧

13:11.900 --> 13:13.940
是不是跟它一样的 对吧 一个

13:13.940 --> 13:15.980
其实它这个东西就是一个

13:16.240 --> 13:20.860
ATMVPAC plugin 对不对 我根据一个就生成一个ATMVPAC plugin

13:21.100 --> 13:24.440
然后Templex 模板 模板在哪呢 是不是在这里配置的

13:24.700 --> 13:27.760
对不对 所以说我这里把ATMVPAC图出来

13:28.020 --> 13:29.040
把配置进去

13:29.300 --> 13:31.340
后层呢 就是我们输出的结果呢

13:32.120 --> 13:33.140
写到办法链里面

13:33.660 --> 13:37.240
好 那么我们这里就生成了一个数组 这个数组里边就记录了多个

13:37.500 --> 13:41.340
有多少个页面 我就记录了有多少个ATMVPAC plugin

13:41.800 --> 13:45.900
然后我们在这里只需要得到这个数组 然后把它展开 放到这 说就完事了

13:46.420 --> 13:49.740
我这样写的好处在于什么呢 就在于我们以后呢 如果说这个配置

13:50.000 --> 13:52.040
就是你觉得这个东西你可以用

13:52.300 --> 13:53.060
不需要更改

13:53.320 --> 13:56.900
那么我们之后呢 写页面的时候 这三个文件可以不用去动

13:57.160 --> 13:59.200
我们只需要去动这个介石文件就行了

13:59.460 --> 14:02.020
不要说我加了一个页面在这里去配置一个页面就完事了

14:02.280 --> 14:03.300
其他就不用去动了

14:03.820 --> 14:07.400
好 最后我们写了这个东西 这东西没什么好说的 打包CSS的

14:07.660 --> 14:09.440
把CSS保存到CSS的文件下边

14:09.700 --> 14:10.480
对吧 没问题了

14:11.000 --> 14:14.320
那么这个跟目录下面 我们看到还有一些文件

14:14.580 --> 14:17.140
不用讲了吧 这个BableRC 对吧 背部的配置

14:17.400 --> 14:20.720
然后呢 Browserless 这是流量器兼容的

14:20.980 --> 14:24.820
然后呢这个PoseCSS对吧 PoseCSS的配置 其他就没了

14:25.080 --> 14:25.580
对不对

14:26.100 --> 14:27.640
好 接下来我们看一下SRC

14:27.900 --> 14:31.980
SRC呢 其实目录呢 没有什么严格的要求 我真的只是给它做了个例子

14:32.240 --> 14:33.520
我建议大家呢 就是

14:33.780 --> 14:37.620
规划一下这个目录 比方说把目录呢 把页面的写到这个配置里边

14:38.080 --> 14:39.360
那么比方说我们这有两个页面

14:39.620 --> 14:43.200
而Pose页面和Index页面 一个页面的就是一个文件夹

14:43.460 --> 14:44.740
每个文件夹里边呢 就是

14:45.000 --> 14:46.800
有页面的CSS 有页面的

14:47.040 --> 14:47.560
模板

14:47.820 --> 14:48.840
有页面的GS

14:49.600 --> 14:54.220
那么Index页面 首页也是 有页面的CSS 模板和Index的第二GS

14:54.980 --> 14:55.480
好

14:55.740 --> 14:57.280
那么如果说有公共的

14:57.540 --> 15:00.360
公共的模块怎么办呢 比方说模板里边

15:00.620 --> 15:01.880
页头和页角

15:02.140 --> 15:03.180
他们可能是有公共

15:03.380 --> 15:06.140
公共区域 比方说你看这个页头和页角

15:06.400 --> 15:10.300
无论是关于页面还是首页页面 是吧 他们的页头和页角是不是一样的

15:10.820 --> 15:14.400
对不对 是不是一样的 那么遇到这种情况的话怎么办呢

15:15.160 --> 15:16.700
我在这里呢 建了一个common文件夹

15:16.960 --> 15:19.020
那么这里边专门来写一些公共的模板

15:19.520 --> 15:20.540
比方说像Header

15:20.800 --> 15:23.620
Header就是我们的页头 对不对 页头呢 这里呢

15:23.860 --> 15:26.940
他有一个图片 你看页头里面 这里是不是一个图片

15:27.200 --> 15:28.740
他有一个图片 SVG图片

15:29.500 --> 15:30.520
然后呢 有一个

15:30.780 --> 15:31.800
页头的GS

15:32.000 --> 15:34.560
页头的有一些GS 主要是设置这个样式的 你看

15:34.820 --> 15:36.620
选中样式的 我根据当前

15:36.880 --> 15:39.680
我根据当前的地址和这个A远处的地址

15:39.940 --> 15:42.500
来匹配 匹配到了我就把设置给特殊的样式

15:42.760 --> 15:46.080
有页头的样式 我是用Pose CSS来写的

15:46.340 --> 15:48.380
有页头的模板 对不对

15:48.640 --> 15:50.180
好 那么我们来看一下啊

15:50.440 --> 15:52.480
在GS里面很简单

15:52.740 --> 15:55.000
在GS里面我们要做什么事情呢 你就直接去做

15:55.260 --> 15:57.340
比方说我们导入Jquery去匹配这个样式

15:57.600 --> 16:00.680
还有呢 我们一代CSS 对吧 CSS可以搞定了

16:00.880 --> 16:03.180
GS CSS都搞定了

16:03.700 --> 16:04.720
然后呢 我们

16:04.980 --> 16:09.080
Footer也是一样 有自己的GS 有自己的CSS 有自己的模板

16:09.340 --> 16:11.120
然后我们来怎么用呢 你看一下

16:11.380 --> 16:13.420
比方说我们在首页里面 我们就去导入

16:13.680 --> 16:17.020
首先用公共的CSS 比方说Resets CSS

16:17.280 --> 16:17.780
公共的

16:18.540 --> 16:20.600
有这个Resets 就是重置样式

16:20.860 --> 16:24.440
我们在英这个社里面去导入这些重 就是我们要公共用的东西

16:24.700 --> 16:27.260
CSS啊 还有自己的CSS啊 对吧

16:27.460 --> 16:28.260
还有什么呢

16:28.500 --> 16:30.800
Sets里面一个全聚的CSS

16:31.060 --> 16:33.760
全聚的CSS 都可以啊 这些东西看你谁要哪

16:34.020 --> 16:36.940
无所谓不是说一定要去导致 根据你自己的情况

16:37.200 --> 16:40.520
然后呢 我们要引用公共部分的GS

16:40.780 --> 16:43.600
因为你看啊 每一个区域它其实有样式

16:43.860 --> 16:44.860
有那个

16:45.540 --> 16:48.200
模板 有那个GS 对吧

16:48.460 --> 16:50.240
所以说呢 我们还要去引用它的GS

16:50.500 --> 16:54.080
因为它的GS里面是不是包含了公共部分Header

16:54.340 --> 16:56.400
GS里面是不是包含了样式 对不对

16:56.600 --> 16:59.460
因为我们一切都是从GS入出发 对不对

16:59.720 --> 17:02.120
一切都是从GS出发 所以我们只要需要去引用它

17:02.360 --> 17:05.920
对于公共部分只需要去引用它的GS就可以了 你看

17:06.160 --> 17:07.680
Footer Header 对吧

17:08.120 --> 17:10.760
写了两个文件夹 那么它会自动去夹在这个文件夹下面的

17:11.000 --> 17:12.000
英这个社的GS

17:12.280 --> 17:16.160
它就使用它的GS 从GS入口出发来导到它所谓的一带

17:17.240 --> 17:21.280
然后呢 就插最后一个部分了 什么部分呢 就是模板里边

17:21.680 --> 17:23.760
模板里边是我们要到出出目录的

17:23.960 --> 17:24.960
模板里边

17:25.360 --> 17:29.080
它怎么用公共部分呢 这个以前好像没有讲过 这里说一下

17:29.920 --> 17:32.080
模板里边要使用公共部分很简单

17:32.400 --> 17:34.960
这个东西是ATMVPAC Plugging

17:36.200 --> 17:38.920
就是读模板那个插件它就可以搞定

17:39.160 --> 17:40.720
但是你的写法呢 你是这样子写

17:40.960 --> 17:44.960
比方说我在这里要引用液头 我怎么写呢 我就写Require

17:45.200 --> 17:46.760
有一个loader叫ATM loader

17:48.040 --> 17:51.760
然后呢 这句话什么意思啊 有感到什么意思 叫内联引用

17:51.960 --> 17:57.600
就是这个loader内联加债 什么意思呢 就是把这个模块呢 交给这个loader来进行处理

17:58.360 --> 17:59.360
把这个模块

17:59.840 --> 18:01.200
交给这个loader来进行处理

18:01.960 --> 18:05.560
好 那么它就会把这个comment下面的header index的ATMV

18:05.800 --> 18:10.480
它就会把这个header index的ATMV去 把这个东西交给谁来处理呢 交给

18:11.520 --> 18:14.880
ATM loader 那么这个东西怎么来处理呢 这个东西处理的方式非常简单

18:15.160 --> 18:16.800
它就把这个ATMV里边的东西

18:17.560 --> 18:19.360
放到哪里 内容放到这

18:19.880 --> 18:21.400
替换掉这 就完事了

18:21.800 --> 18:27.040
同样的Footer也是一样 把Footer这个ATM文件交给他来处理 他就会把这个文件内容放到这

18:28.120 --> 18:30.000
得到这个文件内容 明白了意思吧

18:31.440 --> 18:37.200
那么处理的是过程中呢 如果说他遇到了这个这种就是路径的话 那么他会对他进行有依赖

18:37.640 --> 18:47.120
然后他我们之前配置的 对于这个文件是要经过urlloader来处理 对不对 那么他会经过urlloader来处理 替换了真正的路径 你看一下吧

18:47.640 --> 18:48.480
点击右键 检查

18:49.480 --> 19:00.040
你看 他把T换成了什么BS64 对吧 OK 那么这就是关于这一块的处理方式 那么这样子呢 公共部分液头和液角是不用重复写的

19:00.280 --> 19:06.400
你看英这个社里边 他只处理自己特殊的部分 而且而Baltz里边呢 也是只处理自己特殊的部分

19:07.720 --> 19:15.560
好 那么大家可以向来仔细去观摩一下啊 这里边其实东西也不复杂啊 就是你用我们学过的东西 就有一点点没有学过就是

19:16.080 --> 19:18.240
这个东西啊 以前忘了讲了 这里说一下

19:19.200 --> 19:26.200
其他都是学过的 对不对 只把综合运用起来 搭建了一个多页运用程序啊 可以好 其实你要读这个代码的话 也很简单的读什么呢

19:26.560 --> 19:33.040
就读这个三个配置文件 看这三个配置文件在玩什么啊 这怎么玩的 你说这三个配置文件的读动啊 基本上就读动了

19:33.560 --> 19:38.560
好 这是一个多页运用程序啊 我就没有大家一步一步去写了啊 一步一步去写的话 太繁琐了

19:38.880 --> 19:45.640
好 给他写好了 把他放到这个微拍 把放到个github上面 大家以后的工作中 如果说要需要用到这个场景的话 去下载

19:46.240 --> 19:48.440
去可以去 至于下载可以去修改一下

19:49.360 --> 19:52.080
OK 那么说是关于这节课啊 多页运用程序的搭建

