WEBVTT

00:00.000 --> 00:05.560
OK 上节课的话 我们看了那个react里面的JSX

00:05.560 --> 00:10.680
我们知道了在react中通过JSX来描述我们的页面

00:10.680 --> 00:13.600
好 这节课的话 咱们来看这么两个东西

00:13.600 --> 00:17.880
一个是react中 如何来书写这个组件

00:17.880 --> 00:21.680
第二个的话 就是你组件里面如何绑定这个世界

00:21.680 --> 00:24.880
因为我们后面讲什么State 或者是这些

00:24.880 --> 00:27.680
很多都是要用通过那个世界 我们来触发

00:27.880 --> 00:30.400
所以我们这边的话 刚才提前就把这个事件

00:30.400 --> 00:32.720
在讲组件的时候就提前就把它讲了

00:32.720 --> 00:36.640
OK 我们先来看这个react中的这个组件

00:36.640 --> 00:41.120
在react中的话 他有两种声明组件的这个方式

00:41.120 --> 00:45.560
一种是什么 一种是通过这个内来进行声明

00:45.560 --> 00:48.880
另外一种的话 就是通过这个函数

00:48.880 --> 00:52.120
OK 我们首先来看这个第一种

00:52.120 --> 00:55.480
把这个清空吧 先把这个清空

00:56.440 --> 01:00.080
这个这个上解课的代码是吧 我们直接把这些干掉

01:01.520 --> 01:06.680
直接把这些干掉 不要 好 然后接下来把这个回归到最

01:07.640 --> 01:10.040
原始的状态 对吧 我们这边给个DIV

01:11.960 --> 01:14.520
个DIV好 写个Hello OK

01:16.200 --> 01:19.880
好 这个的话 是不是就是我们在搭建项目的时候

01:19.880 --> 01:22.760
是我们的组件就是长这个样子了 对不对

01:22.760 --> 01:25.160
我们的APP跟组件 这个是跟组件

01:25.960 --> 01:27.880
和那个vue是一样的

01:27.880 --> 01:31.240
vue那个是不是也是叫app.view 对吧

01:31.240 --> 01:32.520
这是跟组件

01:34.280 --> 01:38.520
OK 你看它这边的话就是采用的是一个函数组件

01:38.520 --> 01:40.360
那函数组件的话 其实就是什么

01:40.360 --> 01:42.280
就是你这边的话 他要求你什么

01:42.280 --> 01:46.360
所以你retur必须要返回一段ges他

01:46.360 --> 01:48.360
对吧 我们这边const了一个n

01:48.360 --> 01:50.280
这边对应的是一段ges他

01:50.360 --> 01:53.720
那你这边的话必须要返回一段ges他

01:53.720 --> 01:57.160
这个的话就是函数组件在这里

01:57.160 --> 02:00.200
OK 你需要返回一段ges他

02:00.200 --> 02:04.840
用来表示什么 表示这个组件的ui是什么样子的

02:04.840 --> 02:06.920
那早期的这个函数组件的话

02:06.920 --> 02:09.640
它被称之为无状态组件

02:09.640 --> 02:11.160
什么叫做无状态组件

02:11.160 --> 02:13.240
就在这个组件的内部

02:13.240 --> 02:17.160
它是不能够维护自身组件的这个数据的

02:17.160 --> 02:18.600
但现在可以了

02:18.600 --> 02:21.320
现在的话就是从16.8开始

02:21.320 --> 02:23.560
他推出了一个叫做hooks

02:23.560 --> 02:26.040
这个我们后面会看hooks

02:26.040 --> 02:27.560
那现在的话就也就是说

02:27.560 --> 02:30.200
在我们的这个函数组件里面

02:30.200 --> 02:33.640
你现在也可以有自己的组件状态了

02:33.640 --> 02:37.000
所以现在的话 你看就是我们新建项目的时候

02:37.000 --> 02:39.160
你看它这边的话就是直接给你一个什么

02:39.160 --> 02:40.520
函数组件

02:40.520 --> 02:44.520
以前的话早期的时候你创建这个react项目

02:44.520 --> 02:47.400
它跟组件的话 它其实写的是一个内组件

02:47.400 --> 02:49.960
你看它现在慢慢就变了

02:49.960 --> 02:53.160
对吧 就自从这个hook推出了之后

02:53.160 --> 02:55.640
我们函数组件可以有自己的这个状态

02:55.640 --> 02:59.080
所以现在的话更多的就是都是在写函数组件了

02:59.080 --> 03:02.280
这个的话是非常重要的一种方式

03:02.280 --> 03:05.080
就我们后面的话基本上不出意外

03:05.080 --> 03:07.080
我想一想 应该没什么意外

03:07.080 --> 03:09.080
我们就都是用的是函数组件

03:09.080 --> 03:10.760
包括后面那个项目

03:10.760 --> 03:13.720
后面那个项目就全部都是用的是函数组件

03:13.720 --> 03:16.760
OK 现在这个内组件就用的越来越少了

03:17.320 --> 03:21.480
那你注意 就是整个react

03:21.480 --> 03:24.520
从内组件转到函数组件

03:24.520 --> 03:26.920
它不仅仅说是因为这个hook出现

03:26.920 --> 03:31.000
我们函数组件更加方便 更加减便

03:31.000 --> 03:33.480
所以说这个就是更多的使用函数组件

03:33.480 --> 03:35.480
不是 这个其实代表着什么呢

03:35.480 --> 03:39.560
代表着整个react变成思想的一种转变

03:39.560 --> 03:42.120
这个我们后面讲这个hook的时候

03:42.120 --> 03:43.400
我们还会再来说

03:43.400 --> 03:44.920
它整个思想

03:45.080 --> 03:49.480
从面向对向的思想转向了函数式变成了思想

03:49.480 --> 03:51.880
OK 这个后面再来说

03:51.880 --> 03:56.280
反正早期的话 就是早期这个函数被称之为无状态

03:56.280 --> 03:57.880
但现在的话已经不是了

03:57.880 --> 03:59.720
我这边强调一个早期

03:59.720 --> 04:01.720
免了一个同学跟我抬杠 是吧

04:01.720 --> 04:03.880
早期的函数组件

04:03.880 --> 04:06.920
OK 那个时候的函数组件就干嘛呢

04:06.920 --> 04:08.280
就纯u i展示

04:08.280 --> 04:09.720
什么叫做纯u i展示

04:09.720 --> 04:12.600
就是我这边的话 我返回一段接使它

04:12.680 --> 04:14.280
对不对 甚至那个时候的话

04:14.280 --> 04:16.040
我这边都不需要写什么

04:16.040 --> 04:17.560
那个时候更多的就什么呢

04:17.560 --> 04:19.400
更多的就直接在这里return

04:20.520 --> 04:21.480
return

04:21.480 --> 04:22.920
然后既然这边的话写你

04:22.920 --> 04:25.080
要返回到这个接使叉

04:26.680 --> 04:28.680
OK 就在这写就可以了

04:28.680 --> 04:31.720
当然这个函数组件

04:31.720 --> 04:32.760
虽然它当时的话

04:32.760 --> 04:34.440
它内部无法有自己的状态

04:34.440 --> 04:36.120
但是它还是可以接受

04:36.120 --> 04:38.760
外部给它传入的这个数据

04:38.760 --> 04:40.520
这个我们下节可再来说

04:40.600 --> 04:42.520
关于这个组件的这个数据

04:42.520 --> 04:43.400
OK

04:43.400 --> 04:45.720
所以早期函数组件的话

04:45.720 --> 04:46.920
它其实更多的就是什么呢

04:46.920 --> 04:49.000
就是这种展示性的组件

04:50.520 --> 04:51.960
我写到哪里了

04:51.960 --> 04:54.040
它无状态 它就是仅仅是做展示

04:54.760 --> 04:57.240
我们经常称这个函数组件

04:57.240 --> 05:00.040
我们叫做这个无状态的这种展示性组件

05:00.040 --> 05:01.000
它就是拿来展示

05:01.000 --> 05:03.400
就是因为你这边是返回一段接使叉嘛

05:03.400 --> 05:07.080
接使叉是不是描述了你整个这个页面

05:07.080 --> 05:08.200
或者说你这个组件

05:09.080 --> 05:10.280
对不对 它长什么样子

05:11.480 --> 05:14.520
早期的这个函数组件就被称之为展示性组件

05:15.640 --> 05:17.960
早期的时候更多的是使用什么呢

05:17.960 --> 05:19.640
更多的是使用内组件

05:20.600 --> 05:21.160
看不看

05:21.160 --> 05:21.960
在wrapped中的话

05:21.960 --> 05:23.640
它还提供了就是你可以使用内

05:24.360 --> 05:27.720
使用内也可以创建一个组件

05:27.720 --> 05:30.280
好 来我们来看一下这个内组件怎么来写

05:30.280 --> 05:31.560
我们把这个注射掉

05:32.440 --> 05:33.800
这个是一个函数组件

05:36.490 --> 05:38.250
这个是一个函数组件

05:38.250 --> 05:40.650
接下来的话我们来写一个内组件

05:42.490 --> 05:43.290
内组件

05:43.290 --> 05:45.130
好 内组件的话这边就是class

05:46.010 --> 05:47.930
class 然后接下来这边app

05:48.650 --> 05:50.650
OK 正常情况下来讲的话

05:50.650 --> 05:52.170
你这个是不是就是一个类

05:52.170 --> 05:52.570
对不对

05:52.570 --> 05:54.490
但这边它要求你要去继承

05:55.210 --> 05:57.610
所以这是es6里面的语法了

05:57.610 --> 05:58.970
继承 继承什么呢

05:58.970 --> 06:01.450
继承wrapped.component

06:02.250 --> 06:03.690
wrapped 是不是我们这边引入了的

06:04.250 --> 06:04.810
对吧

06:04.810 --> 06:07.210
wrapped 然后接下来点component

06:07.210 --> 06:09.850
那很明显你知道wrapped.component

06:09.850 --> 06:11.930
肯定也是一个什么

06:12.010 --> 06:13.770
这不肯定也是一个class类

06:14.730 --> 06:15.450
对不对

06:15.450 --> 06:16.650
肯定也是一个class类

06:17.450 --> 06:19.050
好 然后接下来在这里面怎么写呢

06:19.690 --> 06:21.610
你回忆一下就是你的这个

06:21.610 --> 06:23.130
你学es6的时候

06:23.130 --> 06:23.690
整个类

06:24.250 --> 06:25.050
类是怎么写的

06:26.490 --> 06:27.930
类的话无外乎就是什么

06:27.930 --> 06:29.770
你这边那比如说一个constructor

06:30.970 --> 06:31.370
对不对

06:31.370 --> 06:33.370
constructor 然后接下来这边一个super

06:33.370 --> 06:36.250
然后把这个props 传给这个附类

06:37.530 --> 06:38.490
然后还有什么

06:38.490 --> 06:41.130
还有就是会有各种各样的这种方法

06:42.010 --> 06:42.490
对不对

06:42.490 --> 06:44.090
然后加你在这边的话

06:44.090 --> 06:44.810
你可以写什么

06:44.810 --> 06:47.690
是不是可以写各种各样的这种实力

06:47.690 --> 06:47.930
对不对

06:47.930 --> 06:50.090
比如这个constructor 接受这个类目

06:50.090 --> 06:51.290
注意我这边在复习

06:51.850 --> 06:54.410
复习那个es6类的写法

06:54.410 --> 06:55.850
比如我这边可以接受

06:56.490 --> 06:58.410
你在实力化我这个类的时候

06:58.410 --> 06:59.610
传入的这个参数

06:59.610 --> 07:00.810
然后加我这边什么复制

07:01.690 --> 07:02.170
对吧

07:02.170 --> 07:04.010
z点price

07:05.450 --> 07:06.490
等于一个price

07:07.210 --> 07:09.530
然后super的话必须得写在什么

07:09.530 --> 07:10.810
这必须得写在第一行

07:11.690 --> 07:12.010
对不对

07:12.650 --> 07:13.850
props is not defined

07:14.490 --> 07:15.370
在这边的话对

07:16.010 --> 07:16.650
接受一下

07:18.170 --> 07:18.490
对不对

07:19.450 --> 07:21.690
这个super必须写在第一行

07:21.690 --> 07:22.890
然后后面就写什么

07:22.890 --> 07:25.530
是不是后面就写你各种各样的实力方法

07:26.650 --> 07:27.530
对吧

07:27.530 --> 07:29.450
以前的话这个类就是这么写的

07:29.450 --> 07:31.530
那在这个req中

07:31.530 --> 07:34.570
你这边如果要用类来作为组件的话

07:34.570 --> 07:36.410
有一个方法是必须要写的

07:36.410 --> 07:37.210
叫做什么呢

07:37.210 --> 07:38.090
叫做render

07:39.050 --> 07:40.970
叫做render方法

07:40.970 --> 07:42.970
render方法render什么意思

07:42.970 --> 07:44.810
render是不是就是渲染的意思

07:44.810 --> 07:45.930
对不对

07:45.930 --> 07:47.370
好render方法里面

07:47.370 --> 07:49.530
你当然这里面你可以写你其他的这个逻辑

07:49.530 --> 07:51.050
因为它毕竟它就是一个方法

07:51.050 --> 07:51.370
对吧

07:51.370 --> 07:52.570
你可以写你其他逻辑

07:52.570 --> 07:54.730
好让它要求你必须你这个方法

07:54.730 --> 07:58.330
最后必须要返回一段gsa

07:58.330 --> 07:59.530
看了没有

07:59.530 --> 08:02.650
这个的话和我们刚才那个类组件

08:02.650 --> 08:04.970
类组件这一块的这个return

08:04.970 --> 08:06.250
是不是要求是一样的

08:06.250 --> 08:07.450
那个函数组件

08:07.530 --> 08:08.410
函数组件

08:08.410 --> 08:11.370
和刚才那个函数组件这一块要求是不是一样的

08:11.370 --> 08:13.610
函数组件的话要求你这边是不是

08:13.610 --> 08:15.770
你反正你要给我返回一段gsa

08:15.770 --> 08:16.890
这里也是一样

08:16.890 --> 08:18.490
这里类组件的话它要求你

08:18.490 --> 08:22.170
render方法里面必须要返回一段gsa

08:22.170 --> 08:23.770
那我们这边我们来看一下

08:25.930 --> 08:28.010
这里就出来了

08:28.010 --> 08:29.130
对不对

08:29.130 --> 08:29.930
就出来了

08:29.930 --> 08:33.050
这是关于这个类组件

08:33.050 --> 08:34.010
但类组件的话

08:34.010 --> 08:35.850
然后还有一些其他的东西

08:35.930 --> 08:37.450
包括比如你的这个pops

08:37.450 --> 08:38.810
怎么设置你的state

08:38.810 --> 08:39.450
怎么设置

08:39.450 --> 08:41.290
这个我们后面讲到了我们再说

08:41.290 --> 08:42.810
我们先认识清楚什么

08:42.810 --> 08:45.050
先认识清楚就是在req里面

08:45.050 --> 08:47.050
声明组件有这么两种形式

08:48.250 --> 08:48.730
ok

08:48.730 --> 08:52.090
你先知道有这两种形式就ok了

08:52.090 --> 08:52.810
就ok了

08:52.810 --> 08:54.890
剩下的东西我们后面一点一点来加

08:55.610 --> 08:56.410
一点一点来加

08:57.450 --> 08:59.290
注意这个类组件你至少就是

08:59.290 --> 09:00.570
至少要有一个render方法

09:01.210 --> 09:03.770
render方法里面返回一段gsa

09:04.490 --> 09:04.890
注意

09:06.250 --> 09:07.290
好那这边的话

09:07.290 --> 09:09.450
首先给大家介绍了一下这个组件

09:10.010 --> 09:11.210
好那接下来还紧接着

09:11.210 --> 09:11.770
我们就来看一下

09:11.770 --> 09:14.330
这个如何为组件来绑定事件

09:15.050 --> 09:15.610
你现在的话

09:15.610 --> 09:16.810
你学了这个组件

09:16.810 --> 09:18.250
也学了这个接视差

09:18.250 --> 09:19.690
你这个描述页面的话

09:19.690 --> 09:22.090
基本就是描述页面的能力

09:22.090 --> 09:22.890
你就有了

09:22.890 --> 09:23.130
对吧

09:23.130 --> 09:24.490
你知道如何来描述

09:24.490 --> 09:26.090
我这个页面长什么样子

09:26.090 --> 09:28.250
或者说我这个组件长什么样子

09:28.810 --> 09:31.130
但往往我们组件里面会设计到什么

09:31.130 --> 09:33.290
会设计到就是事件的触发

09:33.850 --> 09:34.090
好

09:34.090 --> 09:35.450
那接下来在这个req中

09:35.930 --> 09:37.290
如何来绑定事件呢

09:38.170 --> 09:40.730
在req中绑定事件的写法

09:40.730 --> 09:41.690
这样子的

09:41.690 --> 09:43.770
这边的话首先这个on

09:43.770 --> 09:45.370
然后接下来注意这边

09:46.010 --> 09:49.770
这边的话是你绑定事件的类型

09:50.490 --> 09:51.370
那这个类型的话

09:51.370 --> 09:52.650
你注意这个click

09:52.650 --> 09:54.330
这边这个c是什么

09:54.330 --> 09:55.210
c是大写

09:55.770 --> 09:57.690
你要注意和那个就是

09:57.690 --> 09:59.610
传统的html去分开

09:59.610 --> 10:00.730
传统的html是不是

10:00.730 --> 10:02.090
我们是可以这样子来写的

10:02.810 --> 10:03.770
onclick

10:04.650 --> 10:05.210
对不对

10:05.290 --> 10:05.930
onclick

10:05.930 --> 10:06.890
但是在req中的话

10:06.890 --> 10:08.650
他要求你这边c是大写

10:08.650 --> 10:08.970
这边呢

10:08.970 --> 10:10.570
他其实是一个托风秘密法

10:11.290 --> 10:11.690
对吧

10:11.690 --> 10:12.890
他本质上其实是什么

10:12.890 --> 10:14.090
是不是这个对象吗

10:14.650 --> 10:15.050
对了

10:15.050 --> 10:15.610
所以这个的话

10:15.610 --> 10:16.650
其实也很好理解

10:16.650 --> 10:17.530
他是对象吗

10:17.530 --> 10:18.250
这边的话

10:18.250 --> 10:19.290
他是接识对象

10:19.290 --> 10:20.090
接识

10:20.090 --> 10:21.130
接识对象里面

10:21.130 --> 10:21.770
那我们这边的话

10:21.770 --> 10:22.810
这个属性名

10:22.810 --> 10:24.490
要求这个托风秘密法

10:24.490 --> 10:25.210
对吧

10:25.210 --> 10:25.450
OK

10:26.410 --> 10:26.650
好

10:26.650 --> 10:27.930
来我们来试一下吧

10:27.930 --> 10:28.570
我们来试一下

10:29.130 --> 10:30.730
我们把这个先注释掉

10:30.730 --> 10:32.570
我们回归到我们的函数组件

10:33.530 --> 10:35.450
回归到我们的函数组件

10:35.450 --> 10:36.490
函数组件的话

10:36.490 --> 10:38.170
然后我们这边来绑一个试件

10:38.170 --> 10:39.370
比较这边的话

10:39.370 --> 10:40.250
bar 它们

10:40.250 --> 10:41.130
写个按钮

10:43.660 --> 10:44.620
好按钮

10:44.620 --> 10:45.020
好

10:45.020 --> 10:46.140
然后在这边绑试件

10:46.140 --> 10:46.860
on

10:46.860 --> 10:47.900
然后接下来是什么

10:47.900 --> 10:48.860
是不是click

10:49.660 --> 10:50.300
对不对

10:50.300 --> 10:51.420
c大写

10:51.420 --> 10:51.740
好

10:51.740 --> 10:52.940
然后在这边等于

10:52.940 --> 10:53.180
好

10:53.180 --> 10:53.820
那后面

10:53.820 --> 10:54.620
后面的话

10:54.620 --> 10:57.500
就应该写你的试件处理函数

10:57.500 --> 10:57.740
好

10:57.740 --> 10:59.100
那我们这边写一对

10:59.980 --> 11:00.700
划扩胡

11:01.740 --> 11:02.380
OK

11:02.380 --> 11:02.700
好

11:02.700 --> 11:03.260
然后这样的话

11:03.260 --> 11:04.300
你试件处理函数

11:04.300 --> 11:04.780
我们这边

11:05.980 --> 11:06.780
就写个什么呢

11:06.780 --> 11:07.500
我们在这里

11:07.500 --> 11:09.820
我们再来定义一个函数

11:09.820 --> 11:10.460
放心

11:10.460 --> 11:11.660
不要叫做click

11:12.620 --> 11:13.020
handle

11:14.940 --> 11:15.420
对吧

11:15.420 --> 11:15.660
好

11:15.660 --> 11:16.140
然后接下来

11:16.140 --> 11:17.100
然后你就把这个

11:17.100 --> 11:19.260
这个函数就是你的试件处理函数

11:19.260 --> 11:20.220
我们把这个函数名

11:21.020 --> 11:21.660
把他过来

11:22.460 --> 11:23.020
OK

11:23.020 --> 11:23.260
好

11:23.260 --> 11:23.820
你在这边的话

11:23.820 --> 11:25.100
你就可以写你

11:25.100 --> 11:27.900
这个触发这个点击试件人的时候

11:27.900 --> 11:29.740
对应他要做什么事情

11:29.740 --> 11:30.460
那比我们这边

11:31.180 --> 11:33.020
你点击了

11:33.900 --> 11:34.860
你点击了

11:36.540 --> 11:37.180
OK

11:37.180 --> 11:37.420
好

11:37.420 --> 11:38.300
我们保存一下

11:38.300 --> 11:38.860
保存了之后

11:38.860 --> 11:39.740
我们这边来看一下

11:40.460 --> 11:40.700
走

11:41.580 --> 11:42.700
搞定了

11:42.700 --> 11:43.180
对了

11:43.180 --> 11:44.060
这边就出发了

11:45.260 --> 11:45.900
好

11:45.900 --> 11:46.780
然后接下来

11:46.780 --> 11:47.580
继续往后面看

11:49.260 --> 11:50.380
在req中

11:50.380 --> 11:52.140
无法通过这个

11:52.140 --> 11:53.500
rater force

11:53.500 --> 11:55.660
来阻止默认行为

11:55.660 --> 11:56.460
如果你要阻止

11:56.460 --> 11:57.180
默认行为的话

11:57.180 --> 11:57.900
你怎么办呢

11:57.900 --> 11:59.100
你只能通过这个

11:59.100 --> 12:01.420
1.prevent default的方式

12:02.060 --> 12:02.700
那你回顾一下

12:02.700 --> 12:05.100
这个1.prevent default

12:05.100 --> 12:05.900
这个e是什么

12:06.860 --> 12:08.780
e的话是不是事件对象

12:09.660 --> 12:10.140
对不对

12:10.140 --> 12:11.820
我们之前在学那个

12:11.820 --> 12:14.380
原生动物的那个事件那个章节的时候

12:14.380 --> 12:15.180
我们知道

12:15.180 --> 12:18.380
就是你所书写的这个事件处理函数

12:18.380 --> 12:21.340
他会自动的传入一个事件对象

12:22.540 --> 12:23.740
那这个事件对象

12:23.740 --> 12:24.540
自动传入的话

12:24.540 --> 12:27.260
这个对象上面是不是就会包含很多

12:27.340 --> 12:29.340
你这次出发事件的一些

12:29.340 --> 12:30.540
有用的这个信息

12:31.420 --> 12:31.980
对吧

12:31.980 --> 12:33.340
那在这个req中

12:33.340 --> 12:34.780
他这边依然会

12:34.780 --> 12:36.460
你的这个事件处理函数里面

12:36.460 --> 12:39.260
依然会给你传入这么一个这个对象

12:39.260 --> 12:39.980
但是你要注意

12:39.980 --> 12:40.540
这个对象

12:40.540 --> 12:43.100
他不是原生的事件对象

12:43.100 --> 12:44.460
我们这边我们可以来看一下吧

12:45.900 --> 12:47.260
比如我们这边接受一下e

12:48.380 --> 12:49.260
接受一下e之后

12:49.260 --> 12:50.460
然后向我们这边打印一下

12:52.920 --> 12:55.160
c2g1打印这个e

12:55.720 --> 12:56.440
OK

12:56.440 --> 12:56.680
好

12:56.680 --> 12:58.120
我们这边让我们来走

12:58.200 --> 12:59.400
我把这个拉上来一点

13:01.160 --> 13:01.720
走

13:01.720 --> 13:02.440
你看

13:02.440 --> 13:03.400
这边首先

13:03.400 --> 13:04.600
他是不是他是个对象

13:04.600 --> 13:04.840
对

13:04.840 --> 13:05.640
你看这边

13:05.640 --> 13:06.440
有对话呵呵

13:06.440 --> 13:07.400
他是个对象

13:07.400 --> 13:07.960
但是呢

13:07.960 --> 13:11.240
他不是原生的这个动物事件

13:11.240 --> 13:13.560
这个动物的这个事件对象

13:13.560 --> 13:14.600
你看他这边的话是这个

13:15.240 --> 13:16.280
synthetic

13:17.000 --> 13:18.440
然后这个base event

13:19.640 --> 13:20.120
这是什么

13:20.120 --> 13:21.960
他是一个合成事件对象

13:23.000 --> 13:24.280
这个在他的这个官网

13:24.280 --> 13:25.480
这边其实也写的有

13:26.280 --> 13:28.440
官网对应这个核心概念

13:30.440 --> 13:31.480
这边事件处理

13:32.200 --> 13:32.840
事件处理

13:33.640 --> 13:34.520
在这里

13:35.240 --> 13:35.960
看到没有

13:35.960 --> 13:36.600
e的话

13:36.600 --> 13:39.960
他是一个合成事件的这个对象

13:39.960 --> 13:40.920
也就是说你简单

13:40.920 --> 13:41.560
就现在

13:41.560 --> 13:42.920
现在你简单理解

13:42.920 --> 13:44.040
就是react的话

13:44.040 --> 13:45.240
他针对你的这个

13:45.240 --> 13:46.360
你绑定了事件

13:46.920 --> 13:48.680
包括传入的这个事件对象

13:49.240 --> 13:51.080
他是做了这个特殊处理

13:51.880 --> 13:53.880
他是进一步的做了这个封装的

13:54.520 --> 13:55.000
OK

13:55.160 --> 13:56.920
说传入了这个事件对象

13:56.920 --> 13:58.360
是一个合成事件对象

13:58.360 --> 13:59.720
那整个事件的话

13:59.720 --> 14:00.760
是一个合成事件

14:01.800 --> 14:02.920
当然具体是

14:02.920 --> 14:04.120
什么是合成事件

14:04.680 --> 14:05.160
对吧

14:05.160 --> 14:07.000
react究竟对这个事件

14:07.000 --> 14:08.280
做的什么样的处理

14:08.760 --> 14:11.080
这个我们放到这个就业篇来介绍

14:11.560 --> 14:12.760
我们这边的话入门篇

14:12.760 --> 14:13.960
我们就不展开了

14:13.960 --> 14:14.840
我们入门篇的话

14:14.840 --> 14:15.720
讲究的就是快

14:16.280 --> 14:16.600
对吧

14:16.600 --> 14:17.720
大家快速上手

14:18.200 --> 14:19.880
快速的能够通过这个react

14:20.840 --> 14:22.440
做出来一个这个项目出来

14:23.000 --> 14:23.480
OK

14:23.800 --> 14:24.440
说这个

14:24.440 --> 14:25.400
什么是合成事件

14:25.400 --> 14:26.840
我们在入门篇就不展开了

14:29.080 --> 14:30.200
但是你要知道

14:30.440 --> 14:31.400
你要知道就是

14:32.200 --> 14:33.000
他这个事件

14:33.000 --> 14:34.120
他这边是做了处理的

14:34.680 --> 14:35.400
事件对象的话

14:35.400 --> 14:37.080
不是原生的这个事件对象

14:37.080 --> 14:37.640
就这点

14:37.640 --> 14:38.600
这个点你要知道

14:39.160 --> 14:39.400
OK

14:41.480 --> 14:41.880
好

14:41.880 --> 14:44.280
然后我如果我想拿原生的事件对象

14:44.280 --> 14:45.400
能不能拿得到呢

14:45.400 --> 14:46.680
也能够拿得到

14:46.680 --> 14:49.800
你通过这个1点这个lative event

14:50.440 --> 14:52.280
通过这种方式就可以拿得到

14:52.360 --> 14:53.720
比如说我们这边可以来看一下

14:54.920 --> 14:55.720
比如说我这边的话

14:55.720 --> 14:56.760
console.log1

14:56.760 --> 15:01.560
下面的话再是这个1点lative event

15:02.440 --> 15:03.400
这个的话他就是什么呢

15:03.400 --> 15:04.840
就是拿到的是这个

15:04.840 --> 15:06.280
原生的动物事件对象

15:06.760 --> 15:06.920
好

15:06.920 --> 15:07.880
我们这边保存一下

15:09.640 --> 15:09.880
好

15:09.880 --> 15:10.600
我们这边来看一下

15:11.080 --> 15:11.800
把点清空

15:12.760 --> 15:13.560
点击

15:13.560 --> 15:14.280
你看

15:14.280 --> 15:15.640
两个打印出来是不是不一样

15:15.640 --> 15:16.680
你看这边

15:16.680 --> 15:19.320
这个是syntec best event

15:19.320 --> 15:21.240
合成的这个事件对象

15:21.320 --> 15:23.000
这个是pointer event

15:23.000 --> 15:25.960
这个就是我们原生的这个事件对象

15:25.960 --> 15:26.680
OK

15:26.680 --> 15:29.000
原生的这个动物事件对象

15:29.000 --> 15:29.400
你看

15:30.120 --> 15:31.000
对吧

15:31.000 --> 15:31.240
OK

15:32.840 --> 15:33.080
好

15:33.080 --> 15:33.960
然后我们这边的话

15:33.960 --> 15:35.000
我们要阻止

15:35.000 --> 15:36.520
阻止这个默认行为的话

15:36.520 --> 15:40.360
我们就通过1点prevent default

15:40.360 --> 15:43.160
他就是不能通过这个retroforce

15:43.160 --> 15:43.720
这一点的话

15:43.720 --> 15:45.160
他在这个官网也是写了的

15:45.800 --> 15:48.040
你在这个官网这可以看得到的

15:48.040 --> 15:48.440
在这里

15:49.640 --> 15:50.040
看没有

15:50.600 --> 15:52.040
在react中

15:52.040 --> 15:53.640
另一个不同点

15:53.640 --> 15:55.880
是你不能通过retroforce

15:56.600 --> 15:58.200
来阻止默认行为

15:58.200 --> 15:59.720
就以前你在html里面

16:00.440 --> 16:02.040
你这边比如说unsubmit对吧

16:02.040 --> 16:03.000
你写一段代码

16:03.000 --> 16:05.320
你这边是可以通过retroforce

16:05.880 --> 16:07.480
来阻止默认行为的

16:08.120 --> 16:09.400
我不知道这个大家知不知道

16:09.400 --> 16:10.760
可能有的同学都不知道是吧

16:11.400 --> 16:13.720
你这边是可以通过retroforce来阻止的

16:13.720 --> 16:14.840
但是在react中

16:14.840 --> 16:16.680
你就不能通过这种方式

16:16.680 --> 16:19.880
你必须显示的使用prevent default

16:20.280 --> 16:22.280
也就是说你这边的话必须得这样子写

16:22.760 --> 16:24.280
来我们这边来试一下

16:25.960 --> 16:26.680
来试一下

16:26.680 --> 16:27.880
我这边好像有个例子

16:28.840 --> 16:29.560
就这个

16:29.560 --> 16:31.080
我这边有个A标签

16:32.200 --> 16:33.160
我这边来看一下

16:34.760 --> 16:35.400
好

16:35.400 --> 16:37.080
我这里的话

16:37.080 --> 16:38.840
我这边加一个这个

16:40.040 --> 16:41.480
然后把A标签放进去

16:43.000 --> 16:44.120
把这个放进去

16:44.120 --> 16:45.000
格式画一下

16:45.800 --> 16:46.920
好

16:46.920 --> 16:47.720
我这边的话

16:47.720 --> 16:49.480
然后绑定了一个事件

16:50.520 --> 16:52.040
这个就不存在

16:52.040 --> 16:53.240
因为我们这个是函数

16:53.240 --> 16:53.880
对吧

16:53.880 --> 16:54.200
好

16:54.200 --> 16:56.680
我们这边让我们来写一个event handler

16:58.120 --> 17:00.040
方形event handler

17:01.800 --> 17:02.440
ok

17:02.440 --> 17:02.760
好

17:02.760 --> 17:04.200
你如果默认你什么都不干的话

17:04.200 --> 17:05.320
他这边这个hurray for

17:05.320 --> 17:06.760
他是不是会跳转到百度

17:07.800 --> 17:08.440
对吧

17:08.440 --> 17:09.880
你看这边你现在点击一下

17:11.400 --> 17:12.760
他是不是就跳到百度去了

17:12.760 --> 17:13.080
对吧

17:13.080 --> 17:15.400
然后接下来我要阻止他的这个默认事件

17:15.400 --> 17:16.360
怎么阻止

17:16.360 --> 17:19.160
这边接受到他的这个合成事件对象

17:19.160 --> 17:19.880
反复强调

17:20.200 --> 17:21.800
他是一个合成事件对象

17:21.800 --> 17:22.040
好

17:22.040 --> 17:25.240
然后加这边e.prevent default

17:26.040 --> 17:26.360
ok

17:27.000 --> 17:27.160
好

17:27.160 --> 17:28.360
然后加这边来试一下

17:28.360 --> 17:28.600
走

17:29.400 --> 17:30.360
这就被阻止掉了

17:31.080 --> 17:31.800
对吧

17:31.800 --> 17:32.760
这点注意

17:32.760 --> 17:34.360
你要阻止默认事件

17:34.360 --> 17:36.760
你必须的显示的通过这个

17:37.640 --> 17:39.720
e.prevent default的方式来阻止

17:41.960 --> 17:43.320
而这边传入的事件对象

17:43.320 --> 17:44.360
是一个合成事件对象

17:44.360 --> 17:45.560
这个刚才也说了

17:45.560 --> 17:46.440
你要访问的话

17:46.440 --> 17:47.880
通过lative event

17:47.880 --> 17:48.920
这个也说了

17:48.920 --> 17:49.560
ok

17:49.560 --> 17:51.640
这就是关于react中

17:51.640 --> 17:54.040
我如何来绑定这个事件

17:54.040 --> 17:55.720
我们先提前把它讲了

17:55.720 --> 17:56.360
照理说的话

17:56.360 --> 17:57.880
根据他这个官网

17:57.880 --> 17:58.760
根据他这个官网

17:58.760 --> 18:00.760
他这边我们上集可是不是讲的是

18:00.760 --> 18:03.160
JSA简介和这个元素渲染

18:03.160 --> 18:04.040
讲的是这个

18:04.040 --> 18:06.040
他这边官网过了之后就是组建

18:06.040 --> 18:08.600
然后props state生命周期

18:08.600 --> 18:10.680
但是我们这个props和state

18:10.680 --> 18:11.640
我们这边的话

18:11.640 --> 18:13.400
都会涉及到就是我们后面的话

18:13.400 --> 18:16.360
会涉及到一些事件交互的一些操作

18:16.360 --> 18:18.200
所以我先提前把这个事件处理

18:18.200 --> 18:19.080
我先把它讲了

18:19.720 --> 18:20.040
ok

18:21.640 --> 18:23.240
好来看下一个点

18:23.240 --> 18:24.360
下一个点

18:24.360 --> 18:25.960
race指向

18:25.960 --> 18:28.840
包括像这个事件处理寒宿船餐

18:28.840 --> 18:29.640
先来说这个

18:29.640 --> 18:31.320
先说这个race的指向

18:31.320 --> 18:33.560
就这个的话实际上是什么

18:33.560 --> 18:36.600
实际上是针对这个内组件的

18:36.600 --> 18:38.920
因为内组件是不是才会涉及到

18:38.920 --> 18:39.960
race啊

18:39.960 --> 18:40.280
对吧

18:40.280 --> 18:42.520
你寒宿组件不存在什么race

18:42.520 --> 18:43.960
那你在内组件里面

18:43.960 --> 18:46.920
它就存在一个race指向的问题

18:46.920 --> 18:48.440
好来我们这边我们来看一下

18:49.880 --> 18:51.080
好把这个寒宿组件

18:51.080 --> 18:53.080
我们把它注释掉

18:53.960 --> 18:55.080
注释掉之后

18:55.080 --> 18:56.840
然后接下来我们把这个内组件

18:56.840 --> 18:57.640
我们把它打开

18:58.360 --> 18:59.000
打开之后

18:59.000 --> 18:59.480
然后接下来

18:59.480 --> 19:02.680
我比如说我给它绑定一个点击事件

19:03.880 --> 19:05.320
ok好同样

19:05.320 --> 19:06.200
那接下来的话

19:06.200 --> 19:07.480
这边该怎么写

19:07.480 --> 19:08.840
这边的话我这里

19:08.840 --> 19:09.960
我写一个

19:09.960 --> 19:12.200
比如说click handle

19:14.040 --> 19:14.440
对吧

19:14.440 --> 19:16.760
这个是我对应的这个事件处理寒宿

19:17.080 --> 19:18.200
比较这边anert

19:19.320 --> 19:20.280
anert

19:20.280 --> 19:20.840
比较hello

19:21.800 --> 19:23.800
ok好那我这边该写什么呢

19:23.800 --> 19:25.400
我这边能直接就这样子写吗

19:25.400 --> 19:26.760
click handle吗

19:26.760 --> 19:27.720
因为它是找不到的

19:28.760 --> 19:29.720
可不可以啊

19:29.720 --> 19:30.120
找不到的

19:30.120 --> 19:31.000
因为你这是个内

19:31.000 --> 19:31.480
内的话

19:31.480 --> 19:33.000
我这边我想访问到

19:33.000 --> 19:34.520
它得通过什么

19:34.520 --> 19:36.360
就得通过race关键字

19:37.160 --> 19:38.360
race代表什么

19:38.360 --> 19:40.680
race是不是代表这个内的实力

19:41.400 --> 19:41.960
你这个的话

19:41.960 --> 19:43.800
我们其实我们之前在讲这个

19:44.840 --> 19:46.040
这个es6内的时候

19:46.040 --> 19:47.320
我们就称这个是一个什么

19:47.320 --> 19:48.760
是不是是一个实力方法

19:49.480 --> 19:50.120
对不对

19:50.120 --> 19:50.760
实力方法

19:50.760 --> 19:52.520
你race就是指向这个实力的

19:52.520 --> 19:53.480
所以我们这边通过

19:53.480 --> 19:55.080
race点click handle

19:56.200 --> 19:57.160
这边才能就是

19:57.880 --> 19:59.960
对应的这个click handle这个方法

19:59.960 --> 20:00.920
我们来看一下好不好使

20:02.680 --> 20:03.960
好我们这边我们走一下

20:05.240 --> 20:06.840
我们把这个还是改成那个吗

20:06.840 --> 20:07.640
还是改成but

20:09.480 --> 20:10.920
不然感觉怪怪的是吧

20:10.920 --> 20:11.960
一个div在哪

20:13.400 --> 20:13.960
按扭

20:14.280 --> 20:15.960
保存

20:15.960 --> 20:17.240
保存之后

20:17.240 --> 20:18.200
然后就在这边走

20:19.000 --> 20:20.680
就出发了对不对

20:20.680 --> 20:21.800
你看我这边的话

20:21.800 --> 20:23.160
区别就在于这里

20:23.160 --> 20:23.720
这里的话

20:23.720 --> 20:25.480
你需要是this

20:26.600 --> 20:27.560
需要是this

20:27.560 --> 20:28.120
但这里的话

20:28.120 --> 20:29.160
就会存在一个问题

20:29.720 --> 20:31.000
往往我在这里面

20:31.640 --> 20:32.280
这里面的话

20:32.280 --> 20:33.800
我是需要访问到

20:33.800 --> 20:36.360
我的这个内的这个实力的

20:36.360 --> 20:37.000
但是你这边

20:37.000 --> 20:38.040
你打印这个race

20:39.160 --> 20:40.840
我们打一下这个race

20:40.840 --> 20:41.560
我们来看一下

20:42.280 --> 20:44.200
好这边的话走

20:44.200 --> 20:45.720
你会发现这个race的话

20:45.720 --> 20:47.160
它是一个undefine

20:47.720 --> 20:48.680
它是个undefine

20:48.680 --> 20:49.640
为什么

20:50.520 --> 20:51.800
为什么会是个undefine

20:52.440 --> 20:53.320
这个的话

20:53.320 --> 20:54.600
其实在它官网有说

20:54.600 --> 20:56.840
这个其实并不是react的问题

20:57.560 --> 20:59.000
并不是react的问题

20:59.000 --> 20:59.720
而是什么呢

21:00.840 --> 21:01.800
看一下

21:01.800 --> 21:03.800
就是到时候我们讲那个

21:03.800 --> 21:04.920
合成事件指南的时候

21:04.920 --> 21:05.640
我们这边

21:05.640 --> 21:06.840
大家有兴趣的话

21:06.840 --> 21:07.880
可以先去看一下

21:07.880 --> 21:08.440
就在这

21:08.440 --> 21:09.720
这事件这它是不是

21:09.720 --> 21:12.280
这里给了链接的

21:12.280 --> 21:14.840
就是官网针对这个合成事件

21:14.840 --> 21:16.120
它的一个这个说明

21:16.120 --> 21:16.840
你如果有兴趣

21:16.840 --> 21:17.640
你可以提前去看

21:17.640 --> 21:19.320
这个我们后面就业篇的时候

21:19.320 --> 21:20.200
我们会讲的

21:21.240 --> 21:21.880
好

21:21.880 --> 21:23.800
然后它官网说的

21:23.800 --> 21:25.080
在我看race

21:25.080 --> 21:25.880
这里

21:25.880 --> 21:27.000
这里看到没有

21:27.000 --> 21:29.160
当你调用这个函数的时候

21:29.160 --> 21:32.120
race的值为undefine

21:32.120 --> 21:34.680
这个其实不是react的问题

21:35.320 --> 21:36.600
它其实是什么呢

21:36.600 --> 21:38.120
其实是这个js

21:39.080 --> 21:41.160
涉及到这个js底层

21:41.160 --> 21:43.240
它race本身是不是就有些问题

21:44.280 --> 21:45.000
明白吧

21:45.000 --> 21:45.400
OK

21:45.400 --> 21:46.360
所以我们这边的话

21:46.360 --> 21:48.360
需要去修正它的这个race

21:48.920 --> 21:50.200
如何修正呢

21:50.200 --> 21:51.160
这边的话

21:51.160 --> 21:52.360
有三种方式

21:53.480 --> 21:54.040
三种方式

21:54.040 --> 21:55.080
首先第一种

21:55.080 --> 21:57.400
将你的事件处理函数

21:57.400 --> 21:59.320
修改为箭头函数

21:59.320 --> 22:00.520
其实第一种和第二种

22:00.520 --> 22:02.520
其实基本是一个原理

22:03.080 --> 22:03.720
就是什么

22:03.720 --> 22:05.560
是不是就把它修改成箭头函数

22:06.360 --> 22:07.000
对不对

22:07.160 --> 22:09.560
和亲思想就是修改成箭头函数

22:09.560 --> 22:12.120
你要么把这个事件处理函数

22:12.120 --> 22:14.040
修改成箭头函数

22:14.040 --> 22:15.960
你要么在绑定的时候

22:15.960 --> 22:17.240
你绑定的时候

22:17.240 --> 22:19.560
大家使用这个箭头函数的方式

22:19.560 --> 22:21.320
来进行一个绑定

22:21.320 --> 22:22.360
OK

22:23.640 --> 22:24.280
好

22:24.280 --> 22:26.200
那我们这边我们来看一下

22:26.200 --> 22:27.240
就两种方式

22:27.240 --> 22:28.120
首先第一种

22:28.120 --> 22:30.040
第一种的话就是你把这个

22:30.040 --> 22:33.880
这个的话你把它修改成一个箭头函数

22:33.880 --> 22:38.260
这边应该是等于是吧

22:38.580 --> 22:39.460
OK

22:39.460 --> 22:41.140
把我的这个click handle

22:41.140 --> 22:43.540
把它改成一个箭头函数

22:43.540 --> 22:46.180
箭头函数它内部是不是没有瑞士

22:46.180 --> 22:47.620
没有瑞士它就会找什么

22:47.620 --> 22:49.220
是不是找外部的

22:49.220 --> 22:49.780
对不对

22:49.780 --> 22:50.260
找外部

22:50.260 --> 22:51.540
我们学过这个箭头函数

22:51.540 --> 22:53.300
我们知道箭头函数的这个瑞士

22:53.300 --> 22:55.140
它是不是是找外称的

22:55.140 --> 22:57.380
然后接下来它这个瑞士就会指向这个

22:57.380 --> 22:58.660
组件的实力

22:58.660 --> 22:59.220
OK

22:59.220 --> 23:00.740
我们来看一下

23:00.740 --> 23:01.380
第一种

23:03.380 --> 23:04.260
走

23:04.260 --> 23:05.620
搞定了

23:05.620 --> 23:06.260
对不对

23:06.260 --> 23:06.820
第一种

23:07.780 --> 23:10.260
这边这个是方法1

23:10.260 --> 23:12.260
方法1的话

23:12.260 --> 23:14.260
将事件处理函数

23:14.260 --> 23:15.540
修改成这个

23:16.420 --> 23:16.660
好

23:16.660 --> 23:18.660
那如果我这边的话我不想

23:18.660 --> 23:21.540
我这边的话就是想这个click handle

23:22.340 --> 23:24.180
就这边的话保持不变

23:24.180 --> 23:25.220
保持不变的话

23:25.220 --> 23:26.980
然后接下来第二种方式就是什么呢

23:26.980 --> 23:29.540
就是你这边你在绑事件的时候

23:30.180 --> 23:31.220
绑事件的时候

23:31.220 --> 23:34.420
你这边把它修改成这个箭头函数的这个形式

23:34.740 --> 23:36.820
这个我看一下官网应该是有说的

23:38.580 --> 23:40.020
在这里

23:41.220 --> 23:42.020
看到没有

23:42.020 --> 23:44.820
这边你把它改成这个箭头函数的形式

23:44.820 --> 23:47.780
那这里的话那这个瑞士也是会去找什么

23:47.780 --> 23:48.740
去找外称的

23:49.460 --> 23:50.260
对吧

23:50.260 --> 23:50.500
好

23:50.500 --> 23:52.580
来我们这边我们把它改成箭头函数的形式

23:54.740 --> 23:54.980
好

23:54.980 --> 23:55.860
箭头函数的形式

23:55.860 --> 23:56.740
然后接下来这边的话

23:57.540 --> 23:57.940
调用

23:59.380 --> 23:59.700
好

23:59.700 --> 24:00.740
让大家这边来看一下

24:01.700 --> 24:03.300
好

24:03.300 --> 24:03.700
清空

24:04.580 --> 24:04.900
走

24:05.700 --> 24:07.140
这边也是ok的

24:07.140 --> 24:07.940
对不对

24:07.940 --> 24:09.220
这是第二种方式

24:09.220 --> 24:11.620
第二种方式的话是绑定的时候

24:14.100 --> 24:15.860
就是事件绑定的时候

24:15.860 --> 24:17.060
修改成箭头函数

24:18.900 --> 24:19.940
这是第二种

24:21.860 --> 24:22.180
ok

24:23.060 --> 24:24.500
这个这个注释他这个

24:25.220 --> 24:27.860
这注释这个的照理说是接使插是吧

24:27.860 --> 24:29.780
接使他插他这里面的注释

24:29.780 --> 24:31.620
他直接给我试这个样子

24:31.620 --> 24:33.620
照理说我们之前学的接使插里面的注释

24:33.620 --> 24:34.740
应该是什么样子

24:34.740 --> 24:35.540
这边是这样子

24:37.140 --> 24:37.460
对吧

24:38.340 --> 24:39.060
应该是这样子

24:40.260 --> 24:40.580
哎

24:40.580 --> 24:41.700
这样子反而爆错了

24:43.140 --> 24:45.140
这样子反而爆错了

24:45.140 --> 24:46.020
这是怎么回事呢

24:46.580 --> 24:47.300
我看一下啊

24:48.660 --> 24:49.460
照理说的话

24:49.460 --> 24:51.380
我这边是一段接使插才对啊

24:52.580 --> 24:54.660
接插里面的注释应该是

24:56.020 --> 24:57.220
那是刚才那样写的呀

24:58.180 --> 24:58.980
但这边呢

24:58.980 --> 24:59.620
这个注释

25:00.500 --> 25:02.020
直接注释就是这个样子了

25:03.620 --> 25:04.900
这个下来我研究一下

25:04.900 --> 25:05.860
这边怎么回事

25:07.380 --> 25:08.100
我们来看一下啊

25:08.820 --> 25:10.820
但这个不是我们现在要研究的重点

25:12.260 --> 25:13.540
这个刚才看了是吧

25:13.540 --> 25:14.180
刚才看了

25:14.180 --> 25:14.500
ok

25:14.500 --> 25:15.860
这是第二种方式

25:15.860 --> 25:17.780
把这个改成这个箭头函数

25:18.820 --> 25:19.140
好

25:19.140 --> 25:19.780
那接下来的话

25:19.780 --> 25:20.660
还有一种方式

25:22.100 --> 25:23.140
还有一种方式什么呢

25:23.140 --> 25:24.900
还有一种方式是使用棒的

25:25.860 --> 25:26.500
棒的

25:26.500 --> 25:27.620
然后强制的

25:27.620 --> 25:29.860
就提前把这个z的指向

25:29.860 --> 25:32.180
提前就把它绑立好

25:32.180 --> 25:32.340
啊

25:32.340 --> 25:33.220
我们来看一下

25:33.220 --> 25:33.940
第三种方式

25:34.660 --> 25:36.340
第三种方式就是这边

25:38.500 --> 25:39.540
在这里

25:39.540 --> 25:40.340
然后在这里的话

25:40.340 --> 25:41.700
我这边constructor

25:41.700 --> 25:42.420
constructor

25:42.420 --> 25:43.940
然后这个是我的这个

25:43.940 --> 25:45.140
构造气函数

25:45.140 --> 25:45.380
对吧

25:45.380 --> 25:46.980
一进来就会自动调用的

25:46.980 --> 25:47.220
好

25:47.220 --> 25:47.940
那接下来在这里

25:47.940 --> 25:48.740
你看我在这里的话

25:48.740 --> 25:50.660
我就提前绑定这个z

25:52.500 --> 25:53.460
棒的大家学过的

25:54.420 --> 25:55.620
棒的作用是什么

25:55.620 --> 25:56.820
这不就是绑定z

25:56.820 --> 25:58.260
然后接下来给你返回一个

25:58.260 --> 25:59.060
是不是新的函数

26:00.100 --> 26:00.660
对不对

26:00.660 --> 26:01.220
那接下来的话

26:01.220 --> 26:03.140
他这个z就是一直指向什么

26:03.140 --> 26:04.980
是不是你这边绑定了这个z

26:04.980 --> 26:06.180
你这边绑定了z

26:06.180 --> 26:07.780
当前的z是指向谁的

26:07.780 --> 26:09.060
是不是指向这个组件的

26:09.780 --> 26:10.500
对不对

26:10.500 --> 26:11.460
然后说说我们这边呢

26:11.460 --> 26:12.900
可以使用这个第三种方式

26:13.700 --> 26:14.500
第三种方式

26:15.140 --> 26:16.100
把这个注射掉

26:18.260 --> 26:18.900
第三种方式

26:18.900 --> 26:19.620
第三种方式的话

26:19.620 --> 26:20.420
就是这也不改

26:21.700 --> 26:22.500
这也不改

26:23.780 --> 26:25.060
接下来这也不改

26:25.620 --> 26:26.500
接下来怎么办呢

26:27.060 --> 26:27.460
这边

26:27.460 --> 26:29.380
这边我们来写个constructor

26:30.820 --> 26:31.140
OK

26:31.140 --> 26:32.740
但我们现在没有什么pops传统

26:32.740 --> 26:34.340
写个constructor

26:34.340 --> 26:34.900
constructor

26:34.900 --> 26:35.540
然后接下来

26:35.540 --> 26:39.140
我们这边z点click handle

26:40.180 --> 26:40.660
对吧

26:40.660 --> 26:41.620
那等于什么呢

26:41.620 --> 26:43.380
z点click handle就是它

26:43.380 --> 26:47.060
它等于一个z点click handle

26:47.060 --> 26:49.540
点棒的z

26:51.460 --> 26:52.340
对吧

26:52.340 --> 26:52.580
OK

26:53.540 --> 26:54.100
这边的话

26:54.100 --> 26:56.100
z is not alone before super

26:56.100 --> 26:57.380
这边的话得写个super

26:59.460 --> 26:59.700
OK

27:00.500 --> 27:00.580
好

27:00.580 --> 27:01.700
你看我们这边就绑定了

27:01.700 --> 27:02.740
你看这边也没变

27:03.380 --> 27:04.580
这边也没变

27:05.300 --> 27:05.700
对吧

27:05.700 --> 27:05.860
好

27:05.860 --> 27:06.980
你这边保存一下

27:06.980 --> 27:07.620
保存了之后

27:07.620 --> 27:08.740
然后接下来这边来看一下

27:11.380 --> 27:11.620
走

27:12.180 --> 27:13.140
是不是依然是OK的

27:13.780 --> 27:14.340
对不对

27:14.340 --> 27:15.620
依然是OK的

27:15.620 --> 27:17.220
这个的话就是第三种方式

27:17.220 --> 27:18.020
使用bond

27:19.860 --> 27:20.820
在这里

27:20.820 --> 27:21.780
这是第三种方式

27:22.900 --> 27:23.620
使用bond

27:24.340 --> 27:27.540
使用bond的方法来强色绑定z

27:27.540 --> 27:28.900
这三种方法的话

27:28.900 --> 27:31.380
你选一个你习惯用的就可以了

27:31.380 --> 27:32.580
但我觉得大家大概率

27:32.580 --> 27:33.860
应该没有机会了

27:33.860 --> 27:35.460
因为我们后面都不会写类组件

27:36.500 --> 27:37.780
都不会写类组件

27:37.780 --> 27:38.500
但你这个的话

27:38.500 --> 27:40.500
这个这些支持点你要知道

27:40.500 --> 27:40.820
对吧

27:40.820 --> 27:42.020
因为你有可能工作的时候

27:42.020 --> 27:44.420
就会遇到之前的这个项目

27:44.420 --> 27:45.940
用的还是类组件

27:45.940 --> 27:46.500
OK

27:46.500 --> 27:47.380
这三个字

27:47.380 --> 27:48.580
就是这个支持点你得知道

27:49.700 --> 27:52.420
就是关于z的修正

27:52.500 --> 27:54.260
只针对于类组件

27:54.260 --> 27:55.620
这边说一下

27:55.620 --> 27:56.980
z的修正

28:01.540 --> 28:05.060
只针对于类组件

28:07.140 --> 28:08.420
只针对于类组件

28:08.420 --> 28:10.020
函数组件不存在这个问题

28:10.020 --> 28:10.500
对吧

28:10.500 --> 28:12.420
因为函数组件都不会用z

28:12.420 --> 28:12.660
OK

28:14.180 --> 28:14.420
好

28:14.420 --> 28:15.300
然后这节课的话

28:15.300 --> 28:16.580
最后一个支持点

28:16.580 --> 28:17.540
最后一个支持点

28:17.540 --> 28:20.420
就是向这个事件处理函数

28:20.420 --> 28:21.460
这个程序传参

28:22.180 --> 28:24.100
这个的话也是我们经常

28:24.100 --> 28:26.180
就是会涉及到了一个操作

28:26.180 --> 28:27.540
就我们在触发事件的时候

28:27.540 --> 28:29.620
我们需要向这个事件处理函数

28:29.620 --> 28:30.660
是传递一些

28:30.660 --> 28:32.420
我们自己想传递的这个参数

28:33.300 --> 28:33.940
对吧

28:33.940 --> 28:34.100
好

28:34.100 --> 28:35.300
那你这边要传递的话

28:35.300 --> 28:37.380
这边可以通过这两种方式

28:37.380 --> 28:38.980
这个在官网也是介绍了的

28:40.020 --> 28:41.300
多去看官网

28:41.300 --> 28:42.100
知道吧

28:42.100 --> 28:43.700
你们到了这个阶段了

28:43.700 --> 28:45.940
多去看一下这个官网

28:48.340 --> 28:49.220
在这里

28:50.260 --> 28:50.660
在这里

28:51.940 --> 28:54.900
你如果要向事件处理函数传参

28:54.900 --> 28:56.660
这边可以通过两种方式

28:56.660 --> 28:58.500
一种的话是这边这个箭头函数

28:59.940 --> 29:00.500
看不看

29:00.500 --> 29:01.220
这箭头函数

29:01.940 --> 29:03.540
这个就是你绑定的时候

29:03.540 --> 29:05.700
绑定的时候你这边就是绑成箭头函数

29:05.700 --> 29:07.540
这边第一个e就应该是什么

29:07.540 --> 29:09.220
是不是是你的事件对象

29:09.220 --> 29:09.460
对吧

29:09.460 --> 29:10.260
然后接下来这边

29:10.260 --> 29:13.060
这边id就是你额外传的这个参数

29:13.060 --> 29:14.180
第二种是什么呢

29:14.180 --> 29:16.980
第二种的话就是通过bond

29:17.860 --> 29:18.900
你这边z

29:18.900 --> 29:20.020
这边通过bond

29:20.020 --> 29:21.780
我们刚才bond是写在哪呢

29:21.780 --> 29:24.740
我们刚才bond的话是写在这个constructor这边的

29:24.740 --> 29:25.380
对吧

29:25.380 --> 29:25.940
他这里的话

29:25.940 --> 29:27.780
相当于这个bond是写在你这边

29:27.780 --> 29:29.860
在绑事件的时候进行bond

29:29.860 --> 29:30.820
本质上是一样的

29:31.780 --> 29:33.620
bond的这个z

29:33.620 --> 29:36.100
就当前这里的z还指向这个

29:36.820 --> 29:37.700
组建实力的

29:38.260 --> 29:38.500
好

29:38.500 --> 29:39.540
然后下这边第二个参数

29:39.540 --> 29:41.460
就是你传递的这个参数

29:41.460 --> 29:41.700
好

29:41.700 --> 29:42.740
来我们这边我们来看一下

29:44.260 --> 29:45.460
来看一下

29:45.460 --> 29:45.700
好

29:45.700 --> 29:47.460
比如说我这边的事件传参

29:48.420 --> 29:50.020
首先这边第一种形式

29:50.020 --> 29:50.820
我们把这个注释掉

29:51.620 --> 29:52.420
把这个打开

29:53.940 --> 29:54.180
好

29:54.180 --> 29:55.060
这边的话

29:55.060 --> 29:55.540
这边呢

29:55.540 --> 29:57.380
这边是事件对象

29:57.380 --> 29:58.820
他这边自动传入事件对象

29:58.820 --> 29:59.060
好

29:59.060 --> 30:01.940
然后下这边我们传入一些这个自己想传的东西

30:02.500 --> 30:02.820
对吧

30:02.820 --> 30:03.460
然后下这边的话

30:03.460 --> 30:04.180
第二个

30:04.180 --> 30:05.620
第二个是你的事件对象

30:06.260 --> 30:06.500
好

30:06.500 --> 30:07.060
回头的话

30:07.060 --> 30:08.180
你在这里

30:08.180 --> 30:08.580
这里的话

30:08.580 --> 30:09.940
你就可以接受一下

30:09.940 --> 30:12.100
首先第一个是你接收的这个参数

30:12.100 --> 30:12.980
str

30:12.980 --> 30:14.660
第二个是事件对象

30:14.660 --> 30:15.620
我们这边打印一下

30:16.580 --> 30:17.860
打印一下str

30:19.860 --> 30:20.260
好

30:20.260 --> 30:21.300
然后下我们这边我们来看一下

30:21.300 --> 30:22.500
其实这个意义我们就不传了

30:23.060 --> 30:23.940
要不传了

30:23.940 --> 30:25.140
这边就不接受了

30:25.140 --> 30:26.180
我们来看能不能拿到

30:26.900 --> 30:27.300
保存

30:28.500 --> 30:29.220
保存了之后

30:29.220 --> 30:30.340
然后下这边来看一下

30:31.700 --> 30:32.260
好

30:32.260 --> 30:32.900
走

30:32.900 --> 30:34.100
是不是就拿到了

30:34.100 --> 30:34.820
对不对

30:34.820 --> 30:35.860
就拿到了

30:35.860 --> 30:38.500
这是通过这个箭头含书的形式

30:38.500 --> 30:39.460
那还有一种是什么呢

30:39.460 --> 30:40.100
还有一种是

30:41.140 --> 30:42.260
在这里直接绑定

30:44.920 --> 30:45.480
在这里

30:47.800 --> 30:48.440
在这里

30:48.440 --> 30:49.160
这里的话

30:49.160 --> 30:50.680
它直接把刚才的那一句

30:51.320 --> 30:52.680
把刚才这一句

30:52.680 --> 30:53.560
直接写到这

30:55.560 --> 30:56.840
直接写到这里

30:57.880 --> 30:58.440
对不对

30:58.440 --> 30:59.400
直接写到这

30:59.400 --> 31:00.200
写到这之后

31:00.200 --> 31:02.600
然后加这里这个constructor就可以不要了

31:03.240 --> 31:04.360
这就可以注射掉了

31:04.360 --> 31:05.240
好

31:05.240 --> 31:05.320
好

31:05.320 --> 31:05.720
这边呢

31:05.720 --> 31:06.520
z点

31:06.520 --> 31:07.400
click handle

31:08.360 --> 31:09.240
这里

31:09.240 --> 31:09.640
我看一下

31:10.360 --> 31:11.800
这里它的语法是什么

31:12.920 --> 31:14.600
它这边的话是z

31:14.600 --> 31:15.880
然后加直接点棒的

31:16.440 --> 31:17.800
这边没有负责

31:17.800 --> 31:18.440
这边

31:18.440 --> 31:19.880
z点click handle

31:19.880 --> 31:20.680
点棒的

31:21.400 --> 31:21.800
对吧

31:21.800 --> 31:22.920
绑定z

31:22.920 --> 31:23.880
绑定z之后

31:23.880 --> 31:25.560
然后接下来第二个成熟

31:26.280 --> 31:27.080
就是从后面

31:27.080 --> 31:29.160
后面就是你要自己传的这个成熟了

31:29.720 --> 31:30.040
OK

31:30.040 --> 31:31.160
这个Hello

31:31.160 --> 31:32.600
前面的话是在绑定z

31:32.600 --> 31:34.840
你整个棒的是不是会返回一个新的函数

31:35.640 --> 31:35.960
对不对

31:35.960 --> 31:38.120
这个是这个j's的这个基础

31:38.120 --> 31:38.920
指使了

31:38.920 --> 31:39.800
你的这个棒的

31:39.800 --> 31:41.640
它会返回一个新的函数

31:41.640 --> 31:42.920
这个函数作为什么

31:42.920 --> 31:43.640
是不是这个函数

31:43.640 --> 31:45.320
它的这个z是绑定成这个的

31:45.880 --> 31:46.440
对不对

31:46.440 --> 31:47.880
新返回的那个函数

31:47.880 --> 31:49.720
作为我的世界处理函数

31:50.760 --> 31:52.280
我们这边传入这个Hello

31:52.280 --> 31:52.920
比较二

31:54.440 --> 31:54.840
好

31:54.840 --> 31:55.880
大家这边来看一下

31:57.400 --> 31:57.880
嗯

31:57.880 --> 31:58.200
这里

32:01.180 --> 32:01.980
这里

32:01.980 --> 32:02.620
OK

32:02.620 --> 32:03.580
是不是一样是OK的

32:04.140 --> 32:04.780
对吧

32:04.780 --> 32:05.500
一样是OK的

32:06.460 --> 32:08.460
这是关于如何传参

32:08.460 --> 32:09.580
但有的同学会问

32:09.580 --> 32:10.860
这个是内组件

32:11.740 --> 32:13.980
内组件我们后面的话又不怎么用得到

32:13.980 --> 32:16.380
那你讲一下那个函数组件传参呢

32:16.460 --> 32:18.220
函数组件传参就简单多了

32:18.220 --> 32:18.940
啊

32:18.940 --> 32:20.380
我们把这个整个这个

32:20.380 --> 32:21.260
我们把它注射掉吧

32:22.700 --> 32:23.660
把注射掉

32:23.660 --> 32:25.340
我们回归到这个函数组件

32:28.310 --> 32:29.110
OK

32:29.110 --> 32:29.350
好

32:29.350 --> 32:31.030
来我们来看一下这个函数组件

32:31.030 --> 32:32.230
它是如何传参的

32:34.310 --> 32:35.270
函数组件的话

32:35.270 --> 32:36.150
你这边的话

32:36.150 --> 32:37.670
首先你这边不能这样子写

32:37.670 --> 32:39.030
同学们不能这样子写

32:39.030 --> 32:40.470
比方你这边传个Hello

32:41.510 --> 32:42.470
Hello 333

32:42.470 --> 32:43.750
你不能这样子写

32:43.750 --> 32:44.390
这样子写的话

32:44.390 --> 32:45.670
比如说你看这里

32:45.670 --> 32:47.030
这里我们这边st2

32:47.750 --> 32:48.630
然后加这边

32:48.630 --> 32:49.590
这个就不要了

32:49.590 --> 32:52.150
我们这边打印一下st2

32:52.150 --> 32:53.830
你会发现你这边的话一进去

32:56.070 --> 32:56.950
你这边一进去

32:56.950 --> 32:58.070
一进去你看这里

32:59.190 --> 33:01.110
它是不是这边就调用一次

33:01.110 --> 33:01.990
因为你这样子写的话

33:01.990 --> 33:03.590
相当于是函数调用

33:03.590 --> 33:04.230
对不对

33:04.230 --> 33:04.950
然后这边怎么写

33:04.950 --> 33:05.270
这边的话

33:05.270 --> 33:06.950
你把它改成一个箭头函数就可以了

33:07.590 --> 33:08.630
就这么简单

33:08.630 --> 33:10.230
你把它改成一个箭头函数

33:10.230 --> 33:10.790
箭头函数

33:10.790 --> 33:11.430
然后加这边的话

33:11.430 --> 33:12.710
你传你的这个蚕数

33:13.670 --> 33:14.150
对吧

33:14.150 --> 33:15.110
我们重新刷新一下

33:15.830 --> 33:16.630
然后加这边的话

33:17.350 --> 33:19.830
我们得把那个事件把它阻止一下

33:19.830 --> 33:20.790
我们这边这个e

33:22.230 --> 33:22.870
e的话

33:22.870 --> 33:23.590
我看事件

33:25.510 --> 33:25.990
这边的话

33:25.990 --> 33:27.270
应该是它的第几个参数

33:27.270 --> 33:28.310
应该是它的第

33:28.310 --> 33:28.870
我看一下

33:31.430 --> 33:33.190
事件箭头函数的话

33:33.190 --> 33:34.230
应该是它的第二个参数

33:34.790 --> 33:35.350
是吧

33:35.350 --> 33:36.230
然后加这边

33:36.230 --> 33:37.350
这边这个e

33:37.350 --> 33:37.590
好

33:37.590 --> 33:38.870
我们这边接收

33:38.870 --> 33:39.750
接收这个e

33:39.750 --> 33:40.950
我们还是把它默认事件

33:40.950 --> 33:42.150
把它阻止掉

33:42.150 --> 33:43.030
免得它跳转

33:43.670 --> 33:44.070
好

33:44.070 --> 33:45.190
让大家这边来看一下

33:47.350 --> 33:47.990
是不OK了

33:48.790 --> 33:49.350
对了

33:49.350 --> 33:50.390
就OK了

33:50.390 --> 33:51.190
就很简单

33:51.190 --> 33:53.110
就这边就通过这个箭头函数的形式

33:53.750 --> 33:55.030
来进行绑定就可以了

33:55.750 --> 33:56.310
后期的话

33:56.310 --> 33:57.670
我们还是函数组件写的多

33:58.230 --> 33:58.870
知道吧

33:58.870 --> 34:00.230
还是函数组件写的多

34:01.190 --> 34:03.030
应该说就是全部都写函数组件

34:03.750 --> 34:05.910
后面基本上就不会写内组件了

34:05.910 --> 34:06.230
OK

34:06.230 --> 34:07.910
这也是整个这个react

34:08.470 --> 34:11.110
它一个这个转换的一个趋势

34:11.110 --> 34:12.070
对不对

34:12.070 --> 34:12.310
OK

34:13.110 --> 34:13.350
好

34:13.350 --> 34:16.230
这节课的话要给大家讲的内容就这么多

34:16.790 --> 34:17.350
首先的话

34:17.350 --> 34:18.230
我们来回顾一下

34:18.230 --> 34:19.910
我们讲了这个组件

34:19.910 --> 34:20.310
对吧

34:20.310 --> 34:21.350
在react中

34:21.350 --> 34:23.110
如何声明这个组件

34:23.110 --> 34:23.910
两种方式

34:23.910 --> 34:24.790
一种是内

34:24.790 --> 34:26.070
一种是函数

34:27.590 --> 34:29.590
那这边只是简单讲了一下

34:30.230 --> 34:31.430
如何声明组件

34:31.430 --> 34:33.590
组件里面然后还有更多的一些东西

34:33.590 --> 34:34.550
比如它的状态

34:35.190 --> 34:37.030
它的这个如何传递

34:37.670 --> 34:39.190
传递这个值

34:39.190 --> 34:40.710
props这些

34:40.710 --> 34:42.550
这个我们下节课来讲

34:43.510 --> 34:44.470
还有就是什么呢

34:44.470 --> 34:46.630
还有就是这个如何绑定这个事件

34:47.270 --> 34:49.510
因为我们后面讲这个什么props state的时候

34:49.510 --> 34:52.390
我们会涉及到就是点击之后改变它的这个状态

34:52.950 --> 34:54.550
所以我这边提前把这个事件讲了

34:55.270 --> 34:57.350
事件的话是在这个官网的

34:57.910 --> 34:59.190
这边第六小节

34:59.830 --> 35:00.470
OK

35:00.470 --> 35:01.110
第六小节

35:02.230 --> 35:02.630
好

35:02.630 --> 35:04.950
然后包括就是这个race

35:05.590 --> 35:06.870
你如果是内组件

35:06.870 --> 35:09.430
race要如何进行处理

35:09.430 --> 35:11.750
以及如何传递这个蚕数

35:12.470 --> 35:12.630
OK

35:13.350 --> 35:15.350
这节课的话就先到这里

35:15.350 --> 35:16.310
大家下去吧

35:16.310 --> 35:17.670
把这个敲一敲

35:17.670 --> 35:18.790
同样的还是把这个

35:19.430 --> 35:20.950
把这个第六小节

35:20.950 --> 35:22.310
把它通读一遍

35:22.310 --> 35:23.990
自己把它看一遍

35:23.990 --> 35:24.790
OK

35:24.790 --> 35:26.390
好这节课就到这里

35:26.390 --> 35:27.190
再见

