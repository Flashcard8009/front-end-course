WEBVTT

00:00.000 --> 00:04.200
ok 咱们继续 啊 上节课的话 咱们把这个

00:05.200 --> 00:11.960
登录注册 把这个弹出框 把它做出来了 包括这个就是验证码 对吧 我们让它显示出来了

00:12.560 --> 00:17.800
好 这节课的话 咱们就把剩下的功能把它做一下 首先咱们先从这个注册开始吧

00:18.440 --> 00:22.120
好 注册的话 这边要求就是用户你只需要填一个这个账号就可以了

00:23.000 --> 00:28.600
填一个账号 啊 然后离成你都可以不填 离成的话 这边我会自动给你默认生成一个那个离成

00:28.880 --> 00:35.560
但你填了的话就用你的啊 好 大家这边这个验证码 验证码也是必须要填的 也就是一共就是这两项

00:36.160 --> 00:39.320
但是你注意 啊 账号的话 它这边是不能相同的

00:40.240 --> 00:45.360
对吧 你登录账号 你不能和别人相同 说这边呢 会有一个验证 大家看一下这里

00:47.040 --> 00:48.200
好 这个弄到最下面去

00:49.440 --> 00:55.040
嗯 在我们找一下哈 这个是登录面板 是吧 我把折起来 我们找一下这个

00:55.800 --> 01:03.760
就这边 可不可以啊 这边的话 这边会有一个这个入使 入使 然后加这边的require的去啊 message

01:04.360 --> 01:06.880
请输入账号 仅此相为必填相

01:07.680 --> 01:12.680
啊 这个入使你猜都猜得到了 这个咱们之前在那个element园里面是不是也用过

01:13.520 --> 01:16.520
这就是配置配置你的这个验证规则的

01:17.400 --> 01:22.560
对不对 就是配置你验证规则的啊 那这边呢 首先这边配置了一个require去

01:23.080 --> 01:27.920
代表这一项的话 那是必填相 好 然后在这边的话 再来配置一个

01:29.160 --> 01:32.720
再来配置一个 这边叫做vd data啊 对应的是check

01:33.360 --> 01:39.120
noggin id is zest 就你这个是否存在 好 那接下来咱们就在这儿来写一下

01:41.000 --> 01:41.680
这边怎么回事

01:42.480 --> 01:44.080
is already defined

01:46.040 --> 01:48.440
看一下啊 这里 把这个删了

01:51.230 --> 01:58.190
好 那接下来咱们在这边 咱们就来写一下哈 这边sync 他肯定是一个异部的嘛 对吧 因为他发请求

01:58.950 --> 01:59.790
好 这边check

02:00.870 --> 02:03.310
啊 他是否存在啊 这个呢 就是验证

02:05.230 --> 02:07.590
验证这个登录

02:08.470 --> 02:10.270
账号是否

02:11.270 --> 02:11.710
存在

02:13.150 --> 02:16.670
好 然后加这边呢 就是发请求 来我们来看一下这个接口

02:17.630 --> 02:20.150
接口的话 在这里 在用户这边

02:21.230 --> 02:23.270
呃 这边用户是否存在

02:24.470 --> 02:33.110
这个是根据id查找用户 这边其实写一个接口就可以了 是吧 这边这个接口还写多了 这边是根据id

02:33.750 --> 02:35.510
返回这个用户对应的信息

02:36.710 --> 02:40.710
这个是查找用户 其实这两个接口可以合名成一个的

02:41.870 --> 02:48.270
对吧 这个其实我后期可以改一改啊 现在懒得改了啊 这边反正写了就用啊 这边就是你这边

02:48.830 --> 02:49.630
有这么一个

02:50.550 --> 02:58.910
API user 那user is exact 把你的logging id 哦 不对 不对 这里还不对 这两个不能合并 一个是放的是logging id

02:59.670 --> 03:03.150
这个是什么 这个是id 根据id来查 id是这个

03:03.950 --> 03:10.230
就是你那个数据户表里面不是有个id吗 这个验证用户是否存在是根据这个logging id

03:11.070 --> 03:14.710
这两个还不能合并啊 对了 对了 这边要写两个啊

03:15.590 --> 03:23.950
好 然后接下这边把你的这个logging id 把它拿过去 好 说说我们这边的话就需要来到user这边 我们是不是需要添加一个

03:25.390 --> 03:29.230
来到这边 需要添加一个查询用户是否存在

03:30.910 --> 03:37.770
查询查询用户是否存在

03:41.170 --> 03:43.890
好 这边这边的话就是 isport

03:46.420 --> 03:47.020
port

03:48.020 --> 03:48.780
function

03:50.020 --> 03:52.740
然后user is exact

03:54.820 --> 03:57.620
那传一个什么给我啊 就传一个logging id给我

03:59.660 --> 04:05.060
对吧 然后这边的return request 啊 这边url

04:06.420 --> 04:08.620
对应的是这个API

04:09.700 --> 04:10.860
把那一块拿过来吧

04:12.100 --> 04:12.860
这一块拿过来

04:14.100 --> 04:16.060
拿过来之后再把它挣到这里

04:17.140 --> 04:21.300
再把这个要改一下 这边是downer 对吧 到那logging id

04:22.660 --> 04:22.860
好

04:24.060 --> 04:29.880
然后那个方式 寻求方式的话是不应该是get

04:30.920 --> 04:32.320
对吧 message get

04:32.960 --> 04:43.960
ok 好 然后接下来的话在这边 在这边的话咱们把它导入一下 把导入一下 好 导入之后 然后接下来来到这个

04:44.960 --> 04:46.080
哎 哪个来着

04:47.320 --> 04:52.560
我刚才不是写了 啊 这里 这里 啊 在这边 这边的话是不是需要await

04:53.960 --> 04:58.680
等待你这个 等待他的一个结果 对吧 我们这边拿到这个结果

04:59.720 --> 05:01.240
ok 好 我们这边我们可以打一下

05:01.960 --> 05:02.840
console.log

05:05.170 --> 05:12.170
console.log data 你看他是什么时候出发 你看这边有一个vd data trigger 什么时候

05:12.570 --> 05:20.050
所以这个unbner的时候 对吧 就是适交的时候 保存一下 保存了之后 然后将我们这边我们来

05:21.290 --> 05:27.290
好 比如说这边注册 注册之后再将我写个abb 走 你看这边是不是出来了

05:28.130 --> 05:32.490
等一下 这边出来是出来 这边出的是什么 404啊 404是什么

05:33.050 --> 05:38.890
所以我们那边没配置啊 就是那个代理那边 这边代理这边 你要把它配置一下

05:39.370 --> 05:44.650
啊 这个怎么配置多个呢 啊 正好这边说一下 怎么配置多个 就调用多次就可以了

05:45.770 --> 05:50.330
调用多次就可以了 我们刚才不是调的是个create process middleware吗 你这边话

05:51.210 --> 05:53.610
那既然这边斗号 再调用一次

05:54.730 --> 05:59.370
可不可以啊 就这样子 你如果后面还要配就再调用就可以了啊 这边要是不是改成api

06:00.570 --> 06:08.100
就ok了 啊 这边呢 刷新一下 啊 这边的话 比如说abb

06:08.340 --> 06:14.660
应该要重启一下啊 稍等 我们把那个中端重启一下 因为你这边改的是

06:15.460 --> 06:24.140
相当于是服务器的配置了 啊 这边 把停掉 停掉之后再加这边重启

06:25.180 --> 06:32.040
好 等他重新启动吧 好 然后我们这边看一下

06:33.080 --> 06:35.080
yes yes

06:37.510 --> 06:48.460
ok 可以了啊 嗯 稍等一下他还在转 好 然后这边来看一下

06:49.500 --> 06:54.780
啊abb 走 是不是可以了 对了 这边就可以了

06:55.260 --> 07:01.180
好 可以之后 然后接下来你这边上 你就可以这个进行一个判断啊 他如果是force force说明什么

07:01.660 --> 07:05.100
force的话说明是不是就是ok的 对了啊

07:05.900 --> 07:07.980
然后你如果是比如说我们这边 卸杰

07:09.980 --> 07:11.660
卸杰 因为我觉得卸杰是有的吗

07:13.660 --> 07:23.660
看一下啊 我看我的数据铺 这边连的是同一个数据铺 这边看一下啊

07:24.780 --> 07:33.670
这是有的对吧 然后我们的 users users long id这边是有的

07:35.190 --> 07:39.670
这边为什么他这边还是force呢 啊 这边没对啊 这边没对

07:40.630 --> 07:43.830
这边的话我看一下 这边是代理 这个没什么问题

07:44.790 --> 07:45.270
然后

07:47.270 --> 07:52.550
这边是请求难解 这边又没什么问题啊 我看一下这边 是不是这边出了问题

07:55.140 --> 08:00.740
啊 这边哦 我知道了 我知道了 你刚才你调这个方法 这个方法这边是不是没传过去啊

08:01.460 --> 08:04.020
在哪里 这边这边你是不要把login id传过去

08:04.420 --> 08:10.260
login id是什么login id的话是不是你这边 你这边在输入这个注册的时候

08:10.340 --> 08:15.700
这边他是个受控组件 这边和他绑在一起的 对吧 所以这边呢 应该是register info

08:16.980 --> 08:22.660
register info点什么login id

08:23.700 --> 08:25.380
对不对 把他传过去

08:26.820 --> 08:33.300
好 然后保存一下 保存了 这边这边来看一下啊 这边重新来卸杰

08:34.100 --> 08:38.660
走 你看这边 现在是不是就是去了 对不对啊 卸杰2

08:39.460 --> 08:45.460
是force ok 我这边可以就判断一个账号 就是这个login id是否已经存在

08:46.020 --> 08:49.220
好 然后接下来 咱们这边解构拿到这个data

08:50.900 --> 08:55.700
拿到这个data解构 他这边是不是有个data好 这边呢 拿到这个data 这个data是不是就是一个布尔子啊

08:56.100 --> 08:57.700
好 大家这边eve data

08:58.660 --> 09:01.460
eve data说明什么 说明该id

09:02.340 --> 09:06.340
该login id已经注册过了

09:06.900 --> 09:14.020
对不对啊 那这边我们怎么做呢 这边让他这个官网他要求你这边返回一个promise

09:15.300 --> 09:18.100
一个promise 接下来这边是一个拒绝的

09:18.660 --> 09:19.460
reject

09:20.580 --> 09:25.300
promise 那在里面的话就写就是你的提示文字就可以了 啊 比较该用户

09:26.340 --> 09:26.820
已经

09:27.540 --> 09:28.500
存在

09:29.300 --> 09:30.820
啊 或者已经注册过了

09:31.620 --> 09:37.720
ok 那我们这边来看一下啊 这边谢谢

09:38.440 --> 09:44.360
然后这边走 你要这边 是不是该用户已经注册过了啊 这个的话你要去看哪 你要去看这啊

09:45.160 --> 09:47.000
要去看他这边的这个input

09:47.880 --> 09:50.600
input他这边会有一个验证

09:51.320 --> 09:51.880
看一下啊

09:53.640 --> 09:54.680
呃 是这吗

09:55.560 --> 09:56.360
好像是在

09:57.720 --> 09:58.680
我看是不是在form

09:59.000 --> 10:02.680
form 然后有一个验证 啊 这里 这里

10:03.320 --> 10:05.320
看到没有动态验证规则

10:05.960 --> 10:09.560
在这里啊 他这边会有一个这个如何进行验证

10:11.560 --> 10:17.990
然后你看他这里 我看动态进行验证

10:19.590 --> 10:21.430
他动态进行验证的势力呢

10:22.470 --> 10:23.510
动态规则

10:26.200 --> 10:27.000
啊 这里 这里

10:27.560 --> 10:29.800
看到没有 这边 这边他这边form

10:30.280 --> 10:34.520
点wide dead fails 进行验证啊 这边他有一个自定义

10:35.400 --> 10:37.080
比如说这边 这边是一个

10:38.120 --> 10:40.680
自定义验证啊 自定义教验

10:41.240 --> 10:45.320
看到没有 你在这里就可以看到他的这个如何进行教验 他的教验有哪些

10:46.200 --> 10:47.720
啊 你在这边就可以看到

10:48.280 --> 10:52.200
那你想看这个更详细的 比如说他这边究竟有哪些教验规则

10:52.520 --> 10:54.360
那你这边就要看他的那个API了

10:55.160 --> 10:59.080
就这边要来了这个API这边啊 这边呢你就看哪个选项呢

11:01.260 --> 11:05.260
这边的话 他有一个微粒 我看我们这边写的是什么

11:06.380 --> 11:11.740
我们这边验证啊 就这边入识 是吧啊 你在这边找入识

11:12.460 --> 11:13.100
入识

11:17.460 --> 11:18.980
啊 是form item上面 是吧

11:20.180 --> 11:22.500
form item上面 找入识

11:23.620 --> 11:24.580
入识 这里

11:25.460 --> 11:29.220
看到没有 教验规则啊 你想看具体的 让一下这边看这个势力

11:29.700 --> 11:32.420
啊 这个的话就是这个入识 他这边可以设置什么

11:33.700 --> 11:36.340
啊 这边就有 这入识啊 支持哪些

11:37.140 --> 11:38.980
ok 就这样一点一点去查的

11:39.700 --> 11:40.900
明白没有啊

11:41.540 --> 11:46.100
其实你这边的话 写两个势力啊 这边写两个势力 然后你应该那个查文档

11:46.340 --> 11:48.180
你就知道那个文档你就看得懂了

11:50.120 --> 11:51.880
好 就是关于这个账号

11:52.840 --> 11:57.960
关于这个登录这个账号 是吧 好 然后接下来 这边这个泥森泥森可以不填

11:57.960 --> 11:58.920
然后接下来 这边

11:59.640 --> 12:00.440
这个验证码

12:01.160 --> 12:04.600
啊 验证码的话 这边又存在一种情况 就是我这边是不是可以乱填

12:05.480 --> 12:08.680
对不对 那我这边填的这个验证码不正确

12:08.680 --> 12:13.400
那不正确的话 那这边他是不是会要求你填写这个正确的这个验证码

12:14.120 --> 12:14.520
对不对

12:16.360 --> 12:20.600
啊 这个验证码是否正确的话 是在服务器端那边会教验啊

12:20.600 --> 12:24.600
教验如果这个验证码不对 服务器端那边就会直接给你返回

12:25.160 --> 12:26.440
该验证码就是有问题

12:26.920 --> 12:31.160
说这边的话没关系 这边呢 咱们就直接用户比说这边填写 ok ok

12:31.160 --> 12:33.320
咱直接点注册就可以了 好来吧

12:34.200 --> 12:39.400
好 那我们这边的话就注册 注册对应的这边有个bar

12:41.400 --> 12:45.880
有个bar 啊bar 这边这边是不是有个这个注册按钮 对吧

12:47.640 --> 12:51.640
好 那这个注册按钮需不需要绑定事件呢啊 照理来讲的话

12:51.640 --> 12:55.720
有的同学第一反应就是这边绑一个这个click事件啊 实际上不用

12:55.880 --> 13:01.080
我这个button是在哪里 是在这个form里面啊 我如果是在form里面的button的话

13:01.080 --> 13:05.400
我点这个button 它自动就会触发一个这个提交的这个事件啊 我们看这个form

13:06.200 --> 13:10.280
看这个form 你看这个form这边 这边是不是有个unfinished

13:10.280 --> 13:14.680
大家这边是不是有个register handle 对不对 好 那我们这边我们来看一下

13:15.240 --> 13:17.640
就它会不会触发这个register handle

13:18.680 --> 13:21.400
register handle在这里啊 这边注册事件

13:21.720 --> 13:30.660
这个是注册对应的逻辑 注册对应的逻辑

13:31.220 --> 13:33.460
ok 好 那我们这边我们来看一下

13:35.140 --> 13:40.020
把这儿清空啊 比如说我们这边点击注册 你看这边是不是就会触发注册对应的逻辑

13:40.580 --> 13:45.940
对 大家我们在注册对应逻辑里面 把我们这边这个信息就提交给服务器就可以了

13:45.940 --> 13:53.140
好 你如果比如说这个没填啊 比如没填 没填的话呢 这边自动这边就是会让你请输入此账

13:53.940 --> 13:56.260
啊 这个是在哪设置呢 这个是在这

13:58.180 --> 14:02.580
这个是在这 是在这在这设置的啊

14:03.300 --> 14:06.500
好 然后接下来这边会有个我看一下 cannot

14:07.460 --> 14:09.460
detract your property data or

14:10.020 --> 14:11.540
这个

14:11.540 --> 14:18.180
你这边在私交的时候发请求的时候 你这边的话应该要判断一下啊 我知道了 在在这里

14:19.140 --> 14:23.140
在这里啊 这里的话你应该是判断一下 判断一下他这边有没有

14:24.100 --> 14:25.540
对不对啊 我们这边 if

14:27.540 --> 14:34.180
if register infer.login id 就你这个如果有值 有值的话我们是不是才去验证

14:34.740 --> 14:37.300
他是否那个 就是是否重复

14:38.340 --> 14:40.340
对吧 okay

14:42.100 --> 14:43.620
好 那我们这边来看一下

14:48.440 --> 14:51.960
嗯 这边服务器好像出问题了 看一下啊

14:53.240 --> 14:55.400
服务器服务器重启一下

14:59.270 --> 14:59.830
ok

15:00.630 --> 15:03.270
好 回到这边啊 重新刷新一下

15:04.950 --> 15:11.750
好 这边注册 好 这边让你看啊 比如我现在这样子 这样子我私交的话 你看他这边是请输入账号

15:12.070 --> 15:15.350
对不对 但他就不会干嘛 不会去发送这个请求啊

15:15.750 --> 15:19.590
好 现在我们点击这个注册 你看这边点击注册的话 他会不会触发这个

15:21.030 --> 15:22.070
会不会触发这个

15:23.190 --> 15:26.950
嗯 在哪这个register handle 会不会

15:27.670 --> 15:36.070
不会 你如果这个表单啊 你这边写了比如设置了一些验证 验证没通过的话 他这边是不会触发这个unfinished

15:36.790 --> 15:42.150
就这边 你不是有个unfinished吗 你看这个也是就是用主键库 方便了一点

15:42.790 --> 15:45.190
对吧 他这些东西都直接给我们封装好了啊

15:45.750 --> 15:50.070
好 然后接下来的话 那这边如果能够进入到这个register handle

15:50.230 --> 15:54.630
是不是一定说明就是你这边首先账号是不重复 甜了的 这个是不是也是甜了的

15:55.110 --> 15:57.670
对不对 好 那我们这边在这里的话我们就该干嘛呀

15:58.150 --> 16:00.070
说发送请求了 对吧

16:01.990 --> 16:05.350
好 我们这边来到users 这边再新增一个

16:05.990 --> 16:10.470
新增一个这个API函数 这边呢 就是用户注册

16:11.110 --> 16:13.830
用户注册实际上就是什么 是不是添加用户啊

16:14.950 --> 16:18.630
对 就是添加用户啊 所以这边呢 export

16:19.430 --> 16:21.510
function and user

16:21.750 --> 16:24.150
啊 这边要不要接受参数啊

16:24.790 --> 16:27.590
要吧 这接受就是你这个新用户的这个数据

16:28.310 --> 16:32.710
new user info 对吧 好 然后再这边return

16:34.390 --> 16:37.430
return request啊 这边的url

16:38.870 --> 16:43.270
url对应的是API下面的user

16:44.310 --> 16:45.990
好 然后再这边的这个data

16:47.430 --> 16:50.150
data对应的是new user info

16:51.110 --> 16:54.630
or message对应的应该是post

16:55.670 --> 17:00.630
对吧 好 然后接下来这边把这个方法拿到这边来

17:01.590 --> 17:02.470
好 引入进来

17:04.150 --> 17:06.470
引入过来 好 然后接下来在这边

17:07.190 --> 17:10.950
在在在这里 这里的话是不是应该是调用这个方法

17:11.910 --> 17:13.750
对不对 这边就调用这个方法

17:15.030 --> 17:19.500
好 这里的话就是await

17:20.460 --> 17:23.020
await 然后end user

17:25.100 --> 17:28.140
ok 啊 这边呢你就把什么呢 就把你这边

17:29.020 --> 17:31.500
嗯 这边呢你就把

17:34.170 --> 17:39.850
整个这个register info就传过去就可以了啊 所以这边呢就是传入

17:41.690 --> 17:47.610
register info啊 然后接下来这边呢得到它的这个返回值const

17:48.810 --> 17:50.330
const result

17:52.790 --> 17:54.870
const result啊等于await

17:55.510 --> 17:59.030
啊 等一下 这边我们用到了 这边它就应该是个异步的函数

18:00.790 --> 18:03.590
对吧 好 然后这边的规矩我们来打印一下

18:04.470 --> 18:05.590
打印一下result

18:07.430 --> 18:08.630
好 那保存

18:09.910 --> 18:11.990
保存之后 然后诶 抱错了

18:13.030 --> 18:15.910
我看一下啊 这边这边那边没保存

18:16.630 --> 18:20.470
好 可以了 好 来我们这边来看一下啊 比较卸节2

18:21.190 --> 18:26.950
验子码随便乱填1234啊 点击注册 你看这边 服务器端那边跟我们返回的是什么

18:27.510 --> 18:33.430
这扣的是406 那这个这边有一个验子码错误 对吧 那data没有

18:33.750 --> 18:35.190
好 如果的话我这边的话这个

18:36.150 --> 18:39.990
哦 还有 就是你这边的话 如果这个错误呢 这边是不是应该要刷新一下验子码

18:40.150 --> 18:43.270
那这个逻辑我们一会再写啊 好 这边这边呢是n

18:44.150 --> 18:45.350
bocu

18:45.910 --> 18:48.870
点击注册 诶 你看现在这次是不是就注册成功了

18:49.270 --> 18:54.790
注册成功之后 这边扣的是0啊 然后mi17这边是没有的 这边data 这边是不是就给我们返回

18:55.110 --> 18:56.870
你注册了这个帐号的一些信息啊

18:57.910 --> 19:02.310
对吧 ok 好 那我们这边的话 我们就可以给他做一个判断

19:03.510 --> 19:07.590
啊 做个判断 e4什么呢 e4 result

19:08.470 --> 19:10.470
点data

19:10.630 --> 19:13.110
那就说明什么 所以说明这个用户注册成功

19:13.590 --> 19:14.150
否则

19:14.870 --> 19:16.310
用户注册失败

19:16.310 --> 19:18.470
用户注册失败的话 我们这边我们引一个

19:18.950 --> 19:21.590
从这个antd里面 应该叫做这个message

19:23.270 --> 19:26.550
message的主键啊 他可以做这个消息的这个提示

19:27.830 --> 19:31.510
啊 这边message啊 这边给一个什么呢 给一个这个vary

19:33.670 --> 19:37.110
vary啊vary然后打印什么呢 打印这个result

19:38.070 --> 19:40.390
result里面是不是有一个msg啊

19:41.910 --> 19:45.990
对不对啊 把这个把它输出出来 输出出来之后让重新干嘛呀

19:46.230 --> 19:51.190
所以重新切换这个验子嘛 我们来看这段逻辑啊 应该是没问题的啊

19:52.150 --> 19:54.630
好 现在电脑真的是有点慢呢

19:55.670 --> 20:01.990
好 别说我们这边 随便1234注册啊 这个注册过了啊 表3

20:02.710 --> 20:06.710
注册是验子吗 错误啊 同时这边是不是更新 再来一次啊 走

20:07.350 --> 20:13.670
看到没有 这一块是没问题的 好 然后接下来这边如果进一步 进一步的话 然后接下来这边是ok的 ok的话

20:13.830 --> 20:17.430
那我们这边首先告诉他用户注册成功

20:18.950 --> 20:21.110
啊 这边就不能说warring了 这边是sexense

20:22.790 --> 20:25.910
sexense啊 这边呢 就是用户注册成功

20:28.170 --> 20:29.610
用户注册

20:30.490 --> 20:32.890
成功啊 然后叫这边默认密码

20:34.170 --> 20:37.450
默认密码为123456

20:38.570 --> 20:41.290
ok 好 然后接下来我们这边还需要做什么事情

20:41.850 --> 20:47.530
还需要就是将用户的信息存储到数据仓库里面啊 还需要

20:48.890 --> 20:57.700
将将这个用户的信息存储到用户

20:58.740 --> 21:00.180
不是用户 就是数据

21:01.060 --> 21:02.340
数据仓库里面

21:06.820 --> 21:09.780
ok 那这边呢 是不是涉及到这个redux的操作了

21:10.340 --> 21:17.620
ok 好 那我们这边来到redux 我们这边user slice啊 这边的话 现在就只写了一个什么

21:17.620 --> 21:20.900
init user info啊 就这个 我们把它

21:21.780 --> 21:25.220
打开 打开之后 然后加这个的话 我们要把它导出去

21:27.530 --> 21:32.970
export 对吧 把它导出去 好 然后接下来你在这边的话 是不是应该是

21:33.690 --> 21:37.690
init user info 在在你这边啊 是不是引入一下

21:38.410 --> 21:45.930
import 它是一个action 是吧 我们之前看到的啊 你的slice里面包含这个

21:45.930 --> 21:47.610
它自动就会给你生成这个action

21:48.250 --> 21:53.050
好 这边的话是redux下面的user slice

21:54.490 --> 21:59.610
拿到 好 然后还有什么 还有一个dispatch 是吧 这边import

22:00.250 --> 22:03.370
一个user dispatch

22:04.010 --> 22:08.330
然后front 这是谁提供的react redux提供的

22:09.290 --> 22:17.690
对不对 好 然后下这边的话 你需要const dispatch 等于一个user dispatch

22:18.650 --> 22:22.650
ok 好 然后接下来的话 这边下面就应该去使用

22:23.690 --> 22:30.330
在这那儿哦 好 在这里 好 那这边呢 就是dispatch

22:31.050 --> 22:36.490
dispatch是什么 是不是init user info 那把什么穿过去

22:37.210 --> 22:45.500
把你的这个result data 都给它穿过去 对不对 好来 我们来看一下好不好使

22:48.330 --> 22:49.130
看一下好不好使

22:51.850 --> 22:53.850
啊 这电脑我明年一定要把它换了

22:54.890 --> 22:59.450
是真的是 好 你看这边的话 现在的话 一开始这边 is knocking 是 force

23:00.010 --> 23:03.050
大家这个user info 是个空对象 对吧 我们先注册一下

23:03.930 --> 23:14.890
啊 这边点到注册啊 比如说这边卸节3啊 验证码ARYC啊 注册 说注册成功 对不对 大家这边存进来没有

23:15.610 --> 23:22.090
就存进来了 没问题啊 好 然后接下来的话 还有一个 这边还有就是他登录的这个状态

23:22.890 --> 23:26.650
登录状态你要改 不然他每次进来的话 显示的都是那个

23:27.450 --> 23:32.970
那个注册和登录的那个按钮 对不对啊 所以我们这边呢 需要把这个就是

23:34.090 --> 23:37.210
那个他的登录状态把它改一下 来到这个redux这边

23:37.690 --> 23:40.810
user slice 这边我们再来设置一个reduser

23:41.850 --> 23:43.690
这边是什么呢 这边就是change

23:44.250 --> 23:46.410
change这个knocking status

23:49.960 --> 23:51.640
那就这边的话是stat

23:51.800 --> 23:56.760
ok 好 这边这边呢 就是stat点 is knocking

23:57.320 --> 23:59.560
等于什么呢 等于你这边的这个payload

24:03.060 --> 24:03.460
payload

24:04.740 --> 24:07.300
ok 好 这边同样把它导出出去

24:09.220 --> 24:13.620
导出出去 然后接下来在我们的knocking form里面啊 这边是不是引入一下

24:15.300 --> 24:22.100
对不对啊 引入了之后 然后接下来的话 这边这个是存储数据仓库啊 然后接下来将登录状态

24:23.060 --> 24:23.380
将

24:25.460 --> 24:30.340
将这个数据仓库的登录状态

24:32.100 --> 24:34.340
登录状态啊 进行修改

24:37.050 --> 24:39.050
ok 啊 这边呢 就是dispatch

24:41.770 --> 24:45.450
然后change status啊 这边呢 传一个什么 是不是传一个q

24:47.530 --> 24:49.850
对吧啊 传一个q ok

24:52.120 --> 24:56.680
好 这边设置成q之后 你照理说你这边的话 就是注册成功了 注册成功之后

24:56.920 --> 24:59.960
你这边点击这个确定 是不是应该把这个框框把它关掉

25:00.680 --> 25:04.680
对吧啊 然后这边还有个问题是什么呢 就是我这边假设我把它关了 关了

25:04.680 --> 25:09.080
你看我再把它打开 打开的话 你看之前用户填写的这些信息是不是都还在啊

25:09.560 --> 25:15.320
对不对啊 这个的话也是不合适的啊 所以说我们这边让我们这样子 我们这边专门写个方法

25:16.360 --> 25:17.320
这边的话 方形

25:19.780 --> 25:22.740
方形 比如这个叫做handlecancel

25:25.700 --> 25:27.060
啊 这个方法是不是刚才有啊

25:28.020 --> 25:30.420
我记得是在这两个位置好像有吧

25:32.500 --> 25:39.460
啊 以声明 Defend by never use 啊 我马上就会use 马上在这里 我们这边啊 关闭

25:44.570 --> 25:52.920
关闭 关闭这个登录的弹出框 对吧 登录注册

25:53.720 --> 25:57.240
登录注册的弹出框啊 我们这边就用这个handlecancel

25:58.200 --> 26:05.560
为什么站为什么专门要这个封装一下呢 原因很简单 我们在这里面的话 不是说简简单单把这个弹出框关闭就可以了

26:05.560 --> 26:06.760
我们还要解决这个问题

26:07.480 --> 26:13.240
啊 就你这边的话再次打开的话 我这边把它关了 关了之后再打开的话 你看这边上次填写的时候还在

26:13.880 --> 26:17.720
对不对 我们要把它清除一下啊 所以在这个handlecancel里面

26:18.840 --> 26:21.400
那这边的话就是把上一次的内容把清空

26:22.920 --> 26:24.120
清空上一次的内容

26:24.440 --> 26:27.400
清空上一次的内容

26:27.400 --> 26:29.240
好了 这边就是应该是什么

26:29.240 --> 26:32.440
setregisterinfo

26:33.800 --> 26:36.280
对吧 然后把这个这三个

26:36.920 --> 26:38.200
把它过来

26:39.480 --> 26:44.600
啊 你除了这个就是注册这个 你这边是不是也是一样的存在这个问题啊

26:44.600 --> 26:45.880
就比如说我这边登录这边

26:45.880 --> 26:49.720
填写了东西之后 关了 关了之后接下这边

26:51.000 --> 26:52.040
再把它打开

26:52.360 --> 26:53.160
再把它打开

26:53.160 --> 26:57.160
这登录这边也存在这个问题啊 所以我们这边就两个都一起啊

26:57.880 --> 26:59.480
这边还有这个setreinfo

27:01.320 --> 27:02.200
setreinfo

27:03.480 --> 27:04.840
setre这个logininfo

27:05.400 --> 27:09.880
然后接下来这边把这四个把它出实化一下

27:12.120 --> 27:15.160
对吧 首先出实化 出实化完了之后

27:16.040 --> 27:20.520
再来进行这个关闭操作 那这个关闭操作的话 我记得是

27:21.480 --> 27:23.480
是副主线传递给我的

27:25.480 --> 27:27.000
关闭 我看一下啊

27:28.840 --> 27:30.040
这是login handle

27:30.920 --> 27:33.320
那我记得是副主线传过来的

27:34.520 --> 27:38.840
这边loginfo嘛 对不对对的啊 这边传递过来的

27:38.840 --> 27:40.120
好 首先我们在这里

27:42.300 --> 27:45.740
回到 回到这边啊 这边那是不是直接就是probs啊

27:46.300 --> 27:49.100
点close a model model

27:50.060 --> 27:51.340
ok啊 保存

27:53.180 --> 27:55.020
好 保存之后 然后再这边来看一下

27:55.900 --> 27:56.380
看一看

27:57.980 --> 28:00.380
好 一开始是空的 对吧 好 这边注册

28:01.020 --> 28:04.300
啊 点击注册 注册之后 然后接下来这边

28:05.100 --> 28:05.820
解决3

28:06.700 --> 28:08.620
啊 3已经有了 是吧 解决4

28:09.260 --> 28:10.540
好 然后接下来这边

28:11.420 --> 28:13.580
lksfvu

28:14.540 --> 28:15.100
注册

28:15.820 --> 28:21.580
ok 是不是这边本地有了 人家这边切换成什么了 是不是切换成头像了

28:22.140 --> 28:24.300
我们要的就是什么 是不是要的就是这个效果

28:25.180 --> 28:25.500
ok

28:28.410 --> 28:31.770
但是你现在切换成这个这个的话 但是它不是头像

28:32.490 --> 28:36.250
对 他不是头像 那我这边我想转成就是我那个系统

28:36.250 --> 28:39.850
他随机会生成一个头像 我们来看一下 我们把这个展开看一下

28:39.850 --> 28:43.290
大家可以看一下 我们这边注册的时候这个用户的一些信息

28:44.250 --> 28:47.850
你看 系统是不是这边会自动这边给我们生成一个这个头像

28:48.490 --> 28:52.650
对不对 好 那我现在已经把这个新注册的用户的这个信息放在这里了

28:52.650 --> 28:54.410
那放在这里的话 那这边就好办了

28:55.050 --> 29:00.090
啊 这边的话 我们回到那个loginaveta这边 这边的话 我们之前

29:00.650 --> 29:05.610
这边src我们说没有写啊 那我们先就把写一下 这边让我们引入一个image

29:06.570 --> 29:11.210
啊 从这个让它递里面 引入image好 这边的话这个src

29:11.690 --> 29:17.850
它就等于什么呢 啊 这边把它改成一个大括号 这边的话就是一个image

29:20.740 --> 29:24.420
image好 然后加这边就写你的这个链接就可以了

29:24.980 --> 29:29.940
src等于一个啊 我这边还得去获取一下那个user info

29:31.620 --> 29:36.580
啊 这边这边直接解构解构出来就可以了 user info

29:38.020 --> 29:42.340
把它获取一下 获取之后让下这边user info啊 看它是否有

29:43.060 --> 29:46.820
这边问号点 是否有这个aveta 有我就用 对吧

29:47.460 --> 29:52.260
aftl有 我就用 这个是很好很好用的一个东西啊

29:52.900 --> 29:55.460
很好用的 就经常我们之前会遇到什么呢

29:55.780 --> 29:59.620
can't not read property of antify of这个now

30:00.260 --> 30:03.940
就是什么 就是你读属性的时候 前面那个东西是一个now或者是一个antify

30:04.260 --> 30:07.540
你读取啊 读取了它是不是就有可能就会爆错啊

30:08.180 --> 30:10.420
啊你读取啊对了对了啊就会爆错

30:11.380 --> 30:14.740
对不对啊 这边让他就可以做个判断 如果他这个是antify的话

30:15.220 --> 30:17.220
他这边就不会继续往后面读取了

30:17.620 --> 30:20.660
这是es6给我们提供了一个非常好用的一个语法

30:21.380 --> 30:26.260
啊 之前还有同学在问我见过这个语法没有 我给他说我说我这个经常用啊 非常好用

30:26.900 --> 30:28.740
ok 好来我们保存一下

30:30.500 --> 30:33.460
保存一下 这边看一下 哎 这图片咋回事

30:34.580 --> 30:39.860
哦哦哦 又是又是要配什么 又是要配代理啊 对不对啊 这边又来呗

30:41.380 --> 30:44.980
要配代理啊 这边应该是什么 是不是static开头的

30:46.580 --> 30:49.220
static啊 这边要重启一下

30:51.500 --> 30:57.500
ok 可以看到我们图片确实生效了啊 正因为生效了说他那边的话 是吧 裂开了

30:58.380 --> 31:07.910
对不对 肯定是生效了 嗯 好 稍微等一下吧 稍微等一下

31:09.670 --> 31:13.110
no store fund make sure follow instruction

31:14.070 --> 31:19.750
啊 这个没问题啊 现在这个就是启动第一次太慢了 哎 这边启动了的吧

31:20.870 --> 31:26.340
这咋回事啊 咋回事

31:27.860 --> 31:32.820
报了一个错 嗯 报了一个错 让我们来看一下啊

31:33.780 --> 31:36.500
这边的话 我们能不能看一下我们的这个图片

31:38.100 --> 31:43.140
稍等啊 看一下首先这个代理这边的话应该是没问题的 这边是static

31:43.780 --> 31:48.500
然后我看一下啊 问题肯定就是刚才那对吧 就这个位置

31:50.500 --> 31:56.220
这边的话 这边有啥问题呢 我看一下这边啊

31:57.020 --> 32:04.700
这边的话因为几这边照理说应该是没有问题的啊 我们这边看一下他这边棒的点解是

32:05.260 --> 32:12.460
啊 这边是服务器的错误 对不对 你看这个扣的500服务器的错误服务器的话他这边的话他

32:13.180 --> 32:15.340
呃 这边not found

32:16.220 --> 32:23.820
not found啊 我们仔细来看一下这个错误啊 这错误也是我要说的 你看我们这边的话他这个 static.js

32:24.380 --> 32:27.180
bond.js 他没有找到这个bond.js

32:28.300 --> 32:34.620
啊 为什么没找到 为什么没找到啊 原因很简单 你在这边你是不是做了这个请求转发呀

32:35.660 --> 32:39.340
在在这里 你这边是不是做了请求转发这个static

32:39.980 --> 32:42.140
他是不是做了请求转发转发到这个位置了

32:42.780 --> 32:51.580
对不对 也就是之所以出现这个问题是因为就是你最终你vivo pack会对整个项目进行打包嘛 打包之后然后接下来他的那个

32:52.380 --> 33:00.060
就他的jess文件会生存在一个什么呢 生存在一个就在在这里 生存在这个static

33:00.940 --> 33:06.140
那下面的这个jess里面 而你刚才的话你又设置了请求转发 这一块你要进行转发

33:06.700 --> 33:11.500
那他自然而然他就找不到了 对不对 那我们这边的话我们需要干嘛

33:11.740 --> 33:16.540
我们这边的话需要做一件事情就是修改他打包好的这个目录

33:17.580 --> 33:23.180
啊 就默认你这边打包是打包到这个static目录里面 我不要让你打包在这个static里面

33:23.900 --> 33:27.420
是了吧 啊 这个怎么修改呢 我们这边来看一下啊

33:30.250 --> 33:36.890
你这边的话可以通过一个命令 叫做npm eject 我们这边来记录一下啊

33:37.530 --> 33:46.150
在笔记里面记录一下 等一下把我们的笔记打开 我们在这儿记录一下

33:48.070 --> 33:53.910
这边是第几个了 这第四个啊 第五个了啊 第五个就是如何修改

33:55.030 --> 33:59.590
如何修改打包后的目录

34:00.310 --> 34:08.550
ok 由于我们的这个静态资源静态资源 以这个static开头

34:09.590 --> 34:14.630
啊 所以我们配置了这个请求转发

34:16.840 --> 34:24.680
这发对吧 但是这个react啊 这个应该不是react就是create啊create react app

34:24.680 --> 34:28.360
就这个脚手加工具 他是基于vivo pack的啊

34:29.320 --> 34:36.840
基于vivo pack啊 这个脚手加工具默认在打包应用的时候

34:37.720 --> 34:45.320
打包应用的时候也会将什么呢 将打包好的资源

34:46.600 --> 34:52.360
将打包好的资源放置到哪里 放置到

34:53.320 --> 34:57.560
放置到这个static static目录下

34:58.680 --> 35:05.480
导致导致什么呢 在加载这个打包

35:06.360 --> 35:13.640
好后的资源时 资源时也会进行这个请求转发

35:15.480 --> 35:17.800
啊 这个问题看懂了吧 各位看懂没有

35:18.280 --> 35:23.320
就我这边的话 我打包之后 打包之后的话 我这边要寻找一个叫做bundle.js的文件

35:23.800 --> 35:28.920
他默认他就给我放在这个static里面的 但你又配置了那个请求代理

35:29.320 --> 35:34.040
他是不是就会这边到服务器这边来找 服务器哪有这个东西呢 服务器没有

35:34.040 --> 35:36.120
对不对 我没有这个东西 ok

35:37.960 --> 35:41.320
也会请求转发啊 从而抱错

35:42.680 --> 35:45.960
啊 那我们这接下来我们要怎么做呢 我们要做的事情也很简单

35:46.680 --> 35:53.080
我们需要做的是啊 需要做的是修改

35:54.040 --> 36:04.460
打包好后的目录 ok 啊 因为后段那边人家都已经定下来了 对吧 你static请求转发 你不可能让后段改一下

36:04.780 --> 36:09.980
啊 后段你说改一下改成另外的啊 这边呢 就是你这边来改 这边怎么改呢

36:10.540 --> 36:11.340
啊 首先

36:13.420 --> 36:15.340
首先运行

36:16.300 --> 36:17.180
下面的命令

36:21.820 --> 36:24.460
运行下面的命令啊 就这个

36:25.580 --> 36:28.380
啊 先运行这个叫做npmron eject

36:28.940 --> 36:33.260
这npmron eject 这eject是什么意思 eject是弹出的意思

36:33.820 --> 36:36.220
啊 比如你在这边你可以看一下 eject

36:37.020 --> 36:37.900
它是弹出

36:39.660 --> 36:46.060
看到没有啊 这边弹射弹射出来 那npmron eject它是怎么了 它这边的话

36:46.540 --> 36:54.860
它就会把就是你vivo pack的那些配置那些文件把它弹射出来啊 你看我们这边 我们现在整个这个项目其实是很干净的

36:55.660 --> 36:58.620
对不对 就只有loader module public src

36:59.500 --> 37:04.700
但是我跟你说过就是我们这个create react app 它是基于什么 它是不是基于vivo pack

37:05.420 --> 37:09.180
但是你这边你会发现一件很奇怪的事情 你能不能找到这个vivo pack的配置呀

37:09.900 --> 37:11.020
对 你会发现你找不到

37:11.900 --> 37:15.900
啊 你找不到 为什么会找不到 因为它默认的话它这边是给你隐藏起来的

37:16.300 --> 37:20.140
啊 你如果就想要配置的话 你需要把它弹射出来

37:20.780 --> 37:23.100
ok啊 说说我们这边它我们来做一下啊

37:24.460 --> 37:25.100
这边这边

37:26.060 --> 37:29.420
npmron eject

37:30.380 --> 37:30.700
走

37:32.060 --> 37:36.540
好 它这边的话会问你一句话 然后这边会问你 are you sure

37:37.020 --> 37:38.220
you want to eject

37:38.780 --> 37:41.900
啊 然后this action is this permanent

37:42.540 --> 37:44.540
什么意思啊 就是你确定你要弹射吗

37:44.860 --> 37:50.220
这个动作是不可力的 就是我这边我把就是隐藏的那些文件 我给你弹射出来之后

37:50.540 --> 37:53.420
啊 你想再重新把它隐藏是不能再隐藏了

37:53.740 --> 37:57.580
啊 它是一个不肯定软的啊 但这个咱们肯定选择夜市对吧

37:59.260 --> 38:01.740
ok 好 然后接下来 你们发现这边爆错了

38:02.540 --> 38:05.420
啊 你会发现 哎 这边好像没有弹射出什么东西啊

38:05.820 --> 38:09.180
好像没有多什么东西 对不对 好来我们这边来检查一下

38:09.500 --> 38:10.300
他为什么爆错

38:10.940 --> 38:11.660
this get

38:12.220 --> 38:13.900
啊 这个response tree

38:14.380 --> 38:15.900
has untracked files

38:16.300 --> 38:18.300
or on this commited change

38:18.940 --> 38:19.580
啥意思啊

38:20.140 --> 38:23.900
啊 如果这个我不讲的话 我估计有一个同学要来问我了啊 这什么意思

38:24.300 --> 38:25.100
这个其实人家

38:25.500 --> 38:27.980
解决方案已经给你写在这个提示里面了

38:28.300 --> 38:31.020
说这个是我反复强调的 一定要去看啊

38:31.660 --> 38:32.700
一定要去看啊

38:33.180 --> 38:35.660
是了吧人家这边这个解决方案人家

38:36.140 --> 38:38.060
已经告诉你为什么这边会爆错了

38:38.300 --> 38:40.860
什么意思啊 这边呢 我们这边是不是会有一个这个

38:41.260 --> 38:43.020
用到了这个get倉库啊

38:43.420 --> 38:46.780
他说你get倉库啊 就是我们这边整个这个项目

38:47.100 --> 38:48.140
是用到了get的

38:48.540 --> 38:51.980
用了get他说这边就是你有些这个文件你没有提交

38:52.460 --> 38:56.060
你先把他提交一下 就是保证你整个项目里面没有什么呢

38:56.060 --> 38:58.460
没有就是没有提交的就uncommited

38:58.940 --> 39:00.780
这个file就不能有

39:01.180 --> 39:03.580
ok 我们这边把他提交一下就可以啊

39:05.100 --> 39:07.340
这边啊 你看这些都是清计下 对吧

39:07.420 --> 39:09.500
你看我们把这之前我们把这些是不是删了的

39:09.500 --> 39:11.180
对不对 这些都是一些更改啊

39:11.180 --> 39:13.180
把这些更改我们把他全部

39:13.740 --> 39:16.460
这个应该是status or change啊 对

39:18.780 --> 39:21.740
好 然后接下来咱们这边把他提交一下啊

39:21.740 --> 39:23.340
咱们这边就叫做什么呢

39:25.340 --> 39:26.620
for eject

39:27.580 --> 39:30.620
这是我自己取的名字啊 就是为了能够弹出对吧

39:30.620 --> 39:34.380
为了能够弹出啊 说说这边的话提交一次 commit

39:35.100 --> 39:37.020
好 你看这边现在就干净了对吧

39:37.100 --> 39:39.660
然后你这边你会发现文件后面也没有什么

39:39.660 --> 39:42.780
这没有什么ammon啊 u啊那些什么也没了对不对

39:43.660 --> 39:45.420
好 然后接下来这边再来一次

39:45.420 --> 39:47.660
再来试一次 走

39:49.020 --> 39:50.860
好 然后接下来这边y

39:51.820 --> 39:53.500
哎 你看这一次是不是就ok了

39:54.780 --> 39:57.340
对不对 这一次就ok了 你看这边那就弹出什么

39:57.340 --> 40:00.460
就弹出东西来了啊 这次弹出东西来了

40:01.100 --> 40:04.380
弹出东西来弹势弹出来他怎么跟我抱错了呀

40:05.340 --> 40:06.620
这边一铺

40:09.610 --> 40:12.490
啊 我想起来了啊 当时我这边在弹出的时候

40:12.490 --> 40:13.850
他这边也是抱了错的

40:13.850 --> 40:15.610
然后记得这个package点接上这边

40:15.610 --> 40:16.570
这边就会增加

40:17.210 --> 40:19.610
增加很多 你看一下子这个依赖是不是就增加多了

40:20.250 --> 40:23.290
对不对 我记得这边那是三一个东西就可以了

40:23.290 --> 40:25.130
我想想啊 这边是三什么

40:26.490 --> 40:29.690
啊 这边的话他这个错误其实是那个

40:29.690 --> 40:30.970
是yes lint的错误

40:31.530 --> 40:32.570
可不可以啊 你看这边

40:33.210 --> 40:34.730
啊不是yes lint 我看好像是

40:35.690 --> 40:38.810
背 我看是这个bable

40:39.530 --> 40:41.370
bable的问题 看这边啊

40:41.370 --> 40:43.450
你看这边大致看一下这边

40:43.450 --> 40:48.410
bable preset react app requires that you specify

40:48.410 --> 40:50.730
这个loadenway啊

40:50.730 --> 40:53.290
你这个的话你最快的解决方案就是把这个

40:53.770 --> 40:55.450
就在这个package接上里面

40:56.010 --> 40:59.690
他这边呢 是不是有一个yes lint config人家这边

41:00.250 --> 41:02.490
就这一块啊 这一块你直接把它注射掉

41:03.450 --> 41:04.650
注射掉还不行

41:04.650 --> 41:08.490
他这边呢 这个他是一个节省节省是要求不能有注射的

41:08.490 --> 41:11.130
你直接把它干掉 干掉之后再保存一下

41:11.850 --> 41:13.450
是不是就ok了 对不对

41:14.330 --> 41:15.450
好 我们这边记录一下吧

41:18.760 --> 41:19.320
记录一下

41:20.280 --> 41:20.600
ok

41:21.960 --> 41:24.600
好 这边呢 弹射出来之后

41:26.520 --> 41:33.560
弹射出来后啊会多出来很多隐藏文件

41:34.520 --> 41:37.080
隐藏文件啊

41:37.080 --> 41:42.440
然后我们就可以修改对应的配置

41:43.240 --> 41:45.560
但是会有一个什么呢

41:45.560 --> 41:48.680
会有一个关于这个bable的错误

41:50.710 --> 41:52.870
bable的错误啊

41:52.870 --> 41:54.390
但这个bable的错误的话

41:54.390 --> 41:55.430
如果你想解决的话

41:55.430 --> 41:56.950
他应该是有其他解决方案的

41:56.950 --> 41:58.310
啊 但最快的啊

41:58.310 --> 42:00.870
最快的解决方案就是在package点接上里面

42:00.870 --> 42:01.750
把这一块删掉

42:02.470 --> 42:04.950
然后最快的解决方案

42:06.790 --> 42:09.990
解决方案就是在这个package

42:11.190 --> 42:14.390
package点接上中

42:16.150 --> 42:20.390
中删除如下的配置

42:21.190 --> 42:22.710
ok 你把这个删了之后

42:23.350 --> 42:24.470
他就不爆出了

42:25.190 --> 42:25.910
就不爆出了

42:26.950 --> 42:28.710
ok 这是这一块啊

42:29.510 --> 42:31.350
好 让一下这边继续

42:33.990 --> 42:36.230
好 接下来咱们这边再来重新看一下

42:36.230 --> 42:38.550
咱们需要把服务器重新启动一下

42:39.350 --> 42:44.020
把这个服务器重新把它启动一下

42:48.170 --> 42:49.450
ok 启动了

42:49.450 --> 42:51.210
启动了之后 大家这边重新看一下

42:51.210 --> 42:52.010
这边重新刷新

42:54.090 --> 42:55.850
哦 那这边没启啊

42:55.850 --> 42:56.730
这边没启

42:56.730 --> 42:57.770
把这边启动一下

42:58.890 --> 43:00.570
哦 你现在启动还是会爆出

43:00.570 --> 43:02.570
我们现在是不是还没改配置啊

43:02.570 --> 43:03.290
对不对

43:03.290 --> 43:04.330
好 然后接下来这边的话

43:04.330 --> 43:06.090
咱们需要把这个配置

43:06.730 --> 43:07.530
把它改一改

43:08.490 --> 43:10.890
好 这里的话让我想一想啊

43:10.890 --> 43:13.290
这边的话是在把这些多余的把它关了啊

43:14.970 --> 43:16.010
close to right

43:17.050 --> 43:19.770
哦 把这些多余的把它关了

43:20.410 --> 43:21.530
close saved

43:23.050 --> 43:25.210
嗯 这个的话是改哪个来着呢

43:25.210 --> 43:26.410
我记得好像是build

43:28.170 --> 43:28.650
看一下

43:30.330 --> 43:31.850
好 这里咱们收一下

43:31.850 --> 43:33.130
收一下是不是就知道了

43:33.130 --> 43:34.170
这边static

43:35.370 --> 43:36.890
啊 这边no result 是吧

43:36.970 --> 43:38.650
那是start start里面吗

43:39.530 --> 43:40.490
start也没有

43:42.730 --> 43:43.610
哎哟 想一想啊

43:43.610 --> 43:46.730
这边的话反正是改这个webpack的配置

43:46.730 --> 43:47.850
哦 这里config

43:48.650 --> 43:49.770
config

43:49.770 --> 43:51.690
然后接下来这边static

43:53.130 --> 43:53.450
啊

43:55.450 --> 43:56.090
对 这里

43:56.730 --> 43:57.610
可不可以啊 这里

43:59.530 --> 44:01.690
你看 在这边的话是不是就可以看到

44:01.690 --> 44:02.890
对不对 你让它默认打包呢

44:02.890 --> 44:04.490
打包是在这个static

44:04.490 --> 44:05.770
这个static里面

44:05.850 --> 44:07.370
那接下来你把这边对应的

44:07.370 --> 44:08.890
你把它改一下就可以了

44:08.890 --> 44:10.490
改什么名字你自己看着办

44:11.210 --> 44:13.370
比如我这边改成这个asets

44:13.370 --> 44:16.090
那回头它打包好的东西是不是就在asets里面

44:17.130 --> 44:19.290
对吧 我把这边这几个都改一下

44:23.700 --> 44:26.100
ok 这边的话在笔记里面记录一下啊

44:27.380 --> 44:28.660
嗯 接下来

44:30.340 --> 44:33.700
接下来在弹射

44:35.060 --> 44:35.700
弹射

44:36.420 --> 44:40.260
弹射出来的配置文件中

44:40.980 --> 44:45.860
我们就可以修改这个webpack

44:47.220 --> 44:50.180
webpack的打包配置

44:51.700 --> 44:52.180
对吧

44:52.180 --> 44:53.860
好 这边大概就

44:53.860 --> 44:54.900
就是在两个位置呢

44:54.900 --> 44:55.940
在这个config

44:57.060 --> 44:58.020
config

44:58.820 --> 45:01.060
然后下面的看一下

45:02.900 --> 45:04.180
config下面的

45:06.180 --> 45:08.020
就config下面的webpack

45:08.020 --> 45:09.380
点config.js

45:10.260 --> 45:14.020
webpack.config.js

45:14.740 --> 45:15.460
然后大约

45:16.500 --> 45:18.740
然后在两个位置

45:20.260 --> 45:21.620
就是你的这个output

45:23.380 --> 45:24.020
output

45:25.300 --> 45:26.420
的这个output

45:27.860 --> 45:28.500
output

45:29.060 --> 45:32.420
然后对应的这个配置

45:33.380 --> 45:33.780
对吧

45:34.500 --> 45:37.540
好 把这个给大家稍微给大家看

45:37.540 --> 45:37.940
这个

45:39.140 --> 45:41.300
稍微给大家放到笔记里面吧

45:41.300 --> 45:41.940
就这一块

45:43.460 --> 45:43.860
这一块

45:48.420 --> 45:48.740
ok

45:50.900 --> 45:51.780
大纸就这一块

45:52.980 --> 45:54.420
好 来我们这边我们来看一下

45:54.420 --> 45:55.380
把这个保存一下

45:57.060 --> 45:58.740
然后接下来这边保存一下

45:59.700 --> 46:01.300
保存了之后把这个就可以关了

46:03.460 --> 46:04.180
关了之后

46:04.180 --> 46:05.700
然后下这边咱们来启动一下

46:09.880 --> 46:10.200
ok

46:10.840 --> 46:11.320
启动一下

46:12.200 --> 46:12.760
看一下啊

46:13.560 --> 46:16.040
这一次的话他这边就没有问题了

46:16.920 --> 46:19.240
这一次的话他那个你是assets嘛

46:19.240 --> 46:19.880
对吧

46:19.880 --> 46:21.880
他就不会涉及到那个转发的问题了

46:23.880 --> 46:25.000
好 稍微等一下啊

46:26.200 --> 46:27.240
这边又爆了一个什么

46:28.600 --> 46:29.720
crbug

46:30.280 --> 46:31.160
modelfile

46:31.720 --> 46:33.400
这个是快被废弃了

46:34.280 --> 46:36.760
就这边有个这个model快被废弃了

46:37.480 --> 46:40.840
现在这个手持启动太慢了

46:41.400 --> 46:42.200
后面的话还是

46:42.760 --> 46:43.640
就大家其实

46:44.200 --> 46:45.160
有质学能力的话

46:45.160 --> 46:46.440
大家还是把它换成wit

46:47.720 --> 46:48.760
还是换成wit

46:48.760 --> 46:51.880
这个webpack这个开发体验确实不差好

46:54.680 --> 46:55.400
爆错了

46:57.700 --> 46:59.620
failed to know the config

47:02.410 --> 47:02.970
桌面

47:07.430 --> 47:08.150
桌面

47:08.150 --> 47:09.110
等一下啊我看一下

47:10.470 --> 47:11.750
桌面上有一个这个

47:12.870 --> 47:13.990
桌面上哪来的

47:14.870 --> 47:15.830
稍等我看一下

47:19.580 --> 47:20.860
哦桌面上这边

47:21.260 --> 47:23.020
这桌面上这为什么会有这些问题

47:23.420 --> 47:24.300
把这些删了

47:25.740 --> 47:26.860
好这边再看一下

47:28.540 --> 47:30.620
啊重新呢我现在在client里面啊

47:31.660 --> 47:32.540
啊重新start

47:33.900 --> 47:34.940
重新start看一下

47:36.700 --> 47:37.260
啊yes

47:42.900 --> 47:43.220
好

47:43.860 --> 47:46.260
稍微等一下啊啊出来了嘛

47:46.260 --> 47:46.900
出来了

47:46.900 --> 47:48.740
啊出来了之后然后接下来这边

47:49.700 --> 47:50.820
这边的话咱们

47:50.820 --> 47:53.140
哎刚才桌面上为什么会有那些文件

47:53.140 --> 47:54.100
好奇怪啊

47:54.100 --> 47:55.460
好大家这边让我们这边

47:56.340 --> 47:57.300
再来一个哈

47:57.300 --> 47:57.780
解解

47:58.820 --> 48:00.980
解解4好像已经注冊了是吧

48:00.980 --> 48:01.700
好解解5嘛

48:02.420 --> 48:05.220
好人家这边eupb

48:06.020 --> 48:06.820
啊注冊

48:07.540 --> 48:08.020
搞定没有

48:08.740 --> 48:09.780
都搞定了

48:09.780 --> 48:10.260
对不对

48:10.260 --> 48:10.900
显示头像

48:10.900 --> 48:11.860
这边又爆什么出啊

48:13.220 --> 48:14.980
preview force

48:16.980 --> 48:18.020
哦这个这个

48:18.100 --> 48:18.580
这个是

48:19.700 --> 48:20.660
这个错误简单

48:21.220 --> 48:21.940
这个是这边

48:22.820 --> 48:24.500
我们这边loginaveta

48:25.940 --> 48:26.340
这里

48:27.700 --> 48:29.780
这里我们是不是这边这个aveta

48:29.780 --> 48:31.300
大家这边preview force啊

48:31.700 --> 48:32.020
对不对

48:32.020 --> 48:34.100
它不是这个aveta逐渐的这个

48:34.900 --> 48:36.180
不是啊这边写错了

48:36.980 --> 48:38.500
这个它是emaj里面的

48:39.220 --> 48:40.980
emaj里面它提供了一个属性

48:41.540 --> 48:42.180
保存一下

48:43.140 --> 48:45.060
保存了之后这边就重新刷新一下

48:46.180 --> 48:46.580
OK

48:46.580 --> 48:47.380
好重新再来

48:48.180 --> 48:48.660
注冊

48:49.940 --> 48:51.220
然后解解

48:51.780 --> 48:52.100
6

48:53.220 --> 48:54.420
t3

48:55.300 --> 48:55.780
gb

48:56.580 --> 48:57.380
啊注冊

48:58.100 --> 48:58.580
是不OK

48:59.140 --> 48:59.540
对不对

48:59.940 --> 49:01.700
把我们整个这个注冊功能

49:02.340 --> 49:03.220
就写完了

49:04.660 --> 49:06.580
我这边本来我是想把那个

49:07.700 --> 49:09.220
登录功能一起写了的

49:09.780 --> 49:13.060
包括本来这节课我是想把就是这边怎么退出登录啊

49:13.060 --> 49:15.060
还有就是那个登录功能一起写了的

49:15.060 --> 49:17.220
啊但这边的话我现在我要去接小孩了

49:17.780 --> 49:18.820
啊那这样子吧

49:18.820 --> 49:20.340
那我们这节课就先到这

49:20.820 --> 49:24.180
大家下来的话把这个注冊功能把它写了

49:24.740 --> 49:25.380
OK

49:25.380 --> 49:26.740
我去悠儿园

49:26.740 --> 49:27.540
去一趟悠儿园

49:27.540 --> 49:28.420
哈哈哈

49:28.420 --> 49:28.900
好

49:28.900 --> 49:29.380
OK

49:29.380 --> 49:30.420
好这节课就到这里

49:30.420 --> 49:31.220
啊再见

