WEBVTT

00:00.240 --> 00:02.240
OK 欢迎回来

00:02.240 --> 00:09.240
我们上节课的话 已经把这个学生管理系统啊 基本的话 我们就已经写完了 对吧 写完了

00:09.240 --> 00:18.240
OK 我们这些课的话 我们再花一节课的时间 我们把这个路由的话 一些剩下的一些东西 把它说一说

00:18.240 --> 00:29.240
啊 然后顺便把咱们的这个笔记 把它完善一下啊 这笔记呢 咱就之前就只写了一个快速搭建服务器啊 然后快速搭建整个管理系统 是吧

00:29.240 --> 00:34.240
好 我们把那个就是路由 就是这边 我们这边再来一个react

00:35.240 --> 00:38.240
Zotr 然后这个v6

00:40.240 --> 00:42.240
v6 然后路由

00:44.240 --> 00:52.240
路由总结 对吧 我们用到的一些东西 我们把它放在这里做一个这个总结 大家回头的话可以看一下

00:52.240 --> 00:57.240
他们说了就之前的话 我们在讲的时候 我们就说过 他整个这个官网的话分成什么

00:58.240 --> 01:06.240
分成你看这边是不是其实就是几大部分 一个是components 一个是什么 是hooks 啊 然后还有什么

01:06.240 --> 01:14.240
还有就是他的一些api 啊 这边一些api 但这些api的话我们目前的话还没用到啊 这个的话我们用到后面用到的时候我们再说

01:14.240 --> 01:18.240
好 所以我们目前的话 主要就是主键

01:19.240 --> 01:25.240
还有就是这个hooks 主要就是这两块 好 那我们这边的话 我们来总结像我们用到的

01:26.240 --> 01:34.240
我们这边一个是components 主键 主键 啊 另外一个是什么呢 另外一个是我们用到的这个hooks

01:36.240 --> 01:41.240
对吧 我们这边来一个一个看一下 好 回到我们之前写的代码

01:44.240 --> 01:50.240
哦 怎么回事 好 回到我们之前写的代码这个代码在这 在这

01:51.240 --> 01:53.240
啊 好

01:54.240 --> 02:03.240
ok 好 这边这个代码的话 然后我们就一点一点来看一下啊 我把这个拿下去 我们这边来看一下我们这边具体用到了什么啊

02:03.240 --> 02:12.240
我们在我们的笔记里面 然后稍微总结一下 呃 首先的话是app 这边啊 app 这边的话啊 首先应该是index.js

02:13.240 --> 02:21.240
对吧index.js的话 这边我们用到的是一个browser router啊 这是我们首先用到的第一个主键 browser router

02:21.240 --> 02:32.240
这个是什么呢 这个的话就是啊 啊 整个前端路由 就是啊 整个前端路由 也这个history motion

02:34.240 --> 02:42.240
history motion开启 对吧啊 你看我们这边的话 然后我们这边在切换的时候 是不是都是history motion

02:43.240 --> 02:52.240
可不可以啊 啊 与之相对的还有一个是什么呢 还有一个就是这个哈希啊 在这个位置啊 在这个位置啊 这边哈希router啊

02:53.240 --> 02:58.240
这个这个的话他就是哈希模式 他使用方式的话 你看和这个bowser router是一样的

02:59.240 --> 03:06.240
可不可以啊 也是就是你包在最外层啊 另外一个还有是一个哈希router 这个的话就是整个路由

03:06.240 --> 03:14.240
整个路由 整个路由 整个前端路由 也这个哈希模式

03:16.240 --> 03:22.240
开始啊 他这一点的话就和那个view不一样view的话是配置一下就可以了

03:23.240 --> 03:28.240
对吧 我们这边让我们可以来试一下吗 我们在这边的话 我们引入这个哈希

03:29.240 --> 03:30.240
哈希router

03:30.240 --> 03:34.240
好 引入哈希router之后 然后加你在这边的话 你把它改一下

03:35.240 --> 03:45.240
改了之后你保存 保存了之后 然后加我们这边我们来到 你看这边是不是已经变了 我重新来啊 这边301进来 你看这边是不是已经变成哈希模式了

03:46.240 --> 03:55.240
ok about啊 然后加这边end 对吧 好 你注意这个的话是包在这个你根组件的 就是包裹根组件啊

03:55.240 --> 03:59.240
这边记一下 就这两个是包裹根组件

04:00.240 --> 04:02.240
包裹根组件

04:04.240 --> 04:05.240
啊 这边也是

04:06.240 --> 04:07.240
包裹根组件

04:09.240 --> 04:11.240
ok啊 这是这两个

04:12.240 --> 04:13.240
啊 把这改回去吧

04:16.130 --> 04:25.850
啊 哈希 我们这边改成这个browser browser router 把这改了

04:26.850 --> 04:34.850
ok 把它改回去 好 这是第一个 好 然后现在这边的话 在这个app这边 app这边的话 我们用到了什么呢 我们用到了route

04:35.850 --> 04:41.850
啊 入词 入词的话 这边的话 就是有点类似于以前的switch

04:42.850 --> 04:45.850
啊 你如果学过v5的话啊 v5的话 以前这边是不是switch

04:46.850 --> 04:50.850
对吧 啊 这边接下来我们用到的是route 他也是一个组件

04:51.850 --> 04:52.850
入词

04:53.850 --> 05:02.160
类似于类似于这个v5 版本的这个switch

05:04.160 --> 05:10.160
啊 主要是提供一个主要是提供一个上下文环境

05:12.160 --> 05:18.160
啊 什么叫做这个上下文环境 这边呢 涉及到react里面的一个知识叫做context

05:19.160 --> 05:23.160
context 这个的话 咱们在入门片的话 咱们先把它放一放

05:24.160 --> 05:30.160
就一片的时候 我会讲这个东西 啊 到时候我们写那个手写迷你版这个reactrouter的时候

05:30.160 --> 05:37.160
啊 我们也会用到那个东西 啊 但现在入门片的话就没必要了 入门片咱们就快速的来用 对吧

05:38.160 --> 05:44.160
好 这边呢 是switch 啊 说起来的话 我回头我会把这个v5 版本的那个这个学生管理系统给大家啊

05:44.160 --> 05:51.160
我v5的我也写了一个啊 这个是提供一个上下文环境 好 然后接下来的话 这边就是route

05:52.160 --> 05:58.160
route的话就是什么 是不是就是放在这个route里面啊 然后啊 其实就是这句话

05:59.160 --> 06:07.160
就这句话 对吧啊 在这个route 组件中 书写你对应的路由啊 所以这边是大写的

06:08.160 --> 06:15.160
书写你对应的路由啊 以及路由对应的组件 它上面的话会有些常用的属性 比如说我们这边用到了这个

06:16.160 --> 06:22.160
这个是什么 是匹配匹配的路由啊 接下来用到了是elements

06:23.160 --> 06:31.160
elements的话对应的是什么呢 是就是你匹配上该路由时匹配上该路由时

06:32.160 --> 06:44.160
该路由时要渲染的组件 对吧 啊 但它肯定是上还有一些其他的啊 还有其他的 那这个的话你去哪去看

06:45.160 --> 06:52.160
肯定去蚊囊里面去看嘛 对不对 有同学说我去百度一下 你这个不需要百度啊 养成看官网的习惯

06:53.160 --> 06:57.160
知道吧 养成看官网啊 你在这边你就看的 你看这边

06:58.160 --> 07:06.160
是不是就都出来了 对吧 它的pass啊 然后在这边如何做一个动态的传参 这些都有都有

07:06.160 --> 07:12.160
啊 比如说当我遇到需求的时候 我第一反应一定是来看官方蚊的 而不是说到处去百度

07:13.160 --> 07:17.160
知道吧 ok 好 回到我们这边

07:19.160 --> 07:31.920
啊 这是关于这个入词 好 然后接下来的话下一个 下一个啊 下一个我们看一下啊 下一个我们用到了是一个lambar gate

07:32.920 --> 07:40.920
lambar gate 它也是一个组件 它主要是做什么 是不是做这个导航的 就我们这边啊 就是从从令相的

07:41.920 --> 07:43.920
是吧 主要是做从令相的

07:44.920 --> 07:51.920
从令相啊 它也是个组件啊 你看我们在哪用到了 我们在这边是不是用到了啊 element它对应的是个组件

07:52.920 --> 07:58.920
lambar gate 然后接下来这边的话去导航道啊 它应该不是说从令相 这边的话其实就是导航

07:59.920 --> 08:06.920
就导航的意思 导航道哪里 导航道哄 对吧 好 我们这边来看一下lambar gate

08:06.920 --> 08:08.920
components里面lambar gate

08:09.920 --> 08:15.920
lambar gate elements change the current location when it is rendered

08:16.920 --> 08:20.920
当你的这个渲染之后 它会改变当前的这个location

08:21.920 --> 08:24.920
it's a component whopper around the userlambar gate

08:25.920 --> 08:29.920
它这边其实就是调的是这个hook 通过use thelambar gate就可以得到

08:29.920 --> 08:33.920
就可以得到一个这个 你这个可以导航的

08:34.920 --> 08:39.920
就是这个组件 也不是组件 这个就是我们这边的话用过的 大家还记不记得

08:40.920 --> 08:46.920
我们在 hung的时候 是我看一下是 hung还是哪里 就我们当时要做跳转了

08:48.920 --> 08:51.920
比如说这个detail应该是用到的

08:52.920 --> 08:55.920
就这个 就这个 看到没有 uselambar gate

08:56.920 --> 08:59.920
好 然后接下来的话 你这边的话 你调用这个uselambar gate就会得到一个什么

09:00.920 --> 09:05.920
是不是得到一个 一个函数 对不对 它反回一个函数 然后既然你这边的话用这个函数

09:06.920 --> 09:10.920
是不是就可以做这个跳转 对吧 好 那这边的这个lambar gate

09:11.920 --> 09:15.920
就我们刚才的那个lambar gate 是在app里面

09:16.920 --> 09:20.920
这个lambar gate 本质上就和那个uselambar gate那个返回值的那个函数是一样的

09:21.920 --> 09:28.920
只不过它这边的包装成了一个组件 ok 所以这边的不能说它是重定性啊 这边的就是一个导航组件

09:30.920 --> 09:32.920
导航主战这个组件

09:33.920 --> 09:45.920
ok 类似于类似于这个uselambar gate的这个返回值返回值函数啊 只不过

09:46.920 --> 09:50.920
这是一个组件 他不是个函数 对吧 他是个组件

09:51.920 --> 09:54.920
好 这是lambar gate 好 接下来的话这个lambar link

09:55.920 --> 09:59.920
lambar link 这个就是什么 这个就是

10:00.920 --> 10:05.920
呃 就是类似于link 类似于link

10:07.920 --> 10:16.920
然后最终和link一样和link一样 会被渲染为什么 是不是A标签

10:17.920 --> 10:22.920
对吧 我们这个的话之前我们在这个 控制台我们这边是看到的

10:23.920 --> 10:27.920
就我们这边比如我们这个详情 详情我们是不是用的是lambar link

10:28.920 --> 10:33.920
最终的话渲染出来是什么 是不是A标签 对吧 好 要注意他和link的区别

10:34.920 --> 10:42.920
注意他和link的区别 实际上就是什么呢 就是当前

10:42.920 --> 10:46.920
当前的这个 这个应该叫什么名字呢

10:47.920 --> 10:55.920
当前的链接吧 当前的链接啊 会有一个 会有一个名为什么

10:56.920 --> 11:03.920
active active的激活样式 对不对啊 你看这上面

11:04.920 --> 11:09.920
看这上面 这里 他会有一个什么 所以会有个active的激活样式

11:09.920 --> 11:13.920
对不对 所以他一般用来做什么呢 做这个就是导航的这个挑转

11:14.920 --> 11:30.230
所以所以一般用于做导航就顶部顶部顶部啊 或者这个左侧这个导航导航男

11:32.230 --> 11:37.230
导航男的挑转啊 因为我们导航男的话一般是不是就是你要 就是你

11:37.230 --> 11:42.230
就是你当前是哪一页 这边是不是他会我们会让他有个激活样式啊 对来比较这边是关于我们

11:43.230 --> 11:48.230
这边的话就是他会有个激活的这个样式啊 所以他就特别适合大家来做这种导航的这个

11:49.230 --> 11:57.230
跳转的这个链接啊 所以他你看他名字都叫做neverlink 对吧 这个nnav是不是就是导航男的意思啊 对吧

11:58.230 --> 12:04.230
啊 这是关于这个啊 大家我们看我们还用到了什么neverlink啊 app组建里面就没有了 是吧

12:04.230 --> 12:08.830
啊 宏组建里面 宏组建里面啊 用到了一个usernocation

12:09.830 --> 12:15.430
usernocation啊 usernocation的话他就是一个什么了 他就是个户客了 我们来到这边

12:16.230 --> 12:20.350
usernocation啊 这个的话就是什么 就是获取到你的location对象

12:21.430 --> 12:31.430
获取到location对象啊 这个没什么好说的location好 让我们这边你注意 我们这边获取到location对象之后

12:32.430 --> 12:37.630
我们这边的话 是不是通过location对象 是不是可以访问到这个state啊 对不对 啊 这边你注意

12:38.830 --> 12:41.110
获取到 获取到

12:42.350 --> 12:42.990
location

12:44.150 --> 12:48.950
对象后啊 我们可以获取到

12:50.510 --> 12:52.710
可以获取这个state属性

12:54.110 --> 12:55.430
啊 然后其他这个

12:56.430 --> 13:01.910
啊 组建在进行跳转的时候 他通过nevergate可以额外的是不是传递这个state

13:02.750 --> 13:06.830
对不对啊 这个我们后面 后面一会儿讲一会儿记录那个

13:07.750 --> 13:14.470
跳转的时候 我们这边再记录一下啊 这边的话是usernocation啊 他我们可以获取state属性啊 这往往

13:15.230 --> 13:20.550
这往往是这个其他路由跳转过来的时候

13:21.270 --> 13:25.470
跳转过来的时候啊 然后会在state里面

13:26.350 --> 13:31.590
会在state里面传递额外的

13:32.270 --> 13:35.990
这个数据 对吧 比如说我们那个alert

13:37.110 --> 13:42.870
啊 比如说我们这边这个天下天下这边 我们这边会传递额外的数据

13:43.390 --> 13:49.190
啊 这样你这边获取的话就是通过什么 我们是不是就通过的是location点state来获取到的

13:49.990 --> 13:57.630
对吧 ok 啊 这是这个啊level link这就不说了啊 好 然后其他的话这边这边没用到什么啊 这边

13:58.350 --> 14:02.910
这边的话我们用到了一个是叫做usernocate

14:05.270 --> 14:16.990
usernocate啊 这个的话就是什么 是不是调用之后调用之后会返回一个函数 对不对啊 通过该函数

14:17.750 --> 14:20.390
可以做这个跳转

14:21.390 --> 14:24.310
可以做跳转啊 这个的话你在它的官网也看得到

14:25.150 --> 14:27.390
这个好像我当时写的时候我们就去看过 是吧

14:28.190 --> 14:28.710
use

14:29.990 --> 14:31.670
level gate啊 它

14:32.830 --> 14:33.310
UserNocate

14:34.270 --> 14:37.950
啊 你看这边 is usually better to use redirect

14:38.470 --> 14:42.470
啊 一般的话 适合用这个redirect去做这个重立项啊

14:42.590 --> 14:47.030
UserNocateHook returns a function 对吧 返回一个方式

14:47.430 --> 14:50.350
that nets you never get a programtically

14:50.750 --> 14:54.830
就让你使用这种编程式导航 然后它这边举了个例子 ok

14:55.910 --> 14:58.230
啊 然后我们还用到了什么 是不是 useParmers

14:59.510 --> 15:00.270
UserParmers

15:02.390 --> 15:03.590
UserParmers是干嘛的

15:04.390 --> 15:07.510
UserParmers的话就是获取这个动态参数的

15:08.230 --> 15:14.190
对吧 获取动态参数 啊 比如说我们这边我们跳转到这个detail的时候

15:15.390 --> 15:21.470
啊 就这边吗 就这边 我们这边啊 跳转到这个比如说这边编辑的时候 我们这边啊 是不是通过这个UserParmers

15:21.910 --> 15:23.110
是不是来获取到这个id

15:24.310 --> 15:26.230
对吧啊 useParmers

15:27.550 --> 15:33.150
好 然后其他的话 好像我们就没有用到什么了 啊 useParmersUserNocate

15:34.350 --> 15:35.510
其他的话就没有用到什么

15:35.910 --> 15:44.230
啊 你看我们这边呢 其实就用到了几少数的一部分 对不对啊 这里 这里 几少数的一部分啊 基本上的话 你整个这个

15:45.350 --> 15:52.230
这个应用的话 你就写出来了 ok 说你学一个东西的话 不是说我要把这个api 挨着挨着过一遍

15:53.030 --> 15:59.270
知道吧 不是啊 你后期特别是像这种rotor这种第三方库 他是属于这种上层的东西

15:59.990 --> 16:02.470
越上层的东西 他这个变化是越快的

16:03.270 --> 16:06.550
啊 就可能出一个新版本 他可能有些api 他就又变了

16:07.110 --> 16:11.270
知道吧 又添了很多新新的api 废弃了很多旧的api

16:11.990 --> 16:14.470
啊 所以这种的话 不是说我要一个一个每一个

16:15.430 --> 16:19.030
挨着挨着 我要知道是什么意思 这个其实是初学者

16:19.830 --> 16:23.190
最大的一个误区 啊 特别是在学这个上层框架的时候

16:23.750 --> 16:29.110
你想想我以前啊 我因为我以前也干过这个事情 我以前就是最早学了个

16:29.510 --> 16:32.550
bottlestrap的时候啊 我这次是不是也是用了bottlestrap

16:33.590 --> 16:35.590
对不对 我这边也用了bottlestrap

16:36.710 --> 16:39.830
我以前就是最开始学的时候 我学这个bottlestrap

16:40.390 --> 16:44.390
我就把它里面每一个样式内是干什么的 挨着挨着把它过一遍

16:45.270 --> 16:48.550
一个一个 然后这边他给你提供了是不是很多这种样式内

16:49.030 --> 16:51.670
对不对 我挨着挨着去过一遍 每一个是

16:52.390 --> 16:54.710
每一个都是什么意思啊 我挨着挨着去看

16:55.190 --> 16:57.750
但是现在回头再看的话其实没有太大的意义

16:58.470 --> 17:04.230
对不对啊 你要理解就是这个这个bottlestrap它本质是什么 本质就是给你提供了一些样式内

17:04.790 --> 17:10.470
你把它提供的样式内你挂上去 你就可以用了 你了解它本质之后其实你是不太需要

17:11.030 --> 17:15.430
就是每一个你啊 就是在学习阶段啊 每一个我都知道他是干什么的 不需要

17:15.990 --> 17:20.870
啊 后期做项目的时候 如果你用到不到这个bottlestrap 用到什么看什么

17:21.670 --> 17:25.830
哎 比如说我的这个用到表格了 是吧 我喜欢的表格 让我看一下表格里面

17:26.070 --> 17:31.190
有些什么我用到表单了 再将我切换切到这个表单里面 我看一下有什么

17:31.830 --> 17:34.870
知道吧 这个的话才是一种就是这种上层的

17:35.670 --> 17:39.270
上层的库 上层的框架 学习的一个正确的知识

17:40.070 --> 17:46.150
知道吧 没有必要我这边挨着一个一个给你说啊 今天我们来学这个啊 学这个啊 学这个

17:46.310 --> 17:48.630
挨在这全部讲完这个的话是没有必要的

17:49.270 --> 17:52.150
ok 但这边的话还是要补充一个东西啊

17:53.110 --> 17:58.870
还是要补充一个东西 就虽然我们这个学生管理系统只用到了这个啊 这边的话要补充一个

17:59.670 --> 18:02.790
啊 这边 我们这边再写一个吧啊 这个补充

18:03.830 --> 18:09.510
补充内容啊 这边要补充两个东西 一个是什么呢 一个是这个use

18:10.550 --> 18:11.430
他叫啥名来着

18:12.790 --> 18:16.070
叫做use roots啊 想起来了 叫做use roots

18:18.300 --> 18:23.580
ok 这个互可要补充一下啊 这个的话 我们之前做那个学生管理系统

18:24.300 --> 18:27.660
就是我们没有用到啊 但是这个的话 它是

18:28.940 --> 18:31.580
v6提供的一种新的方式

18:32.380 --> 18:35.580
它是提供了一种新的方式啊 这个的话我之前给大家看过了

18:35.980 --> 18:38.780
对吧 我说这种方式的话就有点类似于你的

18:39.340 --> 18:42.780
这个v1 root了 你看我们可以通过这种方式来

18:43.260 --> 18:44.300
配置这个路由了

18:44.700 --> 18:48.220
这和这个view router就很像了 我们目前我们是怎么配置的

18:48.780 --> 18:53.900
我们目前的话是在app.js里面 我们是不是在这边进行配置的

18:54.780 --> 18:59.180
对不对 在这进行配置的啊 那这边呢 我们看一下如何使用这个

18:59.820 --> 19:04.220
use roots 这是第一个啊 第二个就是什么呢 第二个就是嵌套路由

19:04.620 --> 19:09.260
啊 我们现在就是我们那个学生管理系统什么也没有用到这个嵌套路由

19:10.060 --> 19:12.860
对吧 我们把这个嵌套路由的知识 我们来看一下

19:13.580 --> 19:18.780
好 首先我们一个一个来看啊 我们首先来看这个use roots啊 还是老规矩先看官网

19:19.580 --> 19:21.740
知道吧 先去看官网啊

19:22.860 --> 19:29.100
the use roots hook is a functional equivalent of roots

19:29.420 --> 19:34.380
就这玩意等价于什么 等价于你的入词 我们的入词在哪写的

19:35.900 --> 19:38.060
在哪写的 是不是在这 什么在这写的

19:38.540 --> 19:41.740
ok 好 那回到这边 等价于你的入词

19:42.380 --> 19:51.820
but use javascript objects instead of roots 啊 但是使用这个js对象来替换这个root

19:52.860 --> 19:57.340
看到没有啊 替换这个root element to define your roots

19:57.900 --> 20:01.340
就是使用这个javascript对象去替换root

20:02.060 --> 20:03.580
替换谁 替换这一块

20:04.300 --> 20:09.100
这一块就变成这个javascript对象了 而不是一个一个的组件了 对吧

20:09.820 --> 20:14.220
this object has a same property as normal root elements

20:14.620 --> 20:18.380
就这些对象 它有什么 是不是有相同的属性

20:18.620 --> 20:21.980
就和你的root elements是一样的 它有相同的属性

20:22.620 --> 20:27.580
but they don't require this js差 但是他们不需要js差

20:28.460 --> 20:32.620
也就是什么 是不是存的js对象 对吧 存js对象

20:32.940 --> 20:39.020
the return value of this use root 就是它的这个use root的返回值

20:39.260 --> 20:40.060
它是一个什么呢

20:40.860 --> 20:45.100
widely direct element 它是一个有效的react元素

20:45.500 --> 20:49.420
那接下来的话 你可以使用它去渲染一个路由数

20:49.980 --> 20:53.820
或者什么呢 或者使用这个nau 如果你没有匹配上的话 就是nau

20:55.100 --> 20:58.060
你如果这边看到模模糊糊的话 下面还有一个什么

20:59.020 --> 21:03.500
怎么还有个势力啊 对不对 你大致看一下这个势力 你是不是也就懂了

21:04.460 --> 21:08.060
对吧 也就懂了啊 来呗 来我们来改造一下呗

21:09.020 --> 21:13.260
好 接下来我们来改造一下 那接下来的话 我这边我就可以怎么写

21:13.660 --> 21:17.340
我可以在我的src下面啊 我新建一个rotor

21:17.900 --> 21:19.660
就有点类似于vue的样子了

21:20.380 --> 21:24.620
新建一个rotor 然后这样我在这边上我写一个比如说叫做rotor

21:26.060 --> 21:26.860
点js差

21:28.540 --> 21:31.260
可以吧 好 大家这边呢 RSF

21:32.540 --> 21:37.100
啊 好 那在这边 这边的话你就需要引入 import

21:38.460 --> 21:42.540
引入 use roots 啊 因为它是个hook嘛

21:43.100 --> 21:46.700
对啊 所以你必须是要在一个这个组件里面来使用它

21:47.180 --> 21:49.180
好 大家这边的话 from

21:50.300 --> 21:53.740
reactrotor dom 行吧 引进来

21:54.300 --> 21:57.660
引进来之后 然后接下来的话 我们这边 我们就可以来使用了

21:58.220 --> 22:00.220
这边的话 use roots

22:01.420 --> 22:04.780
对吧 使用这个hook 使用这个hook 它 你看一下这边

22:05.420 --> 22:10.300
它会给你一个什么 是不是 它会给你一个返回值啊 对不对啊 让我们这边接受一下

22:11.420 --> 22:12.220
const

22:12.220 --> 22:14.220
这个root

22:14.700 --> 22:16.700
就是root config

22:17.260 --> 22:20.220
用我们的路由配置 好 然后接下来在这边

22:21.500 --> 22:24.300
在这边的话 就是传一个什么 传一个数组

22:25.020 --> 22:29.660
啊 你看到这边 传一个数组 数组里面是什么 是不是一个一个的对象

22:30.620 --> 22:36.380
对 对象的话 大家这边和刚才是一样的啊 这边的话这个hong

22:37.340 --> 22:41.420
然后对应了hong组件 那接下来的话 你这边的话就需要把这些组件

22:42.060 --> 22:44.860
全部拿到哪里去了 就全部拿到

22:45.980 --> 22:49.420
这边来 对吧 好 然后接下来的话 这里

22:49.900 --> 22:53.820
这边 这边的话 也就不需要再有这个入尺了

22:55.420 --> 23:02.220
好 这边的话 我把整个这一块 我就把它干掉 不需要了啊 然后接下来 我们这边 我们来看一下 我放到这儿啊 放到这儿

23:02.860 --> 23:09.210
放到这儿 好 然后接下来 我们这边把这个这玩意儿就把它注射掉 对吧

23:09.690 --> 23:14.890
注射掉 然后接下来 我们这边就照到这儿来写 我们这边呢 是hong hong的话 然后接下来 这边的话这个

23:15.450 --> 23:18.810
Element对应的是什么 Element对应的是不就它

23:18.810 --> 23:21.850
Element对应的是不是就它 因为它说了属性是不是都是一样的

23:22.650 --> 23:30.710
对不对 啊 这边啊 抱错了 我看一下啊 这边这个hong 我看一下

23:32.470 --> 23:37.190
啊 这里这里是是那个 是属性啊 这边呢 应该是直接就对应这个hong组件

23:37.830 --> 23:42.470
就ok了 ok 好 然后接下来哈 这边继续 这边呢 这个pass

23:43.350 --> 23:50.790
对应的是about 对吧 好 大家这边这个Element对应about组件啊 这边智能提示都已经出来了

23:51.110 --> 23:54.150
太好了 好 然后接下来的话 这边pass

23:54.950 --> 23:58.470
啊 你看就和这个view的这个配置就很相似了

23:59.350 --> 24:03.750
呃 add 然后接下来对应的这个element and or edit

24:05.350 --> 24:10.630
好 然后接下来的话 这边pass pass detail

24:11.590 --> 24:15.750
detail 这边的话 它是一个有个动态的参数 对吧 id

24:16.390 --> 24:18.470
好 然后对应的是 detail

24:19.270 --> 24:21.830
好 然后接下来的话 还有什么 还有就是

24:23.940 --> 24:31.300
还有就是这个pass edit 对吧 edit 然后加这边这个element对的对应的也是这个组件

24:32.980 --> 24:38.180
ok 好 然后接下来的话 还有一个什么 还有个跟组件 对吧跟组件

24:39.220 --> 24:44.580
pass 不是跟组件 跟路径啊 这个斜桿 好 然后对应的这个element

24:45.460 --> 24:49.780
那element的话 我们这边就还是一样的啊 就直接让它导航到这个home

24:50.740 --> 24:54.580
不可以直接就这样子 这样子写啊 你这边啊 要把这个level get

24:55.220 --> 24:56.180
把它引进来一下

24:57.460 --> 25:01.620
把引进来一下 ok 好 这个这个就可以标了 这个可以把它干掉

25:02.580 --> 25:08.660
ok 好 你看我们这边 这边呢 是不是就和那个view就很相似了 对吧

25:09.060 --> 25:13.060
好 然后接下来的话 这边这边我们返回什么呢 这边我们就返回整个

25:13.940 --> 25:21.300
返回这个 我们的这个啊 或者你这边的话直接这样子就可以了 没有必要拿一个这个变量去接受它

25:21.940 --> 25:23.860
对不对 好 这边就直接就这样子

25:25.220 --> 25:29.860
哎 我们这边是不是三多了呀 稍等啊 我看一下啊 果然三多了

25:30.500 --> 25:36.980
好 我们这边呢 把这个把这一块干掉啊 大家这边 我们这边呢 就直接返回它

25:39.990 --> 25:40.790
直接返回

25:41.750 --> 25:46.310
返回 返回它 ok 好 这边报错了 我看一下报了什么错

25:48.070 --> 25:50.870
嗯 import roots

25:52.790 --> 25:58.230
react hooker is called function router that is never function component

25:59.990 --> 26:03.030
you must start with uppercase later

26:05.590 --> 26:07.030
嗯 我看一下

26:09.450 --> 26:19.450
那这边的话 估计是不支持啊 那那我还是把它保存一下啊 比如说我们这边呢 叫做这个rotor config

26:21.130 --> 26:28.330
啊 然后对的呀 对的呀 然后接下来这边的话return router

26:29.930 --> 26:35.610
rotor config 对吧 和刚才的写法没有问题啊 那这边是报啥错呢

26:36.330 --> 26:45.290
这边我看一下啊 这边return然后

26:47.450 --> 26:54.330
哦 我看一下 is called function啊 它说是在函数中调用的哦 我知道了 它这边的话应该是

26:55.050 --> 26:57.130
啊 它这边我们把这个稍微改一下

26:58.250 --> 27:03.530
应该是这个原因啊 果然啊 这边的话 刚才这儿是小写小写的话 它认为你是个函数

27:04.090 --> 27:06.090
啊 注意啊 刚才那个应该是lint的错误

27:06.570 --> 27:09.690
是lint错误啊 就是你用的话 这个代码是能够用的

27:10.090 --> 27:14.970
ok 应该是也是lint提示错误了 它认为你那边是小写的 小写它认为是个函数

27:15.210 --> 27:18.170
让它告诉你户刻的话 只能在什么呢 只能在这个

27:18.890 --> 27:24.090
主键里面啊 函数主键里面来使用 好 那我们这边直接说应该也是没有关系的

27:25.530 --> 27:30.090
ok 这没问题啊 对吧 好 让家把展开啊 你看这边

27:30.810 --> 27:35.610
你看这边啊 这边的话 你看我们这边的话 就是使用的是use roots

27:36.170 --> 27:40.090
来配置啊 来配置我们的路由 好 然后回头的话 你在这边

27:40.650 --> 27:44.490
这边的话啊 这些都没用了 是吧 这些就可以把它干掉了

27:45.690 --> 27:47.850
好 然后再这边呢 你引入你的这个

27:48.730 --> 27:51.850
就刚才的那个 我们的router config

27:52.570 --> 27:53.770
然后front

27:55.050 --> 27:57.690
这个 当前目录下面的rotor

27:58.490 --> 27:59.690
啊 下面的rotor

28:00.490 --> 28:05.450
对吧 引入啊 引入了之后 然后再它是一个函数主键 然后你在这边上你就直接用就可以

28:06.650 --> 28:08.250
他是个函数主键

28:09.130 --> 28:13.690
好 然后再这边的话 保存一下 保存了之后 然后再这边过来看一眼

28:14.250 --> 28:17.930
啊 这边报了很多的错啊 报错没关系 我们一点一点来

28:18.730 --> 28:21.770
啊 这个这个错很简单 是吧 这错就是这边没找到

28:22.490 --> 28:24.170
好 我们把这边的话 我们把它调整一下

28:25.050 --> 28:31.130
这里 然后这边 啊 这边点啊 还有这里 okay

28:31.770 --> 28:33.690
好 搞定 好 搞定之后 你看

28:35.130 --> 28:40.090
是不是ok了 对不对 你看我们这边呢 这个路由的配置是不是一样的成功了

28:40.570 --> 28:43.130
ok 这边调转到详情 是没问题了

28:43.850 --> 28:49.690
ok 啊 这就是关于这个 首先要补充的这个啊 就是关于这个user入词

28:50.650 --> 28:52.250
啊 然后把那个代码拿过来吧

28:53.210 --> 28:57.450
把那个代码啊 关键的就是这里 关键什么就这一块

28:59.450 --> 29:02.250
啊 啊 这边使用势力如下

29:03.370 --> 29:05.050
使用势力

29:06.330 --> 29:15.190
如下 okay 啊 这是关于这个user入词 非常方便啊

29:15.750 --> 29:20.070
好 然后接下来还有一个知识点要补充 就是关于这个嵌套路由

29:20.790 --> 29:25.190
啊 因为我们现在的话 我们这个学生管理系统的话是没有涉及到嵌套路由的

29:25.430 --> 29:28.070
嵌套路由的话 它是一个非常常见的一个需求

29:28.870 --> 29:33.830
对吧 非常非常常见 okay 说我们这边呢 我们把这个嵌套路由把写一下

29:34.470 --> 29:37.830
啊 嵌套路由我们这边的话 我们在在哪来改呢 我们就在这

29:38.550 --> 29:43.350
啊 在这个关于我们啊 在关于我们这边 我们这边的话给他新增一层

29:43.830 --> 29:47.830
新增一层这个嵌套路由的这个势力啊 比如说我们这边

29:48.550 --> 29:49.670
回到这里

29:50.390 --> 29:50.870
回到

29:52.150 --> 29:54.070
啊 这边 然后 about

29:54.790 --> 29:58.310
啊 在这里 这里的话 我们这边新增一个 比如联系方式

30:01.000 --> 30:08.200
联系方式啊 联系方式之后 然后这样我这边的话 就是应该是有个嵌套的啊 这边的话 就回头这里

30:09.000 --> 30:12.840
啊 说一下我这边要做成什么样子啊 就回头呢 这边应该是有

30:13.480 --> 30:15.640
两个 就是类似于这个导航的

30:16.280 --> 30:22.920
对吧 两个导航的 好 然后接下来 回头我点击他 点击第一个导航 他渲染第一个的内容

30:23.240 --> 30:26.200
好 那就这样点击他 他就渲染这个所对应的内容

30:26.520 --> 30:29.240
这就是一个导航的这个路由 那个嵌套的路由

30:29.800 --> 30:35.320
对吧 好 那我们这边的话 我们先来新建 新建两个组件

30:36.840 --> 30:40.040
啊 我们在这边 新建两个 一个的话是email

30:41.000 --> 30:43.800
啊 比如联系方式里面 你可以通过email来联系我

30:44.600 --> 30:50.760
啊 我们这边 rsf 就全部用函数组件了啊 现在啊 这边的话 就是邮箱

30:53.240 --> 30:56.040
邮箱地址啊 比如说插插插

30:56.600 --> 30:58.680
然后 at 点com

31:00.790 --> 31:02.790
at啊 点com

31:03.590 --> 31:06.070
ok 这是邮箱地址 好的 再来一个

31:06.630 --> 31:09.190
再来一个是这个电话号码 teo

31:09.830 --> 31:10.630
点gs time

31:11.270 --> 31:13.830
啊 这边的话 rsf

31:14.230 --> 31:15.910
啊 这边的话 电话号码

31:17.590 --> 31:24.230
电话号码啊 这边啊 腰伸腰 然后插插插

31:25.030 --> 31:27.030
然后 然后插插插插

31:27.670 --> 31:31.270
ok 好 ok

31:31.830 --> 31:37.110
好 然后接下来的话 这两个组件是不是有了 有了之后 然后来到你的这个about

31:37.830 --> 31:42.790
啊 来到你的about 我们先说一下如何配置吧 我们现在呢 是不是用的是user roots

31:43.670 --> 31:49.030
user roots的话 你这边要配置这个指路由的话 他就和这个react很相似

31:49.430 --> 31:52.390
你就直接在哪里呢 直接在这边 你给他一个

31:52.950 --> 31:55.110
啊 他就和vioe root很相似哈 sorry

31:56.150 --> 31:58.310
口误啊 他就和这个

31:58.950 --> 32:03.510
vioe root很相似 他这边的话就干嘛呢 这边你新增一个q准

32:04.310 --> 32:08.790
怎么样 新增一个q准 q准的话 然后现在你里面就写你的这个指路由就可以了

32:09.190 --> 32:10.390
啊 比如说我们这边pass

32:11.270 --> 32:12.390
pass对应的是

32:13.190 --> 32:13.990
email

32:13.990 --> 32:19.190
啊 你注意啊 以前以前写那个指路由 你还得把这个完整的把它写了

32:19.270 --> 32:19.910
about

32:20.390 --> 32:23.590
下面的email啊 现在的话就不用了 现在的话你这边就直接

32:24.310 --> 32:29.910
啊email 他到时候的话 因为你这个是指这个指路由 他会自动的啊 斜杠about

32:29.910 --> 32:32.470
然后接下来这边 斜杠email 拼接到一起

32:33.110 --> 32:35.910
ok 好 然后接下来这边呢 对应了这个组件

32:36.390 --> 32:40.310
elements 我们这边呢 对应的是什么 对应的是这个email 是吧

32:41.750 --> 32:42.150
email

32:43.350 --> 32:46.150
啊 最近老师就是讲课的时候 老师容易口误啊

32:47.110 --> 32:48.870
好 然后接下来的话 这边tail

32:50.470 --> 32:51.670
对应这边tail

32:53.350 --> 32:57.830
ok 把这两个组件引进来 引进来之后 然后接下来的话 这边email

32:59.670 --> 33:01.990
ok 好 然后接下来 这边复制一份

33:03.750 --> 33:05.750
复制一份 大家这边是tail

33:06.630 --> 33:07.670
啊 大家这边这个tail

33:08.790 --> 33:14.470
ok 这边是不是这个指路由就配置好了 配置好了之后 然后接下来的话

33:15.430 --> 33:20.630
来到你的about 来到about之后 大家我们这边引入一下 比我们引入一下这个

33:21.430 --> 33:24.870
level link 啊 因为我们这边要做跳转 所以我们这边引入一下

33:26.070 --> 33:29.830
import 这个level link

33:30.710 --> 33:37.510
然后from react rotor dawn 对吧 好 大家我们这边我们加两个这个跳转

33:38.790 --> 33:39.510
level link

33:41.030 --> 33:43.590
啊 一个是什么呢 一个是就是邮箱

33:45.270 --> 33:47.590
一个是这个电话

33:48.550 --> 33:51.830
ok 好 然后接下来这边这边呢 就是应该是to

33:52.790 --> 33:57.510
to 哪里 是吧 about 的email 对吧

33:58.550 --> 34:00.550
好 这边把这个class name

34:01.430 --> 34:05.430
好 我们一样把它加上来啊 这个level link 这是之前写的 对吧

34:06.150 --> 34:08.310
好 然后这接下来这边复制一下

34:09.030 --> 34:12.150
呃 这里这里来改成这个tail

34:12.950 --> 34:18.070
ok 好 我们这边我们来看一下啊 现在的话你这两块就有了 看到没有 这边邮箱

34:19.030 --> 34:21.990
点邮箱点电话 这是下面的东西

34:23.350 --> 34:30.150
这没有对不对 下面的东西没有好 这边的话他就引入了一个什么呢 引入了一个叫做outnet

34:31.670 --> 34:32.470
outnet

34:33.190 --> 34:35.350
引入了一个这个

34:36.230 --> 34:42.150
哎 引入了一个这个outnet 来我们这边来看一下 他是一个主键

34:44.470 --> 34:46.950
他是一个主键 在这个位置

34:47.910 --> 34:49.590
看到没有 outnet

34:50.310 --> 34:57.910
and outnet should be used in parent root elements to render their child root elements

34:58.150 --> 35:02.710
什么意思啊 就你的这个outnet这个主键 他应该在什么时候使用呢

35:03.670 --> 35:10.950
就是用在他的这个副元素里面 副元素里面去渲染什么呢 渲染他们的指路有元素

35:11.910 --> 35:14.950
ok 渲染他们的指路有元素 也就是说你这边

35:15.430 --> 35:19.990
你这边回头这边about email about email对应

35:20.390 --> 35:26.630
就是我们刚才的配置的话 about about email对应的是什么 这是email这个主键

35:27.110 --> 35:32.230
对不对 那email这个主键渲染在哪里呢 你在这边就可以写一个这个outnet

35:34.310 --> 35:40.970
ok 啊 写个单标签就可以了 ok 那回头的话 他匹配上的那个

35:42.250 --> 35:45.290
email那个主键 他就会渲染在这个位置

35:46.010 --> 35:48.890
啊 你看他是不是就越来越像这个view router了

35:49.530 --> 35:53.050
对不对view router的话 我们这边叫做什么 这叫做router view啊

35:53.530 --> 35:55.610
如果我没记错的话 应该是router view吧

35:56.330 --> 36:00.250
对不对 是不是就很相似了 对吧 来我们来看看好不好使

36:02.090 --> 36:12.250
来到这边 出来吧 出来吧 这边电话啊 你注意一下 我这个这个样式我还是没改啊 样式样式就是我这边激活 当年激活的是白色啊

36:12.970 --> 36:15.610
啊 这边邮箱就出来了 电话

36:16.010 --> 36:22.170
你看 是不是就出来了 ok 但这边呢 现在还有一个小问题 什么问题呢 比如说我现在切换到主页

36:22.890 --> 36:29.050
主页 然后将我占到这个官运我们 到官运我们的话 你看这个邮箱和电话 因为我这边是about

36:29.770 --> 36:34.730
对不对 我这边是about 啊 邮箱电话他这边的话就是一个都没有选上 除非你要点一下

36:35.370 --> 36:44.650
要点一下 好 那我能不能让就是这边进来的时候 默认这边进来就匹配上这个邮箱呢 啊 这边可以的 这边那其实你想想该怎么做

36:46.010 --> 36:49.210
你想想 是不是其实就和我们刚才这边

36:49.930 --> 36:56.250
呃 我们这边这个配置就和哪很相似 是不是和他就很相似

36:57.130 --> 37:02.970
对不对 和他就很相似啊 我们让他重新定向到啊 重新定向到这个email就可以了

37:03.450 --> 37:06.890
啊 说说我们这边的话 我们来写一下 这边呢 我们给个pass

37:07.610 --> 37:15.050
pass的话就是一个空置处 那空置处就是谁 这就是about对不对 好 然后加这边我们让这个element

37:15.610 --> 37:16.890
等于一个never get

37:18.330 --> 37:22.410
好 然后加这边的话 定向到哪里呢 这边让他定向到email

37:23.930 --> 37:28.970
定向到email ok 好 来我们这边我们来看一下好不好 是

37:29.930 --> 37:38.330
啊 这边现在是主页 对吧 然后我现在点击这个关于我们 你让他这边是不是直接就是about email 这边是不是直接就选出来了

37:39.290 --> 37:48.250
对不对 ok 啊 这个问题的话也就解决了啊 啊 这就是关于这个嵌套路由啊 我们这边用来记一笔吧 嵌套路由

37:48.970 --> 37:50.970
嵌套路由怎么做啊 直接

37:53.350 --> 37:55.830
直接在这个use

37:56.710 --> 38:01.430
use入尺里面啊 然后进行这个q这个q论

38:02.470 --> 38:05.670
q论属性的配置

38:06.230 --> 38:10.150
即可 对不对 类似于这个ve入尺

38:11.830 --> 38:14.390
类似于ve入尺啊 然后加q论

38:15.990 --> 38:20.070
对应的是一个数组啊 数组

38:21.110 --> 38:25.910
里面 数组里面是一个

38:27.030 --> 38:30.470
一个就是这个什么 就是你的这个路由对象

38:31.430 --> 38:35.990
ok 啊 这边来来一个图来个图的话就是

38:37.430 --> 38:39.510
啊 不是来个图 还最近咋回事

38:40.470 --> 38:46.710
老是会口啊 来一段代码啊 来一段代码 完了我是不是得老年痴呆症了

38:48.230 --> 38:52.630
好 这里放到这 ok 啊 这边呢是这个q论

38:55.290 --> 38:57.370
然后啊 这边稍微过来点

38:58.330 --> 39:01.530
ok 可以了啊 这个呢 是不是就这边q论

39:02.090 --> 39:06.090
ok 好 然后完事之后 然后之后我们还会用到什么啊 之后

39:09.340 --> 39:13.740
之后 然后使用什么呢 使用这个outlet组件

39:14.860 --> 39:19.980
该组件表示 表示什么呢 表示匹配上的

39:20.780 --> 39:23.580
匹配上的指路由

39:24.620 --> 39:30.810
指路由组件啊 渲染的位置

39:31.930 --> 39:34.570
对吧 渲染的位置啊 比如说我们在这里

39:36.410 --> 39:38.410
在这边啊 我们的这个outlet放在这的

39:39.370 --> 39:45.850
回头匹配上啊 这边你点击他的时候 匹配上的这个email这个组件什么就渲染在这个位置

39:46.810 --> 39:51.130
对吧 这就是所谓的这个嵌套啊 但你能不能用那种方式写呢

39:51.130 --> 39:57.770
就是能不能用我们最早的那个就是而root root root 就那种方式来写的啊 也是可以的

39:58.730 --> 40:03.770
我看我记得他那个官网他好像举的就是这个例子 官网这边是不是就是举的是这个

40:04.330 --> 40:05.770
对不对 root

40:06.410 --> 40:07.930
ok 就用了这种方式

40:08.490 --> 40:14.090
啊 这种方式的话实际上啊 就后面我们写那个迷你版这个react router的时候

40:14.410 --> 40:20.250
你就会知道这种方式它最终的话会被转成什么呢 最终会被转成

40:21.290 --> 40:22.650
转成就是我们的这个

40:24.170 --> 40:25.210
配置的这种方式

40:26.170 --> 40:30.010
ok 最终会被转成这种方式啊 我可以给大家看一下啊

40:30.970 --> 40:34.970
可以给大家看一下 就我们这边后期的话 讲原码篇的时候

40:35.530 --> 40:39.050
会给大家就是讲到这个rotor的一个迷你版

40:40.730 --> 40:41.930
比如我们这边把他过来

40:42.730 --> 40:48.090
大家可以看一下啊 他这边内部他会调一个方法 叫做creator children

40:48.890 --> 40:53.130
啊 就这里就这里 他会调一个creator roots from children

40:53.850 --> 40:56.410
最终他就会转换成什么呢 转换成这样的形式

40:57.050 --> 41:01.850
看见没有 对你这边入册 入册里面是不是接收一个一个的root

41:02.010 --> 41:04.170
就接收这样子一个一个的这个root

41:04.730 --> 41:06.890
对不对啊 就是你如果是这样子来写的

41:07.370 --> 41:10.890
如果你是这样子来写的话 然后实际上他会干嘛呢 实际上呢

41:11.050 --> 41:12.650
这边会调用这个函数

41:13.130 --> 41:14.730
creator roots from children

41:15.290 --> 41:19.690
调这个 调这个之后最终他还是会给你转成什么呢 转成这种配置的方式

41:20.570 --> 41:23.050
ok 转成这种配置的方式 然后传入到哪里呢

41:23.290 --> 41:24.810
传入到us入词里面

41:25.770 --> 41:30.970
啊 传入到us入词里面啊 所以我们这边的话其实还少 就是如果你是这样子写的话

41:32.250 --> 41:35.370
如果是这样子写的话 他其实在处理的时候 是吧 还少一步

41:36.090 --> 41:37.690
对吧 还少一步啊

41:38.570 --> 41:41.610
好 这就是关于这个嵌套的路由

41:42.170 --> 41:44.650
我看一下其他还有没有什么要补充的

41:45.450 --> 41:47.290
其他的话暂时就没有了

41:47.850 --> 41:50.730
啊 后期的话 我们这边我们要用到什么 我们到时候看

41:51.130 --> 41:54.490
如果有用到这个新东西 我们就再补充新东西就可以了

41:55.130 --> 41:57.130
对吧 这个就是我刚才所说的

41:58.170 --> 42:02.890
就学习 特别是你这种上层框架的时候 不是说我每个API一个一个去把它过了

42:03.210 --> 42:05.130
不是啊 这不是你学习这个

42:05.770 --> 42:09.210
新的库或者新的框架 一个正确的这个学习知识

42:09.610 --> 42:13.530
ok 你不然你这样子的话 你又学的非常非常累啊 非常非常累

42:13.930 --> 42:18.330
啊 你一出一出一个新东西你就会叹气 又出来一个新东西

42:19.050 --> 42:20.090
对吧 ok

42:20.970 --> 42:27.850
好 那这期课的话就先到这里啊 大家下去的话把这个把之前写的那个学生管理系统你把它改一下

42:28.410 --> 42:32.650
啊 这里把它改一下啊 大家这边的话这个嵌套路由自己把它写一下

42:33.370 --> 42:35.770
好吧 这期课就在这里拜拜

