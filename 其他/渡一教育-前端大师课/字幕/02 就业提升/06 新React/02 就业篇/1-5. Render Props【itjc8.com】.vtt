WEBVTT

00:00.050 --> 00:03.050
ok 这节课的话咱们来看一下这个

00:03.370 --> 00:07.250
RenderPops 啊这个的话它官网也是有的啊

00:07.250 --> 00:09.490
把官网还是把官网打开

00:10.810 --> 00:12.670
哦 这边React

00:13.710 --> 00:14.710
官网

00:15.250 --> 00:16.590
啊 这边第一个

00:17.930 --> 00:20.970
好 在我们把语言先调成中文

00:22.920 --> 00:25.600
啊 这边文档 然后在这边

00:25.880 --> 00:29.040
RenderPops 这个Pops 怎么这里

00:29.200 --> 00:30.880
对不对 啊你注意哈

00:30.880 --> 00:34.360
就是我们这边第二章 我没讲一个这个知识点

00:34.560 --> 00:38.360
你都应该把什么 把这个官网对应的这个文档

00:38.360 --> 00:39.360
你把它看一下

00:39.960 --> 00:42.720
啊 比我们上节课 上节课是不是讲了这个context

00:43.280 --> 00:45.880
那你应不应该把这个官网的这个context

00:46.120 --> 00:48.920
啊 把它仔细的啊 从头到尾的把它读一遍

00:49.440 --> 00:52.480
对不对 啊 在之前的话讲的是这个Refs

00:52.800 --> 00:55.880
这边Refs 啊 包括这边Refs转发

00:56.200 --> 00:59.040
那你是不是应该把对应的官网也把它看一下

00:59.760 --> 01:00.280
对不对

01:00.600 --> 01:03.160
要慢慢养成这个看官网的这个习惯

01:03.640 --> 01:05.760
啊 有的人的话 这个整个东西都学完了

01:05.760 --> 01:07.000
这个官网从来没去过

01:07.480 --> 01:10.000
啊 你这个东西说不过去啊 说不过去

01:10.480 --> 01:12.400
OK 你迟早有一天的话 你需要干嘛呢

01:12.640 --> 01:16.640
你需要自己通过这个官网 啊 自己去学习东西

01:17.320 --> 01:19.360
对吧 比如说一个新技术出来了

01:19.360 --> 01:21.520
一个新技术出来了 你不能指望着

01:21.520 --> 01:23.440
哎 老实你怎么这个还没有出课程

01:24.520 --> 01:26.640
对吧 你这边迟早有一天你需要干嘛

01:26.640 --> 01:30.480
就新技术出来之后 去看那个这个新技术的这个官网

01:30.720 --> 01:32.440
啊 让自己把这个新技术掌握

01:32.920 --> 01:35.960
OK 迟早的事情 对吧 你不可能一直这样子

01:37.640 --> 01:40.240
好 然后这边的话 我们要讲的是Render Pops

01:40.640 --> 01:41.960
啊 首先的话 这边在这个位置

01:42.480 --> 01:45.400
OK 啊 Render Pops 我们来看一下啊

01:46.160 --> 01:49.880
啊 数与这个Render Pops 指的是一种什么呢

01:50.080 --> 01:55.280
就是React的组件之间 使用一个值为函数的这个POP

01:55.840 --> 01:59.320
啊 来共享这个代码的这个简单技术

01:59.920 --> 02:03.440
啊 它其实它这个这句话 其实说的已经很明白了

02:03.880 --> 02:06.040
啊 但我相信有的同学的话 还是没看懂啊

02:06.480 --> 02:08.720
就是我们这边POP POP我们一般是什么

02:09.560 --> 02:12.560
POP我们一般就是要么是对象 对吧 要么支付串

02:13.120 --> 02:14.160
对不对 然后往下面串

02:14.720 --> 02:18.080
它这边 它让你的这个POP是个什么 是个函数

02:19.320 --> 02:21.880
对吧 是个函数 函数里面干嘛

02:22.320 --> 02:26.520
函数里面返回啊 各种各样的这个GS差

02:27.360 --> 02:33.080
返回各种各样的GS差 啊 从而达到什么呢 达到就是一个共享代码的一个这个技术

02:33.800 --> 02:36.160
好 来我们这边来看一下 来看一下

02:37.200 --> 02:37.600
好 这边

02:38.960 --> 02:47.040
在React中 代码附用的一个最基本的这个单位是组件 对吧 你看现在无论是VUE也好 还是这个React也好

02:47.800 --> 02:50.600
基本都是 就它的基本单位 不能说最小单位

02:51.000 --> 02:53.600
你只能说是基本单位 基本单位的话是组件

02:54.560 --> 02:59.200
对不对 我们这边在附用代码的时候 我们也是把它抽离成一个一个的这个组件

03:00.000 --> 03:05.400
但这里涉及到一个问题 什么问题呢 如果我组件里面也出现了重复的代码呢

03:06.800 --> 03:13.600
对不对啊 我比如说我两个组件 两个组件 它就是渲染的仕途不一样 但是它整体的这个逻辑是一样的

03:14.080 --> 03:15.960
那这个时候你该怎么做

03:16.960 --> 03:21.200
对吧 那我们这边的话就需要通过什么呢 通过某种方式

03:22.120 --> 03:27.000
某一种方式 把这个公共的这个部分把它抽离出来

03:27.960 --> 03:35.320
那这个公共的部分 我们就称之为什么呢 称之为这个横切关注点啊 这个Cross Cartin这个Consolence

03:36.080 --> 03:44.800
横切关注点啊 这个横切关注点的话 实际上我们之前我们所讲的这个高阶组件 是不是也是解决这个问题的

03:45.760 --> 03:52.240
你回忆一下啊 我们之前我们应该是第二节课 是吧 讲了一个高阶组件的时候 高阶组件是不是也是解决这个问题

03:52.920 --> 03:55.920
是不是就是如何这个抽取这个横切关注点的这个问题

03:56.840 --> 04:05.200
对吧 好 那在这个wrap中 那常见的话其实就是两种方式 哪两种方式呢 一种就是高阶组件

04:05.920 --> 04:10.400
另外一种就是什么 另外一种就是咱们这几个要讲的Render Pops

04:11.360 --> 04:12.000
Render Pops

04:12.720 --> 04:21.360
ok 好 这Render Pops实际上 它本身的话 其实并非什么新语法啊 这个给你加重点啊 就本身并非新语法

04:23.200 --> 04:31.200
ok 而它指的是什么呢 它指的是就是你react之前使用什么呢 使用这个一个值为函数的这个prop

04:32.160 --> 04:34.720
值为函数的prop 来共享这个代码

04:35.680 --> 04:43.150
我现在这边又找到新的方式了 就是这边给你加粗 再给你画个下滑线 对吧

04:44.350 --> 04:52.910
ok 好来 关于这个Render Pops 啊Render Pops的话 其实咱们这边上主要就是两个点 哪两个点呢 一个就是怎么用

04:53.310 --> 04:57.390
对吧 这玩意儿怎么用 第二个就是什么时候用 对吧 一般你把这两个

04:58.030 --> 05:03.630
问题掌握了之后 那基本上这个知识你也就学会了 我们说过的这个3whe

05:04.590 --> 05:11.870
知不知道3whe 就是y 对吧watt 然后问啊的eh就是什么 就是号

05:12.590 --> 05:18.350
对吧 就你这个东西是什么啊 首先watt 那接下来的话这个为什么要用这个 y

05:19.070 --> 05:26.030
什么时候用问 对不对啊 再加这边怎么用号啊 这个就是3whe

05:26.750 --> 05:33.230
3whe的话其实不仅仅是学习我们这个代码啊 你学习任何知识 你其实都可以按照这个

05:33.230 --> 05:38.910
3whe 去走啊 你会发现你学的非常的扎实 非常的扎实 ok

05:40.270 --> 05:46.910
好来呗 那我们这边 首先第一个如何使用啊 我这边的话我写了一个例子

05:47.790 --> 05:51.710
写个例子 然后我们把这个例子的话我们把它看一下啊

05:52.510 --> 05:54.910
这个例子我们把它写一下吧 回到我们这边

05:57.170 --> 06:01.970
好 然后先把这个多余的这个值主件先把它删了 我们这边只会用到两个

06:02.450 --> 06:05.890
啊 这context context也上了吧context也不需要啊

06:07.170 --> 06:13.330
好 然后加这边呢 是这个app app的话 这边首先引入两个值主件

06:17.010 --> 06:24.530
这边引入两个值主件context context这个没有 对吧 这些都没有 这些把它都干掉

06:25.490 --> 06:28.930
啊 这边 这边的话 然后就是一个div

06:29.890 --> 06:31.170
一个div

06:31.170 --> 06:36.770
好 div 然后接下来这边这个div 给了一些样式 我把样式我就直接拿过来了啊

06:37.650 --> 06:39.170
啊 这边给了一些样式

06:41.740 --> 06:45.420
ok 啊 这个样式也很简单 就是设置它是一个弹性容器

06:45.980 --> 06:53.180
对吧 然后加这边有一个这个宽度 好 然后里面 里面的话就是使用这两个值主件啊 一个chot come in

06:55.580 --> 06:56.540
一个是哎

06:56.620 --> 07:00.220
ok 一个是chot come e 一个是chot come二

07:01.420 --> 07:07.260
ok 这很简单吧 对吧 这边最外层 相当于外层有个容器 容器宽850的这个容器

07:07.900 --> 07:12.540
好 大家这边设置它是个弹性和 大家一会这个chot1在这边chot2在这边

07:13.820 --> 07:16.140
好 大家这边让我们来看一下这个chot1

07:16.700 --> 07:18.460
chot1这边要做个什么事情呢

07:19.180 --> 07:22.140
chot1的话 把这些都删了啊 这上去可能带吧

07:23.100 --> 07:32.860
嗯 chot1的话 这边他要做一个事情 这个事情的话就是啊 你移动鼠标 我可以记录你这个鼠标当前的位置

07:34.540 --> 07:35.340
移动鼠标

07:37.260 --> 07:42.060
移动鼠标可以记录当前

07:43.820 --> 07:44.460
鼠标

07:45.420 --> 07:47.100
都位置

07:47.900 --> 07:49.980
ok 好 来我们这边把这个代码看一下

07:51.500 --> 07:54.300
呃 这边首先他也是有一定的这个样式 style

07:55.020 --> 07:55.420
等于

07:56.780 --> 08:00.860
ok 啊 这边宽宽的话这边的话是一个400

08:02.380 --> 08:05.340
400匹差啊 有个高 高的话也是400

08:06.620 --> 08:12.860
ok 好 大家这边呢有个背景颜色 白眼光的carner 这边设置的是一个read

08:13.420 --> 08:16.540
啊 好 然后再这边这边呢 给了一个he

08:17.100 --> 08:18.620
这边是移动鼠标

08:20.780 --> 08:24.300
移动鼠标啊 移动鼠标之后 然后下面这有个p

08:25.020 --> 08:28.140
p的话 这边就会显示出啊 当前

08:30.420 --> 08:33.300
当前鼠标的位置

08:34.180 --> 08:39.620
ok 那当前的鼠标位置的话 那我这边的话需要维护一个什么呢 需要维护一个这个状态

08:40.180 --> 08:42.340
所以我这边用一个use state

08:44.660 --> 08:45.300
use state

08:45.860 --> 08:49.380
好 然后既然在这边啊 这边让我们就是啊 const

08:50.260 --> 08:52.260
一个什么呢 一个point

08:52.900 --> 08:55.140
然后一个set point

08:56.180 --> 08:58.420
等于一个use state

09:00.420 --> 09:02.660
啊 这边x 0

09:03.380 --> 09:04.180
然后y

09:04.820 --> 09:06.020
对应的是啊 0

09:06.820 --> 09:10.740
对吧啊 这边就是记录你鼠标的位置 一个是x 一个是y

09:11.140 --> 09:12.100
一开始都是0

09:12.580 --> 09:16.260
好 然后接下来换我这边 我这边的话要给他绑定一个什么呢 绑定

09:16.820 --> 09:20.420
呃 这边这边呢 我们先显示 显示他的这个鼠标的这个位置

09:20.900 --> 09:22.100
鼠标的位置的话 这边

09:23.460 --> 09:24.580
一个是x

09:25.300 --> 09:26.500
啊 这边是point

09:27.620 --> 09:28.500
point

09:29.140 --> 09:31.940
点x 对吧 我们这边写个x

09:32.820 --> 09:33.780
啊 鼠标

09:34.340 --> 09:36.980
这边x 啊 一个是什么呢 一个是这个y

09:37.700 --> 09:40.180
y对应的是什么呢 这边呢 是point

09:40.820 --> 09:41.460
点y

09:42.500 --> 09:47.140
对不对啊 一开始这边 这边就应该显示什么 这边是零一开始 是不是零零

09:47.540 --> 09:52.580
对吧 好 然后在这边呢 我们给他绑定一个什么呢 给他绑定一个mouse move时间

09:53.140 --> 09:53.860
啊 这边啊

09:54.580 --> 09:55.300
mouse move

09:57.380 --> 09:58.820
mouse move

09:59.380 --> 10:00.100
等于一个

10:01.860 --> 10:03.700
等于一个这个mood move

10:04.260 --> 10:05.540
mouse move handle

10:08.030 --> 10:11.870
ok 好 在这边 这边呢 就是应该是有对应的这个方法

10:12.430 --> 10:14.270
对吧 mouse move handle

10:14.830 --> 10:19.150
好 在这里面 这里面干嘛呢 这里面的话 我们首先获取到这个时间对象

10:19.790 --> 10:22.590
获取到时间对象之后 再加我们这边重新设置

10:23.150 --> 10:24.270
set points

10:25.150 --> 10:29.550
set points 然后加这边传入一个对象啊 对应的这个新的x

10:30.270 --> 10:33.310
应该是这个1点 client x

10:33.870 --> 10:37.310
关于这个事件 我们后面还会说啊 他这个是个合成事件

10:37.870 --> 10:41.470
什么是合成事件 我们后面会说 就下一张 下一张就会说

10:42.590 --> 10:44.270
好 这边呢 是client

10:44.910 --> 10:45.790
client y

10:47.070 --> 10:48.910
ok 这代码应该看得懂吧

10:49.470 --> 10:54.670
没问题吧 我这边让我这个在这个div里面 在这个div里面移动这个鼠标的时候

10:54.910 --> 11:00.030
他这边是不是就会去改变这个xy的值啊对不对啊 这个xy的值改变成多少

11:00.270 --> 11:01.790
所以根据你鼠标的这个移动

11:02.590 --> 11:05.470
对不对 根据你鼠标的移动 好来我们这边来看一下啊

11:05.950 --> 11:08.750
我们先把这个敲的二 先把它注射掉 让它爆出

11:09.470 --> 11:12.910
好 这边保存 保存了之后 然后加这边来看一下

11:14.750 --> 11:18.190
好 ok 这边出来了 对不对 好 你看我这边

11:18.910 --> 11:24.350
啊 这边移动 看到没有 我鼠标的这个移动 这边就会什么 这数字就会变化

11:25.230 --> 11:28.590
对不对啊 这边是记录这个鼠标啊 它如何移动的

11:29.070 --> 11:35.070
啊 这是我的第一个组件啊 第一个组件就写好了 好 第一个组件写好了之后 然后接下来 我们这边

11:35.790 --> 11:41.790
第二个组件 第二个组件 第二个组件也是把这些先干掉啊

11:43.310 --> 11:49.950
啊 第二个组件啊 这个也不要啊 第二个组件这个它是干完了 它这边的话是就是一个小球

11:51.790 --> 11:58.750
一个小球啊 该组件 该组件的这个效果是什么呢 是一个小球

11:59.070 --> 12:04.270
会什么呢 会追随这个鼠标

12:06.190 --> 12:08.110
鼠标 进行移动

12:10.190 --> 12:15.150
ok 好来呗啊 这边首先返回返回一个这个DIV

12:17.310 --> 12:21.550
啊 这边DIV DIV的话 这边的话有一定的这个样式啊 这个样式我就不写了

12:22.190 --> 12:27.730
样式我把这拿过来吧 样式啊 把他拿过来

12:28.690 --> 12:32.930
啊 这边应该是有个style 是吧 style 拿过来

12:34.610 --> 12:43.170
啊 这是关于样式 哦 说的 ok 啊 这边

12:44.850 --> 12:49.810
style啊 可是话一下啊 首先这个是外层 外层的话这边也是啊

12:50.610 --> 12:55.970
宽400高400啊 有个背景颜色啊 这边是relative overflow head

12:56.450 --> 13:02.130
好 然后里面 里面的话 然后加这边首先也是啊 h1 啊 这边呢 就是移动鼠标

13:04.450 --> 13:09.330
移动鼠标啊 移动鼠标之后 然后加这边呢 会有一个什么呢 会有个这个小球

13:10.530 --> 13:14.930
可不可以啊 这边会有个小球啊 然后小球的话 然后加我这边写下他的这个样式

13:15.810 --> 13:17.970
把这边这个style 把它过来

13:19.730 --> 13:24.130
放到这里啊 这个小球的话宽是15 高是15

13:24.450 --> 13:31.570
啊 border radius 50% 是不是成一个这个完全的圆形 对吧 然后要有个背景颜色是白色啊 这边绝对定位

13:32.130 --> 13:37.810
啊 绝对定位完了 这边left和top 设置left和top 这啊 这边呢 是pointx

13:38.210 --> 13:41.410
啊 我们这边point 是吧 还没设置啊 所以说我们这边的话

13:43.490 --> 13:50.130
use state 对吧 好 然后接下来这里 这里的话就是const

13:51.010 --> 13:54.130
一个point 然后set

13:55.170 --> 13:58.850
point 等于一个use state

14:00.050 --> 14:04.450
好 这边的话是一个对象 这边x对应了是0

14:05.170 --> 14:07.570
然后y对应了是6

14:08.370 --> 14:13.650
对吧啊 这边point x啊 减5减460 为什么要减5减460啊 这个的

14:14.210 --> 14:18.770
减460的话是他要减去这个左边div的这个宽度啊

14:19.250 --> 14:21.970
好 然后接下来的话 这边我是给了一个50

14:23.090 --> 14:30.530
就是你这边 你这边是850吗 对吧 850的话 然后每一个是多少 每一个是400

14:31.570 --> 14:34.530
每一个是400 那也就是说 然后我们这边把这个图画一下

14:36.050 --> 14:40.770
你整个这个 整个这个是850啊 整个你这边有个盒子

14:41.330 --> 14:43.730
有个盒子 他是多少 他说850

14:44.450 --> 14:49.330
对吧 850 850的话 你这边翘的1和翘的2

14:49.890 --> 14:55.170
他都是什么 是不是都是400 对吧 都是400 那这边就是啊 有一个400

14:55.810 --> 14:56.770
这个的话是400

14:58.370 --> 15:02.930
对吧 好 400啊 你这边又是什么 你这边是不是又是space between

15:03.410 --> 15:06.690
对不对 所以他这边大概是这个样子的 这边那是400

15:08.210 --> 15:12.210
这边是400啊 那中间会有个什么 中间是不是会有个50

15:12.450 --> 15:19.010
对不对 中间会有个50 okay 所以这边加起来就多少了 这边就是已经是450了

15:19.570 --> 15:23.970
150的话 然后接下来的话 这边的话 还减了个10

15:24.610 --> 15:28.210
这个还有个10是什么 10好像是

15:29.250 --> 15:33.650
好像是这个这个小球的宽度 反正我当时的话 我微调了一下

15:34.290 --> 15:36.690
微调了一下 这边反正进行了个微调

15:37.250 --> 15:42.290
ok 总之的话 到时候做出来的效果就是什么呢 就是他会追随你的这个鼠标

15:42.850 --> 15:50.770
来我们来看一下吧 好 那我们这边来看一下 这边是他的样式 样式完了之后啊

15:50.770 --> 15:53.730
然后我们这边 这边的话 我们需要给他绑定一个

15:54.530 --> 15:58.050
绑定一个这个 就是你这边的话mouse move

15:58.770 --> 16:05.250
对吧 好在这边 这边我们就是on mouse move

16:06.210 --> 16:11.170
on mouse move 等于一个什么呢 等于一个mouse move

16:12.610 --> 16:19.010
mouse move handle 对吧 好 然后在这边呢 这个来写个方形

16:19.890 --> 16:27.810
方形mouse move handle 好 这边这边呢 是拿到这个时间对象 对吧 拿到时间对象之后 然后在这边

16:29.010 --> 16:33.010
好 取消 好 然后接下来这边 这边呢 是set points

16:33.970 --> 16:38.850
啊 这边x x对呢 是e.client

16:40.130 --> 16:45.410
x y y对呢 是e.client y

16:46.370 --> 16:49.650
对吧 好 这边呢 你这边 这边是mouse move

16:51.490 --> 16:55.970
啊 你这边 鼠标移动的时候 这边是干嘛 什么 拿到你这个事件对象

16:56.370 --> 16:59.650
当前鼠标的这个事件对象 去改他的这个xy

17:00.530 --> 17:05.650
对不对 改他的这个xy啊 好 然后接下来 这边我们来看一下

17:06.370 --> 17:09.730
看一下效果啊 这边我们要把那个 第二个把它打开

17:14.420 --> 17:20.980
好 这边 你看 是不是就是实现了 对不对 你看这边啊 跟随这个鼠标

17:21.540 --> 17:27.060
移动的一个这个小球啊 这边就实现了 对吧 你看这个小球始终是跟随这个鼠标

17:27.540 --> 17:31.540
进行这个移动的啊 这边这边的话是什么 这边是打印出来

17:32.020 --> 17:38.500
你这个鼠标 他当前的这个坐标 这边是什么 这边是根据你当前的这个坐标 我干嘛呀 我这边是不是移动

17:39.300 --> 17:44.340
对不对 移动 好 这笔记这边的话 这边还多写了一个啊 把这个删了

17:45.940 --> 17:49.460
他不需要绑时间 只需要在这绑一下就可以了 对吧

17:50.580 --> 17:57.140
ok 好 那我们这个demo我们就写出来了啊 demo这个没什么 好 那关键是当然有没有发现问题啊

17:58.100 --> 18:01.540
你没有发现问题 你这边的话 你来看一下这个看不一和看不二

18:02.660 --> 18:08.660
看不一和看不二啊 仔细看一下 你会发现整体的话 这一部分逻辑是什么

18:09.140 --> 18:15.220
是不是一模一啊 只是什么 是不是只是渲染的仕途不一样 这边他是这个打印

18:15.780 --> 18:19.460
鼠标的位置 这边是什么 这边呢 是不是就是一个这个小球

18:20.100 --> 18:25.460
对不对 进行移动啊 你会发现这一部分是一模一样的 就我们的这个逻辑

18:26.180 --> 18:29.380
是一模一样的 对不对啊 我们这边仔细观察

18:31.380 --> 18:33.780
仔细观察下面的代码

18:36.100 --> 18:41.380
下面的代码 我们会发现什么 两个组件

18:42.100 --> 18:46.260
两个组件的逻辑一模一样

18:47.220 --> 18:51.860
仅仅是什么 仅仅是渲染的仕途

18:52.180 --> 18:56.980
不一样 对吧 哎呀 我会发现这么一个问题

18:57.620 --> 19:01.780
那怎么办呢 那这个时候咱们就可以使用这个 render pops

19:02.900 --> 19:09.140
我们这边的话拿一个这个公共的组件 咱们把那个公共的逻辑 我们把它提取出来

19:09.700 --> 19:16.020
比如说我这边我举个例子 我这边新创建一个 新创建一个这个叫做 mouse move

19:16.740 --> 19:19.060
mouse move 点接下

19:20.500 --> 19:23.380
啊 这个组件负责干嘛呢 rsf

19:24.340 --> 19:26.820
这个组件的话就是负责公共的逻辑

19:28.260 --> 19:32.660
该组件负责什么呢 负责公共的逻辑

19:36.430 --> 19:42.110
看到没有 我公共的逻辑有哪些 公共的逻辑的话是不是就是这边啊 首先这边把这个state

19:43.150 --> 19:43.870
把它过来

19:43.870 --> 19:52.030
好 大家这边 是不是这边定一个状态 x0 y0 大家这边呢 是不是就是这边设置

19:52.510 --> 19:57.070
根据你这个事件对象的 client x和 client y 是不是修改 x y

19:57.630 --> 20:01.950
对不对啊 这一部分逻辑我们就可以提到哪里呢 就可以提到这边

20:04.030 --> 20:05.310
提到我的 mouse move

20:06.750 --> 20:09.550
ok 好 那我的 mouse move 渲染什么呢

20:10.430 --> 20:15.470
对不对 渲染什么 究竟渲染什么 渲染的仕途由谁说了算 有你这边

20:16.110 --> 20:24.110
你回头在这个组件这边 你在使用这个 mouse move的时候 我们回头的话会给他传一个什么呢 会给他传一个这个props

20:24.750 --> 20:28.030
只不过这个props他对应的是什么呢 他对应的只是一个

20:28.590 --> 20:32.990
函数 函数返回一段什么呢 返回一段gst

20:33.950 --> 20:35.630
ok 返回一段gst

20:36.510 --> 20:40.990
好 来我们这边 来到这个app组件 我们这个先空在这 来到app组件

20:41.550 --> 20:44.350
app组件这边 这边的话就不再是什么

20:45.550 --> 20:49.150
这边就不再是渲染这个翘的一 翘的二了

20:50.270 --> 20:53.070
这边就不再是

20:54.270 --> 20:57.390
直接使用这个翘的一 翘的二

20:58.510 --> 21:00.030
翘的一 翘的二

21:00.990 --> 21:02.110
ok ok

21:03.070 --> 21:10.190
好 然后接下来改为什么呢 改为使用这个 mouse move

21:12.030 --> 21:18.110
对吧 使用这个组件好了 这个组件的话 你得先把它引一下 我把它引一下 这边呢 是啊

21:18.830 --> 21:19.470
mouse move

21:22.480 --> 21:23.520
好 这边 mouse move

21:24.880 --> 21:27.440
好 你这边的话 你再使用这个 mouse move

21:27.600 --> 21:35.440
使用mouse move的时候 接下来这边的话 你就给它传一个什么呢 传一个这个pops

21:36.080 --> 21:38.560
这边我们给它传一个什么呢 传一个叫做render

21:39.360 --> 21:44.480
render属性 render属性的话 以前我们传render怎么传的 以前我们传pops怎么传的

21:44.880 --> 21:49.360
这我们这边随便传值啊 对吧 要么它这边对应的是一个支付串的值 要么对应什么

21:49.680 --> 21:54.560
这对应的是一个这个这边 这边你可以写这个其他类型 对吧 你可以写数字

21:55.040 --> 22:03.680
你可以写什么 可以写这个对象 对吧 也可以写对象 ok 但是现在我们这一次我们不这么写 我们这一次的话 我们写一个什么呢 我们写一个函数

22:05.040 --> 22:08.640
ok 他对应的是个函数啊 这边呢 首先这边这个pops

22:10.400 --> 22:16.720
pops 啊 接受到这个pops 啊 当我们这边不存在这个pops啊 这边就直接这样子

22:17.440 --> 22:20.480
好 大家这边返回什么呢 返回这个翘的音

22:23.060 --> 22:25.620
看到没有 返回这边这个

22:26.180 --> 22:32.420
翘的音 返回这个组件啊 但你这边如果有这个pops的话 你这边可以把这个pops

22:32.980 --> 22:34.660
继续把它就是其他的pops啊

22:35.460 --> 22:40.580
其他的这个pops 把它往下传 但我们这边不存在啊 我们这边就直接就这样子写

22:41.300 --> 22:50.100
ok 你看 现在的话 他这边的话就不再是对应的是一个什么对象啊 或者支付串呀 或者数字呀 而是一个什么 而是一个函数

22:51.060 --> 22:55.700
看到没有 这个函数表明了什么 表明了我要渲染的这个仕图

22:56.740 --> 22:59.860
啊 知道吧 这边写一下mouse move

23:01.620 --> 23:03.380
move的这个pops

23:04.500 --> 23:08.420
的这个render这个pops属性

23:09.700 --> 23:15.940
对应的值是什么呢 对应的值是一个是一个函数

23:16.740 --> 23:22.580
该函数表明了我要渲染的仕图

23:23.700 --> 23:28.180
明白这个道理吧 因为我们刚才其实我们刚才总结了 你这边翘的1和翘的2

23:28.740 --> 23:32.660
逻辑是不是一模一样 就是什么不一样 是不是就是这个仕图不一样

23:33.380 --> 23:39.380
对不对 那现在这个相同的逻辑我这边已经干嘛 已经封装到这个mouse move里面了 那我这边想要

23:40.020 --> 23:45.460
就需要的东西就是什么 就是我这边要渲染的这个仕图是什么

23:45.940 --> 23:48.740
对不对 你渲染的仕图是什么 渲染的仕图就是翘的come1

23:49.220 --> 23:52.580
那翘的come1的话这边的话 这些逻辑就都不需要了

23:54.340 --> 23:58.980
这些逻辑就都不需要了 那这边就是单纯的是一个什么 单纯的

24:00.420 --> 24:03.300
单纯的这边就是返回一段仕图

24:04.500 --> 24:08.660
看到没有 就是返回一段仕图 返回一段仕图 那有的人说那你这个

24:08.980 --> 24:12.020
那我这边得有这个就是我之前的这些状态呀

24:12.820 --> 24:17.380
啊 这些状态这边哪来的呢 你不要着急啊 你这边的话是不是在使用这个

24:18.660 --> 24:23.700
啊 这边怎么漂黄啊 这边漂黄是因为这个翘的啊 这个二没用啊 我们这边一样的

24:24.420 --> 24:30.260
把这边一个一个来解决啊 这边这个的话我要渲染的仕图是翘的come1

24:30.660 --> 24:32.660
这个我要渲染的仕图是翘的come2

24:33.380 --> 24:35.860
对不对 好 然后接下来来到这边

24:36.820 --> 24:40.580
来到这边 这边的话它就接收一个这个props

24:41.300 --> 24:44.020
对不对 接收一个props 是props里面有什么

24:44.660 --> 24:47.460
props里面啊 注意

24:48.660 --> 24:52.820
props里面有一个东西叫做什么 叫做Render

24:53.860 --> 24:56.340
对不对 你这边是不是有一个对应的是Render

24:56.900 --> 25:00.660
对不对啊 那我们这边可以判断你这边有没有这个Render

25:01.620 --> 25:06.340
如果你有啊 如果你有啊 这边好像不需要啊 不需要这个扩好

25:07.460 --> 25:11.940
啊 如果你有 有的 这边怎么了 应该是后面还没写完啊

25:12.500 --> 25:16.100
啊 如果你有 有的话我这边就干嘛 我这边是不是就执行你啊

25:17.780 --> 25:21.380
因为你这边是个什么呀 你这边是一个函数啊

25:22.580 --> 25:26.580
对不对 你这个Render对应的只是个函数啊 是个函数那我这边是执行呗

25:27.060 --> 25:31.620
啊 执行我这边在调用Render的时候 我这边就干嘛呢 我这边的话就把这个

25:32.740 --> 25:40.450
points啊 把这个points 以及这个什么呢 这个move handle 我把它传过去

25:41.330 --> 25:46.450
啊 一个是这个points 一个是什么呢 一个是这个mouse move handle

25:47.010 --> 25:50.850
把它传过去啊 否则的话我这边就什么了 否则的话我这边就是一个空

25:53.010 --> 25:56.610
啊 哎 写错了啊 否则的话我这边就是一个空

25:59.170 --> 26:06.050
嗯 啊 ok 看到没有 哎 你看我 你这边传啊 这边再说一遍啊 你这边传的是个函数

26:06.850 --> 26:13.330
对不对 我们说了Render POP是他最大的特点就是吗 在这上面看一下最大特点就是吗 是不是使用一个

26:13.330 --> 26:18.450
值为函数的这个prop 对不对 你看我这边 我这边这个 我的这个prop

26:19.010 --> 26:24.530
啊 这个Render Render他是个prop吗 他是个prop属性吗 对不对 他这边是个什么 他是个函数

26:25.010 --> 26:27.890
这个函数的话 那我这边我就可以干嘛 我这边是不是可以调用你

26:28.930 --> 26:33.410
我说可以调用你 调用你的时候再叫我这边给你干嘛 我这边是不是给你传递参数

26:34.610 --> 26:39.730
对不对 我给你传递参数啊 啊 传递参数之后 然后现在在这边这边我就可以通过什么

26:40.530 --> 26:41.330
通过props

26:42.770 --> 26:49.890
能拿到 对不对 通过props 哦 等一下 这边的话你这边Render Render这边是传了这个

26:51.010 --> 26:53.970
参数 是吧 那这边这边我们还得改

26:54.690 --> 26:59.730
这边还得改 这边的话你就这边 你在调这个函数的时候 你这边是不是传了参数的

27:00.850 --> 27:06.370
对不对 你这边 这边你在调用props Render的时候 你这边是不是传了这个参数的

27:07.490 --> 27:13.330
对不对 传了参数的话 那这边 这边他应该是什么 这边你这个函数的话 这边是不是应该是接受这个props

27:14.050 --> 27:16.210
啊 接受这个props 然后加把这个props

27:17.490 --> 27:19.970
干嘛 是不 这边他传递到这个支柱键里面

27:20.850 --> 27:22.610
点点点props

27:23.490 --> 27:25.570
对吧 这边也是一样props

27:26.530 --> 27:27.410
啊 这边呢 就是

27:28.690 --> 27:30.530
点点点props

27:31.330 --> 27:37.890
ok 就你这里啊 这边再说一遍 你这边呢 你这边在调用props 点Render的时候props 点Render是谁

27:38.370 --> 27:43.730
所以就是这个函数啊 对不对 这个函数 这个函数的话 你这边的话 你在调用的时候 你这边是传了参数的

27:44.370 --> 27:47.810
对不对 这个是你的时参 那这边呢 你是不是这个行参要接受一下

27:48.370 --> 27:52.770
接受了之后 然后接下来 这边是个原封不动的 给这个支柱键

27:53.570 --> 27:57.490
对不对 给了支柱键之后 让家这边你这个支柱键props

27:58.050 --> 28:00.050
拿到 拿到之后 让家这边就是什么

28:00.930 --> 28:03.890
props 点这个mouse mohender

28:04.370 --> 28:09.250
这边就是什么 是props 点point 点x

28:10.610 --> 28:13.170
props 点point 点y

28:14.050 --> 28:16.850
看到没有 你看我们这边就把这个choud company

28:17.410 --> 28:18.850
我们就把它改造完毕了

28:19.570 --> 28:23.010
你看这个choud company就只有什么 是不是只有这个js x 试图

28:23.730 --> 28:24.690
对不对 没有逻辑

28:25.490 --> 28:30.850
没有逻辑 为什么 这个逻辑的话都已经 因为它是公共的 公共的已经被这个mouse mohender提取出去了

28:31.490 --> 28:35.730
对吧 好 那接下来来这个choud company 这个comp2也一样

28:36.370 --> 28:40.770
这个还需不需要 不需要了 对不对 不需要了

28:41.250 --> 28:43.730
好 这边 这边呢 这个这个状态也就不需要了

28:44.370 --> 28:46.610
好 这边这边的话有一个什么 是props

28:47.330 --> 28:49.970
啊 这边props

28:51.490 --> 28:54.610
啊 这边也是一样 这边props

28:55.730 --> 28:57.650
啊 这边props

28:58.450 --> 29:01.730
ok 好 保存 保存了之后来看一下效果

29:02.690 --> 29:05.410
看一下效果啊 是不是一样的好事

29:06.290 --> 29:10.210
对不对 一样的好事啊 看这边 哎 这边小球怎么没出来

29:11.170 --> 29:13.970
这边小球呢

29:15.170 --> 29:17.170
choud2啊 看一下啊

29:18.690 --> 29:21.570
这边小球怎么没出来啊 稍等我检查一下

29:23.010 --> 29:27.490
啊 这边这里应该是对的 对的之后 然后接下来这边

29:28.450 --> 29:30.450
这边也应该没问题 这边是公共的

29:32.130 --> 29:34.130
然后props

29:37.180 --> 29:39.580
哎 我的小球呢 我们这边来看一下

29:42.370 --> 29:44.370
好 这边的话来看一下

29:46.540 --> 29:49.100
小球跑哪去了 我小球跑到这来了

29:50.540 --> 29:53.580
小球怎么会跑到这来了 啊 这边移动 看一下

29:54.540 --> 29:56.940
这边移动的话 它没有效果了

29:58.300 --> 29:59.180
没有效果

30:00.620 --> 30:07.440
稍等啊 我看一下啊 这边来检查一下啊

30:08.560 --> 30:12.320
啊 这边的话props mouse mohandle

30:13.040 --> 30:16.320
啊 这边这边应该是大小写 对吧 mouse mohandle

30:16.880 --> 30:19.920
好 这边大小写写错了 这边m应该是大写

30:20.560 --> 30:22.560
好 保存 保存了之后这边来看一下

30:23.680 --> 30:26.720
是不是搞定了 对不对啊 这边小球

30:28.000 --> 30:31.600
把这个 刚才打印了一下 把这个

30:33.680 --> 30:39.520
好 刷新 这边是不是可以了 这个是跟着鼠标移动的小球

30:39.920 --> 30:43.280
这边的话是那个 就是记录鼠标的位置

30:43.760 --> 30:47.760
啊 你看 你会发现 就是通过我们这样子改写之后

30:47.760 --> 30:51.120
啊 你会发现我们的这个指主键的话 其实就非常干净

30:51.760 --> 30:55.440
指主键的话只有什么 指主键是不是只有就是你要渲染的这个gsa

30:56.400 --> 30:59.920
对不对 只有你要渲染的gsa啊 让你的公共

31:00.480 --> 31:05.120
公共的逻辑都是相同的嘛 对吧 相同的话 然后这边就被提取到哪里了

31:05.120 --> 31:07.120
提取到这个mouse move这边了

31:07.680 --> 31:11.920
啊 然后加这边app再用的时候 就不再用这个敲的抗不一敲的开门

31:12.080 --> 31:14.320
而是用什么呢 而是用这个mouse move

31:15.280 --> 31:21.200
对不对 mouse move 然我要渲染什么 我不知道呀 没关系 我这边给你提供一个这个Render属性

31:21.600 --> 31:23.920
这个Render属性 他对应的是一个函数

31:24.560 --> 31:26.640
函数里面 然后接下来这边返回

31:27.360 --> 31:35.120
我要渲染的东西 对吧 我要渲染的仕途是什么 那这边呢 敲的抗不一和敲的抗不二里面就只有仕途

31:35.840 --> 31:36.640
啊 只有仕途

31:37.520 --> 31:40.400
看到没有 这个就是所谓的Render pops

31:41.280 --> 31:47.360
这就是所谓的Render pops 你回到这边 你把这个例子写完之后 你这边再来看一下啊 再来看一下

31:48.000 --> 31:52.080
并非什么新语法 指的是什么 使用一个直为函数的这个pop

31:52.640 --> 31:56.400
对吧 这个函数的话干嘛呢 指定了我要渲染什么

31:56.960 --> 31:59.920
哎 你是不是就是更加能够理解这个Render pops

32:01.120 --> 32:05.680
对吧 好 然后这边要给大家说一点的是啊 要说一点的是

32:05.920 --> 32:07.840
在我看啊 这边都讲了啊

32:09.280 --> 32:10.080
嗯 这里

32:10.960 --> 32:16.800
就是需要说明的是 虽然这个技巧的名字叫做Render pops 就官方给他取了名字

32:17.360 --> 32:23.760
官方取了名字这边是不是叫做Render pops 你可以看到我们这边在写的时候 这边是不是也是用的是Render属性

32:24.240 --> 32:26.480
对不对 但是实际上的话 这边

32:28.160 --> 32:33.280
实际上的话 你这边不是说你必须要提供一个名为Render的这个属性

32:34.000 --> 32:41.920
啊 事实上的话 你比如说你封装这个公共逻辑的这个组件啊 只要能够得到确认的试图都可以

32:42.400 --> 32:43.840
这句话加出啊

32:45.680 --> 32:47.680
加出 加这个小花线

32:48.880 --> 32:51.760
就我这边的话 我这个封装公共逻辑的这个组件

32:52.400 --> 32:54.720
比如说我们上面的话是这个moss move

32:55.280 --> 32:58.320
对不对 这个组件 这个组件里面封装的是吧 公共的逻辑

32:58.960 --> 33:03.520
对吧 只要这个组件能够得到要确认的试图都可以

33:04.640 --> 33:06.720
都可以 那比如说这边我们举个例子吧

33:07.440 --> 33:08.160
回到我们这边

33:08.960 --> 33:11.760
好 我这边的话 我不用什么呢 我不用这个Render行不行

33:12.480 --> 33:17.120
不用这个Render啊 我把这边呢 我改成一个什么呢 改成一个双标签

33:18.640 --> 33:18.960
这边

33:19.680 --> 33:20.320
moss move

33:20.640 --> 33:24.400
好 改成双标签之后 然后接下来我这边干嘛呢 我在这里面

33:24.880 --> 33:30.320
这里面啊 这里面的话 然后接下来通过什么呢 通过这个props

33:32.480 --> 33:36.640
可不可以啊 这边给个函数 对吧 这边的话是渲染这个翘的1

33:37.440 --> 33:39.520
啊 然后加这边这个第二个也是

33:40.800 --> 33:41.520
好吧 这一块

33:43.520 --> 33:47.120
好 再把这儿 把这儿改一下 改成这个双标签

33:47.920 --> 33:48.160
OK

33:49.840 --> 33:51.200
我改成这样子写法行不行

33:51.840 --> 33:56.320
都可以 随便你怎么改 只要什么呢 只要在你的这个moss move内部

33:56.320 --> 34:00.320
我能够拿到什么呢 能够拿到你最终要确认的仕途

34:00.960 --> 34:03.920
就OK 我只要能拿到这个仕途就行

34:04.480 --> 34:07.280
怎么样吧 好 那这边这边的话我们就应该是什么

34:07.280 --> 34:10.240
这边呢 就是应该是props是什么 是不是点球轮啊

34:11.200 --> 34:13.920
对不对 我们这边是通过这个球轮的方式

34:13.920 --> 34:17.280
好 这边呢 是不是也是应该是props点球轮

34:18.240 --> 34:20.000
对吧 好 那我们这边我们保存一下

34:21.680 --> 34:25.200
保存了之后再来这边来看一下 回到这边 刷新

34:26.080 --> 34:27.920
这边 是不是仍然是OK的

34:29.040 --> 34:30.720
对不对 仍然是OK的

34:31.600 --> 34:35.280
这就是关于这个Render Pops 就这个知识点

34:35.280 --> 34:38.640
也不是什么新的知识点 对不对 他就是一种技巧

34:39.280 --> 34:42.720
一种技巧 怎么官方的话 专门就是开了一个文档

34:43.440 --> 34:45.440
专门开了一个文档 给你说一下

34:46.880 --> 34:50.000
好 这边的话 然后还会涉及到一个问题 什么问题呢

34:50.080 --> 34:54.560
就我们之前讲的就是这个抽离这个就是横向关注点

34:55.040 --> 35:00.480
我们讲了就在这追上面啊 就我们这边横切关注点 对吧 进行一个抽离

35:01.040 --> 35:05.920
除了这个Render Pops 还有什么 是不是还有这个高阶组件

35:07.040 --> 35:09.840
对不对 那我们像比如说我们上面这个例子

35:09.840 --> 35:13.680
用高阶组件能不能实现 用高阶组件一样的可以实现

35:14.240 --> 35:15.440
来 我们这边来看一下

35:16.720 --> 35:19.680
比如说我们这边Hoc 我们这边新建一个

35:20.080 --> 35:26.000
这边呢 叫做WasteMouseMove.js

35:26.640 --> 35:29.760
啊 我们这边来写个这个高阶组件 这边这个Function

35:30.640 --> 35:33.040
那这边WasteMouseMove

35:34.560 --> 35:36.080
MouseMove

35:37.680 --> 35:41.200
OK 好 大家这个是个高阶组件 这边他会返回一个什么

35:41.200 --> 35:44.560
说会返回一个新的 对吧 返回一个新组件

35:45.040 --> 35:47.920
NewCom返回这么一个组件

35:48.800 --> 35:51.280
好 大家我们把那个公共的逻辑就干嘛呢

35:51.280 --> 35:54.400
公共的逻辑我们就放到就是这个组件里面

35:54.400 --> 35:57.600
应该是在这 放到这个组件里面 对吧

35:57.600 --> 36:00.400
好 那我们这边把这个逻辑直接把拿过来

36:01.440 --> 36:04.960
啊 这个公共的逻辑把拿过来

36:04.960 --> 36:08.000
好 这边需要什么 这边呢 是UserState 是吧

36:08.800 --> 36:13.600
ImportUserStateFromReact

36:14.560 --> 36:17.920
OK 好 然后接下来的话 这边这边呢 需要干嘛

36:17.920 --> 36:20.880
这边呢 是需要你返回一段这个仕图

36:21.920 --> 36:24.160
对不对 需要你返回一段这个仕图

36:24.160 --> 36:26.480
好 返回一段仕图的话 那我们这边就Return

36:27.040 --> 36:29.680
你这边就是应该是接受一个什么 是不是接受一个

36:30.240 --> 36:33.200
组件 你原本这边要包裹的这个组件

36:33.200 --> 36:35.760
好 这边返回就返回是吗 就返回这个

36:37.600 --> 36:38.880
是不是就是返回这个com嘛

36:40.800 --> 36:42.720
对不对 就返回这个com

36:42.880 --> 36:44.960
好 返回这个com之后 然后接下来这边

36:46.480 --> 36:48.720
这边连个传递 这边要传递什么呢

36:48.720 --> 36:51.440
这边我们需要把这个Points和这个把传递出去

36:52.000 --> 36:53.440
好 所以我们这边Const

36:54.080 --> 36:58.160
一个这个MouseMoveHandle

37:00.850 --> 37:04.050
等于这边是个对象 这边是Points

37:04.850 --> 37:06.930
然后接下来这边MouseMoveHandle

37:07.490 --> 37:10.210
这边名字还不能一样 这边把这个名字改一下

37:10.770 --> 37:13.010
这边叫做什么 这边就叫做MouseMove吧

37:14.370 --> 37:17.410
叫MouseMove 好 然后加这边那就是点点点

37:18.610 --> 37:23.410
MouseMove 是把这个传递进去 对不对 传递到这个植株件里面

37:24.530 --> 37:26.850
好 然后接下来这边把这个导出出去

37:28.370 --> 37:31.890
IsPortDefaultWithMouseMove

37:32.690 --> 37:34.530
好 我们这边的话一个这个高接组件

37:35.250 --> 37:38.610
是不是就写好了 对不对 这边这个高接组件

37:38.610 --> 37:41.730
我会给你返回一个什么呢 我会给你返回一个这个新组件

37:42.210 --> 37:45.570
新组件的话 我这边是不是封装了这个公共的这个逻辑

37:46.210 --> 37:50.210
对不对 封装了这个公共的逻辑之后 人家这边返回什么

37:50.210 --> 37:52.290
返回就是你这边传入的这个刊目

37:53.010 --> 37:55.010
大家我这边把什么的 把这个Points

37:55.410 --> 38:00.530
还有这个MouseMoveHandle作为Pops 传入到你原本的这个组件里面

38:01.490 --> 38:04.290
好 然后加这边这边在用的时候 这边你就可以怎么用

38:04.690 --> 38:06.290
我们这边把这就注射掉了

38:07.810 --> 38:09.410
注射掉 然后下面

38:10.130 --> 38:11.730
下面

38:16.270 --> 38:16.910
下面

38:19.680 --> 38:20.000
射

38:20.960 --> 38:22.880
使用这个高接组件

38:24.400 --> 38:25.360
高接组件的

38:26.320 --> 38:26.720
方式

38:27.680 --> 38:28.720
使用这个高接组件

38:29.360 --> 38:32.400
使用高接组件的话 那首先你这边是不是引入这个高接组件

38:32.400 --> 38:33.120
这个就不要了

38:33.680 --> 38:35.360
我们这边Import

38:35.920 --> 38:39.680
这边VaseMouseMove

38:40.640 --> 38:42.160
然后接下来这边From

38:43.520 --> 38:44.320
这边是

38:45.680 --> 38:46.640
当前Move是吧

38:46.960 --> 38:48.080
当前Move下面

38:48.080 --> 38:48.800
HLC

38:49.440 --> 38:50.880
下面的VaseMouseMove

38:51.440 --> 38:53.280
OK 好 人家这边创建

38:54.560 --> 38:55.120
Const

38:55.680 --> 38:56.240
这个New

38:57.680 --> 38:58.560
NewChart

38:59.760 --> 39:01.200
NewChart.com1

39:01.760 --> 39:02.560
等于一个什么呢

39:02.560 --> 39:04.160
等于一个VaseMouseMove

39:05.120 --> 39:07.440
把这个Chart.com1创进去

39:08.160 --> 39:09.680
这边Chart.com2

39:10.240 --> 39:11.520
这边是2

39:12.320 --> 39:12.880
对吧

39:12.880 --> 39:14.400
好 再加在这下面

39:14.960 --> 39:15.600
来使用

39:18.830 --> 39:19.470
来使用

39:20.190 --> 39:20.750
这边是2

39:21.390 --> 39:22.110
保存一下

39:22.590 --> 39:23.310
保存了之后

39:23.310 --> 39:24.350
然后加这边来看一下

39:25.390 --> 39:26.670
是不是一样的可以实现

39:26.670 --> 39:27.310
刷新一下

39:28.030 --> 39:28.910
是不是一样的OK

39:29.470 --> 39:29.790
对不对

39:29.790 --> 39:30.270
你看这边

39:30.750 --> 39:31.150
一样的

39:31.790 --> 39:32.830
没有问题的

39:32.830 --> 39:33.550
对不对

39:33.550 --> 39:34.670
一样的OK

39:34.670 --> 39:36.590
你使用这个高接组件

39:36.590 --> 39:37.550
一样的可以实现的

39:38.110 --> 39:39.150
所以为什么我们这边

39:39.150 --> 39:40.430
刚开始这边说了

39:40.430 --> 39:43.470
你这边就是橫切关注点的这个抽离

39:43.870 --> 39:44.750
你可以用什么

39:44.750 --> 39:45.950
可以用高接组件

39:45.950 --> 39:47.870
也可以用这个RenderProps

39:48.590 --> 39:49.470
那这边的话

39:49.470 --> 39:50.350
自然而然的话

39:50.350 --> 39:51.870
同学们肯定就会有个问题

39:52.510 --> 39:52.990
什么问题

39:53.550 --> 39:54.670
我什么时候

39:54.670 --> 39:57.230
应该是用高接组件合适一些

39:57.230 --> 39:59.310
什么时候用这个RenderProps

39:59.870 --> 40:00.670
要合适一些

40:01.630 --> 40:02.110
对不对

40:02.110 --> 40:02.590
自然而然

40:02.590 --> 40:05.070
这些疑问其实都是自发的

40:05.070 --> 40:06.910
你自然而然就会有这种疑问

40:06.910 --> 40:08.910
我实际上既然这两个都可以做这个事情

40:09.550 --> 40:09.950
对吧

40:09.950 --> 40:11.230
那我这个什么时候用它呢

40:11.230 --> 40:12.030
什么时候用它呢

40:12.670 --> 40:12.910
好

40:12.910 --> 40:14.830
这边实际上我在最后我写的有

40:16.030 --> 40:16.430
看一下

40:17.070 --> 40:18.270
而一般来讲的话

40:18.270 --> 40:19.390
这个RenderProps

40:19.950 --> 40:21.390
它是应用于什么呢

40:21.390 --> 40:23.550
应用于你这个组件之间

40:23.550 --> 40:26.350
它功能逻辑是完全相同

40:26.990 --> 40:27.870
一般应用于

40:27.870 --> 40:29.870
把这句话给你加粗吧

40:31.390 --> 40:32.430
这句话加粗

40:32.430 --> 40:33.230
加个下滑线

40:33.710 --> 40:34.750
就RenderProps的话

40:34.750 --> 40:35.550
一般应用于什么呢

40:35.550 --> 40:36.510
就是你组件之间

40:36.910 --> 40:38.190
功能完全相同

40:38.190 --> 40:38.990
仅仅是什么呢

40:38.990 --> 40:40.670
仅仅是渲染的仕图不同

40:41.230 --> 40:42.670
比如我们上面的那个例子

40:42.670 --> 40:44.350
我们上面例子其实就是这样的例子

40:44.830 --> 40:46.510
功能逻辑完全相同

40:46.510 --> 40:47.150
仕图不一样

40:47.710 --> 40:48.590
那这个时候的话

40:48.590 --> 40:49.950
一般你就可以使用什么呢

40:49.950 --> 40:51.230
使用这个RenderProps

40:52.270 --> 40:54.110
但不是说你不能用这个HOC

40:54.110 --> 40:55.470
你肯定也可以用HOC

40:55.790 --> 40:56.350
对吧

40:56.350 --> 40:57.870
好那这个HOC的话

40:57.870 --> 40:58.590
它一般是什么呢

40:58.590 --> 41:01.470
它一般是抽离这个部分公共逻辑

41:02.110 --> 41:03.150
你回一下我们之前

41:04.350 --> 41:06.350
之前我们不是写过一个这个VisNog吗

41:06.990 --> 41:07.630
记不记得

41:08.030 --> 41:09.470
就这个打印日字这个

41:10.030 --> 41:11.310
打印日字这个它是什么

41:11.310 --> 41:14.190
它是不是抽取这个部分的这个公共逻辑

41:14.750 --> 41:15.230
对不对

41:15.230 --> 41:16.190
抽取部分

41:16.190 --> 41:17.790
也就是说你组件之间

41:17.790 --> 41:19.630
它有一部分逻辑是相同的

41:19.950 --> 41:20.750
大家这边的话

41:20.750 --> 41:23.150
各自也有自己独有的这个逻辑

41:23.550 --> 41:24.270
那这个时候的话

41:24.270 --> 41:26.430
你用这个HOC的话

41:27.310 --> 41:28.110
用的要多一些

41:28.670 --> 41:30.270
它要比较合适一些

41:30.670 --> 41:31.710
因为HOC的话

41:31.710 --> 41:32.670
它本身就是什么呢

41:32.670 --> 41:33.950
它其实更多的

41:33.950 --> 41:35.710
就是像一个这个增强处理

41:36.590 --> 41:36.910
对不对

41:36.910 --> 41:38.590
它更像是一个增强

41:38.590 --> 41:41.310
就是我在原有组件的这个基础上

41:41.310 --> 41:42.350
然后我做一个什么呢

41:42.350 --> 41:44.190
我做一个这个增强的这个操作

41:45.230 --> 41:45.710
OK

41:45.710 --> 41:47.710
说这个时候你用这个HOC

41:47.710 --> 41:48.910
要更合适一些

41:49.950 --> 41:52.030
这就是两者之间的这个区别

41:52.990 --> 41:53.230
OK

41:54.110 --> 41:54.350
好

41:54.350 --> 41:56.830
这就是关于这个RenderPops

41:57.630 --> 41:58.830
相信通过这个例子的话

41:58.830 --> 42:00.350
大家应该能够了解

42:00.350 --> 42:01.790
什么是RenderPops

42:01.790 --> 42:02.430
下来的话

42:02.430 --> 42:03.790
把我们课程上的这个例子

42:03.790 --> 42:04.590
把它写一些

42:05.070 --> 42:05.950
然后回头的话

42:05.950 --> 42:08.510
把这个把这个官网的这个文章

42:08.510 --> 42:10.510
从头到尾仔细的读一遍

42:11.550 --> 42:11.870
好吧

42:12.430 --> 42:12.670
OK

42:13.390 --> 42:13.630
好

42:13.630 --> 42:15.310
这句课的话就先到这里

42:15.950 --> 42:17.150
再见

