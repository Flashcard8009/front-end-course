WEBVTT

00:00.050 --> 00:02.450
OK 我们继续

00:02.450 --> 00:05.050
上节课的话我们讲了这个scheduler

00:05.050 --> 00:07.450
他去调度这个普通任务

00:07.450 --> 00:10.450
那么我们这节课的话我们来看一下这个scheduler

00:10.450 --> 00:12.650
如何调度这个严实任务

00:12.650 --> 00:15.450
OK 相比调度那个普通任务的话

00:15.450 --> 00:17.850
这个严实任务他的流程要短一些

00:17.850 --> 00:20.450
因为我们那个上节课我们也讲了

00:20.450 --> 00:22.850
他严实任务的话他最终是要干嘛

00:22.850 --> 00:25.450
所以最终你到时间之后他要放到什么

00:25.450 --> 00:27.450
是放到那个taskcreen

00:27.450 --> 00:29.050
那个普通任务队里

00:29.650 --> 00:31.250
对不对 OK

00:31.250 --> 00:32.850
好 来我们这边我们还是把它过一下

00:32.850 --> 00:34.850
还是过一下

00:34.850 --> 00:36.050
首先的话从哪里开始呢

00:36.050 --> 00:37.450
首先还是从这个

00:38.850 --> 00:43.050
还是从这个 unstable schedule callback

00:43.050 --> 00:45.650
这个的话前面的话我们都已经说了

00:45.650 --> 00:49.450
然后上节课的话走的是

00:49.450 --> 00:51.650
走的是这个分子

00:51.650 --> 00:53.050
对不对走的是这个分子

00:53.050 --> 00:55.250
就这边他有一个e-files

00:55.250 --> 00:56.650
把这个

00:56.650 --> 00:58.450
把这个方法

00:58.450 --> 00:59.250
把他过来

01:02.250 --> 01:03.050
等一下啊

01:03.050 --> 01:05.450
我先把这个先放在这

01:13.610 --> 01:14.810
这个 unstable

01:14.810 --> 01:17.610
然后 schedule callback

01:17.610 --> 01:20.210
然后这一块的话我们只要这里

01:25.220 --> 01:27.020
然后这个参数参数

01:27.020 --> 01:28.420
参数写上吧

01:28.420 --> 01:29.320
写上

01:29.320 --> 01:31.120
这边一个参数

01:31.120 --> 01:33.020
然后 callback

01:33.020 --> 01:34.520
callback 是你的任务

01:34.520 --> 01:35.320
对吧

01:35.320 --> 01:38.120
这个的话是否延时

01:38.120 --> 01:38.820
OK

01:38.820 --> 01:41.120
其他的话然后我就把它省略了

01:41.120 --> 01:42.720
而关键点是到哪里呢

01:42.720 --> 01:45.120
关键点是到这

01:45.120 --> 01:46.120
对不对

01:46.120 --> 01:47.320
这边

01:47.320 --> 01:49.320
如果他大于

01:49.320 --> 01:51.720
否则 else

01:51.720 --> 01:52.020
对不对

01:52.020 --> 01:54.220
那这边的话这边是调度一个

01:54.220 --> 01:57.420
调度一个普通任务

01:59.220 --> 02:00.920
普通任务的话他这边是什么

02:00.920 --> 02:04.020
这边的话是这个

02:04.020 --> 02:04.920
对不对

02:04.920 --> 02:06.420
是这个

02:06.420 --> 02:06.920
这个的话

02:06.920 --> 02:08.720
这个流程我们上节课是走了的

02:08.720 --> 02:09.920
那这节课到这边

02:09.920 --> 02:11.320
我们就应该走这边了

02:11.320 --> 02:13.620
这边的话是调度

02:13.620 --> 02:18.640
调度一个延时任务

02:18.640 --> 02:20.240
我们来看看他延时任务

02:20.240 --> 02:21.540
延时任务的话

02:21.540 --> 02:23.240
然后这边进来对吧

02:23.240 --> 02:24.140
进来之后

02:24.140 --> 02:26.040
然后接下来这边

02:26.040 --> 02:28.440
推入到这个延时任务队列里面

02:28.440 --> 02:29.240
对不对

02:29.240 --> 02:30.540
然后接下来的话这边

02:30.540 --> 02:31.740
这好像我们都说了的

02:31.740 --> 02:32.540
是不是

02:32.540 --> 02:33.740
这边我们都说了的

02:33.740 --> 02:36.040
这个的话是一个类似于开关的东西

02:36.040 --> 02:36.240
好

02:36.240 --> 02:36.940
完事之后

02:36.940 --> 02:39.440
然后接下来着重是哪句

02:39.440 --> 02:41.340
着重是这句

02:41.340 --> 02:42.040
对不对

02:42.040 --> 02:42.740
着重是

02:42.740 --> 02:44.440
哎

02:44.440 --> 02:48.280
着重是这句

02:48.280 --> 02:50.480
着重是这句

02:50.480 --> 02:51.380
ok

02:51.380 --> 02:53.380
可以看到

02:53.380 --> 02:56.880
可以看到调度

02:56.880 --> 03:01.880
调度一个延时任务的时候

03:01.880 --> 03:04.380
主要是执行什么

03:04.380 --> 03:06.980
执行这个request

03:06.980 --> 03:09.180
host timeout

03:09.180 --> 03:10.780
然后这个的话接受两个参数

03:10.780 --> 03:12.780
一个是handle timeout

03:12.780 --> 03:14.080
一个是这个start time

03:14.080 --> 03:15.580
减去这个current time

03:15.580 --> 03:17.180
那这个的话肯定是一个什么

03:17.180 --> 03:19.280
肯定是一个时间

03:19.280 --> 03:19.680
对不对

03:19.680 --> 03:21.180
减下来的话是个时间

03:21.180 --> 03:22.880
这个start time和current time

03:22.880 --> 03:24.780
还记得吧

03:24.780 --> 03:26.780
start time是他这边

03:26.780 --> 03:28.380
这边定义了一个这个start time

03:28.380 --> 03:29.380
start time他回头

03:29.480 --> 03:33.280
这边是添加了这个就是延时的

03:33.280 --> 03:34.880
那加减去current time

03:34.880 --> 03:36.980
current time是不是就是当前时间

03:36.980 --> 03:37.580
对不对

03:37.580 --> 03:39.280
那这边其实就拿到什么

03:39.280 --> 03:41.680
实际上就拿到这个delay

03:41.680 --> 03:42.180
对不对

03:42.180 --> 03:43.680
实际上就是拿到这个delay

03:43.680 --> 03:46.480
好

03:46.480 --> 03:48.380
然后接下来的话

03:48.380 --> 03:49.680
我们这边接下来

03:49.680 --> 03:50.680
我们就要看什么

03:50.680 --> 03:51.780
是不是看他了

03:51.780 --> 03:52.180
对不对

03:52.180 --> 03:53.680
看他

03:53.680 --> 03:54.380
好

03:54.380 --> 03:57.580
接下来的话就是看这个方法

03:57.580 --> 03:58.380
request

03:58.380 --> 04:00.380
host timeout

04:00.380 --> 04:00.680
好

04:00.680 --> 04:03.380
我们来到这边

04:03.380 --> 04:05.380
request

04:05.380 --> 04:06.880
这里对不对

04:06.880 --> 04:07.080
好

04:07.080 --> 04:10.380
我们把这个把拿过来

04:10.380 --> 04:11.680
把拿过来

04:11.680 --> 04:12.380
ok

04:12.380 --> 04:13.880
你会看到这个方法的话

04:13.880 --> 04:15.680
其实没有啥

04:15.680 --> 04:17.380
这边接受两个参数

04:17.380 --> 04:18.780
这个不要

04:18.780 --> 04:19.580
ok

04:19.580 --> 04:20.980
接受两个参数

04:20.980 --> 04:21.780
接受两个参数

04:21.780 --> 04:22.980
一个是callback

04:22.980 --> 04:24.080
callback是谁啊

04:24.080 --> 04:27.380
callback是不是就是你那边传入的那个

04:28.380 --> 04:30.980
就是这个handle timeout

04:30.980 --> 04:31.280
对不对

04:31.280 --> 04:38.080
这callback就是传入的这个handle timeout

04:38.080 --> 04:38.880
那这个mns

04:38.880 --> 04:41.880
mns是不是就是你延时的时间

04:41.880 --> 04:45.680
延时的时间

04:45.680 --> 04:46.180
对吧

04:46.180 --> 04:47.380
延时的时间

04:47.380 --> 04:47.580
好

04:47.580 --> 04:48.680
然后接下来的话

04:48.680 --> 04:49.480
这边

04:49.480 --> 04:50.280
这边的话

04:50.280 --> 04:54.180
它是调用了一个叫做local set timeout

04:54.180 --> 04:58.650
我们来看一下这个local set timeout是什么

04:58.850 --> 05:00.250
local set timeout

05:02.050 --> 05:02.650
啊

05:02.650 --> 05:04.650
你会发现这个local set timeout

05:04.650 --> 05:06.250
它这边就是什么

05:06.250 --> 05:08.650
是不是就是这个set timeout

05:08.650 --> 05:08.950
对不对

05:08.950 --> 05:11.050
如果你的set timeout是一个function的话

05:11.050 --> 05:13.150
那这边就是一个set timeout

05:13.150 --> 05:14.650
否则是一个no

05:14.650 --> 05:17.950
也就是这边做了一个这个三目的判断

05:19.750 --> 05:20.850
它这边是方便什么的

05:20.850 --> 05:23.450
方便去引用这个原生的API

05:23.450 --> 05:24.150
看到没有

05:24.150 --> 05:25.950
它这种大型框架

05:25.950 --> 05:26.650
大型框架的话

05:26.650 --> 05:27.750
它考虑的点

05:27.750 --> 05:29.150
就非常非常多

05:29.150 --> 05:30.250
啊

05:30.250 --> 05:31.350
我们回到这边

05:31.350 --> 05:32.750
我们把这边

05:32.750 --> 05:33.850
把这个写到上面吧

05:35.450 --> 05:35.650
啊

05:35.650 --> 05:37.450
这是lock timeout

05:37.450 --> 05:38.650
实际上就是什么呢

05:39.950 --> 05:40.650
实际上

05:42.350 --> 05:46.350
实际上在这个浏览器环境

05:46.350 --> 05:47.450
就是什么

05:47.450 --> 05:50.450
就是set timeout

05:50.450 --> 05:51.050
对不对

05:51.050 --> 05:52.150
说这一块代码

05:52.150 --> 05:53.650
你可以把它理解为什么呢

05:53.650 --> 05:55.350
理解为它就是

05:55.350 --> 05:55.750
因此

05:58.450 --> 05:59.450
因此

06:00.450 --> 06:02.450
上面的代码

06:02.450 --> 06:03.450
代码

06:03.450 --> 06:04.150
啊

06:04.150 --> 06:07.650
就可以看做是什么

06:07.650 --> 06:08.350
就这边的话

06:08.350 --> 06:12.050
有一个这个task timeout id

06:12.050 --> 06:13.250
对呀

06:13.250 --> 06:14.850
名字我都不写这么长啊

06:14.850 --> 06:15.650
不写这么长

06:15.650 --> 06:16.650
就等于一个id

06:16.650 --> 06:17.950
等于一个什么呢

06:17.950 --> 06:19.850
等于一个这个set timeout

06:19.850 --> 06:21.250
对不对

06:21.250 --> 06:22.850
我们知道这个set timeout

06:22.850 --> 06:23.750
接受两个参数

06:23.750 --> 06:24.350
一个是什么

06:24.350 --> 06:25.850
一个是你要做什么事情

06:25.850 --> 06:26.250
啊

06:26.250 --> 06:27.650
方形

06:27.650 --> 06:27.950
对不对

06:27.950 --> 06:28.450
一个是什么

06:28.450 --> 06:29.950
一个是你延时的时间

06:29.950 --> 06:30.650
延时的时间

06:30.650 --> 06:31.750
它这边就是什么

06:31.750 --> 06:33.050
这不就是传入的这个

06:33.050 --> 06:33.450
秒

06:34.850 --> 06:35.650
对不对

06:35.650 --> 06:35.950
好

06:35.950 --> 06:37.650
然后借用它在这边

06:37.650 --> 06:38.150
它在这边

06:38.150 --> 06:39.350
它做什么呢

06:39.350 --> 06:39.850
它做什么呢

06:39.850 --> 06:40.450
你看一下

06:40.450 --> 06:42.350
它这边是不是就是调用callback

06:43.550 --> 06:44.250
对不对

06:44.250 --> 06:45.850
它调用这个callback

06:45.850 --> 06:47.150
你这边传过来的

06:47.150 --> 06:49.250
实际上就是

06:49.250 --> 06:51.550
实际上就是这个handout

06:51.550 --> 06:52.750
调用handout

06:52.750 --> 06:54.150
大家这边传入什么

06:54.150 --> 06:56.850
就传入这个当前的时间

06:56.850 --> 06:57.550
对不对

06:57.550 --> 06:58.750
传入当前的时间

06:58.750 --> 07:01.550
所以整个request hosted timeout

07:01.550 --> 07:02.550
没做什么

07:02.550 --> 07:04.750
就是调用set timeout

07:04.750 --> 07:06.450
因为你是延时任务嘛

07:06.450 --> 07:06.950
对不对

07:06.950 --> 07:07.650
你要延时任务

07:07.650 --> 07:08.550
我要延时

07:08.550 --> 07:09.150
我要延时的话

07:09.150 --> 07:10.150
那我就通过什么

07:10.150 --> 07:11.750
通过set timeout

07:11.750 --> 07:12.950
来进行延时

07:12.950 --> 07:14.850
这个也是比较好理解的

07:14.850 --> 07:15.750
对吧

07:15.750 --> 07:15.850
好

07:15.850 --> 07:16.850
来我们把这个

07:16.850 --> 07:17.650
把他过来

07:19.050 --> 07:19.250
好

07:19.250 --> 07:19.750
放到这边

07:24.480 --> 07:25.480
可以看到

07:26.480 --> 07:28.680
可以看到这个request

07:31.080 --> 07:32.880
request timeout

07:32.880 --> 07:36.280
实际上就是调用什么呢

07:36.280 --> 07:39.080
就是调用set timeout

07:41.080 --> 07:41.580
对吧

07:41.580 --> 07:43.280
它就是调用set timeout

07:43.280 --> 07:43.880
然后

07:45.880 --> 07:48.280
然后在set timeout

07:48.280 --> 07:51.880
set timeout中

07:51.880 --> 07:56.080
调用传入的这个handout timeout

07:57.380 --> 07:57.780
对不对

07:57.780 --> 07:59.380
它这边执行这个callback

07:59.380 --> 08:00.680
callback就是你这边

08:00.680 --> 08:03.380
传的这个handout timeout

08:03.380 --> 08:05.080
你这边再看一下

08:05.080 --> 08:05.880
是不是

08:05.880 --> 08:06.280
对不对

08:06.280 --> 08:08.080
就你这边传的这个

08:08.080 --> 08:09.880
然后在set timeout中

08:09.880 --> 08:13.980
调用传入的handout timeout

08:13.980 --> 08:14.980
那么自然而然的话

08:14.980 --> 08:16.280
那接下来我们就需要去看一下

08:16.280 --> 08:17.880
这个handout timeout

08:17.880 --> 08:19.080
是什么了

08:19.080 --> 08:19.580
对不对

08:19.580 --> 08:20.580
那接下来我们继续

08:22.480 --> 08:24.480
handout timeout

08:24.480 --> 08:25.280
好

08:25.280 --> 08:26.880
然后回到这边

08:30.280 --> 08:30.480
好

08:30.480 --> 08:31.080
把这个关了

08:32.480 --> 08:33.980
handout timeout

08:33.980 --> 08:35.080
在这里对吧

08:35.080 --> 08:35.280
好

08:35.280 --> 08:36.680
把这个把它过来

08:39.160 --> 08:40.560
过来也不多

08:40.560 --> 08:41.060
是吧

08:41.060 --> 08:41.960
也不多

08:41.960 --> 08:42.160
好

08:42.160 --> 08:43.360
这边的话

08:43.360 --> 08:44.160
接收的是什么

08:44.160 --> 08:45.460
什么接收的是当前时间

08:46.460 --> 08:47.560
它接收一个参数

08:47.560 --> 08:48.660
这个是当前时间

08:49.660 --> 08:52.060
当前时间

08:52.060 --> 08:53.760
那这个的话

08:53.760 --> 08:55.760
应该就是一个开关一样的东西

08:55.760 --> 08:56.160
对不对

08:56.160 --> 08:57.960
这边可以找一下

08:57.960 --> 09:00.760
ease host timeout schedule的

09:00.760 --> 09:01.560
是force

09:01.560 --> 09:03.360
它应该是个全局辩量

09:03.360 --> 09:04.660
如果我没记错的话

09:04.660 --> 09:05.660
应该是个全局辩量

09:08.760 --> 09:09.760
在这里

09:09.760 --> 09:10.160
对不对

09:10.160 --> 09:11.360
一开始是force

09:11.360 --> 09:14.060
也是起一个这个开关的作用

09:14.060 --> 09:14.260
好

09:14.260 --> 09:15.460
然后接下来这个

09:15.460 --> 09:18.160
这个上级课是不是讲过的

09:18.160 --> 09:18.760
对不对

09:18.760 --> 09:20.060
这个上级课是讲过的

09:20.060 --> 09:20.860
这个是什么

09:20.860 --> 09:22.160
这个的话是不是去便利

09:24.260 --> 09:25.560
便利

09:25.560 --> 09:26.260
这个什么

09:26.260 --> 09:27.160
是不是这个timeout

09:28.060 --> 09:28.760
timeout queen

09:30.060 --> 09:30.460
对不对

09:30.460 --> 09:31.960
然后将什么

09:31.960 --> 09:34.360
将这个时间已经到的

09:35.760 --> 09:38.160
时间已经到了的

09:38.160 --> 09:39.560
这个延时任务

09:40.760 --> 09:43.960
延时任务放入到哪里

09:45.260 --> 09:47.460
放入到是不是task queen

09:48.760 --> 09:49.560
task queen

09:50.660 --> 09:51.360
对不对

09:51.360 --> 09:51.560
哎

09:51.560 --> 09:53.060
这个是我们上级课讲的

09:53.060 --> 09:54.560
便利timeout queen

09:54.560 --> 09:56.060
将这个时间已经到了的

09:56.060 --> 09:56.960
这个延时任务

09:56.960 --> 09:58.560
放到task queen

09:58.560 --> 09:58.760
好

09:58.760 --> 09:59.760
然后接下来这边

09:59.760 --> 10:01.260
这边那是一个衣服判断

10:01.260 --> 10:03.060
这个这个就很明显是个开关

10:03.060 --> 10:04.260
这个我就不说了

10:04.260 --> 10:04.460
好

10:04.460 --> 10:05.160
然后接下来

10:05.160 --> 10:07.060
这边是一个ease else

10:07.060 --> 10:09.060
我们来看一下这个ease else在做什么

10:09.060 --> 10:09.960
这边就是什么

10:09.960 --> 10:12.360
是不是从这个普通任务队列里面

10:12.360 --> 10:13.960
去获取

10:13.960 --> 10:14.860
对不对

10:14.860 --> 10:19.760
从普通任务队列中

10:19.760 --> 10:21.960
拿一个任务出来

10:22.960 --> 10:25.360
拿一个任务出来

10:25.360 --> 10:26.160
因为你这边的话

10:26.160 --> 10:26.960
已经把什么

10:26.960 --> 10:29.360
已经把这个到期的这个延时任务

10:29.360 --> 10:31.760
是放到这个task queen里面了

10:31.760 --> 10:33.660
那你这个task queen里面就干嘛

10:33.660 --> 10:34.960
是不是就有东西啊

10:34.960 --> 10:35.460
对不对

10:35.460 --> 10:38.360
就有这个需要执行的这个普通的任务

10:38.360 --> 10:38.560
好

10:38.560 --> 10:39.160
拿一个出来

10:39.160 --> 10:40.260
然后接下来干嘛

10:40.260 --> 10:40.960
这边是不是

10:40.960 --> 10:42.860
采用这个调度普通任务的方式

10:42.860 --> 10:44.160
进行调度

10:44.160 --> 10:45.160
对不对

10:45.160 --> 10:51.760
采用调度普通任务的这个方式

10:51.960 --> 10:53.960
进行调度

10:53.960 --> 10:54.060
啊

10:54.060 --> 10:56.160
你看这边这边就调的是request

10:56.160 --> 10:57.760
host callback

10:57.760 --> 10:58.460
还记得吧

10:58.460 --> 11:01.060
就是你这边在调这个普通任务的时候

11:01.060 --> 11:01.960
这边是不是request

11:01.960 --> 11:03.560
host callback

11:03.560 --> 11:04.360
对不对

11:04.360 --> 11:05.460
ok

11:05.460 --> 11:06.060
好

11:06.060 --> 11:08.160
那如果进ease

11:08.160 --> 11:09.660
进ease说明什么

11:09.660 --> 11:12.060
进ease说明就是你这个task queen

11:12.060 --> 11:13.960
什么里面任务已经执行完了

11:13.960 --> 11:14.560
对不对

11:14.560 --> 11:17.460
task queen这个任务队列

11:17.460 --> 11:20.660
任务队列里面是空的

11:21.960 --> 11:22.760
对吧

11:22.760 --> 11:23.460
好是空的

11:23.460 --> 11:24.960
然后接下来我就干嘛

11:24.960 --> 11:27.260
我就再从这个task queen里面

11:27.260 --> 11:30.860
取一个任务出来

11:30.860 --> 11:32.660
再从

11:32.660 --> 11:34.260
再从这个task queen

11:34.260 --> 11:36.760
就我的这个延时任务队列

11:36.760 --> 11:37.660
这个任务队列

11:37.660 --> 11:39.460
这个队列里面

11:39.460 --> 11:43.760
取一个任务出来

11:43.760 --> 11:44.060
对吧

11:44.060 --> 11:45.560
然后这样如果进入ease

11:45.560 --> 11:46.660
进入ease说明什么

11:46.660 --> 11:48.960
是不是说明就是取出来了

11:48.960 --> 11:50.660
取出来了

11:50.660 --> 11:51.260
对吧

11:51.260 --> 11:53.160
你这边取出来的是一个任务

11:53.260 --> 11:54.560
这个是小顶堆

11:54.560 --> 11:56.060
这个我们后面会看的

11:56.060 --> 11:57.260
就这边他是pick

11:57.260 --> 11:58.860
pick代表取任务

11:58.860 --> 12:01.760
puxi代表推入任务

12:01.760 --> 12:03.760
这个我们上节课我们也是看了的

12:03.760 --> 12:04.560
对不对

12:04.560 --> 12:06.060
pick代表

12:06.060 --> 12:07.560
往这边说一下

12:07.560 --> 12:12.060
pick是小顶堆

12:12.060 --> 12:15.860
小顶堆中提供的一个方法

12:15.860 --> 12:17.560
提供的一个方法

12:17.560 --> 12:18.660
它这个在哪呢

12:18.660 --> 12:19.860
在这个位置

12:20.860 --> 12:24.660
在我看一下

12:24.660 --> 12:25.860
在这

12:25.860 --> 12:26.460
在这

12:26.460 --> 12:27.260
你看它这边什么

12:27.260 --> 12:28.660
就是有puxi

12:28.660 --> 12:29.460
有pick

12:29.460 --> 12:30.660
主要就是看这两个

12:30.660 --> 12:31.860
因为这两个是暴露

12:31.860 --> 12:33.460
这三个是暴露的

12:33.460 --> 12:35.060
主要就是puxi

12:35.060 --> 12:35.660
pick

12:35.660 --> 12:37.860
puxi是什么呢

12:37.860 --> 12:39.860
puxi是往这个任务队列里面

12:39.860 --> 12:41.260
推一个任务进去

12:41.260 --> 12:43.260
pick的話是取一个

12:43.260 --> 12:45.560
从这个最小堆里面

12:45.560 --> 12:47.260
这个任务堆里面取一个

12:47.260 --> 12:48.460
ok

12:50.770 --> 12:52.970
好回到我们这边

12:52.970 --> 12:57.370
好这边就是pick是小顶堆提供的这个方法

12:57.370 --> 12:59.170
这个我们后面再讲一个小顶堆的时候

12:59.170 --> 12:59.970
我们会说

12:59.970 --> 13:02.570
这边总之它就是取了这么一个任务出来

13:02.570 --> 13:03.370
取出来了之后

13:03.370 --> 13:04.870
然后接下来继续调用

13:04.870 --> 13:07.770
调用request host timeout

13:07.770 --> 13:08.170
对不对

13:08.170 --> 13:09.370
取出来了

13:09.370 --> 13:11.370
接下来

13:11.370 --> 13:13.770
接下来取出

13:13.770 --> 13:16.570
取出的这个延时任务

13:16.570 --> 13:19.170
延时任务

13:19.170 --> 13:20.370
延时任务

13:20.370 --> 13:22.570
仍然使用什么呢

13:22.570 --> 13:25.970
使用这个request host timeout

13:25.970 --> 13:29.770
进行调度

13:29.770 --> 13:31.970
整个是不是就串起来了

13:31.970 --> 13:32.570
对不对

13:32.570 --> 13:33.570
整个就串起来了

13:33.570 --> 13:38.170
接下来它就又使用这个request host timeout

13:38.170 --> 13:39.570
那就又回到哪里了

13:39.570 --> 13:41.170
是不是又回到这了

13:41.170 --> 13:41.970
对不对

13:41.970 --> 13:42.970
进行调度

13:42.970 --> 13:43.870
ok

13:43.870 --> 13:49.860
好把这个把它过来

13:52.430 --> 13:52.630
好

13:52.630 --> 13:54.830
这边我看一下有没有什么要记的

13:54.830 --> 13:56.230
这边

13:56.230 --> 13:58.830
这个hand timeout里面

13:58.830 --> 14:01.030
hand timeout里面

14:01.030 --> 14:03.430
里面

14:03.430 --> 14:05.830
主要就是什么呢

14:05.830 --> 14:09.030
主要就是这个调用

14:09.030 --> 14:12.830
这个and once timers

14:12.830 --> 14:13.830
方法

14:13.830 --> 14:15.430
该方法

14:15.430 --> 14:17.630
该方法的作用

14:17.630 --> 14:19.630
四江什么

14:19.630 --> 14:23.630
是不是时间已经到了的这个延时任务

14:23.630 --> 14:27.430
放入到这个taskqueen里面

14:27.430 --> 14:28.030
对不对

14:28.030 --> 14:30.230
放到taskqueen里面之后

14:30.230 --> 14:34.030
那么现在这个taskqueen

14:34.030 --> 14:37.230
taskqueen里面就有什么

14:37.230 --> 14:39.630
就有要执行的任务了

14:39.630 --> 14:42.030
要执行的任务

14:42.030 --> 14:44.630
然后然后使用什么

14:44.630 --> 14:49.230
使用这个request host callback

14:49.230 --> 14:53.030
设计进行这个调度

14:53.030 --> 14:54.230
对不对

14:54.230 --> 14:56.030
然后如果

14:56.030 --> 14:59.830
如果这个taskqueen

14:59.830 --> 15:04.430
taskqueen里面没有任务了

15:04.430 --> 15:05.230
没有任务了

15:05.230 --> 15:06.630
然后就再次什么了

15:06.630 --> 15:11.230
再次从这个timeoutqueen里面

15:11.230 --> 15:17.630
timeoutqueen里面去获取延时任务

15:17.630 --> 15:18.830
延时任务

15:18.830 --> 15:21.230
然后通过什么

15:21.230 --> 15:24.230
是不是通过这个request host timeout

15:24.230 --> 15:25.230
进行调度

15:27.230 --> 15:28.830
进行调度

15:28.830 --> 15:29.630
对不对

15:29.630 --> 15:32.030
整个的话就串起来了

15:32.030 --> 15:33.030
整个就串起来了

15:35.030 --> 15:35.830
OK

15:35.830 --> 15:40.230
那么整个这个流程这边过完了

15:40.230 --> 15:41.030
过完了之后

15:41.030 --> 15:43.030
然后咱们这边画一个流身图吧

15:44.830 --> 15:46.830
画一个流身图

15:47.030 --> 15:48.830
方便大家这个理解

15:52.140 --> 15:52.540
这里

15:54.540 --> 15:56.740
然后这个

15:59.540 --> 16:00.740
把这个缩小一点

16:02.540 --> 16:04.140
画在这一眼

16:06.900 --> 16:07.500
OK

16:07.500 --> 16:07.900
好

16:07.900 --> 16:08.700
我们来看一下

16:08.700 --> 16:11.100
首先最开始的是什么

16:11.100 --> 16:13.100
首先最开始的是不是那个

16:15.700 --> 16:17.100
这个对不对

16:17.100 --> 16:18.300
stable

16:19.300 --> 16:20.300
callback

16:20.300 --> 16:21.700
那你开始是这个

16:25.380 --> 16:26.180
是这个

16:28.180 --> 16:28.780
OK

16:28.780 --> 16:29.780
你开始是这个

16:29.780 --> 16:29.980
好

16:29.980 --> 16:30.580
这个的话

16:30.580 --> 16:32.780
它这边是不是要做一个区分

16:32.780 --> 16:33.180
对不对

16:33.180 --> 16:35.580
区分是否是延时任务

16:36.580 --> 16:37.180
所以这边

16:37.180 --> 16:39.180
这边它要做一个区分

16:39.180 --> 16:40.780
是否是延时任务

16:41.980 --> 16:45.180
是否为延时

16:46.580 --> 16:49.380
延时任务

16:49.380 --> 16:51.380
把这个字稍微放大一点

16:51.380 --> 16:54.900
OK

16:54.900 --> 16:55.900
差不多吧

16:55.900 --> 16:56.900
OK

16:56.900 --> 16:59.900
然后把这个图形稍微缩小一点点

17:00.900 --> 17:02.900
这边这样子

17:02.900 --> 17:03.900
首先的话

17:03.900 --> 17:05.900
这边做一个判断

17:06.900 --> 17:08.900
把这个拉下来

17:11.900 --> 17:16.620
把这个加出一点

17:16.620 --> 17:17.620
OK

17:17.620 --> 17:18.620
大致就这样子

17:18.620 --> 17:20.620
首先判断是否是延时任务

17:20.620 --> 17:21.620
如果是

17:21.620 --> 17:22.620
它推入到什么

17:22.620 --> 17:24.620
是否推入到

17:24.620 --> 17:25.620
我们这边

17:25.620 --> 17:28.620
把上级课的文档也把它打开

17:29.620 --> 17:31.620
上级课的

17:31.620 --> 17:32.620
我看上级课

17:32.620 --> 17:33.620
这边

17:36.620 --> 17:37.620
就业片

17:37.620 --> 17:38.620
第二张

17:38.620 --> 17:39.620
这个是吧

17:39.620 --> 17:40.620
好吧

17:40.620 --> 17:41.620
这个也打开

17:41.620 --> 17:46.240
好

17:46.240 --> 17:47.240
然后如果是这个

17:47.240 --> 17:48.240
是延时任务

17:48.240 --> 17:49.240
是延时任务的话

17:49.240 --> 17:50.240
它推入到什么

17:51.240 --> 17:53.240
推入到就是

17:53.240 --> 17:55.240
Timer

17:55.240 --> 17:56.240
对不对

17:56.240 --> 17:58.240
推入到这边

17:58.240 --> 18:00.240
回到我们这里

18:00.240 --> 18:02.240
这边新建一个

18:02.240 --> 18:07.320
这边推入到

18:08.320 --> 18:10.320
推入到这个

18:10.320 --> 18:14.020
Timer Cream里面

18:14.020 --> 18:17.930
推入

18:17.930 --> 18:21.930
推入到Timer Cream

18:21.930 --> 18:23.930
Timer Cream

18:23.930 --> 18:25.930
里面

18:25.930 --> 18:26.930
对不对

18:26.930 --> 18:27.930
这里

18:27.930 --> 18:32.900
拉过来

18:32.900 --> 18:37.790
这个是4的情况下

18:37.790 --> 18:38.790
Yes

18:38.790 --> 18:43.730
OK

18:43.730 --> 18:45.730
如果不是延时任务

18:45.730 --> 18:46.730
不是延时任务的话

18:46.730 --> 18:47.730
这边就推入到什么

18:47.730 --> 18:49.730
是否推入到这个

18:49.730 --> 18:51.730
Timer Cream

18:51.730 --> 18:52.730
对不对

18:52.730 --> 18:57.680
这边是Timer Cream

18:57.680 --> 18:59.680
Timer Cream

18:59.680 --> 19:00.680
OK

19:00.680 --> 19:05.040
好吧

19:05.040 --> 19:07.040
这个上了

19:07.040 --> 19:10.040
这边是Timer Cream

19:10.040 --> 19:12.040
Timer Cream

19:12.040 --> 19:13.040
对不对

19:13.040 --> 19:15.040
这个是推入到Timer Cream里面

19:15.040 --> 19:22.900
OK

19:22.900 --> 19:29.170
这边是推入到Timer Cream

19:29.170 --> 19:33.500
Timer Cream

19:33.500 --> 19:35.500
这个是非延时任务

19:35.500 --> 19:36.500
No

19:36.500 --> 19:39.500
首先做一个这样子的判断

19:39.500 --> 19:40.500
好

19:40.500 --> 19:41.500
完成之后

19:41.500 --> 19:42.500
然后接下来这边

19:42.500 --> 19:44.500
这边的话就应该是什么

19:44.500 --> 19:46.500
我们来看一下

19:46.500 --> 19:48.500
这边接下来的话

19:48.500 --> 19:51.500
就应该是Request

19:51.500 --> 19:52.500
是不是就是应该是这个

19:52.500 --> 19:54.500
Request Host Back

19:54.500 --> 19:55.500
这个callback

19:55.500 --> 19:56.500
对不对

19:56.500 --> 19:58.500
接下来它就是调用它

19:58.500 --> 19:59.500
卡住了

19:59.500 --> 20:02.500
接下来就应该是调用它

20:02.500 --> 20:04.500
回到我们这边

20:04.500 --> 20:05.500
好

20:05.500 --> 20:09.460
再来一个

20:09.460 --> 20:10.460
等一下啊

20:10.460 --> 20:12.460
这个有点太粗了

20:12.460 --> 20:13.460
我们重新

20:13.460 --> 20:14.460
把它删了

20:14.460 --> 20:15.460
重新

20:15.460 --> 20:18.460
这边的话就是应该是Request

20:18.460 --> 20:21.460
The Host Callback

20:21.460 --> 20:22.460
是不是这样子

20:22.460 --> 20:23.460
对不对

20:23.460 --> 20:25.460
它就调用这个

20:25.460 --> 20:28.460
接下来是调用这个

20:28.460 --> 20:29.460
好

20:29.460 --> 20:30.460
这边一边先

20:30.460 --> 20:33.460
拉下来

20:33.460 --> 20:34.460
OK

20:34.460 --> 20:36.460
这边的话它就是调用什么

20:36.460 --> 20:38.460
它这边的话就是调用Request

20:38.460 --> 20:40.460
The Host Timeout

20:40.460 --> 20:41.460
对吧

20:41.460 --> 20:42.460
它就应该是这个

20:42.460 --> 20:43.460
延时任务这边

20:43.460 --> 20:45.460
它就是调用Request

20:45.460 --> 20:47.460
The Host Timeout

20:47.460 --> 20:48.460
好

20:48.460 --> 20:51.460
这边是Timeout

20:52.460 --> 20:53.460
对不对

20:53.460 --> 20:54.460
好

20:54.460 --> 20:55.460
这边

20:55.460 --> 20:56.460
先到这里吧

20:56.460 --> 21:00.110
好

21:00.110 --> 21:02.110
这边是调用这个

21:02.110 --> 21:03.110
好

21:03.110 --> 21:05.110
接下来我们先把那个

21:05.110 --> 21:07.110
稍微缩小一点点

21:07.110 --> 21:08.110
好

21:08.110 --> 21:09.110
接下来的话Request

21:09.110 --> 21:11.110
The Host Callback

21:11.110 --> 21:13.110
下一步这里面是调什么

21:13.110 --> 21:14.110
我们看一下

21:14.110 --> 21:16.110
Request The Host Callback

21:16.110 --> 21:17.110
这边

21:17.110 --> 21:19.110
它主要就是调用这个

21:19.110 --> 21:20.110
对不对

21:20.110 --> 21:21.110
调用这个Schedule

21:21.110 --> 21:22.110
Perform

21:22.110 --> 21:24.110
Walk until dead night

21:24.110 --> 21:25.110
好

21:25.110 --> 21:26.110
回到我们这边

21:26.110 --> 21:28.110
新建一个

21:28.110 --> 21:29.110
好

21:29.110 --> 21:32.110
这边它就是调用这个

21:32.110 --> 21:34.110
这稍微把变大点

21:34.110 --> 21:35.110
这是20

21:35.110 --> 21:36.110
好

21:36.110 --> 21:37.110
把这个也变成20

21:37.110 --> 21:40.060
OK

21:40.060 --> 21:41.060
好

21:41.060 --> 21:42.060
这边它就是调用这个

21:42.060 --> 21:45.060
这个它主要的作用是什么

21:45.060 --> 21:47.060
这边一层一层的

21:47.060 --> 21:49.060
这边过来

21:49.060 --> 21:51.060
这个Schedule

21:51.060 --> 21:53.060
Perform until

21:53.060 --> 21:55.060
Walk until dead night

21:55.060 --> 21:56.060
这个

21:56.060 --> 21:57.060
这个它的主要作用是什么

21:57.060 --> 21:58.060
它主要就是

21:58.060 --> 22:00.060
创建这个Message

22:00.060 --> 22:02.060
在这边

22:02.060 --> 22:04.060
就是创建这个Message channel

22:04.060 --> 22:05.060
对不对

22:05.060 --> 22:06.060
这边主要就是

22:06.060 --> 22:08.060
创建Message channel

22:08.060 --> 22:09.060
好

22:09.060 --> 22:11.060
这边加一个文字

22:11.060 --> 22:13.060
主要就是

22:13.060 --> 22:15.060
创建

22:15.060 --> 22:16.060
什么呢

22:16.060 --> 22:17.060
Message channel

22:17.060 --> 22:19.060
这个是这个方法

22:19.060 --> 22:21.060
做的事情

22:21.060 --> 22:22.060
好

22:22.060 --> 22:23.060
然后接下来

22:23.060 --> 22:24.060
Message channel

22:24.060 --> 22:25.060
创建好了之后

22:25.060 --> 22:26.060
然后接下来

22:26.060 --> 22:27.060
下一步

22:27.060 --> 22:28.060
下一步的话

22:28.060 --> 22:29.060
Message channel

22:29.060 --> 22:30.060
完了之后

22:30.060 --> 22:31.060
它是调用什么

22:31.060 --> 22:32.060
是不是调用这个

22:32.060 --> 22:34.060
Perform

22:34.060 --> 22:36.060
Walk until dead night

22:36.060 --> 22:37.060
好

22:37.060 --> 22:38.060
调用这个

22:38.060 --> 22:39.060
好

22:39.060 --> 22:42.850
回到这边

22:42.850 --> 22:44.850
调用这个

22:44.850 --> 22:47.800
好

22:47.800 --> 22:48.800
这边一个箭头

22:48.800 --> 22:49.800
只过来

22:49.800 --> 22:50.800
对吧

22:50.800 --> 22:51.800
好

22:51.800 --> 22:52.800
这个它的作用是什么

22:52.800 --> 22:53.800
我们来看一下

22:53.800 --> 22:54.800
Perform Work

22:54.800 --> 22:55.800
这边

22:55.800 --> 22:57.800
这边主要就是调用什么

22:57.800 --> 22:58.800
所以调用这个

22:58.800 --> 22:59.800
Schedule

22:59.800 --> 23:01.800
然后host callback

23:01.800 --> 23:02.800
这边继续

23:02.800 --> 23:07.460
调用这个

23:07.460 --> 23:08.460
Schedule

23:08.460 --> 23:10.460
把这个放大一点

23:10.460 --> 23:13.660
对吧

23:13.660 --> 23:15.660
它主要是调用这个

23:15.660 --> 23:16.660
Schedule

23:16.660 --> 23:17.660
好

23:17.660 --> 23:18.660
那Schedule里面

23:18.660 --> 23:19.660
其实就是在调用什么

23:19.660 --> 23:20.660
所以调用这个

23:20.660 --> 23:21.660
Flash Walk

23:21.660 --> 23:24.040
对吧

23:24.040 --> 23:25.040
Schedule里面

23:25.040 --> 23:26.040
然后

23:26.040 --> 23:27.040
我们来看一下

23:27.040 --> 23:28.040
这里面实际上就是什么

23:28.040 --> 23:29.040
所以就是Flash Walk

23:29.040 --> 23:31.040
Flash Walk里面是什么

23:31.040 --> 23:33.040
Flash Walk里面

23:33.040 --> 23:34.040
我记得就是

23:34.040 --> 23:36.040
主要就是在调用这个

23:36.040 --> 23:37.040
Walk Loop

23:37.040 --> 23:38.040
对吧

23:38.040 --> 23:39.040
Flash Walk

23:40.040 --> 23:42.040
Flash Walk

23:42.040 --> 23:48.520
嗯

23:48.520 --> 23:49.520
这边

23:49.520 --> 23:54.200
Flash Walk

23:54.200 --> 23:55.200
Flash Walk

23:55.200 --> 23:57.200
这边调用Flash Walk

23:57.200 --> 23:58.200
而Flash Walk里面

23:58.200 --> 24:00.200
主要是在调这个Walk Loop

24:02.200 --> 24:04.200
主要是Walk Loop

24:09.070 --> 24:11.070
Walk Loop

24:11.070 --> 24:13.070
是不是这样一层一层的

24:13.070 --> 24:14.070
对不对

24:14.070 --> 24:16.070
有同学会觉得就是

24:16.070 --> 24:18.070
他为什么设计的这么麻烦对不对

24:18.070 --> 24:20.070
你直接从这儿跳到这儿不就完了吗

24:20.070 --> 24:21.070
对不对

24:21.070 --> 24:22.070
他作为一个大型框架

24:22.070 --> 24:23.070
他每一步

24:23.070 --> 24:25.070
他会做各种各样的这种判断

24:25.070 --> 24:27.070
就每一步他是为了解决一个问题的

24:27.070 --> 24:28.070
知道吧

24:28.070 --> 24:30.070
是为了解决一个问题的

24:30.070 --> 24:31.070
像这种大型框架

24:31.070 --> 24:32.070
你看他那种开关

24:32.070 --> 24:34.070
是不是都有很多啊

24:34.070 --> 24:35.070
对不对

24:35.070 --> 24:36.070
开关都有很多

24:36.070 --> 24:38.070
这个这个

24:38.070 --> 24:40.070
把这个箭头弄弄弄弄弄

24:40.070 --> 24:41.070
弄矮一点

24:41.070 --> 24:43.070
不然一会儿不太好截图

24:43.070 --> 24:46.280
OK

24:47.280 --> 24:48.280
把他这样子

24:48.280 --> 24:49.280
箭头稍微

24:50.280 --> 24:51.280
不要那么

24:51.280 --> 24:52.280
不那么高

24:52.280 --> 24:53.280
OK

24:53.280 --> 24:54.280
Walk Loop

24:54.280 --> 24:55.280
然后接下来这边

24:55.280 --> 24:57.280
这边是不是就是不断的形怀

24:57.280 --> 24:58.280
对不对

24:58.280 --> 24:59.280
我们看这个Walk Loop

24:59.280 --> 25:00.280
Walk Loop

25:00.280 --> 25:02.280
他这边就是会这个不停的进行一个判断

25:02.280 --> 25:04.280
如果不符合要求的话

25:04.280 --> 25:05.280
他这边就弹出去了

25:05.280 --> 25:06.280
如果符合要求

25:06.280 --> 25:08.280
我们看一下Walk Loop

25:08.280 --> 25:10.280
Walk Loop这边

25:11.280 --> 25:12.280
嗯

25:12.280 --> 25:14.280
如果符合要求

25:14.280 --> 25:15.280
在哪来着

25:15.280 --> 25:17.280
我看这边是Walk Loop

25:17.280 --> 25:18.280
对就是这

25:18.280 --> 25:19.280
这边如果不符合要求

25:19.280 --> 25:20.280
这边是不是Break

25:20.280 --> 25:21.280
对出去

25:21.280 --> 25:22.280
如果符合要求

25:22.280 --> 25:23.280
大家这边就执行

25:23.280 --> 25:24.280
执行这个任务

25:24.280 --> 25:25.280
就这一句

25:26.280 --> 25:27.280
对不对

25:27.280 --> 25:28.280
执行任务

25:28.280 --> 25:29.280
执行完了之后

25:29.280 --> 25:31.280
然后接下来他继续干嘛

25:31.280 --> 25:33.280
继续进行一个调度

25:34.280 --> 25:36.280
接下来的话这边

25:36.280 --> 25:37.280
这边就是

25:37.280 --> 25:39.280
把这个延时

25:39.280 --> 25:40.280
对列里面的任务

25:40.280 --> 25:42.280
拿到这个Task Cream里面

25:42.280 --> 25:44.280
继续进行一个这个执行

25:44.280 --> 25:45.280
这是关于这个Walk Loop

25:47.280 --> 25:48.280
好

25:48.280 --> 25:49.280
然后接下来这边

25:49.280 --> 25:50.280
这边的话是这个

25:50.280 --> 25:51.280
我这边写一下

25:51.280 --> 25:54.280
这边就是执行

25:54.280 --> 25:56.280
不停的执行任务

25:56.280 --> 26:00.980
不停的执行任务

26:00.980 --> 26:01.980
执行任务

26:01.980 --> 26:03.980
只要没到时间

26:03.980 --> 26:06.980
应该说就是只要没到时间

26:06.980 --> 26:10.980
只要没有到时间

26:10.980 --> 26:11.980
这个时间指的是什么

26:11.980 --> 26:14.980
就是我不需要把那个就是

26:14.980 --> 26:16.980
全线归还给这个主线称

26:16.980 --> 26:17.980
对不对

26:17.980 --> 26:18.980
还没有到那个时间

26:18.980 --> 26:20.980
那我这边就不停的执行任务

26:20.980 --> 26:22.980
把这个任务对列给他清空

26:25.980 --> 26:26.980
好

26:26.980 --> 26:27.980
然后接下来的话

26:27.980 --> 26:28.980
这边这边是

26:28.980 --> 26:29.980
Request Host Timeout

26:29.980 --> 26:30.980
我们来看一下

26:30.980 --> 26:31.980
Request

26:31.980 --> 26:37.500
Request Host Timeout

26:37.500 --> 26:39.500
这边的话实际上就是在干嘛

26:39.500 --> 26:42.500
这边是不是就是在设置这个timeout

26:42.500 --> 26:43.500
对不对

26:43.500 --> 26:45.500
这边主要就是设置timeout

26:45.500 --> 26:50.610
主要就是

26:50.610 --> 26:54.610
主要就是设置

26:54.610 --> 26:57.610
是set timeout

26:57.610 --> 26:58.610
对不对

26:58.610 --> 26:59.610
设置完了之后

26:59.610 --> 27:01.610
然后接下来他这边调用什么

27:01.610 --> 27:03.610
调用这个hand timeout

27:03.610 --> 27:04.610
对不对

27:04.610 --> 27:09.330
调用这个hand timeout

27:09.330 --> 27:11.330
好

27:11.330 --> 27:12.330
调用这个

27:12.330 --> 27:14.330
hand timeout

27:14.330 --> 27:15.330
好

27:15.330 --> 27:16.330
hand timeout里面干嘛

27:16.330 --> 27:18.330
我们把这边指过来

27:20.330 --> 27:21.330
把这边指过来

27:22.330 --> 27:23.330
好

27:23.330 --> 27:24.330
hand timeout里面干嘛

27:24.330 --> 27:26.330
hand timeout这边

27:26.330 --> 27:28.330
这边实际上就是干嘛

27:28.330 --> 27:31.330
实际上就是去调度

27:31.330 --> 27:32.330
对不对

27:32.330 --> 27:33.330
在这里调度

27:33.330 --> 27:35.330
Request Host Callback

27:35.330 --> 27:36.330
有时候这边的话

27:36.330 --> 27:38.330
实际上我们应该这样子

27:40.330 --> 27:41.330
这样子

27:41.330 --> 27:43.330
把他往上移动一点

27:43.330 --> 27:44.330
这样子

27:44.330 --> 27:45.330
好

27:45.330 --> 27:46.330
然后接下来他这边

27:46.330 --> 27:47.330
实际上就去调度什么

27:47.330 --> 27:49.330
调度他

27:49.330 --> 27:50.330
对不对

27:50.330 --> 27:51.330
实际上就是调度他

27:51.330 --> 27:54.330
这边整个这个是不是就连过来了

27:54.330 --> 27:55.330
对不对

27:55.330 --> 27:56.330
整个这个流程度

27:56.330 --> 27:58.330
大致就是这个样子的

27:58.330 --> 28:01.330
但他这边会涉及到一些判断

28:01.330 --> 28:02.330
这个work loop里面

28:02.330 --> 28:03.330
他会进行一个判断

28:03.330 --> 28:04.330
对不对

28:04.330 --> 28:06.330
如果你这个必须要归还主线程的

28:06.330 --> 28:07.330
他就跳出去了

28:07.330 --> 28:09.330
否则他就一直执行

28:09.330 --> 28:10.330
执行完了之后

28:10.330 --> 28:11.330
就是没执行完了

28:11.330 --> 28:12.330
他这边又过来

28:12.330 --> 28:13.330
对不对

28:13.330 --> 28:14.330
又过来

28:14.330 --> 28:15.330
再下来

28:15.330 --> 28:16.330
好

28:16.330 --> 28:18.330
这个是整个这个流程图

28:18.330 --> 28:20.330
给大家解个图

28:20.330 --> 28:28.060
OK

28:28.060 --> 28:29.060
解个图

28:32.060 --> 28:33.060
好

28:33.060 --> 28:34.060
给大家放到这边

28:34.060 --> 28:35.060
流程图

28:35.060 --> 28:38.060
就是scheduler

28:38.060 --> 28:40.060
scheduler

28:40.060 --> 28:41.060
这一块

28:41.060 --> 28:42.060
这一块

28:42.060 --> 28:44.060
大致的

28:44.060 --> 28:47.060
大致的这个流程图

28:47.060 --> 28:48.060
如下

28:49.060 --> 28:50.060
OK

28:50.060 --> 28:52.060
就这么一个图

28:52.060 --> 28:54.060
把这个图稍微缩放一下

28:54.060 --> 28:59.260
缩放到50%

28:59.260 --> 29:00.260
OK

29:00.260 --> 29:01.260
差不多

29:01.260 --> 29:02.260
OK

29:02.260 --> 29:04.260
大致就是这样子的一个流程图

29:04.260 --> 29:05.260
大家可以下去的话

29:05.260 --> 29:07.260
把这个scheduler

29:07.260 --> 29:09.260
这一块自己再看一下

29:09.260 --> 29:11.260
我们整个这个scheduler

29:11.260 --> 29:12.260
这一块

29:12.260 --> 29:14.260
我们就带着大家把他就过完了

29:14.260 --> 29:17.260
这个调度普通任务和延时任务

29:17.260 --> 29:18.260
我们下几颗

29:18.260 --> 29:19.260
下几颗的话

29:19.260 --> 29:20.260
我们就把这个来看一下

29:20.260 --> 29:21.260
哪个呢

29:21.260 --> 29:22.260
就这个

29:22.260 --> 29:25.260
这个小顶堆的这个算法

29:26.260 --> 29:27.260
就你看他这边的话

29:27.260 --> 29:29.260
在这个推入任务的时候

29:29.260 --> 29:30.260
用的是铺鞋

29:30.260 --> 29:31.260
对不对

29:31.260 --> 29:32.260
大家取出任务的时候

29:32.260 --> 29:33.260
用的是什么

29:33.260 --> 29:34.260
是屁股

29:34.260 --> 29:35.260
这个刚才我给他说

29:35.260 --> 29:36.260
他这边是什么

29:36.260 --> 29:37.260
是这边

29:37.260 --> 29:38.260
对不对

29:38.260 --> 29:39.260
这边这边的话

29:39.260 --> 29:40.260
铺鞋和屁股

29:40.260 --> 29:41.260
那么下几颗

29:41.260 --> 29:42.260
下几颗我们把这个

29:42.260 --> 29:43.260
小顶堆这个算法

29:43.260 --> 29:44.260
我们把他看一下

29:44.260 --> 29:45.260
把他看一下

29:45.260 --> 29:46.260
OK

29:46.260 --> 29:48.260
好这期课的话就到这里

29:48.260 --> 29:49.260
再见

